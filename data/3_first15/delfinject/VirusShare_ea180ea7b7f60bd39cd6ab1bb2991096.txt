pop
data16
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fcomip
mov
add
dec
outsb
je
addr16
and
iret
scas
xchg
ffreep
pop
cs
jns
insb
daa
push
outsl
jb
ds
fs
orb
movsl
imul
add
or
push
je
sub
or
hlt
push
in
lret
cmpsb
imul
in
dec
xor
neg
xor
pop
push
dec
bound
arpl
pop
sbb
mov
jae
insl
sbb
xchg
dec
mov
popaw
arpl
add
incl
add
inc
and
clc
jmp
in
add
adc
fmul
int3
inc
mov
cmpsb
push
pop
nop
xchg
gs
loopne
jno
add
inc
rcr
ds
mov
adcb
pop
adc
pop
sub
fs
clc
jle
or
repnz
pop
cld
xor
dec
jmp
das
vmread
and
and
orl
pusha
mov
xor
and
xor
and
and
and
sub
and
sbb
xor
and
and
and
and
add
sub
enter
les
add
mov
imulb
je
movzwl
mov
aaa
inc
pop
ret
data16
xchg
enter
clc
pmuludq
and
in
std
enter
mov
add
push
mov
insb
mov
test
jne
xor
pop
leave
mov
mov
push
xor
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
in
div
fistl
mov
add
scas
mov
mov
xchg
lods
test
xchg
jnp
out
aas
mov
mov
mov
or
adc
add
add
or
adc
out
cmp
push
push
push
mov
mov
mov
mov
add
outsl
pop
mov
mov
out
push
or
push
or
ret
repnz
add
mov
push
or
inc
add
adc
fistpll
pop
jne
aaa
sub
fistpll
jmp
loope
mov
shrl
cmp
pop
push
outsl
aas
js
fidivs
mov
xchg
cmp
jb
sbb
testl
int
bound
jne
mov
dec
pop
mov
mov
dec
ret
ja
imul
jmp
pop
mov
add
pop
repz
jmp
mov
orb
sub
mov
cltd
sub
mov
aam
or
std
jnp
jmp
sbb
scas
sbb
sti
jne
sbb
shrb
and
mov
cmp
mov
or
add
ljmp
fidivrs
add
add
and
push
jg
mov
mov
test
je
cmp
and
adc
icebp
mov
testl
mov
mulb
dec
sub
mov
push
lahf
push
fldt
jne
icebp
push
push
dec
push
nop
cmp
cmpl
in
mov
adc
mov
mov
add
push
and
call
faddl
lds
mov
push
in
out
in
loope
daa
out
ja
mov
add
cmp
ja
cmp
sbb
sub
sbb
sbb
push
or
shr
xor
filds
mov
push
out
jbe
ljmp
sbb
push
mov
and
popa
sbb
pop
or
mov
outsl
ret
ffreep
jg
rorb
lock
sbb
popa
mov
pop
loop
mov
or
lds
mov
cmp
add
and
mov
cmp
or
or
jbe
scas
or
rcll
cmpb
push
out
jmp
ss
je
popf
or
push
jb
repnz
in
inc
add
xor
jmp
in
push
out
sub
fisttps
add
cmp
jae
mov
cmp
xchg
addl
sbb
inc
mov
or
addl
rcrb
add
or
decb
add
add
repnz
pushw
hlt
shll
cmp
jg
inc
xlat
mov
dec
data16
push
in
je
mov
inc
stos
mov
adc
jne
push
pop
fimuls
and
cmp
pop
movsl
fwait
push
scas
lret
and
push
mov
dec
or
jge
cld
or
cmp
pop
lock
jle
adc
stos
mov
cmp
xor
lea
or
sub
add
fcoms
fs
mov
aas
lea
cwtl
call
cld
xchg
jmp
xchg
mov
jne
nop
cmp
ss
or
cmpl
sub
jo
sbb
inc
popf
adc
and
xchg
lea
sub
jo
inc
mov
mov
mov
loope
adc
fidivs
mov
flds
mov
js
mov
pushf
jno
pop
pop
test
je
imul
rol
jo
add
adc
jmp
loop
mov
add
pop
sbb
std
aas
jle
add
aaa
push
push
pushl
mov
push
mov
cmp
or
or
and
mov
and
clc
seta
or
das
mov
xor
jg
hlt
inc
cmp
add
jnp
loopne
jnp
mov
rcrb
pop
pop
js
or
pop
adc
sub
pushf
ret
fcompl
in
jmp
mov
dec
push
sbb
rcrb
int3
shlb
push
and
adc
rcrl
in
out
push
mov
xchg
shrb
imul
mov
je
shll
arpl
jmp
dec
fstpl
movsb
jl
loopne
fistpl
push
cmp
push
mov
jb
or
push
pop
jg
adc
test
jns
add
sar
pusha
in
adc
hlt
jmp
sub
mov
sub
mov
mov
mov
xchg
imul
jb
add
or
mov
cmp
mov
add
mov
cld
mov
jmp
cmp
jl
movl
std
jle
adc
push
inc
daa
add
or
or
mov
or
mov
sub
test
cld
pop
das
mov
adc
jbe
stos
cmpsb
ljmp
jl
or
push
rolb
mov
xchg
or
ret
decb
popl
fsubp
mov
loope
or
mov
cmpsl
sub
ret
add
testb
je
adc
rorl
cmp
cmp
jo
rcrl
test
cli
mov
xor
add
mov
clc
add
and
mov
jne
mov
bound
and
mov
mov
adc
add
into
dec
or
xchg
jno
orb
js
mov
into
jge
loopne
sub
cld
jg
clc
sub
sub
cmp
jge
scas
and
add
fucom
into
cs
std
or
lea
and
pop
clc
and
sub
lds
jnp
dec
pop
stc
add
adc
shlb
or
xlat
les
jnp
or
adc
iret
xlat
mov
mov
add
sub
jo
movsl
jecxz
enter
test
mov
mov
nop
hlt
cmpsb
adc
mov
inc
xchg
pop
mov
sbb
cmp
inc
adc
orl
jmp
jl
jl
mov
jle
mov
pop
mov
in
shll
jle
adc
mov
inc
sbb
or
adc
dec
xor
or
decb
lock
mov
push
sbb
test
icebp
sbbb
pop
cmpsl
lds
xchg
in
sub
add
adc
or
test
sub
sbbb
addl
cwtl
out
subl
add
add
mov
adc
leave
aam
loope
psllq
les
nop/reserved
cmp
popf
add
pop
inc
stos
mov
popa
pusha
pop
pop
rol
pusha
or
mov
jp
inc
sar
cmp
mov
push
adc
or
ljmp
lock
scas
pusha
mov
mov
pop
push
jle
adc
jg,pn
pop
filds
sbb
mov
pop
je
pop
jmp
sub
adc
jne
sbb
dec
jae
movsb
pop
jle
pop
cmp
loopne
mov
movsb
sub
cmpl
adc
inc
add
xor
mov
out
sub
orl
pop
jae
lret
mov
and
leave
jmp
inc
pop
push
stc
repnz
jne
js
dec
mov
lea
or
ret
and
test
xchg
add
pusha
or
je
sti
clc
incl
or
jbe
cmpsl
xor
push
push
mov
mov
add
cmpl
push
cld
lret
cmp
add
mov
jle
jg
mov
jns
movb
pop
inc
mov
shlb
push
or
sub
jmp
mov
jge
inc
cwtl
adc
dec
pop
add
loopne
add
js
xchg
and
jmp
mov
pop
daa
lahf
cmp
movzwl
jnp
add
xor
shrl
xor
arpl
mov
pop
pop
push
push
inc
mov
adc
clc
mov
ljmp
dec
ds
jno
xor
bound
test
jne
test
adc
loope
ja
decl
rcrb
push
add
loopne
push
or
pusha
adc
test
ret
jge
xor
cmp
push
pop
sbb
and
in
ret
cmp
mov
sub
orb
dec
clc
orps
mov
test
je
inc
dec
adc
cli
add
or
orl
jmp
mov
sbb
or
js
push
clc
push
adc
imul
jae
push
adc
mov
pop
mov
lea
push
inc
pop
jle
pop
mov
mov
mov
mov
sub
jge
push
add
cmp
icebp
jle
outsb
rcrl
adc
or
xor
notl
jo
jecxz
adc
add
jp
lea
cmp
add
negl
cmpsb
push
dec
jo
mov
pop
outsb
test
push
sbb
insl
or
out
mov
cmp
rorb
fwait
sbb
pop
cmpb
jl
fmul
pop
jbe
ja
hlt
xor
dec
daa
lret
roll
xor
roll
cmp
add
mov
sbb
movsb
or
sahf
inc
dec
push
add
push
sbb
cmp
jmp
pop
mov
pop
mov
mov
or
jo
ret
add
push
xchg
mov
or
cmp
xchg
ret
and
jmp
add
add
mov
loopne
or
adc
mov
call
cmc
adc
rorb
in
lcall
mov
adc
out
pusha
mov
add
ss
adc
xor
jle
fwait
mov
fstpt
lock
aaa
jno
pop
cmp
xchg
dec
sbb
add
das
decl
adc
fwait
mov
test
jle
call
filds
inc
push
or
add
lret
je,pt
je
std
add
mov
test
je
das
sbb
enter
out
dec
pop
or
mov
ret
push
jmp
pop
xor
add
out
dec
adc
repz
out
in
mov
fidivrs
dec
sbb
orb
aas
daa
adc
add
inc
sbb
sbb
inc
or
ds
adc
rcpps
das
sarb
jecxz
cmp
add
dec
sbb
jp
add
jo
mov
mov
mov
adc
pop
cld
aas
and
adc
addl
push
loope
adc
fbstp
rclb
jmp
add
jp
rolb
push
push
and
xchg
daa
add
push
cs
mov
mov
sub
mov
xchg
lret
jle
cmp
jg
sub
inc
dec
jl
cmp
jg
add
call
cmova
movsb
jmp
mov
leave
jmp
mov
jmp
mov
cmp
xor
test
lock
jecxz
sbb
adc
je
scas
xor
mov
outsl
lahf
sahf
add
or
add
push
push
add
pop
lea
xchg
lea
push
aas
js
xor
inc
xor
aad
aaa
ficomps
cld
aad
fwait
push
addl
push
mov
rcll
and
push
aam
or
outsl
inc
loopne
test
mov
lea
into
sbb
xchg
pop
icebp
ja
jle
js
inc
xor
fcmovne
add
scas
cltd
adc
jmp
sbb
scas
out
sbb
push
repz
roll
xlat
sarl
divl
je
sbb
clc
pop
loope
sub
movsl
scas
and
xlat
xchg
cmp
lea
xor
std
xor
jnp
ds
inc
mov
xchg
and
fnclex
filds
fldcw
mov
das
fimull
fwait
pop
pop
cmpsb
in
or
fld
add
orw
or
dec
fldcw
lea
mov
inc
jne
push
insl
das
ret
adc
push
mov
or
lahf
jle
jmp
sub
lahf
jg
lock
call
stos
jmp
out
pop
cmp
pop
cmp
xorl
addr16
rolb
aaa
inc
in
js
sbbl
pop
add
divb
das
or
and
ret
pop
jne
mov
notb
clc
je
adc
dec
dec
iret
lods
fstpt
pop
mov
cmp
lret
leave
lret
mov
inc
inc
and
dec
and
incl
xor
mov
mov
inc
inc
lds
add
push
shr
je
mov
mov
cmp
jne
fidivrl
rolb
dec
add
pop
add
aaa
fisttpl
lcall
pop
or
loop
push
adc
loop
je
mov
cmp
jne
out
inc
mov
dec
mov
add
adc
idivl
shr
pop
cmp
cmp
jne
shr
dec
adc
mov
push
push
mov
shr
jp
data16
pop
cmp
in
gs
or
mov
filds
or
or
dec
dec
dec
and
dec
dec
dec
sbb
imul
out
int
jg
pop
shl
or
stos
adc
mov
enter
xor
imul
in
arpl
rclb
push
loopne
xchg
cltd
insb
fstpt
push
inc
sub
fistps
andl
or
sub
fidivrl
pop
pop
je
xor
dec
and
mov
and
add
jae
add
lock
or
cmp
ja
lea
push
add
push
incl
dec
je
sarl
jmp
inc
cmc
neg
jle
js
pop
sub
mov
inc
inc
inc
jmp
mov
fildll
out
in
std
andl
xchg
and
add
in
add
or
push
std
cmp
testb
aad
sbb
stc
sbb
add
sub
mov
dec
jne
pop
aaa
ja
dec
aad
add
repz
mov
mov
inc
or
inc
dec
jne
inc
push
or
outsb
jg
inc
jge
dec
je
adc
fdivrp
in
orl
push
ret
jne,pn
xchg
mov
call
pcmpeqb
stc
das
push
lahf
lahf
loope
je
and
xor
push
jae
iret
ror
xchg
jge
mov
xor
bswap
jae
sbb
jmp
fstp
fldt
jl
add
fldz
mov
adc
jg
aas
mov
add
add
pslld
or
ret
mov
adc
leave
dec
jle
xchg
cwtl
push
and
sbb
aas
sti
xor
xchg
and
inc
mov
mov
outsl
lds
daa
sub
test
out
sub
adc
xor
leave
sbb
mov
out
inc
jbe
imul
cmp
mov
mov
bound
in
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
dec
jg
push
or
push
push
int3
into
sbb
rorl
mov
push
pop
test
jg
call
enter
mov
inc
mov
lret
into
pop
inc
test
xchg
clc
js
cmp
sbbl
pop
mov
addr16
leave
repnz
bound
and
push
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
stos
mov
out
cmp
or
mov
pop
out
sub
imul
divl
jl
jg
incl
leave
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
jmp
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
inc
xchg
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
call
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
cmc
mov
and
jmp
repz
mov
subb
and
and
outsb
bound
xor
pop
jo
loope
and
loop
call
cmp
jne
push
pop
and
pop
dec
inc
jge
pop
adc
mov
and
hlt
movzwl
jo
inc
clc
mov
imul
mov
call
xor
push
mov
movl
mov
hlt
push
addr16
add
cmp
cmp
mov
sub
mov
out
mov
jmp
adc
hlt
mov
pop
aas
or
popa
call
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
dec
add
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
push
stos
orl
mov
popf
xlat
mov
xor
mov
inc
jnp
lret
ss
or
pop
mov
or
dec
cld
jne
dec
cld
jmp
clc
mov
xor
out
jne
mov
inc
mov
ret
xor
inc
fdivl
in
lret
loope
and
clc
mov
sbb
or
out
pop
sbb
rcr
jbe
fwait
outsl
test
or
sub
mov
bound
and
mov
and
call
shll
pop
mov
or
push
cld
push
mov
jge
pop
ljmp
rclb
add
stos
pop
sub
jg
mov
push
mov
lea
sbb
in
call
je
pop
mov
add
jae
pop
push
mov
mov
and
ss
sbb
cmp
mov
lods
mov
mov
jbe
sub
test
mov
xchg
jmp
stc
rcl
mov
adc
jb
add
and
loope
loope
shr
sub
mov
add
xchg
push
mov
mov
cld
clc
push
cld
mov
dec
in
xor
aaa
imul
sub
and
loop
mov
out
cltd
subl
mov
cltd
push
push
mov
push
add
cmc
add
pop
lea
xor
jbe
cmp
xlat
dec
setne
and
xor
dec
hlt
outsl
mov
mov
mov
notl
xor
cltd
dec
mov
cmp
jne
xchg
xchg
mov
jb
cmp
fisttpll
or
jne
or
or
inc
inc
fcoml
lds
and
xchg
push
add
jg
les
test
mov
popa
lea
mov
cmp
je
mov
leave
jne
mov
cli
je
or
add
jle
mov
push
cmp
pushl
add
scas
je
pop
in
negb
pop
add
adc
mov
pop
cs
xchg
add
jl
pop
int
aas
jmp
out
mov
int3
mov
cmp
mov
les
sbb
push
push
pop
push
push
adcb
xchg
xor
std
pop
sbb
icebp
dec
ret
adc
pop
or
pop
lahf
mov
jno
pop
mov
xor
lds
fisttpll
bound
jg
movb
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
cs
pushl
push
xor
jecxz
dec
cmp
dec
repz
in
scas
lahf
push
pushf
enter
leave
push
sbb
fwait
repnz
shlb
push
xor
call
jecxz
out
pop
add
mov
jl
and
decl
aaa
adc
mov
mov
movl
icebp
icebp
mov
fistpl
daa
cmp
jns
pop
sub
or
or
gs
pop
test
test
mov
call
pop
sbb
rol
mov
stos
inc
jg
xchg
and
pop
pusha
cmpb
mov
jbe
cwtl
lea
cli
in
push
call
movsb
std
push
pop
pop
push
popa
push
push
cmp
add
mov
into
das
add
add
pop
and
pop
fcmovnbe
or
xlat
pop
push
push
and
or
inc
add
or
jne
movsbl
inc
inc
adc
repz
addr16
push
sbb
push
jecxz
in
inc
jo
add
dec
xor
loop
fdivrl
adc
lret
jecxz
pop
hlt
testl
ljmp
fiadds
push
std
imul
in
mov
jmp
orl
lret
hlt
adc
into
pusha
jns
clc
pop
test
out
push
je
dec
push
jae
sub
ja
js
negl
cmp
pop
ja
shll
or
xor
hlt
fcomps
jne
push
sbb
lock
jns
je
orl
mov
xchg
imul
sbb
push
sub
js
movsb
push
adc
test
pop
jp
xchg
jbe
mov
subb
movl
sbb
cmc
add
cmpsl
xchg
shr
in
cmovno
xor
mov
cmp
shll
push
outsl
je
jnp
nop
arpl
push
add
mov
ja
push
or
lods
pop
add
lds
inc
push
aad
mov
out
sub
repnz
add
fdivrs
dec
fdivs
mov
mov
xor
or
mov
jg
es
btl
rclb
dec
jne
mov
mov
adc
inc
jmp
inc
mov
mov
cmp
lahf
adc
inc
mov
adcb
mov
cmp
lods
bound
enter
jle
inc
inc
mov
arpl
xchg
push
pushf
pop
jmp
movl
or
test
call
inc
jg
and
dec
jp
mov
push
push
push
push
push
add
mov
gs
outsl
inc
stos
and
mov
sahf
sbb
or
pusha
add
jnp
outsb
sub
or
std
xchg
lods
and
pop
mov
mov
lock
xchg
jae
mov
ret
jae
lods
pop
mov
push
xor
cld
jmp
ret
xor
mov
xchg
popf
push
pop
cmp
add
mov
call
xchg
cmc
jg
je
cmp
push
sub
add
cmp
pusha
add
sub
idivl
je
jmp
cmp
sub
adc
push
incb
std
sbb
dec
cmp
mov
jmp
mov
jmp
mov
jmp
fildl
xor
sbb
into
jmp
mov
jmp
mov
jmp
mov
ret
sbb
fldpi
push
mov
cmc
popa
call
push
or
pop
incl
sbb
jecxz
mov
cmpsb
jnp
loope
jno
outsl
jp
jmp
dec
or
cmp
scas
add
lcall
sbb
loopne
dec
mov
or
push
inc
shl
jp
daa
out
or
push
cmp
nopl
mov
sti
mov
or
mov
or
mov
call
cmp
in
or
adc
sbb
cmp
ja
push
loope
lcall
repz
cmp
jne
in
push
test
inc
out
mov
mov
aad
dec
mov
mov
fidivrs
pop
test
jle
dec
mov
inc
fiadds
call
and
loope
loop
out
mov
adc
xchg
jecxz
inc
jns
jo
mov
ss
mov
xor
xchg
cmp
neg
imul
add
sbbl
in
mov
movl
sbb
cmp
cmpl
inc
mov
mov
add
sti
sub
add
add
mov
sbb
mov
ljmp
ss
jne
pop
pop
pop
inc
cwtl
loope
in
pop
sbb
out
ret
nop
testl
add
xchg
or
lea
mov
mov
add
mov
mov
add
sbbb
adc
daa
mov
sti
dec
out
lahf
pop
sarb
mov
fiadds
mov
inc
fisttps
lahf
xor
mov
rolb
popf
outsl
adc
ja
add
aad
sarb
leave
pop
push
cmp
scas
jne
dec
inc
push
cmpw
dec
adc
cmp
mov
add
xor
stos
jmp
roll
cli
lea
xor
xor
pop
ret
mov
push
adc
cmp
add
rcrb
sarl
cmpb
rclb
aas
adc
xchg
testb
pop
mov
call
and
dec
and
adc
data16
insb
loopne
push
mov
or
lock
sub
dec
lea
add
imul
sbb
mov
or
outsl
xor
je
es
insl
push
and
xorl
cmp
add
mov
cmpsl
xor
adc
icebp
lock
ret
push
xchg
rcl
push
inc
cmp
hlt
jl
pop
popl
js
cli
pop
imul
adc
aad
inc
or
push
push
fdivl
aas
xchg
or
push
imul
stc
sar
or
test
mov
sub
test
shl
add
push
mov
push
add
add
dec
xor
or
je,pt
push
jg
jmp
dec
jl
lock
clc
sti
inc
dec
fs
daa
not
mov
push
lea
add
or
jae
or
dec
and
inc
jg
sbb
sbb
xor
das
out
push
jl
pop
pop
dec
sbb
jmp
ja
xchg
adc
xchg
jle
aas
shrb
push
add
lods
mov
adc
add
adc
jo
jmp
and
movl
cmpsl
aaa
jle
mov
mov
js
lea
das
stc
mov
jmp
push
pop
add
cmp
mov
lea
lds
fists
adc
inc
pop
insl
xorb
or
sahf
add
cld
jg
jge
or
fnstcw
dec
jmp
lea
mov
cli
add
sub
call
mov
ds
mov
mov
and
jmp
pop
fwait
testb
mov
pop
jbe
sbb
add
cmp
adc
pop
push
mov
mov
gs
nop
in
and
or
popf
push
shlb
or
je
fistps
shrb
cmp
call
add
pop
sub
jmp
push
cmp
mov
pop
pop
or
or
data16
in
mov
add
es
testb
push
push
insb
sti
xadd
scas
adc
pop
xor
add
add
inc
mov
fwait
adc
fnstcw
xor
es
inc
jmp
xchg
xor
add
aas
sbb
daa
jo
test
lret
mov
ret
loopne
jmp
cld
add
cmp
pop
and
and
and
sub
jae
out
popa
cmpb
shrl
je
cmp
mov
icebp
pop
xor
xor
rorl
add
mov
je
mov
mov
cmp
outsb
lds
push
sbb
out
xchg
std
xchg
mov
mov
jmp
jl
pop
push
jg
xor
xchg
adc
pop
jmp
lds
mov
dec
xchg
mov
jmp
dec
sub
add
cmp
gs
adc
jle
dec
jne
mov
cld
push
decl
jge
and
aaa
add
dec
jmp
and
push
ret
aas
dec
inc
pushf
sbb
add
andb
pop
dec
jne
mov
or
cld
addb
pop
lea
jmp
cmp
adc
xchg
cmp
add
jb
sub
imul
nop
stos
adc
outsl
add
push
cmp
jne
ficoms
cmp
jbe
movsl
and
and
add
into
shr
aam
iret
lods
pop
dec
adc
lods
scas
das
std
dec
testb
add
sahf
bound
lahf
cmp
push
fdivl
mov
adc
pop
adc
dec
icebp
clc
arpl
inc
daa
pop
mov
out
test
pop
sub
sub
mov
jl
cmp
jge
sub
jg
mov
xchg
jae
adc
in
mov
pop
xor
xor
jmp
inc
jmp
and
and
xor
push
lret
jl
sub
sar
cld
mov
mov
add
stc
add
lea
inc
sub
cmp
dec
movsb
push
pop
cli
mov
repnz
sahf
cltd
mov
push
js
mov
mov
sub
xlat
adc
imul
pop
sahf
std
stc
add
gs
cmp
mov
lea
or
pusha
and
clc
mov
jmp
nop
xor
decl
ljmp
mov
inc
jae
adc
adc
test
push
inc
lret
lds
js
aaa
frstor
addl
out
pop
jg
pop
or
dec
out
and
sbb
sub
or
dec
jl
orl
and
push
cmpsb
ret
addr16
sub
arpl
push
or
cli
pop
cmp
ficoms
sbbb
ret
push
push
inc
xor
xor
adc
idivl
lock
cmpsb
push
push
and
test
in
mov
lock
popa
scas
cmpsl
in
cmpsl
outsb
adc
dec
ror
dec
add
scas
mov
add
in
jno
fs
inc
aaa
dec
jmp
pop
insb
sbb
data16
jle
cmp
sub
ffree
cmp
cmp
xorb
or
dec
push
aaa
cld
aaa
cmpsb
das
int3
stos
pop
pushl
mov
and
ret
jno
add
add
lods
outsl
loopne
jl
add
std
mov
cs
pop
add
jb
adc
je
push
push
inc
sbb
sbb
aaa
movsb
jmp
pop
pushaw
and
push
cvtps2pd
or
and
mov
pop
dec
adc
add
mov
enter
xchg
pop
dec
cmp
xchg
pushf
lcall
jno
mov
clc
push
lods
add
add
push
rcll
xchg
jmp
shll
cltd
aaa
and
push
xchg
pop
and
mov
frstor
mov
add
xchg
pushf
push
xchg
jecxz
fnstcw
pop
sbb
lds
pop
inc
inc
pop
inc
sub
inc
add
hlt
mov
push
mov
mov
xchg
ljmp
adc
jno
ja
sub
jg
outsl
or
mov
fimuls
jle
push
add
cmp
je
cmp
je
cmp
je
cmp
je
cmp
add
cmpsl
adc
repnz
cltd
or
ljmp
repnz
testl
jmp
loopne
dec
call
aad
push
cs
add
dec
jnp,pn
mov
cmp
pop
jmp
cmp
mov
sub
mov
or
cmp
addl
nop
pop
sarl
cmpsl
mov
movl
ret
mov
shll
pop
jbe
xchg
lock
fadd
jnp
cmp
loop
add
jg
test
in
mov
mov
nop
cmp
dec
ja
ret
and
outsb
daa
push
lock
add
mov
loopne
pop
enter
jmp
test
mov
sbb
cmp
inc
cmp
and
jmp
ljmp
pop
shr
vmwrite
enter
jg
movnti
adc
inc
ds
sbbl
cmp
cmp
outsl
jp
out
das
mov
xchg
sbb
cmp
fsubrs
dec
cmp
xor
enter
xor
sbb
cmp
sbb
dec
push
or
sbb
leave
and
push
xor
adc
add
cld
push
dec
clc
push
pop
stos
xchg
ds
add
sarl
add
cmp
sbbl
sbb
cmp
mov
or
cmp
loope
cmpl
push
or
jo
jo
in
add
jmp
or
std
jns
add
push
jmp
and
mov
lea
sti
pop
jnp
push
mov
add
or
dec
nop
or
pop
jmp
aas
fidivs
sarl
xor
mov
inc
push
mov
and
pusha
fs
xor
shrb
inc
jo
pop
rcrb
sbb
jmp
push
and
pop
inc
jns
sub
insb
and
mov
in
inc
push
popa
or
fs
xchg
pushf
andb
or
and
xor
mov
sub
daa
imulb
jmp
mov
daa
adc
loop
adc
les
cmp
cmp
cld
daa
or
ja
sti
add
add
inc
ljmp
mov
icebp
mov
aaa
cmp
xchg
fldl
je
cmp
and
or
xchg
pusha
adc
adc
les
arpl
ja
test
flds
xor
sysexit
sub
enter
mov
clc
pusha
and
lcall
mov
pop
push
fistps
and
mov
cld
fs
add
xlat
mov
lret
ret
push
mov
scas
jo
xor
or
pop
or
je
vmwrite
neg
divl
fisubrl
iret
add
sbb
neg
sbb
aad
mov
loopne
xor
shl
rcl
rcl
rcl
cmp
jb
mov
cmp
jb
sub
sbb
inc
loop
pop
test
or
add
div
imul
scas
negl
or
sub
icebp
and
sub
mov
mov
stc
xchg
cli
repnz
es
fcoml
cmpl
jg
xor
or
xchg
shr
setl
mov
pop
sti
lea
aam
adcb
sbb
sarb
xchg
dec
in
fistpl
mov
add
push
mov
inc
dec
aas
mov
jns
mov
jge
xchg
mov
sub
pusha
jl
ret
mov
sarl
rcrb
icebp
std
les
and
jge
test
fisttpll
sbb
rorb
daa
loop
fistps
sbbb
out
push
jp
pop
mov
add
rol
rolb
and
inc
je
xlat
dec
imul
add
xchg
xor
fadds
mov
xor
mov
lea
push
cmp
pop
mov
lcall
lods
pushf
xchg
pop
sbb
push
lock
clc
mov
push
das
pop
push
out
add
das
mov
gs
call
xchg
pop
or
xor
mov
imull
arpl
jnp
in
in
cmp
je
jg
fdivrs
cmp
jne
push
jecxz
decl
lock
fstps
je
sbb
imul
lock
add
xor
inc
loopne
in
mov
pop
rcll
fcos
or
outsb
lock
jge
or
mov
leave
insb
movsb
dec
in
loop
lcall
stos
test
movsl
movsl
pop
or
dec
rorl
push
mov
loopne
add
movl
nop
lods
mov
or
lock
test
flds
ret
cmpsl
jecxz
add
cltd
or
call
inc
aas
push
out
out
test
pop
jo
cmp
jne
ljmp
mov
adc
in
aas
add
outsl
push
xor
jg
fcomip
decl
jne
pop
jnp
loope
in
adc
lods
inc
pop
mov
int
sbb
lds
or
push
push
push
mov
incl
out
js
cmpl
pop
mov
pop
cli
fcoml
xchg
in
sbb
xor
dec
jecxz
or
push
jl
cmp
mov
jo
fsubrl
es
jne
cmp
mov
jl
jbe
mov
repnz
sbb
or
xor
fcomps
add
or
add
pop
sbb
mov
or
ret
jg
mov
jmp
aas
ljmp
mov
out
mov
test
out
xchg
mov
push
clc
js
or
push
cwtl
mov
inc
push
push
ret
and
pop
test
mov
sub
rcll
test
pop
enter
popa
neg
fistpl
cmpb
cmp
js
pop
jne
mov
divb
lret
cmpb
mul
pusha
and
aas
std
cmp
in
jne
movb
fisubrs
mov
inc
add
mov
mov
lock
std
inc
sub
add
inc
cmp
jbe
or
push
sbb
cli
pusha
out
and
fidivs
pop
loop
rorb
fcomip
out
inc
cmp
test
sub
dec
push
push
je
in
pop
mov
jo
rcll
negl
dec
adc
dec
mov
jb
jmp
xor
cs
insb
jbe
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
sub
xorl
add
push
sbb
fcompl
adc
out
and
push
dec
pop
push
pop
and
add
and
ja
sbb
and
andb
jns
faddp
push
push
pusha
call
or
inc
clc
int3
lock
cmpsb
lods
aas
into
mov
add
xor
fisttps
sub
dec
xor
bound
sti
lret
jnp
in
and
popf
push
lods
repz
jno
jnp
mov
mov
testb
jnp
or
jge
jmp
shrl
mov
sarb
sbb
add
sti
in
hlt
dec
cmpb
stos
pop
cmp
jne
adc
xchg
inc
sbbb
shr
add
lahf
push
or
push
fcomi
dec
sbb
fsubrs
je
das
xchg
xor
push
add
mov
das
outsl
data16
popa
jb
mov
mov
insb
gs
aaa
adcb
sub
cwtl
mov
dec
mov
cmp
add
mov
adc
mov
fwait
jge
mov
push
mov
inc
mov
cmpl
push
or
daa
mov
sbb
mov
lret
pusha
aas
sbb
add
mov
mov
mov
les
out
mov
cmp
pop
js
add
dec
add
jo
inc
cmp
and
loop
mov
repz
fdivl
pusha
fwait
lea
and
dec
mov
pop
sub
cmp
ret
cmp
mov
pop
mov
mov
mov
cmp
jne
jb
sbb
jle
xchg
icebp
and
ss
mov
xor
loope
das
sub
daa
xchg
psrad
push
leave
pop
mov
sub
pop
dec
push
inc
lds
sti
loopne
je
sbb
ret
xchg
push
push
mov
hlt
test
fcmovu
lea
mov
pop
ret
sbb
mov
lea
dec
jo
xor
and
psraw
dec
mov
decl
adc
pop
and
les
add
pop
shll
test
inc
mov
js
inc
fists
pop
les
jge
insl
insb
aaa
jp
jp
ja
ret
jbe
and
pop
adc
xchg
mov
ret
inc
icebp
or
or
pop
cltd
loop
xor
mov
mov
and
mov
dec
inc
cmp
ja
mov
inc
jmp
cld
push
jmp
cmp
pop
add
pop
cld
ja
fcmovb
jmp
decb
lret
loopne
sbb
adc
and
sbb
and
lret
xor
push
xor
dec
jmp
popa
add
xor
mov
dec
popa
rolb
test
cmp
jae
cmp
jb
or
cmpsl
inc
hlt
push
or
xor
in
push
shll
add
cmp
lea
loopne
call
mov
add
mov
mov
xor
pminub
pop
push
push
xlat
out
cld
test
loopne
vpmuludq
mov
inc
test
je
mov
dec
cld
or
sbb
aas
and
je
cmp
adc
inc
loopne
add
jne
mov
loop
shl
or
outsl
inc
fimull
dec
dec
cld
mov
outsb
iret
rclb
inc
push
adc
inc
fwait
xor
cmp
or
cmp
add
and
inc
inc
mov
into
fidivs
ret
xor
mov
ja
sbb
push
sbb
xor
jb
inc
sbb
push
pushl
xor
pop
stos
cmc
js
adc
dec
outsb
les
xlat
mov
adc
nop
or
inc
cltd
and
sarb
and
sbb
imul
sub
iret
outsl
daa
or
imul
or
mov
in
sbb
ljmp
nop
push
xchg
js
pop
cs
pop
add
ret
adc
test
xchg
and
xor
add
inc
xor
inc
dec
inc
dec
or
fldenv
loopne
inc
aaa
mov
mov
add
pop
ret
leave
sbb
fimull
lahf
ficoms
adc
test
add
or
cmpl
add
cmp
add
add
fmuls
sbb
adc
push
adc
fs
push
aas
pop
dec
push
lock
or
pop
push
lea
push
push
push
sub
loopne
orb
push
daa
loopne
lock
sbb
daa
xchg
je
and
cmp
repnz
lret
cli
pop
or
pop
incl
dec
mov
sbb
adc
jae
stos
test
pusha
ljmp
subl
out
or
add
inc
mov
xor
jo
and
and
and
insl
ficoms
cmp
xlat
cld
jo
mov
sbb
call
cmp
cmp
pop
dec
add
cmp
inc
and
aam
sub
clc
ja
pop
rolb
cmp
mov
int3
or
mov
fiadds
jmp
mov
rorb
in
test
push
push
pop
push
fdivrl
nop
sahf
mov
xchg
aad
cmpl
adc
jmp
jnp
push
insb
or
jmp
push
mov
sub
aas
xchg
hlt
mov
leave
jne
mov
pop
mov
push
in
inc
cld
or
add
mov
push
sarl
ret
mov
outsb
mull
dec
mov
mov
lcall
mov
mov
push
mov
jl
sub
and
push
or
or
pop
sub
xor
out
push
add
or
cli
mov
push
ja
push
mov
cwtl
ret
inc
add
add
xor
into
push
or
jge
xor
cmp
xor
push
nop
mov
or
push
gs
ja
or
bnd
jns
es
imul
inc
push
in
adc
arpl
inc
gs
jne
je
dec
outsl
je
fucomi
testl
popa
lea
gs
outsl
inc
arpl
or
adc
ret
or
fisttps
in
xor
xor
outsl
insl
bound
outsl
js
imul
imul
inc
arpl
ja
dec
inc
loopne
cli
xor
je
add
ret
es
dec
xchg
sldt
sbb
in
xchg
clc
hlt
lock
in
call
push
loopne
fcoms
ror
nop
or
jb
xchg
mov
enter
xchg
lods
xchg
adc
add
rolb
cmpsl
mov
loopne
push
or
ss
pop
test
push
fs
inc
push
pushf
cwtl
xchg
nop
inc
push
sbb
sbb
jl
sbb
je
insb
sbb
push
inc
push
pop
pop
push
nop
inc
push
sbb
dec
inc
push
sbb
cmp
sbb
xor
sub
fs
inc
sub
fs
inc
push
sbb
adc
inc
push
sbb
or
daa
pop
sbb
cld
xchg
clc
or
enter
in
xor
and
and
and
enter
enter
mov
mov
lods
xor
and
and
and
mov
cmpb
enter
insb
xor
and
and
and
dec
orl
inc
inc
cmp
or
enter
sub
enter
and
enter
sbb
adc
dec
push
xor
rclb
enter
mov
enter
test
enter
mov
or
xchg
nop
mov
test
and
jo
enter
push
or
pop
pop
and
dec
orl
dec
inc
inc
cmp
xor
and
xor
xor
and
and
and
or
or
enter
cld
sbb
xchg
clc
hlt
lock
inc
push
in
call
sbb
orl
push
xchg
dec
aas
dec
push
xor
and
punpcklbw
and
and
sub
or
enter
sbb
xor
and
adc
xor
and
xchg
orl
xchg
clc
inc
push
sbb
in
push
sbb
in
fcompl
fs
inc
fcom
ror
and
push
int3
mov
or
sarb
mov
test
xor
and
sbbl
or
mov
jl
orl
je
insb
push
fs
pop
xor
and
and
and
cmp
xor
inc
xor
and
sbb
fs
popa
prefetcht1
sbb
add
leave
inc
push
add
xchg
clc
and
in
orl
call
xor
and
aam
xor
and
and
and
lods
orl
test
mov
and
and
and
and
insb
orl
push
xor
and
push
xor
and
and
and
sub
or
enter
sbb
xor
and
adc
xor
and
xchg
orl
xchg
clc
inc
push
sbb
in
push
sbb
in
fcompl
fs
inc
fcom
shlb
push
int3
enter
std
jbe
mov
rol
loop
or
rclb
iret
rclb
jg
nop
and
jnp
xor
and
push
or
xor
sub
nop
xor
mov
xorl
add
movswl
mov
or
jge
testl
rclb
cvtpi2ps
xorb
pop
pop
mov
shlb
cld
jl
orl
fdivrs
or
adc
sbb
add
dec
push
aam
call
outsl
mov
test
push
add
add
subb
pop
gs
jo
push
fsubs
pop
cwtl
push
mov
pop
push
dec
sti
mov
push
sbb
add
xchg
ja
push
fs
dec
sbbl
inc
movsl
xchg
pop
or
inc
out
add
inc
mov
out
decl
clc
dec
popa
gs
popa
and
push
dec
inc
inc
dec
add
outsl
in
inc
ret
pop
push
and
dec
pop
inc
ja
cmp
push
dec
pop
and
mov
push
push
pop
sub
arpl
insl
cs
inc
dec
pop
dec
dec
dec
inc
push
das
cmp
xchg
mov
sub
popf
je
cmp
outsb
pop
cmpsb
in
push
js
js
test
inc
jo
mov
icebp
or
enter
hlt
xor
and
and
and
std
orl
jmp
loope
xor
and
jecxz
xor
and
and
and
in
orl
out
out
rcl
or
enter
aam
enter
xlat
enter
fcomp
fisubl
orl
orl
rol
xor
and
ret
les
enter
mov
and
and
int
or
enter
mov
xor
and
and
and
and
mov
mov
xor
and
and
and
xchg
or
stos
lods
aas
jns
dec
push
enter
je
insb
in
fsubrs
add
lds
int3
mov
ljmp
push
call
xchg
or
arpl
je
loopne
imul
outsb
clc
mov
sbb
or
ja
cmpsl
push
and
or
pop
out
adc
mov
pop
and
popa
jo
repnz
test
nop
shlb
cld
call
inc
dec
jne
dec
dec
gs
outsl
jb
xchg
push
shrl
outsl
mov
mov
ja
inc
dec
outsb
mov
enter
je
je
add
xchg
pop
daa
aam
push
add
test
cs
sub
sub
sub
or
mov
test
movsl
pop
scas
test
pop
add
loopne
inc
inc
imul
add
inc
in
nop
fsubrl
das
jg
popa
outsb
addr16
pop
scas
and
dec
jbe
jecxz
add
nop
mov
and
aas
movl
gs
addl
push
jb
js
jbe
imul
jns
aas
scas
cmpsl
pop
sbb
insb
jle
add
xchg
gs
scas
cwtl
push
arpl
rcl
scas
std
adc
sbb
andnps
add
mov
scas
aas
xadd
jo
movswl
imul
movsb
mov
or
pop
push
sbb
ja
inc
mov
jae
fiadds
jnp
mov
js
add
rolb
inc
scas
pop
mov
xchg
loopne
loopne
adc
jae
push
mov
add
adc
jbe
mov
mov
lahf
or
std
nop
adc
scas
lock
inc
push
call
add
or
jo
fidivs
cmp
xlat
enter
xchg
push
push
popa
sbb
and
jge
mov
sub
sub
xor
addb
mov
test
bound
jb
out
loopne
add
push
sub
jo
cmp
add
or
push
fsts
push
xchg
scas
aas
icebp
adc
popa
outsw
push
test
das
lods
jle
add
aaa
xchg
fsubrs
dec
packuswb
leave
in
and
rolb
cmp
sub
jle
mov
pop
adc
ds
filds
mov
push
push
push
sahf
js
mov
jne
int3
add
int
pusha
fcoms
inc
ret
in
das
mov
popa
inc
adc
enter
sahf
fmul
jge
xchg
xchg
pop
lcall
cwtl
cmpsb
insl
jne
push
mov
jnp
sbb
push
adc
sbb
mov
xor
adc
ja
pop
and
dec
push
or
or
insb
jne
xor
cmp
ret
xor
clc
lods
outsb
arpl
cmp
fsin
add
dec
pop
ret
adc
repz
adc
mov
add
cmp
mov
jno
scas
test
and
ret
mov
xchg
add
cmp
ret
sbb
mov
adc
cmp
mov
lahf
sbb
or
mov
mov
mov
enter
popa
addr16
and
gs
fwait
mov
sub
pusha
pop
inc
dec
mov
cli
mov
inc
out
aaa
mov
loopne
add
push
cmp
ja
sub
mov
inc
inc
dec
push
pusha
or
inc
or
or
or
incl
dec
pop
mov
cmp
jbe
cmp
repz
je
movzbl
pusha
xchg
sub
sahf
test
pop
lret
mov
js
repz
jne
xchg
jne
inc
inc
add
aas
push
mov
add
loopne
xor
or
mov
out
and
sti
je
loope
in
adc
pop
out
sbb
gs
or
in
movsb
xchg
and
aad
dec
jge
test
pop
nop
ss
or
xlat
xor
faddp
bound
inc
imul
cmpsl
mov
xor
pop
jo
add
or
rol
push
sbb
xchg
rcrb
out
push
push
adc
jecxz
jo
and
lock
repz
cmpb
jbe
popf
push
cmp
jge
lds
mov
imul
lret
inc
xchg
jno
mov
cmp
xlat
cltd
add
push
push
mov
jns
insb
mov
movsl
mov
pop
mov
lock
mov
mov
add
sub
jb
sub
je
push
das
or
jl
inc
mov
jb
push
outsl
rolb
psubw
out
pop
or
jae
inc
icebp
adc
jmp
jne
bound
out
cmp
sarb
lods
je
mov
inc
dec
ret
adc
ret
mov
shl
icebp
dec
pop
call
cmp
sysret
mov
int
pop
pop
sub
sub
mov
dec
jbe
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
inc
and
fildll
pop
mov
pop
jae
imul
data16
xor
mov
pushl
mov
negl
mov
sbb
xor
jb
gs
add
js
add
fisubs
cmpb
orl
fcoml
add
adc
lock
or
pop
fadd
faddp
fistpll
fildll
filds
fdivr
mov
xor
movsl
lods
push
xchg
sbb
ljmp
loopne
jae
bound
ffree
ffree
ffree
ffree
pop
aad
mov
aad
sub
and
pop
jb
out
or
enter
jbe
cmpsl
pop
cmp
add
push
mov
sbb
pop
xlat
inc
add
lcall
ljmp
dec
or
mov
or
cmpsb
mov
jo
xor
addr16
dec
push
lock
mov
insl
imul
in
add
pusha
cmpsl
mov
mov
pop
outsl
mov
cmp
sub
push
mov
unpckhps
sbb
inc
sti
in
mov
shlb
sbb
int3
mov
add
xchg
mov
dec
fs
mov
fmuls
nop
push
iret
movb
push
sarb
test
jl
inc
sub
outsb
lret
and
mov
xchg
jae
push
cmp
jmp
inc
sarb
adc
push
test
and
jle
lea
out
jns
aas
ss
jg
adc
insl
lock
mov
xchg
add
dec
ss
push
fidivs
pop
jbe
pop
addr16
jb
add
inc
mov
dec
ret
imull
in
popa
or
pop
sbb
movsl
add
bound
test
push
mov
jge
adc
sub
addr16
jmp
and
xchg
rorb
loopne
sbb
ja
or
not
incl
out
cmp
ja
roll
je
pop
xlat
inc
ja
fnstsw
and
add
sub
repnz
and
push
lgs
call
lods
imul
sub
orl
js
pop
push
sub
dec
sub
xlat
sbb
pop
scas
divb
popf
adc
mov
push
dec
pop
sub
lret
sub
xchg
push
insl
bound
jbe
lret
shrb
push
cld
cs
lods
push
cwtl
lret
fsubs
loopne
or
adc
popf
std
addl
xor
js
cmp
repz
add
push
enter
xorb
pop
push
and
sub
loop
dec
or
sub
rol
push
pusha
subl
mov
push
cmp
fdivrs
je
icebp
push
mov
and
pop
cmp
mov
ljmp
mov
mov
sarl
sbb
inc
dec
sti
sbb
popf
jne
dec
sub
mov
inc
ret
pop
and
mov
loopne
fnstcw
and
roll
fisttpl
or
cmpsb
das
movb
add
gs
or
push
adc
push
cmpsb
addr16
dec
mov
lock
push
sbb
push
out
pop
hlt
clc
cld
add
mov
imull
ljmp
mov
hlt
adc
ds
ficoms
xor
ljmp
adc
nop
pop
aam
daa
cltd
movsb
pushl
pop
mov
adc
enter
das
lea
es
mov
xor
ds
movl
mov
xchg
jle
sub
mov
and
andb
cmp
fdivrs
adc
aad
inc
sub
pop
lret
or
sbbl
mov
fildl
pop
adc
fs
cmp
iret
push
ds
adc
aas
xor
fcomps
repz
mov
mov
inc
pop
mov
je
dec
mov
fbld
and
fisttpl
outsl
pusha
xorl
das
xor
xchg
js
dec
pop
jmp
insl
add
in
imul
inc
jg
jne
scas
mov
inc
inc
fidivrl
loopne
inc
inc
dec
je
mov
mov
pop
outsl
js
jge
icebp
jbe
sbb
lods
mov
mov
push
adc
mov
shll
dec
and
fnsave
stos
mov
imul
fisttpll
out
test
dec
aam
xchg
and
mov
cmc
push
daa
shll
inc
jbe
ss
adc
inc
fcoms
push
adc
clc
cmp
jbe
mov
mov
cld
cmp
jne
les
or
ret
add
cmp
mov
repnz
and
fs
pop
fbld
rcrb
sub
mov
cmp
call
mov
adc
adc
and
clc
movsb
add
loop
jae
jge
or
fiadds
bnd
adc
mov
popa
or
or
cmp
adc
insl
sub
js
add
aas
sub
jmp
mov
call
sub
lret
cmp
jne
mov
in
das
hlt
and
lods
jmp
sub
fnstsw
sub
sub
mov
ds
pop
add
pop
adc
jae
xlat
fildll
adc
cmpb
or
lret
ror
jle
aas
jbe
xchg
pop
mov
rep
sbb
cmpl
sbb
add
and
test
jmp
sub
xor
cmp
ja
imul
mov
add
mov
add
pop
dec
adc
cmp
pop
inc
fwait
std
or
jl
rorb
clc
jne
ret
je
xchg
ret
and
mov
lcall
adc
pop
push
pop
pop
jne
lea
mov
fwait
push
add
and
sub
jno
fisubrl
notl
nop
pop
daa
lahf
jg
cs
or
arpl
push
cmpsb
push
mov
xchg
rorb
xor
sub
lea
and
fcompl
je
xchg
xchg
mov
sti
sbb
or
fnstcw
fsubrp
mov
cmpsl
pop
outsl
adc
ss
mov
push
imul
mov
insl
cmp
jne
inc
scas
ret
sbb
add
mov
jae
xchg
test
lock
xor
inc
inc
add
lods
and
jmp
mov
mov
pop
add
jne
aas
and
ja
sub
call
pop
jns
mov
ja
sbb
add
hlt
add
dec
fdivl
or
jmp
jecxz
fcmovbe
movaps
stc
cltd
pop
ds
leave
add
lods
out
sarb
sbb
mov
popf
mov
outsl
mov
stc
negl
mov
or
add
adc
pop
dec
je
dec
jge
mov
mov
test
cmp
jbe
mov
xchg
mov
inc
ret
jp
fdivrl
pop
xabort
pop
mov
mov
mov
inc
iret
dec
sub
stc
rcl
or
xchg
ret
xor
and
pop
int
add
lahf
mov
adc
daa
or
hlt
test
push
es
jp
jge
mov
and
xchg
fdiv
pop
je
adc
sub
jg
cli
jg
xchg
push
pop
test
push
add
into
movsb
push
nop
dec
rolb
rorb
mov
xor
fsubrs
pusha
cmp
clc
jbe
testl
out
ja
or
sbb
out
or
fidivs
cli
jl
jmp
add
sbb
test
lret
lea
popa
xchg
loope
sahf
add
mov
jp
push
xor
stos
or
xor
call
jge
mov
neg
jmp
or
leave
mov
stos
xchg
push
mov
mov
js
popf
mov
inc
dec
dec
incl
jg
dec
mov
stos
cmp
jne
pop
pop
loop
or
aam
sub
sub
sti
mov
subb
mov
hlt
mov
repnz
aad
sub
data16
mov
inc
aas
adc
inc
add
pextrw
sbb
pop
jle
mov
cs
pop
stos
mov
jb
rorb
mov
mov
mov
sub
push
je
sbb
mov
fcoml
jp
mov
push
aas
ds
push
add
ja
js
cli
fimuls
mov
add
lea
push
pusha
sti
negl
or
rorl
popf
xor
xor
xchg
pop
mov
jge
test
dec
inc
dec
lods
or
xor
jge
push
pop
idivb
insl
adc
dec
aam
jmp
or
sbb
sbb
dec
stos
cli
sti
loope
jg
cmp
sbb
stos
jmp
fstpt
out
inc
mov
loop
push
adc
push
popa
jge
fiadds
inc
clc
dec
test
mov
jbe
push
mov
fimuls
add
sbb
sub
xlat
add
rorl
mov
mov
mov
movsb
insl
or
call
cmp
mov
fcoms
add
je
loopne
ljmp
mov
inc
test
jne
or
pop
call
stos
xor
int
push
sti
add
je
inc
jne
pop
xchg
jle
jne
ret
xchg
repz
adc
shrb
sbb
mov
loope
fisttpll
fwait
push
xchg
iret
mov
js
cmp
je
push
push
cmp
xlat
add
pop
pop
sbb
inc
pop
fcomi
or
mov
inc
loop
push
mov
test
adc
add
sub
xor
and
and
adc
and
sub
inc
sub
out
and
or
sub
sbb
mov
es
sub
mov
cmp
xor
sub
xor
fldenv
popf
mov
push
jge
add
cmp
imul
adc
sbb
lret
mov
and
jne
testw
shlb
jle
lock
jno
inc
xor
inc
inc
push
sub
in
in
fldt
jne
imul
pop
sbb
jle
cld
test
loope
adc
add
frndint
cli
stos
mov
fldt
fstsw
fwait
mov
idiv
push
lea
fidivl
jne
lea
mov
mov
sub
xchg
shr
and
add
push
out
icebp
fildll
cmp
xor
stos
mov
add
jns
fwait
cli
adc
lcall
pushf
or
cmpb
jb
movb
aas
sti
add
or
ja
jmp
data16
popa
xor
shrl
jmp
mov
xor
jp
loopne
or
shr
mov
add
popa
push
adc
dec
sbb
push
adc
xor
rorl
je
xor
adc
or
or
ds
inc
push
pop
mov
cltd
std
fistpll
fidivl
repnz
add
and
loopne
push
in
insl
or
xchg
sbb
fcomip
dec
or
mov
sti
xchg
mov
test
popf
sbb
incb
dec
jne
popf
and
jne
dec
sub
cmp
fsubr
mov
add
aas
and
js
jp
ljmp
enter
cmpb
js
cmp
divl
pop
jmp
jb
loopne
mov
sbb
inc
and
jg
or
add
push
unpckhps
push
ds
fyl2x
fwait
add
mov
mov
sub
or
mov
test
popa
jne
inc
sbb
dec
and
fistpll
sub
pop
add
jg
jne
mov
pushf
xor
jg
mov
fchs
xor
add
aas
jmp
cmp
jle
fstpt
cmp
mov
cmp
sub
les
jg
and
push
int3
add
and
xorl
jae
fimull
out
arpl
add
push
idiv
fchs
sbb
stc
daa
push
push
inc
imul
push
outsl
add
pop
cmp
add
inc
sbb
inc
sarb
or
jmp
rcrb
dec
lahf
in
sub
push
inc
xor
inc
adc
loopne
inc
push
mov
in
sub
xchg
mov
mov
push
pop
fbld
cmp
aam
fldt
fstpl
fwait
test
pop
push
flds
and
js
in
mov
fcmovnb
fldl
inc
addb
adc
mov
xor
pop
xchg
push
mov
cwtl
mov
or
clc
xchg
nop
pop
add
sbb
sub
fbstp
or
cmp
inc
stc
inc
mov
ds
dec
push
mov
out
add
shlb
out
jbe
jge
ret
cmp
mov
xor
fstpl
fwait
mov
pop
out
pop
hlt
arpl
jbe
push
lret
movsb
dec
fbld
mov
fldl
pop
push
mov
ljmp
ds
jo
fnstsw
shrb
xchg
fs
jg
add
jne
dec
sub
js
out
xchg
mov
mov
dec
outsb
push
cmp
popf
dec
ficomps
sub
xlat
and
ja
mov
and
enter
add
jg
mov
mov
imulb
cld
ds
adc
mov
les
das
scas
jo
pop
mov
pop
jecxz
push
add
out
std
xchg
add
lea
lea
incb
jb
ficoms
ja
and
in
call
pop
sti
insb
sti
cmp
ja
adc
pop
loope
add
jbe
add
inc
dec
jne
ljmp
mov
aas
cltd
idiv
imul
push
sbb
xor
loop
mov
aas
pusha
ds
add
popa
ret
or
cwtl
sti
jne
inc
std
std
fdivl
xor
fdivrp
mov
push
sub
and
xchg
das
jmp
call
push
and
adc
decl
test
jg
mov
inc
femms
das
xor
clc
hlt
or
movsb
loopne
loopne
aas
lea
pop
outsl
xlat
dec
pop
cmp
jl
sub
add
pop
jecxz
and
and
pop
sbb
mov
mov
lock
decw
cmpl
push
jno
ret
fs
ljmp
add
add
cmc
outsb
rorb
xchg
sub
js
push
sub
cwtl
mov
out
mov
fstpt
mov
pop
xor
cmp
jmp
out
sbb
inc
jmp
and
cmp
out
into
mov
and
stc
push
adc
loope
outsb
leave
mov
mov
les
pop
jge
cmp
clc
mov
pop
jmp
dec
rorl
int
pop
sub
push
or
sub
jge
aas
mov
repz
push
cmp
mov
adc
mov
sbb
add
push
lret
cmc
ret
push
xchg
and
not
inc
ret
mov
mov
rorl
jo
sbb
xchg
and
lea
mov
shl
pop
mov
add
push
cmp
cwtl
dec
push
or
sahf
adc
add
push
jae
popa
in
outsl
pusha
lods
jno
xchg
and
and
mov
mov
adc
sbb
mov
pop
mov
adc
push
xor
sti
je
cltd
inc
add
hlt
out
push
cmpb
jne
fucomip
cmp
or
or
lea
or
jnp
push
mov
add
and
mov
jecxz
push
in
and
mov
jge
call
inc
push
call
leave
mov
dec
jmp
push
in
jb
jo
inc
push
adc
adc
mov
cmp
mov
in
popa
adc
sbb
stos
push
inc
int
mov
pop
or
mov
insb
lea
int
xchg
aam
mov
je
or
mov
jp
add
inc
negb
mov
mov
sbb
cmp
dec
fildll
ficomps
inc
or
jle
jne
jb
mov
xor
adc
lcall
lods
test
ret
imull
rcll
add
dec
sbb
push
in
xchg
addr16
repnz
push
mov
movsl
jg
int3
inc
ds
sbb
jmp
ljmp
je
jecxz
push
inc
movsb
loope
cld
cmpb
jne
push
or
push
mov
inc
or
adc
jns
add
add
add
pop
sbb
mov
mov
fadds
nop
mov
xor
mov
pop
jge
push
pop
incl
aaa
lcall
cltd
jl
xchg
push
sbb
imul
loope
push
cmp
pop
jmp
call
cmp
cmp
mov
repnz
jns
jle
pop
and
mov
push
mov
pop
icebp
xchg
mov
jne
mov
xor
xchg
faddp
iret
pop
cld
cmpsl
cmp
xchg
xorl
or
or
or
or
or
or
push
loope
icebp
jge
add
or
or
or
mov
lods
or
xor
sub
movsl
inc
cmpsb
jb
fmuls
mov
sub
cmpsl
jl
fiaddl
outsb
pop
push
push
addr16
pop
and
pop
cmp
cmp
push
and
lret
push
jl
test
mov
pop
mov
fiadds
inc
mov
or
popa
xchg
mov
fcompl
fcoms
and
hlt
dec
xor
mov
lock
lods
adcb
inc
sub
xchg
xor
leave
xchg
add
push
mov
mov
je
add
aad
xor
add
subb
add
dec
enter
and
sub
sbb
pop
shll
add
xor
or
or
push
ja
aas
cli
ret
and
add
adc
out
test
or
push
jmp
or
pop
xchg
std
je
jmp
cmpb
dec
mov
dec
and
add
enter
sahf
nop
add
je
jne
rolb
jmp
cmp
xor
mov
inc
cmc
fs
mov
mov
ret
or
dec
push
pop
pop
jecxz
cmp
or
and
jle
push
or
ja
sahf
lds
push
rcrl
repz
enter
inc
call
rcll
mov
lahf
and
movsb
lret
and
push
cmp
pusha
cmpsb
js
jne
aam
xchg
mov
add
and
add
daa
jns
test
insb
andb
jns
adc
cwtl
inc
jmp
and
add
xor
push
inc
popa
outsl
cmc
xchg
lea
and
faddl
add
or
add
cwtl
inc
jb
out
ret
sbb
ljmp
or
or
lods
into
jge
orl
popf
add
movsb
flds
cmpb
mov
sbb
ja
xchg
push
in
js
jmp
sbb
push
test
clc
cmp
or
sbb
push
xchg
mov
or
aam
lds
loope
jne
mov
sub
adc
push
jnp
cli
push
shll
inc
mov
jb
sarl
aas
mov
dec
nop
jmp
inc
dec
das
push
dec
cltd
popf
popf
pop
adc
jo
mov
push
or
lods
or
sub
ja
test
sub
outsl
imull
inc
ret
jne
or
mov
lea
adc
mov
insb
out
or
dec
mov
xor
xchg
and
lcall
xchg
daa
and
jg
je
shrb
dec
xlat
cmp
popf
divl
hlt
and
lcall
xor
jmp
mov
shlb
pop
outsl
ljmp
mov
adc
sub
jae
or
jb
outsb
sbb
xlat
addb
mov
mov
xor
or
rcll
and
loopne
mov
sub
hlt
fstpt
jmp
inc
mov
sbb
notl
and
fnsave
and
cmpsb
ds
hlt
mov
inc
add
mov
popa
and
mov
sub
push
dec
out
mov
xor
out
subl
jl
pop
in
test
cmp
jne
incl
add
pop
les
iret
mov
jg
notrack
sub
je
dec
je
sub
outsl
je
ljmp
je
jmp
mov
jmp
push
push
push
dec
ja
les
push
inc
mov
jle
fadd
xchg
out
mov
and
sbb
mov
adc
push
pop
add
jl
pop
pop
add
insl
les
pop
mov
add
jbe
mov
mov
xchg
bsf
fisttpl
mov
jmp
rorb
push
cltd
jne
or
mov
ljmp
lods
cmp
cmp
jg
lret
adc
dec
ror
cltd
xor
sub
add
call
pop
stc
imul
add
cmpl
jle
adc
pop
dec
push
push
mov
rcr
dec
cld
gs
scas
fmuls
adc
fsub
in
pop
and
inc
mov
movl
dec
js
pop
add
adcl
inc
testb
divl
xor
lods
xchg
les
pushf
sub
mov
dec
imul
cli
or
in
jae
cmpl
pushf
je
sbb
adc
cli
cmp
icebp
or
mov
mov
dec
hlt
lods
lcall
or
and
test
nop
out
sbb
repnz
pop
jmp
inc
shll
divb
jb
and
cmp
push
mov
and
cmp
call
jns
fsubs
push
jmp
aaa
es
mov
hlt
jmp
mov
enter
push
cld
mov
push
jmp
cmpb
ja
fists
fsubrl
push
ljmp
fmull
outsl
mov
add
cmpb
jle
and
fs
roll
gs
testb
or
sbb
repz
ja
xor
cmp
xchg
pmaxsw
xor
ss
fwait
test
cltd
and
jmp
lret
in
jne
cmpb
shll
pop
cmp
daa
in
imul
add
fsubrl
pop
sahf
adc
pushf
adc
add
das
xor
or
push
out
jo
add
add
inc
xor
mov
dec
mov
inc
dec
sbb
jno
dec
gs
pop
pop
es
add
test
hlt
test
or
mov
sti
fwait
sbb
adc
and
jns
add
jmp
push
pushf
pop
gs
nop
pop
add
add
subl
mov
jo
push
and
mov
jp
add
xor
push
testl
mov
orl
nop
add
add
or
and
daa
add
sbb
test
les
bound
and
sbb
cmp
lods
inc
ja
jne
add
rcll
add
mov
or
add
push
or
pop
jo
call
pusha
mov
or
pop
pop
sbb
xchg
fmuls
adc
into
pop
mov
or
adc
cmp
inc
or
pop
call
int3
mov
jno
mov
mov
sub
popf
and
shrb
sbb
adc
dec
movb
imul
xchg
pop
daa
fst
fcomps
data16
jb
sbb
stos
fstpl
fwait
jmp
sbb
dec
sbb
sbb
xor
inc
add
push
sbb
pop
add
mov
xor
add
std
aas
fmuls
ljmp
in
or
xchg
mov
out
ja
dec
insb
fwait
pusha
pop
or
adc
push
pusha
mov
arpl
daa
mov
out
xchg
jmp
or
xor
and
adc
push
sbb
outsb
dec
out
pop
addl
add
addr16
mov
lods
xor
movsl
mov
pop
or
mov
fs
loopne
sbb
add
das
mov
rolb
add
outsb
pop
ret
push
push
mov
mov
rorl
inc
inc
dec
lret
fnstenv
xchg
mov
cmp
fiadds
stos
mov
or
sti
or
andb
ja
or
ja
repnz
inc
ja
push
in
in
cmp
es
shlb
in
jbe
movsl
and
sub
adc
and
call
loopne
xor
fdivl
pop
pop
jo
xlat
pop
inc
push
mov
testb
pop
je
xchg
cmp
fldl
add
sub
es
mov
pop
jns
iret
cltd
pop
xchg
xchg
push
cwtl
out
incl
fstps
and
xchg
cmp
mov
mov
rcr
sbb
out
in
mov
mov
mov
or
cmp
sub
std
cmpl
pop
add
pop
pop
cs
fmull
pop
mov
or
push
movl
push
push
and
xchg
or
pop
leave
xchg
mov
lea
nopl
outsb
mov
or
clc
sub
movsb
cmp
loopne
test
addb
sub
xor
repz
mov
inc
incl
jecxz
and
sbb
je
scas
rol
lods
ret
sbb
pusha
or
cltd
jle
jecxz
push
add
jo
dec
lea
mov
and
cmp
pop
cld
jle
mov
push
test
sarb
add
jle
cwtl
dec
aas
movsb
sbb
ret
add
shll
fwait
mov
mov
jne
xor
jmp
and
in
jle
sbb
jne
cs
movsb
in
dec
xor
cs
add
push
push
roll
in
add
jmp
cmp
add
sub
xlat
push
sub
mov
mov
jecxz
jl
outsl
test
roll
ds
sub
push
xor
jne
negl
lds
dec
shlb
mov
and
lock
or
xor
mov
or
popf
fs
dec
add
pop
pop
aam
rolb
repz
sbb
inc
cmp
adc
lea
inc
and
leave
inc
sbb
ffree
push
ret
fcomp
adc
adc
cs
pop
in
scas
pop
bound
cmp
dec
clc
inc
add
mov
cld
mov
enter
shrb
in
mov
or
lods
or
xor
mov
push
xor
iret
in
int
mov
sarb
mov
sahf
popf
fnstcw
clc
push
out
push
push
or
nop
push
insb
ss
push
test
fs
cmp
aam
fsubs
sub
xorb
pop
mov
cmp
pusha
xchg
inc
push
or
sub
or
inc
js
adc
hlt
adc
xchg
insb
push
dec
and
inc
xor
jmp
push
movsb
pop
cmp
cmp
add
les
sbb
adc
inc
pop
mov
ret
push
sub
sub
cmp
fldl
sub
sub
sub
cmpsl
orl
mov
push
ret
mov
add
or
mov
mov
mov
pop
adc
ljmp
jnp
sbb
cmp
lock
bound
ret
push
fwait
das
cmpb
outsb
lahf
inc
aas
and
mov
or
add
or
or
adc
pop
lock
stc
cmp
jg
cmp
mov
adc
pop
and
jns
shlb
jmp
shufps
test
and
iret
or
dec
icebp
pop
lods
sbb
jo
pop
pop
mov
mov
inc
nop
dec
push
add
jg
fstl
dec
xchg
push
adc
ljmp
cmpsl
adc
sets
incb
lds
das
subl
jmp
mov
pop
jmp
test
loopne
cld
cmc
xlat
sbb
and
mov
add
rorb
mov
mov
in
or
lahf
test
clc
push
in
push
loopne
popf
insb
js
sub
loopne
fdivrs
xchg
or
dec
xor
mov
pop
add
les
addb
ja
lods
mov
and
lahf
adc
add
scas
pop
pop
xchg
in
iret
push
pop
inc
pop
push
arpl
xchg
xchg
inc
push
push
cmp
je
inc
sub
xor
inc
mov
mov
and
sbb
ret
mov
add
mov
lret
or
or
sub
pop
scas
mov
push
mov
scas
jns
add
nop
xchg
adc
mov
sbb
lods
mov
test
lods
pop
cld
cmpl
inc
nop
pop
sub
inc
fsubrl
arpl
or
dec
popl
arpl
out
test
cwtl
aaa
in
adcl
add
popf
adc
mov
mov
and
jnp
mov
les
push
pop
enter
inc
int3
mov
cmp
and
clc
dec
jbe
adc
lea
outsb
adc
addr16
sub
inc
dec
inc
mov
in
inc
add
inc
sub
dec
jae
dec
mov
inc
sub
shll
nop
aad
mov
gs
mov
ret
sar
rolb
ret
ljmp
jae
jae
add
push
fnstsw
nop
scas
cmp
mov
rclb
dec
lods
cwtl
in
xor
add
mov
test
loope
sub
ret
popa
mov
cmp
cmpsl
inc
lret
imul
fdivrs
stos
pop
pushf
push
jns
xchg
scas
scas
inc
je
mov
sub
lock
add
fcomi
or
aam
mov
jle
jmp
mov
data16
mov
into
in
add
divb
loop
sub
add
add
inc
fsubrl
pop
inc
cld
inc
cwtl
adc
add
aaa
aaa
fadds
dec
nop
xor
adc
xor
stos
ret
adc
push
insb
fwait
add
aas
jge
jo
mov
dec
outsb
outsl
sbb
add
int3
or
fisubs
add
repz
push
hlt
mov
adc
mov
or
jle
push
fdivrl
jl
pcmpeqw
cmp
cmpsb
jle
mov
fucomip
add
jne
les
cmp
push
adc
je
jge
jae
pop
sub
jo
jae
cmp
nop
xor
fildll
cltd
mov
dec
je
and
fcompp
push
js
sub
jecxz
mov
fistl
or
or
and
shll
or
dec
ret
adc
add
dec
or
cmp
pop
rolb
dec
xor
mov
loope
popa
loopne
jae
jb
mov
sub
and
jns,pt
dec
or
inc
das
add
add
dec
cmpsl
add
xchg
add
sub
adc
and
call
leave
testb
cmp
daa
xor
ja
push
mov
inc
lock
pop
adc
movsl
mov
sbb
cmp
imul
cmp
cld
fbld
and
push
add
and
and
negl
cmc
inc
inc
jge
shr
add
xor
popa
cmp
dec
and
xchg
sbbb
or
fsts
mov
clc
imul
ss
jne
jno
dec
in
sbb
addr16
imul
sub
push
loope
jl
dec
pusha
aam
mov
jle
push
or
aaa
or
push
inc
pop
mov
xchg
dec
cmp
jg
xorl
decl
add
inc
sub
lcall
mov
or
jb
int
jge
call
mov
mov
sub
sub
es
daa
out
das
or
lds
nop
or
jecxz
add
dec
cmpsl
mov
cmpsl
add
adc
mov
push
cmp
in
es
ret
emms
push
inc
sub
pop
inc
adc
add
jbe
les
mov
jecxz
imul
jne
mov
xchg
lods
xchg
sub
in
nop
push
sbbb
call
iret
xchg
jmp
add
inc
mov
and
xor
mov
xchg
call
sbbl
cmpb
or
sub
xchg
inc
adc
mov
jl
dec
mov
mov
roll
add
je
scas
push
push
cmpsl
clc
imul
add
mov
sub
cld
loopne
sarb
cli
jbe
dec
or
sarl
jge
add
lahf
adc
or
lock
daa
mov
sbb
push
mov
sbb
inc
or
dec
xor
je
add
inc
popf
add
aad
dec
push
hlt
pushf
fs
movsb
leave
stc
push
pusha
jmp
pusha
or
pop
pop
mov
rcrb
jns
cwtl
mov
hlt
loope
inc
lods
idivl
adc
jno
push
mov
fwait
cld
pop
and
xor
aaa
push
mov
sub
jb
inc
xor
dec
mov
stos
mov
dec
jne
sbb
or
pop
pop
jne
out
cli
int3
dec
clc
pop
ja
inc
or
inc
arpl
adc
out
iret
push
mov
add
inc
add
xchg
cmp
add
push
dec
data16
leave
or
lret
push
adc
jg
shr
mov
sub
xor
loope
or
call
xchg
mov
add
jo
cmpsb
mov
mov
pop
mov
jbe
mov
stos
mov
dec
repnz
popa
clc
lods
ret
lea
inc
cmp
pop
jne
lea
xchg
outsb
arpl
jae
sbbl
imul
cmp
xchg
rorl
dec
push
decl
xchg
mov
lock
pop
sub
scas
and
mov
sub
sbb
aad
push
or
add
aas
lea
dec
jne
xchg
push
sar
or
mov
sbb
movsb
sbb
sub
lock
fisubrs
leave
mov
mov
push
ret
dec
shrb
jbe
je
pop
jo
insl
cwtl
mov
cmpl
mov
adc
jb
call
dec
mov
mov
xchg
mov
xchg
out
nop
in
insb
das
mov
mov
fmull
and
cmpsb
mov
cmpl
aam
mov
repnz
mov
push
fstps
sahf
aaa
xor
repnz
cwtl
int3
inc
shrb
leave
pop
int3
mov
shrl
andb
enter
enter
into
fcomps
jge
and
pusha
stos
and
aas
inc
sarb
shl
in
mov
inc
xchg
aas
cld
dec
clc
out
add
pop
pmuludq
xor
in
cmp
movsb
and
andl
dec
add
push
add
jne
and
mov
xchg
or
das
fs
mov
fldt
and
pop
mov
popa
insl
pop
jo
push
inc
push
mov
sbb
sti
fs
aaa
cmp
pop
push
cmp
pcmpgtd
lods
add
fmuls
shl
inc
or
je
sbb
pop
out
push
icebp
mov
subl
xlat
adc
daa
push
loope
ret
rclb
inc
mov
dec
jp
pop
push
iret
add
push
jmp
pushl
push
mov
jo
test
sbb
mov
ss
mov
sbb
dec
push
xchg
sbb
cmp
les
dec
add
pop
in
out
clc
jb
add
stos
test
inc
shrb
lods
inc
cs
inc
pusha
out
dec
es
jns
or
push
dec
pop
in
iret
sub
push
push
aaa
mov
std
cmpb
sbb
aaa
lock
cltd
daa
cld
cmp
add
in
ljmp
cs
gs
loopne
pop
mov
xor
jmp
adc
loop
imul
mov
sbb
inc
jae
scas
orl
mov
xor
mov
mov
push
loope
mov
rcr
test
push
pop
mov
push
push
and
scas
ja
test
pop
or
xor
cmp
jg
pusha
xor
jb
gs
clc
dec
push
jo
inc
js
addr16
rcrb
roll
push
call
dec
ret
or
fwait
ret
outsb
xor
cmp
mov
push
or
sbb
andb
repnz
cmp
jne
sti
and
lods
and
test
push
fwait
cwtl
adc
call
push
mov
add
daa
pop
btr
fsubs
jecxz
dec
int3
mov
ret
in
xchg
mov
aaa
fildl
loopne
push
lods
mov
cld
fsubp
ficompl
sub
mov
inc
or
fistpll
mov
lea
cmp
lods
in
push
bound
mov
sbb
or
leave
sbb
inc
sbb
adcl
lea
mov
or
fisubs
adc
inc
loopne
stos
mov
outsl
cs
outsb
or
fcom
adc
add
jnp
pushl
clc
mov
add
ficoms
sarb
xchg
mov
add
inc
inc
mov
cmpsl
movsb
ret
in
or
mov
vmovupd
and
xchg
cmp
enter
mov
push
nop
pop
mov
xchg
adc
sbb
push
cmp
icebp
dec
inc
xchg
adc
clc
mov
ret
inc
jnp
ja
je
push
ret
test
outsl
sub
or
clc
ret
sti
loope
aas
iret
seta
mov
lea
mov
jmp
adc
inc
mov
jns
mov
fstp
xor
add
aam
orb
mov
xchg
sub
lds
xchg
ret
incl
ret
sub
mov
fxch
fadds
inc
sbb
aas
decl
cmpl
cs
mov
subl
rorb
push
lret
pop
sahf
movsb
loopne
inc
mov
inc
or
xor
cmp
jnp
adc
int3
jmp
outsb
mov
roll
add
popa
pop
fsubrs
inc
dec
dec
inc
mov
fcmovnbe
emms
dec
mov
pop
aam
or
dec
jge
pop
outsb
out
xor
int
enter
shlb
cwtl
rorl
stos
jmp
cmc
adc
inc
sub
xchg
adc
xor
push
adc
jmp
imul
or
mov
push
mov
pop
and
mov
pop
cmp
push
pushf
add
dec
hlt
adc
inc
rorl
adc
cmp
mov
jne
lcall
cld
add
push
outsl
adcl
push
jnp
xor
push
test
out
fnstcw
and
push
dec
and
xlat
enter
pop
jmp
ret
rol
cmp
int
popf
or
push
fmull
jle
jge
lret
sub
add
sarb
in
or
lock
loopne
fnstenvs
insb
popa
fcomps
int
push
aam
enter
push
mov
ds
mov
pusha
test
jo
int
xor
pop
sub
call
mov
mov
pop
xor
jo
push
sahf
mov
mov
jg
xchg
int
dec
lods
inc
ds
cmp
pop
xor
sub
mov
fnstenv
add
cmp
sbb
daa
adc
pop
adc
fmuls
or
data16
pop
add
arpl
or
push
pushf
das
and
xor
lock
les
and
in
or
dec
cmpsl
pushf
insb
xorl
pop
fcompl
movsb
or
push
aam
outsb
nop
ss
test
cs
imul
pop
xor
cld
sarl
push
rcrb
adc
out
sbb
gs
and
sub
mov
fisubs
test
pop
pop
movsb
and
js
pushf
je
nop
ss
jae
rclb
xchg
xchg
mov
loopne
daa
fldt
andb
imul
add
add
or
mov
int
sbb
mov
push
rolb
cmp
mov
xchg
mov
adc
int3
fsts
lods
dec
inc
cmp
mov
insb
push
ja
jge
sub
and
or
jbe
add
cltd
fiaddl
cwtl
fs
dec
es
mov
fadds
aaa
dec
mov
inc
pusha
xchg
dec
and
nop
mov
adc
add
mov
xchg
mov
cmp
xor
jge
pop
mov
xchg
mov
push
mov
cmp
mov
pushf
mov
mov
push
seto
mov
cmpl
mov
xchg
sub
data16
aad
adc
adc
enter
insl
lret
adc
dec
cs
aam
pop
or
sbb
and
mov
inc
enter
and
sub
cmp
mov
xor
and
add
sbb
adc
repz
and
movsl
fdivr
pop
sarb
repnz
xlat
or
mov
fnsave
add
js
in
enter
nop
ret
and
xchg
add
adc
push
ficomps
push
clc
xchg
in
jns
int
clc
sub
frndint
clc
lea
ja
cltd
jbe
das
inc
add
sbb
je
mov
std
aam
sbb
sbb
pop
loopne
sbb
ret
rolb
fists
sbb
and
cmp
inc
fbld
orb
mov
cmp
add
adc
add
leave
pop
les
dec
dec
push
leave
in
pushf
xorl
adc
loopne
mov
movl
push
sub
rcr
jns
movsb
cltd
lea
push
xchg
push
mov
clc
xor
ret
jmp
js
cld
insl
add
jmp
mov
and
mov
jg
and
pushf
movsb
iret
enter
test
lods
pop
jb
and
leave
and
leave
and
mov
aam
fcoml
in
in
and
cmp
enter
rolb
jae
xchg
iret
mov
jecxz
sbb
leave
xor
sbb
mov
leave
xor
hlt
cmp
sbb
dec
call
in
in
push
fildll
mov
jl
jbe
js
sbb
jne
push
adc
pop
jnp
sbb
bound
or
pushf
std
es
add
outsl
je
fs
mov
or
bound
bswap
into
xchg
add
cmovns
outsl
fnstenv
outsb
dec
jb
pop
outsl
jb
leave
mov
jo
inc
jb
insl
push
je
push
push
mov
sbb
jns
ja
pusha
xchg
aas
inc
jae
push
dec
mov
pop
mov
outsb
pushf
in
sbb
jecxz
ja
sbb
mov
les
dec
lfs
pop
divb
mov
add
and
pop
sti
add
fcomp
imul
push
in
pop
movsb
dec
adc
out
or
push
add
pop
sbb
inc
add
pop
test
shll
clc
movsb
sbb
xlat
inc
outsb
lcall
push
lock
js
push
cwtl
push
adc
dec
dec
add
jle
inc
cmp
mov
push
push
cwtd
sub
lock
jae
xor
adc
mov
jl
popa
cmpsl
xchg
jl
inc
mov
and
outsb
movsl
mov
cmp
xor
cwtl
adc
and
pop
daa
cld
cld
xchg
pusha
out
xchg
aas
push
push
xchg
pop
inc
jb
lret
lret
and
les
fs
push
leave
xchg
jnp
sub
aas
movl
xchg
fs
ret
gs
mov
mov
xor
dec
adc
inc
lds
xchg
xor
mov
andb
iret
lods
fsubs
arpl
iret
sbb
sarl
adc
jae
pop
jnp
insl
jo
mov
push
shlb
flds
iret
sub
bound
out
push
jmp
push
outsb
divl
enter
int
movb
mov
pop
pop
sbb
arpl
jg
cmpb
jmp
push
aam
cld
and
jns
ja
in
push
mov
cmc
jmp
aam
out
in
in
add
pop
in
ljmp
mul
js
loopne
pusha
or
call
pop
adcl
daa
in
fcompl
nop
add
and
mov
cmpsl
ljmp
in
ljmp
aaa
filds
repnz
pop
add
jmp
fbld
daa
nop
add
orl
mov
pushf
push
loopne
out
xchg
cmp
lahf
lret
jg
roll
inc
adc
dec
daa
clc
pop
sub
mov
outsb
scas
frstor
aas
dec
je
sbb
mov
jmp
mov
loopne
ja
add
fiadds
adc
mov
gs
and
dec
cltd
xchg
mov
ficoml
lret
clc
xchg
cld
lods
sub
loopne
hlt
fwait
mov
data16
imul
rolb
xchg
arpl
adc
call
mov
inc
or
in
adc
insl
xchg
jno
jae
test
xchg
loopne
loope
dec
fsubr
push
aas
pusha
test
dec
fldl
mov
or
push
jae
les
fcomp
jmp
lret
jle
mov
inc
cwtl
shrb
out
push
shrb
fiaddl
leave
mov
adc
add
push
push
les
sub
sbb
je
xor
in
popa
mov
jmp
adc
in
mov
add
and
aam
inc
jmp
mov
cmpl
data16
pop
mov
add
add
adc
mov
cmp
dec
cli
imul
jecxz
mov
inc
pop
push
push
repz
mov
mov
push
ds
add
xchg
gs
jmp
add
test
sub
dec
dec
imul
sub
cld
jne
add
inc
add
das
push
add
andb
sub
std
add
or
setg
test
mov
and
xchg
pop
les
adc
int
xor
jmp
and
and
lock
or
jg
adc
xor
lea
pop
in
call
dec
mov
fildl
push
jno
sarb
and
xchg
aaa
inc
pop
adcl
inc
pop
dec
inc
jmp
sahf
jmp
inc
lea
popa
adc
dec
repz
dec
in
add
pop
out
cs
pop
in
dec
cmp
sbb
fstps
xchg
outsl
ret
xor
aam
push
adc
add
xchg
adc
or
or
add
or
psraw
sub
inc
sub
or
adc
pop
pop
or
xor
div
and
cmp
and
pop
jmp
jnp
sti
inc
ror
add
rorl
or
rolb
jne
pop
jp
fsubs
je
ret
aas
enter
loope
loopne
mov
xor
inc
xor
jb
aaa
add
pop
mov
sub
jmp
sbb
add
and
or
dec
mov
loopne
lcall
pop
and
jo
jo
fadds
mov
mov
pop
or
adc
inc
xchg
loope
dec
call
in
cmp
push
inc
xchg
loop
xchg
push
aad
aam
and
jmp
push
fcmovnu
dec
adc
jg
jl
sub
cwtl
pop
add
loopne
decl
push
cmpsl
pop
dec
adc
jns
pop
dec
fwait
lcall
push
and
js
rol
dec
jmp
adc
cmp
es
xor
inc
iret
hlt
and
inc
loope
jmp
sbb
sub
aaa
jecxz
add
sbb
add
lock
je
pop
jne
imul
arpl
notl
inc
add
or
or
aam
arpl
pop
jecxz
xchg
cmpsl
sbbl
adc
mov
sbb
push
add
insb
loope
xor
outsl
rorb
in
arpl
insb
les
ljmp
push
mov
inc
lea
push
add
cld
inc
dec
je
and
inc
cli
adc
dec
adc
cld
aaa
jno
xchg
dec
ficomps
es
lock
mov
fs
hlt
add
and
cmc
lock
pop
dec
and
call
stc
mov
daa
jns
pop
jp
int3
sub
push
test
aaa
add
push
inc
mov
loopne
sbb
roll
pop
in
clc
pop
cmp
or
pop
jg
cmp
or
aaa
xchg
pop
dec
and
adc
mov
pop
aaa
fs
arpl
and
fstl
imul
sub
mov
ds
test
xchg
pushf
in
or
test
imull
mov
pop
pop
rorb
out
and
inc
adc
das
loope
add
add
in
adcl
popf
push
js
test
lret
and
xor
rcrl
push
sbb
adc
orb
sub
loopne
or
je
jecxz
sbb
mov
cmp
or
adc
xchg
outsl
in
xor
insl
mov
ret
in
stc
push
pop
cli
jnp
imul
push
imul
test
mov
adc
in
mov
mov
or
sahf
adc
sub
cmp
shrb
fcom
je
mov
xor
pop
xor
fldcw
rcr
mov
mov
inc
hlt
jp
enter
jae
add
and
clc
in
cmp
add
call
mov
or
xchg
dec
xchg
in
or
js
fsubl
in
xor
loopne
movsbl
fcom
mov
aaa
aam
pusha
add
shlb
and
movsb
jmp
ret
push
nop
int3
enter
arpl
inc
leave
sti
int
test
les
ljmp
je
jmp
sbb
shrb
rorb
test
add
sub
and
es
mov
in
test
push
cld
pop
int
ljmp
sti
sub
sti
inc
data16
mov
aad
nopl
sbb
lds
xchg
mov
mov
mov
cmpsb
jecxz
add
sbbl
mov
jecxz
and
lods
mov
sbb
adc
test
mov
adc
xchg
sbb
cwtl
and
and
xor
pop
enter
mov
mov
or
mov
mov
stos
xchg
jno
sbb
pop
jmp
adcl
jmp
popf
mov
arpl
jns
js
jecxz
and
adc
mov
loop
adc
lea
inc
mov
cmp
movsb
push
imul
add
icebp
mov
in
and
lcall
std
or
push
mov
push
adc
test
and
cmp
pushl
dec
dec
push
adc
std
daa
xchg
xchg
push
jl
or
xor
rcl
sbb
xchg
call
sbb
out
adc
or
shlb
cmpsb
movsl
cmp
loopne
rolb
push
dec
sahf
es
push
push
es
shll
movsl
bound
outsb
xchg
fcmovu
xor
mov
in
or
inc
and
add
push
adc
imul
cmc
lahf
mov
test
or
or
adc
or
push
xor
mov
push
inc
cwtl
adc
lods
es
daa
aaa
mov
push
cltd
es
cmp
in
in
xor
jno
aaa
adc
in
loopne
insl
aaa
cwtl
jo
pop
fdivs
scas
or
sbb
aaa
aam
aam
movl
iret
jno
fsubrs
pop
xchg
imul
rorl
insb
in
in
test
and
fsts
les
xor
aaa
xchg
mov
imul
and
es
fisubl
mov
imul
sub
dec
xchg
jns
aaa
rol
pusha
add
cs
fs
inc
imul
or
jge
xchg
mov
mov
repnz
clc
cmp
adc
pusha
pop
jno
dec
sbb
sbb
jo
aam
movsb
pop
in
pusha
ret
mov
push
es
pushf
cmp
xor
aaa
cwtl
jno
insl
xor
aaa
outsl
ss
sbb
ss
popf
enter
nop
jbe
xor
dec
aaa
out
or
or
sub
clc
adc
in
push
test
sbb
addr16
int3
subl
test
dec
mov
xorb
push
mov
xor
repz
jmp
cmp
sarl
add
mov
icebp
sub
pop
divb
movl
aad
mov
aam
outsl
add
xchg
mov
dec
sbb
pop
rcll
scas
ja
fiaddl
fstpl
fwait
xchg
daa
pop
mov
add
js
push
ljmp
sbb
push
aaa
push
sub
lods
pop
push
push
out
iret
sub
pop
cmpl
imul
shlb
dec
adc
loop
aaa
lods
pop
and
inc
insl
jo
jns
mov
or
dec
jne
push
into
adc
out
and
popa
ret
add
xor
sar
into
insb
inc
push
aas
insb
add
inc
mov
aaa
in
jne
xchg
jb
outsb
arpl
and
pop
mov
xchg
and
and
scas
cmp
dec
fildl
sub
inc
fwait
aas
push
outsb
imul
inc
add
arpl
and
iret
push
rcrl
mov
movsb
lcall
daa
add
divl
xor
push
clc
popa
jno
add
lcall
or
decl
dec
dec
ret
ja
test
xlat
pop
out
adc
test
push
rcrb
mov
push
pop
shrb
xor
jno
adc
sahf
mov
sbb
jae
inc
and
jbe
or
jne
int3
jne
imul
push
imul
sub
lock
sub
mov
hlt
adc
test
and
mov
or
inc
rolb
push
clts
inc
loopne
and
mov
mov
lahf
enter
adc
outsb
jns
mov
push
and
xchg
shlb
push
gs
push
xor
xorl
jecxz
nop
jle
clc
int3
dec
or
cmp
xor
movsb
pop
clc
sub
in
jne
aam
and
and
adc
or
push
dec
jnp
sbb
add
inc
push
push
pop
mul
dec
xorl
sbb
sub
fcmovnu
xchg
push
jne
out
loopne
fwait
or
push
inc
in
cmp
add
aaa
cli
enter
sbb
mov
aam
les
push
rclb
xlat
sbb
les
out
adc
mov
jge
cmp
je
xchg
js
pop
outsl
adc
into
xor
pop
in
repnz
xchg
pop
push
repz
mov
jg
push
xor
cmp
push
add
add
adc
mov
adc
sub
push
or
adc
loopne
add
ret
xchg
inc
xorb
outsb
mov
repnz
das
std
jnp
mov
mov
push
inc
mov
xchg
out
cmp
loope
or
shll
push
repz
adc
mov
xchg
aad
xchg
jle
es
lods
push
popa
push
mov
ss
mov
push
xor
jnp
daa
fwait
mov
sbb
addr16
aaa
adc
bound
lods
inc
lahf
enter
xchg
or
out
inc
inc
popa
and
imul
mov
jb
or
pop
dec
sbb
xor
xchg
cld
xchg
in
or
lahf
adc
cmp
setg
loope
insb
es
mov
hlt
fstpt
inc
push
fnstenv
jb
leave
loope
or
or
test
jo
decb
sbb
add
rorb
pusha
dec
pop
add
mov
jl
das
clc
inc
cmpsb
jl
inc
xor
inc
sbb
or
cmp
or
ror
pop
ficompl
cmpsb
jb
or
xchg
rorb
inc
cmp
negb
loop
lock
add
xchg
mov
or
flds
sbb
out
mov
in
or
dec
push
pushf
pop
pushf
loopne
leave
inc
mov
stc
xor
sbb
inc
lret
adc
bound
cld
lcall
movnti
pop
les
add
push
subl
mov
inc
ret
mov
ljmp
mov
aam
mov
sbb
mov
mov
arpl
sbb
pusha
xor
insl
mov
inc
lods
notl
xor
and
and
jl
cmp
cmpsl
popf
push
orb
lods
scas
fs
inc
xchg
scas
nop
xchg
nop
inc
push
sbb
sbb
xchg
push
sbb
cltd
lcall
popf
sahf
fs
inc
push
lahf
addb
addl
xchg
sbb
mov
inc
mov
je
pop
cmp
popa
orb
cmp
and
inc
cmp
decb
dec
push
add
gs
add
or
jmp
add
lea
mov
mov
pop
adc
xor
test
jne
add
mov
das
inc
dec
xor
cmp
jle
stos
or
ret
test
test
pop
ja
jo
js
xor
jge
cmp
lods
push
loope
sub
in
mov
mov
fsubr
sbb
test
pop
lahf
and
inc
gs
iret
or
scas
test
fisttpl
pop
clc
sbb
mov
jns
push
or
sbb
jg
aad
mov
fists
lret
je
mov
dec
and
sbb
inc
sti
std
push
mov
mov
xlat
jmp
jg
in
jne
jmp
cmp
pop
jg
mov
insb
sbb
test
out
jne
ret
lock
lods
pop
mov
sub
mov
push
or
stos
mov
push
fistpll
test
dec
inc
push
or
pop
sbb
dec
sbb
mov
daa
bndstx
mov
add
cmp
ss
icebp
fldpi
lds
aas
mov
cmpb
je
mov
lock
lar
decb
shlb
jmp
jmp
inc
and
shr
sbb
mov
pusha
pusha
adc
or
mov
es
or
movsbl
sub
jg
adc
pushf
ss
aaa
add
jg
cmc
movsl
in
push
push
adc
mov
mov
dec
repz
incl
or
testb
call
out
in
and
mov
mov
or
xchg
xor
push
incl
cmp
pop
dec
les
ret
mov
or
icebp
je
or
or
lods
cmp
fwait
mov
enter
ljmp
rep
or
and
les
and
jno
dec
mov
test
pusha
sbb
mov
dec
mov
adc
test
sbb
ljmp
push
dec
test
insl
and
add
aas
push
dec
sbb
outsl
sbb
incb
jmp
repnz
or
adc
pop
movsb
xchg
roll
fdivp
int
jne
outsb
outsb
ljmp
jmp
push
mov
ret
pusha
les
adc
bound
adc
pop
iret
arpl
jne
jae
pop
cmp
jecxz
insb
data16
movsl
and
cmp
mov
ja
add
mov
aam
or
in
inc
adc
fidivs
hlt
push
xor
iret
lods
pop
sub
test
inc
sbb
push
sub
movsl
dec
push
or
adc
mov
push
rolb
jnp
cmp
sbb
xlat
push
or
inc
adc
xor
jnp
push
push
pop
push
lea
std
jle
insl
or
sbb
adc
das
push
mov
mov
ficoms
data16
inc
fistpll
pop
fmuls
cltd
xchg
add
mov
push
push
pop
jge
xchg
das
sbb
jecxz
xchg
xor
or
int3
xor
lcall
and
movq
push
push
pop
or
mov
sub
fisttpll
in
aam
or
push
fistpll
add
xor
loopne
jp
outsl
inc
push
xchg
and
or
and
int3
jmp
pop
sub
adc
jmp
adc
inc
lock
or
xor
inc
sbb
inc
in
jne
dec
xchg
add
cmpb
fistpll
jns
jno
pushl
test
jg
fildl
sbb
adc
sbb
mov
adc
pop
outsb
sub
test
insb
adc
dec
dec
insl
ja
jb
pushf
sub
loopne
cmc
pop
adc
punpckhdq
inc
rorb
jbe
add
shrl
pop
push
icebp
jbe
fnstcw
xor
fxch
loopne
xchg
std
dec
or
cmp
inc
or
push
loop
fwait
or
insl
cmpsb
ja
adc
out
inc
cwtl
inc
jg
pop
or
int
pop
mov
or
jo
shll
inc
xchg
sahf
and
jo
mov
inc
rclb
push
inc
imul
fnstcw
mov
dec
gs
fstps
lock
sbb
rorb
adc
or
negb
outsb
sbb
arpl
ljmp
out
outsb
insb
jns
inc
insb
popa
std
pop
sar
pop
xor
inc
ss
scas
push
sub
sub
pop
aaa
push
push
mov
testl
or
xchg
std
aaa
mov
cmpsl
or
dec
imul
and
test
or
push
pusha
jbe
test
pushf
add
aaa
mov
sarl
add
rcll
aaa
cmpsl
ficoml
imul
ja
fstpl
f2xm1
cmpsb
outsl
inc
dec
jmp
je
or
inc
mov
dec
or
and
out
inc
jbe
imul
outsl
and
test
andl
jl
add
inc
lods
and
scas
mov
ficompl
shrl
mov
inc
loop
sbb
xor
or
adc
push
out
push
leave
mov
mov
sub
and
jno
xchg
mov
mov
and
dec
lods
outsb
mov
adc
aas
daa
push
leave
fxch
or
inc
sbb
push
repnz
mov
ficompl
pop
pop
pushf
scas
pushf
sbbl
inc
pop
nop
mov
hlt
scas
hlt
stos
sub
orl
je
not
sbb
nop
push
sbb
aas
xchg
jbe
inc
cmpsl
pop
mov
nop
mov
lods
push
xchg
mov
iret
dec
imul
scas
inc
leave
in
popa
inc
int
scas
pop
pop
add
sub
jae
sbb
sbb
mov
mov
adc
push
mov
shrb
mov
pop
sub
mov
or
shll
fists
mov
dec
pop
sbb
jg
ja
stos
inc
pushf
in
pusha
inc
adc
bnd
add
pop
inc
inc
mov
xor
pop
push
add
cmp
ds
mov
fsubs
pushf
mov
mov
jnp
fbstp
pop
adc
jbe
push
inc
push
push
in
and
add
mov
add
mov
sbb
fcoms
cmp
jle
add
js
adc
dec
mov
into
and
out
pop
and
or
test
iret
pusha
or
fdivrs
adc
int3
int3
xor
xchg
and
cs
xchg
in
adc
inc
xchg
and
or
mulb
cwtl
pop
dec
push
add
jl
fistps
pop
pop
adc
rcrl
sbb
fcomps
pop
xor
add
nop
mov
push
xchg
mov
test
mov
cmp
addl
addr16
mov
pushw
fdivl
stos
dec
cmp
cld
andps
movsl
es
mov
dec
inc
jnp
mov
sub
inc
imul
and
imul
push
movsb
pop
jp
dec
push
inc
rcrb
outsl
pusha
push
xor
repz
push
loopne
pop
in
fcomp
push
cwtl
xor
fs
cs
pop
jl
sub
adc
xor
lods
adc
push
cld
cmp
pusha
mov
adc
mov
add
js
adc
pop
push
mov
mov
pop
cmp
inc
push
sbb
hlt
and
mov
xchg
or
and
push
push
push
cld
mov
pop
shll
pop
xor
mov
lahf
add
dec
pop
jae
fs
jo
arpl
incl
add
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
sub
push
sbb
and
mov
test
inc
jnp
pop
add
mov
xchg
push
mov
mov
popf
sete
cld
push
pop
pop
jl
mov
mov
sbb
pusha
arpl
test
insl
imul
aam
pop
data16
pop
mov
cmpsb
push
push
int3
push
and
int
pushw
push
shr
push
push
bound
xchg
dec
je
and
scas
pop
sbb
fwait
push
test
sub
adc
xor
pop
ror
mov
pop
mov
int
or
or
pop
fisttpl
pop
fdivl
pusha
push
outsl
fmuls
jbe
fs
sub
pop
xchg
mov
gs
push
xor
addr16
hlt
xchg
outsb
or
dec
pop
imul
sbb
pop
push
cmp
pop
and
movsb
and
adc
ja
es
adc
insb
xlat
jne
add
cld
push
adc
pop
fwait
inc
add
insb
push
push
pop
js
scas
push
fcompl
sbb
in
add
jge
es
test
outsb
pop
outsl
jno
mov
push
mov
or
xor
sbb
pop
in
lcall
push
leave
cwtl
mov
out
insl
sub
add
add
popf
sbb
sbb
add
inc
cmp
adc
dec
testl
sub
ds
mov
repnz
test
testb
loope
mov
jb
repz
cwtl
sbb
inc
je
push
bound
push
repz
cmp
jle
or
enter
or
adc
enter
sbb
orl
jb
push
add
leave
and
xchg
in
in
mov
ss
imul
push
mov
sub
xor
pop
add
push
pop
sub
dec
dec
push
sub
or
or
scas
cs
pop
push
sub
mov
and
cmpb
push
lock
xchg
pop
aam
pop
mov
pop
je
pusha
mov
lcall
mov
addr16
icebp
push
int
add
or
cmpsl
pop
add
push
mov
push
xchg
sub
pusha
insl
dec
sub
dec
test
push
lahf
fiaddl
sbb
inc
es
andl
in
cwtl
jnp
pop
cs
push
sub
inc
jg
jge
sahf
sbb
lahf
ds
jl
mov
push
or
and
xchg
dec
pop
das
sub
aas
insl
add
out
cmpsl
cmp
xor
mov
loopne
ss
adc
push
js
xchg
stos
imul
or
sarl
stos
add
mov
add
inc
stc
pusha
int3
sub
add
xchg
icebp
lcall
xchg
pop
xchg
xchg
call
rcll
stos
mov
xor
inc
cmc
dec
mov
mov
popa
inc
fsubs
mov
sub
das
pusha
adc
xor
aam
or
sub
or
push
and
sub
jg
roll
loop
sbb
inc
int
dec
addb
xor
sub
lock
fwait
stos
sub
hlt
sbb
add
push
push
add
push
cwtl
push
xor
repz
add
inc
pop
scas
inc
loopne
fcmovne
xchg
lods
or
in
mov
hlt
pop
imul
in
mov
sbb
push
cld
push
and
xchg
lods
lea
sub
adc
lcall
add
stc
clc
push
push
push
push
push
push
lcall
lock
mov
imul
test
cwtl
lods
imul
pop
les
or
jo
mov
push
sbb
cmp
add
xorb
sbb
mov
fildl
add
cmp
or
push
inc
jp
fiaddl
cmp
addr16
inc
adc
adc
sbb
loopne
lock
push
and
dec
imul
es
outsl
jl
lea
arpl
sbb
cmp
aam
xor
mov
scas
pop
sbb
and
push
mov
and
mov
popf
in
pushf
pop
mov
push
cmp
cmp
ljmp
fadds
ss
sub
mov
and
adc
push
dec
dec
fs
lcall
jns
add
test
mov
lret
shlb
push
push
xlat
insl
pop
push
lods
mov
imul
movsb
push
dec
gs
pop
or
setbe
leave
cmp
add
mov
sar
and
jo
and
pop
adc
or
xor
add
jb
jne
jo
inc
in
xlat
mov
aas
out
dec
xchg
mov
or
pop
dec
daa
mull
shlb
jo
in
lret
pushw
mov
dec
xor
inc
xor
xlat
bound
ss
inc
shrb
je
mov
add
outsl
or
and
jmp
add
mov
adc
pop
mov
mov
cli
add
les
mov
mov
sub
sub
fcmovnu
int
sahf
aad
aas
and
jmp
mov
shlb
outsl
jmp
sbb
adc
cmp
adc
je
jmp
dec
jae
cli
pop
shrb
jge
mov
pop
orl
int
in
and
cmp
je
clc
pop
xchg
adcb
jge
pop
test
fs
ret
std
pop
out
mov
push
mov
add
mov
pop
xchg
dec
add
add
pop
jnp
sar
clc
mov
jl
adc
inc
push
push
sub
push
adc
lds
push
sbb
lcall
lret
or
add
inc
jae
or
mov
fcomp
push
inc
or
sti
sbb
push
dec
jne
pop
push
ret
mov
xchg
and
popf
add
and
sbb
xor
das
add
push
lcall
movsb
lock
pushf
or
xor
outsb
je
push
fwait
xor
mov
sbb
mov
ljmp
gs
cli
loope
popf
out
cmp
or
add
jae
pop
enter
inc
addr16
es
cmp
and
or
repnz
inc
fidivs
icebp
xor
dec
cwtl
nop
add
or
sbb
insb
mov
push
imul
imul
or
loopne
and
xor
adc
lahf
roll
aad
pop
icebp
mov
inc
adc
inc
pop
shlb
push
fisubrl
push
fwait
lea
push
or
inc
jae
aas
pop
cmp
stos
loope
xor
and
inc
adc
test
or
xor
lea
push
inc
subb
imul
out
sub
push
inc
dec
jne
mov
sub
dec
xchg
xchg
dec
mov
dec
push
sbb
call
pop
lock
rcr
xchg
and
xchg
xor
fists
mov
ret
popf
mov
inc
xchg
sub
mov
dec
ds
in
cmpsb
inc
add
push
sub
add
cmpsb
mov
mov
imul
xor
stos
mov
or
dec
call
and
shlb
jl
xchg
inc
dec
fsubrs
push
jne
push
sbb
sbb
push
cmpl
inc
dec
ret
cmovg
jl
inc
push
call
xchg
rcrb
xor
addl
push
ljmp
imul
sub
cmp
push
xor
inc
cmp
call
cmp
xor
xchg
daa
add
jo
add
sub
notl
sahf
adc
hlt
iret
sbb
sbb
sbbl
aaa
and
lret
out
xlat
outsb
inc
inc
test
fldt
mov
sbb
in
dec
pusha
cmpsb
int
rorb
subb
mov
add
jns
xor
pop
cmp
xlat
add
sub
dec
xchg
pop
lret
mov
hlt
xchg
sub
and
dec
add
cmp
or
or
sub
nop
inc
cmp
cmp
or
shll
mov
adc
pop
xor
and
xor
cli
test
into
call
rolb
arpl
sub
inc
pop
and
or
dec
push
or
adc
sub
pop
pop
ljmp
ret
and
mov
lahf
xlat
cmpsb
dec
xchg
push
icebp
jo
inc
arpl
fldl
arpl
jae
pushf
xorb
pop
or
es
and
cmpsl
push
rolb
push
inc
sbb
adc
scas
sbbl
addb
xchg
or
shl
sbb
cmp
mov
loope
leave
sbb
cs
pop
sub
xor
fdiv
xor
adc
push
add
mov
add
in
pop
sbb
mov
sbb
out
lock
shr
jmp
mov
adc
cmp
cmp
push
push
xor
push
shll
dec
xchg
scas
in
cmp
cmp
xchg
pop
les
cltd
in
fsubl
dec
cs
add
repnz
fdivs
loop,pt
stos
sbb
cld
mov
js
or
ds
cmp
add
ret
pop
popa
adc
or
je
mov
outsl
inc
pushf
dec
add
or
or
stos
cmpsb
mov
repz
inc
loopne
or
outsb
cs
nop
mov
sbb
sub
cld
cmp
xchg
mov
popa
and
scas
push
push
mov
or
repz
cmp
addr16
dec
inc
js
cmp
addr16
fcmovb
lea
ret
std
cmp
gs
sub
xor
dec
mov
mov
or
pop
pop
dec
cld
mov
jmp
xchg
xchg
add
je
in
inc
add
outsl
pop
lret
inc
loope
sub
jne
sbb
sbb
or
mov
sbb
insl
mov
or
or
mov
push
fst
mov
insl
test
pop
xor
je
shlb
ret
je
insb
sub
dec
call
int3
jno
pop
mov
pop
or
adc
mov
and
pushl
xor
dec
push
mov
into
or
push
out
lret
mov
mov
push
popf
ret
stc
add
lds
push
and
insb
dec
push
xor
jl
arpl
and
mov
inc
cli
pusha
push
mov
xor
cmp
ret
xchg
mov
sub
test
push
adc
pop
add
test
in
inc
or
dec
nop
and
mov
mov
arpl
pop
mov
mov
xchg
out
and
mov
push
jbe
mov
shlb
mov
cmc
test
js
or
enter
adc
arpl
je
mov
ds
lcall
aam
arpl
cmp
je
dec
fcomps
ret
in
add
pop
inc
aam
xchg
pop
js
pop
mov
pop
fmuls
or
xchg
in
lock
sub
sbbl
inc
mov
sti
das
sub
dec
inc
cld
sbb
and
clc
ds
shlb
or
push
and
jmp
scas
lea
test
xlat
insb
xor
xchg
cmovno
cmpsb
aas
push
sub
xor
idivl
push
les
push
push
notl
mov
inc
and
xor
or
ret
inc
adc
cmp
incl
or
leave
aam
outsb
sub
insl
xchg
mov
xor
adc
pop
push
cmp
test
addr16
cld
shll
mov
or
sbb
enter
loop
adc
or
jl
ficompl
inc
hlt
mov
lock
inc
inc
or
fs
xchg
sub
je
and
dec
or
ret
sbb
insb
adc
push
jp
jb
xor
addl
push
mov
into
test
jno
mov
push
xchg
sub
outsb
inc
inc
ret
andl
add
roll
and
sbbl
mov
inc
addr16
and
outsl
adc
jmp
mov
xor
scas
add
mov
aad
sub
jmp
inc
cmp
jge
add
adc
jne
sbb
pop
jne
leave
daa
rcll
std
and
xchg
or
jae
outsb
xor
push
inc
or
pop
jg
inc
or
jecxz
cltd
loop
xor
inc
adc
push
call
and
xor
sub
cmp
movsl
cmp
mov
mov
and
and
out
shlb
call
imul
test
xlat
dec
das
push
xchg
rorb
pop
subb
push
stc
shl
daa
rcrl
pop
cmp
scas
push
in
inc
push
insb
jns
bound
pusha
and
mov
fcoml
push
int
xchg
mov
call
std
jg
dec
test
addb
xchg
popa
jo
cmp
push
cmp
insl
scas
xor
movsl
mov
cmovbe
push
mov
shlb
insl
mov
add
insb
or
repnz
cwtl
cmp
shll
jmp
add
imul
push
jmp
ss
jmp
and
mov
xchg
inc
jne
fucomp
push
dec
add
mov
mov
sub
push
nop
or
sub
or
das
aaa
pop
xor
and
test
dec
nop
test
pop
cmpsl
fists
jp
sbbl
adc
cmp
scas
cwtl
ret
mov
pop
nop
push
add
xchg
je
inc
popf
add
and
xorl
loop
cmp
adc
dec
mov
sar
mov
mov
ljmp
call
out
je
adc
or
lcall
push
clc
sbb
push
imul
inc
mov
inc
mov
sarb
fsubl
mov
adc
sbb
sbb
jle
inc
ja
push
add
psubq
jg
lock
je
stos
adc
btr
cmp
jl
mov
xor
clc
imul
dec
mov
inc
lahf
or
cli
test
std
cmp
mov
sbb
aad
scas
dec
sbb
pop
ja
and
bt
jb
jbe
orb
add
sti
andb
adc
jmp
inc
cmp
jne
and
or
jne
les
inc
dec
adc
aaa
xor
add
pushf
xchg
lock
ret
sbb
inc
enter
out
mov
sub
mov
test
add
xor
mov
mov
lock
adc
fldcw
xor
xor
or
fistpl
nop
dec
pop
outsb
cs
pop
lock
jo
xchg
or
adc
popa
ret
mov
loopne
fisubl
jae
sbb
cmp
outsb
jmp
jo
push
sbb
aaa
jns
and
adc
jne
dec
nop
push
imul
pop
cmpsb
pop
sbbb
in
add
mov
movsb
rclb
mov
mov
adc
push
lahf
rorl
lret
roll
push
sub
push
add
lret
mov
aad
insl
adc
cmp
xchg
adc
jne
sub
xor
xchg
lcall
testb
je
gs
push
add
push
sub
daa
push
push
inc
inc
mov
adc
add
adc
mov
dec
push
inc
mov
adc
mov
movsl
inc
push
adc
push
dec
mov
push
cmpsl
and
mov
sub
push
inc
sub
ficoml
popa
jnp
test
jle
push
scas
xor
andl
sarb
xchg
out
pop
aam
or
pop
pop
lcall
push
dec
fwait
loop
ret
xchg
xlat
jne
mov
adc
and
inc
cltd
cmpsl
inc
cs
imul
rclb
push
shlb
adc
or
add
mov
mov
fbld
mov
xchg
sbb
rcrl
jmp
in
push
enter
cwtl
dec
in
mov
outsl
adc
jae
and
sub
aam
and
lock
or
lock
gs
sbbb
jo
xor
sbb
ds
pop
mov
dec
sbb
dec
xor
jno
into
jne
stos
cmp
pop
cs
dec
dec
test
mov
jns
dec
popa
add
inc
sbb
out
add
and
outsb
cmp
mov
lea
sub
mov
repnz
js
sbb
aam
movsl
dec
cs
or
jg
lahf
sahf
and
xchg
hlt
and
and
mov
pusha
leave
push
pandn
mov
lret
and
lahf
sar
test
rorb
mov
popa
ss
mov
cmp
lahf
js
xlat
fists
mov
pop
adc
inc
hlt
jp
pop
rorb
sub
jle
dec
push
orb
jmp
push
fidivl
lods
fnstsw
inc
pop
or
jg
add
not
add
dec
or
fs
out
fstps
or
xor
sbb
icebp
fmul
roll
pop
sahf
inc
xor
sub
add
pop
or
subl
sahf
jae
lock
clc
xchg
and
inc
dec
and
cld
iret
mov
add
pop
add
psubb
in
orb
in
ss
popf
and
mov
imul
jge
push
and
sahf
push
adc
or
lret
cmp
sarb
outsl
jne
ljmp
xor
inc
fimuls
adc
dec
push
mov
lret
movsl
data16
loope
outsl
test
mov
sub
sub
push
cmpl
push
pushf
pop
adc
dec
mov
fists
out
mov
mov
pusha
cmpb
jne
sbb
cwtl
pop
jecxz
addr16
lock
push
adc
push
test
jl
sbb
inc
dec
jne
xchg
adc
stc
add
inc
hlt
jmp
mov
jno
add
mov
or
ljmp
sbb
push
fs
jne
imul
fstps
cmp
push
adc
pop
test
jmp
xlat
iret
pop
push
mov
in
push
push
xor
ljmp
in
and
mov
pop
pushl
sub
jb
dec
je
jmp
jb
pop
ret
shrb
daa
or
and
sbb
test
out
pop
inc
leave
outsb
sbb
mov
lods
xchg
or
fsubrs
sub
xor
pusha
outsb
mov
fsubs
ret
sub
fadd
pop
divb
repnz
jnp
roll
pop
clc
add
mov
lock
je
sub
push
test
nop
sbb
insb
cmp
shll
sub
ret
mov
or
adc
mov
or
and
js
dec
imul
mov
jge
mov
xchg
add
pop
pop
push
push
sbb
xor
inc
sbb
sbb
out
aam
inc
pop
jo
xor
es
xorb
xorl
ja
outsb
imulb
daa
es
dec
clc
rol
fadds
pop
sbb
lahf
pop
and
sahf
enter
adc
arpl
repz
shll
push
mov
pop
pop
fdivrs
sbb
test
pop
mov
and
dec
sbb
cmp
cmc
xor
dec
jmp
test
mov
mov
and
sbb
imul
inc
in
fnstcw
pop
cmp
pop
xchg
push
in
push
jecxz
pop
xor
jne
inc
shrl
nop
pop
in
lods
inc
stos
test
in
fisttps
adc
outsl
and
cmp
iret
jno
pushf
sbb
popl
daa
pop
dec
ds
lahf
push
lock
mov
pop
cmp
sbb
hlt
inc
jno
xchg
adc
in
stos
and
loope
in
xor
and
and
rolb
pop
inc
lock
mov
adc
cmp
add
mov
inc
dec
ds
push
mov
rolb
push
cwtl
clc
notb
or
and
or
adc
movsb
sbb
in
pop
sarl
cltd
pop
xchg
xlat
hlt
push
imul
in
pop
mov
mov
fcoml
inc
cwtl
dec
enter
hlt
clc
xchg
sbb
into
scas
and
pop
sub
xor
and
xor
dec
push
inc
xor
inc
or
xlat
adc
xor
loopne
pop
or
push
sbbb
fisubrl
outsb
fistpl
js
mov
dec
das
xor
xor
mov
push
hlt
shl
sub
adc
sti
and
call
cmp
aad
pop
cmc
arpl
mov
fwait
pop
call
bound
or
cmc
add
in
mov
push
or
aas
cmpsl
lods
pop
loopne
add
mov
cmp
iret
fadds
cmp
jo
loopne
or
daa
lds
add
pop
inc
jno
sbb
imul
hlt
cmp
or
sbbb
or
jmp
inc
inc
cmp
hlt
out
push
hlt
push
push
or
cmp
or
add
xchg
cmp
pusha
aaa
jbe
lods
nop
cmp
and
push
and
inc
cmpsb
push
daa
ret
inc
in
and
inc
out
mov
ret
mov
fwait
sbb
loope
hlt
gs
add
lds
add
push
filds
mov
xor
pop
filds
movsb
inc
fsubs
xchg
es
push
ds
out
or
pop
or
insb
adc
xchg
lret
or
mov
push
push
lret
daa
xchg
nop
mov
pop
sub
adc
or
sbb
mov
in
daa
sbb
sub
jno
push
clc
clc
rol
fiaddl
repnz
aas
ret
xchg
test
sub
lea
mov
fldenv
push
push
jg
enter
mov
push
adcb
lahf
pushf
adc
pop
insl
pusha
or
add
shll
leave
cmpl
shlb
pop
dec
push
rorl
and
pusha
fs
push
pusha
je
mov
add
sub
mov
mov
call
add
sub
fists
sbb
adc
mov
pop
popa
lea
jl
dec
test
shlb
or
pop
push
mov
sbb
mov
insl
add
fiadds
cmp
jo
add
scas
pop
popa
mulb
pop
xor
xor
scas
popa
js
shrb
sub
popa
inc
or
mov
jl
bound
test
loopne
mov
faddl
in
adc
nop
mov
mov
je
test
lock
adc
xor
push
jo
addr16
xchg
and
add
sarl
in
adc
std
push
arpl
sub
mov
gs
jmp
mov
adc
push
imul
sub
scas
mull
std
cmpb
jne
jb
push
jns
or
jne
int
arpl
lods
in
pop
arpl
shll
or
gs
aad
and
sub
arpl
popa
test
mov
pop
add
inc
add
or
add
cmp
inc
pop
jnp
ljmp
jne
testb
orb
sbb
cmpsl
mov
and
sub
inc
aaa
xchg
xor
mov
dec
fwait
or
cmpsl
pop
cmp
push
adc
sub
xchg
ljmp
ret
xor
adcb
mov
call
adcl
and
sbb
sbb
andl
add
pusha
push
cmc
mov
aam
and
or
mov
inc
test
dec
dec
sbb
and
push
inc
and
and
sub
sub
adc
test
xorl
rorl
fildl
roll
sub
ret
addb
mov
test
lea
hlt
inc
stos
xor
add
lock
or
hlt
jb
aam
fstpl
xchg
pop
iret
iret
mov
xor
imul
or
dec
sbb
add
pop
adc
adc
mov
lock
push
lcall
fistpll
je
jg
mov
jmp
mov
add
cmp
adc
inc
jp
pop
adc
add
imul
jo
mov
or
arpl
inc
add
repz
pop
fsqrt
jl
rcll
sub
orb
out
bound
repnz
push
jl
frstor
pop
adc
aas
jl
mov
bound
sbb
repnz
popa
ficomps
sbb
add
mov
mov
push
push
cmpsl
push
mov
dec
add
sbb
xchg
mov
loope
fwait
imull
and
das
int
je
or
mov
mov
fiaddl
movsb
or
sbbl
add
jg
xor
jge
inc
or
or
xchg
mov
cmp
adc
ss
pop
dec
push
fidivs
jno,pn
sbb
repnz
dec
or
xchg
push
stos
jecxz
fcmovb
dec
nop
pop
bound
jl
orl
pop
subl
inc
hlt
shr
push
test
shl
pop
insl
inc
sahf
mov
or
and
les
test
jl
mov
xchg
cmp
jne
mov
or
or
sbb
mov
clc
jle
mov
fistpl
and
jle
mov
popa
hlt
jl
repz
fwait
test
je
lea
test
push
in
sbb
mov
andb
or
nop
and
cmp
or
rcll
xchg
ljmp
push
push
or
enter
xor
rcrl
push
jge
add
stc
add
add
push
add
dec
out
adc
pop
cwtl
dec
push
push
mov
inc
mov
mov
add
mov
or
rcll
push
jp
inc
dec
or
pop
out
mov
leave
mov
or
and
insl
ret
popf
fxch
mov
add
add
call
subb
mov
ret
xchg
sbb
mov
xchg
cmpl
cmpl
add
mov
sbb
jns
loop
js
fs
ja
fiadds
adc
jno
loop
cmpsl
shrb
pop
arpl
outsb
jecxz
add
fcom
roll
ret
inc
loopne
jno
xchg
ret
fmuls
push
pusha
xor
sbb
mov
sbbb
cmp
or
mov
cli
sbb
add
fldl
jae
pop
fs
inc
xor
and
ret
xchg
mov
out
fsubs
jecxz
sub
push
ja
mov
mov
pop
aaa
test
add
outsl
cwtl
dec
lea
mov
in
add
mov
sbb
pusha
mov
arpl
dec
mov
iret
mov
rclb
xchg
lock
int3
xchg
adc
inc
sbb
xor
mov
icebp
or
push
add
jne
and
jbe
push
or
sbb
cmp
sbb
cmp
add
or
ja
add
in
in
jmp
add
mov
jmp
lret
stc
pop
movsb
adc
add
xchg
movsb
mov
test
mov
xor
sub
js
div
jge
pusha
xchg
mov
lea
inc
inc
icebp
enter
add
outsb
cmp
rcrb
cmp
arpl
cs
cmp
rcrb
fisttps
dec
mov
popf
mov
ffree
js
mov
sbb
sbb
pop
mov
add
cmp
rcrl
jp
pop
mov
mov
adc
in
xchg
fcoml
mov
cmp
in
jb
sub
push
pusha
mov
pop
jo
jb
mov
fdivrl
or
icebp
rol
adc
out
adc
mov
popf
jo
divb
mov
mov
aaa
icebp
pop
push
cs
lods
inc
and
ret
lock
hlt
xor
arpl
lret
xlat
inc
sbb
fucomp
add
inc
cs
data16
jmp
xchg
add
or
dec
in
es
loopne
fdivl
aad
sbb
fcomps
dec
xor
lret
dec
sub
xchg
movsb
add
push
popa
push
or
mov
daa
jns
push
sbb
and
dec
or
mov
mov
and
jmp
idivl
pop
cmp
test
add
mov
or
inc
and
out
or
in
aaa
jo
andl
leave
or
adc
or
add
add
sbb
outsl
addr16
mov
popa
or
faddl
or
push
xlat
sub
mov
movsb
push
push
push
add
negl
or
add
cmc
mov
sti
rorb
clc
add
pop
mov
add
std
mov
idivl
data16
sbb
or
cmp
icebp
or
inc
add
rorl
add
jo
push
mov
fidivrl
xchg
cmp
je
push
jne
aam
ss
pop
jmp
push
or
push
push
lods
aad
test
pop
or
push
cmpsb
daa
or
loope
and
lcall
or
push
mov
ljmp
in
out
xor
add
dec
mov
cmp
jle
or
and
inc
jo
xlat
test
icebp
lods
add
lds
nop
sub
fistps
mov
push
mov
mov
adc
shrb
mov
scas
vminsd
add
jae
sub
aam
add
jo
add
add
into
jae
push
mov
and
push
push
addr16
out
aas
into
js
mov
xor
lods
icebp
add
call
mov
push
pop
mov
xor
jmp
adc
imul
js
push
pop
rolb
daa
lcall
push
sub
ficompl
or
addr16
sbb
or
shlb
arpl
or
stos
inc
xor
adc
ret
push
jne
lods
dec
adc
push
pop
daa
outsb
pop
jo
push
out
jl
push
test
pop
add
mov
or
outsl
jo
imul
mov
xlat
out
int3
fwait
dec
mov
push
nop
mov
faddp
nop
arpl
sub
test
inc
push
or
nop
sbb
lea
jp
sub
inc
xchg
adc
cmpl
sub
popa
jmp
insl
fidivs
jmp
pop
jmp
out
mov
divl
add
in
pop
inc
sbb
pop
add
mov
add
loop
mov
adcl
add
or
or
and
faddl
test
add
push
aaa
push
xchg
out
push
add
loopne
sub
fidivrs
mov
push
repnz
or
and
mov
mov
lods
sub
cli
pop
jmp
mov
std
push
add
scas
jmp
lea
adc
mov
mov
cmp
jo
mull
mov
mov
push
mov
add
ret
and
fisttpll
sbb
push
lahf
int
ss
rcl
fstpl
and
rolb
xor
xchg
mov
xchg
cld
xchg
or
dec
clc
out
mov
sub
inc
or
fs
jns
rolb
add
cmp
mov
xchg
daa
adc
imul
inc
lcall
shlb
and
inc
dec
add
xor
mov
enter
insb
fistpll
popa
jne
adc
addr16
fwait
xchg
jmp
aaa
push
pop
inc
cmp
jl
or
xor
xor
sub
lcall
jo
cld
mov
andw
rcr
dec
push
pop
pop
mov
les
fnstcw
add
inc
add
clc
jns
sbb
fbld
cmp
or
and
pop
out
inc
mov
lock
or
add
mov
call
adc
adc
xor
ss
xor
pushf
cmpb
add
dec
je
and
subb
jnp
inc
jo
add
add
xor
dec
jb
sub
cmp
out
aad
mov
add
add
pop
imul
dec
or
enter
orb
popa
repnz
subb
pop
push
and
ja
enter
jle
sub
cmp
add
adc
mov
ret
mov
fs
les
mov
fucomp
in
test
mov
adc
mov
movsb
mov
inc
xor
pop
aas
adc
add
call
sub
icebp
cmpsl
nop
negl
jae
xor
jnp
sub
repz
jo
jne
sbb
dec
adc
add
sub
xchg
loopne
js
adc
pop
or
in
jl
mov
inc
loopne
insb
sti
fmull
xchg
testb
dec
hlt
aaa
test
jo
pop
hlt
jl
inc
or
shlb
aas
bound
decl
fisubrs
pop
sarb
inc
lret
call
dec
test
cmpsl
jp
xchg
or
fcom
adc
push
fldt
push
push
pop
lock
and
or
xor
and
jnp
mov
xor
loope
shrl
add
ss
xchg
movsb
fstps
xor
lcall
outsl
cmp
push
add
push
or
push
add
out
loope
sbb
sub
push
das
jg
push
dec
sbb
lock
sub
leave
adc
xor
inc
div
pop
loopne
adc
and
add
and
nop
fcoms
sbb
clc
arpl
mov
xor
bound
or
or
fisubs
leave
xor
pop
jo
movsb
inc
ljmp
test
sbb
jns
pop
outsl
pusha
ss
pop
jp
or
xor
pop
cwtl
outsb
adc
xor
adc
mov
je
and
xlat
es
xlat
dec
xor
push
jbe
sub
and
hlt
imul
call
loope
mov
movswl
imul
cmc
shll
inc
xchg
pop
or
in
jno
sarl
pushl
dec
jne
jp
sub
sub
call
mov
ret
cmp
push
sub
jmp
mov
sub
fucom
sbb
lds
push
cmp
xor
xchg
add
mov
push
jecxz
imul
xchg
inc
lret
mov
aas
rcrb
dec
ja
ja
mov
or
movd
fsts
xor
shrb
sbb
hlt
cmp
lret
popa
cld
xor
test
pop
jo
shrb
pop
outsl
test
inc
mov
shll
sub
push
push
and
iret
sbbl
push
outsl
adc
mov
inc
enter
pop
sbbl
test
sbbb
fisubs
mov
inc
lods
dec
or
dec
or
jnp
pop
shlb
mov
push
dec
cmp
mov
jo
mov
jno
inc
arpl
adcb
and
add
cmp
and
sbb
and
mov
js
xor
cld
cltd
jno
xor
lods
shll
and
mov
inc
in
inc
mov
dec
sub
fcoml
imul
pop
xor
cmp
cmpsl
mov
pop
mov
mov
xor
pusha
pop
add
jge
incb
xchg
stc
test
mov
or
pusha
out
into
push
popf
gs
sarb
and
aaa
int3
ret
mov
testl
sbb
inc
ljmp
sub
data16
dec
mov
inc
sbbb
pushf
jae
pop
test
mov
loope
pop
push
popf
sahf
mov
lea
sbb
mov
mov
scas
les
pop
add
lods
shll
xor
lock
je
int
xchg
jo
imul
xchg
in
mov
jno
aad
adc
pop
mov
xor
gs
dec
sbb
adc
push
and
or
or
dec
stos
push
test
gs
sub
cmp
movsl
inc
cmpsb
add
and
ret
sbb
add
loope
outsb
pop
pop
pop
test
push
sub
mov
in
xor
inc
adc
dec
aad
fsts
xchg
or
shll
inc
or
stos
pop
sti
test
cs
loopne
sub
adc
pop
or
inc
xor
stos
addr16
pop
fistl
prefetcht2
lock
inc
sub
lea
cwtl
les
shll
lock
inc
mov
sub
add
nop
cmpsl
and
lods
and
pop
inc
mov
adc
cmp
out
fcoml
sbb
and
adc
adc
arpl
pop
lods
or
jae
pop
ss
aad
jmp
test
sbb
lret
jb
pop
push
mov
xchg
mov
fldenv
pop
pushf
jne
je
or
sbb
cmp
aaa
xchg
js
jbe
sbb
mov
sbb
add
xor
pop
mov
adc
orl
std
push
jne
fimuls
adc
stc
fnstenv
xlat
sub
inc
xor
inc
mov
sahf
movsb
mov
aaa
mov
cmpsb
imul
xor
nop
aaa
rorl
add
or
mov
in
push
cwtl
and
and
dec
enter
dec
dec
in
fwait
or
adc
fstpl
roll
add
imul
test
stc
cmp
add
and
push
js
movd
dec
push
and
pop
bound
pop
out
fucomi
or
ds
mov
push
inc
bndstx
sub
inc
nop
sti
ss
mov
jle
pop
cmp
push
in
jno
fstps
jge
popa
sub
or
in
and
cltd
mov
loope
in
clc
adc
stc
sub
xchg
xor
movsb
sub
ja
cmp
mov
jmp
aad
dec
ret
and
or
fildll
mov
in
sbb
cmpl
xchg
xor
enter
add
in
mov
flds
lock
add
mov
mov
nop
push
xchg
je
sbb
mov
setg
add
or
in
movups
mov
or
mov
push
and
and
out
or
sbb
jle
add
je
shll
cmp
pop
inc
cmpsb
xchg
xor
add
mov
adc
and
mov
sub
fistpll
and
sbb
xchg
cwtl
and
xchg
mov
pop
add
sbb
daa
nop
imul
jnp
dec
cmp
inc
icebp
inc
pusha
xchg
test
movsbl
sbb
add
push
adc
inc
adc
jecxz
daa
cmp
ret
in
sub
insl
sqrtps
fwait
out
movsb
rclb
divl
push
aas
sub
mov
mov
loopne
in
lock
mov
push
push
mov
loope
push
jno
cltd
and
into
jns
mov
shrl
dec
fcoms
cmp
push
pop
lods
xchg
add
dec
imul
out
loopne
xor
or
in
adcl
adc
inc
inc
inc
pop
popf
pop
sahf
faddl
gs
stos
mov
cli
inc
mov
dec
aad
lret
or
lds
out
cmp
rclb
enter
pop
sbb
hlt
inc
xor
adc
jp
test
cli
into
mov
cmp
sti
leave
loopne
divb
sbb
jne,pn
xor
daa
or
push
fistpl
add
jo
add
and
int3
sub
fwait
sbb
insb
mov
mov
jbe
mov
add
pop
dec
jp
test
dec
mov
cwtl
and
jle
rol
outsl
out
add
sbbl
jne,pt
scas
lock
adc
or
xor
test
loope
sbb
inc
test
push
push
jl
fnstenv
adc
dec
xor
cmpb
pop
inc
push
push
fidivrl
dec
mov
scas
sbb
shll
or
mov
pushf
call
mov
shrb
shrb
sbb
test
cmpsl
jne
inc
test
and
arpl
push
dec
hlt
mov
cmp
call
cmpb
xchg
push
aaa
push
bound
sarb
push
add
jb
lock
and
andl
dec
xchg
lock
sti
add
push
add
and
xchg
andb
pop
mov
addr16
clc
jge
data16
jp
xor
adc
jl
push
xchg
loopne
add
xchg
call
pop
mov
jecxz
xchg
push
add
pop
ffreep
and
lock
add
sub
clc
push
pusha
mov
js
fs
int
loop
mov
std
subl
or
repz
fdivl
xchg
pop
je
mov
jnp
data16
xchg
cs
xchg
inc
es
push
cmp
mov
push
and
mov
idivl
push
ret
jne
push
dec
call
test
xor
xchg
jbe
enterw
das
mov
push
jno
fwait
aaa
cmpsl
in
add
and
ret
cmp
insl
xchg
test
pushf
jmp
cmp
hlt
and
ret
into
pop
push
fidivl
enter
ja
mov
fimuls
add
or
outsb
roll
iret
xchg
push
xor
shl
pusha
inc
push
jnp
and
cld
pop
fildl
fwait
mov
mov
push
push
inc
jmp
mov
mov
xor
cmp
and
jo
data16
daa
rcl
add
je
inc
jnp
cmpsb
shlb
cmpb
iret
mov
push
aas
js
sbbb
adc
rclb
fadd
out
and
add
ja
cmp
cmc
cmpl
jge
mov
xchg
adc
cmpl
popa
les
pop
and
inc
rcl
add
or
les
fists
jno
dec
and
mov
xchg
sbb
ret
or
je
out
lret
dec
xchg
and
xor
imul
call
lods
cmp
or
loopne
adc
sbb
pop
mov
xchg
scas
int
fdivl
mov
daa
fcomp
inc
flds
xor
mov
mov
out
test
mov
sbb
repz
dec
adcb
sub
mov
mov
sbb
sbb
cmp
jb
test
jmp
gs
imul
enter
orl
dec
xchg
sub
jl
cmpsb
sub
adc
rolb
sbb
das
xchg
mov
lods
aaa
and
add
and
or
jne
and
cmpsb
pushl
pop
leave
dec
nop
sub
push
orl
push
sbb
int3
mov
push
fistps
dec
je
rol
imul
dec
inc
test
and
push
shrl
adc
inc
ss
push
test
mov
pop
lret
inc
or
imul
push
pop
hlt
les
xchg
and
and
mov
adc
out
mov
mov
or
xor
popf
cmp
and
xor
jno
adc
push
jl
mov
xchg
bts
jmp
lds
mov
aam
roll
outsl
sub
lahf
inc
aam
ja
clc
mov
add
fsubs
push
ret
daa
fwait
sub
test
xlat
dec
mov
xchg
mov
mov
adc
adc
lods
movsb
out
adc
cmpsl
adc
mov
adc
push
je
push
adc
mov
sbb
push
and
pop
or
ret
sub
jae
sub
enter
cltd
aaa
dec
inc
adc
push
jae
push
cmpsl
cmp
bound
adc
jae
push
and
add
pop
push
inc
rcll
cmc
push
orl
push
dec
xchg
sbb
mov
in
out
push
lcall
ja
add
sub
cld
lcall
lock
add
imul
sbbl
add
dec
fucomp
adc
pop
popl
cs
push
daa
jle
imul
mov
sub
cmp
adc
pusha
repz
add
inc
and
adc
push
mov
pusha
in
dec
repz
xor
pop
xorb
sbb
es
cmpsb
imul
sbb
sub
push
shr
insb
xor
pop
mov
xchg
dec
cmpsb
in
add
mov
rcl
push
ja
jmp
les
push
adc
ja
pop
sti
jmp
mov
xchg
sbb
or
push
cmpsl
add
popf
mov
pop
rcrl
das
xchg
popf
or
jb
adc
xor
ja
hlt
jge
inc
fisubs
push
dec
outsl
and
lcall
and
mov
lock
shlb
adc
test
mov
pop
or
and
sbb
and
aam
and
pop
shll
jae
ret
lcall
add
push
sbb
data16
sub
call
cmp
jl
xchg
mov
lock
shrb
push
out
mov
push
dec
test
cmp
dec
adc
xlat
es
rorl
add
movsl
mov
mov
mov
inc
inc
call
call
in
xchg
ret
sbb
pushf
fsts
cmp
cmpsl
imul
cmove
leave
push
hlt
or
test
rorb
sarl
int
inc
sub
loope
pop
das
aam
sbb
cmp
filds
push
sub
sar
push
popa
and
pop
or
add
scas
js
in
movsl
mov
mov
pop
bound
adc
add
fs
mov
int
int3
movsl
pop
addl
and
shll
lea
pop
repz
shlb
jl
leave
pop
in
hlt
jle
imul
mov
arpl
dec
lock
cwtl
or
push
insb
mov
mov
or
mov
sbb
inc
popf
sub
xor
int3
push
insl
popa
mov
hlt
bound
inc
inc
dec
xchg
clc
dec
jb
jo
dec
call
shrb
pop
push
push
or
stos
xor
incl
sub
aas
sbb
xor
ss
cld
mov
mov
popf
jnp
xchg
and
pop
push
fstps
jbe
xchg
push
lods
les
adc
imul
ret
lcall
outsb
unpckhps
je
xchg
push
cld
loopne
xchg
xchg
rorb
mov
mov
xor
cs
push
movsb
or
shl
jb
dec
jp
call
daa
aam
leave
subb
clc
xor
jmp
mov
sti
mov
insl
adc
cmc
sub
push
daa
mov
insl
dec
pop
pop
cwtl
jmp
push
mov
pop
lea
lea
into
leave
push
insb
jmp
mov
cmp
cmp
add
jmp
dec
mov
add
and
sub
adc
jg
xor
mov
lret
lods
inc
or
inc
adc
cmp
pop
or
or
mov
js
test
pop
fdivl
mov
or
add
fs
call
or
sbb
cmp
pop
push
xchg
enter
mov
ret
jl
adc
mulb
add
mov
push
add
and
ds
mov
xor
orl
pop
insb
add
xor
je
sbb
sbb
and
push
call
fisttps
and
jb
add
popl
or
mov
cmpsl
movsl
movsl
fadd
push
pusha
or
jns
les
lods
movsl
fildl
ret
sub
fcompl
rorl
adc
push
les
into
je
test
inc
outsl
cmpl
mov
jg
push
inc
mov
add
xchg
sbb
push
pop
push
cmp
xchg
add
addb
fcmovb
xchg
mov
push
mov
adc
pop
adc
adc
add
roll
mov
xor
sub
cmp
insb
add
xchg
out
cmpsl
in
in
xchg
push
push
push
cmp
or
or
pop
sbbl
jbe
sub
push
xchg
test
lock
hlt
mov
pop
xchg
aaa
or
sbb
cmp
dec
add
and
jmp
mov
ljmp
adc
outsb
add
mov
jl
jae
ss
loope
imul
pop
jns
cmpsl
sbbl
out
test
add
and
xchg
test
in
jne
leave
sub
add
lods
adc
cld
test
mov
jo
jg
mov
xor
pop
pop
cwtl
cmp
push
cwtl
loopne
sbb
outsb
or
sbb
in
push
inc
pop
sbb
test
test
add
or
push
adc
pop
cmpl
xchg
or
lock
gs
enter
pop
lock
or
cmp
adc
and
cmpb
sbb
inc
fisttpll
pushf
in
mov
sbb
mov
mov
adc
dec
das
cmp
or
push
iret
adc
mov
push
adc
not
fidivl
fnsave
push
pop
stos
inc
cmp
mov
sbb
sgdtl
flds
int3
bound
loop
or
jmp
or
imul
jle
cltd
call
scas
rcrl
mov
sub
or
sbbb
or
or
cmp
popf
loope
inc
add
rolb
lcall
hlt
jle
push
mov
sub
inc
add
insb
test
push
pop
pop
inc
pop
cltd
imulb
pop
cmpsl
das
cmpl
or
add
sbbb
shll
hlt
jns
fidivl
hlt
mov
mov
or
inc
xor
enter
shrb
push
push
inc
std
cmpsl
pop
imul
cmp
add
xor
and
andb
xor
stos
popa
in
int3
push
sub
or
enter
icebp
ret
push
push
je
test
push
jmp
jmp
clc
inc
mov
inc
sti
mov
dec
xchg
add
lea
fmull
push
mov
and
jb
mov
mov
jmp
inc
sub
fnstcw
lret
xchg
add
inc
push
ret
fistpl
fisttpl
in
adc
rorb
mov
pop
mov
pop
cli
sti
pop
adc
sbb
pop
or
push
jp
adc
mov
sbb
call
pop
sbb
mov
xlat
pop
mov
jmp
pushf
movsb
lahf
dec
mov
mov
adc
push
stos
daa
dec
sub
orb
inc
inc
and
movsb
iret
test
xlat
lahf
dec
popa
dec
sbb
iret
push
jo
xlat
aas
shll
dec
popf
jge
xor
xchg
icebp
push
or
or
mov
mov
clc
add
inc
adc
loopne
jnp
outsl
lahf
into
jle
fadd
fistpl
xor
test
dec
xchg
scas
and
pop
xchg
fsubr
ret
scas
jnp
cmp
je
push
inc
dec
fs
sbbl
jnp
xor
fistl
sbb
add
orw
sbb
data16
xor
fwait
mov
inc
sbb
jnp
nop
push
sbb
adc
cwtl
xchg
adc
sahf
adc
dec
mov
pusha
outsl
pop
lret
sub
dec
xchg
jno
or
into
adc
mov
pop
xlat
dec
cmc
dec
lea
dec
jns
jnp
mov
mov
jl
test
jmp
jecxz
shlb
testl
test
lds
mov
add
fisubrs
push
xor
adc
imul
mov
nop
pop
clc
pop
adc
aad
xor
mov
inc
sbb
fs
add
cmp
adc
movsl
mov
mov
mov
hlt
leave
pop
adc
cmpsb
dec
pusha
scas
add
xchg
or
mov
adc
test
xchg
adc
sbb
adc
insb
stos
dec
popa
xor
adc
cli
rclb
or
lahf
or
aad
and
push
pop
mov
inc
es
jp
mov
xor
inc
jl
jo
fimull
daa
sub
loope
and
cld
push
push
out
fisttpll
loopne
fildll
daa
out
mov
add
cmp
repnz
int3
in
inc
incb
inc
nop
hlt
bound
sub
aam
dec
add
inc
sub
lock
outsl
jo
das
rcrl
into
push
fisttps
xchg
push
push
adc
xchg
jbe
inc
inc
push
inc
idivl
arpl
decb
xor
xchg
cmp
les
mov
push
xchg
cmp
jne
es
cs
js
loop
mov
fsubl
jo
and
nop
sbb
or
popa
or
or
je
adc
mov
mov
inc
jo
addr16
pop
dec
mov
xor
cmpl
sub
pop
mov
sbb
cwtl
and
or
adc
inc
dec
jne
push
mov
rorb
inc
or
popa
xor
dec
outsl
outsb
dec
push
clc
or
xor
and
mov
mov
jmp
sbb
sbb
and
je
mov
adc
ljmp
mov
loope
and
add
and
xor
xor
leave
aas
test
xor
ss
lahf
jge
clc
std
pop
jns
jg
push
dec
cmp
out
aaa
xlat
mov
pop
fwait
lock
das
test
add
or
and
outsb
lods
push
dec
test
call
and
push
mov
sub
orl
add
add
dec
and
dec
jle
add
cmp
sub
dec
adc
add
add
push
jae
xchg
xor
sbb
cmpb
mov
cmp
add
mov
shrl
jbe
js
push
ja
jge
jne
dec
push
or
cmp
adc
or
lea
mov
jle
pusha
mov
jle
mov
rcr
inc
and
dec
fwait
into
adc
pop
adc
pop
adc
cmpsl
adc
push
pop
or
push
pop
out
sbb
inc
mov
inc
or
dec
and
ljmp
mov
pop
push
mov
dec
scas
jg
xchg
sub
cltd
jge
xlat
sbb
roll
add
dec
mov
adc
add
or
sbb
je
and
lidtl
push
inc
add
outsl
add
sbb
stos
sbbb
sbb
jo
ds
jmp
dec
ror
pop
icebp
loope
sbb
push
push
out
inc
push
or
xchg
das
cmp
nop
fnstsw
adcb
cmp
ja
shlb
sbb
pop
push
push
rcrb
xlat
inc
lea
mov
cmpsb
ss
fdivs
ljmp
cmp
inc
or
inc
lods
jb
fidivs
push
out
mov
or
out
les
repz
inc
sbb
and
inc
sbb
test
adc
xor
enter
adc
mov
es
sbb
lret
mov
call
and
pop
popa
pop
frstor
wrmsr
push
sub
or
mov
test
cmp
rolb
pop
xlat
in
mov
push
aad
or
das
pushf
stos
inc
push
lods
mov
push
adc
or
push
mov
jg
btc
add
subb
pushf
test
adc
mov
mov
adc
cltd
cmp
fisttpl
pop
lret
jl
fnstsw
iret
ret
adc
jo
add
cmp
dec
sub
roll
jl
leave
jle
shl
sbb
add
lret
or
imul
test
push
or
adc
sub
inc
shlb
inc
cmp
mov
test
mov
xlat
pop
sti
test
fstl
lret
cmp
jne
add
sbb
fistpl
lret
rorb
dec
subl
aas
aaa
dec
push
fs
movl
mov
in
xorl
lret
push
pop
js
adc
lods
cmp
jns
sbb
push
pop
out
inc
add
and
lods
sbb
push
dec
or
mov
or
mov
add
hlt
jle
mov
std
cmp
dec
or
fwait
or
daa
or
adc
scas
xchg
popa
add
pushf
sbb
mov
push
in
jns
fdivl
xor
mov
ja
mov
adc
fsubl
ret
loopne
outsb
push
and
cmpsl
test
jmp
pop
dec
push
sub
roll
push
push
outsb
in
add
popf
std
ja
jmp
or
sbb
xor
mov
push
sbb
xor
jb
loopne
jnp
aam
out
call
adc
adc
lds
mov
xchg
xor
sbb
out
je
add
push
mov
mov
daa
aad
clc
and
push
push
mov
ss
call
xchg
or
dec
sub
sahf
sbb
movl
enter
push
nop
dec
es
adc
sbb
mov
test
push
pop
clc
fisttpll
add
arpl
bound
insl
add
in
and
or
mov
fwait
pop
xor
stos
adc
iret
adc
sbb
add
adc
pop
daa
pop
jo
loopne
sub
ret
aaa
mov
pusha
adc
test
or
push
mov
inc
loop
loope
or
pop
pop
pop
lock
mov
push
scas
inc
and
out
sbb
movb
xor
sarb
mov
or
mov
cmp
fisttpl
mov
cmp
adc
or
xor
adc
sti
mov
push
push
mov
cmp
add
add
dec
andb
adc
push
ljmp
rcrb
mov
ja
pop
test
inc
pop
lods
popf
mov
mov
push
push
cs
add
push
lcall
mov
mov
add
pop
test
lock
push
sub
and
test
fdivrp
mov
lock
inc
pop
out
pop
outsb
pop
or
imul
push
and
es
jge
lret
add
sub
mov
movsl
cs
out
sarb
inc
scas
repnz
sbb
mov
fimull
cmpsb
test
dec
nop
mov
xchg
clc
mov
and
insl
rclb
aaa
pop
cmc
adcl
jae
cwtl
lret
mov
cmp
pop
shrb
cmp
pop
or
or
addl
fs
in
push
bound
xchg
aaa
inc
mov
inc
insb
rorb
mov
sbb
jae
push
sbb
jbe
sbb
js
jp
fs
inc
jnp
jge
nop
inc
push
jle
pusha
nop
inc
push
sbb
arpl
sbb
pushw
sbb
push
nop
inc
imul
inc
push
outsb
outsl
push
nop
inc
push
sbb
push
inc
push
sbb
push
push
sbb
pop
pop
pop
sbb
pop
pop
pop
fs
inc
push
pop
pop
inc
nop
inc
push
sbb
inc
inc
push
sbb
inc
push
sbb
dec
dec
dec
sbb
dec
dec
dec
fs
inc
push
dec
dec
xor
xor
inc
push
sbb
ss
stos
dec
cwtl
aaa
cmpsl
jge
pop
xchg
add
mov
add
add
xor
inc
mov
xor
push
push
cmpl
xor
arpl
mov
or
aas
mov
shrl
test
xchg
mov
or
je
imul
or
popa
pop
sub
dec
lods
decb
xchg
add
jmp
jae
cmpl
or
in
nop
les
add
jae
je
shlb
loopne
insl
sbb
je
insb
inc
fdivl
push
pop
lock
data16
leave
mov
dec
je
arpl
adc
mov
outsb
gs
cmp
gs
cmc
lods
sbb
insb
or
jae
nop
das
dec
lds
push
fisttpl
fisubl
int
cs
jo
std
imul
sbb
cmove
push
or
pop
mov
insl
adc
push
inc
jge
ffree
sbb
jae
mov
divl
popa
loop
bswap
lods
xlat
xchg
mov
insl
inc
insb
addr16
push
push
pop
fcompp
fbstp
insl
dec
outsl
jo
je
pop
inc
jns
adc
sbb
mov
fdivs
int
and
add
pop
cwtl
fsts
xor
or
adc
enter
pop
adc
insb
movb
jb
fistl
pop
push
int
push
add
dec
jge
jp
xor
or
push
cli
arpl
or
xor
pop
inc
nop
popf
std
or
jae
and
shrb
xlat
outsl
xor
mov
adc
cmp
inc
filds
mov
std
int3
and
incl
mov
popa
push
mov
sub
or
sbb
adc
movl
out
stc
push
mov
push
mull
and
inc
pop
fs
insl
xorl
push
xor
xchg
sub
lcall
cs
or
push
fsub
adc
add
mov
test
lret
add
mov
push
aam
adc
cs
aas
clc
loopne
loope
xchg
sysret
aas
nop
ret
fistl
loopne
idiv
rcr
inc
pop
add
and
aaa
mov
loop
push
push
dec
gs
loopne
clc
add
mov
cwtl
aad
add
shl
inc
jnp
out
cmp
jo
nop
xor
inc
lcall
pushf
addb
pop
inc
mov
xchg
lahf
cwtl
pop
mov
insb
loope
add
gs
push
mov
sahf
pop
sbb
les
outsb
leave
add
xorb
and
add
jl
jl
add
add
add
xor
cmp
adc
sarb
or
aas
push
inc
je
or
adc
cmpsl
lret
mov
inc
rcrb
pushl
or
mov
push
push
cmp
jno
xchg
xchg
add
xchg
in
dec
pop
push
inc
in
add
repnz
movsb
mov
lds
jns
xchg
pop
cmp
push
xor
mov
dec
insb
fimuls
test
pop
jo
in
arpl
or
fiadds
sbb
pop
sbb
mov
jne
push
movsl
xchg
lret
mov
imul
and
push
aas
pop
int3
push
xor
mov
xor
scas
test
pop
fstl
leave
cmp
imul
dec
shlb
fcoml
push
xchg
ret
push
xchg
cmp
sbb
fsubr
ror
sbb
int3
stos
xor
push
int3
lret
mov
es
mov
rorb
fldl
and
imul
enter
add
jae
inc
int
sub
push
sub
or
and
inc
mov
and
mov
inc
scas
jo
divb
push
mov
cmp
push
pop
imul
movsb
pop
mov
outsb
rolb
inc
imul
adc
or
or
mov
and
leave
and
lds
cmpsl
mov
mov
xor
push
push
rcrl
std
pop
xchg
gs
insl
popa
addr16
adc
mov
adc
je
fs
dec
mov
pushf
or
push
or
push
jo
jo
pop
pop
leave
mov
cmp
jl
mov
ret
adc
push
dec
cwtl
adc
sbb
inc
int3
sbb
sbbb
push
jno
pop
dec
sbb
pop
or
add
scas
es
jecxz
dec
lods
daa
pop
sub
adc
xor
mov
punpcklbw
xor
inc
push
mov
push
int3
and
pop
popw
push
test
arpl
mov
push
imul
sbb
push
push
dec
push
in
or
arpl
mov
add
xchg
and
push
xlat
xchg
push
insb
mov
jo
aam
sub
mov
cwtl
das
push
mov
push
push
pop
repz
ret
sub
hlt
push
or
jbe
cmp
ja
cs
pop
sbb
xchg
test
add
adc
cmp
push
rorb
adc
add
clc
test
or
dec
popa
outsb
scas
and
mov
shlb
add
pavgw
notb
mov
and
bound
and
inc
mov
inc
adc
inc
popa
test
adc
and
lds
adc
movzwl
shlb
adc
and
adc
inc
inc
test
jo
cmp
add
mov
jne
jno
jno
jbe
or
cmp
xor
inc
rorb
add
adc
test
fs
adc
xor
mov
ret
sbb
mov
mov
or
adc
rcrl
shll
and
sbb
dec
adc
inc
nop
popl
stos
rolb
push
popl
xor
fcomp
sete
inc
cs
repz
add
or
xor
outsl
or
divl
adc
mov
sbb
add
les
jmp
and
enter
dec
movsl
cmp
jnp
adc
aaa
cmp
test
je
js
xlat
cmp
sub
and
inc
rcll
adcb
lahf
mov
jmp
aaa
or
sbb
inc
push
jle
xchg
pop
jnp
aad
scas
insb
lea
inc
pop
int
sub
pop
inc
add
jmp
orl
pop
dec
jnp
hlt
or
loopne
push
aam
inc
rorb
fs
adc
ret
aam
sbb
or
daa
hlt
shr
or
mov
stos
faddl
rol
cmp
xlat
mov
mov
in
adc
lea
ficoms
cmpsl
pop
push
or
in
or
scas
or
rorb
daa
sbb
insb
push
add
mov
outsl
mov
fimull
inc
inc
add
pop
mul
outsb
pop
dec
insb
add
fldcw
push
xchg
jbe
add
fidivrl
push
adc
xchg
gs
insb
sahf
fadds
sbbl
addr16
imul
addr16
rol
dec
or
pop
pop
gs
sbb
mov
jne
or
arpl
shll
jae
popa
inc
jno
popa
mov
push
pop
or
mov
jmp
inc
pusha
fldt
mov
lods
mov
mov
push
xor
aam
add
pop
in
inc
popa
push
jp
insb
jbe
jo
push
pop
imul
sbb
add
inc
push
addr16
and
fs
inc
je
inc
hlt
mov
es
or
cmp
or
in
jg
js
cs
popa
jg
sub
or
test
pop
pusha
inc
loop
xchg
imul
sbb
leave
sbb
pop
or
subb
push
mulsd
push
add
jns
adc
insl
or
adc
test
loopne
mov
pop
or
outsw
inc
imul
push
iret
pusha
xchg
in
push
outsb
jne
or
adc
bswap
or
mov
cs
mov
cmp
add
mov
roll
add
cmp
mov
repnz
jmp
or
mov
or
rorb
xchg
into
cmc
outsl
push
pop
rol
xor
mov
mov
dec
ret
jg
add
sub
xor
pop
ret
pop
pop
lcall
jnp
testw
pop
inc
dec
inc
push
push
inc
movsl
std
add
push
add
inc
inc
inc
push
dec
push
xor
notl
dec
inc
dec
dec
arpl
aas
adc
dec
inc
inc
push
adc
inc
push
dec
dec
push
mov
and
inc
push
xchg
inc
jg
fidivrl
dec
and
out
inc
inc
xor
xor
add
jae
adc
repnz
sti
inc
lcall
inc
push
inc
inc
dec
or
incb
push
push
push
dec
sub
ja
mov
push
cs
inc
mov
inc
das
bound
push
push
test
lock
or
pop
dec
pop
adc
aad
in
push
push
push
dec
push
inc
scas
dec
inc
dec
xlat
push
dec
push
mov
dec
out
les
mov
out
push
mov
mov
cmp
pop
int
cmp
and
jl
adcl
add
mov
std
incb
dec
or
sbbb
add
add
add
or
pop
scas
lods
pavgw
mov
loopew
andl
xchg
es
or
and
push
test
scas
pusha
loopne
inc
out
or
add
add
sub
xor
aaa
ffreep
test
je
or
or
xor
or
push
mov
fistps
adc
insl
xchg
out
inc
mov
pushf
addb
dec
or
out
and
cmpsb
sahf
adc
mov
leave
push
js
ss
xchg
adc
xchg
dec
fwait
ret
das
xor
shlb
adc
ret
dec
push
sub
xor
or
popf
popf
or
mov
adc
cmp
dec
clc
aas
popa
adc
cltd
cmp
scas
cmp
add
mov
das
cmp
pop
jo
cli
das
cltd
add
aad
orb
jne
lret
jae
nop
imul
dec
and
dec
pop
push
cmp
arpl
jno
or
jns
mov
add
loopne
pop
int3
filds
add
test
ja
push
xchg
mov
out
cmp
fidivs
cmc
adc
rolb
enter
loope
testb
je
rolb
cmp
nop
stos
xor
daa
and
aam
add
or
jge
and
push
adc
lea
shll
pop
incb
mov
xchg
sub
cmp
test
mov
inc
ficoml
sbb
xor
rcll
fiaddl
pop
fcomp
add
les
stos
sub
fisttpl
or
add
arpl
rclb
push
inc
xchg
dec
or
xor
dec
push
shrb
je
sbb
xlat
test
arpl
repz
push
adc
adc
mov
inc
int
xor
mov
pusha
test
push
nop
push
inc
arpl
pop
push
arpl
negl
add
cmpl
and
mov
push
mov
mov
sub
fnstenv
or
rcr
dec
test
dec
xor
and
push
inc
loopne
lahf
mov
das
fcomip
ficoml
jp
push
push
mov
ret
push
or
fsubrs
add
sub
pop
in
mov
or
or
leave
push
outsl
inc
sbb
sbb
xchg
pop
popa
and
lea
sbb
cwtl
inc
xchg
jle
add
movb
repnz
getsec
loopne
push
adcb
xor
add
xor
nop
inc
xchg
push
loop
mov
or
sarl
sbb
in
loop
add
addb
sub
repnz
and
roll
pop
lock
add
rorb
pusha
adc
mov
jne
jns
mov
jecxz
jmp
mov
mov
sbb
mov
inc
test
add
dec
rclb
rorb
leave
or
in
mov
jno
lret
clc
add
inc
or
push
cmp
cmp
lock
sub
cs
adc
dec
push
push
mov
pop
or
iret
add
xchg
mov
sub
and
mov
inc
push
inc
xchg
in
in
push
in
dec
push
and
in
mov
and
outsl
push
xchg
mov
xchg
gs
push
leave
test
insb
in
jge
mov
mov
fimull
bound
aad
pop
mov
aad
and
arpl
add
xor
xlat
lock
mov
mov
push
popf
out
jnp
jo
adc
nop
scas
mov
and
push
add
data16
push
js
inc
mov
ljmp
inc
push
div
jmp
je
adc
add
sub
call
leave
enter
nop
movsb
out
lds
imul
test
aad
mov
pushf
and
mov
les
repnz
inc
mov
inc
cmp
mov
sbb
daa
lret
clc
adc
incb
movl
out
rol
inc
sbb
shll
cltd
nop
xchg
adc
dec
jb
adc
movl
js
lods
out
sub
adc
mov
outsl
xor
push
movsb
inc
push
jns
aad
adc
cmpb
adc
mov
sub
mov
adc
shll
mov
sbb
pusha
data16
push
and
push
or
push
add
or
pop
or
or
mov
adc
push
sub
xchg
add
push
pop
out
pop
xor
faddl
outsb
mov
dec
and
bound
cwtl
nop
in
imul
add
data16
ja
into
or
aad
mov
arpl
iret
rcrl
xor
pop
sbb
sub
lret
sbbb
add
flds
and
bound
lea
adc
mov
fsubs
int3
push
push
in
nop
test
or
jge
ja
mov
push
insl
pop
pop
outsb
ja
push
push
jo
cs
sbb
and
loop
pop
mov
ljmp
mov
cmpsl
popl
sbb
pop
mov
pop
fwait
inc
insl
mov
adc
dec
ficoms
or
and
push
sub
sub
sti
jo
fcomps
stos
lods
pop
aam
inc
das
aaa
xchg
push
cmp
and
adc
dec
addb
inc
rolb
inc
pop
pop
leave
repnz
jmp
xor
xchg
test
add
dec
scas
daa
mov
mov
inc
leave
in
inc
addl
push
nop
jmp
sub
pushf
push
or
pop
dec
in
cwtl
pop
shlb
adc
jne
fcomps
loopne
push
scas
fsubr
popa
pop
stos
and
dec
das
jns
lods
and
inc
or
pop
lods
loop
jge
add
mov
out
inc
mov
pop
inc
jae
pushl
mov
inc
or
je
mov
push
dec
clc
shlb
xlat
adc
sbb
jne
add
mov
out
add
aas
es
icebp
test
mov
sbb
sub
xor
add
arpl
and
addb
add
lea
push
loope
fistl
pop
sbbl
and
mov
je
push
subl
xchg
jne
cmp
sub
scas
xchg
pop
inc
push
add
xchg
mulps
jns
add
or
or
cmpb
add
jl
xor
push
xor
loopne
stos
mov
xchg
int
rorb
rclb
rorl
jge
enter
ficompl
add
and
sbb
js
pop
and
lods
shll
lods
movsl
mov
push
adc
mov
dec
add
jmp
imul
adc
sub
sbb
add
jo
shrb
or
cwtl
aas
push
adc
fidivrl
add
iret
or
aam
test
fsubs
adc
dec
sti
in
nop
mov
inc
pop
repnz
out
inc
mov
aam
insb
add
daa
lods
aad
adc
mov
add
inc
in
xchg
push
fildl
mov
movsb
sbb
adc
lods
xchg
movsb
insb
das
lea
xchg
push
les
fildll
pminsw
inc
in
popa
out
mov
mov
dec
int3
adc
add
dec
ficoms
call
in
jb
mov
push
cmp
lods
sbb
and
mov
jl
add
popa
or
or
loope
mov
mov
adc
cwtl
fstps
mov
push
mov
inc
movsl
pop
push
mov
inc
or
push
hlt
sub
sarb
in
push
sub
aam
jle
push
lds
ja
out
push
push
je
xchg
mov
insl
or
ret
pop
or
add
adc
inc
inc
shlb
adc
jmp
mov
xchg
je
fstpt
rorb
mov
icebp
outsl
daa
hlt
loopne
dec
divl
shl
and
fwait
aam
and
pop
sar
addr16
add
loopne
mov
inc
dec
movsb
mov
add
repz
pop
sub
test
sub
sbb
mov
add
adc
push
xor
pop
or
repnz
xor
sub
adc
mov
mov
imul
in
cwtl
aas
hlt
rorl
andb
add
cmpsl
fdivrl
mov
and
mov
jge
pop
xor
lock
lods
mov
fsubs
fcompl
push
sub
dec
jmp
mov
xor
pop
mov
push
dec
shlb
popf
fmull
mov
sub
inc
inc
pop
bound
test
push
add
mov
mov
mov
inc
add
stos
dec
add
fcomip
out
adc
push
leave
adc
or
or
and
bsf
adc
rcrb
mov
les
or
mov
notl
push
mov
mov
or
add
add
outsl
add
dec
lahf
lret
dec
xchg
hlt
faddp
inc
add
je
cmpb
mov
bnd
sub
dec
add
pop
test
lret
pop
pop
push
add
jne
scas
cmp
jge
adc
adc
add
push
sbb
jp
pop
sub
and
sub
and
aam
lea
mov
jne
sti
dec
clc
movsl
dec
js
and
and
ja
adc
bswap
shr
mov
dec
jns
jmp
out
in
or
and
mov
sub
shl
mov
mov
imul
sarl
movw
fwait
mov
lcall
xor
repz
ret
addb
push
imulb
inc
pop
push
ja
mov
push
pop
sub
cmp
or
std
push
mov
add
aas
push
or
inc
dec
push
cltd
mov
push
jnp
inc
movzwl
lea
push
xchg
pop
pop
push
cmp
jbe
mov
das
daa
jmp
addr16
popl
dec
fisubs
fistps
and
nop
xor
icebp
rcll
pop
shrb
push
lahf
cmp
push
subb
inc
imul
cmovno
cwtl
repnz
daa
mov
add
jl
movzbl
xor
fisubs
push
mov
and
or
inc
mov
imul
scas
pop
mov
popl
pop
and
xchg
sarl
or
fdiv
pop
push
push
dec
mov
xorb
xor
dec
ret
pop
or
push
xor
adc
dec
xor
add
mov
inc
xor
lret
lret
loope
dec
out
adc
add
or
out
push
xchg
add
lods
jo
xchg
in
sub
mov
cmp
push
in
jp
mov
stos
xor
add
and
mov
mov
inc
cmp
cmovle
shrl
aaa
nop
cmp
push
push
pop
leave
jne,pn
jp
loope
test
or
jmp
cs
test
andl
daa
sbb
stc
jge
add
imul
jbe
mov
in
in
adcl
adc
leave
add
hlt
xchg
dec
mov
xor
clc
add
jae
sub
and
pusha
xchg
inc
sub
out
add
rcrb
sbb
and
stos
adc
mov
inc
and
xor
push
xchg
or
pop
cld
push
push
enter
mov
mov
adc
adc
add
imul
scas
xor
imul
sbb
mov
mov
fbld
aam
sub
xor
sbb
gs
add
or
pop
xor
mov
sbb
lock
rcll
roll
fucomi
jmp
cmp
jg
test
jle
cmp
jl
mov
cmpsb
enter
jg
xor
pop
inc
movsb
pop
aam
jle
mov
sbb
push
mov
fsts
pop
jo
add
in
inc
dec
std
cmpsl
test
xchg
add
aas
sub
push
loope
sbb
inc
pop
fdiv
and
ds
pop
imul
clc
xchg
ljmp
mov
jmp
mov
or
jl
rorb
scas
mov
clc
or
les
or
jns
lds
lods
sub
adc
insb
lods
mov
sub
out
jmp
and
mov
jo
cmpl
ret
cmp
out
xchg
jg
or
jl
push
cmp
ja
lea
lods
stos
or
out
dec
insl
jnp
dec
jne
cmp
add
mov
adc
xchg
xor
cli
lds
repnz
ss
repnz
adc
add
sub
pushf
das
faddl
xor
pop
aam
sbb
push
lret
add
sub
dec
fwait
xor
out
nop
mov
enter
ja
lock
pushf
xchg
pop
cwtl
leave
inc
mov
insl
mov
jnp
jg
push
mov
les
ret
sahf
and
mov
call
std
rorl
sarb
push
mov
sbb
or
push
aas
les
mov
mov
pop
mov
test
mov
loope
test
repnz
push
xchg
daa
aas
xor
lock
ljmp
in
xor
xchg
mov
scas
lods
jg
add
push
sbb
fsubl
pop
into
cld
jmp
sub
add
inc
jl
sub
sub
dec
loope
clc
jae
je
or
loope
popa
jmp
adc
movl
dec
shlb
pop
mov
fimuls
dec
or
jg
lock
jmp
jg
mov
adc
push
push
mov
scas
imul
adcb
rcr
lcall
xor
push
xchg
fimull
and
jae
out
lds
jae
push
sub
add
jo
add
dec
dec
push
dec
imull
orb
rcr
in
pop
std
out
adc
adc
cs
add
or
je
lds
sub
adc
test
into
and
lds
dec
pop
sbb
push
aad
xchg
push
outsb
aas
faddl
out
cmp
hlt
mov
push
push
adc
sub
hlt
jae
nop
xchg
cmpsb
dec
push
imul
aam
das
popf
clc
pop
mov
test
pop
stos
xchg
cmp
popf
out
arpl
and
clc
dec
lcall
inc
fs
ljmp
popf
jne
aad
push
jg
lcall
out
insb
mov
ret
lods
xor
inc
sub
push
iret
mov
adc
mov
outsb
add
sub
adc
enter
setno
pop
in
hlt
int3
inc
call
or
loopne
addb
mov
stos
adc
in
loopne
mov
mov
cmp
repnz
test
fcoml
loopne
rol
add
test
push
dec
inc
cmc
cmc
sub
add
lock
or
xchg
addr16
imul
fmuls
fidivl
xlat
xchg
push
and
add
push
lods
or
lods
data16
push
fnstenv
ds
mov
lods
cmpsl
mov
mov
xor
adc
jns
pop
test
addb
push
xchg
test
sbb
in
in
jo
fwait
xor
dec
push
xchg
in
and
hlt
loopne
push
gs
adc
rorl
in
in
xorl
mov
lds
and
cmc
mov
movb
adc
push
addb
jg
lods
mov
lahf
mov
fists
mov
lcall
sbb
sarl
loopne
pop
pusha
adcl
loop
add
sub
nop
cmp
xor
cwtl
les
inc
push
and
enter
jb
add
or
xchg
lock
cltd
xchg
adc
push
lock
inc
or
mov
leave
mov
sub
dec
or
stos
popf
int3
icebp
aad
mov
dec
sub
cltd
inc
insb
inc
sahf
mov
mov
sarb
adc
push
add
pop
arpl
lret
sbb
test
jge
sub
jnp
sbb
shlb
pop
or
and
outsl
decb
xor
dec
sahf
or
push
add
cmp
xor
add
push
pop
adc
sbb
push
mov
xchg
dec
shr
loopne
pop
les
xchg
and
adc
adc
cmp
rorl
adc
pusha
out
pop
xor
add
pop
and
xchg
xchg
push
fs
clc
lret
add
nop
inc
mov
das
or
insl
andl
faddp
sub
lret
stos
xor
pop
rcl
mov
sbb
cli
add
loop
or
sbb
push
jnp
add
add
or
xor
stos
ss
xor
pushl
adc
jge
dec
pushf
arpl
cwtl
jbe
jne
dec
add
sbb
lahf
lods
loopne
dec
xor
imul
mov
jbe
mov
lea
mov
or
add
addr16
sti
fidivrl
sarb
shlb
call
mov
xor
mov
mov
push
push
push
sbb
or
push
enter
adc
fadds
inc
and
sbb
adc
pop
sub
punpckhdq
xor
outsb
adc
mov
xchg
movsb
dec
andl
pop
mov
out
pop
xchg
cld
pop
int
movsb
fstpt
pop
rcrb
arpl
push
imul
shl
pop
pop
xor
or
test
in
add
or
jo
cltd
jnp
inc
pop
test
repnz
jmp
mov
mov
add
ss
pop
int
mov
mov
xor
inc
xor
sbb
cmp
cmpsl
and
lock
jbe
clc
or
jne
xchg
sub
xor
push
out
shrb
pop
mov
adc
cmp
push
dec
lea
es
or
add
insl
jmp
push
mov
mov
mov
cmp
fistl
fistl
iret
sarb
or
sbb
lock
sbb
or
xchg
js
mov
mov
lods
or
jp
sbb
adc
fisubs
or
lea
mov
test
dec
cli
dec
cmp
pop
inc
add
mov
not
add
add
jg
ljmp
pop
movl
push
or
pop
out
stos
push
test
cmp
jne
add
pop
mov
or
stos
aas
or
loope
test
pop
xor
lds
dec
adc
adc
lret
xchg
aaa
imul
ss
xchg
cmc
add
sub
daa
jo
xchg
mov
int
inc
add
sbb
push
mov
scas
xchg
hlt
mov
adc
mov
pop
adc
add
sahf
xor
add
push
sbb
or
out
or
inc
or
sub
aas
fistps
loop
sub
outsl
fsubl
movsb
or
xchg
pusha
movb
adc
push
test
sub
and
jns
sbb
in
push
sbb
mov
out
cwtl
pusha
xchg
push
fmull
test
sbb
movsb
mov
and
lods
loope
mov
ss
fistpl
int
jnp
ficomps
loope
vmovaps
mov
and
dec
sbb
sbb
add
ja
aas
cmpsl
hlt
cmp
pop
push
xor
pusha
stos
aad
repz
in
in
nop
add
je
scas
loopne
sbb
in
sahf
inc
cmp
and
or
in
mov
mov
dec
jmp
outsl
cmp
je
ss
sbb
daa
sub
push
adc
lds
imul
inc
mov
or
xchg
or
push
mov
test
test
sbb
dec
cmp
jne
push
jo
mov
xor
test
sub
mov
add
popf
ljmp
loopne
test
dec
lock
push
adcl
dec
adc
cmp
push
sbb
xor
imul
fsubrs
xor
mov
pop
and
push
lea
mov
rorl
pop
out
into
sbb
add
arpl
mov
and
add
jo
les
mov
cmpsb
call
pop
adc
notb
mov
cmp
test
lea
lea
sub
clc
jmp
push
jne
sbb
shrl
ret
loopne
out
movsbl
fsub
mov
push
sbb
xor
test
je
std
loopne
sbb
dec
nop
popf
and
call
dec
sti
adc
push
stc
push
inc
or
inc
pusha
add
xor
call
inc
fisubrl
sub
pop
push
jecxz
and
ret
push
lock
xchg
add
jle
adc
or
call
add
into
mov
imul
fs
ret
and
add
ljmp
adcl
mov
add
into
push
sub
inc
push
ficoml
cwtl
or
pop
and
das
jnp
clc
pop
or
pop
out
rcrb
add
push
shrb
mov
mov
rclb
mov
pavgw
adc
mov
mov
cltd
lea
addr16
cmp
or
xor
or
pop
xchg
leave
ljmp
adc
movb
pop
test
or
sarl
sub
mov
setp
inc
sbb
xchg
mov
frstor
sub
adc
mull
jge
sub
push
repnz
into
adc
jns
adc
xor
popa
popa
push
and
mov
sbb
fmuls
addr16
xchg
mov
inc
bound
sar
outsl
pushf
in
int
sub
clc
je
cmp
add
adc
popl
or
int
fidivrs
sub
aad
cmp
aam
sbb
fisubs
gs
ret
jl
mov
popa
jecxz
pusha
movsl
fisttpl
ficomps
je
icebp
sub
mov
andb
pushf
gs
xor
cmp
add
or
outsl
shlb
sbb
or
lret
sub
bound
mov
mov
scas
lods
and
enter
jns
or
push
pop
lahf
movsb
clc
push
push
mov
xchg
pop
or
imul
inc
adc
cmp
stos
add
mov
push
add
add
sub
pop
mov
movl
inc
andb
lods
test
lock
xor
or
push
adc
dec
cli
xor
mov
push
or
js
addl
mov
lods
imul
cld
rol
inc
xor
and
mov
sbb
add
xchg
lahf
xor
sbb
lret
int
sub
push
test
test
in
fwait
add
jno
pop
adc
xchg
ret
sahf
hlt
inc
inc
push
inc
adc
and
sbb
or
and
clc
pusha
imul
lea
or
movzwl
pop
dec
sub
scas
shrl
sub
and
add
pop
adc
int3
outsb
cmp
push
dec
lock
popa
or
mov
and
or
push
sbb
sub
leave
inc
pop
in
push
insb
add
inc
shll
and
in
jmp
mov
call
add
mov
inc
or
inc
leave
mov
ds
inc
sbb
pop
and
movsl
add
mov
pop
loope
es
movsb
lods
out
mov
fwait
dec
add
andl
ret
pusha
in
mov
adc
in
adc
xor
pop
push
push
sub
adc
xchg
sub
aad
inc
mov
arpl
ss
sub
add
jo
jnp
xorl
pop
fstpt
mov
cmp
push
and
push
inc
and
rcll
stos
sub
add
pusha
and
arpl
pop
sub
mov
xor
das
jnp
add
xchg
cwtl
fnstsw
sbb
rolb
or
testb
pop
sub
add
pop
xor
inc
xor
pop
scas
je
xor
dec
xorb
add
jo
add
jl
or
cmp
jne
jbe
imulb
mov
out
adc
sub
das
scas
and
sbb
sahf
or
jo
loopne
sbb
xchg
pop
add
inc
adc
movsb
or
xor
push
mov
mov
jne
in
fbstp
push
ja
dec
jecxz
push
test
mov
push
test
sbb
ret
sbb
ja
jb
mov
loopne
cmp
adc
mov
add
sbb
pop
out
jno
add
adcl
hlt
sbb
gs
adc
push
ja
lds
test
call
add
sub
adc
adc
dec
xor
outsl
imul
jns
mov
hlt
mov
arpl
pusha
add
rorb
aaa
inc
shr
xor
push
or
adc
jmp
test
mov
inc
xor
xor
xor
dec
test
fisubl
mov
adcl
dec
dec
rcrb
and
sbb
pop
dec
mov
ja
add
xor
call
outsl
sub
inc
sbb
cwtl
js
xor
xchg
mov
pcmpeqd
cmp
je
adc
leave
jp
test
pop
lret
adc
xor
popf
mov
dec
jg
jne
push
push
leave
adc
and
push
sub
mov
xor
test
pushf
and
xchg
mov
aam
call
adc
movb
pop
jne
jno
aas
lods
fld
icebp
outsl
loop
jge
xor
fs
mov
xchg
xor
mov
lret
jnp
sub
inc
mov
inc
cs
ss
movb
jg
mov
js
inc
and
dec
addr16
adc
and
pop
sbb
sbb
out
loop
push
outsl
mov
outsl
sbb
dec
or
mov
jmp
hlt
popa
xchg
rorb
dec
sub
dec
add
mov
loope
lret
lea
daa
insb
adc
push
or
push
pop
sbb
ja
adc
gs
sbb
inc
fs
lea
in
sbb
imul
addr16
mov
or
es
adc
dec
outsl
cmpsb
pop
sbb
push
push
push
cmp
or
xchg
add
sub
mov
ffreep
filds
jmp
mov
loopne
loopne
or
add
and
rcrb
in
and
and
dec
mov
lds
js
pop
les
pusha
mov
push
pop
mov
ja
lret
data16
ret
inc
outsl
push
sub
dec
sysret
dec
sbb
cmpsl
lock
cltd
sub
loopne
jmp
add
les
cltd
rcrb
xchg
enter
pop
sbb
pusha
dec
push
aad
inc
dec
fwait
cmp
fistpl
dec
test
xor
pop
mov
cmp
out
shlb
movb
mov
or
ja
fnstenv
inc
adc
dec
or
dec
fdivs
or
add
inc
in
xor
jg
or
je
or
jne
xchg
subl
cmp
inc
adc
mov
xor
adc
pop
movsb
xorl
out
cwtl
addb
fs
cld
pop
mov
and
mov
mov
pop
inc
or
sbb
or
mov
pop
xor
jo
cmpsb
jbe
or
or
in
imul
or
or
push
inc
jne
roll
faddp
test
bnd
xchg
into
shlb
adc
sub
cltd
popf
sub
jbe
mov
daa
push
and
add
and
xchg
cld
xlat
and
jbe
inc
mov
inc
or
test
sub
xor
repz
int3
in
dec
pop
rcl
shrl
cmpsl
dec
stc
andb
or
pop
fwait
mov
jecxz
jo
loopne
cwtl
sbb
test
in
xchg
inc
cmp
cmp
xor
es
or
xchg
sub
out
or
sub
mov
adc
sub
dec
and
pop
fs
fcmovbe
adcl
mov
sub
and
mov
cmp
and
fadds
xchg
jb
cmp
fcomps
push
and
push
xchg
cs
pushf
mov
gs
pop
push
mov
or
rorb
pop
data16
ret
or
mov
sub
jmp
hlt
imull
sbb
cmp
mov
mov
stos
stc
int
sub
add
jb
cltd
sarb
adc
por
mov
fisttpll
jmp
fldl
and
ret
or
sbbb
sbb
lock
ret
lods
pop
les
cld
mov
push
test
loopne
mov
stos
jne
or
pusha
popa
pusha
popa
inc
ss
cmp
or
pop
sbb
clc
mov
push
out
mov
cmp
fadds
fwait
cltd
jno
into
sbb
xchg
loop
and
mov
push
cltd
and
adc
adc
push
jo
xchg
int
lock
inc
mov
dec
adc
iret
or
sub
rolb
xchg
lea
rorb
orb
test
cmp
addr16
add
loop
inc
adc
jnp
or
add
mov
mov
adc
jbe
mov
lods
clc
sub
and
or
cli
shr
inc
mov
push
and
mov
adc
jg
cmp
pop
shrb
lea
jnp
push
add
xor
lea
loope
or
loopne
and
es
in
repz
inc
xlat
adc
sar
lahf
inc
js
add
add
lock
cli
in
pop
pop
adc
arpl
stc
jge
pop
xchg
subb
xchg
loope
iret
lret
xchg
outsl
daa
aad
dec
cmp
push
dec
popf
fiaddl
xchg
inc
lea
push
xlat
test
mov
and
rcll
sbb
sbb
xorb
add
jo
dec
rcl
mov
mov
mov
mov
push
lds
stc
rorb
loopne
mov
add
dec
pop
insb
fucomip
inc
or
add
jmp
jge
stos
mov
je
out
je
dec
sbb
push
icebp
push
or
or
and
jge
and
fwait
dec
inc
mov
cmp
lea
jne
add
push
add
fwait
in
cmp
imul
mov
fldlg2
ljmp
mov
xchg
lea
sub
inc
and
inc
xor
and
imul
jbe
cmp
jae
inc
bound
push
jne
adc
and
lods
sub
sbb
inc
or
adc
adc
icebp
jl
or
shlb
fbld
test
cli
or
push
ret
in
daa
and
push
ja
push
inc
sub
and
pop
and
xor
sahf
push
add
and
or
jb
pop
inc
push
loopne
adc
cmp
jle
test
cmpsl
notb
inc
push
xor
jg
fsts
je
aaa
pop
jns
inc
mov
mov
mov
pop
sub
push
jnp
sbb
sbb
sub
jg
inc
push
data16
lcall
or
stos
pop
add
adc
sbb
push
test
in
into
mov
sub
fsub
movsl
inc
add
sbb
add
or
inc
stos
rcrb
ret
or
inc
loopne
out
lods
in
lock
sbb
popaw
lds
push
and
adc
or
iret
cli
ret
xor
sti
mov
mov
pop
popf
jmp
push
popa
mov
dec
or
or
adc
pop
cltd
add
je
outsl
rolb
je
popf
cmp
add
rcl
sbb
mov
inc
mov
sub
es
stos
xor
jbe
bound
and
daa
adc
insl
add
bound
pop
sbb
mov
sub
fwait
test
cmpsb
clc
add
call
fisubs
lods
jmp
mov
subl
jnp
adc
lret
jp
push
inc
or
movaps
in
stos
mov
and
or
hlt
sub
cmp
add
fldl
insl
mov
outsl
bound
popa
pop
aam
out
jl
nop
mov
lea
cmp
mov
push
sub
add
daa
pushf
mov
aas
pop
sub
cmovp
push
or
jp
inc
pop
and
xor
pop
lret
or
arpl
jno
and
imul
dec
jmp
popa
lods
pop
cmpsl
outsl
dec
das
xchg
xchg
cmp
sbb
sub
mov
nop
mov
mov
loope
dec
aas
adcb
jns
mov
ret
mov
dec
xor
fiadds
pusha
aaa
sub
push
mov
les
dec
sti
cmpsl
push
add
aas
daa
fistps
add
pop
pop
push
mov
pop
push
inc
mov
add
or
in
mov
adc
xchg
outsb
jmp
movsb
pop
jmp
pop
and
adc
and
push
xorb
cmp
insl
mov
faddl
jg
cmp
inc
push
add
mov
cld
addl
xorb
clc
xor
mov
imul
xor
or
clc
aas
adc
insb
xorb
outsl
adcl
bound
push
in
xor
add
and
mov
lea
stos
mov
and
das
add
and
xchg
aas
cmp
pop
pop
mov
and
inc
add
fiaddl
pop
add
mov
jne
push
add
xor
sub
and
jge
int
and
or
out
nop
mov
pop
push
in
cwtl
adc
in
mov
faddl
or
rolb
sbb
nop
xchg
js
inc
xor
add
cmpl
mov
mov
lock
push
clc
inc
lahf
adc
aad
arpl
mov
mov
rcrb
test
cmp
testb
rep
es
aas
dec
or
inc
push
sbb
adc
lret
cmp
call
xchg
data16
leave
loopne
add
fisttps
ret
add
sub
mov
pop
enter
pop
pop
pop
outsl
hlt
add
xor
fbstp
adc
ret
inc
mov
movsb
cmp
inc
fdivs
sub
pop
cld
sub
test
gs
cmp
insl
push
mov
insb
fsubs
lret
and
sbb
or
pop
xchg
cltd
mov
inc
fcmovu
nop
inc
call
lock
ficompl
adc
in
inc
mov
dec
push
xor
ss
fsubs
xor
mov
xchg
push
add
imul
jo
in
dec
push
sti
sub
sbb
push
cmp
push
adc
mov
dec
push
adc
fcoml
mov
cmp
dec
jg
mov
lahf
or
add
rol
enter
les
test
or
push
adc
and
dec
in
sahf
and
xor
mov
mov
jnp
xor
mov
cmp
mov
mov
sarb
pop
sbb
dec
xchg
jb
ss
lock
ss
xor
lea
ret
test
add
ds
enter
cmpsl
in
inc
sub
das
movsl
mov
aaa
iret
sbb
adc
aaa
insb
cmp
imul
push
pushf
push
or
aam
jo
mov
js
inc
adc
test
scas
iret
or
xchg
push
iret
push
push
sub
xorb
aaa
pop
mov
adc
daa
ficoml
inc
ja
adc
lds
xchg
mov
inc
enter
push
adc
test
mov
adc
jb
aad
arpl
inc
andps
insb
call
adc
enter
sbb
and
xchg
loopnew
jecxz
lock
or
mov
iret
adc
sbb
add
dec
xchg
scas
jno
jbe
daa
enter
outsl
add
hlt
mov
xchg
pop
add
xchg
hlt
and
fs
popa
psubsb
loopne
xchg
inc
push
push
push
jns
stc
and
xor
ss
xor
and
bswap
enter
orl
mov
mov
lods
orl
test
mov
and
cmc
clc
call
cmp
dec
rol
or
fcomps
sbb
cmp
push
lock
cmpb
loopne
cltd
xlat
adc
jnp
xchg
test
push
sub
mov
xchg
add
sbb
arpl
push
xchg
add
add
push
aas
adc
and
add
xchg
add
dec
nop
iret
out
mov
lods
je
movb
fcoms
into
into
and
push
add
lods
xchg
add
and
shlb
pop
mov
daa
pop
and
xchg
and
mov
pop
add
push
jmp
out
and
jb
je
arpl
xchg
adc
adc
or
shr
xchg
or
sbb
push
push
es
imul
push
adc
fwait
xchg
adc
dec
adc
mov
jge
sbb
iret
xor
ja
mov
shlb
aaa
push
push
sbb
cmp
dec
add
test
nop
mov
fldcw
jle
fdivrs
push
push
popa
cmp
jle
push
pop
inc
ret
cmp
mov
popa
or
sub
adc
testb
cmpsb
nop
in
addr16
pop
and
cmp
imul
imulb
dec
jmp
jmp
pop
sub
pushf
ret
shr
sub
mov
scas
jnp
jo
sbb
out
leave
jnp
or
lock
nop
sub
or
or
adc
push
repnz
cmp
addl
sbb
movl
and
es
and
imul
lock
push
jl
jno
cmp
inc
or
scas
add
sbb
push
je
mov
jge
hlt
cmp
std
dec
xor
jmp
call
jne
xor
sub
mov
cltd
into
push
mov
cld
pop
xchg
lock
lock
insl
and
lcall
adc
push
lea
lea
fcomps
inc
and
fwait
cmp
ds
jb
push
sub
pop
psrlq
push
aaa
pop
mov
push
dec
inc
pop
cmpsl
sub
ds
outsb
repnz
add
xchg
or
cltd
and
push
iret
cmpsl
sub
cmp
pushf
aas
adc
push
enter
cmpsb
adc
aas
jo
enter
jge
stc
dec
shll
cs
adc
pop
push
or
push
popa
hlt
adc
mov
push
jmp
stos
sub
andb
jns
cmp
clc
sub
lods
push
and
neg
mov
xchg
or
ss
mov
and
jo
push
cs
loopne
sub
mov
mov
imul
push
add
adc
jmp
push
jno
testb
daa
inc
outsb
jne
push
insb
popa
jns
add
loope
jae
push
add
cmp
mov
lock
faddl
fdivrl
mov
cmp
shlb
fidivrs
or
and
cmp
adc
adc
pop
sbb
aas
inc
push
test
dec
add
jns
dec
fdivrp
jne
sbb
jl
push
add
cmp
sbbl
sub
nop
xor
sbb
prefetchw
out
xor
xchg
testl
push
pop
rcll
mov
cmp
inc
add
sbb
or
or
ljmp
adc
std
lret
or
ja
fbld
or
je
dec
cmp
out
scas
jnp
xor
ret
jp
dec
lcall
sub
jl
popa
outsb
jnp
jns
mov
or
push
sub
jns
xor
out
jo
and
dec
pop
ds
sbb
adc
aad
test
aam
adc
testl
cmpl
sbb
adc
add
jo
mov
repnz
xchg
fmull
cmp
pusha
and
jns
je
aas
js
adc
rcl
int3
adc
imul
sbb
and
or
xor
roll
pop
imul
dec
aas
inc
dec
push
push
jbe
test
ja
cs
sbb
mov
in
into
fiadds
mov
xor
rcrb
movb
push
inc
lret
push
ss
or
and
popf
adc
mov
inc
cmp
popa
daa
cmp
cmp
inc
sahf
daa
pop
clc
clc
addl
cmp
je
adc
clc
inc
mov
mov
es
adc
and
or
xchg
pusha
xchg
or
dec
ja
bound
sub
push
cmp
lock
out
fnstcw
insl
gs
jg
sub
cmp
rorl
das
enter
daa
mov
sbb
pop
sbb
inc
sbb
add
lods
push
add
dec
daa
sbb
iret
mov
daa
jne
stos
push
sbb
adc
adc
into
in
inc
paddq
push
inc
flds
sbb
fs
mov
mov
adc
hlt
in
cltd
inc
hlt
sbb
lods
mov
push
data16
mov
test
and
push
shlb
sub
push
xor
xchg
adc
test
icebp
inc
test
mov
jg
in
and
nop/reserved
push
dec
pop
shlb
roll
pop
jnp
sbb
xchg
sub
sub
sub
mov
das
das
leave
cmp
addl
xor
sbbl
mov
add
push
xor
inc
xchg
iret
sarb
sahf
test
or
xor
jnp
clc
enter
aad
bound
inc
hlt
sub
push
ret
test
xchg
push
stos
or
cmp
sar
dec
mov
jne
push
or
div
je
cs
data16
push
push
and
sbb
in
in
push
mov
add
aaa
movsb
sub
and
scas
xchg
in
push
adc
inc
push
sub
enter
and
add
adc
jno
fistl
rcll
shlb
mov
es
jg
jne
mov
sbb
add
sub
mov
and
inc
dec
sahf
into
mov
das
ljmp
sbb
nop
sbb
lock
dec
pusha
pusha
loope
outsl
subb
cmovs
orl
push
leave
rcl
jno
fsts
dec
xchg
cmp
push
add
dec
hlt
or
les
ror
loopew
and
sub
xor
daa
xor
inc
lods
pop
addb
hlt
sub
mov
shrb
xor
iret
push
or
lds
in
jmp
jmp
scas
jp
push
dec
add
push
jle
inc
ret
jno
adc
adc
inc
xchg
ja
jp
rcl
fdivl
shr
mov
sbb
in
sbb
pusha
imul
adc
test
les
dec
insl
xor
mov
dec
mov
outsw
lock
loopne
outsb
inc
daa
add
add
test
dec
sbb
and
fwait
pop
dec
inc
gs
movsl
addb
jne
fidivl
es
stos
mov
call
adc
jle
push
dec
and
inc
scas
adc
push
inc
adc
pop
push
lahf
sbb
mov
inc
rcrl
test
xchg
jl
mov
in
lock
inc
xchg
in
cltd
mov
es
repnz
call
xor
push
cld
loope
xchg
in
dec
push
pop
dec
call
sbb
jnp
adc
lcall
adc
jbe
fldcw
pop
dec
sbb
scas
sbb
and
and
imul
xlat
loope
mov
test
xchg
insb
dec
out
dec
pop
xchg
lea
lret
sbb
sub
stos
bound
or
xchg
xorl
lret
xor
test
test
cmpsb
and
sub
or
sbb
cld
mov
ficoms
lcall
or
inc
sbb
js
xchg
xchg
in
xor
and
cmp
add
xor
test
inc
mov
mov
push
dec
je
shrb
push
mov
dec
movsb
rolb
rorb
xor
adc
loopne
cltd
lcall
sbb
test
adc
pop
enter
sbb
mov
test
push
jl
xor
jle
inc
bound
testl
cs
mov
jne
in
push
inc
js
pop
push
repz
jp
push
mov
subl
ret
in
imul
cmp
xor
fisubrl
push
incl
mov
and
insl
xchg
push
inc
loope
enter
sbb
enter
arpl
adc
aam
in
neg
sbb
push
addr16
pop
leave
insl
push
dec
jo
xchg
cli
push
xor
push
adc
outsb
pop
and
pop
repnz
je
push
pop
insb
fs
jmp
idivl
xor
mov
nop
mul
inc
inc
jl
cmp
and
repnz
xchg
dec
fs
sahf
out
imul
nop
out
movsb
push
les
jns
lods
push
fcomps
cmp
inc
hlt
insl
pop
in
nop
iret
jae
pop
in
pop
add
add
cmp
sbb
jle
sbb
insl
arpl
mov
cmovns
xchg
pop
pop
push
sbb
es
sub
lods
and
sbbl
add
push
das
push
or
and
movsb
mov
movsl
sbb
sub
inc
pop
sub
adc
jnp
push
jo
pop
outsl
jae
daa
pop
mov
fistpll
and
fs
push
push
lock
and
xchg
add
mov
add
fistl
push
push
push
rcrl
nop
or
and
test
ds
pop
push
ret
dec
jo
mov
inc
jb
inc
insb
ljmp
and
test
ret
sub
outsl
mov
inc
dec
add
push
pop
mov
dec
pop
xchg
test
cmp
dec
push
in
push
js
push
ljmp
inc
jp
mov
enter
xor
fidivrs
jle
decl
xor
sbb
and
xor
daa
daa
and
sbb
jns
test
mov
daa
daa
pushf
mov
daa
daa
lods
mov
mov
mov
daa
daa
daa
int3
rcl
fsubs
daa
daa
daa
fsub
in
daa
daa
daa
daa
in
lock
clc
xchg
xchg
daa
daa
cld
add
xchg
xchg
xchg
xchg
or
adc
xchg
xchg
xchg
sbb
and
xchg
xchg
xchg
sub
xor
jg
sub
mov
nop
adc
pop
mov
out
jae
adc
lds
cmp
add
xorb
add
xchg
and
nop
mov
or
cmpl
les
pop
mov
sbb
or
sbb
nop
out
pushf
xor
dec
movsb
fs
out
sahf
test
lods
test
in
mov
mov
out
sahf
add
cmp
and
cmpb
or
sbb
jae
and
xor
cmpl
sbb
jae
fsubl
cmp
bnd
mov
jae
iret
call
pop
repnz
hlt
fdivl
iret
cmp
sbb
cld
dec
and
cmp
repnz
and
xor
iret
orl
enter
sbb
iret
cmpl
enter
and
iret
cmpl
push
in
and
adc
xor
test
inc
pushl
pop
xchg
add
add
push
adc
jne
je
gs
gs
popf
add
inc
insb
outsl
jae
int3
or
andl
pop
test
mov
push
dec
mov
inc
adc
sub
or
popa
jb
in
push
cs
daa
test
je
push
adc
jne
pop
mov
inc
xchg
gs
push
add
aas
addr16
fs
movsb
loopne
mov
dec
arpl
jae
mov
jmp
or
lea
or
add
jae
sbb
or
pop
pop
imul
lods
pop
pop
pop
or
or
loopne
or
ficompl
fists
xchg
mov
adc
push
popa
xor
cs
sbb
imul
xor
pusha
xchg
cmpsl
loopne
mov
aas
mov
dec
movsl
mov
fnstenv
mov
mov
cmp
outsb
outsb
popa
and
xorl
fs
pusha
mov
fcompl
and
sbb
xchg
aas
adc
les
pop
xchg
enter
ja
fwait
or
push
jg
push
bound
jns
mov
addr16
jne
insb
mov
or
movsl
fstpl
out
inc
imul
add
dec
xor
arpl
xor
loope
je
adc
and
add
outsl
pop
repz
sbb
adc
adc
insl
xchg
mov
xchg
dec
ss
hlt
xchg
pusha
cmp
ret
mov
add
sbb
mov
repnz
jbe
jnp
mov
sub
jge
bound
mov
subb
fildll
dec
jp
call
and
negl
popa
and
xlat
outsl
dec
and
inc
pop
jno
cs
xlat
xor
ret
into
clc
popa
push
sbbl
cltd
outsl
push
mov
push
rcrl
cltd
xchg
add
pop
xchg
pop
jb
or
adc
nop
add
pop
inc
pusha
add
xchg
add
nop
jns
sbbb
add
cltd
xchg
add
shlb
pop
test
push
push
jo
pusha
ss
pop
ja
fs
mov
inc
mov
pop
push
inc
or
inc
scas
gs
fmuls
addr16
movsb
gs
aas
fwait
cli
inc
movups
xorb
pusha
push
repz
imul
push
nop
push
popw
mov
mov
icebp
push
push
pop
sub
push
xor
out
pop
adc
cmpsl
pop
incl
movsl
insl
xchg
and
fadds
jge
inc
cwtl
sbb
cmp
or
sbb
dec
cmpb
dec
outsb
rolb
push
mov
inc
push
add
adc
daa
movb
push
push
pop
and
mov
adc
out
or
xor
push
cmc
pop
push
adc
movsb
sbb
cmp
pop
or
inc
cmp
sbb
mov
lahf
cmp
and
test
inc
and
mov
pushf
jo
push
rclb
mov
push
test
cmp
gs
fdivl
adc
mov
in
cld
hlt
rol
pop
add
sub
in
adc
inc
push
or
in
xchg
or
movsl
push
idivb
pop
pop
mov
add
pop
mov
out
xor
subl
das
js
call
mov
aas
in
fwait
sub
or
test
cmp
inc
inc
jp
pusha
ret
hlt
mov
flds
and
dec
push
movsb
rorb
fstpl
mov
out
xchg
dec
adc
orb
in
pop
pop
das
sbb
mov
pop
pusha
mov
push
adcb
push
push
dec
imul
dec
imul
dec
dec
add
mov
adc
arpl
iret
les
pop
push
mov
negb
outsb
inc
gs
pop
xchg
add
repnz
outsl
pop
or
and
lods
add
ja
mov
shrb
test
stos
pop
inc
mov
add
je
add
adc
xchg
jns
loopne
stos
sbb
sbb
mov
jae
add
mov
stos
cmc
mov
insb
addr16
push
bound
std
loopne
scas
dec
push
adc
and
fimull
divl
mov
shlb
insb
and
push
movsb
or
pushf
push
pop
fs
sbb
bound
das
mov
mov
mov
adc
push
mov
movsb
or
dec
push
mov
outsl
sbb
inc
inc
lahf
repz
xor
lock
lock
adc
push
mov
sbb
add
lds
insb
cmpsb
xor
in
fwait
jbe
jl
inc
mov
adc
mov
add
les
pusha
push
subb
mov
ffreep
pop
mov
mov
sub
cwtl
push
sub
mov
dec
pop
es
insb
addw
jb
testb
ficompl
call
test
jae
jb
adc
pop
outsb
shrb
jae
and
dec
mov
loopne
lods
insb
inc
jmp
add
popf
sub
inc
enter
lock
sbb
inc
add
movsb
push
push
mov
sub
jle
sarb
imul
test
xlat
xor
aas
sahf
or
mov
dec
adc
cmp
jmp
mov
lret
test
in
out
and
test
pop
mov
dec
sub
rolb
sbb
add
gs
inc
pop
shrb
and
pop
or
icebp
add
push
inc
or
frstor
dec
xchg
xchg
push
mov
cmp
pcmpgtd
cmpl
orl
aas
and
and
enter
and
es
sub
and
and
orl
das
adc
adc
enter
adc
push
pop
sbb
and
and
push
orl
pop
add
add
enter
add
push
pop
or
orl
das
add
sub
mov
je
insl
out
test
dec
shll
insb
add
clc
dec
pop
lock
imul
imul
imul
cmpsb
imul
cld
insb
nop
hlt
mov
dec
shll
jo
xor
shll
int3
pusha
les
xor
sarl
shll
xor
mov
test
shll
or
ss
add
pop
lock
loopne
fsubrs
cmpsb
imul
imul
out
out
dec
outsl
js
mov
nop
dec
jge
push
outsl
inc
incb
and
xchg
insl
jo
sahf
sbb
test
add
push
das
out
lods
jl
or
andl
sbb
icebp
outsl
test
mov
cmp
inc
fdivrp
test
daa
push
mov
add
pop
sbbb
jge
push
adc
insl
and
arpl
arpl
pop
aaa
sbb
cmp
xor
jo
in
mov
mov
jecxz
add
or
push
push
repz
loop
sbb
dec
repnz
cs
add
movsb
mov
lcall
dec
and
imul
inc
pop
lock
pop
mov
data16
pop
cmp
fstps
int3
xor
push
jno
push
add
nop
into
pusha
mov
cld
or
push
jno
into
sbb
sbb
nop
popa
pop
dec
mov
repnz
pop
mov
rolb
pop
add
and
xchg
jb
add
leave
les
cmp
jb
iret
xchg
xchg
add
js
pusha
cwtl
in
push
jg
or
inc
mov
lahf
in
or
rol
push
repz
add
daa
or
mov
jb
sbbl
jae
sbb
adc
aam
and
roll
shrb
roll
aam
daa
cmp
mov
push
pusha
je
je
or
test
push
adc
dec
xor
cmovbe
insl
popa
je
pop
push
cmp
je
das
iret
ret
or
je
sbb
jne
jnp
hlt
push
je
mov
mov
mov
cmpsl
loop
rolb
cmp
xchg
cs
adc
mov
push
divl
xor
lds
in
daa
cltd
lds
call
jmp
sarl
jo
sbb
test
jbe
sbb
jmp
push
jne
test
test
jo
ja
mov
jo
js
push
push
push
jne
add
test
sbb
xchg
jo
jae
and
xor
xor
dec
imul
dec
arpl
add
out
out
fsts
faddl
outsl
add
arpl
insb
push
or
stc
gs
adc
outsl
pop
js
arpl
mov
jnp
pop
daa
jo
jb
jb
popa
ja
push
orb
sbb
add
bound
jbe
daa
ja
negl
mov
addr16
nop
pop
mov
mov
das
in
push
mov
arpl
insb
daa
iret
out
push
mov
imul
outsl
mov
xor
cmpsl
sbb
shrb
pop
xor
cmp
pop
sub
ljmp
insb
cmpsb
daa
jns
outsl
dec
pushw
das
gs
fld
pusha
add
ja
imulb
xor
xchg
cmpsb
push
hlt
out
fdivrl
mov
push
dec
mov
loop
pop
fs
xor
inc
outsl
sub
pop
add
outsb
test
jl
cwtl
inc
pop
push
jmp
dec
sbb
ror
je
stos
or
jl
or
ret
stos
nop
pop
dec
rolb
mov
nop
out
push
outsl
mov
dec
pop
jmp
mov
add
push
pop
push
or
ds
insl
push
push
scas
mov
xchg
ficoml
mov
mov
outsb
outsl
mov
dec
jne
sbbl
call
sub
mov
das
or
push
in
push
sbb
push
mov
andl
js
mov
xchg
pop
xor
inc
xchg
imul
and
jle
add
sub
enter
adc
push
xchg
mov
pushf
xchg
in
add
out
int
test
mov
push
mov
aaa
inc
adc
sbb
insl
adc
test
data16
sbb
jmp
pop
nop
pop
or
push
jle
stos
sub
inc
mov
ja
fs
ss
sbb
jnp
fcmovbe
jns
cmp
mov
out
or
add
xor
mov
or
or
or
or
or
or
rorl
adc
adc
dec
shll
sbb
decl
xor
sbb
and
and
sub
fisubrs
push
hlt
add
dec
shll
cmp
imul
dec
jl
sahf
scas
rcl
shll
repz
adc
imul
cmpsb
imul
imul
pusha
xor
cmp
add
xor
iret
addb
add
or
push
push
adc
and
cmpb
push
repnz
xor
sbb
sbb
cmpb
sbb
push
or
xor
or
add
and
sub
xor
iret
adc
xor
repnz
xor
cmp
and
adcb
add
or
inc
push
inc
pop
and
cmpb
dec
repnz
xor
push
sbb
cmp
sbb
pop
xor
sbb
push
jns
out
popa
imul
sahf
cmpsl
and
and
jns
aas
and
and
in
jp
adc
and
push
mov
jg
clc
rolb
xor
cmp
les
mov
addl
rcr
push
nop
adc
add
jle
dec
pop
clc
push
lea
mov
ljmp
push
dec
je
or
pop
push
mov
ja
fsubrs
pop
add
out
add
call
mov
sub
lock
mov
int3
mov
push
jbe
push
dec
push
sbb
rcl
push
loopne
xor
clc
adc
dec
push
stos
int3
mov
sub
orl
and
mov
xor
cwtl
enter
aad
mov
dec
jp
push
xlat
out
stos
sub
xchg
sbb
inc
push
lahf
add
test
jg
adc
mov
jle
mov
insb
mov
xchg
xchg
and
push
clc
xchg
mov
fnstenv
clc
cwtl
cs
pop
stc
lret
in
mov
lret
and
xchg
lods
fbld
cld
mov
enter
inc
hlt
cwtl
push
and
dec
fistpll
pop
mov
pop
dec
push
push
fstps
jnp
ss
add
add
js
xchg
xor
mov
fs
jae
sub
andb
xchg
mov
inc
frstor
jb
mov
mov
movb
cmp
dec
ds
mov
es
mov
sbb
or
inc
sahf
cmp
jbe
ja
js
or
enter
push
push
sahf
je
mov
sahf
inc
sbb
subps
xchg
imul
int
imul
sub
shll
or
dec
imul
cs
aad
mov
add
push
and
xchg
mov
xor
mov
push
pop
add
and
aam
icebp
or
imul
cmpsl
push
mov
add
sbb
insl
adc
add
icebp
mov
or
sbb
mov
test
cmp
cmp
and
and
clc
sbb
clc
push
mov
xchg
sub
lret
pop
sbb
add
sub
pop
and
mov
or
xchg
movsb
je
sub
nop
add
dec
popa
adc
nopl
fiaddl
dec
xchg
mov
roll
cmp
xor
test
lock
or
mov
mov
test
lret
shrb
dec
ficoml
jp
cmp
cmc
adc
sbbb
imul
pop
mov
xchg
bound
mov
jl
lods
jb
xchg
cmp
mov
xchg
cmp
mov
pop
dec
dec
pop
test
adc
dec
test
movb
loope
and
inc
clc
cltd
in
add
andl
addb
mov
cmpsl
loopne
adc
push
lcall
add
je
or
inc
pop
sbb
mov
push
jne
mov
inc
fimull
lahf
in
int
lock
in
xor
dec
adc
xor
xor
ret
pop
gs
push
mov
test
cmp
cmp
push
addb
add
add
jecxz
jb
sub
clc
adc
push
in
jecxz
fsubl
fisttps
inc
sub
sub
sti
mov
and
sub
push
pop
sbb
cmp
sub
sub
and
xchg
out
dec
xor
das
sub
sbbb
or
int
ficoml
js
push
pop
arpl
or
daa
or
sub
jg
add
mov
push
xchg
xchg
arpl
mov
push
test
or
cmpsl
lock
jp
jne
or
ret
jmp
sbb
cmp
mov
rclb
fldcw
push
mov
mov
repz
mov
cmp
pop
frstor
cmp
pop
stc
adc
adc
dec
jne
jo
inc
and
jmp
sbb
orl
or
scas
in
mov
mov
xor
push
xchg
xchg
jbe
dec
push
cmpsb
push
xchg
cwtl
sbb
mov
sbb
sub
jbe
jo
cmp
rorb
subl
lds
inc
jge
push
or
cmc
and
test
xor
int
push
mov
add
je
lret
or
or
add
xor
fistpl
or
or
xchg
dec
mov
test
pushf
mov
mov
imul
adc
mov
in
sub
jl
rclb
repnz
inc
in
sbb
movsb
add
fildl
jae
sbbb
in
add
popa
movsl
jg
pop
rorl
les
sarb
jbe
and
jl
pop
hlt
mov
or
mov
xor
cwtl
movsb
adc
pop
push
dec
dec
pop
xor
sti
dec
inc
dec
push
add
negl
mov
pop
and
and
xor
aaa
in
or
or
popa
cs
sub
push
sbb
or
js
push
int3
rorb
inc
jb
push
pop
inc
out
aaa
test
das
adc
call
cmp
jne
sub
jne
mov
fwait
ret
adc
jno
fs
jmp
jecxz
mov
cmp
push
stos
jns
add
mov
cmp
jbe
pop
cltd
mov
mov
and
ss
or
out
adc
in
lahf
mov
test
add
adc
cmp
aam
sbb
cmp
sbb
int3
pusha
test
jno
xor
mov
jle
imul
rorb
lock
ret
cmp
cmpsb
or
cmc
or
test
or
inc
test
mov
jge
xchg
rolb
outsb
jmp
iret
and
loopne
sbb
outsb
xchg
mov
or
inc
mov
outsb
push
je
adc
clc
sub
and
rclb
fldt
adc
pop
jne
iret
dec
xchg
add
adc
push
or
and
fidivrs
adc
sti
mov
nop
aaa
or
add
test
sbb
pop
push
xchg
xchg
aas
daa
jae
jb
test
jo
xchg
mov
push
jbe
xor
fmull
sub
popa
add
or
inc
outsl
je
sub
outsb
add
mov
mov
inc
jae
outsb
adc
or
es
mov
scas
adc
ds
mov
adc
xlat
mov
outsl
adc
mov
cmp
cmp
pushf
push
cld
push
push
push
push
push
pop
or
call
enter
add
adcl
or
cmp
inc
fs
jge
test
mov
inc
shrl
inc
and
xor
gs
adcl
push
ja
fiadds
cmp
sbb
les
mov
sub
pop
enter
mov
mov
mov
loopne
dec
shlb
rorl
enter
loopne
sbb
adc
push
jo,pt
mov
pusha
aaa
dec
mov
mov
dec
pop
js
aam
in
and
lcall
aas
lods
pop
lock
out
pop
sub
cmp
pop
jl
inc
repnz
rcr
sbb
dec
pop
aam
jbe
or
adc
aaa
js
push
push
in
pusha
add
add
xlat
movsb
enter
mov
cs
push
sbb
ficompl
sub
leave
mov
sbb
xchg
xchg
dec
pusha
int
push
sub
jnp
adc
pop
mov
xor
pop
loopne
aam
pusha
xchg
int3
ret
xlat
push
pushf
xchg
push
shl
push
or
scas
aad
scas
push
and
push
add
dec
shll
insb
nop
mov
xor
mov
addb
push
xor
adc
sub
inc
nop
lods
jbe
or
push
pop
loopne
hlt
inc
jne
subb
movsl
or
push
or
push
shld
loope
in
jle
test
jns
call
ja
jno
inc
jne
adc
mov
rolb
pop
arpl
and
inc
out
sub
sbb
xor
xor
test
mov
pop
adc
gs
sbb
mov
dec
je
add
dec
jne
int
out
jo
push
imul
sub
jno
nop
test
or
push
imul
mov
outsl
jb
out
loope
dec
add
loope
fcoml
cltd
pop
or
lods
cmp
add
mov
cmp
js
adc
add
add
orb
mov
mov
jl
mov
test
nop
and
sbb
inc
dec
rorb
leave
not
fisubs
loopne
dec
movb
notb
roll
adc
dec
sbb
mov
xor
jno
or
js
mov
add
push
or
enter
mov
add
mov
addl
lea
pop
jno
decb
or
or
add
or
call
add
mov
mov
xor
pop
inc
mov
jge
and
pop
rolb
sbb
push
cmp
push
push
out
xchg
fldt
testl
notb
mov
add
add
in
pusha
rolb
jo
stos
add
jge
mov
add
add
add
sub
enter
ret
mov
mov
push
mov
and
add
push
fildl
mov
pop
inc
pushf
cmc
dec
repnz
mov
pop
or
lret
cwtl
sysret
mull
add
fdivrs
add
push
aad
les
push
in
gs
pop
or
dec
or
ja
into
or
or
adc
xchg
inc
mov
je
push
iret
mov
and
lahf
int3
test
lcall
push
and
ret
dec
gs
icebp
xor
add
mov
cmp
jge
cmpsb
fnstenv
daa
stos
jb
aad
inc
je
leave
or
xchg
jnp
test
xchg
add
or
adc
sbb
mov
inc
sarl
or
hlt
shrl
add
pop
adc
adc
test
mov
jp
sub
scas
mov
xlat
dec
fwait
pop
push
xor
lea
lea
or
pop
sbb
or
insl
shll
loopne
fwait
and
adc
xchg
ret
gs
add
push
out
and
testb
mov
and
loopne
xchg
rcl
dec
pushf
adc
gs
add
xor
add
jecxz
mov
lret
montmul
cmpsb
addb
nop
sbb
sbb
loop
sbb
rorb
push
push
jo
sub
lock
outsb
cmc
repz
inc
popf
out
sbb
rorb
pop
jo
jo
bound
rcll
mov
jo
ror
enter
je
cmpsb
or
mov
push
xchg
adc
rcrb
pushf
icebp
daa
push
jne
iret
lock
daa
repnz
outsl
fwait
sarl
add
mov
fildl
jnp
or
pop
or
adc
pop
pop
fdivrs
xlat
out
pop
pusha
aam
push
lahf
cmpl
inc
sbb
xchg
fsubrl
fistpll
fdivp
aas
inc
push
jbe
push
mov
xchg
jg
push
xor
push
xchg
dec
adc
aas
mov
pop
add
add
add
inc
pop
ret
xchg
add
pop
add
mov
decl
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lcall
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
fdivr
xlat
call
call
ljmp
incl
xchg
sar
sar
sar
sar
iret
xchg
bnd
into
dec
dec
dec
dec
icebp
dec
dec
decl
add
mov
push
push
nop
loopne
shll
gs
and
cwtl
mov
gs
jo
stc
dec
push
lcall
pusha
push
xor
sbb
lods
push
mov
int3
in
sti
lcall
addb
invd
int
repnz
sbb
xchg
fld
repnz
rep
lret
xlat
jl
inc
call
pushf
push
loopne
lcall
push
lods
out
hlt
pop
ss
outsb
add
pop
mov
test
std
lret
jmp
shl
lahf
push
fistpl
ss
pop
mov
dec
pushf
cs
pop
xchg
scas
insl
int
je
test
mov
xchg
aam
inc
out
int
enter
push
js
pop
in
mov
pop
sbb
mov
or
cmp
mov
imul
shlb
sarb
add
fisubs
inc
push
ds
mov
pop
mov
out
adc
fistpll
mov
aas
incl
movsb
adc
inc
rcll
mov
push
jno
push
movsb
sbbb
mov
add
inc
and
mov
dec
jbe
addl
dec
add
xor
mov
push
jl
dec
cmp
or
dec
adc
clc
mov
mov
xchg
inc
call
dec
mov
xchg
dec
adc
mov
pop
lds
dec
sub
into
dec
test
mov
mov
loopne
push
mov
or
and
aas
push
xchg
jns
sbb
js
and
aad
insb
cmp
jg
sbb
or
xchg
push
xchg
inc
cmp
clts
cld
mov
pop
les
inc
lahf
in
jns
push
nop
inc
sbb
enter
fsubrl
xor
sahf
sub
sahf
push
fs
inc
in
stc
or
lahf
cwtl
push
inc
mov
pop
mov
pop
pop
add
mov
cs
sbb
adc
cmp
mov
rolb
sbb
cwtl
inc
push
push
mov
add
test
fiadds
jl
loop
ja
add
push
add
gs
punpckldq
add
add
sti
decb
add
add
repz
mov
clc
jnp
add
sbb
push
add
add
mov
mov
mov
mov
mov
mov
xchg
cmp
adc
decl
pop
loopne
mov
xchg
and
and
mov
mov
loopne
incl
mov
add
push
mov
xor
cmp
sar
add
inc
inc
inc
inc
inc
inc
inc
decb
cmp
xchg
mov
mov
js
stc
shl
stc
xlat
lock
fwait
mov
pushl
es
pop
dec
mov
lcall
insb
xchg
dec
shll
mov
pusha
sub
sub
movsb
mov
in
imul
int3
mov
lcall
or
imul
push
aam
call
xor
sub
int3
loopne
call
xor
data16
push
add
or
sbb
xor
jo
loopne
cmp
pop
imul
mov
outsb
lods
push
imul
sub
imul
loopne
stc
sahf
mov
ds
cwtl
sbb
enter
add
jl
cltd
xor
add
fs
imul
das
hlt
mov
outsl
imul
mov
or
mov
inc
dec
push
pop
mov
cwtl
xor
push
cs
aaa
cld
mov
add
les
cs
loopnew
push
pop
cmp
test
in
ljmp
and
mov
push
adc
outsl
adc
negl
fcmovb
pop
loopne
call
mov
sbbb
and
scas
push
les
jl
push
mov
push
adc
cs
testl
add
addl
cmp
push
add
test
push
push
sbb
repnz
push
pushf
push
mov
push
je
pop
sbb
sub
push
insb
lods
std
add
adc
or
subb
pop
mov
fimull
inc
jge
in
popa
pop
xchg
and
in
xor
add
jge
dec
add
in
pop
xor
repz
psubsb
mov
xchg
push
or
or
pop
jb
sub
and
jb
and
pop
subl
push
sahf
sbb
mov
xor
push
stc
test
lcall
inc
push
pop
call
stos
test
sbb
adc
je,pn
stos
and
into
lret
push
push
stos
xchg
push
addr16
mov
xchg
push
dec
imul
test
das
dec
js
add
push
mov
sbb
out
push
jb
sub
lods
mov
and
scas
push
aad
ror
sub
mov
mov
sbb
enter
je
outsl
inc
fsubs
add
popa
pop
add
dec
jnp
push
and
sub
sbb
cwtl
std
cmpsl
add
pop
fsubs
sbb
push
xchg
mov
or
outsb
sbb
pop
push
add
sahf
sbbb
sbb
mov
xchg
jne
fdivl
mov
add
ss
dec
jne
mov
mov
insb
xor
xchg
fimuls
dec
jno
adc
test
jmp
dec
pushf
js
or
xor
ljmp
adc
test
or
mov
jb
add
test
daa
and
ljmp
sbb
dec
inc
scas
sbb
and
or
lods
mov
lea
or
push
jns
pop
insb
fmuls
push
inc
push
inc
outsb
or
daa
push
jo
daa
or
mov
inc
insb
popa
femms
push
fs
mov
dec
imul
lods
xor
dec
enter
push
jo
imul
mov
btc
push
movb
and
cmpsl
xchg
addl
das
loopne
push
push
mov
or
push
add
out
sbb
cmpsl
mov
outsl
xchg
push
mov
inc
insl
dec
pop
dec
ret
adc
mov
ret
jecxz
es
push
outsl
jmp
inc
lret
dec
xor
inc
push
push
enter
lea
subb
xchg
pop
aad
sar
or
aaa
xor
dec
or
and
or
adc
aaa
push
ds
dec
xchg
push
out
sub
scas
mov
movlps
xor
out
mov
mov
inc
xlat
mov
out
adc
or
outsb
mov
add
inc
mov
sub
xor
add
pop
add
mov
dec
cmpsb
shrb
leave
int
mov
add
cmp
jl
out
pop
and
orb
xor
enter
push
pop
jno
push
mov
pop
add
jbe
mov
jne
add
lock
pushf
mov
inc
lret
adc
and
sbb
lock
add
mov
dec
adc
add
into
mov
mov
sub
sbb
adc
dec
cmpl
or
jmp
jl
call
aam
xor
adcb
and
adc
push
or
push
dec
mov
jnp
xor
xchg
jge
gs
pop
or
adc
adc
xchg
gs
adc
sbb
and
xchg
gs
sub
sub
sbb
sub
mov
inc
fisttpll
pop
lahf
or
sbb
dec
test
inc
inc
xchg
jbe
and
iret
add
sbb
aam
les
sbb
je
adc
mov
sbb
fwait
not
clc
or
je
mov
dec
xor
xorl
xchg
pop
adc
mov
xchg
fstps
mov
push
jns
mov
adc
loop
inc
adc
mov
or
or
sub
adc
add
cmp
push
xor
push
into
add
out
sub
pop
popa
mov
jb
pop
push
mov
popa
inc
sub
xlat
pop
or
pop
sub
hlt
jmp
or
ljmp
fadds
sbb
mov
push
and
or
in
inc
adc
in
adc
add
mov
add
das
sbb
dec
mov
dec
lahf
cltd
mov
pop
pop
inc
sbb
std
nop
xchg
cli
movl
sub
add
or
push
or
add
xor
iret
shrb
xchg
pop
das
loope
xor
jp
pop
test
add
outsb
pop
sbb
cmp
pop
dec
cmpsb
inc
mov
pop
pop
cmp
add
enter
or
loope
xchg
push
and
push
aad
or
dec
mov
leave
inc
mov
out
adc
daa
adc
sub
mov
mov
mov
pop
insb
insb
scas
inc
enter
jnp
sub
pop
pop
js
sarl
adc
inc
adc
mov
bound
mov
mov
or
jmp
push
jbe
adc
add
inc
dec
or
and
outsb
sub
dec
popa
sbb
ret
scas
pop
dec
movntps
test
adc
pop
xor
xor
jle
or
rcrl
call
div
ficoms
inc
inc
std
loope
or
outsl
jae
xchg
in
sbb
fisubl
cmpsl
inc
or
dec
shlb
add
or
add
ds
and
out
cmp
adc
rcr
int
add
jb
icebp
xchg
mov
add
adc
xor
adc
sbb
bound
das
xlat
les
and
or
repz
stos
nop
aam
push
inc
mov
push
test
mov
push
in
cli
push
add
es
mov
and
je
out
loop
mov
or
sbb
mov
lods
repz
cltd
jo
jge
jge
cmp
pop
mov
add
pop
movsl
loopne
testb
jmp
push
mov
ret
dec
insb
inc
jmp
lods
mov
cwtl
sti
or
mov
fdivs
or
fbstp
clc
pop
xchg
sahf
adc
mov
rorl
and
fld
xchg
sarb
xlat
pop
inc
or
sub
add
fcoms
lock
andb
outsl
cmpb
shll
jo
fiaddl
mov
mov
in
inc
xchg
cs
push
or
in
dec
in
lea
sub
lea
cmp
data16
lea
pop
and
dec
or
dec
cmpl
cs
adc
xor
add
mov
add
sbb
mov
outsb
lea
fdivs
jge
mov
nop
sub
fdivl
pop
push
cmpb
jo
xchg
mov
push
jno
push
or
fcoms
pop
sbb
mov
lahf
gs
xor
push
inc
aas
pop
mov
jle
inc
jno
call
movsl
sub
dec
dec
add
sti
rcrl
fmuls
loopne
and
test
and
push
or
js
cmp
inc
sub
xorb
inc
xor
rorb
lret
insl
and
push
pop
cmp
rorl
imul
cmp
fwait
ret
mov
jne
and
and
nop
shlb
xor
mov
push
nop
rol
or
add
or
mov
lock
test
add
push
add
cmc
pop
and
hlt
mov
push
pop
rorb
fs
cmp
insl
dec
jne
pop
push
xor
sahf
xor
xchg
lea
cmp
cmp
pusha
cs
cld
inc
in
fistps
inc
stos
xor
lea
xor
fsubr
xor
leave
sub
cmp
mov
mov
mov
aam
lock
cmc
jmp
cmp
sub
test
cmp
das
fdivs
stos
insb
int3
and
jmp
sahf
and
adc
dec
pusha
push
in
shll
out
ss
addr16
inc
jo
jl
mov
jb
jae
mov
pop
adc
pop
adc
aaa
call
push
add
je
scas
pop
jo
out
aas
test
push
mov
push
xor
rcrb
fstl
test
inc
je
repz
mov
push
inc
sbb
mov
inc
push
sub
fsubrl
dec
jge
int
imul
inc
es
add
insl
mov
iret
push
pop
or
mov
xchg
shll
stc
xlat
test
or
mov
jl
cltd
mov
movb
sti
jmp
xchg
add
jg
nop
push
pop
add
dec
ljmp
jne
mov
insl
and
test
adc
pop
repnz
add
push
insl
mov
pop
pop
and
sbb
add
sti
inc
adc
cmp
xchg
and
mov
mov
cmovae
xchg
push
xchg
mov
lcall
adc
mov
mov
mov
mov
inc
jmp
enter
dec
sti
dec
fs
pop
fmuls
mov
jbe
mov
mov
push
cltd
test
xchg
es
push
cmp
js
adcb
imul
xor
cltd
pop
pop
and
in
popa
xor
cmpsl
or
inc
push
jmp
push
jl
xchg
mov
dec
int3
ret
dec
cmp
sbb
movsl
push
pop
lret
cmp
sbb
and
sarl
jo
out
aam
xor
xor
js
xor
xchg
pop
and
push
stc
test
add
sub
aaa
push
aam
sub
push
adc
sti
ss
adc
dec
xor
cmp
sub
inc
test
add
lds
sub
mov
loop
xchg
push
cmp
fistl
lods
ja
dec
daa
or
fldt
xlat
mov
stc
fstpl
fwait
jmp
inc
and
lea
and
out
xchg
add
jns
sub
imul
mov
insl
pop
sub
dec
pop
fcomps
cmpsl
in
sbbl
sbb
or
jmp
sub
mov
push
adc
lret
in
lret
pushf
rorb
addr16
mov
inc
loopne
mov
pop
pop
loope
mov
jp
sub
ret
cmp
rcl
leave
mov
fisubl
and
fldl
mov
or
mov
adc
lock
push
xor
dec
stos
xchg
jecxz
sbb
nop
xchg
movsb
loopne
sbb
adc
mov
mov
in
lods
subb
popf
pop
cmpl
jbe
ret
sub
mov
cmp
loope
loope
inc
inc
dec
jmp
push
inc
int3
cmpl
or
xchg
mov
jg
data16
mov
push
dec
sub
add
mov
add
movsl
enter
jno
dec
cmpsb
test
add
pop
and
xchg
into
push
adc
cwtl
sub
or
inc
ror
pop
xchg
mov
iret
push
push
xor
push
cmp
mov
enter
add
adc
cmpsl
cli
sub
sahf
rorb
xchg
aas
push
push
nop
stos
cmp
xor
mov
jns
clc
sub
fcmovnb
inc
incb
or
adcb
test
fsts
mov
lods
iret
ds
inc
xor
adc
sub
cltd
mov
data16
mov
xor
fbstp
rorb
sub
sub
cmp
pushf
popf
adc
test
or
cli
jmp
and
cwtl
adc
mov
pop
je
inc
cmp
imul
adc
xor
fidivrs
ss
arpl
push
pop
outsb
je
outsb
les
cmpsb
adc
xor
cmp
nop
nop
pusha
adc
jo
add
test
mov
rcl
mov
or
sub
out
sbbb
mov
add
cmp
pop
or
and
push
sub
imul
testb
sub
adc
sbb
or
daa
cmp
sub
sarl
addr16
xor
pop
mov
mov
cli
nop
lret
insl
push
and
mov
jbe
adc
or
mov
insl
inc
lcall
imul
nop
insl
sub
movsb
inc
inc
mov
enter
ss
rcrl
es
ret
mov
fwait
pop
dec
popa
imul
and
filds
xor
lds
sub
dec
add
sahf
cmpsb
sarb
sub
mov
inc
fwait
sub
clc
scas
cmc
push
leave
add
sbb
movsl
dec
lret
add
push
mov
xlat
sub
push
insb
outsb
cmp
pop
add
mov
ja
sti
add
pop
in
add
sbb
nop
pop
mov
push
je
lds
sti
xor
or
insl
jmp
pushf
nop
pop
mov
in
int3
enter
insb
cld
ret
xor
jns
xor
int3
aas
jp
je
clc
sub
inc
lcall
int3
lock
inc
mov
xor
dec
repz
jb
stos
jecxz
hlt
xchg
jbe
mov
enter
bound
or
hlt
imul
jne
popf
enter
inc
mov
mov
pop
testb
loope
mov
sub
outsb
sub
pop
cmp
push
leave
or
mov
mov
pop
lea
and
and
pusha
sbb
jecxz
sbbl
mov
pop
lods
jmp
add
pop
add
or
shrl
mov
cmpsb
xor
mov
cmp
ja
jae
dec
data16
xor
push
push
xchg
mov
enter
cmp
subb
jg
outsb
dec
scas
push
pop
pop
and
add
and
popa
xor
and
push
adc
daa
xchg
gs
or
lock
pusha
mov
dec
loope
and
sub
out
decl
add
dec
or
or
leave
jbe
pop
adc
mov
outsb
and
ret
cmp
push
or
outsl
leave
jae
adc
je
dec
fimuls
cmp
cmp
leave
and
sbb
xchg
and
or
sbb
pusha
sarl
xor
lods
and
test
pop
loopne
pop
adc
xor
and
mov
fs
arpl
inc
clc
cmpb
cmp
push
inc
jae
stos
imul
xchg
push
inc
popf
pop
mov
test
mov
lds
and
inc
cmp
jne
add
mov
add
je
imul
add
test
and
push
lret
mov
mov
or
icebp
enter
ja
fs
int
cmpsb
push
dec
push
mov
pop
fadd
mov
sbb
cmp
add
loopne
mov
or
or
loopne
mov
cmc
inc
lcall
inc
imul
inc
push
gs
out
lods
popf
cmpsb
andb
and
push
or
in
ret
mov
add
xor
in
xchg
mov
sub
mov
data16
cmp
loop
xor
addr16
xchg
fs
xchg
fsubrl
lret
ja
or
inc
bound
or
pop
adc
and
inc
fsubr
pop
pop
sbb
mov
mov
cmp
xchg
mov
cmp
mov
cld
mov
jo
xchg
adc
and
daa
mov
enter
aas
sub
addr16
mov
lret
add
mov
mov
je
mov
inc
call
push
xchg
andl
imul
cmovl
ljmp
je
sbb
in
loope
jo
shlb
dec
jo
inc
push
add
pop
pop
pop
fstpl
adc
push
pop
add
jp
jmp
xchg
mov
call
add
inc
mov
rorl
or
mov
mov
addr16
cmp
cmp
pop
outsb
adc
push
xor
insb
mov
dec
add
xor
mov
jbe
sub
xor
sbb
adcl
inc
lahf
or
call
pop
ret
push
orl
rclb
inc
movsb
addl
xorb
push
ret
mov
sbb
cmp
sbb
push
pop
mov
insl
xlat
dec
pop
lret
inc
xor
cmp
enter
mov
cmc
cmpxchg
pop
pop
rol
push
push
sbb
push
jge
rorb
insb
inc
xchg
sbb
ret
jle
outsl
dec
fdivrs
push
sbb
lods
ret
les
orl
cld
movsl
loope
inc
outsl
adc
xor
push
orl
inc
pop
xchg
dec
push
fldcw
mov
gs
mov
adc
pop
adc
sub
add
imul
pop
pusha
mov
test
xor
inc
pop
add
loop
push
cld
iret
loopne,pt
ds
testb
push
pushf
sub
cld
lock
adc
faddl
sbb
xchg
clc
or
mov
dec
push
ret
sub
add
in
aaa
xlat
cmc
adc
out
int
lock
arpl
cltd
mov
icebp
call
xor
pop
or
xor
cmp
or
sbb
jne
jg
mov
jmp
cmp
clc
jne
shr
popa
sub
inc
xchg
sub
cwtl
cmp
pop
and
aam
pop
pop
jl
aam
cltd
push
jo
shll
jne
or
jg
pop
xlat
push
je
mov
or
dec
sub
in
inc
inc
dec
pop
out
ret
ljmp
cmp
jne
cs
lock
repz
mov
scas
inc
dec
push
pop
dec
dec
inc
mov
test
arpl
xchg
test
xchg
aaa
cs
and
push
xlat
dec
jo
dec
dec
dec
mov
xchg
popf
in
pop
inc
ja
jnp
xor
sbb
jne
cld
dec
jne
ds
cmp
push
push
mov
adc
push
rcr
jns
inc
inc
mov
or
ret
loopne
call
lret
adc
add
push
ret
iret
dec
add
jle
popa
add
mov
shrl
inc
test
mov
mov
or
cmp
cmp
xchg
or
xchg
arpl
xor
dec
test
inc
dec
das
mov
faddp
mov
push
adc
clc
fadds
movl
or
dec
mov
xchg
mov
dec
sub
pop
out
imul
cmp
and
xchg
jle
fidivs
loopne
or
or
in
mov
sarl
xor
xchg
cmp
das
push
add
xor
adc
rolb
dec
push
loopne
js
roll
mov
inc
lret
inc
dec
add
dec
push
xchg
dec
pushf
or
add
push
inc
or
in
in
outsb
pop
jge
mov
cmp
scas
and
rolb
push
cmp
and
shlb
mov
mov
nop
mov
mov
jmp
and
adc
or
int3
in
shrl
cmp
cli
clc
dec
and
mov
push
bound
xchg
push
nop
inc
pop
push
mov
pusha
mov
jbe
repnz
xchg
mov
cmpsb
mov
or
outsl
jp
or
sub
jmp
gs
or
add
jns
cmpsl
idivl
roll
std
addb
cmp
sub
add
inc
cmp
mov
or
outsl
dec
add
add
mov
sbb
dec
fldenv
pop
pop
jp
ret
cmp
inc
add
out
add
lds
int
mov
inc
ja
aaa
mov
mov
inc
jp
pop
xchg
xchg
pusha
mov
enter
test
call
push
or
lods
in
movl
pop
lret
inc
clc
add
subl
or
test
pop
add
cltd
fbld
push
push
lea
fiadds
push
je
gs
inc
aas
adc
loopne
mov
outsl
jge
icebp
mov
mov
add
pop
mov
push
inc
add
and
sub
andb
call
mov
je
popa
popf
adc
sub
addr16
inc
push
dec
xor
sbb
mov
mov
lcall
jo
jne
inc
and
ret
adc
dec
adc
inc
pusha
and
or
fildll
cmp
je
xlat
add
sahf
pop
jmp
mov
pusha
lods
inc
adc
cmpsl
test
call
das
outsb
inc
adc
push
lcall
mov
into
sbb
sarb
push
out
add
mov
add
xchg
sbb
dec
or
jecxz
aaa
mov
insl
add
ret
cmp
inc
fwait
dec
in
xchg
or
adc
daa
imul
jo
or
rolb
outsb
test
and
xchg
mov
in
popa
or
xchg
pop
push
mov
pop
nop
add
loopne
or
inc
sbb
jp
push
out
insl
rcrb
xchg
xor
inc
add
pop
nop
insb
or
fiaddl
pusha
and
pop
daa
pop
je
mov
xor
jmp
push
pop
outsl
inc
push
mov
cmp
inc
push
and
xor
sub
push
add
xchg
arpl
mov
call
test
pusha
or
jl
or
pop
call
push
jge
scas
test
adc
push
adc
sarb
inc
inc
scas
outsb
insb
and
out
aas
xchg
dec
xchg
lods
fs
mov
loop
aad
xchg
adc
add
nop
scas
add
push
out
cmp
lea
je
jl
mov
inc
in
push
mov
sbb
je
mov
mov
lahf
or
pop
cmc
mov
cmp
add
or
push
pop
or
sarb
fnstcw
nop
aaa
and
daa
test
push
lock
nop
pop
mov
jo
rorb
aad
xchg
cmp
in
idivl
adc
out
dec
xor
movsl
add
sahf
std
mov
das
push
add
pop
cmp
xorb
adc
sbb
leave
xor
lea
sub
mov
adc
cwtl
dec
faddp
fucomip
inc
outsl
pop
je
or
inc
pusha
add
and
xor
inc
add
add
pop
push
loope
div
sub
mulb
mov
adc
mov
push
inc
sahf
or
push
js
or
das
mov
mov
cmpl
xor
das
pop
je
mov
dec
lods
xor
and
or
nop
cltd
leave
insb
ss
sbb
dec
and
rcrl
mov
mov
leave
or
iret
pop
xor
lds
and
xor
xor
stos
xchg
adc
push
lahf
jmp
dec
lods
sbb
ret
iret
mov
add
sbb
sbb
jne
or
mov
icebp
cmpsl
jne
ja
insb
mov
or
mov
scas
mov
es
xor
jno
mov
mov
adc
lds
or
ror
inc
cmp
decl
sbb
add
dec
clc
mov
mov
out
adc
lahf
and
lcall
xchg
dec
mov
and
add
orl
pop
mov
inc
loope
xor
ficomps
mov
adc
jo
jne
mov
rolb
jmp
ljmp
cmpb
or
sarl
inc
xorl
loopne
aaa
rcrb
adc
sub
aad
pop
pop
subb
mov
xlat
clc
mov
jmp
test
cld
inc
or
fsubrs
push
add
mov
call
push
xor
mov
cld
add
pop
data16
cmp
adc
push
stos
mov
insl
mov
and
call
xchg
mov
and
inc
or
and
xchg
decl
adc
fidivs
cmp
out
pop
push
jns
add
inc
xchg
clc
jne
mov
pop
jo
adc
xor
mov
cli
dec
frstor
inc
and
add
xchg
jne
dec
add
aas
lcall
or
mov
mov
adc
lds
jecxz
inc
pop
incl
pop
cld
add
push
popa
push
enter
lcall
xchg
insb
shll
mov
movsl
fwait
sbb
sbb
xor
orb
jmp
fwait
mov
ss
jbe
das
add
jo
or
mov
jb
add
and
fisubrs
aam
push
and
popa
daa
jl
bound
ret
mov
js
into
insb
fbstp
fists
pushl
mov
inc
push
jns
push
dec
push
js
mov
fbld
adc
add
ret
les
pop
sub
inc
test
add
jge
js
popf
pusha
or
flds
loopne
lcall
cmp
jbe
add
adc
dec
movb
inc
jnp
inc
repnz
sbb
orl
mov
push
sahf
xor
lret
lock
daa
inc
cmp
out
mov
int
ljmp
movsb
addr16
inc
repz
notb
adc
jno
aas
xchg
sbb
pop
arpl
in
sbb
sbb
xchg
mov
fwait
pop
ret
lea
add
add
test
add
jbe
xchg
into
xchg
jo
jecxz
call
lahf
rcr
add
dec
and
inc
or
loope
add
adc
inc
leave
push
fwait
lea
fst
data16
psadbw
pushf
mov
fucomp
adc
inc
mov
add
mov
lea
add
jmp
jb
push
pop
sarl
jl
fucomip
inc
sbb
push
mov
mov
sub
mov
push
out
shrb
pop
leave
dec
push
mov
or
or
pop
enter
add
add
rol
cltd
inc
add
addb
xor
ret
movb
cmp
sbb
push
jmp
data16
aaa
roll
fildll
mov
push
int3
pushf
shlb
inc
test
test
icebp
imul
add
pop
lea
pop
sti
jbe
push
mov
stc
shr
sub
mov
mov
or
mov
jge
mov
scas
pop
sub
mov
add
daa
jns
movsb
mov
push
dec
and
inc
push
or
pushf
xor
inc
mov
nop
sub
push
ja
dec
push
dec
inc
scas
dec
dec
add
loopne
nop
jno
fdivrl
insl
scas
push
neg
js
negl
dec
jmp
sbb
sahf
les
add
jmp
and
add
and
pop
pop
jmp
fwait
stc
shr
xor
dec
incb
or
call
ret
xor
dec
cld
cmp
push
jbe
cmp
inc
pusha
sub
cmp
int
mov
inc
mov
inc
loopne
in
mov
pop
lods
or
inc
in
push
xor
pusha
adc
pusha
jo
adc
sub
pop
inc
adc
add
leave
call
jmp
mov
test
add
mov
in
outsl
or
fwait
sbb
pop
fmulp
jne
ss
xchg
push
jo
xlat
jo
jns
in
add
jne
mov
sub
jb
je
test
es
and
jp
add
nop
push
lods
outsl
mov
sbb
test
rorb
jbe
push
or
push
inc
lods
addr16
fimuls
mov
dec
sti
sbb
xor
mov
fldenv
sbb
pusha
xor
sbb
adc
int3
xchg
test
xchg
stos
addl
add
test
jne
mov
sub
or
add
pop
adcb
mov
notl
cmp
in
loop
loop
pop
inc
iret
fsubl
jno
pop
loopne
adc
shrl
sbb
jne
rcll
aas
cli
dec
inc
setns
xor
pop
lret
enter
in
int3
lea
stos
in
and
jle
fsubl
push
push
cwtl
fsubrs
ret
mov
or
pushf
insl
inc
loopne
xor
adc
sbb
shr
inc
rcrl
or
add
or
mov
push
push
in
mov
add
js
or
mov
push
adc
ljmp
lea
jne
fldl2t
sahf
sbbl
push
and
xchg
call
movsl
inc
mov
dec
repz
in
hlt
sti
and
rorb
inc
arpl
clc
mov
or
sbb
pop
pop
push
or
call
mov
or
rorb
or
xor
and
pop
mov
push
push
mov
inc
fidivs
mov
addb
ret
test
inc
adc
popf
les
sti
mov
or
cmpsb
ret
jp
cli
and
call
cmpsb
into
adc
adc
outsl
add
loopne
mov
push
pop
movsl
inc
or
jne
lret
pop
daa
aas
push
push
shlb
mov
xor
push
fcmovnb
add
mov
add
jp
xchg
addr16
push
xchg
fsubs
mov
inc
or
dec
and
fs
lock
ja
int3
enter
cltd
int3
enter
add
or
push
mov
adc
adc
js
mov
or
inc
outsl
sub
int
pop
jle
cmp
add
adc
or
pop
pusha
movsl
orl
lahf
lock
je
push
and
xor
rorb
adc
mov
inc
push
cs
sub
sub
xor
and
or
and
or
pop
shrb
ret
adc
cmp
cmp
popa
mov
jmp
nop
int3
cmp
subl
dec
pop
add
pop
imul
adc
sub
add
push
or
and
sbb
popf
xchg
xor
les
sub
pusha
add
mov
push
test
push
dec
mov
pusha
adc
lods
jb
aas
scas
push
inc
cmpb
mov
rorl
or
pushfw
insl
mov
jmp
fimuls
inc
dec
inc
in
add
inc
or
add
inc
nop
inc
sub
dec
xchg
sub
dec
dec
inc
adc
mov
pop
mov
js
or
je
mov
pop
call
loop
xchg
jecxz
mov
sar
add
sbb
ret
and
aas
jle
test
adc
scas
jb
cmp
inc
ja
mov
dec
dec
jle
xchg
pushf
mov
pop
arpl
xchg
or
fnsave
adc
cmp
jmp
xorb
add
adc
add
mov
dec
je
add
in
xor
int3
mov
gs
pop
add
testl
mov
add
jle
es
push
jmp
xchg
mov
adc
adc
sbb
cmp
jne
xchg
daa
xchg
sub
pop
dec
test
pop
mov
out
hlt
dec
or
mov
cmpsl
and
adc
dec
leave
ror
outsl
or
int3
push
mov
sbb
shll
je
test
lods
dec
das
and
outsl
clc
ja
and
lods
cmp
push
jnp
roll
insb
or
das
aas
mov
push
cmp
lods
call
sbb
xchg
adc
popf
mov
adc
clc
xchg
xchg
mov
push
popf
xchg
sbbb
in
shrb
jo
mov
cmp
cli
sbb
xlat
pop
xchg
sub
and
shll
add
push
push
adc
or
and
cmp
mov
or
mov
repz
pop
push
or
fwait
add
inc
mov
xor
ss
dec
je
jae
test
sub
adc
adc
xor
adc
loopne
lea
sbb
or
or
sbb
dec
xchg
add
sub
pop
decl
dec
add
cmp
xchg
xchg
std
jns
add
shrb
add
fwait
testb
cmpw
mov
outsb
jg
adc
ret
or
push
mov
add
cmp
add
add
aam
or
repnz
ret
fcom
aad
movswl
and
stc
or
dec
push
stos
add
add
ss
adc
lock
mov
sbb
pop
dec
add
pop
push
jmp
xchg
fs
test
mov
andl
mov
inc
ret
adc
jmp
inc
pop
mov
push
add
add
frstor
pop
dec
inc
das
inc
pop
stos
jo
cmp
fxch
in
dec
test
bound
add
dec
dec
insb
add
lcall
faddp
pop
jl
xchg
shl
inc
xchg
loope
or
sbb
xor
fisubl
sbb
fsubrl
add
dec
leave
and
sahf
outsl
push
sti
fimull
push
movb
inc
fadds
enter
dec
fs
cmpl
sub
bound
rorl
mov
pop
aam
push
jmp
pop
dec
or
inc
scas
nop
cmpl
and
dec
xchg
fwait
adc
rorl
inc
mov
dec
adc
les
push
sbb
xor
std
aam
xchg
dec
rorb
nop
sahf
mov
bound
stos
jmp
sub
add
outsl
inc
in
shlb
add
add
arpl
and
je
cmp
mov
lcall
popf
cmp
inc
mov
add
dec
xor
push
adc
and
mov
enter
pusha
es
inc
into
fmull
inc
addl
xor
adc
pop
ret
mov
outsl
mov
test
xlat
sbb
jle
hlt
dec
jl
je
push
lock
inc
add
or
in
insb
lcall
or
jns
out
dec
or
dec
and
popa
fsubs
aaa
je
mov
clc
pop
or
arpl
jne
testb
mov
decb
rolb
push
and
adcb
fwait
pop
push
iret
add
add
pushf
push
push
sub
stos
inc
loop
push
lcall
pcmpgtd
and
ja
cmpl
or
jmp
lret
jo
popa
lret
xor
jmp
pusha
pusha
sbb
daa
or
ret
nop
xchg
pop
mov
mov
xor
mov
add
loop
or
test
repz
ja
push
aad
dec
sub
mov
lahf
push
outsb
movsb
mov
or
add
jg
mov
addl
adc
out
pop
ret
and
nop
jmp
push
out
pop
pop
push
in
arpl
loope
lahf
mov
sbb
jo
lods
or
adc
das
adc
cmp
xchg
cmp
ret
xor
inc
pop
cmp
and
ret
add
dec
daa
or
cmpsb
add
nop
dec
ljmp
nop
push
imul
call
jo
sbb
loopne
xor
pop
int3
xor
sub
pop
sbbb
mov
jo
lea
push
fstl
test
push
test
sub
movntps
loopne
sbb
dec
cwtl
cmc
or
dec
dec
imul
push
inc
add
sub
or
mov
sbb
add
mov
adc
mov
subb
pushf
daa
or
insb
pop
daa
dec
pusha
xor
xor
sbb
sbb
or
pop
adc
out
sbb
pop
dec
test
ljmp
lret
orb
daa
adc
fidivs
pop
clc
fcoml
outsb
mov
push
fs
fisttpll
adc
xorl
inc
fs
mov
mov
adc
shr
inc
push
xor
cmpb
or
clc
xchg
mov
data16
andl
push
inc
rcrl
daa
add
or
push
std
add
and
dec
add
test
inc
mov
push
out
mov
aam
pusha
jmp
mov
aas
cmp
xchg
or
xor
mov
mov
orl
outsl
and
shrl
shlb
push
xor
cltd
push
lds
aad
mov
mov
inc
mov
das
sbb
aas
xchg
es
jp
xchg
cwtl
pushl
add
fistpl
jns
dec
and
add
movsb
daa
xor
das
mov
and
adc
pop
inc
or
add
or
xchg
inc
adc
imul
enter
leave
js
jle
cmovg
add
cmc
das
lds
mov
jmp
or
xchg
hlt
xchg
jge
jmp
cmp
push
jg
mov
mull
pusha
mov
or
lcall
sub
sub
das
dec
stos
add
xor
xor
and
addb
xor
and
out
sbb
add
jecxz
std
fiadds
push
add
jmp
in
leave
mov
aam
int
pop
pusha
mov
push
daa
xlat
sbb
icebp
rclb
adc
sti
xor
fcomps
fwait
cmpb
mov
daa
icebp
movsl
repnz
dec
pop
push
mov
movsl
fstps
dec
es
int
pop
data16
mov
fiadds
mov
in
inc
adc
js
test
arpl
jb
sbb
fisttpl
insb
fadds
aad
shl
inc
dec
xchg
and
inc
js
or
adc
cmp
adc
fsubrl
les
adc
push
test
sub
daa
mov
ljmp
out
pop
rol
or
sbb
add
outsl
jne
xor
or
popa
orl
mov
inc
sbb
movsl
sub
or
or
sub
enter
inc
sub
add
cmpsl
sub
adc
inc
sub
xor
inc
lds
loop
mov
xchg
mov
xor
mov
out
inc
jecxz
aam
mov
adc
fsubrs
inc
mov
pusha
test
icebp
fwait
adc
adc
inc
sbb
add
adc
xchg
inc
add
loop
mov
clc
or
add
cwtl
movb
add
jl
and
rclb
int
add
das
adc
or
lods
jmp
sbb
adcl
cmp
shlb
cmp
mov
bound
and
lret
fs
stc
or
movsl
jmp
dec
push
imul
push
scas
mov
cld
xor
xchg
rolb
and
stos
lret
xchg
adc
test
xchg
lahf
dec
das
jecxz
mov
call
daa
shr
mov
xchg
lods
mov
add
fs
cmp
loopne
adc
dec
jbe
jns
int
cld
push
jne
shll
mov
adc
fdivr
fdivrs
mov
scas
or
push
cmc
cwtl
inc
popa
bound
push
in
add
rcrb
ret
jo
jge
imul
movsb
cltd
data16
dec
sti
imul
nop
ljmp
fcomp
sarb
addr16
aam
addr16
outsl
sbb
enter
hlt
popa
add
add
push
mov
inc
out
fistl
inc
or
and
std
test
add
imul
imul
js
or
adc
cmp
loop
adc
aam
add
je
loopne
push
outsl
pop
push
inc
or
lcall
jmp
xchg
mov
imul
shl
push
inc
cmp
setg
jmp
aas
icebp
or
add
inc
add
cmp
setle
xor
inc
inc
es
dec
dec
jmp
pop
inc
dec
adc
cld
sti
jl
dec
cmp
daa
pop
xchg
rcl
inc
push
sbb
fcoml
lea
jge
outsb
sub
inc
popa
jmp
push
or
negb
mov
sbb
push
pushf
xor
jns
inc
dec
push
mov
ljmp
xchg
and
enter
fists
ss
xor
lea
mov
add
inc
adc
adcl
subl
sub
mov
leave
popa
dec
mov
aaa
hlt
jmp
xorl
negb
push
lahf
mov
gs
sar
rcl
pusha
inc
adc
mov
push
sbb
nop
or
xchg
mov
call
and
std
add
mov
pushf
and
xor
movb
in
js
loopne
aam
aas
push
or
stos
xor
icebp
inc
and
mov
jne
icebp
xchg
add
add
test
add
stos
aaa
jl
push
xchg
mov
dec
or
pop
pop
inc
add
popa
or
adc
add
pop
mov
cmpsb
adc
lahf
add
cmp
ja
orb
or
push
lods
push
shll
in
ret
inc
ret
data16
add
mov
pop
xchg
jle
sub
lods
or
loopne
std
mov
xor
add
jmp
sbb
mov
push
movsb
rcll
jmp
push
cs
xchg
mov
js
inc
fistl
rol
or
mov
addl
movsb
in
or
pcmpgtb
pop
das
xchg
push
mov
cli
add
xchg
pop
mov
cmp
lcall
sub
or
inc
push
daa
xchg
popl
sbb
in
test
cmp
sbb
negb
pop
cmpl
call
jmp
inc
lret
inc
ja
popf
inc
insl
dec
inc
out
sbb
cmpb
mov
pop
loop
pop
cmp
jne
fcmovne
jbe
and
mov
ljmp
mov
jne
sub
mov
jo
cmpb
mov
or
and
adc
adc
shlb
dec
or
dec
aas
sub
je
aaa
add
adc
out
jge
adc
dec
adc
insb
sbb
les
inc
cmc
pop
sarl
cmp
mov
insl
mov
mov
push
hlt
pop
mov
mov
int
xor
ds
call
adc
jne
jg
xor
movsl
add
fs
daa
or
push
aam
push
or
fstps
cmpb
sbb
cmp
jne
push
sub
popa
inc
ss
test
outsl
fmull
insb
mov
mov
sub
addb
adc
mov
ljmp
cwtl
pop
xchg
stos
or
dec
das
ljmp
push
jb
and
cli
sub
add
add
and
adc
mov
add
dec
push
sbb
sub
jne
lcall
dec
test
jbe
jle
jge
jno
fs
pusha
prefetcht0
and
cs
push
jnp
or
push
xchg
add
inc
in
sbb
pop
pusha
push
out
lods
call
push
incw
sbb
jne
addl
or
bound
lcall
in
push
mov
mov
adc
fdivs
pop
pop
sub
cmp
and
stos
pop
subl
push
dec
sub
jnp
shll
jmp
test
xor
in
mov
add
pop
test
addl
pop
cmpsb
test
adc
sbb
sbb
jae
inc
xchg
int
xor
pop
cs
shll
dec
ret
aas
adc
sbb
add
fs
mov
rorl
ds
mov
enter
xlat
mov
ret
pop
mov
adc
fdivs
dec
add
popf
enter
adc
fucomi
fisubs
pop
shll
inc
pop
xor
std
adc
xor
mov
push
dec
notl
addb
jne
cmovl
or
int3
movsl
or
add
inc
inc
call
cmp
sub
xchg
repnz
inc
mov
sbb
push
dec
pop
mov
aaa
mov
pop
pop
jne
test
adc
lcall
jne
scas
repz
mov
or
xor
ljmp
dec
pop
cltd
sbb
sbb
scas
jnp
add
mov
push
push
jmp
xchg
add
pop
sub
sub
mov
mov
das
xor
outsb
aas
jmp
les
mov
fcomps
sbb
adc
adc
outsl
jecxz
lods
adc
test
dec
movsl
sbb
inc
and
test
idivl
push
lods
jmp
ljmp
and
mov
or
add
push
or
pushf
ret
sbb
mov
sbb
push
mov
sbb
xor
call
push
mov
sahf
mov
or
movzwl
jo
in
or
lock
sahf
cmp
pop
mov
xchg
subl
and
es
enterw
and
sub
dec
mov
insb
jmp
add
loopne
adc
ss
sbb
push
ja
mov
mov
add
inc
xor
jp
std
mov
push
push
orl
inc
xchg
dec
ljmp
push
adc
mov
mov
cmp
or
imul
inc
enter
jle
lods
and
xor
sbb
xchg
or
and
ja
sbbb
sbb
pop
inc
add
inc
xor
push
jb
loop
lea
sarl
sbb
dec
xor
add
mov
cwtl
lock
xchg
adc
adc
notl
cwtl
mov
das
std
jae
test
inc
sbb
movsb
add
and
aam
sbb
mov
cld
test
fisttpl
test
or
int3
out
insl
lea
adc
ljmp
je
shlb
pop
dec
mov
jl
add
test
or
pop
or
cmp
and
in
lret
mov
ds
or
pop
lahf
jbe
xchg
xor
pop
cwtl
pop
dec
mov
add
pushf
mov
test
xchg
or
and
sub
nopl
repz
sub
xchg
adc
in
pop
js
fcmovbe
inc
push
cmc
push
xor
notl
and
xchg
add
push
test
jmp
fwait
jg
out
inc
mov
sahf
inc
xchg
imul
dec
xchg
pop
sti
cmp
out
add
pop
stos
ja
jl
rclb
or
ss
and
test
mov
mov
gs
in
flds
insb
xchg
xor
fwait
sbbb
jo
pop
test
mov
fists
mov
pop
mov
add
lea
aam
mov
das
es
aaa
or
lcall
sbb
aaa
cmp
jg
or
icebp
imul
popa
jne
or
lea
or
cmpsl
lods
xor
mov
loop
mov
dec
out
cmp
adc
and
das
or
push
sub
lahf
fcmovnb
and
adc
jge
mov
loopne
sbbb
and
test
mov
xor
ljmp
xchg
aaa
ret
inc
cmp
xchg
push
leave
fisttps
add
sbb
rorb
arpl
pop
or
xor
std
pop
mov
or
mov
popl
push
in
inc
pop
repnz
imul
or
scas
mov
fnstsw
and
pop
sbb
insb
lahf
mov
push
inc
jo
push
aaa
andl
test
mov
and
add
add
testb
dec
pop
lock
rcrl
adc
loopne
pushf
mov
inc
imul
lods
lock
fs
mov
jnp
outsl
je
sub
aas
mov
loope
mov
ljmp
nop
cmpl
jo
mov
adc
sti
movl
xorb
or
adc
push
daa
pop
jge
inc
or
pop
or
xor
inc
je
cs
mov
sbb
xchg
dec
lds
add
bsr
mov
js
je
jno
add
cmpb
je
in
rclb
push
sbb
andb
sbb
xor
xor
jbe
sub
add
rcr
jmp
cmp
leave
pushf
push
sub
or
cmpsl
mov
incl
nop
aas
pop
data16
sub
add
mov
mov
arpl
inc
je
aad
arpl
or
cmp
aam
movsb
scas
xchg
popa
inc
add
int3
xchg
push
and
mov
mov
mov
jmp
adc
cltd
sbb
mov
inc
cwtl
sbb
sbb
leave
xchg
pop
sti
add
lret
xor
sub
sbb
xchg
rcr
xor
add
push
inc
movsb
push
sbb
mov
push
aad
pushl
in
rcl
add
push
adc
sub
adc
adc
pop
mov
cmp
xor
pusha
mov
jg
scas
mov
icebp
or
rorb
dec
adc
lds
ret
xor
sub
mov
aad
sub
dec
cmp
push
sub
fnstsw
shll
dec
push
inc
cmp
or
idivl
loop
sub
inc
daa
insl
cwtl
jmp
nop
cmp
push
or
cmp
xchg
pop
xor
cmp
push
cmp
test
stos
jno
and
sbb
les
loopne
push
add
inc
popa
and
push
inc
dec
jnp
adc
inc
addl
adc
mov
push
add
andb
cmp
ficoms
mov
call
pop
movhps
jmp
out
data16
lahf
jo
or
adc
or
or
inc
leave
and
cmp
pop
insl
mulb
xchg
ss
push
nop
imulb
bound
jno
push
cmp
lods
add
and
add
cwtl
ss
mov
outsl
xchg
in
mov
sub
jae
mov
push
adc
outsb
adc
jmp
mov
push
pop
jl
jmp
dec
es
adc
popa
add
fwait
mov
and
or
repz
jecxz
cmp
and
popa
mov
sub
enter
stc
xchg
mov
test
pop
rcll
outsl
jl
add
or
pop
inc
adc
jmp
cmp
xor
fimuls
dec
lret
negl
stos
pusha
shrl
adc
xchg
mov
int3
jl
cmp
out
lcall
push
fsubrs
pop
mov
movsl
jo
push
clc
or
sbb
add
lret
inc
add
loope
aad
xlat
or
fwait
and
cmp
xor
add
or
mov
mov
imul
mov
xchg
pop
idivl
and
and
shll
inc
xor
add
adc
out
and
xor
lock
lock
push
out
mov
add
lods
adc
sahf
lock
xor
or
je
imul
or
inc
xor
push
inc
gs
clc
adc
out
mov
adc
sbb
pop
mov
cmp
mov
and
push
xchg
add
cwtl
movl
mov
roll
xchg
data16
xlat
orb
mov
xor
xchg
push
push
rorl
push
es
xchg
aad
and
loopne
sahf
add
insb
shlb
incl
aam
or
or
lea
or
xlat
add
push
sub
add
mov
in
add
cmpb
rolb
dec
inc
les
popf
xchg
movsb
jae
adc
mov
in
das
add
inc
push
pop
xorb
inc
add
sub
loope
push
and
aam
mov
nop
je
cmpsl
mov
lods
inc
mov
jp
or
shlb
push
pop
sbb
push
fdivr
pop
inc
out
adc
in
nop
popf
or
pop
xor
mov
sbbl
push
imul
pop
jo
pshuflw
jl
loopne
inc
ret
and
or
psadbw
mov
pop
test
js
mov
mov
inc
fwait
inc
test
adc
sbb
mov
and
loopne
in
push
fadds
ret
xchg
dec
aam
push
push
cmpsl
push
push
xchg
subl
inc
mov
mov
mov
push
nop
addr16
test
jp
inc
add
inc
dec
shrl
rolb
call
in
sbb
loopne
stc
mov
hlt
mov
inc
sbb
fcoml
push
cmp
push
and
mov
xor
xor
inc
or
or
inc
adc
lock
xchg
mov
popl
data16
or
clc
jecxz
adc
adc
shll
jecxz
and
xchg
rcll
adc
pop
sub
add
movsb
mov
sbb
push
push
fwait
clc
push
push
xchg
fiaddl
pop
out
cld
pushf
rclb
push
mov
mov
daa
inc
mov
dec
es
push
loopne
sub
pusha
cmp
xchg
das
push
adc
pop
aaa
inc
fwait
loopne
inc
aas
sbb
and
and
or
jmp
sub
fstps
mov
push
arpl
cmp
mov
inc
cmp
push
inc
pop
rorb
and
push
call
in
and
mov
add
daa
orl
inc
add
nop
inc
ret
and
dec
push
es
sub
call
push
and
and
cmpsl
ret
adc
xor
imul
pushf
mov
jne
scas
sbb
lcall
lods
les
or
adc
icebp
test
je
sarb
add
push
jmp
or
sbb
call
nop
outsb
and
jmp
add
inc
adc
jp
push
movsb
adc
adc
sub
xor
cmovl
adc
call
insl
or
jne
shlb
dec
push
and
mov
aaa
xchg
dec
insb
adc
shlb
sbb
cmovbe
fistl
pop
pop
orl
mov
sub
adc
ret
adc
int3
jae
add
daa
repz
loopne
pop
aas
cmp
pop
dec
mov
xchg
mov
rcll
and
mov
add
repnz
outsl
cmp
dec
xor
int3
test
test
stos
nop
ja
jns
mov
inc
add
je
movswl
sbb
loope
sbb
jle
add
testb
sub
add
adc
out
mov
or
cmc
push
xor
mov
mov
sbb
pop
daa
lock
and
movb
popa
sub
add
scas
out
iret
inc
imul
mov
scas
ss
fsts
mov
push
pop
repz
mov
xchg
bound
sahf
movsb
push
sbb
loopne
dec
rorl
jmp
xor
lods
rcl
test
jbe
adc
cmp
aas
push
jbe
ljmp
xchg
adc
xlat
add
popa
out
xchg
loopne
sbb
das
sarl
jle
inc
add
ret
and
or
popf
inc
cmp
and
xor
xchg
sbb
loopne
sub
pop
xor
and
or
fisttps
repnz
ret
jns
movsb
sbb
lret
or
adc
ret
mov
push
mov
test
pop
out
and
mov
mov
xor
mov
inc
inc
stc
mov
addr16
inc
pop
sub
and
rcrb
mov
or
or
mov
or
push
dec
aas
mov
in
pusha
push
repz
push
hlt
jmp
add
adc
cmp
movsl
add
je
ret
inc
jle
sub
mov
inc
in
cmp
push
aad
mov
and
mov
testb
jb
dec
add
mov
pop
aam
cmpl
mov
push
outsl
jmp
mov
add
test
mov
push
inc
cwtl
xchg
or
dec
mov
stos
lds
sbb
cs
out
lods
fld
sbb
cmc
add
out
mov
jecxz
push
call
arpl
daa
adc
add
lret
push
ret
xchg
add
mov
fs
rcll
cmp
inc
xchg
je
dec
xor
ds
fadd
dec
andl
nop
dec
sub
fimuls
xor
in
je
mov
in
adc
test
and
sbb
pushf
inc
es
xor
or
dec
push
dec
sbb
shll
xchg
and
int
arpl
test
adc
add
inc
mov
or
scas
pop
pop
add
fidivl
add
mov
and
pop
or
sub
xchg
imul
pop
push
and
dec
push
or
cmp
add
cmp
imul
stos
jge
dec
testb
outsb
add
arpl
add
sti
pop
cmc
pop
loopne
rorb
enterw
push
mov
or
dec
jmp
lret
dec
cs
enter
xchg
xor
push
pop
jecxz
dec
inc
adc
int3
out
or
or
inc
aad
dec
cmp
jmp
push
andl
mov
sbb
fcoml
pop
and
sti
fwait
shlb
sbb
cmc
imul
mov
add
mov
sub
inc
add
sbb
in
add
inc
mov
mov
lahf
sub
pop
dec
push
popa
insb
xchg
push
data16
fstps
notl
sbb
stos
nop
xchg
in
call
and
nop
dec
bound
iret
mov
or
pop
push
inc
sahf
in
pop
and
test
jns
cmp
aam
mov
aam
xor
adc
inc
dec
or
inc
pop
lods
je
push
mov
mov
pop
mov
xor
add
aaa
push
repnz
pop
je
roll
and
stc
dec
adc
rolb
add
out
or
fldenv
pop
add
rcll
test
push
mov
pushf
scas
jo
sbb
icebp
push
and
sub
or
aaa
sahf
xorl
subl
mov
jo
adcb
mov
clc
dec
fnstcw
pop
inc
pusha
and
push
jbe
pop
shrl
fisttpl
add
stos
adc
js
aas
cmp
retw
dec
daa
add
fisttps
adc
inc
mov
or
xor
cmp
lea
and
negl
sub
push
xor
xchg
int3
test
data16
jle
sbb
nop
adc
cmpl
lock
out
mov
xchg
pop
sub
cs
dec
inc
pop
xor
test
out
cmc
sbb
jne
std
js
jmp
cmp
inc
pushl
movsl
xchg
or
cs
add
insl
movsl
cltd
cmp
shrb
imul
or
outsb
or
dec
jl
pop
ljmp
jle
adc
pop
fimuls
and
ret
add
pop
push
das
pop
cmp
dec
sarl
or
aas
lds
push
pop
or
xor
dec
cmp
cmp
xchg
addl
cmpb
adc
inc
mov
pop
sbb
add
xor
icebp
jle
les
or
inc
sub
lea
push
adc
fisubrl
mov
js
dec
mov
push
mov
jecxz
push
xchg
jnp,pn
xchg
pop
sbb
scas
inc
mov
pop
push
popf
add
inc
fcomi
push
jns
pusha
pop
jb
test
xchg
xor
lods
sbb
dec
mov
or
sbb
push
mov
add
dec
sub
and
dec
arpl
sub
adc
sub
pop
outsl
fstpl
jle
mulb
push
xor
fs
js
cmpb
xor
inc
pop
je
dec
and
pop
pop
cld
nop
xorl
ret
jg
dec
dec
add
dec
loopne
or
or
or
lcall
mov
xor
and
aaa
rorl
insb
movq
add
rolb
add
add
adc
jge
nop
adc
cmp
dec
popa
lcall
fadd
adc
push
lock
stos
jne
push
or
jg
test
add
lods
adc
pop
ljmp
cmc
sbb
xor
inc
xchg
cwtl
test
inc
inc
adc
sbb
inc
cmp
sarl
outsb
or
dec
jl
dec
sbb
cpuid
push
fbstp
mov
out
popf
inc
out
cmp
xchg
add
and
sub
shlb
adc
jg,pn
xchg
xor
cmp
jp
mov
popa
cs
jge
scas
clc
sub
push
and
adc
jmp
and
rcr
jb
or
mov
pop
inc
mov
mov
or
loopne
adc
push
push
xor
fiaddl
adc
add
clc
xor
add
gs
popa
add
push
aaa
pop
inc
lds
add
dec
push
sbb
ss
jmp
add
cmpsb
or
movsl
cmp
jns
test
lea
sub
xor
lods
or
xor
jne
sti
aas
jo
bound
and
sub
xor
fldl
movsb
sub
test
pop
jecxz
jne
enter
push
or
adc
pop
or
xor
xchg
cmp
inc
aam
mov
push
and
loop
orb
mov
pop
adc
addr16
popa
dec
pop
outsl
incl
js
test
sbb
fstps
xchg
mov
in
xchg
xchg
adc
cmp
sub
cs
test
sbb
pop
das
inc
xchg
cmpl
out
inc
adc
fstl
add
mov
xchg
sbb
xchg
mov
xor
nop
das
bound
movsl
add
insb
sbb
jmp
xor
adcb
adc
add
mov
hlt
mov
insb
repnz
or
push
std
push
add
and
jmp
popa
sub
lret
jne
cmp
mov
imul
add
cmovo
pop
jo
mov
and
jmp
sbb
adc
fists
mov
nop
cwtl
cmp
mov
pop
shrl
pusha
jbe
js
push
inc
sub
popa
rol
jg
les
dec
cltd
inc
add
push
adc
xchg
pop
jae
jb
jo
cmp
xchg
ret
test
adc
divl
mov
jge
lahf
nop
lret
xchg
jge
jle
and
jns
or
pop
jle
sbb
pop
roll
ds
cwtl
mov
lret
nop
test
xor
stos
addr16
mov
jo
insl
cmp
ret
aaa
push
loope
inc
jb
push
dec
cltd
or
sub
shrb
jnp
arpl
sbb
enter
push
or
shlb
test
dec
mov
mov
pop
int3
adc
cmp
dec
sub
ret
pushf
pop
xor
cli
and
sbb
jmp
push
sbb
jo
fcomip
popa
add
inc
pop
or
xorb
dec
shlb
mov
adc
insb
popl
outsl
inc
push
fistl
pusha
add
sub
add
jne
test
ljmp
adc
jne
lea
cmpsl
mov
sarl
xor
push
xchg
inc
adc
dec
push
dec
jo
inc
or
rolb
and
mov
and
movsb
fistpl
sbb
pop
add
clc
jns
loop
or
nop
mov
sub
fs
mov
sarl
lret
or
stos
testb
aam
sub
mov
addr16
or
adc
into
lret
popa
daa
or
daa
or
lahf
and
xor
fidivrl
sbb
pop
sbb
xlat
push
lahf
fdivrs
out
xor
or
lahf
push
pop
adcl
enter
cmp
wrmsr
movb
ss
daa
and
movb
adc
cs
xor
sub
mov
pop
fdivl
xchg
inc
pusha
insb
or
adc
and
pop
add
lock
negl
cmp
das
aad
mov
and
xlat
push
pop
lret
mov
jecxz
dec
xor
inc
and
mov
xchg
cmpsl
das
mov
pop
inc
test
ret
sahf
ret
flds
xchg
mov
sbb
mov
add
cmc
lahf
das
cmp
and
mov
add
movsl
xor
xorl
pusha
push
sub
adc
push
std
cmpsb
inc
pop
push
and
mov
mov
add
pop
test
int3
test
and
mov
mov
push
daa
cmp
fwait
lea
add
or
mov
rcll
je
mov
ret
jmp
shl
xchg
movsb
inc
dec
das
test
repnz
sti
mov
hlt
in
popf
inc
push
inc
lock
and
movsb
mov
js
mov
mov
pushl
les
lret
orb
sti
nop
lds
inc
xor
dec
inc
pop
nopl
xor
insb
inc
cli
push
cltd
ret
pop
mov
pop
fstcw
or
fdivrs
inc
pop
xor
cmpb
cmp
mov
pop
xchg
jge
add
loopne
pop
or
sarb
pop
sub
lock
std
xor
push
push
adc
and
mov
jo
inc
xor
jmp
mov
mov
push
sti
dec
xor
jecxz
jge
xor
push
mov
inc
test
loop
adc
or
aaa
loope
loope
outsl
adc
inc
and
adc
or
sbb
push
add
insb
push
loopne
pop
nop
gs
ficoms
daa
adc
mov
adc
inc
xchg
or
jecxz
or
adc
push
subl
enter
push
dec
push
inc
dec
xchg
jo
adc
ret
sbb
or
imul
add
scas
lcall
inc
mov
aad
xchg
mov
sarb
add
rcl
sub
dec
scas
sub
sub
mov
rcrb
ficoms
dec
pop
aad
mov
sub
pop
clc
push
jns
inc
clc
lock
gs
pop
in
or
call
movsb
push
dec
rcl
dec
rorb
fdivrl
movsb
lret
aam
mov
jmp
pop
add
pop
mov
inc
sub
mov
fcomps
mov
mov
jmp
cmp
inc
or
movsl
xor
mov
mov
test
push
movb
or
mov
out
add
add
or
shlb
cmp
mov
push
push
jle
ljmp
popf
or
sub
ja,pn
or
stc
lods
xchg
mov
adc
mov
mov
mov
inc
sub
lret
ret
rcrl
push
repz
push
lahf
sub
mov
add
push
mov
pop
jecxz
sub
mov
clc
lea
mov
jmp
inc
and
rcll
cld
sbb
jge
adc
lds
and
push
adc
sahf
aaa
shl
das
das
or
lahf
cmp
into
mov
fdivrl
push
sti
jge
add
push
dec
add
add
test
and
js
sbb
adc
aaa
and
cwtl
ja
das
int
ret
sahf
or
aam
jno
pushf
into
adc
into
inc
dec
add
add
mov
mov
jne
sbb
dec
dec
imul
or
pop
cs
and
xchg
mov
dec
int3
or
dec
fmuls
lret
fwait
xchg
cmp
clc
sbb
aam
aam
les
jmp
xchg
jbe
lods
nop
pop
dec
mov
nop
or
add
pop
add
or
or
mov
cmp
adc
lods
jmp
aam
push
or
in
pop
push
pop
add
pop
bound
pop
test
dec
xor
mov
cmp
pmaxsw
test
mov
cmpsl
dec
add
lods
loope
enter
xor
out
repz
sub
add
push
cli
in
jl
scas
or
movsl
neg
dec
insl
sbb
imull
and
jae
or
xor
inc
loope
cmpl
inc
nop
adcl
mov
inc
loope
inc
dec
popa
sub
sahf
cmp
icebp
fmull
lcall
sub
inc
sub
dec
loopne
mov
in
dec
das
sbb
push
xchg
ja
icebp
push
ret
lret
insb
aaa
mov
outsl
add
es
inc
dec
or
mov
enter
add
cmp
xchg
jno
mov
mov
clc
xchg
sub
test
fdivrl
mov
dec
aam
hlt
add
mov
or
adc
and
xor
test
je
push
push
mov
adc
outsl
in
arpl
jnp
sbb
fisttpl
js
mov
mov
and
pop
xchg
pusha
mov
in
rcll
or
mov
loope
dec
gs
scas
test
insb
repnz
rolb
mov
xor
sbb
icebp
aam
gs
pop
ret
fcomps
add
cld
aam
lea
hlt
mov
push
fldt
jne
lea
mov
push
inc
push
insl
sub
in
mov
mov
xchg
xorb
daa
test
mov
xor
movsl
or
fstpt
ss
pop
aam
add
add
test
xchg
adc
or
jns
cmp
dec
or
add
nop
out
adc
inc
stos
dec
stos
adc
sbb
add
loopne
and
pop
or
int3
leave
mov
and
shlb
sahf
and
jg
sub
add
mov
bnd
xor
jne
ret
mov
add
dec
andl
cmp
and
jo
push
inc
sbb
push
mov
push
xchg
cvtps2pi
and
xchg
push
xchg
insl
cmp
add
popa
inc
subb
pop
test
cmp
ljmp
jnp
in
mov
gs
sub
push
mov
lock
scas
jmp
push
mov
out
or
or
adc
cmp
add
test
cmp
or
inc
incl
add
cmp
imul
adc
sbb
sub
push
add
add
scas
dec
lods
adc
sub
or
fs
push
mov
and
sbb
mov
fisttps
dec
andb
adc
xor
pop
xchg
add
fildl
xchg
ficoms
stos
adc
das
sbbl
or
addb
dec
and
adc
loope
sub
stos
adc
cmp
cmp
xor
add
dec
lods
xchg
push
enter
inc
adcb
test
xchg
push
xchg
push
fxch
add
shll
mov
cmpsl
push
adc
inc
in
stc
add
push
mov
popf
loope
sbb
xorl
add
xor
icebp
dec
add
jne
int3
sub
or
and
pop
fildl
sbb
addr16
shrl
rcl
inc
or
popa
inc
pusha
add
mov
add
add
pop
push
lea
iret
push
adc
add
stos
jns
testl
sbb
jl
addb
adc
jnp
jbe
or
popf
mov
pop
push
or
pushf
into
or
enter
cmpb
loopne
inc
adc
fiaddl
pushf
xor
mov
add
jns
inc
mov
orb
subl
pop
das
and
mov
cmp
mov
mov
pop
int
addb
mov
jmp
pushf
pop
fildl
dec
add
pop
shr
adc
inc
outsb
or
dec
pop
inc
cs
call
push
idivb
or
sub
xchg
xor
adc
imul
fst
mov
arpl
push
dec
movsl
xor
pop
leave
pop
popa
rcll
cli
pop
push
pop
test
fwait
cmp
jge
cmpl
fidivl
int3
pop
mov
jle
nop
imul
sbb
test
nop
sbb
xor
cmp
fnstsw
lret
loop
jle
cltd
shrb
mov
or
mov
or
adc
popa
and
outsb
mov
inc
xchg
test
add
and
stos
mov
mov
popa
add
sbb
inc
scas
iret
lock
rcl
inc
adc
sbb
xchg
arpl
andb
push
xchg
or
pop
or
mov
cs
in
fisubl
loopne
lret
mov
add
and
jne
push
sub
popf
add
mov
imul
sub
sbb
push
sub
addr16
add
push
and
sbb
inc
xor
sub
repnz
pop
or
scas
jmp
mov
sub
adc
sbb
push
paddsb
jg
sub
sahf
and
add
pop
mov
or
mov
xchg
add
push
push
add
push
dec
xor
sbb
je
scas
sbb
sub
adc
cmp
or
in
sbb
cmp
or
sbb
inc
jg
fistpll
jae
mov
addr16
push
mov
cltd
or
mov
jecxz
push
and
fcomps
jg
push
or
cld
add
scas
lds
insb
jno
cmp
imul
notl
ret
cwtl
popf
xor
arpl
cmp
adc
bound
xchg
movsb
cmp
cmc
ret
cmpsl
fnstcw
cmp
ja
je
pop
dec
mov
mov
sbb
mov
ret
lret
xor
rol
mov
ret
mov
mov
cmpsl
test
and
outsb
or
cmpsl
fsts
cmpsb
pop
and
push
dec
mov
or
in
add
sub
mov
aad
dec
pushf
das
add
lahf
das
xchg
add
jge
sub
fcompl
fadd
inc
das
and
jo
addb
or
fwait
les
dec
sub
into
xlat
jne
xor
push
fs
test
test
scas
rorl
andnps
add
jae
repz
adc
inc
pop
int
mov
test
jle
mov
mov
stc
fnstenv
mov
pop
aaa
sarl
fsubl
pop
inc
mov
add
xchg
test
or
push
ljmp
insl
or
sub
pop
or
andb
movsl
cmp
push
adc
shll
outsl
cmpb
push
sbb
inc
fs
or
repz
xor
push
sbb
sbb
inc
push
ss
test
inc
sar
mov
dec
xchg
adc
xor
inc
xor
in
inc
repz
xchg
adc
decb
mov
push
xchg
or
in
jbe
adc
jo
cmp
dec
cmp
int
outsl
mov
cmp
outsl
mov
ret
pop
add
push
icebp
mov
fstpl
jmp
xor
insl
adc
out
bound
pop
or
adc
xor
mov
iret
xchg
cmp
pop
or
and
or
out
jmp
push
cwtl
pop
or
sbb
adc
xor
sbb
lods
or
xor
mov
push
sub
loopne
insb
jg
insb
flds
sbb
mov
lock
sub
adc
inc
and
addr16
hlt
dec
jne
into
inc
add
push
jb
cmpb
testl
jmp
sti
and
cmp
jo
cmp
inc
jge
cs
pop
xchg
sub
das
lock
movsb
out
cli
jmp
iret
adc
lret
sahf
fs
popa
inc
cmp
lret
orb
lret
rorl
xor
adc
mov
fmuls
sbb
icebp
adc
and
xor
bound
add
adc
invd
popa
mov
aam
mov
sbb
mov
xor
shlb
add
daa
push
jno
or
add
leave
das
add
dec
int3
in
sub
and
inc
or
inc
mov
lods
pusha
fs
nop
xchg
ja
hlt
aam
xchg
aam
pop
data16
out
mov
or
cs
adc
inc
inc
cmp
arpl
xchg
fs
fiaddl
sub
cmp
push
and
fnclex
pusha
or
push
adc
mov
roll
or
dec
movsl
mov
mov
pop
pop
aam
push
add
aas
ret
cmp
dec
dec
sbb
jp
pop
test
push
jmp
inc
pop
push
adc
inc
add
fdivrs
scas
sub
mov
pusha
cltd
leave
xor
test
pop
in
int
jmp
adc
insl
fildl
rep
sti
mov
and
in
nop
or
push
push
and
je
clc
loope
fs
adc
push
xchg
sbb
dec
push
cmp
or
outsb
mov
sbb
daa
and
orb
adc
push
pop
mov
and
scas
push
and
dec
and
mov
or
shlb
and
pop
cmp
orl
jne
sub
or
cmpsb
pop
or
and
js
push
xor
or
adcb
mov
mov
out
cmp
adc
mov
adc
xchg
cmp
mov
mov
push
sbb
mov
or
fimuls
jo
sbb
sbb
inc
pusha
or
enter
push
or
shrb
lods
push
and
es
pop
jp
cmp
cmp
sub
lret
or
sbb
xchg
adc
shlb
or
andl
adc
mov
sub
fsts
es
test
andb
xor
add
add
mov
mov
or
push
out
int3
push
sub
pushf
call
xor
dec
in
cltd
out
mov
dec
cmp
jo
xchg
cmpsb
xor
stos
adc
cmp
push
sbb
sub
pop
mov
xchg
sub
cmp
inc
mov
jo
jne
mov
sbbb
add
inc
add
incl
pop
dec
insb
push
test
push
in
push
filds
push
aam
mov
xchg
orl
test
or
sbb
push
test
and
pop
aaa
or
or
mov
inc
adcl
fs
or
clc
xlat
sub
or
in
mov
call
aam
pop
int3
push
test
mov
nop
iret
add
insb
out
push
fs
xor
cmp
and
cmpsb
rorb
sub
jmp
ja
es
pop
imul
and
sub
xchg
les
xchg
hlt
xor
out
pusha
dec
or
pop
mov
mov
jp
and
mov
hlt
adc
ds
pop
pop
push
daa
fs
rcl
mov
or
inc
adc
jge
or
inc
adc
fstpl
sbb
push
out
or
sbb
adc
sbb
mov
add
int3
add
notl
roll
push
mov
xor
add
push
inc
ret
sub
jne
xchg
mov
in
ret
dec
movb
push
cwtl
loop
sbbb
add
ss
mov
fisubs
lock
cmp
push
jnp
xor
shlb
xchg
scas
or
sub
and
jmp
insb
dec
pop
and
sti
mov
jmp
push
add
mov
xchg
shrl
xchg
xchg
or
push
mov
inc
sub
sti
mov
cmp
movb
xchg
or
fnstcw
pop
pop
sbb
notl
pop
push
push
push
data16
or
inc
lcall
pop
shrb
sbb
into
push
push
cwtl
jp
or
inc
xor
inc
sub
push
mov
in
inc
loopne
mov
add
fwait
or
mov
mov
cltd
fcompl
pop
int3
orb
jmp
sbb
jl
fwait
inc
cmc
add
add
addb
ret
jge
xor
add
in
dec
stc
ja
push
lds
xchg
inc
jecxz
or
sbb
lret
sti
add
pop
or
or
sbb
aam
or
cmp
loope
addb
adc
push
mov
adc
fstpl
or
jmp
mov
sbb
or
lock
pop
mov
push
adc
or
pop
or
add
sarl
fidivl
sbb
sub
pop
cmp
push
xchg
add
mov
jmp
sub
xchg
add
dec
inc
insb
fistpll
and
addl
jno
or
in
adc
inc
test
push
cmpsl
fldl
and
sub
xor
dec
add
sub
in
mov
pop
gs
and
test
inc
add
add
mov
xchg
xchg
jg
add
int3
xor
xchg
aaa
jnp
push
cmp
jns
out
xor
mov
push
jns
mov
sarb
jg
add
mov
jb
cmp
xor
push
cmp
divb
addl
mov
mov
sub
inc
loopne
aas
adc
ja
adc
and
cmpsl
cmc
fdivrs
jg
push
pushf
adcb
pop
pop
jg
fldt
push
cmp
ss
xorb
loop
add
sbb
rorl
cmc
xor
jne
movsl
repnz
sbb
fldt
sbb
add
xchg
stc
sahf
dec
sbb
lcall
mov
or
dec
jmp
addb
push
xchg
inc
jp
addb
cmc
add
jb
mov
sub
pop
and
mov
push
sbb
pop
sbb
cmpsl
test
inc
sub
inc
in
dec
pop
or
cmp
or
lock
push
and
sub
push
daa
dec
xchg
mov
jne
popl
add
dec
adc
mov
imull
adc
aas
outsb
insl
inc
add
adc
nop
pop
push
inc
fdivs
lods
pusha
adc
xor
dec
rcll
clc
repz
test
xor
sbb
notb
push
in
inc
mov
dec
in
test
pop
mov
mov
inc
push
xchg
push
lea
bound
push
fdivs
lock
mov
pop
inc
sbb
ljmp
clc
fstl
adc
lock
jne
sub
add
mov
adc
into
aad
xchg
add
push
adc
jae
push
and
xchg
or
inc
inc
ret
pop
push
faddl
add
aaa
imul
jmp
call
and
push
jecxz
lret
mov
or
or
lods
xchg
testl
mov
in
jecxz
pop
mov
sub
negl
lret
inc
inc
pop
sub
xor
sbb
jb
inc
lcall
mov
jae
add
add
sbb
mov
add
sub
add
mov
js
lods
adc
add
mov
dec
pusha
and
fstpl
fwait
lods
mov
es
mov
and
js
insl
mov
dec
pop
adcb
mov
sub
and
add
pop
clc
mov
test
mov
mov
inc
jo
and
jnp
mov
in
ljmp
sbb
fcmovnb
inc
pop
roll
enter
jmp
push
jle
add
enter
inc
pop
pusha
in
mov
imul
add
cwtl
mov
jg
mov
adc
push
sub
ja
xchg
add
mov
push
test
push
lret
jbe
add
add
xchg
in
sbb
push
dec
pusha
insl
popa
pusha
jmp
and
xor
inc
add
push
clc
cmpsb
adc
xor
pop
mov
jge
daa
movsb
popf
stc
in
add
sub
jecxz
fimuls
adc
in
push
push
popa
sub
push
in
pop
cmp
dec
lock
call
add
ja
dec
jnp
add
add
inc
inc
and
adc
cmp
xchg
aaa
xchg
imul
sbb
inc
loope
mov
insl
bound
inc
aam
or
mov
push
push
mov
outsb
inc
pushf
sub
or
mov
cltd
and
inc
imull
cmpsb
push
dec
or
fadds
sub
xchg
dec
das
jbe
xlat
add
or
mov
pmaddwd
jb
or
dec
mov
daa
and
or
jns
adc
inc
out
push
cmp
or
imul
pop
jne
add
add
add
pushf
orl
cmpsb
icebp
pop
push
push
pop
jmp
fistpll
mov
outsl
dec
addr16
or
test
icebp
jbe
add
push
fisttpll
test
xor
pop
push
outsl
push
or
lcall
rol
push
sbb
push
fcomps
cmp
sbb
or
lods
dec
cmp
insb
imul
rcrb
sub
mov
dec
test
imul
inc
fnstsw
push
es
dec
adc
shll
pop
lock
and
xchg
cmp
push
pop
adc
in
xor
lock
dec
push
hlt
push
adc
addr16
dec
pop
sbb
or
mov
push
sub
add
jnp
push
pop
aam
dec
clc
push
pop
sbb
fs
push
js
sbb
adcl
imul
mov
add
bndldx
dec
pop
xlat
adc
mov
mov
push
mov
mov
inc
loope
mov
testl
rolb
push
xchg
enter
rcll
mov
sbb
jbe
pop
or
jae
and
movsb
out
sbb
fcoms
push
int3
fidivl
adc
fwait
jmp
pop
ret
inc
cmp
fcompl
or
and
sub
or
sahf
push
shrb
inc
sub
push
gs
mov
lea
xor
dec
xor
ja
scas
jecxz
mov
aad
add
popf
movsl
sub
das
aam
arpl
sub
adc
ret
clc
lea
mov
shll
cwtl
fstpt
sbb
xchg
pop
mov
dec
dec
push
sbb
arpl
ficompl
cmc
inc
push
jge
xor
xor
jns
dec
jno
jle
pop
jecxz
sbb
xor
or
movl
sub
roll
inc
add
inc
dec
mull
push
fildl
fmull
enter
push
test
or
cmpl
xor
mov
test
mov
inc
stos
jle
icebp
rorl
sub
mov
test
and
mov
aad
repnz
aas
jge
adc
xchg
popa
arpl
and
sbb
sbb
push
daa
pop
mov
adc
xor
sub
pop
inc
sub
andb
inc
push
and
or
xchg
xchg
pushf
jl
in
in
test
add
add
mov
mov
pop
xchg
sub
nop
lods
jo
inc
sub
hlt
adc
push
xor
popa
dec
push
push
sbb
mov
sbb
or
rcrl
push
xor
and
movsb
jns
sti
cmp
push
adc
adc
sahf
inc
xchg
sub
pop
lret
cmovl
adc
dec
mov
mov
or
jle
dec
jae
cmp
jne
pop
das
aam
ret
gs
pusha
shl
add
push
or
push
adc
add
cltd
sub
push
mov
push
sbb
loope
xor
and
push
adcl
pop
adc
orb
jge
mov
xchg
pop
mov
cmp
movsb
daa
adc
hlt
push
rclb
jle
pushf
icebp
pop
loopne
enter
push
mov
mov
add
mov
cmp
or
cmpb
sub
add
cltd
add
inc
push
mov
andl
push
mov
and
cltd
test
and
dec
inc
addr16
sbb
minps
sub
out
dec
nop
push
sbb
retw
lea
add
gs
addr16
and
mov
loopne
test
mov
or
mov
sbb
mov
outsb
mov
add
pusha
pop
adc
push
or
mov
adc
repnz
add
pop
enter
movsb
xor
test
adc
or
jb
enter
imul
push
arpl
push
iret
mov
xchg
xlat
pop
cld
je
popa
xor
daa
movsb
xor
fadds
lock
aam
sbb
and
sbb
sbb
adc
xor
mov
or
test
or
jne
jo
xor
add
adc
rcr
mov
add
add
cmpsb
in
clc
push
std
xchg
xchg
mov
loopne
daa
scas
jg
push
pusha
add
fwait
pop
adc
jecxz
insb
pusha
in
leave
adc
and
or
xchg
xlat
and
add
lock
insl
ja
es
ss
es
pop
test
adc
and
push
mov
cs
and
adc
and
leave
mov
xchg
xlat
sbb
lock
push
in
test
jle
inc
pop
xor
pop
and
dec
dec
xor
xor
pop
aam
and
pop
aas
mov
test
shlb
pop
adc
push
cmpsb
inc
adc
sub
xor
loope
insl
je
cltd
add
jae
ja
add
mov
test
pop
ds
cmp
pusha
jno
mov
xlat
sub
cmp
mov
data16
sub
xor
lods
aas
cltd
pop
jmp
sbb
or
add
inc
lods
mov
inc
pop
fadds
popa
sub
imul
or
inc
popa
push
push
jmp
xor
js
movsl
fcom
add
and
pop
add
inc
aaa
shrl
xchg
sbb
pushf
cmp
mov
add
inc
pusha
add
ja
push
push
test
loope
dec
lret
pop
or
and
pusha
cmp
ss
adcb
pop
pop
jns
rcll
inc
push
jl
or
mov
jbe
in
sbb
xor
jmp
push
jns
cmp
test
mov
repnz
sbb
cmpsb
push
xorb
jmp
push
and
sbb
cmc
mov
jl
jns
sub
add
jne
gs
xor
sbb
iret
aaa
dec
in
je
xlat
push
and
outsb
pop
imul
mov
mov
pop
pop
push
or
push
dec
jne
pop
push
in
add
test
cmp
xor
and
adc
push
les
add
mov
lock
inc
add
popf
hlt
mov
sbb
adc
test
mov
mov
jne
dec
fwait
sub
enter
movsl
adc
hlt
push
les
xor
sbb
and
or
dec
adc
js
and
fiaddl
push
cli
leave
lcall
sub
jp
sbb
or
mov
mov
cmp
and
add
stos
int3
add
insl
insb
sbb
shl
cmc
lock
mov
and
inc
add
push
pop
pusha
mov
inc
add
dec
insb
push
or
sbb
dec
push
or
pushf
negl
pop
inc
sub
adc
mov
adc
sbb
popa
pop
das
sbb
pop
and
inc
xor
push
xor
rclb
inc
and
les
leave
cmp
mulb
push
mov
and
sbb
repnz
lahf
jne
repnz
inc
loopne
in
xchg
lods
repnz
call
lods
mov
adc
or
jmp
add
and
loopne
inc
js
lea
jmp
push
andl
xor
cld
testl
mov
das
add
dec
loop
mov
push
sbb
or
jbe
leave
jge
cmp
daa
jg
dec
ljmp
or
aam
ret
or
orb
push
mov
mov
inc
and
mov
dec
push
push
or
bound
fisttpll
pop
push
cmp
inc
mov
inc
jge
test
xlat
inc
adc
push
add
xchg
stos
lea
jb
cli
jno
and
mov
daa
mov
test
repz
adc
pusha
adc
shlb
hlt
mov
dec
fstpt
or
and
push
popa
adc
js
jnp
loopne
jmp
adc
push
mov
pop
sub
mov
cmp
rolb
mov
xchg
movsb
lcall
call
in
push
cwtl
js
js
xchg
cld
push
loop
inc
push
inc
sbb
lock
clc
push
ret
xor
sarl
cltd
test
add
cltd
dec
mov
jns
fwait
ss
and
insb
in
xchg
push
sub
cmp
push
js
sbb
andb
xchg
xchg
test
enter
dec
xchg
sbb
nop
or
in
xor
push
mov
icebp
dec
dec
push
inc
push
dec
add
inc
add
insl
imul
sub
push
gs
dec
sbb
mov
inc
popf
nop
flds
dec
push
jne
das
push
lea
dec
lods
mov
scas
push
insl
jo
cmpsb
mov
jmp
inc
in
inc
out
xor
inc
insb
add
dec
jae
pop
test
sub
lcall
jno
cld
ret
cmp
cmc
sbb
push
xchg
data16
add
dec
lods
mull
pop
add
mov
push
imul
lods
jle
je
mov
push
mov
jno
test
fwait
sbb
pop
push
xchg
dec
lods
push
mov
popa
cmpsl
sbb
push
adc
and
dec
inc
sbb
xor
or
das
loop
ret
or
jmp
dec
cli
mov
pop
xlat
cmp
add
orb
nop
pop
cmp
ja
pop
sub
sub
mov
xchg
pop
push
mov
and
repz
xor
pusha
enter
or
mov
mov
and
nop
dec
mov
push
lock
xchg
test
es
mov
dec
fdivl
cmpsb
mov
jo
push
xacquire
xor
xchg
icebp
xchg
xor
xchg
mov
push
mov
and
lea
test
jnp
adc
adc
mov
jns
test
fs
mov
xchg
mov
sub
add
enter
in
push
sub
mov
aam
shrb
mov
push
dec
xor
js
push
repnz
jbe
push
push
or
fsubs
push
lahf
aas
lock
and
add
or
sbb
jo
das
scas
mov
jae
push
ja
inc
jp
inc
outsb
pop
xor
inc
lods
pop
fbld
push
xchg
mov
push
and
test
xorb
jg
test
xchg
or
out
cmp
xor
jae
icebp
inc
ds
sbb
movsb
pop
sbb
cmpsl
dec
pop
jb
fldenv
xchg
pusha
inc
dec
inc
nop
xchg
sbb
arpl
nop
mov
rclb
adc
pop
loop
add
pusha
mov
pop
cmp
xor
adc
dec
sbb
mov
inc
pop
push
fcmovbe
out
xchg
jo
pushf
push
subb
push
adc
pop
and
mov
pop
test
shlb
push
aam
xchg
mov
outsb
and
push
sub
add
lcall
jl
cmp
ja
inc
cmp
add
aad
ror
lods
daa
adc
xchg
pop
in
incb
push
scas
mov
adc
fcompl
fisubs
sbb
sub
sti
xorb
decl
sbb
push
pushf
je
in
es
add
push
stos
sbb
sub
and
add
mulb
test
xchg
mov
xchg
pop
and
in
and
or
add
inc
or
pop
ret
bound
or
movb
or
push
in
fsubl
mov
insl
sbb
push
cmp
pop
sbb
sub
pop
test
dec
push
jmp
add
popf
inc
xor
dec
add
fwait
ds
outsb
dec
mov
lahf
jo
or
mov
adc
inc
sbb
shrd
inc
xchg
out
and
inc
sbb
xchg
mov
rorl
daa
pop
xchg
mov
es
roll
pusha
fs
insb
jo
js
mov
add
mov
or
sub
push
push
pop
sbb
adc
and
or
popf
nop
xor
mov
xor
rcrb
xor
pop
push
rorb
add
das
push
inc
and
add
push
mov
mov
pushf
sub
jp
or
xchg
dec
inc
inc
xor
nop
das
sar
push
mov
lea
inc
testb
mov
push
dec
or
and
fstps
in
sbb
and
sbb
xchg
pop
rolb
out
and
push
xor
add
or
mov
push
int3
add
push
and
inc
shlb
cmpsl
push
inc
lds
inc
aaa
dec
add
pop
insb
scas
lock
leave
and
test
add
xor
imull
and
iret
xor
dec
sbb
dec
arpl
adc
push
hlt
popl
fbstp
jmp
out
inc
xor
loope
pop
mov
ja
jbe
mov
push
adcb
xchg
decb
test
and
lret
add
fs
pusha
lds
loopne
dec
sbb
dec
cmpsl
xor
adc
mov
inc
xlat
xor
pop
icebp
push
inc
or
or
cmpsl
cmp
popa
sub
in
xchg
mov
adc
and
outsb
sarl
jne
jle
lcall
cmp
sbb
adc
jl
lods
inc
aaa
sub
push
sahf
add
je
inc
pop
aam
insl
test
push
inc
pop
or
dec
sub
add
adc
fdivl
inc
scas
mov
xchg
mov
sbbb
sub
sahf
adc
mov
adc
xchg
mov
push
cmovbe
pop
std
or
mov
fcmovne
mov
lret
and
aas
xor
sbb
sub
cmp
js
sbb
push
pusha
mov
int3
mov
or
sub
push
gs
add
fistpl
lcall
pop
fsubs
adc
pusha
shrl
dec
aas
push
push
push
pop
xchg
lea
lds
daa
aam
movsb
push
pop
xchg
hlt
mov
xchg
sub
add
andb
add
inc
ds
or
or
xlat
push
inc
notb
and
push
bound
xorl
sub
daa
inc
add
test
cld
push
fs
jnp
adc
cmp
push
js
imul
adc
jle
or
js
loopne
mov
mov
dec
pop
jae
add
push
sti
mov
mov
lret
mov
cmp
cmp
push
dec
jmp
sub
inc
mov
adc
lret
and
aaa
xchg
add
and
sti
daa
push
aas
add
adc
outsb
push
rorl
mulb
inc
fs
fildll
movsl
je
pop
mov
lods
rcl
push
out
push
or
xor
cmp
add
test
pushf
push
pop
insb
shrb
mov
cmp
xchg
adc
dec
jne
test
test
loope
jnp
test
movsb
add
loop
inc
pop
cmp
pop
loopne
je
lds
call
and
popa
rol
js
and
xor
lea
mov
push
sbb
je
cmp
mov
jecxz
or
dec
mov
ret
mov
or
pop
sub
inc
ljmp
mov
push
add
pop
ret
test
mov
call
int
mov
xor
dec
cmp
je
test
test
je
leave
add
inc
aas
jl
lcall
and
adc
inc
jne
add
aam
jns
mov
jecxz
les
xor
mov
jo
jg
mov
jmp
sub
push
test
mov
mov
pop
mov
jae
in
out
rorl
pop
mov
xchg
test
jne
and
inc
mov
mov
hlt
sahf
push
pop
push
add
mov
out
rol
test
mov
jl
mov
sbb
insb
sub
cmpb
jns
jbe
xchg
jg
sbb
add
loopne
push
mov
or
imul
pop
jne
sarl
push
cmp
or
sbb
jmp
adc
dec
nop
icebp
mov
adc
popa
lret
and
push
pop
inc
or
mov
dec
ret
pop
daa
call
sub
adc
jmp
jns
add
movsb
xchg
add
jg
xor
pop
mov
pop
int3
and
jno
sbb
das
lds
pop
jmp
xor
jbe
fs
and
adc
add
jp
push
out
insl
pusha
inc
mov
fcoml
in
dec
inc
test
outsb
mov
push
inc
lret
mov
lret
mov
fs
xor
pop
sbb
cmp
enter
insb
inc
mov
lds
adc
add
lods
dec
imul
ss
xor
daa
adcl
and
lock
pop
je
dec
dec
or
sbb
test
je
fs
gs
fistpll
cmp
aaa
out
mov
or
inc
lods
lahf
sbb
xchg
out
xorl
dec
out
sbb
ret
shll
add
mov
dec
popf
addb
dec
sbb
enter
dec
leave
cmpsl
js
push
sub
dec
mov
scas
popa
jge
in
push
push
xor
jge
xchg
popa
sub
and
xchg
cld
loope
iret
popa
test
movb
fstl
and
lds
jo
loope
inc
je
dec
movsb
push
sbb
mov
cmpsl
pop
add
test
bts
push
add
xor
call
mov
mov
xor
or
dec
xchg
cwtl
add
jecxz
addb
loopne
add
and
sbb
outsb
aaa
sub
lcall
lock
ds
dec
push
mov
cwtl
pop
clc
mov
shlb
sub
fld
aam
movsb
mov
mov
jecxz
aam
mov
out
mov
iret
sub
clc
cwtl
test
jae
daa
rcrb
xchg
xchg
into
out
push
dec
mov
sahf
or
mov
cltd
loop
fidivl
clc
push
add
icebp
or
insl
adc
push
jecxz
mulb
out
pop
push
cmp
adc
sbb
mov
mov
jae
push
push
add
pop
or
inc
sbb
or
fisttpll
stos
push
xor
pushf
jecxz
xchg
add
mov
test
sarl
mov
lock
mov
and
daa
mov
sti
pop
jb
mov
lock
or
dec
jl
sbb
mov
xchg
push
mov
jns
push
in
popa
cmpb
add
iret
pop
mov
cmp
sub
sbb
mov
int3
jne
scas
jl
lods
pop
xchg
jne
lret
push
xchg
or
mov
inc
and
stos
pop
ret
jae
and
rcrb
sbb
cmp
dec
add
jecxz
inc
mov
fiadds
sbb
xchg
imul
xor
dec
icebp
test
pushf
or
inc
and
je
mov
xor
loope
sub
rcl
loopne
cli
popf
sti
cmpl
cs
test
push
pop
push
push
aam
push
ljmp
das
lods
fwait
xchg
inc
cltd
push
loopne
bound
lods
add
xor
push
pop
aaa
xorb
inc
and
and
sarb
sbb
pop
mov
push
inc
inc
shrl
push
in
cmp
mov
repz
aad
lahf
mov
adc
inc
or
push
sbbb
cwtl
xchg
dec
loopne
lea
adc
in
sub
mov
push
inc
and
sahf
sub
les
push
stos
pop
jb
jle
adc
xor
cmpsb
sub
or
sub
sahf
ja
loopne
adc
add
nop
add
sbb
in
adc
in
stos
push
push
in
or
test
hlt
xchg
hlt
scas
bnd
movsb
push
test
jo
inc
repz
scas
stos
test
mov
sbb
cmp
in
jl
or
jne
negl
in
push
in
mov
pop
jbe
sbb
pushf
pushf
mov
popa
adc
add
mov
icebp
fisubrs
sti
cmp
rcrb
push
ret
sbb
or
bound
out
ret
sahf
aas
in
xchg
insl
ret
mov
iret
add
mov
les
inc
or
mov
cmc
pop
test
cmp
stos
xor
or
jmp
sub
outsb
mov
push
mov
adc
insl
cmp
sub
dec
loope
sbb
loopne
movsl
icebp
cmp
aas
and
arpl
xchg
lods
cmpsl
outsl
adc
nop
pop
pop
push
out
mov
rolb
inc
cmp
cmova
sub
sbb
shll
clc
loope
pop
sbb
mov
sbb
adc
ja
lret
add
int3
subb
fmuls
inc
rcrb
mov
push
test
inc
pop
vptestnmd
jns
mov
bound
xchg
xor
pop
jb
mov
es
pop
add
xor
and
popa
jmp
xor
push
add
or
and
pop
or
or
je
sub
inc
pop
jae
push
cltd
rclb
mov
pop
add
ja
cltd
rclb
inc
or
scas
movl
je
pop
jne
ret
push
cltd
movsb
sbb
test
adc
je
dec
sbb
push
rorb
cmp
je
fnsave
dec
adc
pusha
hlt
loope
mov
loopne
mov
inc
mov
lds
jl
pusha
jne
mov
leave
popf
es
xchg
setg
xchg
or
add
or
fnstsw
cmp
pop
cmpl
jmp
sbb
pop
cmp
out
jmp
xor
test
movsb
or
inc
sub
scas
dec
shll
or
add
lock
js
xor
pop
outsb
inc
cmp
cwtl
mov
mov
imul
nop
mov
cs
push
in
cmp
ret
sub
or
xchg
arpl
ss
rclb
pop
pop
jno
call
loopne
pushl
rcpps
dec
xor
cld
push
mov
sbb
sbb
push
dec
add
addb
xlat
scas
or
int3
inc
clc
lods
mov
loope
push
jno
rolb
bound
rcr
mov
mov
dec
in
arpl
dec
in
xlat
jno
sbb
push
dec
inc
pop
jmp
adc
aas
xor
cmp
mov
dec
mov
mov
test
xchg
xchg
push
add
in
sbb
addr16
lods
or
add
push
inc
hlt
nop
sub
lods
add
lods
fiaddl
enter
mov
mov
add
xor
inc
dec
mov
jns
or
in
xchg
push
out
sub
popa
mov
test
mov
jne
dec
sti
addb
jne
dec
cmp
pop
inc
jb
es
or
xchg
or
test
dec
xchg
insl
bound
add
pop
nop
lock
mov
cmpb
jae
inc
add
mov
fs
int
je
leave
int
push
lock
ret
ret
popa
mov
rcrb
sbb
and
repnz
call
and
or
sbbl
xlat
cmp
jne
cmpsb
dec
push
push
dec
dec
inc
add
test
movsb
add
pushf
jnp
inc
fstpl
mov
fisttpl
mov
xor
xorb
push
push
sbb
in
mov
cmp
push
sbb
mov
dec
pop
cmp
ficompl
sub
adc
pusha
or
test
jo
in
jmp
outsl
xchg
mov
or
addb
inc
lods
in
pop
leave
mov
pop
nopl
jno
shl
loope
mov
incl
ret
push
ds
ljmp
jle
decl
cmpb
movb
add
or
lcall
addb
add
pop
mov
cwtl
test
cmp
sub
inc
sbb
mov
adc
pop
or
or
lret
adc
and
jne
or
imul
mov
mov
jne
inc
pop
or
jb
mov
int
add
or
popa
fs
enter
or
jg
dec
pop
add
push
bound
insb
imul
into
push
test
daa
adc
aam
bound
pop
inc
test
xchg
xchg
inc
and
adc
movsl
rorl
int
mov
aam
adc
sbb
jns
arpl
dec
sub
test
inc
icebp
shll
out
adc
addb
adc
add
push
sub
sub
fiadds
adc
push
jno
dec
in
inc
insb
and
jne
or
and
jne
inc
adc
sub
gs
inc
mov
mov
or
in
fbstp
adc
mov
rcl
int
pop
repnz
inc
in
roll
push
call
test
lfs
and
ss
cmpsb
imul
sub
fisubl
and
push
sub
dec
roll
enter
pmullw
push
movl
out
data16
rcrb
sbb
mov
cmp
add
rcr
or
pop
std
mov
push
adc
pop
pop
cs
lret
adc
xor
mov
testl
xor
inc
push
xlat
pop
pop
ds
sti
pusha
je
clc
and
cli
pop
test
stos
mov
push
xor
repz
sbb
adc
mov
jnp
enter
inc
add
or
cmp
test
push
popl
ds
pop
imul
or
dec
cmp
push
push
mov
test
rcr
mov
into
sub
adc
in
add
cmp
inc
sbb
mov
jge
test
cld
ret
or
inc
cmp
pusha
dec
sarl
xor
add
sbb
or
or
or
mov
adc
xchg
cmp
add
or
lret
cmp
push
add
pop
pop
xchg
or
insb
fisubl
push
xchg
test
adc
icebp
or
jmp
xor
push
pushf
add
adc
mov
jl
cmp
cmp
wrmsr
movsl
jae
sub
lods
jecxz
mov
sbb
xor
cmpsb
sbb
lods
cli
adc
or
push
jnp
in
sbb
adc
dec
add
sbb
add
ds
sub
out
add
mov
jae
lock
and
push
sbb
bound
scas
adc
inc
jno
loop
movsb
rclb
mov
test
sub
dec
rcrl
pop
and
mov
mov
stos
es
test
ret
daa
aad
xlat
mov
push
sbb
pop
adc
js
rolb
cs
fiadds
lods
push
pop
cwtl
imull
pop
clc
sysret
cmp
dec
sub
rol
push
xlat
push
daa
and
push
xor
roll
adc
popa
nop
add
xor
pushf
cs
stos
filds
add
lock
loopne
mov
fs
leave
call
mov
add
outsb
rcr
add
cmpsb
and
or
sbb
or
in
cmp
faddl
dec
dec
repz
add
add
or
add
and
adc
add
mov
lret
dec
or
inc
dec
or
mov
jo
fldcw
jnp
into
xor
aaa
cs
or
icebp
inc
js
rolb
cmpsb
arpl
dec
pop
aaa
shrb
or
popf
scas
lock
cmp
out
andps
pop
inc
push
loopne
ljmp
cmp
push
jo
xchg
cmpsb
outsb
insb
and
add
xchg
adc
bound
rcll
lahf
mov
js
or
or
je
insl
mov
call
xor
xchg
add
lods
leave
and
sub
mov
cltd
test
mov
dec
fnsave
daa
sbb
aaa
xor
sbb
int
inc
ja
fbld
iret
push
push
add
ss
pop
int3
js
ljmp
movsl
call
je
sbb
or
and
in
adc
adc
inc
pusha
daa
pusha
and
mov
or
adc
cmp
or
cwtl
and
test
mov
sbb
nop
and
xor
cltd
mull
movl
push
lods
cmp
mov
or
inc
pop
sbb
or
rcrb
ret
inc
jo
adc
jo
int
dec
out
inc
aas
mov
push
pop
shlb
es
inc
push
out
in
cltd
and
cwtl
xlat
movsb
enter
ds
add
les
repnz
insb
dec
and
and
pushl
xor
xor
ss
cmp
xor
inc
imul
dec
dec
dec
dec
dec
dec
dec
dec
and
push
xchg
ss
push
push
pop
pop
pop
push
dec
push
dec
sub
jno
xlat
push
loop
adc
inc
lods
push
push
fwait
sub
dec
pop
js
push
aam
mov
sbb
xchg
xor
sqrtps
pop
sub
and
in
testb
fcmovbe
pop
ja
sti
and
add
outsb
inc
sbb
orb
push
jo
mov
js
imul
shlb
roll
ret
xchg
pop
push
xor
push
push
dec
sbb
mov
cmp
mov
int
pop
adc
mov
jge
add
pop
xchg
test
pushw
or
dec
mov
sti
jle
xchg
push
xchg
jge
lret
imul
aas
or
sarb
pop
fisubrs
sbb
pop
shrl
and
cmp
in
add
and
orl
imul
and
xor
xchg
gs
push
inc
inc
inc
dec
nop
into
xor
pusha
sub
popa
xchg
jne
sti
dec
mov
xor
jl
pop
xchg
xor
lds
js
aas
lds
sub
xchg
or
mov
or
andb
adc
pop
xchg
xor
push
movb
icebp
hlt
mov
inc
mov
xorb
cvtps2pd
cmp
sbb
iret
or
and
ljmpw
push
add
pop
xor
clc
les
iret
fiadds
mov
in
pushl
cmp
dec
shlb
pop
or
out
out
mov
call
iret
pusha
inc
ds
xchg
mov
jmp
lods
xlat
pop
add
sub
mov
sub
popa
xchg
and
sti
jmp
xlat
insl
adc
add
or
in
fwait
mov
mov
dec
sub
imul
mov
and
cmp
pop
aas
fwait
test
popa
test
push
cmp
int
lcall
ja
sbb
or
mov
jne
mov
add
mov
fdivrl
add
mov
ret
sub
inc
add
hlt
mov
shll
cmp
xlat
clc
lock
mov
insl
stc
lock
mov
ljmp
adcb
pop
jmp
cmpsb
xchg
andb
jle
arpl
es
sub
push
mov
outsb
sub
icebp
cmp
insl
inc
stos
jmp
xorb
je
mov
ljmp
in
test
lcall
pop
pop
enter
pushl
ss
adc
mov
dec
jecxz
adc
jg
hlt
dec
adc
inc
sub
mull
inc
lods
adc
std
daa
mov
aad
pop
jno
push
in
leave
xchg
subb
mov
mov
cmp
insl
jl
add
clc
inc
shrb
dec
movsb
sbb
inc
imul
mov
cmp
push
push
loopne
sub
sub
aaa
popa
xlat
push
inc
pop
enter
push
out
shrb
das
cmpb
dec
lcall
pop
in
cmp
mov
aas
cmp
fistps
cmp
pop
or
loopne
mov
imul
add
dec
pop
ds
mov
mov
outsl
js
in
js
cmp
push
add
inc
and
mov
mov
sbb
or
divb
or
jo
call
or
adc
aas
cmp
fcom
push
in
xchg
adc
sub
inc
in
xchg
push
mov
dec
lcall
dec
pusha
shlb
lahf
fnstcw
add
cmp
add
sar
cmp
ds
add
xchg
icebp
js
sbb
imul
mov
lahf
ud1
and
and
je
or
jne
jmp
in
mov
dec
jg
cmpl
adc
test
mov
push
xor
outsb
pop
inc
push
vmread
push
data16
sbbl
add
mov
mov
cmp
or
jbe
rorb
popf
rolb
cmp
jnp
mov
adc
adc
xor
sbb
fucomi
dec
sub
pusha
dec
jae
cmp
inc
insb
push
popf
fs
movsl
lock
or
movsb
pusha
xchg
mov
fdivrs
stos
leave
pusha
dec
xchg
dec
pop
mulb
sarb
addb
movl
inc
jl
lret
aas
jno
cwtl
mov
cmpb
and
sbb
dec
ss
hlt
cld
dec
imul
imul
and
xor
and
adc
jno
mov
sbb
sub
ljmp
addr16
leave
mov
or
je
je
add
testl
jmp
ret
lods
or
xor
pop
cmp
push
iret
loopne
roll
pop
xlat
cmpsb
and
or
sub
xchg
jmp
or
cmp
xor
or
loope
push
imul
pushf
sysenter
test
adc
sti
addl
mov
pop
sbb
lock
adc
insl
test
into
adc
pop
mov
pop
outsl
adcb
adc
jno
pop
xor
sub
adc
mov
sub
add
rolb
mov
dec
lods
sbbb
pop
jo
mov
mov
lock
adc
sbb
pop
adc
aam
xor
or
call
push
or
pop
in
add
mov
lods
mov
xchg
add
mov
fmuls
lods
notb
and
mov
ret
add
ds
sbb
ret
sbb
mov
jo
dec
adc
mov
inc
mov
inc
sbb
jbe
les
adc
push
push
je
push
or
mov
aaa
call
inc
cli
in
jne
lahf
add
ja
rorb
and
mov
pusha
scas
stc
or
negb
daa
push
inc
js
andl
scas
xor
pop
pop
mov
jg
js
push
aas
imul
mov
and
pop
pushf
inc
addb
jp
fiaddl
outsb
adc
bound
jp
das
mov
cmp
inc
cmp
jecxz
and
cmp
jae
mov
bound
mov
or
mov
add
clc
add
movsl
push
xor
xchg
dec
les
icebp
shrb
or
enter
testl
lds
add
das
pusha
sub
out
mov
mov
sti
hlt
fiaddl
or
sub
ljmp
sub
nop
sbbb
les
mov
sbb
clc
mov
repz
inc
fdivrl
out
incl
jne
and
dec
add
loopne
std
sub
and
add
dec
add
mov
icebp
movl
cmpsl
icebp
jge
cmp
jne
push
js
pop
je
push
pop
rolb
fldl
sbb
insb
frstor
xor
jmp
mov
inc
call
ss
push
ja
cmpsb
mov
lret
sbb
int3
into
jmp
mov
jle
sbb
jnp
and
dec
add
clc
outsb
mulb
les
flds
lcall
jne
fiaddl
pushf
inc
jge
or
int
aaa
gs
push
xor
pusha
js
inc
mov
subl
and
mov
jbe
popf
adc
cwtl
out
and
jb
add
fadd
or
faddl
dec
and
xchg
shlb
icebp
scas
xchg
cld
mov
dec
add
push
mov
mov
ret
mov
nop
pop
dec
repnz
dec
je
outsb
fildll
imulb
int
cmp
bound
scas
and
mov
sbb
mov
xchg
pop
push
xlat
or
fdivrs
fs
push
push
jmp
inc
cmpl
inc
iret
insl
pop
aad
dec
cmp
pop
adc
mov
pushf
and
cmp
data16
imul
pop
das
loopne
xor
in
cmp
mov
std
push
inc
inc
adc
mov
xchg
or
imul
rolb
mov
cltd
pop
inc
outsl
jle
sbb
xor
and
mov
loop
out
lds
push
sbb
aaa
push
shr
test
xor
fwait
add
enter
retw
repnz
in
cmc
mov
add
sub
and
push
nop
mov
shlb
hlt
jnp
inc
in
push
push
subl
mov
arpl
and
movsb
push
mov
enter
or
mov
and
popf
imul
addr16
orb
dec
insb
jne
nop
sub
lock
sub
dec
cwtl
adc
mov
dec
dec
lcall
or
inc
xor
or
mov
xchg
aaa
pop
push
push
inc
popf
int
ret
cmp
dec
icebp
push
fsubrs
mov
imul
ds
fwait
loope
js
imul
jl
clc
adc
push
xor
ret
dec
shrl
add
inc
scas
mov
clc
ja
push
or
dec
or
sub
sub
push
add
inc
push
adc
addr16
clc
pop
lock
shll
es
aad
nop
movsl
xchg
push
sub
out
pop
lods
loop
pushf
mov
test
push
mov
movsb
jl
arpl
push
test
push
lock
lds
pop
or
sbb
mov
mov
xor
into
hlt
cmp
hlt
hlt
pop
pop
sbb
inc
sub
sub
fiaddl
movsb
cmp
repz
add
cmc
xchg
or
pop
jns
inc
push
mov
sbb
lods
pusha
adc
xor
aad
leavew
lock
rorb
or
cld
add
jp
fistpl
xor
pop
fildll
push
adc
sbbb
dec
dec
add
lret
cmp
outsl
lea
or
add
adc
test
repz
jo
add
jge
aaa
shll
arpl
push
imul
xor
jmp
push
sbb
fmuls
imul
xor
mov
nop
xchg
inc
cs
data16
fwait
loopne
ret
call
dec
fdivrl
adc
enter
pushf
and
push
pushf
fwait
sbb
add
das
add
or
pop
jb
dec
loopne
clc
cwtl
push
adc
fisttpl
and
roll
add
xchg
pushf
or
add
sub
jbe
xor
enter
rolb
adc
jmp
lock
out
repz
lock
sub
sbb
aam
addr16
inc
sub
cmp
enter
adc
loopne
popa
in
call
lds
inc
sbb
rolb
popl
test
test
inc
out
and
dec
pcmpgtb
add
inc
cs
and
call
in
jl
xor
mov
push
push
insl
imul
inc
xor
lods
pushf
mov
clc
sub
adc
nop
jmp
les
cltd
xor
pop
dec
push
inc
enter
clc
xchg
adc
and
mov
sbb
mov
dec
xorb
add
aam
clc
arpl
shrb
pop
xor
push
push
pop
pop
clc
push
enter
sbb
in
lock
call
test
add
sbb
or
inc
or
adc
out
addb
loopne
adc
mov
dec
loopne
adc
inc
dec
addr16
inc
enter
out
add
sbb
add
fistps
xlat
pusha
mov
stos
add
in
shl
mov
addl
movsb
test
mov
mov
cmp
mov
add
inc
dec
fwait
jae
xchg
cmp
add
inc
jns
pusha
into
je
rorb
push
je
in
push
sbb
cmovs
add
loopne
stos
mov
aaa
aas
mov
inc
push
fsubrs
xor
insb
push
je
or
addb
pusha
inc
or
pop
xchg
push
sbbl
and
adc
add
pop
pop
or
inc
sub
lret
push
fs
xor
jp
rep
pop
jl
or
adc
xor
rorb
mov
sbb
test
push
fwait
inc
testb
pop
dec
xorl
sbb
xchg
gs
push
push
xchg
sbb
sub
dec
xchg
dec
xlat
and
add
cwtl
cld
outsl
dec
popa
sbb
push
repz
xor
or
test
loopne
mov
cs
mov
loope
push
arpl
cmp
imul
adc
bound
push
inc
inc
incl
xchg
inc
call
mov
mov
inc
push
mov
jnp
sbb
add
mov
jmp
dec
dec
es
fnsave
jmp
inc
sbb
adc
xor
push
or
aad
inc
fs
es
lret
insb
or
add
mov
xchg
cltd
push
test
into
std
mov
gs
add
aaa
rol
in
ja
dec
sbb
inc
mov
cmpsl
int
in
mov
xor
and
and
push
insl
push
and
push
add
xchg
push
mov
xchg
add
cmpsb
and
lock
rcll
aas
pop
incb
add
and
adc
sub
sbb
data16
fcoml
sarb
dec
xchg
add
inc
sub
test
dec
es
and
loope
add
push
add
inc
ret
dec
adc
cmp
sub
subb
cmp
xor
insl
fs
decb
dec
jae
pop
jp
aas
in
inc
cmpsb
fsubrs
and
mov
sub
sahf
fdivrs
mov
or
pop
inc
js
je
addl
ret
and
pop
adc
in
mov
pop
pop
cwtl
out
jle
mov
stos
insb
jno
filds
cmpsl
cmp
pop
pop
les
mov
in
jo
or
adc
arpl
inc
enter
add
adcl
fsubrp
test
xor
aad
call
mov
aam
pop
push
divl
pmulhuw
inc
mov
sbb
mov
pop
xor
dec
loopne
test
bound
test
daa
pop
out
sub
shll
mov
mov
pop
fistpll
ds
inc
pop
push
inc
orb
cmpb
leave
outsl
push
fdivs
inc
loopne
mov
subps
and
sub
incb
call
dec
loop
adc
mov
cmp
int3
lds
imul
stos
and
popf
sbb
das
data16
pop
in
pop
cmp
xor
shlb
push
lret
fisttpl
add
lret
jge
mov
push
negl
scas
pop
movb
mov
sbb
nop
das
jne
je
dec
mov
push
dec
pop
js
subps
xchg
sbb
aad
push
xchg
imul
dec
fs
push
push
repz
clc
adc
xor
data16
push
ljmp
pop
mov
pop
lea
dec
bound
cmpsl
adc
push
and
mov
mov
fsubs
xor
cmpsl
aad
outsb
xchg
or
out
ds
imul
push
cmp
gs
fstps
lods
push
xchg
arpl
outsl
imul
push
xor
pop
xor
push
mov
xchg
sub
lahf
and
or
and
xchg
pop
jmp
and
dec
jb
popf
push
arpl
inc
lods
inc
push
and
call
and
and
inc
je
or
ss
adc
push
mov
dec
icebp
sub
dec
gs
sbb
or
pop
ret
and
push
in
loopne
xorl
adcb
je
and
outsb
xchg
xchg
ljmp
fdivs
adc
push
adc
sbb
or
ds
jmp
jmp
out
add
mov
sub
dec
or
push
aas
jp
aas
inc
jmp
mov
in
push
and
inc
dec
push
cmp
inc
clc
sti
inc
adc
addr16
inc
dec
ljmp
ja
mov
push
cmpsb
aad
in
pop
mov
lods
out
sbb
lea
out
cmpl
loop
ret
loope
nop
add
int
es
mov
enter
clc
jbe
fnstcw
push
shrb
push
jbe
lret
xlat
dec
negl
out
jge
lret
fidivrs
push
cmp
cmp
adc
insb
pop
pop
movsb
lret
outsl
sub
je
int
mov
mov
mov
test
in
pop
dec
inc
in
mov
daa
daa
aas
daa
mov
mov
mov
adc
fcmovne
ja
push
into
movsb
sbb
popa
xlat
push
and
dec
fcompl
pop
mov
inc
pop
jb
inc
cmp
jbe
movsl
aas
sahf
lock
insb
jge
inc
inc
xchg
adc
in
icebp
shlb
cmp
push
push
xor
cmpl
pop
and
lcall
orl
dec
fadds
and
dec
xchg
cmp
adc
mov
cmovns
outsb
inc
xchg
subl
sbb
sub
xchg
inc
sub
dec
inc
or
cwtl
add
pop
je
inc
add
or
sbb
push
pop
adc
inc
xchg
mov
ds
xor
sbb
adc
bound
movsl
cltd
aam
mov
push
inc
dec
mov
jmp
push
or
and
xchg
or
je
enter
roll
mov
into
or
mov
xor
inc
movsb
adc
and
mov
xchg
push
loopne
mov
push
dec
gs
mov
xchg
cmpsb
ret
jne
loopne
add
rcrb
or
xchg
adc
fnsave
aaa
adc
in
sbb
sbb
sub
dec
pop
bound
push
sbb
nop
and
sar
test
xor
pop
sete
mov
add
mov
mov
jbe
xor
push
mov
pop
mov
inc
pop
cmp
adc
add
mov
out
jnp
insl
sub
and
hlt
in
adc
add
mov
adc
inc
js
testl
lock
pop
mov
lods
lock
test
or
cld
push
mov
push
sbb
aaa
pushl
and
imul
mov
movsl
mov
push
add
sbb
es
inc
mov
cmpsl
sub
int3
shrb
lret
dec
movl
int3
add
lock
add
clc
movb
out
int3
sub
sbb
addl
sbb
ret
mov
repz
or
loopne
nop
ss
fwait
add
pop
hlt
sbb
enter
sbb
sahf
iret
rolb
enter
xor
mov
jns
dec
and
jle
add
or
les
push
dec
adc
xor
pop
fwait
mov
xorb
push
pop
dec
xor
ds
and
loopne
fs
sbb
dec
ja
push
je
push
sbb
out
mov
shlb
out
ret
shlb
lret
sub
je
mov
and
cltd
popa
xor
cmp
add
dec
adc
mov
fcompl
fs
push
sbb
sub
xchg
repz
repz
cmpsl
scas
mov
adc
mov
jae
inc
jmp
incb
rorl
mov
xor
je
dec
xor
add
cmp
imul
sub
dec
test
outsb
in
fwait
xorb
xor
cmp
cltd
ss
dec
jmp
inc
fildl
pop
mov
int3
cmp
scas
imul
or
pop
xlat
cmp
lods
orb
filds
pop
dec
fsub
adc
rcrl
or
loopne
push
pop
test
pop
iret
add
cltd
pop
leave
jno
adc
and
push
and
ret
subb
clc
and
movsb
cmc
arpl
jl
push
mov
push
sub
add
fs
adcb
xchg
sbb
test
adc
and
aam
xchg
ret
inc
push
mov
fadds
fwait
pop
out
popa
dec
mov
loopne
dec
cmp
inc
dec
repnz
mov
inc
leave
inc
add
jo
shrb
mov
push
adc
mov
aam
cmp
pop
cmp
mov
imul
xchg
sarb
pusha
xchg
adc
js
sbb
sbb
xchg
negl
add
insb
mov
xor
ja
sti
jl
inc
nop
imulb
sub
cmp
inc
fcoms
mov
dec
ret
rcrl
pop
fsubs
mov
inc
mov
fisttps
jne
mov
loopne
movsb
push
enter
add
jl
jg
aaa
dec
dec
leave
xchg
pop
and
mov
mov
aas
cmp
iret
inc
idivl
mov
jne
cmovne
pop
cmpl
pop
sbb
pushf
call
pop
jb
sahf
pop
push
cmp
sbbb
adc
test
adc
les
fsts
ret
sbb
cmp
and
pop
jo
inc
icebp
dec
shlb
adc
iret
rol
mov
std
fnstcw
mov
lret
cmp
jmp
add
stos
sbb
bound
xor
inc
ss
pop
adc
pop
sub
dec
add
and
scas
inc
stc
dec
mov
pop
or
popf
push
mov
mov
xchg
xchg
nop
xchg
lahf
js
lods
pushf
pop
addr16
xor
test
hlt
cltd
ret
inc
into
sbb
mov
dec
mov
push
pusha
and
outsb
hlt
or
cs
xchg
popa
mov
leave
sbb
clc
cwtl
je
ror
fists
add
xchg
xor
stos
pop
add
pushf
add
and
ljmp
mov
inc
xor
aad
sub
add
xor
or
call
out
add
test
and
xor
imul
int3
inc
loopne
jmp
fisubrs
int3
js
pop
add
cs
mov
adc
pop
push
push
mov
addr16
cltd
push
fdivs
add
jle
pop
xchg
or
xchg
jne
dec
adc
test
cwtl
rcrb
jno
push
imul
ss
repz
xchg
add
cmp
xchg
pusha
jle
xor
adcl
cwtl
insb
test
test
cmp
cmp
dec
sbb
or
and
dec
addr16
mov
sbb
or
dec
lret
rcll
push
xor
adc
ret
hlt
push
add
add
ret
jb
sbb
mov
in
fs
lea
xchg
add
fcomps
fisubs
push
mov
add
xchg
jbe
xorl
mov
test
cli
adc
push
cli
sub
cmp
in
mov
lods
jb
loopne
mov
lret
js
in
cld
pop
jge
loop
cmp
push
bound
push
in
push
xor
ffreep
add
add
pop
int
fs
cmp
jp
add
mov
add
and
push
cmp
sbb
mov
xor
dec
pop
xchg
repz
mov
xchg
add
rcll
data16
push
sbb
movsl
cli
add
push
inc
inc
int
sub
or
push
push
and
inc
or
je
sbbb
and
outsl
pop
in
pop
lea
adc
cs
repz
aaa
inc
xchg
nop
rcll
adc
add
xchg
inc
mov
xor
inc
addr16
or
and
inc
repz
xor
test
popa
pop
pop
pusha
loope
rorl
pop
xorb
add
or
adc
repnz
fdivrs
sub
test
popa
add
pop
cs
dec
mov
add
mov
je
xor
pop
shl
testb
in
sub
lahf
push
ret
loop
mov
ret
mov
outsb
jp
inc
cmp
sbbl
lcall
lea
hlt
adc
xor
dec
and
imul
pusha
sbb
add
xor
test
mov
mov
popa
and
xchg
or
pop
push
fwait
inc
push
lahf
js
ret
pop
movb
inc
pop
inc
fimuls
add
inc
add
jle
jns
or
adc
nop
js
clc
jb
pop
dec
jmp
xorl
add
outsb
lock
std
jne
jle
adc
lret
or
add
cmp
adc
aad
xchg
jl
movsl
jnp
loopne
sbb
sarb
insl
dec
lcall
sbb
add
addb
push
ja
dec
lcall
sub
or
mov
jb
sbbl
or
add
push
add
addr16
fiadds
pop
std
inc
hlt
out
das
mov
in
lcall
xchg
mov
xor
mov
int3
cmpb
dec
add
add
insb
int3
insb
loopne
or
xchg
fstpl
or
add
mov
inc
mov
push
cmp
xor
mov
xchg
pop
pusha
in
push
test
sahf
jp
push
dec
ds
nop
xchg
dec
cs
and
inc
dec
jno
add
cmpsl
into
xlat
lret
sbb
nop
test
or
mov
pop
adcl
rolb
sahf
jne
ret
sbb
mov
mov
jno
fcmovnbe
in
lock
xor
adc
push
or
test
dec
jp
push
dec
gs
xor
pop
add
push
add
vmwrite
das
call
out
push
or
sub
cmp
fnstsw
adc
dec
sub
clc
fwait
xor
shl
int3
shlb
cmpsl
mov
and
pop
pop
das
insl
mov
adc
inc
xor
xchg
in
jno
xchg
inc
test
adc
or
pop
cmpsb
call
push
aad
out
or
lock
fisttps
or
push
jecxz
int3
mov
ja
clc
and
rorb
push
mov
pop
push
ljmp
inc
mov
movsl
mov
jge
hlt
and
jmp
jmp
sbb
out
sub
xlat
test
adc
sbb
inc
xchg
mov
jl
adc
xchg
call
dec
shrl
mov
jns
orb
dec
add
push
cmp
fwait
jmp
and
mov
or
inc
mov
rorl
mov
les
adc
xchg
adc
popa
mov
nop
push
in
aaa
in
xor
inc
sbb
movsb
adc
cli
mov
addl
fcompl
aaa
xchg
or
enter
sbb
mov
je
or
cmp
and
push
or
imul
sbb
les
sub
sbb
jb
or
inc
jmp
test
cmp
xor
inc
push
add
push
inc
inc
add
addl
pop
subl
mov
push
push
fsubl
mov
das
push
xchg
push
fwait
or
push
call
xor
cmp
or
mov
sahf
fs
ret
aas
cmp
xor
hlt
sbb
pop
ret
or
sub
mov
scas
and
adc
dec
add
push
bound
inc
sbb
nop
sbb
add
arpl
dec
cmp
rcrb
lret
xor
push
dec
rolb
jae
or
imul
out
adc
nop
ss
dec
xor
or
fidivl
xor
xchg
adc
cmp
dec
js
addb
push
pop
add
sahf
cmp
fs
sahf
mov
and
inc
adc
dec
inc
and
daa
cmp
pop
test
aas
test
call
push
mov
or
sub
fistpl
cmp
or
pop
adc
or
adc
das
sub
add
outsb
gs
es
adc
push
xchg
xorl
stc
mov
xchg
mov
imul
ss
out
inc
aam
inc
push
test
add
jl
jl
add
dec
xor
mov
push
xchg
and
or
cmp
add
pusha
sbb
cmpsb
xor
dec
repz
leave
in
or
outsb
and
and
jo
lcall
insl
adc
sub
and
mov
add
push
loopne
adc
enter
lock
mov
inc
xchg
jmp
es
or
xchg
pusha
testl
fists
mov
cwtl
insl
addb
pop
or
clc
pop
push
or
clc
mov
cmp
xchg
int3
and
lock
int3
xor
xor
jmp
jb
scas
add
jg
push
xor
xor
or
xor
in
mov
jns,pn
stos
sbb
enter
jns,pt
cmp
push
sbb
pop
mov
adc
fildl
push
push
lea
cmp
push
or
push
inc
xchg
pushf
pop
mov
pop
pop
shll
rolb
popa
andb
mov
cltd
xchg
add
fdivs
inc
bound
cli
cltd
pop
jns
mov
int
sbb
enter
mov
jae
dec
stos
xor
js
inc
test
inc
lret
fs
fmuls
dec
dec
ret
jbe
mov
in
jb
mov
loope
sbb
pop
sbb
lret
pop
push
push
push
lahf
popa
test
push
dec
mov
ds
push
dec
lea
and
sbb
xor
push
push
lds
lods
sbb
pop
loopne
xor
inc
or
push
shrb
addb
push
push
xor
inc
dec
or
and
xchg
mov
ss
xchg
add
mov
sub
adc
test
add
dec
movl
xor
fwait
mov
inc
or
cmp
aas
dec
mov
movb
inc
sahf
test
mov
dec
inc
sub
jne
xor
cmpsl
jecxz
je
divb
push
popa
or
sbb
cli
add
or
orl
sub
mov
push
sar
jmp
jge
adc
jns
xor
test
xor
or
nop
sub
dec
imul
cmpsl
add
xor
pop
or
push
cmp
dec
sub
mov
mov
mull
jae
cwtl
push
cltd
pop
std
pop
sub
or
add
cltd
mov
mov
inc
xor
adc
jp
fsubl
add
sub
cmpsb
es
push
push
sub
test
push
xor
movzwl
push
imul
jecxz
es
and
stos
lds
stc
sub
push
add
jo
clc
and
adc
xchg
sub
sbb
xor
add
loopne
rclb
cmp
cs
xchg
xor
sarb
jl
cmp
testb
subb
sub
or
and
sbb
add
sbb
cmovs
cmp
add
push
je
and
repnz
add
sbb
cltd
inc
inc
cs
push
inc
pop
cmp
inc
insb
push
dec
aaa
add
test
ret
lret
jo
and
rclb
dec
loope
or
es
push
sbb
or
xor
sub
inc
mov
and
call
sbb
add
jne
in
xor
and
sbb
rcl
out
shr
push
inc
jg
rclb
test
add
jbe
daa
add
inc
lahf
cmp
jl
mov
mov
fldenv
es
std
or
adc
mov
lds
inc
jns
ret
inc
sub
or
and
push
and
pop
sub
clc
add
push
xchg
sub
push
pop
ss
insl
adc
int
jne
mov
mov
or
fwait
cmpsb
xor
adc
cmp
mov
mov
cmpsb
outsb
clc
test
rolb
pop
shrl
nop
js
pop
je
sbb
xor
xor
imul
mov
enter
pop
and
cmp
cmpsb
mov
adc
and
adc
aad
outsl
arpl
aas
mov
fs
mov
mov
mov
add
fcomps
pop
mov
nop
dec
push
inc
pop
ds
leave
rcrl
dec
lret
and
stos
insb
loopne
orl
xor
or
sbb
dec
outsb
arpl
mov
and
and
add
lar
dec
lret
or
aaa
mov
adc
sbb
cmp
sub
insb
xchg
mov
sub
sbb
rcrb
dec
add
dec
or
aaa
inc
adc
push
adc
outsl
mov
xor
xor
xor
push
mov
lock
jge
cmp
add
xor
add
xchg
sub
bound
adc
sbb
jb
push
push
push
and
add
xor
or
or
mov
sbb
inc
push
sbb
push
xor
lods
inc
sub
pushf
add
mov
rcrb
or
add
push
cmove
cmpl
sbb
inc
push
dec
rclb
mov
adc
pop
jns
das
inc
pop
push
insl
outsl
gs
push
mov
dec
addl
fcmovb
sbb
xor
mov
add
ds
cmp
or
push
push
adc
adcb
push
imul
adc
adc
and
ret
mov
cs
test
nop
add
push
mov
ja
dec
into
jl
jnp
jge
dec
inc
imul
mov
cwtl
or
adc
mov
push
xor
sbb
mov
push
inc
sub
jmp
push
mov
fldcw
incb
or
adc
sbb
outsb
push
pop
pop
mov
inc
jbe
cmp
in
imul
add
pop
push
or
dec
lock
xchg
pop
adc
xor
mov
push
or
xchg
pop
xor
inc
stos
sbb
lock
or
jns
jp
or
inc
jp
dec
or
push
xchg
pop
and
testb
push
mov
push
jno
sbb
cmp
bound
or
cmp
adc
push
mov
or
push
outsl
mov
mov
xor
xchg
prefetch
or
dec
aaa
imul
test
ljmp
movsl
sbb
out
mov
das
mov
pop
fdivr
es
data16
iret
sub
test
add
cld
sub
fisubrl
jae
xchg
daa
xchg
or
mov
daa
mov
or
adc
jnp
lock
or
pop
push
jns
outsb
lahf
mov
add
or
orl
in
outsb
dec
notl
xor
or
jge
dec
add
jnp
adc
cwtl
xchg
lahf
push
or
add
lods
nop
ljmp
add
cmp
lret
pop
dec
or
mov
fsubl
pop
adc
adc
data16
adc
lock
fstps
lea
je
pop
adcb
fildl
xor
adcb
mov
fsubs
imul
scas
in
and
in
or
adc
ja
jle
icebp
test
or
mov
dec
add
sbb
xchg
scas
push
outsb
adc
add
pop
cmp
push
adc
xorb
ja
cmpsl
pop
and
or
pop
loope
push
pop
aas
inc
add
cmp
rcrb
out
push
adcb
fs
sub
or
iret
imul
or
nop
fdivs
les
rcr
insb
mull
xor
xchg
sub
inc
mov
jnp
jne
jns
xor
enter
dec
pusha
jle
xchg
cld
bndstx
aas
adcl
dec
jae
push
push
push
dec
mov
and
stos
fwait
add
negl
js
cmp
pop
int3
push
pusha
xor
sbb
popa
dec
dec
sbb
xchg
mov
sbb
xor
scas
jge
add
sub
int3
sub
mov
mov
push
or
xadd
iret
and
stc
imulb
inc
sub
inc
call
pop
jg
pop
xor
lret
xchg
stc
mov
mull
rcrb
mov
xchg
jl
jl
inc
jo
cmp
adc
out
add
imul
fwait
mov
pop
insb
jge
xchg
xchg
inc
faddl
pop
mov
mov
or
mov
pop
mov
pop
daa
aam
mov
pushf
sahf
popa
loop
popa
negb
shlb
push
push
pusha
fs
iret
mov
daa
add
add
add
add
add
cwtl
and
jmp
adc
xor
push
sbb
inc
adc
jno
inc
inc
mov
or
xchg
mov
subb
mov
mov
mov
mov
sbb
mov
lahf
or
out
pushl
scas
ljmp
push
sar
mov
in
add
push
dec
stos
dec
jnp
js
cmp
push
push
pusha
lcall
and
test
insb
or
fldt
insl
and
cmp
nop
pop
pop
imul
fs
push
mov
mov
outsl
imul
outsb
pop
loopne
xchg
pop
cld
jbe
cmp
jb
ja
mov
mov
nop
outsl
daa
cwtl
add
pop
xor
test
bound
jo
sub
cmpsb
jns
dec
push
mov
cwtl
sub
out
xchg
jo
or
sub
int
int3
mov
sbb
call
sahf
pop
and
loopne
repz
in
inc
mov
cmpl
cmp
pop
add
fwait
pop
sub
pop
call
pop
add
sbb
xchg
movsb
enter
push
cli
dec
loopne
push
mov
inc
pusha
adc
mov
inc
and
std
push
and
nop
jo
add
stos
adc
mov
and
mov
add
xchg
pusha
inc
mov
nop
test
sbb
movsb
add
aas
jo
imul
push
dec
loope
pop
mov
lea
fimuls
cld
xchg
int
adc
rolb
fcoml
aad
fisttpl
inc
loopne
xchg
rclb
or
das
hlt
arpl
adcl
push
sub
push
loope
xor
dec
mov
andb
in
jmp
adc
subl
sbb
push
sub
mov
xchg
rorb
add
add
mov
add
shr
sbb
fiadds
rcr
lock
rolb
aad
push
fisttps
cwtl
sbb
cmp
inc
loopne
xchg
or
sub
add
dec
aam
fs
mov
nop
sbb
dec
frstor
pop
loopne
pushl
push
push
dec
movsb
mov
mov
loopne
sbb
jnp
push
xchg
in
push
int3
push
add
shll
and
faddl
rorb
mov
add
push
fsubl
loope
ds
fs
cmpsl
stos
je
and
push
push
jae
push
jno
push
sub
mov
cmp
mov
push
and
das
push
and
add
jecxz
sub
out
jo
jne
push
inc
and
sbb
jmp
pusha
outsb
in
cmp
rclb
fs
test
inc
sbb
push
es
lea
rcrl
in
fisubs
roll
mov
push
xchg
mov
push
sub
and
stos
stos
pop
das
int3
inc
jae
inc
lea
or
inc
int3
push
fldl
imul
sub
inc
enter
shrb
shlb
sbb
inc
sbb
shll
pop
cwtl
fwait
sub
push
pop
sub
add
ja
in
jno
mov
je
xchg
xchg
xor
out
lea
aad
insb
fs
dec
xchg
pusha
cmp
jno
js
push
ret
xchg
push
mov
pusha
lcall
xor
cltd
xchg
jo
or
push
imul
jae
mov
or
inc
jge
jl
int
mov
push
test
pop
push
xor
jbe
fcomps
sar
xor
sbb
and
or
cmp
out
mov
push
int
es
cmp
out
push
sbb
icebp
dec
cltd
int3
adc
fdivs
cmpsb
mov
push
inc
ja
fidivrl
in
cmpsb
sbb
inc
jne
dec
add
gs
sbb
ficoms
jle
sbb
mov
fbld
cmp
dec
mov
push
push
in
sub
ja
aam
inc
cmp
test
nop
xor
push
pop
pusha
cmp
or
mov
add
loopne
insb
or
cmp
xchg
inc
fwait
jne
sbb
dec
cmp
xor
mov
push
dec
ds
sbbl
push
inc
imul
or
inc
cwtl
cwtl
push
fcomps
pop
inc
xor
and
push
bndldx
pusha
add
dec
or
andb
adc
sub
pop
xchg
jbe
dec
scas
adc
shlb
sbb
inc
and
leave
sub
inc
inc
pop
add
int3
ja
dec
fcomps
cwtl
into
xchg
pop
inc
dec
sub
sbb
stc
jns
mov
popf
and
popa
cmc
or
ja
mov
fbld
jo
mov
mov
xchg
adc
add
mov
jb
dec
repz
les
dec
pop
xrelease
jns
jecxz
dec
mov
lcall
push
jns
xchg
andb
mov
loope
cmpsb
mov
mov
test
loopne
jbe
xchg
dec
inc
inc
cmp
push
pop
cmp
rcr
push
orl
adc
inc
pushf
and
loopne
lods
push
int3
or
mov
cmp
push
jo
xchg
cmp
cmp
rcl
push
dec
jnp
or
fmuls
fcoms
dec
xor
adc
push
insl
jns
mov
push
dec
filds
cmp
cmp
movsb
cmp
xchg
cmpsb
dec
test
int3
dec
inc
inc
sbb
sbb
dec
ss
in
or
rorl
dec
push
push
and
outsb
cmc
cs
sbbl
sub
js
pop
pop
mov
adc
rolb
mov
in
adc
ror
pop
sbb
sbb
and
adc
sbb
push
mov
dec
cmp
add
lock
sbb
or
jp
inc
pop
sbb
cmp
aas
mov
mov
movsl
or
test
adc
dec
repz
inc
dec
out
mov
lds
mov
and
fwait
roll
les
lock
mov
insb
cmpsb
fmuls
insl
rcrl
xchg
pop
or
out
pop
sub
movsb
inc
mov
rorb
mov
xor
test
or
mov
push
inc
or
dec
push
imul
adc
pop
sbbl
ret
scas
fs
inc
pop
movb
out
or
inc
dec
mov
out
imul
pop
sbb
add
inc
mov
shll
loopne
adc
aas
push
fwait
das
inc
pop
adc
mov
push
push
or
div
sub
dec
pop
push
andps
add
clc
xorb
pusha
nop
dec
or
and
dec
test
les
movsl
mov
xchg
mov
dec
sti
mov
pop
jne
or
pop
mov
push
je
and
pop
or
and
cmpb
dec
mov
and
and
sub
lods
pop
adc
or
cmp
push
test
xchg
je
adc
mov
les
in
dec
adc
dec
pop
pusha
lods
add
adc
pop
dec
dec
cmpsl
dec
jg
sti
fcomp
and
sarb
sbb
int3
inc
add
addb
inc
mov
addl
or
mov
mov
pop
or
out
xchg
in
push
enter
push
aam
add
sub
fisubrs
mov
push
sbb
rorb
xor
sahf
adc
cwtl
sbb
mov
leave
xor
sbb
ss
lret
cmp
push
test
jns
dec
out
jnp
enter
sbb
push
add
sub
push
adc
pop
dec
or
mov
je
mov
mov
sbb
es
daa
lcall
mov
mov
sbb
xchg
ljmp
in
adc
inc
xchg
ret
inc
jmp
lds
dec
insb
adc
or
repz
loopne
push
sti
push
dec
out
clc
mov
addr16
mov
sub
mov
push
sbb
call
cmp
leave
arpl
and
push
adc
loopne
pop
adc
adc
lret
cld
lock
rorb
lret
add
or
and
dec
xor
add
adc
cmpb
adc
add
mov
sbb
cmpsl
fs
shrb
insb
sub
push
ja
xorb
mov
inc
adc
sbb
add
add
inc
xchg
xchg
or
adc
xchg
add
inc
andb
imul
push
sub
inc
inc
or
sub
and
xchg
adcb
or
mov
lahf
ja
cmp
pushf
and
xor
sub
shll
lcall
dec
hlt
gs
mov
add
adc
fwait
jle
mov
mov
or
sarb
or
adc
mov
and
inc
add
or
adc
out
push
aas
sub
pop
inc
add
mov
xor
aas
push
and
sub
std
sub
pop
loop,pt
jb
push
adc
add
mov
sbb
adc
push
lock
adc
daa
mov
add
aam
push
add
add
popf
fiadds
push
das
nop
out
xor
push
mov
or
sbb
inc
daa
mov
je
mov
popa
mov
leave
adc
sub
hlt
mov
add
add
subb
test
aas
xor
push
hlt
mov
inc
cmp
pop
mov
dec
jb
jae
push
lret
add
push
inc
dec
dec
xor
imul
xlat
sti
pop
nop
adc
adc
test
enter
inc
sbb
adc
mov
inc
dec
cmp
cmp
popa
jp
loopne
jmp
sub
and
or
mov
add
inc
pop
inc
mov
add
adc
add
inc
icebp
xor
jp
test
sbb
and
in
mov
test
ret
mov
jo
xchg
mov
pop
sbbb
or
fmuls
xchg
jb
jmp
sti
mov
icebp
inc
xchg
arpl
nop
loope
sbbl
arpl
call
fucomi
cmpl
or
mov
das
cli
adcl
test
adc
xlat
lock
ret
nop
div
movsl
push
mov
jno
lea
insb
js
cmpsb
icebp
dec
mov
ds
push
ficompl
rcr
sbb
loop
sbb
dec
cmp
pushf
dec
mov
add
lea
scas
ret
pusha
daa
mov
cmp
add
js
js
jo
mov
push
mov
pusha
test
push
push
pop
cmpsl
or
js
jp
jmp
bound
jge
icebp
jae
cmp
inc
cmp
pmulhw
ret
inc
cmp
jo
adc
jmp
inc
inc
or
sub
mov
dec
cmp
adc
test
or
mov
and
sarl
mov
fwait
lods
pop
mov
cld
add
aas
ret
rclb
cwtl
add
rclb
sti
push
inc
call
dec
xor
sub
mov
and
insl
and
adc
test
test
push
gs
dec
mov
or
je
ss
pusha
inc
mov
lock
ror
add
loop
cmpsl
mov
rcll
rcrb
adc
shll
sbb
mov
and
daa
xchg
std
movb
aaa
add
cmp
fdivrs
xor
xchg
mov
cmpl
dec
cmpb
fs
ficoml
and
sbb
shll
fadds
xchg
pop
push
movsl
adc
mov
test
fdivrs
push
and
enter
push
jne
cmp
sbb
pop
lahf
fmuls
jo
mov
inc
mov
mov
addr16
inc
sub
xor
int
sub
test
adc
fwait
dec
inc
add
rorb
sub
ss
push
push
jl
rclb
insb
push
pop
cmp
sahf
sarb
loope
rclb
ret
rcl
arpl
cltd
pop
faddp
fnstcw
das
inc
popa
pusha
adc
roll
cld
xor
enter
sbb
pop
jbe
pop
mov
cmp
fsubrs
rorb
popa
frstor
pop
jecxz
cmp
add
mov
cmp
data16
insl
aad
xor
fs
mov
sti
inc
push
pop
fistpll
xor
js
xchg
inc
loopne
out
das
mov
das
mov
sbb
leave
jge
xor
scas
push
cmpl
ret
cmp
testb
movsb
lea
cld
inc
push
lods
adc
nop
sbb
cmp
imul
add
lock
jno
or
sub
xor
insb
inc
es
cmp
jo
inc
cmp
xor
outsb
add
adc
push
enter
xlat
inc
jo
sbb
and
mov
push
js
mov
sub
pop
loope
xlat
and
push
lcall
push
mov
clc
sbb
movsb
jbe
movl
inc
loop
sub
movsb
shl
out
divl
test
pop
push
bound
insl
ljmp
jns
or
notb
popf
pop
or
cmc
test
pop
adc
or
shll
jo
inc
loope
push
icebp
mov
push
add
push
setl
mov
or
or
arpl
xchg
outsl
xchg
push
sub
mov
or
sahf
pop
mov
mov
sub
enter
test
push
sub
movb
std
push
pushf
xchg
call
nop
fisubl
rol
andl
add
inc
xor
outsb
cmp
sub
add
jecxz
dec
cli
es
test
sti
in
push
pop
lret
pop
mov
arpl
adc
adc
fwait
add
pushf
push
inc
mov
out
aaa
popf
add
xchg
movsl
adc
cvttps2pi
xchg
or
mov
aaa
inc
add
mov
jg
lock
arpl
push
mov
mov
adc
and
push
xor
test
mov
adc
dec
leave
mov
data16
ss
or
test
ja
xchg
pop
je
mov
sbb
inc
or
rsm
outsl
sbbl
or
sbb
ja
pop
xor
mov
or
lea
fadds
push
xchg
lret
push
add
cmpb
add
ret
sbb
mov
cmp
mov
les
xor
dec
insl
cmp
and
pop
dec
outsl
or
dec
enter
xchg
add
nop
bound
push
pusha
adc
or
ljmp
testb
dec
dec
xor
add
rolb
loopne
lret
push
xor
mov
shr
cltd
shrl
sbb
sbb
and
pop
fcompl
fnstcw
jne
adc
push
sbb
dec
add
frstors
pop
or
push
push
lea
push
adc
xchg
pop
mov
je
jnp
adc
xor
cmpl
outsl
or
lds
fiadds
popa
sbb
out
sbb
pop
mov
jo
push
jg
mov
fimuls
add
or
lret
in
adc
sbb
test
xchg
mov
xlat
sub
insl
imul
dec
adc
ss
xchg
rcll
xchg
jle
or
or
adc
inc
dec
fstpl
rcrl
adc
lds
aas
or
cmp
leave
add
adcb
addr16
xchg
vmwrite
inc
mov
das
mov
incl
insb
push
push
mov
push
adc
mov
mov
and
add
out
popf
addr16
loopne
int
stos
mov
sarl
fs
push
scas
cmpb
xor
dec
or
cmp
pusha
jne
sbb
add
ret
sbb
push
xchg
jo
jg
pop
jns
or
cmp
or
inc
or
daa
fs
or
ret
jae
and
divl
dec
push
fisubl
jmp
hlt
in
and
inc
mov
ret
push
sbb
fadds
add
add
push
mov
ss
sbb
decl
jl
sub
pop
loop
addb
or
dec
lea
mov
xchg
clc
xor
pop
inc
add
scas
sbb
rclb
lods
ret
cmpsb
daa
dec
loop
add
sbb
pop
add
mov
mov
xor
les
dec
enter
les
push
cld
aaa
add
mov
or
pop
test
orb
icebp
jbe
lock
xor
add
push
mov
arpl
or
add
inc
sbb
sub
jg
push
test
or
imul
or
stc
aam
push
sbb
xor
jmp
or
ss
test
sbb
dec
jnp
add
and
icebp
testb
and
mov
es
push
mov
inc
dec
mov
fs
std
add
adc
ret
and
mov
movsb
out
add
or
inc
cmp
das
rcrl
in
push
daa
xchg
cs
push
xchg
push
les
loopne
or
inc
cmp
mov
les
push
les
inc
rcl
or
divb
popa
mov
sbbl
ret
mov
daa
mov
testb
in
adc
push
rclb
iret
push
pop
mov
pop
adc
addl
in
mov
or
stos
mov
fistps
ret
push
jl
pop
cwtl
sub
jecxz
sarb
xchg
rcrb
mov
int3
shlb
pop
mov
add
push
add
outsb
pop
push
push
dec
mov
or
repnz
jmp
xchg
lcall
dec
dec
inc
lods
xchg
xchg
sub
inc
lea
sti
cmp
mov
add
cli
pop
add
out
pop
add
enter
jne
mov
ljmp
jne
test
pop
pop
mov
adc
xchg
rcl
cmp
rorl
pop
andb
inc
hlt
lods
dec
arpl
repz
shlb
push
iret
mov
neg
xchg
sub
inc
leave
faddl
aaa
cmp
inc
dec
js
and
add
and
jge
sub
clc
pop
sbb
add
push
movsb
fiadds
pop
xchg
stos
or
ret
sub
ja
dec
or
xchg
sub
sbb
ud2
cmp
xchg
jnp
inc
and
dec
jp
jle
mov
add
add
out
inc
fs
scas
xchg
sbb
dec
lds
mov
mov
nop
ja
lods
aaa
jo
pop
or
pusha
cmp
iret
xchg
loopne
mov
inc
inc
adc
xchg
mov
sbb
push
xchg
mov
push
sub
add
mov
xor
xchg
hlt
loopne
hlt
jp
fs
out
pop
jo
dec
gs
push
ret
adc
add
cmpsl
rcll
fcoml
shlb
imul
mov
inc
mov
daa
push
cltd
add
fstps
repnz
in
mov
shlb
inc
insl
out
mov
adc
add
and
push
adc
sbb
sbb
jb
push
xor
insb
insb
mov
leave
pop
and
sbb
leave
inc
sub
jbe
ds
xchg
call
pop
xchg
sub
adc
adc
and
sbb
in
or
and
push
add
imulb
xchg
scas
addb
ja
inc
js
mov
pushf
xchg
mov
mov
mov
xor
mov
cmp
out
push
adc
push
add
xor
or
imul
xor
pop
sbb
xor
adc
enter
loopne
addb
mov
stos
icebp
xlat
popa
icebp
pop
aad
in
rorl
xor
stc
adc
inc
addr16
dec
dec
lock
xor
mov
inc
push
inc
imul
pop
and
push
mov
xlat
add
sbb
add
xor
mov
add
nop
push
imul
or
adc
and
mov
jl
cs
cmpb
and
inc
call
sbb
sbb
dec
fndisi(8087
jne
sbb
push
enter
sub
xchg
cmpb
xchg
out
mov
pmulhw
imul
mov
pop
fmul
sub
xor
test
inc
cmp
xchg
or
add
ds
cmp
add
xchg
xchg
cmpl
enter
mov
mov
loopne
push
cmpl
lahf
add
sub
das
pop
cli
inc
loopne
or
sbb
or
push
push
mov
out
adc
mov
inc
cmp
fisubrs
daa
dec
mov
shlb
loop
ss
cwtl
inc
aam
xor
outsl
push
jge
sub
add
aad
add
push
fwait
jb
sbb
jecxz
ljmp
or
ljmp
rol
sbb
and
shll
push
test
pop
and
push
dec
jo
mov
and
or
push
lret
arpl
incl
outsl
insl
jmp
je
mov
mov
add
dec
inc
dec
pusha
inc
jg
imul
test
dec
sbb
sub
int3
sbb
lock
fisubs
jle
or
cwtl
sbb
pop
int
in
insb
ror
or
testb
addl
cmpsb
jo
and
std
pop
xchg
cmp
sub
scas
xor
push
inc
adc
cmp
jecxz
in
addr16
xor
xlat
xor
add
out
stos
orb
test
xchg
pop
rol
les
mov
adc
mov
ret
stos
pop
int3
nop
xchg
sub
xchg
mov
lret
cmp
add
mov
daa
arpl
das
subl
and
xchg
pop
xchg
mov
std
mov
sbb
in
ret
jb
or
xchg
dec
inc
push
push
dec
or
adc
pop
xchg
sub
sti
flds
je
daa
cmpb
jbe
cli
xchg
test
pop
jne
sbb
or
add
pop
orl
dec
shrb
fmull
cmp
inc
xor
cmpsb
pop
xchg
push
cmp
or
fs
repnz
pop
inc
out
mov
add
and
and
arpl
insb
dec
arpl
mov
shrb
in
ret
push
add
adc
adc
imul
inc
sub
xor
enter
imul
sub
sbb
sarl
out
mov
test
loopne
sbb
sub
cmp
dec
mov
hlt
popa
push
clc
adc
or
inc
jb
cs
mov
outsl
hlt
xorb
in
in
adc
xchg
lods
pop
push
aaa
adc
dec
sbb
sub
cmp
hlt
nop
add
push
push
out
arpl
mov
inc
push
imul
aaa
subl
push
xchg
daa
dec
xor
and
dec
or
aas
sarb
adc
xchg
lock
imul
lock
cmp
adc
aam
rcrb
jl
dec
mov
and
dec
mov
or
cmp
and
or
je
adc
xchg
inc
mov
jb
add
jbe
jae
sub
xor
or
inc
out
mov
push
dec
jno
sub
popf
insl
and
cmp
stos
insl
or
or
add
and
lock
jns
dec
cs
lret
imul
add
mov
rcrb
lret
je
xchg
xchg
into
insb
dec
or
incl
xchg
mov
add
mov
add
or
or
in
cmpl
dec
movsb
add
fcmovu
test
movsb
sbb
add
pop
mov
sbb
cmovne
rcll
add
loope
das
mov
mov
sbb
mov
fnstenv
sbb
imul
enter
xchg
dec
mov
movsb
jns
fadds
out
inc
or
daa
test
fsts
sbb
nop
xchg
xor
cmpsl
mov
sbb
mov
xor
inc
add
sti
in
js
daa
mov
into
inc
inc
test
bound
mov
and
sub
push
adc
push
mov
aam
test
ja
insb
out
push
loope
push
popa
or
insb
adc
pop
dec
xor
shrb
or
in
das
cmp
mov
mov
out
fiaddl
mov
pop
fwait
aam
pushf
pop
or
and
cltd
push
sub
sbb
push
das
pusha
mov
push
loopne
inc
out
dec
outsl
or
in
jne
push
push
add
pop
pop
mov
or
das
dec
sbb
adc
mov
xchg
or
pop
sbb
insb
jo
daa
jmp
jo
nop
pop
pusha
inc
and
xor
add
je
adc
push
movl
pop
cmp
jo
ret
popf
pop
dec
xchg
fstps
loop
int3
testb
dec
sbb
cmp
or
jae
lcall
mov
or
xor
xor
adc
sub
xor
ror
ret
and
or
inc
pop
sub
into
jmp
fisubs
addb
xor
cmpsl
and
movsl
and
add
cmp
add
idivl
imul
jmp
cmp
add
or
rolb
movl
jl
xchg
mov
cmp
nop
cli
cmp
push
cmp
nop
and
inc
jecxz
das
adc
fs
mov
push
addr16
mov
mov
pop
sbb
push
scas
imul
addb
dec
push
int
hlt
add
fstp
sbb
daa
jo
rcl
xchg
adc
mov
lds
fldt
clc
pusha
loop
and
pop
add
or
clc
in
ljmp
jbe
je
pop
roll
sbb
xor
jmp
pop
loope
cs
scas
push
jno
into
add
inc
push
jb
pop
setg
and
xorl
xchg
xor
sahf
hlt
je
dec
cmc
bound
adc
cmpb
in
icebp
data16
xchg
pop
notb
arpl
and
xorl
cmp
es
jne
mov
arpl
push
mov
mov
in
cmpl
sbb
pop
data16
cmp
add
and
add
xlat
pop
rcll
aas
push
mov
js
sub
pop
cmp
mov
loope
sahf
pusha
in
dec
push
mov
xor
test
test
push
ret
mov
xchg
rcrb
sbb
cmpsb
stos
and
jo
adc
lcall
loop
popf
cmp
fadds
fdivs
dec
sahf
dec
clc
or
pusha
pop
adc
nop
adc
movsl
mov
subl
mov
out
adc
jl,pt
inc
adc
mov
leave
cmpsb
push
stos
add
iret
and
jo
cld
or
pop
lds
inc
test
push
mov
sbbl
sbb
popa
add
sbb
sbb
int
in
mov
into
sub
imul
xlat
aaa
cs
adc
gs
imul
and
xchg
addb
sbb
sbb
cmpsl
xchg
or
pop
push
ret
add
cmp
jl
dec
fsubl
scas
pop
loope
mov
fsts
and
paddsb
push
adc
insb
add
shlb
mov
adc
push
add
and
sub
cmp
outsb
push
jo
inc
das
add
adc
scas
add
test
cwtl
ljmp
dec
and
je
inc
jo
daa
lods
and
mov
jnp
push
mov
or
xor
shlb
mov
mov
divl
mov
pop
and
cmpsl
sbb
stos
adc
fildl
popl
notb
mov
adc
mov
add
pop
and
or
cmpsl
add
shll
ja
outsb
in
cmp
jne
outsl
mov
out
addb
push
pop
subb
jo
mov
push
fistpll
test
movsl
mov
cs
popa
arpl
jb
mov
xchg
push
push
outsb
sbb
lcall
pop
in
mov
sub
jo
ds
out
sub
sbb
aad
and
imul
mov
jbe
je
and
sarl
add
push
cmp
and
mov
mov
add
mov
add
cmpsb
pop
das
shll
cmp
sti
jg
dec
loopne
add
das
sbb
aam
sub
push
push
shrl
xor
nop
add
popa
add
mov
pusha
push
pop
sub
in
mov
sbb
pop
mov
inc
push
lock
and
push
dec
adc
add
mov
jnp
outsl
insb
adc
add
push
push
cmp
mov
stc
sahf
inc
push
out
mov
adc
sub
das
adc
add
xchg
lock
pusha
mov
cmpl
push
ficompl
data16
add
std
cmp
movl
pop
or
dec
pop
iret
cmp
cli
insl
push
mov
out
orb
jae
rcrl
lods
sbb
rcl
sbb
add
or
add
clc
sbb
cmpsl
add
xor
lcall
jl
xor
arpl
pop
adc
jmp
sbb
push
rcrb
mov
rclb
negb
cmp
adc
and
or
jmp
das
or
mov
xor
add
jl
inc
pop
or
insb
loopne
fisttps
insl
xor
adc
mov
fadd
inc
inc
sub
neg
pop
sbb
push
inc
cmp
or
sub
cmpl
add
mov
add
data16
add
and
adc
adc
shlb
aaa
or
aas
add
push
or
add
sbb
mov
jecxz
mov
sub
test
and
lahf
daa
jo
rolb
cmp
or
add
push
int3
insb
das
jl
xor
jns
rolb
das
repz
sbb
outsb
outsb
outsb
cltd
dec
pushf
sbb
xor
add
adc
pop
xchg
push
es
js
push
lods
jmp
pop
add
mov
les
cltd
mov
and
inc
dec
jmp
mov
add
or
xorb
lods
mov
in
js
cld
inc
out
movsb
or
pusha
xchg
fidivs
push
xor
pop
sbb
and
xor
lcall
adcl
aam
dec
inc
dec
push
out
or
push
fnstcw
pop
mov
out
mov
lgs
jge
adc
jne
lea
cs
and
mov
push
inc
ljmp
aad
loopne
in
in
dec
aaa
or
adc
sub
sbb
lret
cmp
inc
xchg
inc
and
sbb
sti
mov
adc
mov
lock
ret
jle
adc
mov
dec
andl
decl
xor
arpl
cmc
out
push
xchg
add
cwtl
inc
mov
cld
orb
mov
adc
rolb
iret
je
push
inc
add
push
mov
mov
push
pop
inc
cmpl
or
or
jne
insb
mov
push
shrb
mov
sar
dec
pushf
adc
clc
cmpsl
cli
clc
lock
push
stos
cmp
jo
sarb
inc
cmp
je
lods
xor
and
jle
fdivs
jne
test
dec
gs
mov
mov
add
clc
mov
test
inc
aas
adc
fcoms
mov
nop
std
adc
sbb
dec
repnz
cmp
mov
lock
out
rcr
testb
rolb
jno
pop
iret
xor
incl
subb
cmp
sbb
rclb
fs
mov
test
mov
and
jns
pop
sbb
int
or
cmp
std
sub
dec
jb
orl
adc
lret
adc
leave
aam
loopne
adc
push
or
or
stos
and
cltd
cmp
push
pop
dec
dec
fisttpl
adc
sbb
outsl
mov
xor
ss
add
jns
xor
js
dec
add
or
mov
add
adc
inc
sbbb
cltd
or
dec
adc
sbb
or
add
call
mov
dec
add
or
lret
fidivs
mov
sbb
es
cmp
fs
test
and
rclb
mov
add
pop
insb
outsb
mov
scas
adc
xchg
mov
sub
cmp
xor
shlb
push
push
push
mov
adc
fdivs
or
push
xor
mov
je
mov
outsb
fadds
xchg
jge
mov
adc
xchg
popa
lock
sub
push
dec
das
mov
sbb
adc
loopne
sub
aaa
cmpl
fistpl
hlt
sbb
or
arpl
sarl
push
cwtl
pop
sbb
add
or
ja
js
stos
cmc
sbb
push
cmp
cmpsb
mov
dec
shll
xlat
jo
sbb
aas
push
xorl
les
jp
mov
adc
lea
xchg
mov
cmpl
fcoms
cmc
inc
inc
je
ja
dec
andl
jecxz
dec
xor
loop
movsl
inc
add
pop
lods
repz
push
mov
arpl
push
adcl
sbbb
orb
and
add
mov
insb
adc
ds
pop
xor
in
loope
pop
mov
push
xchg
loope
fs
dec
shlb
add
sbb
in
mov
xchg
dec
loope
mov
int3
push
fs
and
push
shll
or
shlb
mov
cltd
sbb
mov
push
cmp
inc
das
pop
and
push
sti
sub
mov
fld
subl
xchg
dec
inc
imul
add
shll
lahf
scas
or
daa
xor
xchg
insb
or
fildll
aaa
ret
inc
dec
inc
jo
mov
and
icebp
test
mov
int
testb
mov
mov
sarb
jne
add
xchg
int
push
cmp
daa
dec
mov
mov
gs
popw
mov
jmp
mov
pop
inc
sbb
inc
sub
insb
xor
xor
xor
lock
cmp
inc
pop
push
in
movsb
in
decb
insb
cwtl
popl
xor
rcrb
pop
shll
movsl
ja
push
mov
mov
scas
and
movl
inc
adc
add
rcll
pop
shlb
fisttps
notb
add
adc
and
push
xlat
mov
add
xor
les
lds
icebp
es
call
mov
pop
sbb
dec
leave
sbb
add
xor
add
outsl
and
push
aaa
add
xorb
jp
insl
push
nop
mov
mov
addr16
jns
cmpsl
sahf
pop
outsl
sub
fwait
add
cmp
fistl
and
inc
jmp
test
lds
arpl
pop
cmp
stos
movb
xor
xchg
push
and
sub
adc
pop
and
mov
add
je
in
shrb
lds
cwtl
push
xor
es
sub
dec
mov
mov
pop
pop
stc
int3
pop
inc
or
jo
sbb
pop
or
rorb
roll
jae
jns
jo
in
add
mov
fisubl
xchg
dec
clc
mov
cmp
cs
xor
push
xchg
sub
orl
xor
push
xchg
adc
into
sub
cmp
xchg
movsb
cmpsb
sbb
cs
sub
push
inc
xlat
inc
sbb
ror
shlb
add
and
or
xchg
adc
push
iret
adc
test
push
mov
jbe
sbb
popf
add
push
pop
loopne
inc
mov
inc
inc
push
cld
dec
inc
movsl
ret
cmpsl
jbe
mov
fs
popa
test
rcll
sbbl
adc
push
or
cmpb
mov
or
inc
pop
sub
pop
ja
or
popf
je
call
daa
inc
ret
add
lahf
fdivl
fwait
inc
inc
pop
inc
loop
mov
push
out
imul
push
pop
daa
fnsave
mov
mov
jno
mov
loope
mov
popw
adc
jmp
dec
pop
les
push
fldl
iret
movb
fsubs
xor
mov
fcmovbe
fnstsw
and
add
push
popf
and
dec
movsb
lea
mov
add
mov
add
push
and
cmp
adc
mov
push
and
or
sbb
pop
xchg
or
cltd
push
or
movsl
inc
rol
daa
dec
add
xchg
sbb
fld
cmp
shll
fisubrs
push
out
or
sbb
add
rcll
adc
add
xor
push
ja
push
add
inc
pop
and
ficoms
mov
sub
lea
add
dec
call
movb
mov
mov
sbb
sbb
rcrb
push
xchg
inc
nop
inc
jns
xchg
adc
inc
cltd
jmp
xchg
fiadds
je
mov
adcb
int3
jg
sbb
popa
xor
idivl
int3
ja
ss
inc
fcompl
in
in
mov
cmp
hlt
dec
out
je
test
xchg
mov
orl
rcl
cltd
mulb
loop
add
fs
ja
ficompl
and
data16
in
mov
cmovg
ss
add
lock
pop
inc
mov
lock
adc
pop
cmp
push
jnp
out
dec
sub
dec
push
pop
mov
mov
ret
mov
out
int
add
mov
sub
or
lea
xchg
lods
ja
aaa
and
and
sbb
insl
rorb
xchg
adc
add
add
sub
roll
jge
sub
mov
scas
fcompl
jl
push
incl
loop
inc
adc
cltd
jns
or
pop
adc
push
and
cmpb
cmp
add
gs
lock
insb
or
gs
and
push
xchg
xchg
or
jle
dec
push
add
mov
and
mov
add
add
jmp
jl
xchg
movsb
adc
movsb
or
xor
addr16
jmp
lret
jl
sub
setge
mov
addb
xchg
shll
out
inc
adc
movsl
push
cli
daa
popf
and
je
xor
xchg
test
xchg
imul
cld
cmp
cmp
cltd
sbb
hlt
cmp
cmc
dec
pusha
push
insl
dec
repz
in
jg
mov
xchg
cmp
add
in
cwtl
loopne
aam
xchg
mov
sub
add
cmovnp
pop
xchg
mov
pusha
sub
and
and
push
push
les
mov
lea
pop
inc
cmp
sub
sar
xchg
shrl
movsl
xor
jmp
or
xor
xor
xor
arpl
insl
xchg
rcr
or
popa
jecxz
add
push
or
jo
std
xchg
test
xchg
sub
test
lret
and
cli
shl
jbe
or
jo
jmp
ss
dec
pop
jne
sub
or
push
pop
push
loopne
daa
xorb
pop
dec
add
xor
repnz
mov
leave
mov
sub
inc
popf
sub
xchg
adc
and
ss
sbb
and
int3
sub
push
imul
bound
insl
mov
push
ficoml
lods
dec
inc
push
lods
add
dec
inc
inc
insl
mov
and
inc
insl
ret
cmp
mov
in
test
scas
lods
sbb
pop
xor
or
or
inc
cli
vpcmpeqb
push
dec
dec
mov
jmp
pop
dec
mov
jbe
pop
mov
dec
rcr
push
cwtl
mov
or
and
ret
inc
push
cmp
jne
arpl
cmp
sub
loope
jno
add
xchg
std
mov
or
push
pop
mov
stos
cmpsl
mov
cmp
push
jl
je
xchg
xchg
lret
ss
and
cmpb
cmp
pop
or
push
adc
pop
dec
jmp
mov
sub
sub
xchg
add
dec
cwtl
std
lds
rcll
jmp
jno
jp
iret
push
mov
sub
out
dec
mov
mov
je
test
adc
mov
addr16
xchg
jmp
or
popa
aam
mov
cmp
cmp
xchg
add
xchg
mov
daa
mov
and
inc
jmp
sbb
jne
and
add
and
mov
inc
scas
or
pop
ja
inc
add
adc
sarw
dec
lds
lods
add
pushf
out
sbb
push
add
fwait
adc
mov
jae
adc
lcall
push
rorb
and
adc
cmp
jmp
cwtl
push
dec
imul
inc
ss
aas
sbb
addb
pop
pushf
add
xor
es
jo
push
fimull
pusha
mov
mov
rclb
test
or
mov
pop
add
movsl
and
ret
xor
loopne
cmpsl
push
lahf
outsb
ret
int3
in
add
movsb
mov
je
or
or
pop
arpl
jb
pop
pop
loopne
or
jae
pop
add
lock
gs
mov
and
mov
xor
roll
or
or
mov
jge
adc
dec
js
pop
ljmp
xorl
mov
cmpsb
adc
mov
push
test
stc
mov
clc
aam
jo
mov
sbb
popf
add
dec
push
mov
enter
add
aad
aam
cmpb
aam
push
aaa
lret
mov
es
add
fs
flds
push
adc
cltd
mov
jb
ja
push
xor
aaa
test
adc
jo
push
adc
xor
sbb
xor
popa
pop
jl
add
sbb
and
shlb
mov
and
pop
loop
test
js
sub
cmp
xor
cmp
inc
idivl
into
adc
lcall
xor
lahf
outsb
inc
or
loop
xchg
int
xchg
shrb
loopne
push
xchg
inc
sbb
or
inc
adc
cmpb
add
pop
pop
insb
imul
mov
sbb
push
xor
push
mov
lea
mov
sbb
inc
mov
mov
outsl
pushw
xlat
mov
dec
and
add
push
fistl
sahf
scas
inc
shll
enter
aam
fcoms
pop
shrb
das
jne
mov
pop
movsl
sbb
mov
or
or
xchg
or
cmpsb
pop
and
push
nop
dec
adc
je
pop
cmp
push
mov
add
in
loop
lea
sbb
jp
or
xor
pop
rolb
sbb
or
test
stos
out
jmp
xchg
cmp
xchg
add
cltd
add
pop
lock
cmp
xchg
add
cmp
xor
test
mov
adc
ja
push
scas
mov
testl
or
adc
ljmp
add
or
xchg
dec
push
jno
push
out
dec
mov
mov
xor
push
loop
daa
adc
cmp
and
cmp
movsl
arpl
cmp
sub
sub
mov
sub
sbb
movsb
mov
shlb
xchg
adc
cli
or
dec
sub
imul
rcrb
mov
adc
mov
mov
iret
mov
nop
sbb
adc
push
add
mov
push
push
roll
cmpsl
add
fidivrl
or
call
cmp
adc
in
call
push
lods
out
sbb
test
sub
and
or
lea
mov
nop
in
mov
dec
call
inc
bound
aas
je
fwait
pop
adc
adc
and
lahf
ljmp
in
add
push
ret
adc
dec
ljmp
add
push
movb
insl
pop
lock
adc
push
mov
mov
adc
inc
jecxz
and
inc
mov
fstl
lea
push
inc
aaa
and
daa
rcll
push
sbb
cmpsb
xor
arpl
or
adc
mov
loopne
cmpb
xor
sbb
loopne
nop
addl
imul
orb
mov
push
jne
pop
add
mov
in
lcall
push
cmpsl
adcb
rcrl
int3
dec
cmp
outsb
jg
dec
in
adc
inc
fadds
pusha
xchg
sub
pusha
sbbb
daa
and
arpl
push
imul
cmp
add
jge
je
imul
push
mov
pop
mov
xor
popa
and
aad
cmp
fildll
adc
dec
sub
ss
cmpsl
add
adc
jnp
add
or
cmp
fdivrl
pushf
mov
bnd
loop
mov
inc
imul
cmpl
test
loop
mov
add
and
mov
sbb
cld
cld
mov
inc
aaa
adc
push
cld
nop
add
dec
cld
cld
mov
add
xchg
or
xor
inc
cmp
xchg
test
adc
andl
or
push
cmp
jo
ret
jmp
adc
cltd
test
ret
and
das
scas
pop
push
cmp
or
aam
push
imul
nop
push
xor
fsubl
movsl
jne
adc
ss
sbb
mov
adc
movl
or
mov
sbb
hlt
xchg
cli
pop
cmp
mov
sbb
or
jecxz
mov
pop
adc
adc
daa
inc
add
je
popa
inc
xor
movsl
shrl
mov
mov
fldcw
lahf
int
mov
jns
inc
out
mov
pop
mov
mov
adc
fstpl
js
adc
test
nop
inc
push
sbb
enterw
pop
sti
fsubl
mov
pop
mov
and
sahf
and
test
mov
bound
adc
xchg
add
ret
pop
enter
dec
dec
dec
arpl
xchg
or
filds
pop
pop
adc
nop
stos
jne
push
push
xchg
dec
fisttpl
pop
dec
inc
in
and
mov
pop
push
lcall
add
insl
sbb
jmp
sbb
addr16
xchg
movsl
inc
fwait
sub
and
inc
movsl
xor
nop
inc
mov
dec
movsb
sbb
dec
ss
enter
push
and
or
sbb
add
sub
inc
je
push
xor
enter
xchg
iret
pop
and
inc
aaa
mov
shlb
sbb
sarb
test
jl
or
jle
daa
cmp
mov
enter
pop
inc
dec
cmp
mov
andl
pushl
out
aas
adc
call
clc
xchg
clc
or
jmp
rcrb
mov
xor
pop
lock
fisubs
icebp
and
gs
sub
mov
adc
test
or
pop
mov
pop
sbb
popa
jbe
inc
or
xor
mov
inc
mov
push
add
loopne
xor
pop
bound
inc
cmp
cmp
loop
inc
sub
ss
ficoms
lock
xlat
out
jle
mov
test
adc
cmp
test
pusha
or
add
mov
xchg
jecxz
inc
or
fnstenv
leave
movmskps
push
int
mov
imulb
loope
jmp
pushf
scas
loopne
enter
adc
sarl
lea
lods
push
adc
test
lret
lock
movsl
scas
cmp
push
out
jno
inc
and
sub
rorl
jne
cmp
pop
testb
or
mov
inc
sbb
mov
xor
pop
movsl
mov
ret
cwtl
mov
xchg
lds
inc
pop
inc
or
mov
pop
gs
adc
cmc
jge
outsl
or
outsl
jne
jae
lcall
insb
sbb
scas
mov
mov
scas
sahf
movsb
es
inc
push
and
add
inc
jg
or
xchg
and
mov
jne
jne
out
das
cmpl
push
sahf
mov
adc
push
pop
lahf
cmpsb
push
imul
leave
cmp
dec
jmp
pop
outsl
or
push
add
test
dec
cmc
inc
loope
inc
clc
daa
pusha
adc
addb
adc
roll
cmp
cmpsl
mov
or
pop
add
jp
mov
movsl
inc
jmp
imul
js
inc
dec
call
adc
and
popf
imul
pop
mov
mov
pop
jnp
and
cs
dec
xchg
incl
into
pop
mov
jmp
das
push
out
dec
push
dec
gs
and
or
add
inc
pop
push
ret
and
cmp
sbb
xchg
or
fisttpl
ja
adc
mov
sbb
mov
movl
daa
jns
scas
mov
popf
xorb
or
mov
mov
and
fcmovu
leave
pop
mov
out
dec
inc
imul
mov
pop
popf
xor
inc
inc
and
icebp
or
add
xchg
shl
ljmpw
inc
fmull
js
lods
scas
xor
insb
mov
mov
xor
outsb
lcall
push
adc
inc
cmpsb
ret
das
push
popa
add
pushf
and
add
and
sbb
sarb
adc
and
push
je
xor
rcrl
push
xchg
xchg
dec
mov
dec
das
test
test
add
rolb
push
push
xor
xchg
repnz
sbb
mov
clc
hlt
push
pop
in
xchg
xchg
pop
movsl
add
adc
and
dec
repz
sbb
xor
addl
sbb
push
dec
mov
or
and
add
jmp
sub
lcall
and
je
or
inc
push
or
jne
cltd
push
sbb
push
jne
xor
fs
cmp
hlt
je
into
xchg
add
xor
leave
or
or
and
inc
dec
pop
jmp
inc
xor
clc
psadbw
daa
inc
and
inc
or
xor
lock
sbb
cs
sub
pop
add
sbb
rcrb
dec
rclb
lock
clc
hlt
dec
and
hlt
rolb
mov
sub
mov
xchg
cmp
dec
fcomps
mov
adc
xor
xor
mov
lods
dec
inc
hlt
inc
pop
adc
insl
cmp
sti
dec
mov
pop
rclb
ja
add
int
outsl
cmpsb
pop
hlt
je
clc
sbb
adc
pop
test
sbb
and
lods
in
xlat
cmp
lahf
or
mulb
jne
sub
test
xlat
data16
loop
sub
outsb
nop
enter
lock
and
adc
and
test
sbb
mov
inc
sub
dec
fidivs
lods
xor
lock
add
les
jb
adc
clc
lcall
out
movsl
js
adc
add
jmp
mov
dec
imul
push
xor
xlat
jbe
flds
inc
sbb
les
sbb
mov
mov
cwtl
dec
sub
xor
cltd
fldcw
pop
xchg
mov
xor
in
jno
jo
fisubrl
imul
inc
sub
cwtl
add
add
or
xchg
push
inc
pop
dec
call
sbb
enter
and
lock
xchg
xchg
andl
lds
mov
or
push
add
xor
fdivl
mov
adc
sub
and
inc
and
jno
sbb
ret
nop
lods
cmp
push
pop
mov
xor
int
push
mov
dec
push
je
add
push
stos
push
rclb
xchg
inc
loop
push
sub
int3
push
pop
push
iret
xchg
xchg
mov
lcall
icebp
push
xchg
outsb
xchg
aas
movsl
bound
adc
dec
pop
mov
jbe
mov
movb
and
cmp
xor
rcrb
push
xchg
call
pop
lea
or
cmp
leave
add
or
jo
add
je
jmp
ret
test
add
shl
jmp
fdivrs
push
popa
sub
ret
fmuls
adc
or
leave
movsl
xor
mov
popa
dec
loopne
or
cmp
imul
adc
dec
mov
xor
test
in
sbb
sub
and
and
aam
push
dec
add
xor
cli
shrb
and
cmp
mov
pop
jne
pop
call
pop
mov
xor
rcll
imul
out
daa
aam
test
pop
popa
addr16
or
movl
out
jae
js
mov
jbe
ss
and
or
add
cmp
push
sbb
mov
cmpl
adc
inc
sbb
adc
out
outsl
or
jmp
mov
push
leave
daa
or
xchg
mov
mov
call
cmp
inc
cs
mov
cmp
mov
sti
pop
lea
mov
mov
ret
sti
lods
hlt
or
loopne
addr16
pop
enter
fldenv
cmp
mov
aad
dec
inc
dec
dec
dec
inc
dec
dec
test
lcall
ret
sub
cltd
push
pop
lret
mov
ret
inc
or
lods
enter
mov
push
xchg
add
push
nop
jmp
sub
lret
or
pop
mov
testb
push
mov
push
sub
arpl
mov
mov
jo
or
mov
cmp
dec
hlt
insl
xchg
mov
jge
nop
inc
xor
add
rcll
jae
iret
aam
sbb
inc
es
bound
addr16
in
int
ret
or
lahf
and
mov
nop
aaa
stos
dec
dec
jnp
dec
shlb
sbb
xor
and
stc
or
sbb
aam
fsubl
arpl
add
leave
pop
in
add
sub
adc
jbe
repz
rcl
inc
orl
popa
adc
lret
dec
sub
inc
insl
and
lret
sub
inc
pop
sbb
add
nop
push
and
mov
orl
mov
sub
dec
add
mov
xchg
mov
rolb
and
mov
adc
push
push
dec
das
push
push
fs
sbb
or
sbb
insb
inc
cwtl
xor
nop
js
jne
and
icebp
inc
dec
aaa
divl
ljmp
pop
call
sbb
pop
dec
jecxz
cmp
js
movsb
das
pop
js
inc
or
or
or
jmp
andb
ss
dec
mov
outsl
inc
jbe
and
fcoms
mov
xchg
mov
mov
jne
ret
sub
rcrb
pop
adc
inc
mov
mov
pop
lock
push
sbb
lret
pusha
jae
pop
cmp
rolb
sbb
push
mov
mov
int
inc
mov
mov
aad
add
aam
sub
pop
or
inc
push
imul
mov
repnz
loop
repnz
xchg
jecxz
push
mov
push
test
inc
jmp
aaa
mov
ret
std
ret
and
je
and
xor
jle
lea
jne
add
in
test
add
insb
inc
fsubrs
inc
adc
dec
or
xor
and
add
mov
cmp
jns
dec
das
aam
push
fdivs
pop
ja
rorl
daa
test
and
imul
pop
loope
sub
clc
push
xchg
lock
push
xor
mov
adc
orb
aaa
inc
adc
pop
lahf
inc
or
adc
fcoms
mov
and
push
sbb
adc
push
pop
inc
test
lea
and
mov
push
aad
cmp
add
sub
daa
and
push
mov
mov
mov
jnp
mov
imul
cmp
adc
jg
push
cwtl
inc
jg
push
jg
adc
mov
fisubs
test
or
sbb
pop
and
sbb
jb
aas
lahf
mov
lds
ret
jg
enter
repz
sbb
inc
fiadds
mov
sbb
inc
outsl
push
stos
sub
pop
fwait
mov
push
imul
sub
sti
mov
cmp
jb
daa
and
stc
jns
add
inc
cs
out
add
pop
lods
mov
icebp
add
fxch
and
push
lret
repnz
or
mov
dec
pop
stos
sub
adc
lods
sbb
mov
xchg
dec
and
mov
pop
cltd
aaa
mov
cwtl
adc
push
das
xor
hlt
add
sbb
pop
jg
movl
adc
dec
cld
js
adc
and
mov
pop
adc
push
test
adc
add
and
bound
xor
inc
icebp
inc
jl
mov
xor
lods
cltd
adc
jg
inc
or
and
lods
imul
lahf
fiaddl
test
add
sbb
andl
adc
inc
xor
or
add
in
add
mov
aas
lret
inc
push
fidivrs
dec
mov
add
mov
insb
pop
gs
add
pop
out
or
xlat
adc
mov
push
sub
xor
and
dec
xor
pop
push
and
or
push
push
outsl
insl
sub
mov
stos
je
test
or
mov
jns
sarl
mov
mov
push
es
lea
and
sbb
xchg
ja
in
mov
aad
mov
mov
jmp
push
add
outsb
and
pop
inc
aaa
or
test
cmp
int3
xorb
es
ss
sbb
int
dec
or
lods
push
adc
xor
ret
cmp
sub
sbb
jbe
ret
xor
pop
jge
cmp
fidivs
les
adc
int
inc
add
push
das
mov
ret
insb
out
mov
dec
mov
jae
je
fildll
arpl
pop
imul
in
mov
add
jl
subb
lcall
dec
cmp
and
adc
pop
and
jg
pop
push
mov
loope
mov
add
imul
insb
je
xor
popa
mov
aaa
movsl
dec
rorb
mov
sbb
push
inc
xor
scas
jo
rolb
cwtl
pop
mov
mov
int3
out
orb
xchg
cmp
mov
jbe
dec
adc
je
push
or
xor
inc
add
inc
push
inc
push
dec
xchg
inc
ret
xchg
pop
push
imul
mov
push
adc
stc
add
dec
add
dec
leave
test
pop
add
sbbb
or
pusha
nop
or
adc
or
loopne
iret
adc
xchg
psubd
cmp
mov
inc
push
or
push
push
adc
sub
rol
sub
out
pop
xor
std
inc
pop
inc
push
adc
mov
dec
arpl
mov
pop
and
sbb
adc
add
rorb
xchg
shr
push
test
cmpsl
lods
fld
test
push
and
inc
add
pop
mov
xor
push
sbb
subl
movb
popf
cmpb
adc
imul
add
add
mov
jno
orb
or
mov
movsb
push
fstl
popa
jne
cld
dec
mov
sbb
test
mov
shll
sbb
inc
sbb
ja
jne
pusha
jmp
push
adc
pop
enter
mov
cli
jnp
lret
sbb
and
inc
pop
mov
pop
pop
mov
cmpsb
lret
aaa
cli
fildll
test
pop
inc
fstpl
popf
xchg
fcompl
ljmp
mov
fdivs
enter
add
add
fimull
int3
adcb
lea
sbbb
and
and
outsb
jecxz
aad
inc
push
test
test
xchg
out
add
or
pop
lock
adc
mov
int3
jmp
xchg
xchg
fdivs
movb
popa
adc
cmp
mov
xor
xor
adc
mov
jge
inc
scas
and
outsb
pop
arpl
sarb
sbb
test
sbb
movsb
add
xor
inc
or
aaa
test
mov
sub
mov
mov
imul
inc
nop
inc
pop
movsl
dec
ja
mov
and
dec
insl
sub
inc
stos
cmp
loope
testl
dec
adc
jne
fucomp
push
push
orl
push
jno
mov
pop
mov
add
ja
mov
ljmp
xchg
into
lcall
test
or
xchg
insl
cmpl
ret
mov
or
sti
mov
pop
leave
aas
nop
or
test
shrl
test
jnp
fdivrs
mov
test
cmpb
add
cli
push
clc
adc
pop
mov
add
xchg
push
and
or
push
add
ss
sub
push
insl
rol
sub
mov
sub
mov
xchg
lods
push
aam
add
or
inc
pop
sbb
mov
sub
sbb
bnd
mov
adc
out
sub
sub
cmp
mov
sub
mov
outsl
lods
add
sbb
inc
ret
popa
hlt
je
and
dec
xchg
xchg
and
cld
push
add
mov
call
cld
je
movl
dec
dec
and
cmc
push
loop
sbb
push
jl
sub
sub
sar
mov
mov
xchg
sarb
add
sbb
in
leave
shrb
lret
sub
dec
inc
cwtl
pop
mov
pop
test
mov
add
pusha
dec
jno
and
mov
lods
addl
pop
mov
orb
in
or
xorb
pusha
push
clc
adc
mov
jnp
add
fcmovb
add
je
pop
cmp
cld
jns
nop
mov
mov
mov
pop
push
loope
mov
xchg
sbb
mov
clc
mov
das
test
xchg
xor
ret
pop
cmp
push
daa
cmpb
jl
loope
add
or
push
sbb
rcl
mov
int3
and
push
hlt
or
aaa
inc
pop
push
xor
push
lea
stos
lret
adc
xor
imul
xchg
add
repnz
sbb
nop
xchg
lods
dec
mov
dec
cmp
lods
out
xor
inc
and
add
inc
test
push
lcall
push
lock
pop
xor
pop
cmp
mov
movsl
jae
mov
cmp
jb
inc
add
fwait
pop
dec
daa
inc
dec
ljmp
cmc
push
mov
outsb
xor
inc
cmpsb
out
jg
dec
push
jns
icebp
add
and
mov
or
push
inc
xchg
add
xchg
pop
or
popa
sbb
dec
fistpl
mov
roll
dec
mov
mov
pop
ja
je
bound
dec
es
adc
pop
sub
cmp
sub
add
ljmp
mov
xchg
mov
xor
adc
inc
sbb
orb
out
cltd
add
dec
mov
jecxz
and
or
ss
dec
mov
or
test
scas
out
fcom
popa
bound
push
out
clc
jne
lods
and
jmp
dec
orl
cmpsl
adcb
loop
push
cmp
adc
rorb
adc
dec
mov
in
pop
inc
dec
adc
lods
push
inc
sub
and
jo
imul
xchg
mov
xor
bound
sbb
cmp
fdivp
xchg
iret
and
movsl
xchg
adc
sti
mov
inc
pop
aas
jnp
test
and
xchg
and
jge
inc
aaa
xchg
add
inc
and
add
cmp
stos
das
mov
sub
jecxz
push
inc
sbb
sub
movsl
jnp
and
xchg
mov
and
call
sub
lea
cmp
fwait
aas
shr
lahf
pop
xchg
push
ret
jo
mov
add
mov
js
inc
outsb
xor
inc
dec
lods
in
movsl
push
ficompl
mov
inc
nop
hlt
negl
call
cmp
cmp
push
push
inc
in
or
push
jl
pop
pop
movsl
aad
sub
pop
daa
xlat
pop
mov
dec
insb
roll
bound
push
jo
and
xorl
cmc
cs
xor
push
stos
test
push
mov
jmp
inc
mov
xchg
sbb
lods
adc
inc
sub
sarb
and
or
mov
ret
and
adc
xchg
cli
lahf
mov
cltd
lcall
inc
xchg
outsb
push
xor
adc
dec
add
sti
mov
insb
addr16
dec
push
add
test
loopne
or
imul
cltd
cmp
inc
inc
adc
adc
mov
bound
push
sarl
pop
pusha
jne
xchg
add
xor
mov
pop
aaa
cmp
inc
pop
sbb
mov
or
bound
les
mov
sarl
add
adc
push
repz
daa
js
cmpb
mov
mov
daa
js
sub
lock
inc
pushf
test
or
es
sub
lods
shrb
mov
sub
or
and
adc
setb
mov
pop
sbbl
sub
jg
inc
sbb
sbb
jg
or
iret
xchg
inc
cwtl
pop
scas
xlat
hlt
and
aam
mov
test
mov
push
ja
les
scas
add
jne
xlat
mov
pop
cwtl
fadds
call
adc
jo
fidivs
std
and
mov
mov
pusha
frstor
add
add
inc
jne
rcr
test
les
push
xor
pop
roll
rorb
push
out
movsl
mov
loop
pop
pop
shl
push
sar
mov
das
jge
mov
fcmovbe
hlt
sub
or
adcb
mov
add
inc
add
pop
sbb
add
inc
js
idivl
mov
sub
and
jl
xor
lock
or
inc
call
xchg
sbb
xor
cmpsl
stos
mov
mov
sarl
sub
test
negl
and
push
jo
mov
cmpb
push
mov
loop
cltd
ficoms
pop
jmp
pop
jp
ret
pop
popa
loope
or
mov
dec
sub
ss
lret
sub
xor
mov
pop
add
jo
jp
and
sub
aas
jle
push
push
call
sbb
add
inc
xchg
or
in
gs
fldcw
cld
sbb
adc
clc
lea
and
jp
add
or
mov
or
add
cltd
mov
fcmovnbe
jno
xor
jb
add
lret
xor
in
jne
sbb
inc
or
aam
ds
add
or
dec
xor
inc
push
add
mov
sahf
or
mov
xchg
inc
sub
mov
or
adc
jo
sbb
adc
sub
test
out
insb
call
js
ret
mov
out
ss
int
test
enter
jns
jl
lea
out
push
xor
sahf
addl
cmp
icebp
sahf
shlb
push
cmpxchg
fcoml
mov
es
sub
cld
pop
mov
cmpb
mov
sbb
jecxz
push
popf
cmpsb
movsb
xor
xor
xor
push
mov
mov
inc
adc
lock
loop
mov
fcoms
adc
jecxz
push
in
repnz
or
pop
and
es
sub
inc
imul
fcoml
inc
pop
or
and
push
mov
fdiv
in
fidivrs
rolb
mov
adc
pop
enter
push
rcr
and
in
pop
and
lods
push
add
pusha
les
cmp
push
mov
pop
aas
mov
dec
push
aam
adc
sbb
inc
dec
mov
push
rcrl
dec
jmp
mov
das
fiaddl
mov
push
push
mov
push
mov
push
push
pop
xor
flds
inc
insb
add
in
jg
cmp
std
outsb
inc
cmp
je
test
aaa
or
or
sbb
jne
pop
sbb
mov
adc
cmp
cmpsb
add
inc
inc
call
push
inc
in
nop
push
add
dec
xchg
add
sbb
mov
jg
lret
lds
inc
push
jne
xchg
push
in
dec
adc
js
outsl
and
xchg
jo
orl
bound
ret
pop
dec
sti
cmpsb
add
movb
add
test
lods
and
mov
mov
jne
or
es
mov
in
movsl
xchg
push
js
inc
aam
mov
sahf
mov
inc
je
adc
popf
xor
mov
xchg
add
mov
dec
pushf
popw
call
cwtl
pop
cmp
ljmp
das
int3
fists
adc
jmp
popa
jb
fs
sbb
inc
pop
mov
xlat
sub
filds
or
in
dec
mov
jge
mov
push
push
xchg
and
rolb
inc
inc
xchg
mov
fnstcw
mov
int3
push
in
sbb
pop
mov
push
inc
out
test
ds
mov
mov
in
fists
xlat
push
sbb
xlat
mov
int
adc
je
enter
loopne
out
jo
inc
or
and
lcall
pop
add
push
adc
pop
inc
mov
mov
jmp
add
mov
out
inc
or
push
dec
shlb
popf
push
pop
or
ret
xor
test
dec
xor
mov
mov
daa
adc
push
pop
sbb
daa
bound
cmp
sbb
push
mov
mov
mov
pop
dec
jmp
and
popf
and
or
add
shrl
inc
out
rolb
out
add
or
jno
jbe
cmpsl
out
jge
dec
nop
cld
sub
add
pop
jmp
in
out
loopne
push
test
or
inc
cmpsb
add
xchg
ret
inc
jno
testl
push
jmp
jne
shrb
xchg
adc
nop
add
adc
dec
rorb
ret
dec
enter
adc
rolb
jg
inc
inc
xchg
sbb
adc
and
add
pop
inc
sbb
mov
adc
pop
xorb
adc
call
or
add
ror
cmp
or
je
ret
and
add
mov
add
or
push
mov
cs
mov
jg
bound
cltd
or
push
or
mov
daa
add
pushf
mov
mov
dec
aam
xor
sbb
adc
xchg
mov
and
add
adc
nop
xchg
add
pop
jle
push
mov
adc
mov
or
adc
lret
push
jne
and
call
sbb
dec
aaa
push
imul
sub
xchg
and
and
pop
jo
stos
xchg
in
cwtl
dec
in
xchg
les
in
xor
cmp
ret
inc
out
pop
add
punpcklbw
xchg
aam
dec
test
pop
loope
adc
sub
scas
ds
xor
orb
mov
psubb
pop
cmp
enter
pop
sbb
int3
add
inc
inc
dec
and
sbb
mov
or
sbb
fimull
popa
mov
or
inc
popf
and
nop
push
flds
jl
sbb
jnp
push
pop
sbb
xor
push
pop
inc
dec
xchg
into
movsb
cmp
cwtl
push
loope
add
dec
xor
pop
mov
addb
xchg
cmp
jnp
push
lock
and
sbb
mov
adc
pop
push
pop
and
sub
out
xor
call
and
sbb
mov
pop
xor
adc
add
add
pop
lahf
sbb
add
add
mov
cltd
push
add
lahf
add
jp
enter
hlt
xchg
cmp
mov
clc
out
xchg
popa
fdivrs
or
aas
fadds
aas
mov
sbb
jno
push
dec
sub
xchg
add
xchg
push
ret
fmuls
in
inc
sahf
fs
in
lret
add
mov
stos
call
xchg
add
sbb
push
or
pop
pop
popa
mov
ja
add
add
xchg
push
mov
dec
xor
sub
je
movb
xchg
insb
cmp
and
ror
cmp
leave
jmp
xchg
xor
scas
sub
insl
cmp
sub
lock
push
and
push
mov
xchg
xor
ret
xor
sbbl
cmp
mov
popa
sbb
cld
movsl
andl
xor
ret
cmp
sub
xor
xchg
arpl
sbb
adc
xchg
test
outsl
call
outsl
push
xchg
sub
ret
xor
xchg
outsl
inc
shll
js
xchg
adc
adc
in
in
add
sbb
cld
imul
arpl
xchg
sbb
xchg
ret
add
enter
iret
push
and
shll
les
cmc
sbb
fadds
cmp
mov
xor
sbb
sahf
add
push
cmp
js
or
xor
ret
fwait
add
jmp
or
stos
shll
flds
mov
pusha
sbb
add
pop
lds
aaa
or
mov
cmp
pop
out
lcall
push
movsb
add
cmp
push
andl
xlat
or
std
or
jecxz
mov
mov
push
jmp
outsb
int
xlat
xor
jne
int
add
rolb
pop
push
aad
jae
xchg
out
cmpsb
mov
jl
and
test
lahf
pushf
ret
xor
mov
xor
and
icebp
adc
or
out
add
sub
ret
aad
sbb
dec
lea
push
sub
push
js
int3
outsb
xchg
mov
adc
jle
test
int3
fisttpll
cs
xorl
out
sub
jecxz
pop
nop
push
mov
pushf
orl
int
out
sbb
add
in
lea
lea
sub
xchg
push
cmp
adc
std
sbb
or
out
cmc
push
adc
or
je
jmp
and
add
xor
xor
sub
or
push
jmp
fs
sbb
adc
js
jne
mov
jmp
mov
or
jno
adcl
inc
add
ss
sbb
adc
dec
adc
add
add
movsl
fs
scas
mov
mov
test
and
imul
imul
ret
push
push
jg
in
xorb
dec
lahf
pop
add
pop
popa
jl
push
mov
cmp
or
inc
push
rorl
movl
pop
and
inc
or
rolb
cmpsb
mov
insl
and
adc
push
sub
les
inc
add
inc
ss
or
aad
mov
mov
cmpsl
push
adc
mov
dec
lods
in
mov
test
jnp
rorb
inc
enter
test
pop
fwait
dec
ret
push
push
pusha
test
xchg
add
inc
iret
rcrl
test
pop
mov
add
into
add
repnz
add
mov
push
std
scas
xchg
adc
xor
adc
mov
jle
out
add
outsl
arpl
nop
and
orl
fiaddl
ja
unpcklps
lcall
mov
lret
sub
mov
push
push
adcb
imul
cmp
mov
add
or
jmp
add
jnp
je
sti
mov
add
push
enter
push
or
popf
imul
inc
ret
int3
jae
push
ret
xor
or
xchg
pusha
pop
pop
adc
test
shl
add
cmpsl
mov
mov
mov
mov
sbb
and
fsubp
or
scas
stos
ja
or
int
gs
push
or
sbb
notl
adc
sub
inc
mov
jge
aam
adc
enter
test
nop
icebp
add
xchg
jmp
cmpsl
iret
add
repz
xchg
nop
insb
inc
jmp
out
pop
xchg
pusha
enter
add
popa
fdivs
cld
adc
adc
sbb
ret
xchg
and
test
jmp
out
out
xorl
sbb
or
and
add
popa
loope
stos
pop
push
or
sbb
cmp
inc
fcomi
or
dec
jecxz
ret
inc
or
lods
test
jmp
mov
movsl
push
test
push
ljmp
push
aaa
push
sbb
cltd
in
inc
push
cmp
jbe
sub
or
push
je
push
jo
or
daa
xor
fcompl
or
popl
jecxz
inc
in
mov
mov
mov
xor
cltd
push
mov
aad
inc
inc
aam
loop
and
lock
mov
push
js
stc
dec
cmpsb
add
je
sbb
ds
daa
jnp
xor
movsl
fbld
push
fbld
mov
and
aaa
dec
adc
mov
imul
insb
sub
jbe
lds
inc
sbb
and
arpl
adc
dec
inc
fwait
iret
hlt
js
incb
adc
push
adc
sbb
adc
cmp
popa
push
popa
and
lcall
in
push
imul
in
push
pop
in
add
jns
loopne
ss
stc
add
out
mov
push
sbb
les
jne
add
hlt
fistpll
mull
dec
mov
cltd
fadds
dec
mov
push
jns
sub
or
xchg
pop
fiadds
push
add
push
faddl
lods
add
sub
pusha
xor
out
xlat
adc
mov
add
adc
out
or
or
dec
cs
enter
fisubl
push
imul
sahf
test
ret
mov
cmc
add
or
pop
testl
push
sub
and
hlt
xlat
pop
pop
aam
mov
dec
aam
and
xchg
ja
mov
fsts
in
roll
dec
cld
decb
jne
stc
rolb
lret
loope
bound
inc
pop
mov
movq
or
add
jo
sti
popa
or
cld
scas
jle
repnz
mov
mov
and
js
popf
test
push
and
dec
loop
cmpsb
mov
cmp
or
popa
loop
mov
loope
test
xchg
in
xchg
es
or
dec
int3
addr16
and
iret
lods
cwtl
mov
add
adc
outsl
test
add
fbld
mov
push
jb
jle
jnp
add
mov
mov
iret
jl
adc
dec
push
mov
sbb
loope
add
rolb
cmc
or
sub
and
sbb
movsb
jo
pop
movsl
dec
inc
cmp
pusha
lahf
jmp
cli
cmp
hlt
inc
add
adc
dec
imul
call
fisttpl
adc
dec
pushl
jge
pop
sti
into
jne
jmp
mov
add
shlb
add
dec
mov
call
adc
or
jecxz
pop
in
shr
mov
adc
push
cli
dec
lds
rcll
popf
mov
sub
jp
or
sbb
pusha
push
or
popa
xchg
mov
test
icebp
rcl
nop
ud1
or
cmp
add
arpl
fadds
subl
push
sub
and
into
shlb
je
pushf
ror
cmp
pop
mov
pop
clc
stc
jl
punpcklwd
xor
add
cmpl
sub
or
xchg
insb
ja
add
test
jne
and
pop
push
cs
dec
pop
mov
or
xchg
or
nop
xchg
cmp
test
cmp
shrb
xchg
cmp
inc
int3
and
and
dec
repz
hlt
pusha
hlt
sub
mov
inc
xor
sub
cmp
rcpps
push
in
jbe
cmp
fdivs
cmp
cmp
ss
jbe
loop
push
inc
xchg
push
push
dec
dec
dec
dec
outsb
pop
mov
jg
pop
inc
inc
xor
inc
xor
xor
xor
aaa
cmp
pop
mov
mov
push
cmp
cmp
lea
addr16
inc
xor
cmp
cmp
fcmovnu
mov
xor
inc
pop
ss
inc
inc
aas
sbb
ss
jle
inc
inc
cmp
xor
mov
out
dec
in
xor
xor
inc
mov
je
jmp
ss
inc
pop
imul
addr16
inc
xor
arpl
inc
ss
inc
adc
mov
sbb
inc
xor
mov
pop
out
add
lret
push
shr
les
inc
daa
sar
cwtl
arpl
ja
pop
out
or
add
jb
fwait
mov
movl
lods
mov
pop
push
and
lret
js
adc
add
mov
adc
mov
mov
mov
rcl
add
cmp
orb
and
push
ret
add
xchg
repnz
or
and
push
push
or
xor
push
and
in
cmc
idivb
push
push
rol
inc
test
sub
cld
adc
in
inc
adc
std
fbstp
add
fldt
cmp
mov
push
add
adc
push
or
add
sub
adc
inc
sub
fsubl
add
ret
push
sub
sub
ret
lcall
pop
cltd
pop
lds
sub
xchg
xchg
and
fstl
sub
add
jbe
mov
add
and
pushf
dec
movsb
jo
xorl
push
inc
sbb
mov
or
push
pop
aad
cmp
mov
inc
xchg
out
icebp
adc
ss
xor
jns
test
lahf
cltd
inc
push
sbb
push
sbb
sub
and
fs
inc
and
fs
inc
push
adc
or
jo
sbb
add
test
adc
adc
or
add
mov
daa
sbb
nop
pop
adc
adc
push
adc
imul
popf
mov
mov
adc
dec
pushf
es
stos
add
daa
inc
xor
je
ljmp
ret
sub
pop
mov
pop
mov
pop
scas
or
adc
out
mov
cmp
dec
add
pushf
or
mov
inc
popa
loop
ret
imul
push
iret
add
or
adc
in
inc
rorb
cmpsb
pop
iret
outsb
fldt
mov
cmpl
push
loope
aaa
in
nop
aaa
mov
loopne
insb
add
int
push
push
pop
sub
adc
loope
adc
or
add
mov
ds
push
jg
sti
testb
jle
popa
dec
stos
test
and
jo
push
dec
mov
mov
adc
loopne
pop
test
inc
mov
bound
pop
mov
mov
dec
sarl
pop
popa
dec
incl
jl
ljmp
fidivl
or
mov
inc
scas
sub
iret
dec
push
add
or
mov
imull
faddl
cmpsl
lea
scas
dec
mov
pop
aad
adc
imul
hlt
mov
lea
add
int3
and
and
sbb
inc
jne
sub
push
add
fs
push
outsl
pop
inc
pop
pop
sub
inc
push
or
xchg
lock
push
into
loopne
sbb
push
push
fcompl
mov
add
pop
inc
push
iret
clc
mov
dec
push
push
in
data16
jne
out
and
subl
andb
inc
icebp
and
sbb
fs
or
lds
mov
call
js
subl
sbb
imul
jns
sub
ss
sub
dec
xchg
cmp
or
jnp
cmp
add
sub
dec
push
or
mov
sarb
loopne
jge
jl
lods
nop
negl
shr
pop
inc
add
loopne
insb
add
xor
xor
dec
jl
mov
ja
mov
mov
or
inc
data16
push
nop
sbb
dec
mov
cmp
push
aad
mov
dec
add
lea
pop
jg
orb
shlb
addr16
sbb
dec
cmp
cmp
test
stos
mov
outsb
enter
in
hlt
inc
movl
push
daa
ljmp
fldcw
jns
test
xor
xchg
or
ficoms
sub
lcall
adc
mov
dec
mov
cmp
fs
insl
sbb
rolb
and
push
mov
mov
mov
pop
pop
dec
cmp
fsubs
ja
push
or
sbbb
add
add
insb
adc
dec
cmp
xor
popa
data16
bound
adc
and
orl
sub
mov
add
add
and
push
daa
jo
xabort
in
sbb
inc
sub
push
or
bnd
dec
stos
mov
push
sbb
mov
fs
iret
cld
and
xchg
jne
addr16
ljmp
adc
or
push
repz
movzwl
mov
fcmovb
rcrb
and
pop
std
mov
nop
add
xor
ficomps
cmp
sub
cmpl
test
popl
int
adc
xor
mov
lea
ret
addr16
xor
mov
cmc
xchg
mov
push
and
add
test
or
push
gs
jnp
addr16
fdivs
xor
push
enter
loop
adc
es
into
adc
scas
jg
rcr
or
dec
inc
add
cmpl
stc
ret
xchg
push
jge
jl
fwait
call
arpl
subb
push
ficoml
jle
mov
xor
or
add
mov
rol
sub
aaa
sub
xor
into
jle
dec
push
xor
jmp
nop
jmp
mov
adc
arpl
lods
or
daa
cwtl
or
pop
or
test
add
sub
add
mov
js
mov
jl
mov
sub
jmp
ss
fimuls
jo
or
xchg
aad
adc
add
jno
and
and
rorb
adc
and
loope
clc
sbb
mov
movsb
dec
lock
in
xor
imul
outsl
jg
push
shlb
aad
int
iret
lock
push
es
dec
add
cmp
push
jbe
shlb
nop
lahf
shll
xchg
sbb
adc
test
scas
mov
sahf
dec
pop
mov
popf
add
popf
xchg
jnp
mov
xor
dec
dec
pop
cmp
lods
or
fdivrs
setg
mov
xchg
or
stc
mov
push
and
scas
and
inc
xchg
jle
call
push
out
nop
mov
mov
aas
mov
xor
loopne
movsb
pop
in
jmp
inc
mov
or
cmc
jp
xor
inc
jbe
xchg
xor
nop
lock
cwtl
push
jecxz
xchg
jmp
pop
inc
sahf
sub
into
sbb
push
hlt
add
bound
loopne
add
cli
sti
mov
hlt
dec
je
jle
inc
push
fimull
and
les
in
lock
in
mov
dec
push
fstps
pop
mov
jmp
inc
repnz
add
outsb
jns
fcoml
pusha
pop
rcrl
mov
rclb
xchg
sarl
xchg
adc
xchg
lret
sbb
add
cmp
fildl
stos
sub
sub
fdivr
xchg
mov
jle
scas
xor
pop
shrb
sub
and
pop
xor
jge
jle
lea
cltd
pusha
xchg
fs
int3
int3
jle
ret
and
nop
stos
int3
inc
outsl
jne
push
pop
loopne
pop
jne
fildl
jge
mov
leave
outsl
je
push
filds
xor
scas
xchg
cs
movsl
sbb
popf
add
dec
xor
rolb
movl
inc
shr
or
fs
lock
loop
cmp
lea
push
cld
push
rorb
iret
fnstcw
shlb
je
and
nop
inc
loop
or
add
lds
aad
sbb
lahf
and
xor
adc
cmpsb
mov
xchg
ss
inc
pop
call
and
cwtl
fadds
mov
addr16
out
xor
adc
cmp
adc
add
loope
movsl
mov
shrb
pop
xor
xlat
or
fsub
cld
into
leave
sbb
or
icebp
cmp
or
mov
mov
loope
sbb
call
ret
les
nop
mov
movsb
jne
and
clc
push
subb
adc
push
shrl
jle
dec
inc
and
pop
push
pusha
or
xor
imul
pop
mov
or
repz
mov
adc
adc
add
cmp
sarl
adc
pop
jmp
cmpb
adc
mov
adc
test
and
pop
xor
add
lock
mov
jae
push
inc
push
loopne
aam
inc
js
call
es
push
pop
xchg
jne
movl
push
sub
or
jnp
push
mov
xchg
push
xchg
rorb
and
inc
addr16
loopne
test
cmpl
jno
jg
idivl
or
sti
orb
adc
and
mov
inc
add
push
jmp
cmp
xchg
mov
sbb
cmp
dec
imul
push
je
cmp
or
cwtl
mov
and
and
mov
mov
jl
add
xor
pop
push
xor
pop
dec
daa
orl
in
add
cmp
pop
dec
gs
jl
push
insb
push
and
adc
jp
and
daa
imul
mov
dec
ds
sub
test
sti
pop
pop
aas
mov
sbb
mov
add
adc
shlb
cmp
or
adc
cld
fists
mov
push
mov
push
addb
lea
and
xlat
mov
inc
dec
push
add
or
add
sub
xor
xorb
xor
shlb
inc
nop
addb
sub
sahf
adcb
or
or
sub
push
add
cmp
jle
imul
repnz
shl
mov
imul
call
hlt
push
sbb
push
jbe
das
push
push
push
mov
push
mov
adc
fbld
or
fbld
pushf
jmp
cs
rol
inc
jae
add
lcall
push
add
pop
fidivl
loop
data16
push
call
ficompl
rcrb
mov
pop
lods
or
jo
repnz
rcl
xor
ja
mov
push
insb
imul
cmp
addb
add
add
lret
stos
add
bound
cmp
push
xor
jmp
fwait
fs
xor
and
lcall
fadds
int
int
pop
fcmove
pmulhuw
mov
shr
mov
stos
enter
pop
push
cltd
dec
push
add
push
pop
mov
inc
xlat
xchg
out
push
insl
xchg
pop
and
ficoml
add
adc
push
push
mov
mov
fnstcw
cmp
adc
mov
cmpsl
push
add
pop
and
xchg
or
cmpl
add
xchg
cwtl
mov
sbb
and
pop
loopne
sbb
xor
or
call
cltd
inc
xor
xchg
mov
mov
pop
and
add
sti
and
xor
pop
stos
inc
xor
jecxz
push
xor
insl
fisubrl
sbb
adc
int3
lret
iret
test
subl
clc
out
jge
daa
jb
push
xchg
ja
aaa
and
sbb
add
xor
cmp
cmp
rclb
push
sub
add
in
and
lods
sub
rolb
or
xchg
and
shll
jno
shlb
and
scas
adc
inc
xchg
enter
pop
sbb
enter
sub
sti
paddq
push
mov
mov
aam
dec
addr16
pop
int3
add
mov
pop
imul
gs
jne
push
nop
mov
loope
sbb
sbb
outsb
enter
arpl
xchg
insl
cmp
add
inc
push
dec
pusha
pop
mov
push
xor
push
push
in
inc
popa
sub
sub
push
das
mov
inc
sahf
mov
popa
fildll
mov
popl
dec
add
push
pop
out
push
xchg
cmp
add
lcall
sub
push
imul
imul
adc
sub
sub
xchg
sub
sub
pop
cs
in
add
aas
pusha
push
cmp
add
in
pop
jl
push
in
pop
jge
pop
push
push
mov
cmp
es
cmpsb
loope
stc
imulb
sbb
inc
push
xchg
add
in
cmp
or
sbb
adc
popa
dec
shll
xchg
test
shll
out
std
or
sbb
sub
xor
sub
dec
push
js
sub
xlat
mov
xor
adcb
mov
repnz
xor
call
addr16
pop
or
jns
jns
dec
sbb
sub
jns
sub
sbb
dec
or
es
mulb
push
mov
or
jp
cs
or
dec
adc
adc
pushl
or
mov
and
add
sbb
xor
sti
cs
inc
sub
jl
add
gs
or
cmp
and
mov
cwtl
adc
cmpl
and
fbstp
push
pop
push
mov
lahf
loopne
inc
or
cmpxchg
mov
pushf
pop
int
mov
push
inc
inc
pop
aas
in
inc
and
pop
jo
pop
subl
and
testb
pop
lahf
mov
in
jle
aaa
push
jo
daa
or
add
sahf
outsb
fs
jge
dec
outsl
insl
gs
add
sti
xchg
and
cli
cmpsb
pop
rcrl
cmovns
mov
add
inc
mov
lret
in
and
stc
aam
mov
mov
loop
push
dec
inc
cmp
sub
shrb
fiadds
push
pop
popa
xor
pop
popf
mov
mov
push
arpl
dec
or
push
sub
mov
hlt
mov
push
sub
xchg
jge,pn
mov
add
stos
inc
pushf
xchg
and
push
in
shlb
lock
shrb
mov
test
cmp
in
and
and
and
shlb
mov
int3
xchg
push
mov
mov
dec
mov
cli
xchg
mov
popa
pushf
arpl
leave
jns
push
jp
push
pop
fcmovbe
or
fldl
add
cmp
test
mov
or
in
cmp
pop
test
les
popf
lea
jns
gs
jae
rep
xor
pop
cwtl
ret
push
push
push
insb
pop
sub
sbb
mov
ja
mov
fwait
or
xchg
flds
cmp
sbb
xor
movsb
addr16
or
mov
outsb
movsb
emms
mov
dec
mov
sti
mov
sahf
push
inc
jbe
jl
xor
push
cmpsb
fistl
adc
cmp
xor
mov
push
adc
pushf
xor
sub
add
or
mov
mov
or
ret
or
jnp
mov
pop
mov
mov
xorb
xchg
je
nop
xchg
xor
iret
aaa
mov
adc
inc
mov
nop
mov
sbb
or
andb
pushf
cmp
or
or
push
enter
mov
xor
out
xchg
ss
pop
jne
and
in
xorb
adc
ss
add
pop
test
sub
ss
movsb
add
xchg
dec
xchg
outsb
gs
push
lods
pop
cmp
jae
and
rclb
sbb
pop
fisubl
aaa
sbb
fs
sbb
and
inc
dec
lahf
lods
insl
dec
add
fists
jo
pop
inc
pop
jo
xchg
cmpb
bound
cs
imul
enter
add
inc
das
call
dec
adc
js
scas
in
mov
hlt
pop
mov
mov
and
xor
xor
xchg
xor
mov
aam
sub
test
adc
addr16
and
or
cmp
push
fadds
movsbl
jp
daa
daa
push
mov
or
cmc
jge
push
mov
inc
lret
mov
mov
jnp
jb
dec
stos
sarb
jo
enter
and
xor
xchg
adc
into
push
mov
mov
jle
sarl
insb
sub
scas
xchg
mov
bound
imul
add
mov
mov
inc
in
xor
mov
loope
and
jae
mov
shr
mov
ds
dec
loop
sub
jne
mov
add
cmp
sub
lcall
jo
ss
out
and
or
push
pop
ret
add
push
add
lret
sbb
mov
clc
notl
add
inc
outsl
mov
add
mov
insb
pop
mov
mov
xlat
fwait
inc
xor
mov
cli
lret
fsubl
in
push
mov
push
dec
add
sbb
in
mov
adc
push
add
add
enter
push
pop
enter
or
or
xchg
or
push
jb
sti
fistl
pusha
in
shrl
cmp
aad
filds
adc
adc
ror
and
inc
dec
mov
jb
fdivs
pop
and
inc
mov
jb
dec
xor
or
xchg
push
cmp
jg
pop
mov
sarl
fs
mov
add
fs
scas
inc
push
roll
mov
adc
lret
mov
imul
pop
xor
pop
ljmp
cmovge
shrl
loop
and
add
add
dec
sub
push
cmc
xchg
out
or
incb
popf
popa
ja
sbb
out
jmp
lea
femms
xchg
pusha
mov
inc
xor
scas
rclb
inc
dec
push
sub
dec
mov
pop
dec
inc
fwait
or
pop
sahf
or
je
cli
pushw
sub
and
sbb
push
add
or
inc
and
gs
or
dec
sub
and
movb
int3
and
ret
and
mov
mov
adc
jl
or
jg
mov
or
or
sbb
jg
sub
std
cld
or
or
shlb
add
std
pop
mov
rcrb
mov
xchg
xchg
jp
adc
mov
scas
fistl
adc
push
sbb
test
sub
loop
sub
xor
aam
adc
xor
or
es
mov
and
inc
push
es
into
xchg
sbb
and
or
out
sbb
and
inc
dec
fprem
push
pop
mov
push
arpl
cwtl
pop
xchg
rolb
cmp
inc
jmp
addr16
dec
add
mov
je
ret
lcall
add
add
add
jmp
adc
or
mov
or
xchg
mov
adc
test
push
mov
scas
adc
xchg
jecxz,pn
add
inc
iret
jbe
fistl
sbb
inc
sbb
or
fldenv
daa
and
popf
adc
push
fsubl
or
sub
call
mov
pop
cld
sbb
fidivl
mov
mov
popa
clc
in
or
dec
inc
sub
pop
mov
cmovne
out
add
dec
push
xor
orb
stos
push
aam
pop
cmc
dec
test
rclb
add
daa
mov
xchg
sti
pop
push
pop
add
ret
push
es
push
iret
mov
inc
imul
ja
add
xor
and
and
inc
add
dec
add
xor
enter
outsl
mov
inc
adc
cmc
ret
test
mov
shll
jle
mov
mov
push
mov
or
mov
ret
ret
sub
in
jge
neg
adc
or
outsl
or
mov
xor
mov
mov
inc
xor
inc
adc
jno
or
icebp
hlt
shlb
pop
sbb
push
mov
pushf
pop
pop
pop
addr16
jmp
and
imul
dec
movsb
sbb
or
push
aas
xor
jo
mov
mov
or
rorl
out
jmp
pop
jns
pop
jmp
mov
sub
xchg
adc
dec
push
or
test
cmp
movq
mov
pop
jl
outsl
in
mov
sbb
call
mov
js
mov
inc
nop
cmpb
or
push
and
nop
mov
sarb
sub
dec
pop
shr
rcrl
or
lea
daa
add
add
fldl
inc
fimull
xchg
and
mov
jne
dec
pcmpeqb
push
push
mov
or
inc
idivl
ffreep
or
mov
sub
and
movsb
or
test
lcall
inc
jmp
rep
push
imul
pop
xchg
or
aas
test
add
sbb
inc
adc
jae
sub
shlb
sub
je
into
xchg
inc
add
cli
adc
loop
push
add
adc
js
test
xor
mov
cmp
sub
cmpl
jne
pop
cmp
clc
xchg
push
sub
mov
insb
sbb
test
inc
sbb
add
imul
sbb
push
cli
lock
test
shl
pop
and
jbe
or
add
inc
fidivrs
adc
fs
arpl
dec
ret
adc
xor
dec
add
mov
enter
jecxz
jmp
mull
lret
push
aaa
pop
add
add
mov
mov
mov
call
pop
int
rorl
lret
test
jg
loopne
jns
test
movb
adcb
leave
xor
ret
iret
jo
and
cmp
jl
ss
pusha
ja
add
push
inc
mov
outsl
xchg
xchg
fnstenv
adc
xchg
cmpsl
imul
cs
mov
dec
rcrb
xchg
dec
mov
call
mov
push
mov
push
or
add
mov
inc
fdivs
jne
gs
inc
adc
pop
mov
xor
call
fwait
les
negl
push
xor
shlb
jo
xchg
cmp
mov
sub
cmp
dec
jb
sub
jmp
or
mov
pop
mov
jg
or
xchg
push
cmp
mov
and
sti
xor
push
jb
sub
repnz
je
dec
je
pop
je
addr16
cmp
sbb
and
out
addl
sub
shll
into
mov
dec
xor
les
arpl
or
insb
jbe
xchg
mov
mov
sbb
pop
adc
add
imul
loopne
jns
out
xchg
mov
mov
imul
push
ret
popa
or
test
adc
or
add
aaa
dec
xor
imul
lcall
lcall
cmpb
fldt
sub
push
or
clc
lcall
cmc
shr
add
add
lea
mov
test
out
nop
lea
jge
adcl
mov
push
leave
or
mov
or
subl
adc
pop
dec
cmp
mov
pop
das
sub
test
jp
pop
pop
mov
sbb
xor
and
mov
push
push
gs
add
pusha
push
add
dec
xlat
ret
cmp
add
or
push
lods
cli
sbb
lea
lret
cmp
xchg
mov
mov
sub
stos
daa
test
pop
lea
ljmp
icebp
push
pop
dec
pop
sbb
sbb
inc
aam
testl
js
std
in
push
js
ja
imul
mov
or
and
loopne
sub
adc
ljmp
sub
sub
jmp
imul
cmp
xor
xor
pop
cmp
cltd
mov
sbb
add
sbb
insl
sarl
lcall
pop
jo
enter
dec
sar
aam
jo
popa
pop
ds
nop
sub
dec
push
sbb
cmpb
mov
cmp
dec
inc
adc
incb
sub
add
sbb
cmp
jne
clts
sbb
sub
sbb
fs
inc
adc
sbb
shll
sub
push
mov
movsl
cli
adc
sbb
das
mov
js
jge
test
xchg
rcl
dec
lock
and
loopne
mov
adc
mov
call
flds
mov
loope
jb
xchg
and
jecxz
pusha
or
mov
repnz
mull
cld
rorl
add
push
subb
jnp
stos
lret
stc
sub
mov
stc
add
xlat
nop
ret
insb
dec
push
cs
or
and
shrl
lret
adc
inc
pop
icebp
sti
scas
jae
jnp
sub
add
test
mov
mov
adc
sub
dec
add
jg
int
cmp
ja
push
repnz
jnp
daa
out
add
push
test
push
and
popa
or
cmpsl
icebp
mov
test
or
fnstsw
lret
ja
mov
into
scas
daa
lods
ja
leave
mov
pushl
dec
cmp
decb
cmp
popa
rcll
aam
addb
fnstsw
adcb
and
add
insb
imul
push
or
adcl
aaa
jg
pusha
mov
mov
push
sub
mov
loope
xchg
xor
ret
and
and
ds
dec
mov
cld
shl
loopne
xorb
sub
int3
shll
pop
pop
scas
xor
inc
sub
xor
jne
cmp
sub
pop
or
add
or
pop
aam
push
jbe
and
cmp
dec
adc
insb
sahf
stos
xchg
inc
inc
and
xorl
pop
movsl
jb
mov
pusha
mov
add
mov
mov
dec
cltd
jns
add
xchg
aaa
adc
test
movsb
adc
outsb
mov
dec
xor
and
mov
iret
andl
inc
sbb
push
or
jg
rcll
sbb
data16
aas
ficoms
test
xor
push
xor
sbb
out
test
xchg
lock
push
inc
xor
rorl
das
dec
or
js
add
sub
sub
mov
sbb
aaa
js
pop
jmp
cmp
ficompl
mov
rcrb
inc
cmp
xor
mov
data16
ss
inc
xlat
mov
pop
or
ja
adc
orl
pop
loope
pusha
mov
sbbl
mov
scas
lock
xchg
xor
inc
into
or
push
aaa
lock
clc
pop
mov
pop
adc
ret
or
jbe
inc
dec
cmp
jmp
icebp
jle
add
pop
cmp
ja
xchg
add
or
push
lcall
incl
and
push
mull
mov
cmp
dec
out
fcomi
mov
lret
inc
push
jne
sbb
pop
popa
mov
ds
int3
rcrl
fldenv
push
pop
xchg
push
pop
cmp
add
push
aas
mov
mov
xchg
mov
push
xchg
aas
mov
mov
rclb
rol
dec
cmp
adc
dec
push
stos
cmp
cmpsl
push
pop
je
cmp
xchg
push
movsb
or
cltd
dec
int
sahf
notb
sbb
lahf
adc
adc
add
loop
mov
adc
mov
insb
sub
fidivrl
mov
je
jns
test
push
addr16
cmpsl
outsl
fwait
add
jne
shrl
fsubl
daa
les
test
cmpb
mov
lret
jle
dec
push
repnz
iret
loop
xlat
je
rcrl
subl
mov
movsb
xorb
jae
pop
jle
pop
call
repnz
push
lret
aad
mov
lods
pop
fs
int3
adc
adc
int3
xchg
pop
or
adc
int3
or
aad
inc
mov
sub
ficomps
enter
mov
push
jmp
push
xchg
xor
ljmp
je
insl
push
xor
pusha
fs
add
loope
mov
mov
addr16
add
lea
mov
mov
sbbl
jne
mov
or
xchg
and
xor
mov
pop
xor
push
pop
xlat
adc
mov
mov
pop
mov
inc
subb
icebp
lock
lea
mov
cmp
xor
ss
jl
sub
or
push
push
adc
adcb
cmp
or
inc
and
pop
lret
mov
lahf
mov
outsb
mov
icebp
xor
lea
lea
mov
mov
mov
dec
mov
mov
daa
sbb
cmp
or
sbb
jb
das
jne
mov
mov
ja
inc
cmp
sbb
jg
mov
pop
mov
sbb
mov
popa
pop
jbe
out
mov
or
cmp
xchg
or
jbe
mov
cmp
xchg
push
mov
inc
lret
xor
inc
xchg
in
rorb
adc
dec
add
or
cld
rcll
cmp
add
lret
xor
repnz
adc
setge
xchg
adc
push
call
or
repz
mov
mov
out
push
sahf
add
outsl
pop
push
sahf
mov
sub
incl
sub
sbb
insb
mov
mov
aad
mov
pop
push
lock
insb
pop
jl
add
sbb
sahf
data16
lock
push
scas
cli
inc
add
add
je
out
insb
fmul
fcomps
pop
scas
rcll
inc
jnp
hlt
adc
popa
jl
adc
and
roll
lea
adcl
outsb
adc
aam
data16
adc
imul
ljmp
cmp
cli
sub
xor
fsincos
subl
jg
and
incl
out
je
ret
fwait
add
shll
xor
lea
push
lcall
or
addl
cli
xchg
adc
fists
inc
popf
out
adc
mov
into
jo
push
sti
shrl
add
incb
jne
scas
mov
fadds
je
push
lret
cld
adc
add
add
testl
movsb
stc
shl
out
xor
sti
out
lea
mov
inc
add
inc
je
mov
out
bnd
sbbl
dec
in
insl
dec
jle
ficoms
xlat
loopne
hlt
js
nop
iret
aad
ffree
arpl
cmpsl
xchg
lcall
pop
ss
jl
pop
inc
mov
scas
xchg
loop
mov
je
xlat
xor
in
es
sbb
je
dec
call
dec
mov
pusha
push
jmp
lea
bound
rolb
int
push
flds
xchg
dec
add
mov
popa
pushw
jnp
mov
cmpl
test
cs
sub
insl
jne
into
jno
adc
mov
mov
outsb
add
cmpsb
inc
or
adc
nop
jle
jl
popf
aad
shll
and
or
repz
scas
mov
adcl
jge
push
pop
xchg
loop
mov
pop
out
cmp
and
push
push
mov
push
jo
and
push
test
bnd
pop
xchg
push
pop
dec
mov
into
push
cmp
jmp
xor
subb
mov
jnp
dec
mov
inc
pop
pop
pop
test
xlat
add
out
sbb
pop
jo
and
jnp
inc
lahf
lret
loopne
mov
add
inc
loopne
sub
imul
hlt
popa
adc
stos
pop
add
fnstsw
cs
lock
sbb
inc
cld
cs
dec
out
ret
adc
xchg
jne
not
mov
stos
dec
mov
inc
xchg
sbb
into
jle
push
mov
add
jg
dec
cmp
jle
fisubs
mov
dec
sub
cmp
je,pn
and
xchg
sub
cmpsl
jnp
pop
mov
jg
aaa
cmpl
jb
or
and
pop
jmp
aam
push
or
jl
adc
xchg
loopne
push
mov
aaa
adc
aad
sbb
fstpt
xor
add
popa
cmp
pop
mov
cmc
xor
test
sub
je
inc
fbld
fdivr
insl
ss
jle
cmp
jae
push
aam
movsb
cmp
add
add
nop
jp
inc
test
pop
dec
sub
cmp
in
mov
decb
jg
clc
fwait
insb
lret
shl
or
jp
test
out
jg
dec
or
mov
and
mov
mov
xor
ss
mov
fsincos
fldenv
std
leave
lahf
sub
add
push
jmp
add
add
add
mov
popf
rolb
sbb
test
sahf
out
mov
test
adc
adc
lds
mov
mov
loopne
sbb
sbb
mov
lds
add
jecxz
das
jge
add
pop
mov
jae
nop
subl
sar
dec
cwtl
lret
jae
sub
jecxz
cmpsl
scas
int
add
cmp
dec
cmpsb
nop
pcmpgtd
or
sbb
sbb
or
adc
and
shlb
push
enter
rolb
leave
xor
sub
jmp
xchg
cmc
in
in
pand
mov
in
mov
int3
stc
daa
movl
push
jp
dec
pusha
and
sub
rcl
arpl
inc
push
in
mov
mov
cmp
sbb
xchg
mov
dec
icebp
inc
aaa
jge
out
add
add
addb
mov
mov
insl
pop
or
sar
pop
push
sahf
jb
out
out
call
movsb
adc
jae
or
push
pop
mov
out
in
jecxz
pop
xor
mov
mov
sar
sbb
mov
sbbl
ss
dec
repnz
push
add
lret
add
dec
insl
clc
dec
inc
dec
cmp
add
leave
inc
adc
dec
inc
or
push
xor
add
pop
js
pop
add
push
xchg
jecxz
and
jg
outsl
and
clc
fwait
mov
sub
xchg
hlt
or
leave
int
sqrtps
xor
jno
jne
pop
xor
xchg
decl
mov
cmp
addr16
and
mov
fisttpll
int3
cmp
pop
add
inc
jl
add
jp
push
dec
in
xor
xor
and
scas
loopne
cltd
xchg
mov
dec
jp
nop
pop
lret
js
add
imul
popf
adc
push
pop
lds
ret
cld
dec
push
je
fmull
nop
cli
or
adc
pushf
mov
nop
int
mov
sub
cwtl
or
push
mov
push
mov
das
push
and
pusha
mov
nop
stos
imul
add
mov
fsubrs
in
xlat
sbb
dec
sahf
mov
std
rclb
mov
cli
push
inc
jae
shlb
rcll
push
inc
xor
cmp
mov
push
adcb
into
xor
jl
and
inc
mov
or
dec
add
cld
jmp
xchg
xor
jo
leave
lret
dec
adc
xchg
adc
add
mov
push
inc
adc
dec
bound
pop
imul
fcompl
mov
inc
rolb
pop
dec
stos
adc
stos
dec
cwtl
dec
pusha
push
adc
decl
pushl
mov
imul
jo
adc
mov
movsl
fstpl
and
dec
loop
movsb
sub
icebp
daa
sarb
ret
shr
sar
push
and
jb
jmp
lea
shlb
std
or
sbb
cwtl
lret
push
push
sbb
xor
les
lods
sbb
cwtl
adc
jne
sbb
lea
mov
add
das
sub
mov
sbb
sub
mov
push
push
inc
int3
dec
andb
orb
mov
pop
or
inc
pop
inc
jb
xchg
test
inc
inc
push
pop
imul
fsubp
add
mov
pusha
dec
addl
push
cwtl
mov
jl
repz
xorb
insb
ljmp
cmp
inc
cld
dec
xorl
movzbl
sub
dec
jno
push
sarl
mov
jnp
adc
out
push
sahf
in
mov
nop
nop
mov
cmp
mov
loopne
jmp
roll
arpl
pop
or
repnz
jmp
test
pop
sbb
cmp
sub
clc
add
decl
mov
out
jp
mov
imul
mov
sar
imul
mov
mov
dec
cmp
ja
or
lahf
adc
cmp
popa
adc
lret
jno
inc
add
rorb
les
jne
cwtl
sub
mov
inc
or
pop
add
or
cwtl
dec
loop
insb
cli
aad
cmp
enter
and
adc
inc
and
pop
jb
mov
sahf
sbb
add
cltd
mov
jecxz
adcb
adc
add
xor
or
mov
cmpsb
scas
and
inc
adc
cltd
xor
cmp
mov
mov
cmpsl
iret
sub
sub
sub
xor
mov
negb
jne
add
icebp
sbb
inc
and
das
mov
insl
daa
lea
cmp
jns
xchg
mov
cld
inc
add
adcl
fistl
or
jne
mov
enter
pop
subb
add
push
sub
jmp
push
in
fadds
or
add
mov
sbb
fs
push
mov
cmp
mov
mov
push
mov
adc
dec
out
or
sti
or
add
push
xchg
cld
mov
jecxz
jl
adc
shll
test
push
out
cmp
repnz
jmp
imul
add
sub
push
mov
xor
mov
pop
mov
les
test
imul
mov
mov
mov
jb
pop
not
pop
and
push
daa
std
adc
xor
push
cltd
not
notb
xchg
call
jmp
xor
les
inc
mov
out
call
adc
rol
daa
fmul
or
jno
ljmp
dec
loopne
addr16
in
lret
add
mov
add
add
mov
scas
push
push
dec
movsl
es
inc
enter
cmpsb
and
insl
fmuls
js
inc
mov
fs
pop
xchg
les
sbb
pusha
mov
mov
cmp
data16
repnz
pushf
ljmp
ret
xorl
test
and
jb
cmpsl
dec
sarb
sbb
dec
fiadds
mov
test
push
push
push
mov
add
mov
mov
push
pop
mov
gs
sub
push
jne
into
pop
fbld
mov
mov
mov
inc
mov
movb
pop
add
faddl
add
xchg
xor
mov
or
sub
andl
sbb
or
subl
hlt
mov
sbb
or
lods
ret
fs
mov
in
cmovno
jl
push
in
mov
push
mov
cwtl
xchg
dec
xor
fsubrs
xor
and
and
xchg
pop
shr
inc
mov
sbbl
push
pop
dec
leave
and
std
sbbl
mov
mov
je
xchg
or
or
push
inc
pop
jl
add
and
sub
testb
pop
test
fildl
loop
jne
xor
ds
in
push
repnz
sub
notb
int3
sub
daa
loopne
insl
les
fsubrl
pop
push
xchg
aaa
push
xchg
test
popf
push
pusha
or
xchg
add
leave
cmpsl
and
add
add
mov
xchg
mov
mov
movsb
and
mov
mov
lea
jno
and
ja
fimuls
ljmp
xor
mov
or
or
cmp
das
cld
lods
adc
shrb
add
mov
sbb
negl
push
sbb
or
adcl
and
test
cmp
aaa
mov
sbb
pop
imul
pusha
sti
push
pushl
lea
aad
das
test
push
mull
push
ror
sbb
scas
dec
xor
jbe
js
mov
mov
xchg
and
pushf
icebp
cwtl
pop
dec
enter
xchg
xchg
shlb
xchg
dec
test
addl
lods
bound
dec
popa
movsb
stc
push
adc
movsl
pop
ret
and
js
cld
imul
or
in
add
add
sub
sub
xor
into
fcoml
fdivs
jns
jle
sbb
std
push
mov
movl
movsb
test
sbb
in
mov
in
sub
orb
sub
cltd
xchg
fnstenv
dec
mov
add
mov
iret
enter
lods
dec
hlt
add
add
xchg
test
leave
stos
popf
imul
pushf
sbb
in
test
mov
ss
fwait
dec
lea
or
and
in
or
adc
fmull
jae
cwtl
jnp
xchg
cmpsb
insl
ljmp
xor
fwait
jecxz
cmpsb
in
push
push
ja
inc
lods
cmpl
or
jne
testb
pop
je
push
jns
add
pop
lret
jo
lahf
jo
imul
push
pop
sub
out
lea
push
sub
mov
pop
pop
imul
adc
xchg
cmpsl
xor
bound
out
pop
adc
dec
test
pop
sbbb
and
push
adc
adc
lret
xor
jg
subb
push
aas
xchg
mov
fnstcw
jp
cmp
loopne
cmp
aaa
add
sbb
jns
clc
hlt
cld
sbb
stc
icebp
xor
sbb
call
aam
imul
inc
mov
movsb
add
popa
and
shrb
mov
or
dec
fwait
sub
pushl
cmp
or
sbb
in
xor
inc
hlt
inc
mov
and
sbb
sub
gs
add
pusha
je
ret
and
jecxz
add
sub
adcl
scas
jae
sbb
icebp
cmpsb
in
mov
mov
add
adc
xchg
lcall
mov
pop
inc
enter
pop
add
pop
orw
rclb
nop
popa
divps
dec
mov
or
add
pop
lods
movsb
fists
add
dec
in
nop
mov
sbb
and
jle
jne
dec
dec
rcrl
push
addr16
jle
iret
inc
in
shrl
inc
xchg
or
mov
das
je
popa
xor
int
sub
adc
xor
fmull
or
jo
rcrb
pop
add
mov
jecxz
sbb
mov
jae
outsl
je
pop
shlb
sub
mov
dec
mov
and
gs
je
mov
outsb
pushf
ds
fcmovb
lods
gs
xchg
or
jno
aas
xor
mov
jmp
pop
sub
jg
lea
mov
mov
test
mov
lret
adc
shlb
xchg
sbb
or
push
daa
mov
pop
fwait
inc
and
hlt
movsl
lcall
scas
cmp
add
dec
mov
sarl
outsl
clc
aaa
adc
xor
gs
xchg
addr16
ret
mov
pop
cwtl
sti
inc
fidivrs
insl
jp
or
movsb
mov
xchg
cmp
xchg
popa
fnsave
dec
cmp
pusha
xchg
rcll
sub
xor
jle
pop
loope
fldenv
add
and
pop
add
jecxz
cmp
adc
mov
cmp
sti
and
inc
push
mov
push
or
movsb
sbb
enter
mov
xor
enter
or
or
es
cmp
pop
mov
inc
push
mov
cmpl
cmp
adc
xor
xor
lcall
cmp
pop
inc
cmp
pop
push
push
mov
jne
xchg
xor
movsl
mov
and
pop
js
mov
rcrb
out
test
add
lcall
rcrl
bts
or
fldl
cmp
cmpl
fidivrs
test
cmpb
fs
jo
sbb
push
adc
test
sbb
add
jl
push
xchg
mov
xor
push
or
pop
mov
repnz
outsl
mov
rcrl
sub
or
stos
push
push
xchg
mov
jg
mov
cmp
jecxz
mov
xchg
and
lret
orb
sub
loopne
outsl
sbb
mov
popf
pop
inc
dec
in
adc
loopne
jle
call
mov
mov
mov
repnz
popf
rclb
xor
cltd
add
jno
fstpt
sub
fs
xchg
enter
sti
sub
sub
mov
mov
movsl
xchg
sbb
pop
pushf
add
ds
inc
push
add
push
shufps
jno
xchg
or
adc
push
sbb
adc
aam
mov
mov
jae
push
cmp
ja
adc
xchg
mov
test
lea
add
or
dec
sub
inc
add
pusha
shlb
lods
loope
mov
stos
fistpll
add
adc
push
mov
xchg
push
add
add
push
shlb
cltd
mov
call
xlat
rol
outsb
sub
insl
lcall
pop
aaa
mov
shrl
shlb
add
cmpl
jl
and
sub
lahf
cmpsb
mov
adc
pop
mov
dec
lods
xor
xchg
leave
movb
inc
pop
add
fisttpll
std
iret
stos
adc
mov
rol
shrl
dec
int
mov
pusha
lcall
cltd
sub
ret
fidivs
mov
mov
sub
daa
ret
xchg
inc
xor
dec
jmp
mov
xor
cmp
push
mov
in
insl
xor
shr
int
adc
clc
insb
movsb
push
mov
cmpsl
xorb
push
ret
push
pmuludq
sub
mov
dec
adcl
mov
push
xor
push
adc
sbb
add
std
push
jo
roll
cli
sub
add
mov
fmull
insb
or
or
mov
and
sub
add
dec
addl
adc
add
rorb
out
inc
or
sub
hlt
ljmp
dec
rep
adc
inc
xor
cwtl
mov
dec
cmp
shlb
dec
adc
lea
adc
fildll
sbbb
sbb
out
stos
mov
jne
repz
scas
sbb
andb
icebp
xor
and
add
enter
push
push
dec
movsb
sarb
js
mov
gs
pop
sti
push
push
rcrb
out
and
push
add
jmp
mov
movsl
or
mov
mov
imul
rclb
decl
inc
das
push
aad
lret
popa
dec
outsb
mov
pusha
dec
xchg
adc
and
mulb
or
insb
loopne
mov
add
ja
or
insl
cld
sub
adc
jg
pop
pop
mov
rorb
ret
push
mov
sahf
cmp
adc
jle
shr
push
add
add
sbb
dec
es
xchg
test
sbb
les
dec
or
pinsrw
add
loopne
loop
ret
or
sub
inc
inc
add
jo
push
push
sbb
push
adc
mov
push
jo
add
ljmp
and
mov
mov
fadd
aaa
outsb
pop
push
pop
lock
fsub
daa
mov
ljmp
in
and
loopne
push
rorl
sbb
inc
push
mov
int3
sub
int3
jo
jp
aam
fsubs
popf
std
jle
add
dec
popf
cs
mov
das
pusha
mov
or
push
js
pusha
jg
enter
notl
negl
mov
dec
aam
mov
dec
cltd
jl
xchg
test
leave
add
and
or
sub
rcll
imul
frstor
pop
cmpb
mov
in
push
loopne
adc
das
inc
jle
loopne
xlat
sub
push
mov
nop
std
and
mov
or
sub
stc
out
ret
or
hlt
insb
xor
int3
fcom
or
xchg
and
sbb
test
jmp
pop
and
lahf
call
xchg
sub
enter
jecxz
les
rolb
into
mov
push
push
sub
cli
les
sti
shrl
pop
sub
std
popf
into
mov
call
inc
push
inc
push
nop
scas
dec
cs
xor
or
jne
arpl
lret
push
xor
lock
ficoms
jle
pop
lods
lock
mov
inc
js,pn
sar
movsb
jl
push
jae
fidivs
sub
inc
push
movsb
pop
scas
adc
or
pusha
lcall
pop
xor
cmp
sbb
rcrb
out
and
frstor
hlt
mov
pop
popa
and
pop
outsl
mov
in
lock
nop
jmp
or
push
xchg
push
stc
addb
loopne
fistpll
fdivs
mov
pop
jmp
sub
or
or
dec
or
add
and
std
dec
fwait
nop
add
sub
add
pusha
and
push
add
mov
fs
inc
fiaddl
pop
xor
and
add
mov
ss
sbb
pop
xchg
int
mov
mov
sub
lock
push
mov
dec
rcrl
mov
push
pop
pop
push
add
popa
add
notb
inc
cwtl
call
rcrb
or
sbb
push
out
and
mov
mov
sbb
sub
adc
xor
jne
and
in
pusha
add
cmp
insl
leave
frstor
lahf
out
roll
dec
xor
ret
adc
lods
push
cltd
push
adc
mov
adc
lods
loopne
sub
or
push
arpl
jbe
push
outsl
loop
xchg
ss
jmp
or
popf
rorl
add
pop
add
lock
or
in
add
cltd
or
or
jmp
nop
pop
mov
lods
cmp
jmp
xor
sbb
scas
mov
xchg
add
xchg
cmp
add
cmpsb
push
mov
add
cld
dec
popa
inc
ficomps
call
dec
xor
inc
movl
adc
mov
cmpl
dec
out
and
or
aas
mov
rcl
popf
xor
adc
add
ret
adc
cvtps2pi
test
sbb
aam
inc
dec
mov
mov
or
xorb
cwtl
dec
xchg
and
mov
push
cwtl
test
inc
popa
mov
cmp
pop
pushf
and
jnp
inc
and
xor
mov
fsqrt
xchg
inc
mov
mov
nop
insb
add
fdivs
int3
jbe
xor
aad
inc
int3
imul
mov
xchg
cmp
insl
mov
push
sub
xchg
pop
cmp
hlt
pushf
aaa
xor
sti
add
out
add
pop
imul
add
push
sub
push
fcomps
push
cwtl
cmp
xor
clc
add
rolb
movsl
adc
inc
pop
mov
imull
and
arpl
add
cwtl
xchg
cmp
dec
lock
fsubrs
add
sub
ljmp
jmp
or
mov
jo
push
test
mov
sbbl
int3
adc
test
pop
cltd
lret
pop
rolb
xchg
jle
inc
adc
in
inc
les
pop
fwait
dec
daa
add
das
mov
lock
add
repz
and
movsl
push
mov
xorb
or
or
mov
adcb
test
insb
out
and
mov
sbb
mov
and
sub
inc
stos
repnz
inc
call
push
out
add
je
mov
jno
xchg
cmp
add
cwtl
fucom
xor
movb
or
adc
adc
or
xorb
mov
mov
adc
and
stc
lcall
sti
push
popa
or
shlb
orb
push
imul
jecxz
lods
jmp
sub
push
ret
lahf
adc
std
push
inc
cmpb
or
jmp
imul
push
mov
and
or
mov
jmp
lret
xor
cwtl
adc
jne
cmp
jne
mov
lds
xchg
adc
inc
add
mov
das
mov
push
inc
inc
pop
cmp
mov
in
xadd
add
sub
xor
lock
hlt
xor
jp
jbe
xor
mov
inc
ret
push
bound
xor
xchg
mov
cmp
imul
push
or
xor
mov
push
xor
outsl
adc
mov
xor
mov
mov
cmp
xor
jb
daa
push
dec
sbb
and
sbb
push
test
and
push
cmpsb
add
inc
cli
fstpl
cmpl
and
and
iret
lock
imul
movsl
loope
jnp
out
test
mov
imul
mov
jo
test
imul
imull
mov
mov
mov
lds
push
imul
addr16
xor
or
sbb
and
psadbw
fstp
shlb
push
fistpl
jecxz
test
sbbb
int3
xchg
fdivrs
iret
push
hlt
out
mov
js
lahf
aaa
ret
aas
movsb
dec
lock
inc
mov
icebp
test
cmp
ljmp
and
orb
loopne
movsb
jo
pop
xchg
enter
scas
inc
push
mov
add
js
add
cmpb
jmp
cmpb
test
cmp
fiaddl
shlb
sbb
pop
sub
lock
sub
push
xchg
and
test
push
mov
mov
aam
lahf
movsl
mulb
pop
lcall
dec
insl
kmovd
les
pop
xor
fucomip
add
insb
xor
xor
jecxz
out
nop
adc
inc
sahf
push
aas
sub
iret
into
mov
daa
dec
test
jmp
stc
adc
mov
mov
xchg
cmp
add
adcb
data16
jecxz
in
outsb
jo
jb
push
nop
scas
add
cmc
adc
push
cmpsb
inc
add
ja
inc
inc
cmpsb
mov
sbb
add
pop
mov
sarb
or
cmp
stos
jecxz
or
cmp
inc
or
out
pcmpeqb
pop
jbe
addr16
sbb
subb
in
mov
sbb
xchg
mov
cmpsl
imul
js
cli
pop
rolb
jbe
push
testb
or
push
dec
and
or
xchg
mov
jle
stc
inc
xchg
mov
out
xchg
mov
jle
test
and
fcomps
loopne
in
adc
arpl
sbb
ja
cmp
add
ss
xchg
enter
popl
hlt
mov
dec
push
dec
mov
movl
xor
add
and
xor
les
icebp
outsl
lea
adc
pop
mov
je
fnstsw
push
or
scas
mov
roll
pop
mov
scas
push
sbb
or
lock
xchg
scas
mov
sbb
xchg
cmp
mov
push
pop
repnz
or
repz
sahf
adc
enter
pop
and
les
sub
inc
mov
dec
add
adc
mov
dec
pop
and
movsl
mov
inc
sub
sbb
jno
push
bnd
add
and
xor
cmp
bound
xor
add
push
mov
call
cmp
cmp
add
cwtl
mov
xor
lds
mov
repnz
or
mov
mov
loop
cmpsb
adc
push
xor
xor
cmp
mov
ret
incb
cltd
add
lock
or
push
bndstx
sbb
add
and
pop
fwait
xor
mov
fisttps
movsb
data16
fstps
add
and
sub
fldl
xchg
or
mov
rcrb
or
cmp
repz
dec
dec
test
mov
enter
inc
lret
adc
inc
mov
subl
aam
jns
test
mov
das
add
out
daa
repz
xchg
sub
mov
aam
jns
sbb
fadd
test
pop
scas
mov
stos
jo
push
sbb
mov
ret
sarb
int3
idivl
aam
stos
enter
int3
add
daa
and
inc
dec
mov
ret
fdivrl
and
loop
mov
es
pop
and
ret
cmp
in
sahf
lock
sbb
pop
dec
add
clc
loope
sub
and
ret
sub
fs
mov
xor
nop
popa
cmp
xor
sub
push
or
or
and
leave
test
dec
mov
xor
push
pop
add
int
sbb
push
dec
sub
mov
hlt
imul
pop
loopne
mov
lcall
dec
push
push
cld
jne
das
xchg
sub
xchg
test
stos
test
in
mov
mov
xchg
adc
xchg
cmp
xor
xor
mov
pop
inc
mov
and
orb
test
xchg
jl
clc
add
pop
les
or
sbb
or
and
sbb
pop
or
inc
fadds
cmp
jae
pop
push
add
test
test
sub
or
movb
daa
js
inc
and
je
add
xor
mov
repnz
jne
and
xlat
xor
filds
and
popf
adc
push
jns
push
mov
outsb
stos
push
jmp
mov
in
adc
xlat
movsl
lds
xor
pop
add
and
sahf
jbe
test
pusha
ret
sbb
add
movsl
sub
lods
loope
lcall
adc
divl
push
fdivl
mov
shlb
jne
cmpl
xchg
decb
mov
rcr
mov
int
mov
imul
push
subl
mov
mov
rcrb
push
rclb
sbb
cmp
inc
push
dec
push
cmp
addb
sub
lods
out
jle
cmp
cmp
jbe
adc
jae
xchg
jge
arpl
cmpl
jo
rclb
test
xchg
inc
adc
inc
enter
push
mov
inc
inc
inc
in
add
adc
test
lods
outsb
adc
pop
jo
jne
or
std
mov
fists
mov
inc
xor
sub
mov
test
push
movsb
add
and
sbb
cmp
pop
cmp
sub
push
js
adc
xor
or
lods
mov
or
xchg
je
and
or
mov
iret
mov
add
jne
mov
cmp
outsl
cmp
jb
mov
sbb
dec
ds
mov
cld
mov
nop
cld
enter
adc
and
or
add
push
and
fstl
push
pushf
inc
push
sbb
mov
cwtl
call
or
mov
mov
pop
ss
add
sahf
fisubs
outsl
cmp
jp
xchg
ja
lock
cmp
inc
sbb
adc
orl
cmp
xor
sub
sub
icebp
xor
jecxz
mov
call
arpl
pop
xor
mov
mov
jae
insb
add
dec
adc
nop
xchg
stos
sti
shr
sub
sahf
cmpsb
shlb
sub
and
imul
and
es
xor
sub
dec
push
pop
inc
fbld
and
mov
movsb
cmp
mov
add
or
dec
and
and
lock
adc
movsl
push
add
or
or
cmpsb
inc
or
cs
adc
dec
sbb
roll
mov
dec
jge
insb
incl
jg
and
jge
sub
cmpsl
fs
cli
mov
dec
add
aas
inc
sub
dec
and
out
inc
inc
orb
xchg
test
imul
les
inc
sbb
jl
cmpsb
jns
lret
ja
xchg
mov
mov
xchg
lock
lcall
cmc
sub
adc
and
xchg
icebp
jg
pop
dec
imul
pop
dec
gs
push
daa
imul
out
fbld
jo
pop
jb
jae
push
xchg
lcall
inc
cli
lcall
xor
jno
out
push
pusha
pusha
jmp
test
pop
je
pop
mov
sub
fs
pop
cmp
addr16
xchg
dec
push
das
pop
lds
rcl
push
mov
aas
jg
nop
adc
mov
and
and
inc
leave
jmp
mov
add
inc
inc
inc
pop
jge
and
addb
in
push
ret
clc
adc
jle
and
mov
adc
shlb
mov
sbb
jns
or
insl
in
pop
mov
or
cmpsb
inc
jmp
mov
xor
and
push
popa
mov
push
popa
stos
insl
jae
fucomi
and
dec
and
push
mov
andb
sbb
movsl
loope
pop
ror
pop
dec
ss
pop
mov
cmpb
pop
dec
insb
mov
es
in
and
lock
test
popa
jns
cmp
es
mov
movb
push
fsubs
push
jg
repnz
lock
adc
inc
inc
adc
cs
add
hlt
nop
shll
inc
jmp
mov
mov
lea
sub
popa
addb
inc
ss
push
movsb
rcr
add
and
jmp
pop
inc
in
stos
call
pusha
scas
mov
inc
jg
pop
add
mov
dec
mov
pushf
scas
dec
xor
jl
test
inc
dec
xchg
xchg
inc
mov
shll
cmp
cltd
add
dec
sahf
sbb
in
clc
mov
cltd
hlt
out
xchg
mov
insl
lock
push
and
mov
pop
cmp
inc
imul
mov
push
pop
sub
pop
add
add
push
scas
outsl
rol
test
adc
cmpl
out
jne
adc
jb
movsb
sbb
nop
ljmp
mov
setne
enter
bndstx
cld
and
xor
fidivs
sbb
js
fisubl
movsl
and
mov
enter
fcoms
test
call
faddp
jecxz
add
jmp
add
and
xchg
xchg
dec
sbb
loopne
out
mov
xor
or
and
cld
cmp
xor
cltd
pop
pop
rorb
adc
je
movsb
push
xchg
insb
mov
push
sarb
pop
cltd
in
popa
adc
daa
jb
and
repnz
or
in
inc
imul
dec
loopne
repnz
shl
push
adc
mov
fsubs
adcb
push
and
dec
in
push
fadd
cmp
xchg
lahf
movsb
mov
jbe
adc
test
repz
pop
cs
pop
js
xchg
inc
mov
ret
pop
dec
sbb
ret
in
enter
adc
mov
pop
sub
outsb
jecxz
mov
test
mov
jnp
sbb
pop
clc
push
jb
outsb
inc
daa
std
sub
in
and
and
inc
and
mov
push
fs
and
leave
mov
sbb
sbb
mov
inc
repnz
in
adc
jbe
push
add
test
and
movsb
cmpsl
aam
and
xchg
sbb
lods
cmp
mov
movsb
dec
or
add
mov
mov
cmp
pop
ret
fadd
jmp
in
repnz
mov
mov
aaa
into
ror
inc
in
jle
jae
imul
aaa
mov
and
loop
out
pop
pop
jg
sbb
insb
add
dec
mov
jbe
or
adc
out
fiaddl
test
ds
ljmp
dec
fs
loope
dec
xchg
add
jns
push
mov
test
add
loopne
nop
inc
adc
not
xchg
sahf
ror
data16
insb
pop
inc
jo
aas
xchg
dec
push
add
inc
insb
loop
mov
xor
int3
mov
xor
jg
mov
mov
jbe
sub
adc
push
push
jb
and
fsubrs
nop
test
test
dec
clc
mov
dec
popa
js
loop
es
dec
int
je
rclb
xor
jle
fs
lock
lock
xchg
adc
insl
jmp
jbe
rol
adc
mov
into
add
add
outsl
insb
ds
leave
dec
add
mov
adc
sub
mov
inc
xchg
xor
xor
jae
and
mov
mov
rorl
pop
adc
inc
pop
sub
jno
or
in
ret
mov
test
sbb
or
push
movsb
sbb
imul
and
ss
aas
iret
nop
test
add
jo
and
jo
cmp
mov
jbe
dec
ja
iret
rclb
adc
push
leave
cmp
call
adc
push
xor
pushf
mov
or
jmp
sbb
mov
vunpckhps
push
aas
iret
sbb
push
add
test
jo
test
or
xlat
cmpsl
add
arpl
and
xor
loopne
mov
dec
outsl
jae
fsubrs
aas
fistpll
mov
sub
cwtl
push
js
push
lahf
xor
out
sbb
pop
sub
push
dec
inc
js
imul
xor
aas
add
mov
daa
test
mov
cmp
mov
das
rcrl
out
sub
add
roll
and
add
mov
int
xor
sbb
xchg
jp
lcall
push
ret
dec
in
add
rorl
xchg
xchg
or
imul
push
sbb
push
or
enter
icebp
repnz
and
and
and
cld
orl
std
jmp
or
enter
jecxz
enter
in
enter
out
jmp
ljmp
in
out
out
rorb
enter
shll
enter
aad
enter
xlat
fcomp
and
faddl
rorb
and
ret
enter
and
and
int3
orl
int
iret
mov
xor
and
and
and
and
mov
mov
xor
and
and
and
and
lods
orl
lods
scas
scas
nop
or
enter
xchg
xor
and
and
and
pushf
orl
popf
sahf
lahf
orb
and
and
and
sbbl
int3
inc
mov
pop
int
mov
add
sbb
insb
pop
daa
lret
push
or
mov
pop
sub
mov
push
push
xor
jne
push
push
or
pop
xor
jne
mov
jl
inc
adc
or
pop
cmp
jo
xchg
xchg
cmc
push
mov
cmp
push
push
push
stc
insl
das
jae
dec
hlt
jno
jns
inc
inc
or
push
adc
mov
test
inc
dec
dec
xchg
sbbb
pop
pop
mov
jo
add
pop
adc
pop
jmp
sbb
add
add
and
xchg
and
push
pop
or
xchg
and
or
or
sbb
and
xchg
push
movups
xchg
and
adc
adc
sbb
and
xchg
push
pop
sbb
xchg
and
sbb
sbb
sbb
and
xchg
push
pop
and
xchg
and
and
and
sbb
and
xchg
es
sub
xchg
and
sub
sub
sbb
and
xchg
cs
xor
xchg
and
xor
xor
sbb
and
xchg
ss
cmp
xchg
and
cmp
cmp
sbb
and
xchg
ds
inc
sbb
inc
and
xchg
and
and
xchg
inc
inc
dec
sbb
dec
and
xchg
and
and
xchg
dec
dec
push
sbb
push
and
xchg
and
and
xchg
push
push
pop
sbb
pop
and
xchg
and
and
xchg
pop
pop
pusha
sbb
arpl
sbb
and
xchg
addr16
and
imul
insb
insl
jmp
outsl
push
push
inc
cmp
fwait
sub
outsb
jne
and
outsb
punpckldq
dec
rorb
jae
ja
fstl
pop
xor
imul
pop
jo
out
mov
push
sub
outsl
xchg
push
loopne
inc
push
scas
mov
movl
pop
outsb
xor
push
xor
in
outsb
nopl
in
jnp
pop
push
pop
jb
jbe
pcmpgtd
push
jae
mov
xchg
sub
dec
push
pop
push
insb
mov
adc
cmp
cs
insl
mov
lcall
push
add
movsl
xchg
jo
imul
pop
push
jo
fwait
orb
push
mov
add
dec
mov
adc
or
xchg
inc
dec
jae
leave
mul
sub
mov
push
outsb
add
daa
mov
pop
cmp
add
push
outsl
add
mov
arpl
cwtl
or
and
das
add
das
or
insb
cmp
popa
das
iret
add
aam
addr16
sub
sbb
inc
iret
push
cmp
sub
cmp
pop
pop
and
daa
fcmove
dec
loopne
xor
push
cs
fisttpl
cmc
fisttpll
push
inc
jne
xchg
cmpsb
adc
inc
sub
rcr
pop
jg
in
inc
push
cmp
adc
push
mov
cmpsb
insb
mov
pop
jne
hlt
ss
das
push
jnp
push
dec
dec
mov
dec
mov
pop
dec
outsl
lods
dec
lods
pushw
dec
shll
pop
push
cmp
stos
shll
aaa
push
push
jbe
inc
fs
cmp
test
outsl
or
lea
push
outsl
pop
imul
dec
and
pop
push
dec
dec
sbb
sub
gs
lgs
ret
daa
xchg
xchg
bound
adc
shrl
daa
dec
dec
clc
lea
pop
add
inc
inc
outsb
rorb
push
das
push
sbbb
nop
les
push
cwtl
jmp
mov
inc
das
push
xlat
insl
outsl
insb
sbb
cmp
sub
outsl
adc
out
das
and
pop
mov
mov
cli
lock
fs
hlt
aaa
or
dec
icebp
nop
test
jp
push
fildl
fs
inc
pop
iret
in
xchg
xchg
lret
sbb
xor
and
add
add
mov
js
or
sbb
aaa
mov
inc
outsl
cmp
add
bound
das
ficomps
pushf
icebp
or
jne
push
sahf
mov
rcrb
mov
pop
mov
fadds
xor
sub
fwait
ret
pusha
fs
fcomp
push
mov
ja
cwtl
fsts
inc
mov
testb
and
dec
fcomip
sbb
xor
mov
jae
jecxz
inc
jge
mov
addb
adc
and
fadds
push
or
add
mov
xor
roll
and
pushf
popa
mov
jge
mov
or
rorb
push
ljmp
inc
xor
mov
dec
and
rclb
pop
aaa
mov
pop
scas
mov
and
adc
mov
in
jbe
mov
push
pop
ja
dec
stos
rclb
or
fmuls
push
fidivrs
inc
shlb
loopne
je
ja
inc
movsl
and
adc
ja
xlat
and
aad
loopne
adc
dec
in
add
mov
push
lret
pop
pop
or
mov
or
add
xchg
mov
loopne
add
xlat
mov
jne
stos
aaa
les
ds
loopne
sbb
add
mov
loope
in
jbe
aas
xlat
pop
dec
loope
xor
gs
ret
sbb
xor
les
push
rcll
add
das
test
cmpsb
mov
insb
push
prefetch
dec
add
or
xor
mov
dec
out
and
push
and
jl
lds
xchg
sti
loope
and
push
sbb
cmpsb
xchg
push
sbb
push
jmp
adc
cmc
sbb
xchg
add
mov
add
push
scas
mov
xor
mov
iret
xchg
enter
adc
add
mov
stos
lret
movl
pop
or
in
xor
mov
add
ret
bound
add
ret
xlat
fstp
outsb
push
sbb
ret
or
mov
inc
inc
dec
dec
dec
push
les
mov
xor
xor
dec
cwtl
js
daa
aaa
cld
add
jo
int3
push
out
sub
mov
ja,pt
add
dec
cs
in
scas
out
insl
push
push
jnp
pop
ss
mov
mov
popf
dec
pop
xor
imul
mov
imul
cmpsb
imul
imul
lcall
inc
dec
lcall
xchg
in
dec
add
dec
stos
and
fisubl
sbb
jo
and
mov
pusha
lret
push
add
inc
cmp
adc
inc
inc
xor
adc
xor
testb
andb
js
inc
mov
dec
xchg
rolb
hlt
in
movsb
and
push
jl
les
inc
xchg
fs
dec
insb
xchg
mov
push
push
inc
inc
sub
xchg
xor
shrb
cld
rorb
sbb
xchg
or
sub
add
imul
add
fists
ja
adc
fmuls
mov
test
rol
and
sti
or
es
jmp
movsl
lea
in
sbb
mov
dec
ja
shrb
imul
pop
nop
testl
jb
jl
hlt
push
rorb
lock
mov
loop
outsb
and
sbb
xor
sub
ficoms
or
and
mov
sbb
int
inc
and
es
push
xchg
dec
sbb
xchg
call
xchg
adc
push
repnz
xor
or
leave
add
call
loopne
fldenv
mov
jmp
rcrb
faddp
xor
inc
imul
inc
int3
negl
xor
adc
or
loopne
sbb
sti
ret
out
pop
pop
in
pushf
mov
out
insl
out
insl
dec
clc
repz
hlt
jo
push
int3
jmp
ss
pop
pop
in
enter
rclb
push
inc
fdiv
or
fcmovbe
pop
imul
in
push
sbb
xor
mov
jbe
jns
imul
push
push
mov
clc
pop
xchg
gs
insb
or
pop
lods
sbb
test
push
or
mov
sbb
inc
aaa
in
fisubrs
insl
mov
sbbl
xchg
shrl
add
fadds
mov
mov
mov
call
js
movb
mov
adc
movsb
cmc
stc
inc
add
jno
aam
popa
xor
add
jae
rorl
loope
dec
mov
lea
je
mov
enter
sub
and
and
clc
add
ret
leave
hlt
jl
lock
mov
push
add
push
in
mov
xchg
adc
outsb
xchg
dec
in
jg
xor
adc
push
push
mov
lods
pusha
jne
in
xchg
xor
int3
jl
sub
ljmp
and
cmpsb
mov
add
sbb
prefetch
adc
call
insb
jns
and
in
cmp
pop
jae
enter
mov
es
outsl
sbb
xchg
imull
push
dec
fmuls
add
jns
outsb
pop
cltd
lock
inc
mov
loopne
clc
push
or
in
loopne
leave
mov
hlt
repnz
or
mov
mov
dec
pop
enter
ja
les
insb
and
push
hlt
rol
aad
inc
jmp
pop
mov
push
xorb
pop
cmpsb
jne
or
add
mov
insb
add
pusha
push
xchg
mov
ret
mov
xchg
or
lock
inc
nop
ja
or
in
lea
int3
in
or
adc
jno
sub
ret
mov
mov
mov
and
xchg
es
push
push
push
mov
push
or
and
sub
andb
iret
mov
adc
out
arpl
pop
and
out
in
or
push
sbb
mov
adc
xor
ret
xor
mov
xchg
sub
jl
mov
movsl
dec
mov
pop
add
out
stos
pop
dec
jle
add
inc
jle
hlt
mov
xor
in
ja
or
xlat
pop
and
jbe
cld
shlb
pop
outsb
sbb
jns
jns
sbb
cld
inc
cmpl
add
ja
inc
pop
or
leave
outsl
sub
add
and
std
mov
and
out
filds
push
adcb
mov
sbb
mov
jle
push
mov
in
and
push
cwtl
push
roll
orb
data16
cmp
push
clc
sbb
adc
idivb
dec
and
push
fmulp
sbb
xor
or
sbb
and
in
pop
int3
popa
adc
into
pop
xchg
cwtl
xchg
adc
mov
adc
mov
sub
shrl
push
sub
push
fwait
insl
iret
mov
into
mov
inc
sub
adc
or
jle
xchg
pop
sbb
mov
mov
add
mov
das
add
mov
add
xchg
pop
sub
adc
lretw
mov
and
xchg
ja
sub
mov
test
pop
jne
in
inc
push
inc
lds
adc
xchg
push
push
dec
xlat
leave
lcallw
lock
mov
pusha
icebp
movsb
dec
test
loopne
or
repnz
mov
stc
outsb
xor
push
dec
pop
mov
mov
mov
ret
nop
repz
sub
jnp
fwait
popa
test
push
xchg
repz
adc
movsb
shll
mov
adc
rolb
mov
jle
and
sbb
test
xorb
pinsrw
inc
lods
xor
aad
or
cmp
add
mov
inc
sub
imul
pop
xchg
in
hlt
aaa
push
test
hlt
iret
sbb
dec
imul
push
sbb
icebp
clc
pop
leave
lcall
jl
adc
adc
push
in
xor
fiadds
jl
xchg
outsb
cmp
test
push
sub
sub
or
adcl
movsb
push
xor
jb
pop
sub
xchg
or
push
imul
mov
xlat
cltd
push
mov
out
mov
pop
cmc
and
jns
mov
in
flds
nop
pop
xchg
in
lret
sub
jns
scas
hlt
inc
add
lock
add
in
inc
push
xchg
add
and
iret
push
dec
inc
inc
jle
add
popa
add
mulb
xchg
dec
cld
xchg
mov
cmp
in
loopne
mov
lock
call
dec
aas
or
lcall
mov
repnz
test
push
mov
and
and
and
dec
shrl
inc
inc
add
sub
dec
xchg
inc
dec
dec
fimuls
push
rorb
inc
inc
pop
nop
or
jecxz
xchg
clc
push
inc
or
out
jo
adc
ds
arpl
xor
imul
loopne
movsb
mov
jne
adc
jp
add
stc
sub
push
rclb
movsb
loopne
add
mov
jo
cmpl
and
leave
pushaw
jbe
stc
in
xlat
outsl
push
adc
or
jns
ffreep
stc
add
mov
js
adc
mov
inc
jge
mov
dec
and
cmp
pop
inc
add
lods
pop
daa
lcall
movsb
push
jg
pop
and
mov
push
sbb
sbb
and
hlt
insb
dec
enter
push
xchg
sub
inc
jno
xchg
jle
jge
cmp
adc
mov
test
inc
add
and
outsl
aaa
sbb
pop
pop
jne
icebp
dec
das
inc
jmp
adc
or
aam
jbe
xor
test
mov
add
movsb
sbb
mov
cmp
adc
nop
inc
push
add
sbb
inc
push
sbb
and
fistpll
rorb
xor
mov
hlt
clc
call
cli
mov
test
xchg
mov
cmp
mov
mov
jo
test
jns
repnz
test
lock
mov
sarl
jl
shrb
lds
insb
dec
or
xchg
movups
movsl
add
xchg
aas
inc
push
pop
addr16
addr16
xor
insb
add
jge
and
xor
pop
xor
inc
pusha
and
cmp
rcll
xor
pop
int3
imul
cmp
pushf
into
jae
andl
dec
dec
push
movsb
push
pop
adc
push
ret
mov
subb
mov
add
sbb
sar
adc
cltd
leave
push
call
xchg
push
push
cmp
aaa
add
out
xchg
or
and
adc
jo
inc
sub
xchg
int3
or
in
enter
aas
in
js
cltd
movb
cmp
das
jb
xor
das
inc
or
mov
pop
cmp
mov
decl
leave
add
sti
xor
add
push
jne
add
cmp
dec
push
dec
outsl
push
jne
das
push
gs
push
inc
jb
add
popa
je
popa
inc
bound
popa
jb
inc
jo
jns
negb
rcrl
insb
pop
jne
xlat
repnz
out
dec
arpl
jbe
dec
enter
pusha
sti
inc
imul
ret
xchg
test
sbb
fidivrs
inc
insb
outsl
bound
mov
jne
adc
lods
and
int
jecxz
sbb
jae
push
rol
mov
push
sbb
mov
or
imul
mov
adc
es
push
mov
call
fcmovb
or
lods
test
pop
pop
add
adc
push
outsl
iret
mov
pop
lock
inc
add
mov
std
dec
adc
xor
fcoms
mov
inc
movsl
out
ror
or
push
fdivrs
mov
sbbl
fisubl
and
jb
movsl
add
mov
add
xor
mov
ss
movhps
xor
loopne
dec
push
sbbl
mov
cli
push
shrl
arpl
out
adc
inc
mov
in
cwtl
rorb
test
ljmp
adc
inc
jo
movsb
pop
adc
fcompl
adc
pop
jbe
add
pop
push
jnp
dec
adc
jb
loope
adc
dec
nop
aam
jno
add
mov
les
imul
push
nopl
mov
inc
push
lock
add
adc
jmp
inc
adc
mov
out
repnz
pop
or
adc
js
lahf
jns
insb
loopne
mov
pop
push
jns
pop
sub
icebp
and
mov
popa
das
xchg
in
add
mov
cmp
ret
rolb
jmp
sbb
push
push
or
inc
fdecstp
data16
push
inc
fstpl
fwait
mov
inc
sub
mov
nop
in
int3
in
xor
fs
in
pop
inc
enter
jo
lock
adc
xchg
adc
mov
dec
or
pop
les
inc
adc
jl
mov
add
jecxz
or
int3
fstp
add
test
and
and
push
cmp
mov
les
nop
dec
add
pop
loopne
mov
fisttpl
cli
add
adc
int3
push
sub
test
movsl
test
imul
cmp
fcomp
cli
mov
mov
les
or
les
enter
xor
push
pop
xchg
and
xor
rcrb
je
add
mov
push
outsb
sbb
or
or
dec
dec
and
and
or
in
std
xorl
fs
or
scas
inc
pop
xchg
dec
call
sbb
adc
std
cs
in
cmp
push
imulb
mov
imul
hlt
cmpb
inc
movsb
inc
sar
fld
outsb
shlb
sbb
adc
imul
rol
mov
sbbl
loope
or
jmp
hlt
jo
add
test
add
inc
ja
cmc
pusha
popa
mov
andl
inc
call
or
fs
outsb
or
mov
rolb
mov
das
jecxz
jge
jmp
repnz
mov
lods
pusha
mov
pop
and
popf
mov
adc
cmpsl
adc
inc
and
fwait
inc
or
mov
scas
dec
pop
fdivr
push
daa
and
lock
jne
and
adc
add
clc
and
and
daa
push
ret
mov
inc
test
imulb
mov
mov
enter
add
and
pop
or
pop
popa
or
mov
lods
and
pop
sub
or
lock
ljmp
outsb
push
and
push
loope
sbb
pop
cmc
mov
sbb
fisubrl
stos
mov
shlb
xor
sbb
adc
sarb
mov
jne
and
or
out
sub
adc
or
push
sub
mov
orl
test
push
dec
inc
iret
sbbl
add
adc
jmp
mov
mov
cli
xchg
mov
push
test
lock
dec
js
mov
dec
push
jns
mov
test
imul
cmp
outsb
lret
cmp
movsl
test
xor
in
popf
fcom
adc
jmp
adc
cli
inc
js
std
jne
inc
inc
xlat
or
into
cmpsb
shlb
xchg
ret
inc
stos
or
ficoms
and
fld
dec
leave
in
imul
mov
dec
insb
ja
add
inc
sbb
popf
js
xchg
jg
mov
mov
push
mov
jns
fnstcw
mov
mov
in
inc
lock
clc
dec
sbb
js
xor
outsb
loopne
mov
pop
and
push
cld
dec
jb
pop
cs
dec
dec
dec
push
inc
daa
cmp
dec
inc
inc
dec
push
push
dec
orl
int3
cmp
and
xchg
push
mov
shrl
sbb
sbb
psubusb
push
das
jns
in
clc
push
add
adc
sbb
bnd
popf
cmp
sysenter
push
cs
mov
add
push
dec
inc
sahf
in
pop
inc
inc
inc
das
dec
inc
push
inc
push
push
dec
cmpsb
popa
inc
pop
cmpsl
dec
daa
cmp
push
dec
mov
inc
inc
push
xchg
pushf
in
inc
push
dec
push
inc
ficoml
test
fadds
add
xchg
sbb
and
dec
pop
cld
push
bound
fsubl
fldenv
cmp
fsubs
and
mov
add
add
jbe
xchg
mov
test
es
and
sbb
sub
jb
push
jne
inc
dec
xchg
or
and
or
push
push
jne
in
clc
in
or
add
int
adc
pop
mov
dec
cmp
rorb
scas
or
add
lret
jb
jno
addl
leave
mov
lock
mov
dec
inc
xlat
add
xor
cmp
add
pop
cld
inc
add
lock
les
jno
dec
lock
and
xor
arpl
jmp
mov
sub
test
mov
filds
jns
mov
inc
lea
jno
inc
dec
in
lock
mov
loope
fstpt
in
fsubl
imul
das
dec
ret
leave
lds
fs
outsb
push
test
push
int3
xor
push
into
out
mov
pop
lcall
pop
adc
jl
scas
pop
mov
mov
inc
insb
xor
out
dec
insb
call
xchg
xor
jne
sbb
cmp
das
movb
xor
jbe
add
and
inc
dec
cltd
rol
mov
cli
lods
in
insl
sub
fnsave
daa
jo
sub
or
shll
or
test
mov
push
or
mov
sbb
test
loopne
into
cmc
movsb
mov
cmp
jle
xchg
add
rorl
enter
repz
inc
pop
cmp
adc
or
push
add
xchg
outsl
add
xsha256
cmpsb
push
jbe
adc
adc
xchg
sahf
inc
dec
jl
pop
rcrl
xor
movsl
adc
gs
and
xchg
inc
jg
clc
adc
lds
push
fistpll
repz
stos
add
push
ret
clc
adc
push
jbe
add
inc
rclb
cmp
and
inc
jg
std
or
sub
and
jne
inc
xchg
mov
jecxz
push
loopne
fiaddl
pop
fninit
nop
outsl
adc
push
stc
sub
hlt
aam
mov
dec
fdivrs
in
ror
je
repnz
cld
pop
arpl
stos
lock
lock
in
pop
int3
xchg
cmpsl
cmp
enter
push
dec
test
dec
cmovo
push
jb
loope
cmc
mov
popf
or
loopne
sbb
shlb
shlb
mov
cmp
and
xor
loopne
aad
mov
add
mov
jnp
and
rorb
cli
xchg
xchg
cltd
test
mov
push
in
lock
push
and
adc
push
and
add
inc
dec
xor
inc
and
cltd
sbb
bound
jbe
ss
addl
dec
jnp
sarb
pop
adc
xchg
shrb
ret
mov
adcb
and
fiadds
add
xchg
cmpsb
pop
rdpmc
add
add
pop
outsl
adc
xor
cmp
ret
pushf
pop
testl
ds
cli
cmovb
test
insb
sbb
sbb
or
int3
inc
mov
adc
mov
pop
pusha
lods
pop
xor
in
inc
shrb
mov
xor
testl
push
dec
mov
in
cltd
push
jb
addr16
syscall
je
cmp
xor
lock
cmc
cli
std
insb
ja
movsl
adc
dec
lcall
jbe
and
push
and
inc
or
inc
sbb
push
dec
rcrl
xor
int
inc
adc
sub
in
xor
or
xlat
scas
push
mov
inc
cmp
xor
xor
push
jb
mov
dec
sbb
sbb
sbb
adc
and
push
xor
jo
xchg
out
push
or
mov
dec
xchg
rorb
jne
jb
and
xacquire
xor
cltd
xchg
lret
aaa
xchg
or
arpl
inc
inc
jns,pn
not
sub
add
and
xor
add
sbb
push
cs
or
pop
subb
xchg
mov
or
jo
jbe
dec
jmp
mov
jmp
stc
movhps
ss
pop
cmp
mov
or
data16
jbe
push
push
dec
enter
jns
adc
sub
lods
lret
out
adc
push
adc
ret
pop
inc
xchg
notb
inc
lea
or
mov
adc
adc
movsb
xor
or
sarl
out
xchg
outsb
pop
adc
ja
mov
pop
or
adc
nop
jo
or
orb
movsb
cmp
adc
pop
add
loopne
popf
enter
mov
mov
mov
add
rcrb
sbb
or
sub
mov
xchg
dec
mov
aas
xor
lock
pop
call
pop
mov
loop
xor
cwtl
or
dec
push
xor
fadds
sub
jno
sub
xchg
jns
fadds
and
fisubl
test
arpl
sub
jnp
lahf
cmpsb
fidivrl
out
sbb
cmp
gs
jo
cmovg
mov
sti
and
fxch
mov
sbb
arpl
insl
cwtl
mov
pop
leave
or
pop
sub
dec
push
push
pop
xor
push
adc
sbb
sbb
cmpb
push
push
jo
inc
arpl
addr16
add
test
pop
hlt
pop
pop
nop
cmp
xor
stos
sub
xor
inc
xchg
rcrb
movsl
loope
add
mov
xor
add
shrb
cld
pop
jmp
sbb
dec
and
lock
cmpsb
and
test
pop
pop
call
add
fimull
cwtl
pop
addl
mov
push
mov
dec
and
cwtl
push
test
mov
mov
outsl
xor
addr16
aaa
sbb
dec
mov
cmp
adc
cltd
adc
adc
jns
lods
daa
jl
cmp
sarl
test
movsb
jns
push
dec
jecxz
dec
decl
jge
add
test
xor
nop
inc
xchg
xor
gs
lcall
pusha
cld
lock
mov
vmwrite
inc
or
inc
dec
or
pop
mov
adc
enter
push
out
xor
jo
adc
and
bound
clc
and
enter
add
mov
mov
jbe
pop
xor
pop
mov
push
xor
push
add
push
mov
int
and
and
and
and
in
cmp
inc
xchg
daa
daa
insb
inc
mov
push
nop
and
dec
scas
jno
ljmp
and
dec
push
lods
add
xchg
and
cwtl
pop
push
pop
push
push
dec
adc
pushf
add
pushf
nop
and
add
pop
leave
add
inc
jae
add
cmpsl
or
lds
in
and
shrl
aas
jg
inc
and
mov
rcll
sub
sub
ds
mov
push
adc
sbb
inc
fbld
fs
pop
mov
mov
ret
sbb
mov
and
and
and
enter
aaa
enter
imul
or
adc
mov
sbb
inc
mov
test
inc
test
mov
lcall
pop
fwait
pop
daa
and
push
arpl
mov
fs
sbb
sbb
xchg
test
and
rclb
xchg
shr
mov
repz
pushf
push
movsb
pusha
je
push
push
repnz
fistpl
add
fs
cwtl
dec
add
mov
shlb
and
dec
aaa
inc
mov
mov
push
inc
and
into
adc
into
bound
add
test
mov
or
sub
dec
xor
push
ljmp
add
inc
cmp
adc
xchg
and
lcall
sbbb
push
inc
push
jns
sub
subl
stos
or
jmp
pminub
into
jmp
inc
mov
mov
call
jnp
jnp
test
in
in
add
xlat
es
stos
add
push
inc
push
inc
inc
and
sub
sub
fidivs
lea
push
lea
ja
jo
lea
adc
rclb
sbb
push
or
ss
sbb
shll
repnz
ja
shll
and
add
ret
or
xchg
pusha
cmp
jbe
dec
dec
shrl
and
add
or
nop
inc
sbb
sbb
pop
adc
cmc
sbb
add
daa
sbb
adc
fs
das
cmp
mov
xchg
push
add
jne
mov
sub
push
xor
pop
call
shl
jmp
xor
push
inc
ror
adc
sub
dec
stos
roll
push
jo
mov
outsb
xchg
addb
push
daa
ret
mov
jae
pop
jp
and
adc
sub
ret
xor
fwait
mov
inc
push
inc
inc
adc
xchg
inc
dec
sub
imul
in
or
jmp
xchg
push
adc
xor
repnz
sub
and
sbb
xchg
test
or
sbb
pop
sbb
das
sub
adc
out
es
sbb
jo
sub
dec
mov
leave
jle
or
stos
cmp
sbb
pop
cmpsl
dec
mov
mov
lock
push
adc
push
and
mov
test
pop
adc
mov
aad
pushl
sub
jg
dec
mov
lds
jo
dec
inc
or
mov
pop
dec
adc
in
sub
fldcw
jns
jb
hlt
sub
xchg
push
sahf
pop
or
pushf
imul
inc
jle
add
addr16
pop
adc
out
mov
mov
jg
popl
pop
add
cmpsb
xlat
adc
cmp
xchg
mov
adc
movsl
addl
mov
inc
lret
faddl
mov
rorb
cs
push
xchg
adc
sub
stos
aam
pusha
mov
aas
push
cmp
int3
cs
movsb
push
mov
xor
lods
test
mov
or
cmp
daa
inc
mov
cmp
or
sub
xor
xchg
inc
call
popl
push
sbb
add
in
xchg
push
push
jno
into
nop
add
and
inc
pop
pop
or
push
enter
cs
sbb
inc
xor
aam
pop
and
pusha
sbb
sub
and
or
add
xor
in
and
dec
inc
inc
jo
push
sbb
ret
into
xor
mov
xchg
rclb
dec
jmp
adc
cmp
arpl
add
push
das
dec
push
adc
gs
sbb
lods
or
pop
pop
insb
iret
add
pop
clc
add
cmp
and
xor
add
scas
jo
add
sbb
into
inc
xor
mov
inc
dec
push
push
in
daa
dec
xlat
add
xchg
cmp
dec
adc
xor
cs
pop
mov
aam
mov
fiaddl
xor
jle
cld
push
pop
mov
push
ja
dec
mov
xchg
mov
les
dec
pop
sub
push
xchg
sub
fbld
inc
loope
aas
inc
jge
loope
repnz
or
jb
pop
xor
fs
xor
cmp
mov
xor
push
mov
sbb
add
gs
pop
addr16
pop
push
inc
inc
inc
mov
pop
sbb
daa
testb
mul
shlb
es
or
inc
or
sbb
ss
xchg
mov
enter
mov
dec
xor
xchg
dec
rcrb
xchg
or
add
cmp
cmp
sbb
sbb
pop
add
or
sbb
lods
push
lods
imul
or
mov
into
out
pop
sub
mov
sbb
xorl
out
inc
and
repnz
dec
lahf
and
push
or
daa
into
and
xor
scas
adc
pop
inc
and
add
mov
cmpsb
mov
adc
jo
push
scas
lea
loop
inc
call
les
or
inc
lahf
xchg
mov
test
or
mov
adc
and
pop
xor
add
inc
or
mov
andb
adc
cld
push
rolb
push
adc
aaa
jo
in
push
sbb
call
cmpsl
jbe
in
and
iret
add
sub
inc
dec
jno
mov
or
dec
pop
ljmp
sub
push
dec
out
xchg
add
xchg
ss
shll
pop
or
jnp
cmpsl
mov
inc
adc
push
lret
les
cs
add
ret
les
test
pop
add
add
mov
inc
lea
inc
mov
loop
in
xor
fdivrs
lret
cs
lods
inc
jb
jle
dec
aas
imul
pop
sahf
ss
dec
lea
mov
ret
jg
xor
inc
outsb
loope
adcl
inc
fdivl
push
mov
insl
or
andl
jae
xor
sbb
adc
pop
cmp
xlat
add
pop
mov
lea
imul
xor
sbb
and
cli
bound
cmp
xlat
push
popa
imul
inc
mov
pop
insl
out
jne
cmp
sub
or
dec
mov
jle
faddl
cmp
fmuls
leave
cmp
outsl
xchg
cmpsb
in
push
and
ljmp
sub
rol
iret
hlt
push
insl
lcall
or
into
outsb
divb
dec
outsl
cmp
adc
xor
adc
rol
arpl
push
sahf
adc
jge
mov
cmp
gs
jge
adc
aas
ror
mov
push
jae
push
push
adc
adc
lret
cmp
jns
fcmovnu
push
or
pop
es
test
scas
pop
xor
cmp
nop
inc
adc
pop
cmp
insb
pshufw
adc
bound
pop
push
je
dec
pop
and
xchg
sbb
stos
shlb
push
and
inc
fldenv
into
push
dec
jmp
mov
add
mov
inc
or
lods
jo
xchg
xor
sbb
jb
iret
and
das
mov
js
pop
arpl
jp
cmp
loope
or
pop
or
push
lahf
inc
inc
add
add
inc
aaa
pop
adc
das
inc
push
inc
insb
sbb
lods
adc
mov
mov
js
pop
jl
test
jl
lock
push
adc
inc
or
xor
inc
je
adc
push
mov
and
push
test
or
in
xor
and
in
rorl
mov
mov
icebp
add
mov
dec
mov
mov
jl
cmp
xor
pop
push
cltd
push
jmp
lea
and
xlat
es
mov
sbbl
outsb
cmp
js
push
faddl
sbb
sti
inc
imul
cli
cmp
pop
inc
pop
or
inc
icebp
xor
sub
add
dec
add
xor
nop
xchg
lods
pop
shll
mov
xor
sub
mov
xchg
adc
push
test
pop
das
push
jmp
jge
xlat
ret
ss
push
repz
jns
in
pusha
pop
cs
in
push
loopne
sahf
dec
repnz
fs
ret
sahf
gs
fcoml
jmp
adc
inc
adc
in
test
out
jnp
cmp
mov
pop
add
fwait
inc
push
es
dec
and
sub
imul
dec
gs
sbb
pop
dec
sub
add
add
ret
dec
hlt
push
pop
adc
outsl
ds
cwtl
dec
ljmp
rorl
cmp
stc
dec
fstl
ret
rcrb
sbb
icebp
cmp
sub
jne
cmp
jne
mov
add
fisubrl
insb
sub
test
add
in
fcoms
pop
push
adc
insb
leave
mov
add
lea
leave
jo
cmp
mov
sub
mov
fs
sahf
adc
aas
in
mov
into
sub
imul
imul
xchg
xchg
add
pop
or
pop
xchg
adc
and
xchg
test
cmp
add
xor
nop
inc
xor
push
test
test
and
dec
leave
inc
xor
add
gs
movsl
inc
xchg
inc
jne
pop
es
ja
imul
inc
popa
inc
pop
insl
push
cltd
push
cmpsb
xor
push
jb
es
sub
flds
xor
fmuls
fdivs
insb
and
les
add
cltd
in
pusha
aam
repnz
out
fcom
and
fs
iret
add
test
lahf
add
xchg
enter
add
leave
enter
mov
into
orb
js
cmp
data16
enter
mov
inc
xchg
dec
mov
add
add
jmp
lods
adcb
xor
jmp
xor
xchg
les
out
pusha
leave
inc
dec
in
cmc
loop
xchg
mov
xor
sub
jecxz
inc
mov
lods
pop
bound
dec
je
test
aaa
loop
or
cmp
sub
sub
les
in
inc
and
pop
xchg
add
inc
cmp
outsl
leave
add
sub
add
sbb
xchg
cmp
xor
fsubrl
movsl
add
mov
inc
int
mov
inc
sub
int
addr16
xor
sbb
movsb
add
nop
add
subb
xchg
sub
in
cmp
rorb
cwtl
je
mov
add
inc
add
dec
js
mov
lods
outsl
xchg
nop
dec
movsb
inc
pop
xor
cmpsb
imul
movsb
and
adc
add
icebp
lea
rorb
mov
dec
test
cmpsb
int3
pop
fbstp
xor
mov
mov
stos
aam
or
sbb
xlat
mov
push
add
in
adc
lcall
inc
xorb
dec
cmp
stc
adc
xor
inc
mov
add
cli
and
cli
pop
dec
lret
inc
and
push
inc
xchg
sbbb
cmp
cmc
mov
and
cmp
cwtl
movsb
aaa
add
and
and
push
nop
iret
shrb
push
sbb
popf
shl
negb
lret
mov
add
movsb
or
das
call
daa
inc
ret
lret
fwait
inc
push
je
shll
xchg
pop
jl
sbbb
sbbl
sbb
or
pop
in
sarb
jo
add
ja
and
es
int3
arpl
push
xchg
dec
iret
adc
ja
popa
stos
sub
fs
cltd
jp
mov
in
hlt
insl
leave
xchg
push
mov
dec
mov
mov
mov
sub
mull
frstor
js
jmp
sti
das
and
test
adc
mov
lock
mov
pop
shll
je
mov
inc
adc
ret
into
sub
jno
push
iret
inc
stc
je
and
add
test
xchg
cmp
sbb
mov
sbb
push
cmpsl
pop
jecxz
pusha
mov
mov
pop
iret
je
fsubs
lods
sub
add
cmc
dec
insl
daa
sbb
in
sahf
add
shrb
push
mov
sbb
xchg
add
adc
jmp
push
push
mov
ss
push
push
add
sub
jmp
push
cwtl
push
mov
sub
test
mov
cwtl
aad
dec
add
sbb
fstl
stos
xor
or
xchg
pop
cmpb
mov
push
lahf
push
int
inc
insb
mov
xchg
xor
xor
sub
nop
mov
adc
fstps
pop
rclb
pop
mov
cmp
adc
fwait
xchg
add
xor
iret
dec
insb
fldl
or
bound
enter
cld
cmpb
mov
sar
xchg
sub
nop
pop
fwait
jo
jmp
and
xchg
fs
cmp
dec
adc
cmp
and
jno
xor
cmp
push
or
out
jg
mov
fwait
mov
mov
adc
jo
add
inc
enter
lock
adc
cmp
pop
jbe
pop
xchg
dec
push
roll
push
test
sbb
pop
jo
or
and
and
movsl
dec
jae
or
add
outsl
and
inc
pop
pushl
nop
and
es
dec
cmp
jno
xor
mov
leave
repz
push
sub
leave
add
pop
dec
mov
test
cmp
cs
jp
inc
fdivrs
and
push
test
lcall
insl
push
mov
add
dec
pop
pop
sub
orb
sub
adc
insl
inc
mov
inc
xchg
or
push
test
fs
push
add
pop
dec
pop
pop
xor
aas
jl
cmpsl
nop
push
and
aam
cwtl
push
lcall
pushf
pop
push
push
outsl
imul
out
pop
mov
dec
loopne
test
cmp
cmpsb
xor
pop
rcrb
push
insb
out
je
push
adc
test
iret
jecxz
int3
mov
mov
scas
pop
xor
mov
cmp
xor
roll
loop
popa
insl
loopne
and
dec
add
xor
inc
pop
in
pushf
andb
dec
mov
push
jl
sbb
daa
int3
nop
add
nop
cmpsb
fimull
push
and
stos
dec
test
test
sahf
pushf
dec
pushf
mov
jnp
push
imul
mov
or
repz
test
or
or
ljmp
mov
sbb
add
cltd
repnz
push
adc
xchg
cmp
jbe
sbb
or
mov
mov
and
enter
mov
je
andb
push
outsb
rcr
push
xor
push
sbb
cmp
inc
bound
test
xor
pusha
and
outsb
mov
lock
xchg
arpl
fidivl
iret
aam
icebp
inc
push
xadd
xor
fs
push
cmp
je
mov
mov
pop
popa
subb
divl
fs
mov
xor
sbb
adc
add
sub
mov
pop
js
inc
pop
ja
ror
cmp
out
xchg
dec
shrl
push
jle
pop
ret
xchg
pop
ss
and
jns
pop
push
push
mov
cmpsl
es
add
push
or
add
pop
bound
fnstcw
test
cmpw
jne
jle
fs
xorl
inc
or
mov
test
leave
add
push
lret
xchg
les
test
ds
inc
loope
sub
mov
dec
and
xchg
test
push
lcall
inc
inc
xor
pusha
push
outsl
mov
das
cmpb
jg
or
mov
and
int3
js
daa
pop
js
movsb
addr16
pop
mov
cs
fs
cmp
or
pop
or
adc
or
xor
orb
jecxz
mov
or
inc
push
popa
sbb
inc
das
clc
jno
and
clc
jae
push
and
addr16
pop
mov
inc
arpl
loope
adc
ljmp
mov
mov
mov
mov
flds
and
inc
dec
and
sbb
adc
push
les
mov
push
adc
call
cmp
mov
and
pop
pop
jmp
loope
xchg
xor
in
and
in
loop
adc
rcl
cmpsl
push
out
pop
cmpb
mov
inc
jl
movb
je
ret
cmpsl
jg
rclb
out
shrl
outsb
sbb
add
sbb
jnp
inc
push
fwait
jecxz
xor
push
ss
or
xchg
or
or
xorb
rcrb
into
dec
add
mov
outsb
in
push
ljmp
adc
popa
test
test
sbb
rorb
jo
mov
sbbb
cmp
add
mov
dec
or
or
test
sbb
add
mov
andb
clc
or
sbb
xor
test
pop
adc
push
cmp
cltd
inc
dec
push
popa
or
add
add
divb
roll
mov
adc
cmpl
sub
mov
add
enter
xchg
adc
lea
movaps
stc
add
lock
add
orl
and
ljmp
xor
inc
adc
call
ret
mov
jno
pusha
cmpsb
jne
or
pop
rcrb
jge
add
mov
pop
cmpb
adcl
js
jge
mov
push
cwtl
mov
subb
xor
lock
xor
cmp
rorb
pop
push
fsubs
imul
add
lea
pop
mov
inc
dec
or
sbb
jne
cmc
bound
ret
xchg
pusha
cwtl
mov
rorb
add
mov
add
dec
lahf
jmp
cs
pushf
pusha
stos
dec
or
cmp
fsubrl
jmp
mov
dec
ret
sahf
daa
daa
loopne
sub
inc
push
gs
dec
or
xchg
push
pop
shll
popa
or
adc
insb
pop
fstpt
push
gs
pop
pop
add
movb
repz
ret
sahf
add
in
sbb
and
mov
outsb
iret
sub
mov
insl
loopne
xor
jb
dec
fisubs
or
push
lock
mov
push
es
add
mov
lds
or
xor
scas
and
or
xchg
xor
mov
xchg
ss
dec
subl
pusha
lds
in
jmp
mov
cmp
or
push
cld
daa
insb
push
inc
xchg
jo
das
fistpll
rorl
insl
sbb
mov
rorl
cmp
enter
xor
sbb
int3
xchg
adc
cmc
cmpsb
out
insb
jmp
sbb
mov
mov
add
pop
sub
leavew
mov
mov
pandn
inc
jbe
add
push
mov
jg
inc
jo
pop
icebp
add
pop
jne
mov
pop
xor
cltd
add
mov
and
sbb
pop
lock
or
xchg
push
push
or
out
sbb
mov
xchg
add
pop
cmp
movsb
inc
xlat
daa
fmul
sti
jl
cmp
inc
js
jl
out
pop
or
and
push
add
loopne
inc
test
adc
lret
adc
add
subl
lock
ljmp
inc
mov
jl
rclb
xor
mov
outsl
push
jnp
dec
xchg
mov
inc
call
loop
push
jbe
popa
cld
frstor
fwait
lret
sarb
push
mov
mov
sbb
sbb
push
or
daa
and
insl
push
cmc
sbb
mov
pusha
ror
sbb
add
fsts
dec
dec
and
shr
in
shll
pop
movsb
aad
pushf
push
inc
lds
ret
lea
inc
rorb
pop
mov
dec
push
loope
add
jmp
lock
insb
adc
mov
and
xor
xor
insl
push
insb
aas
sar
xor
mov
scas
xor
hlt
push
cld
adc
jecxz
add
and
in
popa
ret
ss
inc
and
clc
jl
or
jmp
or
or
sub
cmpsb
sbb
add
jmp
in
adc
dec
lahf
std
in
in
imul
mov
push
lret
or
js
nop
call
scas
out
cmpl
js
call
sub
inc
add
push
sbb
cmp
xor
push
call
aam
add
stos
push
bound
cmpl
xchg
insl
adc
dec
or
mov
adc
leave
scas
bound
pop
bound
cmp
mov
sbb
cmp
inc
push
push
orb
scas
adc
sbb
stc
imul
adc
push
add
add
lods
mov
and
cmpb
fs
or
outsl
mov
cmp
roll
int3
cmp
enter
out
arpl
mov
lret
sub
fcomip
clc
js
fcoms
pop
xchg
sub
mov
sub
stc
push
pop
enter
adc
add
leave
pop
fcmovbe
gs
stos
cmp
adc
or
ucomiss
cli
xchg
test
mov
xor
push
dec
fldl
and
dec
and
popa
fldt
and
in
mov
in
jmp
and
enter
popf
add
adc
ss
ret
pop
cmpsl
or
inc
xlat
shll
mov
mov
insb
adc
or
arpl
shlb
push
mov
je
pop
pusha
jmp
js
add
jl
jge
mov
push
leave
push
pop
pop
add
add
adc
add
pusha
adc
andb
mov
lods
pop
jne
add
adc
sub
add
lret
add
xor
sbb
sub
add
mov
or
imul
add
outsb
and
and
jbe
jle
push
mov
add
mov
int
dec
test
and
into
cmp
add
daa
mov
nop
jne
mov
arpl
xor
push
dec
dec
popf
and
lods
mov
lret
cmpsl
outsb
loopne
xlat
xchg
addr16
or
adc
aad
and
cmp
and
and
or
shll
mov
and
add
ja
jb
inc
and
push
sub
mov
sbbb
jmp
dec
jmp
adc
dec
inc
jl
lea
pop
outsl
sub
mov
arpl
je
pop
sbb
and
mov
mov
lds
sub
mov
mov
xor
lahf
inc
ljmp
xor
popa
add
dec
divl
inc
bnd
fs
push
xor
sbb
cld
imul
cmp
ljmp
dec
sub
mov
movsl
lea
sahf
add
sbb
sub
cwtl
int3
pop
mov
mov
mov
add
and
cltd
in
add
or
xor
push
ret
test
cwtl
add
xchg
inc
jno
imul
push
xor
or
pop
roll
movsb
adc
test
push
adc
sbb
adc
xor
imul
aas
dec
cmc
push
push
or
or
cli
dec
mov
mov
adcb
jmp
push
lock
adc
xor
test
or
mov
addr16
sbb
stos
daa
mov
mov
inc
pop
movsl
mov
in
decl
inc
and
fwait
addb
mov
ss
shlb
cmp
add
mov
in
adc
push
dec
sub
jp
insb
xor
add
cltd
push
enter
cmp
cwtl
aaa
add
pop
jle
pop
outsl
and
popf
and
in
pop
adcl
push
insl
mov
fistl
jmp
rorb
sbb
fucomi
adc
cmp
inc
or
pop
adc
pop
adc
lods
push
insl
fistpl
add
fsubrp
movsl
adc
and
xlat
icebp
and
mov
cmp
shr
sahf
xlat
pop
shll
insl
iret
xor
and
and
insl
xor
outsb
mov
out
adc
adc
fidivs
pop
es
fistpll
fs
jo
ds
insl
xchg
les
jl
mov
outsb
sbb
mov
in
ret
mov
mov
xchg
shr
push
inc
pop
sar
outsl
iret
mov
sub
nop
mov
add
adc
pop
and
outsl
cwtl
add
mov
js
jl
sub
js
xchg
push
je
mov
lcall
jae
mov
and
in
lahf
pop
adc
sbb
in
outsl
push
dec
push
inc
jo
push
dec
int3
xchg
sbb
fs
test
lahf
sbb
nop
inc
or
jp
fs
mov
pop
push
insb
inc
bound
out
or
pop
popa
test
testl
call
dec
ficomps
xchg
inc
and
jne
or
pop
test
xor
daa
and
adc
dec
mov
jbe
inc
xor
cmp
sahf
mov
or
xor
jmp
mov
ret
in
inc
push
inc
or
pusha
enter
sbb
test
enter
sbbb
test
mov
ficoml
in
mov
pop
dec
dec
adc
fmul
dec
lcall
xor
dec
fwait
cmpsb
dec
das
dec
repnz
push
ret
inc
push
cmp
push
lods
adcb
mov
cmp
inc
adc
jl
mov
pop
xchg
movb
negl
add
cltd
je
test
adc
xor
loop
push
fs
or
mov
test
ss
add
pop
or
test
mov
es
jb
lock
jp
inc
dec
cmp
imul
andl
adc
sti
xor
adc
adc
and
ljmp
pop
out
nop
inc
adc
out
ja
lret
cmpsl
mov
jmp
pop
ja
mov
mov
push
xchg
pop
mov
push
int
push
fs
cmp
pop
fs
cmp
add
push
mov
cld
ds
mov
and
xchg
jnp
jle
inc
imul
dec
fisubs
jle
push
rcl
arpl
addr16
cmp
pop
xor
jl
scas
push
inc
jo
cmp
pusha
mov
or
adc
adc
pop
xor
loopne
lds
jecxz
lods
fwait
jno
lahf
gs
sbb
movb
lret
mov
mov
leave
jne
leave
add
push
in
inc
mov
jbe
pop
insb
jbe
and
mov
sbb
mov
and
sbb
add
es
xor
push
push
jb
aaa
jg
cmp
jbe
and
inc
in
jbe
inc
xchg
nop
ja
pop
mov
mov
jne
stos
mov
push
sbb
pop
ss
inc
or
jbe
pop
inc
loope
or
fcmovbe
adc
inc
pop
pop
push
cmp
adc
push
adc
dec
inc
mov
jmp
push
test
adcl
insl
imul
adc
test
cmp
les
xor
daa
and
mov
cmp
adc
enter
scas
mov
lahf
inc
push
in
push
mov
mov
scas
pop
in
mov
dec
pop
repnz
jns
out
or
enter
and
sbb
cmp
xor
pop
and
or
and
gs
test
shl
jbe
jns
add
jg
gs
dec
adc
xor
jnp
and
lods
adc
xchg
pusha
popf
pop
insb
dec
mov
add
push
and
mov
jp
dec
dec
ror
nop
rcrb
mov
test
xor
outsl
inc
inc
test
cmpb
xor
jle
dec
xor
sbb
sbb
lock
add
sub
xchg
inc
and
pop
mov
inc
cs
in
sub
enter
shll
mov
jp
push
pusha
add
mov
adc
jns
xlat
mov
sbb
pop
xchg
dec
cs
fidivs
fwait
cmp
or
stos
lock
xchg
sbb
mov
adc
adc
mov
dec
test
push
jl
push
pop
and
push
jo
jl
int
mov
xchg
mov
repnz
mov
orl
lods
jecxz
xchg
outsb
orb
add
pop
aaa
adc
inc
sub
and
jl
add
xor
sub
xor
imul
adc
push
insl
or
dec
xlat
mov
sti
jge
and
xor
inc
pop
data16
or
clc
inc
pop
sbb
div
mov
sbb
mov
jo
jecxz
hlt
pop
lea
adc
bound
jb
outsb
shlb
push
xchg
mov
sbbl
fadds
or
es
popa
dec
xor
mov
or
imul
push
jo
and
add
fdivs
in
frstor
cmp
loop
add
sub
inc
jg
ret
fmul
out
insl
test
or
je
addb
ficoml
dec
push
sbbb
popa
xor
iret
pop
test
jge
mov
push
xchg
iret
sub
ja
cmpsb
lods
lret
lahf
pushf
inc
out
fadds
call
add
es
sub
je
or
mov
xchg
mov
xchg
mov
insl
cmp
icebp
xlat
and
incl
sysret
mov
inc
sbb
and
arpl
xchg
movsl
nop
mov
sbb
dec
xchg
inc
cwtl
mov
nop
outsl
stos
bound
and
adc
mov
sub
push
mov
mov
loopne
mov
pop
sub
jae
sub
push
lods
and
pusha
xchg
inc
pusha
xchg
xor
fs
inc
lahf
or
daa
shrl
or
pop
ja
fs
imul
insl
or
adc
push
mov
mov
xlat
movsl
addb
fadds
add
out
lret
fadds
xor
and
loope
push
fidivl
daa
mov
mov
les
lcall
pop
sub
hlt
push
inc
shlb
mov
or
dec
jo,pt
or
add
and
adc
je
aaa
pusha
popa
loop
mov
in
add
dec
mov
js
fadd
fs
fsubrs
jbe
xchg
jl
pop
pusha
mov
aaa
jo
or
or
mov
mov
fnstenv
fadds
dec
adc
xor
mov
jge
add
inc
incb
pop
ds
pop
scas
arpl
push
hlt
cltd
pop
dec
lcall
out
pop
sub
adc
cwtl
xor
pop
outsl
dec
pop
push
subb
ss
stos
arpl
or
loope
xor
add
xchg
mov
dec
inc
mov
xchg
insl
mov
sub
ret
popa
mov
or
nop
push
xchg
lea
mov
mov
xor
push
and
clc
daa
push
daa
loopne
mov
jb
lea
popl
je
dec
rep
or
ja
insb
xchg
pop
jl
shlb
ret
gs
nop
fadds
mov
pop
mov
sbb
pop
adc
jno
cmp
shlb
stos
or
int3
rolb
lcall
cmp
je
aad
pop
adc
add
out
mov
push
push
or
xchg
fsubrs
stos
jne
push
dec
jo
hlt
jo
jp
ljmp
data16
pop
adc
fimull
mov
lods
dec
data16
adc
rorb
dec
pop
je
mov
icebp
mov
add
xchg
dec
call
adc
pop
popa
pop
scas
lods
movsb
cwtl
fcoms
push
pop
push
mov
mov
clc
dec
adc
jle
add
cmp
cmp
cmp
test
pop
adc
jb
lar
int
inc
fcomp
adc
inc
jne
inc
enter
sbb
adc
mov
rcrb
fwait
xchg
dec
loopne
sub
dec
adc
adc
pop
dec
pop
bound
call
enter
pop
mov
and
lock
xor
and
inc
fwait
sbb
fs
pop
add
pop
bound
inc
shrb
in
hlt
dec
hlt
sbb
adc
or
xchg
inc
pop
pop
xor
pop
push
dec
cmp
dec
movsb
mov
sbb
test
std
dec
insl
add
nop
dec
sahf
sbb
xchg
xchg
mov
sbb
sub
nop
lods
mov
scas
inc
push
mov
leave
stos
xor
or
add
loopne
jbe
mov
test
insl
stos
mov
jo
movsb
rorl
ss
aaa
shrb
mov
sbb
sbb
and
daa
insb
mov
daa
call
orb
add
inc
xchg
pop
jl
test
fwait
mov
inc
xchg
dec
and
inc
inc
cmp
hlt
nop
inc
loopne
fcompl
nop
inc
and
enter
dec
cmpl
mov
and
and
xchg
or
cltd
fists
fisubl
sbb
mov
je
mov
xchg
es
adc
mov
aas
mov
xor
mov
xchg
pop
sub
xchg
fld
sub
hlt
push
pop
adc
mov
sub
cmc
mov
fcmovne
cmp
or
shlb
and
and
push
scas
adcl
xchg
aam
cmp
rclb
je
sub
gs
sbb
out
push
cmp
pushf
shrb
lods
mov
xor
loopne
mov
pop
jle
movsb
mov
xchg
out
jo
jg
test
fnsave
mov
push
dec
push
inc
lock
xchg
ljmp
pushf
sbb
out
out
rcrb
insl
mov
inc
iret
movsl
lahf
and
cmpl
add
fwait
in
jle
imul
das
inc
mov
setne
mov
cld
insl
lds
je
jnp
mov
inc
xor
xchg
push
pop
pusha
dec
es
adc
jb
add
or
ljmp
add
test
cltd
in
sbb
dec
cmp
or
nop
xchg
jle
es
or
push
and
inc
jo
sbb
xor
inc
fs
inc
mov
test
mov
cmp
adc
mov
push
shrb
sbb
jmp
cmp
ljmp
or
or
nop
test
xchg
jmp
mov
ds
mov
mov
push
scas
aas
int
sub
pop
nop
jns
sets
roll
dec
cmpsl
jo
mov
sbb
xchg
nop
xor
inc
iret
orb
sbb
xchg
rcrl
adcb
cld
add
enter
pusha
mov
loopne
inc
or
sbb
sbb
mov
inc
add
sbb
les
ret
test
sbb
jnp
and
jecxz
lret
cmp
jnp
or
xchg
push
hlt
int
cmpsl
add
arpl
rolb
popa
subb
push
add
jecxz
ds
sub
push
xchg
mov
inc
int
pop
int
lcall
scas
lods
ret
and
push
imul
sub
xchg
repnz
sub
rclb
xchg
fists
add
dec
inc
jo
dec
call
testl
fistl
sbb
or
lea
movb
lods
adc
xor
push
sbb
mov
jns
popl
addr16
adc
lea
sub
out
adc
popf
test
inc
sbb
sbb
and
cmpsl
xchg
jo
mov
xor
loopne
dec
pop
fwait
out
mov
dec
jmp
popa
rclb
shrb
sub
gs
fwait
iret
js
addb
add
lret
inc
push
inc
xchg
pop
or
bound
rcrb
imul
fwait
cs
inc
jo
loope
xor
inc
mov
movsb
xor
dec
push
cmp
mov
out
sub
mov
out
lock
pop
loopne
fs
push
or
lock
iret
sub
push
xchg
aam
and
mov
or
cmp
add
pop
push
pusha
xchg
insl
add
pusha
pop
xchg
movsl
mov
dec
dec
adc
addr16
ss
dec
aam
popa
loopne
insl
loope
lock
push
aam
xchg
cmpsl
sbb
cwtl
inc
insb
push
xchg
and
clc
push
loop
insb
test
jnp
xchg
push
or
insb
inc
jecxz
ss
sbb
inc
sbb
sbb
or
pop
adc
aaa
inc
into
inc
mov
stos
jns
inc
dec
sbb
hlt
movb
pop
add
jle
fsubrs
jne
fwait
inc
xor
movb
popa
add
cmp
push
pop
cmpsl
sbb
and
add
bound
ss
dec
add
mov
lods
test
sbb
pusha
push
andb
xchg
mov
leave
jns
xchg
bound
les
push
sub
addr16
cltd
mov
dec
push
jle
test
insb
cmp
sub
imul
es
mov
xor
xchg
pop
adcl
or
xlat
xor
or
add
orb
and
stos
out
and
push
adc
repz
xchg
xchg
clc
data16
or
xchg
sub
mov
faddl
and
sub
xchg
mov
jo
movb
mov
or
inc
cmp
dec
xor
ds
jb
sbb
lcall
and
test
nop
jl
mov
mov
dec
adc
ljmp
sbb
dec
xor
push
pusha
rcll
mov
sbb
or
add
lock
or
jne
popf
jge
rclb
roll
xchg
xor
test
xor
dec
mov
rcrl
mov
xchg
jae
fldl
or
ja
sbb
faddl
das
push
cmp
ret
jmp
leave
push
pop
daa
push
dec
lahf
inc
dec
sbb
and
rol
pop
or
ret
jp
outsl
lea
adc
mov
jo
lret
outsb
and
or
inc
addr16
pop
dec
int3
pop
sbb
pop
mov
fldcw
popf
jmp
mov
fcmovnu
pop
shll
adc
jb
cmp
push
fstpt
syscall
hlt
leave
sbb
or
rorl
icebp
cmp
adc
sub
inc
sbb
adc
add
bound
aas
inc
or
mov
xchg
or
cli
xchg
cmp
pop
enter
mov
push
shr
xchg
inc
or
mov
cmp
sbb
ret
xchg
dec
and
push
fwait
sbb
sahf
push
dec
inc
and
fwait
mov
push
cmc
cmpb
or
bound
insl
movlps
ret
je
push
inc
push
nop
push
xchg
lret
xor
int3
dec
jb
clc
or
pop
sbb
pop
insb
insb
push
pop
ds
or
or
adc
data16
push
insb
jmp
inc
add
mov
repnz
xor
and
push
test
ljmp
imul
xchg
xchg
fcompl
push
lahf
fsubs
add
cmpsl
popl
bound
xor
and
ds
inc
or
pop
sbb
or
push
shrb
push
xchg
clc
lea
std
leave
xor
clc
clc
lea
pop
xor
jnp
sub
dec
imul
mov
dec
in
sub
test
push
ja
or
movsb
mov
dec
pop
sbb
or
inc
sub
daa
lods
adc
xchg
aaa
mov
sbb
add
mov
rolb
ret
aas
movsl
subb
cmpsb
clc
in
push
mov
popa
mull
iret
test
add
inc
orb
or
test
adc
jb
sbb
jns
shl
adc
rorl
push
ret
invd
add
inc
ljmp
or
ret
sub
std
inc
es
fldl
es
lret
cmp
test
sub
and
fs
int3
xchg
xchg
cmp
add
mov
inc
and
inc
dec
les
cmp
lds
faddl
movsb
jo
test
mov
movsl
out
addb
mov
jns
mov
loopne
adc
mov
or
shr
adc
or
add
shl
inc
xchg
inc
pop
cltd
push
int
push
or
adc
mov
inc
mov
es
pop
xchg
adcl
adc
fmull
xchg
push
dec
imul
fsubs
pop
jl
fimull
adc
popa
add
xchg
in
and
jno
jmp
sbb
rclb
xchg
pop
xor
adc
dec
sbb
stos
movsl
dec
adc
testb
adc
rclb
push
fs
inc
xchg
xchg
push
and
adc
data16
mov
or
aad
lods
sbb
push
pop
inc
mov
mov
fists
pop
pop
mov
and
inc
or
ss
mov
xor
popa
jmp
add
push
jo
frstor
mov
add
inc
js
adc
ret
xor
jmp
mov
and
mov
and
in
pop
pop
adc
cmp
outsl
xor
pop
push
in
pusha
mov
aam
and
adc
xor
outsb
insb
inc
xchg
nop
testb
ss
push
adc
pop
mov
mov
push
test
pop
dec
pop
adc
inc
or
inc
out
testb
ss
lea
xlat
sub
in
inc
sbb
dec
roll
xor
sbb
mov
mov
and
fbstp
cld
fidivl
sbb
cwtl
mov
ja
dec
ss
dec
nop
dec
cmpsb
ret
pusha
xchg
xchg
and
test
pusha
insl
xor
pop
pop
add
cmp
add
xchg
xlat
xor
sub
clc
jne
inc
xor
shll
outsl
xor
test
push
es
sub
pop
sbb
mov
add
popa
mov
mov
dec
data16
stos
roll
jg
add
add
add
mov
stos
sbb
push
mov
add
mov
push
and
mov
jne
mov
loopne
mov
sub
dec
or
inc
nop
incb
xcrypt-cbc
cmpsl
xchg
or
jae
scas
scas
add
lds
and
movb
inc
dec
jne
xchg
dec
ss
or
mov
or
push
call
andb
imul
dec
popf
lods
or
and
sub
inc
mov
mov
dec
mov
popa
xorb
in
adc
clc
or
mov
adc
xor
das
lret
sti
pop
dec
int
add
notb
testl
std
inc
popf
jl
push
out
mov
dec
xchg
cmp
add
loopne
add
sbb
ret
outsl
add
sub
sbb
sub
jb
add
cmp
cmp
push
aaa
or
adc
imul
add
push
popf
jbe
cmp
jne
inc
mov
mov
push
adc
shl
enter
push
std
sbb
or
rcrl
or
inc
or
add
and
and
jg
mov
pop
adc
xchg
lods
jne
ret
inc
sub
add
mov
mov
enter
push
leave
adc
sbb
jmp
lock
cmp
jns
mov
inc
pushf
in
lret
mov
js
outsb
ss
or
divl
inc
rcll
test
out
gs
push
cmpsl
iret
inc
add
pop
mov
jl
dec
popf
mov
pop
lcall
out
inc
sub
jmp
cwtl
sbb
fnsave
add
adc
mov
shlb
cs
lahf
jp
rolb
icebp
add
mov
imul
int3
add
inc
push
xor
push
push
or
add
lea
jl
dec
xchg
test
jmp
or
add
or
or
jp
and
xor
cld
mov
fildl
cmc
loop
ss
lret
sti
mov
or
adc
lods
push
imul
shll
dec
adc
and
and
xor
add
daa
sar
adc
mov
push
sub
xor
testb
mov
add
adc
mov
inc
mov
push
mov
push
mov
rcl
nop
incb
sub
pop
stos
out
popa
sbb
adc
jae
bound
data16
dec
std
inc
cltd
imul
jo
cltd
jne
cmp
ret
js
jp
icebp
sub
aam
ficompl
into
incl
mov
ja
movb
popf
push
adcb
mov
pop
call
aaa
xchg
push
daa
les
mov
shlb
out
shrb
xor
mov
lods
pop
nop
jo
jns
pusha
out
shlb
mov
mov
mov
lods
mov
pop
faddl
pushf
or
mov
pop
adc
cmp
negb
cmp
int3
xor
push
add
sub
and
adc
sti
mov
out
rolb
jl
ss
andl
int3
push
pop
loope
cmp
pop
movsb
mov
outsb
aas
out
in
adc
or
lahf
dec
outsl
roll
add
inc
in
mov
add
aam
je
jne
inc
push
pushf
mov
clc
pop
xchg
push
jmp
adc
or
push
dec
sbbl
in
mov
mov
push
int3
adc
scas
adc
aas
test
dec
loopne
xlat
mov
push
iret
jmp
inc
mov
imulb
add
adc
xlat
cmp
add
push
test
mov
and
jp
ret
aam
dec
or
cmpl
fiadds
sar
insl
icebp
dec
popa
cmpsb
jmp
inc
ret
jbe
cmpb
cli
js
int
xchg
aam
sbb
sub
aam
repnz
xchg
cmp
clc
jae
sub
mov
mov
xchg
jmp
and
addr16
insb
and
xchg
icebp
stos
lret
sub
cltd
lods
lock
nop
sarb
fcomi
lock
sbb
outsb
inc
cmpl
sub
or
std
enter
ud0
dec
push
mov
in
or
mov
mov
cmp
sub
incl
shlb
push
xlat
orb
lcall
push
out
and
sub
or
add
xchg
xchg
add
test
mov
add
popf
fsubr
xor
mov
lahf
mov
add
pop
inc
out
push
adcl
cmp
mov
xor
pop
dec
call
sub
inc
mov
jmp
je
sbb
cmpb
pusha
dec
xchg
hlt
cs
dec
xchg
pop
mov
mov
out
out
and
dec
add
mov
push
ret
and
or
cmp
jne
cmp
jne
push
jmp
xor
out
fisubs
in
and
xchg
pop
sahf
jne
insl
jle
daa
sarb
adc
and
mov
pop
pushf
lock
and
fcompl
lret
sub
je
mov
pusha
sub
loopne
xor
shlb
insb
cwtl
mov
add
popa
clc
sbb
jb
pushf
mov
adc
adc
and
inc
orl
mov
pusha
mov
repz
out
stc
mov
sarb
pop
mov
pop
popf
xor
pop
xor
inc
or
mov
mov
cmp
pop
aam
push
cmpsl
pop
popa
jo
xchg
sub
nop
mov
sbb
inc
inc
lds
inc
aaa
ja
adc
fistl
inc
ficomps
nop
clc
clc
cmpb
je
daa
hlt
cmpsb
inc
les
or
add
rcl
adc
outsl
and
sbb
test
nop
in
mov
xor
pop
mov
push
and
mov
arpl
pop
dec
in
aaa
scas
js
pop
xor
sub
dec
jne
inc
or
lea
or
out
push
pop
and
popf
mov
sub
xor
cld
or
imul
aaa
lods
mov
sti
jns
push
aas
in
shlb
in
pusha
jg
pop
and
movsb
mov
pop
push
xor
add
out
mov
lds
dec
and
clc
or
mov
call
adc
std
hlt
mov
mov
pop
jno
les
insb
mov
mov
inc
outsb
mov
clc
jnp
sub
add
add
adc
or
hlt
mov
pusha
xor
sub
imul
mov
das
jmp
xor
clc
insl
adc
push
outsb
es
lds
pop
adc
fwait
test
push
or
in
outsl
lock
in
inc
in
movsl
scas
movsb
bound
ret
aam
lahf
movups
dec
inc
pop
mov
mov
dec
cmpb
xchg
sbb
loope
inc
mov
and
add
inc
pop
ffree
add
xor
hlt
adc
xor
push
sbb
clc
outsl
or
add
pop
jne
sbb
movsb
sub
mov
mov
and
jmp
test
or
jns
adc
mov
ret
push
jg
adc
sbb
sbb
xor
clc
pop
xchg
xchg
repz
sub
xor
sarb
push
and
xchg
nop
subb
pop
mov
sbb
xor
jge
imul
jnp
sub
pop
or
pushl
imul
xor
push
cmpsl
mov
jmp
inc
mov
cmpb
dec
xor
lret
or
and
push
or
mov
in
shll
mov
lock
fadds
add
ret
cwtl
inc
mov
mov
or
or
imul
cmp
movb
or
insb
subl
sbb
push
in
test
push
ret
aaa
or
inc
mov
sub
leave
sbb
cld
loopne
fwait
cmpsb
jns
add
pop
cmp
pushf
fmul
inc
or
ja
push
push
les
inc
sbb
daa
and
and
cld
jae
popa
jo
mov
inc
roll
xlat
int3
inc
mov
fcoml
or
div
sbb
cmpsl
pop
js
leave
in
sub
mov
ror
sbb
fstpt
mov
testl
xchg
adc
clc
inc
or
nop
ds
sub
mov
mov
push
xchg
mov
movsl
test
sub
inc
mov
xor
test
pop
and
inc
mov
lds
push
in
add
xor
dec
inc
and
cmp
out
pop
xor
test
mov
add
fbstp
sbb
sbb
xchg
xor
js
scas
sub
inc
dec
cmp
dec
push
es
ja
xor
adc
mov
xor
pusha
rorl
sbb
add
and
sbb
push
flds
cmp
mov
movb
rcll
fcompl
sbb
dec
pusha
push
movsb
xor
test
or
aaa
cmp
sub
xor
incl
imul
fwait
push
stos
sarb
addl
insb
sarb
dec
or
in
xchg
dec
sbb
cmpsb
and
or
int
call
mov
ret
add
loop
scas
ds
inc
cmp
inc
in
loope
enter
push
int
ret
and
mov
add
sub
add
inc
push
xchg
add
mov
mov
add
mov
cltd
js
or
adc
push
adc
ds
cmp
and
testb
adc
ret
pusha
push
cmp
mov
repz
sbb
and
push
xor
and
lret
push
xchg
jge
and
test
xor
mov
mov
jae
cmc
push
and
imul
aaa
add
mov
jecxz
loopne
arpl
adc
push
mov
mov
mov
les
loope
mov
pusha
mov
push
add
cmp
mov
inc
pop
nop
clc
jg
adc
in
jmp
sbb
cmp
inc
xchg
and
push
jo
mov
or
pop
addr16
rcrb
lock
insl
sbb
sbb
aas
aaa
pop
or
lret
rcl
les
add
orl
fists
cmpb
jne
ss
dec
xchg
sbb
cmp
dec
xchg
ss
cmpsl
mov
jne
inc
test
xor
andl
sub
insb
or
cmpsl
sbb
lret
popa
incb
stc
xor
inc
push
dec
inc
pop
push
dec
push
inc
push
xor
dec
inc
dec
inc
add
imull
push
inc
inc
push
aas
sbb
xchg
int3
outsl
or
sub
subb
adc
popa
sbb
mov
in
or
imul
inc
xchg
mov
sub
dec
cs
fprem
push
mov
cpuid
mov
or
jne
insl
push
cmp
jg
jbe
sub
sub
sub
and
add
dec
test
xor
pop
fs
sbb
push
and
add
cs
ss
ds
mov
je
lods
and
inc
fisubrl
lods
mov
dec
aam
pop
lret
pop
jo
pop
dec
les
dec
enter
and
aas
mov
pop
mov
sbb
int3
jg
test
int3
mov
dec
xor
imul
mov
in
into
pop
cmp
mov
push
xchg
lea
cmp
add
mov
adc
push
or
mov
mov
inc
push
test
iret
push
xor
push
add
orl
mov
or
je
dec
ljmp
xor
pusha
inc
out
mov
dec
adc
rolb
sub
jge
inc
in
jno
fbstp
add
rclb
mov
cmpsl
xor
or
dec
jbe
pop
imul
mov
jae
imul
xchg
enter
cmp
mov
xchg
pop
sbb
pop
cmp
lock
pusha
leave
and
mov
sub
rolb
insl
popa
js
ljmp
dec
or
jbe
pop
push
sbb
lds
fsubl
loope
sar
xchg
rcll
adc
lods
shrl
adc
xchg
cltd
rcrb
imul
pop
jo
ret
or
roll
xchg
and
pop
jp
movsb
loope
sub
fiadds
add
jl
push
bnd
xor
mov
jecxz
movsb
cmp
aam
jg
jge
xchg
fldt
faddp
aaa
sar
xor
xchg
add
mov
aas
int3
xor
mov
inc
cld
nop
aas
leave
inc
inc
inc
push
push
dec
dec
dec
inc
dec
dec
dec
sbb
mov
dec
sub
bound
and
add
test
dec
and
add
inc
shl
jo
test
stos
inc
xor
lods
divl
push
xchg
ret
test
je
loope
lea
cli
and
mov
out
cwtl
dec
sti
lea
mov
movsb
nop
pushf
inc
pop
pop
inc
lret
scas
test
fs
fsubr
or
ret
in
add
adc
aad
inc
ret
xchg
xchg
inc
cmpsl
inc
ret
adc
mov
jns
and
adc
repz
pop
sbb
out
hlt
sbb
shr
cs
pop
mov
adc
mov
mov
adc
mov
fstps
pushf
sbb
adcl
or
push
daa
testb
inc
sbb
lret
jecxz
xor
pmullw
jnp
pop
add
lock
push
add
insb
push
push
out
fdivrl
push
cld
fneni(8087
dec
cmpsb
mov
clc
incl
shll
adcl
sbb
pop
cmp
jle
out
shrl
insb
jbe
aas
mov
sub
lea
or
out
xchg
mov
shr
pushf
ds
add
pop
addb
enter
xchg
xchg
cmp
xchg
int
sbb
add
test
xchg
or
ret
pop
mov
jae
push
rorb
jle
xchg
sub
adc
push
or
enter
inc
xchg
outsb
and
rorb
test
pop
sbb
and
pop
xlat
das
test
inc
and
aam
sbb
loopew
ret
clc
insl
and
enter
xchg
add
inc
xchg
jmp
loopne
add
dec
sahf
mov
and
xor
push
lahf
add
sub
and
adc
sub
mov
cmp
add
adc
add
test
rcrb
cmp
jge
push
in
push
aam
lret
dec
and
or
and
test
lret
aad
sub
cmc
fcomps
push
mov
lods
mov
ds
mov
sbb
jbe
adc
dec
dec
jne
push
hlt
in
icebp
push
mov
hlt
jo
fisubl
dec
mov
lahf
push
and
push
push
icebp
adc
mov
and
xor
sub
enter
js
and
enter
add
mov
loopne
inc
cmp
fidivrl
pop
push
movsb
xchg
sub
cmp
mov
mov
and
in
xor
adc
mov
mov
cwtl
sbb
push
mov
or
jle
mov
inc
inc
lock
dec
mov
pop
add
pop
ret
jg
lods
js
cs
in
mov
add
and
cs
dec
pop
ss
xchg
pop
movsb
adc
das
cs
jp
std
and
and
into
inc
in
pop
sbb
and
inc
add
push
enter
sbb
or
imul
add
mov
sub
rcr
outsl
mov
mov
enter
adc
add
pop
xor
add
or
and
xchg
jne
clc
xor
sub
pop
push
add
add
dec
or
popa
or
je
ret
ret
inc
xchg
ja
jl
js
cli
jge
sub
mov
popf
mov
test
popa
pop
rorl
pusha
push
push
adc
push
add
push
push
int
addb
les
adc
push
addr16
and
mov
loop
pop
or
sub
shll
xorl
or
add
jmp
pop
pop
adc
adc
xor
mov
push
addb
push
xor
leave
sub
pop
lea
pop
xor
cmp
or
and
aad
aaa
and
fnstcw
sbb
inc
je
mov
in
add
mov
cmp
jne
loopne
lcall
or
sbb
sbb
mov
dec
dec
push
jae
mov
add
push
and
push
adc
add
push
mov
iret
and
scas
push
pop
push
dec
add
shlb
jo
sub
and
addl
hlt
adc
sbb
inc
gs
inc
sarb
xor
mov
jge
mov
in
and
push
jb
sub
cmpsb
aas
jl
push
jb
insl
popa
or
pop
sub
popa
pushf
pop
pop
fs
es
in
xchg
inc
faddp
daa
lock
dec
jmp
push
and
pop
lahf
add
xchg
mov
cmp
cmp
mov
insb
and
jmp
arpl
lods
mov
std
dec
outsl
adc
xchg
aaa
cmp
xchg
js
add
mov
test
dec
sbb
rcll
push
adc
push
data16
leave
adc
pusha
cmp
or
pusha
imul
push
add
sub
stos
add
js
int3
pop
inc
sub
sub
mov
lahf
test
or
shrb
cmpsl
cmp
pusha
inc
or
jg
pusha
movsl
sub
rclb
popa
mov
push
sbb
outsb
add
adc
movsb
in
movsl
sbb
sbb
jns
insb
pusha
dec
pop
dec
and
push
pop
push
sub
xor
xchg
imul
or
cmp
xchg
gs
xchg
cmp
inc
inc
inc
cwtl
dec
cwtl
popa
loop
xchg
xchg
les
adc
mov
xor
adc
or
xor
adc
insb
jns
repz
or
sysenter
inc
sbb
jnp
inc
testl
je
pop
cwtl
sbb
shrb
push
pop
jno
dec
or
in
jne
mov
gs
jge
test
mov
mov
mov
xor
mov
and
mov
and
xor
mov
jb
and
mov
subl
lcall
pop
out
inc
dec
arpl
mov
mov
fwait
xor
cmp
aam
out
arpl
jb
mov
je
cmp
in
je
int3
dec
mov
mov
cmp
rcll
push
cmp
inc
sbb
dec
sub
pop
divps
pop
inc
les
inc
fsubrp
sbb
rol
cmp
mov
lea
in
inc
adc
push
pop
xor
shll
add
lea
fs
das
adc
cs
inc
inc
mov
add
bound
or
inc
rorb
or
nop
imul
inc
inc
sbbl
mov
out
lret
movb
add
mov
push
in
jns
sub
mov
jns
adc
fcomps
and
push
pusha
push
mov
xor
sbb
out
and
sti
sbb
pop
xchg
cmp
mov
sbb
clc
add
jbe
inc
push
clc
sti
add
and
pop
lret
xor
pop
cmp
hlt
jb
stos
and
test
dec
nop
cmp
add
xchg
xor
xchg
sub
scas
sbb
ja
sbbl
mov
xor
sub
inc
xchg
push
mov
int
enter
jmp
xor
push
xor
arpl
or
add
mov
rcrl
sbb
shl
test
mov
mov
in
sbb
mov
pusha
ja
sbb
cmp
ljmp
add
adc
push
movsb
mov
cltd
nop
xchg
ljmp
enter
cmp
rclb
in
loopne
sub
sbb
enter
out
test
leave
dec
ds
or
sbb
pusha
out
and
mov
stos
and
pop
pop
pop
repnz
sahf
shrl
inc
movsb
adc
js
mov
inc
lods
dec
inc
test
adc
ja
sub
adc
or
add
daa
arpl
outsl
scas
inc
imul
mov
pushf
xchg
add
mov
sbb
add
pusha
sbb
leave
sub
sbb
mov
adc
popf
ret
dec
ds
xor
adc
jmp
jmp
xor
cld
adc
mov
pop
fwait
xor
jl
add
xchg
xchg
adc
outsl
xadd
js
outsb
rclb
pop
push
insb
orb
mov
es
ds
xor
nop
pusha
loopne
adc
out
lods
jno
inc
pop
dec
sarb
movb
and
mov
mov
or
inc
ret
lea
loopne
push
fidivl
jmp
xchg
ds
ja
mov
addr16
sbb
pop
mov
jns
cmp
xor
bound
adc
mov
fs
in
in
cmpb
cltd
jge
sub
mov
add
mov
pop
xor
inc
or
jmp
jecxz
mov
and
movsl
add
inc
jmp
imul
sub
xor
sbb
out
jne
sbb
cmp
clc
adc
add
push
mov
jbe
jns
pop
sub
inc
push
push
push
mov
mov
outsl
sub
psubsb
insl
or
stos
jg
fcomps
add
lock
mov
xchg
add
ret
push
cmp
push
mov
push
and
mov
and
js
mov
rolb
je
loope
lcall
stos
add
les
lea
sbb
imul
and
push
cmp
dec
dec
ds
dec
inc
pop
or
int3
out
sbb
das
xor
inc
jo
or
das
pop
out
ret
or
clc
stos
cmp
cltd
mov
dec
mov
mov
and
sbb
push
ja
add
adc
lret
pushf
mov
sub
arpl
xchg
dec
cmp
mov
nop
add
push
xchg
xchg
fcmovne
imul
inc
push
sahf
add
in
xor
ja
add
push
loop
out
fsubs
jle
icebp
ss
dec
lcall
nop
mov
insl
cmp
sub
and
cmp
sbb
and
sub
ds
sbb
mov
popf
and
cmp
and
popa
jo
leave
and
and
bound
push
in
xchg
dec
arpl
gs
dec
cmpsb
in
inc
sbb
push
test
inc
sbb
in
popa
cwtl
xchg
pushf
mulb
mov
fs
rorl
fdivr
bound
cmpsb
in
dec
in
mov
sub
xlat
lods
xchg
sub
fisubl
jo
dec
leave
mov
enter
xor
repnz
inc
imul
hlt
cmp
hlt
mov
loope
lods
in
add
dec
xor
mov
inc
cld
adc
and
sbb
add
cmp
mov
and
fadds
ret
sbb
xchg
adc
push
xchg
mov
add
inc
push
jle
test
push
ret
adc
int
xchg
lds
idivb
pop
sub
sahf
push
push
pop
daa
inc
pop
xor
scas
imul
and
fsub
faddl
push
testb
and
inc
pop
or
or
daa
or
sub
clc
lahf
add
sub
insb
mov
add
pop
lods
push
pusha
andb
shl
sbb
je
test
inc
or
lea
cld
pop
hlt
gs
push
pop
dec
jnp
inc
add
in
add
push
inc
cmp
andl
lock
dec
mov
push
add
addps
jg
xchg
popa
adc
sbb
xor
pop
inc
or
cmpsb
mov
cmc
es
sbb
lcall
pop
mov
scas
dec
decl
push
testb
and
adc
mov
not
xorl
and
sbb
das
es
add
mov
xchg
lret
jb
ret
insb
sub
mov
xchg
mov
addr16
push
dec
sbb
fcmove
adc
mov
xor
or
lods
xchg
fs
push
inc
push
sbb
mov
push
leave
jb
fwait
sbb
stc
clc
ljmp
in
xchg
mov
inc
or
push
inc
inc
xor
sbb
das
sub
mov
sub
dec
xchg
adc
mov
mov
xchg
cmp
int3
dec
xchg
xchg
xchg
outsl
sbb
adc
ret
call
nop
ficoms
int
mov
mov
test
das
cmp
pushl
or
inc
bound
clc
movsb
movsb
shlb
in
mov
adcb
adc
loope
or
mov
lea
scas
inc
sbb
xchg
orb
scas
jb
stos
add
pop
dec
test
dec
sbbl
add
pop
sbb
cmpsl
stos
dec
sub
xor
in
add
add
mov
inc
add
mov
pop
jb
dec
movsb
popa
and
fildl
adc
xchg
loopne
or
push
mov
testl
out
add
pop
xor
and
outsl
push
adc
cmc
push
cmpsl
dec
ljmp
pop
xor
testl
inc
mov
rolb
push
loop
fimuls
pop
cmp
and
or
fcmovne
in
mov
xchg
in
clc
fisttpl
int
loopne
cmc
sbb
add
rolb
push
out
scas
ljmp
inc
mov
xor
xchg
insb
dec
and
sbb
inc
pop
shlb
inc
repnz
je
mov
insl
mov
adc
loop
or
jno
test
push
pop
je
rclb
arpl
jecxz
rclb
pop
aas
mov
clc
and
add
dec
out
pop
leave
out
lock
in
loop
xor
jnp
lods
inc
stc
jle
xchg
inc
sub
leave
cwtl
movsl
rclb
in
pusha
xor
lahf
je
xor
cmpsl
repnz
hlt
sbb
inc
out
js
adc
inc
outsl
jae
sbb
inc
add
insb
es
sub
sub
shlb
cmp
and
pop
aam
nop
push
stc
xorb
out
pop
add
mov
int3
add
out
idiv
jns
out
and
cmp
jmp
mov
jmp
inc
nop
jp
cmp
and
dec
xchg
pop
mov
and
cmp
movsw
pop
and
sahf
cmpsb
je
jp
sbb
es
outsb
pop
lret
add
call
shll
and
clc
add
mov
dec
xchg
fldl
std
nop
dec
std
js,pn
test
mov
inc
lods
lea
aam
test
xor
sahf
mov
push
hlt
insl
fsubrs
cwtl
pop
icebp
push
testl
cmc
push
mov
mov
mov
cmpsl
jl
mov
push
jg
in
xlat
and
test
outsl
adc
push
bnd
jle
pop
nop
sub
mov
xchg
xor
mov
jno
fs
sub
inc
pop
or
repz
sub
xchg
pushf
je
cld
or
cmpsb
sbb
push
push
dec
pop
pop
and
xchg
xor
sub
push
jno
pop
and
xor
xor
sbb
push
xlat
or
das
xor
and
cwtl
sbb
mov
movl
sub
adc
xor
sub
inc
mov
std
loop
sbb
hlt
dec
mov
test
fildl
mov
gs
ret
icebp
cwtl
test
insb
or
adc
xlat
add
add
pop
les
aam
xor
cmp
mov
into
mov
cmp
sub
movb
inc
jmp
pop
push
push
add
imul
jnp
test
lods
int
add
add
lock
cmp
sub
pushf
divb
movsb
addl
mov
inc
ds
fiaddl
arpl
sbb
outsb
jno
js
mov
dec
dec
add
rorl
jl
les
mov
xchg
push
or
adc
mov
pushf
jo
or
or
call
or
inc
add
or
mov
cmpsb
nop
adc
in
fmull
cmpsb
mov
ds
ficoms
push
enter
or
adc
clc
clc
enter
lods
dec
into
shl
and
and
sbb
in
js
in
rol
js
sub
inc
call
shr
iret
loopne
pusha
mov
lods
sbb
dec
cmp
adc
fiaddl
pusha
pop
pop
call
fadds
or
int3
mov
std
adcl
pop
push
mov
sub
aas
inc
ret
pop
and
jne
fcmove
clc
inc
leave
or
fildl
lret
add
inc
cmpsb
xchg
pop
clc
clc
jns
or
sub
je
xchg
xchg
shr
push
aas
mov
pusha
out
xor
clc
repnz
cmpsb
and
clc
cmp
pusha
lods
push
mov
les
insb
inc
mov
or
ljmp
inc
dec
and
out
add
add
fcmovbe
cwtl
lahf
outsl
add
or
push
cwtl
inc
loop
mov
sti
cmc
sbb
ds
and
pushf
cltd
fldl2t
xor
add
jge
push
sbb
leave
jne
pop
adc
or
mov
xor
div
jg
xor
inc
inc
inc
sub
sub
xor
inc
inc
pop
pop
and
inc
xor
xor
inc
jge
in
sub
out
cmp
sbb
inc
inc
push
ja
xor
shlb
inc
sahf
push
das
loopne
pop
dec
test
or
mov
mov
dec
fcoms
add
adc
add
imul
inc
push
jecxz
add
mov
addb
loop
pop
lret
push
inc
inc
inc
leave
cmpsb
test
sbb
mov
lock
outsb
sub
icebp
or
add
sbb
or
mov
mov
cwtl
mov
inc
or
add
xor
inc
shlb
mov
mov
sbbb
add
lock
in
lock
test
mov
adc
testb
mov
pop
or
pop
jge
decl
pusha
mov
in
insl
adc
mov
scas
mov
insb
mov
push
test
inc
add
adc
add
add
inc
sbb
or
inc
fistl
mov
or
mov
pop
mov
push
fs
aaa
sbb
dec
mov
scas
ret
mov
push
adc
imul
fsubs
cmp
nop
cltd
add
mov
sbb
mov
push
fnsave
enter
or
cmp
pop
xchg
mov
test
js
jg
insb
or
xchg
lods
add
push
movsb
pop
jmp
ja
ret
mov
cmpsl
mov
adc
hlt
enter
inc
xor
adc
je
xor
mov
mov
dec
loope
xor
adc
add
push
ret
inc
in
enter
or
and
push
or
push
jno
dec
adc
repnz
aaa
sbb
ds
negl
mov
cli
xchg
sahf
sti
sahf
mov
push
cmpsl
mov
pushf
xorb
ret
icebp
sub
ja
and
xlat
sbb
loopne
stc
mov
addr16
pop
xor
and
inc
sub
ss
lea
in
inc
cltd
pop
nop
mov
dec
inc
jnp
mov
add
push
add
cmc
push
adc
mov
add
mov
jo
rcrb
aaa
pop
ss
pop
or
filds
pushf
xchg
in
sbb
mov
lods
add
inc
pop
movsb
imul
cmp
dec
or
xor
adc
add
fmulp
jmp
add
sbb
loopne
mov
adc
insb
fisubs
jmp
mov
dec
mov
sub
ret
ret
mov
pushf
divl
mov
mov
cmp
test
mov
popa
lods
push
sahf
adc
push
mov
push
aaa
andb
iret
faddp
in
mov
pushf
pop
pushl
mov
xlat
sub
loop
cmp
sbb
mov
imul
out
pop
push
ficoml
dec
dec
jp
sub
dec
outsb
xor
add
or
loope
and
jns
les
test
enter
mov
add
in
or
push
adc
sub
or
sbb
pop
mov
push
ret
enter
in
mov
adc
inc
dec
adc
out
pop
add
mov
lret
adc
cmp
je
dec
stc
nop
cmp
sbb
push
mov
or
pop
inc
shl
pfrsqrt
outsl
imul
inc
xor
and
jb
addr16
push
inc
pop
stos
and
pop
cs
and
subb
movsb
cltd
ja
sub
or
dec
pushf
jl
lcall
cs
push
adc
cmp
pop
imul
push
inc
mov
or
adc
push
mov
sbb
hlt
loop
sbb
mov
cmp
rclb
xchg
adc
pop
pop
mov
ret
jmp
mov
popf
xor
dec
dec
sbb
sbb
xor
cmp
push
and
push
and
dec
dec
or
lea
fmul
aas
push
addb
gs
xchg
and
call
decl
xchg
loopne
xor
pop
imul
mov
in
adc
inc
fcomps
cmc
push
popa
xor
adc
adc
xchg
inc
repnz
testl
push
test
aam
xor
popa
mov
popf
aam
and
sub
push
loop
or
mov
add
adc
or
or
jns
pop
mov
push
or
push
inc
stos
push
popf
sub
add
push
xchg
cmp
inc
arpl
inc
inc
pop
es
cmpb
cli
arpl
cmp
dec
mov
pusha
js
xchg
push
call
mov
and
xor
cwtl
adcb
sbbb
or
sbb
add
inc
xchg
add
push
pop
mov
leave
stc
add
inc
xor
or
sbb
pop
cmp
add
or
xor
test
mov
pop
add
or
pop
add
sub
or
in
add
push
inc
subl
dec
shrl
sub
dec
cmc
pop
sbb
cmpsb
rolb
or
fwait
push
insl
shlb
adc
jmp
iret
mov
mov
xor
lods
sbb
inc
les
and
roll
sub
arpl
in
sbb
mov
and
sub
xchg
int3
add
push
imul
inc
mov
daa
enter
test
das
lods
add
xchg
rol
in
mov
rclb
or
cwtl
imul
in
es
das
and
cs
adc
loope
mov
mov
push
inc
sbb
and
mov
in
sub
adc
mov
nop
nop
jno
pop
popa
push
pop
inc
xchg
inc
xchg
iret
and
mov
fiadds
inc
mov
jle
imul
dec
mov
lcall
add
push
add
fsubl
or
jo
test
pushf
adc
or
xchg
add
add
jp
mov
sbb
mov
jo
adc
movsb
sbb
xor
pop
pop
fildl
mov
sbb
sbb
rcll
sub
sbb
outsb
inc
mov
pusha
mov
mov
and
fldenv
add
lds
pushf
add
cltd
add
dec
cwtl
dec
mov
shlb
xchg
lea
lea
sbbb
pusha
xchg
mov
mov
adc
add
loope
les
mov
xor
je
test
in
push
popf
test
stc
test
in
dec
xor
insl
cmpps
fnstcw
pop
xchg
xor
dec
dec
shrl
repz
mov
jmp
push
jne
jge
xchg
and
and
mov
aas
mov
inc
mov
and
mov
mov
insl
or
add
cmpsb
imul
cwtl
repnz
inc
sbb
repnz
ss
sub
jmp
push
jmp
pop
push
clc
push
push
cmp
add
cltd
inc
jge
add
icebp
adc
xchg
and
xor
or
adc
icebp
adc
push
add
mov
int
fwait
aaa
xor
out
cltd
pop
adc
and
pop
add
xchg
and
xchg
sbb
xchg
add
push
pop
icebp
sub
push
cmp
pop
test
pop
cmpsb
adc
arpl
jnp
lcall
fidivl
add
add
inc
add
dec
push
nop
add
inc
imul
shll
sbb
mov
pop
inc
mov
and
sti
sbbb
fs
loope
jno
jmp
call
adc
movsb
fsubr
add
and
inc
inc
pcmpeqb
shrb
xchg
jbe
or
sub
mov
push
mov
mov
outsb
push
sub
cwtl
ret
sbb
in
mov
jo
inc
push
xorl
pop
inc
xor
add
or
jb
inc
mov
cmp
cmc
sub
nop
xor
adcl
call
xor
clc
cmp
add
addl
aaa
sarl
adc
cmp
cmc
out
mov
and
adc
add
outsl
mov
or
pop
or
mov
xchg
nop
stos
xor
jb
inc
call
gs
add
jne
imul
shll
scas
cltd
fimull
aad
enter
stos
out
mov
add
inc
or
add
jge
cmc
sbb
sbb
lret
lcall
mov
rorl
mov
sbb
jg
popa
jle
pop
mov
mov
sbb
popf
mov
sbb
movsb
insb
loope
data16
xor
repz
add
cmpsl
pop
fs
xchg
pusha
mov
repnz
mov
push
or
movsb
or
jb
sbb
dec
pop
pop
and
jb
add
push
cmp
inc
js
adc
add
dec
or
sbb
cwtl
or
pusha
enter
or
or
sub
push
cmp
dec
mov
push
cmp
mov
pop
push
pushf
test
and
jb
test
mov
pop
or
or
xchg
pop
jns
push
movb
lahf
lods
cmpsb
imul
xor
add
sbb
pop
es
repnz
cmp
popf
dec
dec
push
and
mul
in
lods
pop
or
adc
or
test
pop
pop
and
leave
sub
add
stos
and
push
and
push
int3
mov
mov
sub
pop
ret
jae
add
imul
fstps
sub
dec
pop
mov
add
cmpsb
loopne
sub
and
mov
sub
adc
pop
stos
mov
add
xchg
cmpsl
arpl
ret
ja
adc
xor
xor
insb
push
repz
cmp
sti
movsb
popa
inc
add
or
pop
push
in
and
xor
xor
nop
dec
and
cmp
lock
push
mov
xchg
mov
sub
mov
and
add
adc
adc
jmp
iret
mov
inc
jmp
mov
mov
mov
jns
scas
aas
mov
and
jbe
pop
cmp
stos
mov
lods
and
inc
and
add
pop
and
outsb
fiaddl
xor
sub
mov
pop
push
push
dec
punpckhbw
sbb
jl
dec
adc
inc
test
lds
xor
mov
fsubrl
pusha
dec
or
mov
adc
lea
inc
es
fadds
jge
cwtl
data16
mov
dec
xor
add
push
imul
mov
mov
lcall
inc
enter
and
insl
aas
int3
xor
cmp
cmp
xchg
stos
mov
sbb
sbb
ffreep
iret
pop
scas
aam
sar
aaa
por
outsl
lret
push
and
lret
sbb
pushf
adc
repnz
mov
inc
out
loopne
pop
cmpsl
popa
and
xchg
das
cmpsl
stos
mov
xchg
ds
es
push
pop
and
inc
loope
mov
push
gs
sub
js
mov
and
dec
inc
sbb
inc
fsts
in
lds
xor
inc
pop
inc
jg
popa
or
aaa
movsb
pop
pop
inc
dec
push
imull
bound
gs
xor
pop
adc
xchg
mov
add
stos
push
repnz
fldpi
mov
xor
mov
xchg
aas
cmp
adc
sub
dec
and
mov
or
add
arpl
pop
sub
imul
dec
pop
xor
mov
xchg
clc
outsb
jns
push
dec
aaa
xor
fbld
push
inc
dec
movsl
aaa
mov
insb
and
add
mov
jl
cwtl
cmp
add
cmp
sub
outsb
push
xor
cld
or
adc
nop
xchg
lret
sub
addl
push
outsb
xlat
aad
int3
push
push
push
mov
ret
and
nop
sub
mov
or
inc
xlat
mov
addl
push
pusha
mov
orl
push
xor
add
dec
in
mov
add
leave
add
adc
shrb
cmp
add
mov
and
dec
cmp
xchg
fmul
test
aam
sub
add
sbb
enter
add
int3
int3
sub
imul
int3
nop
add
sub
sbb
xor
mov
sub
das
or
nop
cli
lock
jl
pop
xchg
sbb
ret
add
pushw
add
sahf
jae
push
mov
push
pop
je
add
and
sbb
daa
dec
cmp
adc
fsubl
pop
jo
adc
sbb
call
adc
loopne
xor
or
les
mov
fdivs
inc
jne
and
pushf
sti
mov
scas
sbb
pop
or
bound
pop
loopne
lock
inc
outsb
stc
xchg
data16
in
mov
or
pop
and
fmuls
pusha
rorl
popf
fimuls
bound
add
out
les
clc
ja
mov
dec
pop
popf
sbb
and
test
lock
bound
add
sub
push
push
or
sub
mov
jne
js
lds
xor
and
and
push
mov
push
loop
sbb
or
and
int
in
dec
pusha
adc
jp
test
or
aam
lock
adc
xor
inc
xor
cmp
xor
push
loope
movsb
lds
add
call
pop
ss
xor
xor
mov
xor
fildl
iret
sbb
out
cmp
movsl
aaa
cmp
xor
cltd
xor
inc
xchg
stos
mov
pushl
mov
xlat
mov
leave
mov
push
lcall
mov
push
jns
lea
nop
fs
dec
rorb
or
xor
xchg
test
insb
adc
xchg
dec
dec
inc
inc
and
dec
xor
xor
and
sub
out
cwtl
mov
dec
and
dec
lds
adc
push
push
pop
jo
and
mov
push
arpl
lea
push
je
adc
stc
cs
add
pop
mov
push
pop
push
sub
paddb
sbb
mov
popf
movsl
notl
push
je
push
push
ss
in
fnstcw
in
or
lret
lcall
sub
insb
sarb
in
add
or
fdivrl
insl
xchg
int
mov
push
add
fcmovnu
out
rorb
sbb
in
jle
lods
mov
inc
nop
push
push
mov
pop
push
push
pop
enter
lcall
mov
popa
push
lods
movsb
fistpl
cmp
ds
ficomps
fisttpl
inc
jg
push
lock
rcrb
psubb
lcall
pop
outsl
adc
push
mov
jno
imul
cmp
pop
and
mov
push
jo
lret
lcall
lods
cmpb
mov
push
mov
push
mov
jne
cmp
pop
je
or
enter
inc
push
sub
movsb
movsb
je
lea
sahf
push
mov
setnp
mov
pop
xor
lock
shlb
ja
push
inc
pop
push
add
aam
cld
adc
mov
test
and
jl
fwait
mov
inc
xchg
jnp
imul
push
call
sub
jo
inc
movsb
mov
int
enter
test
fwait
gs
push
mov
cmpb
lret
es
xor
add
int
sub
dec
mov
cmpsb
incl
jl
inc
mov
ss
movb
stc
mov
xor
lret
testl
sbb
pop
and
xor
mov
cmp
clc
inc
in
mov
enter
push
or
fsubrl
shll
xor
mov
jl
xchg
pop
dec
pop
sub
je
lock
fwait
in
sarb
jle
xor
data16
jne
lods
jnp
sbb
int
fldlg2
jp
mov
in
mov
mov
dec
sbb
dec
test
insb
xchg
int
enter
mov
sarl
cmp
or
jmp
lret
xlat
ss
xor
roll
cwtl
hlt
push
add
cmp
sbb
pop
xchg
in
cmpsb
cmpsl
push
iret
sarl
jb
inc
cmp
movsl
xchg
pop
movb
push
cli
sbb
cmp
mov
and
les
lea
pusha
test
xchg
adc
push
pop
mov
insl
dec
sub
daa
mov
jbe
dec
enter
enter
fcomp
fxch
loopne
jecxz
in
mov
adc
mov
imul
add
xor
adc
xorb
ds
xor
cmpsl
out
push
adc
das
aad
jle
aaa
xchg
pop
pop
mov
rolb
cmp
adc
fistpll
imul
adc
aam
aas
scas
enter
push
imul
sub
pop
push
xor
cmpsb
imul
imul
cmpsb
imul
int3
aam
in
mov
lcall
adc
dec
shll
and
xor
lock
dec
roll
adc
repnz
xchg
push
add
pushf
xor
add
fs
fimuls
cmp
enter
call
leave
inc
push
lock
jp
jnp
pushf
sbb
mov
xchg
mov
and
cld
jbe
loopne
jle
rcrl
and
mov
ret
int3
mov
clts
fisttps
push
mov
push
or
ficompl
add
lcall
or
shll
dec
pop
dec
shll
lods
mov
int3
loopne
add
sub
iret
push
pusha
push
jo
sahf
subb
inc
xchg
lret
addl
dec
loope
fstpl
push
pop
jmp
inc
dec
adc
sarb
push
and
mov
movsb
xor
fucomp
pop
pop
fcom
outsl
fisubrs
in
dec
push
adc
push
push
or
sahf
adc
scas
pop
rorl
subb
inc
push
push
push
add
mov
mov
scas
pop
mov
push
push
xchg
push
and
imul
aas
pop
int3
push
fdivrl
pop
cmp
lock
cs
prefetcht2
sub
aaa
push
sarb
cmpsb
imul
add
setl
lcall
fmull
lock
xor
or
pop
sbb
sbb
shll
or
xor
mov
mov
dec
shll
adc
sbb
imul
imul
in
rorl
test
and
dec
rcll
rolb
dec
call
jl
add
cmpsb
imul
fadds
xor
or
xchg
cmp
xor
shll
mov
xor
shll
jno
xor
rcr
call
dec
xchg
sbb
mov
sub
add
add
mov
test
pop
xor
lods
mov
inc
push
inc
or
punpckldq
ja
mov
fdivrl
push
cs
test
jno
adcb
mov
jecxz
out
out
or
xchg
mov
xchg
shll
xor
add
andl
in
lcall
sbb
cmp
imul
push
pop
push
jo
xorb
or
xorl
xsave
add
jmp
xchg
mov
mov
xor
jle
out
mov
dec
xchg
das
sti
setbe
push
sbb
popf
xchg
push
add
sbb
unpcklps
mov
inc
push
adc
xor
push
jbe
or
or
add
and
add
shrl
pop
inc
rcll
movhps
push
or
shrl
or
loopne
push
rcr
mov
push
adc
addr16
jb
xchg
add
jae
sbb
fistl
imul
shrl
lock
and
xor
shll
pusha
insb
test
mov
shl
out
xor
pop
hlt
jbe
ja
add
stos
pop
add
jl
pop
or
nop
cmp
cs
cmpsb
imul
cmpsb
imul
cmpsb
imul
clc
repz
dec
sbb
xor
inc
out
xor
shll
out
insb
in
jl
xor
shr
nop
jmp
ljmp
add
pop
aaa
or
out
sub
or
add
inc
rcrb
or
add
inc
jo
popf
into
push
ss
push
idivb
or
or
add
add
add
pop
mov
sbb
add
jmp
pop
jle
scas
in
inc
or
negl
xchg
mov
outsl
inc
add
jbe
sub
pop
and
ficomps
imul
mov
addr16
call
push
pop
or
shl
popa
push
jno
mov
xchg
xchg
pop
pop
add
outsl
xchg
stc
mov
xor
sti
cld
std
call
xor
sar
add
andb
jg
add
add
and
adcb
loopne
inc
into
int
add
or
adc
and
lcall
lods
ljmp
add
add
sbb
imul
into
dec
adc
cli
mov
xchg
and
sub
jne
adc
push
cmpsb
imul
enter
lcall
adc
inc
pop
or
ficomps
dec
mov
dec
push
add
add
and
add
cmp
inc
cmp
cs
cmpsb
mov
add
adc
in
adc
add
adc
adc
xchg
or
scas
push
imulb
data16
outsl
and
test
jb
pop
loopne
sar
cmp
dec
pusha
inc
mov
sub
jp
and
insb
jns
imul
push
add
add
and
xor
add
insl
mov
inc
add
mov
push
pop
pop
or
fs
inc
or
or
inc
push
or
inc
mov
addb
testb
cmpsb
imul
cmpsb
imul
cmpsb
imul
ret
bound
adc
lcall
mov
lret
push
cmpsb
imul
cmpsb
imul
inc
cmpsb
lcallw
push
xchg
push
imul
imul
imul
cmpsb
imul
inc
shll
popa
lcall
push
shll
imul
imul
imul
cmpsb
imul
inc
lds
imul
cmpsb
imul
dec
int
lods
insl
lcall
pop
fnstsw
mov
dec
shll
xchg
push
push
shll
xor
shll
repz
xor
or
xor
shll
sub
stos
stos
shll
jmp
dec
shll
pop
cmp
sarl
sti
sti
pop
dec
shll
inc
xor
shll
daa
daa
cmpsl
cmpsl
shll
out
dec
shll
push
xlat
xor
shll
aaa
aaa
mov
shll
testl
jg
xor
shll
das
das
scas
scas
shll
out
pop
dec
shll
pop
fbstp
aas
mov
sarl
decl
xor
or
and
push
xor
dec
sub
xor
rcrl
pop
cmp
dec
shll
push
xor
mov
xor
add
pushf
add
jecxz
cmpsb
jns
cmpsb
pop
or
add
imul
imul
imul
shll
or
shrb
xor
pop
out
add
aas
push
daa
or
push
unpcklps
leave
jb
sbb
xor
sub
add
xorb
out
out
out
outsb
into
mov
out
out
cmpsb
sahf
xchg
mov
addl
mov
inc
jp
push
add
push
pusha
or
or
add
insb
lods
in
daa
push
daa
adc
jg
ret
movups
addl
push
or
or
cmc
and
imul
or
xchg
or
or
sub
dec
or
test
sub
xorb
xor
pop
sbb
inc
leave
push
xor
sbb
and
mov
adc
cmp
sbb
nop
xchg
add
adc
test
adc
xor
shll
sbb
lcall
mov
inc
sbb
push
inc
add
xlat
or
fwait
add
mov
movups
lret
aad
push
adc
lock
iret
sbb
adc
xor
shll
clc
and
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
addr16
lcall
and
lcall
insb
cmpsb
imul
imul
cmpsb
imul
fwait
cmpsb
mov
mov
xor
sbb
mov
nop
xor
shll
loopne
dec
lock
cmpsb
imul
imul
cmpsb
imul
shll
cmpsb
mov
fdivs
sbb
shll
rorb
xor
les
shll
js
dec
shll
xchg
lock
rcr
mov
adc
int3
and
cmpsb
imul
mov
pop
push
clc
sbb
out
dec
shll
xor
jmp
shll
add
nop
or
xchg
push
rcll
je
adc
dec
shll
sbb
xchg
dec
shll
and
lcall
and
int3
xor
loopne
cmpsb
imul
cmpsb
imul
shll
sub
dec
shll
push
mov
dec
shll
push
xor
rcl
fs
loopne
or
xor
lods
lock
sub
cmpsb
jns
js
adc
sub
cmpsb
and
dec
shll
push
nop
xor
shll
pusha
cwtl
push
rcrl
lcall
mov
lcall
mov
jns
shl
dec
loopne
lock
ret
imul
aad
sbb
push
pop
daa
and
xchg
xor
je
inc
and
rclb
test
push
push
xchg
xchg
adc
jg
lods
addr16
or
adcb
dec
nop
push
rorb
cmpsb
imul
cmpsb
imul
cmp
cmp
push
cwtl
movsb
xor
shll
mov
inc
dec
shr
clc
add
adc
sbb
dec
shll
xor
dec
pop
dec
or
iret
add
push
jo
dec
shll
mov
sarl
lcall
or
and
mov
cli
int
xor
roll
in
clc
lcall
sbb
xor
lcall
jo
imul
ret
fstpt
mov
popf
dec
mov
cmpsb
imul
jl
push
mov
cwtl
mov
ds
imull
inc
xchg
movsb
jno
aam
add
mov
add
push
sahf
push
lret
repz
int
push
adc
inc
leave
movaps
cs
les
pop
sub
mov
xor
push
adc
scas
pop
imul
inc
cs
data16
dec
pop
push
or
daa
loopne
push
sbb
aam
inc
push
jmp
dec
mov
push
jns
cmpsb
xabort
mov
js
dec
es
dec
jle
lcall
leave
xchg
pop
jl
lods
scas
mov
pop
int3
push
or
sbb
divb
or
into
and
fsubrp
inc
imul
xchg
push
mov
pop
fdivr
pusha
xchg
mov
pusha
sub
or
sub
pushf
int3
xchg
jbe
and
pop
add
dec
mov
and
fmuls
mov
unpckhps
fimull
xchg
ret
test
mov
push
and
rcrb
xchg
imul
loopne
incb
push
dec
jbe
cmp
ficomps
pop
push
int3
pop
rcrb
es
rolb
or
pop
mov
dec
cmpsb
inc
sbb
cmpsb
mov
and
push
mov
int3
daa
add
lahf
pop
lods
mov
or
int3
data16
je
pop
subb
outsb
aam
add
int3
outsb
cld
js
push
cmp
mov
xchg
lods
jge
test
decb
inc
or
push
push
mov
into
sub
add
and
lcall
sub
push
dec
mov
lods
dec
xchg
data16
fdivrl
popf
xchg
ficoms
mov
int3
ss
cs
jl,pn
rorl
push
push
sahf
mov
and
xchg
loopne
mov
cmpsl
mov
das
in
jae
lods
out
inc
mov
sbb
jbe
push
and
add
ss
add
xchg
adc
rcrb
rorb
sub
inc
test
ss
pop
adc
es
push
into
sub
or
xorb
push
andb
test
out
push
mov
jbe
ja
xchg
lods
cmp
pop
clc
push
sbb
stos
add
push
push
out
cs
sub
mov
cld
es
insb
add
push
xchg
rcrl
push
mov
push
xor
shlb
and
rcr
fldcw
cmp
scas
data16
or
outsb
pusha
shl
cld
orb
and
ror
mov
xor
dec
nop
dec
push
add
fdivl
cs
ds
sub
testb
xchg
lods
or
rolb
xor
outsb
insb
lods
mov
push
mov
push
movsb
les
cmpsb
xor
cmp
xorb
jle
dec
and
push
push
popf
into
in
cmpsb
jno
mov
sbb
in
rcrb
int
push
jo
rolb
jbe
mov
pop
sub
xor
insb
stos
mov
push
xchg
fwait
cmpsb
frstor
xchg
hlt
ja
mov
xchg
lods
adc
sub
mov
jle
dec
sarb
dec
mov
xchg
mov
fisubrl
push
into
and
push
push
pop
xorb
enter
sbb
pop
sahf
push
pushf
lods
sbb
aam
hlt
sbb
int
cwtl
int3
data16
sub
or
mov
pop
inc
xchg
neg
or
mov
fsubs
push
sbb
or
mov
fsubrs
sub
fmuls
mov
inc
pop
mov
je
inc
inc
int
push
ss
fisubrs
andl
cmp
mov
pop
jns
cmp
dec
js
or
add
mov
push
jl
test
mov
xorb
push
pop
jne
mov
push
xchg
pusha
shlb
cmp
push
movsb
push
xor
mov
stos
and
push
jae
inc
inc
jo
mov
add
adc
xor
mov
rclb
mov
push
mov
sub
adcb
add
and
inc
sbbb
add
or
add
push
dec
lods
or
add
pop
mov
fiaddl
dec
or
pop
and
repz
lods
and
pop
dec
aaa
push
pop
dec
add
ja
cmp
adc
dec
xchg
push
loop
push
inc
mov
mov
push
mov
push
xchg
dec
xor
enter
or
inc
push
pop
push
cs
and
inc
fsts
int3
fiaddl
xor
xor
and
pop
flds
rol
sub
nop
pop
inc
stos
stos
lods
enter
in
sub
cmc
incb
mov
incl
sub
enter
rolb
sbb
arpl
imul
xchg
call
fldl
cmp
enter
clc
aas
push
pop
jmp
sti
xor
xor
cld
add
pop
popa
or
push
aas
push
or
push
inc
jg
inc
leave
ret
or
add
xchg
out
in
or
push
mov
das
mov
gs
roll
mov
addr16
jg
jl
push
outsl
add
pop
out
ficompl
neg
out
cmp
rolb
loopne
lock
sbb
ja
in
pop
pop
aas
push
cs
pop
xchg
addr16
dec
ljmp
add
jnp
pop
pop
std
cmp
jge
aas
add
jl
shlw
push
pop
data16
jg
push
mov
cltd
sbbb
add
jo
cmp
rolb
mov
lock
int3
into
sbb
lahf
pop
xor
push
cwtl
pop
in
shrl
push
pop
fwait
int3
add
cmp
aas
mov
or
add
pop
cs
dec
add
and
cmp
mov
lret
ucomiss
ja
ds
pop
outsb
shrl
add
clc
aad
in
lock
aas
rcrb
dec
ja
xchg
fiaddl
pop
cs
pop
outsb
xchg
shll
addr16
mov
loopne
pop
pop
cmp
pop
sbb
sub
daa
inc
push
mov
in
out
push
cs
jle
jbe
shlb
pop
out
add
in
and
adc
jg
aas
push
pop
cs
push
sbb
aaa
and
and
sub
in
cmp
fsubrl
aaa
and
add
aaa
sbb
loop
cs
inc
mov
or
pop
sbb
push
xchg
lret
in
sub
inc
add
inc
addl
popa
push
pusha
xor
sbb
push
arpl
adc
push
sbb
inc
addl
jle
pop
mov
xor
jl
in
stc
pop
sbb
push
sbb
or
test
shlb
loopne
shl
xchg
and
add
mov
push
fimull
or
add
rolb
jbe
imul
incl
and
in
ss
add
mov
outsb
out
sahf
cmp
subl
mov
daa
sbb
gs
das
cmp
and
outsl
imul
es
xor
and
or
push
adc
cmp
clc
dec
fldt
out
push
dec
push
movb
out
cs
push
adc
fnsave
sbb
insl
daa
dec
addl
out
sbb
add
jno
mov
es
push
hlt
sbb
inc
in
jo
add
mov
lahf
adc
or
inc
cmp
inc
and
mov
xor
mov
inc
pop
daa
inc
push
jnp
mov
movsl
daa
dec
sub
aas
push
push
jb
mov
mov
jnp
bswap
push
js
pop
aas
js
dec
and
sahf
frstor
pop
push
lds
ja
push
and
and
cmp
std
nop
and
mov
pop
adc
push
cmp
push
fsubs
popa
xlat
push
lret
insb
cmp
pop
push
and
push
mov
insb
fldt
ss
fnstenv
mov
dec
push
lds
clc
repz
push
addr16
mov
pop
imul
ja
testl
or
add
and
ljmp
out
out
daa
or
aad
insb
mov
rcll
dec
dec
pop
daa
xor
dec
out
in
sub
push
adc
sti
adc
xchg
inc
add
add
clc
daa
in
mov
insl
add
daa
add
mov
sbb
or
aaa
dec
pushf
daa
aas
push
test
pop
sbb
sbb
xor
ds
fidivrs
pop
rorl
out
clc
imul
daa
push
arpl
outsl
sarb
cmp
out
fs
cmp
push
cmp
push
jnp
cmp
daa
mov
jb
es
lret
jmp
out
mov
inc
es
mov
dec
add
jle
push
test
repz
sub
jecxz
test
add
xor
andl
add
fdivl
or
stos
movsb
sub
pop
sarb
mov
or
xor
ja
ja
pop
cmpsb
arpl
aas
cs
in
cmpl
push
inc
sub
vminsd
push
xor
into
mov
andb
sub
loope
adcl
data16
inc
push
shll
out
push
inc
mov
out
sbb
and
inc
ds
popa
pop
xor
sub
mov
ret
jno
aas
jmp
dec
push
shll
add
xor
dec
xchg
pop
xchg
dec
mov
daa
subl
adc
adc
or
gs
ret
mov
cs
push
inc
sub
and
cmpsb
sarl
jle
adc
cltd
xchg
dec
mov
xchg
dec
sbb
adc
cmp
jecxz
call
jne
mov
or
sbb
daa
xchg
mov
inc
fcoms
daa
dec
xor
dec
or
dec
daa
dec
daa
dec
fisttpll
dec
jne
dec
imulb
scas
sarb
dec
lret
dec
rorb
push
out
aas
sbb
adc
mov
xor
cltd
ret
sbb
mov
pushf
lds
fadds
daa
and
cmp
aaa
enter
movsl
aaa
mov
lret
dec
insb
dec
movsb
add
or
push
and
outsl
inc
arpl
mov
push
daa
cmp
das
aaa
push
lds
xor
stos
pop
pop
push
adc
push
pushl
inc
popa
and
cmp
call
es
out
scas
push
add
scas
orl
addb
imul
mov
sbb
aaa
ja
xor
into
aaa
es
xchg
inc
cltd
and
inc
jecxz
lock
stos
sub
dec
sub
insb
imul
mov
sbb
and
sbb
cmp
clc
fdivl
or
mov
push
and
jno
jmp
xchg
add
mov
and
lods
pop
cmc
pushf
aas
lahf
push
mov
popf
cmp
add
dec
mov
outsl
jmp
sbb
addr16
and
or
paddb
lahf
mov
lret
xor
pop
mov
lock
fxch
call
add
daa
jbe
orl
loopne
cmpsl
repnz
repnz
cmp
dec
dec
inc
add
out
push
mov
jae
dec
cmc
add
shrb
scas
andl
pop
add
push
jnp
sbbb
inc
adc
dec
push
je
lods
jge
outsl
bound
jne
adc
add
cli
push
mov
dec
inc
inc
pusha
mov
adc
outsl
outsb
arpl
sbb
data16
push
fs
or
add
insb
sub
fimuls
xor
mov
shlb
add
and
rcr
jle
add
pop
shrl
jae
roll
xor
outsl
push
add
mov
mov
inc
add
push
push
xor
bound
jb
fsts
fildll
push
inc
or
cs
pop
push
jne
insl
or
in
mov
imul
imul
inc
push
mov
or
outsl
scas
push
dec
mov
push
dec
dec
insb
das
mov
iret
rcrb
fcmovb
mov
mov
xor
mov
xchg
mov
mov
fisubs
insb
adc
pop
es
ss
inc
scas
push
sbb
cmpsb
dec
pop
sub
mov
ss
pop
aas
jae
loop
mov
and
dec
push
cmp
jns
wrmsr
inc
cmp
xorb
pop
jns
mov
sub
iret
mov
and
imul
inc
sbb
loopne
enter
mov
pop
mov
call
aas
xor
sub
fwait
outsb
pop
dec
mov
jb
out
push
addr16
inc
scas
adc
sub
jns
sub
shll
insl
in
pop
bswap
cmp
mov
push
gs
cmpsb
lock
inc
fldt
sahf
and
repnz
mov
xor
pop
or
outsb
dec
inc
js
mov
stos
mov
arpl
push
push
call
push
mov
inc
fwait
xchg
cmp
push
rorb
lcall
pop
movsb
push
add
pop
shlb
mov
push
sub
imul
outsl
inc
jnp
pop
sub
sbb
xor
push
and
repz
dec
dec
cmc
ljmp
lret
xor
jo
shr
dec
mov
popa
dec
adc
outsl
add
and
or
test
fcompl
xor
cs
xchg
mov
jb
and
xchg
mov
cmpsb
pop
into
jbe
cmpsb
mov
inc
pop
and
push
or
jo
or
out
stos
cmp
inc
data16
cmp
roll
sbbl
mov
jmp
sti
ret
pop
or
push
sub
addb
pop
and
popa
push
les
xlat
das
sub
add
xchg
push
and
mov
inc
movl
shll
stos
push
in
mov
and
push
adcb
or
push
pop
sub
je
imul
daa
gs
sbb
jne
shll
sbb
jbe
xchg
scas
sub
fistps
stos
dec
add
arpl
sbb
arpl
test
js
shl
mov
jbe
xchg
adc
pop
mov
movl
mov
dec
cmp
inc
dec
ret
notb
push
push
cmp
sbb
cli
pop
jo
xchg
xchg
or
or
cmpsl
ret
shll
mov
iret
push
testb
lret
jb
adc
idivl
adc
add
addr16
and
add
ja
and
andb
push
cmp
stos
sbb
xor
adc
cmp
lret
xchg
inc
outsl
push
mov
aad
pandn
sbb
sbb
mov
push
arpl
fisttpl
add
enter
pop
push
lea
fistpl
cmpsb
and
pop
sbb
add
jns
pop
rcll
sbb
jae
pop
xor
out
jmp
add
decl
jns
loope
aas
stos
addr16
adcl
andl
bound
pop
xlat
mov
cs
inc
adc
fadds
lahf
cmpl
jp
out
and
fiaddl
pop
jecxz
and
push
ret
adc
lret
rorb
cmp
push
bound
js
lods
sub
ljmp
cmpsb
jg
or
test
mov
inc
fldt
dec
aaa
stos
sarl
addl
imul
and
sub
inc
jecxz
outsl
mov
repz
jb
dec
jp
cmp
dec
pop
adc
ror
pop
daa
jae
inc
pushf
js
out
addr16
mov
test
push
mov
ss
mov
pop
jbe
push
xlat
rcrl
aas
sbb
adc
push
mov
repnz
scas
aaa
adc
ja
and
add
push
sbb
or
add
loop
push
push
ljmp
aas
ret
les
push
push
cmp
push
xchg
pop
xchg
loop
outsl
or
cs
inc
movsl
dec
pop
or
jle
jnp
addl
lods
enter
js
daa
aad
je
mov
jmp
mov
bound
orl
inc
movsb
sbb
aas
adc
imul
pusha
mov
fdivs
mul
sbb
push
and
rcl
jne
or
mov
adc
or
data16
scas
sbb
mov
push
pop
dec
sub
or
mov
fsubl
xor
bound
fstl
jns
xchg
fwait
cmp
sarl
es
stos
fwait
sbbb
xchg
testb
xor
adc
xchg
dec
dec
mov
jbe
lea
pop
dec
inc
jmp
mov
nop
mov
jnp
aas
arpl
or
jae
scas
adc
mov
mov
or
inc
js
jecxz
stos
or
and
mov
or
sub
mov
push
fstl
or
dec
cwtl
andb
daa
push
fstpl
mov
sub
inc
jp
and
out
jp
imul
stos
sbb
push
xor
push
shll
ljmp
xorb
loop
jg
shl
js,pt
ficoml
inc
stos
jne
sub
inc
pusha
icebp
push
sub
jle
out
lds
sub
mov
outsb
in
lea
lret
inc
jecxz
xor
lods
sbb
sbb
push
or
cli
cmp
xchg
fs
fsub
mov
cltd
aad
push
out
jle
das
add
add
ret
cmpb
aaa
sbb
push
cmp
sbb
rcrb
adc
jne
mov
shll
xor
cmpsb
pop
jecxz
jp
fbstp
mov
mov
sub
scas
lret
sbb
push
shlb
imul
loop
out
stos
outsb
jecxz
sbb
stos
push
mov
jecxz
popa
stos
adc
xor
xor
cmp
aas
insb
jbe
sbb
dec
out
jne
pop
push
aas
addr16
adc
shlb
xorl
loop
rcrb
inc
notb
loope
ret
outsb
inc
or
dec
out
push
scas
push
aas
unpcklps
test
inc
idivb
or
dec
cmp
jb
or
lcall
das
jns
cmp
stos
push
inc
adc
push
cmp
test
movsl
jecxz
ret
push
movsl
or
cmpsl
inc
pop
and
ljmp
lret
imul
shll
and
filds
or
sbb
ret
inc
ret
cmp
pop
and
cmp
push
addr16
and
scas
mov
pop
add
pop
jb
jne
je
adc
fwait
mov
sbb
insb
fisttpl
inc
aaa
stos
xlat
inc
shll
jg
pop
repz
dec
bound
outsl
insb
addb
inc
adc
orb
lds
pop
mov
ret
adc
out
inc
add
fildl
inc
test
scas
push
fidivrs
insb
push
lea
xchg
xchg
xchg
insb
push
add
fs
insl
xchg
or
sub
jno
sub
mov
sarl
je
bound
popa
xor
mov
add
xchg
out
out
jbe
sbb
imul
add
fwait
insl
imul
xor
dec
lock
pop
pop
mov
fwait
xchg
jo
mov
adc
mov
arpl
or
subb
daa
xor
test
and
add
insb
lret
iret
and
mov
mov
or
and
sub
pushf
push
and
xor
jnp
mov
jbe
insl
push
repz
aaa
dec
cmp
out
adc
mov
pop
ss
push
and
pop
daa
adc
sbb
xchg
pop
push
mov
pop
and
sbb
mov
dec
data16
add
mov
mov
adcl
xchg
insl
lcall
and
xchg
mov
lea
xchg
xorb
xchg
addr16
mov
lahf
insb
out
addb
inc
xchg
pusha
in
push
into
cmp
push
mov
repz
cmp
add
dec
dec
dec
xor
mov
imul
jnp
inc
add
popf
out
push
inc
repnz
addr16
jmp
push
push
adc
outsb
pop
add
arpl
dec
inc
sbb
add
push
or
adc
lret
add
adc
mov
outsb
sub
sub
fs
mov
push
pop
adc
push
jbe
add
xor
xchg
pop
xor
rcrl
rcll
lahf
push
add
jnp
ss
fwait
hlt
inc
or
push
mov
sbb
mov
pop
fsub
cmp
lret
insl
sbb
sbb
imull
stos
and
ja
cmp
bound
xorl
sahf
popa
pop
ljmp
into
sbb
stos
lret
not
addb
and
jnp
dec
and
loope
jo
cmpsb
lahf
sub
sbb
and
fstpl
jnp
jo
jo
shlb
ds
out
cmpsb
ja
xlat
xor
lret
sbb
jmp
repnz
push
add
scas
sub
xlat
lods
jne
pop
and
sub
and
in
xor
insb
push
daa
andb
and
popa
iret
out
xor
mov
mov
divl
andb
add
mov
cwtl
sbb
arpl
subl
fildl
inc
pop
mov
out
xchg
and
mov
lods
pop
stos
or
mov
or
out
adc
les
sbb
jbe
dec
adc
sbb
pop
inc
and
push
jmp
mov
mov
xor
push
add
sub
or
roll
mov
mov
adc
add
and
xchg
sub
hlt
or
push
lret
push
mov
out
fwait
xchg
mov
push
mov
bound
imul
and
and
bound
jmp
jnp
cmp
sub
nop
and
inc
sub
push
cmpsl
push
or
pop
ret
outsb
mov
push
fisttpl
xchg
cmpsl
insl
lret
imul
sbb
shll
ret
pop
sbb
cmpsl
sub
orb
sbb
push
pop
aaa
ljmp
sbb
ja
popf
xor
bound
sbb
mov
mov
sub
inc
xor
inc
mov
push
adc
cmp
adc
addr16
jbe
add
mov
sub
cmp
push
push
xchg
xor
mov
inc
pusha
adc
imul
pusha
push
or
and
add
sub
xchg
and
scas
popa
inc
dec
mov
jcxz
xor
jo
aaa
and
sub
adc
imul
or
sbbb
push
mov
lahf
adc
addr16
inc
or
lock
mov
jo
cmp
inc
mov
push
test
mov
cwtl
push
daa
pop
popa
mov
xor
push
jae
push
adcb
xor
add
inc
divb
and
jle
lods
inc
inc
pop
arpl
loop
sub
je
ficomps
ret
movsl
ljmp
andl
mov
mov
adc
sub
push
pop
jne
add
jecxz
add
shrl
shlb
pusha
or
push
mov
adcb
push
rcll
mov
sub
xor
sub
imul
xor
push
or
addr16
ja
outsb
add
jb
push
shlb
push
shll
push
jmp
aas
inc
add
push
dec
in
adc
hlt
pop
inc
cmpsl
fadds
sbb
xchg
ret
je
dec
fwait
jne
gs
divb
mov
push
inc
push
push
js
inc
loop
push
cli
mov
imul
ret
sub
fnstenv
insb
fadds
xchg
or
scas
daa
or
sbb
ret
aas
iret
inc
and
adc
xor
call
sbb
jbe
cmp
cmpsb
pop
pop
or
sbb
call
add
cwtl
mov
push
dec
cmp
rorl
cli
out
inc
add
test
inc
sub
and
pusha
fildl
shlb
xor
outsl
lods
hlt
xchg
inc
xor
pop
icebp
adc
lret
fcoms
sbb
pop
outsl
pop
or
inc
and
jno
orl
imul
or
mov
add
mov
push
popa
out
stos
lods
or
xchg
adc
push
dec
movups
test
dec
pop
int3
ret
aas
pop
in
movsl
lds
mov
mov
push
outsl
and
jecxz
push
adcb
or
add
xor
subb
repz
pop
aas
scas
sub
outsb
lods
push
push
cmp
movl
cs
mov
in
mov
ljmp
pusha
push
adcl
cmpsb
add
push
popa
scas
jb
bound
inc
mov
push
pop
jo
mov
mov
pop
adc
dec
bound
sub
lds
dec
sbb
push
dec
movsb
or
add
lcall
mov
mov
push
inc
lods
push
adc
data16
push
sub
cmp
inc
cmpsl
data16
rolb
sub
push
adc
pop
mov
adc
and
or
jg
inc
cmp
sbb
stos
xchg
pop
mov
inc
mov
andb
pop
jo
jmp
inc
cli
push
das
ljmp
dec
mov
xorl
push
sub
mov
xchg
ss
pop
jg
in
test
pop
sbb
sub
mov
je
pop
dec
mov
aam
jbe
jg
and
xor
add
das
adc
cmp
pop
bound
imul
lret
push
outsb
and
ds
mov
pop
dec
out
out
out
pop
pop
pop
repnz
and
loope
sub
jno
out
xchg
push
push
adc
xor
jg
xor
dec
mov
pop
mov
sti
pop
or
xchg
or
popw
or
and
stos
ret
out
sub
or
and
lds
dec
adc
cmpsl
call
cmpsl
gs
and
push
jg
aam
jp
or
mov
mov
mov
push
stos
inc
stos
mov
cmp
in
push
div
adc
mov
iret
popa
push
sbb
sbb
addr16
mov
xor
pop
add
or
ffree
push
mov
aad
mov
push
repnz
xchg
jo
mov
fwait
adc
cmp
mov
add
and
inc
jg
shrb
pop
inc
aaa
aaa
xor
mov
xor
or
ss
cmp
xor
std
inc
xor
xor
ss
outsl
and
dec
push
xor
sti
sti
inc
inc
xor
inc
adc
cmp
inc
push
inc
inc
or
cmp
or
std
lret
and
aaa
or
inc
ss
popf
push
sub
inc
or
cmpsl
xor
loopne
loope
pop
rcl
shr
inc
xchg
inc
inc
inc
inc
xor
data16
sub
xchg
add
inc
add
mov
add
mov
das
dec
ljmp
jp
push
mov
push
dec
dec
jb
addr16
or
aam
popf
or
add
or
pop
mov
cmp
and
rorb
xor
cmc
or
mov
push
add
sub
or
int
icebp
or
add
mov
or
mov
test
sub
mov
arpl
push
leave
cwtl
add
pop
xor
add
add
popa
aas
push
add
pop
inc
push
pop
scas
or
jbe
stos
or
or
add
or
cmp
sbb
inc
sbb
lds
into
inc
pushf
scas
push
outsl
add
adc
adc
cmp
or
push
sbbl
or
andb
dec
and
roll
imul
ss
push
insb
inc
jo
aad
sub
push
push
icebp
push
add
movsl
xor
inc
pop
push
dec
or
andb
stc
and
and
jecxz
inc
push
add
sbb
cmp
mov
andl
dec
cmp
or
xor
add
pop
fdivl
adc
add
mov
mov
stos
mov
push
leave
inc
test
add
filds
dec
add
and
xor
xor
or
cmp
and
popa
jbe
pop
fldt
push
adc
lret
push
pop
xor
or
jge
andl
cmp
dec
ret
ds
pop
and
scas
adc
fistps
xor
sub
add
xor
mov
daa
pop
fimuls
jmp
push
das
pop
push
mov
add
popa
jo
mov
push
mov
fcos
adc
insb
add
leave
mov
incb
imulw
lcall
add
inc
add
push
nop
add
sbb
jnp
inc
pusha
rorl
sbb
popa
leave
push
pop
mov
adc
insb
jae
popa
outsb
inc
adc
addb
popa
adc
dec
xorb
mov
mov
mov
adc
dec
imul
inc
jg
imul
addr16
cwtl
je
insl
cmp
imul
mov
adcb
sub
jae
jne
dec
inc
push
jno
and
mov
pop
xchg
outsl
sbb
push
std
push
mov
and
movb
fsubrl
xchg
adcl
xchg
shlb
adc
pop
lret
inc
and
sub
adc
orl
dec
outsb
sbb
data16
ss
pusha
ss
sbb
add
dec
cmp
mov
sbb
or
in
sbb
loopne
fldcw
inc
imul
gs
leave
jbe
outsl
xchg
inc
sbb
outsb
or
sbb
out
out
push
pop
dec
insl
jb
test
jno
add
sub
xor
mov
mov
test
arpl
xor
sbb
inc
fisubrl
cmp
inc
inc
inc
arpl
fistl
and
and
shll
and
fs
gs
inc
xchg
cwtl
push
mov
das
pop
and
and
inc
inc
fiaddl
cs
jo
insl
add
rolb
inc
mov
mov
and
sbb
test
mov
pop
xchg
loope
xchg
lea
inc
xchg
mov
and
jbe
cmp
fsubs
divb
daa
jno
pop
shlb
adc
sbb
push
out
lods
jmp
mov
adc
sbb
mov
or
daa
cmp
and
imul
xchg
daa
jg
fisubl
mov
lock
and
sbb
pop
fsubrs
mov
daa
and
dec
xor
andl
adc
jb
cmc
aas
outsb
mov
push
xchg
inc
pop
setge
xor
xchg
aaa
jp
ss
cltd
pop
pop
jge
dec
sbb
and
xchg
ss
insb
add
test
sub
sbb
rorl
or
cmp
popa
addr16
sbb
sbb
jb
sbb
xor
inc
cmp
mov
vpshufd
lret
sbb
pusha
sub
cmp
inc
jge
sub
pushf
inc
jl
cmp
inc
mov
rorl
inc
jle
sbb
shlb
xchg
mov
lret
dec
sbbl
jmp
scas
jo
cmp
and
insb
push
xor
sbb
add
cltd
and
and
nop
addr16
push
and
add
cmp
adc
lods
adcb
and
mov
or
and
gs
add
bound
jo
inc
pop
int3
outsl
ljmp
xchg
or
sti
dec
sbb
loope
mov
adc
push
aad
dec
mov
push
mov
add
daa
xchg
in
xor
sbb
sbb
in
addr16
clc
add
ja
adc
push
movsb
frstor
filds
add
lds
repz
adc
ja
clc
mov
lret
push
push
outsl
insb
dec
jns
xchg
cmp
stos
sbb
shlb
push
fsubrl
or
leave
sbb
sbb
cmp
ror
insl
mov
mov
push
imul
xchg
add
xlat
mov
push
ficoml
fsubs
aaa
or
popa
ds
shll
or
sbb
icebp
idivl
xor
fdivrs
or
sub
int
xor
adc
push
pop
jle
add
push
jae
sti
push
outsb
cwtl
xchg
sub
and
add
mov
adc
pusha
rcll
mov
lret
insb
insl
roll
sbb
rcll
push
jb
add
fiaddl
lods
movsl
push
pusha
insl
xor
aas
inc
and
sbb
int
aad
jge
jno
mov
push
mov
jb
mov
adc
jae
adc
inc
xor
dec
add
jne
int
lcall
or
push
inc
xchg
xlat
jb
inc
lahf
sub
pop
pop
and
jae
push
push
movsb
cs
sub
mov
add
shll
daa
outsl
add
daa
push
pop
pusha
mov
aam
and
mov
jbe
ficompl
shrb
mov
add
mov
rorl
testb
inc
imul
inc
push
sbb
mov
mov
mov
mov
cmp
outsl
and
mov
pop
push
enter
and
jmp
orb
cld
jl
push
std
mov
push
dec
jb
and
cmc
sbb
loopne
add
and
push
dec
push
xor
nop
cmp
inc
dec
inc
gs
fidivs
in
gs
test
dec
inc
inc
sbb
ret
je
popa
push
lods
sbb
jno
ret
sbb
adc
dec
jo
fistpll
sarb
ljmp
xchg
je
fwait
jo
in
mov
pop
dec
push
out
pop
cwtl
and
or
mov
and
cmp
loopne
paddq
xor
inc
testb
add
mov
movsl
dec
adc
popa
push
lods
outsb
lods
gs
xor
cmpsb
fstl
or
sub
sub
inc
outsl
and
push
lds
sbb
fadds
imul
mov
arpl
inc
cmp
inc
sbb
fwait
pushf
enter
fs
mov
ret
pusha
or
fs
and
cmp
or
jae
movsb
or
push
bound
popw
mov
mov
xchg
lds
imul
movb
push
adc
jle
jge
popa
gs
mov
pop
push
push
insl
dec
sub
xchg
std
sub
jb
test
daa
dec
push
xchg
test
leave
and
into
pop
sbb
ficoml
test
pop
and
movsl
in
test
mov
jno
movaps
xor
xor
ss
mov
lret
insb
lods
mov
inc
es
cmp
loope
scas
adc
cmpsb
xchg
imul
pusha
ja
sbb
mov
xor
and
aaa
outsl
movsl
int3
and
cli
rolb
fucomp
jl
sbb
gs
sti
popa
pop
or
dec
pop
dec
pusha
cmp
les
aad
repnz
mov
fs
adc
sbb
xor
add
leave
fidivrs
jae
adc
pop
lcall
mov
jle
mov
sub
fstpl
icebp
inc
mov
dec
push
ja
rcrl
and
adc
ficoml
mov
jle
pop
fs
and
inc
push
orl
jnp
add
dec
popa
dec
pop
push
arpl
pushf
outsb
sub
sbb
pop
xchg
or
push
mov
cmp
mov
inc
or
in
jb
pusha
jnp
or
sub
scas
inc
xor
adc
dec
inc
testl
rcll
pop
jnp
push
movsb
dec
mov
xor
aaa
and
outsl
mov
jns
test
sbb
test
fsubrs
push
push
xor
jne
je
mov
subl
dec
or
and
jne
and
imul
cwtl
sbb
mov
in
sbb
data16
dec
in
nop
inc
pop
outsl
fiaddl
jae
add
ja
inc
cwtl
and
xchg
pop
dec
cmp
mov
cmp
rolb
jbe
sbb
inc
test
mov
mov
popa
adc
push
lret
xchg
sbb
insb
or
into
sbb
pop
xchg
adc
mov
shrl
mov
sbb
imul
stos
inc
and
mov
test
rorb
xchg
fadds
sbb
pop
mov
mov
and
ret
sbb
jns
in
cltd
mov
pusha
shll
push
xchg
stos
ljmp
xchg
or
enter
jmp
and
nop
popa
and
lods
mov
cmp
jne
adc
sub
xchg
andb
mov
jne
repnz
and
mov
jnp
inc
sbb
or
das
push
jbe
stos
sti
push
pop
sbb
push
mov
and
inc
into
pop
and
add
mov
fmuls
mov
test
adc
jns
xchg
addl
inc
inc
movsl
ret
mov
and
popl
mov
push
push
and
cmpsl
ds
es
pop
scas
jo
add
sbb
out
dec
push
push
lcall
fldt
pop
test
arpl
mov
ror
jmp
inc
popa
push
ljmp
lret
outsl
sbb
pop
and
and
test
inc
fs
leave
roll
sub
aaa
in
shrb
insl
sbb
pop
data16
imul
test
jg
pop
add
loope
jns
and
sbb
shll
roll
inc
js
inc
and
push
lea
mov
sub
dec
and
or
or
ss
adc
dec
imul
mov
loope
mov
jo
aam
lahf
movsb
popa
mov
cmpsb
iret
call
dec
fs
jmp
cmp
pop
jge
stos
dec
mov
jo
pop
inc
movsb
or
or
lods
add
dec
addb
adc
mov
dec
lcall
sbb
jno
push
xchg
inc
mov
xor
cmp
xchg
xor
ja
xor
or
cmpsb
insb
xchg
add
adc
add
sbb
imul
lret
push
inc
sbb
add
in
pop
adc
pop
dec
add
pop
inc
sub
lock
and
test
orl
cs
dec
loopne
sub
jo
cmp
pop
pop
or
fisubrl
adc
adc
sbb
jbe
add
adc
jbe
fists
nop
lahf
jbe
outsb
jo
outsl
xor
lock
xchg
lock
add
sbb
movd
scas
mov
add
and
pusha
inc
inc
push
inc
dec
push
imull
push
xor
xchg
mov
rolb
aad
jo,pt
mov
shrb
or
cs
inc
out
dec
sub
push
mov
push
daa
add
mov
lahf
xchg
scas
lods
movsb
jns
rolb
sahf
push
dec
shrl
add
xchg
loopne
mov
jae
dec
push
ja
fldcw
dec
adc
xlat
daa
and
ret
cltd
jle
out
or
add
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
call
adc
mov
