cs
incl
add
add
inc
outsl
outsl
insb
gs
outsb
add
add
fsubr
incl
gs
jb
lea
sub
add
jns
gs
jmp
mov
inc
adc
push
push
je
imul
in
pop
and
add
les
lret
cmpsb
imul
in
fbstp
dec
bound
arpl
xor
add
mov
push
sbb
sub
pop
and
fs
inc
dec
and
inc
push
sbb
adc
inc
push
sbb
or
daa
pop
sbb
cld
sar
xor
leave
xchg
shl
shl
in
nop
inc
dec
push
inc
shr
in
sahf
sbb
pop
push
rclb
loopne
xor
and
fs
fdivl
jg
fcom
push
add
mov
push
mov
and
add
mov
and
mov
sbb
arpl
in
leave
xchg
rcl
ror
ror
inc
dec
sahf
sbb
rol
sarl
hlt
mov
cmp
jne
push
xchg
iret
push
mov
add
pop
xor
mov
jmp
mov
mov
or
mov
rorb
roll
push
and
mov
or
incl
mov
inc
cmp
jne
mov
dec
adc
mov
lods
jnp
push
mov
lds
adc
neg
out
inc
add
push
push
push
clc
mov
mov
jg
xor
mulb
jg
add
cmp
divl
in
inc
add
or
inc
push
adc
xchg
push
sbb
mov
push
insl
imul
pop
pop
pop
arpl
mov
mov
mov
xor
dec
add
ficompl
loopne
push
xor
fstpt
mov
mov
mov
fistpl
jns
mov
lret
add
jae
pop
jnp
enter
mov
or
mov
add
jmp
add
shlb
push
out
out
in
pop
mov
scas
mov
mov
sbb
xor
pop
pop
jnp
lock
jae
imul
xchg
push
push
pop
outsl
fidivrs
xchg
xor
stc
add
mov
jb
xchg
cmpsl
mov
add
pop
push
sub
push
cmpl
push
pop
sub
in
pop
test
jne
sub
xor
in
clc
xchg
mov
jg
add
sub
mov
sub
loope
cmp
lea
push
lods
jmp
outsl
mov
ja
adc
adc
mov
pushl
pop
imul
mov
lds
fistps
inc
cmp
push
jmp
add
fimull
out
decl
push
xorl
mov
mov
test
je
sbb
lock
adc
movsl
outsl
push
es
mov
aam
arpl
inc
mov
pop
pusha
push
dec
push
jbe
push
jne
js
add
test
jbe
inc
inc
mov
lahf
call
mov
stc
leave
mov
stos
js
or
mov
pop
push
jmp
es
pop
sub
movsl
fistpl
push
int
add
cmp
ja
adc
jae
or
push
insl
add
insb
dec
jbe
add
ret
incb
add
or
cltd
ficoms
mov
cmp
jne
stos
pop
dec
or
adc
leave
mov
mov
icebp
out
call
xchg
imul
jge
jae
loope
aaa
xlat
lock
rcrb
ret
cmp
loop
fisttpl
aad
sub
lods
jo
in
pop
jmp
push
push
ja
ss
add
inc
lahf
in
jae
xor
mov
hlt
jbe
adc
mov
jae
mov
sub
push
adc
push
jae
xchg
xor
insb
pop
faddl
jne
rolb
pop
ljmp
pop
sbb
fs
xor
inc
pop
add
mov
and
inc
add
cwtl
mov
lahf
jnp
and
mov
sar
sub
popl
jo
jg
mov
mov
mov
pusha
push
or
add
pop
in
pop
inc
enter
outsb
jmp
js
das
jne
cmpsb
xor
cmp
cmp
lea
popf
rolb
outsb
xchg
adc
add
enter
inc
jae
or
or
xor
inc
addr16
mov
xchg
in
mov
cmp
je
jmp
pop
out
sbb
jle
sub
int
subl
jns
fwait
enter
sub
insl
or
repnz
repz
pop
pusha
xor
mov
inc
push
or
inc
xor
and
insb
mov
jl
pop
ds
jne
scas
jg
and
mov
adc
push
cs
sub
imul
or
fsubs
adc
pop
push
cmpsl
test
sub
loope
pushf
mov
shlb
jbe
fstpt
xor
pop
jmp
jge
jmp
jns
fstl
insb
mov
es
je
mov
bound
adc
ror
add
mov
jbe
adc
in
push
movsb
push
push
negb
pushl
mov
push
cmpb
dec
mov
or
in
orb
mov
or
push
in
in
dec
mov
add
testb
and
stos
jne
loop
sti
in
movl
mov
mov
outsl
adc
mov
jecxz
mov
push
ret
add
jmp
mov
xlat
int
js
ret
repz
jle
add
out
sbb
and
imul
imul
movsl
les
or
inc
clc
jmp
xchg
jge
mov
sbb
call
jne
and
xchg
cmpl
je
add
pop
ss
je
jne
stc
cltd
test
fistpl
add
jge
jge
fistpl
push
std
cmp
adc
add
cmp
addr16
insb
jne
test
jns
ret
cli
divl
lahf
nop
hlt
jmp
push
mov
call
xchg
hlt
les
inc
xchg
xchg
sbb
lahf
inc
mov
iret
push
mov
inc
sbb
sbb
and
inc
mov
sti
jbe
ret
sbb
push
or
sbb
js
mov
stc
cmp
out
scas
add
sub
sbb
loope
out
mov
popl
movl
roll
mov
aaa
mov
mov
pop
add
btc
add
aas
fdivl
push
incl
ljmp
jne
je
or
adc
daa
inc
adc
pop
cmp
push
or
mov
xchg
mov
rolb
lock
or
ret
inc
lahf
fadds
sqrtps
loope
stc
divl
or
hlt
add
and
fldt
push
enter
ret
pop
add
testb
sub
jb
orl
or
ds
cmp
add
faddl
fsubp
filds
fdivs
mulb
inc
mov
add
add
test
xor
cltd
or
andl
nopl
sub
sub
sub
sbb
daa
xor
jb
js
mov
push
xlat
rorb
sbb
lock
rcr
fnsave
jge
sub
adc
fadd
dec
or
call
sbb
cmp
cmc
into
sbb
cmp
aad
mov
jmp
cmp
movl
lea
pop
mov
or
les
testl
in
or
fcmove
inc
mov
sar
jbe
mov
sbb
clc
add
cmp
push
outsb
pop
in
scas
push
mov
adc
xchg
jb
pop
mov
subb
mov
or
or
inc
loop
jge
jl
fs
fidivrl
inc
mov
loopne
popa
push
clc
aaa
pop
cwtl
jge
inc
adc
inc
or
xlat
std
outsb
into
pop
pop
jmp
mov
sbb
ret
js
les
mov
testl
xlat
loop
addb
movsl
movsl
jno
or
dec
bound
test
mov
mov
push
jp
jae
rorb
sub
add
add
add
jle
notl
jae
sbb
out
adc
pop
mov
sti
jmp
push
imul
push
xorb
imul
fbld
aam
inc
lods
pop
test
les
addb
add
pop
lea
ret
in
sub
in
xor
sub
push
pop
mov
sbb
or
cmp
orl
hlt
sbb
cmp
or
mov
pop
and
mov
mov
pop
push
into
mov
stos
aad
mov
pop
add
mov
add
gs
push
cmp
pop
or
xor
je
int3
jbe
cmp
sbb
inc
cmpl
jecxz
fstp
pusha
or
xchg
push
cmp
mov
add
dec
sub
pop
imul
adc
loopne
add
sbb
pop
dec
add
ds
and
jmp
jnp
insl
push
fildl
jl
xor
xchg
xor
push
push
movsb
inc
leave
mov
jne
iret
inc
push
pop
fdivs
and
bound
add
scas
adc
inc
sub
inc
xchg
mov
mov
or
lods
clc
mov
pop
fwait
pop
jle
inc
cld
adc
test
and
push
and
popf
add
pusha
js
add
sti
or
inc
jb
inc
jg
clc
imul
sub
or
adc
loopne
insl
in
pop
xchg
and
or
outsb
xchg
lock
jne
fwait
jmp
or
out
pusha
inc
dec
lock
loopne
iret
xor
scas
hlt
sub
push
in
or
pop
or
xchg
adc
inc
cld
ret
cmp
sbb
pop
popa
dec
out
and
or
xchg
or
pop
adc
cmp
xor
pop
das
mov
and
pop
mov
mov
lock
sbbl
pop
jne
jae
addr16
xor
mov
fisubrl
ret
add
xlat
and
push
flds
aas
or
clc
sbb
ret
cmpsl
cmovl
in
cmp
decl
rcr
sub
add
pmaxsw
mov
popa
mov
test
enter
int
sub
push
dec
arpl
lock
fnstenv
mov
inc
clc
sub
sbb
outsb
add
adc
js
bound
push
andl
clc
add
or
out
jnp
push
orl
jmp
pop
jns
sub
lods
sbb
jbe
or
or
sbb
dec
out
movsb
cwtl
lods
lods
shll
fisubs
xchg
mov
dec
pop
ds
ds
xchg
out
or
cmp
add
in
dec
pop
fisttps
xlat
nop
out
sub
negl
and
sub
add
xchg
sbb
pop
por
mov
inc
ret
add
or
mov
fsubl
int
mov
add
sub
insb
dec
push
mov
sub
jp
mov
mov
dec
sub
add
inc
pop
sbb
mov
add
loope
aaa
pop
or
pop
sbb
pop
adc
add
pop
les
enter
cmpsb
fildll
and
std
adc
inc
xchg
out
sub
aam
and
ds
add
in
jmp
outsl
jb
mov
iret
sub
insb
loopne
adc
lods
push
mov
push
mov
add
xchg
nop
inc
cmp
or
xlat
adc
cmpsl
xchg
rolb
out
pop
test
fsubs
in
dec
loop
add
in
adc
push
inc
jb
xchg
rorl
loopne
in
jge
sbb
je
insb
lret
xchg
xchg
aam
sub
sub
push
xchg
pop
lods
sub
in
push
addr16
aad
fcomps
pop
int
call
add
pop
out
xor
lods
jmp
iret
xlat
xor
ss
jae
stos
adc
cmp
daa
add
ret
outsl
cmc
push
scas
push
jmp
je
push
mov
fisttpl
or
sbb
mov
fcmovu
sub
lahf
sbb
jne
mov
mov
xor
rolb
out
mov
js
ret
in
ret
jecxz
cmp
sub
test
and
add
fcomip
dec
cld
jo
mov
mov
xchg
fisubrl
loopne
mov
jp
ret
push
push
push
cmp
mov
jnp
rclb
je
mov
out
add
inc
je
jbe
pop
adc
mov
add
fsubs
add
insb
cmp
mov
or
divl
ljmp
adc
jmp
sub
movsl
mov
and
rep
fs
out
fistpll
je
cld
lea
sbb
std
sbb
mov
and
jb
cmp
ja
sub
iret
or
mov
mov
pop
imul
or
or
push
push
or
jmp
test
sub
rorb
sub
loope
movb
cmp
call
mov
pop
lret
jne
mov
ret
cmp
adc
out
or
data16
roll
jl
pop
inc
cmp
pop
sti
outsl
add
and
or
clc
iret
fldenv
push
test
or
mov
out
jmp
je
movsl
xchg
loop
sub
pop
mov
xor
push
mov
shr
cmp
sbb
lods
out
scas
icebp
fnstenv
dec
ja
mov
or
les
ret
jne
jmp
or
pop
and
movsl
inc
mov
cmp
jne
sub
mov
cmp
jne
or
insb
xchg
or
gs
pop
dec
idiv
mov
cmp
cmp
jne
shr
shr
or
pushf
rorl
loopne
add
mov
or
stos
mov
stos
pop
out
fldt
or
cmp
cmp
test
or
or
loop
mov
push
adcl
rcrb
clc
in
fisttpl
shl
icebp
cltd
xor
mov
imull
movb
inc
mov
inc
cli
jnp
pop
stos
adc
stc
incl
or
push
sub
jle
and
sbb
mov
inc
dec
jne
ss
aad
outsl
mov
push
sbb
clc
mov
mov
imul
insb
iret
bound
outsl
add
push
inc
in
and
add
sub
in
jns
je
and
je
pop
je
movsl
cmpsl
jnp
xor
das
push
scas
lds
add
adc
ja
cmp
ja
loop
mov
lea
add
dec
ljmp
cld
push
pop
imul
neg
jle
js
pop
sub
jmp
mov
and
pushf
mov
fucomip
fnstenv
dec
and
pop
fadds
xchg
adc
or
push
add
aad
test
jae
pop
xor
mov
jecxz
xchg
xorb
cmpsb
std
mov
mov
push
in
jl
jbe
push
jae
cmp
mov
ljmp
ret
pop
lea
fldt
call
fbstp
pcmpeqb
inc
das
add
popa
xlat
ficoml
jmp
jge
jge
pop
leave
jae
inc
stc
xor
loopne
add
sbb
jmp
fstp
fldt
fisubrl
xchg
cmpb
add
add
repnz
or
cli
or
or
pslld
push
ret
mov
adc
xchg
cwtl
push
and
sbb
xor
repnz
add
mov
mov
movsl
aam
mov
sub
test
out
sub
or
xor
leave
sbb
mov
out
inc
jbe
imul
cmp
mov
mov
bound
in
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
dec
jg
push
or
push
push
int3
into
sbb
rorl
incl
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
ljmp
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
cld
incl
push
daa
cmp
inc
xor
cmp
call
mov
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
call
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
icebp
inc
call
mov
push
sbb
xchg
pop
jg
jmp
push
movsl
mov
popa
stos
sbb
addr16
clc
repz
mov
subb
and
and
outsb
bound
xor
orb
and
mov
cmc
inc
in
and
clc
pop
jne
push
or
lret
cltd
stc
or
add
ds
icebp
inc
pushl
add
and
xor
push
pusha
mov
test
adc
xor
add
xchg
in
data16
hlt
push
xor
add
xchg
lds
nop
xor
in
out
shl
xor
mov
add
sar
mov
aas
or
and
mov
dec
inc
push
push
inc
push
inc
lcall
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
pop
cwtl
fidivrs
fninit
fldcw
inc
xchg
or
push
lods
in
pusha
adc
jo
xor
mov
inc
adc
faddl
add
iret
ficomps
mov
rorb
inc
sbb
and
push
sbb
repz
jge
fsubs
or
addr16
or
push
popl
imul
and
add
mov
fildl
mov
cld
ret
jnp
xchg
stos
mov
xor
add
pop
and
lds
pop
mov
adc
cmc
outsl
pusha
loop
fdivl
test
jmp
cmp
je
sbb
or
or
mov
mov
xor
nopl
sbb
jecxz
ljmp
sbb
push
mov
mov
mov
xchg
ret
popw
xor
fdivs
ror
notl
add
mov
mov
daa
inc
push
xchg
addl
fcomps
add
scas
mov
pop
push
imulb
pop
fisubrl
enter
sub
mov
add
rorb
add
jne
inc
jmp
lret
pop
cmp
mov
push
loop
or
mov
fdivrl
lds
fcomi
sbb
mov
pop
jmp
pop
sbb
cmp
mov
xor
hlt
testb
mov
hlt
mov
push
ljmp
movl
or
or
pop
inc
and
addb
test
mov
push
pop
jl
pop
test
add
lock
call
ds
and
or
repnz
jge
mov
call
ja
out
cmp
jbe
in
xor
adc
add
push
xor
sbb
dec
mov
pop
addr16
add
add
mov
push
push
mov
mov
outsl
ficomps
mov
cmpb
sbb
mov
rolb
xchg
roll
in
xor
sbb
pop
loope
shrd
mov
fsubl
ficompl
out
mov
sbb
arpl
testl
dec
jns
and
sub
sbb
je
cld
add
inc
ret
std
xor
adc
icebp
gs
push
arpl
addr16
fidivrs
push
fsts
push
je
movsb
ljmp
sub
ja
fsubrs
mov
mov
add
stos
push
bound
jo
fs
or
add
adc
add
je
xor
add
cmp
sbb
xchg
ficoml
inc
xor
sbb
sbb
imull
mov
push
jb
pop
add
inc
add
sub
sbb
test
adc
jge
jb
inc
or
and
mov
shrb
das
xor
je
mov
inc
add
or
inc
and
shll
int3
add
aaa
xchg
icebp
lahf
cmpsb
ss
fdivrs
call
push
push
insb
xchg
inc
pop
push
insb
mov
pop
mov
xor
pop
aas
ss
lea
fnstenv
inc
or
pusha
add
lahf
sub
fimuls
inc
or
pushf
ret
fsubrl
adc
out
data16
rolb
mov
dec
fs
or
mov
loop
fcmovnu
jnp
xor
lret
sbb
leave
mov
mov
ret
fstpl
sti
mov
inc
sarb
pop
cmp
push
sub
jmp
sub
je
jmp
add
call
insl
jnp
sti
xor
push
cmp
cmp
adc
jg
in
sti
and
cmp
cmp
enter
out
jg
mov
es
jmp
mov
jmp
bndldx
into
mov
mov
push
mov
jmp
mov
aaa
cld
push
sbb
inc
xor
enter
mov
add
test
fidivs
fmulp
jo
aas
je
sub
mov
sbb
pop
int3
or
cmp
push
adc
sbb
xor
xor
cli
push
inc
sti
scas
mov
and
inc
mov
xchg
lret
sub
fstps
mov
decl
and
or
fbstp
je
push
pop
outsl
int3
negb
mov
cmp
jne
pop
jo
imul
jns
adc
pusha
stos
add
int
js
mov
xor
scas
sub
fldl
xor
xorb
in
xchg
insl
cmp
fmull
sbb
cmc
fsub
pop
mov
daa
out
push
sbb
add
mov
xchg
jmp
inc
shll
inc
inc
pop
dec
inc
cs
outsl
mov
gs
repz
repnz
fdivrp
insb
add
imul
or
cmp
jg
mov
add
add
fdivs
or
lods
mov
sbb
je
inc
xchg
sub
push
clc
into
sbb
add
ret
pop
icebp
das
mov
sbb
cmp
pop
push
mov
add
sbb
add
dec
jne
pop
pop
fisttps
add
stc
jo
insl
sbb
or
gs
mov
sbb
mov
cld
cltd
idiv
add
add
mov
adc
sti
pop
dec
xchg
mov
hlt
mov
fldcw
and
push
sbb
mov
adc
sbb
inc
cmc
lahf
adc
ja
add
mov
mov
jl
movsl
leave
jg
jl
sub
and
cmp
and
ret
mov
push
xor
lock
push
cwtl
inc
inc
mov
sbb
push
js
lods
sub
mov
lret
or
add
cmpsb
rolb
or
add
inc
xchg
cmpb
push
cmpl
sbb
ret
jo
push
cld
out
lods
mov
sbb
addr16
push
sub
sub
adc
les
adc
bound
sbb
jbe
in
clc
push
xchg
movsl
jnp
mov
testl
cmp
mov
push
sahf
scas
add
daa
in
jne
adc
pop
inc
icebp
insb
outsl
add
and
sti
addb
test
aam
imul
fstp
mov
jl
cwtl
pop
leave
add
shrl
jmp
sub
jg
cli
clc
dec
jl
lock
fistl
mov
pop
pop
dec
out
push
mov
adc
sbb
add
shlb
rorl
cs
cmp
mov
and
inc
jg
test
mov
scas
inc
cwtl
sub
addps
dec
cld
mov
sbb
xchg
movb
adc
inc
or
inc
sub
jle
push
mov
or
pop
movw
das
inc
add
push
cld
lcall
mov
int3
lods
loope
sub
mov
jne
lahf
cld
inc
sbb
rcll
mov
push
push
add
rcrl
out
or
psrad
jo
pop
add
insb
insl
add
push
add
fucom
jg
faddl
pop
lea
cmp
pushf
mov
dec
mov
and
mov
btsl
in
mov
adc
fisttpl
rcrl
sub
pop
xor
idivb
xor
jl
mov
pusha
mov
pop
mov
push
cmp
jns
adc
fucomp
scas
add
je
outsl
outsl
inc
arpl
dec
or
call
pop
fcmovnb
push
out
sub
jmp
push
cmp
and
scas
imul
add
pop
insb
mov
xor
jmp
add
add
cmp
iret
ds
cmp
mov
inc
dec
nop
push
sub
orb
add
rorl
arpl
pop
sbb
popa
and
jp
inc
sbb
test
aaa
sbb
pop
xchg
std
movsl
mov
push
cld
add
jbe
or
dec
adc
jnp
ficoml
adc
ficoml
stc
iret
inc
popa
inc
jl
pop
mov
cmp
mov
mov
sbb
mov
int3
inc
cld
sub
pusha
adc
cwtl
cli
aas
into
mov
cli
bound
push
push
pop
das
jbe
aam
test
dec
clc
inc
jo
or
push
mov
dec
sbb
xor
mov
cmp
dec
pop
test
pushf
pop
data16
dec
rorl
mov
adc
iret
push
mov
dec
xchg
jae
std
lahf
insl
cmp
cld
mov
add
dec
jmp
xchg
push
fcmovnbe
lock
out
pushf
sbb
add
mov
out
dec
jle
mov
or
xchg
dec
pop
xchg
pop
lea
jmp
mov
add
idivl
mov
mov
push
push
in
clc
decl
ja
add
push
shr
push
mov
mov
dec
dec
add
pop
dec
dec
add
dec
or
or
pop
in
mov
sub
sub
inc
pop
inc
cwtl
jp
adc
push
adc
ja
dec
add
jmp
pusha
jmp
push
add
jbe
adc
je
insb
rcll
inc
xlat
xchg
adc
stos
lock
mov
in
je
push
mov
sub
cmp
adc
es
pop
in
pop
or
dec
inc
sub
aaa
adc
rclb
xor
or
sub
inc
in
ret
dec
jl
cmp
jge
sub
xchg
jl
mov
test
cmp
insb
mov
mov
push
push
pop
ffreep
das
data16
lea
jl
xchg
jge
pop
fdivrs
sub
fnstcw
and
stc
add
lea
mov
daa
push
push
or
scas
out
xchg
dec
shlb
xchg
and
adc
xlat
inc
xlat
loope
sbb
pop
cld
jl
ljmp
jb
jo
push
jnp
adc
clc
push
mov
mov
lock
add
inc
inc
dec
xor
outsl
cli
and
mov
push
ss
js
mov
inc
cmp
fstl
cmpsb
adc
arpl
sbb
sbb
in
pop
fwait
outsb
mov
pop
clc
mov
pop
adc
sahf
dec
jle
jae
mov
cmpl
sbb
push
dec
or
mov
pop
sbb
xchg
jo
lcall
ja
xor
scas
roll
sub
icebp
dec
shl
lretw
fcomps
sbbb
dec
xor
push
sbb
pop
in
mov
cmpsl
mov
lea
or
enter
in
jb
imul
rorb
inc
jno
adc
push
inc
popa
xchg
add
cmp
jg
mov
enter
pop
or
mov
stos
xor
adc
lods
iret
loopne
or
sub
mov
cmp
and
pop
pushl
or
push
cmp
jno
les
cvttps2pi
cmp
pop
mov
mov
pop
loope
inc
add
or
adc
mov
shlb
ja
xor
jmp
adc
mov
pusha
sti
xorl
cmp
insl
aaa
fisubrs
or
dec
rclb
lods
cltd
sti
repnz
call
sbb
fbstp
sub
inc
fs
iret
pop
jnp
push
sbb
jmp
test
mov
xor
add
lock
xchg
lea
outsl
cld
dec
mov
push
add
sarl
add
sbb
mov
adc
insl
loope
adc
or
in
in
je
or
jo
adc
ret
push
sar
and
js
lret
mov
cmp
fmuls
xor
or
mov
in
jmp
int
call
lock
imul
insl
cmp
pop
add
jns
ss
cmp
sbb
pop
inc
jl
jns
cmp
pop
adc
xor
mov
dec
jne
mov
ret
sbb
jle
jg
scas
arpl
insb
and
mov
divb
repnz
inc
push
popa
jge
bound
cmc
nop
fisttpll
jne
push
xor
jb
inc
jmp
adc
sahf
adc
data16
cwtl
cmp
sbb
push
sbb
or
std
add
sub
ficomps
pop
and
jmp
pop
es
or
fcoms
les
sub
add
leave
xor
add
push
xor
adc
lock
push
nop
mov
ja
shlb
push
and
mov
scas
fs
aad
adcl
fisttpl
lret
mov
and
or
inc
mov
or
mov
clc
insl
orl
pop
jns
neg
idiv
scas
pop
fisubl
sbb
dec
je
notl
int
jl
xor
shl
pushl
rcl
rcr
out
jb
xlat
cmp
jb
sub
sbb
inc
loop
pop
jecxz
out
test
mov
add
int
sarl
sub
pop
pop
pop
push
addl
ljmp
and
adc
mov
cmpsl
jnp
mov
pop
or
inc
adc
dec
cmp
inc
cmpb
fnsave
add
scas
sti
mov
inc
jmp
cmp
jne
mov
and
sub
subl
sbb
xor
or
add
push
pinsrw
pop
push
xor
roll
or
add
sub
jb
lock
out
adc
dec
mov
and
pop
imul
xor
sbb
jmp
push
push
pop
mov
shll
mov
inc
fidivrl
sub
jl
adcl
xor
aaa
push
xor
xchg
cltd
adc
test
pop
mov
movsb
sub
add
add
push
mov
pop
inc
mov
mov
add
ret
push
sbb
rolb
sub
std
jnp
push
in
mov
into
cmpsl
test
dec
inc
call
jae
or
nop
das
jg
outsb
ret
mov
mov
rcrb
mov
xchg
mov
out
je
sub
or
or
xchg
jbe
sti
and
sarb
je
dec
jae
adc
mov
xchg
nop
fcomps
faddl
sbb
xchg
pop
fnstcw
lcall
clc
mov
mov
pop
jmp
pusha
fwait
push
cmp
xchg
push
subl
push
bound
pop
call
sbb
inc
loopne
and
mov
mov
and
jge
cmp
loope
cmpl
or
push
or
xor
or
push
outsb
xor
icebp
inc
add
sub
push
push
inc
jae
es
orb
insb
or
push
pop
lock
adc
lock
adcl
mov
fmuls
push
or
cmp
cmp
hlt
cmp
cmp
jle
daa
sbb
shlb
scas
add
sub
out
xor
and
shlb
in
jmp
sub
dec
in
ret
mov
loop
adc
lock
add
lock
adc
push
xor
imul
out
mov
sub
push
or
into
sbb
mov
out
sbbl
rorb
push
stos
sbb
shrl
xlat
pop
movb
lods
mov
cvtps2pd
add
pop
lock
ljmp
cmpsb
sbb
xor
mov
in
push
aaa
call
pop
test
out
dec
lock
in
sub
in
rclb
and
repz
push
daa
jp
push
test
xchg
push
adc
mov
and
aad
scas
mov
cmpl
call
pop
dec
js
inc
sub
inc
clc
inc
rcrl
pop
pop
ja
or
dec
icebp
add
jg
push
loope
sub
je
push
aaa
and
jp
add
ss
shll
cmp
push
enter
sbb
or
stos
mov
lods
fistl
hlt
mov
push
adcl
gs
push
sbb
adc
cmp
popa
pop
mov
pop
push
sub
jne
mov
or
mov
ljmp
rorb
adc
adc
andb
sub
lods
jle
sahf
sbbb
ss
jmp
push
adc
and
out
lcall
mov
xchg
jp
push
adc
outsl
rorb
js
pop
clc
ss
pop
sub
aas
or
add
in
mov
push
mov
lcall
lock
pop
cmc
sub
xor
mov
pop
cld
lea
imul
inc
inc
jge
sub
or
inc
cmp
insb
dec
test
sbb
inc
stos
decb
les
ret
adc
loopne
mov
sub
add
data16
jle
jg
movb
ret
dec
push
sub
mov
pop
inc
pop
aas
inc
dec
sbb
test
mov
pop
loope
call
xor
imul
gs
xor
cs
insb
add
fdivrp
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
adc
fisubs
sbb
fdivr
shrb
shrl
xchg
out
adc
add
sbb
cmp
dec
pop
stos
and
sbb
andb
push
flds
inc
mov
fdivrl
mov
pop
xorl
jl
fsubs
out
rorb
sbb
add
repnz
decl
outsl
inc
sub
std
pop
pusha
sti
xchg
in
or
add
xor
mov
fildl
cmpsb
fistpl
sarl
add
pushf
sub
stc
push
mov
sbb
movsl
in
in
aam
pop
je,pn
and
or
inc
and
jbe,pn
cmovnp
sub
and
fidivrl
or
test
cmp
jne
xchg
cmp
sub
repz
mov
int3
sbb
lock
push
outsl
data16
popa
jb
sub
arpl
gs
sbb
pusha
xchg
inc
and
out
mov
mov
andb
enter
mov
into
and
xchg
or
mov
jb
pusha
test
fnstcw
adc
and
mov
mov
mov
pop
out
mov
aaa
inc
je
push
sub
sub
mov
inc
cmp
xor
and
cmp
cmp
push
and
add
push
nop
or
pusha
dec
fsubl
pop
add
outsb
mov
sbb
add
add
inc
adc
or
das
ret
mov
push
and
add
push
mov
pop
lock
inc
mov
aam
test
wbinvd
adc
mov
xchg
addb
shrl
test
loope
sbbl
mov
insl
test
ja
orl
ret
mov
sub
xchg
xor
and
clc
pop
fsts
lcall
push
push
std
aaa
dec
lock
mov
mov
mov
jge
stc
jae
push
mov
xor
lock
and
fdivrp
mov
mov
cli
ret
mov
hlt
inc
nop
addr16
pushf
or
ret
ror
sbb
push
mov
filds
add
movb
add
sbb
lea
int3
inc
sti
mov
cli
int3
and
jo
sbb
pop
fldcw
xlat
or
ret
push
divb
cmp
add
and
ds
sub
cmpsl
fsubs
jbe
out
bound
xchg
xor
adc
movups
mov
mov
dec
je
push
inc
push
sbb
and
push
inc
aam
push
cmp
xor
icebp
push
add
cmpl
inc
ss
loop
cmp
imul
test
dec
aas
push
fbstp
and
cmpsl
mov
inc
adc
gs
addb
cs
outsb
cwtl
andb
mov
ds
adc
ret
mov
js
mov
sub
testl
ljmp
mov
pushf
mov
cmp
mov
out
adc
xchg
loope
and
jnp
push
cwtl
aaa
dec
push
jb
add
xchg
dec
push
and
pop
mov
xor
and
andl
or
nop
mov
and
dec
push
cmp
clc
shl
lock
sbb
dec
xchg
stos
push
cld
push
lcall
push
xchg
pop
sbb
or
orl
in
pop
or
fsubs
aam
ror
xor
and
and
and
test
or
enter
cwtl
or
enter
mov
enter
test
jl
je
orl
insb
push
fs
pop
pop
or
enter
dec
xor
and
and
and
sub
and
or
enter
or
enter
add
xchg
daa
dec
push
cld
sar
shl
rorb
enter
in
call
and
fmul
and
and
rcrb
aam
aam
aam
and
dec
push
aam
dec
and
inc
orl
cmp
xor
or
enter
and
enter
sbb
enter
adc
or
orl
add
or
enter
adc
add
in
addl
aam
nop
inc
push
sbb
lock
inc
push
sbb
loopne
sbb
fcom
rcrb
fs
inc
int3
enter
inc
push
sarb
mov
inc
push
sbb
mov
pushf
cwtl
xchg
nop
sbb
mov
push
cmpb
push
sbb
sbb
add
and
or
fstpl
leave
add
jl
mov
popw
icebp
xor
and
and
and
cli
orl
sti
cld
std
decb
enter
loope
enter
jecxz
enter
in
out
orl
jmp
enter
out
or
enter
shll
enter
rcl
enter
aad
xlat
and
fiaddl
fimuls
enter
shll
and
and
and
lret
xor
lret
int3
int
or
enter
mov
enter
mov
enter
mov
mov
orl
mov
enter
mov
mov
in
pop
je
pop
je
or
inc
hlt
pop
pop
or
xchg
xchg
sub
ret
scas
pop
xchg
in
bound
xchg
add
add
decl
inc
js
gs
imul
pop
popa
mov
pop
addr16
jle
daa
sti
inc
inc
dec
gs
jo
nop
mov
or
adc
inc
xchg
insl
call
dec
dec
gs
outsl
jb
xlat
adc
mov
ret
adc
pop
or
push
cmpb
mov
enter
je
pop
mov
xlat
les
xchg
sbb
les
pop
adc
imul
and
xchg
nop
pusha
or
or
mov
push
jl
mov
pop
inc
or
imul
and
xor
aam
mov
inc
mov
gs
push
fcompl
mov
outsb
or
mov
insb
outsl
ja
pop
pop
lds
ret
or
dec
xor
loopne
loopne
mov
or
and
mov
imul
cmp
cmp
arpl
mov
nop
sub
adc
imul
sub
pop
sub
pop
mov
outsb
fs
nop
inc
arpl
pop
orl
outsb
pop
pop
sub
pushf
pop
pop
or
cmp
adc
inc
popa
jae
outsl
clc
push
or
lret
or
xor
lret
std
or
inc
push
adc
arpl
pop
outsl
xchg
push
mov
sub
mov
push
inc
not
mov
insb
gs
or
push
mov
gs
push
je
arpl
sub
adcb
popa
and
outsl
je
insb
inc
and
pop
daa
addl
lods
inc
pop
fs
sbb
mov
push
xor
les
roll
push
shrb
jl
jl
sbb
inc
push
fdivs
test
pop
fcomps
data16
addr16
cmpl
popa
gs
outsl
ss
outsb
dec
aas
adc
cs
xor
push
dec
pop
mov
fisttpl
or
jae
and
jo
enter
cmp
push
push
test
and
xor
add
lret
mov
mov
mov
enter
jne
or
stos
jmp
push
push
shlb
push
ret
mov
push
push
dec
inc
cmp
fisttps
pop
mov
and
pop
pop
sub
ljmp
icebp
sub
jbe
shll
add
cli
xor
dec
xor
loopne
lock
call
movsb
mov
testl
lcall
cmp
movb
dec
inc
stos
ret
push
sub
fnstcw
incb
fnstcw
orw
call
sbb
andl
in
fstpt
fildll
fildll
ret
dec
mov
add
sub
add
rorl
fildll
stc
mov
mov
cmpsl
xor
add
push
push
fcom
fstsw
sahf
jae
outsl
inc
fndisi(8087
fnstenv
ffree
ffree
ffree
pop
lds
add
nop
mov
fimull
pop
mov
jge
pop
out
inc
out
imul
push
push
adc
mov
xor
push
sub
test
mov
push
pop
lods
in
aas
testb
jne,pn
cmp
jne
dec
dec
sub
xlat
out
push
xor
mov
mov
pop
test
mov
add
xchg
cmp
jo
daa
iret
je
inc
in
int
xchg
call
fwait
cmp
inc
mov
push
idivl
or
shrl
lea
xlat
xchg
lods
inc
lods
and
push
or
pop
sar
pop
mov
mov
mov
or
cltd
xor
adc
pop
clc
sub
mov
ja
sub
mov
iret
push
or
mov
in
or
daa
mov
add
lret
mov
mov
out
testl
adc
pop
xchg
mov
sbb
xor
xor
rorb
jecxz
pop
push
xor
adc
mov
dec
push
inc
sbb
mov
mov
sub
je
inc
adc
int3
mov
or
std
push
out
or
or
adc
mov
xchg
xlat
fcomp
inc
decl
add
jbe
mov
test
cmp
test
mov
pop
insb
or
and
sbb
adc
shll
aam
mov
hlt
and
mov
test
notb
dec
sub
clc
out
lea
mov
rcrl
pop
add
adcb
repz
ljmp
sbb
stos
insl
ror
cmc
mov
jb
clc
push
loopne
js
pop
xorb
lods
cmp
inc
loope
sbb
mov
jecxz
std
jmp
push
bnd
call
mov
or
adc
ss
jne
pop
hlt
adc
lods
jmp
or
mov
in
cmp
adc
mov
std
or
out
push
push
or
pop
mov
jae
add
fildl
mov
jae
ss
xchg
xchg
cltd
add
inc
fstp
sbb
push
xchg
pop
dec
pop
pop
mov
mov
dec
popf
pop
jge
cmp
and
jb
cmp
cs
cmc
ja
imul
mov
add
xchg
add
pop
mov
mov
jg
push
inc
lock
pop
jle
cmpb
ret
je
fiaddl
and
mov
inc
sbb
sub
jne
lea
mov
dec
push
jmp
and
test
add
pop
jae
xor
mov
fldenv
fistps
subb
push
xor
mov
stos
pop
fistpl
lea
stc
fsubrs
shll
add
call
in
lea
adc
cmp
jbe
inc
lret
sub
je
test
dec
mov
jns
or
cmp
fucomi
mov
cmpsl
cs
adc
outsb
pusha
push
mov
jg
adc
stc
push
jne
inc
xor
push
bound
jbe
pop
push
loope
mov
push
add
jmp
xor
and
or
inc
cmp
mov
notb
mov
jne
pop
and
insb
aad
iret
andnps
or
add
or
inc
cmp
ja
in
iret
pop
add
adc
adc
enter
push
cltd
lret
sub
leave
mov
mov
repz
mov
add
or
mov
inc
je
mov
push
inc
je
mov
data16
mov
add
jp
ds
cli
push
divl
sub
ret
mov
les
sbb
adc
rcrb
cmp
scas
mov
clc
stc
push
jo
mov
and
movsb
pusha
cmp
mov
mov
jl
ret
sbb
adc
mov
adc
iret
lahf
mov
mov
lock
jge
sub
xlat
xchg
mov
cli
add
mov
test
lcall
sbb
adc
loopne
push
inc
icebp
test
xor
dec
adc
xchg
xchg
and
add
pop
sub
pop
adc
dec
clc
je
sarb
ds
sahf
or
push
ja
sbb
dec
clc
dec
cld
lea
sub
cmpsl
or
fdivr
fistpll
cmp
jl
jmp
add
mov
add
push
push
dec
fnsave
dec
cmp
das
xlat
add
jmp
lea
aaa
add
int
fistpl
inc
push
cmpb
or
adc
or
push
or
mov
mov
stos
xchg
push
mov
cmp
inc
pop
out
mov
inc
dec
cmp
mov
jmp
into
add
stos
cmp
jne
pop
pop
pop
aam
arpl
outsb
cltd
mov
mov
inc
fmulp
mov
jl
mov
ret
mov
pop
or
nop
pop
xchg
testl
mov
jle
sub
mov
add
stc
iret
arpl
jge
movzwl
xor
mov
jae
sbb
jecxz
fists
popa
aaa
lea
mov
arpl
jmp
xor
inc
pop
ret
sti
add
insl
sti
add
or
mov
add
addl
sbb
js
mov
loopne
gs
mov
in
inc
jb
dec
inc
hlt
dec
lods
or
sub
dec
ret
cltd
jo
pop
push
jle
dec
aam
ret
jg
xor
or
sbb
sbb
or
mov
stos
neg
or
pop
jmp
cmc
inc
inc
je
stos
loop
mov
adc
or
and
daa
fwait
insl
inc
sbb
pop
add
test
mov
int3
dec
or
mov
popf
imul
mov
mov
movsl
push
icebp
mov
hlt
ss
jmp
adc
mov
das
push
js
jmp
add
mov
dec
mov
testb
repz
inc
push
dec
je
dec
jne
cli
scas
mov
stos
sbb
call
and
stos
jecxz
cmp
add
stc
or
shrl
jno
call
or
cmp
int3
shl
mov
jmp
pushf
fwait
movsl
jb
pop
add
aas
cmp
je
mov
mov
inc
or
rclb
push
fnstcw
lcall
test
sub
sub
outsb
add
and
popf
or
and
fistps
adc
inc
sub
sub
divl
and
sub
scas
jnp
or
arpl
jmp
sbb
inc
shll
sbb
cmp
cmp
mov
cmpsl
je
fs
push
in
cs
or
data16
pop
mov
sarb
cmp
and
inc
push
cmc
adc
cmpl
add
movb
mov
js
cmp
cs
repz
push
jl
clc
adc
mov
neg
loope
fstpl
jmp
mov
fstps
pop
inc
testb
sub
fcmovnbe
fidivl
jne
lea
mov
inc
sub
dec
loope
and
add
sub
outsl
mov
popf
inc
shrb
jns
dec
cld
data16
inc
fsubs
or
add
call
jae
jle
icebp
dec
lea
add
add
or
out
adc
in
jmp
data16
mov
fdivrs
adc
popf
and
and
jmp
xor
push
or
mov
inc
in
jp
add
dec
out
or
cmp
adc
loope
inc
outsb
orl
sar
mov
hlt
cwtl
sub
pop
mov
or
out
ret
aaa
push
push
add
pop
mov
or
jmp
loopne
jae
dec
add
mov
in
add
mov
fidivl
or
dec
sbb
test
sub
into
and
jne
dec
mov
outsl
adc
cmp
adc
lods
int
and
and
add
mov
outsb
out
movb
cmpb
idivl
push
fmuls
fisttpl
loopne
and
pop
push
ljmp
push
push
lea
sub
inc
push
fmulp
dec
mov
cmpsb
loopne
sbb
or
adc
test
push
xchg
or
push
push
loopne
jbe
cmovo
adc
mov
jmp
cld
loopne
je
adc
pop
mov
cmp
or
arpl
sbb
fcom
push
inc
jbe
jnp
inc
xchg
jbe
pop
or
mov
xlat
inc
lods
rolb
adc
out
sbb
inc
inc
dec
lods
pop
sbb
addl
in
lock
and
fs
cmp
push
push
and
jae
mov
mov
pusha
add
sbb
cs
loop
pusha
add
bound
push
in
je
ret
or
fadds
nop
sub
roll
or
pop
sbbb
scas
mov
xor
mov
sbb
mulb
je
pop
je
dec
cmp
inc
stos
push
lock
and
or
mov
sar
or
cmp
xor
test
pusha
jmp
inc
scas
sub
xchg
push
pop
test
adcl
fwait
mov
cmpsl
add
jbe
sbb
in
js
shrl
xchg
mov
je
lea
inc
cmp
addl
arpl
add
das
push
push
mov
cwtl
mov
and
push
hlt
push
sub
jb
test
mov
ja
xchg
aaa
adc
ss
mov
push
jp
clc
out
lahf
sub
adc
subb
sbb
mov
clc
lea
push
ljmp
sbb
je
xlat
mov
jecxz
push
sbbb
sbb
add
fdivrs
shrb
stos
incb
pop
or
add
add
cs
inc
nop
pop
xchg
adc
add
inc
xlat
insl
outsl
cld
aas
rcrl
inc
mov
out
lods
pop
jne
and
jle
sbb
and
sbb
js
ret
fwait
push
fsubs
dec
mov
hlt
loope
out
repnz
je
jne
sbb
push
movsb
in
in
jle
dec
fldl
in
mov
xor
jecxz
addr16
jmp
or
add
or
add
out
cmp
add
adc
xchg
add
sbb
cmp
add
xchg
sbb
mov
cld
mov
fmull
cmp
shr
and
test
and
inc
or
sbb
punpckldq
sbb
push
ja
inc
mov
sub
sti
ret
mov
mov
fisttps
inc
pxor
jg
loopne
xchg
add
cmp
mov
orl
pop
jno
pop
test
jp
pop
xor
or
inc
add
cs
js
pop
mov
cmp
xchg
cld
jo
mov
cs
inc
add
cwtl
push
jo
lock
and
add
dec
sub
mov
push
sahf
adc
and
add
ss
mov
outsl
sti
fcompl
enter
dec
lea
adc
pop
int3
push
mov
inc
add
add
mov
inc
movsb
mov
jle
mov
pop
mov
shr
mov
inc
push
add
pop
aaa
fsts
daa
dec
push
add
pop
fmull
fdivrs
dec
inc
xor
or
add
sub
add
push
sbb
das
loopne
inc
xchg
out
leave
and
bound
dec
loope
arpl
dec
sub
inc
lods
ja
nop
xor
imul
andb
mov
jg
incb
je
stc
inc
add
xchg
sahf
jge
push
or
push
or
insl
add
into
jno
sbb
bound
lods
mov
pushf
movsl
jge
loop
ret
mov
mov
data16
mov
sub
lea
jae
lret
jle
or
clc
mov
loopne
cmpsl
cmpb
and
inc
ja
push
or
arpl
cmp
rol
mov
adc
lock
ret
add
push
jg
cmp
lods
sbb
mov
xchg
inc
enter
sbb
mov
inc
test
cmp
xchg
adc
jo
pop
pop
pop
and
jg
mov
mov
push
call
sbbl
sar
lret
adc
ljmp
add
adc
pop
nop
ja
sbb
xor
mov
imul
pop
or
inc
ret
aad
push
enter
xor
popf
lock
xor
lock
subb
or
push
mov
xor
mov
or
in
push
lock
cmpsb
xchg
hlt
clc
adcl
loopne
xor
notl
shlb
inc
in
sbb
sbb
jmp
push
fistl
insl
add
xchg
outsl
cltd
roll
cmp
fs
inc
pop
addr16
xor
lock
bound
and
push
stc
inc
cmp
je
jmp
xor
inc
xor
sub
jmp
and
mov
lret
testb
mov
add
mov
lret
or
or
push
push
or
adc
test
inc
test
mov
ss
or
enter
filds
or
cmpl
inc
ds
xchg
xchg
test
leave
faddl
test
mov
push
in
sarb
int3
test
or
inc
jnp
orb
pop
xor
fdivr
decb
jp
sub
shll
mov
push
mov
insb
or
mov
cmp
or
les
xchg
xchg
in
fs
shl
pop
sub
push
inc
divb
leave
sub
cmp
into
fcomp
dec
jmp
cwtl
nop
ds
xchg
dec
inc
pop
cwtl
pushf
mov
movsb
nop
add
xchg
mov
inc
xor
jecxz
inc
scas
mov
mov
and
in
push
adc
addb
add
ljmp
movsb
mov
pop
or
shl
push
xor
ljmp
xor
dec
mov
add
mov
and
lock
js
xor
pop
inc
push
cmp
inc
adc
xor
mov
inc
lds
cmp
in
sub
in
shlb
push
mov
hlt
bound
mov
loopne
sub
mov
mov
lret
xchg
out
and
cmpb
addb
adc
mov
add
pop
mov
ljmp
xchg
xor
inc
mov
data16
fdivrs
in
nop
ret
adc
sub
enter
add
mov
inc
add
xchg
mov
in
jno
test
mov
leave
mov
mov
adc
adc
push
stc
jmp
in
inc
mov
enter
mov
dec
pop
pop
out
inc
pop
ja
sarb
cmpb
xor
push
or
mov
and
push
mov
testl
adc
pop
push
aad
or
adc
jns
dec
or
inc
add
or
jmp
mov
dec
add
push
es
adc
adc
lgs
pop
int3
scas
scas
add
push
in
mov
xorl
sbb
push
dec
fadd
cmpsl
sbb
push
insb
mov
inc
mov
cs
pop
pop
mov
sub
and
xor
stc
mov
flds
add
dec
ljmp
lahf
bndldx
stos
rcrl
test
mov
jae
jmp
sbb
jle
aad
inc
push
das
call
test
out
or
mov
sahf
dec
pop
lods
ret
daa
mov
sub
stos
int3
sub
jb
je
fimull
mov
pop
add
pop
jne
or
das
stos
hlt
hlt
inc
xchg
add
inc
xchg
rorb
stos
subb
or
jae
inc
fcomps
mov
cmpl
xchg
mov
fdivl
dec
mov
imul
adc
ljmp
mov
mov
sub
jb
inc
mov
mov
call
stos
decb
dec
jne
add
cmp
jge
sub
xchg
inc
jne
icebp
ret
jecxz
mov
ja
sbb
inc
jnp
fs
add
loop
mov
push
cmp
rcl
pop
mov
and
data16
movzwl
neg
pop
sub
call
and
in
dec
scas
sbb
cwtl
mov
jp
roll
lods
dec
ja
mov
ja
fstps
sub
inc
adc
sbb
fists
fcomip
push
pop
mov
push
ret
popf
int
fimuls
aaa
xor
popa
or
mov
inc
inc
cmp
imul
adc
cmp
pushw
add
or
jge
or
cmp
and
cmp
movsl
subb
decb
jmp
inc
dec
in
shlb
mov
adc
or
adc
sub
stc
push
aam
das
fstps
mov
mov
and
popl
adcl
jb
xor
sbb
pop
mov
dec
dec
push
and
mov
roll
adc
mov
pop
and
sbb
aaa
aam
call
nopl
mov
push
jg
inc
push
fs
in
in
sbb
mov
cmp
push
shrl
loopne
test
sub
pop
pop
push
in
aam
fdivrs
mov
mov
fcmovnbe
aas
pop
sub
sarb
xchg
int3
and
inc
mov
xchg
clc
mov
insb
test
xchg
push
push
mov
sbb
push
jl
and
and
push
in
fstpt
popa
rolb
inc
hlt
mov
int
insl
xor
add
push
adcl
hlt
mov
rcrb
pushf
clc
or
shlb
inc
andl
adc
clc
xor
fs
loop
pop
test
fs
pop
jbe
adc
add
or
add
orb
push
addb
inc
dec
push
dec
add
push
push
and
pop
inc
cmp
push
mov
dec
or
jae
sbb
test
or
inc
aad
lea
insb
and
mov
sbb
adc
push
push
test
adc
add
sub
mov
and
lock
add
or
adc
or
pop
push
inc
imul
in
push
push
jo
arpl
js
insb
aaa
sbb
mov
jmp
nop
xchg
int3
lahf
mov
pop
xor
inc
cmpsb
orb
pop
hlt
jo
lcall
pusha
push
scas
imul
lcall
cmp
cmp
imul
cmpsb
jmp
adc
test
int
jmp
pusha
clc
mov
cmpsb
pop
jbe
dec
mov
push
loopne
scas
xor
shlb
movsb
enter
repnz
scas
rolb
pop
mov
inc
mov
cmp
je
movsb
test
mov
fs
nop
scas
cwtl
aam
xchg
xchg
enter
lcall
mov
shrb
or
mov
add
jae
iret
scas
pop
jo
scas
insb
int
xchg
sbb
mov
lcall
scas
imul
push
lods
imul
dec
and
push
imul
fstps
cmp
mov
sbb
scas
leave
out
jae
xchg
scas
sub
mov
fwait
ror
inc
and
scas
and
sbb
mov
xor
sbb
lret
adc
add
or
cmp
mov
dec
mov
pop
pop
cld
rol
jge
fnstsw
mov
filds
xor
jg
mov
lods
adc
dec
pause
and
mov
in
lahf
loop
int
cmp
cmp
testb
ljmp
sbbb
sbb
add
movsb
jns
or
cmp
xor
or
mov
push
or
sbb
xchg
mov
or
and
push
xchg
jg
xchg
and
out
subl
lea
sub
lods
into
xchg
xor
or
sbb
adc
in
sahf
or
test
int3
in
jb
inc
and
nop
xchg
sbb
cmp
js
aad
jo
shll
popa
xchg
cwtl
insb
or
pop
push
cmp
xchg
push
int3
xchg
mov
pop
ror
mov
mov
xchg
or
add
push
fbld
mov
pop
and
out
add
sub
push
push
push
out
popa
fs
js
nop
add
gs
add
jl
orb
rorb
cltd
outsl
pop
push
push
je
in
cmpsb
sbb
imul
sub
jle
in
int3
cltd
add
adc
cmp
inc
fst
outsl
insl
inc
ja
xchg
xchg
data16
js
adc
leave
dec
xchg
lcall
insb
ja
pop
or
add
shl
icebp
mov
jne
or
dec
cli
pop
test
or
jae
jne
sub
pop
adc
add
push
mov
push
or
push
sbb
mov
sar
icebp
addb
fcompl
pop
adcb
inc
dec
or
mov
imul
into
sbb
dec
or
scas
inc
repz
jge
sub
mov
shl
lea
adc
insl
sbb
lods
adc
clc
outsl
pop
inc
or
cmp
mov
push
sarb
push
push
or
add
aas
mov
andl
jle
mov
test
movsl
roll
push
adc
or
pop
pop
in
dec
cmc
jmp
out
add
mov
stos
push
push
jno
fisubrl
jmp
inc
cmp
push
add
add
outsb
mov
repnz
cmp
mov
lret
enter
rcr
add
lods
or
test
pop
jo
jno
ljmp
jg
add
pop
rolb
daa
shl
jo
add
aas
lcall
dec
jle
pop
loope
push
xchg
sbb
mov
subb
sub
loopne
mov
jg
jmp
mov
dec
mov
sub
jg
dec
mov
xchg
mov
pop
mov
mov
lock
ret
repnz
jmp
or
pushf
scas
je
adc
gs
imul
add
inc
or
aaa
sbb
clc
inc
and
cmc
mov
outsl
xchg
repz
leave
cmp
and
les
sahf
adc
or
nop
inc
inc
sti
adc
enter
jle
and
stos
cltd
arpl
xor
je
adcb
sbb
js
cmpb
pop
in
test
test
cmpsl
pop
cmp
cmp
test
mov
insb
out
idivl
cwtl
lock
cmp
mov
sahf
sbb
out
inc
movsb
outsl
cmp
cmp
fisubl
dec
adc
mov
and
xchg
mov
push
sbb
adc
add
imul
add
pop
pop
push
xor
add
lock
rorl
mov
sbb
loop
jb
andb
push
cmp
adc
adc
or
hlt
mov
adc
out
jnp
mov
xor
and
xor
stos
xchg
mov
adc
fldl
add
sub
pusha
adc
mov
cmp
add
sarb
or
pop
mov
loop
cmp
inc
bound
das
ljmp
out
xor
xor
popa
shrb
sub
jg
mov
mov
icebp
inc
adc
mov
mov
add
cs
or
jne
xor
dec
in
subl
std
xor
push
or
fadd
mov
adc
push
sub
or
sub
mov
shrb
test
test
xchg
sub
xor
mov
add
dec
push
adc
push
add
not
jb
shlb
leave
add
adc
mov
add
or
lea
loopne
lahf
or
xchg
dec
ds
stos
lcall
outsl
or
or
push
sub
pushf
inc
sbb
insl
daa
mov
outsb
inc
aam
pop
and
stos
ja
pop
mov
leave
js
inc
cmp
jge
or
rorl
mov
out
jecxz
adc
xor
je
adc
loopne
ljmp
adc
lret
or
add
push
add
adc
shrl
mov
das
adc
sub
push
mov
inc
xor
dec
ds
aad
and
clc
mov
sbb
add
sbb
jnp
adc
sbb
rclb
xlat
lods
adc
add
lds
test
mov
jo
push
aaa
in
pop
jb
fwait
pushf
mov
mov
nop
in
fwait
sub
imul
inc
popa
outsb
jbe
jae
pushf
mov
jo
nop
mov
imul
jo
addr16
lods
pop
mov
jmp
stos
int
mov
stos
in
scas
mov
adc
leave
mov
or
dec
inc
int3
stos
pop
mov
mov
popa
or
mov
or
ss
pop
mov
sub
sar
or
push
fnclex
les
adc
fimull
inc
push
int3
int
sbb
dec
sbb
jge
daa
mov
push
pop
dec
scas
outsb
js
js
add
dec
mov
and
mov
cmp
je
mov
test
or
push
push
mov
or
mov
mov
or
sub
and
jmp
orl
or
daa
pop
sub
jns
and
pop
add
mov
not
and
mov
nop
mov
loopne
hlt
and
fisttpl
sbb
imul
je
stos
das
es
and
fadds
rorl
xchg
sbb
inc
dec
or
outsl
inc
push
rcrb
add
cmpps
sub
xchg
fiadds
dec
jns
call
mov
jecxz
adc
jecxz
ret
mov
jmp
dec
jae
aaa
loopne
push
insl
ss
push
push
push
outsb
aas
inc
fisubrs
clc
and
jge
les
and
lcall
xor
adc
mov
mov
lods
mov
push
push
or
add
inc
jl
add
cmp
dec
sti
push
adc
or
or
sbb
sub
add
jae
mov
pop
je
mov
add
push
aas
sub
jmp
mov
push
add
pop
push
jle
sbb
or
push
cmp
imulw
xlat
pop
push
xor
or
imul
lds
cmp
shl
pop
mov
push
fidivrl
cli
aam
cmp
sub
imul
mov
xchg
xchg
cwtl
insl
push
jecxz
fmuls
lds
pop
ret
iret
inc
out
fimuls
jbe
mov
inc
push
dec
adc
or
jne,pn
call
fs
inc
xchg
mov
outsl
ret
or
and
push
outsb
int
and
nop
hlt
mov
lods
insb
jne
xchg
fwait
shlb
aam
addb
rolb
addl
shlb
cmp
stos
js
xor
mov
dec
addl
mov
xor
shll
mov
add
xchg
pop
mov
and
xor
dec
jg
push
je
sub
aam
iret
jl
lock
push
mov
mov
shrl
adc
enter
sub
insb
mov
jg
fs
jge
or
insb
sbb
mov
ss
or
sub
or
xor
push
sbb
sahf
mov
add
dec
push
or
les
lcall
sbb
inc
andl
mov
sub
popf
inc
or
inc
das
pop
ds
js
add
mov
fcomps
jo
test
orps
sub
les
insb
rcll
fcmovnu
fmul
pop
sub
or
pop
push
int3
xor
clc
in
inc
and
decl
je
push
sbb
enter
push
dec
data16
or
xchg
loopne
aam
inc
adc
rol
imul
mov
shlb
shll
stc
inc
push
jae
fdivrl
dec
loop
cs
inc
or
fs
shlb
or
cli
mov
or
or
outsb
adc
sub
inc
popf
inc
mov
loopne
es
jne
movl
pop
lahf
mov
jmp
sbb
jne
add
pop
gs
ds
ljmp
js
cmp
mov
pop
push
fstp
xor
and
sbb
adc
fwait
xor
and
adc
in
add
or
cld
add
xchg
mov
lea
add
push
sbb
ret
push
lods
pop
push
cmp
cmpsl
add
or
add
sub
hlt
inc
incl
jne
mov
faddl
sub
add
sbb
add
jle
or
popa
sbb
dec
mov
std
xchg
test
xchg
push
mov
add
insb
ja
cmpsb
cmpsl
sbb
mov
or
or
in
push
lret
and
dec
cmc
push
add
and
push
pop
xor
fmull
test
xchg
cmpsb
add
or
or
rcll
xchg
insl
or
insb
and
incl
sub
mov
or
add
adc
lret
repnz
mov
cmp
cld
lcall
mov
xchg
pop
nop
add
cmp
push
or
and
jmp
adc
pop
or
es
mov
or
push
dec
in
in
jmp
lods
into
insl
aam
mov
or
jo
mov
adc
sbb
sub
jecxz
inc
out
fsubrs
mov
jne
fsubs
rorl
movsb
adc
flds
jl
jne
xchg
cmp
jne
mov
in
and
xor
inc
mov
push
add
out
sbb
inc
lods
cmpsl
push
xchg
cmp
inc
adc
mov
add
or
int3
dec
testb
and
or
xchg
in
adc
xor
or
mov
xor
cmp
adc
xor
or
jne
aaa
fcmovb
xor
xor
and
iret
fcompl
dec
out
lret
and
leave
ja
outsl
or
loopne
push
push
xor
sbb
cmp
fprem
push
xor
adc
popf
andb
jp
jmp
sub
inc
or
pop
inc
ret
test
ss
adc
int
test
push
push
sbb
cmp
cmp
xor
pusha
dec
sub
inc
pop
addb
mov
push
out
sub
push
add
mov
mov
sbb
loop
orl
lock
iret
adc
test
add
sbb
sbb
pop
pusha
inc
sarl
cs
hlt
mov
data16
dec
sbb
xchg
imul
push
push
or
lret
pop
clc
push
add
aaa
inc
mov
mov
xchg
push
push
popf
xor
push
dec
pop
pop
add
insb
add
jae
mov
mov
movsb
push
mov
xchg
stos
pop
clc
dec
dec
mov
clc
aas
test
enter
xor
mov
jno
cltd
les
movsb
push
pop
inc
js
sbb
xlat
xchg
js
push
dec
xchg
or
or
cwtl
xlat
es
pop
push
lods
dec
daa
pop
jg
push
lea
mov
out
rcr
or
fisubrs
aam
adc
or
test
sub
mov
cli
inc
lods
push
or
sub
dec
add
mov
mov
mov
rcrl
pushf
inc
push
or
je
jl
push
cmp
cmc
add
jbe
sbb
mov
stc
adc
dec
sub
cs
sub
popa
jmp
pop
pop
inc
push
sbb
or
cmp
jle
mov
jmp
es
and
aad
addb
pop
lea
jmp
mov
mov
arpl
jp
jne
mov
jmp
mov
or
adc
mov
or
push
mov
ret
outsb
add
pushf
les
aam
cli
sub
dec
cmpsl
lods
pop
lods
pop
mov
or
out
imul
into
ret
outsb
iret
jg
pop
loopne
insl
lods
rclb
cmp
sbb
jb
inc
jb
sub
dec
xchg
sbb
xor
jno
or
pop
or
xlat
dec
fmuls
cmp
sub
arpl
add
pop
and
js
sbb
mov
pop
je
push
xchg
sbb
inc
xor
ja
jnp
cmp
hlt
xor
dec
push
or
loope
inc
add
fimull
and
cmp
adc
arpl
push
scas
dec
clc
push
add
scas
pop
test
pop
add
ss
pop
mov
mov
ds
pop
xchg
pop
jl
push
or
data16
lds
adcb
dec
in
iret
insl
sub
dec
in
aaa
movsb
dec
push
popa
movb
jge
test
mov
ret
cmp
xor
jle
jg
mov
adc
ret
cld
and
movl
fmuls
sbb
mov
or
inc
sbb
nop
dec
push
daa
mov
loope
inc
lret
mov
push
cmp
mov
outsl
popa
cmp
arpl
sbb
ja
jl
or
rolb
sbb
cmp
inc
adc
fcmovnb
push
pushf
sbb
pop
lret
push
adc
fwait
lds
sub
add
rcrb
jecxz
cmpsl
mov
mov
and
lcall
mov
mov
out
add
clc
dec
mov
dec
adc
or
xchg
cmp
or
jmp
mov
or
push
lahf
movb
fcmovb
cmpsl
dec
push
mov
push
pop
cmp
ds
insb
movb
and
pop
mov
dec
push
push
stos
or
add
push
mov
sbb
xchg
lahf
lock
sbb
dec
icebp
xchg
sub
mov
lock
lret
je
or
inc
mov
fcompl
sbb
pop
sub
adc
in
bound
push
fsubr
sbb
iret
add
push
dec
xor
cmp
inc
out
mov
xlat
mov
push
adc
cld
or
xchg
imul
xchg
jnp
dec
test
xlat
jmp
ja
add
adcl
sbb
mov
inc
mov
loopne
adc
dec
pop
xor
or
push
sub
rclb
fcmovu
inc
jle
add
sbb
nop
inc
sbb
jg
add
aas
adc
mov
or
inc
dec
lds
dec
leave
insb
shlb
rclb
push
andb
arpl
push
daa
sbb
sbb
mov
push
jbe
cmp
jbe
sbb
pushf
xor
jne
insb
daa
cwtl
push
lods
inc
adc
lret
lea
mov
push
mov
add
lods
cmp
sbb
adc
lock
pop
je
sub
pop
xchg
push
xchg
mov
add
add
mov
rcrb
adc
roll
bndstx
or
sbb
test
scas
iret
mov
push
push
adcb
inc
daa
jb
xchg
and
mov
loopne
dec
push
ds
pushl
aaa
sbbl
pop
xor
mov
add
dec
inc
mov
mov
mov
jbe
xor
ret
outsl
repnz
pushf
or
mov
pushf
cmp
sbb
add
mov
aam
jo
xchg
mov
mov
adc
and
and
push
orl
dec
dec
inc
inc
or
enter
xor
enter
sub
enter
push
mov
pop
mov
insb
addr16
call
mov
and
push
inc
inc
lcall
push
mov
push
mov
aaa
pushf
push
mov
aad
push
aam
fildl
or
addl
sub
mov
je
movsb
cmp
sub
arpl
andb
out
in
and
add
popf
notb
repnz
sbb
lock
data16
push
or
sbbb
dec
xor
or
cld
aas
xor
cmp
sete
neg
sbb
sbbb
jnp
hlt
es
in
frstor
add
mov
pop
cmp
jl
ret
jg
or
jecxz
inc
adc
in
lcall
add
jl
cmpb
sbb
jge
push
pop
dec
jne
fsubrs
clc
push
push
lret
inc
push
popf
into
push
repnz
jge
js
add
incl
stos
dec
jmp
sub
inc
in
mov
das
push
jg
arpl
hlt
test
rol
xchg
call
adc
int
fldcw
pushf
dec
push
push
push
jl
and
or
or
repnz
mov
inc
and
out
outsl
pop
xor
mov
clc
pop
xchg
repnz
or
mov
push
cmp
pop
call
orb
mov
and
or
pushf
jge
cmp
inc
lods
sbb
mov
data16
xchg
or
jo
sub
mov
punpcklwd
idiv
into
mov
jbe
fwait
out
mov
sbb
clc
pushf
lds
xchg
push
push
sbb
outsl
outsb
jmp
cmp
and
dec
lahf
inc
je
add
xchg
je
add
stos
jge
push
sub
imul
bound
int3
sti
mov
xor
mov
ja
sub
aam
sarl
movsl
jnp
shld
ret
mov
or
int
or
call
push
jg
push
in
or
aam
jns
adc
mov
and
out
adc
ljmp
out
fsubrl
fdivs
psrld
fsubrs
aam
and
and
and
shlb
and
xchg
mov
xchg
add
aaa
decb
xor
push
sub
dec
ds
jmp
adc
enter
mov
pop
or
pop
inc
nop
mov
shr
icebp
lret
and
push
dec
jns
std
inc
insb
imul
sbb
or
mov
inc
add
xlat
sbb
or
jnp
or
and
ds
add
mov
add
xor
sahf
cmc
mov
jnp
ds
stos
js
inc
cmp
popa
adc
out
jnp
push
out
push
mov
mov
jmp
xor
pop
fs
mov
pop
ja
mov
pop
xchg
dec
mov
iret
adc
clc
and
push
test
push
ficoms
mov
sub
jno
xchg
push
pop
add
imul
add
or
sbb
and
push
dec
and
packssdw
jmp
jbe
or
and
and
inc
fldcw
fdivs
adc
adc
mov
or
or
iret
or
add
add
in
ds
mov
xchg
adc
xor
int
jne
sbb
xor
idivb
add
cmp
ja
sbb
or
data16
push
rorl
cltd
add
pop
ss
and
push
sub
or
add
stos
pop
adc
pusha
xor
push
or
add
ss
adc
and
cmp
sbb
add
add
cmp
stos
mov
mull
xor
cmp
ret
and
push
aad
add
setnp
jmp
and
push
shlb
lods
mov
pop
test
sbb
in
add
fnstenv
push
xchg
lea
mov
push
lahf
lock
lods
mov
push
cmc
sub
insb
or
pusha
mov
data16
push
cmp
mov
xor
les
adc
lea
inc
xchg
addr16
cmp
xchg
xor
movl
cmp
adc
push
in
adc
imul
loopne
push
subl
out
divb
adc
xor
lods
fs
push
or
push
xchg
movsb
pcmpgtw
sbb
add
jno
add
add
mov
xchg
push
push
les
test
sbb
inc
test
jb
mov
out
icebp
fldenv
add
push
fadds
pop
inc
mov
push
push
adc
insl
ror
adc
xor
call
in
les
inc
push
add
add
sbb
addr16
ret
jno
and
daa
lock
popa
sbb
adc
movswl
std
and
jg
dec
pop
das
xor
xor
cwtl
push
pushf
adc
add
adc
enter
push
ret
jmp
cltd
pop
and
pushf
test
orl
mov
test
in
cmpsb
sub
and
out
sbb
jbe
cmp
sbb
lea
imul
dec
popa
push
repz
fadds
pusha
pop
rcrb
in
inc
es
cmpl
and
andb
and
sbb
or
mov
stos
add
lods
les
xor
ds
xor
or
rorb
add
push
dec
and
fisttpl
mov
jae
dec
mov
cs
icebp
pushl
and
inc
mov
mov
cmc
sti
pop
xor
dec
mov
out
fsubs
push
cmp
mov
sub
rclb
sbb
adc
sbb
aaa
add
sbb
shlb
sbb
xchg
add
ret
and
test
mov
jmp
ja
icebp
std
xor
cmp
jl
cmp
imul
outsl
test
clc
jle
andb
mov
mov
adc
scas
jl
mov
clc
add
dec
je
sbb
loope
sbb
in
out
arpl
and
push
sbb
add
xor
xchg
es
or
push
add
add
or
repnz
aad
or
or
sub
cld
sub
ss
inc
add
jbe
testb
test
shrl
and
mov
rorb
call
iret
icebp
sub
mov
cmpsl
pop
aam
adcb
pop
cmc
es
cmp
and
jbe
jg
aas
lods
sbb
push
pop
inc
cmp
sub
add
and
add
ja
inc
xchg
imul
cmp
add
and
rclb
out
sbb
sbb
cmp
dec
sub
cmp
ss
mov
cmp
cwtl
and
jns
and
rorb
insl
push
mov
int3
xchg
shrl
jmp
sbb
adc
xchg
adc
imul
cmp
ja
dec
xor
add
cmpsb
imul
aas
add
jmp
movl
mov
add
and
sbb
int
cmp
adc
pop
pop
lods
mov
pusha
cmpb
leave
or
mov
mov
cmp
sbb
je
sbb
cmp
dec
push
fld
clc
loopne
adc
xchg
clc
fwait
dec
push
fsubrl
mov
test
leave
jle
cmp
hlt
add
or
add
mov
adc
add
test
sbb
fisubs
and
inc
hlt
sbb
jns
jae
add
aam
ljmp
lods
rorl
inc
mov
je
imul
adc
push
and
insl
adc
bound
mov
lret
lcall
jo
imul
jbe
jae
pop
in
jmp
cmp
or
pop
mov
add
adc
loop
push
cwtl
sub
dec
adc
push
mov
mov
push
push
push
icebp
xor
xor
xor
push
push
dec
adc
add
in
aam
jo
dec
jne
test
add
sub
push
add
pop
sbb
sarl
clc
js
add
jnp
mov
mov
daa
inc
mov
scas
ret
or
dec
add
lods
insl
movsl
xor
int
bound
loope
sbb
xor
outsl
sti
in
inc
rcll
adc
pop
dec
xchg
es
inc
jl
dec
or
sub
mov
ret
add
imulb
pop
sub
adc
pop
fisubl
mov
mov
aam
xor
pop
jnp
stos
lock
jns
push
shr
popf
ficoms
push
into
lea
inc
sbb
xor
push
add
cmp
sub
mov
pxor
mulb
mov
xchg
or
inc
adc
fst
mov
add
inc
aaa
test
add
sub
inc
xor
loope
cli
cmp
lret
or
pop
pop
dec
dec
cmp
add
sbb
fmul
or
push
add
add
enter
push
pop
enter
or
or
xchg
or
push
enter
dec
shlb
ret
jbe
dec
fcom
aad
xorl
test
cld
mov
or
test
inc
into
es
add
jmp
inc
rcr
sbb
out
inc
push
pop
or
in
outsl
rcrb
or
cmp
cmp
psrld
scas
bound
pop
mov
sub
shll
bound
or
jbe
mov
imul
xor
cs
mov
sub
ljmp
out
div
std
and
add
add
push
in
out
dec
sub
stos
cmc
dec
jbe
lods
mov
incl
out
pop
or
sbb
mov
test
xchg
and
nop
imul
idivl
je
inc
push
push
and
and
lods
mov
xchg
nop
add
inc
in
and
push
int3
add
sbb
pop
jbe
cmp
xor
mov
inc
decb
add
dec
gs
and
lret
mov
sub
and
and
sbb
or
adc
inc
push
xchg
hlt
mull
cmp
push
xor
fnsave
fwait
clc
or
pop
or
fildl
pop
cmp
adc
scas
insb
or
mov
add
jle
ror
sub
mov
les
loop
call
or
aad
mov
scas
lret
jb
outsl
jno
and
sub
loop
sub
addb
adc
rorl
dec
dec
push
mov
outsl
call
dec
rolb
mov
addr16
adc
sbb
enter
dec
inc
insl
push
jno
sbbl
insb
mov
cwtl
lods
mov
and
hlt
sbb
jnp
mov
cmp
inc
pusha
notl
fwait
add
sbb
mov
pusha
filds
out
aaa
jp
jmp
inc
shr
mov
ret
or
fisttpl
dec
add
mov
mov
sbb
test
xor
inc
mov
mov
mov
adc
dec
xchg
pop
jp
xchg
xor
pushl
loop
push
fimull
sbb
sub
testb
test
je
add
mov
das
fwait
xchg
sbbb
mov
pop
mov
mov
push
add
and
sub
sbb
cmp
jbe
test
cmp
add
enter
mov
stos
mulb
xor
mov
add
inc
sbb
push
inc
movzbl
mov
and
adc
adc
outsb
scas
mov
inc
mov
sbb
mov
imul
and
adc
inc
adcw
jne
xor
enter
dec
daa
inc
cs
dec
mov
add
inc
and
push
sti
add
ret
inc
ss
jl
sbb
and
in
push
and
ret
or
int
add
orb
sub
adc
subb
repz
cmp
neg
adc
jge
dec
xor
mov
dec
js
add
inc
adc
ss
adc
shlb
mov
stos
cmp
dec
jg
sbb
mov
add
mov
into
data16
hlt
data16
sub
mov
and
xor
cmpsl
test
stc
testb
insl
mov
sbb
add
test
or
enter
jmp
jmp
clc
inc
mov
mov
sub
inc
sahf
lods
lock
int3
or
push
es
cmp
xor
cmp
pop
movzwl
out
jl
or
in
mov
cld
je
aaa
call
ljmp
push
pop
mov
xchg
sbb
pop
scas
mov
popf
nop
inc
out
mov
fmuls
js
mov
shr
jp
cli
add
lret
jg
dec
add
test
add
inc
xchg
ja
xchg
pcmpeqw
dec
pcmpeqb
fsubrl
pop
push
incl
pop
fsubrs
rcrb
sti
or
dec
or
or
mov
or
repz
popa
and
adc
repnz
repnz
adc
js
leave
inc
enter
orb
rcll
add
adc
cmp
out
xchg
dec
sbb
jno
cmp
pusha
rolb
sub
arpl
mov
xchg
jg
insl
adc
sahf
jge
ret
sarb
jne
pop
push
stos
mov
fiaddl
int
jnp
jne
das
rol
pop
pushf
mov
fcmovnu
inc
stc
mov
adc
ret
imul
push
mov
push
lahf
mov
shl
cmp
sarl
xorb
dec
jge
loope
sahf
push
jge
jo
daa
cmp
rorb
jne
out
mov
mov
push
or
push
push
jnp
mov
push
sbb
add
add
jb
cltd
ret
fstps
js
roll
xchg
cs
xchg
dec
les
cmp
or
addr16
dec
mov
inc
xor
fadd
mov
xor
adc
jmp
and
out
jl
sbb
adc
or
cmp
sub
dec
pusha
and
insb
jo
shll
test
and
insl
or
mov
add
adc
mov
aad
sbb
or
mov
and
add
adc
add
mov
sbbb
sbb
lods
movsl
loop
mov
or
pop
pop
sti
jge
mov
jecxz
sbb
outsl
or
rorb
dec
incb
dec
add
enter
out
jns
push
daa
mov
push
push
popa
adc
jg
aas
je
sub
dec
fistpll
in
xor
inc
add
adc
cmpl
push
jb
sub
add
jns
jns
je
dec
je
pop
je
addr16
jnp
mov
dec
sbb
orb
sbb
push
inc
add
or
xchg
sub
push
and
or
mov
dec
std
shll
loope
inc
cltd
fwait
or
jle
xchg
cmp
pop
mov
jp
push
mov
loopne
jns
lds
xchg
inc
imul
cmp
add
pop
and
adc
or
xor
and
pop
pop
fwait
dec
xor
out
popa
pop
insl
push
mov
nop
cmp
inc
inc
les
or
in
sbb
cld
loopne
pop
jne
xchg
icebp
jp
mov
rcrb
leave
add
lea
xchg
repz
repnz
addl
inc
adcl
mov
or
sub
mov
xchg
xchg
xchg
lea
cmp
sahf
inc
lds
adc
cmpb
andl
xchg
hlt
push
daa
jnp
push
push
mov
add
or
inc
sbb
in
jmp
and
rclb
lea
loop
rolb
mov
aaa
orl
shll
xchg
lods
inc
inc
outsb
cmpsb
test
movl
mov
pop
pcmpgtb
pop
push
inc
jle
nop
shl
inc
lock
js
push
push
outsb
js
pop
pop
mov
adc
stos
pop
sub
jbe
testb
shll
and
adc
push
and
ds
fcomi
mov
xor
adc
xor
pop
cmp
add
fnclex
mov
cmp
xor
fidivl
shrl
jo
xor
xor
or
cmp
push
sub
lcall
push
cmp
test
aaa
pop
call
cmp
inc
inc
or
cmp
sbb
push
jne
pop
xor
push
sbb
sbb
or
lods
or
shll
fisubrl
fsts
movsl
sbb
or
sti
jge
xchg
mov
insb
mov
mov
lret
mov
pop
negl
and
clc
jns
pop
mov
adc
or
or
movsb
movsl
das
sub
jo
iret
pop
jb
jmp
ficoms
jecxz
xor
imulb
pop
inc
add
pop
sti
iret
add
out
lods
lret
mov
fdivl
stos
lods
adc
jecxz
in
std
out
gs
sub
mov
stc
add
push
adc
cmpsl
movsl
jae
cli
scas
mov
mov
pop
xorl
add
sbb
sub
push
jecxz
adc
push
dec
add
cmp
ja
push
stc
push
dec
jp
adc
add
push
aam
jb
jmp
sub
push
rolb
inc
sbb
aaa
or
cmp
test
gs
les
into
push
leave
in
cmc
lea
dec
jne
pop
daa
cmp
dec
cld
mov
cmpl
shll
ret
jo
ja
clc
in
add
stos
add
xchg
sbb
push
dec
dec
mov
insl
xchg
fiaddl
adc
subl
lds
outsl
mov
push
and
mov
jmp
add
rcrl
mov
ja
xor
int
jp
mov
jmp
shll
fsts
add
xchg
or
pop
xchg
mov
rcrb
fcmovnu
mov
sub
or
jmp
js
mov
and
cwtl
adc
icebp
dec
lods
cmp
and
mov
pusha
test
push
cmp
shlb
lea
into
xchg
mov
sbb
cmp
push
inc
loop
push
adc
add
or
popa
push
dec
pop
fcmovb
loope,pn
test
push
cmp
and
mov
push
xor
inc
pushf
mov
jns
xchg
aam
lahf
mov
call
xor
inc
or
fdivl
ss
lock
push
data16
out
jno
cmpsl
or
xchg
cmp
xor
xchg
cmp
test
push
int
add
hlt
testb
pop
scas
fcom
mov
sub
cmp
or
dec
inc
fwait
cmp
nop
cwtl
pop
mov
fidivrl
sub
mov
mov
mov
test
ljmp
cmovs
addl
xchg
sbb
and
cmove
es
les
lods
test
mov
cmp
enter
stos
sbb
or
clc
pop
adc
clc
pop
mov
out
dec
ret
or
dec
outsb
outsl
adc
loopne
stos
pop
sub
mov
cmp
ja
cmp
or
jmp
dec
leave
push
loope
inc
dec
xor
cmp
repnz
mov
adc
inc
jne
inc
adc
ret
insl
pushf
int
callw
sbbl
or
jnp
cmp
popf
je
add
push
lahf
mov
cld
sub
adc
aam
or
push
jo
adc
mov
call
jo
stos
nop
or
and
adcl
je
lret
stos
adc
xor
in
add
cmpsb
push
testb
or
enter
add
or
je
insb
xchg
pusha
or
jo
jmp
pop
ss
leave
xchg
mov
jns
addr16
pusha
testb
aaa
in
test
push
stc
inc
jbe
lds
je
push
pop
add
insb
in
mov
or
in
dec
jp
or
push
push
shll
je
fnstsw
je
sub
push
cmp
ja
mov
xchg
xchg
jg
repnz
and
adc
jno
icebp
push
inc
push
jge
jne
fsubl
and
add
mov
fs
push
mov
lahf
mov
mov
or
sub
jb
fxch
test
cld
jae
fildl
add
cmpsl
inc
pusha
daa
je
mov
lods
outsl
push
xor
push
add
sbbl
lods
lods
lea
lock
movl
xor
adc
enter
xor
mov
xor
testl
ret
cmpxchg
shll
js
lea
insl
sbb
cli
push
jl
jle
add
sbb
js
cltd
outsb
gs
adc
mov
adc
xor
mov
mov
pushf
mov
hlt
in
mov
leave
sbb
lea
cmp
or
mov
aam
out
out
ret
mov
adc
pop
xor
sar
adc
cmp
jb
pop
jne
div
testl
ja
inc
push
loopne
sti
xor
sbb
aas
mov
or
stc
mov
das
jbe
mov
and
and
mov
ja
in
cmp
push
mov
push
inc
in
imulb
js
inc
inc
je
add
add
or
inc
or
lret
inc
adc
sbb
add
xchg
jb
movd
pusha
cmp
jb
into
xchg
xchg
popa
xchg
add
xchg
jnp
push
js
test
or
adc
jge
fcomp
pop
push
push
sahf
add
inc
sarl
pop
fistl
call
sbb
cmpsb
lahf
adc
mov
std
jle
ljmp
sbb
adc
xlat
insl
add
jl
add
scas
mov
sahf
dec
dec
add
in
rolb
stos
scas
cli
mov
mov
orl
lcall
mov
sub
xchg
and
jp
jae
inc
mov
push
mov
lods
hlt
rclb
lds
outsw
notb
cmpsb
testb
push
or
jmp
push
cmp
jge
inc
subl
add
mov
mov
rolb
cmp
je
popa
jno
loopne
and
sbb
mov
lea
push
cmp
stos
cld
push
mov
jg
fmull
ds
leave
or
mov
out
mov
insb
xchg
cmp
fcmovb
lahf
push
push
subb
inc
sub
js
lea
adc
insl
fcmovnb
add
testl
cs
ljmp
jae
jbe
mov
xor
fstps
mov
add
mov
jo
in
mov
incb
add
jle
outsl
out
aam
mov
outsl
lock
jo
or
mov
int
xorb
jmp
sbb
push
mov
lock
mov
lds
je
mov
sbb
dec
test
sub
push
mov
mov
sub
push
popa
xor
scas
adc
jl
jmp
adc
rcr
js
add
mov
add
cmp
xchg
mov
aaa
movb
mov
aam
les
popa
add
cmp
sub
cmp
add
push
mov
adc
pop
dec
mov
sar
pop
add
jl
mov
pushf
rorl
adc
xchg
sbb
or
subl
ret
inc
and
cwtl
aaa
insb
xchg
pop
sub
push
inc
in
repz
mov
pop
ds
daa
sub
test
ret
push
mov
push
pop
cmp
mov
xor
mov
jmp
add
mov
jo
test
push
adc
mov
ja
sub
in
in
mov
inc
popf
ja
nop
and
jo
andb
aam
roll
icebp
push
xor
dec
push
adc
jno
or
add
lds
lret
repz
scas
dec
mov
jle
or
ss
mov
push
push
jecxz
mov
xchg
pop
inc
dec
sbb
loopne
in
cmp
jle
fidivl
jmp
jmp
cmp
jle
jle
add
mov
jmp
out
xor
testl
and
cmpb
sbb
cmpl
cmp
jmp
push
push
or
dec
mov
arpl
adcl
xchg
push
mov
in
sbb
fstpt
sub
dec
aaa
ret
dec
shlb
jb
sarl
addr16
mov
and
push
xor
aaa
push
and
ss
jle
cmp
cmp
je
inc
cmp
add
fcoms
scas
stos
or
cmp
mov
sbbb
sub
or
pop
decl
gs
jne
dec
jns
or
out
ljmp
lea
push
pop
mov
mov
mov
sti
enter
stc
or
push
out
sbb
fs
sub
add
mov
add
cmpl
pop
dec
jl
dec
loope
push
inc
pop
sub
xchg
cmp
pusha
fwait
or
pop
test
pop
mov
mov
enter
sbb
sbb
test
mov
xorw
pop
add
mov
cmpsb
fcmovnbe
sti
movsb
cwtl
mov
and
jmp
jecxz
pop
cmp
test
xchg
and
call
jae
mov
inc
jb
mov
and
ret
xchg
sub
and
inc
es
or
rorb
mov
mov
mov
and
sub
fcomi
orb
mov
or
mov
adc
leave
subb
or
mov
flds
adc
or
pop
lock
mov
pop
push
mov
jno
or
ljmp
adc
inc
add
xorb
fdivrs
mov
aaa
stos
jg
cmp
jge
add
ret
push
imul
mov
gs
dec
push
inc
jae
push
push
inc
ret
pop
mov
in
ss
mov
fprem
rcl
cli
or
call
sbbl
es
and
ret
xchg
andl
pushf
dec
mov
clc
ljmp
add
nop
add
mov
fld
cld
mov
mov
mov
ret
mov
mov
pop
cmp
inc
dec
mov
outsb
or
hlt
fmull
mov
out
jnp
push
pop
mov
sbb
pop
mov
inc
mov
inc
push
sar
sarl
mov
and
mov
outsb
ja
mov
mov
inc
inc
mov
mov
or
leave
data16
adc
fimull
clc
test
pop
les
jge
clc
jne
mov
scas
or
cmp
xor
xor
fcoms
adc
push
pop
cmpsb
sbb
out
popa
ret
nop
cli
or
adc
test
xchg
gs
nop
out
cwtl
cwtl
cmp
out
mov
shrl
shrl
mov
or
xor
and
xorb
negl
lret
dec
sbb
sahf
out
mov
add
popf
inc
test
sub
ss
mov
movsl
enter
push
mov
stos
outsl
cmp
sbb
js
mov
roll
sub
cmp
paddsw
pushl
pop
lret
cmp
jle
mov
ror
stc
xlat
dec
movsl
sbbl
mov
pop
mov
adc
sbb
fs
orb
mov
shrb
arpl
iret
xchg
in
roll
sbb
adc
loopne
stc
jle
xchg
mov
jbe
and
pushf
mov
adcl
out
adc
adc
leave
and
loopne
jl
popa
andl
adc
shr
les
jmp
lea
push
lea
cmp
jb
sub
cmp
iret
imul
xchg
jmp
or
inc
aad
lea
mov
jno
push
add
add
rolb
xchg
sar
enter
mov
enter
movsb
ljmp
add
jg
shrl
movsb
lods
inc
push
mov
sub
lds
clc
mov
aaa
and
shr
daa
jo
sbb
xchg
in
or
sub
pop
ret
mov
outsb
adc
or
adcb
out
fstpl
push
sti
inc
sub
gs
cmp
sbb
data16
dec
push
fucomip
push
adc
pop
fdivl
mov
or
pop
xor
nop
sub
mov
cmp
push
or
push
xor
add
insb
cmp
mov
xor
or
xchg
test
andl
inc
into
repz
jp
mov
xlat
jg
div
mov
mov
sar
lahf
mov
xchg
shrl
aad
inc
mov
jp
xchg
call
push
add
pop
jmp
xchg
add
inc
mov
add
outsb
xchg
or
addb
lret
mov
test
adc
popf
cwtl
mov
insl
ljmp
flds
jno
mov
adc
xor
cmpl
fisubs
xor
mov
cmp
inc
je
add
insb
and
add
sbb
inc
sbb
cltd
pop
inc
inc
add
and
popf
sti
xchg
aas
daa
sbb
popf
cmp
push
xor
iret
adc
or
js
repnz
leave
mov
iret
mov
fs
inc
push
testb
pop
subl
sbb
aas
lcall
inc
jo
mov
lods
shlb
pop
outsl
mov
into
xchg
movsb
xchg
xchg
mov
stos
sbb
jnp
mov
rorl
icebp
add
in
add
enter
sbb
and
stos
out
push
push
sub
clc
pop
or
add
or
add
dec
add
jg
rorl
and
ds
mov
cli
jecxz
adc
adc
or
sub
dec
inc
or
and
lds
rorl
and
push
test
jae
jle
jmp
add
add
nop
and
xor
add
lods
pop
and
imul
enter
in
popa
dec
fimull
fcmovu
leave
sub
shrb
and
push
adc
testb
sub
shrl
leave
sbb
mov
add
prefetcht0
add
fs
ja
add
rol
repnz
fwait
sub
jecxz
les
dec
enter
sbb
rol
ret
cmp
arpl
jbe
mov
push
in
push
mov
xor
rolb
add
test
pop
fildl
hlt
test
push
xchg
push
mov
stos
jo
adc
adc
out
sub
mov
add
sbb
add
sbb
cmp
stos
dec
fldcw
sti
lock
in
adc
ljmp
stos
dec
add
loopne
pop
repnz
iret
pop
loope
add
mov
cmpsl
push
sar
or
xor
xor
std
lret
out
aas
and
mov
outsl
movsl
ljmp
imul
inc
jne
jb
mov
sbbb
insb
outsl
adc
push
push
insb
insb
and
insb
sbb
sbb
and
push
outsl
outsl
je
pop
pushf
std
inc
dec
inc
cs
pop
inc
add
gs
mov
ja
pop
aad
pop
jbe
and
je
jo
dec
outsb
cmp
push
push
jo
pop
lcall
jnp
xor
inc
xor
inc
inc
inc
sub
mov
inc
ss
add
xor
add
inc
xor
inc
jge
or
insb
or
add
das
mov
lahf
push
ja
inc
push
flds
xor
xor
test
xchg
int
push
add
xchg
add
aaa
out
and
scas
jmp
or
dec
xor
sub
dec
xor
and
sbb
cmp
and
leave
int3
enter
dec
sarb
lods
xchg
leave
es
test
insl
mov
pushf
or
in
add
and
dec
sti
mov
icebp
mov
scas
sbbb
dec
push
add
add
pop
icebp
rorb
dec
je
sbb
jge
add
cmc
push
je,pt
mov
andl
push
jmp
and
jmp
or
je
outsl
push
cmp
xchg
je
inc
fstpt
adc
sub
pop
bound
sbb
je
sbb
fmull
xlat
in
fistpll
sbbb
push
xor
daa
addr16
adc
in
test
push
imul
inc
xor
lock
nop
cmp
push
loopne
insl
jmp
push
rclb
mov
and
mov
mov
repnz
arpl
lock
jnp
mov
or
in
pop
stos
or
sbbb
inc
push
sbb
jmp
in
cmp
inc
push
not
pop
fsubrs
and
inc
mov
sub
mov
addb
sbb
out
insb
add
sbb
dec
push
add
and
sub
fs
lcall
lcall
add
and
ret
xchg
xchg
lock
mov
mov
mov
mov
or
lock
dec
adc
int3
mov
lds
fs
das
push
and
jl
sbb
cmovs
xor
cli
gs
pop
push
push
fadds
pop
push
sub
stos
mov
add
call
insl
lock
js
adc
dec
cmp
dec
mov
push
stc
and
aas
mov
push
push
adc
xchg
or
test
mov
inc
scas
and
jg
ja
dec
jne
ret
push
call
dec
or
jle
notl
test
sub
dec
mov
sub
inc
push
aam
cmpsb
pop
nop
dec
dec
fmull
mov
or
mov
sbb
cmpsb
or
xchg
mov
and
or
test
test
add
int
int
enter
pinsrw
cli
shr
adc
lahf
jo
adc
push
fcomi
scas
sub
sub
and
insb
push
add
jmp
inc
lock
push
inc
in
in
mov
push
add
shr
lods
arpl
or
les
fcoms
jnp
or
sbb
add
loop
pushf
sbb
pop
pop
lods
lods
int3
in
inc
inc
xor
xor
jae
and
xchg
stc
mov
pop
pushf
mov
mov
cmp
or
push
lds
jecxz
add
or
insb
pop
add
scas
lea
out
dec
pop
repz
ret
or
adc
sub
add
insl
imul
adc
pusha
ljmp
adc
and
ss
push
lea
hlt
push
lock
pusha
or
jns
sbb
add
mov
add
int3
in
and
mov
in
addb
dec
jge
les
adc
out
push
rcrl
adc
in
sub
in
jae
inc
insb
mov
mov
mov
xchg
mov
hlt
add
mov
fwait
pop
das
push
jb
je
mov
adc
fadd
mov
sti
movsb
imul
pop
jmp
popa
pop
cmp
sbb
es
push
sbb
iret
dec
movsb
mov
fcomps
jb
jns
outsb
nop
cmp
and
ss
inc
cmp
push
jne
adc
push
int3
inc
sbb
jo
jb
mov
inc
xchg
int3
mov
push
inc
call
jmp
or
imul
sbb
sub
push
inc
cmp
and
loop
daa
sub
sbb
out
add
ds
sub
loop
push
gs
cmp
in
arpl
adc
mov
xchg
shrb
jns
fadds
and
adc
outsb
xlat
add
cld
mov
or
or
pushf
mov
push
mov
pusha
cmp
subl
or
jmp
fadds
and
mov
inc
repnz
push
push
push
push
das
add
inc
push
dec
mov
in
push
adc
jb
cmpsb
outsl
js
mov
test
fidivl
add
xlat
add
das
jb
mov
jle
outsl
add
dec
inc
dec
sbb
dec
jae
push
inc
pop
push
mov
es
out
leave
sbb
adc
jmp
and
adc
add
or
jecxz
lock
scas
add
inc
lock
fstpt
mov
sub
mov
jae
int
add
fs
repnz
push
cltd
test
stos
popf
aad
and
mov
dec
inc
pushf
loopne
and
jnp
movups
mov
lret
xchg
inc
xor
adc
nop
rorb
inc
repz
orb
sub
bound
inc
test
fistpl
packsswb
push
xor
push
sti
xchg
je
xor
sbb
xor
mov
jne
movsl
mov
movb
add
insl
xor
adc
or
inc
xor
popa
mov
mov
hlt
je
jge
insl
jne
lods
sbb
lock
lock
push
pop
mov
and
pop
inc
incl
cwtl
flds
add
mov
pop
jl
data16
popf
and
and
mov
int
adc
pop
jns
leave
xchg
dec
fcomp
push
sbb
aam
xchg
jl
in
jmp
inc
int3
int3
or
leave
enter
enter
and
pop
add
ds
mov
dec
ret
dec
or
xor
add
add
scas
add
xor
adc
sti
mov
mov
or
ret
cmpsl
or
jne
pop
adc
push
add
jl
adc
cmpl
pop
jno
sub
adc
test
cmpl
add
jg
cs
sub
mov
push
sub
add
sub
xchg
lods
adc
das
pop
mov
add
in
push
loope
aaa
test
fs
test
mov
push
xor
or
insb
shrl
movsb
mov
or
test
sbb
insb
movnti
pop
jge
mov
inc
and
iret
andl
xchg
pop
and
jb
xchg
nop
nop
test
or
mov
insb
xchg
push
mov
xchg
sub
movsb
jo
xor
sub
call
mov
add
jae
lds
testl
inc
or
mov
xor
jg
addb
cs
jl
out
andb
and
xor
scas
out
mov
dec
lea
push
inc
ja
pop
es
and
out
sub
mov
imulb
stos
adc
pop
add
mov
in
mov
mov
sbbl
xchg
mov
aas
xchg
jnp
adc
adc
int3
adc
adc
pop
pushf
roll
inc
cwtl
sub
movsb
fwait
shll
popf
add
call
mov
add
pop
mov
repnz
adcb
dec
push
dec
das
and
or
inc
and
mov
xchg
or
xor
xor
pushf
cwtl
jb
aam
test
and
mov
outsl
pop
add
pop
sub
sbbb
inc
fisubrl
adc
call
pop
jnp
add
in
in
mov
pop
test
jns
fwait
pop
lods
cld
jo
test
or
sbb
movsb
mov
xchg
dec
pushf
sbb
arpl
mov
cwtl
inc
rcll
imul
je
scas
xchg
xchg
rclb
add
xchg
out
jmp
fists
pop
ret
sbb
and
leave
das
cmp
xor
inc
push
cmp
mov
dec
push
sbb
push
push
addr16
mov
xchg
addb
dec
cmp
cli
dec
cmp
clc
sub
jb
cmpsl
add
sbb
rorb
sbb
push
jo
hlt
add
lock
call
pop
cltd
push
sbb
and
arpl
and
cld
add
or
jb
cld
or
and
dec
xorb
jle
add
xor
subb
hlt
fisttpl
and
lahf
ficoms
lock
and
outsl
insb
enter
xor
sbb
outsl
inc
lods
lea
incb
rolb
pop
xchg
xor
sbb
lret
or
push
jmp
cmovp
mov
add
fs
add
push
enter
add
and
dec
add
pop
fcmovbe
cltd
sbbb
pusha
and
adc
jns
testl
jo
push
sbb
or
rolb
int3
and
rolb
mov
sub
enter
sbb
sbb
repnz
adc
pop
push
pop
imul
or
fcmovu
dec
mov
nopl
mov
rorl
popf
loopne
in
stos
xor
push
cli
push
inc
mov
push
pop
cmpsl
inc
push
ljmp
mov
add
dec
pop
dec
or
mov
xor
mov
or
adc
enter
insb
punpckhbw
sbb
repz
cmp
sbb
push
xchg
rcrb
ss
mov
shlb
push
mov
push
xor
imul
jmp
ja
push
rcrl
fcmovne
pop
mov
add
sub
cmpsb
or
pop
mov
jbe
ja
or
sub
ss
add
mov
insb
int3
xchg
int3
call
inc
int3
int
call
sbb
sbb
les
or
sbb
cmp
xchg
mov
sarb
add
jae
es
cmp
aaa
imul
mov
xchg
mov
inc
or
mov
and
pop
inc
mov
mov
jbe
push
adc
fidivs
xchg
mov
dec
push
fisubl
sbb
outsb
mov
jb
fisttps
sbbl
fisubrl
add
pop
cmp
fs
sub
mov
mov
and
dec
loopne
pop
push
sbb
adc
mov
or
pop
mov
mov
movsl
sub
and
test
mov
xor
mov
mov
and
push
andb
enter
iret
imul
mov
psrlq
xchg
sub
xor
xchg
movsl
fbstp
shl
sahf
je
lds
add
test
insl
adc
test
popa
scas
in
and
jmp
push
jmp
or
xchg
and
add
mov
cmp
je
inc
inc
inc
dec
lock
out
push
adc
pop
or
imul
into
add
ret
shll
push
xor
adc
add
push
arpl
sub
mov
inc
cmp
inc
mov
les
jnp
ds
and
stos
and
and
clc
or
push
dec
fistps
enter
stc
and
add
push
inc
in
sub
sub
je
add
sbb
stos
loopne
xchg
pop
add
add
add
xchg
in
or
rcrb
popf
or
push
xchg
mov
and
jge
icebp
push
in
orb
gs
and
mov
cmp
int
mov
xor
inc
push
mov
scas
leave
leave
test
movsb
popf
mov
add
je
out
and
xchg
xchg
mov
sbb
or
clc
pop
rolb
inc
mov
lret
int3
enter
ret
xor
push
xor
daa
lret
clc
push
addl
push
das
mov
jb
aas
in
cwtl
inc
add
inc
ss
cmp
add
push
mov
mov
loop
shlb
or
cmp
int
and
aas
push
sti
inc
sub
and
rcrb
out
je
adc
je
stos
sub
neg
push
int3
dec
fmull
vmovsd
pop
es
nop
ret
fs
pop
cli
push
xor
in
jne
cmp
and
jo
mov
mov
adc
dec
inc
inc
jnp
and
enter
insl
les
gs
sbb
into
or
mov
cmp
cmp
sbb
inc
or
movb
or
sahf
pop
or
scas
fldl
fistl
mov
pop
or
cmpb
pop
xor
gs
fdivrs
repnz
dec
pushw
subl
adc
ret
jp
pop
sbb
mov
lock
xor
or
shl
addl
wbinvd
ljmp
pop
xor
and
dec
pop
or
bound
xchg
mov
enter
add
push
and
xchg
rol
and
jecxz
call
dec
adc
mov
mov
into
stos
shl
mov
mov
ja
adc
push
sub
xchg
std
les
mov
daa
stc
push
daa
pop
pop
xor
scas
sti
mov
dec
into
mov
call
loopne
adc
xor
adc
push
pop
sub
jne
push
gs
ret
pop
push
ljmp
cld
mov
push
mov
rol
mov
xor
mov
mov
dec
push
mov
pop
fdivl
scas
sub
add
or
movsl
or
cltd
ljmp
popa
mov
dec
adc
ss
fmull
je
hlt
mov
lcall
or
jno
mov
pop
ja
push
aad
cmp
add
pop
adc
lds
aas
mov
dec
in
call
rcrb
sbb
sbb
mov
cmp
in
push
xchg
mul
insb
fistps
pop
cs
sarb
xlat
lock
dec
inc
pop
subl
push
aaa
add
rcrl
xor
movsb
push
xor
nop
pushf
push
dec
mov
sub
jle
mov
and
or
mov
or
sbb
stos
push
cmp
subb
and
in
shlb
inc
fs
jge
lcall
xor
fisttps
aaa
mov
mov
push
and
adc
arpl
cmp
ret
cmpsb
popa
mov
xchg
inc
lods
sub
ret
and
push
fcoml
push
sbb
cmp
cltd
mov
xchg
pop
je
jbe
sti
push
mov
sbb
testl
mov
add
add
pop
or
cmp
adc
xchg
push
jae
mov
sub
loop
push
in
stc
test
in
or
push
test
push
push
xchg
adc
in
or
inc
test
sub
add
adc
xor
test
xchg
orb
sub
sub
pop
stc
shrl
sti
cmp
dec
in
jl
xor
pop
add
push
sbb
movl
or
cmpl
mov
adc
lock
push
add
in
cmp
cmc
sbb
and
mov
or
add
ret
fcoms
aam
pop
sbb
or
in
call
adc
lret
mov
adc
ret
jbe
mov
hlt
pop
cwtl
mov
in
push
lcall
adc
mov
clc
mov
in
cmp
push
pop
cmp
cmp
adc
orb
inc
jae
fsubrl
sbb
add
nop
xor
mov
sbb
lods
push
jno
daa
clc
sbb
adc
add
sti
dec
je
stos
push
jbe
mov
mov
hlt
andl
rorl
fcompl
mov
or
xor
fs
fistpl
ret
jecxz
rcrb
arpl
and
arpl
pop
sbb
xor
das
addr16
dec
xor
das
dec
add
icebp
mov
dec
push
arpl
lea
or
jo
push
and
add
mov
jae
pushf
xor
push
xchg
xchg
push
xor
scas
adc
xor
xlat
jge
sub
sub
push
xor
inc
aad
mov
or
popa
push
and
sbb
push
dec
cmp
sbb
add
loopne
xor
shll
mov
jnp
dec
insb
pop
inc
or
jae
cld
hlt
std
imul
leave
push
test
sub
js
cmp
rcrb
dec
xor
xor
and
add
mov
adc
hlt
clc
or
sbb
mov
xor
negb
sbb
sub
add
cmp
and
cwtl
push
jnp
aaa
push
mov
lret
loop
js
repz
jne
inc
add
sub
sbb
cmpsl
push
add
mov
js
jo
jns
mov
or
pop
inc
insl
mov
sbb
fsubrs
movl
push
add
pop
adc
lock
xor
test
inc
aam
orb
cmp
or
mov
pop
jne
xor
add
shll
add
xor
cvtpi2ps
fisubl
scas
outsb
ja
lock
ja
in
or
cmp
sbb
jge
jne
ret
fdivs
sub
inc
cmp
clc
push
ret
loop
mov
mov
sti
sbb
daa
sbb
sar
adc
and
add
and
push
cmp
in
addr16
lahf
mov
cmp
add
lret
xor
sbb
dec
ror
ja
scas
mov
mov
add
dec
lea
xchg
pushf
insl
and
push
add
add
in
add
outsb
sbb
dec
push
nop
xchg
push
sbb
and
or
inc
sbb
or
mov
sub
inc
je
or
popf
and
ss
add
mov
sub
das
add
insb
cmp
test
add
cmp
jl
sbb
xor
xor
sub
xorl
add
mov
lcall
adc
and
pusha
lcall
sti
mov
and
mov
insb
mov
mov
sub
data16
ss
add
or
push
fwait
add
mov
lcall
fcomps
mov
out
aam
and
cmp
push
mov
negl
test
call
inc
xor
jp
int3
lock
or
or
in
or
add
inc
and
pop
pushf
js
test
add
adc
or
mov
inc
test
inc
and
fisubl
dec
sub
pushf
ja
call
repz
lahf
enter
cs
xor
sub
jno
add
in
add
add
dec
jne
xchg
push
push
inc
cmp
and
sub
push
sbb
ret
add
dec
inc
push
and
call
les
cmpsb
push
push
adc
jnp
or
cltd
sub
adc
outsb
jb
mov
shl
loope
clc
pusha
or
shl
es
bound
loope
push
push
add
mov
push
add
test
mov
repz
andl
push
inc
inc
subb
arpl
ret
adc
inc
mov
imul
or
jmp
mov
or
or
sti
lret
inc
test
and
cmp
jg
or
pusha
xchg
add
out
test
inc
das
dec
jle
popf
adc
lods
adc
xor
movsb
adc
leave
pusha
ja
push
test
sarb
add
pop
imul
sub
pusha
push
push
cmp
test
push
or
movsl
and
and
mov
clc
fnstenv
jge
mov
cli
aaa
sub
push
push
or
and
shlb
bound
xchg
pop
and
iret
dec
in
call
jmp
scas
push
or
jnp
fs
add
mov
or
mov
pop
lea
inc
fdivs
mov
sbb
jae
mov
push
test
jbe
decl
cmp
mov
cvtps2pi
push
push
insb
and
or
add
mov
adc
lcall
mov
js
popf
and
or
rolb
repz
add
aad
xor
mov
daa
dec
hlt
daa
inc
jo
sub
je
jl
jb
lock
ds
inc
jmp
sbb
popa
add
or
es
xor
aaa
cmp
or
mov
or
jmp
xor
jae
adc
inc
lret
arpl
push
adc
imul
push
in
int
lds
inc
ja
dec
sub
add
pushf
movsb
sub
adc
insb
test
jp
dec
dec
push
cmp
and
mov
mov
and
adc
dec
clc
add
cmp
outsb
mov
fwait
add
repnz
mov
or
adc
lret
lea
insb
shrl
addl
push
sub
fwait
int
in
fmuls
adc
mov
movsl
pop
push
push
add
mov
dec
outsb
orb
roll
call
mov
dec
je
pop
popa
in
mov
in
inc
jns
std
lods
or
jmp
inc
inc
mov
push
negl
je
sbb
push
mov
or
sub
sub
adc
mov
jp
mov
out
rorl
rol
jnp
xor
bound
push
xchg
xor
je
sbb
inc
mov
add
sub
mov
push
or
stos
orb
push
cmp
loopne
cmp
adc
add
cld
push
xor
push
push
sbb
nop
scas
fisttps
add
in
mov
or
push
dec
mov
or
adc
sub
mov
xchg
fs
xor
sub
inc
adc
push
fadds
inc
pop
mov
push
out
cmp
pop
cltd
inc
add
mov
aaa
hlt
pop
push
sbb
in
call
inc
loopne
scas
repnz
jns,pn
aas
cmp
aas
nop
jne
inc
cmp
pop
add
mov
les
inc
add
inc
mov
and
scas
push
repz
cmp
mov
push
push
mov
loopne
inc
sub
insl
adcb
push
add
sub
test
mov
jae
or
add
push
dec
sbb
js
js
inc
adc
or
adc
or
insb
xor
pop
mov
xchg
in
test
lret
dec
mov
inc
adc
adcb
or
xchg
pop
ret
cmp
push
jle
mov
mov
jo,pn
sbb
test
mov
aam
rclb
sub
push
push
or
ljmp
loopne
jne
aaa
aad
testl
inc
inc
mov
shr
lods
mov
add
das
mov
mov
mov
out
je
aad
jne
or
rorl
add
outsl
imull
ljmp
fwait
xor
mov
xor
mov
mov
lock
add
xor
mov
xchg
hlt
stos
cwtl
mov
xchg
data16
sbb
fildl
in
mov
push
leave
mov
mov
stc
popa
insl
or
fsubl
test
add
cld
push
decl
lret
ret
sahf
dec
adc
rolb
jmp
sub
int3
mov
fdivrl
les
mov
lea
dec
mov
jno
push
sbb
jl
and
xchg
dec
or
adc
mov
inc
push
gs
je
js
or
or
stos
push
or
pop
nop
pop
insl
pop
subl
adc
jne
push
fwait
hlt
pop
pop
or
adc
or
mov
mov
in
pusha
sbb
xor
and
push
or
or
das
sbb
xchg
ss
jl
xchg
sub
jne
cmpb
addb
adc
mov
fldcw
pop
mov
inc
push
mov
pop
inc
pop
add
sti
push
aaa
mov
sbb
int3
push
shlb
add
inc
adc
inc
nop
mov
pop
aas
push
cmp
test
push
frstpm(287
in
sti
or
rolb
cmpb
dec
rcr
push
adc
jle
push
push
shrl
pop
repnz
scas
xchg
cmp
dec
nop
aam
fs
sbb
scas
xchg
mov
jns
add
and
and
add
push
sbb
xchg
in
push
fldl
inc
add
mov
inc
or
push
add
add
sbb
push
fmuls
stc
sub
inc
cmp
enter
stc
sub
cmp
outsb
sbb
push
ja
mov
add
add
aam
or
add
ret
cmpsb
add
pop
outsb
jge
sub
cmpxchg
shll
int3
push
daa
mov
and
inc
nop
mov
xchg
andb
mov
inc
lea
jnp,pn
loope
jmp
jne
mov
or
in
and
out
das
pop
mov
mov
scas
cs
sbb
inc
aad
in
imul
and
lods
push
or
inc
jo
inc
je
add
add
outsl
daa
or
outsb
push
add
jmp
jb
sub
pop
popa
mov
xor
push
imul
inc
dec
xor
xor
jne
and
xor
xor
inc
repz
inc
scas
inc
jle
lods
or
or
inc
outsl
sub
adc
cmp
inc
push
inc
or
mov
xor
pop
adc
xor
jnp
jg
pop
movsl
or
adc
dec
or
jnp
mov
cmp
mov
imul
lcall
add
movsb
jno
mov
push
push
add
aaa
pop
jne
inc
push
inc
add
or
test
movb
mov
repnz
add
jne
das
lock
sub
or
add
inc
imul
xchg
or
scas
lret
push
insl
and
pop
and
out
add
clc
fbstp
sub
sub
push
push
and
sbb
dec
addl
addr16
mov
sbb
add
shlb
out
je
aam
daa
js
insl
mov
pop
jbe
pop
mov
xorl
or
dec
adcb
adc
pop
icebp
inc
mov
or
je
imul
mov
in
sarb
lea
pop
push
pop
xor
roll
mov
mov
imull
test
mov
lcall
stos
dec
scas
mov
pop
push
add
cld
in
add
and
icebp
jno
rolb
sub
mov
arpl
mov
jle
cmpsb
mov
sarb
pusha
repz
xor
mov
mov
pop
xor
rol
cmp
test
mov
inc
jnp
movsl
or
cmp
xorl
push
mov
push
xchg
xor
aaa
xchg
pop
jmp
or
or
mov
push
inc
xchg
repnz
xchg
push
adc
psubw
sbb
inc
mov
mov
enter
cmc
push
fisttpl
or
mov
repz
dec
push
stc
dec
inc
add
in
xchg
inc
pop
dec
or
push
adc
sub
in
add
or
dec
cmp
or
sub
or
and
pop
mov
cmp
lea
pushf
add
data16
sti
pmaxub
movb
add
loope
test
arpl
pop
hlt
dec
dec
les
jecxz
adc
add
jecxz
cwtl
pop
decl
aas
nop
ret
cmpb
jne
and
icebp
test
cmp
enter
mov
add
mov
loopne
or
stos
and
imul
mov
push
rolb
mov
cmp
inc
subl
imul
sbb
out
sub
dec
cmova
xchg
js
loop
iret
adc
cli
add
fmul
popf
in
pop
push
and
pop
inc
sub
idiv
adc
jbe
mov
push
jmp
adc
add
nop
inc
andb
fistpll
subl
sbb
ljmp
popf
push
fistpll
js
pop
push
sbb
mov
push
popa
xchg
out
adc
add
cwtl
mov
mov
rol
sbbl
xor
sub
sbb
cmp
jne
cmp
jbe
cmp
adc
cli
inc
xchg
pop
insb
js
fs
or
add
add
cmp
nopl
mov
subl
leave
out
push
push
out
mov
add
stc
dec
adcb
pop
push
inc
mov
sub
pusha
inc
mov
xor
mov
sbb
add
in
mov
inc
mov
mov
push
jbe
jns
lods
add
jle
pop
or
push
jo
pusha
mov
xchg
dec
cmp
ja
cmp
movsb
imul
cmp
adc
fcomip
insl
and
gs
or
jmp
mov
or
fnstenv
or
jnp
sbb
push
leave
loop
jbe
push
jmp
jo
rorb
dec
mov
and
leave
cmp
add
leave
leave
mov
repz
pop
adc
push
xor
cmp
insl
dec
dec
add
push
dec
dec
mov
rclb
sub
cmp
adc
mov
fs
roll
and
push
mov
cmp
inc
orl
addps
adc
popa
imul
in
repnz
push
or
nop
add
push
popa
push
mov
mov
cmp
jmp
orb
sub
ret
or
pop
add
jp
mov
fptan
sub
sub
pop
jb
in
cld
sub
sbbb
add
insl
push
ret
fsubrl
sbb
mov
add
or
lock
inc
hlt
xchg
push
push
mov
fdivrl
sub
push
in
mov
and
jnp
gs
clc
add
nop
jo
sbb
gs
add
lret
and
inc
shll
push
seto
fwait
jmp
fsincos
push
nop
mov
inc
and
addps
and
es
and
and
je
cmp
sub
fildl
inc
push
sbb
and
ss
push
push
lock
scas
mov
enter
pop
push
push
jmp
sub
sub
and
fisubrs
into
dec
xchg
mov
test
mov
or
mov
push
nop
add
hlt
nop
add
xchg
inc
push
lock
lea
outsb
and
loope
inc
sub
adc
jb
iret
jl
jl
or
push
mov
dec
adc
inc
sbb
adc
mov
or
push
jmp
or
pop
xchg
subb
or
jnp
mov
adc
mov
inc
pop
dec
push
sbb
icebp
sbb
leave
push
add
ss
dec
mov
dec
or
and
or
cmc
adc
stos
bound
push
adc
call
and
inc
and
xor
in
and
clc
cmp
int3
cmc
nop
pop
mov
lea
lds
dec
roll
sub
xchg
sbb
imul
xor
push
test
lock
inc
add
or
enter
cld
inc
ds
icebp
sbb
pop
cwtl
movsb
push
mov
add
pop
xchg
gs
cwtl
test
lahf
jns
fs
xchg
mov
and
daa
jle
adc
mov
insb
inc
fldt
adc
pusha
pop
mov
hlt
add
into
mov
or
lock
pop
stos
mov
iret
jmp
adc
mov
and
mov
mov
add
push
fstpt
int
movsb
push
mov
and
push
mov
mov
pushf
sbb
pushf
pop
subb
mov
fldenv
and
push
cmp
mov
shrb
cwtl
xor
loopne
int3
scas
push
mov
pop
mov
push
daa
pusha
sub
pop
cwtl
mov
dec
outsl
or
sbb
dec
jp
and
xor
pop
or
sub
imul
enter
jl
xor
and
dec
test
loop
sbb
pop
adc
inc
pop
mov
and
not
inc
add
dec
gs
or
dec
mov
pushf
pop
mov
push
and
adc
sbb
mov
out
popf
es
outsl
dec
dec
imul
adc
and
add
adc
push
push
or
adc
fstl
cmpsb
in
pop
mov
add
pop
or
jg
inc
push
fmull
adc
add
dec
test
data16
jnp
out
fs
subb
jo
xchg
dec
push
sub
aas
sub
lea
push
mov
dec
jmp
nop
sysenter
push
dec
push
inc
jle
pushl
clc
ja
pop
xchg
fldt
lods
pop
popa
add
mov
insb
sahf
sub
add
je
jns
in
pop
inc
jp
push
or
add
mov
dec
ret
repz
mov
xchg
pop
iret
push
lds
popa
adc
int
sbb
lret
loop
fldenv
cld
dec
andb
mov
and
loopne
clc
add
insb
and
adc
jl
ret
pop
sub
adc
imul
xor
dec
sbb
insb
stos
int3
add
mov
ja
ret
es
or
sti
mov
or
sbb
xlat
adc
negl
jl
sbb
ja
push
pcmpgtd
mov
imul
jl
adc
in
mov
mov
mov
cmp
fldenv
lock
mov
push
es
push
inc
cmp
mov
add
rolb
in
pusha
arpl
jle
mov
xor
int3
fdiv
mov
inc
and
dec
push
adc
aam
dec
cwtl
or
cwtl
lcall
or
adc
add
mov
cmp
add
mov
movsb
std
stos
and
insb
add
lret
xor
pop
sub
jae
xor
pop
gs
or
cmp
movsb
cmp
and
clc
inc
xchg
ret
or
mov
pop
cmpb
jne
add
adc
and
bound
in
mov
push
sti
mov
push
add
pop
and
or
or
mov
enter
xchg
nop
adc
or
inc
dec
ret
popa
mov
or
dec
mov
mov
jb
or
mov
rcl
push
mov
sub
xor
fstps
or
or
dec
pop
js
test
mov
lcall
gs
shll
pop
imul
add
mov
filds
ret
add
and
xchg
das
xor
sbb
mov
cwtl
movsb
inc
mov
call
or
adc
push
add
pop
adcb
mov
mov
sub
mov
mov
rolb
dec
js
jecxz
rolb
cmp
or
pushf
add
sbb
loop
dec
ja
je
dec
fsubr
and
jg
or
int3
stos
fs
add
mov
push
mov
sbb
push
add
enter
out
ds
inc
push
mov
test
inc
js
insb
or
inc
sbb
jb
shl
push
pop
addr16
ss
outsb
jno
sub
fldt
push
jbe
mov
rorb
and
or
pop
xor
xorb
pop
adc
lock
or
dec
cmp
pop
in
aad
push
mov
xor
mov
mov
sub
out
mov
test
dec
xchg
fsubrl
pop
lods
sbb
add
pop
mov
sti
cmp
leave
pusha
dec
add
add
xchg
and
cmp
xor
aad
dec
in
nop
test
sbb
movsb
fnstenv
testb
push
cld
jle
loopne
je
popa
jmp
jo
cmp
or
inc
push
xchg
pop
sbbb
and
or
xor
dec
movsb
mov
cmp
mov
xchg
cmp
xor
mov
test
and
lret
outsb
inc
xchg
rclb
sbb
test
nop
mov
ds
jo
jl
cmp
addr16
decl
mov
mov
call
pusha
test
popa
insb
mov
mov
xchg
cmp
pop
or
lss
or
pop
inc
insl
pop
ja
out
dec
insl
lsl
lea
mov
dec
shlb
or
ret
pop
ret
test
inc
mov
jno
lods
dec
pop
cwtl
das
and
and
js
sbb
push
adc
or
iret
adc
adc
bound
imul
and
jmp
mov
jbe
les
or
mov
and
pop
lods
test
sbbl
dec
popf
ret
or
push
inc
inc
and
add
sub
or
inc
les
or
pop
sbb
leave
inc
cmp
add
or
pop
dec
mov
jecxz
xchg
and
dec
push
sbb
push
fs
je
adcb
or
pop
mov
push
jo
and
mov
xchg
inc
adc
lret
or
adc
cmp
mov
add
je
push
stos
mov
dec
cmp
mov
mov
shr
mov
xorb
pop
inc
sub
rol
bound
sbb
dec
or
addl
insb
subl
xchg
push
arpl
add
sbb
push
pop
cmp
imul
dec
and
and
bound
pop
test
or
test
dec
sub
inc
pushl
leave
and
pop
adc
nop
in
push
pop
jo
pop
sahf
jge
xchg
pop
sbb
mov
fs
add
xchg
push
fldenv
aaa
mov
push
lahf
pop
fs
and
mov
ds
sub
pop
jb
and
inc
cmc
xchg
sbb
cmp
and
mov
xor
lds
push
aam
inc
pop
or
xor
shr
xchg
shl
cmp
inc
push
jae
sbb
mov
mov
pop
nop
inc
or
aad
mov
jns
or
hlt
lcall
sbb
insb
lcall
cmpsl
je
or
add
mov
xor
enter
pushf
insb
pop
jbe
rorb
add
add
dec
test
or
in
push
and
sti
lea
cld
or
cltd
das
or
push
dec
leave
leave
out
subb
and
dec
adc
or
push
pop
ss
fbstp
add
insb
lcall
js
inc
xchg
dec
ficoms
jns
pop
test
xor
inc
mov
jecxz
sub
mov
sub
xchg
sbb
arpl
test
ss
pop
jge
ficoms
xor
mov
or
and
enter
std
loope
xor
push
mov
push
nop
mov
jecxz
add
inc
std
push
inc
sbb
sub
and
xor
call
sub
jmp
adc
stos
pop
jl
add
js
fsubs
add
nop
xor
iret
push
or
popa
shrl
or
inc
pusha
insb
dec
mov
and
nop
gs
inc
loop
and
ret
or
sbb
or
xchg
andl
fdivrl
inc
jo
cmp
adc
cmp
out
mov
push
pusha
adc
xchg
orl
xor
mov
sbb
int
xchg
andl
shll
xchg
out
adc
popa
fs
in
push
addl
popf
push
jbe
mov
scas
arpl
enter
sub
mov
dec
les
mov
lahf
fnstcw
loope
in
or
sub
mov
inc
xor
je
dec
je
pop
sub
push
push
ja
test
fdivr
inc
bound
rcrb
adc
adc
adc
dec
ficomps
in
shrb
xchg
leave
push
adc
add
pop
in
add
jno
call
inc
ljmp
mov
mov
sub
add
insb
mov
push
stos
lea
push
jns
rorb
push
sub
nop
orb
adc
cmp
dec
or
bnd
inc
and
and
stos
push
xor
dec
pop
inc
aad
inc
jo
and
pop
mov
cltd
pop
add
mov
and
sbb
push
ja
adc
push
inc
dec
push
lds
sti
push
addr16
sti
xchg
sbb
push
dec
dec
inc
dec
push
sub
dec
push
in
jae
je
imul
mov
insb
popa
jbe
jb
je
inc
pop
ficomps
fsubl
popa
push
inc
jne
adc
and
jb
pop
mov
dec
out
dec
push
mov
cmp
gs
xlat
xor
out
push
adc
mov
push
push
inc
mov
cmp
inc
dec
repnz
dec
push
mov
inc
pop
push
popa
pop
or
add
fdivrl
enter
dec
adc
dec
push
sbb
push
inc
cltd
mov
add
ss
test
rorb
imul
xor
cmp
rclb
add
mov
xor
or
scas
out
adc
add
pop
loopne
add
jg
loopne
add
pop
push
dec
and
lea
mov
fmuls
dec
add
jmp
or
sub
inc
dec
or
push
lds
mov
ljmp
loopne
push
je
stos
outsb
inc
testb
test
das
jmp
fsubr
pusha
cmp
sub
xchg
loopne
ret
loopne
add
mov
rcll
or
jp
bound
dec
jb
inc
and
fstpl
adc
sbb
xchg
ror
int
dec
jne
xor
xor
movsb
inc
int
out
sbb
mov
pop
cs
xor
inc
inc
clc
lock
pop
mov
fdivrs
inc
cli
or
imulb
cwtl
lods
push
push
push
add
fwait
jnp
mov
sbb
push
fstps
sbb
dec
inc
inc
es
xor
push
lods
mov
out
dec
lods
dec
ja
mov
push
es
add
adc
sar
xchg
lods
movl
addr16
push
push
add
or
mov
outsl
inc
aam
jb
pop
sbb
push
stos
mov
pusha
xcrypt-cfb
cmpsl
popa
cs
dec
dec
cmp
fcomp
sbb
push
je
imul
loope
loope
pop
xor
xor
inc
sub
mov
cmpsl
dec
and
cld
sahf
arpl
sbb
adc
sub
lret
test
pushf
shr
push
test
adc
cltd
or
scas
ret
int
sbb
ja
sbb
inc
xor
xchg
testl
hlt
js
daa
inc
mov
push
loopne
xchg
addr16
cli
inc
incb
outsl
sbb
hlt
and
add
aaa
push
add
push
mov
push
test
sub
and
add
push
lret
aad
rol
mov
fisttps
fsubl
roll
xor
notb
cmpb
addb
jmp
inc
adc
sahf
add
clc
mov
cmp
sbb
add
sarb
aas
addl
orl
sub
xor
add
stos
and
imul
xchg
or
fs
sub
aas
jl
adc
enter
mov
in
sub
mov
and
jae
outsb
adc
incl
push
iret
pop
imul
addr16
sub
push
je
or
or
in
test
and
mov
xchg
sub
cmp
jbe
add
movsb
nop
push
imul
jne
add
dec
stos
mov
enter
int3
or
in
or
inc
mov
jns,pn
call
mov
sti
clc
test
add
leave
and
fs
mov
xlat
or
mov
aam
jle
sub
aam
add
mov
push
push
addl
mov
sbb
inc
enter
cltd
enter
and
cmp
les
cmp
les
rclb
mov
int3
adcl
dec
sbb
inc
add
adc
andl
add
orl
lds
sub
or
pop
mov
dec
es
mov
mov
test
in
mov
mov
mov
mov
or
fmuls
sbb
mov
lods
dec
lods
out
movl
xchg
mov
add
dec
and
mov
inc
es
pushf
pushf
jg
xchg
adc
add
pushf
mov
dec
arpl
inc
or
shlb
ret
inc
adc
aam
leave
scas
inc
pop
lods
push
mov
int3
jmp
fbstp
mov
data16
enter
inc
pop
cmp
popf
movsl
test
mov
or
dec
adc
mov
pop
or
xchg
idivl
mov
daa
xor
mov
iret
adc
pop
lock
ss
mov
push
test
push
sub
pop
xchg
int
pop
mov
xchg
sub
int
pop
cs
xchg
cmp
fwait
je
gs
pop
in
pop
mov
hlt
mov
in
mov
add
int
fdivl
pusha
add
inc
add
add
gs
xchg
adc
pop
sbb
imul
insb
lods
mov
and
aas
hlt
cs
fwait
xor
aas
daa
loopne
dec
dec
inc
mov
fistpl
inc
jge
addb
xor
cmpsb
imul
and
das
rclb
inc
test
pop
pop
pop
rcll
testb
jns
pop
call
ss
or
enter
int3
xor
and
and
and
test
or
enter
cwtl
or
enter
mov
enter
test
mov
js
pop
jb
je
insb
push
fs
pop
jb
and
leave
and
inc
and
cmp
xchg
pop
jb
xor
sub
pop
jb
and
leave
and
leave
and
add
dec
pop
jb
cld
clc
inc
cs
add
add
das
and
xorb
sahf
js
xchg
mov
call
fsubs
je
jl
xchg
pop
test
sub
orb
es
cmpsb
push
sbbl
mov
in
movsl
sub
scas
out
movsl
insb
mov
jno
in
sbb
cltd
add
lret
dec
cmp
imulb
push
push
inc
js
orps
inc
dec
dec
hlt
mov
inc
or
push
ds
addr16
testb
xchg
in
push
mov
jl
pop
icebp
push
mov
mov
ret
dec
mov
or
jb
popf
mov
jb
mov
pop
dec
adc
pusha
mov
and
adc
aad
and
sub
push
ret
je
movzbl
mov
pusha
jmp
jo
mov
out
jecxz
rcrl
pop
add
xor
and
adc
mov
les
and
das
inc
jne
push
sbb
jo
jae
adc
mov
sub
push
test
mov
into
xor
loope
or
adc
add
cltd
or
pusha
or
mov
add
std
aam
or
mov
jl
loop
sbb
xchg
filds
adc
mov
or
inc
pop
jmp
sbb
ja
es
mov
imul
aam
mov
int3
shrb
mov
mov
leave
mov
mov
ret
xchg
mov
aam
lahf
or
pop
push
mov
push
pop
add
adc
inc
inc
add
mov
adc
fcoml
and
in
daa
add
int3
enter
call
iret
enter
fcomp
fxch
loopne
jecxz
in
das
inc
adc
inc
push
jne
je
insl
pop
in
sbb
and
popa
je
xor
xchg
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
pcmpeqd
add
cwtl
scas
pop
clc
push
add
add
xchg
adc
pop
inc
pop
lcall
pop
pusha
push
jo
orb
cwtl
mov
cmpsb
imul
cmpsb
imul
adc
xor
rcrl
and
xor
dec
shll
pusha
push
add
add
add
and
repnz
pop
aam
inc
dec
push
sub
loopne
bound
xor
nop
call
in
and
mov
gs
sbb
pinsrw
inc
dec
fcoms
push
in
mov
add
daa
sbb
aas
inc
and
add
mov
lcall
pop
fs
nop
scas
imul
scas
add
dec
fidivrl
or
movsb
fisttpl
add
jae
mov
add
add
jae
int
lods
fisubs
cmpl
and
add
je
addr16
add
xor
add
adc
bound
iret
data16
or
push
ret
dec
jg
jns
imul
xor
dec
and
movsl
or
insb
outsl
jne
and
insb
jbe
insb
jns
add
add
push
xchg
and
add
arpl
mov
push
inc
push
or
enter
or
xor
and
sub
imul
int3
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
mov
or
xchg
pop
xchg
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
imul
gs
pusha
xor
shll
push
xor
shll
sbb
shll
and
xor
push
xor
add
xor
xlat
inc
addl
ret
and
arpl
jecxz
add
shll
or
dec
shll
push
push
xor
shll
push
add
or
xor
rcrl
add
shll
pop
or
roll
or
xchg
or
xor
xor
or
adc
sbb
xor
rcrl
sub
cmp
xor
inc
push
pusha
jo
mov
shl
mov
imul
pop
sti
fidivrs
push
push
dec
dec
inc
cmp
inc
xor
in
jmp
mov
add
stos
mov
xor
push
push
lahf
setle
inc
test
adc
adc
push
roll
push
or
or
push
imul
add
or
and
xchg
inc
or
sbb
xchg
or
push
adc
sbb
clts
imul
push
pop
and
xchg
inc
sbb
sbb
xchg
sbb
sbb
sub
sub
std
pop
icebp
fnsave
pop
adc
adc
and
or
nop
or
push
pop
and
sbb
sbb
sub
or
cld
push
xchg
shll
stos
push
or
cld
sbb
add
xor
mov
outsb
jne
outsb
gs
mov
ljmp
sbb
add
push
adc
add
pause
add
inc
mov
pop
enter
test
jae
add
imul
rorb
pusha
or
add
mov
pusha
and
leave
add
add
mov
shlb
cmp
fucomi
sbb
clc
pop
dec
mov
lock
and
xor
xor
pop
push
add
sbb
shl
aas
scas
mov
pop
aam
lods
dec
mov
xchg
pop
add
push
out
cmp
idivl
mov
pop
loopne
shlb
cmp
dec
dec
loopne
dec
xlat
mov
pop
sbb
enter
cmpsb
cmp
fdivs
addr16
cmpsb
test
sbb
xor
cmp
sbb
add
and
data16
jne
xor
add
and
ja
mov
adc
fcomps
jnp
loopne
pop
cld
pop
dec
sbb
daa
cmp
add
shll
fisttps
enter
je
stos
or
add
sbb
jo
sub
push
aas
jmp
inc
and
and
cmp
pop
xor
divl
or
mov
ret
mov
fistpll
or
mov
inc
dec
movsb
sbb
test
push
dec
inc
xchg
mov
icebp
mov
inc
pop
add
push
addb
andb
add
add
inc
popa
dec
add
push
add
or
push
pop
or
mov
pop
dec
jecxz
jnp
loopne
add
inc
or
dec
jne
dec
rorl
sub
outsl
outsb
sub
bound
inc
inc
pop
arpl
ja
inc
xor
xorl
outsl
pop
xlat
je
push
pcmpgtw
fs
arpl
push
imul
cltd
out
int3
cmp
fs
roll
pop
inc
jae
or
roll
outsb
adc
push
jb
fisubrs
insb
push
popa
pop
and
int
add
jne
jmp
jno
pop
dec
repz
add
mov
add
bound
jmp
ja
adc
add
lods
jo
popa
dec
xchg
add
out
sub
not
or
jne
and
jae
or
jnp
scas
jmp
outsb
mov
pop
pop
and
mov
inc
and
add
push
lea
pop
imul
jb
xor
jnp
cmp
xor
insl
sub
adc
outsb
daa
and
arpl
inc
adc
dec
inc
lea
sbb
xor
dec
sti
int3
fdivs
pop
arpl
outsb
lahf
jae
in
jge
scas
jo
outsl
aas
das
sbb
imul
cmpsb
imul
mov
mov
adc
pop
sub
loope
sarb
add
lods
bound
mov
jg
sbb
idivl
dec
jge
popa
xchg
mov
add
jnp
xchg
insl
pop
jo
insl
mov
mov
jne
daa
add
sbb
mov
lods
mov
mov
lret
add
xchg
test
sbbb
arpl
ja
addl
xor
adc
add
imul
arpl
imul
and
repz
sub
push
sub
push
scas
addr16
and
insb
xor
mov
fscale
in
mov
adc
fisttps
adc
jo
arpl
lahf
arpl
pop
xchg
xor
lret
js
push
jae
int3
jge
pop
and
push
inc
sbb
in
bound
imul
leave
adc
fsts
andl
push
outsl
dec
cmp
faddl
mov
loope
push
push
sti
add
add
adc
mov
mov
jb
lret
or
push
sub
inc
aas
fs
daa
stos
je
mov
nopl
xchg
sbb
jge
arpl
pop
or
lret
push
push
jecxz
push
in
dec
jbe
xor
add
adc
mov
clc
popa
adc
outsl
in
sub
outsb
sub
dec
dec
add
sti
outsb
sbb
mov
std
gs
outsl
mulb
mov
fistl
pop
xlat
les
jg
inc
imul
sti
and
push
ss
mov
jno
sub
aas
sti
pop
xor
loope
ret
jp
pop
cmpsl
enter
add
adc
pop
mov
adc
add
dec
and
inc
ret
sbb
mov
aas
fsts
nop
xor
aas
mov
sbb
push
ss
pop
xor
std
push
out
cmp
je
cmp
insl
jl
gs
pop
pop
dec
dec
je
insl
jle
push
hlt
mov
cmp
pushl
je
aad
je
sub
es
es
pushl
cmp
pop
es
aaa
mov
pop
fwait
cmp
pop
int3
sbb
test
jg
push
adc
pop
push
jo
jb
fisttpl
add
adc
je
sbb
mov
mov
loopne
cld
push
int
or
push
sbb
rclb
in
out
fbstp
dec
outsl
arpl
adc
or
popa
jae
sbb
add
mov
cmp
shl
dec
xor
jbe
ja
jne
mov
push
sbb
imul
ljmp
arpl
es
dec
fwait
xchg
in
lahf
xchg
jbe
inc
push
dec
adc
fisubl
insb
or
push
add
popa
outsb
popa
fimull
sub
outsb
in
out
xor
mov
sarb
dec
push
adc
cmp
aas
repz
or
push
sub
mov
mov
popa
jb
jae
mov
add
jmp
push
adc
sbb
insb
add
xor
rcrb
pop
xor
repnz
adc
push
mov
sbb
adc
sarb
arpl
popa
inc
sbb
insl
packuswb
iret
jnp
test
shll
jne
insb
push
jne
ss
inc
je
lret
fimull
push
add
mov
imul
sahf
jo
mov
imul
adc
xor
adc
stos
pop
mov
popa
adc
stos
cmovno
les
dec
jne
jae
adc
outsb
fstpl
dec
outsl
fs
push
adc
jae
pop
imul
js
loope
rorb
adc
add
dec
pop
push
cmpsl
imul
mov
push
dec
add
les
pop
in
or
outsb
data16
pop
mov
stc
outsl
outsl
jne
es
nop
fs
outsb
imul
fcoms
ds
pop
adc
imul
adc
stos
sub
mov
in
inc
push
jne
adc
ret
sti
or
mov
testb
pop
imul
or
test
push
inc
dec
int
movsl
test
sbb
cld
or
mov
inc
add
push
mov
xor
jge
fs
scas
fs
mulb
push
jae,pt
inc
fs
push
xchg
adc
jae
call
mov
cmp
outsw
cmp
imul
sbb
push
int
clc
sub
outsb
jbe
loope
mov
bound
inc
shll
bound
mov
and
popa
mov
adc
inc
jb
inc
push
cmp
pop
imul
inc
or
or
pop
inc
push
pop
mov
cmp
call
adcl
jo
scas
push
outsl
lds
cmp
sub
pop
sub
mov
and
popa
addr16
cmpsb
inc
push
xchg
mov
adc
or
daa
inc
leave
ficoms
pop
inc
xor
lea
dec
jnp
mov
gs
out
sub
cwtl
sub
dec
adc
fildl
cmp
xchg
outsl
outsl
insb
dec
jo
push
cmp
lock
mov
je
insb
push
adc
jmp
or
cmp
mov
xor
push
test
inc
and
sub
sub
int
stos
and
push
mov
inc
push
mov
dec
iret
sbb
inc
dec
pop
inc
pop
adc
pop
and
jmp
dec
mov
dec
xor
stos
mov
fcmovnu
and
inc
mov
aaa
daa
test
fs
push
cld
sbb
and
add
sub
aas
pop
xchg
and
je
sbb
push
or
fs
nop
pop
jns
xor
cmpsl
adcb
inc
nopl
adc
orl
jns
or
sub
xchg
insb
pop
push
sbb
or
add
pop
add
mov
or
dec
pop
imul
pop
movsb
subb
xor
pop
xchg
mov
in
jae
fsubrs
addr16
lds
push
sub
push
insb
fldcw
cmp
test
adc
adc
test
inc
aad
or
push
inc
arpl
pop
test
inc
leavew
lcall
pop
adc
cs
xchg
dec
sbbb
or
aaa
adc
dec
jbe
mov
push
outsb
adc
dec
pusha
scas
sub
xor
push
insb
jecxz
pop
out
cld
jecxz
cltd
and
in
inc
or
push
inc
jbe
or
sbb
or
cmp
test
je
dec
xor
or
mov
inc
dec
inc
or
fbld
inc
imul
insb
test
push
pop
push
push
push
jmp
mov
pusha
xor
dec
or
cmc
fadds
daa
cmovno
mov
sbb
inc
gs
jl
pop
leave
pop
or
mov
adc
sbb
loope
or
mov
push
dec
xchg
outsb
push
inc
push
sbb
aad
imul
inc
negb
outsb
rorl
add
ds
mov
fmull
xor
negb
int
js
addr16
cmp
dec
insl
adc
adc
xor
xor
jmp
dec
adc
jmpw
fcoms
pusha
les
icebp
dec
shll
push
jge
adc
mov
adc
cmp
shrl
jnp
cwtl
pop
daa
dec
fstl
xor
ret
ljmp
adc
jae
into
jo
rolb
push
push
dec
dec
insb
cli
je
mov
and
mov
scas
jne
pop
in
jne
xchg
bound
arpl
insb
dec
push
outsl
loope
rcll
dec
dec
das
int3
push
push
lock
jge
bound
pop
nop
orb
adc
mov
sbb
push
ret
and
ss
pop
sbb
je
xchg
sbb
inc
dec
lea
insl
test
fdivs
mov
pusha
sub
js
cmp
daa
dec
jae
push
sbb
aad
jo
adc
xchg
mov
int
ficoms
xor
test
call
mov
out
jb
pushf
dec
push
and
sbb
subb
arpl
xchg
push
int
mov
jno
dec
mov
or
pop
inc
jnp
xor
inc
bound
fimull
xor
testl
or
xchg
dec
lahf
sarb
imul
mov
inc
sub
mov
jmp
mov
or
sbb
add
mov
inc
ret
cmp
rcrb
xchg
adc
dec
ds
pop
or
leave
lock
sub
call
adc
push
mov
lock
push
inc
mov
mov
inc
sbb
dec
and
ret
jae
pop
xlat
pop
jae
popf
or
adc
adc
add
jbe
or
push
or
imul
or
sub
arpl
or
add
mov
stos
mov
pop
inc
sub
loopne
popl
add
add
cmp
enter
fadds
add
push
adc
movsb
add
pop
inc
rorl
lods
mov
dec
sbb
xor
or
add
pop
in
test
add
pop
sbb
inc
xlat
test
out
fldl
and
inc
inc
push
inc
or
es
mov
sti
adc
mov
mov
shlb
orl
mov
cwtl
daa
sbb
and
pop
repz
sbb
je
or
cwtl
or
orl
sub
testb
add
inc
push
jmp
add
daa
sbb
faddl
movsb
mov
jb
mov
imul
ret
ja
pop
push
icebp
add
add
add
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
pop
js
adc
adc
