add
add
or
add
and
add
nop
add
addb
add
pop
sbbl
add
add
add
rolb
add
fiadds
add
add
add
pop
sbbl
add
add
add
add
add
pop
add
add
push
add
adc
add
pop
sbbl
add
add
add
add
add
addb
add
push
add
pop
add
add
sbbl
add
add
add
add
add
test
add
pop
sbbl
add
add
add
add
add
rolb
add
addb
dec
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
dec
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
mov
add
add
add
or
add
or
add
add
add
add
add
add
add
lods
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
dec
add
add
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
insl
add
jbe
add
add
add
je
push
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
add
add
add
add
add
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
inc
add
inc
add
add
dec
add
add
add
je
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
and
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
int3
fdivr
mov
sarl
ficompl
lds
mov
andb
jne
dec
cmp
cmp
in
sub
adc
push
pop
scas
iret
or
pop
loope
jb
push
je
test
inc
push
add
cmp
imul
mov
mov
pop
adc
fldenv
cmc
mov
data16
outsb
ret
xchg
sbb
repnz
das
adc
stos
jle
xchg
out
pop
add
inc
icebp
out
movsl
or
mov
sub
andb
shrb
add
cmp
iret
fadd
jbe
sub
xrelease
lahf
or
decb
adc
insb
mov
das
cmpsl
out
and
or
in
cmp
mov
in
int
push
iret
adc
ret
push
das
into
dec
cmpsb
and
or
sbb
mov
inc
lods
ret
mov
repnz
cmp
adc
inc
inc
cmpsb
in
mov
pop
xchg
mov
test
mov
daa
push
lods
lret
js
xchg
dec
repnz
sahf
loope
sahf
aas
mov
lods
fidivs
outsl
aad
imul
add
hlt
jno
dec
mov
mov
ds
inc
inc
mov
xchg
mov
mov
rcrb
imul
imul
inc
subb
inc
es
sbb
mov
cli
and
outsl
sbbl
gs
or
add
sub
mov
outsb
mov
xchg
call
je
sbb
movsl
xor
lds
jge
outsl
inc
iret
add
cs
jl
insb
jnp
mov
inc
pushf
lds
dec
test
stc
sarl
xor
lods
in
in
in
gs
sub
add
xchg
xchg
sbb
repnz
xchg
cld
sub
aas
jmp
scas
and
ljmp
in
mov
jnp
loop
pusha
push
mov
out
adc
and
xor
cmp
xchg
or
daa
jne
jp
and
jno
mov
mov
xchg
dec
push
cmp
or
pop
add
inc
add
dec
imul
mov
add
xor
negl
xchg
movsb
or
outsb
test
scas
xor
cmpsl
add
movsb
dec
push
movsb
aad
pop
cli
mov
aaa
adc
pop
loopne
daa
imul
cli
idivl
push
mov
and
pop
ret
test
mov
test
pop
fldt
stos
stos
pop
js
jbe
es
dec
jecxz
mull
add
sub
push
and
rol
roll
daa
sub
adc
adc
aad
inc
xchg
neg
jo
int
insl
bound
aaa
outsl
psrld
movsl
fwait
sub
fsubl
push
inc
andl
stos
je
jl
test
lock
mov
and
xor
mov
fcompl
pop
out
xor
std
cmp
dec
push
inc
and
add
pop
out
dec
sbb
xor
pop
test
cmp
push
xor
dec
xor
mov
pop
mov
or
or
mov
dec
xchg
push
data16
shrb
mov
aas
add
out
mov
mov
in
leave
xor
push
push
shr
mov
out
adc
xchg
push
adcb
cmpsl
xchg
mov
or
xor
movsb
fdivs
clc
sub
imul
xchg
cmpsl
jmp
pop
data16
in
sbb
int
fildll
xchg
jns
pop
mov
ret
cwtl
dec
out
xor
push
popf
ret
inc
and
es
sbb
outsl
cli
loop
xchg
ljmp
jecxz
outsb
mov
rorl
rcrl
jg
fs
sub
adc
aam
int3
fwait
inc
push
decl
adc
pop
pop
popl
sub
cmp
add
mov
pushf
or
inc
rorb
adc
loopne
adc
punpcklbw
adc
dec
dec
cld
cwtl
xor
mov
mov
aas
js
inc
jmp
sbb
cmp
mov
stos
jns
mov
sbb
adc
fs
inc
jecxz
xlat
lock
mov
mov
pop
fisttpll
add
adc
and
inc
push
ljmp
mov
rcll
mov
adc
jmp
insb
mov
xchg
out
enter
ljmp
dec
popf
and
hlt
cld
movsl
mov
bound
in
xor
xchg
insb
lock
in
sub
fildll
out
je
outsb
out
xchg
mov
sub
adc
xchg
cltd
inc
xor
sbb
popa
sbb
pop
push
push
popf
jmp
or
xor
pop
scas
pop
addr16
das
mov
xchg
pop
lret
ljmp
pop
ror
jno
mov
xor
imul
or
movsl
jle
push
cmp
push
pop
adc
mov
xor
out
aam
fnsave
daa
push
sbb
aad
sbb
or
jb
adc
int
ljmp
test
insl
or
mov
popa
push
dec
sub
push
xchg
mov
add
mov
sbb
fs
adc
fcomps
ds
cmp
pop
sbb
pop
arpl
clc
and
outsb
scas
push
js
movsl
sub
dec
mov
lods
mov
cmp
scas
adc
add
mov
addr16
xchg
stc
sub
cmp
mov
push
cld
push
jbe
les
mov
mov
mov
test
cmp
add
jecxz
bound
loop
cwtl
leave
adc
cmc
in
pusha
or
sbb
cld
in
add
into
mov
gs
jmp
add
sbb
cmc
lods
jle
add
dec
push
cmpsb
in
aas
enter
aas
mov
pop
mov
mov
dec
or
push
in
mov
loop,pn
mov
mov
scas
lock
popa
daa
call
imul
das
test
test
imul
orl
sbb
lcall
and
gs
adc
pop
es
out
popa
pusha
and
adc
pushf
test
bound
and
out
pop
add
add
sbb
mov
or
jb
pop
pop
fmulp
ret
movsl
ret
or
mov
xchg
jmp
dec
loopne,pt
xchg
inc
push
cld
and
jg
push
jae
shl
and
outsl
out
pop
popf
jecxz
pop
jg
stos
mov
das
data16
repz
ret
xchg
jmp
add
fs
dec
xchg
add
fistl
jge
loopne
cli
mov
pop
adc
out
or
dec
xchg
dec
les
mov
mov
lods
mov
pop
push
pop
in
push
fimull
repz
repz
and
outsl
ret
ret
rcrl
xor
and
test
nop
xchg
sub
push
inc
push
push
xor
stos
int
adc
sub
loope
addb
ret
jle
sbb
pop
push
sar
es
scas
inc
cmp
and
imul
add
call
and
jo
xor
dec
pop
mov
jnp
jge
xchg
sub
int3
xchg
jno
adc
mov
sbb
mov
or
lcall
xchg
leave
lcall
jbe
cmp
addb
mov
pop
sti
mov
repnz
jns
insb
cmpsl
rcrb
mov
cmp
mov
dec
pop
pop
pop
or
movsl
cltd
cwtl
inc
push
jbe
fstps
and
test
stc
jo
mov
frstor
cld
xchg
push
xchg
inc
mov
aam
or
and
in
pusha
and
pop
in
pushf
jb
sbb
sti
cmp
rep
scas
inc
mov
cmpsb
inc
mov
hlt
stos
or
push
movsl
gs
leave
sbb
jne
ljmp
mov
cmpsb
mov
sub
out
pusha
bound
lock
push
mov
lods
cmp
dec
shrl
std
lret
inc
loopne
cmp
mov
sbb
add
xchg
mov
daa
outsl
or
fadds
rcll
push
dec
ret
push
scas
mov
out
test
xchg
fwait
cli
push
push
mov
jp
jo
add
loopne
in
notl
mov
inc
or
mov
mov
not
push
sti
mov
divl
cmp
mov
or
mov
pop
sub
sti
mov
jge
stc
cmp
add
xor
jae
lock
mulb
push
ret
flds
sub
loope
pop
ror
sbb
stc
add
into
lcall
into
or
stos
test
adc
cmpsl
jno
lods
xor
sub
fsqrt
sub
jae
xorl
mov
sub
std
in
fidivl
fwait
xor
xor
pop
pop
mov
cmp
cltd
mov
cmp
sbbl
push
mov
cmpl
mov
xor
jl
or
inc
mov
add
std
xlat
mov
jge
xchg
sahf
xchg
int
and
mov
xchg
pop
jb
out
or
mov
mov
lahf
cmp
push
mov
stos
xchg
add
clc
flds
andl
lahf
mov
aas
push
in
ds
adc
cmp
enter
mov
test
pop
mov
mov
adc
jbe
mov
push
and
cmp
mov
ret
jmp
movsb
pop
adc
pop
dec
jo
stc
ror
movl
pop
cld
lret
mov
pop
xchg
popf
push
fimull
fwait
sub
arpl
iret
fcmovnu
jle,pt
adc
or
pop
push
xlat
mov
test
cmpsb
sbb
inc
leave
cmp
push
test
out
jb
dec
mov
mov
sub
jae
pop
xor
loope
xor
int3
stos
pop
movsl
rorb
data16
aas
push
dec
jae
jecxz
in
out
cmp
lock
push
dec
pop
mov
cmpsb
pop
push
jp
sbb
cmp
in
fstps
out
outsl
mov
outsb
mov
lahf
xor
out
stos
in
sub
fcom
mov
das
dec
jecxz
push
loop
push
push
adc
add
pop
pop
lcall
jmp
test
pop
lret
repnz
addr16
div
xor
shlb
mov
inc
cmpsb
mul
int
cmp
and
fldcw
sarb
cmp
inc
mov
mov
sub
mov
jo
imul
and
stos
cmp
in
cmpsb
jae
std
or
repnz
lock
or
in
pop
adc
mul
and
in
cmp
sub
push
jp
lahf
xor
icebp
add
and
pop
sub
stc
stc
mov
aaa
mov
sub
std
cmp
cmpsl
int
in
pusha
daa
pop
and
out
sub
xor
jp
insb
cmp
xor
fisttpl
sbb
cld
dec
andl
and
out
gs
imul
les
add
mov
iret
repnz
dec
jge
jecxz
push
pop
push
les
xchg
ret
stc
insb
int
xchg
mov
divl
dec
dec
jb
cmp
and
push
inc
or
jge
push
adc
adc
adc
xchg
add
mov
xor
jo
lahf
xchg
push
cld
inc
cmp
inc
loop
in
or
lds
dec
cmp
dec
pop
fidivrs
lods
imul
cmp
out
stos
fistpl
int3
or
cmpl
clc
push
adc
shlb
hlt
jle
dec
push
popf
mov
out
imul
pop
and
push
test
or
jne
add
sub
push
sub
adc
adc
jmp
lcall
mov
and
js
push
jbe
rcll
lea
icebp
das
mov
cltd
test
cmp
fxch
stc
sub
jecxz
mov
out
out
test
outsl
rorl
mov
cmpsb
pop
loope
mov
pop
fwait
jmp
jno
jecxz
jge
es
mov
lret
cmpsl
pop
jmp
xor
rorl
inc
in
call
xor
sub
cmp
aas
add
lahf
test
addr16
jbe
inc
jle
les
pop
fstl
hlt
push
push
adc
arpl
adc
xchg
repz
mov
jle
inc
iret
pop
mov
cmpsb
subl
cmpsb
pop
pop
inc
sub
aad
dec
fs
jne
xor
jae
pop
inc
jg
divb
jbe
mov
in
fwait
mov
jge
mov
sbb
test
xor
hlt
jg
add
cs
jns
xchg
dec
cld
pop
enter
stos
xor
sti
ss
test
pop
sbb
pop
pushf
pop
mov
inc
stos
pusha
imul
jb
in
in
push
ret
sbb
mov
outsl
pop
or
and
and
ror
shrl
and
shll
sub
mov
push
mov
pop
xchg
repz
leave
mov
jne
adc
std
in
jp
mov
js
ret
ljmp
ds
pop
xchg
dec
dec
push
stc
mov
enter
je
sbb
insb
add
pop
pop
sub
sub
in
sub
cli
bnd
adc
incl
or
aaa
ret
adcl
es
test
pop
pop
pop
push
mov
outsl
dec
or
lahf
mov
inc
mov
inc
mov
roll
jg
es
mov
mov
jecxz
jp
mov
loop
addr16
mov
cmp
aaa
es
pop
sbb
mov
jnp
push
push
mov
mov
add
push
push
mov
pop
aaa
cmp
nop
mov
mov
hlt
stc
jecxz
scas
sbb
mov
push
mov
es
outsb
mov
andps
sahf
bound
jae
inc
in
outsl
adc
dec
outsl
cmp
aam
dec
iret
cmp
jmp
push
in
test
xor
jnp
repz
dec
mov
dec
test
test
cs
adcb
mov
sub
add
into
xor
lods
mov
xor
ret
shll
ret
inc
sub
lods
and
push
stos
into
ljmp
push
sub
jae
loope
sub
outsb
icebp
movsl
test
inc
mov
stc
repnz
les
cmp
xor
aam
pop
cmp
mov
sub
loope
push
arpl
jge
push
sbb
jb
aas
shlb
sbb
adcb
or
movsl
fs
shll
xor
movsb
call
sub
f2xm1
mov
std
sbb
push
inc
aad
aas
in
pop
faddl
in
jl
dec
mov
rcll
add
push
inc
fiadds
jae
stos
jo
sbb
push
out
jecxz
and
lock
mov
sbb
cmp
pop
jae
sub
jecxz
out
iret
out
fcmovnu
jbe
fimull
stc
mov
sbb
std
lahf
test
sub
push
cmp
addb
loop
fdivl
xchg
jbe
xchg
dec
int3
bound
test
sbb
into
mov
scas
cmp
cmpb
xchg
iret
push
xchg
mov
cmp
jp
in
dec
xchg
aas
push
adc
xor
mov
int3
fisttps
mov
dec
inc
cmp
mov
pop
inc
cmpsl
sbb
movsb
daa
xlat
mov
jg
notb
out
insl
daa
jnp
frstor
pop
imul
cmp
inc
sti
adc
pushf
add
mov
jae
push
icebp
roll
push
or
mov
ljmp
iret
into
mov
sahf
pop
bound
push
jmp
cwtl
xor
inc
in
cmp
lds
push
int
dec
iret
repz
dec
mov
sbb
dec
xorl
inc
icebp
mov
std
testb
test
dec
mov
ficompl
test
push
and
popf
add
out
xor
lock
sub
xor
mov
repz
aas
pop
dec
mov
in
push
xchg
aad
leave
inc
fisttpll
push
mov
jmp
xor
loope
punpckhwd
and
shrb
sub
cli
push
push
mov
out
add
cli
aam
jae
mov
sub
mov
pop
sub
int3
mov
cmpl
lcall
jbe
mov
frstor
mov
pop
pop
mov
mov
rcr
push
in
negl
cld
mov
jle
sbb
pop
data16
pusha
je
push
sbb
sbbb
lods
insl
mov
and
leave
subl
inc
cltd
and
lret
push
pushf
dec
in
sub
jns
mov
pop
mov
xchg
and
loopne
or
addr16
nop
popa
daa
fs
pop
push
xchg
stos
je
idivb
xor
or
jbe
cwtl
mov
out
test
leave
sti
mov
ss
popf
push
adc
sbb
repz
mov
btc
and
inc
push
repnz
fistpl
aas
sahf
xchg
xor
stos
mov
not
mov
dec
mov
ficomps
addr16
out
jmp
dec
fs
outsb
outsb
xchg
gs
adc
add
lods
hlt
inc
pop
dec
in
into
imul
lret
inc
sub
int3
and
pusha
xor
cli
ja
loop
fidivrs
dec
aaa
push
and
push
xchg
push
add
mov
dec
mov
xor
push
mov
jbe
rcr
add
dec
test
fwait
lret
stos
pop
mov
movl
std
mov
jno
mov
add
adc
bound
aam
pop
int3
bound
stos
ja
pop
jae
sub
push
jbe
add
inc
dec
movsl
jl
ljmp
fstps
orl
mov
mov
stos
aas
pop
xchg
pop
aad
adc
inc
call
int
and
sahf
data16
mov
int
repz
roll
cmp
mov
inc
push
inc
xchg
loopne
into
fisttpll
pop
ljmp
inc
jg
ret
stos
cld
hlt
out
stos
cmc
inc
sahf
loopne
rcl
imul
inc
nop
mov
inc
shrl
xor
test
out
sub
or
sbb
xlat
inc
sbb
das
negb
inc
pop
int
dec
mov
mov
dec
xor
jno
aad
dec
cmp
mov
mov
fcoms
sbb
mov
bound
or
mov
fidivs
sub
sbb
scas
dec
in
and
or
or
shlb
lahf
adc
fstp
push
cmp
lret
leave
cmp
xchg
inc
stc
bnd
mov
or
sbb
mov
jo
jbe
inc
inc
shrl
scas
subl
inc
mov
orl
cmc
cwtl
ljmp
jp
cmpsb
repz
arpl
sub
push
les
shll
and
ret
jmp
std
enter
mov
loop
inc
sbb
mov
sarl
add
dec
pop
aam
scas
iret
sub
arpl
mov
out
dec
movsb
mov
cld
inc
aaa
and
dec
dec
sbb
sbb
pop
adc
pop
xchg
rcr
outsb
lret
mov
arpl
pop
adcl
add
mov
sbb
mov
cs
enter
push
out
loope
icebp
cmc
sbb
arpl
xchg
jne
ljmp
xchg
or
adc
jnp
push
shlb
inc
ljmp
jg
sti
stos
mov
sbb
mov
jb
scas
add
inc
pop
xor
pop
adc
jge
pop
out
xchg
mov
adc
sbb
xor
cmp
popfw
leave
xor
ds
sub
cmpsb
cmpl
jne
inc
sar
pop
out
cmp
adc
pop
cmpsb
test
stos
in
add
mov
rorl
repz
clc
cmp
iret
ljmp
mov
or
jno
les
loop
pop
movsb
xor
test
jg
adc
push
xchg
push
cmc
inc
cmpsl
xor
mov
loopne
adc
test
orl
or
pop
stos
inc
jb
andb
dec
add
xlat
sub
xor
mov
mov
jl
sub
ds
fisubl
jge
or
xchg
mov
gs
rorl
lods
adc
in
cmp
movsl
jge
adc
icebp
paddsw
sahf
add
sbb
mov
cs
jae
repz
mov
addr16
inc
xor
out
jno
fcoms
and
push
cmp
movsb
ljmp
dec
mov
pop
es
sbb
nop
jge
pusha
pop
fldt
cmp
icebp
push
mov
pminsw
or
inc
or
lea
fisttps
mov
sub
push
rcrb
mov
jo
sub
inc
xor
lahf
hlt
sub
addr16
rolb
int
subl
inc
mov
in
add
movzbl
mov
enter
jns
cwtl
loope
add
loopne
mov
out
cmpb
xchg
push
xlat
adc
fwait
aas
bound
jne
outsb
out
out
fldt
push
adcb
repnz
in
jecxz
out
out
add
pop
jo
ficoms
push
cmc
cmpsb
stos
ja
adc
out
mov
add
mov
subb
fwait
xor
lds
loope
push
cmpsb
sbbb
mov
mov
jbe
dec
popf
mov
xor
fs
ds
dec
xor
loop
adc
lods
inc
push
jnp
jno
mov
cmp
vphaddbw
es
pop
ss
cmp
std
icebp
dec
shrl
mov
pop
loope
xchg
jge
mov
push
inc
mul
es
shrb
stos
loop
lcall
fld
push
js
fs
dec
mov
xchg
adc
aaa
bound
into
sub
fistpll
adc
add
jnp
dec
loop
adc
mov
sub
outsb
and
sti
outsb
adc
les
mov
push
push
es
xchg
fcomps
xchg
cmp
mov
push
inc
lea
aam
push
pushl
mov
inc
mov
mov
dec
jle
xlat
cmovne
stos
in
movsl
aas
pop
xchg
push
xchg
xchg
mov
test
add
aaa
mov
in
push
icebp
jo
sub
cmc
mov
xchg
call
ds
push
lret
imul
std
cmp
pushf
fcompl
fistps
pop
mov
out
cmc
cmp
sub
mov
xor
repnz
pushl
mov
add
inc
mov
sub
push
fwait
sbb
mov
in
mov
lock
sbb
add
jnp
loop
cmp
xchg
aas
sbb
gs
imul
call
lea
aas
mov
cmovb
jg
push
add
inc
jg
in
in
movsl
fnstenv
sub
jle
push
test
aam
outsb
mov
push
enter
push
call
push
shrl
push
into
cmc
inc
jg
fisttps
lock
addr16
daa
dec
sbb
and
fs
stos
insl
fstps
in
push
mov
in
push
adc
pop
sbb
std
mulb
loope
mov
bound
fcmovnu
sbb
mov
ffreep
scas
mov
stos
xor
mov
cmp
cld
fisttpll
sub
in
rcll
inc
mov
lret
test
inc
pusha
pop
xchg
lock
out
mov
mov
in
stos
add
shll
mov
ljmp
fwait
mov
sahf
sbb
adc
cmp
idivb
fnstsw
add
add
icebp
shrl
fcmovbe
popa
and
mov
dec
mov
sahf
mov
scas
and
popa
leave
orl
cltd
std
loopne
push
jmp
push
mov
cmpsb
xor
out
std
pushf
loop
ds
xchg
mov
mov
jbe
push
pop
or
imul
push
mov
jbe
rclb
dec
rcll
mov
dec
in
cmpsl
xor
and
incb
fildll
jg
mov
insl
push
notl
xor
push
es
popf
adc
fwait
xor
ret
in
movsl
enter
adc
or
mov
pop
adc
daa
lods
mull
cld
and
ret
pop
fdivrl
push
lock
cli
mov
lods
ljmp
vhaddps
mov
pop
std
fs
xor
sub
test
inc
pop
jae
sub
xchg
outsl
popa
mov
rcrl
int
popa
adc
lock
mov
shrb
lahf
adc
pop
xor
scas
ja
and
mov
data16
adc
dec
stos
sub
adc
std
push
fucom
lock
subps
leave
xor
xor
imul
scas
adc
sub
mov
and
cmp
or
and
jge
xchg
out
lret
test
adc
pushf
mov
repnz
in
imul
pop
cmp
lcall
stc
mov
fsubp
and
dec
outsl
testw
jns
jecxz
xor
or
xchg
sub
aaa
js
xchg
lahf
mov
adc
fwait
jns
xor
xor
sub
adc
add
mov
enter
outsb
push
xor
and
and
xor
xchg
adc
pop
pop
test
mov
aad
pop
loop
jge
mov
jge
sarb
inc
arpl
mov
jae
push
repnz
test
out
inc
sub
insb
in
add
sbb
push
mov
lock
repz
and
add
xchg
fisttpll
fstl
sub
jo
mov
or
ret
rcll
mov
pop
andb
sub
mov
hlt
push
js
or
mov
lcall
insb
in
imul
das
cmp
cmp
mov
fnclex
js
add
enter
pop
gs
mull
mov
int
movsb
fwait
repz
sarb
fistps
ret
es
outsl
rcll
lret
and
adc
loopne
cld
jl
stos
and
pop
adc
dec
mov
or
jp
sbb
cld
loopne
sub
pop
cmp
cmp
pop
fldcw
call
mov
pop
jmp
test
push
jmp
das
imul
loope
xchg
pop
mov
sub
xchg
sub
out
xor
adc
mov
add
sbb
adc
push
xchg
dec
or
call
bt
add
inc
aam
fistpl
das
out
ja
push
cmp
loope
push
loopne
pop
fs
mov
cmpsl
testb
jle
rcl
xchg
enter
add
cltd
lods
jge
jno
mov
mov
xchg
mov
add
aam
and
hlt
ljmp
mov
jmp
jo
mov
dec
stos
out
rorl
int3
pop
inc
pop
aas
jle
cli
push
sarl
int
push
jns
cmp
movsl
or
jo
shl
stc
jne
push
je
mov
lea
out
daa
addl
movsb
fs
mov
xor
insl
sub
jmp
rcrb
dec
mov
lods
xor
call
aas
adc
andb
cmpsl
ds
xchg
inc
add
bound
pop
pusha
and
mov
insl
stos
lret
imul
or
jae
in
bound
lea
clc
inc
mov
push
xchg
test
inc
jg
dec
lods
mov
shll
cltd
outsl
sbb
movsb
jne
aam
jae
ja
outsl
add
js
jae
mov
shl
sub
dec
xor
stos
movsl
popa
movsl
jecxz
add
cmc
inc
or
cmp
pcmpgtb
sub
adc
outsl
loop
rcrl
insb
push
test
rdtsc
sub
adc
scas
scas
dec
inc
clc
notl
inc
mov
mov
mov
les
sbb
iret
inc
inc
dec
loop
push
iret
es
loope
in
inc
mov
or
fs
inc
sub
shll
inc
outsl
pushf
xlat
cmp
sub
jp
inc
iret
xchg
scas
jo
movsb
insl
mov
jb
push
in
in
xlat
cmc
xchg
movsb
and
out
call
stc
or
lock
push
cmp
adc
in
movsl
lahf
jg
jne
and
test
repnz
add
push
or
pop
inc
and
shll
cld
adc
loop
fsubp
cmp
push
dec
add
into
adc
cs
enter
pop
psubd
ret
int3
jno
adc
xchg
fmul
lcall
push
out
cld
mov
mov
push
mov
jb
add
rclb
out
push
jg
lock
lret
cmp
cwtl
mov
dec
pushf
and
loope
lret
mov
pop
mov
mov
shl
movb
mov
cwtl
mov
jno
scas
lock
push
and
pop
cwtl
addr16
sbb
inc
cmpsb
mov
imul
mov
clc
mov
cmp
mov
sbb
cmp
imul
cmp
cmp
or
add
dec
stos
cmp
adc
cmp
mov
cltd
sbb
mov
mov
lahf
cli
lods
aas
cli
pop
in
js
repz
xor
repnz
adc
push
out
add
fnstsw
jecxz
jge
rolb
xor
out
or
sbb
or
sti
fnstenv
adc
jb
pop
cmpb
subb
cmp
and
lret
mov
das
int3
gs
push
mov
mov
out
inc
jno
call
sub
push
nop
out
imul
pop
xchg
jns
repz
stos
jbe
daa
cli
sbb
and
ss
add
addr16
inc
cmpl
add
daa
insb
inc
incb
test
adc
mov
movsl
jbe
pop
dec
sbb
out
sbb
or
repnz
sahf
testb
cld
iret
or
repz
adc
or
jp
jb
ret
lods
jp
mov
mov
pushf
aam
addr16
out
xor
aas
dec
xchg
inc
push
std
daa
rclb
jb
out
sti
dec
popa
lods
xchg
je
cld
ret
js
mov
xor
xor
sub
xor
gs
inc
data16
lahf
aam
stc
mov
imull
push
scas
int
out
cmp
pop
pop
in
in
icebp
xchg
xchg
into
repnz
mov
insl
mov
incl
in
push
or
call
test
xor
in
dec
cmp
jg
mov
mov
or
jne
jae
test
loopne
and
or
fsubs
cltd
and
cmp
daa
in
jae
pusha
push
mov
push
int3
mov
cwtl
jbe
test
int3
mov
mov
xor
inc
push
dec
or
mov
jle
scas
and
cld
mov
jnp
sbb
xor
jno
ss
mov
push
and
sbb
adc
in
pop
cmpsb
lea
into
xor
repnz
ret
lcall
outsl
mov
cmp
sub
sbb
bound
cmc
push
mov
cmp
adc
xchg
adc
ret
subb
jo
cmp
mov
jae
cmove
aas
pop
xchg
imul
add
xchg
cwtl
vhsubps
repz
daa
push
dec
int3
dec
stc
pop
push
pushl
add
data16
push
jns
test
rcrb
stos
ja
sahf
mov
aaa
push
push
push
adc
ret
mov
inc
jno
pop
rclb
psubusb
pushl
int3
stc
stos
sub
sub
ret
inc
pushf
stos
mov
mull
mov
and
inc
shr
fdivs
lret
gs
enter
or
leave
jg
iret
hlt
cmp
loop
xchg
in
pop
add
fmul
sub
imul
sbb
jne
jns
jno,pn
sti
pushf
inc
xchg
mov
maxps
rorb
jns
push
cmpsb
lret
insb
daa
mov
push
sahf
arpl
pop
pop
mov
test
hlt
adc
out
dec
inc
lret
push
jno
es
or
mov
movsl
pop
into
roll
and
mov
jno
add
dec
je
jmp
mov
pop
push
xlat
add
cmpsb
inc
int3
fdivl
mov
fwait
jo
and
movsb
adc
sub
pop
bound
or
fdivrs
mov
jne
cmpl
cmp
mov
aaa
xchg
cs
mov
xor
nop
cmp
add
fsubs
out
xchg
sub
jg
loopne
ja
cwtl
je
push
pop
in
jnp
xorl
jo
xchg
xor
or
sbb
cld
cmp
cmp
repz
leave
lret
pop
stc
cwtl
xchg
sbb
mov
pop
inc
or
or
xchg
call
loope
shll
in
aad
es
cmc
mov
pop
cmc
arpl
add
inc
fdivrl
jp
or
fs
mov
jne
loopne
inc
scas
xchg
push
sbb
mov
sbb
add
xchg
mov
push
bound
shll
in
dec
jp
insl
outsl
and
or
adc
pop
lods
pop
mov
test
and
adc
inc
mov
lds
stos
pop
adc
push
inc
nop
pop
cld
pop
mov
fcompl
sti
add
das
out
sub
lret
and
xchg
and
aam
cld
out
cmpsl
outsl
enter
pop
pushf
das
fiadds
lods
xchg
in
mov
jl
je
shlb
enter
jge
mov
leave
xchg
push
cmp
int3
mov
sbb
jp
lahf
jne
les
fidivs
lods
add
xchg
pusha
xor
jp
sub
or
ficompl
xchg
scas
mov
rcll
movsl
sbb
pushf
jno
push
leave
test
mov
fs
push
jo
cmp
xchg
rorl
adc
mov
test
push
jne
popf
sub
mov
jo
mov
cmp
imul
cmp
mov
push
push
push
rolb
cmpsb
push
add
push
and
xor
clc
call
xor
xor
push
mov
sub
mov
icebp
lcall
mov
xor
mov
fcoms
mov
pmaddwd
test
fsubs
ljmp
sbb
xor
push
repz
pop
movsb
outsb
xor
outsl
push
outsb
jmp
in
ds
push
imull
add
xchg
repnz
loop
into
jmp
inc
sub
dec
push
pop
popf
mov
cmpsb
fimuls
cwtl
iret
das
dec
and
dec
rolb
mov
movl
ja,pn
lock
sub
arpl
mov
jno
dec
push
stos
push
jle
push
pop
cltd
aad
in
mov
pusha
pop
dec
lret
pop
jbe
outsl
loop
aaa
lret
dec
inc
mov
hlt
ljmp
loop
push
jb
aas
pop
js
jg
and
fidivrs
dec
jae
incl
adc
push
mov
mov
jmp
sub
pushf
orl
xchg
push
cmp
les
pop
mov
es
je
getsec
lahf
and
cmp
decl
jbe
int
js
mov
and
loope
mov
jg
repz
xor
pop
xor
push
fwait
mov
outsb
fs
mov
xchg
adc
mov
and
aaa
mov
xor
ss
sbb
fsts
push
icebp
dec
insb
loopne
xor
sbb
mov
add
add
dec
add
mov
sbb
jecxz
jecxz
cmp
jg
add
fadds
loope
mov
lds
in
dec
lea
lret
pop
and
xchg
mov
sbb
incb
adc
int3
ret
adc
lock
movsb
jns
leave
xchg
std
cmp
mov
jmp
or
orb
scas
inc
roll
add
mov
jbe
xor
popl
lea
les
cmp
stc
mov
mov
pushf
imul
pusha
aas
mov
jp
sarb
btc
inc
ljmp
mov
add
mov
repnz
or
pop
add
fisttpll
cmp
inc
or
popf
add
in
xor
popa
push
sub
cld
or
int
jl
mov
rcrb
cmc
lods
sahf
loop
add
incb
loop
xchg
xchg
push
rdtsc
int3
pop
mov
vpsubq
scas
add
pop
ret
xor
mov
cmp
pop
aaa
stc
fiadds
int
fwait
mov
mov
dec
clc
xchg
jnp
mov
cmp
andl
leave
mov
dec
and
sbb
or
xlat
out
mov
out
cmc
lods
lahf
or
adc
inc
pop
cld
xor
xor
sub
xchg
out
cs
mov
arpl
sahf
mov
jmp
jp
xlat
pusha
lds
call
pop
or
mov
cmc
stos
aam
pop
ret
dec
repnz
fbstp
adc
push
cmp
mov
rorb
cmp
sbb
cmp
lock
testb
pop
and
and
inc
out
dec
xchg
cmpsl
xor
sub
lock
aam
xchg
mov
sbb
out
out
sub
pop
in
push
jns
clc
repz
mov
leave
mov
jle
pusha
pop
push
nop
push
jb
jl
mov
insl
fidivrs
jne
and
or
push
rol
jle
js
pop
xor
dec
mov
xchg
ljmp
inc
fsubp
jbe
aam
idivl
addr16
ret
mov
repnz
daa
pop
push
out
in
or
mov
orl
daa
xor
fisttps
jne
mov
insl
dec
adcl
clc
sbb
dec
adc
ret
movsb
inc
ficoml
shr
pop
jbe
addps
sbb
sub
lret
loope
mov
cmpsl
mov
jno
dec
inc
fstps
fisubl
lcall
push
fdiv
xchg
arpl
pop
xor
jl
push
loope
inc
xlat
loop
repz
jl
dec
addr16
jo
dec
lock
cmpsl
fisubs
cli
cmp
ds
hlt
cltd
sub
int3
cli
pop
mov
call
sti
add
dec
jecxz
mov
pushw
push
ss
int
ficompl
loope
das
popa
cmc
xchg
je
fcompl
sbb
inc
insb
enter
jle
xchg
loopne
and
iret
andb
add
nop
lea
out
sbb
lods
mov
xchg
push
cmp
jp
pushf
mov
inc
and
lea
fstl
out
xor
sbb
inc
mov
icebp
jae
stos
stc
fwait
mov
or
cmp
lcall
rorl
out
aad
sbb
inc
and
pop
pop
cmpsl
sub
jae
inc
aad
out
sbb
cmp
je
test
clc
push
mov
sbb
outsl
and
gs
mov
stc
js
mov
cmpsl
int3
cmp
push
ret
mov
test
mov
add
stos
out
inc
adc
push
push
mov
xor
ljmp
lods
inc
cmpsb
xchg
xchg
xchg
in
fimuls
or
or
push
mov
scas
cltd
pop
popa
loope
aaa
mov
push
lcall
outsb
jnp
jmp
fstpt
inc
ljmp
sbb
jno
push
ds
ret
lcall
pushf
pop
mov
dec
xchg
cmpsl
insb
mov
inc
inc
movsl
in
mov
je
xchg
cmpsb
add
sbb
pop
push
aad
jmp
bnd
cltd
loop
add
sub
jle
aaa
inc
inc
mov
xchg
inc
sub
sbb
mov
pop
mov
lahf
cmpsl
mov
add
shlb
sahf
orl
movsb
lods
sbb
out
outsl
lret
jno
je
and
std
add
mov
push
call
lods
aam
dec
push
scas
in
jb
test
lahf
fs
popf
inc
jnp
aas
and
xlat
fucomi
nop
inc
shrl
scas
pusha
aas
and
addr16
lcall
call
stos
in
xchg
jae
sub
jecxz
jbe
pop
mov
mov
aad
lcall
push
in
adcl
or
outsb
pop
or
mov
cltd
int3
dec
fucomip
addb
inc
pop
xor
fsts
les
jmp
loope
push
sub
ret
enter
dec
mov
mov
pusha
cltd
inc
and
enter
in
rcr
dec
mov
inc
sub
cmp
xchg
das
cmp
mov
xorl
fsubs
lock
pop
leave
mov
mov
or
dec
ljmp
loop
pop
dec
mov
jmp
dec
cmp
sub
test
adc
test
lea
cs
pop
pop
rcl
pop
or
fidivs
jns
outsl
fiaddl
mov
or
adc
mov
call
loope
pop
call
loope
and
jecxz
stc
adc
mov
lock
lock
loope
clc
mov
movsl
mov
mov
les
jo
adc
add
pop
setp
enter
sar
cs
fsubrl
pushf
and
lahf
js
pop
xchg
jmp
in
pusha
jmp
leavew
sbb
xchg
dec
decb
fdivs
lret
dec
outsl
cmpsb
pusha
outsb
cltd
jno
std
pop
fs
cwtl
mov
cwtl
jp
pop
sbb
fsubl
ja
jge
sub
cwtl
in
bound
pop
dec
xchg
inc
je
xchg
cmp
jnp
cmp
and
push
jno
hlt
xchg
mov
js
mov
push
push
and
outsl
fisttps
or
jle
cmp
imul
outsb
in
imul
out
pop
lret
xor
fwait
shrl
sbb
stos
sub
imul
cmp
mov
orb
stos
lahf
lds
or
xor
ja
hlt
xchg
xchg
jae
scas
bound
clc
das
mov
cli
ficomps
ret
sbb
xor
ret
jge
cltd
sbb
ret
pop
lock
and
sti
jecxz
sub
xchg
imul
mov
add
jp
mov
pop
inc
pop
mov
cmp
imul
jecxz
add
mov
adc
notl
sbb
faddl
adc
and
aaa
or
mov
sahf
into
std
inc
cmpb
lock
xor
ja
out
sub
push
jmp
vmovdqu
and
xchg
xchg
sbb
dec
insl
push
push
push
hlt
mov
xchg
jg
outsl
daa
nop
pop
pushw
hlt
adc
sahf
cs
xchg
mov
test
inc
sbb
sbb
fs
lret
mov
call
repz
lahf
test
xor
push
int3
movsl
sahf
into
and
outsb
xchg
test
jge
pop
cmp
adc
pop
add
sahf
int
jb
sbb
dec
add
pushf
outsl
mov
mov
sub
das
gs
mov
pusha
inc
jb
mov
movsl
sbb
adc
lret
repz
and
scas
in
adc
popa
mov
outsl
xchg
lock
jns
adc
bound
das
or
jns
lcall
cli
mov
mov
sub
roll
pop
test
stc
into
jb
adc
push
push
sarb
movsl
shrb
inc
js
dec
add
mov
ss
xor
xchg
sub
mov
and
dec
adc
ljmp
in
stos
out
popf
dec
call
aam
aad
nop
pop
jecxz
dec
repnz
sub
jle
stos
arpl
dec
sbb
ret
enter
pop
or
xchg
jns
pop
shrl
cld
pop
cmp
adc
cs
mov
ret
adc
inc
iret
mov
mov
or
arpl
js
fs
fsubl
daa
sub
sub
mov
dec
jecxz
scas
mov
cmp
mov
lods
adc
dec
lret
mov
fistps
insb
ss
movl
push
jle
in
in
leave
stos
jl
mov
out
sub
repnz
push
mov
lds
push
int
xchg
lods
cmp
in
repz
and
scas
push
gs
or
sbb
xchg
pop
cmp
jecxz
testl
aaa
adc
iret
sub
add
xchg
xor
cmpsb
cs
jp
mov
push
out
xor
sbb
add
xor
dec
lea
sub
lds
cmp
outsb
ds
lds
adc
xlat
push
mov
cmp
lret
inc
add
inc
push
pop
cmc
jns
lret
mov
sbb
and
test
jge
jne
sbb
jecxz
stos
mov
pop
bound
cmp
sub
xor
mov
and
sti
adc
xlat
push
add
mov
xchg
lret
add
dec
sti
mov
jmp
ja
cltd
inc
adc
or
loope
sub
repnz
lds
cmpb
mov
fistps
jl
xor
ficomps
sbb
mov
stc
stos
clc
hlt
push
cmpsl
xlat
mov
mov
test
or
mov
xor
push
sbb
cmp
fisttpll
push
push
xor
dec
xor
add
or
fists
cmpsl
inc
mov
dec
repz
icebp
in
sbb
loope
inc
cmp
enter
scas
add
and
incb
mov
xchg
mov
insb
fadd
mov
mov
push
aas
inc
js
sahf
dec
stos
adc
test
sarb
icebp
mov
bound
push
fcos
cmc
int3
mov
jbe
fnstcw
jg
push
mov
inc
and
insb
int3
push
add
cmp
sti
scas
adc
out
or
dec
jns
push
cs
mov
popa
inc
xchg
fisttps
or
cmp
pop
es
repz
and
pop
and
add
mov
fisttpl
xor
ret
inc
jecxz
adc
mov
int
loop
adcb
popf
pop
scas
or
xor
lret
cmp
adc
arpl
pop
popf
call
and
ds
push
scas
jle
inc
je
loop
push
mov
lock
ss
mov
jb
sub
mov
enter
sbb
or
adc
push
sbb
lcall
xchg
mov
cltd
xorl
sub
push
in
daa
iret
jecxz
sub
pop
es
enter
push
mov
and
mov
jbe
loope
add
xor
fidivrs
shl
jp
push
sarb
mov
push
inc
mov
pop
mov
inc
into
jg
dec
add
mov
push
pop
enter
gs
les
hlt
frstor
add
and
xchg
xchg
int
out
and
sbb
dec
xchg
int
sbb
mov
jne
jmp
push
mov
call
and
and
jmp
sbb
cmp
in
pop
das
shrb
sub
sbbl
adc
pusha
stc
lahf
jg
daa
fcomps
mov
leave
out
inc
push
inc
xor
xchg
popf
mov
aam
sahf
out
push
mov
xorl
sbb
int3
jbe
xchg
ret
jno
adc
and
jnp,pt
shlb
leave
pushw
orl
push
and
cmp
push
lahf
jmp
xor
jo
dec
push
lods
xchg
sbb
inc
shlb
pop
jl
mov
push
test
xor
mov
idivl
cmpl
or
cltd
mov
adc
out
pop
lods
xchg
popf
adcl
xlat
mov
pop
xor
mov
jp
cmp
idiv
xlat
xor
jmp
jbe
aam
jle
shrb
jne
inc
adc
inc
ret
ret
rcr
or
or
mov
aas
and
inc
stc
jle
loopne
sub
outsl
jbe
fwait
xor
rcl
add
xchg
adc
add
or
es
aaa
cmp
xor
outsl
inc
pop
adc
les
gs
pop
into
out
imul
clc
pop
sbb
lods
mov
jmp
cmpsl
mov
mov
jmp
mov
cmp
das
ljmp
push
mov
cmp
mov
inc
insb
loop
pop
add
stos
addb
test
pop
repz
je
cmp
testb
stc
push
cmpsl
push
testl
sub
mov
insb
mov
jl
push
sub
mov
cmp
es
or
lods
dec
lahf
cs
les
adc
pop
into
int3
xchg
lahf
mov
mov
cmpsl
add
adc
popf
pop
lods
jge
push
mov
cmp
imul
or
add
inc
sbb
pusha
addr16
lea
lret
in
popf
cmp
ret
rol
negb
inc
out
xor
adc
jl
imul
fimuls
je
aad
and
pop
jae
repnz
lea
insl
mov
stos
iret
cwtl
les
push
mov
dec
inc
in
xor
insl
arpl
inc
xchg
into
xchg
dec
xchg
dec
lret
xchg
fcoms
cmp
mov
mov
ret
call
cmp
mov
jbe
loopne
mov
aad
mov
sbb
mov
shll
test
jge
mov
loope
jbe
repz
fdivrs
faddl
jns
scas
std
mov
push
xchg
lcall
les
imul
test
add
adc
mov
push
mov
shll
fildl
mov
and
mov
mov
fmuls
pop
roll
mov
insl
mov
mov
test
lcall
and
lcall
loopne
and
add
aam
pop
xor
mov
int
push
adc
lea
xor
repnz
ds
adc
in
shl
int
insb
xchg
jb
lods
mov
xchg
sub
jge
xchg
xor
lret
dec
mov
jb
mov
in
adc
bound
xchg
xor
std
push
out
adc
push
js
fistpll
add
or
ret
mov
mov
push
nop
sar
cwtl
ljmp
cmp
mov
cmp
dec
arpl
cltd
int
jb
push
pop
mov
int
or
icebp
mov
stc
mov
mov
sahf
pusha
lcall
shll
ljmp
in
sbb
fwait
pop
test
or
ss
sar
lcall
pop
and
test
dec
push
test
rclb
pop
ret
mov
jae
mov
cs
movsl
jno
mov
aam
jge
sti
test
jle
xchg
sbb
cmp
lea
mov
or
nop
bswap
fnstenv
xchg
and
in
das
push
int3
in
sub
bnd
add
cs
nop
pop
divps
sub
cmp
leave
ficompl
jmp
jl
lds
dec
movsb
in
jae
arpl
jge
xchg
test
dec
incl
jnp
mull
cltd
mov
or
je
popa
xor
int
test
inc
pop
ljmp
jp
lret
xchg
loope
mov
jb
lods
xchg
jae
xchg
xchg
scas
and
adcb
repz
adcl
stos
mov
inc
jg
inc
fdivrs
roll
mov
and
scas
or
adc
insl
sbb
mov
test
stos
or
sub
and
jge
sub
xchg
sbb
xor
sub
inc
xchg
jle
mov
and
ret
push
push
rolb
sbb
jecxz
sti
repz
jmp
int
clc
jne
cmpsl
sub
daa
into
nop
mov
ret
pop
bound
sub
mov
push
inc
lahf
cmp
sub
sub
pop
pop
mov
sbb
push
ljmp
sbb
mov
dec
or
push
rclb
mov
pusha
subl
test
mov
dec
pop
mov
pop
sahf
jle
out
xchg
add
mov
and
push
jne
cmp
icebp
pusha
stos
ret
rol
shl
gs
stc
xor
les
fbstp
lret
insl
out
icebp
stos
pop
sub
push
xchg
jno
je
lret
cmp
push
lds
push
scas
sbb
loope
mov
pop
inc
sub
mov
rdmsr
jbe
jg
bound
lock
leave
push
xor
xor
sub
sbb
pop
pop
sti
pop
push
sub
loopne
dec
lock
aaa
jp
jl
fisttpll
sarb
test
imul
lahf
mov
lret
movsl
dec
mov
lret
decl
xchg
out
mov
shll
cltd
lds
pushf
test
ds
movsl
pop
movb
data16
aas
mov
jno
and
inc
jb
xchg
aas
mov
xlat
inc
sbb
int
jmp
dec
out
das
jle
xchg
fisttpl
cs
sub
fistl
jl
imul
mov
dec
in
lds
lahf
xchg
dec
in
sbb
loopne
pop
jno
jmp
or
ret
ds
mov
adc
clc
icebp
sbb
pop
push
jge
mov
aaa
mov
cmp
shlb
daa
mov
inc
and
mov
xchg
push
and
es
pop
loopne
imul
cmp
jns
shrb
lret
lret
in
pop
xor
lods
xchg
pop
xchg
pop
push
sbb
inc
cli
icebp
xchg
push
mov
lods
mov
mov
rcr
push
inc
xlat
in
sbb
inc
fcomp
and
mov
ret
out
xor
inc
dec
movsb
clc
jg
cmp
es
xchg
cmpsl
movl
mov
fcomps
sbb
jae
aad
cmpsb
mov
enter
enter
lret
mov
and
mov
std
push
fcomps
mov
pop
xchg
ja
jnp
loop
jmp
arpl
inc
mov
cmpsb
xlat
jl
in
fistpl
movsb
jns
dec
rep
xor
fwait
adc
fsubl
xor
scas
adc
sbb
jg
xchg
push
pop
lea
cmp
jns
or
shl
imul
pusha
pop
ja
cmp
out
fwait
xchg
inc
dec
mov
pop
test
outsl
movsl
frstor
mov
push
shll
out
loop
incb
movsl
gs
repz
cmp
adc
add
test
xor
in
or
push
leave
je
out
lea
sbb
mov
scas
cs
inc
test
cwtl
andb
dec
dec
xchg
repz
mov
push
in
xchg
pop
notl
callw
add
or
scas
in
fs
pop
add
mov
inc
jo
sub
adc
dec
pop
cmp
mov
mov
cli
adc
into
test
loope
jne
mov
in
cltd
lods
insl
imul
xchg
int
mov
pand
aad
pushf
push
dec
test
in
and
adc
and
outsl
or
xorl
lahf
pop
lea
xchg
shl
in
push
pop
and
roll
clc
call
push
mov
xchg
pop
add
subl
int3
xchg
rcll
fistps
addl
sub
sub
shlb
pushf
outsl
sbb
dec
pusha
cmp
insl
out
imul
enter
pusha
dec
loope
jl
and
icebp
arpl
stos
int
xchg
ljmp
push
ficoms
addr16
dec
sbb
cmp
scas
test
cmp
mov
pusha
dec
js
and
and
daa
sub
test
cmp
cld
jae
rcll
fstpl
stos
jp
sub
mov
mov
ljmp
std
cwtl
leave
stc
dec
loopne
mov
in
dec
sbb
pop
or
shlb
pop
mov
cmpsb
push
icebp
fwait
into
jb
arpl
and
pop
xor
out
dec
out
int
mov
aaa
cmp
and
mov
pop
imul
add
les
fdivrl
aam
mov
sbb
inc
addb
jmp
or
pop
or
cld
mov
repnz
sub
movsb
jb
das
jns
dec
adc
call
aas
das
sbb
lock
jge
sub
mov
orb
int
lods
inc
adc
repz
sub
dec
mov
in
xchg
pop
imul
jg
pop
xor
mov
fstp
dec
mov
cmovbe
daa
dec
ds
sbb
push
mov
lods
xor
mov
cmp
add
pop
sub
jmp
bswap
aaa
and
or
lea
mov
icebp
lcall
lock
iret
andb
hlt
dec
xor
dec
stos
jnp
inc
jecxz
mov
cmp
loop
adc
cmp
mov
repz
stos
leave
inc
iret
imul
scas
mov
movsl
adc
shrb
push
jge
and
inc
stos
push
cwtl
push
icebp
lret
jnp
test
int3
cmp
and
mov
shrl
stc
mov
cmc
push
aam
xor
subb
int
xchg
ret
cli
sti
scas
lret
mov
mov
xlat
jle
dec
jae
movsl
mov
mov
sbb
or
mov
sub
push
inc
call
je
push
xor
sub
xchg
or
sbb
adc
jp
pop
rcrb
jl
sarb
sbb
lret
pop
jne
ds
call
mov
rcr
aam
int3
bound
stos
sti
xor
add
add
fidivl
iret
cltd
stos
gs
shlb
and
test
xor
cvttps2pi
lret
in
and
xchg
shlb
outsb
stc
dec
mov
and
dec
sbbl
sub
push
faddp
and
and
jns
dec
sbb
or
add
dec
pop
clc
mov
inc
jp
add
aam
int3
xor
cmpsl
loopne
mov
gs
iret
stos
addb
cmp
icebp
fwait
mov
push
sub
cmp
cmp
push
ret
pushf
dec
aaa
bound
lods
and
lock
mov
dec
in
or
cmp
cmc
push
mov
mov
xor
sub
cmp
ljmp
mov
bound
pop
js
adc
in
dec
bound
in
insb
aam
jno
and
xchg
adc
sbb
and
mov
and
ljmp
lcall
das
sub
cmpsl
push
jnp
jl
fcmovbe
xor
pop
ds
sub
cmp
pop
cmp
lahf
xchg
sub
pop
cmp
sbb
or
pop
xchg
xor
int3
push
mov
jns
hlt
cwtl
or
xor
or
es
in
shr
adc
pop
dec
mov
fcmove
popa
or
test
sbb
sahf
not
ja
add
mov
push
push
dec
cmpsb
sub
loop
jmp
lahf
pusha
cmp
ljmp
push
xchg
mov
in
and
sub
pusha
mov
shll
push
pop
pop
push
or
lds
xor
ja
lahf
shlb
or
test
jmp
mov
inc
sti
adc
mov
mov
or
lds
orb
xchg
aam
xlat
out
push
mov
inc
stos
test
pop
inc
ljmp
push
sahf
aaa
lcall
push
mov
and
fldenv
dec
push
inc
addb
lods
in
pop
and
dec
inc
loop
mov
adc
insb
mov
arpl
mov
or
xor
lods
sbb
inc
lcall
push
fistpl
push
aam
add
cmp
pop
out
or
xchg
push
xchg
push
and
jle
push
hlt
and
mov
add
pop
mov
adc
enter
test
dec
mov
es
out
cmp
scas
loop
and
or
fs
call
inc
sub
ret
mov
jne
sub
push
test
and
adc
and
dec
mov
movsb
or
pushf
push
mov
mov
push
stos
mov
cmc
in
or
dec
call
in
aaa
dec
lea
dec
mov
add
into
sahf
subl
xchg
sbb
cmp
stc
push
in
aam
les
movsl
cmpsl
movsb
inc
clc
fstl
shll
add
inc
iret
dec
mov
cmpl
in
push
pusha
fisttps
mov
mov
or
sub
sti
xor
xchg
push
fdivr
dec
shll
pop
dec
mov
loop
into
sarl
popa
xchg
loopne
mov
loope
dec
push
sbb
adc
in
mov
mov
imul
mov
out
jmp
xor
xor
jmp
xorb
push
clc
sbb
add
lods
sahf
inc
ljmp
leave
fwait
aas
mov
and
fmul
mov
xchg
rcll
ds
fucomp
mov
add
mov
or
fdiv
and
mov
aad
sarl
or
xor
sub
xchg
xor
outsb
movsl
adc
push
or
mov
rcl
dec
out
jbe
mov
test
inc
out
pop
icebp
xor
call
or
sti
push
mov
xchg
ret
sub
aam
int
xchg
inc
sbb
hlt
les
mov
js
add
mov
push
push
dec
ficompl
xchg
in
lods
cltd
int3
cmp
lods
stos
sub
sub
inc
pop
inc
mov
outsl
mov
inc
pusha
adc
jp
cwtl
dec
gs
xchg
bound
cmp
mov
into
fbstp
hlt
sub
pand
sub
mov
dec
int
mov
les
out
and
mov
enter
xchg
cmp
pop
popa
inc
fisubs
cwtl
test
dec
mov
xchg
popf
pop
sub
jge
lods
std
add
repnz
jne
pop
dec
jbe
and
idivl
movsb
in
mov
xchg
sub
imul
mov
xor
filds
jmp
insl
sub
call
sbb
or
out
pop
outsb
xor
clc
cmpl
xor
mov
scas
scas
addb
cmp
arpl
negb
addr16
call
popa
and
jne
lock
lahf
test
or
outsl
mov
xor
inc
mov
push
scas
mov
mov
je
dec
aam
dec
test
cmp
insl
sahf
sbb
xchg
imul
out
es
repz
pusha
mov
mov
pop
lock
outsl
shll
cmp
dec
leave
cmp
jge
jmp
rcr
mov
cwtl
dec
push
and
mov
scas
xchg
push
inc
cmp
inc
and
mov
fstpl
notl
scas
scas
xor
inc
jge
jb
into
dec
pop
outsb
xchg
dec
lea
and
fnstcw
mov
cld
inc
and
imul
loop
jg
idivl
xor
jno
sub
fsubl
das
and
fadds
or
inc
decb
sub
pop
xchg
mov
lods
xor
xlat
adc
sub
adc
cld
sbb
adc
cmpb
mov
clc
lret
jmp
idivl
xor
xchg
clc
pop
sbb
jae
push
iret
sub
xchg
and
ljmp
jg
xchg
roll
sub
stc
and
into
popa
or
mov
mov
cmp
popf
xchg
inc
and
inc
inc
jecxz
movsl
lods
dec
sbb
push
hlt
mov
sub
mov
push
xor
test
xor
mov
push
sbb
add
cvttps2pi
pop
iret
cmpl
aad
mov
or
mov
and
jae
cmp
rcl
repz
clc
frstor
mov
sbb
mov
push
outsb
outsb
mov
push
xchg
aas
and
mov
neg
mov
repnz
scas
mov
pop
pushf
repnz
push
insl
scas
shl
cld
sub
sub
jmp
bound
dec
test
mov
ror
pop
scas
push
test
sbb
call
incb
std
hlt
ljmp
add
pop
lcall
outsl
inc
insl
popl
jge
imul
cwtl
xchg
dec
repz
inc
pop
pop
rolb
pop
cmp
cmp
fisubl
out
lods
cmpsb
dec
hlt
jo
jle
ja
pop
cmc
sub
ljmp
mov
xor
sbb
xchg
jmp
sti
pop
dec
bound
gs
mov
fcoms
sahf
aad
std
add
mov
xor
dec
out
fistpll
mov
mov
or
mov
xor
inc
pop
sbb
mov
ss
mov
andl
shll
mov
cmp
xchg
jns
cltd
jne
js
and
push
dec
loop
nop
adc
xchg
cmp
aaa
dec
mov
ret
mov
jne
pop
imul
dec
inc
cmpsb
cmp
scas
cmpsb
push
mov
mov
push
pop
dec
xor
sub
pop
out
imul
and
push
aas
push
cwtl
add
test
push
fdivrl
sub
lods
addb
in
dec
addl
pop
cmp
into
push
shlb
mov
cmp
mov
sbbb
jae
pop
push
aad
mov
push
lds
aaa
dec
repz
or
push
push
fdivrs
add
mov
lds
addr16
or
int3
lret
dec
pop
scas
lahf
mov
popa
pop
sbb
cmp
sub
js
sub
sbb
jo
pop
sub
fsubrs
adc
jno
jbe
test
pop
popf
jb
hlt
sbb
test
jne
mov
popa
mov
sar
rorl
inc
inc
mov
or
shlb
std
shll
dec
sub
mov
daa
cmp
test
gs
pop
cmpsb
mov
mov
movsl
dec
cs
lahf
std
cwtl
push
jp
int3
push
loope
mov
in
pop
push
stc
or
add
pop
inc
sub
cwtl
std
sub
pop
or
push
pop
mov
sbb
in
jp
pop
pop
jae
mov
push
mov
jle
xchg
movsl
sahf
je
into
test
pop
push
adc
pop
arpl
out
fidivl
iret
mov
dec
inc
cwtl
in
data16
add
into
mov
jl
sub
push
insb
fwait
sub
jb
out
dec
mov
adc
ds
mov
jle
push
mov
dec
dec
ljmp
lods
sahf
popa
cmp
dec
leave
mov
jle
lcall
cmp
add
les
mov
sub
pop
lahf
div
inc
inc
nop
sbb
cmp
mov
es
addb
xchg
adc
and
mov
loop
dec
lahf
sbb
ja
rcrl
mov
nop
lret
pop
add
inc
mov
popf
jb
mov
cld
adc
movsb
stos
mov
loopne
jp
loop
or
or
fcoml
lahf
jbe
adc
cwtl
fdivrs
orb
pop
or
ds
lcall
std
push
test
cld
xchg
and
mov
loop
mov
pushf
or
mov
sti
test
mov
push
and
push
push
xchg
mov
or
sarb
adc
lahf
insl
sbb
jle
in
mov
cmp
mov
movsb
jl
jge
arpl
rcr
inc
push
xchg
ret
xchg
and
sbb
mov
add
scas
lahf
data16
sub
fildl
xor
jmp
mov
and
outsb
popa
xor
inc
test
outsb
pusha
int3
mov
cld
cmp
shll
cmc
pop
decb
mov
sbb
inc
addr16
lock
testb
jp
cmp
insb
fidivs
into
mov
movsl
inc
dec
inc
imul
test
and
cltd
and
lock
outsl
aas
jl
mov
into
jecxz
add
mov
cli
not
outsl
mov
fists
xchg
cmpsb
xchg
imul
es
xor
mov
sahf
jmp
xchg
ret
add
push
jbe
jne
mov
inc
pop
pop
daa
mov
adc
sub
imul
xor
shll
ret
push
pop
in
andb
sbb
cwtl
hlt
rcr
popa
imul
aas
add
popf
jnp
lods
enter
adc
fs
dec
test
and
cwtl
cmp
mov
inc
mulb
fldt
lock
mov
add
js
mov
jae
aam
cmp
adc
lret
movsl
mov
sarl
jge
scas
inc
dec
popa
xchg
jb
jae
add
lahf
pusha
adc
sahf
out
and
dec
or
mov
into
mov
mov
adc
push
or
ret
scas
mov
mov
and
and
rcrl
out
cld
mov
aas
lea
fldcw
push
mov
mov
js
pop
decb
loope
jp
jns
int3
loop
adc
into
nop
sbb
dec
divl
scas
jmp
sbb
scas
mov
clc
dec
std
or
mov
mov
icebp
mov
pop
mov
ret
loop
or
mov
cmp
sbb
fstpt
cmc
mov
arpl
mov
call
xor
sub
mov
xchg
out
xchg
ret
es
jb
fidivs
jne
mov
pop
add
ret
inc
push
imul
dec
pop
insb
pop
sbb
lahf
mov
jecxz
stos
outsb
cmp
cltd
mov
lods
cmp
out
mov
push
cmp
xchg
push
movsb
ljmp
in
push
or
sub
pop
scas
scas
lock
stc
lock
or
roll
adc
adc
inc
sbb
movl
add
dec
lods
sub
cmp
mov
inc
cmpsl
mov
js
repnz
adc
lock
mov
xor
adc
sbb
int
mov
xchg
loop
adc
scas
movsl
lock
jne
out
mov
out
mov
fsubrp
ret
neg
xchg
cmp
sbb
mov
sbb
cmp
pop
aaa
sub
and
int3
add
and
mov
fisubl
dec
cmp
cmpsl
je
inc
mov
fwait
iret
imul
or
add
dec
mov
aas
lods
pop
add
mov
xchg
int3
jle
mov
mov
popa
cmp
aad
cli
fdivs
enter
inc
cwtl
es
xchg
jge
sarl
popa
inc
cmp
sahf
ffree
push
pop
fsubrl
call
incb
push
adc
inc
repnz
add
scas
fldenv
ret
push
or
mov
pop
xchg
xor
pop
push
hlt
mov
rcrl
data16
inc
je
outsl
shr
pop
sar
enter
inc
adc
in
sti
nop
jecxz
test
xchg
jmp
into
dec
decb
push
lock
mov
call
ja
jp
cmpb
add
dec
call
jge
xchg
mov
push
inc
pop
int3
ficompl
ficomps
sti
ja
push
nop
add
inc
in
dec
stos
scas
jns
jae
int3
jmp
sbb
mov
shl
xchg
xor
push
packsswb
lods
pop
ror
fwait
pop
add
daa
xchg
dec
push
movsb
add
fdiv
xor
pop
or
add
or
add
cld
aam
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
and
clc
testb
xor
push
add
add
add
add
add
add
add
