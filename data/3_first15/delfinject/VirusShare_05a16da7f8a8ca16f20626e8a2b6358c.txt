mov
push
pushl
mov
xor
mov
inc
pop
dec
outsl
ja
fs
xor
push
add
or
inc
enter
pop
shll
sub
lret
pusha
sahf
in
subl
and
inc
jle
pop
xchg
mov
std
imul
mov
pusha
popa
mov
cmp
jno
les
inc
and
rorb
push
xchg
je
pop
or
icebp
xor
cmp
fsubrs
adc
aad
aam
cwtl
pop
pop
dec
int
into
loope
test
cmpsl
jns
mov
inc
sub
loop
int3
out
pushf
dec
outsl
popa
pop
arpl
or
or
and
and
push
fldl
sbb
stc
fistpll
mov
cmp
mov
mov
lahf
stc
call
stc
into
sub
cmpsl
mov
sub
addr16
mov
xor
dec
xchg
repz
xchg
divl
dec
icebp
xchg
add
add
ds
aaa
add
stc
pop
pusha
int
or
shll
popa
and
dec
and
xor
pop
sbb
dec
lret
add
es
sbb
fs
mov
xchg
mov
inc
outsb
lcall
sbb
in
jns
inc
mov
addb
jnp
imul
int
addb
push
outsb
adc
adcb
sub
popf
repnz
pusha
mov
jo
pop
mov
fisubrs
out
or
popf
pop
test
test
push
sbb
jne
xlat
xor
lock
dec
int3
mov
push
testl
je
rolb
rorb
dec
dec
cmovbe
mov
jns
inc
push
aaa
push
jmp
pop
enter
sar
cmp
xor
mov
mov
sarl
pop
loope
xchg
mov
mov
xchg
nop
push
sbbb
ret
jle
inc
jb
or
pop
out
sti
dec
mov
cli
sarl
into
dec
bound
lods
scas
xchg
das
lret
cs
ja
pop
mov
fbld
xchg
inc
adcb
push
adc
imul
push
fistpll
jnp
dec
scas
leave
shll
cmp
sub
dec
cmpsb
ret
push
cmpsb
add
fidivrs
adc
xlat
fstpt
repz
aam
xor
aam
pop
shrb
fwait
lret
jno
push
or
xor
repnz
dec
pop
pop
dec
cmp
test
aas
movsl
imul
add
jmp
mov
je
inc
inc
jo
fildll
pop
pop
pusha
inc
xlat
cmp
je
sarl
mov
sub
dec
xchg
dec
cmp
jge
orb
dec
punpcklbw
mov
sbb
gs
loopne
in
hlt
nop
arpl
rcrl
lcall
outsl
call
adc
mov
sbb
adc
sub
adc
xchg
out
or
fwait
das
push
push
pop
outsl
pop
je
pop
xlat
and
pop
jo
rclb
cmp
shrb
mov
jmp
mov
jg
insb
sbb
mov
decl
or
inc
pusha
lea
aaa
cs
jp
fwait
out
mov
xchg
ds
in
gs
cmpsl
mov
xor
cmp
cmpsb
xchg
aam
imul
daa
dec
movsl
daa
inc
pop
jmp
jmp
cmpsl
sbbl
jb
add
in
xchg
xor
and
jns
jg
lret
lret
movsb
mov
and
leave
mov
mov
test
rolb
xor
test
jmp
mov
sub
fs
inc
sub
mov
fildl
xchg
xchg
push
into
dec
push
cmp
or
or
cwtl
movsb
add
scas
gs
or
insl
pop
xor
mov
addr16
push
adc
sub
xchg
dec
jmp
and
mov
mulb
rolb
test
mov
outsb
fcoml
fldpi
inc
clc
lock
gs
fildll
ds
fisttpl
popa
cmpl
mov
sbb
addr16
add
sub
bound
jle
icebp
jne
lret
adc
mov
iret
pop
sub
pop
and
clc
adc
fstpt
mov
fidivl
inc
jl
push
dec
sub
and
jmp
mov
in
daa
jle
outsb
push
rcll
dec
inc
fadds
hlt
mov
add
jns
lcall
push
aas
out
and
and
cmc
fisttpll
pushf
mov
gs
int3
adc
jmp
xor
mov
adc
push
fwait
out
mov
mov
mul
or
out
in
pop
push
add
push
fimuls
out
push
and
add
xchg
negl
stos
loope
or
cmpsb
or
in
dec
out
gs
test
cltd
dec
ret
pop
in
cmp
test
dec
cmc
ficoml
cs
sub
movsl
pusha
sub
test
inc
scas
dec
in
mov
xor
jne
lock
sub
or
loope
ret
or
sub
addb
jns
push
inc
xor
sbb
mov
leave
decl
sbb
pop
insb
lock
imul
adc
movsb
fimuls
xchg
cmp
test
inc
mov
loop
andl
dec
dec
ljmp
dec
xchg
sbb
les
data16
mov
push
mov
jl
arpl
pop
int
lds
into
test
sub
sbb
jbe
sub
leave
hlt
add
and
lea
jp
daa
lahf
mov
jne
or
popf
push
in
mov
and
scas
sub
lods
sbb
fucom
pushf
dec
outsb
xchg
fimull
gs
inc
sub
bound
dec
add
push
stos
or
fcoml
add
sub
pminub
leave
inc
fdivp
adc
lods
fdivrl
ficoml
jecxz
mov
sbb
mov
sub
add
dec
dec
dec
stos
xor
stc
jbe
loopne
cmp
fistpl
xchg
lret
cmp
sbbb
jo
sti
pop
cltd
popf
mov
pop
xchg
divb
aaa
sub
adc
ret
sub
lcall
adc
inc
dec
sub
ja
mov
add
xlat
outsl
insb
push
mov
mov
pop
adc
jp
inc
mov
out
arpl
and
pop
fistl
cltd
fistpl
push
or
mov
sbb
lahf
dec
into
xchg
jp
out
out
push
inc
lea
sub
mov
movsb
cmp
adc
dec
test
iret
add
stos
jge
jp
push
mov
stos
mov
add
or
cmp
pop
out
int
hlt
arpl
inc
fcmovbe
mov
sub
mov
dec
repnz
add
sti
push
pop
mov
movsl
in
fs
sub
lret
loop
andl
mov
sub
fdivl
and
push
or
mov
imul
fwait
add
arpl
inc
xchg
adc
imul
leave
dec
cmp
loope
push
jp
push
push
aaa
sub
dec
dec
loop
or
gs
xchg
xchg
or
xchg
test
adc
push
dec
jae
or
inc
sahf
jb
and
scas
jb
mov
test
jg
mov
add
xor
jns
mov
cmc
sub
sbb
lgs
add
push
pop
pushf
dec
cmp
add
dec
push
xchg
add
inc
xor
jns
mov
jne
and
addr16
mov
or
popf
add
hlt
cli
incb
das
jns
leave
inc
fwait
pop
movsb
sub
xchg
in
pushf
into
inc
xchg
lcall
xlat
js
repz
and
xor
adc
dec
mov
fistpll
stc
movsb
es
mov
mov
or
jmp
test
test
dec
ret
push
sbb
loope
adc
fwait
lcall
adc
cmp
enter
pop
imul
pop
stos
fistl
cmpsb
fisttpll
push
sbb
pusha
and
inc
push
jecxz
and
hlt
pushf
sahf
les
jo
add
in
ficoml
movsb
les
jb
inc
push
sti
popf
jp
test
xchg
inc
and
test
lahf
insl
pop
jecxz
imul
xor
dec
and
scas
mov
xlat
fimull
mov
jp
inc
fists
hlt
dec
jmp
lahf
test
dec
or
mov
fistl
xor
cltd
fisubrl
test
imul
jge
push
xor
insb
jo
arpl
js
das
cmp
xchg
jno
iret
pop
and
jl
mov
repz
pop
sbb
sahf
js
addb
lods
jno
jo
add
mov
movsb
mov
rcrl
or
lret
jne
lcall
out
insb
cmpsb
adc
loopne
leave
sarl
sub
data16
mov
aas
outsl
mov
pop
mov
pop
lret
pop
fcmovu
cmp
lret
test
push
lods
test
sbb
popa
inc
and
lods
mov
outsb
or
push
sub
sbb
cmovp
cmp
xchg
mov
fistl
push
jo
inc
fimuls
dec
inc
mov
sub
mov
in
negb
stos
sbb
sub
vpmacssww
cmp
mov
out
js
outsb
xchg
repnz
mov
push
cs
clc
cmc
cltd
push
mov
fiadds
scas
pop
shll
adc
sbbl
and
xchg
xchg
outsl
push
ret
clc
inc
inc
sbb
or
sbb
and
jae
jno
and
mov
int
sub
jp
test
bound
push
jl
loop
xor
sbb
pop
popa
std
andl
pushf
pop
push
xchg
mov
sub
mov
mov
jb
cmp
pop
adc
sub
int3
pop
mov
push
dec
jae
cmp
pop
mov
cmc
mov
fnstcw
dec
sti
lods
idivl
popa
test
sub
loope
and
jge
repz
arpl
testb
out
arpl
pop
int3
cli
cmpsl
cltd
cmp
aam
inc
add
mov
inc
push
jecxz
mov
and
addr16
dec
ds
mov
stos
xchg
sub
sbb
sbb
and
jp
inc
jno
dec
inc
pusha
fsubl
dec
dec
push
xor
jno
repz
rolb
shl
gs
clc
sub
popf
js
add
push
cli
sub
or
mov
jle
or
divl
mov
pop
cmp
mov
sbb
ljmp
shlb
std
lock
push
and
pop
sub
or
mov
mov
rcrb
pop
or
sbbl
pop
rcr
dec
sub
repz
jmp
push
pop
jp
insl
sarl
pop
mov
jmp
pop
push
loop
adc
out
imulb
nop
mov
push
or
jl
sub
cmpl
ret
sbb
add
test
jnp
dec
xor
mov
icebp
dec
pop
iret
inc
push
mov
xor
outsb
lahf
ret
xchg
insb
cwtl
sar
dec
sub
out
cmp
daa
dec
imul
pop
mov
aas
jecxz
int3
insl
sub
pop
mov
mov
pop
push
insb
push
sbb
cs
outsb
or
inc
lock
sub
nop
xor
gs
popf
sub
or
sub
js
cmp
lcall
movsb
and
jmp
and
leave
out
call
fisubrl
and
push
inc
mov
mov
push
lods
push
icebp
lahf
pushf
jo
stc
rcrb
js
into
call
xchg
stos
js
dec
jp
push
imul
andl
imul
xchg
sti
fs
mov
push
jmp
rep
inc
mov
in
pop
xor
orb
stc
rorl
xchg
call
xor
and
lds
in
ljmp
std
ret
mov
and
mov
movsb
sti
out
jmp
aas
pushf
xchg
popf
add
rcrb
xchg
xchg
sub
jns
fwait
ret
jns
xchg
aaa
mov
lcall
scas
cs
fsubs
sarl
cmc
shrb
es
test
jge
xchg
or
dec
xchg
xchg
daa
bound
inc
inc
lea
pop
div
pop
push
insl
das
mov
mov
xchg
mov
xchg
stos
daa
cmp
in
mov
sbb
jo
mov
push
daa
jae
into
shlb
hlt
sbb
loopne
pop
add
xor
pusha
aam
hlt
pop
sub
push
jnp
js
movsl
xor
scas
jo
enter
cltd
stos
and
cs
mov
lret
mov
nop
cli
jle
sahf
jo
pop
push
cmpsl
sbb
mov
sub
test
out
xchg
subb
push
test
xlat
cld
mov
mov
sbb
ss
ds
xchg
sbb
mov
jno
outsb
adc
jge
xchg
mov
pop
sbb
push
fs
and
popa
lret
and
inc
gs
enter
ret
pop
adc
sar
test
xchg
lcall
fstps
nop
adc
shl
adc
pop
cmc
jle
fs
call
or
dec
pushf
cltd
jnp
sub
repnz
popf
mov
dec
and
xor
add
pop
out
sub
adc
movsl
clc
loope
ret
lahf
lock
movsl
stos
test
cmpsb
les
cmp
push
test
leave
dec
ljmp
in
pop
and
add
mov
mov
sub
into
lret
into
data16
sub
fwait
dec
dec
and
mov
mov
stc
sbb
dec
jg
gs
sbb
mov
push
mov
cmp
aad
jns
ss
sub
scas
or
jno
inc
push
adc
add
dec
sub
mov
mov
out
mov
adc
cmpsb
nop
lahf
xor
sbb
jge
ss
nop
pop
xchg
shr
lret
mov
cmp
mov
test
or
jle
add
bound
outsb
sub
jno
cmp
mov
test
sar
nop
hlt
ret
jno
repnz
popa
inc
arpl
subl
rcrb
add
cmp
movsl
dec
test
mov
push
fadd
mov
or
mov
or
xchg
sub
stos
ret
and
in
int3
inc
add
jb
aam
or
xlat
cmp
in
sbb
je
loope
dec
repz
js
mov
inc
adc
es
cmp
xchg
pusha
mov
notb
or
aad
mov
stc
and
sti
mov
dec
jle
scas
mov
fdiv
out
lea
loopne
scas
cwtl
test
cmp
dec
jne
or
dec
shl
scas
mov
mov
cmp
ljmp
inc
dec
jae
mov
sbb
enter
loope
pop
cli
and
aas
decb
or
jbe
test
pusha
cmp
ljmp
subb
xlat
push
mov
js
aam
pop
mov
push
testl
jmp
xor
les
inc
pop
je
push
iret
les
fsubl
push
sbb
mov
adc
fstp
push
test
insl
add
dec
sahf
mov
mov
fists
pop
jnp
xchg
fidivrs
cltd
add
pushf
addr16
push
loopne
xor
into
xor
or
cs
ljmp
xor
fdivl
jmp
ljmp
push
xor
jp
lahf
mov
mov
add
jne
push
adc
add
dec
push
pop
inc
int3
jnp
push
mov
fwait
adc
mov
jno
xor
xor
or
mov
loop
ret
jg
mov
daa
pop
push
sbb
xchg
lods
aas
mov
jne
adc
adcl
mov
ss
xor
xor
pop
xor
mov
testb
divb
adc
inc
mov
adc
xchg
icebp
mov
aaa
stos
in
lret
test
jne
mov
aad
mov
enter
ja
adc
sbb
shr
sub
mov
sbb
ljmp
push
mov
test
pop
xchg
aaa
adc
push
sbb
jno
pop
test
adc
sbb
pop
push
aas
fistpl
out
jbe
xor
mov
ljmp
test
inc
in
nop
lret
adc
mov
outsb
daa
stc
add
cmp
iret
loop
mov
jle
loope
das
cmp
cmpsl
xlat
loopne
push
mov
stc
cmp
movsl
out
or
fs
js
jb
outsb
xor
jp
insb
mov
mul
pop
inc
mov
add
call
fstl
dec
mov
subb
inc
inc
into
cmp
add
jp
pop
mov
lods
adcb
aam
cmc
pop
cli
sbb
ss
xchg
sub
pop
mov
sub
or
je
aaa
insl
in
push
sub
mov
xor
mov
out
adc
scas
xor
sub
ja,pt
cmp
verw
mov
and
jge
or
push
test
push
shl
addr16
adc
pop
js
stos
mov
add
add
mov
xor
cltd
pop
or
cld
mov
xchg
dec
stc
fidivrl
xchg
pop
pop
sub
das
xor
cmp
push
setp
sbb
arpl
lods
adc
cmp
shll
mov
and
scas
stc
repz
jle
subl
popf
into
shll
inc
adc
popa
mov
call
pop
push
jge
dec
sbb
gs
sbb
sahf
xor
and
call
mov
pop
out
jl
imul
jmp
cltd
inc
sub
lahf
andl
mov
aaa
mov
xchg
out
mov
fwait
and
andb
fsubs
es
and
jmp
xor
dec
or
dec
adc
dec
adc
es
leave
xchg
cmp
mov
xchg
je
push
cmp
pop
or
mov
loopne
jns
jo
je
mov
sbb
mov
repz
daa
test
dec
in
jno
pop
inc
flds
cwtl
xchg
xlat
adc
scas
adc
push
addb
push
sbb
fs
pushf
mov
test
sbb
sti
cltd
int
hlt
cwtl
pop
and
ja
testb
push
gs
jae
cmp
and
xchg
add
dec
sbb
ret
inc
insb
andl
sub
inc
outsl
mov
enter
cmp
insb
jecxz
out
insb
test
adc
jne
lahf
xchg
or
popf
push
out
mov
jg
adc
mov
addr16
iret
or
xlat
dec
pop
pop
sub
add
fwait
add
or
pop
mov
lret
inc
movsl
fwait
lret
jl
ficomps
enter
repnz
cli
lock
lds
adc
cmp
push
jnp
enter
das
loop
xor
cmp
cmpl
push
cmp
inc
stos
shr
lret
call
out
and
shlb
ret
xchg
jecxz
mov
into
adc
int
outsl
hlt
push
push
add
jge
lcall
jbe
mov
pushf
mov
pushf
push
sub
lea
outsl
or
mov
lods
pop
inc
push
cli
and
jns
js
xchg
in
cli
push
mov
cmp
notl
xlat
les
pop
sahf
add
lret
dec
rcl
and
aaa
or
pop
mov
mov
fadds
cmp
in
fstpt
push
fs
pop
inc
orl
mov
inc
dec
pushf
or
cld
test
in
jbe
mov
pop
mov
push
adc
mov
push
jle
orl
cltd
mov
loope
push
roll
repz
jmp
loop
jmp
imull
adc
in
lcall
fdivrs
scas
mov
mov
stc
inc
push
repz
mov
cmp
adc
mov
push
dec
add
fcmovnu
and
out
jb
and
repnz
pop
enter
es
mov
insb
push
ja
fidivrl
sarb
cltd
dec
cmp
fidivs
repnz
iret
and
cmp
push
sbb
sub
xchg
sbb
and
pop
aaa
ss
jno
add
xchg
hlt
sub
lcall
inc
int
dec
mov
js
xchg
jnp
fcomi
xchg
xor
cltd
dec
jno
jnp
jo
neg
mov
cmc
mov
enter
pop
test
sub
stos
nop
sbb
sub
xor
xchg
mov
std
jg
insl
into
and
decb
lret
fmul
or
sub
inc
popa
jecxz
fdivp
dec
xor
sub
sbb
ret
loopne
ljmp
or
push
adc
cmc
xchg
or
push
int
sub
rcrb
pushf
mov
push
mov
lret
push
insl
mov
or
stc
pop
sub
subb
dec
mov
pop
adc
or
push
ficoml
in
jl
cld
fidivrs
leave
addr16
jge
fucomi
pop
in
xchg
call
ss
adc
and
mov
pop
push
fidivs
aam
lret
jb
lea
pop
adc
rcll
les
pop
mov
aaa
add
xchg
dec
dec
dec
mov
or
jns
push
ret
out
jl
inc
xchg
mov
cmp
and
mov
sbb
jo
out
and
and
into
sbb
test
add
repnz
loope
mov
inc
pop
cmp
add
ds
xor
lret
shlb
shl
xor
scas
mov
push
xor
shrl
js
daa
test
add
xchg
test
xor
adc
lds
and
std
and
xor
insb
jl
insw
jl
out
dec
jmp
popf
insb
push
clc
add
push
cmpsl
dec
push
int
cmc
pop
mov
mov
lret
or
clc
mov
pop
add
lcall
mov
xchg
cltd
adc
cmc
pop
ljmp
mov
cmpl
loop
push
jge
mov
cmp
inc
sub
ljmp
adc
in
mov
pop
and
sub
sub
test
js
popf
lret
mov
ffree
repnz
rcrl
test
sbb
stc
pop
out
hlt
inc
mov
fimuls
mov
pop
dec
divb
adc
es
cmp
jo
xor
dec
cmpsl
jle
pushf
mov
pop
cwtl
jnp
stos
adc
pop
aam
lods
inc
push
mov
inc
fwait
jl
mov
insl
mov
inc
push
out
mov
fcoml
xchg
mov
inc
add
dec
adc
inc
pop
push
inc
adc
sbb
repnz
ret
outsb
dec
imul
cmpsb
jmp
lods
fstp
out
xchg
push
cmp
inc
lods
lret
push
xchg
les
xchg
cmp
leave
cmpsl
mov
mov
movsb
rolb
mov
add
inc
movsl
rcrl
jge
jle
mov
xchg
xor
add
fmuls
adc
sub
sbb
xchg
addr16
sbbl
mov
xchg
inc
adc
ss
cmp
pop
jg
xchg
dec
pusha
lret
aas
sub
add
adc
popa
dec
mov
movsl
test
addr16
pop
fcompl
mov
rcll
sbb
std
lcall
outsb
ret
mov
add
lods
loop
mov
xor
or
xchg
adc
sbb
inc
cmp
sahf
daa
ja
cmp
aaa
in
mov
xchg
xor
mov
push
subb
xchg
aas
mov
imul
push
xchg
mov
add
loopne
mov
pop
sbb
dec
fiaddl
mov
mov
cli
test
push
mov
nop
je
test
loop
in
dec
push
or
pop
push
icebp
sbb
loop
in
xchg
add
andb
out
sub
repz
loope
adc
add
das
in
xchg
fst
ds
lret
push
sbb
mov
stc
and
pop
sub
xor
sbb
fwait
in
aaa
pushf
cmp
les
ja
cmpsl
jo
push
push
aam
push
nop
ret
loop
jno
mov
in
mov
inc
int
sub
scas
mov
pop
mov
in
cmp
repnz
mov
sbb
jp
dec
mov
inc
xor
dec
sub
add
clc
inc
mov
int
ja
mov
sarl
cmpsb
jl
out
pop
jnp
dec
xorl
pop
push
jmp
orb
mov
push
xchg
sbb
addr16
dec
sbb
jnp
into
rclb
iret
negb
imul
xor
int3
inc
lcall
cmp
ss
cmp
mov
xorl
and
loope
add
xor
sahf
mov
adc
cs
mov
push
pop
push
in
jecxz
dec
pop
icebp
mov
insb
mov
sub
into
shll
lret
and
mov
sahf
pop
pop
pop
cmp
cmc
int
flds
xor
pop
jecxz
inc
add
mov
jae
icebp
mov
jge
scas
inc
add
ret
sub
add
push
adc
jmp
popf
sub
pop
loopne
test
lods
jp
popa
jno
add
and
and
in
test
gs
mov
pop
cmp
cmp
subb
jns
cmpsl
loopne
xchg
bound
lret
pop
scas
ds
jo
int3
push
pop
xor
inc
shr
js
dec
shlb
test
cmp
fcompl
mov
int3
out
push
mov
scas
dec
xchg
lahf
mov
or
mov
arpl
data16
push
sub
call
adc
jne
es
ret
mov
or
ds
hlt
rorl
sub
and
scas
mov
mov
push
imul
hlt
repz
adc
es
stos
push
sbb
popf
in
ror
push
mov
enter
in
pop
test
addb
repnz
inc
jmp
in
in
mov
xchg
sbb
lds
iret
sub
clc
popa
or
out
ret
insl
dec
mov
lea
test
lds
addl
adc
mov
mov
mov
repnz
jno
stos
fimull
or
mov
jg
test
pop
lods
xor
cmp
sbb
sbb
gs
cmpsb
mov
mov
scas
mov
jmp
rcll
inc
test
xor
or
call
push
imulb
scas
inc
inc
mov
cmp
gs
sbb
iret
les
or
repnz
push
clc
scas
push
cli
out
dec
cld
add
jecxz
lock
push
sub
lds
fnstenv
cmp
jp
xor
ljmp
mov
dec
mov
mov
sub
loopne
adc
imul
test
xchg
xor
je
cmpsb
mov
pop
xchg
fadds
aaa
clc
jns
cmp
dec
addr16
jl
mov
adc
or
imul
adc
mov
xchg
test
xchg
out
add
lret
test
mov
sub
xchg
jbe
rolb
in
xchg
pop
fwait
loopne
rclb
adc
mov
adc
cmp
bound
fnsave
sbb
lahf
add
shrb
daa
inc
inc
jl
mov
inc
pushf
aas
repnz
and
bound
mov
jge
xchg
mov
into
shlb
fldcw
or
or
fs
paddsb
sahf
mov
ret
sti
call
and
mov
push
pop
add
jge
sbb
je
movsl
mov
mov
cli
fwait
out
inc
call
cmp
sbb
call
cwtl
lods
in
dec
xchg
inc
pop
aaa
jecxz
push
or
mov
xor
pop
shrb
pushf
loope,pt
push
xchg
daa
add
clc
aam
stos
cmp
loop
movsl
sub
lcall
adc
stos
lods
fsts
shrb
mov
mov
fcoml
not
dec
push
aas
aam
iret
push
adc
jle
loope
pop
arpl
or
cltd
repnz
push
cld
stos
pop
pop
pop
jp
stc
mov
jae
into
inc
test
jno
cmpb
and
push
pop
cmpsl
xchg
arpl
movsl
dec
fwait
mov
mov
push
ja
and
mov
test
out
and
push
fs
cmp
lea
test
jmp
roll
cmp
test
cltd
pusha
out
lock
xor
mov
xchg
test
push
xchg
mov
nop
and
fdivl
aas
fsubl
cld
and
xchg
inc
lret
dec
scas
jg
stos
or
cmp
jnp
add
jge
int3
xchg
aam
pushf
jbe
lahf
xchg
cs
test
out
cwtl
xchg
cmp
aaa
test
adc
aam
mov
sbb
lods
push
cmp
and
in
lahf
aad
jo
mov
cmpsl
outsl
push
add
aam
int
cld
fcom
aas
test
cmp
fwait
subb
sbb
rcrl
add
cmpsb
or
out
sub
sub
je
xor
sub
mov
cmp
jo
mov
movsb
jl
inc
rcl
lods
stos
nop
cmp
pop
pop
push
loopne
gs
iret
sti
push
xrelease
cmp
lahf
cmp
pusha
inc
cli
jge
and
jp
nop
call
lock
or
or
pop
sub
push
test
cmpsb
sub
popa
fsubrs
pusha
mov
imul
push
mov
push
mov
das
movsbl
lcall
inc
xor
cmp
ror
sbb
fmull
xchg
clc
sub
xor
fistps
inc
pop
xchg
aas
mov
mov
jnp
sbb
cmpsl
mov
push
sti
jae
add
sub
insl
pop
inc
int
jle
add
mov
pop
cmp
adc
test
push
inc
push
stos
lods
xchg
xchg
push
fcmovnb
fucomip
add
lret
out
data16
mov
and
xchg
lret
xor
xchg
int3
xor
mov
jg
jno
cmp
dec
pushf
jge
mov
and
push
loope
push
inc
cltd
jns
add
mov
inc
push
arpl
pop
jge
fwait
scas
dec
xor
jns
lods
mov
push
jp
addr16
sbb
icebp
das
scas
sub
jae
pop
pop
test
outsb
lea
movsb
xchg
inc
ss
and
mov
jl
int3
cmp
ljmp
cltd
dec
movsb
mov
repz
mov
lods
pop
mov
inc
dec
pusha
lret
inc
in
iret
push
and
mov
or
mov
pusha
dec
insl
or
cmp
lea
jge
stos
imul
sub
in
addl
mov
xchg
mov
iret
mov
push
pop
test
arpl
mov
insl
jne
and
test
jmp
jo
mov
sbb
mov
rcr
lock
adc
fs
jbe
in
testl
cmpsb
test
add
arpl
sarl
jp
jmp
push
and
cmp
sbb
add
xor
gs
inc
data16
cltd
or
test
lret
jbe
outsb
push
mov
inc
inc
int3
jns
leave
mov
ja
jae
lds
cmpsb
mov
ret
cmp
cmp
stc
sub
aas
fsubrs
jmp
cs
scas
jl
test
aaa
push
push
and
jg
pop
mov
xchg
jl
aaa
or
push
in
and
sbb
and
cmpsb
or
or
cmc
mov
call
stos
mov
lods
insl
mov
rcrl
inc
or
jg
mov
jmp
mov
dec
jmp
stc
push
mov
sti
xchg
rep
scas
pop
xchg
fsubrs
mov
stos
cld
aaa
icebp
cmp
cld
jecxz
aam
das
push
sarl
repnz
das
pushf
enter
sbb
xlat
and
iret
icebp
push
js
pop
xor
out
popa
pop
or
adc
cmp
inc
gs
popa
enter
xchg
mov
orl
jecxz
cmp
fbld
fidivrl
movsb
cmpsl
sbb
xchg
jmp
mov
shlb
mov
xor
xchg
jmp
add
mov
xchg
dec
or
mov
loope
iret
mov
jmp
mulps
inc
or
mov
xor
out
pop
divb
mov
dec
lea
cltd
in
dec
mov
xchg
in
imul
jl
sbb
xor
insl
aad
js
nop
mov
and
leave
jecxz
sub
out
loope
stos
cmp
pop
addr16
data16
movsl
mov
xor
lock
leave
lret
pop
dec
dec
xlat
fstpl
pop
aad
sub
push
add
test
sbb
and
out
cwtl
aad
mov
imul
inc
lods
and
cmpsl
mov
add
push
xchg
paddusb
cmc
ret
and
xor
jmp
xor
fsubp
sbb
jp
pop
ficoms
in
in
les
pop
ret
and
aam
rorb
and
sub
inc
pop
mov
int
pop
fwait
inc
rcrl
lods
adc
xchg
or
lds
jbe
push
aam
std
int
leave
das
mov
sbb
lret
sub
or
xor
and
imul
jecxz
and
mov
movsl
jnp
test
in
int3
jo
loopne
push
mov
add
cmc
push
lds
js
jp
lret
cmpsb
sub
sub
xor
xchg
ljmp
mov
lds
mov
mov
test
mov
sbb
fs
leave
or
and
or
das
out
mov
aas
in
repz
lods
loopne
or
xor
stc
and
pop
fistpll
outsl
add
and
sahf
rcr
insb
jb
out
inc
pop
scas
dec
and
sub
inc
sbb
sub
fs
sub
or
jo
pop
cli
gs
pop
jb
cs
test
cld
jl
lcall
inc
cwtl
jmp
pop
mov
mov
lods
jmp
sbb
pop
dec
shlb
inc
fisttpl
add
mov
xor
push
arpl
lods
repz
lret
pop
jbe
pop
mov
mov
imul
xor
pop
test
popa
call
add
pop
sbb
jmp
adc
rolb
jl
fcomi
xor
xor
imul
rdpmc
or
test
scas
or
cmpsl
dec
push
inc
and
arpl
xchg
jne
je
sti
xor
lcall
scas
icebp
add
icebp
jg
inc
daa
push
mov
inc
fidivl
lds
jecxz
dec
lds
stos
test
sub
aaa
pusha
sbb
addr16
adc
shlb
mov
scas
add
enter
cmp
mov
ret
push
mov
sbb
cltd
in
or
outsb
or
aam
mov
mov
test
push
pop
jb
dec
mov
or
mov
pushf
fbld
pop
pusha
cld
lret
insb
mov
insb
or
push
jbe
arpl
push
lahf
pop
enter
mov
orl
xchg
mov
lret
add
mov
jo
insl
inc
lret
stos
cmpxchg
mov
pop
enter
and
mov
dec
loope
jbe
iret
mov
mov
mov
clc
rcrb
xchg
test
jb
iret
xchg
mov
push
ss
ljmp
inc
mov
jge
repz
mov
push
out
mov
xor
jmp
leave
adc
sbb
mov
xchg
or
fsubrl
rorb
adc
aad
and
mov
lcall
mov
pop
aad
lret
sub
imul
xchg
enter
fmuls
xor
sbb
adc
rcrl
xor
and
call
sbb
jb
xor
js
mov
fidivs
sbb
stos
push
adc
fsubrs
mov
pop
lock
dec
dec
push
add
push
aas
loope
add
and
ja
mov
push
adcl
inc
sub
mov
mov
shl
and
mov
dec
jmp
adc
inc
mov
mov
cmpsb
xchg
mov
or
pusha
pop
push
or
test
insl
or
xor
sbb
push
test
xorl
je
jge
lock
popa
cmp
repnz
sub
xor
pushf
mov
adc
jle
andb
pop
rclb
es
ljmp
push
leave
mov
mov
xchg
pop
or
sbb
lahf
xlat
mov
lods
dec
das
add
jo
dec
xor
into
lea
shrb
sub
and
testb
test
xor
sti
out
dec
push
xor
in
je
mov
mov
ja
in
mov
inc
in
add
push
mov
fcoml
repnz
cmpsb
sbb
mov
mov
push
in
fnstsw
popa
sbb
xchg
popa
adc
jno
movsb
out
fidivl
add
daa
sub
pop
pop
mov
hlt
test
push
adc
push
or
jo
jbe
ret
xor
cmp
mov
adc
jb
adc
out
cmp
mov
fldcw
test
xchg
or
cmc
cli
cmpsb
mov
ja
sbb
dec
mov
jl
add
lods
fs
dec
addr16
fldl2e
lea
cmp
outsl
xchg
mov
js
mov
fs
fmul
div
aaa
rorl
out
adcb
out
mov
or
mov
lods
fsubrs
xchg
adc
out
adc
add
inc
fistpll
lcall
mov
push
or
stos
out
adc
push
jb
xchg
xchg
shl
shr
mov
je
push
int
data16
push
fmul
lock
jle
movsb
fcmovne
clc
lds
jnp
dec
in
das
je
lods
dec
fsubl
out
xchg
cmp
push
jae
and
loope
pusha
mov
push
adc
dec
sbbb
and
inc
push
jbe
push
mov
ljmp
add
movsl
das
movsb
push
loope
fcmove
scas
mov
loopne
fnsave
mov
movsl
and
les
sbb
les
push
xchg
cwtl
jno
hlt
push
outsb
cmp
push
frstor
es
fidivs
imul
movsl
xchg
add
push
repz
test
es
inc
push
inc
loopne
pop
fs
aad
inc
and
int3
icebp
mov
or
inc
fists
addr16
push
jg
xchg
popa
inc
add
push
xor
test
or
adc
scas
and
mov
xchg
jmp
push
fmuls
cmc
cmpxchg
xor
xchg
movsl
outsl
push
repz
arpl
and
xor
mov
mov
negl
negb
lret
in
cmp
rcrb
mov
sahf
xchg
mov
cmc
xchg
mov
xchg
in
xlat
jne
dec
lret
out
xor
push
xchg
add
iret
lods
jmp
add
sbb
popa
je
fsts
xchg
stos
sbb
les
aad
pop
mov
mov
mov
sub
dec
sub
lret
mov
leave
flds
jmp
and
in
or
clc
xchg
adc
adc
out
sbb
sbb
arpl
xchg
jnp
js
xchg
mov
dec
cmp
out
fsubs
mov
je
lret
add
and
subb
ss
dec
dec
sub
adc
sub
je
in
adc
adc
push
add
cmp
mov
loopne
jge
push
mov
call
test
pop
xchg
in
mov
inc
into
gs
mov
mov
mov
mov
je
push
clts
jb
fstpl
push
addr16
xor
dec
sub
outsb
sbb
xor
ret
dec
push
xchg
add
aam
jle
scas
sbb
mov
inc
pop
repz
inc
fmull
cmp
pop
pop
dec
inc
shl
fadd
sbb
lods
mov
mov
xchg
loop
out
xchg
mov
insl
pusha
int
sbb
mov
movsb
ja
inc
inc
pop
aad
fs
nop
xchg
int3
sub
fldt
fisubrl
repz
fimuls
gs
cmp
mov
inc
clc
sbb
cli
and
sbb
xor
pusha
dec
loope
xor
add
xlat
add
icebp
or
sub
push
xchg
mov
sbb
adc
mov
aas
rol
xchg
insb
inc
mov
or
sub
push
call
xchg
js
shll
es
outsb
jns
sahf
rolb
mov
push
cmpsb
cmp
repnz
mov
push
repnz
loope
and
outsb
xchg
xchg
ret
sub
test
jecxz
and
sbb
call
sbb
adc
imul
orb
cli
mov
dec
out
nop
rol
push
sahf
scas
adc
sbb
sbb
imul
inc
leave
imul
insl
mov
jl
leave
mov
ret
jg
insb
fstpl
icebp
push
mov
fs
push
repz
push
pusha
lahf
jge
push
ret
cltd
repnz
jae
lea
lods
and
scas
jbe
icebp
sbb
cmpsl
mov
lods
jge
arpl
adc
cmp
dec
andl
sub
in
add
loopne
loope
scas
push
lret
lcall
mov
fdivr
aad
mov
ljmp
xchg
gs
out
inc
orl
pushf
dec
outsl
sbb
mov
stc
in
xchg
subl
or
cltd
int
and
jns
lock
push
xlat
sbb
fs
xchg
sub
xchg
lds
in
ret
mov
inc
out
inc
jae
nop
fistps
adc
mov
cmc
mov
cmp
mov
xor
hlt
sub
sarb
xchg
xor
mov
sub
and
xchg
clc
lret
push
test
and
add
fs
jb
jnp
mov
adc
adc
sbb
add
iret
pop
mull
fiadds
mov
adc
outsb
mov
push
pop
mov
pop
push
adc
dec
aas
cltd
and
scas
cmp
xchg
pushf
mov
movsb
int3
or
mov
sbbl
lock
cmp
int
in
add
dec
out
cwtl
push
mov
push
shl
mov
cs
pop
cmpsb
jge
push
aas
push
mov
gs
outsl
icebp
pushf
push
mov
je
cmp
fs
lahf
push
jnp
sti
shl
pop
push
sub
or
stos
cmp
pop
pop
hlt
outsl
lock
dec
mov
add
shlb
shr
gs
outsl
ja
out
push
mov
aas
int
pop
jp
jno
dec
xchg
and
mov
scas
out
jns
and
push
ss
les
cmpsb
rcrb
addr16
push
daa
add
fcoms
sub
xchg
inc
popa
jmp
sub
xchg
mov
outsl
out
sbb
pusha
lret
cmp
mov
addb
pop
mov
cmpsl
outsl
jne
mov
mov
std
mov
repnz
fbld
popf
nop
pop
rclb
and
ret
push
out
pop
cwtl
ljmp
cwtl
int
in
add
xor
sbb
xchg
mov
mov
xchg
mov
nop
jo
xor
faddl
or
jae
sub
dec
sahf
cmp
dec
popf
scas
jl
mov
add
and
insl
sbb
xchg
xchg
lret
or
mov
and
or
fmul
cli
inc
cmp
gs
cmp
stos
popf
pop
mov
push
xchg
jb
sub
int3
dec
testb
add
bound
mov
fstpt
xor
cs
jns
xor
push
cld
jae
movsb
push
insb
mov
pop
mov
outsl
xchg
push
xorb
lret
pop
cmpsl
sub
cmp
dec
push
movsl
notb
cmp
mov
data16
sahf
push
outsb
mov
cvtps2pd
mov
rcrb
and
pop
ret
loope
push
sub
andl
movl
ds
push
jecxz
sahf
or
cmp
out
xchg
in
mov
cld
je
inc
adc
sub
or
jb
test
repnz
mov
sub
stos
push
pop
jne
cs
mov
test
fstp
push
filds
and
jns
clc
cmpsl
loopne
sbb
mov
jmp
arpl
out
sarl
pusha
dec
test
dec
loop
lret
rcrl
mov
ss
adc
push
cmp
int3
dec
int3
rol
movsl
jg
xor
iret
nop
xlat
push
sbb
pop
fiadds
jnp
in
lret
lret
popf
dec
xchg
leave
je
mov
push
fnstsw
cmp
or
lret
sbb
mov
test
insl
pushf
add
int
sub
jne
jne
les
rorl
fwait
lods
inc
dec
adc
and
mov
fisubl
ljmp
rcll
mov
repz
loopne
sbb
xchg
outsb
push
xor
cmpsb
inc
cs
cmp
xchg
lret
in
and
in
dec
repz
testl
jns
sbb
fwait
std
into
aam
push
faddl
aaa
aaa
jns
and
mov
in
xor
out
jb
pop
sbb
xchg
xor
mov
sbb
and
aam
cmc
push
cmc
lods
inc
in
adc
mov
movb
cli
pop
adc
xorl
mov
push
jae
sbb
ret
mov
mov
add
rclb
push
inc
cwtl
icebp
mov
enterw
loopne
xor
popf
rol
shlb
lret
adc
inc
mov
outsl
ja
inc
shrb
sti
cmp
jg
push
cmc
and
ss
jp
pop
mov
push
hlt
test
cs
mov
out
mov
xchg
fsubrp
std
loopne
mov
inc
jge
les
jo
fstps
push
into
test
loopne
sub
aad
mov
movsl
sti
loop
xor
sahf
stc
fiadds
pusha
mov
add
fisttps
outsl
or
and
scas
add
mov
mov
sti
lods
fisubrs
ret
mov
jne
inc
inc
cld
xchg
lret
add
rcll
mov
shr
addr16
sbb
cmp
std
lahf
and
inc
lds
pushf
out
imul
cli
inc
rcrb
aaa
or
jg
out
and
sbb
ljmp
dec
mov
lds
inc
fmul
out
pushf
push
mov
dec
loop
push
sbb
inc
aas
xchg
mov
mov
mov
xchg
mov
imull
mov
cmp
sbb
roll
push
or
xchg
movsb
movsl
jp
dec
dec
insl
push
and
les
inc
pop
mov
jmp
mov
ds
test
in
dec
movsb
xor
outsl
dec
sbb
push
pop
fldl
xor
push
push
dec
adc
mov
ret
or
enter
dec
test
test
shll
pop
enter
jp
cld
in
mov
pop
mov
mov
xchg
jl
or
aaa
aam
mov
xchg
xchg
mov
cmc
into
inc
dec
sbb
clc
pop
shrb
fdivrs
imul
int
pop
loopne
dec
sub
xchg
repnz
test
rcrl
xor
outsl
fxch
add
stc
sti
rclb
sub
int
or
aam
mov
and
outsl
call
push
faddl
mov
add
fsubl
fnstcw
adc
xor
ja
out
insb
popa
push
std
aad
stos
mov
lahf
add
loop
mov
add
pop
mov
jp
jp
shl
push
sahf
stc
mov
xor
cmpsl
push
dec
es
fldenv
inc
test
mov
aad
cmp
add
scas
xor
ja
pop
in
sub
cli
cmp
push
xor
pushf
imulb
mov
mov
fimull
out
gs
push
push
pop
add
jnp
popa
mov
repz
nop
insl
mov
lea
mov
test
sub
inc
sub
rcrb
scas
adc
bnd
bswap
sub
jne
daa
xchg
ficoml
stc
pusha
pop
in
push
or
or
fistpl
subb
imul
jns
xchg
es
jno
cltd
fs
dec
jle
shr
pop
outsb
aas
js
and
les
out
lods
xor
xchg
mov
lea
movsl
shrl
pop
ljmp
lcall
push
pusha
push
aas
pop
mov
in
repnz
or
nop
push
and
jge
dec
push
or
xlat
cmp
pop
int3
mov
fsubr
mov
dec
sahf
test
movsl
filds
outsb
and
mov
orl
out
orl
jl
and
aad
or
addr16
push
push
xchg
push
jns
xchg
lret
push
int3
or
mov
jne
sarl
dec
pop
das
imul
jno
je
dec
rcrl
aaa
xchg
push
pop
cmpsl
call
bound
scas
mov
dec
jbe
mov
push
outsb
adc
push
jmp
jae
xor
mov
sub
imul
inc
sbb
pop
pop
insl
andl
iret
ljmp
imul
pop
cmp
stc
js
jecxz
jl
stc
or
jp
aad
aaa
mov
fildll
test
lds
aas
imul
inc
icebp
and
adc
xor
loop
sbb
ljmp
fstps
cmp
xor
test
jle
mov
nop
mov
add
mov
mov
stos
int
jnp
add
je
mov
popf
mov
jo
fcomip
jbe
rcrb
outsl
in
add
inc
cmp
add
stos
cmp
cld
push
inc
movl
cmp
jl
hlt
div
mov
mov
xchg
xchg
sub
or
or
cmpsb
sbb
test
stos
movsb
insl
cmp
jns
sar
add
xor
sbb
dec
ret
je
into
loopne
out
push
jnp
dec
pop
fisttps
pop
loop
mov
cmp
cmpsl
inc
in
inc
iret
mov
mov
pop
ret
inc
and
cmc
pop
jl
mov
push
cmp
jns
xor
xor
movsb
mov
and
jns
dec
mov
sbb
sub
imul
shl
lods
mov
pop
mov
add
rcr
mov
popa
pop
mov
adc
ret
fs
xchg
dec
test
movb
jnp
sti
jnp
call
cmp
test
sub
cwtl
mov
cmp
out
mov
xchg
push
pop
xor
popa
sbb
adc
push
daa
or
mov
lock
inc
les
ret
bound
xor
xchg
sub
push
stos
mov
lock
es
mov
jns
dec
insb
xor
cmp
mov
push
out
pop
ja
adc
pop
lea
push
test
ficoms
stos
mov
adc
cli
cmp
in
test
sbb
jecxz
movb
mulb
mov
mov
pop
loopne
xchg
pop
sub
or
rcll
ja
jmp
cli
cmc
mov
or
dec
pop
repz
jae
iret
mov
sbb
aas
flds
call
push
js
jne
les
xchg
pusha
dec
push
mov
popl
cmp
repz
mov
popf
lcall
mov
ret
cld
adc
in
fiadds
sbb
dec
scas
push
cmp
jl
mov
fdivs
xor
lret
ss
mulb
mov
scas
jno
loopne
sub
in
incl
jmp
jae
ljmp
aaa
dec
add
into
jle
shrl
js
adc
popa
mov
fdivl
inc
outsb
cmp
sbb
and
or
or
ret
scas
cmp
sub
mov
in
sbb
push
sbb
jno
lock
pop
out
push
and
or
xlat
hlt
stos
jl
fsubs
scas
mov
add
push
popa
dec
pop
adc
jne
les
mov
cmpb
mov
popf
lahf
fbstp
xchg
pop
jl
fists
mov
enter
and
mov
rcrl
fcoms
and
xchg
mov
sbb
jmp
repz
ret
outsb
mov
jmp
mov
out
mov
sahf
push
loopne
out
add
or
in
pop
std
cmpsl
fsts
ja
mov
cmpl
jg
mov
sti
jb
jne
inc
jne
xor
inc
mov
lcall
sbb
sbb
lahf
add
nop
add
mov
cmp
jmp
or
lock
outsl
push
add
and
sub
mov
insl
div
jo
sti
push
sbb
in
add
jp
mov
fwait
daa
andb
cli
jbe
call
push
add
shrb
mov
int
loope
mov
aad
adc
mov
mov
ds
adc
mov
xor
xchg
shll
dec
call
insb
pop
mov
and
loopne
jns
stos
mov
adcb
and
fsubrl
shll
push
adc
lahf
or
dec
pop
cmp
adc
push
and
aam
je
fisubrl
into
ret
shrl
cmp
pop
andb
dec
js
mov
hlt
sub
jae
add
jns
inc
dec
jbe
push
inc
pushf
stc
ljmp
les
mov
inc
jmp
xchg
xchg
push
cmp
and
mov
into
sbb
inc
or
in
dec
bswap
xor
add
add
pop
and
lcall
push
mov
cs
imul
shlb
popa
xchg
insb
pop
lods
adc
pop
fildl
cmp
inc
cwtl
mov
stos
in
dec
icebp
pop
stos
cli
push
aad
add
bsf
mov
aam
xor
or
dec
arpl
jmp
jmp
xchg
nop
mov
dec
pop
mov
mov
fmuls
mov
testl
and
mov
clc
or
ror
mov
pusha
xchg
fcmove
push
inc
aas
std
adc
les
in
push
inc
lods
stos
push
fs
mov
leave
or
or
mov
movsb
es
jo
cmp
mov
mov
pop
mov
cmp
adc
dec
push
ljmp
aam
subb
sub
mov
xchg
or
pop
push
jbe
pop
jle
test
xor
adcb
outsl
adc
insb
xchg
data16
mov
out
fld
rorb
pusha
jge
das
pusha
cmc
and
orl
iret
imul
mov
xchg
js
lret
mov
cmp
pop
cmp
pop
jne
iret
mov
and
mov
push
xor
jns
nop
sar
sub
cmpl
lcall
adc
inc
pop
mov
pop
rorb
arpl
pushf
in
mov
push
sahf
dec
insb
sbb
mov
clc
jg
and
sbb
mov
stos
pop
xor
imul
xor
sahf
mov
mov
push
dec
and
mov
fimuls
mov
fucomp
movsl
popa
repnz
aas
pmuludq
fwait
pop
xor
xor
adc
xor
xor
clc
mov
pop
xor
rcll
mov
in
push
subb
mov
repnz
mov
outsb
loope
outsl
mov
jmp
mov
test
sub
stos
sbb
jne
jae
pop
push
add
rol
cmp
dec
mulb
fwait
xchg
pop
scas
add
arpl
push
xlat
jecxz
pop
outsl
scas
jg
hlt
or
out
fisubs
dec
orb
mov
fidivs
and
xlat
inc
jbe
inc
jecxz
mov
jg
das
out
insl
int
and
adc
sbb
xlat
int
test
mov
push
imul
mov
daa
call
mov
stos
sub
xor
cmpl
sbbb
test
pusha
mov
pop
or
adc
xchg
les
mov
enter
dec
sbb
and
sub
out
push
pop
mov
adc
mov
push
pop
rcrl
iret
testl
scas
jbe
xchg
fldt
mov
xchg
mov
dec
outsl
int3
push
xor
adc
outsb
xchg
sub
clc
xchg
adc
das
jle
pop
sahf
xor
lea
push
enter
mov
js
cs
sub
mov
cmc
popf
int
xchg
jle
repnz
dec
add
ret
fbld
pop
xchg
or
jge
pop
mov
loope
repz
mov
pop
xchg
inc
push
xor
icebp
fs
pop
xor
xor
jno
or
mov
jecxz
cmpsb
mov
hlt
lahf
iret
dec
push
mov
mov
ror
psubusb
dec
pop
xchg
push
dec
loop
lret
bound
lcall
outsl
in
mov
es
das
sbb
hlt
add
mov
loope
xorb
push
jb
push
or
loope
pop
pop
jmp
sub
movsb
enter
mov
add
xchg
lahf
xor
inc
inc
cs
hlt
cltd
xor
imul
mov
fdivl
lret
mov
mov
pop
in
add
testb
jns
or
int3
fiadds
jnp
sahf
pop
sub
pushf
movsb
aam
es
cld
call
lds
stos
push
lea
sub
dec
insb
or
je
sbb
pushf
jno
or
clc
inc
sub
fsubrp
jo
mov
movsb
sar
imul
jmp
das
xchg
or
pop
sarl
and
mull
add
lds
adc
data16
push
sbb
out
jo
xchg
cmp
sub
mov
and
daa
dec
sahf
or
and
xchg
roll
cmp
inc
jge
imul
aas
cmp
xchg
les
repnz
adc
dec
xor
xor
in
mov
push
push
mov
jp
imul
push
in
scas
add
cmpsb
mov
shll
jo
insb
push
cmp
jle
mov
cltd
ja
jmp
add
add
inc
int
sub
mov
cmp
outsl
movsl
and
jmp
outsb
ret
cmpsl
sahf
ja
daa
lods
in
shl
ds
sbb
or
ljmp
es
or
in
push
adc
mov
lcall
andl
dec
adc
xchg
jmp
mov
sub
loop
sbb
insb
mov
cmpsb
dec
shlb
imul
fbstp
mov
and
imul
adc
pop
push
xchg
idiv
iret
testb
adc
pop
testl
push
push
hlt
cmp
xor
lcall
sbb
testl
dec
add
pop
jge
xchg
push
ret
sub
cmp
les
and
jae
pop
nop
addr16
fs
dec
xchg
add
jno
push
push
popf
jl
lods
or
xchg
shll
movsb
add
clc
xor
xchg
pop
xor
sbb
mov
xor
int3
or
jg
mov
bound
mov
dec
mov
repnz
xchg
gs
sub
or
enter
fnstsw
aam
adc
sbb
mov
repz
dec
lret
lcall
xchg
stos
jns
icebp
ds
daa
jnp
adc
mov
xorl
inc
push
fs
mov
ss
clc
cmpsb
mov
inc
jecxz
in
cmp
mov
and
aad
mov
mov
push
mov
xchg
out
mov
shll
in
cwtl
mov
mov
inc
fsubl
pusha
adc
jge
je
mov
xor
mov
adc
cmovl
mov
sub
out
adc
sub
cs
jb
shl
sub
xchg
push
mov
test
xchg
mov
in
stos
insl
inc
lods
adc
push
jp
adc
pop
xchg
adc
outsb
cwtl
and
fildl
adc
js
test
call
jmp
push
scas
iret
mov
imul
in
xlat
push
mov
insb
mov
ret
dec
pop
orl
jecxz
popa
stos
cmp
mov
cmpsb
out
bnd
rorl
adc
out
dec
fs
es
mov
int
aad
jbe
xchg
dec
ljmp
adc
xchg
iret
jno
mov
sub
lea
pop
lahf
popa
xchg
xchg
loope
add
fsubrl
mov
popf
xorb
add
jecxz
out
data16
adc
sbb
mov
dec
sub
cmp
in
mov
jne
xlat
cld
insl
jae
mov
pusha
hlt
int
cld
pop
and
cmp
mov
in
leave
clts
sub
push
mov
xor
mov
jbe
inc
pop
shlb
mov
in
nop
or
lret
mov
call
adc
aad
divb
test
push
mov
inc
negl
mov
or
in
lds
int3
xor
pop
les
xchg
mov
ljmp
dec
and
out
mov
mov
xchg
sbb
inc
in
addr16
pop
out
or
popa
push
in
inc
mov
xchg
adc
xchg
sub
pusha
sbb
add
push
xlat
popa
mov
cmp
push
movsl
cmp
add
fidivs
xchg
pop
dec
jecxz
div
popa
je
mov
xorl
or
pusha
repz
push
ja
and
cli
lock
jecxz
ljmp
cs
dec
jmp
sbbb
js
mov
mov
pop
dec
ret
pop
testb
aad
sbb
pop
sbb
mov
or
les
aaa
fstps
js
sbb
clc
icebp
push
mov
and
mov
jmp
arpl
ljmp
mov
inc
or
test
sbb
mov
in
mov
push
lds
xchg
lods
sbb
incb
pop
mov
hlt
cmpsl
sub
fldl
adc
outsl
lret
cmp
pushf
nop
cwtl
fs
and
fwait
lcall
repnz
mov
sub
fcmovne
add
push
pop
adc
ss
lds
ss
mov
movsl
adcl
data16
mov
in
aaa
xor
xchg
cltd
lds
xchg
inc
pop
notb
test
xchg
aaa
xor
dec
icebp
dec
inc
ret
mov
jnp
std
loopne
or
mov
in
cmp
push
mov
add
adc
call
and
in
mov
dec
push
jno
dec
flds
out
jnp
mov
and
imul
data16
test
cltd
adc
mov
adc
sar
shll
and
pop
xor
cmp
popf
mov
sarb
lret
pushf
mulb
fnstenv
aaa
mov
lcall
sarb
mov
or
in
xchg
shll
fs
push
jns
nop
lock
add
mov
push
bound
stc
mov
mov
adc
inc
sub
data16
repnz
xchg
in
sub
sbb
dec
dec
cmp
mov
stc
clc
cli
jbe
es
adc
push
inc
sahf
seta
enter
mov
push
mov
xorb
inc
mov
stos
pop
dec
loop
and
adc
dec
cli
mov
loop
fs
inc
mov
es
outsb
or
add
lods
and
add
out
shl
pop
dec
inc
leave
std
xor
pop
aam
xchg
push
xlat
dec
call
fidivs
fsubrs
or
inc
and
xchg
call
cld
and
js
mov
icebp
add
js
sbb
rcrb
inc
add
testb
xchg
mov
pop
mov
mov
jp
mov
sub
xor
jp
and
and
pop
cmc
mov
xor
xchg
push
fimull
fcoml
adc
imul
jns
out
add
repz
mov
sar
sbb
in
sbb
mov
cmpsl
je
xorl
and
je
cmpsb
dec
addb
addr16
mov
in
xchg
pop
jl
out
inc
sbb
mov
mov
mov
xor
int3
jnp
repz
mov
and
and
hlt
jb
push
stos
ja
mov
sbb
test
xchg
or
repnz
test
push
push
int
fdivs
out
dec
add
mov
push
add
cs
loop
add
push
xor
pop
jle
sbb
das
sbb
out
ja
add
out
xlat
mov
fiaddl
sub
fiaddl
jb
mov
jbe
mov
xchg
call
in
pop
clc
mov
push
xchg
hlt
mov
imul
daa
mov
jg
dec
ds
sub
scas
ds
scas
cmpsb
mov
mov
xchg
and
imull
adc
and
mov
jo
mov
dec
inc
pusha
xor
notl
sub
cwtl
or
and
jne
mov
loope
rcr
sub
mov
inc
push
add
lahf
xchg
xor
loope
jne
mov
pop
mov
or
fsubl
push
nop
mov
push
jmp
imul
add
testl
lret
or
ret
jno
lret
ss
push
dec
lods
xor
inc
fisubrs
loope
lar
xor
fsubl
test
push
mov
xor
pushf
loope
pop
mov
mov
adc
pop
pop
sti
in
or
scas
or
out
loopne
ja
sti
cmc
pop
mov
jns
cli
push
xchg
sar
rclb
repnz
pop
pop
mov
add
mov
inc
mov
inc
hlt
add
mov
cmp
ficomps
leave
cmpsb
faddl
push
mov
orb
pop
pop
jnp
mov
stos
test
add
mov
push
add
sarl
sub
in
or
jb
in
cmp
daa
mov
sub
imul
fwait
loopne
scas
xor
mov
and
cld
bound
pop
or
xchg
cmp
pop
hlt
cmp
push
loop
insb
das
loopne
sub
adc
rcrb
ja
sub
mov
stos
int3
fs
cwtl
scas
mov
cltd
cwtl
ljmp
ss
jo
lea
and
test
mov
subb
je
sub
jmp
jmp
cmp
mov
and
push
out
dec
rcrb
in
sub
xchg
jl
lcall
pop
or
dec
sub
testb
lods
or
xchg
cmp
fiaddl
bound
pop
dec
sarl
or
adc
pop
xor
dec
pop
dec
add
xchg
test
push
lea
ja
imulb
js
loope
enter
add
jo
mov
cmp
pop
and
xor
cltd
gs
js
out
popa
add
dec
and
not
repz
popa
jae
cld
in
pop
jns
pop
mov
inc
repz
cld
scas
es
sbb
xchg
mov
push
pop
adc
inc
push
rorb
in
ds
in
add
data16
loope
and
stc
push
cs
shrb
into
cltd
pcmpgtw
in
push
xchg
test
lock
call
push
mov
lret
aad
dec
imul
jge
add
jge
pop
stos
dec
cmp
fwait
inc
mov
and
outsl
mov
jns
loopne
cmp
aaa
iret
dec
clc
stos
repz
outsb
jmp
cmp
stos
lea
sahf
icebp
mov
push
fwait
jns
xchg
mov
sub
jmp
pop
rolb
scas
cli
sbb
add
jnp
mov
scas
push
mov
sbb
test
subl
jno
popf
imul
das
inc
jl
push
mov
cmp
sbb
addr16
cmpl
cmc
div
push
lods
dec
cwtl
push
cmp
cmp
mov
push
daa
and
inc
sub
imul
inc
adc
mov
cmp
and
inc
rorb
inc
dec
adc
ljmp
in
mov
dec
push
aaa
dec
mov
fsubr
xchg
jge
cmp
pusha
and
in
clc
test
aam
cmp
js
lods
jae
scas
test
dec
aad
adc
mov
int3
mov
das
pop
arpl
and
scas
pop
mov
mov
cmp
mov
mov
inc
mov
sub
and
dec
inc
xchg
rcll
loope
cmp
mov
test
cmp
mov
xchg
mov
aaa
pop
cltd
mov
cmp
iret
stc
fildll
and
mov
jg
imul
addb
call
jmp
or
stos
les
push
ds
cmp
pop
ds
pushf
mov
pusha
fucomi
lret
mov
jl
mov
mov
ljmp
out
cwtl
sarl
xor
cmp
or
cmp
enter
and
inc
mov
add
daa
mov
push
lahf
inc
gs
or
push
jle
and
int
movl
scas
repnz
out
ds
dec
push
push
jns
or
push
or
pop
loop
addr16
rcl
std
rcr
pop
dec
in
xchg
mov
aad
sub
mov
dec
enter
pop
into
push
mov
mov
aad
cmp
addr16
jecxz
mov
push
gs
stos
xorl
daa
sub
fistpl
mov
mov
or
adc
loopne
repnz
or
stc
insb
les
into
dec
ja
sub
mov
inc
jo
cmp
jae
mov
xor
rcrl
aas
stc
es
stos
adc
fisttps
xchg
rclb
jp
push
mov
cmp
data16
js
shrb
add
jl
jge
jne
loop
loope
jmp
mov
add
cmp
std
sub
pop
movsl
xor
jo
mov
mov
adc
lret
test
push
push
push
lret
mov
mov
cs
fwait
pop
lret
mov
data16
fwait
iret
sub
fwait
repnz
sbb
push
sbb
mov
jb
lret
xor
test
dec
pop
lods
mov
mov
or
push
hlt
rol
dec
cli
ja
ds
jo
insb
jns
jmp
pop
data16
out
mov
jge
nop
jp
int
loope
orl
adc
xor
inc
call
sub
jnp
sub
xchg
mov
gs
addr16
mov
sub
cmp
ds
and
inc
mov
lods
push
lret
shll
xchg
movsb
xlat
jae
rcrl
lods
pop
loope
fstps
cltd
shlb
inc
xchg
and
fmull
std
mov
aam
add
dec
and
enter
jns
mov
popf
or
mov
xorl
xchg
lods
jmp
incl
movsb
sbb
scas
cli
mov
xor
repz
mov
lret
test
cmc
add
fcomps
adc
js
call
mov
inc
jmp
adc
inc
xor
movsl
js
push
lea
lret
and
adc
mov
ljmp
xchg
les
pop
cmpsl
pop
push
and
test
fisubrl
add
fwait
mov
orb
mov
push
or
fsub
shlb
enter
mov
popf
hlt
fmull
arpl
movsb
loopne
or
add
loop
jae
popf
pop
or
xor
movsl
cld
xchg
jmp
push
xor
or
jae
jnp
shlb
sbb
sub
lods
xchg
sub
and
enter
inc
stos
arpl
clc
pop
push
repnz
sub
loop
pop
add
push
add
jle
inc
dec
jne
repz
sarb
mov
outsb
inc
mov
cmp
daa
mov
xor
fmull
mov
push
sbb
scas
test
lahf
pop
mov
sbb
inc
sub
jge
sub
lret
lret
lock
xor
gs
cltd
movsl
xor
cmp
push
cmpsb
or
test
sti
je
sti
dec
sbb
testl
add
out
mov
lds
jns
popa
scas
mov
test
mov
mov
test
arpl
stc
push
mov
ss
mov
les
mov
fwait
stc
push
inc
aad
inc
sbb
into
mov
mov
mov
push
imull
or
repz
jo
xchg
dec
xchg
inc
out
in
cwtl
shlb
mov
push
pop
dec
inc
addr16
ja
les
insl
push
push
dec
cmc
fldln2
dec
xchg
xchg
sbb
aad
rolb
mov
xchg
mov
sahf
push
mov
push
adc
push
adc
add
pop
jl
mov
xorl
pop
std
push
fs
adc
mov
adc
ja
sti
inc
xchg
jp
sbb
rcl
std
pop
int3
dec
fildll
jae
fistpll
sarl
jmp
or
or
jg
scas
sti
daa
pushf
mov
push
in
push
mov
arpl
lods
shrl
jl
test
sub
insl
xchg
mov
sub
pop
sub
mov
adcl
sub
xchg
sbb
adc
add
fwait
cmp
fsubs
adc
pop
sbb
iret
out
mov
pushf
jb
das
sbb
dec
jmp
or
notb
gs
stos
pop
jecxz
sub
inc
xchg
cmpsl
and
mov
lret
inc
cmpsb
lds
push
orl
or
repz
sbb
adc
cmp
out
mov
sbb
sbb
mov
adc
test
inc
and
ljmp
mov
data16
fsub
ret
out
cli
add
lret
imul
dec
jno
sub
int
test
inc
les
xchg
xor
negl
sub
push
cli
pop
push
outsb
mov
and
repnz
ret
lods
mov
xor
data16
shrb
mov
leave
fwait
negb
fcmove
push
pop
ret
add
inc
scas
fcompl
mov
cmpsb
xor
cmp
push
jmp
adc
ja
rclb
outsl
in
push
sbb
lcall
push
and
and
pop
inc
adc
or
xchg
imull
inc
out
mov
ja
push
fcomps
stc
sti
add
test
icebp
into
cmp
lcall
test
sahf
test
ret
loope
js
jne
mov
or
imul
xchg
and
cld
popa
pop
sub
out
jmp
or
ja
test
cmpsl
jno
fwait
push
jl
clc
fs
jo
aaa
pushf
lcall
pop
cmovg
cmc
ja
dec
add
arpl
and
cmpsb
out
cmp
fcmovnu
rcll
ficompl
or
enter
cwtl
dec
hlt
lock
inc
pop
jl
sbb
bound
aas
fcmovbe
call
lcall
loope
mov
xchg
fsubs
xchg
pop
pop
mov
xor
cmpsl
push
jecxz
rol
nop
cmc
push
scas
lea
jmp
sbb
jle
dec
test
push
stos
xor
sub
and
dec
xor
aas
pop
inc
inc
cmpb
fs
xor
fldl
mov
jnp
sti
jmp
lret
aam
or
mov
mov
cmp
dec
jae
adc
out
fwait
fwait
pop
or
sbb
notl
push
cmpsl
push
add
jb
sti
ficoml
sub
in
out
jl
mov
xchg
mov
cltd
or
lret
xchg
repnz
aam
popf
pop
lret
pusha
les
adc
mov
mov
std
bnd
cmp
out
sti
frstor
stc
inc
es
and
mov
jo
xchg
fnstcw
repz
aaa
add
cmpsb
in
hlt
jecxz
ss
pop
jge
and
adc
ret
mov
dec
adcl
popf
or
or
negl
gs
xlat
lahf
jmp
cld
addr16
lret
out
cmc
sub
sbb
mov
ror
incb
lds
sbb
pop
xchg
cmp
pop
mov
out
mov
ja
stos
cmpb
mov
call
dec
lahf
jno
jno
cmp
or
test
lods
lret
xchg
mov
int3
xchg
mov
ljmp
sbb
fisubrs
rorb
mov
cmpsb
cmpsl
mov
dec
fisubs
out
in
xchg
mov
or
xchg
iret
mov
js
mov
rorb
sbb
jmp
mov
push
dec
icebp
pop
imulb
pop
adc
or
fcoml
and
clc
insb
imul
mull
cmpl
std
iret
fxtract
lods
test
outsb
nop
into
sar
sub
test
pop
sub
pop
xor
jnp
pop
pop
mov
xor
sahf
aad
mov
test
inc
pop
aaa
or
int3
stos
mov
ret
mov
mov
sub
pop
mov
push
add
mov
rclb
and
cmp
adc
xchg
pop
shlb
mov
test
test
stos
inc
jecxz
rcll
popf
inc
cmpsl
xor
jp
aaa
bswap
cs
adc
mov
mov
inc
outsb
xor
inc
mov
jge
xor
fs
fldt
inc
mov
push
inc
sbb
xor
push
ljmp
icebp
shlb
adc
jge
xorl
pop
in
xor
sahf
lcall
shll
cmc
xchg
inc
popf
aaa
pop
lret
lret
jmp
std
inc
outsl
sbb
push
xor
scas
push
sbb
aas
outsl
pop
dec
jl
xchg
pop
push
lahf
out
mov
xor
cmp
in
inc
dec
lods
inc
mov
or
adc
movsb
clc
push
pop
imul
mov
add
inc
pop
dec
testb
insl
add
push
bound
subl
hlt
je
sub
loope
mov
in
fsub
cmp
aad
addr16
aad
mov
push
iret
xchg
mov
fidivrs
mov
and
pop
cltd
jg
push
out
mov
cmpb
dec
pop
sub
shlb
cwtl
pop
push
fidivs
pop
sbb
sarb
stos
mov
pop
sub
pop
jo
mov
sbbb
adc
mov
jp
rolb
push
js
int
ss
ret
test
mov
pop
loope
xor
adc
dec
aam
ljmp
fisubl
sub
push
mov
add
jae
lds
xor
flds
xchg
jo
or
jno
add
or
loop
ja
xchg
xlat
sub
adc
lret
adc
lcall
dec
test
cmpsb
dec
inc
dec
incb
pop
pop
out
lahf
inc
cmp
in
inc
ret
out
divb
or
aad
push
xchg
mov
in
ret
mov
out
cmp
dec
cmp
ds
les
ljmp
pop
adc
leave
push
xchg
adc
call
les
ficoms
aaa
cmpsl
test
cs
nop
pop
jb
sbb
daa
sbbl
jge
fcmovb
fistl
xor
outsl
xor
pop
fucomip
mov
adc
movsb
movsl
add
sub
daa
add
out
sub
push
xorl
jmp
cmp
rorl
push
ret
adc
aam
cwtl
stos
les
mov
test
xor
lret
mov
stos
out
mov
push
setbe
gs
pop
imul
jp
mov
cwtl
mov
shll
fucom
push
mov
and
stc
or
or
push
sahf
mov
ja
or
test
jecxz
jl
inc
outsb
cmp
xchg
mov
pop
ficoml
ds
jl
jp
jle
or
dec
push
mov
sub
cmp
xor
jmp
mov
enter
adc
sbb
or
push
dec
scas
ret
out
jb
push
scas
inc
jmp
ss
dec
inc
xchg
mov
adc
ret
daa
sbb
mov
lea
inc
cmp
enter
shlb
dec
in
jmp
nop
imul
xchg
jno
scas
xor
adc
mov
sbbl
push
xchg
and
lret
fstpt
pushf
rcrb
pushl
dec
roll
insl
inc
dec
pop
cmp
clc
adc
cltd
jne
loopne
dec
xchg
sub
sub
pop
out
out
cld
inc
sub
in
xchg
cmpl
push
lods
sub
pop
test
cmp
out
gs
subb
arpl
pop
cmc
xor
xchg
pop
adc
adc
push
mov
xor
ret
cmp
cmpsl
mov
ret
pusha
das
enter
pop
cmp
adc
fistps
lcall
jbe
scas
push
xchg
data16
imul
mov
pop
push
cmpsb
inc
lcall
mov
imul
mov
xchg
sahf
std
sbb
in
cmpsb
inc
bound
dec
dec
mov
std
or
jp
and
xchg
sahf
inc
xor
shr
sub
ja
loop
js
imul
jecxz
xchg
adc
push
jl
xor
mov
mov
aas
mov
inc
cmc
jle
xchg
movsb
aad
in
and
cmovge
or
push
inc
arpl
andb
inc
lods
imul
jl
push
clc
fnsave
adc
mov
idivl
sbb
mov
mov
lock
stc
cmp
ds
pop
cs
mov
cmp
jns
xchg
stc
xchg
sub
dec
adc
push
mov
loop
pop
xchg
pop
pop
cmpsb
sbbl
cmpl
mul
aas
xorb
fldenv
cmp
mov
int
sbb
lahf
pop
dec
aas
seto
mov
cltd
jp
cmpsl
ljmp
lret
mov
das
pop
add
and
fnsave
and
arpl
inc
call
mov
mov
rorl
dec
xor
cmc
adc
lds
xchg
negl
push
addr16
orl
mov
add
pop
repz
mov
jns
insl
pxor
sub
ds
jmp
push
lock
sbb
outsb
xor
mov
ds
add
inc
test
push
mov
ret
lret
ljmp
jne
leave
mov
sub
adc
orl
test
or
lock
mov
je
jne
add
inc
xor
scas
shl
cmpsl
xchg
xchg
sbb
lods
xor
orl
stc
jg
push
push
std
hlt
mov
mov
in
in
test
cmpsb
fisttps
roll
xchg
pop
xor
into
jb
sbb
fwait
js
test
negl
or
add
movsb
mov
mov
leave
dec
in
test
cmp
repnz
es
inc
ja
add
inc
mov
addr16
jl
add
in
jb
testl
addr16
sub
inc
mov
xchg
dec
inc
iret
jmp
sub
orb
int
jnp
add
ds
aas
insb
inc
mov
lds
cmp
es
fadds
cmpsl
xchg
shr
sbb
lock
mov
js
lock
int3
outsl
cli
mov
sbb
sbb
mov
lcall
xor
and
push
pop
mov
mov
aas
ret
mov
adc
clc
lret
sub
or
jmp
push
sbb
jmp
fld
cmp
xchg
add
lahf
mov
cwtl
cmpsb
dec
out
lds
cmp
jle
ffree
fists
mov
xor
cmpsb
xor
jl
movsb
pop
inc
aam
pop
push
loopne
hlt
jmp
adc
jne
jge
sbb
push
movsl
add
rcll
xor
je
jle,pn
movb
inc
xor
xchg
rcrb
test
mov
fimull
mul
and
fwait
sar
inc
and
stos
sub
clc
xlat
and
sbb
push
xchg
sbb
mov
push
mov
xchg
push
lock
mov
or
xchg
push
jp
call
jbe
loopne
cs
aad
aas
mov
daa
loope
jecxz
aaa
insl
aas
xchg
dec
dec
mov
popf
lods
sub
pop
test
pop
mov
mov
cmp
mov
cmc
xchg
pop
sti
xchg
push
cmpsl
mov
in
xchg
adc
rolb
push
push
das
mov
sbb
mov
repnz
in
push
stc
sub
lods
dec
sahf
sbb
pop
mov
inc
sub
es
sbb
jnp
loopne
icebp
insb
adc
inc
in
pop
or
orl
lret
mov
pop
cmove
sahf
xchg
pop
add
and
mov
ret
loopne
mov
call
adc
cmp
xchg
cmp
mov
cltd
jnp
addr16
scas
jne
lret
and
mov
cmc
xchg
cld
imul
outsb
pop
out
dec
in
arpl
mull
cmp
int
outsl
int3
testl
scas
push
cmpsb
test
in
pop
dec
dec
cmp
jbe
adc
dec
push
sub
inc
fsubrs
jne
cmpsb
adc
jnp
xor
dec
lahf
add
and
and
out
mov
subl
outsl
cwtl
ljmp
pop
mov
in
add
dec
ret
jl
sub
xchg
and
fidivs
mov
adc
stos
hlt
daa
mov
mov
add
adc
jb
sub
mov
orl
pop
loopne
push
xchg
fsubrs
push
shll
pop
xchg
jge
lds
sti
and
ds
push
mov
pop
mov
inc
repnz
into
js
xchg
adc
adc
je
das
out
test
and
lahf
sarb
dec
loope
into
push
gs
pop
arpl
shlb
stos
jmp
mov
cltd
fst
nop
leave
popa
aas
mov
mov
add
dec
mov
xchg
adc
ljmp
icebp
rorl
adc
push
cmp
cmpsl
pop
jo
shlb
sbb
push
out
push
test
mov
insb
shll
sub
or
or
inc
outsl
pop
xchg
jmp
xchg
and
and
mov
cltd
sub
loop
popa
cmp
jns
cmp
leave
das
add
ss
sub
push
or
adc
data16
mov
ss
mov
adc
clc
xchg
cltd
jno
std
dec
outsb
inc
or
repz
insb
pop
fistpll
push
stc
dec
scas
out
pop
sbb
pushf
xor
mov
dec
fnstenv
push
xchg
mov
cli
lods
mov
outsl
outsl
cmp
cmp
repnz
hlt
je
xor
push
loop
or
fidivrl
add
test
jecxz
mov
hlt
pop
rol
je
xchg
imul
sahf
leave
mov
clc
cmp
xchg
aad
movups
rorl
lcall
jo
aaa
into
xlat
push
lahf
leave
out
int3
das
mov
dec
adc
add
xor
sub
insl
dec
xchg
ja
outsb
pop
jle
cwtl
daa
and
cld
cmpsb
mov
andb
sarb
incl
lea
pushf
out
xchg
jl
bnd
inc
xchg
xchg
test
mov
inc
add
js
sub
test
cld
fwait
sub
cmp
add
xchg
jmp
shrl
add
shr
push
gs
cmc
cwtl
aad
loop
sahf
movsl
std
in
mov
jno
gs
dec
fnstenv
dec
dec
outsb
sbb
mov
push
inc
arpl
loope
aas
mov
stc
cld
mov
stc
sarl
pop
shll
jae,pn
rorl
and
sbb
xlat
adc
mov
mov
lret
fimull
jnp
jb
out
push
cli
jb,pt
nop
dec
mov
or
pop
imul
xchg
sbb
jb
gs
pop
out
or
cmp
jle
xchg
add
pop
in
iret
push
xor
fistps
xor
mov
fwait
push
cmpsb
test
aaa
cmp
fists
scas
out
mov
rcll
push
inc
mov
movsb
popa
dec
dec
les
pop
popa
rorb
xchg
call
xchg
cmp
mov
sub
mov
sub
hlt
and
rclb
fildl
or
insb
outsl
lds
imul
lret
pop
mov
sub
jnp
cs
adc
pop
sub
dec
or
ret
cmp
movsl
cmp
dec
xchg
pop
xor
mov
imul
enter
dec
mov
push
pop
adcl
sub
jle
cmp
add
jne
push
adc
imul
aad
push
fs
mov
repz
cmpsb
mov
mov
cli
pop
aam
neg
movsl
adc
fbld
sbb
xchg
ljmp
xchg
sub
sub
jno
out
jne
push
insl
sbb
dec
cmp
rcl
xchg
xchg
mov
inc
adc
xor
shlb
pop
mov
adc
sbbb
test
aam
hlt
nop
xchg
imul
sub
push
inc
pop
nop
and
mov
stc
out
mov
in
pusha
jo
adc
andb
int
xlat
ret
sub
adc
lcall
mov
mov
das
jnp
icebp
leave
jb
mov
mov
repnz
je
or
bound
cmp
cld
int
add
mov
mov
push
and
in
jns
shll
cwtl
lret
jb
lahf
dec
jnp
aaa
fldenv
cmp
nop
jno
push
cmc
lret
jmp
or
insl
loop
insl
leave
stc
jbe
xor
mov
je
sti
shl
aas
mov
addr16
jnp
lcall
int3
and
mov
stos
mov
cwtl
jl
stos
lret
mov
fstpl
pop
dec
pop
mov
adc
cmp
xor
dec
fwait
push
mov
sbb
in
call
jge
sbb
cltd
push
rorb
pop
sub
in
pop
les
pop
inc
or
out
pop
and
inc
mov
mov
sahf
pop
shrl
cld
mov
inc
loopne
lods
fdivs
lock
and
repz
out
movsb
pop
sub
add
pushf
sub
jg,pt
mov
int3
stos
call
aaa
xchg
sub
jnp
pop
sti
adc
mov
into
das
mov
rcrl
jb
dec
sbb
adc
in
inc
push
mov
mov
cmp
clc
mov
mov
dec
xchg
xor
mov
clc
and
cltd
icebp
add
push
jne
flds
and
dec
sub
sub
cli
xor
shrl
mov
xchg
pop
sti
inc
inc
or
push
cmp
mov
dec
scas
pop
dec
xchg
sbb
jnp
ds
or
icebp
xor
lret
sar
or
add
push
dec
lods
push
test
add
addr16
inc
xchg
push
jb
imul
cmpsb
or
cs
pop
ljmp
fsubrs
cmp
aas
pop
jmp
mov
push
cwtl
out
push
shll
or
xchg
push
rorb
out
icebp
dec
test
add
fdivl
and
inc
outsb
xchg
loope
js
fnsave
jno
inc
in
lret
and
and
push
lahf
or
in
sti
sbb
xchg
jbe
test
push
sub
jne
ss
loop
cltd
or
cmp
fsubrs
inc
insl
pop
sub
xlat
inc
js
data16
push
pushf
jle
int3
lret
jle
push
push
iret
test
xor
add
insl
lcall
aas
fs
outsl
sub
lea
iret
mov
pop
ret
add
cmc
mov
or
add
jg
lock
cli
or
mov
xlat
rorb
movsb
cmc
sub
xor
or
adc
mov
add
or
push
inc
sub
pop
or
cmp
insb
loope
push
arpl
push
mov
scas
mov
stos
leave
mov
outsl
popa
inc
lods
pop
push
pop
mov
stos
mov
loope
test
loopne
lret
adc
adc
xchg
rorl
shl
adc
cmp
mov
pop
ficoml
lcall
sbb
jp
xlat
je
insl
and
xchg
jmp
push
inc
sahf
push
in
ja
cmp
aas
add
inc
add
jnp
movsl
inc
cli
lods
push
ljmp
pusha
popf
test
icebp
mov
in
arpl
stc
and
sarb
sbb
cli
mov
gs
pop
inc
hlt
or
jbe
ds
into
dec
aad
ljmp
imulb
dec
into
repnz
je
mov
add
mov
pop
xchg
gs
sahf
int
xchg
mov
add
jp,pn
lahf
fdivrl
ret
cmpsb
icebp
xor
fcoml
pop
movsl
or
xor
ljmp
xor
sbb
outsb
stc
insl
outsb
incl
aam
arpl
xchg
rcr
pop
icebp
mov
rcl
adc
in
int3
or
jo
js
mov
xchg
adc
bound
orl
or
int3
xchg
mov
dec
mov
clc
std
sub
sbb
clc
xor
test
jmp
adc
fldenv
insl
cmp
hlt
lea
lods
xor
test
std
jns
mov
mov
andl
xchg
push
mov
ja
sub
sub
mov
out
mov
shll
aam
dec
dec
mov
ljmp
pop
xchg
lock
or
lahf
jle
in
bound
out
fdivrl
dec
test
xchg
add
pop
std
cmp
jl
cmp
or
sub
xchg
movsb
pusha
adc
adc
ret
add
cmpsl
xchg
push
pop
fistpll
add
add
sarw
mov
xchg
jns
cltd
in
push
stos
out
mov
ds
dec
pop
push
pusha
js
bound
sub
sahf
cmp
rolb
enter
cwtl
imul
ss
push
mov
sbb
xchg
pop
mov
mov
lds
cmp
enter
loop
adc
out
sti
push
mov
std
ja
push
cmp
jecxz
xchg
aas
in
dec
lret
lret
sub
jne
push
das
pop
add
hlt
jmp
jae
scas
push
adc
std
loopne
ficomps
lods
outsl
loopne
stos
xchg
dec
leave
in
loope
ss
add
jl
inc
jge
retw
xor
jge
rcrb
sbbb
push
out
lret
mov
sbb
mov
mov
in
push
inc
pop
test
xchg
sub
add
pusha
inc
mov
add
rolb
sbb
fwait
inc
or
mov
imul
pop
js
jbe
in
mov
cli
pop
das
cltd
cwtl
jae
test
insl
adc
jnp
jp
sti
popf
aas
inc
out
and
hlt
cld
ret
popf
cmp
fisttpl
add
mov
adc
inc
push
jae
divl
pop
stos
int3
sub
xorb
push
outsb
adc
xorb
cmpsl
test
mov
cwtl
negb
pop
cmp
test
jg
fmull
jp
mov
xchg
arpl
xchg
std
sti
mov
mov
mov
pop
jp
mov
imul
fdivrs
jge
stos
jnp
fimuls
or
adc
lock
add
inc
jge
adc
aaa
pop
xchg
xor
out
fidivrs
mov
mov
popa
outsl
mov
jb
mov
adc
and
xlat
and
ja
cmc
mov
fisubrl
pop
in
dec
jns
cld
ret
test
mov
adc
cs
dec
jb
sbb
out
shrb
jmp
leave
push
add
bound
xchg
aas
and
mov
mov
jp
push
and
cmp
fistps
jp
jp
push
and
clc
insl
test
sti
pop
or
subl
test
jae
fcoms
jae
dec
adc
daa
inc
dec
cmp
cmp
ds
test
cmp
lret
das
out
pop
insl
sub
jns
outsl
and
mov
sub
push
and
xor
psrad
imul
es
imul
lods
js
pop
mov
in
repnz
pop
or
or
inc
loopne
lods
pop
adc
push
imul
adc
jge
cli
xchg
pop
repnz
cmpsb
mov
sbb
mov
je
das
int
pop
rcll
mov
outsl
leave
jl
insl
cld
std
or
fidivrl
adc
nop
or
mov
pop
and
mov
stc
jae
cmpl
mov
add
out
rolb
insb
mov
fnstenv
xchg
sub
mov
pop
and
push
mov
shl
adc
mov
push
push
push
pop
push
gs
es
lods
sub
mov
dec
incl
jb
jae
call
mov
xor
add
pusha
mov
and
mov
sub
xor
aad
and
sahf
and
cmc
mov
aam
mov
inc
outsl
jnp
push
sbb
or
test
iret
mov
pop
repnz
mov
iret
fisubl
xlat
test
clc
jge
pop
mov
mov
stc
jg
and
sub
cli
scas
cltd
rolb
push
subl
and
mov
jge
lods
jnp
cmp
xchg
xor
xchg
in
or
stc
out
mov
popa
pop
sub
ret
mov
pop
push
stos
inc
and
jb
iret
xchg
mov
mov
out
loopne
and
leave
pushf
popf
in
popf
adc
movsb
mov
pop
pop
test
insl
loopne
rcr
cltd
inc
pop
subb
jmp
sub
push
popa
sub
push
loope
add
xor
js
pushf
add
mov
les
in
push
jge
pop
adc
push
or
inc
add
pop
les
sti
ljmp
loop,pn
pop
and
in
push
pusha
sub
cmp
dec
or
push
push
lret
mov
xchg
and
mov
adc
mov
in
pop
cltd
stos
mov
pushf
rcll
mov
scas
iret
stos
test
lock
push
jl
sahf
sub
imul
push
cmpl
cltd
hlt
sub
push
adc
repz
jecxz
mov
adc
bound
push
repz
xor
push
int
push
cmc
push
lcall
outsl
mov
or
rolb
scas
adc
pop
or
push
sub
sbb
mov
mov
mov
mov
jb
add
popf
push
lods
scas
jmp
mov
push
add
mov
inc
and
adc
mov
adc
imul
inc
cmp
adc
sbb
cmp
mov
jp
out
loope
shll
sbb
dec
or
jb
mov
or
std
jb
push
clc
mov
out
or
or
sbb
push
xchg
stos
and
dec
xchg
stos
push
sti
push
add
dec
lcall
test
sbb
stos
jne
sbb
lods
mov
pop
lret
xor
adc
notb
sbb
mov
add
inc
repnz
mov
jle
in
stos
lahf
add
ja
inc
xor
sub
mov
fcmovnu
or
jb
into
outsl
xorb
or
test
daa
add
not
fisttpl
shrb
sub
movsl
outsb
and
push
hlt
mov
sub
push
sub
adc
push
popa
push
xor
inc
pop
mov
jecxz
aaa
in
sub
push
icebp
xchg
adc
xchg
es
or
aad
xchg
daa
insb
pop
cmp
daa
je
sbb
or
testb
pushf
inc
add
cmpsl
mov
mov
and
out
inc
xor
push
cmpsb
pop
out
sbb
add
rcrl
sbb
inc
mov
xor
push
pop
and
fwait
outsb
xor
jb
sbb
sbb
es
jge
lds
push
push
mov
scas
or
dec
cli
aad
adc
stos
push
leave
pop
mov
and
and
rorl
decb
adc
outsb
cltd
daa
sub
and
and
pop
scas
mov
add
inc
test
xchg
mov
test
pop
out
loop
xchg
lods
and
jmp
sbb
enter
xchg
scas
xchg
psrad
mov
sarl
into
adc
sub
out
mov
loope
lret
orl
out
jecxz
sub
pop
je
imul
push
jecxz
sbb
cmp
jmp
jae
pop
lock
aaa
divb
gs
test
sbb
es
out
xlat
jbe
cmpsb
imul
shl
dec
cmp
into
loope
stc
cmp
movsb
loope
nop
sub
ljmp
dec
xor
mov
jae
js
data16
test
insb
call
and
xorl
pop
xor
inc
dec
xchg
adc
mov
add
aad
mov
ljmp
mov
sbb
aas
aaa
cmp
and
mov
fcmovbe
int
sub
cmp
dec
out
sbb
cwtl
test
in
push
and
inc
pop
inc
pop
jne
nop
enter
jno
ss
xor
aad
push
mov
mov
movsl
and
jmp
jno
inc
mov
mov
xor
les
fucom
aaa
cmc
sti
in
dec
dec
mov
xlat
mov
pop
xchg
dec
test
mov
gs
jns
out
inc
sub
xchg
out
mov
fldcw
pop
int
out
sbb
fsubl
adcl
loopne
std
lods
int
mov
out
rol
mov
mov
mov
stc
repz
mov
cmp
ret
ja
jne
sbb
test
sbb
mov
mov
aad
xchg
jge
adc
push
sub
aas
pop
xchg
add
fsub
push
mov
imul
stos
fistpll
out
inc
cli
mov
sbb
pusha
add
pop
dec
call
mov
jb
hlt
xor
inc
enter
out
sarb
pop
jg
sti
push
sbb
sub
bound
cmp
lock
into
stos
cltd
inc
lock
lock
sbb
xchg
pop
mov
orl
adc
aas
cltd
push
dec
clc
dec
push
dec
sbb
int3
lds
out
inc
add
mov
test
cmp
mov
inc
outsb
cli
into
loope
loopne
test
addr16
ret
push
mov
cmp
mov
push
push
es
fstpt
loope
hlt
xchg
mov
out
setnp
roll
bound
es
sub
xchg
iret
fldenv
push
pop
xor
push
sbb
imul
stos
movsl
cmp
pop
cmp
adc
sbb
and
xchg
and
pop
stc
dec
mov
fisubs
mov
movsb
lret
dec
fisttpl
cmpb
pop
ret
push
shll
sub
sub
and
testb
sub
mov
sbb
mov
ret
add
fisubs
mov
jo
sub
and
cmp
divps
mov
cmp
and
mov
adc
push
cmp
mov
enter
fisttpll
mov
ds
out
inc
cmp
push
xor
jge
ljmp
std
cmp
lea
scas
pop
lcall
add
lcall
fmuls
ret
outsb
nop
out
and
push
mov
incl
jl
enter
lcall
leave
int3
xchg
xchg
sub
sub
xor
test
out
andl
aas
cmpsb
ss
sub
cmpb
mov
mov
imul
dec
cli
xor
pop
pushf
push
movsb
in
fisttps
xor
and
jp
popa
push
mov
jl
cmp
lds
mov
xor
and
cmp
or
enter
out
lds
popf
popa
sbb
js
and
cltd
mov
int3
daa
scas
inc
aam
fidivrs
push
cltd
out
adc
jb
movsl
lods
pushf
adc
sub
cld
push
stos
testl
xchg
pop
sbb
hlt
mov
mov
mov
push
mov
xchg
cld
add
dec
cs
dec
int
cmp
insl
cmp
aad
pop
mov
push
xor
es
mov
inc
js
cli
mov
mov
test
fcmovnbe
mov
cwtl
add
in
and
in
insl
fwait
sub
call
push
push
jle
jge
repnz
cmp
cmp
ficompl
pushf
cmp
adc
jbe
jo
stos
pop
dec
outsb
movsl
and
fucomip
shll
xorl
inc
in
cmc
loope
push
mov
xchg
sbb
fcomps
dec
adc
jle
xor
lds
mov
mov
push
inc
hlt
insl
and
insl
popa
sbb
mov
mov
imul
sbb
lcall
lods
adc
adc
lea
movsl
aaa
inc
xor
inc
cwtl
fwait
pop
in
push
dec
addr16
testl
lds
mov
mov
pop
rolb
jmp
xor
add
data16
add
jbe
mov
jns
ljmp
nop
mov
jg
mov
cwtl
scas
sbb
cmpsl
cmpsb
xchg
add
movsl
stos
adc
stos
xor
in
sbb
or
xor
or
aam
pop
jne
pop
int
pop
out
jnp
ds
or
das
sub
cli
jnp
xorl
xor
sbb
pushf
add
mov
repnz
loop
loopne,pt
aad
das
les
shl
jns
imul
jl
adc
rcrb
mov
adc
adc
out
inc
inc
aaa
stos
dec
xchg
loop
fs
outsl
add
mov
mov
sahf
push
mov
out
cmp
imul
stos
idiv
rcrl
mov
jo
inc
pop
sti
dec
push
pop
andb
mov
fistpl
xor
sub
sub
inc
jnp
sbb
jp
insl
icebp
inc
and
ljmp
fdivrl
enter
sbb
xchg
mov
aam
or
mov
movsb
sub
xor
xchg
jl
add
clc
aam
ficomps
push
fisubl
sahf
and
cmp
pop
outsb
add
enter
inc
push
adc
aas
mov
mov
xor
mov
add
nop
ret
jge
or
ret
mov
cmp
jo
out
adc
loope
cmpb
or
or
es
pop
dec
aas
mov
repz
popa
dec
outsb
fsubl
es
stos
sbb
cmp
xor
nop
push
add
pop
pop
fcmovne
inc
nop
sub
mov
jmp
mov
loopne
mov
pop
mov
jns
mov
and
clc
es
adc
sub
add
sub
pop
addr16
popa
mov
mov
push
or
add
or
rcrb
jl
shr
sub
sbbb
jg
xchg
fsub
push
sbb
cmp
cmpsb
adc
push
inc
sub
fiadds
mov
lret
icebp
and
imul
push
sbb
out
pop
lret
ficomps
clc
mov
mov
jecxz
pop
xchg
inc
mov
insb
and
xchg
adc
in
outsb
ja
or
mov
inc
cmpsl
fidivl
movsl
fisubs
sti
fwait
out
fisttpll
push
adc
adc
cmp
adc
daa
sub
data16
xchg
std
je
ret
test
sti
aas
stos
scas
xchg
lret
ret
shll
js
bndstx
in
js
bound
loope
mov
outsl
pop
jo
pop
jbe
pushf
jle
or
xor
loopne
scas
out
js
jne
movsl
xor
fldcw
inc
mov
idiv
scas
jl
dec
clc
bnd
outsb
clc
push
dec
mov
jbe
ljmp
xchg
or
mov
mov
push
pop
shll
push
outsl
ja
xor
stos
sbbl
inc
imul
push
stc
mov
dec
into
cmp
sub
inc
aas
jnp
mov
mov
in
mov
repnz
sub
test
sti
xor
sub
sahf
pusha
imul
ret
xor
cmp
clc
jo
mov
xchg
jge
and
outsb
stos
mov
adc
xchg
ljmp
mov
scas
enter
mov
fldenv
pop
jno
sub
repz
dec
lock
push
inc
cs
lcall
jbe
xor
adc
lahf
loop
frstor
cmc
js
xchg
or
xor
cmp
inc
loopne
rcl
cmp
pop
bound
sub
sub
in
xor
or
xor
add
or
subb
mov
das
jg
mov
aad
mov
into
add
popf
adc
in
pop
adc
pop
sahf
cmp
push
dec
or
outsb
stos
rcll
adc
jmp
and
sahf
hlt
out
sub
or
or
xchg
sbb
fcoml
stos
push
pop
lods
cmp
cs
iret
mov
cwtl
xor
jge
jge
inc
xchg
mov
pop
insb
lock
dec
test
ds
pop
ficompl
lock
scas
jge
jb
in
les
cwtl
adc
in
or
aas
test
fwait
sbb
jb
lock
mov
test
inc
aam
out
insl
cmpsl
sbb
loop
xor
lock
cmp
cmc
into
and
push
shll
in
loop
popf
xlat
dec
cli
mov
cmp
jns
in
xchg
aas
push
jge
insb
pusha
add
or
mov
jge
push
stos
dec
mov
les
ljmp
arpl
decb
and
insb
or
sub
lea
xchg
adc
jo
and
fstpl
mov
icebp
add
jl
jb
mov
or
stos
addr16
pop
pushf
in
insb
dec
xchg
aas
xchg
xchg
xchg
sub
push
push
lret
mov
test
call
fs
jno
fsubs
js
insb
jbe
dec
lods
negl
cld
xlat
in
mov
call
fldt
sarl
mov
xor
popl
imul
pop
in
stos
sub
cmp
clc
lret
ljmp
stos
add
jge
add
mov
movsb
mov
cmp
roll
sub
mov
push
add
aam
out
sub
sub
xchg
cmp
xor
mov
pop
push
mov
int3
push
push
loopne
inc
enter
dec
scas
imul
negl
les
push
div
push
jo
or
jg
mov
bound
cs
ljmp
idivl
or
inc
icebp
out
fistpl
cs
in
or
loop
iret
outsl
dec
sarb
into
rclb
mov
flds
mov
add
xchg
fsts
ja
aam
mov
out
addr16
pop
xor
push
outsb
sub
les
dec
xlat
lods
shr
iret
jae
push
subps
mov
xlat
cmp
cli
sub
mov
in
sbb
push
lods
sub
cmp
gs
out
add
pop
lret
push
mov
out
mov
pop
test
scas
xchg
fadds
xchg
xor
lds
loopne
scas
mov
cmp
cmpsb
cld
or
data16
and
cs
or
jbe
add
pop
mov
lods
xchg
xchg
adc
push
adc
xor
lahf
dec
sti
sbb
push
fadds
fiaddl
adc
adc
test
mov
mov
mov
dec
sub
cmp
or
int3
roll
lret
jmp
inc
out
lcall
push
mov
je
dec
rorb
push
data16
loop
dec
inc
scas
ljmp
je
xchg
enter
pop
fsubl
test
jecxz
jne
sub
push
fidivl
sbbl
mov
inc
aam
and
addr16
mov
sub
out
mov
sbb
test
inc
jecxz
mov
adc
inc
insl
mov
stos
cmp
outsl
div
mov
rcll
sarl
imul
test
dec
ss
cmp
cmpsl
push
out
addr16
orb
insl
jecxz
mov
int
incl
add
jle
add
xchg
cmp
mov
loope
data16
pop
xchg
push
shl
and
pfadd
out
jb
icebp
ss
fldl
dec
cmp
fisubl
cli
jl
sahf
sub
jl
push
mov
in
movsl
addb
cmp
jns
pop
ret
bound
mov
adc
dec
dec
xchg
lcall
fadds
mov
fwait
ret
push
negb
popf
loope
jne
inc
jge
hlt
test
int
pusha
add
or
xor
sarb
stc
adc
mov
sub
mov
hlt
in
mov
cs
insb
aas
or
hlt
repz
adc
addr16
inc
jb
jne
lods
push
mov
lret
xchg
pushf
adc
daa
enter
mov
shll
xchg
clc
pop
mov
test
movsl
inc
cmpsl
movsl
in
xchg
dec
xor
xor
pop
mov
cltd
hlt
nop
dec
ret
jae
xchg
aaa
cmp
xchg
jl
push
adc
pop
or
icebp
xlat
iret
add
or
out
sbb
jp
xor
cmpsl
cmc
dec
inc
xchg
in
pop
loopne
sti
cltd
mov
mov
inc
stc
add
push
xor
ret
es
ss
xchg
lods
adc
ss
and
xor
in
inc
push
push
into
mov
mov
js
and
mov
insb
jge
cwtl
xor
jmp
fadds
mov
sbb
leave
or
loopne
xchg
popf
ljmp
movsb
dec
loop
into
lea
xlat
dec
push
fwait
cmp
sahf
movsb
sti
jge
test
push
aas
jb
inc
lcall
call
push
notb
stc
shlb
jg
mov
andb
push
add
cli
push
add
jg
test
inc
push
push
in
mov
mov
xchg
sub
or
and
mov
je
fidivrl
mov
stc
mov
int
outsb
fldenv
hlt
push
sub
addr16
jo
daa
inc
hlt
add
into
mov
in
sti
dec
pop
sbb
mov
jmp
int
ja
adc
cmp
imul
das
dec
jnp
call
shlb
add
mov
sbb
les
ja
loop
fs
in
enter
sbbb
xchg
mov
fs
pop
cmpsb
dec
mov
ret
scas
imulb
mov
std
leave
xchg
dec
imull
call
sub
add
push
sbb
call
mov
xchg
lods
adc
popf
sbb
push
cwtl
dec
insb
push
fdivrl
mov
inc
stos
push
push
arpl
jno
sbb
pop
push
xchg
mov
pushf
push
into
jge
shl
jae
add
add
dec
mov
add
bt
icebp
mov
fucom
popf
aam
jno
and
adc
pop
or
pusha
mov
shll
xor
mov
lods
lcall
jne
inc
mov
add
inc
or
adc
aad
sbb
adc
add
push
push
ja
push
jp
mov
cwtl
xchg
xchg
das
xchg
sub
pop
add
loop
mov
mov
and
call
push
loope
cmc
addb
scas
or
add
fdivrl
fsts
fsubs
scas
mov
jge
adc
inc
lcall
sbb
cmp
and
mov
movsl
push
sti
fcompl
sub
or
adc
les
mov
in
jl
dec
dec
adc
enter
fcomps
les
out
xchg
movsb
shlb
int
dec
pop
cmp
leave
lock
out
lock
mov
dec
les
rclb
pop
push
loop
sub
adc
dec
fwait
cmpsb
in
or
insl
cmovb
or
cld
jbe
xor
mov
push
push
cmp
roll
lahf
clc
pop
push
cmp
sub
arpl
ss
sbb
cmp
jmp
fisubl
aad
xchg
pop
stc
mov
pop
decb
cwtl
jbe
xlat
pop
xchg
mov
pop
xchg
fwait
pop
cmp
repnz
mov
lcall
jmp
cld
push
fisubrs
pop
aaa
fucomi
daa
xor
push
dec
or
fwait
test
dec
insl
in
loopne
repnz
inc
dec
or
lret
insb
mov
cmp
mov
xor
cmp
and
push
pop
mov
mov
mov
lea
lods
gs
das
testb
mov
sbb
xchg
test
sbb
mov
insl
adc
pop
nop
enter
mov
jmp
daa
sub
adc
xchg
test
mov
cwtl
mov
jnp
jb
jl
cmc
and
cmpsb
bound
es
push
gs
lahf
addr16
push
adc
imul
dec
and
adc
clc
pop
xor
sbb
pop
inc
mov
fdivr
push
mov
jae
dec
inc
cmp
jae
push
dec
adc
ficoms
pop
xor
sub
rcrl
mov
in
mov
sub
ljmp
cmp
mov
jg
rol
ret
or
js
jb
sbb
jl
rcll
pop
fsubrl
inc
cmpsb
mov
inc
ret
aaa
cltd
adc
jbe
cmp
jnp
pop
mov
bound
dec
sub
stos
push
mov
or
in
cmp
push
inc
aas
outsl
cmp
inc
dec
scas
subw
je
loope
in
loopne
push
cmp
xor
stc
fnstcw
dec
mov
sbb
insl
xchg
sahf
les
in
fwait
cmp
bnd
movsl
ficompl
pop
inc
cmp
xor
pop
repnz
push
pop
loopne
xchg
rcrb
ljmp
jne
nop
rorl
stc
cmc
mov
cmc
mov
mov
xchg
xchg
xor
lcall
jne
popa
xchg
iret
aas
nop
in
and
adc
aaa
cmpsb
mov
add
jecxz
add
inc
es
fs
clc
jo
enter
xchg
cmp
arpl
push
loope
cmp
rclb
mov
out
les
mov
int3
lahf
mov
mov
icebp
sub
out
mov
sub
testl
addr16
outsb
sbb
mov
outsl
hlt
xchg
loope
enter
push
lahf
insl
cmp
sbb
dec
decb
aad
js
cmp
pop
in
jmp
pop
mov
add
or
out
adc
jp
cld
lock
out
sbb
or
nop
pop
pushf
test
out
mov
mov
push
in
jl
cli
pop
scas
xchg
cld
push
pop
lods
cld
in
out
fnstenv
add
mov
popf
mov
lret
shrl
adc
scas
lcall
shlb
push
into
data16
sub
xchg
sti
lods
xor
inc
mov
or
and
jmp
and
mov
push
pusha
or
pop
lock
add
cwtl
lea
dec
sub
mov
fwait
push
test
mov
loop
mov
mov
cmp
sbb
xor
inc
push
or
ss
out
jnp
cmpsb
leave
push
lahf
push
mov
dec
pop
xchg
mov
pop
xorb
xchg
inc
and
inc
out
cmpsb
lcall
into
push
push
scas
jmp
push
fsubrl
pop
and
xchg
cmp
xor
jb
jmp
sbb
stc
push
and
shrl
movb
and
test
cmp
cmp
cltd
scas
mov
push
dec
aad
lea
call
xor
std
test
ljmp
sbb
mov
or
stos
icebp
mov
lcall
adc
push
ss
push
push
out
ljmp
mov
fcom
data16
lret
mov
cli
sub
stos
sub
rcr
stos
lock
jp
daa
fnsave
stc
mov
push
pop
mov
outsl
fsubr
xchg
pushf
scas
inc
lcall
sbbl
in
jne
fsubrs
sti
inc
xorb
mov
cwtl
sbbl
or
add
cmp
scas
lea
stc
test
and
dec
jp
les
push
enter
mov
fmuls
mov
mov
pop
jne
jo
leave
mov
push
dec
adc
hlt
aaa
loope
pop
adc
mov
movsl
jo
mov
mov
aad
out
aaa
insb
jo
outsl
adc
xor
xor
xchg
add
sbb
xchg
sbb
pop
aam
dec
test
mov
cmp
or
add
call
mov
leave
adc
in
add
imul
jl
scas
rorb
inc
je
dec
adc
xlat
std
sub
int
dec
scas
push
enter
xchg
fadds
xchg
cli
mov
int
addr16
incl
pop
mov
jmp
sub
call
stos
ljmp
jge
xchg
test
mov
jns
js
adc
mov
adc
and
lahf
mov
jne
cmp
fcomps
outsb
iret
or
out
xchg
lock
popa
mov
fistpl
fs
pop
and
imul
push
add
test
lods
xor
jae
orb
cld
or
or
pop
inc
hlt
popa
test
fsubrp
mov
pop
fdivs
jae
popa
outsb
xchg
mov
pop
and
pop
lock
adc
fisubs
lods
and
or
mov
subb
jae
xlat
mov
loopne
jne
xor
rcr
pop
sub
loopne
add
ja
pop
iret
je
mov
add
ja
test
adc
orl
pop
out
popa
sbb
scas
mov
push
xchg
xchg
adc
test
push
xchg
dec
movsl
sub
jo
jb
jnp
iret
dec
ljmp
in
sbb
xchg
mov
jg
fldl
adc
mul
add
enter
mov
mov
xor
push
stos
push
repnz
stos
xor
lahf
jnp
or
pop
lret
jne
xor
push
je
addb
cmpsl
ja
aad
shll
notb
push
pusha
iret
divb
and
loopne
mov
and
divl
add
xchg
xlat
adc
shlb
push
pcmpgtb
adc
or
and
rorb
jo
into
cs
pop
mov
imulb
xor
mov
fld
cmp
pop
mov
inc
in
xchg
or
cmpsl
clc
xor
dec
jae
mov
adc
jmp
and
jno
js
stc
data16
and
pop
cltd
mov
data16
out
push
dec
mov
push
ja,pn
cmc
or
dec
lcall
shll
les
cmpsl
leave
fadd
inc
push
xchg
add
call
insb
cmp
jo
push
lds
sbb
dec
icebp
mov
pop
push
jecxz
or
mov
mov
aam
xchg
ljmp
cmpsl
clc
adc
or
mov
mov
jbe
movsl
ret
rolb
movl
fildl
jle
or
outsl
bound
sub
mov
mov
je
push
stos
in
adc
mov
lret
adc
push
repz
lret
aad
int3
add
pusha
outsl
or
and
fdivrs
push
adc
cmp
aaa
jno
cltd
loop
dec
test
mov
mov
dec
sbb
sub
scas
mov
lds
push
pop
call
inc
add
rorb
into
mov
orb
adc
inc
or
je
sarb
sbb
mov
sub
sbb
sub
lahf
pop
xchg
fst
push
ja
jne
jp
idiv
mov
dec
inc
es
loop
add
mov
lods
and
mov
or
mov
pushf
pop
inc
mov
push
jg
cwtl
repz
cli
lcall
xchg
arpl
pop
push
dec
out
mov
mov
gs
xlat
fsubrs
cmp
loope
push
test
push
stos
add
adc
daa
xor
fwait
and
mov
push
sbb
sbb
stos
jnp
lcall
inc
movsb
sbb
test
sbb
add
jbe
xor
jo
movsb
push
push
or
movsb
inc
push
lahf
jb
pop
sbb
js
xor
mov
pop
iret
xor
lods
inc
and
repnz
in
jns
popf
fisubrl
mov
inc
inc
lcall
enter
loop
mov
in
add
xor
iret
bound
fdivrl
jle
mov
les
test
aaa
push
test
insb
jl
mov
fdivl
outsb
mov
add
xchg
xchg
inc
cmp
add
scas
in
inc
add
dec
shr
fs
aaa
in
and
jne
pop
xchg
xor
fmul
lods
into
xorl
flds
test
dec
lret
lods
push
or
or
call
jg
sub
flds
push
and
fcomps
adcl
sub
mov
sbb
scas
and
xor
in
pop
add
and
pop
jns
test
dec
xchg
fcomip
shll
imul
adc
mov
outsb
jno
ja
xchg
xor
mov
out
mov
stos
std
and
dec
jno,pn
mov
cwtl
or
pushf
mov
lcall
jbe
pop
xorb
cmpl
sbb
sbb
push
jnp
adc
movsl
adc
inc
stos
jo
or
adc
movsl
pop
jl
mov
es
jno
adc
push
repz
cmp
push
and
dec
sub
xchg
lahf
jl
dec
jbe
xorl
xchg
dec
sbb
mov
dec
jge
and
mov
push
dec
insl
adc
mov
fidivrl
xchg
pop
add
pop
lcall
rol
add
test
or
mov
popf
lods
dec
pop
sub
js
int
stos
jnp
icebp
repz
and
mov
pop
jo
repnz
jb
es
test
adc
shll
sub
pop
jne
mov
pop
mov
sub
out
push
scas
test
insb
fildll
sbb
clc
out
fisttpll
xchg
or
and
lea
sbb
out
mulb
ret
pop
cli
mov
mov
and
pop
sub
cltd
sub
orb
loopne
cmc
arpl
out
inc
mov
add
mov
rcl
stos
jmp
or
cmpsl
imulb
pop
inc
push
outsl
cmc
pop
cli
sub
jge
adc
cmp
or
sbb
jl
mov
ja
rcl
push
mov
add
cmp
xchg
js
insb
das
pop
cltd
repz
or
divl
mov
cmp
mov
xbegin
imul
fdivs
aas
leave
icebp
rolb
lret
lods
out
and
enterw
scas
test
mov
repnz
inc
sbb
push
mov
in
cmp
mov
push
mov
arpl
imul
ret
fs
outsl
dec
fwait
add
push
cld
fwait
jne
pop
shll
inc
ljmp
fwait
dec
iret
cmp
add
xlat
push
push
inc
and
shl
or
pop
int3
in
loop
insl
mov
cmpsb
adc
ljmp
in
mov
lods
sti
aad
fwait
ss
shll
fstpl
mov
add
push
dec
scas
jg
ret
into
sarl
mov
inc
or
fistps
push
sub
fnstenv
jmp
dec
fisubrs
pusha
add
xchg
lock
sub
fnstsw
ja
int
mov
xchg
andb
sahf
xchg
jl
mov
scas
sbb
and
pop
insb
std
bound
and
pop
or
loop
sub
dec
lcall
daa
xor
fwait
cwtl
push
sarb
popf
inc
pop
cmpsl
inc
cmp
xor
outsl
xchg
mov
sbb
adc
sbb
jns
stos
jb
aad
xchg
sbb
lds
int3
dec
xchg
es
jge
loope
xchg
out
stos
lcall
aas
mov
mov
enter
movsl
mov
cltd
rol
push
push
shl
mov
gs
mov
in
lret
jae
pop
cmc
or
inc
pop
or
cld
in
cmp
mov
jmp
and
shrb
and
jl
jg
jbe
pop
jl
sbb
fadds
pop
aam
loope
lcall
xchg
aam
lahf
pusha
cwtl
stos
out
outsb
mov
push
xchg
or
stos
testl
sub
cmp
mov
cmp
and
push
jg
mov
xacquire
cmc
inc
jmp
or
int
or
cmpsl
xor
divl
js
add
fstpl
pop
cmp
outsb
sub
jge
xchg
ljmp
mov
call
cmpsl
stos
sahf
out
repz
movsl
xor
mov
movsb
mov
std
clc
push
dec
or
lea
ret
lret
ja
rcll
jo
gs
mov
pop
nop
leave
add
dec
test
in
imulb
fists
jbe
push
mov
insl
mov
dec
adc
ljmp
and
push
jle
shlb
ss
jae
and
adc
dec
out
daa
push
jo
ret
popa
pusha
sbb
pushf
mov
fwait
das
js
cmp
shll
pop
push
out
in
loop
push
mov
mov
xor
sub
jg
jnp
cwtl
movsl
push
stos
xchg
out
mov
or
out
sbb
aam
cwtl
mov
jmp
xchg
out
stos
sbb
push
pop
out
push
pop
jp
xchg
int3
push
in
mov
jecxz
cmp
rolb
je
shlb
adc
mov
mov
sbb
in
test
mov
outsb
repnz
repnz
mov
popf
ljmp
ret
jno
es
cwtl
es
pop
stc
sahf
int3
jne
adc
adc
insb
rclb
nop
jb
sbb
adc
mov
push
dec
sub
mov
and
stos
mov
adc
out
cmc
sbbb
cmpsl
add
jno
pop
es
adc
push
cmpsb
nop
icebp
xchg
sub
out
sbb
cmp
adc
mov
pop
jecxz
push
lcall
or
out
cmpl
and
into
pop
call
jecxz
jmp
pop
mov
cli
jg
mov
sbb
mov
inc
stos
lds
inc
fildll
inc
mov
loop
clc
add
adc
and
sbbl
inc
xchg
ja
shrb
out
pop
mov
sti
call
gs
jge
mov
push
jmp
inc
dec
in
and
fs
loopne
je
je
imul
xor
inc
cmp
andl
lds
mov
add
push
mov
aad
ljmp
fisubrl
pop
icebp
into
mov
adcl
mov
add
sbb
cmp
cmp
pushf
icebp
stos
ret
inc
sbb
mov
stos
pop
adc
push
add
cwtl
faddl
lcall
std
dec
arpl
fistl
out
test
lret
daa
data16
mov
jns
mov
ffreep
mov
jecxz
js
push
cmp
adc
mov
and
adc
adc
xchg
push
fcomi
push
push
add
ss
mov
gs
test
je
imul
add
test
faddp
cmpsb
pop
push
test
jb
and
cmpl
lds
andl
mov
push
loop
shll
xchg
inc
inc
ficoms
aas
or
push
inc
popf
cmpsb
fisttpl
xor
push
jbe
add
in
cmp
pushf
aaa
dec
push
sub
or
dec
sti
xchg
push
pop
push
sbb
jo
lret
jbe
pushf
movsb
les
sub
out
sar
mov
aaa
adc
out
sbb
mov
loopne
and
mov
sub
lret
sahf
mov
sub
sbb
inc
aad
repz
shl
adc
pop
in
xor
add
scas
mov
lds
cmp
push
pop
data16
lcall
leave
mov
lret
lret
inc
xchg
inc
push
push
sbb
mov
jle
lock
cmpsl
mov
mov
push
cmp
lret
adc
aam
rcll
test
imul
jecxz
cmpsb
pop
jno
fs
pop
popl
sbb
movsb
pop
jb
cld
pusha
mov
repnz
dec
cli
pop
icebp
sub
orl
nop
xchg
pusha
outsb
mov
rorl
xchg
or
jmp
adcl
mov
fcoml
push
ja
ss
sub
push
cmpsb
xor
sub
xchg
cmpb
mov
in
int
pop
xchg
add
dec
xchg
add
jg
in
pop
ljmp
sahf
xchg
fistl
loopne
mov
add
adc
jp
imul
xchg
clc
lret
xchg
mov
loop
push
jge
outsb
push
movsl
aas
fstpl
mov
cmp
mov
push
sahf
leave
mov
mov
ret
dec
inc
stos
cltd
jo
xor
lcall
enter
sbb
sbb
mov
add
dec
jg
mov
pushw
test
lods
cmpsl
les
into
and
jne
or
loop
neg
js
jo
push
sbb
mov
mov
popa
out
rcrb
mov
mov
arpl
pop
aad
orb
xorb
out
sbb
je
fs
cmp
inc
aaa
movsb
inc
fisubrl
and
divb
or
pop
popa
cmp
lods
arpl
cs
push
or
or
lods
aad
imulb
add
pop
pop
lods
adc
sub
add
mov
xchg
fstpl
imul
dec
outsl
loop
sahf
cmp
add
push
or
jmp
ret
jl
std
les
into
aad
inc
xchg
cmc
aad
cmc
mov
mov
and
jno
mov
int
mov
cmp
not
sbb
sub
add
sbb
push
xor
inc
dec
adc
mov
or
pop
add
fwait
cs
pop
ljmp
hlt
popa
mov
ss
xchg
lds
xchg
jg
push
jmp
jp
fs
enter
pop
ret
inc
inc
jecxz
or
jmp
je
outsl
lods
sub
push
dec
leave
pop
cmpsb
mov
sahf
sbb
mul
or
incl
test
mov
inc
inc
clc
movsl
jp
ret
and
imul
enter
xlat
adc
push
out
repnz
pop
add
lods
pop
fucomi
sbbb
sbbb
adc
repnz
lods
mov
jbe
mov
push
push
enter
call
shll
lret
mov
insl
fcoml
push
mov
dec
mov
push
in
scas
scas
in
xchg
push
divb
outsl
fprem1
push
xor
sub
sub
rclb
pop
jbe
test
lcall
push
inc
nop
fwait
shl
js
rcr
lret
mov
aad
data16
xchg
pop
mov
and
insb
and
sub
sub
loope
cmpsb
add
adc
pop
in
aad
sbb
adc
lahf
push
push
inc
lret
lret
jmp
sub
repnz
jne
fs
shll
xchg
data16
inc
rcrb
pop
xor
lea
fisttpll
int3
lea
xor
inc
cmp
les
imul
add
add
adc
pop
dec
inc
adc
xchg
ja
test
aad
add
lcall
dec
jb
clc
jb
bound
popa
pop
adcb
or
sub
adc
mov
mov
mov
pop
adc
sub
mov
mov
sub
push
pop
jo
clc
pushf
pusha
jle
push
adc
jge
cld
call
or
push
cltd
lods
cmc
push
mov
mov
aad
outsb
repz
sbb
outsb
int3
test
jmp
sbb
sub
addl
aas
enter
mov
inc
cli
ds
dec
clc
enter
pop
add
adc
test
xchg
andb
and
push
sub
pop
enter
xchg
sub
loop
mov
stc
push
mov
xor
mov
imul
mov
insb
scas
sbb
pop
clc
ja
cmp
inc
jle
mov
jmp
leave
or
and
xchg
fcomi
push
add
repz
lret
dec
sub
movsb
xor
xchg
sbb
sub
and
pop
jns
rcll
push
mov
cli
in
or
cmpsl
js
clc
push
add
fucom
les
scas
fimuls
mov
xchg
shll
xchg
lods
and
mov
mov
inc
xchg
and
sub
mov
insl
lods
xorb
pushf
into
mov
xchg
jne
mov
into
mov
xor
or
mov
and
jo
jns
push
mov
lcall
xor
fidivrs
xchg
cli
mov
push
fdivs
jnp
push
push
jl
shlb
sbb
das
jnp
push
xchg
enter
aas
push
and
aad
mov
test
test
jne
xchg
into
push
sarb
clc
or
repz
hlt
stc
push
jb
add
adc
ds
stc
test
or
popf
jne
or
lds
xor
and
pop
mov
and
testb
inc
fstps
push
or
jae
mov
sahf
stos
dec
inc
xor
popf
add
jmp
pop
mov
pop
imul
adc
add
call
cmp
scas
popa
hlt
sbb
dec
pop
sbb
fiadds
hlt
out
add
jne
leave
jl
icebp
stc
push
jb
cmp
push
std
jns
xor
fsts
nop
stc
mov
mov
jo
dec
lods
test
sub
xchg
lds
add
xchg
mov
gs
shlb
mov
pop
xchg
jo
and
and
leave
dec
enter
data16
test
mov
add
ja
adc
lods
pop
sub
es
shll
lret
test
jmp
xchg
adc
pop
and
adc
ss
mov
sbb
inc
jp
into
mov
jmp
pop
xchg
rol
pop
scas
pop
and
pop
fisubrl
jecxz
mov
ja
pop
popa
ret
push
int
jo
mov
cwtl
les
mov
jns
js
arpl
lds
shr
pop
movsl
in
pop
loop
push
loope
cmc
jb
aam
arpl
jns
dec
and
xchg
inc
out
je
sarl
flds
xor
aad
pop
mov
movsl
mov
lock
jg
mov
std
jne
ljmp
leave
int3
movsb
sbb
xor
in
data16
and
stos
lods
negl
mov
push
push
sbb
mov
movsl
sbb
mov
push
lea
dec
cmp
scas
jp
ljmp
iret
sbb
pop
fistl
imul
int
imul
jb
xlat
add
xchg
popa
mov
cmp
adc
mov
arpl
mov
inc
push
push
int3
sahf
imul
or
fs
cmp
mov
lods
outsl
mov
cld
dec
inc
cmp
push
mov
mov
xor
pop
dec
sahf
cmp
test
mov
mov
mov
xchg
loopne
mov
jg
xor
sub
shrb
idiv
mov
mov
or
loope
imull
cli
lods
dec
mov
jecxz
sahf
aad
arpl
xchg
mov
imulb
repnz
daa
lock
push
shrl
loop
mov
fsub
xchg
lret
jle
sbb
ret
adc
push
fwait
inc
test
pusha
stos
push
adc
mov
cmp
xor
fwait
inc
add
rorb
cmp
jmp
fiadds
sbb
mov
and
mov
xor
aaa
cwtl
xchg
out
inc
jecxz
lea
gs
inc
jmp
or
fisttpll
lock
ret
lods
and
stc
xor
mov
push
bound
hlt
dec
ret
cltd
int
sub
std
inc
pop
adc
repnz
dec
mov
push
or
and
stos
cmp
add
je
lea
adc
push
sbbl
imul
sub
lcall
mov
leave
pop
test
jo
mov
cmc
je
mov
push
into
inc
xlat
fsubp
mov
adc
add
rcrb
mov
add
push
sarb
leave
fldcw
xchg
push
cmp
aas
addb
add
cmp
dec
mov
sbb
shl
aad
jp
sar
or
pop
mov
fdivp
sub
notl
jmp
imul
or
imul
loopne
outsl
mov
loopne
mov
loope
cwtl
sbb
in
mov
adc
ret
jb
xlat
push
sub
dec
jae
stos
mov
pop
fcoml
jo
push
inc
rorl
pop
push
sub
popf
lods
imull
fisubs
out
jge
xor
xchg
sti
dec
push
sbb
cmpsb
jae
cltd
add
xor
jb
rcrb
es
repnz
xor
mov
mov
stos
popf
cltd
cmp
jmp
cmc
js
cmp
jecxz
cwtl
test
repz
and
mov
pop
addr16
push
mov
sarb
lret
mov
imul
shl
ret
or
aaa
out
lret
cmp
gs
inc
xor
pop
jle
lret
pushf
lods
inc
sahf
ljmp
lock
inc
fldpi
sub
popa
loop
sbb
jp
cmp
in
mov
mov
xchg
aaa
imul
pusha
mov
pop
ret
jae
stc
stos
mov
test
sub
in
inc
jo
xchg
or
pop
das
movsb
cli
or
jno
int
iret
and
iret
icebp
int3
dec
fistpll
daa
or
mov
cmp
stc
xor
dec
xchg
add
aam
mov
test
inc
sub
mov
xorb
stos
cmp
jbe
in
movsl
jne
mov
inc
lock
js
xchg
mov
adc
pop
daa
repz
push
add
lea
xchg
jno
xchg
addr16
and
insb
mov
lds
xlat
roll
push
fdivl
hlt
or
imul
pop
and
fsubrs
jne
sbb
mov
xlat
push
bound
ljmp
cmpb
pop
stos
sub
fisttpl
mov
les
rcr
or
fbstp
nop
cld
leave
inc
dec
pop
xor
popf
sbb
nop
and
ret
or
fcomps
ja
adc
sub
sti
cmp
scas
adc
mov
insb
pop
inc
mov
xchg
dec
pop
and
sbb
fistps
mul
add
sbb
mov
xor
and
jns
push
dec
dec
or
xchg
in
scas
bound
sti
pop
sbb
dec
fnstsw
adc
iret
test
xor
mov
scas
es
in
int
xor
push
out
les
add
and
dec
adc
adc
out
cld
mov
test
push
mov
rorb
pop
jns
and
pop
mov
std
loop
cmp
and
inc
adc
enter
pop
std
fcoml
addb
dec
lret
out
mov
into
cmp
xchg
mulb
dec
orb
or
mov
push
mov
mov
fdivr
cli
xorb
loopne
pop
pop
lods
mov
leave
mov
shll
loop
incl
cmp
or
dec
lods
sbb
shlb
cmp
xor
pop
ljmp
ror
mov
lret
dec
mov
shlb
or
push
popf
aad
jecxz
popa
mov
pushf
lods
in
addr16
shll
and
add
lock
inc
jne
cmp
xor
movsb
lea
mov
aaa
jno
inc
cmp
aas
cltd
out
pop
cmp
pop
pop
imul
inc
inc
pop
in
push
and
push
ret
inc
xor
fcomi
or
insb
in
mov
push
and
call
push
cli
lret
adc
ss
test
cmp
xor
testl
cwtl
push
dec
pop
push
and
or
mov
add
mov
addb
push
inc
push
popf
out
jg
and
or
int3
hlt
sub
adc
popa
sub
out
xchg
xor
xacquire
fistps
pop
mov
stc
add
mov
or
jne
xor
test
mov
inc
or
repnz
stc
jae
push
das
les
pop
mov
addr16
cmp
stos
cmp
xor
mov
pop
mov
push
call
imul
push
in
sub
xchg
daa
push
sub
enter
pop
xlat
dec
mov
ret
ljmp
pop
stc
add
dec
aaa
das
cli
mov
bound
sti
mov
xchg
mov
pop
dec
jnp
sbb
xor
into
or
xchg
xchg
scas
mov
xor
xchg
pushl
in
ds
adcb
pop
inc
pop
shrl
lds
xchg
ss
sub
and
cli
ja
movsl
stc
lret
cli
outsl
aaa
loope
jns
xlat
dec
filds
sub
sub
add
add
data16
xor
sbb
in
lods
fistpl
into
out
pop
xor
xchg
iret
addr16
ljmp
pop
es
cmp
adc
cs
iret
lahf
lea
mov
addb
mov
sbb
xor
sub
xchg
inc
mov
push
or
ss
ljmp
rcrb
pop
push
and
lds
sub
xchg
sub
add
std
inc
out
repnz
ficomps
adc
movsb
inc
fistl
mov
cltd
scas
jge
inc
push
and
lock
xorb
out
sub
idiv
mov
adc
push
int
xor
out
inc
cmp
cmp
pop
stos
fdivs
dec
xchg
in
outsb
pop
add
xlat
sbb
shrb
adc
sbb
shrl
add
xchg
dec
push
lock
fdivrl
pop
mulb
lods
scas
sbb
sub
add
gs
xor
arpl
das
bound
sar
rolb
icebp
jp
enter
jmp
xchg
std
push
test
push
jb
lds
loop
stos
xor
xchg
inc
push
call
shlb
xchg
cmpsb
insl
insb
hlt
outsl
lret
xchg
aas
xchg
inc
or
inc
mov
push
mov
sbb
mov
sbb
repnz
inc
sarl
pop
jo
popf
sahf
movsb
lahf
inc
xor
mov
sbb
adc
and
push
dec
outsl
out
repz
sub
jmp
xchg
xor
sbb
setge
mov
mov
and
imul
popa
push
fcomip
ja
xor
das
push
setns
cwtl
jbe
jnp
cld
or
in
rcl
jge
jns
push
sub
popf
mov
pop
mov
inc
mov
mov
ljmp
les
ss
stos
in
push
cli
mov
test
mov
adc
ljmp
jns
ret
sub
int
cmp
push
mov
aam
std
xlat
mov
popf
pushf
lods
mov
cmp
or
or
and
rorb
adc
popa
push
lea
outsb
imul
inc
adc
mov
or
mov
jecxz
inc
xor
lcall
push
sbb
out
xchg
mov
clc
in
pop
and
in
mov
and
pop
out
mov
lods
mov
mov
mul
push
xor
xor
mov
xchg
movsb
rcr
jp
pop
fiadds
int3
lret
add
xor
in
icebp
stos
movsl
imul
pop
adc
clc
fdiv
test
and
push
push
into
jo
subl
pop
test
add
ror
mov
mov
dec
xchg
mov
bnd
das
imul
push
mov
mov
movsl
sub
jmp
and
mov
fcoms
loop
adc
pop
jle
jmp
add
ret
cmp
test
push
leave
loope
aam
jnp
xchg
es
jno
jge
dec
in
adc
lock
push
cmc
icebp
pop
stos
sub
aas
fwait
inc
idivb
and
in
scas
push
roll
mov
mov
sub
imul
mov
enter
cmc
add
adc
ljmp
idivb
jmp
xchg
aad
mov
shrl
outsb
into
in
push
popf
adc
sbb
rcl
cmp
cltd
push
clc
xor
inc
mov
cmp
xchg
popf
mov
jb
pop
cmpsb
xchg
shrl
jo
sbb
pop
xchg
sbb
xchg
xor
dec
jle
jmp
ret
fidivl
push
stos
jo
inc
scas
and
iret
daa
stos
dec
iretw
xchg
fstps
push
mov
adc
jbe
fimull
pop
inc
add
stc
int
mov
or
mov
lret
add
andl
adcl
and
xchg
pop
lcall
mov
out
add
xor
movsl
push
fdivrs
xor
lds
bound
pop
and
adc
pushf
jno
test
stc
jecxz
cmpsl
nop
xor
sub
adcl
loop
leave
shll
rcr
lods
xchg
cmp
in
sti
bound
mov
daa
ja
cmpsl
xchg
lods
mov
xacquire
sub
test
jl
fwait
out
sub
inc
xchg
xchg
cmp
out
push
cmp
ret
push
mov
cmp
pop
imul
out
ret
xchg
add
adc
jnp
iret
imulb
xchg
sub
sbb
sub
dec
jmp
subb
xor
aad
ret
mov
adcb
test
sarb
mov
arpl
inc
or
hlt
xorl
negb
push
cld
xchg
imul
push
lea
loopne
jnp
shlb
pop
ds
lcall
out
cmpsl
add
dec
mov
mov
cmp
cld
xor
sub
sbb
and
fcoml
xchg
jp
pop
aad
vmwrite
pop
fs
xchg
dec
xchg
cmpl
fnstcw
ja
arpl
mov
fdivrl
jecxz
lock
jbe
dec
sub
sahf
jmp
push
rorl
adc
cmpsb
popa
jne
lock
shll
mov
sub
cmpsl
cmp
xor
ljmp
push
mov
outsl
cmc
mov
test
sub
aad
dec
add
stc
jbe
xchg
mov
sbb
cmpl
popf
sbb
and
pop
ss
push
in
out
push
out
cwtl
xchg
mov
and
imul
cmpsb
scas
bound
out
popf
stc
out
mov
sbb
pusha
or
std
mov
cmpsl
mov
stos
aaa
mov
xchg
push
movsl
daa
mov
insb
pop
lods
aaa
mov
cmp
dec
int
cmp
popa
lret
cmp
push
sub
push
shlb
out
enter
call
mov
inc
ret
adc
rolb
sti
xor
cld
add
mov
gs
mov
in
pop
clc
push
sub
stc
iret
das
imul
mov
ret
cmovno
les
cmpb
inc
test
enter
pop
jg
sub
xchg
mov
ret
mov
xchg
fs
cmpsl
jge
scas
lret
push
lret
outsb
shll
sbb
jmp
cld
not
or
in
add
lret
mov
pop
int3
xchg
pop
add
mov
inc
sbb
mov
xlat
lock
and
gs
das
inc
push
popf
test
cwtl
ds
lock
pop
sbb
jno
mov
xchg
mov
push
sbb
push
push
test
js
ja
mov
cmc
pop
add
jle
adcb
shrl
sbb
xor
pop
xchg
and
imul
leave
rdmsr
addl
add
xchg
inc
xor
gs
pop
hlt
loop
out
cmp
std
js
mov
dec
icebp
sbb
push
sub
lret
gs
mov
ds
outsb
dec
cmp
mov
mov
pop
ss
loop
add
mov
rcrl
add
pop
arpl
inc
add
fcompl
jae
sarl
shr
js
sahf
and
xchg
sbb
mov
or
or
neg
pop
adc
inc
hlt
lret
sbbl
adc
xor
cmp
mov
lcall
mov
and
push
imul
lcall
cmpsl
inc
pop
dec
mov
ds
into
xchg
sbb
ljmp
xor
add
sbb
ljmp
xchg
sub
icebp
dec
cmp
in
les
icebp
ret
xor
jl
fwait
lock
push
mov
je
aam
lds
or
jnp
and
cli
sbb
mov
mov
pushf
xor
fs
sbb
jnp
push
inc
rcll
pop
scas
xor
fwait
ja
mov
push
mov
jo
pushf
icebp
xor
adc
mov
rolb
cwtl
push
pusha
and
mov
push
scas
pop
and
mov
xchg
dec
inc
push
cmpsl
cs
xchg
jmp
lcall
rcll
in
das
lds
lods
xor
mov
jns
cmp
cltd
cmpsl
stos
leave
add
mov
dec
xor
push
movsl
mov
movsl
fiadds
aas
and
adc
cld
stos
hlt
repz
icebp
sbb
mov
pop
mov
sarl
das
jno
cmp
cltd
jnp
add
dec
pop
aas
xor
fsubrp
sub
xor
lods
rclb
adc
out
gs
mov
jl
les
xchg
inc
adc
sbb
hlt
loope
dec
and
cmp
adc
enter
sbb
out
aas
subl
mov
ret
adc
xor
xor
dec
js
repnz
fbstp
mov
cwtl
cwtl
ja
cli
fs
lahf
mov
icebp
cmp
scas
jl
adc
test
out
jecxz
inc
loop
dec
mov
xchg
fwait
mov
iret
or
fucomip
xchg
je
xlat
rcrb
loop
fidivl
mov
das
xchg
pushf
dec
mov
sbb
fwait
lea
aam
imul
loop
in
shrl
cmp
stc
fidivrs
sbb
js
push
mov
mov
mov
insb
in
inc
aad
iret
cmc
call
addr16
mov
push
add
aam
and
push
xor
xchg
push
mov
scas
or
fwait
and
cltd
and
shll
mov
or
or
in
or
dec
xchg
xlat
jns
and
rolb
mov
push
pop
xor
xor
push
aaa
jmp
orb
pop
cmp
in
rep
adc
xchg
jo
lods
movsl
cmp
movsl
fwait
das
imul
inc
dec
aam
push
dec
fcom
imul
adc
popf
xchg
mov
or
adc
lods
cmc
adc
cmp
into
iret
push
loope
cmc
imul
arpl
rcrl
push
mov
mov
nop
mov
cltd
rorb
fcoms
mov
mov
popf
fiaddl
fdivl
xor
inc
mov
xchg
repnz
cld
faddp
pop
or
mov
xchg
push
sbb
xor
add
testl
cwtl
sbbb
adc
adc
inc
clc
jb
mov
es
push
jne
push
cli
pushf
push
das
or
pop
xor
popa
ljmp
int3
jns
jae
into
stos
or
clc
mov
clc
mov
lahf
fisubl
mov
roll
pop
sub
jns
jmp
test
aas
out
and
adc
imulb
mov
movsb
addr16
add
test
push
mov
rolb
push
incb
push
lods
mov
sub
xor
ficomps
icebp
jno
cld
xlat
movsl
addl
pushf
cli
push
xor
mov
xchg
pop
mov
fcom
dec
fcomi
mov
add
hlt
xchg
jae
lea
pop
test
lods
mov
mov
inc
mov
in
insb
xchg
cmp
xchg
in
aaa
and
push
lcall
lods
fmuls
jne
mov
lea
clc
sbb
xor
inc
mov
sub
or
and
mov
out
test
xor
lods
clc
stc
arpl
push
and
loope
push
fwait
push
jbe
mov
mov
in
or
cs
inc
push
ret
dec
hlt
repz
shrb
int
movswl
out
out
repz
shrb
imul
and
inc
lret
sub
fisubrs
mov
mov
inc
popf
pop
push
dec
call
not
cmp
cmpsb
insl
popa
fsub
jbe
aas
jle
test
push
daa
jecxz
out
ja
inc
add
popf
adc
mov
shrb
adc
rclb
gs
push
xchg
pop
mul
cmp
add
dec
adc
and
inc
ljmp
nop
mov
jae
mov
mov
in
mov
mov
xor
sbb
cmp
pop
add
push
dec
nop
mov
js
or
jae
subb
mov
pusha
in
popa
sbbl
fsubs
lock
add
xchg
repz
mov
mov
xchg
cld
in
pop
pop
test
lahf
xchg
mov
and
xchg
fldenv
push
data16
xchg
sub
repz
xchg
push
aad
inc
popa
out
mov
xor
jbe
pop
mov
loop
inc
cmp
mov
and
test
je
fstpl
mov
pop
dec
mov
push
mov
ret
rcr
stc
dec
push
pop
jl
mov
sbb
jmp
or
and
jmp
adc
test
sub
jae
popf
pop
test
mov
push
negb
and
xchg
cli
jb
stos
jb
addb
push
aas
mov
push
scas
inc
mov
add
ss
sub
cmc
adc
js
xor
sub
aam
mov
adc
push
jl
mov
mov
and
fmuls
jg
sub
jge
xchg
imul
in
and
cmp
icebp
pop
mov
addr16
and
sahf
inc
lcall
nop
gs
fwait
inc
sbb
sub
les
sub
sbb
add
cltd
les
lock
ljmp
or
fldl
data16
sub
das
in
mov
lret
imul
mov
jp
lods
arpl
lret
cli
popa
xor
inc
fists
mov
xchg
mov
push
cmp
xchg
sub
dec
cmp
and
fs
shll
cmp
cmpsl
push
movsl
jae
and
dec
mov
xchg
pop
pusha
gs
pusha
dec
mov
cmp
jg
shrb
arpl
sbb
out
mov
hlt
cmp
pop
mov
push
iret
jle
xor
fisubl
jg
ds
dec
mov
test
adc
shll
xchg
enter
mov
pop
test
xchg
xor
adc
cli
scas
mov
pop
out
rclb
aad
enter
pop
test
fadd
and
jp
paddq
fidivl
fcmovb
mov
call
jle
imul
stos
mov
nop
clc
pop
and
sub
sti
lcall
and
dec
xor
mov
add
adc
adcb
jp
inc
xchg
xchg
fildl
jg
out
movsl
mov
push
xor
push
mov
imul
or
stc
jmp
lods
xchg
xchg
mov
pop
or
sbb
lahf
scas
lret
scas
push
xchg
mov
jnp
adc
ljmp
sub
mov
ss
in
push
xchg
xor
sub
mov
adc
sub
dec
mov
and
pop
jle
ljmp
or
sbbl
fcmovb
pop
dec
inc
mov
xchg
jg
jle
mov
jg
pop
xchg
xchg
sbb
xchg
sub
or
into
fstl
add
jo
dec
mov
and
sbb
adc
in
ja
jb
xchg
out
jge
cmp
fldt
daa
nop
aam
jg
inc
push
stos
sub
in
loope
xor
movsl
mov
jae
mov
lods
xchg
cs
aaa
push
and
xchg
out
push
mov
or
jecxz
std
das
sbb
xchg
cmp
sbb
in
xor
xchg
loopne,pn
loop
push
push
insl
int3
imul
mulb
push
fidivrs
sub
rcrl
mov
mov
sub
lock
andl
cmpsb
mov
inc
mov
shrb
or
xlat
int
subb
xor
loopne
aad
data16
mov
inc
inc
ss
jo
repz
mov
push
mov
je
adcl
sbb
roll
cmp
js
xchg
mov
xchg
inc
sbb
cld
mov
adc
fs
and
dec
repz
xchg
shll
mov
mov
push
or
add
inc
adcl
push
jnp
xchg
inc
sub
bound
sbb
sbb
cs
cmpsl
rcr
push
adc
mov
es
jno
fsubrs
outsb
loope
sub
loop
popa
push
jae
inc
fs
and
fbstp
adc
and
cwtl
test
push
mov
jae
sub
push
xchg
xchg
daa
mov
dec
stos
mov
inc
scas
add
pop
dec
scas
out
jo
lret
scas
adc
roll
outsl
aam
mov
adc
js
push
sub
cwtl
shlb
int
push
pushf
mov
jne
jns
pusha
dec
mov
jns
test
aam
push
js
pushl
idivl
sub
sub
and
daa
hlt
jmp
neg
jns
shl
pop
or
cmpsl
pop
mov
aaa
adc
out
fiaddl
inc
insb
add
inc
aaa
xchg
je
into
cmp
push
lcall
aam
add
push
popf
or
cmp
outsl
push
pop
cmp
xor
fs
testl
cmp
push
fldenv
inc
aas
test
xor
xor
sbb
push
ljmp
test
xor
fstpt
imul
movsl
sahf
movsl
shlb
stc
call
mov
scas
push
pop
mov
or
aad
jns
mov
mov
pop
mov
pop
popa
pusha
ret
push
rcll
lret
or
pop
aaa
test
push
xchg
or
mov
pop
xchg
cwtl
aad
test
cmp
xor
push
xchg
idivb
mov
push
dec
xchg
mov
xor
or
insl
dec
mov
inc
sbb
sub
mov
pushf
push
jns
and
mov
call
xchg
sbb
mov
scas
jbe
sub
subb
inc
mov
inc
jno
xchg
push
sub
mov
sbb
in
icebp
test
dec
adc
enter
sbb
pop
dec
loope
pop
mov
push
fwait
pop
mov
imul
cld
es
test
cs
pop
outsl
out
stc
mov
adc
sub
mov
cwtl
loopne
test
imul
push
dec
js
jno
xor
mov
int
xchg
sub
addr16
xchg
lock
add
and
pop
scas
sbb
in
sahf
cwtl
xchg
loopne
idivl
repz
loop
jne
sub
add
cmpsl
sahf
cltd
pop
inc
aam
repnz
out
inc
xor
test
lcall
sub
nop
mov
xor
sub
mov
adc
sbb
bound
cmpsb
dec
cs
leave
nop
mov
sbb
lods
xchg
fdivrs
cwtl
ds
popa
cmp
cmpsl
jmp
pop
fstl
loopne
shlb
popf
scas
mov
xchg
dec
les
pand
adc
popa
sbb
xchg
cmp
sbb
bound
shrl
push
cld
pop
int
outsl
ja
xchg
push
jae
out
loop
inc
ret
loop
mov
in
loop
test
lea
lahf
dec
or
insl
pop
sub
xchg
and
shll
movsl
out
xchg
sub
pushf
mov
sub
int
cld
cld
scas
rclb
and
push
fnstcw
les
int3
mov
xchg
fcomi
fisubrl
and
pusha
xchg
mov
js
cli
mov
test
push
aad
daa
pop
aad
jbe
bound
mov
xor
pop
xor
inc
rcl
mov
aam
outsl
es
addl
clc
adc
and
rcl
inc
sbb
fiadds
mov
roll
add
test
scas
xchg
scas
or
test
mov
fsub
or
cmp
in
je
adc
jmp
aas
test
bound
push
fwait
arpl
out
push
push
inc
and
notl
mov
sub
sahf
aaa
mov
cmpsb
or
out
mov
dec
std
aam
add
loopne
lcall
sub
pop
xchg
mov
mov
pop
push
jge
jbe
xor
lea
inc
stos
ljmp
aad
scas
push
jne
into
jne
adc
int
stos
andl
add
lret
lcall
jp
fimull
push
mov
xor
movsl
and
idiv
in
stos
pop
cmc
pop
adc
sbb
mov
jl,pn
xor
aam
mov
int
test
mov
pop
inc
ret
stos
cmp
test
push
dec
shlb
xchg
icebp
loope
int
sbb
aaa
pop
sub
cmc
cwtl
loope
xchg
adc
lcall
popf
push
stc
lahf
pop
faddp
fucom
sub
sbb
sbb
call
dec
adc
aad
inc
test
out
inc
lret
es
scas
lret
out
adc
fs
adcl
inc
cmpsl
mov
lods
xorb
or
mov
ret
mov
mov
mov
pusha
aas
jg
cmp
xchg
mov
pop
cmpsl
gs
imul
scas
adc
aas
std
cltd
cmc
ficomps
sub
fdivr
in
add
inc
cmp
aad
dec
jle
sub
inc
and
push
cld
adc
xor
call
test
xchg
mov
push
imul
lea
rcr
pop
ficompl
mov
cmp
dec
pop
cmp
lret
or
repz
lea
sarb
int3
test
frstor
es
es
enter
insl
xor
cmp
lret
pop
paddw
lds
aad
ja
fdivrl
in
popa
pop
mov
sbb
pusha
or
adc
outsb
push
push
mov
mov
adc
mov
and
ficoml
lods
pop
xchg
mov
icebp
push
sub
sub
sub
sbb
outsl
call
movsl
mov
outsb
xchg
into
cli
outsl
sbb
mov
adc
pop
xor
push
lods
push
mov
neg
das
arpl
iret
pop
lcall
movsl
mov
int3
inc
fildll
call
and
xchg
xchg
testb
fadds
inc
js
ljmp
pushl
lret
mov
imul
jg
shl
je
clc
xor
pusha
movsb
outsl
cmp
out
pop
mov
inc
insl
xor
sub
ret
add
cmp
push
cmp
shl
imul
xchg
mov
or
push
loope
dec
mov
jne
stos
pushf
insb
vcvtsd2si
inc
jnp
dec
add
mov
outsb
ficomps
mov
in
dec
lret
addr16
add
push
in
or
aaa
xchg
cltd
movsl
sbb
loope
addr16
cli
sbb
or
cmp
nop
cmp
xchg
mov
mov
shll
mov
mov
jno,pn
and
subb
sub
cmpsb
cmp
inc
mov
xorl
test
cs
rcll
push
imul
sti
mov
jo
mov
push
jns
ds
push
jecxz
addr16
mov
mov
or
sub
xchg
push
fisubs
xchg
fcompl
mov
in
xor
push
out
jo
pop
mov
mov
cmp
test
es
aaa
test
lock
into
call
outsl
rcl
ljmp
push
inc
enter
cmpl
xchg
nopl
subb
mov
mov
cmp
mov
lds
stos
jo
inc
mov
fldenv
idivb
outsb
shlb
cmp
mov
or
mov
mov
or
push
pop
lahf
dec
lea
push
jmp
shr
xlat
in
sub
inc
pop
arpl
ss
dec
idivb
stos
xchg
imul
mov
pop
jbe
xlat
mov
fwait
insl
or
mov
sbb
frndint
xor
cs
cmp
hlt
out
xor
or
and
mov
pushf
jle
mov
push
mov
sub
fcoms
mov
mov
test
mov
aam
and
or
fs
mov
mov
dec
dec
js
popa
loop
cmpsb
cmpsl
sub
inc
mov
repnz
les
rolb
dec
cli
out
push
add
cs
dec
loop
insl
add
jmp
ret
insb
movsb
cmc
dec
add
adc
adc
xchg
dec
test
mov
in
mov
aas
or
mov
xlat
push
cmp
xor
jno
adc
add
and
mov
pop
pop
ja
cmp
push
push
add
into
jge
xchg
xchg
fidivl
rorl
pop
popa
ds
sahf
out
hlt
add
push
roll
mov
adc
inc
test
or
sub
and
inc
mov
sbb
xorb
dec
mov
stc
into
jno
stos
in
int
loopne
jp
mov
jns
faddp
ja
stc
or
cmc
dec
xchg
fnstcw
jo
mov
loopne
rclb
lds
sbb
aam
dec
mov
lcall
lea
call
push
aam
iret
repnz
inc
insl
mov
xchg
ss
adc
cmpsb
dec
call
popa
pusha
dec
jo
popf
outsl
push
sub
dec
xchg
xchg
daa
js
mov
sub
pop
xor
xchg
lret
in
jnp
xchg
push
pop
jae
adcb
adc
lock
inc
dec
inc
dec
inc
ret
sbb
inc
adc
mov
jge
adc
ja
out
mov
xlat
mov
sbb
mov
mov
mov
pop
test
mov
jle
or
stos
les
cmp
xchg
aas
sbb
mov
xchg
xor
lods
test
xor
icebp
inc
pop
loope
rclb
and
pusha
inc
mov
inc
insb
mov
dec
and
outsl
aaa
int3
and
push
xchg
xchg
popf
and
cmpsl
push
popf
push
jnp
test
fstpl
and
ret
aam
pop
lods
xchg
lsl
jb
sbbl
dec
xchg
nop
jns
xor
call
test
lret
leave
dec
sub
addr16
stos
inc
icebp
inc
push
mov
pop
fs
scas
sub
cmp
je
andl
cmpsb
cwtl
xor
mov
aas
loopne
xchg
mov
icebp
sub
add
jle
jmp
call
mov
sbb
cmp
dec
scas
mov
in
push
cmp
aaa
pop
cmp
cmpsb
mov
ds
sahf
ds
jno
out
inc
sahf
lret
cmpb
scas
ret
cmp
outsl
adc
in
sbb
mov
imul
test
leave
subb
out
clc
add
loope
mov
cld
sahf
jno
cmpb
mov
or
sub
sbb
inc
inc
xor
mov
sub
push
int
inc
sbb
pop
jmp
add
jb
xor
xchg
arpl
repnz
mov
fs
test
dec
mov
mov
pop
inc
and
mov
mov
nop
cld
jne
pop
testb
or
idiv
loope
mov
mov
xchg
nop
fcoms
push
or
adc
fdivr
clc
inc
and
adc
sar
leave
ret
ljmp
iret
lret
or
icebp
fsubrl
bound
inc
jo
lods
dec
sbb
sbb
and
pop
das
jp
dec
mul
hlt
lock
xchg
mov
cmp
mov
dec
push
clc
dec
sbb
jbe
adc
mulb
fcomp
lock
cmpsb
pop
sbb
add
or
jl
mov
pop
shl
addr16
pusha
fs
cmpsl
mov
adc
inc
dec
push
lds
rol
repz
and
sbb
xor
mov
pop
lahf
xchg
push
mov
or
jo
inc
ja
bound
rcll
cs
mov
ror
outsl
add
sti
call
inc
push
sub
jmp
into
aas
inc
addb
mov
icebp
inc
enter
cmp
dec
adcb
lods
push
aaa
ret
js
xchg
xor
push
pop
pushl
imul
mov
inc
push
push
push
mov
push
aas
ja
ja
fldlg2
sub
mov
lret
cmp
test
jo
sub
ret
inc
lods
push
lcall
lahf
xchg
cmp
hlt
in
push
or
rcrb
sbb
std
xor
ja
sti
xchg
mov
outsl
sarb
mov
dec
das
xchg
mov
rcll
xor
fdivs
mov
xor
adc
out
es
sub
jmp
sarl
enter
push
xchg
sub
lock
jae
test
push
repnz
test
aad
addl
sar
xor
pop
pop
dec
frstor
mov
inc
movsl
repnz
jmp
add
pop
jbe
fsubrp
push
add
fstpt
jae
mov
fwait
jbe
scas
popa
or
arpl
dec
push
xchg
ret
pop
in
adc
stos
cmc
lods
mov
push
ret
enter
dec
insb
in
fs
loopne
jne
pushf
js
xchg
mov
sub
hlt
orl
pop
mov
movl
int3
sub
adc
xchg
ss
jb
enter
rorl
lahf
enter
or
cmp
add
dec
lahf
cmpsb
dec
push
adc
in
and
and
into
cmp
fstp
push
xor
sti
sarb
aad
jns
xor
mov
mov
push
rolb
dec
lea
ljmp
mov
out
lret
sub
mov
dec
test
fcomps
das
add
mov
arpl
sbb
fistpll
pop
aad
sub
pop
into
in
fdivrs
adc
cmp
pushf
adc
inc
push
and
mov
ljmp
hlt
pusha
jno
sub
adc
aad
push
pop
mov
cwtl
and
jbe
std
sub
cmpsb
out
insl
dec
iret
add
popa
pop
mov
test
ret
jnp
jecxz
mov
int
aad
test
dec
jmp
cmp
setne
mov
mov
dec
and
dec
inc
inc
shl
xchg
sub
xor
ja
out
xor
add
lods
enter
jle
xchg
inc
loope
lds
push
push
pop
xor
ss
mov
lahf
and
clc
nop
cld
mov
dec
sahf
mov
shlb
pop
push
std
lcall
mov
cli
fcom
add
push
push
mov
add
sti
rol
inc
test
test
sbb
js
popa
and
sub
and
in
les
pop
adc
test
inc
or
jge
push
iret
adc
fld
or
shll
movzwl
jnp
adc
jns
popl
test
mov
dec
fisttpll
mov
add
xchg
sbb
test
into
mov
out
sahf
jle,pt
push
in
xchg
in
inc
sahf
xor
and
lahf
xor
jne
jecxz
rolb
test
imul
out
or
daa
xor
xchg
add
lods
jo,pt
jae
mov
outsb
jl
fwait
mov
dec
fisttpll
es
test
outsb
les
dec
test
cmpsl
adc
or
mov
sub
push
int3
fstps
pop
lods
add
inc
lret
dec
pop
pop
mov
je
cli
cmp
adc
repnz
out
ljmp
cmp
dec
push
ret
xorl
scas
repnz
mov
sub
fs
mov
jle
lret
aad
adc
sub
fldcw
movsb
or
test
add
into
and
xor
rorl
pop
in
es
and
aas
sti
out
ret
lcall
das
mov
cmpsl
jnp
push
jne
push
fildll
lods
sbb
leave
fmuls
dec
xchg
gs
xor
mov
mov
add
cmp
adc
adc
or
cmp
add
xchg
nop
or
cwtl
mov
mov
or
insb
int3
mov
or
testl
loopne
ja
inc
push
out
pop
in
push
lods
cwtl
sbb
test
push
add
push
add
or
mov
mov
ljmp
fcomps
shlb
sub
imul
sbb
fbld
and
pop
mov
repz
andb
inc
pushf
pop
nop
sub
enter
lahf
mov
push
jge
rclb
sbb
ljmp
dec
pop
xchg
loopne
outsb
das
sti
neg
sbb
jmp
mov
sub
sbb
fcmovb
sbb
lds
loop
inc
decl
mov
pop
mov
jno
clc
js
sub
mov
scas
mov
mov
sub
xor
xchg
xchg
or
and
dec
clc
out
push
hlt
shlb
aaa
jge
addb
ror
scas
inc
stos
mov
sub
js
push
outsb
out
add
int
xchg
mov
lock
mov
and
andb
dec
xor
and
mov
mov
add
jbe
lock
jb
ljmp
int
adc
mov
inc
stc
sub
fisubl
pusha
cmp
cmp
movsb
dec
ljmp
mov
pusha
push
data16
push
mov
stc
movsl
pop
jnp
fsubrl
ret
into
nop
loop
arpl
push
ret
and
inc
imul
shl
push
std
mov
sub
ret
out
lret
or
lods
insl
out
repnz
xchg
fs
jbe
lods
in
pop
or
imul
clc
es
mov
xor
lock
cmp
mov
lahf
xor
in
fs
lahf
push
sbb
jl
outsb
nop
xchg
adc
add
jae
or
push
cli
shrb
xchg
jns
mov
sbbl
popf
and
aaa
xchg
test
mov
dec
mov
cmpl
sub
hlt
xchg
mov
sbb
cld
les
test
push
ret
jno
push
fstpl
push
subl
ret
int
xchg
cmp
sbb
and
repz
stos
repz
push
in
push
sbb
scas
mov
adc
or
push
js
fwait
xchg
data16
insl
add
cmp
stc
call
or
rol
imul
push
out
dec
add
nop
iret
adc
inc
into
aad
pop
les
icebp
jb
sbb
or
es
les
xlat
cmp
add
adc
cmp
mov
push
pop
push
in
iret
push
push
out
lods
jb
cmpl
scas
pushf
fsub
shrb
mov
adc
lea
jmp
push
and
nop
in
int
fs
out
adcb
or
popf
xchg
sbb
repnz
cmpsb
or
cmp
lock
cmp
adc
and
dec
mov
sub
jnp
das
loopne
push
mov
repnz
push
dec
mov
push
jno
inc
in
and
pop
inc
add
leave
xchg
adc
push
pushf
mov
jnp
inc
into
scas
fisttpl
sbb
sub
and
dec
nop
and
pop
cmpsl
fmul
push
inc
shr
add
das
pop
push
ss
add
and
scas
push
loopne
ror
and
xchg
out
fucom
xchg
xor
test
ret
imul
loop
sub
clc
push
xchg
mov
jl
pushf
mov
mov
mov
lahf
ret
dec
adcb
inc
rolb
sbb
lea
push
mov
in
dec
jge
adc
inc
add
mov
call
les
push
out
in
inc
xchg
dec
jp
pop
and
jp
pop
jb
cwtl
in
sbb
test
cmpl
cmpsb
aas
adc
cmp
sbb
xor
mov
xchg
addb
or
call
sahf
xchg
push
jnp
sub
in
notl
push
stos
inc
sub
es
fs
mov
push
dec
xor
jmp
ljmp
sub
sbb
dec
add
cmp
or
mov
mov
or
shlb
dec
lods
ja
add
mov
scas
dec
shl
and
int
dec
jmp
mov
jecxz
cmp
mov
sbb
push
mov
data16
xchg
fs
sbb
push
aam
mov
add
loopne
xchg
and
mov
pop
mov
fdivs
flds
mul
rcrb
inc
jnp
ljmp
inc
sbb
aad
sub
mov
imul
adc
jle
push
test
rcl
sbbb
clc
mov
cmpsb
adc
cmpsl
jge
out
xchg
aaa
jns
cmp
decl
cltd
imul
push
pop
jb
mov
imul
hlt
xor
lea
stos
addr16
rol
cmp
sub
pop
lret
adc
adc
fnstsw
add
enter
sbbb
push
imul
xor
pushf
sbb
fildl
mov
lds
lods
mov
mov
push
pop
mov
int3
aaa
inc
cmpsb
jl
xor
sbb
in
loopne
int3
ja
call
addr16
pusha
sbb
xchg
cmp
mov
lods
adc
test
dec
xchg
cli
mov
leave
fcomp
sub
inc
xor
fistl
xchg
mov
mov
mov
xchg
inc
mov
dec
dec
rcrl
out
in
dec
inc
dec
xor
addr16
sbb
fiaddl
mov
inc
mov
mov
push
cld
mov
rolb
enter
and
sub
xchg
cld
pop
and
dec
jb
stc
outsb
add
dec
cwtl
jbe
pop
lret
stc
in
insl
mov
push
jmp
cmc
stos
imul
repz
loopne
in
mov
lahf
jp
lock
nop
dec
shl
push
popf
push
lds
adc
imul
psrlq
lods
pop
in
in
pusha
push
xor
mov
mov
cmp
pop
insb
xchg
cli
fcoms
cmp
xchg
cmp
cwtl
lahf
inc
cwtl
and
fnsave
pop
mov
cmp
add
sbb
pop
lcall
mov
push
mov
cmp
out
in
cmpsb
xchg
push
push
push
repz
cld
into
shlb
inc
push
sbb
out
pusha
pop
jecxz
das
xchg
sub
inc
in
xchg
imul
mov
adc
mov
adc
in
divl
cmovnp
stos
dec
lock
lret
pop
clc
call
fs
mov
or
aad
dec
out
push
mov
xlat
popa
xor
sub
push
aas
jne
pop
cmp
fwait
xchg
sti
mov
call
or
inc
mov
sub
pop
pop
es
push
ljmp
jne
shrl
aam
push
push
popf
imulb
mov
xorl
cmc
lods
dec
jg
mov
aaa
fsubrl
movsw
adc
lret
cmp
cli
rcr
mov
xchg
push
out
sub
out
ja
je
sbb
mov
pop
leave
fwait
or
xchg
addr16
sub
stos
pop
add
leave
sti
into
fsub
lods
repnz
imul
mov
and
mov
sub
jns
adc
jo
jecxz
jecxz
mov
jno
xchg
pop
dec
into
fstpt
mov
test
stos
gs
movsb
xchg
scas
hlt
jecxz
sub
aam
pop
sbbl
or
cmp
jmp
dec
cmp
ja
pop
jo
jb
aas
subb
mov
sub
leave
sbbl
xor
rcl
and
pop
mov
data16
inc
sub
mov
push
or
addb
movsb
jb
ret
cmp
out
sbb
adc
jle
push
flds
dec
pusha
imul
jnp
pusha
xor
dec
pop
icebp
lods
dec
scas
dec
enter
cmpsb
fimuls
imul
inc
push
sbb
icebp
mov
shlb
repnz
dec
mov
fisttpl
adcb
push
pusha
xchg
out
jno
sbb
xor
sub
sbb
push
out
fisubl
dec
push
inc
ds
mov
fisubl
andl
cmp
adc
sbb
xchg
popf
lret
movsl
jbe
push
les
into
pop
ljmp
ds
cmc
daa
inc
jno
pop
into
aas
dec
divb
adc
jbe
mov
fsts
stos
mov
ds
add
adc
add
insl
mov
inc
pusha
lcall
mov
mov
jle
sub
mov
dec
add
dec
cmp
and
xor
xrelease
mulb
popf
pusha
inc
add
add
mov
xor
pop
loop
mov
sbb
and
test
jae
fadds
repnz
xchg
push
cmp
test
mov
pop
aad
leave
and
push
insl
movsb
jnp
arpl
cmpsb
inc
and
push
dec
pusha
mov
inc
pusha
mov
cmpsl
inc
add
sub
xchg
lcall
xor
fwait
and
or
push
repz
jns
cmp
sbb
adc
lcall
jecxz
ss
shlb
xor
bound
test
pushf
adc
jae
jae
and
jge
in
scas
adc
loop
xchg
push
and
pop
into
loope
mov
ret
pop
sub
jae
aam
or
shr
xchg
or
fnstsw
or
aam
pusha
lahf
or
dec
add
or
loop
xor
fs
and
add
daa
enter
stc
push
insl
push
test
test
or
adc
or
push
pop
imul
and
aam
jmp
test
fsubs
lret
sub
cmp
xor
xchg
cmp
push
push
mov
mov
sarl
sub
pop
xor
and
bound
xchg
mov
inc
testb
icebp
cmp
dec
mov
gs
xorb
aas
xchg
cmp
mov
add
sub
fwait
clc
or
xor
and
sub
mov
popa
mov
in
mov
adc
xor
imul
lock
adc
adc
mov
inc
mov
ljmp
push
addr16
gs
cmpsb
outsl
inc
lds
mov
cmc
sbb
ss
rorl
cltd
cwtl
data16
pop
xchg
jo
int3
aas
aaa
call
inc
adc
pop
dec
dec
cltd
jnp
cmp
pop
sbb
pop
dec
daa
int3
inc
mov
daa
enter
xor
push
pop
pop
popa
loope
cs
mov
inc
insb
push
mov
xchg
mov
movsb
add
std
sarl
ds
gs
xor
adc
jmp
shll
dec
push
sbb
or
dec
and
jo
pushl
or
and
and
and
dec
mov
rolb
ss
mov
xor
or
adc
mov
and
dec
test
mov
hlt
adc
xchg
mov
dec
push
pushf
cmp
leave
xchg
sub
fisubrl
jno
adc
in
mov
lcall
xchg
cs
jae
cmp
dec
and
rorl
mov
mov
test
notl
fwait
adc
cltd
lcall
xchg
ds
enter
and
repnz
or
mov
loop
cld
ds
pop
cwtl
pop
leave
sbb
adc
mov
cmp
jle
jb,pn
xorb
jne
outsb
inc
mov
jo
and
cmpsl
pop
push
xchg
icebp
xchg
orb
jae
pop
cltd
dec
push
enter
cmp
pop
sbb
mov
dec
xchg
add
std
dec
das
xor
pop
cmp
cltd
mov
xchg
cmp
test
sub
add
repz
lods
push
inc
add
adc
mov
popl
clc
mov
fldenv
stos
cmp
sarl
orb
mov
xlat
dec
mov
mov
les
lea
decl
stos
xchg
je
mov
mov
js
lea
mov
mov
repz
adc
xor
movsl
xchg
jp
mov
or
stos
cmp
imul
enter
mov
ficoml
pop
iret
pop
arpl
xchg
jge
inc
ficoml
push
ret
enter
pusha
sub
out
dec
getsec
ja
and
in
nop
shr
add
cld
cmp
mov
sub
bound
movsb
imul
das
push
nop
lret
jmp
lods
ud0
cmp
icebp
mov
mov
repz
xchg
fs
jo
inc
mov
cltd
sub
sbb
xchg
into
rcr
mov
imul
xchg
pop
in
notb
hlt
ljmp
insb
sbbl
leave
movl
pop
lods
dec
repnz
hlt
inc
test
push
lcall
popf
leave
and
add
or
mov
adc
cwtl
mov
shl
repz
inc
outsl
jl
sarl
push
test
mov
jmp
xor
orl
imul
xor
ret
fwait
cmpsb
aad
mov
hlt
jb
dec
loope
dec
mov
mov
mov
cld
jecxz
bsr
sbb
cwtl
in
pop
dec
out
push
aam
pop
mov
mov
mov
xchg
subb
imul
cmc
decl
aad
inc
inc
ret
mov
inc
jl
fdivl
sbb
xchg
imul
fs
pop
pop
xchg
mov
movsb
fstps
fdivs
jne
arpl
les
mov
lret
mov
mov
loope
mov
in
jns
nop
pop
fnsave
test
data16
mov
insl
outsl
xorl
loopne
int
dec
cs
addr16
sub
add
xchg
leave
lods
push
mov
fstpl
and
fisttps
dec
push
add
mov
js
les
dec
sbb
scas
rcl
iret
add
inc
cmp
cmpsl
push
jmp
mov
sbb
test
pop
mov
xor
mov
sarb
dec
fnstsw
out
xchg
pop
add
aas
and
mov
inc
dec
add
jbe
jle
inc
movsl
mov
call
xchg
add
call
orl
pop
sbbl
cmp
xor
hlt
jmp
dec
add
sub
test
mov
push
ret
fdivrl
inc
fstps
jecxz
jmp
leave
xchg
add
jecxz
xor
xchg
pop
daa
add
jae
sub
mov
int3
pop
and
pop
xor
mov
cmp
gs
and
sbb
mov
mov
enter
xor
sbb
arpl
xchg
pusha
in
aad
lahf
pop
pop
incb
sub
sub
jbe
push
arpl
cmc
inc
and
or
sbb
cmp
enter
int3
ja
rclb
sub
mov
inc
jne
mov
ds
mov
dec
iret
loopne
fdivl
fiadds
fbstp
mov
int
inc
mov
inc
push
push
adc
add
fsub
xchg
ret
xchg
int
ffreep
push
test
scas
push
jne
in
icebp
push
push
scas
mov
push
rolb
fs
cmp
imul
into
jge
movsb
xlat
leave
test
jp
test
xor
sub
and
sti
or
mov
test
dec
mov
popa
xchg
pop
in
dec
cmpsl
loope
pop
xchg
xchg
push
lahf
gs
arpl
or
sbb
cmpl
imul
sbb
stos
adc
shrl
jl
or
in
cmp
shlb
or
shl
pop
mov
mov
jecxz
xchg
mov
stc
and
add
push
scas
gs
insl
out
repnz
jns
rcrb
sbb
xlat
movsb
fwait
hlt
rcrl
mov
sti
das
push
dec
dec
fimuls
imul
cmp
out
mov
inc
out
pop
cmc
xchg
dec
xlat
stc
bnd
cmp
and
push
std
and
pop
mov
daa
outsl
mov
fildl
mov
lods
mov
lods
out
pop
mov
jb
mov
inc
in
add
pop
dec
hlt
lock
popa
and
decl
les
or
int3
or
mov
in
mov
dec
pop
addr16
lods
dec
jmp
fildl
adc
out
pop
lret
sarl
or
sbb
outsl
fstpt
push
fsts
ret
dec
mov
fimull
adc
popf
leave
xchg
pop
sarl
aad
or
bound
cmp
and
bound
shr
fs
xlat
mov
mulb
xchg
sti
sub
call
sub
jp
insb
mov
lret
fcomps
int3
sahf
popf
lock
fisttpl
in
ret
add
sbb
dec
push
je
hlt
and
mov
lea
int
jecxz
inc
imul
mov
cmp
test
je
int3
nop
out
jns
xor
lods
and
ror
je
inc
hlt
out
or
bound
mov
andl
arpl
cmpsb
into
jge
fwait
mov
lock
hlt
sub
xlat
mov
pop
mov
xchg
fcoml
cmp
jne
mov
push
fs
mov
mov
push
jecxz
push
das
jg
test
int3
imul
sarb
scas
into
push
add
out
xchg
fs
cmp
fwait
inc
bound
shlb
imul
arpl
test
loope
sbb
aas
mov
fisubl
frstor
and
jo
stos
ja
xchg
sahf
mov
xchg
out
arpl
jmp
ss
pop
ja
mov
mov
xor
mov
bound
mov
inc
jge
lahf
cmp
xor
inc
pop
ficompl
repnz
mov
fs
call
adc
cmpsl
inc
cld
mov
popa
mov
inc
rcll
rcrl
into
test
xchg
mov
or
fildll
pop
add
or
inc
push
nop
jnp
sbb
jae
in
and
cmc
popf
cli
std
adc
push
sub
out
adc
or
cmp
andl
lock
push
xor
and
rcl
sti
dec
dec
push
cwtl
cmp
mov
loope
sbb
or
stos
xchg
mov
mov
sub
lahf
iret
mov
xor
out
sbb
call
loopne
ljmp
test
ds
mov
mov
xor
out
push
dec
in
loope
or
mov
jecxz
aas
loop
rcr
insb
pop
fadds
lahf
push
cltd
cmpsl
lret
add
cmp
pop
outsb
stos
sub
pop
fidivrs
xchg
sub
or
mov
or
jns
pop
fwait
add
sbb
gs
fs
clc
jge
popa
ret
dec
ret
xchg
cmp
sbb
inc
push
cmp
adcl
pusha
mov
xlat
insl
xchg
sub
mov
lret
bswap
insb
rcll
pusha
loop
and
add
xchg
dec
sub
add
in
mov
loop
bound
lret
mov
and
stc
adc
mov
adc
xor
jae
aad
jbe
jl
outsl
pop
aaa
mov
mov
xchg
jmp
add
cmp
sahf
push
cmc
xor
filds
lcall
lahf
jo
mov
into
jl
cmp
adc
fistpl
mov
nop
add
pop
inc
cmp
hlt
dec
insb
dec
aaa
xchg
aam
mov
sbb
lcall
arpl
adc
std
in
xor
push
in
arpl
and
jne
jp
stc
cli
int
pop
push
enter
jle
popa
in
cmp
pusha
daa
mov
je
dec
lret
pop
fstpt
mov
icebp
and
iret
lock
inc
loop
pop
inc
inc
fsubrs
das
or
push
mov
test
pop
jbe
mov
jecxz
xlat
scas
cltd
mov
or
and
and
dec
or
xchg
leave
inc
fistpl
addb
out
mov
push
jb
cmpsb
popf
je
adc
mov
jmp
pushf
dec
sub
xor
inc
addb
test
mov
dec
mov
xchg
xchg
and
fwait
cmpb
decl
popf
addr16
jge
pop
sti
imul
repz
xor
cmc
icebp
lods
lods
nop
scas
dec
jecxz
movhps
repnz
movsb
clc
repnz
cmp
bound
cmp
test
shll
mov
and
push
jo
xchg
mov
popf
mov
cld
movsl
adc
pop
sub
sbb
iret
out
sub
dec
push
xor
dec
mov
cmp
sahf
mov
and
mov
out
jecxz
fwait
cmp
stos
loop
movsb
mov
mov
push
loop
call
sbb
ds
sbb
pop
xor
push
test
repz
int
inc
sbb
test
pop
jb
popf
in
fildl
sti
or
push
push
xchg
cwtl
fwait
adc
add
xchg
or
xchg
cmp
mov
mov
mov
fiaddl
inc
imul
aas
push
adc
mov
andb
in
mov
jo
imul
jle
dec
cmp
mov
fisubrl
or
movl
sahf
mov
lock
cmp
cli
test
fcmovu
ljmp
xor
insl
cmp
push
pop
outsb
in
xor
inc
push
or
lret
repnz
filds
loopne
and
add
das
adc
pop
add
xor
cmp
dec
and
pop
les
xchg
mov
xchg
rclb
jno
mov
ret
loopne
lahf
loope
mov
sbb
xchg
iret
out
jno
in
mov
inc
cmc
inc
cmpb
and
dec
jecxz
je
sbb
lods
and
sbb
andb
lcall
push
ljmp
movd
lock
mov
xchg
ja
cmp
add
add
mov
jb
outsl
ds
dec
mov
into
mov
mov
outsb
cmp
js
jnp
test
cli
aad
jnp
adc
adc
outsl
mov
popa
add
fists
mov
test
dec
popf
pop
fldenv
push
jno
mov
pop
pusha
pop
pop
push
pusha
rclb
sub
xor
and
push
cmc
and
or
std
cmp
cld
add
ret
test
adc
lcall
mov
and
insl
daa
sbb
sarl
xchg
inc
or
xchg
xlat
std
sbb
cmp
imul
fidivs
adc
lret
push
mov
dec
jle
das
jae
js
enter
xorb
icebp
in
cmp
insl
fisubl
std
xor
roll
nop
adc
adc
sahf
aas
or
adcb
mov
and
incb
fldcw
cwtl
and
sahf
pop
xor
cltd
lock
inc
loope
bound
cmp
lret
fcompl
mov
fs
dec
divl
pop
xchg
fs
stos
jns
or
in
enter
lahf
push
mov
mov
test
inc
push
mov
cmp
cwtl
xchg
shll
lret
push
shr
int3
cmpsl
cltd
dec
dec
clc
mov
jae
nop
pop
addr16
mov
jo
cmc
stc
adc
sbb
pop
outsb
xchg
pop
push
cmpsl
mov
lret
cld
xchg
xchg
call
inc
es
test
lahf
xchg
out
scas
jle
arpl
inc
cltd
add
xchg
mov
pop
dec
jmp
inc
add
lret
lret
jne
loop
pop
pavgw
add
pusha
fldlg2
xchg
call
ss
push
pop
andl
test
pop
ret
ss
xchg
int3
inc
ret
cmp
lds
or
jne
fs
cmp
fisubl
inc
jb
pop
cmp
scas
outsl
out
test
sub
mov
mov
add
orl
xchg
mov
add
mov
push
jmp
sub
xor
dec
pop
dec
les
shlb
jmp
rorl
adc
stos
push
xor
sti
imul
popf
cmp
test
inc
mov
popa
test
mov
movsl
aas
aas
data16
mov
or
mov
fs
adc
jbe
xlat
sbb
dec
andl
call
dec
push
inc
data16
add
ljmp
jle
sub
adc
inc
daa
xlat
jl
jg
fistl
xor
mov
xor
adc
push
cmp
sub
mov
sbb
test
xchg
je
mov
jae
imul
stos
fsubp
cmp
mov
mov
data16
icebp
fs
lahf
ljmp
xor
cmp
testb
pop
arpl
rol
lret
in
icebp
cld
sbb
in
or
ret
mov
pop
mov
shlb
jg
sbb
mov
mov
ret
mov
popf
leave
dec
or
push
xor
into
mov
mov
roll
into
inc
iret
push
mov
ret
cmpsl
lods
lock
adc
inc
sbb
fwait
mov
rcrl
ljmp
inc
sti
mov
cltd
icebp
iret
ja
adc
inc
pop
dec
pop
sbb
arpl
inc
les
loopne
popa
sbb
add
or
fstp
add
add
leave
push
imul
jae
jbe
xchg
adc
loopne
fisubl
hlt
add
xchg
sub
adc
add
dec
or
lahf
vrcpss
cmp
push
pop
sti
add
cltd
xor
sbb
or
rcrb
aas
rorl
sub
imul
mov
shll
xchg
das
pop
xlat
into
dec
xor
sahf
and
cmp
scas
fs
pop
insb
data16
lods
popa
inc
jg
test
lods
sub
fcompl
sub
hlt
xor
fstpl
incl
ja
mov
lcall
rorl
add
jg
dec
fnstcw
push
sub
cmp
add
push
adc
rcll
cmpsl
inc
aas
pop
pop
xor
test
xor
out
adc
mov
jle
push
inc
adc
rcl
adc
mov
sbb
dec
and
mov
or
push
out
pop
out
add
std
fsts
js
sbb
icebp
ds
mov
fiaddl
shll
or
jp
iret
movsb
mov
fwait
and
lahf
shrb
mov
cmc
leave
and
repz
adc
push
push
sbb
aad
mov
pop
loopne
sti
iret
mov
pop
es
cmp
out
mov
jge
or
enter
jno
add
dec
jl
mov
rcl
cs
inc
loope
outsb
fsub
ja
les
fistpll
jne
mov
in
ret
adc
cmpb
xor
push
push
mov
pusha
xor
and
jmp
push
hlt
lods
or
push
shlb
push
ss
pop
repz
loope
pop
adc
mov
aam
out
jae,pn
shll
push
jmp
mov
addr16
icebp
scas
popa
adc
add
add
aas
dec
and
lahf
cmpsb
mov
pop
cli
in
out
pop
stos
and
xor
cmp
xchg
push
add
pop
clc
or
test
int
jbe
stc
push
and
test
mov
rcrl
jecxz
in
lds
push
repz
sahf
lock
dec
lock
lock
cwtl
cmp
xchg
mov
sub
inc
xchg
cwtl
rcrb
data16
lret
call
mov
movsl
dec
pusha
pop
cmp
out
lock
push
fs
mov
int3
lcall
mov
push
xchg
jb
add
inc
cmpsb
fcoml
xchg
cmp
cltd
push
push
scas
pop
hlt
fildll
xor
mov
pop
adc
jns
xchg
f2xm1
clc
xor
xchg
addr16
es
pusha
dec
jle
scas
clc
ret
sbb
pop
leave
or
mov
pop
sbb
ljmp
cmp
sbb
xchg
inc
repnz
lock
inc
aad
aaa
dec
push
nop
cmpsb
in
jl
mov
xor
in
or
pop
pusha
rcr
ret
jecxz
adc
xor
jo
aam
inc
loopne
push
adc
mov
mov
fiadds
into
fimuls
test
sbb
mov
pop
lock
sub
mov
sarl
pop
push
push
test
cmp
push
bnd
push
cmp
mov
xor
cmp
out
outsb
repz
pusha
adc
cwtl
outsl
dec
js
jmp
insl
xchg
add
xor
jp
arpl
popa
arpl
add
insl
and
or
out
push
iret
repz
cmpsl
stos
mov
inc
lahf
dec
add
xlat
jp
repz
rcll
stos
inc
jae
and
or
movsb
shr
in
cld
sbb
cmpsl
adc
sbb
add
mov
cmp
mov
and
rolb
mov
mov
lahf
pop
sahf
shl
pop
pop
pushf
cmpsb
jg
faddp
ss
js
hlt
bnd
mov
clc
dec
pop
xchg
subl
popa
in
enter
pop
push
aam
push
je
cmp
sub
xchg
pop
xchg
in
int3
repnz
sub
inc
dec
aaa
pop
mov
xor
jbe
lock
sti
inc
xchg
sub
lret
dec
ret
dec
daa
cmpsb
cmc
adc
mov
rclb
jbe
roll
scas
sub
jmp
shlb
bound
dec
addr16
cmp
sbb
jp
add
xlat
pusha
xor
call
bound
neg
cmpsb
outsb
jbe
mov
cld
lock
repnz
out
lock
out
scas
lret
xchg
aas
mov
xchg
jne
pop
testl
or
daa
subl
clc
xchg
push
out
fldenv
xchg
or
movsb
jb
mov
and
sbb
popf
mov
xchg
mov
insb
sub
cmpsb
jnp
insb
push
fsts
lcall
mov
popa
mov
jno
jl
mov
or
aad
inc
mov
daa
sarb
leave
scas
add
mov
sahf
push
jge
stos
inc
fs
aas
ficompl
int
inc
sub
jmp
jp
jl
std
dec
adc
push
into
adc
sub
jle
push
comiss
movsl
jecxz
adc
adc
test
jo
fstps
add
jae
push
pop
adc
dec
pslld
mov
popf
xchg
or
das
shr
fnstcw
into
xchg
std
inc
push
jo
mov
xchg
cltd
mov
setbe
inc
push
sub
and
add
lret
subl
nop
xchg
cmp
sbb
stos
dec
hlt
mov
std
testl
es
test
dec
and
lret
mov
sti
orb
xlat
cmovs
in
in
lods
out
imul
or
and
jno
mov
imul
mov
mov
inc
out
cld
pop
cmovbe
fs
pushl
cmp
in
mov
sub
ret
mov
jg
mov
mov
xlat
jecxz
push
repnz
lret
xor
xor
cmpl
dec
xor
std
out
mov
aam
sub
test
jp
mov
push
inc
inc
mov
insb
xchg
inc
push
push
lods
mov
mov
jb
mov
xor
cmp
leave
push
int
pop
xchg
jo
or
ds
pop
xor
ret
fbstp
popf
or
adc
mov
test
and
lret
add
call
out
dec
test
adc
fxch
sarl
addr16
push
pop
aas
cwtl
outsl
rcr
clc
popa
outsl
jo
pop
pop
xchg
pop
adc
cmp
nop
int
push
adc
sub
dec
mov
sbb
scas
xor
jmp
movsl
push
loop
xorl
aam
push
or
push
bound
dec
pop
int3
inc
inc
mov
push
mov
push
pop
and
outsl
addl
inc
xchg
jne
loopnew
mov
or
fisttpl
push
cmp
cs
mov
pop
movsb
fcoml
mov
mov
or
inc
and
call
add
mov
pusha
jg
push
mov
fs
rcr
mov
pop
xchg
and
idivl
stos
pop
ds
inc
scas
stos
in
cwtl
les
int3
sub
and
dec
pop
cmp
repnz
fmull
push
mov
and
pop
pusha
fsubr
leave
xchg
push
lret
inc
addl
fstps
dec
test
idivl
inc
adc
pop
rcll
cmpsl
adc
into
mov
fnstenv
std
ret
push
movsl
dec
cmp
pusha
lods
int3
jmp
sbb
xlat
mov
loope
cwtl
mov
out
stos
outsb
jb
xchg
fisubs
shlb
mov
les
xchg
mov
stc
fisubs
outsb
aam
sub
test
jg
lock
xchg
sbb
and
into
inc
push
inc
cmp
or
mov
nop
push
out
loop
shll
jnp
sbb
jg
xor
clc
stos
fs
lods
xor
cwtl
xor
push
xor
addr16
nop
dec
fnstcw
pusha
lds
gs
pushf
push
adc
fwait
push
ret
push
jecxz
inc
xor
dec
test
jp
mov
inc
mov
repnz
dec
push
pop
ret
bound
sbb
mov
push
jecxz
repz
shlb
pop
sub
ret
and
test
shll
leave
jcxz
cmc
or
bound
data16
mov
push
cs
jb
mov
popf
cmp
and
popa
ret
imul
out
pushf
push
mov
add
cmp
sbb
cmp
subb
xchg
dec
fldenv
push
out
sbb
pop
hlt
pusha
xor
fsqrt
stos
jnp
out
jae
xlat
inc
psraw
bound
adc
sub
stos
mov
xchg
mov
xchg
mov
loop
mov
call
out
add
mov
in
ss
xchg
sub
or
sub
arpl
lahf
jb
or
push
std
xor
push
inc
and
test
lea
jae
inc
lds
int
xchg
jbe
xchg
roll
pop
jg
or
fcompl
inc
leave
in
rcr
push
pop
and
popf
jnp
fdivrl
or
dec
roll
add
inc
adc
ds
ds
inc
decb
bound
adc
fsubrs
int
hlt
sub
push
sbb
mov
lods
frstor
in
or
popa
push
popa
sub
sub
ret
test
pusha
int3
mov
rcll
shll
sub
and
insl
outsl
mov
xor
repnz
push
push
add
pop
ds
mov
test
fs
push
fistpl
add
dec
insb
shl
inc
gs
aad
jnp
mov
popl
mov
jnp
shr
and
inc
or
adc
lock
adc
pop
xor
loop
ljmp
in
cmp
cmp
push
scas
ja
xchg
pushf
aam
dec
push
dec
dec
lcall
aad
xchg
cmc
push
popa
mov
xchg
mov
loope
add
incb
mov
outsl
inc
cmp
push
pop
cltd
inc
mov
imul
xchg
shlb
add
push
pop
or
addr16
gs
dec
xlat
ljmp
pop
sub
mov
xchg
addr16
stos
popa
jo
xchg
cli
cmpb
cmc
jbe
cltd
push
loope
dec
xor
lds
shll
sti
mov
sbb
notl
cld
xchg
fidivrl
dec
jg
out
inc
sbb
out
sbb
lcall
dec
in
push
call
imul
or
push
cmpsb
pop
fst
clc
xor
mov
pushf
outsl
cmpsl
in
mov
adc
jge
daa
daa
cmp
sub
mov
push
jmp
adcb
pushf
outsb
cltd
or
test
ret
lret
testl
mov
xchg
push
or
sbb
cwtl
loopne
test
jmp
lret
xor
mov
hlt
repnz
mov
shlb
popa
enter
mov
cmp
mov
les
push
push
xchg
and
rcrl
xchg
fsts
push
out
fwait
pop
fcomip
push
mov
sub
inc
mov
rol
mov
pop
lods
lds
inc
mov
push
cmp
mov
xchg
sub
out
stc
inc
movsb
sub
shr
mov
ljmp
lods
out
stos
pop
adc
jns
daa
dec
inc
mov
add
jae
andb
mov
data16
pusha
xor
dec
in
imul
loope
std
fldenv
add
das
sbb
insl
ljmp
in
mov
mov
sub
pushf
sarb
adc
push
pushf
push
int3
push
mov
sahf
push
jge
ficompl
icebp
lret
and
mov
adc
imul
sbb
lcall
cmpsb
sbb
add
xlat
mov
pop
mov
aaa
inc
and
sbb
cmp
sub
adc
popf
push
push
sbb
in
push
cmp
imul
mov
and
bswap
mov
movsb
or
pop
xlat
scas
daa
pop
test
add
movsb
jne
jbe
gs
fsubrp
push
stos
insb
xchg
je
jge
or
sbb
cltd
push
dec
mov
std
scas
cmp
xchg
data16
fisttps
cmp
insb
xchg
mov
cmp
mov
stos
push
push
inc
xchg
insl
pop
rcrb
jbe
shll
int
mov
dec
add
stos
cli
adc
fwait
sub
sbb
in
movsb
rorl
lock
mov
pusha
pop
clc
inc
cmp
mov
xchg
incl
mov
pop
sub
rol
mov
arpl
push
icebp
push
icebp
jle
sahf
imul
push
das
stos
lods
pop
cmp
outsb
out
sub
ljmp
adc
jne
xlat
popf
push
cmpsb
mov
xchg
mov
xchg
cmp
cmp
push
inc
jecxz
mov
pop
rolb
sbb
es
mov
lods
pmulhw
out
adc
cwtl
sub
push
aam
add
cmp
xor
pushf
pop
ja
mov
xchg
call
and
arpl
jmp
xchg
into
in
shrb
pop
mov
mov
pop
iret
pop
fldpi
mov
iret
mov
sbb
jnp
xchg
xor
imul
mov
add
lods
mov
int3
sub
cmp
cs
bound
mov
inc
sti
cltd
dec
sub
mov
sub
add
int
stos
mov
mov
out
imul
pop
sbb
push
stos
xor
jecxz
aaa
mov
fsubrl
lds
push
and
xchg
add
push
decb
cltd
idiv
testl
xor
inc
sub
aaa
arpl
js
mov
cli
rclb
icebp
add
mov
scas
inc
arpl
xor
rclb
sbb
dec
or
outsb
mov
data16
test
dec
push
lods
je
ljmp
cmpsl
mov
jecxz
int
std
iret
call
push
int3
pop
or
jo
lods
mov
lods
inc
ret
mov
rclb
popf
rorl
incb
dec
fistl
cli
adc
mov
and
mov
idivl
shl
adc
inc
aaa
mov
mov
lock
cli
shlb
jl
ret
push
sbb
fnsave
and
aaa
mov
cmp
nop
outsl
btsl
out
movsb
pop
adc
jecxz
imul
mov
in
mov
xorl
dec
jno
mov
add
sbb
dec
xchg
xor
xchg
add
jae
and
out
in
pop
sbb
aaa
sbb
cwtl
mov
and
jp
lea
int
cs
bound
xor
test
clc
fcmovu
outsl
test
das
int3
imul
shrb
test
icebp
or
xchg
cmpsl
pcmpgtd
adc
cmp
push
test
xchg
scas
daa
pop
pop
les
dec
outsl
mov
pop
fldl
push
mov
sarb
jge
mov
in
icebp
fsubrl
dec
incb
push
jne
test
push
jnp
popf
cmp
scas
idivl
fs
dec
lods
pushf
mov
addr16
call
jl
xchg
jge,pt
bnd
adc
dec
or
scas
out
js
xacquire
fildll
es
sbb
ljmp
lret
add
js
xor
int
and
icebp
adc
fnstsw
aaa
dec
inc
mov
fcmovbe
add
xchg
dec
popa
add
out
mov
dec
mov
into
xor
mov
aas
xchg
sbb
lds
xor
xchg
aaa
leave
mov
sub
adc
das
pop
mov
mov
mov
pop
test
je
movsl
mov
lds
cli
shl
xor
or
rcll
sub
cmpsb
mov
xchg
lcall
mov
fistpll
fldenv
jbe
dec
scas
dec
jo
jecxz
inc
push
xchg
shll
ret
mov
push
mov
clc
xchg
lmsw
lahf
lds
and
test
lret
sahf
inc
sbb
jb
dec
cmp
pop
addr16
pop
lret
xor
push
xchg
push
cmp
insl
cmc
mov
sbb
sub
pop
sti
iret
or
in
and
rcrl
add
push
mov
adc
or
loope
cmp
lcall
jb
dec
dec
rorl
sbb
sarb
pop
push
mov
cmp
in
push
pop
lcall
in
gs
test
fnstcw
sbb
mov
and
iret
cmpl
popf
cwtl
inc
aam
push
jmp
shlb
adc
sbb
mov
into
imul
cmpsb
jle
sarl
out
push
loopne
ds
pop
sbb
lock
sub
jae
jp
imul
xor
in
add
cmp
lock
xchg
pop
shl
mov
mov
jge
imulb
push
pop
xchg
mov
pop
push
fldcw
lret
jnp
jo
mov
outsl
mov
sahf
lret
int3
jns
push
insl
pop
insb
jns
and
pop
lods
orb
lods
jp
and
fnstcw
or
jg
xchg
add
add
push
hlt
jg
jg
and
sub
popf
leave
nop
push
lahf
insb
rorl
push
popa
call
pop
ret
popa
jnp
push
cmpsl
push
repnz
outsb
mov
jecxz
sub
adc
cld
and
neg
icebp
pop
jge
cmpl
rcrl
stos
mov
push
incb
and
xor
mov
inc
add
stos
and
mov
pop
mov
scas
inc
out
sbb
cmp
sbb
xchg
ficomps
jnp
xor
sti
cltd
push
pusha
inc
mov
pushf
jp
xor
adc
insb
sbb
fdivs
jg
sarb
cmp
and
or
jp
dec
ret
testl
jge
pop
inc
push
inc
inc
push
pop
or
inc
fisubs
lds
nop
push
xchg
movb
leave
mov
test
in
data16
adc
xor
mov
aam
jne
inc
mov
adc
sub
push
push
xchg
mov
insl
jp
inc
cmp
lret
pop
xchg
jl
ret
and
imul
cmp
insl
and
xchg
jo
mov
scas
push
jb
mov
jecxz
scas
mov
loop
pushf
lods
mov
jo
fstps
lcall
fwait
sbb
inc
inc
sbb
fnsave
dec
jbe
adc
pop
call
in
lock
lods
cwtl
jl
arpl
mov
loope
addr16
xor
jae
js
ja
xor
ret
inc
jb
outsb
loop
adc
mov
imul
bound
jbe
enter
lcall
pop
inc
jl
ljmp
push
fiaddl
and
lahf
push
cmp
xchg
fs
mov
mov
and
push
pop
pop
inc
push
and
outsb
inc
push
bound
push
imul
stc
pop
and
mov
adc
and
movsb
out
add
mov
pop
aaa
sbb
dec
sub
setg
mov
shl
clc
jecxz
outsl
cltd
shrb
stc
jne
bound
adc
add
dec
clc
out
out
arpl
popf
pop
repz
or
or
mov
imul
adc
lret
jp
xchg
sub
outsb
and
pop
in
lock
in
jl
dec
aam
xchg
sub
adc
ja
push
sub
mov
iret
push
iret
push
mov
test
add
cmp
jecxz
mov
sahf
push
and
mov
test
insl
testb
sub
push
insl
jp
iret
pop
xor
jp
pop
sub
iret
loope
add
fldenv
loop
push
lds
out
adc
je
push
inc
stos
jecxz
test
repz
mov
int3
cs
cmp
ret
repnz
lcall
cli
pop
xchg
int
pop
mov
push
jge
pop
mov
sbb
in
mov
out
mov
test
xor
mov
adc
test
cmp
pop
cli
ljmp
lods
mov
scas
xor
mov
mov
lods
pop
inc
imul
xor
and
movsb
out
cltd
icebp
pop
or
mov
jbe
loope
in
daa
fprem1
jecxz
fmull
out
inc
push
and
cmp
jge
test
imul
jae
and
int
fsubs
mov
pop
push
sti
ds
and
in
add
adc
inc
jb
loop
mov
sahf
stc
push
pusha
hlt
cmp
jbe
addr16
push
pop
sub
cmp
cli
jle
mov
cli
icebp
lods
cmc
xor
mov
fldl
mov
push
jp
push
jg
sbb
roll
std
std
dec
xchg
cmp
lods
hlt
push
adc
jns
imul
xchg
inc
cmpb
mov
inc
or
ret
and
jle
outsb
popa
testb
sbb
dec
jecxz
lds
loop
inc
test
enter
xor
inc
pushf
shll
sub
dec
lahf
adc
lret
ret
aas
dec
pop
jl
mov
ljmp
inc
lods
and
pop
pop
mov
pop
push
jge
call
pop
jp
mov
in
idivl
inc
testb
mov
repz
dec
and
orl
cltd
dec
call
cli
ljmp
xchg
insb
push
out
aaa
add
je
jae
fs
mov
imul
jns
in
mov
popf
mov
push
cltd
popf
dec
jl
pop
and
lahf
mov
or
arpl
imul
adc
pop
mov
add
loop
iret
movsl
fs
mov
sbb
out
xchg
fidivs
and
int3
mov
push
push
js
je
cmpsb
dec
or
xchg
xchg
fsubl
aam
inc
ror
cmp
xlat
cld
adc
jle
mov
fdivs
dec
pushf
sar
cmpsb
je
scas
stos
sbb
shrb
jo
push
pop
and
cltd
lds
out
sbb
jp
data16
shll
outsb
jg
inc
adc
stos
xor
mov
nop
cmc
in
std
push
cmp
outsb
js
orb
sbb
test
mov
and
fidivrl
jne
rcll
out
gs
pop
loopne
hlt
mov
repnz
scas
adc
stos
cld
and
sub
fs
inc
add
stos
idivb
ja
pushf
popa
scas
push
xchg
pop
das
aam
fcomi
in
mov
lcall
jnp
xor
cmp
mov
xor
imul
mov
push
fs
mov
cmp
ret
movsb
push
dec
and
and
pop
mulb
pop
fwait
aaa
scas
xchg
sub
jno
lahf
push
icebp
adc
pop
sub
xor
mov
aaa
add
mov
lods
pushf
inc
or
popf
in
push
sub
cmpl
in
xchg
push
and
xor
testl
enter
bound
repnz
push
push
or
and
lock
fdivl
inc
sub
add
lods
scas
xor
lods
push
jne
out
stos
adc
xor
pop
pop
pop
insl
and
sbb
cmp
add
das
loope
js
fistpll
shrl
push
ret
loop
mov
add
repnz
dec
pop
adc
dec
stc
inc
mov
call
movsb
xor
sbb
pop
sbb
mov
push
sbb
mov
les
lea
cmc
push
ja
pop
cwtl
push
stos
push
clc
pop
xor
loope
add
addl
sbb
daa
jbe
out
mov
inc
pop
sub
dec
push
mov
ds
icebp
std
stos
daa
or
dec
mov
adc
std
cwtl
pop
enter
lcall
shlb
cmp
mov
xor
dec
push
je
daa
pusha
scas
dec
int
fwait
or
jg
fistpl
mov
addr16
cmc
cmpsb
jecxz
mov
out
fs
add
mov
inc
movsb
repz
push
lret
mov
negl
mov
fcoms
es
jge
xlat
ja
jecxz
jno
pop
mov
stc
lret
pop
and
jg
sub
ss
and
cmp
jbe
je
loopne
sbb
sahf
jge
int
mov
sbb
push
or
push
out
sti
sub
pushf
push
fisubs
popf
or
dec
push
lods
push
dec
cld
push
leave
call
loop
out
jns
push
add
sbb
aaa
jmp
inc
xor
out
cmp
in
and
and
xchg
jp
aad
mov
push
rcl
xor
push
or
xchg
xor
enterw
das
std
cld
or
je
inc
mov
fmuls
jmp
fwait
adc
sbb
out
gs
popf
outsb
lods
lret
jbe
outsl
or
clc
dec
sub
xchg
mov
xlat
mov
imul
fdiv
ss
lea
push
dec
mov
scas
xor
mov
fcoml
fistl
mov
inc
out
jl
jae
lock
in
push
pop
fisttpl
imulb
sbb
jno
or
pusha
pop
jnp
add
cwtl
andb
pop
test
dec
out
xchg
int3
sub
fs
sbb
push
in
das
ret
mov
mov
jle
jge
pop
and
pusha
mov
xor
dec
xchg
mov
xchg
out
dec
or
paddw
and
das
pop
stos
push
mov
frstor
cmpsb
inc
mov
out
jmp
dec
jecxz
scas
es
xor
sbb
lock
cs
sti
cli
aam
ret
sbbb
hlt
fmuls
jno
loope
cmc
push
mov
xchg
and
cmc
je
cmp
shll
mov
sbb
int
test
sub
je
stos
ds
jl
jnp
pop
imul
sub
and
repz
mov
cmp
hlt
sub
inc
push
mov
sahf
add
fnsave
sbb
mov
les
push
lea
cmp
out
xchg
clc
test
jne,pt
xchg
stos
int
in
or
hlt
jecxz
sub
push
outsl
es
jle
push
mov
xor
jecxz
inc
aaa
add
add
lret
into
and
mov
stc
dec
jecxz
pop
push
push
jmp
mov
jge
xchg
mov
pop
xchg
out
stos
add
mov
or
push
pop
in
into
ss
flds
xchg
xchg
adc
pop
pushf
jbe
pop
inc
hlt
mov
mov
xor
iret
adc
xchg
in
scas
stos
cltd
cli
push
rcll
movsl
ja
adc
or
sbb
cs
adcl
imul
mov
faddl
mov
adc
cmp
jge
shrb
push
add
lcall
loop
sahf
add
lret
inc
leave
or
iret
inc
scas
ficomps
sub
in
pop
and
ret
fildll
pop
jmp
fdivl
nop
or
dec
sbb
lock
mov
jge
cmp
addr16
mov
jmp
ljmp
aaa
jnp
and
pop
cmpsb
pushl
xchg
icebp
call
mov
mov
or
push
daa
push
lock
mov
lcall
or
push
nop
adc
lea
or
shlb
fstl
clc
mov
insb
cmpsb
jp
lea
mov
and
jp
push
mov
jmp
popa
push
aaa
lret
lea
cs
lods
and
insl
outsl
xlat
sub
dec
and
mov
sub
xlat
xor
loop
mov
mov
rep
jg
xor
mov
cli
rolb
sbb
out
fsubl
add
fiadds
rorl
adc
orb
aam
jg
adc
mov
pusha
mov
enter
outsl
out
mov
xchg
xchg
xchg
pop
movsb
push
add
lret
test
xchg
adc
movsb
and
xor
movsl
clc
adc
mov
call
in
mov
insl
mov
push
mov
lcall
sub
pop
mov
lea
ficomps
out
mov
sahf
push
cmp
out
sub
test
pop
pop
pop
loopne
push
shlb
pop
les
xchg
adc
in
sarb
outsb
jl
sbb
loopne
shrl
jl
mov
js
in
and
mov
and
lret
cs
cmc
adc
cwtl
mov
or
adc
repnz
add
pop
xchg
lahf
out
sub
and
enter
mov
push
xor
jo
repz
dec
add
mov
pop
sti
lret
jmp
adc
pusha
cmc
js
idivl
xchg
in
push
fisttpll
pop
mov
jmp
out
push
loope
lods
pop
cwtl
add
adc
xchg
cmp
jnp
data16
pop
test
fisttpl
push
sbb
push
aad
jb
and
in
or
adc
xor
ret
loopne
xchg
out
jbe
and
in
fisubl
jnp
xchg
dec
adc
fwait
outsl
inc
and
insb
out
ficompl
popf
rclb
and
cli
into
lret
or
lret
cwtl
add
jbe
repnz
jns
jl
rolb
nop
sti
jle
les
jle
insb
lods
data16
popf
sub
dec
lret
mov
fmull
cmpsb
cmp
mov
dec
les
in
mov
inc
sub
lea
stos
xchg
popa
loop
rolb
sbb
fdivs
inc
mov
pop
int3
add
xchg
outsb
jge
and
loop
mov
aaa
sbb
pop
mov
dec
xchg
push
repz
or
dec
fldenv
cld
subb
cs
out
mov
mov
iret
adc
fldcw
jmp
and
movsb
add
mov
xchg
xor
pusha
test
mov
mov
inc
js
fisttpl
and
dec
out
insb
fldcw
or
ljmp
adc
cltd
movsb
divl
cmc
xchg
test
sub
nop
inc
divl
and
inc
jg
pop
out
fmuls
push
cmp
mov
pop
fmull
mov
add
xchg
push
mov
mov
mov
jbe
dec
sub
fildl
dec
bound
pop
inc
push
adc
push
in
mov
sbb
lahf
inc
push
mov
sub
jp
xor
add
push
cltd
pop
xor
xchg
sarl
push
test
sarb
sbb
jnp
cltd
je
sub
push
rcll
shr
cli
decb
jl
push
jbe
adc
push
dec
adc
inc
pop
test
cmp
add
xchg
pop
xor
add
jg
adc
popa
adc
imul
inc
mov
xbegin
imul
insl
shll
mov
cmp
out
fwait
jge
dec
out
daa
dec
es
clc
loopne
aam
sbb
inc
sbb
call
xchg
mov
push
adc
shr
push
ljmp
xchg
and
sbb
and
cli
jge
dec
repnz
sar
pop
imul
push
roll
jnp
insb
sbb
int
div
out
or
loope
or
das
inc
push
inc
jp
incb
cmp
test
bound
adc
pop
repnz
sbb
mov
into
int
les
or
pop
pop
rol
cmc
ja
push
ds
mov
mov
pop
sbb
ljmp
lret
push
fstp
into
jns
jno
or
das
xchg
pop
mov
mov
sub
mov
sbb
and
xor
aaa
xor
sbb
out
push
test
leave
fwait
out
sub
jg
call
loopne
insl
and
jge
pop
outsl
xor
sbb
xor
int
sub
rcr
adc
cmpsl
xorl
add
jnp
xlat
xchg
sub
mov
mov
xlat
dec
dec
xor
scas
push
mov
rcrb
push
mov
xchg
jmp
mov
out
and
icebp
ds
xor
mov
daa
sub
inc
pop
pop
push
loope
mov
xchg
cmp
lcall
jecxz
sbb
xor
xor
add
cmp
data16
add
pop
sub
fs
call
pop
test
adc
les
test
sub
rol
or
roll
xchg
scas
ds
test
pop
mov
fisubl
add
adc
sub
xchg
jmp
and
push
sti
repnz
fistpll
xor
push
dec
dec
nop
xor
adc
les
arpl
jns
pop
xlat
cmp
mov
adc
stos
pop
cmp
subl
call
add
aad
sbb
inc
mov
xor
neg
mov
es
rorl
lock
loopne
insb
popf
push
sub
add
sub
push
out
pop
inc
into
sqrtps
push
mov
shll
xor
or
dec
push
cmp
into
or
lcall
lcall
lahf
ds
out
popa
mov
xlat
mov
or
addl
imul
xchg
js
aam
cmc
mov
rolb
imul
dec
pop
mov
inc
push
std
clc
or
subl
sbb
cmp
sub
adc
jge
cld
dec
mov
not
xchg
jge
int3
arpl
mov
sub
shrl
data16
jb
shll
and
mov
mov
and
xchg
push
inc
addr16
jo
sbb
leave
mov
cmc
iret
add
mov
xchg
xor
sahf
enter
mov
pop
push
in
xchg
dec
arpl
pushf
pop
adc
test
cmpsb
jl
daa
arpl
add
call
dec
shrb
mov
repnz
adc
fcos
fcmovne
hlt
lock
sbb
test
jbe
mov
xor
cwtl
in
lods
mov
mov
outsl
fldt
fidivrs
daa
jmp
xor
push
int
sub
mov
gs
sarl
or
mov
imul
movsl
cwtl
sub
insb
out
dec
xchg
inc
mov
les
shlb
or
or
sub
mov
flds
mov
out
pop
or
negl
ret
xchg
push
xchg
enter
sbb
push
mov
sub
in
jns
or
jno
lea
notl
sub
cmp
inc
sbb
jp
ljmp
pop
stos
and
mov
mov
mov
pop
roll
jmp
mov
mov
jbe
ficomps
loope
mov
mov
sbb
sbb
cmp
mov
xchg
mov
test
repz
sbbl
mov
es
sub
loop
jmp
leave
popa
pop
sbb
cmp
jno
adc
pop
dec
cmp
add
dec
int
scas
dec
ja
outsl
mov
push
movsb
ss
jl
mov
stos
insb
mov
sub
aam
in
xchg
fdivr
lods
jmp
test
sbb
xchg
rcrl
sub
popa
pop
lods
arpl
bswap
and
cmp
sub
adc
in
inc
in
cmpsl
out
mov
sahf
sbb
pop
xlat
iret
mov
mov
fldl
movsb
push
sbb
mov
sub
jns
pop
and
loope
xor
mov
mov
cli
sbb
push
mov
xor
or
repnz
sahf
push
dec
ret
je
push
mov
push
popa
dec
shrb
inc
enter
jno
or
cmpsb
je
adc
xlat
mov
push
xchg
fwait
pop
xchg
cmpsl
popf
imul
xchg
xchg
cmpsl
cmpsb
adc
add
sti
sahf
cmp
mov
or
jns
dec
xchg
mov
out
jp
mov
jp
sarl
in
mov
pop
daa
fdivrl
push
repnz
mov
int
out
icebp
mov
inc
cwtl
fisttps
enter
or
push
pop
cmpsb
inc
lret
dec
icebp
jl
fnstsw
out
jmp
xchg
inc
mov
adc
sbb
aaa
add
sub
push
pop
sbb
bound
mov
pop
mov
pop
loope
jae
test
jg
sbb
imul
dec
push
sarl
cmp
xchg
xor
fsubl
dec
push
push
mov
hlt
jecxz
int
xor
adc
and
sub
add
inc
jmp
mov
dec
lcall
xlat
inc
outsb
sub
pop
pop
jno
lea
cmp
mov
scas
jb
mov
popa
fwait
pop
adc
sarb
mov
xchg
adc
pusha
push
adc
clc
lahf
dec
lcall
stos
push
rol
jecxz
xchg
sbb
ljmp
imul
mov
sbb
push
data16
les
aam
ret
nop
and
or
pop
dec
lock
inc
lcall
jp
movb
in
mov
adc
outsb
popf
jge
push
dec
ffree
cmp
jge
and
mov
xor
or
ja
test
dec
mov
inc
lods
cmp
jae
pop
ja
lea
arpl
dec
mov
cwtl
sbb
sub
pop
xchg
repz
pop
jns
loopne
push
cmp
out
sub
insb
add
inc
cmc
push
and
sub
ljmp
xchg
divb
arpl
rolb
and
insl
in
lret
lahf
push
sbb
pop
add
push
nop
and
movsl
or
out
std
push
cmp
cs
push
orb
lret
lret
lret
fxch
mov
in
push
shlb
mov
int3
bound
xchg
sar
divb
mov
push
add
add
call
mov
sbb
subl
scas
dec
pop
jle
lock
mov
fisubs
and
cltd
pop
loope
xchg
push
jbe
scas
or
pop
push
dec
jb
sub
out
xchg
lahf
sarl
pop
add
mov
in
fiaddl
inc
sbb
push
arpl
xor
loope
or
mov
rcll
and
stc
mov
push
cltd
jno
jns
cmpsb
sbbb
gs
sbb
jle
cld
mov
das
pop
inc
dec
sbb
or
repnz
pop
sbb
sti
daa
stos
outsl
in
addr16
sbb
sti
cwtl
or
imul
hlt
pop
and
sbb
lea
test
add
mov
outsb
popa
push
mov
aaa
mov
mov
fimull
xchg
mov
ret
cmpb
adc
inc
stc
xor
mov
fisttpl
jno
div
in
ficomps
sbb
lods
lret
scas
js
call
insb
out
push
scas
in
add
push
cmpsb
jo
cmp
loop
xlat
call
hlt
mov
repz
loope
lea
cli
insb
mov
lea
dec
mul
jg
popf
dec
gs
inc
loop
and
or
push
lahf
mov
xor
lds
mov
out
enter
and
push
cld
loope
and
sti
mov
sbb
mov
mov
loope
enter
add
jecxz
jbe
btc
divb
hlt
testb
cmp
xchg
add
lods
cwtl
daa
sti
xor
cmp
shll
mov
in
dec
jb
mov
aaa
adc
lret
push
xchg
dec
mov
inc
dec
or
xchg
scas
and
rol
mov
je
icebp
cmpsb
call
jmp
push
sbb
inc
push
sub
xchg
cmp
xchg
inc
orb
inc
fndisi(8087
scas
and
in
test
shl
jae
jb
mov
lods
dec
sub
daa
fdiv
clc
xchg
cmp
push
mov
jns
adc
jno
push
loope
jns
mov
sbb
cmpsl
dec
shlb
push
push
xchg
stos
xchg
mov
mov
and
xchg
pop
fs
push
call
pop
mov
push
repz
dec
mov
adc
mov
or
cmp
push
pop
sbb
sbb
cmp
and
popa
cmp
std
mov
loop
inc
lcall
and
and
pop
les
inc
adc
mov
pop
dec
xor
mov
or
jbe
dec
pop
je
insl
nop
das
adc
mov
sub
cmp
sub
push
pop
sub
sarl
xor
jg,pt
hlt
hlt
sbb
fstl
aaa
rcrl
int3
lock
loope
pusha
pop
sbb
insb
jno
loope
test
pusha
adc
add
and
icebp
and
addl
sbb
wbinvd
jmp
mov
leave
mov
and
mov
sub
dec
int
mov
and
push
imul
and
inc
xorl
mov
xor
mov
sub
notl
and
sub
movsl
push
ret
inc
out
sbb
mov
fmuls
es
aam
add
clc
xchg
fsubrs
dec
data16
push
negl
sub
sub
pop
adc
add
push
dec
out
push
ss
insl
test
das
jl
mov
in
push
lods
loope
adc
clc
arpl
ljmp
out
ret
ficompl
cld
mov
imul
lret
rcl
jb
clc
sub
insb
insl
mov
ret
insb
sti
mov
pop
nop
xchg
les
add
in
mulb
adc
pop
and
mov
lock
pop
xchg
cld
cmpsb
mov
mov
mov
nop
in
pop
pusha
mov
cmp
scas
subb
xchg
inc
or
int
push
imul
es
mov
rcr
fsubl
cmc
jo
sarl
mov
or
adc
xchg
jne
sbb
sbb
cs
sub
pop
scas
popa
cmc
xchg
mov
dec
push
or
leave
insb
js
fstpl
arpl
xor
push
jle
jg
jmp
jns
in
inc
ss
push
inc
mov
inc
pop
leave
pop
mov
push
jmp
adc
add
mov
cwtl
aam
mov
stos
int3
daa
xor
insl
outsb
cmc
mov
xchg
inc
mov
pusha
shrb
or
adc
and
push
out
test
add
sarb
xor
mov
xchg
pop
insl
aas
jmp
sti
xchg
mov
mov
out
cmp
mov
out
jg
scas
jge
popa
mov
pop
push
cltd
add
ds
clc
adcb
or
lcall
loope
sub
mov
aaa
adc
cmp
gs
nop
rcll
inc
dec
mov
dec
lock
and
mov
adc
push
mov
or
dec
std
pop
pop
jno
and
leave
inc
sub
popf
cmp
or
mov
push
loopne
std
jno
xchg
inc
test
push
mov
cmpsl
sbb
push
jmp
cld
cmp
pop
sub
rolb
jg
push
adc
scas
rolb
mov
in
sbb
add
scas
out
shrb
mov
adc
leave
pop
pop
cmp
jmp
pop
aad
adc
pop
mov
dec
sbb
loopne
cmp
add
imul
mov
mov
mov
push
mov
mov
jle
jno
dec
test
pop
adc
int3
out
sbb
jp
pop
rol
xchg
mov
nop
repz
loop
jle
push
jae
out
imul
clc
dec
cmp
inc
or
xchg
shrb
push
adc
lahf
inc
push
add
pop
mov
xchg
movsl
roll
data16
and
push
sub
icebp
stos
add
and
scas
pop
push
inc
jl
lret
clc
inc
xlat
int3
mov
cmp
add
mov
adc
dec
cmp
aad
movsl
cli
pop
and
das
fs
loopne
test
sub
jo
inc
xor
and
and
jo
push
cmp
cltd
mov
dec
inc
pop
pop
data16
mov
ja
mov
or
pop
lcall
sahf
into
sub
cmp
cmpsb
sub
stos
ljmp
cmp
push
cmp
test
mov
mov
fwait
sub
mov
xchg
push
xbegin
adc
push
inc
enter
mov
fcmovnbe
lods
pop
jbe
stos
fsub
inc
fdivrl
jb
cmp
adc
test
mov
adc
sahf
inc
jl
movsl
je
into
fdivrs
mov
cmpb
rcll
mov
mov
data16
push
testb
fstl
test
jl
jg
dec
enter
add
dec
mov
movsl
and
mov
add
clc
ret
sub
mov
cmpsl
jge
cwtl
cmp
aaa
xor
jno
cmpsb
repnz
mov
sbb
leave
ljmp
sub
pop
mov
adcb
cmc
pop
adc
sub
adc
nop
pop
pusha
xor
jns
int
insl
repz
and
dec
repnz
ror
mov
push
sbb
mov
les
imul
fwait
hlt
imul
test
push
push
imul
jmp
fisubrl
xlat
xchg
adc
or
sub
lds
out
cs
fadd
pcmpgtw
mov
and
mov
sub
push
adc
nop
jb,pt
mov
mov
push
out
cwtl
lahf
pop
pop
pop
adc
xchg
test
push
adc
ret
fcoms
ja
rcr
sub
mov
and
jmp
xchg
lret
lds
jbe
les
fstpl
std
insb
push
mov
dec
mov
or
jbe
mov
mov
or
mov
enter
mov
xchg
jo
ficoml
sbbb
jb
add
add
movsb
lods
jg
mov
adc
int
dec
inc
call
aas
sub
adc
and
cmp
rclb
sbb
rcll
es
dec
imulb
sahf
iret
ret
dec
testb
sbb
add
push
test
loop
sub
add
fbstp
ds
mov
add
out
test
mov
inc
pop
rolb
fld
mov
cltd
xchg
fdiv
cmpsb
xor
int
dec
xorl
enter
stos
or
push
xchg
push
and
test
dec
add
vmovaps
jno
mov
test
stos
jmp
jo
push
dec
inc
inc
pop
jl
adc
fsubr
xchg
cld
xlat
shl
rcl
cs
jmp
ret
adc
mov
add
lock
leave
and
sbb
pushf
in
xor
jmp
mov
inc
jp
cltd
lods
push
scas
and
lods
xchg
and
add
push
lret
scas
ficoml
pushf
jg
lcall
lret
ljmp
push
cs
xchg
pop
fwait
xchg
cmp
xchg
sub
and
push
sbb
pop
iret
cld
sbb
pop
ret
mov
mov
jecxz
push
incb
lds
sbb
mov
stos
ss
cltd
jae
mov
adc
pop
cs
out
in
lret
push
pminsw
sbb
dec
les
mov
push
repz
jb
stc
stos
cld
aaa
xchg
mov
aaa
mul
imul
mov
sbb
jbe
add
movsb
cmp
aam
or
pop
into
jno
and
adc
jns
mov
ret
add
daa
adc
jne
fstps
ja
ficomps
inc
jmp
imul
ljmp
xchg
mov
cmpsl
in
dec
lock
and
fildll
push
lret
inc
loope
cli
cmpsl
xor
call
sub
lahf
xchg
enter
repnz
mov
adc
divl
repnz
fdivrp
faddl
fs
inc
popa
lret
out
xchg
mov
xchg
push
movsl
arpl
mov
xorb
or
xchg
icebp
sub
in
adc
and
push
hlt
daa
lods
iret
movsl
fwait
test
stos
dec
mov
adc
xor
test
jbe
sub
mov
insl
testb
cmc
call
push
in
pushf
push
dec
mov
test
mov
cli
add
stos
or
loopne
mov
lods
imul
fisubs
test
jg
jle
shr
outsb
repnz
sub
mov
mov
outsl
mov
jb
ss
add
xchg
call
sbb
dec
lods
add
or
add
mov
jge
cltd
test
clc
or
outsl
dec
int
adc
out
lods
pop
repnz
cltd
arpl
dec
inc
je
add
scas
dec
or
and
xchg
es
jg
inc
das
jl
push
fisttps
repnz
lcall
or
fbld
sub
sahf
sbb
push
outsb
mov
mov
push
popf
cmp
jb
fwait
test
das
xchg
add
jmp
mov
xchg
pop
sub
test
mov
out
add
stos
leave
shlb
imul
dec
lods
sbb
cld
test
sub
mov
xor
dec
cltd
rcrb
loop
or
loope
inc
shlb
in
fadd
jmp
div
mov
into
ja
cmp
rcll
push
repnz
imul
clc
adc
adc
jp
push
sub
cmp
xor
xchg
mov
out
mov
add
popa
fisubrl
push
or
pop
fstps
loop
or
shr
adcl
test
inc
pushl
rorl
add
xlat
sub
imul
loopne
into
jmp
fwait
pop
dec
inc
and
pop
andb
mov
inc
push
lods
push
loop
icebp
jge
push
daa
or
mov
jg
mov
mov
adc
ljmp
aam
sbb
int
push
int3
sub
pop
ret
out
pop
or
movsl
xchg
fildl
insl
aas
dec
std
push
stos
notb
sbb
ja
pop
arpl
push
pop
adc
movsl
adcb
jns
pop
xchg
xor
pop
xor
or
loop
cmpsl
pop
fisttpl
xchg
mov
dec
push
push
push
add
add
sbb
sti
in
loop
xchg
jne
xor
mov
push
sti
loop
mov
test
inc
dec
iret
sarb
push
in
push
xor
sbb
adc
shlb
mov
stos
pushf
pop
movsl
xchg
lahf
push
es
inc
sahf
sbb
lahf
mov
mov
iret
pushf
xor
mov
ja
cmp
in
movsl
xlat
addr16
fwait
jns
cmp
jno
scas
jne
std
add
jns
and
push
inc
fwait
test
add
mov
psllq
sub
mov
jne
arpl
cld
jnp
mov
scas
xor
add
and
mov
mov
decb
mov
xchg
stos
subl
sub
or
sbb
lret
insl
gs
cmp
jmp
adc
dec
mov
mov
stos
mov
adc
sbb
fldl
ds
mov
pusha
pop
icebp
int3
nop
cmpsl
stos
sub
xor
cmpsl
xlat
xor
stos
aad
mov
xor
aas
iret
dec
lock
rol
xchg
mov
fstl
int3
fmuls
xor
lea
adc
xchg
push
xchg
in
sbb
or
test
iret
jecxz
push
cld
mov
test
in
dec
ret
lcall
mov
inc
aaa
stc
add
cld
sbb
sub
add
shl
push
pop
sub
mov
pop
rcr
mov
inc
push
jno
call
lret
sbb
aaa
jmp
int3
lret
icebp
cmp
fistl
roll
cmp
xor
xchg
mov
popf
jnp
mov
outsl
sbb
cmp
adc
sub
cmpsl
jnp
std
pushf
fistps
mov
sarb
imul
movsb
das
in
gs
mov
pop
test
lret
and
jns
pop
jo
out
enter
mov
and
iret
mov
mov
mov
sahf
sub
test
cmp
arpl
cli
sbb
rorl
test
xlat
or
adc
add
inc
pop
fwait
jnp
jp
push
inc
jne
jl
test
mov
jno
push
pop
sbb
jle
xchg
imul
rorl
push
pop
mov
aad
fsubr
rcr
push
cmp
jb
dec
xorb
xchg
adc
loop
lods
clc
xchg
sub
add
mov
je
jmp
addl
xchg
push
mov
sarb
mov
arpl
ficoms
rorb
shlb
clc
mov
jmp
sti
fldt
sub
das
cld
out
xor
popa
mov
insl
ja
and
jnp
loope
shll
or
test
mov
mov
insb
push
adcb
add
xchg
xchg
bound
addr16
jno
mov
repz
iret
jg
test
imulb
pop
jmp
mov
jne
add
jb
pop
test
adc
mov
pop
gs
ret
rcrl
and
cmp
xchg
maskmovq
divl
outsb
ficompl
jecxz
hlt
leave
mov
xchg
cmp
mov
sahf
into
rorl
xchg
pop
push
in
fs
mov
xchg
div
xor
sub
mov
xchg
add
xor
icebp
sbb
test
fsubr
jne
ljmp
ja
pusha
or
daa
jl
mov
xorl
adc
push
data16
lods
repz
mov
ss
rcrb
jle
xorb
jp
pop
cmp
jbe
cmp
jbe
lea
mov
sub
test
push
or
ss
clc
test
test
cld
add
jno
pusha
cltd
fisubrs
cmp
test
out
or
imul
das
pushf
adc
sub
outsb
icebp
jno
fsubs
rorb
in
lods
inc
scas
push
loope
int
jl
xor
push
pop
mov
dec
insl
and
or
addr16
out
pop
fnstenv
push
mov
gs
jno
lret
repz
sub
aad
cltd
and
jg
mov
sahf
add
xor
xor
inc
enter
icebp
mov
movsl
in
sbb
push
dec
push
out
xchg
cmp
int
sbb
cld
dec
xchg
xchg
cltd
test
dec
add
mov
cmp
shlb
arpl
sarb
jmp
pop
dec
mov
mov
test
push
leave
cmp
cmp
adc
mov
mov
std
push
ror
add
loope
stos
pop
scas
mov
ss
addr16
subl
stos
xchg
fisubrs
lods
js
jns
push
test
repz
inc
mov
aam
jge
pop
ret
pop
xchg
mov
call
ficoms
jb
cmpsl
sbb
mov
push
addr16
lcall
rcl
mulb
imul
loope
mov
pop
aas
pop
cmp
dec
cmp
jo
ret
add
inc
jp
scas
loopne
sub
pusha
jge
xor
mov
dec
push
pop
xor
jl
lcall
add
pop
push
xchg
test
or
xor
in
inc
sub
outsb
inc
push
mov
mov
pop
mov
orb
adc
mov
idivb
or
mov
push
loop
mov
inc
into
cmp
int
enter
mov
shll
mov
mov
push
movsb
aaa
sbb
xor
jp
into
sbb
inc
mov
lahf
rorb
cmp
es
xchg
jmp
cmp
push
push
or
jno
jge
mov
mov
clc
and
lods
xchg
cmp
imul
rcrb
sahf
fcoml
mov
xchg
movsb
sub
mov
dec
add
adc
pop
sbb
ja
adc
cltd
aad
jno
fldcw
dec
das
adcb
psubsb
dec
adc
mov
popa
bound
popa
iret
xchg
lcall
xchg
into
cld
sub
mov
jge
sbb
xorb
lock
mov
lods
xchg
push
pop
shlb
adc
mov
mov
xchg
loope
push
fisttpll
jle
dec
mov
clc
aaa
jp
add
pop
mov
sub
sbb
int
cld
add
jae
scas
sub
and
cwtl
int
cmc
xor
fsubs
imul
xchg
lock
insl
lret
sub
sbb
ljmp
lret
les
shrl
cli
push
je
pop
popa
lret
cmp
adc
rclb
sub
dec
popa
adc
leave
push
inc
jbe
andb
adc
cmpsl
stos
xor
mov
rcll
loope
lahf
mov
in
ds
rol
adc
and
add
mov
sub
out
xchg
sahf
inc
adc
xchg
lods
adcb
shrl
fnstenv
lret
jg
mov
les
xor
shll
out
lret
xor
ds
ja
sbb
mov
xor
inc
lock
fldl
insl
push
or
data16
cmp
pop
pop
adc
inc
push
jbe
aad
sub
les
ficompl
mov
push
lcall
pop
aam
add
pop
jmp
ja
nop
inc
bound
popf
cltd
stos
push
rcrb
ljmp
pop
imul
enter
mov
mov
sbb
pushf
popa
ret
xor
jle
push
ret
daa
imul
ja
mov
add
or
mov
mov
sub
xor
lods
xchg
loope
xor
push
lea
cmp
outsb
into
mov
xchg
sahf
mov
leave
and
repnz
out
and
fs
mov
fldcw
popf
or
out
test
gs
roll
mov
call
fst
xchg
fadds
mov
inc
out
mov
dec
mov
imul
xchg
hlt
xor
mov
aad
cmp
aad
cmp
push
cmpsl
inc
mov
pop
insl
mov
push
ja
into
aam
push
pop
or
sbb
or
push
xor
fcoml
std
mov
fs
ror
push
mov
dec
pop
jbe
fdivrp
push
movsb
dec
mov
aad
xchg
and
lahf
push
pop
aad
orb
xor
loop
push
cltd
pop
dec
mov
imul
push
je
mov
mov
pop
popf
jno
add
mov
jns
lret
cwtl
sub
gs
add
lods
call
loope
or
sbb
out
es
add
mov
push
cmc
addr16
in
pop
scas
and
fs
push
mov
test
fcomps
iret
mov
aas
incl
addl
enter
push
xchg
dec
mov
cmp
test
sub
xchg
out
mov
mov
ret
aam
jb
imul
or
dec
xchg
or
pusha
rcr
lahf
lods
fidivl
push
in
or
push
hlt
pusha
out
adcb
in
or
inc
mov
push
jbe
aaa
lcall
mov
xchg
inc
insb
int
cmp
mulb
and
movsl
icebp
out
add
mov
dec
mov
pusha
inc
mov
fcomip
in
jno
dec
dec
inc
dec
xchg
pop
iret
adc
jno
xchg
xchg
jae
ja
cltd
cltd
pminsw
pop
insb
lret
add
iret
mov
arpl
cmpsb
test
addl
nop
cmc
jno
adc
mov
sub
sti
add
popf
add
popf
dec
sbb
inc
adc
lcall
shrl
push
pop
iret
or
fs
add
xlat
sete
cmp
je
insl
sbb
std
mov
mov
add
fld
es
clc
insl
movsb
mov
xor
xchg
xchg
aad
insb
mov
push
inc
fsubp
mov
inc
inc
mov
pushf
iret
insl
dec
aaa
lcall
jns
xchg
daa
mov
xor
mov
pop
loope
aas
stc
push
stos
and
push
lods
jge
push
mov
pop
ficoml
or
pusha
mov
cmp
lahf
push
std
leave
scas
fs
inc
push
imul
hlt
int3
outsb
mov
cmp
fdivrl
xor
sub
inc
add
pop
das
call
nop
jge
lock
xchg
inc
out
or
lods
arpl
clc
xchg
lea
cld
jne
nop
or
and
in
xchg
decl
push
push
push
mov
gs
out
pop
cmp
sbb
jp
jp
fmull
push
pop
mov
mov
clc
jnp
es
imul
lods
mov
mov
pop
sarl
jp
xor
bound
xchg
sahf
in
lret
jo
orl
push
mov
test
add
sbb
adc
icebp
lea
jmp
out
xchg
fimuls
ret
and
or
pop
icebp
push
bound
push
mov
daa
outsl
pop
jp
adc
aas
dec
hlt
dec
nop
dec
push
insl
mov
out
hlt
push
mov
and
adc
inc
pop
lods
test
push
or
push
imul
pop
popf
mov
jecxz
cld
imul
fs
aam
shrl
sar
mov
lahf
xor
jmp
rclb
lock
clc
push
push
adc
pop
in
popf
mov
sub
mov
stc
cmp
out
pop
jne
lret
addr16
cmpsl
or
inc
xlat
scas
scas
push
add
rcl
inc
testl
ret
stos
mov
sub
hlt
sub
sbb
pop
inc
mov
xchg
insl
dec
int
adc
bound
pop
ret
inc
cmp
or
or
pop
sbb
pop
inc
andb
daa
or
aas
cmp
enter
inc
movl
popf
js
data16
xchg
ja
fidivs
aas
push
movsb
js
and
pushf
add
in
ficomps
mov
sub
cmp
in
jo
jae
pushf
cmp
sbb
sbb
hlt
stos
sarl
push
notl
insl
mov
push
int
mov
fsubs
dec
addr16
sbb
push
loope
adc
fwait
adc
sahf
xchg
out
movsl
mov
shl
or
mov
pop
cmp
iret
aaa
pop
push
aad
ss
in
loopne
mov
pusha
lahf
pop
lock
dec
jnp
test
mov
out
shlb
call
insl
pop
int
cmpsb
xchg
sub
jo
icebp
clc
popf
popa
xlat
rcrb
xor
mov
repnz
aad
sbb
xchg
rolb
xchg
dec
mov
sub
xorb
adc
dec
test
xchg
xchg
adc
int3
nop
inc
mov
and
push
cmp
mov
stc
inc
jecxz
and
pop
dec
mov
pop
jae
ds
adc
jae
jge
rcrl
stc
pop
test
imul
fstpl
add
xchg
push
push
inc
cmpsb
lods
adc
sbb
std
xchg
mov
scas
dec
iret
adc
mov
movsb
sub
mov
int
jne
inc
popf
push
in
inc
adc
xor
stc
ds
xor
sub
mov
xchg
shrl
lcall
cmp
lret
jns
cmp
cld
mov
mov
setp
inc
push
in
mov
out
xor
aaa
push
mov
loop
adc
adc
stos
and
das
pop
sub
icebp
rorb
and
jge
fldt
push
testl
add
jg
mov
inc
daa
xlat
fists
clc
adc
cmp
imul
xchg
dec
cmp
fnsave
enter
inc
mov
push
jns
lods
adc
std
mov
js
jo
xchg
and
outsl
sahf
pop
nop
hlt
stc
inc
or
push
incb
mov
stos
outsl
pop
pusha
inc
dec
faddl
push
jbe
and
or
ljmp
sub
out
mov
mov
push
and
or
loopne
push
ret
ja
rcl
xchg
mov
out
popf
roll
mov
dec
add
test
pop
insb
mov
lock
mov
lret
call
xchg
pop
jne
imul
loopne
subl
testl
ds
sbb
pushf
je
inc
and
add
jge
imul
shlb
dec
scas
sbb
negl
pusha
push
inc
push
movsb
mov
and
dec
cmc
std
popl
sbb
mov
inc
push
jg
push
cmc
adc
fcoml
push
cld
int3
pop
xor
sub
popf
and
leave
xchg
sbb
fildl
cmp
cmp
adc
cltd
inc
pop
popl
mov
and
sub
jmp
push
shr
cmp
pop
fsubp
add
push
cmp
add
lret
lock
xchg
js
mov
nop
pop
push
cmpsl
dec
sahf
ja
addr16
incl
pushf
fwait
test
xor
jg
and
push
xchg
daa
mov
pusha
xor
or
mov
mov
loopne
xchg
jp
add
cmp
rcr
enter
int3
icebp
and
nop
popf
into
outsb
push
or
or
xlat
mov
push
fmulp
cmp
cmp
or
pop
imul
aam
or
addr16
mov
and
and
xor
xchg
add
int3
mov
pushf
add
cld
in
aas
gs
mov
push
or
xchg
ja
fcompl
add
fnstenv
movsb
stos
xorl
mov
jns
aam
and
testb
sbb
adc
es
pop
out
dec
clc
mov
jae
test
out
movsb
popa
aas
mov
je
mov
mov
cmpsb
mov
stc
aaa
aas
cmp
int3
push
mov
mov
ret
rclb
push
pop
aas
pop
mov
add
adc
movsb
ljmp
stc
fildl
pause
lret
dec
add
or
cmp
cld
dec
gs
cltd
mov
dec
or
push
pop
pop
jne
insb
or
loope
test
inc
inc
sub
test
daa
xchg
jo
sahf
mov
mov
add
push
adc
mov
jbe
jno
arpl
mov
pop
rcr
repz
push
stos
int3
cmp
sub
js
jp
popl
sbbb
xchg
mov
mov
mov
sub
mov
stos
jecxz
loopne
adc
and
mov
push
pushf
adc
stos
jmp
jl
inc
mov
lahf
leave
mov
nop
and
dec
inc
dec
sbb
rorl
adcb
mov
inc
mov
dec
sub
or
cli
mov
into
mov
mov
and
fisubrs
lea
mov
and
mov
ret
sub
lock
cmp
sti
jmp
mov
pop
les
movsb
ret
test
sbb
jnp
jae
daa
jmp
push
dec
into
test
std
sub
jecxz
in
adc
cmp
jae
cmp
scas
and
pushf
cmpsl
movsb
js
movsb
rol
pop
lahf
and
jae
sub
dec
mov
cmp
mov
rclb
inc
scas
or
imul
outsb
ss
out
xchg
jnp
or
jno
aad
ret
out
and
bound
xchg
test
clc
xchg
js,pt
jecxz
mov
cmp
lcall
std
push
ljmp
cmp
and
rcrl
mov
xchg
shl
dec
mov
push
and
xlat
push
add
les
xchg
push
insb
shr
fdivp
inc
adcl
sub
jmp
pop
adc
mov
push
loop
cmp
inc
xchg
mov
and
popa
test
shrl
push
xor
aad
pop
shll
mov
lahf
rclb
dec
xor
mov
add
jl
in
movsb
add
mov
std
cmp
jp
sub
add
jl
mov
mov
test
xor
rol
ja,pt
or
loope
les
sbb
insl
jle
pop
cmp
fimull
or
pop
fisubrs
scas
movsl
out
sti
ds
in
repnz
fistps
push
inc
adc
lock
push
pop
mov
adc
cli
xchg
push
int3
jp
js
or
cs
mov
arpl
test
imul
mov
and
xlat
in
aaa
jmp
int
popa
lods
movsl
int
adc
mov
jb
subl
push
hlt
mov
bound
push
fisubrl
mov
fisttpl
aam
je
cld
data16
imul
xor
idivb
mov
imul
cmpsl
sub
in
xor
inc
xchg
pop
movq
ss
ss
mov
xor
jnp
inc
inc
adc
lods
mov
fstpt
loopne
or
pop
add
or
and
add
xchg
mov
cmpsb
arpl
mov
daa
in
cmpl
aaa
add
cmc
sbb
mov
iret
js
ret
jnp
add
repnz
xchg
lret
xor
mov
out
adc
movsl
sub
notb
fadds
mov
les
int
std
ret
pop
stos
test
fcmovnb
push
imul
or
jne
xchg
popf
inc
xchg
imul
test
and
leave
xor
push
int
dec
jge
data16
pop
rcll
js
pop
and
xchg
xor
aaa
shrb
sti
adc
xor
push
fisubrs
test
mov
sbb
lods
iret
fwait
xor
paddusb
out
dec
add
xor
nop
cmpsl
mov
jnp
xlat
cmp
xchg
lcall
sub
aad
shl
cmpl
xlat
in
daa
mov
push
icebp
cmp
fisttpl
push
aam
xchg
sub
divb
scas
shrb
inc
push
jnp
xchg
add
dec
negb
repnz
sub
cmpsl
test
fisubs
sbb
movsb
push
xlat
clc
push
mov
insb
loope
push
jl
xchg
data16
insb
test
inc
test
push
xchg
incb
popa
mov
movsl
in
out
cli
sbb
lret
jnp
mov
fiadds
mov
inc
pop
jnp
cmp
pop
vpcmpgtb
es
fisubrs
imul
daa
fsub
xchg
lcall
xchg
gs
and
mov
jle
or
and
cs
std
jge
push
pop
mov
inc
inc
add
subl
data16
out
push
sbb
and
push
scas
pop
inc
ds
push
into
faddl
lods
sti
jnp
mov
mov
call
jmp
mov
jne
lea
mov
nop
fidivs
shrb
push
mov
jo
inc
inc
cmp
cmp
or
dec
lahf
sub
xchg
mov
or
add
out
pusha
movsl
cmp
mov
or
and
dec
out
jne
gs
sahf
adc
in
xchg
lds
xchg
loopne
cld
into
and
fwait
xor
outsb
outsl
sarl
loopne
fildll
add
mov
sub
lea
jnp
repnz
mov
pop
orb
leave
lret
add
xor
push
xchg
in
cmpsl
cltd
push
cwtl
fs
push
dec
dec
add
push
sahf
push
popf
push
jl
dec
insl
push
bound
test
nop
xchg
mov
xchg
lds
sbb
mov
sub
xchg
fstps
pop
inc
fnstenv
ffreep
and
pop
cmp
jmp
fsubr
enter
xor
mov
adc
and
inc
lods
orb
add
cmp
dec
scas
lods
and
jmp
jbe
clc
stos
add
sub
lock
mov
lock
mov
mov
jae
std
sub
fnstsw
dec
js
push
fadds
decb
pop
dec
iret
imul
fimuls
xlat
and
xor
gs
mov
mov
sahf
imul
jl
or
lock
push
xor
iret
or
push
js
sbb
xor
and
and
ljmp
push
std
cmp
repnz
jno
ret
sbb
xor
cmpb
in
subl
fisubrl
jp
jo
dec
inc
ds
adc
xchg
push
dec
out
pop
aas
mov
add
hlt
push
mov
mov
lret
sub
test
cmp
enter
hlt
and
in
lcall
in
aad
mov
test
out
jecxz
pop
into
cmp
xchg
call
les
bound
out
out
mov
or
lods
add
sbb
or
pop
ret
jns
loope
cmc
or
ficomps
mov
imull
pop
add
cmp
lret
xor
sbb
insb
enter
xor
inc
jl
mov
dec
add
fstp
mov
adc
insl
sahf
push
inc
lcall
pop
sbb
divl
xchg
fbstp
pop
int
or
test
xchg
cwtl
in
popf
shrb
push
push
mov
jle
push
out
stos
fisubrs
iret
movsl
dec
sbb
inc
mov
pop
mov
sti
mov
sbb
mov
rclb
mov
aas
cmp
dec
xchg
lock
push
jle
mov
shll
test
sbb
adc
dec
push
inc
cmp
sub
pushf
xor
ljmp
sub
push
mov
xlat
imul
dec
add
mov
out
stc
and
hlt
jne
loop
jle
insl
fildl
test
jae
xor
jmp
mov
and
mov
lahf
int3
xor
mov
rclb
in
or
imul
sarl
aad
pop
xor
filds
sbb
lds
jg
sarl
in
out
imul
out
sbb
sbb
cmp
rcrb
mov
mov
pop
jp
pushw
and
and
negl
jg
jbe
fidivs
aad
orb
leave
pushf
pop
test
pop
xchg
mov
leave
lret
daa
xor
lock
push
outsl
mov
inc
push
push
mov
loopne
insb
aam
mov
add
xor
push
mov
and
push
pushf
xor
aad
xchg
or
ja
jle
stos
les
repnz
loop
pop
bound
jg
imul
fsubl
jo
sarl
add
stc
mov
xchg
scas
pushf
mov
test
test
adc
ret
push
out
cmc
push
movsl
and
sub
mov
push
cmp
push
mov
push
inc
mov
inc
cmpsl
lds
jnp
mov
mov
out
test
mov
xchg
add
mov
js
push
jne
mov
xchg
nop
cmp
btc
or
mov
and
in
inc
mov
dec
mov
push
xlat
and
sbb
push
sahf
cmc
or
cs
cli
stos
popf
mov
fisubs
pop
xchg
push
dec
or
daa
lahf
outsb
mull
dec
mov
pushf
xchg
in
fisubs
pop
enter
inc
push
lea
nop
pop
rorb
cmpsb
pop
dec
in
mov
cmp
sbb
mov
inc
imul
fidivrs
push
sbb
xchg
mov
mov
les
bound
xor
ficoms
clc
loop
xlat
lahf
test
pop
push
push
dec
enter
loopne
and
hlt
pushf
outsl
cmp
sub
push
sbb
xor
sbbb
mov
cs
and
mov
mov
lods
not
pop
push
mov
scas
repnz
mov
or
fwait
movswl
mov
fsts
or
insl
add
sbb
add
mov
cmp
icebp
shlb
mov
dec
sbb
pusha
dec
cltd
lods
mov
jl
lea
insl
popf
aas
mov
push
pop
sub
scas
push
inc
and
xor
sub
mov
inc
mov
xchg
fchs
dec
adc
lahf
dec
add
xchg
movsl
test
adc
and
jl
and
or
stos
pop
cmp
pop
fstpt
ror
dec
jns
pop
in
lea
arpl
and
shll
cmpsl
negb
mov
sbb
shl
jae
sbb
inc
arpl
pop
test
push
push
in
test
xor
inc
cld
jg
lahf
arpl
push
stos
mov
lods
add
add
fidivrs
cld
mov
xor
jnp
lds
push
inc
into
push
xchg
enter
dec
mov
push
movsb
out
dec
in
lock
add
rolb
in
fcomp
test
sub
inc
mov
push
je
xor
lds
ljmp
or
dec
cmpsl
mov
xlat
lods
mov
sub
xor
mov
stc
icebp
imul
add
pushf
or
dec
mov
mov
sahf
push
add
adc
imul
adcb
pop
aam
pop
faddp
insb
rcrb
dec
scas
and
push
aaa
push
cwtl
pop
pop
sub
fists
fildl
mov
movsb
mov
lods
pop
orb
jecxz
pop
mov
cmpsl
jmp
pop
fs
stos
fnstcw
pop
cli
lret
mov
andl
aas
or
cmp
test
jl
scas
xor
imul
stos
mov
add
pop
out
mov
out
dec
pusha
xchg
add
mov
orb
rcr
and
add
xchg
xchg
imul
out
add
cld
pop
mov
orb
and
fmulp
lcall
push
mov
out
jne
cld
mov
sbb
and
pop
adc
sub
shrb
sbb
dec
aam
mov
cmp
cmp
and
in
or
adc
addb
mov
push
push
movsb
or
ret
ss
add
and
fidivs
jb
xor
ja
inc
mov
mov
pusha
cmp
jns
adc
push
and
mov
push
aas
mov
lock
in
inc
pop
imul
push
jo
xchg
inc
pop
push
add
push
jno
dec
adc
xor
cs
imul
cld
insl
mov
xchg
push
mov
into
fwait
cld
inc
pop
xchg
mov
push
stos
dec
dec
mov
pusha
scas
lret
stos
add
test
or
cmp
outsl
aad
cmp
fstpt
and
popa
imul
mov
xchg
sub
add
mov
sub
in
xchg
lock
cmp
jge
lret
xchg
adc
xchg
icebp
sbb
gs
addl
pop
dec
sbb
and
js
cmp
rcll
dec
std
mov
xchg
nop
jp
push
lods
xor
jne
repz
inc
xchg
mov
loopne
or
dec
push
movsb
or
loope
fwait
push
xlat
dec
jge
shr
push
je
push
jno
mov
pop
sarb
mov
dec
jle
hlt
mov
push
movsb
out
mov
pop
ja
jbe
xor
sbb
sbb
xlat
push
adc
orb
jp
mov
xchg
scas
cmp
loop
push
div
test
inc
icebp
push
fldt
pop
addb
popa
incl
repz
adc
add
inc
clc
xor
arpl
cmp
iret
les
call
aas
xor
pop
adc
out
pushf
cmp
iret
jmp
insl
sbb
popf
shlb
adc
aas
add
or
lret
add
std
call
jnp
and
out
jmp
cmpb
ds
jns
dec
pusha
or
int
xchg
add
jmp
mov
push
xor
push
ja
push
fidivrl
ret
cmpsb
cmp
sub
data16
clc
dec
mov
test
or
adc
xor
inc
bnd
cmpsl
mov
bound
inc
ds
inc
pop
clc
xchg
daa
lret
and
xchg
insb
sbb
xlat
jecxz
stos
movsl
mov
rcr
jp
call
mov
rorb
rcl
push
sbb
or
gs
pop
xlat
pop
mov
pop
addr16
sub
vmovntdq
push
in
xchg
xor
test
lea
sbbl
or
jbe
clc
fmuls
in
xchg
xchg
in
xchg
mov
sbb
scas
xchg
movsl
jnp
daa
push
inc
shlb
cmp
jb
mov
pop
icebp
cs
std
es
aaa
ja
loope
jle
iret
inc
add
sarl
enter
jge
mov
aas
jns
aas
aam
pop
test
gs
jb
andl
pusha
jo
daa
xchg
das
clc
aam
sub
pop
hlt
dec
or
sbb
sbb
dec
fwait
mov
jg
cmp
and
bound
pushf
pusha
fldcw
add
cli
pop
es
push
sarb
dec
push
mov
mov
loope
test
rorb
cmp
mov
mov
stc
insb
lret
imul
jnp
jle
inc
shll
ficomps
and
or
in
jecxz
out
pop
fdivrl
xchg
push
pop
dec
int3
mov
lds
xchg
and
mov
sbb
fcoms
cs
rorl
fildl
jl
addr16
push
mov
scas
mov
nop
jo
mov
out
loopne
fwait
shrl
push
adcb
outsb
lret
addl
incl
bound
push
mov
sub
mov
mov
testb
mov
rcr
sbb
pop
imul
or
sub
mov
adc
push
jl
add
push
aaa
subb
push
inc
jp
mov
pop
dec
insb
lods
push
or
movsl
mov
enter
or
stc
cmp
sar
xchg
mov
loope
xor
leave
loopne
mov
jge
mov
or
ds
shl
sub
mov
not
or
ja
pop
cmc
pop
mov
popa
and
aaa
adc
sbb
inc
jmp
fs
in
call
cwtl
sub
or
cmp
repz
call
cmp
pop
hlt
and
mov
inc
hlt
outsb
add
mov
fidivs
jbe
inc
fdiv
or
sbb
xor
loope
push
or
inc
jae
cmp
pop
outsb
lret
sub
sbb
mov
popa
pushf
mov
lahf
xchg
jbe
adc
pop
inc
pop
or
dec
lahf
iret
shll
cmc
pushf
or
movsl
fidivrs
dec
or
inc
lods
sub
mov
cmp
add
pop
push
sahf
idiv
repz
or
sarb
or
cmp
lods
into
xchg
add
pop
xchg
pop
shrl
ret
arpl
add
xchg
inc
out
push
xlat
mov
xchg
dec
loop
fisttpll
popf
and
outsl
add
les
jae
adc
mov
insb
mov
or
lea
push
lods
leave
fcompl
pop
adc
add
cmp
xor
sahf
nop
jecxz
or
shrb
shrb
jmp
add
push
sub
jge
std
jb
mov
ljmp
or
push
ljmp
enter
fcoml
ret
fdivrs
sbb
sub
xchg
das
add
shlb
mov
push
xor
or
loop
mull
ror
out
mov
xor
pop
mov
testb
push
sahf
mov
and
in
adc
stos
and
pop
ss
popf
jp
dec
mov
jbe
add
roll
imul
push
les
sub
pop
add
xchg
test
nop
adc
add
sbb
pop
bound
sbb
mov
adc
push
enter
push
testb
ss
add
lret
sbb
push
insl
and
jns
and
ss
add
mov
fsubr
sbb
push
pop
stc
mov
add
mov
dec
sub
repz
jmp
xorb
gs
mulb
outsb
das
cmp
mov
out
adc
dec
mov
into
add
sbb
pop
mov
inc
cltd
sbb
das
xchg
iret
mov
stos
popf
scas
xor
jns
test
leave
mov
outsb
push
rorl
movsb
lods
in
outsb
insl
gs
pop
test
out
mov
mov
dec
jb
fwait
xor
jno
popf
in
pop
jbe
jo
cmp
cmp
mulb
mov
cmpsb
mov
cld
inc
les
jp
jg
xor
or
movsl
leave
fwait
loopne
ja
pop
in
loop
mov
dec
out
jb
push
inc
dec
test
xor
pop
cmp
negl
dec
mov
loop
pop
pop
fisttpl
and
sti
add
and
insl
out
xchg
jno
test
aas
sub
adc
mov
xor
pop
test
rclb
imul
pop
dec
jbe
push
int3
adc
mov
rcrl
inc
or
sbb
stos
and
mov
push
mov
popa
shr
sub
push
dec
jg
pop
xor
aad
xchg
lret
enter
test
xchg
test
ret
inc
push
jb
repnz
iret
mov
adc
nopl
mov
and
mov
mov
lock
hlt
mov
out
cwtl
flds
and
mov
in
enter
mov
mov
int3
adcb
pop
push
xchg
and
mov
incl
fdivrs
movb
sub
xor
enter
mov
adc
push
fmull
mov
push
inc
pop
mov
imul
jmp
int
sub
nop
pop
subb
repz
or
jnp,pt
movsl
mov
push
pop
lods
out
add
mov
out
gs
outsb
and
add
loopne
xor
hlt
in
mov
inc
add
mov
ret
imul
jae
ja
xchg
aaa
pcmpgtd
jle
das
lret
popa
stc
pop
test
sub
ret
test
and
xchg
call
mov
out
dec
daa
lods
ja
xor
jae
sbb
xor
push
and
or
pop
stc
movsb
ffree
mov
daa
push
dec
pop
lahf
jo
or
push
and
fwait
jg
xchg
inc
inc
loope
mov
popa
psrad
sub
cmp
cmpsb
leave
stos
mov
mov
xchg
fwait
adc
add
cmp
popf
iret
imul
or
and
mov
xor
push
add
add
sahf
add
adc
sahf
push
adc
jns
mov
leave
mov
pop
dec
ret
sbb
jae
cmp
daa
mov
adc
jmp
sub
nop
loop
sub
je
adc
push
jg
rcr
movb
stos
lahf
movsb
mov
push
addr16
loop
notb
xor
push
mov
test
push
cs
push
sub
shll
mov
xchg
loopne
mov
push
jle
xchg
xchg
imul
cmp
iret
arpl
push
inc
data16
fsubrl
test
inc
mov
test
sahf
dec
sub
dec
aad
outsb
ret
ret
pop
mov
inc
movsb
jle
lods
adc
pop
popa
adc
or
add
push
imul
out
mov
leave
mov
pop
push
mov
xchg
cld
std
ja
jo
cwtl
rolb
shlb
push
or
push
into
out
jo
push
jo
rcrb
ljmp
mov
inc
mov
sub
push
xor
test
adc
mov
fildll
repz
xchg
pop
cld
and
adc
xchg
ret
cli
idivb
imul
nop
fsts
inc
cmp
cmpb
inc
jg
xor
je
cltd
jo
ja
or
push
adc
lods
insb
fdivrl
inc
mov
push
inc
scas
push
shll
clc
cmp
mov
mulss
je
insb
mov
cmp
jg
dec
sar
pusha
nop
jno
and
dec
movsb
imul
mov
cmp
xchg
insb
in
add
jnp
push
xchg
jb
add
lods
popf
sbb
fstpl
movsl
and
fldenv
mov
cmpsb
popf
dec
push
movsb
repz
add
dec
adc
push
mov
divb
push
jns
mov
pop
push
les
and
pop
lahf
jmp
sarl
mov
insb
xchg
mov
xor
imul
add
loopne
dec
dec
mul
mov
iret
insb
movsl
in
add
out
fidivrs
cwtl
jne
jns
inc
sbb
and
fucom
lret
sub
mov
push
fucomp
push
mov
pop
cmpsl
jbe
test
jecxz
sbb
lret
dec
push
xor
lret
inc
lret
mov
loop
push
sub
out
in
mov
add
insb
or
add
pop
mov
push
data16
mov
or
add
ficompl
shrb
xor
jl
xchg
std
mov
orb
sub
pop
dec
scas
dec
push
jo
jmp
cmpsb
out
sub
cltd
stos
movsb
inc
mov
sub
jno
in
ret
or
ret
add
pop
into
xor
shl
aaa
adc
or
mov
add
imul
xchg
push
and
outsl
push
push
push
ds
sub
in
sbb
ja
sbb
add
flds
test
mov
int3
bound
cmc
sbb
jne
out
aam
cld
pop
ret
xor
lock
and
sahf
loope
cmpsb
cmp
adc
in
sbb
lahf
fdivrs
inc
mov
and
and
inc
cli
fdivrl
push
jb
nop
xchg
adc
jmp
ficompl
sub
xchg
repnz
mov
out
add
repz
fucomp
test
cmp
push
sbb
adc
pop
enter
jg
xchg
in
mov
int
mov
arpl
or
jmp
fidivs
dec
in
mov
adc
and
pop
push
mov
outsb
iret
es
ja
push
mov
cltd
xor
dec
inc
lods
insl
or
dec
dec
test
pop
adc
adc
cmp
in
sahf
jecxz
push
inc
mov
mov
popf
mov
cmpl
adc
sbb
sbb
loope
arpl
ja
aad
or
inc
adc
xchg
lock
nop
sub
fmull
xchg
je
dec
rorl
dec
mov
and
dec
rorl
aam
push
dec
jecxz
out
jle
scas
pop
insl
or
add
xchg
jae
pop
std
mov
aad
mov
and
xchg
push
popa
mov
sarb
pusha
fcmovu
cwtl
loopne
push
xor
pop
lods
std
mov
jo
mov
popf
push
movsl
jmp
inc
movsl
and
lds
dec
pusha
add
jl
out
dec
ret
push
and
test
test
movntps
into
fadd
jo
inc
and
xor
sarl
inc
or
push
lds
jns
jnp
xchg
jnp
cli
imul
mov
addr16
test
mov
sbb
stos
or
pop
mov
push
mov
adc
sub
inc
mov
xlat
lods
popa
pop
testb
adc
popf
dec
lods
sub
enter
mov
pop
push
mov
jne
mov
jge
jl
lret
jno
and
mov
pop
cs
adc
push
rep
mov
ja
aaa
sub
test
cs
ljmp
xchg
rorl
cmp
jg
loopne
es
adc
push
jl
mov
mov
icebp
lods
sub
call
divb
jbe
jmp
test
or
lcall
mov
dec
cmpl
pop
jmp
dec
and
cmp
xchg
jge
cltd
push
mov
int3
ret
xchg
mov
addr16
addr16
mov
std
clc
add
push
jge
lock
mov
sub
jo
sbb
test
pop
repnz
push
test
and
jb
xchg
in
imul
pop
sarb
adc
push
inc
pop
fldenv
dec
mulb
mov
mov
loopne
push
mov
out
or
push
sarb
xchg
int
jl
push
divl
pop
pusha
fstpl
add
in
jno
mov
fs
xor
fiadds
cltd
sbb
dec
inc
mov
sbb
addl
push
xbegin
fimuls
and
and
xor
mov
mov
pop
fisttpll
lock
sahf
sub
mov
cmc
cwtl
test
mov
test
arpl
xor
aas
mov
rcrl
jno
call
xchg
pop
push
mov
jbe
sar
inc
in
test
mov
inc
in
and
jae
mov
int3
and
clc
cs
push
xor
stos
mov
aad
xchg
xor
sbb
push
xchg
imul
popa
jb
imul
dec
orl
flds
push
cmp
lret
jbe
sub
inc
jne
scas
rol
lock
jne
pop
adc
jecxz
xchg
mov
or
mov
ljmp
push
sbb
mov
xor
xchg
out
mov
push
fwait
aas
xchg
push
aas
lahf
stos
imul
mov
loop
push
cs
lods
inc
cmp
jb
mov
ds
mov
adc
or
adc
jg
pop
ljmp
and
sti
adc
andb
aad
pop
pop
cmp
and
dec
adc
adc
sbb
sbb
dec
fstpt
mov
lcall
cmp
cmp
rclb
daa
mov
imul
adc
jae
adc
test
ljmp
mov
adc
adc
xor
out
push
pop
push
cmp
xchg
xchg
ss
int
sbb
add
xlat
jle
test
pop
mov
cmpsb
sub
fs
in
jp
loope
aaa
jl
xchg
iret
call
in
les
aas
repz
inc
stos
cmp
add
sbb
cmp
cltd
aad
addl
dec
cwtl
xrelease
test
inc
sahf
push
outsb
imul
cmp
in
lock
xor
xchg
mov
or
dec
aaa
jns
mov
xchg
clc
cmp
cs
cmpsb
push
cld
outsl
and
mov
xor
jg
xchg
nop
iret
cmp
mov
push
inc
test
dec
xchg
lret
cmp
adc
in
push
gs
mov
xor
rclb
stos
js
test
xchg
scas
lret
sub
js
mov
test
xchg
mov
icebp
sub
xchg
jmp
or
cmp
jae
mov
mov
xor
jb
imul
outsl
ret
out
inc
cmp
adc
adc
pop
pop
mov
stos
xchg
mov
cmc
xchg
jno
addr16
cmpsl
sti
xchg
pop
pusha
and
and
mov
sahf
mov
js
cmp
adc
push
sub
mov
outsb
stos
xor
stc
cwtl
jnp
loop
pop
lcall
xor
jmp
into
into
mov
cs
xchg
test
sub
repz
sahf
aaa
jns
leave
and
ss
ficomps
pop
push
jl
std
inc
sbb
pop
cmpsl
lods
arpl
cmp
add
jmp
flds
mov
push
cld
in
adc
das
cmp
cmp
sbb
ja
or
push
sub
jmp
mov
cmp
or
iret
adc
cmp
sbb
add
pop
or
mov
sub
test
xlat
iret
das
bnd
movsb
pop
xchg
loop
lret
pusha
sbb
out
sub
out
movsb
sub
rcl
daa
sbb
jl
imul
mov
loope
pop
aad
sub
mov
shll
jne
jns
push
shrd
push
call
xchg
mov
and
pop
sahf
js
or
enter
adcb
cmp
aam
mov
and
or
xchg
roll
jne
js
int3
scas
mov
cs
cmpsb
and
pop
in
cmp
push
out
mov
cmp
jge
in
ret
mov
adc
ljmp
push
sub
push
mov
jne
xchg
ret
add
cmc
mov
addr16
stos
dec
cmp
inc
inc
jns
pop
loope
cmpl
mov
sbb
inc
inc
jo
mov
mov
arpl
adcb
fmul
cmpsb
imull
xchg
popf
or
mov
jge
cmpb
cmp
ret
jg
sub
imul
testl
jnp
movsl
xor
iret
call
loopne
mov
ret
test
xchg
shll
sbb
fidivrl
sbb
pop
xor
or
mov
pop
cli
sub
push
jns
mov
leave
xchg
popf
rcrl
xchg
jge
sbb
cmpsl
sub
xor
jae
pop
popf
rcrb
xchg
mov
inc
outsl
ds
jl
and
cmc
daa
push
ss
sbb
jae
pop
scas
xchg
test
adc
jns
mov
imul
aas
lcall
jno
leave
cltd
mov
mov
mov
cwtl
push
sub
mov
clc
lods
into
add
scas
sbb
or
xchg
lods
jae
stc
mov
push
ljmp
and
or
mov
xchg
push
cmpsb
jecxz
pusha
fadd
mov
add
mov
out
insl
pop
lcall
stc
inc
mov
pushf
out
andl
sub
inc
jmp
mov
cmpsb
xlat
in
clc
and
xor
mull
call
cwtl
push
cmp
rorb
dec
or
mov
mov
or
test
mov
lcall
popa
fwait
dec
cmp
imull
test
sbb
data16
and
xchg
jnp
lret
jle
pop
inc
je
push
mov
lods
jnp
sbbb
dec
sub
loopne
stos
cld
push
or
sti
out
popa
cld
or
clc
fdivr
pushf
test
or
lea
dec
fistpll
lods
inc
dec
out
sti
mov
and
fwait
addr16
call
imul
add
and
cld
sbb
ret
popa
jb
ffreep
pop
add
mov
pop
mov
ffreep
mov
xchg
inc
cs
fildll
dec
lahf
cmp
xlat
dec
sub
mov
or
dec
dec
clc
int3
test
push
inc
out
add
mov
mov
or
int3
pop
fdivrp
add
inc
mov
lea
inc
pop
ss
push
mov
stos
fmuls
rcl
xlat
xchg
jb
pop
in
shrl
ljmp
sbb
mov
inc
fs
lea
xor
pop
nop
pop
mov
cmp
push
push
enter
fcomi
test
pop
stos
ljmp
icebp
cmp
pop
adc
je
into
jns
aas
adc
xchg
sub
fnstcw
mov
mov
sub
in
bswap
xor
dec
push
adc
enter
dec
sbb
mov
popa
mov
cmc
mov
ret
xchg
push
mov
push
jne
sbb
das
out
dec
adc
cwtl
mov
cmc
xchg
into
jbe
clc
mov
xchg
jge
mov
nop
int
outsb
sbb
xchg
pop
cmp
daa
repnz
mov
sbb
mov
adc
push
cwtl
repz
scas
or
pop
scas
negl
imul
adc
enter
popf
scas
mov
pop
mov
addr16
js
sub
sbb
cmp
ret
adc
icebp
and
xchg
dec
inc
cli
xchg
loopne
sbb
test
dec
jns
mov
add
fadds
xchg
jo
std
jns
xchg
jecxz
icebp
addr16
add
pop
int3
xchg
xor
sub
dec
enter
xlat
sbb
push
ds
test
jns
or
dec
and
cvtdq2ps
shll
hlt
mull
sbb
leave
xchg
test
sbb
add
sbb
pop
xor
andl
add
sbb
dec
cmp
ret
pop
xor
shll
jg
adc
out
pop
fwait
push
or
inc
aaa
pop
mov
sbb
adc
sub
and
mov
les
das
xor
add
int
cltd
push
adc
les
cmp
pop
js
repz
ja
mov
lods
fdivrs
cmp
mov
cli
mov
clc
add
mov
sbb
dec
fidivrs
movsb
inc
mov
push
dec
aad
arpl
insb
into
push
stos
in
js
xchg
imul
pandn
pop
fs
fwait
xchg
add
jae
movsl
cwtl
sub
ret
cmpb
dec
push
pop
mov
add
shl
sbb
jp
dec
push
mov
loope
je
popl
inc
or
and
push
enter
push
mov
pop
inc
mov
sarl
jmp
in
jmp
jg
ljmp
pushl
cmp
adc
adc
ss
in
inc
daa
enter
cmp
ds
iret
pop
inc
popf
dec
or
adc
and
dec
sahf
sub
and
insb
push
cmp
inc
imul
push
jl
arpl
stos
add
stc
or
sub
pop
xchg
fidivl
xorb
sub
aas
jecxz
adc
ds
out
adc
sbb
pop
push
clc
push
mov
xor
mov
fnstenv
or
fdivl
cs
and
xchg
mov
shrl
pop
push
cwtl
out
cs
mov
test
aad
push
push
lods
outsb
xchg
pushf
pop
sbb
lahf
rcrl
mov
stc
jmp
pop
pushf
sub
mov
loopne
dec
cs
mov
push
or
jle
in
xchg
scas
orb
popa
insl
push
aaa
imul
cmp
jne
lcall
stc
xchg
fs
jae
dec
push
push
mov
int
push
mov
outsl
sub
sub
or
int3
xchg
cmpsl
lods
or
dec
scas
cmpsb
jne
adc
or
xchg
pop
repnz
sbb
test
inc
popa
mov
outsl
cmpsb
fisttps
mov
in
xor
mov
mov
popf
out
xor
or
xchg
in
sub
or
loopne
cmp
comiss
aaa
sub
mov
sti
push
dec
dec
icebp
fstps
neg
push
cmp
mov
mov
cwtl
jle
in
das
or
jmp
xchg
repz
ds
rcrl
cmp
fcoml
lds
pusha
inc
xchg
mov
mov
inc
or
inc
aaa
cmp
or
nop
daa
sub
jecxz
or
out
cld
fadds
imul
test
xor
stc
inc
or
xor
shrl
mov
inc
xlat
rol
add
imul
pop
inc
jae
mov
xor
push
int
push
jns
lahf
daa
loop
cmp
mov
out
insb
add
out
mov
sub
sti
dec
jge
arpl
sub
insb
fwait
std
pushf
mov
sub
out
sbb
or
sub
mov
push
cld
mov
mov
in
in
popa
rcrl
mov
sbb
push
mov
cmpsl
jno
stos
fcmovne
inc
faddl
mov
push
push
push
shll
push
lcall
call
jle
in
les
lret
add
sbb
dec
xorl
cmp
js
mov
hlt
push
imul
nop
pop
sub
sbb
add
xchg
loope
mov
jg
jne
adc
gs
into
insb
jp
mov
dec
punpckhbw
pop
pop
lret
pushf
xchg
inc
movb
or
jg
pop
es
xor
sbb
push
pop
or
xor
adc
ja
in
push
pop
jb
push
jns
sub
mov
push
fsub
sti
xor
jnp
and
xchg
pop
adc
and
subl
xor
ljmp
shll
adc
fmul
dec
int3
add
int
loope
jmp
or
inc
dec
inc
jmpw
sub
xorb
clc
jecxz
sarl
inc
je
xchg
lret
pusha
sbb
jecxz
test
mov
addb
repz
sbb
mov
push
mov
dec
inc
iret
push
fidivrl
mov
lahf
test
scas
sbb
cmp
mov
in
shll
add
loop
cld
fs
add
mov
aas
jmp
dec
aas
xchg
jg
mov
loope
pusha
dec
imul
fildll
sbb
into
add
xchg
xchg
sahf
xchg
aas
in
xchg
in
and
in
clc
and
cmp
movsl
inc
cmp
icebp
and
xchg
mov
add
xlat
lret
pushf
sub
int3
sti
cmp
fdivrl
cmp
push
sbb
sbb
push
add
mov
add
push
shlb
cmpsb
adcb
outsb
popf
dec
insb
test
lahf
in
es
cmpb
mov
sahf
xor
ljmp
xor
je
addr16
mov
movsl
das
clc
dec
pop
pop
clc
push
cwtl
pop
push
and
ja
das
jge
push
cmp
jns
pop
add
fldcw
pop
shrl
add
lea
pop
xchg
push
xorb
insl
aaa
push
mov
js
movsl
add
jo
lock
aad
jns
popa
sbb
mov
pop
rcrl
mov
shl
nop
popa
rorb
inc
xchg
notl
test
or
out
lods
push
pop
pushf
aas
popf
movsl
xchg
sub
push
jns
and
cli
movsl
cmp
aam
cmpsb
mov
sarl
shll
dec
mov
xor
mov
sub
xor
inc
sbb
or
inc
and
popa
out
popf
sti
imul
stos
dec
fwait
aam
pop
lods
jecxz
inc
negl
int
and
xor
out
sbb
daa
in
mov
cmpsl
ljmp
cmp
xchg
adc
pop
jge
sub
pop
xchg
jp
ret
sbb
fwait
dec
add
jae
sub
fwait
std
fisttpl
dec
lcall
jp
mov
or
dec
push
mov
mov
and
mov
aam
xor
cs
je
sub
add
add
jae
mov
jnp
adc
fdivrs
dec
and
pop
pop
adc
pop
add
aas
mov
jbe
mov
xor
jmp
mov
jno
mov
cmp
arpl
loopne
std
mov
adc
scas
cld
xchg
insb
push
mov
insb
adc
icebp
das
add
cltd
dec
add
dec
nop
dec
jp
jp
jge
hlt
fwait
pop
xor
and
gs
sarl
sub
ljmp
sbb
dec
lcall
sub
loop
cmpsb
fwait
sbb
test
test
add
pop
sub
pop
sub
jg
into
xchg
ja
jns
hlt
test
aaa
mov
xchg
in
das
shrl
outsb
repz
leave
punpckhwd
xor
aam
xlat
bnd
xchg
sub
das
imul
and
lods
xor
rorl
jp
lods
hlt
cwtl
dec
sub
outsb
cmp
aas
xorps
fs
lahf
jmp
fsubl
pop
push
ljmp
ficoms
in
and
ror
orl
repz
mov
add
and
mov
or
inc
jg
mov
lods
lea
xor
xchg
aam
pop
inc
xchg
xchg
nop
daa
or
aad
cwtl
and
mov
gs
sub
xchg
cwtl
and
inc
push
pop
adc
enter
aad
xor
sbb
loopne
cli
jbe
adc
mov
ds
loope
mov
mov
xchg
fbstp
in
int3
inc
fildll
and
inc
jmp
dec
pop
mov
mov
jmp
bnd
pop
lret
cmc
and
or
jmp
leave
icebp
inc
dec
lcall
push
repnz
xchg
std
repz
jg
push
push
adc
inc
inc
cli
lods
repz
lods
je
xchg
sbb
shll
xor
cmp
jae
push
push
test
imul
push
aaa
into
test
je
outsl
mov
out
fcmovb
mov
rcrl
js
lock
dec
xor
sub
enter
loope
lret
ds
les
fistpll
sub
stc
js
mov
mov
lahf
xchg
or
xor
jns
push
rclb
sbb
pop
and
add
cmp
mov
or
and
cltd
xchg
ja
inc
outsl
out
insl
sbbb
addl
in
fwait
pop
leave
aaa
repz
loopne
leave
sahf
xor
xlat
xchg
add
adc
pop
mov
iret
hlt
xchg
push
push
test
rcrl
call
adc
add
push
loopne
aaa
test
mov
repnz
or
imul
aaa
push
loopne
pop
inc
mov
divl
shrl
lock
loope
add
push
cmp
mov
jb
mov
incl
adc
jecxz
xor
lret
add
add
pop
or
insb
add
outsl
cmp
lcall
movsl
xor
and
test
repnz
ret
and
sbb
popl
ficompl
pop
in
cmc
arpl
jbe
mov
pop
adc
and
rorl
xchg
jecxz
out
jl
mov
xlat
mov
ret
pop
mov
and
enter
pop
sub
adc
cmp
in
xchg
aas
xchg
cmpsl
cmp
jns
or
fbld
je
sbb
imul
aas
aam
incb
sub
sub
outsb
mov
xchg
into
sbbl
adc
sbbl
sub
xor
js
sbb
int3
out
lock
inc
cltd
outsb
sub
inc
cs
ljmp
scas
dec
stos
xchg
cmp
std
imul
cmpsb
add
cmp
ffreep
aas
addr16
inc
pop
adc
lcall
cmp
jmp
js
in
inc
or
das
jnp
mov
sahf
xchg
or
cmp
push
ja
enter
sahf
and
aam
or
in
push
pop
push
movsb
rolb
jo
pop
sbbl
movsb
dec
push
jo
test
test
add
jg
imul
movsl
xlat
add
mov
push
pop
stc
lea
loope
push
or
pop
daa
sub
inc
and
inc
inc
andb
cmp
inc
in
jno
jnp
cmc
pop
f2xm1
loope
jge
ret
stc
adc
inc
adcb
scas
icebp
xchg
sbb
mov
add
mov
sub
xor
xchg
and
dec
subl
mov
mov
lret
nop
push
fistpl
sahf
or
les
cwtl
cltd
out
mov
mov
cmp
mov
cld
outsb
cli
cld
aam
int3
out
mov
rolb
cmp
or
sbb
xchg
mov
mov
sub
cmp
mov
gs
xchg
sub
xchg
pop
inc
inc
mov
xchg
jb
sub
dec
aam
call
cltd
mov
inc
or
xchg
lds
mov
mov
fiaddl
outsl
sbb
pop
std
sbb
and
add
addr16
leave
es
pop
cltd
fwait
jmp
and
ds
scas
cmp
push
mov
jb
ret
push
mov
or
cli
into
fdivrl
push
mov
popf
xor
outsb
in
addb
cmc
shrb
sub
mov
inc
add
pushf
mov
push
js,pt
and
cmpsl
es
and
popa
lret
inc
sbb
test
mov
or
sub
push
fnsave
cmp
sbb
sub
dec
mull
into
sbb
sub
adc
xorl
inc
shlb
scas
ret
lods
lock
shlb
roll
stc
rclb
mov
out
jne
test
test
sbb
mov
in
cs
cmp
sbb
add
or
pop
mov
fs
sbb
pop
xchg
icebp
pusha
xor
psadbw
fwait
call
aad
jecxz
addr16
imul
inc
xchg
mov
fwait
xor
dec
jnp
xlat
mov
lock
dec
sub
pop
mov
shll
dec
test
push
push
in
mov
addb
push
xor
ffreep
xchg
xchg
or
iret
imul
sbb
fnsave
sti
aad
mov
adc
aas
add
mov
int3
jmp
and
xor
lock
pushf
mov
negb
sbb
mov
loopne
jle
lds
js
int
push
pop
orl
sbb
fsts
xlat
add
lods
jle
inc
mov
xchg
call
rorb
out
ds
cmc
push
adc
push
xor
cld
je
mov
jo
adc
jb
pop
repnz
pushf
roll
stos
cld
dec
xor
jnp
xchg
push
or
mov
cld
hlt
int
sbb
fisubrl
ja
dec
adc
and
xchg
push
cmpsl
mov
std
pop
or
dec
ficoms
inc
fs
out
popa
lret
insb
insl
cmp
xchg
sbb
sub
int
stc
stc
loop
sbb
jne
pop
cs
adc
dec
clc
rorb
jne
jnp
in
xchg
test
mov
push
and
aas
int
adc
movsl
sti
sub
push
sarb
lock
scas
push
jecxz
idiv
cld
test
shlb
loop
rcrb
outsl
imul
dec
mov
xchg
pop
call
xchg
and
mov
test
iret
and
inc
insl
mov
gs
das
mov
xor
cmp
sti
add
scas
test
sbb
sub
sbb
inc
stos
mov
xchg
lds
pop
stc
int3
cmpsl
ss
sub
stos
cli
fcom
mov
pusha
inc
lret
test
cmp
data16
aam
mov
cmp
inc
sbb
fdivrs
mov
sti
shrl
cmp
mov
dec
and
inc
jb
adc
inc
push
test
adc
mov
xchg
sub
jp
push
jb
and
inc
es
xor
fprem
jbe
mov
cld
jb
mov
push
add
mov
or
les
mov
dec
std
adc
mov
popf
add
xchg
xchg
les
mov
nop
jo
add
movsl
pop
push
mov
test
push
addr16
mov
dec
cmp
add
lea
cs
cld
and
arpl
mov
jge
testb
mov
stc
sbb
mov
icebp
xchg
xor
clc
xor
or
outsl
bound
adc
add
xchg
flds
lock
arpl
imul
ret
mov
fs
push
aad
push
xchg
add
scas
jne
cli
out
sub
fdivs
xor
push
push
stos
and
xor
mov
mov
adc
cmp
push
xchg
out
xor
popf
es
jae
pop
xchg
adc
les
jns
lods
xor
ret
cld
add
jae
fs
popf
xlat
sbb
imul
adcb
je
movsb
xor
jge
jecxz
cmp
add
inc
movsl
icebp
cmpsb
pop
add
or
aam
pop
out
stos
int
stos
popf
aaa
cmp
in
or
mov
push
adc
test
movsl
xor
stos
push
push
or
xchg
inc
jne
or
imull
cld
sbb
into
cs
ret
out
mulb
or
icebp
lods
pop
mov
xchg
jb
adc
addr16
xor
fwait
xlat
pop
push
and
rclb
jnp
cld
jns
cmp
pop
movsb
ja
push
xchg
sub
test
aad
mov
loopne
cmp
daa
mov
mov
ficompl
es
mov
aam
hlt
pop
xchg
test
popa
outsb
rolb
xor
scas
popa
dec
push
push
or
xchg
loop,pt
lods
imul
jnp
mov
push
push
mov
ret
iret
mov
test
shll
mov
dec
push
mov
jl
jp
daa
lods
iret
inc
cmp
add
pop
rclb
ret
pop
mov
jl
shrl
ja
gs
dec
jno
sub
addr16
mov
dec
sub
push
jb
mov
aad
sti
sub
daa
push
jb
scas
inc
or
cmp
ds
std
enter
movaps
sub
dec
mov
pop
inc
negl
or
out
fsubl
pop
cmp
add
cmp
pop
jg
mov
imull
addb
or
lcall
xor
idivb
dec
lods
adc
mov
outsl
mov
shl
aad
sbb
mov
jnp
inc
sub
sarl
int3
and
out
xchg
dec
dec
sbb
clc
jmp
dec
push
gs
xchg
add
mov
pop
and
aam
cmpsb
xor
inc
jge
insl
sbb
jno
aam
fnstenv
and
cmp
pop
add
pop
mov
test
inc
pop
je
aam
fdivrp
repnz
in
cmc
jo
shrl
sbb
in
add
push
jnp
fcom
int3
mov
testb
popf
rcrb
icebp
mov
mov
or
or
mov
xor
dec
jp
mov
sub
or
push
pop
dec
and
jae
loope
jns
mov
dec
inc
je
out
cmc
xchg
jl
cld
sub
sbb
add
fildl
jg
add
mov
sarb
and
xor
daa
ss
mov
lods
pop
jmp
stos
pop
add
push
stos
mov
movsl
or
push
das
cmpsl
mull
fcoml
rol
mov
xor
repz
popa
mov
inc
pop
pop
mov
gs
mov
pop
jmp
lcall
je
aam
mov
push
repnz
lret
xor
xchg
mov
and
int
ret
xchg
fs
clc
hlt
or
mov
or
mov
mov
jmp
add
push
lds
sub
push
and
int
or
mov
and
push
pop
inc
fpatan
pop
aam
mov
jl
dec
fisubrs
inc
pop
psrld
cmp
push
pop
mov
pop
mov
push
icebp
add
call
xor
add
jmp
inc
ret
int
sbbl
sub
stos
mov
push
mov
bound
jg
push
inc
rcrl
jae
xorl
movsb
mov
or
jo
dec
push
mov
cwtl
mov
cli
mov
stos
fucom
jge
sbb
lods
daa
fdivrl
xchg
xor
jnp
sar
and
lahf
cli
arpl
lds
imul
dec
movsl
das
cmp
fs
inc
sbb
sahf
arpl
and
lcall
add
movsl
stos
jae
cmpsl
cli
daa
fs
xchg
inc
jbe
xlat
push
xchg
pusha
adc
mov
xchg
push
inc
fscale
pop
add
shr
inc
imul
lcall
jecxz
int
cmpb
test
xor
mov
mov
stos
out
push
pop
or
in
add
sti
mov
int
lcall
arpl
sub
ljmp
mov
sub
lret
lds
cmp
jg
movb
cmp
lret
sbb
rorl
lret
loop
jl
shr
mov
pushf
scas
insl
mov
cs
push
lahf
lods
cmc
nop
insb
push
adc
lahf
out
lea
push
call
jecxz
push
dec
push
daa
or
pop
xchg
jne
sahf
ljmp
mov
sbbb
jg
popa
sub
lahf
add
inc
in
sbb
adc
sbb
outsb
mov
xchg
lret
sbb
push
adc
cmp
sbb
ret
mov
mov
cmp
jg
in
gs
adc
inc
inc
daa
and
popf
lock
xor
xor
test
test
arpl
pop
mov
xchg
mov
in
or
cmpsl
hlt
bound
scas
subl
lods
jnp
adc
cmp
iret
adc
in
xor
test
scas
dec
and
pop
lock
into
jbe
add
or
out
repz
sar
sub
ljmp
mov
mov
movsl
xchg
or
data16
iret
ror
push
addr16
mov
sub
sbb
sub
sub
stc
xor
mov
lock
or
incl
mov
lds
mov
in
cmpsl
scas
mov
push
mov
imull
adc
test
int
out
loopne
lods
jle
add
add
mov
lock
xor
mov
sbb
lret
push
ja
dec
mov
cwtl
int3
test
insl
fwait
sbb
xorb
sub
fsub
mov
mov
sbb
lret
cmpsb
shrl
pushf
sub
insl
shr
divl
push
cmp
or
sub
repnz
xchg
inc
cmpsb
pusha
xchg
mov
leave
cli
pop
std
data16
mov
std
cwtl
sub
add
inc
daa
push
loope
inc
cltd
fs
cltd
lcall
cmpl
gs
adc
xchg
sarl
inc
xorl
cld
ja
cmp
lods
sbb
ret
incb
sbb
dec
xchg
je
pop
test
js
sahf
push
and
popf
sub
pusha
je
gs
jp
inc
inc
icebp
sub
fwait
sbb
testb
mov
pop
jl
cmp
fucomi
int3
notb
pop
dec
insb
cwtl
push
in
mov
std
out
or
repnz
and
clc
adc
inc
adc
pop
lds
dec
pop
cmp
mov
test
cmp
add
nop
jp
and
rolb
push
lahf
daa
inc
cmp
cmp
cmp
jl
add
dec
aaa
lcall
mov
pop
subb
or
shrl
pop
push
mov
loope
out
adc
mov
daa
inc
add
mov
shrb
cltd
pop
stos
dec
pop
xchg
xchg
outsb
sahf
imul
adc
inc
rcll
aad
xchg
xor
cli
xor
add
ljmp
xchg
adc
clc
insl
mov
sub
sub
fsubrp
add
iret
arpl
shrl
cwtl
mov
inc
xchg
pop
idivb
dec
jmp
ret
punpcklwd
pop
and
testb
test
jbe
sbb
dec
dec
xor
mov
inc
ficomps
pop
fimuls
out
xor
loopne
jecxz
and
loope
rcrl
mov
inc
add
sub
dec
stos
dec
push
in
and
aaa
xor
adc
aam
cwtl
adc
ds
xchg
mov
pop
jbe
mov
xchg
repnz
sti
imul
push
testl
lret
mov
push
mov
push
xor
scas
push
arpl
test
fimull
out
add
mov
fs
in
jns
push
in
and
add
and
arpl
out
mov
rorl
cmpsl
loope
aad
push
sub
mov
test
addr16
xchg
ror
mov
shlb
push
jge
pop
fs
repnz
mov
sbb
jb
add
jge
testb
lret
push
outsb
push
sbb
es
cmpsb
cmpsl
arpl
add
aas
mov
dec
jno
scas
mov
pop
in
jg
js
clc
test
stos
mov
jle
in
xchg
cmp
into
fs
fdivrl
xor
cmp
sbb
sub
iret
fimull
or
aaa
cmp
pusha
dec
mov
xchg
inc
pop
pop
pushl
add
sub
lahf
in
push
dec
js
loope
arpl
test
mov
repz
mov
mov
imul
call
sbb
enter
sub
js
sti
add
or
sbb
call
inc
inc
loope
mov
mov
pushf
in
cmp
mov
pop
testb
das
pop
ret
fbld
dec
insl
xchg
or
movsb
out
cmp
cmp
sub
mov
inc
dec
jp
cmp
add
fdivrp
in
dec
jg
es
jge
and
ja
mov
pop
cmp
pusha
pop
jno
popa
dec
mov
xorl
arpl
mov
cmp
mov
bound
mov
inc
lret
and
ret
adc
mulb
mov
aaa
or
mov
movsb
lcall
inc
ret
loopne
xor
jg
push
push
sub
mov
push
dec
test
outsb
out
lret
xor
in
cmp
movsl
or
mov
dec
xor
lret
jg
or
sub
out
inc
xchg
add
xor
imul
and
fsubrs
mov
cmpsl
sbb
bound
in
jo
js
fucom
imul
mov
jb
shrb
es
inc
insl
popf
push
or
rorl
cld
push
orl
mov
aaa
xor
sarb
cmp
mov
xchg
ss
fwait
imul
out
enter
mov
jns
testb
mov
xlat
sbb
cmp
icebp
inc
scas
mov
sti
leave
dec
jnp
push
pop
sahf
shlb
mov
inc
pop
pop
pop
rcrl
dec
mov
pop
popa
mov
repz
lahf
cmpsb
sub
pop
lret
out
leave
mov
inc
pop
or
out
push
fmuls
inc
fcomps
popf
cmp
ret
dec
pop
scas
fdivl
pop
inc
repnz
jb
and
push
cmp
sbb
push
add
jg
outsb
std
mov
mov
mov
xchg
fiadds
pop
je
and
xchg
out
mov
cmp
add
push
cvttps2pi
addr16
or
add
repz
jnp
test
jge
pop
mov
mov
test
jp
into
leave
mov
adc
sbb
insl
mov
lods
jno
push
outsb
icebp
arpl
pop
shrb
outsl
mov
pop
repz
adc
mov
inc
enter
sbb
adc
push
pop
out
adc
mov
scas
sub
arpl
adc
repnz
adc
out
cmp
js
or
push
pushf
lock
outsb
sub
icebp
adc
dec
dec
loopne
leave
jno
jo
lea
lret
lret
adc
pusha
lret
test
xor
test
or
lock
int3
jns
jns
push
pop
pushf
push
lcall
pop
scas
or
out
movsl
sbb
inc
fmuls
xlat
lret
jg
in
sti
cld
mov
mov
push
mov
pop
cmp
outsl
call
lret
rcrl
popa
in
mov
mov
cmc
loop
scas
pushf
dec
fistpll
jo
sub
mov
pushf
xchg
lock
adc
mov
incb
adcb
xchg
cwtl
xchg
iret
out
fists
jnp
outsb
hlt
xchg
pop
imull
dec
mov
mov
cmpxchg
mov
jo
jnp
sbb
mov
insl
js
jl
sbb
or
sahf
out
or
bnd
inc
addb
mov
push
xchg
jl
cmpsl
mov
xor
jmp
mov
cmp
xor
in
sbb
mov
push
mov
cmp
stc
pop
xchg
gs
pop
xlat
js
cmp
pop
mov
fsubp
insb
mov
add
mov
into
push
xor
scas
cmp
push
aam
xlat
jp
sub
mov
push
xlat
sti
dec
js
xchg
or
int
sahf
sbb
rcrb
push
into
cmp
jle
push
sub
cmc
fs
arpl
out
push
pop
repz
mov
cld
into
inc
sbb
fdivr
lcall
xchg
inc
and
dec
jno
out
pop
test
add
and
cmpsl
xor
sub
sahf
mov
mov
ljmp
sub
js
mov
lods
cmp
cwtd
fnstenv
mov
push
lea
mov
mov
add
mov
dec
pusha
jg
icebp
outsb
cmp
pushf
test
sbb
and
xor
mov
cmpsb
js
sbb
push
test
divl
aaa
xchg
inc
roll
idivl
out
pop
cmp
shll
push
dec
retw
testb
daa
mov
sti
movzbl
push
stc
mov
in
loope
add
das
add
dec
jg
mov
pop
vsubps
and
add
int
insl
bound
fcoml
adc
dec
lcall
cmpsl
xor
add
jnp
adc
out
cmp
mov
pop
jmp
dec
pop
dec
cli
inc
xchg
or
inc
es
movsl
repnz
aaa
roll
inc
sub
mov
xchg
or
adc
xchg
xor
xchg
test
scas
ret
cmp
xor
jno
repnz
ds
sub
mov
adc
incb
pop
psadbw
mov
inc
fucomp
xor
mov
cmpsb
push
lahf
fs
fstp
xchg
mov
dec
daa
mov
mov
inc
fwait
enter
sbb
jbe
fdivr
pusha
adc
push
js
push
lcall
or
xchg
repz
sub
jge
in
and
jg
iret
pop
jae
pop
cmpl
or
sub
inc
xor
mov
scas
push
jb
adc
and
mov
in
xor
mov
int3
jne
and
daa
lock
out
pop
outsb
pop
inc
out
dec
dec
enter
rcl
aaa
sbb
stc
push
pop
fdivrs
out
subb
dec
movsl
fwait
push
mov
inc
push
mov
push
stos
pop
out
icebp
test
and
adc
stc
cmpsb
mov
sub
inc
sub
fs
add
in
in
test
in
sub
mov
scas
sbb
addr16
inc
dec
dec
nop
inc
out
or
xlat
lret
dec
repnz
add
ficomps
xchg
incl
cmp
ret
test
inc
aas
mov
mov
fldcw
and
dec
sub
mov
aad
cmpsb
ret
jb
fistpll
arpl
aaa
mov
push
jp
mov
jbe
das
fdivrl
sub
loop
data16
jecxz
sub
pop
loop
andb
dec
shlb
es
fwait
neg
invd
lea
jecxz
test
jnp
cli
sti
es
pop
xchg
lds
jns
stos
sarb
push
arpl
hlt
pop
and
mov
and
icebp
fs
nop
pop
stos
ss
or
cli
mov
pop
mov
mov
mov
sub
jle
sarb
mov
push
cmc
xor
adc
mov
stos
popa
push
lea
orb
iretw
lods
call
inc
xchg
and
mov
lods
movsl
jno
pop
mov
add
cltd
mov
sbb
push
pop
sbb
sti
push
pop
xor
rcr
aaa
add
push
jmp
in
jo
lds
dec
in
sbb
sbb
or
push
pop
cmpsl
out
bound
test
shll
push
scas
mov
mov
nop
mov
ja
cmpl
cmp
or
mov
jle
stos
push
xor
jo
cmc
push
out
xchg
stos
xchg
cmpsl
pop
mov
and
sub
inc
movsl
or
stc
xchg
call
fldenv
scas
stc
icebp
jb
sbb
jo
movsb
cmpsl
sbb
shll
clc
push
shl
scas
lret
rcrl
nop
imul
xchg
inc
insb
pop
lahf
lods
lds
in
ds
push
mov
push
and
roll
pop
leave
cli
popf
pop
dec
fcmove
out
xchg
scas
xor
jbe
aad
fwait
xor
cmp
jmp
mov
rorb
fstl
dec
in
cmp
pop
mov
xchg
outsl
das
mov
jmp
cmpsl
pop
pop
hlt
rolb
mov
pusha
add
sti
sbb
cmp
stc
mov
pop
add
loop
sbb
pop
sti
arpl
or
movsl
ret
push
aas
ret
stos
mov
in
es
sbb
xor
pop
pusha
sbb
arpl
cmp
add
inc
and
out
push
push
jmp
aam
xor
xor
dec
iret
push
xchg
gs
sbb
loop
insb
inc
std
imull
mov
xchg
jne
pop
mov
popf
cmp
nop
shrl
and
test
fwait
shlb
xor
ret
adc
fists
pushf
mov
or
cmpsb
push
xchg
and
aam
mov
repnz
add
inc
imul
lcall
adc
fbld
ss
mov
inc
mov
fldl
enter
xor
push
dec
jae
sub
repnz
fnsave
or
cmp
ret
pop
aam
test
dec
or
lret
psrlq
insb
hlt
mov
mov
in
inc
bswap
popf
mov
jp
jnp
lods
adc
das
mov
add
push
jmp
sub
fmull
xor
push
jle
out
loopne
pop
loopne
jbe
sub
aad
mov
jmp
jns
xchg
jne
or
and
je
or
and
ret
fcmovne
aad
xor
jl
dec
push
mov
inc
rcll
mov
cld
pusha
dec
sub
clc
jl
mov
push
push
mov
test
in
out
aam
mov
out
data16
sub
mov
jns
push
lock
sub
daa
and
nop
sub
push
push
insl
divb
inc
out
mov
sub
mov
int3
xor
add
mov
int3
cmc
lahf
sbb
jg
shlb
iret
dec
subb
mov
lea
xor
sub
arpl
mov
shrl
adc
sub
lock
mov
mov
std
cmpsb
cmc
lret
dec
std
and
rcrb
popl
loope
aas
jmp
cld
xchg
or
mov
or
in
data16
sub
pop
mov
pushf
push
jne
adc
jl
andb
stos
mov
sub
cmp
xor
ljmp
pop
js
add
pmaxub
inc
and
pushf
and
pop
ljmp
xchg
push
mov
mov
fwait
inc
pop
sbb
mov
arpl
and
lcall
push
lods
je
jnp
jae
movl
pop
mov
movsl
cs
push
cmpb
lahf
jae
cmpb
xchg
sbbb
dec
or
fld
iret
push
dec
ret
sbb
loop
adc
mov
outsl
pop
sbb
sbb
push
xor
insb
add
mov
pop
imul
out
popf
and
mov
std
sub
movsb
pushf
pushf
out
dec
push
js
scas
mov
nop
xor
lahf
or
push
adc
bound
xchg
push
jecxz
inc
and
ss
inc
sbb
or
mov
fisubl
in
inc
cmp
and
and
lea
rolb
and
test
flds
inc
pop
movb
inc
addr16
addl
scas
jnp
dec
mov
jne
mov
test
push
pop
ja
xchg
test
lcall
cmp
jns
dec
lahf
xchg
loopne
dec
jns
jns
lahf
addr16
xchg
repz
iret
lds
and
mov
pop
mov
rcl
into
lcall
push
es
pop
cwtl
xchg
jo
lds
add
jmp
sub
movsl
adc
sbb
pop
push
shlb
push
outsb
fisubrs
and
scas
and
test
mov
inc
les
test
mov
pop
out
mov
in
xchg
scas
sbb
jb
mov
jmp
pop
scas
adc
lret
mov
xor
pop
andb
mov
andl
dec
cmp
mov
test
sub
ja
mov
js
test
add
sub
bound
push
add
fsubl
xchg
fstpl
add
or
push
jns
xor
dec
leave
inc
cmp
sbb
jns
push
subl
mov
cwtl
cmpsl
xor
imul
adc
repz
jle
rorb
aam
xchg
jmp
shrl
fwait
arpl
fadds
aaa
sbb
sub
mov
leave
adc
icebp
xchg
rcll
push
inc
pop
jl
adc
ror
int
repnz
push
adc
mov
dec
cs
into
lds
mov
push
jge
movl
mov
adc
mov
push
cld
loop
icebp
jb
cwtl
cmp
xchg
cltd
push
add
in
sbb
adc
mov
rorb
add
mov
inc
mov
add
xor
into
rcll
or
cmpsb
mull
scas
push
dec
mov
out
sar
jecxz
fmull
bound
jle
mov
outsb
or
jae
rolb
les
mov
stc
xor
js
ja
pop
cmc
xor
dec
mov
lret
outsb
push
pop
roll
cmpsb
inc
push
sahf
shll
push
mov
orl
fisubs
clc
inc
in
lds
xchg
orl
rcrl
out
cmp
dec
add
xchg
out
sbb
dec
jae
icebp
pop
movsb
nop
ljmp
mov
pop
divb
xlat
jo
pusha
dec
in
cltd
lock
lcall
mov
orb
scas
jmp
int
jmp
cs
es
push
sub
xchg
jg
out
ds
or
xchg
repz
xor
dec
jl
pop
inc
adc
add
sub
jp
sub
je
jb
xlat
and
rorl
push
mov
mov
imul
sbb
call
fcmovnu
int3
push
mov
fdivl
lret
push
out
popa
in
lea
hlt
inc
ficoml
aaa
and
fistpl
jb
test
repnz
xchg
test
mov
or
stc
scas
ret
ljmp
push
push
pop
out
dec
cmc
std
push
push
jns
mov
pop
pop
sub
mov
jno
pop
mov
jge
inc
lea
pop
rclb
std
pushf
xchg
xor
ret
sub
and
mov
mov
xor
inc
int3
loopne
popf
inc
mov
xchg
sarb
in
push
add
roll
stos
mov
je
xchg
mov
xchg
mov
pop
inc
push
xchg
loop
ret
push
rol
jno
inc
pop
sbb
es
rcl
lods
movsb
shll
jmp
sub
leave
mov
fdivs
popl
mov
aaa
mov
fistps
lods
jbe
aas
adc
cmpsl
cmp
je
jbe
lcall
mov
cwtl
or
repz
jg
sub
adc
in
mov
cli
fidivl
pop
fcomps
dec
jbe
fldenv
add
daa
daa
push
pop
outsl
pop
rorb
push
int3
rclb
mov
fiadds
outsb
mov
es
outsl
sub
xor
mov
fs
mov
add
inc
rcll
decb
mov
lret
jmp
notb
les
inc
inc
mov
pop
xchg
mov
loop
push
cli
dec
and
sbb
into
enter
lds
stos
jno
es
jb
daa
stos
inc
in
or
adc
lods
adc
ljmp
ljmp
stos
fbld
add
inc
enter
std
fiadds
sbb
jbe
xorl
iret
mov
ljmp
aas
mov
insl
insl
jl
out
add
xchg
mov
jb
cmp
xor
lret
lock
mov
cld
outsb
loope
addr16
mov
inc
mov
clc
and
sbb
adc
sub
and
es
lahf
xor
loop
shrl
sub
movsb
call
std
ds
mov
xor
sbb
shlb
push
lods
fidivs
aad
inc
xchg
lods
dec
cs
or
inc
or
xchg
xlat
add
cmp
push
mov
mov
adc
fisubrl
pop
popf
gs
mov
sbb
cltd
lret
sbbb
xor
imul
jae
push
mov
lds
lcall
fwait
sub
jnp
mov
or
out
cli
pop
out
mov
out
imul
sbb
in
outsl
mov
shll
pop
addr16
loopne
xchg
pusha
aaa
jns
cwtl
out
pop
add
out
fs
xchg
and
pop
mov
mov
js
dec
add
xchg
imul
cs
and
sbb
push
cmp
sub
dec
iret
dec
fcoms
jp
xchg
int3
inc
pop
and
adc
xchg
dec
push
mov
inc
dec
scas
dec
jne
test
xchg
xor
mov
sub
mov
jnp
sub
loope
mov
ja
inc
add
pop
loopne
mov
xor
and
mov
dec
pop
out
xor
cmp
repnz
xchg
aam
mov
mov
xchg
cld
inc
enter
push
vunpckhps
jne
add
xor
or
sbb
push
fdiv
sub
mov
sahf
bound
dec
add
xor
lret
mul
ds
mov
pcmpeqb
cmp
and
and
mov
mov
leave
jae
cli
stos
ficoml
imul
lods
fsubrs
and
loope
shrb
pop
lret
aam
mov
lods
pop
fnstcw
popa
push
sahf
ss
loopne
jbe
inc
mov
fisttpll
push
sbb
and
inc
repz
sbb
dec
pop
cmc
loop
xlat
fxch
mov
mov
stos
mov
dec
loop
sti
pushf
inc
fdivr
push
ret
xor
mov
dec
add
int3
xor
xchg
lret
cmp
scas
xchg
and
in
or
lock
push
imul
out
add
jns
mov
mulb
jg
cmp
aad
je
mov
dec
fwait
stc
jmp
mov
mov
mov
xlat
sub
aas
outsl
push
ret
fmull
loope
push
outsl
inc
mov
outsl
negl
data16
cmc
bound
lds
addb
repnz
adc
add
push
insb
dec
cmpl
outsb
inc
sbb
std
hlt
inc
in
xlat
inc
jnp
add
out
fdivp
dec
adc
push
fs
andb
and
popa
mul
jo
pop
add
jno
std
xchg
insl
xchg
mov
sub
push
push
sbb
popf
and
mov
out
cmpsb
in
in
jg
cmp
mov
dec
mov
inc
xor
out
in
pop
push
adc
sub
ret
rcl
mov
dec
cmpsl
mov
pop
pop
sbb
pop
jae
decb
sub
outsb
je
sub
adc
push
mov
shl
insb
and
lds
sbb
aad
mov
fdivrs
repnz
scas
inc
add
popa
dec
int3
adc
pushf
lods
sub
std
inc
inc
adc
popa
push
pop
dec
jnp
fwait
xchg
sub
cli
les
icebp
or
stos
and
or
jl
mov
addr16
cmp
xor
roll
mov
sbb
push
repz
out
and
sub
mov
aaa
testl
mov
xor
mov
sbb
out
mov
out
roll
dec
lea
dec
mov
int
icebp
rorl
and
sbb
jns
adc
mov
fiadds
sbb
inc
push
and
lcall
negb
cltd
mov
aas
cmp
xchg
or
mov
push
xchg
cld
dec
add
push
sub
or
adc
stos
jo
xor
adc
scas
lret
out
sub
fnstcw
out
jbe
sub
push
hlt
cmp
es
inc
rcrb
ss
jb
pop
bound
pop
xor
clc
push
cmc
sbb
cmc
repz
pop
push
fwait
sbb
jle
lea
cmp
and
and
and
dec
inc
sbb
pop
fistps
outsb
add
leave
jbe
push
cltd
faddp
inc
loope
inc
leave
jbe
mov
adc
out
lahf
jae
lods
dec
dec
push
fdivrl
mov
add
sub
dec
mov
add
sbb
pop
mov
orb
mov
jle
mov
sbb
lods
pop
rep
jbe
sub
mov
jae
test
push
sub
adc
fsubl
or
jnp
cmpsl
cmpl
inc
dec
loope
fldcw
sbb
xchg
inc
sub
addr16
mov
push
lret
ret
test
cmpsl
je
iret
int
cmp
aaa
inc
xchg
inc
or
xorb
sub
in
loop
cmp
adc
or
fisubrs
nop
cmc
enter
mov
stos
pop
xor
and
int
out
dec
adcl
mov
pop
ds
rcll
xor
out
nop
lea
cld
sub
sbb
fisubrl
dec
repz
sub
xchg
dec
dec
fistpl
dec
cld
stos
ds
xchg
sub
scas
int3
add
push
xchg
jg
xor
cmpsb
in
mov
jl
fs
dec
pop
dec
sub
cs
cld
push
sub
test
sahf
xor
fimull
push
mov
out
pop
imul
xchg
mov
mov
stos
and
sub
popf
js
push
adc
sub
jecxz
in
fldcw
out
jp
add
or
mov
jo
das
pusha
or
cmpsb
mov
or
stos
xchg
push
xadd
das
popf
mov
in
cs
gs
adc
sub
cmpsl
decl
mov
jae
mov
aas
fwait
scas
ljmp
pop
cmc
adc
push
in
jecxz
xlat
mov
pop
lods
stos
aam
xchg
bound
data16
aad
cmpsb
mov
loop
std
sub
in
dec
jne
pop
sub
mov
lods
lods
popa
mov
xchg
ljmp
inc
xor
std
mov
jbe
idiv
bnd
jae
mov
lret
cmp
pop
jbe
xor
rorb
loopne
aaa
cli
iret
insb
into
test
mov
das
inc
fcmovnb
aad
cs
fsubrl
js
dec
stos
sbb
cld
xchg
inc
inc
out
testl
mov
cltd
mov
lods
xchg
mov
inc
ffree
inc
xor
mov
mov
cli
push
jno
leave
int
bnd
push
test
into
or
or
sbb
into
lcall
push
adc
mov
adc
mov
xor
div
out
sub
out
rorb
call
jno
adc
jle
inc
mov
mov
push
pop
stc
les
jge
xchg
pop
bound
vpmacssdql
jns
add
sub
sub
test
shrl
add
inc
aaa
sub
jge
xlat
std
shl
dec
scas
int3
cs
sbb
cmp
mov
push
and
bound
data16
bound
dec
call
sub
mov
push
and
push
push
fcomip
xlat
mov
pop
jl
mov
adc
pop
bnd
mov
xchg
lods
push
mov
sbb
jns
scas
mov
inc
test
in
cmpsl
push
add
fiaddl
insl
lcall
pop
pop
out
mov
sbb
sbb
lds
jae
pop
imul
icebp
xchg
xchg
std
ss
add
push
ret
setne
test
test
test
das
cmp
aam
test
jb
movsl
cmc
hlt
inc
jg
fmul
aad
inc
adc
jns
cmp
out
sbb
mov
leave
inc
mov
sbb
arpl
out
push
xor
cld
in
movsl
rcll
aad
push
jg
jae
adc
imul
and
pop
sub
aaa
ljmp
push
dec
aad
push
test
cmp
jp
jg
pushf
jmp
sbb
mov
jmp
int
arpl
or
sarb
stc
push
dec
adc
sti
clc
lret
push
mov
es
lea
xor
jp
or
or
add
adc
int
dec
inc
xchg
out
lock
push
pop
jno
and
jae
inc
pop
xor
nop
mov
and
roll
cmpsb
fldt
or
gs
push
leave
rorl
mov
xor
rorl
push
mov
enter
dec
lods
sub
or
lahf
dec
popa
iret
mov
incl
cmp
or
sub
and
mov
test
jmp
and
pop
mov
xor
adcb
les
sbb
scas
pop
xchg
andl
cs
fidivrs
push
inc
pop
xchg
enter
pop
hlt
dec
mulb
aaa
mov
xchg
inc
cltd
mov
cmp
outsb
ja
fsubrs
mov
popf
in
aad
add
push
mov
inc
xchg
out
or
js
adc
push
call
add
ja
sbb
lods
shlb
daa
xchg
js
arpl
cmc
mov
stc
pop
cmp
int
adc
pop
stos
lret
outsb
inc
rclb
mov
lea
and
push
mov
mov
es
mov
sarl
adc
pop
mov
scas
mov
aad
insl
mov
xchg
shrl
std
mov
cmp
adc
std
push
jmp
fistpll
dec
pop
aas
mov
mov
push
adc
push
xor
shll
gs
int
jmp
scas
aas
div
mov
cmp
ds
push
inc
inc
cmpsl
mov
gs
pop
jl
dec
push
into
int
cld
cli
fsubp
loop
subl
subb
dec
rcrb
sbb
shlb
aad
xor
push
popa
pop
out
cmpsb
ljmp
shll
xlat
stos
aaa
icebp
shll
jb
jb
add
mov
movsl
rcll
gs
sbb
out
inc
fsubs
sub
pop
loop
push
stos
out
and
movsl
lahf
iret
push
xor
mov
push
jne
mov
mov
andl
out
test
test
inc
lahf
clc
add
push
les
jge,pt
popa
call
aad
cmpsb
shlb
inc
inc
aad
stc
pop
inc
xchg
repnz
fstpl
popf
xor
add
jnp
xlat
or
mov
ret
negl
pusha
clc
lea
xchg
cmp
aad
hlt
pop
xlat
pushf
and
xchg
jle
pop
sub
test
fcompl
adc
xor
iret
call
cmp
jmp
arpl
and
popw
sub
addb
movsb
or
dec
jecxz
mov
pop
mov
and
lcall
or
pop
or
mov
jmp
movsl
sbb
roll
jmp
inc
out
cmc
decl
insl
outsl
mov
dec
cmp
outsl
cltd
fcomps
ret
aas
jge
lds
out
lret
xchg
in
dec
fdivp
add
or
mov
xor
sub
test
pop
pop
loop
out
push
pushf
and
adc
scas
push
sub
jp,pt
pop
and
test
pusha
push
inc
push
lret
cmp
lcall
jbe
and
sti
mov
or
cld
outsb
sub
mov
aad
cli
cmp
clc
dec
add
xchg
jo
sub
js
imul
sub
fwait
aad
jns
ds
ljmp
es
mov
int
cld
arpl
int3
scas
cli
out
and
lcall
fimull
cwtl
rep
scas
dec
movsl
das
add
adc
jp
cmp
mov
ror
push
bound
push
scas
test
push
loopne
test
jo
fwait
xchg
lahf
inc
push
mov
dec
push
imulb
jg
cmove
mov
mov
testl
sub
sub
inc
sbb
mov
test
outsl
std
fidivrs
iret
test
in
jns
shl
and
sbb
push
outsb
mov
and
add
dec
adc
arpl
or
sti
cli
icebp
jg
call
cltd
push
inc
test
inc
cmc
sbb
loope
xchg
fwait
push
mov
js
push
out
cmp
mov
jb
loop
aas
xorb
ja
dec
jecxz
pop
mov
adc
push
test
xchg
jp
mov
cmpsl
aad
cmp
insb
and
js
cs
inc
std
xchg
xchg
inc
jns
mov
out
pop
in
adc
pushf
call
jle
pop
stos
cmp
jae
aas
jae
into
jl
arpl
xor
or
mov
stos
sbb
push
mov
sbb
inc
dec
sti
push
loopne
int
mov
jns
out
ja
loopne
arpl
mov
xchg
fmuls
ja
icebp
in
adc
shrb
push
sub
arpl
nop
in
push
or
or
divl
push
jnp
mov
lods
xchg
mov
call
adc
xchg
add
jg
mov
or
mov
lret
shl
dec
push
jo
jnp
mov
push
int3
sub
rclb
xorl
insl
out
fwait
je
negl
fs
stos
and
xchg
push
mov
sub
int3
mov
xchg
jb
jb
xchg
mov
in
or
jmp
enter
decl
adc
sub
jnp
mov
jge
addr16
cmp
xchg
out
and
lret
bound
mov
add
shll
dec
dec
push
sbb
mov
das
cmp
dec
lea
fsubrs
add
adc
xor
xor
pop
pop
iret
sub
xor
xchg
out
movsl
jecxz
sub
orl
sbb
loopne
into
test
or
leave
test
jecxz
cmp
jno
popa
pop
in
cmp
jmp
mov
adc
mov
jmp
in
jge
popa
mov
xchg
cmpsl
hlt
popf
les
mov
loop
xor
imul
adc
lock
mov
js
adc
nop
testb
fbstp
sub
mov
sbb
xchg
inc
push
mov
adc
pop
vpsadbw
mov
xchg
js
pop
nop
das
outsl
jno
out
adc
inc
mov
push
xor
je
sbb
cli
jge
hlt
xchg
insl
or
cmp
or
sarl
push
cltd
and
adc
loope
scas
repnz
test
add
or
mov
cld
mov
sbb
add
mov
addr16
xor
gs
shrb
cmp
xchg
push
push
dec
pop
sub
pushf
fdivrl
inc
mov
cli
and
loop
cmp
push
mov
push
mov
mov
mov
or
push
mov
bound
aam
fistpl
cs
mov
xchg
mov
add
sbb
call
mov
push
mov
mov
fsts
cmpsl
mov
daa
mov
mov
subb
add
sub
neg
inc
adcl
outsb
cmpsl
lods
insl
loope
repz
inc
cmp
xchg
daa
ljmp
aad
xchg
mov
push
push
jb
lea
loopne
sbb
jg
icebp
push
call
adc
loope
jg
adc
dec
pop
inc
arpl
sbb
test
push
jmp
adcl
call
pop
arpl
shrb
imul
ret
loop
add
push
mov
sbb
push
xchg
push
xor
adc
mov
sahf
aas
cmp
adc
push
lcall
mov
pop
xchg
jmp
xor
lret
js
cmp
mov
ljmp
lcall
pushf
out
sbb
out
xor
jl
lahf
imulb
test
call
inc
dec
or
xor
jo
cmp
mov
mov
and
sub
push
pusha
movsb
inc
sbb
cmp
xchg
adc
imul
xor
adc
or
pop
fwait
xchg
scas
sbb
ljmp
add
nop
cmp
push
fbld
xchg
and
pop
lret
data16
inc
or
fs
inc
xchg
sti
mov
sahf
jnp
insb
std
sbb
in
sbb
push
hlt
inc
pop
cmp
jmp
das
jle
push
icebp
sbb
ffree
cmp
iret
je
dec
mov
cmpsb
sub
fsubr
add
add
imul
daa
dec
loope
push
cmp
iret
xchg
gs
sti
xchg
or
mov
inc
test
pop
jo
imul
mov
daa
xchg
adcb
aas
push
jge
push
andb
dec
jmp
pushf
add
nop
jle
mov
mov
ss
in
call
xchg
mov
cli
sahf
jmp
cmp
scas
iret
packuswb
and
push
lods
and
xor
jns
xchg
shl
cli
and
and
lcall
xchg
shl
stos
stos
lret
push
lods
in
push
int
int
jg
shll
add
sub
dec
jbe
lret
mov
call
push
rclb
dec
jo
imul
push
lahf
lret
inc
int3
adc
test
inc
cld
push
xchg
cld
pop
mov
test
pop
xor
pushf
push
pusha
call
sub
mov
loop
push
xchg
xor
ds
jno
mov
jle
lahf
cli
cltd
xchg
fisubs
mov
lods
rol
dec
pop
push
fdivrl
adc
add
xor
icebp
dec
stc
jmp
ret
xorl
fisubs
lret
es
cmp
testl
fisubl
cmp
xchg
sarb
stos
inc
or
inc
ss
into
jecxz
xor
jmp
jbe
rcrb
mov
je
out
testb
ret
mov
jne
xchg
fwait
mov
and
in
repz
nop
xor
push
jmp
insl
jg
dec
lret
fwait
sub
mov
push
add
test
xchg
xor
cli
enter
push
xchg
xchg
mov
icebp
lea
repz
inc
lods
and
addl
jge
push
sbb
popf
stc
xorb
fistps
sub
xor
mov
rcl
cld
fstps
mov
add
shlb
lret
lahf
add
sbb
loop
or
add
cli
movb
add
out
imul
sbb
and
enter
test
push
lds
insl
pusha
cmp
sbb
mov
dec
roll
adc
xlat
dec
or
add
mov
hlt
pop
lret
jmp
inc
adc
leave
cmp
lret
loopne
cmc
test
rcr
shl
sub
les
inc
xor
xor
and
insb
cmp
xchg
cmp
inc
mov
sub
and
test
shll
dec
pop
icebp
pop
and
pop
dec
adc
and
clc
pop
sbb
out
mov
and
inc
int
es
in
cwtl
cld
jae
fcompl
jmp
and
pop
shll
jecxz
pop
icebp
loope
inc
int
cld
shll
cld
call
es
insb
out
hlt
adc
dec
lods
fwait
cmp
dec
sub
adc
mov
faddl
mov
andb
xor
aas
xor
add
pop
push
xchg
cmp
jmp
inc
cmp
repz
mov
inc
cld
mov
inc
jne
xor
and
out
sbb
orl
jge
and
sub
insl
sub
inc
or
sbb
adc
push
adc
or
pop
fdivrl
push
and
mov
lea
idivl
jo
lds
or
inc
mov
fidivs
mov
pop
rcrb
sub
jmp
aam
xor
cmp
add
cmp
cwtl
ror
inc
fcmovnb
pusha
stc
ljmp
xor
mov
mov
test
inc
stos
adc
and
addr16
sti
or
jns
jo,pt
cld
cmp
mov
adc
es
fstp
das
dec
and
push
adc
lock
pop
or
push
jg
adc
loopne
popf
add
test
jle
and
mov
lahf
inc
push
or
sub
mov
jbe
xchg
jmp
enter
aas
div
mov
out
xchg
jle
imull
mov
xchg
es
fldenv
xchg
cmp
add
add
fisubs
or
daa
mov
adc
push
fcompl
addb
xor
xchg
idivb
idiv
jge
stc
dec
jo
jne
xchg
add
insl
pop
xchg
inc
fcompl
ret
xor
jl
cmp
rclb
and
call
xchg
aas
pushf
insb
mov
mov
dec
imul
hlt
add
xor
or
xchg
inc
stos
ss
aas
inc
push
cli
mov
fldenv
xor
out
in
dec
mov
cmp
or
fistpl
dec
dec
notb
fmuls
pushf
cvttps2pi
in
jnp
stos
popa
outsl
data16
cmp
sub
add
je
jmp
add
jno
dec
push
std
out
jno
clc
adc
xor
or
movsb
cmp
hlt
or
or
dec
in
lea
fldenv
or
clc
loope
fnstsw
sub
mov
adc
cmp
pop
lock
sub
in
pop
cmc
jnp
sub
repz
lret
jbe
or
mov
push
dec
inc
push
sbb
pop
mov
nop
sub
sti
in
dec
repnz
pop
and
arpl
push
test
push
ficomps
xchg
cmp
std
inc
lds
imul
out
mov
xor
xchg
pushf
int
movsb
scas
fildl
sub
orl
hlt
add
xor
cmp
cs
sbb
mov
push
mov
movsb
jo
mov
test
lahf
jno
lret
sub
shrb
and
cmp
ficomps
sahf
jp
lret
xchg
cmp
aad
ss
insb
pop
pop
fnstenv
js
pop
push
cwtl
adc
or
int3
aaa
fldln2
cwtl
fs
sbb
inc
inc
sub
test
cltd
or
sti
sbb
mov
in
pop
gs
xor
andb
jecxz
pusha
ss
dec
out
rcr
cmp
mov
jae
sar
mov
scas
sub
dec
push
xchg
out
les
xchg
add
aas
sub
cmc
loopne
sbb
into
mov
push
xor
mov
dec
int
lahf
movsl
and
stc
jl
jnp
stos
ret
imul
leave
rcll
cmp
push
fcos
hlt
dec
jmp
mov
dec
call
loop
adc
outsb
pop
push
add
movsl
or
xor
ljmp
arpl
sarb
cld
sub
lret
push
sbb
mov
sbb
mov
stos
jmp
fsub
push
shll
cmp
iret
and
mov
lahf
aaa
es
stos
loop
pushf
jb
add
daa
aaa
hlt
dec
insb
fsubs
and
add
mov
jle
mov
scas
sahf
push
roll
jo
btr
les
fs
insl
fldcw
fldenv
push
or
daa
imul
add
inc
jmp
aas
loope
cli
aam
in
pop
es
sbb
inc
and
mov
andl
test
mov
fisubl
and
mov
iret
mov
or
fisubrl
push
adc
mov
and
sbb
inc
lcall
dec
dec
xor
imul
ja
pop
add
lods
jp
sbb
out
mov
mov
mov
lock
cmp
test
shll
repz
mov
push
aam
and
sbb
sbb
inc
in
push
xchg
push
mov
sub
xor
movsl
fdivrl
push
cmc
cmp
sarb
jmp
out
xchg
lcall
popf
insb
pop
lahf
outsb
and
mov
inc
les
aas
in
ficomps
test
or
shlb
addr16
addl
pop
daa
and
dec
imul
arpl
jbe
fdivs
loope
xor
sub
sbb
adc
addb
xchg
fadd
push
cmpsl
mov
and
cmpsb
in
bound
fidivrs
lcall
out
adc
gs
lock
int3
jge
jp
idivb
xchg
mov
jns
jle
aaa
jl
xor
lods
aam
in
pop
scas
mov
mov
mov
push
data16
pop
pop
icebp
cmp
sbb
dec
mov
jne
pop
lods
in
dec
inc
repz
pop
pop
ret
pop
jge
jnp
xchg
int3
inc
cmp
lods
dec
pop
cmpsb
sbb
std
cli
jle
rcrb
adcb
push
fidivl
xor
mov
mov
call
lock
call
clc
pop
dec
rcrl
psrld
dec
mov
adc
xor
fsub
push
and
xor
clc
inc
popf
sbbb
arpl
data16
js
loope
hlt
bound
and
mov
clc
add
insb
ds
inc
nop
inc
scas
mov
add
pop
aaa
lds
mov
adc
pop
lock
push
movsl
int
loope
xor
xchg
cmp
cmp
mov
lahf
lods
sbb
pop
jno
lds
push
cs
bound
dec
mov
aad
cmp
dec
mov
sub
scas
push
ss
push
leave
outsl
sbb
push
and
push
mov
cwtl
xchg
xlat
ficomps
adc
pop
jl
adc
cmpsl
pop
and
icebp
sub
cmpsb
and
mov
add
jmp
addb
outsb
mov
imul
inc
or
add
jne
inc
pop
jo
negb
jmp
cmp
int
dec
out
shll
ds
xor
adc
xlat
call
roll
sbb
sub
incl
fdivrs
push
decl
sahf
ja
xor
push
fiaddl
add
adc
mov
xor
sbbb
xlat
mov
cmpsl
popf
mov
cltd
movsl
iret
scas
ret
bound
popa
add
sbb
dec
dec
add
push
dec
test
push
jmp
push
sbb
mov
xchg
and
xchg
out
and
mov
jae
cmp
cmp
and
sbb
push
movsb
or
fmull
jnp
add
add
inc
add
or
jb
sarb
jbe
outsl
ffree
push
inc
inc
int3
xlat
pop
outsl
jmp
jge
cmp
cld
jo
fld
push
lcall
push
add
sti
dec
adc
mov
mov
or
xchg
mov
cwtl
inc
aam
xchg
push
sbb
lahf
scas
and
jno
push
push
xor
cwtl
xchg
ret
mov
dec
jno
rorb
mov
push
cmp
test
pop
fmull
mov
mov
movsl
out
filds
mov
xor
or
jp
inc
dec
fucom
fcomip
inc
mov
insl
lret
cmp
imul
mov
mov
sub
sbb
fcoml
cmp
jnp
arpl
call
in
scas
jge
lods
mov
push
mov
pop
jl
bound
mov
xchg
rcl
cmp
lret
sub
repz
and
xor
cld
and
ss
jns
loope
les
std
in
addl
mov
and
test
mov
xchg
pusha
leave
push
loopne
or
or
pop
xchg
orl
gs
pop
out
cli
sub
clc
mov
mov
inc
out
sbb
out
dec
clc
xchg
dec
cld
jp
push
push
lret
or
xchg
lea
cmp
js
add
sbb
sbbb
xor
les
scas
jno
mov
lcall
fbstp
lods
sahf
cmpsl
loope
call
adcb
iret
movsb
dec
sahf
iret
push
mov
xchg
xchg
lea
gs
xchg
add
mov
cmc
xor
cmp
insl
stos
cmp
cld
add
aaa
push
pop
je
mov
sahf
sahf
xor
fimuls
sbb
jge
ss
mov
push
ret
xchg
xor
xchg
xor
inc
push
mov
push
xchg
aad
sbbb
in
pushf
leave
jle
movsl
adc
in
mov
pop
jg
ret
lahf
pop
ss
mov
shrd
pop
or
sbb
fsubrs
xor
cmpsb
mov
rcr
pop
jae
pop
xor
ljmp
fisubl
push
jbe
and
sbb
aad
loopne
ret
lock
lods
fisubrs
mov
or
pop
add
mov
jle
xor
push
scas
pushf
dec
xchg
in
bound
or
cld
dec
sub
pop
mov
in
cmpsl
xlat
push
push
xor
add
mov
inc
cmp
fiaddl
inc
xchg
mov
inc
jle
push
scas
dec
je
into
adc
pop
aaa
push
jge
fsts
jno
mov
dec
adc
and
xor
mov
daa
xor
lds
xor
pop
scas
pop
out
ljmp
js
mov
inc
pop
mov
loop
cmpl
push
push
xchg
test
dec
xchg
nop
adc
push
pop
test
pop
jp
jns
dec
lahf
mov
jnp,pt
lock
fwait
mov
insb
pop
or
and
sub
sub
daa
je
adc
dec
fistl
sbb
mov
jge
gs
iret
shl
jo
aam
sbb
cltd
aam
mov
sbb
or
addr16
pusha
dec
in
mov
mov
cltd
mov
mov
jne
mov
sbb
andb
push
or
flds
dec
addr16
lcall
push
out
xchg
aad
mov
aam
xchg
mov
out
scas
mov
cmp
sub
push
negl
adc
jge
fmull
call
pushf
mov
ds
push
mov
add
aaa
adc
mov
sub
and
stos
adc
inc
repz
mov
aam
aad
in
adc
mov
mov
cmp
xchg
inc
pop
xchg
pop
push
nop
push
xchg
add
xor
sbb
mul
dec
or
dec
hlt
test
and
adcb
cmc
cld
lret
clc
and
imul
cld
jg
fcoml
cmp
push
frstor
add
cmpsl
orl
bound
jmp
bound
movsl
dec
movsl
pop
mov
sub
div
out
and
clc
mov
and
mov
rcll
sub
push
lret
xlat
into
sub
xor
adc
and
mov
fdivrl
jno
rcr
xchg
addr16
push
mov
outsb
out
pusha
push
jmp
add
xchg
insl
mov
call
push
aas
lods
call
adc
movsl
mov
nop
call
xchg
mov
mov
stos
mov
fcmovu
sub
mov
jnp
ds
pop
xchg
jg
add
in
add
mov
dec
daa
js
inc
outsl
cmpsb
xchg
insb
ja
jp
mov
jbe
inc
movb
adcl
fs
cmp
enter
and
aad
and
mov
mov
fistpl
or
clc
scas
les
xchg
ds
cmc
push
or
adc
or
sub
cli
jl,pn
xchg
or
mov
repnz
jne
mov
daa
lcall
sub
mov
repnz
and
aas
cmp
jnp
call
lock
jne
outsb
lods
xor
jg
fxch
arpl
out
shl
xchg
scas
mov
fists
in
add
lods
test
loop
or
arpl
xor
ljmp
xchg
cmp
push
cwtl
xchg
in
in
jns
pop
or
mov
sti
sub
push
or
push
or
cmp
inc
sub
push
in
gs
shrb
or
mov
lret
add
push
int
daa
xchg
jecxz
adc
xor
ret
adc
inc
push
sbb
inc
xchg
mov
xor
test
test
cli
aad
jne
pop
cmp
jnp
lods
cmp
rcll
icebp
adc
leave
push
imul
mov
xchg
cmp
js
lock
dec
sub
pop
mov
or
adc
rorb
xor
or
rcrl
jg
push
loopne
pop
addr16
cmp
sub
dec
jae
pop
xor
dec
outsl
cmpsl
outsb
xor
adc
mov
sbb
jp
pushf
pushf
sbb
jmp
inc
adc
shrb
pop
clc
aad
idivl
lods
mov
cltd
les
outsl
jecxz
pop
cmp
lcall
dec
jo
xchg
pop
push
enter
lret
cmp
sahf
int3
lods
sub
push
jg
insb
mov
hlt
fs
fmul
scas
push
mov
in
decl
int
pop
push
pop
dec
in
pop
xor
mov
push
sbb
pop
in
movsl
fwait
lret
insb
stos
jp
in
xchg
dec
fnstcw
sbb
shll
pop
push
pushf
adc
into
xor
push
fldl2t
xor
jg
mov
sbb
fcmovnu
aaa
fisubrs
mov
int
stc
push
add
aad
mov
dec
or
leave
pop
xchg
bound
pop
aam
int3
xor
das
fucomip
mov
rcll
cltd
out
repz
aad
out
jecxz
mov
fwait
lcall
pop
adc
imul
pop
xchg
mov
cmp
lret
adc
das
mov
adc
xor
pop
test
mov
or
sbb
cmp
hlt
pop
popa
mov
add
cmp
add
or
jge
std
gs
jae
out
cmp
cmp
dec
rorb
std
imul
cmp
mov
xor
mov
pop
jne
decb
inc
push
mov
mov
mov
inc
and
sub
sbb
shlb
fstpt
lcall
mov
inc
cmpsb
cmpsb
push
dec
enter
movsl
or
and
mov
scas
leave
aas
je
addr16
xchg
dec
fwait
inc
out
popf
add
mov
inc
sub
fidivrl
icebp
negl
or
cwtl
sbb
dec
and
jmp
cltd
dec
pop
sti
ds
xor
jnp
mov
or
adc
movsl
fldenv
aas
jg
or
dec
mov
daa
pusha
mov
gs
loop
mov
add
bswap
sbb
xchg
dec
dec
jge
js
mov
int
push
les
xor
and
das
inc
pop
dec
fildl
daa
out
lods
imul
mov
cmp
iret
cld
jae
lret
in
mov
and
xor
xchg
aas
jnp
test
xor
lock
xor
js
jno
loope
add
sub
repz
divb
mov
lret
mov
adc
sbb
adc
dec
mov
xchg
sbb
mov
call
imul
hlt
xchg
fisubs
hlt
je
dec
ljmp
enter
bound
mov
insb
mov
ja
ss
sub
cwtl
sbb
adc
cltd
dec
leave
cmp
and
out
je
loop
outsb
add
push
jmp
push
sti
fsin
adc
sbb
cltd
popf
adc
clc
imul
mov
cmp
fidivrl
jbe
xchg
xchg
es
xchg
out
sub
pop
aaa
xor
mov
sbb
fimuls
enter
insb
jg
out
adc
mov
mov
mov
mov
rol
fs
test
sub
scas
enter
aad
into
pop
xchg
cmc
cmp
cwtl
aas
inc
mov
jl
adc
push
stos
mov
fimuls
mov
hlt
addr16
sbb
sbb
lods
loop
enter
cwtl
mov
imul
out
mov
stc
out
sbb
icebp
xchg
scas
sub
outsl
jle
lcall
stc
stos
aad
fstp
inc
fcompl
xor
sub
int3
xor
mov
inc
fisttpl
mov
pushf
les
mov
mov
inc
pop
fwait
cli
call
mov
lahf
insl
or
addr16
repnz
bound
or
imulb
jno
andb
ss
xor
lahf
dec
jb
ja
popa
aaa
push
shll
out
dec
sbb
faddl
movsb
pop
cmc
jns
std
sub
xchg
pop
cwtl
push
sbbb
xchg
loope
cmp
das
pop
dec
sub
movsl
lahf
iret
fidivl
mov
shrb
push
push
add
mov
arpl
push
ds
cs
mov
shlb
xchg
aad
pop
loopne
adc
movsb
jl
jecxz
andb
pop
xor
jbe
cmp
adc
sbb
rol
push
jb
fistl
rcr
shlb
xor
pop
aad
mov
pusha
insl
add
clc
xlat
stos
int
push
mov
movb
stc
lret
or
push
lea
daa
jae
pusha
dec
mov
fwait
daa
jl
add
imul
jnp
orb
std
or
xor
pop
scas
dec
arpl
or
cli
mov
int3
sbb
lock
pushf
fdivr
adc
fs
xchg
fstpt
fbld
xchg
call
jno
pop
sbb
mov
cmp
adc
imul
jbe
testb
inc
jns
shll
das
cmp
inc
pop
frstor
outsb
jmp
push
jge
ss
lahf
adc
dec
mov
push
and
mov
imul
push
adc
dec
or
jge
or
arpl
xor
fs
jno
mov
pushf
jecxz
mov
or
mov
mov
add
pop
xchg
mov
mov
add
daa
loopne
pop
or
loope
aas
adc
lds
push
hlt
out
sbb
test
pop
jp
pop
dec
call
jae
iret
and
lds
pop
sti
in
lods
inc
pusha
icebp
adc
loopne
fisubs
jp
ficoml
stc
fldt
inc
inc
shll
dec
aas
insl
push
sbb
and
and
pop
shrb
lock
mov
cmp
cmpsb
mov
call
inc
mov
rol
sahf
inc
xchg
fs
push
or
xchg
jns
cld
or
adc
xchg
test
cli
sbb
popa
insl
loope
jb
rcrb
pop
xchg
mov
mov
cmp
and
notb
fidivs
dec
push
xchg
mov
outsb
aas
cmp
xor
lret
inc
in
aas
call
stos
xchg
inc
outsb
sub
jmp
sar
rcll
and
ds
mov
mov
shr
mov
loope
icebp
push
sub
cmp
pop
out
jae
push
nop
mov
aad
xchg
out
call
mov
mov
push
jp
add
loope
mov
push
fstpl
pushf
cs
dec
out
inc
fidivrs
jecxz
sub
repnz
jb
push
ss
lods
pop
out
je
and
sbb
notl
cmpb
jae
loop
xchg
lods
loope
out
xchg
mov
pop
nop
jb
cli
add
adc
jecxz
inc
enter
rorb
mov
fs
xchg
jns
inc
fstpl
mov
in
rorb
mov
ret
shll
insl
add
jnp
cmp
xor
xchg
lea
or
mov
or
aad
test
jo
push
popf
inc
loopne
push
int
cmp
cmp
imul
jns
xor
pop
fistpl
mov
aaa
push
adc
jb
mov
jp
mov
faddp
mov
shrb
test
mov
das
jns
insb
cmpsl
test
std
pop
ds
fisttpl
mov
mov
and
stos
cmp
rcrl
icebp
push
pop
fcmovb
mov
mov
test
sbb
cmc
std
xor
adc
imul
int3
fldenv
xchg
xor
test
scas
pop
jae
adc
add
les
loopne
inc
push
js
out
test
cli
cmpsl
mov
addr16
lret
sub
ljmp
xchg
jbe
mov
arpl
adc
scas
insb
or
bound
jbe
fdivrl
add
xor
mov
stos
mov
loopne
outsb
and
pop
xchg
das
mov
arpl
cmpsl
imul
pop
push
call
mov
insl
push
imul
scas
iret
ds
cmc
jl
arpl
jl
inc
pop
imul
leave
in
sti
or
sahf
fdiv
fimuls
fnstsw
push
rol
in
dec
xchg
xchg
sahf
in
call
xchg
pop
mov
adc
addr16
pop
xlat
imul
outsl
mov
repnz
cmp
xor
sub
pop
ljmp
out
xchg
das
dec
sbb
add
fisubrl
out
and
dec
outsb
push
lock
dec
in
aas
js
lahf
sub
and
arpl
or
fistpl
scas
lcall
mov
add
and
xchg
add
cmc
test
iret
fs
int3
jns
inc
mov
mov
mov
mov
rcl
dec
push
test
adc
rorl
and
add
fistpll
imul
mov
sbb
shufps
out
cmp
mov
pop
shl
push
pop
inc
jecxz
lahf
in
mov
repz
sti
push
in
cmpsb
fildll
xchg
fisubs
into
cmp
sub
shl
xchg
incl
arpl
fucomip
mov
adc
mov
sub
mov
sbb
lret
push
clc
push
sub
ftst
iret
adc
mov
lock
and
add
movsl
add
mov
dec
hlt
out
fisttpll
or
das
add
mov
stos
movsb
push
and
gs
sub
or
rclb
push
mov
aad
outsl
sti
out
fimuls
push
ss
es
mov
les
sub
sub
fmull
sub
pop
jmp
adc
mov
pop
dec
lahf
daa
adc
daa
pop
mov
cmp
call
lret
dec
push
mov
mov
ljmp
aaa
dec
fdivs
subl
and
jae
pop
jl
cmc
or
call
fldt
les
inc
inc
lret
pop
std
jns
mov
sbb
or
pusha
outsb
shlb
push
rorb
aas
in
outsl
push
push
xlat
rcrl
movsl
iret
and
push
imul
jb
aaa
outsl
es
test
lods
sahf
outsb
insb
aam
inc
dec
jbe
jp
sbb
cmp
sbb
test
das
sbbb
mov
cld
mov
xchg
addb
scas
movsb
xchg
imul
dec
xlat
jne
pop
test
or
xchg
mov
mov
inc
scas
ljmp
and
test
pop
pop
js
jecxz
sub
sbb
into
pushf
dec
add
enter
lcall
jbe
fstp
nop
mov
mov
lods
sbb
loop
dec
cld
xlat
xlat
into
sti
or
or
jae
jge
xchg
js
inc
mov
mov
and
xor
push
mov
ljmp
mov
jecxz
xor
loop
dec
add
in
lods
jo
dec
jmp
mov
inc
test
fnstenv
push
sbb
sbb
and
and
lods
lock
filds
jmp
xor
test
ret
mov
popa
sub
pushf
or
or
jo
inc
js
or
mov
sbb
lcall
sub
movsl
mov
mov
ljmp
nop
jle
xchg
inc
pop
or
es
jle
mov
fsubrl
inc
dec
dec
fidivs
mov
inc
fdivl
sbb
lret
push
dec
push
xlat
cli
inc
nop
and
test
mov
sub
leave
jnp
lods
insb
ficoml
ljmp
xchg
xchg
cmp
lock
sub
dec
bound
shr
add
stc
adcb
and
pop
movsb
aas
or
mov
je
mov
jno
push
rclb
pop
push
push
scas
jp
jmp
jne
mov
imul
sub
out
xchg
xlat
xchg
loope
shlb
cmpsb
dec
fldlg2
test
xchg
mov
add
lret
mov
rolb
xor
repnz
inc
mov
fidivs
les
inc
enter
cmp
dec
jmp
lcall
sti
fs
nop
cmpsb
sub
pop
loope
push
cmp
int3
pop
popf
cld
push
test
xor
cmpsb
in
adc
push
scas
pop
insl
inc
imul
push
inc
mov
loope
mov
cmp
jo
pop
sub
or
dec
fwait
icebp
inc
inc
inc
sub
gs
cwtl
leave
imul
in
inc
or
fldl
inc
push
sbbb
insb
inc
xor
scas
push
mov
mov
scas
int
jns
sub
adc
mov
mov
sarl
into
gs
push
in
fcompl
mov
inc
push
push
rorl
loopne
inc
into
sub
rcl
in
mov
or
and
popa
jo
adc
jns
add
nop
or
sbb
adc
xchg
pop
nop
cmpsl
lea
and
sub
addb
gs
scas
insb
out
jl
fldcw
xor
lods
outsl
je
aas
and
fmul
mov
or
jmp
sbb
dec
lods
aad
add
mov
jecxz
push
push
xor
popl
mov
jl
filds
mov
cmp
out
test
fcomps
push
pusha
push
pusha
test
int
std
je
mov
dec
pop
lea
push
mov
repnz
jg
cmpsb
imul
pusha
cmp
cmp
gs
jb
push
or
xor
out
shr
adc
test
fs
mov
add
jg
mov
pop
push
jns
dec
jp
xchg
sub
pop
adc
jmp
movsb
cmp
or
in
pop
inc
and
movsl
push
iret
mov
popa
lods
cli
bound
sub
lods
adc
and
inc
jbe
int3
xlat
mov
jbe
scas
add
xchg
cmp
mov
bound
xchg
sbb
sbb
mov
mov
enter
xchg
sbb
jg
cltd
push
fdivrp
sahf
mov
sahf
or
mov
jge
cmp
add
or
pop
adc
adc
cltd
add
iret
test
adc
jno
stos
inc
xlat
lods
mov
xor
gs
sbb
add
or
js
insl
or
cs
add
mov
jnp
pop
jge
xlat
outsb
je
cmp
xorb
cld
sub
push
fstl
dec
loopne
pop
roll
xor
mov
or
pop
jge
sbb
xchg
es
or
lds
dec
push
shrb
push
xor
stos
pushl
pop
shlb
xlat
or
les
outsb
lds
pop
push
pop
scas
icebp
lret
xlat
inc
cld
aas
test
mov
sub
and
rcl
daa
cmp
dec
mov
neg
jns
cltd
jns
inc
pop
and
fbld
nopl
sub
pop
xor
jmp
adc
dec
xorl
shrb
sbb
cmc
pop
mov
mov
and
inc
ds
sarb
sbb
ja
xor
push
cmp
or
pop
out
and
adc
mov
bound
imul
sub
push
pop
movsb
mov
and
shll
shrb
adc
or
sbb
es
xchg
or
or
call
mov
xor
xchg
test
ds
dec
dec
gs
add
jns
shl
lods
in
xor
jl
push
repz
sbb
jns
jg
test
mov
nop
mov
lods
add
push
je
scas
int
test
cmp
push
sti
in
xor
ficompl
adc
movsl
sbb
out
sbb
popf
fld
mov
mov
rorb
push
dec
imul
cmc
mov
jecxz
push
int
fimuls
adc
inc
add
popa
cmpsl
push
inc
fstps
or
xor
fisttpll
xlat
xor
xor
lea
xor
and
and
adc
insb
test
test
lret
sub
lret
push
out
mov
inc
lret
xor
inc
movsb
add
lock
data16
ret
dec
in
clc
cld
pusha
les
js
daa
sub
data16
rolb
aas
addl
leave
inc
sbb
mov
lcall
aas
and
pusha
sub
jg
push
int3
sbb
mov
push
lret
xchg
or
arpl
test
lods
pop
pushf
gs
mov
mov
jbe
dec
push
fstps
std
adc
movsb
sub
or
and
mov
ret
cmp
push
cmp
aad
mov
insb
shrl
mov
xchg
mov
jmp
lock
jecxz
fiadds
outsb
sub
aas
jb
les
lahf
jg
lods
sbb
cmp
or
lds
adc
leave
sbb
jge
js
jmp
insb
fcompl
popa
daa
outsl
les
mov
test
std
or
movsl
cltd
loopne
stos
cmpsb
add
sub
jg
push
aas
add
push
or
xor
jle
fbld
incl
bound
or
lea
inc
sub
or
jbe
dec
and
movsl
test
sahf
cmp
sarl
js
ret
mov
push
insb
xor
fwait
test
mov
ret
pop
inc
jle
and
mov
pop
mov
mov
mov
adc
cmp
cmpsl
int3
addr16
mov
out
push
xchg
loop
cmc
cmp
sbb
dec
fstpl
and
push
mov
adc
out
popf
sub
adc
in
mov
ja
je
jns
loop
scas
sarl
jae
pop
and
mov
repnz
xchg
mov
mov
std
adc
outsl
fstl
or
in
or
inc
nop
xor
adc
sub
outsb
jl
es
push
imul
mov
seta
push
add
adc
and
jle
xor
shl
into
inc
cs
inc
pop
sbb
mov
dec
iret
jb
sbb
dec
xchg
loopne
repz
out
and
xchg
mov
outsl
or
sbbb
jb
pushf
filds
mov
mov
add
sti
leave
fiadds
mov
adc
jmp
adc
dec
vdivsd
and
xchg
adc
jl
mov
sbb
mov
inc
negl
shlb
sub
push
rcl
jnp
xchg
loopne
pop
mov
daa
inc
mov
ljmp
adc
inc
mov
les
push
shrb
sbb
push
imul
mov
sbb
inc
push
ret
iret
imul
adc
adc
pop
in
xor
clc
pop
xchg
repz
inc
jmp
mov
shlb
xchg
popf
leave
jo
sub
and
jb
rorl
push
sbb
add
stc
push
scas
scas
or
out
pop
inc
sarb
into
lods
out
stc
mov
sub
test
xchg
add
pop
xor
add
addr16
xchg
pop
mov
imul
or
test
cli
cmp
xlat
insb
lcall
into
dec
fnstcw
or
mov
jno
ja
scas
das
lds
jo
fldenv
push
xor
dec
scas
inc
mov
mov
lahf
icebp
ljmp
mov
cmc
xor
mov
cmp
mov
push
push
sti
mov
sbb
push
enter
xchg
mov
sub
mov
ljmp
in
cmp
cmp
sub
in
adc
and
sbb
sahf
aas
sahf
pop
push
out
ret
je
int3
xchg
icebp
stos
das
push
push
jns
sbbl
lods
dec
pushf
addr16
loope
sub
jno
xchg
xor
pop
cli
fdivl
test
mov
pop
jns
lds
loopne
cmp
notw
enter
popa
pop
jb
in
adc
out
push
lret
push
pop
test
sub
test
fwait
sub
ret
out
lahf
repnz
or
pand
mov
jnp
inc
fstps
inc
and
notl
push
adc
insl
jo
lahf
mov
adc
jmp
popa
test
dec
stos
out
cmpsb
in
fistps
scas
clc
mov
mov
imul
adcl
mov
adc
fucomp
mov
insl
fwait
das
sub
mov
jmp
or
adc
xchg
cmc
sahf
xchg
push
mov
lahf
mov
cmpsl
popa
sub
loopne,pn
out
sarb
fistps
inc
cli
stos
std
mov
mov
dec
mov
les
pop
mov
popa
and
mov
addr16
xor
pop
or
es
add
adc
divl
sbb
ret
push
in
inc
pusha
jle
xchg
dec
inc
lahf
icebp
pushf
inc
jl
ljmp
mov
jp
mov
pop
push
inc
lea
inc
cs
add
lea
shrb
mov
mov
push
cmc
das
and
jnp
je
lahf
jge
pop
scas
dec
fsubrp
fstl
sub
jge
sbb
je
jp
cltd
in
movsb
test
jne
lea
aas
ffreep
inc
lcall
dec
pop
mov
cmpsb
testl
sub
ds
sbb
cli
arpl
in
dec
sti
into
icebp
push
cmp
ds
sub
insl
jg
push
adc
cmc
sbb
push
mov
or
pop
add
in
cwtl
push
dec
pop
pop
into
aaa
or
cmp
rcrl
in
repz
sub
push
addr16
add
cltd
jmpw
mov
in
imul
jne
xchg
idiv
stc
clc
xor
xchg
repnz
stc
rcl
sets
js
aam
js
outsb
mov
pop
or
xor
xor
inc
stos
in
push
arpl
mov
movsl
sti
jle
mov
out
aad
cmp
scas
addb
push
stos
sahf
iret
adc
std
lcall
ds
jbe
dec
inc
rol
leave
into
jae
lahf
jno
out
or
cwtl
jle
xchg
sub
lret
add
lsl
sbbl
inc
insl
cmpsl
inc
jl
mov
cmp
push
cmc
mov
insb
clc
cmp
pop
dec
and
jae
inc
xor
inc
cltd
subb
jae
adc
dec
push
pop
dec
es
iret
je
add
mov
outsl
hlt
sub
mov
dec
sub
xor
out
mov
dec
repnz
stos
popa
loope
xor
add
jnp
lret
rcll
es
rorb
jl
push
sub
jl
xor
pop
mov
fstpl
sti
mov
adc
sub
subb
cmpsl
or
movsl
mov
and
mov
subl
jmp
xor
fwait
xor
sub
xchg
aam
inc
sbb
and
mov
insb
aaa
sbb
add
mov
shll
push
es
fisubl
cmp
push
shrb
pop
add
arpl
dec
dec
mov
insl
adc
daa
sbb
jl
jge
imul
xor
in
pop
inc
or
aad
out
fldcw
or
out
add
sbbw
fisttpll
loop
add
out
lret
inc
sbb
jp
test
out
sbbb
ds
fisubrs
lret
bnd
jb
movsl
or
mov
data16
lret
clc
sbb
xchg
push
in
and
or
lods
enter
gs
sub
pushf
jecxz
andb
adc
call
dec
inc
imul
adc
aam
repnz
cmp
rol
rorl
imul
inc
xchg
push
push
arpl
cmp
sahf
in
mov
test
arpl
jns
pop
or
jmp
push
mov
mov
add
lret
mov
ja
cmp
mov
rcr
push
inc
pusha
xor
out
mov
mov
mov
pop
sbb
lcall
clc
or
jb
add
test
sbb
adc
lcall
sub
adc
lock
fld
lahf
dec
xor
or
inc
in
lea
dec
jmp
push
cli
loop
xor
int
loopne
sbb
sti
insl
jb
arpl
hlt
add
mov
stos
ss
stc
jecxz
scas
lret
push
inc
out
mov
sbb
push
stos
mov
jno
imul
sbb
les
int
jge
and
loopne
jl
pop
jo
cmp
push
adc
mov
mulb
sahf
jmp
std
jo
pop
mov
adcl
sbb
lret
iret
lds
xchg
pop
adc
inc
or
mov
add
in
in
loope
lret
mov
pop
outsl
jae
add
inc
push
arpl
add
enter
push
nop
dec
jne
xrelease
or
push
movsl
fbstp
loop
std
test
in
or
insb
rorl
mov
leave
cmpsl
add
cmpsb
and
push
add
outsb
sub
cwtl
loop
mov
inc
lahf
mov
jne
mov
rcll
out
xchg
cmpsb
leave
mov
or
icebp
jmp
cmp
fimull
out
and
cmpsl
sub
push
sub
or
cs
ljmp
repnz
cli
jne
leave
or
cmp
int
push
sub
fdivrl
cmp
cmp
mov
xor
mov
xor
pop
inc
in
xchg
mov
ss
sbb
cmp
xchg
xchg
cwtl
nop
jge
push
xorl
push
movsb
push
mov
mov
xchg
lea
mov
xchg
aam
js
fucomi
leave
lods
cmpsb
inc
adc
and
fildll
les
stos
sbb
rcrb
push
pop
repnz
pop
loope
rolb
add
cmp
aaa
movsl
lea
inc
loopne
in
aad
xchg
mov
mov
popa
aam
jne
ss
xchg
fldt
jle
rcr
mov
iret
sbb
data16
lock
shll
xchg
add
ljmp
mov
add
jge
in
cmpsb
xchg
sub
insl
jae
lods
push
and
cmp
jb
mov
mov
pop
adc
adc
in
push
insb
clc
in
fbstp
cld
jne
lods
cmpsb
lret
loope
neg
mov
mul
xor
push
dec
mov
fnstsw
jne
xor
daa
inc
mov
xor
rol
jnp
dec
ljmp
lods
cld
test
adc
cmp
adc
mov
jne
mov
pusha
les
jo
popl
shll
add
pop
lds
ret
sub
mov
pushf
loopne
ss
xchg
mov
adc
dec
dec
jl
sbbl
shll
js
push
ja
test
xchg
aas
imul
into
xchg
add
lods
fwait
mov
mov
lods
stos
shr
add
test
popa
fwait
les
pop
arpl
mov
push
int
fwait
int3
das
negl
adc
push
es
cmpsl
rclb
add
lds
loope
ds
pop
ds
rorl
push
pop
inc
mov
int
movsl
roll
in
mov
mov
mov
ret
fisubs
stos
mov
addr16
movsl
push
lods
cwtl
das
inc
repz
fwait
sub
dec
xchg
jmp
cmp
fnstsw
ret
mov
cltd
inc
outsl
mov
test
and
repnz
xchg
repnz
notl
mov
add
jg
or
pop
stos
pop
je
decb
out
repz
std
xor
mov
jl
mov
jecxz
push
leave
push
mov
rolb
lods
xlat
ljmp
mov
push
adc
inc
sub
icebp
loop
int3
mov
ret
lods
inc
fcoms
adc
std
out
push
call
lahf
xor
icebp
inc
ret
loopne
scas
ret
sbb
fwait
ror
movsb
data16
pop
mov
je
scas
hlt
insb
imul
ds
sub
push
call
leave
cli
cmp
mov
add
subl
and
ficoms
xchg
loop
cs
cmpl
ss
pop
adc
push
adc
mov
outsl
ret
ljmp
or
push
in
adc
cmp
adc
lods
cltd
push
ret
mov
inc
jmp
xchg
lods
push
ljmp
dec
sti
lods
or
and
lret
xchg
and
cmp
int
mov
xorl
sbb
jne
and
pop
int
aaa
push
cmp
fdiv
lods
dec
adc
ret
adc
pop
jge
sahf
lods
repnz
sti
mov
push
in
orb
test
or
adc
cmp
mov
push
jl
push
adcl
pop
fmulp
xchg
adc
aam
int
bnd
jmp
lds
fwait
sbb
cmp
mov
pop
xlat
or
jns
pushf
jge
lock
enter
in
and
mov
xor
test
hlt
push
inc
les
xor
lock
dec
xchg
or
jbe
les
lret
pop
jbe
int
shlb
daa
loopne
xchg
sbb
in
lock
popf
ds
repnz
pushf
cli
adc
or
mov
lcall
repz
out
cmp
mov
lock
icebp
push
shlb
xchg
ss
push
mov
loopne
jo
aaa
lea
std
mov
or
inc
pusha
lcall
mov
jbe
push
or
sti
rolb
or
jle
clc
test
mov
mov
xchg
enter
daa
addr16
mov
inc
add
aaa
xchg
gs
fwait
adc
sub
mov
fucomi
shr
jle
fsubrs
cmp
cltd
xor
fldl
and
jnp
sub
enter
fcompl
inc
sbb
es
test
iret
notl
repz
idiv
xchg
sahf
pop
sbb
iret
out
enter
cmpsb
fwait
jno
dec
in
pusha
sahf
aad
int
inc
cld
ja
lds
stos
mov
or
out
sbb
ss
jmp
fcoms
or
and
int3
int
sub
stc
sub
lea
orb
mov
std
sbb
mov
jo
or
push
movsl
adc
lret
stc
dec
nop
mov
fsubrs
push
pop
adc
cmpsb
ss
dec
sub
pslld
test
test
jp
ret
stc
sub
movsl
int
cmp
imul
es
into
dec
es
jbe
xchg
or
icebp
inc
xchg
fsubrs
pop
mov
jns
inc
ljmp
fwait
pusha
sti
and
cmpsb
pop
or
dec
pop
es
in
fwait
pushf
test
or
mov
xor
add
lock
xchg
mov
inc
dec
sbb
into
cli
dec
lea
mov
mov
jle
lods
xlat
or
jmp
and
stc
bound
jne
pop
outsb
jle
jmp
ret
mov
lock
jns
xchg
mov
lock
mov
sbbb
dec
lds
lret
je
jne
std
inc
fcompl
pop
cltd
xor
ja
dec
imul
pop
push
xor
jge
fmull
test
test
sub
cmp
gs
imul
mov
ds
shlb
inc
es
sbb
jecxz
pop
ficoms
psadbw
mov
add
mov
push
mov
and
jno
xor
mov
int3
ficompl
clc
xchg
jmp
pop
rcrl
adc
push
out
xchg
aad
hlt
sub
jnp
jg
sti
xchg
pushaw
jp
pop
ja
or
nop
pop
in
ror
jmp
flds
js
ljmp
pusha
jnp
and
ljmp
in
call
xor
in
shl
lcall
ljmp
cmp
pop
add
lret
cmp
lret
sub
jb
mov
bound
pop
jmp
lods
and
ljmp
and
lcall
rolb
stc
clc
lods
sbb
jo
prefetch
test
pusha
sbbl
jb
int
ja
push
dec
arpl
and
dec
adc
mov
xchg
imul
cmp
popa
pop
jmp
xchg
test
or
push
sbb
arpl
and
cmp
imul
icebp
sbb
loop
mov
ret
or
mov
ja
int
std
out
sahf
jmp
cmp
sub
rol
pop
enter
ljmp
and
std
mov
mov
stos
imul
dec
and
push
jns
xchg
fists
dec
lret
and
gs
mov
lods
movsb
flds
shll
out
adc
adc
jg
cmc
and
mov
xchg
stos
jmp
add
inc
mov
out
inc
negb
xchg
cld
dec
cmp
std
and
jl
inc
jbe
inc
pushf
into
fwait
jp
ficoml
repz
out
xor
mov
xchg
jecxz
popf
imul
add
pop
loopne
push
dec
pop
ror
adc
mov
push
into
fs
repz
pop
push
or
jne
pop
push
sub
lret
ret
inc
loop
xor
fisttpll
es
pop
add
in
push
push
outsb
inc
rcrl
jmp
lods
push
dec
ds
jne
inc
mov
fdivs
dec
cmp
pop
sbb
pop
loop
stos
mov
bound
pushf
mov
out
adc
jmp
push
push
cltd
arpl
and
inc
push
xor
jne
insl
mov
cltd
cmc
or
mov
imul
xor
shrl
xchg
addr16
mov
or
push
out
inc
sbb
mov
lahf
push
add
mov
mov
or
fisttpll
js
and
leave
dec
roll
jb
push
sub
sbb
jno
popa
out
add
xor
iret
mov
pop
test
xchg
push
insl
cmp
push
xchg
dec
adc
nop
lret
popa
aas
fsubs
aad
or
adc
scas
clc
enter
out
leave
jge
arpl
push
in
fcoms
and
dec
sub
and
and
mov
fwait
adc
mov
into
xchg
jno
mov
insb
dec
movsb
push
push
ret
outsl
mov
cld
ficomps
jne
sbb
adc
pusha
jns
scas
idivl
sub
loope
loop
push
push
add
lahf
ret
mov
jl
cltd
push
popl
sbb
jge
repnz
push
mov
clc
adc
jo
data16
or
jo
pop
cmpsl
xor
pop
fimull
fcomps
movsb
fs
aaa
aam
call
inc
mov
jge
sbb
scas
cmpsb
aas
shl
sub
jmp
and
mov
mov
sub
fdivrp
xor
popf
xchg
and
mov
mov
mov
das
ret
lcall
stos
pop
lock
mov
cltd
rcr
mov
adc
inc
mov
cmp
ljmp
mov
xchg
xor
neg
pop
lods
out
inc
jne
add
xor
mov
pusha
jb
insb
movsb
inc
mov
and
jmp
scas
hlt
push
pop
aad
xchg
pop
or
pushf
negb
scas
cmp
fwait
xor
xor
int3
mov
loopne
mov
and
jne
mov
lahf
xchg
jne
adc
pop
subl
jns
mov
aam
mov
jbe
dec
cmp
pop
in
scas
xchg
push
mov
popa
mov
test
or
ja
mov
insb
add
into
jae
xlat
clc
test
cs
cltd
mov
fwait
out
or
iret
mov
scas
jp
jae
cli
lods
test
mov
rolb
pop
inc
loop
out
cmp
cmp
jmp
fists
push
xchg
xchg
mov
sti
test
xor
je
and
das
sub
movsb
stos
xor
add
and
mov
pushf
test
pop
jne
nop
stc
test
ss
rcrb
in
sub
adc
adc
push
es
aaa
cmp
clc
scas
mov
and
push
rcrb
pop
scas
mov
push
fistpl
jmp
ret
pop
mov
and
cmp
ljmp
push
in
push
mov
and
dec
jne
cmpsb
inc
nop
push
hlt
scas
repz
fidivrs
xor
inc
jecxz,pn
mov
cltd
inc
dec
fildll
xchg
jo
push
arpl
jecxz
cmpsb
jecxz
lcall
lahf
call
shlb
inc
ds
std
adc
sub
sbb
insl
adc
xchg
jnp
add
rcl
jp
inc
push
cmc
daa
movsl
out
push
xor
in
addb
mov
jecxz
jmp
add
das
push
lods
dec
iret
addr16
sbb
or
imul
fisubs
test
ret
cltd
push
xorl
dec
dec
out
jge
outsb
lods
fldenv
xchg
ret
jbe
cwtl
push
shll
lret
jns
mov
sahf
mov
jne
mov
lcall
and
xchg
sti
mov
inc
pop
inc
push
popa
test
loopne
push
and
dec
addl
into
and
jp
cmp
clc
dec
mov
sti
les
push
or
popa
jne
out
mov
daa
sbb
add
mov
pusha
fldl
dec
push
jmp
xlat
das
add
test
loopne
push
sbb
dec
aam
and
dec
mov
loope
or
xchg
fnstenv
test
fists
push
and
fcmovne
into
mov
dec
xorl
aam
std
push
imul
int3
into
adc
sub
jle
add
fidivs
lahf
sub
aaa
sub
adc
loopne
push
lods
cmp
nop
xor
mov
mov
stos
mov
inc
jno
aaa
mov
dec
xor
ds
aas
mov
push
mov
movsl
pop
cmpsb
pop
pop
faddl
aam
stos
mov
out
sub
sub
pop
jle
insb
jns
leave
xlat
jnp
test
sarl
out
xchg
add
jmp
fcomps
push
or
enter
pusha
dec
lea
scas
lods
push
push
or
add
sbb
and
add
inc
out
scas
dec
dec
dec
int3
pusha
xchg
pusha
mov
daa
movsl
inc
das
inc
andb
xor
mov
and
add
inc
imul
push
inc
sbbl
ja
call
test
divl
push
mov
lret
lahf
pop
mov
pop
xchg
add
lock
mov
xchg
cmpsb
daa
scas
sub
pusha
cmc
lcall
jae
les
add
push
mov
lock
pop
aad
mov
pop
shrb
cmc
dec
dec
cmp
add
shrd
int
xchg
data16
mov
enter
les
out
xor
fiadds
mov
sub
insl
push
add
mov
mov
pop
adc
jns
mov
jae
orb
les
test
mov
sbb
cmp
ds
out
xchg
daa
test
sub
xlat
outsl
lahf
imul
imul
push
imul
andl
sbb
aaa
xor
xor
dec
pop
and
mov
xchg
and
mov
xchg
jmp
insl
and
push
testw
adc
add
incb
mov
dec
in
rcrl
scas
sub
addr16
pop
lcall
dec
int3
xchg
lahf
loopne
pusha
in
ljmp
addr16
iret
out
and
cmp
jp
notl
lahf
and
nop
mov
jb
sub
movsb
jl
and
inc
std
mov
sahf
add
lods
cmp
ljmp
mov
and
loop
xor
xchg
popf
mov
inc
xor
and
inc
pop
push
jl
and
leave
pushl
cmpsb
cmp
leave
push
roll
je
ljmp
pop
dec
ficomps
dec
scas
pop
inc
cmp
cmp
in
ret
push
or
fs
lock
jae
fisttpl
mov
lret
sub
iret
ficompl
inc
cmp
jns
inc
jle
dec
or
aad
movsl
ljmp
sub
adc
xchg
jge
push
jp
dec
and
push
mov
js
cmp
jle
test
je
pop
insl
xchg
fdivrp
mov
cmpsb
clc
out
ret
addl
sub
sbb
mov
imul
jecxz
xchg
jp
cmc
push
sub
sbb
lods
dec
lods
adc
popa
hlt
inc
pushf
stc
mov
cmp
and
lock
repz
subl
dec
mov
mov
sahf
or
ret
in
cld
cmp
adc
sbb
negl
addr16
pop
add
out
jno
xor
mov
test
cmp
test
add
cli
les
popl
xchg
bound
cmp
pop
adc
bound
sbb
xchg
movsb
push
shl
ret
adc
jb
pushw
mov
jne
lods
js
mov
dec
data16
test
test
shr
sahf
insl
sbb
add
push
adc
pop
adc
pop
mov
aaa
sbb
inc
sub
sti
mov
mov
dec
sbb
inc
dec
and
jae
andl
in
sbb
sub
push
mov
xchg
in
iret
icebp
scas
push
cwtl
fsubrs
into
std
pop
mov
clc
and
into
mov
arpl
pop
mov
mov
lcall
test
das
pop
pop
aam
inc
popf
lock
xchg
pop
jnp
sub
ret
cs
inc
cmp
stos
bound
movsl
sbb
or
test
sub
add
hlt
jg
pop
push
xor
mov
ret
cltd
push
ljmp
dec
push
das
fldcw
mov
sub
xorb
cltd
push
sarl
mov
int
test
dec
jmp
cld
sbb
test
filds
pop
rolb
jle
sbb
sahf
xchg
mov
jnp
jmp
push
stc
test
hlt
and
and
pop
inc
lods
push
xchg
mov
xchg
push
sub
loop
mov
dec
sbb
ret
jmp
sub
fscale
add
clc
mov
push
movsl
push
sub
pop
add
aam
dec
add
lea
les
mov
outsb
adc
and
inc
das
divl
js
clc
movsl
fnstenv
test
and
jae
lock
in
imul
ret
xlat
xchg
rorb
popa
js
insb
and
je
inc
sahf
sub
push
push
arpl
jae
lea
int
test
movsl
in
mov
push
in
jp
pop
add
int
imul
nop
mov
cltd
lret
into
jl
xor
xchg
dec
loopne
lea
int3
ljmp
adc
stc
and
lock
adc
aad
scas
sub
pop
out
add
and
sub
inc
pop
and
cmp
and
leave
ss
add
cmp
leave
loop
mov
dec
lods
aad
ret
out
push
nop
jg
or
shlb
jae
pop
pusha
icebp
mov
mov
nop
mov
repz
dec
xchg
or
sub
out
test
cmpsl
loop
test
jg
loopw
and
sub
adc
push
test
stc
gs
adc
cmp
pop
cmp
pop
mov
sub
cmp
mov
xlat
inc
ss
adc
loop
and
sub
push
xor
mov
mov
dec
sub
fstpt
pop
and
and
lret
inc
push
and
imul
scas
xchg
xchg
pop
mov
enter
jmp
push
ds
sti
dec
icebp
aad
push
sbb
xchg
xlat
fisubs
dec
js
cmp
movsb
pusha
fsubr
mov
pop
and
out
int
gs
insb
jnp
xchg
lds
jo
push
mov
dec
push
aad
iret
lds
inc
adcb
jae
js
xchg
xor
cmc
cltd
adc
pop
push
mov
lret
sub
mov
xchg
nop
into
cmp
repnz
outsb
mov
je
xchg
in
incl
jb
mov
add
sub
pop
mov
sub
scas
push
mov
imul
fadds
jp
or
shrl
inc
pop
cwtl
mov
lods
ret
movl
outsb
and
cmp
mov
mov
jo
mov
mov
lcall
cltd
aaa
cmp
dec
dec
mov
jle
into
out
inc
mov
stos
jno
pop
out
rorl
sub
push
lods
mov
mov
pop
mov
icebp
push
pushf
sbb
cmp
popf
pop
jae
gs
pushf
inc
xor
into
addl
xchg
and
xlat
dec
cmpsl
call
dec
scas
pop
push
stos
leave
jne
les
or
lods
dec
insl
movl
out
fcomps
pop
pop
aad
cwtl
sahf
fs
pop
mov
push
outsl
sub
adc
mov
push
das
pop
inc
test
nop
push
mov
dec
lcall
lea
leave
and
lahf
and
shl
inc
jne
rcr
mov
add
sub
popa
and
add
push
mov
and
inc
sarl
cmp
add
adc
pop
pop
imul
lods
add
mov
out
rcll
repz
jno
and
mov
cmp
scas
ret
stc
push
int
cld
sbbl
cmpsb
mov
xchg
stos
insl
les
jb
add
movsb
mull
test
xor
jmp
dec
mov
out
daa
mov
add
xor
test
popa
addr16
sbb
in
inc
or
xor
outsb
xchg
mov
xchg
xor
mov
repz
stos
pop
jae
mov
xchg
shr
les
jb
jo,pn
cmp
sbb
lret
jne
or
fwait
push
shrb
cwtl
das
pusha
outsl
js
mov
mov
leave
mov
ret
jns
mov
mov
mov
push
xor
stos
cmpsb
ljmp
and
push
or
mov
dec
sar
push
pusha
cs
sub
or
mov
mov
mov
jns
push
add
stos
jle
cltd
sbb
and
shrl
pop
adc
push
fdivs
stos
ret
negl
daa
adc
loope
xchg
inc
jnp
sbb
aam
sub
out
sbb
jl
ss
je
xchg
pop
lods
sub
loop
mov
shlb
mov
fwait
push
mov
mov
jecxz
mov
aam
mov
iret
ret
test
ljmp
test
push
jae
inc
fsubr
cmpsl
out
sub
int
jne
stc
ficomps
adcl
std
mov
fnstcw
repnz
int3
jg
cmp
push
scas
sub
imul
insb
scas
push
pop
jle
loopne
les
daa
xchg
sti
cltd
jp
repz
mov
adc
mov
lock
test
pop
arpl
add
or
testl
mul
sbb
out
stos
ja
loop
xchg
cmpsl
fnsave
sub
mov
push
dec
push
enter
adc
pop
pop
cmp
xlat
dec
sub
cmp
cmpsb
sub
std
popa
push
add
dec
inc
and
inc
aaa
jge
adc
add
das
es
jb
mov
pop
xlat
lock
adc
add
cmp
xlat
gs
loop
push
outsb
pop
mov
mov
dec
hlt
xor
push
inc
jo
push
xor
push
aad
out
cmp
pop
aaa
jo
sti
cmp
clc
dec
rcrl
or
aad
je
into
pushf
in
dec
push
fs
mov
pop
xchg
or
push
jbe
insl
testb
inc
and
and
pop
scas
inc
sub
xchg
addr16
cmp
mov
fdivrs
ss
or
ret
aas
das
add
inc
adc
shlb
dec
adc
dec
adc
adc
adc
push
cmp
dec
pop
enter
adc
or
add
aaa
dec
pop
xor
xchg
popf
movsb
xor
xchg
mov
shrd
add
cmp
adc
test
lret
dec
ljmp
jmp
scas
icebp
movsl
lea
test
sbb
sub
or
nop
jno
lahf
je
test
les
jmp
and
sti
cmpsb
cmc
jae
dec
xor
and
js
cmp
mov
jns
out
push
mov
addr16
stos
popf
mov
mov
loop
or
cmp
pop
or
pop
popa
loopne
jge
xchg
into
fldt
pop
jb
dec
loope
and
dec
js
mov
xor
enter
fildl
jmp
dec
insl
clc
pop
jae
and
lods
pop
sub
hlt
test
lds
mov
sti
sbb
and
mov
pop
fsts
push
popf
add
mov
jns
add
stos
push
pop
cmp
cltd
decb
add
adc
mov
push
dec
cmp
cltd
loop
movsl
daa
aam
push
xchg
fisubrl
fistpl
int
sahf
sbb
outsl
jne
mov
fbld
lcall
cmp
comiss
in
lcall
popa
mov
xchg
pop
mov
xchg
pop
push
or
in
jae
mov
and
into
in
testl
int3
or
fsubrs
xor
jbe
cs
sbb
mov
jp
pushf
out
dec
jno
testl
and
nop
sub
out
leave
fisubl
sub
inc
aad
ljmp
mov
subl
out
dec
cmpsb
shrl
dec
cltd
mov
movsl
ds
out
pop
fmull
and
repz
or
sub
test
xor
dec
and
xor
subb
jne
les
mov
push
jecxz
sub
xor
nop
inc
ljmp
lcall
popa
pusha
fwait
push
shrl
test
imul
rorb
pop
and
in
cmp
testl
pop
out
jle
sbb
dec
cli
mov
aam
mov
stos
jmp
dec
xchg
ret
sub
push
ficomps
lods
mov
arpl
jmp
push
cmp
sub
dec
jns
xchg
inc
jb
jp
jns
sbb
cmp
cs
aas
jg
mov
jae
push
cmp
jecxz
jnp
push
mov
scas
nop
mov
cli
inc
mov
lds
jmp
icebp
test
into
imul
clc
adc
loop
mov
push
dec
sub
daa
xor
mov
dec
imul
xchg
dec
mov
pop
dec
hlt
das
fnstenv
mov
test
mov
mov
mov
popa
lods
and
lret
arpl
pusha
mov
es
push
ret
cltd
shr
repz
mov
loop
and
ss
arpl
stos
dec
xchg
and
insb
cmp
xchg
lods
pop
jns
sbb
jns
mov
gs
push
push
xor
xchg
sbb
mov
loope
xor
xchg
clc
pop
cmpsb
imulb
gs
jae
xor
popa
testl
and
outsl
adc
mov
sbb
cltd
push
push
pop
cmp
pop
into
push
str
mov
imul
or
jb
ret
leave
sub
jne
push
fwait
imul
push
popf
les
nop
jg
das
pop
mov
addr16
push
sbbb
dec
sub
mov
jecxz
xchg
js
dec
cmp
cmp
daa
repz
addr16
and
mov
jae
jl
sub
mov
sub
jne
out
xchg
mov
cmc
mov
sub
test
rcr
sub
or
sbb
pop
sbb
repz
lcall
dec
sub
js
jg
fs
xlat
mov
xor
push
cs
fcomi
cmp
je
mov
mov
lds
pop
bsf
mov
imul
scas
lods
popa
nop
inc
mov
inc
pop
lret
xor
aam
int3
dec
and
jnp
mov
or
mov
test
shl
fcmovnu
movsb
push
pusha
movsl
loop
fcoms
sahf
xorb
jbe
mov
sti
cwtl
mov
je
or
mov
fdivs
test
xchg
dec
iret
inc
xlat
rclb
add
pop
dec
cmpsl
testb
cmp
jne
fcoml
mov
fisttpll
mov
add
inc
adc
fstpl
dec
fldt
mov
jp
cmpsl
lock
and
lretw
loope
test
jl
jmp
mov
ss
xchg
cmpsl
js
inc
fisttpl
stos
mov
mov
push
mov
xor
xor
movsl
adc
popf
push
mov
test
addr16
and
out
mov
fisttpl
mov
loope
jle
cmp
scas
cmp
lahf
or
enter
add
int
pop
ret
mov
fistps
adc
inc
std
pop
inc
dec
sub
stos
jae
sub
jle
cmp
push
shl
mov
cmp
lock
ret
imul
xchg
loopne
loope
mov
mov
into
test
jbe
jecxz
enter
lods
movsl
jae
sbb
sti
pop
data16
mov
xor
jecxz
xor
mov
or
clc
das
sub
xor
fdivrs
xchg
inc
ret
pop
movsl
lret
fstps
orl
scas
ror
scas
icebp
mov
xor
cmpsb
sub
and
pop
adc
or
xor
leave
fiaddl
add
adc
icebp
or
fiaddl
sbb
mov
repnz
cmp
inc
andb
and
shlb
movsl
adc
sub
lcall
cld
mov
or
in
xchg
xor
scas
int3
jae
or
add
popf
mov
and
push
fbld
mov
iret
push
loope
push
int3
imul
fstpl
es
cs
mov
jbe
push
aad
repz
stos
adc
in
dec
or
sbb
js
aam
sub
lcall
xorb
mov
aaa
or
inc
out
faddl
stc
lahf
cmpsl
or
pop
push
push
xchg
jmp
sub
cs
sar
mov
or
cmpsb
test
rorb
mov
sti
push
cmp
test
into
test
popf
int3
ljmp
xor
xchg
mov
addr16
adc
add
add
or
add
sbb
add
add
add
pop
add
add
add
addb
add
add
add
dec
add
add
inc
add
and
add
lods
xor
add
add
loopne
add
add
add
pusha
xor
add
add
add
lcall
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
push
incl
add
add
add
je
xor
ret
mov
rorb
jbe
xchg
dec
fs
jg
mov
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
push
cmp
cmp
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
repz
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
or
into
outsb
mov
add
fmuls
pop
adc
sbb
out
repz
icebp
jae
pop
mov
rolb
cmpxchg
ret
mov
andb
adc
cli
adc
sbb
add
popa
cmpsb
or
or
xchg
dec
jne
ss
pop
or
adc
adc
adc
punpckhwd
sbb
lock
xchg
xchg
sbb
or
push
push
or
sub
lcall
insl
std
add
mov
sahf
adc
push
andb
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
repz
ret
imul
pop
add
pop
push
call
mov
cmp
subl
and
xor
int3
in
mov
ret
mov
shlb
mov
inc
push
and
jecxz
inc
sub
movsb
sub
add
push
push
je
adc
jnp
push
leave
hlt
add
popf
rorl
fwait
mov
mov
mov
mov
sbb
adc
sub
nop
sub
jmp
fs
pusha
sbb
xchg
js
xor
jp
push
xor
dec
pop
shll
push
out
fcompl
outsb
bound
imul
mov
shl
out
mov
inc
sbb
mov
mov
test
push
or
in
and
or
or
xor
cwtl
dec
jmp
jmp
inc
repnz
xor
pop
pusha
xchg
mov
pop
jno,pn
das
xor
add
mov
adc
push
mov
leave
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
or
ss
dec
jmp
xchg
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
jge
add
or
or
jmp
shr
add
cmp
mov
or
lea
mov
xchg
dec
sbb
inc
mov
cltd
jge
daa
test
adc
orl
sbb
pusha
jb
mov
add
or
add
lea
xchg
inc
imul
in
mov
lock
jno
hlt
add
fidivs
inc
or
push
lret
add
mov
dec
ds
mov
mov
sbbl
cmp
mov
xor
xchg
xor
inc
xchg
adc
out
push
or
push
pop
idiv
ljmp
adc
xchg
or
mul
jge
inc
out
pushf
test
xchg
sub
nop
in
add
push
call
xchg
push
sbb
cld
cld
jle
push
mov
or
outsb
mov
push
dec
mov
pop
pop
mov
jo
stos
dec
adcb
lret
add
or
pusha
pop
xor
adc
add
adc
cmp
out
and
or
push
sub
and
and
scas
pop
adc
add
mov
stc
adc
sbb
or
mov
sbb
test
push
add
gs
or
icebp
cmp
mov
sbb
and
and
or
push
push
push
jno
add
pop
sub
lea
inc
cld
add
add
lock
aaa
or
addb
mov
lods
stos
and
nop
cmpl
add
jae
test
fmull
mov
cmpsl
jnp
test
rep
out
iret
and
cmp
das
sbb
push
arpl
lcall
test
call
add
dec
sub
xor
and
and
jnp
xchg
aaa
and
push
call
jb
sbb
fwait
xchg
shrl
pop
or
push
sti
nop
sahf
add
lcall
dec
test
or
inc
inc
push
sbb
jnp
mov
lea
mov
cmp
sub
jl
adc
loope
xchg
jg
lea
test
xor
push
aas
pop
inc
mov
sbb
enter
push
aas
rcr
push
rclb
test
dec
inc
xor
jmp
mov
adc
and
ss
inc
jo
add
test
ret
ds
rolb
mov
pop
xchg
jl
imul
mov
cltd
cmpsb
cmp
and
add
add
ret
mov
cmp
inc
pop
or
aas
pop
loopne
push
add
push
and
xchg
test
sub
adc
ret
cmp
sub
dec
cmp
add
out
mov
loop
xor
inc
stos
pop
add
sub
in
xor
leave
push
add
jp
hlt
push
ror
inc
shll
pop
adc
pop
add
loopne
or
hlt
cmpsb
cltd
inc
or
push
push
and
loop
push
sbb
pop
cmp
or
and
xor
jmp
pushf
mov
push
clc
movzwl
test
jge
or
xchg
insb
xchg
xor
inc
pop
adc
add
jne
cmp
jge
leave
push
inc
jo
rolb
add
sub
mov
je
dec
mov
xlat
jne
sub
ret
push
shr
popa
rclb
les
push
pop
add
add
aas
pop
roll
pop
pop
and
inc
or
sub
xor
test
push
push
xor
jmp
or
cmp
inc
xor
in
aas
add
jbe
push
adc
incb
pop
mov
dec
aas
adc
out
shl
lods
inc
inc
pop
imul
test
inc
int
mov
adc
dec
leave
loopne
xchg
sub
or
pushf
roll
rep
shrb
jnp
add
cli
iret
movsb
push
push
sbb
stos
adc
test
fidivl
cmp
ret
add
pop
mov
pushf
sbbb
push
push
push
and
push
mov
in
es
enter
mov
pop
and
jl
add
dec
push
hlt
push
mov
jge
pop
dec
test
mov
outsl
push
push
flds
in
fnop
clc
enter
xchg
mov
inc
aam
sub
lahf
ss
sti
outsb
push
ret
pop
imul
nop
cli
cmp
jne
stc
sub
adc
repz
inc
rol
decl
movsb
stos
adc
fsub
fildll
jne
cs
cmp
xchg
ficoml
in
sub
lret
std
mov
fwait
mov
and
xchg
cmp
mov
or
or
mov
or
xor
jle
adc
push
push
or
call
sbb
mov
and
cmp
bound
in
sbb
subl
xchg
inc
adc
dec
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
sbb
into
jge
mov
adc
jp
jge
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
cmp
jmp
xor
data16
inc
jecxz
dec
enter
push
dec
mov
push
and
pushf
aad
test
adc
add
xor
icebp
mov
adc
dec
or
inc
jmp
mov
cld
insl
ror
sbb
inc
cmp
mov
jl
sbb
sub
jmp
push
lea
mov
leave
pusha
cmp
push
orb
je
js
push
pop
sbb
arpl
sub
or
in
xor
and
scas
adc
lcall
mov
fiadds
pop
outsl
cmpsb
dec
dec
scas
icebp
inc
jo
insb
imul
jb
mov
adc
out
and
jne
fldt
adcb
jecxz
cmp
aas
fs
and
stc
in
fnstenv
pop
scas
mov
imul
inc
xor
sub
insb
and
or
daa
arpl
sub
jne
fwait
push
xor
push
dec
fidivrs
popa
addr16
inc
outsl
js
xorl
js
data16
imul
fwait
insb
add
inc
js
je
xchg
movsb
jo
insb
inc
shrb
popa
outsb
fs
jo
dec
jo
lods
sbb
cmp
insb
cmpsb
sbb
jl
imul
add
mov
cltd
lcall
jge
push
add
insl
cmp
and
jmp
push
cmp
dec
dec
xor
dec
arpl
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
adc
add
pusha
push
add
or
add
cmp
add
add
insb
xor
add
add
adc
add
xor
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
