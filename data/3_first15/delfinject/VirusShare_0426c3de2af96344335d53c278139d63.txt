push
mov
lea
dec
shrd
bsr
test
btr
btc
bswap
mov
test
sbb
neg
bt
mov
test
ror
btr
imul
mov
add
test
repz
mov
mov
fs
repz
sar
or
inc
xchg
shrd
repnz
imul
lea
imul
dec
mov
shld
bswap
dec
bts
neg
mov
xadd
shr
or
mov
or
not
repnz
mov
test
bt
test
mov
mov
ss
imul
bt
mov
imul
bsf
mov
bsf
imul
ror
bsf
mov
fs
btr
mov
imul
rcl
rcr
mov
not
or
bsf
bswap
btr
xadd
xadd
shrd
mov
bts
repnz
bsr
btr
bswap
mov
mov
mov
mov
inc
movzwl
movswl
btr
mov
bswap
repnz
xadd
lea
shld
lea
bswap
btr
bsr
bsf
imul
not
mov
bsr
test
imul
lea
bsf
lea
bsf
xadd
mov
test
mov
shld
xor
test
lea
mov
fs
bt
rol
test
shld
bswap
bsr
pop
jmp
add
add
add
push
add
add
add
add
mov
add
lock
addb
add
or
add
fadds
add
add
add
add
add
add
add
add
pop
add
add
add
add
pusha
add
addb
add
js
add
nop
add
addb
add
rolb
addb
add
fadds
add
add
add
add
add
or
add
nop
or
xor
add
or
add
and
add
cmp
add
push
add
sbb
add
out
or
addb
add
add
add
adc
add
push
or
and
add
add
add
add
add
add
add
cmp
add
add
add
add
sbb
jmp
add
sub
add
sub
sub
add
inc
add
sub
add
pop
add
sub
add
jo
add
mov
sub
add
mov
sldt
mov
sldt
rolb
xor
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
lock
add
or
add
and
add
cmp
add
add
add
add
add
add
add
push
or
adcb
adcb
subb
sbbb
addb
addb
add
add
add
add
add
add
pop
add
jg
add
jg
add
jg
add
push
add
loopne
add
clc
push
add
adc
add
sub
add
add
add
add
add
add
add
add
add
inc
pop
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
pusha
pop
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
nop
pop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
jge
add
add
in
add
add
add
or
add
add
in
add
add
add
cmp
or
xor
add
in
add
add
add
jo
or
xor
add
in
add
add
add
movsb
orb
xor
add
in
add
add
add
fadds
add
in
add
add
add
test
or
in
add
in
add
add
add
mov
add
in
add
add
add
pop
mov
add
add
add
add
add
add
add
or
rolb
add
in
add
add
add
cld
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
in
add
add
add
insb
xchg
or
rolb
add
in
add
add
add
cmp
or
rolb
add
in
add
add
add
or
or
call
add
add
add
add
xchg
or
push
add
add
add
add
add
add
or
test
add
in
add
add
add
int3
cltd
or
add
add
in
add
add
add
rcrb
add
in
add
add
add
enter
adc
add
in
add
add
add
fsubs
add
add
add
add
add
cmpsl
or
hlt
add
add
add
add
add
add
test
add
in
add
add
add
xor
add
add
add
add
add
scas
or
jo
add
in
add
add
add
xor
or
add
add
in
add
add
add
xor
or
clc
add
add
add
add
add
add
add
in
add
add
add
sub
or
mov
add
add
add
add
mov
add
in
add
add
add
or
add
in
add
add
add
jo
or
or
add
in
add
add
add
jl
or
mov
add
in
add
add
add
or
or
xor
add
add
add
add
add
enter
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
nop
int3
or
rolb
add
in
add
add
add
pusha
rorb
add
add
add
add
add
add
rorl
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
add
in
add
add
add
adc
or
fadds
add
in
add
add
add
call
add
add
add
add
add
add
fimuls
add
add
in
add
add
add
adc
or
adc
add
in
add
add
add
and
or
adc
add
in
add
add
add
cmp
or
adc
add
in
add
add
add
dec
fisttps
add
add
in
add
add
add
pusha
fisttps
add
add
in
add
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
xor
add
adc
add
inc
outsl
adc
outsb
jo
roll
add
popa
insb
add
add
jb
stos
lea
sbb
and
popa
call
lcall
or
dec
outsb
sbb
mov
and
jg
rcrb
add
inc
jns
sub
insb
add
outsl
jb
add
inc
or
add
xchg
fadds
cwtl
shlb
push
push
je
cs
sbb
add
in
sbb
hlt
dec
clc
xchg
in
adc
push
push
dec
bound
arpl
imul
in
push
jae
insl
sbbb
ret
or
fnstenv
cmp
enter
add
adc
inc
cs
int3
addl
clc
jmp
or
adc
loopne
jecxz
xor
dec
and
xor
push
insb
loopne
pop
jno
clc
mov
adc
js
cmp
adc
sub
mov
or
popa
xor
and
insb
xor
js
inc
je
jo
insb
enter
jb
cmp
mov
xchg
push
enter
jb
cmp
mov
and
xchg
xor
xor
sub
sub
mov
mov
and
mov
jb
cmp
adc
xchg
test
or
or
cmp
mov
push
call
negb
je
movzwl
mov
cmp
pop
mov
adc
xchg
xor
clc
or
lock
sbb
mov
and
adcl
adc
push
push
fildl
jo
enter
jne
xor
pop
mov
mov
add
or
add
mov
add
lea
add
push
mov
addb
cmp
jne
in
icebp
stc
adc
push
popf
pop
nop
mov
inc
add
mov
repnz
cmpxchg
push
mov
ljmp
adc
push
xchg
inc
add
push
mov
push
sub
adc
xchg
ret
nop
pop
push
push
push
mov
repz
stos
call
add
push
pop
pop
nop
cmc
cmp
aaa
or
ret
and
mov
add
in
inc
mov
inc
sub
add
or
and
pop
sbb
pop
rcr
cmp
jne
loop
lret
or
test
pop
pop
pop
adc
mov
xor
cltd
cmp
jb
or
add
insb
call
ja
bound
add
cwtl
or
out
jne
cmpsb
bound
jmp
pop
mov
addb
lcall
jmp
xor
test
scas
and
stc
mov
mov
jae
or
jb
xchg
jmp
sbb
cmp
cld
or
nop
inc
xchg
mov
and
cmp
jge
mov
xchg
cmc
mov
in
rcll
xchg
sbb
rolb
test
je
rcl
call
insb
decb
leave
dec
adcb
mov
push
push
daa
mov
push
mov
xchg
mov
cs
lea
ret
push
push
test
sub
jne
pop
jns
mov
cmpl
xchg
ja
cmc
std
pop
push
fsubrl
and
push
in
popa
jecxz
sub
push
dec
or
push
out
add
iret
sub
push
dec
or
push
and
jae
xchg
out
ja
repnz
dec
add
fidivs
push
sbb
jbe
imul
jne
stos
jae
xchg
xor
xor
sti
pop
cmp
in
adc
adc
pcmpeqb
adc
sbb
adc
sub
hlt
mov
ljmp
add
bnd
xchg
and
call
mov
or
mov
cmp
pop
cmp
or
add
xchg
pcmpeqd
mov
std
push
mov
test
mov
subl
pop
mov
jmp
dec
cmovae
or
dec
je
sub
or
fs
xor
sahf
jmp
cmp
clc
sub
push
inc
test
jbe
sti
mov
std
stos
sbb
addl
inc
orl
push
inc
mov
sub
aas
xchg
data16
aam
xor
cld
or
and
cmpsl
je
mov
lods
inc
dec
outsb
shlb
or
add
sub
mov
cmp
pop
movsl
pop
and
push
push
pop
xor
xchg
adc
adc
mov
cli
mov
xchg
je
dec
adcb
test
mov
add
push
lods
push
push
orb
xor
or
and
xor
mov
out
sbb
mov
cmpsl
movsb
dec
nop
mov
call
jmp
imul
jne
and
sub
cmp
cmpl
outsl
sub
imul
push
adc
sub
dec
movsb
cmpsb
sbbb
mov
push
sbb
jecxz
pop
ss
mov
add
cmp
jae
loopne
sub
pop
push
jl
and
dec
dec
mov
test
je
mov
ret
mov
imul
movsl
adc
notb
repnz
icebp
jmp
and
mov
dec
pushl
cmp
sub
add
fsts
jle
pop
adc
stc
and
jp
and
or
xchg
cmp
mov
adc
rolb
hlt
inc
cmp
in
xor
or
mov
adc
adc
push
add
mov
push
xchg
lock
in
cs
dec
les
dec
ds
sysenter
test
aad
rcl
sbb
inc
enter
add
push
js
sbb
jne
pop
aad
cmp
out
add
mov
jl
mov
pop
jo
push
pop
outsb
stos
jmp
xchg
in
jno
fistpl
loopne
cmp
or
adcl
pop
or
cmp
mov
pop
test
jns
add
enter
aad
int
mov
jmp
pop
push
or
sbb
sub
hlt
lods
or
movb
dec
mov
popa
mov
xor
rcrl
movlhps
adc
pop
call
sub
sub
lea
sbb
add
adc
add
ret
mov
mov
mov
xchg
leave
add
or
incl
rolb
loop
icebp
test
add
mov
or
push
push
lret
sub
mov
sbb
add
andl
mov
or
xchg
or
je
sub
add
fcmovb
push
push
sub
test
and
and
cmpsl
add
sub
cmp
bound
push
sub
or
loopne
ficoms
push
sub
xor
push
or
pop
cmc
clc
std
fadds
adc
fs
push
pop
andl
movsb
mov
xchg
dec
or
mov
adc
xchg
bound
xchg
pop
test
call
aaa
sub
movsl
jg
aad
cmp
sarb
leave
fiadds
jne
cmp
pop
je
or
cli
mov
cmc
insb
mov
test
fildl
aad
xchg
arpl
lods
cwtl
std
pop
add
lea
mov
movsl
or
fcomps
mov
ret
les
dec
jo
repnz
fisttps
add
sub
dec
sbb
cmp
mov
cmp
adc
or
es
lahf
add
jmp
sar
inc
sub
pop
jg
sub
cmp
jl
xchg
push
iret
or
push
adc
sbb
push
mov
jle
or
pop
or
sub
adc
sbb
or
or
mov
icebp
enter
and
jmp
dec
push
rorb
or
or
cmp
and
add
in
add
add
add
jne
and
and
adc
adc
ret
pop
lret
inc
xchg
adc
xchg
outsl
lcall
xorl
add
adc
sub
inc
dec
lods
pop
dec
cld
push
dec
push
dec
mov
sbb
add
pop
pop
sub
xchg
int
pop
int3
lea
sbb
call
add
add
push
inc
je
push
dec
subb
jbe
ljmp
mov
out
imul
pop
les
dec
xlat
xor
jg
mov
inc
sub
pop
je
call
leave
or
fs
jne
or
inc
pop
rclb
and
arpl
sub
or
adc
mov
mov
add
icebp
movsl
cltd
and
out
out
xor
cmc
arpl
sub
ret
adc
xchg
out
pop
jmp
sub
mov
dec
cmp
or
leave
pop
insb
in
stos
push
data16
xchg
das
into
mov
fwait
or
mov
cwtl
out
sti
pop
sarl
fisubl
adc
movsb
dec
and
xor
and
data16
sti
fiaddl
xchg
leave
in
dec
mov
test
aad
add
movsb
scas
dec
inc
pop
or
jne
sub
or
mov
jl
hlt
jmp
in
mov
inc
popl
or
mov
mov
mov
mov
cmc
push
xchg
testl
or
aam
bound
sbb
dec
sub
dec
pop
mov
xor
lcall
test
xor
inc
mov
adc
mov
mov
pop
mov
nop
and
cli
loopne
xchg
mov
int3
clc
inc
or
inc
jb
mov
dec
and
jmp
sbbl
cmovs
cmpsb
cmp
and
or
les
mov
rolb
mov
icebp
ljmp
notl
call
or
dec
sub
cmp
sbb
scas
xchg
ja
loop
cmp
cmp
sub
sub
sbb
sbb
add
test
mov
test
je
sbb
and
add
cld
mov
inc
aaa
orl
ljmp
add
push
lds
or
and
stos
ret
mov
shll
dec
sub
cmpsb
or
pop
pop
pop
mov
pop
mov
in
and
inc
mov
movsb
in
fs
fdiv
ret
movl
mov
mov
das
push
mov
inc
orl
sub
arpl
cld
mov
jne
cmp
jb
pop
fsts
add
mov
dec
add
sub
lret
dec
cmp
aam
dec
fiadds
sahf
or
test
add
pop
mov
cmp
adc
in
sbb
addr16
inc
dec
mov
in
mov
cltd
sbb
aad
inc
adc
add
add
mov
daa
pop
or
mov
inc
xchg
fbld
ret
jmp
das
push
cmp
lds
push
scas
ds
loopne
in
sub
test
shll
dec
rorb
out
cmp
xor
loop
andps
and
fsub
push
dec
and
sbb
aam
les
mov
pop
pop
sbb
pop
cmpsl
xlat
lret
andb
ja
inc
or
push
lock
dec
lret
mov
pop
and
jmp
js
adc
js
pop
ret
fs
bound
cmp
jge
movsl
cmp
and
sub
inc
lret
xchg
dec
sub
inc
cmp
adc
and
es
push
addl
sub
sbb
add
call
je
inc
ja
adc
mov
or
add
xchg
push
dec
sbb
sbb
add
enter
fdivs
xor
and
mov
adc
shl
xchg
inc
out
nop
and
mov
and
mov
ret
mov
and
nop
xchg
xchg
sbb
stos
push
lcall
clc
stc
adc
aas
das
aam
int3
add
dec
jecxz
adc
sahf
adc
adc
push
test
cmp
dec
ja
sbb
ret
lea
pop
into
inc
sbb
xor
and
lcall
push
push
push
cltd
enter
inc
pop
jne
lock
inc
or
mov
ljmp
call
jne
sub
fdivs
in
xor
mov
dec
xor
andb
jle
mov
adc
shll
data16
sbb
ret
sub
inc
nop
cmpsl
cmp
hlt
add
mov
inc
rep
jmp
adc
xor
arpl
mov
clc
call
imul
inc
enter
lock
dec
or
hlt
je
dec
fsubs
inc
sub
mov
movb
add
or
lea
add
jl
xor
adc
enter
and
and
data16
adc
sbb
jl
inc
addl
jmp
sub
daa
adc
sbb
in
jl
shll
lea
into
pop
sbb
jnp
sub
test
jo
add
paddusb
pop
int
cwtl
sbb
das
mov
fs
js
sbb
cmp
jp
push
rcll
xlat
ljmp
das
cmp
pop
js
rep
incl
and
inc
insb
mov
je
xor
sbb
sub
std
sbb
xor
inc
mov
test
inc
fnclex
fsts
or
rcrb
or
in
or
adc
ds
or
cmp
loop
fwait
orw
btr
push
and
pop
sub
pop
and
cmp
cwtl
mov
or
das
loopne
cmp
or
mov
mov
jl
js
pop
add
mov
je
pop
sbb
pop
out
in
jae
jne
or
jge
stc
push
test
sbb
push
sbb
pop
sbb
mov
sbb
divb
mov
das
or
fdivs
clc
and
or
jne
jne
adc
test
or
out
shlb
stos
cmpsb
popa
imul
mov
cmp
lahf
mov
mov
inc
inc
orl
repz
push
dec
push
out
rorb
inc
cwtl
jecxz
ja
add
push
shr
je
cmp
fnstenv
dec
jno
in
dec
add
pop
out
sbb
or
cmp
push
add
fwait
pop
pushl
push
push
cmp
jne
push
jns
dec
dec
fidivrl
dec
sti
fs
or
add
sti
jle
push
shr
pop
cmp
adc
sbb
push
nop
sbb
push
or
pop
or
and
pop
sub
xor
loop
lcall
pop
mov
or
or
dec
mov
dec
pop
and
add
popf
jb,pn
xor
int
arpl
loopne
adc
ror
dec
or
stos
adc
adc
xor
imul
mov
rcrb
push
mov
sbb
mov
cs
inc
roll
je
mov
push
ja
bound
sub
pop
or
js
pop
addps
push
add
sub
or
rcrb
and
add
sub
and
ja
cmp
mov
and
fdivs
sbb
je
aam
push
jbe
incl
neg
jle
dec
js
pop
sub
lock
inc
fldl
pushf
mov
sub
test
add
or
inc
adc
ret
or
mov
aad
sbb
lcall
mov
dec
std
mov
push
cmp
stos
push
inc
cmp
mov
dec
jne
repz
sbb
sub
movsb
pop
dec
dec
sub
cmpsb
xchg
dec
mov
sub
dec
jne
add
and
adc
inc
and
mov
lcall
in
lea
ret
xor
xlat
lock
fldt
fiadds
jns
push
paddusw
sbb
inc
das
or
popa
sub
and
xor
jmp
mov
inc
inc
stc
and
cmp
and
stc
jmp
fnstsw
xor
adcl
and
cmp
scas
or
or
add
mov
push
ret
hlt
inc
adc
xchg
cwtl
push
pusha
and
imul
xorl
inc
mov
movsl
aam
test
adc
sub
test
hlt
and
mov
inc
or
jecxz
addb
sbb
cs
shlb
imul
fimuls
and
mov
inc
bound
inc
add
xlat
fadds
lods
add
js
xchg
mov
or
or
push
in
int3
into
sbb
cmp
test
popa
push
pop
mov
ror
movsl
sbb
nop
mov
pop
rolb
and
daa
lret
into
pop
hlt
test
or
pop
hlt
in
or
mov
dec
addr16
leave
repnz
rclb
outsl
cld
gs
sahf
mov
sub
imul
dec
aaa
pop
js
mov
add
stos
mov
cmp
jmp
xchg
test
stos
pop
add
jg
mov
add
daa
cmp
jl
xor
cmp
call
dec
mov
jle
push
inc
add
sarb
pop
jbe
int3
repnz
test
nop
fneni(8087
daa
cmp
clc
scas
adc
cli
pop
pop
pushf
mov
pop
inc
mov
fs
add
repz
loope
jp
jp
cmp
addb
fdivrs
mov
xchg
push
cmpsb
scas
mov
pop
pop
or
addl
xchg
cmp
xor
push
in
cmp
sahf
xchg
pop
add
push
movsl
mov
aaa
popa
jl
fadds
and
addr16
repz
mov
subb
add
mov
push
pusha
les
aad
bound
xor
ret
jmp
xor
pop
jb
xor
cmp
jne
lds
dec
or
pop
mov
mov
or
or
mov
xchg
cli
nop
pop
add
hlt
movzwl
inc
clc
loopne
push
fsubrs
push
or
inc
outsb
sub
rcrb
xor
push
xor
sub
mov
xchg
sub
ja
push
or
push
mov
mov
movsb
xchg
push
dec
in
mov
mov
sar
mov
push
clc
pop
cs
adc
ret
sub
dec
inc
push
push
inc
push
inc
add
jb
popa
outsb
fs
ja
pop
jo
imul
inc
push
push
dec
push
popa
jae
push
test
and
fninit
fwait
pushf
arpl
add
pop
jbe
jae
aas
xlat
add
xor
mov
inc
and
movsb
sub
mov
rolb
test
cmp
jne
jmp
xor
cs
add
inc
mov
dec
adc
inc
faddl
pop
add
daa
cmp
jl
push
cld
cld
shlb
bound
sbb
jns
rcr
cltd
test
or
sbb
and
or
popl
push
xor
sub
and
daa
or
jecxz
dec
mov
add
call
in
mov
mov
mov
fdivs
rclb
add
repz
pop
and
xchg
sub
andl
add
sbb
in
cmp
loope
sti
enter
les
adc
mov
clc
jnp
adc
xor
and
aam
cmp
jbe
scas
js
jp
icebp
out
jmp
inc
jp
pop
mov
lock
data16
inc
or
test
jae
inc
or
jb
punpcklbw
add
sub
add
mov
mov
mov
inc
inc
sahf
fidivrs
fs
test
imul
and
inc
adc
out
adc
clc
mov
mov
jae
fucomp
add
pop
lea
push
sbb
or
cmp
fmuls
xchg
dec
ret
push
mov
dec
mov
pop
outsb
add
in
ret
sub
dec
sub
jl
xor
xor
jb
fnsave
testb
sbb
lea
dec
adc
mov
jle
xchg
add
and
dec
jecxz
adc
ret
push
mov
mov
cmp
jbe
pusha
dec
or
repz
or
nop
push
xchg
mov
jle
push
fstps
pop
jb
push
add
repnz
lock
ja
testb
pop
add
sub
sbb
push
mov
push
xchg
or
sbbb
jbe
out
sbb
lea
cwtl
dec
xchg
nop
mov
stc
xchg
pusha
adc
leave
mov
test
cmp
movsb
or
push
pop
daa
loope
shlb
push
cmpsb
push
shrl
into
push
insb
dec
mov
pop
lret
popa
es
adc
clc
mov
sub
dec
jne
nop
jns
jmp
sbb
mov
sbbl
jecxz
out
push
cmp
inc
add
in
push
adc
dec
and
inc
adc
push
pop
sbb
repnz
mov
fs
daa
rcrl
rolb
push
push
push
mov
es
adc
hlt
xor
mov
adc
mov
mov
and
movl
or
pop
or
test
cmp
sub
or
push
leave
inc
pop
arpl
or
jmp
fdiv
ljmp
clc
mov
add
in
ljmp
leave
inc
adc
dec
pop
mov
mov
push
jae
add
cli
in
push
call
sbb
scas
or
push
bound
add
dec
or
inc
loopne
sbb
mov
or
push
js
addb
push
xchg
adc
xlat
jnp
mov
cmpb
ret
or
or
jne
movsbl
ds
loope
add
bound
mov
push
jno
lods
enter
and
pop
stos
out
xor
adc
jecxz
mov
enter
testl
test
push
aad
cmpl
mov
or
je
push
js
and
adc
je
mov
dec
mov
loopne
cmpl
push
je
xchg
movsl
push
xchg
loopne
jo
jbe
inc
loope
and
addl
pop
xchg
js
adc
ret
lret
xor
or
add
push
xchg
test
cmp
jo
dec
add
or
fcomps
xchg
sbb
fistl
push
cli
test
sbb
inc
sub
cmp
mov
or
dec
cmp
inc
mov
push
add
mov
push
mov
repz
or
and
push
inc
outsl
les
and
push
add
jne
test
ret
scas
sbb
jne
adc
add
mov
adc
dec
lds
out
and
clc
inc
inc
addl
pop
iret
fs
push
fs
insb
pop
or
rcrl
je
jg
or
jne
push
or
dec
dec
rcl
and
or
inc
pushl
xchg
push
jb
xchg
nop
lahf
mov
mov
insl
nop
xchg
push
and
pop
mov
test
jecxz
mov
add
mov
leave
loope
cmp
inc
test
cmp
or
inc
cwtl
decl
and
cmp
fsub
je
das
loopne
push
push
push
push
push
mov
adc
cld
enter
mov
inc
adc
mov
mov
iret
push
mov
addb
pusha
add
std
cld
int
push
or
add
add
xor
push
mov
push
adc
adc
lea
and
pop
lret
rorb
push
in
or
pop
and
loop
xor
or
lea
mov
add
call
xor
cmp
jg
je
xchg
mov
or
sub
mov
cmp
pusha
add
pop
sub
jb
out
loope
cmp
adc
sub
inc
adc
push
and
cmp
std
nopl
push
cmp
mov
enter
leave
cmc
loope
icebp
and
iret
icebp
push
lahf
and
pop
xlat
pop
push
pop
into
pop
adc
fcomps
push
pop
ficompl
or
fstps
push
pop
lret
inc
xor
leave
inc
push
or
sbb
mov
test
sub
jbe
dec
adc
sub
fwait
cmp
sarb
pop
push
cmpsl
filds
xor
sbb
andb
fsubr
test
sbb
daa
sbb
or
cmp
rcll
fwait
push
adc
mov
jno
and
inc
mov
outsl
dec
in
jmp
push
mov
and
adc
dec
cltd
sbb
cmp
sbb
xor
cmp
je
cmp
add
and
inc
insb
mov
or
or
jo
in
lock
jle
adc
xor
mov
and
out
jnp
mov
adc
rorl
mov
xchg
shl
dec
pusha
mov
dec
daa
xor
out
js
pop
sbb
jle
sbb
sbb
shrl
in
movsl
pusha
jo
add
mov
xchg
adc
jle
mov
add
adc
push
stc
sub
cmp
add
icebp
push
mov
sbb
in
mov
inc
push
push
add
mov
call
in
pop
pop
pop
and
subl
stos
je
sub
add
or
lods
dec
mov
inc
mov
ret
xchg
xchg
in
ret
pop
mov
jmp
add
addb
rorl
cmp
loope
enter
mov
sbbb
inc
js
fsts
pushf
imul
out
rorb
adc
add
sbb
sbb
mov
sbb
and
aaa
mov
movsl
pop
pop
leave
test
jo
xorl
sbb
jno
pusha
and
fcoml
stc
orl
xor
test
cmc
fcompl
push
cltd
es
and
sbb
or
ret
shlb
jne
adc
adc
dec
lods
cmp
popa
cmp
xchg
or
push
mov
or
jnp
jbe
push
cmpl
and
rolb
call
adc
jne
cmpsb
adc
insb
xor
sub
jo
icebp
inc
sub
add
jne
repnz
mov
add
inc
or
test
add
jecxz
adc
push
bound
pop
jae
mov
or
or
push
cmpsb
mov
insb
xor
jne
loop
adc
inc
andl
xchg
pop
stc
aam
or
mov
push
stc
or
sti
cmp
bound
jo
mov
shrl
cld
cwtl
lods
sub
pop
aam
xchg
aaa
xor
bound
adc
sahf
adc
in
adc
xchg
adc
cwtl
lret
je
pop
pop
xchg
lret
shlb
ret
ljmp
cld
pop
mov
jbe
jle
and
adc
add
or
or
push
mov
pop
push
enter
xor
stc
rorb
xor
orl
dec
clc
dec
jl
adc
decl
cmpl
je
jl
mov
push
sbb
movl
mov
clc
ret
dec
fcmovbe
sbb
popa
and
inc
jg
insb
mov
xor
push
xor
dec
adc
inc
mov
js
xchg
adc
dec
and
sub
repnz
rolb
jle
push
subl
or
pop
movw
sub
faddl
clc
mov
aas
xor
lea
clc
arpl
cmc
push
or
std
fsubrs
lahf
in
clc
pop
movsl
mov
inc
inc
pop
xchg
sbb
mov
dec
add
xchg
and
sub
add
fcomp
push
adcl
jmp
push
test
fidivrl
fs
pop
lea
cmp
jge
dec
push
push
xchg
inc
in
mov
and
jl
ja
jecxz
icebp
lret
inc
adc
sub
xchg
fistpl
inc
shll
dec
mov
rcrl
ret
xor
call
loop
add
dec
pop
pusha
mov
dec
nop
jae
push
and
pop
mov
or
rorb
es
sub
pusha
inc
add
jmp
and
or
push
cmp
pop
pop
cmpsb
or
push
inc
xor
jmp
lret
add
mov
sbb
add
or
test
sub
repnz
mov
add
aam
sbb
sbb
jno
sbb
daa
add
pop
cld
lods
into
push
adc
fnstcw
out
sub
pop
aad
adc
inc
or
push
aas
mov
jle
adc
jns
jbe
popa
add
cmp
inc
scas
xor
dec
es
sbb
pop
cwtl
mov
add
cmp
cmp
mov
loopne
adc
les
cmp
and
inc
adc
add
fld
push
dec
fistpl
add
lea
sub
dec
mov
inc
jno
sub
jmp
mov
test
call
cli
je
cmp
rolb
jmp
nop
sub
and
iret
jne
and
pop
cmpsl
call
cld
mov
aaa
add
dec
jmp
dec
xchg
sbbl
sbb
mov
sub
into
mov
js
or
out
adc
pop
xchg
sbbb
xchg
jmp
mov
cwtl
sbbb
jp
imul
mov
int
into
pop
inc
pop
mov
push
and
addl
cmp
adc
fabs
inc
push
jae
daa
ret
scas
popa
in
sbb
lods
push
iret
call
clc
inc
jb
dec
xlat
dec
mov
sarb
mov
cmp
push
mov
cmp
loopne
push
jb
lea
inc
ja
inc
inc
dec
adc
pop
mov
xchg
je
xchg
xor
xor
sub
add
dec
jl
cmp
jge
das
sub
loope
sbb
jg
and
insl
repz
pop
cltd
jp
shlb
in
cmp
cmpsb
adc
ret
mov
daa
xor
xor
dec
jl
pusha
xchg
jge
nop
pop
or
sub
push
fcmove
add
stc
add
repnz
movsb
insl
push
and
push
nop
or
cli
loopne
cli
xchg
xchg
push
cltd
push
nop
dec
mov
push
xchg
add
dec
jge
lea
xlat
adc
imul
jge
ljmp
xor
mov
add
push
stc
adc
loopne
call
mov
jecxz
out
les
leave
lahf
xor
cld
mov
add
sbb
jle
inc
lods
adc
test
mov
pop
mov
cmc
clc
and
lahf
inc
nop
mov
scas
and
cmpl
jne
mov
idivb
or
cwtl
loopne
insb
cmp
xchg
xchg
cmp
cld
mov
jmp
not
mov
mov
mov
cmp
cs
xchg
mov
test
dec
push
repz
in
in
xor
sub
push
test
and
inc
fldenv
push
sub
lret
inc
pop
lods
lea
add
pop
aam
push
sbb
repz
mov
mov
mov
push
push
movsl
daa
sbb
jae
dec
mov
jmp
pop
adc
mov
adc
sub
test
cwtl
cmpsb
loop
mov
pop
loop,pt
lds
mov
mov
and
int3
decb
pop
bound
mov
dec
adc
imul
movsb
ljmp
and
dec
fimull
aaa
mov
data16
mov
cmovge
call
jb
dec
push
adc
inc
mov
or
push
pop
mov
pop
and
and
pop
or
or
ror
sub
sarl
and
sti
add
dec
pop
pop
dec
cmp
xchg
add
lret
sbb
clc
and
rclb
or
das
add
jg
push
shlb
adc
aaa
sub
pop
test
das
lea
enter
leave
mov
cmpsb
sub
and
push
mov
dec
movsb
sub
inc
mov
dec
pop
add
lea
out
roll
shrb
out
xchg
mov
outsb
sub
out
lret
mov
lds
cmpb
add
rorl
rcrl
loope
loope
icebp
or
icebp
dec
icebp
psllq
mov
cmp
mov
xchg
clc
dec
cmc
nop
push
or
or
adc
out
jmp
jo
aad
mov
add
pop
mov
sub
xorb
mov
repnz
in
dec
test
js
or
roll
lods
inc
je
call
std
call
stc
sub
inc
loopne
movsl
loop
loopne
and
pop
mov
pop
jecxz
sbb
adc
data16
add
jg,pn
inc
push
lret
xchg
mov
test
scas
sbb
push
add
cmpb
inc
movsl
repz
pop
inc
or
lds
or
or
push
sub
mov
test
push
cmp
adc
inc
icebp
daa
jmp
sub
xchg
enter
test
mov
adc
cmp
adc
sbb
and
jg
xchg
adc
and
pop
pop
les
push
jp
sub
and
inc
outsb
sub
cmp
and
and
inc
push
in
cmpsb
and
add
push
sbb
adc
mov
sub
in
sub
ds
or
rorb
or
and
jne
sbb
push
or
sarl
ret
and
ret
orb
divb
mov
or
sbb
push
stc
push
or
cmp
and
add
ja
shrb
xchg
in
sub
jge
or
mov
insb
lea
cmp
push
pop
mov
or
pop
dec
and
ds
pop
sub
cmp
shll
push
mov
pop
cmp
pop
ret
xor
mov
jl
push
test
sbb
dec
jne
pop
ljmp
mov
cwtl
and
or
mov
negl
or
inc
popa
and
xchg
mov
mov
test
dec
jne
das
aas
sub
jmp
cltd
fsubl
jmp
dec
jecxz
and
xchg
add
pushl
cwtl
incb
pop
in
lret
inc
ljmp
stc
stos
lds
inc
add
cmp
lea
cmp
jmp
xor
adc
daa
adc
mov
and
inc
push
sub
scas
daa
cmpsb
arpl
lods
xchg
xchg
cmpsl
add
xor
push
test
enter
jg
repz
inc
cmp
jg
ljmp
filds
mov
clc
decl
adc
mov
ret
loop
mov
ret
pop
dec
mov
jne
rolb
adc
divl
mov
jmp
mov
sbb
dec
cmp
imul
mov
inc
not
loopne
shlb
out
and
or
cmp
sbb
add
out
test
and
adc
sbb
pop
jl
pop
and
pop
sbb
lock
cli
dec
jge
xchg
std
repnz
int3
jo
fsubrl
or
jge
sbbl
pusha
or
setb
jmp
add
adc
or
jne
inc
and
cltd
addr16
push
shlb
adc
sahf
and
push
pushf
adc
sarb
mov
pop
mov
sub
cs
bound
pop
adc
sarl
sarb
inc
or
inc
adc
testl
push
cmpsl
pop
popa
cmp
sbb
add
rorb
lock
cmc
in
cmp
lahf
push
fsubs
shll
shlb
dec
popa
sub
dec
dec
in
movsb
dec
mov
pop
int3
cs
mov
inc
inc
mov
loopne
push
inc
int3
inc
cld
ljmp
cmp
or
or
xchg
cmp
push
xor
xchg
mov
jge
mov
sbb
ret
sub
js
pop
push
xor
push
call
fs
sti
nop
mov
fwait
dec
in
pushf
cld
and
cld
push
je
xor
add
xor
jge
lock
sbb
cmp
scas
xchg
add
cli
dec
adc
sbbl
cmp
scas
fsubr
pop
ljmp
lods
jo
data16
int3
outsb
in
mov
roll
dec
xor
mov
test
in
dec
push
in
adc
mov
sbb
movsb
or
bound
out
test
xchg
dec
add
cmp
test
push
lock
push
or
add
push
push
add
add
or
dec
dec
nop
cmp
jl
inc
call
push
mov
mov
xchg
ret
ret
sbb
out
mov
dec
and
push
push
adc
lock
decl
jne
jg
or
jae
adc
pop
inc
dec
pop
gs
loope
loopne
rcrl
sbb
jno
pop
cltd
adc
dec
cmpl
in
out
clc
dec
pop
icebp
inc
jl
shlb
in
sbb
mov
cmpl
push
mov
test
fdivrl
mov
jge
sar
sub
jne
fstps
mov
xor
xchg
sbb
mov
adc
ret
pop
sub
jae
mov
pop
xchg
sbb
xchg
adc
lahf
xchg
mov
add
ret
loopne
fistpll
popf
jecxz
jmp
popf
push
sub
adc
pop
jne
ret
ds
xor
ljmp
pop
push
adc
pushf
call
or
out
adc
mov
pop
lods
jmp
cmpsl
je
xchg
or
aas
adc
push
adc
jmp
mov
sbb
rorb
js
add
jne
cmp
mov
sub
testl
in
pop
mov
add
ficomps
pop
or
push
cmp
add
inc
rolb
rcll
cmp
std
push
or
push
xor
outsl
xor
jle
dec
sbb
pushf
es
jmp
idivb
aam
push
add
dec
add
sbb
add
sub
dec
sub
inc
lods
pusha
test
inc
mov
or
daa
and
movsb
mov
imul
outsb
pop
insb
xor
cs
shll
mov
outsl
push
outsb
addr16
popa
out
dec
inc
insl
aad
adc
mov
push
mov
lret
sub
je
and
fs
add
or
push
or
and
in
cmp
lea
cmp
mov
dec
mov
and
xchg
sbb
test
cmpsb
inc
sbb
mov
repnz
inc
mov
hlt
movsb
test
or
push
sub
mov
push
and
bound
popa
cwtl
dec
push
enter
add
mov
testb
loop
jge
repz
or
and
roll
xchg
push
xchg
mov
jmp
dec
cmpb
popa
push
or
call
or
dec
inc
inc
or
lock
insb
rcpps
shrb
push
test
repnz
push
adc
or
dec
cmp
repz
mov
pop
or
or
jge
es
push
int3
push
push
add
je
popa
jb
cmp
mov
aas
arpl
jae
xor
lods
cmp
int
dec
pushf
addr16
outsl
cmc
addb
mov
or
cmp
xlat
lret
fcoml
mov
mov
and
push
pop
sbb
lods
jmp
sub
pop
or
pop
gs
sub
arpl
sub
out
xchg
decb
sub
cmp
mov
pop
clc
sbb
cmp
movsb
lcall
cmpsb
jp
mov
mov
push
iret
repnz
repnz
test
lods
aas
xchg
mov
shrb
mov
cmp
decl
mov
insl
mov
cmp
daa
jne
adc
sub
ljmp
xor
cld
add
lret
sub
rcrl
or
pusha
out
inc
call
add
psubsw
pushf
inc
adc
hlt
call
repz
jns
sbb
hlt
pop
ret
scas
cmovle
add
mov
pop
leave
xor
and
pusha
push
cmp
jns
push
pop
or
dec
adc
push
rorb
add
inc
sbb
xor
mov
sbb
mov
adc
lea
shlb
out
ja
aas
into
movsl
lock
inc
popf
sbb
cmp
lcall
sub
mov
les
xchg
adc
mov
xlat
sub
pop
mov
leave
rcrb
xchg
fdivs
cmp
ja
mov
xor
jmp
and
add
cld
ja
rcr
shr
or
lret
loopne
sbb
inc
or
aas
mov
jp
fs
lret
dec
add
jmp
adc
dec
es
push
add
cmp
cmp
test
jb
add
add
pop
dec
xor
test
sbb
dec
or
test
add
add
jb
lea
or
aad
nop
fsubl
lock
lea
test
enter
ss
adc
add
push
in
ss
cld
clc
test
leave
mov
mov
add
roll
jae
loope
and
xor
mov
cmp
and
jne
xchg
mov
int
out
outsb
add
loope
or
mov
scas
cs
lea
dec
cld
test
and
adc
inc
popf
jae
or
mov
or
cmp
xchg
inc
and
pop
sub
ret
xor
xor
adc
addr16
out
push
jne
test
push
jb
in
and
je
cwtl
mov
or
adc
pop
mov
jbe
dec
or
sub
cmp
enter
mov
cmp
pop
adc
push
adc
xor
dec
adc
pop
cmovnp
ds
or
jmp
mov
fcmovbe
int3
in
or
mov
fists
stc
cmpsb
stc
xchg
nop
lods
icebp
xchg
push
aaa
push
xorb
orl
inc
xchg
inc
lods
sbb
xor
movsb
adc
jo
movsb
xor
sub
pop
cmpsb
ds
movsb
xlat
sub
das
cmp
push
inc
fidivs
mov
stos
cmp
dec
sarl
jo
repz
out
add
dec
jg
sub
fcmovb
pop
mov
mov
and
xor
imul
mov
fsubr
inc
mov
pop
shl
push
cli
mov
mov
mov
sbb
xchg
es
inc
je
inc
lret
les
mov
push
jmp
cmpsl
push
add
and
dec
jo
adc
inc
call
in
or
mov
pusha
add
pop
clc
dec
and
pusha
lds
jmp
add
in
cmp
mov
mov
test
xchg
in
sub
sub
xor
data16
and
jb
call
add
cmpsl
ret
add
cwtl
or
out
cmpb
adc
call
add
or
dec
mov
and
cmp
inc
adc
inc
cmp
adc
scas
add
jmp
jae
or
and
adc
loopne
pusha
daa
mov
push
and
xorb
cmp
cmp
cmc
loop
xchg
hlt
mov
popa
adc
dec
adc
mov
lock
mov
or
adc
mov
andb
aas
loopne
je
ret
mov
adc
mov
jnp
cld
andb
mov
mov
lods
sub
sub
adc
test
xchg
shlb
xor
cmpb
or
bound
pop
cltd
and
cmp
cmovs
inc
push
dec
std
das
addr16
daa
pop
push
and
outsl
enter
dec
out
pushf
xor
js
push
inc
jo
test
jo
xchg
xor
add
pop
xor
std
xor
nop
add
or
push
gs
cmp
mov
push
inc
jb
jns
ret
sub
shll
add
add
sub
or
bnd
jae
inc
push
popaw
int3
insb
je
dec
sti
fmuls
addr16
popa
mov
jbe
lahf
inc
dec
sahf
inc
gs
or
push
lds
insb
sbb
xorb
adc
or
xor
mov
sahf
inc
vmread
imul
ja
nop
sub
clts
andps
notl
cltd
cmp
push
add
xchg
bound
or
mov
and
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
int3
xchg
mov
inc
mov
lods
cmpsl
adc
adc
add
add
ljmp
dec
and
shrb
pop
push
test
sub
in
ja
in
jb
cmp
andb
xchg
js
je
jo
insb
cmp
mov
and
enter
jb
cmp
inc
mov
and
cmp
xor
xor
cmp
sbb
mov
and
sbb
adc
adc
cmp
sbb
mov
sbb
inc
xchg
and
xchg
hlt
enter
jb
cmp
sbb
mov
and
xchg
aam
shl
int3
jb
cmp
sbb
mov
mov
lods
enter
jb
cmp
and
in
jb
cmp
mov
and
insb
enter
jb
cmp
mov
and
dec
enter
jb
cmp
cmp
xchg
sub
sub
and
and
sbb
sbb
mov
xchg
int3
jb
cmp
and
in
jb
cmp
and
in
jb
cmp
mov
and
insb
enter
jb
cmp
mov
and
dec
enter
jb
cmp
cmp
xchg
sub
sub
and
and
sbb
sbb
xchg
or
or
add
or
cld
xchg
xor
sbb
mov
and
xchg
call
jb
cmp
sbb
inc
cwtl
and
enter
jb
mov
inc
push
and
pop
enter
jb
cmp
sbb
mov
and
sub
and
and
cmp
sbb
mov
and
or
add
adc
cld
xchg
clc
cltd
or
sbb
mov
and
xchg
in
loopne
fdivl
cmp
sbb
mov
and
xchg
fsubp
xchg
mov
jb
cmp
and
in
jb
cmp
and
in
jb
cmp
mov
and
pop
enter
jb
cmp
mov
and
cmp
cmp
xor
xor
sub
sub
pusha
fs
sbb
adc
adc
or
or
cld
xchg
xor
sbb
mov
and
xchg
call
jb
cmp
sbb
mov
and
xchg
enter
jno
mov
cmp
test
movsb
xchg
mov
jb
cmp
mov
test
js
je
jo
insb
mov
and
enter
jb
cmp
dec
mov
and
enter
jb
cmp
sbb
mov
and
and
sbb
sbb
cmp
sbb
mov
and
inc
adc
xchg
mov
in
jb
cmp
sbb
mov
and
xchg
fmul
fsub
aam
sarb
int3
sbb
mov
sbb
mov
rol
or
adc
ret
push
int3
mov
scas
nop
les
cld
hlt
mov
sub
mov
xor
add
scas
sbb
or
mov
mov
movd
inc
cmc
xlat
repz
sti
pop
or
mov
fdivs
lahf
push
inc
mov
sub
repz
pop
mov
cwtl
gs
out
and
cld
mov
cwtl
repnz
or
and
sbb
and
and
sub
mov
sbb
push
sbb
mov
and
nop
pop
pop
mov
push
push
push
call
dec
mov
push
pop
inc
push
mov
or
xor
clc
mov
inc
inc
les
iret
popl
mov
or
pop
scas
dec
ljmp
mov
fidivs
inc
pop
jl
data16
jmp
mov
aas
and
pop
push
inc
or
cmpl
and
popf
incl
gs
outsl
rdtsc
and
push
push
dec
inc
lds
adc
test
xor
adc
adc
dec
jmp
and
xchg
adc
dec
push
push
mov
jmp
arpl
inc
cmc
sbb
cmp
sub
dec
je
sbb
cmp
inc
js
pusha
push
inc
js
sarb
or
and
xchg
repz
jb
cmp
sbb
mov
and
xchg
sti
enter
jb
cmp
jb
cmp
sbb
mov
and
xchg
in
out
out
call
mov
and
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
aad
in
jb
cmp
sbb
mov
and
xchg
fsubp
fbstp
cmp
sbb
mov
and
xchg
vshufps
jb
cmp
sbb
mov
and
xchg
int
into
in
jb
cmp
mov
mov
mov
mov
mov
mov
mov
and
mov
sbb
mov
and
cmpsl
jb
cmp
stos
and
jno
sbb
xorb
sub
pop
pop
sbb
add
mov
fucomi
into
push
push
mov
in
and
or
arpl
je
sbb
clc
xchg
pop
dec
cmovo
je
mov
imul
push
into
es
mov
sub
andl
pop
mov
sub
jo
nop
rcrb
cmp
inc
mov
jne
pusha
dec
gs
outsl
and
sbb
mov
mov
inc
dec
outsb
outsb
mov
mov
pop
and
jnp
or
or
int3
pop
in
int3
mov
test
or
test
jle
inc
pusha
jne
or
push
nop
mov
test
test
inc
add
inc
jns
cmpl
test
add
popa
outsb
xor
js
lcall
or
jbe
adc
dec
je
pop
testb
sub
inc
mov
hlt
push
enter
mov
mov
jbe
add
dec
jo
bnd
mov
inc
cmp
fs
mov
sarb
push
hlt
test
and
pop
fs
or
push
outsb
fs
inc
nop
dec
jp
pop
lcall
pusha
xchg
dec
ss
test
mov
pop
cmp
jae
lea
or
add
mov
pop
pop
testb
int3
test
pop
inc
shll
mov
mov
mov
mov
cltd
sub
es
jb
xchg
insb
incb
jg
adc
mov
ja
push
inc
js
arpl
push
nop
jo
pop
fs
leave
or
jo
and
out
and
pop
fs
adc
sbb
in
mov
inc
inc
pop
test
lds
and
inc
popa
and
fs
enter
mov
sbb
test
jb
jae
mov
enter
lods
push
push
cmp
jle
imul
movsb
push
stos
push
movsl
adc
mov
adc
andb
gs
sbb
adcl
add
rol
dec
xor
repnz
hlt
sub
and
cmp
call
add
dec
jg
add
scas
adc
rcrl
push
jge
jb
popa
fs
rolb
adc
add
inc
cltd
fsubl
or
dec
sbb
inc
lock
les
cmp
sub
addb
mov
jne
les
mov
jnp
sbb
push
loopne
jno
cmp
xor
mov
add
xor
adc
roll
and
dec
jne
inc
aas
push
push
fistps
mov
pop
push
insl
inc
loop
push
outsb
std
adc
sahf
jnp
jp
cmp
ret
or
div
push
sbb
jle
add
adc
and
mov
cld
mov
xor
sub
xchg
jns
dec
adc
and
lods
and
jmp
cmp
outsl
xor
mov
push
push
outsl
ja
or
fs
inc
pusha
or
mov
or
or
sbb
rcl
mov
mov
mov
inc
dec
xor
cmpsb
push
push
mov
and
movsb
sub
mov
loopne
cli
mov
push
hlt
push
fcmovnbe
ljmp
add
addl
sub
and
sub
jmp
nop
cmp
and
pop
add
dec
or
test
sarl
pop
jbe
cs
repz
inc
lcall
pop
lahf
pop
mov
orb
enter
or
cmpsl
jne
cld
dec
mov
sub
push
fsubrs
mov
pop
jle
lcall
mov
test
or
push
and
sti
je
loop
ret
push
xlat
out
pop
je
ret
jne
xor
pop
popf
mov
ljmp
pop
or
aad
cs
mov
insb
pop
dec
sarb
or
pop
jl
mov
ja
in
inc
sbb
repnz
aam
add
rorl
mov
or
mov
pop
xchg
and
aam
sbb
xchg
out
push
shl
fldenv
mov
aaa
mov
lods
mov
fisttpll
lock
inc
cmp
repz
andb
and
leave
push
jge
pop
scas
mov
aaa
dec
clc
insb
into
sbb
sarl
push
xor
insb
mov
inc
push
pop
push
mov
mov
nop
pop
test
imul
adc
repz
and
push
add
sub
cmp
ja
nop
adc
adc
cmp
sub
pop
mov
push
ret
ljmp
pushaw
or
sbb
mov
add
jne
mov
fistps
leave
cwtl
sbb
sarb
fcoms
sub
ret
mov
push
xor
aas
div
out
xor
cli
cmp
ret
adc
mov
add
ljmp
jbe
adc
shll
add
jne
insl
add
out
in
adc
leave
push
pusha
leave
repnz
lcall
rclb
testl
pushl
int3
xor
and
push
sahf
sub
pop
mov
mov
xor
fldcw
push
sarl
cmpw
cli
sub
adc
mov
inc
inc
daa
sbb
mov
iret
mov
roll
roll
add
sub
add
clc
dec
out
cmc
xchg
fdivr
mov
xor
fdivs
roll
addl
fcom
fstsw
sahf
jae
loope
insb
add
cmp
ret
cmp
cmp
adc
out
jmp
out
cmp
out
enter
or
int3
cmp
dec
pop
jecxz
jp
cli
fbstp
inc
and
mov
enter
and
hlt
vpor
lock
mov
sub
push
mov
clc
daa
test
xchg
bound
sub
push
lods
fidivl
aaa
dec
xor
fdivs
xor
xchg
push
and
pop
cmp
nop
xchg
inc
js
or
cmp
mov
ret
jle
call
or
xchg
xor
cmc
mov
xchg
int3
mov
dec
lods
fmul
add
aam
scas
aam
out
adc
test
incl
xchg
repnz
jl
inc
outsb
and
adc
lret
arpl
cmp
mov
pop
cmp
jne
in
mov
pop
and
repz
clc
icebp
pusha
jno
outsb
and
fldt
lock
jecxz
setne
jmp
or
jbe
push
push
add
dec
or
jbe
pop
push
xor
movb
into
and
xchg
test
ret
inc
rorb
enter
xor
nop
icebp
gs
js
fistpl
rol
adc
js
adc
mov
pop
or
xor
mov
sub
inc
adc
clc
or
aam
add
pop
add
add
loop
dec
fldcw
movsl
xor
outsl
sbbb
add
adc
sub
cmc
enter
lea
adc
fs
or
int3
adc
mov
rolb
or
xchg
push
int
cs
jg
jns
cmp
or
dec
jp
mov
mov
pop
cmpsl
sti
mov
sub
fiaddl
or
stos
sbb
push
push
cld
test
into
or
test
mov
adc
push
push
clc
pushl
or
pop
adc
jge
hlt
cli
enter
sub
fisttps
loop
hlt
adc
shrb
test
push
lcall
sub
or
fs
mov
pop
sub
pop
std
xorb
stc
push
push
jmp
xor
call
sahf
aad
cmpsb
fidivrs
cld
add
sub
and
test
dec
nop
cld
push
mov
dec
loope
push
dec
xor
jl
pop
nop
insb
and
push
mov
jns
repnz
mov
cmp
xchg
ret
lret
cwtl
icebp
pop
cmp
jp
jl
mov
or
push
pop
push
dec
push
enter
gs
jo
call
add
push
enter
clc
ds
push
ds
enter
insl
clc
fcomps
out
data16
sbb
push
fstpt
push
out
lods
sbb
mov
or
es
es
lock
xchg
sti
and
out
pop
nop
idiv
cmc
daa
shll
mov
mov
xlat
ret
lods
sbb
lea
adc
xchg
jecxz,pn
inc
mov
dec
push
push
es
not
jg
sbb
push
xchg
scas
pop
repz
movsb
sbb
ret
push
jns
cmp
lret
dec
test
jno
adcl
sub
pop
sub
ficomps
jge
rcrl
subb
pop
pushf
shl
cmp
pop
adc
movsb
aam
repz
lret
mov
int
push
mov
and
aas
clc
pop
shl
cmpsb
mov
jbe
cmp
rorb
and
fnsave
pcmpeqw
fistpl
or
mov
or
adc
inc
movsl
inc
stc
pop
dec
test
dec
or
aaa
add
loopne
shl
repnz
pop
mov
adc
shr
mov
mov
mov
xchg
fists
shrl
jbe
push
lea
dec
lods
daa
pop
adc
enter
cld
pop
inc
clc
in
xchg
mov
push
daa
clc
ja
add
push
ret
fldl
outsl
stos
or
scas
fimuls
ljmp
inc
pop
pop
jl
das
into
adc
jnp
xchg
jns
dec
cmp
adc
lret
das
jbe
mov
pop
jbe
mov
dec
push
ds
cmp
jne
sarl
lret
push
inc
xor
ja
and
jo
ljmp
fs
pushf
mov
pushf
sub
pusha
mov
pushf
cmp
mov
sbb
and
mov
xor
loop
push
jg
jb
push
xchg
adc
sub
add
lcall
hlt
mov
or
lods
cmp
and
jne
shll
andl
push
decb
out
sub
arpl
repz
xor
and
lods
jmp
loope
loopne
inc
mov
cmp
sub
push
mov
xor
pop
fs
mov
sbb
mov
cmpb
or
lret
adc
movsb
xchg
or
mov
in
sub
test
jge
add
aaa
adc
rcrb
mov
sahf
sahf
sbb
mov
xchg
fcomps
jb
push
cmp
imul
movzbl
xor
ret
incl
adcb
rcrb
cmp
dec
jg
insb
call
decb
cmpb
jne
push
je
or
and
push
push
pop
adc
sbb
push
pushf
push
add
and
xchg
sub
or
notl
les
and
jno
cmp
arpl
mov
aas
adc
inc
ja
les
popa
dec
fsubrs
shll
push
lea
mov
fsubl
sub
je
sahf
rorb
or
sbb
test
and
adc
fs
cmpsl
pop
pop
and
and
and
shrl
sbb
pop
stc
push
popf
test
ret
setno
cmpw
jbe
mov
daa
imul
cmp
jmp
xor
and
inc
sub
jmp
adc
cwtl
inc
int3
ja
add
jne
push
and
adc
movsb
push
cld
clc
outsl
pop
jp
bnd
movsl
sbb
push
cmp
or
jg
scas
cmp
ja
arpl
or
adc
xchg
push
mov
sub
push
int
inc
inc
push
leave
mov
xchg
movsl
sbb
and
mov
add
je
xchg
jo
fistpl
stc
inc
fnstsw
jmp
push
inc
ja
in
cmovbe
adc
add
dec
mov
dec
push
mov
mov
mov
cmp
jbe
and
jne
sbb
adc
adc
add
mov
inc
rcpps
jno
xchg
mov
inc
iret
xchg
movsl
adc
into
xor
cli
xchg
ret
mov
cwtl
lcallw
mov
out
sahf
xor
scas
daa
xchg
imulb
sti
imul
push
push
pop
adc
pushf
cmp
sub
pusha
incl
add
mov
ja
inc
cli
in
xor
daa
inc
inc
and
adc
inc
push
xchg
daa
fwait
dec
fmull
jmp
inc
mov
in
lods
repz
cmp
cmovg
inc
insb
dec
cld
lea
pop
sub
call
pop
jo
inc
fstpt
ret
jmp
add
div
ja
mov
pop
in
push
inc
cmp
fdivs
push
xchg
sub
xchg
push
adc
fs
clc
imulb
dec
in
jmp
add
idivl
in
or
in
mov
stos
xchg
push
mov
ret
mov
push
xor
inc
dec
xchg
xchg
inc
leave
jg
dec
pop
mov
stos
cmp
sar
pop
sub
cmpsb
xchg
or
into
sti
test
subb
and
test
repnz
mov
and
add
fwait
adc
mov
cwtl
and
daa
rorb
add
movsb
ljmp
add
jge
movzwl
xor
add
lea
call
dec
fcoml
cltd
jp
out
jmp
test
shrl
pusha
lods
add
or
or
mov
jle
cwtl
out
lea
or
sbb
decl
dec
movsl
cld
popa
iret
jmp
aaa
push
pop
xchg
arpl
and
sbb
dec
inc
popf
inc
or
mov
sub
aaa
xor
mov
dec
aam
dec
mov
or
sbb
sbb
sbb
dec
stos
cmpb
dec
cmp
fstps
jmp
sbb
int3
inc
lea
sub
clc
or
adc
mov
clc
sub
inc
pushf
jg
push
movsb
pop
addb
loope
dec
push
push
jns
mov
xchg
mov
add
stos
leave
mov
inc
mov
push
mov
sub
lock
adc
add
dec
xchg
mov
push
cs
add
enter
div
adc
jecxz
push
orb
dec
jne
hlt
mov
xchg
pop
mov
hlt
mov
sahf
xchg
add
repnz
inc
jne
das
lahf
cmp
test
jb
adc
sbb
repnz
add
cmp
cwtl
je
mov
fwait
push
xchg
mov
xchg
test
shlb
push
in
and
in
push
insl
push
or
inc
jbe
lar
loope
push
jo
hlt
mov
pop
add
and
inc
add
fstpt
outsl
and
frstor
sub
sub
sub
add
dec
sub
in
sub
cs
insl
adc
mov
adc
xor
jne
fnsave
aam
or
mov
js
jo
test
test
sahf
xchg
gs
in
movsl
or
shlb
and
push
cmp
testw
adc
cmpl
pop
sbb
inc
outsb
sbb
lock
fldt
sub
rclb
mov
clc
xlat
call
cmpsl
add
loope
sub
ret
push
or
mov
fs
clc
fwait
jl
je
into
mov
je
fidivl
pop
fbstp
lea
add
adc
add
call
pcmpgtd
sahf
push
jmp
shrb
or
xor
jmp
sub
or
daa
cmpb
icebp
and
push
dec
js
adc
in
jmp
data16
or
adc
sahf
nop
and
xor
cld
push
or
test
ljmp
add
rorb
jb
bound
add
adc
or
dec
add
mov
test
jns
popf
rclb
mov
or
or
xlat
test
mov
add
pop
mov
sub
add
repnz
add
inc
and
popa
push
in
insl
mov
mov
or
sbb
xchg
inc
and
les
mov
sub
jne
push
iret
sbb
dec
adcl
xor
and
cmove
add
enter
call
imull
jmp
cmp
mov
test
add
xlat
jo
mov
fwait
dec
fnstcw
mov
inc
clc
out
xchg
aam
mov
sub
xlat
orb
jne
inc
mov
mov
mov
cmp
jne
inc
pop
cmp
icebp
je
es
add
adcb
inc
enter
cs
shrb
sub
push
add
imul
fistpll
jmp
fucomi
ds
in
jne
mov
outsl
movsl
jecxz
ret
and
nop
addr16
push
and
popa
ret
or
cld
sub
cld
or
jae
fimull
into
push
adc
jmp
sbb
mov
cld
daa
mov
dec
xchg
and
jns
cmp
push
nop
subl
jb
sbb
add
and
pop
sahf
dec
dec
invd
lea
js
test
xchg
cwtl
movsb
xor
pop
jo
aaa
xor
push
mov
xchg
or
out
pop
bound
pop
pop
lahf
push
xchg
test
xchg
aam
movsb
mov
add
and
push
fwait
clc
test
call
loop
add
pushf
pop
mov
fildl
xchg
inc
adcb
sub
in
adc
xor
or
add
mov
xchg
mov
pop
gs
xchg
clc
dec
hlt
or
dec
mov
arpl
cli
cmp
inc
add
or
or
push
test
xor
sub
or
shl
enter
rolb
enter
call
leave
dec
fildl
lcall
sbb
adc
jnp
mov
lret
movsb
dec
std
push
jl
push
inc
data16
dec
or
jae
or
mov
sbb
and
jmp
mov
das
inc
cmp
adc
push
or
hlt
sbb
lock
mov
add
lret
ret
mov
and
dec
and
cmpl
pop
cmp
cmpsb
insb
enter
and
js
and
or
shlb
sbb
mov
icebp
pop
je
sbb
sbb
or
mov
js
lea
sahf
xor
sub
jge
add
addb
xchg
ja
mov
or
sti
sbb
movl
ja
sub
push
adc
incb
jne
mov
mov
mov
imul
rcll
fwait
out
repnz
lock
ss
jle
stc
cwtl
or
jne
test
movsb
mov
mov
clc
xchg
pop
adc
stc
jl
mov
addb
jl
sub
stos
into
push
xchg
call
nop
pushf
in
test
xor
jb
lret
mov
hlt
or
hlt
mov
add
and
lea
inc
clc
insb
je
mov
mov
jo
jge
icebp
mov
sbb
in
dec
adc
in
ret
cmp
inc
enter
xchg
pop
jle
add
fdivr
dec
int
cmpl
ds
xor
push
sub
stos
test
mov
and
call
add
repnz
pop
fldcw
pop
ljmp
lods
and
ret
push
outsb
xor
and
dec
fwait
and
xchg
cmp
ss
adc
and
inc
sbb
clc
add
mull
and
hlt
hlt
ret
dec
mov
icebp
cmpsl
ret
out
bound
imul
fsubr
cld
dec
mov
inc
mov
xor
jl
dec
inc
push
push
pop
xchg
in
push
popf
or
dec
mov
fstpl
cli
push
push
pop
ds
jnp
inc
adc
cmp
fadd
fstpl
push
out
xchg
and
jb
lock
cmpsb
dec
adcl
addb
push
mov
enter
popf
clc
lds
or
sbb
cltd
xchg
sbb
inc
lea
lret
clc
popa
rolb
sbb
jl
je
test
shrb
mov
and
lret
stc
in
push
push
xor
inc
negl
dec
in
aam
fsubrs
add
or
mov
pop
sar
jmp
mov
add
mov
xor
stos
or
mov
mov
mov
js
push
cmpb
in
push
jne
repnz
dec
rcrb
jo
push
into
sbb
push
lock
aaa
repnz
into
fcoms
movb
add
jecxz
xor
pop
in
aas
nop
out
call
in
jecxz
out
and
incb
mov
fiaddl
inc
orl
sub
adc
enterw
in
xchg
or
adc
xor
and
insl
pop
xor
dec
push
in
sub
mov
sbb
xor
and
mov
xchg
mov
dec
das
mov
ja
stc
pop
sbb
or
or
mov
mov
enter
xor
cmp
jne
dec
add
fists
cmp
pop
aas
jle
mov
mov
loop
lcall
push
mov
sbb
sub
inc
sbb
pusha
ljmp
adcb
imul
in
add
int3
cmp
stc
or
in
push
pushf
bound
push
mov
jg
or
mov
jmp
mov
jbe
je
xor
jne
push
and
cmpb
in
push
mov
enter
push
mov
or
test
pushf
jns
pop
mov
sbb
fnstenv
adc
cmc
ja
push
fcoml
sbb
xchg
push
sbb
inc
mov
out
push
sub
jl
adcb
and
xchg
sbb
or
adc
cli
fs
loop
push
in
or
mov
jae
push
popa
add
mov
adc
or
mov
mov
adc
mov
push
add
push
mov
mov
jne,pt
sbb
mov
les
push
push
push
cmp
xchg
ret
sbbb
adcb
add
and
dec
rorb
cmc
std
or
addr16
or
add
mov
push
or
test
add
outsb
dec
add
or
movsb
or
movsl
adc
and
mov
cmpb
pop
or
pop
lret
movb
dec
repnz
test
and
mov
dec
ret
mov
pop
scas
incl
dec
dec
rorb
imul
and
sbb
popf
hlt
insl
hlt
sub
xor
sub
cwtl
sub
test
adc
mov
sbb
and
pop
daa
fiadds
push
insl
jmp
dec
movsl
gs
sub
or
loopne
sarb
daa
pop
inc
and
mov
push
xor
nop
repnz
sti
fisubs
loope
out
jne
cld
xor
xchg
or
dec
jmp
js
dec
push
addl
jnp
loopne
push
arpl
jp
inc
pop
sbb
push
xor
pop
push
popa
jecxz
jae
clc
pusha
clc
push
xor
mov
mov
jl
rolb
sub
sbb
adc
push
add
adc
push
loope
in
mov
jl
daa
test
popa
movsl
icebp
add
ljmp
push
push
jne
sbb
out
jbe
add
sti
xor
inc
or
imul
dec
es
iret
data16
xor
fs
inc
fdivs
clc
out
in
push
add
mov
jns
mov
in
aad
mov
dec
insb
pop
sub
ljmp
inc
bound
add
popa
mov
xchg
mov
add
add
jae
cmpsb
out
cwtl
and
jmp
push
adc
aam
mov
push
cmp
inc
inc
fsubrl
int
inc
out
roll
and
into
call
cmpsb
fidivrl
clc
adc
dec
out
push
into
cmp
push
dec
xchg
add
mov
mov
push
enter
je
scas
and
pmullw
retw
leave
or
add
out
enter
das
movsl
add
sbb
push
cld
xchg
cld
dec
and
cmp
pop
adc
adc
or
dec
lea
cli
clc
outsb
aas
test
cmpsb
inc
mov
repz
xchg
out
jno
loopne
sbb
das
push
idivl
lea
mov
add
or
inc
clc
dec
xor
gs
adc
ds
xchg
inc
ret
popa
cmp
or
mov
dec
loop
xchg
icebp
mov
mov
xchg
or
js
sar
and
cltd
in
aaa
adc
xchg
je
out
sub
pop
popf
lret
cwtl
cmp
dec
jg
mov
pop
mov
test
sahf
jne
iret
dec
idivl
repnz
push
test
xor
imul
pop
mov
sarb
push
pop
idivb
add
ret
push
adc
shrb
and
and
int
cmpb
jle
mov
dec
or
rorl
sbb
mov
fnstenv
test
mov
repnz
shrb
cmp
mov
push
ret
nop
xchg
push
dec
in
and
or
add
push
mov
in
mov
stos
jle
lods
adc
jo
sub
mov
mov
in
mov
fimuls
pop
jl
adc
xor
cmp
and
idiv
cmp
nop
mov
mov
addl
fdivs
dec
cmp
pop
mov
pop
push
jmp
mov
inc
sbb
imul
lock
inc
lods
pop
sbb
jle
ffreep
aas
mov
sub
imul
or
add
jmp
or
cmpsb
mov
mov
ret
call
mov
push
cmp
mov
mov
adc
mov
jmp
cwtl
pop
or
pop
xor
imul
imul
sbb
mov
das
cmp
cmp
sti
arpl
jg
jno
pop
adc
call
sub
add
add
stc
imul
in
fdivrs
cmpl
cld
sbb
adc
pop
mov
inc
push
js
movsb
xor
xchg
fdivs
mov
mov
push
repz
ret
jge
push
xchg
call
sub
fwait
aas
in
and
stos
pop
mov
jl
stos
sbb
es
das
cwtl
xlat
pushf
dec
xor
test
or
push
mov
nop
loopne
lahf
icebp
dec
or
lcall
inc
pushf
js
mov
add
mov
fucomip
lahf
or
mov
ret
cwtl
push
lcall
add
cmovb
fwait
lods
pop
and
enter
repnz
pop
sbb
and
jmp
mov
inc
sbb
or
mov
sbb
inc
imul
ja
dec
hlt
xchg
movups
sub
ss
bnd
sbb
pop
test
inc
mov
dec
lret
scas
push
test
enter
int3
pop
sub
jmp
cmpb
ja
call
lock
add
sub
push
mov
adc
push
out
adc
adc
jns
faddl
jbe
cmpl
aaa
jle
and
jmp
xor
insb
xchg
nop
notb
jne
xchg
mov
mov
dec
ja
js
or
push
enter
adc
mov
adc
cmc
mov
hlt
mov
or
andb
imul
cmp
fdiv
adc
xor
gs
push
fcompl
lret
adc
sub
push
fsub
sub
mov
test
cli
pop
push
out
aaa
cmpsb
les
mul
movsl
mov
xchg
inc
add
lret
ret
jnp
xchg
gs
add
jo
lock
pop
adc
loope
in
or
adc
shll
push
mov
dec
adc
je
add
sub
mov
shlb
loopne
inc
and
or
enter
xor
push
xchg
pop
or
or
scas
data16
lods
test
flds
adc
sub
fistpll
inc
and
lea
mov
clc
and
data16
and
inc
mov
sbb
pop
add
pop
ds
fistps
or
add
and
adc
push
or
pop
xor
fs
fistpl
out
adc
mov
and
and
out
push
mov
lret
mov
mov
ds
cmp
pop
das
mov
out
add
jge
xchg
dec
adc
sarl
lahf
mov
cmp
mov
es
addl
dec
mov
test
jb
getsec
fsubrl
or
aad
popf
in
iret
add
push
fisubrl
mov
push
sub
push
addps
add
push
pushf
jmp
outsb
and
rolb
orb
jb
or
daa
lret
xchg
jnp
and
dec
pop
cltd
lods
sar
sub
fstpl
jmp
call
xchg
adc
mov
js
rorl
jmp
fcmovnb
or
out
cltd
lahf
insb
and
fprem
and
mov
popa
inc
add
add
std
push
int
mov
clc
shlb
leave
mov
ljmp
mov
in
je
es
push
push
add
mov
subl
sahf
adc
fmuls
adc
or
ficoml
mov
rorl
inc
inc
dec
add
loopne
test
dec
mov
inc
lock
or
adc
jne
scas
popa
adc
ja
and
pop
pop
add
cmp
push
add
push
jno
inc
mov
dec
in
pop
jno
dec
inc
or
mov
push
out
mov
pop
or
sub
ss
mov
push
test
pop
mov
adcb
cwtl
cmpsb
jmp
ret
jle
je
adc
aas
lock
in
dec
mov
stc
pop
inc
push
jge
pop
loope
xchg
mov
call
sbb
scas
mov
add
push
pop
pop
inc
mov
call
jbe
pop
out
cmp
mov
in
popa
and
sub
imul
mov
fiadds
cmp
add
mov
cmpsb
fimuls
bound
cltd
dec
mov
add
push
add
jne
push
pop
sub
stos
bound
mov
push
fisttps
pushf
mov
mov
cmp
jo
jl
movl
jb
pushf
or
sub
fld
sub
lret
daa
pop
xor
add
inc
rcrl
mov
fsubs
bound
test
pop
push
fld
xchg
cmp
int
jle
nop
test
shll
je
pop
push
sbb
popa
cs
sbb
sahf
inc
lock
push
popa
add
inc
inc
inc
mov
xchg
mov
orl
dec
mov
ds
stos
cwtl
adc
adc
sub
push
ljmp
xor
popa
pop
je
add
nop
aaa
enter
add
test
mov
xchg
pushf
mov
in
mov
sub
mov
fs
mov
jmp
jo
push
sbbb
loop
lods
adc
cmp
xchg
adc
insb
push
and
scas
pop
cld
cmp
test
mov
stos
and
push
xor
xor
loopne
add
fcomp
out
inc
std
mov
aam
and
dec
push
and
jge
jl
sbb
push
roll
or
popf
mov
push
and
mov
inc
and
incb
jnp
mov
sub
dec
je
iret
and
dec
insl
and
or
mov
fdivr
outsb
push
into
call
cs
pop
inc
sub
popf
mov
inc
add
xchg
lahf
shll
xchg
movsb
hlt
popf
fs
xor
add
or
addr16
sbb
es
mov
push
in
clc
and
and
or
mov
adc
xchg
mov
or
inc
add
aam
test
mov
dec
and
ljmp
pop
out
pcmpeqb
mov
xor
sbb
xchg
push
sub
dec
int
pop
mov
or
jbe
mov
and
push
dec
jmp
push
or
mov
ss
inc
roll
cmp
sub
adc
and
imul
adc
in
jge
lods
lret
iret
sub
ja
cmpsl
xchg
rcrb
add
in
pusha
or
pop
sub
leave
test
scas
inc
loop
or
cld
lahf
sti
mov
pop
leave
and
dec
in
mov
mov
iret
fisubrs
xchg
mov
fcmovnbe
into
mov
js
push
inc
and
push
and
dec
testl
xor
mov
mov
push
jg
cmp
xor
and
push
jne
inc
push
adc
mov
add
jne
stos
cld
jmp
or
adc
mov
subb
pop
and
mov
stos
and
das
andl
lret
or
adc
ljmp
sti
and
sub
cwtl
test
and
lea
dec
sbb
fnstenv
xchg
pop
jo
loopne
nop
ret
test
cmp
fdivrs
stc
push
cmp
mov
or
out
pop
mov
andl
mul
mov
or
add
add
dec
nop
in
dec
adcb
sub
jge
test
fdivrs
stos
fs
sub
push
inc
mov
dec
xchg
mov
in
int3
jle
mov
sbb
sti
add
roll
push
scas
pusha
lea
inc
push
xchg
pop
and
repz
pop
mov
cmp
xchg
jmp
sub
cld
aaa
cld
inc
test
xor
jmp
sbb
and
push
add
add
or
adc
and
or
lods
test
jle
mov
dec
add
nop
stos
xor
cld
dec
inc
or
fs
clc
das
into
notl
pop
cld
cmpl
jg
and
movsb
mov
sbb
push
fs
cmp
dec
xor
adc
test
pop
sub
cmpsb
in
mov
je
data16
mov
push
lea
das
test
mov
push
fdivrl
test
mov
and
leave
sub
enter
adc
mov
push
or
fs
xor
mov
push
clc
mov
lret
jnp
pop
jmp
cmpsb
xchg
inc
xchg
and
and
les
insb
sbb
nop
mov
xchg
cmp
lds
rcll
jne
test
cmpsl
and
xchg
cmpsb
sub
mov
roll
sbb
ret
ljmp
adc
jae
mov
rolb
or
cmp
pop
xor
xorl
scas
fs
loope
lock
bound
xorb
icebp
adc
mov
pop
subl
scas
fisubl
mov
mov
aam
or
je
in
leave
orb
jns
inc
cwtl
std
push
sub
cli
jne
mov
or
rorl
jo
adc
jge
and
adc
sub
mov
cli
mov
inc
cwtl
xchg
ja
sbb
or
add
sub
outsl
inc
xlat
or
fisubs
dec
aaa
mov
sbb
mov
sbb
stos
movsb
or
sbb
loopne
in
bound
inc
fs
adc
test
orb
push
test
popa
fstl
inc
inc
inc
jns
int3
or
mov
sbb
jne
lea
outsb
mov
or
adc
mov
adc
jo
xchg
hlt
shr
pusha
and
sub
add
or
jne
or
ficoml
mov
mov
clc
xchg
mov
std
xor
pop
sbb
adc
dec
bound
xchg
aas
sub
pop
jae
rclb
adc
xor
cmp
xlat
xor
and
mov
call
push
adc
jl
fbstp
mov
repnz
and
outsb
mov
mov
jp
mov
pop
or
mov
idivb
push
pushl
mov
cmpsb
pop
mov
jmp
mov
jne
out
into
push
inc
cltd
adc
loope
inc
or
sbb
sub
add
cmpb
dec
or
inc
mov
add
sahf
dec
inc
add
clc
or
je
clc
adc
fs
xor
push
sub
adc
test
sar
inc
js
or
jle
or
out
fisttps
mov
hlt
js
add
jle
jno
jg
in
pop
pop
das
mov
mov
sub
jl
mov
and
or
push
sti
nop
and
dec
test
das
mov
sub
movsl
fs
xchg
sbb
in
xchg
shll
xor
ss
hlt
jge
ficompl
jl
out
and
and
adc
jecxz
ror
dec
jle
les
jne
dec
jle
aas
lahf
pusha
jle
aaa
movsl
lock
push
icebp
mov
cwtl
dec
cmp
ds
inc
jmp
dec
or
dec
sbb
mov
fs
push
testb
push
add
les
je
sub
push
sub
or
push
inc
pop
test
ret
sub
lahf
mov
adc
popf
js
sbb
and
xor
dec
dec
mov
mov
test
sti
sub
sbb
and
push
pop
dec
lods
sahf
inc
cmp
ret
xor
cmp
clc
pop
push
and
adc
stos
sub
test
repz
lret
nop
sbb
into
mov
mov
jne
or
mov
les
pushf
pop
inc
pop
sub
repnz
cmp
inc
mov
sti
push
sub
inc
rol
jmp
cmp
ljmp
imul
sbb
jge
das
jb
mov
xchg
xchg
or
sub
adc
xchg
aas
aam
mov
cmp
ljmp
mov
push
ljmp
sbb
add
iret
cmp
jne
mov
and
sarb
cli
jbe
cmpsb
cmpsl
fstl
inc
mov
or
push
xchg
out
inc
fwait
adc
sbb
cmc
dec
test
pop
or
das
loop
add
jp
leave
adc
inc
sbb
and
test
pop
enter
push
add
stc
jae
fs
hlt
and
hlt
add
push
int3
subb
enter
mov
mov
hlt
jmp
jl
jge
add
mov
iret
mov
xor
push
in
aaa
push
mov
sub
jb
pop
inc
call
icebp
and
lret
jne
xchg
bound
or
xlat
movsb
add
enter
cmp
adc
pop
flds
je
or
inc
jle
jo
pusha
in
add
push
movl
cmp
dec
pushf
js
push
mov
xor
sbb
add
mov
sub
rol
or
lret
sub
movsb
aas
repz
movsl
xor
jne
mov
movb
dec
dec
adc
arpl
cmp
inc
inc
mov
cltd
popf
sbb
mov
or
jb
mov
xchg
mov
inc
push
cmp
lea
push
fmull
mov
adc
add
fsubr
pushf
cmpsb
sbbb
adcl
xchg
adc
mov
add
add
dec
mov
jmp
dec
push
push
pop
fsub
adcb
sub
pop
mov
imul
push
je
adc
jne
push
cmp
push
imul
xchg
movsb
sbb
push
push
pop
mov
and
lock
xor
nop
loope,pt
cmpsb
jne
rorl
lock
int
push
int3
lock
cmp
fwait
sub
push
pop
mov
sub
sbb
fisubs
test
sbb
adc
and
dec
in
sbb
lods
outsb
inc
mov
aaa
mov
sbb
add
arpl
xor
mov
aam
pushf
and
inc
aam
inc
fdivrs
mov
mov
xchg
enter
mov
js
shrb
mov
or
inc
sub
and
hlt
xor
enter
sbb
enter
jge
dec
into
jg
push
push
fmuls
gs
xor
and
les
dec
fiadds
lret
js
mov
call
out
push
pop
cld
test
and
lahf
mov
sbb
push
nop
or
dec
ja
mov
adc
hlt
sub
enter
das
sub
mov
and
or
add
popa
insl
dec
or
jo
dec
push
push
mov
xor
xor
add
and
into
test
ret
test
clc
nop
add
test
mov
testb
outsl
add
push
clc
mov
mov
pop
adc
adc
shll
xor
lock
adc
push
sti
xadd
lcall
outsb
mov
jp
xor
mov
jbe
lcall
test
gs
nop
or
sub
sbb
mov
popf
mov
add
daa
jle
dec
call
scas
jl
daa
cmc
sbb
xchg
shrb
dec
ficompl
cwtl
inc
stos
dec
icebp
es
cs
mov
hlt
push
loop
ds
lea
decb
aas
lock
cmc
cltd
pusha
clc
sub
jg
pop
push
mov
or
jge
jge
lods
inc
rolb
adc
mov
pop
inc
fcmovb
jbe
dec
scas
pop
jmp
sub
pop
push
pusha
shll
rclb
xor
sub
mov
xchg
lret
push
das
inc
repz
mov
add
or
dec
mov
fs
xchg
push
mov
and
adc
push
cmp
or
adc
cmpb
in
or
inc
jb
in
jo
popa
arpl
inc
js
fiadds
shll
jne
ds
adc
adc
inc
push
sub
insb
mov
push
sub
aas
push
cmp
sub
xor
adc
loop
xor
test
adc
roll
nop
mov
push
xor
jmp
loop
add
push
clc
lret
pop
popa
mov
adc
fcoms
mov
mov
jmp
add
in
js
jl
sub
jecxz
sub
jle
sbb
mov
movsb
and
or
mov
inc
xor
mov
xchg
sub
subl
leave
push
or
mov
and
subl
or
cmpsl
push
xchg
xor
push
inc
xlat
cmpsb
rcr
jo
sbb
enter
shlb
add
test
inc
or
cmpsb
test
inc
jge
cld
mov
xchg
add
dec
sbb
popf
das
or
sub
mov
mov
dec
fldenv
mov
ret
xchg
test
inc
jl
push
pop
and
and
adc
dec
mov
mov
or
mov
adc
cmp
lds
jb
adc
popf
data16
clc
mov
jo
cmp
and
jl
arpl
lods
repnz
xchg
ret
lds
xchg
ret
flds
sub
sbb
rep
les
cwtl
inc
ret
push
loopne
add
jmp
or
mov
pop
enter
movsb
mov
push
sub
dec
cmp
cmovae
push
sbb
dec
in
daa
push
push
push
dec
inc
inc
popa
cmp
out
mov
and
loope
ja
sbb
mov
je
les
cmp
pop
jge
cltd
mov
rclb
inc
or
mov
fsubrs
add
jne
cltd
lcall
xchg
les
add
rorb
xchg
movsb
call
in
mov
in
mov
pushf
cltd
test
xor
shll
mov
cmp
jmp
test
rcll
out
inc
sub
sbb
adc
rclb
and
cmp
mov
in
test
adc
daa
les
cmp
mov
push
dec
pusha
fcmove
xor
lret
bound
xlat
lahf
lds
mov
imul
sbb
insl
bound
cmp
outsl
lods
push
inc
sub
andb
push
lods
pop
pushf
adc
mov
jge
mov
clc
cmp
push
dec
xchg
pop
clc
js
xlat
movsl
push
das
xchg
jne
repz
cmc
push
fldcw
les
cltd
out
and
push
sub
outsl
or
or
rolb
fs
and
lock
xor
inc
loopne
and
fmuls
rorb
adc
mov
adc
mov
pusha
xchg
adc
mov
inc
sub
nop
cltd
call
and
andb
dec
enter
je
push
pusha
nop
enter
push
mov
push
test
lods
addl
loopne
cwtl
xor
sub
xchg
and
addl
pusha
les
inc
andb
lock
xor
adc
sbb
add
or
mov
adc
arpl
clc
sbb
sbb
hlt
push
fsubrl
sbb
cmp
adc
call
in
sbb
pushf
int3
fcompl
shlb
pusha
inc
aam
cmpsb
xor
cmpsb
sbb
cmpsb
or
enter
cld
cmpsb
xor
and
xor
js
mov
mov
mov
sub
or
adc
dec
cmp
movsb
adc
cltd
xor
pushf
mov
inc
cwtl
rorb
inc
nop
xchg
cmpsb
pusha
inc
mov
cltd
cmp
adc
pop
popa
sbb
jl
inc
fndisi(8087
nop
ja
jne
pushf
xchg
cwtl
sub
mov
or
sbb
mov
mov
imul
mov
or
and
adc
adc
cmp
inc
add
xchg
adc
dec
jo
cmpsl
xchg
mov
lret
addr16
test
aas
sub
fdivs
jecxz
test
adc
jbe
mov
or
cwtl
fs
sub
test
or
les
aaa
push
dec
rclb
pusha
sub
fidivrl
subl
add
cwtl
jmp
add
popa
jbe
xor
int3
mov
or
mov
cmp
mov
insl
js
loope
js
and
sub
mov
pushf
adc
je
pop
mov
sub
mov
adc
gs
xor
lret
pop
popa
aaa
adc
xor
xor
push
inc
adc
push
enter
fcompl
xchg
mov
enter
adc
jbe
jge
es
and
movsl
fcompl
pop
repz
leave
shrb
lea
bound
fstpl
inc
mov
pop
nop
jbe
and
push
mov
xchg
pop
nop
jmp
cli
adc
fisubrs
xchg
scas
dec
in
lea
clc
jae
out
push
jo
jge
incl
cmc
sbb
inc
mov
add
test
repnz
loop
adc
test
xchg
adc
inc
cld
sub
jne
cmp
fildll
nop
das
jo
mov
and
cmpsl
mov
gs
pop
jnp
dec
or
enter
lahf
inc
sub
je
adc
sub
es
in
call
xorb
jl
js
fs
jmp
out
mov
cli
adc
dec
enter
shlb
ret
lods
rcll
loop
gs
clc
jbe
cs
mov
inc
rclb
dec
mov
fmull
iret
jo
test
sub
lods
xchg
mov
and
ds
mov
jno
push
and
sarb
sbb
les
and
int3
xor
adc
push
je
inc
inc
and
aam
mov
or
test
pop
popa
fdivl
mov
sub
and
nop
hlt
mov
in
pusha
inc
fimuls
ret
and
adc
sbb
mov
lock
rorb
push
outsb
call
mov
mov
addr16
jns
cmp
add
stos
sbb
outsl
je
or
sbb
inc
bound
cltd
inc
or
adcl
adc
jns
xchg
inc
outsb
or
dec
mov
loope
inc
insl
jo
dec
xor
clc
outsl
clc
push
jns
scas
test
adc
xor
adc
ds
rcr
push
and
inc
jae
or
adc
cmp
mov
cmp
mov
divl
jae
into
sub
orb
je
mov
and
mov
sti
cli
mov
test
or
mov
rorl
xor
push
jecxz
mov
mov
sbb
inc
rcrb
or
mov
and
or
mov
sub
xor
lock
adc
inc
jne
sub
and
push
sbb
sbb
mov
lods
int
xor
jae
mov
xor
in
add
in
int3
jno
mov
mov
pop
lods
cld
push
push
frstor
push
cwtl
fs
sbb
aad
mov
xchg
xchg
sub
fs
sbb
fs
inc
out
pusha
out
loop
dec
sub
inc
push
addr16
fs
sbb
adc
sub
stc
stos
inc
sub
ror
lret
jae
gs
in
jnp
and
mov
dec
imul
hlt
jnp
and
jnp
jle
cmc
into
adc
dec
mov
dec
inc
or
fdivs
je
adc
add
pop
rolb
dec
int3
cmc
out
into
pop
inc
push
fldenv
mov
inc
iret
fs
pushf
cmp
fwait
arpl
pushf
fwait
mov
mov
fs
mov
arpl
jmp
sbb
or
sub
mov
dec
inc
in
stos
sub
mov
in
clc
dec
in
int
mov
call
adc
movsl
sub
je
xchg
hlt
adcl
sbb
mov
jmp
in
fcompl
pop
in
cmp
inc
in
add
repz
mov
lock
mov
fisttps
sbb
in
lea
jmp
jo
sbb
and
lock
jmp
or
xchg
loopne
aad
lea
cmp
xor
sbb
cmp
jg
stos
mov
or
sub
sub
idiv
pop
mov
add
or
dec
je
dec
push
cmove
push
ljmp
mov
outsb
jl
add
sub
std
inc
sub
inc
or
mov
les
imul
xchg
xor
push
sti
and
xor
loopne
pop
in
inc
fsub
das
add
mov
jne
push
out
mov
mov
bound
stc
int
decl
popa
pop
in
dec
je
sarl
and
inc
popa
lret
fsubr
jae
enter
lea
jmp
and
lahf
leave
inc
enter
fcompl
into
push
aam
jo
sub
add
and
shlb
inc
jl
js
and
out
jle
inc
test
outsl
cmpsb
xchg
fsubp
sub
test
adc
fcmovnu
popf
fisubrs
sub
lods
mov
push
mov
ja
enter
adc
dec
xor
adc
mov
out
test
pop
insb
inc
inc
jmp
test
inc
out
mov
adc
loope
out
ret
adc
out
push
add
push
faddl
jnp
mov
dec
adcl
dec
ret
add
jecxz
test
sbb
incl
and
ds
add
movsl
xchg
jg
mov
jmp
mov
push
mov
push
mov
out
sbb
mov
dec
pop
cmp
push
test
adc
add
sub
sbb
pop
orb
data16
test
leave
pmaddwd
push
or
test
enter
test
les
je
and
xor
mov
inc
push
movzwl
lock
popf
inc
push
mov
inc
jg
sub
cmp
push
sub
push
out
shrb
inc
add
dec
cmp
inc
mov
lea
push
inc
lods
inc
inc
xchg
mov
add
adc
movsl
dec
inc
out
dec
pop
sahf
jbe
sbb
mov
stc
rclb
ret
lds
push
xor
aam
dec
test
je
mov
dec
inc
pop
dec
in
push
test
filds
jne
xchg
add
sub
lret
fsubs
add
xor
dec
pop
adc
or
pop
jg
notb
add
mov
cmp
push
jmp
nop
sub
call
cli
xor
idiv
add
insl
pusha
jmp
xchg
pop
pop
or
inc
adc
xor
and
xor
test
pop
lea
mov
jne
mov
loopne
test
aaa
mov
test
inc
movsb
enter
clc
adc
ss
testb
inc
dec
add
xchg
jae
xchg
orb
in
xor
sbb
mov
in
aaa
nop
in
test
xchg
loopne
jbe
push
sub
cmp
xchg
test
jne
add
or
pop
and
je
dec
jl
xchg
in
out
push
in
leave
push
mov
stc
adc
dec
xchg
nop
xchg
popa
jmp
movsb
or
cmp
loopne
cmp
push
in
mov
sub
dec
add
sub
mov
or
push
push
dec
cmp
jmp
or
jmp
pop
daa
jns
push
or
push
mov
xchg
les
sub
add
adc
cmp
and
movl
loope
fcoms
and
sub
imul
mov
jno
adc
add
jmp
pushf
jnp
pop
loop
shl
repz
cmpsb
scas
xor
push
push
cltd
mov
or
pop
mov
pop
sbb
pushf
les
popa
mov
aam
notb
jno
aaa
push
jnp
adc
pop
mov
cmp
inc
mov
cmp
mov
cmp
pop
arpl
and
push
push
inc
nop
xchg
fistl
push
push
movsb
test
push
mov
inc
or
mov
add
je
pop
shlb
pop
inc
sar
adc
std
pop
cld
adc
out
inc
adc
push
pushf
jmp
les
test
hlt
mov
cmp
mov
push
icebp
cmc
test
lock
out
sub
mov
not
call
or
xchg
pop
push
scas
ficoml
and
mov
add
or
std
push
xlat
iret
cld
sub
pop
and
pushf
or
mov
pushf
idiv
shlb
push
mov
jmp
push
shll
mov
notl
xor
pop
arpl
dec
adc
and
or
lods
pop
and
test
xor
in
mov
mov
lret
outsb
ljmp
filds
ret
cmpb
je
lock
and
mov
cltd
fs
hlt
bound
das
sbb
pop
pop
in
out
lret
fs
mov
mov
mov
in
jle
jecxz
movsb
inc
lea
mov
cmp
adc
xchg
aad
push
mov
clc
or
insl
dec
mov
in
inc
stc
push
mov
cli
andl
notb
push
test
inc
fnstcw
mov
cmp
or
movsl
fldt
fwait
inc
xchg
adc
push
in
push
and
cmovle
xor
sub
sbb
pusha
sbb
fldcw
je
push
fldt
scas
idivb
cmpsl
and
lock
push
push
or
pmulhuw
cltd
jge
sbb
sti
pushf
and
mov
loopne
mov
sbb
ja
daa
dec
lret
dec
in
fsubl
in
pop
lret
fmuls
push
mov
aam
adc
rolb
pop
shrl
sub
cmp
dec
cmc
mov
sbb
hlt
rcr
decb
in
test
dec
sub
repz
lret
jmp
sub
lahf
shrb
movsb
loopne
test
andl
mov
xchg
in
add
test
or
add
int
ljmp
dec
xchg
imul
mov
fwait
sbb
arpl
xor
aad
repnz
sub
mov
jo
das
mov
jns
and
leave
adc
flds
push
and
fnsave
sbb
sub
lods
outsb
push
sbb
mov
push
dec
stos
adc
adc
scas
or
cmp
js
movsb
jmp
mov
inc
movzbl
call
test
dec
sbb
sbb
cmpsl
rcll
fisubs
inc
dec
ficoml
fs
jp
nop
cmp
xor
sub
rcll
push
mov
and
cld
add
mov
movsb
je
loop
push
xchg
sbb
inc
add
mov
sub
lret
fs
cmpsl
cmc
adc
std
call
mov
sub
test
sub
std
divl
adc
in
std
sub
out
aam
add
push
and
jbe
jmp
adc
negl
les
jge
jb
adc
std
or
sub
lret
scas
jne
adc
fbld
inc
enter
mov
dec
cmp
adc
push
nop
xor
outsb
and
dec
mov
lret
and
jo
int3
jo
or
and
cmpl
mov
addl
cmc
push
stos
int
adc
jecxz
test
adc
das
sub
dec
sub
inc
sbb
sub
dec
imul
and
sub
mov
xchg
sub
dec
inc
sbb
daa
in
negl
inc
mov
stc
dec
pop
fs
sbb
sub
leave
movsb
mov
sbb
aam
les
and
movsl
xchg
sbb
sarb
call
cmp
lret
sbb
jae
sbb
imul
in
test
inc
cmp
sbb
xchg
inc
mov
add
jmp
and
inc
dec
push
mov
mov
fs
add
xor
icebp
or
xor
sub
dec
sub
pop
sbb
sarb
mov
lahf
adc
sbb
mov
pop
and
fstpl
aas
mov
divl
pop
js
and
xchg
pop
xchg
lret
pop
inc
mov
test
sbb
aaa
dec
mov
mov
sbb
std
xor
movsb
mov
and
cmp
cmp
push
movsb
mov
nop
cltd
dec
outsl
push
rcr
sbb
es
bound
add
sub
mov
xchg
test
test
sub
mov
add
les
xor
lea
loopne
pop
inc
jns
sbb
mov
jnp
testl
add
loopne
fstl
and
adc
ret
sbbb
add
lods
push
mov
or
xor
push
mov
cmp
imul
dec
xlat
dec
imul
lcall
pop
or
int3
dec
movsl
or
insb
daa
insb
pop
ss
or
test
pop
pop
jo
and
js
enter
das
and
mov
xchg
push
sbb
xor
push
jae
nop
scas
adc
jecxz
add
aad
sub
daa
mov
adc
pushf
add
insl
jo
jns
into
clc
adc
clc
and
and
sbb
popa
and
push
je
and
mov
les
mov
sub
addb
adc
inc
inc
std
jb
stc
outsb
arpl
cmpsb
pusha
xchg
call
inc
dec
bound
mov
pop
lret
icebp
lahf
and
mov
mov
push
icebp
imul
ja
or
push
iret
lods
mov
call
push
xor
movsb
mov
adc
inc
fs
sub
xchg
add
push
add
std
inc
push
mov
fdivr
push
and
inc
orl
adc
push
test
orl
scas
xchg
xchg
inc
push
les
iret
leave
inc
sti
lock
cmp
mov
adc
and
jmp
lea
fs
mov
aad
mov
sar
out
cltd
mov
adc
sbb
stos
shrl
sysexit
sub
mov
nop
sub
xchg
push
jne
push
mov
das
adc
sub
or
and
mull
xchg
inc
nop
adc
inc
push
xchg
sub
adc
dec
ficomps
in
cmp
mov
mov
jnp
xor
inc
mov
inc
and
cmp
push
xor
data16
fwait
outsl
loopne
jae
scas
and
and
sbbb
sbb
add
xor
sub
loope
mov
mov
mov
imul
int3
push
push
enter
inc
inc
dec
test
lahf
pop
js
dec
adcl
cmpb
add
stc
and
mov
jp
movsl
hlt
mov
or
dec
or
repz
mov
and
int3
outsl
not
das
push
faddl
xchg
push
mov
xor
inc
add
mov
cs
or
cli
les
mov
inc
xchg
jge
push
cmp
je
mov
and
adc
mov
clc
mov
dec
pop
stos
sub
lods
lock
subl
ss
cmp
sbb
add
ret
icebp
clc
inc
add
dec
pop
clc
call
inc
lds
sub
push
gs
adc
ret
mov
push
pushf
jnp
sub
sub
lods
js
jnp
or
ss
ficoml
mov
dec
add
inc
xorb
inc
stc
or
jp
mov
mov
outsl
mov
pop
movsb
inc
dec
jle
and
adc
ljmp
mov
nop
push
mov
fstps
mov
ficoml
or
fisubrs
in
push
mov
aam
rol
enter
xchg
inc
or
jmp
js
jmp
or
cmpl
xor
jb
lods
por
jbe
sub
xchg
imul
in
or
jg
in
sbb
into
inc
dec
sti
inc
popf
rcrb
cwtl
cmp
aad
xor
mov
and
mov
incl
mov
jne
gs
jno
repz
dec
mov
lock
decb
mov
pusha
cld
rorb
mov
or
nop
push
jl
inc
sub
jmp
inc
push
xchg
xor
add
out
adc
ficompl
int3
cmp
push
jb
push
or
adc
add
inc
dec
jne
dec
leave
adc
mov
cld
pop
nop
hlt
faddp
mov
pushf
test
inc
ja
add
enter
movsl
in
inc
mov
push
das
lods
sarb
pop
dec
pushf
cld
push
ja
loope
insb
xchg
les
adc
push
or
subl
cmp
mov
outsl
or
inc
xchg
ljmp
jmp
mov
inc
icebp
add
popa
or
nop
cmp
dec
xor
cmp
mov
aam
adc
sub
cmp
stos
mov
rorb
lods
mov
or
xchg
jb
cmp
xchg
and
in
jb
cmp
popf
and
in
jb
cmp
test
xchg
mov
cmp
mov
inc
les
cmp
mov
dec
pop
iret
insb
and
add
gs
subl
xchg
push
shrb
sbb
add
or
lea
jge
cwtl
jg
pop
enter
push
dec
sbb
pushl
sbb
test
fistpll
add
push
xor
dec
xor
cmp
jle
js
cmp
cmp
xchg
jbe
sar
cmpl
jge
rorl
inc
push
mov
jno
lret
int3
sub
mov
cwtl
add
inc
repnz
pop
dec
lock
rorl
mov
or
cld
test
push
sub
cmp
add
jl
or
loopne
data16
fistpll
lret
push
mov
dec
andb
jne
jge
in
sub
enter
jbe
dec
loop
lock
adc
test
out
dec
int
sub
mov
pop
adc
mov
push
pop
or
stos
fwait
dec
xlat
int3
sbb
sets
lea
sbb
sbb
lcall
sub
sbb
mov
add
test
jmp
dec
push
push
dec
cmp
rolb
je
or
lar
pop
inc
push
adc
ja
mov
jmp
rcl
rcrl
jp
rorb
mov
adc
aad
pop
jae
sub
adc
or
movsbl
pop
push
inc
xchg
insl
pop
enter
ljmp
test
mov
sbb
xor
out
push
or
adc
jne
mov
sahf
ja
pop
jg
popa
or
call
push
adc
mov
mov
xchg
sub
push
nop
push
mov
pushf
inc
inc
jle
adc
mov
add
fwait
pop
dec
push
mov
out
dec
shlb
cwtl
pop
dec
into
jbe
rorb
cmp
into
pushf
mov
out
add
stos
stos
fs
scas
mov
mov
dec
mov
add
mov
sbb
push
push
lods
lcall
lds
sub
in
xchg
xlat
mov
xchg
mov
and
stos
imul
scas
jge
cld
cmp
test
add
or
ljmp
dec
ljmp
mov
jo
mov
adc
push
add
sub
or
sarb
out
pop
lds
pushf
adc
and
jne
cld
inc
add
push
rcl
movsl
rcll
push
sbb
push
dec
sbb
sti
pop
imul
xorl
mov
cmp
pop
push
sub
push
xor
adc
scas
or
mov
inc
mov
clc
jg
mov
pop
xchg
and
lods
sub
and
inc
sahf
das
xlat
push
lea
xchg
adc
push
or
push
adcb
fstps
fwait
xchg
add
dec
shl
add
inc
add
push
je
lret
and
fistpll
mov
in
adc
add
or
ja
adc
mov
pop
adc
push
mov
setl
lock
xor
mov
add
lds
dec
or
movsl
push
push
mov
cmp
inc
inc
mov
xchg
ja
push
xchg
outsl
mov
or
and
jmp
nop
test
push
cmp
mov
pop
gs
stos
inc
sbb
movsb
mov
cmp
add
pop
pusha
inc
jp
xchg
cmp
xor
add
aaa
adc
ficomps
add
adc
pop
add
push
ret
scas
cmp
rorl
sbb
fdivrl
mov
sbb
xchg
call
jns
add
fsts
in
icebp
mov
mov
fnop
out
dec
rcr
movsb
cmp
sbb
pop
fldpi
or
test
repnz
dec
in
inc
and
call
push
jge
push
rorb
mov
pop
inc
gs
mov
pop
sub
jp
xchg
push
and
gs
lcall
jle
test
mov
xchg
pop
dec
inc
cmp
mov
pop
mov
pop
add
push
inc
imul
mov
mov
bound
data16
outsl
dec
push
mov
or
add
dec
and
sub
adc
push
hlt
sbb
ret
insb
jns
inc
cmpsl
jae
gs
xor
loope
xor
push
es
popa
pop
cmp
imul
inc
mov
lea
push
inc
cmp
dec
sbb
dec
insb
adc
xor
popa
push
nop
test
sti
hlt
cmp
adc
inc
aaa
pushf
or
gs
insb
jo
outsl
outsb
jae,pn
imul
nop
mov
pop
icebp
in
sbb
add
fmull
jns
ja
push
adc
push
lock
or
fnstcw
ss
mov
sbb
lcall
jns
jbe
popa
push
or
push
test
push
dec
jb
fldenv
outsl
mov
add
rcrl
mov
fsubrs
pop
mov
mov
scas
pop
fdivs
mov
adc
imul
sbb
cmp
mov
mov
cmp
enter
or
xlat
adc
pop
fldlg2
sbb
test
movsl
adc
inc
pop
inc
sbb
inc
sbb
inc
mov
adc
pushf
pop
pop
enter
mov
push
jb
jb
hlt
mov
push
push
inc
xor
xchg
lock
ret
in
push
push
sbb
cmpsb
inc
xchg
aam
mov
je
pop
pop
enter
push
je
add
cld
rolb
out
and
adc
nop
pop
jnp
and
test
test
enter
lar
outsl
insl
jo
in
lret
sbb
scas
pop
dec
and
adc
je
adc
dec
int
leave
aaa
jb
or
pop
testb
mov
mov
mov
push
roll
pusha
lret
jmp
insb
and
and
mov
xor
adcb
cmp
stc
add
and
fs
mov
lock
nop
pop
mov
and
sub
adc
lods
mov
adc
adc
cmp
or
push
les
inc
fmul
sbb
popa
repnz
js
or
push
subb
ret
xchg
inc
shr
sub
adc
test
inc
std
xchg
dec
pushl
das
pusha
or
pop
add
or
ffreep
xor
dec
push
clc
imul
aam
pop
gs
in
and
and
icebp
notb
or
cwtl
pop
in
loopne
jl
or
mov
dec
bnd
or
adc
xor
push
out
inc
je
cmpsl
sbb
inc
or
cmp
nop
push
mov
popf
sbb
aam
dec
sbb
and
adc
dec
and
mov
push
mov
jno
sub
arpl
add
or
xchg
and
sub
jp
xchg
adc
xchg
mov
arpl
sbb
push
fs
or
dec
fcoms
xor
ljmp
aam
mov
std
cld
dec
sti
cltd
in
inc
lock
push
xchg
inc
rcrb
adc
aam
adc
js
pop
movsl
adc
or
hlt
and
out
es
push
lods
lods
push
movsl
jmp
add
xor
cmpsb
sub
sbb
sub
iret
jae
fs
jo
addl
jae
push
shl
sahf
jo
add
fisubl
push
mov
and
jno
popf
sbb
xchg
and
sub
les
xchg
push
add
push
pop
or
cld
xor
jl
add
mov
call
or
sub
jo
imul
push
xor
int3
or
pop
mov
or
jmp
bound
test
test
push
pushf
adc
vmwrite
xor
in
add
movsb
cld
dec
jne
mov
cmp
push
loopne
enter
adc
repz
add
and
inc
or
xor
or
les
pusha
push
test
jmp
or
sub
inc
push
sbb
mov
cltd
jno
leave
pop
push
sbbb
mov
mov
sub
adc
cmp
and
cmp
push
es
mov
es
mov
test
cltd
adc
mov
sub
insb
mov
xor
or
mov
or
data16
push
mov
outsb
popa
outsl
lcall
xchg
xor
adc
dec
fs
sub
dec
pop
push
daa
js
js
cwtl
pop
ret
inc
cmp
pop
rcrb
enter
in
out
push
addb
mov
adc
es
jl
dec
sub
insb
enter
test
dec
cmp
jno
lock
dec
jl
mov
sbb
insb
enter
in
sbb
clc
adc
je
mov
sarb
mov
or
or
xchg
adc
enter
sbb
xchg
sub
rcll
mov
adc
sub
xor
dec
orb
adc
inc
cmp
push
adc
movsl
or
orl
adc
sub
adc
cmpsl
xor
aam
mov
mov
adc
add
adc
call
mov
dec
notb
nop
fsubrl
jle
inc
and
mov
cmp
adc
leave
das
and
sub
sbb
sub
mov
je
xchg
jne
loopne
add
rclb
les
int3
sub
sub
movsb
fs
clc
adc
add
add
cmp
sbb
mov
pop
push
jp
orb
cld
xlat
inc
into
mov
hlt
lret
testb
dec
loope
test
xor
push
push
sbb
and
das
or
cmp
sub
outsl
test
xor
sub
inc
inc
roll
int3
add
in
int3
ror
inc
pop
add
jno
cmpsb
jecxz
fldcw
call
inc
xor
fdivrs
movsl
jno
push
insl
movsb
adc
fs
cmpsl
and
int3
or
and
cmp
lods
dec
adc
loop
in
pop
inc
int
imul
push
in
dec
xchg
xor
jge
xor
sub
hlt
popf
sbb
and
adc
sbb
in
add
mov
ds
scas
inc
mov
lods
sbb
mov
insb
in
adc
mov
sbb
jns
adc
cwtl
and
xchg
lods
fwait
pusha
inc
mov
int3
jle
adc
add
jp
jl
jle
jle
jle
jg
jle
pop
addsubps
iret
lock
cwtl
andl
ror
int3
adc
es
addr16
or
xchg
or
fists
in
mov
adc
or
add
fisubrs
movsb
in
and
add
pop
cmp
inc
inc
out
incl
movsl
pop
and
or
push
popa
scas
push
leave
das
jnp
repz
adc
push
mov
mov
in
or
addl
nop
adc
push
inc
mov
jl
dec
cmp
imul
pop
adcb
adc
or
test
jg
and
pushf
popa
loopne
andl
push
sbb
adc
pushf
push
pop
adc
and
test
push
add
dec
fs
mov
popa
jo
inc
or
jns
lds
dec
xlat
into
mov
push
xor
dec
mov
ja
aaa
or
gs
ljmp
sbb
jle
aam
sub
cmp
jne
push
js
mov
cmc
dec
xchg
mov
pop
xor
test
adc
orl
inc
jb
jne
xchg
fdivs
and
icebp
cmp
sbb
jae
nop
mov
lock
jb
xor
push
xor
mov
fnstsw
mov
aad
push
cmp
adc
xor
fmull
test
xlat
dec
mov
pop
adc
pop
enter
dec
jmp
or
push
movsl
push
push
dec
and
mov
imul
pop
adc
push
sub
dec
push
fmuls
or
and
jo
adc
cmpsb
ret
add
add
lcall
mov
ret
push
add
cmpsl
and
mov
push
adc
pop
and
and
or
push
mov
xor
jne
dec
aad
lods
inc
ret
scas
lods
mov
pop
lods
test
mov
or
or
mov
ljmp
andl
fisttpl
push
shll
cmp
sub
aas
pop
sbb
ljmp
and
enter
push
adc
mov
dec
cmp
pusha
mov
movb
loope
inc
mov
arpl
inc
test
inc
rol
lds
dec
sbb
pop
orl
hlt
pop
fnop
addr16
and
movl
xor
push
insb
cwtl
adc
and
das
xor
hlt
xor
adc
enter
xchg
aad
lea
adc
imul
mov
xor
popf
stos
mov
lock
adc
fdivrs
sbb
xchg
push
cmpsl
repnz
dec
push
sbb
adc
and
lcall
int3
dec
rcll
and
xchg
or
push
fdivs
xor
mov
stos
sub
pop
inc
and
xchg
movsl
mov
sbb
testl
mov
mov
inc
adc
and
sub
adc
lds
int3
pushf
out
mov
add
or
test
and
and
add
inc
popf
sbb
negb
jmp
sub
inc
inc
inc
push
jl
inc
lcall
sub
push
dec
jne
sub
cmp
xor
xchg
aad
cmp
test
push
dec
push
in
or
and
dec
inc
ljmp
movsb
xor
inc
mulb
test
inc
xchg
inc
iret
mov
ficoml
add
ficoms
test
or
and
clc
dec
test
xchg
lods
int
adc
sub
sbb
in
mov
add
mov
sub
ja
xchg
imul
test
call
hlt
shrl
es
sbb
cmp
sub
dec
and
sbb
mov
cmp
jl
lods
push
xchg
or
push
pop
in
cltd
int3
cmp
inc
push
mov
pop
sbb
jb
iret
es
les
add
sbb
shrb
cmp
dec
call
loop
shrb
or
fidivrl
lods
nop
jl
dec
or
and
xchg
call
mov
and
ja
and
imul
push
pop
push
dec
or
aam
lahf
sub
adc
rclb
enter
mov
mov
xor
and
cmpl
jne
fsubr
mov
sub
sbb
rclb
or
hlt
pop
subl
mov
cld
push
adc
add
js
lahf
or
rcll
pop
jmp
or
pusha
adc
sub
adc
into
gs
test
adc
aad
inc
lret
pop
dec
and
rolb
inc
dec
pop
push
cs
xchg
test
mov
fisubl
or
mov
pop
add
movsb
lods
push
cld
popf
push
insb
ficoml
jns
stos
cmp
cmp
rorb
mov
cmp
je
and
pop
jge
lret
xor
cmp
pop
clc
scas
cwtl
cli
inc
dec
enter
add
nop
mull
movsl
cwtl
jle
cmp
push
sbb
inc
mov
fisubrs
test
cmp
daa
jecxz
jno
pop
jne
lock
push
ror
js
cs
cmp
cmp
sbb
es
cmp
xor
cmp
dec
mov
rclb
ret
or
je
jae
rcll
jmp
jne
sub
je
fsubl
outsb
test
test
dec
in
sub
jo
push
cmp
cmp
dec
adc
mov
loopne
inc
popa
movsb
loope
push
dec
and
daa
inc
mov
mov
mov
and
push
ds
repz
inc
jl
or
pusha
divl
jns
jl
or
jae
xor
dec
add
shll
or
jns
jg
cli
scas
jg
dec
aad
and
adc
inc
pop
subb
jo
push
pop
les
cmp
cmp
cmpsb
popa
jecxz
cld
jb
mov
and
aas
fs
mov
lcall
sti
andl
push
jmp
sub
and
xchg
cmp
jp
jno
gs
lret
cld
lea
sbb
lea
adc
add
add
or
orl
cwtl
dec
jne
xlat
rcrb
adc
inc
xchg
inc
cmpsl
pop
sarl
add
adc
push
sti
xchg
jbe
stos
leave
xchg
pop
or
mov
or
movsb
clc
test
pusha
or
sub
pop
mov
or
mov
or
adc
xor
add
mov
idiv
fs
sub
bound
or
lret
fstpl
call
mov
xchg
in
flds
nop
js
shrl
mov
sub
push
push
cld
lods
jmp
push
jp
pop
sbb
or
arpl
sbb
push
xchg
pop
xchg
into
dec
dec
dec
push
shlb
adc
arpl
idivb
mov
xchg
ss
sub
pop
sarb
fmuls
xchg
and
xchg
sub
and
push
xor
mov
xor
sub
adc
sub
inc
xor
mov
adc
aaa
xchg
addb
dec
pop
out
add
das
orb
insb
add
cmp
cmc
lock
gs
nop
sbb
dec
lods
mov
int3
cmpl
adc
idivl
xor
dec
mov
scas
mov
stos
push
into
bound
daa
cmp
mov
cmp
dec
mov
inc
or
xor
pop
loopne
dec
pop
in
adc
cs
xchg
push
cmove
mov
orl
or
xchg
out
cs
cmp
cmp
leave
outsl
jge
inc
lods
adc
movsl
out
xor
mov
sub
adc
rcrb
cmpb
add
mov
adc
inc
and
mov
imull
sub
sahf
lcall
je
jb
push
sub
pop
sub
mov
sub
pop
cld
dec
sub
or
fwait
dec
out
bound
imul
inc
repnz
mov
pop
leave
cmpsl
cmpsl
cmp
lods
dec
push
pop
add
bound
cwtl
push
hlt
repnz
or
or
into
in
nop
popa
pop
push
cmp
or
mov
aam
xchg
push
enter
in
lea
push
cmp
mov
hlt
jnp
mov
mov
mov
dec
js
fimull
cwtl
jl
je
and
scas
xrelease
nop
mov
in
pushf
inc
jmp
cld
aam
jne
mov
mov
dec
and
dec
in
sbb
inc
fnstcw
mov
jnp
int
push
or
cmp
in
cs
push
lods
paddsw
in
into
dec
mov
dec
inc
push
or
cli
inc
aas
jle
movsl
lret
xor
jmp
or
mov
pop
add
mov
xchg
imul
mov
cmp
dec
jge
push
pop
add
adc
jne
sbb
sub
leave
adc
shrl
adc
sbb
inc
mov
pop
mov
aam
pop
rorb
pop
gs
sti
and
cmp
je
inc
cld
mov
or
jmp
and
ret
ds
mov
add
sahf
inc
shlb
cs
sub
es
cmp
call
dec
mov
scas
xchg
int3
cmp
cmp
or
push
cmp
mov
imul
arpl
dec
xor
std
shl
add
cmp
in
pop
movsb
je
sub
mov
jae
shrl
jle
jle
ret
cwtl
add
enter
loopne
inc
mov
pop
scas
sbb
jmp
decl
dec
pusha
sub
jg
jp
push
aad
push
dec
inc
jne
loopne
or
mov
test
cmp
push
out
loope
divb
mov
das
test
int
mov
inc
mov
jae
inc
lea
jg
dec
dec
inc
mov
dec
sub
adc
dec
in
mov
rol
inc
jne
xchg
dec
cmp
jbe
dec
add
lret
xchg
jne
push
out
shr
push
movsb
sub
mov
orl
fwait
jmp
mov
push
inc
fldcw
and
sub
ss
arpl
hlt
test
lods
aam
lret
shll
pop
lods
mov
out
xor
shll
mov
mov
dec
rcr
and
and
nop
lcall
inc
pusha
push
and
ja
lds
add
call
sbb
repz
adc
je
scas
mov
xor
mov
dec
int
sbb
xchg
xor
es
sub
inc
xlat
in
mov
out
jl
sub
inc
adc
or
mov
shl
cwtl
cmp
jnp
cli
movzbl
cmp
adc
mov
testb
push
inc
mov
pop
or
jmp
push
inc
je
fsubs
dec
inc
hlt
jle
ror
push
scas
mov
mov
call
xlat
add
cmp
ja
add
xlat
jb
mov
pop
add
fadd
mov
jne
xor
jmp
inc
add
jne
inc
decl
in
mov
in
scas
dec
lock
lods
lcall
xchg
inc
jb
ljmp
cmpsl
ja
les
test
shlb
dec
sbb
scas
fwait
inc
mov
and
in
sbb
or
jno
inc
or
subb
bound
stos
test
ficomps
imul
nop
cmp
push
push
frstor
cli
or
jae
les
cmp
ret
mov
mov
fsts
shld
xchg
loope
sub
aaa
jp
lds
outsb
mov
ret
in
hlt
sbb
or
mov
lock
andb
in
mov
xor
push
imul
cmpsl
or
add
sub
rolb
leave
push
xchg
lock
sbbl
das
dec
mov
fs
jne
and
or
rolb
sbb
in
cmp
xor
cmp
jmp
sub
push
or
inc
and
push
test
std
xchg
sub
fprem
test
and
inc
xor
lret
notl
loope
xchg
dec
adc
mov
dec
or
idivb
fimull
cld
inc
call
leave
fistl
sub
nop
xor
lods
xchg
pop
cli
inc
sbb
mov
or
cmpl
leave
fucomip
mov
jmp
push
test
sub
push
cld
push
flds
or
push
or
and
dec
lret
pushl
mov
icebp
leave
pushl
sbb
mov
test
xchg
dec
push
cmpl
sub
movsb
xchg
or
lds
scas
lds
mov
dec
lock
test
mov
cmpl
sti
push
push
jo
cwtl
dec
and
int
fs
inc
and
pop
movsb
adc
xchg
cmp
sub
or
xor
mov
pop
pop
fdivr
ds
cwtl
xor
arpl
sbb
cmp
and
cmp
mov
and
cwtl
pop
sub
dec
add
mov
mov
or
inc
or
sbb
xor
inc
js
jmp
sti
imul
cli
es
cld
aam
push
fcompl
dec
pop
lret
inc
daa
repnz
sbb
mov
and
out
jg
and
push
rorb
sbb
fsubl
jmp
push
dec
and
lods
pop
push
jnp
pusha
in
mov
fs
shlb
xchg
pop
insb
dec
decl
jbe
jmp
or
sti
inc
mov
ret
jbe
push
sub
mov
dec
or
out
pop
push
cltd
dec
pop
pusha
jnp
jg
dec
mov
fnstcw
jl
or
loope
push
sbb
pop
inc
cmp
fsubs
push
xchg
cld
mov
push
adc
bound
clc
jno
mov
out
jle
pop
and
lahf
gs
jae
inc
call
arpl
inc
test
adcl
test
in
push
dec
jge
pop
imul
std
dec
hlt
xchg
push
cmp
adc
cmp
xchg
push
sub
or
cmpl
push
dec
fidivl
scas
push
inc
lcall
or
pushl
mov
movsl
xor
mov
jbe
scas
or
mov
push
pushf
xchg
mov
cld
movsb
mov
je
scas
add
aaa
inc
scas
dec
inc
hlt
fs
stos
nop
mov
cmp
sub
cmovno
daa
call
or
in
adc
push
sbb
imul
jne
sbb
add
cltd
sub
hlt
jmp
int3
inc
cmc
xchg
stos
mov
dec
cltd
push
jle
cld
xchg
and
adc
in
xchg
or
adc
sbb
adc
adc
sub
pushf
and
cmp
push
dec
adc
rclb
mov
ficompl
ret
sub
test
pusha
loope
int3
jmp
or
pop
add
push
movsl
mov
add
inc
or
add
leave
je
jmp
loop
inc
call
jae
adc
fsubrs
pop
pop
sbb
mov
adc
in
dec
cmpsb
mov
ret
sub
sbb
in
xlat
out
dec
cltd
and
stc
in
pusha
movsb
pop
mov
stc
lods
push
cmp
lea
hlt
inc
sbb
dec
xor
bound
out
testl
pop
repnz
mov
lock
shrl
cmp
mov
rcrl
out
mov
sbb
popa
mov
gs
test
sti
mov
ficoml
int
cmp
adc
and
cld
and
xor
les
pop
outsb
shlb
push
mov
cmp
sarl
sbb
repz
mov
fsubr
hlt
out
aam
dec
dec
ss
xor
push
mov
inc
gs
cmp
sub
mov
sub
clc
imul
adc
cmp
pop
mov
lcall
mov
jp
or
push
mov
adc
push
pop
mov
repnz
in
sub
pop
xchg
pushf
jnp
scas
pusha
out
loop
pushf
decl
aam
mov
dec
mov
cmp
jb
insl
and
xor
mov
dec
pop
cli
push
leave
and
sahf
xor
mov
jne
imul
sub
nop
rcl
test
lret
sti
sub
jl
dec
inc
pushf
loope
sbb
cmp
dec
pop
iret
jae
gs
int3
cmp
mov
into
ret
mov
pushf
ljmp
mov
js
push
int
pushf
pop
cmp
call
dec
sub
out
push
jb
sbb
xchg
dec
or
leave
and
shll
and
xchg
mov
push
jge
push
clc
or
out
data16
pinsrw
jae
push
mov
xlat
data16
xchg
xchg
ljmp
pop
push
hlt
fsubrs
xor
xchg
adc
test
inc
lods
les
or
test
or
push
lods
insb
mov
imul
ret
inc
push
and
lahf
sbb
outsl
jg
popf
cbtw
sub
xchg
hlt
lret
clc
pop
cmp
mov
adc
pop
mov
xchg
sahf
stos
dec
std
in
add
repnz
mov
repz
or
adc
arpl
pop
pop
mov
lock
dec
jmp
and
das
jb
jne
orl
inc
push
jns
mov
cmc
arpl
lods
fnsave
flds
add
enter
push
adc
imul
push
in
dec
and
call
std
cld
es
xchg
test
lods
mov
mov
add
pop
bound
push
sub
inc
cmp
sub
push
lea
std
cmpsl
sub
sahf
push
xchg
test
loopne
repnz
int
dec
mov
xchg
and
mov
imul
cs
add
jmp
mov
rolb
sarl
xor
or
push
in
scas
or
pop
subb
adc
sbbb
jmp
dec
dec
clc
enter
sahf
cmp
adc
dec
cld
mov
add
fdivrl
xchg
push
dec
jno
dec
test
jmp
pop
lods
pushf
popf
loopne
pop
xchg
adc
hlt
in
jbe
addr16
inc
test
mov
dec
push
stos
xor
and
into
xchg
push
pop
hlt
aaa
xchg
enter
enter
rcll
pop
xor
fildl
xlat
fs
cli
sub
sarl
jns
add
sbb
cmp
das
je
loopne
out
sbbl
push
pop
ja
mov
push
icebp
or
and
into
ds
dec
push
add
mov
push
mov
pop
pop
xor
adc
push
insb
lret
pop
stos
sub
out
or
mov
cmp
mov
mov
mov
add
sub
jne
inc
lretw
push
sbb
loopne
dec
mov
cmpsl
dec
xchg
mov
shlb
scas
bound
adc
fsubrs
pop
mov
push
pusha
dec
dec
cs
jg
clc
or
dec
push
iret
push
bound
aaa
mov
pop
xchg
in
or
dec
ficoms
jno
mov
dec
inc
rorb
xchg
call
insb
push
insb
lods
mov
lock
popa
xchg
clc
adc
inc
popa
mov
jmp
ljmp
setbe
pop
adc
insl
frstor
mov
popa
gs
enter
jb
pop
sub
cmp
and
enter
popa
xchg
lock
or
mov
jno
test
pop
loopne
pop
and
stos
ds
push
cmp
xchg
je
push
jns
aaa
out
rclb
sti
fs
push
sbb
fisubrl
jae
adc
scas
mov
xchg
shrb
dec
repz
mov
adcb
or
inc
shlb
dec
arpl
mov
aaa
jmp
fiaddl
inc
mov
xchg
add
or
or
data16
pop
push
xchg
sub
sbb
or
or
les
arpl
out
pop
arpl
dec
in
cmp
dec
arpl
rcrl
pop
adc
in
push
adc
ss
xchg
or
testb
idivb
inc
add
cmp
or
cmc
pop
jmp
mov
cmp
jne
testb
xor
push
mov
dec
ret
jns
sub
and
inc
sub
push
jg
int3
daa
push
sub
adc
or
popf
add
and
sbb
loop
cmp
test
movsl
mov
or
and
adc
mov
ret
mov
lods
adc
sbb
mov
jp
inc
es
shrb
add
pminub
int
fcoms
bound
cs
xchg
mov
lahf
out
cmpsl
xor
sub
and
dec
and
mov
add
xor
or
filds
loopne
dec
push
adc
mov
ret
xor
sub
push
push
sub
adc
mov
lea
push
sbb
inc
dec
lods
loop
lret
adc
or
and
in
pop
mov
outsl
push
xor
push
iret
xchg
mov
xor
pop
sbb
xchg
pop
lcall
inc
jmp
sbb
jmp
addr16
sub
adc
mov
hlt
dec
mov
push
or
je
or
cwtl
pop
or
fidivs
inc
adc
sub
and
loope
push
shlb
or
jmp
sbbl
and
inc
inc
add
arpl
repz
movd
or
mov
test
dec
addr16
int3
push
popf
mov
mov
jp
xchg
mov
sbb
in
xor
repnz
jle
inc
fs
jb
mov
dec
pop
leave
pop
adc
mov
pop
loop
or
sbb
pop
stos
cmp
lock
pushf
pop
int
jp
in
push
je
stos
mov
ret
in
sub
or
add
mov
xchg
inc
inc
push
dec
xor
mov
repnz
or
xchg
adc
pop
in
stos
xchg
xor
xlat
loope
dec
mov
jle
dec
mov
gs
push
nop
leave
cmpsl
dec
nop
or
inc
inc
test
inc
sub
jl
mov
add
arpl
call
push
mov
dec
mov
or
dec
and
adc
jg
fsubl
jl
loope
cmp
dec
cmp
lock
mov
or
jp
jp
push
inc
dec
dec
xor
sbb
jle
mov
fldt
or
pop
outsl
sbb
js
hlt
jl
test
rcll
lea
pop
pushf
inc
jge
adc
adc
movsl
or
test
inc
test
icebp
inc
jmp
rol
jge
mov
mov
adc
sbbb
push
jle
xchg
xchg
mov
dec
mov
add
and
cmp
mov
nop
adc
test
jle
pushf
mov
xchg
fldcw
add
pop
movsl
jo
mov
pop
pop
mov
mov
and
xchg
int3
push
xchg
mov
sub
cmp
mov
or
adc
ljmp
sbb
xor
movsb
and
jmp
pushf
cli
sub
andl
or
xorb
sbb
jl
daa
test
sbb
es
adc
ret
inc
push
popf
cmpsl
fcmovnbe
push
rorl
add
jmp
xor
sub
mov
or
sbb
cmp
in
cmp
cbtw
cltd
pop
out
in
lea
xchg
notl
push
pop
mov
out
jnp
add
or
inc
jmp
add
call
add
push
sub
cmp
and
dec
out
cwtl
inc
setns
mov
divb
jns
ss
sub
lret
popa
loopne
cltd
and
scas
fiaddl
dec
loope
es
inc
das
sub
lods
mull
pusha
clc
sbb
xchg
pop
mov
mov
ret
sbb
test
push
or
sbb
pop
addr16
lods
inc
test
lods
int
adc
dec
and
cmpsb
jns
and
jo
loopne
inc
or
in
or
cmpsb
sti
ja
and
insl
inc
jmp
sbb
cltd
cmp
jae
lds
add
add
cltd
mov
pop
xchg
lret
jge
pop
test
pop
fbld
push
ret
cltd
sub
pushl
aad
sbb
dec
mov
mov
push
sub
out
mov
popf
cmc
sub
mov
sbb
andb
mov
jne
shll
in
xor
arpl
xor
lods
and
roll
idivl
cmpsb
mov
add
outsb
mov
loop
js
cmp
imul
ficoms
jns
sub
ret
pop
in
ss
nop
test
push
fs
enter
fsts
lock
cld
lods
in
sub
push
bound
cld
das
inc
and
ja
xchg
inc
push
fsubrp
ret
mulb
fdivrl
push
call
daa
in
jns
iret
jbe
popf
jo
sub
adcl
sub
mov
pop
insb
jp
sbb
lea
pop
jge
lcall
fs
push
lock
push
push
je
and
cli
mov
and
inc
in
das
adcl
arpl
add
adc
dec
lea
jp
jp
lods
gs
fisubs
loop
pop
sbb
lea
pop
movsb
jo
mov
mov
divb
cmpsb
adc
ret
mov
lods
adc
mov
or
imul
adc
leave
add
cmc
divb
cmp
into
jge
push
cmpsb
pop
push
add
jg
repz
adc
ljmp
cmpl
or
dec
lea
jmp
sahf
mov
or
popl
add
sbb
pop
mov
popa
mov
lahf
in
xchg
popa
pushl
or
mov
pop
push
fs
mov
fsubp
ja
mov
std
adc
pop
mov
jae
lahf
rcrb
sub
pusha
cld
jns
add
pop
pop
stos
cmp
cltd
imul
idivl
data16
mov
xor
pop
lcall
inc
into
or
jmp
lcall
jo
loope
loopne
ret
aas
dec
loope
cmp
cmp
je
lds
or
loopne
shr
jmp
inc
cmpsb
cld
adc
sbb
or
or
adc
sbb
pop
dec
fsubrl
or
stos
in
shr
repz
cli
ljmp
cmp
call
incb
jle
sbb
adc
adc
and
xchg
aad
adc
int3
mov
lds
and
roll
pop
xchg
outsl
mov
cs
mov
in
pop
dec
mov
sub
call
xchg
push
mov
das
push
jno
bound
ss
sbb
into
jae
outsl
jbe
pop
push
orb
fldenv
out
movsb
enter
xchg
into
add
adc
pop
cli
test
pop
mov
pop
sbb
adc
sbb
jle
ljmp
dec
pop
inc
shl
jbe
js
adc
sbb
stos
int3
enter
out
mov
arpl
fdiv
cmp
mov
push
inc
ret
xor
adc
ja
jp
pop
icebp
or
cwtl
pop
sbb
mov
es
sbb
scas
jne
lock
iret
nop
lods
outsb
lret
sub
lock
or
cmp
add
mul
jae
fxtract
rorb
push
jb
outsl
jo
imul
mov
jnp
sub
js
add
inc
lods
mov
mov
sub
rclb
pop
push
dec
enter
mov
or
les
adc
in
or
iret
lods
int3
roll
dec
ficomps
dec
hlt
xchg
mov
je
or
lea
jge
ja
sbb
adc
aam
jecxz
mov
jmp
fsubl
lret
mov
mov
fdivr
clc
add
out
mov
aas
pop
outsl
sub
rolb
dec
roll
or
lock
sub
or
repnz
stc
jo
in
lods
pop
out
sub
mov
ja
dec
fcoml
outsb
add
jmp
aas
sub
or
add
add
add
jle
push
mov
or
adc
jmp
push
inc
add
testl
cld
outsb
mov
mov
jmp
fdivs
in
dec
xchg
scas
sub
sub
jnp
scas
and
out
push
push
mov
xor
jl
movsl
and
ret
cmp
arpl
je
mov
sub
filds
enter
cmp
cmp
and
sub
ja
mov
pushf
jmp
mov
mov
movsb
mov
daa
call
popa
sub
imul
shl
mov
les
mov
xor
adc
add
addr16
sarb
xor
adc
fcomps
dec
cmp
mov
jmp
cmpsb
sbb
push
ja
jl
nop
stos
mov
jns
add
sub
sub
andb
sbb
pop
incl
mov
sbb
fbstp
clc
dec
aam
push
pop
pop
clc
hlt
repnz
ja
add
cmp
movsb
xchg
mov
add
pop
cli
xor
inc
lret
fs
mov
insl
jne
andl
push
adc
out
jl
cs
in
in
nop
mov
leave
xchg
mov
loope
imul
and
and
jmp
sbb
popf
pop
mov
xlat
mov
jnp
nop
xchg
pusha
enter
lea
xor
mov
lods
mov
mov
or
cli
rcrl
jg
push
adc
and
sub
inc
aas
sub
icebp
pop
cmp
and
jae
dec
fdivrs
rcrb
sahf
or
cmp
push
shrb
adc
ljmp
mov
jo
sub
pop
dec
mov
movsb
and
inc
adc
push
shr
pop
jo
xlat
xor
fst
outsb
fnstsw
push
xchg
je
rorb
xor
cmpsl
movsb
loopne
cmp
or
decl
adc
inc
addl
mov
mov
rolb
jl
sub
hlt
sub
fimull
cmpsb
jge
add
xchg
cmp
dec
hlt
sbb
push
dec
mov
leave
je
pop
jl
mov
jle
sti
shrl
adc
xchg
clc
decl
lahf
ljmp
adc
or
dec
push
pop
adc
push
leave
cwtl
jle
loope
lods
jno
sti
hlt
insl
popf
fists
xchg
push
and
pop
daa
and
pop
sbb
mov
jnp
add
push
inc
das
push
jle
inc
inc
cmp
cmpsb
cmp
add
pop
jle
or
or
or
push
ss
and
push
sub
jae
xor
adc
jle
push
test
lds
pop
push
pop
sbb
icebp
cli
push
sahf
sbb
lret
mov
imul
cmp
adc
xchg
movsl
aam
inc
jl
dec
cld
imulb
dec
pop
mov
adc
xor
fisttps
lock
sahf
xor
or
mov
xor
xor
je
push
rcl
and
lret
inc
xor
mov
test
inc
int3
aaa
or
test
enter
mov
adc
ret
cmp
xorl
dec
mov
pop
dec
pushf
xchg
mov
test
cmpsb
dec
sti
and
je
sub
xchg
shrb
out
cmp
dec
mov
xchg
or
outsl
daa
dec
sub
ret
ja
jmp
inc
mov
call
mov
pop
stos
and
xor
lds
xchg
lds
in
pop
xchg
sub
pushl
dec
jne
sbb
and
mov
js
mov
mov
or
sub
push
inc
or
stos
adc
jb
jl
shrb
loopne
ret
or
mov
bsf
fidivl
repnz
iret
das
filds
and
inc
jmp
mov
js
cltd
ja
xrelease
jo
pop
cmp
mov
and
add
push
or
jg
inc
mov
pop
cmp
lret
call
lock
lock
adc
cltd
push
cmp
mov
mov
xor
ljmp
fldenv
mov
lret
push
pop
subl
lret
add
movsb
push
pusha
mov
mov
fcoms
add
jae
add
mov
jnp
lahf
jnp
jge
inc
mov
dec
adc
mov
sub
pop
push
loopne
adc
std
jmp
mov
movsl
push
sub
clc
in
fnstsw
cmpsl
jg
xor
adc
insl
adc
cmp
pop
int3
ror
andl
xchg
xchg
ret
mov
jae
inc
movsl
pop
mov
test
icebp
add
xor
adc
jmp
ret
jne
adc
leave
cmp
loope
ds
sbb
sbb
jge
or
loope
cwtl
callw
call
gs
jmp
sbb
and
or
pop
in
xor
add
testl
js
shrb
dec
add
out
mov
xchg
mov
mov
add
cmp
jae
pop
sbb
or
xchg
dec
sub
mov
dec
fs
dec
stos
sub
inc
sub
adc
mov
addl
pushf
mov
xchg
adc
sbb
dec
jo
push
xor
insb
pop
sub
xchg
in
or
push
hlt
mov
test
inc
pop
jg
mov
add
add
test
sub
mov
mov
adc
pop
mov
inc
cmpsl
cmp
fs
pop
sbb
and
inc
xor
and
xchg
cmp
adc
les
popa
mov
cmp
push
inc
cmpsb
in
stc
pop
sbb
test
shlb
inc
jmp
ret
movsl
or
repnz
push
add
scas
repz
sti
mov
mov
test
and
sbbl
repnz
movsb
and
mov
daa
popa
outsb
adc
mov
sbb
mov
xchg
cld
dec
leave
mov
dec
test
mov
mov
cmp
xchg
push
idiv
aam
test
nop
movsl
shrl
inc
sub
fsubrl
outsb
adc
mov
fidivrs
mov
notb
or
clc
andb
jmp
cwtl
cmp
rcl
sbb
test
or
xchg
das
inc
push
sub
jb
rclb
popa
xor
sti
shll
pop
mov
je
stos
inc
pop
sub
mov
jns
sbb
xor
dec
mov
sbb
nop
add
pop
pop
shrl
in
and
mov
push
cwtl
mov
nop
push
adc
aam
test
cltd
and
insb
sub
repnz
inc
mov
sub
int
xor
sbb
stos
ret
lahf
sbb
fsubs
push
in
xchg
or
pop
dec
push
xlat
xchg
mov
adc
xchg
jmp
repnz
adc
sbb
out
in
push
clc
mov
cld
xchg
mov
dec
xor
rcl
in
jmp
leave
push
mov
mov
inc
xor
pop
mov
pop
mov
cld
mov
or
and
adc
pop
pop
fnstenv
or
leave
arpl
dec
adc
ljmp
xor
xchg
pop
ljmp
sub
xchg
les
xor
bound
xor
call
and
nop
int
cltd
movsb
xor
dec
ss
inc
hlt
sub
push
dec
dec
in
sub
add
mov
cmp
jmp
test
frstor
inc
hlt
stc
fildll
mov
shrl
adc
pop
mov
sub
inc
inc
rdmsr
add
xchg
add
or
flds
shl
dec
or
lock
xchg
enter
adc
filds
nop
je
andnps
cmp
mov
nop
sbb
jnp
arpl
xchg
pop
xchg
push
xchg
stc
push
or
lea
ret
je
daa
syscall
cwtl
leave
add
add
or
cmp
dec
xchg
pop
and
addb
dec
mov
jg
mov
xor
and
movsl
sub
in
das
nop
sbb
test
adc
cmp
inc
cmp
outsb
lock
aam
repnz
push
ret
ja
or
or
ss
jmp
push
mov
cmpsl
or
mov
aaa
push
shlb
nop
movsl
insb
xorb
adc
cmpsb
ja
mov
psubusb
lods
test
imul
mov
push
mov
sub
lock
jne
pusha
outsl
lods
wrmsr
mul
sub
pop
pop
push
adc
xchg
in
inc
fdivrl
icebp
inc
push
and
lods
lea
cltd
mov
cmp
leave
cmpb
mov
pop
scas
sub
mov
loopne
or
ljmp
call
je
jp
mov
fdivl
add
and
push
mov
cmp
adc
push
inc
mov
subb
sub
add
jno
test
or
lods
pop
hlt
sub
bound
outsl
lods
pop
dec
flds
mov
or
sti
push
mul
inc
or
addb
ljmp
jne
xor
mov
xlat
push
mov
das
inc
imul
jo
or
cmc
xchg
jo
cmpsl
imul
aad
aaa
cli
pop
mov
pop
xlat
mov
dec
repz
cwtl
inc
pop
ror
into
jge
mov
inc
loopne
jle
cmp
inc
xchg
push
push
lock
xor
or
sbb
je
enter
mov
lcall
sub
pop
xor
inc
mov
mov
dec
daa
and
mov
cltd
cmpb
mov
outsb
insb
mov
sti
les
rol
jg
adc
mov
push
movsb
cmc
push
add
sar
test
decl
ljmp
mov
sti
push
dec
push
pushf
xor
push
push
push
fstpl
imul
push
dec
xor
outsl
pop
push
rcrb
pop
inc
nop
adc
js
mov
stc
dec
push
push
push
hlt
insb
aam
push
add
out
xchg
nop
scas
cwtl
mov
enter
dec
and
dec
xchg
sub
or
ret
hlt
push
push
imul
jmp
cmpsl
frstor
xor
stc
insb
adc
mov
fisttpll
clc
inc
jl
sub
push
dec
xchg
sahf
in
dec
out
pop
mov
mov
inc
xchg
lea
add
push
xchg
xchg
hlt
cld
jns
inc
adc
test
cld
sub
mov
push
das
xorb
mov
jg
inc
dec
jo
add
add
pop
pop
mov
fbstp
xchg
or
mov
xchg
add
dec
pushf
mov
and
jo
lret
add
and
cmpsl
in
jno
jl
mov
push
aaa
mov
sub
jg
mov
sub
sbb
jno
ret
sbb
sub
in
pop
ret
mov
pop
sbb
jne
jne
pop
jne
cmpsb
inc
inc
loopne
ret
mov
fnsave
add
fsubl
enter
add
pushf
xor
add
sub
stos
in
sbb
jmp
outsb
call
xor
scas
sti
push
and
bound
iret
dec
jne
into
orb
outsb
jp
call
pop
in
popa
inc
sub
push
inc
jmp
mov
nop
or
sahf
outsb
fldenv
fwait
cmpsl
cld
sbb
or
aaa
cld
mov
and
inc
pop
lods
push
mov
sub
push
and
pushf
pop
jbe
pop
xchg
or
mov
mov
push
fdivr
pop
dec
jmp
mov
imul
loope
and
adc
push
dec
cmp
mov
mov
xor
dec
xchg
in
daa
mov
pop
dec
fs
in
outsl
aam
jo
fcomps
mov
push
fists
lods
mov
mov
jle
xchg
ret
or
rcr
es
lods
pop
push
xlat
mov
mov
scas
xchg
subl
push
jmp
sbb
testl
fcoml
rcrb
pop
es
jmp
sub
cltd
add
rorb
jnp
hlt
pop
test
or
inc
xchg
push
xor
daa
dec
mov
nop
inc
sub
sub
and
sbb
rep
xchg
stos
inc
sbb
add
add
adc
inc
xor
add
xor
xor
mov
adc
andb
rorl
mov
and
pop
pop
and
and
push
push
das
dec
pop
fmuls
es
aad
sub
push
addr16
fprem1
push
inc
out
xor
or
pop
out
push
or
jmp
xchg
fildll
enter
pop
je
ss
repnz
frndint
pop
pushf
ljmp
fs
in
mov
ret
mov
adc
int
sub
mov
aam
les
pop
out
rorb
jmp
sub
cwtl
insl
negl
insl
lods
sub
clc
mov
jb
jge
sbb
lds
xchg
and
fsts
outsb
lods
inc
add
bts
jmp
ds
inc
push
shlb
incb
aam
rcrb
mov
and
add
je
mov
adc
mov
pop
aas
into
xlat
aad
out
insl
in
cs
xchg
pop
cld
push
adc
add
cmpsb
hlt
dec
adc
fcompl
shr
cld
push
xchg
jecxz
je
or
adc
add
jnp
jl
push
insl
pop
xchg
std
cwtl
es
cmc
dec
mov
cltd
mov
cld
xchg
mov
adc
movsb
and
xor
in
and
and
je
adc
hlt
sub
add
cmpsl
or
sub
sub
mov
int
pop
xor
dec
lock
hlt
or
adc
lahf
add
push
je
push
dec
cmc
adcl
lcall
jnp
int
dec
fwait
mov
pop
push
mov
xchg
cld
jmp
testb
fwait
mov
jmp
sahf
jl
pop
scas
sub
ret
sbb
inc
xchg
mov
imul
mov
push
mov
pop
adc
repnz
in
bound
lea
in
adc
scas
out
mov
adc
inc
adc
stc
insb
pop
test
fwait
or
dec
dec
fs
or
push
jl
mov
adc
mov
data16
adc
out
dec
std
cltd
or
sbb
mov
xor
pop
or
xchg
gs
inc
add
test
mov
pop
xor
sbb
pop
cltd
mov
adc
div
inc
cmc
or
sbb
mov
push
sub
sbb
and
push
popf
lret
mov
push
nop
jl
xchg
inc
popf
in
pop
adc
imul
push
in
stos
push
hlt
push
adc
sahf
movsb
ljmp
mov
sub
mov
and
push
dec
adc
rclb
pop
or
ja
cmp
stos
popa
sti
lea
sahf
les
sahf
scas
iret
xor
mov
stos
in
or
dec
jecxz
or
jae
push
test
mov
dec
inc
mov
jp
cmovp
call
stos
sbb
stc
cltd
lcall
je
fisubs
hlt
sahf
jno
cli
push
fs
fsubl
js
jle
pop
lret
and
testl
inc
ds
ds
cmove
push
inc
mov
pop
pop
int
sub
into
mov
sbb
in
pop
mov
pop
jbe
mov
and
dec
out
or
push
jbe
fs
or
ljmp
xlat
gs
das
jno
daa
pop
loopne
fbstp
pop
das
xchg
sti
in
loope
sub
inc
or
jmp
or
mov
pop
jg
shr
add
call
and
mov
mov
clc
stc
scas
mov
adc
dec
xchg
and
mov
loop
insb
push
pop
pop
and
adc
sub
xlat
push
push
sub
hlt
test
mov
call
ja
lret
mov
enter
lcall
add
and
dec
stc
pop
int
mov
inc
sarb
cmc
adc
jmp
or
or
outsb
lret
xchg
hlt
mov
mov
int
enter
dec
cwtl
dec
adc
clc
mov
fnstenv
inc
mov
pop
sub
add
sbb
xor
outsb
lret
push
inc
rorl
mov
adc
pop
mov
dec
jb
xorb
mov
andl
lods
adc
and
xchg
sbb
add
cmpsb
adc
sbb
mov
pop
or
sub
or
imul
or
fdiv
ret
push
and
add
movsbl
das
xor
scas
sbb
mov
xor
push
jns
test
hlt
les
push
and
adc
mov
sub
and
dec
insl
inc
pop
pop
aaa
push
out
ret
jmp
xchg
call
dec
inc
pushf
adc
inc
push
xor
add
mov
clc
sub
xchg
sbb
mov
jo
xchg
insl
stos
imul
or
insb
inc
pop
push
insb
lret
rcrl
int3
shr
pop
and
inc
dec
cmp
ret
xor
sbb
mov
jo
inc
cmp
add
push
mov
mov
pop
mov
adc
mov
aad
jne
in
mov
or
push
or
rolb
scas
sbb
mov
xchg
int3
fiadds
pop
orl
and
outsb
jg
bound
mov
xchg
sub
add
cmpsl
mov
ret
xor
decl
add
ljmp
adc
dec
imul
ljmp
xchg
push
enter
or
mov
jg
adc
pop
in
inc
xchg
mov
enter
sub
pushf
mov
mov
outsl
insb
or
pop
jae
cmp
mov
ret
jecxz
push
adc
cmpl
imul
xor
push
inc
mov
push
push
xchg
jne
in
jne
rcll
rolb
xchg
adc
pop
sub
adcb
dec
iret
mov
lods
push
loop
xchg
out
cwtl
xor
cmp
je
sub
jp
cmp
ljmp
mov
sub
push
jecxz
cwtl
xchg
and
jge
leave
mov
pop
or
cmpsl
push
dec
push
repnz
inc
xchg
sbb
sub
ljmp
jo
jg
xor
mov
jo
or
xchg
lods
cwtl
pop
xchg
xor
clc
or
addr16
inc
push
cltd
test
into
clc
ja
cmp
dec
sahf
std
outsl
ja
int3
nop
push
adc
std
mov
jg
cmp
test
pop
out
cmp
dec
cmpsl
outsb
je
cmc
push
imul
stc
sbb
xor
xchg
test
loopne
or
and
jb
push
add
enter
fsts
popa
jne
mov
inc
cmp
dec
inc
adc
shufps
ret
xchg
cmp
jle
and
sub
push
cmp
js
movsl
pop
mov
pop
fldenv
push
inc
test
add
mov
addb
push
push
xlat
dec
mov
leave
rclb
call
fdiv
pop
xor
mov
mov
cwtl
cltd
cwtl
gs
out
mov
pop
stc
adcb
fdivl
fcom
cld
fbld
orb
sub
rorl
lods
pop
sub
or
mov
cltd
cmpsb
jle
cwtl
enter
inc
push
ljmp
mov
nop
cmc
popf
mov
mov
test
sub
xor
cmpsl
out
inc
pop
pop
out
xor
mov
cmp
bnd
mov
dec
push
fildll
cltd
in
xchg
push
fsubs
sbb
sbb
adc
stos
inc
adc
mov
fbstp
mov
push
mov
mov
in
add
add
rolb
es
ja
inc
int
mov
mov
jmp
es
out
adc
stos
movsl
sahf
pop
sub
sbb
jge
pop
mov
inc
cltd
inc
hlt
jnp
rcrl
loope
iret
cmp
adc
add
imul
cmp
push
mov
mov
cmp
stos
mov
fisttps
push
adc
push
test
mov
sub
or
lds
sbb
in
sub
or
cvttps2pi
or
cmp
push
je
test
sub
mov
mov
jg
sti
loope
mov
jle,pn
push
fs
rcr
setge
mov
push
sub
pop
sbb
jne
scas
sbb
dec
loopne
fwait
mov
cltd
test
sub
inc
inc
ret
test
dec
jne
add
inc
push
ja
adc
fmull
sub
shr
xchg
and
pop
les
shrl
push
pop
sti
and
cli
arpl
lea
and
aas
pop
or
inc
push
push
adc
add
pop
pop
in
mov
ret
dec
sbb
cld
pusha
mov
insb
sbb
cmpsl
mov
push
pop
or
xor
mov
lods
daa
and
hlt
test
mov
push
inc
and
and
xlat
sbb
jb
out
lret
cwtl
push
lcall
imul
push
or
mov
mov
clc
rcll
gs
push
enter
fisttps
mov
cmp
aad
outsb
aas
sbb
sbb
lods
aad
popa
jns
ds
jns
xchg
cmpsl
mov
insl
fisubrs
mov
jge
cmp
push
decb
mov
orl
push
xchg
push
inc
mov
orw
sub
jnp
data16
add
sbb
movzwl
gs
and
sbb
cmp
adc
enter
sti
jne
mov
inc
stc
dec
pop
imul
lods
push
or
adc
mov
shlb
cmc
cmp
inc
mov
and
and
mov
sahf
clc
shll
movsb
insb
testb
adc
adc
xchg
sbb
cmpsl
in
rolb
shr
inc
add
cmp
lods
sbb
popa
stos
or
dec
and
or
ret
cmc
outsb
cs
sbb
mov
in
and
inc
or
adc
jne
sub
dec
jmp
mov
movsb
xchg
out
test
test
ror
mov
push
add
sar
adc
fcompl
dec
push
stos
adc
xchg
push
mov
dec
add
sub
int3
push
inc
or
xchg
dec
mov
push
mov
scas
xlat
adc
sub
sub
add
or
mov
inc
cs
and
mov
ljmp
lods
daa
rcrb
add
inc
jge
push
jle
pop
jne
enter
xor
fwait
push
push
adc
call
scas
sub
or
push
cmp
push
cmpsb
sub
add
mov
mov
add
int3
movsb
and
xor
add
orl
nop
lret
jge
sti
lret
pushf
call
stc
call
ret
cwtl
mov
lcall
nop
imul
pop
push
nop
jns
in
loopne
sbb
mov
sub
add
inc
pusha
loop
sahf
dec
xor
pop
sbb
test
sti
jb
pop
cmp
push
xor
or
jne
and
fsubl
jo
xor
icebp
rclb
mov
cmp
ret
dec
or
iret
xor
jle
mov
xor
xor
test
mov
leave
clc
icebp
sbb
or
cld
inc
in
daa
fists
and
xchg
call
aad
pop
mov
push
inc
dec
jnp
pop
sub
stos
jg
or
test
stos
test
lret
outsl
movsl
out
sub
cld
insl
and
mov
aam
push
mov
das
xchg
dec
push
int3
mov
adc
or
cmovl
js
lock
mov
mov
adc
fsts
imul
dec
inc
or
inc
std
push
mov
gs
xor
adc
std
imul
and
idivb
fdivrs
add
out
lahf
test
xorb
inc
or
xor
mov
and
inc
dec
inc
into
jmp
fimuls
jnp
out
and
je
jbe
jecxz
mov
mov
mov
subl
dec
icebp
mov
ljmp
popf
je
pop
xlat
out
sub
jmp
jg
sbbb
fsubl
aam
lds
sbb
push
or
inc
inc
xchg
fnsave
dec
xchg
inc
cmp
pusha
andl
cmpl
pop
inc
and
mov
inc
cltd
xchg
jge
and
or
int3
jnp
pop
pop
sbb
pop
adc
add
inc
and
ljmp
lods
jns
xor
jmp
pop
add
add
mov
and
mov
and
sub
sub
pop
hlt
les
enter
or
jne
jmp
test
cmpsb
adc
adc
shrb
insb
adc
lret
into
mov
outsb
mov
test
mov
mov
push
add
push
mov
sbbl
dec
pop
clc
mov
loopne
pop
mov
jmp
xlat
pop
aaa
or
adc
xor
mov
add
out
inc
cwtl
imul
sub
dec
cs
pop
fucomp
outsl
in
lret
xchg
pop
and
add
sbb
add
enter
dec
gs
repz
and
cli
pop
dec
dec
jns
gs
mov
daa
orb
cmp
popa
or
inc
je
xchg
push
push
cwtl
je
mov
imul
pushf
loopne
out
outsl
mov
imul
xor
mov
inc
adcb
and
xchg
or
xor
inc
insb
mov
adc
push
sub
data16
daa
jne
and
test
mov
adc
fstpl
iret
adc
inc
xor
sub
sub
mov
adc
sahf
fs
xchg
movsb
mov
mov
int
inc
adc
std
imul
ret
and
inc
or
pusha
ficoml
jge
int3
xor
mov
jae
and
add
test
jne
btc
push
add
data16
inc
and
dec
pop
mov
sbbl
push
add
cli
sub
jmp
mov
mov
loopne
ret
cmpsb
lahf
xchg
fadds
push
arpl
add
push
cmc
adc
mov
adc
loop
lds
in
enter
inc
and
pushf
mov
je
mov
scas
dec
lods
adc
jmp
or
rcrl
cli
adc
inc
test
pop
dec
pop
int
loop,pt
push
adc
push
cmpsl
jne
pop
mov
push
dec
test
jmp
mov
fs
fsubs
inc
mov
insb
mov
push
int
sbb
icebp
aad
out
cs
ss
push
inc
loopne
in
repnz
and
jg
mov
mov
ds
jbe
faddl
aas
into
test
adc
mov
inc
shrl
pop
mov
pop
jne
cld
jle
hlt
jle
xchg
mov
and
mov
int
sub
adc
cld
push
mov
push
fwait
repnz
in
inc
lds
push
in
mov
faddl
jge
mov
adc
sbb
lods
fcoml
push
cmp
push
and
jge
xchg
pop
and
dec
fs
sub
int
sub
repnz
push
test
iret
imul
xchg
and
out
mov
pop
sbb
int
sahf
mov
xchg
ds
call
jecxz
loope
adc
mov
mov
mov
jb
sbb
cwtl
sub
in
sbb
cld
push
fistpll
or
jge
xchg
idiv
and
cmp
sub
dec
inc
xchg
xlat
mov
stos
sub
adc
and
mov
mov
call
xor
jnp
lods
adc
mov
mov
mov
lods
aam
negb
out
in
push
mov
jp
rclb
add
ljmp
orb
adc
adc
inc
add
dec
sbb
mov
xor
pop
and
mov
out
sbb
mov
add
inc
dec
adc
cwtl
bound
clc
mov
dec
inc
rorb
sbb
icebp
addl
add
push
nop
imul
or
call
sbb
fldt
mov
pop
sbb
pop
cmp
adc
and
push
push
adc
add
push
cmc
cmp
sahf
inc
andb
mov
inc
dec
xor
jle
push
pop
int3
popf
and
pop
or
ret
mov
rcrl
sub
xor
jl
jnp
xchg
dec
pop
xor
mov
add
sub
adc
adc
dec
add
cmpb
daa
adc
cmpsb
adc
and
pop
cld
push
push
das
inc
dec
push
jle
push
inc
xor
test
cld
mov
pop
in
mov
or
sti
cltd
dec
mov
xor
shlb
and
add
jne
mov
insb
pop
lods
pop
mov
clc
out
movsl
mov
or
orb
and
dec
dec
or
jne
hlt
mov
xchg
shr
inc
pop
cmp
aas
xchg
cld
test
lea
mov
fiadds
cmc
dec
mov
subl
dec
enter
rcr
adc
jg
mov
add
add
xchg
aas
adc
js
and
and
push
xchg
aaa
dec
mov
cli
cmp
ds
lock
mov
and
in
jb
cmp
mov
sbb
mov
and
jp
jnp
jl
jge
jle
jg
inc
pusha
and
enter
enter
jb
cmp
imul
insl
in
jb
cmp
push
mov
and
push
enter
jb
cmp
pop
mov
and
pop
enter
jb
cmp
inc
mov
and
inc
enter
ja
in
jb
cmp
dec
mov
and
dec
enter
jb
cmp
sbb
mov
and
mul
dec
or
jno
sbb
test
test
xchg
xor
push
aad
lock
jb
ret
repnz
cmp
hlt
ret
fucomp
add
mov
mov
inc
jb
jo
mov
pop
inc
push
les
std
jecxz
les
xchg
add
push
inc
xchg
je
imul
out
xor
data16
pop
xor
add
push
lret
out
fs
or
jae
mov
or
inc
cs
fdivrs
nop
loop
add
inc
push
jp
xchg
call
loopne
mov
ds
mov
data16
xchg
lds
dec
je
mov
or
popf
jge
sbb
fldt
aas
imul
movsb
xor
lds
xchg
push
sub
dec
enter
add
push
push
adc
pop
jo
push
into
clts
fists
fisubs
push
or
popw
pop
inc
jle
lds
mov
jecxz
cld
sub
std
out
int3
wbinvd
lods
test
insl
inc
or
popa
arpl
push
pop
je
shl
dec
jl
stos
push
ljmp
or
dec
xchg
addr16
sbb
or
and
rorb
or
or
push
and
pop
and
leave
jecxz
test
sahf
cmp
insb
movb
sub
out
cmpsl
adc
jg
bound
adc
jle
jp
push
pushf
or
push
jbe
push
inc
or
inc
lock
or
inc
dec
cmp
jb
jne
sub
inc
or
cmp
xor
js
pop
movsl
adc
jne
lock
aam
repnz
std
incl
lds
andps
mov
scas
adc
and
sub
test
unpckhps
repnz
dec
cli
pop
mov
pop
sbb
and
or
xchg
xchg
aaa
rclb
add
enter
sbb
sub
push
aam
push
fmull
ds
dec
cli
cmp
subb
out
xor
push
add
dec
jmp
shlb
rclb
loope
and
mov
pop
pushf
mov
ret
fnsave
negb
stos
xor
imul
dec
xlat
xchg
gs
clc
insb
and
xchg
hlt
jmp
adc
push
adc
insl
mov
rorb
cmp
and
fs
gs
dec
nop
xchg
aaa
pushf
aas
cmpsl
inc
push
adc
leave
ficoms
cwtl
adc
sbb
jl
insb
loope
lret
sbb
fildl
pop
stos
or
xchg
loop
ja
loope
and
jmp
adc
jl
sbb
add
nop
popf
aaa
cwtl
sub
inc
add
and
shrb
enter
sbb
inc
push
popa
mov
dec
xchg
add
lret
and
sub
in
pop
sbb
pop
lds
insl
fcomps
add
in
pushf
inc
xchg
lds
sub
mov
pop
inc
and
dec
les
inc
lret
loop
mov
inc
pop
pop
mov
out
test
imul
movsb
in
add
push
inc
popa
loopne
jae
pop
in
or
sar
xchg
push
out
dec
mov
jmp
ss
add
aaa
and
jg
mov
pop
or
rcl
inc
xor
jno
add
aaa
mov
lods
xchg
leave
adcl
sbb
cmpsb
push
fcompl
xchg
push
ret
or
paddb
jecxz
fbld
arpl
out
lods
xor
cmp
xchg
push
inc
mov
jp
aam
orl
dec
pusha
mov
inc
daa
xor
sbb
inc
int
or
sub
xor
sub
sbb
mov
mov
cmp
popf
pop
movsb
jecxz
add
sbb
or
mov
mov
jl
shlb
sub
repz
add
or
adc
or
movsb
dec
and
test
cmpsl
in
nop
mov
shll
mov
inc
or
das
pusha
nop
mov
dec
push
gs
insl
leave
addr16
int3
adc
scas
pusha
inc
adc
inc
je
dec
int
clc
pushf
push
or
clc
fisttpl
rol
je
mov
in
insb
adc
mov
jl
daa
test
mov
inc
test
cwtl
adc
sahf
int3
jno
sbbb
shrb
inc
sbb
dec
insb
push
mov
add
adc
push
test
lods
daa
or
adc
and
cmp
sub
adc
mov
cwtl
adcl
mov
mov
hlt
inc
inc
int
mov
jecxz
and
sbb
mov
or
push
dec
arpl
nop
mov
bound
mov
inc
sbb
inc
pop
and
xor
leave
adc
xchg
repz
aam
adc
and
adc
and
mov
mov
add
or
mov
cs
xor
adc
or
sub
test
pop
or
shl
test
and
pop
push
hlt
ret
dec
mov
inc
ljmp
adc
popa
outsb
and
mov
in
push
xor
shlw
add
dec
jne
imulb
or
dec
and
jnp
pop
movsb
pop
and
mov
jb
jno
lret
pop
xchg
or
mov
mov
pushf
xchg
into
daa
shrl
lods
dec
xchg
stos
cmp
inc
popa
add
clc
jmp
jle
mov
and
sbb
jne
push
dec
dec
xlat
arpl
ficoml
fnstenv
rol
roll
push
inc
and
popf
xchg
shrl
or
jmp
push
cltd
ss
sub
pop
lret
adc
stos
or
inc
ja
jo
mov
inc
pop
push
test
mov
xor
pushf
loope
mov
jl
push
jge
and
imul
jecxz
leave
or
cmp
aaa
dec
leave
arpl
xchg
scas
sbb
loopne
sub
and
and
movsl
notl
mov
cmp
mov
sbb
xchg
pop
mov
rorl
sbb
xchg
jbe
push
orb
jp
or
pop
inc
daa
mov
sub
rcll
sub
push
roll
cmp
or
mov
push
cmp
inc
shrl
pop
jmp
dec
nop
jne
test
popa
pop
lret
sbb
inc
and
push
rorl
enter
jns
enter
add
aam
mov
lods
push
loop
mov
add
cmpl
or
push
je
xchg
loopne
les
aam
dec
std
adc
mov
pop
gs
sbb
xor
rcl
and
mov
popf
insb
outsb
pop
fnstenv
dec
aaa
xchg
imul
jg
mov
ret
mov
sub
enter
cld
imul
mov
pop
icebp
push
in
test
inc
mov
pop
std
add
ljmp
jb
mov
xchg
sti
adc
mov
jno
push
outsb
adc
dec
inc
imul
and
std
jns
xchg
inc
pop
push
mov
jo
scas
cmp
gs
dec
adc
test
xor
push
imul
pusha
aam
cmpsl
inc
orb
pushf
xor
pop
out
outsl
ja
push
and
or
jae
popa
insb
inc
adc
movsb
mov
push
push
add
add
jns
cmc
or
imul
inc
cmp
inc
dec
popa
push
insl
and
dec
mov
adc
push
cmp
je
test
jb
cmp
and
loop
popa
ja
mov
push
push
pop
dec
imul
inc
and
addr16
lahf
adc
loopne
je
push
and
or
dec
sbb
test
mov
pop
testl
or
shrb
cmpsb
jle
adc
pop
int3
push
imul
jae
icebp
dec
and
and
inc
jns
lea
cmp
sub
cld
dec
cmpsl
in
adc
mov
test
adc
mov
adc
in
xor
outsw
inc
jo
lods
shlb
jno
outsb
jne
insl
sbb
and
les
adc
loop
mov
dec
cwtl
push
and
jnp
movsl
push
and
xor
loope
mov
inc
enter
or
sub
cmp
movsb
and
sarb
or
push
les
pop
pop
mov
das
mov
js
adc
dec
je
jmp
fcoms
sbb
push
dec
adc
or
out
xor
xor
pop
push
dec
pop
inc
dec
ja
jae
push
test
inc
inc
push
dec
push
mov
add
inc
dec
dec
xchg
xor
inc
cmp
adc
dec
cmp
pusha
out
sbb
inc
ret
inc
or
inc
sub
push
inc
xor
xor
adc
dec
xor
and
mov
xor
jge
dec
mov
push
dec
xchg
push
dec
fdivl
push
movsb
sbb
push
add
or
or
sbb
punpcklbw
push
repnz
inc
pusha
enter
and
adc
inc
push
dec
push
or
push
dec
push
xor
pop
ds
mov
mov
movsb
sub
dec
popf
in
push
mov
sti
mov
inc
add
movsl
pop
scas
clc
sbb
push
push
lea
jl
daa
jg
orl
sbb
sbb
stos
jne
or
dec
adc
pop
or
inc
or
push
bound
and
mov
sbb
inc
or
cwtl
dec
jmp
paddd
mov
movb
jmp
popf
or
sub
adc
lret
int3
into
xor
mov
add
add
inc
mov
int
fs
pushl
mov
sbb
jo
stos
mov
inc
pop
ret
push
dec
in
add
inc
out
push
dec
cli
pop
pusha
mov
push
movsl
ja
xchg
adc
std
lahf
xchg
jno
inc
leave
mov
or
mov
xor
dec
pop
test
lea
dec
xchg
push
lods
test
int
xchg
xchg
decl
cmp
movsl
aam
mov
cmp
push
and
popa
cmp
pop
inc
cmp
jnp
sub
das
jo
mov
mov
add
imul
int3
sbb
mov
jbe
test
call
push
sbb
or
adc
mov
lea
fists
mov
test
add
cmp
push
push
xor
xor
rcr
push
les
xor
inc
and
sbb
mov
adc
rclb
sbb
add
xchg
rorb
sbb
sbb
xchg
cli
sbb
adc
les
popf
sarl
adc
test
sbb
ds
adc
or
jge
lea
jne
lret
cmp
stc
sbb
movb
fld
dec
repnz
enter
or
jmp
sub
add
or
ret
das
push
adc
les
or
jle
dec
fbld
lret
or
pop
and
xchg
jbe
push
shr
ljmp
jmp
pushf
xchg
aam
int3
mov
mov
dec
fcomip
mov
dec
sub
aaa
in
adc
sub
and
jo
test
dec
push
cmp
and
dec
sub
pushf
cmp
xchg
inc
mov
xor
leave
mov
sub
icebp
sub
dec
insl
push
cmp
add
xor
sub
sbb
adc
mov
and
push
sbb
sub
mov
xchg
ret
sub
jmp
out
mov
cld
or
xor
sbb
sub
stos
inc
mov
mov
or
bound
in
or
mov
loopne
and
push
push
or
sbb
loopne
jb
mov
leave
mov
out
mov
jl
push
loop
loopne
mov
scas
cs
inc
loop
imul
in
test
mov
loop
xchg
push
rorb
fs
addr16
cmp
insb
push
in
jne
loopne
loopne
inc
jecxz
jne
adc
movzbl
xchg
ljmp
cwtl
cwtl
cmpsl
clc
xor
and
jecxz
loopne
inc
or
push
lods
mov
inc
cwtl
push
sbb
xchg
cmp
or
push
fsubl
in
adcb
or
jns
or
xchg
and
bound
or
les
iret
in
in
push
addr16
in
mov
mov
adc
push
mov
gs
in
in
and
shlb
idivb
cld
outsb
or
dec
aad
pop
mov
lock
aad
or
and
add
bound
and
adc
mov
test
daa
inc
sub
popf
out
sbb
jnp
ficomps
leave
cmp
cbtw
push
insb
sbb
popf
pop
jl
adc
xchg
loope
movsb
cmpsl
mov
add
je
or
adc
inc
jecxz
enter
and
inc
add
in
call
xor
hlt
cld
lock
les
shlb
dec
add
or
sbbl
incl
loope
sbb
lahf
je
fcoml
lea
stos
pushf
movsl
mov
lret
in
lock
sbb
fdivrl
movl
dec
fisttps
xor
leave
adc
sub
lret
shl
adc
mov
out
gs
mov
hlt
shlb
iret
mov
jnp
rcl
scas
fwait
push
sub
cmp
in
pop
negb
push
fsubrl
clc
inc
or
adc
lea
loopne
push
inc
ja
mov
out
fidivrs
push
jge
mov
adc
sub
nop
or
fldt
add
push
loopne
or
out
into
invd
in
pop
or
or
mov
aaa
push
push
cmp
rclb
lret
sbb
scas
ret
xchg
pop
or
testl
aam
xlat
adc
mov
dec
push
in
and
ja
mov
jmp
adc
xchg
xor
popa
push
in
aam
test
cmp
pop
push
sbb
pop
and
mov
and
sub
enter
push
cwtl
insl
add
dec
test
and
adc
scas
and
ljmp
or
rclb
cwtl
jae
xchg
cmpsb
inc
movsb
int
call
add
mov
push
lods
aaa
inc
pop
xchg
xor
push
test
inc
push
pusha
or
es
xchg
jle
rcll
mov
ljmp
test
outsl
loope
push
pop
inc
dec
aaa
ja
iret
or
bound
xchg
dec
adc
or
add
aam
leave
cmc
rcll
mov
xlat
add
jge
pop
and
sbb
sbb
stos
in
gs
xchg
push
insl
adc
mov
cmpl
test
push
cltd
inc
pop
imul
jae
pop
push
je
fldenv
jb
stos
push
mov
cmp
dec
xchg
and
inc
les
or
shlb
inc
jmp
sub
iret
mov
cmp
movsl
push
repnz
cmp
gs
pop
stos
into
add
and
and
or
xorl
inc
aas
cmp
loopne
cwtl
call
aas
nop
inc
imulb
data16
pop
jae
rorl
mov
and
cmp
je
mov
out
pop
pop
aam
mov
push
movsb
test
sbb
ret
movsb
and
repnz
add
push
adc
and
addb
adc
dec
loope
incb
fisttpl
pop
shr
and
mov
or
push
shll
sbb
mov
cmp
je
testb
adc
jle
add
bound
push
add
fstpl
les
or
or
mov
ret
xor
enter
je
fisubrs
jmp
or
mov
pop
enter
adc
test
xor
or
popf
popf
add
inc
mov
adc
mov
imul
push
arpl
in
inc
cmpsb
and
roll
add
sbb
adc
movsl
dec
cmp
inc
add
sti
mov
test
mov
mov
mov
popl
fsubs
outsb
cmp
jnp
nop
icebp
inc
or
js
xchg
push
push
lods
adc
inc
icebp
mov
sbb
jo
out
inc
inc
hlt
jmp
movsb
dec
scas
lret
ret
adc
call
xchg
pushl
das
fstl
jnp
adc
or
das
lea
popf
aad
add
pushf
movsl
jbe
inc
fistps
xchg
mov
cmp
gs
stos
fisubl
bound
scas
bound
int3
call
hlt
xchg
sub
stc
data16
adc
adc
mov
adc
nop
iret
jb
test
sub
leave
dec
jecxz
out
push
nop
adc
add
scas
lret
hlt
add
dec
aaa
bound
pop
cld
jge
cli
adc
dec
loope
inc
sbb
outsb
les
inc
fnstcw
or
mov
fsts
sub
sti
and
jnp
push
lock
je
leave
das
repz
xchg
jp
int
rolb
js
adc
mov
inc
nop
gs
stc
push
pop
dec
or
dec
test
sbb
push
in
scas
xchg
imul
push
mov
jle
inc
cs
push
ljmp
jne
daa
enter
shl
std
mov
xor
sbb
adc
hlt
ret
stos
mov
dec
mov
adc
pop
ljmp
and
test
sub
test
and
inc
lahf
pop
andl
sub
pop
push
xchg
ljmp
and
sbb
sub
pop
mov
sub
sbb
and
and
sub
cmp
dec
pushf
push
adc
hlt
mov
daa
hlt
cld
mov
sub
pop
call
mov
hlt
or
push
mov
xchg
xchg
mov
sub
sbb
adc
adc
or
das
push
cmp
daa
xor
sub
push
sbb
cltd
and
and
rcrb
sbb
xor
sbb
and
mov
push
pop
mov
adc
push
addr16
inc
add
push
push
nop
and
or
loopne
cmpsl
lret
cmpsl
testl
aam
punpckhdq
fisttpl
mov
jne
cs
sub
cli
and
lock
mov
xchg
cltd
or
addb
mov
mov
nop
or
jae
or
or
inc
add
dec
in
call
lret
mov
fisttpll
shll
aas
dec
test
daa
jle
pop
jae
arpl
cmp
push
mov
xchg
fwait
pop
pushf
mov
mov
dec
jne
fistpll
jge
sub
mov
pop
outsb
push
sbb
xor
push
xor
lahf
xchg
int3
sub
pop
jnp
lods
mov
lea
xor
lahf
pop
movsb
xchg
std
rclb
xor
and
xchg
adc
shr
pusha
mov
dec
jns
jmp
sbb
mov
jcxz
adc
scas
or
mov
xor
addl
movw
dec
adc
mov
pop
cli
mov
nop
in
testb
inc
cs
pop
adc
jl
mov
or
pop
insb
push
cmpl
dec
inc
iret
nop
xchg
add
mov
and
movzwl
lea
sub
push
jbe
insb
inc
sbb
xor
jmp
xchg
xor
fsubl
or
push
dec
sub
mov
jo
lea
and
sar
xchg
mov
mov
bound
and
add
nop
dec
repnz
lret
jl
add
das
loope
add
lret
sbb
inc
add
cmp
sbb
mov
mov
push
mov
daa
pop
gs
test
movsb
pop
mov
sahf
mov
mov
jle
cmp
test
sub
stos
push
jne
cltd
mov
mov
add
fcmovb
sbb
jmp
sub
ret
pop
loope
xor
cmpw
sub
or
mov
mov
insb
inc
pop
push
inc
les
add
and
xor
mov
dec
call
dec
push
xchg
xlat
mov
push
push
mov
mov
inc
add
sbb
jge
inc
push
bound
sub
lcall
ss
std
lahf
sahf
sbb
push
push
push
cmp
add
bound
adc
push
or
jbe
push
sbb
xchg
jno
and
adc
sbbb
shlb
in
retw
and
mov
mov
sarl
repnz
into
clc
cmpsb
lock
or
dec
mov
hlt
add
mov
insl
inc
adc
mov
sub
decl
adc
sub
aad
movl
adc
sbb
stos
and
mov
pop
cld
push
sub
stc
js
add
hlt
mov
mov
xor
gs
jno
dec
frstor
jg
cmp
mov
std
xchg
dec
mov
sub
repz
pop
xor
push
sbb
fbstp
sub
dec
mov
loopne
push
inc
cmp
xchg
and
dec
or
test
jle
lock
jl,pn
push
and
enter
sahf
mov
fildll
fwait
pop
pop
clc
pop
jne
outsl
dec
fdivl
push
push
push
xchg
pop
cmp
push
jmp
loopne
xchg
sti
loop
movsb
add
xor
add
xor
push
gs
lret
push
add
add
jne
push
pop
sub
cmpsb
mov
or
scas
jmp
xchg
out
and
std
push
lahf
lods
push
out
pop
fadds
cmp
cmp
dec
add
dec
push
rcrl
scas
push
fsubl
fwait
add
mov
in
inc
jmp
roll
xchg
std
inc
sti
and
xchg
push
roll
and
ret
xchg
add
icebp
jmp
icebp
hlt
xchg
ret
mov
movb
push
fiadds
inc
ret
andb
or
jl
push
cmpsb
push
sbb
nop
pop
dec
pop
cmp
les
mov
js
inc
dec
out
mov
xor
sbb
and
insl
pop
pop
lret
push
sbb
stos
mov
adc
std
mov
push
push
cli
in
jns
add
sub
mov
sti
aas
adc
sbb
push
minps
leave
rcll
sbbb
push
out
loop
daa
out
and
loop
and
xor
test
int3
sbb
adc
in
inc
mov
imull
sbb
jne
or
add
xchg
pop
pop
mov
movsb
sub
lcall
add
push
push
popa
pusha
or
mov
cmpsb
or
adc
pusha
mov
jns
mov
add
jg
xlat
push
pop
mov
mov
jl
cmove
push
test
sub
xor
mov
adc
mov
and
decl
cmpsb
mov
xchg
or
lods
std
jmp
call
push
dec
mov
jne
cmp
jmp
add
jl
pop
push
call
icebp
adc
lea
and
jmp
adc
push
mov
sub
ret
fisubl
invd
sbbl
or
subb
jmp
movw
mov
jns
or
or
std
out
adc
insb
stos
adc
test
xchg
xor
pop
dec
and
andl
jne
popf
jno
adc
push
mov
sub
enter
stc
aam
jnp
mov
fisubrl
fdivr
and
dec
or
in
pop
mov
inc
out
push
adc
notb
jl
or
sub
loope
adc
or
add
mov
mov
or
mov
mov
add
inc
ljmp
dec
shrl
les
test
dec
call
ljmp
iret
in
bound
jo
mov
dec
fsubl
xchg
push
pop
mov
dec
push
cltd
lahf
ret
adc
scas
dec
adc
adc
lcall
xchg
rorb
in
xchg
mov
inc
lods
mov
loop
dec
push
and
hlt
nop
push
cmpsb
push
inc
lods
adc
adc
and
je,pn
inc
outsb
test
add
dec
enter
adc
inc
in
hlt
or
test
faddl
inc
push
mov
into
cmp
xor
adc
or
loopne
mov
push
xorb
rcrb
insb
ljmp
enter
test
pop
push
add
ja
lret
xchg
jae
gs
push
roll
loope
or
mov
pusha
out
mov
sbb
add
mov
popa
mov
cmc
scas
mov
jl
push
fdivs
lods
mov
call
dec
roll
les
sub
push
ds
or
ds
add
dec
inc
adc
out
pop
loopne
push
dec
out
fmull
gs
enter
and
in
mov
or
mov
dec
cli
push
pop
out
mov
test
add
pushf
adc
adc
or
das
repnz
aaa
or
mov
and
sbb
sbb
push
gs
adc
jmp
adc
je
xchg
filds
or
adc
nop
mov
sbb
in
pop
or
movsb
outsl
icebp
dec
int3
sti
add
inc
or
sub
or
xchg
inc
jns
or
sbb
in
aas
loop
fidivrl
fsubrp
in
call
pop
push
out
sbb
jne
xchg
test
adc
scas
xor
int3
sub
fs
cmpsl
add
cmp
sub
inc
hlt
and
dec
sti
and
adc
add
cmp
jne
pop
out
push
cmpsb
sbb
mov
fnstcw
xchg
mov
insl
mov
aam
cli
lds
cld
orb
and
or
or
inc
inc
mov
fcoms
adc
or
movsl
or
lret
loope
aas
cmpsb
movsl
dec
test
pop
mov
or
ret
mov
mov
or
lcall
push
and
sarb
mov
inc
js
pop
xor
add
lods
adc
clc
lret
fadd
push
pop
inc
mov
xchg
xor
rcl
inc
fs
lods
adc
lret
hlt
rolb
add
lock
mov
adc
add
or
in
sarb
mov
ds
fcmovb
shl
xor
imul
and
flds
pop
sub
lcall
mov
stos
es
add
inc
lea
shl
fnsave
sub
lret
es
leave
cli
and
adc
and
es
pop
clc
fistpll
xor
push
or
inc
les
dec
mov
jle
push
fsts
cmc
adc
in
and
pop
sti
pusha
int
sub
in
bnd
clc
cwtl
dec
xor
stos
xor
fnstenv
out
and
movmskps
lret
movsb
adc
pusha
das
punpckhdq
cmpsl
sbb
fcompl
stc
hlt
test
or
rcll
xlat
loop
int
int3
or
lahf
test
aam
mov
pusha
cmp
xor
sti
pop
test
add
test
or
pop
sub
sbb
or
push
jo
xchg
ja
orps
and
pop
or
or
adc
out
sub
fmul
pusha
or
mov
iret
pusha
or
icebp
push
xor
inc
sbb
jb
cs
jecxz
pop
mov
je
in
dec
out
jge
and
mov
pop
jne
je
xlat
les
adc
imul
pop
pop
xor
sbb
fnstenv
lods
lret
push
push
cmp
adc
push
pop
dec
pop
jecxz
bound
outsb
stc
repnz
xlat
push
mov
jp
inc
out
ja
stc
std
int3
or
lock
sub
lods
xchg
sahf
add
jns
or
xchg
and
in
pop
out
cmpsb
std
dec
jp
decb
repnz
xchg
shlb
add
or
lea
push
mov
cld
outsl
mov
or
lock
push
ds
sub
xlat
cltd
dec
mulb
jmp
es
outsb
cmp
sub
es
mov
adc
mov
loope
push
inc
loopne
and
ret
sbb
cmp
jne
dec
or
dec
sbb
dec
rcll
jp
adc
xor
or
sbb
sbb
fisubl
and
jne
add
add
adc
jg
mov
and
push
or
mov
fldenv
cmp
jge
adc
test
test
push
test
xor
add
inc
orb
jae
xchg
mov
push
push
or
mov
es
mov
and
fdivr
push
pop
mov
mov
stos
and
decl
push
mov
gs
or
or
push
and
test
xchg
adc
pop
push
and
push
xchg
xchg
dec
cmpb
loop
popa
dec
mov
inc
js
pusha
std
jo
repnz
xchg
mov
sbb
pop
inc
or
xchg
push
dec
pushf
pop
les
fs
sub
push
push
fwait
or
loop
insb
lahf
pop
lods
cld
imul
xchg
daa
push
add
dec
aam
and
pop
fldl
sbb
nop
hlt
rcrb
fimull
fldenv
sbb
or
pusha
or
dec
sti
dec
mov
ret
and
jns
or
mov
es
xchg
cmp
test
cmp
or
movsb
adc
jecxz
push
adc
ss
fisttpl
sub
jae
nop
call
mov
xchg
and
push
pusha
pop
cmp
jne
movsl
aas
jbe
orb
mov
mov
or
aam
cmp
add
lret
or
insl
cmpsl
lcall
jmp
and
push
inc
cmp
inc
int3
aad
and
inc
fdivl
inc
sbb
pop
cltd
js
mov
das
or
pop
and
xor
popa
js
or
dec
mov
add
mov
and
sub
cmp
in
push
inc
xchg
cmp
pop
in
xor
shl
pop
inc
dec
test
jns
mov
aam
push
mov
add
inc
cld
or
and
test
push
repnz
insb
cmpsb
inc
repnz
out
cwtl
inc
pop
frstor
inc
out
push
and
outsl
out
leave
lock
adc
mov
or
call
loopne
loopne
cld
pop
dec
cmpsl
int
sbb
subb
push
pop
mov
invd
loopne
mov
mov
dec
pop
out
dec
pop
leave
andps
xchg
int3
cmp
or
jecxz
xchg
inc
dec
jno
aaa
and
pop
adc
pop
hlt
mov
ret
fs
mov
mov
fs
inc
xchg
enter
push
dec
pusha
and
ja
or
lcall
inc
inc
hlt
push
dec
jns
in
xor
jge
rolb
jbe
cmp
movsb
movsb
push
mov
adc
int
insl
repnz
jns
les
sti
aam
subl
int3
sub
mov
xchg
fsub
xchg
mov
movlps
mov
pop
call
pop
in
xchg
pop
xchg
pop
cmp
ds
xor
push
fsub
in
incl
push
pop
xor
mov
fstps
jno
into
gs
xchg
inc
adc
fcoml
movsb
mov
out
add
test
popf
int3
pop
sub
dec
cmc
aaa
jmp
cmp
popf
in
test
sub
and
lahf
cld
dec
rolb
mov
outsl
in
lock
xlat
inc
hlt
or
shrb
cmpb
je
push
xchg
insl
movsb
xchg
into
int
fistpll
out
jp
sbb
push
xchg
movsb
push
or
in
movb
sub
fdivrs
pop
jg
xor
add
jl
inc
scas
xchg
mov
xchg
stc
int
ds
sub
jge
clc
js
cmp
loop
scas
pushf
dec
insb
mov
or
sbb
push
sbb
and
leave
movsb
adc
and
mov
inc
mov
call
inc
mov
arpl
mov
cltd
outsb
js
add
div
mov
and
mov
or
xor
mov
test
mov
sbb
pop
sub
add
sub
xchg
mov
push
fcoms
xchg
imul
push
sbb
xchg
pop
push
push
movsb
or
or
adc
pop
data16
ret
aas
sarl
fs
inc
adc
test
clc
jmp
or
sbb
lods
add
idivl
out
dec
push
push
or
adc
pop
cmp
jmp
fdivr
clc
mov
xchg
in
sub
cmc
mov
or
sahf
gs
add
mov
int3
mov
xor
mov
and
pop
lock
cmp
stc
dec
test
push
mov
int
jno
pop
sbb
pop
and
adc
sbb
push
jb
push
inc
stos
mov
mov
aad
sbb
in
test
mov
pop
adc
mov
or
sub
loop
and
cmp
mov
push
or
or
pop
inc
push
pushf
psubb
call
cmp
les
dec
sub
scas
sarl
daa
ret
lds
out
arpl
push
dec
push
aas
pop
push
push
xor
or
hlt
sub
sbb
jne
adc
lret
dec
adc
push
sbb
sub
lods
in
dec
scas
sahf
in
enter
imul
xchg
push
push
call
push
jl
loop
rcrl
push
jno
addl
pop
jbe
jbe
repz
cmpsl
xor
mov
xchg
es
adc
call
and
pop
cs
xchg
lcall
push
loope
or
lcall
mov
sub
inc
push
and
inc
sbb
jns
mov
inc
lds
jb
pop
sub
mov
outsl
repnz
push
hlt
shrb
loopne
into
mov
int3
and
shr
jle
daa
loop
test
xlat
jno
push
in
daa
frstor
rclb
push
push
cmp
cmc
mov
mov
jge
cwtl
orps
iret
movsb
fcoms
xchg
sub
lret
xchg
mov
flds
pushf
or
das
ja
jns
or
sub
xor
or
or
add
imulb
mov
pop
cld
sub
inc
push
xor
bound
je
cmp
sbb
mov
dec
dec
fists
je
dec
insb
or
in
push
cltd
adc
inc
mov
mov
mov
xor
or
mov
jmp
icebp
xchg
add
repz
sub
lret
ret
pushf
sbb
jne
push
or
pusha
sbb
mov
pop
movlps
and
test
sub
mov
into
scas
pop
xor
jmp
mov
and
jb
test
pop
jmp
and
leave
adc
pop
movsl
sbb
cmp
xchg
mov
repnz
push
rorl
ja
sbb
mov
cmp
ret
adc
mov
jecxz
and
out
or
or
sbb
lods
mov
jg
lret
cmp
dec
jae
int
imul
adc
int3
push
sub
mov
dec
hlt
lock
xor
call
fs
call
bound
fisubs
mov
sub
cmp
jne
mov
cmp
dec
dec
mov
in
sbb
xor
xchg
mov
push
stos
hlt
and
xlat
mov
pusha
cmp
sahf
sub
fadds
xor
xor
inc
xor
in
out
or
aad
movsl
mov
cmpsb
or
or
add
push
movb
or
stc
jp
int3
lock
adc
cmpb
jne
jge
adc
test
or
dec
ds
dec
gs
idivb
out
xor
inc
mov
iret
pusha
mov
adc
push
jmp
dec
jo
xchg
aam
mov
pop
imul
cmp
mov
mov
mov
dec
cltd
xchg
xchg
int3
sets
ss
inc
or
inc
xor
and
dec
fld
cmp
sbbb
pusha
pop
cmpsb
jbe
gs
clc
call
icebp
dec
mov
pop
sub
pop
mov
and
mov
jle
cmp
mov
inc
and
mov
pusha
imul
push
icebp
pop
movsb
cmc
imul
enter
adc
push
hlt
mov
aaa
xchg
iret
aad
popa
inc
sbb
pop
or
pop
inc
inc
or
lea
int3
outsl
lds
mov
or
daa
pusha
data16
outsb
ss
leave
adc
fs
insb
ljmp
fidivrl
rolb
movsb
imulb
lcall
sbb
sbb
and
jge
xor
jae
xchg
dec
jno
and
adc
es
pop
jge
cmp
push
ljmp
sub
add
xor
dec
inc
add
loopne
outsl
addb
popf
fwait
jecxz
shll
add
jbe
stos
in
loope
dec
and
adc
mov
inc
dec
sarb
or
sbbb
ss
sbb
mov
jle
xor
mov
rcrb
push
sub
push
sub
bswap
ljmp
call
sub
push
andl
mov
and
enter
pop
mov
push
inc
call
jmp
adc
inc
in
mov
pop
inc
sbb
imul
xor
cs
adc
push
ja
dec
out
adc
add
add
push
push
in
sarl
call
mov
or
add
stos
xchg
sub
add
inc
push
clc
and
sbb
pop
or
out
add
jbe
dec
and
inc
jmp
push
loope
jecxz
mov
xor
mov
test
outsb
adc
call
int3
push
and
sbb
sub
lock
gs
bnd
push
cmp
hlt
xchg
fstl
rorl
xor
fwait
and
dec
test
jne
xchg
xor
rcll
repz
add
mov
scas
sub
fimuls
adc
idivl
pop
mov
and
and
dec
mov
out
add
dec
xchg
enter
jns
or
xlat
inc
and
cmp
icebp
imul
and
imul
lods
gs
daa
push
int3
inc
lods
and
lods
in
push
and
dec
js
lahf
push
pop
dec
loope
inc
sti
je
lods
jge
push
lods
pop
sahf
push
pop
in
movsb
faddl
inc
loopne
gs
sbb
mov
ds
stos
ja
hlt
adc
or
idivl
mov
adcl
leave
mov
push
dec
dec
and
jb
fdivs
cltd
sbb
sbb
cwtl
and
inc
pushf
and
mov
jg
xchg
or
inc
call
fs
push
je
mov
or
movsl
and
cmp
mov
or
pushf
pop
rorb
mov
cmp
mov
dec
and
jo
xor
mov
mov
sbb
and
sub
ljmp
stos
xlat
sub
xor
enter
jl
test
testl
dec
mov
das
ret
pop
jmp
push
push
jno
mov
jg
push
adc
sbb
sbb
and
rorb
xor
xor
jge
sub
ss
inc
push
pop
push
jns
cmc
stos
jecxz
dec
adc
inc
orl
lds
add
jle
subl
or
sbb
mov
mov
rclb
xchg
cmp
test
jne
mov
shrl
cmp
dec
add
or
xchg
cld
and
xchg
repnz
push
jmp
outsl
adc
sbb
jo
push
int3
int
shrb
or
lea
test
dec
out
addb
ja
jns
xor
mov
or
ja
and
or
pop
ret
sbb
jne
xchg
ret
sarb
add
inc
xchg
push
mov
add
push
xchg
leave
inc
add
adc
add
dec
sub
sub
out
stos
push
aaa
sub
and
sub
movb
and
push
stos
sub
lret
mov
movsl
in
insb
repnz
testl
xor
and
xchg
mov
sahf
dec
dec
mov
or
ret
test
or
test
orb
hlt
sahf
shlb
inc
and
inc
mov
lock
fs
into
dec
mov
jnp
xchg
mov
movsb
cmpsb
lret
data16
and
outsl
daa
inc
mov
sub
mov
push
and
std
sub
xlat
mov
inc
cmp
dec
loope
nop
xchg
test
sbb
and
sbb
mov
add
and
xor
pop
adc
inc
lahf
and
insb
test
lret
test
and
xchg
push
fnsave
arpl
loopne
and
and
test
or
sbb
sub
mov
xchg
inc
add
adc
push
pop
icebp
out
imul
in
stos
add
inc
cmpb
je
xchg
repz
popf
data16
push
ficoml
ja
fnstcw
dec
jbe
cmp
cmp
rcrb
push
daa
dec
shlb
sub
das
or
sub
mov
sahf
inc
int3
pop
or
sub
sbb
rcll
fisttpl
cmp
jae
and
mov
jne
adcl
or
and
scas
aam
test
cs
push
jge
or
scas
idivl
stc
push
mov
cmp
aam
pop
sbb
leave
dec
test
shlb
or
stc
and
je
xchg
mov
pop
pop
push
and
or
xor
test
dec
and
xor
xchg
push
bound
mov
or
test
inc
mov
push
mov
leave
adcl
and
mov
cmp
jg
push
sub
xchg
in
adcb
je
cmp
cmp
mov
mov
dec
add
sub
dec
inc
or
inc
pop
mov
stos
ss
xchg
shlb
pop
push
dec
xor
inc
mov
pop
gs
fwait
lret
dec
stc
mov
mov
mov
daa
mov
mov
mov
cmp
mov
mov
push
or
sbb
out
aam
aam
sti
js
or
repnz
mov
pop
push
push
out
xchg
je
nop
mov
pop
add
lea
mov
shlb
xchg
sub
adc
and
arpl
sub
mov
dec
inc
jnp
and
and
dec
adc
or
cmpsb
mov
or
xchg
jle
or
mov
clc
iret
mov
mov
mov
stc
mov
pop
and
leave
jns
dec
or
loope
clc
loopne
in
sub
sbb
movsl
adc
shrl
pop
sbb
xchg
xchg
scas
dec
xor
ret
xor
pop
dec
cmp
jae
jg
mov
sarb
arpl
in
nop
push
or
test
fwait
push
fsubs
push
pop
lea
push
sbb
mov
jmp
adc
scas
mov
stc
imul
test
in
jl
rorl
test
xor
sub
mov
cmp
popa
icebp
imulb
pop
aas
push
shll
sub
xor
inc
out
adc
jp
or
or
jnp
imul
inc
loop
repz
ja
in
pop
shlb
lods
rorl
dec
jns
dec
push
shrl
clc
inc
add
or
sub
dec
sti
pop
fs
xchg
ficomps
scas
sub
stc
scas
mov
dec
das
push
mov
jo
mov
pop
dec
mov
inc
sbb
cmpsb
jo
aam
and
dec
dec
in
and
jecxz
lock
and
sarb
inc
sub
jp
call
adc
pushf
test
inc
loopne
push
or
jmp
jo
adc
push
mov
pop
icebp
mov
inc
mov
pusha
pop
push
mov
mov
in
mov
inc
dec
mov
lods
ds
pop
mov
scas
lret
add
hlt
inc
push
test
mov
xor
xorl
push
push
mov
fst
xor
cmp
inc
push
mov
andb
aaa
mov
icebp
sub
or
mov
mov
add
or
mov
mov
jb
inc
outsl
adcl
sbb
xor
enter
scas
sub
push
popa
je
gs
lret
push
call
push
cltd
xchg
mov
xchg
push
lahf
lahf
xor
shl
fsubrs
loop
ret
enter
lahf
insl
dec
sub
adc
or
jne
or
push
jle
ss
ss
xchg
pop
pop
out
jo
add
xchg
cld
inc
lret
and
dec
test
xchg
xor
mov
mov
aam
cmpsb
add
enter
movsl
push
int3
test
add
test
mov
movsl
aaa
inc
cmp
in
xlat
inc
movsb
lahf
leave
dec
mov
sub
shlb
das
lcall
fdivrp
and
jb
and
test
and
xchg
pop
add
enter
xchg
dec
incb
cmp
jge
cmc
push
xor
mov
fildl
loopne
cmp
jne
inc
in
dec
or
mov
add
xor
mov
jb
dec
pop
mov
dec
lds
push
sub
pop
pop
out
sbb
stos
repz
xchg
scas
push
cld
pop
jne
cwtl
fs
mov
and
idiv
sahf
mov
or
sub
imul
ljmp
adc
and
test
add
adc
push
mov
xor
mov
pop
cli
lock
sbb
sub
aaa
xchg
loopne
enter
mov
adc
xchg
jns
outsl
inc
mov
adc
mov
xor
sub
xchg
and
xchg
and
ret
jmp
imul
imul
pop
mov
movsb
or
mov
cmp
jg
daa
rcrb
stos
cmp
sub
dec
adc
add
lock
mov
je
in
and
xor
mov
in
out
fcomip
push
push
sbb
push
push
or
and
push
mov
adc
movsb
mov
cmp
rolb
or
cmp
jg
mov
or
jl
loopne
dec
ss
mov
ss
pop
jns
and
cltd
mov
push
inc
xchg
notl
inc
or
pop
dec
imul
and
mov
pusha
pop
adc
int3
mov
pushf
int
or
push
pop
lret
movsl
pop
or
testb
les
and
push
or
push
push
je
or
cmc
repz
jb
pop
lea
xchg
xor
xor
cwtl
insb
adc
cld
cmp
cmpb
xchg
or
sti
add
inc
mov
mov
xor
or
stos
cltd
xchg
sub
push
jge
pop
scas
jnp
pop
scas
insl
xlat
aas
loop
in
jg
mov
dec
inc
stc
dec
or
pop
xor
aad
je
out
xor
mov
lea
add
je
out
cltd
pushf
sub
pop
std
cmpb
lahf
xchg
cmp
mov
cmp
or
and
xchg
in
or
call
cmp
sbb
xchg
add
or
sbb
shlb
or
cmp
sbb
mov
sbb
mov
and
test
movsb
cmp
hlt
inc
cmc
enter
or
loope
std
sahf
insb
mov
lods
xorl
notb
outsb
jns
add
cmpl
mov
xor
sub
mov
xchg
adc
mov
adc
lahf
cmpsl
aad
xchg
mov
push
mov
push
mov
dec
dec
push
call
or
pop
sub
add
in
orb
xchg
lret
cmp
shll
lods
pop
adc
mov
imul
pop
inc
out
inc
sbb
and
cmp
xor
mov
enter
aam
mov
ljmp
dec
fwait
adc
popf
nop
sub
shrb
shlb
fistl
packssdw
mov
cmpsl
pop
pop
fdivr
in
xchg
scas
je
inc
test
movl
jb
sbb
or
lea
or
and
mov
lods
lea
push
adc
and
loopne
scas
icebp
xor
and
adc
push
push
mov
cmp
pop
adc
or
pop
push
dec
add
adc
sbb
adc
push
sub
xor
jne
xchg
and
cmp
loope
add
adc
jmp
mov
mov
jmp
mov
pop
pop
lcall
push
push
xchg
or
inc
lock
ljmp
in
mov
imul
test
cmc
or
test
inc
or
xchg
push
pop
dec
aad
dec
mov
movsl
sub
es
mov
pop
lock
sbb
sub
cmpl
push
cwtl
jnp
cmc
repz
fbld
xor
or
cmp
hlt
ljmp
push
cltd
and
andl
sub
jb
push
mov
ret
and
dec
dec
clc
cmp
dec
push
or
add
jle
int3
jne
mov
jmp
dec
push
jb
push
inc
sub
add
lods
jbe
push
insl
adc
and
push
dec
sub
aam
sub
inc
and
adc
mov
call
sub
pushf
aas
mov
push
addr16
test
aam
aas
and
sub
mov
adc
sbb
daa
jl
xchg
lcall
fsubrl
mov
mov
test
lds
in
fsubp
leave
ret
rolb
clc
movsb
or
ja
cld
neg
int
clc
or
pop
pop
lret
or
xchg
cmp
ss
push
fnstenv
les
hlt
add
add
jmp
inc
push
test
xor
inc
adc
decl
push
adc
outsb
mov
roll
insl
das
sti
add
stc
shrb
inc
push
sub
jle
mov
and
lock
adc
inc
or
js
adc
adc
cmp
ds
adc
loopne
xchg
sbb
mov
add
push
push
inc
push
xor
sbb
inc
dec
js
jno
jne
push
adc
icebp
jl
or
les
xchg
in
insb
adc
inc
mov
sarl
int3
xor
and
adc
scas
or
pop
outsl
sti
xor
xchg
cld
cmpxchg
pop
shll
mov
lods
cmp
and
and
int3
add
inc
jno
mov
xor
xor
adc
sbb
stos
ja
and
xor
or
dec
inc
js
outsb
jae
in
xor
add
ds
cmp
adc
push
imul
js
push
add
push
or
dec
fstps
and
outsl
lea
iret
clc
insl
inc
sub
cmp
add
sbb
aam
fildll
jo
out
fs
mov
push
pop
xchg
cmp
push
and
mov
mov
add
xor
test
cwtl
sub
aaa
lock
mov
loopne
aam
cmp
or
js
addb
sbb
popf
sbb
int3
test
push
mov
xchg
stc
jecxz
add
or
or
imul
aas
dec
inc
xchg
dec
and
add
add
mov
dec
lds
mov
ds
xor
mov
dec
jo
pop
sub
mov
lock
push
and
inc
jmp
lock
xchg
and
loop
insl
xchg
nop
out
dec
cltd
cmp
and
cmp
and
xchg
cmp
cmp
cmp
orb
inc
inc
loopne
cmp
test
clc
inc
inc
adc
movsb
push
mov
sub
sbb
adc
ficomps
scas
xchg
ret
mov
repz
out
pop
repz
dec
dec
aam
push
or
mov
int
outsb
sub
xor
xchg
stos
cmp
or
dec
mov
cli
fmull
fidivrs
xor
inc
js
out
mov
sbb
sbb
cmp
push
mov
lds
sbb
jno
iret
mov
push
mov
push
sub
jae
fdiv
mov
xchg
insl
dec
pop
andb
dec
sub
and
dec
mov
dec
rcll
or
inc
hlt
loop
sbb
lcall
stos
test
dec
sub
dec
nop
fs
jge
repnz
cmp
data16
in
and
call
fwait
daa
dec
enter
inc
sar
iret
movd
test
push
pcmpeqd
test
int3
or
sbb
clc
mov
adc
mov
dec
jno
jnp
jmp
xchg
inc
rclb
ja
mov
cmp
and
cmpl
jne
scas
and
sub
mov
mov
mov
rcrl
lahf
cmp
aam
movsl
jge
lods
out
and
dec
push
cmp
mov
inc
adc
push
mov
je
adc
pop
cltd
pop
into
cmp
and
jne
jnp
out
dec
jle
nop
or
ds
stc
adc
push
sbb
push
outsb
add
jns
dec
les
and
ljmp
repnz
mov
adc
jmp
mov
or
out
cmp
stos
lahf
call
push
sub
scas
xor
dec
dec
leave
sub
test
and
xor
push
test
add
dec
jne
lods
fistpl
sbb
xchg
mov
ret
push
adc
mov
cs
mov
stc
lock
les
xor
cltd
pop
out
ret
or
stc
fnstsw
in
sbb
cli
mov
push
loopne
dec
fldcw
sub
in
push
and
sarl
jnp
pop
test
mov
pop
and
mov
fisubl
imul
inc
fs
sub
xor
aam
loope
push
jns
push
xchg
mov
lods
and
pop
pushl
lea
and
adc
das
imul
cmp
sub
mov
jb
das
and
and
xchg
call
sbb
lahf
in
inc
push
sarb
jecxz
mov
in
call
test
mov
ja
in
bound
cltd
jns
data16
cmpsb
jle
pop
shr
xor
dec
loopne
dec
push
cmp
cmpsl
push
loopne
out
jmp
mov
xchg
mov
in
dec
xchg
xor
dec
adc
ds
mov
loopne
pop
cmp
insl
insb
and
xor
dec
lock
and
push
dec
or
xchg
dec
push
test
pop
adc
or
jl
fwait
adc
insl
popa
and
daa
inc
push
inc
imul
stos
lret
mov
lret
in
fmulp
lret
fisttpll
dec
mov
mov
jmp
xchg
jg
jno
dec
notl
pop
dec
cwtl
inc
adc
lock
jle
clc
movsb
lret
mov
fcompl
pop
pop
dec
mov
sub
dec
rcll
test
xchg
pop
push
push
lds
bound
movsl
pushf
dec
insb
inc
dec
xlat
xor
dec
or
lock
xor
add
add
stos
sub
pop
dec
cs
add
ja
nop
dec
mov
insb
sub
stc
imul
jp
lea
rorb
andl
inc
pop
pop
add
cli
inc
jne
test
icebp
insl
push
xor
cld
inc
inc
pop
arpl
dec
je
mov
sbb
and
inc
cmp
or
jns
inc
sbb
xchg
adc
fs
sub
cmp
mov
repz
icebp
jns
cmc
in
xchg
and
mov
dec
rclb
adc
lahf
movsb
into
pusha
cmp
jne
or
pop
mov
sbb
sub
push
jg
xchg
sbb
jg
pushf
into
cmp
jle
lcall
insb
adc
imul
scas
inc
push
test
add
sbb
mov
mov
lea
cli
sub
in
dec
xchg
cmp
loop
ss
and
sub
mov
clc
lods
jbe
push
js
xor
inc
mov
add
insb
xor
jbe
jmp
adc
mull
outsl
lods
inc
test
sub
mov
cld
shlb
push
pop
inc
adc
mov
push
lret
adc
or
adc
or
ds
and
and
pusha
sbb
testb
pop
push
inc
push
mov
and
dec
push
cmp
mov
and
imul
lods
mov
adc
movsb
jle
inc
fbld
lods
daa
call
test
hlt
insl
mov
pop
sub
test
or
push
mov
cld
or
arpl
outsl
insl
xchg
je
mov
fs
push
inc
dec
clc
xor
pop
push
jp
inc
xlat
mov
adc
push
rorb
mov
xlat
mov
or
test
cmp
inc
outsb
xlat
or
std
xchg
fisttpl
ja
mov
pusha
and
sbb
sbb
jae
jb
adc
inc
outsb
jne
in
and
icebp
push
js
pop
inc
dec
push
adc
test
add
push
in
cmp
mov
inc
cli
mov
cld
sub
pop
sub
add
push
push
jns
arpl
cmpsl
stos
xor
nop
or
scas
fs
adc
inc
sbb
rcr
fs
or
jb
xchg
arpl
cmc
push
jge
shlb
aad
call
std
jnp
cmp
popa
cmc
dec
xchg
sub
jns
fdivrs
inc
shrl
cmpsl
mov
lods
adc
push
loop
xor
hlt
push
push
js
les
cs
inc
mov
adc
test
inc
jp
jle
sub
dec
add
push
test
mov
movsb
xchg
test
jns
sbbb
mov
and
cwtl
bound
inc
test
lods
adc
bound
enter
inc
shlb
aam
fmuls
in
call
lock
adc
mov
into
adc
inc
or
xor
sbb
inc
sbb
sbb
and
sub
xor
xor
scas
shlb
pop
movsl
test
sar
int3
nop
mov
ret
pop
fxch
xor
arpl
sbb
xor
mov
xchg
and
xor
jl
mov
adc
sbb
mov
aam
sub
nop
and
inc
xchg
and
pop
mov
adc
pushf
adc
sbb
mov
adc
test
je
lods
adc
mov
and
adc
sbb
rclb
mov
push
inc
enter
int3
and
xor
shlb
xor
aam
inc
xor
fsubs
push
inc
fsubl
fs
loopne
je
in
js
mov
pushf
xor
in
and
xor
hlt
and
inc
clc
and
xor
cld
jne
cmp
jp
or
in
and
xor
or
xor
inc
xor
adc
dec
inc
adc
pop
xor
sbb
js
sbb
xchg
xor
and
lods
inc
and
les
sub
fadds
clc
xor
xor
adc
repnz
insb
dec
xchg
mov
arpl
push
add
je
gs
lret
daa
push
loope
push
inc
push
cwtl
xor
insb
outsl
jae
adc
jb
ja
movsl
jne
xor
imul
pop
sub
ljmp
lret
mov
push
lcall
dec
idivl
icebp
sub
aaa
cmp
jae
and
mov
inc
iret
adc
mov
arpl
jne
sub
inc
lock
mov
mov
cld
jae
jo
mov
dec
clc
push
adc
in
les
xor
mov
cli
inc
outsb
push
mov
xchg
adc
call
pop
xchg
sub
adc
jae
fs
bound
push
jns
dec
fwait
mov
jo
or
lea
imul
fadds
repz
ja
xor
xchg
test
test
lret
dec
adc
das
xchg
mov
adc
fwait
mov
adc
sar
icebp
movsb
mov
addr16
dec
jne
inc
inc
hlt
and
call
je
scas
and
jmp
push
add
popa
fistpll
and
push
dec
popa
xchg
fsub
inc
outsl
arpl
shlb
jno
test
scas
and
cli
or
call
sbb
adc
or
daa
lock
pusha
jno
mov
and
pop
push
add
cmp
jg
ljmp
lea
inc
add
cmpb
mov
loope
dec
cmp
icebp
call
ds
sbb
and
popa
lds
and
mov
dec
cld
out
and
inc
popa
sub
push
lea
ret
mov
inc
cltd
enter
or
push
cmp
mov
inc
fsubrs
and
or
inc
pop
pushf
nop
bound
repnz
xor
dec
mov
xor
jns
and
and
cmp
mov
sbb
arpl
adc
push
sbb
or
and
aam
inc
or
sbb
xor
gs
or
cmp
push
or
adc
addb
out
leave
pusha
cltd
sub
nop
pop
test
mov
insl
sbb
mov
inc
pop
imul
test
xchg
ret
std
data16
xor
call
or
into
xchg
and
dec
inc
add
cwtl
sbb
pusha
cmp
rclb
rorl
cmp
fisttps
push
je
rolb
outsb
jno
and
inc
push
sarb
adc
test
in
popa
cltd
fcoms
push
or
xchg
scas
and
hlt
inc
lods
or
inc
jns
mov
mov
popf
loopne
filds
jo
push
add
jmp
adc
sub
inc
out
push
es
cmp
add
ret
imull
adc
pop
or
and
push
cs
xor
mov
or
fistpll
mov
cli
imul
clc
push
cmc
test
mov
mov
cmp
add
enter
pop
xchg
xlat
xor
imul
std
adc
and
out
daa
cld
pop
inc
pop
dec
dec
inc
xor
inc
cmp
sub
cmp
outsb
int
push
pop
pop
mov
leave
mov
xor
in
les
das
jl
fdivrs
push
data16
mov
stos
fmuls
pop
adc
jge
mov
shlb
push
in
cld
fmull
inc
add
loop
insl
xchg
inc
scas
into
fs
fnsave
and
mov
popa
fs
test
jg
push
flds
test
and
jmp
or
push
inc
push
push
cmpb
add
gs
in
cmp
dec
outsl
or
dec
dec
pop
pop
dec
dec
push
test
repnz
jb
test
adc
adc
jns
xor
outsb
xchg
inc
gs
mov
insb
gs
xchg
cmp
push
push
adc
or
xchg
mov
rcl
test
xchg
nop
push
pop
inc
dec
mov
bswap
je
push
jge
xchg
push
leave
enter
sub
sbb
sbb
lea
mov
push
jo
adcl
inc
xchg
mov
xor
and
pop
push
sub
aam
and
loopne
rclb
loop
xchg
out
and
add
xor
xor
sbb
test
inc
pop
and
sub
and
pushf
sub
xchg
cwtl
adc
mov
push
adc
or
mov
adc
les
test
push
dec
cmp
dec
mov
dec
push
shl
idivl
sub
ljmp
xlat
test
mov
imul
dec
cmp
cld
mov
jb
pop
js
jb
inc
inc
test
jae
mov
sub
pop
mov
cmc
sbb
mov
sub
bound
push
and
mov
xchg
adc
sbb
jg
lods
clc
cwtl
push
jo
cltd
dec
popa
add
push
or
jno
imul
dec
or
dec
in
das
or
jae
xchg
cmp
push
shrb
adc
pop
jl
pop
loopne
and
or
or
adc
int3
pop
lock
cmp
cmp
call
adc
push
pop
loopne
xor
das
sub
add
push
jnp
xchg
mov
mov
jne
out
and
xor
jne
aas
dec
test
imul
aam
arpl
sbb
pushw
push
jb
inc
pop
inc
xchg
in
mov
mov
xchg
scas
shl
fmuls
mulb
dec
jae
pop
cld
add
lret
ljmp
and
pop
out
inc
test
in
pop
mov
popa
int
lret
cmp
or
push
inc
push
xchg
push
cmpsb
fdivs
and
or
leave
cmc
jns
xor
cmp
jb
push
cmp
jnp
mov
mov
daa
mov
mov
cmp
sbb
mov
and
xchg
and
and
and
sbb
mov
and
xchg
sub
sub
sub
sbb
mov
and
xchg
adc
adc
adc
sbb
mov
and
xchg
sbb
sbb
sbb
sbb
add
xchg
add
jb
cmp
sbb
mov
or
bound
mov
mov
mov
adc
dec
je
or
insb
loope
fs
dec
add
dec
lock
push
and
inc
dec
loopne
inc
adc
and
dec
rclb
sub
mov
mov
xchg
adc
test
or
mov
cwtl
and
insb
add
dec
hlt
xchg
mov
in
inc
and
js
fsubl
dec
aam
push
les
push
dec
mov
les
cmp
xchg
xor
xchg
inc
sub
sbb
xchg
adc
je
or
adc
fs
sbbl
xchg
dec
and
inc
inc
fmuls
xor
enter
rolb
sbb
cmpsb
js
dec
outsl
loop
adc
mov
or
pop
mov
adc
je
pop
pop
push
push
or
push
push
dec
push
lods
dec
js
jl
cld
and
xor
movsl
cmp
mov
test
jae
push
pusha
cmp
mov
adc
pop
orb
inc
sahf
addb
imul
lret
imul
sub
jns
jo
mov
inc
jo
and
mov
mov
addl
add
lret
jne
pop
adc
or
sahf
pop
push
sbb
shlb
and
dec
adc
lock
inc
mov
les
inc
arpl
and
xor
int3
sbb
mov
mov
and
les
sub
xlat
bound
gs
nop
xor
mov
rclb
in
andb
dec
fsubrl
jg
xor
jno
cmp
dec
stos
cltd
enter
bound
pushf
mov
adc
fadd
pop
dec
dec
ficompl
shrb
push
enter
and
enter
and
inc
fisubrs
sub
int3
test
lock
test
jle
mov
ljmp
test
mov
inc
cmp
sbb
rolb
sbb
pop
sbb
aam
xor
clc
xor
jae
lret
jno
mov
int3
sarb
inc
fdivl
aam
sub
stos
cmp
pusha
je
hlt
or
mov
gs
es
subl
inc
scas
loop
popa
je
mov
nop
test
test
mov
in
or
push
out
popa
mov
mov
fstps
das
in
push
sarb
push
sarl
xchg
cmp
insb
adc
test
cmp
divl
adc
xchg
repnz
xchg
sbb
dec
jl
dec
outsl
jl
jae
out
aad
mov
mov
dec
adcb
les
xor
inc
cmpb
push
sub
bound
push
push
cmp
inc
imul
daa
inc
push
and
imul
loope
call
push
sub
out
dec
imul
outsb
push
and
into
add
arpl
lret
or
adc
jbe
test
fs
inc
imul
xor
jb
dec
dec
popa
loope
and
pop
adc
push
adc
add
into
imul
insl
fsts
jo
pop
test
outsl
jb
aad
outsb
push
pop
in
and
stos
and
movsl
adc
insb
imul
dec
insb
sbb
or
mov
gs
pop
dec
pop
aam
and
xchg
cmp
in
jo
adc
xor
xor
outsl
sub
stc
pop
sbb
xchg
sub
or
or
jl
outsl
adc
sub
or
push
js
bound
adc
xchg
stos
dec
jg
xchg
push
sub
jbe
rorb
lret
and
shll
outsb
lods
lds
or
and
fstps
dec
daa
test
xchg
mov
out
aam
mov
push
or
add
mov
inc
daa
iret
adc
pop
cmpb
xchg
or
jg
or
dec
je
aas
xchg
xchg
and
inc
insb
push
lock
pop
imul
pop
inc
jo
inc
add
pop
pop
icebp
hlt
enter
adc
push
jp
in
mov
add
push
mov
push
inc
rclb
xlat
mov
dec
mov
and
nop
clc
dec
mov
inc
addl
test
dec
or
clc
sub
adc
decb
sub
mov
jne
inc
test
add
mov
sbb
xor
inc
in
xchg
cmpl
or
dec
and
or
jnp
sbb
ret
js
and
ret
push
mov
jns
mov
jp
mov
add
addl
or
sbb
pop
or
or
or
or
adc
adc
xchg
adc
sbb
sbb
sbbb
push
and
shl
jecxz
inc
hlt
add
daa
adc
and
dec
pop
xchg
imul
inc
lea
and
dec
loop
repz
and
dec
adc
push
jnp
mov
popf
inc
scas
mov
and
dec
hlt
xchg
add
dec
rcl
and
xor
adc
adc
jno
inc
or
add
test
enter
cmp
test
enter
cmp
test
enter
cmp
test
enter
cmp
test
enter
cmp
test
enter
cmp
test
enter
cmp
test
enter
cmp
test
enter
cmp
test
fucom
adc
sbb
push
mov
adc
sbb
pop
mov
adc
jmp
sbb
inc
imul
pop
inc
and
arpl
dec
and
adc
nop
and
and
test
and
addr16
inc
and
pushf
in
stos
sub
push
push
imul
xchg
pop
mov
les
aas
repz
pop
mov
pop
or
sub
notl
mov
cmp
jns
sub
inc
cmp
jne,pn
fcoml
call
cmp
lock
push
sar
or
popa
mov
pop
push
add
test
pop
incb
and
jmp
repz
rcrl
lock
ljmp
mov
cmp
int3
cld
sub
aad
cmp
js
and
pop
xchg
scas
adc
pop
and
and
dec
int3
mov
mov
mov
push
icebp
bound
push
mov
pop
les
stos
cmpsb
sub
cmpb
outsb
out
dec
and
push
and
sub
ret
sbb
lock
adc
hlt
out
pop
mov
or
loope,pn
insb
repnz
les
jg
js
cwtl
jg
push
cld
adc
in
xchg
mov
pop
sbb
loopne
movl
sbb
sbb
orb
lret
les
and
or
or
imul
and
cmp
cltd
rorb
xor
outsb
jae
mov
lcall
enter
adc
lea
das
inc
pusha
shll
push
cld
push
cld
sbb
xchg
or
loopne
jns
movsb
or
jbe
or
ret
cmp
insb
xchg
in
je
jb
xor
adc
jbe
mov
das
jl
mov
jp
mov
mov
test
cmc
and
add
or
mov
int
aad
fisttpll
xchg
add
sub
mov
fs
nop
andl
lock
xor
jg
fsubr
inc
lahf
out
and
sar
xchg
dec
xchg
fsubl
ljmp
sahf
cmpsb
nop
scas
push
mov
adc
inc
push
inc
out
dec
stc
cli
inc
lret
sbb
std
inc
popf
sbb
jnp
adc
mov
and
and
movsb
hlt
push
cld
movsl
cmc
lds
xor
cltd
bound
orl
jno
repz
inc
cli
mov
les
adc
push
inc
or
adc
adc
jg
clc
out
arpl
fimull
lods
lret
jnp,pn
ret
pop
je
push
adc
addl
mov
ret
pusha
ljmp
cmp
dec
fs
jno
ret
nop
fcmovbe
stos
repnz
movsb
push
mov
int3
lds
jnp
nop
push
cmp
jmp
mov
lea
inc
and
and
push
push
repnz
pop
aam
cmp
dec
test
jnp
rcl
test
mov
in
inc
mov
pop
test
gs
rol
cmp
stos
mov
aaa
out
mov
jl
dec
cmc
push
loopne
add
pop
subb
jo
mov
fs
dec
fwait
adc
test
ds
cld
mov
pop
in
mov
xchg
test
pusha
xchg
mov
and
sbb
jne
mov
in
rcrb
inc
das
jne
mov
xor
movb
loop
pop
data16
push
pop
push
and
dec
push
jp
cmp
xor
push
dec
add
adc
mov
out
push
push
adc
inc
xchg
in
xor
add
lods
int3
aaa
adc
inc
sub
arpl
and
sub
jecxz
sbb
cmp
jge
aaa
xor
or
dec
dec
test
xor
sbb
in
ffree
jo
daa
inc
adc
mov
out
rclb
mov
ret
mov
or
inc
and
cmp
fwait
adc
mov
sbb
mov
push
pop
adc
ljmp
pop
std
rorb
lea
or
loop
lds
mov
and
out
in
idivb
jge
pop
jae
xchg
pop
or
in
lea
push
add
dec
jmp
cmpsl
cli
das
je
cmp
outsl
dec
add
mov
outsl
push
and
jne
adc
inc
sbb
push
sub
clc
sub
jne
mov
das
sarb
movsl
xchg
xchg
scas
js
mov
and
sbb
inc
or
outsl
xchg
push
mov
test
and
jo
sbb
jge
cld
jp
nop
hlt
scas
jb
and
push
fisubs
sbb
xchg
aas
lods
sub
add
mov
pop
lahf
sbb
adc
xor
ja
jne
pop
and
inc
xchg
mov
adc
adc
out
daa
inc
jbe
mov
lock
fists
mov
mov
das
cli
hlt
mov
clc
andl
in
fistl
test
mov
in
mov
ljmp
stc
shlb
daa
jmp
push
jae
aam
mov
and
or
push
inc
mov
call
xor
fisttps
into
add
pop
push
dec
pop
dec
dec
inc
dec
push
or
fsubs
xor
mov
xor
mov
or
xor
sub
xchg
jl
pop
jmp
mov
loope
xlat
fdivrs
sti
sub
das
adc
cmp
sub
cmp
cmp
add
jo
mov
movsb
aaa
and
xor
jmp
and
cmp
inc
sbb
xchg
push
sbb
lahf
push
ja
sbb
mov
stos
shll
adc
clc
push
out
inc
loopne
mov
jnp
jae
rclb
mov
es
adc
and
sbb
push
pop
je
aam
adcb
adc
mov
inc
daa
or
lods
outsl
mov
int3
int3
jge
mov
popf
push
int3
mov
inc
mov
adc
ret
cmp
jmp
imul
inc
in
test
mov
pop
mov
mov
pop
cltd
loopne
mov
dec
clc
push
jnp
aaa
xor
xchg
or
int
inc
cmp
or
pushf
std
xchg
xor
fwait
rclb
add
or
push
loopne
lea
cmpsl
repz
subl
push
or
adcl
jno
cmpsl
fiadds
xor
push
add
push
aad
adc
outsl
lcall
sbb
lock
add
push
inc
insb
imul
in
js
dec
popa
ljmp
jo
or
xlat
je
sub
sub
xor
push
push
cmp
push
sub
or
mov
jnp
xor
and
int3
inc
xor
sbb
xor
mov
test
mov
cmp
xor
or
mov
pushf
and
xor
push
and
pop
jns
mov
ret
mov
adc
adc
push
nop
add
scas
movsb
fs
inc
cmp
sarb
stos
adc
jecxz
in
xor
int3
and
cli
mov
and
and
cmpsl
sbb
adc
cld
and
nop
inc
inc
in
test
jl
or
arpl
les
adc
shl
xchg
jle
and
mov
pop
inc
adc
inc
js
sbb
inc
xchg
jecxz
and
jo
push
test
inc
xor
mov
loopne
js
cs
sub
xchg
cwtl
xor
or
imul
imul
adc
movsb
push
push
fadd
icebp
sbb
test
mov
loop
mov
xchg
icebp
movsb
pop
adc
nop
xchg
insb
push
or
push
push
dec
push
xchg
pop
inc
nop
or
fimull
mov
insl
fwait
sbb
sbb
jns
test
inc
cli
stc
cld
adc
lret
inc
xor
adc
loopne
and
int3
xor
pushf
nop
xchg
and
shlb
or
xor
enter
add
or
imul
xchg
insb
xor
mov
pushf
sub
int3
sbb
icebp
adc
and
nop
lods
mov
dec
cli
jne
sub
outsb
outsb
mov
push
and
pop
push
lods
fsts
dec
loope
les
and
or
sbb
fstl
mov
or
mov
jne
insb
or
inc
mov
out
arpl
aam
sbb
xchg
jns
or
gs
gs
and
xor
or
inc
imulb
mov
jbe
or
sub
or
fs
mov
xor
hlt
imul
push
js
nop
test
jg
dec
push
pushl
or
loope
std
jb
inc
add
imul
add
pop
or
mov
cmp
loopne
lret
dec
bound
cmpl
jno
xlat
mov
push
test
clc
es
fs
test
adc
nop
inc
and
dec
scas
or
inc
pop
test
or
push
jno
jg
test
fs
pop
sbb
mov
pushw
adc
call
cld
mov
lods
cltd
xchg
or
jecxz
jne
inc
andl
adc
dec
imul
inc
and
push
inc
add
adc
xchg
add
and
dec
inc
inc
mov
or
mov
and
add
inc
xorl
jae
sub
or
push
adc
lea
int3
pop
pop
xchg
fwait
addr16
push
pop
imul
sbb
adc
and
and
mov
push
addr16
cmp
fcoml
gs
pop
add
xchg
add
es
pop
adc
push
push
bound
and
shll
xchg
push
add
addb
mov
sub
enter
add
ficoml
and
pop
dec
test
mov
popf
ss
mov
lea
mov
outsb
push
jp
movsl
or
push
push
cwtl
mov
or
lahf
jae
mov
data16
push
mov
or
lea
pop
sahf
pop
popa
ja
mov
mov
mov
push
movsl
mov
fs
inc
pop
les
je
dec
lods
push
mov
repnz
lcall
imulb
stc
xchg
cwtl
jmp
ja
or
pop
bound
add
ja
js
mov
insl
jo
mov
mov
outsl
adc
test
pop
or
leave
mov
push
pop
dec
hlt
imul
lds
or
ds
or
es
nop
mov
push
mov
cs
lock
add
inc
popa
inc
sbb
sbb
xchg
pop
mov
pop
jp
test
dec
or
pop
sbb
mov
push
inc
nop
jae
sub
mov
pop
gs
js
add
js
and
and
lea
pushf
mov
popa
push
push
jmp
or
inc
push
mov
jns
add
int
dec
adc
jo
pushf
mov
dec
mov
push
jo
mov
lods
push
jp
popa
jbe
popf
cmpsl
jmp
popa
push
jb
xchg
or
xor
call
ds
pusha
jp
mov
add
push
inc
bound
push
or
xchg
insb
add
sbb
test
adcb
xor
into
cmp
push
or
inc
fcoms
rcrl
add
rclb
or
aam
nop
sub
les
fldl
faddl
filds
push
fiadds
inc
push
mov
mov
or
dec
lret
dec
add
cmp
cmp
in
add
cld
pop
loope
xor
rorl
jmp
xor
or
adc
adc
sbb
cmp
cmp
cmp
jg
js
call
ljmp
cld
out
in
in
jecxz
loop
loope
loopne
fdivrp
fdivr
frndint
fdivr
xlat
cld
cld
aad
inc
lret
shl
shl
shl
iret
repz
repz
repz
int3
repz
repz
repz
repz
repz
add
or
and
dec
loopne
cmp
or
negl
cwtl
or
clc
add
inc
and
or
push
and
cli
and
dec
push
es
lods
adc
int3
dec
in
cld
sti
sbb
adc
orb
adc
sbb
sbb
repnz
mov
or
call
add
inc
pushf
adc
data16
or
adc
or
jno
inc
in
enter
jo
adc
lcall
shrb
aam
mov
int3
or
or
or
test
xchg
inc
lock
aad
mov
jecxz
cltd
xor
or
sbb
and
adc
psubsb
or
or
cmp
insb
sahf
in
lods
mov
lds
pushf
add
pop
adc
push
and
mov
add
data16
andl
pop
add
lea
inc
and
add
cmp
add
movsb
sub
inc
xchg
pop
call
or
imul
xchg
movsl
add
add
fimull
les
or
iret
ja
xor
pop
and
or
cmpsb
mov
loopne
je
mov
xchg
and
add
in
or
add
fs
jecxz
mov
nop
mov
push
retw
enter
add
scas
mov
push
rcrb
mov
mov
push
aad
int3
cmpb
xchg
stos
pusha
adc
or
outsl
cmp
mov
xchg
push
mov
jb
mov
mov
dec
mov
les
cs
jns
in
push
leave
sbb
adc
dec
xor
in
xor
push
sbb
shll
cwtl
and
inc
cltd
mov
fs
or
pop
add
and
adcb
orb
cmp
cmpl
cwtl
inc
add
nop
pop
push
adc
adc
pop
mov
mov
adc
xchg
test
scas
pop
std
rol
cmp
mov
jo
inc
mov
inc
out
add
add
mov
ret
adc
das
ja
addr16
addl
in
push
test
add
cmp
cmp
pop
add
xorb
cs
call
sub
and
out
out
out
out
out
out
in
mov
pop
and
lahf
das
mov
add
sub
xor
cmp
dec
out
mov
iret
pextrw
dec
les
ror
iret
mov
std
stc
mov
stc
mov
and
out
out
out
out
loop
es
cmp
add
sub
adc
insb
dec
nop
xchg
mov
fsubs
pusha
sub
and
inc
jo
mov
push
or
xor
imul
add
test
xchg
fcoms
mov
sbb
push
sbb
inc
push
xorl
xor
call
sub
dec
loopne
hlt
sbb
push
jns
mov
or
or
xchg
adc
sbb
mov
adc
sbb
pushf
dec
fcompl
mov
or
and
and
sub
mov
pop
lods
add
cmp
jg
ds
mov
inc
nop
fnstenv
sbb
imul
insb
dec
add
nop
aas
add
das
add
sbb
mov
xor
mov
mov
movsb
xor
lods
imul
mov
cwtl
xor
push
test
inc
data16
add
jg
and
or
or
mov
cltd
movsb
adc
adc
aad
mov
sub
adc
icebp
cld
dec
adc
loopne
call
mov
mov
pop
jg
and
ret
cmp
jl
jb
cwtl
fs
push
push
repnz
jne
and
pop
mov
mov
or
js
push
test
push
or
and
pop
lock
fsubl
pushf
push
cld
and
test
nop
pop
jo
adc
or
push
cmp
adc
inc
or
bound
cmp
inc
and
pop
adc
and
cmpsl
xor
mov
test
and
cmc
xchg
sbb
or
mov
add
or
in
ret
sub
out
or
or
sub
and
sbb
lea
sbb
outsl
dec
lahf
dec
xor
cli
sub
push
cmc
sbb
je
mov
mov
stc
loopne
add
or
inc
adc
mov
adc
and
dec
push
xchg
pop
and
cmpsl
ds
inc
xchg
rorb
scas
sub
cmp
fsubl
js
sub
andb
mov
dec
imul
adc
adc
dec
js
jge
add
add
data16
stos
js
xchg
jb
adc
stos
mov
push
lods
jmp
scas
mov
lea
pop
cld
mov
push
ficoms
nop
aam
daa
push
cmpsb
mov
adc
cld
out
repnz
jo
pop
or
lock
inc
je
push
mov
movups
inc
je
push
add
pop
and
and
test
push
and
add
call
add
pop
pop
das
jmp
dec
push
fcmovu
pop
jb
xor
je
mov
add
movsb
dec
sub
pop
add
pop
jl
jle
imul
bound
dec
cmp
mov
xor
add
push
cmp
movsb
add
orb
xchg
daa
sarb
pop
pop
sti
imulb
sbb
push
push
hlt
gs
xor
nop
mov
jl
jb
mov
mov
adc
inc
mov
mov
movsl
lea
adc
dec
inc
gs
insl
fists
inc
jb
xlat
sbb
sub
adc
ret
test
push
in
inc
test
inc
adc
xchg
sub
cmpb
ljmp
dec
inc
insb
popa
mov
push
pop
dec
loope
outsl
aas
pop
stc
cwtl
sbb
add
jo
imul
dec
and
mov
add
dec
push
popa
dec
push
lods
xor
adc
ljmp
cwtl
jmp
mov
lcall
push
sbb
popf
jns
subl
clc
test
sub
dec
mov
xor
scas
inc
das
nopl
gs
scas
fcoms
lret
out
call
xor
jg
add
jl
inc
adc
pop
push
add
cmpsb
sub
pop
les
rolb
xchg
or
add
mov
and
and
adcb
clc
sub
cs
jo
jae
push
mov
inc
mov
fsubrs
xor
inc
adc
das
mov
inc
inc
adc
push
fdivr
sbbb
lret
jge
cmp
jmp
adc
and
js
adc
or
clc
push
or
pop
push
sub
fs
mov
dec
cli
xchg
imul
lods
adc
iret
in
mov
mov
push
pop
sbb
fdivl
jmp
les
lds
aad
and
out
inc
addr16
sub
sub
insl
shr
loope
aas
call
jbe
sbb
cmpsb
addr16
sbb
sub
mov
sub
jne
sub
cmp
jmp
mov
in
imul
mov
inc
xchg
xor
aam
stos
nop
add
push
or
mov
icebp
push
mov
nop
sti
mov
fs
sbb
inc
adc
add
sbb
inc
sbb
add
sbb
inc
and
add
sbb
inc
sub
cwtl
fcoms
and
enter
inc
mov
in
dec
scas
lret
sub
stos
adc
xor
xor
scas
xchg
pop
xchg
jl
rclb
jo
add
cmp
sbb
inc
sub
sti
lock
inc
iret
or
inc
ds
mov
inc
pushl
mov
jge
sti
sbbl
mov
mov
xor
lcall
add
add
adc
mov
push
or
and
push
mov
adc
or
mov
inc
push
movl
inc
jne
clc
inc
sub
xor
xchg
pop
pop
sar
fcoml
mov
mov
lods
add
mov
jmp
into
or
shrb
das
mov
imul
mov
or
cmpsb
sbb
xchg
pusha
stos
inc
adc
lock
add
cmpsl
push
pop
pop
push
or
add
dec
mov
shl
inc
cmp
xchg
push
mov
sub
addb
incl
pop
push
in
daa
aad
mov
push
or
inc
dec
fisttps
iret
cmpsl
call
push
mov
xchg
inc
push
leave
or
inc
shll
mov
cmp
adc
ja
mov
std
mov
lods
pop
test
ljmp
fstl
popa
jae
mov
adc
jmp
aaa
add
aad
push
out
ljmp
inc
mov
mov
nop
jecxz
add
mov
mov
mov
pop
mov
sbb
push
lea
out
out
int3
add
pop
sbbl
fs
out
call
mov
mov
in
mov
enter
xor
or
xchg
add
pop
jae
daa
rcll
sarb
bound
or
sub
sbb
adc
xchg
xchg
lds
movsl
clc
rorb
push
and
daa
ret
adc
les
xchg
dec
rorb
and
cld
aam
int3
pop
inc
inc
mov
pop
pusha
leave
push
lret
mov
xor
adc
fisubrl
out
xchg
dec
mov
jle
clc
and
jne
add
cmp
cli
enter
jbe
xchg
and
sub
pushl
ja
push
fs
jmp
mov
dec
or
mov
sarl
cmp
jo
movb
adc
jmp
xlat
xor
or
lds
scas
pop
cmovp
out
adc
fcomps
dec
push
rcr
das
mov
mov
in
push
xchg
loope
adc
sub
stos
daa
in
adc
jge
cs
xchg
cmp
xor
hlt
div
adc
test
sub
dec
inc
out
jge
cmp
pop
inc
faddl
je
lcall
sub
cmp
je
dec
adc
jno
mov
adc
lea
push
cld
add
out
cwtl
sbb
cmpsb
jne
xchg
cmp
mov
or
out
dec
mov
xchg
les
push
mov
dec
notl
adc
add
cmpl
adc
andb
cmp
je
aam
stos
rcr
add
mov
daa
cmc
adc
stos
cwtl
sbb
in
gs
cmp
push
mov
jp
push
and
lock
or
inc
call
push
xor
adc
add
push
ja
xor
test
setne
mov
push
xor
or
mov
mov
out
sbb
mov
push
jge
cli
mov
lock
aas
lea
jmp
adc
sbb
mov
push
pop
les
jne
or
xor
scas
cs
inc
pop
mov
jle
inc
mov
cmp
movsb
in
mov
jne
push
pop
div
xchg
xor
or
mov
jne
adc
jle
sbb
mov
je
push
mov
cld
dec
and
lea
cmc
cli
ds
je
cmp
push
push
fcomps
mov
and
test
adc
pop
dec
adc
xor
mov
int3
mov
push
adc
adc
nop
in
jle
push
pop
test
add
in
sbb
or
hlt
or
cld
lock
nopl
and
or
pop
sbbb
popf
hlt
test
imul
pop
test
rclb
jae
lods
adc
scas
inc
xor
jmp
fldcw
stc
lret
cwtl
sbb
jo
dec
loop
cli
pop
and
stos
xor
inc
dec
or
mov
jmp
roll
xchg
das
mov
jb
jmp
or
add
inc
jmp
ds
push
adc
das
or
dec
sub
fmuls
ret
dec
jbe
jb
inc
in
push
cmpsl
dec
sub
mov
or
pop
xchg
shll
xor
mov
int3
inc
and
jo
or
cmpsl
xchg
mov
js
or
xchg
and
xchg
pop
or
dec
jne
jo
imul
cmp
xchg
mov
push
ret
and
sub
mov
dec
dec
xor
shrl
add
repz
fcoml
adc
gs
test
sub
int3
out
add
sbb
add
adc
add
dec
push
push
push
test
das
pushl
ljmp
push
adc
xchg
cwtl
mov
or
xor
inc
popa
int
ret
push
movb
mov
dec
rcrb
add
adc
add
jg
sub
lods
adc
int3
xor
jae
adc
push
mov
outsl
unpcklps
pop
arpl
push
add
or
es
aaa
mov
arpl
xorl
or
mov
out
ja
leave
adc
and
outsl
or
or
sbb
je
mov
pop
mov
cmovs
xor
dec
adc
mov
addl
inc
push
jp
adc
mov
pushl
mov
jae
movsl
and
jmp
xor
push
in
orl
fdivl
movswl
cmpb
mov
adc
test
dec
imul
inc
stos
or
xchg
test
out
jmp
dec
enter
scas
dec
jecxz
pop
and
sub
pop
fdivs
dec
cltd
add
inc
push
jmp
cltd
sub
outsb
push
and
shlb
movsl
jne
sbbl
push
pop
cmp
and
jg
adc
scas
mov
or
or
xchg
dec
loop
xlat
fldcw
or
dec
cmp
xchg
clc
filds
pop
dec
hlt
fs
adc
jmp
push
inc
or
adc
xchg
dec
scas
fsubr
cmp
adc
xchg
scas
mov
sub
jecxz
sub
pop
test
jle
cmp
adc
mov
fisttpl
lret
faddl
mov
stc
fstpl
push
fwait
jmp
xchg
and
add
jle
and
cmp
mov
sub
pop
sub
icebp
dec
scas
loope
adc
mov
or
jmp
adc
pop
adc
or
add
pop
cmpsb
push
movsl
xor
mov
inc
mov
aaa
sbbb
inc
xchg
and
dec
stos
fs
jno
and
scas
rcll
sti
and
mov
testl
sub
jne
sub
sub
das
mov
xlat
and
daa
add
add
nop
and
add
jecxz
push
jne
test
nop
xchg
xchg
movsb
in
mov
jo
fcomi
cmpsb
or
repz
cmpl
repz
nop
dec
sub
xor
push
dec
fldcw
and
es
mov
inc
xchg
dec
jmp
ljmp
and
cmc
mov
sub
or
mov
jne
push
push
push
adc
push
pop
addl
out
insl
sub
ljmp
dec
pop
into
pop
dec
adc
add
xchg
push
mov
jg
push
fildl
ljmp
mov
add
jne
dec
cmp
inc
lret
xchg
push
push
pop
subb
sahf
push
dec
inc
mov
push
test
jno
popf
push
sahf
mov
out
fcmovnb
ljmp
add
std
cmpsl
decb
adc
movb
data16
lds
xor
or
push
sbb
mov
int
mov
mov
stc
xor
and
inc
insb
mov
in
popf
icebp
cwtl
movsb
pop
push
adc
xor
nop
or
or
jmp
adc
adc
dec
jb
in
je
lods
jge
push
out
insb
loope
adc
push
mov
insb
mov
pop
aad
or
arpl
inc
jl
lret
cmp
and
pusha
add
xchg
push
adc
nop
and
cmp
push
cmp
call
nop
subl
cmp
fistpll
and
xor
jmp
lds
add
fimull
sbb
cmp
mov
push
mov
nop
xchg
icebp
and
lret
or
adc
dec
jnp
add
call
or
dec
sub
sbb
sbb
xchg
mov
and
fists
test
push
cli
and
mov
cmp
cs
inc
sbb
adc
jp
call
sub
mov
mov
inc
dec
sbb
sub
sti
ficoml
inc
adc
xor
lea
sub
cmpsl
pop
bound
dec
dec
enter
sbb
sub
push
mov
xchg
mov
jecxz
mov
in
push
push
mov
das
mov
mov
adc
je
push
cmc
stos
adc
repnz
daa
lds
and
lret
add
or
flds
pop
pop
pop
scas
clc
dec
mov
cmp
pop
cmp
mov
add
and
add
leave
ja
cli
mov
pop
aas
leave
nop
fistpl
xchg
sub
mov
pop
test
sub
push
pop
popf
call
repnz
call
fs
jnp
push
shlb
enter
mov
out
jg
lods
push
movsb
out
and
xchg
ds
mov
inc
jmp
inc
negb
scas
imul
pusha
lahf
jb
repz
mov
xchg
pop
enter
les
insl
adc
jne
pop
xchg
pushf
ret
mov
and
mov
pop
pushf
es
xlat
cwtl
ljmp
nop
pop
sub
leave
push
sbb
leave
adc
cmpl
jl
sbb
mov
pop
lea
pusha
mov
sub
jne
fsubs
pop
leave
mov
pop
stos
cmpsl
and
add
aam
mov
aaa
cltd
inc
rorl
ds
inc
pop
push
or
mov
push
out
repnz
cmp
ret
pop
mov
fs
adc
jb
inc
and
int3
cwtl
orl
das
repnz
jns
dec
jg
lods
push
xchg
fists
test
ja
dec
test
xor
and
insb
pop
fs
sbb
pop
adc
cs
mov
outsl
popa
je
mov
sub
jb
loope
dec
xor
addb
jmp
cmp
cli
jno
mov
test
fistps
lret
aas
inc
ret
and
je
push
ljmp
lock
aaa
cs
ret
jp
jbe
cli
rorl
sbb
pop
testl
lret
adcb
movsl
add
inc
sbb
cmpsb
sbb
scas
leave
cmpsb
iret
fdivrl
lret
xchg
loop
dec
ret
pop
ret
es
imul
pop
xchg
repnz
and
cmpb
mulb
cmpl
lret
aas
and
arpl
dec
sub
and
addb
outsl
dec
or
push
shlb
xchg
jae
bound
pop
dec
mulb
mov
jg
pop
out
push
adc
and
or
cmp
cmp
xchg
mov
xchg
mov
das
mov
jge
popf
icebp
arpl
stc
inc
fs
aas
xchg
mov
cmc
scas
into
std
xor
pushf
jmp
xor
cmpsb
sbb
dec
sbb
push
pop
rcrl
push
push
sbb
xor
or
and
mov
andb
mov
cmp
dec
inc
sbb
mov
adc
inc
push
xchg
xor
test
imul
sub
adc
inc
inc
pop
jb
icebp
sbb
and
gs
sub
lock
jo
sub
xor
xchg
jge
push
pop
pop
lock
inc
cmp
push
add
xor
inc
and
int3
dec
loopne
fnstsw
inc
or
and
mov
or
inc
and
mov
sub
jmp
loopne
sbb
xor
pop
push
pop
push
js
xchg
push
jne
daa
aas
rolb
xchg
cmp
sbb
and
adc
dec
movsl
hlt
push
xor
or
or
mov
mov
lea
mov
loop
mov
mov
push
repnz
push
xor
popa
lahf
daa
lods
cmc
roll
lock
and
sbb
in
push
in
jo
sub
ja
xor
or
pop
dec
pop
push
sbbl
or
data16
hlt
jmp
call
inc
mov
mov
stos
rcrl
inc
enter
clc
std
sub
xlat
and
cmp
test
xchg
dec
ja
cmpsl
popf
mov
sbb
push
cmc
jo
int3
andl
mov
or
push
inc
insb
popf
sbb
adc
fs
jge
scas
call
pop
mov
lods
movsl
scas
loop
cmp
mov
fcompl
mov
stc
or
in
xchg
jmp
leave
imul
call
std
add
lds
aam
inc
xchg
sbb
cmp
mov
xor
push
push
cmp
dec
and
mov
xor
pop
dec
xchg
xor
sbb
mov
push
mov
dec
out
dec
js
jne
pop
adc
lret
inc
fdivrs
je
adc
les
fadds
jne
xor
arpl
pushf
jp
jmp
das
dec
ss
sbb
jmp
adc
xchg
push
mov
adc
mov
pop
inc
cmp
sbb
add
sarl
rorl
xlat
outsb
pushf
cmp
daa
cld
push
push
jl
mov
callw
enter
adc
hlt
int3
in
mov
adc
aas
pop
inc
call
cmp
push
or
pushf
mov
mov
arpl
and
xchg
or
dec
ja
adc
xchg
and
xor
mov
and
mov
enter
cmp
adc
jmp
or
sarb
jne
or
push
roll
dec
xor
push
adc
les
ret
xchg
nop
and
int3
sbb
dec
and
xchg
or
cmpl
pop
fcomps
and
dec
push
clc
add
add
xchg
shlb
jae
outsb
ljmp
xor
add
pop
sub
adc
or
dec
push
or
dec
pusha
es
dec
inc
decb
xchg
lret
mov
add
shlb
je
jmp
lea
leave
push
or
or
imul
inc
sbb
test
pop
dec
aam
jns
dec
popa
adc
mov
test
rcr
outsb
mov
jns
cmpl
dec
test
push
xchg
jl
inc
test
testb
or
adc
leave
push
test
pop
int3
adcb
jle
lock
jecxz
testb
jmp
pop
popa
mov
cmp
inc
popf
xchg
hlt
xchg
xchg
insb
jb
lds
mov
or
jecxz
inc
dec
and
mov
jmp
push
inc
cmp
subb
shl
shlb
xor
and
xor
pop
xor
dec
push
xchg
clc
imul
adc
test
xchg
int3
sbb
xchg
dec
inc
and
ss
and
sub
fmul
or
sub
xchg
sbb
adc
dec
sbb
or
dec
sbb
cwtl
arpl
dec
leave
mov
adc
sbb
cmp
inc
push
inc
mov
push
push
xchg
dec
es
dec
loop
popf
and
or
mov
or
sti
cmp
inc
pop
je
push
pop
jno
outsl
xor
mov
and
push
sbb
sti
incl
mov
addb
adc
nop
xor
adc
adc
adc
in
jmp
jno
fcoms
sub
push
xor
xor
jg
test
pop
push
pop
and
pop
mov
mov
push
sti
fisttpl
out
mulb
cltd
std
ds
dec
dec
mov
outsb
pusha
rcr
loopne
push
or
adc
nop
mov
pop
call
cld
popf
push
sub
dec
or
movb
push
xchg
fmul
cltd
dec
pop
cmp
fcompl
xor
testb
imul
add
pop
add
adc
pop
nop
adc
dec
adc
loop
xchg
sub
cmc
jbe
loopne
push
repnz
xchg
and
jno
cmp
leave
xchg
mov
dec
sahf
inc
push
inc
aam
cli
cld
mull
cld
dec
in
sbb
and
xor
stos
adc
dec
std
push
push
and
or
aam
inc
cmc
stos
lret
pop
daa
out
mov
push
xor
jne
push
stc
lahf
pop
adc
or
adc
sbb
or
lock
or
es
add
pop
loopne
mov
fists
sbb
xchg
faddl
add
and
pop
mov
mov
shrl
mov
inc
sub
repnz
es
or
add
pop
std
jnp
cmpsl
lahf
sub
stc
xchg
or
std
inc
push
lcall
inc
stc
pop
xorb
mov
mov
arpl
movsb
push
fmuls
cmp
jne
mov
clc
jl
hlt
sub
lret
mov
cmpsb
dec
pop
xor
mov
jmp
mov
aam
cmp
je
je
mov
push
push
sbb
mov
and
pop
inc
cli
daa
mov
jmp
xlat
outsb
adc
sbb
mov
sbb
pop
pop
or
cmpsb
loope
cmpsb
dec
push
hlt
sub
inc
inc
sbb
dec
or
dec
or
jmp
sbb
dec
icebp
jns
in
mov
pop
add
adc
mov
xor
xor
or
sub
out
imul
int3
adc
dec
lret
sbb
call
add
adc
rorb
loop
dec
inc
sbb
and
andb
mov
and
and
pop
push
inc
mov
mov
cwtl
lcall
lods
mov
add
add
push
pop
je
mov
sub
lcall
mov
dec
scas
and
fmull
push
testb
je
repnz
repz
xchg
adc
lahf
andb
call
pop
stos
xor
adc
fwait
push
pop
xchg
cli
sub
lds
cmp
cli
idivb
lods
aas
ret
dec
mov
or
dec
pop
sbb
and
inc
fld
jb
lcall
and
pop
fisubrs
das
and
add
fsts
fldenv
lock
xchg
fs
scas
out
dec
pop
sti
cmp
je
pop
aas
inc
int
mov
hlt
or
and
cmpsl
pushf
nop
mov
dec
mov
je
sbb
sub
xor
and
popf
adc
push
ljmp
test
test
jle
cmp
pop
sbb
enter
test
mov
inc
mov
mov
dec
mov
mov
mov
aam
mov
adc
mov
pop
xor
push
jno
cmp
or
dec
nop
rclb
sbb
jg
test
inc
ficoms
pop
fwait
imul
pop
adc
int3
cmp
ja
enter
pop
je
sbb
sub
adc
lods
and
push
inc
les
mov
andl
bound
les
adc
and
dec
fcompl
inc
push
cmpb
push
mov
cmpsb
stos
repnz
xor
inc
and
mov
adc
cwtl
pop
je
subl
ret
push
in
and
lea
lea
test
and
or
loopne
xor
ja
dec
mov
or
cmp
mov
sbb
data16
and
fisubl
rcrb
sbb
ret
or
add
iret
mov
adc
and
lahf
mov
adc
dec
jmp
insb
and
xor
orb
mov
loop
mov
add
mov
jno,pt
dec
cmp
arpl
in
mov
xor
dec
jecxz
in
je
or
mov
enter
dec
repnz
je
mov
xchg
inc
push
xor
dec
jno
pop
xchg
int3
mov
ret
cmp
ds
loope
dec
shlb
sbb
inc
cmp
movsl
sbb
rolb
adc
mov
daa
loope
gs
lahf
je
rcr
adc
fs
mov
cwtl
hlt
mov
push
pop
jnp
push
jle
sbb
push
xlat
dec
fcoml
cmp
inc
mov
mov
jo
cmc
cmp
aaa
mov
out
lea
or
hlt
loope
lcall
ja
js
mov
enter
ljmp
insl
imul
xchg
sub
repz
dec
lea
in
int
add
jne
pop
and
lahf
ds
cmp
push
pop
ljmp
fs
scas
bound
roll
lret
push
int
addr16
and
and
movzbl
movsb
pop
adc
test
push
mov
andb
add
mov
pop
fimuls
jo
and
dec
xchg
aam
mov
xchg
out
pusha
adc
jne
sbb
or
sbb
rcrl
cld
ljmp
stos
cmpsb
sub
jp
fisubrl
add
xlat
add
push
inc
test
cmp
add
pop
xor
enter
pop
push
test
dec
xchg
out
rcrl
adc
ret
pop
jecxz
or
pop
jecxz
in
cmp
out
test
cmc
sub
xchg
mov
mov
mov
pop
push
push
pop
or
xor
jbe
test
or
mov
jb
inc
bound
adc
or
or
mov
adc
jmp
aaa
cmp
dec
xchg
mov
imul
ror
push
push
or
or
jne
push
inc
not
push
jp
cmp
pop
pop
hlt
ljmp
lret
mov
mov
test
and
jno
pushf
mov
mov
cmpsb
pop
mov
lahf
pop
xchg
roll
and
sub
add
cmpsl
and
and
add
repnz
and
add
push
dec
adc
in
lret
xor
xor
sub
les
ljmp
sub
pop
pop
scas
ss
push
and
add
dec
mov
adc
and
fisubrl
shlb
lahf
sbb
sbb
sbb
mov
pop
ds
cmpsl
add
jne
mov
outsb
adc
mov
fldt
push
fmull
loope
or
loope
incb
adc
sqrtps
add
jmp
jl
sbb
ja
dec
loope
ds
imull
or
push
inc
push
inc
in
cmp
push
mov
je
int
jl
sbb
outsl
sub
jns
cli
cmp
adc
pop
divl
jb
cmpsl
pop
or
add
add
js
xchg
or
mov
call
ret
outsb
and
movb
cmc
sub
push
push
sbb
cmp
and
cmpb
jno
mov
movsb
jmp
push
test
setl
leave
fiaddl
inc
shr
mov
test
inc
stc
nop
xchg
or
fisubs
mov
mov
mov
jmp
movsl
push
adc
mov
hlt
xor
xchg
add
mov
mov
or
add
sub
cmp
cmpsb
mov
pop
push
or
aas
dec
add
fwait
mov
jle
pop
sbb
test
outsb
ja
inc
dec
mov
sub
mov
cmp
lods
fsub
fadds
push
add
xorl
jmp
sbb
pushf
xchg
add
push
push
arpl
pop
in
mov
jmp
cli
gs
mov
test
les
and
loopne
sub
xor
cmp
push
iret
clc
add
mov
in
sub
fstpt
push
mov
sbb
aad
in
inc
sub
sbb
lret
inc
push
out
mov
pop
stos
cmp
jmpw
push
jmp
pushf
dec
pushf
and
xchg
loop
push
jecxz
call
lods
pop
cwtl
shlb
sbb
fnstcw
outsl
or
cld
jge
cmp
inc
sbb
sbb
clc
jo
cmp
cmp
jbe
mov
sub
or
je
push
xchg
daa
fidivrl
jb
add
mov
cmp
icebp
push
lret
fsubs
adc
adc
cwtl
jle
movsl
and
pop
xchg
inc
ficoms
or
movsl
sbb
cltd
dec
mov
sbb
inc
lret
dec
fisttpll
add
dec
fstps
cmp
repnz
sub
xor
push
sub
in
push
movsl
dec
rcll
add
cwtl
push
fsubr
cmp
mov
data16
inc
popf
push
scas
xchg
loopne
xchg
pop
repz
inc
stos
push
imul
and
ret
xchg
and
mov
cmp
jl
sub
enter
in
cmpb
decl
cmp
out
add
push
adc
mov
jo
fs
cltd
fmul
cmpsl
jno
dec
ffree
push
push
sti
sbb
out
xchg
mov
repz
into
pop
sti
inc
push
push
in
sub
out
stc
jge
addb
movsb
rorl
mov
and
or
push
push
pop
stc
stc
push
mov
adc
pop
js
sub
test
add
xor
jp
cmp
es
popa
es
jns
fucomp
jnp
leave
test
pop
hlt
lret
adc
jp
dec
cmp
sti
jl
pop
iret
xchg
pop
das
or
push
jnp
or
in
fs
sbb
or
mov
push
loop
jmp
call
orl
and
push
xor
push
add
adc
pop
dec
pushf
les
sbb
or
pop
pop
cmp
and
das
je
mull
xchg
jnp
or
lea
or
inc
rclb
push
pop
shlb
shll
jmp
mov
sub
pop
mov
push
int
jno
movsb
or
dec
push
jns
bound
jl
int
push
or
sub
stos
or
faddp
jge
dec
movsb
dec
lret
sbb
cmp
pushf
inc
push
enter
in
mov
lock
mov
int3
mov
push
fs
stc
cld
pop
mov
jmp
jbe
xor
push
lock
cmp
sbb
adc
inc
or
test
movsb
mov
mov
push
push
push
push
je
push
adc
shlb
add
out
unpcklps
mov
mulb
add
dec
push
or
or
outsl
ror
or
popa
imul
stos
and
cmp
bound
negl
mov
mov
jl
jmp
jne
inc
int
sub
dec
loope
and
adc
jns
mov
nop
das
add
push
mov
pop
leave
sub
jp
adc
push
clc
lea
xchg
sbb
lea
push
push
xchg
cmp
pop
push
stos
scas
mov
dec
out
and
inc
dec
mov
dec
add
xchg
xchg
pushf
dec
add
push
xor
mov
pop
add
xor
mov
and
inc
add
sbb
mov
fisttpl
xlat
les
enter
sub
inc
adc
dec
fidivs
pop
xor
sti
xchg
das
push
nop
xchg
xor
mov
mov
mov
sub
ret
addb
test
or
test
dec
mov
cmp
aaa
notb
inc
pop
fsubl
inc
das
jo
sub
adc
xor
mov
lods
jb
or
and
orb
dec
or
jne
mov
sub
fs
jmp
dec
mull
stos
pop
pusha
movsl
pop
add
nop
push
sub
sub
dec
push
add
jle
push
divl
pop
ja
inc
cmp
inc
push
insb
or
add
or
cmp
jne
lea
inc
dec
xor
xor
das
hlt
pushw
add
sub
das
xor
xchg
or
aas
push
jae
es
mov
push
dec
add
mov
shrl
xchg
xchg
roll
loop
or
dec
mov
sub
addr16
bnd
jo
cmpl
lcall
sub
add
sbb
mov
push
ljmp
xor
mov
jo
jge
xchg
or
pop
sub
popl
dec
mov
into
insb
add
mov
dec
xor
stc
daa
xchg
xor
mov
ficoml
dec
or
inc
ss
jle
push
lcall
and
repnz
in
movsl
adc
pop
loop
mov
mov
mov
adc
cli
or
push
enter
sahf
adc
cwtl
pop
cmp
mov
dec
or
and
and
movb
in
lods
pop
adc
push
test
shll
sbb
xchg
jb
push
mov
sub
sbb
subb
or
mov
repz
lock
loop
xchg
adc
lcall
cltd
or
jg
jbe
mov
adc
mov
fcmovu
or
call
sub
sbb
aad
inc
ljmp
or
daa
fdivl
mov
sub
inc
stc
mov
lock
std
mov
or
into
ja
xor
ret
jecxz
xor
dec
repnz
pop
push
xor
lods
sub
inc
jne
sub
shlb
inc
sub
push
jl
cmp
lods
mov
xchg
cmp
jb
icebp
adc
cwtl
fiaddl
and
mov
adc
sbb
ret
jno
push
adc
hlt
aad
or
or
add
cltd
popf
jne
fs
mov
mov
imul
iret
movsb
push
pop
ret
cmc
inc
cmp
mov
call
enter
fsubrl
add
add
movsl
sub
addr16
decb
xor
rcrb
sbb
mov
jb
push
hlt
nop
pop
inc
es
test
jnp
out
sub
fcomps
ficoms
shr
inc
xchg
test
es
test
dec
or
pop
jno
es
jns
sbb
aaa
pop
mov
sbb
mov
loop
mov
lcall
pop
push
xchg
push
cmp
mov
mov
mov
xchg
testb
inc
pushf
call
fsts
mul
add
shl
push
je
add
pop
pop
mov
sub
mov
pop
inc
das
mov
into
pusha
add
push
in
adc
adc
leave
mov
cmpl
or
arpl
outsb
and
sti
push
outsl
std
jno
or
inc
rol
push
lcall
ret
adc
das
mov
stc
stos
sub
rcr
bound
xchg
je
push
movsb
stc
or
jge
xor
mov
push
jmp
sub
aaa
bound
sub
sbb
and
es
dec
jne
cld
and
xor
sub
sub
pop
pop
and
sbb
shll
pop
outsb
lret
adc
mov
push
addr16
cs
xor
or
add
out
push
mov
into
pop
scas
and
jl
or
add
cmpl
inc
push
or
xor
or
jo
dec
movsl
xor
cltd
loopne
arpl
adc
mov
xor
ds
cli
cmp
fnstsw
aam
inc
leave
push
adc
push
mov
add
mov
push
imul
jmp
mov
push
push
int3
jmp
mov
scas
xor
int3
bound
jne
cmp
sarb
out
adc
rorl
mov
adc
repnz
sub
dec
clc
into
mov
push
cs
mov
and
sbb
sarb
nop
xchg
jb
push
and
cmp
aaa
ret
adc
sub
sbb
adc
push
es
rolb
pop
pop
xchg
pop
or
adc
push
dec
adc
or
cli
push
jge
dec
lock
fs
movsb
or
sub
sub
or
mov
enter
imul
cmp
cld
lea
mov
or
jmp
clc
adc
cmp
xor
inc
stos
aad
add
jb
mov
inc
lods
mov
dec
testb
dec
inc
scas
pop
mov
inc
cwtl
add
push
dec
cld
movsl
test
lds
xchg
scas
loopne
mov
jge
mov
adc
adc
or
cld
mov
push
push
lea
in
cs
hlt
out
pop
push
inc
xchg
dec
xchg
leave
outsl
push
pushf
and
cmc
mov
testb
pop
jo
push
push
jmp
mov
lea
jp
push
das
pop
fidivrs
add
push
mov
or
push
movsb
pop
pop
lock
fmuls
push
xor
xor
sbb
andl
lea
movb
cmpb
or
mov
mov
loopne
or
data16
adc
and
nop
adc
xchg
adc
das
push
std
divb
cmpl
xchg
gs
cmp
cmp
mov
hlt
cmpsb
out
adc
jns
fs
sbb
or
and
repnz
nop
inc
mov
mov
cs
and
mul
mov
mov
fwait
sub
adc
dec
dec
pop
nop
cwtl
dec
dec
xchg
rorb
jge
mov
fcoml
xchg
pushf
pushl
lcall
mov
xchg
pop
ljmp
mov
and
mov
add
fldl
xor
faddl
sbb
fnstsw
sahf
jae
push
fiadds
dec
jne
ljmp
enter
jo
gs
daa
add
mov
or
add
leave
pavgw
jl
jmp
xchg
sbb
test
sbb
or
xor
push
mov
sub
fisttpl
fwait
sti
je
sub
sbb
xor
xchg
and
das
fildll
js
in
xchg
cmp
out
cmp
jae
arpl
hlt
jmp
xlat
add
dec
insb
cmp
mov
outsb
in
pop
sbb
mov
fdivr
imul
mov
adc
xor
or
das
mov
xchg
sub
imul
xchg
or
mov
dec
jae
subb
cmp
or
pop
movl
add
aam
ljmp
jp
lahf
in
adc
mov
fnstcw
popa
icebp
lahf
sub
and
push
rcl
outsl
mov
mov
cmp
imul
add
test
mov
sub
adc
jne
mov
adc
mov
mov
out
pushf
in
adc
or
cmpb
insb
sbb
mov
jnp
incl
je
rclb
cmp
pop
adc
mov
sub
cmc
sbb
pop
out
adc
inc
xor
jne
mov
jle
pushf
dec
adcl
adc
enter
xor
mov
xchg
jg
fidivs
and
js
xor
outsb
js
mov
cld
in
pop
inc
mov
lret
notl
cmpsb
repnz
inc
jne
mov
dec
inc
jne
add
js
mov
jo
push
push
shrl
subl
ds
fstl
xchg
test
sbbb
mov
xor
jmp
xchg
or
mov
pop
inc
les
cmpsl
shlb
bound
add
push
data16
outsl
mov
cmp
sbb
call
lcall
jg
pusha
push
shll
test
and
sbb
stos
ret
out
popf
arpl
js
push
and
and
aas
jmp
xchg
mov
ljmp
add
dec
push
add
cmp
rorl
sub
nop
ret
push
inc
mov
lods
arpl
fwait
aad
mov
inc
mov
and
inc
hlt
pop
cld
test
add
sub
adc
cwtl
mov
or
pop
xor
and
nop
and
pop
cmp
jl
cmp
mov
aas
in
stc
sub
cmp
dec
cmp
sbb
dec
out
shlb
add
xorl
mov
and
inc
inc
mov
sbb
or
push
sub
cmp
sub
adc
dec
adc
sbb
cmp
or
or
fs
adc
push
cwtl
inc
cmp
push
ja
call
shl
xchg
mov
xor
sub
cmp
setg
jmp
push
mov
add
dec
and
jge
cmp
setle
xor
push
jo
es
sbb
mov
cld
adc
movsb
sub
mov
shrb
leave
sti
and
je
xlat
out
cld
inc
rol
pop
cmp
nop
imulb
aad
fsubl
mov
stos
mov
or
lock
fldt
pop
dec
loope
das
fwait
pop
and
dec
adc
mov
pop
cltd
int3
or
sub
pop
sub
das
inc
dec
int3
stos
xchg
pusha
xchg
sub
sbb
test
dec
nop
xor
sub
in
mov
in
sub
push
sbb
hlt
jmp
xor
mov
pushl
xor
ret
sar
fldl
ret
sub
jg
add
xchg
push
mov
test
inc
sbb
lock
add
mov
and
movb
inc
mov
in
imul
lock
in
pop
sbb
fwait
rcll
mov
movsl
sub
es
add
leave
inc
jb
movsb
andb
inc
lret
adc
inc
add
mov
jne
ret
arpl
xor
cmp
mov
gs
arpl
xchg
test
or
or
push
rcll
in
xchg
adc
iret
sub
or
pop
adc
sub
adc
push
mov
cmp
inc
cmp
push
popf
inc
mov
hlt
fisttpll
xor
shrb
or
adc
decl
lcall
je
test
les
add
push
or
loopne
xchg
jge
fwait
insl
rorb
dec
add
xchg
mov
or
jecxz
repnz
or
or
sub
inc
mov
push
adc
add
mov
orb
xor
jmp
mov
test
push
xor
call
cmp
push
xlat
cwtl
push
cmpl
icebp
push
jl
sub
sti
cmp
xchg
xchg
inc
sub
cmp
cmp
in
adc
mov
inc
dec
outsl
cltd
push
aas
cmpsb
or
add
mov
in
loopne
mov
xchg
repz
lahf
jecxz
sub
jg
push
mov
and
inc
mov
je
mov
ss
or
inc
dec
cmp
cld
jmp
inc
inc
push
hlt
cmp
jge
mov
push
xchg
pop
rcl
lret
mov
cmc
dec
pusha
hlt
jecxz
cmpsb
sbb
dec
in
addr16
inc
add
dec
in
in
inc
stos
push
pop
hlt
cld
xchg
inc
inc
mov
xchg
addr16
push
mov
pop
push
or
push
adc
cmp
add
stos
je
mov
pop
xchg
pop
mov
decb
test
inc
push
or
adc
adc
push
popa
jne
or
popa
xlat
xor
outsb
lods
aam
stos
lock
lods
les
mov
les
pop
cmp
jecxz
out
arpl
lahf
and
push
sti
pushf
dec
pop
xchg
mov
sub
stos
daa
xchg
mov
iret
or
das
repnz
in
sbb
sub
adc
mov
adc
rcrb
mov
leave
or
sti
push
xchg
sub
pop
call
out
adc
mov
sub
xor
sub
or
push
cmp
icebp
jnp
or
sub
call
inc
mov
pop
add
or
push
out
jnp
iret
xchg
clc
lods
ret
orb
sbb
push
or
fs
test
cmpl
mov
sahf
jae
jge
push
mov
aam
adc
inc
stos
shlb
inc
rcrl
dec
push
jne
xchg
dec
cltd
cmp
sub
pop
push
sbb
add
sub
sub
inc
sbb
jnp
jg
lods
cmp
or
adc
mov
jl,pt
in
push
in
or
push
inc
scas
leave
cld
mov
adc
jo
movsl
fwait
lods
sub
or
mov
mov
xorb
mov
sar
test
adc
dec
ror
push
push
mov
loopne
inc
dec
es
sub
pusha
xor
rorl
fmull
dec
or
mov
scas
ret
jmp
std
stos
or
test
sbb
jg
out
xchg
clc
repnz
jbe
inc
mov
xor
mov
inc
and
inc
movsl
mov
add
cmc
adc
js
jecxz
sar
xor
xlat
sbb
sub
in
lret
mov
cmpsl
sub
push
add
xchg
or
mov
push
inc
pushf
mov
push
in
push
lahf
imul
mov
add
cli
mov
add
push
into
mov
sar
mov
dec
test
mov
push
out
js
mov
and
gs
ss
pop
stos
cltd
pop
sbb
or
pop
jge
lds
out
inc
mov
jnp
jne
adc
iret
jmp
fincstp
or
loopne
pop
add
fdivr
jl
and
sarl
dec
scas
enter
mov
cmp
popf
adc
test
adc
dec
dec
movsb
sub
or
xor
xchg
xlat
jmp
xchg
push
sub
sbbl
xrelease
les
enter
ret
jmp
repnz
sub
lret
and
jg
adc
lret
sbb
cmp
inc
jo
loop
pop
pusha
sub
add
repz
push
or
sbb
adc
dec
mov
and
adc
and
mov
cld
push
sub
lret
test
adc
rolb
adc
mov
shr
mov
pop
mov
dec
mov
and
inc
ret
rclb
sbb
repz
push
es
inc
add
das
inc
std
xchg
mov
add
dec
mov
or
test
mov
jbe
mov
mov
adc
push
movsb
pop
inc
xchg
inc
or
adc
adc
dec
pop
sbb
jle
test
jmp
cltd
and
addl
or
inc
pop
sub
xchg
push
cmp
pop
inc
ja
cmpl
xor
xchg
cmp
fldenv
add
xchg
repz
out
daa
out
addr16
dec
mov
xor
daa
mulb
sub
inc
decl
xchg
xchg
or
adc
adc
push
cs
lahf
xchg
fdivrp
inc
jge
inc
pushl
xor
loopne
pop
add
jnp
and
lahf
push
sbb
fisubs
inc
cld
les
test
or
mov
pushf
jmp
lret
inc
pushf
mov
nop
dec
nop
shrl
out
test
les
stos
inc
aaa
xchg
push
inc
aad
sbb
dec
sub
push
pop
xor
mov
and
not
cmp
cwtl
push
pop
das
xor
call
mov
hlt
and
and
push
adc
repnz
adc
adc
test
cwtl
or
jnp
sub
xor
jno
sub
xchg
lret
lock
addb
pop
xchg
jo
shlb
push
or
adc
dec
sbb
cmp
mov
mov
or
test
popf
mov
pop
jnp
mov
mov
mov
sub
jne
mov
mov
cmp
in
outsb
sbb
mov
fists
decb
hlt
xor
das
or
insl
add
shrl
lock
pop
and
lea
adc
fsubrs
sbb
loopne
or
push
pushf
clc
les
push
in
inc
jg
jg
xchg
add
mov
inc
inc
dec
mov
adc
inc
fiadds
repnz
fists
push
pop
mov
popf
pop
test
adc
push
push
and
push
pop
aas
adc
inc
movsl
mov
decb
outsb
jge
push
stos
xor
lock
mov
mov
inc
dec
add
jmp
lea
inc
add
jl
repnz
jnp
aas
and
or
ret
ret
int
aaa
or
cmpsl
push
push
test
pop
cmp
cli
outsb
sub
mov
pop
ljmp
int3
mov
std
or
xor
inc
insb
cli
xchg
repnz
les
inc
adc
jecxz
push
push
jb
jbe
loope
xchg
push
dec
fidivs
mov
dec
adc
xchg
inc
mov
push
sbb
subl
pop
das
fcoml
sbb
adc
and
mov
lds
fsubrl
pop
imul
jmp
inc
xor
xchg
dec
and
add
jne
pop
inc
pusha
scas
mov
fstpl
xlat
les
add
in
ret
hlt
inc
mov
xchg
js
and
mov
and
dec
mov
mov
ret
mov
popf
pushf
sub
ret
adc
sbb
daa
lods
cltd
sub
adc
or
jne
hlt
scas
jno
sbb
repz
mov
or
out
shrb
jne
divl
pcmpeqd
push
xor
and
pusha
push
inc
dec
push
jge
mov
inc
test
je
sahf
mov
imul
push
push
js
sub
or
push
cltd
or
push
sti
and
leave
lea
or
xor
and
dec
jns
xchg
mov
outsb
pushf
mov
or
dec
and
push
mov
pop
adc
and
ret
sub
mov
mov
mov
or
jmp
push
xor
dec
outsl
mov
push
xchg
push
cmp
aam
mov
cmp
add
sub
jne
sarb
xchg
scas
test
shll
daa
add
jmp
xor
push
stos
loopne
fistps
mov
loopne
cwtl
adc
mov
jmp
add
stc
or
rcrl
and
in
aaa
ret
hlt
push
jne
rcr
movsl
fisubrs
xchg
clc
stc
pop
adcb
push
inc
xchg
fxch
push
in
shl
dec
push
pop
js
push
repz
sub
jg
filds
out
xor
ja
sbb
jge
adc
lods
testb
cmc
jl
stc
adc
dec
pop
jae
or
stos
daa
repz
jns
adc
mov
sub
movsl
movsl
cwtl
push
sbb
aas
mov
shr
and
jmp
rcrb
mov
xor
cmpl
in
sub
data16
pop
xchg
test
lcall
pop
sub
mov
inc
cwtl
mov
mov
ljmp
ja
xchg
lock
pop
pop
lods
lcall
pop
xor
push
sbb
xor
cmp
stos
inc
rcl
test
shr
pop
cmpsb
in
sub
daa
jb,pn
stos
mov
and
adc
ret
dec
push
pop
push
out
push
inc
or
icebp
xchg
scas
cmp
pop
cmp
xor
call
dec
xor
pop
je
shl
jmp
add
call
mov
nop
or
and
repz
push
xor
outsb
imulb
aam
ret
aad
jp
jmp
sub
int3
and
test
mov
loopne
clc
mov
jbe
les
mov
mov
jnp
add
mov
xchg
gs
or
add
hlt
addr16
push
add
sbb
and
jae
mov
pop
lods
loopne
in
push
dec
pusha
aam
clc
mov
movsl
push
inc
mov
xor
icebp
push
adc
fs
xchg
xchg
cltd
mov
out
cmp
jnp
and
movsl
cld
and
push
adc
daa
inc
pusha
mov
test
or
shrl
inc
add
addl
or
inc
inc
and
sbb
pop
or
dec
add
int3
les
jl
jl
leave
xchg
push
xchg
lods
sti
mov
shlb
cmp
add
cmp
sub
jecxz
out
pop
mov
clc
ljmp
scas
ja
mov
pushf
pop
sub
mov
icebp
movsb
inc
mov
shrl
lret
jp
test
jae
mov
jne
cltd
loope
lcall
jge
mov
cmp
or
add
pop
and
and
push
shll
rcll
push
dec
clc
jnp
or
xor
add
xchg
cwtl
pop
mov
push
or
shrl
cmp
and
xor
adc
mov
int3
xor
jle
fimuls
mov
add
push
cld
or
xlat
inc
ja
add
inc
dec
jne
or
adc
sub
pop
les
shlb
loopne
and
lahf
cli
cmp
pop
insb
ja
std
mov
pop
add
int3
ljmp
xor
ljmp
pop
dec
in
or
adc
or
aad
and
push
cli
xlat
push
mov
jge
shlb
and
mov
jle
and
addl
dec
push
add
ljmp
dec
jmp
je
inc
dec
lcall
sub
pop
mov
clc
add
sbbb
fidivrs
push
cltd
int
icebp
cmpsb
jmp
rcl
mov
sub
adc
scas
cmp
les
mov
dec
dec
rcrl
pushf
pop
in
clc
mov
jnp
xor
mov
or
and
loope
movsl
data16
mov
and
lcall
mov
mov
jl
into
lahf
movsb
push
jno
push
and
pop
mov
sbb
popf
repz
adcb
adc
dec
xchg
inc
dec
loop
dec
push
and
inc
pushl
sbb
jl
rcrb
scas
lods
ja
sbb
add
sbb
jne
cs
frstor
in
jne
jmp
mov
xor
or
jmp
push
lock
test
and
nop
mov
popa
les
pop
in
push
jl
push
xorb
mov
xchg
pop
loop
das
push
stc
jg
cwtl
jmp
adc
inc
adc
sbb
mov
lock
sbb
out
js
in
and
dec
inc
and
adc
fs
sub
or
scas
sub
mov
clc
dec
add
cmpl
pop
sub
int3
mov
sti
sbb
and
adc
stos
push
call
sub
popf
fisubl
nop
sbb
mov
repz
je
out
and
pop
push
pop
fadd
in
mov
hlt
mov
sub
mov
sub
rolb
imul
adc
lret
jl
pop
inc
pusha
pushf
movsb
adc
lret
fcmovb
loop
or
insl
daa
inc
hlt
cmp
push
jne
repz
sti
push
movsl
in
dec
rorl
fsts
or
iret
or
pop
lahf
in
test
les
call
and
jmp
mov
sub
sub
pop
outsl
les
adc
adc
add
mov
mov
call
aam
outsl
and
adc
hlt
adc
lret
clc
fwait
mov
push
dec
rclb
cmc
sub
adc
ss
lret
cmp
lds
test
lea
daa
jae
mov
xchg
shr
daa
pushf
fs
push
xchg
adc
daa
adc
xchg
push
cmc
fldcw
imul
dec
aad
jl
bswap
jne
cs
pop
pop
xchg
sub
or
ljmp
adc
in
and
push
lods
adc
add
jo
push
jecxz
jne
lret
in
sti
mov
mov
shrl
dec
test
gs
inc
adc
push
adc
or
lret
dec
or
mov
cmc
xchg
subl
cli
pop
jge
movsl
push
sahf
mov
ret
stos
lret
call
mov
cltd
adc
xor
ds
inc
fbld
pushfw
push
push
into
sub
push
dec
outsb
mov
data16
mov
jnp
dec
sub
adc
iret
pop
por
jg
lea
cmpl
popf
inc
inc
dec
sub
loope
test
pop
push
mov
or
inc
insl
add
movsb
pop
push
mov
pop
adc
hlt
xor
xchg
cmp
in
lret
adc
and
dec
push
ja
fsub
sub
das
std
mov
inc
cmpl
in
push
cld
lahf
dec
mov
aam
cmp
sub
sahf
xor
icebp
enter
inc
jo
andb
xor
sub
push
inc
mov
xlat
mov
add
sub
dec
mov
pop
js
jle
je
out
mov
push
mov
aam
jle
xchg
ljmp
xor
push
adc
mov
addb
lcall
fwait
jle
leave
pop
add
sub
xor
xchg
sbb
es
and
out
mov
and
nop
shlb
enter
daa
xchg
sbb
movsb
pop
cwtl
dec
push
or
jns
jecxz
pop
adc
push
mov
cmp
sub
daa
idivl
xchg
pop
cli
sub
jp
jge
mov
repnz
stos
mov
cmpsb
aam
adc
sub
mov
sar
testb
ret
mov
or
iret
xchg
test
jg
lods
adc
and
inc
je
inc
push
cmc
mov
aad
jmp
add
mov
xchg
pop
and
mov
mov
cs
mov
je
aas
negb
aam
dec
jmp
js
jne
pop
jge
movsl
xor
inc
jo
or
push
add
test
sub
aad
outsl
mov
inc
clc
fs
fcom
sbb
cmpl
movsb
fsub
pop
pop
and
jle
hlt
fucomip
hlt
mov
fistps
xchg
xor
ljmp
clc
mov
cmp
dec
jl
leave
xor
nop
adc
jns
aas
mov
daa
pop
xchg
jne
inc
jno
dec
adc
cmp
dec
xchg
test
push
insb
and
mov
clc
call
mov
or
inc
cmp
mov
inc
test
inc
stos
jl
mov
and
mov
jmp
adc
and
sub
sbb
sbb
inc
sbb
pop
scas
sub
mov
inc
pop
fstpl
xor
imul
ret
into
das
inc
add
xchg
daa
fstpl
int3
mov
xor
mov
push
cmp
dec
cmp
mov
xor
dec
xor
pop
push
pop
mov
or
xchg
mov
shlb
sub
mov
xchg
out
arpl
movsl
movl
xchg
and
bound
mov
rol
or
sub
pop
shlb
lods
xor
jne
sbb
mov
adc
stos
add
cmc
mov
jecxz
pop
dec
enter
mov
ljmp
mov
or
jg
movsl
cwtl
add
aam
inc
add
or
scas
xor
jne
mov
sub
cmp
subb
sub
pop
cld
inc
add
cld
jmp
mov
shll
testb
and
lea
scas
mov
xchg
out
jg
add
popf
lret
or
dec
dec
lods
sahf
data16
sbb
jp
sub
call
in
xchg
call
cld
mov
lea
and
mov
sbb
enter
adc
cltd
mov
insl
sbb
aam
push
mov
cld
mov
xor
and
pop
hlt
nop
jns
xor
ret
inc
popf
fstl
inc
je
imull
jns
dec
jge
xchg
and
std
dec
rclb
mov
sub
idiv
int
push
sub
insl
and
push
lea
lcall
jmp
aam
test
inc
daa
and
cmp
pop
test
jae
js
and
or
pop
pop
imull
lret
adc
insb
insl
adc
pop
inc
mov
in
xchg
hlt
dec
mov
jp
dec
pop
repnz
fstps
pop
outsb
adc
push
scas
in
adc
stos
dec
mov
pop
dec
add
add
and
xor
push
or
xor
cld
mov
pop
lahf
push
xchg
and
adc
pop
dec
xor
adc
jle
and
pop
xor
mov
adc
or
mov
xor
mov
in
jmp
rcrb
jne
out
and
jl
and
iret
nop
cmp
adc
outsl
fadds
jne
fwait
jl
xor
scas
ret
push
lret
sub
loopne
jg
push
dec
in
push
loope
rorb
shrb
ret
sbb
roll
adc
mov
xor
push
or
test
sub
xchg
es
cmpb
push
push
adc
mov
push
decl
inc
lret
and
enter
mov
dec
lds
cli
xor
sti
mov
out
fnstenv
or
rorl
push
sub
jmp
sub
sbb
or
adc
xchg
add
push
mov
jmp
sub
lret
sbb
aad
clc
dec
mov
pop
jp
or
mov
sub
jo
xlat
out
nop
jmp
jns
fs
subb
mov
jmp
dec
xchg
inc
jle
fld
or
scas
mov
add
adc
jecxz
mov
xor
mov
nop
and
pop
pop
pop
mov
push
aaa
sbb
sti
mov
sbb
mov
stos
fildll
mov
sub
daa
sub
rol
iret
leave
dec
test
jno
xor
and
test
mov
xchg
or
sti
inc
xchg
test
movsl
inc
add
fcoml
sbb
and
test
jnp
mov
sub
jb
decb
adc
cmp
xor
xchg
mov
jmp
mul
rcll
repz
popa
scas
insb
push
jnp
mov
lods
dec
shr
lods
leave
mov
int3
mov
loopne
repnz
rclb
in
jne
fwait
jmp
hlt
adc
das
and
ffreep
cmp
mov
mov
jg
fisttpll
sub
sarl
pop
imul
and
lret
es
test
dec
ljmp
inc
leave
popf
jl
dec
js
xor
or
les
inc
mov
inc
mov
popa
and
and
scas
dec
add
cs
divb
inc
nop
xor
xor
add
clc
pop
sbb
je
jns
pop
dec
ljmp
mov
jmp
loope
fisttpl
adc
adc
pop
xor
or
js
add
inc
mov
adc
jne
aam
inc
xchg
mov
fwait
clc
add
or
add
roll
sub
cli
and
add
pop
movsl
adc
mov
inc
adc
por
mov
push
adc
sub
mov
jb
push
cmp
mov
push
push
pushf
hlt
push
sbb
js
mov
and
jo
sub
pop
mov
jb
dec
and
das
cmp
mov
xor
mov
mov
pop
sbb
inc
jne
sbb
and
or
test
sub
mov
mov
fld
push
push
out
aam
js
pop
mov
add
adc
sub
fldcw
lea
stos
pushf
jno
cmc
cmp
pop
adc
sub
mov
out
dec
adcb
ficompl
sar
insl
push
or
in
jg
notl
or
jecxz
lods
std
push
test
icebp
mov
inc
push
dec
into
cmpsl
nop
add
dec
cmp
je
cmp
test
cmp
pop
cmpl
cli
add
push
jg
mov
nop
cmova
mov
xor
dec
push
xlat
sub
hlt
movsl
hlt
sub
or
stos
push
sbb
cltd
mov
cmpb
pop
aaa
and
cli
mov
add
clc
mov
in
rcl
mov
repnz
in
jne
mov
inc
fwait
sbb
test
jne
xor
sti
xchg
inc
clc
dec
add
sbb
xor
xchg
roll
xchg
inc
addr16
inc
int3
or
xchg
out
daa
xchg
jl
xchg
pop
lock
scas
sub
and
cwtl
popw
cwtl
push
dec
jb
cs
cmp
mov
inc
mov
inc
imul
xchg
loope
ret
imul
fbstp
push
pop
mov
es
nop
aam
stc
lock
nop
jge
lea
push
add
out
mov
and
dec
out
lret
out
xchg
sub
sub
xchg
arpl
dec
or
mov
cltd
loop
add
jnp
lret
mov
hlt
mov
or
and
dec
add
sbb
jns
push
adc
dec
mov
jmp
jecxz
sar
cld
pop
test
ja
arpl
int3
sbb
mov
pop
cmpsb
pushf
shlb
sub
adc
cmpsb
decl
mov
mov
inc
pop
scas
xchg
loopew
jnp
cs
inc
mov
xor
cs
sti
pop
mov
mov
negb
jbe
or
psubsw
mov
cmp
xchg
mov
lods
pop
xchg
add
jl
push
xchg
lds
mov
leave
add
push
cld
ret
pop
sub
jle
imul
fistl
xchg
push
mov
sbb
push
xchg
mov
jne
pop
add
addr16
repz
shll
inc
leave
nopl
pop
sub
dec
icebp
lahf
inc
pop
cwtl
or
sbb
mov
push
xchg
mov
mov
sub
xor
xor
add
inc
add
sub
fs
jbe
jno
or
and
or
daa
cld
mov
jge
inc
push
xlat
out
push
xchg
pop
xor
mov
jle
or
stos
addr16
or
test
inc
mov
mov
fidivrl
or
pop
movsb
pushf
insb
push
lods
fcmovbe
sub
cmp
into
adc
sub
pop
xor
adc
arpl
cmpl
insb
inc
push
xor
mov
out
sub
cmp
ljmp
test
daa
lret
popf
xor
dec
mov
adc
rcrb
out
das
or
sub
bound
xor
mov
and
mov
xor
data16
popa
xor
cmp
outsb
mov
addr16
mov
lea
adc
xlat
lods
push
aad
inc
cmpsb
adc
out
popa
xor
sub
mov
imul
sarb
inc
jmp
sbb
cmp
addl
adc
mov
cld
cmp
jmp
movsl
and
sbb
out
shr
adc
stos
sub
jg
dec
cmc
mov
push
adc
sub
and
pop
insb
xor
and
out
jmp
loop
or
test
dec
dec
or
stos
loopne
xchg
mov
stos
mul
or
adc
pop
or
inc
jmp
adc
inc
push
mov
xchg
out
push
test
sahf
xlat
rorl
ja
inc
mov
fistpl
stos
or
pop
pop
push
push
and
mov
sbbb
gs
cli
insl
jae
jmp
lret
mov
sbb
xchg
and
sarl
jne
push
jecxz
or
pop
sub
arpl
sbb
push
insb
dec
pavgb
push
sub
dec
adc
dec
nop
into
pop
mov
fldl
mov
mov
adc
inc
dec
les
inc
jecxz
xchg
mov
loope
xchg
mov
shr
js
hlt
xchg
je
fisubl
hlt
push
sub
jmp
lret
scas
lock
imul
les
out
into
mov
and
push
jle
data16
shlb
or
rcl
mov
repz
pop
repnz
stos
aad
mov
add
push
adc
or
jne
repz
je
xlat
xchg
jbe
daa
push
cld
jno
mov
jmp
pop
ja
sub
adc
stc
adc
or
mov
pmulhw
push
mov
shlb
sub
mov
xor
adc
mov
out
and
inc
movsl
fstpl
and
jae
setnp
in
fmuls
mov
pop
or
fistpl
imul
pusha
and
imul
push
pusha
and
cmpsl
cld
rcll
or
jp
cmp
or
cwtl
vmovaps
loop
lock
les
in
dec
jno
and
movsb
rcll
inc
dec
xchg
scas
mov
sub
add
out
add
daa
xchg
and
jl
popl
or
pop
pop
leave
jo
mov
adc
das
pop
add
mov
lock
jg
shrl
add
push
or
jmp
aaa
movb
push
or
cmp
add
adc
jne
sbbl
int
or
shll
or
out
sub
outsb
xor
jmp
popa
loope
add
or
je
int3
mov
nop
int3
inc
enter
xchg
mov
inc
mov
rclb
or
mov
nop
sub
insl
xor
fsubr
push
mov
mov
sub
push
pop
mov
adc
out
ljmp
or
fs
mov
jle
xor
sbb
and
push
adc
jle
push
sbb
cmc
sbbb
dec
add
ror
push
int3
ljmp
clc
cs
add
fsubrs
mov
adc
fcmovnbe
repnz
or
mov
shrb
sbb
mov
inc
dec
add
incl
sbb
loopne
jle
jbe
pop
push
sarb
or
fmull
and
fnstenv
int3
pop
ljmp
fadds
enter
sbb
inc
or
shlb
std
sbb
push
sbb
les
jl
xchg
add
and
ret
jmp
lcall
das
je
leave
cmc
rcll
adc
pop
iret
cmpsl
lds
push
jns
pusha
xchg
fdivrs
test
lret
xchg
in
test
in
pop
pop
sub
pop
cmp
add
cmpsl
push
sub
lods
in
loope
jl
out
push
cmp
xchg
and
xchg
jle
jb
dec
jge
and
cmp
repz
add
cli
mov
xchg
pushf
sub
add
inc
inc
in
repz
fcom
xor
enter
or
shlb
adc
sbb
mov
jo
inc
mov
push
dec
lahf
shll
xchg
dec
inc
dec
mov
js
xor
sub
enter
ljmp
inc
fdiv
and
mov
push
cmp
sbb
lods
xchg
fnsave
sub
mov
mov
xor
andl
fadds
jle
xchg
inc
stos
add
dec
or
shlb
rcll
add
lods
adc
movsb
sub
mov
inc
in
test
int3
and
adc
mov
mov
dec
nop
dec
mov
lcall
fadds
fimull
push
push
ss
mov
push
repz
push
add
push
enter
mov
dec
imulb
lret
dec
ds
or
or
lock
aam
or
dec
ja
cld
jecxz
into
sub
xor
jne
inc
add
mov
adc
in
cmp
push
inc
sbb
fildl
fsubl
xor
push
aam
fsubs
jg
out
xor
mov
hlt
xchg
mov
gs
mov
cmp
or
aaa
sub
cmp
aam
mov
xchg
fadd
inc
xor
stos
adc
or
push
add
fs
adc
cli
adcb
orb
pop
aam
cmovb
and
fs
mov
adc
mov
sub
cmp
xor
sbb
or
adc
mov
lods
cmp
inc
or
inc
xor
movsl
xor
adc
xor
dec
add
inc
sub
fs
dec
cli
adc
inc
mov
xor
sbb
pop
dec
mov
cmp
test
outsb
lahf
inc
inc
and
mov
dec
movsl
mov
call
movsb
inc
sbb
scas
push
sti
in
push
pop
test
daa
xor
insl
inc
push
push
or
jb
mov
out
jg
xlat
push
outsl
fmul
inc
lods
lds
adc
jnp
icebp
push
bound
jg
and
aaa
daa
lock
imul
or
push
sub
in
adc
add
cmp
outsl
and
inc
add
pop
mov
sbb
cmp
add
loopne
inc
or
in
cmp
adc
jmp
xchg
inc
xchg
and
movsl
ljmp
pop
add
mov
mov
add
inc
push
mov
push
jmp
add
xcrypt-ecb
cmpsl
pop
lods
dec
mov
in
lock
dec
and
cmpsb
adc
xor
lret
addb
add
jbe
inc
clc
in
scas
mov
imul
and
xchg
gs
dec
jo
bound
adc
aaa
cs
inc
bound
pop
inc
sub
sub
cmpsb
mov
xchg
inc
leave
ljmp
or
rolb
test
mov
adcl
gs
or
cltd
mov
push
jae
push
xor
jns
sbb
add
and
orl
or
jmp
fs
ret
dec
cmp
aad
sti
mov
adc
push
daa
mov
scas
lods
fadd
push
xlat
repz
adc
arpl
inc
data16
leave
outsb
in
hlt
xchg
movsb
or
jne
ret
jbe
dec
loopne
xorl
inc
adc
adc
loopne
add
push
or
mov
or
mov
add
jge
or
orl
jo
mov
adc
testb
jns
dec
pop
adcw
inc
mov
mov
add
adc
pop
fimull
ret
adc
mov
cmp
ljmp
xor
jbe
adc
rol
rcrl
scas
aas
jecxz
leave
repnz
out
sub
xchg
push
xor
movb
icebp
dec
pop
stc
dec
icebp
int
and
add
lea
xchg
stc
outsb
test
pop
ljmp
cmp
jge
adc
jg
sub
and
dec
sti
push
and
dec
jge
fwait
push
pop
add
xchg
mov
sbb
push
and
jns
hlt
or
inc
clc
push
adc
dec
mov
mov
in
lds
cli
pushf
mov
aaa
mov
dec
loop
xor
aam
lock
push
out
xor
push
adc
ja
xchg
pop
pop
sbb
lea
or
loopne
cmp
insb
lret
test
repz
aad
jnp
test
sub
pushf
cmp
push
fs
vunpckhps
je
sbb
aam
sbb
pop
shrl
adc
fistpl
and
xchg
fwait
popf
daa
nop
pop
adc
pop
repnz
push
ljmp
pop
test
in
imul
push
inc
xchg
iret
stos
sub
addr16
and
push
arpl
xor
test
push
or
sub
add
rcrl
scas
mov
out
dec
scas
pop
xchg
ljmp
daa
add
dec
add
jmp
test
scas
push
arpl
push
outsb
inc
dec
adc
cmp
add
out
cmc
loop
cmp
adc
shrl
cmp
call
or
inc
cmc
dec
fstl
ficoms
adc
clc
bound
sbb
in
mov
push
fbstp
cmpb
pop
jle
dec
xchg
and
dec
push
sub
mov
inc
cmp
pop
inc
movswl
xlat
sahf
push
out
shlb
sbb
pop
push
fcoms
jmp
out
std
mov
dec
xor
es
in
mov
inc
mov
das
xchg
aam
inc
mov
cltd
jnp
sub
les
dec
inc
jo
repnz
and
lret
incl
enter
adc
sub
push
ret
sub
mov
cmp
dec
test
dec
push
push
js
dec
push
and
lods
js
xor
xchg
loopne
and
pop
icebp
adc
pop
sub
sti
bound
mov
dec
push
jnp
cmp
cmp
stos
xor
pop
dec
inc
pmaxub
out
adc
int
xchg
int3
adc
xor
ficompl
mov
jns
sbb
mov
dec
adc
adc
xor
push
repz
push
pop
sub
or
sti
push
scas
fsts
test
sbb
push
mov
rolb
test
sub
adc
inc
xor
lret
dec
mov
sub
out
mov
push
ret
sbb
es
xchg
inc
pop
or
in
in
dec
mov
test
jne
aad
mov
das
jne
in
sub
add
inc
out
mov
mov
shrb
jns
outsl
jmp
mov
inc
outsb
pop
inc
cmovne
and
fsubrl
and
adc
mov
out
loop
pop
adc
mov
inc
movsl
outsb
cmp
cli
into
add
ljmp
xorb
or
adc
dec
lods
out
push
cmp
push
cmpb
or
sbb
inc
js
enter
testl
inc
sbb
dec
test
fwait
push
repz
adc
adc
adc
fbld
push
or
das
or
push
in
xor
push
add
cmc
add
and
mov
sub
mov
jbe
divb
daa
sbb
push
iret
inc
pop
mov
sbb
mov
and
xor
ret
and
jne
je
test
jmp
xor
push
inc
mov
jnp
adc
out
xchg
out
xchg
stos
test
jmp
xchg
gs
inc
cmp
cmp
dec
xchg
push
xchg
addb
or
ds
jno
push
clc
or
push
inc
adc
xor
sub
jne
xlat
or
orb
and
leave
cwtl
js
xchg
test
mov
or
adc
jo
fdivs
jne
inc
clc
mov
dec
clc
sbb
ss
dec
push
shrl
insb
sbb
inc
repnz
mov
push
test
adc
xchg
mov
dec
pop
xchg
sub
jmp
and
push
jle
xchg
shrb
iret
push
push
cmc
dec
repnz
pop
mov
xor
push
lock
pop
roll
test
mov
sahf
inc
lock
push
or
adc
and
sbbl
jmp
test
mov
xchg
push
pop
ret
idiv
ja
push
dec
aaa
leave
and
in
pop
rolb
in
nop
loopne
cmpsb
adc
pop
push
xchg
xchg
in
and
aam
aad
and
or
push
add
or
mov
sub
das
loopne
push
or
testb
clc
sub
fs
and
data16
mov
mov
lods
cwtl
inc
cmp
test
sub
inc
or
cwtl
pop
fimull
arpl
je
mov
cmc
jno
imul
inc
mov
or
sub
xchg
in
cwtl
pop
mov
je
data16
xchg
cmpsb
or
mov
sahf
dec
mov
cmpl
and
xor
mov
lahf
mov
mov
mov
jbe
push
fs
test
and
xor
sub
or
or
leave
jo
sub
test
sub
jp
xor
mov
inc
mov
nop
jae
inc
adc
or
xor
je
gs
es
push
adc
sub
jge
shll
inc
movsl
push
lahf
repnz
aas
push
neg
sbb
lret
pop
outsb
repz
adc
mov
inc
arpl
sbb
adc
xor
adc
loopne
push
or
jle
imul
xor
adc
popf
lock
mov
mov
cmpsl
sub
leave
and
pop
or
and
push
cmp
cmp
push
repnz
fiadds
nop
in
xor
adc
dec
or
jl
adc
or
jnp
hlt
inc
cmpsl
push
push
push
pop
pop
rorb
movsb
pop
sub
xor
xchg
sbb
aam
sub
inc
dec
hlt
jge
fwait
popf
xlat
lcall
leave
mov
imulb
dec
adc
adc
or
sbb
jno
and
roll
jg
fists
mov
test
ficoms
push
or
xchg
ret
xchg
in
iret
push
xchg
and
test
xchg
int
daa
hlt
inc
mov
lods
dec
cmc
or
sbb
dec
rcrl
in
sub
es
mov
dec
in
sub
sahf
inc
dec
cmp
cmp
xor
pop
popl
hlt
cmc
or
mov
fistpl
je
add
push
in
push
repz
lcall
sbb
fcoml
scas
xor
addr16
sub
sub
mov
sub
or
mov
incl
or
jecxz
mov
stos
mov
lcall
fwait
bound
inc
jne
outsb
mull
insl
clc
lahf
jne
pop
jns
loope
iret
je
je
or
dec
jo
push
pop
sbb
popa
outsl
push
mov
pushf
pop
mov
lds
and
inc
cmc
inc
mov
jnp
test
xchg
fwait
addb
push
pop
cld
pusha
inc
or
test
rclb
jmp
push
sub
movsb
sbb
xchg
icebp
adc
push
dec
lock
out
mov
add
arpl
lods
inc
and
push
xchg
sbb
sbb
and
pop
out
and
out
mov
les
movsl
shlb
jle
sub
enter
mov
mov
or
enter
or
sub
inc
test
outsl
hlt
scas
inc
pop
adc
pop
out
fistpll
sub
loopne
stc
cmp
cmpb
out
sbb
cmp
std
fs
cmp
es
mov
xchg
xchg
popa
ds
lea
push
dec
mov
dec
icebp
jp
push
ret
cmc
sub
push
orl
xor
mov
sub
mov
outsl
push
pop
jae
pop
mov
and
or
scas
xor
clc
dec
fwait
imul
div
jb
cmovs
outsl
jnp
xor
mov
adc
jmp
test
movsl
movl
mov
add
test
add
add
aam
sub
fbstp
popf
push
cmpsl
sbb
jmp
stos
call
test
cmp
pop
sbb
xchg
inc
mov
mov
pop
adc
sbb
xor
push
cmp
adc
jmp
clc
and
push
cmp
jne
or
fdivr
or
mov
mov
call
dec
daa
inc
sbb
add
dec
enter
bound
aas
pop
xchg
repz
push
pop
in
orb
inc
sbb
sub
fdivrl
nop
aas
pusha
stc
pop
shr
test
xchg
mov
xchg
lods
jnp
xorl
inc
pusha
jg
xchg
add
mov
dec
push
and
ja
sub
push
inc
stos
in
in
sbb
or
cmc
sbbb
jg
lods
or
cmp
aaa
jne
pop
mov
addr16
lret
mov
jmp
fucomp
adc
fcomps
fisubl
hlt
xor
xchg
popf
sbb
mov
or
mov
test
mov
xchg
sbb
pop
sbb
sbb
push
pop
push
sahf
push
stos
arpl
inc
popf
shlb
and
sub
testl
movsb
sub
pop
adc
sbb
enter
xchg
xchg
and
lret
pushf
mull
stc
dec
inc
sub
jl
adc
loop
adc
sub
movl
inc
es
dec
dec
add
jne
roll
xor
lret
jle
lret
lods
rclb
pop
sbb
test
iret
sbb
sbb
cli
lret
scas
imul
and
and
js
add
cmp
nop
xor
mov
cmp
sub
out
scas
sbb
mov
les
and
jge
movsl
mov
inc
adc
jmp
jns
adc
sub
jg
lods
pop
fimull
pop
out
push
sbb
jl
lcall
inc
add
mov
push
jle
jmp
dec
jnp
std
daa
xchg
mov
cli
pop
adc
or
pop
and
mov
and
call
cmc
imul
lret
out
sub
mulb
dec
xchg
mov
push
popf
icebp
inc
adc
mov
movsb
and
sbb
jne
push
fsubr
sahf
sub
in
cld
bound
sar
out
adc
push
call
jae
and
pusha
or
xchg
adc
dec
adc
xchg
test
cli
mov
out
push
das
mov
cltd
jmp
test
mov
and
movsl
cmp
lock
cmpsb
enter
cmp
out
inc
lea
mov
decl
inc
nop
jle
push
aad
roll
mov
daa
dec
hlt
adc
stos
sub
leave
aam
jle
adc
and
addr16
dec
or
and
and
dec
fstl
mov
mov
movups
jge
rol
dec
push
mov
jns
lea
test
aam
lahf
pop
and
and
mov
sub
mov
and
repnz
add
cmc
aas
sub
lock
mov
lea
jo
ja
cmpsl
inc
imulb
mov
adc
push
lahf
pusha
lea
mov
adc
adc
mov
adc
xor
loopne
es
jmp
fists
ret
inc
fs
mov
pcmpeqw
cmpsl
pop
or
jae
repnz
pop
pop
sub
inc
push
or
cmp
xchg
and
mov
ficomps
jle
xchg
sub
jmp
test
test
popa
loopne
repz
jmp
clc
pop
lods
xchg
icebp
insl
shll
push
shrl
mov
xchg
cmp
ret
add
cmc
or
icebp
andl
lret
jg
mov
test
leave
or
add
pop
pop
sbb
push
cs
int3
dec
adc
mov
xor
pop
test
adc
and
push
lret
push
dec
adc
inc
mov
js
decl
dec
lds
push
cmp
loope
roll
cli
dec
cmp
imul
push
movsb
sub
xchg
push
sbb
clc
enter
add
inc
jl
or
popa
jmp
movsl
dec
mov
inc
inc
pop
arpl
pop
subl
and
sbb
and
push
pop
nop
mov
push
inc
push
shr
pop
dec
mov
mov
push
dec
mov
test
jbe
das
ja
lret
aam
mov
test
cmpsl
test
fsubp
test
mov
mov
mov
into
and
cmp
int3
hlt
cmp
xor
scas
mov
mov
repnz
adc
push
call
loope
lahf
xchg
in
mov
xor
inc
dec
lock
ds
lret
jge
mov
jmp
insb
jne
add
mov
pop
mov
out
bound
jbe
ja
stos
call
outsb
mov
mov
flds
clc
clc
xchg
out
adc
jmp
incl
jge
faddp
push
mov
xchg
xchg
ret
xchg
clc
int
rcll
out
adc
xor
push
aam
outsl
mov
xchg
insl
xchg
xchg
mov
sbb
or
inc
mov
in
add
jmp
adc
addl
mov
cmpsb
hlt
fimull
xlat
in
xor
es
jns
sbb
mov
add
dec
pop
insl
sub
push
scas
or
cld
icebp
pop
mov
sbb
iret
xchg
fnsave
mov
test
xchg
add
jbe
xchg
das
and
push
test
push
mov
addr16
xchg
mov
pop
lods
out
mov
push
lods
cmp
mov
mov
adc
pop
push
sbb
dec
gs
sbb
jae
cmp
in
add
jmp
jl
push
xchg
adc
mov
dec
push
adc
xchg
mov
xchg
leave
push
add
adc
mov
cmp
mov
adc
pusha
adc
xor
jo
mov
or
hlt
cmpsl
fadds
push
sti
or
hlt
pop
fldenv
mov
rorb
movb
inc
pop
push
sub
fcoms
test
add
pop
shrl
jl
and
pop
jmp
xchg
sub
mov
stos
lds
nop
xchg
xchg
lods
addb
xchg
sub
push
pop
lahf
negb
xor
adcl
enter
rclb
inc
mov
sub
or
jb
jl
inc
or
push
fimuls
lods
and
test
jae
mov
nop
scas
sbbb
unpcklps
mov
in
jne
out
mov
inc
es
xchg
ja
enter
sub
dec
cs
adc
sbb
add
or
mov
jo
jmp
sbb
stos
jmp
fcoms
lock
sarl
les
xchg
fdivrs
inc
or
decb
movsl
nop
xchg
inc
mov
xchg
and
lea
cli
les
loope
ja
leave
rolb
add
sbb
mov
push
adc
lret
or
and
xor
inc
push
mov
xor
fists
pop
imul
push
cmp
push
ficoms
outsl
sbb
test
push
mov
and
lods
in
push
push
jae
sub
lods
pusha
cmpl
push
jae
mov
mov
push
fmull
xchg
aam
movsl
gs
das
jo
xchg
fimuls
std
jnp
mov
fsubp
in
scas
loopne
pusha
dec
push
jle
push
jle
adc
mov
cld
stos
mov
jl
loop
cmc
mov
cltd
lock
das
out
sub
or
int
adc
cmp
scas
es
xchg
lret
pushf
or
push
or
scas
inc
test
or
mov
jge
mov
mov
push
enter
mov
and
jo
js
adc
pop
rol
cld
push
xor
xchg
int3
fcomps
mov
int3
sub
push
aad
idivb
in
cmp
enter
lock
test
adc
push
ja
repz
out
ja
sub
push
inc
push
push
mov
stos
enter
sbb
out
mov
push
cmp
lret
iret
pop
xchg
adc
xor
mov
cmp
adc
jno
popf
adc
jbe
adc
and
mov
mov
out
nop
jae
cmp
sub
adc
jmp
mov
in
outsb
in
push
mov
ss
and
les
sub
pop
enter
data16
lds
mov
inc
cmp
pusha
mov
ret
cmp
adc
mov
inc
icebp
jmp
inc
or
lahf
push
popf
popf
inc
inc
adc
mov
push
mov
cmp
out
and
xor
jo
lds
sub
inc
sahf
sub
mov
jge
mov
adc
pop
or
sahf
popf
mov
cmpsl
movsb
push
stos
je
sub
push
xchg
push
sub
nop
mov
xor
cmp
lds
push
lret
sub
adc
movsl
jne
data16
push
xchg
cmc
cmp
std
add
pusha
add
test
flds
and
mov
lds
into
mov
ret
push
pop
scas
sub
test
and
das
xor
stos
loop
lahf
mov
pop
call
mov
adc
mov
push
push
inc
cs
test
dec
sub
das
mov
sahf
notl
adc
in
lret
or
aad
sub
lods
push
jne
mov
mov
aam
sub
je
fwait
xor
data16
and
lret
adc
xlat
hlt
xor
sub
daa
jae
add
adc
jno
push
add
adc
fdivp
insl
cmp
and
push
sbb
mov
xchg
loope
pop
sub
pop
push
nop
xchg
add
jg
pop
ficoml
and
rcrl
rclb
sub
inc
cltd
mov
jl
mov
cmp
test
jge
mov
adc
jl
xchg
sub
jmp
xor
loopne
es
test
cmp
jmp
jbe
aad
rcr
sub
jg
add
popf
pop
jg
fsts
cmp
in
xchg
mov
push
dec
scas
xchg
mov
loopew
test
pop
cltd
push
xor
xchg
orb
fiaddl
scas
in
xchg
mov
or
lcall
pushf
imul
mov
cs
imul
or
xor
and
cli
loopne
and
adc
cli
js
in
cmp
inc
or
sti
adc
popf
dec
repz
cmp
xchg
outsl
das
mov
and
rcll
jge
dec
jbe
push
mov
xor
out
xchg
pop
cmp
test
inc
sbb
in
xor
inc
xor
inc
scas
inc
inc
xor
xor
in
popf
popa
lods
or
push
dec
hlt
aaa
mov
mov
jns
das
push
cmp
push
icebp
data16
xchg
or
por
xor
lret
pushf
dec
loopne
inc
cmp
inc
rolb
arpl
stc
rclb
fistl
insb
mov
or
xchg
mov
or
mov
sti
leave
nop
in
pop
cwtl
push
mov
xchg
fdivl
push
jl
mov
mov
push
push
subl
mov
leave
jmp
insb
or
clc
pop
jg
sbb
mov
jo
push
out
pushf
mov
andl
fwait
sub
int3
adc
and
dec
dec
sti
repnz
es
jns
sub
jg
scas
jl
lahf
test
jns
lock
pop
add
orb
cmp
mov
xor
aaa
cvtps2pi
repz
xorl
or
cmpl
pop
sti
cs
xorb
sub
pop
mov
mov
enter
push
and
sub
cs
stos
mov
lahf
mov
and
and
mov
adc
mov
mov
add
test
stc
sbb
or
sbb
inc
push
adc
cmp
xor
outsl
nop
push
cmp
dec
cmpsl
clc
into
jnp
subb
xor
mov
xchg
or
xor
and
pop
ja
icebp
lock
imul
adc
leave
ljmp
es
aam
or
cmp
pop
scas
mov
adc
mov
fildl
out
mov
add
mov
mov
movsl
cmpsb
and
adc
lret
lea
into
fxch
mov
dec
leave
or
std
adc
test
or
mov
sbb
sub
pop
aaa
and
add
and
mul
mov
adc
lret
inc
sbb
jg
xor
inc
mov
ret
xchg
jne
enter
push
xor
cld
inc
lret
stos
and
push
xchg
dec
mov
sarl
jne
mov
leave
push
adc
or
jne
int3
pop
leave
sbb
xor
dec
std
outsb
dec
sub
fldl2e
cmp
jp
sub
les
push
inc
test
sub
loopne
push
daa
and
xor
cmc
dec
subb
mov
jne
bound
adc
xor
rcl
adc
xor
xor
je
addb
cmp
add
mov
jbe
lods
dec
push
or
fisttps
add
sub
add
jg
pop
or
or
cmp
adc
jnp
ljmp
repz
mov
pop
les
je
or
enter
adc
add
mov
lock
dec
sbb
pop
and
inc
adc
or
xchg
pop
lahf
jae
mov
mov
cmp
std
dec
and
enter
add
sbb
sti
mov
lahf
hlt
lods
sub
or
lock
jge
popa
push
pop
adc
jmp
xlat
sahf
pop
mov
movsb
pop
or
je
jmp
xor
cmpb
adc
or
cwtl
bound
mov
push
mov
sbb
adc
test
popf
dec
outsl
mov
sub
push
pushf
popa
and
imul
lods
dec
into
and
mov
cmp
sbb
lock
negb
jl
clc
sbb
repnz
dec
and
dec
nop
out
out
push
push
dec
push
inc
dec
add
adc
mov
mov
and
fnstenv
cmp
in
daa
sbb
jl
ds
andb
in
and
out
push
mov
stc
nop
adc
dec
push
jmp
inc
pop
loop
xchg
mov
lods
cwtl
adc
jno
imul
icebp
shrb
sub
jae
dec
or
inc
gs
jne
adc
dec
popa
jae
adc
adc
fimuls
cmc
roll
scas
sbb
dec
je
scas
adc
cmc
pop
popf
xlat
sbb
sbb
out
inc
sub
das
stos
and
jae
leave
or
dec
outsl
adc
data16
shlb
cmp
orb
sbb
pop
push
icebp
pop
add
mov
pop
xor
mov
leave
adc
jno
jge
sub
jle
mov
xor
mov
mov
insb
push
call
dec
dec
add
and
pop
xor
or
sub
cmp
add
mov
pop
adc
and
inc
das
mov
lock
xorb
xchg
or
pop
cs
and
out
push
xorb
in
dec
lahf
loop
or
push
dec
test
push
or
popf
dec
adc
adc
inc
scas
mov
adc
jmp
jp
nop
push
xor
and
and
test
xor
mov
and
sub
hlt
xor
fbstp
xchg
push
add
leave
mov
jl
enter
outsb
std
insl
movsb
mov
pop
xchg
jp
int
in
pushf
test
sub
xchg
mov
out
lds
sub
lock
and
inc
mov
fs
push
add
stos
inc
mov
cmp
inc
mov
adc
adc
push
push
xchg
ds
pop
lock
es
ss
shrb
or
add
movsb
push
imul
xchg
adc
cs
pop
jns
and
ljmp
les
jno
imul
xor
adc
out
adc
out
mov
inc
pop
outsb
cs
les
gs
movsb
sub
or
sbb
divl
mov
lds
fs
cmpb
xchg
jp
inc
movsb
xor
ja
mov
cmp
xchg
test
pop
movsb
sbb
and
add
add
xchg
add
jg
fucomp
aam
dec
movsl
inc
sbb
cmp
xchg
test
je
cmp
xchg
rcrb
adc
xchg
adc
int3
or
mov
mov
xchg
inc
adc
ds
mov
mov
mov
test
ljmp
xor
add
out
jle
lret
inc
pushf
xor
xorb
stos
fwait
std
imul
and
pop
mov
xor
cmp
aaa
or
sti
xlat
popa
out
add
jmp
jl
add
sarl
outsl
jb
shr
mov
xchg
xchg
adc
cmp
or
loope
sti
jg
or
fcompl
popa
pusha
fwait
pop
lock
addl
repz
cwtl
sbb
xorl
xlat
mov
inc
sbb
adc
movsb
cs
scas
add
test
adc
and
inc
in
and
negl
sub
fcoml
shlb
add
xlat
or
or
push
pop
add
push
imul
adc
leave
push
movsb
sub
adc
gs
enter
imul
pop
adc
movsb
sbb
or
sbb
and
or
fs
icebp
or
mov
jno
leave
push
pop
sbbb
mov
push
push
push
adc
leave
in
in
lods
adc
adc
sbb
movsb
xchg
cmp
lds
cmp
sub
sbb
sbb
or
mov
mov
test
scas
dec
sub
or
jl
or
out
cmp
fs
or
or
pop
lods
adc
xchg
xchg
imul
enter
or
and
repz
in
shll
mov
xchg
mov
pushf
inc
xchg
or
xchg
cwtl
clc
or
pop
dec
ds
ds
jl
jl
stc
or
enter
js
jl
jl
mov
das
or
cmpsb
mov
cs
fbld
add
aam
pop
rolb
les
xor
in
mov
pop
sbb
add
aaa
mov
into
hlt
xor
sete
call
hlt
ljmp
and
fisubl
adc
fsubrp
rcpps
xor
loop
mov
sbb
inc
inc
daa
aam
jmp
jl
fld
xchg
lea
fstl
cmp
std
test
sub
pop
sub
push
sbb
into
cwtl
mov
cmp
shll
pop
push
and
sbb
xchg
leave
adc
ror
out
popa
jnp
pushl
mov
pop
jne
xor
aam
push
and
fs
pop
adc
dec
inc
std
pushf
lret
dec
pop
andl
enter
or
aas
push
xlat
sarl
in
dec
or
xor
shlb
mov
mov
and
xchg
xlat
out
jo
jge
js
inc
xor
push
fs
xorb
xor
jmp
ds
xor
shll
and
and
sbb
in
popf
jns
jno
outsl
mov
xchg
sti
sub
testb
jo
xchg
inc
inc
dec
movsl
mov
cltd
aam
aam
shlb
sub
subl
jbe
push
mov
adc
inc
jmp
nop
cmp
jne
xchg
xor
loop
add
fs
xlat
sbb
sahf
jb
push
and
gs
das
movsb
adc
orb
pop
push
inc
test
js
icebp
jbe
inc
pop
cli
fs
stos
xchg
or
xchg
inc
push
in
jo
push
rcr
mov
mov
push
loop
jge
sub
test
and
in
sub
adc
mov
or
dec
or
sub
mov
sbb
dec
out
test
cmp
neg
rorl
sub
inc
jge
push
lcall
ret
jne
dec
subl
stos
mov
mov
adc
clc
aad
xchg
and
inc
sub
fcompl
jmp
movsl
mov
fs
cli
mov
ret
loope
int3
and
fs
xchg
jno
sbbb
push
test
jne
xchg
cli
in
int3
cmp
mov
lock
xchg
dec
cld
mov
jno
xchg
lods
iret
cmpsl
xchg
ficompl
ret
mov
mov
int3
cmpsb
adc
fmulp
pop
mov
xchg
stos
fstpt
cmp
nop
imul
push
nop
inc
inc
je
jecxz
pop
ret
cmpsl
adc
jns
out
or
data16
test
xchg
cmp
pushf
pushl
inc
push
inc
ljmp
inc
mov
push
mov
pushf
or
into
scas
sub
push
lahf
jb
dec
fsub
nop
pushf
dec
xor
add
add
test
sbb
jle
pusha
xchg
mov
jno
stos
dec
push
inc
fs
mov
or
push
gs
movsl
pop
outsb
loope
js
or
jge
sub
add
add
push
push
mull
pop
imul
dec
les
cwtl
mov
xchg
mov
bound
mov
dec
jne
fimull
pop
hlt
outsb
insb
add
scas
je
or
xchg
pop
inc
sub
divb
test
pop
cld
je
mov
push
adc
loop
pop
shl
in
jne
or
adcl
aad
lods
push
mov
pop
cmp
xlat
mov
pop
push
and
je
pop
xor
cmp
jb
or
inc
mov
imul
cld
es
xchg
add
orl
inc
imul
jbe
idivb
ficoms
dec
xchg
push
mov
inc
and
push
clc
sub
sbb
or
cmc
xchg
rorb
out
scas
sub
and
cmp
mov
addr16
fstps
jne
inc
shl
mov
push
mov
je
cmp
insb
mov
cmc
rcrb
scas
pop
fildl
stos
jecxz
sub
inc
sub
or
enter
inc
and
cmc
or
mov
fdivl
test
arpl
mov
fildl
rorl
je
leave
mov
xlat
jb
icebp
or
inc
push
lock
push
ret
pop
pop
xchg
adc
sub
pushf
ds
pop
imul
aam
out
pop
in
dec
sub
add
popa
data16
outsl
cld
mov
sbb
xchg
mov
xor
mov
push
flds
dec
lods
cmc
jge
xor
outsb
sub
pop
and
imul
dec
or
je
dec
cs
cs
pushf
out
sub
push
xchg
cmp
cmp
inc
cmp
pop
in
dec
mov
jb
fs
test
imul
enter
jecxz
pop
jmp
push
cmp
ljmp
cltd
xchg
adc
repz
hlt
pop
fldt
adc
jne
add
add
and
jmp
in
ror
and
xchg
mov
xor
jnp
jae
mov
shll
movsl
xchg
mov
mov
fisubs
mov
mov
fs
adc
push
adc
icebp
adc
dec
add
add
and
popa
jne
fs
subb
frndint
dec
adc
fcompl
in
call
cmpsb
jno
mov
mov
jg
xor
lods
add
add
add
adc
inc
mov
xchg
jecxz
push
adc
pop
cmpsl
enter
xchg
mov
pop
sbb
das
jae
pop
and
mov
pusha
rcl
adcl
dec
add
jmp
lods
ret
es
sbb
and
or
and
sarb
xor
mov
push
xor
rcr
icebp
clc
jmp
sti
lock
sti
inc
das
add
adc
daa
push
stc
jno
add
cli
ljmp
adc
pop
call
or
mov
popf
jl
dec
cmp
pop
lods
xor
jge
stc
lret
popa
mov
push
sbb
movl
inc
add
add
arpl
xor
xor
dec
adc
outsl
and
addb
and
shrl
lahf
xchg
lods
sub
cmpsl
mov
bound
in
orb
adcl
cltd
lods
mov
push
shrl
je
mov
pop
lcall
jb
pushf
xlat
flds
mov
pop
mov
fdivp
inc
aad
in
mov
inc
dec
or
inc
and
idivb
jo
lcall
fsts
mov
pop
adc
stos
jns
mov
rcll
push
push
out
xor
sub
cmp
and
in
push
jne
or
push
add
sub
jns
xchg
xor
imul
sub
pop
test
mov
push
jae
out
out
lret
arpl
mov
stc
cmp
xchg
dec
mov
or
lods
in
add
fs
sub
into
inc
mov
or
in
xor
dec
in
mov
adc
or
sbb
xchg
clc
aas
stos
test
mov
push
mov
dec
mov
test
shll
cmp
pop
push
add
pop
sahf
mov
jne
les
outsl
bound
cmp
mov
add
cmp
test
cli
xor
fwait
mov
sti
stos
arpl
sbb
or
pop
orl
out
es
bound
sbb
repnz
sub
fmulp
sub
int3
lahf
pop
in
jge
sbb
add
stos
das
sub
push
sbb
mov
adc
imul
mov
pop
mov
or
cmp
jl
imul
push
pushf
addr16
ret
pop
movsl
clc
push
test
je
fistps
xchg
leave
sbb
inc
cmp
jle
cwtl
cli
dec
inc
pusha
lods
sbb
and
dec
xchg
sbb
call
nop
xor
xlat
push
sub
decl
loope
cmpsb
jns
and
mov
pop
mov
push
jno
pusha
jmp
jnp
rcrl
sub
pop
sbb
push
jnp
sti
xor
sbb
inc
xchg
adc
cwtl
and
mov
xor
movsl
lcall
xor
fwait
nop
fadds
pop
pushf
nop
cltd
popf
pop
mov
pop
rol
jl
push
hlt
pop
dec
adc
mov
push
adc
jp
and
adc
cmp
or
lahf
xchg
stos
xchg
sbb
push
or
pusha
pop
pop
push
loop
imul
or
test
rorb
idivl
icebp
sahf
or
mov
dec
inc
ds
pop
sub
sub
mov
or
mov
subb
imul
cmp
pop
mov
push
adc
dec
xor
insl
inc
ds
pop
dec
cmp
or
adc
adc
xor
hlt
adc
das
jp
xlat
scas
push
movsl
xchg
cmp
pop
or
or
or
xorb
insb
pop
push
mov
ljmp
pop
into
adc
xchg
dec
dec
push
inc
int3
iret
lock
das
decl
cwtl
test
das
bound
cmp
das
jb
push
push
dec
add
pop
fisubrs
scas
mov
mov
in
iret
stos
mov
mov
cltd
dec
add
mov
daa
jo
cmpsb
sub
add
divb
cltd
pusha
cmpsl
sub
dec
movsl
xchg
fwait
enter
inc
cmp
or
ja
push
dec
inc
data16
and
into
mov
push
mov
or
jmp
xor
sarl
enter
stos
dec
sub
pushf
icebp
ret
jbe
push
cmp
lahf
repz
jne
repnz
stos
testb
test
xchg
je
sbb
test
mov
mov
fsubrs
jl
or
sub
xor
and
aaa
in
cmp
rorl
scas
jecxz
leave
push
and
and
fstp
jecxz
pop
mov
loopne
dec
mov
mov
outsl
icebp
lods
movsl
sub
mov
rolb
jmp
out
and
pop
dec
in
dec
inc
cs
es
faddl
mov
iret
movsb
int3
jmp
lock
fstpl
int3
xor
jle
lahf
add
adc
push
lea
das
jne
ficoml
sbb
xchg
test
xor
inc
popf
out
je
sti
repnz
mov
jp
dec
mov
mov
cmp
sbb
and
movsb
pop
lcall
or
xchg
loopne
mov
test
mov
jbe
and
cmp
daa
inc
hlt
adc
mov
hlt
lcall
mov
push
mov
add
clc
lea
mov
aad
mov
daa
aaa
push
cmp
aas
mov
push
shr
jae
add
nop
adc
sbb
lahf
xchg
pop
sbb
xchg
cld
rolb
or
lods
jle
cmp
or
movsb
dec
sub
add
fdivs
lods
pop
push
mov
insl
popa
jo
test
mov
xchg
xchg
xchg
lea
lea
add
sub
mov
adc
aam
add
jl
or
mov
add
cltd
cwtl
test
dec
pushf
cs
sub
inc
shll
mov
mov
sub
imul
hlt
mov
xchg
enter
inc
sub
sub
dec
xor
or
sbb
pop
xor
mov
cli
and
nop
sub
xor
adc
and
xchg
add
sub
fisubl
shll
scas
sbb
adc
cmp
pushf
add
popf
cmp
rcrb
cmp
adc
mov
in
sbb
jle
add
inc
dec
jne
cltd
sbb
adc
sub
mov
imul
sub
jo
imul
std
ss
stc
fs
cwtl
insb
or
sub
test
mov
leave
aam
mov
add
cld
cmp
addb
in
jo
mov
fnstenv
loop
dec
sub
or
inc
mov
lret
pop
jo
fstpt
popa
movsb
das
out
pop
push
sub
mov
add
mov
jne
sbbb
dec
cmp
out
xchg
es
inc
out
or
out
ds
pop
movsb
sbb
sete
mov
test
adc
adc
mov
mov
mov
mov
movsb
cli
xchg
mov
clc
and
inc
jmp
push
xchg
lock
lcall
pop
and
inc
pop
sbb
pop
mov
and
pop
cli
add
call
xchg
or
dec
or
xor
sti
dec
jne
mull
lods
jo
cmpsl
je
jnp
movsb
loopne
adc
gs
test
pushf
aad
sub
mov
mov
mov
cmp
push
add
add
jae
cld
aas
mov
push
lahf
inc
inc
push
dec
jl
into
js
cld
test
ret
lret
dec
je
and
test
add
mov
xor
and
push
sbb
jmp
movsl
cmp
mov
dec
mov
cmp
mov
jns
ds
pop
cmp
jne
inc
pusha
js
incl
ret
dec
push
in
jle
add
jns
push
pop
fisttps
out
std
mov
add
mov
popf
fbld
or
or
pop
lods
mov
or
mov
test
mov
in
ljmp
mov
xchg
adc
or
gs
outsb
sarl
mov
jno
or
adc
aam
imul
xor
insl
bound
push
dec
sbb
adc
int
or
xor
or
push
inc
lods
xor
ljmp
mov
sub
pop
pop
push
out
mov
or
and
jo
test
pop
adc
xor
sub
fldenv
xor
and
adc
loope
mov
adc
addr16
xchg
lret
ljmp
push
fstps
push
inc
fs
outsb
mov
pop
jbe
inc
cvtps2pd
outsb
push
std
xchg
jns
nop
arpl
mov
adc
inc
pop
lcall
sarl
mov
inc
imul
add
sbbl
insb
or
repz
clc
xchg
inc
or
and
mov
hlt
and
adc
stos
and
mov
inc
negl
es
loopne
dec
mov
mov
subb
icebp
or
js
lea
push
and
dec
test
adc
xor
mov
call
sub
cmpsl
jb
jl
xchg
test
test
or
and
les
sub
mov
fmuls
adc
lods
inc
hlt
jp
les
mov
fnstenv
pop
xor
popa
test
or
mov
add
fnstenv
push
or
pop
xlat
dec
and
push
clc
stos
and
fdivr
xchg
out
cmc
data16
dec
and
add
andb
aam
pop
shld
mov
in
stos
and
enter
stc
and
push
fs
lcall
icebp
or
ss
cs
aad
imul
cmp
add
les
add
and
dec
call
jae
and
in
movl
fs
jbe
call
xchg
aam
xchg
push
xor
lods
fadds
fwait
sub
repz
daa
xchg
add
decl
inc
sbb
xchg
inc
int
inc
hlt
popa
jo
fsts
cmp
mov
xlat
inc
inc
aad
mov
xchg
push
sbb
or
test
or
or
push
movsl
and
cmp
or
inc
cmp
or
push
pop
insb
inc
sub
adc
and
xchg
add
inc
jb
jne
mov
mov
push
inc
dec
add
cmpsl
mov
push
ljmp
add
jl
in
mov
xchg
inc
adc
cmc
sub
aam
xchg
sbb
cli
blcs
push
popa
and
and
in
mov
lret
mov
rorl
popf
add
sub
cld
clc
enter
imul
mov
std
pushf
lods
dec
adc
leave
fsubs
imul
and
adc
mov
inc
mov
cwtl
mov
adc
dec
popf
adc
sub
dec
stc
pop
and
pop
ret
jb
movsl
call
in
sbb
dec
adc
incb
mov
or
add
adc
and
sbb
invd
cmp
subb
adc
sbb
cmp
mov
sbb
dec
or
xor
add
pop
or
lock
jb
jno
adc
lods
sahf
fwait
lock
and
in
movsb
dec
les
lods
adc
fs
adc
mov
loop
adc
push
pop
adc
or
inc
push
movsl
int3
adc
imul
cmp
mov
dec
es
and
in
lret
adc
mov
mov
pop
add
pusha
sub
jnp
mov
dec
or
or
repnz
outsl
dec
sub
sub
ret
sahf
inc
jmp
ds
push
adc
or
lds
and
inc
push
lods
leave
push
rorb
pop
pop
add
dec
jns
xchg
add
push
out
cmc
icebp
das
out
dec
push
insl
cmpl
mov
jo
jge
xchg
leave
push
push
jmp
inc
inc
or
inc
or
sbb
inc
shlb
or
and
or
sbb
or
xorb
insl
and
mov
mov
mov
xchg
adcl
xchg
fstl
adc
sbb
push
sbb
jmp
test
sub
pop
xchg
in
mov
adc
mov
in
stc
sbb
loope
sbb
mov
fs
or
adc
lods
dec
in
mov
in
lea
jb
rcrl
mov
pop
xchg
popa
imul
push
cltd
adc
pop
sbb
lds
dec
lock
aaa
mov
push
and
imul
pop
popf
lods
repnz
pop
aam
or
push
or
test
xchg
jo
lods
and
dec
xor
in
inc
enter
jge
cld
jno
repz
les
lret
je
rorl
cwtl
pop
insb
enter
or
inc
divb
insb
cmp
and
mov
pushf
push
mov
push
clc
cmp
and
xchg
xor
xor
xor
ss
cmp
xor
inc
inc
inc
inc
inc
inc
dec
dec
add
dec
dec
dec
dec
push
push
add
push
push
push
push
pop
pop
push
pop
js
dec
adc
mov
movsb
ss
out
repnz
xchg
stos
loopne
add
repz
xchg
std
adc
nop
das
jge
pusha
add
ss
mov
inc
mov
jnp
popf
mov
mov
xor
sub
dec
mov
popf
jecxz
aam
and
xchg
xchg
les
push
fidivrl
xchg
pop
xlat
inc
out
sbb
aam
loopne
out
xchg
inc
push
xchg
pop
push
inc
sbb
mov
pop
ljmp
stos
jne
call
push
push
pop
mov
and
jge
xlat
iret
imul
add
or
cli
imull
sti
or
orb
jnp
mov
jge
and
enter
dec
adc
add
enter
mov
push
or
add
or
rolb
mov
mov
adc
inc
dec
flds
cmp
adc
mov
inc
sub
dec
sbb
or
jmp
jno
sub
aaa
ret
xor
pop
jmp
mov
push
jno
mov
sub
xchg
push
jb
and
mov
xor
jl
or
cld
mov
and
sub
dec
mov
jmp
cmc
or
rcrl
cmp
inc
sbb
movsb
push
push
hlt
or
pop
testb
mov
std
inc
cmpsb
leave
push
jns
imul
push
dec
das
shll
or
shlb
cmp
sub
xor
adc
ds
jbe
add
and
enter
imul
adc
xlat
ljmp
iret
push
imull
push
sub
or
jmp
lea
mov
or
iret
xor
mov
movsb
push
push
sub
jmp
push
sub
mov
shl
enter
cmpsl
push
test
or
sbb
or
mov
add
fsubs
push
lds
iret
cli
iret
clc
nop
std
dec
mov
or
mov
dec
addb
cmp
add
mov
mov
je
jmp
or
enter
scas
and
movb
dec
jmp
lock
sub
mov
mov
pushl
mov
pop
xchg
xor
mov
outsl
inc
or
xor
cmp
jg
imul
hlt
cli
scas
je
or
das
pop
mov
mov
jmp
jns
out
and
adc
mov
addb
inc
adc
popf
or
inc
cmp
jle
arpl
xor
xchg
mov
sub
jne
jle
cmp
div
movsl
push
sbb
push
or
adc
cmp
cmp
mov
jmp
push
cmp
cmp
hlt
sbb
lcall
pop
ss
cmp
out
in
mov
sbb
ljmp
lcall
xchg
dec
adc
inc
shrb
and
fstpt
mov
sbb
xor
rclb
xchg
and
sbb
cmpsb
or
cld
jo
xchg
pop
xchg
lock
cs
in
ret
or
push
stc
push
pop
mov
cmp
jecxz
dec
popa
clc
xor
in
mov
jbe
inc
pop
dec
scas
fucompp
push
and
sbb
daa
xchg
insl
shrb
mov
insb
fildl
movzbl
cmp
xchg
jo
and
lods
and
imul
sti
das
xor
lea
mov
imul
insb
pusha
movsb
in
cld
mov
ret
test
dec
scas
pushf
cmp
movsb
push
dec
aad
loopne
push
out
lods
test
jecxz
sub
and
and
mov
inc
and
fcoms
mov
xchg
jne
call
scas
pop
call
mov
sub
in
sub
sub
sub
jo
loope
mov
ret
aas
call
insb
or
mov
add
mov
pop
push
inc
xchg
pop
cli
jl
js
and
dec
cmc
imul
test
mov
icebp
adc
jae
js
mov
mov
jle
loope
pop
orl
xchg
enter
enter
imul
sub
lds
xor
cmp
je
mov
test
stos
js
movb
test
bound
fwait
imul
mov
push
shll
add
xlat
inc
jo
jnp
xchg
sarb
add
xor
loop
or
or
je
inc
adc
jmp
clc
sub
mov
dec
call
push
ds
push
mov
les
jne
cmp
lea
dec
data16
mov
mov
mov
jl
lock
stc
push
movl
lret
aas
test
in
xor
xor
and
sub
mov
or
mov
sti
repnz
mov
pop
mov
and
ljmp
push
cmp
or
stc
fmuls
clc
lea
ffree
movsb
xor
loopne
stos
es
and
or
loop
and
sub
call
loopne
dec
rorl
mov
pushf
and
jecxz
cmpsb
adc
push
and
lret
push
push
xor
dec
pop
cmp
xor
cmpsl
xchg
test
adc
dec
dec
mov
xchg
jns
pop
je
icebp
stos
adc
mov
addb
adc
jmp
mov
lods
je
loop
test
xlat
daa
in
stos
clc
ret
popf
fstpl
mov
lcall
test
mov
dec
sti
dec
in
inc
test
fs
insl
in
ds
out
bound
les
mov
cmp
or
pushf
pop
das
outsl
mov
stc
leave
call
mov
dec
xor
mov
popf
inc
les
jp
inc
hlt
or
bound
mov
lds
pop
lahf
mov
mov
or
cmp
aad
mov
dec
insb
mov
mov
xor
rcll
push
leave
inc
mov
in
mov
enter
adc
rorl
stos
je
xchg
pop
ds
pop
hlt
iret
cmpsb
testb
jne
add
xchg
stc
inc
add
or
xor
pop
adc
lds
int3
fwait
pop
pop
fs
xchg
mov
xchg
push
dec
push
and
jl
add
push
adc
pop
pop
mov
dec
adc
int3
call
jge
add
into
dec
jo
loop
sahf
push
inc
cmp
fs
jmp
pop
and
leave
sbb
push
roll
cmp
push
sahf
dec
dec
fsqrt
and
lock
add
in
cmp
jge
std
aad
fiadds
es
mov
mov
loop
or
push
mov
inc
dec
jne
aam
leave
std
and
xor
cmp
mov
pop
xchg
and
test
or
push
sub
or
push
ja
cwtl
jmp
push
or
mov
scas
int3
daa
pop
pop
frstor
lods
into
pop
dec
push
test
sarb
mov
testb
sahf
or
fcoml
xchg
or
mov
xchg
icebp
movsb
arpl
divb
jecxz
lret
lret
add
fsubrl
ja
clc
hlt
jne
push
and
sbb
addl
mov
test
add
and
stos
adc
jne
or
js
mov
fldl
pop
xor
or
testl
pop
add
lret
rep
addl
add
add
scas
mov
or
fsubrl
fs
imul
imul
pop
cmp
or
mov
out
xor
adc
and
pushf
cmp
enter
fldl
add
add
push
jno
inc
inc
or
mov
push
mov
and
adc
xchg
mov
je
mov
add
jno
inc
cmp
jne
mov
adc
cmp
sub
pop
fsubr
aam
ret
sub
xchg
sub
lret
lock
sub
and
fs
sarl
lods
in
mov
test
nop
push
icebp
sub
push
aas
test
sub
dec
or
xor
xchg
adc
mov
cmp
or
mov
pop
mov
sbb
adc
jmp
pop
inc
loopne
adc
mov
jnp
cmp
push
or
adc
inc
and
cld
iret
xchg
mov
test
movsb
adc
add
mov
loop
sbb
daa
sbb
pushf
sub
or
cwtl
enter
es
out
push
das
dec
jg
std
int3
inc
cmp
cli
clc
dec
cld
jne
pop
repnz
movsb
mov
and
dec
addr16
dec
loop
jle
lret
adc
popa
push
jl
dec
and
jecxz
add
dec
cmp
inc
sub
sahf
xchg
jne
xor
mov
shlb
lods
pop
shlb
test
add
dec
aam
cmpsb
xor
sti
push
mov
inc
xchg
add
xchg
lock
rclb
inc
xor
gs
adc
jmp
and
rclb
and
adc
mov
xchg
or
push
dec
cld
fidivs
cmp
inc
sbb
or
je
cmp
lock
jmp
xor
xor
orb
mov
mov
hlt
je
add
pop
add
inc
jge
sbb
push
cltd
sub
or
or
or
fdivs
daa
sahf
enter
mov
cld
and
sub
loope
push
mov
mov
dec
and
test
cmp
jnp
mov
dec
sahf
jnp
sbb
outsb
pop
inc
adc
out
adc
xchg
sub
or
hlt
sub
xchg
out
lret
xlat
cmp
sub
sub
clc
adc
and
shrl
inc
imul
ljmp
js
mov
push
loop
or
in
adc
rorb
movsl
aam
inc
mov
sub
mov
aam
xchg
test
test
movsb
iret
adc
cmp
or
xchg
hlt
jge
nopl
lahf
jecxz
xlat
xor
shl
popw
xchg
lods
mov
cmc
sub
movsb
xor
imul
or
xchg
cmp
jne
mov
sbb
push
and
cmp
push
hlt
xchg
orl
add
nop
cld
xchg
xchg
les
cmpsl
andb
xchg
mov
xchg
sub
sbb
sti
mov
pusha
sbb
out
dec
out
dec
je
bound
adc
or
gs
push
mov
push
or
or
leave
inc
cmp
aas
sub
inc
bound
mov
loopne
xchg
adc
and
dec
add
sbb
mov
jae
and
jne
aam
jbe
mov
sub
cld
sbb
movsb
adc
mov
movzwl
push
sub
add
or
mov
adc
sub
xchg
mov
and
outsb
adc
cmp
inc
ret
adc
in
nop
or
pop
cmpsb
mov
sub
add
popa
mov
sub
xor
in
cmc
imul
je
dec
cli
fnstsw
dec
sub
mov
sbb
xchg
popf
pop
adc
xor
dec
push
mov
mov
fstps
lods
jp
mov
sub
mov
push
sub
scas
lods
movsb
pop
inc
out
hlt
push
jl
dec
jbe
or
out
incb
mov
ja
call
xchg
adc
jl
push
pushf
cmp
push
lea
mov
push
jp
pop
clc
sub
faddl
scas
and
clc
les
jb
cmp
dec
es
cmp
and
or
and
jne
fstpt
inc
mov
or
xchg
cltd
test
xor
cmp
mov
lret
scas
loop
mov
adc
sbb
lock
pop
lret
adc
aad
in
adc
sub
xchg
movsb
iret
gs
ret
rcr
sub
xchg
lret
pop
in
pop
test
push
fcomi
dec
xchg
xchg
loopne
push
mov
and
enter
xor
mov
jg
add
in
jo
loopne
mov
int
push
xchg
and
ljmp
mov
or
xlat
jmp
rcl
fisttpll
into
or
inc
mov
outsb
cmpsb
and
movsl
sub
xor
add
lahf
fistpll
cmp
and
push
push
rorb
adc
loopne
lcall
sbb
aas
mov
mov
ja
movsl
sub
je
sarb
xor
mov
cwtl
mov
and
dec
sti
and
int
sbb
jns
mov
movsb
xchg
inc
out
fs
pop
cmp
nop
hlt
cmpl
js
adc
lock
cmpsb
aaa
mov
dec
xor
add
movl
or
mov
sub
lods
pop
mov
mov
xchg
xchg
rorb
jo
dec
and
dec
xor
push
jbe
nop
call
loope
push
repz
jge
pop
repnz
cltd
or
mov
rcrl
add
push
jecxz
hlt
sti
xorl
xchg
push
cmp
das
add
pop
mov
mov
cmp
pop
jg
in
sub
mov
xor
std
ja
pop
or
jmp
scas
push
popa
test
scas
mov
test
jne
dec
sti
imul
pop
mov
push
sbb
stos
addr16
xchg
int3
inc
push
daa
and
movsb
or
add
jb
push
add
sub
das
cmp
add
dec
notl
ja
jg
sbb
scas
or
in
addr16
rcrl
xor
mov
scas
or
test
inc
or
or
cld
popa
mov
push
push
not
jae
ret
out
sub
and
add
bound
inc
ljmp
pop
enter
movsb
sub
and
lret
and
repz
adc
mov
hlt
sarb
sbb
or
outsl
lahf
hlt
nop
ret
push
aam
ret
fwait
or
les
dec
ret
es
jae
scas
out
dec
cmp
ret
iret
mov
add
cmp
ret
nop
lods
jp
push
jb
loop
dec
loope
cmp
xor
pop
pop
stos
jno
lock
cmp
mov
or
jle
roll
jne
std
cwtl
push
test
orb
orb
pushf
jne
hlt
push
cmpb
fcoms
pop
jo
sub
adc
subl
loop
xchg
mov
pop
adc
scas
bound
bound
adcl
push
jmp
scas
mov
aas
je
dec
mov
mov
adc
xchg
aas
inc
mov
or
xchg
inc
jmp
mov
mov
adc
pusha
sub
adc
inc
or
push
cmp
pusha
repnz
pop
fstl
fiadds
std
xchg
orb
cmp
fnstsw
xor
test
lock
jne,pt
xor
outsb
and
or
lret
mov
rorl
ret
push
inc
sub
mov
jl
jb
fbld
out
inc
je
jecxz
repnz
and
loopne
jne
mov
adc
ja
arpl
ss
pushf
xchg
dec
ljmp
xchg
cld
cmp
cmp
fs
cmp
je
imul
std
dec
inc
test
dec
test
mov
lock
cwtl
cmp
push
xchg
adc
movb
outsb
xor
push
out
xchg
xchg
pop
ljmp
inc
cmpl
orb
nop
daa
subps
pop
mov
out
dec
test
jl
dec
lcall
rcl
sub
jbe
dec
adc
movsb
popl
bswap
xor
into
push
and
xor
in
and
jns
xchg
in
das
pop
test
mov
fs
test
leave
idivl
lock
std
and
and
push
or
sub
or
xor
adc
mov
je
sbb
jne
je
loop
pop
jnp
mov
sbb
andb
test
jb
jno
and
mov
push
sbb
loope
cmp
and
add
dec
pop
sub
or
ret
adc
push
cmpsb
and
adc
js
and
push
xor
adc
push
repz
pop
popa
mov
ret
das
xrelease
into
or
cmpsb
sub
enter
xchg
sbb
pop
pop
adc
push
or
ss
out
pushf
mov
push
repz
xchg
call
fmull
stos
in
je
adc
dec
insb
mov
int3
lahf
or
rcll
xor
jmp
push
orb
arpl
add
xchg
inc
enter
dec
mov
push
push
or
imul
inc
call
xchg
fsubl
pop
and
jge
cmp
loop,pn
xchg
xor
fwait
mov
dec
mov
or
pushf
cmpsb
xchg
xchg
jmp
cmp
adc
xchg
test
scas
xor
shlb
jo
jecxz
mov
mov
sub
jno
es
es
lcall
inc
xor
pop
adc
call
shrl
dec
cmp
cs
popa
mov
mov
out
and
pop
imul
xchg
cmp
push
push
addr16
sti
ret
test
push
mov
xchg
xchg
sbb
das
out
push
imull
dec
adc
jns
adc
ret
adc
in
or
and
jp
nop
insb
repz
adc
or
js
inc
mov
aas
push
pop
insb
mov
jmp
fs
pop
sub
in
das
xor
data16
pop
push
out
xor
mov
inc
ds
push
ret
sub
ret
movsl
push
inc
ret
loope
xor
mov
cmp
stos
lods
mov
mov
frstor
cmp
test
and
pop
enter
cmp
xor
xchg
cmp
inc
out
jno
or
mov
push
and
sub
pop
or
inc
or
fcompl
mov
push
out
out
push
adc
mov
jmp
fdivrs
and
mov
shr
jmp
xchg
jg
sub
add
or
push
and
push
int3
scas
cmpsb
loopne
inc
jl
mov
xchg
jl
js
jl
mov
out
js
test
push
xchg
ret
dec
xor
mov
jmp
pusha
push
add
sbb
xor
xor
push
and
and
mov
push
dec
mov
adc
sub
ficoms
push
rolb
mov
fidivrl
pushf
mov
in
aas
mov
mov
dec
adc
sub
out
mov
pop
push
inc
adc
loopne
rclb
popf
daa
xor
push
push
stc
aas
leave
push
or
bound
pop
repnz
nop
aad
jle
mov
mov
call
or
loop
add
jae
xchg
cmp
dec
jne
mov
das
test
cmp
add
dec
mov
nop
std
and
js
inc
mov
ror
jmp
movb
push
lock
insb
or
cld
cli
pushf
test
push
pusha
xor
jmp
aaa
pushl
daa
test
adc
and
nop
dec
jge
mov
adcl
and
jne
jno
movsb
dec
add
add
sub
es
or
sub
fwait
in
push
mov
and
inc
ror
cmp
dec
out
push
test
out
loope
out
sbb
stc
pop
adc
jmp
roll
or
mov
outsb
cmpsl
imull
icebp
pop
pop
imul
insl
fdivl
mov
hlt
mov
clc
mov
loop
loop
sub
stos
jne
mov
aas
xchg
add
pop
nop
inc
pop
add
rcrb
mov
lea
dec
cwtl
sbb
int3
push
aam
jno
sub
jb
push
xchg
das
daa
dec
xor
int
loopne
xchg
or
push
or
loope
pop
push
push
or
lock
jp
dec
xor
rol
or
ficoms
pop
pop
mov
inc
call
and
call
mov
push
adc
data16
and
pop
in
popf
jecxz
loopne
inc
clc
mov
arpl
and
dec
out
mov
hlt
imul
xor
inc
es
and
int3
jo
add
inc
jmp
pop
mov
decl
pop
xchg
mov
push
je
cli
lret
movd
sbb
inc
jmp
aam
mov
addb
push
adc
jmp
inc
dec
outsb
xor
mov
or
mov
mov
es
jle
jle
std
or
mov
inc
dec
dec
clc
pop
and
sub
loopne
dec
pop
aas
and
push
push
add
push
inc
xchg
add
iret
mov
jmp
clc
loop
lahf
ret
inc
push
sbb
sub
cmpsl
adc
xchg
and
jne
mov
sub
cmp
sub
cld
ljmp
inc
mov
xchg
pop
cwtl
in
cmpsb
push
adcl
jmp
xchg
push
jl
xchg
pop
mov
adc
cmp
pop
shr
ljmp
test
mov
adc
imul
mov
and
mov
sub
loopne
je
jmp
aam
cmp
cmc
inc
adc
fs
cwtl
faddl
clc
movsb
pop
lahf
sbb
cli
sub
cmp
jle
int3
inc
inc
and
shr
push
imull
mov
xchg
lock
mov
add
sti
jl
inc
repz
sub
ret
mov
js
and
adc
inc
rcl
jmp
mov
sub
ret
pop
cmp
inc
pop
mov
pop
sbb
cmpb
push
inc
inc
inc
and
in
jmp
daa
orb
add
or
mov
fmuls
jl
and
jg
push
dec
mov
jle
adc
jne
mov
stos
cltd
and
cmp
lods
cmp
aas
inc
cmp
jnp
mov
adc
jne
div
mov
pop
inc
add
pop
dec
pop
sub
cmp
push
js
sub
jmp
stos
lcall
icebp
inc
or
inc
add
xor
mov
das
out
jl
jbe
pop
jo
sbb
inc
popa
fs
aad
sub
dec
xchg
in
and
call
add
js
push
daa
pop
ja
mov
or
cld
pushf
loopne
push
out
clc
iret
xchg
mov
std
xlat
dec
mov
and
in
mov
stc
mov
or
loope
mov
rcrl
fadd
xchg
mov
pop
ja
push
mov
push
jne
inc
fwait
push
movzwl
dec
ret
leave
xorb
or
je
movsb
adc
mov
pop
sub
repnz
mov
movsb
cltd
loopne
xor
ret
lods
xlat
loop
add
es
pop
push
clc
pushf
mov
jp
jmp
std
shll
push
in
or
pop
shl
mov
mov
fs
push
jge
iret
ljmp
add
push
mov
sub
push
mov
push
js
or
mov
and
aad
xor
xor
mov
push
mov
cmc
jno
aaa
adc
mov
pop
hlt
rclb
push
cs
mov
icebp
cmp
xchg
jge
cmpsb
dec
mov
or
sbbb
mov
mov
mov
sub
int3
push
fmuls
or
pushf
or
inc
imul
je
out
pop
sarl
cmp
mov
sbbl
adc
xlat
and
mov
lock
pop
jmp
cld
cmp
cld
pop
pop
and
adc
sbb
adc
xchg
jne
out
and
sarb
lds
rcl
xchg
enter
mov
repz
inc
add
fcompl
mov
aam
add
sub
and
add
mov
fdivr
pop
mov
mov
mov
outsl
push
push
outsl
cwtl
ja
add
mov
adc
jnp
push
jb
mov
cmp
ret
or
fs
pop
mov
sbb
cmp
ljmp
test
notb
in
xor
xor
inc
cmp
pop
dec
mov
pop
pop
stos
jno
jmp
jle
imul
xchg
ljmp
insb
mov
repz
fstl
xchg
repnz
pusha
add
jmp
lret
cmc
inc
push
jns
pop
out
pop
push
jge
push
addl
adc
inc
testb
or
je
inc
sub
sar
daa
das
cmp
rol
add
sbb
cs
or
mov
xor
stc
and
inc
dec
insb
repz
and
outsl
xchg
test
repz
add
fldz
xchg
jmp
add
nop
pop
sub
or
pop
mov
mov
jp
xchg
mov
cmpb
sbb
mov
push
push
pop
mov
inc
outsb
sub
repz
xor
inc
push
push
and
xlat
je
jmp
dec
incb
push
and
cli
add
rolb
ret
inc
sbb
mov
addr16
and
lahf
lret
cltd
or
mov
push
adc
das
or
jp
add
stos
in
add
cld
movb
enter
and
imul
pusha
push
ficomps
xor
nop
inc
cmp
lret
inc
into
rcll
add
neg
and
test
bound
movb
and
or
push
or
ret
and
adc
cltd
push
cmp
inc
mov
jge
in
pop
clc
daa
jb
testb
mov
adc
nop
addb
test
or
cmp
sub
push
cmp
sbb
imul
decb
sbb
or
sbb
push
clc
pop
cmp
mov
cmc
and
je
scas
and
xor
es
push
adc
inc
int3
mov
mov
inc
jmp
push
or
mov
test
adc
mov
pop
mov
sti
sbb
push
mov
out
inc
xchg
in
pop
jns
inc
mov
jns
or
mov
jno
cmp
addr16
jnp
fsubs
and
jmp
movsl
and
out
int3
jg
mov
leave
mov
in
imul
and
fwait
mov
xor
inc
add
pop
adc
or
pusha
std
ret
sub
cmpsb
cs
push
dec
add
pushf
mov
or
jne
xor
dec
mov
sbb
dec
mov
fidivl
mov
jmp
ja
push
jb
dec
or
mov
ja
or
xor
jno
ret
sbb
mov
add
add
sbb
sbb
out
ret
xchg
push
mov
lret
sete
xor
imul
jne
xchg
push
adc
cmc
xor
and
push
fcomp
jmp
sub
xchg
call
outsl
or
jno
push
xchg
adc
push
sbb
mov
push
hlt
cld
push
adc
adc
fists
mov
jo
push
inc
mov
sets
icebp
jo
xchg
je
sub
je
add
imul
je
daa
aad
cld
sub
in
xchg
push
lock
dec
loopne
mov
in
call
es
scas
stos
adc
or
adc
mov
cli
jbe
or
sarb
inc
test
shrl
xchg
ljmp
push
cs
pop
mov
lock
aad
enter
pop
addb
xor
mov
dec
in
add
in
lods
sbb
call
xor
mov
popf
movsl
dec
inc
jns
in
popa
stc
inc
pop
test
dec
and
xor
dec
dec
jmp
popa
xchg
mov
fisubs
xchg
or
sbb
inc
jmp
ret
jne
pop
push
out
cwtl
or
es
aad
sub
shrb
arpl
add
mov
mov
pusha
movsb
mov
clc
push
dec
cltd
xlat
sub
xchg
add
push
push
xor
push
scas
lods
xchg
xchg
ficoml
and
fcoms
insb
or
gs
enter
pop
lcall
sub
ljmp
mov
or
inc
cmp
add
push
push
xor
inc
jne
mov
pushf
sbb
stos
and
cli
std
pop
add
fsubrs
inc
cwtl
and
xchg
negl
mov
mov
jo
or
mov
and
push
mov
xor
sub
ret
and
cmp
cmp
ret
movsb
pop
nop
cmp
adc
pop
cmp
loopne
fnstenv
push
leave
scas
jnp
lock
icebp
mov
inc
sub
or
mov
adc
adc
cld
inc
cmp
xchg
or
cld
fsubrs
int3
fisttpl
cmp
xchg
enter
pcmpeqb
or
nop
cmp
push
jne
sbb
in
test
clc
imul
sub
mov
sbb
pop
stos
mov
jbe
clc
in
jg
mov
lahf
pop
mov
inc
adc
cmp
call
ljmp
mov
cmp
add
call
mov
bound
add
daa
subl
or
pop
cmp
push
ja
sub
sbb
xor
xor
xor
outsl
in
pop
dec
rcll
cmp
js
pop
test
lock
loop
imul
inc
xchg
mov
jl
je
inc
sbb
stos
enter
movzwl
loopne
jmp
or
xor
mov
dec
repz
les
xchg
or
stc
adc
jle
mov
lahf
jecxz
cmc
loop
vpinsrw
popa
movsl
xchg
xor
fcomip
std
test
inc
fcmovnb
addl
push
loopne
es
or
and
gs
push
jle
adc
je
or
inc
lcall
and
or
fs
and
insl
aas
sub
addr16
jno
cmp
push
insb
arpl
mov
xchg
lds
mov
dec
nop
or
sub
add
sub
enter
fldcw
adc
stc
rcrl
xchg
adc
or
mull
add
fdiv
jg
or
lcall
add
pushf
and
and
aaa
cmp
mov
sbb
ret
pop
cmp
mov
adc
subl
adc
jecxz
push
fsub
pop
lea
imul
insb
push
fisubrs
adc
pop
scas
jns
dec
or
lea
or
fcomps
cli
stc
movsl
lret
adc
out
in
in
sbb
out
sub
in
and
push
in
and
fadds
or
dec
xor
dec
repnz
in
fabs
or
iret
sbb
out
testl
push
xchg
dec
cmp
ds
ss
pushf
call
ret
lret
add
fcoml
clc
test
add
cld
jmp
push
test
mov
in
inc
or
xchg
jle
aam
and
adc
adc
lock
jl
scas
loopne
inc
dec
adc
pop
ja
lock
js
out
in
jge
scas
xchg
pop
std
dec
push
add
cltd
cmp
pop
mov
repnz
cmp
jmp
mov
in
int
inc
out
mov
mov
mov
xor
fidivl
xor
inc
testl
inc
jb
mov
mov
addr16
push
cltd
cli
push
xor
stc
pop
les
repnz
xor
mov
decl
cs
inc
rclb
or
mov
xchg
sub
cmp
sub
jo
mov
jmp
pop
sub
mov
adc
pop
pop
daa
xor
push
popf
in
mov
test
insb
add
out
pop
and
mul
jg
pop
jg
jle
dec
shll
dec
xor
cmp
mov
add
ficoms
mov
inc
sub
std
push
pusha
mov
pop
push
inc
push
xor
movaps
shl
or
push
inc
jo
insl
xor
push
push
push
shrl
pop
jp
test
mov
jg
cltd
and
push
fisttpl
rcrl
mov
push
dec
in
test
dec
pop
sub
mov
cwtl
inc
jmp
ljmp
xorl
cmp
test
add
in
or
fcomps
lods
dec
mov
push
or
jmp
jnp
and
dec
add
adc
lods
sbb
pop
repnz
push
jmp
jecxz
popf
mov
mov
sarl
inc
jmp
ret
xor
enter
cltd
xor
or
cmp
jne
fyl2xp1
pusha
ss
and
or
ret
ret
gs
ljmp
or
sub
mov
jmp
sti
cmc
std
jbe
adc
inc
inc
cmpb
jle
inc
mov
xor
mov
inc
add
cmp
jl
mov
push
push
lcall
in
and
es
push
mov
adc
je
or
inc
jp
ret
inc
loopne
push
fmull
push
sbb
cpuid
popf
jbe
enter
rcll
or
cld
xor
and
cld
aaa
int
xor
hlt
and
outsl
mov
pushf
and
cwtl
push
add
mov
inc
bound
test
rolb
mov
enter
pop
and
jo
xor
subl
push
mov
sub
std
jl
pop
and
lods
jne
cmp
jp
movsb
or
mov
mov
dec
or
decl
and
mov
cmc
xchg
cmp
sub
aam
fs
das
subb
and
iret
or
call
jo
and
adc
mov
inc
inc
and
sub
mov
mov
push
push
arpl
insb
ss
enter
jg
adc
jge
inc
setle
jns
gs
add
adc
addr16
insb
cmp
adc
inc
push
ret
push
aas
mov
push
add
mov
dec
cmp
shrb
daa
cwtl
pop
fidivs
and
adc
mov
pop
inc
push
xor
sub
pop
pop
xchg
sbb
orl
sbb
xchg
and
js
dec
jmp
or
insl
shrb
ret
data16
or
and
xchg
xchg
lock
cmp
and
add
mov
leave
or
inc
jb
jg
xor
rcrl
je
icebp
push
push
push
dec
mov
sub
pushf
dec
sti
insl
and
fldenv
inc
or
xchg
add
sbb
push
and
add
cmp
je
cltd
push
dec
push
aas
mov
add
cs
mov
pop
add
outsl
and
faddl
and
push
dec
out
inc
xor
inc
mov
pop
sub
aam
and
rolb
insl
rorb
inc
int
lret
push
packuswb
dec
aas
out
scas
je
xchg
mov
and
stos
test
mov
pop
lods
aas
xchg
sub
movsb
shll
ja
dec
and
popa
xor
dec
jb
cmc
xchg
mull
popa
js
fs
xorl
test
adc
sbb
or
lods
in
mov
inc
cld
pop
inc
or
enter
dec
and
pop
mov
lods
mov
pusha
mov
pushf
and
mov
push
mov
dec
sbb
imul
dec
sub
inc
mov
pop
rcrb
incl
mov
dec
sbb
adc
xchg
fcoml
jl
adc
cwtl
push
cmp
mov
or
xor
adcb
push
push
or
sbb
add
ss
leave
adc
and
or
js
inc
and
and
push
inc
inc
pop
lret
cmp
push
or
orb
xor
adc
inc
leave
pop
fwait
and
inc
lock
and
mov
dec
nop
dec
mov
sbb
jbe
mov
inc
popa
mov
add
ss
inc
jp
leave
fs
enter
gs
push
popa
enter
push
inc
pop
in
or
mov
aas
es
bound
outsb
or
push
push
popf
xchg
cmp
or
cmp
mov
subl
movsb
xchg
addr16
and
xor
xchg
adc
or
push
imul
add
add
ljmp
add
in
and
lds
mov
rclb
or
dec
rolb
adc
pop
shl
int
push
shl
sahf
dec
cmpsb
xchg
imul
movsb
pop
in
mov
loop
es
xor
or
out
cwtl
aas
int3
push
sub
or
inc
xor
rcll
sbb
mov
es
mov
push
popa
sbb
push
loopne
add
imul
insl
test
lret
pop
xchg
imul
push
test
xor
sub
or
bound
mov
add
add
add
insb
cwtl
add
or
outsl
xor
scas
inc
or
into
sub
or
adc
ljmp
in
mov
push
inc
imul
ficoms
lcall
adc
pop
test
mov
sub
nop
pop
lret
and
in
cmp
insb
adc
and
push
or
mov
enter
rclb
sub
or
cmp
outsl
push
roll
pusha
xchg
adc
or
push
xor
inc
pop
nop
test
xor
inc
arpl
mov
mov
dec
or
dec
imul
push
test
adc
or
dec
xchg
xor
add
dec
outsb
jp
les
subl
inc
sub
xor
lret
dec
jl
or
jbe
outsl
testb
int3
nop
push
or
dec
and
dec
jae
push
push
push
in
dec
jns
add
dec
bound
push
test
jg
jge
cmp
cld
inc
outsl
mov
add
push
pop
mov
pop
add
aad
xchg
mov
mov
jg
in
xchg
or
lea
mov
inc
fdivl
mov
add
dec
mov
in
and
push
cld
or
pop
adc
imul
cld
sub
in
sub
push
cwtl
popa
and
pop
or
pop
or
xor
mov
sbbb
popa
mov
or
push
arpl
cmp
movsb
mov
lea
outsb
xor
xorb
mov
enter
stc
or
fwait
test
enter
lahf
rorl
mov
int
pushf
mov
xor
cmp
pop
sub
xor
pusha
and
dec
cmp
out
pop
aaa
pop
addl
call
test
jo
adc
sbb
add
adc
push
dec
call
inc
mov
xchg
push
scas
pop
iret
cmp
add
or
iret
adc
iret
and
adc
sub
cmp
ret
mov
mov
in
mov
decl
scas
iret
std
iret
lods
iret
lods
iret
ror
ror
stc
iret
in
int
int3
iret
stos
iret
leave
lds
mov
xchg
adc
pusha
mov
xchg
or
add
or
aaa
mov
test
sbb
mov
or
and
add
and
push
mov
mov
sbb
popa
clc
outsb
push
loopne
and
and
jbe
cmp
orb
sub
sbb
nop
mov
cwtl
adc
enter
and
bound
sub
or
shlw
xchg
sub
jo
or
jl
int3
cmpsb
mov
mov
rcl
pop
adc
icebp
cmp
dec
sub
inc
push
cmp
fwait
add
sub
nop
add
sub
dec
insb
and
das
test
jnp
pop
in
jmp
or
mov
shll
or
or
and
nop
xchg
push
adc
fldl
adc
xchg
lea
pop
and
cmpsl
dec
cmpsb
xchg
add
fchs
into
xchg
movsb
aaa
fwait
orb
inc
jo
popa
jne
xchg
mov
push
dec
loope
mov
inc
mov
jne
cld
xchg
into
ljmp
fbld
je
stc
or
jmp
inc
outsb
arpl
jno
rclb
hlt
arpl
push
mov
loop
mov
popf
icebp
xchg
or
xchg
movsl
sbbb
test
imul
inc
in
mov
pop
xor
xchg
jae
xlat
sbb
and
dec
dec
push
mov
jp
cmpsb
fldcw
dec
in
movq
inc
pushf
lock
in
add
sbb
out
enter
inc
xor
lock
xchg
mov
cmc
vmovsd
cmp
sbb
cmp
data16
or
adc
scas
out
int
add
aam
add
sbb
daa
dec
outsl
mov
xor
fstpt
push
dec
add
sbb
insl
lret
call
xor
cmp
jo
sub
push
int3
pushf
push
adc
inc
xchg
and
add
mov
mov
shrl
mov
add
inc
das
dec
inc
add
pop
in
and
inc
inc
and
push
jo
push
push
push
jae
enter
dec
mov
rcrb
test
add
pop
xchg
pop
data16
xchg
fiaddl
test
pusha
xor
cwtl
pop
orl
and
and
inc
add
xor
xchg
inc
pop
and
filds
pop
dec
imul
adc
mov
sbb
in
fidivs
ljmp
xor
inc
outsl
mov
les
pushf
sub
pop
pop
dec
mov
hlt
xchg
inc
dec
push
cmc
mov
frstor
inc
dec
xchg
mov
dec
int3
sub
add
xchg
insb
decl
icebp
mov
lea
mov
adc
xor
sbb
add
dec
sbb
mov
mov
sub
mov
mov
inc
cmc
jbe
mov
enter
mov
sub
inc
inc
xor
mov
push
dec
insb
fs
mov
jb
xchg
inc
pusha
xchg
xlat
ss
imul
inc
bound
push
lret
and
rorb
sub
xchg
dec
pop
cmp
jnp
xor
push
push
and
js
sbb
jmp
fadd
mov
jl
xor
dec
leave
mov
sub
jbe
icebp
xor
sub
xor
inc
add
icebp
adc
inc
rorb
xor
dec
outsb
loop
xchg
jns
shll
mov
clc
mov
jo
and
fbld
fsubs
aaa
jnp
and
ja
lea
movsl
sub
or
inc
jne
push
gs
xchg
jae
xorl
in
scas
jo
cmp
dec
xchg
inc
mov
loopne
xchg
dec
imul
mov
mov
loop
pop
ret
jb
add
pop
pusha
xchg
cmp
pop
in
mov
jno
xor
inc
nop
mov
loopne
dec
subb
sub
and
jmp
cld
and
enter
add
insl
aas
movsb
and
cwtl
je
lods
and
sub
mov
xchg
enter
cmpsl
jmp
dec
movsb
test
bound
xor
sub
cs
mov
movsl
insb
jle
loopne
mov
andl
in
movsb
xor
adc
mov
flds
add
dec
gs
adc
jns
and
and
popa
jno
or
scas
mov
mov
into
cwtl
jo
dec
mov
or
jbe
sbb
call
lds
push
mov
les
and
dec
lods
mov
mov
dec
filds
pop
push
jb
lcall
dec
inc
or
stos
insl
add
outsw
inc
pop
inc
mov
ds
dec
ret
imul
and
dec
and
aaa
fmul
dec
ds
push
dec
mov
mov
mov
dec
loopne
inc
into
push
or
imul
call
adc
rcll
xchg
push
aad
stos
push
in
mov
dec
daa
outsl
jne
xchg
fcmovu
fisttpll
icebp
pop
and
or
dec
loopne
inc
into
push
or
in
loopne
inc
pushf
cmp
cmp
or
mov
jge
insb
int3
dec
inc
mov
daa
and
jo,pt
inc
push
mov
or
roll
push
jp
andl
and
pop
add
adc
push
dec
mov
pop
rorl
mov
enter
fstps
push
push
and
ret
repnz
inc
push
mov
rorb
je
xchg
pop
mov
push
mov
and
mov
cmp
les
add
test
cmpsb
clc
and
scas
mov
or
inc
popf
cmp
mov
cmpsl
xor
sub
les
sbb
arpl
imul
sub
inc
pop
jns
inc
popf
repz
je
or
mov
or
mov
test
pop
push
arpl
lea
sbb
pop
inc
cmp
je
lods
push
jg
pop
mov
sti
lahf
jo
or
fisttps
daa
pop
push
lcall
fs
movsl
mov
mov
js
push
or
scas
gs
inc
dec
mov
loopne
enter
sbb
fcom
and
dec
fsubrs
adc
mov
fldt
cmp
push
dec
adc
push
or
or
inc
jo
test
mov
nop
movsb
mov
pop
adc
loopne
or
mov
sub
divb
in
outsb
mov
cld
popf
fisttpll
fucom
les
jne
or
or
je
and
nop
and
xchg
jne
push
mov
cmc
icebp
call
sbb
scas
dec
addr16
in
adc
dec
stos
push
pop
or
add
fdivl
pop
or
adc
out
jp
sub
mov
jecxz
and
push
dec
mov
in
sub
or
shlb
add
or
lcall
in
out
fnstcw
nop
arpl
push
clc
cmp
dec
hlt
mov
aas
lods
fnstcw
push
int3
inc
sub
add
add
andb
mov
mov
xor
ja
jbe
fsqrt
insl
mov
outsb
adc
push
jge
loop
sarb
sub
fidivs
mov
or
xor
push
loope
xor
rclb
les
aam
gs
cmp
dec
xchg
pop
mov
inc
sub
test
jecxz
test
jne
sbb
xchg
pop
mov
nop
and
push
and
cmpsl
push
test
xchg
push
xor
repnz
dec
sbb
mov
push
pusha
out
gs
testl
cmp
shlb
pop
jmp
cmp
add
inc
add
cli
ret
jl
and
mov
int
add
les
sub
jp
mov
ja
xchg
push
xor
call
pushf
pop
call
xlat
jb
movsb
ja
or
mov
cs
lock
cmp
outsl
push
fisubl
push
sub
and
outsl
or
xor
push
dec
loopne
bound
lock
test
je
or
nop
adc
inc
and
inc
add
adc
or
gs
pop
add
pushl
and
push
pushf
and
push
adc
lea
mov
je
push
inc
mov
adc
adc
or
adcl
or
and
adc
xor
mov
mov
enter
sub
pop
jne
push
jmp
mov
xlat
scas
mov
jne
xchg
ja
mov
das
mov
adc
cmp
std
xchg
adc
add
lcall
jne
cmc
inc
ds
mov
sbb
jg
int
mov
mov
cmc
pop
outsl
lea
sub
test
mov
dec
or
pop
shrl
icebp
and
inc
or
decb
pop
ljmp
or
inc
or
sub
incl
add
out
das
adc
mov
pop
repnz
and
push
and
sub
decb
add
adc
adc
jl
or
cmp
mov
rorl
mov
cwtl
add
int
sub
aaa
fs
and
pushf
adc
sar
dec
lods
in
inc
push
jmp
or
cwtl
mov
jle
push
jmp
add
and
ds
add
pop
and
adcb
shlb
pop
int3
push
push
push
or
push
stc
push
dec
push
imul
daa
inc
or
add
inc
cmc
ret
addb
adc
add
cltd
add
mov
inc
mov
inc
add
push
dec
movsl
shlb
mov
notl
test
clc
xchg
push
pop
add
sbb
test
pop
mov
and
xor
sub
xlat
pop
scas
sub
cmp
inc
push
push
push
and
push
ds
adc
loop
push
xlat
rcrb
leave
mov
push
inc
inc
inc
sbb
rcr
adc
cmp
test
inc
push
fdivrs
xchg
jne
pop
inc
and
and
adc
lock
cmp
pop
cld
test
cs
in
dec
mov
fwait
jno
adc
mov
fcomps
adc
std
sbb
inc
push
fsincos
andl
sub
push
mov
lods
fistpll
push
stos
jne
scas
movsb
jne
add
neg
jmp
cwtl
xor
jbe
ret
mov
sub
push
imul
nop
lods
xchg
test
test
call
cld
jp
fildl
push
mov
iret
add
pop
mov
enter
sbb
jmp
dec
jg
xchg
mov
clc
aam
xchg
mov
xor
into
add
inc
adc
pushf
jne
outsb
clc
add
movl
lds
or
push
pop
sarb
std
dec
jo
pop
mov
push
dec
push
mov
stos
enter
xor
cmc
iret
inc
das
notl
es
mov
sbb
xchg
call
cmp
test
and
push
addr16
sbb
ret
cs
pop
and
push
std
inc
or
add
and
dec
xor
dec
outsl
cmp
xor
ficoml
sbb
es
or
and
jmp
pop
mov
shrb
pop
push
and
rcrb
xor
pusha
jb
cmpsl
xchg
sub
pop
push
je
vcmpsd
addl
pop
icebp
aas
lods
pop
inc
aaa
and
add
push
and
mov
and
dec
fwait
jl
xchg
pop
jl
movsl
dec
stos
pop
mov
xchg
je
adc
or
jmp
lock
push
nop
add
or
pop
pop
faddl
aam
adc
or
mov
inc
sbb
mov
dec
test
sbb
add
sahf
jle
repz
imul
sbb
rcll
adc
dec
lods
jle
push
push
daa
pusha
mov
jmp
stos
inc
rclb
jb
push
data16
adc
inc
sbb
rcll
adc
mov
fdivrs
push
and
test
sbb
scas
lcall
or
push
and
mov
inc
movb
jae
jae
sub
push
add
stos
pusha
cmp
je
sti
xchg
movb
or
ja
sbb
or
pop
or
xor
nop
rcrb
leave
mov
jno
repnz
jle
loopne
push
test
jge
add
sub
mov
adc
ret
inc
fsubl
ds
je
pop
inc
sbb
sub
push
push
outsl
jae
adc
enter
mov
adc
je
scas
cmpsb
pop
daa
adc
in
clc
adc
mov
jecxz
push
sub
mov
cmp
aam
sbb
sub
adc
xchg
mov
inc
pusha
sub
xor
xor
jae
push
xor
xor
add
mov
test
data16
sarb
pop
sbb
dec
andl
add
mov
sbb
sub
fldl
mov
sti
add
xchg
filds
push
xor
nop
nop
xchg
push
pop
sbb
sbb
add
add
ret
js
pusha
xchg
push
inc
sbb
mov
pop
aam
jo
inc
xor
movsb
and
sub
mov
mov
sbb
push
add
out
push
lea
and
pop
inc
adc
xchg
in
mov
mov
and
mov
ffree
push
xchg
jp
cmp
sbb
xchg
add
cmp
inc
dec
fidivs
mov
enter
mov
or
sub
add
xor
out
test
or
repnz
mulb
sti
or
xor
movb
mov
mov
ret
int3
dec
add
fs
or
dec
faddp
addb
xchg
test
icebp
push
mov
xchg
int3
pop
add
pop
xchg
sub
push
lret
xor
inc
or
in
pop
jecxz
mov
repnz
push
or
mov
mov
pop
shll
jle
cld
adc
or
imul
sti
mov
je
push
and
arpl
push
xchg
mov
das
jne
ds
dec
jne
mov
out
fistpl
and
test
jbe
loope
inc
lods
sub
push
loopne
mov
cmpsb
ja
stos
fnstsw
mov
dec
scas
and
add
push
inc
cmp
cwtl
clc
pop
sub
cmp
call
jge
fwait
into
comiss
sub
aaa
dec
inc
scas
iret
andb
push
int
push
lock
push
in
lret
jl
sbb
cmp
xor
adc
mov
scas
lcall
push
std
icebp
sbb
xor
mov
std
popf
cmp
aad
fcoml
loopne
jle
cmc
dec
cmp
or
dec
mov
xorb
or
or
cmp
cmp
fldenv
cmp
mov
dec
adc
pop
hlt
mov
xorb
push
lret
xor
push
cmp
sbbb
push
cmp
dec
mov
mov
and
aas
cmp
xor
pop
sub
or
dec
mov
and
push
and
out
int
sub
push
mov
jbe
sti
cwtl
or
xchg
fistpll
sub
xor
leave
dec
xlat
mov
jge
pop
sub
add
call
or
lahf
pop
add
push
pop
outsl
adc
mov
inc
mull
test
inc
push
mov
or
sub
push
or
sub
aaa
mov
jns
out
xchg
int3
roll
arpl
mov
lds
push
sub
sbb
adc
pop
inc
sub
inc
push
push
sub
ret
int3
es
movsb
pop
inc
or
inc
enter
dec
ss
push
lret
and
pop
pop
pop
loope
add
cmp
lock
mov
jge
xchg
sub
rcrl
sar
or
cmp
jnp
sbb
or
sahf
push
stos
and
outsl
push
adcb
push
jmp
dec
enter
mov
ja
or
pop
mov
ret
nop
mov
add
divl
dec
jmp
js
incl
adc
push
or
mov
test
scas
in
xor
or
mov
push
pop
mov
push
xchg
loop
mov
int
cwtl
mov
mov
cmp
dec
stos
mov
sub
or
push
out
jmp
mov
punpckldq
pop
pop
jl
lret
test
cmpl
inc
enter
xor
or
movsb
mov
inc
adc
sbb
mov
and
push
stc
sbb
sub
lcall
sub
popf
adc
stc
shld
mov
enter
neg
sub
fldlg2
decb
add
popa
jns
pop
cmp
cmp
hlt
xchg
mov
dec
lock
cs
inc
pop
fadd
adc
fisttpl
or
add
and
dec
sub
xor
scas
push
add
mov
push
in
push
push
jne
or
orl
inc
popf
or
xor
pop
fnstenv
and
mov
out
xchg
fwait
or
les
js
lret
and
stos
test
and
aam
push
add
mov
fdivr
test
or
xchg
xor
mov
jmp
jns
aas
add
dec
pushf
add
lock
sahf
pop
dec
and
mov
popa
xchg
int
mov
push
stc
sub
arpl
lret
adc
stc
int
xchg
fisubs
cmp
mov
std
adc
ss
lret
insl
dec
add
sbb
xchg
in
and
loop
sahf
in
adc
daa
repnz
std
fisttpl
sarl
or
test
jns
testb
adc
mov
mov
mov
mov
inc
push
mov
cmp
push
adc
xor
xchg
add
jo
lods
or
mov
adc
lahf
pop
sbb
incl
test
in
or
xor
addl
lds
or
and
mov
sbb
mov
sub
or
sbb
inc
adc
jl
fst
aas
pop
test
jge
sub
sub
push
mov
or
add
scas
out
sub
pop
or
cmp
xor
roll
in
lahf
lcall
pop
pop
stos
out
and
push
push
fcom
mov
sub
jns
push
mov
out
cltd
lods
add
dec
dec
les
lahf
add
fdivs
fs
mov
dec
sub
repnz
sahf
dec
xchg
leave
push
fmuls
cs
pop
jne
jae
shll
mov
cs
cmp
nop
push
and
add
xor
movzbl
and
inc
enter
stc
pop
jl,pn
or
jle
mov
adc
int3
leave
fnsave
adc
mov
dec
pop
push
cmc
jg
std
sbb
rcr
cltd
or
pop
fnsave
dec
push
js
lods
scas
fcoml
mov
testb
popf
cmp
inc
push
fbstp
mov
inc
adc
or
fsubl
pop
mov
cmp
jecxz
lods
movsl
mov
sub
out
pushf
fsts
and
adc
dec
out
ficompl
ljmp
jns
dec
pop
pop
mov
inc
sub
scas
ja
push
add
adc
cmpl
cli
or
mov
dec
and
mov
aam
test
ret
jle
pop
mov
lahf
jg
fs
add
mov
loop
scas
inc
dec
mov
or
jmp
cmp
sbb
jb
pop
lea
cmp
and
jge
in
xchg
xchg
pop
jge
mov
repnz
push
sbb
inc
rolb
cmp
and
and
pop
add
mov
jne
pop
outsb
repnz
hlt
in
mov
ja
push
add
nop
and
mov
lods
loop
adc
or
sub
das
adc
push
scas
push
int
adc
mov
add
mov
mov
mov
add
xchg
inc
scas
sub
push
cmp
push
adc
loope
enter
ljmp
mov
pushf
pop
add
push
and
adc
push
imul
das
inc
or
and
mov
dec
jne
in
cmp
xchg
push
pop
out
and
shrb
bound
addl
xchg
out
nop
dec
xchg
mov
mov
dec
adcl
cmp
insb
sub
lea
test
dec
xchg
or
pop
les
push
mov
xor
xor
in
push
outsb
add
xor
subb
and
xor
xor
mov
adc
or
adc
mov
test
scas
ja
sbb
dec
or
jb
push
in
jb
repz
sub
clc
and
les
movsb
jmp
or
dec
ja
popa
cltd
xchg
inc
dec
xor
sbb
inc
pop
movsb
xor
cld
mov
adc
movsb
pop
cli
mov
and
mov
rorl
adc
cs
gs
push
mov
xchg
enter
push
push
adc
xchg
push
imul
rclb
negb
pop
jo
inc
test
mov
jo
movsb
bound
cmp
mov
push
add
imul
pop
jl
test
ret
test
outsb
push
mov
lock
mov
cmpb
nop
and
bswap
jae
push
jle
pop
nop
pop
cmp
adc
and
add
push
sub
orl
add
imull
add
das
stos
jae
xchg
decl
cmpsl
clc
loope,pn
scas
xor
mov
and
and
mov
mov
das
ljmp
inc
enter
push
fimull
stos
outsb
les
test
mov
rolb
xor
test
inc
and
mov
roll
int
push
and
xor
rorl
and
jg
inc
addb
mov
cmp
cmp
push
out
dec
sbb
or
xlat
jmp
xchg
cmp
xor
aad
aam
jb
jle
loop
adc
pop
lock
int
iret
imul
call
mov
dec
adc
lods
adc
or
and
pop
inc
gs
or
mov
and
aaa
xchg
jne
xchg
sub
jne
movsb
cmp
add
insb
dec
enter
cmpb
fsts
je
mov
daa
jl
imul
testb
push
or
xchg
movsb
jo
dec
nop
mov
or
dec
inc
mov
movsb
out
mov
dec
fstl
xor
and
lock
or
enter
xchg
inc
orb
xchg
cmpsb
or
std
mov
das
or
loope
jp
lds
addr16
mov
loopne
mov
dec
inc
lret
sub
dec
das
mov
mov
fildll
cmp
pusha
imul
loopne
and
dec
mov
fdivrl
mov
popf
jg
xchg
divl
popa
adc
mov
mov
scas
sbb
jb
sub
test
ret
add
add
inc
jg
je
ret
push
pop
jb
or
and
push
dec
push
imul
or
nop
mov
jg
adc
cmp
adc
cmp
xchg
test
stos
pop
sbb
push
addl
and
adc
xchg
sub
mov
cmp
and
sbb
sbb
push
jp
andb
mov
pop
push
rcll
sbb
and
test
add
mov
sbb
mov
sbb
and
add
push
adc
rolb
mov
int3
sub
ret
nop
sub
orl
pop
and
add
xor
insb
mov
sub
dec
jne
sbb
ljmp
stc
add
mov
test
adc
push
dec
or
rclb
dec
inc
pop
lods
lahf
loope
add
idivl
push
inc
in
enter
cmp
hlt
mov
mov
adc
leave
in
xlat
mov
les
hlt
ljmp
push
hlt
jb
and
outsb
adc
insb
mov
fmuls
ds
nop
jmp
push
push
clc
icebp
arpl
ret
ss
lock
fisttpll
in
hlt
test
imul
movsl
sbb
movsb
lock
and
inc
or
xor
jmp
mov
or
lock
mov
testl
scas
test
in
cmp
add
adc
insb
aas
in
in
out
movsb
cmp
xor
and
push
cmp
push
dec
cwtl
mov
inc
shlb
push
or
add
adc
xchg
mov
pop
je
rcrb
mov
or
in
and
adc
loop
scas
sub
xchg
cs
jae
jne
lods
add
ret
or
inc
lock
mov
mov
invd
and
je
lahf
pop
pop
sbb
sub
dec
inc
imul
pop
and
and
adc
out
mov
dec
mov
sahf
xchg
adc
ljmp
and
inc
pop
fistpl
ret
xor
movsb
sub
push
add
mov
fildl
push
out
jl
mov
sqrtps
insb
pop
jnp
repz
nop
cmc
mov
xor
mov
into
xchg
jmp
negb
jg
push
mov
mov
push
test
pop
add
test
sub
sub
pop
or
dec
mov
push
movsb
fwait
and
jne
adc
or
divb
aaa
neg
cwtl
out
test
add
adc
int
int
pusha
adc
and
xchg
push
ja
or
icebp
pop
into
and
into
pop
sbb
xchg
cmpl
adc
push
push
push
lret
push
push
pop
jle
imul
and
sub
dec
jmp
cwtl
cmc
mov
pop
inc
lock
sbb
out
mov
mov
aam
and
test
push
sub
loop
or
sbb
sub
std
add
jno
pop
js
push
pop
cli
lret
inc
pop
pushf
fs
test
orb
ret
addb
xor
jne
call
add
les
or
sbb
inc
sbb
insb
and
pop
jnp
testb
mov
xchg
repnz
je
pop
mov
sti
cwtl
sbb
call
mov
xchg
push
sub
mov
daa
mov
inc
stos
cmp
xor
lods
cmp
add
mov
mov
fs
cld
xor
xchg
sbb
stos
leave
hlt
mov
sbb
xor
mov
push
xchg
push
and
adcl
call
fstps
push
lock
mov
ja
repz
cmp
sbb
mov
call
pop
pushf
dec
mov
test
dec
and
aaa
sbb
add
enter
jb
movsb
inc
jmp
fs
cli
dec
and
inc
xor
and
stc
add
mov
cwtl
pop
adc
sub
fs
push
or
or
fmuls
sbb
sub
mov
hlt
adc
sub
mov
xor
mov
sub
cmp
lea
lcall
xchg
fistpl
jp
shlb
mov
movsl
mov
push
ljmp
or
mov
and
xchg
and
popf
jmp
mov
fstpl
xchg
nop
mov
inc
or
cmp
scas
mov
push
mov
bsf
in
push
sbb
push
addr16
mov
cmp
sahf
das
sub
popf
adc
xor
mov
data16
lock
mov
sub
stos
xor
xchg
aad
adc
push
adc
popf
and
rolb
arpl
js
mov
jmp
pop
lahf
leave
cmpb
sbb
pop
test
out
jb
xor
imul
pop
mov
lret
adc
xchg
or
push
push
push
jecxz
stos
test
sub
pop
dec
cmp
faddl
sbb
adc
inc
push
sahf
fs
int3
dec
in
or
movsb
cmp
jbe
inc
mov
nop
ret
subb
dec
lahf
addr16
sub
neg
adc
movsb
rcl
jo
add
cld
fnsave
inc
out
push
inc
adc
fdivs
outsl
hlt
add
pop
loope
lock
jge
pusha
inc
decl
pop
jne
and
inc
push
ja
push
jmp
call
or
add
outsl
stc
in
aam
dec
mov
adc
call
push
xchg
lcall
cltd
ja
push
inc
sub
andl
mov
test
je
dec
push
daa
push
xor
repnz
jmp
hlt
fsubp
ss
sub
xor
sbb
psadbw
cs
shll
je
mov
pop
loope
jnp
mov
shlb
or
imul
and
cmp
add
adc
idivb
nop
pop
repz
jno
cmp
or
add
imul
in
mov
push
push
sbb
and
push
mov
pop
dec
imul
and
cmp
mov
inc
adc
push
pop
jo
mov
dec
cli
in
jle,pt
or
or
popf
fistps
pusha
inc
dec
mov
jne
mov
arpl
popa
nop
cmpl
aaa
and
je
sub
loopne
lods
jo
pop
push
mov
push
fisttps
inc
sub
xor
and
stos
mov
adc
outsb
adc
int3
in
les
jl
xor
inc
cmpl
xor
adc
shlb
ja
pop
bound
insb
mov
add
mov
mov
jmp
push
sbb
je
sbb
jo
push
xchg
mov
or
inc
cmp
orb
xchg
adc
aad
sub
lods
push
pop
decb
pop
inc
or
and
rolb
cmp
xor
mov
push
jo
or
sbbb
fxch
popf
pop
jp
push
push
ret
inc
mov
js
nop
push
cltd
cmp
inc
cli
pop
test
call
imul
push
push
jle
inc
inc
mov
imul
enter
pop
repnz
xchg
popf
xchg
nop
xchg
inc
lret
aam
cmp
jge
sub
dec
movsl
cmc
arpl
inc
inc
mov
or
or
decl
or
and
or
dec
push
mov
push
dec
push
pop
mov
or
sub
dec
or
inc
xor
call
ret
jne
sbb
sub
inc
xchg
xor
xchg
hlt
orl
aad
mov
nop
cmp
mov
cld
mov
andl
aam
cmpsb
jp
mov
cs
orl
add
pop
mov
push
or
push
orb
test
mov
mov
mov
mov
and
sub
fcomip
jne
shlb
add
jnp
push
xchg
pop
mov
pop
jl
xor
or
and
pop
cmpsb
mov
aad
pusha
jge
cmp
jns
xor
adc
sub
fisttpl
daa
pop
xchg
adc
inc
jmp
xlat
inc
sbb
imul
add
std
leave
pop
test
and
cmp
test
push
sub
jnp
fcomps
sub
ret
cld
add
sbb
push
push
or
adc
adc
test
aaa
sbb
fidivs
sbb
mov
cwtl
or
and
jmp
jmp
add
addr16
or
ficoml
sbb
pop
mov
orb
fsubrl
test
sub
pop
mov
or
gs
jmp
sbb
push
rorb
inc
adc
pop
inc
cmp
hlt
mov
jb
fisubrs
das
add
das
test
rorb
cmpsl
fadds
cmp
pop
xor
mov
or
pop
push
in
jp
imul
or
cmc
dec
dec
jne
mov
sarl
pusha
leave
mov
push
mov
sub
data16
inc
js
dec
cld
mov
ds
sub
sbb
jmp
ds
push
sbb
pop
pop
inc
imul
inc
dec
push
cmp
nop
add
sbb
lea
mov
movsb
out
push
push
cmp
adc
mov
pusha
push
jne
lea
inc
mov
mov
adc
inc
dec
outsb
mov
add
or
cmc
push
push
inc
or
inc
call
adc
lock
adc
and
clc
and
ds
dec
jns
push
sub
lahf
decl
adc
lahf
add
lea
and
dec
pop
mov
divl
sbb
fs
int3
sub
pop
int3
sub
mov
pop
pop
mov
enter
mov
pop
push
xlat
xor
or
xor
loopne
cmc
icebp
je
pop
adc
inc
inc
ds
mov
cwtl
add
push
repnz
and
aam
orb
out
gs
and
cmp
loop
je
mov
fistpll
push
inc
xor
jne
cmp
movsl
mov
gs
cmp
mov
inc
negl
daa
dec
pop
jmp
mov
insb
jge
mov
ficompl
fdivl
insb
jp
xor
ret
int3
ljmp
adc
xchg
and
dec
je
ret
push
addr16
insl
xor
jbe
mov
xchg
sub
shrl
mov
or
cmp
aam
dec
loopne
push
push
js
rcll
sbb
or
push
out
xchg
les
mov
pop
iret
inc
out
add
dec
jg
sub
enter
jns
push
sub
or
xchg
std
sub
adc
leave
jecxz
pop
xchg
xchg
add
pop
mov
lahf
and
dec
dec
gs
call
rorl
and
js
mov
adc
in
in
pushf
push
lret
cs
mov
out
xor
inc
xor
push
sub
and
push
mov
mov
mov
lock
jmp
adc
push
mov
jnp
mov
inc
mov
xchg
ficoms
mov
ss
sub
movsb
xchg
add
cmp
xrelease
and
rclb
xchg
and
sbb
mov
adc
or
mov
jbe
jne
popf
aad
mov
or
inc
call
pop
aaa
adc
lea
aas
cs
adc
test
mov
inc
adc
push
push
inc
adc
loope
sub
fstl
and
mov
mov
or
add
ficoml
cld
lods
aad
pop
mov
je
test
cmp
lods
xor
lds
ret
mov
sub
insl
rorl
mov
sti
adc
push
out
mov
mov
fstpl
sub
pop
cwtl
loop
jl
jmp
adc
inc
sub
xchg
add
jmp
sbb
out
jl
mov
out
enter
pop
mov
push
jecxz
es
sbb
and
mov
test
adc
dec
inc
cmpl
pop
cmp
mov
stc
mov
lds
dec
xor
sub
repnz
xor
xlat
test
mov
cmpb
mov
sub
cmpsl
jmp
sti
in
dec
add
or
stc
xchg
pusha
call
dec
mov
adc
mov
scas
xor
inc
push
cmp
mov
ja
mov
sub
xchg
xchg
test
dec
hlt
stos
or
mov
add
sbb
mov
adc
ljmp
mov
enter
out
xchg
ja
or
mov
push
xchg
mov
nop
out
sub
sub
jmp
and
lods
xchg
daa
icebp
outsb
mov
sbb
xchg
cmp
ljmp
and
fisttps
jge
into
or
cmpsl
mov
cmp
push
fsubs
iret
dec
pop
movsl
fisttpll
cmp
test
xchg
adc
sbb
xchg
outsb
icebp
inc
test
xrelease
pop
inc
or
inc
fisttps
into
movsl
xor
push
push
xor
daa
dec
mov
cmc
dec
and
sbb
mov
jne
dec
data16
mov
in
or
inc
push
cmp
movsb
movsb
inc
pop
not
les
sbb
xor
jge
mov
movsb
mov
dec
and
insb
loop
out
das
add
dec
lock
mov
les
or
push
mov
cmpsl
jg
popa
xor
nop
pop
push
and
jns
outsb
mov
add
loope
lret
lock
adc
test
test
lods
andb
mov
cmp
inc
adc
add
inc
int3
shll
es
mov
push
add
rorb
jne
pop
dec
push
cmp
lcall
and
inc
lock
sbb
sbb
adc
cmp
int3
jne
sub
cmp
add
xor
shrb
push
imulb
mov
cmpl
jle
ficomps
pop
fwait
or
data16
inc
push
adc
mov
call
push
adc
icebp
xchg
and
repnz
add
xor
add
xor
pop
cmp
mov
mov
mov
cmp
pushf
jae
mov
dec
mov
cmpsb
dec
or
sbb
fsubrs
movsl
jmp
mov
daa
adc
das
xor
stc
aam
fstl
sub
icebp
push
xchg
push
shll
cmpb
in
mov
mov
pop
out
enter
imulb
mov
xchg
pop
je
xor
cmpw
nop
stos
icebp
cmp
popa
gs
in
into
std
inc
sub
dec
add
or
fmuls
dec
mov
sbb
cwtl
inc
out
fucomp
push
movsb
adc
les
push
in
or
sti
mov
or
xchg
ret
cwtl
pushf
add
cltd
sub
dec
loopne
je
or
add
int
mov
dec
or
or
cmp
mov
ja
xor
daa
push
cmp
adc
cs
cmpb
sbb
jl
das
jns
cmp
dec
leave
fstl
mov
test
cld
cmc
shr
adc
inc
ja
bound
imul
pop
int3
dec
dec
inc
clc
sub
mov
sub
sub
adc
xchg
mov
arpl
xor
cmp
out
call
and
stos
sub
fmuls
dec
rcrb
lock
dec
daa
jmp
shll
sub
ror
jmp
sbb
push
or
jmp
or
jne
sahf
sub
es
xor
test
movsb
nop
ret
hlt
daa
cmp
mov
add
orb
std
cmp
inc
or
xchg
xchg
sbb
sub
xchg
adc
ret
nop
sub
push
or
mov
push
les
mov
ds
sbb
leave
pop
cmc
or
adc
insb
lret
jbe
lret
jg
dec
sbb
shrb
jg,pn
add
dec
mov
sbb
and
cmp
xlat
push
add
rcll
push
xchg
mov
sbb
loop
pop
pop
lods
pop
push
icebp
pop
or
add
or
mov
rcrb
mov
xor
repz
fcompl
je
lock
mov
cli
and
push
fdiv
rorb
js
leave
mov
fisttpll
push
or
jge
rcll
mov
rcrb
in
xlat
sbb
clc
loope
testl
aad
das
fildll
push
in
outsl
outsb
fwait
push
aam
push
daa
sub
dec
jmp
jge
sub
add
insb
pop
pop
xchg
aam
push
jl
adc
dec
enter
testb
je
jne
mov
dec
in
jbe
mov
rolb
jmp
sub
xchg
aad
adc
push
subl
xchg
mov
xchg
jle
pop
pop
out
sub
jle
xchg
lock
and
push
cmpl
mov
mov
ds
sbb
pop
enter
add
add
pop
fs
and
or
or
or
and
and
dec
sbb
push
outsb
sarb
out
ss
fwait
or
int3
mov
sub
cltd
xor
pop
push
jmp
loope
sbbb
jge
sub
mov
jne
pop
pop
fdivl
out
bound
nop
mov
lcall
jmp
cld
or
bound
jno
mov
cltd
fdiv
adc
fildl
dec
pop
adc
fcomps
lods
loopne
or
lock
dec
jecxz
xor
pushf
adc
clc
mov
jmp
andb
loope
jnp
lcall
in
and
mov
jnp
rcrl
ljmp
sub
or
or
adc
jb
jmp
addr16
and
mov
pop
setge
push
rcrl
dec
inc
sub
outsl
fsubrl
jo
pushf
shlb
or
insl
pop
jmp
inc
or
xor
sub
pop
adc
mov
cltd
out
and
lret
add
stos
nop
mov
dec
data16
ds
sarb
mov
nop
nop
dec
roll
dec
mov
sbb
add
aad
or
loope
xchg
xchg
add
dec
dec
xor
push
cmp
movl
adc
bound
icebp
add
cld
sub
sar
mov
sbb
enter
xchg
dec
hlt
out
xor
mov
cmp
pop
xor
mov
pop
ret
cmp
jmp
mov
pop
nop
dec
ds
pop
adc
xchg
add
int
jmp
add
xchg
ljmp
and
push
ret
ljmp
mov
or
jne
jg
push
push
je
mov
sbb
inc
adc
cmp
mov
inc
pop
inc
mov
dec
mov
or
in
inc
mov
clc
cmp
nop
movsb
inc
popf
stos
and
pop
push
mov
dec
mov
nop
mov
sub
add
ss
xchg
arpl
ret
jne
jae
jmp
popf
pop
nop
sub
loope
mov
dec
push
popf
push
adc
cwtl
rol
adc
dec
ret
add
and
and
icebp
hlt
movsl
jg
and
mov
jae
sub
lea
jp
lahf
movsl
ja
imul
nop
push
je
shll
cld
ss
cmp
jmp
or
or
cmpsl
pop
loop
sti
int
pcmpgtd
icebp
and
out
outsl
pop
dec
xchg
imul
dec
sub
hlt
dec
cwtl
mov
jbe
clc
adc
lret
dec
xor
icebp
inc
das
fcomi
sub
pusha
xchg
xlat
sbb
jg
cmc
jns
jmp
orl
movb
int3
push
jne
les
pushf
inc
dec
cmp
mov
insb
pop
sub
push
and
inc
js
lret
cld
mov
testb
push
push
cld
sbb
in
inc
std
jp
xor
pop
fidivrs
daa
aad
in
je
in
xchg
xchg
cmc
xchg
push
fsubr
clc
lret
push
fisttpl
idivl
mov
adc
stc
imul
jb
xchg
int3
adc
fldt
or
test
or
in
mov
scas
dec
push
cmp
sub
xlat
cmp
sbb
std
xchg
test
in
lods
fiadds
insb
pop
jmp
test
fcompl
popa
dec
dec
mov
mov
ret
sahf
mov
and
mov
sbb
sbbl
mov
xchg
jge
movsb
fwait
sub
ljmp
daa
add
out
xor
scas
inc
por
pop
fisttpl
int
pop
mov
out
lods
int3
xchg
adc
cltd
shrb
mov
mov
call
pop
pushf
adc
mov
inc
mov
or
inc
mov
xor
stos
out
mov
add
and
push
loopne
jns
mov
lahf
sub
shlb
fcompp
mov
pushf
test
mov
arpl
sti
or
or
popf
std
xchg
and
add
ror
or
sub
mov
or
or
pop
adc
push
jl
xor
js
adc
data16
shll
pop
out
push
or
and
inc
dec
stos
in
int3
leave
mov
cltd
push
adc
outsb
push
lret
or
push
fwait
dec
xorb
inc
sub
enter
stos
or
and
imul
mov
out
lock
imul
leave
mov
add
xchg
xor
fdivs
mov
sbb
xchg
ja
inc
push
and
dec
loop
incl
jne
andl
test
or
sub
and
adc
xor
testl
das
xor
in
and
mov
xchg
sub
mov
movsb
sub
and
inc
mov
mov
push
jge
and
imull
mov
or
adc
push
lahf
adc
sbb
sbb
in
mov
xchg
shlb
ljmp
fnstsw
inc
sub
inc
push
xorb
enter
out
lods
sbb
add
pusha
pop
pop
mov
shl
pushf
rcr
mov
and
push
dec
inc
dec
cmpsl
scas
dec
mov
xor
jge
and
cli
aaa
push
xor
xlat
mov
aaa
sbb
loope
lods
outsb
rclb
adc
popf
push
cmpsl
test
aas
add
fcompl
or
pop
aam
add
das
jne
pop
repnz
pop
in
jge
outsl
pop
push
sbb
or
sub
cmp
cmp
mov
and
xchg
cmc
xor
inc
sub
dec
and
adc
mov
in
mov
mov
xchg
push
xchg
nop
jl
lds
jb
ds
xor
pop
sub
push
imul
loop
pop
imulb
sbb
outsl
sahf
test
add
lock
adc
xchg
shr
imul
pop
lock
in
mov
scas
lret
push
xchg
mov
rcr
jns
enter
loopne
xor
ret
fistpl
fisttpll
ret
push
lea
std
cmpsb
ss
cmpsb
dec
xchg
roll
repnz
xor
xor
nop
mov
mov
jns
push
or
in
idivl
and
outsl
and
cld
xchg
loope
push
push
jg
mov
mov
or
and
mov
xchg
or
sub
mov
incl
add
dec
inc
loop
mov
jle
sarb
add
shl
pop
rorb
sub
stc
subl
cmp
movsb
scas
dec
inc
aad
pop
inc
stos
outsl
sahf
out
add
ss
into
lahf
xchg
arpl
dec
mov
notl
or
fsubrp
dec
shlb
ror
xchg
call
inc
enter
loope
outsb
jmp
call
sub
out
aad
push
shrl
ret
clc
pop
sub
sub
cmp
mov
dec
loop
xor
sub
cmp
sub
clc
in
xchg
adc
pop
les
inc
fsin
daa
test
xor
and
je
test
cld
out
xchg
adc
or
enter
cwtl
jne
loopne
das
mov
mov
or
pusha
imul
imul
test
arpl
ja
or
inc
fcomps
mov
inc
jecxz
pop
mov
cltd
xor
xor
lods
sub
jge
sub
mov
inc
sbb
lods
jle
daa
cld
ljmp
add
sub
je
and
rorl
push
and
add
enter
jno
jp
test
mov
jle
sbb
daa
ret
into
fstpl
mov
mov
mov
dec
in
sub
clc
push
mov
in
stos
sub
addr16
es
mov
push
xchg
aad
out
push
rcrl
sahf
int3
rolb
mov
cmpsb
nop
jge
inc
jne
pop
sbb
xchg
and
mov
daa
sub
sbb
dec
pop
adcb
cwtl
jno
sbb
jecxz
outsb
test
jno
jle
jg
mov
iret
or
mov
add
xchg
or
cmp
sbb
lods
mov
mov
repz
mov
dec
mov
lret
jne
jbe
in
outsb
mov
cwtl
push
jns
in
mov
test
mov
ja
ret
xchg
je
sub
test
mov
fcoml
jmp
outsb
rcrb
cmp
sahf
popa
dec
push
and
cld
repnz
ss
sbb
stos
sub
in
bound
add
mov
pop
mov
sub
jl
inc
es
ret
leave
sbb
dec
mov
daa
int3
loopne
and
cli
cld
mov
not
imull
repnz
in
cmp
xor
sbb
push
call
and
xchg
sbb
push
mov
or
popf
shl
mov
sub
shlb
pop
mov
dec
jns
loope
mov
cmp
push
and
push
mov
inc
out
mov
and
push
js
adc
movups
inc
iret
sub
adc
jnp
sbb
in
sbb
and
add
jmp
in
sub
mov
rcrl
mov
cmp
fcmovnbe
int3
fcomps
test
ret
mov
adc
push
mov
and
xchg
xor
jl
pop
lock
push
lahf
sarl
push
aaa
jmp
dec
and
in
shlb
sub
sahf
and
lret
mov
hlt
add
dec
std
cltd
and
cmpsl
mov
push
ja
outsb
aas
jl
dec
or
dec
in
cmp
xchg
push
mov
lahf
push
das
add
test
jne
jp
movsl
sub
scas
ret
nop
inc
test
pop
inc
and
pop
outsb
iret
test
sbb
lock
sbb
popf
gs
call
enter
jo
bound
xchg
ljmp
xor
adc
ss
rorl
js
daa
adc
pushf
test
cmp
idivb
adc
mov
js
hlt
adc
mov
dec
jge
call
cmp
icebp
mulb
xor
incl
mov
sti
out
jl
mov
hlt
jle
jmp
or
push
push
das
imul
push
sbbb
pushl
pop
pop
dec
mov
push
jl
pop
or
repnz
or
jmp
insb
add
jg
xor
pop
hlt
push
sbb
or
out
data16
int
sub
int3
push
pusha
cmp
je
push
stos
sub
mov
push
pop
lcall
push
xchg
out
push
lds
test
clc
and
xchg
mov
push
mov
push
stos
daa
js
cld
xchg
daa
push
cmp
mov
pop
ja
sbb
push
xor
das
pop
inc
pop
imul
lock
sbb
lods
out
jg
jle
in
jmp
std
es
bound
movsb
dec
mov
int
or
mov
mov
fs
pop
push
iret
out
lahf
sti
and
mov
mov
sbb
push
jecxz
sbb
je
dec
enter
aam
cmp
cmp
mov
or
mov
popf
xchg
negb
cmp
jne
clc
enter
sub
push
sub
mov
addb
dec
mov
repz
aaa
sbb
pop
int3
inc
adc
pop
inc
fisubrs
sahf
leave
cmc
outsl
repz
dec
dec
out
and
inc
jne
jb
and
scas
repnz
jnp
pop
cmpsb
or
jle
mov
cmp
dec
stc
jne
je
pop
and
insb
movsb
push
and
pop
test
cmp
sbb
data16
and
cmp
das
cmpl
cwtl
decl
or
adc
or
sub
push
push
jnp
xor
leave
andl
pushl
or
cld
cmp
or
push
add
cmc
mov
pusha
je
adc
mov
gs
adc
cltd
ret
inc
mov
int
or
aad
mov
hlt
mov
sbb
pop
push
push
inc
push
mov
sarl
jne
test
and
inc
test
daa
push
jno
jmp
add
arpl
mov
or
pop
inc
jmp
movswl
dec
add
inc
dec
pop
pop
cmp
insb
push
mov
and
mov
inc
pushf
and
or
das
es
xchg
ret
xchg
cmp
sub
sbb
sbb
mov
mov
add
mov
adc
or
fadd
test
mov
sbb
dec
decl
xor
insb
mov
adc
or
test
jo
js
es
pop
cmp
pop
repnz
inc
ljmp
or
cli
in
xchg
out
orb
out
and
mov
xorl
adc
sbb
mov
dec
int
cmp
test
mov
decb
jl
or
jmp
mov
cmp
push
setg
outsl
das
outsl
dec
outsb
add
fistpl
sarl
setl
pop
cmp
loopne
dec
scas
leave
cld
pop
push
mov
lret
push
inc
mov
ror
es
dec
daa
sub
sbbb
mov
jge
int3
movsb
test
movsl
dec
sti
jle
push
out
adc
inc
add
jecxz
aas
jl
dec
dec
dec
dec
push
sbb
jne
lods
dec
fdivr
cmpsl
sbb
push
clc
or
daa
push
hlt
sbbl
lods
clc
pop
xor
jmp
inc
cs
jmp
and
add
cmp
cld
or
cltd
mov
jmp
dec
push
add
push
adc
stos
and
in
push
mov
hlt
mov
mov
or
ljmp
scas
sub
stc
adc
push
enter
push
push
ja
andb
xchg
or
and
inc
inc
dec
mov
mov
and
sub
jmp
adc
add
jmp
xor
cwtl
inc
mov
add
xor
mov
cmpsb
jns
ficoms
pop
sbb
pop
test
lods
es
adc
aam
inc
inc
out
mov
dec
aad
xchg
cs
or
pop
bound
mov
lcall
dec
adc
cmp
cmp
adc
aam
and
xchg
test
sbb
cmp
sub
enter
xchg
push
dec
cmp
pop
in
xchg
pop
hlt
test
xchg
movsb
ret
sub
sbb
ret
cmc
lcall
xor
pop
incl
xor
scas
lods
adc
sbb
xchg
dec
stos
mov
test
cmp
add
xchg
scas
mov
sub
xchg
aad
dec
leave
sbb
inc
adc
mov
and
xor
xlat
push
aad
int3
xchg
cld
sbb
stos
repnz
stc
jge
les
sub
clc
or
mov
push
movsl
xor
add
add
mov
mov
hlt
test
out
mov
xchg
cli
arpl
mov
mov
adc
pop
jp
addr16
lea
inc
mov
jmp
in
mov
popf
dec
dec
mov
push
and
mov
out
cmpsb
dec
push
inc
xchg
in
push
add
inc
lds
push
or
cmpl
les
cli
in
jle
xchg
sbb
jne
jnp
mov
aad
sub
or
mov
aas
adc
dec
test
jb
int3
jns
dec
mov
and
sbb
dec
rcrl
dec
push
mov
fucomi
adc
cmp
and
ja
xchg
rorb
sbb
test
sahf
scas
adc
sub
mov
pop
push
mov
fists
cmp
dec
ret
jnp
lcall
pop
stc
xchg
or
or
loop
int3
cwtl
sub
pushf
faddl
jl
loop
xchg
in
mov
imul
dec
push
in
mov
bound
or
sbb
push
mov
in
mov
sbb
adc
pop
xorb
cld
mov
sbb
and
push
or
pusha
test
mov
or
je
or
push
mov
movsl
cmc
mov
mov
add
or
mov
or
faddl
insl
jo
inc
or
jg
push
dec
pushf
in
xor
jl
scas
shlb
add
cmp
mov
int
cmp
pop
mov
push
inc
stos
dec
pop
stos
mov
mov
push
push
and
mov
movsl
pop
test
testb
jl
jae
js
arpl
jne
push
or
out
enter
js
sbb
enter
add
inc
xor
in
adc
adc
das
sti
pop
or
pop
xchg
addr16
mov
sbb
or
push
js
xor
test
inc
orb
cmpsb
cltd
setge
add
and
cwtl
sub
mov
and
clc
xchg
pop
or
test
fnstcw
jmp
push
insb
adc
pop
inc
inc
hlt
movsb
or
mov
sbb
lea
xchg
adc
and
cs
mov
pop
adc
pop
in
stos
cmc
sub
xchg
scas
es
jge
mov
icebp
cld
dec
lods
hlt
cli
sub
call
push
subl
je
loop
cmp
pop
aad
imul
dec
dec
enter
lods
adc
and
cld
pop
pop
movb
mov
dec
push
int
push
fs
sbb
movsl
cmp
jbe
dec
fistpl
dec
out
fcomps
xchg
ljmp
mov
jnp
subb
mov
push
inc
mov
add
sub
mov
mov
add
sub
push
xchg
pusha
or
jle
cmp
fcomps
inc
fucom
jge
add
fnstcw
dec
push
or
or
repnz
dec
pop
fsubl
aam
das
dec
pop
movsl
mov
push
inc
fldenv
and
push
out
inc
inc
mov
mov
lea
xchg
xchg
aad
jbe
or
sub
cmp
mov
and
rorl
xor
bound
lds
int3
inc
sbb
jmp
xor
movsl
adc
std
adc
adc
outsl
sbb
push
push
mov
xchg
or
push
lods
mov
push
lea
jp
jo
and
lret
or
flds
sub
jb
dec
jl
lea
sbb
adc
cmc
pushf
outsl
fbld
test
adc
dec
sub
dec
aam
cmp
scas
and
push
inc
jne
add
sub
or
mov
push
push
fs
dec
aas
idivb
rorb
push
dec
pop
insb
mov
out
jbe
jp
leave
push
mov
pushf
sub
loope
rcrb
into
ljmp
add
adc
mov
sbb
push
xchg
scas
dec
je
dec
or
test
or
sbbb
mov
jne
imul
nop
pop
repnz
cmp
push
mov
xlat
cli
out
aad
mov
or
gs
mov
popf
mov
cltd
jb
test
out
push
add
in
insl
xchg
flds
mov
add
scas
lock
push
push
test
pop
sub
jbe,pn
xor
subl
hlt
pop
and
and
sub
imul
lahf
xchg
add
test
push
ja
push
or
jne
inc
and
in
or
loope
nop
pop
mov
or
in
xchg
dec
mov
mov
nop
incl
and
pop
adc
jle
mov
and
inc
scas
aad
sub
sub
aaa
scas
es
clc
lahf
pop
and
xor
inc
sbb
add
xlat
cli
sub
pop
lahf
pop
mov
sbb
jne
jns
push
punpckhbw
outsb
in
push
pop
jbe
mov
or
xor
pop
adc
mov
xchg
push
inc
mov
ret
dec
rcll
pop
pop
or
mov
push
or
lret
cmpsb
mov
inc
cmp
sbb
das
call
mov
pop
shr
xchg
xor
pop
in
mov
xlat
mov
ljmp
pop
sbb
scas
fmuls
sub
sub
add
clc
dec
xor
hlt
xlat
xor
cltd
data16
bound
sbb
and
inc
adc
gs
cmc
sbb
inc
add
call
pop
adc
mov
cmp
fstl
popa
in
jg
or
mov
push
roll
adc
xchg
inc
sbb
add
add
sub
lds
jb
xchg
and
lcall
mov
sbb
jo
xor
sbb
inc
sbb
add
pop
add
mov
cmp
adc
jmp
mov
lret
stos
mov
add
and
ja
shl
fs
jb
daa
lds
cld
pop
and
dec
in
outsl
adc
and
adc
ds
in
sbb
icebp
fs
sub
faddl
repnz
jge
add
fs
inc
sub
call
jns
mov
and
inc
inc
mov
pop
mov
pop
inc
xchg
lret
rcrb
sbb
out
sub
mov
lea
clc
pop
std
mov
shlb
cli
enter
adc
or
loop
pop
inc
pop
adc
xor
or
mov
rolb
mov
scas
fdivs
test
mov
jns
call
mov
popf
out
mov
xor
and
sub
mov
enter
fidivl
lods
lods
or
xor
pusha
outsb
mov
test
outsb
je
adc
xchg
aaa
out
cmp
push
daa
adc
and
add
mov
pushf
xchg
lahf
add
inc
xor
dec
fsubrp
mov
mov
fisubrs
jne
jo
sahf
xor
cmpsb
pop
hlt
cmpsl
add
or
cmp
cs
push
push
mov
mov
repz
or
xor
xor
or
push
mov
and
sbb
aam
xor
lods
out
fst
in
mov
sbb
in
aam
lcall
sub
movsl
push
and
inc
adc
jae
movb
inc
pop
adc
fsubs
out
xchg
scas
adc
sub
cmp
cs
dec
add
adc
pop
ret
mov
or
in
dec
sub
or
aaa
repnz
or
dec
outsb
cmc
sbb
ds
mov
inc
xor
dec
sti
mov
in
mov
imul
sbb
repnz
push
les
sbb
pushl
lcall
pop
call
cmp
add
cltd
and
je
sbb
nop
pop
sbb
arpl
or
mov
mov
mov
sub
ss
cmp
les
xchg
addr16
push
ret
adc
pusha
push
pop
sub
lret
adc
test
test
xorb
je
jae
xor
hlt
addr16
notb
aam
or
cwtl
lods
jnp
xchg
or
sub
inc
xchg
xchg
in
lods
or
push
pop
fdivrl
mov
cmpsl
mov
outsl
or
xchg
loop
xor
adc
push
sub
jae
arpl
push
ja
mov
gs
je
into
mov
or
add
jmp
mov
rep
mov
nop
adc
shrb
lea
or
sub
icebp
cmp
and
pop
pop
sub
or
test
xlat
add
or
insb
fcmovnb
push
lahf
mov
insb
jle
addr16
pop
or
jo
lock
or
nop
and
and
and
gs
sub
and
pop
cmp
aam
push
mov
push
jmp
push
inc
jge
mov
les
scas
int
sub
adc
pop
cmpsb
imul
mov
enter
lds
inc
cltd
std
xchg
sub
les
xchg
mov
les
ret
push
push
jbe
popf
pop
xchg
pusha
push
cmp
fstpl
pop
cmp
mov
jle
in
or
test
adc
push
push
mov
fs
dec
dec
lods
push
nop
mov
inc
add
dec
mov
dec
adc
mov
add
cmpsb
pop
les
loopne
in
dec
jne
cmp
adc
or
cmp
pop
ds
imul
add
adc
add
xchg
adc
xor
or
pop
imul
test
mov
xor
sub
cli
adc
and
sbb
adc
dec
scas
sub
shl
mov
sub
sub
movsl
roll
and
mov
fcoms
sub
out
and
jge
test
or
mov
and
mov
or
imul
in
out
test
push
std
out
pop
push
int
and
js
xlat
loop
xor
jne
lds
data16
xchg
mov
sub
fdivrs
imul
inc
xchg
je
adc
mov
and
sbb
rclb
push
push
insb
push
pop
adc
pop
mov
negb
add
in
movsb
xchg
or
sbb
lcall
sbb
inc
lea
push
in
out
jne
adc
ss
mov
push
mov
or
and
cmpb
aad
inc
pop
enter
push
push
cmp
repz
inc
jno
fcompl
and
shll
lock
adcb
es
cld
dec
leave
jae
add
and
jge
ljmp
pusha
sbb
rcrl
icebp
cmp
dec
adc
hlt
int
push
xchg
adc
cmp
imul
test
mov
mov
jle
jae
out
mov
or
ret
das
fwait
push
or
sti
push
ret
pusha
mov
cli
cmp
andb
rorl
or
jo
in
pushf
mov
sub
cli
push
add
fmuls
xchg
adc
and
xchg
pop
insl
pusha
jp
sub
xchg
cmp
inc
pop
or
push
std
aas
cltd
add
loop
xlat
cli
sub
mov
imul
xchg
in
popa
sub
mov
xchg
cltd
mov
dec
nop
std
nop
xchg
adc
rorl
pop
mov
out
dec
inc
dec
mov
lcall
dec
rcl
mov
and
enter
aam
fcom
lds
leave
fwait
out
movsl
mov
lods
push
dec
pop
pop
or
mov
ficoms
xor
mov
mov
in
dec
and
sub
call
je
jnp
xor
push
daa
out
sub
repz
or
cli
daa
pop
cmc
dec
rolb
les
adc
sar
xchg
pop
sbb
add
out
je
push
pop
push
xchg
pop
pop
sbb
aad
pusha
in
and
jl
adc
mov
enter
xor
bound
fldcw
and
push
push
jns
in
jns
mov
mov
mov
add
outsb
dec
mov
hlt
jle
in
daa
fwait
mov
clc
out
fnstsw
imul
test
aam
jns
adc
xor
stos
xchg
out
fwait
in
jns
jg
dec
test
mov
aam
sub
sbb
movsb
xor
adc
xchg
mov
inc
cwtl
test
cmpsl
fxch
mov
pop
cmp
mov
sub
sub
push
outsl
mov
add
mov
aad
lock
addr16
add
add
pushf
and
sub
lods
mov
push
lea
sti
xlat
test
das
xor
test
or
push
mov
mov
lock
movsl
sub
inc
jl
add
xor
jne
adc
xchg
fs
and
and
shlb
sbb
and
jge
repnz
lods
dec
mov
pusha
cmp
repnz
out
add
sbbb
je
nop
push
daa
sub
adc
test
pop
pop
sti
xor
aaa
stc
outsb
xor
sub
mov
iret
dec
adc
repnz
push
ret
aam
inc
movzwl
push
mov
dec
pop
adc
jle
mov
push
repz
mov
mov
lret
outsb
cmp
repnz
fcomps
ja
lcall
push
fsubrl
loop
mov
mov
inc
mov
and
fs
jp
and
scas
fdivr
cmp
aas
iret
ret
push
int3
shlb
mov
mov
das
push
sub
cmp
adc
push
jno
popa
outsb
jmp
icebp
cmpl
mov
movsl
cmp
shrb
data16
dec
mov
xor
sti
xchg
xor
popf
js
pop
ret
insl
add
fcompl
popf
notl
dec
fdivs
mov
mov
jl
clc
setg
ljmp
mov
decb
push
aas
cmp
jne
mov
inc
cli
fistps
loop
push
nop
xchg
sub
inc
lock
lods
call
xchg
and
daa
mov
shll
inc
push
cltd
lods
jg
xor
xlat
ret
sbb
mov
dec
movsl
hlt
cld
lock
adc
call
pop
adc
and
sub
pushf
mov
inc
stos
cli
sub
dec
or
fsts
cmp
jne
sub
ljmp
mov
mov
sbbb
mov
je
mov
enter
sub
imul
aas
or
cmc
xchg
add
sub
dec
sbb
dec
dec
mov
lret
pop
dec
or
sbb
and
lds
push
out
mov
and
sbb
xor
clc
mov
cld
test
or
das
dec
jg
or
mov
jl
cmpsb
dec
inc
ficoml
push
fisubrl
nop
inc
sti
push
cld
xor
jl
ret
dec
cld
xchg
pcmpeqw
sbb
pop
mov
and
aaa
inc
push
sbb
test
cs
xchg
xchg
pop
enter
fisubrs
push
or
clc
mov
nop
add
and
shl
cltd
adc
cli
insb
fwait
pop
xchg
repnz
dec
or
les
lret
jmp
leave
mov
cmovns
pushf
hlt
xchg
xchg
scas
push
movsb
push
inc
dec
adc
xchg
fsts
sbb
test
test
push
push
cmpsb
mov
pop
and
mov
or
mov
stos
sub
adc
test
adc
xor
push
push
aas
pop
movsb
push
pop
jp
dec
stos
mov
imul
fistps
adc
dec
sub
push
or
pusha
in
iret
test
jg
dec
cmc
test
cltd
dec
jge
push
leave
rorb
pop
pusha
jne
pop
dec
shr
sub
mov
jle
cmp
pop
mov
add
xchg
dec
jmp
icebp
loop
std
cmp
js
not
daa
js
ret
mov
mov
push
test
and
mov
dec
stos
add
ljmp
scas
mov
mov
and
nop
push
mov
jae
jns
mov
push
test
test
dec
adc
in
outsb
pop
shll
adc
cwtl
push
xor
lods
jb
sub
scas
fnstsw
inc
shlb
and
call
insb
push
xchg
sti
int
mov
xchg
shll
cli
add
enter
mov
push
mov
pop
test
mov
sbb
in
inc
push
pop
and
rclb
add
fiadds
push
clc
insb
xor
in
add
mov
xchg
xor
and
add
clc
mov
into
inc
xor
adc
ja
lock
xchg
push
jecxz
insl
rolb
andb
dec
cmp
scas
roll
loopne
pop
rcrb
mov
pop
sar
mov
xor
popf
xor
mov
sub
and
xchg
pop
test
xor
stos
jecxz
ja
rorb
ret
cmp
dec
movsb
sub
and
mov
adc
loopne
cmp
push
movsb
clc
sarl
scas
hlt
adc
push
nop
sub
in
jb
fstl
inc
call
push
push
in
or
push
shr
or
sbb
adc
adc
decb
push
pop
and
cltd
and
mov
sub
sub
leave
bound
pop
mov
rcr
imul
push
cld
xor
jmp
or
call
xor
and
or
dec
xorl
jae
and
popf
out
adc
mov
adc
dec
andb
jne
inc
or
or
movsb
mov
jmp
fcoms
aas
push
movsb
mov
roll
pop
or
adc
movsl
mov
int3
insl
mov
ds
cmp
jp
jecxz
add
sbb
or
or
mov
movsb
mov
sbb
cld
jle
xor
push
xchg
into
gs
inc
pusha
jne
in
mov
mov
or
add
or
dec
int
xchg
add
mov
mov
sub
or
xorb
jo
jne
test
cs
movsl
jne
push
pop
xor
inc
and
aas
inc
or
dec
in
xor
jmp
nop
xor
xchg
jae
outsb
in
mov
lea
das
test
jecxz
sub
inc
mov
inc
in
cwtl
jle
cmp
sbb
push
dec
js
xor
hlt
movsl
xchg
das
jbe
adc
adc
enter
add
lea
rcrb
test
addr16
cltd
and
lcall
or
je
aam
test
adc
stos
inc
js
pop
xor
xchg
inc
jecxz
jge
cmp
cmp
and
xchg
sbb
mov
mov
xor
xor
or
lret
decl
or
mov
daa
lret
js
es
fcoms
cli
daa
mov
inc
pop
push
jp
pop
dec
es
ljmp
push
nop
jmp
ficoms
in
stc
jge
mov
sub
daa
mov
jae
jne
adc
fcoms
iret
dec
pop
jle
ss
cwtl
pop
mov
leave
mov
enter
push
adc
xchg
popf
das
push
mov
in
mov
shrl
adcb
add
mov
or
inc
dec
or
sub
push
push
sbb
mov
je
lret
adcb
jecxz
ljmp
cmp
pushf
cwtl
ficompl
fs
int3
ret
repnz
dec
push
pop
aas
nop
imul
or
push
push
push
or
js
hlt
dec
clc
mov
js
insb
scas
or
jmp
dec
add
outsb
inc
cmp
fcoml
mov
jmp
mov
sub
pop
mov
shll
mov
aam
popf
ja
aam
mov
aaa
sbb
sti
jo
pop
insb
loopne
mov
sarb
les
icebp
je
or
in
and
adc
cmpsl
pop
fs
in
inc
out
repz
in
push
cmp
andl
jae
jb
cli
fidivrs
outsb
and
cmpsl
aad
dec
inc
decl
in
nop
jo
pop
jmp
mov
and
movl
mov
xchg
pop
xchg
and
enter
test
pop
xor
and
cmp
daa
sub
loop
cli
aam
das
fdiv
popf
aas
daa
or
inc
inc
push
fdivrl
or
xor
xchg
daa
sub
daa
sub
jae
mov
sub
movsb
push
iret
mov
das
sarb
jae
je
dec
jb
and
adc
sbb
mov
out
adc
in
push
mov
jmp
add
push
jl
mov
and
push
mov
push
or
mov
scas
pop
fs
dec
add
inc
and
enter
int3
or
jl
xchg
or
sbb
push
je
adc
call
lea
sbb
loop
push
loop
adc
in
aas
dec
gs
jb
and
aas
xchg
aam
adc
hlt
repz
leave
loopne
js
jo
enter
sbb
hlt
add
not
enter
add
fstpt
int3
or
dec
push
out
int3
cli
inc
mov
sbb
or
push
add
xchg
out
sub
fsts
or
sub
push
xor
lcall
push
fsubs
arpl
sub
add
lea
test
inc
mov
call
imul
add
test
jl
cmp
sahf
testl
out
pop
bound
jle
ret
leave
fcoms
sbb
jmp
or
mov
out
xor
add
xor
xchg
jmp
inc
cmp
nop
mov
add
adc
jne
sbb
movsb
cli
loop
shrb
jl
movsl
mov
pop
in
and
adc
mov
adc
shl
sub
cmp
and
jnp
stos
or
jle
nop
xchg
push
or
jle
dec
push
add
sub
test
xchg
loopne
sti
aam
ret
cmc
cmovl
dec
pusha
sub
jg
jp
push
aad
push
dec
inc
jne
rcrb
and
outsb
xor
mov
loop
and
shl
inc
jo
add
out
popf
jg
xor
dec
sbb
in
jbe
xlat
cmp
pop
in
mov
mov
mov
pop
adc
outsb
fcoml
xchg
push
test
ss
in
xchg
jne
jle
rorl
cmpsl
adc
rolb
inc
mov
cmp
andb
jl
dec
jmp
enter
or
push
jmp
leave
mov
in
push
leave
je
test
xchg
lahf
dec
dec
cmp
dec
sub
xlat
xor
push
adc
and
sub
test
ja
aam
mov
pop
out
int
or
jb
or
daa
ret
xchg
sbb
fisttps
rorb
push
dec
clc
pop
in
push
data16
inc
and
mov
movsb
mov
mov
pop
in
lds
icebp
ret
and
push
cmpl
or
cmp
call
push
fadd
cmc
hlt
mov
fdivr
cmp
sbb
in
cltd
push
push
cwtl
xor
les
pop
rcll
leave
adc
fbstp
mov
sub
inc
pop
pop
mov
lds
cltd
push
mov
ja
mov
push
out
ljmp
pop
or
inc
lret
mov
lcall
dec
scas
popa
fs
sub
mov
sub
int
jle
cmp
jge
cwtl
icebp
lcall
mov
add
xlat
xchg
dec
out
pop
test
add
add
je
loopne
leave
leave
or
jecxz
adc
or
pop
push
add
mov
jge
inc
dec
jb
dec
fucomp
fidivrl
dec
mov
add
cltd
fcmovbe
es
dec
stc
or
push
sub
leave
pop
fistps
call
mov
add
jge
mov
ljmp
or
mov
arpl
sbbl
jo
pop
loopne
dec
xchg
mov
sbb
xor
adc
cmp
xor
jne
jbe
pop
pop
sbb
and
push
rcl
stos
adc
adc
ret
pop
cmp
ror
scas
notl
add
add
adc
and
and
jle
sub
jnp
lods
adc
adc
es
lods
lds
outsl
mov
dec
jno
outsl
je
enter
out
sub
aam
fistps
adc
out
inc
repnz
inc
out
pushf
mov
fs
inc
sub
jo
js
lock
test
dec
or
fmuls
and
pop
stos
adc
notb
or
cli
mov
xor
addr16
rorl
in
add
lock
enter
adc
clc
or
add
mov
loopne
lret
and
push
nop
sub
xor
ljmp
mov
ficoml
dec
add
fcmovne
inc
aaa
adc
or
sahf
dec
loope
loop
inc
pop
aam
fcoml
cmp
push
inc
incl
pusha
or
dec
ds
aam
call
xor
dec
call
and
xchg
pop
int
loope
sbb
ljmp
addb
shlb
pop
mov
fsubl
loopne
roll
adc
lea
mov
mov
dec
mov
subb
cld
adc
pop
test
sub
dec
loope
arpl
sahf
cmc
pop
sub
push
add
mov
jp
lock
sbb
mov
ret
je
imul
lods
push
push
cmp
pop
mov
imul
add
mov
rcrb
sub
test
clc
movsb
mov
dec
js
xor
add
enter
les
adc
repnz
push
xor
mov
mov
dec
jecxz
adc
xlat
or
ret
mov
movsl
fdivrs
or
imul
sub
sbb
cmp
jge
lret
inc
push
stc
lods
sub
push
shll
in
dec
pop
in
call
xlat
ljmp
push
je
mov
orl
inc
jl
mov
adc
mov
xlat
push
pop
jmp
daa
and
adc
sub
add
xorb
or
loop
cmovs
sbb
adc
movl
or
nop
jg
and
add
or
mov
divl
jp
filds
and
sub
ret
jnp
int3
add
mov
push
dec
fstpt
arpl
xchg
inc
imul
mov
mov
jl
fsubrs
stos
and
mov
arpl
lods
into
inc
out
fistpll
xchg
jbe
mov
adc
adc
cwtl
dec
test
ret
jbe
and
shl
mov
sub
adc
mov
lock
lods
or
jl
test
mov
mov
xor
clc
out
jge
in
or
cmc
fmul
or
xchg
push
push
lods
xchg
les
push
adc
rorl
or
mov
add
dec
cmpsl
mov
int
outsb
lahf
push
xor
or
xor
cmp
decl
sub
lret
roll
daa
out
jg
sbb
add
and
sub
xor
cwtl
imul
jge
js
mov
cmp
pop
and
loopne
imul
cmc
inc
cmp
aaa
pop
sub
push
mov
imul
push
sti
mov
lea
push
sbb
fsubl
outsl
xchg
stos
jno
loope
bound
push
push
in
push
xchg
repz
jge
shl
sub
inc
in
nop
push
jns
enter
and
inc
rolb
sub
lock
nop
or
out
jns
in
mulb
push
clc
inc
inc
sbb
orps
xchg
pop
pop
adc
or
daa
xchg
adc
pop
faddl
or
mov
cmp
sub
out
loopne
ficoml
pop
cmpsb
call
sbb
pop
pop
in
dec
out
ret
addr16
pop
scas
xor
test
mov
rclb
inc
adc
test
shll
lcall
pop
faddl
dec
fdivrl
dec
mov
adc
push
movsb
push
hlt
or
lahf
and
outsl
in
cmpsl
inc
dec
stc
cltd
mulb
sub
lds
sahf
out
shlb
loope
push
es
in
push
push
loop
loopne
addl
pop
test
jmp
cmp
and
pushf
adc
pushf
cmp
xchg
inc
lret
pop
aam
js
lods
lds
push
das
rclb
or
sbb
je
or
add
add
add
in
lods
jb
daa
loopne
xchg
cmp
mov
adc
enter
push
jge
fstps
popf
xlat
mov
or
cmp
mov
std
cmp
insb
sub
mov
jbe
push
ret
inc
adc
jecxz
and
fnstenv
sahf
jnp
adc
mov
ljmp
outsb
loop
xor
mov
inc
xchg
and
js
repnz
cmc
sbb
lock
push
and
stos
or
and
dec
mov
outsl
das
test
xchg
scas
cli
es
mov
push
cli
fsts
sbb
sarb
inc
and
or
push
ja
and
dec
sub
int3
push
or
mov
xchg
sub
mov
push
push
dec
or
dec
push
pop
fstps
sbb
pushl
xchg
adc
loop
push
fimull
mov
or
in
xor
loopne
push
and
pop
sub
jno
mov
ret
and
mov
inc
mov
sbb
repz
adc
jmp
es
dec
mov
or
daa
sub
adc
inc
jl
mov
sbb
repz
sbb
mov
pop
bound
insl
inc
mov
adc
push
dec
mov
shll
or
xchg
iret
fstpl
dec
jbe
xor
push
or
aam
pushf
inc
in
mov
cld
stc
cli
adc
jg
dec
xor
scas
adc
jge
mov
lock
cltd
push
sbb
push
mov
ss
and
dec
add
adc
loope
rolb
add
add
jmp
push
fisttpll
lods
testb
imul
jo
push
loopne
pop
push
pop
clc
sbbl
xor
fsubr
fdivs
jo
movsb
shlb
cld
push
push
test
pop
push
inc
inc
sub
test
adc
push
push
in
dec
arpl
push
and
xor
cmp
mov
sub
jp
and
or
sbb
sub
lock
fxam
pop
or
test
inc
xchg
imul
push
stc
pop
or
inc
inc
pop
mov
pusha
xor
and
nop
adc
sti
or
xor
popa
popa
inc
insb
ret
mov
push
leave
pop
add
sti
rcll
push
repz
pop
cmp
lea
aam
iret
lods
or
jmp
dec
push
xchg
cmp
lahf
fsubl
das
out
inc
cmc
mov
movsb
inc
out
jnp
jb
push
push
in
adcb
mov
aad
mov
inc
movsb
adc
mov
lea
push
mov
pop
fbld
xor
mov
dec
enter
incb
jne
mov
jnp
in
mov
cs
movsl
pop
nop
add
enter
dec
mov
and
pop
es
pushf
sub
sbb
sti
push
out
cli
sub
jl
shr
and
push
xchg
dec
nop
push
or
hlt
repz
inc
add
in
sub
inc
leave
shrb
cmpsb
mov
js
cmp
movsl
cmp
jmp
and
jg
je
lock
addr16
mov
cltd
cld
out
enter
insb
add
jmp
nop
ja
push
sbb
inc
out
xor
jg
adc
lock
jmp
add
push
jmp
jg
mov
xor
xor
add
jl
fs
adc
mov
aas
push
xchg
sbb
dec
jp
push
jne
cmc
add
sub
jmp
roll
jmp
cmp
popf
add
pop
movsl
lea
movsl
dec
xor
xchg
mov
jle
sub
dec
pop
test
mov
mov
and
in
idivl
les
inc
xorl
in
xor
rcll
sti
and
cmp
dec
jae
inc
popf
xorl
stos
je
dec
imul
or
notw
cmpsl
mov
dec
adc
es
pop
pop
stos
pop
jae
sti
xchg
sti
mov
push
cmp
mov
or
ret
popf
pop
push
push
mov
sub
cmc
xor
ds
lcall
or
mov
cmpsl
popf
dec
fs
mov
loop
push
and
jo
or
xlat
movsl
clc
dec
sub
sbb
in
xor
mov
outsb
mov
dec
aas
pop
mov
and
pop
jns
lret
cwtl
das
incb
push
fwait
mov
lcall
mov
inc
fucom
es
inc
or
loope
jb
test
add
subb
adc
push
jg
and
add
cmp
loop
movsl
xor
inc
imul
sub
push
mov
test
mov
sub
cmp
or
push
mov
adc
dec
inc
int3
jnp
dec
pop
das
push
sbb
out
xor
nop
add
sub
ja
add
and
popf
xor
cmpsl
loope
inc
pop
sbb
cmc
adc
sub
lods
int
das
sbb
xor
stos
adc
push
shrb
nop
mov
lea
push
cmp
xchg
pop
movsl
or
pop
negl
sbbb
jnp
sub
sbb
test
and
sbb
push
out
mov
add
xchg
cmp
adc
add
push
push
shrl
hlt
sub
lds
xchg
dec
ljmp
mov
lahf
push
pop
mov
mov
rcrb
mov
arpl
sub
add
mov
push
loope
xchg
sub
out
nop
sub
lock
or
sub
inc
mov
cmp
cmpsl
add
int3
sub
add
aas
cmpsb
add
jmp
test
add
cmp
out
xchg
and
and
inc
mov
inc
push
dec
cld
popf
or
insb
int
push
outsl
pop
xchg
cmp
lahf
fdivr
jb
js
sbb
add
sbb
arpl
jo
mov
arpl
cs
pop
test
xchg
ret
push
pusha
fwait
jp
push
lea
push
or
hlt
movsl
lods
orb
int3
pop
xchg
and
cwtl
adc
dec
insl
daa
mov
aad
rorl
xorl
or
jnp
adc
test
or
in
jle
orb
add
cmp
incl
lea
add
insb
or
cltd
xchg
push
mov
inc
inc
or
sub
rolb
out
jb
or
mov
jmp
adc
jg
dec
lock
and
pop
fsubp
push
fwait
cmpb
jnp
arpl
mov
push
xor
sub
adc
add
pop
and
es
scas
iret
and
xor
add
or
arpl
das
hlt
jl
cmp
push
inc
inc
enter
xchg
mov
lret
into
and
adc
pushl
hlt
in
cmpsl
in
mov
push
add
subl
jb
lret
int3
adc
popa
pop
addps
pop
je
add
or
or
out
add
shlb
lahf
pop
ret
clc
xchg
popf
xlat
add
xor
cli
nop
jne
add
jg
mull
rorb
add
add
pop
pop
pop
ja
sub
aad
mov
movb
leave
jne
jbe
or
sub
data16
sub
loop
add
xor
div
cld
add
xor
cmp
adc
xor
pop
sbb
sub
or
adc
shll
jmp
mov
dec
jne
cli
insl
push
mov
addl
adc
leave
push
jo
dec
push
cld
repnz
push
pusha
cli
push
ret
loope
and
push
xchg
testl
or
pop
mov
xchg
jne
cs
stos
mov
lcall
jno
ljmp
adc
dec
mul
mov
mov
or
stc
jnp
jnp
cmpsb
sbb
sub
fcompl
sbb
cmp
xchg
inc
test
je
out
jb
mov
jo
sbb
cmc
add
pop
mov
sub
testl
adcl
inc
mov
jnp
fdivr
lret
jne
xlat
fcompl
test
repz
fsubl
push
push
xor
add
adc
rolb
outsb
sub
xchg
scas
mov
xlat
out
pop
out
cmp
jl
in
xor
fmull
xchg
adc
lock
cmp
repz
andb
mov
pop
push
jge
mov
pop
dec
sub
es
insb
push
into
sub
inc
stos
sarl
test
lcall
jne
push
jnp
sub
mov
pop
mov
movzbl
test
xchg
imul
push
shll
dec
jne
sub
mov
lahf
or
push
add
push
neg
adc
or
pop
outsl
pop
shrb
or
and
jl
mov
mov
cmp
test
je
mov
clc
shlb
lock
mov
xor
mov
shll
fldt
inc
and
mov
sub
dec
and
sub
add
stc
add
inc
sbb
or
repnz
add
bnd
add
jno
cmc
test
or
or
inc
enter
inc
add
iret
or
xchg
xor
and
clc
mov
or
or
inc
add
adcl
dec
sub
xor
call
pusha
je
xorb
shrl
mov
cmp
dec
ret
inc
and
sbb
jmp
or
jne
jmp
jg
test
call
leave
jbe
xchg
pusha
jge
aaa
and
add
dec
mov
cmpsb
xor
mov
arpl
dec
sbb
fistl
mov
cld
adc
arpl
push
lds
and
fistpl
and
add
add
loope
lods
js
and
sub
ljmp
mov
or
bound
inc
xchg
daa
adcl
jl
and
and
push
push
push
mov
daa
ja
fiadds
scas
shll
test
lret
int3
or
scas
and
jge
or
add
out
or
leave
push
mov
fimuls
xchg
mov
sub
mov
in
push
xor
inc
pop
push
push
test
inc
in
cwtl
and
inc
loop
pop
cli
shr
push
mov
fdivl
leave
repnz
or
xor
sub
insl
adc
les
cmp
xchg
clc
mov
jg
inc
cmp
push
pusha
sbb
or
mov
sub
mov
push
dec
cmp
mov
cmp
and
xchg
jns
fdivs
mov
push
dec
dec
push
dec
dec
cs
jo
pop
mov
jmp
xor
push
cmp
cwtl
stos
in
xor
sbb
cmp
inc
ja
cmp
out
out
dec
push
imul
jae
repnz
rolb
push
push
inc
xor
cmp
mov
xor
jnp
inc
pusha
ss
sbb
adc
inc
daa
inc
cmp
add
mov
dec
jnp
jo
gs
inc
js
outsb
push
sub
sub
inc
xor
mov
mov
aaa
jmp
push
test
xor
outsb
xorl
inc
into
inc
andb
sub
add
add
pop
lds
shr
scas
andb
cwtl
and
les
push
cs
shl
sti
pop
out
adc
xor
xor
mov
sub
and
xor
mov
inc
jle
gs
je
popf
xchg
movsb
push
and
pop
cwtl
add
test
sub
dec
js
mov
dec
inc
add
movsb
pop
test
in
das
movb
rclb
push
test
sbb
dec
dec
jae
and
cmp
or
outsb
cmpsb
and
xor
jp
push
movsl
pop
xor
inc
push
and
mov
sbb
in
xchg
and
cltd
hlt
scas
sub
test
lret
incl
push
adc
lods
jb
push
mov
jne
sbb
mov
icebp
test
pop
cmpl
scas
loop
sub
or
sub
push
decl
jne
lahf
testb
fcoms
insl
mov
push
fsts
daa
push
jne
dec
and
das
push
and
sbb
pushf
sub
testb
clc
cmc
popf
js
jnp
cmpsl
sub
xchg
fldl
cmp
subl
cli
popa
sub
imul
push
push
pop
cld
scas
movsb
sub
push
jno
mov
scas
pop
push
adc
filds
in
cmc
cmpsl
fcomps
mov
fsub
movsb
daa
push
inc
enter
mov
add
clc
adc
subl
and
rclb
cmp
cmp
sub
sub
and
and
xchg
adc
adc
or
or
add
sbb
test
shlb
xor
adc
xor
and
add
sbb
inc
das
lret
cld
pop
push
mov
or
push
imul
mov
pop
sub
popf
fldcw
mov
mov
xlat
mov
je
fwait
mov
daa
inc
xor
loopne
add
or
sub
jo
popa
and
pop
xor
adc
mov
test
pop
jmp
mov
and
sbb
movb
dec
cmp
lcall
jmp
sub
test
lahf
in
sbb
inc
push
loope
or
subl
cmp
jae
xchg
sub
sbb
mov
shrl
or
adc
leave
push
mov
xchg
xchg
out
pop
mov
push
or
push
mov
movsb
jo
push
xorl
jp
cs
stc
loop
rolb
xlat
out
test
dec
lods
xchg
dec
scas
mov
pusha
aam
mov
loope
mov
pusha
je
jbe
lea
cmpsb
ret
mov
cmp
ja
loope
test
dec
adc
push
nop
adc
sbb
dec
pop
add
add
jne,pn
lret
sub
xor
cltd
addr16
stos
fcmovnu
inc
or
test
fbld
xor
popf
jge
js
push
movsb
cmp
cmovns
push
int3
cs
jge
inc
leave
xchg
cld
adc
xor
push
add
shlb
push
pop
or
daa
mov
cmp
pop
push
xchg
pop
or
js
mov
adc
adc
add
nop
or
xor
loope
xor
clc
jb
add
push
or
push
xchg
mov
xor
xor
aam
dec
jecxz
dec
test
push
push
dec
cmp
sub
fisubrs
add
lcall
add
xchg
les
arpl
cmp
push
xchg
or
lea
inc
add
dec
pop
lods
and
leave
je
or
shrl
ds
inc
push
sub
je
mov
data16
jmp
or
sbb
pop
dec
or
cltd
sbb
icebp
xor
loope
call
xor
lods
arpl
addb
mov
pop
mov
or
and
fiaddl
push
fstps
fisttpll
data16
dec
mov
int3
icebp
mov
imul
sbbb
inc
add
int
add
cltd
xor
sub
add
sbb
cmp
cmp
sub
jno
inc
add
in
movsb
adc
add
push
push
daa
xchg
jbe
mov
push
sub
test
or
adc
leave
sarl
xor
push
push
sub
push
mov
add
adc
js
movsb
or
push
setl
stos
push
mov
movb
cmpsb
jecxz
mov
gs
pushf
insb
or
lds
dec
lcall
popf
sub
cmp
and
and
mov
scas
icebp
xor
call
or
add
movsb
aaa
test
push
push
int3
cwtl
adc
test
xor
adc
mov
inc
addr16
lods
aam
fimull
xor
add
jg
inc
shl
mov
xchg
mov
iret
js
lods
icebp
dec
push
and
push
pop
in
sbb
insb
pop
add
dec
movswl
or
add
bnd
dec
mov
push
mov
sahf
loopne
dec
ret
cld
pushl
call
roll
adc
ret
rorl
std
pop
fistps
rorb
or
repz
xchg
mov
xchg
sbb
mov
mov
aad
adc
js
sbb
inc
sub
mov
clc
add
or
inc
cmp
cmpl
test
cs
pushl
shr
lods
add
dec
sbb
bound
jg
cmovl
pop
adc
les
or
push
dec
lods
nop
mov
push
pop
xor
xchg
insl
or
push
rcll
dec
sbb
push
cmp
add
sahf
sbb
adc
adc
add
inc
and
xchg
mov
push
mov
jl
addb
std
dec
pop
sbb
add
and
ljmp
and
imul
test
inc
pop
jno
pop
imul
sub
cmp
dec
testb
xor
sbb
or
add
ja
sub
mov
push
xor
mov
xchg
in
pop
or
cwtl
dec
lret
lods
sub
cmp
jnp
jl
add
sbb
loop
or
mov
dec
loopne
sub
jg
pop
inc
punpckhdq
sbb
mov
je
mov
pop
pushf
movsb
xchg
dec
movsb
mov
pushf
rorb
xchg
jno
lods
xor
popa
pop
add
xor
and
adc
fwait
mov
roll
lea
int3
dec
in
mov
or
or
dec
and
les
xchg
ljmp
outsl
cmp
mov
cmp
int
je
push
ret
jle
stos
lea
jnp
xchg
xor
cld
aaa
jne
xchg
imul
jno
pop
dec
adc
inc
and
add
sub
adc
mov
sub
je
js
cmp
pop
cli
mov
jnp
dec
lods
xor
and
dec
cmpsl
inc
pop
jns
scas
jne
mov
or
leave
jmp
aas
push
jno
dec
rcl
xchg
sbb
mov
dec
jne
xchg
or
and
and
pushf
cmp
xchg
inc
jns
sbb
sbb
and
fs
lods
xor
adc
or
xchg
sete
cld
sti
leave
cld
fs
stos
cmpsb
sbb
xor
inc
fnstenv
pop
jb
mov
out
in
pop
mov
or
mov
dec
stos
pop
sub
add
rorl
das
pusha
add
int3
arpl
js
jle
push
adc
adc
enter
lahf
clc
test
and
decl
in
ret
xchg
and
lods
xchg
pusha
mov
jmp
inc
fcomip
int
and
cmp
or
mov
pop
mov
push
jp
es
push
push
fs
adc
pop
adc
rorl
push
sub
mov
sub
push
sub
testb
or
movsl
and
xor
sub
push
cld
mov
mov
or
mov
inc
rorb
jmp
cmp
inc
stos
cmp
push
clc
jne
inc
pop
rclb
or
fnstcw
mov
out
inc
mov
sub
xor
adc
pop
leave
call
mov
xchg
sbb
dec
cmp
jns
add
dec
mov
mov
dec
mov
test
sub
mov
and
int3
mov
lock
cs
or
imul
mov
mov
fs
imul
repnz
xchg
sub
popa
or
or
mov
push
outsb
sbb
xchg
xor
stos
inc
or
and
js
jo
leave
filds
mov
push
push
or
add
fidivl
mov
xor
sub
outsb
mov
inc
jnp
in
aad
xchg
idivb
fwait
arpl
or
shlb
pop
dec
sarb
sbb
adc
inc
pop
stos
cld
jne
ret
addr16
and
jecxz
icebp
jae
mov
and
rcrb
fcomps
sbb
push
sbb
jl
pop
adc
and
out
push
add
and
pop
or
imul
test
xor
or
jns
sub
or
nop
and
or
pop
and
cmpb
xlat
out
fnstenv
dec
xchg
ljmp
sub
or
ljmp
bound
adc
and
icebp
push
jl
jae
push
xchg
sub
movsb
xchg
jge
xor
jne
sbb
xchg
pop
cmc
xchg
mov
push
or
movsb
sbb
test
and
push
test
mov
inc
data16
adcl
addb
dec
je
jno
inc
pop
xchg
mov
sbb
call
push
and
in
adc
xor
or
adc
jmp
enter
push
mov
nop
fs
and
sub
movsb
dec
mov
addr16
or
aad
xor
imul
ret
and
xchg
and
or
lock
dec
add
xor
adc
xor
dec
lods
adc
pop
push
lock
mov
and
popa
sub
cmp
mov
and
xchg
ror
movsb
aaa
and
cmp
and
icebp
fs
hlt
lods
out
push
push
imul
xchg
cpuid
and
pop
xor
xchg
unpcklps
clc
pop
dec
pop
mov
inc
mov
sar
jb
push
jno
xchg
sahf
cld
into
pop
int
insb
aam
pop
test
cld
add
sbb
inc
ds
inc
cld
xchg
cmp
fadds
sbb
sbb
push
and
sbb
dec
push
dec
add
inc
add
and
mov
adc
push
inc
add
xor
mov
pop
xchg
or
mov
xchg
stos
testb
and
dec
pop
push
or
mov
and
and
mov
leave
lock
jle
push
lods
fs
inc
jl
or
jl
mov
sub
pop
add
push
push
cli
in
xor
hlt
movsb
and
sub
sbb
sub
gs
sub
ss
or
hlt
fildll
fdivs
daa
sbb
hlt
dec
dec
aad
ljmp
mov
sub
or
dec
and
pop
jns
and
dec
test
mov
push
call
or
sbb
jmp
aas
lods
push
and
inc
pop
mov
or
je
xor
or
inc
push
scas
stc
push
cmc
int
leave
test
or
fwait
setns
sbb
add
jne
push
adc
mov
or
jmp
add
int
lret
insl
cmp
fimull
in
xor
into
mov
mov
xor
popf
inc
mov
adc
push
adc
xchg
les
lds
add
mov
out
jl
jmp
pop
sbb
mov
insl
and
cmp
test
hlt
jmp
std
pop
pop
jle
insb
add
roll
xor
into
pop
les
and
add
test
push
dec
adc
imul
repz
loopne
inc
pop
test
pop
enter
call
inc
xor
and
or
sub
mov
nopl
mov
jmp
adc
cmp
jae
push
sbb
aam
movsl
out
or
and
enter
lock
dec
sub
addb
cmp
pusha
jge
ljmp
sbb
adc
xor
and
add
or
sbb
and
mov
adc
add
adc
mov
sbb
das
mov
mov
ror
ja
in
and
push
and
dec
push
inc
orl
xchg
sub
adc
sub
adc
mov
mov
or
sub
mov
mov
shr
dec
sbb
adc
add
adc
or
xor
adc
mov
popa
cwtl
jne
lea
ljmp
aad
add
mov
xor
push
xor
mov
add
cs
and
pop
adc
push
mov
sub
cs
das
ja
je
std
xor
clc
and
filds
orb
adc
add
push
pop
loope
add
or
or
dec
and
add
and
aas
inc
push
imul
dec
ret
movsl
popa
mov
push
cmpl
xor
push
sub
sub
cmp
and
gs
cmp
or
sub
push
les
sub
lea
pusha
mov
mov
pop
or
jl
pop
sub
adc
mov
clc
and
and
mov
and
add
add
push
pop
mov
or
adc
xor
jae
or
mov
dec
out
xchg
std
xor
sbb
or
inc
cmp
push
adc
mov
ds
adc
jo
orb
nop
push
inc
mov
shrb
cmp
sti
push
addr16
mov
xor
dec
test
enter
sub
test
enter
sub
test
xchg
clc
push
lea
daa
mov
or
jge
sar
je
jp
lea
pop
adc
inc
test
push
and
xor
mov
lea
adc
sub
sbb
in
mov
ret
mov
xchg
cmp
lock
out
or
inc
cmp
fisttps
test
cli
push
hlt
dec
inc
sbb
mov
lods
imul
mov
lret
mov
mov
push
inc
jg
cmpsb
and
and
pop
dec
xor
inc
incb
addb
adc
and
or
push
jo
out
sub
adc
cmc
mov
jnp
fs
insl
gs
and
in
and
xchg
cli
repnz
push
xchg
enter
inc
inc
gs
lret
adc
add
or
or
and
stc
aam
sbb
mov
int3
loop
push
adc
inc
cmp
mov
sub
sbb
jae
popa
scas
mov
icebp
and
xor
es
repz
imul
mov
inc
negb
or
adc
test
dec
clc
out
and
jne
push
hlt
and
test
lock
cmp
push
das
mov
fdivrl
cs
cs
dec
mov
rcrb
push
pushf
mov
icebp
mov
add
lds
in
jle
mov
push
sub
daa
in
dec
push
mov
out
mov
aad
mov
pop
cmp
dec
std
pop
adc
push
and
test
maxps
add
hlt
lret
inc
xchg
pop
dec
test
pop
lods
jmp
fmuls
cltd
dec
test
push
pop
pop
pushf
adc
push
repz
inc
pop
push
jb
jns
cwtl
lea
inc
test
testl
jg
insl
cmpb
jne
or
sarb
inc
ret
outsl
jo
in
mov
push
mov
xchg
lret
testb
push
popa
pop
adc
pop
mov
sub
sarb
sub
lds
repnz
test
hlt
out
push
xor
jl
jmp
push
faddl
jbe
imul
fsubrs
sahf
jle
mov
pushf
fsts
fnstenv
dec
or
fisttpl
jecxz
mov
xor
pop
fs
pop
push
jb
jbe
or
push
sbb
and
or
or
pop
mov
nop
mov
dec
or
testb
in
adc
out
sub
addr16
or
sub
mov
xor
xchg
sub
into
hlt
ret
xor
sarl
sub
dec
jge
sahf
cmp
pushf
cmpsl
lods
hlt
jge
mov
daa
and
stos
mov
jns
jae
xchg
fsubl
shr
fs
xchg
pop
pop
sbb
lds
or
push
dec
add
lcall
imul
aad
insl
jne
daa
loopne
fisubl
dec
arpl
insl
jo
lock
int3
test
sti
cmp
mov
imul
call
lcall
imul
mov
or
daa
and
icebp
push
xor
aas
xor
cmp
sub
pop
mov
xor
xor
push
mov
les
cmp
dec
jne
scas
test
push
xchg
add
xor
ret
sarl
and
sbb
mov
fisubs
sub
insb
add
inc
mov
outsb
mov
add
or
popf
mov
ds
stos
adc
dec
ret
enter
je
mov
xor
xchg
daa
mov
dec
or
push
mov
popa
push
sub
pop
pop
mov
pop
mov
pop
les
xlat
mov
int
cmp
or
imulb
mov
out
adc
mov
xchg
jecxz
rorl
cmp
add
jne
dec
adc
add
cmp
loope
inc
or
testl
adc
ret
jg
sub
cmpl
mov
jae
std
add
rorb
inc
jo
int
add
incl
push
push
mov
mov
cmp
sbb
mov
xor
subb
mov
or
mov
movsb
sahf
sub
adc
sub
adc
ret
push
add
pop
sub
test
or
mov
or
mov
adc
outsb
sbb
ret
xchg
ror
movb
je
cmp
push
or
test
push
push
add
xor
cmp
shll
pop
mov
push
or
inc
rcr
aaa
or
and
test
bound
jmp
fidivrs
call
inc
sub
push
fnsave
scas
repz
les
ljmp
loop
and
in
adc
add
sub
add
out
dec
stos
cmc
mov
jbe
sbb
xor
test
xchg
out
adc
sbb
in
xor
push
bswap
or
test
lods
dec
fstl
mov
aam
ret
stc
sbb
repz
movsl
shlb
mov
dec
sub
or
je
decb
sub
decb
lret
jo
pop
push
ret
aas
and
jl
gs
mov
sub
and
xorl
lcall
cmp
sbb
cmpsl
movsb
fs
aaa
negl
loopne
add
or
clc
or
fldl
jl
or
cld
jge
or
adc
pop
lea
or
pop
cmp
or
mov
orb
and
or
mov
imul
mov
iret
pop
push
push
add
and
dec
or
dec
push
adc
fdiv
sbbl
cmc
rclb
mov
shl
push
repnz
imul
mov
add
cmp
dec
test
inc
sbb
sbbl
pop
mov
sub
and
or
xchg
push
dec
loope
scas
ljmp
or
sbb
push
and
movl
rorb
int3
clc
cmpsb
mov
lahf
xor
cmpsb
out
jmp
inc
add
ljmp
mov
lea
dec
add
mov
xchg
and
fcmovne
adc
mov
xor
mov
dec
and
jl
loope
call
inc
clc
scas
pop
test
pop
add
sbb
in
in
cmp
scas
js
adc
or
or
sub
sahf
pop
cs
mov
xor
lea
shrl
mov
jae
push
and
push
dec
adc
lock
xchg
call
xor
add
pop
mov
jbe
decb
movsl
pusha
pop
or
mov
fwait
inc
inc
cmp
push
inc
pop
movzbl
xor
and
push
sub
insl
sub
ljmp
add
xor
shll
in
cmp
and
push
adcb
xor
enter
mov
dec
push
inc
push
arpl
dec
das
adc
push
aad
cmp
jbe
dec
xchg
fsubl
inc
fsubl
in
and
fimull
fbld
and
adc
out
xchg
bound
mov
sub
scas
and
jge
imull
and
xor
pop
mov
add
inc
add
sub
sub
sub
xor
xchg
dec
call
pop
rorb
idivb
push
sbb
mov
imul
adc
mov
cmc
out
subl
insb
adc
mov
xor
cmp
decl
fcmovbe
sbb
xor
jo
mov
cltd
xchg
push
sub
push
sbb
push
and
in
out
andb
jmp
mov
sub
xlat
inc
into
jle
in
and
lods
or
cmp
or
sub
sahf
xor
cmp
or
mov
out
fs
jo
pop
lret
sbb
xchg
sbb
js
mov
enter
cmp
cs
push
mov
inc
lret
out
push
js
das
or
push
pop
shr
pop
aas
imul
lret
addb
in
mov
sbb
idivl
daa
dec
and
lds
bound
aaa
or
dec
adc
inc
out
pop
cli
test
or
mov
and
mov
fmuls
cmpsb
inc
or
cmp
decl
cli
xchg
dec
aas
aaa
sub
xor
leave
xchg
clc
push
xchg
inc
or
push
sbb
inc
adc
adc
cmp
dec
stc
fnstenv
dec
ja
dec
popl
repz
fs
cli
xor
xchg
jg
ljmp
xor
xor
jbe
je
mov
sbbl
jnp
and
pop
popa
popf
or
xor
adc
adc
shlb
xor
ret
push
sbb
push
imul
cmp
sub
and
lods
push
inc
dec
sub
add
shl
mov
or
xchg
sub
jge
repnz
mov
dec
ljmp
jmp
sbb
add
add
push
or
sub
leave
and
sbb
adc
sub
add
lcall
shll
xor
das
inc
out
xor
or
fwait
inc
int3
bound
mov
in
xor
loopne
dec
and
rcrb
jl
xchg
sbb
add
xchg
cmp
and
int3
fidivl
adc
push
mov
sub
fcoms
fldcw
xlat
call
test
sbb
outsb
sbb
adc
xchg
pop
out
adc
jne
lods
dec
out
xor
add
mov
shl
sbb
xor
dec
jge
icebp
dec
cmp
add
imul
jp
mov
sub
dec
push
pop
xchg
lds
daa
shlb
testb
mov
ljmp
leave
mov
mov
add
push
loope
je
popf
or
and
dec
and
jg
inc
sbb
adc
cmp
xor
inc
lods
jg
clc
shl
aas
sub
stos
and
inc
inc
mov
adc
or
inc
rorl
std
jge
sub
cmpsl
movsb
mov
add
ss
ss
inc
jp
and
inc
push
mov
dec
jnp
imul
push
pop
xor
je
cmp
loop
mov
jmp
push
or
xor
adc
mov
dec
xor
pusha
xchg
fcoml
popf
or
cmp
movsb
cmp
xchg
rcrb
out
sub
je
xchg
fcoms
rolb
enter
xchg
nop
dec
jo
shr
add
call
or
sbbl
inc
and
inc
stc
or
xchg
adc
or
mov
mov
xchg
push
adcb
add
fsts
and
sub
jp
push
daa
add
mov
adcb
in
pop
push
test
push
push
sub
ret
cmp
push
or
pop
xlat
adc
sub
test
cmp
jle
std
xchg
scas
cmp
out
inc
jl
jecxz
loope
sub
mov
inc
flds
xchg
mov
lods
and
xor
js
daa
push
dec
pop
lret
sbb
cmovl
push
data16
pop
and
dec
cmove
xchg
push
lods
data16
mov
jmp
je
pop
add
mov
imul
add
mov
adc
ljmp
fidivl
fisttpl
ss
jg
xor
adc
xor
pop
cmp
cltd
lcall
add
sbb
insb
je
cwtl
nop
into
jb
xor
insb
loopne
sbb
jo
lret
jae
imul
pusha
cmp
dec
fists
sti
repnz
push
repz
test
pop
adcb
addr16
sbb
adc
or
xor
sub
and
sbb
adc
inc
or
repz
ja
mov
sub
push
mov
adc
cmp
sti
jge
rcrb
xchg
movsb
repnz
int3
mov
lods
adc
pop
jp
pop
mov
orb
or
je
and
imul
iret
leave
mov
add
in
or
xor
dec
inc
cmp
rclb
jg
loope
int3
icebp
pop
out
fnsave
sub
out
testl
sarl
sub
jge
pop
movzwl
subb
sti
add
add
fadds
jnp
sub
jo
push
push
ss
cmp
or
nop
aad
push
cmp
dec
jns
ret
add
cmp
push
adc
adc
stc
aad
aad
sub
cmp
push
dec
cmc
add
lret
inc
adc
or
cmp
data16
or
lds
fmuls
loope
and
adc
add
decb
push
mov
inc
outsl
bound
jo
adc
test
adc
lods
jle
jb
xchg
xor
movzbl
adc
jecxz
loopne
call
icebp
out
adcl
daa
add
dec
jne
inc
and
mov
xchg
or
add
ja
adc
cmp
mov
fidivrs
mov
data16
adc
xchg
lret
nop
test
xchg
sarb
lcall
mov
or
fdivs
jl
movsb
mov
mov
sbb
cmp
and
adc
mov
dec
mov
rcll
jb
nop
xchg
jmp
rcrl
lret
inc
iret
xchg
xor
pushf
push
push
adc
cmpsl
adc
pop
shrl
sbb
dec
and
testb
cmp
aas
add
test
xchg
inc
movsb
popf
inc
and
aad
add
nop
es
ds
sbb
sbb
dec
lock
pop
lcall
clc
test
or
or
fstl
sub
dec
xchg
cmp
ljmp
dec
xor
add
jmp
pop
xor
mov
ret
cwtl
and
hlt
mov
cltd
imul
push
pop
rcrb
nop
mov
popa
pushf
adc
xchg
ljmp
incl
adc
rcrl
mov
incl
cmp
andl
push
mov
jmp
push
rcrb
clc
pop
lahf
nop
xchg
push
mov
push
mov
dec
push
cmp
shrb
pop
sub
push
adc
aaa
cmp
lcall
inc
mov
not
pop
dec
xor
sub
push
inc
jmp
jecxz
xchg
call
and
push
lea
xchg
push
popf
ds
movsb
iret
jmp
adc
or
rcrb
inc
adc
add
sub
lahf
cmp
xchg
out
inc
pushf
outsl
ret
cmp
sbb
pop
add
mov
nop
adc
jmp
lea
and
imul
test
inc
xor
add
xchg
sbb
les
push
gs
inc
or
adc
and
insb
pushf
int
sbb
mov
sbb
leave
push
je
aaa
jae
lds
sub
and
and
pop
push
adc
cmp
and
mov
cmp
adc
pop
stos
out
dec
les
shlb
mov
push
insb
je
jl
je
insl
mov
pusha
outsb
imul
xchg
mov
xchg
andb
into
into
imul
adc
lods
stos
dec
sub
ljmp
dec
mov
aas
js
fs
lahf
inc
mov
add
mov
ja
out
inc
fidivl
jmp
in
jmp
dec
test
pop
imul
mov
add
pop
cmp
jg
or
in
stc
jl
mov
inc
mov
hlt
add
and
inc
enter
and
fsubl
mov
sub
mov
lods
mov
inc
test
jns
mov
pop
mov
add
adc
adc
out
sbb
test
idivl
or
or
fsts
push
sbb
adcb
xor
movsb
inc
mov
in
hlt
mov
test
mov
xchg
pop
xor
add
lea
icebp
or
or
xchg
fisttpl
inc
ret
cmp
nop
int3
repnz
frstor
mov
cmp
cmp
or
and
mov
sbb
pop
cmp
cmp
push
ja
inc
test
test
ja
sub
les
jne
scas
inc
outsb
mov
xor
jbe
mov
mov
mov
hlt
movsl
and
mov
mov
popf
jae
mov
fdivr
jmp
xor
pop
rep
mov
dec
fs
pop
mov
pop
lret
xor
add
mov
add
popa
cmp
xchg
push
out
rcll
xchg
pop
mov
inc
xorl
sub
cmp
mov
sahf
movlps
pop
push
sahf
insb
add
jo
sub
or
call
lock
add
insb
mov
movq
or
xchg
sbb
das
adc
adc
mov
mov
push
sahf
dec
adc
lcall
scas
cli
movsb
mov
mov
cmpsb
xchg
adc
fistpl
pop
pop
scas
rcll
es
imull
mov
mov
pop
incl
jne
and
cwtl
rcll
jmp
mov
data16
scas
not
sub
or
add
cld
pop
and
subl
jg
lds
nop
inc
push
push
imul
pop
popf
push
hlt
nop
xor
adc
test
cmp
pop
adc
mov
fisttpll
lret
mov
sub
add
popf
add
xor
jne
lds
shlb
mov
xor
loop
dec
mov
or
and
xchg
testl
push
stc
and
out
js
lea
shlb
sub
lret
bound
or
fimull
and
cmp
incb
push
push
jle
loope
fs
scas
ss
fimuls
sub
dec
test
into
and
xchg
adc
mov
ficoml
pop
lds
mov
dec
je
dec
in
pop
sbb
cmp
xor
push
mov
es
test
inc
gs
xor
jl
int
push
inc
jns
add
dec
rorl
into
clc
dec
xchg
inc
popf
test
shl
sarl
repnz
aaa
cmp
add
psllq
cmp
sub
dec
movsb
in
cwtl
test
push
mov
das
out
pop
mov
lods
dec
sub
lock
and
cmpsb
dec
xchg
push
notl
sarb
mov
xchg
xor
jo
adc
int3
xchg
in
dec
in
ficoms
sbb
mov
test
fsubrs
pop
nop
dec
inc
lret
mov
xchg
adc
pop
inc
sbb
aam
push
in
shll
aas
test
mov
test
or
andl
or
mov
cmp
iret
push
xlat
lods
les
out
test
mov
push
or
movsb
mov
push
call
stc
mov
add
xor
push
push
nop
mov
rorb
ror
cmp
jg
in
sbb
xchg
sbb
into
jle
xor
jne
jmp
leave
dec
icebp
icebp
or
add
sub
sbb
mov
addb
cmpb
fdivrl
test
cmpl
jne
popf
dec
jo
sbb
xlat
and
or
or
leave
and
addl
lret
mov
push
or
adc
sbb
sbb
fstpt
aas
movsl
sbb
push
adc
add
mov
or
dec
or
adc
or
sub
adc
jbe
ds
outsb
ss
cmp
xor
je
mov
push
fadds
add
and
shll
daa
or
iret
cmp
orb
sbb
push
add
inc
sbb
or
push
mov
or
pop
mov
adc
sub
insl
xchg
adc
sar
pop
mov
sbb
mov
out
clc
add
pop
mov
in
lods
andb
dec
jne
adc
stos
mov
sub
adc
fnstenv
adc
popa
fists
adc
cmp
sub
mov
popf
popa
fists
sbb
mov
mov
jge
subl
std
sub
jg
fcmovnbe
sti
or
mov
lock
cwtl
enter
sti
or
dec
mov
mov
sbb
mov
aad
and
pop
rcrb
test
push
clc
and
pop
pop
je
cmc
aaa
clc
jmp
xchg
pusha
inc
cmc
icebp
xor
sub
mov
in
jb
cmp
ret
stc
and
fdivs
pop
mov
dec
fs
in
enter
sub
or
adc
add
xchg
mov
mov
mov
sbbl
add
scas
je
mov
add
sar
mov
xlat
cmp
jge
mov
add
cmp
test
out
mov
leave
dec
add
inc
or
or
push
pop
mov
inc
imul
sbb
push
jg
imul
sar
fldt
or
fisubs
into
scas
daa
push
jp
movsb
arpl
test
cmp
dec
mov
sbb
add
outsl
jge
sub
filds
cld
test
add
lock
dec
or
mov
into
and
mov
mov
cltd
inc
scas
lock
movsb
jge
shl
lcall
sqrtps
negb
pop
xor
ror
rcrl
sub
and
movzbl
aaa
outsl
jb
mov
add
inc
inc
dec
mov
insl
push
dec
je
enter
jo
clc
inc
test
sub
orl
adcb
push
mov
nop
inc
cmp
jge
cmc
shl
inc
xor
push
inc
enter
adc
pushf
pop
pop
or
push
pop
or
call
or
adc
cli
and
mov
inc
out
mov
sbb
push
pop
cmp
jl
jmp
out
xchg
pop
je
dec
mull
mov
xor
data16
push
dec
push
rclb
mov
mov
xor
pop
cmpsb
mov
jns
inc
adc
xchg
xor
pop
fcoml
mov
sub
in
stc
or
xchg
out
jo
cmp
sarl
mov
rcl
dec
dec
inc
cmpsb
es
add
dec
adc
mov
sbb
xor
sub
jmp
pop
cltd
sarb
mov
lret
fsubs
mov
ror
pop
ret
pop
lods
mov
test
jbe
mov
and
add
aad
pop
je
adc
out
sbb
cmp
pop
push
clc
mov
jbe
mov
ret
jae
sbb
call
sbb
jmp
lea
push
ljmp
sbb
int3
sub
fsub
addb
sub
sbb
or
test
or
xchg
dec
xorl
inc
imul
mov
lcall
gs
mov
push
rorb
test
xor
ds
add
adc
sub
adc
inc
inc
inc
push
dec
pop
jecxz
pop
shl
adc
pop
adc
mov
es
or
pop
inc
sbb
ret
sub
mov
adc
adc
subb
fiadds
push
push
cli
add
jne
mov
jmp
enter
dec
movzbl
mov
fstpl
adc
or
ds
enter
pop
mov
mov
jbe
cwtl
cmp
sti
outsl
sub
in
mov
lds
leave
pop
inc
mov
inc
test
pop
fs
in
mov
xchg
or
mov
sbb
std
loop
ja
add
pop
sti
and
sbb
mov
sub
div
adc
sar
and
dec
mov
or
in
adc
xor
mov
mov
mov
lcall
imul
push
add
or
imul
or
mov
sub
rorl
and
lods
stos
xchg
outsb
pop
add
add
cwtl
js
das
test
data16
sub
enter
fnstcw
dec
jno
aam
mov
fdiv
sub
dec
cmp
rorb
into
shr
mov
cltd
pop
mov
mov
inc
sti
enter
cltd
outsl
pop
scas
inc
xor
lcall
mov
xor
cmp
push
fisubrs
sub
lahf
adc
cmp
sbb
js
rclb
adc
mov
divb
lods
ljmp
sbb
mov
inc
lcall
jo
mov
sub
mov
mov
je
nop
movsl
mov
and
inc
jne
cld
ret
jl
or
sbb
enter
jne
pop
and
adc
mov
mov
and
pop
shr
or
add
sbb
mov
sbb
rolb
jne
lds
mov
sbb
je
adc
mov
mov
enter
xor
and
jl
mov
add
or
test
xchg
jp
mov
aaa
je
jle
sbb
cmpl
push
fsubrl
lods
jg
pop
jnp
jp
imul
sub
das
sbb
not
iret
pop
and
push
sub
cld
inc
cmpsb
sub
rcll
xor
mov
or
jmp
sbb
mov
scas
call
dec
xor
icebp
iret
testl
fistps
ret
cmp
je
pop
mov
adc
push
in
leave
dec
call
std
andb
lds
or
and
jmp
imul
sub
dec
aad
sbb
sub
pop
xor
dec
jne
push
adc
nop
lret
les
and
mov
cmp
push
lds
out
rorb
add
or
push
add
cld
loopne
inc
jb
or
aad
pop
and
push
adc
mov
rcrb
jmp
je
cmpsl
dec
mov
dec
inc
cli
test
sub
shrl
test
mov
mov
inc
and
mul
pop
pop
fxch
bound
xchg
push
push
lock
add
xchg
push
popa
push
mov
roll
mov
mov
rolb
cmp
or
pop
test
xor
rorb
add
or
cmc
lea
push
cmpb
fildll
push
adcl
jmp
dec
sbb
sbb
push
fistl
mov
test
push
ret
test
dec
and
ss
adc
mov
mov
sbbb
mov
imulb
test
sti
dec
notb
push
mov
inc
dec
and
outsl
inc
push
negl
test
jnp
jmp
test
sub
enter
inc
les
arpl
inc
pop
add
in
lret
dec
test
mov
dec
xchg
lret
dec
or
and
cmp
dec
in
add
jl
or
or
adc
adc
lea
stc
inc
sbb
and
pop
lock
push
insl
aam
cwtl
addr16
mov
aas
in
bnd
in
dec
imul
mov
mov
inc
mov
les
mov
cli
cmp
push
rorb
push
xor
mov
adc
add
icebp
sub
dec
stc
and
rorb
lea
xor
xchg
and
dec
clc
inc
cmp
mov
aas
adc
movsb
cltd
add
js
sub
or
inc
and
push
lea
push
and
xchg
push
adc
push
adc
and
xorl
clc
lock
pop
into
adcb
sub
mov
mov
push
sub
fnsave
mov
jl
push
loope
mov
aaa
test
inc
mov
inc
lods
cmpsl
cmc
mov
adc
imul
xchg
cli
and
ficompl
push
movsb
pop
imul
mov
or
clc
sahf
xor
test
enter
inc
mov
and
mov
push
sub
push
inc
push
mov
adc
fcmovu
dec
jg
sbbb
and
call
adc
pop
mov
add
repnz
aad
mov
push
addr16
js
test
cmpsb
mov
mov
in
mov
mov
dec
fdivr
pop
pushf
mov
mov
mov
mov
and
push
push
es
lea
es
push
sbb
inc
ljmp
push
repnz
loop
jmp
push
sub
inc
pop
out
push
fcmovnu
int
push
cmpsl
imul
repnz
jge
xchg
pop
push
fisubs
push
and
stos
cld
shll
mov
cli
and
icebp
cmp
inc
icebp
in
mov
mov
mov
testl
and
dec
add
inc
sti
mov
sub
and
sbb
dec
inc
popa
fisttpl
cmp
es
inc
ljmp
cmpl
fwait
sbb
fnstsw
es
inc
jno
imul
arpl
sbb
mov
add
push
jne
scas
mov
or
adc
addl
test
mov
movsb
in
je
adc
inc
das
ds
push
push
ljmp
in
fmull
je
aam
into
inc
and
mov
mov
or
jnp
test
pop
push
xor
mov
jp
xor
into
aas
in
sub
pop
add
in
mov
in
es
xlat
in
dec
sahf
and
dec
add
add
loopne
or
lock
or
clc
and
xchg
cld
adc
inc
jge
or
jg
movsl
xchg
cmp
out
dec
push
mov
xchg
lea
xor
lea
dec
add
mov
xor
dec
mov
or
inc
xor
sub
inc
hlt
adc
mov
adc
push
aaa
addl
inc
cmp
and
lods
mov
mov
dec
push
pop
clc
cld
rcrl
cmp
mov
xor
mov
or
adc
mov
xchg
mov
adc
sub
push
adc
adc
push
add
jo
nop
add
push
push
inc
or
add
push
or
pop
movsb
adc
inc
add
aas
xchg
scas
repz
mov
pop
aam
push
mov
sub
sub
aam
add
test
inc
jle
sbb
js
cmc
ficomps
clc
mov
and
adc
jne
push
xor
sub
xchg
cli
aas
and
imul
pop
push
test
lret
pop
or
add
aad
lock
fisubs
fbstp
push
xor
std
je
sbb
jb
arpl
sti
cmp
dec
sub
jg
push
fs
lock
inc
imul
enter
dec
test
adc
fdivrs
repnz
xchg
cmp
push
sub
shl
jg
inc
sub
das
movsl
call
add
mov
imul
shl
xor
aam
repz
mov
dec
cmpb
lcall
mov
into
pop
iret
add
hlt
xchg
mov
pop
paddusb
pop
pop
jnp
faddl
add
adc
pushf
pushf
adc
adc
addr16
sub
cwtl
sti
jecxz
psrld
lods
test
xchg
and
mov
ret
ds
sbb
mov
sub
sub
sbb
sub
cmp
out
outsl
test
mov
mov
mov
lock
and
adc
xchg
xor
push
adc
leave
inc
sti
and
sti
inc
cld
xorb
mov
outsb
lret
adc
mov
sbb
or
mov
or
cmp
push
cmpl
pop
inc
push
test
repz
test
inc
and
mov
orb
sbb
or
jmp
bound
shrl
sbb
cmp
addr16
add
scas
test
sub
push
mov
push
pusha
repnz
push
jle
aas
mov
adc
or
test
sbb
xlat
loop
add
xor
cld
loop
adc
mov
jp
popa
test
mov
lods
call
inc
orl
inc
cmp
jmp
adc
or
jl
js
je
jo
insb
mov
and
scas
cmp
gs
test
test
add
adc
xor
dec
sub
push
or
or
jb
mov
pop
mov
push
mov
enter
in
jbe
xchg
cmp
xor
rorb
stos
addb
push
add
xor
xchg
inc
call
pop
lock
aad
cmp
xor
adc
mov
sub
je
popa
adc
test
or
rcll
inc
gs
mov
pop
shrb
xor
pop
sti
pop
sbb
test
repnz
lcall
insb
xchg
lcall
mov
xor
cmp
out
js
cs
lahf
mov
mov
dec
mov
sub
dec
test
or
xchg
push
push
dec
mov
or
test
into
js
and
rolb
xchg
sub
fcoms
mov
cmc
dec
add
adc
mov
in
mov
pop
mov
push
mov
mov
push
or
mov
pop
fdivl
mov
xchg
add
loope
add
xchg
loopne
leave
fsubrl
stc
or
xor
loope
outsb
sbb
sub
mov
clc
mov
pushf
cs
inc
adc
xor
fstpl
in
inc
jl
sub
adc
push
and
or
mov
popf
lcall
mov
jge
aad
xlat
mov
or
dec
iret
adc
mov
cmp
clc
add
xchg
jns
xor
or
push
mov
in
jne
aas
xchg
fisttpl
jle
or
enter
jo
jmp
lods
adc
inc
sbb
push
jmp
inc
push
mov
adc
mov
push
aas
test
loop
test
addr16
scas
mov
test
call
scas
lret
loop
pushl
xchg
cli
ds
mov
and
mov
jge
mov
hlt
cmpsl
adc
adc
push
mov
jg
sub
xor
lods
jbe
insb
inc
roll
xchg
mov
dec
mov
push
jg
nop
mov
in
push
xorl
adc
nop
adc
mov
movsb
mov
pop
decb
jge
shrl
xchg
xor
loopne
adc
mov
inc
sub
fcoml
jb
out
dec
or
fildl
ret
pop
cwtl
mov
sbb
ss
xchg
shlb
dec
adc
dec
int3
dec
push
sub
lahf
dec
mov
lret
sub
in
sarl
adc
push
in
mov
xchg
add
sbb
nop
andb
push
mov
inc
pop
and
inc
push
dec
push
inc
add
js
mov
mov
pusha
cmp
push
mov
and
std
dec
sub
cmp
mov
mov
push
es
or
mov
andb
push
inc
popa
popa
fs
jo
mov
imul
xor
jbe
push
jl
push
xor
push
add
pop
mov
enter
pop
adc
sbb
daa
add
add
add
add
out
test
sub
dec
cmc
test
stos
mov
jl
push
stos
xor
mov
or
sub
dec
test
mov
sub
ss
mov
clc
dec
stos
fsubl
push
inc
lods
je
mov
pop
or
adc
scas
fdiv
nop
push
enter
int3
in
loopne
call
cmp
pop
stc
daa
fdivrl
pop
cmc
push
or
mov
scas
je
scas
sbb
pop
push
mov
popf
cmp
in
dec
sub
mov
aas
gs
push
aas
cs
jb
out
in
xchg
leave
cmp
in
je
push
leave
xchg
outsl
lock
mov
sub
shlb
dec
rolb
mov
pop
xchg
sub
xchg
push
push
push
das
mov
jle
cmpl
inc
adc
xorb
and
inc
fsubl
in
mov
sbb
add
es
pusha
mov
push
mov
hlt
jmp
movsb
dec
sub
insb
xchg
adcb
and
jmp
push
dec
adc
or
icebp
outsl
inc
push
push
cmpb
negb
loopne
sub
nop
mov
stos
fadds
and
dec
and
and
js
pop
adc
out
dec
hlt
jp
test
in
jge
fcomps
mov
xchg
or
sbb
inc
sahf
clc
aaa
xchg
les
das
jns
or
fdivrp
sahf
dec
sbbb
and
loop
jnp
adc
sub
stos
xadd
mov
add
mov
in
cmp
mov
or
imul
xchg
push
sub
pop
xor
es
add
mov
call
das
push
nop
sbb
add
addb
add
sahf
nop
scas
cmpsb
mov
add
jno
lods
xor
ficoms
inc
add
in
xlat
lock
adc
cmp
dec
mov
data16
jg
adc
inc
xchg
push
mov
loop
divl
cmp
dec
mov
iret
ret
push
push
aam
push
xchg
inc
leave
andb
movsb
clc
and
lock
push
inc
push
sub
fldt
jl
inc
cltd
idiv
jge
pop
xor
jmp
pop
mov
std
test
std
pop
ss
add
xor
idivb
in
aad
or
ss
es
ss
mov
cmp
inc
xlat
jb
sub
mov
inc
js
xchg
inc
push
xchg
out
push
mov
out
sti
pop
xor
dec
enter
jmp
xor
push
shrl
sub
in
bound
pushf
bound
ljmp
jle
mov
mov
das
jo
and
lock
mov
push
popf
jle
mov
jae
leave
and
mov
scas
inc
int3
push
and
popa
andb
and
cmp
xor
jne
cmpsb
inc
dec
or
jne
adc
and
adc
or
imul
cmpsl
pushf
adc
xchg
scas
lcall
add
mov
push
lcall
cmp
sarb
push
imul
pushf
sub
jmp
dec
enter
sbb
mov
lock
jg
sub
or
xchg
sahf
jb
pop
hlt
sub
push
push
enterw
test
inc
lock
jne
scas
cltd
xchg
jns
leave
clc
push
ljmpw
mov
je
xor
insl
scas
mov
push
xchg
dec
jmp
jbe
ret
movsb
std
aam
mov
or
xchg
push
inc
in
adcb
aad
dec
mov
std
cmpsl
ficoms
xchg
lock
mov
and
movl
push
jecxz
pop
mov
jne
nop
sub
mov
negl
nop
sbb
mov
int
sub
pop
in
loope
push
inc
jo
test
push
dec
icebp
enter
aam
xchg
cmp
sbb
mov
push
xchg
call
lret
mov
sub
mov
mov
xchg
jmp
std
pushl
jne
nop
mov
lret
leave
mov
xchg
dec
push
mov
mov
imul
and
mov
cmpsb
pop
and
insb
xchg
addr16
dec
sbb
rolb
jne
and
out
ss
and
test
and
loope
pop
push
imul
xchg
sub
cmp
pop
fwait
mov
mov
test
lea
push
sub
mov
push
pushf
out
test
cwtl
test
in
dec
mov
cwtl
and
stc
sub
arpl
and
pop
jb
add
jns
loop
insl
mov
repz
dec
cwtl
mov
pop
adc
dec
or
ds
add
dec
mov
or
sti
aaa
xchg
bound
push
push
cs
lret
cld
loop
cmpb
repz
push
jne
mov
into
cmpsb
lds
inc
les
stc
dec
test
dec
or
lea
data16
sub
rolb
or
adc
nop
mov
pop
and
out
and
add
inc
pop
xor
pusha
movzwl
iret
mov
sti
lahf
adc
flds
mov
and
insb
out
xchg
jne
xchg
mov
mov
fldt
out
or
in
js
rcr
lret
or
addb
jne
xchg
fwait
sub
add
dec
pop
adc
xor
lea
mov
aad
mov
adc
add
ret
lcall
fwait
aas
sbb
aam
aas
mov
push
hlt
adc
mov
lods
gs
das
cmpsb
inc
jns
dec
call
and
in
sub
mov
cmp
mov
dec
jmp
scas
push
mov
add
repz
or
pop
movsb
sub
cmp
clc
xlat
in
jmp
sub
jge
repnz
and
pop
dec
inc
sub
jl
cmp
inc
mov
mov
into
dec
mov
add
dec
ja
lret
adc
xor
sub
sub
and
push
xor
xchg
repnz
repz
inc
cmp
rol
push
xchg
mov
cmp
rorb
dec
and
add
mov
and
cmp
mov
mov
xor
mov
sbb
push
data16
adc
sbb
test
xor
pop
inc
sbb
or
fdivl
fs
inc
push
jle
ret
fs
mov
out
flds
or
inc
mov
jnp
cmp
push
and
xor
add
imul
jmp
and
mov
sahf
mov
sub
sub
adc
mov
cltd
test
add
and
push
adc
lods
cmc
shl
aam
dec
hlt
or
fsubl
imulb
pop
inc
rep
push
jne
addr16
adc
xchg
xor
dec
addr16
mov
ja
sahf
cli
inc
mov
ja
or
and
cmpl
shlb
dec
lock
test
cmp
xor
pop
scas
adc
cmpl
lea
lret
pop
adc
jo
pop
aas
sti
hlt
lret
aas
stos
enter
clc
sbb
sub
adc
mov
push
adc
jbe
iret
adc
sbb
unpckhps
cmpb
adc
or
test
popa
and
or
inc
shl
push
inc
cmp
xchg
push
and
push
call
repz
popf
dec
out
and
imul
ljmp
fs
mov
mov
out
sbb
lahf
mov
and
push
mov
xor
jo
enter
dec
add
nop
cmp
xchg
push
inc
inc
pop
pop
or
xor
add
sub
es
jmp
sar
es
test
xchg
cmp
and
jbe
dec
and
pop
popa
mov
icebp
dec
adc
mov
mov
push
adc
mov
in
sub
push
repnz
repz
lds
jl
sbb
sub
jmp
push
test
sub
or
cmp
sbb
dec
shrb
sub
push
lret
inc
or
test
xor
cmp
repnz
adc
and
jmp
arpl
orb
xor
or
dec
jb
scas
cltd
subb
cmp
dec
pop
mov
jbe
push
jmp
jle
mov
mov
dec
leave
pop
mov
xchg
mov
and
cmpsl
dec
add
mov
fldt
push
das
fnstenv
mov
inc
and
rcrb
cltd
or
sbb
lea
sbb
addr16
loope
adc
shll
pop
ffreep
or
in
or
jo
jle
mov
lock
mov
sbb
enter
xor
in
enter
add
outsl
mov
nop
pop
mov
mov
jl
xchg
mov
inc
adc
xor
mov
subl
inc
jl
inc
jge
mov
xchg
aad
stos
pop
pop
call
scas
mov
inc
pop
cmp
push
adc
inc
inc
and
into
mov
add
jne
mov
sub
iret
pop
inc
add
sub
inc
pushf
jmp
xor
adc
sub
nop
addr16
movsl
push
mov
inc
xor
xchg
les
mov
and
adc
mov
addps
inc
cmp
in
xchg
mov
imul
or
adc
or
pushf
or
dec
push
xchg
dec
pop
lret
out
jo
cmpsb
pop
mov
pop
test
cmpsl
popf
ja
mov
pop
inc
inc
cmpsb
adc
gs
or
push
sub
je
outsl
aad
sub
nop
jmp
add
mov
jae
lock
imul
sub
push
or
push
lret
dec
jne
pop
repz
sbb
nop
and
jns
es
xchg
and
or
mov
sarb
adc
dec
pop
aaa
mov
loopne
push
lods
push
shrb
inc
xchg
repnz
mov
lahf
jl
push
in
scas
mov
inc
loop
mov
sti
sbb
je
mov
test
jne
nop
mov
insl
aam
adc
jge
scas
jne
movsb
sbb
popa
sub
jg
ljmp
sub
sub
gs
xor
out
mov
mov
lcall
pop
adc
movsb
inc
adc
jo
adc
sbb
xchg
xor
ret
cmp
enter
lret
add
les
inc
dec
push
and
out
mov
lcall
clc
scas
xor
mov
daa
fsubs
mov
mov
movsl
ret
cmp
int3
cs
loope
sbb
into
pop
or
push
insb
cmpsl
mov
push
push
or
mov
mov
sub
push
test
sbb
push
hlt
jae
sti
mov
mov
adcl
dec
mov
adc
cmc
test
jecxz
inc
sub
pop
in
adcb
pushf
inc
dec
jno
fldt
test
mov
mov
dec
ret
inc
push
pop
inc
mov
mov
or
mov
and
jmp
mov
arpl
mov
mov
or
pop
mov
pop
movsl
test
js
test
inc
add
jno
insl
sbb
lods
push
les
pop
or
fs
sahf
sub
outsl
inc
inc
lahf
inc
dec
jae
outsl
adc
push
mov
inc
push
das
sub
cmp
xchg
adc
mov
stos
mov
je
xor
add
adc
fdivrl
add
adc
fstps
adc
and
loop
push
and
popf
jg
pop
xchg
ja
iret
push
or
dec
and
call
hlt
lea
or
fstpt
lret
ficoml
ljmp
inc
adc
loope
sub
or
adc
lods
lret
cmp
mov
dec
les
and
or
cmovg
push
or
lcall
into
sub
mov
subl
and
lea
fwait
jne
or
les
mov
sub
adc
push
mov
loop
push
and
push
dec
sbb
mov
test
inc
sbb
cmp
popa
mov
inc
and
jbe
push
adc
and
pop
arpl
and
and
jne
adc
test
xchg
loope
call
xor
test
sub
rcl
mov
or
stos
pop
cld
push
mov
hlt
mov
sbb
lock
in
repz
shlb
out
sarb
jle
jne
cmp
insb
dec
mov
xchg
jo
push
inc
test
mov
cmp
mov
cmp
shll
add
mov
mov
pop
pop
or
aam
adc
test
mov
leave
pop
lcall
pop
jnp
jno
imul
test
lahf
push
jle
fs
sub
push
push
inc
mov
xchg
jle
test
and
mov
sbb
xorb
push
push
je
outsl
adc
or
lret
xchg
mov
mov
cmp
mov
mov
std
lods
xlat
lcall
xchg
fstl
ss
stc
pop
mov
cmpsb
clc
lahf
hlt
imul
mov
in
push
movsb
and
inc
std
incl
or
xchg
inc
je
cmpsb
sbb
jg
adcb
mov
test
shll
fldcw
pop
ja
sbb
xor
push
add
out
adc
mov
pop
adc
clc
mov
shr
adcl
cmpsb
loope
hlt
xchg
inc
enter
lea
movsb
es
xor
test
dec
inc
jno
cs
por
push
xor
stos
sub
jae
push
vmovdqu
push
push
insl
les
xchg
push
push
push
xchg
je
pop
cmp
or
clc
loope
scas
int3
negb
hlt
or
test
rolb
sbb
scas
xor
push
addr16
hlt
lahf
bound
clc
add
inc
cmp
out
push
add
xchg
adc
push
leave
daa
push
sarb
jnp
sbb
repnz
test
aas
dec
xchg
mov
insb
popf
sub
test
push
das
mov
add
xor
fisubs
mov
adc
push
ret
movntps
fildll
pop
or
pop
dec
imul
je
dec
je
jp
clc
imul
push
daa
jno
ret
jo
push
and
cmp
pop
or
sbb
mov
mov
idiv
gs
mov
jge
mov
sbb
add
out
add
pop
inc
movsb
pushf
mov
inc
add
xor
fnstenv
lds
fnsave
mov
fdiv
movl
dec
adcl
mov
mov
ds
jne
aad
lea
movsl
jle
mov
jo
adc
test
and
mov
insl
clc
pop
das
in
or
mov
adc
int
push
mov
push
orb
cld
jne
pusha
sub
sbb
cmp
jne
or
lock
mov
jne
and
fs
loop
mov
jb
push
and
or
push
out
and
insl
hlt
and
xor
sbb
and
andl
data16
insb
je
roll
jmp
jae
movsl
or
push
mov
pop
pop
mov
push
sar
cmp
es
mov
pop
les
add
gs
in
clc
adc
mov
sbb
roll
movsl
stos
mov
add
bound
push
bnd
sub
inc
xchg
push
adc
jmp
inc
mov
popf
xor
inc
popf
repz
cmp
pop
and
jbe
rorl
rorb
dec
mov
xchg
sub
ss
js
inc
push
push
shr
push
add
cld
aad
or
mov
push
adc
push
mov
dec
and
fadd
inc
add
inc
test
sbb
xor
ret
push
dec
out
imul
xor
adc
xorb
dec
push
add
dec
movsb
stos
bnd
inc
mov
fsub
xchg
pop
lcall
ss
jb
popf
dec
stc
and
mov
test
mov
imull
xchg
ret
sub
repnz
dec
test
repnz
pushl
insb
pop
push
push
daa
scas
jae
fs
mov
xchg
add
adc
add
sbb
sahf
mov
xchg
sub
sbb
xchg
xor
hlt
pop
outsl
fucomp
rcll
push
inc
sub
inc
xchg
loop
shll
xor
add
cmp
push
push
sub
movsl
sub
dec
loopne
inc
mov
and
test
xor
add
and
add
add
mov
shl
jne
stos
out
shlb
lret
movsb
and
and
dec
push
movsl
push
sub
int
cmpsb
xor
push
movsb
ljmp
ljmp
mov
cmp
cmpsb
push
stc
push
sub
adc
xchg
jne
or
adc
sbbb
sbb
pop
call
jg
inc
in
das
ss
mov
xchg
pop
jp
icebp
subl
sbb
mov
lods
in
fcoms
push
test
xor
and
sub
and
mov
lea
and
pop
lds
push
inc
daa
xor
xor
pop
or
enter
mov
enter
push
mov
and
pop
je
mov
fidivrs
aas
loope
xor
nop
sub
add
arpl
fs
dec
jne
outsl
int3
pusha
test
test
mov
jmp
jbe
jno
and
std
test
and
mov
mov
sbb
or
inc
hlt
enter
or
xchg
sbb
test
sbb
add
inc
sbb
fdivrl
mov
loopne
jbe
in
jne
mov
hlt
mov
mov
aam
repz
imulb
in
sbb
mov
out
pop
mov
inc
xchg
mov
jmp
lret
lds
push
adc
sbb
leave
ret
gs
xchg
adc
cmp
push
jo
jg
dec
mov
add
les
pop
repz
subl
mov
and
or
mov
pop
or
cmp
test
gs
xor
leave
test
in
test
loope
les
enter
loopne
outsb
push
je
or
and
mov
pop
sahf
icebp
mov
xchg
popa
lret
jne
jg
scas
fs
ja
push
xchg
adc
inc
insb
sti
xor
fistpl
int3
mov
and
mov
jne
cmp
or
pop
hlt
and
mov
test
push
imul
nop
test
and
outsb
dec
scas
js
imul
and
push
xchg
nop
lock
insb
enter
adc
popa
insb
imul
rolb
mov
push
sub
pop
inc
adc
fs
inc
test
xchg
jo
dec
inc
fstpl
and
mov
int3
mov
mov
xchg
adc
sbb
stc
movsb
inc
mov
and
jne
jl
pusha
enter
or
cmp
pop
pop
enter
mov
call
cmp
notb
je
popa
dec
cmp
ret
ret
sbb
xchg
push
xor
and
mov
and
in
sbb
outsb
pop
rcll
rorb
xchg
or
jne
xchg
xchg
scas
enter
in
jo
jp
int3
lods
sub
popa
push
fs
push
fcomps
enter
pop
mov
dec
outsl
or
add
les
adc
les
aad
repnz
inc
negb
mov
inc
lds
push
push
insl
imul
aam
jo
fnstenv
repnz
mov
pusha
adc
out
cwtl
iret
xchg
loopne
loopne
in
js
mul
mov
jo
push
inc
mov
inc
xchg
push
les
lcall
inc
les
dec
inc
js
imul
xor
aas
xor
sahf
xchg
mov
loopne
sub
rclb
mov
cmp
sarb
push
inc
push
test
dec
adc
adc
pusha
fldenv
pop
out
pop
push
push
int3
push
dec
jle
dec
pop
or
xor
sub
das
jp
push
lock
mov
jo
xchg
leave
push
or
or
je
and
inc
or
lock
cmp
sbb
mov
and
xchg
test
in
jb
cmp
sbb
mov
and
mov
loopne
loope
loop
jecxz
in
in
inc
out
out
call
jb
cmp
sbb
mov
and
xchg
ror
shl
shlb
cmp
sbb
mov
and
xchg
fmul
ftst
fidivl
cmp
sbb
mov
and
xchg
ror
in
jb
cmp
sbb
mov
and
xchg
enter
lret
cmp
sbb
mov
and
xchg
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
jb
cmp
and
in
jb
cmp
and
in
jb
cmp
and
in
jb
cmp
and
in
jb
cmp
and
in
jb
cmp
and
lods
sub
push
int
inc
or
pop
int
and
mov
inc
push
mov
lret
xchg
xchg
mov
jbe
rcrl
push
push
xor
je
jne
mov
movsb
pop
out
es
mov
or
test
lea
xor
jae
dec
imul
pop
dec
pop
ret
aad
aad
mov
inc
adc
sbb
mov
pushl
cmp
sbb
dec
mov
aam
mov
into
outsb
aas
and
iret
aam
pop
pop
pushf
push
popf
cmp
xchg
in
in
jnp
and
or
pop
add
or
test
pusha
jmp
jmp
adc
enter
jl
xchg
pop
repnz
inc
or
or
or
and
or
pslld
ds
adc
adc
adc
and
adc
pop
repnz
negl
and
in
jl
xchg
sbb
pop
enter
pop
and
in
jl
xchg
and
daa
enter
pop
and
in
jl
xchg
sub
das
enter
pop
and
in
jl
xchg
xor
aaa
enter
pop
and
in
jl
xchg
cmp
aas
fsub
in
jl
xchg
inc
repnz
ds
inc
enter
pop
and
dec
jl
xchg
dec
repnz
ds
dec
enter
pop
and
push
jl
xchg
push
repnz
ds
push
enter
pop
and
pop
jl
xchg
pop
repnz
ds
pop
enter
pop
js
xchg
popa
repnz
inc
arpl
fs
gs
and
addr16
xchg
imul
enter
pop
and
outsl
js
add
inc
insb
gs
outsb
jne
jo
leave
arpl
mov
adc
cli
dec
pop
in
lret
sbb
test
lcall
push
cmc
insb
dec
adc
into
or
jmp
clc
mov
push
or
cli
dec
push
push
or
and
xor
xor
out
pop
lods
pop
push
xor
ljmp
outsl
daa
fimuls
xchg
and
test
or
pop
adc
xor
push
and
js
bound
orb
test
movsl
arpl
cmp
mov
sub
jo
scas
and
pop
xor
mov
mov
pop
jae
xor
or
inc
stc
dec
lock
insb
stos
sahf
xchg
or
sahf
push
push
adc
mov
adc
mov
mov
mov
jnp
stc
dec
sub
jae
andb
xchg
or
mov
push
test
sbb
jg
xor
sbb
call
and
jb
loope
lods
inc
push
aas
fs
sub
jno
les
push
out
push
test
popl
jbe
outsb
adc
rorl
mov
and
and
dec
gs
dec
inc
movsl
adc
push
and
mov
cmp
fmull
push
inc
push
inc
xor
xor
jb
popa
jno
cmc
jp
movsb
jae
stos
sbb
push
adc
dec
addr16
inc
or
js
dec
pop
mov
xlat
adc
xlat
sub
pop
dec
pop
inc
sbb
sbb
cmpsb
pop
and
push
inc
adc
cmpsb
sbb
inc
mov
test
sbb
hlt
lods
or
push
outsl
js
adc
push
sbb
or
cwtl
outsl
out
imul
gs
popf
xor
and
xchg
push
push
inc
or
adc
dec
sub
das
dec
mov
insl
addr16
push
push
sbb
outsl
rcrb
call
cwtl
and
nop
sahf
pop
je
inc
adc
inc
mov
insb
shrl
rcrb
adc
fisttpl
sbb
cmp
dec
ss
inc
fs
shl
sbb
push
movsl
push
and
fs
and
push
fsubl
fsubrs
leave
xlat
sbb
jne
sbb
push
decl
adc
orb
sub
or
jmp
xchg
and
enter
pushf
pop
lahf
fs
fldl
lea
add
test
lds
roll
jne
push
mov
push
cmpsb
pop
adc
and
gs
arpl
xor
leave
hlt
push
mov
das
adc
fs
inc
add
push
inc
or
lcall
adc
xor
mov
stos
stc
lock
inc
inc
mov
sahf
xchg
mov
inc
adc
or
icebp
pop
ja
insb
cmpsl
push
in
sub
ficoms
mov
sbb
test
fidivs
in
and
adc
shll
sar
hlt
or
lods
out
arpl
inc
push
out
ret
mov
lods
sub
call
movl
cmp
mov
xor
popf
mov
adc
data16
popa
jb
pop
dec
lret
inc
fimuls
cmpsl
mov
mov
test
rorb
mov
mov
enter
xchg
mov
fmuls
mov
and
jg
cmp
adc
or
repz
loopne
lods
adc
sub
insb
push
test
inc
insb
push
add
or
jecxz
movsl
ljmp
pusha
je
repnz
push
inc
xchg
inc
in
repnz
pushf
adc
mov
test
or
outsb
imul
jnp
jb
and
inc
push
clc
loope
insb
push
pop
or
outsb
shlb
decl
xchg
rcll
mov
mov
shll
mov
add
or
inc
jp
jge
jl
dec
jne
or
jecxz
fisttpl
out
mov
jl
mov
int3
lcall
adc
sti
loope
mov
mov
lock
pusha
sti
and
ljmp
mov
inc
push
cltd
inc
bound
loop
inc
push
dec
ds
pop
loop
jae
pop
mov
es
pop
jnp
into
mov
add
pop
scas
repz
movl
insb
pop
mov
dec
nop
cmp
mov
inc
jae
test
movsb
test
jo
pop
jecxz
lret
and
fs
aaa
or
push
test
lret
sbb
mov
and
out
sbbb
inc
call
push
movsl
adc
xor
aaa
xor
dec
sbb
cld
push
clc
std
fldenv
cmovs
out
mov
addb
imul
dec
cwtl
dec
in
scas
out
push
pop
adc
push
jnp
sub
jno
dec
and
jnp
pop
mov
dec
repnz
in
adc
and
pop
adc
jp
mov
mov
icebp
add
dec
xor
pop
push
js
xchg
dec
mov
dec
adcl
movsl
scas
adc
mov
testl
or
sti
lret
push
loopne
mov
icebp
mov
data16
xor
pusha
pop
sub
push
lds
js
mov
lret
lock
pop
adc
andb
gs
dec
pop
ja
js
repnz
mov
test
movsb
fs
scas
xor
mov
jmp
adc
das
push
ds
cwtl
js
jmp
pusha
and
addr16
out
sbb
inc
push
sub
gs
and
and
and
sub
cmp
popa
jne
repnz
in
add
movsl
xchg
push
fcoms
roll
xor
pop
or
jp
push
sbb
or
add
inc
jle
cmc
adc
sbb
cmp
shll
mov
out
or
add
mov
mov
pop
push
hlt
mov
lea
fstpl
sbb
cld
lods
jns
sub
adc
lock
hlt
lods
or
sbb
test
enter
mov
call
stos
sub
pop
test
mov
les
scas
int
outsb
call
sub
leave
pop
pop
or
clc
xchg
nop
scas
popf
daa
push
test
lcall
push
in
dec
rclb
leave
call
adc
call
lcall
adcl
add
sub
xor
sub
ficoms
dec
int3
testw
xor
adc
sbb
xchg
add
pushf
je
ret
fldenv
mov
fbstp
hlt
push
clc
repz
mov
jmp
pop
inc
in
enter
mov
icebp
mov
repnz
les
loopne
sub
xor
mov
fwait
jns
icebp
xor
push
inc
mov
jns
rclb
in
cwtl
or
test
orl
sar
loop
xchg
mov
out
ffreep
push
lods
into
inc
ljmp
adcb
je
sar
inc
lea
push
inc
int
inc
jne
daa
lea
data16
mov
adc
leave
sub
add
aad
test
std
cmp
mov
cmc
jl
in
jle
fiaddl
sub
adc
rorb
mov
adc
mov
or
mov
lea
cltd
je
js
ss
inc
les
inc
adc
and
mov
sbb
mov
sub
stos
leave
mov
shlb
int
jle
movsl
dec
inc
in
xchg
call
xchg
inc
call
pusha
pop
fdivrl
or
lods
je
mov
push
mov
push
movzwl
out
xchg
jae
mov
in
icebp
testb
xchg
inc
jno
mov
in
jle
dec
test
cli
push
jg
adc
adc
int3
xchg
fcomps
mov
adc
mov
insl
out
jg
cmp
push
push
mov
daa
push
mov
int
lock
pop
pushf
cmp
ss
push
dec
xchg
push
push
or
and
out
hlt
adc
add
mov
call
add
mov
pop
jmp
add
shll
push
dec
jmp
out
nop
mov
adc
push
add
add
pop
inc
add
andb
jmp
out
insb
lret
mov
sbbl
mov
and
jne
inc
int
mov
sub
jae
sub
inc
xor
push
push
xchg
aad
sub
repz
inc
adc
cld
gs
adc
out
popf
inc
or
arpl
lret
out
jmp
push
jmp
lods
xor
adc
cld
shll
sbb
out
fmull
out
fxch
sub
adc
aad
scas
mov
add
ss
and
adc
pop
shlb
xorl
add
dec
jne
popf
fists
dec
hlt
sti
popf
or
cld
cmp
cmpsb
lods
pop
pop
cld
decb
inc
jle
and
mov
in
pop
shl
mov
outsb
and
shr
lea
aad
les
inc
ja
fmull
jl
jmp
mov
loop
test
xlat
jnp
jmp
idivl
pop
or
mov
inc
add
sbb
and
std
test
cld
ds
xchg
hlt
fdivrp
roll
sbbb
insb
sbb
jne
push
inc
inc
push
daa
pop
jp
dec
jle
mov
scas
mov
xor
rcrb
popf
mov
or
or
daa
push
in
dec
push
push
sti
divb
sbb
fists
imul
pop
push
jno
dec
stos
call
and
test
and
mov
cs
sub
xchg
test
mov
adc
mov
sub
or
xchg
pop
jnp
adc
stos
mov
orb
iret
xor
mov
pusha
push
insb
xchg
and
and
sbb
jecxz
sti
hlt
mov
popf
repnz
int
sub
loop
popa
out
or
adc
jbe
or
imul
xchg
stos
inc
jmp
push
orl
movsb
cmp
sub
aad
in
xchg
jecxz
mov
jge
movsb
mov
test
and
fists
push
push
int3
movsb
imul
adc
push
jnp
gs
stos
repz
repz
jnp
mov
repnz
into
nop
sub
xchg
imul
sub
dec
inc
je
cli
lock
push
push
insb
stos
cmc
push
cli
cli
loopne
cmp
xor
push
xchg
test
or
push
test
mov
cmpsb
sub
or
inc
arpl
cwtl
adc
push
sbb
jmp
mov
mov
ja
mull
inc
clc
gs
hlt
xchg
fdiv
and
dec
sub
movsl
sbb
test
stc
in
das
mov
daa
and
mov
or
adc
jmp
out
fisubrl
mov
xor
aam
pop
cltd
hlt
popf
addr16
enter
cs
popa
into
xor
sub
jo
hlt
loope
cmc
sub
cltd
int3
or
imul
fmuls
cmc
jb
addr16
push
add
hlt
je
push
mov
add
fwait
mov
push
jns
loope
cmp
stos
nop
ljmp
xchg
imulb
jl
sti
xorb
pusha
xchg
mov
xchg
sahf
push
test
xchg
hlt
test
lods
pop
hlt
sub
lock
and
jno
sbb
movsl
rorb
repnz
jae
dec
dec
xchg
lret
mov
imul
cmp
cli
movsl
loope
xbegin
enter
mov
fwait
push
test
xor
ljmp
testb
dec
out
fisubs
add
sbb
pop
ja
pop
pop
imul
testl
xlat
dec
push
js
mov
dec
test
add
es
and
add
cmpl
inc
jl
and
xchg
sahf
scas
sub
push
or
mov
sub
jle
mov
test
mov
pop
mov
nop
or
sub
push
sbb
add
inc
mov
inc
fidivrl
test
jne
push
ljmp
push
push
stos
jecxz
adc
inc
dec
jne
std
out
bnd
jmp
stc
inc
mov
sub
jne
jbe
xchg
arpl
jmp
in
pushl
or
cmp
sti
fsubl
js
cli
jns
enter
sub
and
adc
mov
push
loop
fisttpl
fs
jae
mov
adc
dec
stos
push
inc
push
cmpl
add
cltd
mov
mov
cmp
call
enter
sub
sub
je
cli
jmp
cmp
pop
inc
push
pop
inc
jns
aas
lret
test
or
sbb
and
sub
mov
and
aam
pop
ret
dec
and
or
push
sub
mov
adc
jns
push
xor
mov
sbb
enter
dec
add
mov
ret
add
jmp
cmp
jne
inc
pop
xor
sbb
jmp
out
fstpl
test
out
or
jge
xor
xor
inc
dec
or
or
sbb
xor
pushf
mov
sbb
rcrb
sti
jnp
mov
and
adc
sbb
and
cmp
or
cs
lock
jp
adc
imul
clc
xor
filds
sahf
push
aad
clc
mov
call
or
mov
repz
mov
sbb
sarb
jg
cs
mov
ss
mov
hlt
jae
ficoms
xchg
cmp
or
dec
lcall
and
add
aam
and
cmp
and
lcall
iret
adc
jns
mov
sub
xor
adc
scas
out
xlat
lods
cmp
and
cltd
xor
iret
lea
xor
stos
mov
arpl
daa
adc
sbb
sbb
and
inc
cmp
mull
or
mov
out
jmp
or
adc
test
cli
sbb
adc
sub
push
sub
inc
in
in
lods
insb
mov
decb
fdivrs
xchg
push
cmp
das
ret
movl
jle
or
cmp
nop
and
pushf
icebp
insb
ljmp
lods
bnd
push
sub
cwtl
bound
xchg
or
push
jne
mov
fisubl
push
push
imul
dec
or
bound
popa
inc
jb
inc
jo
sbb
or
dec
nop
in
sbb
inc
adc
push
gs
test
je
dec
and
popa
inc
gs
pusha
mov
adc
scas
xlat
inc
std
xchg
or
sub
jno
ret
insl
popa
push
lds
pop
sbb
xchg
mov
bound
sti
in
mov
push
gs
popf
int3
out
add
or
push
aam
jne
loope
je
push
sbb
cmp
aaa
pop
push
insl
inc
js
sbb
nop
adc
add
jnp
fs
adc
daa
inc
pop
hlt
push
xor
or
adc
sbb
adc
lea
cmp
cltd
stos
popa
rclb
jle
lods
pop
jl
lods
movsl
jns
jle
pop
sub
mov
jmp
cli
jne
data16
out
and
or
mov
sub
xor
xchg
fadds
jl
cld
aad
int
clc
mov
pop
and
sub
mov
ja
cmpsb
and
inc
pop
jae
add
adc
mov
xchg
mov
testl
cwtl
adc
in
pop
dec
mov
adc
add
in
or
xlat
and
dec
leave
push
in
jne
sbb
pop
mov
je
or
mov
fcoml
and
inc
cmp
mov
add
hlt
test
jbe
xchg
cli
fcoms
pop
lock
in
fbstp
ja
mov
dec
call
dec
jle
adc
ljmp
cmp
jge
mov
lods
dec
fstl
adc
mov
and
mov
or
pop
adc
jmp
lcall
jnp
push
mov
and
in
cmp
lds
jne
shlb
xchg
push
inc
fadds
push
rolb
push
ret
rclb
or
sbb
ficomps
mov
or
push
hlt
adc
pop
stos
fisttps
or
push
movsl
jnp
stos
mov
dec
nop
adc
adc
or
and
enter
mov
sbb
fs
les
aas
hlt
ret
fwait
out
mov
push
dec
rol
fcoms
adc
inc
pusha
cmp
in
int
fiadds
mov
mov
pop
mov
xlat
pop
push
movsl
or
cmc
stc
mov
mov
jge
fld
aas
addr16
jmp
cmc
push
dec
aaa
push
stos
outsb
jmp
sarb
dec
push
cld
orl
or
lods
out
pop
add
aam
add
enter
or
fs
push
rorb
aam
xor
cmp
adc
add
pop
in
pop
pusha
push
les
les
adc
adc
dec
gs
hlt
lcall
dec
sub
cmp
sub
mov
add
aam
les
gs
test
pushf
dec
dec
and
dec
dec
cmp
push
jle
in
inc
and
fs
loope
jae
aad
sub
xchg
clc
adc
ret
divb
xor
rcrb
movsb
and
cld
lahf
pop
lcall
jl
in
xchg
xchg
rclb
call
popa
jl
or
and
daa
pop
adc
stos
cwtl
cmpsl
fsubs
inc
dec
fldl
or
or
push
pop
pop
inc
and
pop
aas
dec
into
stos
popf
mov
mov
in
clc
jne
lahf
jbe
adc
scas
mov
or
hlt
lahf
ds
pop
pop
jmp
mov
ljmp
inc
or
mov
jnp
mov
sbb
pop
test
xor
push
xor
jmp
lea
pop
adc
sbb
inc
syscall
jmp
mov
or
xor
mov
inc
enter
cltd
dec
ret
jmp
push
mov
lret
xor
push
lods
adc
sarl
pop
lcall
adc
js
int
gs
sub
sub
nop
dec
clc
mov
xchg
sbb
inc
fdivrs
ret
sub
pop
push
jbe
enter
mov
mov
cli
popa
outsl
popa
or
vmptrst
stos
or
or
or
int3
and
notb
shlb
push
push
xchg
pop
fsincos
sub
jne
hlt
or
xchg
outsb
dec
cld
addl
xor
data16
dec
mov
sbb
pop
shlb
add
cmp
movsl
in
out
idivb
aaa
iret
scas
icebp
int3
daa
aam
shlb
in
test
inc
repnz
int3
or
ja
or
lods
fistl
xchg
or
scas
mov
mov
iret
and
inc
mov
shr
adc
mov
fs
cli
pop
cwtl
mov
ss
js
flds
pop
js
xchg
dec
ret
jns
ljmp
inc
mov
xlat
adc
cmp
adc
jne
lock
movsb
into
and
insb
sub
out
mov
inc
mov
jne
inc
push
and
xlat
fs
mov
int
cltd
mov
and
in
enter
lret
testb
je
inc
push
mov
inc
or
mov
and
loopne
cmp
jg
or
mov
call
aaa
inc
mov
movsb
cmpsl
or
test
sbb
loope
or
lock
js
inc
loopne
clc
mov
imul
inc
jg
xlat
cmp
inc
push
inc
dec
dec
nop
loope
inc
push
jnp
inc
test
cmp
dec
test
cwtl
mov
lods
lock
push
adc
loopne
or
mov
adc
or
fsub
mov
fsub
in
or
sbbb
rdtsc
adc
xor
xor
loop
xor
cmp
mov
push
or
inc
inc
inc
pop
dec
inc
inc
push
push
sub
fs
sub
xchg
push
in
sbb
inc
adc
push
inc
push
test
cli
push
test
fdivr
mov
rcl
pop
or
sbb
loopne
shll
rol
mov
test
mov
or
inc
push
inc
decb
add
sbb
mov
pop
cld
jns
mov
add
mov
cmp
pushf
bound
sbb
add
or
fstl
mov
dec
rol
inc
and
fs
push
adc
push
call
out
adc
jno
out
jle
hlt
jno
xchg
in
jae
inc
jnp
das
mov
cld
jno
mov
subb
je
pop
add
or
filds
xchg
scas
nop
in
or
dec
add
dec
pop
stos
dec
mov
dec
xchg
lods
in
mov
testb
fwait
cmp
or
adc
cmp
dec
sub
jecxz
je
jb
push
scas
push
dec
sahf
stos
fisubrs
and
es
mov
sub
and
test
add
inc
pop
add
fidivs
adc
push
sbb
fmull
cmp
gs
shll
shll
daa
jae
addr16
push
and
fistl
in
xchg
les
adc
lcall
adc
insl
pushf
lods
push
loopne
pop
add
push
cmp
jle
out
jmp
test
mov
inc
stos
xchg
xor
xor
aas
out
dec
loopne
sub
test
xor
dec
jle
cmp
shlb
sub
inc
or
xor
and
js
fs
xor
inc
sbb
int
call
pop
rclb
dec
sub
fstp
and
pop
pop
ja
insb
adcb
inc
inc
cs
push
mov
lock
inc
test
dec
pop
cli
jl
std
inc
addl
adc
and
add
dec
jne
and
adc
iret
pop
shrl
or
adcb
lret
dec
add
cmp
stos
or
orb
add
push
cmp
jns
sub
xchg
hlt
pop
imul
shl
lods
int3
mulb
jmp
dec
cmp
in
mov
or
push
pop
jl
and
xor
mov
pusha
jo
xchg
pop
mov
adc
mov
lock
lock
outsl
add
cltd
cmp
neg
sar
jle
out
sbb
lahf
decb
xorb
pop
add
ret
int
or
inc
adc
out
loopne
jg
sub
adc
jle
mov
cmp
mov
aad
scas
repnz
mov
pop
pushf
clc
sub
adc
sbb
clc
pop
xchg
pop
mov
loope
enter
ds
cld
xor
push
jp
lock
addb
in
movsb
adc
sub
movsl
push
les
dec
sub
xor
cld
push
push
mov
dec
paddd
clc
xor
inc
xchg
pop
les
push
jmp
sbb
dec
pop
sbb
add
fisubrs
subb
adc
sti
dec
pop
int3
nop
inc
mov
sbbl
cwtd
push
lock
jnp
ds
dec
aam
push
scas
and
loope
adc
stos
dec
mov
dec
push
inc
cmpsb
adc
dec
push
sbb
mov
lcall
rolb
xor
mov
repnz
ds
scas
inc
mov
lods
mov
mov
mov
inc
dec
in
adc
in
mov
sbb
add
data16
and
imul
jae
xlat
add
jb
je
cltd
loope
pop
sbb
sbb
pop
sbb
jbe
push
cmp
cmp
ret
inc
loopne,pt
test
pushf
pop
cld
pop
dec
jl
xor
es
cld
cld
popa
insb
sbb
mov
sbb
rclb
out
xchg
imul
popf
and
push
pop
sbb
push
test
lds
movsb
sbb
or
cld
xchg
orb
add
adc
and
xor
pop
cmp
daa
push
aad
jae
dec
lcall
jns
xchg
arpl
xchg
pop
insb
enter
jne
push
inc
cmp
mov
outsb
insb
jns
push
stos
cmpsb
push
pop
mov
inc
add
popf
xchg
testb
je
sub
cmp
push
sub
xchg
in
add
push
xor
xor
or
push
xor
gs
cmp
sbb
mov
mov
mov
pusha
daa
jg
push
and
push
mov
adc
or
orl
js
sbb
roll
fdivs
scas
std
cmp
adc
or
pop
mov
add
mov
xchg
or
mov
sub
inc
pop
add
push
adc
sbb
add
or
xor
or
jae
scas
mov
cwtl
cmp
or
jo
out
and
sbb
ja
or
sbb
pop
cltd
shld
pop
lods
pop
sub
push
adc
mov
fistpll
or
jo
xchg
fmulp
or
outsl
inc
imul
pop
xor
xchg
inc
sub
test
or
pushf
imul
pop
call
push
dec
bound
lret
add
test
xchg
add
jbe
xchg
jns
cmpsb
ja
xchg
and
movsl
and
nop
cmp
dec
clc
push
lock
jp
shll
xor
ja
xchg
lcall
stos
xchg
inc
nop
jl
or
cmp
loop
inc
xchg
mov
xchg
repz
gs
lcall
dec
insl
push
xchg
cltd
add
enter
pusha
or
pop
mov
pop
mov
sbb
inc
or
call
fdivs
sbb
inc
push
call
popa
xor
mov
or
sub
mov
adc
pop
add
pop
ljmp
adc
add
xor
rcrl
jg
pop
pop
iret
imul
mov
adc
jo
pop
andb
push
add
mov
jmp
rorb
dec
mov
sbb
pop
add
int
mov
out
mov
movsl
imull
movsl
mull
lods
jge
xchg
bound
push
inc
or
pop
mov
cwtl
sub
push
inc
push
movsb
mov
fsubl
push
daa
push
je
gs
jecxz
movb
xchg
sub
cmpl
into
popa
les
adc
imul
out
cmp
sbb
sbb
inc
pop
nop
ret
add
daa
stos
and
push
pop
xchg
inc
lock
mov
dec
mul
jp
jns
bnd
push
nop
imul
mov
lea
sbb
incl
cmpl
nopl
divb
mov
inc
add
lret
cwtl
adc
sti
je
cmp
les
pop
sbbb
dec
out
inc
cmp
adc
cmp
cmp
gs
adc
mov
push
rcll
dec
adc
add
mov
dec
add
push
mov
stc
int3
sub
in
test
xor
or
sbb
mov
mov
xor
add
and
pusha
add
inc
nop
arpl
sbb
adc
xchg
or
adc
pop
das
or
and
push
in
and
mov
sbb
or
mov
sbb
inc
xor
nop
sub
shlb
js
adc
adc
enter
mov
xor
or
sbb
loopne
popa
or
mov
adc
xor
adc
adc
adc
outsb
les
mov
sbb
lods
fs
sbb
lods
jns
movsb
sbb
mov
mov
sub
cmp
mov
inc
sub
bound
sbb
dec
add
inc
xchg
daa
sub
dec
mov
popf
repz
pop
jns
pop
rcrl
and
enter
xlat
push
dec
add
mov
jmp
movsl
fsubrp
add
cli
dec
insb
dec
sub
inc
sub
ds
sbb
call
dec
push
inc
adc
cmp
add
xchg
dec
inc
in
and
ljmp
fs
and
sbb
rcrb
jne
jne
and
inc
and
jo
test
fs
sbb
ret
es
and
mov
jp
adc
out
daa
adc
sbb
or
lods
flds
jg
mov
and
orb
cld
xchg
les
ds
mov
dec
hlt
adc
adc
mov
fwait
daa
and
mov
mov
adc
add
testl
lods
push
push
lret
sbb
in
fdivl
jp
jl
aas
mov
adc
and
ds
push
out
pop
dec
aad
sub
rcll
xchg
xchg
movsb
aas
dec
lahf
stc
jo
and
inc
push
leave
push
test
jg
scas
or
and
xor
loop
lcall
lds
or
jmp
mov
test
jnp
call
adc
or
test
cmp
std
xor
jnp
adc
or
adc
out
leave
fnstsw
add
mov
sti
adc
and
mov
je
jbe
dec
mov
mov
iret
mov
push
hlt
dec
and
mov
xchg
add
test
push
les
mov
repnz
inc
jmp
jnp
cli
adc
je
ljmp
lods
xchg
xchg
clc
jno
mov
xchg
inc
loop
inc
sbb
rorb
lods
cmp
sarl
adc
adc
mov
adc
ss
repnz
xor
repz
pop
adc
inc
adc
jl
pop
cmpb
push
aad
dec
into
repz
mov
loopne
inc
and
add
push
mov
sbb
jae
sti
mov
and
scas
jno
sbb
xchg
jge
hlt
mov
fidivrl
icebp
cmp
jb
push
ret
orl
push
xor
pop
in
pop
mov
repnz
adc
pop
pop
add
cmp
jle
repnz
push
shrb
sub
test
mov
inc
mov
sub
stos
lods
pop
sub
mov
popa
jmp
inc
push
dec
sete
or
pop
cmpsl
xchg
shrl
pop
fs
jmp
mov
std
int3
jae
and
xor
and
or
fsubs
jmp
cld
dec
pushf
push
out
mov
xorb
adc
and
push
adc
or
dec
das
and
sbb
mov
leave
jmp
dec
pop
test
dec
in
dec
and
jo
scas
enter
outsb
mov
or
test
dec
and
mov
scas
mov
adc
sahf
mov
dec
xlat
les
adc
int
inc
faddp
dec
ret
mov
fdivs
xchg
ja
sbb
jge
sub
jne
sub
jg
dec
mov
xor
je
pop
jmp
dec
inc
jne
mov
dec
pop
jmp
sub
icebp
in
sub
and
in
jno
sbb
hlt
sub
xchg
rorb
into
add
mov
dec
lods
pop
jle
rorb
adc
mov
push
cmpsl
pop
push
inc
pusha
inc
mov
pop
or
shl
push
mov
push
js
inc
pop
and
cmp
sub
leave
adc
insb
loop
sub
xor
daa
pop
push
and
xchg
xor
jns
movsl
dec
add
fnstenv
jne
sub
xor
inc
lahf
inc
movsb
xchg
cmp
cmp
xor
std
dec
xchg
push
jp
es
cmpsl
mov
adc
jle
pop
adc
inc
lods
int3
data16
mov
enter
mov
mov
dec
movsb
pop
cmpsl
sbb
sbb
add
mov
stos
sub
dec
outsb
xor
or
mov
les
dec
push
pop
and
add
dec
push
inc
ds
or
mov
push
dec
dec
scas
or
cs
inc
inc
xor
insb
cmpsl
push
inc
in
cmc
pop
outsb
mov
pop
cs
sbb
add
mov
loopne
cmpw
in
loopne
inc
pop
dec
push
jge
mov
pop
jle
or
jae
and
inc
nop
inc
cmp
sub
gs
sub
ds
dec
les
mov
sarl
lods
add
and
push
dec
adc
push
push
imul
pop
pushf
pushf
inc
enter
pop
add
mov
out
lret
add
mov
xlat
mov
push
mov
add
loop
scas
jo
pop
dec
adc
pushf
dec
bound
push
and
notb
or
lods
insb
loop
xor
adc
or
sub
adc
pusha
xor
mov
sbb
clc
add
xor
clc
iret
frndint
repz
and
fcomps
mov
int3
scas
test
test
pop
cmp
lahf
xor
cmp
test
cld
lock
sti
mov
cmp
jl
inc
mov
jmp
js
pop
pop
inc
xor
adc
xor
fsubl
mov
sub
xchg
xchg
xor
hlt
xor
fnstsw
inc
sbb
test
cmp
icebp
adc
or
push
inc
inc
jnp
xchg
inc
xchg
add
adc
das
adc
adc
jecxz
or
test
adcl
add
xor
cmp
sbb
dec
xchg
cmp
adc
pop
inc
inc
fcoms
xor
daa
and
or
mov
mov
dec
add
sub
and
cmp
jbe
inc
push
and
push
jns
jae
mov
cmp
jmp
or
pop
cmp
xor
mov
ljmp
fcoml
xor
jbe
js
int
jmp
pusha
stc
shlb
in
fsub
jl
imul
jle
sbb
adc
jmp
adc
and
jne
out
sbb
cmp
cmp
cmp
aaa
mov
fisttpl
inc
sub
loope
mov
dec
scas
cmp
push
aaa
cmp
xchg
jecxz
shrb
clc
std
xor
jmp
inc
in
jmp
adc
or
mov
mov
xor
in
out
mov
xchg
out
divb
pop
test
sub
pop
mov
push
js
mov
imul
push
inc
dec
in
mov
je
daa
popf
push
adc
mov
mov
das
fdivs
sbb
pop
or
sbb
push
and
inc
adc
call
pop
fildll
jno
adc
xor
mov
dec
mov
mov
push
add
push
out
int
and
insb
inc
insb
dec
daa
jne
jno
fs
cs
mov
dec
pop
adc
cmp
pop
adc
roll
js
adc
aaa
inc
lods
fmul
inc
jle
pop
mov
or
sbb
test
pop
in
fisubs
scas
mov
mov
aaa
repz
cmp
stos
jae
das
icebp
xchg
gs
movsl
das
test
enter
cmp
push
test
ljmp
or
dec
mov
stos
xor
cmp
jne
push
push
addr16
jmp
inc
dec
jne
imul
fstpl
jne
ret
dec
xchg
sub
rclb
dec
out
fdivl
cmp
sbb
add
pop
je
sub
pushf
mov
sbb
out
mov
push
mov
sbb
test
cmp
jae
dec
outsl
test
or
xor
or
pop
dec
fs
and
jl
movsl
pop
pand
fisubs
adc
scas
lea
xor
push
popf
scas
mov
push
cmc
repz
stos
ret
mov
dec
or
cmp
sbb
insl
les
cmp
push
mov
inc
mov
pop
cmp
cmp
dec
push
movsb
mov
insb
cmpsb
or
and
or
mov
jb
push
nop
test
pop
adc
lret
cmp
ret
dec
push
adc
ret
cli
jmp
dec
push
and
movsl
repnz
mov
decl
xlat
inc
or
je
push
and
cmp
rol
into
call
sahf
push
inc
pop
outsb
jl
xchg
lods
repnz
pop
mov
push
dec
cmp
aaa
incb
mov
mov
lea
scas
outsl
int
push
into
sbb
je
xchg
iret
and
js
or
sub
or
shl
nop
jo
or
or
dec
aad
cmc
in
and
or
das
popf
or
or
sbb
or
xchg
lods
jbe
test
stos
dec
xlat
add
icebp
mov
aas
sub
or
mov
jle
add
xor
mov
or
nop
pushf
jmp
jno
mov
cmp
xchg
sub
pop
lea
js
leave
int3
sub
ret
mov
cmpps
lea
mov
sbb
inc
add
push
fdivs
subl
ds
and
movsb
xlat
pop
mov
jmp
adc
push
mov
sub
je
enter
or
xchg
jle
call
icebp
or
popa
mov
inc
movhlps
jns
repnz
jno
lock
push
add
adc
xchg
loopne
pop
ret
sbb
fmull
or
and
adc
repz
enter
sti
gs
sub
dec
stos
lret
inc
enter
inc
aam
pop
in
add
std
shr
movsb
or
add
repz
xor
xor
add
push
add
cmpl
movsb
test
push
mov
mov
push
xchg
fisubl
push
mov
xchg
outsl
lea
int3
inc
outsb
adc
test
imul
nop
cmp
cmp
daa
xchg
rorb
cmp
test
sbb
test
js
popa
inc
fildll
mov
test
jae
fwait
popf
mov
fs
sub
movsb
inc
push
test
inc
shlb
inc
mov
push
int3
cmp
jo
push
fs
mov
mov
aas
mov
sti
pushf
imul
mov
lret
pusha
test
cmpsl
xor
dec
dec
inc
enter
add
or
adc
iret
xchg
fidivrs
inc
cld
sbb
push
jmp
inc
lock
sub
sub
fs
inc
cmp
rolb
pop
cmp
add
cmp
pushf
pop
xor
fcompl
jbe
addb
ds
fidivs
jmp
or
adc
dec
sbb
jb
fwait
popa
fiaddl
xor
add
adc
bound
les
sub
test
cltd
mov
lds
adc
loop
xor
test
int3
adc
mov
enter
pop
nop
les
sbb
scas
pusha
nop
rolb
movb
or
mov
inc
mov
mov
add
movups
jmp
lret
xchg
hlt
aam
mov
mov
pop
lret
xor
jbe
ret
adc
hlt
fs
into
ja
adc
push
and
test
pfcmpge
lods
mov
add
jmp
jb
je
in
sub
popf
push
sub
sub
in
inc
cmp
inc
and
and
or
push
inc
sub
sub
xchg
dec
jns
or
lods
sti
nop
lds
mov
into
and
xor
jae
cmpsl
scas
popf
lea
nop
sub
inc
in
sub
cmp
mov
adc
cwtl
inc
je
pop
xor
jg
aas
sub
or
inc
and
jno
incb
xor
push
sbb
fs
mov
adc
repz
shr
inc
lret
inc
pop
sub
inc
aam
int3
mov
in
adc
mov
insb
fisubrl
or
daa
movsb
dec
int
pushf
add
or
pop
orl
dec
popa
addr16
mov
cmp
stc
cs
xchg
sub
xor
lahf
sbb
int3
js
xchg
bound
movsb
stc
inc
pop
jnp
xchg
imul
out
clts
and
aaa
cli
subl
sarb
mov
push
mov
and
dec
dec
push
sahf
push
syscall
dec
mov
xchg
jg
inc
das
inc
cwtl
test
fadds
scas
and
movsl
push
bound
rclb
dec
sbb
mov
push
add
stc
pop
add
ljmp
sub
cwtl
adc
leave
sar
dec
int3
cwtl
mov
push
rclb
jmp
mov
sbb
sbb
mov
movb
push
dec
out
rcr
mov
push
cmp
jle
mov
push
lock
dec
mov
and
and
sbb
popf
or
push
aaa
jmp
ds
shl
lock
sub
es
js
cmp
or
inc
jl
sub
jae
adc
push
dec
insb
push
shrb
js
jmp
push
sub
adc
jge
leave
ss
mov
adc
push
iret
stos
and
pop
push
imul
test
jb
or
and
sub
and
adc
xchg
test
push
icebp
scas
and
sub
inc
lods
sub
in
loop
xchg
aad
sbb
inc
push
fcoml
jne
mov
push
push
push
mov
pop
xlat
call
int
dec
adc
mov
test
push
push
mov
mov
inc
negl
xchg
dec
lods
pop
jmp
push
movsl
and
xchg
aaa
dec
mov
lods
inc
xlat
mov
inc
in
push
insl
call
dec
rolb
pusha
push
xchg
xchg
add
mov
mov
adc
stc
pusha
stc
aaa
les
and
inc
decl
ss
mov
dec
sbb
les
dec
in
mov
daa
push
jl
pop
adc
cltd
popa
imul
adc
adc
shlb
inc
cmpl
or
call
mov
mov
cs
aas
out
nop
xorb
mov
pop
les
in
test
and
dec
daa
cmp
leave
stos
je
inc
cmp
xor
push
xorb
cmc
sub
mov
mov
sahf
filds
cwtl
aad
pop
sahf
pop
jae
movsb
pop
mulb
adc
bound
jbe
and
mov
pop
cmp
push
and
inc
imul
testb
jo
outsb
adc
jo
fisubrl
cmc
inc
dec
test
lea
xor
mov
sbb
xor
clc
ss
arpl
jbe
jp
push
imul
bound
dec
add
rolb
ja
into
cs
pop
mov
dec
inc
test
dec
inc
jl
inc
mov
mov
jmp
dec
repz
xchg
jp
fsubs
jno
mov
and
pop
mov
sbb
addr16
imul
inc
sub
inc
fidivs
jle
xor
and
mov
pop
mov
add
inc
dec
popa
outsb
xchg
fidivs
cmp
pop
mov
inc
and
push
jl
mov
adc
add
push
jmp
push
loopne
test
rorb
enter
and
or
pop
sbb
adc
pop
or
inc
dec
push
mov
shr
inc
fsubrs
pop
sbb
fs
sbb
repz
mov
pop
xchg
inc
dec
sbb
or
jae
adc
or
into
flds
scas
sub
dec
xor
stc
sbb
and
add
pop
and
inc
and
jo
mov
mov
rcl
push
movsb
or
mov
mov
andl
cmp
xor
dec
arpl
es
lods
push
inc
sub
adcl
and
sbb
sbb
or
push
in
insb
hlt
addb
pop
and
or
dec
outsl
xchg
mov
fcmove
or
sub
mov
mov
es
jle
or
inc
mov
sub
scas
popa
inc
add
pop
test
popa
push
push
loop
sbb
fadd
push
jns
mov
pop
pop
push
jne
pop
mov
pop
enter
sbb
and
add
inc
popa
iret
das
scas
sbb
pop
push
popa
cmp
test
push
jp
adc
push
stos
das
je
ret
inc
mov
and
out
int
xor
in
mov
popf
je
loope
push
inc
sbb
stc
outsl
leave
nop
xor
mov
popf
pop
jle
idiv
pushw
sub
pop
mov
cmp
push
mov
fists
jnp
das
ljmp
cmp
mov
test
sub
jle
or
push
movsl
lods
and
push
pop
push
cmp
mov
mov
mov
xor
dec
mov
sub
test
push
inc
arpl
jnp
andl
mov
cmpsl
adcl
je
test
push
into
or
jmp
sbb
sbb
int
dec
cmp
push
testl
cmpsb
out
mov
insl
pop
dec
and
inc
adc
and
jne
rcll
clc
push
ds
pop
test
mov
cmpb
clc
pop
in
jl
sub
es
xchg
pop
mov
add
pop
mov
and
push
push
mov
js
sub
add
and
inc
ret
sbb
lcall
inc
lret
je
ret
int3
pop
clc
mov
sub
mov
push
sub
dec
out
mov
ds
test
test
sysenter
xchg
sar
jno
dec
pop
aas
js
mov
cwtl
jo
or
cmp
mov
insb
adc
xor
int3
sub
push
enter
dec
mov
test
push
push
sub
and
mov
cmpsb
je
mov
negb
or
mov
add
lret
jnp
je
sarl
adc
sub
pop
cmpb
fimuls
lea
pextrw
mov
sbb
sbb
rolb
subb
mov
lods
adc
add
jns
std
cmc
and
sbb
loop
sbb
es
and
out
adc
mov
ljmp
mov
pop
aam
into
aam
addr16
push
or
out
mov
pop
clc
mov
inc
inc
lahf
pusha
mov
mov
pop
sbb
and
mov
pop
lahf
lahf
adc
mov
pop
shll
push
out
sarb
sbb
cld
xor
mov
les
push
and
mov
mov
mov
in
or
inc
cli
sti
in
dec
add
stos
imul
call
jb
push
xchg
or
pop
movsb
dec
add
je
cmpl
fimull
repz
cltd
push
inc
int3
sar
fs
inc
mov
out
cld
rcl
cli
addb
imul
pop
test
mov
cmpl
push
rol
or
mov
imul
lret
dec
inc
sbb
push
in
out
dec
dec
in
enter
ss
mov
in
repnz
enter
mov
pop
push
repz
xchg
or
push
mov
aad
leave
mov
js
sub
and
fs
sub
dec
sbb
gs
ret
adc
cmp
mov
loopne
jle
cmp
pusha
dec
add
or
adcb
lea
pop
mov
cmovo
frstor
dec
es
and
adc
inc
in
dec
je
enter
dec
dec
add
jne
jmp
mov
pop
in
pushf
inc
pusha
ret
inc
push
lahf
jbe
jmp
je
adc
cmp
clc
sbb
leave
sub
adc
inc
loopne
popa
pop
inc
cltd
mov
pop
inc
loopne
repz
shrl
adc
push
test
out
pop
into
mov
or
or
xchg
loop
shrl
or
inc
xor
inc
fs
cltd
es
sub
lods
push
inc
inc
sbb
mov
push
xor
cmp
dec
iret
xor
dec
clc
jmp
icebp
add
fwait
mov
sub
dec
cmp
push
icebp
add
test
mov
mov
pop
arpl
xor
or
mov
test
pop
pop
xchg
enter
pop
dec
or
test
and
in
dec
mov
jmp
sbb
jle,pt
movb
cli
test
inc
adc
insb
ja
stos
mov
pop
icebp
mov
jmp
inc
cltd
mov
xchg
imull
pop
push
push
rorl
lret
bound
push
out
adc
sub
jnp
cmp
ja
xor
push
rorl
bound
mov
and
xor
cmc
pop
and
in
mov
mov
cmp
sbbb
pop
push
shlb
movsb
mov
mov
xchg
imul
dec
add
jl
mov
mov
sub
pusha
jno
ret
mov
fsubs
dec
dec
les
add
pop
lods
jle
sub
pop
add
ja
sbb
and
cmp
std
addb
push
push
and
fs
mov
adc
or
dec
jl
mov
inc
jo
mov
mov
out
sbb
mov
insb
js
adc
idivb
or
ds
dec
cwtl
mov
fmul
pop
imul
or
cld
loopne
mov
test
adc
stos
ret
or
das
in
mov
xchg
pop
lock
or
push
or
and
outsl
int
in
popa
packssdw
jle
inc
pop
loopne
mov
aam
sahf
adc
mov
xchg
fists
push
cs
imul
sti
prefetch
pop
call
cwtl
mov
mov
sbb
adc
enter
out
bound
lock
pop
mov
and
sbb
and
cwtl
and
into
pop
es
pop
hlt
xor
cld
inc
ds
lods
or
andb
aam
dec
lret
add
add
sub
cmpl
jne
or
cmp
jg
shl
jle
popf
popw
mov
cs
sbb
ss
je
push
pop
pop
test
test
pop
mov
push
mov
jns
and
mov
sbb
cmp
cmpb
leave
pop
sub
mov
pop
sbb
xchg
aam
or
shrl
les
notl
push
xchg
xor
mov
mov
pop
xor
in
je
mov
and
add
hlt
iret
jmp
mov
mov
cs
pop
mov
add
pop
leave
push
fldl
fistpl
cmp
cli
call
xchg
sub
dec
lock
das
jo
stos
je
scas
test
mov
imul
push
scas
jle
mov
dec
jns
mov
adc
lods
mov
add
xchg
and
jbe
mov
mov
cli
xchg
outsb
out
mov
adc
sti
mov
pop
jecxz
xchg
cli
pop
sub
out
pop
scas
or
push
jl
fcomps
mov
cmp
shl
jge
push
fsubr
mov
sub
ja
mov
sub
jbe
hlt
or
nop
test
push
push
push
dec
stos
mov
ret
xchg
dec
test
or
sub
push
push
lret
sub
jnp
or
inc
rcll
fmuls
enter
push
or
xchg
push
push
jne
xchg
sub
mov
mov
sahf
lods
insl
test
jmp
in
xchg
mov
fistps
xor
jbe
adc
aaa
dec
adc
mov
rclb
sub
inc
xor
icebp
push
clc
jnp
or
in
nop
mov
insl
hlt
inc
push
mov
and
call
js
push
or
das
adc
or
inc
pop
test
xchg
mov
xor
mov
loop
data16
js
mov
jnp
movsl
cwtl
fwait
sbb
lods
imul
xchg
cmp
aas
stc
cld
enter
hlt
mov
in
adc
jbe
inc
jle
hlt
stos
or
je
cltd
daa
lods
push
inc
xchg
or
sbb
ljmp
or
popa
mov
xor
pop
mov
insb
in
sub
mov
and
pop
push
in
sbb
xor
jmp
in
ret
ss
les
xor
popa
insb
and
into
in
popa
lds
pusha
out
jb
and
mov
das
iret
andb
and
add
clc
nop
xchg
gs
xor
xchg
or
lea
adc
sub
xor
fldenv
add
bound
in
xchg
mov
xchg
xor
decl
jle
xor
push
fistl
jl
inc
inc
pusha
cmp
jne
mov
daa
jmp
push
movsl
jp
pop
icebp
mov
lret
mov
xchg
sub
xor
test
jmp
sbb
mov
jg
or
in
inc
lea
mov
ret
add
pop
sbb
lock
aam
pop
jge
mov
mov
mov
jl
push
add
lods
lcall
aad
lea
cltd
xor
enter
pushf
fldcw
mov
push
push
fisubs
push
xlat
lds
dec
outsl
add
bound
outsl
inc
es
mov
addr16
out
sbb
or
imul
mov
adc
imul
pop
arpl
scas
arpl
adc
cmpsl
pop
ds
cmp
fdivl
sbb
sti
pop
sbb
add
repnz
leave
imul
lret
iret
xchg
das
aad
xchg
mov
push
movsb
pop
lea
push
inc
adc
test
leave
xor
xor
and
les
xor
stc
in
push
enter
loope
in
lods
mov
lods
test
mov
adc
insb
xor
add
jae
sbb
insb
inc
mov
sbb
movsl
lds
xchg
in
inc
dec
sub
mov
insl
jg
and
nop
and
stc
dec
subb
add
adc
jl
bound
fs
xlat
ret
addr16
jmp
jl
lret
testb
cwtl
adc
sub
jmp
sub
pop
pop
loope
insl
inc
or
or
inc
xor
sbb
cmpsl
inc
xlat
sbb
imul
pusha
mov
cmp
inc
mov
or
ja
outsl
js
jnp
jne
stc
cs
jnp
dec
xor
insb
testb
out
jb
pop
int3
daa
aam
mov
outsl
mov
xorl
xchg
mov
cmp
mov
inc
jp
mov
jb
xchg
js
adc
je
adc
sub
adc
pop
hlt
jae
lods
mov
jno
mov
popa
adc
and
xor
outsl
cli
jl
dec
mov
adc
cmpsb
int3
xchg
int3
adc
inc
jo
mov
pop
mov
adc
and
std
xor
outsb
repnz
push
xor
pop
xchg
adc
mov
sub
popa
pop
jo
in
push
sarb
adc
mov
jno
sub
mov
fbstp
cwtl
push
popa
arpl
mov
jg
ret
xchg
and
and
xor
test
enter
pop
lret
adcl
mov
jmp
push
and
pop
sub
in
inc
push
xchg
dec
or
insl
sub
inc
sbb
or
insl
lret
push
or
inc
jp
inc
mulb
mov
movsl
push
and
scas
jl
xchg
out
push
cmpsl
pop
ljmp
push
clc
out
and
dec
out
cwtl
inc
bound
or
popf
sti
rorl
sub
inc
xchg
jl
jbe
ljmp
ljmp
movb
sbb
das
cltd
js
adc
lea
xchg
cmpsb
aam
cltd
fdivrl
mov
nop
lods
or
insl
jne
mov
adc
movb
movsl
mov
bound
jae
adc
daa
test
in
fwait
xchg
jb
cmp
mov
dec
sub
jae
xor
add
jns
mov
and
add
outsb
fisttps
push
movsb
or
and
dec
std
sti
pop
insl
ljmp
mov
sub
loopne
bound
inc
adc
push
pusha
adc
pop
dec
or
mov
pop
adc
mov
jmp
push
sbb
iret
add
je
cmp
inc
cmp
push
inc
bound
inc
cmp
mov
jmp
add
or
mov
jge
mov
dec
int3
loope
or
adcl
addr16
stos
int
or
mov
or
sub
sbb
pop
dec
sarl
cmpsl
xor
sbb
dec
cmc
pop
movsb
xor
dec
push
pop
inc
scas
int3
cmp
fadd
and
lidtl
test
sub
leave
jne
cmp
insb
inc
shlb
adc
sub
test
cld
enter
sbb
mov
hlt
ljmp
dec
sbb
mov
adc
push
out
shlb
sbb
in
sbb
inc
test
jbe
and
inc
ja
test
adc
mov
dec
jne
decl
sbb
add
aad
nop
adc
test
cmpsl
and
push
push
ror
xchg
xor
sub
dec
movsb
pop
ja
dec
xor
jmp
adc
outsb
inc
mov
dec
push
pop
push
inc
adc
inc
and
lods
subl
aas
and
sub
lods
pop
push
sbb
loop
jne
stc
pop
mov
adc
cmp
std
pop
fdivrs
and
les
mov
cld
and
loopne
cmp
sub
mov
outsb
mov
stos
ret
and
lds
inc
vpsllq
add
mov
push
in
test
mov
lds
stos
hlt
scas
and
fwait
pusha
mov
ficoml
insb
dec
dec
stos
cs
dec
popa
xor
add
sahf
in
decb
inc
call
inc
fidivrl
cltd
adc
incl
jmp
je
jae
cmpb
jbe
ficompl
pushf
adc
jno
lods
lods
arpl
int
fxtract
sahf
push
dec
xchg
add
dec
push
and
and
and
dec
pop
push
xor
fsubrl
and
jle
pop
sub
fldlg2
xchg
cmpsl
rolb
sbb
dec
dec
pop
loop
ffreep
in
aad
dec
adc
inc
and
pop
add
mov
xchg
cmp
mov
cmp
jecxz
mov
jbe
call
repnz
xor
test
dec
sbb
push
adc
fs
outsb
adcb
movsb
xor
pop
out
and
dec
and
roll
mov
je
sti
popa
and
jge
test
jge
jl
sub
in
lahf
popa
and
jb
adcl
ds
dec
or
aad
xchg
outsb
dec
out
test
jge
das
jmp
std
dec
in
inc
retw
inc
push
mov
aas
call
mov
mov
cmc
lcall
xlat
in
in
imulb
cli
mov
loopne
out
or
jno
sbb
insb
jle
push
xchg
xor
sbb
inc
dec
je
je
cmpsb
mov
jmp
inc
dec
push
fsubrl
mov
popa
fiadds
mov
xchg
fadds
sbb
inc
outsw
sarb
pop
mov
add
scas
fdecstp
sbb
mov
pop
outsl
jg
inc
prefetch
mov
lret
push
sbbl
inc
xchg
cld
jno
mov
bound
push
push
xchg
cwtl
mov
sbb
or
and
lahf
push
push
pushf
daa
fstpl
mov
pushl
jns
or
dec
enter
adc
cmp
stos
xchg
add
insb
xchg
inc
insl
fs
gs
imul
cmp
insl
daa
xchg
sbb
sub
decl
les
pop
and
jmp
pop
inc
outsb
sub
test
fs
push
mov
cld
adcb
jg
mov
xchg
jmp
in
loope
sbb
sub
push
inc
push
xlat
jp
test
mov
jl
pop
nop
and
push
jae
pop
fnstcw
test
mov
inc
cld
xor
mov
push
jb
fidivs
fucom
mov
dec
mov
mov
imul
mov
add
popa
addr16
mov
subb
mov
in
decb
lods
jae
nop
js
movsl
sbb
daa
push
fucomp
xor
lds
cmpl
jo
sub
lods
mov
sub
mov
pop
mov
les
push
cmp
sub
dec
jne
push
movsb
push
and
cltd
dec
inc
jo
and
aas
cmp
jl
xchg
dec
ds
mov
pusha
lret
sbb
push
sub
test
jo
mov
push
pop
pop
mov
lret
inc
pop
cmp
dec
xchg
mov
dec
add
loopne
lret
add
push
and
adc
jle
xor
insb
addr16
in
xchg
sub
hlt
shlb
or
jl
fcmovu
or
icebp
pop
lods
adc
clc
cwtl
xchg
lret
push
mov
sbb
inc
inc
pop
rorl
inc
pop
or
push
jp
dec
inc
pop
sbb
pop
dec
sbb
jecxz
bound
adc
adcl
push
jno
dec
addr16
cmp
mov
dec
mov
inc
xor
clc
shrl
or
xchg
xchg
xchg
fwait
clc
jo
lea
je
lods
adc
add
insb
xchg
or
and
dec
pushf
cmpsl
xor
stos
push
adc
rorb
ljmp
in
dec
add
jns
out
pop
or
xor
dec
or
lods
in
push
or
addb
sbb
fsub
or
xchg
and
or
xchg
inc
sub
fcom
cmp
fsubs
mov
jmp
cld
xor
popf
pop
cmp
inc
and
lds
pop
jle,pn
ss
dec
pop
or
and
or
cmpsb
repnz
fisubs
or
add
stc
push
push
jne
cmpsl
adc
xchg
pop
dec
stc
or
adc
movsb
stos
mov
xchg
xlat
or
mov
mov
push
sub
inc
mov
dec
das
jns
push
adc
aam
jbe
inc
add
sahf
lea
pusha
insb
mov
pop
xchg
xor
and
adc
inc
jne
mov
enter
adc
lock
inc
xchg
daa
mov
std
or
sbb
fs
dec
loopne
and
adc
adc
jge
shl
inc
call
js
pop
outsl
loopne
js
lock
cmp
adc
das
pop
rorl
sub
inc
testl
push
adc
xchg
xchg
inc
jg
jnp
add
rorl
clc
pop
mov
cmpsb
movsb
cs
icebp
mov
xchg
or
lcall
test
aad
sti
push
shlb
add
adcb
nop
lods
dec
mov
imul
dec
pop
in
or
cld
and
pop
mov
jmp
ljmp
movsl
dec
stos
daa
mov
pusha
hlt
lahf
mov
test
inc
jle
sbb
mov
xchg
sbb
xchg
xorb
enter
xchg
js
mov
adc
lods
and
cmp
xor
xchg
sbb
lods
pusha
stc
jnp
cld
lret
rclb
movsl
cmpl
adc
stos
orl
mov
fistpl
or
adc
or
rcr
inc
or
je
pop
repnz
adc
mov
adc
ret
sbb
or
adc
add
mov
out
jl
xor
orl
push
jl
ret
push
hlt
cmp
lea
lret
fadds
sub
js
shrb
sbb
xchg
dec
loop
xchg
dec
fldt
fiadds
xchg
jg
sub
push
test
jmp
inc
xor
jge
and
movsb
inc
movb
scas
and
addr16
das
push
aad
xlat
sbbb
mov
jne
pop
imul
and
inc
push
out
out
fcoml
push
sbb
nop
shrl
dec
pusha
jl
push
mov
fistl
pop
enter
or
lock
xchg
sbb
push
jnp
repz
push
or
or
and
cmpl
and
push
call
in
jne
mov
lock
xchg
dec
ljmp
or
push
xchg
call
fisttpl
pop
cld
sub
sbb
inc
fcoms
inc
or
imul
or
loopne
dec
ljmp
inc
inc
dec
add
ljmp
in
aaa
and
xor
inc
sbb
aad
int3
dec
adc
xchg
mov
aam
bound
inc
call
push
inc
jo
push
sbb
dec
cmpsl
adcb
in
xor
or
mov
jle
jle
xor
cmp
test
jmp
cmp
idivb
test
cmp
bound
mov
or
pop
pop
jg
xchg
xchg
lds
testb
add
dec
mov
cmp
sti
jnp
fimull
fwait
cmp
or
movsl
jb
enter
push
leave
jns
std
adc
inc
sub
jnp
adc
sub
aam
jne
femms
push
sbb
popa
jbe
or
inc
mov
xchg
inc
or
jbe
movsb
push
sarb
movb
add
mov
cmpb
das
clc
dec
push
xchg
adc
negb
popf
xchg
mov
xchg
ror
test
inc
or
xchg
or
jmp
jge
xor
cltd
stc
inc
cwtl
xor
mov
dec
push
push
clc
addr16
ret
sbb
das
orb
sbb
inc
dec
dec
pusha
das
pop
jp
dec
imul
push
adc
stos
push
xchg
sub
rclb
and
mov
aaa
test
movsb
pop
lods
stos
mov
push
imul
adc
in
andl
add
push
push
cld
cmp
cmpsb
and
lods
clc
jl
mov
std
jg
fsubl
mov
inc
insb
inc
movb
cld
scas
pop
mov
out
cmpsb
jl
mov
sbb
xchg
push
popf
in
popa
sub
and
dec
add
test
jg
aaa
pushf
xchg
mov
ljmp
xlat
jp
and
fsubrl
xor
cmc
out
xchg
out
xchg
insb
repz
jne
icebp
ljmp
sbb
ljmp
pop
dec
cmp
call
mov
enter
mov
inc
xchg
sbb
pop
or
movsl
mov
and
pop
mov
inc
jae
pop
lea
movsb
jl
das
cmp
jns
or
mov
jmp
ja
js
into
inc
mov
xor
and
popf
cld
mov
xchg
inc
ret
xchg
lods
xchg
ror
nop
and
insb
jle
inc
lret
jo
je
insl
inc
xchg
rorb
loop
xlat
or
test
pusha
insb
jmp
push
inc
mov
xor
popa
mov
jae
sub
jno
cwtl
mov
daa
test
fsubr
jmp
xchg
add
fs
xor
in
test
dec
sub
inc
pushf
push
push
or
insb
mov
and
sbb
cmp
mov
xor
xchg
xchg
aaa
out
int
xor
jg
in
xchg
inc
scas
xor
daa
mov
mov
enter
jle,pn
cmp
jo
aas
cmpsl
dec
cmp
xor
fwait
nop
xchg
or
lea
pop
pop
out
sub
lea
xchg
and
sub
mov
jmp
fcoml
sarb
jge
ds
cltd
sub
lea
dec
in
mov
mov
mov
fidivl
cmp
ja
mov
shlb
cltd
mov
jmp
inc
out
xor
movsb
sub
popf
pop
fists
push
jae
test
daa
lmsw
dec
imul
mov
mov
and
sbb
in
outsl
andb
cmp
mov
sub
xor
xor
sbb
inc
icebp
nop
daa
in
fs
xor
inc
cmpsl
nopl
inc
jmp
icebp
xchg
pop
cmpsb
mov
lret
fdivl
aad
inc
xor
jnp
lret
in
mov
fwait
xchg
xor
push
leave
lcall
fistps
jl
leave
mov
inc
push
imul
and
aas
mov
ljmp
cmpsb
cmp
dec
test
pushf
sub
nop
add
or
mov
add
xchg
dec
rcrl
dec
loop
cmp
xor
push
pop
sbb
aam
mov
insl
lret
cltd
inc
dec
mov
jge
daa
mov
fwait
jne
pop
and
jbe
mov
jnp
cmp
sbb
sub
push
mov
pop
out
call
in
xor
push
xchg
gs
pop
hlt
inc
dec
lahf
adc
lcall
inc
lds
xor
imul
outsl
fmuls
xchg
hlt
pop
gs
mov
adc
inc
loopne
mov
or
push
xchg
in
cs
testb
icebp
dec
js
adcl
add
jmp
xchg
bound
outsl
lea
fdivl
nop
adc
in
into
test
add
mov
xchg
pop
hlt
sti
leave
nop
or
imul
adc
sti
test
mov
dec
or
adc
mov
and
inc
or
mov
cmp
mov
pop
sub
add
push
or
mov
jmp
out
mov
xchg
sbb
sbb
subb
or
pop
xchg
adc
orl
sbb
sahf
shrb
les
sub
jp
mov
and
cs
movd
inc
dec
add
push
fldenv
daa
and
adc
fldenv
aad
cmpsl
arpl
test
es
push
adc
in
int3
and
lods
sub
js
adc
mov
inc
pop
jo
lods
and
int
pop
and
add
sub
push
leave
sbb
jg
rcrl
pop
and
addr16
xor
dec
add
adc
cmpsl
dec
into
and
or
inc
pop
and
and
xor
out
or
adc
jb
pop
or
jmp
sub
mov
popa
sbb
aam
jl
inc
sbb
pop
sbb
je
xchg
jge
mov
movsl
mov
loop
sub
jge
push
jb
int
nop
xor
call
stos
pop
je
ficoms
jmp
sbb
or
das
test
sub
lret
popl
mov
push
adc
mov
subl
push
jg
mov
mov
adc
ffreep
mov
or
imul
inc
mov
add
fucomp
call
sub
fcoml
lret
hlt
fsubrl
lcall
lods
pop
je
adc
sbb
leave
or
loopne
inc
movsb
in
add
push
or
add
pop
das
and
in
js
gs
or
cmp
or
stos
add
pop
mov
mov
imul
xchg
enter
mov
fwait
push
push
adc
test
jecxz,pt
xor
jo
or
movsl
pop
hlt
in
jb
cmp
dec
or
mov
jnp
inc
stos
repnz
adc
cmp
xor
adc
adc
add
jl
pop
inc
scas
push
dec
stos
enter
cmp
loop
sub
ja
push
enter
das
decb
lods
fidivs
jns
rcll
or
repnz
mov
adc
mov
jmp
cmp
fsubs
jl
loope
cs
mov
or
mov
mov
cld
cmp
out
js
push
in
push
dec
xor
add
or
stos
movsl
lea
mov
ljmp
and
push
push
or
nop
pop
enter
pushf
test
cmc
jp
mov
outsl
stos
push
lcall
inc
jmp
aas
notl
inc
jg
xchg
nop
repz
jmp
divl
dec
leave
cwtl
push
movsl
mov
sub
push
lahf
insb
ret
jmp
das
xchg
xchg
push
adc
cmpsb
pop
fistpll
dec
inc
pop
push
xor
mov
aam
fdivl
jmp
adc
mov
lds
lret
test
mov
xchg
stos
mov
and
jbe
mov
nop
and
or
and
sbb
inc
cmp
sbb
dec
pop
pop
or
pop
cmpsl
enter
adc
jle
xchg
out
dec
in
inc
das
outsb
arpl
dec
jb
mov
inc
pushf
fmull
adc
push
xchg
adc
test
gs
adc
mov
jle
inc
mov
int
or
ja
adc
cs
add
dec
push
outsl
leave
les
xchg
cli
sbb
push
adc
je
ret
mov
sub
lret
push
into
cmpsl
jp
cwtl
mov
enter
addr16
pop
test
add
and
xchg
xor
pop
rorb
aas
and
inc
push
cmpsl
mov
mov
xor
pushf
popa
cmp
je
xor
and
mov
cli
pop
mov
push
add
loop
cmpsb
xor
or
ret
movsb
sahf
sub
add
or
testl
popa
jb
icebp
sbb
cmp
push
fs
push
xchg
mov
add
cmp
lock
adc
mov
xor
mov
movsb
nop
movsb
addb
or
or
scas
mov
out
popa
arpl
movb
inc
dec
jne
xchg
fmul
leave
xlat
movsb
add
mov
decl
sti
or
xlat
xchg
not
aam
mov
daa
pop
es
sub
xor
and
cmp
faddl
pusha
ss
jbe
sarb
int
or
clc
jbe
imul
or
sti
jl
in
mov
inc
or
test
cmpsb
mov
ret
repnz
pop
lcall
testl
ss
and
popf
orb
dec
cmp
shlb
cmp
xchg
and
decb
jmp
sub
cmp
mov
or
test
cmc
mov
dec
inc
mov
add
xchg
popf
jnp
arpl
pop
cli
dec
lea
or
push
and
adc
mov
dec
mov
jbe
sub
push
pop
fisubs
aam
push
dec
jnp
shlb
push
pop
adc
shl
xlat
fcmovnbe
pop
std
adc
pop
sbb
or
in
incl
pop
sbb
jne
inc
decb
cmpb
adc
or
out
cmp
in
icebp
cmp
xlat
test
sub
cmp
adc
das
xor
movb
and
ljmp
cmp
jge
ret
notb
lea
pop
push
inc
cmp
in
jmp
inc
aad
pop
or
xchg
pop
push
into
dec
adc
xor
repz
cmpsl
mov
sub
mov
inc
and
jl
or
inc
sub
sbb
mov
sti
ret
andb
xchg
int
sbb
adc
lock
inc
push
popa
mov
sbb
adc
inc
jg
cmp
and
adc
add
std
add
and
roll
nop
adc
sbb
cmpsl
mov
sub
jns
push
xchg
mov
ds
frstor
add
and
iret
jle
pusha
sbb
mov
lahf
push
adc
xchg
fisubs
xor
cmp
adc
mov
clc
dec
cmp
cmc
enter
and
sbb
dec
and
cmp
cmp
mov
add
mov
mov
test
xchg
push
or
mov
mov
and
mov
pop
xchg
rclb
mov
and
inc
mov
mov
imul
xchg
nop
orb
pop
stos
xchg
je
or
jns
xchg
inc
pop
inc
inc
inc
inc
lock
inc
dec
dec
add
dec
dec
dec
dec
push
push
or
push
push
add
xor
pop
data16
imul
insl
outsb
outsl
jo
jb
add
ja
jns
xor
xor
xor
cmp
fisttpll
mov
adc
add
adc
mov
mov
jne
mov
xor
mov
jl
inc
mov
adc
je
rorb
mov
fwait
bound
pushf
adc
and
push
jg
adc
mov
shll
adc
mov
fmull
test
cmp
jns
and
pushf
and
mov
adc
fcomip
mov
sbb
jl
mov
dec
sbb
mov
push
adc
push
lods
pusha
or
mov
add
inc
jns
gs
into
pop
push
lret
adc
mov
pop
lock
push
je
imul
sbb
xchg
popf
sub
in
test
daa
movsb
mov
xor
dec
inc
mov
mov
jbe
cmpsb
push
ljmp
add
adc
pop
fildll
daa
ja
xor
mov
pop
pop
push
sub
push
or
mov
or
es
test
pusha
lea
jnp
fisubrs
es
das
inc
mov
cmpsb
add
insb
shlb
add
clc
sub
shl
fsubr
sub
mov
and
mov
mov
pop
jmp
cmp
imul
fs
popl
mov
and
add
jg
jmp
sub
jno
sub
int3
jbe
cmpl
and
int
xor
fs
and
mov
test
mov
xor
jae
insb
cmp
das
sbb
push
xchg
jmp
stos
ss
xor
and
push
push
dec
xor
aas
push
adc
insb
xchg
add
xor
inc
lods
data16
call
pop
shll
mov
ret
lock
ljmp
push
adc
inc
sub
jne
aam
shr
mov
push
insb
clc
pop
test
iret
adcb
mov
in
xchg
or
les
cmc
cwtl
in
and
shrl
inc
or
inc
push
mov
rcrb
les
or
or
push
pop
add
push
imul
adc
addl
subl
mov
pop
adc
movsb
cltd
sbb
pop
adc
cltd
or
hlt
cltd
mov
jno
xchg
leave
pop
xorb
mov
insb
enter
gs
mov
aas
xchg
and
pop
mov
inc
or
push
and
pop
sub
xchg
fisttpl
inc
mov
icebp
lea
sar
test
movsl
mov
repnz
sub
xor
in
and
or
pop
popf
xlat
jp
lock
sub
add
jne
adc
scas
xchg
cmc
les
mov
jmp
mov
sbb
stos
fldenv
pop
mov
mov
pop
sub
jnp
mov
dec
into
cld
push
inc
call
jmp
xor
dec
add
jae
cmpsb
inc
push
das
inc
sbb
and
adc
pop
out
push
lods
inc
jmp
mov
and
fsubs
je,pt
or
lcall
xchg
and
inc
mov
iret
xor
mov
lock
cld
mov
mov
adc
cmp
add
mov
pop
pop
lea
push
cwtl
cmp
jl
cmp
ljmp
or
enter
adc
push
inc
popf
push
clc
pop
adc
mov
pop
mov
loope
xchg
out
mov
hlt
lret
xor
stc
mov
js
mov
popl
mov
out
in
loopne
jmp
lods
repnz
mov
aas
jp
imul
aam
aam
rclb
or
mov
ljmp
adc
lock
fistpll
daa
pop
adc
jle
enter
jecxz
shll
and
fbld
das
or
pop
pop
mov
add
sarb
mov
mov
cmp
cmp
lods
mov
shrl
jl
mov
in
adc
scas
jl
ds
daa
cmp
adc
mov
outsb
cld
mov
push
clc
call
mov
xor
sti
and
hlt
cli
fucom
sbb
hlt
xchg
xor
or
sti
fs
xorb
pushf
and
or
pusha
adc
sbb
jp
sti
fwait
leave
test
mov
fcmovnbe
je
popf
repz
dec
pop
sbb
push
mov
test
mov
rolb
in
jmp
sub
push
and
scas
and
push
fwait
push
out
jne
ret
mov
repz
mov
ja
add
adc
add
mov
jb
sti
rolb
or
mov
fldcw
mov
xchg
orb
rcrb
pop
fisttps
mov
sub
scas
inc
cmc
jecxz
std
pop
scas
jb
adc
shr
dec
push
mov
imul
out
mov
push
dec
adc
scas
test
and
test
mov
mov
mov
inc
not
in
es
lahf
fmul
lea
sub
push
leave
clc
aad
scas
push
je
scas
dec
mov
jbe
icebp
pop
dec
lds
dec
lock
pop
push
xor
fistps
pop
sub
push
add
pop
jne
jbe
daa
std
xchg
sarb
pushl
lods
and
push
add
jne
negl
leave
out
icebp
xor
clc
or
fcos
dec
push
in
push
inc
inc
jmp
pop
pushf
pop
je
pushf
test
mov
iret
jp
daa
aam
push
daa
and
add
inc
fmul
and
cli
fcmovnu
xchg
imul
notl
in
push
lock
out
or
int3
sub
sub
shrb
xor
mov
sti
jns
aas
cmpsb
add
jb
hlt
push
mov
mov
sbb
mov
movsl
adc
test
xchg
xchg
imul
shl
xor
xor
push
int3
xor
jecxz
sub
cld
mov
mov
and
adc
cld
in
pop
imul
push
test
or
loopne
xor
xchg
sbb
sbb
jne
sbb
and
cld
enter
and
leave
fs
mov
mov
lret
enter
push
mov
adc
pop
dec
gs
jae
popa
jo
rclb
push
test
sub
and
in
cmp
fadd
sbb
js
testb
aas
bound
add
js
sub
cmp
cmp
stc
push
mov
xor
xor
nop
xchg
mov
xor
or
nop
push
or
mov
and
inc
shlb
roll
lods
or
jo
pop
adc
cmp
push
lds
push
adc
xor
test
jmp
xchg
pop
sbb
and
movsl
int
das
jg
pop
lods
test
scas
cmp
imul
hlt
or
aad
les
inc
or
pop
cmp
jne
push
and
adc
shll
stos
mov
xchg
mov
xchg
lahf
fdivs
mov
mov
mov
sbb
in
sub
fld
jl
mov
movsb
imul
mov
int3
xchg
push
fwait
and
movsl
stc
mov
pop
lcall
leave
mov
pop
mov
push
cli
sub
mov
pop
inc
add
in
jmp
jmp
movsl
decl
clc
push
mov
adc
in
aad
push
adc
leave
push
xlat
push
cmpsl
in
mov
cmp
or
jl
lds
push
xchg
testl
push
hlt
xchg
shlb
sub
jno
pop
enter
call
rorb
hlt
cmp
leave
mov
mov
sbb
sub
out
movsb
out
pop
sub
lea
out
xor
dec
xor
outsb
icebp
sbb
push
inc
add
daa
cmp
inc
adc
xchg
sub
or
pusha
inc
inc
cmp
mov
and
lock
xchg
mov
leave
add
mov
lret
shrb
test
jmp
sub
adc
sbb
insl
and
adc
jge
outsl
test
adc
ss
mov
repnz
push
ret
and
mov
iret
adc
outsb
mov
adc
adc
mov
adc
aad
inc
sbb
inc
ret
jne
int
mov
sub
pop
imull
lret
push
fcmovbe
lahf
jl
shlb
push
adc
jl
xchg
jae
mov
or
jo
loope
adc
push
mov
push
adc
jmp
or
sbb
pop
pop
xchg
les
aas
sbb
adc
std
dec
pop
and
sub
or
dec
adc
dec
das
ror
jo
loopne
gs
xor
lock
repnz
cmpsb
dec
cmp
pop
xchg
inc
ljmp
test
ret
lea
movsb
mov
xor
push
inc
dec
addb
dec
push
ljmp
inc
dec
dec
xchg
push
inc
inc
push
imul
int
movsl
cmc
adc
ret
bound
push
mov
add
or
test
rorb
movsl
insl
xchg
call
inc
clc
push
sbb
or
xchg
push
das
je
testl
xor
mov
xchg
mov
cmp
sub
mov
das
xor
dec
pushf
xchg
sbb
out
push
fcompl
lahf
jne
scas
pop
jne
mov
jne
and
dec
xor
mov
stc
jge
jl
sbb
cli
mov
daa
cmp
xchg
xor
or
pop
dec
les
and
cmpsl
push
bound
or
inc
mov
jge
scas
push
jnp
std
in
int3
sub
das
inc
dec
fstps
lods
fdivl
daa
das
into
dec
mov
aad
daa
mov
jno
rcl
outsl
cmp
cmp
mov
mov
loopne
mov
push
xor
cmpsb
adc
test
scas
jbe
iret
xchg
push
aaa
roll
sub
outsl
pushf
add
fmuls
xor
sbb
xor
das
hlt
dec
jb
mov
imul
or
dec
mov
insb
jnp
jbe
je
push
out
les
rolb
pusha
sub
cmpl
xor
and
test
inc
aaa
fisttpl
cmc
and
cwtl
dec
lahf
push
adc
xchg
jb
cmp
nop
shrb
test
cmp
push
and
pop
inc
pop
insl
sbb
js
enter
arpl
icebp
xchg
aas
test
push
mov
jge
clc
pop
push
lods
sbb
pop
xchg
rcll
push
enter
enter
xor
mov
push
xor
test
cmp
fcomip
mov
test
add
pop
jl
jo
popf
icebp
jg
jo
adc
or
jg
sbb
aas
cmpb
and
fildll
popa
xor
test
dec
in
in
shll
and
idiv
jns
mov
dec
loop
rorl
push
push
dec
inc
cmp
xchg
inc
inc
sub
push
notb
push
dec
dec
dec
adc
inc
dec
pop
inc
notl
xlat
rorl
dec
pop
mov
mov
sub
jg
repz
jg
loopne
cwtl
push
pop
inc
xlat
pop
rol
inc
xor
sbb
push
adc
int3
stos
repz
mov
push
mov
mov
jle
mov
inc
sbb
jno
push
adc
das
xlat
adc
mov
sbb
inc
xchg
lock
pusha
push
xchg
lcall
mov
sub
jb
or
adc
sub
or
ret
lock
clc
adc
or
jg
push
inc
push
dec
push
ret
or
les
push
and
jne,pn
or
pop
stos
lret
dec
pop
outsl
adc
mov
enter
aam
push
enter
xchg
adc
cwtl
pop
testl
pusha
sar
adc
mov
or
xlat
adc
fsubr
sub
dec
cli
cmp
jl
sbb
adc
inc
sub
sbb
and
jo
sbb
and
adc
cmp
xchg
fadd
jecxz
les
sbb
adc
adc
xchg
push
pop
test
inc
lcall
sub
pop
ficoml
rol
pushf
frstor
and
pop
mov
ja
sub
repnz
sbb
call
pop
shlb
pop
push
push
andps
pop
dec
mov
add
mov
adc
mov
xlat
mov
fidivrs
sub
mov
test
jge
push
and
orl
fdivrl
outsb
push
adc
jae
sarb
xchg
mov
push
test
xlat
fwait
in
in
das
mov
sub
pop
decb
xchg
xor
xlat
sub
scas
in
leave
inc
clc
mov
idivl
xor
jo
mov
stos
and
rclb
jle
inc
or
push
fadds
cmp
scas
cmp
dec
out
sub
add
lods
sbb
out
std
or
mov
xchg
je
hlt
test
ja
xor
hlt
fbld
jbe
pop
cmp
call
dec
pop
arpl
inc
scas
and
aam
adc
or
jne
ja
mov
out
insb
and
dec
fdivr
jle
jle
out
add
mov
scas
dec
pop
cltd
pop
mulb
ljmp
dec
jns
subb
mov
mov
pop
and
movsl
push
mov
push
movsl
dec
mov
push
enter
mov
or
push
leave
dec
sub
add
js
dec
push
and
loope
test
mov
or
mov
ljmp
int3
movsl
mov
test
cmp
dec
jmp
push
fisttpl
push
mov
xchg
lock
enter
or
fisttpl
jle
mov
hlt
das
push
pushf
push
adc
fildl
es
dec
xor
mov
mov
xor
mov
dec
in
mov
dec
out
mov
scas
sbb
bswap
or
pop
je
push
xor
mov
and
push
mov
mov
shr
push
std
repnz
sahf
mov
int3
test
loop
inc
xor
pop
xchg
inc
push
sbb
fcomip
mov
cmp
or
pop
popf
int3
cmp
enter
inc
add
scas
test
push
mov
sub
fmull
sahf
dec
test
pop
cmp
mov
sahf
jmp
xor
dec
cmpsl
push
pop
mov
fisubs
inc
jl
jns
gs
sarl
add
cmp
adc
movsb
fsubl
sub
adc
gs
mov
insb
mov
daa
and
je
dec
nop
mov
jecxz
and
sbb
pushf
movsb
in
jb
idivb
mov
fistl
adc
test
ljmp
push
and
fstps
push
lds
sbb
push
test
ficomps
arpl
movb
xchg
push
push
jl
sbb
fists
aad
stc
sbb
add
cmove
sarb
leave
cmp
jae
mov
loop
mov
dec
jne
xlat
pop
cmp
dec
xchg
adc
cmp
or
and
daa
das
jl
add
inc
andl
sub
cmpsl
sub
aas
cld
lods
jmp
sub
clc
aam
xchg
push
push
es
adc
shlb
jl
or
outsl
insl
addr16
cmp
inc
popa
fisubl
loop
inc
jle
insl
inc
cs
mov
pop
rorb
test
pop
push
outsl
jns
rolb
dec
jb
cmp
or
cmp
into
sbb
adc
mov
enter
sahf
adc
dec
jmp
pushf
add
sbb
push
or
push
xchg
pop
es
jmp
push
pop
sbb
adc
gs
fs
mov
roll
adc
dec
outsl
ja
fs
mull
femms
push
add
js
imull
adc
jns
pop
sarl
cli
iret
push
adc
mov
jae
jae
jmp
fs
nop
cmp
out
push
add
xchg
sti
xchg
jmp
inc
mov
sahf
xchg
xchg
add
xor
add
mov
and
scas
jne
shlb
and
xchg
jns
inc
adc
mov
pushf
adc
cmpsb
in
or
sahf
pop
adc
adc
ret
pop
test
xchg
cmpsl
data16
out
and
jns
and
cmp
push
sub
pop
js
xor
cmpl
sbbl
popf
push
cltd
mov
int3
inc
pop
lea
mov
cs
mov
shll
jecxz
fadds
add
sbb
lock
inc
test
movsl
in
jle
insl
lret
jne
push
mov
addr16
push
mov
lds
in
ret
leave
or
inc
and
in
daa
add
lods
jmp
mov
lea
sbb
and
inc
sbb
mov
sbbl
xor
mov
cmc
push
cmpsl
mov
out
cmp
pop
pop
cltd
adc
scas
or
dec
fdivrs
sbb
pop
xor
ss
int3
sbb
inc
inc
shlb
mov
addl
and
int3
iret
imul
leave
sub
mov
mov
jl
push
rcll
push
les
rcrb
fs
iret
data16
je
shrl
popa
jecxz
push
pushf
inc
int
mov
xchg
sbb
inc
rcrb
mov
or
inc
dec
sti
mov
test
inc
mov
mov
push
imul
dec
pushf
cwtl
gs
adc
cmp
repz
inc
daa
sbb
fnstsw
sbb
xchg
push
cmp
lds
inc
inc
sub
or
fnstsw
jp
add
jns
sub
iret
jo
fidivs
and
push
out
outsb
cmpsl
mov
movsbl
mov
mov
pushl
aad
sbb
fadds
lock
test
nop
and
ret
xchg
sbb
pop
xchg
cwtl
mov
add
loope
pop
push
fldl
push
fcomps
loopne
jbe
mov
test
je
sub
add
or
pop
popa
repz
and
test
pop
out
xchg
sub
pop
mov
das
sbb
jge
mov
lcall
out
mov
dec
sub
mov
out
in
lahf
je
jle
pushf
jge
or
jmp
pushf
dec
mov
test
pop
fcmovnbe
sub
inc
pop
sti
repnz
clc
pusha
xchg
adc
cs
rol
adc
inc
pop
cmp
adc
xchg
ss
ljmp
ljmp
mov
ljmp
lods
ljmp
sub
cmp
outsb
push
mov
ljmp
adc
es
add
stc
jmp
and
and
clc
lret
jge
data16
shlb
or
adc
add
jb
stos
sub
inc
pop
js
mov
rcrl
ret
pop
js
xchg
lahf
shll
shl
in
push
fst
ret
jb
into
adc
dec
sub
dec
mov
mov
scas
and
lock
cmp
sub
push
adc
xchg
scas
sub
dec
mov
mov
sub
jg
xchg
push
add
sti
out
and
pop
sarl
setge
adc
dec
mov
jmp
cld
sarb
adc
push
xor
sbb
or
bound
xchg
mov
fistpll
in
jo
out
xchg
fdivrl
add
sbb
cmpsb
or
and
fisubrs
push
sbb
pop
pusha
loopne
push
adc
in
je
inc
sub
jmp
fcomps
add
fwait
adc
fcmovne
add
movb
push
pop
and
fadd
xor
xchg
fdivs
lea
inc
and
insb
or
nop
fwait
mov
or
sbb
push
loopne
jns
mov
fs
jns
cmp
xor
imul
pusha
sub
fnstcw
xor
test
and
cmpl
xor
stc
mov
in
das
cli
insb
mov
dec
out
sti
sub
push
jns
pop
mov
xchg
add
sbb
sahf
pop
test
dec
sti
iret
pop
pushf
and
loop
push
sub
stos
repnz
ret
rclb
or
cld
inc
or
xchg
imul
sub
xchg
mov
bound
sbb
out
and
inc
add
fcomps
mov
fwait
in
adc
lock
xchg
add
and
push
ffreep
xor
adc
cmp
xor
je
jl
lret
adc
in
mov
mov
lahf
jno
daa
std
adc
movsl
jne
lcall
and
pop
xchg
test
mov
pop
or
xor
repnz
add
inc
dec
aaa
inc
pop
or
adc
das
xor
or
sahf
ljmp
mov
pop
jg
test
scas
cmp
push
sbb
mov
ret
or
sub
adc
mov
cltd
dec
push
sub
push
push
in
sub
movsb
pop
push
push
pop
sub
nop
push
push
mov
test
pop
mov
mov
xchg
movsl
and
adc
sahf
and
add
push
hlt
cmp
sbb
icebp
add
repz
or
insb
jle
nop
adc
testb
adc
sub
ret
jns
xchg
mov
sub
pop
sub
adc
xchg
mov
add
lock
dec
inc
adc
xor
test
popa
adc
inc
mov
inc
push
and
push
in
test
jl
inc
test
jl
sbb
dec
mov
mov
mov
fstl
mov
les
in
mov
lret
stc
clc
dec
xchg
add
hlt
pop
test
jl
or
adc
insb
pushf
fs
push
jo
and
test
pusha
adc
cli
adc
mov
adc
out
adc
cmp
inc
hlt
cmpsl
add
and
hlt
jle
in
mov
or
cmc
or
mov
add
dec
cld
in
in
sub
or
adc
pop
leave
in
ds
inc
sub
mov
inc
sets
enter
pop
adc
adc
xor
test
inc
pop
xchg
mov
dec
mov
or
dec
pusha
in
arpl
or
sbb
inc
adc
rcrb
pusha
or
jl
inc
xchg
pop
mov
arpl
dec
sbb
xor
jo
cmp
mov
push
ficomps
call
mov
jo
ds
adc
outsb
test
sbb
add
xor
mov
call
sbbl
adc
invd
fwait
or
push
jno
les
rorb
or
lahf
inc
sar
aam
lcall
stc
or
inc
and
clc
pop
add
insb
int
ljmp
add
cmp
inc
pop
in
xor
inc
push
or
test
arpl
jb
xor
into
test
mov
mov
pop
jo
push
or
je
shll
scas
sub
mov
loope
sub
mov
lahf
icebp
imul
dec
popf
xlat
mov
xchg
sub
mov
push
add
jnp
arpl
cld
mov
shl
clc
orl
movsb
mov
stc
hlt
mov
push
clc
int3
mov
push
dec
divl
push
push
sti
ds
aas
xor
mov
lock
bound
int
movsl
pop
adc
loop
or
adc
imul
dec
dec
xor
sbb
jmp
and
push
adc
dec
push
cld
pusha
std
push
shlb
push
adc
dec
xchg
notb
dec
dec
out
pop
loop
ds
not
orl
push
add
jne
mov
jns
xchg
pop
and
aas
and
incb
sub
cmp
adc
mov
into
fistpll
jle
int
inc
mov
mov
push
inc
xor
mov
mov
mov
add
push
andb
xchg
xor
mov
in
stc
inc
inc
add
pop
lea
aas
aas
jecxz
inc
and
mov
adc
sbb
scas
jnp
cwtl
xor
hlt
cmpl
or
jne
mov
clc
cmpsb
or
mov
scas
add
jmp
inc
enter
jbe
vpor
adc
stos
fcomps
add
das
mov
pop
cld
movsl
mov
or
sub
pop
nop
inc
stc
jmp
lods
sti
sub
insb
rol
and
inc
and
xchg
mov
inc
mov
push
sbb
mov
jo
adc
add
sbb
lock
addr16
ret
repnz
push
fs
and
sub
icebp
inc
lea
sub
pushf
mov
or
pop
adc
jns
pop
nop
es
adc
nop
pop
cmp
jmp
xchg
imul
lods
adc
xor
in
dec
sub
push
sti
subl
mov
mov
mov
xchg
mov
hlt
mov
mov
xchg
sub
icebp
mov
movsb
xor
cld
or
mov
mov
out
adc
inc
sti
cmp
sbb
out
jecxz
dec
daa
inc
push
fsubl
mov
push
inc
repnz
push
dec
adc
std
ds
out
lods
mov
fs
or
or
cmp
adcb
inc
test
sub
or
mov
addr16
out
and
dec
mov
test
std
sub
mov
adc
insb
inc
add
jg
ljmp
push
and
or
cli
adc
push
jp
push
or
pop
pop
xlat
mov
and
pop
dec
je
xor
and
fnstsw
sub
clc
dec
out
sub
add
out
mov
adc
adc
test
jnp
stos
repz
adc
push
dec
and
lock
outsl
adc
cmp
mov
or
lock
hlt
aam
bnd
hlt
adc
je
push
gs
daa
fdivr
sarb
xchg
inc
pushf
add
mov
aas
sub
xchg
leave
mov
dec
xchg
xor
aas
xor
fdivr
pop
cwtl
jmp
repnz
icebp
mov
adc
stc
mov
pop
jnp
mov
imul
fldl
wbinvd
dec
push
inc
inc
push
and
lds
dec
andl
les
pop
loopne
xchg
sbb
popf
adc
add
or
inc
sub
adc
dec
mov
call
xchg
mov
push
mov
cmc
lods
clc
add
js
sbb
fiadds
inc
cld
movsl
lahf
push
or
int3
pop
bound
pop
cmpsb
stos
in
or
pop
stc
outsl
insl
sub
dec
inc
popf
jnp
push
es
mov
mov
fisttps
push
mov
std
xchg
rolb
in
xchg
mov
lret
jge
jmp
les
ds
das
and
dec
insl
xor
test
and
sub
mov
sbb
jp
mov
cmp
xchg
outsb
mov
adc
fists
adc
cwtl
push
and
push
sbb
push
inc
in
push
push
div
idivb
fnstcw
mov
rclb
leave
and
push
gs
leave
push
push
jmp
movl
test
mov
bound
mov
push
and
xchg
loop
fistpll
inc
lock
out
imul
mov
imul
xor
pop
sti
xchg
ds
sbb
xor
mov
dec
pop
lock
cmp
addl
xor
inc
aas
sub
xchg
imul
pushf
int
lea
and
sub
dec
add
enter
and
push
cmpsl
cwtl
leave
jne
xor
sub
test
cmp
inc
out
gs
into
sbb
scas
fcmovnbe
xchg
cwtl
sar
sub
push
mov
or
and
inc
lods
pop
in
sbb
subl
jecxz
add
scas
mov
repz
or
adc
add
stos
jb
pusha
mov
mov
push
insb
jmp
push
xchg
ret
pop
ds
inc
xor
xor
mov
movsl
adc
dec
cmp
jno
out
loopne
dec
and
pop
stos
mov
jle
push
push
in
pushl
mov
dec
mov
lods
sbb
clc
movsb
popa
cmpb
fs
jne
in
jb
xor
jge
adc
and
loopne
cmp
lahf
ds
iret
mov
into
lcall
mov
or
pop
ficoms
fcom
mov
mov
xor
inc
xchg
push
push
dec
call
mov
in
and
adc
clc
out
or
lret
ret
and
push
inc
clc
lahf
gs
push
pushf
sbb
inc
xor
mov
fimuls
dec
cmp
enter
inc
inc
sbb
cmp
pop
pop
mov
cmp
sbb
cs
cmp
mov
pop
inc
bound
mov
imul
shlb
xor
mov
mov
cli
lret
mov
je
popa
jb
gs
mov
loopne
jne
jb
in
mov
out
mov
push
inc
cld
xlat
xor
push
dec
inc
push
or
push
inc
dec
pop
push
pop
mov
and
iret
jne
mov
mov
and
str
jnp
xor
inc
xor
into
inc
inc
cmp
xlat
xchg
lods
or
loop
jecxz
or
push
jge
xchg
mov
bound
test
dec
jecxz
sarl
inc
inc
mov
xor
jo
push
and
inc
pop
fisubrs
inc
push
add
or
mov
jg
cmp
pop
icebp
outsl
cmp
xor
push
push
in
and
push
insb
pusha
xchg
aam
pop
js
xor
inc
dec
or
mov
pushf
and
mov
ficoms
xor
and
sbb
leave
pop
icebp
dec
gs
scas
mov
xor
inc
stos
test
add
insl
fs
push
iret
aas
sbb
imul
ret
xor
movsb
ret
cld
mov
ss
add
ljmp
mul
mov
imul
adc
mov
mov
xor
insb
sub
lods
mov
push
lock
jl
shll
pop
test
push
or
je
inc
orb
xchg
aaa
mov
push
mov
frstor
mov
push
cld
pop
pop
and
popa
sbb
mov
sub
mov
out
mov
pusha
mov
gs
dec
or
pop
fnstenv
add
inc
clc
test
lds
cli
jmp
xchg
push
jl
les
or
inc
das
js
enter
push
repnz
in
fwait
ds
or
mov
mov
xchg
inc
adcb
icebp
xchg
aam
add
or
xor
ficompl
push
ja
add
scas
push
or
sub
mov
dec
stc
lahf
xchg
sbb
addb
push
xor
or
cmp
xor
push
push
xchg
mov
push
stc
or
and
iret
push
shrb
mov
xchg
pushf
test
add
push
push
xchg
inc
mov
add
jp
push
mov
and
add
stos
mov
movzwl
mov
pushf
fisubl
mov
jne
mov
mov
xor
in
sbb
sbb
xchg
fcoms
int3
lret
out
test
xor
xor
sub
fists
sub
sbb
mov
push
fs
loopne
jmp
test
jg
dec
ret
jo
and
pop
cmp
inc
jne
ret
push
add
push
outsb
lret
pushf
outsl
dec
xchg
inc
mov
subl
lahf
adc
scas
add
adc
sbbb
loope
jne
movb
sbb
sbb
adc
daa
mov
movsl
push
bound
shrb
mov
mov
mov
jns
lods
adc
xorb
xor
enter
stc
sub
push
xorl
inc
jne
push
sbb
mov
sbb
push
sub
pop
adc
cs
xor
lahf
push
push
add
lds
push
cli
mov
adc
sbb
test
shrl
xchg
in
out
into
cwtl
or
jp
in
sub
pop
mov
dec
inc
sbb
sbb
loope
movsl
or
rcrb
mov
xchg
leave
mov
int3
mov
or
add
les
sbb
fisubs
fmul
dec
add
mov
adc
bound
sbb
dec
pop
add
fnsave
adc
or
pop
jne
cwtl
cmp
daa
sub
xchg
push
cs
enter
mov
and
mov
jno
adc
mov
sti
mov
or
sub
and
inc
sbb
inc
push
inc
inc
pop
stos
inc
and
and
xor
addb
inc
sub
gs
cmpl
or
adc
ds
aam
push
adc
pop
add
lahf
dec
push
sbb
xchg
push
movsb
and
sub
push
mov
mov
cmc
mov
mov
das
testb
lret
inc
xor
enter
or
out
sub
loope
or
dec
sahf
xchg
movsb
and
rcr
or
js
test
adc
int
sbb
xor
cli
dec
addr16
fwait
punpckhbw
sub
and
sub
movsb
imul
jecxz
incb
cmc
repz
jmp
add
push
sbb
jp
cwtl
neg
jmp
push
sbb
xor
sbb
dec
adc
mov
test
test
fcoms
shrl
add
xor
mov
clc
sub
outsl
and
mov
push
mov
xchg
mov
sub
sbb
add
cli
sub
adc
mov
insb
jo
movsl
adc
jne
cmp
mov
ret
dec
mov
pop
mov
push
fsubl
push
jnp
lret
cmp
adc
xchg
or
sub
sbb
and
push
cmpb
dec
outsl
mov
jne
enter
js
push
dec
in
es
pop
mov
mov
cmp
cmp
pop
inc
add
sub
mov
jns
or
or
push
and
adc
xchg
fwait
repnz
mov
in
push
dec
mov
cwtl
inc
or
or
ss
or
or
push
movsb
gs
inc
mov
imul
hlt
cmp
or
adcb
inc
sbb
outsb
or
mov
dec
aad
in
cmc
and
sbb
je
shrb
enter
insl
inc
push
in
cmc
add
adc
cwtl
pop
mov
mov
mov
inc
enter
ret
sbb
and
push
js
sub
jb
je
outsb
fwait
xor
aas
jo
sub
les
ljmp
bound
call
std
pushf
pop
mov
add
sbb
lods
std
mov
les
or
dec
push
inc
les
mov
mov
sbb
inc
cwtl
ja
test
gs
add
jle
add
and
aam
and
mov
icebp
jl
cmpsl
and
fidivs
movsb
and
push
dec
dec
mov
push
mov
jl
in
mov
pop
mov
and
ret
or
cmp
push
push
mov
out
add
inc
xchg
dec
test
repnz
bound
adc
dec
nop
add
es
mov
ds
and
or
out
sub
rolb
in
outsb
jp
icebp
movsb
or
mov
inc
movsb
lea
mov
outsb
adc
je
push
or
push
aad
or
add
sbb
pop
sbb
orb
or
sub
mov
pop
add
pushf
or
mov
or
mov
xor
insb
ljmp
inc
mov
dec
xchg
xchg
cmp
enter
loop
cs
repnz
push
mov
or
js
mov
stc
mov
adc
inc
jns
and
les
sub
dec
mov
shrb
outsb
cmp
test
std
push
jno
fldcw
sbb
xchg
sbb
mov
mov
sbb
dec
adc
and
push
xchg
jae
mov
orb
mov
adc
adc
mov
xchg
and
dec
out
add
cwtl
inc
inc
add
aas
movsl
push
test
mov
das
and
dec
dec
cmpsl
fs
push
movb
inc
xchg
push
jle
inc
ss
add
sub
stc
sbb
aas
push
and
inc
pop
daa
add
js
mov
xchg
add
sbb
fcoml
fmull
or
sbb
sbb
pop
cmp
push
mov
int
or
xchg
out
inc
int
or
and
enter
lret
call
mov
jmp
jg
jns
test
repnz
scas
les
xor
xchg
jnp
inc
mov
and
dec
push
movb
inc
pop
inc
adc
or
or
adc
and
inc
adc
aam
mov
lods
and
hlt
cld
shr
pop
sbb
mov
fs
or
adc
les
pop
mov
inc
and
lcall
mull
add
je
dec
popa
push
test
push
dec
aam
fcomps
das
fwait
pop
testb
sbb
cmp
jecxz
or
add
and
movsb
ss
mov
xchg
mov
xchg
jae
jmp
jge
add
mov
les
mov
xor
mov
inc
sbb
cmpb
or
mov
xchg
inc
or
lea
popa
enter
pop
adc
adc
pop
nop
into
movb
push
sub
orb
and
inc
inc
test
xor
je
stc
inc
pop
fsubrs
inc
pusha
cmp
movaps
fs
ror
pusha
push
pop
sarb
sub
ss
leave
stos
add
mov
rorl
mov
inc
pushf
sbb
mov
sbb
lea
cmp
call
push
sbb
and
xor
jo
push
enter
insb
mov
and
pop
pop
fmull
pushf
mov
adc
enter
jno
xchg
pusha
pop
mov
int3
ss
test
push
cmp
or
or
xor
and
and
pop
xchg
push
enter
sbb
inc
js
mov
adc
cmpsl
inc
or
lock
das
cwtl
pop
mov
jbe
push
push
sahf
out
adc
dec
cmpsl
cmpsl
pop
dec
xor
cmp
add
inc
dec
popa
test
mov
dec
vmovups
jge
fists
lahf
and
dec
mov
inc
fsubr
mov
sub
ds
pop
mov
sbb
jnp
sbb
xor
adc
jl
or
push
adc
popa
rcrb
sbb
push
aaa
push
add
pop
lret
mov
and
cmpsl
sub
pop
inc
sub
push
fs
mov
js
add
or
add
inc
sbb
or
xchg
dec
and
mov
mov
subl
mov
into
sti
mov
or
xorl
out
cmp
xor
xor
dec
nop
mov
cmp
insb
xor
jle
adc
in
xchg
adc
out
dec
inc
mov
aam
push
enter
or
push
add
mov
mov
int3
call
shll
cmp
dec
inc
fldt
fs
adc
adc
loopne
jmp
mov
add
dec
ja
nop
inc
mov
pop
mov
adc
sbb
mov
test
jecxz
mov
cmp
and
shrl
and
shll
push
xor
xchg
sbb
mov
mov
xor
adc
je
lcall
sub
rclb
mov
adc
pop
in
sbb
imul
les
add
rcrb
pop
and
sbb
and
pop
inc
enter
dec
and
int3
rorl
sahf
ds
cmp
cmc
movsb
sti
jo
ror
push
pop
jl
jge
cmp
ret
sbb
add
mov
xchg
mov
imul
test
mov
pusha
aam
dec
hlt
xchg
into
insb
xchg
icebp
push
jns
cmovbe
jno,pt
fidivl
mov
and
sbb
mov
mov
mov
or
inc
dec
inc
xor
aas
mov
outsl
div
pop
cmc
push
or
xor
push
inc
cs
pop
push
inc
mov
aad
sbb
push
dec
dec
inc
imul
pop
call
je
cmp
mov
test
int3
out
lock
jb
leave
mov
xor
xor
mov
inc
jne
mov
sbb
popa
push
insl
and
insb
jo
pop
out
pop
or
ds
jo
xor
xor
popf
outsb
adc
push
mov
inc
and
jb
adc
sub
mov
xor
pop
fwait
or
jmp
jns
pop
and
push
dec
jecxz
daa
pop
push
call
daa
mov
xor
push
adc
stos
inc
mov
in
das
out
sub
xchg
cs
ljmp
aaa
push
mov
popf
into
sub
mov
ja
sub
jbe
xor
inc
xor
mov
mov
push
cmp
mov
mov
pop
mov
fists
loopne
popa
fs
repnz
adc
and
add
push
inc
sub
inc
add
adc
les
mov
xchg
or
pop
fmull
jl
lahf
push
loopne
or
sub
sub
inc
fmul
aam
in
sub
adc
and
fnop
or
int3
out
xchg
cmpsb
sub
int
xchg
enter
and
outsb
jo
clc
shlb
aas
xor
les
and
xchg
xor
stc
les
inc
push
add
mov
mov
mov
shlb
xchg
out
lahf
dec
lods
nop
je
push
mov
daa
js
roll
nop
repnz
cmp
push
lock
jp
push
add
fs
js
sahf
inc
cmp
dec
popf
sub
pop
in
mov
pushf
xchg
inc
aad
mov
cmp
mov
adcl
jne
jl
dec
call
aaa
out
dec
in
xchg
dec
inc
adc
mov
xor
pop
imul
xor
pop
int3
push
fistps
push
inc
enter
andl
push
inc
push
arpl
pop
and
and
and
xorb
adc
or
cld
js
and
je
sbb
sarb
mov
popf
pop
fildl
mov
inc
sahf
ss
xor
push
cmp
das
sub
and
dec
lahf
sbb
sbb
js
and
push
orb
or
mov
push
and
adc
or
hlt
sub
insb
xor
cmpsl
push
push
mov
inc
addl
pusha
test
outsl
cmp
aaa
adc
mov
in
cmp
inc
xor
inc
xor
addr16
repz
jecxz
loop
and
xor
xor
fnstsw
jmp
sbb
inc
inc
ss
inc
jno
jno
fsts
xor
incb
jno
loopne
repz
cmp
call
mov
mov
adc
cmp
xchg
jo
or
and
inc
pop
mov
pop
les
and
fs
mov
test
push
rcrb
or
inc
inc
enter
or
xor
mov
sub
inc
sub
cwtl
js
and
test
cmp
mov
test
mov
cmp
test
xor
push
jmp
adc
in
loopne
adc
add
push
add
or
sub
or
jo
adc
or
sbb
mov
push
fisttpl
rcr
or
or
or
jl
sub
and
mov
jo
and
or
add
cmp
mov
addb
mov
cmp
or
xor
or
rcrb
xchg
push
push
data16
push
sbb
or
adc
push
in
mov
movsb
and
cmp
dec
cwtl
inc
sbb
xorb
or
imul
adc
xor
xor
adc
and
inc
hlt
push
outsl
adc
xor
hlt
xor
in
or
jno
jno
cmp
pop
sbb
inc
mov
test
or
int3
jns
or
cltd
pop
mov
clc
xor
mov
fs
je
or
mov
jle
xchg
mov
movsb
pusha
inc
je
insb
lea
dec
insb
push
stc
or
or
out
add
and
add
add
or
cld
adc
int3
and
and
les
adc
sbb
in
dec
or
cwtl
jle
pop
hlt
insb
jg
or
inc
cmpl
adc
xchg
addr16
or
mov
test
rorb
xor
add
inc
pop
int
sub
jo
mov
adc
inc
mov
insb
call
stc
xchg
or
adc
or
sbbl
add
pop
and
inc
push
mov
sti
mov
or
inc
add
es
or
or
das
cmp
and
inc
les
xchg
mov
sub
push
lock
rclb
and
inc
aam
jne
mov
and
jp
je
add
inc
adc
add
cmpsb
or
adc
or
mov
add
enter
adc
roll
fcompl
mov
jmp
loope
xor
enter
cwtl
hlt
sbb
xchg
jp
mov
and
and
cmp
pop
push
rcll
cmp
xor
adc
xor
movb
or
pushf
sbb
shll
and
movsl
xor
enter
mov
and
xlat
xor
add
add
add
inc
or
adc
ret
inc
inc
add
add
sub
sbb
sub
lret
int3
enter
mov
fcomp
fxch
sbb
loope
or
in
inc
jno
jae
rorb
sbb
and
popa
je
xor
xor
xor
ss
add
cmp
inc
inc
inc
inc
outsb
incl
adc
sbbl
inc
push
inc
or
add
clc
jle
cld
and
adcb
jmp
sbb
or
adc
and
ss
je
shlb
cmp
fidivrs
cwtl
or
or
dec
rcrb
and
jae
sub
or
cmp
mov
and
dec
fs
insb
and
test
pushf
dec
movsb
xchg
lods
and
adc
and
dec
in
in
and
inc
cld
add
je
mov
sbb
and
sub
xor
cmp
inc
dec
mov
pop
aam
cmpsb
or
and
in
jo
ja
xchg
adc
mov
out
enter
jb
cmp
adc
cmp
psllw
sub
adc
push
pop
and
adc
push
call
mov
adc
or
adc
nop
add
or
in
hlt
and
push
add
dec
sub
pop
insb
mov
and
dec
lods
xchg
mov
mov
add
or
pusha
or
das
add
ret
icebp
rorl
sub
test
je
shl
imul
addb
or
popa
outsb
imul
xchg
xor
dec
test
aam
mov
call
cld
mov
adc
aad
inc
sahf
sbb
and
add
adc
xor
adc
push
mov
mov
mov
je
xor
test
sub
test
lret
and
adc
mov
xlat
and
lock
xor
enter
mov
adc
cltd
gs
add
push
and
dec
insb
xchg
add
test
mov
mov
adc
xchg
adc
faddl
mov
and
xlat
adc
int
sbb
shlb
dec
adc
je
mov
dec
or
rclb
mov
adc
and
add
dec
and
push
inc
mov
dec
jo
lock
test
jnp
xchg
adc
and
inc
add
call
fldenv
jl
xor
or
xchg
adc
les
andb
adcl
and
mov
cmp
mov
and
mov
mov
dec
mov
inc
fsubrp
mov
pop
add
cwtl
loopne
xlat
adc
xchg
push
push
add
add
cltd
test
sbb
cmp
adc
xor
dec
or
pcmpgtw
dec
loop
or
mov
xor
add
push
add
or
shll
or
fsubrp
or
cwtl
and
xchg
in
inc
xor
mov
add
xchg
or
and
inc
fsubr
mov
adc
add
and
dec
cmp
inc
imul
inc
push
andb
nop
lahf
pusha
and
jno
pop
or
adc
or
push
or
sbb
inc
xor
dec
and
aam
dec
or
inc
add
or
add
mov
and
xchg
adc
or
adc
sub
or
add
cmp
sbb
mov
and
cmpsb
and
jmp
push
mov
and
xchg
or
enter
xor
or
and
dec
loopne
lock
ret
clc
xchg
sbb
or
mov
sub
adc
and
clc
push
je
mov
jo
inc
add
jns
pushf
adc
fsubs
lock
adcl
inc
xchg
dec
and
insb
test
mov
rclb
or
ja
or
cmp
cmp
or
nop
adcb
lods
or
push
xchg
adc
and
cld
jo
cli
adc
xchg
clc
and
notb
shlb
and
inc
repz
repnz
icebp
and
dec
lock
inc
and
inc
pop
out
mov
and
dec
in
xchg
nop
and
inc
mov
enter
xchg
add
or
cmpsl
test
adc
xorb
add
add
movsl
adc
sub
int3
inc
or
add
mov
outsl
aam
mov
adc
sbb
test
add
push
in
cmp
cld
in
jo
and
mov
roll
scas
mov
daa
mov
add
rcrb
push
jo
inc
push
and
add
adc
fsub
xor
add
xchg
jne
rcrb
inc
cmp
icebp
data16
xor
pop
xor
push
iret
and
and
mov
xchg
mov
cli
inc
sti
cld
mov
adc
and
dec
add
addb
add
adc
adc
mov
cwtl
sbb
sbb
nop
imul
loopne
pop
out
add
add
or
push
ret
push
push
nop
push
cmp
cmc
jbe
jns
cmp
push
inc
dec
inc
test
inc
jno
xchg
or
and
inc
aam
mov
adc
add
sbb
mov
decl
movsb
inc
test
push
cmp
addr16
sub
loope
xchg
sub
pop
add
dec
aaa
cmp
sbb
cmp
and
mov
or
add
dec
adc
sbb
xorl
xor
gs
popa
mov
inc
outsl
jo
jb
addr16
adc
xlat
rorb
popa
jp
outsl
jne
dec
inc
das
imul
push
adc
ds
add
add
add
jns
push
inc
sub
add
pop
enter
jb
cmp
sbb
mov
inc
add
or
mov
dec
mov
adc
lods
dec
insb
xchg
in
and
pushf
pop
mov
adc
mov
and
inc
addb
adc
and
dec
bound
xchg
push
mov
adc
and
dec
jb
repnz
inc
mov
lret
and
dec
push
ljmp
ficoml
cmp
dec
jp
cli
and
inc
xchg
adc
and
dec
xchg
out
push
inc
xchg
push
mov
adc
and
dec
jbe
mulb
push
inc
mov
into
adc
and
dec
outsb
xchg
out
and
inc
sahf
pop
mov
adc
and
dec
jle
and
inc
addl
mov
and
inc
xchg
push
mov
adc
and
dec
jno
icebp
and
inc
mov
leave
adc
and
dec
imul
adc
and
dec
jns
stc
and
lds
and
xchg
in
adc
aad
xor
xchg
cmc
and
int
sub
xchg
in
and
fstl
cmp
xchg
std
sub
ret
into
or
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shrb
adc
inc
xchg
or
and
adc
xor
jo
or
xchg
sub
push
cmp
js
add
inc
xchg
and
fs
adc
mov
je
add
dec
ret
xchg
and
mov
mulb
mov
adc
nop
xor
sbb
add
xchg
or
sbb
mov
adc
and
dec
adc
add
sbb
or
sbb
dec
pop
pop
daa
lds
mov
or
adc
cwtl
mov
sub
cwtl
and
xor
sub
mov
mov
and
je
push
push
insb
sub
xchg
sbb
push
gs
xor
cmp
rorb
cwtl
dec
shlb
inc
push
pop
sarl
shlb
xchg
leave
push
rcl
and
push
test
adc
loop
adc
repnz
push
or
or
push
lahf
outsl
aas
ds
pop
and
jb
cmp
pop
and
in
jg
or
ljmp
add
mov
enter
pop
enter
sbb
sbb
mov
push
ficoms
xchg
pop
mov
sbb
mov
and
adc
pop
repnz
xchg
sbb
pop
xor
fldt
in
rorl
inc
shr
jmp
test
adc
loopne
adc
fsubl
dec
sbb
sbb
in
adc
and
dec
clc
mov
add
dec
sub
sub
mov
xor
dec
pusha
xchg
xor
xor
mov
inc
inc
nop
loop
dec
dec
mov
inc
mov
mov
shlb
push
inc
jo
mov
and
dec
pop
xchg
test
pop
enter
adc
pusha
inc
xchg
and
xor
xchg
test
inc
inc
insb
mov
push
adc
mov
and
inc
jo
mov
adc
xchg
nop
and
test
or
add
xchg
shlb
inc
sub
and
dec
cmp
loopne
xchg
inc
dec
lock
rcll
pushf
and
mov
and
dec
mov
inc
mov
shlb
dec
mov
call
add
fdivs
mov
dec
mov
inc
rorb
les
dec
mov
enter
ror
js
shrb
xchg
and
xchg
adc
cs
and
mov
xchg
int3
and
inc
call
in
and
dec
inc
xchg
hlt
adc
and
clc
sbb
pusha
adc
and
dec
jo
ljmp
adc
nop
dec
or
or
mov
dec
rclb
sbb
sbb
xchg
xchg
lock
inc
test
roll
and
mov
adc
and
int3
adc
cs
and
inc
inc
xor
in
adc
cmp
xchg
pusha
and
add
inc
jo
mov
adc
xchg
nop
and
mov
xchg
mov
pop
inc
push
jl
rorb
xchg
xchg
and
inc
insb
lods
mov
adc
les
lods
jl
and
adc
mov
adc
xor
inc
and
mov
cmp
dec
nop
mov
adc
jo
pushf
xchg
test
addb
nop
adc
xchg
mov
call
clc
dec
rclb
rorb
sub
xor
lock
adc
xchg
sbb
cmp
adc
and
push
push
je
xor
test
xchg
int3
int3
pusha
sbb
lods
mov
mov
rorb
sbb
inc
xor
and
dec
int3
xchg
push
das
add
ret
dec
inc
and
cwtl
inc
movsb
mov
mov
dec
loopne
in
and
dec
add
push
adc
or
sub
inc
adc
push
add
pop
adc
jo
mov
dec
lods
xchg
mov
fmull
popa
xor
or
sbb
xchg
xor
mov
dec
push
dec
clc
mov
adc
and
sub
inc
adc
dec
fs
jo
jl
mov
mov
pop
dec
pusha
add
or
mov
add
push
push
xchg
xchg
xor
push
test
or
mov
aam
and
xor
je
pop
dec
or
push
push
dec
mov
mov
xor
ret
xor
mov
adc
push
les
loope
popa
sub
fsubl
test
inc
push
xchg
and
cld
push
pop
or
and
jno
int3
add
rorl
in
jns
enter
popa
clc
int3
jns
icebp
js
cmp
pushf
insb
dec
subl
dec
sub
sub
and
cltd
sbb
int3
stc
mov
cmp
xorl
jge
jl
mov
or
pusha
andb
xchg
data16
or
fs
pushf
push
rol
mov
inc
lock
fs
mov
sbb
and
jns
in
mov
or
mov
and
pop
xor
repnz
adc
sub
cltd
and
xchg
mov
cmp
movsb
nop
int3
dec
xor
test
push
shlb
fsubrs
adc
jb
int3
test
insb
popf
xchg
inc
daa
sbb
sahf
xchg
outsb
sbb
mov
int3
or
and
inc
inc
adc
fnstenv
mov
inc
int3
jno
js
inc
sbb
inc
mov
xorb
cwtl
popa
in
dec
dec
inc
or
fsubrl
insb
call
push
jmp
mov
sub
test
or
push
jb
xchg
imul
pop
sbb
lock
aaa
popa
cmp
cmp
nop
lret
movsb
dec
xor
lods
adc
push
test
int3
jns
cltd
loopne
mov
jb
dec
push
mov
sbb
icebp
inc
cwtl
xchg
jo
sbb
sbb
jns
sbb
lea
pop
lods
xor
xor
pop
shlb
xor
dec
fsubrl
movsb
test
js
rolb
fs
mov
xor
cmp
js
dec
add
dec
cmp
pop
enter
scas
dec
imul
xor
clc
jno
xor
sbb
sub
lods
nop
imul
dec
adc
sub
call
inc
mov
xchg
push
pushf
fcoml
enter
int3
jb
clc
data16
push
and
jle
and
mov
lods
pop
bound
jb
sbb
cld
mov
push
stc
push
cwtl
and
xor
mov
rorl
nop
cltd
dec
adc
xchg
xchg
fcompl
fcompl
and
push
test
dec
xchg
and
test
or
mov
cltd
cmp
sbb
insb
es
push
data16
lods
adc
or
imul
xor
adc
outsb
jl
fadds
movsl
jns
push
stc
push
jl
lods
fimuls
xor
sbb
xchg
add
data16
rorb
enter
dec
sbb
orl
adc
push
in
mov
inc
push
mov
hlt
ja
loope
test
mov
je
lods
lret
cmpl
fcoml
xor
cltd
xchg
xor
push
push
mov
mov
int3
sub
xor
inc
and
adc
dec
cmpsb
rolb
int3
adc
push
and
sbb
push
xchg
aam
mov
pop
fidivrs
repnz
scas
loopne
invd
add
adc
inc
xor
aad
dec
nop
fdivr
call
fmul
imul
in
jle
cwtl
fsubs
pop
adc
nopl
cltd
pop
mov
test
lret
dec
or
mov
jns
loope
scas
or
int3
sbb
or
es
pop
add
and
data16
test
outsb
mov
jl
test
in
sub
adc
mov
jl
mov
mov
xor
sbb
xor
mov
lcall
add
add
add
pop
add
xchg
inc
or
xchg
xchg
adc
hlt
dec
cwtl
clc
xor
subl
int3
icebp
hlt
sahf
add
xchg
push
adc
loop
and
jl
inc
stos
rolb
mov
sahf
mov
adc
and
jl
mov
adc
pop
and
jl
mov
and
mov
adc
inc
mov
cmp
mov
scas
cwtl
add
add
add
cmp
inc
xor
or
inc
add
out
add
add
add
push
loopne
mov
push
addb
mov
push
inc
or
or
xchg
fsubs
or
add
adc
mov
add
nop
adc
rclb
mov
pop
dec
sub
sub
or
int3
xor
lods
mov
adc
xchg
push
and
inc
push
clc
xchg
cwtl
adc
or
mov
adc
mov
adc
sub
add
cmp
xor
in
add
loopne
data16
adc
xor
jmp
inc
xchg
in
and
in
jo
out
adc
xchg
lock
repnz
and
pop
adc
cmc
mov
adc
and
dec
notl
js
mov
dec
sti
xchg
shlb
inc
fdivr
mov
adc
and
push
add
dec
and
jns
dec
test
call
adc
pop
mov
stc
jg
cwtl
cltd
xor
adc
dec
cld
xchg
loopne
std
inc
clc
decb
adc
adc
dec
add
or
mov
inc
pusha
bnd
nop
cmp
xchg
mov
rorb
sarb
loopne
lock
test
xchg
inc
adc
and
stc
xor
enter
push
repnz
pop
nop
jo
addb
stc
mov
enter
shl
loopne
nop
lock
rorl
mov
jle
and
xor
nop
inc
cld
push
xchg
pusha
aas
and
orb
nop
jle
mov
sar
xchg
loopne
and
sti
orb
adc
cld
and
inc
stc
push
bswap
pusha
jle
jo
andb
jnp
pop
xor
pop
in
xchg
sub
aam
cmp
jg
or
lock
lock
test
jl
mov
lods
adc
sub
lock
mov
pushf
nop
lock
vpmacswd
hlt
dec
push
js
xchg
addb
cld
xchg
rcrb
enter
movups
movsb
loope
cmpsl
add
sahf
andb
test
xor
scas
xorl
jo
adc
mov
clc
inc
xchg
sub
adc
and
loopne
mov
and
jl
xchg
jl
adc
and
enter
push
adc
test
int3
add
xchg
push
jge
xorl
les
bound
jno
nop
and
icebp
adc
add
pop
push
adc
fidivrs
adc
mov
clc
adc
adc
cmp
inc
dec
enter
testb
or
pushf
push
adc
adc
dec
add
cltd
sbb
and
mov
lods
pop
push
lret
adc
xor
xchg
sub
adc
or
cmpsb
inc
sbbl
jb
and
push
lea
or
xchg
dec
xor
inc
sbb
xor
inc
push
inc
test
xor
cmp
xor
and
cli
repz
sbb
adc
js
ficompl
or
nop
add
decl
adc
sub
add
add
addb
loopne
mov
add
or
nop
test
jp
outsl
sar
fidivs
inc
cld
jg,pt
clc
lahf
aas
push
lock
pop
mov
xchg
ror
nop
cld
test
aas
or
popa
pmaxub
loope
jbe
add
aam
call
add
test
test
or
add
jo
add
shll
add
punpckhwd
imul
add
sbb
fwait
add
fisttpl
out
inc
cmp
rolb
inc
loopne
sbb
lock
and
mov
pop
and
aas
int
or
mov
enter
xor
pop
lock
xchg
xor
dec
add
cmp
lods
add
adc
inc
jne
and
jbe
jle
inc
rolb
fs
jo
pusha
mov
rolb
jo
mov
in
inc
and
or
pop
fwait
adc
xchg
in
dec
pop
xchg
aas
sub
aaa
aas
add
inc
pop
jns
push
add
iret
push
or
int
cmp
mov
pop
adc
inc
push
xor
add
dec
add
std
and
clc
and
jg
loopne
rclb
addr16
add
pop
and
pusha
or
clc
cmpsb
dec
test
xchg
adc
xor
jo
rolb
loopne
insb
and
sbb
test
add
sub
shlb
sbb
inc
aaa
test
add
lea
in
or
adc
test
ret
incb
adc
inc
inc
xor
cmp
inc
orl
pop
push
cld
add
cmp
push
fdivl
push
gs
fmull
add
adc
pushf
cli
dec
sbb
out
xchg
outsl
jg
or
cmp
into
mov
add
mov
inc
addl
sbb
xor
dec
sub
lods
into
jnp
incl
jbe
cmp
pop
sbb
cmp
or
jl
sbb
cmp
jmp
pop
or
je
cmp
loope
aas
add
and
xor
push
repnz
xorb
mov
xor
shrb
or
into
mov
sub
pop
dec
add
dec
push
xchg
inc
mov
inc
sbbl
xor
nop
sbb
rep
xor
adc
and
clc
decb
movsb
adc
and
in
cmp
cmp
clc
pop
sub
daa
sub
xor
push
sub
ror
adc
push
inc
adc
adc
push
adc
mov
jbe
dec
mov
nop
adc
enter
sbbl
sub
adc
inc
sub
dec
sub
cmp
incl
sbb
and
push
and
mov
inc
adc
jl
bound
cmp
popl
cmpl
sbb
jno
dec
inc
cs
dec
adc
adc
cs
sub
lret
sub
movsb
sub
sub
and
jae
jb
test
cmp
aas
xchg
jns
lea
mov
xor
aas
jle
sbb
and
jmp
xchg
push
cmpb
int
dec
push
cmc
adcl
cmpb
sub
mov
push
data16
push
mov
sub
and
dec
xchg
outsl
push
jg
dec
sub
sub
mov
sub
push
sub
adc
mov
sub
ljmp
add
daa
xchg
cwtl
mov
inc
adc
icebp
push
mov
fmul
fmuls
push
pop
sub
mov
mov
aad
and
pop
mov
mov
sub
sub
xchg
icebp
push
push
mov
mov
inc
arpl
es
shl
nop
adc
sub
daa
add
or
repz
mov
inc
repz
les
inc
arpl
ds
xchg
imul
lods
push
cmpl
push
nop
sbb
inc
loop
repz
js
push
lret
adc
sub
adc
xor
xor
aas
xor
cmpsb
in
mov
inc
adc
push
insb
dec
add
dec
mov
fwait
adc
out
sub
repz
sub
xchg
add
mov
gs
leave
divl
int3
jns
stos
add
sub
orb
movsb
arpl
cmc
adcl
xor
arpl
adc
inc
xor
xor
and
std
and
movsb
inc
jb
xchg
les
hlt
xor
pushf
or
mov
push
sub
orl
stos
inc
push
cmp
ljmp
inc
test
adc
adc
stos
inc
mov
movsb
adc
mov
fs
mov
repnz
and
in
nop
mov
mov
mov
inc
stos
out
data16
outsl
repz
inc
stc
gs
mov
xor
and
decl
iret
push
out
pop
adc
insb
cmpb
sbb
add
xchg
std
xor
xor
sub
xchg
mov
cmc
adcb
fidivrl
pop
jnp
dec
clc
or
sub
daa
sbb
movsl
stos
es
std
push
adc
sti
dec
adc
dec
adc
dec
xor
adc
adc
fimull
add
aad
push
daa
jle
lock
xchg
daa
inc
push
aam
clc
inc
mov
jno
repz
negb
mov
hlt
pushf
int3
bound
mov
cmp
jae
cltd
pop
add
or
adc
push
repz
adc
sbb
pushf
mov
or
or
mov
out
sub
enter
sub
mov
sub
inc
and
cmp
rclb
jo
cltd
mov
xorb
xchg
xchg
in
sub
sub
mov
fistps
in
xor
pop
and
dec
adc
sbb
sub
push
sbb
sub
aas
test
mov
mov
cmpsb
add
jo
mov
xchg
pop
mov
xchg
mov
adc
mov
sbb
pop
dec
jns
xor
or
pop
xchg
sub
in
insl
sub
test
pop
mov
cmc
clc
lcall
gs
lcall
adc
add
mov
std
pop
adc
mov
jno
in
out
mov
add
shlb
aam
int3
lcall
push
setg
and
adc
js
xor
adc
mov
fsubl
or
xchg
pop
out
and
xor
adc
test
dec
adc
or
shlb
pop
bound
fistl
cmp
dec
scas
rcrb
subl
popa
cmp
jae
jo
jo
jo
pop
pushfw
leave
inc
movsl
sbb
xor
xchg
mov
push
push
push
inc
adc
dec
pop
je
ja
outsl
int3
imul
mov
push
addr16
jo
jo
insb
dec
dec
mov
adc
dec
outsb
add
imul
insl
jae
adc
push
leave
add
dec
xor
mov
push
push
inc
insl
rolb
enter
outsl
cmpsb
je
sbb
je
into
sbb
jae,pt
cli
xor
jns
aad
in
push
loopne
cmpsb
movsb
outsl
jbe
adc
stos
lds
inc
shlb
enter
push
adc
movsb
push
in
or
cs
pop
sbb
js
daa
inc
push
ss
cs
adc
jae
adc
xor
pop
push
sbb
or
into
xchg
push
dec
jo
fs
adc
es
cmpsb
sbb
push
aad
inc
cmpsb
lcall
test
insb
insb
add
insl
push
cs
inc
es
inc
pop
push
cmpsb
cmpsb
lret
push
xchg
and
ljmp
xor
mov
inc
inc
test
add
mov
push
adc
jns
insb
popf
mov
sbb
sbb
es
sahf
cmp
jae
push
outsb
and
sarb
mov
pop
insb
push
jl
es
or
adc
outsb
or
dec
jb,pn
ficoml
push
inc
outsb
fcoms
sbb
adc
cmp
xchg
scas
xchg
punpckhbw
shll
push
aaa
pop
jno
push
push
aam
mov
cmp
mov
bound
pop
cmp
int3
dec
jae
fcoms
outsl
cmp
lea
into
orb
lock
jo
into
addr16
lret
push
outsb
inc
aam
fildll
hlt
push
es
pop
shrb
arpl
mov
pushw
stc
push
sub
push
mov
sbb
scas
or
jp
mov
sub
pushf
mov
pop
lcall
decb
aad
dec
lock
das
shll
push
dec
and
xchg
dec
mov
rorb
xor
inc
mov
jbe
sahf
ljmp
xchg
call
jne
mov
aam
mov
nop
sub
mov
imul
ficoml
pushw
cs
scas
xor
xor
sarb
push
cld
dec
xor
dec
inc
cmp
or
sub
jnp
les
pop
stos
ds
sub
sub
mov
mov
stos
ss
cltd
je
mov
popa
cmp
mov
xchg
sub
sub
and
pop
in
and
loop
push
stc
push
push
movsl
les
sub
pusha
gs
je
jb
push
jp
ljmp
je
mov
insl
xor
jae
mov
push
dec
sbb
xor
mov
sbb
bound
sbb
push
sbb
and
push
mov
push
sub
cmp
inc
push
lock
gs
pop
inc
and
xchg
jbe
ljmp
pop
arpl
test
jb
sub
arpl
lock
and
gs
and
adc
push
insl
sub
jne
clc
jbe
sbb
pop
shrb
lret
dec
fmul
insl
out
and
inc
inc
lea
pop
sub
loop
and
pushf
call
pusha
lods
fs
push
cmp
sbbl
stos
pop
lcall
stos
add
or
pop
mov
mov
sbb
out
adc
push
sbb
mov
push
shlb
push
jl
ds
pop
fbld
mov
or
pop
inc
jle
lds
xorb
ljmp
xchg
pop
popl
inc
rol
ja
jb
and
lret
scas
push
in
xlat
sub
push
scas
or
fwait
sub
sbb
cmp
jo
pop
inc
bound
andps
cmp
dec
pop
add
push
daa
inc
lret
sub
jmp
jle
inc
lds
mov
push
ds
sbb
push
or
dec
jb
and
push
and
clc
and
sahf
pop
sub
ss
sub
sub
jae
sbb
xor
sub
push
or
push
popa
push
pop
ss
lret
cmp
inc
sahf
out
push
xadd
bound
bound
mov
hlt
mov
sti
nop
and
scas
push
dec
imul
sbb
mov
sbb
adc
mov
dec
jae
mov
adc
mov
xchg
int3
adc
mov
inc
ret
dec
mov
stc
sub
xchg
scas
pusha
lods
xchg
dec
dec
and
cmp
int3
and
stos
or
ljmp
and
pop
inc
cmp
insb
or
sub
push
push
cmp
in
and
rolb
cmp
es
jbe
adc
lret
repnz
lods
test
popa
jno
dec
loop
ss
push
cltd
cwtl
adc
push
pop
int3
mov
push
adc
test
sbbl
pop
push
mov
jns
xchg
fwait
pop
les
test
xchg
jb
dec
imul
sub
je
inc
mov
mov
andb
fsts
sub
sub
sbb
fbstp
sub
pop
push
cs
dec
xchg
dec
bound
push
add
pop
sbb
arpl
icebp
push
cmp
sub
push
dec
dec
sbb
xor
adc
out
jns
imul
push
push
dec
int3
das
je
sub
dec
xchg
sub
push
jbe
dec
popf
xor
jl
adc
push
push
hlt
xchg
outsl
and
or
push
pushfw
push
push
inc
xor
ret
push
mov
sub
push
imul
outsb
inc
pop
and
sub
inc
je
and
insl
je
adc
dec
dec
fs
sahf
cli
jp
push
sbb
push
adc
andb
sbb
mov
xor
adc
and
xchg
pop
loop
push
test
add
out
dec
adc
js
dec
insb
mov
mov
mov
mov
sub
cmpsl
mov
loop
dec
dec
stos
add
imul
mov
adc
and
js
je
out
lahf
xchg
sub
push
mov
nop
mov
orb
cmp
cmp
cltd
and
xor
sub
xor
popf
cmp
mov
in
popf
fidivrl
pop
pop
and
cmpsl
inc
bound
iret
mov
sub
sarb
sahf
mov
lods
sahf
hlt
push
adc
add
mov
popf
mov
clc
cli
pushf
inc
shl
cli
je
push
dec
xor
fdivs
pop
mov
pop
sub
push
pop
cmp
data16
hlt
gs
mov
gs
jp
sahf
outsl
xchg
sub
add
and
and
xchg
test
and
imul
inc
and
jo
sbb
cmp
arpl
xchg
sbb
inc
mov
push
hlt
int3
push
inc
loop
jle
xor
push
and
dec
int3
and
cmpsb
push
dec
dec
mov
sahf
pop
inc
push
popf
pushf
mov
pop
and
cld
pop
loopne
or
ficoml
xchg
cmp
jo
jmp
cwtl
fs
xchg
xchg
sahf
sbb
adc
mov
adc
dec
repnz
neg
shlb
push
jb
pusha
dec
jb
cmp
inc
push
jns
jns
imul
push
and
adc
push
xchg
lock
outsb
push
lret
mov
inc
dec
pop
cltd
mov
push
sbb
push
xor
arpl
fs
adc
add
in
cmp
sbb
leavew
insb
xchg
outsb
push
or
push
push
dec
dec
mov
sbb
pop
loop
dec
test
or
lret
pop
adc
xchg
ds
push
sub
lods
rolb
lret
push
movsl
js
and
test
gs
jns
sub
push
in
push
or
loopne
inc
ds
add
and
xchg
push
fs
loop
and
add
sbb
cltd
inc
pop
lods
or
fs
add
repnz
pop
sbb
jle
xchg
jae
mov
push
xchg
adc
push
sub
int3
jo
loopne
mov
dec
stos
cltd
mov
xchg
in
imul
sub
in
or
dec
rclb
add
add
in
xchg
movsb
sub
into
in
cwtl
jo
push
push
popa
mov
mov
sub
in
xor
xchg
insb
jno
cmp
popf
movsl
insl
xchg
frstor
mov
imul
push
into
pop
or
mov
push
dec
je
sar
hlt
aam
cld
adc
mov
repnz
jp
push
icebp
push
or
push
sahf
xchg
pushf
push
pushf
sub
inc
jne
mov
lret
mov
and
clc
push
loop
push
cmp
jns
mov
mov
push
leave
mov
lcall
and
dec
sub
ret
inc
dec
xchg
mov
pushf
inc
and
dec
je
jo
and
mov
cmp
fcmovnbe
inc
dec
mov
push
push
adc
cwtl
outsl
cltd
sahf
add
dec
mov
pop
sbb
rcr
dec
add
fsts
inc
sub
add
xchg
sbb
les
shll
push
xorb
inc
shrl
imul
ljmp
add
test
push
cmp
cltd
jo
dec
out
adc
xchg
pop
mov
data16
mov
mov
dec
addr16
sub
pop
loopne
xchg
sub
addr16
xchg
or
lcall
es
jl
lret
in
xor
into
out
sbb
mov
cmp
mov
outsb
xor
pop
inc
out
ret
outsb
aam
lret
push
pop
cmp
lods
test
ds
clc
insb
mov
bound
xchg
pop
xchg
jbe
jne
sub
lods
call
movsb
or
sbb
repnz
or
lock
mov
adc
and
js
fs
inc
dec
je
in
out
jbe
mov
gs
inc
dec
mov
cmp
inc
sbb
insb
and
push
mov
xor
mov
mov
roll
sbb
fidivs
les
out
mov
or
dec
enter
pushf
xchg
imul
jbe
inc
adc
hlt
sub
movsb
js
xchg
sahf
jb
mov
pushf
movsb
jl
xchg
lcall
push
shlb
insl
outsb
das
dec
or
xchg
dec
sahf
add
cmp
push
push
clc
xchg
jbe
and
mov
adc
clc
xchg
adc
mov
test
call
dec
dec
cwtl
mov
movsl
and
and
jbe
sub
pusha
leave
push
loopne
je,pt
xchg
push
xchg
jp
jae
mov
sub
add
push
call
push
mov
jnp
dec
pushf
sbb
movsb
push
cs
sbb
mov
fs
sub
mov
xchg
popa
in
pusha
lahf
cs
pop
cli
pop
add
mov
mov
xchg
in
cmpsl
ss
push
inc
rcrl
repz
pop
pushf
sub
inc
stos
sbb
loopne
xor
jbe
push
push
mov
dec
or
xchg
sbb
dec
js
lods
push
cltd
insl
sbb
jp
jle
ljmp
and
mov
shl
push
rolb
stos
es
push
bound
outsb
sbb
pop
sub
mov
lret
push
sub
insb
dec
repz
push
insb
sbb
dec
fisubl
aam
jp
or
add
dec
adc
popf
in
lods
rol
jb
adc
out
daa
jns
mov
imul
mov
pop
pop
fld
outsl
xor
jae
dec
jns
das
ficomps
xchg
stc
xor
sub
insb
cmp
notb
popa
out
xchg
mov
shll
jno
inc
sbb
mov
icebp
in
adc
cmp
lahf
mov
jle
cli
xchg
rclb
xor
inc
and
inc
xchg
rolb
xchg
push
jo
es
push
rorb
cli
and
je
and
in
cmp
dec
imul
push
adc
data16
daa
or
lahf
outsb
cmp
lods
lods
ss
mov
inc
mov
gs
outsb
xor
lods
shl
push
cmpsb
dec
inc
ret
insl
xchg
jo
js
sub
pop
push
xchg
xor
out
dec
rclb
dec
insl
notb
inc
mov
jae
dec
mov
sbb
adc
int3
clc
fs
ss
mov
sub
insl
inc
daa
cmp
or
ljmp
mov
push
push
jp
mov
call
mov
loop
mov
jbe
push
test
adc
hlt
movsl
mov
daa
lds
test
jbe
jo
mov
pop
sub
mov
in
dec
push
subb
push
mov
mov
inc
je
sub
add
add
and
nop
adcb
ljmp
adc
sub
scas
shl
push
push
xor
adc
dec
dec
outsb
movsl
adc
or
jb
in
xor
and
push
ret
xchg
mov
sahf
aam
lds
les
sti
jp
jle
jb
test
and
xchg
push
jns
rorl
and
div
push
sub
dec
inc
and
clc
imul
xchg
add
pop
dec
movsb
jo
add
pop
sbb
mov
or
insb
sbb
and
clc
or
mov
xchg
mov
in
xor
or
or
cmp
aas
add
pop
cld
mov
data16
inc
mov
test
movsl
test
testl
mov
mov
leave
adc
shlb
mov
clc
adc
mov
dec
jb
arpl
js
aas
cmpsl
adc
jae
iret
xchg
mov
jo
sbb
mov
mov
cs
inc
shr
inc
dec
lcall
stc
cli
lds
jb
cs
xchg
and
jbe
pop
repnz
push
mov
or
fwait
js
dec
jo
es
adc
pop
js
icebp
aaa
pop
js
pop
mov
lods
push
sahf
jl
push
data16
negb
fsubrs
cmp
pop
ficompl
pop
das
mov
pop
push
jge
les
insb
jecxz
mov
gs
dec
rclb
jp
lcall
inc
hlt
cli
sub
cltd
cs
or
dec
cmp
xor
stos
mov
push
data16
in
aam
jbe
push
xchg
push
mov
push
dec
sub
jbe
and
imul
call
ljmp
lock
aas
rorb
in
int
and
push
mov
mov
hlt
and
in
push
in
test
fiaddl
aad
sub
jle
cmp
daa
inc
push
ljmp
cwtl
jmp
adc
mov
mov
pop
mov
sbb
lret
jne
fcoml
pop
sbb
xchg
inc
xor
popf
adc
xchg
lret
xor
fs
mov
jmp
adc
push
jl
mov
inc
sub
push
or
shll
cmpsb
mov
mov
frstor
je
loope
sub
jecxz
addb
fs
out
test
mov
inc
or
xchg
in
xor
inc
push
pushf
xor
inc
into
or
fildl
test
loop
xlat
popf
add
movsl
dec
daa
or
xchg
les
imul
inc
mov
insl
outsb
sub
call
movsb
sub
mov
push
inc
push
mov
inc
addr16
js
mov
in
pop
and
xor
mov
sbb
movsb
cmp
lahf
aaa
loopne
or
mov
cmp
das
push
fistl
push
xchg
cmp
xchg
adc
xchg
mov
popa
mov
pop
or
imul
lods
stc
mov
data16
or
xchg
lds
and
jb
jb
xor
inc
loopne
xchg
dec
cld
dec
adc
pushf
dec
dec
shrb
outsl
sub
in
movsb
xlat
jge
or
mov
cmp
inc
inc
xor
jp
aaa
xor
aas
cmp
lock
mov
or
fisubs
jg
inc
inc
testb
xor
xor
inc
ss
pop
inc
cli
xor
inc
cmc
sti
sahf
or
xor
xor
arpl
js
inc
idivl
aaa
push
fistpll
mov
sbb
jge
ss
jmp
in
outsl
jb
insl
xor
gs
xchg
jle
ja
jo
syscall
push
imul
dec
shll
mov
jbe
inc
cmp
sti
or
adc
adcb
add
add
jl
or
inc
je
inc
popa
out
outsl
or
push
xchg
inc
push
addb
inc
inc
add
push
dec
push
pop
inc
dec
out
push
jl
lock
enter
ja
push
gs
or
imul
or
dec
popa
insl
gs
push
or
jg
jae
shll
dec
inc
out
cltd
jns
stc
or
dec
in
fs
jb
popa
jl
fcmovne
cmp
or
insb
jae
push
add
arpl
pusha
or
push
ret
addr16
dec
fs
inc
push
int3
jbe
or
fsubrs
push
jns
adc
push
addr16
push
cmovae
dec
fimull
les
ret
or
jle
addr16
stos
imul
and
and
dec
outsb
push
mov
inc
imul
gs
or
push
sbbb
pop
or
outsb
dec
xor
push
sbb
and
adc
sbb
push
fs
xor
cmp
jge
jle
vmwrite
arpl
ss
and
adc
fiadds
jne
or
arpl
dec
mov
popa
addr16
mov
sbb
fistl
stos
adc
mov
dec
mov
inc
test
mov
scas
mov
dec
push
inc
push
movsb
adc
scas
mov
stc
pop
xchg
push
adc
dec
fstp
sub
push
or
push
inc
lret
inc
or
or
test
inc
lret
push
mov
and
mov
inc
and
pushl
or
je
fisttpll
add
add
frstor
adc
mov
js
mov
and
xchg
and
add
push
and
add
xor
xor
xor
outsb
jbe
mov
mov
insb
pop
in
adc
inc
mov
cmc
jae
es
inc
filds
jo
sub
movsl
das
push
jb
nop
scas
push
cmp
ds
pop
popa
and
gs
fs
pandn
addl
push
adc
addr16
pop
faddp
movsl
arpl
jae
das
stos
sub
iret
or
ret
xchg
adcb
imul
add
jb
cli
or
add
mov
push
std
dec
adc
add
add
add
nop
add
pop
cmc
les
cmp
rorl
inc
adc
pusha
add
add
add
icebp
stos
mov
sarb
inc
dec
mov
mov
lea
adc
movsl
fdivrs
push
in
jmp
inc
loop
xchg
adc
jnp
leave
iret
and
repnz
add
icebp
mov
rep
rcll
int3
dec
out
pop
outsl
sbb
inc
push
mov
adc
cld
lock
pusha
test
ja
repnz
popa
jl
mov
add
add
mov
call
call
cmpl
jne
mov
mov
jmp
mov
mov
call
jmp
and
add
add
add
lea
lea
xor
jmp
cmp
add
add
mov
pushl
add
pushl
add
call
add
add
cmpl
jne
cmpl
je
cmpl
je
call
lea
call
mov
or
je
add
call
cmpl
jne
mov
jmp
add
cmpl
jne
jmp
add
mov
mov
add
call
add
push
push
push
push
push
call
mov
pop
pushl
push
call
add
jmp
cmp
xor
add
add
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
add
mov
call
call
call
call
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
push
pushl
call
test
je
jmp
add
call
add
mov
mov
addl
mov
cmpl
jne
jmp
inc
cmpb
jne
inc
add
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
movl
add
mov
cmpb
jne
call
push
push
pushl
call
jmp
and
add
or
fimuls
add
call
cmpl
je
jmp
jmp
popa
jmp
pusha
push
push
push
push
call
mov
push
lea
lea
push
push
call
add
add
jmp
dec
cmpb
je
sub
inc
mov
mov
lea
rep
pop
push
push
push
call
popa
ret
add
inc
add
rolb
inc
inc
add
rolb
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
jmp
or
clc
arpl
imul
gs
xor
cs
insb
add
fs
xor
or
inc
fs
push
fs
bound
adc
or
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
push
jb
je
arpl
push
imul
jb
add
add
add
or
add
ret
loope
add
mov
mov
cmpl
or
mov
xchg
or
push
mov
test
fadds
popf
mov
pusha
mov
ja
mov
sbb
movl
jmp
repz
nop
inc
add
and
push
call
xor
addl
or
cmp
mov
cmp
loopne
adc
add
xchg
ret
mov
addl
add
cmp
sbb
pop
sbb
shll
and
sbb
inc
dec
jb
mov
pop
jne
popa
and
pop
pop
pop
decb
mov
mov
xor
sub
add
pop
lea
sub
test
testb
mov
bswap
sub
add
sub
mov
jge
jae
lock
lock
loopne
push
shr
sub
adc
sub
daa
js
sub
stc
jbe
cmp
mov
dec
or
das
mov
pop
or
mov
pop
and
push
dec
cmp
push
sub
lcall
cltd
xor
sbb
jne
mov
push
push
push
push
and
testb
or
sbb
pop
add
cmp
or
rorb
mov
xor
inc
push
push
push
aaa
lahf
ljmp
push
mov
and
aas
pop
cwtl
jmp
jmp
sub
and
xor
push
or
jo
sti
sti
lea
rolb
jne
push
jmp
test
push
jne
jne
adc
or
cmpsl
sub
pop
add
jmp
push
push
mov
jmp
inc
pop
addb
pop
pop
je
cmp
notb
jmp
pop
inc
into
es
mov
push
jnp
sub
or
jne
fnsave
or
xorb
jmp
sbb
or
add
adc
push
lahf
or
call
push
pop
sbbb
sub
jp
cmpl
stos
jne
pushl
adc
push
mov
loope
xlat
lock
jl
adc
pushl
push
lea
push
cmp
enter
les
inc
jmp
add
pop
push
jbe,pn
dec
inc
test
adc
and
add
das
sbb
xor
out
push
test
test
fcomps
xor
test
popa
mov
ret
pusha
cmp
adc
mov
sub
push
add
xor
nop
ret
call
cld
enter
addr16
and
inc
sub
inc
aam
and
pushl
movsl
jecxz
insl
notl
or
popl
popa
ret
push
mov
or
push
mov
mov
fcoms
xchg
mov
mov
mov
and
mov
and
adc
movl
dec
dec
jecxz
pop
or
outsb
shrb
sub
cmp
add
int3
adc
in
xchg
ljmp
ja
fildl
jg
adc
cs
rcr
xlat
mov
pusha
pushl
js
sbb
repz
add
and
jecxz
dec
cmp
jae
mov
jne
fsubr
jmp
dec
adc
jb
jns
mov
addr16
push
dec
enter
mov
je
out
xor
xchg
adc
bound
add
cmp
mov
dec
sahf
push
pop
iret
testl
mov
sbb
ds
push
addl
call
mov
fsubl
cmpsl
roll
dec
ret
mov
orb
push
ret
jp
incl
scas
mov
leave
or
push
popa
mov
je
negb
and
xchg
cmp
frstor
and
loope
jmp
je
cmpl
sub
or
sbb
sbb
or
je
popa
pop
mov
lods
push
cltd
cwtl
mov
pop
shlb
nop
ljmp
sahf
push
shlb
sbbl
cmp
aaa
cmp
adc
js
nop
pop
test
dec
das
pop
xor
rcrl
pushaw
xor
test
xchg
ret
push
mov
lock
into
cmp
das
sbb
mov
sub
in
lcall
mov
hlt
cmp
leave
mov
and
dec
insb
push
lock
int
inc
subl
dec
push
or
aad
loopne
adc
mov
fcoml
dec
adc
mov
cmp
and
bound
add
dec
and
pop
das
inc
dec
data16
insl
mov
mov
pushl
daa
insl
adc
iret
adc
xor
stc
int3
lods
cltd
add
dec
call
xor
adc
xor
xchg
inc
nop
cmc
sbb
dec
xchg
or
adc
dec
cmp
xor
push
call
add
adcl
mov
push
mov
mov
inc
and
xchg
lea
and
xor
and
fcomps
in
push
mov
flds
push
dec
xor
or
sub
sahf
sub
sbb
lcall
sbb
hlt
jne
add
pop
rol
xor
in
jl
out
ljmp
rolb
insb
sbb
sub
mov
add
adc
fcoml
cmp
push
aas
mov
dec
or
test
nop
imulb
or
jno
je
nop
adc
jne
std
pop
test
jo
mov
push
push
mov
jnp
xchg
enter
dec
xchg
jle
aas
xor
inc
dec
rcrl
push
imul
imul
xlat
cwtl
mov
lea
push
pop
mov
jmp
sarb
inc
popa
inc
mulb
xor
lods
xor
cmove
pop
or
sbb
push
add
jp
mulb
mov
add
inc
push
push
xor
inc
cli
xor
stos
cltd
jmp
inc
movsl
mov
lea
add
sbb
sub
adc
hlt
popa
repz
jmp
xchg
xchg
hlt
iret
inc
test
dec
pop
dec
mov
adc
enter
xchg
add
jmp
movzbl
cmp
outsb
pop
repz
adc
pop
and
xor
pusha
call
jmp
sbb
jnp
pop
jne
movl
dec
cli
es
jb
mov
xor
rol
inc
rorb
rdtsc
pop
and
sbb
pushl
push
dec
clc
mov
pop
popf
xor
sub
and
sbb
nop
sub
xor
or
add
add
popl
iret
xchg
mov
mov
mov
int
inc
movl
and
lret
and
push
or
dec
xor
and
xorl
fiaddl
push
dec
add
sbb
lods
or
mov
lret
nop
add
mov
jl
sbb
push
push
sub
mov
jne
jmp
inc
cmp
data16
test
out
jo
ret
pusha
push
fildll
cmp
fwait
js
fyl2x
jnp
in
stc
xor
testb
shrl
divl
or
inc
cmpb
das
cmc
cmp
sub
inc
ret
jae
jb
and
jmp
or
and
mov
jns
inc
sbb
rcrl
nop
or
push
fs
xor
mov
mov
add
mov
ja
icebp
clc
or
jg
dec
add
imull
sbb
sub
xchg
js
mov
mov
jb
xor
cs
push
cmovne
lahf
outsl
cs
inc
imul
fcmovnb
and
cld
outsb
data16
sbb
sti
jbe
jb
bound
sbb
and
je
mov
and
fs
bound
and
fdivs
push
xor
jle
sbb
jo
je
lods
jae
sub
jle
data16
popa
insb
dec
cmp
inc
jo
sbb
je
outsl
outsb
fistpl
adc
jb
lods
inc
les
ret
push
addr16
inc
dec
fldcw
outsl
out
push
sahf
and
jae
ja
lret
jns
idivb
outsb
jbe
dec
outsb
divl
push
les
xchg
fsubrl
notl
ja
cmp
lret
outsl
sbb
sbb
gs
jl
push
outsl
and
outsb
push
inc
aas
or
mov
dec
mov
outsb
mov
sbb
mov
xchg
mov
dec
lods
mov
sub
sub
lcall
out
xor
dec
cmc
cmp
arpl
jns
mov
rcrl
std
nop
dec
xor
inc
mov
imul
movsb
and
fwait
jbe
sub
push
stc
mov
xor
cmc
in
xchg
pusha
orb
ja
xchg
xor
int
push
sbb
sub
jo
test
shrb
sub
insl
jbe
dec
push
ja
add
test
sub
stos
jo
lret
into
rclb
sub
inc
mov
dec
mov
scas
aad
je
push
mov
jns
cmpsl
cltd
ds
xchg
mov
fs
push
add
hlt
loop
iret
mov
add
sti
xchg
and
and
dec
pushf
mov
add
mov
push
add
and
inc
inc
ret
sub
lcall
adc
cmp
pop
das
add
cmp
aaa
sub
mov
cwtl
push
dec
inc
push
inc
or
push
push
adc
push
adc
push
pop
xchg
popa
or
cli
sbb
jge
cmpsl
or
dec
or
push
push
push
or
add
bound
jecxz
bound
int3
sub
xchg
sbb
leave
sbb
jmp
cmp
out
push
test
out
cmp
fists
out
mov
out
mov
dec
shlb
fistl
jl
cmp
mov
jae
insl
push
jns
bound
push
movsb
sub
movsl
aas
lods
in
test
push
in
addr16
push
push
insl
mov
fdivrs
add
sbb
loope
insb
push
cwtl
int3
or
add
aam
sub
inc
cld
add
aad
mov
repnz
and
pop
f2xm1
lcall
lds
jnp
add
pop
or
adc
pop
or
rolb
xchg
push
xor
movsl
sbb
wbinvd
mov
pop
jbe
daa
imul
ja
dec
fistpl
imul
push
sbb
or
xchg
scas
cmovo
add
out
sbb
inc
push
dec
dec
and
test
jns
out
lods
sub
imul
mov
pop
adc
mov
dec
jo
inc
cmp
cmp
jo
fs
mov
mov
add
cs
adc
pop
in
jbe
sti
or
stos
sub
push
clc
adc
rolb
xchg
adc
test
mov
sbb
inc
add
inc
aad
dec
jo
inc
jbe
and
fs
adc
or
sbb
add
clc
mov
loopne
or
inc
outsl
jo
dec
xor
add
xor
fists
repz
popl
jne
push
sub
cld
shlb
add
subl
cmp
cmp
lret
or
push
repnz
jno
test
xchg
mov
dec
add
xchg
not
mov
sub
fiadds
test
mov
sbb
mov
popf
sete
add
ret
call
js
hlt
push
xchg
jo
ds
das
add
int3
addr16
cmpsb
or
pmulhuw
mov
ss
lock
jno
xchg
push
lea
imul
sti
ljmp
add
mov
jae
dec
test
mov
movsb
ja
and
pop
repz
in
mov
jecxz
sub
inc
or
stc
test
cmp
out
dec
xlat
cli
add
dec
mov
push
fcomp
cli
orb
xor
pop
mov
xchg
lret
pop
lods
cld
add
stc
fsubr
add
xor
mov
sbb
in
sub
cmc
out
add
enter
sbb
cmp
push
mov
dec
or
mov
clc
and
add
mov
or
jmp
idivl
add
inc
xor
cmp
mov
adcb
orl
sar
out
mov
xchg
pop
mov
scas
jecxz
jmp
movsl
sub
cmc
jo
jb
xor
stc
fdivrp
mov
xor
xlat
dec
xchg
sub
dec
sbb
clc
inc
cli
jmp
lods
popa
call
cmp
sbb
mov
add
dec
dec
inc
pop
cs
cli
stc
add
ljmp
push
add
cld
cmpsb
xchg
add
loopne
or
jp
mov
rcrl
cmpsl
sub
xchg
pop
iret
roll
mov
inc
lcall
add
jge
jo
add
jb
call
and
mov
cmp
std
push
out
push
fmull
aam
pop
and
sub
jns
mov
mov
xorl
pop
mov
lret
cmc
cmp
fisubs
adcb
cld
jb
cmp
inc
add
mov
add
xchg
sbb
add
daa
sarl
mov
inc
shlb
push
jecxz
repz
or
sub
movsb
or
pop
enter
dec
push
push
mov
sub
cmp
shll
pop
cli
sub
push
loopne
iret
arpl
dec
inc
mov
add
xchg
pop
jecxz
mov
stc
dec
int
repz
movsb
dec
pop
push
xchg
sub
in
daa
cmp
sbb
popa
jp
mov
ja
add
out
and
pop
push
xchg
push
add
sub
mov
popf
inc
add
das
mov
adc
aad
adcb
les
jnp
leave
mov
and
add
loope
add
add
jnp
sbb
push
je
unpckhps
daa
mov
fcoml
outsb
stos
add
stc
mov
loope
sahf
lds
xchg
xchg
test
loopne
add
not
jns
lea
mov
push
mov
inc
add
add
sbb
xor
and
addb
inc
das
cmc
push
add
mov
aaa
or
add
mov
ljmp
mov
add
cmc
xchg
or
inc
pushf
xor
cmp
incb
movsb
fadds
add
push
push
roll
xor
sbb
js
lods
mov
adc
push
jno
and
arpl
jecxz
add
lea
xchg
push
push
add
jno
and
cli
ud2
aad
inc
loopne
sub
mov
mov
testl
dec
lods
xor
pop
mov
add
repz
push
add
push
shl
pop
andl
mov
sbb
mov
add
sub
jnp
add
pushf
sbb
add
mov
sub
gs
pusha
fstpl
into
dec
xchg
aas
jecxz
add
push
inc
js
fdivs
xor
push
popf
mov
dec
lahf
add
mov
loopne
lods
cli
pop
or
adc
shrb
jnp
cmp
fstp
cmpsb
xchg
add
xlat
mov
int3
add
test
pop
jnp
arpl
add
cmp
and
pusha
add
call
sub
cmc
sub
push
add
bound
orb
je
jns
lcall
jae
mov
sbb
std
scas
and
subb
stos
jl
hlt
mov
xorb
je
dec
das
loopne
loop
sbb
jge
mov
addb
pop
xor
pop
bound
and
pop
xchg
inc
cmp
scas
sbb
dec
push
outsb
xchg
jno
add
adc
jmp
daa
or
push
push
pop
xor
out
or
arpl
sti
call
jge
xor
rclb
add
xlat
in
push
lcall
stos
inc
cmpsb
dec
aaa
add
mov
lock
inc
ret
insl
push
add
xchg
mov
add
stc
mov
fstp
out
inc
imul
ja
add
inc
dec
xor
cmp
pop
enter
push
push
out
jle
aad
push
fwait
ret
push
cmp
adc
sti
shl
push
ds
andb
push
add
and
loop
mov
in
xor
or
dec
and
mov
jno
add
aaa
stc
cli
and
push
in
add
cmp
add
scas
ljmp
add
and
add
and
stos
int
mov
insb
fnstcw
shll
je
pop
out
ret
or
mov
int3
sbb
add
mov
mov
adc
sti
mov
out
addr16
push
add
adc
jle
fadd
add
icebp
or
add
lahf
or
pop
mov
jne
jmp
jg
mov
mov
dec
int
sbb
repz
fisubs
jo
das
add
gs
add
inc
jle
push
push
add
scas
arpl
popf
int
jae
xor
xchg
cmp
add
fdivl
jno
std
jae
add
cmc
in
je
shll
add
test
push
inc
cmpl
out
add
jg
adcb
mov
out
call
sub
pusha
push
sbb
std
push
xchg
movl
and
jecxz
xor
add
mov
popf
mov
xchg
inc
xlat
sti
mov
test
pushf
mov
sub
add
or
mov
lock
ss
mov
jbe
es
mov
pop
xchg
ret
adc
mov
or
lahf
rcrb
repnz
movsl
out
insl
mov
push
mov
push
lds
mov
int
fistps
ss
cmp
pop
inc
andl
in
dec
outsl
repnz
lret
mov
test
cmp
adc
push
icebp
xor
in
in
push
inc
or
cmp
shrl
add
or
push
xchg
and
aaa
sub
xchg
jmp
mov
inc
addb
adc
data16
mov
enter
add
xor
pop
sub
pop
add
jo
cmp
icebp
xor
add
mov
mov
das
insl
loopne
inc
es
fwait
insl
add
fistpll
pop
mov
sbb
loop
jne
jmp
fcomps
lds
inc
mov
pop
xchg
or
cs
pop
add
sub
push
adcl
in
outsb
add
fsubrs
and
adc
add
es
cmpb
push
imul
add
test
ret
loopne
add
aas
lea
sub
and
test
inc
repz
loop
mov
cmpl
jb
add
clc
ds
adc
jge
ss
xrelease
inc
lock
imul
shrb
dec
jnp
add
stos
popa
shrb
lods
flds
inc
inc
dec
xchg
and
es
dec
lret
mov
mov
cmc
loopne
mov
aam
xor
pusha
clc
loop
nop
cmp
pop
fnstcw
pusha
ss
clc
lret
sbb
daa
ja
test
fdivl
jno
mov
or
lods
imul
xor
