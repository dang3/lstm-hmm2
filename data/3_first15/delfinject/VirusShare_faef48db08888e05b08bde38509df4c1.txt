mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
jns
incl
imul
add
scas
adc
sti
ja
mov
jg
mov
or
jae
jb
or
push
int
pop
push
mov
out
push
int3
rol
or
sub
fdivrp
repz
push
dec
bound
arpl
pop
sbb
push
push
jns
pushf
insl
xor
dec
fwait
insl
clc
push
jmp
arpl
rcrb
jo
inc
add
clc
jmp
mov
push
push
imul
es
out
xchg
xchg
subl
cs
cld
sbb
out
aas
int
pop
orl
out
adc
dec
jb
and
push
sti
pop
xchg
loopne
loope
adc
or
xor
pop
jno
imul
dec
add
push
pushf
leave
leave
leave
leave
cwtl
xchg
nop
adc
leave
leave
leave
mov
leave
leave
adc
leave
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
leave
leave
leave
leave
or
dec
dec
in
in
in
daa
clc
hlt
inc
aas
dec
outsb
mov
inc
paddsb
call
cmp
xor
sub
lds
mov
call
xchg
out
idivb
add
mov
and
mov
ss
pop
ret
addr16
and
mov
mov
add
stos
out
call
dec
and
insb
inc
fs
inc
pop
je
outsl
outsb
and
xor
or
mov
push
nop
jb
and
imul
outsl
data16
ja
je
mov
push
push
je
popa
inc
inc
gs
insb
outsl
jo
jecxz
sub
mov
ret
cmpsb
mov
mov
mov
mov
in
add
inc
push
dec
add
inc
or
and
sub
dec
shll
adc
mov
cmp
inc
adc
sbb
sbb
sub
push
pop
imul
xor
cs
jp
add
jp
cmp
mov
lcall
dec
lcall
sub
xor
push
pop
xor
cmp
pusha
cmpsb
imul
inc
imul
xchg
into
sub
add
add
neg
jns
fistpll
out
mov
jl
push
cmp
add
js
and
mov
inc
pop
fs
add
dec
or
mov
ja
fsubs
add
nop
call
cmp
mov
mov
je
push
sub
mov
shr
movzbl
mov
jecxz
fcomip
and
pop
mov
and
ja
xchg
sub
ljmp
mov
lret
adc
push
add
lret
push
test
adc
les
divw
or
sbb
push
ret
pushl
sbb
hlt
outsl
mov
cld
add
orl
mov
xor
add
clc
cmp
sbb
andl
mov
cld
sub
jb
and
or
ret
cmp
mov
inc
push
and
add
rcr
pop
adc
push
add
js
rclb
ficomps
xor
or
push
mov
fmuls
push
lods
mov
loop
mov
sarb
out
mov
mov
mov
mov
filds
sbb
xor
mov
fwait
outsl
adc
cmpb
jmp
mov
fisttpll
out
mov
add
nopl
or
jne
jle
push
and
or
push
mov
lea
movb
mov
sub
pop
fwait
and
xchg
movb
inc
sub
mov
or
ja
pushf
pop
or
std
movl
pop
mov
sbb
add
or
adc
pop
pop
icebp
mov
out
mov
mov
sub
jae
jle
adc
mov
mov
add
or
ret
sbb
subb
in
jg
jns
add
jmp
or
cmp
in
mov
add
push
push
lea
or
push
inc
or
push
mov
push
mov
cmp
jbe
sub
add
jmp
test
jne
xorb
lods
fimull
mov
dec
mov
sub
int
dec
lock
nop
inc
loopne
repnz
sub
pusha
cmp
jp
pop
roll
cmp
add
lds
add
cmp
jbe
ljmp
mov
and
add
xchg
xor
push
mov
stc
syscall
pop
cmp
jne
andl
mov
stos
inc
push
cmp
jae
mov
xchg
out
into
add
dec
and
jae
fdiv
loope
jo
and
lods
iret
shll
sub
data16
mov
add
push
pusha
or
pop
pop
cld
mov
jmp
mov
push
std
sub
add
jbe
or
pop
ret
push
addr16
mov
fcomip
pop
mov
or
sub
shr
cmp
jb
sub
mov
addb
das
dec
and
out
mov
subl
cwtl
and
cmp
pusha
bound
dec
les
je
mov
dec
jo
push
mov
lock
mov
mov
push
add
idiv
je
sti
jg
test
add
movzwl
add
cmp
ja
dec
jbe
mov
cmp
adc
inc
loope
es
mov
lahf
jno
rorl
xorl
pause
jns
aas
jb
imul
jae
lods
cmp
ljmp
adc
je
xchg
or
jg
loopne
mov
sub
mov
add
or
mov
leave
cld
mov
cmp
push
ja
push
test
add
mov
xlat
jne
mov
push
jne
btr
cmp
add
mov
or
lock
mov
cli
dec
jnp
sub
lea
mov
inc
jmp
sbbb
das
add
mov
mov
xchg
iret
mov
divl
enter
iret
sub
sub
cmp
and
inc
sbb
mov
rclb
mov
ljmp
cld
testl
mov
mov
outsl
addl
and
loop
bound
add
sub
mov
addr16
mov
mov
pop
nop
sub
mov
movsb
adc
orb
sbb
sbb
xchg
shl
loopne
or
lock
loopne
push
je
push
sarl
or
jmp
mov
pop
mov
sarl
add
push
adc
mov
shl
push
xor
sbb
or
adc
fdivs
push
loopne
clc
sub
mov
jmp
mov
dec
mov
test
lahf
or
inc
les
roll
cmp
cmp
mov
push
rorl
pop
xorb
jb
or
push
push
xchg
or
divl
neg
mov
test
add
cli
nop
and
mov
test
rcrl
push
add
mov
dec
testb
popa
subl
je
pop
rorb
inc
inc
inc
fadds
data16
out
xor
xchg
dec
pop
mov
xchg
push
xor
stos
mov
dec
aad
inc
adc
cmp
mov
inc
and
push
cld
iret
bound
sub
xchg
xlat
hlt
cmpsb
cmpsl
scas
ljmp
outsl
jno
leave
cmp
or
aam
or
push
jb
and
clc
sub
call
loop
fmull
hlt
mov
scas
testl
jne
or
test
jae
adc
inc
cld
or
cmp
inc
push
ss
pop
xor
xchg
mov
xlat
sub
add
mov
pop
and
hlt
ret
lock
cmp
popf
fnstenv
sub
sub
subl
mov
lahf
inc
test
mov
cmp
sbb
add
fdivrs
movl
lret
or
sub
inc
inc
add
sbb
pop
push
in
or
jmp
pop
xor
cmp
jb
fsubrl
mov
sbb
sbb
lret
jb
jns
cld
pop
push
push
jb
mov
ret
adc
or
test
sbb
dec
or
push
mov
loop
roll
add
mov
push
jo
sub
xor
jbe
mov
call
xchg
xor
shll
lret
mov
cli
out
cmp
push
and
cmp
push
xchg
cvttps2pi
cmp
jb
inc
jbe
or
add
sub
adc
push
int3
push
and
mov
lea
add
sub
and
inc
jnp
sbb
add
or
addl
mov
cld
or
mov
push
popa
jae
rorl
or
pop
pop
push
std
mov
roll
xlat
sub
fsub
mov
addl
pop
lods
mov
mov
addr16
xor
inc
sbb
out
imul
add
mov
sbb
cmp
cmp
and
or
pop
insb
and
out
outsl
add
rorl
sarl
js
je
iret
ja
cmp
pushl
enter
add
xor
sub
adc
mov
add
lea
mov
or
add
push
jle
sbb
or
lea
jl
mov
add
jecxz
push
pop
add
outsb
inc
fistl
jae
pop
rorl
pop
ds
dec
iret
push
gs
rolw
ret
xchg
adc
cmp
dec
cmpsl
and
imulb
push
lea
jecxz
ja
fucomip
lea
or
jae
mul
xchg
fcmovnu
out
fstl
add
js
or
sar
mov
mov
das
ss
mov
faddl
rorl
ret
inc
incl
rolb
sbb
push
aad
adc
adc
jmp
jae
rclb
adc
aad
sub
and
jle
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
fwait
push
add
fisubrs
mov
stos
fcmovne
sbb
dec
mov
cmpsl
push
mov
mov
inc
pop
jo
mul
fs
mov
loop
pop
rcrl
mov
add
enter
mov
fadds
stc
rcr
incl
aas
wbinvd
shrl
xchg
popa
push
cmp
dec
aaa
sbb
in
mov
inc
cs
enter
lret
cmp
jg
xchg
push
es
aas
adc
ret
xor
inc
add
icebp
mov
pop
xor
inc
and
addr16
add
loop
in
push
inc
cli
mov
push
insb
js
arpl
fdivrs
shll
pop
fistpl
or
push
lock
push
jae
ss
mov
push
jge
sbb
add
push
mov
inc
sbb
add
push
out
mov
js
jne,pn
push
testb
je
adc
addl
mov
pop
pop
sub
sahf
push
nop
test
cli
loop
fbld
fucomi
add
push
data16
mov
fdivrl
in
imul
sbb
sbb
test
daa
dec
movb
jge
adc
lea
mov
and
daa
js
xor
sbb
add
in
mov
in
sbb
mov
push
xor
mov
dec
fistpl
pop
mov
dec
scas
mov
or
mov
mov
shr
int
mov
setne
jge
jmp
movsb
sub
aas
out
sub
push
inc
sbb
adc
add
dec
mov
out
add
lock
data16
jo
fwait
mov
mov
dec
icebp
mov
pusha
jl
inc
pop
mov
cmp
jne
add
aaa
adc
outsb
push
mov
or
sbb
or
sahf
add
dec
jne
mov
jo
loopnew
cld
mov
jg
arpl
shl
lea
add
decl
inc
in
adc
add
pop
mov
call
mov
and
adc
cmp
movb
adc
cmp
mov
je
movsb
enter
sbb
mov
or
cmpl
mov
xor
int3
or
dec
or
mov
adc
test
jle
sbb
cmpb
jp
mov
cmp
jb
jo
out
pop
imul
loopne
pop
clc
adc
push
sub
cltd
loopne
fidivs
mov
sti
das
in
fldenv
cmp
in
movq
lcall
or
pop
add
adc
sbbl
and
jbe
sbb
mov
pop
add
dec
jne
data16
inc
ret
xchg
ret
lea
xor
sti
push
and
mov
jb
clc
push
hlt
loope
cmp
add
or
movsb
mov
rcrb
xor
add
inc
add
les
pop
rcrl
lods
je
push
loope
insb
pop
jmp
mov
lea
jge
and
add
mov
and
xor
and
int3
aaa
jnp
sti
loope
xchg
cmp
ret
jecxz
movsl
cli
dec
push
add
mov
jle
ds
aaa
fs
sbb
adc
or
sbb
scas
mov
xchg
sti
adc
push
sti
mov
mov
mov
fidivrl
sbb
call
std
mov
sub
push
mov
outsl
aam
fadd
test
cmp
and
fsubl
popa
hlt
dec
jb
cld
dec
loopne
shrl
push
cmp
add
in
lods
inc
ja
scas
mov
xlat
jmp
xchg
cmp
ja
add
repz
fstpl
sbb
mov
xchg
in
daa
ljmp
cmp
fwait
jne
movb
filds
or
pop
inc
dec
adc
add
sub
pop
inc
mov
stos
or
dec
or
add
and
das
xchg
je
jmp
mov
cmp
jmp
xchg
push
push
sub
mov
sbb
inc
fmuls
js
pop
mov
mov
cmp
jmp
dec
pop
incl
cmp
andl
push
sbb
orl
jo
sbb
cmp
cmp
pusha
jb
inc
js
icebp
or
dec
mov
pop
je
inc
pop
sti
aad
emms
or
imul
sarb
adc
push
mov
pcmpeqw
add
and
outsl
ss
outsb
and
gs
enter
insl
gs
outsl
sar
shlb
popa
imul
popa
jae
outsl
arpl
mov
mov
mov
pop
pusha
scas
std
pop
jae
popa
insb
insb
and
dec
imul
add
nop
cmp
jae
out
cld
jg
push
outsb
imul
outsb
add
xchg
outsl
in
jge
imul
add
mov
insl
nop
outsb
and
inc
mov
out
lahf
mov
mov
mov
xor
mov
sbb
pop
add
sbb
repnz
out
add
cmp
jbe
mov
ja
adc
cmc
mov
add
cmp
jne
es
in
hlt
add
xchg
mov
aad
maxps
adc
inc
clc
or
sbb
inc
jns
inc
lock
rolb
ja
lcall
lods
jae
mov
or
call
jbe
stos
mov
jg
enter
loop
push
in
loopne
add
mov
push
sahf
out
xor
loope
lea
add
jne
cli
lahf
shll
jae
mov
mov
mov
cmp
lcall
xor
div
imul
mov
adc
mov
in
dec
inc
xor
clc
lds
add
pop
ret
mov
xchg
test
mov
mov
or
repz
loop
imul
jb
fistpll
mov
add
adc
sub
rcll
std
cmp
jne
mov
add
dec
adc
insb
inc
or
orb
dec
and
inc
cs
pop
add
or
push
jmp
pop
mov
lds
fimuls
or
cmp
mov
mov
imul
mov
sub
mov
ret
popf
int
adcb
loopne
sbb
sbb
call
xor
dec
adc
repz
mov
add
call
in
nop
xor
xor
adc
addr16
pop
test
or
shlb
mov
inc
xor
lods
mov
inc
pop
fdiv
out
mov
xor
jne
test
fildll
frstor
ss
sbb
mov
mov
mov
lds
cmpsb
push
scas
add
inc
sbb
pop
inc
mov
or
dec
loope
js
enter
mov
cmp
cmp
jg
dec
pusha
testl
dec
sbb
jne
lahf
cwtl
push
jmp
cmp
outsb
mov
sbb
movzbl
add
inc
mov
pop
inc
pop
test
and
mov
sbb
in
push
push
push
xor
sbb
loop
pop
jne
mov
addr16
mov
idiv
aaa
mov
jl
or
or
je
pop
jle
cmp
jg
sub
inc
xchg
pushl
fdivrl
sarl
mov
inc
rep
jmp
mov
jmp
xor
jmp
mov
jmp
mov
insb
ret
sbb
or
repz
lcall
je
cmp
ja
sub
jg
jmp
loopne
or
sub
or
test
mov
outsb
push
adc
mov
scas
dec
data16
cmp
repz
push
dec
dec
pop
popa
insb
mov
test
lea
dec
or
adc
flds
adc
jl
pushf
sbb
ret
jle
or
shrl
lret
in
jg
lock
jbe
adc
add
clc
sub
pop
mov
fiadds
fmuls
mov
or
mov
mov
adc
jmp
push
and
add
add
pop
fldenv
xor
push
add
ret
mov
out
xlat
push
fucomp
or
inc
dec
pop
lock
and
cmpb
ja
add
add
xor
mov
jmp
sub
es
outsb
adc
sub
add
push
jg
out
sbb
daa
rclb
out
mov
aad
inc
nop
enter
mov
pop
jne
imul
pop
mov
loopne
or
xor
ja
or
frstor
arpl
bound
pop
lahf
add
pop
or
push
lods
cmp
test
mov
jne
push
scas
dec
xor
cmp
jmp
stc
mov
imul
nop
xchg
dec
add
dec
jmp
scas
xor
mov
rclb
or
or
jg
in
inc
ljmp
fldt
scas
fildll
jne
inc
or
inc
mov
cmp
ja
cmp
jb
cmp
ja
sub
call
fnclex
fldcw
cmpl
push
sub
jp
fwait
sub
fwait
pop
pop
out
or
fldcw
fwait
cmp
mov
or
fldcw
push
add
fldcw
pop
inc
jp
dec
aad
sub
repnz
xchg
or
nop
daa
test
loope
pop
mov
jb
mov
mov
data16
jae
sbb
jne
cmp
rcll
sbb
pop
cmp
add
cmpsb
pop
cmp
and
hlt
inc
xor
adc
mov
xor
inc
jge
and
lcall
das
or
and
jne
mov
add
adc
and
sbb
lahf
jmp
cmp
mov
rol
jmp
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
std
stos
loopne
add
xlat
xor
mov
sub
jbe
mov
adcb
inc
xchg
xchg
lods
loope
fmull
sbb
lret
jbe
mov
mov
inc
sbb
add
and
lock
lods
push
xchg
inc
inc
in
add
ffree
ret
je
mov
mov
cmp
jne
dec
je
mov
mov
mov
pop
add
aaa
add
sahf
loop
push
fstpt
cmpsb
adc
add
add
push
cmp
jne
push
adc
dec
add
dec
add
adc
add
jne
add
jmp
pop
cmp
adc
std
jne
shr
sarl
add
aad
adc
push
mov
shr
push
jo
sarb
pop
cmp
push
clc
push
mov
shlb
ss
cmpsb
jns
mov
cmp
jne
dec
dec
dec
and
shlb
sbb
pop
jecxz
loopne
add
cmp
int
cmp
dec
movsb
pusha
push
add
ljmp
add
adc
fstl
rcrl
insl
sti
xchg
xor
bound
shl
fisubrl
add
rcl
push
mov
xchg
pusha
add
push
sub
xchg
repz
fcos
loop
xchg
sbb
sbb
push
iret
repz
adc
adc
or
loop
movsb
cmp
push
or
ret
mov
sahf
mov
push
mov
mov
push
rcr
outsb
incl
sti
and
add
je
and
mov
pop
pop
je
xor
dec
and
mov
dec
and
add
sub
or
mov
cmp
ja
lea
push
add
push
mov
fcomip
in
int
or
jge
jmp
inc
mov
fdivrs
js
pop
sub
jmp
inc
gs
pushf
mov
sbb
mov
add
push
adc
sbb
mov
or
stos
aad
daa
cmp
mov
mov
mov
mov
push
push
cmp
sbb
clc
mov
mov
dec
jne
pop
testb
daa
and
cmpsb
mov
js
dec
jle
jl
or
cmp
sub
ret
in
fldt
cmp
je
sub
je
das
cmp
lock
push
add
popa
push
and
jmp
push
sbb
dec
pop
xchg
jge
mov
xor
dec
sub
sbb
jmp
fstp
fldt
mov
push
call
jl
insb
cwtl
mov
adc
mov
inc
sahf
enter
inc
pushf
or
repnz
jne
mov
and
adc
stc
enter
mov
sbb
add
cs
cld
mov
aam
push
test
xchg
sub
sub
pop
jecxz
pop
stc
xchg
xor
leave
sbb
mov
stc
lahf
stc
cmp
fidivrs
call
mov
bound
outsl
dec
mov
xlat
fadds
outsb
xor
xchg
push
or
mov
adc
ret
inc
mov
push
pop
test
enter
mov
outsl
movsl
push
inc
dec
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
pushl
test
lds
iret
decl
js
inc
mov
stos
mov
cmp
jmp
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
ljmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
clc
jmp
int3
repnz
test
nop
fcmovnb
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
inc
xchg
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
das
sar
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
pushf
mov
and
decl
repz
mov
subb
and
and
outsb
bound
xor
cld
lret
jmp
sub
mov
loop
sbb
add
and
or
adc
fdivl
hlt
movzwl
mov
lea
push
push
inc
fwait
mov
mov
int3
jne
sahf
clc
mov
push
xor
movl
fistpl
push
data16
add
mov
gs
pop
pop
pop
pop
push
adc
cmp
in
ret
push
ljmp
out
jecxz
and
sub
dec
pop
aas
or
cmpl
cltd
mov
push
dec
inc
push
push
inc
push
inc
pop
ret
pop
inc
gs
jo
imul
dec
add
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
lahf
icebp
ljmp
mov
mov
lret
aas
xlat
mov
aam
leave
mov
inc
out
ds
lods
cmc
add
dec
cld
mov
leave
out
cmp
mov
push
lea
inc
sbb
aam
xor
imul
cltd
pop
push
das
and
and
pop
sbb
dec
add
xchg
ret
rorl
xchg
mov
and
xchg
or
mov
in
in
out
sub
or
cwtl
mov
sbb
clc
cmp
mov
rcr
test
idivl
out
push
das
xchg
push
movups
lcall
cs
xor
jle
in
pop
mov
or
cmp
call
ret
sahf
subb
inc
push
shr
dec
rep
pop
and
rep
mov
mov
sub
jl
push
mov
lods
jp
in
cmp
bound
jbe
add
jae
ss
mov
test
notb
xor
push
sbb
jne
jne
lods
cmpsl
rclb
mov
mov
jbe
pop
mov
fdivs
cmp
fidivs
paddd
shufps
mov
push
loopne
jmp
mov
add
jb
inc
xchg
add
pop
push
outsl
loop
sbb
clc
pop
out
pop
clc
mov
mov
add
subl
sub
xchg
lock
clc
mov
shlb
lcall
push
add
lea
push
sbb
sub
insb
clc
mov
inc
aaa
adc
mov
in
push
test
les
lock
outsb
mov
sub
sahf
xor
xor
jb
jo
jne
push
es
jne
or
push
inc
or
or
lds
inc
xchg
xchg
cwtl
je
or
xor
xor
sbb
rorl
mov
jle
outsl
jle
jne
mov
in
push
xchg
jmp
lret
push
pushl
flds
push
add
repnz
je
pop
in
loop
decl
add
sub
mov
pop
cs
loop
jecxz
xchg
add
cmp
pop
ljmp
fstp
fistpll
mov
xor
das
mov
or
es
ja
jmp
orb
mov
push
data16
sub
cmp
push
mov
stos
fiaddl
pop
scas
xor
jle
popa
lock
ds
mov
or
test
rcrl
adc
out
inc
add
sbb
add
dec
jne
icebp
fucomi
sbb
clc
pushl
push
xor
and
jne
dec
cmp
in
outsb
lahf
push
popf
enter
and
pop
lcall
ja
pop
sti
xor
call
add
mov
decl
push
hlt
xor
lea
mov
mov
mov
sbb
add
aas
inc
inc
or
or
pop
rcrl
inc
sub
or
hlt
hlt
or
mov
push
mov
mov
or
adc
push
clc
addr16
xchg
inc
aas
add
xor
js
inc
xor
xchg
inc
in
jae
mov
sti
or
sbb
jmp
pusha
add
loopne
mov
pop
pop
xchg
scas
rolb
cmp
jbe
dec
dec
in
push
pop
or
call
inc
fisubrs
push
cmp
ficompl
and
add
add
addb
in
xor
pop
push
push
and
sbb
jmp
je
or
jne
movsbl
inc
inc
jmp
add
mov
mov
sbb
jecxz
sbb
adc
or
pop
fdivrl
adc
mov
jecxz
pop
and
add
cmp
inc
add
jne
mov
cmpl
cld
adc
outsb
or
pushf
push
pop
adc
test
cmpsb
push
jbe
jg
xchg
cmp
lcall
into
cli
out
push
je
dec
inc
xorl
push
test
sarl
and
cmp
pop
ret
push
mov
aaa
mov
jmp
adc
popa
add
stos
cli
push
jns
clc
pop
fidivs
dec
add
jbe
addb
cmp
sub
push
sbb
dec
arpl
sub
mov
mov
lock
subb
add
lods
jo
mov
adc
xor
push
outsl
inc
and
push
outsl
sahf
or
inc
je
dec
or
add
xor
cwtl
cmp
sbb
daa
rcrl
pop
add
lds
clc
push
jmp
aas
jb
add
cmp
inc
sub
push
sub
negb
clc
or
and
fsubl
jne
inc
frstor
rcrb
icebp
mov
inc
jmp
mov
mov
mov
adc
inc
mov
or
add
or
das
push
lfs
adc
jno
and
loopne
pusha
pop
test
addl
arpl
test
pushf
sbb
xor
and
mov
mov
xor
add
push
push
shr
rorl
lods
adc
jecxz
and
ret
and
in
addr16
dec
lock
movl
jo
mov
out
mov
or
pushl
mov
push
push
push
push
push
sbb
push
mov
mov
ret
add
xor
mov
inc
sahf
jg
adc
jge
or
pusha
add
aaa
cmp
inc
inc
or
sti
or
test
adc
adc
orb
jae
mov
push
addb
adc
loop
xor
mov
or
xchg
xor
aas
or
mov
ja
add
sbb
sub
pop
cmp
push
sub
fistpl
sub
je
jmp
add
push
in
call
xor
push
cmp
sub
fistps
inc
adc
jmp
sub
cmp
mov
dec
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
xchg
shrb
cld
mov
jmp
mov
or
rolb
pop
jne
movzbl
or
pop
jmp
xchg
mov
cmp
jo
shlb
or
dec
pop
clc
cmp
push
outsb
fwait
jno
js
sbb
cli
sub
add
push
inc
pushl
xor
mov
js
fsts
pusha
and
fcmovu
ret
loopne
mov
xor
ret
jo
inc
or
enter
push
aas
mov
adc
enter
in
jg
push
repnz
cmp
jne
and
loopne
out
mov
sbb
or
add
jge
add
sahf
std
test
jle
dec
mov
je
add
cmp
and
jmp
jmp
mov
mov
xor
rclb
ds
fimuls
add
in
mov
lock
jle
jbe
fadds
iret
sub
adc
iret
adcb
push
sub
sbb
mov
jmp
aam
out
movd
inc
ss
and
mov
ret
dec
xchg
mov
mov
xlat
inc
sbb
mov
mov
add
sbb
dec
pop
js
dec
jne
pop
pop
xchg
cmpsb
std
stos
dec
add
mov
dec
or
rclb
add
fidivrs
mov
mov
cltd
idiv
add
mov
adc
and
and
dec
movsl
fnstsw
and
inc
addb
rorl
pop
push
jg
jecxz
scas
adc
sbb
inc
mov
push
mov
cmpsb
outsl
in
ja
add
mov
jge
mov
mov
leave
out
adc
inc
xchg
push
or
jo
loopne
adc
add
lock
add
add
dec
push
push
test
fistpl
cmp
xor
nop
pop
add
dec
inc
pop
ret
inc
xor
mov
mov
rclb
mov
jnp
and
push
ffreep
test
pop
gs
test
sarl
push
ss
pop
ret
out
sbb
icebp
sbb
cmp
adc
sbb
in
out
lcall
add
mul
es
pushl
aad
fwait
adc
jnp
sahf
sbb
push
roll
push
sbb
jne
cmp
je
xchg
scas
roll
or
fidivrl
addb
adc
add
and
cmp
adc
clc
mov
or
ljmp
inc
push
test
rclb
jmp
jp
jne
mov
aad
push
xor
lods
sub
push
lcall
push
sub
lea
push
pop
pop
mov
mov
jp
add
mov
xchg
in
fadds
mov
or
sbb
pop
sbb
test
js
sbb
push
cli
lods
add
push
push
or
push
mov
mov
sub
push
outsb
pushf
mov
cmp
lahf
adc
sub
shrb
shll
clc
dec
jl
lock
in
roll
jg
xchg
or
adc
movl
xchg
ret
dec
jne
add
clc
mov
jg
sbb
movsl
jne
mov
dec
and
add
inc
insb
xchg
adc
mov
or
ret
cmpsb
filds
jle
push
add
ljmp
lcall
movl
pop
popf
inc
mov
cld
push
and
iret
mov
das
js
cli
loopne
jl
or
cmp
xchg
mov
inc
ret
js
mov
and
je
add
out
shll
aaa
add
inc
jo
loop
sbb
add
jbe
adc
jg
xchg
jmp
lea
cmp
or
jge
push
adc
movsb
das
pop
mov
nop
push
jl
decl
cld
add
mov
add
or
fistpl
aaa
push
fisubl
rcrb
add
cmp
shl
cmpsl
push
mov
mov
subl
push
cmp
je
dec
int
in
cmp
add
jo
fucomip
add
call
pop
sub
jmp
pop
pop
sub
and
pop
pop
imul
or
push
or
addr16
in
add
jae
ja
mov
inc
xchg
popl
xor
testb
add
pop
pop
xor
adc
je
pop
add
fisubs
fnstcw
mov
inc
push
pop
or
idiv
adc
sub
inc
push
jns
jg
je
jns
adc
sbb
push
cld
add
jo
cmp
push
lods
rorb
xchg
cmp
sbb
repnz
sub
cld
cmpsl
sti
jmp
xor
adc
or
out
ds
lahf
cmp
jl
ds
rorl
sub
inc
cld
add
jo
popf
nop
fmuls
dec
rorl
sbb
add
xchg
inc
dec
clc
fucomi
mov
adc
pop
push
insb
mov
xchg
adc
ret
das
xor
cmp
inc
cld
dec
jmp
jbe
xchg
push
jo
cmp
nop
push
dec
jne
or
inc
divb
cld
popf
sub
and
aaa
add
dec
jmp
xor
inc
pushf
loop
sub
pop
adc
je
lock
jne
sahf
in
pop
and
sbb
xor
lea
xchg
nop
loopne
jmp
and
xor
add
or
or
movsb
pop
cld
sub
pop
xor
sar
and
sub
mov
xor
je
inc
insl
es
jl
fcmovnb
jmp
add
jns
mov
cmp
pop
and
or
push
sbb
mov
ss
inc
inc
movsl
jl
push
clc
inc
dec
xchg
loop
lock
and
jno
xlat
mov
cmp
cmpsb
insb
mov
adc
pop
adc
and
lret
ret
int3
sbb
rcpps
xor
inc
in
mov
cmp
jge
sub
jle
sarb
add
dec
cmovle
loope
xor
jmp
bnd
xlat
dec
test
and
mov
add
out
adc
loop
cmp
jl
int3
jge
mov
sbb
jle
stc
add
lea
inc
movl
pop
cli
inc
add
cltd
xlat
orl
push
fisttps
jge
cmp
adc
imul
cmpl
pop
cmp
fimuls
adc
lock
jnp
dec
int3
push
add
mov
push
mov
add
adc
dec
enter
cld
fdivrl
fidivrs
mov
fistps
cmp
add
add
mov
fadds
ret
fldt
push
in
jge
out
add
ss
dec
movsb
mov
in
sarb
adc
or
jb
xchg
dec
in
jmp
outsb
and
out
imul
scas
shrl
shrb
js
adc
cmp
xor
push
xor
movsl
inc
push
cmpsb
loopne
xor
rol
fbld
daa
and
xor
mov
xor
pop
xor
jne
mov
and
ds
sbb
jne
push
icebp
arpl
in
rcrb
addb
sarb
scas
sbb
call
adc
iret
int3
pop
cmp
clc
outsl
xchg
in
inc
in
sub
stos
adc
push
cmp
xor
mov
aad
jno
xlat
jle
loop
pop
pusha
and
bound
push
call
lods
or
cmp
cmpsl
xchg
push
jo
push
push
das
and
mov
arpl
xchg
cmp
mov
out
fcom
xor
xor
popf
push
sbb
insl
add
andl
inc
push
jmp
cld
dec
sahf
lret
pop
mov
inc
inc
jmp
mov
and
inc
pushf
mov
ret
and
adc
data16
dec
push
aaa
enter
test
pop
pushl
mov
sub
xchg
sub
cmp
sbb
mov
add
sarl
push
mov
dec
mov
push
pop
test
pop
sbb
push
inc
push
adc
xchg
fs
or
push
add
inc
out
jle
ret
sbb
or
test
or
or
sbb
lahf
das
stc
movsl
lock
rolb
mull
pop
dec
cmp
nop
pushf
lcall
or
ret
cmp
push
lods
add
add
adc
sti
sbb
inc
daa
cltd
inc
sub
js
cmp
scas
adc
add
xchg
popl
lea
sbb
inc
push
cwtl
shl
pop
inc
and
inc
cmp
mov
lea
mov
mov
bound
pop
call
out
fists
xchg
out
cli
mov
cmp
and
je
cmp
fs
je
dec
shlb
cmp
je
cmp
push
cmp
je
mov
fistl
mov
clc
jmp
lcall
or
loopne
decl
out
jmp
push
mov
mov
pop
add
mov
mov
dec
cs
adc
cmp
pop
jmp
cmp
add
popf
sub
addb
xlat
push
jmp
cmp
sbb
jp
pop
lods
icebp
out
adc
lret
aad
mov
cmp
fsub
iret
inc
sub
ds
repz
pop
jbe
test
daa
push
and
imul
xor
and
lret
push
mov
xchg
cmp
addr16
inc
fdiv
sbb
es
push
inc
add
repz
in
and
call
sub
into
jno
sbb
cmp
dec
pushf
icebp
jmp
inc
loop
or
and
pushf
jbe
scas
daa
inc
sbb
adc
jecxz
nop
adc
pop
cmpsl
inc
push
sub
cmp
outsl
jp
push
dec
jo
add
sub
sub
inc
push
repnz
nop
inc
dec
dec
xor
popa
xchg
adc
sbb
push
hlt
enter
or
sbb
popf
fdiv
add
jl
insb
outsl
cld
dec
dec
jne
or
sub
jle
ret
fsts
sbb
push
mov
adc
cmp
xor
in
cmp
adc
push
or
jo
cmp
insb
adc
mov
pop
or
xchg
test
push
adc
push
aas
cmp
jmp
and
insb
lea
mov
sub
mov
fcoms
push
or
test
inc
dec
push
pop
jmp
pop
cmp
idivl
add
sarl
xor
mov
popa
ss
cwtl
adc
and
add
jne
mov
pop
rorb
sbbb
popl
mov
and
mov
in
dec
movsl
push
cmp
popa
jg
and
nop
xchg
sahf
mov
jmp
and
out
sub
arpl
sub
imul
adc
test
les
cmp
cmp
or
imull
jo
ja
incl
pop
add
inc
call
stc
cmc
mov
cmp
add
je
cmp
lcall
iret
ret
or
dec
adc
popa
push
sub
dec
adc
push
pop
mov
loope
mov
loope
rcrb
ret
inc
mov
pop
dec
and
subb
fdivr
push
rorb
add
xchg
dec
add
call
lret
ret
inc
or
adc
lock
insb
inc
sahf
popa
push
or
xchg
repnz
les
pop
add
lcall
cld
push
outsb
sti
mov
sub
inc
jmp
cmp
jne
mov
inc
and
and
sub
inc
xlat
jle
sub
out
scas
xor
das
and
dec
in
idiv
outsl
adc
or
add
sub
jb
add
or
jmp
xor
fwait
js
sti
sub
jmp
getsec
jmp
push
cmp
cmpsl
xchg
test
or
jb
jmp
jl
cmp
mov
pushl
jmp
jg
mov
cltd
or
add
bound
movsb
loop
sub
and
fimuls
push
ret
or
xor
test
add
enter
mov
sbb
insb
hlt
xor
rolb
neg
push
sbb
or
stos
mov
movsb
pusha
pusha
adc
sbb
dec
fisubs
inc
jns
int3
jne
adc
inc
mov
das
jg
inc
or
xor
jp
push
dec
mov
dec
or
js
daa
jmp
and
xor
sub
sbb
nop
ret
out
decl
xchg
shr
setl
cmp
je
dec
int
pop
mov
or
les
pusha
mov
mov
and
mov
or
add
inc
addr16
lret
dec
dec
dec
ljmp
int
adc
push
push
mov
add
dec
or
iret
mov
test
jg
pop
pop
mov
das
loope
add
lods
sbb
xchg
mov
sahf
mov
inc
add
popa
adc
cli
mov
inc
xchg
cmp
neg
and
or
dec
into
in
idiv
cmp
ss
inc
call
or
xor
mov
cmp
jge
xchg
out
sti
fildl
xchg
add
mov
sub
push
lea
mov
mov
pop
mov
pop
decl
stos
pop
insb
dec
pusha
les
lret
in
jge
scas
cmp
sub
fwait
xor
pop
or
push
bound
out
mov
in
dec
push
dec
add
enter
or
pop
cmp
movl
or
sarl
test
add
cmpsl
sbb
clc
add
cwtl
or
xchg
mov
adc
jl
inc
jl
rcrb
cmp
clc
insl
jl
jnp
dec
inc
push
dec
jne
enter
push
insb
icebp
push
aaa
push
andl
xchg
xor
lock
scas
jge
adc
push
int3
inc
pop
and
test
rcrl
sbb
mov
jl
cmp
push
mov
incl
out
pop
pop
jo
lock
lahf
adc
les
test
in
adcb
inc
ret
in
sbb
sahf
nop
inc
inc
outsl
push
or
sub
xlat
insl
mov
insb
dec
jne
pop
mov
clc
cmp
arpl
mov
push
mov
mov
mov
je
cwtl
fs
out
cwtl
mov
pop
sbb
cmp
inc
jae
fmuls
or
or
lds
cmp
clc
jmp
sbb
cmp
pop
cmp
nop
fisttps
sub
and
jecxz
push
test
xor
lods
xor
adc
jmp
push
out
xchg
gs
inc
push
pop
cmp
imul
pop
add
lods
or
rcrl
dec
inc
mov
or
pop
mov
sbb
sbb
js
pop
dec
sti
sbb
inc
les
cmpb
std
cwtl
loope
sbbl
xor
push
mov
sub
lea
mov
iret
push
jno
sbb
mov
cmp
push
inc
push
push
addr16
sbb
inc
xchg
jl
pushl
aas
flds
fmull
mov
push
movb
ret
dec
push
push
cmpsb
xlat
mov
movl
push
imul
mov
gs
gs
xor
idiv
outsl
hlt
cs
insb
movl
addr16
popa
je
dec
popa
insl
gs
and
push
adc
jle
pop
pop
and
inc
out
and
mov
out
sahf
aam
add
inc
cmp
and
sub
pusha
ja
aaa
in
jno
push
test
xor
push
cmp
push
add
out
inc
popf
sar
cld
aas
iret
data16
mov
cmp
push
bound
adc
repnz
mov
inc
lret
jno
inc
xchg
sti
das
shr
test
push
lods
repz
mov
xchg
xor
cmpb
repz
jmp
out
push
enter
imul
sbb
add
negb
lock
cmp
jne
adc
out
sahf
popf
inc
xorl
ret
daa
js
push
or
push
les
icebp
je
das
outsl
mov
add
repz
cmc
add
test
mov
fstps
mov
mov
and
inc
cltd
push
and
nop
cmp
push
inc
idivl
es
adc
mov
jb
mov
mov
cmp
pop
loopne
fidivrs
lds
mov
push
mov
cmp
mov
daa
mov
mov
pop
adc
loopne
pop
mov
push
aad
sub
mov
fiadds
mov
aam
fxch
dec
je
jecxz
mov
dec
es
inc
push
add
jecxz
jo
or
shl
cmp
mov
dec
cmp
or
addl
inc
add
jbe
sbb
cmp
cmp
fcompl
pop
mov
hlt
jo
push
cld
jne
int
sub
fs
ljmp
lcall
add
sbb
or
sub
test
push
test
pop
mov
pop
push
rcrb
dec
mov
push
inc
shll
mov
sahf
je
sbb
push
mov
pushf
push
push
mov
and
hlt
adc
mull
fcomp
mov
pop
pop
ret
sbb
and
cld
mov
add
push
lret
pop
sub
pop
loope
push
divb
test
adc
movsl
mov
inc
sub
faddp
es
mov
shlb
push
xchg
mov
mov
mov
outsl
cmpb
fbld
mov
or
and
loope
or
ds
dec
lds
ret
mov
aam
loopne
push
cmp
add
mov
scas
cmc
out
jo
dec
inc
cmp
ja
mov
inc
jmp
cmp
decl
decb
cld
ja
fcmovb
jmp
or
mov
adc
fwait
divb
pop
xor
and
lret
add
mov
pop
movsl
pusha
add
dec
pusha
rolb
add
dec
or
cmp
jb
or
je
das
orb
xor
and
sbb
cmp
dec
jbe
pop
add
cmp
push
lock
lea
ret
sub
jb
lock
dec
pop
sahf
adc
bound
mov
test
jmp
cmp
pop
push
hlt
movzbl
inc
notb
das
clc
test
je
add
jae
and
adc
cmp
rol
sti
sbbb
cmc
out
jne
xchg
cmp
ss
rol
loope
or
mov
push
lea
in
xlat
mov
inc
dec
cld
mov
out
adc
inc
nop
ret
or
cmp
sbb
cmp
dec
inc
inc
mov
jne
roll
and
stos
sbb
int
adc
adc
jne
cmp
jo
mov
sub
int
mov
popf
push
pop
dec
pop
jnp
push
pop
cltd
bound
andb
loope
clc
pop
inc
add
je
adc
es
adc
popf
sub
mov
or
cmpxchg
sbb
push
test
mov
dec
ja
in
xor
jmp
test
popa
movsl
push
jmp
xlat
dec
fldl
jbe
pop
imul
loopne
cmp
mov
dec
add
or
or
push
push
mov
add
inc
roll
xor
pop
pop
je
add
jne
ss
adc
mov
push
aas
test
push
adc
xor
xor
pop
loopne
pop
jecxz
mov
cmp
lahf
jbe
add
notb
add
test
xor
test
rorb
roll
int3
or
push
incb
push
and
xor
pop
dec
xor
loopne
incl
mov
mov
adcb
jg
repnz
cli
sub
inc
rcrl
aaa
mov
clc
into
mov
mov
jecxz
jb
test
or
mov
inc
hlt
xchg
mov
cmpl
mov
xor
imul
pop
testb
pop
mov
push
push
mov
rorb
lock
pop
es
insb
push
insb
inc
cld
arpl
add
mov
pop
ljmp
mov
push
fdivrl
mov
mov
mov
fsubrp
or
or
mov
jge
aaa
cld
pop
daa
data16
sbb
push
decb
unpckhps
add
add
mov
stos
shll
out
jle
shr
push
test
shlb
mov
add
outsb
add
push
or
insl
inc
rcrb
dec
push
dec
inc
cs
decb
add
xor
mov
jmp
or
push
gs
push
or
jb
jns
cmpsb
std
adc
jae
bound
inc
push
xchg
call
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
adc
imul
arpl
or
adc
ret
or
jb
fs
out
mov
pop
xor
outsl
insl
bound
outsl
js
cmp
ds
push
imul
outsb
cmp
andps
outsb
je
mov
ja
je
add
dec
add
dec
cld
sub
clc
hlt
lock
in
dec
dec
dec
dec
aam
int3
enter
dec
sarb
mov
test
dec
dec
dec
movsb
mov
dec
dec
xchg
nop
mov
test
dec
dec
je
insb
push
fs
pop
pop
dec
dec
dec
dec
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
dec
dec
dec
dec
xor
sub
dec
dec
dec
dec
and
sbb
dec
dec
dec
dec
adc
or
and
dec
add
cld
sub
daa
daa
daa
daa
hlt
lock
call
in
daa
daa
daa
daa
aam
int3
enter
daa
sarb
mov
test
daa
daa
daa
movsb
mov
daa
daa
xchg
nop
mov
cmpb
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
sub
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
fs
xchg
xchg
xchg
xchg
push
dec
inc
inc
xchg
xchg
xchg
xchg
push
dec
pop
pop
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
xchg
xchg
xchg
xchg
sbb
adc
xchg
xchg
xchg
xchg
or
add
leave
leave
leave
enter
hlt
lock
leave
leave
leave
in
call
leave
leave
aam
xchg
xchg
xchg
fcmovne
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
insb
push
xchg
xchg
pop
pop
push
push
xchg
xchg
xchg
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
jb
nop
xchg
sbb
adc
adc
jb
or
add
xchg
xchg
or
sub
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
mov
dec
dec
inc
cmp
cmp
inc
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
mov
add
sub
hlt
pushf
pushf
pushf
pushf
lock
call
pushf
loopne
fcom
pushf
pushf
pushf
pushf
ror
enter
mov
rorb
inc
push
dec
cmpl
push
pop
cli
mov
pop
add
or
cmp
repz
adc
sbb
or
and
and
lahf
mov
imul
outsl
mov
sqrtps
sbbb
loop
dec
addr16
out
or
fs
test
fadds
push
push
sub
outsl
sahf
sbb
pushf
scas
push
gs
outsl
inc
and
sbb
cmpl
pop
or
jge
lods
movl
outsl
and
gs
xlat
out
mov
push
dec
inc
inc
dec
add
outsl
bound
jge
addr16
dec
push
inc
push
dec
pop
and
push
push
dec
sti
out
push
push
pop
sub
push
inc
dec
pop
dec
dec
dec
inc
push
das
cmp
inc
or
cmpsl
jp
jge
mov
call
cmp
movmskps
pop
inc
scas
jp
outsl
repnz
setl
push
lock
icebp
repnz
pushf
pushf
pushf
repz
cmc
negb
stc
cli
pushf
pushf
pushf
pushf
sti
cld
std
pushf
pushf
pushf
pushf
jmp
loope
pushf
pushf
pushf
pushf
jecxz
in
pushf
pushf
pushf
pushf
out
jmp
pushf
jmp
in
out
pushf
pushf
pushf
pushf
out
rcl
rcrb
aad
pushf
pushf
pushf
pushf
xlat
fcomp
ficompl
fstp
pushf
pushf
pushf
pushf
ffreep
rol
pushf
pushf
pushf
ret
pushf
pushf
pushf
enter
pushf
pushf
pushf
lret
int3
int
pushf
pushf
pushf
pushf
iret
mov
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
cmpsl
test
stos
clc
pushf
pushf
pushf
stos
lods
lods
mov
pop
pop
push
adc
push
inc
bnd
ja
pop
adc
push
fisttps
cs
push
je
insb
jae
add
scas
fmull
or
mov
lcall
push
or
popa
jb
push
insb
add
adc
jle
pop
dec
loopne
dec
daa
or
enter
lcall
out
arpl
inc
js
gs
mov
add
mov
lahf
dec
sahf
or
or
inc
inc
bound
mov
nop
adc
aas
adc
or
push
inc
dec
inc
jo
leave
leave
inc
jnp
insb
mov
icebp
insb
std
push
or
dec
jne
dec
xchg
push
jb
jo
enter
jle
adcl
test
and
xor
jb
push
xchg
xchg
cmp
js
jg
pop
mov
sbb
fdivrs
orl
dec
push
outsb
xor
push
leave
mov
jbe
pop
gs
and
insl
nop
mov
sub
popa
outsb
gs
loopne
sbb
dec
jbe
stc
jno
lret
ja
cmp
sbb
pop
xchg
dec
mov
gs
xchg
scas
and
repnz
lock
xor
dec
jo
scas
ret
mov
fcmovnb
insl
jle
gs
subl
pop
rcll
scas
pushf
fcmovu
or
fs
hlt
scas
cmpsb
and
lahf
push
mov
imul
mov
mov
daa
test
xchg
add
lods
mov
inc
jne
jge
inc
inc
dec
shrb
xchg
test
xchg
add
inc
fdivs
push
adc
pusha
andb
push
xchg
push
push
jb
insb
push
nop
shrb
push
inc
fs
mov
add
xchg
mov
daa
or
sbb
fbstp
inc
je
fwait
adc
mov
push
popa
roll
aas
shlb
rorb
cmove
mov
adc
xor
xor
cli
shll
adcb
out
mov
mov
adc
mov
mov
in
call
loope
inc
push
stos
push
inc
mov
cmpsb
pusha
mov
pop
adc
popa
data16
sub
pop
jle
dec
daa
decb
xor
out
jo
xchg
and
xor
xchg
pop
mov
add
inc
cwtl
insl
push
push
gs
outsb
addr16
rolb
adc
cmp
mov
and
test
insb
push
test
popf
out
pushf
mov
push
xor
outsl
dec
pcmpgtb
data16
xchg
push
inc
cmp
pop
add
mov
pop
add
inc
loop
dec
xor
adc
jb
popa
fs
sub
xchg
je
mov
add
cmp
inc
insb
loop
pavgw
loope
mov
inc
mov
push
sub
loop
sbb
push
push
out
lcall
stc
mov
push
mov
jnp
sbb
push
loopne
sbb
or
push
cmp
add
and
mov
mov
js
sbb
xor
dec
push
imul
shrb
inc
push
push
roll
mov
lods
outsb
arpl
ljmp
pop
xor
inc
inc
ret
adc
repz
pushf
test
mov
add
scas
inc
jne
aas
xchg
mov
mov
in
sub
jle
xor
pop
ret
pop
cmp
aas
cmp
mov
jo
mov
pop
and
adc
mov
and
ret
mov
mov
mov
call
push
mov
outsb
mov
adc
add
sub
je
clc
pop
inc
push
push
jl
xor
or
mov
cmp
test
addb
sti
jge
mov
lret
data16
shlb
pop
dec
les
rorl
add
jmp
mov
test
or
xchg
jae
inc
xor
pop
dec
and
add
or
or
decb
push
cmp
je
add
adc
pop
or
leave
invd
sbb
and
sub
push
add
jno
mov
sbb
lock
out
sub
add
clc
add
rorl
jg
sahf
cmp
push
movsb
sahf
add
fnstcw
fsubrl
fildll
pop
mov
cmp
jne
or
sub
xchg
rolb
aaa
sub
stc
push
jg
and
sbb
pop
jg
ss
pop
cmp
jne
cwtl
cli
xor
pop
inc
pop
roll
neg
ret
pusha
pop
and
push
push
mov
cmp
fisttpll
pop
push
inc
ret
lea
fstpt
das
mov
xor
push
cmp
sub
inc
add
add
cmp
jg
outsb
xchg
into
fiaddl
sbb
and
fdivs
pop
cmp
scas
pop
inc
ret
je
hlt
or
pop
pop
scas
adc
addps
call
cmp
dec
add
or
cmp
jne
jge
push
shlb
or
mov
mov
mov
add
mov
fisubrl
rolb
push
enter
push
hlt
ljmp
mov
out
ss
xor
pop
xor
popa
mov
pop
mov
jmp
dec
push
mov
adc
dec
shrl
test
or
jl
jl
jmp
jbe
cmpsl
hlt
mov
adc
or
fcoml
dec
sub
es
cmp
lret
stos
roll
push
loope
dec
mov
ret
push
push
mov
jns
jne
xchg
imul
mov
adc
dec
int3
and
clc
dec
push
loopne
add
push
js
adc
test
outsl
inc
fdiv
pop
mov
sbb
fldpi
push
sub
adc
inc
das
lock
jne
out
or
aad
xor
out
out
xor
jle
aad
push
cli
jg
cmp
jne
mov
dec
adc
faddl
xorl
int3
icebp
add
fcomi
sub
into
mov
xor
mov
add
xor
notb
jb
sbb
push
cltd
cmp
jl
ret
mov
jl
imull
test
sub
push
inc
fsubs
mov
inc
mov
cmpb
inc
mov
adc
add
or
incb
leave
jmp
pop
ss
mov
out
test
pop
mov
add
and
mov
sarl
dec
call
or
mov
sub
dec
jne
jmp
test
rolb
add
jae
fcmovu
mov
or
sarb
ret
aam
adc
mov
ret
push
push
push
xor
sbb
cmp
jb
push
pop
decl
ljmp
jbe
add
mov
sub
jmp
cmp
jg
mov
lcall
in
adc
leave
push
outsb
cltd
rorb
pop
push
xor
dec
test
not
xor
jmp
jp
jo
dec
loopne
sbb
cmpl
pop
ja
pusha
movb
add
or
dec
inc
adc
add
or
xor
xchg
add
adc
in
movsl
mov
jne
daa
andl
push
and
fistps
ret
imul
add
push
add
mov
mov
clc
fdivr
mov
cmp
jg
pop
scas
add
push
sub
rcrl
loope
cmp
ret
ffree
ffree
ffree
pop
adc
add
aad
aam
cmp
add
aad
frstor
in
aaa
aad
ss
subb
inc
pushf
and
cmp
cltd
lods
push
jbe
inc
push
push
scas
mov
aaa
push
mov
or
lods
or
add
xor
ss
xchg
add
cmp
mov
sarl
pop
aad
xor
or
push
and
testb
out
insl
imul
and
mov
cmpsl
mov
sete
pop
outsl
icebp
adc
inc
xchg
lea
add
mov
sahf
mov
xor
and
dec
cmpsb
sbb
inc
cld
adc
xchg
mov
lahf
mov
push
rolb
pusha
sub
or
pop
mov
dec
mov
jg
nop
orb
xchg
and
les
dec
jb
push
adc
push
nop
jl
pop
push
adc
xchg
xchg
repz
xor
jle
push
mov
movb
push
subb
jl
inc
mov
and
in
add
or
popf
mov
push
xor
out
aas
mov
mov
push
cmp
adc
pop
dec
push
add
fidivrl
or
jge
dec
hlt
jne
ret
sbb
faddp
decl
pop
add
dec
xor
lock
insl
lock
setne
jmp
ret
in
sbb
xor
xchg
fmull
test
imul
adc
jno
or
sarb
or
mov
pusha
sub
mov
adc
adc
je
jmp
and
data16
or
adc
xor
daa
jg
imul
or
mov
sar
add
add
mov
and
mov
xor
je
notb
push
adc
and
mov
out
add
inc
mov
mov
mov
pop
rclb
xchg
dec
pusha
fstpt
out
mov
xchg
pop
int3
or
pop
inc
outsb
xorl
movsb
mov
lret
clc
test
pop
mov
repz
mov
lret
notl
add
sti
mov
and
and
sbb
push
sbb
mov
push
ja
add
push
out
ret
pop
ja
jae
jg
mov
or
movl
gs
call
add
out
inc
je
push
add
inc
js
mov
xor
aaa
pop
outsb
mov
not
mov
outsb
lss
fsubrs
mulb
adc
lcall
adc
and
or
sahf
sub
lock
xor
jmp
pop
lods
shll
andl
cmp
idivb
cltd
ss
lahf
or
mov
test
jp
mov
sti
add
add
je
pop
xchg
or
add
out
cld
out
lea
inc
xorb
adc
xor
push
cmp
push
add
mov
xchg
cltd
mov
cmp
int3
aaa
call
mov
jl
push
and
stos
xchg
movl
test
aam
xchg
rorb
ret
pop
inc
cmp
pop
das
or
mov
mov
xchg
mov
test
sbb
rolb
nop
jp
cwtl
cmpsl
fwait
movsb
std
jne
cmp
lock
test
int3
xorl
fistl
push
inc
and
pushf
jp
lock
inc
xor
jae
cwtl
fucomi
adcl
mov
push
addr16
or
add
and
and
inc
jmp
mov
dec
lods
adc
in
push
mov
lock
ret
movsl
pop
add
sbb
test
inc
sbb
pop
sub
lock
in
aaa
add
jne
push
inc
xor
sbb
add
push
adc
sar
add
xor
push
jp
or
divb
mov
push
or
outsl
dec
call
lea
mov
dec
mov
pop
pop
mov
ss
not
and
pop
sbb
shlb
mov
cmp
push
lea
pop
adc
hlt
jmp
push
sbb
push
fwait
xchg
mov
inc
sbb
data16
pop
inc
rcll
ret
mov
pushf
repnz
data16
call
push
inc
outsl
clc
sti
cwtl
stos
shrb
sub
mov
pushl
mov
clc
lea
fcomps
push
rol
cmpsl
jne
dec
pop
jg
loopne
nop
push
out
adc
mov
inc
dec
je
inc
imul
add
and
mov
mov
clc
in
mov
pop
mov
pushf
jb
add
cmp
pop
jae
pop
cmp
jbe
or
mov
into
frstor
add
aad
jg
sub
roll
push
mov
mov
sbb
jne
inc
cmp
cmp
jge
sbb
sbb
and
xor
or
inc
scas
outsl
jle
aam
jne
mov
mov
jo
lcall
nop
pxor
push
add
mov
int
imul
mov
loopne
add
call
jo
xchg
fs
push
hlt
lock
cld
push
jnp
fdivrp
imull
shrl
call
das
dec
and
sbb
jno
dec
or
xor
mov
add
cs
scas
loopne
fdivrs
pop
rclb
xor
pop
inc
je
mov
or
ret
cli
sahf
cld
call
test
jne
test
je
test
jne
lret
push
jp
mov
mov
imul
xor
lea
mov
ds
sbb
test
dec
sub
mov
inc
mov
adc
push
mov
adc
ja
pop
ret
mov
fs
in
adc
lret
mov
jg
sub
sub
mov
mov
ljmp
rep
or
out
adc
movsb
inc
pop
pop
pop
xchg
stos
je
hlt
fisubrs
das
xchg
lret
jg
mov
xor
ss
pop
outsl
xor
jne
rorb
jne
cli
jb
mov
add
dec
add
sbb
mov
push
push
sbb
add
xchg
fstpl
jno
pop
jno
out
out
sub
pop
sahf
ret
jmp
or
pop
cmc
add
lret
nop
adc
lods
pop
rcll
or
das
or
or
sub
and
outsl
decb
sbb
or
sub
sub
je
push
sahf
xchg
ljmp
pushl
shll
es
mov
cmpsb
push
je
inc
out
sti
outsl
pop
xchg
xchg
mov
cs
mov
pop
pop
sub
sbb
lods
or
loop
loopne
enter
pop
mov
jne
call
sub
and
add
push
adc
add
test
orl
and
scas
das
sbb
nop
inc
jbe
imul
pop
mov
mov
add
adc
mov
mov
shll
push
adc
mov
jmp
pop
adc
cmp
xor
into
test
push
sbb
les
loop
push
and
out
or
push
or
or
loope
push
sbb
pop
push
push
mov
adc
jns
movb
pop
adc
adc
or
rorb
pop
mov
cmpsl
xchg
push
push
xchg
push
or
es
ds
add
jge
adc
or
sub
lods
cmp
je
stos
test
clc
sub
xchg
stos
sub
outsl
or
decb
icebp
notl
add
xchg
es
bound
hlt
push
xor
and
lods
jmp
inc
enter
cmp
sub
sub
mov
xor
cmpsb
lret
xchg
outsb
pop
sub
outsl
scas
call
cmpb
or
lret
psubq
xchg
pop
mov
rep
sbb
mov
or
ficompl
xchg
sbb
mov
sub
xchg
data16
cmp
ja
imul
sub
sub
ret
and
add
fnsetpm(287
pop
dec
jle
cmp
jg
mov
cmpb
sbbl
sbb
je
xchg
ret
and
mov
dec
ror
add
cmp
pop
ret
pop
add
jne
lea
mov
push
add
and
cltd
mov
insl
sub
sub
cmp
push
iret
ss
hlt
in
inc
scas
xchg
xchg
sub
sub
pushf
lea
and
stos
inc
xorl
sub
push
out
xchg
xor
mov
sbb
imul
or
mov
repnz
lcall
sub
sbb
sbb
popf
mov
icebp
xchg
flds
push
push
ret
cwtl
loope
jl
bound
cmp
jbe
mov
aad
test
mov
or
jmp
xor
inc
inc
cld
lods
pop
test
cmp
add
cld
jg
cmpsl
jl
and
call
add
xlat
mov
js
mov
add
or
ja
pushf
cltd
inc
push
mov
repnz
dec
mov
dec
cmp
stos
fcomps
push
leave
sbb
loopne
or
xchg
push
and
mov
outsb
mov
aaa
fistpll
mov
or
je
mov
inc
je
mov
dec
maskmovq
mull
jl
mov
mov
and
popf
lock
mov
adcb
or
dec
mov
mov
sub
loopne
mov
inc
iret
pusha
fwait
jmp
dec
lcall
mov
and
je
lahf
jle
pop
out
xchg
pop
and
cwtl
daa
es
and
out
nop
push
cmpb
lret
or
dec
xchg
adc
mov
cmpsl
push
or
arpl
inc
push
sahf
repnz
iret
in
ljmp
pop
add
sahf
test
jmp
jmp
imul
paddb
out
out
ljmp
fdivrl
push
add
cmp
xchg
and
xor
xor
movsl
pop
push
lea
mov
push
mov
loopne
pop
mov
mov
pop
das
cltd
clc
push
jbe
push
push
nop
jg
add
insl
dec
test
add
sar
ja
int
cwtl
daa
or
cltd
rclb
add
adc
repz
cmp
ret
push
jle
outsb
jge
and
clc
add
inc
dec
cld
lea
or
sub
inc
push
rcll
dec
jmp
add
aaa
add
addl
das
mov
cmpsb
pop
movsl
cmpl
push
hlt
insl
enter
and
inc
cmp
outsl
mov
jb
xor
nop
pop
xchg
adc
test
jg
sub
xor
stos
or
jne
jg
addb
or
jge
mov
neg
jmp
or
je
dec
sub
decb
mov
into
mov
int3
or
adc
enter
mov
dec
jg
dec
mov
stos
cmp
jne
pop
pop
aam
mov
cld
mov
sti
mov
add
repnz
cs
mov
repnz
adc
add
push
sarb
dec
push
xchg
jle
fisttpl
andb
cld
or
or
xchg
mov
mov
sub
shlb
mov
mov
fsubrl
mov
dec
int
sub
pop
add
ja
add
ja
movswl
jle
mov
jne
sub
pop
sbb
xor
shll
add
xchg
idivb
popf
mov
xor
lods
push
mov
dec
dec
adc
and
inc
dec
inc
dec
lods
or
xor
xor
divb
sbb
jo,pn
ret
std
mov
jg
ret
dec
aam
cmp
sbb
sbb
outsb
mov
outsb
je
mov
stos
neg
imul
adc
sbb
stos
jmp
mov
pop
stos
loop
jbe
mov
inc
stos
pop
pop
inc
clc
dec
ja
pop
and
or
mov
ret
push
push
dec
sbb
sub
pop
jl
dec
sub
leave
mov
mov
mov
jbe
dec
fisubl
es
adc
mov
decl
subb
mov
div
mov
in
mov
inc
test
jne
sbb
mov
insl
in
stos
xor
call
add
mov
or
jne
pop
fdiv
ret
xchg
jmp
loope
repnz
or
repnz
xor
cmp
mov
add
lea
add
iret
mov
je
adc
inc
lock
push
cmp
add
sbb
inc
jmp
or
mov
inc
loop
ret
push
test
cmp
sub
mov
and
mov
sti
mov
add
and
and
adc
and
sub
inc
sub
xor
inc
es
cmp
or
sub
sub
orl
sub
xor
add
call
adc
stos
and
hlt
lods
xor
cltd
inc
mov
pop
push
adc
sahf
mov
mov
adc
sti
mov
mov
scas
push
pop
mov
scas
scas
cld
insb
adc
adc
das
ljmp
scas
or
inc
xchg
inc
insb
scas
or
mov
pop
adc
scas
cmp
or
push
bnd
mov
loopne
sbb
loopne
mov
add
out
xchg
mov
pop
adcl
scas
lret
cmp
testl
mov
dec
jne
cmpl
add
movb
mov
or
sub
rclb
enter
jmp
out
fabs
push
rolb
repz
inc
pop
frndint
rcr
scas
fs
in
out
mov
jge
fwait
mov
testb
je
fidivl
pop
fbstp
lea
mov
inc
sub
mov
shr
and
mov
xor
jmp
pop
fadds
sahf
or
fdivs
jb
mov
or
idiv
fistpl
daa
cmpb
jb
movb
js
decb
mov
cmp
jmp
data16
pusha
xor
jmp
mov
cmp
inc
xor
push
test
shr
mov
push
add
cmc
add
fs
ljmp
add
jp
rorl
jo
mov
rorb
neg
addl
or
adc
or
push
adc
jl
mov
push
inc
sub
mov
loopne
jae
dec
add
cmpsb
mov
fildll
cli
mov
push
fimull
cmp
mov
shll
mov
sbb
xor
sub
mov
and
jne
dec
sub
cmp
enter
and
pop
lock
push
ljmp
enter
cmpb
pop
xor
divl
pop
jmp
loope
rclb
sbb
inc
mov
test
mov
mov
push
mov
mov
fwait
push
je
fldz
jg
cmc
pop
cmpsb
mov
ljmp
dec
ljmp
icebp
fisttpll
xor
pusha
jne
inc
fnstsw
cmp
je
and
fistpll
sub
pop
add
jg
test
mov
sahf
xchg
push
mov
add
push
mov
add
loopne
adc
aas
jmp
fstpt
ret
frstor
or
add
insl
and
add
popa
jmp
jl
cmp
mov
add
or
fimull
jbe
fiaddl
jmp
aaa
mov
negb
jg
movsl
stc
es
push
inc
imul
push
adc
cmp
aaa
add
clc
and
rolb
fsubr
push
int3
push
out
xor
lods
rolb
xchg
mov
push
rolb
pop
pop
add
xchg
sahf
and
mov
pop
xor
fsubs
sbb
aam
adc
xchg
push
fldt
fstpl
fwait
out
push
sub
fs
out
mov
xchg
xor
ret
push
in
fldl
inc
js
adc
adc
mov
xor
push
dec
and
add
inc
test
sbb
add
clc
xchg
or
repz
cmp
jae
or
cmp
inc
stc
inc
cmc
dec
push
or
shrb
out
add
shrb
pusha
jb
ret
data16
adc
cmp
or
xor
fstpl
fwait
and
dec
js
loop
adc
lret
movsb
dec
filds
sahf
push
rolb
movsl
or
mov
in
push
cmpl
cmp
and
jg
imul
loop
add
adc
movsb
fimull
mov
ficoms
lret
push
cmp
int3
cmp
and
jbe
rcrb
pop
enter
add
sub
inc
and
fldenv
mov
sbb
push
in
nop
add
jp
mov
pop
pop
fwait
out
cwtl
sub
idiv
add
les
xchg
adc
cmpsb
adc
jg
mov
ret
aad
aam
dec
enter
addb
adc
ja
and
jb
or
inc
imul
jb
sti
insb
je
mov
ja
adc
outsl
daa
add
inc
dec
jne
sub
dec
mov
or
cmp
imul
jns
sar
cmp
add
cli
add
repnz
ds
ds
pop
mov
pusha
ret
or
add
lret
std
std
push
int3
xor
mov
pop
in
cmpsb
push
cmp
add
pop
pop
and
push
dec
call
push
dec
sub
dec
in
test
jg
or
ljmp
in
or
lods
inc
add
mov
fdivr
mov
stc
mov
add
jl
addl
pop
xor
add
jl
roll
xchg
cltd
mov
insl
mov
decw
cmpl
fs
fdiv
mov
jnp
sub
pop
mov
pop
sbb
mov
test
sarb
xchg
sub
lock
mov
xchg
cmpsl
mov
jbe
dec
cmp
fistpl
cmp
jb
adc
mov
leave
mov
xchg
sbb
clc
inc
lahf
sub
roll
hlt
mov
add
dec
loopne
mov
popa
sbb
mov
jge
adc
iret
cmp
mov
cld
mov
xlat
or
loopne
nop
adc
out
into
fcompl
sub
push
or
sub
movsl
shr
adc
sbb
push
test
mov
adc
js
adc
fstpl
lret
sub
mov
and
call
mov
stos
add
xor
scas
jle
fiaddl
push
xchg
adc
xor
xchg
push
fmull
out
jo
xchg
ret
test
loopne
pop
push
hlt
push
push
jb
pusha
in
subb
jp
jmp
or
in
mov
addr16
cmp
xchg
mov
adc
push
cmp
orb
ljmp
dec
sti
je
mov
dec
push
outsb
inc
inc
hlt
fistpll
or
push
lods
in
add
fwait
imul
jle
pushl
add
push
lea
or
xchg
repnz
fildll
in
add
jecxz
in
insl
or
push
jge
call
ljmp
daa
popf
pop
in
adc
cli
mov
mov
in
xchg
cltd
adc
sub
rcrl
dec
sub
iret
dec
test
fsubrs
sahf
lods
andb
pop
sub
push
mov
cs
int3
popf
mov
pusha
insl
je
or
popa
sti
xor
imul
enter
sti
setne
cmp
fs
mov
mov
cmp
add
add
cmp
lcall
ljmp
dec
adc
push
xor
idivl
add
ret
mov
sbb
and
xchg
inc
push
sub
fsubs
jb
inc
addr16
in
dec
ds
jmp
mov
mov
insb
icebp
sbb
mov
je
or
inc
cmpb
lds
lahf
sbb
dec
add
mov
enter
cld
stc
mov
jns
add
add
dec
loope
sbb
pop
aam
and
mov
add
push
jge
sbb
cltd
cmp
mov
inc
add
addr16
sbbb
jp
leave
push
mov
mov
ss
jge
pop
push
pop
or
xchg
scas
out
repnz
das
insb
cmc
int3
stos
pop
xchg
shlb
cmp
and
sti
push
add
sub
jae
jmp
mov
mov
stos
sbb
dec
sbb
pop
loop
jl
xchg
add
fmulp
cmp
xchg
pop
imul
mov
leave
lret
push
rorb
push
or
or
or
or
xor
push
pop
dec
xchg
rolb
or
or
out
lea
ss
sahf
cmpsl
fnstcw
dec
sarl
mov
ret
filds
outsb
and
push
mov
sbb
clc
addb
jp
add
inc
push
sbbb
mov
shll
popf
dec
push
in
adc
lea
scas
nop
out
jmp
mov
js
cmp
lods
adc
hlt
dec
or
cmp
adc
jmp
sbb
sub
lock
inc
sub
sub
xchg
xor
add
leave
mov
in
dec
je
add
jmp
out
aad
jno
pop
pop
push
mov
pusha
out
mov
cmpsl
movsb
mov
rorl
push
pop
cs
pop
inc
loopne
xor
push
push
lahf
negl
sbb
xor
dec
jg
je
in
fildl
or
push
jmp
or
fwait
call
pop
je
jmp
push
jne
mov
lods
and
ds
out
sub
mov
jmp
add
adc
shlb
inc
cmp
addl
lret
out
in
push
mov
lret
or
and
jmp
sbb
or
add
sub
loope
orb
repz
add
popa
call
out
add
xor
in
lret
in
and
push
sub
adc
loope
daa
sub
jbe
ficoms
cmp
lods
mov
lock
rorl
scas
ja
add
pop
mov
ja
adc
sbb
cmp
mov
mov
xor
aam
jnp
jbe
cmpsb
add
inc
dec
add
push
cs
scas
xor
imul
xchg
or
call
call
sub
push
scas
jno
loopne
popf
imull
enter
cmp
pop
and
pop
imul
sbb
in
mov
sbb
jmp
sub
cmp
lea
cmp
mov
shll
insl
mov
adc
pop
push
cmp
cld
adc
inc
mov
mov
inc
aam
arpl
cwtl
xor
cmc
dec
das
push
dec
bound
adc
in
add
mov
jnp
adc
clc
xchg
mov
lret
push
add
push
sub
imulb
mov
lea
pop
mov
and
and
bound
jg
cmp
je
mov
sarl
outsl
rorb
pop
repz
add
filds
mov
in
mov
sbb
lret
push
pop
inc
ljmp
add
mov
xchg
and
jno
clc
dec
push
sbb
xchg
lar
aaa
jo
sti
mov
mull
cltd
xchg
or
cwtl
cmp
xchg
pop
xchg
mov
xor
xor
repz
pop
test
and
scas
into
cmp
and
and
repz
and
lock
adc
jbe
sbb
add
and
jno
and
and
iret
les
hlt
test
jl
push
inc
push
cmp
inc
hlt
add
jne
sub
pop
inc
fldl
imul
incl
and
sub
je
dec
mov
pop
sbb
je
jmp
mov
jmp
push
push
push
sahf
movsl
notl
jbe
push
inc
out
clc
jle
out
xor
aad
add
mov
or
add
jnp
add
jl
pop
mov
pushf
inc
dec
adc
aad
adc
mov
mov
pop
and
sub
je
pop
aad
sbb
stos
sub
jmp
xchg
jno
ss
jne
mov
scas
cmp
jl
jne
cmp
jg
sbb
push
jmp
push
cltd
xor
sub
add
sub
cmpsl
stc
imul
add
stos
dec
xor
dec
cld
add
testl
popa
dec
cld
gs
xchg
pop
cmp
scas
fcomp
sub
test
cmpl
es
popa
call
mov
fs
jl
call
enter
or
mov
addr16
das
inc
pusha
cmp
mov
fmull
cltd
mov
adcb
ljmp
jbe
adc
lret
in
fidivrl
or
jg
mov
shrb
mov
test
cmp
and
popf
lret
or
and
cmp
or
nop
cmpsl
repnz
in
fnstcw
cmp
pushaw
repnz
jb
and
xchg
jge
es
in
mov
ljmp
call
lock
in
cmpl
loopne
push
mov
les
jge
fiaddl
in
ja
flds
cmp
rclb
pop
data16
mov
insb
ds
add
cmpb
jle
fwait
mov
fs
jne
mov
add
or
repz
xor
mov
xor
jmp
mov
stos
and
stc
jne
bound
mov
jl
imul
ret
cmp
xchg
xchg
gs
adc
ss
sbb
das
jle
mov
push
fsubs
fsubrs
sbb
jne
mov
dec
notb
and
out
daa
mov
dec
jns
cwtl
test
or
jecxz
inc
xchg
add
out
gs
fnstenv
xlat
fs
jl
inc
dec
pop
repnz
subl
push
decb
sub
mov
or
and
test
scas
mov
mov
and
sub
add
xchg
and
xchg
cli
test
jp
sub
addl
cli
and
lcall
xor
or
mov
dec
mov
mov
out
je
test
fs
add
add
jb
daa
add
sbb
roll
push
and
cmp
decb
xchg
bound
ja
loope
push
inc
jne
adc
subb
push
xor
add
push
or
adc
les
sub
xchg
mov
add
out
mov
test
mov
cmpsb
or
cmp
pushf
push
pusha
adc
mulb
testb
mov
jns
hlt
aas
add
adc
outsl
mov
dec
sbb
scas
add
ficompl
addr16
loop
add
or
aas
jbe
or
fldl
fcomps
fisttpll
fmul
fstpl
fwait
jmp
sbb
xor
rcrl
add
add
sti
push
lock
pop
imul
push
sbb
jmp
in
das
les
incl
or
je
push
lret
xchg
test
inc
cltd
and
inc
aaa
mov
lea
push
jns
ret
enter
jg
lods
mov
cmp
xor
and
pop
xor
test
mov
sbbl
addb
fadd
adc
mov
push
hlt
xor
lods
mov
cmp
or
subb
pop
js
nop
leave
daa
mov
push
jnp
dec
sbb
lods
out
add
cmp
in
pop
or
or
mov
loopne
dec
lea
dec
push
daa
mov
pop
pop
pop
mov
enter
mov
add
movl
decb
sti
or
test
add
push
cld
xchg
push
mov
in
add
loope
out
or
dec
call
sbb
sub
call
mov
fdivl
sub
mov
jge
add
jl
je
xchg
cmp
icebp
or
push
adc
adc
add
push
adc
js
aaa
cmp
sbb
sub
sub
inc
jnp
inc
pusha
pop
inc
addl
loope
push
xor
jmp
mov
in
xlat
test
mov
push
sarb
bswap
push
icebp
fcmovb
jbe
pop
sarb
add
out
mov
pop
push
xor
dec
aaa
lret
cmpsb
pusha
xor
hlt
push
push
enter
or
dec
pop
addl
xor
jae
or
pop
jns
nop
nop
arpl
cltd
in
clc
test
push
fwait
es
dec
add
or
repz
jmp
jb
mov
imul
sbb
je
mov
push
cmp
pop
sahf
mov
push
test
test
mov
mov
sbb
loop
enter
ss
clc
lds
stos
add
jge
adc
fmull
pop
cli
lahf
pop
adc
call
xchg
add
mov
jg
cmp
add
jmp
mov
push
repnz
xor
xchg
out
je
jne
ss
or
and
nop
in
in
jle
mov
shrl
mov
add
mov
addr16
pop
add
scas
add
test
loopne
jmp
pop
jecxz
jl
ds
pop
mov
test
fisubrl
or
push
xchg
sbb
mov
add
out
repz
test
dec
inc
pop
shlb
adc
and
xlat
xor
push
les
jmp
sub
outsb
mov
mov
adc
std
mov
mov
inc
push
repz
and
xchg
lods
aad
mov
loopne
nop
leave
inc
jae
cld
and
sub
push
fwait
mov
add
mov
insl
insb
pusha
pop
jae
cmp
clc
or
and
or
out
mov
test
mov
fs
out
push
fiadds
and
mov
jae
cmpsl
push
inc
push
mov
sarb
lret
les
sahf
stc
cmc
push
or
push
lea
push
mov
cwtl
js
imul
or
pop
dec
sub
loopne
adc
int3
pop
mov
add
loopne
hlt
test
xchg
adc
push
dec
leave
mov
mov
mov
inc
or
pop
call
xor
js
inc
xor
inc
add
jo
pop
loopne
push
jo
cltd
adc
mov
sub
les
and
pop
pop
lahf
loope
bound
lods
pop
faddl
in
test
daa
add
inc
jns
add
push
adc
dec
scas
or
push
dec
or
cwtl
mov
test
leave
sti
pop
adc
pop
popa
or
out
ja
jb
nop
jnp
adc
xchg
test
stos
xchg
in
xlat
pop
clc
xchg
mov
loope
js
subl
js
fwait
mov
xchg
add
push
or
and
faddl
cmp
jg
cmp
out
jbe
xor
sbb
jne
sbb
jns
jecxz
push
add
js
sbb
push
inc
and
fdivl
cld
jo
jo
pop
cwtl
decl
push
jle
or
sar
lret
ljmp
sub
jb
loopne
sbb
mov
cld
jmp
push
sbb
or
imul
fld
cmp
pop
pop
fwait
in
adc
ret
loope
dec
inc
loopnew
cld
in
test
pushf
mov
ss
adc
cld
mov
std
or
call
or
fmull
int
hlt
clc
push
in
push
loopne
lock
xchg
xchg
jns
scas
sbbb
stos
dec
push
or
cmpsl
ret
mov
aam
add
push
rorl
push
leave
jo
ret
and
imulb
and
adc
in
xchg
mov
sbbl
das
xchg
push
push
cmp
je
jmp
xor
test
jl
xorl
push
jmp
and
dec
sti
mov
ret
mov
add
push
pop
or
xor
or
or
push
push
pop
cmpsl
sbbb
leave
lock
mov
adc
dec
jae
pusha
adc
mov
add
xchg
lods
mov
inc
icebp
lahf
lcall
hlt
mov
cwtl
insb
sub
mov
lahf
adc
jae
pop
outsb
inc
or
add
adc
mov
push
inc
clc
daa
in
adc
fs
decb
add
cld
adc
add
test
gs
js
shlb
push
push
enter
mov
lods
aam
sbb
cwtl
or
imul
outsb
mov
lahf
repnz
mov
mov
movsb
test
add
dec
movsl
nop
sbb
daa
dec
int3
jb
rorl
jne
sub
dec
aam
aad
ret
lahf
xchg
mov
gs
cld
insl
jg
std
rolb
or
sbb
mov
imul
mov
lret
adc
ret
mov
add
mov
push
sbb
lcall
in
adc
push
nop
out
shlb
sbb
pusha
mov
xor
pop
pop
cmp
sub
mov
mov
out
sub
mov
addl
popa
or
mov
mov
ss
mov
clc
sahf
fbstp
cli
mov
int3
adc
jge
mov
test
add
sahf
and
mov
in
test
shufps
adc
pushf
mov
subl
adc
inc
rcrl
aaa
dec
xor
sbb
daa
adc
cli
test
or
adc
xorb
jne
or
adc
cmp
xor
int
mov
insb
loop
data16
and
imul
mov
or
repnz
rorb
les
das
add
jmp
or
mov
mov
mov
mov
addb
int3
mov
xchg
aam
mov
adc
jne
cmp
pop
xchg
mov
das
call
or
clc
jecxz
mov
inc
pop
inc
arpl
ret
and
push
jp
jae
jbe
or
xchg
test
dec
imul
call
dec
xor
mov
sub
mov
push
adc
push
xchg
xchg
inc
addr16
js
pop
jno
fwait
pop
push
stc
cmp
rorl
bound
xor
dec
inc
jmp
inc
mov
dec
jmp
dec
test
jl
nop
ret
mov
cmp
or
sub
and
sub
dec
or
inc
push
mov
fcomps
jmp
inc
cmp
and
fisttps
mov
iret
je
insl
pop
orl
add
rorl
jne
out
lret
sub
xor
mov
push
sub
inc
mov
xor
test
jg
push
pop
outsb
adc
cmp
xor
xor
and
mov
ret
push
add
add
jmp
and
pop
pop
das
lods
subl
cmp
fmull
push
or
jns
add
leave
and
stc
or
pop
cmp
jge
jl
push
sbb
jne
sbb
ret
ret
data16
aaa
pop
add
or
sbbl
dec
ficompl
loopne
inc
cmp
add
dec
push
add
aam
rcrl
insb
jle
faddl
stc
or
setle
mov
jmp
decl
add
pop
aam
lods
loop
add
jle
repz
or
or
add
jno
ret
stc
icebp
adc
icebp
mov
mov
fdivrs
xor
push
mov
into
arpl
sub
cs
add
sub
push
daa
push
insb
sbb
jb
das
pop
and
push
xor
dec
repz
sbb
repnz
dec
loopne
and
push
cltd
sbb
push
xor
outsl
js
std
aam
add
or
push
inc
mov
subl
push
sbb
jge
aad
lock
stc
mov
testl
mov
fs
xor
pop
sbb
push
adc
xchg
mov
jno
sarl
xchg
or
sub
cmp
lahf
mov
mov
lahf
xchg
je
rcl
pop
scas
ret
add
dec
stc
inc
nop
pop
xchg
sbb
call
pop
xchg
iret
add
sbb
dec
sub
xchg
ljmp
pop
dec
std
lds
pusha
test
lea
inc
inc
jmp
inc
ja
inc
cwtl
adc
cmp
ret
inc
cmp
loope
adc
or
or
test
lock
jl
je
cmpb
mov
sub
lret
push
xor
inc
lcall
js
sub
loope
pusha
lods
inc
outsb
scas
push
push
push
mov
clc
sub
aaa
mov
in
repnz
inc
add
sub
mov
sub
sub
cmp
jbe
xor
xchg
sbb
shrb
shll
push
adc
inc
das
and
mov
xchg
lret
addr16
adc
dec
pushf
lret
pop
and
mov
flds
inc
inc
inc
jne
jg
push
mov
push
mov
pop
push
es
fdivs
inc
mov
inc
and
ret
stos
sbb
lret
jne
dec
addl
fcomi
decb
pop
jne
loopne
pop
popl
addr16
pop
inc
push
or
inc
add
add
sub
jno
push
bound
sbb
shlb
mov
mov
shr
out
fisttpl
mov
mov
loop
cld
pop
cmp
movsl
pop
cmpl
pop
dec
sbb
or
mov
dec
mov
and
sbb
loope
pop
or
pop
push
test
sbb
sbb
sbb
iret
loopne
jne
push
scas
ljmp
mov
iret
add
pop
cmp
cltd
stos
xchg
xor
xchg
adc
je
mov
cs
lock
stos
iret
xchg
pop
cwtl
mov
lods
inc
sub
mov
int3
inc
call
movsb
and
sub
stc
cs
and
xchg
in
nop
add
sbb
or
dec
jae
in
mov
cmovl
nop
pop
fsubl
shr
fisubl
loopne
adc
pop
js
enter
aam
fdivrs
ds
mov
jle
fwait
in
mov
sbb
inc
dec
push
nop
dec
pushf
sub
mov
or
xchg
add
repnz
test
mov
cmp
sbb
daa
insl
xchg
les
ret
adc
nop
pmulhuw
hlt
mov
outsb
xor
inc
push
ds
push
in
push
push
hlt
mov
fidivrs
add
in
sub
mov
adc
enter
dec
ljmp
cmp
outsb
pop
lock
push
insl
das
fs
iret
scas
mov
fs
daa
dec
cmpsb
cmp
jo
push
mov
adc
sbb
imul
dec
add
sub
sbb
push
in
push
out
or
cmp
lock
ucomiss
cltd
lods
sbb
push
sub
pop
cmp
adc
pop
adc
fmull
jnp
and
outsl
jns
cmp
jmp
push
pushl
mov
roll
in
lds
cltd
add
in
sbb
popf
loope
insb
inc
adc
arpl
sub
arpl
nop
mov
xor
call
fistpl
orb
sarl
and
test
loope
orb
push
lock
dec
in
adc
daa
test
jg
jle
adc
push
push
outsb
imul
mov
sbb
ud0
mov
test
or
fs
xor
outsw
fsts
sbb
cli
das
mov
rolb
in
mov
or
pop
jg
or
xor
dec
sbb
cld
inc
jmp
pop
pop
ret
pop
hlt
mov
fnstsw
or
inc
add
jo
push
fcoml
or
jne
in
sbb
xor
jns
mov
jo
mov
and
adc
hlt
scas
add
add
call
loope,pn
aas
lret
testb
clc
cs
inc
mov
push
and
adc
nop
sub
cmp
lea
push
inc
ret
mov
std
add
add
cmp
inc
pop
idivb
ret
popf
sub
mov
mov
add
xchg
cmp
xchg
adc
inc
in
adc
sbb
out
adc
insb
fsub
sbbb
push
ds
dec
pop
and
adc
cmc
cmp
sbb
or
hlt
add
imul
sub
mov
mov
cli
cmp
xchg
pop
scas
jb
jecxz
pop
add
cmp
imul
adc
nop
mov
add
test
mov
mov
push
push
push
xor
scas
jle
adc
and
call
inc
ss
sub
add
icebp
fsubs
mov
loopne
nop
adc
loopne
mov
sbb
shrb
inc
dec
sub
push
fstpl
pop
or
imul
test
or
imul
gs
jo
mov
scas
push
dec
pop
xchg
lock
inc
cmp
call
dec
ret
xchg
pop
divb
mov
sbb
adc
inc
xorl
cmp
and
repz
cmp
cld
icebp
inc
cmp
jne
movzbl
jnp
and
pop
sub
cmpb
sbb
and
daa
jl
and
xchg
js
pusha
push
xor
and
inc
sbb
push
cli
fistpll
dec
and
xchg
add
sub
in
jne
push
loopne
fnstenv
mov
sub
push
mov
inc
or
insb
addr16
iret
fs
inc
iret
fists
cmp
popf
orl
loop
loop,pt
or
or
loopne
push
push
add
pop
addl
lea
aaa
xchg
andps
sbb
inc
mov
xchg
jg
rcrb
add
rcrb
inc
aas
popa
sub
ds
sarb
mov
add
dec
enter
xchg
inc
mov
dec
sbb
ss
in
inc
rolb
lds
add
out
js
aad
movsb
mov
pop
in
sarb
pop
inc
les
xor
and
mov
fildll
mov
pusha
enter
jnp
xchg
adc
sbb
popa
dec
pop
adc
je
xchg
add
and
and
loope
sub
lea
scas
jmp
xchg
ret
les
or
add
cmp
sbb
mov
call
test
insl
divl
cmp
test
dec
mov
mov
lcall
bound
xlat
push
fimuls
ret
decb
decl
cmpl
pop
aaa
mov
ds
jo
stc
ret
mov
or
insb
pop
or
push
pop
push
mov
incl
packuswb
cmp
je
mov
push
ret
mov
jmp
in
and
inc
jecxz
xchg
pop
xor
js
fucom
push
dec
pusha
mov
jle
int
jg
dec
or
dec
xchg
dec
in
inc
xor
jo
ss
enter
mov
sbb
mov
mov
loope
int3
push
pop
xor
mov
scas
cltd
pop
cmp
cltd
or
and
or
mov
mov
hlt
ja
outsl
dec
cmp
cmp
inc
cmp
or
xchg
jecxz
push
jne
cmp
fcmovne
movsb
cmc
cs
or
in
mov
dec
dec
jle
and
xor
mov
fnstcw
and
pop
jo
mov
inc
inc
jmp
add
add
mov
repz
lock
outsb
je
and
loope
das
inc
adc
add
orl
lods
loope
sbb
sarb
mov
jns
je
lock
push
cmpsl
jge
ja
loopne
xchg
fcomps
mov
sarb
enter
aam
cmp
mov
or
repz
repz
inc
mov
add
clc
jne
jns
mov
pop
mov
fidivs
push
fidivs
jnp
push
fs
mov
cmpsl
jne
jnp
jle
cmp
mov
xor
repz
mov
pop
ja
and
adc
in
mov
mov
xor
enter
mov
mov
adc
js
mov
fsubrp
sbb
pushf
mov
mov
lock
xchg
ja
dec
in
mov
call
popf
mov
push
clc
mov
cmp
insb
fdivs
mov
js
ja
pushf
rclb
pop
push
jb
inc
mov
les
fwait
das
mov
inc
mov
pop
mov
jo
lods
lret
jns
test
push
movsb
in
cmp
mov
mov
daa
iret
enter
mov
in
cmp
mov
xor
jns
test
enter
addl
sbb
cmp
adc
orb
rcrl
or
dec
add
js
int3
and
jl
push
mov
in
in
enter
fidivrs
mov
in
inc
push
pop
daa
mov
adc
enter
and
and
mov
adc
sahf
sub
mov
add
inc
test
and
and
sub
inc
fiadds
cmp
js
add
ret
push
repnz
adc
sub
push
sbbb
mov
cmp
cmp
push
adc
xor
jge
lret
add
sub
outsb
sbb
or
jmp
xor
mov
pop
or
icebp
add
aas
or
rolb
rorb
sarb
imul
or
inc
test
mov
pushf
add
shl
xlat
xchg
mov
jl
push
test
add
movsb
push
jb
repnz
or
outsb
nop
sub
mov
nop
and
movsb
test
push
pop
loope
add
fsub
pop
cld
repnz
and
sub
incl
dec
cmpb
cmc
sbb
je
mov
pop
loop
dec
in
cld
clc
pop
cmp
and
sbb
sbb
int3
adc
mov
mov
mov
add
roll
jg
leave
xor
lcall
pusha
nop
in
jns
fistpll
std
sbb
mov
loopne
call
cmp
adc
and
mov
rcrl
in
xchg
orb
or
dec
jmp
or
out
test
daa
pop
push
imul
sub
and
cli
jns
clc
adc
add
fisubrs
jne
cmp
fists
dec
loope
pop
mov
iret
push
loopne
mov
and
or
and
out
sub
xor
mov
dec
sbb
xchg
dec
xor
xchg
dec
xor
and
sub
leave
and
insb
xor
leave
and
je
jl
push
mov
cmp
dec
push
mov
cli
push
mov
test
dec
repnz
mov
mov
repnz
insb
cld
in
dec
push
mov
pop
jno
stc
mov
pusha
push
scas
or
mov
sub
mov
inc
inc
push
sub
fsubs
dec
add
jle
outsl
je
fs
jne
nop
lock
dec
rcpps
out
addr16
adc
mov
xor
jb
pop
outsl
jb
inc
insl
jo
jl
xor
jb
insl
push
je
pop
push
sbb
dec
enter
xor
fsubrs
aas
xor
aas
inc
jae
pop
dec
add
add
pop
pop
outsl
mov
inc
pop
lahf
fs
inc
jne
sub
loope
xchg
and
into
xlat
fsubr
fisttpll
add
and
cmp
sbb
sarb
pop
popf
push
aam
mov
or
push
negl
jp
add
inc
mov
add
daa
mov
dec
nop
sub
sbb
cmp
repz
xor
es
gs
xorb
pop
push
fs
ret
pusha
clc
jnp
or
adc
sub
in
mov
sbb
outsb
or
aas
or
jae
fidivl
add
sub
notb
inc
mov
dec
mov
and
add
ds
push
xor
adc
mov
nop
adc
mov
lods
jnp
loopne
out
mov
or
push
inc
jb
lret
sub
ds
je
mull
inc
popa
adc
test
add
leave
sbb
pop
xchg
fs
or
enter
ds
sbb
inc
and
outsl
mov
addr16
idiv
mov
je
jb
clc
iret
add
fdiv
or
adc
dec
insl
jo
sbb
sbb
push
ds
and
stos
mov
or
and
test
adc
sbb
sub
mov
pop
out
stos
adcb
arpl
or
outsb
pop
bound
bound
int3
cmpb
add
aad
data16
inc
mov
aas
aad
iret
aam
shr
call
stos
mov
sub
pop
stos
and
inc
or
call
andb
mov
push
add
and
ret
test
mov
repnz
pop
or
jb
mov
or
xor
in
and
enter
decb
sbb
test
push
or
inc
sub
jecxz
or
cmpb
xchg
ror
push
add
jmp
clc
sub
out
iret
test
sti
and
dec
je
sbb
or
dec
pop
lcall
es
inc
mull
jbe
add
and
jno
pop
nop
pop
mov
mov
add
enter
clc
adc
mov
jns
leave
xor
mov
stc
xchg
jl
add
mov
jl
jns
in
mov
testb
add
in
dec
sahf
call
push
cmp
push
xchg
jnp
jae
loopne
enter
loopne
pop
push
push
cmpsb
jmp
add
enter
sti
int3
or
xor
imul
popa
push
shl
mov
mov
shrb
mov
or
mov
enter
xchg
sub
cmp
or
jmp
lds
je
jbe
mov
aad
xchg
jge
je
adc
xchg
enter
iret
ss
mov
cmp
push
rolb
or
clc
dec
arpl
shrl
pop
pop
add
push
jo
push
roll
rcrl
das
mov
lahf
ret
jo
add
mov
out
enter
push
repnz
mov
fldenv
add
mov
test
mov
shr
mov
mov
insl
adc
mov
mov
mov
call
das
test
les
testb
sar
pop
and
push
add
andb
sub
dec
pxor
adc
and
pop
lods
int
rol
lcall
dec
lret
ds
and
subb
pop
fiaddl
inc
xor
lea
or
cmp
lods
push
jno
in
enter
push
or
and
rolb
out
pop
pop
adcl
cwtl
inc
inc
xchg
dec
xchg
orl
push
ret
nop
rclb
fcomi
push
dec
jnp
push
push
out
in
call
pop
in
fsubs
ret
fsts
addb
fidivl
push
cld
jmp
inc
pop
push
stos
mov
ficoml
adc
or
add
nop
mov
push
dec
addb
adc
xor
add
pop
jl
push
mov
div
and
fsubr
mov
shld
pop
in
daa
adc
push
add
jo
jmp
mov
or
jb
pushf
add
jne
movsl
aas
enter
pop
je
jb
xchg
and
std
jno
test
mov
sub
add
sub
add
outsb
jmp
sbb
in
loopne
in
mov
loopne
mov
std
lock
mov
jno
lds
js
sub
jae
add
jnp
adc
test
xchg
lock
pop
inc
push
movsb
call
mov
dec
push
ret
outsl
cmp
mov
inc
call
pop
rorl
push
fldt
adc
test
mov
popl
popa
adc
in
cmpsb
decl
push
adc
je
push
sahf
call
add
or
movsb
adc
cmpsl
jnp
pop
cmp
adc
cmp
dec
aaa
les
xor
inc
jmp
adc
inc
jl
sub
mov
and
cwtl
sbb
cmc
pop
push
lock
pop
jne
push
in
cmpsb
lcall
or
or
push
rcll
and
or
add
pop
and
aaa
inc
sbb
mov
cmc
mov
mov
and
outsl
sbb
sub
inc
dec
jo
jns
insb
adc
push
mov
sub
adc
movzbl
je
mov
inc
out
or
in
push
inc
fisubl
jmp
inc
lock
jl
lock
jnp
hlt
add
imul
adc
filds
call
add
adc
or
rcrb
or
push
inc
mov
adc
dec
add
mov
movsb
and
mov
mov
adc
push
dec
cmpsl
lcall
shlb
or
ljmp
and
xchg
xchg
imul
mov
leave
and
jo
or
add
xor
lds
pop
jae
ret
loopne
add
ss
addb
pushf
movsb
add
and
fisttps
shl
cmp
sbb
adc
sub
add
outsl
mov
pop
rcll
mov
add
cmp
ja
imul
outsb
stos
ret
div
cmp
repz
sub
in
lcall
push
jae
iret
jnp
out
sbb
xchg
or
subl
mov
rcl
fstl
dec
les
cmp
xorb
xor
mov
sbb
test
push
xor
stc
mov
and
xchg
lock
dec
jb
test
or
add
inc
cmp
imul
xor
push
push
lahf
sub
xor
inc
xchg
dec
push
loopne
dec
rcll
cmp
xor
fmull
mov
sbb
fdivrs
enter
xor
or
out
or
xchg
push
sub
sbb
cmp
jne
fisttpl
inc
in
int
int
js
fwait
push
sbb
add
adc
pop
dec
je
jmp
fsubs
int
in
xor
add
les
ja
sub
test
in
in
adc
mov
add
mulb
mulb
sbb
dec
sbb
insl
iret
repz
leave
call
fcmovbe
pop
sbb
pop
pop
xor
rep
mov
or
lods
add
xor
daa
icebp
flds
jno
mov
in
mov
xchg
push
mov
xchg
mov
lods
mov
sbb
mov
cmp
or
nop
fwait
inc
sbb
movsb
aad
sbb
mov
je
mov
pushf
lods
cmp
add
or
fwait
subb
aaa
xchg
dec
push
jmp
ds
nop
nop
cld
mov
dec
dec
gs
xchg
mov
sbb
lahf
sbb
aaa
test
adc
test
cli
or
fiaddl
out
repnz
loope
sbb
sbb
jmp
lock
push
lods
fucomi
and
add
stos
xor
dec
and
in
cmc
dec
push
adc
mov
sbbl
mov
loopne
aad
sbb
push
test
in
and
push
daa
sbb
fists
push
loopne
loopne
mov
or
mov
loopne
inc
aas
cmp
xor
push
in
repz
repz
mov
imul
push
scas
ficomps
test
jns
xchg
push
daa
stc
adc
push
dec
and
cmp
lods
dec
cmp
push
pop
dec
js
inc
mov
sub
les
jnp
test
cmp
insl
xor
lcall
and
or
pop
mov
jb
fsubl
fdivl
inc
movsl
les
test
dec
dec
pop
add
roll
add
loopne
xor
insb
push
ja
or
and
nop
out
and
and
sbb
in
pop
pop
push
jns
xchg
idivl
xchg
mov
dec
mov
je
sub
pop
pop
inc
fs
repz
sahf
mov
adc
add
rol
shrb
mov
inc
pop
rclb
inc
arpl
mov
popa
fwait
xor
and
lods
and
adc
mov
dec
dec
add
pop
mov
mov
fidivrl
mov
xor
and
popa
and
inc
loopne
aaa
dec
mov
xchg
jecxz
xchg
ja
sbb
pushf
or
or
jns
cwtl
jmp
add
ds
cwtl
mov
lea
xchg
mov
add
rorb
mov
push
dec
jno
mov
jle
mov
pop
aas
loope
add
sarb
inc
sub
mov
movw
aam
nop
in
push
sbb
loope
fisubs
cmpsb
gs
mov
push
push
or
test
mov
data16
or
push
seta
loopne
pop
or
mov
pop
push
add
js
adc
cmc
xchg
xor
mov
xor
rolb
push
push
out
pop
outsb
xchg
jo
repnz
mov
pop
movl
push
ficoml
mov
jmp
std
pop
push
addr16
insl
jo
jns
sahf
test
das
dec
jne
pop
les
rclb
inc
cwtl
dec
push
daa
and
inc
push
ds
jmp
add
inc
outsl
jne
xchg
leave
jp
mov
or
jmp
mov
pusha
dec
addr16
or
or
andl
cmpsl
in
xorb
sbb
aas
and
inc
and
mov
iret
push
adc
addl
shlb
mov
pop
daa
inc
jmp
idiv
adc
pusha
mov
in
and
out
cmovno
or
ja
push
dec
aas
ret
cmp
aas
inc
sti
fsubrs
mov
nop
cmpsl
cmp
push
test
jno
aas
sub
mov
sahf
stc
pop
sub
inc
jo
pop
jmp
push
cmp
and
push
or
mov
lea
or
push
xchg
pop
adc
test
add
mov
sbbb
add
out
mov
cld
xchg
nop
jbe
in
mov
stc
mov
outsb
jns
push
inc
push
and
gs
push
sbb
mov
push
push
jle
andb
scas
hlt
test
adc
xor
add
push
test
pop
mov
cmpsl
nop
scas
mov
xchg
icebp
xchg
clc
sbb
inc
insb
sahf
push
dec
push
psubusb
pop
mov
push
xor
mov
cmp
cld
jle
jo
pushl
out
jb
jo
xchg
pusha
inc
mov
push
cmp
rorb
or
outsb
sbb
out
push
xchg
lds
add
sbb
pop
lds
xor
push
js
mov
cmp
jnp
je
jbe
mov
adc
into
or
fstl
mov
inc
lea
fstl
jle
imul
pop
dec
sbb
adc
add
or
adcl
mov
mov
lock
push
or
adc
ret
lcall
lods
or
mov
push
sti
idiv
mov
nop
adc
daa
xor
inc
add
mov
rcrb
fcoms
or
sbb
mulb
mov
subb
mov
jecxz
mov
jle
jae
into
icebp
das
in
dec
cmpb
rorl
inc
ljmp
inc
xchg
inc
testl
addr16
aaa
adc
fwait
xlat
enter
xor
xor
aas
loopne
cmp
push
adc
pop
or
jbe
arpl
and
pop
imul
xchg
push
sub
fwait
push
movsl
daa
mov
jno
push
adc
jg
mov
add
jne
and
addr16
add
inc
ja
lock
jl
add
sub
pushf
or
lock
fcoml
decl
mov
mov
sbb
sbb
sahf
lock
insb
test
xor
inc
sbb
enter
inc
inc
dec
jne
cltd
xor
or
movl
adcl
adc
pop
rorl
push
adc
call
fs
pop
push
shrb
cmp
jp
adc
push
push
lock
pushf
orl
jbe
xchg
fcmovne
scas
scas
seto
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
xchg
xchg
xchg
xchg
lcall
xchg
sahf
lahf
addb
addl
xchg
xchg
mov
les
add
jge
test
out
add
dec
and
cli
cmp
shrl
add
adc
scas
lret
or
mov
std
add
mov
sbb
test
jne
jle
or
jmp
cs
dec
xor
cmp
jle
inc
rolb
lods
mov
cwtl
lahf
cmp
jl
dec
sub
sbb
cmpl
xor
mov
in
cmp
sub
sub
mov
inc
int
sbb
test
pop
subb
or
or
mov
clc
mov
movsb
fbld
push
aas
outsb
sbb
mov
jl
or
sub
cwtl
enter
mov
and
cmp
ss
fwait
jecxz
push
mov
and
sbb
inc
add
jbe
lock
jmp
jle
in
je
jmp
cmp
insb
adc
insb
sbb
test
out
jne
inc
xchg
sub
outsl
daa
int3
mov
push
or
stos
mov
push
dec
ljmp
xchg
sbb
pop
sbb
lcall
or
bndstx
jmp
es
test
clc
pop
xorb
cmp
aas
pop
je
mov
sbb
xchg
mov
and
decb
push
adc
ja
arpl
jle
mov
sbb
add
push
pop
movsb
push
add
add
jae
or
movsbl
sub
jle
inc
daa
jmp
ret
pop
aaa
cmp
insb
jo
add
ds
ljmp
push
adc
pushl
mov
mov
cmpb
ja
jb
add
add
call
xchg
and
out
mov
mov
rolb
lret
or
outsl
scas
cwtl
jl
cli
push
cs
mov
addl
add
mov
por
enter
and
bound
fsubrp
aaa
mov
pop
bound
lret
dec
jae
in
or
fcoml
mov
stos
insb
lahf
loop
mov
add
pusha
hlt
xchg
jle
inc
lock
adc
pop
and
sub
or
stos
test
ljmp
pop
cld
dec
or
lods
cmp
fimull
dec
sub
out
jmp
or
jmp
sub
clc
ret
ds
dec
pop
add
test
dec
dec
xchg
add
inc
or
sar
mov
jo
sub
inc
sbbl
and
push
xor
popa
adc
jns
ret
fistps
push
push
jbe
clc
or
or
adc
in
sub
mov
and
sbb
hlt
aas
pop
xor
or
rorb
push
ret
xchg
or
xor
jp
inc
js
sahf
xlat
out
dec
hlt
fmuls
inc
icebp
and
jmp
movl
jne
and
inc
popa
mov
cmp
fisubrs
scas
into
cmp
decb
add
testl
jne
xchg
sahf
imul
pop
outsb
push
push
inc
data16
adc
lods
pop
ja
xor
adcl
outsl
or
and
sbb
xor
faddl
jnp
inc
xlat
pop
push
inc
xor
iret
repz
mov
push
call
fstps
fsubl
sub
jb
jo
add
or
mulb
mov
push
or
cmp
or
jae
popa
and
pop
lret
jo
mov
push
lea
lods
and
jge
cmc
or
xchg
aaa
or
sub
cmp
mov
clc
xchg
rorl
pop
out
sub
ffree
inc
sub
movsb
adc
imulb
mov
fistpll
jo
aam
outsl
xor
jns
jae
mov
pop
pusha
sbb
add
jmp
pop
jmp
cmp
or
jmp
adc
push
sbb
jp
push
pop
push
inc
sbb
push
stos
jmp
rsm
push
and
mov
pop
andl
xor
fildl
sbb
adc
adc
add
adc
jge
es
mov
ja
jae
repz
mov
adc
dec
or
dec
add
movsl
push
xchg
mov
jbe
fnstcw
sti
fnstcw
push
cwtl
jmp
cmp
fs
or
or
mov
mov
fldcw
adc
mov
adc
test
mov
cli
sbb
popf
sbb
push
xchg
xor
int3
sbb
or
imul
mov
fdivr
dec
inc
fimuls
je
lcall
jns
sbb
push
xchg
pop
inc
insb
popa
jbe
nop
sbb
decb
push
inc
imul
mov
bound
test
js
into
sbb
adc
dec
outsl
sbb
dec
arpl
subl
jecxz
mov
scas
dec
outsb
insb
jns
fimuls
inc
cmpsb
shll
insl
outsb
ss
push
mov
inc
je
insb
out
mov
fmull
cmpsl
or
dec
imul
shll
or
inc
arpl
add
sbb
or
dec
ljmp
js
add
jno
mov
fadd
adc
out
aaa
xchg
or
or
dec
gs
outsl
fdivs
rclb
jae
dec
outsb
add
sahf
xor
jne
push
push
jnp
shll
adc
mov
mov
inc
jbe
dec
or
push
gs
arpl
test
mov
add
test
jo
das
or
repnz
mov
wrmsr
aaa
xor
mov
xchg
mov
mov
inc
push
leave
inc
xor
xor
in
in
push
movsb
and
mov
lea
lods
outsb
push
sbb
cmp
daa
and
or
jb
pushf
popf
dec
sahf
pop
pushf
clc
aaa
or
jnp
cmp
hlt
scas
adc
xchg
push
dec
cmp
add
push
inc
and
insl
xchg
ljmp
mov
adc
mov
inc
repnz
add
ds
mov
add
jb
out
out
scas
pop
mov
inc
int3
jae
mov
push
sub
sub
adc
arpl
push
dec
ds
setns
add
insl
jo
push
popa
mov
mov
and
and
mov
push
sub
push
cwtl
nop
jb
or
jp
jb
outsl
int3
adc
push
test
and
fwait
dec
jbe
mov
cmp
jno,pt
rol
adc
push
adc
mov
bound
xchg
xor
dec
js
push
add
nop
loop
mov
aas
and
call
pop
insb
xchg
add
adc
pusha
fs
addr16
pop
push
cmp
lock
push
push
push
add
inc
js
push
clc
push
pop
add
icebp
and
sub
inc
xor
push
push
add
or
jmp
test
movl
js
dec
test
pushf
inc
jg
or
pop
jnp
insl
pop
adc
xor
int3
lea
fldl
aaa
hlt
push
movsl
cmp
jbe
dec
pop
sub
sbb
repnz
cmp
push
add
and
lock
fisttps
sbb
aam
cmpsb
mov
xor
adc
mov
shlb
shll
or
loopne
and
pop
add
inc
lock
push
aas
addr16
sahf
testb
insb
sub
outsb
push
cmp
cli
ficoms
test
sbb
andps
fisubrl
dec
pop
cmpsl
push
cwtl
xorb
sub
loopne
cwtl
dec
cmp
lock
sar
shr
popf
in
repnz
dec
mov
xor
cmp
xor
or
pop
aaa
sbb
roll
sti
stos
inc
adc
inc
push
push
mov
lea
pop
xorl
and
mov
push
cmpsl
insb
inc
pop
mov
and
ficoms
dec
aas
mov
sahf
ss
adc
inc
pusha
mov
nop
push
incl
xor
and
dec
clc
aas
jns
inc
mov
cld
sub
cmovns
fs
jo
jnp
decl
pushf
jae
push
rclb
sahf
cmpsb
shrb
pusha
repz
outsb
pusha
inc
loopne
jno
clc
push
or
cli
inc
xchg
ss
dec
test
add
je
test
les
cld
jle
mov
adcb
xorb
mull
pop
jbe
push
and
pushf
ja
iret
imulb
mov
adc
jl
sbb
sahf
out
add
push
mov
adc
jo
hlt
cmpb
or
fsubrl
dec
or
pusha
lods
rcll
dec
ds
inc
mov
or
sub
cmp
sub
dec
in
lds
dec
inc
inc
pop
xor
stc
lock
inc
addb
mov
insb
jo
mov
mov
pushf
outsl
in
mov
sbb
pop
push
ror
lock
in
xchg
xchg
enter
loope
mov
mov
neg
adc
outsb
mov
insb
push
jo
mov
jle
mov
mov
sarl
mov
cmp
xchg
rolb
pop
push
nop
movb
lea
xchg
js
andl
das
fcom
orl
xlat
sub
mov
pusha
lds
mov
daa
push
out
fcmovbe
xchg
push
call
es
mov
dec
lret
nop
mov
mov
fsubs
adc
inc
jb
dec
xor
inc
add
enter
lds
mov
ret
dec
pop
inc
lds
andl
xchg
inc
mov
adc
movl
push
imul
dec
adc
add
adc
ds
push
dec
inc
rol
mul
and
enter
inc
hlt
xchg
jo
popa
int
repz
test
or
push
btl
out
and
fmulp
loopne
or
dec
push
adcb
cmpsl
or
pushf
pop
adc
sbb
addr16
rcll
cltd
inc
movl
jecxz
andps
jb
xchg
xchg
addr16
or
or
jb
pop
adc
and
jb
sbb
sub
pop
jb
sub
xorb
fs
in
in
fisubl
in
out
cmp
repz
int3
inc
dec
pop
repz
repz
mov
mov
jmp
imulb
adc
mov
icebp
inc
add
sbb
pushf
stos
out
and
scas
push
shlb
lods
adc
jbe
push
and
out
sahf
xor
les
shl
push
pop
in
nop
sub
cmp
cs
or
add
in
cmp
out
or
xchg
push
scas
xchg
sub
cltd
sbb
pop
push
fnsave
jp
jnp
mov
es
sbb
fsubs
push
jo
nop
lds
mov
and
sbb
leave
push
leave
adc
dec
jnp,pt
inc
xor
pop
inc
xlat
shlb
fdivrs
cwtl
sarl
and
dec
rclb
mov
in
xor
pop
insb
test
or
das
inc
nop
ds
sahf
cmp
aas
das
pop
call
rcll
sbb
dec
mov
mov
lret
or
loopne
cmp
or
adc
inc
mov
aam
shlb
or
dec
sub
rep
add
xchg
pop
inc
int
dec
addb
push
push
add
mov
ja
inc
mov
bound
mov
push
aam
add
les
xor
inc
fldl
inc
popf
in
in
add
dec
fldenv
fidivl
fdivrs
sub
jbe
inc
push
cmp
fs
mov
cmp
dec
mov
xchg
pop
add
stc
clc
push
push
push
push
push
push
cmp
icebp
push
call
mov
sub
out
out
sahf
cld
push
add
push
adc
aam
sahf
cmpsl
jge
fdivrl
add
rolb
sbb
lods
xor
nop
xlat
pop
and
cmp
lcall
xor
push
sbb
add
cmp
imul
add
pusha
jmp
dec
pop
shrl
divl
jl
out
push
fs
les
cmp
sarl
push
inc
push
arpl
xlat
aad
int
cli
imul
dec
mov
scas
dec
fs
dec
push
push
push
push
mov
aam
and
mov
jnp
cmp
inc
in
addb
loope
iret
mov
sarb
out
pushl
or
push
aaa
pop
lods
bound
dec
and
stos
pop
outsl
mov
dec
fs
and
add
jb
pusha
xchg
adc
out
test
pop
pop
push
data16
add
xor
fildl
lea
xchg
xlat
dec
jl
or
and
cmp
jne
xor
je
in
mov
dec
shlb
and
negb
pusha
mov
addr16
jb
jne
fsubrl
ds
jl
pop
xchg
push
shrb
and
pusha
pop
pushf
push
enter
or
xchg
add
in
cmpsb
cmp
push
mov
dec
cwtl
cmp
xlat
bound
test
rcll
pushf
add
pusha
or
inc
xor
jmp
lret
mov
pop
inc
or
decl
or
sbb
or
adc
inc
test
ret
pop
add
push
sub
sub
fstpt
mov
test
lret
scas
test
sbb
adc
js
and
add
out
lret
inc
cltd
stc
mov
stos
sub
inc
scas
loopne
xor
popa
inc
xlat
and
xchg
adcb
adc
pop
mov
add
jo
or
imul
sub
pop
fadds
push
push
xchg
jl
mov
es
jo
xbegin
fs
incb
loop
or
scas
adc
rorl
gs
sarl
jmp
and
and
mov
mov
pop
or
push
inc
sbb
ja
sbb
int
dec
nop
out
and
int3
dec
jne
pop
lea
pop
xchg
and
inc
hlt
leave
cmpl
pushf
rcrl
pop
push
pop
call
xor
jle
lds
lea
push
push
adc
push
insl
add
mov
cmp
add
and
aas
dec
jmp
push
adc
push
adc
xchg
cmp
sbb
out
jae
pop
adc
fcoms
fs
push
jl
dec
shlb
fsubp
push
sbb
mov
cmp
inc
arpl
cmovae
cmpl
cli
sbb
inc
in
sarb
gs
push
adc
in
pop
rcl
fistpl
imul
pop
or
xchg
loop
outsb
je
adc
cmp
daa
mov
dec
jne
push
mov
sub
xchg
sbb
mov
xor
add
adc
add
pop
test
ljmp
pop
outsb
mov
mov
inc
push
rclb
fisubrl
mov
mov
push
or
mov
cmp
sub
sub
movb
insl
dec
xor
aaa
and
pop
add
push
roll
fdivrl
movl
in
and
roll
add
push
inc
aam
dec
sbb
call
jmp
mov
sbb
cmp
push
inc
xlat
xor
lcall
icebp
dec
outsl
and
sbb
mov
sub
arpl
jne
add
xchg
scas
and
sub
add
inc
and
dec
addr16
push
addr16
loope
outsl
mov
xchg
sbb
jecxz
cmpsb
out
mov
and
call
inc
rcl
or
mov
fcomps
jne
push
sbb
pusha
fldenv
adc
add
push
push
jl
inc
push
call
mov
push
in
int
or
hlt
cmp
je
dec
fisubs
inc
roll
test
int
jne
mov
jne
fcompl
lock
push
adc
fmull
decl
jne
jb
or
sti
jbe
xchg
inc
mov
fistpll
lock
adc
push
sbb
xor
jle
inc
enter
cltd
out
mov
test
ret
mov
fnstsw
sbbb
pop
push
int
rorb
shrl
mov
punpcklbw
pop
xor
xchg
inc
mov
in
js
add
sti
sbb
pop
pop
dec
lahf
lret
mov
test
outsl
hlt
mov
add
test
add
pop
sbb
add
popa
pop
mov
or
jae
lods
adc
adc
fadds
mov
xchg
cmp
xor
cmpb
add
adcb
jecxz
or
mov
dec
jae
je
push
scas
imul
or
test
test
xlat
add
imul
arpl
jb
stos
or
mov
cmp
and
cmpsl
scas
pop
movsb
scas
ss
imul
dec
dec
mov
hlt
push
test
hlt
insb
jae
pop
lods
mov
mov
mov
sub
add
jg
pop
and
xlat
xor
jno
enter
inc
icebp
cmp
jbe
inc
sbb
inc
jge
inc
sub
pop
xbegin
ret
dec
sub
pop
sbb
addl
lahf
jbe
inc
or
sbb
sbb
es
xchg
sbb
loopne
adc
and
pusha
xchg
pop
lds
or
dec
inc
sbbb
add
leave
test
dec
cs
mov
add
cli
sub
mov
pop
cmp
shll
mov
push
add
addb
or
cmpl
cmp
jo
out
jae
addr16
add
xor
dec
pushf
or
or
inc
sub
out
mov
pop
pushf
mov
mov
mov
xor
cld
and
mov
pop
stos
add
inc
mov
cmp
jne
or
sub
mov
push
dec
addr16
rol
mov
xor
lea
lea
mov
aas
and
push
cmp
cld
mov
test
cli
sub
mov
fisttps
add
xchg
call
adc
sti
sub
xor
or
sub
add
or
or
push
cwtl
pop
enter
fdivl
loopne
add
daa
insb
pop
shrl
or
fisubrl
or
mov
mov
mov
out
popa
cmp
pop
mov
fisttpll
fcmovne
pop
dec
call
push
xchg
clc
push
rolb
and
gs
rcll
rorl
movb
pop
sahf
push
mov
xorb
push
nop
pop
xor
sti
mov
pop
enter
adc
pop
mov
fcoml
xchg
push
sub
push
dec
cmp
popa
inc
es
inc
sub
xchg
test
or
daa
push
add
test
ss
mov
dec
nop
add
push
mov
jo
packsswb
pop
mov
insl
data16
sbb
or
xchg
pop
pop
adcb
dec
push
outsb
lock
mov
push
or
pop
jle
cs
jnp
adc
mov
lret
xchg
cmpsl
std
in
jecxz
fwait
shlb
fstpt
xor
push
push
inc
popa
cwtl
popa
pop
push
clc
je
lret
sub
dec
fcomps
mov
int3
push
push
pop
push
xor
test
cld
pop
mov
xchg
cmp
dec
rorb
fldenv
and
test
sbb
inc
push
fstp
ret
xchg
popa
jbe
adc
movsl
sbb
and
cli
mov
adc
shlb
test
rcr
scas
add
imul
jnp
dec
mov
push
lods
cmp
fnstsw
das
fcoml
aas
or
xorb
sbb
mov
cmpsb
arpl
jg
add
adc
js
pop
pop
inc
movsb
inc
mov
cmp
inc
dec
push
dec
std
lret
mov
inc
or
xor
push
fwait
in
dec
std
add
lahf
and
ficomps
adc
mov
stos
fcmovnbe
jb
cwtl
or
mov
jp
inc
outsb
rolb
lods
stos
mov
pop
xor
dec
jbe
add
sub
lea
or
mov
in
mov
jmp
jb
inc
ljmp
mov
mov
mov
ret
pop
jns
shlb
sarl
test
test
jns
insl
mov
dec
jmp
out
push
inc
inc
xchg
loope
push
outsl
push
mov
push
adc
xchg
sbb
sbb
add
stc
add
adc
dec
out
gs
add
add
shrl
dec
bswap
pop
jle
test
stos
add
dec
or
add
adc
jne
or
movsl
negb
jne
leave
mov
inc
dec
scas
loop
adc
cmpsl
cwtl
sub
sbb
sbb
add
inc
or
push
hlt
jecxz
clc
add
daa
lea
divl
jle
pop
aaa
jl
call
jbe
jbe
and
pushf
jmp
pusha
xchg
lahf
lahf
movsl
push
inc
xlat
inc
xor
mov
pop
and
add
jmp
xor
or
lret
push
inc
adc
js
jg
or
pop
andl
push
je
push
rolb
outsb
jns
push
xor
dec
jg
jns
mov
mov
jle
mov
ret
xchg
addb
adc
movsb
fs
mov
jmp
dec
dec
mov
sub
jg
dec
mov
dec
dec
inc
fmull
faddl
sysret
test
add
xlat
lea
or
inc
jbe
and
dec
and
or
mov
mov
mov
leave
cmpsb
les
pop
movl
push
pop
sub
push
jmp
movsl
in
mov
fucompp
loopne
add
and
shrb
push
lds
fldt
dec
add
or
or
pop
push
adc
inc
mov
daa
bt
inc
pop
and
and
adc
inc
and
sbb
lds
sbb
outsb
scas
sbb
test
lods
mov
pop
add
adc
adc
enter
cmp
xchg
jg
push
pop
insb
rcll
pop
push
imul
xchg
movsl
xchg
fwait
push
mov
xor
push
idiv
hlt
rcrb
clc
add
add
sbb
or
outsl
pop
call
out
je
andl
mov
push
adc
sub
push
loop
shll
addb
push
add
sbb
xor
cmp
jae
add
leave
je
stos
adc
btr
cmp
jl
adc
inc
adc
jmp
push
cld
mov
fmuls
cmp
jge
dec
mov
test
pop
out
cmp
mov
xor
lock
ljmp
xor
push
and
bt
jb
nop
add
cmp
ret
in
dec
cld
cmp
jl
adc
push
inc
cmp
jne
inc
decl
jne
les
pop
aaa
mov
add
mov
and
loopne
test
dec
push
dec
in
out
imul
or
xchg
adc
fsubs
outsb
mov
leave
or
or
lcall
lods
and
rcrb
or
dec
push
imul
or
imul
xchg
mov
and
dec
xchg
scas
push
mov
jo
push
sbb
inc
outsl
std
adc
mov
push
and
sbb
sbb
orl
mov
pushl
js
repnz
jne
push
and
mov
push
add
adc
add
add
mov
or
add
mov
add
dec
popa
ljmp
int3
rcll
dec
aas
or
sub
jb
clc
adc
cmp
test
cwtl
cmpw
adc
mov
sbb
je
addr16
push
pop
mov
mov
and
jmp
pop
push
jo
sub
adc
pop
jl
sub
cmc
mov
stc
pop
cmpsb
or
xchg
ret
mov
ret
mov
mov
mov
fists
xor
cli
or
adc
fcoms
cmpsl
mov
popa
mov
adc
pop
inc
jo
pop
cmpl
adc
test
test
ret
mov
add
loope
mov
or
rolb
xchg
push
mov
adc
icebp
adc
pop
inc
es
ja
in
in
adc
xor
jnp
cmp
add
and
mov
bound
and
add
or
incl
les
mov
sbb
add
in
in
ja
test
insl
in
mov
int3
and
pop
push
or
shll
and
lock
aad
push
xchg
aam
fld
testb
bound
pop
call
push
pusha
pop
sbb
jbe
dec
cmp
into
jne
adc
js
jo
pop
das
mov
jle
sbb
mov
pop
and
out
aaa
outsl
cmp
inc
mov
dec
sti
pop
enter
cmp
sub
pushf
shlb
fdiv
pop
sbb
mov
sbb
xor
xchg
and
ss
dec
aas
push
lock
repz
pop
sub
je
inc
pop
cld
pop
rorl
mov
or
ficomps
mov
adc
lahf
inc
and
add
mov
pop
hlt
jnp
xchg
sub
pop
sbbb
push
jle
inc
es
xor
addr16
add
hlt
insl
cmp
or
jg
xadd
jns
jo
dec
or
xlat
add
sbb
pop
xchg
dec
pop
js
andl
ficompl
pop
mov
push
xor
dec
pop
lea
popf
jmp
ja
out
sahf
in
push
jno
inc
cs
dec
clc
inc
mov
fidivrl
push
ficompl
adc
push
clc
dec
fadds
adc
inc
mov
inc
or
clc
pop
mov
add
push
addr16
or
loope
push
adc
cmp
add
cmpsb
sub
loopne
dec
fldt
cmpsb
sarl
je
xchg
mov
dec
add
mov
push
adc
cmpsb
data16
push
mov
fmulp
inc
scas
dec
cltd
xchg
sub
and
xor
sub
aaa
inc
std
mov
mov
jb
cmp
jne
lea
cwtl
fs
xchg
cmp
push
lock
adc
push
sbb
inc
dec
jne
cmp
bound
ja
bound
sub
adc
inc
pop
inc
sub
jp
outsl
adc
mov
movsb
aad
xor
mov
adc
jnp
idivb
decl
sub
sbb
pushl
sbb
pop
and
outsl
sti
jp
out
iret
pop
push
mov
push
inc
xchg
push
fldenv
inc
ds
fld
test
xchg
mov
insb
pop
cs
jb
incb
outsb
push
xor
iret
pop
ret
adc
add
daa
cmc
sbb
loopne
adc
pop
fs
jmp
sbb
sub
cmp
xchg
jo
xlat
fcoms
push
scas
repnz
loop
xchg
pop
lock
cmp
add
lods
rcl
and
xor
pop
std
ja
add
ffree
je
xchg
je
mov
stos
clc
repz
jp
lods
sub
into
pop
jns
sbb
mov
iret
enter
sbb
inc
dec
jne
scas
mov
mov
dec
add
adc
daa
outsb
cmpsl
mov
in
rcl
fisttpll
pop
roll
enter
je
adc
jle
adc
repnz
add
push
popa
cs
push
loopne
adc
jne
push
and
rcl
add
lea
sahf
dec
clc
popl
jo
sub
mov
sbb
iret
sbb
pop
mov
mov
jp
pushf
and
mov
lahf
ret
cmp
adc
ja
or
sbb
xchg
push
xor
adc
add
in
adc
dec
movsb
pop
andb
jnp
lea
pop
push
add
and
cmpl
pop
pusha
sbb
ror
and
jbe
or
popa
cmc
mov
cmovne
jge
mov
xor
lock
or
rcrb
or
gs
jne
adc
lods
xchg
pop
loopne
jbe
in
das
add
push
nop
daa
addr16
inc
push
and
sub
dec
adc
cli
imul
sub
xchg
ja
or
enter
lock
aaa
mov
shll
xchg
sub
sub
cld
roll
xor
dec
xchg
and
mov
das
sbb
hlt
and
popa
adc
sub
cmp
sub
lods
lock
inc
bound
push
iret
scas
test
dec
sub
ret
xchg
dec
cli
add
mov
mov
mov
stos
and
push
fdiv
rcrl
push
aad
adc
js
xor
dec
sbb
add
lock
mov
jo
mov
test
mov
int
push
addl
in
loope
dec
push
dec
mov
cmp
mov
sbb
adc
int
or
xor
out
js
cmpsl
jo
pop
cmp
add
jp
aam
adc
xor
js
or
xchg
adc
jne
push
cmpsl
in
aas
inc
mov
add
mov
jno
stos
inc
sub
sub
and
rolb
dec
jl
dec
sub
dec
out
aas
sub
outsb
sbb
mov
cld
cld
pop
cmp
loopne
rcr
gs
add
clc
inc
loope
xor
stc
test
hlt
jp
xchg
pop
sub
gs
xchg
sub
fcomip
cld
jo
into
jno
cmc
jnp
and
cltd
jbe
cmp
lods
jne
aaa
and
loope
push
pop
pop
adc
xchg
inc
js
or
pop
and
adc
add
cwtl
mov
jl
lahf
sub
inc
push
in
clc
jbe
outsb
cmp
ret
and
sbb
add
lcall
xor
jl
nop
shlb
sub
and
xlat
push
cmp
cmp
popa
inc
ret
popa
in
in
sahf
adc
or
arpl
push
push
mov
cmp
jno
clc
xchg
popa
sbb
ud0
jne
les
icebp
les
pop
jecxz
inc
sub
or
xor
outsb
adc
test
mov
cmp
les
add
out
or
xchg
xchg
stc
xchg
cmc
mov
fsubs
and
mov
sbb
mov
pushf
or
xor
or
xchg
jge
sbb
loope
fldt
jge
mov
or
iret
sti
cmp
sub
sub
lock
loop
jge
sub
into
loope,pt
lods
xor
pop
or
pushf
out
fwait
dec
aaa
test
jle
cmp
add
pop
and
xor
outsb
add
fs
rorb
pop
and
jle
pop
dec
push
leave
adc
fs
xlat
inc
popa
and
adc
mov
jmp
loope
mov
fcmovne
pop
xlat
mov
arpl
pop
sbb
mov
sbb
dec
inc
mov
adc
jle
jmp
cmp
inc
and
jg
inc
xor
fstpt
pop
fs
daa
push
push
sub
or
and
adc
mov
adcb
sub
xchg
and
and
dec
mov
lea
jne
mov
adc
rcrl
pop
and
mov
js
lods
pop
das
rolb
pop
xlat
lea
adc
mov
addb
stos
or
int
es
or
jmp
test
fidivrs
xor
data16
bound
push
ljmp
lods
inc
sub
xchg
dec
cld
popa
mov
dec
or
push
adc
aam
sub
jns
fxch
mov
cmp
or
inc
js
hlt
add
divb
mov
push
or
and
pop
add
or
call
push
pop
mov
repz
loopne
mov
dec
loopne
ret
call
add
outsb
inc
push
add
imulb
cmp
hlt
add
sub
enter
cmp
or
stc
je
pusha
test
fistl
rclb
bound
mov
sub
ret
sarl
rcl
pop
sbb
or
inc
xor
loopne
push
inc
lea
cmpsb
incb
sub
sub
mov
push
pop
add
js
add
mov
add
das
sbb
and
loopne
mov
jne
pop
lahf
xor
jb
in
cwtl
push
mov
jmp
mov
jge
cmp
fldt
adc
je
jp
testb
xchg
pop
cmp
jne
mov
test
bswap
lea
or
xchg
and
mov
sub
xchg
and
sbb
test
adc
add
insb
inc
dec
testb
mov
mov
or
or
out
or
push
jle
mov
shrb
add
or
jecxz
push
out
ret
push
or
cmp
jne
testb
dec
or
xchg
addl
movl
or
add
sbb
add
jb
sbb
adc
jg
mov
pop
lar
pusha
jae
es
or
movsl
pop
dec
or
shll
xor
arpl
adc
imul
inc
inc
das
push
sbb
push
pop
test
rorb
and
pop
sbb
dec
cmpb
pusha
sbb
add
xchg
cmp
dec
mov
mov
je
cmp
add
jmp
or
imul
inc
mov
fmuls
es
xchg
mov
push
jmp
data16
push
icebp
inc
sub
push
enter
aam
nop
mov
xor
pop
mov
sbb
xor
test
or
dec
sbb
inc
ret
mov
insb
push
subb
nop
or
arpl
lea
dec
xchg
les
push
lock
mov
lock
fnstenv
mov
inc
xchg
dec
jb
jnp
iret
sub
cmpsl
mov
mov
sbb
fistps
rorl
sbb
sbb
cltd
add
xchg
or
pusha
push
ret
push
add
cmp
dec
fcmovnu
in
daa
ret
mov
cmp
dec
mov
fiadds
sub
ja
sarb
mov
nop
test
add
sbb
imul
cmpb
stos
repz
jle
sbb
inc
testb
xor
test
repnz
enter
mov
mov
push
in
aas
mov
sbb
add
dec
push
and
popa
pop
mov
mov
mov
outsl
sbb
imul
lretw
xchg
sbb
xchg
shlb
mov
xchg
int3
pop
fs
sub
je
insb
mov
xchg
or
imul
sbb
sbb
add
and
cwtl
and
push
fs
orb
nop
cmp
mov
push
in
push
xchg
dec
push
incl
scas
stc
nop
cltd
mov
ret
insl
push
movsl
cmp
nop
pop
add
mov
mov
nop
jne
push
loop
int3
add
rorl
add
cmp
pop
adc
iret
movsb
or
and
pop
inc
and
or
hlt
je
mov
jne
mov
adc
mov
int3
subb
dec
inc
jge
sbb
jle
mov
ficompl
dec
in
hlt
jl
inc
and
insb
cmp
enter
cmp
and
and
push
cmpsl
and
adc
pop
andl
jo
mov
in
or
das
arpl
pop
pusha
lock
adc
xor
lcall
rclb
cmp
popf
sub
addb
add
push
cmp
test
sahf
jp
orb
es
jo
xchg
stos
add
aaa
shlb
push
sbb
loop
cmp
add
inc
xchg
ss
or
insl
daa
leave
mov
aam
sub
in
faddl
mov
incl
das
sbb
shlb
mov
out
pop
sbb
cmpl
cmpl
xorb
adc
mov
jbe
and
fisubs
out
mov
dec
mov
cmp
lods
sub
arpl
jecxz
cmpsl
adc
fwait
imul
lahf
scas
movsb
mov
or
das
cmp
cmp
push
outsl
jne
icebp
lea
cmp
pusha
or
xor
push
orb
sbb
inc
adc
add
sarb
cmp
ja
jecxz
mov
pop
les
jne
cltd
dec
mov
nop
jo
jb
scas
mov
out
cmp
push
inc
cmp
lret
adc
inc
pusha
xor
and
and
movsb
or
mov
and
cmp
cld
inc
pop
or
push
cmp
jb
mov
mov
mov
jb
fmuls
sbb
push
ficoms
int
jge
xchg
popa
popf
pop
adc
cld
push
jecxz
cld
popf
lock
push
add
add
dec
or
add
sbb
adc
add
test
aam
inc
popa
fbld
cmp
add
jp
jge
mov
add
xchg
aam
add
ja
lret
stc
jg
adc
fisubl
sbb
mov
mov
mov
movsl
call
add
adc
cmp
push
mov
aas
movsb
mov
add
dec
dec
dec
movsl
cmp
cmp
and
mov
ljmp
or
lahf
mov
mov
aas
adc
jmp
inc
popa
outsl
inc
and
and
lods
adc
jo
add
dec
dec
call
sub
xchg
out
scas
xchg
add
aad
inc
in
inc
dec
movsl
sub
jg
xchg
jle
adc
fimuls
pop
mov
mov
add
adcb
movsl
cmpsb
sbb
call
sub
icebp
pop
pop
flds
jmp
xchg
xor
jbe
movsb
jle
add
adc
inc
mov
inc
pushf
add
test
inc
std
cwtl
jge
lea
mov
popa
insl
or
jecxz
in
in
test
pusha
imul
xchg
jae
mov
dec
add
xchg
xlat
xchg
test
in
mulb
jge
enter
inc
dec
es
xorb
insl
nop
or
adc
or
and
adc
adc
out
inc
pop
push
xor
loop
daa
ffreep
roll
adc
or
stos
gs
jecxz
or
and
and
fs
xor
sub
ficoms
cmp
in
icebp
dec
add
into
mov
jle
jle
mov
cmp
je
dec
je
fisttpl
jmp
pushf
or
add
add
sbb
ss
fcoml
xor
fwait
notl
ret
xchg
nop
inc
add
jno
pop
das
lret
inc
dec
sub
test
loopne
sbb
testl
or
or
jl
cwtl
aad
prefetchnta
push
movsb
push
add
cmpsl
adc
push
add
xchg
mov
test
call
cmpsl
jns
mov
clc
dec
or
sbb
in
pusha
in
adc
repnz
pop
loopne
mov
mov
or
mov
pop
cld
mov
cwtl
cmp
pop
adc
stos
adc
adc
and
dec
adc
jmp
lret
nop
movzwl
add
int
loop
rolb
test
push
xchg
cmp
repnz
jbe
push
mov
pop
mov
lods
ljmp
cmp
adc
cmp
lea
lods
xlat
shrb
pop
add
lds
push
add
sbb
push
out
dec
cmpsl
ret
push
xchg
mov
addb
inc
pusha
fimuls
push
imul
jmp
xor
pop
inc
nop
outsl
rolb
lea
jno
dec
dec
mov
ret
or
in
mov
add
adc
jge
ret
add
sub
push
and
add
pop
sarl
and
stos
pop
jne
dec
add
in
lret
or
and
jge
xor
sub
shll
in
out
inc
das
add
enter
sub
cmp
sub
xchg
sbb
out
sub
add
call
mov
inc
jmp
sub
sub
imul
or
mov
imul
in
cwtl
fstl
sarb
push
repz
push
push
sub
inc
enter
aas
mov
movsb
bnd
divb
pusha
js
pop
xchg
push
inc
xchg
mov
mov
aaa
cld
push
xorl
push
shrb
cld
mov
mov
push
fidivrl
mov
dec
movsb
dec
ljmp
jo
mov
cmpb
jbe
jmp
adc
or
cmp
jg
pop
daa
xchg
loopne
cmc
sbb
xchg
fwait
sub
inc
adc
sub
or
rclb
inc
imul
out
push
add
leave
in
lcall
out
mov
call
sub
inc
out
les
cmpsb
out
and
or
inc
rorb
xor
dec
adc
adc
dec
or
add
imul
adc
add
push
cmpb
sub
mov
and
dec
push
jnp
push
int
sbb
clc
lods
xchg
mov
mov
add
mov
ds
mov
pop
sbb
nop
cs
decl
add
rolb
aaa
in
pop
jecxz
lea
divb
jbe
or
iret
and
sbb
leave
mov
pop
and
lods
xchg
cmpl
pop
mov
inc
push
add
sub
jae
adc
pop
mov
dec
xchg
aad
fwait
ret
sbb
or
loopne
movsb
roll
imull
or
sub
add
mov
or
fadds
sbb
push
push
pop
dec
adc
pop
inc
roll
jl
clc
jl
inc
push
enter
inc
outsl
jge
adc
orb
jmp
xchg
xchg
mov
imul
jmp
fstpl
xor
cmpl
jecxz
fmuls
mov
sbb
repnz
cmp
mov
mov
adc
adc
dec
adc
jg
push
add
fidivl
sbb
or
pop
testb
sub
adc
mov
aaa
les
and
lock
adc
or
mov
sti
sub
jmp
sbb
jg
jmp
push
cmp
jl
sub
sahf
jbe
int3
inc
xchg
sub
and
jbe
inc
mov
andw
fnstcw
stc
sahf
sbb
sbb
xchg
aaa
lahf
mov
rorl
imul
push
jmp
fisttpl
inc
filds
lock
sub
enter
inc
test
push
push
mov
daa
adc
sbb
mov
inc
mov
sub
out
dec
je
and
arpl
cmpb
nop
inc
enter
add
out
les
aam
mov
ds
xor
nop
mov
test
or
add
xor
push
inc
fs
sub
jg
loopne
inc
fmuls
mov
push
adc
sbb
js
xchg
pop
dec
and
sub
add
mov
cmp
ret
dec
adc
mov
ret
ja
sbb
mov
sbb
bnd
incl
pop
jo
xchg
push
loop
out
jmp
in
mov
push
sbb
sub
mov
sbb
sbb
sbb
movb
add
ljmp
sbb
fwait
xchg
je
push
cmp
xchg
aas
loopne
hlt
aaa
scas
enter
cmp
imul
dec
lret
jne
jecxz
xor
decl
fisubrs
add
icebp
or
dec
movsb
push
inc
lret
push
pushf
sub
sbb
mov
jmp
fisttpl
inc
sub
jnp
inc
insb
pusha
jo
stos
cs
js
xchg
cmp
adcb
hlt
sbb
mov
xchg
xchg
inc
notl
push
push
aaa
jno
mov
jmp
cmp
mov
negl
pusha
xlat
adc
jp
rolb
sbb
pop
daa
pop
dec
adc
fs
push
push
pop
jecxz
lds
sbb
pusha
dec
cmp
jo
mov
pusha
mov
mov
inc
pusha
test
aaa
daa
in
inc
lods
push
sbb
hlt
mov
sub
jne
aad
jno
push
or
jne
pop
cmp
add
sub
sar
mov
outsl
push
jne
out
mov
imul
jmp
inc
push
test
jnp
inc
sub
movsl
adc
adc
adc
mov
xor
pop
int
dec
jo
and
lea
fsubrs
enter
ss
js
cltd
call
or
hlt
inc
jl
js
mov
rorl
loopne
xor
xor
xchg
pusha
and
leave
xor
jo
rorl
pop
inc
mov
dec
pop
xchg
outsl
and
or
cmp
xchg
dec
and
test
xchg
adc
adc
into
frstor
sub
fnstsw
push
ja
je
adc
inc
fcomip
hlt
inc
rclb
ret
call
mov
sub
xchg
xor
mov
dec
xlat
decl
push
push
xchg
loop
fucomp
jno
mov
jne
jp
iret
aam
nop
cld
cmp
jno
mov
pop
mov
mov
or
dec
mov
ja
pop
into
sub
sub
ficoms
push
xlat
out
in
ficoml
mov
nop
nop
inc
movsb
cld
negb
push
mov
mov
dec
adc
mov
ja
clc
cmp
outsb
fsts
xor
add
add
inc
jecxz
stos
cli
rcrl
pop
mov
or
xlat
fcomps
add
out
les
lods
jne
andb
or
out
jns
inc
inc
and
jmp
popf
and
mov
jle
push
sbb
es
in
or
imul
cmpsb
clc
lahf
mov
xchg
movl
sbb
jno
cmc
jo
xor
lds
push
jmp
or
pop
mov
sub
jae
pushf
les
mov
ret
or
mov
mov
fs
je
cmp
mov
and
pop
xchg
ja
and
subb
daa
xorb
mov
pusha
lahf
out
push
add
sub
lods
mov
mov
int3
xor
xor
loopne
lods
mov
and
pusha
scas
pop
lret
inc
cwtl
dec
mov
jg
xlat
push
jge
enter
je
mov
aam
xor
xor
mov
xor
xor
cld
add
cmpsl
out
cmpsl
movsl
ficoml
pop
decl
cmpsb
icebp
xor
add
jge
pop
mov
mov
push
jnp
lods
cltd
pushf
fs
xor
not
and
cs
ss
int3
ret
dec
adc
and
xchg
fs
gs
or
incl
xchg
lcall
imul
mov
cltd
cmp
pop
imul
jo
push
popf
iret
and
insb
mov
jae
sub
shl
ret
pusha
int
mov
and
je
add
rolb
jb
sti
loope
ror
in
xchg
jo
imul
fdivl
xchg
in
push
mov
mov
scas
bound
in
dec
sbb
or
addl
push
js
rcrl
inc
or
mov
inc
sbb
pop
and
test
idivl
push
and
loopne
inc
xchg
fcoms
mov
add
and
sub
mov
pop
fstl
or
inc
fisttps
pop
in
or
shl
cmp
in
or
adc
push
dec
repnz
enter
add
xor
and
adc
sub
xor
inc
xor
sub
test
xor
pop
xchg
addr16
pop
sub
adc
stc
sub
nop
dec
sti
adc
fadds
cmpl
mulb
or
lcall
or
lock
jmp
adc
jg
push
mov
add
jne
inc
push
pop
lahf
jne
fwait
dec
leave
lret
or
mov
push
add
xchg
sbb
mov
in
push
sbb
add
xlat
test
call
pusha
sbb
push
js
jecxz
adc
out
sahf
aaa
in
inc
movsb
push
stc
sbb
fldt
xchg
inc
fnsave
dec
xor
push
imul
sbb
jecxz
sbb
aas
and
add
mov
push
mov
fsubrl
jae
cmp
fsubs
out
repnz
sub
ja
or
pushf
pop
fst
push
fistpll
roll
mov
cmpsb
imul
xor
sbb
int
out
scas
mov
or
lahf
cmp
xchg
loop
push
or
cmp
sub
mov
and
daa
insb
mov
or
inc
daa
mov
ljmp
push
and
adc
shlb
in
mov
leave
sbb
imul
jge
popa
sub
and
pushf
mov
out
inc
add
stos
sub
clc
cltd
sbb
pop
adc
sub
xor
push
stos
aam
inc
pop
clc
sub
je
push
movsb
pop
mov
jp
lcall
outsb
lock
dec
sbb
and
aaa
mov
ret
testl
enter
add
inc
jb
lock
adc
ss
sbb
push
sbb
test
fildll
dec
addb
inc
and
mov
fimuls
or
loopne
and
orb
sub
mov
cld
cld
add
mov
sub
push
icebp
dec
xchg
in
sahf
push
or
pop
insl
adc
mov
mov
jbe
sti
or
shrb
jecxz
sub
jnp
fnstsw
sbb
jae
jae
dec
adc
inc
jl
divl
cs
inc
outsl
jnp
clc
imul
and
inc
jo
cmc
ss
cmp
mov
mov
xchg
mov
push
popa
rcrb
in
xchg
cmp
cli
es
in
add
mov
add
iret
push
adc
sub
mov
pop
in
in
fbstp
mov
mov
jne
ret
and
testb
addl
aad
jecxz
push
xchg
fsubrl
stos
shl
push
mov
inc
addl
fists
adc
xchg
mov
and
arpl
outsl
lahf
lret
xchg
fsub
mov
sbb
es
jmp
push
inc
jns
mov
inc
js
or
sbb
xchg
lds
rclb
hlt
adc
adc
sub
xlat
into
pop
lcall
jbe
push
inc
xchg
mov
mov
inc
inc
cmp
dec
imul
cmp
test
js
dec
hlt
dec
or
sbb
icebp
cmp
adc
push
cmp
xor
dec
jl
jmp
stos
add
mov
sbb
popa
mov
add
jge
arpl
dec
rcll
pop
add
adc
mov
jmp
ret
lahf
xchg
inc
punpckhwd
pop
cmp
stos
dec
mov
mov
mov
and
or
pop
clc
pop
pop
aad
pop
pop
addb
testl
mov
or
andb
xor
or
pusha
inc
repnz
dec
cmp
ds
xchg
or
cmp
push
outsl
movsb
rcl
lret
mov
test
inc
daa
cmpsb
mov
dec
fnstcw
sbb
xor
rcl
lahf
inc
roll
pop
loopne
mov
add
mov
push
cld
bound
fidivs
xor
sbb
pop
shrb
f2xm1
pop
pop
xor
push
hlt
and
push
aaa
pop
mov
call
lods
inc
sub
mov
add
fdivrs
or
xorl
lods
sti
mov
test
clc
jge
inc
enter
xor
sbb
sub
jno
jno
orl
push
dec
xchg
push
push
and
sub
test
add
inc
daa
add
shrb
sub
bound
mov
dec
fs
sbbl
xor
push
repz
negl
test
mov
push
popl
iret
sarl
inc
arpl
stos
jns
out
mov
push
pop
dec
orl
cmp
and
and
ja
call
in
push
xchg
aam
std
enter
xor
ss
xchg
mov
mov
fcoml
cmpb
mov
adc
lret
sbb
ret
jle
and
lret
and
leave
fdivr
fsubrl
mov
in
cs
popa
sub
mov
xor
ret
ja
inc
mov
push
mov
pop
xor
fsubs
loope
dec
add
fwait
mov
in
js
and
xor
xchg
aam
out
test
mov
aaa
sbb
outsl
les
push
iret
pop
pop
shl
test
adc
sbb
std
inc
imul
and
repnz
insl
sbb
add
dec
jge
and
enter
inc
popa
in
popa
xor
jne
add
lret
adc
inc
add
dec
lods
fsubl
jae
and
ds
out
add
fdivs
cmpsb
sahf
imul
in
mov
scas
fcompl
hlt
movsb
fwait
cmp
popa
out
mov
or
movsb
cmp
xchg
sub
add
fnstenv
xchg
cld
test
addb
jbe
mov
repz
sbb
pop
mov
fdivl
sbb
or
movsb
jge
jne
and
add
and
mov
ror
mov
mov
adc
pop
mov
popf
mov
fmull
rorb
adc
mov
adc
insb
outsl
sbb
fwait
xchg
inc
sbb
rcrb
mov
xor
in
pop
xlat
mov
pop
adc
push
enter
cmp
pop
lret
adc
pop
xor
ss
test
dec
xor
shlb
cmpb
pop
and
adc
ret
mov
push
orl
mov
pop
fistps
das
loopne
pop
cmp
shl
mov
fdivs
dec
fidivs
sub
push
jge
cld
lock
insl
daa
pop
jge,pn
dec
adc
cmp
in
or
nop
hlt
idivb
jmp
push
sbb
nop
movsb
lahf
xor
adcl
inc
loopne
cs
or
ret
inc
lods
test
pop
mov
in
add
jg
inc
push
mov
loopne
stos
ret
jmp
push
lock
inc
movsl
lock
xor
nop
xorl
loope
and
sarb
add
mov
pop
ret
addr16
xchg
mov
lea
in
rolb
or
adc
into
orl
adc
lea
mov
ja
cld
inc
push
je
push
adc
sub
jne
sub
data16
stc
jle
inc
jl
mov
mov
inc
adc
mov
push
sub
in
xchg
inc
jae
roll
les
sub
xor
dec
int
jae
dec
roll
push
shrb
pop
push
clc
dec
cld
or
pushf
adc
jp
cmpl
mov
push
xchg
cmpsb
inc
sahf
sbb
pop
das
inc
add
inc
sahf
inc
dec
shl
push
dec
adc
push
stos
pop
daa
lock
and
jmp
push
dec
dec
xor
sub
add
aaa
inc
mov
aaa
or
ret
cld
jp
adc
xchg
add
add
out
adc
pop
test
xchg
mov
and
scas
rcl
mov
mov
xor
xor
arpl
gs
repz
adc
in
pushf
pop
mov
pop
adc
xchg
sbb
xchg
les
ja
pop
sti
daa
ret
inc
jg
test
nop
fwait
cmp
repz
mov
fmulp
repz
add
push
sbb
sahf
out
sub
inc
push
loope
fiadds
setle
je
push
stos
cmp
cltd
sbb
and
and
xchg
and
fsubr
or
pop
mov
jmp
fldl
push
push
xor
nop
gs
push
testb
sbb
insl
cmp
shll
mov
pushf
les
enter
ffree
or
pop
in
scas
nop
mov
lods
or
push
push
xchg
inc
push
sub
push
out
sub
ret
sbb
xchg
xor
jmp
les
mov
cs
daa
xchg
add
xchg
out
and
dec
xor
jae
repnz
push
or
or
or
rclb
pop
push
lods
ret
iret
xor
call
cmp
aas
fimull
sbb
push
and
cmp
movl
js
stos
cmp
scas
push
rclb
sbb
bound
test
and
mov
cmp
dec
jmp
sub
rclb
sbb
adc
into
push
xchg
dec
rcrb
sbb
mov
inc
sbb
adc
dec
lret
push
sub
mov
push
shrb
adc
pusha
add
loop
nop
inc
fimull
fldt
stos
add
mov
inc
les
jl
jle
outsb
add
inc
sub
inc
outsb
push
and
ss
jg
jmp
xchg
test
push
in
enter
add
sub
xchg
pop
enter
sub
sbb
inc
call
shlb
fmull
hlt
sbb
inc
jb
inc
adcb
mov
ret
in
mov
pusha
cmpsl
enter
insb
lods
ret
lock
xor
cltd
sbb
add
stos
clc
es
mov
inc
pop
mov
inc
push
arpl
mov
fbstp
push
sbb
stos
in
repnz
cmp
cmp
or
hlt
pop
dec
or
das
xor
mov
or
inc
pop
sub
aas
sbb
xor
test
pop
les
jb
jbe
mov
dec
lcall
dec
cmpsb
push
loope
push
ret
clc
fldt
jns
je
das
mov
fidivrs
jbe
addr16
dec
push
pusha
mov
cmp
or
std
sbb
mov
adc
mov
adc
pop
pop
inc
repnz
mov
scas
fs
daa
mov
fs
pop
mov
mov
outsb
xchg
push
clc
jo
insl
loop
adc
pop
enter
jmp
daa
aas
ret
xchg
push
lea
test
cld
jmp
das
and
mov
inc
add
and
jns
xchg
push
mov
adc
adc
pushf
aaa
int
data16
dec
or
dec
jl
fsubrl
mov
lret
inc
cwtl
std
add
inc
or
inc
adc
cmp
leave
inc
addr16
gs
test
sub
shrb
or
mov
sysret
jnp
mov
and
jg
sbb
cmp
mov
mov
jl
adc
std
sbb
jg
mov
push
add
mov
xor
add
add
add
inc
maskmovq
imull
mov
and
aas
cwtl
je
mov
mov
call
or
push
dec
addl
push
add
push
lods
addb
push
or
sbb
dec
xor
ds
stos
lcall
mov
and
enter
and
push
ds
mov
dec
inc
push
and
pusha
push
push
std
mov
or
dec
add
movsb
insb
pop
addr16
call
mov
xchg
sbb
dec
sbb
ss
pop
popa
movb
pop
dec
mov
push
movl
cmp
push
fists
sub
cmp
je
sbb
insl
and
and
mov
dec
sub
popf
popa
xor
nop
jmp
dec
or
or
inc
cltd
iret
fnsave
cmp
rcll
jp
mov
mov
adc
jg
clc
xor
add
mov
addb
ja
outsl
sbb
int
stos
sbb
push
fmulp
les
ljmp
test
rclb
inc
cmp
and
movl
or
add
sbb
mov
sub
or
nop
and
imul
push
movb
mov
in
jle
rorb
sub
in
iret
add
xchg
sbb
nop
mov
dec
mov
lea
jne
or
and
xlat
bndldx
pop
lods
cmpsl
roll
or
xchg
push
adc
mov
push
lds
xor
lock
insb
sbb
test
f2xm1
jnp
pop
bound
inc
mov
cmpsb
les
pop
push
push
add
sarb
sbb
aam
cmp
inc
ljmp
lods
or
lock
mov
les
add
and
ret
lcall
inc
fstl
shll
cmpb
cmp
lds
sbb
sbb
test
ficompl
pop
imul
xor
icebp
jo
push
adc
pop
cmc
mov
ret
lahf
pop
cmpb
adc
inc
cmp
xchg
pop
inc
dec
pop
outsb
mov
mov
sbb
addl
repnz
dec
cmp
push
shll
mov
sbb
sbb
sub
jne
jno
ret
jae
scas
jecxz
adc
xor
mov
mulps
fadds
jecxz
xchg
aad
adc
mov
dec
dec
or
outsb
mov
jne
adc
jne
xchg
sti
fidivl
sub
ret
xor
xchg
pop
xchg
popf
icebp
adc
rcll
call
mov
pop
sbb
loope
inc
jmp
ret
xchg
je
inc
icebp
push
add
push
ja
push
sub
orl
dec
mov
inc
or
jbe
xchg
xchg
aam
lea
outsl
das
pop
inc
js
ret
push
add
imul
inc
daa
inc
lds
ret
sbb
andl
fcomip
or
adc
inc
add
sbb
or
fstl
xchg
mov
push
loopne
in
loopne
gs
aam
leave
dec
mov
loop
fndisi(8087
jno
or
dec
xchg
add
add
xor
jo
adc
push
mov
jae
mov
push
sub
inc
pop
inc
mov
push
es
jecxz
mov
push
fdivrs
icebp
leave
mov
popf
xchg
ret
or
sbb
jne
movb
outsl
lret
push
rol
xchg
js
int3
jmp
adc
dec
xchg
mov
addr16
and
addr16
and
adc
dec
inc
fcom
ss
setne
sbb
mov
and
movsb
mov
or
fwait
loope
mov
pop
cwtl
adc
inc
imul
sub
fsubrs
push
inc
add
inc
and
push
pop
adc
fsubs
adc
in
subb
rcr
xor
sbb
push
jecxz
hlt
push
or
inc
rsm
pop
shll
dec
mov
push
jg
int3
inc
nop
add
stos
outsl
mov
jnp
sub
xorl
hlt
sub
adc
add
cmc
stos
xchg
inc
pushf
jle
in
push
rolb
mov
or
adc
insl
adc
lock
ss
mov
orl
mov
cmpsl
fldenv
inc
cmp
sbb
sbb
inc
sahf
jns
xchg
mov
sbb
xchg
adc
push
push
adc
add
in
inc
adc
xor
xchg
rorb
add
pop
dec
xchg
dec
push
adc
mov
and
dec
popa
sbb
xchg
jae
jae
loope
adc
sbb
int3
cwtl
mov
or
and
pop
out
inc
pop
movsl
fisttps
or
xchg
bound
insl
adcl
ss
imul
insb
mov
jmp
xor
rcrb
cmp
push
lock
adc
cmp
xchg
shlb
ret
aam
das
test
lcall
sbb
adc
adc
mov
loopne
imul
lcall
popf
lea
adc
sbb
out
sub
pop
sbb
adc
scas
mov
ss
repnz
or
sub
rcrb
pop
pushf
imul
and
xor
pop
xchg
sub
inc
jb
idivb
adc
cmp
pop
push
push
jge
mov
sub
sysret
pop
loope
and
lods
ficoms
loopne
or
xlat
test
xorb
int3
xchg
sarl
inc
hlt
jmp
inc
sub
int3
mov
adcb
mov
outsl
lock
hlt
adc
xlat
push
outsl
jo
mov
out
pop
pop
add
insb
int3
lods
or
aaa
inc
inc
jg
mov
daa
pop
pop
arpl
jbe
lret
dec
das
sahf
int3
push
leave
sbb
dec
das
or
xor
ret
push
mov
or
jne
cmp
jne
das
lret
and
jne
addl
enter
hlt
pop
push
adc
adc
cmpb
dec
jg
dec
mulb
hlt
pop
mov
inc
pop
dec
imull
out
sarb
sub
bound
xor
sbb
mov
jle
dec
sbb
arpl
inc
dec
jne
rclb
push
je
or
les
hlt
outsb
and
sub
in
stos
mov
cli
push
das
jmp
sbb
and
inc
sbb
lret
mov
cmpsl
add
pusha
movsl
cmc
push
adc
adc
shll
push
adc
inc
or
xor
mov
stc
and
jo
int3
rdtsc
and
and
jnp
aad
jge
cmp
jg
push
dec
cmp
ja
push
add
gs
xchg
lret
add
out
cmp
fwait
inc
cmp
data16
subb
push
test
sub
xor
inc
add
pusha
push
mov
dec
jne
adc
popa
adc
loopne
add
aam
cmpsb
shrl
add
out
loope
mov
dec
pusha
movl
cld
repz
or
inc
testl
adc
adc
xor
inc
and
popa
in
das
dec
pop
push
test
pop
int3
andb
scas
jnp
jne
aas
lds
jmp
push
mov
xorb
pop
rclb
dec
pushf
insb
out
or
in
cltd
cmp
and
aas
inc
cmp
push
cwtl
and
cmpsl
adc
sbb
push
pop
out
das
and
out
fs
outsl
mov
test
icebp
mov
mov
cmc
shlb
pop
xor
cmp
xchg
scas
scas
sbb
sarl
ret
mov
pop
mov
push
pusha
xchg
add
or
dec
popl
lds
xchg
push
jmp
ss
and
xchg
adc
stos
inc
xor
xlat
jge
push
or
add
imull
dec
sub
dec
out
inc
adc
pop
xor
sbb
std
pushf
mov
in
or
popf
pop
add
xor
pusha
pop
sbb
mov
sahf
inc
sub
popf
push
imul
aaa
dec
dec
dec
ds
and
inc
test
adc
or
inc
je
dec
push
outsb
dec
lret
dec
pop
sbb
xlat
sub
loope
inc
adc
out
in
hlt
nop
pop
inc
push
stc
and
xchg
cmp
pop
test
lret
sbb
fmuls
sub
xlat
cld
jnp
push
lret
cmp
jne
push
mov
and
mov
aam
dec
out
pop
xor
test
pop
divb
push
add
scas
dec
es
orl
sbb
pop
insb
shrl
adc
pop
adc
xlat
mov
xor
sub
mov
jle
je
mov
adc
xor
adc
aam
and
out
add
cmpsl
pusha
scas
or
cli
mov
or
int
out
psrad
cmp
push
adc
add
iret
or
push
cmpsl
pop
adc
xchg
or
add
sbb
add
fcomps
cmp
lret
ss
das
or
lods
xchg
rorb
add
or
scas
addr16
inc
mov
add
push
add
roll
add
add
inc
cmp
call
push
hlt
int3
add
cld
pop
inc
add
movl
loopne
mov
inc
in
fsub
xor
fnstenv
push
adc
mov
xchg
push
hlt
sbb
leave
adc
add
clc
insb
xchg
xchg
cmpsb
aam
jg
imul
mov
sub
jae
xchg
mov
test
cld
js
scas
sbb
subb
mov
mov
sbb
mov
test
fsubr
test
or
push
sub
push
jl
lcall
aas
push
jo
mov
and
fmul
ror
int
xchg
sub
lret
push
adc
rcrb
push
jp
or
or
xchg
push
jo
inc
xor
adc
out
push
loopne
xchg
sbb
sbb
mov
loopne
xchg
sub
shr
sub
imul
in
roll
repnz
iret
or
or
jo
adc
sbb
xchg
mov
add
xor
and
leave
dec
pop
mov
fdivrs
notb
cmp
loope
das
jmp
and
movl
xchg
je
out
or
dec
movsl
sbb
rorl
inc
mov
sub
imul
dec
jb
or
test
jne
popa
push
mov
aas
push
ja
xor
loope
stos
cmpl
dec
loope
jp
cmp
fnsave
es
ja
cmp
xor
and
push
int
adc
add
add
adc
mov
add
out
aaa
mov
jne
insb
push
fistps
popa
sub
push
lea
mov
in
sbb
push
sub
mov
pop
or
into
add
adc
fsubs
inc
add
pop
add
lea
pcmpeqb
xor
mov
fimull
push
or
xor
xchg
or
mov
in
movsb
add
push
dec
xchg
xor
inc
cld
test
imul
xor
jnp
push
daa
ret
mov
clc
fidivl
sub
and
jp
pop
std
insl
outsl
fs
pop
push
push
jmp
cwtl
push
lret
push
xor
mov
addr16
rorl
mov
imul
unpcklps
je
fcoml
test
nop
mov
adc
push
xchg
sarl
push
pcmpgtb
sti
xor
xlat
or
shll
das
mov
mov
sbb
lods
and
sbb
push
mov
or
cmp
cmp
shlb
ja
outsl
icebp
xchg
in
mov
sbb
inc
cmp
mov
dec
sub
fs
or
flds
add
and
data16
in
int3
push
sub
adc
or
dec
rolb
loopne
cltd
inc
sub
adc
je
subb
xor
iret
dec
imul
in
mov
bound
xchg
inc
nop
push
xchg
xorb
rcll
xchg
mov
call
or
push
jecxz
andl
jmp
pop
fcompl
and
jge
xchg
test
mov
fxrstor
or
ds
sub
out
int
pop
xchg
cld
mov
pop
rcll
mov
or
xor
outsl
or
mov
imul
jae
push
les
dec
fs
add
xor
gs
fbld
xchg
and
add
adc
test
adc
fld
test
data16
sub
add
jbe
ds
or
rorl
inc
in
xchg
or
cs
jmp
pmuludq
or
imul
fcoml
push
mulb
ljmp
loop
out
call
dec
mov
test
stos
fcoms
dec
add
in
push
jb
fildll
jns
out
leave
popf
movsl
lods
or
cmp
cmp
push
jecxz
jmp
fdivp
fdivp
sti
add
rorl
xor
push
inc
aas
jns
rolb
ret
dec
inc
cltd
icebp
sbb
jg
sti
rcll
and
outsb
xor
dec
loop
push
inc
mov
or
aam
sub
cmp
incl
mov
stc
dec
and
pop
and
sub
jo
dec
xchg
fcom
pushf
cmp
add
add
cmp
mov
ja
out
add
scas
pusha
movsb
pop
jmp
dec
jecxz
outsb
popa
xchg
nop
fmul
push
nop
inc
mov
adc
add
popa
xor
sets
mov
rorl
into
jl
ja
sub
je
cmc
stos
push
nop
hlt
pop
loop
in
popf
fsubrp
mov
add
call
dec
or
mov
jg
push
sbb
inc
push
les
push
orb
xchg
xor
push
push
nop
test
adc
adc
sbb
jae
sub
and
ja
nop
lock
inc
pop
sbb
xor
add
addr16
push
nop
xor
lock
jne
xchg
and
xchg
or
sub
cmovno
bound
icebp
push
lock
iret
dec
mov
pop
loopne
pop
sbb
ret
dec
lea
add
test
jecxz
fs
fdivs
stos
jp
rcrl
mov
clc
mov
sbb
xchg
xor
pop
mov
xchg
test
sbb
sub
or
mov
pop
xchg
jno
nop
in
repnz
inc
aam
pusha
cmp
icebp
sbb
add
and
loope
imul
adc
dec
cwtl
or
sti
and
outsl
cmp
inc
mov
movsl
dec
or
and
jl
cwtl
jmp
inc
jnp
loope
mov
xor
mov
divl
popf
xchg
fnstenv
add
push
or
jmp
mov
clc
loop
jmp
adc
mov
test
xchg
sbb
and
mov
pop
mov
lea
test
icebp
and
xchg
dec
loope
xlat
xor
rorb
jo
test
jg
inc
adc
cmp
push
xlat
fwait
dec
movsl
in
repnz
loopne
fistps
frstor
jnp
scas
push
adc
cmp
clc
divl
les
shlb
in
ja
int3
xorb
adc
or
nop
paddusb
add
orl
pop
xor
fdivl
and
lret
out
cmpsb
subl
or
xor
call
aam
fcoms
fisttps
add
mov
push
mov
cs
add
loopne
jp
xor
and
sub
sbb
pusha
call
dec
or
mov
push
lock
lcall
xchg
lcall
inc
sub
into
push
inc
loope
cmp
jne
push
sbb
add
into
xor
xor
test
push
add
jle
cmpsb
sbb
icebp
cmc
fimull
call
sbb
adc
cld
jmp
pop
inc
movsb
jbe
dec
sbb
cmp
inc
jne
cmc
call
lods
in
cmc
test
sub
imul
cld
aas
cmp
jne
adc
sbb
lret
push
js
or
das
sbb
fs
push
dec
mov
ret
pusha
sbb
add
cmc
jmp
int3
jge
dec
inc
mov
test
adc
cmp
pop
mov
in
insb
cli
cli
xchg
popa
cs
sbb
sbb
cltd
pop
stos
inc
jmp
mov
mov
xorl
mov
sarl
cmp
sbb
and
mov
aam
fdivrs
daa
xor
test
inc
jmp
test
add
add
adc
xchg
mov
sub
sahf
insb
cmpsl
and
clc
loopne
push
xchg
jge
arpl
dec
mov
faddl
pop
enter
aam
push
pop
inc
adc
sbb
mov
subb
cmp
roll
loopne
fcom
dec
cs
push
iret
int3
int3
and
or
pop
jmp
pop
mov
push
clc
push
jno
in
mov
add
mov
cld
es
inc
sbb
and
inc
xor
hlt
push
push
sub
inc
add
aas
ret
sbb
lahf
or
mov
xor
lds
dec
xchg
xchg
push
sub
loope
xchg
dec
jns
cwtl
mov
ficoml
xorb
adc
popa
xor
mov
stos
adcl
or
add
or
inc
xor
bound
jno
hlt
cmp
jo
ret
push
imul
lea
lahf
mov
mov
mov
mov
pop
sub
aas
add
enter
sub
pushaw
add
dec
outsb
adc
xor
aas
xor
xor
jmp
sbb
and
loopne
jmp
lods
jmp
push
call
and
cmpsl
pop
popa
sbbl
ss
fbstp
pop
clc
adc
xchg
pusha
aad
sar
leave
sub
out
add
out
mov
movsl
or
scas
inc
fistl
loopne
jmp
cmp
aad
mov
jecxz
sub
add
sbb
or
sbb
test
cld
out
or
add
add
inc
aaa
xor
add
aaa
mov
aaa
adc
xor
out
adc
mov
test
test
scas
or
sti
mov
jg
int3
mov
imul
lahf
jecxz
dec
cmpsl
mov
shlb
daa
xor
jg
and
push
scas
add
sbb
bound
cmp
dec
jnp
sub
pop
adc
adc
cmp
div
test
dec
jge
into
sub
xlat
lods
cld
or
or
and
mov
adcb
jg
jne
pop
pop
sbb
and
jne
or
and
xor
dec
imul
inc
xor
sub
fadd
jp
mov
in
mov
pop
aas
or
sub
mov
mov
sbb
add
divl
syscall
ret
insl
add
movb
jl
xchg
scas
test
jle
and
dec
nop
nop
sbb
pop
in
or
push
and
mov
inc
push
clc
pop
push
pop
add
ret
jmp
or
dec
data16
jb
sbb
adc
sbb
jae
std
jmp
push
mov
aam
add
dec
sbb
add
or
lods
dec
adc
dec
adc
arpl
cs
cmpb
and
repnz
and
loopne
or
xor
fiaddl
cs
or
incb
push
push
popa
cmp
jle
push
pop
inc
add
and
mov
sub
sub
ficoml
xchg
sub
or
add
inc
adc
sbb
jne
addr16
and
mov
add
scas
pop
jae
dec
jmp
jmp
test
add
dec
fcom
jmp
cmp
sub
push
mov
sti
pop
jmp
push
lock
push
adc
xor
outsb
mov
loope
xor
movsl
ret
xchg
mov
add
add
arpl
inc
push
fs
divb
sub
xchg
and
dec
dec
ret
xchg
lock
pusha
jl
inc
or
add
mov
adc
or
test
mov
lods
mov
mov
int
orl
aad
fs
loopne
or
pusha
cmpl
jb
xor
push
jl
mov
subl
insl
std
mov
adc
push
lea
lea
movsl
jl
jg
add
inc
and
ds
jb
push
sub
push
jmp
push
inc
shrb
adc
daa
push
or
pusha
fcompl
inc
dec
push
movsb
pop
cmpsl
push
test
add
or
test
adcb
iret
cmpsl
xchg
lret
es
add
push
add
daa
and
adc
fs
pop
add
in
cmpl
mov
xchg
dec
adc
pop
add
inc
mov
pop
jmp
mov
xor
fs
mov
jno
sbb
jo
flds
dec
or
xchg
xor
gs
bound
sbb
dec
ja
icebp
inc
add
adc
pop
sbb
and
push
dec
ss
sub
and
xor
xchg
push
or
add
adc
rcll
sub
ja
and
mov
dec
adc
sbb
jns
jae
lock
add
add
stos
pushf
js
cld
mov
repnz
push
mov
dec
decl
xchg
cmpsl
or
iret
mov
rcll
adc
stos
and
inc
push
lret
dec
frstor
getsec
pop
and
sbb
fcompl
test
das
mov
sub
cwtl
lock
int
das
je
push
mov
xor
add
arpl
xor
es
out
enter
imul
jb
nop
jl
jb
cmpb
jb
jb
insb
push
jb
pop
pop
push
js
jb
push
dec
dec
inc
cs
outsb
or
cli
xor
in
mov
xor
pop
push
jp
inc
mov
sub
jae
stc
xor
push
pop
mov
xor
jmp
outsl
add
int3
mov
dec
adc
jne
pcmpeqd
jns
pushf
pushf
pushf
pushf
jnp
jge
pushf
pushf
pushf
pushf
jg
popa
bound
gs
pushf
pushf
pushf
addr16
pushf
pushf
imul
pushf
pushf
pushf
outsl
push
push
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
xor
xor
xor
pushf
aaa
cmp
cmp
cmp
pushf
aas
and
and
and
pushf
daa
pop
fistpl
lods
push
out
push
out
lods
or
or
cltd
push
inc
bswap
push
push
ret
add
and
shrl
ds
adc
addr16
jb
xchg
fisubrl
sbb
sub
test
fs
add
push
jecxz
push
and
or
insl
mov
xor
pop
adcb
sub
inc
out
add
mov
jmp
adc
shrb
jmp
add
mov
lock
rolb
subl
or
jmp
nop
mov
push
push
popa
add
and
mov
adc
pop
mov
inc
adc
xchg
ret
mov
movsl
in
int3
insl
push
movb
jae
loopne
imul
or
cmp
push
test
sbb
dec
jnp
mov
pusha
push
lock
push
mov
or
das
stc
test
jne
mov
push
add
cmp
mov
and
xor
or
mov
pusha
loop
or
aam
nop
out
inc
gs
iret
pop
call
addb
je
pushl
sbb
mov
loopne
inc
stos
inc
loope
fisttpl
sbb
sbb
add
jae
cmp
dec
inc
lock
jmp
flds
or
shrb
addb
pop
dec
cmp
sbb
add
mov
lds
jnp
nop
or
or
pop
popa
loop
jmp
stos
adc
mov
inc
sub
lods
xor
mov
mov
nop
bound
and
pop
rcrb
fsubr
push
xor
dec
pusha
push
and
das
inc
jge
jne
mov
clc
movsb
or
mov
pop
pop
cmp
mov
mov
sub
mov
xor
sub
jg
push
cmp
pusha
lea
leave
cwtl
imul
mov
mov
cmp
add
adc
push
cmp
fprem
es
push
test
add
sbb
test
add
add
mov
fisttps
sub
xor
dec
mov
arpl
mov
mov
arpl
push
sbb
push
ret
pusha
mov
mov
inc
enter
lock
daa
pop
xor
data16
mov
and
adc
add
idivl
push
add
or
out
jae
movsb
xchg
or
mov
add
jae
je
rorb
push
je
insb
jno
pop
fwait
sbb
xor
data16
enter
je
arpl
outsl
or
outsb
add
loop
xchg
in
in
sbb
ss
fisubs
adc
add
lcall
jge
shr
dec
push
outsb
int
xor
pop
jo
push
in
mov
push
inc
aaa
in
mov
or
adc
imul
mov
mov
xchg
and
push
mov
out
adc
inc
insb
movsl
fwait
push
repz
or
mov
xor
mov
cmp
insb
sahf
push
push
push
push
insl
dec
outsl
jo
call
and
out
lret
cmp
clc
nop
and
shlb
adc
xor
insl
pop
xor
aas
mov
rcl
mov
pop
outsb
lcall
add
jne
iret
xor
or
jo
bound
inc
push
xor
dec
jl
jp
pop
stos
pop
add
sbb
je
adc
in
outsb
xor
adc
pop
inc
loope
jnp
outsl
jb
jae
es
cmpsl
outsl
cmp
out
pusha
pop
inc
add
notb
dec
push
aas
add
test
xor
dec
sub
push
aad
xchg
fnstsw
mov
lret
mov
lods
ljmp
mov
icebp
imul
sub
and
mov
cmpsl
inc
xchg
clc
rol
fsubrs
nop
or
jns
mov
cmp
sub
add
in
cmpsl
push
sub
sub
out
jmp
pop
std
fdivl
add
or
pop
dec
or
adc
push
in
xor
hlt
add
push
add
movl
push
call
sbb
imulb
nop
das
aas
or
and
cli
xor
in
mov
add
jnp
lea
cmp
xor
or
cmp
punpcklbw
dec
pop
dec
mov
sbb
add
xlat
mov
push
push
add
push
push
dec
enter
gs
jl
jl
pop
fwait
cmp
mov
les
pop
push
cmp
mov
push
pop
mov
cld
dec
pop
fsubr
lahf
pop
sbb
or
pusha
adc
call
stc
loop
popa
add
or
es
add
jo
mov
mov
mov
std
jo
movl
sbb
ds
mov
iret
lds
shrl
xchg
push
add
push
push
ret
insl
fstpl
lahf
pop
sbb
add
cltd
in
add
xor
or
cwtl
movl
in
sbb
les
add
roll
pop
in
scas
out
pop
outsl
cmp
inc
lock
outsb
push
mov
xchg
or
lcall
push
ds
adc
mov
sbb
and
pop
aas
push
int3
push
or
ja
call
inc
test
push
jbe
shlb
shl
dec
xor
add
mov
pop
test
push
push
adc
je
mov
add
or
push
aad
pop
inc
xchg
hlt
push
jne
outsb
adc
inc
in
shrl
adc
jl
xchg
inc
push
mov
rcr
push
inc
arpl
push
dec
jecxz
inc
int3
add
test
gs
dec
outsl
ja
inc
subb
fs
es
clc
add
dec
jae
imul
rcr
dec
push
fwait
cwtl
dec
outsb
jb
xor
ficoms
push
xchg
ret
sbb
lds
aad
insb
xor
adc
daa
js
out
sbb
sbb
jnp
mov
int
jp
aam
sbb
mov
dec
fdivrs
push
pusha
push
add
cltd
jbe
sbb
xor
push
sub
add
bound
loopne
dec
push
inc
jnp
sbb
fcoml
cmpsl
cwtl
push
sysret
addr16
hlt
in
adc
pop
jo
paddq
pop
add
movsb
outsb
lock
jl
mov
fsubs
adc
pop
adc
mov
outsl
pop
and
push
add
stos
enter
testb
jg
dec
call
nop
add
stos
fcomp
fdiv
jns
sbb
mov
xchg
insl
jne
xchg
shrl
out
xchg
sbb
push
add
push
push
push
sub
inc
pop
hlt
jmp
inc
rolb
mov
dec
pop
inc
jae
mov
add
pop
or
js
pushf
push
idivb
je
jb
out
pop
and
das
shlb
movsl
or
ds
test
inc
or
push
sub
sbb
push
inc
mov
sbb
sbb
pusha
ds
fsubs
cmp
inc
ret
outsl
bound
notb
pop
clc
xor
push
pop
subl
push
mov
xchg
push
dec
jnp
mov
bound
adc
ja
call
mov
imull
inc
insb
push
push
jge
jbe
pusha
xchg
insb
or
or
add
and
loop
dec
je
xchg
mov
xchg
push
push
fcoms
mov
fcom
mov
cmp
and
sbb
fnstenv
jle
orl
orb
push
aam
fmull
jle
cmovs
setle
push
and
sub
int3
es
xchg
pop
mov
push
popa
or
xchg
fwait
push
sbb
loopne
ret
sbb
dec
enter
push
dec
arpl
pop
sbb
nop
scas
mov
pop
int3
xchg
lea
xchg
mov
push
int3
push
lahf
loopne
adc
hlt
sahf
loopne
pop
sbb
psubw
cs
push
jo
xchg
jg
push
sub
mov
jb
sub
cmp
adc
or
xchg
loopne
fs
aaa
adc
negl
dec
mov
inc
test
xor
mov
jl
mov
jo
pop
in
adc
mov
insl
fld
push
push
push
rorl
xchg
data16
add
jne
adc
mov
or
dec
test
outsl
popa
pop
call
imul
shlb
movzwl
add
nop
sbb
pushf
or
adc
add
add
and
adc
sahf
enter
and
bound
sbb
jne
daa
or
in
push
inc
mov
dec
jne
adc
sar
cmp
xor
dec
dec
xchg
test
adc
lods
imul
pop
xchg
cmp
dec
or
ret
pop
sbb
test
mov
jno
xchg
jge
xor
adc
loope
dec
cmc
out
popa
loopne
rclb
jge
pop
test
adc
and
sbb
decl
lock
or
or
popf
lea
inc
sub
cmp
rolb
and
ret
or
idiv
mov
das
xchg
and
loop
pop
aad
xorl
xor
pop
pop
mov
push
outsl
popf
fwait
js
in
xchg
jnp
mov
sub
cmp
je
inc
mov
cmp
add
push
repnz
and
divl
icebp
mov
sbb
int3
push
xchg
fst
addl
call
sbb
sbb
lcall
mov
xchg
pop
pop
adc
icebp
inc
ljmp
jle
fimuls
push
rcrb
imul
lea
iret
sub
sub
shr
jmp
sahf
mov
adc
fdivrp
adc
fistl
nop
mov
adc
xchg
adc
aam
test
mov
dec
push
inc
daa
icebp
insl
cmpsl
dec
sub
test
or
jo
shlb
rcl
sub
aas
arpl
shlb
add
or
jb
outsl
outsb
add
fidivs
inc
lods
sbb
mov
pop
dec
insb
les
xchg
cld
negl
push
xchg
jbe
add
sti
insl
mov
xchg
gs
insb
pop
lods
jge
add
insb
cmpsb
jb
push
shlb
add
cwtl
rcll
in
addr16
gs
mov
pop
repnz
outsb
inc
or
arpl
imul
jno
popa
mov
repnz
or
jns
add
jnp
xchg
push
imul
and
inc
dec
rolw
mov
push
xor
cmp
outsl
insb
das
lsl
push
pop
inc
popa
scas
pop
jo
push
mov
jo
pop
imul
mov
int3
mov
adc
inc
je
inc
push
xchg
cltd
cmp
insb
sbb
or
adc
add
jg
outsb
sub
cmp
je
or
sub
push
xor
lds
insb
add
aas
int3
xchg
testb
push
lock
push
subl
pop
jg
pop
or
push
jg
xchg
fstps
repz
adc
shlb
pop
adc
or
ss
dec
rcll
push
mov
jne
pop
xchg
or
push
adc
bswap
mov
lahf
dec
cs
pop
cmp
aas
push
arpl
mov
inc
xor
shrl
sbb
das
cmp
inc
cmp
outsb
dec
or
js
fimull
das
jmp
ret
push
mov
int
push
dec
mov
push
inc
jns
push
or
inc
js
int
push
adc
pop
pop
repz
mov
testl
dec
inc
push
push
inc
push
add
mov
incb
inc
push
dec
push
xor
inc
dec
dec
cmpl
inc
inc
push
pop
cmp
adc
inc
push
dec
dec
push
mov
push
inc
fiaddl
xchg
inc
dec
dec
and
dec
enter
inc
inc
xor
xor
xchg
or
adcb
std
inc
inc
dec
inc
xor
inc
dec
mov
push
push
dec
sub
dec
lods
insl
imul
bound
das
sbb
mov
push
inc
inc
inc
das
mov
push
push
push
test
mov
int
push
dec
pop
adc
push
push
and
outsl
push
dec
push
inc
scas
dec
inc
dec
mov
cld
push
mov
nop
cmc
xor
inc
push
mov
mov
imul
add
and
inc
jl
mov
sbbl
mov
add
jl
orb
adcb
adc
cmp
add
or
or
mov
sarb
or
mov
divl
and
mov
sbb
dec
sbb
sub
loopne
mov
mov
jle
xor
jmp
or
jmp
add
fidivs
xor
mov
mov
jl
sti
and
sub
mov
sub
adc
ljmp
sbb
or
arpl
cmpsb
inc
ret
adc
stos
adc
leave
adc
dec
repnz
sub
inc
ret
das
dec
adc
dec
dec
sbb
jle
call
sbb
xchg
lock
je
jne
xor
test
add
sahf
sbb
insb
bound
fists
jns
cld
and
neg
inc
mov
adc
mov
add
dec
jb
loop
jne
lret
push
jb
adc
in
push
cld
and
sbb
mov
rol
fdivrs
clc
clc
cmp
mov
or
test
cmp
data16
jo
divl
dec
roll
mov
das
sahf
push
addb
pop
pusha
test
dec
dec
dec
inc
addr16
in
das
dec
jge
jp
jge
je
scas
loope
outsb
jmp
jo
push
int3
test
add
sarl
jmp
adc
mov
aam
add
or
adc
mov
adc
cmpb
popa
jmp
add
les
inc
clc
cwtl
add
jnp
mov
cmp
cmp
jnp
sbb
jg
mov
or
ficoms
jb
mov
or
mov
adc
shlb
mov
inc
mov
adc
sbb
mov
cmp
cmp
lea
adc
clc
pop
movsl
mov
fisubl
stos
enterw
cwtl
mov
push
flds
popa
mov
push
push
aad
stos
testb
or
fcmovnbe
or
add
test
jno
in
enter
pop
aas
sbb
lea
imul
sbb
dec
sub
movsb
dec
mov
push
fmuls
int
jecxz
shlb
mov
push
adc
and
push
inc
sbb
xor
pop
mov
add
push
inc
pop
test
xchg
jl
lds
jge
loope
mov
aas
pushf
inc
xchg
or
and
fcmovu
push
fdivl
es
pushf
xor
xor
xor
mov
inc
pop
cwtl
neg
scas
imull
xor
push
das
outsb
fidivs
mov
mov
cli
push
sbb
daa
in
mov
bound
cmp
roll
adc
and
push
push
rolb
sub
loopne
fcoms
mov
push
and
sbb
xchg
and
cmp
and
xor
rolb
nop
movb
add
pusha
xorl
jns
adc
push
add
aaa
add
and
jb
and
push
xor
xor
pop
xor
cmpsl
cmp
inc
scas
or
xor
mov
nop
xor
jns
sarb
andl
popl
ja
jp
jne
out
jo
jb
fldenv
dec
dec
pop
jmp
rclb
sub
xor
adc
dec
sahf
pop
jb
lods
xor
push
cwtl
xchg
sbb
mov
lock
leave
and
cwtl
les
mov
cwtl
xor
or
xchg
sbbl
xchg
js
cmp
sbb
adc
and
push
and
mov
inc
sbb
cmpsl
in
sbb
mov
xchg
mov
or
mov
mov
push
cmp
cmp
out
and
xor
sbb
cmp
and
and
adc
xchg
xor
add
jp
out
das
imul
xchg
or
add
cmp
jne
sbb
ret
clc
rolb
flds
inc
jo
mov
push
popa
and
cltd
loop
xchg
addl
mov
sbb
jmp
jbe
adc
add
pop
cmp
mov
lock
adc
xchg
lahf
mov
mov
test
pop
xchg
cmp
sahf
pop
stos
jo
jmp
push
sbbb
testl
fisttps
imul
pop
push
jle
mov
pushf
nop
cmp
inc
int3
add
test
adc
and
adc
rorb
and
and
inc
add
inc
lock
leave
mov
or
imul
pushf
movsl
nop
fldcw
es
push
adc
cmp
aad
inc
cmp
test
sbb
adcl
and
add
sbb
fcompl
sbb
cmp
das
nop
outsb
sbb
push
mov
sub
or
out
sub
or
or
xor
out
out
push
push
or
push
push
data16
pop
arpl
sbb
shl
cmpsb
adc
in
mov
cmp
xchg
push
rol
xchg
cmpl
es
sub
sub
mov
add
cwtl
sbb
add
pop
in
add
mov
jo
sub
or
add
out
test
mov
push
in
loopne
fmuls
dec
xor
mov
cmp
arpl
enter
sub
or
inc
icebp
insb
movsl
mov
sbb
dec
fisubs
pop
mov
inc
xchg
push
mov
cmpsl
add
sbb
fcoms
arpl
pop
rol
dec
aaa
fiaddl
adc
mov
dec
jb
cmp
mov
xchg
ret
mov
bound
mov
hlt
pop
push
or
mov
push
jecxz
popa
xor
cwtl
xchg
or
cmpsl
push
add
inc
add
adc
and
imul
bound
pop
loopne
imul
pop
call
push
push
pop
lock
hlt
dec
pop
ret
rcr
and
inc
test
push
int3
xor
and
add
sbb
dec
lahf
popa
xor
mov
mov
addr16
hlt
popa
inc
lea
loope
movsl
movsl
rcll
inc
push
inc
fs
mov
cmp
js
dec
icebp
adc
push
add
xlat
push
push
outsl
add
fidivrl
outsw
jbe
mov
dec
incl
iret
add
test
or
shlb
ja
shlb
sbb
insb
and
push
jnp
add
xchg
arpl
scas
or
xor
pop
testl
inc
push
sbb
aas
clc
mov
or
sub
orb
jbe
push
adc
std
inc
xchg
jae
pop
or
shll
sbb
pusha
cli
es
push
out
ret
je
neg
xor
jle
push
adc
jl
mov
dec
adc
cmp
jmp
rolb
jl
cmp
dec
add
or
or
mov
adc
push
sub
movsl
xchg
or
sbb
sbbl
adc
push
in
sbb
aam
mov
pop
pop
out
adc
mov
adc
or
pushf
icebp
jne
pop
push
adc
test
dec
jl
mov
add
push
mov
add
xchg
add
jnp
mov
mull
lods
hlt
push
inc
loop
or
das
cwtl
mov
shll
pop
je
lcall
dec
repnz
inc
inc
pop
mov
cmp
data16
add
or
sar
cs
push
pop
push
mov
sub
cmp
fisubs
lea
pushf
adc
xor
rclb
or
inc
lcall
lock
mov
out
pusha
pop
or
jne
hlt
testl
jge
fxch
shlb
in
xor
mov
call
pop
test
int3
push
push
push
push
lock
test
pusha
add
cmp
jp
test
push
fs
sub
inc
imul
and
cmp
faddl
mov
mov
cmp
dec
mov
sbb
in
fnstcw
es
jle
dec
int
int
out
pop
push
mov
sti
xor
loop
push
insl
outsl
xchg
adc
inc
popa
lock
adc
xor
rolb
mov
push
or
enter
cmpsb
add
outsl
dec
add
fiaddl
fincstp
shll
fstps
inc
sub
ret
sub
sbb
das
cmp
imul
pop
xchg
test
insb
cmp
adc
inc
xchg
sbb
xor
xchg
add
mov
addb
add
xor
push
jecxz
stc
mov
and
shl
inc
xor
xor
mov
dec
stos
fwait
adc
jmp
adc
cmp
lock
push
push
movsb
mov
cmpsl
insb
and
pop
and
and
push
push
sub
dec
mov
jmp
jns
pop
bound
or
div
mov
dec
sbb
pop
mov
add
or
das
inc
aam
aad
add
sbb
popa
mov
push
hlt
push
mov
ja
movsl
movl
and
adc
sub
sbb
or
bound
dec
cmp
bsr
dec
rcr
sub
mov
ja
jge
fistps
sbb
xchg
lea
add
dec
pop
add
push
out
add
or
mov
add
fcmovnb
inc
popa
loopne
pusha
adc
pop
inc
sti
cmp
aas
dec
or
dec
rcr
fcmovne
mov
add
mov
mov
add
jne
and
adc
mov
insl
sub
pop
push
sbb
sbb
push
adc
and
jae
lods
enter
into
sbbl
pop
or
mov
testl
add
fstl
mov
dec
jns
push
xor
sti
mov
mov
sub
shl
mov
mov
jmp
and
movw
add
cli
and
xchg
subb
push
mov
shll
add
aad
inc
push
out
push
adc
mov
mov
jnp
mulb
test
nop
cmpl
ds
push
and
add
popa
mov
mov
lea
arpl
push
cs
fisubl
jmp
addr16
data16
add
aam
orl
icebp
fadds
add
add
shl
hlt
shll
popa
repnz
movl
pop
fs
add
push
jl
mov
icebp
inc
das
and
lock
je
pusha
and
or
inc
inc
cmc
clc
dec
rcrb
or
icebp
cmpsb
loopne
cmpsl
mov
sub
test
inc
pop
fidivrs
int
pusha
add
clc
lods
pusha
or
inc
xor
test
mov
ss
je
inc
mov
dec
mov
mov
mov
bound
iret
adc
pop
add
movups
rcrb
xorb
fsub
pop
pop
lar
rolb
add
sub
lcall
out
ss
push
or
add
push
push
and
or
mov
push
outsl
push
dec
inc
jbe
mov
cwtl
leave
shlb
and
adc
shrl
jo
in
inc
mov
loope
xchg
test
jg
cmp
push
sbb
scas
shlb
jge
add
movsb
rorb
ret
mov
gs
xlat
enter
mov
hlt
and
dec
adc
and
add
add
arpl
out
stc
imul
sub
loop
and
push
shrl
mov
movl
jnp
sbb
and
pop
cld
push
push
and
dec
push
test
add
add
dec
test
lock
rdmsr
adc
aas
aam
add
add
or
nop
add
fildl
sub
sbb
jmp
or
orl
pop
pusha
jne
ss
jge
cmp
push
jg
lea
cmp
jg
test
mov
cmp
jl
cmpsb
aaa
enter
aas
dec
js
jg
dec
cmp
jle
sbb
mov
push
inc
dec
mov
repz
dec
dec
dec
test
xor
scas
cli
addb
push
mov
or
or
xchg
daa
xor
mov
xor
and
psubusb
lods
or
movsb
flds
lods
xchg
sbb
scas
mov
cmp
or
in
xchg
call
mov
movl
sub
push
sub
cmp
movsl
lea
mov
xor
dec
push
ds
ret
cltd
loope
in
in
sub
loopne
es
cmp
movsb
fucom
adc
add
dec
rcrb
jne
sub
jne
cmp
roll
adc
loop
pop
out
xor
insb
je
cld
sub
lock
repnz
add
sub
or
adc
lods
jo
add
pop
aam
add
ljmp
add
xchg
call
enter
rcrb
int3
jbe
nop
pop
sti
push
xlat
and
mov
mov
inc
fmull
push
mov
add
and
or
ficomps
rolb
repz
mov
sbb
push
add
mov
mov
add
add
mov
add
movl
adc
push
sbb
shrb
and
ret
cmp
or
push
push
lock
or
xchg
mov
pop
outsb
rorb
cli
andl
test
ret
lods
lea
ret
or
push
rolb
mov
push
in
aas
and
sbb
out
mov
push
sti
lea
pop
test
or
loopne
mov
movl
push
sub
ficompl
sbb
or
jle
lock
adc
jb
jmp
pushf
push
in
mov
fsubr
and
xchg
cwtl
jmp
xchg
adc
cmp
mov
adc
insb
and
sub
or
sbb
jle
inc
and
jae
and
pop
and
push
sub
or
orb
xacquire
fmuls
adcl
lret
pusha
dec
sbb
je
out
adc
inc
pusha
icebp
out
add
add
es
test
lcall
pushf
mov
sbb
jo
popa
lret
xchg
xor
pop
fcomip
push
daa
or
and
out
imul
ret
insb
dec
push
repz
xorl
sub
ljmp
xor
inc
pushl
push
clc
dec
arpl
push
and
outsl
lods
or
push
xchg
sub
cmp
lahf
pusha
jge
jno
mov
pop
pop
call
testb
lods
outsb
imul
mov
and
stc
adcb
pop
push
cmp
push
in
cmp
movsl
imul
loope
ret
loopne
sub
push
insl
cmp
adc
or
mov
fcoml
loop
xor
out
loope
and
pushl
out
jg
lock
lea
add
mov
mov
or
xor
mov
inc
mov
mov
or
lods
inc
adc
stos
push
orb
scas
mov
mov
mov
mov
and
jl
mov
ljmp
hlt
lods
sbb
test
dec
in
in
xor
push
adc
je
std
hlt
loopne
jae
mov
fcoml
jmp
push
aas
int3
andl
scas
dec
add
and
pop
adc
sub
or
lods
add
adc
push
add
sbb
popf
xorl
xchg
lods
sbb
and
xor
notl
cltd
orb
cmpb
nop
negb
or
adc
push
lcall
cmpsb
xchg
xchg
inc
or
mov
stos
xor
addl
pusha
xor
adc
xor
xchg
cmp
xor
je
sub
push
fidivl
add
rorb
out
add
adc
push
dec
mov
pop
inc
dec
hlt
mov
daa
movsb
xchg
push
dec
addr16
loope
or
xor
inc
cmp
and
mov
add
push
cmp
sbb
dec
or
pop
int
jb
cmpsl
mov
shrb
adc
xor
fadds
ret
mov
inc
fmul
adc
cmp
cld
push
rcrl
out
aas
cmp
sub
fwait
rcrb
or
jno
inc
lock
testb
and
or
pop
xorb
or
sahf
jmp
das
cmp
sbb
leave
lcall
mov
mov
pop
adc
jo
test
xor
gs
pop
sbb
add
jge,pt
repnz
push
inc
xor
inc
adc
mov
lahf
and
mov
adc
movsl
bound
pop
lds
and
ja
mov
sub
mov
nop
psubb
mov
dec
hlt
mov
mov
insb
lock
mov
cmp
add
xchg
sahf
or
xlat
ja
popw
gs
pop
repnz
insl
jo
hlt
mov
je
js
nop
div
sbb
adc
mov
cmp
ljmp
cmp
fadds
or
jg
mov
dec
jbe
scas
pop
popf
mov
rol
mov
pop
adc
aam
jle
inc
xchg
xor
and
pop
fwait
inc
jge
cmpsb
dec
les
aad
call
and
andl
inc
sbb
pop
inc
xchg
cmp
xor
mov
jge
clc
out
inc
ret
ret
jno
or
pop
call
nop
clc
add
push
and
cmp
add
loope
xchg
fidivl
pop
dec
adc
imul
imul
push
or
adc
add
dec
pop
and
insb
add
adc
and
xchg
movsb
lds
pop
fsubrs
push
pop
sbb
jl
mov
jb
pop
cmp
dec
popa
sbbb
push
xchg
ret
dec
out
ja
cmp
mov
add
mov
nop
out
fcoms
dec
lods
mov
scas
mov
mov
and
or
das
and
dec
call
test
and
cmp
or
lock
and
pop
add
sub
mov
jne
mov
dec
clc
add
popa
arpl
or
mov
test
and
sbb
adc
push
jmp
pop
mov
movsb
int
out
pusha
xor
ljmp
mov
popa
out
and
dec
dec
stos
push
adc
sub
jnp
or
pop
adc
sub
pop
mov
das
xchg
jno
in
cld
sbb
int3
pop
scas
pop
adc
inc
les
ja
xchg
pop
out
cmp
push
movsb
roll
or
das
xlat
adc
sbb
mov
les
cmp
loop
or
xor
or
jmp
test
jno
or
ret
addr16
and
dec
mov
scas
jnp
rorb
int
sbb
fistps
mov
in
scas
and
and
loopne
popa
cmpsl
mov
or
and
adc
or
dec
mov
or
sbb
mov
jecxz
mov
pop
mov
cmpsl
push
push
mov
mov
call
and
push
test
cmp
pop
add
jns
movsb
jno
mov
orl
mov
jno
jmp
les
jo
mov
push
xchg
xor
inc
push
shll
jb
pop
push
out
loopne
xor
ficomps
ss
dec
cmp
push
rcl
and
push
sbb
out
sbb
adc
push
adc
pop
dec
test
add
xchg
jne
adc
pop
enter
add
adc
adc
mov
xor
pop
ja
sbb
push
lods
adc
sbb
fiaddl
sub
jbe,pn
das
and
push
mov
inc
aaa
lea
call
inc
mov
outsb
loop
insl
push
and
and
push
sub
cmp
add
sbb
xchg
inc
imul
mov
adc
xchg
dec
push
fwait
lock
sub
mov
jmp
test
sbb
add
fmull
dec
popa
jmp
inc
popl
or
imul
jnp
add
mov
xchg
fisubrs
clc
loopne
sub
or
push
enter
ljmp
or
cwtl
lods
or
clc
loopne
jp
test
dec
adc
adc
sbb
roll
or
int
push
nop
pop
movsl
enter
orb
pushf
pop
jne
sar
shld
mov
data16
sub
sub
cs
xor
stos
lea
fcoml
call
loop
pop
jmp
push
movsl
cmp
adc
jo
out
std
imul
je
or
pusha
sarb
mov
dec
cmp
sbb
addb
gs
in
push
pop
jge
ja
add
dec
mov
adc
xor
inc
jo
fistps
inc
sahf
lret
push
dec
or
bound
and
add
cli
jmp
push
dec
jmp
adc
fstpt
jns
pop
pop
sub
aaa
push
sbb
xchg
xchg
adc
stc
cmp
enter
sub
mov
push
mov
int3
shlb
roll
daa
cmp
dec
and
btl
or
and
fadds
jns
push
cwtl
mov
or
mov
imul
dec
cmpl
je
das
cld
dec
pop
sub
dec
repnz
lea
add
clc
mov
enter
fs
mov
xchg
dec
fs
rcrb
clc
xor
jb
cmpb
rcrl
adc
xchg
jne
fsubs
push
adc
sub
pusha
or
loopne
ret
or
int
lcall
fsubp
pop
sub
add
subl
sar
mov
cmp
imul
fiaddl
push
pop
lods
fidivs
push
ljmp
sub
push
lret
insb
nop
jecxz
jbe
push
push
in
ret
cmp
dec
repnz
out
pushw
mov
into
or
or
mov
lea
mov
in
clc
js
test
push
ljmp
pop
mov
ret
push
adc
mov
xchg
add
sub
ret
lods
imul
dec
repnz
loopne
mov
fstl
inc
inc
sti
das
and
push
mov
mov
mov
mov
pusha
add
pop
lods
sbb
inc
call
sub
mov
ja
mov
sub
mov
cmp
push
or
inc
jo
lods
aam
cs
add
push
fdivs
adc
mov
inc
xor
out
inc
add
add
xor
xor
and
aas
push
inc
mov
push
pop
fs
scas
xor
popf
push
lock
xchg
pop
pop
aaa
sbb
mov
aad
out
aas
mov
cmp
je
daa
pop
inc
in
adc
aam
jmp
sbb
and
test
sbb
push
push
pusha
sub
pop
sub
fists
xor
orl
lock
fs
xor
sub
add
xchg
mov
cltd
insl
popa
inc
adc
dec
or
cmp
test
add
mov
aas
sbb
ljmp
xor
popa
push
loopne
jle
xor
sub
sbb
xchg
jbe
xchg
inc
pusha
adc
adc
insb
loope
or
es
jae
xchg
sbb
sbb
and
sub
lods
rcrb
adc
insl
dec
in
or
sbb
loop
cmpb
sub
mov
push
or
xchg
inc
and
or
ss
cmpsl
dec
push
test
movsl
jo
push
mov
ja
or
loopne
dec
pop
xchg
les
test
mov
shrl
enter
outsl
lret
push
clc
push
cs
pop
mov
mov
je
sub
dec
push
addb
loopne,pt
shlb
jbe
shr
loopne
les
sub
mov
lods
popf
sub
fimuls
sbb
adc
jmp
repnz
insb
in
and
les
addr16
out
imul
xchg
xchg
gs
ret
and
add
popa
push
imulb
jae
test
adc
pop
push
pushf
mov
push
test
cmp
adc
jae
add
sub
in
inc
imull
sarb
and
sbb
movsl
rcll
fmul
sbb
pop
dec
sbb
jne
call
lret
out
pop
mov
xor
lods
dec
or
mov
and
jae
cwtl
nop
imul
push
add
xor
cmpsl
cmc
scas
jnp
insl
push
es
lds
in
mov
enter
push
inc
subb
dec
push
sbb
test
adcl
push
jns
movsl
pop
add
mov
pushf
leave
mov
inc
lods
push
outsl
pop
andb
cmpsb
jecxz
je
and
add
push
sbb
xchg
xor
push
inc
mov
hlt
out
sbb
jo
dec
cld
dec
fisubrl
mov
sbb
mov
inc
cmpsl
or
or
push
test
outsl
dec
push
es
sbbb
mov
adc
ficompl
dec
cli
fisubl
outsl
mov
adc
je
ja
bound
nop
bound
pop
out
xchg
add
cmp
movsb
dec
sarb
sbb
pop
adc
inc
jo
xchg
add
push
pusha
aas
outsl
sub
punpckhdq
xor
xchg
mov
xor
sub
dec
pop
loope
lods
pop
cmpsl
pop
jnp
jns
inc
pop
rolb
sub
idivb
jae
adc
or
and
aaa
xchg
dec
jo
or
mov
pop
jmp
ss
or
pop
dec
adc
push
and
pop
lock
jae
pusha
push
loope
cmp
and
pusha
xor
adc
push
add
push
decl
lods
sbb
jns
dec
mov
pop
pop
popa
mov
push
push
adc
inc
ret
stc
adc
es
inc
insb
mov
lahf
lods
cmovnp
or
imul
rcll
aaa
dec
sbb
fstl
out
lock
and
popf
sti
mov
ss
jns
or
xchg
ficoml
cmp
test
sbb
jbe
push
frstor
scas
jno
lock
jb
xchg
push
inc
or
loopne
nop
dec
rorl
inc
xor
sbb
or
aam
je
ficompl
sub
add
in
es
adc
jb
inc
mov
push
ds
loopne
xchg
fbstp
mov
pop
dec
sbb
and
add
cmp
aaa
adc
pop
test
pop
std
shlb
movsl
jo
adc
and
xchg
aaa
jns
inc
jne
sub
sub
sbb
add
movsl
nop
dec
sbb
js
or
insb
push
add
mov
or
mov
mov
and
jecxz
jns
add
les
daa
cmpl
adc
es
stos
rol
pop
or
out
or
xor
xor
cwtl
push
orl
fildll
loop
sub
mov
popa
leave
fs
add
scas
xchg
mov
xchg
adc
es
bound
xchg
lahf
xchg
mov
jp
push
sbb
dec
add
pop
es
push
fmull
sub
and
sbb
lods
in
push
or
jge
mov
push
or
push
fsubrl
push
push
add
push
test
adc
fdivrs
pop
fcoml
cld
pusha
stos
add
insb
in
xchg
lods
mov
and
gs
loopne
dec
bound
inc
cmp
and
pop
testl
mov
jmp
inc
ja
dec
outsl
cmp
je
mov
pop
daa
roll
adc
imul
fsubrl
sbb
inc
mov
cmp
or
in
jne
dec
and
mov
xor
mov
test
lahf
loopne
dec
dec
cmp
jne
mov
xor
push
add
xchg
test
or
popa
je
pop
inc
sub
and
add
shl
add
fucom
int3
fisttps
jns
cli
mov
xor
imul
fcom
sbb
and
sbb
nop
outsb
lock
or
mov
lcall
sbb
leave
inc
push
and
into
mov
mov
mov
mov
mov
pusha
pop
adc
mov
lods
add
dec
dec
mov
inc
flds
and
cmp
jne
push
and
loopne
addl
scas
rcrb
push
in
js
fnsave
push
sbb
pusha
pop
ret
push
fcoms
cwtl
lea
sub
out
rcr
dec
and
mov
popa
mov
in
xchg
or
mov
pop
icebp
push
mov
jno
cmp
sub
je
int3
push
jecxz
sub
imul
sbb
aaa
jne
js
cmp
adc
cs
call
shl
mov
or
or
rol
mov
cmp
or
push
and
mov
lea
push
into
push
fwait
push
fsubl
or
nop
inc
sbb
add
mov
daa
jge
out
nop
dec
fisttpl
mov
fwait
in
pop
jecxz
shlb
lods
or
ret
cmp
xorl
mov
mov
ds
scas
or
push
dec
in
ret
loope
pop
pop
inc
addr16
lods
andb
mov
ror
hlt
mov
jnp
loopne
rorl
mov
test
jo
shlb
add
push
es
adcl
sbb
xchg
push
es
push
inc
fldcw
mov
pop
insl
sbb
add
stos
fistl
mov
xlat
test
push
out
mov
jnp
xchg
xchg
nop
hlt
js
in
fmuls
rorl
jmp
sbb
push
lea
aaa
xchg
fisubl
pushf
pop
pop
mov
pop
push
scas
call
clc
adc
and
push
pop
lahf
sbb
cmpb
mov
movsl
jo
lock
sub
mov
inc
mov
push
movsb
test
adc
or
imul
jge
aaa
outsb
mov
jmp
adc
xchg
sahf
fs
mov
shrb
push
cmp
and
xor
or
xchg
cmp
jno
dec
inc
push
sbb
es
sub
mov
lcall
fnsave
lods
and
sub
or
movsl
or
pop
adc
pop
push
mov
pop
fcoml
in
or
adc
xor
mov
inc
popf
stos
in
test
insb
movsb
pusha
sub
sub
movl
leave
les
push
out
jmp
es
fdivr
sub
aas
push
loopne
pop
jno
test
call
add
sub
add
fsubr
jo
xchg
cmp
call
inc
pop
sbb
dec
mov
push
and
aaa
adc
add
pop
lock
mov
int
mov
inc
scas
push
pop
test
or
cmpl
mov
mov
xor
mov
movsl
sbb
dec
and
mov
inc
cmp
aaa
lods
and
sub
lods
push
sbb
imul
mov
sub
dec
in
scas
rcrl
dec
inc
add
sub
cmp
out
lds
data16
xchg
mov
pusha
cmp
push
dec
or
adc
arpl
popa
jb
inc
flds
add
add
pop
mov
dec
xor
mov
adc
arpl
add
dec
in
pusha
mov
or
xchg
mov
or
adc
rolb
call
lock
dec
inc
or
inc
lret
push
sub
inc
sbb
pop
and
lods
add
test
movsl
or
xor
fimull
shr
insl
mov
idivl
and
push
sub
adc
jo
pusha
lea
pop
call
clc
jmp
aad
lahf
push
push
add
lock
add
jne
or
mov
mov
jl
add
mov
push
mov
imul
and
les
jle
push
xchg
sbb
test
mov
adc
sub
int
cwtl
cld
cli
insb
add
clc
sub
pop
push
inc
add
xchg
adc
pop
mov
mov
mov
mov
inc
xor
adc
jbe
das
in
push
fadd
rorl
loopne
add
xor
push
adc
pop
add
insl
cmp
push
scas
insb
ljmp
mov
cmpps
inc
sub
jl
push
inc
out
or
and
call
pop
mov
pop
sbb
add
shlb
xor
dec
pop
hlt
or
sub
cmp
or
cwtl
jmp
jae
dec
sbb
push
loope
clc
pop
testb
or
ret
adc
insb
mov
loop
jb
add
mov
cltd
pop
fists
data16
aad
xchg
rolb
sbb
sbb
shrl
or
lods
dec
or
sbb
mov
sub
arpl
dec
adc
mov
pop
jbe
ja
jae
or
mov
mov
xlat
sub
ret
imul
xchg
dec
add
outsl
imul
cmc
inc
stos
cmpsb
lods
adc
push
lock
mov
testl
dec
insb
adc
and
pop
sub
je
test
adc
push
mov
les
data16
xor
pushf
dec
mov
jg
pop
mov
insb
adc
push
dec
cmp
pushf
sbb
adc
dec
sub
jg
movb
push
xor
testl
hlt
mov
adc
xchg
mov
add
sbb
movsl
mov
ds
sub
mov
cld
adc
sub
cli
jne
push
push
loope
mov
js
push
sub
ljmp
jl
mov
lea
mov
push
inc
adc
rolb
mov
into
movb
rolb
call
sbb
xor
fistpl
cs
and
adc
or
push
lods
jecxz
rclb
sub
lea
movb
mov
inc
and
mov
mov
ret
push
js
cld
addr16
lea
sub
dec
add
pop
xchg
or
or
mov
lock
ret
or
or
mov
jo
rcrb
inc
orb
out
push
push
and
adc
adc
clc
nop
popf
dec
and
fcoml
mov
nop
ret
mov
jmp
xchg
pop
dec
adc
mov
xchg
aas
dec
rcll
ficoms
push
jmp
fst
or
fs
nop
clc
loopne
call
cmp
pop
and
filds
mul
data16
fucom
dec
or
add
subb
mov
dec
loope
jb
orl
pop
loope
stos
mov
les
sbb
cmpsl
jge
cmpsl
or
or
pushw
or
insl
rcrb
or
js
xchg
imul
push
push
call
inc
loopne
cmp
mov
clc
add
movsb
mov
repnz
dec
xchg
mov
sbb
add
aam
inc
dec
enter
xor
pop
sbb
rolb
mov
push
je
imul
xor
and
test
daa
push
add
jg
js
punpcklwd
ficompl
ret
ret
cmp
loop
inc
not
call
add
add
in
sub
outsb
push
insl
popf
aad
pop
push
push
sbb
into
pop
dec
test
sub
or
je
inc
pop
dec
xlat
cltd
jmp
inc
push
cltd
jo
or
or
xchg
out
adc
popa
cmpsl
jo
imul
dec
xchg
dec
sub
push
enter
call
cmpsb
push
cwtl
cmp
jbe
mov
mov
push
es
hlt
inc
mov
inc
mov
cmp
dec
ret
push
xor
dec
cmp
sbb
mov
jno
mov
and
imul
pushf
jne
add
in
xor
mov
cld
scas
rclb
int3
push
inc
mov
dec
pop
jl
or
add
sub
mov
mov
sahf
inc
test
push
or
sbb
or
push
mov
test
push
xadd
and
push
sbb
mov
add
popf
sbb
mov
pop
dec
cmp
mov
mov
out
push
or
clc
add
sbb
sub
dec
and
jmp
fs
pop
faddl
push
pop
test
adc
and
mov
xor
pop
and
add
add
xorl
push
mov
es
jmp
push
das
sub
push
mov
es
push
shlb
frstor
lds
repz
xor
xchg
mov
xchg
mov
cmc
bound
sbb
test
test
push
jbe
das
scas
imul
jae
cmp
cmpsb
mov
mov
loope
push
test
push
jle
mov
mov
fists
sub
jo
loopne
add
movsl
lock
iret
or
jg
jbe
bnd
jge
jecxz
dec
and
xor
out
loopne
and
aas
jb
cmp
xor
pop
dec
loopne
jle
cwtl
call
and
jb
pop
cmp
js
dec
sbb
fiadds
jbe
into
push
adcb
add
lds
das
and
ret
cmp
ficoml
ja
lahf
sbb
mov
xchg
loop
push
mov
nop
adc
push
pop
push
jl
lea
push
notb
push
cwtl
int
ja
inc
pop
xchg
mov
lea
push
clc
dec
adc
rorb
push
and
repz
xchg
lea
ror
xchg
xchg
or
sbb
shr
aas
sub
sub
adc
adc
mov
inc
mov
rolb
push
in
pop
push
nop
push
or
sbb
test
mov
nop
sub
icebp
push
and
add
pop
sbb
jge
jbe
sub
xchg
dec
ja
cmp
or
adc
js
adc
dec
or
inc
pusha
xchg
mov
adc
inc
das
inc
js
cld
push
mov
cwtl
jecxz
cmp
jl
arpl
sbb
or
pop
mov
nop
fiadds
push
dec
stc
iret
negl
mov
mov
sbb
pop
pop
fcmovbe
add
inc
shrl
and
push
xlat
mull
rolb
add
enter
addr16
ret
push
sbb
inc
test
xlat
and
xchg
cli
cmp
ror
lock
add
sbb
insb
cpuid
or
aam
stc
jmp
leave
orl
outsb
sub
inc
insb
loope
shl
push
xchg
push
imul
push
inc
mov
lock
xor
ja
je
push
sub
cwtl
jecxz
cmpsb
add
lcall
lods
and
mov
push
pop
dec
xlat
pop
or
sub
dec
jo
inc
bound
mov
imul
sub
ss
add
addb
gs
sub
cmp
pop
inc
je
fildll
test
adc
inc
popf
adc
jmp
or
adc
ror
push
sbbb
mov
adc
loop
pop
out
and
repnz
mul
je
and
mov
xchg
stos
out
ret
jge
or
negb
jbe
mov
mov
inc
and
or
hlt
dec
sbb
push
outsl
sub
mov
mov
jle
mov
jmp
inc
push
xor
decb
fistl
je
ss
jns
and
push
mov
fildl
push
inc
ret
xor
fwait
push
fs
mov
pop
mov
add
fidivrl
dec
dec
add
test
inc
and
inc
adc
push
adc
sbb
jne
pushf
pop
cltd
mov
push
adcl
dec
push
mov
add
aam
xchg
jmp
ret
or
inc
adc
and
adc
lods
aad
les
inc
add
and
cld
add
inc
add
cmp
inc
arpl
insb
and
sbb
cmp
clc
and
or
xor
and
dec
loope
sbb
inc
icebp
sub
and
das
movsb
fs
movb
sub
or
dec
out
add
and
pusha
rol
add
ffree
das
xor
jbe
pop
outsl
sti
mov
popf
push
aas
or
pop
xchg
jmp
xor
aam
stos
mov
mov
and
pushf
xchg
mov
add
xchg
add
mov
inc
mov
jnp
xor
xchg
outsb
lods
aam
add
pop
scas
pop
ja
lock
sub
xor
push
daa
adcb
xor
or
sbb
mov
std
xchg
shrl
and
aam
adc
sub
adc
daa
add
or
loop
mov
and
add
mov
jnp
movsb
add
mov
pop
lods
add
push
das
lock
imul
or
xchg
or
roll
sub
aas
stc
xchg
addb
sbb
pop
cmp
iret
push
inc
testb
adc
push
adc
or
mov
or
inc
pusha
mov
or
punpckhdq
leave
stos
cmp
xor
mov
dec
xchg
sbb
xchg
mov
stos
pop
lret
push
into
push
fidivl
lret
xchg
pop
adc
jbe
pop
lcall
outsl
sbb
daa
aam
ret
enter
or
inc
push
pop
inc
shlb
leave
mov
or
push
xchg
leave
cwtl
iret
aam
cwtl
cli
nop
clc
jo
loopne
inc
adc
sahf
add
adc
arpl
daa
iret
rcrb
mov
dec
sarb
js
cmc
mov
inc
inc
das
dec
adc
mov
sti
in
add
cmp
dec
xor
in
inc
push
or
adc
or
sub
mov
fnstcw
dec
or
enter
mov
xchg
not
cltd
rolb
cmp
ror
gs
mov
fisubrl
enter
test
xchg
push
imul
add
dec
imul
or
sbb
xlat
or
and
dec
das
fwait
dec
aad
popf
xchg
shrb
mov
push
push
leave
ret
jmp
insb
enter
iret
xor
or
stc
in
iret
in
lcall
out
cli
test
in
mov
leave
xor
aaa
and
mov
jne
lea
and
and
cld
and
add
and
nop
icebp
mov
fwait
stos
xor
sbb
jle
popa
push
cmp
ss
lahf
dec
imul
loop
jle
shlb
dec
push
pop
adc
xchg
adc
jae
pop
inc
or
pop
adc
imul
xlat
dec
push
and
or
and
and
adc
pop
mov
ret
test
push
xor
les
jmp
adc
aaa
test
mov
mov
push
add
mov
fcoml
into
mov
popf
lods
push
lret
xor
adc
loope
mov
in
sbb
add
sub
jge
into
xor
mov
sbb
lret
pop
jo
psubq
pop
dec
mov
xchg
inc
popa
and
mov
imul
add
pop
sahf
mov
adc
xor
ret
jo
add
out
inc
or
pop
and
inc
mov
sbb
add
mov
add
mov
sub
inc
push
jbe
add
in
dec
add
inc
dec
or
inc
int3
sbb
dec
or
inc
cmp
mov
add
or
inc
adcl
mov
or
movd
xor
pop
les
add
sahf
fsubs
and
adc
mov
stos
dec
inc
insl
insb
mov
mov
jp
and
stc
xchg
loop
andb
cpuid
jmp
nop
add
pop
mov
shr
outsl
out
xchg
outsb
mov
push
orb
cs
pop
adc
arpl
mov
sbb
mov
add
in
nop
xchg
lahf
push
add
je
adc
subl
dec
inc
inc
ficoms
mov
jp
xchg
das
rcrb
call
cmpsl
add
mov
push
movsb
nop
add
push
js
or
negb
lahf
fmuls
mov
lahf
adc
push
inc
jb
lahf
push
xchg
adc
pusha
pop
add
lds
adcl
or
pop
ret
adc
clc
pop
ret
pusha
test
push
jno
aas
divl
ret
or
sub
pop
sbbl
dec
aaa
aaa
mov
sub
pusha
imul
jnp
jbe
push
adc
dec
cmpsl
es
outsb
adc
adc
and
gs
or
push
jo
sbb
dec
nop
aaa
jo
xchg
adc
and
xor
push
mov
add
push
icebp
test
mov
mov
inc
jne
data16
test
popa
or
xchg
je
je
and
sub
dec
outsl
or
mov
cltd
ret
sarl
js
push
stc
cmpb
mov
xchg
or
or
or
lds
loope
je
push
shll
cmp
std
mov
push
xchg
sbb
add
sahf
fs
decl
pop
js
test
aaa
sbb
cmp
push
mov
jl
mov
sbb
sbb
mov
mov
sbb
enter
sbb
rcl
fcomp
sbb
sbb
loopne
call
sbb
hlt
clc
cld
sbb
mov
or
sbb
sbb
adc
sbb
sbb
sbb
and
sub
sbb
sbb
xor
cmp
sbb
sbb
dec
dec
arpl
sbb
push
push
pop
inc
mov
and
int3
and
or
ret
mov
pop
pop
das
pop
jnp
pop
arpl
dec
loopne
ret
xor
jbe
xchg
mov
cltd
test
and
movsb
cld
in
xchg
add
xchg
or
and
nop
inc
mov
inc
sub
jl
add
mov
movsb
xor
int3
rcl
lret
rcl
in
cs
sbb
or
fcompl
nop
lret
sub
inc
sub
push
cmp
dec
test
pop
lock
xor
xchg
add
cmp
push
push
movsb
nop
cld
mov
test
mov
rolb
lea
nop
lret
call
pop
sbb
stos
sbb
sbb
and
add
and
test
insb
sub
xor
xchg
add
mov
push
push
movsb
cwtl
cmp
cmp
inc
loopne
inc
sub
inc
clc
dec
add
adc
inc
sub
je
aaa
or
rolb
test
cmp
mov
enter
mov
fdivrs
and
test
loope
insb
outsl
jae
and
pop
inc
pusha
inc
lcall
push
inc
cmp
arpl
add
aas
inc
sub
adc
daa
or
les
mov
cmp
dec
sub
shlb
gs
addr16
fs
lock
fcomps
dec
arpl
jae
xchg
and
loope
jnp
lea
sbb
shr
mov
jp
mov
adcb
repz
pop
pop
pop
add
scas
dec
fistps
popa
ja
xchg
pop
pop
dec
lcall
and
push
or
faddl
cmp
mov
or
andb
sbb
add
test
sub
mov
stos
jns
cs
or
negb
sub
popa
and
imul
daa
inc
das
in
in
and
pop
in
pop
mov
in
pusha
xchg
pop
pop
xchg
mov
pop
test
or
loopne
and
and
fisubs
sbb
idiv
add
outsb
das
outsb
mov
out
inc
imul
push
das
pop
testb
adc
nop
xchg
outsl
arpl
or
pop
push
xchg
xchg
pop
inc
and
inc
in
sbb
lea
inc
ror
imul
xchg
loopne
ret
push
pop
jne
xchg
shrb
dec
sbb
daa
enter
out
sbb
les
test
sub
lods
cmpsl
cmp
xor
mov
lods
mov
and
and
and
aaa
test
inc
push
dec
lock
xlat
inc
ja
iret
add
jo
jmp
or
fwait
mov
shl
sbb
mov
nop
dec
inc
push
mov
xchg
or
das
jge
or
popf
or
jg
jl
mov
sub
outsl
push
or
pop
jmp
test
je
jl
pop
inc
push
adc
fs
mov
push
mov
ja
jl
bound
xchg
or
cmp
pop
or
mov
imul
add
xorb
je
test
je
adc
inc
adc
xchg
sar
je
or
or
jae
les
push
inc
insb
ret
add
jae
inc
loope
stc
mov
rolb
jo
dec
or
test
or
push
pop
cwtl
sbb
or
lea
sub
sbb
fiaddl
pop
add
and
add
jnp
movsb
fidivrl
xlat
and
pusha
incb
jle
add
inc
enter
push
jo
inc
mov
addb
shll
fnstcw
clc
addb
stc
rcr
loope
lcall
push
add
adc
xlat
sahf
frstor
data16
sub
push
movsb
out
fldcw
jmp
loopne
loopne
imul
dec
fmull
mov
sar
aam
add
mov
mov
inc
jmp
push
cwtl
arpl
stc
push
in
ret
push
cmp
inc
mov
mov
push
xorl
sub
stos
mov
and
scas
test
loope
fadds
dec
mov
inc
test
mov
jp
push
push
sbb
add
xor
or
sbb
clc
mov
xchg
cmp
pop
fildl
add
inc
rolb
dec
pushf
add
clc
leave
inc
push
add
mov
and
test
sti
loop
into
shl
in
flds
leave
ret
test
pmuludq
push
cmp
push
rcll
mov
adc
inc
outsl
push
mov
push
movsb
jnp
je
ljmp
dec
adc
jmp
pop
test
mov
adc
or
inc
fimuls
jo
mov
adc
fsubl
stos
sub
data16
or
daa
mov
mov
jae
es
sbb
into
jle
dec
hlt
sub
pop
inc
or
add
dec
popl
xor
jns
call
dec
push
inc
pop
and
lods
loopne
jmp
pop
or
ror
movsl
cpuid
mov
pop
xchg
xor
xchg
mov
push
sar
sbb
and
push
cmp
cwtl
insb
push
mov
cmp
inc
and
lods
pop
adc
mov
les
mov
mov
push
sbb
loopne
adc
pop
nop
sbb
icebp
push
sbb
dec
mul
dec
pop
cld
call
xor
push
cwtl
dec
out
xchg
inc
cmp
cltd
mulb
ja
shl
pop
ss
sbb
test
inc
add
sbb
jo
jo
push
sahf
sub
rolb
test
rorl
dec
lea
and
pop
xchg
and
jbe
cmp
mov
bound
inc
addb
nop
out
sahf
call
lds
cmp
rcll
cli
and
jne
push
rorl
shrb
andb
lahf
test
lret
es
adc
clc
pop
mov
push
mov
inc
pop
inc
psubq
dec
outsb
cmpl
adc
and
or
sub
sahf
cmp
sbb
aas
inc
jmp
sbb
push
inc
sbb
aam
pop
mov
push
dec
sub
xor
xchg
dec
dec
loopne
add
nop
loopne
test
in
cmpsl
xchg
clc
pop
imul
fcoms
jmp
push
subb
add
inc
sub
xchg
or
inc
sub
or
rolb
dec
sbb
sbb
xor
loop
shrb
test
mov
out
outsb
test
enter
insl
enter
xchg
rolb
xchg
or
xor
mov
cmp
repz
je
faddl
push
dec
xor
cmpsb
mov
pop
xor
dec
shll
loop
pushf
lock
xor
mov
xor
daa
cltd
xor
dec
data16
mov
push
xor
inc
sub
cmp
loopne
out
mov
cld
add
int3
inc
je
inc
sub
inc
insl
pop
cmp
clc
rcrb
pop
inc
adc
dec
repz
push
push
inc
enter
push
out
mov
fmuls
pushf
nop
push
rorb
push
and
mov
push
in
cld
jle
hlt
jnp
cmp
push
add
or
mov
fnstsw
push
sbb
adc
cli
outsb
inc
les
aaa
in
inc
push
outsb
mov
insb
push
ds
mov
push
cmpsb
aas
push
fiaddl
pop
push
test
push
cs
insb
aas
aas
pusha
movhps
sbb
mov
add
sahf
int3
outsb
data16
adc
imul
inc
jl
outsb
cmpb
mov
inc
jge
fnstcw
inc
pushf
outsb
pop
addr16
push
shlb
push
pushf
mulb
nop
das
lods
into
shrl
xchg
sub
sub
sub
dec
mov
lcall
jl
mov
lcall
clc
fs
pop
lock
mov
mov
dec
fcos
sbb
addb
sub
sbb
sub
popl
sub
adcl
pop
mov
cmp
hlt
ss
pusha
push
leave
andl
into
test
adc
cmp
and
je
loop
icebp
xchg
add
mov
ljmp
mov
push
pop
loopne
push
dec
subl
pop
jo
pop
adc
mov
shll
lods
pop
sbb
adc
sub
bound
popa
jo
jae
push
inc
cmp
adc
adcb
lods
push
lret
or
fstps
inc
pop
leave
adc
sub
nop
or
xchg
rorb
pop
rcrl
dec
shll
addl
lret
jne
xchg
or
daa
lods
inc
jns
mov
pop
insb
pop
adc
orb
out
popa
adcb
inc
pop
jae
jae
dec
lods
in
daa
lods
stos
push
jns
sbb
lods
rcrb
push
jno
enter
lds
adc
adc
push
imul
and
lods
or
fsubrs
or
fisttpll
pop
inc
fimull
add
shll
push
mov
inc
leave
rorl
test
rorl
push
sub
push
loop
and
lock
lods
int3
adc
pusha
mov
push
loop
cmpsl
push
inc
js
je
test
sbb
push
lahf
push
push
rcrb
adc
adc
lahf
or
mov
fs
sbb
dec
xchg
mov
push
jo
and
xchg
in
xor
and
mov
add
xorl
dec
in
sub
and
ss
add
cmp
or
inc
mov
adc
es
ds
int3
mov
movb
imul
mov
sbb
mov
and
jmp
popf
adc
push
in
push
xchg
push
filds
xlat
int3
pop
jp
in
and
sub
imul
int
push
mov
fwait
mov
pop
or
add
jae
decb
pop
orl
push
rcrl
sub
les
xcrypt-ecb
cmpsl
lea
mov
adc
subb
lods
push
lods
lar
and
imull
cs
add
mov
or
pop
lea
xchg
daa
xlat
adc
aaa
insb
jl
fsubs
sub
pop
leave
adc
xchg
sahf
adc
or
inc
sub
aas
lods
das
or
sub
add
sub
sbb
fsubrs
push
pop
mov
cld
adc
pushf
imul
popf
lea
insl
lods
or
sbb
loopne
in
jmp
adc
and
movsb
pop
clc
mov
nop
inc
hlt
lret
cld
pop
mov
lods
inc
sbb
cmp
aas
adc
movl
sbb
clc
sub
adcb
pop
idivl
es
vmread
inc
mov
adc
lahf
jne
or
mov
out
push
aam
and
je
arpl
int3
mov
pop
popf
imul
movl
jecxz
insb
in
sbb
sbb
sub
dec
lahf
jge
and
inc
lret
jbe
or
and
lock
loopne
add
xor
lods
add
pop
sub
sub
xchg
hlt
movsb
fs
or
callw
xchg
hlt
ret
push
dec
pop
popa
sub
sub
xchg
mov
je
jns
cmp
mov
jle
cmpb
inc
push
movsl
mov
hlt
adc
ret
dec
inc
push
jo
lret
or
lea
mov
sbb
jmp
ret
pop
push
fwait
pop
mov
jae
push
pop
xor
hlt
mov
mov
dec
cwtl
cmpsl
dec
lock
mov
inc
mov
testb
and
add
mov
orb
adc
adc
add
fadds
cmpsl
adc
fiaddl
pop
inc
push
push
in
inc
popa
call
popa
sub
hlt
fadds
mov
add
add
rcll
inc
inc
clc
sbb
push
mov
test
mov
dec
cs
fdivs
data16
push
sbb
mov
data16
popa
fdivs
push
xchg
fistpll
push
lret
push
sub
push
or
mov
or
cmovp
push
add
movsb
inc
cs
pop
sub
mov
aam
add
andb
cmp
clc
inc
xor
adc
jb
adc
and
icebp
mulb
or
dec
jmp
adc
mov
sbbl
mov
ret
lar
in
mov
outsl
dec
ret
adc
dec
pop
mov
inc
pop
pop
lcall
or
and
or
push
jbe
fildl
push
lea
xchg
inc
mov
adc
nop
lret
or
sbb
shrb
pop
add
inc
dec
sub
lods
xchg
hlt
sbb
aaa
jmp
fsubs
pop
outsl
sub
clc
in
rolb
cmp
xchg
jl
add
ljmp
pop
or
test
in
sbbb
xchg
icebp
sbb
in
xor
rcll
imul
mov
or
dec
lods
push
sub
inc
push
leave
fwait
dec
xor
orb
jno
sbb
or
leave
push
pop
arpl
out
mov
add
addr16
rorb
cmpsl
cmpsb
push
dec
je
push
dec
sub
out
add
outsl
and
inc
mov
xchg
add
inc
dec
popa
scas
je
mov
movsl
js
hlt
jge
lods
jl
addr16
mov
out
sbbl
daa
je
mov
inc
imul
test
jmp
cs
add
cwtl
inc
fwait
loopne
and
dec
push
sub
aam
ror
and
cmp
lret
adc
jnp
mov
lods
add
iret
sahf
pop
add
sahf
or
xchg
lahf
pop
loopne
jbe
sbb
nop
add
loopne
mov
add
cmp
shll
push
getsec
test
cs
inc
add
das
pop
jge
pop
les
iret
push
dec
cmpl
bound
mov
arpl
dec
ljmp
lock
insb
stc
mov
mov
mov
adc
aam
bound
rolb
sub
shrl
sarb
add
mov
scas
push
test
popl
and
add
cmp
xchg
fwait
daa
sbb
pop
cmp
adc
iret
inc
ficoms
pop
pop
in
clc
sbb
addb
add
int3
sar
fdivl
push
jbe
in
arpl
mov
movq
xor
sbb
lea
xchg
mov
sbb
jg
fs
ss
or
add
ja
or
add
lock
nop
nop
adc
or
add
std
lods
or
jmp
dec
jne
js
and
movb
add
daa
add
jmp
jl
pop
lahf
js
jne
add
inc
pop
mov
sbb
movsl
ret
or
cmp
xchg
mov
imul
jecxz
sub
sbb
jbe
dec
add
mov
push
aaa
or
xlat
popa
xchg
and
xor
imul
and
cld
sti
mov
push
or
dec
inc
and
ss
dec
and
rcrb
mov
mov
ret
test
xchg
sbb
push
push
or
xor
jmp
ret
cmp
cmpsl
mov
test
clc
loope
aas
bnd
rol
aas
fisubl
icebp
push
in
mov
mov
shll
dec
or
mov
cmp
shrb
fdivl
push
push
cwtl
insl
mov
das
decb
and
hlt
jl
and
mov
mov
prefetch
add
mov
add
rcrl
add
ret
sbb
xchg
ret
mov
inc
add
inc
push
push
jnp
out
loopne
dec
dec
out
sbb
cld
mov
outsl
cmpw
xor
loop
mov
pop
inc
adc
sbb
push
pushf
shlb
push
add
js
push
sbb
shlb
or
sbb
sbb
mov
lds
and
bound
les
or
xor
shl
dec
cmp
add
aaa
aam
mov
and
es
jmp
cmpl
xchg
imul
or
add
int3
addr16
pop
xchg
test
jns
enter
das
pop
sub
mov
xchg
inc
push
adc
cltd
lea
ja
daa
or
jl
out
jmp
mov
push
pop
xor
sub
xor
clc
or
stos
js
ljmp
out
cltd
test
leave
inc
mov
ret
dec
loop
pop
push
bound
loope
inc
xchg
xor
inc
inc
popa
sbb
xchg
ret
or
adc
xor
pslld
insb
fs
addr16
xor
dec
jbe
daa
or
inc
and
les
mov
sbb
pop
gs
adc
jmp
inc
outsb
je
jno
and
aaa
or
add
or
gs
pop
out
pop
mov
outsl
jae
mov
or
jae
shl
subb
jno
ss
scas
push
popa
jo
jns
enter
and
mov
popa
push
stc
iret
dec
add
ret
rclb
in
adc
insb
mov
fcoms
jp
push
mov
arpl
dec
je
and
adc
ja
or
outsb
js
js
iret
dec
gs
cmp
inc
data16
pop
adc
adcl
sbb
adc
repnz
or
cmp
push
sbb
push
adc
push
cli
and
push
xor
push
popa
mov
aas
sbb
xchg
popl
imul
xchg
fcomps
jg
insl
jmp
add
and
fcomp
lret
inc
sbb
pop
push
xor
sbb
rcrb
pop
inc
push
inc
inc
jae
iret
push
movsb
je
outsb
add
insl
jae
test
cmp
xor
push
in
lods
test
pop
jns
shlb
jmp
adc
aaa
jno
fiaddl
daa
pop
das
mov
or
inc
imul
sub
mov
subb
shlb
popa
bound
insb
or
xlat
out
mov
jne
xor
lahf
adc
out
cmp
add
pop
fwait
sbb
xor
mov
test
aaa
xlat
ret
sub
adc
cmp
cmp
das
lods
insl
ljmp
pop
inc
aad
mov
dec
add
mov
imul
cmp
xor
mov
inc
xor
mul
addr16
out
xchg
sbb
mov
adc
pop
sbb
adc
xchg
or
and
push
aaa
out
and
xlat
lahf
sbb
ja
enter
inc
das
or
push
jo
aaa
mov
or
push
xchg
inc
ljmp
jl
insl
mov
cmpsl
push
jne
push
mov
aaa
xchg
jae
jg
or
aad
xor
cmpsl
sub
jbe
iret
punpcklwd
sbb
movl
pop
pop
ja
stc
lock
aas
outsl
unpcklps
aaa
cmp
or
xor
lea
sub
aas
sbb
pop
scas
adc
add
das
and
test
cmp
outsb
bound
imul
sbb
popa
sub
dec
rcrl
mov
call
aam
jae
sbb
addr16
jnp
sub
and
jl
add
or
loopne
xor
loopne
dec
arpl
testl
lcall
dec
enter
cmp
xchg
xor
getsec
cmpsl
pusha
pop
and
adc
aaa
sub
adc
psllw
mov
addr16
add
add
push
xor
lods
push
dec
jbe
in
pusha
mov
jae
sub
bound
mov
je
stos
and
or
pusha
outsl
ljmp
pop
adc
mov
pop
sbb
inc
sbb
dec
shll
das
cmpl
or
xor
push
insl
outsl
imul
popf
sub
inc
imul
outsl
int3
jns
gs
mov
push
pop
aaa
or
xchg
inc
xor
jae
outsl
adc
sbb
or
into
das
xor
out
xor
jg
xchg
push
xchg
jecxz
xchg
dec
xchg
hlt
push
push
mov
inc
cmp
adc
mov
fidivrs
in
idivl
and
cs
mov
sahf
push
aas
in
out
sbb
fildl
and
loopne
inc
mov
push
adc
aas
negb
xchg
xlat
inc
lcall
adc
jmp
ret
popa
imul
sbb
inc
cli
das
add
xchg
adc
fbld
xchg
fs
add
adc
pusha
seta
adc
inc
test
or
push
arpl
mov
in
sbbb
inc
adc
enter
adc
cmpsl
stos
push
enter
fists
dec
outsb
sbb
insb
outsl
nop
inc
pop
add
or
or
mov
pop
or
mov
xor
mov
ret
lods
ficomps
push
push
mov
dec
nop
ja
and
test
insb
and
mov
jmp
stos
test
imul
sbb
adc
push
sub
xchg
stos
in
and
sub
or
mov
add
add
js
add
jl
inc
inc
cmp
into
pop
push
test
popa
jnp
das
fs
sub
mov
mov
js
adc
cwtl
out
inc
outsb
and
xlat
dec
pop
sub
or
or
sub
jb
testl
or
xchg
add
daa
mov
imul
jl
popa
leave
repz
xor
add
dec
sahf
xchg
addr16
test
mov
lock
add
adc
lock
int
xchg
and
cmp
loopne
lods
or
adc
mov
mov
dec
js
inc
adc
adc
lcall
ss
pop
adc
mov
into
int3
inc
mov
aam
pop
or
out
and
xchg
jge
test
push
pop
test
rorb
mov
and
call
xchg
sbbl
clc
mov
inc
rcll
loopne
add
xchg
inc
jmp
insb
test
lods
sub
fwait
dec
lcall
or
fisttpl
sub
mov
aaa
je
idivb
add
jb
and
fistpl
push
adc
stc
jo
fwait
cmp
pop
je
ret
mov
xchg
inc
cld
and
lea
mov
pop
in
popa
mov
xor
jmp
sub
pop
out
push
in
jle
xchg
pop
and
mov
ficompl
mov
or
xchg
xor
call
jl
test
dec
sbb
push
and
sbb
pop
sbb
xchg
and
test
mov
add
fmull
ljmp
mov
loop
adcb
dec
sub
xchg
add
in
or
sbb
push
in
js
je
out
inc
jne
lahf
sbb
and
adc
and
testl
test
sub
push
ret
pop
jns
jmp
mov
fsts
ja
std
inc
sub
and
add
and
adc
or
fldenv
or
jne
outsl
in
dec
or
xor
cmp
mov
push
cmc
imul
xorl
inc
sbb
jne
or
in
dec
pusha
jno
jle
push
imul
and
pop
das
pusha
and
adc
push
xchg
sarb
jne
add
sti
aaa
cmpb
vmread
data16
xorl
sub
js
add
mov
arpl
sbb
inc
push
ds
mov
or
in
fistpl
clc
sub
or
jl
cmpw
ret
push
jmp
push
adc
sbb
xchg
jo
call
mov
pop
adc
in
mov
mov
iret
or
dec
test
dec
cs
cs
stos
lods
lods
lock
inc
pop
lock
pop
pop
sarl
idivb
negl
cmp
js
mov
inc
mov
mov
xor
add
push
dec
popf
scas
add
jne
push
scas
test
inc
je
pop
icebp
inc
je
adc
adc
pusha
loopne
xchg
jne
add
jg
imul
cmpb
dec
jl
adc
pop
sub
dec
jl
mov
sbb
inc
and
lods
bound
pop
pop
inc
jne
push
repz
push
js
out
inc
jmp
jmp
popa
inc
insl
jne
cwtl
xor
jb
xor
push
mov
xor
or
arpl
dec
loope
xlat
add
addl
js
cld
mov
shrb
xlat
add
or
rol
pop
add
fistps
pop
test
push
xor
scas
test
insl
jecxz
cmp
xchg
mov
in
lods
pop
xlat
in
mov
in
out
test
ret
sbb
cli
push
add
inc
cmp
cmp
jge
add
xchg
mov
fstp
int
and
xchg
movsb
mov
inc
cmpb
sbb
arpl
xor
push
push
repnz
fdivr
mov
enter
add
cmp
fimull
push
or
or
cmp
push
mov
pop
aas
and
sub
push
xchg
movsl
aaa
loopne
cmpsb
push
cmp
icebp
loopne
imul
jnp
cmp
pop
adc
fdivl
cld
push
inc
sahf
loopne
pusha
pop
call
inc
enter
into
insb
repz
adc
repnz
or
xor
cmp
ja
dec
out
pushl
push
movsb
je
ljmp
or
jle
pop
sub
mov
xor
pop
dec
or
andl
aas
jno
lock
sbb
push
sbb
cltd
dec
mov
lea
inc
sub
pop
pop
inc
out
or
push
fnstsw
pop
nop
inc
push
sahf
fadd
lods
inc
push
rsm
lods
daa
push
xor
dec
and
xchg
repz
je
out
xchg
les
imul
nop
mov
sbb
sbb
fwait
addr16
or
or
mov
sbb
loope
jmp
add
popa
inc
jp
adcb
lods
and
add
cmp
mov
pusha
in
adc
xchg
jle
jo
sub
add
insl
or
les
insb
fimull
mov
insb
push
add
xor
mov
sub
xrelease
sbb
test
jmp
or
cltd
das
orl
nop
add
fbstp
out
imul
pop
lods
or
jle
inc
cmp
inc
andl
ds
sbb
adc
test
or
push
xchg
popa
out
insb
mov
mov
inc
ja
mov
pop
hlt
xchg
and
push
ret
das
inc
pop
popa
cld
fiadds
push
insb
mov
out
or
popa
insl
lods
jmp
xlat
push
jecxz
hlt
push
xlat
mov
aam
push
push
daa
xchg
test
adc
adc
int3
mov
mov
decl
mov
inc
inc
cmp
jne
lcall
popa
push
push
orb
imul
xor
add
jbe
fiaddl
xchg
xor
cmp
outsb
lock
fadds
inc
add
mov
or
or
cmp
xor
inc
xorl
cwtl
es
add
inc
nop
cmp
aas
inc
jmp
or
fcomps
pmulhuw
add
inc
inc
dec
inc
xchg
push
nop
sub
add
mov
dec
scas
dec
aaa
add
sbb
inc
sbb
pushw
xor
push
inc
insb
inc
and
outsl
push
in
inc
pop
insb
fildl
jns
js
pushf
xchg
push
jo
push
and
iret
imulb
lock
xchg
cmp
fldcw
xchg
mov
xchg
mov
es
dec
test
addr16
xor
test
xor
push
push
jbe
pop
or
rcrb
roll
inc
push
leave
pop
movsb
xlat
push
lea
lock
ret
mov
push
lea
adc
addr16
in
cmp
pop
loope
addr16
mov
sbb
xor
sbb
call
pop
inc
ds
int3
mov
scas
rclb
xor
out
sbb
xchg
cmp
addb
jl
inc
sbb
jae
rolb
clc
shll
test
loop
clc
ret
push
lret
inc
mov
push
out
popa
mov
addr16
scas
xor
dec
sarl
pop
inc
or
dec
adc
dec
ljmp
cwtl
and
cmp
adc
iret
fldl
mov
mov
pop
adc
jnp
dec
push
jo
aaa
mov
jle
clc
sub
js
cltd
mov
cmpsl
lods
or
adc
mov
ja
and
fisttps
add
in
adc
dec
shl
hlt
dec
mov
pop
out
jae
or
sub
lods
sti
mov
xchg
and
fldt
mov
push
les
dec
and
test
lcall
xor
inc
xchg
es
push
sti
popa
mov
and
call
rclb
xchg
sub
add
jecxz
inc
or
pop
sbb
imul
test
movb
sub
mov
nop
pushf
mov
std
imul
mov
fneni(8087
pop
mov
imul
lcall
aam
mov
sahf
loopne
dec
mov
addr16
cwtl
mov
and
mov
sbb
ja
or
and
xor
outsl
add
in
push
or
xchg
and
mov
pop
loopne
cmp
xor
dec
orb
and
idivl
imul
into
jns
pop
in
data16
outsb
test
inc
insb
insb
mov
fmul
pop
push
outsl
pop
or
and
aad
ficompl
mov
push
nop
xchg
nop
nop
add
inc
mov
inc
stc
test
inc
test
imul
or
hlt
mov
out
sub
sahf
xchg
push
and
mov
add
push
loopne
test
cmovnp
mov
push
push
clc
bnd
cmp
test
sub
orb
jle
rorb
jns
add
cwtl
or
add
or
xchg
int
pop
hlt
scas
push
jne
push
pop
in
cmp
jmp
push
sbb
xor
mov
fstpt
sub
rorl
jb
cmp
ja
inc
bt
xchg
lock
stc
jae
cmp
dec
shr
mov
call
rorb
adc
pop
adc
loopne
mov
cmpsl
inc
add
xchg
and
test
bound
push
jnp
test
add
inc
xorl
xor
cmovg
add
cwtl
mov
loopne
push
dec
aam
jno
or
add
pusha
add
sbb
mov
in
xor
mov
adc
sbb
out
prefetch
test
or
test
stos
test
lods
es
mov
add
and
ret
sbb
mov
cmpsl
shll
cli
jne
xor
ror
add
cwtl
jne
xor
fwait
popa
hlt
iret
pop
dec
fmuls
insl
rolb
fdivrs
fidivrs
push
push
adc
addr16
or
cmp
cwtl
mov
sub
int3
add
add
add
orl
das
pusha
rorl
jns
loopne
rolb
dec
icebp
sub
fsubrs
fs
mov
bound
add
enter
hlt
pop
xlat
add
mov
test
pop
cmpb
jmp
mov
jnp
shlb
xchg
sbb
push
jge,pt
jnp
loopne
xlat
mov
mov
pushf
lea
insb
push
push
dec
test
subb
sahf
aaa
dec
and
mov
and
xchg
in
call
cmp
xchg
xlat
loopne
dec
and
adc
lea
rcll
insb
hlt
movsb
hlt
adc
stos
sti
adc
adc
adc
xor
ret
pop
push
je
mov
jne
adc
push
adc
pop
cmp
sbb
dec
cmc
loopne
dec
push
push
les
xchg
inc
testb
adc
ss
or
adc
add
sbb
ret
mov
mov
repz
sbb
popf
push
sahf
into
fmul
mov
or
js
jae
push
cld
cltd
add
lods
loop
pop
xchg
mov
add
sub
push
mov
fstps
sbb
pop
or
pushf
push
cmp
std
cmp
mov
mov
ret
mov
cmp
and
subb
fmul
aam
rolb
pop
mov
pop
cmp
repnz
movsb
and
mov
scas
repnz
add
or
push
push
lret
nop
mov
cltd
xchg
pop
add
inc
or
add
or
pusha
test
dec
mov
mov
lock
add
and
add
or
add
adc
jmp
push
rolb
clc
mov
mulb
sub
cmp
in
and
jmp
adc
jmp
push
mov
push
add
addb
dec
lret
sti
mov
faddl
adc
sbb
jge,pt
mov
xchg
cld
rcll
mov
cld
mov
scas
jns
outsl
dec
adc
jmp
jo
movsb
lahf
jge
push
pop
push
jge
shll
cmpb
movsb
dec
sbb
pop
int
xor
xchg
dec
jmp
sub
and
addl
push
dec
movsb
jae
inc
outsb
jo
inc
pop
add
orl
xchg
faddl
lea
adcl
xchg
mov
ds
add
lret
imul
shr
in
jo
add
jl
js
or
push
and
jbe
mov
fsubrl
dec
test
pop
add
push
pusha
mov
lcall
loop
jo
mov
icebp
add
inc
arpl
out
rclb
lahf
cltd
out
inc
dec
or
jp
clc
imul
jmp
mov
push
lds
adc
dec
test
mov
adc
aam
das
push
push
test
xor
movsb
add
adc
aaa
and
pop
jl
jno
inc
xchg
lcall
mov
and
outsl
pop
xchg
es
push
add
lsl
fs
pop
cmpsb
pop
je
hlt
cmc
fsubrl
jp
sarb
out
mov
pop
loope
or
or
add
prefetch
or
sub
mov
and
nop
mov
push
mov
jmp
xchg
mov
jge
xor
int3
sub
mov
cmp
shrb
cmpsb
imul
push
icebp
mov
add
ret
pop
pop
add
jecxz
add
add
push
aam
movsb
test
and
cmp
cmp
setle
fisttpl
repnz
dec
clc
add
cld
or
sub
add
or
cld
mov
mov
aam
sbb
mov
sbb
cmp
repnz
pusha
dec
pusha
and
cltd
sbb
and
mov
insl
or
push
loop
jecxz
sbb
fwait
and
aam
adc
mov
jmp
int
inc
jmp
xor
sub
xor
lods
or
dec
pushf
insb
push
add
or
je
inc
push
fistpll
mov
andl
je
lods
daa
and
jae
je
insb
shl
lds
cmp
pop
aad
lods
adcl
sbb
push
push
push
adc
push
dec
dec
jo
mov
icebp
testl
inc
xchg
rorl
mov
out
adc
outsb
fisttps
push
or
pop
and
popa
outsl
test
test
pop
data16
adc
or
xor
cld
and
xor
fldt
dec
in
sbb
dec
loopne,pn
inc
andb
pop
test
or
push
test
sub
insb
dec
cwtl
mov
or
loope
xchg
jne
mov
mov
je
adc
test
and
push
xchg
out
adc
clc
hlt
cli
and
sbb
int3
lods
arpl
scas
ror
ds
enter
inc
ret
ds
ss
pop
pop
shl
loope
in
movsb
pop
test
enter
sub
rcl
loop
mov
mov
ss
push
cmp
imul
dec
xor
inc
gs
inc
cmp
and
add
imul
popa
les
not
popf
mov
js
push
sbb
test
in
and
mov
sub
cs
sbb
add
pushf
adc
inc
loop
mov
loopne
push
jl
cmc
mov
push
test
lods
sbb
mov
add
xor
aad
movb
ss
in
xor
sbb
dec
dec
jmp
and
mov
sti
ret
data16
pop
add
mov
fs
addr16
push
sbbb
hlt
push
adc
loope
fnstsw
push
je
and
mov
cmp
daa
xor
in
dec
fmulp
aaa
sub
mov
out
in
stc
inc
and
and
inc
ds
sbb
mov
out
sbb
inc
or
mov
mov
iret
or
rolb
mov
jnp
mov
movsb
cmp
and
inc
or
cli
add
jo
cs
sarb
cmp
mov
movsb
inc
pushf
or
cs
jge
mov
test
call
sbb
xchg
les
cmp
sub
sahf
scas
fidivrl
lods
push
fisttpl
in
es
sbb
scas
mov
stos
nop
cmpsl
mov
push
nop
fdivrs
push
inc
cmp
push
mov
xchg
push
aaa
pop
and
clc
xor
test
lahf
outsb
jae
mov
test
xor
adc
mov
cmp
add
js
loope
loope
add
mov
rolb
test
sbb
push
clc
adc
push
fmull
mov
shrb
xchg
imul
dec
sbb
adc
adc
xchg
adc
fldl
push
shlb
mov
dec
push
mov
repnz
lock
adc
xchg
out
add
add
hlt
sub
jb
clc
hlt
jne
lret
push
inc
cld
cld
andl
pop
push
movsb
popf
jb
sbb
add
sub
dec
dec
sbb
or
cmp
pop
cmp
mov
mov
daa
push
sub
pop
dec
test
fwait
cmp
in
push
das
push
and
mov
xchg
pop
mov
ret
pop
mov
sub
sbb
js
pop
outsl
jae
daa
scas
shrb
mov
push
fists
mov
sub
enter
adc
xchg
je
pop
or
inc
sbb
outsl
aam
and
and
cmpsb
and
push
inc
xor
iret
push
add
bound
frstor
or
mov
mov
or
jle
adc
inc
mov
sbb
or
pop
nop
les
bound
insb
fs
dec
or
fwait
jno
sub
pusha
cmp
adc
jnp
cld
popa
mov
nop
mov
pop
inc
and
inc
push
xor
fmuls
mov
push
pop
sti
add
jge
sub
sbb
jbe
fs
or
push
mov
and
icebp
pusha
pop
pop
repz
outsb
mov
inc
add
inc
outsb
inc
int
jecxz
rolb
add
aas
add
out
or
sub
pop
pop
push
pop
adc
adc
adc
push
sbb
mov
cmp
in
cmpb
popa
das
or
cmpsl
mov
outsb
or
dec
popa
push
adc
in
pop
or
push
add
enter
jae
inc
adc
jns
mov
cmp
inc
push
daa
out
add
sub
cmp
sbb
push
mov
push
in
and
push
pushf
mov
jnp
inc
cld
push
lock
push
sbb
repz
pop
jl
sahf
pmullw
shll
sub
idivb
call
push
cs
lods
pop
popf
push
daa
inc
sub
jo
push
mov
xchg
lock
adc
aas
enter
mov
push
data16
push
outsb
insb
pop
pop
push
pusha
pop
insl
bound
push
cmp
iret
pop
pop
aas
std
push
xor
mov
repnz
movsb
test
pop
bnd
push
adc
or
push
clc
pop
cmp
imul
push
or
dec
push
inc
add
push
dec
js
or
shlb
dec
imul
xchg
imul
test
dec
cmp
insb
add
movsb
test
jne
push
pop
push
mov
test
pop
sub
push
add
xor
scas
orb
pop
dec
cwtl
cld
pop
inc
dec
add
mov
decl
push
or
aaa
or
inc
cmp
bound
or
inc
add
rcr
or
jo
push
rol
bound
hlt
add
enter
and
mov
xlat
cmp
and
in
mov
int
aas
out
dec
pop
addb
pop
or
cltd
fs
add
or
pop
insb
gs
gs
and
cs
mov
adc
sahf
add
mov
dec
or
push
les
push
mov
push
pop
xchg
cltd
inc
ss
shll
fsubrl
push
jb
lea
ss
loopne
inc
lock
out
adc
call
inc
pop
in
pop
jecxz
mov
nop
pusha
cltd
nop
bound
nop
adc
test
cwtl
insb
pop
dec
add
dec
and
and
xor
add
insl
mov
negl
push
cmp
pop
xor
sub
outsl
fnstenv
dec
loopne
inc
js
mov
or
ds
out
jp
mov
cmp
jl
cmc
repnz
daa
sbb
push
shlb
je
rcll
fisttpll
test
add
push
sbb
and
or
es
mov
cld
ds
jo
sub
mov
mov
lcall
mov
pop
pop
and
xor
or
mov
dec
push
pop
dec
pop
or
mov
jo
add
pop
pop
dec
jmp
add
pop
mov
sarb
scas
push
or
sub
add
push
mov
inc
ja
test
data16
inc
inc
into
in
add
aam
or
pushf
cs
push
pushf
lods
ret
nop
pop
sbb
adcb
push
imul
or
push
cmp
jo
and
and
or
int
or
push
pop
fstps
jg
push
lret
loope
xchg
sarl
xor
je
fnstenv
jnp
xor
jg
loop
mov
imul
test
sub
rcll
sbb
pop
sub
adc
in
pop
jbe
rcrl
adc
sub
sbb
inc
sbb
push
push
add
movsb
ss
stos
mov
js
or
adc
mov
sbb
test
sbb
popa
or
sub
inc
pusha
ss
inc
xchg
xchg
pusha
mov
xchg
and
or
enter
pop
and
cwtl
add
pop
adc
or
sbb
or
push
imul
and
mov
pop
or
je
rorl
xchg
jo
out
or
jo
jo
movb
mov
xchg
out
push
mov
cmp
pop
ds
or
jg
imul
js
jle
dec
xorb
nop
mov
shlb
jl
sub
push
add
and
jg
xor
xor
xor
inc
cwtl
es
cmp
dec
dec
dec
dec
dec
xchg
sbb
mov
push
push
pop
pop
pop
push
mov
mov
roll
xlat
add
add
lret
add
addb
or
sbb
sbb
adc
xor
movsl
das
sbb
mov
and
xchg
sarb
and
xor
test
test
jne
xchg
testb
repnz
add
pop
es
xchg
add
adc
mov
inc
jl
dec
sub
loopne
and
add
xchg
call
xor
push
sbb
cmp
jb
adc
xchg
pop
mov
incb
clc
sub
int
nop
push
push
push
dec
fdivl
jb
lods
add
inc
push
inc
jge
rcl
mov
ret
sub
dec
or
sarb
mov
pop
cli
push
sbb
test
mov
add
scas
cmp
xor
pop
cltd
cmp
xor
jl
or
add
sub
cmp
fidivl
and
pop
jmp
inc
inc
xchg
lea
dec
pusha
sub
sub
or
outsl
xchg
orb
and
mov
jnp
jmp
xor
mov
nop
inc
or
add
or
sbb
ds
inc
or
jb
hlt
cmp
lcall
pop
xchg
sbbb
cmc
lock
adc
sbb
mov
and
data16
jns
lea
jg
adc
pop
imul
pop
lods
sti
xchg
icebp
push
jg
pop
sahf
pop
movsl
or
leave
mov
repz
push
test
add
mov
icebp
jg
jg
and
cli
jl
push
and
test
rcr
loopne
orl
ret
cmpsl
xor
int
stos
xor
clc
sub
cmp
gs
loop
pmulhuw
mov
imul
out
or
adc
sbb
mov
or
call
jne
cmc
mov
pusha
xor
dec
jl
mov
aaa
outsb
insl
subb
pop
push
mov
daa
adc
jle
shll
add
mov
adc
cwtl
jmp
cmp
adc
mov
dec
mov
scas
adc
fs
test
inc
pushl
int
mov
xor
fdivs
mov
icebp
mov
and
jne
arpl
push
pop
jb
imul
bound
popf
imul
test
js
add
or
inc
ret
pop
pusha
ljmp
sbb
or
incl
xor
insb
adc
cmp
inc
push
lock
jne
jle
aaa
cmp
adc
addl
cmp
enter
imull
ljmp
in
test
dec
aaa
add
pop
rcrl
push
shlb
xchg
pushl
cmp
fists
mov
cmp
jg
dec
or
adc
test
inc
mov
push
insb
dec
or
std
sbb
shrl
pop
push
cmp
adc
sbb
and
mov
xor
dec
or
pop
mov
fs
xor
push
xorl
xchg
jmp
or
aad
fcomp
fldl
iret
inc
cmp
xor
and
pop
aas
add
jb
sbb
inc
push
repnz
and
popl
jl
insl
loope
fadd
cmpb
dec
sahf
out
cmpsb
insb
push
in
add
ret
and
sbb
adc
push
cmpsb
push
xor
lods
inc
pushf
jae
mov
addb
andb
lds
aaa
sub
je
add
addr16
and
adc
and
inc
sbb
push
cmp
stos
pusha
and
mov
dec
pop
jg
insl
add
and
aas
in
mov
jl
sarb
fidivrl
jo
pop
aas
iret
shll
cmp
push
inc
outsb
fstpt
cmp
pusha
inc
cmp
xchg
fadds
nop
mov
fnsave
dec
mov
jp
out
or
fwait
adc
or
in
loope
addb
out
inc
add
cmp
cmp
aas
test
pop
mov
movsl
add
inc
inc
sub
sbb
movsb
cli
push
push
sbb
lods
inc
mov
rclb
mov
je
loop
sub
jmp
push
jmp
and
test
jle
or
fwait
inc
fdivrl
rcll
int
adc
pop
sub
js
inc
push
add
adc
adc
and
in
ljmp
shl
push
loope
rol
sub
subb
movsb
mov
arpl
sbb
dec
loope
xor
imul
or
lock
pop
adc
dec
adc
adc
pusha
and
rorb
jnp
js
add
ret
and
outsb
sbb
out
loopne
test
lock
frstor
ret
test
in
hlt
xchg
aam
sbb
data16
loop
or
pop
adc
add
add
mov
sub
or
inc
dec
inc
mov
adc
push
xor
inc
dec
dec
or
adc
inc
das
loop
insl
cmp
mov
push
das
test
fidivl
popf
xorl
jne
or
cmpsl
cmpsl
inc
or
xor
add
bound
test
lret
outsl
lahf
call
lea
or
cs
testl
data16
rcll
pop
jle
inc
cmp
outsw
in
sub
xor
or
and
push
bound
sbb
loope
pop
inc
or
pushf
mov
add
jo
dec
xchg
sbb
jae
push
into
add
std
or
cld
subl
mov
mov
ljmp
mulb
in
push
or
push
in
jmp
and
push
aaa
sub
test
out
sbb
push
dec
adc
mov
fildll
fisttps
orb
test
push
sbb
arpl
jecxz
mov
jo
sub
pop
pusha
unpcklps
sti
fmuls
jnp
push
nop
adc
pop
fwait
and
push
or
push
mul
inc
inc
mov
popa
adc
and
add
pop
add
inc
xchg
sub
outsl
pusha
adc
shlb
stc
lods
pop
xchg
pop
rclb
mov
inc
ljmp
cmp
je
xor
fs
insb
insb
std
cltd
dec
mov
sbb
mov
popa
add
push
sub
mulb
cmp
sbb
mov
adc
inc
mov
and
pop
dec
inc
mov
mov
or
adc
in
mov
add
inc
icebp
xchg
insb
out
pop
and
sbb
xor
adc
xchg
xor
mov
decb
inc
shrb
insb
loope
sub
jg
inc
sti
xor
dec
movsb
xor
jo
pop
pusha
adc
iret
jne
add
cmpsb
inc
jns
xor
add
push
jle
sbb
lds
pop
pop
mov
xor
inc
aaa
iret
xorb
inc
cmp
clc
iret
mov
cmp
jae
mov
in
fidivrs
cmp
xor
sbb
lods
pop
xchg
inc
dec
mov
add
cmp
pop
sbb
je
mov
cmp
push
or
or
and
out
push
or
xor
xchg
data16
add
inc
push
push
add
dec
mov
ljmp
inc
sub
push
and
shlb
mov
xchg
and
cwtl
loope,pn
or
mov
stos
mov
add
in
sub
and
add
xor
sbb
mov
enter
add
cld
pop
fists
rcrl
add
ljmp
cmp
jne
outsb
mov
mov
lahf
adc
movsl
addl
ds
mov
pop
xor
shlb
ret
jmp
jle
xchg
movsb
adc
mov
int
mov
les
xchg
or
xor
sbbb
adc
push
pop
bound
lret
fldl
mov
jno
pop
addps
dec
mov
mov
lock
mov
sub
or
ds
mov
and
repz
mov
cmp
aam
sbb
in
add
lcall
sbbl
push
sarb
push
xchg
add
push
pop
sbb
stos
cmp
inc
xchg
xorl
and
xor
xchg
pop
std
xor
mov
adcl
sahf
cmpsb
jecxz
fisttpl
add
add
nop
imul
pop
mov
add
inc
pop
mov
push
pushf
jb
push
or
jns
sbb
lock
jno
jg
and
in
mov
cltd
push
mov
sbb
jl
rcrb
xor
adc
movsb
xor
adcb
pop
and
rorb
add
mov
push
jb
inc
jecxz,pn
and
nop
push
add
xchg
adc
addl
push
cmp
xor
xorb
je
and
movsl
or
and
inc
sahf
add
adc
loop
inc
jbe
sub
xor
or
sbb
xlat
or
cmp
clc
mov
inc
inc
xor
jl
mov
sbb
jge
mov
mov
lea
or
xor
add
test
or
or
test
xchg
in
adc
add
out
add
add
or
cmp
sarb
dec
or
loopne
cmp
movsb
add
push
ss
js
lea
pop
int
fistpll
cmpl
mov
xchg
movsl
aam
cmp
int
pop
cmpsb
add
xor
jle
pop
mov
add
push
inc
call
pop
arpl
sub
in
mov
out
or
loopne
pop
inc
out
pop
jo
mov
loop
mov
rcrb
or
repz
popa
inc
pop
or
leave
push
lock
lea
idivb
sti
or
mov
sub
and
adc
sub
mov
add
test
loopne
cmpsl
inc
iret
push
shlb
and
sub
pusha
or
iret
insb
pop
js
adc
push
jecxz
jo
inc
test
pop
sbb
cmp
inc
jle
aam
adc
push
into
jg
xor
push
out
movsl
inc
push
dec
mov
dec
push
jl
pop
or
lods
sub
push
pop
insl
das
mov
sbb
and
jnp
imul
or
adc
xor
add
outsb
cmpsb
int
inc
inc
push
stos
push
pop
dec
loopne
sbb
fstpt
sub
jnp
dec
xor
stc
shll
add
dec
aad
adc
in
sub
cmp
movsl
pop
inc
xchg
mov
test
outsl
inc
mov
adc
push
mov
xor
cltd
pavgb
sbbl
cmp
ja
inc
jmp
cltd
sub
sub
jge
sbb
jle
sub
jb
add
aaa
out
andl
dec
lcall
call
aaa
je
movsb
dec
dec
jl
or
jl
sub
xlat
int
lahf
ds
stc
adc
push
sbb
push
mov
xchg
pusha
sbb
jp
push
es
mov
dec
scas
pop
mov
dec
negl
sub
xor
dec
jne
mov
lds
outsl
mov
lret
push
outsb
cmp
or
mov
mov
and
and
mov
dec
pop
push
cmpsb
or
mulb
insb
pop
or
push
cmp
enter
or
aas
add
orl
pop
inc
mov
lea
push
jg
inc
clc
or
enter
sub
jge
gs
sbb
xchg
adc
je
js
xadd
or
imul
mov
pop
push
dec
mov
pop
inc
pusha
add
stos
das
inc
and
add
pop
xor
loop
mov
orl
push
and
xchg
or
out
fsubs
xchg
imul
add
andb
sub
or
add
inc
and
daa
test
clc
por
call
pop
fadds
jp
dec
pop
add
sti
dec
jle
in
or
syscall
jb
xor
pop
cmp
ret
inc
pusha
inc
ds
into
inc
mov
mov
movsb
and
cmp
andl
lea
cmp
sub
or
push
bound
wbinvd
mov
adc
push
inc
dec
and
dec
mov
fcomps
hlt
fdivrl
xchg
in
popa
das
mov
jne
inc
daa
sbb
sub
lock
mov
sbb
mov
cltd
pop
inc
cmp
sub
adc
lods
adc
test
push
xor
jae
jo
add
or
add
mov
enter
mov
mov
add
sub
jl
jle
sti
add
loope
sub
xchg
push
sub
xor
push
xchg
sbb
or
shlb
sub
lods
mov
xchg
adc
ret
icebp
jns
mov
cmp
mov
mov
dec
mov
mov
imul
rcrl
mov
in
and
test
fmuls
fsubr
and
sub
imul
xor
jge
pop
push
push
inc
adc
push
dec
das
sub
fcoms
xor
xorl
cmp
pop
lods
sub
notl
ror
fidivrl
stos
lock
or
rcll
push
or
and
jno
sub
gs
mov
inc
push
sub
pop
repnz
fsubrs
rcl
inc
aad
rcrb
out
dec
lret
push
adc
out
scas
dec
in
and
add
or
dec
cmc
fsubrs
push
and
mov
das
sub
pop
add
scas
xor
imul
mov
mov
test
dec
insl
into
fsubrl
mov
or
mov
mov
xchg
xor
cmc
imul
mov
or
pop
jnp
xchg
subl
jmp
aas
pop
xchg
sti
mov
rorl
or
addb
jo
pop
sbb
mov
pcmpeqb
push
je
lcall
jno
or
sub
dec
or
dec
loopne
sub
stos
add
pop
push
mov
test
push
test
gs
push
push
jb
andb
lock
in
test
push
jne
adc
daa
pcmpeqd
clc
mov
mov
add
clc
pop
adc
push
sbb
inc
xchg
dec
test
adc
or
adc
pusha
test
and
lea
sbb
mov
pop
or
lret
cld
hlt
arpl
bound
stos
xor
cmp
inc
addr16
nop
or
cmp
xchg
mov
xor
sti
je
loope
addr16
or
add
ret
es
out
out
mov
sbb
clc
jmp
adc
daa
push
jne
inc
push
sbb
sbb
mov
or
cmp
push
adc
sbb
sub
clc
dec
loopne
push
and
shll
and
dec
adc
xor
xchg
sub
int3
call
adc
test
fmuls
repnz
add
xchg
orb
push
inc
xchg
dec
and
nop
dec
xor
add
sub
movsl
sub
xor
in
adc
jmp
push
enter
sbb
push
jns
dec
clc
and
or
decl
jno
enter
adcl
das
and
sbb
jns
pop
add
lock
sbbl
in
and
sarl
push
sub
scas
mov
das
insl
push
loope
lods
inc
jbe
add
or
xchg
pop
ja
mov
add
mov
and
xor
jg
adc
loopne
or
sbb
popf
lret
stos
cmp
lcall
stos
loop
sbb
mov
cmpb
inc
xor
es
sbb
add
in
pop
fisubl
fisubl
mov
jae
xchg
inc
jge
insl
jle
enter
and
cmpsb
dec
sbb
pop
jle
or
rcrb
in
call
push
pusha
push
int
fwait
sbb
add
fbstp
add
fcomps
push
lahf
add
test
mov
sbb
sbbl
shll
pop
and
shll
orl
push
cmp
shrb
repz
pop
jmp
aas
adc
jo
lret
pop
adc
call
pusha
fcoms
and
cli
pop
pop
ret
incb
rolb
or
sbb
in
pop
dec
adcb
movl
imul
dec
and
sbb
cmpsl
clc
mov
and
cmp
and
pop
dec
imul
fwait
adc
mov
adc
jae
rsm
xor
aaa
loopne
scas
cmp
push
loopne
jle
sbb
divb
cmp
lock
and
es
neg
inc
mov
lcall
or
push
lock
mov
roll
or
or
cld
test
pop
hlt
enter
xchg
loopne
fsubs
movsb
and
adc
in
jecxz
add
sti
push
rcrl
loopne
fistps
inc
add
lods
inc
pop
push
or
or
mov
mov
add
daa
push
imul
adc
push
fs
bound
jg
or
add
add
dec
leave
dec
punpcklwd
pop
leave
fcomp
xlat
xor
adc
ficompl
mov
pusha
pop
cltd
hlt
or
pusha
mov
push
inc
in
shrb
add
nop
sbb
es
test
jg
xlat
pushf
mov
push
and
push
add
js
dec
jo
addr16
pop
int3
add
loop
jg
push
enter
mov
in
xchg
mov
movsb
fwait
adc
faddl
add
xchg
add
movsl
les
stc
lret
in
ret
fcompl
xchg
add
in
add
rolb
movb
pop
mov
sub
sub
push
adc
mov
mov
es
call
xorl
movsb
pop
lret
andb
daa
test
push
push
pop
jae
xor
adc
xchg
stos
jno
lods
out
lret
das
pop
jg
or
roll
sub
or
or
cmp
dec
ja
jo
add
cmp
push
gs
sbb
mov
inc
push
xor
jle
addl
pop
or
out
loope
loopne
in
ret
test
sbb
rorl
je
mov
sub
mov
mov
xor
sbb
push
adc
mov
inc
scas
test
sub
outsb
pop
mov
aaa
int3
xchg
sahf
mov
hlt
enter
pop
nop
or
subb
push
sldt
and
rcrl
fildl
mov
imul
js
and
add
xchg
sahf
and
push
dec
inc
dec
movsb
add
and
xor
lea
cmp
inc
ret
dec
cmovl
add
inc
or
add
movb
pop
cmp
xchg
imul
pusha
cmp
insb
and
xchg
cmp
mov
je
mov
mov
pushl
add
mov
jbe
pusha
sbb
xchg
sar
inc
push
stos
xor
jns
arpl
cmpb
cmp
mov
scas
xor
mov
or
cmpsl
inc
test
lcall
insb
or
stos
loopne
mov
add
dec
insb
adcb
mov
jge
lahf
out
aas
je
adc
xchg
adc
push
fdivr
mov
push
add
xchg
add
mov
jbe
jmp
cs
hlt
lcall
stc
dec
mov
inc
mov
inc
adc
pop
outsb
test
pusha
mov
outsb
adcb
ds
inc
push
push
or
xor
xchg
rorb
leave
outsb
and
cs
les
sbb
jg
xor
or
addl
jnp
in
xchg
gs
inc
inc
dec
xor
lods
cltd
push
inc
mov
dec
mov
daa
add
into
shlb
xor
out
and
enter
lret
push
je
pop
in
out
pusha
cld
fsubl
dec
pop
cmp
imul
and
cmp
pop
movb
pusha
mov
test
push
and
mov
jle
addb
inc
jg
ret
xor
sbb
push
dec
pop
jl
jp
mov
call
add
aad
roll
jbe
fsubs
cmp
adc
aas
pop
js
push
test
pop
outsb
inc
pushf
mov
sahf
or
stos
das
pop
movl
push
or
and
test
insb
mov
push
push
jo
push
pop
add
inc
or
in
mov
jmp
jecxz
mov
lahf
or
sub
gs
sahf
cli
inc
dec
push
outsl
xor
xchg
mov
jo
jne
xor
cs
mov
mov
mov
sub
inc
mov
cmp
lock
mov
pop
jmp
mov
adc
push
adc
xor
add
popf
push
arpl
test
adc
cs
add
shl
lods
enter
lret
sub
into
adc
jmp
pushl
lock
push
call
addr16
or
pop
xor
mov
mov
js
adc
xchg
jg
mov
jge
stos
and
adc
sbb
ret
sub
rcr
addr16
or
int3
out
outsb
orb
dec
xchg
loope
fsubr
inc
dec
adc
popf
push
pop
sbbl
sahf
pop
btr
push
bound
addl
adc
call
cmp
test
mov
or
je
sarl
out
pusha
imul
xchg
inc
dec
push
or
adc
jg
test
lods
mov
sbb
test
mov
mov
or
cmp
pop
ljmp
int3
xor
xchg
aaa
enter
inc
pop
or
cmp
icebp
rorb
sbb
lret
mov
xlat
mov
inc
lret
push
cmp
jp
or
jnp
adc
cmp
xor
lahf
or
pop
mov
xor
shlb
mov
lahf
mov
pop
xor
lock
jle
xor
fs
or
jne
mov
pop
mov
sub
push
add
inc
adc
pop
jb
inc
pop
mov
lods
adc
mov
pop
fimull
inc
add
sub
add
mov
mov
fmuls
add
mov
xchg
or
outsb
or
xchg
add
rcll
inc
jne
pop
mov
cmp
or
decb
dec
dec
test
test
stc
aas
and
cs
mov
cmp
cmp
dec
cs
inc
inc
or
loop
and
adc
push
cmp
dec
fucom
rorb
das
in
xlat
adc
out
adc
pop
xor
pop
push
pushl
mov
xor
lds
lret
outsl
lds
cmp
movsl
test
dec
or
dec
sub
push
cmp
pop
outsb
or
cmp
push
push
loope
jns
push
ss
hlt
jl
push
js
into
mov
stc
ds
mov
adc
addb
jno
dec
push
dec
pop
cmp
adc
ds
add
pop
mov
inc
cmpsb
push
push
fisubrs
push
lds
push
jge
enter
inc
adc
mov
and
or
pushf
shrb
frndint
cld
mov
insb
test
dec
ret
andb
adc
sub
in
fnsave
inc
inc
sub
int
inc
sbb
sbb
cs
mov
rolb
lret
inc
jnp
call
stc
enter
push
sbb
add
cmp
jle
push
inc
in
push
xor
mov
and
xchg
adc
dec
decl
ret
inc
dec
jne
mov
inc
cmp
jg
jne
pusha
adc
adc
sub
inc
xor
dec
and
jmp
add
mov
dec
imul
pop
daa
dec
cmp
add
mov
push
or
push
out
lock
sbb
push
sti
int
jmp
pushl
dec
inc
add
adc
fbstp
lock
sbbb
and
out
push
lods
dec
les
add
aas
sub
pop
les
adc
nop
adcl
fidivrl
fistl
inc
test
int3
jne
pop
sbbl
add
rorb
push
std
push
hlt
pop
fimull
loopne
sub
push
mov
add
fs
aam
loopne
cmp
or
mov
es
mov
fsubs
jecxz
das
lea
mov
imul
test
mov
cmpsl
and
push
clc
add
or
in
pop
inc
add
and
pop
fsubr
sbb
dec
xor
push
stos
inc
cmp
pop
push
cmp
pop
mov
bound
xor
les
mov
pop
push
inc
int
out
xlat
aam
mov
add
add
adc
imul
push
push
aam
add
cmc
ss
push
lahf
loopne
push
add
mov
push
pop
repnz
mov
inc
sbb
or
mov
ss
sbb
sarl
or
dec
fwait
shlb
mov
decl
in
outsb
insl
dec
loop
cmp
jmp
push
xor
inc
aas
mov
add
jns
in
xor
mov
lret
sub
inc
fildl
pop
test
sub
pop
pushf
cmp
adc
or
push
mov
test
jns
mov
pop
insl
xor
xor
aam
and
cmpsb
rcrl
push
arpl
cld
mov
xor
lds
jno
add
enter
add
jg
outsb
lret
popl
push
push
mov
inc
enterw
imul
call
push
mov
sub
lods
push
and
les
jae
fcoml
jmp
pop
mov
mov
inc
loopne
lods
lret
push
aam
sbb
mov
cmp
sbb
inc
pop
mov
jbe
sbb
pop
lods
ficompl
stc
aam
add
push
cmp
add
mov
les
test
punpckhdq
shrb
test
xchg
inc
mov
add
pop
add
sbb
lea
fldl
in
mov
ja
xor
aas
inc
xchg
fdivp
sarl
cmp
je
push
inc
movb
mull
add
push
mov
mov
push
pop
mov
aad
push
cmpb
movb
dec
add
xor
daa
add
dec
mov
add
dec
pop
mov
sub
mov
jg
dec
and
dec
mov
and
sub
movsl
idivb
cmp
test
dec
push
lods
and
sbb
mov
mov
adc
or
clc
pop
packssdw
or
and
add
les
xchg
cmp
mov
inc
je
add
inc
inc
mov
adc
movsb
adc
call
fadds
mov
loopne
loopne
adc
adc
enter
ret
nop
pop
xor
adc
rolb
cmp
push
adc
out
lea
xlat
and
imul
adc
inc
stc
daa
pop
push
outsb
fadd
cmp
dec
mov
sahf
pop
sub
xchg
push
push
jno
xor
xor
daa
mov
pop
jge
dec
es
test
lret
sub
sub
jae
loop
lock
mov
push
pusha
call
lret
xchg
or
pop
stos
out
xor
repnz
or
jecxz
iret
push
aam
nop
jmp
inc
push
fists
pop
add
jmp
or
mov
cmp
pop
out
pusha
cwtl
imul
or
scas
push
sub
popa
outsb
or
lcall
call
push
orl
movsl
sub
xchg
or
into
js
aam
add
or
out
mov
adcb
ja
cmpxchg
stc
dec
fimull
mov
add
mov
bound
mov
sbb
mov
or
adc
push
push
adc
add
fiadds
enter
loopne
inc
into
aas
cmp
es
cmp
aaa
movsb
out
add
adc
push
les
adc
pop
cmp
mov
add
inc
jmp
icebp
cld
sub
addr16
ret
popa
or
add
xchg
xchg
push
cmpsl
loopne
sbb
xchg
add
mov
adc
jno
ljmp
aas
mov
mov
jno
push
out
in
dec
lea
inc
rclb
adc
lret
dec
push
sarb
aaa
pop
ss
call
mov
xor
pop
popf
in
lret
push
jl
clc
mov
call
pop
inc
dec
sub
xor
add
pop
dec
pop
sete
in
push
test
or
outsb
push
inc
mov
dec
loopne
bound
repz
pop
xlat
xor
push
pop
and
add
sub
nop
or
xor
adc
pop
push
mov
and
jae
ja
incb
and
mov
filds
jae
jb
jo
popf
loopne
mov
gs
cmc
pop
dec
outsb
jge
push
js
cs
in
adc
mov
je
shlb
lret
jmp
jno
sub
pop
jmp
add
in
push
push
lock
ss
popf
add
push
outsb
adc
or
je
pop
xchg
clc
pop
xor
adc
nop
adc
xor
pop
hlt
pop
inc
dec
cmpsb
scas
repnz
sarl
push
mov
js
add
add
pop
mov
inc
add
or
push
adc
pushf
add
jbe
add
dec
inc
ja
or
dec
push
outsb
shl
dec
je
cli
mov
push
cli
in
dec
test
setp
imul
jne
incl
fs
jge
insb
insb
add
jecxz
xchg
and
xor
in
mov
add
cs
jp
addr16
sub
inc
mov
add
dec
sbb
push
mov
js
add
pop
mov
pop
jne
inc
iret
xor
add
add
aam
pusha
push
in
add
dec
xor
leave
fisttpl
push
in
mov
push
hlt
dec
push
mov
push
in
ss
push
iret
jae
sub
cli
bound
enter
int
push
add
xchg
arpl
sbb
inc
addr16
dec
jecxz
sbb
repz
js
or
xor
popa
fistl
push
cwtl
mov
aad
inc
xor
int3
xor
ret
lds
adc
xor
ret
pop
jbe
adc
push
mov
cmp
lcall
push
dec
mov
push
pop
mov
jb
mul
push
or
xor
mov
inc
ss
je
xor
dec
rcr
mov
lcall
ret
jnp
les
push
nop
or
add
add
mov
mov
cmpsl
fisttpll
sbb
imul
imul
imul
ret
mov
xor
flds
mov
inc
push
js
adc
lahf
rorb
add
movb
inc
push
add
inc
inc
xchg
cmpsb
pop
dec
add
or
inc
int
push
stos
cmp
fidivl
push
movsl
movsl
mov
jecxz
mov
or
adc
inc
mov
test
ss
shrl
or
cmp
cmp
jge
lock
cmp
xchg
jge
mov
bound
mov
sarb
andl
ret
pop
cmc
test
fbstp
push
and
pop
js
dec
ljmp
push
in
inc
mov
mov
cmp
notb
insb
mov
outsb
push
jmp
push
adc
test
push
inc
xor
out
out
lock
cmc
mov
mov
loop
mov
jnp
loop
jle
jle
jmp
addr16
lock
xchg
mov
xchg
sub
pop
mov
push
inc
or
xor
shrd
outsb
pop
sbb
adc
jo
rclb
push
pop
push
dec
pop
pmaxub
pop
push
add
push
dec
mov
nop
inc
cs
add
inc
mov
inc
dec
jno
and
add
and
rorl
ja
push
rorb
pop
and
push
jp
shrl
or
std
mov
ret
sbb
mov
or
or
mov
xchg
push
test
das
aas
lock
xor
inc
cwtl
and
cmp
push
pop
push
xor
xchg
add
fcompl
mov
xchg
aaa
add
push
movsb
or
and
testl
jp
inc
clc
push
dec
dec
or
clc
jmp
and
rolb
outsl
jge
stos
mov
mov
jg
test
rep
lea
clc
cmp
dec
mov
nop
divl
pop
hlt
xchg
gs
jge
or
pop
hlt
xchg
dec
and
xor
pop
inc
pop
test
nop
in
sbb
rcrb
dec
mov
test
idivl
fdivrl
jp
cwtl
imul
wbinvd
dec
adc
fwait
and
dec
lret
and
or
in
je
sub
dec
shlb
insl
mov
out
aas
add
push
jecxz
fcomps
cld
pop
aam
js
sbb
negl
aaa
movsb
jmp
sbb
and
adc
mov
test
push
popf
mov
sarb
mov
out
cmp
jne
decw
enter
jmp
das
jb
dec
in
imul
adc
xchg
mov
fldl
scas
dec
or
test
pop
xchg
sbb
adc
cmpb
push
in
aaa
in
mov
push
jg
in
add
add
push
loope
xchg
pop
push
rorl
or
push
clc
dec
cltd
scas
lock
inc
cwtl
inc
mov
dec
dec
adc
and
pushf
push
dec
lcall
ds
or
call
mov
adc
enter
stos
test
add
inc
in
push
daa
inc
rclb
dec
js
cmp
sbb
mov
cmpsl
pop
add
mov
inc
mov
sbb
insb
lahf
rcrl
push
xor
movsl
or
jne
push
dec
cmp
xchg
movsb
xor
arpl
push
outsb
inc
cmp
pop
xchg
sbb
pop
andb
cmp
sysret
push
cwtl
call
push
dec
ss
rolb
xchg
loope
cmp
xor
push
mov
xchg
jne
arpl
aam
cmp
pop
sub
cmpsb
lock
xor
jg
push
das
loopne
adc
mov
insl
fsubrl
nop
ss
aaa
and
ss
push
or
dec
fdivrs
dec
or
sbb
scas
js
mov
addl
jg
add
enter
lahf
lcall
adc
push
xor
test
and
les
xchg
call
push
mov
xchg
daa
sub
jge
out
push
inc
jae
sub
sub
je
inc
pop
add
pop
xorb
sbbb
xchg
jnp
jecxz
push
mov
add
pop
enter
stos
mov
mov
imul
ss
imul
lret
loop
testb
neg
xor
add
cmp
rolb
call
push
pop
movsb
xchg
test
adc
cmp
add
xlat
leave
cwtl
stos
inc
push
repz
ret
aam
jmp
jmp
cwtl
jmp
pop
sub
rcrb
push
sbb
cltd
lret
dec
adc
and
movsb
cmp
mov
sarb
call
cmp
cs
shl
and
or
adc
pop
pop
xor
inc
in
setle
push
mov
jge
dec
pop
cmc
iret
pop
dec
add
xor
xor
push
sub
mov
sub
testb
mov
sub
test
lock
imul
or
repnz
fdivrl
xor
nop
scas
pusha
imul
xlat
pushf
and
xchg
mov
insb
inc
sbb
cmp
push
movsb
mov
or
shrb
out
push
sub
out
adc
sub
inc
or
cs
push
lea
xchg
lods
outsb
cwtl
jo
mov
or
xorb
test
test
adc
adc
je
mov
cli
inc
pop
add
addl
push
aad
dec
inc
imul
dec
and
movsl
inc
ret
push
push
inc
xchg
sarb
pop
inc
fmuls
jo
std
cmp
cmpl
pusha
cwtl
in
loope
add
sub
lret
push
sub
pushf
addr16
push
dec
test
xor
imul
mov
pop
ja
jne
adc
cli
ja
mov
sbb
jmp
mov
pop
mov
inc
aam
and
inc
or
and
out
ficomps
push
add
dec
cmp
addl
adc
lcall
inc
aaa
add
movl
adc
jmp
mov
xor
or
xor
popa
add
and
cld
or
je
push
cmc
push
add
ret
testl
fidivs
sub
adc
inc
push
lahf
and
mov
cmp
lea
push
jo
ret
adc
stos
movsb
sub
cmp
jns
movsb
inc
loope
call
or
xor
fsub
scas
or
pop
dec
addl
sub
add
idivl
aam
jbe
or
jne
cmp
inc
xor
cmp
add
push
sub
mov
in
gs
mov
add
mov
scas
xor
push
dec
sub
sub
enter
push
dec
pop
lcall
shl
or
fnstenv
jbe
movsl
push
add
and
pop
pop
sbb
xchg
mov
adc
mov
xchg
cmc
ret
orb
inc
cmpsb
lock
jo
cltd
ret
andb
lcall
sbb
stos
adc
cwtl
fs
nop
adc
dec
maxps
jmp
push
enter
ljmp
or
adc
pop
inc
shlb
or
pop
jp
jbe
xlat
mov
sub
and
jmp
into
and
je
add
sbb
pop
jb
test
add
jmp
adc
mov
rolb
mov
xchg
sub
nop
loop
inc
mov
cmp
inc
xor
jno
jl
fcoms
test
sbb
or
dec
push
sub
insl
add
lods
xor
out
cmp
setge
add
movsl
shl
push
jb
mov
sub
xor
movsb
add
addb
pop
push
lret
orb
xlat
dec
bound
test
lahf
sbb
jmp
sbb
pop
inc
jle
ret
cld
xchg
xor
jle
fsubl
lock
arpl
imul
lahf
cmp
jl
mov
fnstsw
adc
nop
les
jne
xchg
jo
inc
cwtl
dec
es
aam
sbb
mov
mov
lret
cmp
lods
mov
mov
dec
and
cwtl
push
sbb
cli
in
clc
jle
sbb
add
jo
rorb
add
xchg
addr16
sbb
dec
orl
push
add
lahf
sahf
mov
out
xor
idivl
hlt
push
inc
lock
mov
repz
call
xor
out
loopne
xchg
mov
mov
fdiv
sahf
cmpsl
stc
test
cmp
iret
jnp
int3
push
sub
jle
les
outsb
rorb
mov
iret
push
pop
dec
inc
mov
or
imul
nop
sub
and
adc
and
xchg
mov
frstor
mov
xchg
test
das
inc
mov
add
pop
add
jge
shl
add
das
jnp
add
mov
or
popa
loopne
add
ret
popa
mov
das
add
xor
and
dec
adc
or
addl
mov
outsl
or
pop
sub
push
sbb
divl
cs
push
movsb
je
jl
jnp
fdivs
les
int3
or
sbb
call
add
pop
and
sbb
sub
jns
add
and
mov
loope
sub
pusha
mov
push
or
fs
cmp
inc
fiadds
cmp
shlb
mov
or
into
lock
repnz
mov
xchg
adc
mov
xor
sub
lea
test
and
jns
mov
cmpsl
or
js
es
or
dec
js,pt
bound
aaa
mov
mov
and
mov
jns
jnp
add
push
cmp
fwait
loopne
call
divb
fiaddl
sub
cmp
inc
roll
adc
dec
dec
dec
jb
lea
sbb
xor
adc
pop
sbb
adc
mov
mov
dec
jl
jl
enter
cs
push
and
mov
movl
orl
inc
cs
adc
test
push
lods
jg
sub
repnz
inc
jle
sub
js
imul
dec
pop
cmp
test
rcll
mov
inc
inc
stos
addr16
sbb
mov
and
inc
pusha
repz
inc
ja
loopne
movl
dec
jno
or
adc
popf
xchg
jo
lock
test
pop
inc
lcall
repnz
or
jbe
addr16
in
lock
jg
or
push
jno
add
xchg
popa
pop
mov
inc
adc
mov
or
clc
push
fcmovnbe
xchg
pop
xchg
dec
or
or
pop
or
fs
insb
pop
adc
or
xchg
jae
xchg
scas
sub
xchg
ja
imul
sub
nop
xor
xor
pop
or
cmpsl
cmp
dec
push
or
stc
sbb
cs
imul
imul
xchg
outsb
add
add
loope
xchg
sub
or
push
lds
mov
outsb
loop
movsl
or
add
pop
in
and
xchg
popa
imul
mov
or
outsb
and
pop
or
cwtl
mov
rolb
pop
andps
pop
imul
add
and
and
adc
xor
clc
push
lcall
push
push
loope
dec
add
xor
rclb
and
adc
xor
jo
or
xor
adc
push
or
js
xchg
je
or
push
or
jmp
adc
mov
jbe
add
lea
xorl
add
lea
adc
call
mov
jns
xchg
dec
xchg
js
nop
cmpsl
pusha
js
xchg
xchg
mov
inc
fldt
out
clc
push
jo
push
or
insb
push
or
xor
sti
push
xchg
movl
in
xchg
xchg
sub
aaa
and
add
cmp
xor
add
cmp
cmp
add
mov
push
inc
dec
or
adc
xchg
seto
push
sahf
mov
andb
pop
adc
dec
adc
and
sub
mov
out
pop
and
je
xor
add
pop
leave
inc
add
add
mov
or
popa
add
jo
arpl
popa
sub
insl
pop
sbb
pop
mov
sub
das
lods
fdivs
or
lods
out
movups
inc
iret
sub
dec
int
xor
lock
adc
orl
and
test
jmp
nop
lods
pop
jbe
enter
lods
or
mov
add
ja
push
stc
aas
mov
add
ja
adc
xchg
jno
push
add
or
mov
sub
ja
nop
ret
roll
or
test
or
rolb
or
outsb
loope
nop
ret
pop
adc
popf
mov
inc
add
fmuls
xorb
adc
or
fwait
cmp
and
or
pop
call
into
orb
add
or
enter
inc
je
push
leave
mov
inc
stos
xchg
push
dec
leave
pop
push
push
xor
sbb
inc
fwait
iret
out
mov
cmpsb
mov
not
pop
inc
or
mov
movsl
fwait
jbe
mov
gs
mov
mov
add
pushf
insl
mov
inc
pushf
psrlw
add
jbe
adcl
dec
mov
rcrb
jnp
fisttps
insb
jne
inc
test
or
cli
test
push
call
jbe
fsubrs
mov
jo
test
push
cmp
dec
shll
ror
xchg
je
mov
fists
xchg
cmpl
or
fstp
inc
sub
dec
and
pop
sbb
sub
sahf
addr16
add
flds
or
add
lret
add
push
adc
pusha
xor
std
in
pusha
sub
push
movhps
push
sbbb
mov
mov
insb
add
jmp
in
loope
lahf
scas
pop
addb
mov
mov
mov
mov
add
mov
xor
sahf
dec
jl
add
inc
enter
cmp
inc
test
xor
inc
inc
xchg
or
inc
push
outsb
mov
mov
mov
add
push
sub
inc
add
add
add
add
mov
testb
xor
mov
mov
test
decl
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jg
mov
fdivr
fidivrl
call
das
mov
call
call
call
call
call
dec
mov
dec
jmp
dec
dec
lret
leave
dec
out
imul
in
repz
in
pushf
push
rcrb
push
js
pop
repz
imul
sub
mov
pushw
movsb
mov
insb
insb
sub
pop
cld
push
in
or
adc
test
shlb
or
jnp
push
pop
and
es
push
sbb
dec
loopne
in
add
lods
stc
pop
add
repz
aam
push
loopne
add
push
sub
je
and
imul
pushf
in
hlt
cld
je
cwtl
push
mov
add
cmpsb
lock
mov
mov
in
js
push
push
lock
mov
push
sbb
ljmp
lcall
sbb
push
cmp
dec
add
mov
nop
jg
sbb
add
loopne
mov
clc
push
rorb
sbb
or
mov
cmp
jb
add
push
mov
pushf
and
lea
adc
jo
adc
dec
adc
sub
add
in
or
push
and
enter
ljmp
lods
incl
loopne
inc
rol
gs
or
movsb
loopne
pop
jo
pop
orl
and
mov
mov
or
or
mov
mov
jp
dec
shrb
push
mov
jnp
xor
cmp
js
scas
xor
movsb
mov
iret
sub
mov
xchg
sub
mov
clc
adc
push
and
sub
fs
push
pop
sbb
xchg
adc
dec
loopne
insb
xchg
call
pop
adc
or
add
outsb
or
sub
adc
clc
aas
jmp
add
andb
mov
cmp
pop
orl
hlt
inc
adc
gs
add
faddl
push
movb
inc
cmp
in
mov
push
insb
sub
dec
adc
sbb
cmp
sub
pop
adc
loop
mov
pop
push
js
cmp
sbb
pop
pop
xchg
ret
test
and
mov
dec
movsb
pusha
in
or
mov
test
iret
xor
add
stos
pop
stos
inc
dec
and
xchg
xchg
stc
sub
inc
dec
cmp
xchg
xchg
ficoml
mov
movsb
push
mov
rorb
adc
dec
push
add
sbb
adc
adc
add
mov
inc
push
add
add
scas
mov
filds
add
add
sub
mov
mov
push
lock
jp
adc
sbb
sbb
xor
add
mov
mov
sub
pop
push
or
adc
mov
dec
mov
mov
mov
mov
mov
call
or
and
mov
mov
mov
add
push
loope
lock
mov
xor
cmp
mov
add
pop
nop
pop
dec
in
decl
ret
fmull
add
sbb
std
mov
test
push
mov
stc
mov
mov
mov
mov
mov
mov
push
test
and
pop
dec
push
mov
jl
dec
xor
js
xor
out
rclb
je
enter
stc
add
les
mov
lahf
repz
dec
pop
hlt
adc
dec
sti
sahf
ja
push
push
push
int3
call
push
xor
pop
mov
out
hlt
iret
repz
push
add
sbb
push
cmp
iret
repz
jp
pop
lods
ror
repz
pop
fiadds
mov
out
dec
fcompl
or
jnp
push
push
test
in
dec
jnp
out
hlt
cld
cmp
popa
push
jo
in
jge
ds
mov
push
insb
xor
pushw
push
jns
cmp
shlb
cmp
imul
push
mov
out
imul
push
rolb
and
test
inc
outsb
jbe
cmpsb
jl
imul
shl
sbb
push
push
or
add
jnp
int
ds
loopne
and
data16
lahf
data16
insb
adc
or
outsb
scas
pop
and
lock
push
enter
dec
pop
fistpll
pop
push
fs
xchg
add
push
pop
ret
mov
jg
or
bound
das
rcrb
sub
stc
iret
pop
sub
scas
push
xchg
inc
in
stos
inc
mulb
cmp
lods
enter
adc
mov
andb
sbb
outsl
xchg
lods
mov
xlat
mov
push
jmp
jo
xchg
nop
pop
pop
sub
popl
bound
xchg
pop
ds
push
pushw
pusha
mov
dec
adc
adc
daa
and
inc
push
addb
test
lcall
sbb
jnp
iret
adc
in
lret
orl
jnp
and
pop
and
icebp
loopne
mul
loop
mov
mov
rolb
jo
dec
pop
jg
pop
mov
or
enter
in
clc
paddb
add
sub
or
or
insb
sbb
dec
enter
and
cmp
fwait
or
les
jl
adc
cmpsl
stc
mov
push
test
scas
std
jns
out
add
daa
xor
jecxz
lahf
out
pop
push
ja
mov
js
pushf
shl
pop
xor
mov
add
cmpb
jl,pt
int
shrb
mov
fisubl
and
push
in
mov
mov
lahf
es
jl
movsb
push
adc
push
pop
fidivrs
push
cmpsl
es
xchg
pop
mov
push
inc
das
push
in
adc
add
sub
aas
xor
adc
or
int
adc
jmp
mov
orb
ret
movl
rol
hlt
gs
mov
iret
mov
add
mov
mov
xor
dec
xor
daa
ljmp
hlt
and
pop
sbb
fs
or
push
cli
es
dec
vmread
adc
inc
mov
push
push
jb
dec
inc
mov
jl
movl
and
xchg
das
xchg
jb
gs
push
push
cmc
pusha
shrl
jmp
cmp
adc
jo
imul
mov
ja
fists
jno
xor
jne
xor
dec
insb
pop
jl
xor
inc
cmp
adc
inc
mov
call
sbb
mov
add
or
sbb
leave
bound
jo
arpl
into
inc
jle
iret
sbb
jns
iret
adc
push
push
adc
rolb
mov
nop
mov
inc
xchg
mov
pop
mov
ja
popa
add
inc
add
loope
pop
or
nop
xor
push
dec
in
xchg
daa
push
xchg
mov
inc
push
inc
fcmovnb
or
daa
push
jo
daa
add
dec
push
inc
insb
popa
lsl
add
push
adcb
outsl
rclb
imul
adc
inc
shlb
out
mov
dec
push
popa
push
movl
push
mov
push
jmp
das
cmp
pop
add
pusha
int
mov
push
pop
fcomi
dec
outsl
daa
adc
movsb
addb
nop
pop
mov
xor
or
addb
inc
lret
dec
add
icebp
or
mov
sub
lea
bound
test
arpl
cmp
inc
push
cmovo
arpl
and
dec
jecxz
cmp
jae
dec
or
pop
dec
inc
iret
call
add
sbb
pop
add
fwait
adc
pop
add
pop
mov
xor
mov
lahf
add
cmpsb
mov
xor
pop
mov
mov
add
pushl
pop
ds
add
test
pushf
mov
jbe
or
test
jg
into
adc
arpl
inc
subb
mov
cmc
push
jbe
jl
or
xor
in
loopne
nop
jb
repz
or
mov
mov
xchg
lea
lock
inc
test
add
cmpsb
mov
add
mov
and
ss
mov
pop
inc
mov
lock
sbb
call
fidivs
sub
dec
rcll
roll
ss
pusha
or
cltd
xchg
sbb
xlat
add
jmp
outsl
and
dec
lock
dec
ljmp
jmp
addb
push
cmp
or
in
xchg
jae
testl
nop
push
mov
or
cmp
ret
xorb
out
shll
or
adc
xor
adc
sbb
sbb
xor
shll
sub
xor
pop
dec
shll
xor
scas
push
push
and
rcll
or
pop
filds
cmp
mov
add
je
sub
and
arpl
imul
mov
std
dec
je
and
imul
dec
or
lock
sbb
jge
push
mov
cmp
xchg
mov
jmp
inc
sub
lahf
hlt
adc
add
add
jp
or
addl
add
jne
mov
sub
subl
xor
imul
sbb
adc
fisubs
test
imul
sub
push
pop
aam
lods
xor
jno
aaa
inc
sbb
enter
xchg
shl
hlt
jmp
or
incl
or
nop
pop
xor
mov
cltd
or
cs
loopne
push
pop
les
test
inc
adc
push
and
nop
xor
rolb
jo
xorb
ljmp
imul
lock
add
nop
cmp
pop
xor
js
jge
cmpsl
dec
fisttps
clc
sub
and
rolb
mov
inc
inc
subb
lea
jge
mov
cmpb
pop
sbb
aas
pop
and
cmpsl
test
jbe
aas
jl
aas
push
insb
popa
pop
add
push
dec
sarb
and
or
addr16
mov
shrb
sbb
leave
inc
pop
dec
pusha
cwtl
fs
or
xchg
je
add
mov
push
pop
int
pusha
mov
sbb
jns
xor
dec
lea
imul
dec
sub
dec
sbb
or
pop
sub
sbb
addb
cs
enter
xor
dec
ret
adc
mov
adc
adc
xor
or
jae
push
mov
or
push
shlb
dec
push
sub
cmp
cmpsb
movsl
and
outsl
dec
or
adc
jmp
ss
or
fimuls
mov
xlat
adc
mov
inc
push
and
fimull
fsubs
out
arpl
js
clc
out
subl
aas
and
roll
or
xor
mov
pushl
add
push
enter
xor
testb
or
inc
adc
mov
xor
xor
decl
pop
cmpsl
mov
cmc
xlat
les
popa
std
ss
or
pop
adc
push
sarl
xchg
test
jp,pn
in
mov
pop
xchg
call
jne
shl
addl
dec
in
daa
sub
mov
inc
and
call
add
dec
pop
or
cmp
movsl
in
sub
daa
les
dec
mov
dec
js
push
add
shll
dec
fsincos
sbb
jge
fsubrl
mov
cmp
aam
enter
cmp
lret
ret
adc
xor
pushf
les
fimull
fiadds
daa
rolb
jb
fdivs
mov
in
cmp
je
int3
fiaddl
cmpsb
jbe
sarb
out
loope
inc
frstor
mov
jno
in
fwait
jle
xchg
fcomps
inc
push
div
sbb
lock
pop
call
and
test
mov
cmpb
mov
mov
add
addb
scas
and
adc
push
cmpb
sti
xchg
sbbb
je
add
push
jno
bound
pushf
pop
add
dec
pop
inc
sbb
mov
sbb
idiv
push
mov
in
fadds
ret
dec
lods
inc
adc
add
and
push
adc
and
shlb
in
fs
rclb
sahf
inc
and
or
jo
adc
clc
jl
mov
adc
mov
push
dec
test
inc
js
popa
inc
call
and
mov
inc
jne
and
scas
inc
rcl
and
xor
subb
pop
js
sbb
cmp
imul
or
rclb
je
lea
xor
mov
push
int3
rcr
push
push
sbb
push
cmp
dec
iret
mov
pop
push
xchg
pop
mov
dec
cmp
jne
sbb
call
fucomip
or
loop
cmpsb
ja
sbb
in
push
les
clc
push
jnp
pop
jmp
xor
sbb
shr
out
ja
or
lahf
push
pusha
adc
xor
pop
push
mov
mov
cmp
push
das
jnp
cmp
sub
addl
inc
sub
sub
adc
fcomi
and
mov
mov
shll
popf
adc
dec
das
pop
stc
sahf
inc
std
xorl
rorb
orb
fwait
roll
cwtl
popa
insl
or
dec
adc
dec
jne
xchg
mov
add
inc
std
iretw
add
ds
mov
or
hlt
push
and
cmp
mov
jne
mov
fcomp
popa
test
shrb
add
xchg
mov
push
inc
jo
sbb
sub
mov
inc
xor
push
popa
add
lock
mov
push
loopne
and
push
inc
cmp
jnp
jbe
lcall
movb
xchg
test
mov
push
sbb
add
cmp
dec
jmp
jo
pop
repz
mov
mov
cmpsb
mov
insl
shll
inc
pop
je
pop
rcll
sbb
xchg
cmc
sarl
js
sbb
xchg
mov
or
sbb
mov
mov
and
or
mov
or
testb
icebp
add
mov
cmp
testb
sub
jne
xchg
sbb
xor
adc
adc
ja
jmp
mov
movswl
std
cltd
push
add
sub
jo
sarb
test
cmp
ljmp
push
inc
xchg
cli
out
pop
mov
lods
mov
rcll
pop
hlt
daa
pop
inc
hlt
inc
xchg
fcoms
inc
pop
sub
cmp
imul
and
hlt
sbb
inc
mov
push
test
mov
pop
aad
dec
sub
mov
xor
xor
push
popa
mov
jae
xor
xor
dec
lea
nop
cmp
or
ja
mov
or
sub
popa
imul
inc
or
sbb
push
cmp
jo
or
stc
xorb
adc
mov
ljmp
bound
add
stos
sub
fwait
jmp
jl
test
jl
add
scas
push
add
inc
push
inc
and
and
cltd
push
shl
jns
sub
imul
pop
insl
pop
xor
push
adc
xor
jmp
pop
js
mov
jmp
pop
sub
sub
outsl
inc
cmp
lcall
inc
or
sub
inc
mov
push
xchg
pop
fnstsw
popa
jns
mov
jg
adc
stc
xchg
dec
leave
mov
sbb
in
mov
inc
xchg
inc
fsubr
aad
loopne
loop
mov
andl
jo
iret
and
mull
jb
mov
jecxz
leave
lret
out
jne
lea
mov
and
daa
divb
push
outsl
inc
pop
and
sub
imul
dec
mov
cmp
test
test
jl
roll
shlb
negl
mov
sub
mov
push
inc
dec
add
pop
jno
or
je
push
pop
sbb
mov
mov
xor
shll
mov
or
add
xchg
ljmp
outsl
inc
aas
push
mov
add
sbb
cmc
mov
and
test
xchg
mov
movsb
adc
orb
sbb
js
xor
and
pop
add
sbb
lock
cmc
int3
daa
in
jmp
movb
mov
add
mov
xor
push
pusha
fwait
pop
mov
lcall
jp
mov
inc
je
add
and
dec
repnz
adc
mov
pushf
lret
in
cmpsb
or
jmp
and
jecxz
adc
push
xor
xorb
adc
les
lods
in
clc
mov
adc
imul
je
pop
outsb
xchg
jg
cmp
xor
loope
lea
add
push
adcb
and
sub
sbb
mov
sbb
fisttpll
push
sbb
fmull
cmp
sbb
mov
pusha
loopne
adc
and
pop
xor
mov
dec
decb
repz
clc
pop
daa
sub
inc
push
adc
inc
je
test
les
xchg
ret
jo
xor
in
jbe
cmp
pop
and
mov
or
popa
sbb
pop
sub
mov
push
aaa
jp
ret
and
xchg
dec
out
adc
inc
adc
mov
cld
add
inc
imul
cwtl
ja
adc
and
or
daa
dec
push
jecxz
jp
mov
xor
dec
and
mov
xor
xchg
push
out
add
and
inc
adc
je
stos
call
xchg
mov
pushf
jl
ret
popf
jge
shl
popa
loop
int3
enter
jp
movb
cmp
inc
test
add
sub
add
pop
or
das
push
sub
adc
out
sub
push
or
jle
mov
test
cmpl
add
push
fldcw
nop
sbb
std
notl
aas
jnp
push
pop
add
xor
rorb
add
out
sub
movsb
dec
inc
adc
insb
pop
adc
in
pusha
lahf
dec
lret
cmp
adc
adc
rolb
inc
lods
subl
insl
hlt
imul
or
pushf
sub
iret
push
xorb
nop
outsl
mov
negl
fistpll
xchg
sub
inc
sub
adc
gs
mov
xchg
rcr
add
dec
mov
jle
lea
push
dec
add
and
and
xor
adc
ss
jb
add
adc
aaa
inc
ja
je
daa
jmp
shrl
push
lods
jbe
insb
inc
pop
push
push
pusha
sub
lea
sbb
cmp
fadds
mov
inc
push
adc
or
add
pop
or
hlt
push
add
andl
popa
push
insb
or
imull
pop
fwait
cmpsl
outsb
mov
and
push
shll
or
adc
inc
orl
ss
pop
add
xor
or
ljmp
dec
out
pop
jmp
cmp
je
mov
test
jbe
mov
inc
lret
push
pushf
jge
push
sbb
cmp
push
or
adc
sub
aaa
call
and
cmp
cmp
cmp
xor
or
enter
aas
iret
orl
inc
push
insb
and
mov
cli
les
into
adc
pushf
adc
lods
cltd
add
inc
insb
rclb
out
scas
adc
and
jl
push
cmp
test
pop
cmp
inc
push
pop
mov
sahf
in
in
enter
stc
inc
dec
adc
adc
roll
inc
leave
fsubs
les
add
cwtl
sbb
in
xchg
inc
dec
lds
mov
clc
xchg
pop
addb
pop
and
xor
sub
pop
mov
lret
adc
sub
pop
sbb
mov
push
outsl
sbbb
dec
in
clc
fstp
enter
mov
sbb
es
dec
push
add
outsl
insb
or
paddd
sbb
push
imul
ficompl
push
and
imul
adc
addr16
mov
pop
leave
push
adc
add
adc
es
sbb
push
add
syscall
sbb
lea
inc
pop
jae
in
mov
adc
enter
cmp
shlb
xchg
jne
cmp
xchg
std
push
gs
cmp
pop
popa
pop
or
cmp
aas
test
sarb
aas
mov
or
call
test
mov
test
xor
and
mov
pop
cmp
inc
ja
fs
cmp
adc
dec
ror
cli
push
loopne
rolb
xchg
imul
lret
mov
add
fwait
lea
inc
jo
out
pop
mov
add
pop
pop
pop
sub
into
add
pusha
push
pop
add
jle
inc
adc
pop
pop
inc
and
xor
pop
dec
xchg
push
ds
stos
ret
dec
das
iret
dec
fwait
insl
lods
jg
cmpsb
push
push
sub
jo
inc
dec
nop
rclb
mov
pop
dec
push
das
add
nop
or
gs
mov
mov
int3
int3
pushf
testb
packssdw
or
insb
movsb
sub
sbb
or
out
fs
nop
mov
xchg
cmp
mov
int3
adc
nop
aaa
pop
cmc
xor
scas
ret
adc
movsl
inc
and
or
out
test
and
mov
mov
adc
adc
sbb
dec
aad
es
lock
addb
push
jp
shlb
or
in
xor
push
cmp
xor
fdivp
and
inc
pop
insb
mov
add
ffreep
insl
xlat
xchg
inc
popa
prefetcht2
jo
add
and
insl
iret
int
or
pop
adc
push
dec
xchg
out
sti
cmp
jne
adc
inc
jne
mov
xor
mov
push
adc
mull
or
pop
mov
jno
jae
int3
loopne
popa
or
outsl
js
scas
inc
lea
andl
test
push
xchg
in
test
movsb
fstcw
es
insb
insb
je
inc
dec
pusha
pusha
xchg
iret
pop
or
mov
sbb
cmp
rorb
adc
mov
xchg
add
xlat
sub
mov
pop
movsb
sbb
je
data16
or
inc
dec
js
push
pop
mov
inc
pusha
inc
fcoml
mov
pop
mov
push
xor
fcoml
fs
adc
mov
in
mov
push
cmpsl
dec
mov
mov
shlb
adc
test
push
div
popf
dec
sbb
lods
push
push
or
xor
dec
jb
pop
xor
in
xchg
cmp
pusha
adc
mov
adc
out
xor
insb
jmp
push
inc
push
mov
iret
insb
push
loopne
cmp
cs
xor
xchg
xchg
push
or
mov
cwtl
xchg
add
or
adc
cmp
adc
push
mov
rolb
std
sub
ret
jne
xor
popf
mov
addb
imul
dec
dec
inc
mov
loopne
xor
mov
cmp
adc
and
xchg
xchg
pop
dec
lock
inc
sub
push
pop
mov
add
or
push
mov
les
mov
mov
push
jl
adc
cmp
adc
dec
push
xor
xchg
test
push
sbbb
ja
add
push
mov
cmpsb
xlat
into
cmp
mov
dec
xor
das
dec
leave
and
push
popa
enter
add
mov
add
aaa
ja
ljmp
dec
or
adc
pop
add
je
or
inc
js
add
imul
ret
add
push
inc
shll
add
add
pop
sbbl
ss
adc
popa
push
jle
fisubs
add
pop
xchg
or
mov
fcoms
cmp
jmp
sub
mov
push
push
das
mov
sbb
add
cld
sub
daa
fsubrs
sub
jge
mov
cmpsl
shl
lea
mov
out
and
and
dec
pop
pop
sub
orb
sbb
sub
fbstp
fs
inc
imul
arpl
addr16
leave
arpl
adc
dec
mov
or
sbb
and
and
add
push
and
cmp
cmp
cmpl
and
add
rclb
cmpl
popa
cmpsl
sub
clc
push
mov
pop
loopne
cmp
mov
add
inc
sbb
push
xchg
ss
push
dec
xor
mov
das
fs
les
or
gs
mov
and
add
movsl
ds
fs
adc
aas
push
sub
lock
push
sti
dec
xor
arpl
pop
pop
or
jmp
jmp
stos
cmp
xor
mov
dec
mov
inc
mov
js
mov
insb
movb
cmp
mov
xor
push
mov
popa
or
add
add
fsubrs
add
sbb
dec
or
testb
into
push
mov
adc
mov
sbb
push
bound
mov
inc
jbe
cmp
jo
gs
and
and
dec
stos
fists
icebp
mov
pop
orb
xchg
mov
nop
cld
xchg
mov
sbb
shll
xchg
and
xchg
add
mov
cmp
sbb
add
cmp
lahf
lock
pusha
mov
push
rorl
test
pop
stos
inc
fildl
inc
pop
mov
jge
inc
add
pop
sbb
adc
imul
jbe
add
inc
adc
enter
test
rorl
add
mov
js
dec
sahf
or
stos
xor
pop
sub
or
sub
sbb
cmp
mov
mov
mov
and
cmp
fists
add
ja
mov
ret
add
sbb
jo
enter
jecxz
popa
popa
dec
hlt
cmpsl
cld
mov
sbb
xchg
mov
cwtl
jns
add
cmp
cmp
jge
xchg
and
sti
cmp
sahf
mov
add
mov
repnz
mov
sbb
in
outsb
inc
or
xor
addr16
push
jb
adc
movsb
imul
loop
mov
push
mov
push
add
pop
sub
gs
xchg
mov
cmp
int3
fstl
xchg
fnstsw
nop
or
daa
mov
xor
rclb
loope
or
sub
lock
or
mov
and
mov
pop
cmpsl
xorb
lods
pop
push
cwtl
nop
mov
cmpb
andb
je
inc
or
push
mov
rcrb
outsl
pop
push
pop
les
outsl
or
and
loop
pop
and
loope
sub
pop
adc
and
jmp
dec
out
testb
je
scas
out
pop
push
ret
jno
adc
dec
clc
movsl
or
push
test
jmp
mov
popa
push
or
or
sbb
push
loop
dec
jo
jne
xor
mov
aad
or
popf
ficompl
outsl
test
lea
ret
leave
cmp
cli
add
cmpsb
in
or
mov
dec
popl
fwait
in
das
adcb
add
or
mov
clc
cmp
or
lock
push
sbb
cmpsb
adc
bound
in
insl
add
adc
mov
stc
fstps
mov
insb
cmc
mov
cld
add
push
cmp
test
iret
mov
or
xchg
insl
or
iret
push
push
push
lds
inc
das
add
xor
test
data16
xor
xor
pop
cmp
mov
or
or
inc
loop
outsb
mov
adc
icebp
lea
test
pop
jo
push
int3
mov
nop
in
fistl
pusha
add
test
push
push
inc
add
push
test
push
std
fwait
adc
sti
adc
add
add
js
or
add
movsb
mov
fs
mov
adc
in
lods
sub
pop
je
mov
out
imul
js
pop
aas
or
nop
lea
mov
mov
dec
and
je
mov
fwait
and
sub
dec
sub
add
inc
bound
or
xor
or
aad
enter
mov
mov
pop
repz
inc
pusha
pusha
leave
inc
xchg
and
pop
jl
mov
outsl
setno
fcoms
nop
das
add
and
clc
jae
daa
sbb
push
nop
in
xchg
adc
add
cmp
push
lea
popa
jne
or
push
sbb
dec
frstor
loope
xchg
push
cmp
jno
cmp
push
jmp
fwait
inc
mov
sbb
sub
push
rcl
push
add
or
loopne
dec
in
cmp
add
je
sahf
pop
jg
mov
mov
sbb
rorb
ret
mov
inc
leave
mov
jbe
lock
call
inc
push
jo
icebp
dec
fistpl
adc
rclb
jmp
and
add
jb
sub
sarl
sub
lock
mov
dec
aad
adc
pusha
cmp
adc
xchg
xor
fcompl
xor
shl
fsubrl
in
out
das
adc
mov
fs
inc
jg
inc
and
sbb
addr16
xchg
xchg
mov
rcr
adc
jne
pop
push
pop
sub
adc
dec
cli
sarl
jge
clc
sub
stos
mov
aas
mov
xchg
mov
les
adc
mov
daa
out
push
jg
out
mov
shll
addr16
adc
incb
pop
sub
pop
rcrb
daa
add
add
andl
or
sub
sub
push
adc
ret
fwait
mov
dec
fstps
cmp
or
xor
sub
add
fisttps
sbb
std
jae
inc
popf
xor
and
xor
inc
ljmp
add
inc
and
outsb
clc
dec
shlb
hlt
fbstp
or
test
mov
mov
or
je
mov
sbb
xor
pop
test
jle
ret
and
adc
fwait
mov
out
inc
mov
inc
pusha
pop
cld
add
push
popa
inc
mov
sbb
xchg
pop
ja
or
rclb
xorl
or
test
pusha
mov
aam
adc
test
mov
ss
or
pop
dec
das
and
inc
pop
aam
pop
mov
jb
xchg
xor
adc
xchg
mov
mov
fbstp
push
icebp
scas
rcrb
cmp
stos
pusha
outsb
push
or
pop
stos
xchg
pop
or
cli
mov
dec
iret
in
ret
cmp
adc
jne
daa
lea
js
push
in
lea
loop
cmpsb
aam
sbb
stos
fldl
add
outsl
or
sbb
or
lods
addl
arpl
add
mov
mov
add
movsb
ret
add
add
inc
imul
ret
loop
stc
sbb
jnp
cmpsb
cmpsb
rorl
add
add
loopne
jl
and
ficoml
les
push
ljmp
shr
cmp
add
xchg
or
sub
aaa
or
or
xchg
pop
popa
xchg
adc
mov
xor
arpl
cld
push
fstl
xchg
insb
nop
adc
mov
pop
xchg
aad
dec
sub
inc
adc
loope
or
sub
insb
daa
xor
clc
pop
movsl
clc
lea
cmp
and
ffree
adc
mov
add
mov
sbb
xchg
clc
dec
inc
or
fbld
pop
or
push
outsb
push
mov
call
mov
xor
pop
enter
out
repnz
rcll
inc
adc
cli
cld
pop
jb
cs
repnz
sub
movsl
jl
lock
int3
push
mov
insb
or
add
orl
pop
jle
adc
movl
out
shl
pusha
mov
pextrw
sbb
mulb
repz
mov
inc
xchg
inc
xor
push
jne
add
cmp
inc
adc
sub
mov
out
cs
loop
out
lods
pop
adc
fdivs
in
inc
cmp
loope
jmp
pop
fcoms
clc
js
mov
add
es
shlb
add
les
sub
add
or
and
enter
sub
inc
mov
add
jb
push
push
push
loopne
popf
or
push
xor
es
es
dec
orl
add
xor
pusha
push
lcall
pop
sahf
inc
dec
mov
push
xchg
enter
sub
lea
jbe
in
testb
dec
loopne
push
sub
cmp
aaa
call
fistps
sub
das
in
or
inc
push
add
mov
inc
add
addl
sub
sarl
adc
mov
pop
lock
push
mov
nop
jge
or
adc
ret
rcrl
fdivs
add
movsb
mov
sbb
push
mov
add
add
jb
je
ret
pop
mov
lock
mov
cmp
adcb
adc
or
pop
orb
std
and
testl
adc
jmp
movsb
jbe
repnz
sbb
cs
fiaddl
xchg
bswap
rcrb
mov
mov
add
or
sub
mov
and
add
inc
shll
loopne
inc
jl
jmp
xchg
push
inc
cmpsb
icebp
sarl
cmpsl
fcompl
mov
ret
notl
inc
or
mov
aas
aas
ret
pop
inc
int3
int3
inc
push
mov
pop
movsl
cs
icebp
into
inc
xchg
clc
lea
cmp
sbb
mov
push
lret
mov
mov
push
adc
mov
or
loopne
movsb
js
mov
cwtl
cld
inc
popa
jb
enter
andl
lret
adc
adc
fdivr
bound
popa
loopne
sbb
push
add
or
bound
push
test
mov
std
mov
test
add
aaa
pop
dec
movsl
jp
call
xor
scas
rorb
cmc
iret
imul
or
cmp
loopne
mov
lahf
jnp
mov
cmp
lds
into
test
mov
add
cli
mov
rcll
add
sbb
or
sbb
outsb
int3
and
mov
push
add
push
add
mov
push
daa
add
mov
pop
test
push
xchg
mov
lcall
sbb
es
sti
cmp
fstl
data16
inc
inc
loopne
adc
mov
mov
jp
pop
cmpsb
test
cmp
mov
or
hlt
sub
lods
pushf
sbb
mov
cmovbe
inc
and
outsl
mov
xor
xor
push
dec
jmp
mov
and
lret
adc
pop
dec
aaa
lahf
push
push
scas
dec
cmp
mov
ror
inc
test
ja
add
xor
incb
sbb
add
movsl
add
xchg
pop
sbb
mov
dec
lock
je
inc
xchg
add
xor
adc
in
mov
sub
sub
xchg
leave
in
or
or
test
push
fisttpll
jns
pop
dec
or
sbb
sub
add
adc
faddp
adc
or
jge
rcll
out
inc
push
test
push
jmp
clc
sarb
jge
or
sub
jg
imul
sbb
insb
push
add
jg
sub
and
mov
mov
xor
jo
mov
cmpb
jb
fisttpll
sub
or
inc
xchg
push
in
and
mov
mov
ja
daa
pop
add
or
inc
xchg
ret
sub
dec
or
and
dec
mov
call
sub
hlt
and
add
jbe
mov
or
mov
xchg
and
jo
add
push
jb
cmp
adc
ljmp
test
dec
out
xorb
jns
xchg
mov
inc
adcl
addb
or
jnp
adcl
fisttps
or
pop
ds
gs
push
lahf
dec
mov
xor
mov
lock
stos
std
push
std
inc
or
fcmove
pop
sahf
or
fcmovnu
xchg
int
sti
lret
adcl
sub
ds
push
adc
pop
cmp
dec
xorb
ret
mov
test
lret
inc
inc
jl
jo
jge
addl
ret
into
add
push
push
mov
adc
cmp
inc
mov
push
pop
xor
pop
pop
pusha
test
into
out
sub
and
adc
mov
adc
loopne
fs
sub
test
aas
into
pop
fdiv
add
sti
test
call
jle
push
jmp
fisttpll
insb
popf
sbb
aas
xchg
mov
cmp
jne
lea
mov
fistl
xor
js
inc
hlt
and
mulb
fwait
xor
cmp
push
out
dec
addb
push
jo
insb
popa
and
inc
pop
add
sarb
je
dec
dec
add
jmp
adcb
add
sub
mov
loop
adc
or
push
aas
and
outsl
adc
push
sbb
add
and
inc
inc
clc
xchg
es
push
sub
adc
sbb
adc
setbe
mov
insb
pop
aaa
jmp
mov
mov
mov
pop
pop
xor
lods
cmp
xchg
cmp
sub
xchg
pop
dec
jecxz
out
xchg
mov
pusha
ret
mov
add
or
fsubl
cmp
cmp
cmp
sbb
rolb
jne
adc
push
fs
sbbb
push
ja
insb
push
inc
add
test
xor
orl
aas
cmp
cmp
repz
test
sbb
mov
mov
push
push
rcrl
mov
inc
dec
insl
jle
sbb
pop
jb
mov
mov
mov
inc
dec
jne
dec
add
adc
roll
xchg
dec
and
cmp
mov
mov
push
push
pusha
lahf
sub
add
add
add
mov
add
loopne
push
push
addr16
add
js
or
addb
mov
mov
test
xchg
sbb
leave
mov
enter
fistpl
adc
imul
leave
dec
popa
ret
sub
inc
js
arpl
rcr
xchg
or
andb
rclb
pop
jmp
ret
push
out
mov
adc
xchg
adc
xchg
adc
adc
pop
enter
push
xchg
insb
adc
insb
enter
arpl
fwait
in
push
sbb
sbb
sbb
inc
add
or
les
shrb
mov
pop
clc
repz
jle
das
xor
jg
data16
adc
test
jl
pop
ret
cmp
jecxz
lods
sbb
dec
subl
and
or
and
loop
roll
or
adc
inc
fidivl
xchg
jo
test
rolb
loop
mov
push
bound
clc
mov
xor
xor
shrl
cmc
jmp
fsubr
xlat
mull
enter
aaa
mov
fldcw
xlat
jmp
imul
inc
xor
cli
add
outsb
gs
mov
pop
test
scas
out
cmp
fisttpll
mov
arpl
mov
add
jo
dec
fwait
jne
jecxz
or
add
pop
sub
out
adc
cmpsb
in
add
add
mov
call
pop
adc
scas
add
jp,pn
push
scas
xchg
push
lret
or
sbb
out
es
and
mov
jnp
cmpl
cmpl
adc
dec
sub
cmp
mov
jbe
inc
daa
pop
cmp
in
sbb
mov
shlb
shl
xor
pop
rolb
push
and
cltd
jnp
rolb
dec
lret
xchg
filds
inc
and
or
adc
pop
andb
dec
xchg
adc
arpl
in
cmc
jmp
test
sbb
out
sub
inc
inc
mov
add
lret
mov
lock
sbb
inc
sbb
push
sbb
fmuls
mov
jne
and
add
loopne
xchg
je
movb
pop
or
clc
add
ret
aad
outsl
popf
faddl
or
or
les
jle
cwtl
pop
aas
rorb
push
dec
stos
or
add
es
sub
in
bnd
adc
or
xor
or
dec
es
jge
and
pop
arpl
outsb
inc
sbb
sub
and
sub
pop
or
xchg
add
push
cmp
push
cld
inc
pusha
adc
xor
push
inc
inc
jmp
inc
adc
and
nop
pop
mov
inc
bound
je
adc
xor
dec
pop
es
ret
pop
test
aaa
nop
adc
push
dec
or
mov
and
rcrb
push
sarb
and
add
repnz
xchg
xor
cmpsl
mov
dec
push
sbb
pop
fwait
je
mov
adc
iret
mov
idivl
lea
sbb
test
add
loop
or
orb
ja
loope
fistps
shll
mov
andl
fwait
ud2
andl
loope
les
ret
std
cltd
jbe
xor
inc
adc
or
sbb
pop
jnp
sbb
mov
xor
shlb
adc
mov
std
fadd
jmp
push
sbb
fsub
pop
push
fistl
push
push
fcompl
lret
jge
push
cmpsl
inc
jno
shr
cli
push
outsl
push
or
adc
sbb
test
cmp
sbb
data16
adc
gs
and
xor
fs
idivb
loop
pushl
mulb
popf
je
shl
dec
sub
push
jmp
xchg
xchg
dec
call
adc
pop
push
lcall
sbb
shrl
arpl
pop
cld
add
cmpsb
xor
push
inc
or
xlat
inc
cli
jne
sub
pop
xor
icebp
sbb
push
das
inc
jle
dec
loop,pn
es
test
pop
mov
pop
cmp
sub
notb
cmpl
push
inc
add
sub
cld
sub
cwtl
loopne
inc
mov
pop
adc
test
lahf
ret
aaa
pop
insl
adc
or
cld
test
ja
mov
xor
jge
cmp
mov
loope
popa
das
and
or
cwtl
cwtl
cmp
call
mov
icebp
and
lods
mov
fstl
pusha
loop
stos
xlat
xlat
dec
sbb
or
icebp
inc
and
icebp
push
cmp
dec
jge
cmp
pop
pusha
ret
lea
push
cwtl
or
xor
fmull
rorb
lock
xchg
mov
adc
cli
push
jmp
add
push
mov
sub
dec
scas
and
mov
and
cs
inc
or
jecxz
outsb
and
popa
push
addl
mov
imul
and
cmp
jno
es
xchg
mov
cmp
and
and
push
rolb
push
test
or
pop
dec
cltd
adc
cmpsl
mov
js
icebp
into
and
or
jmp
add
fcompl
xchg
or
push
fiadds
dec
lods
mov
xor
stc
cmpb
stos
jo
js
insl
jg
fldt
rolb
and
lock
mov
jns
test
push
movsb
movsb
std
add
insl
cmp
push
add
gs
sahf
lods
adc
mov
lock
and
fwait
ret
dec
dec
sub
sub
inc
out
push
push
push
ds
pusha
push
jmp
in
add
call
jo
dec
je
add
jmp
bnd
in
adc
xor
cmp
pop
test
out
sbb
mov
dec
shlb
and
stos
es
subb
call
cwtl
jo
stos
movsb
dec
inc
adc
add
mov
iret
push
adc
jo
push
sbb
add
add
jae
rorb
mov
adc
pop
mov
or
pop
adc
ss
ja
rcrb
clc
gs
push
les
jbe
sub
jbe
mov
jg
push
adc
inc
pop
sub
andl
repnz
adc
test
adc
xor
ds
adc
aas
and
daa
movsb
scas
adc
cmp
or
daa
enter
shr
sub
rcl
lcall
adc
out
nop
cmp
push
adc
mov
jne
xor
push
sub
and
dec
cmpb
xlat
jmp
fwait
andb
fs
sbb
pushf
xchg
mov
jo
or
std
ja
ud0
aad
movl
xor
das
imul
lock
jge
adc
fld
push
pop
popa
andl
dec
xor
mov
das
je
sub
popa
mov
pop
push
mov
or
mov
lock
pushf
cs
stos
mov
dec
add
push
sbb
in
in
and
dec
bound
sub
sbb
mov
inc
and
jmp
or
add
fstps
push
sub
sub
sahf
scas
in
repz
and
call
shrl
movsl
in
pop
push
jp
ret
cmovle
jmp
sbb
jae
je
stos
xchg
or
out
jl
add
sbb
dec
push
fsubrs
movsb
cld
cmp
mov
outsb
push
inc
jne
mov
pop
lcall
dec
ficomps
rorb
pop
jo
inc
mov
and
mov
dec
enter
aaa
dec
mov
mov
xchg
call
sub
icebp
fstpl
push
inc
push
incl
adc
pop
mov
inc
xor
push
fwait
cld
rorb
or
mov
cmc
cmp
inc
jo
in
sbb
in
pushf
mov
and
or
push
imul
testl
mov
or
or
insl
or
cmp
and
jae
xor
xchg
divb
cwtl
or
pushl
cwtl
mov
fldcw
mov
mov
out
jns
sbb
xchg
test
and
ret
sti
pop
aaa
int
mov
adc
sbb
test
sbb
int3
push
roll
cltd
popa
lret
outsl
push
mov
imul
pop
xor
sub
pop
fdivrl
dec
pop
loope
xchg
test
fisubrl
aad
dec
pop
pop
nop
movsb
adc
gs
cmpsl
test
in
xor
mov
push
inc
jae
cli
add
rclb
adc
hlt
jnp
xchg
aas
jbe
sbb
push
or
xchg
jno
push
add
aad
mov
dec
call
nop
dec
imul
bound
cmp
add
addr16
insb
in
outsl
sbb
pop
mov
popa
loopne
lods
sti
add
mov
pop
mov
adc
or
add
clc
cmp
loop
arpl
sub
insb
lahf
imul
lahf
fnstsw
or
or
push
call
xor
ja
cmp
fs
mov
dec
or
or
pop
mov
sub
adcb
adc
push
adc
inc
xchg
pop
sbb
xlat
lods
jge
xchg
pop
adc
sbb
adc
out
push
pop
cmp
dec
xchg
enter
jns
loopne
adc
fbld
je
rol
pop
pop
lock
and
aaa
mov
adc
cwtl
mov
addb
xchg
leave
sub
jne
ret
inc
sub
jmp
pop
jne
inc
mov
popf
add
nop
roll
test
or
daa
xchg
mulb
jns
in
add
mov
hlt
jmp
arpl
and
inc
imul
hlt
lret
jne
mov
lods
and
adc
cmp
inc
insl
jb
or
inc
adc
int
push
dec
loope
sub
mov
nop
cmp
roll
mov
jl
pop
pushf
repz
mov
jb
sub
mov
ficoml
pop
or
dec
push
add
jmp
dec
cmp
pop
hlt
dec
cmp
ja
out
lods
adc
push
dec
xorl
push
popa
push
into
sbb
fildl
rolb
mov
loopne
lret
sub
mov
lock
mov
fsubl
xchg
subb
xorb
inc
or
lds
pop
xor
push
xchg
and
add
xchg
out
sub
mov
xchg
sbb
out
es
sbbb
sub
sub
outsb
sub
add
jmp
add
pop
jmp
fsubrs
or
sub
mov
xchg
xor
imul
int
rolb
push
lock
or
sbb
negl
add
sub
pusha
shrb
orl
pop
xchg
sbb
push
sbb
adc
iret
inc
sbb
jae
repz
cli
push
or
xchg
xor
mov
mov
push
ja
shl
and
adc
mov
js
js
and
rcrb
stos
pop
rdmsr
mov
add
outsl
adc
dec
inc
lock
cmp
stos
jbe
movsb
test
fcmovu
and
ds
mov
xchg
mov
add
push
xchg
or
add
arpl
adc
sbbb
call
lret
cltd
cmp
nop
popf
movsb
aas
test
push
add
mov
push
mov
and
js
lock
sbb
insb
insb
cmp
test
jle
mov
pop
jne
std
test
and
xorl
movsb
sarb
cld
je
cmp
bound
jg
mov
xor
mov
and
jb
pop
movb
adc
pop
pcmpeqw
or
gs
pop
sbb
cs
roll
cmp
xchg
or
fdivs
add
enter
sarb
push
sbb
xchg
cmp
call
cmp
mov
adc
insl
or
pop
xor
incl
hlt
fisubrl
mov
int
pop
pushf
shll
std
inc
cmpsl
jne
xchg
cmp
add
or
pop
cmp
sub
inc
add
test
sbb
mov
sub
push
popa
jne
mov
add
mov
cmp
mov
xchg
lock
add
mov
jno
jno
sbb
adc
dec
in
aad
aas
sub
adc
daa
sbb
popa
mov
push
or
nop
mov
cwtl
sub
cmp
enter
cld
loopne
pop
adc
add
orl
add
int3
mov
int3
das
inc
jb
adc
and
fimull
mov
push
testl
push
mov
cmp
gs
nop
xchg
mov
dec
push
adc
out
das
jge
and
mov
push
or
adc
push
loop
push
out
adc
ljmp
incw
std
push
or
hlt
lock
xchg
cs
btsl
xor
das
enter
inc
cmp
inc
ss
sbb
dec
fcoms
enter
lods
mov
dec
andb
test
lret
dec
sub
loop
loope
shll
or
or
shlb
ds
in
mov
xchg
cmp
and
push
dec
lea
adc
fwait
push
or
xor
sbb
and
imul
das
inc
fs
xor
sub
and
add
repnz
lods
clc
adc
dec
pop
add
add
mov
sub
adc
and
jo
sub
cs
ficomps
inc
insl
xor
dec
adc
xchg
xchg
add
dec
adc
call
mov
out
jmp
lea
pop
add
pop
aam
je
cmc
sbb
xchg
in
and
cltd
sub
mov
or
cmc
and
jae
xchg
insb
pusha
rcll
shrb
dec
rcr
or
push
cmp
inc
adc
lahf
push
push
pop
mov
mov
sub
rolb
sub
sub
enter
cli
js
or
cmp
movsb
lcall
je
adc
outsl
jmp
dec
sbb
adc
push
or
sbbb
dec
les
add
into
pop
inc
decb
and
ret
jno
rclb
add
adc
sbb
mov
push
sbbb
xor
shl
mov
sub
add
and
repz
aas
pusha
ret
mov
das
ret
add
lahf
scas
hlt
cmp
jle
movsl
inc
jmp
fidivs
and
call
test
je
add
sbb
loope
mov
lahf
or
adc
push
cmpsl
ja
loop
sub
jp
call
cmp
add
inc
andb
cmp
pop
cmp
add
xchg
es
sbb
in
xor
hlt
aad
or
ret
or
inc
sub
outsl
xor
movb
sub
outsb
inc
pushf
xor
jp
pop
add
dec
dec
mov
lds
dec
lret
mov
and
and
setl
mov
pushf
and
inc
rcrb
mov
mov
daa
or
inc
adc
sub
cmp
sub
addl
sub
xchg
scas
stc
mov
or
mov
add
inc
das
inc
mov
add
out
pop
mov
hlt
add
dec
sub
adc
jle
inc
ds
add
cmpb
mov
dec
jmp
or
inc
adc
xor
or
sbb
in
and
xchg
je
dec
inc
rcll
repnz
pop
sbb
push
test
dec
cmp
inc
jae
inc
mov
push
xchg
adc
and
mov
mov
andl
inc
divb
push
pop
sub
loopne
pop
or
mov
pushf
sti
nop
call
sub
and
jl
sahf
pop
mov
test
subl
lods
test
test
dec
ficomps
out
mov
lea
js
add
imul
xchg
cmc
aam
pushf
mov
xor
dec
fdivl
fidivrs
xchg
push
inc
je
and
es
cld
mov
aas
push
inc
scas
xor
lcall
push
add
mov
test
mov
mov
inc
stos
xchg
pusha
pop
daa
add
and
sub
fistpl
nopl
repz
mov
pop
add
sub
je
pop
dec
cld
lahf
sbb
adc
test
notl
pop
mov
xor
and
aas
xchg
cmp
xor
jns
in
or
adc
sbb
cmpsb
pop
sbb
cli
sbb
ret
or
loopne
add
stos
mov
mov
and
add
cwtl
pop
popa
arpl
dec
adc
inc
dec
sbb
mov
mov
repnz
pop
mov
push
xchg
mov
xor
sub
cmp
sbb
add
pop
mov
call
rorb
jle
add
fwait
cmp
add
mov
add
jl
sahf
js
mov
outsb
jl
push
clc
cmpb
fnstsw
mov
call
cmp
push
xchg
rcl
and
xchg
loopne
push
pop
das
xchg
cmp
ret
push
sahf
roll
icebp
pop
repz
or
loopne
mov
sbb
xor
or
xchg
loope
stc
testl
sti
adc
mov
lods
mov
jbe
clc
popa
inc
pop
jle
arpl
inc
mov
lret
pop
push
int3
dec
or
cmp
inc
gs
add
stc
int3
fs
xchg
and
imul
sub
sbb
push
loope
cmp
std
mov
jo
sub
adc
inc
rorb
ficoms
out
insl
fcomps
ljmp
pop
ret
loope
stos
inc
jp
or
test
movsb
repz
add
arpl
sub
clc
and
insb
pusha
movsb
sbb
inc
dec
nop
mov
roll
or
loope
and
inc
mov
xchg
or
add
add
sti
test
sub
pop
lock
lods
test
gs
jne
stos
inc
push
dec
push
pop
pop
stc
xchg
xchg
xor
daa
test
pop
loope
lahf
insl
cmp
inc
iret
or
jne
push
fwait
xor
icebp
cmp
add
cmp
push
testb
fld
xchg
dec
fs
or
aad
push
je
sbb
and
sbb
and
loop
das
cltd
enter
inc
out
cmp
inc
push
and
js
aam
push
pop
jae
pop
shl
fistpl
mov
inc
cmpsb
and
orb
push
ret
cmc
add
js
add
add
mov
dec
sub
sub
mov
sbb
inc
inc
pusha
pop
bsr
pop
ret
cld
sbb
jo
push
je
push
xchg
in
test
fcompl
and
ficoml
inc
pop
popf
loopne
leave
rorl
mov
xchg
and
inc
test
push
mov
dec
and
sti
push
nop
push
pop
lods
sarb
aam
daa
sub
test
cmp
movsb
xor
decb
xchg
test
cmp
nop
movsb
and
jb
mov
or
or
jl
mov
push
lock
xor
mov
add
rcrb
fcomip
shr
push
movsb
sbb
scas
test
cmc
mov
jnp
aaa
loope
and
lahf
push
negb
and
jnp
adc
mov
adc
fstl
sub
mov
es
not
and
adcl
add
faddl
movsl
pushf
jmp
stos
gs
mov
pop
mov
xor
push
loope
pop
jmp
cwtl
imul
dec
mov
scas
or
push
mov
rclb
cwtl
inc
ret
add
xchg
mov
shrb
mov
push
mov
pushf
cwtl
xor
mov
rcr
lcall
xchg
movsb
sbb
xchg
adc
mov
daa
mov
addb
cmp
sub
and
dec
dec
cmp
push
add
dec
ja
les
sub
xor
or
or
push
jo
clc
jecxz
xor
addl
arpl
adc
adc
pop
fwait
shr
int3
lret
sub
enter
mov
repz
jmp
hlt
data16
adc
jecxz
fdivrp
or
xchg
ror
mov
adc
dec
jmp
xlat
insb
pop
in
pop
aaa
mov
add
mov
xchg
adc
test
pusha
cmpl
sub
inc
rcrb
or
add
jne
xor
jns
dec
jo
pusha
mov
mov
push
inc
ss
add
push
mov
jne
xor
inc
mov
daa
rcrl
int3
shrb
mov
xchg
rorb
mov
hlt
rorb
pop
xchg
ja
test
or
or
aas
adc
or
mov
mov
jns
loopne
test
or
jle
mov
jno
dec
add
test
pushf
call
push
fisubrl
inc
inc
cmp
sub
cmp
xchg
jge
add
dec
sub
es
or
or
jbe
std
das
push
sbb
fcmovu
pop
push
into
movb
insb
sub
cld
adc
in
push
nop
adc
xor
ss
add
movsb
inc
das
dec
loope
xchg
sbb
icebp
stos
add
loope
sahf
outsl
and
mull
jno
cmp
mov
adc
adc
xchg
jns
sbb
loope
adc
pop
sbb
call
movsl
popa
jo
xchg
jge
push
mov
mov
sbb
dec
xchg
faddl
add
loope
sub
cli
pop
jg
jge
lock
orl
ds
cmp
and
roll
push
movsb
push
arpl
jl
push
sbb
les
mov
inc
fnstenv
mov
add
mov
ljmp
and
push
call
cmpsb
ficoms
adc
ret
sub
mul
dec
xor
fs
or
pop
test
mov
ja
mov
ss
cmp
imul
fsubl
cmp
push
xchg
inc
cmc
xor
js
jne
add
inc
cwtl
jo
test
pop
lcall
inc
clc
dec
cmpsb
mov
and
rol
out
das
mov
inc
jge
lcall
and
push
or
out
or
sub
out
rcll
lahf
push
adc
inc
sbb
push
pop
push
and
sub
jecxz
pop
imul
mov
jp
std
jmp
and
dec
mov
loopne
pop
mov
dec
jle
and
push
enter
cli
or
popa
sbb
dec
lock
mov
loope
adc
pushf
daa
cmp
or
pop
ret
in
dec
mov
xor
cmpsb
aaa
mov
xor
xchg
add
sub
adc
pushf
orb
sub
movsl
pop
push
fstps
pusha
pusha
invd
cltd
and
mov
mov
push
sub
adc
mov
pop
jne
pop
mov
jle
movl
cmp
cmpsb
aam
fsubl
loopne
xsaves
and
add
sub
sub
mov
sub
or
inc
sbb
aaa
add
push
fdivl
imul
sub
lods
jnp
jns
out
daa
inc
mov
add
add
sub
sbb
add
movsl
cmpl
fcomp
adcl
cmp
mov
std
in
pop
cmp
pop
push
jno
and
sub
mov
scas
sbb
xchg
jbe
jae
in
sub
fildl
and
mov
mov
sub
mov
cmp
rcrl
ss
mov
mov
mov
and
push
rcll
add
jb
add
add
xchg
push
setns
add
mov
fcoms
mov
roll
cmp
cmp
push
jmp
jae
pop
add
int3
jns
loope
aam
adc
mov
or
les
sbb
xor
add
pop
pop
push
xor
hlt
xor
xchg
cltd
or
sbb
icebp
push
or
or
mov
cmp
lahf
mov
or
sub
jecxz
sbb
arpl
rolb
test
int3
adc
lcall
xor
jno
jb
loop
sub
inc
mov
leave
jnp
ljmpw
jg
call
sbb
pop
aaa
and
popa
sub
xchg
icebp
dec
shlb
add
dec
push
push
push
push
add
and
addb
pop
in
popf
dec
je
push
lahf
push
enter
inc
inc
lock
shll
fmull
dec
adc
mov
sbb
sbb
push
dec
cwtl
mov
push
fsts
mov
sbb
fstl
repz
arpl
and
push
movsb
mov
ds
or
dec
jns
stos
adc
or
movsl
cmp
sub
jle
or
mov
test
leave
testb
out
sub
in
fs
mov
mov
mov
dec
jb
fisubs
jp
add
or
lea
mov
xor
jo
sub
inc
add
pop
xchg
jns
adcb
mov
xchg
in
pop
jmp
jnp
or
sarl
lods
inc
in
or
fisttpl
mov
cmova
lock
addl
add
shlb
ja
adc
cmc
mov
lods
sub
ret
mov
cmp
pop
push
sbb
or
test
pushf
mov
pop
pop
cmc
popa
push
push
push
sub
xchg
adc
test
mov
sub
push
dec
mov
add
rolb
dec
inc
jbe
add
orb
lret
inc
lcall
adc
popa
pop
mov
xchg
add
and
and
test
mov
repnz
push
sbb
dec
push
adc
cltd
sbb
xchg
add
cld
lds
adc
sub
dec
sub
mov
xor
mov
add
ja
jae
pop
je
dec
insb
xchg
jne
cmp
or
aad
cld
xlat
daa
adc
ret
jno
rcr
clc
test
in
ret
mov
push
mov
add
je
mov
lock
mov
mov
cltd
dec
cmpsb
call
test
add
add
sub
push
addr16
or
out
xor
jmp
push
cmp
outsb
dec
test
cmp
mov
orl
lock
rorb
push
mov
push
and
adc
inc
mov
mov
mov
xor
xor
push
and
xor
pop
insl
xor
dec
jecxz
push
fisttpl
cmp
inc
xor
clc
mov
xchg
cmp
sub
movsl
fs
sub
or
inc
or
lods
push
jno
add
push
xor
addb
xor
pop
jns
out
adc
add
cmp
das
mov
sbb
lock
jl
adc
push
dec
mov
out
push
xchg
fadds
jae
das
stos
inc
push
mov
fwait
add
add
outsb
mov
sti
push
in
pop
in
ss
or
inc
aaa
and
jg
xor
jg
out
add
inc
mov
push
es
or
test
test
jb
sub
add
sub
ficoms
dec
cmp
in
jnp
xchg
mov
cmp
popa
mov
xchg
pop
ss
inc
sub
sti
push
mov
pusha
orb
xor
or
enter
mov
jo
iret
inc
push
lock
outsb
adc
pop
popa
lock
movl
or
nop
addr16
in
mov
xchg
aas
mov
inc
or
inc
xlat
cmp
sub
rolb
and
insl
shrb
mov
adc
pop
xchg
daa
pop
mov
addr16
inc
or
sub
pop
push
mov
iret
addb
es
mov
adc
pusha
xchg
adc
jns
pusha
jmp
repz
inc
fnsave
testb
cmp
orb
jmp
cmpb
addr16
inc
or
orl
xchg
xchg
push
mov
add
pop
loopne
xchg
mov
lret
push
das
call
cmpb
adc
lock
stos
int
adc
sbb
jg
add
push
popa
xchg
call
inc
add
inc
add
pusha
test
pop
adc
sarb
push
into
lods
std
add
push
lods
sbb
or
jns
idiv
mov
imul
pop
fbld
enter
dec
les
pusha
inc
sub
inc
adc
cmp
ficoml
xchg
daa
add
andl
dec
sub
sarb
add
add
jno
push
cmpsl
pop
or
lret
cmp
adc
lods
inc
or
add
cwtl
pop
cvtdq2ps
mov
fidivl
scas
push
mov
adc
pop
push
fs
mov
cmp
inc
data16
dec
xor
mov
or
dec
sbb
mov
push
inc
jbe
sub
lods
mov
mov
push
push
movsb
sub
sbb
loopne
in
inc
jmp
xchg
gs
cmpl
inc
outsl
and
daa
add
mov
xor
hlt
popf
pop
nop
or
cwtl
cmpsb
daa
jl
iret
ja
jecxz
aaa
ds
adc
pop
xor
aas
test
aaa
mov
xchg
seta
add
and
jmp
and
mov
sarl
jmp
fstpl
mov
add
mov
xchg
sbb
popf
xchg
push
ds
aad
js
cmpb
adc
fcoml
and
pop
adc
mov
rcr
push
jb
jecxz
mov
xchg
push
scas
sub
mov
sbb
pop
fdivrs
or
je
push
popa
adc
xchg
mov
inc
inc
lds
jo
xor
adc
inc
cmp
mov
add
or
push
rol
sub
cmp
adc
imul
cs
lock
push
mov
clc
sub
scas
sub
adc
aam
push
cmp
or
add
mov
lcall
addr16
and
cmp
imul
out
xchg
push
or
mov
and
or
sbb
decl
fwait
movsl
popa
cmp
pop
cmp
sbb
loope
pop
rcrb
adc
and
sbb
push
iret
pop
and
and
add
mov
push
enter
rolb
inc
xchg
dec
test
inc
repz
arpl
inc
pop
jae
mov
add
enter
jge
sbb
fwait
and
test
adc
les
pusha
inc
xlat
sub
addr16
inc
pop
test
sub
xchg
fs
sbb
add
push
dec
and
mov
pop
pop
cmp
push
daa
std
inc
and
sbb
fists
push
inc
es
and
adc
pop
adc
call
loop
xor
xchg
js
daa
adc
test
call
decl
adc
dec
add
pop
xchg
dec
dec
test
jne
mov
movl
daa
xchg
sbb
insb
mov
in
das
and
ja
push
xor
push
sbb
push
pop
cmp
push
mov
mov
insl
pusha
add
sbb
in
test
outsb
add
jne
push
mov
dec
cmp
xor
sbb
xchg
test
mov
shrb
dec
add
or
or
aas
inc
insl
push
and
or
sti
icebp
sub
push
ja
loopne
inc
and
xchg
sbb
mov
pop
subl
mov
pop
or
mov
sahf
mov
leave
mov
push
push
and
jecxz
adc
ficompl
mov
or
mov
std
push
inc
into
push
test
xor
xchg
inc
adc
push
jnp
push
inc
cltd
jp
subb
push
loope
push
adcb
dec
add
pop
cmp
jae
add
pop
dec
jg
loope
shr
xor
adc
mov
inc
call
or
shr
fcomps
cmp
xchg
sahf
dec
or
add
and
adc
fistpl
jmp
jne
or
popa
inc
mov
xor
xor
ss
jg
rolb
and
xor
and
add
sbb
sub
add
cmc
mov
orl
inc
dec
push
test
push
push
add
xchg
xchg
mov
pop
das
push
sbb
xor
push
push
pop
jb
xchg
sbb
push
jae
orl
push
sbb
inc
inc
fstpt
fnstcw
sbb
mov
jns
aas
xor
sbbl
inc
jo
adc
dec
or
and
js
push
and
add
stos
lds
pushf
aam
mov
ret
orb
mov
outsl
insl
and
imul
xchg
sub
jns
add
or
pop
add
pusha
add
incb
cld
popa
pushf
es
adc
inc
jne
cmp
xchg
cmp
cmp
pop
cmpsb
inc
add
scas
mov
in
and
sbb
mov
pop
or
js
and
sub
or
fcmovnb
cmp
adc
and
mov
ret
xchg
push
enter
pop
sti
pusha
or
in
pusha
sub
or
mov
insl
scas
aas
repnz
adc
je
add
outsb
push
or
xchg
lret
pop
dec
or
xchg
xchg
cmpsl
push
movsl
xor
ret
cmp
fdiv
mov
pushf
scas
and
sbb
mov
dec
add
lock
insb
jnp
xor
hlt
lea
jmp
sub
dec
jle
mov
div
xor
xchg
mov
jmp
enter
xor
loope
push
clc
aaa
and
inc
push
fwait
loop
mov
or
inc
fisttpll
movsb
inc
adc
sub
out
mov
aas
addr16
or
lret
xor
data16
shll
jp
push
pop
cli
enter
mov
or
imul
cwtl
push
push
push
inc
push
std
jno
aam
jns
ret
cmp
loope
fldenv
jmp
dec
cmp
sub
xadd
push
shlb
cmp
ljmp
nop
mov
clc
push
xchg
push
push
pop
cmp
stos
jge
adc
daa
scas
stos
jns
rcpps
add
rolb
jp
push
cmpsl
dec
xlat
adc
inc
xchg
jb
ficompl
out
push
inc
xchg
jo
out
push
cwtl
insb
push
cmp
and
loope
nop
inc
fistl
fistl
sbb
push
push
gs
ljmp
mov
mov
and
push
subb
mov
lea
pop
cmp
dec
dec
addb
ret
fdivs
jl
mov
sub
jb
push
inc
cwtl
movsb
mov
pop
cmpsl
jo
ja
aaa
imull
push
xor
mov
cmpb
lahf
add
dec
push
or
xchg
dec
jge
cmp
jle
adc
rolb
lods
lods
mov
cltd
xor
adc
or
pop
pop
ljmp
dec
jmp
gs
push
and
call
add
mov
xor
jb
adc
push
add
icebp
cmp
jg
mov
add
jle
pop
adc
test
pop
jne
inc
inc
inc
mov
fs
xchg
push
adc
lods
adc
movsb
and
mov
or
mov
mov
xchg
and
push
adc
and
push
dec
push
pop
testl
negb
or
dec
andb
sbb
leave
sbb
cmp
faddl
xor
icebp
lret
jnp
ret
dec
pushf
xorb
adc
mov
and
sbb
decl
jle
mov
sub
sub
push
je
inc
xchg
ds
pop
inc
rorb
jb
mov
lock
mov
enter
pop
in
dec
cmp
push
jne
mov
add
test
inc
fdivr
ret
add
dec
lret
dec
push
lods
notb
dec
push
cmp
por
add
adc
adc
mov
in
mov
inc
test
pop
sbb
xchg
push
xchg
push
insb
or
out
or
lock
add
mov
out
das
add
or
aas
cs
shlb
sbb
or
test
inc
dec
xlat
mov
push
mov
rolb
jmp
cmp
cmp
shlb
sub
mov
lea
dec
insb
cmp
mov
push
pop
fimull
aad
repz
rcrb
lret
cli
ret
cmpsb
dec
and
mov
xchg
jecxz
aam
sbb
aaa
icebp
dec
dec
push
popf
movsl
adc
push
adc
xor
decb
push
push
hlt
cmp
cs
inc
add
insl
sbb
enter
inc
jb
aam
fdiv
sbb
mov
mov
pop
jp
add
lock
and
sbb
pop
rcrb
jbe
scas
stos
and
sbb
add
int3
dec
call
cmc
or
cwtl
in
ja
push
inc
jmp
lret
jne
aas
pop
addr16
ret
sahf
scas
inc
add
lret
xor
cmpsb
push
inc
mov
and
int
and
and
jns
pushf
pop
xor
loope
int3
sbb
and
lods
jae
and
sub
sub
xchg
mov
insl
loopne
cmp
inc
or
and
clc
sbb
xlat
popa
rclb
je
push
sti
jmp
dec
test
rcl
loope
and
test
fadds
iret
pusha
jnp
in
in
adc
jle
and
insb
scas
lds
xor
pop
icebp
scas
or
xchg
lds
sub
adc
jo
jo
lods
lea
or
jmp
leave
cmp
mov
mov
mov
push
ret
rclb
xchg
lds
push
cmc
imul
cmp
cltd
push
sbb
sub
xchg
cmp
pop
pop
fists
testl
pop
fnstcw
je
cs
nop
test
dec
repz
loope
xor
mov
push
mov
sbb
push
icebp
daa
sub
rolb
mov
fsubrl
or
push
sub
adc
jno
inc
mov
test
lea
or
stos
gs
cwtl
cmp
add
cmp
fildl
jne,pn
rolb
add
sub
add
dec
ss
pop
push
mov
xor
packuswb
inc
outsl
fsubr
or
ja
or
xchg
push
daa
sbb
insl
push
add
loopne
cmp
insl
pop
ljmp
sub
outsl
adc
and
push
aaa
mov
or
or
cli
pop
rolb
and
jmp
mov
mov
imul
sbb
mulb
inc
add
adc
pop
imul
sahf
pop
mov
out
aaa
add
cmp
and
jle
aas
pop
push
mov
inc
into
fwait
sbbl
lock
push
push
xchg
ficompl
mov
inc
popa
shrw
mov
test
negl
sbb
dec
aas
das
jae
push
lods
push
adc
jg
push
es
rcll
nop
pushf
in
mov
ret
hlt
dec
cmp
push
addr16
fists
shufps
enter
cs
test
mov
pop
call
inc
inc
xchg
lea
popa
jecxz
ret
jl
sarb
and
ds
arpl
orb
out
xor
cmp
push
add
xchg
push
adc
dec
push
clc
sahf
out
xlat
xchg
pop
lret
stc
in
and
pop
rolb
ret
mov
cmp
sahf
fcomps
sbb
xchg
je
shll
xchg
or
push
cmp
stc
and
mov
push
rolb
mov
imul
out
jae
fldt
mov
mov
mov
shlb
ret
mov
cmp
and
addl
out
adc
je
sahf
adc
int3
add
and
scas
std
add
push
xor
or
xchg
loopne
es
sub
mov
or
push
mov
rol
adc
xchg
sub
dec
lea
ficoms
bound
sub
xlat
mov
and
sub
testl
cmp
lock
enter
mov
xchg
jmp
fwait
out
pop
cwtl
and
sti
popf
pop
and
dec
loope
in
push
dec
push
push
adc
outsb
mov
dec
mov
lahf
xlat
sbb
add
movsb
fnsave
jno
jmp
dec
or
jl
jnp
cmp
cmc
lcall
inc
xor
bndstx
movsl
js
jb
les
mov
or
loope
xchg
out
add
and
cmpb
adc
mov
mov
cmpsl
pusha
jl
roll
pushf
jge
outsb
in
dec
pop
es
iret
mov
and
jp
mov
push
iret
pop
or
lds
fists
push
dec
lods
fucom
and
add
or
loop
push
dec
iret
sbb
push
ret
popa
stc
and
mov
imul
iret
push
call
loopne
rolb
jbe
pop
je
pop
int
ret
sbb
sub
adc
mov
sbb
fsubp
scas
xor
xchg
cwtl
xor
mov
dec
pop
fsubrl
or
push
add
pop
xor
push
cmp
xor
js
xor
cmp
jle
add
jb
add
or
add
add
cmp
clc
mov
test
jmp
inc
outsl
pop
add
movsl
mov
sbb
mov
in
inc
adc
adc
lods
out
dec
scas
or
shlb
insl
inc
mov
inc
or
mov
xor
sti
fldcw
add
mov
pop
in
pop
push
daa
hlt
cmpl
int
sub
push
clc
clc
lock
imul
nop
popf
dec
jae
call
push
mov
rorb
fdivrl
xchg
sub
mov
enter
add
aaa
pop
add
popf
pushf
mov
add
adc
js
sbb
repnz
push
sbb
adcl
dec
scas
sti
mov
outsl
movb
add
cmp
gs
adcl
jge
push
dec
inc
sbb
xchg
lcall
add
mov
dec
add
inc
inc
adc
push
cld
mov
or
or
pop
or
mov
and
mov
rcrl
daa
into
movsl
push
sub
mov
mov
mov
decb
adc
pop
jmp
mov
insl
add
sarb
scas
adc
mov
outsb
and
testl
scas
mov
cs
jle
out
push
and
jle
adc
loopne
mov
ficomps
int3
add
jo
jb
mov
rol
arpl
stos
push
cs
fdivs
sbb
and
add
xchg
mov
enter
int
xor
cmp
xor
fisubl
add
sbb
lcall
dec
int3
or
pop
mov
sbb
xchg
shrb
lret
sbb
in
aam
les
sbb
dec
popa
fwait
adc
adc
hlt
repz
pop
insb
and
add
punpckldq
cmp
mov
movsb
mov
add
add
ficompl
and
inc
mov
std
jo
insb
inc
loopne
sbb
cmp
lea
dec
sarb
push
pop
xlat
adc
mov
xchg
test
jge
dec
clc
add
dec
mov
nop
mov
das
lods
cmp
xchg
arpl
push
insl
xchg
add
mov
push
or
inc
or
int3
shlb
xchg
xlat
push
push
sbbb
in
mov
jbe
push
cld
nop
aam
push
dec
dec
pop
das
inc
pushf
add
mov
adc
jne
call
shrl
add
sub
sub
les
outsb
mov
mov
mov
dec
jne
sub
or
mov
add
inc
inc
mov
dec
pop
mov
cld
add
or
sub
sub
add
fsubl
cmpsb
add
js
mov
dec
negl
jg
loopne
test
shl
add
or
adc
xor
add
dec
das
cmp
dec
or
inc
call
clc
mov
cmp
push
jae
mov
adcb
add
or
lcall
test
sbb
push
es
add
pop
add
xchg
scas
sub
pop
or
mov
jecxz
jne
cmc
pushf
xor
ficompl
lret
xchg
jmp
jecxz
jns
rolb
push
cld
aaa
or
sbb
push
imul
aam
data16
test
dec
xchg
xor
jne
lea
xchg
rorl
pop
addl
pusha
cmp
jbe
sbb
jnp
enter
lods
ret
int3
mov
enter
inc
testl
shlb
adc
sahf
and
testb
sbb
sbb
mov
sub
adcb
mov
testb
pop
xchg
lret
das
add
mov
or
dec
movsb
mov
mov
lods
aaa
js
fwait
or
inc
and
or
pusha
mulb
mov
and
or
pop
xor
insl
fs
int3
xchg
loopne
add
add
js
shlb
enter
clc
add
and
jecxz
dec
repnz
inc
shl
sbbb
or
sbb
add
push
add
or
jb
pop
out
inc
mov
lcall
sub
jb
aaa
mov
mov
push
test
inc
mov
imul
nop
iret
cmp
loopne
jo
jle
add
imul
inc
in
lock
add
fs
cmp
insl
dec
mov
jmp
inc
or
in
adc
add
sbb
fisttps
dec
shl
and
or
pop
sbb
enter
or
imul
ss
sbb
lret
hlt
dec
mov
push
popa
add
dec
push
or
jecxz
sti
inc
add
sub
push
add
adc
and
scas
in
mov
jnp
mov
cmp
sbb
or
ret
adc
cli
adc
dec
xor
add
mov
jne
jecxz
arpl
push
mov
sbb
jo
dec
popa
andl
aaa
in
sub
aas
iret
adcl
ja
cmpsl
cmp
mov
cmpl
out
and
movsb
jo
and
sbb
sbb
call
push
fisttps
add
cmp
dec
cli
movsb
ja
sub
push
adc
call
dec
int
fistps
mov
sub
test
dec
add
mov
leave
sub
loopne
shlb
and
stos
jnp
push
repnz
or
add
arpl
call
lcall
mov
xor
push
and
push
jo
add
out
cmpsb
jecxz
int
cmp
icebp
jno
sti
call
call
loop,pt
rcrb
xchg
clc
cmp
sbb
jmp
xor
add
or
adcb
sub
cmpb
push
loopne
push
dec
xchg
jge
lock
sub
add
push
cmp
sub
repnz
loope
out
add
sbb
cmp
mov
scas
lret
fimull
jg
int
mov
aas
mov
cld
sub
and
push
mov
mov
push
add
insb
and
orb
mov
jg
add
addb
adc
dec
xor
leave
push
push
adc
xor
push
dec
push
and
int3
fadds
xchg
aaa
cmpxchg
adc
fldl
clc
rclb
lods
dec
cmpb
xorb
and
andl
sbb
push
hlt
add
movsb
lret
sub
pop
xor
test
lock
mov
sub
dec
mov
punpcklwd
dec
pushf
lock
jl
lock
add
pop
gs
add
jbe
dec
mov
mov
inc
push
add
cmpl
jmp
adc
inc
jb
jmp
inc
loope
mov
push
or
insb
xchg
std
lahf
cmp
inc
repz
imul
sarb
pop
mov
addl
adc
inc
clc
clc
js
js
sub
iret
or
in
sbb
popa
loopne
xchg
inc
or
movb
repnz
fwait
inc
loopne
add
push
das
push
dec
push
push
and
mov
mov
add
add
fisttpll
adc
rolb
int
xchg
inc
lods
mov
addr16
nop
xor
clc
adc
popa
shrb
clc
jge
cmp
and
clc
jae
insl
imul
mov
int
jb
call
fimull
pop
ss
dec
stos
xor
enter
mov
xor
pop
lods
test
dec
arpl
adc
inc
push
sub
cmp
jmp
std
cmp
setl
cmpl
les
push
into
and
pop
xchg
sbb
and
sbb
pop
cmp
sbb
popa
lret
lea
push
cs
sub
mov
cmpsb
or
notl
andl
rolb
push
xchg
dec
xorl
rorl
push
mov
jb
and
xchg
or
pop
pop
push
sub
jne
mov
iret
iret
cld
fmull
push
fbstp
xchg
sti
test
or
push
orb
aas
fs
adc
loope
jmp
dec
lock
mov
jne
push
cmp
push
aas
daa
sbb
call
fs
push
fdivs
sub
inc
jbe
ret
ds
add
xor
mov
pop
and
loopne
inc
fcmovne
lock
rorb
mov
add
hlt
cmp
sbb
xor
loope
in
pop
arpl
mov
les
push
ds
pop
mov
jnp
std
int3
ret
je
mov
lds
clc
dec
and
fcomps
test
or
aaa
push
push
push
sub
push
sbb
fldcw
pusha
jecxz
ret
sbb
sti
push
lcall
jle
fwait
mov
mov
push
js
lcall
test
pop
fcomps
jbe
xchg
pop
fisubs
popa
jne
inc
faddl
sbb
sbb
adc
nop
not
test
mov
imul
jg
cmp
je
pop
or
dec
loopne
pop
insb
mov
sbb
add
push
inc
insb
repz
rcr
inc
notl
sbb
adc
adc
in
and
popa
in
xchg
and
notl
fldenv
jl
clc
sbb
xor
pop
add
jne
xor
add
add
sbb
sbb
cmp
fcompl
loopne
inc
push
lds
fwait
jl
adc
dec
cmp
push
push
sub
add
repnz
sbb
cltd
push
aas
pop
add
add
mov
aaa
and
outsb
sbb
andb
dec
mov
aaa
rolb
ret
or
cmp
pop
rclb
xchg
and
aaa
cs
dec
mov
dec
mov
xorl
mov
jno
jns
adc
lds
cmpsl
addr16
sbb
inc
fs
ss
mov
sbb
lock
adc
inc
fistl
jg
neg
pop
inc
xchg
les
enter
inc
dec
repnz
push
or
sti
es
push
jmp
mov
popa
pop
mov
push
sub
or
add
push
push
aaa
add
mov
push
les
jp
adc
std
mov
push
add
fbstp
adc
fwait
dec
pop
mov
cwtl
and
push
popl
sub
scas
pop
mov
xor
dec
bound
inc
adc
popf
pusha
xor
or
adc
rcl
js
mov
adc
pop
push
rcrb
insl
ffree
adc
push
jne
jmp
jnp
dec
adc
or
lods
pop
ret
sub
xchg
popa
leave
pop
inc
fwait
shr
std
in
rcrb
adc
inc
dec
inc
jnp
shlb
rorb
ss
je
sbb
out
cmp
xor
dec
xor
lcall
call
addl
adc
les
call
call
xor
sti
ljmp
cmp
or
push
lds
add
lock
sbb
nop
add
sbb
mov
movb
xchg
xchg
adc
and
and
mov
inc
pop
adc
fcmovnbe
add
lret
adc
les
int
push
cmp
push
mov
into
dec
jne
inc
and
insl
daa
or
leave
pop
and
fprem
push
lock
mov
mov
or
test
test
adc
add
outsl
leave
add
paddb
mov
xor
ret
xchg
cmpsl
inc
xchg
cmp
pop
lea
ljmp
outsb
mov
add
adc
xchg
mov
push
xor
mov
pop
sbb
sbb
lods
pop
mov
ljmp
jnp
sbb
dec
dec
ja
jno
adc
sbb
jp
push
inc
mov
push
test
sub
adc
ret
js
fdivrs
xchg
imul
rcl
and
adc
cwtl
pop
pop
out
in
icebp
sbb
pop
or
adc
idivl
fnstenv
push
cmc
sbb
ljmp
sub
dec
adc
xchg
je
xor
sub
pop
xchg
add
aaa
jo
mov
add
push
mov
lock
mov
pop
andb
fnstcw
lock
sub
loope
mov
xchg
ss
adc
je
push
jns
insl
jle
xchg
mov
into
and
cmpsb
or
ss
xlat
mov
inc
sbb
mov
cmp
add
push
jnp
mov
dec
cmpsl
das
pop
imul
push
sub
sbb
adc
insl
sub
daa
je
sbb
sub
mov
push
push
xor
pop
nop
mov
psraw
iret
pop
sbb
lea
sub
sub
andb
or
into
push
lock
and
mov
hlt
xor
fwait
pop
gs
cmp
xorl
ret
or
stc
dec
or
add
imul
dec
or
ret
pop
nop
lret
enter
xor
loope
add
pop
mov
pop
add
push
std
jo
sti
jnp
cmp
imul
adc
dec
cmp
enter
or
insb
sub
mov
cmp
cmp
sub
lods
push
and
mov
idivb
push
xor
inc
rclb
sbb
and
roll
test
adc
fisttps
sarl
or
loopne
and
dec
insb
out
or
arpl
imul
sub
push
sbb
daa
insb
pop
pop
clc
add
xchg
iret
inc
push
mov
or
movb
scas
lcall
adc
lock
adcb
mov
das
pop
mov
xor
call
aam
push
les
cmp
pop
xchg
pop
and
lcall
ret
dec
lret
dec
add
add
scas
sbb
pushf
dec
jmp
je,pt
cmpl
and
fcomps
dec
roll
dec
out
test
add
sub
pop
xchg
rolb
or
jle
test
dec
pop
mov
cmp
dec
test
fs
mov
sbbb
adc
test
call
inc
lds
add
test
je
xchg
pop
mov
dec
adc
lods
or
or
loopne
push
mov
jne
inc
adc
mov
mov
jp
dec
mov
aaa
push
aam
pusha
mov
inc
or
push
push
das
fsubrs
das
add
fcmovnbe
lea
pop
xchg
subb
mov
adc
inc
dec
inc
test
adc
sub
dec
push
jnp
cmp
adc
or
add
vmread
sub
andb
ret
leave
adc
insl
or
sub
add
mov
lcall
cltd
imul
adc
imulb
idivl
add
sbb
xchg
pusha
sub
je
jae
cwtl
ret
xchg
notl
ljmp
je
nop
test
pop
adc
into
aad
push
lret
inc
push
add
andl
push
push
nop
xlat
scas
sub
inc
dec
dec
scas
pop
mov
sub
dec
loopne
and
inc
rolb
int3
or
pop
and
jo
cli
and
or
sbb
jbe
cmp
insl
insb
jmp
gs
test
or
mov
inc
dec
inc
add
lods
test
sarl
test
orb
sub
ja
push
test
push
sbb
push
cmpsb
in
or
or
or
das
js
cmpsb
sbb
cmp
or
pop
adc
xor
pop
repz
movsb
ja
jo
dec
shll
js
jmp
jbe
adcb
daa
sbb
or
orb
sub
dec
imul
bound
adc
dec
inc
test
add
jne
sbb
and
pusha
rorb
add
ss
inc
pop
imul
and
mov
and
rorb
sbb
ficoms
or
xchg
adc
xchg
hlt
sub
xchg
and
pop
lret
sbb
push
ss
cld
sbb
mov
sub
sbb
and
mov
adc
add
cmp
sub
xor
xchg
cmc
ljmp
dec
sub
cmp
jge
mov
jmp
adc
and
or
sbb
mov
xchg
jg
idivb
imul
mov
jl
scas
sbb
push
inc
add
inc
push
movsb
scas
ret
push
add
add
ror
hlt
adc
jne
add
mov
dec
mov
fistps
push
mov
pop
sub
repz
and
push
addb
or
adc
mov
mov
inc
stos
dec
loopne
and
xor
gs
pop
das
and
insl
cmpsl
add
sub
es
icebp
adc
dec
adc
in
dec
mov
add
add
fdivrs
add
cmp
sbb
sub
je
or
mov
push
cmp
sbb
lcall
or
sbb
leave
cwtl
mov
aam
push
mov
shll
xor
popa
adc
andl
sbbb
push
adc
sbb
js
mov
sbbb
push
mov
jmp
imulb
call
hlt
adc
add
lock
or
or
testl
xor
jle
jge,pt
push
stos
and
push
cmpsb
lcall
xchg
popa
mov
cmp
mov
jno
and
and
jnp
sbb
pop
jmp
test
push
adc
push
jle
andb
pop
outsb
loopne
fisubrs
ljmp
imul
inc
push
push
je
add
ficompl
xlat
or
xor
jl
sub
cmp
or
xor
jne
mov
mov
inc
test
xchg
ret
and
mov
xchg
push
lea
mov
aam
cmp
dec
es
fs
pop
movsb
jg
sbb
lock
repnz
pop
lock
lea
mov
push
pop
hlt
cld
je
xor
loopne
mov
test
movsl
adc
lods
push
rclb
add
xor
lea
fcmovnu
xor
and
or
sbb
add
add
std
ss
imul
jl
popa
lea
test
push
lar
sbb
mov
lock
mov
out
aas
outsb
or
cmp
push
mov
jbe
sbb
in
adc
mov
inc
fsubr
push
pop
jle
sub
ficoml
inc
jge
data16
in
sbb
test
jb
leave
push
into
mov
push
or
cmp
mov
inc
scas
jl
bound
dec
fisttpl
fcoms
xor
sti
shll
mov
adc
mov
or
aad
mov
out
in
jmp
or
movl
and
push
or
in
adc
je
lds
xor
dec
and
icebp
jecxz
mov
inc
pop
gs
rolb
add
aad
jo
dec
or
mulb
in
and
je
sub
les
pop
adcb
mov
and
and
aaa
and
stc
cmp
rorb
aaa
adcl
fwait
idivb
test
or
pop
xchg
ret
scas
adc
mov
out
inc
push
ret
inc
test
adc
or
or
rcrb
xchg
xchg
fistpl
notl
test
xor
cltd
out
adc
sbb
cwtl
add
add
inc
loope
imul
push
inc
sbb
sub
cmp
fisubrs
xchg
or
roll
sub
adc
mov
das
add
jo
jmp
push
aaa
add
imul
add
add
xchg
and
or
rorb
loope
adc
push
jmp
adc
adc
test
rclb
cmpsb
and
rolb
iret
lea
jno
and
mov
movsl
and
cs
fildl
push
loope
adc
xor
xor
sub
pop
adc
push
add
lret
testl
ljmp
sbb
jmp
cmpsb
add
mov
adc
shll
lock
mov
mov
dec
lar
jb
dec
lock
scas
lret
stc
jmp
mov
pop
sbb
sub
dec
add
clc
ss
mov
out
call
inc
push
push
push
jo
sahf
or
cmpsb
xchg
lret
or
cmp
xchg
sub
add
bound
add
pop
orb
or
inc
enter
lea
lods
inc
inc
dec
adc
push
test
adcb
xchg
or
sbb
sar
jns
adcl
mov
add
dec
dec
xchg
jmp
sub
fs
jne
add
sbbb
subl
or
inc
std
mov
add
clc
sti
pop
cwtl
js
mov
sbb
or
mov
shrl
test
mov
or
pop
push
dec
iret
and
sbb
jp
in
sbb
push
or
sbb
mov
rolb
insl
fs
sub
daa
pop
scas
in
or
mov
cmp
push
pushf
movb
lcall
push
and
jge
ljmp
push
and
dec
sbb
jo
inc
inc
pop
or
adc
stc
xor
hlt
lock
xor
hlt
dec
sbb
stos
insb
sbb
test
out
xchg
sub
adc
lcall
push
jnp
xchg
in
push
mov
shlb
add
sbbb
cmpsl
mov
in
mov
cmp
rorb
not
das
rorb
adc
mov
mov
mov
psllw
testl
loop
loop
dec
mov
cmpl
sub
or
je
jb
sub
test
and
sahf
shrb
cltd
inc
js
pop
pusha
xchg
adc
or
or
lods
ds
andl
mov
stos
pop
inc
sbb
inc
xor
pop
or
fiadds
sbb
sbb
enter
add
insl
and
movsb
icebp
or
adc
inc
imul
mov
mov
cmp
pop
fisubrl
adc
push
pop
xlat
fnstcw
mov
or
inc
sub
cmp
add
or
xor
addb
jmp
outsl
xchg
or
inc
push
push
pop
xor
xlat
rorb
xor
aas
inc
push
push
jns
inc
pushf
das
loopne
lods
dec
push
jne
mov
sub
daa
add
cs
sub
test
das
les
inc
dec
scas
ret
add
mov
sub
inc
mov
mov
mov
add
cmc
imull
sub
xchg
repnz
mov
enter
xor
add
xchg
pusha
sbb
xor
mov
test
inc
fiaddl
mull
loopne
adc
stc
or
jecxz
rolb
or
and
enter
pop
mov
outsl
and
mov
sbb
inc
and
icebp
sbb
xchg
cli
hlt
frstor
or
ss
out
incb
cltd
add
inc
or
push
stc
jo
push
decl
adcl
cmp
repz
adc
movsb
pop
cmp
adc
xchg
cwtl
lahf
mov
add
cmp
push
xor
es
xor
cmp
push
push
rcrb
mov
cmp
pop
movsl
mov
and
mov
pop
lock
or
stos
movsb
adc
or
testl
xchg
loop
rcll
cmp
xchg
jecxz
imul
clc
stos
hlt
mov
adc
test
cmpsb
dec
push
or
sarb
pop
dec
in
stos
call
cmpsl
divb
jne
jae
test
lret
mov
sub
testb
jo
adc
jne
pop
pop
lock
sete
fstpl
lods
push
dec
and
xor
movhlps
mov
push
or
imul
rcll
loope
lods
das
insb
jb
pop
lock
loopne
lahf
adc
push
dec
xor
pop
cmp
in
fists
insb
and
add
adc
daa
insb
pop
push
sbb
sub
pop
sub
mov
popf
lock
lret
push
cs
cmp
shr
pop
sbb
pusha
add
mov
sbb
mov
ret
add
jmp
lret
push
arpl
imul
outsl
sbb
xchg
sbb
and
adc
minps
dec
fadds
push
adc
sbb
js
pop
loopne
push
fstpt
xlat
xlat
push
adc
test
out
jae
push
cld
filds
add
add
xor
fdivrs
test
push
inc
or
xchg
mov
popa
inc
addl
mov
add
and
push
flds
test
das
cltd
xor
push
adc
xchg
lret
mov
jl
pop
dec
sbb
xchg
lret
andb
add
push
arpl
dec
aaa
out
add
ds
cld
je
xchg
ret
fdivrs
popf
inc
mov
fucomip
jle
das
or
in
pop
xorb
pop
mov
xchg
popa
popa
js
cmp
jno
hlt
clc
movsl
sahf
fmull
and
mov
add
sub
cli
pop
mov
mov
push
and
push
fs
xor
adc
xor
jg
mov
mov
in
pusha
loopne
and
invd
mov
aad
cmpsb
mov
mov
out
imul
popf
cmpsb
ss
ss
ss
popa
xor
add
es
lahf
daa
adc
dec
in
arpl
push
pop
out
inc
cmp
xchg
adc
and
cmpl
inc
and
lods
sbb
roll
cmp
mov
fs
mov
gs
insb
inc
dec
sub
cmp
pop
adc
lock
es
mov
and
lcall
jnp,pn
aad
mov
shr
xchg
and
sbb
pop
pop
xchg
mov
xor
dec
mov
cs
adc
insl
or
pop
adc
or
push
stc
pop
test
mov
mov
int
or
sub
cmp
add
js
jno
cltd
mov
and
mov
aaa
adc
popa
sub
inc
mov
call
push
nop
xchg
jnp
insl
push
movsb
shll
jo
mov
lret
cmp
sti
and
push
pop
jmp
adc
outsl
les
cmp
inc
ret
cmp
test
push
mov
mov
pushf
dec
jg
mov
dec
xchg
jb
push
add
roll
int3
jg
cmpsb
sti
gs
mov
sbb
cs
loopne
and
push
pop
insb
scas
sub
push
mov
int3
and
fstpl
xchg
sub
add
or
cmpl
movsl
sbb
dec
or
mov
lock
lahf
int3
adc
and
mov
js
xor
adc
or
je
dec
pop
adc
add
andb
sub
add
mov
add
or
pop
adc
data16
movsb
addr16
mov
mov
lret
jne
sbb
jle
sbb
arpl
movsb
rcrb
push
adcb
adc
adc
push
mov
jae
and
or
call
nop
or
cmpsb
mov
out
outsl
andb
sub
push
cmp
xchg
jg
push
cmp
imul
mov
fdivs
xor
sbb
push
leave
jg
fs
cltd
inc
and
jl
fistpll
pop
pop
stc
fmuls
imul
cli
sub
leave
add
movsb
jo
xor
testl
sub
add
sub
inc
add
inc
push
adc
cmpsl
shrb
push
pop
dec
sub
and
or
leave
es
and
add
or
mov
adc
mov
add
js
push
lea
add
mov
mov
ret
and
or
push
dec
jecxz
xchg
ss
adc
jge
xchg
or
add
push
pop
orl
push
sti
cmpsb
mov
sti
dec
fsubl
sbb
pushf
enter
daa
or
mov
popa
mov
push
jne
fsub
sahf
das
sbbb
testb
or
or
inc
add
or
push
call
pop
add
lcall
nop
lods
push
fiaddl
les
xor
rorb
mov
add
add
mov
pop
jle
inc
jle
lahf
insb
sub
and
repnz
push
push
xchg
and
jg
pop
ret
dec
sbb
dec
or
lret
jge
dec
gs
push
push
insb
cmpsl
or
push
push
push
sti
iret
sub
negb
add
cmpl
dec
stc
jp
sbb
pop
dec
add
scas
sbb
das
inc
add
adc
or
fsubrs
pop
aas
lods
or
in
mov
loop
cmpsl
lar
pop
stc
sbb
pop
mov
lock
mov
sub
or
and
je
mov
ja
cmp
popa
aad
test
mov
or
jo
mov
loopne
add
push
jo
inc
dec
fs
cmpsb
cltd
push
adc
push
push
xchg
lret
or
das
dec
jnp
fisubs
call
mov
stos
ret
inc
es
repz
sub
ret
and
xor
add
pop
les
inc
lahf
sbb
xchg
add
jle
xor
dec
jne
das
pop
jge
daa
fcomps
ja
cmpsl
mov
or
mov
popa
test
xor
pusha
inc
sahf
lret
or
mov
mov
push
lea
or
cmpsl
inc
push
cmp
shrl
outsl
add
mov
xchg
xorl
mov
fistpll
inc
or
inc
xchg
push
aaa
lret
push
and
fdivrl
adc
inc
and
or
pusha
pop
pusha
dec
cmp
inc
mov
jecxz
push
adc
dec
sub
cmovs
sub
and
imul
or
sbb
add
and
outsb
sub
jmp
push
popf
add
ret
pusha
cmovb
push
mov
adc
test
out
pop
sub
je
jmp
mov
fsubr
outsl
scas
sbb
jmp
adc
and
jp
jmp
sub
lret
add
adc
aad
lds
rcll
xchg
fisttps
mov
add
mov
or
xchg
cs
or
push
popf
dec
subb
xchg
cmp
sub
lods
jnp
rcll
push
jnp
pop
ror
nop
sub
fs
dec
in
cwtl
jl
and
test
movsb
jb
shrb
lods
hlt
mov
orl
sbb
cmpsb
and
xor
and
push
dec
dec
dec
dec
push
mov
dec
and
dec
dec
inc
xchg
insl
insl
shlb
inc
es
push
inc
gs
push
and
push
gs
xor
dec
push
imul
out
push
dec
and
jne
das
push
or
add
push
dec
xchg
inc
gs
jae
imul
out
js
insb
or
inc
xchg
dec
jae
sbb
ss
pop
decl
and
mov
jno
cmp
sbb
loope
rcl
push
sbb
je
jmp
mov
inc
add
mov
jge
and
push
insl
scas
or
or
jnp
sbb
daa
push
stos
adc
jnp
push
idivb
int
push
sub
push
fadds
cmpsb
and
or
fisubrl
xor
das
push
mov
ja
addr16
and
movsb
sbb
dec
mov
mov
add
xor
push
sub
loop
sub
jmp
pop
mov
xor
pop
jbe
ss
sub
or
insb
xchg
ret
xchg
lret
xchg
dec
sub
adc
or
sbb
ret
cltd
sbb
imul
movsb
jo
push
jbe
shr
mov
push
dec
mov
pop
xor
pop
xchg
pop
cmpb
jns
test
js
mov
loopne
mov
lock
push
xlat
sub
lea
push
push
lock
xchg
push
add
mov
cmp
movsb
scas
mov
add
lret
out
dec
call
mov
sub
shlb
mov
enter
mov
mov
cld
sub
call
mov
sar
xor
pop
movsb
add
sub
sbb
shlb
ljmp
movsl
and
scas
out
and
das
aaa
outsl
pop
stos
fbld
inc
gs
push
mov
imul
sahf
movb
and
xchg
xor
push
push
dec
mov
call
aad
sub
aas
mov
loopne
adc
xor
mov
xor
cmpb
je
add
or
das
push
je
adc
je
adc
loop
adc
xchg
mov
outsl
mov
sahf
aam
mov
repnz
ret
inc
inc
mulb
add
adc
mov
inc
pop
loop
imulb
ret
adc
stc
lods
imul
aam
adc
popa
mov
loope
push
sub
push
das
inc
pusha
push
xchg
adc
dec
nop
loopne
jno
add
out
push
pop
cmpsl
push
inc
mov
add
mov
inc
adc
stc
mov
scas
push
fisttpll
les
lock
insl
mov
movsb
cmpl
aad
push
iret
sbbb
inc
or
mov
sbb
cltd
movsb
or
sbb
adc
add
popa
dec
dec
lcall
dec
and
dec
sbb
add
xchg
add
data16
sbb
sub
pusha
ret
ret
dec
and
push
and
mov
xchg
sub
mov
cmpsl
ja
out
pop
mov
iret
adc
cmp
adc
pop
add
loopne
fldl
inc
ret
movsb
shr
mov
in
sbb
push
add
daa
inc
loope
in
mov
dec
inc
leave
push
push
push
push
orb
or
sbb
adc
xor
and
sti
out
xchg
mov
dec
imul
mov
push
add
outsl
add
arpl
mov
push
or
adc
outsl
pop
js
jnp
idivb
bound
pop
es
jb
arpl
jnp
jb
popa
or
out
mov
bound
jbe
es
fdivp
fisubrl
jo
addr16
out
jnp
jb
addr16
pop
lods
mov
mov
and
cmpsb
insb
daa
repz
mov
sub
fcomi
out
fisubrl
loop
sbb
dec
fcmovnu
imul
xchg
pop
fs
daa
mov
cmp
pop
je
jo
fidivs
arpl
jns
outsl
xor
pushw
das
add
xlat
idivb
pop
scas
pop
or
sbb
nop
xchg
punpckhbw
adc
push
fs
shrb
mov
cmp
push
or
outsb
je
fs
sbb
inc
fiaddl
nop
mov
mov
and
sbb
xchg
or
testb
cmp
sub
insb
movsb
add
rcrb
inc
pop
push
loope
and
adc
punpcklwd
and
lcall
xor
inc
sbb
loop
cmp
stc
ds
mov
dec
mov
add
push
adc
dec
cmp
cmpsl
fs
sahf
mov
mov
add
and
nop
outsl
mov
cmpsb
add
mov
loope
adc
mov
sbb
es
in
bound
movsb
add
sbbb
xor
push
push
fadds
jb
sub
cmp
xchg
xchg
mov
or
arpl
adc
int3
adc
mov
cmp
mov
test
cltd
pusha
xchg
cmpb
fucomip
push
mov
data16
aas
fwait
inc
add
adc
mov
cmpsb
test
faddl
rcll
outsl
sbb
push
or
sub
inc
mov
es
subb
ja
mov
mov
cmpsl
jns
repz
add
push
lret
sub
push
sbb
sub
inc
fistpll
push
jns
inc
add
xor
add
dec
in
and
add
add
push
scas
pop
aaa
xorl
shrb
mov
sbb
test
out
lret
add
add
ljmp
aas
push
add
pop
or
or
or
or
or
or
jns
adc
adc
out
sahf
out
adc
out
sahf
sbb
sbb
and
and
repz
and
int3
push
xchg
test
lret
repz
in
std
push
int
jns
out
xor
arpl
sahf
out
xchg
cmpsl
mov
sahf
cld
or
out
sahf
out
push
bound
lahf
out
sahf
mov
into
xchg
or
ljmp
sbb
imul
and
adc
adc
jb
in
push
or
test
sbb
sbb
xchg
push
cs
or
dec
push
and
jb
in
sub
sub
pop
push
mov
adc
adc
adc
inc
push
inc
dec
in
lret
sbb
movsb
jb
push
sbb
test
pop
jns
dec
xchg
sbb
push
sub
pop
bound
stos
push
jns
arpl
and
movsb
xor
and
push
test
addr16
push
ljmp
dec
mov
push
cltd
ret
cmpsb
add
cmp
es
dec
imul
inc
dec
rorb
fs
fdivs
test
dec
fnstsw
or
pop
mov
dec
les
leave
clc
push
adc
pop
push
arpl
shr
sbb
orb
xchg
xchg
adc
out
sub
push
cmp
mov
int3
mov
push
pop
sbb
test
mov
fwait
in
mov
lcall
aaa
jle
fdivr
cmpsb
and
pop
dec
int3
mov
or
mov
shrl
xchg
cmc
or
loopne
push
rolb
mov
scas
nop
mov
jnp
pop
push
pushf
loopne
mov
insb
mov
out
addr16
sbbl
mov
dec
je
ret
shlb
xor
xchg
cltd
inc
mov
in
xor
pop
or
and
push
mov
and
jl
add
xchg
aaa
or
lea
lahf
fs
add
or
aaa
insb
push
outsl
dec
xchg
js
out
fbstp
add
push
or
fdivrs
xor
jle
and
sbb
xor
mov
fwait
loopne
inc
rcrb
and
sub
popf
xor
push
push
mov
dec
push
fldl
fsub
repnz
push
inc
jg
pop
jl
push
shll
fsubrs
in
out
fidivrs
jmp
adc
and
aaa
pop
xor
sbb
fisubl
and
imul
ljmp
subb
or
ja
loop
mov
je
js
fwait
js
mov
js
jbe
dec
cmp
sub
inc
xor
or
mov
mov
scas
add
ret
outsl
scas
or
dec
outsl
std
ds
and
arpl
lds
sbb
repz
sbb
inc
adc
lret
and
push
rol
xlat
adc
inc
inc
lea
xor
dec
stos
push
jl
cmp
std
mov
add
outsl
inc
and
sbb
js
movl
jp
insb
sbb
adc
or
cli
adc
add
inc
les
sbb
adcl
orb
add
and
cmp
pop
shrl
or
and
lret
push
fisttpl
inc
insb
cmp
and
mov
ret
xlat
or
mov
xchg
jo
loopne
jns
lea
adc
jge
aas
or
jnp
xchg
xor
xbegin
xor
nop
cmp
scas
push
lret
bound
mov
clc
pop
daa
jo
pop
adc
mov
call
inc
sbb
lods
scas
and
cmp
mov
sarb
addr16
add
sub
js
or
jmp
mov
or
xor
mov
hlt
jmp
adc
lods
daa
mov
pop
cld
xor
mov
jno
cmp
cmpsl
in
or
insb
inc
or
in
jge
sbb
cmp
mov
cmp
xlat
inc
sbb
jns
sub
imul
xlat
xchg
lea
adc
mov
dec
jbe
add
xor
sbb
cmp
xchg
push
cmp
test
xchg
pop
add
lods
movsb
enter
mov
adc
and
pop
incl
mov
mov
lock
add
jmp
scas
lock
sub
lret
push
popa
adc
std
gs
and
pop
or
mov
cmp
shlb
mov
inc
and
add
or
adc
jg
rcl
aam
dec
xor
fadds
imul
add
int3
and
mov
fimuls
mov
mov
and
push
adc
fwait
loope
rcl
lds
inc
cmpl
cs
icebp
leave
scas
mov
push
and
jle
push
inc
fcomps
xor
adc
push
or
inc
loop
add
dec
sbb
clc
add
mov
pop
aaa
inc
adc
inc
dec
inc
out
pusha
addb
aam
movsl
or
pop
rclb
sbb
add
lds
sbb
push
pop
divb
inc
pop
loop
push
mov
mov
fwait
adc
movsl
xlat
shr
jbe
inc
xchg
pop
inc
or
mov
je
add
mulb
sub
dec
loopne
add
xchg
dec
xor
test
movsb
sbb
adc
fsubs
clc
pop
push
scas
push
movsl
loop
dec
pop
in
xlat
test
pop
fdiv
cmp
dec
and
cmp
sbb
sti
and
jg
test
imul
pop
sbb
push
add
sbb
mov
cmp
jne
int3
sub
add
rclb
in
mov
cmc
mov
pop
call
call
dec
sbb
in
nop
cmp
xor
mov
adc
ja
inc
cmp
fs
xor
sub
mov
xlat
fistpl
xchg
mov
nop
imul
test
sahf
ret
aas
jne
daa
mov
ljmp
pop
or
or
inc
inc
or
lcall
add
inc
inc
adc
adc
push
cmpsl
ret
jmp
cmp
cmc
and
rcr
inc
mov
dec
push
inc
les
adc
or
pusha
add
add
fidivs
test
sbb
pushl
mov
movsb
leave
ljmp
and
data16
xor
fnstenv
imul
popa
pusha
es
push
nop
ret
test
in
rorb
cwtl
add
hlt
ret
mov
cmp
clc
dec
movsl
lock
inc
xor
sub
xchg
dec
orb
and
ret
inc
movsb
ret
data16
lahf
ljmp
dec
es
pop
jbe
fs
add
shll
sbb
inc
dec
xor
popf
and
dec
dec
icebp
rcrl
dec
mov
push
inc
inc
addl
les
push
or
or
movsl
insb
add
das
cmp
pop
scas
sbb
fildl
lcall
or
or
adc
movsl
add
insb
loopne
movsb
jb
jge
dec
hlt
dec
pop
sarb
adc
iret
dec
cmp
lcall
mov
inc
mov
fisubrs
mov
pop
test
pop
mov
nop
or
adc
mov
adc
ljmp
bound
dec
push
adc
adc
xchg
sarb
push
cwtl
dec
enter
xor
push
inc
add
pop
sub
incb
or
mov
insb
sbb
push
mov
mov
js
push
lea
and
and
dec
sbb
fwait
jge
inc
test
push
xorl
mov
in
dec
in
imul
sbb
shlb
dec
popf
test
ret
xlat
call
xor
sbb
push
sub
fisttps
cmpsl
cmp
movsl
or
pop
sub
rolb
jge
imul
adc
loope
sub
mov
subl
xchg
mov
inc
push
cltd
lock
dec
in
pop
sub
jae
dec
in
and
movb
inc
dec
push
incl
cmp
es
addl
jmp
jecxz
cmp
add
in
pop
movsb
loope
bound
push
das
inc
mov
sub
fists
clc
sub
call
hlt
and
sbb
in
leave
das
in
sbb
mov
adc
mov
in
pop
inc
mov
push
ja
test
adc
sub
out
fcoml
lcall
dec
and
and
cs
daa
add
out
daa
or
or
xchg
sbbl
icebp
insb
dec
stos
or
sbb
inc
in
add
or
mov
nop
push
repnz
loopne
test
mov
xor
add
mov
and
and
adc
add
jne
cmc
or
xchg
test
sub
adc
cmp
jne
mov
pop
popa
test
les
addl
sub
mov
fs
les
cmp
and
das
cld
jb
push
or
je
push
pop
pop
cs
cmc
dec
inc
into
arpl
push
inc
mov
and
dec
data16
sub
cld
push
cmp
cmp
add
lock
rclb
mov
scas
adc
jmp
outsl
out
adc
xchg
xor
xchg
sbb
mov
out
and
popa
pushf
pop
pop
es
inc
dec
pop
aam
or
dec
incl
ret
push
pop
decl
xchg
decl
cmpb
inc
arpl
xchg
aas
mov
test
mov
into
lock
inc
jo
cmp
pop
pop
dec
adc
inc
sahf
mov
dec
jbe
mov
lock
inc
adc
ret
inc
and
or
sbb
pop
sarl
clc
out
jmp
negl
xor
pop
push
inc
scas
push
push
adc
gs
pop
cmp
add
fcmovnbe
push
inc
inc
xchg
dec
inc
fisubs
fisubs
and
add
fcoml
push
dec
or
adc
xchg
push
lea
xchg
sub
jb
or
mov
or
out
inc
pushf
lock
push
fists
movsl
inc
or
and
fidivs
repnz
and
iret
jnp
and
xor
sub
jo
or
adc
rcll
inc
push
sub
xchg
and
push
mov
hlt
mov
pop
adc
pop
dec
inc
mov
inc
adc
rolb
sub
das
movl
dec
or
jae
dec
jb
jmp
push
cld
pop
fcmovu
or
iret
call
pop
orb
fmull
push
add
jl
dec
or
int3
stc
popa
jo
cmpsl
sub
or
orl
stos
imul
mov
add
sbb
dec
test
test
fiadds
push
inc
ss
cmp
out
dec
pusha
je
pushf
out
sahf
out
fcomp
loopne
out
sahf
in
in
lock
clc
filds
push
or
cs
cmp
pop
loope
popl
inc
push
add
sbb
jle
nop
fsubs
xor
add
cwtl
fstp
add
sbb
sbb
or
mov
push
push
add
dec
out
fiadds
int3
sbb
and
dec
lret
add
xor
xor
pop
cmp
xor
push
mov
push
lea
shrb
imul
push
sub
popa
push
ljmp
movsl
flds
loopne
cmpb
mov
xchg
mov
dec
movsb
jnp
lock
mov
mov
xor
int
xlat
mov
sbb
mov
adc
cld
mov
dec
xchg
or
scas
lock
es
push
es
aas
mov
arpl
mov
inc
sub
ds
add
call
popf
test
ja
sbbb
or
mov
sbb
repnz
test
and
js
xchg
or
imul
loopne
push
push
cmp
pop
xor
adc
leave
add
aad
mov
xor
xor
clc
fsubl
daa
rorl
mov
or
cmp
xor
xor
lret
cmp
push
adc
sarl
jne
jle
hlt
add
adc
cmp
std
sub
dec
cmp
shll
dec
jmp
loopne
mov
push
mov
push
push
pop
cmp
mov
shll
and
dec
xor
and
xchg
mov
loope
jne
movsb
adc
mov
gs
adc
roll
fildl
sbb
jle
shll
inc
daa
or
dec
adc
push
inc
cmovnp
add
data16
fmul
adc
sbb
jo
cmp
sbb
fwait
inc
push
inc
loopne
test
mov
sti
sbb
jg
ljmp
loopne
test
add
scas
jmp
ja
movsb
push
addr16
dec
enter
sub
and
push
push
lret
fidivrl
add
mov
inc
mov
movsb
cltd
xchg
ja
pop
in
outsb
insl
popa
idivl
inc
sub
cmp
sbbl
mov
call
cmc
sub
sbb
inc
inc
pop
fcoms
mov
and
jne
cmpsb
cmp
insb
or
daa
inc
or
push
les
add
pop
mov
je
cmp
fcoms
adc
pop
xchg
subb
ret
test
inc
fildl
sbb
fistpll
adc
xchg
sub
sbb
or
xchg
add
xchg
push
nop
nop
in
aas
sub
cmp
mov
mov
imul
add
xchg
lods
aaa
mov
movsl
ja
xchg
test
jb
sbb
mov
inc
add
pop
test
aas
inc
dec
shll
dec
cmp
cmp
movsl
add
and
sub
pop
inc
mov
leave
gs
jnp
push
adc
add
mov
pop
loope
scas
push
fmull
push
movsb
pop
aas
xor
mov
inc
in
xchg
mov
cmp
add
idivb
pop
imul
ljmp
sub
adc
adc
push
mov
fiaddl
std
lret
out
push
jnp
or
mov
inc
test
movsl
inc
pop
das
dec
bound
loopne
loopne
je
mov
and
inc
mov
jecxz
mov
xor
addr16
rorl
sbb
adc
gs
pop
adc
inc
push
arpl
sbb
enter
lock
mov
add
test
sub
xor
movsl
outsb
or
push
pusha
adc
push
hlt
xchg
dec
addl
pop
mov
xchg
mov
or
lock
js
aad
jmp
push
pop
iret
xchg
cmp
je
int3
push
push
loop
pop
jb
scas
push
inc
jl
inc
push
dec
push
xor
sbbb
jnp
jne
mov
mov
jns
mov
sub
sarl
xchg
mov
jg
test
andl
jns
jl
adc
inc
lea
mov
nop
cmp
xchg
jae
enter
jno
movsl
popa
dec
stos
mov
shll
out
test
test
add
add
lea
inc
jnp
shlb
sarl
inc
adcb
jg
sbb
or
orl
imul
push
pop
or
sub
jecxz
fadds
lret
jne
push
cld
jmp
enter
bound
mov
sbb
adc
adc
jmp
neg
mov
addb
imul
adc
sbb
or
or
add
add
jmp
push
dec
loop
dec
aaa
sub
daa
and
add
inc
popa
aaa
pop
sbb
add
jg
add
mov
inc
mov
mov
cmp
push
mov
push
adc
or
loopne
add
jge
test
lods
add
pop
sbb
dec
add
pop
in
and
adc
mov
inc
dec
adc
mov
xor
pop
xor
sbb
clc
rorb
addb
orl
popa
popa
jecxz
xchg
repnz
dec
je
pop
adc
push
xchg
sub
or
clc
rorb
aas
or
or
sbb
cmpsl
push
je
out
push
xchg
negl
add
nop
cmpb
or
jo
dec
sbbl
add
add
mov
sub
push
push
or
adc
pop
xchg
cwtl
or
xor
xor
cmp
or
mov
mov
jns
imul
enter
push
fsubrl
xchg
sbb
mov
enter
and
sbb
sub
adc
in
cs
data16
nop
pop
mov
loopne
or
dec
into
mov
adc
imul
mov
pop
je
pop
loope
imul
push
jle
fs
cmpsl
sub
les
inc
sub
mov
dec
pop
ja
xchg
adc
outsb
push
add
add
push
loop
movl
push
xor
mov
in
push
negl
dec
lret
adc
xor
nop
pop
add
lcall
mov
xor
or
cmp
hlt
xor
sbb
ds
adc
mov
pushf
pop
xor
push
add
inc
sub
sbb
xchg
or
inc
fnstsw
xor
nop
jp
dec
push
jbe
test
adc
dec
add
mov
add
push
imul
imul
add
std
bound
outsb
or
mov
adc
dec
mov
xchg
dec
fisttpl
push
outsl
mov
rcl
ret
and
nop
prefetch
fistl
dec
ss
inc
xor
sbb
out
sbb
int3
inc
std
das
mov
pop
or
sti
in
invd
add
dec
dec
into
sub
mov
add
ficompl
or
divl
pop
adc
add
or
mov
xor
add
or
fmuls
in
pusha
xor
data16
dec
inc
push
movsl
popa
mov
pop
sub
push
cwtl
mov
push
rcrb
or
or
fs
arpl
xchg
jge
jnp
jne
sbb
xchg
mov
cmp
add
sahf
push
or
add
nop
sbb
sbb
fcomps
daa
fdiv
or
mov
fsubs
xchg
adc
popfw
mov
push
test
clc
xor
gs
add
push
lea
mov
and
cld
xor
lcall
xor
inc
imul
and
jne
xchg
mov
or
adc
adc
int3
scas
or
jns
adc
testl
scas
fwait
sub
ja
xor
add
roll
xor
and
ds
jo
addb
nop
push
sahf
stos
jo
xchg
add
mov
or
imul
or
iret
pushf
bound
mov
or
add
or
rcr
mov
xchg
adc
inc
lods
sbb
xchg
push
adc
sub
outsb
dec
and
and
push
test
and
adc
add
push
dec
push
fwait
add
lock
mov
inc
es
ja
pop
sbb
popa
sbb
inc
cwtl
jae
pop
xchg
dec
add
xor
sahf
push
mov
fs
jo
pop
mov
jo
mov
push
lds
or
jecxz
jbe
mov
sahf
imul
cs
js
push
sub
inc
sbb
add
pop
jo
xchg
dec
cmp
sub
cwtl
push
add
lods
xor
add
inc
sbb
imul
adcl
cmp
add
add
add
lcall
adc
sbb
and
sub
add
adc
addl
mov
add
fs
add
cs
add
dec
add
mov
and
lar
out
inc
or
mov
scas
dec
das
mov
jg
ljmp
ljmp
jmp
loope
call
and
add
idivb
ds
stos
push
jnp
shlb
jl
jge
stc
cmp
es
pusha
in
cmpb
stc
xor
int3
add
lods
sub
lahf
movsb
sub
aam
sbbl
fwait
int
test
xchg
out
fsts
dec
data16
xchg
jnp
out
mov
pushf
mov
scas
mov
push
in
cmp
cmpsb
push
fnstcw
iret
rorl
inc
lods
mov
ja
pop
jne
idivb
mov
faddl
cld
sbb
jnp
fldcw
push
enter
dec
out
inc
mov
loopne
jp
je
pop
pop
dec
push
jl
push
fidivrs
lcall
dec
cmp
and
pop
xchg
and
add
or
testl
inc
push
or
subl
push
mov
insb
or
les
shlb
add
hlt
add
push
jmp
jne
outsl
popl
sbb
adc
inc
mov
lds
pop
and
cmpsb
test
mov
mov
inc
js
push
add
or
pushf
pushl
cmc
sbb
ds
adc
xor
push
in
dec
inc
insb
lock
dec
sub
pop
pop
adc
dec
rorl
pusha
inc
sbb
pop
into
mov
hlt
jo
xor
test
pop
movsb
lock
pop
mov
les
add
pop
mov
sbb
mov
push
loop
push
es
xor
jnp
jno
fcoml
mov
xor
sbb
in
inc
sbb
and
xor
rcll
or
stos
insb
inc
xchg
cmp
xlat
cwtl
loope
cmpsl
mov
jo
inc
push
add
cmc
cltd
pop
enter
xor
fmull
dec
cmpb
add
cmp
and
jo
sub
test
xor
or
dec
push
xchg
push
push
pop
ret
mov
enter
pop
jo
aad
mov
push
je
pop
mov
aas
fldt
and
pop
and
aaa
mov
lds
xrelease
movl
adc
cmp
es
in
sub
ja
xchg
add
fcmovb
mov
cmp
mov
add
jge
ja
cld
pop
and
sub
or
jecxz
or
push
pop
and
push
or
xchg
or
inc
sbb
jne
into
jns
jo
mov
dec
rolb
das
int
xlat
dec
pop
cltd
add
jne
lea
or
fldlg2
mov
mov
jl
add
jns
into
xchg
or
inc
nop
sbb
pop
fsubr
push
mov
lret
jl
or
xchg
dec
or
jl
push
daa
cmp
test
pop
xor
fdivl
push
popl
cmp
xor
les
outsb
mov
ss
imul
add
rorb
sub
inc
or
popa
pop
jo
test
inc
fildll
xor
cmp
cmp
mov
js
add
int3
lcall
pop
cmp
jge
jge
cmp
orl
je
vprotd
movsl
xor
dec
adc
jne
mov
push
hlt
jo
and
or
add
xchg
mov
or
ljmp
push
adcl
cwtl
inc
mov
mov
jmp
xorb
xlat
mov
xlat
adc
jmp
fsubs
cmc
dec
mov
lret
mov
sub
and
dec
out
ficoml
sub
mov
dec
sbb
push
out
dec
inc
cmpsl
ss
rolb
rcrb
adc
int3
mov
push
sbbb
sar
clc
ret
adc
inc
cmp
dec
inc
add
pop
fcomps
mov
rcr
sub
inc
loopne
inc
pop
inc
movsb
adcl
and
pop
xlat
dec
adc
add
add
or
dec
jae
in
push
je
sti
dec
ret
adc
dec
popa
pusha
inc
dec
icebp
aad
cmp
and
dec
add
sbb
cmp
cmpb
loop
or
shr
dec
inc
popa
pop
repnz
movsl
fcomps
jbe
or
cmpsl
inc
fwait
dec
shl
sahf
call
sbb
das
or
pop
loope
sub
inc
sbb
cmp
push
xchg
sbb
pushf
and
or
add
push
mov
sbb
push
loope
mov
pop
enter
lcall
jo
inc
int3
xor
adcl
bound
subl
xor
cs
jge
add
test
sub
out
jge
xor
pop
cmp
adc
inc
inc
loopne
push
inc
shl
or
dec
dec
pusha
pop
jne
orl
push
xlat
into
test
push
add
add
or
jne
cmpsl
and
aam
lret
arpl
and
jbe
faddl
inc
sahf
outsb
mov
rcll
adc
sbb
gs
aas
data16
push
dec
mulb
bound
dec
addr16
lahf
sbb
test
mov
hlt
dec
jnp
sbb
lods
push
in
xlat
je
ret
sahf
xlat
ljmp
out
xor
inc
out
mov
test
lret
add
lahf
out
movsb
push
add
pop
inc
mov
lock
sahf
ss
pop
mov
popf
sub
sysret
repnz
shrb
pop
push
mov
cmp
outsb
nop
nop
sbb
ds
sbb
inc
outsb
cmc
ja
dec
mov
mov
xchg
sbb
mov
mov
mov
adc
sub
cmp
scas
mov
mov
sysret
sbb
sbb
andl
fadds
js,pt
inc
shl
aas
cmpl
out
sbb
aaa
mov
push
add
push
in
and
xchg
or
jb
adc
loopne
pop
push
andps
lds
clc
add
repnz
pusha
mov
iret
push
pop
add
ret
mov
loop
sahf
mov
in
sub
pop
stos
pop
daa
jo
sub
shlb
or
add
add
xchg
push
repnz
loopne
nop
dec
xchg
repnz
daa
xlat
xor
imul
sbb
dec
out
popa
inc
add
cmp
sub
pusha
sbb
add
sbb
enter
add
sub
es
lods
dec
loope
sub
mov
out
sti
xor
insl
cmpb
sbb
ret
out
rclb
jg
xchg
add
push
pop
imul
fsubs
jne
or
je
and
push
push
inc
push
lods
das
and
gs
or
adc
jb
das
loop
xchg
shll
ljmp
adc
call
or
xor
in
mov
or
sbb
dec
pop
sti
jmp
or
iret
pop
add
or
push
and
xchg
lcall
mov
outsl
fs
pop
mov
adc
cmp
cmp
jl
je
popa
je
adc
inc
cwtl
pop
dec
xchg
mov
fs
xor
daa
outsb
mov
popa
hlt
pop
adc
sbb
jae
hlt
mov
cmp
pop
pop
inc
add
out
add
pop
scas
dec
add
loopne
inc
mov
mov
or
xchg
inc
cld
or
add
and
call
adc
sbb
dec
sarb
mov
insb
scas
inc
popf
out
data16
rclb
and
xlat
inc
test
scas
xchg
dec
lret
cli
je
push
cmp
aam
sbb
cld
pop
dec
test
inc
cmp
push
divl
mov
push
sbb
jg
or
cmp
pop
lahf
lods
sub
sti
je
mov
xchg
sbb
jp
mov
add
daa
fisubs
cwtl
loopne
and
enter
xchg
inc
pop
insl
push
mov
in
mov
std
jge
lds
cmp
insb
int
cltd
pop
push
aam
push
stos
adc
jmp
test
fs
cmc
ret
jae
mov
mov
and
shr
adc
sbb
mov
inc
xchg
mov
outsl
adc
dec
jg
xor
ljmp
faddp
pop
adc
cmp
xor
call
adc
andl
mov
aad
iret
sub
and
fsubs
inc
popa
pop
pop
add
add
or
xchg
out
add
add
adc
mov
adc
push
in
cs
es
jle
aaa
scas
sbb
add
dec
push
mov
dec
ret
cwtl
mov
jg
testb
sub
adc
add
add
cs
mov
and
xchg
cltd
sbb
loope
lret
stos
sbb
ret
shlb
fiadds
movntq
int
pop
addr16
fadd
or
je
roll
bound
sub
mov
xor
bound
or
sub
loop
push
adc
add
cmpsl
add
and
sub
adc
aaa
and
cld
adcb
mov
mov
stos
addb
inc
mov
adc
int
push
xor
or
ljmp
push
xchg
mov
push
sarl
jno
inc
or
cmpsl
es
push
in
sub
or
add
or
sbb
mov
insl
ds
push
inc
add
mov
inc
pop
xor
daa
push
sti
mov
push
dec
mov
popa
add
add
or
movsb
es
or
and
js
mov
pop
jne
subb
push
fwait
add
insl
and
lods
ljmp
sbb
sahf
fld
pop
imul
in
push
mov
inc
cs
add
xor
mov
adc
jns
cmpsb
lock
add
add
inc
mov
mov
or
aaa
inc
sahf
or
inc
add
add
fists
xchg
roll
pushf
xchg
xor
enter
inc
mov
sub
popa
pop
add
inc
outsb
adc
scas
insb
jge
aas
fsubrs
xchg
add
pop
cmp
cmp
sbb
add
mov
test
push
push
cmp
decb
adc
dec
pop
mov
sub
fsubl
adc
enter
fcoml
add
sub
or
xor
mov
adc
sbb
sub
mov
cli
in
xlat
popa
inc
aam
lock
mov
or
outsb
mov
bound
outsl
fmuls
pop
push
sub
mov
sti
pusha
adc
mov
mov
add
std
or
hlt
neg
jmp
arpl
adc
mov
mov
and
mov
mov
jle
test
adc
and
push
mov
int
pop
dec
ja
jo
sti
xchg
push
push
imull
aas
adc
xchg
mov
jg
add
scas
or
pop
xor
inc
adc
outsb
adc
popf
adc
xlat
and
aas
repnz
add
addb
or
je
push
shll
jb
lret
jne
es
sub
inc
sbb
pop
adc
insl
and
call
pop
shll
cmp
or
inc
mov
sub
add
shll
ljmp
inc
inc
or
pop
xor
sti
movsb
test
insl
adc
sti
jmp
popa
fcoml
aas
jo
lock
push
jg
div
sub
cmpb
and
test
sub
xor
roll
fucom
test
xor
test
dec
fadds
out
out
enter
cmp
dec
push
pop
pop
aam
xor
rcrl
and
movsl
mov
jno
xor
or
popl
jge
pusha
mov
jb
je
ss
jmp
in
nop
lock
cmpsb
dec
pop
lds
mov
inc
and
sub
lahf
out
sahf
inc
bound
push
mov
xor
icebp
cmp
and
mov
sar
aaa
add
call
dec
jne
testb
jle
mov
js
lret
push
sbb
pop
dec
out
mov
imul
push
sub
dec
jno
sbb
sti
and
sahf
pop
gs
adc
push
sub
jg
and
or
xchg
fs
hlt
sbb
xor
aas
adcb
push
std
pop
js
adc
adc
or
push
dec
inc
mov
lret
mov
imul
or
aaa
movsb
ja
cld
jo
sahf
inc
sbb
or
mov
sbb
inc
jle
dec
sub
popf
and
ja
testb
data16
cmp
mov
dec
pop
das
add
push
or
push
sbb
enter
insb
pop
mov
loop
lock
jp
push
xchg
mov
rolb
or
push
inc
sbb
mov
inc
push
jbe
les
xchg
or
je
mov
outsl
test
mov
das
mov
adc
leave
sub
adc
movb
bound
add
dec
add
sub
jbe
sbb
xlat
cmpsb
movsb
or
std
cld
shrl
pop
imul
hlt
sbb
js
adc
int3
pop
add
mov
push
inc
inc
push
cld
mov
insb
or
and
jb
adc
cmp
xchg
pop
aam
xor
push
sub
pop
es
adc
xorb
inc
mov
repz
push
js
add
ret
adc
sbb
clc
les
sbb
sbb
push
jbe
add
push
jb
sbb
gs
stos
mov
stos
ja
mov
loop
xor
push
test
fwait
add
or
icebp
mov
lods
jmp
or
add
push
mov
nop
std
les
pop
push
and
mov
xchg
ret
mov
fmull
ret
xchg
movsb
lods
or
test
xor
pop
push
aam
adc
cmpsl
lcall
scas
push
shlb
rclb
les
mov
push
sub
inc
ret
add
ds
dec
inc
iret
orb
and
es
xorl
fcomps
mov
dec
sbb
cmp
in
adc
xor
adc
dec
aaa
sbb
and
inc
jl
xor
mov
shlb
dec
imul
mov
cld
pop
dec
lock
xor
fdivl
cmp
rorl
cmp
pop
pop
mov
or
out
sub
mov
jp
mov
inc
add
push
and
lock
int3
ss
mov
addb
cmp
and
push
in
push
jno
mov
mov
xchg
mov
lock
or
dec
jnp
push
jns
mov
idiv
ja
xchg
pop
je
mov
insl
and
addb
inc
pop
loope
emms
lea
test
push
push
add
dec
mov
dec
mov
adc
inc
adc
adc
ffree
sbbb
loope
mov
js
add
or
aad
push
sub
or
sbbl
xor
icebp
stos
xor
push
imul
out
popl
testb
cmc
and
add
jb
xor
loopne
cld
dec
movsb
push
adc
sub
or
fisubrl
ret
aas
pop
sub
add
xlat
sbb
lcall
sbb
xchg
mov
cltd
xchg
test
xchg
lea
stos
jmp
mov
push
sbb
les
mov
ss
inc
std
cmp
popl
outsl
or
lds
pop
mul
mov
or
pop
mov
fstpl
jle
mov
ja
xor
mov
mov
inc
xchg
loopne
insl
dec
or
sbb
insl
scas
addl
ret
sbb
leave
inc
scas
push
das
jns
inc
rsm
jb
adc
adc
adc
aam
stos
cmp
push
mov
fs
add
push
sub
inc
xchg
add
test
and
add
nop
add
cmp
call
xorb
les
fidivrs
xchg
dec
push
jns
pop
dec
je
lods
sbb
add
je
leave
or
mov
sub
xchg
mov
ss
cwtl
and
jge
imul
mov
sbb
pop
shl
fistps
fimuls
popa
jns
or
sbb
cmp
mov
inc
push
push
movaps
mov
fbld
clc
call
push
adc
or
je
add
iret
imul
push
jle
and
push
rolb
mov
push
jle
arpl
push
dec
sbb
push
arpl
push
fs
or
or
scas
shl
xchg
add
cs
mov
inc
or
adc
dec
mov
ja
jb
inc
add
daa
mov
dec
push
add
mov
or
mov
iret
inc
inc
out
imul
mov
pop
leave
adc
mov
and
add
in
mov
fistps
ret
inc
aam
or
add
xchg
out
dec
arpl
testb
add
sbb
push
loopne
dec
pop
rolb
mov
add
inc
push
and
push
xchg
lea
xchg
test
mov
mov
adc
mov
in
push
xor
inc
xchg
push
mov
jle
inc
lods
adc
cmp
ret
icebp
push
xchg
ss
cmpl
test
fists
sbb
dec
subb
fs
and
pop
dec
mov
push
and
fcoms
lea
inc
add
and
movsl
push
ret
lock
in
les
push
test
or
xor
lds
daa
orl
jae
lea
je
adc
movb
mov
add
into
sub
mov
xor
or
inc
or
arpl
jns
mov
pusha
adc
sub
and
loopne
es
cmp
mov
or
movsb
jmp
inc
jno
or
andl
adc
daa
iret
fidivs
inc
cmp
or
mov
fidivrl
jb
out
inc
or
push
or
sbb
mov
or
xor
jp
pop
movsl
push
jl
sbb
dec
jmp
and
hlt
cmp
lods
dec
pop
jge
hlt
dec
add
jno
jo
push
cmpb
or
and
pop
movsl
aaa
or
loopne
inc
jne
sbb
or
ds
mov
add
mov
inc
andb
mov
inc
aam
mov
lea
mov
push
push
adc
cmp
imul
push
ror
shlb
xchg
je
push
cwtl
in
push
and
stc
adc
add
cmc
sub
cmp
push
mov
jnp
xchg
sbb
popf
push
movsb
push
pop
pop
cmpsl
or
dec
fists
push
push
inc
sti
mov
and
push
cs
jno
and
mov
and
cltd
adcl
sub
inc
les
or
xor
push
jo
outsl
pop
dec
mov
jecxz
mov
xchg
insl
popa
insb
add
push
outsl
lcall
or
add
addr16
cmp
sub
add
cld
dec
lods
das
push
pop
aam
hlt
sbb
pop
mov
and
fstl
iret
xchg
add
mov
jno
sub
add
mov
fs
call
repnz
xchg
push
adc
sub
push
lods
jmp
es
mov
push
cmp
cmp
jne
int3
inc
xor
xor
les
adc
add
cmp
adc
push
jae
and
inc
inc
leave
mov
dec
jb
adc
loopne
or
inc
cld
in
jne
sub
or
ja
mov
or
mov
xchg
mov
add
movsl
leave
cmpl
sub
pop
testb
das
shlb
inc
inc
push
xchg
gs
sub
push
jae
fidivs
dec
sbb
sahf
mov
std
sub
cmp
test
pop
mov
in
and
sub
and
cwtl
jg
xor
hlt
fdivs
push
push
pop
mov
mov
jns
es
and
push
inc
and
push
inc
mov
test
xor
cs
sub
into
xchg
adc
mov
pop
insb
jl
and
movsl
ret
bound
and
call
cmp
inc
and
adc
mov
mov
push
add
dec
loopne
iret
sub
dec
lret
xchg
test
jb
pop
test
inc
jb
sbb
arpl
sbb
and
lods
cli
or
aam
movb
jno
aam
cmp
pop
mov
lcall
add
fstpl
inc
cmp
inc
inc
dec
lock
pop
fcompl
mov
inc
cltd
xor
pusha
xor
jge
ljmp
xor
sbb
sbb
nop
add
xor
xchg
xor
dec
enter
fwait
push
push
test
pushf
enter
in
lret
leave
insb
in
mov
dec
mov
jmp
movsl
xchg
adcb
gs
cmp
rolb
sub
or
rcr
push
xchg
add
stos
inc
loop
mov
pop
jno
or
lret
jecxz
aaa
mov
mov
aaa
pcmpeqd
and
or
adc
lahf
push
inc
and
pop
jns
adc
stc
aas
push
jbe
and
lahf
ret
adc
sbb
push
adc
xor
cmpsl
ror
imul
pop
adc
adc
adc
mov
lds
ret
dec
les
aas
adc
gs
cmp
std
pop
imul
mov
test
mov
mov
adc
mov
sub
shlb
sahf
and
dec
add
js
arpl
push
and
xchg
push
pusha
push
imul
imulb
lds
push
mov
mov
out
imul
inc
cmpb
inc
movsl
test
xor
cld
sub
jl
orl
test
mov
lea
das
mov
inc
cmpb
clc
movsl
pop
sbb
cvtps2pi
sbb
enter
fs
add
add
xor
aaa
adcl
fcmovu
cmp
cmp
add
clc
add
adc
adc
adc
frstor
daa
adc
or
into
pusha
std
adc
push
sub
sub
cmp
imul
sbb
or
cld
adc
add
dec
push
cli
mov
cmp
fmul
bnd
add
inc
pop
inc
mov
inc
add
int
add
lods
pop
ss
lahf
cmpb
add
rorb
aad
fwait
pusha
lods
out
imul
and
or
subb
movsb
mov
sbbb
or
push
mov
sbb
or
adc
lds
sub
cwtl
push
adc
xor
dec
jno
test
xor
xchg
cmp
ja
lcall
add
adc
xor
call
int3
sbb
jb
or
outsl
push
add
mov
loop
adc
cwtl
add
jbe
pop
out
adc
xchg
sub
pop
push
jo
push
or
fs
cmp
mov
add
xor
mov
addr16
andl
testb
inc
orb
adc
outsb
test
mov
cmp
loopne
xchg
ds
add
or
addr16
cmp
setns
fdivr
jne
sub
xchg
sbbl
jno
enter
jb
dec
xchg
leave
outsl
add
and
out
mov
xorl
sbb
sbb
add
cld
dec
jnp
inc
jp
and
data16
jne
mov
fiadds
insl
inc
push
mov
add
xchg
or
cmp
add
fsubrs
adc
andl
push
aam
add
and
add
inc
cmpl
enter
lock
add
pushf
jnp
in
xchg
push
mov
and
je
dec
or
call
pop
sbb
push
push
and
push
loopne
pop
add
sub
mov
addl
and
pop
enter
push
cmp
movsl
out
and
inc
aas
sbb
adcl
add
ficompl
xchg
fistps
sti
imul
insb
cmp
ja
mov
ret
cmpsb
int3
aaa
int
cmpb
ja
dec
cmpl
sbbb
mov
rorl
add
xor
add
testb
sbb
pop
jo
or
insb
mov
or
jp
testl
xchg
iret
and
push
sub
orb
inc
popa
xor
gs
aas
out
add
push
mov
and
lock
pop
cltd
jle
js
inc
stos
mov
mov
jo
and
sbb
pop
jl
xchg
adc
clc
and
or
test
xchg
clc
jmp
imul
mov
xor
fldcw
fwait
cs
lods
or
add
pop
sub
pop
mov
xchg
repnz
xor
scas
jae
shrl
mov
and
pop
or
lret
add
cmpsl
mov
das
sub
movsb
nop
mov
movsl
mov
nop
out
bound
cltd
pop
cmp
or
dec
xchg
sbb
pop
add
push
hlt
out
movsb
fwait
fs
inc
in
clc
cmp
lret
or
hlt
pop
pusha
add
std
mov
mov
mov
mov
xchg
out
wbinvd
popa
cmp
cmp
fadds
adc
jge
sbb
or
add
enter
dec
stos
popa
repnz
adc
xor
out
dec
lock
shll
add
jo
lock
lea
adc
cmpsb
xchg
fmuls
lock
loope
dec
mov
lock
cmpsl
mov
outsb
cmp
and
push
and
and
or
cltd
dec
add
adc
out
inc
xchg
add
jbe
mov
adc
inc
inc
sub
pop
xor
lds
jno
test
fst
sub
lock
or
push
aas
mov
sub
jp
mov
pop
push
push
fnstenv
scas
add
movsb
push
inc
lods
pop
add
add
xchg
mov
inc
inc
adc
inc
das
sub
push
xchg
mov
incl
orb
ds
imulb
movsb
push
mov
inc
mov
mov
add
mov
jae
movsb
xor
sub
aaa
es
test
loope
or
lret
adc
movsb
loopne
sub
arpl
fildl
clc
mov
pusha
lea
sbb
mov
outsl
iret
mov
nop
or
fsts
push
add
xchg
lea
pop
aaa
push
andb
sbb
cmpsb
xor
adc
add
jmp
ja
stc
mov
andl
xor
sub
xor
lock
add
cwtl
add
mov
add
mov
xor
push
popa
or
pop
dec
daa
data16
cmpsl
lds
or
les
and
movsb
decl
fistpll
pop
sarl
and
and
xor
sub
xchg
push
das
sahf
sub
popa
jbe
adc
andb
scas
icebp
mov
mov
cld
add
pop
add
mov
and
and
loope
xchg
adc
mov
sbb
cmp
sbb
sbb
xchg
inc
cwtl
mov
or
ret
xor
xchg
ds
sar
dec
dec
inc
out
pop
lea
xchg
push
xchg
ror
add
mov
inc
enter
mov
sbb
call
dec
pop
insl
pop
jno
andl
enter
add
jb
mov
movb
loopne
sub
add
sahf
adc
push
test
aam
mov
insb
sbb
sbb
popf
jb
sbb
add
jmp
loopne
outsl
repnz
add
add
nop
push
or
mov
add
addl
pop
orl
arpl
or
add
xchg
pop
addl
pop
pop
xchg
add
mov
jo
adc
or
cmp
inc
imul
nop
nop
jne
and
and
jmp
mov
mov
mov
dec
push
push
pop
stos
pop
xchg
cs
inc
push
sti
or
test
rcl
xor
pop
mov
inc
lds
jl
and
cmp
jle
lds
or
and
xlat
jae
and
mov
inc
add
push
push
push
cmp
cmp
cmpsb
push
sbb
lea
jb
push
insl
sub
iret
dec
push
push
pop
xchg
std
push
test
dec
pop
jne
orl
shrb
push
mov
fstpt
divl
aaa
adc
or
ja
addb
sbb
mov
mov
clc
pop
loope
xor
push
push
or
hlt
push
push
lret
and
push
or
jno
add
inc
shrd
xchg
mov
movsl
movlhps
pusha
sub
cli
mov
jmp
cmpb
or
xchg
xchg
add
enter
out
adc
ja
or
cmp
add
mov
loope
call
sub
and
adc
fnsave
add
xor
push
mov
cmp
imul
pop
data16
xchg
cmp
mov
push
cmp
and
das
push
orb
and
sbbl
nop
test
pop
and
adcl
dec
rclb
mov
jge
hlt
dec
test
cli
sahf
imul
push
or
mov
inc
push
rcll
shr
sbb
outsb
or
js
into
addr16
jns
outsb
frstor
fs
pop
test
lea
cmpl
sbb
sub
icebp
xor
daa
aaa
and
fiadds
arpl
inc
mov
jl
xor
xchg
cmp
or
enter
arpl
pop
jg
xchg
cmp
inc
stos
adc
daa
insb
push
push
lods
les
outsl
shl
ret
test
enter
and
add
or
dec
sbb
fists
je
sub
add
pop
rclb
pop
inc
cmp
dec
test
ret
add
xchg
and
add
dec
rcrb
xor
pcmpeqw
test
mov
inc
mov
pop
cmp
jno
js
mov
push
adc
xchg
push
ret
and
mov
sbb
insl
or
adc
sbb
xchg
add
jno
add
sbb
popa
stc
fnstsw
push
fists
hlt
push
push
fsubl
dec
pop
popf
xchg
inc
outsl
push
pusha
mov
add
jmp
or
mov
lock
cmp
or
loope
inc
aaa
and
imul
std
or
cmpl
mov
int
mov
xchg
and
add
add
aad
adc
ret
push
push
push
xchg
movsb
test
mov
cwtl
test
lock
jecxz
mov
scas
imul
rolb
xchg
ljmp
mov
ret
mov
dec
ret
xchg
nop
stos
inc
mov
jo
rcrb
movb
popa
xor
adc
or
cmp
rolb
adc
stc
adc
xor
jne
rolb
pop
addr16
adc
push
xlat
or
adc
shlb
mov
ds
cmpsl
sub
test
rcl
or
xorl
jno
testl
cmpsb
mov
dec
ret
jno
push
dec
mov
sub
xlat
sbb
punpcklbw
aas
cmp
fiaddl
and
jmp
aaa
jmp
jl
lahf
adcb
insl
add
jge
dec
or
and
and
and
fists
inc
popa
xorb
adc
and
rorl
jo
sub
jns
js
subl
or
dec
cmp
js
add
mov
xchg
jle
shrb
pop
sti
and
and
rorb
outsb
cwtl
xchg
add
pop
repnz
shl
aas
pop
mov
cmp
lret
in
ud1
daa
hlt
aad
das
xor
xor
jae
punpckhwd
sahf
inc
subl
sbb
ret
lcall
inc
syscall
ret
mov
pop
sub
dec
enter
sub
adc
sub
rol
push
loopne
xlat
sbb
push
rcl
pop
movsl
mov
add
js
dec
loope
pusha
sbb
dec
shrl
mov
dec
je
andb
push
jo
dec
clc
repnz
push
inc
js
xchg
filds
dec
shrl
push
and
jecxz
popf
cmp
jne
xchg
dec
int3
add
xlat
xchg
cmpl
add
cmpsl
push
xor
inc
sbb
mov
mov
shrl
fstpl
dec
xor
ret
sahf
jae
psubsb
lea
dec
and
inc
clc
and
or
xor
add
inc
loop
in
insb
nop
jmp
xchg
cmpl
lret
mov
fadds
pusha
xchg
jp
mov
out
adc
add
jmp
jns
add
lcall
aam
pop
jo
adcb
aas
xor
inc
ss
mov
movb
add
movsl
inc
fstl
xlat
pop
mov
mov
adc
and
or
mov
popa
movsb
pop
jno
cmp
mov
sbb
mov
addb
push
and
sub
insl
pop
and
es
dec
jb
loopne
mov
add
push
adc
sub
pop
add
fiadds
push
sti
loopne
mov
jg
and
jnp
ret
push
jae
sub
popa
cli
jo
sbb
cs
add
add
aas
push
lods
xchg
sub
icebp
cmove
adc
push
lret
lcall
imul
pop
adc
pop
dec
rorb
push
sub
shrb
or
dec
or
jno
fnop
inc
clc
mov
inc
xor
add
add
fadds
mov
mov
or
jbe
mov
or
jp
push
cmp
pop
inc
inc
and
push
xor
pop
sahf
or
into
fistps
mov
dec
pop
out
test
lods
fstps
or
pop
or
jl,pn
lret
or
push
adc
push
call
cmp
sub
pop
dec
mov
add
stos
push
cmpsl
sbb
es
mov
push
add
pop
push
adc
or
push
and
push
cmpsb
cmpsb
mov
inc
sub
rcrl
mov
imul
outsl
dec
jmp
cmpsl
fcoml
pusha
pop
xor
sbb
cmp
sbb
cmpsb
mov
jo
cmp
push
enter
fsub
mov
imul
xor
and
sbb
sbb
push
mov
cmp
push
jne
ret
xchg
sbb
adc
push
or
cmp
or
push
js
adc
mov
insb
push
xchg
insb
cmp
add
fbstp
sub
popa
sub
cmp
sbb
add
inc
add
das
test
or
mov
jo
jmp
xor
testl
jl
or
cmp
lret
lret
cmp
fildl
sub
pop
mov
push
and
mov
lahf
mov
xor
or
cli
and
cld
mov
lock
adc
orl
iret
mov
push
mov
test
sbb
jg
insb
or
push
imul
push
lea
test
push
push
ret
jecxz
popf
hlt
pop
cmp
xchg
outsl
cmp
rcrb
sub
pop
xchg
cmp
xorb
push
add
adc
pop
mov
add
cli
stos
add
mov
leave
sbb
inc
add
adc
clc
mov
and
adc
cwtl
lret
sub
mov
sbb
aas
pushl
mov
xchg
dec
inc
sub
sbb
pop
lret
xchg
inc
mov
sbb
jo
mov
add
xchg
sub
or
dec
mov
dec
adc
or
lods
nop
cmp
leave
stc
dec
sub
pop
rolb
movsb
mov
pop
outsl
cmp
cmp
dec
rclb
push
pop
mov
xor
mov
gs
addb
push
cmpl
sub
mov
fdivp
inc
add
fistpll
inc
jns
xchg
shlb
mov
mov
ret
mov
push
mov
and
int3
add
dec
sbb
insl
lds
insb
gs
or
daa
sbb
mov
add
js
add
dec
enter
xor
and
or
adc
xor
iret
sbb
adcl
cli
dec
dec
inc
dec
lret
and
dec
call
leave
jecxz
xchg
ss
mov
dec
pusha
jo
jne
lea
dec
int3
call
adc
fiaddl
add
loopne
or
jae,pn
inc
or
lcall
adc
sbb
lcall
test
mul
data16
push
push
fucomip
push
xchg
or
inc
mov
jl
mov
pop
call
idiv
dec
sub
fld
or
gs
lods
stos
xchg
xchg
mov
xchg
lret
lahf
add
or
lods
ja
sbb
pop
lcall
inc
jo
add
xor
jmp
insb
nop
call
dec
sbb
clc
adc
cmp
push
aas
xchg
jo
sub
lea
dec
movsl
imulb
xor
mov
push
xlat
and
dec
jecxz
add
mov
enter
ret
mov
lahf
adc
fcoml
inc
cwtl
ja
adc
push
sbb
shrl
and
push
repnz
cmova
mov
sbb
jne
imull
stc
jmp
cmp
inc
sbb
add
ss
cmp
cli
fwait
cmp
cmp
sub
mov
je
in
push
sub
cmp
je
push
adc
jo
scas
stos
xchg
adc
in
and
cmc
mov
ja
dec
adc
xor
jo
les
pop
push
loope
inc
scas
dec
push
les
or
and
mov
inc
mov
push
sbb
imul
sbb
sahf
jbe
xor
adc
sbb
xchg
mov
sar
or
adc
add
fdivrs
sbb
jge
imul
data16
mov
mov
sahf
adc
adc
xlat
or
pop
inc
jnp
loope
and
xchg
fildl
lea
jno
jp
cltd
nop
dec
dec
jmp
and
mov
pop
les
xchg
or
push
or
mov
repnz
cltd
js
add
cmpsl
mov
js
mov
mov
loop
xor
outsb
inc
ficoml
std
dec
add
mov
pop
or
inc
pop
jl
mov
cmpsl
jp
jmp
and
sbb
in
sub
mov
or
inc
sub
ret
mov
ss
and
pop
xor
lahf
inc
jb
cmp
dec
sbb
jne
movsb
ja
icebp
cmpsl
adc
mov
xchg
or
xchg
push
js
mov
int
ljmp
push
mov
mov
mov
sub
mov
dec
lods
inc
jge
adc
and
mov
pusha
add
imul
je
cmpsb
and
pop
les
mov
pop
or
sub
mov
push
sub
lret
jbe
and
daa
dec
xlat
cmp
dec
mov
imul
add
mov
add
int3
je
mov
js
sub
dec
aaa
and
lods
out
cmpl
or
rolb
sahf
or
mov
das
test
adc
and
out
rcll
iret
fimuls
xor
adc
push
cmpsl
popa
jl
jmp
adc
or
and
decb
nop
iret
je
sahf
inc
je
out
mov
add
je
dec
cmpb
je
mov
imul
orl
nop
sbb
nop
jge
add
mov
pop
adc
outsb
adc
xor
jo
xor
fisubs
std
icebp
or
out
out
push
cmp
sub
push
sbb
daa
fcoms
call
push
mov
ficoml
or
rorb
aam
inc
sbb
rcrb
leave
gs
dec
ljmp
xchg
add
xlat
or
or
mov
cmpsl
dec
daa
inc
xchg
in
add
insb
sbbb
aaa
fs
and
cmp
ss
jmp
push
add
mov
bnd
test
fsubp
mov
std
adc
cld
xor
fs
int3
test
xor
lods
cmpsb
sbb
and
or
jmp
outsl
adc
jne
rcl
push
shll
sub
pop
and
add
sub
es
insb
or
sub
or
roll
gs
sub
jmp
test
or
cmpsb
pop
sti
xchg
inc
test
add
cltd
xchg
imul
cwtl
cmp
jae
pop
fildl
jb
or
jmp
add
cmp
adc
add
inc
test
imul
mov
idivb
mov
mov
xchg
cli
mov
jne
gs
addr16
and
stos
lea
pop
sbb
sahf
popa
fdivrs
or
xor
inc
loop
push
scas
mov
or
jmp
bound
xor
rcr
sub
mull
inc
inc
sbb
fs
add
add
addr16
adc
push
rolb
mov
jge
sub
movsl
dec
or
dec
gs
adc
inc
das
add
test
mov
or
es
pop
push
daa
inc
push
cmp
inc
shlb
adc
xor
push
addr16
out
jae
and
int3
aas
fs
insb
sub
fwait
xchg
or
jne
and
icebp
outsb
xchg
add
fwait
push
xor
dec
aaa
jmp
and
arpl
jmp
dec
cwtl
dec
sbb
outsl
cmp
add
mov
xchg
adc
adc
or
push
insb
lret
test
decl
imul
in
lret
adc
je
popl
adc
imul
out
inc
addb
push
push
dec
js
and
push
repnz
mov
mov
out
ret
add
jl
push
cvtps2pi
lods
popa
xchg
leave
push
xchg
cmc
push
lods
dec
or
add
mov
jnp
push
xor
pop
mov
mov
mov
xlat
jno
xchg
imul
xor
jle
movsb
mov
add
add
jne
mov
dec
pop
inc
push
aam
js
xchg
nop
push
sti
ficoms
sbb
add
push
pop
inc
bound
insb
jge
dec
push
testl
loopne
pop
mov
movsl
and
jmp
clc
xchg
cmpsb
fs
add
sub
data16
adc
mov
mov
enter
mov
add
popl
test
and
roll
popa
adc
xchg
or
push
popf
imul
frstor
fs
arpl
pop
insb
or
xor
sub
movaps
gs
inc
add
inc
push
out
call
cmp
or
or
mov
inc
cmp
jmp
mov
dec
jmp
sbb
sbb
lds
xchg
mov
test
xchg
cmp
xchg
ds
rorb
mov
push
shlb
aam
aad
lahf
mov
xchg
jae
cli
inc
sbb
jno
mov
push
mov
movsb
aad
orb
xchg
hlt
out
sub
push
or
mov
daa
adc
xlat
or
cmpb
sbb
xchg
adc
ret
loopne
pop
adc
arpl
mov
sbb
inc
push
add
pop
xlat
lock
xchg
lret
nop
or
mov
dec
adc
rorb
in
in
jno
imul
dec
inc
cmpsl
call
mov
or
sub
or
add
jb
lods
pop
xchg
or
jmp
mov
ss
dec
lock
push
or
out
loopne
adc
or
or
mov
add
adc
dec
mov
stos
mov
cmpsw
and
das
add
mov
or
inc
xor
pop
das
adc
in
push
adc
mov
scas
and
dec
xor
and
dec
or
lea
scas
add
leave
add
xor
adc
les
push
pop
fwait
pop
cmc
add
adc
and
xchg
ficoml
or
inc
loope
mov
dec
sbb
pop
cmpl
adcl
inc
sub
sbb
and
xorb
outsb
adc
call
xchg
push
inc
scas
int3
loop
sbb
int
mov
popa
sub
add
push
and
mov
gs
xor
add
shrl
dec
repz
sbb
jmp
icebp
out
daa
test
sub
sahf
xlat
popa
mov
push
jmp
jecxz
stos
pusha
gs
inc
xchg
xorb
adc
movsb
rol
push
pop
sub
push
mov
xlat
fistps
ds
xlat
testb
sub
pop
dec
popa
mov
sub
nop
fcmovnb
clc
and
mov
je
sub
adc
sub
and
xchg
mov
outsl
sub
ret
push
lods
jb
and
inc
jg
mov
xor
je
push
imul
mov
adc
xorl
and
out
xor
and
push
icebp
sbb
imul
xlat
lds
add
cmp
or
lahf
test
jge
sub
mov
inc
or
add
int3
fcomip
loopne
cltd
movsb
sub
cmp
inc
add
mov
add
dec
lret
adc
mov
ret
push
int3
xchg
fcmovu
xchg
dec
jne
adc
dec
jne
dec
jmp
shlb
dec
dec
push
xchg
mov
lea
jbe
pop
pop
les
add
dec
dec
inc
and
dec
dec
and
sub
inc
jp
push
pop
push
push
adc
int
imull
or
or
andl
inc
std
nop
cmp
or
cmovb
dec
sbb
add
add
xchg
inc
push
aad
jecxz
jg
rol
dec
dec
jp
sbb
enter
xchg
sub
jns
pushf
addl
and
sbb
fsubrs
mov
jae
lock
push
sub
adc
add
inc
inc
nop
sti
and
add
or
sbb
jle
sub
xor
insl
incl
fsubrl
push
mov
sub
fsubl
addb
mov
daa
sub
and
and
lds
xchg
push
inc
mov
jne
inc
add
xor
push
popa
add
notb
mov
scas
or
pop
dec
test
sar
jl
add
cmp
popa
push
rclb
jb
jmp
push
fcomp
adc
inc
pop
cmp
ds
jp
popf
rorl
es
js
lcall
daa
je
or
inc
bound
mov
add
imul
push
adc
imul
mov
jge
adc
dec
iret
add
and
adc
push
clc
inc
imul
repnz
xchg
cwtl
mov
add
adc
cltd
leave
push
xchg
popf
add
movsb
popa
mov
xor
dec
push
dec
and
push
and
lock
fisubl
int
jecxz
cmp
pop
pop
fwait
mov
dec
sar
rol
push
adc
roll
aaa
xchg
loopne
xor
mov
jns
adc
jmp
pop
sbb
ficoml
xor
les
or
imul
mov
dec
mov
into
push
lods
push
es
shrl
inc
mov
sbb
jmp
fcmovb
cli
xor
addl
or
test
pop
jne
dec
int3
add
mov
xor
mov
cmp
adc
fnstenv
mov
cwtl
mov
fdivs
mov
jne
addb
js
je
sbb
cmp
push
repz
pop
xchg
popa
pop
cmp
xchg
adc
add
arpl
cmp
jecxz
dec
cmp
cmp
stc
pop
dec
lock
pop
shll
cmp
mov
xor
xchg
cltd
inc
adc
push
lret
icebp
pusha
movsb
jecxz
push
testl
cmp
enter
shl
or
hlt
adc
mov
sarl
nop
or
orl
mov
pop
mov
push
jnp
jg
in
mov
jb
lods
lods
dec
pusha
iret
insb
enter
xlat
mov
xchg
adc
push
jg
push
and
cmp
and
sub
loopne
imul
fldt
sbb
xchg
repnz
scas
or
mov
or
dec
cmpsl
and
fstl
jmp
das
inc
cs
add
xchg
or
xor
add
and
nop
xlat
lahf
outsb
push
mov
mov
adc
mov
es
push
fbstp
scas
jnp
ja
xchg
fisttpl
int3
mov
mov
in
add
add
je
xlat
sbb
les
dec
xor
icebp
rcll
ds
or
sbb
pushf
or
and
or
insb
fsubrl
adc
in
push
movsl
sub
push
cmpsl
jmp
outsl
adcl
xorl
xchg
adc
movsb
or
jmp
adc
inc
fmuls
cmpsb
popa
aam
xchg
lods
in
lods
mov
adc
or
rcrl
add
les
mov
insb
sbb
push
aam
add
sub
jecxz
jno
lcall
push
lock
xchg
arpl
and
or
add
int3
push
add
or
push
xchg
mov
mov
mov
loopne
and
adc
sti
sub
and
iret
cmc
por
dec
stos
sbb
dec
inc
push
inc
pop
mov
dec
cmp
daa
test
jnp
or
aad
sbb
add
jne
stc
or
push
rcrb
xor
adcb
repz
mov
mov
cmpsl
aad
jecxz
adc
xor
roll
lods
push
sbb
outsl
pop
jg
mov
adc
add
loopne
xchg
addb
stos
mov
and
sbb
sub
add
and
les
mov
jb
or
fiadds
pop
sbb
sbb
add
std
inc
xchg
xchg
rorl
fistl
fiadds
in
push
pop
add
mov
ss
stos
adc
loopne
ret
mov
sbb
push
fmuls
inc
xor
sub
movsl
or
mov
inc
cmp
lcall
dec
stos
sub
or
daa
cli
adc
subb
xchg
icebp
add
pop
jo
push
sub
mov
pop
aas
mov
movl
mov
jo
add
sahf
mov
enter
ds
aaa
lret
or
xchg
ss
lea
push
pop
jge
das
xor
std
pusha
adc
or
xor
imul
cmp
inc
cmp
jl
mov
daa
xlat
jmp
mov
add
push
sub
or
js
jmp
and
pop
pop
lock
imull
xchg
inc
mov
out
jae
popa
jmp
cmp
loopne
or
or
cli
cmp
test
stos
inc
nop
add
pusha
xorb
roll
jl
push
add
xor
add
rcr
add
stc
push
add
nop
cmovnp
sub
xor
and
cmp
adc
add
scas
inc
shl
fcmovnbe
push
pop
cmpsb
mov
mov
xchg
hlt
mov
shll
insb
adc
xor
outsl
rolb
xchg
addr16
jecxz
mov
in
pop
add
mov
lret
add
sub
cmp
ljmp
jno
aaa
jo
add
push
or
push
and
repz
push
dec
xchg
pop
push
jb
leave
jecxz
adc
xchg
pop
add
adc
adc
clc
jo
movsb
mov
mov
test
push
ds
push
xor
imul
pop
push
shrl
insl
idiv
lock
leave
adc
mov
mov
mov
das
xchg
inc
cvtpi2ps
push
xor
sbb
and
pop
addr16
mov
test
test
mov
xchg
mov
or
xor
into
push
adc
pusha
adc
fiadds
and
lahf
imul
mov
sub
xchg
sbb
bound
adc
adc
sub
push
out
loope
inc
sub
and
jo
mov
sbb
and
int
roll
inc
repz
or
push
orb
xchg
pop
test
adc
daa
sahf
cs
add
cmp
inc
adc
mov
and
xorl
cwtl
mov
and
fmuls
lock
popa
cmp
mov
pop
or
bound
jl
pusha
sub
xor
xor
cmp
add
or
jno
adc
out
adc
jp
mov
xchg
shll
jnp
sbb
pusha
adc
nopl
cmp
cmp
mov
daa
lahf
mov
js
push
xor
push
push
mov
xchg
sbb
mov
fldl
ret
add
and
jbe
dec
mov
sub
rolb
adc
sub
add
and
cld
xor
lret
out
xchg
mov
je
shr
pop
adc
jbe
pop
add
sub
mov
jge
xorl
mul
pop
int3
clc
jbe
xlat
mov
adc
mov
std
add
cwtl
mov
idiv
bound
push
inc
xchg
sahf
dec
mov
decb
enter
mov
int
pusha
jge
cwtl
and
cld
jno
or
addr16
xor
sub
dec
dec
sbb
sub
ret
jecxz
xor
or
add
fnstsw
orl
inc
mov
mov
jge
sub
mov
xlat
sub
inc
xchg
movsl
das
inc
cwtl
or
push
jne
add
lock
inc
mov
inc
and
sub
push
inc
insl
leave
fmuls
rcrl
into
dec
clc
jge
fisttpll
sbb
jmp
ficoml
pop
add
dec
js
repnz
fistpll
xor
jae
arpl
push
insl
pop
xlat
jle
faddp
adc
xor
dec
shl
fsubrs
inc
mov
shrb
adc
cmovg
xchg
rorb
iret
ss
imul
dec
fdivr
cmp
sub
arpl
scas
sbb
sbb
adc
mov
aaa
lods
movsb
adc
xor
sub
pusha
jmp
es
das
jmp
push
push
push
add
insl
push
mov
insl
pusha
or
push
adcl
arpl
mov
jp
mov
xchg
push
pop
rorl
pusha
imul
lcall
xchg
jmp
xchg
test
pop
push
and
mov
sub
jno
dec
sub
sbb
mov
out
mov
sub
add
mov
or
mov
sub
mov
stos
inc
ret
adc
insl
add
sbb
xchg
cmp
insb
in
cltd
ds
cwtl
insb
lods
sbb
inc
push
pop
jno
sub
pop
push
lret
mov
lock
inc
daa
pop
push
mov
or
cmp
and
dec
es
movsb
xor
popa
jb
int
mov
mov
xor
inc
test
notb
test
pmulhuw
in
push
dec
xor
insb
jmp
push
xchg
and
pop
pop
lds
cmp
out
mov
pop
jge
cmpsb
and
cmpsl
cmp
jo
add
and
dec
inc
cmovs
imull
repnz
push
pop
pop
sbb
fs
pushf
push
push
mov
cmp
sub
inc
dec
xlat
add
push
aaa
push
lahf
adc
push
mov
or
lcall
and
xchg
loop
mov
mov
pop
mov
dec
imul
sbb
outsl
xchg
jbe
dec
fmull
dec
orl
and
lock
jae
add
pop
mov
push
leave
xchg
pop
lahf
icebp
rorb
sti
dec
mov
testb
cmpb
sub
jo
dec
and
into
repnz
insb
mov
mov
cmp
mov
mov
pop
pop
imul
jae
cltd
decb
or
push
adc
fs
cmp
insb
rol
loopne
int
mov
wbinvd
jb
out
pop
mov
xchg
lcall
scas
test
add
push
sbb
xchg
loopne
pop
stos
mov
push
shlb
mov
add
mov
pop
cmpsl
mov
in
pop
mov
mov
cwtl
adc
xor
push
push
xor
inc
push
pop
mov
test
cmp
xor
inc
xorb
ss
mov
lock
scas
push
or
or
jecxz
mov
add
cmp
dec
or
fisubl
cmp
sbb
adc
mov
inc
insl
mov
mov
enter
imul
out
scas
test
mov
lahf
imulb
xorb
adcl
stos
or
ss
ret
add
adc
inc
xchg
xchg
sbbb
cmp
cmp
push
out
or
adc
out
fwait
xchg
jbe
rcrl
in
rcrb
negb
mov
iret
mov
movb
xor
jecxz
or
gs
jo
push
and
ret
aaa
roll
lods
xor
push
js
insb
fiadds
jecxz
sbb
xchg
push
sub
les
add
lret
mov
ret
fldt
cmpl
add
sbb
fsubs
call
das
xchg
xor
aas
push
push
xor
sub
rolb
imul
adc
ss
sub
adc
dec
or
inc
xor
jae
je
mov
sub
jne
gs
push
xchg
push
xor
jo
bound
clc
adc
call
mov
or
cs
push
push
dec
pop
fldcw
and
lock
incl
cltd
or
popa
mov
cltd
insb
movsl
push
jae
mov
dec
popa
inc
ss
xor
stos
dec
jo
add
or
test
and
sbb
push
and
and
insl
adc
adc
cmp
cmp
movl
int
jbe
es
sbb
or
js
or
shl
mov
inc
out
dec
inc
pop
dec
jnp
or
xchg
inc
cmp
andl
sbb
insb
push
mov
lret
rclb
cmp
in
adc
pushf
xor
js
add
add
add
repz
dec
mov
and
dec
jmp
pushf
orl
sbb
sub
pop
dec
xor
cmp
mov
inc
data16
sbb
push
sub
jmp
dec
inc
dec
scas
loopne
inc
pop
lds
xor
lea
dec
cld
subl
xchg
xchg
adc
rolb
jae
mov
xchg
add
push
dec
ljmp
add
into
jne
fistpl
rcrb
or
mov
movsl
adc
insl
sub
mov
mov
int
hlt
scas
and
xlat
jl
push
sbb
xor
inc
or
lea
imul
sbb
push
or
jbe
pop
sbb
xor
sub
jo
xor
lea
sarb
cwtl
les
cmpsl
jge
jp
imul
mov
mov
sarb
je
adc
add
scas
iret
repz
xor
and
inc
push
inc
pop
call
push
add
cmpsb
xor
les
xchg
jmp
sub
inc
sub
pop
add
bound
inc
jmp
sbb
push
sbb
pop
stc
clc
hlt
je
and
nop
dec
xor
cmp
mov
xor
sbb
cmp
bound
mov
pop
lock
cmovne
adc
ja
fwait
sbb
xchg
inc
dec
imul
inc
sbb
mov
dec
sub
cmp
pop
hlt
pop
fnstenv
je
clc
push
adc
inc
sbb
push
add
jno
or
cmp
sbb
jle
sub
sub
push
cltd
movsb
in
push
xor
addl
pop
outsl
fsubrp
xor
cmp
add
sbb
pusha
xchg
xchg
adc
sbb
xchg
or
add
inc
push
out
fimull
push
mov
jg
jo
lahf
int3
addr16
mov
xor
jl
adc
fs
inc
push
add
jle
xchg
pop
add
jmp
inc
loop
popl
call
sbb
inc
pop
cmp
sbb
mov
nop
inc
adc
scas
add
jae
and
insb
xchg
out
inc
xor
out
xchg
mov
in
add
jecxz
inc
bound
into
push
cwtl
xchg
nop
push
out
pop
add
mov
or
daa
add
rol
outsl
ljmp
dec
or
rorb
cmp
int
pop
andl
push
mov
jge
adc
out
mov
mov
nop
push
sub
adc
sub
popa
mov
sbb
ret
leave
aaa
rolb
outsl
iret
push
mov
inc
dec
xor
push
push
sbb
jg
loopne
add
loopne
mulb
mov
sub
jl
add
dec
sbb
test
movl
bound
adc
push
mov
rclb
jbe
dec
mov
add
jge
cmp
rcll
push
sub
imul
imul
js
ja
dec
xor
jo
outsl
xchg
leave
je
pop
push
out
xorl
sbb
les
add
add
adc
pop
sub
pop
inc
nop
lods
or
pop
clc
or
aaa
or
or
xor
jp
cwtl
mulb
pop
cmp
mov
jno
dec
ljmp
adc
jmp
addl
sbb
adc
mull
push
aaa
adc
jns
xchg
pushl
pushl
fidivs
sbb
pop
xchg
clc
push
mov
xchg
das
pop
push
sbb
negl
dec
add
mov
mov
outsl
js
sub
inc
scas
push
arpl
shlb
movsb
or
or
sbb
bound
add
lods
adc
add
das
addl
andl
jne
pop
and
mov
sub
aam
inc
or
and
cmp
movsl
pop
push
ljmp
movl
hlt
mull
jl
xor
sarb
adc
or
add
mov
add
and
addr16
mov
cmpl
or
ficoml
dec
xor
sahf
jmp
pop
pop
sti
dec
dec
sub
lea
daa
mov
mov
pop
scas
mov
in
mov
rorb
test
mov
orl
cwtl
rcll
mov
int3
inc
xor
lods
lods
mov
test
iret
pop
pop
into
ret
inc
pop
add
or
imul
test
dec
inc
dec
dec
dec
inc
dec
dec
icebp
jne
pop
inc
pop
fstpl
and
dec
movsl
or
dec
das
mov
or
mov
lock
or
ret
mov
pushf
sti
mov
inc
movb
dec
pop
rorb
dec
rclb
push
fs
stos
inc
sar
in
push
and
les
sub
xor
imul
xor
or
fdivrs
pop
push
in
push
jp
les
sahf
inc
dec
sub
addb
fldt
xor
add
dec
xor
or
aaa
inc
das
pop
add
paddq
pusha
enter
mov
add
xchg
iret
aam
jno
dec
add
xchg
shlb
in
movsb
xchg
les
ja
pop
or
sbb
cmp
mov
or
aam
mov
imul
and
push
mov
sub
mov
and
xchg
test
mov
cs
or
mov
mov
jle
and
jo
setge
push
pop
mov
inc
es
mov
xchg
repnz
inc
jb
clc
xor
mov
adc
xor
xchg
xor
aam
mov
adc
ljmp
inc
adc
sbb
push
fs
sbb
sbb
je
iret
or
push
js
rol
imul
mov
xchg
xor
into
stc
pop
adc
push
push
fnsave
shlb
jno
gs
ret
pop
add
cld
or
xor
mov
or
xchg
or
fistl
pop
outsb
sbb
jl
mov
or
nop
adc
insb
loopne
adc
push
imul
gs
jle
inc
pusha
mov
and
pop
lcall
lock
sub
sahf
ss
pop
mov
sub
in
cmp
mov
cmp
push
mov
pop
gs
andl
dec
aaa
incl
lds
mov
xchg
or
cmpsb
andl
adc
lods
or
idivl
subl
sbbb
cmp
and
jl
inc
inc
lea
mov
icebp
cmp
pop
xchg
pop
shrb
cs
dec
mov
pop
fidivs
xchg
shlb
sub
loope
sbb
cmpsl
jle
and
mov
das
mov
cwtl
xchg
test
inc
fbstp
add
loop
and
pushf
insl
inc
mov
fdivs
addr16
repz
jmp
cld
mov
fcoml
arpl
mov
mov
mov
inc
sahf
and
mov
mov
or
inc
push
dec
cmp
add
outsl
mov
outsb
mov
mov
cs
add
or
dec
popa
mov
lock
dec
nop
rcll
mov
jl
faddl
mov
xor
int
sbb
subb
xor
mov
clc
sti
push
ljmp
and
xlat
das
dec
mov
pop
loopne
xchg
faddl
jle
and
or
lods
dec
xchg
or
or
sti
jg
pop
xchg
or
lcall
jle
push
or
dec
sbb
cmpb
aas
mov
mov
xor
sub
mov
jne
daa
mov
cmp
sbb
and
ficomps
insb
mov
pop
mov
imul
ret
mov
bound
push
push
mov
pop
jbe
fs
dec
loopne
cmp
sub
mov
add
jle
sub
es
dec
and
push
arpl
sub
js
fs
cmpsl
loope
dec
jle
ss
and
test
sbb
daa
in
fidivrs
call
xchg
pop
out
add
jb
aam
cmp
push
adc
add
imul
adc
gs
dec
jp
popa
hlt
add
cmp
scas
movl
mov
ret
mov
dec
mov
mov
mov
fwait
dec
jmp
popa
adc
pop
add
add
imul
xor
sbb
dec
add
popf
mov
dec
and
dec
rcrl
sub
add
inc
fidivrl
bound
jb
cmpsb
sbb
push
faddl
adc
lahf
add
xchg
pop
push
add
dec
and
stc
dec
out
add
mov
lret
cmpb
mov
lods
mov
mov
or
or
sub
fdivr
aam
mov
pop
xor
xor
inc
add
mov
lret
add
sub
idivb
or
inc
pop
scas
les
add
add
sub
inc
mov
gs
pop
pop
repz
pop
mov
jbe
addr16
dec
pop
dec
push
nop
and
add
mov
lods
int3
or
ja
push
pop
sub
and
sub
stos
rolb
mov
cmp
sahf
lods
mov
stos
dec
inc
mov
jecxz
sub
jo
orl
mov
daa
in
cmp
add
push
sub
cmpsb
jbe
inc
add
sbb
mov
lods
loopne
sbb
add
mov
cmp
and
mov
or
das
xlat
sbb
push
sub
xchg
arpl
mov
and
mov
dec
cmp
and
pushf
cmp
lds
lret
pop
pop
dec
xchg
and
leave
lods
lret
adc
add
add
outsb
adcl
add
data16
push
js
adc
add
xchg
adc
inc
add
and
subb
dec
mov
cmp
and
icebp
or
sub
xor
rolb
push
movsl
cmpsb
je
movsl
adc
add
jno
sbb
cmp
and
popa
ds
mov
xchg
dec
loope
nop
mov
in
dec
cmp
sbb
cmp
push
imul
jmp
jo
lea
out
cmp
jmp
push
in
mov
xchg
mov
sub
pushf
cmc
jmp
and
or
ss
xchg
sub
aas
jmp
cmp
imul
xchg
and
lock
sbb
adc
test
leave
cmp
fcoml
clc
fnstsw
push
sub
jg
andb
pop
sbb
aam
shll
outsl
adc
je
or
pop
pop
test
out
xchg
cmp
sbb
inc
sbb
sub
push
and
mov
nop
push
js
xor
push
cmp
loop
or
ret
shlb
dec
add
inc
pop
cmpb
test
cs
add
push
and
mov
outsl
adc
xchg
mov
sbb
xchg
xor
pop
push
icebp
or
into
pusha
std
add
and
adc
mov
inc
rcrl
test
lock
in
movsb
mov
lods
fidivl
adc
daa
or
sub
cmp
or
xlat
or
jmp
sub
push
arpl
sbb
popf
pop
pop
mov
sbb
jmp
push
sbb
jge
cmpsl
popf
arpl
cmc
popa
int
push
leave
xchg
inc
mov
mov
push
inc
xor
add
xor
mov
int3
xor
sbb
or
arpl
mov
popa
add
mov
xchg
movsb
iret
cltd
sub
mov
adc
mov
sub
sub
push
aam
xchg
add
daa
call
cmpb
adc
bswap
cltd
sbb
mov
decl
or
cs
or
out
push
fistps
add
mov
sbb
test
sub
sub
aad
loopne
into
lcall
jmp
lods
jno
fstps
mov
push
xor
jnp
inc
stos
test
loopne
int3
pop
pop
pop
mov
call
js
inc
xchg
sub
mov
sbb
xor
hlt
add
or
xchg
cs
xor
mov
les
fimuls
dec
ss
mov
lock
adc
or
movsl
cs
jnp
and
dec
adc
inc
test
dec
inc
jecxz
inc
push
scas
push
movsl
cs
daa
mov
mov
add
loopne
das
pop
adc
jl
cmp
mov
cmp
xchg
lock
decb
cmpl
mov
jg
cmpb
adc
mov
pop
jp
jmp
daa
push
int3
adc
sbb
mov
adc
mov
jns
dec
add
jmp
jmp
das
loopne
ffree
fiaddl
add
pop
mov
sub
bound
push
lods
mov
adc
test
add
mov
sbb
push
cmp
aas
xlat
cmp
jg
sbb
stos
xor
je
daa
mov
jns
sbb
xor
push
insb
lock
and
push
fs
jmp
and
addps
xchg
outsb
and
pushf
pop
xchg
lcall
jle
and
das
popf
aam
fwait
or
leave
push
inc
cmp
mov
lea
push
xor
test
adc
mov
gs
dec
in
or
test
rolb
test
pop
xlat
add
add
xchg
dec
idivl
and
pop
popf
bound
shlb
push
mov
sbb
dec
pop
pop
cmp
xlat
mov
shll
jb
adc
aam
movups
add
mov
inc
dec
mov
fnstenv
movsl
and
add
sub
sahf
add
nop
pop
in
shlb
iret
test
or
cltd
rcrb
sub
or
fisttps
loope
sahf
scas
jno
push
pushf
das
jecxz
mov
adc
shrb
xor
pop
mov
cmp
flds
cmp
in
xor
push
adc
in
or
imul
fwait
loop
cli
jne
pop
or
loopne
jg
dec
cmc
xchg
loop
cmp
add
sarl
imul
mov
xchg
fisttpll
stos
push
ret
sti
test
jl
pop
mov
fs
fistpll
sub
cmpb
mov
and
out
or
sbb
mov
and
push
loope
xchg
aas
sbb
sarl
sbb
push
mov
addl
inc
or
incl
jnp
jmp
adc
add
aad
pop
sbb
aam
cli
into
ret
fs
and
mov
push
add
fstpl
pop
mov
push
shll
add
mov
xchg
pop
out
and
or
and
inc
daa
jo
inc
cmpsl
test
pusha
sbb
pop
cmp
jmp
test
jmp
sub
xor
adc
pop
mov
jno
mov
movsb
mov
add
xchg
arpl
add
and
cmp
cmc
sub
cli
lock
pop
cmp
and
sub
add
je
movl
nop
and
add
xor
add
add
jo
stc
les
loope
inc
sub
add
add
sub
mov
daa
mov
xchg
pop
push
mov
pop
push
xor
insl
js
aam
push
push
dec
xor
mov
and
inc
insl
cmp
mov
mov
inc
xchg
pusha
add
loopne
mov
sub
mov
or
add
ss
jb
aam
push
insl
loop
inc
loopne
or
insb
sbb
in
sbb
sbb
push
ret
or
jns
pop
mov
add
jae
mov
xor
les
movl
sub
ret
in
aad
xchg
xchg
adc
cmp
cmpsb
subl
call
inc
mov
pop
jl
jb
andl
cmp
call
add
xchg
pop
inc
adc
dec
test
mov
cltd
loopew
fistps
jl
lods
out
xor
sbb
insl
ljmp
jle
add
test
outsb
cmp
inc
mul
push
lea
or
adc
pop
aaa
jne
test
movzwl
push
push
cmp
enter
mov
push
mov
popa
ret
push
stc
xchg
js
or
cli
xor
xor
adc
repnz
je
dec
loopne
ret
xchg
mov
xor
bound
push
add
sub
aam
dec
or
add
sbb
fcmovnb
es
leave
in
jmp
stos
push
mov
sub
cmp
xlat
decl
xchg
popf
adc
or
das
popa
push
sub
and
sbb
cmc
adc
pop
ret
inc
and
xchg
sub
cmpl
pop
jmp
add
test
adc
adc
inc
xchg
sbb
and
xchg
test
or
dec
loope
mov
xchg
or
mov
mov
sbb
out
adc
xorb
mov
sub
xor
pop
ljmp
movsb
addb
pop
or
push
ffree
inc
inc
push
adc
add
jb
mov
xchg
iret
push
xor
cld
fcompl
mov
add
mov
enter
lret
push
mov
jno
fisubl
push
xchg
je
xchg
stc
dec
cmpsl
and
orb
sbb
add
lods
adc
dec
jne
xchg
cmpsl
adc
scas
mov
and
inc
imul
pop
rol
pusha
jmp
cmp
mov
fsubs
push
mov
jecxz
sbb
sub
sbb
sbb
in
syscall
mov
fwait
sbb
subb
or
fmuls
mov
andb
sbb
inc
xchg
popa
inc
mov
lods
cmp
lret
movl
jbe
pop
inc
rol
dec
xchg
xchg
and
push
clc
jmp
mov
or
cld
js
out
dec
dec
jno
fistpl
fcomp
pop
xor
push
popf
rol
sbb
adcb
insl
cmp
addr16
stos
sti
sub
mov
mov
jge
sbb
dec
in
nop
cmpsl
sti
lods
test
add
aad
mov
push
popf
movsb
int
add
inc
dec
cs
in
add
addb
scas
dec
xchg
andl
push
dec
jl
inc
adc
scas
and
clc
dec
push
or
mov
les
or
adc
dec
cwtl
loope
xor
dec
shll
push
push
mov
in
and
jmp
mov
jmp
xorl
cmpsb
dec
js
iret
data16
sub
cmp
jmp
inc
inc
orl
push
push
xchg
and
xchg
cmp
rorb
push
js
add
push
push
sbbb
lea
or
pop
pop
ljmp
pusha
jecxz
mov
test
sbb
and
in
mov
fs
or
testl
in
pop
shlb
add
sub
js
lock
push
fisubrl
push
jp
and
add
or
push
sub
jmp
hlt
enter
cmp
sbb
jo
adc
inc
sub
in
rcll
test
sti
dec
shl
jne
daa
into
loopne
nop
mov
aaa
mov
or
test
sub
sbb
xchg
pop
sub
mov
push
insl
rolb
in
pop
dec
inc
and
mov
scas
xchg
or
adc
xor
mov
call
mov
pop
repz
mov
mov
dec
adc
inc
inc
add
aas
mov
arpl
movsb
out
sub
pusha
fiadds
dec
ds
std
add
xchg
clc
jecxz
rcrb
sub
jne
movsl
push
pop
add
adc
in
sub
aas
arpl
mov
dec
popa
inc
fildl
jne
xor
push
adc
loopne
mov
mov
fldt
jge
mov
sub
out
adc
pop
dec
iret
jl
inc
test
jne
cmpsl
add
icebp
dec
sub
movl
xlat
inc
rcl
das
sub
testl
xor
lds
cmp
lock
add
fneni(8087
sbb
cmp
in
cltd
push
inc
in
fidivrs
sbb
sbb
mov
mov
push
out
sbb
push
mov
je
cmp
pop
add
aam
push
icebp
or
lds
add
mov
out
and
lret
popa
out
arpl
shlb
pop
push
pop
les
aas
sub
loopne
mov
clc
mov
dec
outsb
or
mov
movsb
les
and
and
jecxz
push
inc
mov
movsl
jmp
adc
dec
subl
xchg
add
inc
sbb
notl
add
mov
fsubp
jbe
jmp
adc
lret
cmc
inc
xorb
mov
sbb
inc
shl
sub
ret
add
push
mov
push
sub
ljmp
cwtl
dec
add
addr16
pop
pop
dec
add
or
test
push
cs
repz
clc
jle
lcall
pusha
scas
sub
add
sbb
add
or
mov
inc
dec
dec
lea
xchg
jnp
loope
dec
test
call
xchg
leave
inc
add
test
fcoms
sub
scas
mov
das
xchg
push
je
jae
xchg
out
movsl
clc
pop
jp
dec
add
cmp
cltd
adc
cmpb
ja,pn
mov
xor
daa
lods
mov
dec
icebp
cltd
push
jge
push
or
clc
push
fildl
adc
pop
sub
sbb
add
cmpb
adc
loop
jbe
in
repz
xchg
mov
xchg
push
sub
int3
add
divb
les
ja
xor
mov
imul
mov
inc
mov
push
add
cmpsl
aam
std
lock
adc
jl
add
dec
fsubrl
pusha
jo
push
shlb
mov
jle
popa
in
pop
call
jno
mov
push
or
or
sub
sub
data16
loop
push
shll
lret
stos
push
cmpsb
adc
fmuls
adc
inc
pusha
pop
mov
out
jmp
out
xor
insb
mov
ficoml
adc
jp
or
cmp
push
or
inc
insl
fisubrs
mov
es
sbb
aaa
call
xchg
rcr
les
sub
sbb
or
dec
outsl
je
lea
dec
xchg
enter
and
and
add
mov
mov
mov
sub
xchg
das
push
inc
sbb
jb
mov
or
lea
sbb
push
pop
addr16
imul
aam
fimuls
sbb
jnp
push
mov
in
mov
xlat
cli
ret
dec
cld
clc
adc
or
dec
add
fstps
les
mov
and
push
call
cmp
inc
dec
xchg
imul
lds
stos
loopne
rcl
push
pop
fcomps
jl
xchg
fwait
jne
inc
jle
imul
fcmovu
nop
popa
dec
sub
dec
loop
dec
jb
in
ljmp
inc
cmp
ficompl
inc
add
or
mov
call
gs
aad
or
shl
inc
or
dec
sti
mov
push
test
mov
sbb
or
imull
push
mov
mov
sti
in
popa
test
pop
loopne
xor
ret
out
pop
mov
mov
sbb
adc
inc
add
adc
sahf
cmp
cld
push
adc
sbb
xor
outsl
jb
scas
fmuls
adc
sub
sub
adc
jo
addr16
pop
sbb
lret
mov
pop
sub
xchg
call
adc
or
inc
dec
xchg
inc
das
imul
invd
or
xor
sbb
inc
les
pop
adc
lods
divb
mov
jnp
shr
pushf
call
shr
pop
adc
cmp
mov
inc
imul
aaa
lds
mov
outsl
inc
rolb
or
adc
and
sub
inc
sub
sbb
or
movb
inc
daa
sub
jne
and
pop
stc
mov
not
mov
xor
shll
adc
adc
cli
xchg
inc
rcrl
sbb
xor
adc
pop
aam
out
push
and
pop
shlb
sarb
sahf
xchg
and
jne
push
push
add
fldcw
adc
push
or
mov
mov
add
pop
enter
or
pop
xchg
mov
sub
and
sbb
daa
or
inc
jecxz
mov
add
add
fstpl
or
or
inc
or
fcompl
and
adc
sub
xchg
push
push
add
xor
dec
dec
fdivrs
pop
xor
push
sbb
addb
imul
shlb
jno
or
sbb
cld
pop
lcall
insb
ret
xchg
adc
int
cmovns
mov
inc
jne
movb
xor
sub
adc
and
je
adc
prefetcht0
lcall
lret
sub
mov
es
mov
jle
or
aad
dec
rcll
push
sbb
mov
pop
ret
in
push
or
adc
out
je
add
push
sub
mov
sar
das
inc
sbb
lods
inc
jmp
cmpsl
out
xor
add
xchg
loop
aad
or
and
sub
xor
call
pop
sbb
fisttpll
data16
cmpsb
lret
sbb
xchg
or
mov
xor
dec
cmpsl
popa
aas
in
nop
xchg
bound
push
nop
inc
push
arpl
inc
push
nop
inc
dec
gs
inc
push
nop
insb
data16
nop
inc
push
lods
push
int3
imul
push
lock
enter
sub
and
enter
enter
insb
outsb
mov
enter
lods
jo
pop
enter
in
pop
enter
icebp
add
nop
add
nop
add
nop
je
jne
nop
add
insb
jbe
add
nop
add
nop
add
nop
ja
jns
nop
add
in
cs
add
add
sub
add
and
enter
pop
mov
jb
add
enter
cmp
pop
jns
add
das
or
add
add
sub
add
in
dec
xor
in
cmp
add
in
xor
in
cmp
xor
add
in
aaa
or
sbbb
cmp
sbbb
dec
inc
sbb
sbbb
mov
lods
jb
sbb
inc
int3
inc
push
jb
sbb
inc
or
inc
push
sbb
sub
inc
push
cmp
dec
push
cmp
insb
dec
mov
cmp
lods
cmp
cmp
dec
inc
push
in
push
or
and
sbb
xchg
dec
push
xchg
xchg
and
sbb
xchg
int3
pop
sub
xchg
push
fcoms
or
mov
jecxz
adc
fisttps
ds
fwait
fwait
xor
push
iret
enter
mov
int3
mov
dec
repnz
mov
mov
push
aam
xchg
addr16
loopne
mov
rol
cmpsb
pushf
mov
mov
xchg
mov
loope
in
sbb
pop
mov
test
jb
mov
scas
or
inc
cmp
jb
lock
test
imul
add
stos
xchg
xor
or
sti
fisubrs
push
bound
sub
jbe
jae
add
je
cmp
or
xchg
out
clc
jb
dec
outsl
jmp
ja
pop
sbb
ds
or
lods
xchg
nop
or
push
xchg
imul
mov
fs
outsl
sub
hlt
xchg
rclb
mov
or
shlb
add
es
ss
and
add
js
inc
mov
scas
lea
mov
xor
pusha
fdivs
imul
sbb
and
jne
test
push
inc
dec
stc
mov
gs
add
and
cmp
cmc
cs
pop
xor
add
popa
call
lea
and
add
inc
inc
sub
push
xor
jge
idivl
cmp
or
adc
fs
cmp
or
xor
inc
scas
add
mov
and
fs
adc
mov
out
adc
add
mov
fcomps
scas
or
sbb
sti
jmp
fidivs
das
xor
pusha
pop
add
push
stos
push
rclb
cltd
roll
mov
pusha
jo
sbb
orb
fcoml
jecxz
out
mov
add
sub
push
add
cwtl
add
arpl
inc
mov
lcall
push
mov
cmpl
dec
shrl
push
push
inc
or
mov
xor
popf
xchg
mov
stos
shl
test
bound
push
pop
sbb
and
jnp
sbb
fiadds
cmp
sbb
cli
or
push
jb
xor
fisubl
aam
repz
push
add
js
inc
scas
and
cmp
stos
or
jns
in
lcall
jae
test
or
add
xor
pop
or
or
pusha
adc
mov
cmp
fs
or
xchg
scas
loope
sbb
push
test
push
gs
or
jbe
inc
in
pop
xor
shrb
incl
movaps
in
in
sub
cs
xorb
int
inc
mov
pop
xlat
and
inc
imul
lock
sbb
ret
pop
sbb
cmpsl
or
xor
aaa
inc
decb
adc
sbb
movsl
lea
push
or
or
add
xchg
jg
ljmp
xor
add
add
imul
lods
repz
out
out
ss
mov
pop
sbb
xchg
cmp
sub
sbb
push
push
test
xchg
cmp
sbb
push
arpl
adc
sub
add
xor
call
les
pop
out
xor
sbb
push
push
ret
mov
clc
add
inc
dec
cmp
sub
pop
aaa
xor
sbb
lcall
mov
mov
mov
cltd
mov
and
dec
jmp
pop
mov
inc
push
cmp
add
and
and
mov
loopne
cmp
mov
cli
mov
imul
push
dec
inc
arpl
pop
jmp
add
push
loopne
loopne
les
xlat
mov
ja
jo
adc
sub
loop
sub
inc
hlt
xor
push
es
jo
push
inc
xchg
sbbl
mov
dec
adc
aam
pusha
push
add
adc
and
iret
jne
cltd
mov
stos
adc
or
inc
adc
mov
test
pop
in
clc
pop
jb
mov
int3
test
add
push
mov
lock
inc
cs
xchg
mov
lock
cmp
pop
cmp
int3
add
pop
stc
fs
mov
mov
inc
and
pop
adc
outsl
fwait
orl
pop
and
cmp
or
inc
notl
test
mov
mov
xor
inc
imulb
stos
les
push
cld
in
inc
sbb
test
cld
xchg
mov
nop
mov
insl
call
mov
lock
icebp
mov
test
mov
cmc
jecxz
xchg
sbb
js
mov
ss
test
mov
inc
inc
inc
sbb
rcrb
ds
sbb
sub
out
add
sub
adc
fistl
fs
mov
cmp
add
sarb
fsubrl
test
dec
or
nop
xchg
mov
inc
mov
cs
int
inc
loope
jb
mov
jae
push
pop
iret
popa
je
xlat
xor
adc
sahf
mov
test
mov
mov
es
pop
push
xchg
fcomps
fdivrs
aam
mov
sbb
cmp
sub
sub
xor
or
pop
jae
xor
notb
and
mov
dec
mov
lds
cltd
nop
sbb
mov
jne
in
dec
dec
movsb
push
xchg
jp
xor
shlb
lea
js
js
das
test
and
push
jno
pusha
xchg
jecxz
jb
mov
add
rolb
push
mov
adc
jecxz
jecxz
icebp
ja
sbb
jle
jno
incl
dec
sbb
push
ret
movl
or
cmp
mov
sub
lcall
shlb
loopne
add
clc
jne
bound
jo
dec
xchg
add
loopne
out
jne
ret
insb
call
mov
int
inc
shl
out
mov
movl
mov
les
inc
mov
lods
push
inc
xchg
pop
adc
into
pop
xchg
push
push
push
inc
inc
dec
mov
dec
inc
pop
push
cmp
dec
xor
adc
cltd
aas
sub
inc
dec
dec
inc
cmp
popf
add
xchg
or
sahf
push
mov
repnz
jg
or
sbb
ja
inc
pop
gs
mov
xchg
or
sub
and
mov
add
or
test
mov
jge
inc
jo
and
inc
clc
cmp
movsb
andb
sbb
sbb
inc
dec
cmpsb
fadd
push
xchg
insb
push
add
mov
insw
xor
mov
mov
jge
imul
das
out
test
mov
push
mov
xchg
lods
jg
movl
or
or
dec
test
sbb
or
test
bnd
rorb
jne
rcr
adc
inc
inc
xor
pop
data16
inc
sbb
add
inc
mov
adc
add
or
push
xor
loope
add
inc
aam
imull
adc
or
inc
int
xchg
movsl
dec
mov
inc
pusha
mov
cwtl
pushf
jg
dec
lahf
mov
dec
push
jmp
add
add
xchg
xchg
popa
icebp
outsl
mov
call
filds
scas
pop
inc
inc
xor
xor
and
test
inc
push
cmp
por
mov
mov
xlat
pop
ret
jmp
mov
test
adc
hlt
add
inc
push
xor
sarb
push
or
xor
pop
inc
sbb
push
and
ds
rcrb
bound
cmp
inc
sub
dec
aam
dec
sbb
faddp
push
push
les
or
enter
pusha
stos
jp
and
test
sti
das
xchg
inc
nop
data16
shll
bound
into
or
pusha
aaa
pop
fisubl
in
out
mov
sub
addr16
mov
mov
add
push
arpl
pop
negl
dec
adc
inc
testl
or
popa
loopne
dec
movd
push
add
jnp
and
into
dec
jmp
inc
ja
clc
sbb
add
pop
push
or
int
arpl
mov
jne
cmc
jmp
sbb
nop
push
mov
mov
sbb
and
push
lock
popa
dec
pop
jmp
mov
out
into
je
jae
cltd
nop
add
mov
mov
or
out
mov
push
push
or
mul
repz
sub
push
dec
repz
pop
mov
jne
mov
testl
fmuls
sub
rorb
fcmove
ljmp
cmp
mov
push
xchg
add
push
adc
cmp
jg
mov
ljmp
hlt
adc
shll
and
or
sbb
add
xorl
mov
data16
push
pushl
sarl
sbb
icebp
pop
rcrb
xchg
xor
and
add
jmp
adc
repz
mov
cmpsb
decl
lret
adc
ret
inc
push
sbb
cmc
movsl
sbb
adc
rcll
xchg
mov
out
sbb
sbb
xchg
cltd
inc
and
push
jle
or
std
jne
inc
xor
push
in
dec
add
es
jg
xchg
addl
cmp
dec
loopne
jmp
ret
rorl
shlb
loope
or
ret
push
dec
push
flds
or
nop
mov
pop
nop
mov
sbb
pop
test
cltd
movsb
sub
mov
pop
std
xchg
roll
cmp
cmp
pop
jmp
jne
scas
mov
adc
ret
mov
cltd
mov
cmp
mov
push
xchg
jge
sti
lods
pop
int3
cmp
cmp
mov
in
mov
loop
ja
cmp
jb
mov
mov
out
add
xor
aam
cs
nop
and
push
adc
pop
roll
scas
mov
lds
popf
inc
jmp
adc
pop
xchg
jo
movsl
loopne
jmp
mov
dec
cli
jmp
mov
inc
ljmp
jle
jne
inc
jmp
mov
es
adc
dec
add
inc
adc
add
aad
mov
pop
or
dec
pop
cmp
mov
xor
mov
mov
lock
jnp,pt
dec
mov
mov
lods
jno
out
sub
pusha
push
imul
ret
pop
inc
adc
pop
and
xlat
nop
setno
sbb
sbb
pop
adcb
sbb
adc
fmuls
adc
inc
cmp
popa
add
pop
xchg
mov
incl
dec
push
jmp
sub
loop
sub
cwtl
push
mov
add
enter
lea
dec
fcompl
cli
mov
rclb
jbe
sbb
ret
ss
jbe
fucom
punpckhwd
or
mov
mov
ja
in
mov
add
insb
mov
mov
mov
lret
sub
fisubs
jo
aam
enter
lea
mov
shll
adc
mov
sub
les
sbb
add
les
ret
std
sahf
and
pop
dec
mov
inc
lcall
movb
lock
gs
rcr
inc
and
adc
shr
ljmp
add
shll
push
outsl
push
adc
pop
jnp
fdivs
out
ds
inc
adc
adc
decl
adc
repnz
ficoml
add
ret
sub
lock
sti
lock
sbb
neg
inc
enter
aam
add
test
push
mov
jg
clc
dec
imul
mov
ss
sbb
addl
add
call
sbb
outsb
mov
push
enter
lock
jbe
out
jmp
add
push
icebp
and
inc
cmp
jbe
sub
cli
dec
inc
sbb
lea
out
add
in
adc
or
inc
pop
sub
inc
es
add
mov
jo
rolb
jl
lea
add
cmp
nop
mov
cld
shl
stos
jge
mov
add
mov
push
add
or
or
jmp
mov
mov
jp
ror
mov
mov
in
call
fstps
aam
stos
gs
jmp
sar
or
outsb
orb
mov
or
add
lret
enter
push
out
js
loopne
jl
mov
cmpsl
mov
int
clc
push
add
jp
fsubrs
ja
int3
aad
jecxz
and
hlt
jae
inc
mov
pusha
and
add
adc
add
jmp
push
sub
sbb
adc
add
mov
sahf
mov
testb
shl
rcrl
push
movd
mov
mov
nop
dec
addb
mov
jmp
xor
cs
jo
or
adc
adcb
icebp
jecxz
popf
dec
fsubrp
sbb
cmp
mov
inc
jg
mov
adc
fwait
and
adc
lock
lock
sub
subl
mov
imul
dec
in
dec
int3
rolb
sbb
mov
add
rorb
xor
xchg
pop
aas
pop
add
add
mov
add
adc
pop
push
mov
loope
cmpsb
add
lret
fwait
jo
sbb
push
loopne
out
fs
mov
fdivl
repnz
xchg
or
sahf
out
and
inc
push
in
mov
pop
xchg
push
or
xorb
lock
sbb
out
cmp
pop
dec
lods
sub
xchg
sbb
sti
arpl
fists
sbb
je
loop
adc
add
out
insb
mov
add
jmp
xor
xchg
mov
loopne
pusha
mov
loope
sbb
fcmovnb
je
mov
and
sti
jne
sbb
push
sbb
test
xchg
jno
lret
sbb
stos
jnp
sbb
add
sub
idivb
cmc
inc
pop
fwait
sub
adc
adc
or
jmp
les
push
or
in
jbe
in
fdivrp
mov
hlt
sbbb
sub
push
js
adc
mov
clc
mov
mov
add
adc
sti
add
mov
fdiv
add
or
sub
pop
sub
add
xor
and
and
and
ret
xor
jae
sbb
bound
mov
xor
dec
push
inc
inc
xor
cltd
mov
push
in
dec
ret
out
shll
rcrl
xlat
xchg
and
inc
ret
ret
sbb
sbb
mov
add
fadds
adc
or
dec
outsb
push
pop
sahf
mov
push
and
or
dec
push
pop
adc
xchg
sbb
dec
xor
xor
xchg
mov
mov
mov
mov
fwait
stc
mov
test
hlt
imul
xor
andb
mov
jae
and
je
js
pop
iret
jae
sub
mov
sub
xlat
ds
loopne
dec
aas
cmp
pop
jecxz
sbb
xor
int
pop
inc
cmp
inc
les
test
ss
push
push
sahf
mov
shlb
add
daa
push
int3
cmp
jae
imul
cmp
dec
dec
jmp
push
sub
or
sbb
test
sbbl
add
int
pop
and
and
clc
cmpsl
stc
xor
jg
mov
imul
ffree
fwait
or
cmp
or
dec
aam
xor
push
xchg
mov
add
dec
or
push
ret
ret
pop
xor
lods
pop
xor
bound
out
std
jecxz
mov
cmp
shl
or
or
jb
dec
frstor
adc
pop
mov
ss
add
out
sbb
jle
adc
or
sti
dec
pop
or
push
push
sbb
test
shrl
sub
dec
sbbb
bound
pop
dec
lea
faddl
out
push
mov
mov
pushf
xchg
xlat
data16
test
mov
pushf
add
inc
out
dec
inc
fnstsw
imul
sub
add
adc
push
xor
rcrb
push
inc
rolb
inc
push
push
addr16
sbbb
push
inc
xor
xchg
mov
std
js
and
pop
adc
push
sub
dec
mov
enter
jno
sbb
movl
test
pminsw
add
push
nop
stc
mov
mov
mov
jmp
xor
cltd
mov
scas
mov
loop
dec
or
adc
jge
sbb
push
leave
mov
jp
xor
lahf
add
repnz
sarb
inc
enter
add
imul
rcrb
mov
into
dec
inc
stos
fldl
rcl
repnz
rcrb
mov
jbe
mov
inc
movsl
xchg
xor
ficompl
daa
cmp
jae
jno
scas
ds
aaa
add
xor
and
add
into
loopne
scas
popa
cmp
jl
movsl
pop
rorl
mov
dec
mov
jns
push
rol
add
adc
add
and
mov
enter
and
ja
jg
push
je
ret
loop
cli
sbb
pop
mov
add
jo
xor
add
loopne
movl
sub
or
in
push
loopne
or
leave
ficoml
or
jo
pop
xchg
data16
js
sub
lods
les
ret
mov
inc
sub
or
jb
mov
xchg
adc
push
push
fs
icebp
pop
outsb
clc
adc
movl
sahf
xor
inc
loope
adc
push
lahf
faddl
pushf
jo
inc
pop
mov
jno
cmpsb
jp
jne
test
movsb
movsl
add
cmp
outsb
jnp
push
adc
add
jmp
and
sub
scas
stos
mov
outsb
pop
es
mov
shl
or
jb
clc
sbbl
mov
push
ret
mov
and
rcll
add
mov
adc
jge
inc
sbb
pop
xorl
adc
or
adc
rorb
imul
lock
clc
mov
mov
pop
or
push
push
popa
jo
into
subl
inc
or
in
insb
mov
incb
enter
mov
sub
subl
sarl
add
add
lcall
test
loope
ror
and
test
out
hlt
add
add
or
jne
test
push
aas
lret
sbb
xor
pusha
les
and
inc
sbb
add
jno
fimuls
xlat
enter
clc
es
arpl
aam
fimull
cmp
push
xor
pop
sbb
cmp
inc
sub
push
fdiv
test
push
and
push
mov
in
inc
loop
sbb
or
add
push
inc
push
pop
xor
lea
push
jae
xor
jmp
mov
popf
and
lods
xor
cmp
xor
call
add
mov
pop
daa
pop
in
mov
je
arpl
test
xor
mov
jecxz
in
push
pushf
dec
push
mov
sub
xor
push
and
or
inc
sbb
pop
fsubs
xor
push
xor
imul
cmp
dec
push
push
xor
iret
rolb
or
loope
add
jmp
repnz
nop
adc
std
jmp
jp
mov
inc
sub
movsl
addb
push
aas
test
fcmovnb
mov
daa
in
movups
psubq
mov
sahf
push
push
and
pop
inc
mov
sub
icebp
hlt
push
popa
mov
dec
push
mov
out
call
sbb
je
test
pop
push
adc
adc
push
aad
je
jp
loopne
pop
push
out
scas
inc
sub
repnz
mov
adc
mov
icebp
mov
mov
sub
dec
jmp
push
sub
pop
flds
push
bound
fisttpll
add
mov
jl
dec
sub
sub
cwtl
out
insb
ss
sub
xor
mov
jnp
addb
dec
xchg
jbe
je
or
xchg
adc
mov
xchg
sub
mov
xor
push
ds
push
dec
sbb
or
call
push
adc
pushf
adc
adc
and
ds
mov
mov
xlat
clc
xor
lock
pop
or
add
adc
loopne
loopne
das
loope
fdivrs
push
or
mov
and
or
movl
fisubrs
or
and
jae
subb
jmp
mov
inc
rcrl
cli
mov
incl
sbb
dec
xchg
mov
rorb
out
out
jmp
adc
xchg
and
add
movsl
lret
mov
mov
jg
ss
inc
adc
sbb
out
sub
outsb
pusha
or
mov
nop
add
cli
mulb
ja
or
je
sub
or
arpl
xchg
add
daa
insl
mov
pop
shl
adc
rcrl
je
xchg
test
pusha
add
xor
mov
lds
imul
sbb
xor
cmp
jns
adc
xlat
jecxz
lds
btl
flds
cmp
frstor
and
cmp
adc
dec
sbb
imulb
inc
and
jnp
movsl
scas
or
mov
movsb
pusha
mov
mov
mov
pop
mov
adc
shrl
push
push
mov
or
inc
xor
das
or
add
shrb
negl
pop
dec
sub
rorl
xchg
inc
mov
test
fs
addl
scas
sbb
lea
add
push
pop
nop
rcll
xor
rorb
rorb
outsl
xchg
cmc
xchg
rolb
or
loopnew
outsb
inc
leave
push
mov
sbb
and
or
push
xor
sbbb
adc
sbb
mov
and
movsb
add
ljmp
call
adc
loope
out
int3
sbb
andl
call
jmp
or
push
lods
adc
mov
pushf
xor
fs
add
jns
adc
inc
jl
mov
jmp
lods
jmp
adc
or
dec
test
mov
sub
dec
push
and
inc
cmp
fwait
xchg
jmp
ja
pop
dec
call
add
movsb
fistpll
inc
test
jbe
pop
lfs
push
outsb
cmp
cmc
pusha
fadds
pop
je
mov
lret
xorb
sbb
pop
mov
and
test
cwtl
clc
fdivr
les
movsb
cli
mov
shll
cwtl
fnsave
repnz
sbb
push
iret
or
mov
ret
or
daa
aam
lea
sbb
xor
and
in
fsubs
insb
mov
pop
sbb
int
imul
jbe
jmp
mov
adc
jbe
cmp
cltd
cmp
xor
mov
les
sti
adc
sbb
lods
lret
mov
inc
and
jl
shl
or
xor
or
test
inc
and
lcall
xor
add
icebp
inc
ret
daa
adc
insb
xor
ljmp
movl
cmp
mov
sbb
xchg
nop
mov
inc
idivb
out
cmpsl
mov
gs
pop
repnz
or
outsb
xor
loopne
rcrl
adc
les
hlt
jl
rcl
lret
and
ss
and
jge
add
push
push
pop
test
mov
nop
mov
and
sub
jecxz
add
cmp
jae
mov
outsb
shrb
mov
mov
dec
add
cli
rcr
add
or
int3
icebp
and
rcr
pop
das
push
call
aam
aam
jbe
clc
mov
mov
adc
push
pop
dec
jmp
cmp
imul
dec
loope
sbb
jb
pusha
sub
ds
ret
push
sti
pop
sub
dec
jne
jmp
jo
push
test
add
jl
ret
and
and
mov
lods
popf
pop
scas
js
popa
push
in
sub
shr
adc
neg
and
jmp
je
inc
xor
nop
ret
ficoms
push
mov
sbb
scas
xor
dec
adc
or
inc
mov
ret
or
mov
or
inc
adc
inc
mov
inc
insl
in
xor
inc
add
and
mov
insb
mov
jo
cmp
mov
adc
orb
fs
pop
adc
mov
or
clc
or
cmpl
sbb
loope
pop
inc
rolb
pusha
ljmp
or
and
xor
xchg
inc
mov
mov
jb
dec
and
sub
stos
sub
das
xchg
sbbl
mov
mov
test
jne
xchg
or
pop
test
inc
repnz
push
push
inc
lock
ret
and
adc
push
add
pop
andb
jmp
cmp
xor
adc
sub
dec
xchg
jge
push
lods
iret
add
bound
lcall
pop
aam
clc
add
fldl
jecxz
mov
sub
fidivrl
push
mov
ror
mov
pop
inc
cld
pop
xor
add
xor
jne
add
cmp
pop
leave
pop
add
out
xchg
push
or
fildl
ds
ror
mov
adc
mov
scas
sbb
pop
sub
js
mov
pop
je
imul
mov
dec
add
or
test
insb
out
add
mov
inc
push
or
movsl
cmc
push
sub
pop
inc
daa
rolb
enter
inc
sub
jb
or
cmc
mov
lods
adc
and
int
std
adc
push
repnz
jb
mov
push
nop
mov
or
cmp
out
inc
fldt
sti
push
push
jecxz
gs
sub
jbe
cmovg
mov
xor
rolb
cmp
inc
pop
movsb
mov
das
sahf
inc
add
je
loopne
or
fimuls
or
insl
mov
sub
dec
orb
or
pop
cmp
or
mov
pushf
and
ljmp
adc
xchg
xor
ds
scas
fadds
scas
call
int
scas
or
dec
mov
mov
cmpsb
sub
cmp
nop
mull
add
push
add
faddl
das
or
movsb
push
adc
xchg
push
cmp
adc
aam
clc
xchg
dec
repnz
and
outsb
cmp
sbb
sbb
mov
and
mov
repnz
repnz
dec
cmp
dec
repnz
inc
mov
dec
mov
and
mov
sub
dec
repnz
mov
nop
dec
sahf
in
mov
fs
sahf
sbb
sbb
shll
jo
or
je
sbb
in
pop
sbb
xor
jl
inc
dec
sub
push
mov
xchg
lret
mov
movsb
xor
nop
mov
cwtl
movsb
pushf
mov
xchg
push
mov
and
dec
test
lods
cmp
in
mov
inc
mov
lods
dec
push
adc
and
movsl
pop
xlat
add
and
ror
insb
ja
dec
jns
out
dec
add
dec
xchg
add
mov
add
jmp
mov
or
or
enter
cmovp
pop
inc
bound
imul
jo
in
fisubrl
jns
jne
pop
insb
pop
repnz
cmp
pop
push
gs
arpl
es
dec
outsl
jbe
repnz
jne
or
mov
addr16
in
arpl
imul
add
insb
jg
inc
sub
push
aas
and
sbbb
das
inc
out
gs
push
outsl
pop
pop
in
and
inc
daa
leave
or
pop
outsl
daa
daa
push
jl
inc
push
das
push
jne
imul
fs
roll
popa
je
push
fnstenv
scas
pop
pop
mov
outsl
in
jae
mov
mov
insl
outsl
into
jb
fisttps
or
dec
inc
mov
cmpsl
ret
les
dec
xchg
pop
adc
mov
mov
adc
outsl
push
push
ret
inc
jbe
push
negb
add
adc
or
jg
arpl
leave
in
xlat
mov
cmp
push
add
xor
dec
sub
cmp
cmp
cmpl
popl
pop
jne
inc
mov
loope
add
or
aas
imul
and
lock
sub
int
pusha
xchg
mov
mov
dec
ffree
sub
aad
xlat
sbb
ret
test
pop
fdivr
adc
cmpsl
bound
inc
pop
sarb
xor
adc
jg
push
insb
jns
sub
jnp
imul
mov
add
pop
pop
das
fldenv
shlb
movsb
stos
in
mov
orb
pop
sbb
lods
jg
add
pop
xchg
sbb
push
mov
ss
sbb
imul
lcall
clc
pop
push
add
mov
inc
add
jl
sub
es
sub
sub
pushf
flds
xor
xchg
sub
inc
faddl
xor
fs
cmpb
cmp
popa
add
arpl
repnz
rcr
ret
dec
xchg
push
adc
data16
jmp
adc
int3
xor
pop
cmp
pusha
adc
jnp
mov
adc
cmp
fdivr
lahf
movsl
in
mov
mov
fwait
cmp
mov
xor
dec
dec
enter
add
push
xor
adc
clc
stos
lock
dec
and
and
or
mov
jl
out
inc
dec
push
notl
sub
and
jae
xor
jns
lods
jae
push
inc
inc
xor
pusha
pop
jg
mov
or
or
mov
mov
push
mov
aas
xchg
dec
popa
add
xchg
xchg
les
and
aam
push
adc
movlps
adc
xchg
xchg
xchg
adc
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
sbb
xchg
xchg
xchg
add
add
xchg
xchg
xchg
add
xchg
xchg
xchg
or
or
xchg
xchg
xchg
or
leave
leave
leave
leave
icebp
repnz
leave
leave
leave
leave
cmc
div
clc
leave
leave
leave
leave
stc
cli
sti
cld
leave
leave
leave
leave
std
jmp
leave
leave
leave
leave
loope
jecxz
leave
leave
leave
leave
in
out
leave
leave
leave
leave
jmp
leave
leave
leave
in
out
out
shrb
fdivs
sub
mov
inc
daa
dec
dec
push
inc
push
mov
mov
dec
aas
fcoms
push
cwtl
je
enter
nop
in
lock
in
into
add
hlt
add
subb
shlb
adc
addr16
inc
pop
dec
adc
xchg
mov
mov
adc
dec
je
gs
in
jnp
dec
iret
and
insb
dec
dec
push
and
movsb
in
sbb
inc
imul
into
mov
sbb
mov
push
adc
lock
pop
pop
test
bound
mov
inc
enter
dec
iret
pop
dec
imul
lret
push
fcmovb
xchg
mov
outsb
rcl
adc
les
or
enter
int
dec
lahf
sub
int3
enter
rorl
insb
dec
push
aaa
aaa
insb
cmp
sub
add
rcl
popf
dec
fdivl
dec
or
push
sub
adc
sbbb
nop
repnz
pop
sti
push
ds
bnd
test
cmp
jg
call
imul
test
pusha
bound
das
into
sbb
add
insb
dec
aas
and
inc
or
mov
pusha
xor
les
xorb
pop
fidivl
push
push
loope
sub
jb
mov
sbb
dec
pop
mov
jecxz
mov
into
ret
sub
dec
lods
add
xor
push
arpl
and
xchg
adc
xor
sub
jmp
xor
inc
lea
int3
rcll
pop
lcall
jae
and
push
push
popf
mov
cmp
fisttpl
xor
inc
dec
daa
add
aam
sub
sbb
rcrb
daa
and
push
mov
pop
out
mov
flds
out
cmp
gs
and
aam
mov
mov
popa
cs
and
mov
ret
insb
push
call
mov
ret
cli
add
sub
test
iret
push
adc
xor
lock
mov
pushf
out
seta
adc
jns
popf
mov
inc
pop
or
xchg
adc
sub
mov
xchg
pop
push
out
add
mov
sbb
pusha
pop
add
popa
ljmp
nop
cltd
add
jmp
mov
ret
xor
sbb
cmp
jae
push
jo
xchg
mov
repnz
out
hlt
fs
sbb
jge
jle
cmp
jo,pn
jae
add
and
data16
outsl
sbb
push
xor
dec
push
cmp
xor
sti
or
jbe
push
negl
adc
dec
jge
push
xor
cmc
insl
push
and
pusha
jne
test
ret
push
iret
ds
jne
xacquire
add
pop
xor
int
ja
in
sub
xor
xor
jns
outsb
sub
jae
xchg
inc
add
ror
cwtl
push
lahf
loopne
and
adc
ss
sub
xchg
mov
adc
add
add
js
or
lea
dec
and
pop
push
in
or
jo
testb
bound
xlat
sahf
imul
xor
ss
and
outsl
dec
push
ja
aam
pop
or
add
add
addr16
js
addl
push
jns
aam
xor
inc
xchg
nop
dec
cmp
dec
pop
dec
cli
push
ljmp
das
pop
out
inc
or
dec
pop
lods
adc
and
push
push
push
adc
loopne
jmp
push
ret
add
rcl
arpl
rolb
sbb
negb
shrb
lcall
lock
ja
sbbb
push
mov
incb
add
in
jo
cmp
add
cmp
lock
xor
mov
adc
xchg
push
sub
add
scas
sub
jmp
js
jmp
mov
push
aad
and
shrb
adc
lock
dec
ret
clc
sahf
and
xchg
add
or
cltd
popa
lods
rcrb
rcrl
and
mov
popa
or
and
or
cmp
call
push
inc
cwtl
loopne
add
xchg
pop
add
sbb
jo
xchg
and
lock
cld
push
add
mov
inc
shlb
xchg
adc
popa
roll
sbbl
add
sbb
sbb
inc
push
les
cmc
ja
inc
or
cmp
loope
or
fcmovu
mov
pop
pusha
test
movsb
sahf
out
out
adc
xchg
sub
popf
loopne
shl
and
sbb
jae
sbb
jp
cmp
ja
mov
into
mov
sub
adc
sub
pop
or
pusha
jns
and
jmp
adc
test
std
jae
cmp
jb
cmp
jbe
jb
sbb
clc
mov
mov
adc
jle
scas
add
cmpb
fwait
add
dec
adc
inc
dec
lahf
insl
xchg
dec
cwtl
xchg
cmp
cmp
inc
fidivrs
or
mov
pop
sub
add
xor
jo
scas
sbb
pop
ja
in
and
aaa
push
loope
sbb
jecxz
mov
xor
lcall
into
and
push
outsl
xor
scas
cmp
inc
inc
adc
adcb
pop
sub
insb
adc
cmp
repz
movsb
sti
cmpb
jne
dec
cwtl
mov
or
add
jecxz
dec
or
inc
cmp
push
dec
daa
ss
mov
jp
mov
mov
cmp
jg
je
sub
test
inc
adc
jb
dec
mov
insl
sbb
out
mov
mov
add
lea
cmpsb
std
imul
inc
xchg
mov
mov
cs
or
hlt
enter
and
ss
repz
inc
fdivl
sub
mov
imul
ds
inc
mov
out
enter
or
ret
lods
ljmp
push
cmpsl
add
push
adc
dec
int3
xchg
popa
pushf
cmp
pushf
push
ret
mov
mov
or
adc
xor
pop
xchg
mov
mov
mov
inc
fmul
jge
enter
ss
pop
add
add
clc
fwait
lea
in
lea
mov
jne
lods
push
lahf
pop
outsl
jmp
inc
fs
sub
loope
ds
jle
jp
add
mov
mov
sbb
dec
dec
jne
push
inc
loope
lock
and
imul
adc
add
push
push
lock
std
pushl
scas
test
in
mov
ret
add
loopne
push
xor
mov
jle
push
and
xchg
add
push
mov
push
mov
movsb
movsb
pushf
xchg
or
pushf
arpl
pop
or
mov
inc
sbb
rcll
cwtl
add
dec
lcall
out
cmp
xchg
nop
les
cmp
mov
adc
mov
fsubs
pushf
mov
add
or
adcb
push
push
dec
cmpsb
nop
orb
push
mov
adc
mov
dec
mov
add
sbb
mov
and
into
out
mov
mov
sarb
xchg
pop
cmp
jg
pop
and
add
sbb
movsl
mov
inc
loope
or
mov
push
push
mov
sar
hlt
mov
push
stos
mov
pop
adc
xor
pop
sub
enter
push
pop
and
fisttps
add
lock
mov
int3
pop
mov
icebp
inc
call
sbb
call
xor
fnsave
jecxz
push
mov
push
add
cmp
sub
test
push
jecxz
push
adc
add
fadds
adc
sbb
jecxz
adc
jle
pop
bound
sbb
shlb
xchg
fidivl
les
jmp
and
inc
sub
xchg
loopne
sbb
adc
or
mov
jmp
jno
or
jno
pusha
push
add
xchg
cwtl
mov
insl
inc
out
mov
bound
movl
dec
sarb
and
out
sbb
lea
pop
adc
or
imul
dec
sub
popa
fldl
pop
std
in
fmuls
push
insl
adc
outsl
insb
jmp
jo
arpl
add
cmp
push
mov
push
popa
cmpb
fwait
and
insb
add
pop
mov
inc
add
cmp
cs
fiadds
mov
aam
adc
xchg
insl
sub
add
xchg
xchg
subl
push
jge
ss
adc
lret
mov
adc
test
sub
cmp
push
or
inc
arpl
xor
js
inc
xor
pop
xor
addb
push
test
cld
lea
mov
add
adc
aaa
sub
in
inc
xchg
pop
lea
sbb
inc
movsb
out
dec
test
pop
call
lock
push
xchg
sahf
xchg
lret
adc
adc
jl
mov
add
inc
or
lods
push
sub
lcall
add
subb
jae
sub
add
sbb
pop
dec
push
push
add
cmp
cmp
xorb
and
xchg
movsb
adc
cmp
add
subl
xor
cmp
lahf
movl
xor
outsl
data16
sbb
cs
dec
jle
scas
scas
hlt
cli
push
jge
add
sub
shlb
jl
fs
ret
sbb
and
add
fdivs
aas
dec
push
je
push
pop
pop
push
xor
add
sbb
sbb
in
inc
cwtl
and
dec
mov
movl
xor
inc
call
jl
mov
ret
push
cmpl
ss
jne
adc
popf
int
and
punpckhbw
inc
imul
add
mov
dec
pushf
pop
and
shlb
cld
and
and
test
jp
out
out
push
or
cmpsb
jne
or
popa
aaa
aad
rcrb
aam
xor
iret
mov
out
sbb
iret
call
cld
jae
loopne
add
jne
inc
xchg
mov
push
test
cmp
movsb
imul
movsb
fsubrs
mov
xor
jmp
lods
sub
cmp
push
clc
jl
jae
xchg
pop
dec
hlt
mov
lea
stos
imul
xchg
and
mov
cmp
dec
push
add
cmp
jb
cmpsl
cmp
push
mov
or
movsb
mov
adc
add
cmp
xorb
cwtl
testl
pop
addr16
mov
add
adc
jns
push
aas
dec
mov
aas
mov
xchg
ljmp
pop
ret
rolb
push
repnz
jge
insb
jne
lahf
mov
or
adc
adc
lods
popa
fs
pop
outsl
dec
adc
mov
mov
lret
bound
dec
inc
inc
stos
in
pop
daa
ja
mov
cmpsl
add
push
sbbb
mov
jnp
add
push
mov
imul
ja
mov
cltd
inc
pop
addr16
gs
mov
ja
xor
cmp
jmp
sub
test
cltd
fdivs
mov
outsl
aaa
xchg
addr16
gs
push
addr16
pop
push
fmull
mov
sub
addr16
or
test
and
adc
aaa
and
pop
popa
shlb
inc
dec
push
adc
fs
mov
mov
outsb
shlb
je
in
inc
dec
aaa
je
add
sarl
insb
incl
insl
js
lret
adc
pushf
je
cltd
jl
jae
imul
sbb
sub
ja
adc
test
test
mov
data16
sub
cmp
push
mov
sbb
dec
adc
push
es
cmp
xor
or
and
lcall
xchg
pusha
outsl
xchg
dec
idivb
cwtl
outsl
or
outsl
push
cmp
and
out
pushf
aam
mov
sub
outsl
mov
test
or
hlt
cwtl
bound
movsb
jg
mov
movsb
add
cmp
xorb
mov
lahf
lods
outsl
mov
cltd
xchg
mov
push
adc
out
je
test
out
ja
loopne
inc
enter
loopne
add
iret
sub
mov
jae
xor
sbb
test
mov
pop
jb
mov
xor
xchg
mov
and
ret
roll
mov
inc
scas
sub
xchg
arpl
in
adc
les
jp
fs
bound
test
enter
lds
bound
addr16
or
int3
lret
cmp
lahf
int3
adc
out
movsb
shrb
aad
add
insl
push
scas
leave
push
mov
aam
jb
lahf
mov
insl
cmpsl
inc
jae
test
push
push
inc
jns
leave
outsb
xchg
dec
fsubs
adc
and
jo
inc
mov
jae
push
outsl
add
dec
lahf
xchg
dec
and
loopne
loopne
out
and
in
sbb
pop
leave
inc
je
ffree
mov
dec
mov
jno
and
push
ja
sbb
adc
scas
sbb
jb
sub
in
fdivs
jg
arpl
push
gs
andl
repnz
or
pop
adc
in
xor
hlt
xlat
pusha
jne
popa
leave
xchg
hlt
mov
mov
pop
jp
inc
ljmp
test
clc
das
jo
leave
or
inc
fdivl
mov
data16
faddl
in
add
sub
push
mov
pop
pushf
add
xchg
pop
clc
pop
xchg
lods
or
xchg
out
and
cwtl
jbe
or
inc
pop
aaa
pop
adc
pop
lret
jne
or
or
lods
pop
mov
ja
pop
jb
adc
adc
jb
adc
adc
mov
push
pop
jno
push
ja
lret
xchg
dec
es
lods
sbb
ss
push
ja
jae
add
sbb
in
mov
and
mov
and
js
sub
inc
and
mov
cwtl
push
adc
push
add
das
inc
inc
hlt
mov
insb
popa
jo
gs
xor
sub
and
sub
sub
dec
push
cmpl
xchg
or
adc
inc
ja
mov
xor
sbb
cmp
sub
push
fsubrl
aad
sbb
xchg
lods
and
stos
popa
prefetchw
cmpsl
cmp
mov
lahf
cmp
adc
dec
mov
push
lods
data16
inc
push
push
inc
dec
push
inc
test
inc
add
mov
aas
dec
mov
jp
pop
pop
jmp
dec
sub
repnz
or
stos
in
nop
mov
adc
push
test
xchg
jbe
push
or
cmpsw
push
mov
decl
mov
cmp
bound
and
repnz
sub
daa
pop
cmp
or
addr16
sbb
lods
sbb
cwtl
jl
xchg
fldt
or
int3
mov
inc
daa
or
lret
and
adc
xchg
inc
sbb
movsb
repnz
shl
insb
pop
inc
xchg
pop
xor
psubusb
mov
inc
mull
pop
rol
stos
inc
outsl
or
xchg
out
nop
in
push
and
js
cmp
mov
js
dec
push
adc
das
dec
es
dec
mov
xchg
jl
jl
cmp
dec
push
das
adc
mov
and
and
das
and
mov
sbb
test
inc
xchg
mov
lret
push
mov
mov
das
nop
movsb
dec
test
xchg
cld
je
in
ja
or
lret
sub
jne
adc
inc
xchg
inc
push
inc
push
nop
adcb
mov
pop
adc
xor
pushf
xchg
adc
add
test
mov
push
movsb
jo
nop
dec
cmpsb
movsb
adc
jmp
mov
test
scas
in
add
inc
addr16
dec
dec
aaa
lods
ja
lods
pop
dec
push
nop
or
dec
adc
sbb
lret
inc
jg
sub
mov
mov
insb
lea
push
xor
pop
inc
xchg
mov
out
insl
loopne
in
bound
mov
xchg
and
mov
out
or
xchg
rolb
lret
push
les
les
add
test
inc
xchg
dec
in
or
sbb
add
ret
lcall
test
add
and
push
or
rcrb
mov
and
sub
mov
aam
int
sbb
aas
lods
inc
jns
add
fadds
fcoms
mov
fmull
stc
je
sub
loopne
test
nop
inc
cs
push
fstl
xchg
in
lock
pop
and
push
enter
call
xchg
dec
xchg
add
in
mul
test
sahf
imul
pusha
sub
add
int3
xchg
adc
insl
orl
repnz
inc
adc
repnz
ds
in
sbb
push
push
mov
mov
pop
jae
cmpsl
repnz
fs
out
xchg
out
mov
mov
jo
pop
sahf
lret
je
js
adc
mov
arpl
test
outsb
cs
in
mov
test
cmp
iret
out
adc
iret
in
pushf
movsb
mov
test
push
lods
mov
jae
cs
mov
jno
jns
dec
mov
stc
pop
sahf
lret
mov
loopne
adc
sahf
lret
push
int3
dec
rolb
mov
fsubl
lret
jae
mov
or
ja,pt
pop
in
fistl
lock
in
hlt
xor
clc
jo
iret
ja
out
adc
adc
in
cmp
jbe
push
cs
adc
adc
ja
jl
iret
in
sbb
and
cs
in
and
sub
jns
xor
jns
push
lret
jae
cmp
lahf
inc
cmp
je
stc
pop
sahf
lret
mov
cld
push
cmp
pop
sahf
lret
push
push
nop
pop
enter
push
stc
adc
movsb
lret
pop
push
out
repnz
sahf
jo
je
js
add
repz
pushf
push
stc
pop
sahf
test
mov
mov
pop
sahf
lret
adcb
sahf
lret
push
cwtl
pop
pushf
movsb
mov
lock
cmp
test
lret
pop
lods
les
pop
sahf
mov
mov
movsl
bnd
rcr
add
enter
jns
int3
fistl
sarb
test
iret
in
aam
fcom
fmul
in
jl
test
js
mov
pusha
lds
xchg
in
lock
add
push
cld
test
push
lock
sub
add
insl
sub
lea
sbb
ret
inc
mov
ss
push
out
sub
aaa
loopne
sub
imul
mov
sbb
mov
mov
je
or
cmpsl
push
insl
mov
jecxz
adc
sub
bound
pop
nop
pusha
cmc
mov
aam
pop
pop
add
push
mov
nop
jne
imul
sbb
sub
adc
xchg
faddp
push
rolb
and
mov
addb
pop
push
inc
sub
in
pop
push
jl
mov
add
xor
cmp
sub
sahf
lock
movsl
sbb
xchg
cmp
dec
and
or
add
ret
xlat
add
rol
jge
out
ds
sti
mov
scas
mov
ret
jae
outsb
cmpsb
orl
dec
adc
fcomps
outsb
push
adc
out
les
test
cmp
sbb
push
and
rorl
pop
inc
cmp
push
loope
notl
cli
or
xchg
xchg
out
cmp
mov
pop
and
xor
aas
inc
dec
inc
pushf
out
push
pop
bound
fisubs
faddl
es
or
mov
out
sbb
loopne
daa
mov
pop
and
jge
mov
loope
adc
popf
mov
out
push
cs
cmp
push
push
ljmp
and
cs
or
or
adc
cmpsl
or
jmp
xchg
xor
mov
inc
dec
mov
mov
inc
push
pop
cs
push
fxam
adc
icebp
add
int
push
je
jo
xchg
jae
sub
lods
icebp
and
imul
rclb
dec
dec
pop
jno
xor
mov
popf
cld
cmpsl
movd
clc
and
test
rolb
nop
adc
pop
and
pop
lret
pop
nop
jp
cmp
xchg
rol
and
inc
cmp
pop
call
stos
inc
nop
shrb
fidivs
push
lock
popf
das
out
xor
pop
sahf
mov
mov
dec
mov
filds
xchg
add
cmpsb
push
punpckhdq
dec
fiaddl
inc
push
xchg
adc
mov
adc
iret
bound
mov
mov
test
mov
push
inc
dec
adc
into
pop
xchg
pop
xchg
inc
xchg
mov
xchg
andb
or
int3
or
cmp
pop
xchg
fdiv
rolb
xor
daa
xor
mov
xchg
jge
outsb
jae
jo
xchg
pop
or
into
scas
sub
add
and
ss
add
fidivrl
test
mov
popa
es
push
std
into
push
inc
in
hlt
cmp
xor
push
movsb
ss
movsb
mov
call
call
sbb
cmpsl
jo
add
clc
fs
xchg
rcl
inc
adc
bnd
sub
push
in
lods
xchg
arpl
add
add
pop
scas
sub
and
fistps
call
nop
mov
inc
mov
cmp
cs
in
add
hlt
adc
shrl
xchg
pop
add
es
or
ret
mov
dec
inc
xchg
xchg
clc
sbb
push
daa
call
adc
push
sarb
mov
pop
hlt
hlt
nop
sub
pop
inc
add
lock
add
in
jge
ret
jmp
std
inc
xor
aam
fsubl
outsb
sti
xor
sti
movsl
add
ret
sbb
cmc
or
or
inc
cmpsb
xchg
pop
xchg
mov
push
xchg
inc
fimull
testl
xchg
test
sbb
pop
jnp
dec
hlt
inc
jne
test
sarb
pop
imul
mov
mov
add
dec
jne
or
aad
add
push
mov
add
push
mov
mov
push
sub
into
mov
push
stos
insl
mov
loop
aaa
sbb
ss
bound
pop
sbb
les
xor
add
jb
mov
xor
clc
dec
clc
push
or
repnz
add
int3
and
cld
dec
push
inc
test
adc
add
movb
and
jge,pt
push
mov
les
push
sub
testl
fiadds
mov
push
cmp
dec
iret
repz
pop
outsb
jg
mov
cmp
aam
testb
jns
out
sbb
cmp
out
sahf
out
jle
mov
sahf
mov
add
adc
sahf
fildll
mov
mov
pop
jnp
shlb
sbb
mov
lods
test
inc
or
jo
in
or
mov
test
in
nop
pop
enter
cmp
test
sub
add
push
mov
clc
in
inc
and
cwtl
mov
pop
mov
pop
mov
frstor
sbb
jl
mov
and
mov
clc
aaa
enter
push
call
nop
out
hlt
ss
iret
and
nop
mov
aam
arpl
inc
mov
pop
rorb
out
call
lret
add
lea
mov
add
ficomps
enter
and
xchg
popf
arpl
xchg
mov
insl
inc
or
pop
add
push
mov
mov
xchg
test
lea
add
or
sbb
xorl
push
mov
out
or
lea
add
sbb
mov
pop
and
test
mov
mov
mul
ret
aad
test
mov
jae
jmp
mov
mov
mov
aaa
popa
js
add
mov
and
mov
fcoms
cwtl
pop
ret
lods
cmp
orl
inc
lcall
ret
loopne
leave
into
push
push
les
xchg
lea
lret
fistl
or
push
sbb
insl
xchg
pop
or
add
or
and
inc
dec
mov
jnp
adc
inc
mov
flds
lods
shr
xor
pop
and
out
rcl
and
jmp
cltd
or
jno
rsqrtps
jae
sbbb
xor
clc
and
mov
gs
adc
cmp
lods
xor
jle
mov
in
in
adc
sub
pop
adc
xlat
js
push
mov
outsb
popa
lahf
add
mov
fsubr
loope
push
dec
pop
fisttpl
testl
scas
jnp
adc
adc
divb
add
fistpll
mov
mov
mov
xor
push
out
nop
adcb
xchg
pop
pop
pop
inc
mov
jo
sbb
xchg
lods
cmp
lods
mov
insb
pop
repz
adc
push
sbb
out
scas
mov
hlt
ficoms
xchg
rcrb
call
push
inc
sahf
push
xor
pop
test
cs
jbe
pop
js
ss
mov
imul
out
insb
mov
sti
pusha
rcrl
test
cmpsb
push
movsb
mov
xor
scas
in
inc
mov
insl
add
insb
push
and
adc
mov
mov
or
sub
cltd
add
add
mov
add
sub
shlb
sbb
or
and
xchg
mov
into
outsb
sti
fsubrs
push
sbb
jmp
int
mov
test
test
call
xor
mov
inc
inc
cmc
orl
mov
xor
mov
orl
les
and
mov
sub
orb
enter
nop
push
call
iret
aam
mov
fcompl
data16
rcrl
cli
add
sbb
cs
push
roll
aam
in
or
mov
mov
lods
aam
sbb
stc
xor
adc
fwait
jl
sarb
sbb
mov
ret
mov
out
mov
test
ss
das
aam
iret
xchg
mov
dec
xchg
pop
inc
push
xchg
rolb
add
ret
mov
xor
inc
add
pop
insl
cmp
jg
mov
add
sub
add
clc
rcl
xor
or
arpl
cwtl
sbb
pop
leave
insl
fmuls
xor
mov
and
aas
rcrl
call
jmp
push
xchg
les
addb
push
dec
xchg
cli
es
pop
inc
fldt
or
shlb
out
mov
aad
pop
loop
pop
lods
pop
xchg
push
bound
test
data16
pop
xchg
sbb
cli
add
mov
jnp
psrlw
and
add
push
push
mov
xor
xchg
adc
cmp
and
mov
test
add
xor
cmpsl
jg
xchg
add
fstl
or
lock
scas
test
mov
adc
push
jns
sbb
enter
stos
lods
enter
xchg
rorb
xor
dec
and
xor
inc
jmp
or
jl
mov
dec
jno
jl
ret
cltd
scas
xchg
out
mov
loope
or
sbb
lahf
and
cmp
mov
cmp
hlt
add
push
pushf
stos
out
or
sbb
pop
inc
js
cmpsb
jns
sarl
add
or
mov
mov
jp
jecxz
cmp
and
test
mov
and
add
cs
insl
add
mov
and
std
pusha
enter
enter
and
into
test
nop
mov
in
or
sbb
sbb
dec
sbb
and
cmp
inc
or
pop
and
out
insb
addb
sbb
sarb
daa
inc
ss
or
jmp
lret
insl
lahf
rol
ffree
flds
shll
dec
stos
dec
xchg
jne
in
setp
insl
lods
xor
mov
mov
rclb
lret
cmpb
inc
inc
stos
cwtl
mov
in
dec
mov
push
pop
jb
cmpsb
in
rol
mov
and
add
inc
pop
push
jbe
inc
sbb
loopne
pusha
cmp
add
xor
mov
or
mov
push
ret
popf
clc
mov
scas
mov
pop
scas
xchg
jbe
jae
cmp
imul
dec
mov
xchg
jp
je
push
add
movsb
sbb
ds
mov
jp
fildl
sbb
loopne
mov
ja
add
pop
imul
test
cwtl
cmpsb
mov
xchg
mov
cwtl
mov
adc
pop
push
pop
jo
fstl
out
xchg
dec
pop
rclb
fadd
mov
xor
mov
aam
rorb
dec
outsl
ljmp
cwtl
inc
sub
scas
mov
aam
aad
inc
int
lods
mov
mov
inc
rclb
xchg
pop
dec
cltd
pop
cmp
xor
aas
push
jnp
lock
outsb
imul
xor
jge
lock
and
cmp
pop
outsb
clc
lods
pop
popa
sbb
push
adc
push
sbb
rcl
inc
or
outsl
adc
sbb
fsub
adc
nop
sub
inc
push
es
or
movsb
xor
sbb
jmp
adc
daa
inc
xorb
cmpsb
ret
adc
xor
inc
adc
scas
cmp
push
add
mov
add
out
dec
and
sub
mov
stos
mov
adc
mov
adc
pop
fmull
jno
push
faddl
xor
add
or
dec
mov
dec
rorb
imul
arpl
inc
or
addr16
adc
or
dec
pop
and
pop
lea
sub
ds
mov
inc
mov
or
mov
and
xor
je
push
or
aas
outsl
adc
jae
dec
mov
subl
lret
adc
jecxz
inc
test
mov
mov
aas
push
jb
mov
inc
rorb
xchg
iret
fcmovnbe
lods
in
nop
adc
les
dec
inc
clc
or
dec
mov
ret
mov
roll
inc
scas
test
adc
arpl
stos
xchg
mov
nop
orl
icebp
mov
push
cmp
repz
cwtl
or
jmp
and
jb
hlt
hlt
push
aad
mov
push
xlat
mov
jo
push
hlt
nop
fnstenv
les
fistpl
push
xor
sbb
xor
je
mov
mov
stc
addr16
jp
pop
mov
jne
imul
jb
cli
dec
pop
push
add
push
xchg
inc
outsl
mov
dec
dec
cld
push
pop
xchg
or
inc
rolb
test
jmp
xor
add
add
jo
mov
mov
cli
jne
add
or
lds
xchg
js
dec
mov
sub
sarb
and
sbb
inc
push
movsl
mov
mov
sbb
imul
shlb
xor
pop
imul
inc
dec
mov
push
or
or
outsl
ficoms
call
inc
xchg
and
adc
cli
jge
daa
or
mov
xlat
xor
xchg
aaa
jne
dec
loopne
jne
lret
mov
or
mov
xchg
xchg
dec
xchg
hlt
jo
lods
shrb
cmp
mov
ja
enter
stc
test
push
xor
add
add
adc
in
add
call
push
lock
movsl
popf
cmp
in
push
and
rorb
pusha
and
pop
cwtl
and
ficoml
mov
and
xchg
add
jns
and
iret
and
scas
arpl
xorl
lea
mov
inc
dec
push
mov
movsl
cmpsl
xlat
enter
and
cmpsl
fidivrs
add
add
push
data16
push
mov
pop
loop
or
add
lea
data16
xor
rcll
inc
cmpsl
movb
push
cmpsb
sbb
icebp
xor
and
js
fs
or
rorb
xchg
pop
test
mov
mov
sbbl
inc
mov
adcb
mov
cmp
cmpl
inc
imul
pop
dec
iret
imul
xchg
imul
nop
into
inc
cmpsb
bound
xor
out
fidivl
mov
xor
fidivl
cs
mov
add
inc
cmpsl
out
sbb
fstl
test
rcrb
or
lock
mov
xchg
rorb
mov
sub
lea
aam
fdivl
lods
and
mov
stos
out
lds
pusha
int3
mov
mov
add
inc
movsb
out
xchg
cwtl
xchg
and
daa
xchg
and
push
xchg
fsubrs
fmull
add
ja
mov
mov
rorb
xor
outsl
jg
xor
mov
mov
push
and
enter
mov
mov
sub
sarb
mov
inc
cmpl
cmp
add
push
outsb
jne
or
mov
xchg
or
mov
orb
xchg
notl
orb
int
jno
pop
lea
je
adc
dec
sbbb
test
and
aaa
lea
inc
cmp
cmp
push
adc
shlb
cmp
js
lea
add
push
cmp
sub
adc
xlat
mov
add
pushf
inc
or
add
adc
dec
add
mov
sbb
adc
push
icebp
nop
or
cli
mov
dec
adc
mov
push
mov
stos
andl
cmp
les
mov
mov
xor
cmp
adc
fwait
gs
mov
addb
outsb
and
xchg
dec
clc
cmpsb
stos
sub
cmp
adc
cmp
mov
ret
shrb
fwait
mov
sbb
sbb
divb
repz
mov
xchg
orb
push
lods
ret
lret
xor
push
mov
add
dec
add
mov
jmp
movb
xor
ret
mov
inc
loope
insl
sub
add
dec
les
mov
imul
inc
or
insb
mov
mov
test
dec
mov
ja
shrl
jle
pop
add
or
nop
or
add
sub
sub
mov
gs
inc
test
xor
adc
call
push
pop
inc
cwtl
test
mov
push
clc
outsl
movsb
xchg
dec
shll
mov
outsb
enter
call
cld
adc
push
js
cmp
lods
push
dec
add
sbb
mov
and
lret
pop
add
insb
mov
and
js
pop
fwait
mov
leave
and
or
pop
pop
sahf
or
sbb
push
call
into
and
pop
xor
imul
and
xchg
test
sub
test
jnp
adc
sbb
jne
sbb
arpl
adc
lahf
and
inc
sbb
add
ret
pop
stos
call
sub
inc
or
in
cli
mov
xchg
lea
cmp
test
push
roll
clc
mov
xchg
and
loope
adc
je
mov
shlb
and
fimull
sbb
inc
pop
add
fldcw
add
jne
pop
je
mov
mov
pop
loopne
adc
inc
outsl
adc
add
adc
outsb
push
testl
mov
sbb
xchg
test
insb
pop
mov
adc
mov
xor
pop
daa
into
add
dec
outsl
nop
inc
lds
ss
add
pop
insb
mov
pop
jg
inc
sbb
push
or
sbb
adcl
data16
cmp
xchg
push
test
dec
out
cmp
and
adc
xchg
sbb
pop
xor
sbb
add
pop
sub
mov
push
add
repnz
mov
add
lahf
inc
pusha
test
stos
adc
push
shrb
ficomps
pop
aaa
ret
mov
xchg
scas
lret
or
ss
adc
nop
loop
or
fadd
inc
cmpsb
hlt
push
jnp
fdivl
add
insl
and
in
call
adc
sbb
mov
jge
ds
adc
xchg
mov
push
xchg
pop
fists
daa
xor
sbb
lret
pop
int
and
cmpsb
xor
or
lea
pusha
rorb
dec
pop
push
push
fildl
insl
repnz
add
out
sbb
arpl
or
in
adc
jne
mov
jo
add
into
clts
push
and
call
sub
jb
mov
imul
push
out
sub
push
push
ret
insl
or
lea
add
rcrb
mov
hlt
or
rclb
lock
push
xchg
xlat
pusha
shlb
xchg
sub
adc
int
add
add
push
inc
jo
jmp
dec
pop
inc
int
add
sbb
mov
ret
mov
push
int
push
inc
and
test
inc
aaa
cmc
outsb
dec
out
lea
insl
xor
mov
push
inc
sub
in
jecxz
inc
dec
or
fistl
or
sbb
pop
pop
in
mov
mov
xchg
int3
shr
inc
sub
and
xchg
shll
xlat
add
adc
push
add
pop
ror
xor
sbb
sbb
fsubrl
gs
adc
or
mov
adc
sub
aas
cmp
push
dec
aas
sbbb
pushf
lret
xor
sbb
xchg
cwtl
je
into
sbb
xchg
sbb
push
lret
adc
cmp
pop
cmpsl
mov
push
fs
jne
repz
add
or
or
or
mov
pusha
leave
add
or
sub
inc
push
push
addr16
dec
rcrb
fisttps
rolb
ret
and
orl
int
repnz
loop
loop
pusha
add
xchg
cmpl
js
mov
xor
pop
aam
mov
clc
xor
or
inc
push
add
jmp
lods
mov
push
dec
mov
into
xchg
jno
jmp
ret
xor
cmp
or
rcll
jmp
jmp
inc
jecxz
push
or
push
icebp
or
outsl
addr16
lds
into
push
or
ficomps
lahf
dec
dec
inc
inc
dec
dec
dec
push
push
daa
xor
aaa
xor
xor
out
xor
fwait
rcr
xchg
add
repz
dec
pushf
out
adc
int3
fs
rolb
iret
xlat
rclb
outsb
mov
push
loope
nop
iret
sub
inc
add
cmp
mov
jo
loope
movsl
xor
mov
add
bound
inc
push
cmpsb
pusha
add
cmp
rolb
add
ret
nop
setge
nop
and
or
repz
leave
lods
pop
rolb
add
and
lds
inc
dec
add
sbb
adc
test
dec
and
inc
sbb
sarl
sbb
bound
lods
sarl
adc
jl
cmp
js
jg
cltd
add
jo
xchg
lds
xchg
xchg
or
mov
jno
dec
or
lods
insl
es
dec
jo
clc
push
loop
rorb
inc
push
rol
sub
pop
adc
and
inc
mov
push
pop
xchg
jg
clc
inc
mov
test
hlt
add
mov
push
push
push
test
add
and
adc
add
movsb
mov
jg
xchg
xor
xchg
test
push
pusha
arpl
cli
imul
es
sub
inc
not
xchg
fsts
stc
rorb
pusha
aam
pop
add
aas
push
push
call
mov
push
roll
aad
or
push
and
xor
mov
sysret
cmp
fldcw
sbb
inc
in
sahf
je
or
add
and
add
rorl
cmpsl
add
sbb
adc
adc
pusha
adc
es
pop
xor
sbb
push
pushf
or
out
adc
or
test
repnz
iret
xor
into
jb
jnp
adc
xchg
push
in
adc
jg
fdivr
mov
push
add
pop
jbe
pop
mov
fcom
outsb
test
inc
xlat
xchg
movsb
ret
sti
pop
les
adc
cmp
mov
ss
pop
xor
mov
push
mov
stc
push
in
mov
inc
xor
dec
mov
push
in
dec
cmp
insl
mov
push
jb
add
jns
mov
inc
mov
adc
sub
mov
or
loope
add
pop
lahf
and
shll
pop
or
ss
xor
xor
sub
arpl
rorb
jne
shrb
sub
adc
aad
mov
jmp
pop
mov
pop
mov
push
lds
or
ljmp
adc
xchg
movsl
mov
mov
lock
ja
dec
movl
mov
cmp
mov
push
push
int3
cmp
dec
push
sbb
mov
or
add
add
xchg
push
xorb
push
xchg
mov
cmpsb
jo
jnp
push
pop
sti
push
add
mov
mov
or
add
fldl
or
scas
or
cld
jns
adc
pop
jo
mov
inc
out
push
xchg
inc
add
inc
lea
or
cmp
lock
test
xorb
ja
xor
or
adc
sbb
sub
and
bswap
sub
xchg
loopne
push
lret
add
xchg
lds
insb
mov
mov
cmp
or
insb
add
add
add
or
or
and
dec
ficoml
add
fwait
pushf
pop
mov
call
fcmovnb
icebp
imul
push
addr16
xor
pop
pop
sub
mov
xchg
adcl
and
mov
xchg
cwtl
sub
and
jp
loope
call
xchg
xchg
sub
lret
and
psubw
fadds
jle
ds
popa
lahf
rolb
ss
inc
jne
bound
jmp
add
xor
outsl
adc
call
jmp
jp
negb
sbb
xchg
lock
push
push
sub
shll
mov
cwtl
int
fisttpll
ret
rorl
clc
out
rolb
inc
shll
jl
sti
sar
inc
push
push
rcrl
pop
push
in
mov
inc
push
push
add
and
sar
cmp
pop
je
addb
pop
rcr
or
inc
fstpl
push
jns
pop
cmp
dec
lock
pusha
and
in
add
mov
adc
out
mov
sbb
jmp
sub
cmp
imul
dec
sub
cmp
xor
loop
dec
or
mov
stc
jmp
cs
push
movl
mov
daa
testl
mov
and
or
mov
xor
leave
leave
lods
mov
push
mov
dec
clc
mov
xchg
mov
jne,pn
cmp
int3
outsb
in
dec
aad
fisubrs
add
mov
xchg
ds
cmpl
inc
cmp
inc
xchg
test
push
in
ss
addb
dec
inc
push
cmpsl
push
rorl
push
imul
pop
sub
imul
xor
push
xchg
push
add
rolb
or
addr16
mov
sahf
adc
add
inc
sbbb
cmpsb
lock
sub
xor
sbb
mov
pop
shll
fcoml
lds
orl
inc
push
aam
lock
add
or
push
sbb
fcoml
test
mov
sub
pop
sbbb
dec
inc
test
xchg
ret
movb
pop
xor
js
ss
movsl
push
fimull
mov
pop
cmp
aaa
dec
in
add
dec
and
cs
xchg
popa
adc
aam
shld
cld
popa
push
mov
xor
lock
push
add
dec
sbb
clc
mov
cmp
xchg
push
push
push
lock
sahf
in
dec
adc
das
pop
and
inc
out
fistl
adcl
adc
mov
xchg
mov
pushf
dec
sbb
push
or
push
adc
xchg
dec
or
mov
enter
adc
fiaddl
xchg
cmp
testl
test
movl
aam
sbb
sub
or
rcrb
xor
dec
ja
jns
in
mov
iret
push
in
sub
aam
fsubl
test
fsubl
push
sbb
lret
ficoms
push
or
push
mov
ret
and
pop
pop
sub
add
imul
and
jl
dec
sbb
pop
sbb
add
inc
xor
jnp
add
mov
dec
push
push
and
sbb
inc
mov
sub
xor
mov
xchg
sub
das
cld
mov
dec
sub
test
jecxz
jle
xor
mov
sar
xchg
movsb
insb
pop
push
mov
sbb
scas
push
rorl
xor
jmp
pop
sti
mov
sub
fdivrs
adcb
pop
lcall
xor
sub
daa
mov
sub
push
mov
test
jmp
sub
rol
xor
movsl
inc
and
and
and
int3
dec
and
movsb
inc
xor
add
adc
lea
push
cmp
mov
popa
xor
sub
test
nop
sub
adc
sub
mov
icebp
mov
pop
jl
inc
ret
push
rcrb
and
loopne
nop
or
pop
inc
in
xchg
or
pop
push
sub
add
ret
sbb
sbb
and
movsb
push
mov
fisttpl
pop
sub
call
pop
dec
mov
lds
sub
dec
inc
jne
addl
fs
xchg
leave
xchg
lods
lea
out
inc
ret
adc
ja
ljmp
sbb
push
arpl
out
adc
mov
movsl
or
aas
repnz
movsl
sarb
inc
cmp
je
enter
sub
mov
inc
jbe
sbb
adc
dec
sub
out
in
repnz
rcl
psrlq
in
in
aad
xlat
in
in
fcomp
fcmovu
in
in
in
in
rol
ret
in
in
in
in
enter
in
in
int3
int
iret
inc
sbb
in
mov
xchg
sbb
or
test
daa
cli
mov
xlat
jmp
call
inc
sarl
mov
negl
cwtl
in
iret
or
and
xchg
pop
mov
cld
push
je
lahf
nop
jb
pop
or
rcr
inc
ret
or
pop
sbb
test
add
and
shrb
inc
or
pop
add
out
addb
out
cmp
jo
xchg
nop
ljmp
add
push
fsubrs
mov
cmp
dec
cltd
aas
cmpsl
push
mov
adc
sbbl
jb
xchg
and
aad
push
dec
sbb
push
mov
mov
and
cmp
stos
cmc
jae
add
cmp
fchs
aam
sub
sub
xor
inc
sbb
inc
mov
adc
jbe
dec
sub
mov
mov
adc
fidivs
sbb
jmp
test
push
loopne
pop
xor
xchg
and
pop
icebp
dec
and
xor
sbb
mov
pop
loopne
add
or
sub
and
inc
mov
out
int3
xor
pop
mov
dec
jmp
ja
inc
cs
out
pop
or
dec
pop
das
mov
ss
or
ret
dec
jb
cmp
repnz
inc
in
pop
out
mov
xor
fs
lock
add
push
cltd
test
or
add
lret
xor
in
adc
xor
sub
adc
xchg
mov
sbb
roll
add
aas
xor
bound
sbb
sbb
pop
sbb
and
jb
xlat
xchg
and
jae
pop
insb
aad
or
jecxz
adc
or
mov
daa
sub
lea
loope
mov
push
das
adc
loop,pn
push
in
xchg
cld
pop
add
sbb
inc
outsb
outsl
jne
push
sbb
inc
cmp
adc
in
xlat
and
inc
enter
cmp
jne
rcll
cmp
push
iret
loop
addl
iret
cmp
lahf
les
lcall
push
out
adc
and
jnp
in
inc
repz
daa
add
adc
xor
sbb
nop
xchg
push
add
pop
out
je
out
movsl
out
add
and
lods
imul
mov
leave
mov
jmp
fnsave
add
clc
push
aam
push
push
dec
add
icebp
push
dec
sub
lock
mov
push
out
mov
in
push
rol
or
cmpsl
inc
pop
jmp
sub
and
xchg
jo
cmpsb
aad
xchg
scas
and
roll
iret
push
in
pop
cmpsb
inc
stos
sbb
test
inc
inc
pop
adc
push
fists
pop
push
insl
lock
inc
cwtl
adc
aam
icebp
fildl
jle
je
leave
insl
mov
pushf
jno
pcmpeqb
and
nop
or
or
push
sub
add
cli
cmp
mov
add
sbb
xor
fisubs
outsb
adc
xor
cmp
mov
jmp
xor
xor
mov
fiadds
sbb
pop
push
cmp
xchg
push
test
clc
sub
fcomps
add
cmp
xchg
push
xchg
out
mov
pop
repnz
inc
sbb
or
hlt
pushf
cmp
add
and
jecxz
mov
fcmovb
or
clc
movsb
pusha
les
dec
hlt
pusha
addb
push
add
js
ljmp
in
and
push
dec
and
pop
hlt
gs
ds
add
int
addb
adc
mov
jle
mov
adc
sub
sbb
xchg
rorl
jle
pusha
push
and
dec
jmp
inc
popa
in
sub
jmp
sub
adc
mov
jmp
inc
shrb
test
aaa
adc
aad
inc
aaa
inc
xchg
jbe
sbb
nop
repz
sub
sbb
push
in
and
repz
jbe
pop
out
mov
loop
cmp
fwait
jecxz
or
adc
xor
fsubrl
loopne
push
into
add
xchg
mov
fldt
mov
clc
aam
divb
and
xorl
dec
xchg
mov
mov
mov
pushf
mov
fadd
xchg
push
aad
loopne
xchg
cmpsb
lock
and
in
inc
imul
mov
bound
cmpsl
rcll
lahf
jmp
clc
mov
push
fadds
fnstenv
mov
mov
inc
pop
sub
push
pop
shlb
adc
in
nopl
cs
sub
sbb
cmp
add
lods
mov
jecxz
and
sub
dec
hlt
xchg
or
adc
sub
jne
push
cmc
fdivl
sbb
jle
in
aas
ret
test
cli
mov
pop
aam
adc
fstl
nop
ljmp
push
jg
test
mov
pop
testl
call
or
mov
test
add
clc
mov
adc
cmp
pop
xor
rolb
sub
push
dec
push
add
inc
inc
mov
int
sub
mov
lret
xchg
nopl
jle
add
sarl
bound
inc
sbb
inc
orb
insb
fcmovnb
add
xor
lret
test
sbb
cmp
and
push
enter
jle
xor
mov
mov
out
xchg
xchg
or
inc
dec
or
xor
push
inc
sub
popa
or
add
push
dec
test
mov
ss
int3
xchg
add
das
xor
popf
cmpsl
mov
mov
add
pop
push
inc
ret
pusha
das
or
xchg
mov
sti
inc
mov
or
les
push
and
sbb
repz
pop
nop
pusha
mov
or
pop
into
xchg
pop
pop
sub
or
enter
mov
inc
add
inc
popf
inc
mov
pop
xlat
inc
dec
in
or
and
push
movsb
rcll
or
mov
ljmp
push
xchg
cmp
subb
outsb
dec
mov
inc
lcall
adc
shlb
adc
pop
xor
sub
in
xor
push
xor
out
or
shl
gs
xor
mov
inc
dec
mov
int3
lea
and
add
xor
sbb
nop
sbb
pop
in
add
xor
and
daa
gs
nop
rcrl
cli
inc
mov
xchg
pop
or
pop
xor
jne
adc
fimull
xchg
sbb
in
mov
nop
xchg
cs
fsubl
xor
or
jb
imul
and
and
hlt
insb
and
push
mov
push
scas
xchg
pop
test
loop
test
in
test
daa
xlat
in
xchg
and
call
pop
sbb
nop
inc
std
mov
es
push
dec
outsb
adc
jo
je
test
add
ret
pop
pop
mov
nop
mov
jb
adc
mov
adc
jb
or
lock
jne
adc
dec
add
add
in
sub
sbb
subb
xchg
push
adc
ret
push
pop
es
and
dec
mov
and
dec
pushf
popa
loopne
dec
jb
pop
mov
or
mov
mov
arpl
packuswb
push
outsl
out
add
adc
inc
push
push
xor
xchg
jo
sbb
mov
jmp
and
adc
mov
pop
cmpsb
push
push
dec
jbe
bound
add
into
inc
enter
adc
scas
mov
pop
movsb
adc
es
add
or
in
add
mov
push
add
sbb
rcrl
jnp
xlat
je
xchg
je
or
mov
aam
push
and
aam
adc
in
loope
in
mov
cmp
cmp
sbb
cwtl
test
add
movsb
xlat
test
mov
pop
sbb
dec
aad
in
jnp
adc
adc
dec
adc
fs
push
js
jl
inc
mov
cmpsl
jno
xchg
adc
inc
cmpsb
fs
fimull
in
call
pop
inc
inc
push
fucomi
rorl
push
add
adc
inc
mov
mov
xchg
adc
popa
insb
or
ror
outsl
sbb
xlat
and
test
add
imul
pop
mov
nop
or
mov
daa
inc
or
arpl
mov
in
inc
out
pop
add
xchg
inc
and
and
in
shr
nop
je
js
and
pop
and
ret
fs
cmpsb
or
or
in
mov
mov
xchg
lock
lahf
push
push
dec
ss
repnz
or
and
pusha
or
stos
imul
enter
and
mov
das
xlat
xor
pop
cmp
or
or
rorb
jne
sub
mov
movsb
or
aas
and
or
repnz
or
jbe
mov
movsl
push
push
sbb
jo
jecxz
insb
jnp
or
pusha
or
dec
push
ror
pop
leave
cs
cld
fxch
or
and
and
nop
or
mov
insl
cmp
push
push
jl
push
dec
push
clc
sbb
adc
sahf
movsl
push
push
sbb
es
mov
lahf
idivb
ds
data16
push
nop
sbb
data16
insb
push
inc
push
dec
and
push
push
and
mov
int
sbb
adc
sarb
mov
lock
je
test
jmp
fnsave
pop
and
xchg
cwtl
mov
das
dec
out
lcall
gs
enter
jo
bound
decl
lret
int3
addr16
dec
cmpsl
cs
push
add
adc
repnz
add
outsl
mov
movsb
or
icebp
lahf
mov
push
ljmp
xchg
cmp
cmp
pop
inc
or
std
inc
sahf
outsb
or
les
out
add
mov
xor
push
sbb
fbstp
es
push
dec
insb
lea
je
aam
push
addl
aad
in
ficoml
mov
les
lahf
xor
mov
cmp
loope
push
test
movsl
xor
scas
jbe
imul
sbb
dec
adc
lock
mov
lret
sbb
pop
leave
ror
movsb
inc
inc
xchg
fs
std
lahf
mov
inc
mov
cltd
dec
add
je
jae
sub
adcb
add
or
rol
add
lcall
das
add
subl
loopne,pn
das
pop
sarl
pop
popa
insl
cmp
sbb
lret
loope
idivl
pop
mov
jnp
mov
xor
pushf
add
adc
shr
xor
lea
lods
scas
fnstcw
xchg
dec
jg
pop
push
mov
adc
xlat
lea
aaa
enter
push
je
mov
jae
das
add
in
mov
pop
ret
iret
adc
push
inc
push
push
adc
subb
push
sahf
dec
fld
and
fisubs
pushf
push
popa
ljmp
jmp
sub
stos
and
leave
or
or
inc
imul
lcall
jno
je
add
sbb
adc
mov
adc
iret
push
fildl
aam
sbb
adc
scas
movsb
shrl
push
inc
add
imul
or
xor
adc
adc
es
sti
dec
add
daa
add
movsb
ret
add
sbb
popf
hlt
add
inc
in
mov
loope
enter
ja
jns
add
push
and
or
cmp
pop
mov
in
push
cmp
inc
pusha
add
lock
cmp
sbb
pusha
xchg
movl
inc
jg
mov
jecxz
dec
push
in
dec
in
cwtl
inc
daa
dec
enter
repz
or
xchg
push
mov
push
cmp
js
lock
or
adc
adc
mov
dec
inc
wrmsr
in
push
mov
jo
stc
movsb
jg
cmp
aaa
or
adc
jmp
rol
jecxz
adc
or
inc
loopne
loope
sarb
mov
sahf
inc
xorl
sbb
mov
mov
xchg
jle
cmp
jle
aaa
adc
jecxz
inc
pusha
mov
int
inc
cmp
inc
lock
pop
dec
mov
pop
in
push
aas
clc
cld
out
fs
lds
call
add
shrl
add
jns
scas
call
inc
loope
xchg
sbb
in
loopne
sbb
pop
or
dec
jl
or
adc
fisttpl
and
pop
dec
add
gs
popf
mov
insl
outsl
mov
pop
pusha
aad
test
add
dec
xor
pop
rcl
mov
push
mov
es
pop
pop
push
aaa
cmpb
ljmp
and
adc
movl
pop
add
lods
daa
leave
adc
fnstenv
test
inc
add
lret
sbb
mov
ss
js
add
dec
bound
popf
ss
add
add
dec
int
sub
push
and
sbb
clc
cmpl
add
dec
cld
xchg
nop
ret
inc
xchg
cmp
add
fldl
mov
cltd
pop
ja
or
sub
add
fs
sbb
dec
stos
add
inc
jae
sbb
jge
gs
orl
xchg
jmp
sbb
sub
loopne
xchg
mov
clc
movsb
in
mov
lods
and
inc
dec
add
popa
vsqrtsd
add
imul
addb
inc
adc
xlat
inc
leave
inc
adc
jecxz
inc
pusha
sub
andl
and
push
in
or
adc
xor
dec
imul
inc
or
xchg
mov
or
loopne
cmp
pop
je
xchg
sbb
push
aam
inc
mov
cmp
pushf
fldcw
push
pusha
mov
subl
pop
xlat
cs
cltd
pop
cmp
loopne
jg
jno
jl
test
je
aaa
inc
jne
inc
mov
inc
daa
mov
outsb
adc
sub
lahf
das
stos
inc
sbb
xchg
dec
test
mov
out
jle
mov
fistpl
jg
sbb
stos
sub
xor
ja
inc
iret
es
sbb
adc
push
mov
sbb
jb
aas
loop
cmp
mov
pop
inc
icebp
sbb
sub
mov
adc
dec
jmp
mov
out
and
sbb
lret
sahf
dec
push
and
imulb
je
xor
clc
sub
inc
imul
ljmp
sbb
hlt
dec
inc
add
mov
sbb
xor
cmp
or
adc
mov
fnsave
movsl
add
cltd
lock
gs
jb
add
push
mov
movsb
cmpsl
lret
sub
cmpsb
movsl
push
lret
cmp
cltd
add
aaa
jmp
fidivrl
xchg
dec
loopne
jne
loopne
lock
sbb
fistps
int3
add
orb
inc
fisubl
insl
ljmp
and
add
mov
sub
or
in
xchg
cwtl
pop
and
jo
dec
jo
subb
repz
mov
push
mov
aaa
clc
xchg
mov
xor
imul
sbb
pop
lods
shrl
mov
sbb
and
je
inc
adc
pop
mov
subl
mov
jle
cli
mov
xor
pop
mov
in
and
outsb
in
roll
aas
loopne
inc
cmp
cmpsb
cmpsb
mov
add
pop
fs
inc
adc
fldt
cmp
jmp
or
xor
dec
fcoml
lds
int
cmp
aad
jnp
mov
aas
push
and
test
jnp
pop
pop
sub
iret
mov
mov
or
mov
daa
dec
lahf
clc
sbbl
cmpsb
scas
cld
cli
insb
pop
movsb
mov
jno
dec
lea
aaa
sbb
cmpb
xor
cmp
jmp
inc
dec
xor
or
sbb
loope
mov
sbb
jg
inc
cmp
arpl
nop
nop
sub
hlt
add
push
add
jbe
push
xchg
loope
mov
jmp
sub
pop
lea
pushf
jmp
pop
or
pop
cwtl
hlt
push
sbb
inc
mov
lahf
enter
and
dec
testb
hlt
aad
sub
adc
roll
in
sbb
pop
xor
mov
popf
and
call
add
les
fnstsw
mov
es
loopne
pop
sti
xchg
push
adc
aas
or
fstpl
xor
inc
sub
add
push
sub
push
xor
or
clc
cmp
cmp
stos
sbb
lods
mov
mov
test
sarb
ret
test
sub
push
or
cmp
lods
add
clc
xchg
add
dec
incb
xor
adc
push
sub
call
xlat
push
jle
add
pusha
leave
repz
cmp
pop
jo
jo
ficoms
jae
ret
dec
cltd
mov
sub
fbld
cwtl
jne
jle
push
adc
xchg
xor
mov
clc
or
lret
dec
dec
pop
xchg
and
cmp
cmp
jbe
xchg
dec
adc
inc
mov
mov
mov
push
dec
sub
imul
jmp
dec
call
inc
es
addr16
cs
add
rolb
xchg
jge
int
pop
out
scas
jle
test
test
dec
jae
inc
jle
clc
sbb
pop
pop
fldl
jns
je
mov
or
je
scas
insl
leave
xchg
inc
mov
and
or
or
or
pop
dec
mov
cwtl
insb
pusha
pusha
jge
jp
sub
xchg
test
mov
nop
jl
leave
inc
and
jle
or
ret
add
icebp
jmp
movsb
add
mov
adc
xchg
test
rcll
mov
inc
and
sub
ja
pop
cmpsl
push
in
lock
and
gs
pop
add
push
outsb
dec
and
in
adc
xor
sub
pusha
popa
mov
fistpl
jns
lods
inc
and
into
adc
cmp
sbb
lock
or
sbb
mov
add
inc
cmp
dec
insl
adc
inc
cmpb
cmp
pop
int
nop
xchg
adc
sbb
dec
in
inc
mov
sbb
mov
out
std
ret
pop
mov
adc
popf
inc
mov
mov
dec
fwait
sbb
add
stc
push
mov
es
cmovp
push
nop
and
push
mov
fs
push
and
aam
pop
leave
inc
enter
inc
push
fwait
divb
add
push
inc
js
pop
add
push
mov
scas
sub
inc
pop
push
or
dec
mov
pushl
data16
sub
add
sbbl
push
ret
ret
cs
out
xlat
in
mov
mov
pusha
or
sbb
divl
inc
cmp
mov
adc
xlat
cld
pop
pop
add
jge
lea
sbb
mov
loopne
and
mov
xchg
pop
mov
push
cwtl
cwtl
and
push
or
decl
dec
pop
or
rcrb
je
or
push
add
mov
pop
pusha
lods
mov
mov
pop
and
mov
dec
mov
mov
ss
aam
push
inc
push
push
ja
jbe
ja
adc
into
or
push
push
lret
jl
sbb
stc
push
adc
sbb
popf
pop
add
stos
push
pop
cld
mov
cs
dec
lcall
es
jb
pop
sub
inc
lcall
cmp
mov
icebp
pusha
pop
fisttps
xchg
add
xchg
addr16
and
mov
push
enter
sub
out
mov
aas
and
push
mov
add
test
mov
dec
scas
mov
sub
nop
adc
sub
sub
push
pop
or
xor
pop
enter
cmp
mov
push
or
push
test
and
pop
xor
fisubl
mov
or
push
or
jge
add
loopne
inc
inc
daa
pop
and
rcr
add
or
mov
idivl
add
call
mov
pop
inc
ret
xchg
stc
andb
xor
jmp
fistl
push
fcmovbe
inc
push
push
sbb
jmp
into
jp
fsubs
movsl
ucomiss
and
insb
fs
cmp
dec
aas
add
xor
dec
push
adc
push
and
in
pusha
dec
sub
pusha
mov
adc
mov
int3
rclb
test
loop
outsl
jl
push
pushf
idivb
frstor
or
jl
fiaddl
cmpsb
mov
in
ret
daa
lods
add
sub
in
insl
lea
in
and
mov
or
outsb
adcl
inc
xor
scas
and
push
test
test
fcmovb
insb
sbb
lock
add
jl,pn
add
sahf
xor
or
or
imull
mov
fsubrs
es
xor
jle
lds
push
iret
enter
add
and
and
insl
aaa
jp
mov
cmpsl
jg
test
jecxz
push
nop
and
lods
add
cmp
push
lahf
xchg
les
add
movsl
jae
pop
mov
push
adc
sub
adc
sub
cwtl
mov
in
aam
subl
sub
in
add
jo
mov
lret
movsl
test
inc
sub
add
iret
jge
adcb
xor
stos
mov
mov
daa
out
lock
mov
jns
pop
xchg
inc
movsb
mov
nop
cltd
pop
repnz
xor
adc
push
xchg
push
pushf
xchg
adc
xchg
test
mov
jo
lods
mov
mov
dec
lock
pop
push
int3
cmp
or
jl
shrl
nop
mov
je
leave
insl
in
pop
add
iret
leave
leave
rcl
adc
mov
jmp
int
lods
ret
add
aas
pop
xor
nop
lea
add
aaa
daa
xchg
adcl
xor
test
and
xor
addl
dec
iret
pop
sub
inc
adc
sub
or
lcall
jg
ucomiss
push
cmp
or
dec
add
in
mov
jnp
mov
cmp
inc
and
in
repz
or
rorb
test
cmp
add
or
cmpl
cs
adc
outsb
ret
or
fsts
aam
enter
push
sbb
flds
pop
add
js
not
loopne
adc
pusha
popa
or
ja
ljmp
sbb
and
inc
movsw
aas
add
xor
sbb
dec
fiaddl
inc
insb
arpl
fs
dec
mov
mov
and
stos
or
sti
xchg
mov
mov
xchg
enter
push
rclb
ja
aaa
movsl
out
xchg
cmp
sbb
or
out
push
add
pop
mov
add
cmp
push
je
nop
pop
mov
sub
push
shlb
xchg
mov
xchg
cwtl
mov
mov
dec
lea
and
push
mov
sbb
push
mov
shll
fists
add
call
push
in
add
or
hlt
stos
insb
jl
and
fs
add
push
adc
out
jecxz
shl
mov
sub
adc
mov
adcl
lret
rorl
loop
xchg
das
movsl
cmp
cmp
dec
mov
and
mov
sti
sbb
add
pop
mov
out
cmp
movsb
mov
xor
adc
out
mov
mull
mov
outsb
setb
fmuls
movl
mov
ret
aam
enter
mov
sub
orb
fcomi
jnp
xor
mov
inc
jne
pop
mov
aas
push
aas
les
movl
push
fisttps
mov
inc
clc
fcomps
mov
mov
outsl
enter
call
dec
xor
wbinvd
icebp
pop
adc
jno
imul
sti
or
dec
adc
fst
dec
addr16
iret
xchg
leave
lcall
mov
imul
out
rcrb
mov
in
jb
jl
lahf
nop
xchg
nop
pop
jp
cmp
and
xor
loopne
mov
mov
outsl
loopne
sub
fs
cmp
nop
fdivrs
pop
add
iret
flds
outsb
bound
ret
add
sbb
mov
inc
inc
or
adc
dec
in
xor
jmp
mov
fstpl
add
push
pop
push
push
sbb
add
pop
inc
sbb
cld
stos
inc
push
inc
movsl
sbb
mov
pop
sbb
cmp
dec
and
adc
mov
jno
add
lcall
dec
push
jne
cmp
bound
xchg
fcomi
pop
subl
outsl
xor
and
pop
mov
cmp
xor
push
dec
jne
fists
xchg
loop
cmp
fwait
jmp
pop
or
add
aaa
mov
pop
pop
or
xchg
xor
mov
movsb
out
add
imul
adc
movsb
add
mov
add
clc
xor
mov
cld
clc
inc
pop
pop
sbb
and
add
push
push
add
inc
mov
cwtl
lret
cmp
adc
jmp
mov
or
add
shrb
inc
push
pusha
aas
push
jge
test
dec
lods
out
or
aaa
sub
enter
push
fwait
sub
adc
and
or
sti
lahf
test
pop
sub
outsb
jno
mov
dec
mov
xor
push
and
pop
in
syscall
sub
addl
or
repnz
xor
cmp
stos
and
cmp
cs
shlb
out
js
outsb
or
cmp
mov
adc
bound
mov
es
cwtl
push
invd
sub
inc
jno
test
xchg
sbb
mov
adc
jmp
jo
mov
xchg
sbb
cmp
add
xchg
cmpsb
mov
cmp
add
xor
sub
xchg
adc
dec
test
js
movsl
add
xor
add
dec
sub
inc
fildl
push
or
jecxz
pcmpgtd
pop
adc
or
daa
test
in
repnz
inc
inc
jle
adc
mov
mov
xchg
or
dec
push
daa
test
push
dec
sub
lret
add
dec
test
sub
jb
adc
cltd
xchg
adc
push
add
mov
add
test
inc
jb
add
insb
cmp
adc
inc
iret
add
add
aaa
nop
rclb
and
shll
dec
and
test
or
fisttpl
push
mov
repnz
or
and
stos
or
call
or
pop
scas
dec
xchg
adc
inc
scas
in
sbb
orl
cmp
sub
inc
fnstsw
adc
sub
cmp
dec
dec
xchg
popf
mov
cs
inc
adc
pop
shrl
loopne
aam
adc
and
sbb
or
adc
popa
insl
flds
add
sbb
inc
leave
mov
cmc
inc
pop
lea
push
fwait
cmc
dec
and
push
inc
sub
inc
out
sbb
outsl
and
test
inc
and
jg
inc
jns
dec
inc
dec
push
cmp
cmpsl
jnp
fistl
rcl
out
sub
sbb
pop
ja
or
jl
mov
jge
or
sysenter
or
inc
and
xor
adc
roll
int3
cld
mov
cwtl
lods
adc
aas
js
call
mov
lret
cmpsb
sbbl
add
mov
test
or
in
jns
dec
add
and
test
sbb
cwtl
push
out
jae
lahf
testb
jo
pusha
call
js
out
arpl
ja
xor
rorb
pop
pop
sub
call
xchg
adc
inc
stos
adc
push
pop
push
xor
in
fs
movsl
mov
jl
or
and
outsl
pop
inc
inc
es
and
notb
movsl
pop
test
or
xchg
fwait
pop
enter
mov
sbb
clc
sub
inc
push
xchg
mov
lock
add
sbb
sub
pop
sbb
dec
sub
mov
xchg
cs
pop
sbb
lods
mov
pop
add
or
dec
ss
clc
dec
sub
inc
xor
inc
mov
sbb
imul
sbb
in
cmp
jmp
mov
mov
notl
dec
cmpb
faddl
je
or
adc
lahf
pop
xor
loopne
dec
or
push
jae
cs
in
in
xchg
add
nop
sub
nop
rclb
aam
in
add
add
cmp
movsb
popa
outsb
call
push
pop
shlb
sbb
jo
hlt
imul
push
inc
cwtl
pop
or
dec
fstpl
test
cs
cmc
imulb
xor
mov
mov
cmpsb
xor
sbb
insl
shrb
aam
fcoml
in
xor
add
and
xor
jbe
ret
adc
add
xchg
add
cs
dec
inc
dec
xor
push
pop
mov
lret
cmp
cmc
movsb
inc
or
mov
sub
inc
add
testl
push
dec
jmp
aas
fs
inc
mov
clc
test
pop
jb
mov
in
fmuls
arpl
inc
add
mov
ret
out
pop
add
enter
cld
shr
inc
les
push
dec
in
add
and
fisttpll
mov
xor
and
add
mov
adc
xchg
xchg
jne
sbb
adc
lods
bound
jge
or
in
and
add
adc
or
into
or
les
sahf
hlt
add
pop
nop
adc
sub
outsl
xor
out
out
dec
cld
inc
add
jae
loope
lods
les
and
and
xchg
test
add
push
add
xchg
dec
shl
lock
sbb
dec
sbb
sub
inc
adc
dec
jno
ja
push
adc
imul
popa
mov
das
and
dec
inc
sub
push
push
mov
push
test
xchg
and
add
call
idivl
inc
and
mov
or
pop
in
add
push
js
adc
rclb
movsb
adc
inc
addb
cmp
adc
cmp
ds
lea
movsl
adc
and
call
addb
gs
aas
lea
ja
and
fs
sub
push
sub
pop
scas
scas
pop
sub
sub
out
mov
push
fistl
xchg
push
mov
repz
sub
push
je
cmpsb
repnz
rolb
les
filds
dec
call
addr16
pop
nop
shl
mov
pop
leave
inc
push
loopne
mov
loopne
jl
jns
fsubl
cld
dec
sub
fsubs
pop
mov
fsubs
xchg
rolb
pusha
aam
adc
sbb
je
shlb
pop
mov
or
int3
pusha
push
lods
or
xor
aam
bswap
add
mov
imul
out
pop
inc
cwtl
xor
xchg
xchg
movsl
jo
adc
and
or
mov
mov
orl
dec
loop
fmull
and
movsl
shlb
scas
iret
outsl
inc
mov
dec
pop
mov
fsubs
push
fdivrs
push
push
push
and
sbb
fists
mov
and
popf
xchg
and
add
xlat
or
and
jecxz
popa
push
ja
add
add
and
and
in
or
add
in
call
adcb
sbb
push
fbld
clc
loopne
movsb
sub
pop
add
sbb
nop
add
inc
push
fs
add
aam
and
or
jle
add
mul
mov
in
mov
fwait
jae
add
scas
inc
and
add
jge
sarb
sbbb
pop
sbb
cld
in
les
lds
push
pop
sarb
nop
mov
sub
test
test
rorb
jmp
xchg
jle
nop
mov
dec
cmpsb
cmp
orl
dec
xchg
xor
dec
mov
js
inc
xchg
sbb
test
scas
movb
cmp
sub
mov
pushf
cwtl
pop
and
mov
add
enter
cmpb
adc
jmp
aaa
stos
bound
inc
pop
fwait
arpl
push
pushl
add
pop
aad
leave
pop
ja
aaa
outsb
inc
push
aaa
imulb
push
and
mov
xchg
pop
addb
cmp
adc
cmc
out
dec
sub
fildl
sbb
jnp
je
push
mov
dec
and
mov
test
cs
subl
sub
push
stc
add
outsl
fisttpll
push
add
mov
xor
in
pop
sahf
loope
jb
or
clc
pop
rcrb
inc
jmp
mov
fbld
mov
add
scas
jbe
push
lcall
cmp
cltd
call
jno
add
aam
in
loop
xor
shlb
es
lods
loopne
and
add
xchg
fmuls
push
sub
ret
mov
mov
push
repnz
or
lds
and
and
pavgb
mov
popa
lock
popa
xor
mov
test
lock
js
xchg
mov
push
fwait
les
or
scas
jno
call
adc
imul
inc
lea
and
xchg
idivl
mov
push
dec
push
outsl
push
xchg
mov
clc
sahf
pop
sub
dec
pop
imul
outsb
and
dec
add
fsubrl
dec
rcrb
push
arpl
imul
inc
ficoms
aam
aam
mov
jb
sbb
imul
jb
call
leave
add
enter
leave
add
rol
jl
add
out
jns
scas
inc
cs
hlt
hlt
jo
jo
jne
mov
xchg
pusha
outsb
jmp
push
add
lods
ret
adc
call
les
mov
je
push
repz
mov
push
enter
mov
push
mov
mov
lods
push
mov
and
dec
pop
loop
push
cmc
daa
rolb
add
inc
mov
jns
loop
movsb
hlt
sub
push
sbb
or
xor
pusha
sub
test
in
adc
xchg
std
push
and
jno
xor
mov
scas
aam
mov
inc
adc
mov
int3
lock
sbb
adc
out
or
sbb
push
leave
repz
or
arpl
sbb
out
and
xchg
xchg
sahf
nop
lret
pop
dec
mov
imul
xor
mov
insl
stos
inc
pop
inc
fucomi
jmp
adc
loopne
sbb
or
push
adc
jge
jnp
bound
sarl
test
inc
test
jne
pop
fistpl
and
push
dec
push
je
lcall
cs
push
push
jb
pop
cmp
push
xchg
sub
lock
call
in
dec
pop
pop
push
nop
shr
or
pop
pop
mov
in
addl
or
xlat
subl
and
or
xchg
or
aam
adc
and
fsubrs
or
jmp
arpl
test
pop
mov
in
mov
push
fxch
enter
xchg
sbbl
add
sarb
mov
mov
int3
add
inc
les
movsb
imul
mov
mov
mov
imul
dec
jle
pusha
test
mov
pusha
rorb
add
inc
sbb
pop
imul
dec
adc
add
push
add
aas
and
sub
fwait
push
shlb
in
inc
xor
in
cmp
mov
add
pop
add
lds
adc
dec
addr16
inc
nop
es
cmove
nop
or
push
mov
movsb
adc
fbld
pop
xchg
je
ret
jbe
lods
ret
add
xor
push
loopne
mov
cmp
mov
mov
pop
sub
mov
cwtl
jle
fstpt
outsl
jl
es
add
movsb
aam
inc
mov
mov
push
jmp
add
mov
dec
jp
pop
jmp
inc
nop
inc
lcall
and
lock
sub
inc
inc
aaa
xchg
stos
sbb
mov
in
add
jb
iret
repz
push
jbe
ret
and
jns
or
push
push
pop
outsb
fisttpll
adc
nop
inc
testb
mov
sub
loopne
loopne
cmpb
mov
in
xor
mov
add
or
dec
aam
aam
add
xchg
rcl
int3
in
add
int3
enter
push
test
data16
shlb
cmp
xchg
mov
les
mov
mov
icebp
sahf
outsl
mov
in
push
sub
hlt
add
adc
rolb
push
add
sub
xor
push
les
mov
push
sub
rclb
mov
cmp
xor
jb
lock
sub
inc
mov
xor
cmpsl
lock
cmp
pop
add
ret
aas
aas
enter
sub
jmp
nop
iret
je
into
fsubrl
inc
std
cmp
leave
push
fldcw
das
jno
mov
dec
sub
jb
test
jg
jno
dec
or
imul
dec
js
dec
mov
jl
outsb
or
mov
test
push
sub
xor
insl
enter
cmc
jb
fsubr
js
push
fdivrl
xchg
jl
mov
pop
sbb
bound
jmp
test
push
les
lret
xor
rolb
mov
cltd
add
les
pop
pop
adc
xchg
sub
aam
mov
push
add
pop
mov
ja
adc
adc
xor
lahf
dec
in
xchg
loop
addr16
in
adc
xchg
push
jl
out
xor
adc
xlat
or
add
subl
sub
adc
sbb
add
or
lea
flds
xchg
lcall
add
or
and
nop
lahf
je
mov
les
xor
dec
das
fidivl
mov
les
pusha
inc
pop
getsec
nop
add
pop
jge
lock
push
sbb
or
dec
add
bound
hlt
ret
mov
xchg
ret
adc
call
das
leave
jne
leave
jmp
jne
and
mov
mov
push
jo
jge
jbe
repnz
es
push
xchg
and
test
cs
jmp
pusha
mov
dec
in
inc
add
xor
fisubl
arpl
mov
clc
mov
loopne
ficompl
shll
xor
jae
stos
fwait
xor
mov
mov
or
ret
leave
jae
mov
loope
loopne
rcll
and
adc
and
xchg
and
mov
adc
xchg
jmp
jae
sbb
cmp
push
outsl
add
inc
sub
pop
pavgb
push
ret
sub
and
adc
pop
mov
inc
faddl
push
mov
mov
or
loop
pusha
lock
shlb
mov
jns
loopne
clc
push
and
push
sub
rcll
test
dec
aam
sbb
sub
lods
pop
and
inc
scas
popa
fsubl
sbb
cmp
shlb
out
movb
hlt
jecxz
xor
and
add
sbb
movsb
icebp
cmp
inc
js
mov
js
add
or
js
and
in
pusha
jge
xor
sbbl
cmp
add
add
lods
jle
xorb
fisubs
clc
xor
mov
or
stc
mov
xchg
mov
jg
xor
iret
pop
or
adc
aaa
imul
pop
cmpsl
xor
aam
or
lcall
inc
mov
arpl
xchg
sar
imul
in
rorl
aam
fst
inc
inc
fsts
jne
sbb
xchg
pop
push
das
adc
sub
dec
popa
insb
and
sub
scas
shlb
or
inc
xchg
lods
inc
arpl
movl
js
loopne
lahf
sbb
and
in
mov
dec
pop
cmpl
push
sbb
xchg
aam
sahf
rorb
sbb
inc
and
loopne
out
rcrb
adc
xor
jo
test
out
in
and
adc
adc
ret
sbb
test
pusha
adc
push
loopne
lea
adc
pop
pop
dec
aad
adc
and
enter
repnz
ds
lock
add
mov
nop
xchg
rclb
xchg
or
mov
cmp
jne
sub
sub
mov
push
mov
outsb
add
xchg
push
xchg
test
pop
jne
jo
orl
sub
outsl
dec
loope
push
or
ffree
shl
mov
xchg
outsl
popa
add
sarb
push
or
fcoml
or
or
adcl
jge
sub
mov
pop
add
jo
aad
cld
xchg
xchg
mov
or
je
jo
lret
lods
mov
subb
add
xchg
xor
dec
inc
hlt
hlt
or
xlat
cmp
rclb
push
push
adc
fwait
es
sbb
ror
add
insb
push
mov
and
jmp
popa
pop
or
adc
add
xor
or
stos
add
sbb
mov
scas
jns
fisttpll
je
rcrl
sbb
lea
xlat
sbb
inc
in
jmp
lds
lea
sub
mov
and
or
fstpl
ss
push
insl
sbb
pop
adc
jmp
popa
sbb
and
cs
push
pop
sbb
or
call
in
or
nop
xchg
arpl
jne
mov
push
sub
test
push
xor
and
and
popa
add
lea
mov
sbb
mov
mov
push
popf
and
mov
or
add
dec
addr16
addr16
sbbl
xchg
mov
clc
addl
sub
xor
inc
push
xchg
mov
and
push
cmp
sub
xchg
jbe
pop
xor
je
clc
adc
jns
push
pop
test
push
rcl
popa
adc
add
out
add
pop
ret
dec
inc
mov
mov
jp
push
xor
dec
adc
hlt
adc
jle
pop
jae
ret
add
das
clc
pop
pop
add
fcmovbe
test
lcall
ds
orb
xor
test
les
xor
mov
add
loopne
mov
xor
nop
sbb
jge
and
sub
lock
cltd
orb
sbb
and
cmp
jge
mov
push
jo
cmp
adc
rorl
jns
scas
lods
and
mov
pop
inc
aas
cmp
je
pop
sbb
inc
dec
nop
fcomip
filds
fisubrs
push
daa
pop
sbb
ds
xor
rolb
in
andb
add
shlb
mov
test
test
xchg
in
test
daa
pushf
fimull
sbb
mov
push
mov
divl
mov
mov
jo
arpl
sti
mov
inc
dec
xchg
xchg
cmp
xchg
mov
push
push
rolb
adc
inc
and
insb
rorb
push
mov
aas
test
add
xchg
sbb
fs
pop
push
sahf
xor
pop
into
mov
mov
mov
mov
test
rcrl
jp
imul
mov
xchg
incb
rclb
sub
inc
and
mov
cmp
sub
push
push
mov
rorb
sti
je
pop
jmp
mov
pop
lds
lret
popa
xor
sub
sub
xor
aaa
xor
xchg
pop
testl
push
lret
std
orl
lods
test
mov
xor
push
mulb
aam
dec
sbb
xchg
subl
sbb
shlb
push
adc
add
fs
cmp
aam
mov
aad
mul
je
jl
nop
sub
cmpsl
push
add
or
xchg
les
andl
jecxz
fdivrs
decl
cmpb
cli
add
add
addr16
fwait
xchg
dec
push
mov
pop
test
xchg
sub
in
addr16
repnz
cmp
gs
jne
xor
inc
imul
push
and
push
std
rcr
out
add
scas
addl
movlps
cmp
jg
je
enter
inc
push
add
fadd
addl
xchg
cmp
cs
mov
cmp
fcmovbe
add
aaa
fcoms
mov
add
and
orb
cwtl
cld
sbb
or
aas
mov
cmpsl
cmpb
daa
and
inc
mov
inc
rcl
sub
outsb
jno
mov
push
and
fcoml
fsubl
mov
int
jo
pop
cmpb
mov
mov
add
jne
es
cmp
adc
cmp
xchg
jge
sbb
icebp
ror
insb
je
iret
ret
add
push
sub
nop
cmp
pusha
mov
stos
sub
inc
sub
pop
aaa
int3
loopne
out
sbb
sub
mov
inc
pop
sub
mov
jb
cmp
rorb
cmp
push
rorb
inc
lods
add
inc
outsb
mov
loope
add
dec
add
adc
xor
inc
xchg
lods
or
es
pop
or
pop
cmp
test
lods
xor
mov
mov
lea
jl
stos
add
cmpb
xor
sub
and
xchg
sub
adc
sbb
pop
int3
add
and
ds
cmp
ja
sub
ret
add
rolb
aam
adc
int
bound
out
adc
aaa
push
sbb
add
fwait
xor
fnstcw
sbb
cmp
ljmp
xchg
mov
test
imulb
leave
sbb
iret
pusha
dec
es
fnstcw
adc
imul
mov
sbb
jns
adc
mov
pop
dec
add
mov
jge
scas
jle
cmpb
cs
cmpsl
xlat
dec
mov
fldl
test
mov
pop
xor
pushf
cwtl
subb
push
xor
mov
mov
mov
pop
imul
mov
dec
sub
int
pop
lret
nop
fldl2t
jno
xchg
jb
and
xor
nop
movsb
push
adc
ret
aaa
add
sti
add
shl
sub
push
outsl
je
fidivl
cs
jl
mov
jns
pop
sbbb
add
or
movsl
jnp
xchg
sbb
mov
and
jb
sub
adc
pop
add
cmp
dec
fnsave
sbb
push
test
inc
addr16
jnp
sbb
adcb
xor
pop
and
test
stos
adc
mov
testl
add
or
push
test
lret
jmp
pop
hlt
cld
mov
or
mov
fimull
or
jle
add
push
add
push
inc
in
ss
cmp
jne
stc
add
dec
jne
jne
dec
xchg
cmp
inc
jmp
mov
inc
idivb
and
xchg
out
sub
mov
fdiv
inc
pop
fmull
stos
push
pop
sbb
sbb
xchg
pop
and
les
or
repnz
sub
dec
xchg
adc
roll
mov
adcl
pop
pushf
clc
pusha
mov
int3
and
enter
lds
jmp
insl
and
mov
arpl
dec
dec
pop
std
je
push
inc
mov
inc
pushf
xchg
pop
mov
sbb
dec
shrl
cli
sub
xor
shll
fstl
sar
mov
inc
cli
shll
shlb
jg
and
jo
add
inc
pusha
mov
push
daa
daa
fists
incb
btr
mov
mov
test
scas
push
push
sub
sub
sbb
mov
notl
stc
dec
sti
sub
cs
xor
cmp
jae
sub
frstor
push
xchg
fidivl
pop
ss
cs
jbe
xor
xor
stc
mov
das
loope
or
insb
subb
xchg
fnstcw
push
inc
dec
xor
aaa
jg
jo
dec
ljmp
pop
inc
in
sbb
movsl
push
inc
adc
fidivrs
xor
sub
dec
fadd
sbbl
gs
jg
push
dec
dec
mov
dec
push
inc
push
dec
sbb
pop
fcoms
fisubrl
das
shr
fsubp
push
incl
popa
nop
adc
xchg
xor
push
add
std
xlat
cmovb
xor
xor
lahf
xor
xlat
xlat
lock
push
inc
inc
addr16
out
imul
xchg
dec
and
fdiv
mov
dec
inc
push
jb
inc
inc
jae
popa
fimull
fistpll
in
xchg
add
sahf
push
ja
hlt
inc
movsl
movsl
or
push
jg
xor
inc
mov
pushl
push
pushl
push
xor
cmp
clc
adcb
xor
dec
pop
cmp
fwait
cmp
mov
arpl
mov
sar
and
movsb
rorl
fs
outsl
add
or
push
nop
inc
xor
or
xchg
lret
enter
push
and
dec
fisttps
adc
pop
dec
push
pop
xor
popl
xor
push
add
jb
das
or
xlat
imul
mov
dec
dec
int
rcll
dec
push
daa
mov
and
fnstsw
pop
mov
jbe
leave
dec
push
daa
or
jbe
fcoms
or
test
dec
daa
cvtps2pi
jecxz
pop
xor
push
push
xor
fisubrl
lahf
aaa
adc
xor
imul
insl
data16
outsb
popa
pop
js
mov
pmaxsw
addr16
jecxz
sarl
outsl
inc
mov
stos
xchg
js
and
jnp
bound
xlat
xor
aam
mov
ja
push
mov
pop
andb
mov
inc
xchg
push
shll
add
inc
ss
lret
lahf
inc
push
sub
aaa
pop
push
add
daa
cmc
mov
gs
je
aaa
sub
mov
fdiv
nop
adc
inc
pop
dec
pop
xchg
mov
outsb
sub
mov
dec
pop
xchg
fwait
mov
dec
ss
xor
dec
dec
adc
gs
mov
inc
inc
ffreep
bound
insl
and
out
add
xor
ret
outsl
add
dec
inc
pop
pop
lock
sub
bound
nop
subb
push
xor
pop
dec
fdivrs
pop
adc
decl
sbb
xor
aaa
ret
and
mov
lahf
stos
dec
inc
cmp
ss
cmp
add
adc
arpl
or
adc
pop
xchg
and
add
add
xchg
adc
push
pop
in
mov
sahf
je
and
push
sub
sub
xor
mov
push
pop
ja
das
or
jmp
push
mov
pop
dec
scas
jbe
loopne
xor
fcomps
sbb
cmp
push
push
push
xor
movl
leave
imul
cmpb
arpl
mov
mov
bound
xor
pushf
fwait
add
inc
mov
adc
data16
push
cmp
iret
pusha
sub
cmpsb
mov
pop
and
addb
ss
xchg
les
pop
mov
bound
push
aas
add
xor
pop
add
ja
xor
lds
or
ja
pop
xor
scas
xor
outsl
dec
leave
push
mov
cmp
iret
data16
test
sub
inc
ret
outsl
or
pop
insb
xchg
aaa
mov
and
push
bound
add
orb
cmp
dec
jbe
mov
push
dec
pushl
lahf
aam
xchg
pushf
inc
push
dec
pop
sub
mov
rcrb
xor
dec
push
mov
aaa
cmp
andb
dec
dec
push
push
icebp
pop
bound
outsb
addr16
jb
das
es
aad
cmp
aaa
pop
add
cmp
daa
ja
loope
push
lahf
aaa
cmp
lahf
push
mov
cmp
lret
test
xchg
iret
or
subb
sub
xor
shlb
scas
mov
cmp
and
pop
shl
ficoms
pop
adc
loop
or
adc
sub
iret
or
daa
fdivs
sub
xchg
xchg
xchg
aas
mov
fisttps
xchg
scas
adc
dec
inc
push
sub
gs
xor
aas
add
fs
pop
mov
push
push
neg
sbb
pop
mov
dec
mov
xchg
in
push
fistps
mov
xor
pop
cmpsb
ss
and
in
pop
inc
dec
xorps
xlat
inc
loopne
jb
inc
cmpsl
sbb
xlat
ss
lock
pop
ss
rcrl
lds
cmp
fs
mov
adc
fistpl
cmpsl
cmp
repnz
fstpt
push
inc
pop
push
xor
fsubrs
push
dec
push
push
outsl
jb
je
sbb
shlb
pop
pop
daa
cli
aaa
mov
sub
fidivrl
jecxz
int
mull
or
test
lock
faddl
sbb
dec
addl
push
jb
xor
sbb
adc
push
andb
bound
xlat
push
dec
push
imul
and
jg
and
pusha
mov
daa
add
popf
xor
xor
cmp
enter
xor
xor
pop
xor
or
enter
leave
and
xor
fisttps
dec
inc
dec
or
fcmovu
xor
mov
int
add
pop
xor
xor
push
pop
mov
sub
push
popa
aaa
jo
pop
insl
jno
popa
xchg
scas
fcoms
out
divl
test
sbb
daa
divl
xchg
xor
aad
addr16
push
popf
jmp
adc
outsb
insl
xor
data16
push
inc
ss
dec
bound
jg
mov
xor
rorb
cmpsl
pop
xor
push
dec
adc
and
insb
xor
sub
and
pop
out
enter
ss
xchg
xor
aaa
xchg
pop
and
ss
dec
ret
aaa
aaa
inc
dec
dec
push
pop
cmp
xchg
mov
jg
cmp
add
fcoms
xchg
pop
lods
push
push
arpl
ljmp
pop
pop
pop
fwait
inc
scas
cmp
xor
or
jb
ja
bound
mov
dec
xor
nop
stos
idivl
cmp
nop
sub
xor
inc
cmp
dec
pop
xor
stos
test
fistpll
jg
mov
test
pop
pop
fisttps
push
pop
push
or
inc
xor
xor
pop
inc
mov
or
lcall
jae
cltd
cmp
out
mov
sahf
cmp
sahf
push
cmp
jno
push
in
out
filds
inc
and
loopne
xor
pop
push
xor
push
cmp
leave
aam
into
and
xor
pop
xor
nop
cmpsb
xor
push
or
adc
adc
sub
inc
bound
push
jb
lods
mov
push
shr
shrb
popa
loop
push
add
sbb
ficompl
jnp
loopne
outsl
and
push
scas
in
ja
cmp
fs
ret
pop
cmp
xor
fistps
mov
imul
xlat
push
daa
pop
xor
ja
daa
adc
inc
dec
push
push
iret
cli
or
lods
add
xor
out
push
pop
push
bound
mov
adc
xor
dec
inc
jg
pop
xor
add
xchg
pop
xchg
pop
shlb
jbe
xor
ss
aaa
xor
sub
push
imul
dec
mov
mov
and
inc
movsl
bound
pop
xor
lcall
sbbl
testl
js
test
pusha
scas
xchg
push
enter
pop
decl
mov
test
scas
xor
adc
mov
ss
or
mov
fistpll
and
lahf
loop
and
test
out
es
out
insb
jno
cmp
and
addl
mov
push
pop
sbb
sbb
imul
jl
adc
aaa
jae
adc
jne
sub
insb
xor
aas
xchg
jbe
int
out
xchg
addr16
pop
dec
popa
insb
data16
push
sbb
mov
or
dec
cmp
dec
push
cmovnp
aad
or
scas
inc
push
inc
dec
ret
push
inc
arpl
sbb
cs
xor
sbb
imul
movl
loopne
pop
insl
mov
cmp
or
jo
mov
cmp
and
imul
xorb
push
push
aas
mov
jno
or
je
and
outsl
daa
iret
dec
inc
sub
pop
or
scas
bound
push
sub
sub
das
ljmp
je
imul
mov
daa
xlat
inc
loopne
inc
nop
rorb
dec
dec
push
dec
outsl
mov
dec
cmp
scas
pushl
aaa
xor
xchg
int3
mov
addr16
or
xor
cmp
fldl
and
cmp
push
mov
loopne
cmpsb
notb
cmp
add
imul
idivl
sbb
inc
mov
xlat
xchg
and
or
inc
xchg
mov
xor
ret
nop
xor
sbb
rorl
xchg
pop
enter
bound
push
mov
xor
fisttps
inc
mov
push
xchg
adc
test
sbb
jb
orb
push
das
xor
cmpl
jbe
loope
jb
push
xchg
xor
popa
inc
xor
test
mov
push
add
lcall
or
jg
fists
cmp
fbstp
cs
cmpl
xor
gs
inc
jb
push
add
aas
or
and
insb
je
outsl
push
jo
ret
sbb
xchg
jne
out
sbb
cltd
jo
inc
jne
popl
xor
adc
xor
dec
sub
add
cmp
enter
inc
es
push
cmp
push
fs
enter
aaa
aaa
in
mov
lods
fstp
and
fisubs
in
pop
jg
sbb
jg
aaa
sub
dec
scas
lahf
xor
outsb
xor
lahf
adc
and
pop
mov
add
rdpmc
in
or
addr16
xchg
dec
xchg
sbb
in
es
ss
ret
ss
addb
pop
sbb
cmp
cmpsb
cmp
cmp
cmp
jb
aaa
xchg
push
andps
mov
xchg
test
xor
mov
or
aaa
lcall
mov
xor
sub
shrl
inc
cmp
cwtl
inc
or
cmp
addr16
pop
sbb
and
mov
sbb
sbb
ficompl
jg
test
test
sbb
leave
je
xchg
xor
fsubl
pop
sbb
mov
xor
mov
mov
sbb
xchg
inc
addr16
push
insb
pop
icebp
inc
xor
inc
mov
push
or
mov
out
pop
inc
mov
lods
das
pop
popf
inc
xor
xor
xchg
fwait
stos
pop
xor
push
pop
scas
xorb
dec
int
pop
adc
xor
jnp
sub
pop
mov
test
insl
inc
push
dec
dec
push
or
inc
repnz
push
push
push
fildll
sub
imul
and
mov
out
mov
cmp
sub
mov
adc
sub
push
dec
pop
ret
ret
pop
pusha
push
dec
sub
imul
lret
imul
dec
inc
dec
dec
dec
xchg
scas
dec
outsb
dec
mov
dec
add
shll
push
dec
pop
pop
lcall
mov
push
xchg
pop
aaa
in
aas
dec
dec
dec
cmp
sub
xlat
pop
push
pop
xor
in
cmpsb
adc
or
push
dec
inc
sub
and
push
mov
sub
push
sub
and
in
lea
cmp
mov
mov
xchg
pop
outsl
and
adc
add
inc
cmp
notb
cmp
cmpsl
sub
mov
aaa
sbb
inc
pop
push
cmpsl
xor
jp
lret
nop
xor
fs
js
cmpsl
xor
xchg
and
xor
imul
insl
rcll
aaa
in
mov
enter
xor
cmp
push
adc
cmp
bound
mov
fbstp
xor
cmp
xor
xor
out
jae
ss
and
ss
enter
aaa
aaa
out
xor
lahf
data16
and
enter
cmp
xchg
lret
nop
cmp
add
sbb
cmp
jb
mov
cmp
or
imul
and
dec
pop
ret
mov
pop
mov
mov
cmpb
shrb
test
push
and
xchg
mov
mov
cmp
pop
rolb
fcmovnbe
add
push
xchg
addr16
xor
cwtl
data16
adc
sbbl
adc
divl
xchg
loopne
daa
xor
cmp
dec
popa
jne
pop
rorb
cmp
int3
scas
aaa
imul
cmpsl
dec
pop
mov
arpl
cmp
xor
movsl
xorl
push
add
jg
pop
dec
push
cmp
ja
sub
sub
xor
add
mov
pop
inc
outsb
push
and
sbb
xor
outsl
push
cmp
cmp
and
insl
push
mov
dec
popa
outsb
push
lods
ss
xchg
filds
mov
pop
pop
rolb
aaa
xchg
sbbb
inc
mov
or
lods
popa
inc
lods
xor
xor
addr16
aaa
neg
xchg
push
imul
cmp
adc
js
test
lahf
dec
inc
aaa
add
inc
test
bnd
and
sbb
sub
jmp
fiaddl
popa
xchg
fwait
dec
dec
push
das
adc
cmp
adc
add
aaa
ja
in
jb
cmp
ss
mov
ss
xor
jb
scas
xor
xor
aaa
push
xchg
sub
movsl
clc
xor
xor
es
mov
cmpsb
insl
cmp
xor
int3
xchg
rdmsr
jg
enter
xor
daa
xor
xor
bound
je
and
inc
cmc
jb
sub
or
inc
aas
call
mov
popa
mov
out
sub
dec
adc
dec
popa
mov
jns
aas
addr16
filds
inc
xlat
jp
fistps
or
inc
mov
or
mov
sarb
test
push
xchg
push
jns
bound
push
sub
dec
rcll
xlat
scas
in
lods
dec
dec
push
daa
xlat
sub
inc
mov
sub
dec
js
fldt
dec
or
sub
sub
xlat
insl
pusha
in
mov
inc
daa
lahf
lds
fisubl
mov
adc
fadd
mov
imul
mov
mov
fwait
int3
dec
or
je
lods
add
xchg
or
push
mov
mov
mov
jne
insb
call
adc
xchg
addb
xor
or
fnsave
cmp
insb
in
and
movsb
inc
xchg
sbb
add
xor
and
enter
enter
xor
pop
aaa
push
push
pop
add
xor
add
sbb
aaa
in
fbld
aad
and
ficompl
pop
add
sub
and
push
imul
cmc
jl
inc
ss
dec
rol
dec
adc
and
xchg
dec
mov
xchg
push
xor
test
rolb
sbb
addb
sub
mov
cmp
mov
or
xchg
movb
push
loop
dec
imul
mov
jmp
jno
jne
jg
shll
xor
mov
push
push
rcrb
inc
adc
clc
adcl
das
cmp
jne
cmpb
sub
inc
mov
movl
add
pop
mov
in
jle
mov
lock
fcomps
adcb
mov
call
int
cmp
aam
fsub
inc
aam
int3
dec
push
adc
pop
jecxz
outsl
pop
push
out
jmp
imul
sbb
mov
dec
rorl
shrb
or
or
mov
sbb
fadds
sbb
mov
lods
andb
negb
in
rol
push
dec
ret
adc
in
and
push
sub
enter
cld
jne
jmp
jno
jg
inc
mov
dec
push
insb
ret
push
sbb
icebp
ja
add
rol
adc
push
fadd
stos
jl
loope
ret
inc
jo
nop
xchg
inc
add
popa
push
rolb
xchg
sbb
popa
shlb
inc
mov
sbb
cmpsb
and
mov
mov
mov
std
push
repnz
add
push
fiaddl
clc
dec
mov
and
xchg
dec
add
test
clc
xor
xor
xor
fisubl
pop
and
shlb
xchg
mov
add
inc
sbb
test
or
inc
notb
fidivs
mulb
xchg
dec
ja
push
fwait
clc
out
add
jp
aad
inc
sub
adc
inc
mov
mov
dec
ss
or
lods
sbb
or
adc
filds
mov
lods
sbb
dec
push
pop
push
das
mov
cmpsl
xor
jb
fcom
ret
fbstp
push
mov
dec
xor
mov
into
rcr
mov
xchg
cmp
rorb
test
aam
lock
xchg
sbb
sarb
or
mov
lock
loopne
ljmp
xchg
enter
mov
aas
cmp
push
dec
jle
daa
int3
or
and
ret
rcrb
por
pop
mov
sub
sbb
les
mov
jbe
push
adc
clc
pop
or
in
pop
jmp
adc
or
pop
jb
mov
pop
cmp
daa
fadds
inc
push
dec
stos
jge
dec
cmp
push
mov
rolb
mov
jae
adc
dec
idivb
or
and
dec
adc
and
add
sub
in
imul
into
insl
mov
es
sub
sbb
out
jbe
xchg
mov
outsb
lock
xor
sub
mov
fnsave
jmp
mov
addr16
cmp
or
repz
lods
xor
jecxz
jae
xor
or
movb
pop
leave
sub
xor
aad
fdivrl
test
mov
mov
jno
mov
jmp
repnz
mov
or
in
xchg
inc
sub
shr
cltd
or
cmp
in
mov
xchg
xchg
je
add
stc
outsb
push
mov
cltd
push
sbb
lock
mov
pop
sahf
adc
jns
cmc
adc
lret
les
mov
jno
pop
pusha
jge
clc
les
lods
mov
add
test
adc
dec
xchg
or
jge
in
mov
sub
inc
imul
int
jne
hlt
test
sti
mov
mov
aam
add
adc
fdivrs
loope
mov
add
or
inc
add
dec
mov
addb
xchg
aam
fistpl
sub
adc
or
xor
imul
adc
jecxz
xor
movsb
maxps
mov
mov
lock
das
hlt
mov
rorb
dec
lods
push
push
dec
xchg
mov
sub
loop
inc
fisubrs
pop
push
dec
and
jns
dec
dec
push
inc
inc
inc
lods
xchg
dec
push
push
dec
inc
push
and
popa
xchg
mov
ds
sub
into
jecxz
pop
mov
aam
in
fdivrs
sbb
jb
in
adc
sbb
sub
xchg
and
xor
inc
in
in
jb
in
mov
sahf
in
inc
inc
inc
inc
das
dec
inc
push
jb
xchg
jl
push
push
pop
xlat
dec
jbe,pt
pop
push
dec
pop
push
inc
pop
push
inc
push
dec
ds
dec
inc
push
dec
dec
push
popf
xchg
fs
xchg
sbb
in
and
in
aad
mov
dec
or
in
adc
movsb
add
adc
pop
xchg
push
js
mov
cmp
sub
mov
fiaddl
leave
or
sub
sbb
adc
adc
adc
add
inc
add
movsb
push
imul
pop
add
testb
adc
add
xor
lock
mov
xchg
add
xor
jecxz
add
out
in
fldl
jns
add
xor
push
jne
lret
jmp
test
cld
xchg
pop
lret
test
add
cld
int3
push
inc
aam
mov
lock
faddl
cmp
sbb
loope
xchg
jnp
or
fsubl
pop
push
shll
dec
ds
in
out
sbb
jb
pop
test
jae
out
and
lret
mov
inc
pusha
push
addb
test
ljmp
cmp
icebp
add
fnstenv
iret
dec
cmpb
subl
fwait
xchg
and
mov
leave
sar
fs
add
in
repnz
ljmp
mov
mov
inc
mov
scas
cmp
dec
nop
push
sbb
xor
mov
inc
and
pop
lea
adc
leave
dec
adc
push
pop
ret
mov
xlat
mov
inc
adc
sbb
fistl
imul
and
insl
pop
ret
ja
lock
insl
aaa
pop
cmovno
sbb
xor
lret
jle
mov
cwtl
les
adc
mov
adc
sub
shlb
lods
push
push
fidivl
xchg
adcb
xor
fs
mov
imul
aad
fisubrl
mov
mov
movsb
in
push
sub
loopne
xor
dec
pop
and
xorl
scas
pusha
add
mov
adc
push
jno
mov
adc
mov
lea
ds
test
adc
mov
jo
aam
push
xchg
pop
mov
loopne
push
rcl
ss
push
int3
int3
ret
dec
sbbl
mov
and
or
sbb
enter
add
sbb
in
orb
jmp
mov
add
rcr
stos
and
sbb
fistps
jns
sbb
mov
sub
pusha
inc
mov
inc
test
movsb
cmp
and
xchg
adc
stos
xor
dec
xchg
xchg
mov
int3
mov
cmovns
mov
or
ret
cmp
pop
mov
and
push
mov
push
push
dec
repz
inc
dec
jno
out
in
in
test
lcall
bound
and
sbb
fstp
js
or
lahf
mov
push
decl
pop
ja
push
dec
andb
loope
shlb
or
aam
leave
push
push
dec
push
lock
ret
add
pop
jne
popf
push
cmpsb
cmp
nop
das
lods
xchg
sub
jmp
pop
xchg
js
movsl
loope
jp
pop
nop
outsl
or
add
sub
lea
sbb
pop
in
mov
cmp
mov
or
daa
daa
daa
adc
adc
daa
daa
daa
and
movb
sub
sub
push
fidivrl
leave
sbb
lcall
xchg
subl
dec
mov
push
shl
arpl
int
mov
fidivrl
or
mov
push
repnz
hlt
push
push
mov
mov
out
psllq
mov
sub
aad
xchg
test
inc
lock
sbb
imul
push
cwtl
jbe
movsb
lds
add
andb
call
mov
ljmp
sahf
in
and
mov
in
sbb
sub
movsb
xor
xchg
and
and
test
fdivrs
fs
mov
pop
sub
or
mov
cmpsb
js
adc
jnp
xchg
inc
js
movsb
jmp
dec
mov
fmull
test
mov
mov
sub
xor
inc
fwait
in
dec
mov
inc
fsubl
sbb
out
std
aaa
xor
push
xchg
adcl
sub
sub
fsubr
scas
push
push
lea
push
cmp
mov
add
cmp
das
inc
cs
pop
pop
mov
cmp
adc
repz
nop
cs
cmp
aam
in
mov
into
xor
add
mov
rcrl
test
push
insb
data16
in
add
lret
stos
inc
mov
rclb
mov
pop
rcrb
xorb
jbe
xor
aaa
inc
xchg
cmpsb
push
push
add
cmpsb
addb
movsl
mov
push
sub
mov
outsl
int
mov
dec
ffree
dec
push
leave
repnz
sub
add
push
pushl
sbb
and
insb
aas
jl
mov
sti
fildl
push
push
int3
cmc
and
jp
and
pop
mov
sub
pushf
in
out
in
loopne
call
xor
xchg
and
sti
dec
cmp
dec
data16
pop
shrb
cmp
sbb
lock
pushl
lea
dec
push
stc
ja
icebp
lock
ss
fidivrs
ret
and
imulb
xlat
adc
and
movsb
rcrb
add
xor
add
addr16
push
jb
push
add
negb
fld
inc
jge
test
xlat
in
shl
sbb
daa
jmp
xchg
cmp
lahf
clc
xchg
cld
push
and
sub
sbb
inc
xchg
inc
mov
sub
jl
sbb
xor
or
push
mov
and
sbb
sub
add
mov
test
movb
push
cmp
push
dec
jo
movsb
adcb
pop
pop
and
xor
jge
or
inc
xor
push
cmp
andb
cmp
shrl
popa
xchg
inc
clc
xchg
adc
es
xor
clc
shrb
shufps
aaa
jo
js
clc
dec
push
out
dec
and
push
push
and
xor
push
aam
les
ljmp
xchg
sbb
ret
aaa
jmp
outsl
insl
pop
add
mov
enter
test
out
and
pop
push
xor
pop
mov
stc
mov
movsb
xor
xor
sub
pop
jnp
mov
fisttpll
sbb
and
jo
push
push
inc
push
cltd
in
pusha
jg
pop
leave
and
dec
mov
dec
xchg
stc
push
add
push
pop
sbb
add
ret
mov
mov
aam
lods
fsubl
call
push
das
int3
jmp
sbb
hlt
add
fcmovnbe
xor
sub
xor
xor
jge
sbb
lcall
clc
leave
cli
add
call
jge
mov
pop
or
mov
inc
sbbl
or
cltd
sti
lret
pusha
aad
pop
decl
jle
jne
pusha
mov
inc
movsl
insb
loopne
mov
push
push
cmp
int
lods
mov
pusha
fnstsw
fld
mov
push
rorb
jg
and
daa
pop
in
xor
push
or
push
out
jmp
jae
outsl
pop
lcall
cmp
dec
mov
jbe
std
sub
roll
mov
dec
stc
fwait
subl
pop
cltd
and
test
movsb
sbb
xchg
cld
mov
sbb
stc
fwait
rorb
or
outsl
xchg
xor
scas
dec
call
mov
test
mov
mov
jbe
sbb
xchg
mov
jg
std
push
sbb
and
xchg
xchg
xchg
adc
pop
lret
mov
add
mov
hlt
fcmovb
nop
push
push
aaa
outsl
and
loopne
fsubrl
sub
push
sbb
repnz
insl
xchg
xlat
jae
add
outsl
shll
mov
sub
jnp
insb
or
ja
out
push
pushl
lcall
or
into
aas
call
add
insb
inc
mov
jmp
sbb
or
lods
or
sbb
lcall
fadds
pop
sub
inc
pop
movsl
xor
ret
dec
xchg
sbb
rcrb
dec
insl
enter
incl
xorl
push
inc
jb
arpl
cmp
xor
addr16
in
xor
stos
sbb
and
gs
and
mov
lcall
xchg
mov
shll
pop
fwait
mov
lea
and
sar
sub
xor
jbe
mov
add
scas
test
mov
cmp
pusha
xlat
pop
dec
push
add
push
push
subl
in
cmovs
dec
inc
lret
add
loop
icebp
xor
dec
das
jp
mov
mov
mov
add
cmp
mov
sahf
out
test
push
dec
scas
add
movsb
imul
dec
push
jo
adc
loope
add
mov
fsubs
sub
dec
push
jo
in
leave
xor
xor
sub
pusha
pop
aas
pop
sub
inc
push
dec
add
or
add
mov
incl
stc
filds
jle
dec
adc
mov
loope
popa
add
leave
dec
cmp
loop
bound
sub
cmp
add
dec
fsubrs
mov
or
rorb
mov
add
pop
addb
lods
ficoml
ja
add
jg
gs
push
hlt
dec
sbb
ffreep
inc
loop
fucomi
pop
fucomp
pushf
or
stc
inc
ja
fyl2x
bound
mov
mov
jmp
add
push
add
sbb
pop
and
scas
inc
add
sar
sti
adc
inc
jno
cmp
mov
inc
or
cmp
cs
and
push
andl
or
push
mov
mov
vmwrite
sbb
dec
push
sub
add
fwait
icebp
insl
push
mov
out
lock
adc
outsb
mov
add
test
add
sub
repz
mov
push
stc
negb
inc
pop
aaa
shl
cs
icebp
dec
cmp
push
repnz
loop
or
xor
push
xor
dec
cs
les
xchg
mov
xor
push
mov
jb
xor
and
or
jge
pop
leave
adc
shlb
push
in
mov
pop
repz
dec
xor
hlt
and
sbb
das
and
jne
neg
shlb
pop
xchg
sub
sbb
sub
std
jne
xor
imul
push
enter
lea
std
dec
push
pop
xor
fldcw
add
add
je
mov
aad
lock
and
pusha
add
and
dec
push
fisubs
jno,pt
mov
add
leave
cmp
or
sbb
mov
sub
or
inc
push
clc
sbb
jecxz
test
fstpt
imul
push
and
stos
sub
sbbb
adc
xor
pop
adc
mov
xchg
les
xlat
or
dec
xor
movsl
xchg
push
jmp
out
add
shll
sahf
xchg
stc
and
push
repnz
rorb
cmp
add
insl
rol
mov
lods
xchg
loopne
mov
mov
add
fiaddl
out
xor
push
in
mov
pop
jmp
cmpsl
push
bnd
sub
sub
loopne
xor
add
mov
mov
mov
xor
add
inc
inc
mov
add
add
aam
pop
fiadds
adc
and
ljmp
in
or
push
add
loope
out
and
dec
cmp
out
test
scas
sub
sbb
mov
outsb
pop
les
rorl
add
xor
sbb
fcom
arpl
out
lea
iret
adc
sub
fsubs
lret
push
fsubl
adc
pop
clc
inc
shlb
add
sub
shrb
movsl
mov
mov
mov
addl
dec
lods
ret
addb
seto
mov
test
sbb
inc
rcrb
dec
cmp
leave
add
sbb
call
call
dec
xor
inc
fsubrs
mov
scas
or
push
adcb
lahf
in
dec
xchg
xor
adc
popa
pop
in
les
mov
rol
jo
mov
mov
test
in
mov
mov
fdivl
rolb
xor
lea
movsb
inc
mov
xchg
test
add
aaa
cmp
cmp
sbb
or
inc
push
dec
xchg
mov
cmp
movsl
gs
sub
inc
sub
jnp
clc
pop
rolb
sub
popa
bound
inc
jbe
icebp
outsl
and
aaa
subb
mov
mov
xor
and
pop
inc
sbb
cmp
mov
and
imul
out
enter
das
adc
les
xlat
pop
cmp
sbb
and
inc
movl
and
push
mov
fistpl
inc
push
pop
pop
sub
into
inc
subb
scas
mov
mov
mov
aaa
cld
pop
lds
arpl
addr16
insl
bound
jb
xor
pushl
jne
ja
jns
xor
add
sbb
adc
adc
dec
rolb
lock
xor
mov
or
ja
cmp
mov
out
pop
adc
outsb
in
cmpsl
xor
scas
mov
bound
js
pusha
adc
inc
adc
push
jg
adc
es
mov
push
in
hlt
adc
insb
cs
sbb
or
lods
adc
testl
xor
adc
pop
hlt
and
push
push
adc
push
adc
xchg
xor
jg
sbb
out
adc
push
rcrb
jg
pop
jle
push
push
sub
rclb
aam
lahf
or
mov
mov
cmp
push
fidivrl
jbe
add
or
add
sub
xchg
gs
pop
int3
push
out
or
mov
adc
loopne
roll
mov
aaa
es
inc
lea
das
sub
push
je
stos
sub
push
sbb
xor
dec
orb
add
xchg
jo
in
scas
xor
pop
pop
add
enter
sub
jae
pcmpeqd
mov
and
ret
mov
mov
test
inc
mov
lds
mov
pusha
vucomiss
in
sbb
inc
jns
inc
mov
push
add
xor
jmp
or
sub
or
outsb
movsl
pop
out
add
inc
add
test
or
or
pop
or
adc
in
stc
mov
mov
or
pop
popa
push
pop
xor
cmp
mov
lret
inc
outsl
or
mov
outsl
dec
fstps
test
or
sahf
enter
daa
add
aas
mov
and
ljmp
inc
add
out
push
xchg
sbb
adcl
mov
jle
cmp
jo
fisubrl
subl
lea
jne
push
rcrb
mov
cmpsb
loopne
fsts
lahf
push
inc
and
or
jge
and
add
and
push
sarb
and
test
adcb
aas
ljmp
lret
adcl
rol
or
ds
sti
out
lock
fcoml
pushf
push
out
loopne
icebp
mov
xorb
inc
adc
or
js
mov
mov
jb
mov
arpl
pop
sbb
mov
mov
add
jne
movsb
mov
sub
es
xor
push
test
aas
test
dec
in
cwtl
js
movsb
sbb
pusha
pop
mov
push
add
pop
loop
mov
shlb
ds
jns
in
ljmp
add
arpl
iret
and
test
mov
push
adc
iret
cmp
sti
or
in
loope
aaa
test
push
add
add
or
sub
pop
adc
sahf
cwtl
add
inc
mov
outsb
addr16
dec
or
sub
imul
xor
mov
ret
cmp
adc
ret
add
shlb
jmp
scas
add
inc
aaa
in
inc
sbb
xor
push
add
add
inc
sbb
out
add
mov
push
mov
adc
fcomps
dec
outsl
mov
ds
insl
addl
dec
out
cmp
and
scas
pop
dec
test
mov
xor
lahf
inc
push
sahf
or
imul
rcrl
adc
xor
inc
lahf
cmc
mov
fnclex
pop
xchg
outsl
adc
and
adc
jns
aas
push
mov
push
das
mov
and
jmp
clc
addl
es
loop
movsl
xchg
les
fs
adc
fdivr
ds
mov
ljmp
and
pop
sub
jbe
or
sub
push
cmpb
push
rcrl
push
and
dec
sbb
lock
sbb
add
test
inc
add
das
push
shl
rorl
lock
pop
jae
jo
mov
pop
pop
sub
add
mov
in
sarl
into
push
push
xor
divl
xchg
sub
lea
sbb
xor
xor
movb
adc
lea
xor
push
mov
rorb
imul
pop
dec
aas
and
inc
pop
fidivrl
inc
jae
shrl
inc
pop
pop
in
pop
enter
xor
daa
fs
movsb
sub
and
and
or
lcall
lods
rorl
pop
sub
mov
lcall
xchg
xor
pop
insb
nop
pop
andb
mov
jle
inc
fdivl
dec
mov
xor
sub
or
inc
add
sub
lret
lods
inc
pusha
and
fsubp
xor
sub
cmp
mov
inc
pop
or
fsubl
insb
jno
scas
or
jo
push
clc
xor
mov
xor
outsb
xchg
push
dec
push
push
sub
mov
cmp
adc
push
rcr
outsl
ljmp
and
fsubs
sbb
rclb
xchg
in
add
mov
outsb
push
das
sbb
pop
subb
sbb
pusha
ret
xchg
inc
sbb
cwtl
sbb
xchg
add
ret
mov
mov
test
pusha
lcall
rolb
stos
sub
cmp
mov
add
std
xchg
test
pushf
call
jl
mov
push
inc
and
popa
cmp
xor
adc
jmp
stos
mov
xchg
lcall
inc
or
dec
lock
in
push
sti
das
xchg
popa
mov
add
loope
loope
mov
jecxz
inc
negl
pop
ret
mov
or
loope
adc
into
fnstenv
cmp
pusha
jo
mov
add
sub
rorl
sbb
es
push
dec
inc
dec
leave
in
lahf
push
imul
xchg
enter
lods
cmp
stos
pop
jmp
cmp
pushl
push
pop
sub
pop
sbb
cmp
outsb
add
jns
cmp
cmc
add
cmp
adc
inc
push
and
enter
popa
popa
mov
push
xchg
sbb
inc
clc
adc
fdivr
inc
es
sarb
adc
adc
push
mov
sbb
adc
invd
and
or
and
or
jne
mov
dec
subl
push
and
or
jae
arpl
xor
daa
xor
ljmp
sarb
in
mov
outsl
cmp
jno
dec
adc
adc
cmp
mov
pop
test
subb
out
roll
mov
sub
addb
jle
push
inc
clc
adc
int3
mov
xor
xor
mov
cli
aam
sbb
xchg
sub
fisttps
mov
push
cmp
testl
loope
adc
mov
push
inc
inc
push
ds
gs
add
insb
mov
push
mov
or
in
sub
cwtl
test
jnp
scas
dec
dec
mov
add
xor
aaa
test
pop
add
jne
aaa
rclb
xor
call
jg
pop
xchg
xchg
add
in
cmp
jae
push
cmp
in
mov
cltd
sbb
mov
sbb
bound
shrb
aad
sbb
fadds
push
xorb
rorb
roll
loopne
xchg
cmp
xchg
jbe
aaa
push
enter
xor
adc
dec
push
dec
rclb
imul
ss
cmp
lds
mov
sub
push
or
cmpsl
cmp
adc
int
fdivl
push
or
test
test
and
sahf
nop
outsb
cmp
aad
sbb
jmp
dec
xor
lock
mov
sub
adc
mov
adc
add
sbb
sbb
add
push
dec
push
pushf
insl
pusha
cs
sbb
ror
mov
sub
in
clc
mov
add
jnp
mov
inc
bound
inc
adc
pop
out
xchg
movsb
pushl
jae
ljmp
push
mov
inc
pop
lret
test
sbb
xchg
inc
cmpsb
cmp
lock
and
add
pop
js
adc
add
mov
cmovle
jbe
addb
cmp
pop
cld
rorb
or
pusha
sub
add
xchg
out
js
pop
adc
mov
add
or
cwtl
sub
movq
inc
sub
lock
test
lock
outsl
jmp
insl
call
push
notb
and
mov
mov
add
cmp
fcomp
insl
aam
mov
faddp
dec
sbb
and
pushf
xor
mov
xchg
and
sub
out
pop
sub
push
inc
push
push
dec
dec
dec
popf
fs
inc
dec
dec
dec
fisubrl
daa
sbb
add
mov
push
inc
dec
dec
sbb
adc
pop
adc
mov
ja
sub
enter
bound
inc
inc
test
das
inc
jne
push
or
cmp
xchg
fiadds
push
and
pop
mov
mov
arpl
adc
in
mov
sbb
cwtl
push
xor
pop
sbb
adc
lock
ss
rorl
addl
pop
cmp
ljmp
out
add
pop
cmp
nop
clc
mov
inc
mov
push
test
push
push
dec
mov
or
loop
push
inc
addr16
popl
jne
ret
jb
lcall
xchg
int3
push
mov
pop
pop
call
and
movsb
xor
adc
cltd
es
push
femms
loop
mov
loopne
stc
notl
add
xchg
test
ja
or
aas
cli
rclb
mov
jmp
into
mov
mov
mov
sbb
sub
cmp
mov
pop
inc
movsb
inc
sub
inc
sbb
test
xlat
mov
adcb
ficomps
dec
fidivrl
repnz
pop
mov
movsb
dec
add
mov
sar
or
inc
xor
sbb
xor
xor
dec
or
mov
mov
adc
and
and
inc
into
ja
push
adc
cmp
push
rcl
test
push
dec
inc
xor
xor
add
pop
pop
rcrb
nop
pop
pop
sbb
add
divl
pop
or
popf
mov
adc
movsb
xchg
dec
and
inc
jp
fcomp
fldl
jecxz
ret
adc
push
adc
dec
fucomip
xor
fld
das
sbb
cmp
hlt
mov
push
cs
jp
push
mov
outsb
rorl
and
ljmp
in
mov
inc
pusha
sub
jo
xor
int
sbb
dec
mov
insl
mov
jbe
mov
clc
sahf
das
inc
iret
les
xor
orb
in
dec
shll
cmp
cmp
js
inc
sbb
cmp
inc
imul
inc
pop
pop
xor
ret
xor
pop
and
ja
jno
inc
cmc
inc
cmp
stos
and
stos
stos
mov
clc
cwtl
sub
push
adc
and
sub
lea
mov
mov
push
test
and
das
shr
cmpsb
inc
inc
dec
or
sub
subl
adc
call
fisttpl
ret
orb
cmp
adc
pop
add
sbb
mov
push
es
dec
inc
fnstsw
dec
add
sub
adc
and
call
inc
sbb
adc
dec
jne
push
test
cmp
mov
cmpb
jg
lods
adc
stos
shlb
rclb
insl
sbb
adc
cmpsl
inc
push
loopne
ljmp
lock
idiv
dec
cld
pop
push
push
nop
dec
cld
mov
mov
iret
insb
mov
jo
push
sbb
add
ror
mov
add
pop
frstor
addr16
nop
adc
sbbb
addl
inc
and
je
jno
cmp
add
test
xchg
fld
dec
mov
ljmp
adcb
adcl
dec
aas
ds
push
ficoms
mov
jmp
xchg
dec
pop
cmpsb
and
sbb
ret
ret
scas
add
pop
push
sub
or
add
adc
cmp
and
fidivrs
bound
pop
jl
sub
shrl
adcb
in
mov
cmp
testb
aaa
xor
xlat
dec
and
xchg
cmpsb
adc
nop
rorb
sbb
xor
xchg
sbb
mov
prefetchw
lcall
cmp
imul
jo
cld
add
out
and
xchg
dec
lret
popa
cmp
leave
lock
movsb
or
jne
mov
test
dec
pop
push
pop
pop
pop
inc
adc
or
push
cltd
push
adc
in
jne
inc
dec
jne
fadds
add
lods
es
mov
jmp
or
aam
es
nop
stc
in
jns
mov
jp
or
inc
test
iret
dec
scas
sub
mov
bound
and
roll
cmp
or
mov
out
xchg
sub
loope
test
pop
enter
dec
imul
outsl
jb
rcrl
cmpsl
dec
pop
cmp
aad
cmp
pop
sub
jp
std
mov
test
lods
add
hlt
ret
outsb
adc
lock
enter
xchg
adc
push
daa
cwtl
mov
cmp
sbb
sub
mov
add
add
jmp
rcll
je
sub
hlt
xchg
hlt
sub
fmuls
sbb
push
add
jne
repnz
ds
add
inc
jns
mov
mov
cld
in
int
cld
push
adc
sub
cmp
add
cli
sub
push
cmp
xlat
std
stos
imul
xorl
aam
adc
lock
shll
adc
cmc
rclb
test
into
xchg
inc
add
cmp
inc
sub
dec
dec
and
movsb
cmpsb
adc
testl
cmpb
movsb
and
shlb
das
mov
mov
cmp
jo
es
cmp
push
add
out
dec
mov
mov
fs
adc
and
add
adcb
addl
jae
adc
xchg
sbb
rolb
mov
pop
inc
push
mov
movsb
or
sub
mov
xchg
or
jne
in
syscall
push
push
or
xchg
cmp
push
pop
imul
scas
aas
outsl
shll
sub
lahf
fiadds
xor
and
and
pusha
inc
and
and
pop
sub
cmp
shl
scas
mov
mov
push
pop
and
aam
and
and
dec
xchg
les
roll
imul
nop
and
push
mov
sahf
jle
push
stos
dec
hlt
dec
dec
cmpsl
jne
xchg
test
push
es
push
inc
sarb
push
inc
sub
pop
dec
cmp
pusha
scas
dec
mov
add
xchg
adc
in
cmpsl
add
add
scas
xchg
xor
rcll
push
push
push
xor
movhps
add
inc
outsl
pop
or
movsb
in
push
ret
xchg
dec
or
movb
push
or
adc
jbe
adc
lea
push
adc
add
or
xchg
xchg
push
adc
sbb
pop
or
nop
xlat
dec
and
xor
outsb
fs
sub
addl
test
push
jecxz
adc
mov
push
xchg
adc
dec
outsb
arpl
mov
or
pop
pop
mov
data16
cmp
push
dec
or
dec
insb
dec
addr16
inc
push
lcall
or
icebp
popf
jae
adc
push
mov
sub
cmp
push
notb
inc
mov
add
or
add
sbb
test
push
and
loop
push
jb
insl
popa
incb
mov
dec
xchg
mov
push
sbb
rclb
push
je
mov
or
mov
rorb
or
loopne
pop
pop
cmp
lahf
inc
add
cs
sahf
dec
test
mov
icebp
adc
and
fnstenv
popa
jp
cld
mov
or
inc
mov
xor
cltd
add
enter
popa
push
or
hlt
mov
mov
add
push
or
inc
xlat
fstps
pop
in
pop
js
outsb
daa
add
cltd
inc
orb
je
dec
jne
jo
pop
ja
adc
adc
xchg
push
xchg
adc
fnstenv
jbe
mov
mov
inc
dec
xor
or
or
cmp
push
jo
fwait
incl
dec
push
xchg
sub
loope
cmp
imul
adc
and
enter
push
je
test
pushf
fidivl
movsb
stos
imul
in
jl
xchg
xchg
cs
mov
sbb
and
inc
test
mov
xchg
and
add
mov
addr16
sub
sub
shlb
setg
push
aas
sbb
dec
rorl
sub
jo
pop
xor
push
addb
pusha
int
pop
adc
cwtl
bound
leave
and
rcll
add
nop
and
xchg
inc
addl
push
les
jns
cmp
hlt
and
jae
or
mov
sub
out
pop
mov
inc
js
push
scas
call
push
sub
adc
cwtl
daa
addb
fiaddl
adc
in
push
test
int3
add
test
aas
inc
cld
or
es
inc
aad
sbb
inc
pop
adc
enter
dec
cmpsb
adc
inc
add
sbb
mov
mov
les
mov
or
push
inc
imul
adc
adc
out
cmp
cmp
sbb
sbb
lcall
and
cmpsb
imul
imul
cmpsb
imul
lcall
and
push
loopne
pop
inc
xlat
cmpsl
sub
jb
adc
sbb
or
mov
enter
or
and
pop
ror
xor
test
dec
addps
into
xor
sub
jno
repnz
fadds
inc
push
or
loope
sbb
jno
sub
or
or
pushaw
dec
sbb
in
cmp
mov
inc
ds
movsb
in
imul
loopne
fdivrs
inc
fsubs
pushl
test
nop
lock
or
setae
popf
pop
subl
or
jmp
mov
cmp
lcall
enter
hlt
push
xchg
out
push
fnsave
sar
and
mov
orb
or
pop
sub
xor
hlt
add
daa
xchg
int3
mov
int3
fs
outsb
lcall
pop
dec
fwait
xor
mov
in
pop
les
inc
fiaddl
inc
je
inc
rol
inc
nop
dec
jmp
fcmovu
imull
jge
fildl
fdivs
mov
fwait
jmp
jbe
stc
cmp
lock
sub
pusha
mov
dec
push
dec
add
mov
sarb
jg
aaa
out
test
adc
das
das
adc
aaa
arpl
sub
das
xor
rclb
xor
test
sub
pop
xchg
push
aaa
mov
dec
fdivrl
test
and
xchg
inc
dec
xor
push
js
stos
pop
sub
fwait
es
clc
add
movsb
mov
inc
in
les
cmp
fs
mov
mov
fs
mov
dec
mov
or
add
cmp
xchg
fs
das
leave
shrb
add
sti
xchg
jl
mov
fcomps
repz
xchg
dec
jecxz
test
rorl
popa
push
push
inc
xlat
sub
inc
popa
hlt
push
push
cwtl
ljmp
xor
inc
subl
aam
xorb
or
xchg
sbb
sbb
lret
sub
inc
xchg
push
add
out
sub
xchg
cmpsb
add
or
ja
adc
dec
addr16
sbbl
sbb
jns
dec
daa
imul
fbstp
or
xchg
rol
lahf
ret
addr16
daa
xor
push
sub
aam
pusha
push
inc
push
das
or
mov
mov
das
sub
in
test
inc
and
xchg
push
push
lea
and
mov
inc
sbb
xchg
xor
sub
dec
imul
pop
dec
pop
cmp
or
inc
and
aad
add
insl
or
sahf
push
lock
jmp
sub
push
mov
imul
aad
cmc
jl
nop
subb
mov
sub
inc
inc
sub
pop
scas
or
mov
movsl
or
mov
sub
out
and
add
mov
mov
lods
or
inc
push
mov
dec
pusha
inc
mov
sbb
rclb
lds
jle
icebp
dec
cld
aas
sbb
push
adc
ljmp
js
insb
in
pop
jb
pop
jo
pop
xor
shlb
cmp
pop
or
mov
jl
fdivrl
subl
dec
and
mov
cmp
mov
inc
ds
add
arpl
inc
pop
vunpckhps
inc
pop
mov
or
pop
jmp
addb
jo
in
inc
push
pop
push
sub
pop
das
punpcklwd
push
sbb
jbe
jg
adcb
dec
movsl
inc
lahf
addr16
sbb
cmpsl
into
shl
pop
outsb
adc
jb
pop
rorb
imul
sub
push
sub
jo
int
jae
je
jl
outsl
leave
addr16
xchg
addb
test
mov
lret
nop
scas
test
pushf
xchg
or
xor
mov
mov
lods
inc
jno
movsl
clc
xchg
stos
add
mov
in
inc
mov
mov
cld
aas
mov
insb
sub
sub
sub
inc
in
pop
es
in
cmpsb
mov
popa
das
dec
and
dec
sbb
enter
loopne
cli
cmp
dec
and
mov
mov
jns
jmp
mov
imul
jo
adc
pop
lods
pop
jmp
sbb
jb
inc
xchg
push
insb
and
xor
bnd
sub
je
inc
sub
and
pop
pop
dec
or
xchg
nop
test
sbb
cwtl
mov
inc
inc
and
pop
leave
inc
movsb
mov
and
and
pop
fcomps
pop
jnp
push
imul
mov
test
or
jns
push
cld
icebp
imul
je
int
sbb
clc
mov
add
and
push
cld
rorl
and
push
fcmovnb
scas
orl
ret
inc
push
inc
sbbb
and
pop
dec
add
cmp
dec
xchg
add
addl
cwtl
nop
roll
xlat
jecxz
mov
enter
fists
lds
inc
sbb
push
mov
jbe
mov
push
dec
in
jl
js
fbld
or
bound
arpl
orb
nop
xchg
jl
sbb
pop
or
dec
pop
push
lods
data16
cld
adc
xchg
and
ret
cmp
pop
pop
jp
das
xchg
adc
fisubl
call
js
enter
mov
mov
add
or
aas
fnstenv
mov
aaa
sahf
sub
mov
fisubrs
mov
sbb
push
addr16
sbb
or
rcr
push
or
insl
add
mov
shrb
test
add
xchg
sub
push
in
call
mov
out
adc
fwait
lods
fldenv
mov
and
jl
inc
in
pop
mov
add
adc
fs
je
xchg
out
and
sub
pop
cmpsl
xchg
mov
push
or
push
outsl
adc
les
aaa
fistps
mov
nop
subl
fs
xchg
push
sub
das
push
ljmp
bound
xor
push
fs
xchg
xchg
mov
imul
lahf
inc
sbb
insl
sub
jmp
rclb
add
push
or
jo
and
xor
push
pusha
imul
add
xorb
and
and
clc
add
inc
or
inc
ficoml
mov
xchg
dec
mov
push
push
fists
pop
pop
add
mov
adc
fstpt
out
mov
jbe
pop
xor
xor
xor
push
push
add
add
jle
or
xor
or
popa
out
push
sub
les
sub
imul
mov
andl
and
push
rol
inc
push
pusha
cmp
orl
shll
push
jne
add
xor
xlat
sbb
mov
popa
or
ss
adc
sbb
add
jo
aad
sub
mov
sbb
add
rcll
addr16
push
or
push
adc
add
imul
add
out
loopne
dec
stos
push
push
leave
push
les
sub
mov
lods
xor
daa
pop
or
incl
sub
dec
insb
dec
and
jb
sarl
enter
mov
js
mov
mov
lods
cmpxchg
or
jmp
sub
sysret
sub
pusha
mov
jl
nop
cmp
add
call
add
mov
xchg
mov
push
inc
pop
jne
cli
pusha
add
subb
xchg
pop
out
mov
push
nop
pop
clc
sahf
dec
dec
xchg
dec
pop
pminub
js
mov
push
pusha
mov
jo
pop
adc
imul
pop
sub
dec
or
dec
les
jl
jo
and
jo
dec
js
push
cmp
sbb
mov
sbb
push
push
sbb
or
pusha
adc
fs
push
roll
push
or
inc
add
cmp
pop
mov
or
jnp
addb
or
ret
pop
jno
xor
inc
mov
leave
adc
or
in
rorl
sbb
popa
out
fsubrl
dec
jmp
insl
mov
or
and
cmc
mov
push
cld
cmp
stos
cmp
and
mov
pop
roll
xor
sbb
jae
adc
nop
movsb
mov
xchg
test
xor
mov
inc
fcoms
inc
adc
sbb
orb
imul
or
daa
dec
test
fstps
adc
mov
mov
clc
movsb
call
jmp
push
push
pop
inc
pop
sarb
cmp
aaa
inc
mov
rclb
mov
and
test
adc
adcl
lock
outsl
add
add
sub
or
imul
outsl
sbb
adc
xor
push
idivl
xor
addl
leave
cmp
orl
push
sub
add
xor
inc
daa
sub
loop
and
jl
stc
ljmp
and
inc
pop
cmp
push
lds
jb
fs
jo
jo
insb
lea
mov
je
loope
or
inc
add
adc
das
cmp
xor
pop
inc
dec
sbb
jb
pop
adcb
in
je
lods
jno
ljmp
fcomi
rcll
nop
sub
add
inc
adc
adc
testb
add
and
cli
ret
test
jmp
enter
adc
pop
mov
mov
bound
loopne
pop
adc
add
sub
cmp
add
pusha
sbb
jb
xchg
iret
lret
clc
add
jae
sub
pop
mov
add
sbb
call
or
outsl
cld
sub
mov
pop
adc
add
cs
add
dec
aam
add
jecxz
call
mov
lock
and
sub
aam
inc
and
xor
push
imul
aad
and
mov
lock
inc
imul
cmp
popa
int3
mov
inc
push
popf
add
cmpl
lods
mov
clc
insl
xchg
pop
mov
jmp
xchg
pop
add
popf
mov
or
add
and
add
add
stc
jl
enter
add
nop
jne
sub
cmpl
sbb
or
pop
inc
ljmp
divb
adc
shrb
add
loopne
iret
arpl
nop
add
mov
and
sbb
mov
pop
pusha
adc
push
and
hlt
add
addb
jmp
and
std
cwtl
inc
cmpsl
das
js
ja
push
jb
sub
insl
fs
sbb
xchg
jbe
fldenv
sub
mov
call
imul
and
push
fs
mov
inc
push
lods
dec
ret
dec
cmp
sbb
fnsave
inc
add
sub
mov
cmp
sbb
jmp
cmp
nop
ret
pop
gs
sbb
xchg
jo
les
rcrb
sbb
sbb
in
adc
cmpsl
das
daa
inc
pusha
xchg
add
loop
adc
mov
mov
cmovb
aas
mov
js
or
lea
mov
adc
lods
cmp
ret
outsb
pop
adc
xor
mov
clc
les
pop
dec
lods
jp
js
sbb
lret
in
ret
xchg
ficoml
adc
sbb
adc
or
aam
sbb
pop
lahf
pop
inc
sub
dec
lret
sbb
lcall
lock
push
dec
icebp
and
pop
or
inc
jbe
xor
mov
xor
sti
jmp
jne
pop
or
inc
sbbb
push
mov
sbb
movsb
addr16
xor
and
ss
push
sub
adc
cwtl
sbb
shrl
or
xchg
or
mov
aaa
push
jb
adc
adc
pop
adc
sbb
fcompl
xor
jnp
lcall
sub
sub
sbb
pop
add
mov
fwait
push
mov
add
cmpsl
movsl
pop
fstl
ds
inc
mov
sub
mov
jnp
pop
mov
push
cmp
sbb
xacquire
nop
pop
adc
cmpsb
or
sub
push
shrl
and
and
dec
pusha
pop
gs
xchg
dec
cmp
adc
jae
jle
subl
cmp
jge
addb
mov
add
call
cmp
ss
insb
xor
inc
xlat
pop
ret
out
les
or
ret
sahf
in
jge
cmp
fidivrs
sti
clc
inc
frstor
mov
mov
jb
mov
add
sub
sub
es
pop
and
push
inc
xchg
dec
sub
jnp
xlat
push
jno
aaa
lods
jno
les
fsubs
insl
jne
dec
js
mov
pop
popa
mov
dec
dec
mov
ds
pushl
inc
inc
or
out
xchg
add
cmp
out
and
dec
jle
and
xor
xchg
mov
mov
repnz
ret
hlt
lock
dec
adc
push
jmp
adc
ja
jae
inc
jmp
aaa
or
fsts
dec
push
mov
mov
packssdw
push
jle
leave
movsb
pop
pop
dec
in
lahf
lods
or
or
adc
ret
out
addr16
jo
adc
dec
pusha
sub
xchg
jne
sub
mov
popa
add
and
and
mov
jmp
lds
aaa
inc
adc
dec
push
add
movsl
push
adc
inc
and
scas
ret
and
mov
sub
or
jns
xor
rcll
sub
and
inc
jmp
jge
add
xchg
push
daa
xor
xchg
aaa
movsb
rcll
push
adc
shlb
push
xchg
adc
addr16
mov
pusha
addl
daa
sub
enter
pop
sbb
sbb
or
pop
adc
and
jmp
jbe
pcmpgtb
xor
adcb
sub
gs
inc
data16
adc
adc
push
mov
outsl
adc
insl
and
lea
cld
xchg
and
jno
in
jb
lock
sub
xor
cmp
ljmp
out
cmpsb
shlb
ret
mov
and
inc
roll
sub
imul
xorb
fldenv
cld
adc
js
sub
xchg
inc
lds
dec
mov
sbb
loopne
lods
push
in
and
mov
fcomip
xchg
jle
out
outsb
jo
sub
and
mov
mov
mov
adc
ja
js
decl
inc
xor
or
test
push
aam
mov
xchg
jne
and
loopne
das
sbb
cmp
adc
jmp
and
inc
addb
scas
sbbb
sbb
add
sub
sti
add
pop
add
add
push
les
pop
bnd
push
push
inc
inc
inc
push
scas
push
push
push
jg
mov
aas
inc
dec
inc
push
inc
nopl
mov
int
mov
sub
jmp
sbb
pop
dec
pop
imul
subl
inc
ss
push
sub
popa
dec
mov
pop
add
ret
rolb
adc
push
xor
adc
enter
cmp
sbb
into
mov
mov
inc
loopne
jmp
mov
mov
add
cmp
pop
jle
add
sahf
push
das
jmp
mov
mov
outsb
cs
jne
add
xchg
adc
out
pop
sub
and
mov
mov
sub
rorl
shll
int3
xor
push
sub
jb
mov
cmp
fs
mov
or
mov
lods
mov
inc
ret
add
push
xchg
mov
cmpsl
push
sub
and
ret
in
les
sub
sbb
out
mov
mov
xchg
and
nop
cmc
push
and
nop
out
inc
pop
jb
idivb
lock
pop
in
mov
nop
and
sub
mov
sbb
lret
jae
mov
mov
inc
subb
je
mov
jb
pop
add
jae
pop
hlt
aam
mov
imul
add
push
nop
mulb
sub
and
mov
pop
adc
sbb
pop
out
test
mov
dec
dec
adc
or
pusha
jae
push
sbb
clc
test
cmp
cwtl
movsb
sbbl
cltd
add
pop
movlps
insb
ret
jp
mov
or
mov
xchg
xor
pop
lcall
js
cli
imul
inc
xor
jo
inc
lock
enter
aaa
sbb
push
xchg
add
pusha
int
rorb
add
inc
gs
shlb
imul
daa
dec
andb
icebp
mov
sub
rclb
jne
ficoms
inc
mov
sbb
lock
lahf
inc
jp
out
dec
dec
inc
inc
push
scas
comiss
xor
add
or
dec
pop
mov
dec
dec
out
push
dec
rolb
jg
push
mov
mov
add
inc
in
adcb
pop
ljmp
clc
stos
jne
jp
and
or
xor
dec
dec
gs
gs
sub
add
insb
dec
mov
cld
sbb
loop
pop
xchg
arpl
pop
mov
push
pop
add
push
xor
test
pop
jbe
mov
sbb
mov
inc
sub
dec
jne
xchg
dec
cs
dec
clc
in
clc
in
loope
in
int3
mov
fisttps
in
incl
mov
cmp
inc
pop
dec
and
add
repnz
dec
pop
adc
mov
inc
xchg
jmp
and
add
jmp
inc
cld
or
mov
aad
sbb
adc
ret
and
adc
out
mov
roll
xor
scas
and
dec
jb
ja
mov
ret
mov
add
xchg
xchg
addl
push
outsl
dec
fs
sbb
filds
add
test
cmc
xor
push
xchg
in
ret
pop
or
cmpxchg
push
push
imul
mov
rcl
pop
jne
xchg
mov
lret
xchg
inc
in
sbb
pop
jb
call
ja
ret
insb
mov
push
cltd
sbb
inc
jg
subb
sbb
cmpsl
or
or
and
popf
xor
ret
cmp
mov
mov
jo
sarb
and
xchg
sbb
push
subl
scas
mov
dec
je
jmp
mov
push
popf
dec
adc
mov
call
sbb
add
mov
shl
aad
movsb
test
ss
call
cmpsl
orl
outsb
pushf
jnp
lret
mov
add
mov
jne
or
inc
fcmovb
add
in
call
cmc
nop
js
leave
xor
add
jg
clc
movsb
loopne
fstps
xchg
loope
js
xchg
in
adc
pop
or
or
inc
mov
das
lds
sub
pop
fs
and
rol
jb
js
test
push
loope
je
adcl
es
lar
je
mov
push
jnp
pop
addl
popl
fsubrs
and
adc
js
push
sbb
inc
add
mov
mov
sub
scas
stos
adc
shll
mov
das
dec
add
pop
jne
aam
fs
pop
pop
cld
or
sub
jb
lgs
mov
push
jb
push
or
ret
add
mov
insb
mov
mov
dec
inc
cmp
adc
push
popa
inc
ret
mov
out
pop
js
inc
push
imul
mov
sarl
imul
add
das
lock
daa
fs
js
addb
or
nop
mov
mov
xlat
sbb
or
mov
push
pop
andl
neg
sahf
pop
bound
push
xor
or
adc
ja
or
or
mov
or
cltd
decl
repnz
jno
mov
sbb
cmp
mov
ret
add
fstpt
cli
lds
mov
cmc
jo
ds
xor
orl
mov
sti
inc
or
fs
cs
and
inc
adc
inc
mov
sbb
pop
enter
test
lods
pop
push
or
sub
inc
sbb
xchg
in
push
movsl
jne
inc
lock
inc
inc
push
lock
movsb
mov
fcomip
jmp
mov
mov
fcoms
call
ss
mov
push
mov
jge
xchg
mov
adc
insb
bound
pop
inc
dec
dec
pop
arpl
decl
dec
inc
inc
push
sub
adc
inc
xchg
test
daa
add
xchg
lcall
inc
pop
lock
ss
mov
cwtl
pop
rcr
and
xchg
mov
mov
hlt
adc
cmpl
pusha
cltd
outsl
mov
ror
dec
psrld
sub
sbb
aam
adc
xor
je
orb
adc
inc
adc
xchg
movsb
jg
test
sub
cmpsl
xchg
in
dec
pop
adcb
aaa
adc
add
ffree
mov
adc
dec
or
outsl
shl
pop
push
addr16
mov
xorl
sub
divb
push
movsb
sub
xchg
cmc
loopne
pushl
pop
or
add
add
loop
or
imul
mov
rorb
insb
add
add
fidivs
jb
rcrl
out
and
or
popf
xchg
xchg
jo
movsb
and
and
cltd
cwtl
sub
xor
pop
adc
add
int
es
das
fmuls
dec
imul
inc
add
lahf
or
cmp
data16
jg
adc
add
fnstenv
popa
ret
push
xchg
imul
and
add
sbb
pop
mov
adc
mov
inc
test
js
shll
fnsave
push
mov
jmp
cltd
ja
mov
lock
cmp
xor
inc
cmp
shll
shlb
push
push
sti
imul
push
dec
pop
cs
popf
add
daa
inc
dec
xchg
add
xchg
push
xor
lock
cld
movswl
cmp
jne
adc
push
adc
sar
js
cmp
push
clc
fisttpl
pop
xor
jo
aam
jmp
stos
push
movsb
fs
inc
or
cltd
in
or
call
xchg
or
clc
cld
stos
and
push
jnp
lcall
sbbb
clc
pop
and
testb
mov
nop
push
ljmp
mov
fisttpl
xor
add
xchg
xor
jbe
add
inc
lcall
add
in
lods
inc
sahf
je
lock
call
icebp
and
pushf
ret
cmp
mov
ret
imul
sti
testb
adc
cmp
loope
add
pop
je
lds
addl
mov
pop
add
das
dec
sub
dec
jecxz
and
popf
nop
arpl
ror
idivl
nop
sbb
and
arpl
and
adc
xor
push
push
sbb
dec
imul
addb
lahf
outsl
je,pn
add
scas
sbbl
popa
and
aam
or
insl
mov
push
jmp
push
pop
nop
adc
dec
push
movsb
pop
pop
andb
jnp
add
sub
subl
les
xchg
shrb
add
int3
add
mov
popf
inc
lods
pop
rol
mov
fldcw
aaa
popf
mov
pop
sbbl
lds
imul
imul
pand
xchg
xchg
jo
test
ljmp
addr16
mov
mov
mov
lock
dec
xchg
push
or
mov
xor
push
jno
mov
popa
filds
jle
or
xchg
hlt
movsb
mov
adc
jmp
aad
xor
mov
dec
ds
rcl
sbb
add
ror
sarl
sarl
jno
jmp
jge
jo
adc
fs
in
les
pop
loopne
loope
call
add
mov
iret
cmc
enter
int3
add
xchg
pop
cmp
jns
sti
fcmovb
push
mov
andl
and
adc
cmp
mov
or
adc
arpl
loopne
movl
mov
xchg
fistpl
or
xchg
xchg
cltd
xchg
push
and
jns
mov
outsl
inc
cmp
ret
sub
inc
pushf
nop
je
dec
or
push
push
mov
pop
dec
mov
aam
pushl
hlt
xorb
cld
int
add
inc
test
mov
push
inc
mov
outsb
mov
movsl
mov
or
bound
pop
loop
mov
pop
mov
push
add
mov
jns
addr16
cmp
mov
jge
hlt
clc
add
mov
sub
sbb
mov
fstl
rolb
adc
xchg
add
adc
adcl
je
inc
sub
les
mov
shlb
mov
shrl
mov
xor
aad
mov
push
jno,pn
rclb
outsb
sar
push
ret
adc
push
and
cwtl
nop
clc
adc
lret
inc
fdivs
push
movsl
pop
adc
cmp
and
or
lods
push
inc
jo
jne
xlat
adc
daa
xorl
pusha
cmp
je
mov
jnp
xor
pop
add
loopne
outsb
addr16
int
test
cld
push
xor
movsb
jnp
xorb
sbb
gs
jno
fbld
mov
sbb
lret
mov
jno
cmp
cmpsl
call
mov
or
inc
test
es
fildll
lea
adc
xchg
movsb
cwtl
sub
pop
inc
ret
aaa
rol
jmp
and
adc
sbb
fistps
pop
orl
add
fdivs
inc
div
xor
ljmp
jmp
mov
or
dec
cmp
dec
jns
mov
mov
push
imull
push
or
divb
mov
es
adc
add
insb
inc
xor
add
leave
lea
mov
xchg
sbb
push
cmp
sub
add
jne
mov
xor
or
dec
xor
mov
xchg
gs
pushl
lods
lcall
loopne
test
imul
add
rolb
cltd
movsl
mov
mov
mov
cwtl
loop
xchg
sahf
inc
cs
in
dec
xchg
nop
loope
nop
lret
sbbb
int
cs
or
mov
inc
andb
sbb
push
jecxz
jl
dec
pop
push
in
js
je
popa
jo
jns
and
insb
insb
add
insb
push
outsl
inc
fs
mov
pusha
das
sahf
inc
cs
ficomps
jae
aaa
and
push
int3
in
nop
dec
push
push
push
dec
dec
or
movsl
cmp
dec
loope
push
pop
imul
div
cmp
xchg
cmp
cmp
and
sbbb
xor
sbb
inc
xchg
dec
cs
inc
inc
inc
and
in
and
and
sbb
add
sbb
adc
gs
adc
and
add
add
add
add
popa
xchg
pop
mov
cld
std
sbb
fcompl
cs
std
sbb
sub
sbb
mov
xchg
call
stc
ficoms
loopne
jl
jb
loopne
fmull
add
aam
cmp
sbb
jno
jbe
fwait
cmpsl
jb
std
sbb
ret
sub
sbb
shrb
or
push
mov
pop
nop
mov
pop
inc
jle
sbb
std
push
jns
inc
jle
sar
adc
mov
or
lds
and
movsb
pop
push
in
movsb
mov
lret
sbbb
xchg
xchg
nop
mov
mov
mov
or
mov
jmp
or
dec
push
cwtl
out
lea
mov
lods
jb
or
adc
repnz
sbb
inc
xchg
and
adc
pop
lea
mov
mov
add
add
mov
mov
xchg
out
xchg
loopne
cmp
repnz
xor
enter
jl
mov
aaa
or
mov
enter
das
fldcw
push
cmp
and
cmpl
enter
add
inc
or
inc
adc
and
dec
fs
and
push
push
sub
out
mov
ja,pn
xlat
push
pop
fadd
pop
mov
mov
cmpsb
test
ss
push
lret
xlat
mov
out
cmp
rcr
mov
dec
popl
cmp
push
mull
jne
loopne
pusha
mov
xchg
pop
mov
ds
cltd
les
popa
or
pusha
sar
mov
jecxz
push
nop
pop
pop
xchg
or
sbb
dec
mov
xor
dec
and
fwait
loop
and
push
dec
sbb
or
adc
add
mov
push
mov
mov
xchg
and
arpl
add
mov
push
pusha
cmp
fldt
rcll
mov
fildl
cmp
add
sub
loopne
cld
mov
or
and
jno
and
insb
je,pt
movsl
adc
xchg
movsb
test
sbbb
jle
lcall
int3
push
rclb
sbb
imul
mov
mov
mov
lret
inc
mov
scas
inc
sub
lods
enter
movb
das
add
push
push
mov
cmp
enter
xchg
lock
sarb
jg
mov
add
inc
sub
cmp
cmpsl
cmp
push
push
hlt
and
dec
ret
jbe
call
int3
xor
orl
push
sbb
add
test
or
cmpsl
sahf
xchg
mov
inc
push
jg
add
lock
fcmovnu
adc
push
jae
int3
fxch
enter
jb
les
cmp
mull
push
lock
loopne
fcmovu
xlat
cmp
adc
sub
fistpll
jae
jae
mov
lods
and
jb
lods
mov
jae
rol
dec
hlt
test
xor
int
movsl
lock
test
and
xchg
imul
jmp
sbb
pop
sub
imul
imul
adcb
mov
sbb
insl
ficoms
in
mov
xchg
mov
xchg
popf
not
test
adc
mov
imul
insb
pusha
enter
push
and
pop
push
sub
and
and
push
mov
cltd
in
pop
pop
pop
movsb
cmp
inc
dec
inc
movsb
cmp
inc
dec
sbb
xchg
pop
dec
dec
cmp
xor
lret
test
int3
xor
xchg
add
cmp
nop
xchg
out
and
and
jb
nop
out
and
sub
jb
dec
sub
adc
xor
sbb
adc
in
and
or
sbb
and
enter
aaa
test
xchg
lea
mov
xchg
mov
or
mov
add
fwait
mov
mov
loop
jne
jno
lret
cmp
fistpl
mov
ficoms
sub
add
sub
or
add
fbld
push
dec
dec
and
or
xor
jge
inc
mov
loopne
or
pop
pop
out
mov
imul
adc
adc
lcall
js
ja
shlb
rcrb
int3
push
loopne
sub
fcomi
sbb
mov
sarb
sarb
xor
enter
repnz
add
leave
dec
jae
lods
mov
mov
inc
dec
mov
pushf
dec
pushf
test
mov
mov
dec
leave
dec
jae
cwtl
cwtl
subb
adc
fimull
es
xchg
test
xor
das
leave
or
and
insl
pusha
js
adc
cmp
movsb
mov
and
push
cmp
movsb
cmp
dec
push
sbb
xchg
pop
pop
pop
sub
push
cmp
inc
es
dec
lods
rcrb
push
fsubrl
lea
push
ljmp
fistps
push
stos
aaa
pop
mov
pop
sbb
cltd
movsb
loopne
es
inc
pusha
adc
mov
in
sub
mov
enter
cmp
and
enter
adc
sbb
lods
add
or
mov
pop
inc
add
pop
fcoml
add
add
and
adc
adc
sahf
test
scas
call
push
sub
sti
sub
mov
popa
and
fimuls
cmp
jmp
outsb
jae
add
dec
hlt
inc
cmpl
cmpsb
mov
xchg
dec
lock
ret
aas
call
test
orb
test
sbb
xor
adc
push
ja
mov
push
pop
aaa
je
cmpl
imul
or
pop
popa
movsl
cmp
in
aaa
in
or
push
cwtl
jmp
insb
movsl
fistps
shrb
inc
mov
xchg
repz
out
jb
repz
fisttps
shlb
movsb
data16
inc
fnstsw
mov
push
or
mov
sahf
arpl
pushf
push
aad
xchg
cmpsb
rcrb
mov
nop
pushf
nop
pop
loopne
add
out
test
addb
jl
add
add
bnd
sbb
js
cmp
mov
mov
and
stos
loope
in
cmp
inc
mov
pop
pusha
adc
cmp
pop
mov
cmp
clc
nop
sbb
mov
aad
les
int3
pop
add
jno
xchg
mov
test
dec
xchg
aaa
in
dec
inc
and
inc
int
andb
sbb
cmp
pop
fisubl
or
cmp
add
mov
xchg
mov
add
lcall
pop
pop
and
push
and
ret
andb
sbb
movl
xorb
iret
add
loopne
and
pop
lcall
or
push
add
inc
xchg
add
mov
hlt
sbb
add
stos
push
int
cmpsl
sbb
sbb
mov
sbb
in
add
or
in
fdiv
hlt
rolb
and
or
mov
fwait
push
add
in
popf
fmul
push
mov
sub
loopne
pop
clc
in
notl
push
add
xor
inc
fmull
sbb
xchg
and
int3
push
pusha
enter
enter
nop
movntps
iret
and
mov
mov
ljmp
lahf
xor
mov
movsb
and
xchg
roll
and
mov
jo
or
inc
clc
pop
inc
imul
imul
or
sub
in
shll
inc
insb
or
mov
and
sub
push
lods
and
add
mov
popa
and
and
mov
pop
andl
mov
movsb
jb
shll
or
mov
adc
aaa
adc
orb
lods
or
xchg
adc
ret
pop
add
faddl
sbb
inc
dec
pop
jb
nop
inc
inc
cmp
or
inc
fwait
lods
test
inc
push
pop
mov
es
xor
mov
sub
scas
push
scas
dec
dec
sub
or
clc
add
or
add
pop
rclb
fsts
xor
adc
and
inc
and
and
jnp
test
leave
out
jnp
adc
and
jnp
and
xor
jnp
dec
loope
in
fdivl
jo
or
xchg
add
adc
std
sbb
or
add
shr
enter
cmp
cmpsl
adc
push
adc
imul
cmpsb
in
sbb
test
sbb
and
add
or
push
test
mov
imul
jb
or
pusha
add
sbb
sbb
sbb
cmpsl
movsb
fdivr
pop
sub
es
cmp
or
push
or
adc
add
orl
and
mov
insb
aad
cmc
mov
test
jns,pn
add
pop
insb
std
insb
lcall
sbb
inc
insb
hlt
fs
xor
pusha
lret
sbbb
pop
add
pop
dec
push
stc
push
movsb
rcrl
push
push
and
or
lcall
cmp
gs
cmp
and
sub
push
in
sub
sub
nop
lret
andb
inc
add
sbb
mov
adc
adc
and
xchg
pop
cs
cmp
inc
repnz
or
jmp
sbb
and
mov
sbb
fs
sbb
seta
xchg
cld
sbb
dec
push
out
in
cld
in
xchg
call
loop
movb
cmp
inc
in
jae
jb
aaa
movsb
and
mov
jb
pop
repnz
sbb
leave
mov
rcrl
xchg
ds
mov
enter
xchg
sbb
imul
shrb
sbb
dec
mov
jmp
cld
sbb
subb
addr16
out
xchg
sbb
loopne
test
xchg
movsb
mov
xchg
push
cld
gs
frstor
aaa
cwtl
and
je
push
or
cld
mov
mov
leave
cmpsl
cmp
inc
mov
sbb
pop
inc
push
mov
mov
push
in
inc
mov
sar
xchg
add
xor
push
inc
je
dec
sbb
loopne
je
aam
mov
dec
and
jo
and
push
push
cwtl
fs
pusha
cld
pusha
sbb
test
insl
repnz
into
push
pop
push
mov
cmp
push
out
adc
lret
push
or
rcrl
adc
xchg
cs
mov
or
add
or
pop
fsub
cmp
or
sub
sbb
dec
add
inc
mov
mov
jmp
and
idivl
sbb
or
cmp
out
xor
add
add
ja
inc
gs
imul
insl
rclb
aam
lret
adc
enter
fadds
jae
mov
adc
ss
je
xor
int
fwait
cmc
jmp
dec
cmp
add
mov
adc
insb
adc
lea
test
scas
pop
mov
adc
pushf
mov
fimull
andl
pop
cwtl
flds
push
pop
repnz
xchg
xchg
sub
push
jo
mov
iret
test
xchg
into
push
mov
loop
addr16
repnz
cwtl
outsl
ds
dec
sub
xor
icebp
push
add
mov
sbb
fucomip
xchg
insb
rcrb
hlt
sti
sbb
jo
jbe
lock
sbb
in
sti
xchg
popf
mov
sti
ja
add
in
in
xchg
inc
enter
sti
sahf
inc
mov
fdivrs
in
aam
or
in
dec
ror
int3
nop
outsl
inc
push
push
enter
or
in
les
mov
mov
inc
cs
dec
xchg
mov
cmp
nop
mov
mov
mov
jp
or
seto
adc
add
adc
mov
add
aas
xor
out
dec
lds
jl
movsb
sbb
loop
andl
jg
fildll
dec
clc
pop
jo
sub
mov
push
pop
mov
jg
sub
mov
pop
imul
pop
sbb
sub
adc
loopne
outsl
subl
inc
outsl
or
mov
out
mov
push
loopne
std
outsl
cmc
test
shrb
orb
sub
push
push
adcb
dec
adc
orl
pop
add
mov
mov
add
adc
iret
nop
or
mov
mov
or
test
jae
mov
rclb
cmpsl
push
adc
inc
xor
dec
daa
push
add
orb
shlb
loopne
push
or
push
add
das
fists
adc
bts
or
das
daa
inc
jb
add
or
stos
add
das
xchg
jno
jl
sbb
sub
mov
nop
pop
dec
daa
adc
push
pushf
cs
and
sbb
mov
xchg
adc
popf
sub
arpl
call
add
xor
int
call
push
push
push
adc
or
sub
or
mov
dec
lret
xchg
add
cltd
les
ret
dec
mov
and
in
pop
push
inc
jg
std
movsb
leave
enter
push
add
mov
adc
not
mov
and
mov
or
fisubs
mov
repnz
leave
push
or
cmpl
add
iret
and
adc
enter
mov
sbb
add
push
and
ret
repnz
sub
cmpsb
xor
mov
sub
jmp
adc
mov
insb
pop
orb
and
ret
dec
push
int
idivb
add
push
movsl
rcrl
pop
dec
push
test
scas
push
int
fisttpl
pop
mov
cmpsb
cmp
add
fistl
push
inc
daa
pop
rcll
pop
stc
pop
cmpsl
sbb
jle
and
or
or
sbb
xlat
mov
cmpb
add
insl
xor
mov
mov
arpl
xor
mov
push
add
inc
enter
push
out
push
popa
xor
mov
test
je
mov
int3
mov
xorl
and
and
inc
cmp
pop
push
adcb
push
add
imull
mov
gs
add
mov
das
push
jae
and
es
clc
dec
fnsave
test
adc
call
in
mov
pop
inc
stos
je
adc
sub
and
adc
xchg
xor
cmpsl
addb
lock
ret
inc
lret
stos
add
dec
scas
mov
int3
cwtl
xchg
xor
repz
frstor
rorl
fstpl
dec
push
push
mov
dec
rcrb
xchg
mov
mov
sub
dec
rcr
sbb
fbstp
pop
scas
cli
cmpsl
in
pop
xor
int3
insb
dec
scas
inc
push
sbb
pop
mov
cmpsl
mov
cmpsl
in
shll
shlb
cld
and
bound
sub
ret
test
xchg
pop
mov
in
imul
mov
cmp
ret
jns
push
mov
adc
xchg
pushf
or
mov
jecxz
mov
add
int3
and
addr16
xchg
sub
inc
add
inc
sbb
lea
and
xchg
fcom
mov
xchg
add
mov
add
add
sarl
jns
xor
rorl
addl
add
inc
popa
sub
push
sub
jb
mov
sbb
roll
jae
cltd
in
sbb
pop
pop
arpl
push
dec
test
das
add
pop
test
test
mov
xchg
test
test
sbb
sub
mov
fistl
mov
and
inc
jne
mov
fcomp
aam
lods
je
sbb
mov
lods
dec
fcom
jmp
loope,pn
jmp
and
loop
jecxz
push
jno
imul
xor
rcll
and
push
xlat
push
lea
pop
loop
mov
rcll
test
xchg
pop
sbb
pop
in
dec
mov
and
sbb
or
sbb
nop
push
push
sub
or
pop
mov
or
xchg
pop
xchg
test
adc
and
cmpb
nop
xchg
dec
adc
shlb
push
pop
test
xchg
push
cmp
lods
push
xor
push
or
cmp
or
rolb
sbb
or
lds
adc
pop
jmp
pop
loope
push
pop
lahf
push
pop
sub
in
stos
push
jmp
nop
cmp
test
add
sbb
fbstp
mov
sbb
repnz
mov
imull
or
hlt
push
loope
inc
or
test
sbb
inc
inc
pop
mov
cmp
test
loope
jg
mov
or
and
mov
dec
insb
jo
dec
xorl
xchg
dec
xchg
cli
aam
mov
loope
aaa
xchg
mov
loope
ret
inc
loopne
rolb
int
gs
push
outsb
push
pop
mov
enter
dec
xchg
ficomps
sbb
test
insb
inc
popa
leave
ret
xor
sub
adc
lock
loope
xor
test
or
and
push
pop
jb
imul
movsl
imul
mov
dec
sbb
mov
leave
loope
and
shll
fcomip
mov
jg
js
mov
inc
inc
jb
xchg
inc
dec
dec
dec
add
cmp
ret
or
jle
pop
imul
push
out
loopne
fisttps
test
and
fists
xchg
in
jle
inc
inc
enter
pop
adc
adc
pop
nop
sbb
or
adc
ret
inc
add
adc
jne
mov
lea
popa
pop
xchg
or
lret
or
sub
nop
scas
call
or
bnd
or
cld
sbb
or
xchg
cld
sbb
adc
xor
out
aam
sahf
inc
cs
ror
in
adc
inc
fisttps
inc
arpl
insb
pop
mov
xchg
sub
mov
add
or
lods
lods
pop
mov
sbb
fsubs
seta
dec
push
in
mov
dec
cs
jmp
dec
insb
push
mov
rcr
flds
push
ret
push
sbb
jmp
in
js
lret
and
lret
je
or
insb
jo
popa
adc
and
mov
pop
pusha
pop
leave
and
sbb
pop
add
popa
pop
push
push
incl
sbb
dec
pop
push
in
dec
decl
inc
sbb
inc
inc
add
cmp
ds
enter
push
gs
xor
lret
sbbb
add
nop
and
and
sbbb
push
jg
sbb
ds
rcrb
mov
adc
or
and
in
dec
in
or
leave
sbbl
ret
sbb
xor
jb
inc
insb
mov
addb
push
ret
mov
push
mov
push
lret
or
mov
popa
ret
pop
push
mov
push
dec
int3
mov
fstps
or
pusha
stos
mov
stos
enter
or
inc
fnstcw
inc
leave
inc
xchg
lock
nop
dec
insb
inc
jns
ret
mov
test
enter
inc
movsb
movsb
and
pushf
pop
push
in
pushf
cwtl
cwtl
rcl
es
in
add
and
loopne
in
pop
roll
mov
test
mov
xchg
ret
addb
jl
jae
in
movsb
js
dec
je
insl
fmull
sbb
sti
sbb
mov
cs
pusha
pusha
enter
jecxz
pop
mov
or
inc
cs
mov
sbb
dec
cmp
ret
xor
leave
inc
fstpl
mov
cmp
addl
sbb
cmp
pop
add
or
push
push
in
nop
sub
jecxz
sub
les
and
mov
cmpb
movsb
loopne
cmc
cwtl
pop
and
lcall
es
mov
dec
or
sbb
filds
dec
add
jno
mov
cmpl
clc
cli
sbb
and
lock
shr
sbb
dec
jle,pt
cli
sbb
stc
cs
loopne
dec
fsubl
fists
push
dec
fcoms
cwtl
adc
adc
xchg
insb
cs
cli
rclb
push
das
or
or
and
rcrl
pusha
js
enter
cli
sub
add
cli
in
in
sbb
cli
mov
jno
jo
add
mov
or
insb
mov
sbb
fildll
sbb
repnz
mov
ljmp
enter
push
xchg
xchg
nop
xchg
add
mov
repz
mov
cli
adc
imul
and
and
adc
fs
enter
loope
loope
mov
dec
repnz
sub
push
add
or
xchg
push
xor
es
test
mov
or
and
adc
or
and
push
jbe
icebp
and
mov
repz
jmp
repnz
dec
stc
dec
inc
xchg
push
out
cmp
dec
ffreep
bound
jo
pop
fidivl
adc
es
inc
repz
lock
jne
popf
aam
outsl
jge
int3
sub
inc
add
xor
mov
adc
dec
xor
push
sub
fwait
jecxz
dec
fstl
xchg
mov
pop
lret
sub
repnz
rol
mov
and
xchg
rorb
or
lods
inc
mov
ret
xchg
test
or
cmp
cmpsb
inc
mov
loopne
and
rcll
bound
leave
cmp
jecxz
loope
xchg
sbb
les
scas
mov
sbb
adc
lods
cmp
loope
mov
dec
or
dec
movsb
jb
pop
dec
push
ret
or
adc
jecxz
daa
loop
adc
dec
xchg
shl
xchg
mov
lret
pshufw
fisttps
loope
loope
leave
xchg
or
loope
mov
nop
and
sub
xchg
loope
loope
test
fisubs
mov
inc
xchg
ds
cltd
xchg
mov
mov
xchg
pop
stos
adc
jno
push
inc
xor
adc
or
adc
adc
sub
test
sub
dec
mov
rolb
jno
test
fisttps
and
xchg
int3
fiadds
fwait
das
xchg
mov
dec
lahf
and
loopne
sbb
inc
jne
test
sbb
mov
jb
or
insl
loope
and
xor
adc
leave
int3
popf
xchg
pop
add
push
mov
adc
jae
or
lods
inc
jae
jae
ret
dec
xchg
out
jo
inc
xor
insb
dec
jb
inc
test
loope
and
xor
leave
loope
mov
sbb
daa
or
mov
popa
or
xchg
int3
out
inc
mov
test
popa
jp
xchg
and
adc
rclb
loopne
and
mov
sub
sub
or
push
sub
sub
scas
dec
dec
xchg
loope
sub
in
sahf
pop
inc
jb
xor
mov
xor
jo
jne
arpl
sub
jo
pop
or
pop
or
dec
and
mov
popa
dec
sbb
dec
or
leave
imul
xchg
filds
mov
add
xchg
and
mov
or
xor
mov
inc
mov
sbb
popa
and
sbb
jecxz
and
bound
or
rcr
imul
stos
flds
cvtdq2ps
xchg
je
dec
xchg
dec
insb
adc
mov
inc
xor
outsb
sbb
pop
inc
inc
test
pop
push
in
push
xchg
lret
aam
adc
adc
push
xor
or
pmuludq
pop
fwait
mov
cmp
iret
adc
cmp
nop
xor
cmp
cmp
nop
inc
inc
dec
dec
in
inc
push
push
push
pop
or
inc
adc
out
mov
in
xor
inc
or
in
or
lret
lods
mov
mov
mov
pop
push
cltd
jo
js
cmp
cmp
mov
cmp
cmp
cmp
cmp
adc
inc
jp
cmc
outsl
sbb
ja
push
data16
das
xchg
jb
aaa
lea
pop
pop
xlat
xchg
add
or
add
dec
inc
inc
jbe
add
push
jne
cli
sub
jg
mov
or
js
mov
dec
decl
out
dec
add
aas
add
inc
mov
ja
insb
mov
and
outsb
fcoml
cwtl
or
inc
rclb
int
jb
int3
enter
enter
and
adc
enter
or
inc
pop
int3
cmp
cmovns
xor
cmp
in
shlb
jne
nop
dec
sahf
xchg
test
inc
cs
daa
aam
mov
cmp
or
pop
int3
xchg
gs
xacquire
mov
xchg
xchg
in
sub
movsl
xor
sar
test
mov
je
pop
dec
cltd
mul
adc
insl
jecxz
or
lea
loopnew
les
fisubs
shrb
inc
sbb
addr16
inc
clc
xor
aad
mov
rcll
push
dec
pushl
std
pushl
dec
add
lea
sub
or
jp
fidivs
loopne
jne
xor
es
or
mov
stos
sub
dec
scas
inc
gs
pop
push
lods
dec
out
xchg
mov
sbb
mov
sti
jl
and
pop
add
inc
pop
adc
pop
pop
or
inc
or
sbb
pushf
loop
lds
int
xchg
xchg
sbb
adc
fcompl
sbb
and
arpl
jns
lods
mov
in
out
mov
in
int3
fimull
test
shl
dec
add
jle
int3
xchg
mov
add
leave
pop
addb
enter
add
les
in
xchg
inc
imul
int
bound
in
mov
aad
aam
xchg
sub
nop
cmpsb
cwtl
rol
add
enter
out
cbtw
mov
adc
push
mov
adc
shlb
add
repz
mov
sub
sub
pusha
push
stos
adc
vunpckhps
dec
out
jae
rol
cmp
sbb
mov
clc
pop
nop
mov
or
andl
dec
xor
mov
aaa
aam
in
mov
push
adc
mov
add
adc
dec
push
orb
jecxz
sub
js
lock
lret
push
orl
leave
adc
sub
arpl
pop
xchg
aad
dec
xchg
xor
inc
xor
push
cltd
mov
add
inc
add
mov
inc
add
xor
and
mov
ja
lock
dec
sbb
pusha
dec
shlb
jecxz
lcall
arpl
xor
cld
orb
xlat
test
xor
inc
fs
std
addb
push
xor
in
lock
and
adc
mov
enter
dec
add
or
fiadds
jns
inc
adc
mov
in
adc
xchg
sub
in
adc
sbb
loopne
sub
enter
fcoml
arpl
mov
pop
mov
push
fs
xchg
ret
or
aam
cmp
push
rclb
insl
bound
cmc
or
sub
sub
cltd
fidivrl
or
movsb
xchg
adc
pop
mov
push
icebp
not
shlb
sbb
rcl
int3
fcmovbe
rclb
aad
mov
adc
and
jg
adc
into
pop
cmp
shrb
or
push
add
ret
cmpsb
sbb
pop
sti
imul
jns
loopne
sbb
pop
pusha
inc
imul
popl
ljmp
jno
orb
push
push
das
loopne
sbb
xchg
inc
sub
jbe
push
or
test
inc
sahf
mov
sahf
push
pop
mull
mov
pop
rcrb
inc
imul
addb
test
in
mov
pop
mov
xchg
add
inc
and
add
and
push
xor
sbbb
and
jmp
int
inc
jo
and
stos
test
sub
mov
subb
es
pop
xor
in
mov
imul
dec
cmp
push
cs
push
outsl
inc
cs
dec
push
push
and
push
imul
and
and
xchg
pop
and
add
sub
sbb
xchg
dec
daa
jo
pop
in
or
rorb
lods
mov
dec
push
mov
or
and
xor
xor
orl
cmp
and
dec
add
inc
in
add
xorb
fsubrs
add
hlt
pop
xchg
clc
pop
repnz
sbb
fs
adcl
daa
push
xchg
xor
leave
inc
repz
or
adc
sbbb
rclb
and
push
mov
cltd
movsb
or
rcl
leave
gs
cs
mov
or
or
mov
or
add
imul
movsb
in
gs
add
xchg
ret
dec
pusha
mov
push
leave
sbb
adc
push
inc
mov
push
ror
lret
loopne
movsb
jb
mov
pusha
test
add
test
pop
inc
sbb
push
mov
loop
push
and
jno
dec
mov
loope
xchg
sbb
push
add
jb
loopne
push
push
pop
or
gs
pop
pop
pop
add
test
jb
mov
insb
xor
or
add
inc
xchg
cmp
loope
and
and
xchg
push
push
in
sub
lock
cmpsb
fs
loopne
or
add
xor
movsl
xchg
inc
dec
mov
insb
loope
and
cs
std
test
xchg
std
loopne
adcl
adc
je
mov
imul
sub
inc
dec
dec
jecxz
loope
add
enter
xchg
enter
sbb
sub
nop
arpl
loopne
add
mov
rorb
je
outsl
xchg
cs
jo
or
in
xchg
cwtl
cwtl
and
add
adc
inc
adc
or
xchg
add
lods
or
rolb
push
inc
cs
loopne
loope
inc
fs
in
fs
mov
add
inc
dec
mov
loope
sub
and
lcall
xchg
sub
dec
push
leave
rol
insb
jecxz
xchg
lret
pop
or
or
cmp
cmp
jno
and
mov
or
and
add
ret
xchg
lea
fildl
cmc
add
arpl
arpl
fdivs
out
xchg
inc
pop
dec
sub
imul
aaa
nop
hlt
pop
cmp
loopne
lock
and
cwtl
mov
mov
pop
adc
scas
pop
dec
ret
sub
mov
push
stos
or
or
dec
cs
lea
out
mov
sub
mov
mov
mov
xchg
fs
adcb
xchg
orb
xorb
je
or
pusha
adc
mov
mov
enter
jb
inc
adc
adc
in
ret
lea
nop
lret
sbbb
inc
dec
sbb
js
xor
cmpsl
sbb
xchg
sbb
enter
sub
adc
lcall
pusha
hlt
jae
sbb
inc
xchg
aaa
inc
add
stc
xchg
adc
mov
call
or
xor
push
in
and
cmp
cmp
nop
dec
or
mov
in
addb
add
and
and
dec
xchg
call
adc
or
popa
and
and
xchg
mov
movsb
rolb
aaa
sti
sti
sti
dec
sub
add
nop
sti
mov
cmp
xor
ss
or
sbbb
nop
pop
inc
rclb
or
or
adc
inc
jb
inc
or
xor
lahf
add
xchg
xchg
xchg
loope
or
jae
mov
lea
in
mov
xchg
add
or
or
rcrb
orb
cmp
xchg
cmp
add
sub
inc
das
mov
jge
inc
shlb
sub
push
leave
push
add
int3
loop
dec
mov
in
adc
subb
sub
xchg
inc
repnz
in
dec
mov
leave
and
int3
inc
inc
jb
subb
mov
inc
add
imulb
fiadds
and
test
inc
sub
mov
rcll
inc
adc
inc
dec
das
add
negl
pushl
mov
xchg
int3
and
and
cmp
shlb
and
xchg
lods
in
add
dec
cmp
or
dec
xchg
pop
sub
mov
fsubrp
pusha
inc
push
into
icebp
sbb
aam
pop
add
push
rcl
das
int3
jb
and
sbb
loope
jmp
or
push
loope
pop
mov
xchg
and
fisttps
fs
loope
mov
out
and
push
push
loope
pop
hlt
mov
loope
push
dec
adc
inc
push
stos
or
dec
daa
call
test
movsb
jb
addb
sbbb
js
push
in
inc
popa
js
je
in
sbbb
insb
filds
push
and
mov
sbb
repnz
in
rcl
pop
lods
push
nop
out
mov
inc
xchg
push
filds
dec
dec
jecxz
push
in
and
inc
daa
xor
aas
pop
inc
inc
sbb
cmp
cmp
add
cmp
jo
xor
in
nop
lret
sub
sub
xor
scas
push
and
and
and
push
in
sbb
sbb
outsl
adc
mov
adc
iret
or
and
or
xchg
add
add
jl
shlb
and
mov
rol
mov
adc
stc
sbb
hlt
stc
outsb
leave
sbbl
lock
sbb
and
sbb
call
xchg
sbb
stc
sbb
mov
sbb
insb
add
add
push
adc
sbb
aam
xchg
in
gs
lret
mov
cmp
loopne
insb
enter
pusha
dec
jae
in
push
push
pop
nop
pop
lret
rcrb
in
pop
nop
mov
repnz
dec
popa
adc
mov
pop
fildl
out
repnz
dec
cmp
rclb
or
pushf
mov
cwtl
cwtl
xchg
xor
xchg
add
in
mov
mov
mov
mov
mov
adcb
sbb
rcr
sbb
fidivrs
jb
in
push
je
xor
aas
push
jo
insb
insb
xchg
cs
test
subl
clts
adc
repnz
leave
xchg
ss
iret
push
xchg
pop
lret
push
sub
xor
sbb
int
daa
or
dec
insb
in
cmpb
xchg
pop
fsubl
sub
les
popa
out
inc
xchg
add
cmp
in
and
xor
fldl
mov
jae
inc
and
and
push
and
scas
and
or
sbb
out
rcrl
test
push
xor
test
mov
shll
mov
sbb
dec
popa
nop
xchg
sbb
adc
mov
cmpsb
daa
mov
mov
add
mov
mov
mov
fwait
enter
mov
cld
pop
repnz
clc
sbb
nop
or
or
push
lock
mov
cs
sub
xchg
add
fdivl
jo
lock
lock
js
in
mov
dec
xchg
je
clc
sbb
lcall
mov
mov
push
test
dec
jmp
adc
subl
and
xchg
mov
popa
or
mov
aaa
insb
xor
or
out
push
shlb
sbb
add
mov
xor
dec
enter
mov
xor
rol
roll
nop
les
sub
in
mov
xchg
shrb
mov
mov
inc
xor
mov
mov
shlb
sub
lods
sub
movsb
test
adc
and
xchg
xchg
sub
inc
js
cwtl
cmpsb
pop
xor
cwtl
and
pop
dec
and
push
sub
cmpsb
fs
cs
nop
push
and
mov
sbb
andb
addb
xchg
sub
add
dec
ds
jb
je
nop
and
cmpsl
fs
mov
or
dec
insb
sub
fs
push
inc
xchg
sub
cmp
pop
mov
leave
nop
pop
test
and
and
push
jb
sbb
dec
fs
add
dec
pop
andb
xchg
sub
add
and
movsb
nop
mov
xor
dec
enter
sub
xor
sub
roll
nop
xor
xchg
popa
or
and
in
mov
and
xor
and
jae
das
bound
sbb
dec
xor
mov
mov
in
nop
jne
push
push
out
rcrb
ret
sti
aam
fstl
add
or
and
std
pop
es
push
dec
add
nop
dec
push
push
call
pop
xchg
xchg
jo
xor
xor
adc
dec
bound
js
or
faddp
dec
fildl
ds
mov
add
xchg
out
jno
lret
fs
push
arpl
push
test
or
vmmcall
rol
pop
iret
sbb
or
xor
inc
aas
dec
leave
pop
rorl
pop
sarl
mov
mov
and
sbb
dec
popa
xor
enter
imul
or
or
xchg
cmp
sbb
adc
or
jg
mov
ss
push
stos
test
pop
or
cmp
stc
add
and
repz
in
push
hlt
dec
test
jl
inc
push
jge
mov
loope
orb
pusha
enter
xor
dec
inc
sbb
xor
or
dec
add
es
loopew
andl
jbe
mov
adc
outsl
and
sub
lret
sbb
dec
jp
dec
arpl
test
imul
outsl
sub
cmp
push
ret
or
mov
stos
or
add
in
cmp
pop
push
sbb
fisubrs
or
sbb
sbb
in
sbb
xor
insb
and
out
movsb
pop
mov
adc
mov
insl
ret
stos
jb
stos
test
sub
pop
xchg
sub
lods
rcr
and
rorb
ret
push
out
adc
push
inc
movsl
cmp
mov
inc
pop
dec
insb
push
mov
ret
jmp
xchg
push
push
sub
xor
push
xor
mov
xor
and
xchg
and
int3
loopne
sub
adc
leave
gs
or
adc
loop
cmp
jno
into
cmpsl
fdivs
jno
jae
ret
sbb
scas
mov
xchg
inc
mov
sbb
ds
inc
mov
cmp
adc
push
popa
pop
pop
movsl
rcrl
cmp
mov
fcompl
adc
xor
xchg
jo
inc
dec
push
and
adc
xchg
hlt
sub
adc
and
adc
adc
pop
jb
cmp
mov
mov
push
add
leave
int3
roll
nop
cmpsl
xchg
incb
test
push
cmpsl
scas
in
das
push
sbb
lret
and
js
js
inc
xor
gs
nop
stos
mov
lahf
test
push
sbbl
push
and
mov
inc
cs
lcall
rcrl
mov
subl
xchg
xor
lock
test
mov
inc
pop
inc
add
lea
mov
int
inc
loopne
push
jnp
pop
adc
jge
sub
sbb
arpl
or
push
mov
or
popa
add
jno
mov
cmp
sub
leave
mov
dec
dec
dec
dec
mov
loopne
mov
mov
inc
xchg
sub
cmp
sub
jb
mov
insb
faddl
or
sbb
mov
sub
sbb
inc
sub
and
popa
and
outsl
loopne
adc
adc
or
dec
mov
outsl
mov
inc
popa
subl
mov
pop
dec
cmp
jne
pop
sahf
add
sbb
imul
imul
pop
mov
dec
dec
pop
and
loope
dec
aam
inc
xchg
xchg
push
aam
sub
dec
lahf
push
test
xchg
dec
adc
cmp
xor
leave
cmp
insb
in
inc
push
jo
js
inc
push
cmp
mov
mov
cmp
push
mov
push
sbb
fs
or
fcompl
add
mov
loopne
push
adc
repnz
syscall
push
and
adcl
pusha
js
enter
push
push
push
pushw
xor
gs
xlat
pop
pop
cmovne
xchg
cltd
rclb
je
test
fsubr
adc
test
fcmove
cs
inc
jnp
pushf
pusha
insl
push
jo
inc
repz
daa
out
push
mov
jo
imul
ja
gs
aas
divb
outsl
and
push
popa
fs
jmp
inc
push
sbb
jbe
outsb
insl
sub
outsb
bound
js
sbb
arpl
pop
sub
mov
fdivs
cmpsl
ja
std
adc
xor
jmp
popf
fldcw
mov
gs
sub
stos
push
jbe
aas
push
mov
inc
push
jl
push
and
cld
sbb
sbb
inc
pop
cwtl
insb
jp
mov
ds
notl
dec
mov
sbb
inc
loopne,pn
leave
ja
sub
lock
js
clc
shlb
bound
jo
inc
jle
cmp
fwait
outsb
fldenv
push
lock
inc
jbe
lcall
xchg
jl
cwtl
lods
xchg
pop
cld
add
imul
or
ds
mov
js
or
push
lock
cs
dec
mov
and
jl,pt
aam
rorl
inc
rclb
cmovae
pusha
repz
je
imul
mov
sbb
mov
clc
push
lods
jge
in
dec
or
lods
pop
inc
out
inc
jbe
jle
adc
inc
je
dec
pop
jg
and
inc
pop
add
inc
outsl
mov
fwait
inc
mov
outsb
je
dec
ds
cmpsb
in
push
xchg
insb
xchg
push
cs
adc
sbb
ds
pop
loopne
imul
in
ja
rcrl
scas
xor
mov
fsubs
inc
test
adc
inc
dec
das
iret
xchg
jl
push
xchg
inc
adc
lahf
insb
aas
movsb
fists
popa
sub
je
lahf
adc
scas
cmp
jno
sub
and
jae
push
add
clc
pop
mov
xor
rolb
pop
mov
mov
adc
sub
cmp
xlat
adc
popf
fwait
sub
ret
jbe,pt
mov
cld
adc
push
mov
mov
xor
cs
out
and
xor
pop
loopne
insl
repnz
popa
dec
adc
dec
mov
lcall
cmp
call
cmp
add
adc
jmp
inc
fwait
inc
ss
int
and
pop
adc
sub
mov
and
jae
in
or
out
pop
jb
ret
in
popf
or
add
mov
js
mov
pusha
dec
push
mov
test
in
adc
test
push
inc
pop
jbe
aad
inc
fsubs
sbb
mov
adc
sbb
adc
sbb
sub
pop
sub
push
sbbl
popa
in
xchg
xorb
andl
popa
pop
mov
or
adc
ret
mov
aam
sbb
xor
nop
inc
add
rorb
mov
push
xlat
mov
add
aaa
mov
or
sbb
mov
repz
cmp
cmp
inc
pusha
loopne
shll
add
aaa
sub
je
push
and
inc
sub
add
jnp
and
pop
jae
and
sub
xor
inc
xor
in
decb
movsb
mov
nop
repnz
inc
dec
sub
xchg
and
mov
or
jge
push
outsl
sti
dec
cwtl
inc
mov
cmp
mov
je
mov
xor
es
sub
sub
fisubs
frstor
or
mov
nop
or
mov
sub
sbb
test
xchg
and
movsb
jb
test
js
popf
xchg
lret
xor
mov
pushf
add
dec
or
push
and
add
mov
mov
fdecstp
cmp
shlb
sti
jae
negl
push
or
mov
add
sbb
push
scas
pop
fs
test
xor
incl
call
out
jns
fnstcw
mov
mov
push
adc
dec
imull
ss
cmp
mov
mov
sbb
call
pop
pop
and
add
fisubrl
or
ja
cmpsl
sbb
sub
mov
loop
inc
jecxz
leave
cmp
adc
adc
js
add
outsb
pop
stc
jbe
xchg
xchg
mov
sbb
fnsave
and
roll
jo
outsb
inc
mov
rcrl
xor
or
jge
fsts
test
push
inc
push
jb
shl
jns
imul
pop
clc
out
sbb
dec
fnstenv
mov
dec
inc
fadds
or
or
pop
sbb
mov
ds
xchg
dec
pop
xchg
fsubrs
mov
in
clc
cwtl
loope
cmp
adc
or
sub
sub
adc
jns
addr16
sti
mov
sbb
cmp
aaa
mov
in
push
into
imulb
xor
push
outsb
push
js
push
xor
lea
inc
lock
fisubrl
or
mov
data16
leave
es
pusha
ds
pop
orb
outsl
pop
push
fsts
hlt
push
sbb
std
cld
jne
mov
xor
arpl
inc
lock
xchg
pop
and
outsl
inc
sbbb
mov
movl
sbb
push
add
jno
dec
lahf
jno
jl
int3
outsb
mov
or
fbld
jnp
cmp
sbb
sbb
dec
subl
dec
mov
inc
lahf
jno
push
call
mov
mov
and
aam
dec
sub
jge
and
dec
and
loop
pop
scas
movsb
xchg
mov
out
pusha
xchg
push
and
nop
add
imul
mov
outsl
mov
nop
orb
imul
shll
jecxz
xor
mov
shlb
lea
mov
lods
mov
enter
aaa
test
shl
adc
imul
jne
mov
inc
scas
push
push
add
push
push
push
cmpb
sbb
mov
jb
jno
mov
lcall
adc
jbe
rorl
repnz
lods
rclb
xchg
sbb
fistps
adc
dec
pop
push
idiv
repz
cmc
mov
push
xor
mov
jae
cmp
and
pop
mov
hlt
jbe
pavgb
lock
xchg
insb
add
push
movsb
fs
pop
mov
inc
pop
xchg
fildl
or
outsb
inc
outsb
sbb
pop
lds
fcomp
push
push
mov
inc
cmpb
add
adc
mov
pop
inc
movsb
adc
adc
mov
sbb
in
sbb
cmp
inc
sub
nop
lret
adc
pop
inc
aam
call
adc
inc
fwait
pop
aas
pusha
push
jo
and
leave
inc
orb
cwtl
pop
and
leave
mov
jb
shl
dec
pop
and
lock
mov
and
cs
xor
nop
mov
and
dec
shl
and
adc
inc
dec
cs
mov
mov
inc
mov
repnz
add
pop
leave
inc
xor
cltd
dec
pop
pusha
add
bnd
adc
dec
and
xchg
rolb
pushf
dec
xor
test
jmp
lea
xchg
sbb
add
and
int3
enter
popa
ret
enter
fcomp
fxch
loopne
jecxz
in
dec
xor
pop
xchg
add
lea
and
and
and
add
add
inc
add
add
movsb
xchg
fcoml
xor
insb
pusha
xchg
push
adc
sbbl
inc
pop
xchg
xchg
xchg
cmpsb
add
mov
mov
cmp
and
jnp
test
push
addb
aas
lcall
pop
es
js
repz
imul
mov
cmp
test
mov
iret
repz
loopne
lock
jns
cmpsl
stc
add
adc
and
jns
out
xor
inc
dec
sahf
out
sahf
push
pop
pusha
push
out
orb
or
and
inc
push
xchg
push
fs
gs
mov
and
loopne
sub
in
xchg
xchg
sbbl
mulb
xchg
shlb
ret
shlb
ret
addr16
ret
ret
lds
push
xchg
mov
or
adc
ds
repz
jecxz
adc
add
inc
add
and
dec
cmp
repz
push
cmp
repz
shl
lock
mov
push
or
xor
addr16
into
push
call
push
leave
outsb
mov
hlt
sub
push
lods
jbe
les
push
inc
sbb
mov
sbb
lcall
out
pusha
xchg
insb
push
sub
adcb
xor
rol
pop
add
dec
ret
imul
jg
and
hlt
jmp
mov
and
push
sbb
sub
cmpsl
mov
pop
xor
pop
iret
mov
push
push
call
adc
pop
push
mov
add
xor
jnp
aas
push
fdivrs
push
call
in
push
cld
cmpsb
lret
and
mov
testl
push
add
repz
or
add
repz
mov
cmp
repz
out
divl
sbb
push
adc
or
jns
out
lods
or
add
sarl
adc
sbb
daa
pop
iret
repz
sub
inc
push
push
sbb
fs
jl
fistps
nop
push
out
pop
xchg
mov
sahf
out
sahf
int3
add
out
push
jl
sub
sahf
out
sahf
add
repz
jnp
push
sub
sbbb
iret
repz
xor
cmp
repz
mov
mov
repz
repz
mov
out
or
mov
imul
adc
add
add
jbe
outsb
jg
imull
scas
sub
or
orl
out
pop
punpckhdq
pop
bound
add
jle
imul
jbe
sbb
out
ret
fwait
idivb
fimuls
aad
sbb
inc
mov
fiadds
aaa
adc
adc
cli
cli
xchg
shl
cli
sbb
mov
in
lock
sub
push
std
cmc
out
lahf
popa
xlat
in
push
pushf
cs
clc
fcoml
add
xor
cli
jmp
mov
sbb
cmp
movsb
push
clc
xor
out
scas
aam
cmc
mov
cmp
push
lock
loopne
aam
out
aad
pmaxub
cmpsb
pmulhuw
xchg
cmpsl
xchg
call
cmc
incl
cwtl
pop
mov
cmp
enter
jbe
cli
int
por
jg
clc
cltd
pop
inc
aad
fidivrl
adc
aad
push
jl
mov
xchg
subb
pop
sahf
push
cli
xorb
repz
pop
inc
mov
addr16
push
fcoml
mov
mov
or
lahf
mov
outsb
dec
mov
out
loop
lock
inc
cmpsb
iret
lock
mov
and
add
cld
push
mov
incb
scas
jge
jmp
mov
out
call
mov
mov
cmpxchg
and
mov
push
lods
mov
repz
cld
nop
out
nop
dec
fcomps
aam
clc
stc
addr16
push
mov
inc
fisubl
and
jl
je
imul
jo
add
inc
andl
adc
fdivrs
push
data16
add
pop
cmp
jno
in
adc
in
mov
mov
push
imul
mov
mov
movsb
pop
sbb
sbb
sahf
psubd
loopne
mov
fisubrl
mov
icebp
push
scas
out
cs
push
loopne
pusha
push
lods
fdiv
stos
clc
sub
out
nop
push
fs
in
mov
push
add
push
dec
mov
scas
ljmp
loopne
or
jge
sub
mov
jle
fucomi
ds
imul
adc
add
push
sbb
jo
pop
into
sarl
push
shll
ficomps
mov
lcall
sbb
push
nop
cmp
cwtl
sahf
mov
add
push
ds
cmp
push
cltd
xor
nop
push
out
test
mov
jnp
mov
rorb
adc
jo
stos
clc
sub
push
mov
loop
push
xlat
ljmp
add
push
adc
jl
mov
mov
out
subb
aas
ror
jle
fidivl
sahf
push
frstor
mov
adc
dec
imul
scas
push
mov
fdivrp
push
jnp
outsb
cmp
push
ja
cltd
scas
aas
push
shl
cmc
cmp
mov
inc
cmpb
fldenv
push
push
jo
or
push
hlt
push
cmc
add
fistpll
adc
push
imul
aas
sti
xor
cmp
dec
dec
scas
push
out
addr16
add
push
popa
and
dec
jae
das
repz
or
pop
push
push
and
jg
add
dec
jg
mov
repz
out
cld
or
sbb
mov
dec
pop
xor
cmp
repz
pop
pusha
push
iret
js
push
push
fiadds
bound
das
jle
rorb
add
sbb
outsb
repnz
std
add
adc
neg
push
inc
shl
fcoms
sub
or
adc
std
pop
or
adc
imul
test
and
pusha
dec
add
xorl
imul
pop
add
outsb
inc
push
iret
or
or
add
push
movsl
jns
mov
pop
add
or
nop
pop
hlt
mov
out
mov
std
sbb
sub
out
cli
cmp
dec
clc
out
sahf
out
divl
sahf
out
sahf
cmc
pushf
hlt
mov
sarb
jns
aam
call
out
out
adc
iret
in
xor
dec
jmp
mov
insb
addb
or
ficoml
lds
aad
jne
lods
ret
adc
xor
pop
mov
and
inc
or
or
add
repz
sti
or
push
xor
push
fs
repz
jo
cwtl
lods
mov
cmp
in
add
sbb
sahf
out
sub
dec
pop
push
js
movsb
mov
out
pop
loop
and
mov
adc
xchg
pop
adc
mov
and
jae
mov
sub
test
pop
pop
cmp
jnp
int
xchg
stc
mov
mov
sti
cld
std
iret
repz
incb
add
cmpb
repz
addl
iret
jg
outsl
add
pop
pop
hlt
mov
addr16
jl,pn
push
push
push
mov
sahf
mov
fcom
enter
or
cmp
jne
and
push
fwait
or
insl
dec
add
add
add
insb
dec
jge
aad
cmpsl
es
jb
and
rcrb
mov
add
gs
cmp
dec
ljmp
or
sbb
inc
dec
mov
push
sbb
icebp
xchg
ds
xor
into
pop
and
addr16
xor
outsl
shll
andl
jecxz
add
pop
jb
add
add
push
jb
add
fwait
pop
pop
pop
repz
orb
inc
mov
add
out
pop
add
add
or
sahf
out
adc
and
inc
sub
shrb
xchg
add
dec
dec
dec
or
or
fisttpll
dec
or
or
sarb
push
add
adc
fucomi
jns
push
pop
das
jo
jl
daa
iret
sti
add
and
lods
add
mov
in
in
inc
loopne
aas
pop
cmp
leave
sbb
xchg
out
cmp
rclb
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
mov
add
idivb
push
unpcklps
ljmp
in
in
in
xor
or
leave
fs
pop
mov
outsb
incl
aas
pop
leave
repz
pushf
sbb
push
push
jo
leave
leave
jl
fdivrs
pop
pushf
pushf
pushf
pop
ljmp
or
pushf
pushf
pushf
mov
pushf
pushf
pushf
pushf
push
adc
pushf
jb
les
pushf
pushf
pushf
pushf
bound
movsb
add
in
pushf
pushf
pushf
pushf
pop
sbb
jp
aam
pushf
pushf
pushf
pushf
push
mov
pushf
pushf
pushf
pushf
mov
add
push
push
rolb
leave
leave
leave
xor
int3
leave
leave
leave
leave
pcmpgtd
lods
leave
leave
leave
leave
push
xchg
leave
leave
leave
leave
or
pushf
leave
leave
leave
leave
arpl
fdivl
aas
outsb
cs
dec
outsb
aas
mov
ljmp
call
cmp
cmp
mov
xchg
xchg
xchg
popa
and
xchg
addl
cmp
xchg
jns
mov
imul
mov
mov
xchg
or
repnz
adc
sbb
pushl
xchg
xchg
or
lret
xchg
xchg
xchg
xchg
stos
add
mov
lcall
fidivrl
cmp
mov
or
cmp
lea
cs
popa
iret
adc
ret
jae
inc
dec
dec
xor
arpl
push
rcr
leave
and
pushf
pop
enter
pop
sbb
leave
test
pop
enter
mov
pushf
pushf
pushf
or
leave
test
ja
and
daa
aaa
into
addr16
jb
daa
scas
pop
xchg
pop
jb
inc
out
pop
pop
jb
and
sahf
jg
dec
outsb
pop
jb
outsl
aas
das
mov
pop
dec
adc
inc
push
inc
mov
loope
and
leave
inc
shll
icebp
leave
adc
inc
xor
dec
and
mov
stc
lds
in
leave
inc
xor
dec
and
int
inc
xor
and
popf
fldl
xor
leave
ret
mov
xchg
xchg
rcll
repz
sub
cltd
dec
jmp
dec
es
mov
mov
sti
es
mov
xchg
and
mov
cltd
dec
es
out
es
mov
mov
incl
sahf
aaa
xchg
push
adc
imul
pop
add
repnz
out
pop
inc
jg
push
pop
push
jns
cmpsb
add
and
or
dec
xchg
out
add
nop
xchg
inc
dec
sbb
pop
fdivs
add
sbb
fs
xor
or
push
leave
insb
inc
and
inc
into
fstps
jns
mov
push
cmp
xor
ret
adc
inc
sbb
push
sahf
outsl
jne
addr16
mov
bound
cmpsl
and
daa
mov
jae
mov
pop
and
inc
and
sbb
gs
push
das
inc
lea
sbb
mov
lods
les
push
or
andb
dec
sub
push
dec
shll
add
xor
shll
or
mov
mov
mov
roll
jo
and
xorl
pusha
add
lret
imul
fnstenv
mov
xor
pop
lea
mov
sub
add
clts
cmp
jns
pop
aas
jg
inc
clc
cmp
repz
jg
adc
adc
add
mov
and
les
fiaddl
outsb
pop
adc
sbb
sti
adc
adc
xchg
add
sbbb
mov
mov
jae
xor
xor
xchg
inc
cmp
cmp
push
gs
in
adc
mov
and
sbb
sbb
imul
dec
sbb
mov
rorb
xor
int
fcomps
fmull
enter
insl
nop
adc
mov
std
xchg
adc
cmp
mov
jecxz
dec
mov
adc
rsm
push
cld
xchg
cmpsb
jo
repz
cli
hlt
or
incb
loopne
fisubl
mov
lods
es
enter
mov
jnp
push
pop
je
mov
scas
adc
pop
cmpsl
mov
push
pop
out
jne
popa
icebp
sub
push
push
inc
loop
ss
xor
fwait
sub
lret
sub
movsl
int3
ss
mov
nop
xchg
mov
cmpsl
xor
cmpl
rolb
rcrb
push
imul
fwait
jne
and
mov
xor
outsl
repnz
mov
xchg
add
pusha
xor
cmp
jnp
cmpsb
je
lock
inc
pop
imul
cs
push
sbb
push
sbb
lock
sbb
rorb
test
ja
mov
push
out
mov
nop
fcoml
je
sub
mov
push
pusha
sub
rorb
int
cmpsl
sti
inc
rcll
inc
inc
rorb
das
dec
iret
mov
push
das
ja
jg
or
add
unpcklps
sbb
arpl
mov
rcr
jnp
or
jge
dec
fimull
dec
dec
lods
mov
cs
and
dec
mov
cmp
scas
cmp
pushf
or
fiadds
fldenv
xchg
push
repnz
jecxz
and
add
lock
sub
or
add
fsubrl
jb
je
daa
enter
fiaddl
pop
iret
imul
adc
in
xchg
leave
mov
test
call
sti
push
sub
insb
and
in
imul
int3
movsl
rclb
inc
loopne
sbb
arpl
sub
dec
lcall
xchg
xchg
or
fsubrs
insl
gs
xor
fisubs
fwait
adc
in
sub
enter
pop
ja
outsb
insl
popa
sbb
sarb
lret
sub
enter
loope
cmpsb
jbe
and
mov
jmp
and
insb
loopne
mov
pop
jmp
and
nop
add
inc
pop
push
iret
repz
sbb
xor
dec
pop
cmp
repz
jo
mov
lods
mov
ret
into
faddl
enter
pop
outsl
imul
in
jecxz
ret
and
fists
push
jbe
das
mov
repz
xchg
out
push
sub
pop
cmp
repz
test
iret
repz
aam
add
and
jns
out
dec
pop
jo
lahf
out
sahf
mov
add
cmp
repz
sbb
dec
pusha
repz
repz
mov
ds
loopne
or
movb
push
repz
repz
cwtl
movsb
out
cmp
mov
cltd
sahf
out
sahf
sub
insb
adcb
mov
cmp
repz
sbb
dec
pop
iret
repz
je
test
shl
jns
cmp
sub
dec
out
sahf
out
je
pushf
mov
repz
rcl
add
adc
iret
repz
push
fs
stc
cmp
repz
fsubr
add
or
cmp
sahf
out
sahf
jl
test
fsubr
cmp
sarl
sbb
dec
fs
repz
test
int3
cmp
ds
loopne
add
pop
push
xor
repz
repz
lods
out
ds
fdiv
add
sbb
out
sahf
cmp
js
mov
mov
fsubr
pop
or
push
cmp
mov
out
pushf
mov
shr
repz
repz
iret
repz
push
rcrb
clc
or
sbb
sahf
out
dec
pusha
jo
mov
mov
fdiv
add
jns
out
push
sub
fs
sahf
out
test
in
iret
repz
adc
nop
ds
repz
int3
loopne
adc
jns
out
xor
pusha
test
mov
in
add
sahf
out
inc
push
insb
jl
lock
out
rcl
clc
cmpsl
iret
repz
and
dec
fs
repz
mov
repz
cld
adc
out
dec
pusha
js
sahf
out
sahf
mov
cld
out
fidivrs
stos
into
push
xor
push
sahf
out
sahf
insb
andb
repz
add
cmp
repz
jo
test
cmp
ds
fdiv
or
cmp
repz
push
stc
cmp
enter
lods
and
dec
pusha
je
cwtl
jl
out
test
aam
add
adc
inc
push
fs
repz
sbbb
out
or
jns
out
js
cwtl
movsb
shl
lahf
out
in
add
sbb
repz
inc
pop
jo
cwtl
lods
lcall
or
jns
push
adcb
aam
lock
jns
out
mov
sub
pop
je
jns
out
cwtl
lods
fdivrl
ja
lock
mov
cmp
jns
out
xchg
test
fmul
repz
in
add
adc
cmp
cmp
repz
js
cwtl
lods
stc
cmp
repz
cld
sbb
out
sahf
cmpsl
sub
push
pop
je
out
sahf
test
dec
repz
add
sbb
repz
repz
jo
nop
pushf
iret
repz
mov
aam
hlt
or
adc
cmp
jns
out
js
test
int3
sahf
ja
out
lock
pushw
and
jns
out
dec
pop
insb
adcb
mov
fdiv
iret
repz
or
insb
cmp
repz
nop
mov
jecxz
fdiv
mov
out
sahf
out
dec
pusha
jo
sahf
out
sahf
cwtl
lods
mov
iret
sarl
sbb
inc
push
repz
repz
mov
iret
enter
adc
sahf
out
sahf
sub
dec
push
jo
jns
out
nop
test
aam
repz
out
or
sbb
cmp
repz
push
fs
xchg
movsb
ds
repz
rcl
hlt
mov
mov
inc
out
sahf
out
fs
xchg
sahf
out
sahf
movsb
mov
shl
hlt
cmp
sarl
adc
dec
repz
repz
insb
jl
mov
mov
int3
loopne
iret
repz
and
or
xor
cmp
repz
je
nop
mov
mov
aam
add
out
sahf
cmpsl
sbb
cmp
sahf
out
sahf
je
pushf
mov
shl
popf
idivl
hlt
shrl
sub
inc
pop
push
out
movsb
mov
fdiv
repz
repz
adc
push
iret
repz
insb
test
stc
cmp
adc
sub
pop
jns
out
je
pushf
mov
sahf
ja
out
in
add
pop
push
sub
sahf
out
push
fs
mov
mov
in
or
iret
repz
sbb
cmp
pusha
jo
iret
repz
nop
mov
iret
repz
adc
and
out
sahf
out
fs
movsb
int
jns
mov
enter
repz
dec
push
iret
repz
leave
mov
push
sub
push
fs
iret
repz
test
aam
out
lcall
push
sahf
out
sahf
pusha
mov
repz
add
sbb
cmp
cmp
repz
pusha
jo
xchg
mov
cmp
movsb
mov
iret
repz
adc
dec
push
cmp
mov
lcall
adc
out
sahf
out
push
push
jns
movsb
mov
or
cmp
cmp
repz
mov
out
hlt
adc
xor
repz
out
test
in
ror
repz
and
mov
cmp
or
sub
jns
out
jl
mov
lock
repz
and
push
push
jl
movsb
mov
sti
cmp
or
cmpsb
push
cmp
iret
repz
fs
mov
call
adc
adc
xor
cmp
repz
je
movsb
mov
aam
add
sbb
out
sahf
out
test
ror
out
sahf
fsub
lock
or
mov
push
and
inc
push
inc
loopne
sahf
pop
push
fisubrl
pop
movsb
xor
mov
mov
repz
in
clc
add
adc
out
sbb
xor
dec
pushf
jge
out
fs
xor
inc
xlat
xor
mov
scas
dec
ret
cs
xor
ret
mov
or
and
sub
xor
ficomps
sbb
inc
xor
xlat
push
test
cwtl
push
push
pop
adc
mov
xchg
mov
lahf
jnp
in
push
fcomps
outsb
pop
inc
ss
mov
lea
mov
lock
pop
dec
loop
cmpsl
push
sub
push
nop
data16
fs
dec
call
imull
mov
js
aam
negl
push
pusha
ror
out
push
dec
or
push
scas
mov
jbe
js
div
pop
xchg
mov
or
clc
faddp
jnp
push
jo
dec
orb
cwtl
push
sub
jnp
imull
je
add
push
fcompl
inc
jle
fwait
adc
int3
dec
js
shrb
ja
or
mov
data16
pushf
inc
jge
mov
push
clc
ss
xchg
neg
scas
mov
push
sub
fcomps
dec
out
jp
sarb
ss
sbb
cmpsb
fmuls
data16
sub
testl
jbe
jnp
scas
xor
mov
push
rorb
push
clc
into
fadds
inc
cwtl
es
rcrl
nop
dec
jecxz
daa
movsl
cld
jbe
xchg
push
ss
adc
nop
mov
ss
dec
rorb
cmp
inc
mov
sub
enter
pusha
push
and
sub
inc
inc
js
addl
jnp
jnp
xchg
mov
xchg
jl
addl
push
cmp
push
mov
sbb
xchg
dec
scas
mov
push
out
jo,pt
cmp
push
sbb
fs
mov
pop
sub
xor
setle
cmp
cmp
sbb
or
push
pusha
les
jns
adc
cs
cmp
inc
push
sahf
rcr
mov
push
sub
mov
dec
je
inc
movsb
imul
sbb
loopne
cmp
mov
cmp
mov
in
or
ja
cmp
ficoms
loopne
mov
adc
int3
es
push
fdivp
dec
lods
jle
into
add
out
cmp
mov
out
jnp
and
inc
out
xor
sarl
movsb
je,pt
ficomps
mov
mov
pop
out
mov
out
movsb
into
aam
adc
lock
sarl
pop
push
mov
loopne
inc
cli
js
cld
adcb
out
xor
scas
insb
insb
or
jmp
dec
push
and
loope
adc
add
mov
pop
shl
mov
jl,pt
pop
jnp
jnp
pop
mov
ds
ss
push
and
and
repz
pop
mov
in
ljmp
out
mov
cmp
dec
sahf
dec
ss
cld
mov
daa
push
shlb
out
push
push
pusha
pushf
push
mov
clc
sub
sti
add
push
sbb
nop
out
imul
mov
push
jp
pop
push
jnp
out
cmp
cs
mov
jbe
push
sahf
ja
ficoms
into
test
les
mov
cmp
dec
or
push
mov
rcrb
lods
mov
inc
out
cld
pusha
fidivrs
pop
push
fsubr
jl
pusha
into
inc
ss
fiadds
mov
cmp
push
inc
jbe
jae
out
pop
push
mov
dec
push
or
fidivs
xchg
ss
mov
ficoms
pop
jo
out
cmp
dec
mov
je
inc
push
dec
xor
xchg
push
out
mov
mov
push
sub
shlb
add
in
push
inc
sbb
cs
faddl
add
cmp
shl
enter
adc
test
jo
cmp
jp
xor
enter
lds
mov
push
mov
outsb
aam
out
push
pop
shrb
ficomps
mov
ficomps
push
jge
xchg
fsubs
mov
pusha
es
out
ds
push
inc
push
add
push
incl
pop
lret
mov
sub
pop
cmovle
call
jle
sub
and
imul
sbb
test
add
subl
adc
jno
adc
flds
adc
xchg
adc
or
and
add
add
subl
mov
add
lock
inc
inc
push
dec
push
mov
add
pop
inc
sbb
inc
out
jnp
in
pop
dec
pop
push
and
pop
dec
aaa
jnp
into
mov
pop
dec
add
sub
sbb
negb
cmp
fucomp
mov
add
dec
add
mov
inc
dec
push
inc
cmp
jnp
push
xchg
pop
push
mov
push
scas
dec
dec
inc
xchg
push
sbb
dec
xor
or
cmp
xor
dec
push
pop
push
aaa
pusha
neg
inc
push
xchg
or
iret
stos
mov
inc
or
dec
mov
cmp
push
dec
push
adcl
loopne
sahf
dec
inc
cmp
pop
jnp
add
jb
push
mov
fsubrp
mov
cmp
and
add
aaa
adc
or
incb
fldenv
add
lock
ror
sbb
xchg
nop
testl
sbb
sar
faddl
das
pop
mov
clc
aas
push
pop
lcall
dec
sahf
loopne
cld
add
pop
fs
jns
or
push
aas
jg
pop
xor
add
inc
into
push
xchg
jl
add
test
or
fnop
push
mov
dec
add
int
push
add
notb
leave
jg
add
push
repz
int
sbb
fwait
neg
out
fisubl
cmpsl
loope
cmp
add
movsl
loope
pop
sbb
pop
push
aas
fcmovnbe
fidivrs
xchg
addr16
lock
and
pushl
push
pop
std
fnstsw
add
rol
insb
jl
data16
iret
repz
jbe
jg
sbbb
cmp
filds
cmpsb
jo
int3
sbb
pop
pop
mov
lock
sahf
push
xor
adc
cltd
pop
popf
push
xchg
jbe
es
add
xor
out
lret
aas
jns
rcll
add
or
cmp
jbe
lret
comiss
push
inc
out
fimuls
outsb
daa
shll
ds
mov
pop
std
clc
lock
sbb
insb
loopne
rcrb
dec
add
jnp
pop
push
inc
pop
outsl
clc
aam
mov
pusha
cmpsl
pop
adc
lahf
add
xlat
aaa
fwait
in
mov
sbb
mov
lcall
pop
adc
add
push
int3
imul
adc
adc
imul
pop
cs
add
ret
sub
xchg
cmp
cld
push
cmp
fmull
aad
cs
pop
cltd
or
jno
push
push
aaa
cs
push
or
insb
fisttpl
push
sbb
push
sub
inc
add
mov
add
inc
shll
xor
sbb
push
push
sbb
jo
pusha
outsl
aas
lcall
roll
lock
fcompl
jl
sbb
push
sbb
insl
mov
pop
or
test
push
shl
test
xchg
mov
orl
movsb
mov
or
pop
add
rolb
and
add
or
add
xor
cmp
mov
cmp
xorl
mov
daa
sbb
cmp
fcompp
repz
and
daa
and
sub
lahf
and
daa
and
iret
cmp
cmp
clc
dec
push
mov
push
mov
push
in
sti
ficoms
lret
xor
daa
xchg
aaa
push
sbb
mov
dec
inc
daa
fdivl
outsl
mov
ja
push
pushf
jmp
jmp
clc
push
cmc
sbb
mov
sbb
mov
sbb
jl
leave
add
inc
cmp
inc
and
mov
xor
and
xor
sbb
inc
push
neg
imul
daa
dec
sub
aas
push
es
cmp
xor
mov
dec
sub
loope
jnp
pop
aas
jns
dec
and
mov
es
and
push
pop
in
lods
frstor
and
and
cmp
fsub
mov
jmp
pop
push
fldenv
xor
push
mov
jnp
xlat
push
lret
push
xchg
push
mov
or
push
cmpxchg8b
daa
dec
daa
push
mov
repz
sub
jae
mov
push
xchg
mov
jecxz
adc
xchg
inc
inc
inc
or
data16
push
mov
scas
dec
push
pop
es
repnz
daa
inc
aad
push
in
mov
push
dec
dec
pop
daa
mov
and
xchg
add
push
incb
in
rolb
add
clc
daa
add
int
jecxz
add
mov
in
fdivs
mov
test
data16
add
inc
arpl
daa
ds
shll
jne
jb
xor
arpl
ror
in
sbbl
sub
out
cmp
dec
fs
cmp
ror
insl
push
fbld
fnstcw
aas
daa
dec
lret
fdivrl
pusha
ljmp
hlt
sahf
insl
es
daa
dec
add
sub
jle
xor
in
repz
sub
jecxz
test
orb
or
add
xor
in
inc
xchg
fdiv
loopne
sbb
or
stos
movsb
sub
jae
out
adc
daa
xor
fcmovne
cmp
daa
aas
das
es
mov
jg
in
push
repnz
inc
sub
push
daa
xor
mov
stos
and
push
sub
rcll
pop
outsb
data16
inc
push
addr16
shlb
mov
sbb
and
je
stos
inc
aas
call
mov
daa
fsubrs
sbb
stos
cmp
fldenv
mov
pop
xor
dec
leave
and
xchg
daa
mov
xor
insl
mov
cltd
xlat
sbbb
and
jecxz
cmove
or
xor
sub
adc
cltd
sbb
je
add
xchg
sbb
dec
sbb
addr16
andl
fmulp
out
push
jl
and
clc
or
sbb
dec
xchg
xchg
fcoms
daa
mov
fidivrs
xor
dec
xor
dec
daa
sbb
mov
daa
clc
dec
mov
dec
sarb
dec
jl
add
jne
pop
dec
rorl
pop
filds
daa
push
pushf
lahf
mov
dec
ret
in
pop
cltd
cltd
call
jb
or
imul
aas
testl
aaa
movsb
aaa
adc
sbb
xchg
lret
dec
arpl
dec
iret
jb
cwtl
adc
outsl
inc
repnz
add
ja
inc
cwtl
sbb
or
shlb
xor
aas
push
mov
stos
adc
pop
pushl
inc
pusha
and
cmp
dec
mov
and
ds
sbb
scas
orl
add
je
mov
pushf
mov
fcmovne
lock
cltd
cmpsl
aaa
daa
and
cmpsl
test
stos
sub
aaa
fstl
insl
mov
fnstenv
lds
push
and
loop
and
sbb
fnsave
push
in
repnz
daa
and
jae
jmp
xchg
add
inc
js
aad
lds
jmp
or
and
pop
add
bnd
ss
add
emms
repnz
add
push
jo
pop
push
pop
jg
sahf
jne
mov
add
pop
push
push
push
popa
mov
adc
js
out
cmp
add
sti
add
fdiv
or
mov
xchg
shlb
or
add
adcb
mov
repz
ja
jo
ud2
jnp
cmp
or
fldcw
mov
lock
shll
add
mov
add
in
jmp
sahf
movq
testl
mov
push
out
add
aas
or
dec
add
xchg
aam
iret
pop
mov
mov
outsl
aas
sub
aas
push
and
pop
lock
pop
cld
int3
iret
js
sbb
pop
or
outsl
push
andl
jo
mov
in
mov
mov
js
aas
jo
add
sub
xor
addl
mov
or
add
pop
movsb
mov
or
sub
fs
adc
and
mov
and
jo
add
ds
cwtl
adc
punpcklbw
pushf
jg
out
push
push
and
mov
daa
inc
cli
and
cmp
outsl
push
imul
notl
outsb
and
or
jbe
insb
adc
or
sbb
add
jo
jns
mov
jnp
inc
push
fs
pop
push
outsl
ffree
repz
arpl
ss
dec
mov
add
insb
and
insl
mov
dec
jne
xchg
jnp
push
push
outsl
jo
jle
push
add
inc
add
xor
cmp
ret
mov
idivl
cmpsl
push
jb
outsl
push
outsl
inc
mov
fwait
jno
jae
insl
adc
mov
jb
imul
addl
jae
sbb
cmp
inc
cmp
loope
pop
xchg
popa
jb
dec
outsb
scas
arpl
aaa
insb
mov
mov
into
loopne
fisubs
jns
addr16
fistps
xchg
mov
jae
mov
add
cmpsl
fists
pop
fstpt
inc
insb
jecxz
data16
js
data16
mov
rorl
xchg
add
push
inc
push
gs
pop
sub
sub
ret
outsl
cmp
faddl
inc
mov
mov
sub
outsl
lcall
inc
insb
lahf
inc
jnp
mov
sbb
xchg
push
pop
hlt
loope
shll
or
xchg
mov
negb
inc
push
outsl
mov
arpl
inc
xchg
insb
ja
pop
push
adc
mov
outsl
cmpsb
leave
shrl
xor
gs
mov
push
inc
lock
adc
fidivs
lcall
pop
and
sbb
dec
mov
sub
insl
inc
addr16
js
gs
pop
add
das
adc
cmpsl
mov
scas
dec
inc
push
arpl
mov
push
xchg
daa
jg
push
or
out
cmp
bound
or
mov
push
cmp
clc
cmp
outsb
outsb
inc
mov
adc
push
out
sub
bound
adc
stos
inc
jae
das
pop
xchg
xchg
stos
les
insl
ret
cmp
fdiv
icebp
cmpsl
mov
lret
popa
mov
ret
jo
imul
mov
mov
sub
and
sub
cmpsb
dec
jnp
mov
mov
rol
or
das
fiadds
mov
jb
popa
jmp
outsb
xor
jecxz
or
mov
sbb
or
addb
inc
shr
jecxz
clc
daa
imul
add
add
stos
fs
push
fdivl
iret
fwait
fs
add
add
sub
call
shl
xlat
mov
fistps
xor
xlat
and
pop
imul
test
push
and
and
pop
arpl
xor
imul
mov
xor
pop
pop
ret
xor
push
subl
mov
aaa
cmp
ds
push
dec
adc
imul
pop
inc
outsb
and
pop
push
adc
scas
adc
push
data16
addps
xlat
cli
dec
mov
jo
xor
addl
cwtl
je
insl
sti
add
outsb
jnp
inc
jnp
aaa
jns
pop
push
jo
fisttpl
jnp
push
sbb
inc
xchg
sbb
dec
in
sub
push
inc
adc
add
push
addr16
roll
mov
mov
fildll
jl
mov
inc
popl
gs
aad
mov
ljmp
mov
es
roll
addr16
push
push
sub
sbb
ja
repz
fsubrl
scas
dec
aad
push
xlat
jb
sub
jne
popf
inc
inc
sub
popf
cmp
loopne
inc
inc
jae
pop
xor
icebp
mov
jnp
cmp
andb
mov
lahf
and
push
jecxz
push
adcb
leave
adc
sbb
fistl
shlb
sbb
jae
and
inc
sbb
xchg
adc
sbb
mov
cwtl
mov
cmp
sbb
rcll
add
popa
mov
add
push
shrb
dec
sarb
and
int3
je
outsb
sbb
adc
mov
cmp
lahf
lret
xor
data16
dec
pcmpgtb
adc
and
je
pusha
add
das
arpl
outsb
inc
outsl
stos
jbe
inc
mov
out
or
insl
adc
dec
add
pop
jp
pop
clc
iret
jnp
andl
jecxz
jae
pop
sbb
and
mov
imul
push
or
sbb
push
mov
shll
and
out
mov
sub
adcl
pop
mov
aad
xlat
arpl
mov
lret
out
rolb
cmp
insb
sti
adc
imull
subb
lret
and
scas
cmp
jae
adc
insl
nopl
xor
push
xchg
je
pop
outsb
sub
ret
pop
adc
test
insl
or
xcrypt-cbc
cmpsl
push
lock
adc
push
mov
jl
dec
xchg
jae
jo
dec
test
repz
test
dec
shll
sbb
xor
jmp
ja
les
push
adc
addr16
push
rcrl
dec
outsl
xchg
cmovnp
outsl
cvtps2pi
xor
aas
ret
inc
test
stos
mov
fldt
nop
mov
dec
cmp
pop
movsb
jnp
xchg
stos
ja
mov
pop
mov
inc
push
jo
push
test
push
xlat
pop
jg
xor
arpl
jae
cmpsb
pusha
sarb
orb
add
adc
pusha
jae
pop
sbb
leave
movsb
add
or
aam
xchg
test
mov
inc
stos
btc
xor
cmp
je
insl
fwait
inc
jge
pop
xchg
je
clc
push
pusha
xlat
imul
jae
popf
out
cmpsl
insl
adc
movsb
xorl
popa
mov
arpl
outsl
pop
pop
pusha
sub
inc
filds
pop
loop
out
outsb
ja
push
mov
es
or
mov
or
mov
xchg
or
inc
add
outsb
outsb
jp
notl
xorb
jbe
push
or
pop
jmp
pop
and
or
push
and
pop
adcl
hlt
fnsave
scas
adc
daa
push
and
mov
push
sbb
cmp
inc
and
cmpsl
stos
insl
push
sub
movsb
outsb
adc
fwait
jle
outsb
aam
push
ret
mov
pop
movsl
ja
out
inc
rorb
jl
xchg
js
iret
and
jo
and
aas
fs
gs
dec
arpl
ficoml
popa
xor
push
push
cmp
adc
test
arpl
jae
adc
lret
imul
xor
or
push
sub
push
sahf
pop
push
lods
xchg
push
popa
and
mov
outsl
cmp
adc
add
lcall
inc
pop
aad
jecxz
pusha
test
mov
pop
push
mov
mov
cmpsl
push
mov
fs
addr16
jne
jo
addr16
cs
sbbl
jo
cmp
inc
jmp
iret
xchg
mov
mov
mov
insl
mov
dec
push
push
mov
add
push
push
adc
ja
inc
dec
stos
push
fidivrs
sbb
dec
sahf
jle
push
jge
sub
push
ja
jnp
outsl
dec
cmp
and
fstpl
outsl
sub
out
push
add
sub
or
pop
sbb
mov
mov
out
ret
stos
add
push
sub
add
shlb
lret
sbb
or
out
jns
es
sbb
jo
xlat
sbb
mov
sub
or
sub
imull
pop
addb
sub
iret
sub
sub
dec
pop
xor
test
imul
mov
mov
or
mov
outsb
aad
pop
inc
mov
xchg
je
mov
pop
mov
je
jo
push
out
or
sub
out
push
ja
ret
push
ja
rclb
mov
pusha
dec
push
and
adc
mov
mov
inc
ret
imul
push
in
mov
xchg
or
or
bound
pop
or
data16
mov
lret
mov
pop
ret
divl
imul
mov
push
pop
push
push
and
cmp
out
shll
lahf
outsb
seta
sbb
lret
mov
and
sub
ret
jmp
pop
jp
fildl
sub
or
call
sub
sbb
mov
daa
dec
out
and
sbb
test
rcll
cmpsl
ss
adc
dec
mov
inc
cmpsb
js
push
mov
mov
pop
es
ja
mov
mov
inc
cli
sub
jo
pusha
lret
cmp
rcll
pop
mov
out
pop
push
mov
jo
add
push
cli
jg
or
xchg
mov
les
fimuls
mov
xor
add
cld
xchg
outsl
dec
xor
dec
stos
or
add
adc
mov
je
sub
sti
xlat
pop
cs
test
push
daa
rcrl
andl
data16
pop
inc
push
aas
shlb
xchg
pop
mov
in
movsb
pop
and
sub
fistpll
adc
rorb
lret
and
mov
insb
addr16
jo
out
mov
push
mov
roll
xor
pop
outsl
xlat
pop
orl
adc
mov
push
jecxz
jae
mov
sub
arpl
adc
xchg
rorl
and
mov
arpl
push
push
subb
jb
fwait
or
push
jg
rorl
arpl
add
rorb
push
aaa
push
ret
jmp
stos
mov
and
fmuls
pop
sbb
inc
push
ja
stos
add
push
pop
xchg
or
cmp
movzwl
mov
cmpsl
push
sub
mov
inc
popl
repz
pop
sub
insl
push
rcll
mov
jbe
push
outsl
cmpsl
scas
mov
xor
mov
cs
adc
ficoml
test
out
adc
mov
mov
xlat
pop
sub
test
adc
pop
aam
test
dec
push
push
addb
xlat
rolb
jmp
imul
cmp
sbb
inc
out
xchg
pop
test
push
lea
and
pop
popa
jecxz
pop
add
sbb
and
mov
arpl
lcall
lds
cwtl
sbb
xchg
mov
test
cmpsl
sbb
inc
inc
inc
dec
subl
jo
pusha
add
addr16
data16
cmp
adc
sar
inc
nop
adc
push
jns
faddp
sbb
cmpb
push
cmp
out
jae
mov
rcl
ret
pop
in
repz
jno
cmp
pop
push
movlps
pop
insb
ljmp
mov
or
jmp
adc
push
imull
test
jne
jo
mov
mov
and
arpl
pop
daa
push
jo
inc
and
insb
inc
adc
fnsave
shrl
imul
inc
cwtl
bound
addr16
or
pop
jmp
dec
daa
insl
mov
push
jmp
bound
or
call
pop
xor
sbb
add
xor
push
mov
stos
mov
jp
ds
push
ja
jp
jecxz
adc
inc
adc
push
fwait
mov
repz
jbe
sbb
xchg
or
mov
xchg
push
outsb
fstpt
iret
inc
and
and
fs
push
scas
mov
negl
sbb
popa
jnp
fimull
dec
sti
xor
jbe
arpl
mull
dec
lahf
jne
mov
mov
xchg
inc
data16
cmp
incl
aaa
js
ret
lods
adc
sub
dec
clc
add
imul
add
scas
inc
pop
pop
outsl
subb
pop
or
inc
or
mov
mov
lcall
ret
or
and
sbb
lods
jno
shlb
adc
adc
and
mov
inc
das
push
push
add
rorl
adc
and
cs
rclb
and
pop
out
popa
shrl
stos
lahf
adcl
das
inc
mov
add
cmp
sub
dec
movl
push
arpl
sbb
add
pop
xchg
mov
mov
stos
jae
sub
loop
ja
out
adc
popa
pop
imul
push
icebp
jmp
push
push
and
push
mov
cwtl
rcrl
cmpsl
shlb
insb
repz
add
push
add
sbb
sbb
sbb
sbb
pop
cmp
add
push
pop
addl
mov
or
dec
jmp
cmp
shrb
push
cmpsl
out
pop
sbb
sub
lods
mov
pusha
notl
iret
push
xor
adc
adc
adc
pop
daa
test
lods
mov
sbb
push
sarl
fwait
push
add
jecxz
sti
cmp
scas
andb
loopne
mov
or
mov
stos
push
fwait
mov
fistpll
pushf
jno
cmp
pop
mov
popa
sarl
sbb
imul
arpl
cmpsl
dec
pop
pop
dec
dec
xor
mov
aas
arpl
sbb
jmp
push
and
adc
push
scas
dec
push
rcl
or
dec
rcrb
and
dec
shrb
stos
fs
pop
dec
xor
sub
jp
jl
loope
xor
out
xchg
push
pop
adc
xor
jmp
mov
pop
xchg
das
mov
pusha
adc
insb
mov
mov
ficoml
lret
das
dec
mov
pop
and
xor
lods
or
and
add
aad
add
add
mov
sub
adc
jbe
jne
fbld
fs
xchg
adc
sub
in
stos
jg
sti
adc
sarb
data16
mov
push
lea
test
mull
cs
adc
xor
xlat
es
popa
jae
adcl
fdivl
sbb
pushf
ret
or
push
xorl
sbb
or
jo
rolb
pop
adc
pop
orl
sub
lods
xchg
outsl
mov
cmpl
es
jmp
mov
pop
fwait
cmp
or
push
cmpsb
jno
out
popa
popa
jbe
lods
jae
adc
and
repz
call
sbb
sub
push
lods
or
cmp
adc
xchg
bound
mov
adc
addr16
or
xchg
push
jbe
xchg
inc
mov
dec
insb
jo
repz
popf
push
call
and
shlb
adc
sti
fnstsw
fstpt
jns
push
gs
sub
pop
xchg
hlt
out
adc
or
mov
inc
pause
pop
adc
adc
movsl
rcl
pop
add
push
push
dec
push
jae
adc
ds
out
xchg
jne
adc
call
push
jmp
pop
jo
adc
cltd
xchg
rclb
mov
jne
or
ss
xor
adc
popa
loope
pop
jmp
add
mov
fnstenv
insb
adc
int
push
jbe
adcl
xor
pop
lret
dec
lds
xchg
or
mov
cs
test
stos
movsl
jmp
sub
push
movsb
and
cmp
decb
xchg
pop
inc
xor
dec
and
sub
clc
adc
mov
dec
sbb
fcmovbe
stos
add
adc
mov
xor
imul
pusha
call
xlat
inc
shlb
jnp
cmp
fstpl
sbb
inc
das
mov
sbb
sbb
shlb
fxch
mov
lret
test
sub
cmpsb
insl
sbb
iret
test
mov
mov
inc
scas
sbb
sub
add
sub
fiaddl
adc
jno
mov
push
push
lea
lret
and
or
ret
fsubrs
sbb
sbb
xchg
imul
adc
mov
sub
adc
inc
icebp
and
pusha
dec
xor
mov
loopne
add
or
cli
fists
mov
inc
jo
push
js
movd
imul
addb
es
mov
ret
out
mov
sbb
mov
jo
push
push
push
dec
jo
sarb
dec
sbb
sub
push
fisubl
loop
mov
jne
pop
sbb
inc
push
lods
pop
and
addr16
ret
jle
imul
mov
inc
movsl
shrl
iret
mov
sbb
push
sub
mov
outsb
pusha
jbe
cmp
adc
push
call
sbb
inc
insb
insl
xchg
jb
pop
dec
scas
rclb
cltd
shrl
mov
push
adc
push
dec
push
outsl
xor
int
push
dec
xor
sub
sbb
push
push
adc
or
pop
cmp
adc
add
xor
or
les
imulb
mov
popa
pusha
shrl
lret
pop
sbb
push
insb
scas
add
loopne
xor
movsb
ror
pop
add
push
inc
nop
pop
sbb
or
add
cmp
lock
add
jbe
mov
sub
pop
or
cmp
sub
lea
setnp
cmp
or
and
cmc
or
push
add
cmp
roll
and
sub
add
or
nop
movsl
add
out
addl
or
iret
or
xchg
test
add
jo
xor
jo
enter
xor
or
stc
push
inc
sub
mov
pop
cmpsl
and
add
mov
add
add
xchg
sub
xchg
subl
pop
push
push
add
rorl
add
push
sbb
add
insb
sub
inc
adc
add
add
gs
push
js
arpl
sub
test
or
lock
sbb
sbb
cmp
sbb
jo
push
xchg
or
outsl
push
sbbl
je
pop
dec
adc
push
imul
inc
movsb
sbb
adc
mov
push
lods
rcrl
rclb
sub
iret
mov
dec
data16
dec
dec
iret
sub
sub
add
fisubs
rol
adc
add
or
mov
lods
enter
nop
pop
mov
and
jns
mov
dec
imul
outsl
loopne
sbb
in
jnp
cld
imul
rcr
shr
outsl
adc
push
push
fidivrl
fsts
pushf
ret
cmpsb
sub
outsl
sub
add
push
outsb
push
lods
or
dec
pop
lods
pusha
add
inc
or
gs
popa
out
sub
and
sbb
mov
mov
push
xor
pop
and
popa
aad
dec
je
xor
push
pop
sbb
popa
inc
loope
and
pop
cltd
mov
lds
mov
pop
xor
cltd
push
sub
roll
push
inc
push
xchg
and
pop
jns
mov
out
fnsave
pop
or
add
add
jnp
mov
enter
inc
add
mov
loop
and
pop
and
jbe
push
sub
and
outsl
adc
or
adc
dec
fs
xchg
sub
cmp
adc
push
push
fwait
adc
sbb
in
bound
rorl
lret
popf
pop
sbb
push
addl
outsb
popa
xlat
sbb
sbb
sbb
cwtl
out
mov
pop
and
xor
sub
push
inc
push
mov
xor
mov
mov
stos
pop
out
xchg
adc
outsb
dec
pop
mov
xchg
mov
jl
xchg
outsl
dec
add
dec
dec
cmp
pop
and
dec
lea
out
sub
out
jno
sbb
cltd
push
insb
mov
dec
testl
push
rcl
jmp
sbbl
inc
call
push
addr16
mov
xor
jge
sub
xchg
rorb
clc
scas
es
sub
ret
push
push
sub
lds
test
jo
pop
mov
pop
sbb
sub
cli
and
adc
push
sub
sub
out
ja
call
sbb
add
ret
data16
inc
leave
test
je
ja
cmp
adcb
cmp
lahf
mov
sbb
or
push
or
adc
rcrl
dec
and
fadd
je
gs
inc
sub
push
sbb
pusha
in
cmp
hlt
pop
or
insl
sbb
pop
dec
jo
or
add
xor
sbb
push
movsb
jecxz
inc
inc
pusha
wbinvd
cltd
and
pop
adc
outsl
ja
outsl
jnp
fimull
mov
sub
add
xor
xchg
add
and
mov
ja
adc
movsb
and
inc
imul
add
xor
mov
dec
sbb
push
repz
xor
or
xor
mov
insb
sbb
dec
and
jns
dec
pushf
mov
inc
insb
xor
dec
dec
jb
scas
pop
nop
xor
pop
inc
leave
inc
or
cwtl
daa
movsb
lods
add
imul
xchg
push
dec
push
xor
ficoml
inc
dec
inc
mov
dec
clc
lea
mov
int
pop
shrl
push
enter
mov
mov
mov
mov
add
fcoms
xor
adc
jne
xor
push
insb
popa
jns
and
aam
and
jnp
and
and
mov
in
push
outsb
and
leave
ret
dec
dec
push
push
nop
pop
add
mov
xchg
mov
push
pop
or
xor
sub
insb
mov
dec
mov
mov
clc
push
outsb
inc
outsl
or
adc
or
pop
push
out
inc
pop
pop
cmp
mov
mov
mov
fisttpl
dec
xor
adc
inc
and
mov
xchg
mov
sbb
pop
movl
shlb
sbb
add
sub
fwait
and
rcrl
iret
sbb
jns
ret
adcb
or
sbb
sbb
inc
sbb
mov
push
insl
and
mov
push
mov
dec
pop
pop
fcmovb
inc
mov
inc
bound
daa
jnp
inc
roll
inc
frstor
xchg
xlat
add
pusha
cmpsl
add
jg
xor
mov
sbb
sbb
and
lcall
dec
data16
sub
fwait
rol
or
ja
xchg
mov
dec
cmp
adc
and
sbb
ret
lea
mov
in
shl
addb
cmp
loopne
and
mov
jnp
and
cmp
push
adcb
dec
lret
adc
daa
clc
jg
push
jo
inc
test
xor
jecxz
jp
test
dec
adc
xlat
pop
xor
rep
outsb
lea
out
cmp
sub
cmpsb
loopne
test
add
mov
mov
shrl
adc
test
stos
pop
sbb
sbb
loopne
mov
or
insb
clc
dec
xchg
dec
sti
sub
lods
xchg
sub
inc
and
cltd
add
movsl
pop
mov
jno
inc
pop
clc
and
pshufw
jmp
stos
iret
and
push
loopne
mov
cmp
shl
sub
int
flds
or
xchg
dec
shll
sti
and
xchg
pop
sub
push
inc
push
sbb
fadds
subb
fcoml
jns
test
sbb
insl
push
pop
inc
adcl
cmp
shrl
pop
and
and
sbb
cmp
xor
xor
xor
mov
jne
and
ficoms
imul
aaa
adc
sbb
add
imul
lods
loopne
mov
push
dec
dec
jae
fnclex
add
sbb
lods
add
sbb
dec
jp
jbe
repnz
jae
jb
mov
mov
test
daa
mov
pop
in
mov
insb
sub
call
dec
imul
and
in
adc
in
pop
nop
and
and
xchg
inc
pusha
leave
gs
and
fcoml
add
jns
add
pop
sub
fbstp
shll
xlat
adc
ljmp
or
addr16
jge
sbb
pop
movsl
add
cwtl
test
cmpsl
loope
pop
inc
scas
stos
insl
jno
inc
sbb
test
les
add
xchg
adc
xchg
xchg
test
sbb
jne
push
xchg
scas
or
nop
inc
inc
inc
jg
shll
ret
test
pop
mov
in
mov
sbb
and
lods
shll
sbb
jbe
stc
mov
sub
insl
ret
dec
in
pop
mov
aad
jbe
and
outsb
xchg
and
mov
inc
adc
rorl
lods
in
test
ja
inc
mov
nop
test
cli
mov
aad
stos
or
xor
inc
inc
push
les
aam
cmp
sub
xor
loopne
test
cmpsl
shll
mov
and
mov
jg
imul
ret
inc
shr
adc
sub
sbb
mov
sub
jno
adc
ret
fs
mov
mov
pop
sbb
lea
rcrl
push
add
xchg
dec
data16
xor
and
sbb
les
and
arpl
aaa
test
jmp
ds
push
mov
xor
xchg
sub
adcl
js
dec
sti
xor
push
pop
dec
int3
aaa
inc
adc
mov
mov
pop
aaa
push
jo
sub
sub
dec
jg
fs
xor
jo
std
aam
mov
mov
bound
or
dec
loopne
arpl
push
sarb
push
lret
arpl
rorb
fcoms
xor
mov
push
dec
add
add
sub
movsl
aas
popl
out
mov
daa
test
adc
jo
add
push
mov
pop
add
lahf
sbb
out
repz
inc
movups
jae
cmpsb
and
mov
jo
xor
adc
daa
mov
push
insl
cs
adc
push
scas
xor
add
and
imul
dec
or
mov
dec
movl
dec
dec
pop
daa
outsl
cmpsl
clc
or
bound
mov
dec
xor
mov
mov
je
cmp
xchg
int3
pop
cltd
or
cmp
sbb
add
test
gs
jo
cmpsb
mov
sbb
rolb
jb
data16
jnp
ja
or
cs
and
out
das
xor
or
add
sub
add
add
add
inc
add
inc
xchg
test
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
adc
dec
add
dec
add
