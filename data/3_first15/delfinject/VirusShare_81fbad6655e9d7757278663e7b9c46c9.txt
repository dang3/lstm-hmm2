push
call
ret
ret
dec
lcall
outsb
fisubrs
adc
in
push
nop
popa
scas
push
clc
xor
stos
pushf
jl
pop
or
icebp
mov
xor
dec
aad
push
mov
mov
ret
push
shl
fmuls
lcall
sar
mov
mov
js
cmp
inc
mov
outsb
call
mov
push
cmp
subl
aas
shlb
jmp
int
xorl
cmpsl
rorl
lret
xchg
cli
mov
or
out
pop
es
jns
xor
mov
mov
clc
sbb
movsl
sub
movsb
mov
pusha
jnp
adc
enter
pop
popf
and
rolb
arpl
sub
fnstenv
pop
cmp
bound
jmp
aaa
sbb
mov
pop
pop
aam
xor
out
hlt
fucomi
cmp
push
in
sbb
pop
inc
mov
push
pushf
jb
sub
push
dec
xchg
lods
dec
icebp
call
loope
or
outsl
mov
xor
out
lds
hlt
jns
dec
and
or
sbb
push
test
lahf
rcll
push
jge
pop
lahf
popf
add
xlat
cltd
loop
mov
cli
cmp
push
lret
es
orb
cmp
mov
scas
cwtl
push
adc
dec
outsb
scas
leave
jno
test
bound
mov
cmp
ficomps
jns
popa
pop
mov
pop
ficompl
fnstsw
in
or
mov
lret
add
add
jo
push
dec
jmp
int3
iret
imul
int3
cli
fcmovnu
test
mov
dec
fistps
jp
int
xchg
inc
in
xchg
dec
sub
and
jo
repnz
cwtl
mov
xchg
mov
leave
out
cmp
push
ds
popf
add
mov
and
jo
addr16
pop
cli
or
sahf
out
clc
int3
add
mov
mov
mov
insl
pusha
xchg
mov
xlat
in
filds
xchg
cs
repnz
jno
sbb
sbbl
push
sbbl
repnz
sub
lret
fstpt
aas
mov
xor
rcrl
inc
jecxz
cmp
in
sub
fiaddl
ret
ror
iret
or
mov
aaa
lcall
push
and
das
mov
rcr
call
test
lret
addr16
fbld
push
mov
sbb
ret
ds
outsb
lock
int3
inc
jo
ficomps
arpl
mov
std
mov
les
outsl
xchg
js
pop
repz
xchg
adc
xlat
push
cmp
cmp
cmpsb
js
adc
or
xchg
data16
sub
xchg
testb
fcomps
in
lret
mov
xlat
adc
movsl
fisttpll
sub
inc
inc
mov
inc
push
shll
xchg
xchg
repz
jecxz
in
cmpsb
push
mov
pusha
popa
sub
mov
ret
mov
pop
addr16
cmpsb
aad
ret
jmp
mov
pop
mov
mov
dec
mov
js
xchg
jnp
fnsave
jnp
fldcw
divl
mov
icebp
add
jne
enter
test
fwait
lock
xor
xchg
inc
sub
lods
loopne
adc
std
mov
out
sub
or
in
add
sbb
cltd
mov
pushf
sub
lock
arpl
and
adc
xor
daa
insb
call
adc
cmp
in
push
cmp
in
push
jb
cmp
push
lds
into
filds
dec
add
push
jns
jnp
loope
jo
pushf
xor
push
loop
mov
pop
sbb
es
out
popf
xchg
mov
add
adc
sahf
pop
cmp
loope
xchg
adc
jle
enter
pop
lea
movb
int
fsubrl
cmp
add
add
or
jl
jecxz
cmp
mov
jne
mull
adc
popa
mov
loope
js
aad
cli
adc
repnz
adc
cmp
or
fdivrs
enter
sbb
ljmp
test
std
les
int3
rcl
push
cmovne
lock
mov
and
jge
xchg
pop
bound
popf
mov
rol
psllw
sti
mov
xchg
pop
iret
add
stos
dec
dec
incb
pop
sahf
adc
fwait
add
pusha
sub
js
pop
inc
scas
imul
aas
sbb
ss
outsb
sbbb
addb
sub
movl
xor
mov
scas
mov
lahf
push
sub
idivl
xorb
cld
aam
pop
mov
push
shrl
mov
in
xchg
adc
pop
mov
test
or
pop
out
dec
fists
adc
xor
fidivrl
pusha
cmpsb
in
push
push
jge
xor
jb
xor
and
dec
adc
pop
sbb
fisubrs
bound
inc
loope
incl
daa
in
mov
push
dec
dec
fcoml
lret
cmp
cltd
jnp
out
and
xor
std
je
lahf
and
xor
and
call
or
subl
cwtl
lods
call
nop
mov
aad
pushf
js
jecxz
mov
mov
or
push
cli
jno
cmp
mov
mov
lret
fisttpl
loop
cmc
scas
inc
lods
cmp
sbb
aas
dec
push
lock
xchg
and
xor
orb
mov
adc
cli
and
test
jg
testb
jno
sbb
xchg
scas
sarl
test
push
ror
sub
call
stc
mov
push
inc
adcb
hlt
cmp
popa
jp
push
lods
in
daa
sbb
icebp
jg
outsb
shl
dec
pusha
inc
xorb
adc
xor
insl
pop
push
jb
push
xor
cld
dec
and
xor
lcall
push
xchg
or
nop
dec
in
fcomps
mov
xchg
and
cs
les
inc
and
fmuls
shrl
test
test
inc
dec
lods
and
scas
and
std
dec
ret
jge
rolb
push
pop
fiaddl
mov
movsl
cltd
xor
push
sbb
daa
int3
inc
mov
sbb
call
out
in
je
mov
imul
push
push
add
xor
inc
mov
xchg
inc
ljmp
adc
jmp
pusha
mov
adc
cmp
mov
mov
dec
xchg
sub
add
mov
inc
scas
xor
out
ljmp
fs
inc
call
aas
fdivr
pop
mov
in
mov
mov
inc
sub
fldenv
call
cmp
jg
pop
inc
jmp
fmuls
andl
or
jmp
mov
hlt
lds
fwait
xchg
push
fdivr
or
stos
les
jbe
xchg
popa
xor
push
lcall
lret
or
mov
outsl
xor
xor
and
xchg
jmp
xchg
scas
xchg
adc
sti
jmp
cmp
jle
jge
jbe
sbb
sub
enter
aad
mov
and
add
shl
jle
jge
or
dec
add
sbb
sbb
push
pop
les
dec
test
xchg
inc
sub
cs
push
inc
cwtl
dec
ret
fwait
out
cmp
cmpsb
sbb
pusha
push
mov
inc
stc
std
loope
or
add
addl
mov
cmp
mov
pop
cmp
pop
stos
fisubrl
popf
cmpl
add
xchg
mov
ficomps
add
inc
popa
mov
inc
mov
mov
jg
jp
jg
aam
dec
out
mov
in
pop
cli
inc
sbb
dec
push
inc
push
sbb
add
add
loop
xchg
cmp
sub
insl
sbb
inc
cmp
jnp
mov
movd
jnp
mov
xor
mov
fstl
sub
dec
mov
pop
incl
fidivl
cmp
aas
and
xchg
add
rcrb
push
xor
shll
mov
hlt
jmp
pop
sbb
inc
sbb
rol
sub
or
outsb
fcmovne
je
jo
push
mov
sbb
jbe
test
jmp
mov
lahf
gs
lcall
std
xor
push
jecxz
iret
push
iret
push
mov
push
sar
mov
inc
xor
jmp
xchg
jo
add
repnz
lahf
mov
fiaddl
dec
int
jnp
cmp
fcoml
lock
cmp
xor
xor
out
lock
fdivs
lret
jmp
cmpsl
lds
out
repz
int3
mov
cmp
or
scas
adc
shrl
xchg
mov
push
adc
or
jo
out
cmp
bound
adc
sbb
cmp
mov
sub
dec
bound
fidivl
in
dec
adc
cmp
pop
push
cmp
test
cmp
and
cld
fsubr
std
pop
out
mov
std
pop
rclb
notl
push
mov
pop
add
sbb
pop
xchg
push
cmp
lock
pop
and
outsb
aad
ficoml
or
mov
pusha
dec
ds
push
xor
testl
jge
rolb
sub
scas
jmp
lret
mov
es
out
add
add
or
jnp
push
sbbw
sbb
nop
cmp
ljmp
mov
stc
ljmp
inc
stos
jnp
and
in
decl
xchg
cmpsl
imul
adc
mov
fucomp
insb
xchg
cmp
jns
lea
mov
and
aam
cmp
fidivrs
punpckhbw
adc
pop
imul
add
mov
mov
les
cli
popa
xor
movsl
or
mov
push
inc
push
add
xchg
test
xchg
ljmp
mov
idivb
inc
rorl
fmul
lods
jns
ss
jp
cmp
decl
jno
scas
jmp
pop
or
push
add
inc
cli
sub
add
or
xchg
push
dec
cwtl
push
sub
movsb
test
nop
cmc
stos
jnp
jmp
or
notl
dec
repz
mov
push
xchg
push
mov
ds
inc
in
mov
lds
in
ja
cmp
adc
pop
sub
inc
inc
js
pushf
push
imul
xchg
pop
test
pop
lock
mov
push
outsl
push
sub
cwtl
les
sub
lahf
popa
mov
sbb
int
dec
sbb
shll
or
cmpsb
daa
lret
xor
cmp
push
inc
popf
push
in
and
push
pop
je
lea
into
sub
add
pop
mov
lret
mov
mov
cmp
das
outsl
cmpsb
scas
aad
mov
in
je
repnz
pushf
xchg
jno
jno
aaa
mov
jns
xor
arpl
push
test
adc
xchg
mov
int3
out
lods
pop
inc
nop
fistps
mov
and
cwtl
add
into
dec
jl
or
fnstsw
ret
jb
push
and
test
ljmp
scas
mov
cmp
addr16
or
mov
fnstcw
mov
int3
repnz
mov
dec
cmp
mov
sbbl
xchg
sub
outsb
jbe
lcall
fisubl
mov
xchg
mov
es
adc
or
xchg
sub
jge
outsb
cmp
mov
sbb
and
in
sbb
mov
aaa
dec
mov
push
mov
and
in
out
repz
fs
xor
or
imul
lea
adc
pop
leave
rcr
pop
sub
insl
movsb
sbb
mov
mov
insb
shrl
pop
mov
push
xchg
in
sahf
fidivs
sub
jae,pt
ret
fsubl
adc
sti
xchg
pop
pop
call
jae
push
repnz
mov
int
addl
mov
icebp
sub
fiadds
lahf
cmp
add
les
es
inc
lea
xchg
aam
movsb
clc
or
es
imul
mov
out
repz
rol
fisubrl
xchg
sub
aad
inc
push
cmc
push
nop
cmp
xchg
imul
pop
dec
cmp
in
dec
cld
push
push
lret
mov
leave
pop
jbe
fbstp
pop
lds
lock
cmpsb
sub
pop
loop
jo
stos
or
out
and
xchg
mov
pop
gs
pop
cli
push
pop
aad
aas
cmp
jo
ret
fucomp
dec
mov
mov
cmpps
lret
arpl
xlat
mov
mov
sti
mov
cwtl
imul
inc
and
pop
std
hlt
push
clc
mov
add
pop
fldt
enter
fildll
push
mull
dec
and
mov
rcr
inc
sbb
leave
ffreep
push
inc
inc
and
dec
dec
mov
and
stc
mov
popa
push
cmp
cmp
mov
fstpl
pop
imul
sub
adc
aaa
popa
stos
pop
push
sub
in
inc
in
inc
in
or
sub
add
push
jns
fldenv
popa
push
in
push
outsb
inc
cmp
pop
fcoml
in
mov
iret
pushf
fs
gs
mov
push
jnp
lock
repz
dec
pop
daa
cltd
or
add
jl
mov
dec
scas
out
push
popa
mov
movsb
or
jge
sbb
mov
xchg
test
cmp
adc
pop
xchg
push
sbb
or
mov
enter
nop
out
imul
test
adc
out
outsb
xor
or
clc
in
jne
fs
mov
and
into
push
arpl
in
insl
pushf
idivb
add
scas
fdivrp
setp
out
or
test
out
inc
mov
outsb
rdmsr
inc
sub
jl
mov
pop
fcoms
jp
push
dec
lahf
or
rcll
cmpsl
jle
xorb
inc
mov
jo
pop
int
leave
cwtl
adc
push
lret
mov
rolb
push
cld
lahf
add
lcall
stos
push
cmc
sbb
and
xor
ja
loop
ljmp
and
mov
shl
sub
dec
push
mov
inc
repnz
sti
sbb
pop
xchg
lds
and
mov
inc
loope
dec
mov
dec
mov
cmpsl
push
sbb
mov
fistl
push
dec
xchg
ret
int3
jl
dec
push
lahf
lret
shll
aaa
adc
lret
mov
xchg
jle
adc
mov
dec
popl
out
sbb
andb
mov
inc
dec
xchg
mov
jns
inc
insl
out
xor
lods
fiaddl
insl
cmpsb
and
movsb
or
in
adc
hlt
lock
idivl
mov
sarl
addl
mov
mov
sbb
mov
das
sub
jae
in
adc
push
lret
inc
mov
arpl
mov
or
xor
xchg
shll
and
or
outsb
xor
imul
xchg
xchg
notl
mov
push
sbb
jb
jne
sub
push
mov
lcall
dec
jne
sbb
test
cmp
and
inc
cli
dec
mov
jmp
sub
sub
jo
sub
jno
push
xor
mov
sbb
push
dec
jns
xor
lret
out
ret
in
aas
and
fsubp
mov
enter
loope
mov
mov
cmp
xchg
pop
mov
push
ljmp
push
and
bnd
dec
lock
mov
aad
pop
loope
jnp
jnp
xchg
ret
cmp
mov
sbb
jle
inc
hlt
sahf
test
mov
popa
jne
jbe
mov
andl
adc
push
jecxz
push
xchg
nop
inc
mov
xor
xor
out
jl
push
ss
inc
ret
sbb
dec
pusha
mov
pushf
pop
ss
xchg
rclb
cwtl
xor
dec
push
es
jbe
and
aad
js
call
xor
mov
jbe
inc
mov
mov
loop
adc
pop
idivl
out
jg
popa
or
insl
loopne
adc
xor
push
cmp
sub
cltd
cmp
lds
clc
xchg
jns
test
movd
jp
enter
inc
dec
in
sub
std
out
hlt
jns
and
lods
cmp
out
sub
insl
dec
mov
dec
xor
jbe
jecxz
and
jb
rcr
movsl
aam
add
les
and
adc
mov
pop
push
gs
jle
call
mov
sbb
sbb
popa
fimuls
popf
in
les
xchg
mov
cmp
xchg
sahf
jg
in
test
xorl
orl
inc
and
xor
ja
lcall
fsubrp
sub
xchg
pop
lods
popa
hlt
frstor
cmp
imul
lods
ror
scas
cmc
lret
dec
dec
aaa
xor
rorl
mov
andb
daa
xor
xchg
fucomip
je
mov
or
inc
cmp
push
stos
adc
cmp
push
xchg
aam
mov
popf
js
movsl
inc
pusha
pop
push
xor
in
jbe
mov
push
mov
ret
icebp
jno
popa
lcall
filds
movsb
cltd
repz
xchg
mov
shrb
add
lods
mov
push
jge
stc
add
push
adc
push
fs
rclb
push
popf
js
call
into
mov
mov
in
inc
dec
cltd
jo
mov
clc
iret
stos
pop
push
cmp
test
call
sbb
adc
pop
mov
jmp
mov
inc
out
jecxz
inc
ja
testb
stos
enter
out
push
mov
ljmp
inc
adcb
mov
xchg
lcall
pop
mov
out
inc
rorl
and
pop
inc
adc
loopne
mov
mov
dec
dec
int3
rorb
ds
test
jl
mulb
lcall
or
xchg
or
subb
push
fldenv
sti
jp
mov
cli
mov
call
stc
scas
cpuid
test
in
enter
stos
loop
js
je
lods
fucomip
adc
pop
es
fldcw
lods
std
cmp
xlat
xchg
dec
cli
xor
push
mov
or
xchg
sbb
cmpsl
fldenv
aaa
xor
hlt
clc
pop
stos
js
push
cltd
test
push
mov
das
adc
sar
das
mov
fs
leave
pop
jge
add
test
in
jo
push
pop
stc
movsl
or
jb,pn
pop
mov
std
and
ds
cmp
loope
lock
xor
fstps
cmp
ret
mov
xor
mov
xor
sbb
jg
les
out
jo
enter
jns
movsl
pop
ret
divb
mov
arpl
and
mov
fstl
adc
jg
dec
sub
push
pop
or
adc
shl
shrl
cmp
js
xchg
mov
xchg
movsb
ss
nop
pop
lcall
test
outsb
cli
jb
dec
inc
dec
jno
fs
mov
mov
xor
or
mov
mov
inc
lds
sub
add
cmp
mov
sub
sub
add
fs
outsl
sub
fnstcw
shll
pop
jbe
jo
out
flds
push
sti
mov
push
xchg
ja
outsb
mov
addr16
sub
xor
mov
dec
aas
ss
notl
adc
test
push
call
les
sub
mov
mov
mov
jecxz
jg
dec
jns
loopne
jecxz
loopne
push
jl
mov
jns
fistps
outsb
xor
dec
dec
fstl
jg
imul
add
mov
and
and
jns
pop
adc
cmp
mov
mov
or
push
fcompp
adc
jecxz
cmp
and
adc
or
outsb
pop
fidivl
jne
pusha
lods
lret
lods
scas
fisttps
or
jl
adc
mov
bound
mov
jge
movsl
inc
es
mull
jns
lea
inc
out
pop
inc
stos
ror
push
cs
add
sub
jb
pop
cmc
shrl
scas
push
sbb
pusha
popf
in
pop
ficomps
insl
mulb
dec
sbb
loopne
inc
inc
sbb
ret
push
xor
xor
push
push
mov
push
xor
sub
jmp
sbb
push
xchg
movl
xor
add
jbe
mov
and
adc
mov
outsl
int3
cmp
in
mov
pop
mov
cmpsl
inc
inc
roll
pop
gs
imul
mov
inc
jl
add
jecxz
push
jp
mov
lods
fnsave
and
vcvttpd2dqx
jns
sub
xchg
mov
enter
rol
rorb
mov
ficomps
stc
lret
iret
bound
js
push
std
test
xorl
and
mov
ljmp
mov
or
mov
adc
and
test
arpl
xchg
inc
iret
jae
sahf
push
mov
inc
mov
fsubrl
pusha
xlat
popf
pop
test
mov
inc
jg
add
jle
stos
dec
add
movsl
imul
fstpt
repnz
cwtl
scas
push
lea
aad
in
adc
inc
inc
add
pop
and
cltd
adc
test
cwtl
test
ret
mov
adc
mov
pop
jne
jbe
add
cmp
or
lds
xchg
push
mov
dec
cld
sbb
cmp
mov
in
icebp
xchg
call
mov
test
in
xchg
fwait
lea
xchg
inc
mov
xor
pop
test
jnp
out
mov
cld
outsl
inc
add
dec
rcr
imul
lds
sbb
jne
mov
jno
xchg
test
pop
adc
jne
ja
pop
ss
arpl
out
xor
les
in
imul
cmp
sahf
les
scas
int
push
mov
dec
and
aam
xchg
sbb
adc
lret
adc
dec
push
push
mov
jns
iret
xor
mov
arpl
mov
cmc
pop
mov
pop
mov
sbb
mov
lods
adc
mov
cmp
shrb
ja
sub
inc
lods
push
fildll
pop
or
adcb
lods
in
subb
in
jb
imul
cli
bound
popf
sbb
stc
lock
ljmp
push
cs
cli
lods
dec
mov
mov
out
cmpsl
mov
test
or
mov
mov
dec
arpl
jl
sbb
aam
and
jecxz
and
sbbl
xor
push
mov
dec
inc
aaa
mov
repnz
popf
mov
iret
cmp
jp
mov
jp
and
mov
arpl
sub
dec
and
lock
pop
out
jmp
xchg
mov
or
add
sbb
ja
nop
lods
scas
jle
jp
cld
aam
jg
inc
jae
push
adc
mov
in
lds
fwait
aaa
inc
popa
out
mov
jmp
sub
sbb
loop
jae
xchg
pop
cmp
pop
sub
xor
subb
out
push
leave
aam
adcb
inc
ds
cli
rcl
pop
mov
iret
mov
out
pop
xor
jg
jnp
jecxz
cmp
mov
stos
rcrl
dec
lods
inc
fistps
ja
les
jge
and
and
adc
mov
mov
dec
pop
iret
jge
adc
ret
dec
push
das
mov
xor
mov
inc
inc
frstor
mov
fisttps
jnp
inc
mov
add
sbb
test
mov
bound
xchg
sti
push
mov
fsub
arpl
push
fdivrp
ja
mov
sub
sbb
mov
sub
mov
jle
jecxz
and
stos
dec
sbb
push
push
jmp
fcmovbe
in
es
pop
pop
call
xchg
lea
bt
pop
das
imul
or
bnd
inc
xor
and
lea
cmp
mov
fistpl
fiadds
pop
pop
scas
call
pop
sub
inc
lods
mov
push
fucom
frstor
jg
adc
push
in
inc
jge
lret
jno
sbb
cmpsb
and
mov
scas
mov
mov
push
mov
in
cmp
mov
lret
out
adc
lock
cld
dec
or
pop
mov
hlt
sub
movsb
fdivrl
add
mov
sub
xor
pop
cmp
arpl
js
je
loope
fcmove
jns
sub
sbb
xor
rol
inc
or
jne
xor
or
jecxz
rorl
xlat
data16
ds
ret
ss
dec
outsl
pop
mov
jbe
push
adc
cmp
cld
call
call
sbb
push
ljmp
push
data16
or
fdivl
mov
push
popf
out
stc
fiaddl
in
pop
mov
les
divl
mov
mov
lea
loop
sbb
jae
daa
cmp
sub
scas
sub
jo
pop
sub
dec
jmp
subl
pop
je
call
push
sbb
jmp
enter
fmuls
jmp
jo
adc
or
test
xor
lds
sub
adc
dec
jg
frstor
cmpsb
aam
sub
push
into
shll
icebp
in
aad
cmp
adc
jmp
mov
adc
sti
roll
pushf
dec
imul
jge
mov
repnz
mov
cmp
fisttpll
ficomps
cmpsl
mov
les
cmp
xor
jns
adc
sbb
outsl
or
fldt
cs
cld
sub
loope
pop
mov
jns
xchg
lcall
and
cmp
fistl
in
lods
xlat
or
xor
push
mov
in
add
sub
test
and
jne
inc
loop
mov
nop
jg
cmp
pop
rcrl
push
inc
xor
lret
or
stos
fldcw
sbb
mov
and
cmp
pop
dec
pushf
sbb
lods
popa
sbb
ret
pop
jl
add
jp
loopne
or
xor
popa
lret
add
jbe
push
test
sub
mov
icebp
loop
mov
shrb
les
mov
aad
sub
or
insl
push
or
cli
inc
pop
ljmp
adc
add
sbb
lahf
pop
lods
lcall
in
sbb
rclb
mov
in
adc
sbb
loop
pop
rclb
loopne
and
fcmovu
vpslld
sahf
sub
inc
addr16
insb
scas
xchg
xchg
mov
ss
scas
sahf
xchg
dec
or
jmp
imulb
popa
inc
in
dec
dec
mov
rclb
addr16
enter
std
dec
add
or
stos
ljmp
ret
push
shrl
pop
jmp
adc
push
jmp
cmpsb
daa
rclb
dec
jmp
mov
xchg
fbld
cmp
xchg
or
stc
pop
sarb
lods
add
sub
pushf
or
push
xchg
adc
push
dec
aam
pop
lcall
cmpsl
sub
adc
adc
popf
xchg
sbb
push
aad
pop
or
pop
std
stos
pop
inc
sub
popa
imulb
stos
call
pop
cld
fdiv
push
mov
test
out
jne
jmp
in
aam
lock
or
int3
scas
mov
fldenv
leave
inc
or
xorl
lods
cmpsl
ss
and
out
mov
inc
push
mov
jmp
cld
mov
inc
lcall
ja
adc
push
push
lea
sub
in
out
jne
stc
add
mov
pushf
fildl
dec
int3
outsl
mov
push
xlat
mov
cmpsl
popf
xor
sarb
stc
pop
mov
mov
out
pop
and
xchg
dec
repz
mov
das
jbe
popf
or
int
push
xor
mov
mov
cs
in
add
jmp
mov
and
aad
xchg
call
std
xor
cmp
repz
repnz
arpl
jmp
inc
and
imul
mov
sub
arpl
sbb
or
cmp
lods
add
icebp
stos
fsubl
mov
dec
mov
xchg
shl
xchg
mov
int3
pop
insl
jb
out
dec
jnp
repz
imul
sub
inc
pop
inc
loop
sarl
adc
lret
pop
mov
aam
inc
aas
adc
and
adc
shlb
in
or
int3
xchg
inc
or
push
in
bswap
or
stos
xor
jp
stos
add
je
scas
xor
and
mov
test
in
mov
mov
loop
jb,pt
stos
inc
aas
mov
dec
arpl
loop
fcoml
call
repnz
sub
xchg
movsb
pop
xchg
mov
addr16
jp
or
inc
push
and
stos
jle
jae
std
and
test
data16
jge
int
ret
pop
jne
xor
stos
bound
insb
push
xor
test
add
mov
stos
dec
fstpl
in
ljmp
sbb
dec
xor
lret
push
inc
dec
ret
test
push
hlt
mov
inc
incl
and
xorb
mov
popf
xor
xor
pop
push
aam
fimull
jecxz
cmp
push
pop
xor
movsb
xorb
outsl
push
xor
dec
mov
push
in
jmp
out
jecxz
cmp
mov
std
jae
inc
xchg
bound
inc
into
pop
aam
shll
nop
sbb
mov
mov
mov
push
iret
fildl
cmc
xchg
mov
addb
shrl
mov
push
cltd
cmp
imul
mov
iret
stc
xchg
jbe
aas
push
test
sbb
cld
scas
xchg
sbb
or
add
shll
mov
mov
imul
cmp
repnz
fstps
mov
outsl
mov
call
xor
cmp
cmp
out
clc
fwait
jno
add
into
dec
inc
mov
xchg
stos
adc
jmp
flds
dec
mov
outsb
lods
movsl
popa
jnp
jnp
and
in
pop
lret
outsb
cwtl
mov
popa
leave
stc
shl
in
inc
mov
pop
dec
sbb
adc
cmp
mov
mov
lret
xor
testl
push
sub
shl
fdivrs
cmp
scas
xlat
mov
out
mov
jo
sub
lds
std
inc
adc
enter
icebp
fwait
outsl
mov
lea
pop
pop
ja
or
pop
xor
js
xchg
mov
xorl
inc
test
xor
or
jns
fcmovb
stos
xlat
setb
pop
leave
ret
jg
inc
cmp
cmpsb
adc
test
sbb
in
aam
xor
loop
ja
test
inc
mov
dec
and
popf
sahf
and
aad
xchg
decl
fisttpl
jmp
xchg
jp
stos
inc
pop
stc
mov
push
pop
int3
mov
je
push
mov
dec
jae
mov
ficoml
cmpb
sti
pop
sub
mov
adc
repz
push
or
addr16
jge
jbe
add
sub
cmp
mov
or
mov
add
fldcw
call
repz
inc
push
mov
dec
std
sbb
pop
int
popf
nop
out
mov
xchg
sub
inc
lods
cmp
push
add
fs
in
push
jnp
sahf
or
rcll
cmc
mov
inc
jl
std
outsl
inc
test
cltd
or
push
dec
popf
clc
mov
in
lea
in
jno
push
pop
jg
outsl
fs
out
inc
repz
inc
in
into
dec
cmp
push
out
leave
ljmp
xchg
ds
aaa
into
faddl
push
loop
arpl
mov
pop
mov
lods
cmp
js,pt
inc
in
jne
jp
dec
sub
dec
and
xor
stc
fildll
int3
cli
dec
adc
cmp
adc
adc
pop
adc
je
jl
hlt
sbb
jb
dec
pop
xchg
xor
imul
push
mov
jbe
sbb
xor
testb
mov
inc
push
ss
xor
daa
xchg
add
pop
jae
mov
mov
ljmp
cmc
dec
cmpsl
pop
ret
fwait
jmp
mov
daa
add
into
or
stos
mov
xchg
inc
and
pop
popa
mov
pop
lock
aas
shlb
repnz
inc
rolb
rcl
dec
mov
sbb
nop
dec
push
out
mov
pusha
mov
and
and
ljmp
outsb
mov
aad
mov
loopne
icebp
mov
dec
imul
mov
lahf
scas
mov
mov
repnz
cmc
jb
lods
push
daa
and
mov
ret
sbb
popa
adc
jge
inc
icebp
inc
cwtl
lret
push
aaa
fnstcw
pop
cmp
cld
or
lds
ret
out
stos
ret
jbe
xor
or
dec
rcl
mov
adc
jae
mov
cmp
cwtl
call
pushf
out
cs
pop
popf
and
stos
inc
sahf
inc
insb
mov
fsubr
jge
mov
daa
out
lea
scas
arpl
rclb
pusha
or
es
movsl
mulb
inc
dec
push
mov
mov
clc
mov
repz
fucomi
xor
sbb
add
int3
push
popf
scas
subl
aas
loop
scas
jne
xorl
dec
test
das
adc
add
shr
xor
xor
xor
mov
sbb
imull
fldenv
xor
dec
rcrb
popa
xlat
insb
mov
imul
into
xchg
pop
nop
push
cli
mov
scas
mov
fwait
sub
insb
lret
insl
leave
xchg
jecxz
cmp
sbb
mov
and
addr16
inc
lahf
mov
add
add
mov
push
add
addl
scas
xchg
mov
xchg
ds
aas
pop
mov
mov
inc
push
add
lods
push
shlb
aad
mov
xor
sahf
rcr
and
imul
and
loopne
call
push
cmp
cmc
mov
sbbb
in
adc
and
dec
js
mov
add
jmp
test
mov
push
stos
sub
mov
lret
cli
cmp
ret
test
mov
xchg
dec
loop
jno
nop
mov
dec
int3
imul
aam
cmpb
adc
pop
jl
repnz
loop
and
adc
jg
out
lcall
mov
or
fistpl
call
cmp
adc
pop
popf
enter
xor
sub
mov
xchg
or
and
jl
out
lcall
aad
push
test
movsl
fbstp
outsl
cmp
icebp
mov
imul
cld
and
mov
mov
popf
push
mov
add
mov
mov
insb
popf
dec
mov
or
lret
scas
cmovp
xor
fnsave
enter
mov
sbb
jecxz
je
jl
sbb
hlt
addr16
or
pop
sub
jge
icebp
jle
aam
and
and
inc
add
ror
push
mov
ja
sub
add
rcll
vcvtdq2ps
decb
jnp
lahf
ficoms
jl
pop
imul
push
stc
nop
lods
xor
test
daa
arpl
sbb
cmp
mov
dec
int3
mov
aam
clc
int3
aam
lahf
pop
mov
adc
es
data16
cmpsb
xor
mov
shlb
dec
sbb
je
xlat
dec
inc
mov
sbb
leave
es
xlat
cmpsl
int
rolb
gs
leave
xor
xchg
insl
addr16
inc
push
and
arpl
popf
mov
sbb
sub
pop
mov
xchg
sub
ss
out
push
clc
and
out
xlat
cwtl
imull
fcomps
int
sbb
pop
ja
and
push
and
je
mov
mov
ret
sub
mov
dec
dec
xorl
pop
jg
xor
repz
test
mov
push
push
or
xchg
xor
rorl
lods
dec
cmp
add
not
lds
push
gs
sbb
jle
lret
jecxz
stos
rclb
mov
jne
hlt
push
lcall
jg
inc
popf
inc
inc
xchg
add
push
fwait
mov
sub
jo
xchg
pop
testb
jo
iret
and
xor
stc
out
andl
or
vpcmpeqb
shll
aaa
aaa
in
test
nop
add
mov
test
cmpsl
adc
pop
xor
xchg
sahf
aam
xchg
pushl
nop
sbb
xor
push
pop
mov
orb
add
movaps
jle
fs
adc
icebp
cmp
pop
mov
inc
into
mov
aam
inc
mov
cltd
sbb
xor
add
stos
in
sub
adc
sbb
push
mov
inc
sarb
jns
loope
es
fwait
jp
test
fdivr
mov
in
fs
pop
adc
sbb
fsubrs
addl
lods
ja
cli
in
jno
int
xchg
int3
outsb
push
mov
xchg
sbb
sub
insb
outsl
sub
push
in
fwait
loopne
push
push
pop
jno
movsb
fisttpll
sub
sub
mov
cmp
and
mov
sbb
inc
xchg
dec
mov
lds
btsl
mov
fdivrs
test
sbb
mov
sahf
adc
pop
jp
sahf
or
sarl
jns
fisubrl
adc
rol
jecxz
xchg
push
scas
sbb
push
push
out
sbbl
adc
mov
mov
lcall
aad
ja
mov
dec
sub
or
cld
or
insl
dec
mov
or
sarl
out
mov
fmul
movsb
dec
sti
lods
mov
ret
aad
jecxz
mov
insl
div
sub
data16
add
xor
mov
jo
inc
in
lock
popf
xor
xor
push
dec
xchg
aaa
adc
sbb
sbb
dec
lahf
cmpsl
sub
add
sbb
pop
push
mov
add
xchg
fisubs
adc
inc
mov
leave
push
xchg
mov
push
je
nop
outsl
adc
arpl
into
xchg
ret
cmpsb
stos
mov
fdivrs
fstpt
mov
xlat
jb
lods
dec
cmpsl
jae
lcall
sbb
mov
mov
jmp
fsubrl
jns
cld
mov
fnstcw
push
shrl
mov
mov
xchg
ret
mov
add
rorl
sti
jle
mov
sub
jl
mov
or
cmpxchg
xchg
xor
push
add
stos
outsl
add
out
push
ds
xchg
xchg
aam
nop
into
fldl
nop
push
xchg
or
repnz
inc
or
pop
push
sub
ja
into
cltd
push
jne
insb
mov
aaa
test
cmp
jmp
out
xchg
cltd
mov
lcall
out
leave
xor
inc
sbb
out
clc
cli
mov
enter
popf
jle
and
jle
enter
dec
out
les
dec
xor
mov
push
sbb
ljmp
cmc
ljmp
fdivs
mov
popf
mov
cltd
lea
fimull
sub
cmp
rcll
es
insb
xchg
clc
xor
popf
nop
sbbb
mov
cmpsl
xor
xorl
or
xlat
adc
mov
fisttpll
xchg
mov
das
test
cmp
and
mov
int
xorb
insb
nop
or
dec
mov
ret
imul
pusha
xchg
push
and
ja
stc
aam
lock
out
inc
pop
mov
xor
sub
clc
inc
xchg
xor
aas
divb
inc
in
push
push
pop
repnz
dec
mov
xor
testb
insl
test
jno
idivb
inc
or
mov
je
cmp
cwtl
pop
dec
in
clc
mov
or
xor
sbb
rcl
dec
jbe
push
push
mov
jbe
and
int
adc
xchg
inc
loope
push
in
mov
movsb
add
out
test
mov
test
js,pn
push
leave
pop
insl
fidivl
or
xor
mov
out
ret
sarl
mov
icebp
lods
inc
mov
dec
pop
insl
pop
xchg
or
jp
xchg
push
shl
js
gs
mov
mov
jg
cmp
repz
dec
sbb
jns
ret
cmc
mov
pop
and
bound
sub
jl
add
jmp
ljmp
mov
cltd
cli
mov
xchg
in
rcll
mov
outsl
outsb
pop
mov
enter
mov
es
popfw
lret
daa
shlb
popa
shrb
push
jecxz
lock
cmpsl
int3
outsb
loopne
pop
ss
cli
scas
adc
sub
jno
pop
xor
or
aas
les
adc
lcall
push
inc
test
icebp
lret
js
mov
sbb
and
adc
xchg
scas
out
inc
xor
xchg
ja
jno
jbe
imul
movsb
mov
and
push
mov
ja
jno
xchg
inc
pop
pop
call
clc
shlb
mov
div
rol
adc
cmp
sbb
jl
pop
jp
addr16
mov
mov
push
jns
cmp
or
sbb
cmp
scas
shr
sbb
mov
jo
mov
adc
sbb
lahf
mov
je
pop
jae
jg
add
lock
add
enter
fnstsw
dec
fs
dec
sub
repz
mov
push
jbe
push
adc
enter
movsl
stc
sbb
pop
adc
inc
cmc
mov
jg
xor
inc
jno
lcall
adc
rorb
mov
push
imul
std
sub
push
dec
push
negl
orl
jmp
scas
in
mov
leave
add
cmpsl
mov
push
mov
pop
dec
aam
cltd
js
xchg
jne
das
push
leave
scas
sahf
sbb
int3
mov
outsb
dec
rol
sub
loope
push
jl
rorl
or
pop
add
icebp
shlb
cmp
xor
out
loope
mov
les
dec
jp
in
push
inc
sub
cmp
mov
cld
stos
out
clc
pop
fildll
adc
sub
insb
imull
cmp
loopne
jecxz
popa
push
cmp
mov
gs
rcr
dec
mov
or
loope
scas
mov
pusha
test
sbb
cmp
fcompl
adc
stc
mov
mov
pushf
pushf
xchg
icebp
sbb
gs
int
sbb
inc
adc
icebp
cmc
jmp
or
jo
xchg
ds
push
jno
ss
push
in
inc
cmp
aam
ficompl
push
aas
jl
xchg
xor
call
call
out
sub
pusha
repz
mov
adc
ss
imulb
mov
inc
ds
lahf
es
loop
pop
xlat
outsb
mov
jl
insb
aaa
lods
mov
pop
mov
xchg
cmc
sub
xchg
jno
xchg
xchg
push
cmpsb
xor
outsb
mov
cld
cmp
inc
jae
dec
inc
mov
mov
scas
ficoms
add
and
mov
aas
nop
adc
dec
and
in
pcmpgtd
mov
or
push
enter
push
push
push
or
addr16
sbb
inc
bound
fisubrl
sahf
loope
mov
jl
sub
andb
clc
enter
pop
mov
lods
jp
and
stos
stos
sbb
ja
out
mov
dec
into
cmpsl
add
or
add
aad
fwait
dec
popa
push
insb
loopne
sub
fmuls
push
loop
jb
inc
push
sub
stos
cmp
cli
xor
lods
aam
nop
xlat
leave
push
add
and
das
gs
aad
test
repz
push
xlat
mov
sti
pop
and
sub
outsl
gs
push
mov
in
sub
inc
ljmp
stos
repz
push
and
xor
dec
mov
idivb
lea
cld
nop
add
sahf
xor
sahf
clc
mov
mov
mov
sub
inc
or
mov
add
pop
or
dec
jb
enter
mov
xchg
xchg
or
or
addr16
mov
insb
in
xlat
imul
push
pop
aaa
jns
repnz
mov
notrack
xchg
test
push
xor
lods
sub
cmc
and
mov
cmpsb
sub
sub
lcall
jns
cmp
xchg
cwtl
test
pop
popf
push
lea
sub
imul
xlat
jmp
pushf
stos
pop
add
mov
xchg
cmp
adc
movsl
sbb
push
lret
out
mov
into
loope
push
fdivs
mov
aaa
fwait
xchg
add
adc
add
xchg
call
mov
test
adc
fwait
shll
add
nop
in
pop
lock
inc
inc
dec
dec
aad
lcall
mov
cltd
out
shrb
ret
aad
pop
push
loop
inc
push
imul
xchg
sub
push
add
sub
cmp
mull
bound
jg
lods
mov
pop
cmpsb
pop
push
jge
pop
pop
test
cmp
mov
jecxz
lods
aam
cmpsl
rorl
add
subl
loopne
mov
testb
stos
xor
pop
imul
add
adc
push
sbb
and
mov
mov
in
movsl
pop
inc
rcl
push
lods
adc
jmp
dec
xor
fdivs
sub
icebp
jb
ret
dec
dec
pop
out
in
cwtl
lods
pop
icebp
int3
mov
inc
inc
test
shlb
push
pop
xor
lea
jp
aam
mov
adc
int3
sbb
mov
lods
and
addr16
clc
sub
pop
add
cmp
mov
setbe
mov
std
sbb
lcall
rorl
and
bound
aad
dec
mov
and
bnd
dec
cmp
sbb
aaa
int
cmpsb
inc
movsl
ss
mov
and
dec
sbb
lahf
lahf
add
dec
push
or
imul
lret
push
jne
xchg
notb
xchg
addb
xchg
pop
jg
into
mov
out
pusha
and
push
movsl
sub
cli
hlt
mov
cwtl
or
nop
jmp
sbb
or
xchg
sub
incb
hlt
pop
cmp
push
push
popf
pop
lds
cmp
test
mov
cli
mov
or
fmul
push
add
ljmp
lods
aas
movsb
into
or
push
inc
xlat
push
fistl
test
mov
sbb
cmpsb
out
dec
sub
push
add
sub
sub
push
test
adc
pop
out
cwtl
cltd
iret
jecxz
ret
sbb
stos
bound
outsb
xchg
icebp
push
mov
mov
ja
pop
mov
push
or
jns
jl
mov
test
es
jbe
ror
std
jg
incl
in
sbb
sub
stos
sarb
jno
scas
js
dec
imul
push
cmp
dec
pop
out
movsl
std
inc
sbb
aad
sbb
cmpsb
xlat
mov
xchg
pop
call
test
int
aam
imul
pushf
dec
into
sub
add
xor
cmpsl
lock
add
or
jg,pt
inc
jne
mov
push
div
mov
jge
repnz
pop
push
lock
arpl
push
ds
or
shll
and
mov
mov
mov
push
arpl
sbb
movsl
fs
and
pop
jnp
add
mov
mov
adc
cmp
cmp
push
jno
movsb
and
pop
mov
mov
mov
mov
lret
out
pop
int
and
bound
ja
or
hlt
inc
pop
jae
dec
add
outsb
lret
xor
icebp
cmp
fsubrl
jne
jae
and
push
jne
mov
mov
or
lahf
xchg
fistps
pop
push
jmp
sbb
into
mov
movsl
cmc
mov
xchg
out
push
repz
sbb
pop
test
sbb
out
dec
mov
fstpl
int
cli
cmp
dec
repz
sti
push
pusha
fwait
mov
fdivs
add
pop
adc
add
cmpb
mov
in
mov
xchg
pop
ss
sti
hlt
leave
jo
pop
or
mov
pop
inc
mov
and
inc
insl
pop
cs
lds
pop
jg
test
and
dec
or
xor
xchg
es
sub
cmp
lods
sbb
xchg
or
lcall
mov
push
fiadds
outsl
xor
sti
lock
into
add
xor
pusha
call
add
adc
sbb
inc
jmp
or
addr16
cld
adc
and
cs
jno
jb
dec
lcall
rcrb
xchg
and
cwtl
push
cmp
and
sbb
pop
rcr
push
jbe
xor
fistpll
mov
leave
xchg
out
mov
sbb
out
push
cmp
cwtl
inc
pop
add
insb
mov
cs
dec
and
push
call
gs
jb
xor
clc
pop
add
rcll
clc
jge
test
xor
icebp
cmp
cmp
push
int
scas
pop
jmp
mov
cmpsb
ret
fs
dec
pushw
arpl
inc
mov
idivb
xchg
add
xchg
pop
dec
aad
sbb
clc
cwtl
pop
stc
rol
add
repnz
pop
insb
push
push
fistps
cmp
cmp
cmp
clc
inc
inc
mov
pop
jp
clc
mov
mov
loop
sub
pop
xchg
scas
sti
insb
out
mov
test
xchg
pop
jl
cmp
and
inc
push
fstpl
out
pop
sbb
insl
push
add
je
pop
add
pop
pop
mov
into
lahf
sub
and
push
aas
xor
outsb
mov
lods
xchg
and
scas
into
or
sbb
call
pop
scas
push
lock
xchg
add
jl
jmp
jb
aas
pushf
push
cmp
addr16
push
aaa
aam
popf
cmp
jp
jne
and
add
cmp
mov
in
inc
insl
push
adc
or
in
lods
sub
xchg
dec
push
fcompl
xlat
pop
fnstcw
dec
std
xchg
add
mov
xchg
xchg
push
add
cmp
cmp
int3
push
test
outsb
mov
adc
daa
xchg
jp
das
aad
mov
addr16
scas
or
lret
repz
movzbl
cmpsb
enter
fwait
mov
lcall
jmp
insb
imul
insb
dec
mov
pusha
push
jbe
into
add
mov
repz
sub
sbb
and
arpl
push
mov
sbb
fstps
test
in
or
lret
test
loopne
and
icebp
std
pop
out
jecxz
inc
add
popa
dec
xor
sar
mov
cmpsb
and
dec
adc
imul
cmc
movsb
mov
inc
fidivl
loopne
dec
mov
lods
pop
rcpps
dec
xor
xor
out
push
cmp
cwtl
sub
mov
sbb
inc
aam
xlat
xor
js
adc
sub
xor
jbe
mov
pop
add
addr16
fisubs
ss
cld
lods
add
fs
xchg
push
xor
clc
push
int
clc
mov
cmp
into
mov
fildl
sub
icebp
or
pop
popf
ret
lret
in
cli
inc
mov
pop
out
sub
daa
daa
movsl
inc
mov
sbb
mov
decl
pop
loope
dec
mov
fistpl
je
cmpsl
xor
es
xchg
pop
mov
jo
fwait
sub
lock
out
xor
out
sub
cmpsb
or
pop
arpl
pop
cltd
fwait
mov
fwait
popf
rorb
call
push
shrl
inc
sahf
cltd
into
popa
scas
icebp
inc
pop
arpl
sti
mov
scas
aad
add
jnp
and
xlat
mov
popf
popf
test
imul
jo
jle
mov
insl
rclb
push
mov
cltd
adcl
push
jb
adc
pop
nop
push
push
and
scas
ret
aam
cmp
push
popf
rol
inc
dec
addr16
cmpsl
mov
dec
xor
inc
scas
mov
lods
mov
pusha
cmp
loop
cltd
insl
pop
mov
inc
fsubp
pop
and
notl
add
xchg
sub
nop
dec
int
pop
dec
sbb
xor
rcr
enter
mov
pop
ret
std
cwtl
inc
ret
cmp
sub
scas
stos
and
mov
stos
mov
sti
xchg
xchg
das
push
cmp
push
hlt
mov
daa
cmc
movsb
jo
lahf
or
mov
xorb
mov
out
imul
push
cld
js
pop
cmp
or
mov
jnp
xchg
movsl
fisubl
mov
ret
decl
pop
jnp
inc
pop
inc
xchg
dec
popa
xchg
scas
cmp
mov
js
mov
cmp
pop
in
ds
and
test
mov
neg
cmp
sub
fucomip
mov
int
dec
ficoml
dec
das
fucom
aam
or
aam
inc
jne
xchg
or
jnp
xor
outsb
and
lahf
decb
xor
and
xchg
fwait
ljmp
fidivrs
push
icebp
push
xor
sub
or
out
cmp
inc
cmp
add
out
jge
neg
add
cmp
fists
movsb
insl
fmuls
and
shl
rorl
pop
cld
test
pushf
jmp
stc
jno
sub
jp
xchg
xor
xchg
mov
or
sbb
xchg
sub
add
push
pop
loopne
mov
mov
xchg
aam
ja
ret
and
mov
cmp
lcall
scas
incl
inc
xchg
ss
inc
fwait
and
jecxz
inc
lea
pop
xor
pop
cmp
je
ss
mov
int3
loop
popf
xor
mov
popf
dec
test
or
mov
xchg
movsl
leave
cmp
push
push
lcall
icebp
pop
sub
aam
pop
flds
pop
add
mov
push
lret
add
or
andl
aaa
outsb
sbb
rol
nopl
sbb
jp
imulb
les
cmp
inc
sub
push
cltd
push
fsubs
push
ffree
out
sub
jns
sbb
dec
inc
sub
mov
imul
outsb
sti
inc
or
repnz
mov
dec
fstpt
insl
adc
or
cmpsl
icebp
sub
pop
test
ss
xor
mov
mov
pushf
push
pop
push
add
mov
inc
mov
je
mov
movsb
jb
fsubrl
xlat
roll
sub
jmp
adc
mov
loope
pushf
cmpsb
push
jp
decb
in
hlt
test
mov
insb
cld
outsb
xchg
cmp
jl
leave
pushf
pop
sub
es
pop
les
cwtl
xlat
add
pop
xor
cmp
sbb
enter
push
je
cmc
xchg
arpl
imull
imul
dec
xchg
mov
stos
fidivrs
lds
jno
cmp
cmp
pop
sbb
pop
xchg
push
test
int3
cmp
imul
or
xor
mov
inc
roll
fldt
ret
icebp
push
lods
jae
sbb
and
insb
aam
out
add
mov
popa
test
popf
jg
outsb
cmpsl
orl
dec
jle
adcl
push
and
adc
mov
popa
fucomi
sub
lods
loop
sti
das
js
mov
mov
xlat
sahf
loopne
hlt
lds
pop
dec
pop
jb
pop
cmc
addr16
daa
loope
push
lods
pop
mov
jne
sub
stos
pop
shlb
and
iret
cmpsb
es
and
or
loopne
loope
pop
add
stc
inc
push
xchg
je
das
adc
and
add
mov
xchg
jns
mov
fdivp
scas
pop
jg
movsl
outsl
and
insb
sub
int
mov
scas
jp
filds
xchg
xchg
add
fmuls
mov
pushf
repnz
pop
je
xchg
inc
fs
cmp
icebp
and
xchg
push
sub
push
jle
lret
fnstenv
imul
sub
mov
jecxz
scas
pop
cmp
lahf
es
ss
push
test
pop
stos
out
add
out
out
pop
rorb
add
mov
mov
int3
popa
or
rcrb
shll
icebp
mov
inc
jle
add
cwtl
adc
call
fucomi
cmp
mov
push
cwtl
fbstp
pop
aad
mov
insb
add
xchg
cltd
jno
dec
push
fwait
cmp
aam
mov
mov
push
xorl
test
shl
out
push
fistl
mov
mov
and
addr16
aam
cmc
loopne
push
and
pushf
sub
add
mov
sub
add
arpl
add
sbb
sti
addr16
out
xorb
scas
ret
subb
push
addb
lret
outsl
mov
fcoms
and
imul
lods
sbb
mov
dec
aad
shrb
test
clc
cmp
mov
bound
lock
gs
lret
dec
push
jb
insl
xchg
pop
adc
push
xchg
or
xlat
cmp
sbb
adc
scas
int
sahf
popf
jmp
push
jge
in
bound
adc
repz
loop
cmpb
aaa
or
sub
push
and
shr
out
daa
pushf
inc
xor
scas
pop
in
pop
sub
leave
and
mov
in
ss
addr16
jge
int
mov
mov
ds
pop
or
hlt
pop
jb
xchg
cmp
pop
in
icebp
xor
sbb
popf
dec
xor
adc
pusha
add
imull
imul
or
or
std
jnp
push
arpl
push
jbe
cs
sbb
xchg
test
mov
jnp
in
popf
out
ja
and
imul
fstpl
mov
pop
inc
jle
lock
cmp
imul
cltd
mov
xchg
sbb
cmp
stc
mov
inc
jmp
add
mov
add
cmpsl
and
jo
xchg
test
sbb
cs
adc
or
cmp
adc
jnp
pop
mov
int
stos
or
out
rorl
xchg
sti
outsb
das
test
addb
dec
pop
daa
and
addb
lcall
dec
in
aas
mov
adc
dec
aam
ret
adc
out
loop
rcrb
test
aam
fistps
pop
lds
pop
and
mov
lcall
icebp
pusha
pop
pop
xor
in
pop
ss
out
dec
ror
subl
jg
mov
popa
mov
bound
rorl
rclb
pop
sub
int3
push
daa
ret
in
xchg
inc
xchg
jnp
sub
inc
les
daa
or
shll
fmuls
adc
cmp
adc
shlb
enter
adcb
aaa
test
lret
inc
daa
cld
enter
xlat
sbb
and
shlb
repnz
ljmp
cmp
add
pusha
pop
sub
stc
aas
xor
cld
jno
dec
or
inc
movlps
ljmp
ss
jne
add
notb
sub
add
mov
or
xor
dec
aam
sbb
unpckhps
mov
pop
loope
add
adc
adc
pop
push
pop
andb
popf
cmc
mov
notl
loope
ficomps
or
xchg
loopne
adc
movsb
mov
fsubrl
in
out
in
stc
movsl
fisubl
sbb
lods
jle
fwait
mov
jmp
add
popf
mov
pop
out
orb
data16
mov
dec
loopnew
nop
popf
add
cs
cmpsl
aad
add
jmp
lcall
das
cmp
ja
sub
adc
and
dec
insb
pop
cmpb
nop
cwtl
hlt
test
aad
lahf
ret
add
push
ss
out
shrb
sbb
inc
lea
addr16
div
rclb
jne
xor
movd
xor
pop
fdivp
js
xchg
and
iret
fldenv
outsl
jp
call
cmp
sbb
jo
lahf
push
push
or
sahf
cwtl
repz
and
mov
vpsllw
pop
int3
sub
pop
jo
dec
bound
jno
pop
xor
cmp
pushf
repz
ds
es
pop
pop
xor
and
jns
pop
daa
lahf
add
notb
out
push
jns
in
scas
push
daa
mov
mov
push
mov
in
mov
pop
roll
xor
cwtl
add
adc
pop
daa
push
int
aaa
into
push
mov
add
mov
sbb
mov
in
popa
mov
lcall
imul
pop
pop
out
push
jo
ret
es
pop
jp
push
scas
inc
mul
rcr
out
push
out
pop
iret
and
pushf
and
fistpl
mov
xchg
push
xor
cs
test
jge
pop
or
jp
pop
jne
xchg
and
shlb
xchg
setae
xlat
mov
stc
in
jno
or
pop
data16
fnstcw
pop
dec
mov
scas
cmp
imul
jo
xor
test
stc
mov
je
adc
jno
push
fcmove
hlt
jmp
repz
aas
adcl
sub
lock
in
or
daa
xchg
add
aaa
jmp
sub
in
aam
xchg
xchg
xor
fidivrs
aaa
mov
jp
in
jmp
clc
pop
push
cmpsb
xchg
in
and
sbb
add
add
and
aam
insl
cld
addl
add
push
jo
leave
cmpsb
cld
sub
sbb
and
cmp
push
jle
popf
fbstp
add
es
fists
mov
jge
cmpsb
inc
pop
adc
mov
xor
xorb
cmp
mov
scas
mov
movsl
dec
inc
repnz
cltd
dec
stos
fmuls
sub
mov
fdivs
sahf
xor
out
ljmp
pusha
fsubr
and
dec
adc
dec
push
push
and
repnz
ret
test
ja
push
ds
pop
inc
out
adc
test
sbb
mov
out
in
pop
xchg
outsl
sub
addr16
sbb
xchg
lods
sub
jne
loope
xchg
mov
sub
orl
push
inc
call
or
call
sbb
rorl
lock
in
cmp
fiadds
mov
shll
dec
inc
inc
sbb
jg
sbb
movsl
imul
cmpb
movsl
mov
push
fs
cmp
movsb
dec
push
pop
dec
push
or
mov
push
push
insl
push
mov
jp
fists
ja
cmp
add
rcll
push
insb
je
aad
leave
push
cli
pop
in
lods
or
imul
in
push
addr16
sub
inc
int3
push
test
ret
and
jg
pusha
aad
mov
or
imul
sub
mov
mov
adc
sbb
inc
ja
mov
dec
and
sub
jnp
or
pop
cmpsl
mov
popf
xor
popa
push
stos
dec
dec
hlt
push
testl
je
inc
rcl
inc
test
into
and
cld
loopne
in
sbb
push
xor
mov
gs
adc
cli
xor
fbld
popa
lret
jmp
or
mov
roll
fnstenv
arpl
jnp
cli
sti
fwait
lods
fstps
adc
cmc
iret
xor
iret
add
sub
fsubrl
hlt
jge
out
sarl
and
lret
mov
and
cmc
adc
test
insb
push
inc
scas
imul
lahf
mov
repnz
int3
scas
push
inc
adc
sub
push
xchg
cmp
pop
out
mov
rcll
push
mov
cmpsl
jno
or
lcall
enter
es
and
cli
xchg
cmp
sub
insl
adc
insb
test
ret
and
rorb
subb
jne
adc
lods
into
and
ret
cmc
out
fimuls
inc
jmp
push
xchg
andb
popf
test
lret
inc
mov
pop
or
and
lret
jmp
es
divb
jns
mov
pop
add
push
ss
push
adc
sub
push
push
mov
mov
push
or
jl
fs
fsubl
das
repz
and
push
mov
push
cmp
aaa
das
jmp
mov
or
in
add
dec
pusha
mov
sub
sbb
ficoml
cltd
pop
cmp
and
add
jns
arpl
cltd
mov
dec
inc
pop
popa
jbe
mov
sbb
roll
pop
push
jge
mov
cmc
adc
jae
fnstsw
fadds
lcall
jae
sbb
pop
das
add
sarb
in
out
mov
sbb
dec
cld
or
lock
add
inc
add
rolb
jo
add
rolb
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
mov
add
add
add
aam
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
test
add
in
lock
and
add
in
add
add
add
or
add
adc
add
in
add
add
add
sbb
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
mov
icebp
cmp
js
jae
dec
cwtl
aas
aaa
inc
enter
arpl
call
jp
xchg
sub
imul
add
dec
pop
sarb
dec
xor
adc
subb
mov
and
pushf
scas
scas
loop
sbb
divb
xchg
mov
lods
pop
xor
outsb
pop
add
and
pop
movsb
dec
add
enter
pop
mov
push
movsb
test
cmp
lahf
into
add
dec
dec
aam
outsl
mov
push
adc
call
xchg
push
aaa
jle
cmp
inc
subl
insb
cmp
xchg
adc
out
adc
popa
in
and
mov
jno
bound
cmpsl
pop
jg
sbb
out
hlt
scas
jg
pop
sub
imul
xchg
xor
in
pop
mov
fsubl
dec
mov
pusha
or
or
je
ret
cmpsb
xchg
out
gs
inc
stos
xchg
jo
xchg
test
sbb
push
ss
lds
inc
lock
fbld
dec
out
outsl
imul
mull
jge
xchg
mov
mov
add
dec
dec
sbb
mov
shrb
int
insb
cmovle
push
mov
sbb
inc
test
iret
sarb
xor
push
testb
in
jle
jp
call
pusha
ss
imul
rcrl
lods
and
scas
mov
mov
cmp
cmp
push
mov
cmp
mov
cmp
cs
stc
sbb
push
pop
cmp
jb
sbb
pop
gs
movsl
push
jno
mov
xor
movsb
jo
cmp
inc
shrl
into
push
cmp
cmp
jge
push
and
sbb
add
test
sub
add
sahf
arpl
shlb
gs
xchg
fbld
movsl
rcrl
xchg
int3
mov
mov
add
fldl
bound
xor
in
mov
outsb
mov
cld
sbb
lock
mov
inc
pop
insb
push
ret
js
cmovb
jne
ret
popa
jno
mov
stc
out
stos
mov
mov
add
xor
scas
loopne
gs
jns
and
jecxz
xor
mov
cmp
push
mov
cmpsl
add
cmp
inc
add
and
clc
jne
movsb
sbb
and
xchg
test
imul
lahf
sbb
cmp
xchg
push
jae
popa
movsb
pop
pushf
pushf
mov
repnz
jns
add
jbe
test
dec
jnp
mov
rcll
cmp
pusha
add
lds
mov
xlat
cmpsb
shrb
xor
xchg
pop
es
xchg
jae
out
push
xchg
xchg
adcb
xchg
cwtl
or
out
xchg
cmp
xchg
cltd
fists
sbb
aad
push
stos
dec
mov
xor
mov
mov
push
gs
pop
jb
push
mov
xor
cmp
or
inc
jg
rorl
in
shr
int
pop
out
jle
adc
dec
and
mov
out
sbb
jno
xchg
inc
stos
cmp
imul
inc
xchg
out
jecxz
push
ljmp
push
fwait
push
xchg
movsl
xchg
arpl
inc
fwait
shrb
cmpsb
mov
mov
xor
psadbw
lea
mov
sbb
js
daa
pusha
daa
cmpsl
fidivs
cmp
and
pop
or
xor
pop
add
xor
or
fadds
and
mov
out
mov
fldt
inc
pop
cmp
daa
popf
mov
fsubrl
jb
xchg
sub
add
ficompl
sbb
and
and
jbe
cwtl
leave
bndstx
aas
jmp
jle
sub
cmpsb
int3
xor
leave
arpl
jne
fninit
mov
nop
push
loope
js
movq
clc
fsubrs
sahf
add
pusha
jns
mov
fbld
negb
pop
pop
ss
xor
sarl
nop
jns
fbld
mov
scas
and
add
aam
lods
mov
fmull
sub
jge
xor
loopne
push
out
clc
out
push
pop
lods
cltd
sbb
aad
arpl
cmpsl
add
sbb
test
repz
pushf
cmp
xor
xchg
scas
jne
inc
test
dec
iret
subb
insb
pop
scas
pop
std
xchg
es
fwait
mov
jb
cs
mov
jno
push
xchg
lods
mov
xlat
sub
adc
fwait
add
pop
and
cs
in
mov
rorb
cmpsl
push
rolb
jmp
adc
nop
push
or
mov
fdivrs
mov
rcrb
sub
mov
jecxz
pop
dec
mov
mov
inc
jae
xor
std
test
gs
xor
xor
sahf
mov
or
mov
jl
xlat
cmpb
ljmp
sbb
pop
in
les
and
ds
daa
and
adc
adc
aad
dec
sbb
add
in
js
scas
mov
arpl
mov
test
sub
ja
cmp
add
outsb
cmpsb
out
jmp
push
mov
mov
sub
add
push
out
imul
or
ljmp
outsl
adc
or
and
into
mov
sbb
xor
adc
sbb
repz
ret
sti
and
loop
adc
push
mov
xchg
cmp
mov
sub
inc
inc
or
push
sti
ucomiss
rcll
rcll
lods
dec
sbb
pop
xchg
inc
jbe
popa
int3
in
pop
daa
cmp
test
loope
dec
sub
inc
xor
stos
into
jnp
or
or
jg
pop
pop
aaa
or
fimuls
in
dec
into
incl
xor
cmc
pusha
push
arpl
sbb
xchg
sub
xchg
sub
add
ret
fs
cmp
xor
add
rorl
lods
or
ss
aas
out
fldl
adcb
scas
inc
xlat
inc
in
mov
frstor
dec
cs
addr16
push
xchg
jnp
pop
push
sub
cmp
push
sbb
ds
xchg
ja
inc
icebp
pop
mov
mov
fadds
jmp
loop
divl
nop
inc
mov
cmp
jp
pop
test
mov
je
std
adc
adc
add
inc
rcrl
jbe
fwait
aam
adc
add
cmpsb
sub
adc
xchg
and
fistl
add
outsl
imull
push
out
movsb
xchg
inc
jne
data16
cmpsl
push
std
jg
sub
rorb
shrb
gs
daa
jns
jne
repz
pop
repz
jmp
lods
sti
or
lret
cmp
pop
test
pop
add
jp
imul
movsl
out
insb
dec
scas
xor
lock
pop
mov
sahf
enter
pop
out
mov
aad
xor
push
test
push
lret
dec
sbb
sbb
insb
mov
sbb
pop
out
and
xor
mov
clc
pop
xchg
rorl
sar
jne
pop
shlb
shl
fldenv
fcomps
clc
test
flds
in
or
jb
inc
push
jnp
adc
and
pop
xor
push
jmp
jp
push
loopne
or
jle
cmp
cli
pop
loopne
fwait
sbb
xor
outsb
adc
insb
xchg
rolb
cmp
test
mov
pushf
sbb
lret
je
pop
cmp
mov
and
sub
out
mov
jnp
repnz
push
add
jnp
pop
mov
inc
int3
sbb
loope
pop
and
shrl
push
pop
inc
sbb
push
fs
outsb
adc
xchg
pop
leave
inc
cwtl
jbe
mov
jnp
sbb
cmpl
lret
xor
jge
jmp
pusha
lods
xor
xor
pop
xchg
cld
xor
cmp
add
fnsave
mov
adc
push
and
ja
stos
pop
pop
adc
adc
sub
sub
jmp
mov
fs
xchg
mov
popf
xchg
or
lods
iret
fdivrs
ret
mov
dec
jae
repz
dec
aam
sbb
mov
negl
subb
imulb
push
lret
mov
rorb
js
jge
ror
xchg
popf
cwtl
jl
push
xchg
movsl
push
and
shll
lea
xchg
mov
inc
adc
ds
addr16
inc
outsl
imul
mov
mov
xor
test
xlat
leave
sub
sub
pop
bound
add
std
add
cmp
and
fdivs
out
jmp
loopne
imul
mov
adc
push
aad
aam
or
and
lret
inc
ror
lods
shrb
imul
jnp
dec
fcomip
push
xchg
stos
cmc
or
sahf
mov
lret
sbb
div
push
cmp
sti
gs
std
aad
ficompl
xchg
popf
dec
cmp
mov
dec
hlt
sarl
sbb
lret
imul
add
pop
adc
mov
push
sbb
leave
mov
mov
aas
push
idivl
push
jecxz
mov
addr16
insl
dec
jmp
lods
lods
movsl
cmp
and
pop
push
fisubrl
jae
xchg
ds
jge
outsb
int3
xchg
and
movsl
jnp
je
push
enter
sti
xchg
out
add
fwait
push
cmp
divb
push
inc
addr16
push
xchg
adc
gs
mov
inc
shrb
pop
xchg
out
cmpb
aam
adc
xchg
aas
lahf
nop
adc
imul
das
sbb
sbb
add
imul
xchg
rol
mov
push
xchg
repz
test
cmp
dec
mov
adc
adc
sarl
inc
mov
push
or
push
lcall
cld
sti
dec
mov
divb
cmp
pop
cmpsl
insl
cmp
fsubl
std
pop
push
repnz
mov
icebp
outsb
mov
cwtl
xchg
lds
popf
pop
pop
sti
arpl
pop
nop
mov
mov
push
insb
clc
mov
repnz
xchg
pop
push
ret
mov
jg
mov
bound
or
inc
mov
out
pushf
out
in
andl
mov
test
jge
mov
outsb
ficoml
xchg
cmp
test
jbe
sbb
test
ss
lock
nop
inc
cli
sub
inc
imulb
mov
inc
in
mov
jl
iret
xor
lcall
es
push
push
or
ljmp
sub
ror
pop
adc
add
push
xchg
or
loope
mov
pop
mov
or
ss
pop
and
sub
insb
mov
jmp
into
pop
das
aaa
inc
call
nop
inc
cmc
sti
mov
pop
inc
jb
outsb
shlb
popf
aad
mov
mov
aam
and
push
mov
ja
adc
sub
cmp
and
icebp
and
mov
lea
icebp
xchg
add
pop
fcmove
clc
sbbl
and
js
sti
mov
popf
inc
sbb
loop
xchg
sbb
pop
mov
lret
lcall
and
ret
cmp
pop
xor
cmp
dec
insb
pop
jle
mov
xor
je
shll
fldenv
jnp
mov
arpl
mov
adc
lahf
sub
clc
xchg
push
pop
sub
or
sbb
fucomip
push
xor
inc
ljmp
es
fisttps
jne
inc
repnz
adc
jnp
cmp
nop
xor
jbe
cmp
and
sahf
inc
ret
out
xchg
dec
sub
fbstp
cmp
sub
jnp
js
mov
pop
add
fbld
and
pop
test
aad
repz
mov
mov
inc
mov
popf
push
mov
cld
out
mov
mov
sub
or
push
xchg
fsubrl
mov
out
xor
scas
enter
das
mov
into
icebp
std
mov
or
pop
jg
xchg
int
add
cmp
xchg
faddl
fidivrl
mov
jle
pop
sbb
or
outsl
mov
js
scas
jns
test
jge
jnp
push
add
out
adc
pushl
in
xchg
cmp
xchg
cmpsl
lock
push
lods
fwait
sti
fidivrs
fcmovu
pop
mov
in
aam
and
adc
mov
and
es
popa
jle
cmp
loopne
insl
leave
mov
lods
and
test
xlat
lahf
sbb
xchg
inc
inc
add
fdivrs
iret
or
arpl
xor
cld
lea
sub
imul
scas
popf
inc
je
fdivs
lahf
inc
aas
or
hlt
ret
loopne
xor
outsl
ja
hlt
into
push
sub
mov
jp
or
jl
and
or
xor
sbb
inc
jl
in
sub
jecxz
pop
add
mov
dec
mull
js
add
repz
movsl
divl
mov
popa
ljmp
repnz
stos
sub
cltd
sbb
leave
iret
lods
ret
imul
fstp
pushf
sub
push
jo
mov
jno
nop
lahf
shr
fimuls
cmp
rcrb
pushf
cmp
movsb
sbb
mov
dec
adc
or
or
notl
test
sub
mov
and
push
je
enter
lock
xchg
inc
mov
mov
out
sbb
arpl
sbb
sahf
mov
call
xor
ja
pop
in
mov
pop
sbb
jae
and
cmp
rorl
jle
icebp
add
adc
lret
notb
sub
dec
enter
movsb
mov
mov
push
les
push
nop
dec
leave
push
in
lods
cli
mov
mov
xchg
lods
stos
add
bound
or
and
inc
xchg
lea
jne
push
fs
sahf
dec
pop
mov
sahf
adc
insl
pusha
sub
jo
testb
lret
pop
xchg
jmp
iret
pop
prefetch
dec
mov
scas
and
dec
mov
adc
iret
jae
xorb
repnz
dec
mov
sub
mov
jne
push
das
gs
movsb
in
xlat
jecxz
nop
cmpsb
rcrl
divb
leave
ret
dec
les
clc
lret
fidivs
adc
mov
fsubr
mov
xchg
sub
ret
jge
idiv
fwait
sbb
test
pop
push
mov
push
int
sub
rorl
sbb
and
push
test
mov
xor
repz
add
and
arpl
loopne
push
mov
imul
sbb
xchg
aad
xor
aam
xor
stc
cmp
push
les
mov
orb
out
fcoms
add
and
or
add
sti
cmp
mov
inc
cwtl
ljmp
lds
jge
mov
clc
mov
cmp
jg
adc
adc
ret
push
in
loopne
pop
mov
push
movsb
inc
imul
leave
add
xchg
mov
cmpsl
pop
sarb
dec
mov
pop
lahf
or
call
mov
and
cmp
sbb
dec
loope
es
or
cli
es
lock
ret
jl
inc
ss
lcall
jp
fcom
shlb
rcrl
push
ss
popf
scas
pop
sub
arpl
dec
popf
pop
and
xchg
ja
shll
sbb
out
mov
mov
mov
inc
repnz
dec
aad
rcrb
or
or
jae
ja
cmp
shlb
sub
pop
fucom
mov
addb
inc
jp
mov
mov
mov
popf
cmp
ss
sub
mov
xchg
xchg
popa
mov
sahf
inc
inc
inc
pop
jge
lahf
jo
sub
jno
lds
pop
insb
mov
addr16
mov
ja
hlt
push
or
fldl
push
and
xchg
cmp
adc
push
shrb
and
pop
mov
leave
lods
inc
testb
loope
sbb
sbb
inc
add
out
fldcw
xchg
jl
or
mov
gs
xchg
jmp
mov
mov
insb
sbb
repz
dec
push
xchg
cld
cmp
leave
iret
mov
bound
cwtl
pusha
aas
jno
mov
mov
mov
add
add
xchg
sahf
jecxz
roll
add
inc
or
pop
xlat
push
mov
pusha
cld
inc
movsb
das
pop
mov
mov
out
pop
jmp
movsl
jge
push
add
pop
inc
jb,pn
mov
dec
pop
outsl
rcll
mov
fildl
sarl
or
push
push
call
xor
mov
sbbl
popf
nop
outsl
pop
insb
insb
loope
adc
sub
mov
inc
mov
jg
inc
pop
cmpsl
push
leave
pop
ds
cli
mov
enter
test
insl
jmp
lods
or
in
test
or
scas
push
and
bound
arpl
mov
and
imul
lret
xor
xchg
aam
pop
mov
cwtl
dec
jle
sub
mov
sub
pop
and
out
xchg
mov
add
cltd
dec
out
aad
imul
rolb
leave
adc
xchg
stc
push
mov
inc
xlat
add
mov
xor
rorl
loopne
negb
call
aas
lds
fdiv
es
jnp
sub
fs
cmp
jb
xchg
pop
in
push
scas
lea
pop
popl
jno
push
sub
or
xchg
cwtl
fdivs
inc
and
test
pusha
popf
icebp
add
aam
xchg
push
cld
add
push
or
xchg
inc
rep
out
int
imull
daa
and
xchg
xchg
lret
cmc
pusha
sbb
ss
shlb
ffree
xchg
mov
pushf
out
hlt
cmp
and
dec
jg
xchg
test
in
lock
testb
clc
negb
push
pop
xor
xor
addr16
fcoml
out
das
lods
sbb
sub
inc
andb
hlt
push
lret
jge
mov
ljmp
adc
ljmp
or
jl
inc
ret
aaa
xchg
mov
js
jo
mov
and
mov
adc
cs
add
pop
std
dec
jbe
pop
mov
adc
adc
jmp
aas
mov
dec
jg
cwtl
shl
push
mov
dec
pop
push
xchg
xchg
out
and
jno
in
mov
scas
adc
outsl
or
cmc
jmp
xchg
in
jnp
ljmp
mov
xchg
cmp
lods
sti
dec
aam
xor
insb
xchg
jne
daa
xchg
mov
pushf
xor
xor
icebp
xlat
scas
xor
push
aad
inc
cmp
sub
stos
pop
jp
push
mov
jecxz
dec
xor
mov
jo
add
mov
sarb
pop
sub
je
loope
dec
imul
pusha
mov
scas
or
idivb
mov
cltd
dec
cmp
sbb
test
push
push
and
push
push
xchg
movsb
add
jp
inc
loopne
out
addb
xor
push
stc
push
clc
pop
call
lds
mov
mov
or
pop
loopne
data16
pop
fnstenv
les
and
mov
into
enter
cli
mov
jns
or
gs
push
movsl
pop
adc
and
orb
push
out
push
inc
andb
mov
cs
jge
and
fisubrs
aad
lock
mov
adc
test
mov
lock
inc
testb
cmc
ss
inc
adc
scas
mov
test
sbb
xchg
adc
inc
xchg
pop
addb
mov
imul
rol
add
aam
lods
mov
push
mov
xchg
cli
hlt
xchg
gs
leave
mov
sub
lret
fsts
loopne
push
test
cmp
scas
cld
adc
pop
mov
jo
cmp
aam
push
jl
add
cmp
adc
adc
mov
adc
jl
or
mov
pop
mov
dec
mov
ret
push
xor
hlt
mov
cmp
push
scas
mov
pop
or
sbb
cmp
stc
daa
lcall
mov
movsl
mov
insl
lret
cltd
sub
jno
push
inc
ret
icebp
push
out
jl
and
xchg
sub
xchg
push
sbb
mov
xchg
cmp
out
jp
mov
cmpsl
dec
jge
cld
mov
int3
lds
out
mov
jns
lea
jl
sub
mov
int3
call
pop
aam
adc
leave
inc
or
rcll
mov
jmp
lea
mov
lea
push
xor
fwait
dec
out
movl
sarl
cs
sbbl
pop
mov
insb
into
mov
in
or
push
xor
pop
shrb
cmp
jecxz
adc
sub
push
out
dec
jae
sbb
sub
xor
xchg
call
ret
pop
lret
insb
cltd
xchg
add
popf
paddb
test
js
cltd
pop
push
sub
sub
xchg
aaa
push
test
mov
fcmove
in
test
inc
daa
popf
dec
cli
inc
push
mov
mov
push
icebp
or
mov
data16
out
push
mov
dec
xchg
and
movl
icebp
ja
fs
cmp
fwait
aas
gs
mov
call
pop
jno
test
out
dec
lahf
cmp
or
lcall
test
mov
xor
out
imul
jb
nop
das
sahf
ljmp
jno
xchg
pop
mov
rcll
repz
mov
sub
lret
xor
lret
cli
xchg
push
inc
data16
push
sub
ficoml
mov
pushf
mov
pusha
adc
sbb
mov
jne
enter
cmp
mov
jp
movsb
adc
mov
and
dec
aam
add
sbb
arpl
push
sbb
pop
inc
cli
ja
mov
pop
mov
popf
outsb
mov
inc
ljmp
pop
adc
push
dec
cmp
xor
outsb
rorb
pop
test
jmp
jo
add
xor
inc
fcoml
fisttps
aas
cmc
imul
mov
test
iret
mov
push
lahf
and
pusha
je
lret
inc
pop
add
xlat
or
xor
shll
pop
sub
push
xor
push
dec
ljmp
xor
insb
push
xchg
inc
pop
xchg
addr16
insl
push
cmp
out
mov
jb
mov
jo
jl
sub
xchg
cs
jmp
dec
nop
popf
in
dec
cmp
mov
push
xor
xchg
xor
inc
xor
out
or
dec
add
inc
jmp
or
in
mov
stc
sahf
mov
insl
xchg
push
scas
or
in
adc
jp
das
sub
jb
iret
jne
jbe
daa
or
mov
or
rol
sub
iret
pop
cmp
and
sub
daa
cmp
inc
fldt
data16
and
ret
xchg
dec
adc
andb
mov
xor
jecxz
popa
aas
jb
adc
repz
jbe
mov
outsb
cltd
jae
xchg
mov
mov
mov
out
mov
call
mov
ja
aad
sbb
push
push
push
scas
lret
xchg
popa
xchg
imul
aad
jl
lods
push
ss
fdivs
dec
xchg
jo
lods
mov
xchg
call
mulb
stc
popf
mov
testb
repz
je
xchg
jb
movsl
bound
inc
andb
out
mov
pop
adc
and
add
inc
rcll
mov
jns
movsb
cmp
lea
cld
test
fsubrs
adc
idiv
lea
mov
xor
ret
dec
mov
cmp
iret
and
hlt
dec
ficoml
popa
xchg
nop
mov
mov
dec
sub
add
push
loope
mov
bound
xor
sbb
idivl
insl
ja
inc
scas
lods
mov
leave
cld
enter
push
xchg
mov
gs
pop
cmp
push
fsts
add
dec
subl
cmpsl
int3
or
mov
push
je
inc
dec
inc
xchg
sbb
or
adc
inc
and
daa
inc
leave
dec
fidivs
push
dec
aaa
xchg
xor
mov
sub
sub
cli
mov
pop
sti
mov
inc
clc
mov
int
push
mov
push
sbb
jno
outsb
xlat
imul
and
dec
aas
andl
adc
inc
std
pop
call
popa
dec
dec
setne
test
dec
icebp
in
xor
jnp
and
daa
adc
mov
mov
nop
sahf
add
push
pop
cmp
mov
jb
push
mov
pslld
int
lods
dec
mov
xor
lret
mov
cmp
xchg
jbe
int3
push
sahf
leave
add
movsl
inc
cmpsb
addr16
inc
fbstp
sub
jo
mov
or
jecxz
sarl
repz
mov
into
or
in
popa
adc
daa
lea
xchg
sbb
mov
sarl
clc
lds
or
cmp
bound
cmp
cmpsb
pop
imul
push
mov
jmp
fistps
fsts
test
lock
test
sbb
je
rcll
adc
add
loope
cmpsb
add
push
je
enter
aad
or
imul
les
pop
xchg
mov
dec
sbb
inc
push
and
rcll
xchg
loop
push
out
add
push
push
cmpsb
and
inc
rolb
jnp
outsb
push
dec
jno
jge
sti
dec
mov
fcmovb
test
pop
nop
insb
pop
or
mov
int3
or
pop
iret
push
movsl
movsb
ret
out
dec
push
lcall
iret
push
outsl
imul
sbb
movsb
dec
lock
mov
orl
sbb
jp
fwait
xchg
cmp
dec
imul
mov
mov
dec
inc
les
dec
inc
mov
or
inc
push
push
jmp
mov
jno
or
xchg
orb
or
adc
pusha
arpl
sub
and
shrb
scas
xor
das
fsubrl
and
mov
adc
push
pop
jmp
fstps
daa
jnp
out
daa
and
add
and
and
outsl
pop
dec
dec
shrl
push
daa
mov
xchg
xor
scas
cwtl
sbb
sbb
inc
cmc
rolb
das
push
sub
cmp
mov
mov
add
adc
xor
add
sub
adc
jb
jbe
and
pop
fisubl
fldl
andb
testl
ret
add
sub
jmp
insb
sbb
andl
pop
outsl
mov
and
out
add
je
aam
cmc
negl
cmp
subl
mov
push
mov
popa
sub
pop
xchg
jbe
or
fsub
jae
test
sbb
and
shlb
push
shll
dec
pop
dec
in
popf
fwait
mov
adcl
and
cs
repnz
cmc
outsb
cmp
loop
jp
icebp
sbb
xchg
ja
int
pushf
mov
mov
pusha
adc
xchg
int3
xor
lds
aad
mul
bound
mov
pop
loop
push
adc
test
dec
gs
pushf
sbb
inc
test
and
pop
and
xchg
test
dec
sbb
movsb
dec
das
mov
adc
in
stos
or
xor
cld
ret
mov
pop
in
sbb
sub
int3
mov
cld
repnz
shlb
sub
shl
jns
inc
push
xor
xor
nop
inc
or
lock
jno
xchg
push
int3
js
jge
cmpsl
adc
outsb
stos
adc
fldln2
pop
das
je
fdivrs
mov
pop
inc
ljmp
jl
cmp
push
mov
aaa
sti
push
mov
adc
inc
push
adc
scas
subl
cmp
mov
pop
sarl
jae
int3
lods
nop
std
cmpsl
fdivrs
jne
das
popf
mov
fstps
repnz
sub
popf
ret
cld
hlt
leave
push
inc
lret
pop
dec
bound
bnd
mov
jecxz
push
es
xchg
xchg
xor
jbe
inc
outsb
and
adc
and
push
jbe
mov
repnz
add
dec
lcall
inc
jp
mov
loopne
insl
test
or
mov
mov
lret
lods
rcpps
fs
pop
aam
inc
xchg
pop
sbb
js
ds
or
fldl
inc
inc
add
push
and
loopne
jp
fwait
cmp
call
push
shr
adc
add
inc
popf
andl
mov
enter
fildl
add
idivb
aaa
test
xchg
dec
pop
pusha
inc
icebp
es
in
inc
mov
or
sbb
push
inc
cmp
add
xor
mov
lret
imul
xchg
subb
shr
push
stos
jno
or
sbb
cmp
dec
mov
sbb
xchg
loope
push
shrl
sbbl
adc
sbb
and
inc
inc
xchg
test
or
movsb
jns
les
dec
mov
movzwl
aas
outsl
stc
pop
call
mov
adc
int3
push
out
lret
jno
pop
mov
dec
lcall
sbb
subl
addl
ret
in
jb
and
aam
mov
push
pop
std
ficoml
or
push
shl
outsl
dec
pop
mov
jg
and
mov
jmp
add
shrb
mov
or
pop
mulb
mov
add
test
scas
mov
aam
cmpl
pop
int
popl
sbb
xchg
jo
xor
shl
ss
xor
and
cmpsb
fcoms
mov
pushf
popf
sbb
mov
jno
inc
lods
outsl
leave
aad
loop
rclb
into
sub
xor
sub
push
push
xor
shl
cmp
dec
add
inc
mov
pxor
jl
mov
scas
adc
cmp
mov
inc
std
sub
cmp
mov
and
jns
enter
into
mov
jnp
xchg
sarl
mov
mov
and
data16
movsl
jge
mov
movsl
and
mov
mov
or
fnsetpm(287
loop
jnp
lret
fdiv
adc
mov
jge
pop
int
dec
and
or
sbb
hlt
fs
pusha
lret
jo
cmp
xchg
cld
das
mov
das
sbb
xchg
stos
xchg
mov
or
xor
mov
adc
mov
inc
inc
sbb
js
cmpsl
jb
ret
jecxz
int3
pop
and
outsl
in
xor
pushf
aad
add
mov
xchg
fmuls
xchg
jo
call
xor
jne
dec
mov
mov
adc
push
dec
icebp
xor
mov
jl
fstps
cmp
and
ret
add
pop
sub
and
xchg
dec
adc
xlat
aad
sbb
rorb
aas
inc
andl
scas
ficoml
pop
imul
and
mov
push
std
fildl
xor
push
idivb
inc
dec
fcoms
push
mov
or
mov
sbb
fists
stos
mov
ja
cmpsl
cmp
and
jns
bound
push
popa
jecxz
mov
cmpsl
sub
jg
cmc
bound
movsl
xchg
cmpl
dec
in
pop
pop
or
cmp
jnp
subl
mov
shlb
gs
mov
jns
cmp
jbe
loop
ljmp
in
adc
bound
lock
in
add
mov
movsl
hlt
rol
mov
or
push
ret
mov
les
les
xchg
jb
jae
fidivl
testb
pop
xor
mov
sbb
shlb
rolb
out
mov
pop
and
sub
add
sahf
inc
test
outsl
jge
and
mov
fisubl
daa
fstpt
shl
sub
popf
add
and
adc
fists
bound
push
int
inc
mov
shlb
pminsw
movb
mov
aaa
mov
outsl
fmul
xor
or
pop
ja
adc
sub
pop
jbe
and
inc
inc
push
sbb
jb
std
clc
out
jmp
cmpsl
jne
lods
in
jge
cltd
and
push
clc
add
push
ss
push
aaa
stos
les
lea
fmul
lahf
mov
jns
jp
aad
cltd
mov
or
sub
sub
jo
sahf
push
cmp
xor
daa
jne
sahf
fadds
jmp
loop
add
sbb
dec
xchg
xor
into
cmp
pop
daa
mov
insb
mov
fisttpl
inc
sbb
xchg
mov
mov
mov
inc
call
and
jb
scas
mov
leave
adc
sub
jo
xchg
push
push
cltd
jle
adc
int
mov
faddp
add
adc
add
mov
dec
or
inc
cmpsb
pushl
lahf
push
adc
imul
mov
xor
jno
ret
cmp
xor
push
xor
sub
mov
faddl
push
fucomi
into
push
repnz
xchg
lret
and
mov
outsb
aas
ljmp
fsubrl
stos
cmp
test
push
push
insl
pop
push
dec
mov
popf
sbb
inc
les
mov
xchg
xchg
mov
cli
repz
sarb
clc
aam
sahf
pop
or
and
ljmp
mov
lahf
leave
inc
nop
repz
cmp
std
ljmp
in
jnp
push
xchg
roll
addb
rclb
jb
insl
jl
lds
in
ds
data16
fcmovu
gs
adc
das
sub
std
loop
insb
xlat
pop
hlt
dec
xor
mov
pop
xchg
mov
inc
and
mov
adc
aas
mov
mov
cmp
or
pop
nop
stos
xchg
mov
push
and
pop
lahf
rorb
mov
sbb
mov
test
mov
xor
jge
xchg
add
lods
mov
mov
dec
xchg
cmp
adc
call
shl
pop
mov
jo
adc
dec
lret
or
jb
out
shlb
sahf
scas
fsts
xchg
dec
mov
cmp
mov
subl
jl
stc
lret
push
in
ret
std
out
sbbb
sahf
pusha
sub
mov
inc
sahf
jno
outsl
jg
aas
xchg
cmp
hlt
daa
arpl
add
gs
ret
sub
xor
adc
mov
das
sbb
mov
rcrl
jo
imul
cltd
pop
test
and
push
push
mov
add
mov
out
xchg
clc
mov
ljmp
lahf
xor
mov
int
push
mov
aaa
and
inc
and
std
sbb
loope
add
push
test
xlat
jno
insb
shlb
cltd
mov
xor
popf
stc
mov
inc
mov
add
sub
xchg
sub
mov
mov
cmovnp
insl
out
loop
imul
push
js
test
or
mov
andl
ljmp
cld
shll
mov
sub
push
jns
mov
mov
out
push
cmpb
iret
fimuls
je
push
imul
cld
and
pop
cmp
push
test
sbbl
xorl
int3
sub
sub
dec
jp
test
inc
adc
int
in
pop
mov
je
sub
jp
scas
push
dec
lret
mov
xor
cmc
mov
in
jne
sub
loop
xchg
imul
xor
imul
popa
test
dec
ds
imul
jmp
jmp
add
add
rolb
mov
ficomps
jne
sbb
mov
ja
inc
jmp
daa
mov
and
xchg
sti
cmpb
mov
pop
jnp
dec
mov
and
dec
imul
and
cmp
sub
cmpsl
xchg
sub
push
jmp
cmpsl
adc
shlb
mov
mov
mov
sbb
stc
mov
sti
cltd
into
dec
sbb
jae
scas
mov
imul
mov
dec
xor
jo
ljmp
popf
mov
mov
icebp
dec
outsl
cmc
cmp
dec
xchg
mov
lret
daa
sub
xlat
subb
cld
fadds
cmp
sbb
jnp
inc
pop
or
test
addr16
adc
xchg
inc
adc
cmp
ret
jb
sarb
je
cwtl
jmp
or
add
lret
ret
imul
test
into
sbb
add
fmuls
clc
lock
jle
pop
push
push
cmc
mov
leave
mov
ds
dec
paddb
jb
and
xor
fistpl
jae
int3
stos
xor
or
mov
xchg
cli
or
les
mov
dec
dec
push
jle
mov
addr16
push
hlt
xor
jmp
das
pop
gs
and
cmp
enter
ret
insb
and
pop
pop
adc
enter
dec
mov
cld
insb
das
jae
xor
or
js
imul
or
cs
iret
add
int
bound
ljmp
push
cmp
and
and
popa
out
in
mov
jns
test
lcall
out
cmp
fildll
fisttpl
sub
inc
scas
test
lods
sbb
add
sbb
les
jnp
bound
pusha
nop
ret
jl
ljmp
out
outsb
pop
in
inc
inc
aad
sbb
hlt
out
lea
and
or
xlat
out
stos
cmp
ret
test
je
rcl
lret
cmp
decb
push
cmp
mov
mov
out
xor
xor
sbb
test
sbb
cld
outsl
cmpsb
add
dec
inc
push
jns
jno
loop
add
imul
add
mov
mov
outsl
fdivs
mov
inc
pop
out
sub
repnz
cmp
jp
bound
dec
push
mov
and
xor
mov
divl
mov
jns
dec
and
pop
mov
xor
leave
pop
repnz
fs
lret
mov
inc
sub
imul
jbe
pop
pop
or
orb
sbb
push
in
ss
mov
or
mov
cmc
pushf
inc
mov
lret
imul
cmpsl
pusha
jno
orl
es
rolb
cmp
hlt
pop
pop
dec
cmpsb
pop
loopne
adc
sbb
add
mov
roll
adc
faddl
mov
mov
mov
jl
lods
lea
push
pop
js
sub
adc
or
es
aam
adc
je
sbb
push
les
inc
jmp
xor
testl
aad
dec
test
inc
xor
vpunpckhbw
add
xchg
mov
pop
popa
push
test
sahf
sub
sbb
icebp
sahf
idivl
cmp
jmp
sbb
pop
fsubl
ja
mov
mov
stos
mov
inc
or
in
lock
mov
and
call
xchg
xchg
loope
sbb
cmp
adc
cmp
mov
repnz
xchg
jmp
xlat
cmpsl
pop
shll
pop
fcompl
jle
outsb
cmpsb
fstl
xchg
loop
mov
movsb
jp
jb
push
cmp
add
adc
add
cmpsl
aam
cmp
add
shl
sub
add
mov
cmpsl
jnp
shr
inc
jg
outsb
jbe
mov
cli
ret
and
push
push
imul
and
cs
frstor
sarl
add
scas
xor
cltd
fidivl
es
shlb
lcall
push
inc
in
push
xlat
jg
pop
lods
xor
adc
push
adc
sbb
pop
push
sub
test
cmp
dec
pop
stc
pushf
idivb
dec
push
mov
sbb
lock
mov
outsb
sub
aam
insl
andb
or
mov
test
aas
jp
jno
call
mov
in
mov
addr16
or
sbb
test
jle
sub
sbb
mov
nop
pop
fisubrl
loope
adc
aaa
or
aas
icebp
inc
cmpsl
add
dec
or
aaa
cmpsb
adc
inc
push
or
dec
sbb
mov
aaa
nop
fsubr
mov
xchg
loop
jl
pop
shlb
aad
movsb
mov
in
jnp
pop
mov
inc
jmp
repz
out
push
xchg
test
pop
fiaddl
or
addr16
pop
inc
xchg
fdivrp
jo
pop
dec
mov
jbe
pop
into
jne
stc
mov
iret
jg
mov
add
cmp
adc
aam
inc
int3
xchg
mov
dec
les
inc
add
jecxz
into
pop
mov
mov
in
dec
and
xchg
cwtl
or
xor
enter
mov
push
inc
stos
mov
repnz
and
cmpb
mov
jns
das
pop
mov
fidivrl
or
jl
ja
cmc
sahf
sub
adc
pop
jecxz
and
xlat
lods
pop
xlat
jns
mov
cmc
dec
lret
sbb
or
repz
in
pop
test
dec
inc
int3
or
push
inc
cmovno
push
inc
cmp
test
stc
icebp
pop
inc
mov
inc
push
dec
iret
xchg
in
bound
jp
push
push
ja
cmc
or
xchg
in
sub
xor
scas
mov
sub
mov
xor
out
cmpsb
arpl
xchg
movsl
add
mov
dec
sbb
stc
adc
int3
jle
cs
mov
mov
sbb
add
scas
loope
lea
ret
cmp
call
lret
dec
sbb
movsl
ljmp
lcall
sbb
stos
pushf
add
sbb
ljmp
in
repnz
nop
aas
loop
imul
iret
fld
enter
js
dec
bound
shll
cmp
dec
aad
adc
imul
cmc
dec
sbb
mov
call
mov
aaa
cltd
adc
and
and
pop
sbb
fstps
cwtl
in
jnp
rcrl
call
push
push
sbb
xchg
inc
pushf
sub
insb
movb
pop
pop
jle
or
ret
add
jns
cltd
cwtl
jecxz
dec
jbe
mov
pop
pop
dec
in
inc
or
sub
xchg
mov
inc
dec
rcrl
mov
aas
arpl
test
lods
js
in
mov
test
inc
pop
dec
sub
xor
imul
cmp
sub
outsb
mov
inc
mov
adc
data16
cld
imul
push
mov
fcomi
sub
xchg
std
loope
pop
jl
mov
push
test
sub
mov
gs
and
pop
sahf
lret
add
aam
in
jno
pop
jge
imul
mov
stos
xchg
loopne
icebp
push
js
sub
inc
addr16
cltd
and
jb
pop
sub
sbb
jl
or
push
rcrl
nop
fimull
lds
xor
push
cmp
or
pusha
and
in
lret
mov
inc
add
rol
das
dec
add
ja
jmp
add
add
decb
icebp
lods
push
insl
rorb
pop
stos
xchg
cld
sub
loopne
repz
pop
add
nop
int3
jecxz
sbb
sub
enter
call
and
push
fwait
ret
lahf
movsl
insl
test
pop
imul
xchg
or
jb
and
iret
jmp
add
call
mov
sbb
dec
pop
loopne
mov
das
dec
xchg
pop
pop
push
push
and
mov
add
ret
scas
mov
pop
mov
aad
pop
iret
add
xchg
in
inc
pop
out
xchg
push
loop
adc
rclb
add
loopne
dec
sbb
repz
add
andb
or
je
xor
sub
vpcmpgtw
ja
pop
mov
les
rolb
jmp
xchg
mov
nop
fistpll
inc
adc
adc
or
inc
out
shr
ret
data16
popf
lahf
jg
mov
mov
fdivrp
xor
mov
mov
popw
jne
adc
sbb
adc
fdivs
lds
jns
or
push
popf
ret
push
mov
lock
cmp
or
push
or
hlt
not
xchg
adc
sahf
lds
popa
push
adc
cmpsl
jmp
icebp
mov
cmp
add
dec
mov
scas
inc
jg
mov
mov
icebp
lods
ss
xchg
sbbb
movsb
pop
adc
fwait
enter
add
adc
dec
or
add
pop
fistps
je
push
push
icebp
loope
jecxz
or
adc
add
sbb
movsl
mov
test
xchg
adc
loop
push
pop
or
sbb
shlb
mov
test
pop
fs
cltd
or
inc
pop
lods
test
add
inc
in
jae
xchg
pusha
std
adc
fwait
in
pop
or
add
outsl
outsb
scas
or
dec
mov
loope
into
xor
popa
imul
lea
fs
sub
mov
add
fbstp
jae
sbb
popa
arpl
adc
dec
mov
jmp
sahf
pop
ret
mov
pop
jp
lret
push
enter
and
arpl
cmp
inc
adc
ret
dec
fwait
xor
pop
pushf
das
push
mov
mov
inc
movsb
jns
push
scas
push
insb
sahf
ret
enter
or
jne
out
aas
outsb
and
dec
popa
dec
outsb
xchg
pop
aas
dec
loope
xor
inc
in
imul
push
sbb
cmp
add
fcomps
mov
dec
popa
ret
aas
dec
push
add
push
jb
rorb
daa
jle
testb
or
add
lods
std
push
jge
or
pop
and
and
mov
and
sarb
xor
jbe
dec
lods
das
stos
gs
mov
add
or
cli
push
lods
push
xlat
mov
mov
or
nop
mov
pop
scas
fmuls
das
imull
fadds
cltd
ljmp
int3
xor
sahf
xchg
push
xchg
daa
xchg
aas
imull
mov
adc
adc
fst
pop
jo
add
mov
dec
test
sub
and
pushf
adcb
jmp
lret
adc
clc
int3
lods
and
shll
mov
sbb
lds
fcmovb
adcl
cmp
add
xlat
mov
cli
xchg
xor
roll
pushf
sbb
jno
mov
movsl
and
jb
mov
dec
out
rorb
test
xlat
sbb
pop
shr
subb
push
mov
mov
lahf
jg
scas
popa
mov
push
repnz
and
push
lret
daa
mov
mov
scas
lock
xor
pop
int3
pop
les
mov
xlat
push
insl
mov
aaa
mov
xchg
cmp
jecxz
scas
xchg
mov
xor
xor
inc
lock
lds
xor
cs
std
mov
mov
in
mov
pushf
loope
mov
or
loope
outsl
add
sbb
xor
divl
shl
lds
imul
cli
adc
dec
pop
push
xor
xlat
insb
pusha
pop
push
or
aaa
lahf
adcl
mov
inc
scas
pushf
mov
push
push
xor
test
int
sub
pushf
mov
adc
daa
repnz
idiv
xchg
inc
ljmp
mov
insb
jb
or
fmuls
test
sti
mov
ljmp
push
dec
imul
imul
repnz
mov
mov
iret
mov
cmp
das
aam
jp
push
pop
mov
dec
push
jp
push
out
scas
aam
scas
inc
push
incl
or
sahf
outsb
mov
inc
in
lds
movsb
sbb
pushf
push
cltd
fnstsw
outsl
push
repz
inc
pop
mov
mov
sbb
fwait
mov
decl
popa
ljmp
fcompl
rcll
push
and
imull
inc
call
out
movq
xchg
cs
inc
insb
push
dec
mov
loop
cmpsl
movsb
and
nop
enter
outsl
psadbw
loop
ret
and
aas
sahf
adcl
xorl
jnp
cmpsb
cmp
fnstcw
scas
fnstcw
push
push
popa
jecxz
mov
aaa
fistl
mov
mov
add
inc
ds
mov
adc
mov
dec
mov
pop
in
loop
sub
push
sub
jmp
fwait
mov
imul
or
pop
aam
jp
negl
mov
xor
lds
arpl
sub
lods
shll
andb
mov
fs
fldl
dec
xchg
nop
xor
in
out
jle
sti
add
insl
inc
aam
test
fs
xchg
ljmp
jl
das
sub
push
push
and
imul
outsb
and
in
sub
fbstp
lcall
fcompl
cs
mov
jp
or
push
cltd
lods
sbb
dec
jle
mov
out
xchg
mov
xchg
add
sub
cmc
fcompl
xchg
jg
sub
hlt
pushf
enter
mov
lret
das
push
cmpsl
insb
xor
jp
fldl2t
mov
mov
sbb
sub
in
mov
iret
jmp
aaa
test
mov
mov
mov
sahf
or
push
adc
bound
movl
mov
xchg
mov
cmp
lahf
xchg
in
xchg
jg
lahf
into
js
and
ljmp
in
out
cmp
call
pop
negl
ljmp
adc
fmuls
jae
cltd
rcrb
pop
jo
push
loop
ljmp
filds
mov
jo
fistl
adc
fwait
imul
mov
test
pop
xchg
mov
push
data16
or
and
jp
jne
mov
inc
and
int
fmul
xchg
bound
lods
jmp
movsb
sub
je
mov
es
mov
sbbl
cmp
cmovns
movsl
movsl
das
push
shl
in
decl
pop
lock
fbstp
push
nop
push
sub
stos
push
or
in
pop
shlb
pop
inc
in
fwait
or
sub
into
xchg
fsubl
push
daa
xorl
imul
stc
jle
push
addr16
sub
sub
push
js
cmp
cld
cmp
add
cmp
lock
lds
push
iret
shll
push
scas
cli
mov
sbb
int3
xor
decl
jbe
or
pop
out
inc
loopne
icebp
jge
or
out
cltd
loope
mov
movsb
test
xor
scas
fstpt
stos
jb
mov
mov
out
mov
dec
int
add
int3
je
lcall
pop
movsb
push
movsl
push
jg
out
cwtl
xor
mov
dec
cmp
aaa
inc
mov
sub
or
push
cmp
aad
mov
jle
and
loop
stos
enter
inc
pop
pusha
mov
fildl
mov
push
jp
mov
les
lock
or
adc
xor
pop
call
stos
lds
popa
popa
pop
sbb
push
xor
gs
stos
push
aas
mov
out
mov
out
sub
frstor
cmp
leave
and
pop
jle
pop
repz
jne
pop
rcll
push
mov
sarl
dec
adc
push
mov
and
jns
mov
jecxz
and
cli
cli
fimuls
mov
pusha
nop
imul
push
jne
stos
cld
and
lods
out
dec
fisubl
push
movb
mov
popf
dec
int
aaa
jbe
in
xchg
inc
stos
pop
orb
pop
dec
xor
in
jl
and
fsub
inc
cli
mov
mov
pusha
pop
test
and
cmp
xlat
je
mov
in
mov
sbb
pusha
lret
adc
pop
imul
sbb
shl
xlat
mov
pushf
and
ss
push
call
push
pop
add
sbb
jmp
fisubs
sbb
sub
gs
dec
push
loop
clc
fdivr
mov
jmp
outsl
addr16
lahf
jmp
pop
rclb
cmp
adc
mov
les
ds
lods
sti
pop
and
sbbb
add
sahf
dec
adc
dec
out
ret
pop
push
lahf
pop
repnz
rep
xchg
sub
cmp
fildll
and
lock
rclb
imul
and
jns
cmp
js
or
ret
mov
pop
out
cmp
push
and
dec
clc
or
stos
mov
xchg
dec
div
ljmp
jno
pop
mov
daa
in
ja
test
inc
jmp
jno
xchg
gs
out
push
xor
inc
xchg
and
dec
mov
in
dec
jge
lea
sbb
cmpsb
cmp
subl
fimuls
repnz
mov
push
cmp
mov
fsts
data16
and
in
ljmp
out
inc
xchg
cmpsl
in
xchg
cmp
cmc
in
and
jbe
enter
loop
push
loop
popa
push
arpl
sub
mov
lcall
adc
mov
cmpsb
push
xor
xor
jns
rclb
nop
or
cs
mov
mov
xor
in
testl
cmp
fcmovnbe
arpl
scas
inc
adc
loopne
ss
xor
stos
mov
mov
or
xorl
roll
shrb
je
sbb
mov
sbb
pop
sbb
xor
iret
add
dec
sbb
inc
and
in
push
sbb
xor
jnp
sub
or
test
sub
xchg
dec
inc
mov
arpl
decb
mov
jnp
testl
aam
jl
rolb
mov
jmp
pop
xchg
arpl
add
sub
jecxz
leave
pop
push
cs
inc
cmpsb
bound
xor
imul
sub
leave
clc
das
inc
xchg
lret
add
jg
push
in
xor
mov
mov
pusha
push
mov
jp
test
pop
cmpsb
adc
xchg
or
sub
jle
test
xorl
jl
mov
loope
dec
movsl
mov
sbb
mov
push
sub
or
jmp
cmpsl
sarb
dec
and
xchg
das
inc
scas
js
mov
jb
jae
ret
jns
fcoml
push
lcall
imul
aaa
mov
inc
lahf
pushf
jg
inc
cld
rcrb
mov
stos
xchg
repnz
xor
lret
or
add
xchg
jl
cs
sbb
out
inc
fwait
xchg
lret
dec
cld
cwtl
call
or
or
push
mov
pop
jno
ds
mov
mov
into
movsl
inc
push
xor
popa
popf
xchg
mov
xor
push
test
mov
movsb
arpl
mov
addl
xchg
es
or
ret
dec
imul
sub
adc
mov
bound
ret
rcll
loop
in
fmull
sahf
xlat
int
pop
xchg
mov
pop
pop
push
adc
test
sub
or
pop
popf
bound
testb
xchg
mov
dec
dec
pop
jp
adc
rcrb
pop
sbb
mov
fwait
mov
fistps
jbe
push
xchg
mov
adc
out
or
ljmp
stos
out
jnp
mov
or
popa
dec
iret
sbb
call
stc
outsb
add
cmpsl
cmp
leave
mov
clc
sub
fdivrs
pushf
cli
stc
push
jecxz
arpl
mov
fists
pushf
inc
push
xchg
clc
loope
xor
lahf
enter
add
fbld
push
lcall
mov
xchg
cli
lret
sbb
push
ret
sbb
jle
push
lods
pop
lahf
push
jmp
inc
adc
jmp
push
sbb
popa
shl
es
xor
inc
or
call
test
xchg
pop
mov
test
scas
adc
popa
xchg
stos
inc
jecxz
inc
jp
jge
lods
pop
arpl
imulb
xchg
and
stos
inc
out
mov
sub
in
jno
outsl
popa
lcall
adc
dec
and
cmp
sbb
push
lahf
pop
push
adc
andl
jns
pop
or
inc
orl
cld
cmpsb
idivb
dec
stc
xor
repnz
call
push
std
dec
or
sar
idivl
and
dec
rorl
cmp
cmc
adc
push
mov
das
xchg
insl
out
pop
mov
sub
sbb
das
inc
jmp
cmc
scas
lret
mov
dec
mov
xor
pop
cmpsb
lock
sub
out
cmp
inc
mov
std
xchg
mov
xchg
mov
insl
pop
inc
pop
pcmpeqw
sbb
cmp
test
imul
fsts
into
jmp
insb
and
jne
mov
sbb
xchg
mul
lea
pop
inc
or
xchg
jl
in
lahf
or
xchg
add
lock
mov
mov
data16
cmpsl
shlb
cmp
jmp
xor
push
test
mov
popa
pop
inc
call
fiaddl
lret
push
adc
jge
inc
jle
fsub
icebp
mov
xor
xor
shll
pop
and
ja
in
pushf
cmp
loope,pt
pop
sub
sub
in
movups
fnsave
mov
int3
andl
mov
test
daa
out
push
inc
hlt
jns
inc
test
cs
test
mov
pop
leave
mov
and
xchg
xor
jae
sahf
push
es
aas
jp
cmp
dec
adc
pop
mov
jno
cmp
pop
les
fnstsw
addr16
push
push
adc
jbe
call
repz
loopne
loope
xchg
iret
ss
leave
push
xchg
adc
in
mov
mov
nop
int3
nop
scas
in
push
fwait
imull
jnp
add
jnp
cli
das
out
into
cmp
movsl
pop
in
pop
add
jg
andb
xchg
lods
addr16
sbb
jbe
push
push
not
ret
sbb
mov
dec
mov
imul
jbe
rorb
adc
add
mov
pushf
js
xchg
push
adc
ret
outsb
outsl
mov
inc
adc
jae
jbe
and
out
out
pop
clc
daa
or
mov
testb
jae
push
scas
push
mov
paddw
je
loopne
sub
movsb
mov
mov
insl
dec
mov
xlat
cltd
mov
jmp
push
cltd
ret
mov
sbb
daa
lds
loope
xorl
div
jne
push
arpl
pushf
add
xor
filds
mov
int
pushf
sbb
mov
gs
hlt
pop
cmp
cltd
and
daa
or
sti
adcl
sar
push
fs
stos
inc
fs
cmp
imul
jp
loope
sub
adcl
jmp
leave
push
enter
iret
jmp
mov
adc
scas
out
ret
clc
in
jo
dec
out
pop
xchg
sbbl
sti
imull
xchg
cld
jmp
xor
sbb
and
arpl
sahf
in
andb
rorl
mov
mov
cmp
push
imul
xchg
sti
pop
popa
jne
push
mov
mov
dec
xorl
inc
ret
mov
ret
cmpsb
in
sbb
jbe
adc
sbb
jecxz
xor
push
std
or
pop
push
rolb
dec
in
pusha
add
aam
cmp
ret
dec
inc
hlt
mov
ljmp
arpl
fldl
adc
out
and
mov
push
pop
sbbb
sahf
mov
test
pop
das
pop
mov
push
or
or
lods
or
pop
dec
cltd
sub
dec
mov
dec
sti
add
movsb
ret
gs
xchg
pop
pop
mov
clc
icebp
and
push
outsb
ss
sahf
jmp
cld
inc
pop
mov
scas
enter
mov
sbb
shlb
fisubs
orl
pop
and
cli
xchg
xchg
cmpsb
test
in
or
jno
push
inc
mov
sbb
pop
fwait
hlt
std
lret
pop
jnp
mov
push
pusha
or
dec
push
pop
sbb
loopne
dec
inc
xor
jecxz
fnsave
js
push
push
arpl
addl
icebp
es
imul
int
mov
test
xchg
push
insb
mov
dec
es
loopne
je
push
ret
in
aam
repz
or
inc
lcall
loopne
dec
push
pushf
jecxz
inc
dec
das
xchg
clc
or
scas
jne
pushf
loop
jecxz
jp
loope
mov
inc
leave
fists
mov
adc
mov
sbb
pop
mov
jno
in
jae
push
or
dec
aam
jbe
and
sahf
push
and
hlt
pushf
jg
adc
sbb
test
fmuls
xchg
inc
jle
jp
mov
fisubs
xchg
jns
scas
or
sarl
jge
xor
int
nop
cwtl
mov
vunpcklps
pop
in
out
hlt
add
adc
movsb
adc
add
mov
add
aad
fistl
das
or
subl
jl
push
into
mov
shl
fwait
mov
aas
mov
dec
dec
or
dec
sbb
mov
push
sub
mov
clc
xchg
repz
iret
cmc
or
push
outsl
mov
clc
inc
aad
add
inc
adc
in
mov
scas
aad
adcl
dec
hlt
or
or
adcb
repz
or
dec
out
mov
scas
xchg
rcrb
stc
lods
cmp
scas
inc
pop
dec
call
rcr
mov
fistps
les
cmc
jmp
in
into
cwtl
call
sub
mov
push
mov
jge
addl
dec
push
fisubl
outsb
jmp
jne
loope
xor
dec
fs
cmpsb
into
dec
adc
xor
test
cltd
add
sub
inc
xchg
popf
and
xor
les
add
push
push
sarb
bound
or
test
loopne
stc
lcall
out
into
out
and
or
lds
add
dec
test
andb
jns
mov
push
jb
fmuls
or
lea
jmp
mov
lret
mov
or
sub
les
jle
jo
xor
ret
les
out
incl
in
ljmp
add
into
sahf
fucomi
adc
jnp
push
lret
lods
sub
cmpsl
insl
jo
xchg
call
lds
aas
pop
aas
mov
mov
scas
and
mov
push
repz
mov
mov
or
scas
jne
pop
ret
mov
arpl
testl
pop
inc
and
iret
outsl
xchg
lahf
fists
mov
xchg
mov
push
jb
idiv
fnsave
mov
add
lret
nop
mov
inc
sub
push
cmp
sbb
sti
mov
jg
in
mulb
lcall
fnstcw
inc
out
lret
scas
loope
cld
pop
daa
dec
pop
inc
jmp
sub
dec
xchg
inc
cmpsb
in
sub
pop
loop
arpl
dec
add
mov
cmpsl
jb
pop
cltd
sbb
lahf
lods
pop
mov
sub
and
jl
mov
rcl
mov
mov
jmp
inc
xor
jnp
insb
stos
dec
cmp
mov
pop
push
bound
jnp
cli
test
popa
rcrl
jl
sub
or
cmp
mov
stos
orb
aam
dec
cmp
loopne
aas
mov
ds
push
xor
ds
inc
pop
ss
stos
inc
pop
jge
add
push
fisttps
insb
push
nop
cltd
divb
in
inc
pop
adc
or
movsb
jb
lahf
pop
bound
gs
scas
jge
out
dec
and
mov
mov
fidivrs
sbb
jle
call
mov
andl
lret
ds
cs
dec
adc
daa
loopne
cltd
and
sbb
fstl
mov
pop
cmpsl
mov
xor
arpl
lret
pop
add
sbb
je
and
xchg
pop
outsl
aam
cmp
aaa
cmp
dec
fs
jno
aaa
xorl
sub
jne
add
test
into
out
lcall
sbb
test
ficoms
cs
ja
push
xchg
xor
or
stos
cltd
idiv
lods
adc
push
mov
mov
pop
mov
cmp
pop
cltd
sbb
aas
fisttps
addr16
adc
outsl
dec
xor
scas
inc
push
mov
ret
nop
mov
fs
shlb
or
test
mov
mov
mov
xor
mov
fwait
push
inc
push
sarl
xchg
mov
mov
mov
jno
mov
daa
aaa
test
scas
inc
adc
mov
call
mov
call
sub
mov
loope
add
sbb
cwtl
jge
testl
cmp
sbb
mov
je
popf
inc
mov
sahf
sub
ds
out
and
xor
andl
repnz
sub
cld
jmp
or
in
mov
out
ret
mov
popa
xor
les
imul
mov
sub
daa
jmp
ffree
sahf
ljmp
daa
mov
int
jecxz
or
pop
dec
adc
xchg
fisubrs
iret
rol
dec
mov
enter
mov
jecxz
call
mov
inc
enter
loope
outsb
fldt
push
ljmp
adc
push
cmpsb
test
rcrl
inc
clc
rcll
ljmp
dec
shrl
xchg
int
fisttpll
aam
gs
aam
call
lahf
pop
push
lds
shl
add
cmc
enter
cmp
imul
dec
inc
jle
inc
cwtl
adc
cmpsl
mov
or
movsl
mov
fwait
lods
test
jbe
inc
add
adc
out
sub
mov
arpl
sub
jg
cmpl
xor
push
out
ret
cmp
dec
ds
js
adc
sarl
dec
and
and
sahf
cmp
addb
inc
aam
cmp
or
faddl
loope
scas
les
clc
clc
and
std
cmc
lea
sbb
fwait
adc
mov
mov
movsl
lahf
in
cmp
sub
movsb
fsub
inc
sub
addl
loope
jle
mov
push
xchg
outsl
into
jbe
and
adcl
fistl
lahf
sub
adc
push
pop
gs
xor
adc
inc
add
xor
sbb
notl
out
adc
cwtl
aam
outsb
cmp
dec
fnstenv
andb
inc
mov
push
cmpsb
call
mov
loop
xchg
jnp
fwait
jae
sub
and
rcrl
fcmovnu
rep
loop
int
mov
dec
mov
sbb
dec
lret
cmpsb
fdivs
maxps
adc
push
mov
jne
aas
sub
add
sbb
sub
lcall
xchg
inc
lock
in
push
inc
xchg
je
add
cli
or
mov
inc
gs
dec
nop
jb
mov
sub
pop
push
test
aad
mov
enter
loope
sbb
lcall
sbb
int3
mov
insb
jae
cmp
in
mov
in
inc
push
aad
mov
and
mov
and
lods
mov
push
lods
arpl
and
jnp
test
sbb
adc
cmp
subl
lret
adc
int
mov
jmp
idiv
sbb
sbb
mov
lahf
fs
xchg
or
scas
jg
ret
dec
mov
mov
fdivs
sub
fstl
dec
outsb
popa
jns
mov
and
adc
add
out
in
mov
pusha
add
pop
or
cmp
in
pop
out
shll
xchg
or
punpckhbw
outsl
daa
es
insl
jnp
cmc
lret
mov
enter
or
mov
orb
stc
mov
cwtl
lods
pop
pop
sbb
mov
jae
testl
adc
mov
iret
popf
push
jle
push
loop
lahf
arpl
dec
push
test
icebp
push
inc
push
push
sub
popf
movsl
xchg
mov
into
pop
or
adc
sub
repnz
xchg
xor
pop
jg
addr16
mov
ss
stos
rcll
aad
fs
dec
in
push
mov
jb
mov
jmp
fstpl
push
fiaddl
jne
xchg
insl
int
cmc
inc
dec
imul
scas
cld
inc
and
mov
stos
in
mov
or
lods
mov
rclb
mov
fisubs
xchg
dec
mov
mov
fisubrl
fimull
xchg
xor
xor
hlt
das
scas
out
mov
adc
lea
mov
and
inc
in
push
test
push
xor
movsl
popa
jb
mov
push
xlat
test
insl
push
mov
jg
fnstcw
lds
xchg
insl
pop
ret
add
inc
adc
dec
test
xchg
dec
loop
cmp
add
aad
push
xchg
out
or
gs
sub
jecxz
fsubl
push
clc
sbb
dec
mov
in
test
xlat
pushf
mov
cmp
and
sti
mov
mov
shlb
addr16
imul
lods
push
fsubrp
aad
hlt
dec
dec
jp
iret
mov
out
repz
or
arpl
cmp
movsb
xor
adc
push
rcll
push
jge
inc
pcmpgtd
cmp
or
pop
mov
adc
push
add
add
lret
sub
dec
add
pop
push
xor
pop
pop
mov
mov
fstpt
stc
push
or
jo
mov
loopne
rorl
sub
fsubl
idivb
loop
adc
mov
ret
pusha
inc
insl
cwtl
mov
cmp
fdivs
push
mov
xor
jnp
inc
fcompl
or
sub
push
jmp
movsb
ret
popa
or
icebp
jmp
sub
and
push
sbb
dec
mov
sbb
mov
jae
jo
dec
outsb
mov
out
or
mov
mov
and
add
and
adc
loope
jno
jge
shl
ds
xor
sahf
aam
popa
and
xchg
fcmovbe
sbb
cmp
inc
push
and
sbb
add
out
xchg
mov
stc
je
aad
inc
sbb
imul
fisubrl
add
inc
out
out
ret
out
mov
std
sub
jecxz
shlb
pop
xchg
mov
xchg
in
rorb
mov
push
jmp
sbb
push
cmp
in
mov
loope
cmc
ja
jmp
sbb
nop
push
cmp
sarl
mov
sahf
sbb
mov
int
push
jp
cmp
ss
lds
les
insb
push
dec
cmp
lds
addr16
jmp
adc
dec
insb
dec
mov
xor
add
xor
push
push
xchg
adc
gs
sbbb
loope
mov
cmp
cmp
xchg
mov
ret
call
leave
xchg
xor
xor
lret
xlat
push
mov
gs
xchg
and
in
sbb
stos
fsub
or
mov
outsl
or
jb
pop
xor
inc
xor
lcall
int
sub
xchg
sbb
mov
insb
lods
add
xchg
cld
in
popa
push
mov
lret
cld
jo
adc
je
xchg
dec
adc
popa
jge
dec
xchg
mov
gs
outsb
adc
add
mov
hlt
insb
test
loopne
inc
pop
push
mov
rcrl
cli
insb
sub
adc
mov
add
adc
add
lret
aaa
dec
adc
mov
and
xor
push
jmp
cs
fwait
sub
cmp
rcr
mov
xchg
and
push
sub
xchg
ficompl
fidivs
and
dec
mov
sbb
inc
les
adc
pusha
sbb
pop
ficoml
inc
mov
mov
sbb
insl
hlt
hlt
push
scas
das
and
shll
outsl
and
mov
fdivrs
mov
mov
add
fdecstp
push
dec
xchg
int
pop
xor
enter
inc
sti
in
mov
pusha
leave
mov
adc
mov
inc
xchg
hlt
dec
cmp
loopne
je
enter
rcl
out
cmpsb
xlat
xchg
dec
mov
ljmp
cwtl
movsb
inc
or
aas
inc
add
xchg
divb
sbb
pop
dec
bound
xor
adc
cmpsl
andl
lock
out
adc
cmpsl
repnz
fldl
mov
pop
loop
rcr
jnp
cmpb
dec
aam
test
cmp
aam
xchg
push
xlat
call
xor
push
andl
lea
test
mov
ret
add
mov
arpl
sub
loope
cmp
idiv
sbb
clc
mov
iret
dec
add
inc
mov
je
sbb
rcrb
imul
mov
cwtl
out
jmp
fadds
sbb
lret
sub
test
std
scas
jmp
inc
sub
adcb
lcall
adc
mov
cmp
adcb
ret
or
out
lea
mov
sbb
pushf
mov
bound
stos
and
pop
fidivs
cmc
push
in
int3
mov
fsubrl
or
imull
out
push
xchg
test
aas
xor
adc
xchg
xchg
ds
cmp
pushf
sbbl
ret
stc
lcall
pusha
jecxz
mov
sbbl
sbb
cs
sub
xor
and
jns,pn
pop
sbb
add
rorb
fdivs
cmc
push
test
sbb
jmp
rorb
mov
cmp
jne
popa
lret
xchg
lods
cmp
sbb
lods
xlat
sbb
ss
fsubrl
jae
cld
cmpb
add
dec
je
inc
mov
pop
jmp
arpl
js
pushf
cmpsl
fsubrs
xor
xchg
xchg
pop
rcrl
fldcw
mov
test
imull
ss
loope
adc
push
add
mov
fucomip
es
jecxz
push
daa
leave
push
dec
and
les
lahf
mov
cli
xchg
jmp
cmp
adc
ljmp
aad
scas
mov
pop
push
mov
mov
popa
inc
cmp
xchg
add
sbb
xor
mov
cmp
mov
adcl
xor
call
jecxz,pn
add
xor
adc
les
shll
cmpsl
nop
pop
jp
adc
jle
push
out
lea
pop
sbb
cmp
mov
outsb
jge
push
fmull
subl
mov
lea
je
cltd
mov
lea
dec
dec
int
inc
push
das
mov
cmp
out
xor
ljmp
pop
jg
push
test
pusha
push
push
fsubrs
cmp
icebp
cmp
lea
sbb
xchg
inc
dec
sti
sbb
xor
cmc
loope
test
mov
mov
pop
jns
cmpsl
daa
adc
and
inc
dec
lock
fidivrl
sbb
shlb
add
push
aas
sub
dec
jno
daa
and
mov
sub
mov
xchg
pop
enter
jge
dec
stos
test
sub
pop
mov
pop
jae
mov
stos
xor
fsubrs
jecxz
dec
sti
jne
test
jbe
sub
sub
push
shll
iret
pop
pop
xlat
loop
cmp
jno,pn
jle
lcall
jecxz
mov
mov
pop
push
push
sub
lret
push
mov
aam
ds
jmp
les
ret
sub
fsub
leave
xor
mov
ja
jl
in
pop
andl
shlb
push
nop
mov
mov
das
pop
popa
fdivrl
mov
inc
lahf
in
call
leave
cmp
sub
and
push
cli
lret
jae
xchg
cmp
test
mov
fdivrs
loopne
mov
mov
mov
dec
cmc
stos
xor
jne
in
xchg
add
sbb
inc
cmp
pop
lret
in
mov
push
rorb
daa
inc
push
lds
dec
aaa
popa
push
das
or
xor
jne
adcb
inc
add
loop
vandps
int
xchg
pop
sub
pop
and
mov
bound
jo
test
and
ret
stos
inc
inc
and
mov
in
test
mov
mov
push
and
lahf
mov
push
pop
and
adc
in
pop
lea
imul
mov
push
xchg
fs
pop
xor
in
push
push
pop
push
dec
or
cmp
fwait
sarl
je
out
subl
or
xchg
ljmp
pop
xlat
sbb
or
mov
or
in
jl
cli
das
mov
gs
sub
cmp
jns
pop
cmp
fldt
xchg
sub
push
push
pusha
sti
out
push
pop
imul
mov
test
shlb
mov
imul
add
dec
lods
add
push
sub
pushf
mov
xchg
xchg
push
jnp
repz
inc
xor
in
push
mov
xlat
sub
jecxz
mov
ljmp
mov
aaa
ljmp
mov
in
lahf
push
mov
or
test
cltd
shrb
cmp
xchg
cmp
mov
mulb
movsl
sbb
jecxz
mov
mov
mov
or
ja
push
xor
mov
enter
cwtl
rcll
mov
inc
jge
ficoml
push
jbe
mov
add
mov
cli
scas
jnp
cmp
ja
pop
shrb
stos
adcl
cmp
stos
les
and
sbb
mov
imul
pop
popf
mov
ret
daa
fwait
xchg
int3
jmp
rorl
pop
xor
push
insl
xlat
pop
sbbl
mov
lea
insl
scas
sbb
xchg
test
pop
mov
das
pop
push
cmc
mov
in
adc
pop
xchg
xor
mov
daa
movsb
mov
enter
xchg
orb
mov
and
scas
int3
cmpsl
clc
xor
xchg
mov
dec
xor
mov
dec
mov
stos
mov
mov
mov
or
fs
add
or
cmpsl
aas
shll
xor
mov
push
nop
sbb
jo
jae
sbb
jecxz
stos
xor
jp
inc
push
test
cmc
mov
in
insb
mov
outsb
mov
test
jb
bound
sarb
push
adc
shlb
stos
ja
or
mov
aaa
inc
inc
hlt
fistpl
fbstp
repnz
dec
push
mov
push
mov
push
aaa
jne
in
xchg
mov
inc
clc
sub
mov
jmp
sbb
xlat
jmp
mov
aam
jne
dec
or
sti
test
and
stos
imul
sbb
cli
jne
mov
dec
sub
outsb
mov
jno
mov
sub
das
nop
jge
repnz
movb
test
cmp
int
pop
fsincos
mov
fcomip
lods
inc
bound
add
movsl
mov
and
ja
and
mul
or
jns,pn
mov
ret
ljmp
pop
and
push
jecxz
ficomps
int
jecxz
ds
push
imul
in
xchg
cmpb
fcmovnb
fsubrp
mov
fmuls
add
cmp
mov
and
in
iret
jle
push
dec
mov
int3
imul
push
cld
rol
fcmove
mull
out
ret
pop
jge
and
sti
fdivrl
sbb
out
mov
mov
flds
out
iret
aam
push
mov
dec
addr16
mov
xor
and
mov
xor
push
mulb
jle
out
dec
movsb
dec
pop
in
pop
popf
pushf
xor
pop
xor
jg
js
jbe
push
sbb
pop
xor
hlt
and
push
mov
orps
adcl
push
cmpsb
popf
lret
mov
inc
daa
out
and
inc
push
js
sub
pop
cmp
mov
ret
cmp
push
mov
push
movsl
mov
insl
ljmp
xchg
paddw
add
sahf
je
pcmpeqb
xchg
imull
int3
ss
and
mov
lcall
fsubl
out
into
ja,pt
xchg
fistps
add
test
sbb
cmpsl
sarl
scas
xchg
dec
sbb
jae
std
test
fldt
push
lahf
scas
sub
pop
jl
cmp
cltd
inc
sbb
stos
push
pop
mov
test
adc
test
lock
push
push
repnz
push
stos
daa
sub
lds
addl
shl
add
cwtl
ss
in
or
loope
push
rcll
mov
mov
movsb
pop
lcallw
in
xchg
out
fildll
fadds
pop
sarl
insb
pop
jp
mov
movsb
and
jp
pop
dec
les
xor
scas
jmp
popa
stos
in
test
push
mov
jnp
lcall
dec
out
jnp
push
hlt
lds
test
and
inc
or
dec
sub
mov
enter
repz
lea
or
stc
adc
xchg
mov
xor
popf
ret
xor
imul
xor
or
inc
pop
jmp
push
push
mov
mov
addr16
mov
ja
notl
stos
fstps
mov
mov
loop
push
lcall
push
test
cmp
cmc
sbb
mov
aam
mov
lahf
mov
out
fnsave
cwtl
popa
loope
cld
lahf
arpl
adc
fwait
xchg
cltd
je
repnz
dec
cmp
out
aad
pop
add
pop
aas
fistl
push
je
xor
std
xor
push
ret
jne
test
shrl
out
add
andl
mov
xchg
mov
ret
inc
dec
incb
icebp
popf
push
cmpb
stos
dec
dec
cmc
mov
test
insl
xchg
xlat
mov
pushf
dec
inc
jp
scas
mov
xor
in
or
adc
addb
jae
loop
add
cs
jns
cmp
inc
aad
stos
movsb
out
mov
aam
xorl
cwtl
xor
ja
dec
jo
cmp
xchg
inc
arpl
sti
daa
or
cmp
imul
jmp
aas
mov
mov
or
pop
aas
outsl
stos
frstor
lock
jle
lock
stc
dec
aad
in
push
incb
push
cmpsb
and
hlt
push
mov
ret
sti
imul
push
add
cltd
and
insb
negb
pop
aad
icebp
in
adc
testl
bound
push
jns
insl
stos
push
mov
jb
cmp
xchg
clc
pop
outsb
pop
and
aas
cld
sub
xor
ret
daa
push
test
pop
repnz
sub
xchg
std
and
repnz
xchg
pop
mull
fsubl
adc
push
and
int3
outsb
push
and
out
loope
mov
data16
or
mov
xor
mov
fmuls
pop
outsl
pushw
outsl
pop
and
push
xchg
test
cmp
ret
dec
xchg
or
mov
add
inc
fbld
stos
imul
mov
adc
mov
in
pop
outsl
push
mov
or
lret
icebp
push
pop
add
and
inc
ljmp
push
loope
pop
mov
mov
add
out
stos
lcall
aad
notl
rclb
lahf
mov
in
or
jno
dec
sbb
imul
or
and
gs
daa
rcrl
scas
mov
subl
mov
lret
sub
roll
ud0
mov
dec
push
mov
fnsave
push
xchg
push
or
enter
mov
lods
out
push
inc
xchg
and
add
jge
ds
xchg
stc
call
leave
cmp
outsb
sbb
sub
push
in
mov
movsb
lahf
lret
fisubs
rclw
dec
sbb
arpl
or
subl
fidivrl
add
scas
pop
test
fwait
add
mov
fistpll
adc
int3
fldt
loopne
add
sahf
cmp
aas
icebp
sub
insb
push
inc
xor
cwtl
cmp
xchg
xor
cmc
jb
outsl
imul
mov
pusha
pop
lcall
sub
shlb
mov
dec
mov
push
sub
cli
daa
mov
aaa
sub
cmpsl
sbb
add
push
int
xchg
jno
js
xchg
leave
movsb
pop
stos
inc
xchg
sti
fidivrl
add
mov
lds
inc
fs
mov
inc
dec
mov
outsl
xchg
into
add
movsl
les
jp
push
loope
cmp
xor
and
mov
clc
mov
inc
jg
cld
inc
adc
cmp
mov
test
jle
cmp
add
in
mov
scas
push
inc
push
cmp
mov
or
push
clc
push
int
roll
adc
mov
cltd
popf
push
fwait
lret
push
in
rorl
lahf
push
sub
hlt
jo
dec
arpl
aas
cltd
jae
push
inc
adc
mov
sbb
add
ja
lock
es
add
inc
or
mov
cmp
push
jo
jl
push
sahf
pop
add
ficomps
fucom
xor
ds
jp
add
test
fwait
xchg
sub
push
jno
cmc
jae
dec
mov
aam
jnp
jae
lds
mov
popf
xchg
adcl
adc
pusha
jo
mov
popf
daa
cwtl
nop
pop
in
mov
inc
mov
and
push
cmp
xchg
ret
and
in
jmp
sbb
jns
jae
shll
mov
jle
add
cli
or
jp
dec
push
mov
push
sub
mov
into
or
pop
aam
decl
fildll
cltd
out
ret
in
pop
mov
pop
sti
imul
lret
inc
or
fdivrs
pop
sbb
mov
jg
inc
fiaddl
imul
add
dec
mov
inc
jl
loope
pop
pop
hlt
sub
ss
sar
or
sub
mov
movl
scas
or
stc
or
insb
ret
sbb
stos
sub
stos
fmuls
mov
data16
add
jnp
dec
push
fcompl
pop
das
ljmp
sbb
jle
mov
push
call
sahf
or
cmp
and
lret
xor
loope
push
cld
out
cld
jge
pop
mov
out
test
out
out
jo
xor
out
mov
cltd
xchg
cmp
pop
loope
sbb
jl
mov
pop
hlt
and
push
lcall
sub
and
sti
inc
test
sub
dec
addr16
push
sub
xor
bound
je
jp
or
test
scas
into
lcall
xor
fadd
notb
adc
insb
push
mov
and
cmp
les
ss
sbb
ficomps
je
inc
ljmp
cmp
in
dec
push
movsb
adc
mov
mov
repnz
inc
stos
mov
dec
lahf
mov
sbb
mov
je
sbb
call
icebp
subb
testl
repnz
out
ror
inc
das
mov
enter
repnz
insb
arpl
xchg
in
sahf
xchg
pop
inc
inc
pushf
mov
sbb
jb
adc
pop
imul
ljmp
imul
iret
iret
cmc
je
cli
hlt
repz
mov
push
dec
and
ret
push
and
popa
cmp
inc
xchg
cmpsb
inc
sbbl
mov
lods
inc
rcrl
or
mov
out
dec
shrl
movsb
cmp
inc
aas
outsl
dec
mov
into
or
inc
and
dec
cmpsb
sbb
pop
push
das
sbb
test
and
mov
jp
mov
mov
les
or
out
in
mov
fsts
ret
cwtl
sub
or
mov
outsb
push
and
xchg
or
lret
sub
push
lds
jo
inc
jmp
add
shlb
adc
xchg
dec
clc
lods
mov
add
ja
add
fisttpl
adc
pop
loopne
cmp
fcos
mov
sbb
sub
jmp
push
nop
inc
loopne
inc
pop
dec
cmp
xor
add
xor
and
insb
in
imull
dec
xchg
rolb
adc
or
icebp
jns
es
out
scas
dec
add
cmpsl
sar
mov
cmpsb
scas
outsl
xchg
cmpl
daa
jbe
stc
bound
outsb
ret
f2xm1
js
aad
loop
push
or
mov
bound
int3
imul
pop
mov
lret
int3
adc
ret
aad
push
mov
lret
aas
cli
and
loopne
test
sub
or
sbb
in
xchg
in
fidivs
mov
fs
sbb
xor
arpl
mov
mov
sahf
and
push
mov
aad
adc
pop
ljmp
arpl
in
or
pop
inc
fidivs
push
pop
shl
inc
dec
loop
pop
shlb
das
mov
add
jmpw
popf
mov
mov
mov
into
adc
push
sbb
jae
jnp
push
inc
jle
and
push
adc
test
in
push
je
ret
push
cltd
stc
call
cli
adc
add
or
xlat
dec
int
fisubl
std
jmp
cwtl
imul
fs
sub
cwtl
push
cmp
mov
sbb
call
pusha
lock
add
movsb
aas
lret
jns
mov
dec
mov
test
loopne
and
outsl
lahf
movsb
sti
mov
mov
add
addr16
sbb
loope
cmp
jge
and
out
lcall
dec
rcrl
orb
fsub
icebp
push
xor
out
mov
cmp
xchg
in
arpl
xchg
ss
xchg
cmpsb
repz
fmuls
in
fucom
push
jne
repnz
mov
mov
cmpsl
lcall
xchg
fdivl
int3
popa
call
mov
xor
cld
xchg
push
add
cs
cs
js
push
adc
jb
pop
xor
nop
jno
dec
leave
orb
fsubrp
xchg
frstor
orb
mov
xor
jecxz
int3
xchg
mov
hlt
rclb
dec
xchg
pop
lahf
push
cmp
es
xor
and
test
test
add
pusha
aad
shl
xchg
mov
adc
jmp
inc
push
mov
jmp
loope
int3
push
mov
imulb
aad
push
ret
cmc
out
mov
roll
cmp
aas
call
insl
lcall
iret
out
test
adc
clc
push
cmp
sub
lret
push
repz
lock
push
loope
rolb
xor
pop
xchg
mov
add
test
movsb
adc
xor
jbe
sbb
loop
pop
xchg
jecxz
test
imul
inc
clc
call
arpl
std
dec
pop
and
les
ja
jae
lds
movsb
decb
clc
popf
xchg
fisubrl
out
in
inc
pop
aas
or
inc
cmpsl
jmp
addl
ror
cli
clc
ja
jmp
in
lahf
inc
cltd
mov
jo
adc
cs
aad
sti
sbb
adc
cld
cmpsb
pop
and
in
pop
sub
mov
mov
and
inc
or
or
rorl
jmp
scas
adc
outsl
rcr
dec
imul
bound
in
icebp
xor
inc
inc
popf
xor
addr16
stos
mov
jno
leave
in
sbb
sbb
jbe
xor
pop
pusha
or
or
xchg
inc
and
push
sarl
cmp
cs
call
shlb
lock
gs
dec
nop
push
dec
sbb
xchg
sbb
xor
mov
dec
fstps
lcall
lahf
mov
testb
fs
mov
out
leave
mov
loope
mov
outsl
sti
inc
pop
inc
loop
outsl
mov
adc
xchg
jmp
ret
cmpsl
pop
lea
and
sub
mov
or
pop
or
sbb
jnp
jno
cmc
gs
imul
or
mov
mov
push
data16
loope
dec
fwait
adc
shl
sahf
cld
dec
jne
imul
movsl
and
test
cmp
shlb
mov
dec
pop
and
into
dec
ljmp
imul
test
adc
rorb
aad
test
cmpsl
pop
inc
push
jle
pop
ds
xchg
sub
outsl
push
dec
adc
movsb
xchg
fcmovu
xchg
inc
scas
in
mov
into
fildll
mov
dec
das
dec
loopne
sarb
lods
lea
push
pushf
aaa
sti
pop
scas
pop
in
push
push
loop
and
inc
mov
scas
jg
mov
push
scas
out
hlt
out
sub
fdivr
fidivl
pop
inc
pop
test
imul
xchg
push
lds
xchg
mov
js
cmp
cld
xor
ret
loope
push
mov
ss
push
or
cmp
aas
pop
cmp
pusha
ret
lret
sbb
sub
push
sub
in
mov
clc
pcmpgtd
inc
pop
cmpsb
in
test
imul
jmp
rorl
fistl
sbb
jo
hlt
xchg
imul
lcall
bnd
adc
jns
aas
xor
inc
jmp
add
or
sbbl
jle
add
fwait
cmp
sub
insb
movsb
test
mov
sub
add
dec
and
js
in
add
inc
es
sbb
jae
fistpl
push
mov
push
xchg
lds
sarl
rolb
pop
sbb
pop
ja
add
xchg
pop
ds
mov
cmp
push
xchg
cmp
jmp
ljmp
jle
mov
jmp
test
adc
sbb
jl
sub
orb
fwait
aam
jbe
clc
dec
int
cmp
repnz
xchg
ja
xor
hlt
inc
pop
in
push
scas
lret
dec
push
loopne
les
sahf
inc
and
addl
lods
outsb
popf
enter
mov
push
sti
pop
push
sbb
mov
push
and
mov
nop
fwait
mov
cmp
test
or
sbb
pop
bound
cmpsl
scas
jns
jle
into
push
add
push
call
mov
loop
icebp
rorl
pop
xlat
pop
dec
fisttpl
mov
lea
adc
cmp
mov
insl
imul
dec
mov
adc
addl
fldl
and
add
mov
push
ret
xchg
dec
test
push
test
pop
ljmp
xor
mov
shlb
mov
push
kunpckbw
add
inc
jg
sbb
mov
hlt
mov
ret
xorl
mov
rcr
xchg
mov
ss
rclb
call
movsb
lret
cmp
loope
out
nop
jg
mov
je
or
imulb
fcomi
pusha
sbb
sbb
data16
sub
pop
ret
xor
pop
rol
outsl
cmp
rol
rcl
lock
add
sarb
fwait
movsl
jp
lea
pop
nop
dec
test
or
les
xor
add
sub
aaa
mov
mov
xor
xchg
jb,pt
mov
pop
sbb
jno
rcll
xor
out
mov
sti
sti
sbb
int
sbb
dec
cwtl
mov
js
inc
jecxz
cmp
dec
mov
lcall
icebp
mov
mov
les
sub
dec
jle
add
les
mov
push
or
divl
scas
sbb
cmp
sbb
mov
loopne
shll
mov
cltd
mov
push
inc
imul
repnz
xor
leave
out
push
dec
mov
fstps
sbb
ret
out
and
in
test
xlat
repz
fmull
cltd
scas
xor
lds
dec
maxps
push
inc
loopne
jp
into
adc
adc
push
aad
fadds
cmp
add
adc
sub
idivb
add
das
or
mov
call
in
mov
in
fidivl
cmpsb
loop
add
pop
ja
adc
cmc
sbb
fucomip
inc
adc
imul
ret
repnz
pop
cmp
mov
dec
xor
test
lahf
and
aas
xchg
jo
xor
add
or
xchg
mov
sbb
roll
cmp
mov
loope
mov
jno
mov
fnstcw
dec
and
sub
xchg
mov
out
add
int
push
mov
xchg
fisttpl
aaa
jo
repz
inc
and
sub
ds
jmp
pop
inc
dec
cmpsb
push
add
or
scas
push
ds
hlt
sarl
xchg
clc
stc
adc
mov
ret
push
pop
mov
xor
push
sarl
jp
add
aad
iret
not
fwait
sbb
aas
sub
out
scas
stc
bound
pop
and
xorl
and
adc
adc
jb
movsl
fisubs
arpl
and
jne
jns
and
popl
xchg
ds
lods
inc
clc
adc
bound
adc
cmpl
push
test
lods
stc
stc
pop
test
aaa
pop
inc
loope
ret
mov
icebp
out
xchg
push
dec
fiadds
movsb
movsb
or
mov
scas
sqrtps
mov
cwtl
add
les
insl
cmpsl
push
sub
adc
aaa
lea
xlat
push
sbb
xlat
jle
andb
ficompl
dec
call
in
jp
mov
adc
pop
or
lods
pop
in
pop
and
out
insl
scas
mov
push
outsb
fisubl
push
enter
test
jbe
adc
jp
xchg
daa
mov
das
ret
das
add
pop
vpmulhuw
inc
lret
test
or
jmp
push
popa
loopne
popa
call
out
mov
cmpsb
inc
test
jns
bound
aas
fnstcw
jge
jo
lcall
cs
roll
inc
xchg
mov
js
inc
xor
shr
cmp
jb
cmp
lds
out
rcrl
cmpb
xchg
scas
lods
sbb
push
inc
loop
jge
pop
mov
dec
push
aad
xlat
and
jp
jmp
daa
outsl
das
sbb
movsb
push
hlt
jecxz
insb
sti
inc
dec
test
mov
adc
stc
loopne
add
ret
adc
ficoms
adc
lret
std
pop
mov
dec
insb
inc
add
xlat
inc
mov
add
lods
inc
addb
sbb
notb
mov
js
nop
loope
lret
test
scas
and
ljmp
inc
daa
repz
xor
sbbl
mov
inc
and
pop
mov
lock
push
in
lahf
jae
xor
int3
outsb
dec
xor
cmp
insl
adc
sti
out
dec
jle
jne
stos
push
in
cs
hlt
mov
in
mov
nop
mov
es
push
inc
fnstsw
inc
lret
pop
push
aaa
js
cld
jl
enter
popa
adc
and
xor
dec
outsb
je
mov
imul
dec
mov
repnz
mov
and
es
sub
rcrb
add
aam
rcrl
xlat
push
xchg
movsb
sub
push
ljmp
mov
stc
negl
lret
lods
cld
int
pop
xchg
mov
inc
mov
xchg
pop
jl
ret
mov
js
movsl
xchg
loopne
push
ftst
jbe
sahf
mov
or
jmp
jo
mov
pop
sub
repz
aas
ds
dec
and
in
repnz
push
mov
mov
in
lret
or
insb
lock
lea
inc
je
jnp
mov
mov
or
std
jp
mov
jle
icebp
out
sub
push
adc
ss
xchg
sub
dec
adc
jg,pn
stos
mov
in
jnp
or
shl
in
mov
mov
add
sar
leave
mov
mov
test
mov
cmpsl
pop
dec
orb
outsl
call
cmp
xchg
movsl
loope
and
mov
sub
cli
shll
xor
cmpsb
mov
pop
hlt
mov
nop
lods
jge
push
adc
fldt
fcompl
sahf
mov
dec
movsb
xchg
dec
lea
add
daa
add
daa
add
rcr
cmpsb
mov
adc
or
inc
jns
or
mov
jae
jno
sbb
adc
test
mov
dec
lods
insl
arpl
adc
das
out
les
test
add
icebp
and
adc
cmp
dec
jbe
pop
repz
and
mov
mov
jmp
mov
jecxz
mov
test
stos
xchg
in
xchg
test
out
in
and
jmp
repnz
pop
out
out
test
out
adc
xchg
sbb
jge
push
xor
dec
rcrl
fnstsw
or
test
mov
sub
push
test
sbb
xor
mov
lret
mov
xchg
mov
jbe
and
inc
xorb
mov
jp
stos
push
dec
loop
dec
mov
mov
xor
mov
and
test
mov
add
add
test
int3
and
sub
mov
or
jle
nop
insl
in
mov
sbb
insl
or
pop
loopne
test
sbb
sbb
lock
jmp
add
ljmp
aas
pop
or
test
aad
iret
arpl
inc
stc
push
mov
pop
add
pop
test
lock
cmp
bound
scas
pusha
push
jbe
repz
popf
lret
mov
mov
xor
int
test
adc
mov
movsl
add
inc
mov
in
pop
mov
or
stos
imul
dec
jae
ljmp
adc
mov
sub
cwtl
push
and
stos
mov
mov
add
lahf
int
mov
shlb
pushf
pop
stos
lahf
es
jb
lahf
jle
inc
repz
or
mov
push
xlat
ffree
xchg
add
fnstenv
lds
gs
sbb
std
push
push
cmp
shlb
test
xor
jg
push
inc
cltd
out
sub
loope
or
push
fisubl
rclb
addr16
loop
iret
jecxz,pn
inc
pop
int
mov
mov
outsl
jg
dec
cmp
pusha
negb
jne
mov
dec
in
pop
and
sub
aas
jnp
cltd
fs
int
mov
in
clc
push
fcmovnbe
leave
inc
push
push
gs
test
ds
jb
pusha
out
data16
and
push
notb
xor
sahf
in
pop
out
test
pushf
lds
xchg
and
lcall
hlt
lock
mov
mov
mov
sbb
data16
mov
pop
lds
repnz
jl
cwtl
iret
and
and
lds
out
rorb
xor
sbbl
and
imul
test
xchg
sub
mov
into
imul
sar
das
fildll
dec
or
xchg
mov
sahf
push
adc
mov
lods
popf
inc
dec
sbb
aad
pushf
icebp
sbb
fwait
jnp
or
mov
aam
cmp
and
cld
fdivl
cmp
mov
inc
sub
ds
and
add
add
and
and
dec
test
adc
mov
fidivrs
push
mov
mov
cmp
lock
and
test
pop
sub
add
cmp
scas
jbe
mov
adc
xchg
paddusw
xor
inc
inc
sbb
push
lret
push
std
cmp
xor
sub
lret
fisubrl
push
push
add
inc
cmp
gs
or
mov
xchg
iret
icebp
cmpsl
ret
inc
jmp
nop
adc
pushf
pop
mov
sbb
cltd
push
inc
xor
std
out
lods
pop
mov
push
sbb
dec
sbbb
mov
cmp
xchg
pop
jl
dec
xchg
push
ljmp
pop
aaa
std
mov
outsl
dec
repnz
xchg
filds
or
push
daa
ja
insl
push
mov
nop
sbb
jnp
ficoms
mov
in
and
shrl
test
je
jmp
stos
push
clc
xchg
push
mov
cmp
cmp
add
pop
pop
dec
cltd
subl
stos
dec
push
dec
jb
jbe
push
hlt
dec
fisubl
fcoml
inc
lea
jb
dec
imul
jae
fbld
imull
adc
mov
pop
pop
jns
mov
in
jno
and
or
or
out
xchg
lret
sbb
xchg
dec
sub
int3
xchg
int
icebp
and
dec
inc
call
lods
sbb
into
jae
lods
mov
dec
sub
loop
xchg
push
pop
add
inc
lcall
mov
lea
jmp
shrb
aaa
xchg
mov
call
cmp
sub
adc
mov
nop
sbb
cmpsl
cmp
mov
sbb
mov
pop
adc
int3
cmp
outsb
and
lahf
xchg
jecxz
pusha
leave
ret
xor
push
into
xchg
dec
fimull
xchg
das
or
lods
movd
jl
mov
cmc
inc
stos
arpl
shll
sub
mov
add
out
fs
dec
int3
push
scas
dec
aas
aad
jne
jb
xchg
pushf
aad
mov
adc
xchg
push
or
movsb
loop
cld
sahf
pop
cld
sub
xchg
rsm
mov
into
pop
jo
sbb
fcomi
sbb
jne
repnz
outsl
popa
xor
dec
push
mov
mov
insl
adc
sub
lods
mov
mov
mov
outsl
dec
mov
push
cmpsb
dec
mov
mov
cmp
xchg
add
mov
mov
scas
push
test
imul
daa
movsl
stos
sub
aad
mov
sub
mov
out
ret
call
bound
xchg
adc
or
or
movsb
stos
sub
les
xlat
popf
fwait
enter
shl
fldenv
jle
mov
dec
jl
jae
push
pop
jmp
subl
mov
lods
mov
data16
push
push
repnz
push
lods
int3
decl
test
les
add
sbb
mov
mov
lahf
lahf
jecxz
in
mov
xchg
cmp
rclb
push
jnp
sbb
dec
popa
pop
sbb
mul
jl
in
cmp
add
adc
cld
subl
rcll
lret
add
sub
xabort
stc
push
out
cmpsl
inc
jle
pop
shlb
or
data16
lds
rcrl
mov
and
mov
and
mov
outsb
mov
repnz
mov
ror
jae
dec
mov
jle
out
and
test
dec
pusha
test
fdivrp
outsb
mov
mov
cmpsb
fldenv
adc
dec
jecxz
cs
aam
stos
pusha
pop
outsb
movsb
nop
in
and
dec
inc
and
fnstcw
pusha
outsl
iret
lea
repz
sub
in
adc
fwait
cmp
sbb
pop
xchg
jnp
les
stos
pop
add
sbb
fsts
sarl
and
add
sahf
sarb
mov
jbe
loopne
push
dec
cli
fsts
or
clc
jge
sub
cltd
mov
jl
jmp
xchg
phaddd
cmp
jnp
lea
mov
fsubs
sub
mov
jecxz
push
fisttpll
mov
and
outsl
int3
jp
sbb
cli
lds
mov
out
fcoml
jecxz
mov
xchg
wbinvd
mov
jp
jle
dec
fcompl
sub
dec
out
and
jl
xlat
gs
sub
sub
pop
sahf
in
daa
xchg
js
lods
stc
add
movsl
push
data16
ja
push
mov
inc
sub
roll
pop
push
push
and
sarb
xchg
push
mov
jecxz
clc
movsl
stc
mov
pop
push
cmp
mov
mov
jecxz
dec
mov
cli
hlt
inc
movsb
lcall
cmp
push
and
xchg
mov
dec
movsl
inc
pop
cmpl
fimull
decb
sbb
insl
fidivl
and
dec
scas
into
fstpt
pop
mov
sbb
hlt
cmp
inc
xor
pop
lcall
fistpl
in
lods
xor
outsl
movsb
sbb
stos
fs
enter
inc
mov
loopne
out
xchg
mov
inc
mov
std
push
faddl
and
subb
adc
mov
or
or
daa
xchg
scas
jo
push
outsl
fsubrl
loope
leave
mov
sti
jo
arpl
lcall
test
pop
fwait
cmp
adc
imul
pop
or
adc
jge
data16
pop
inc
xor
sbb
sub
test
push
mov
xchg
repnz
mov
adc
jb
call
js
pop
lods
xchg
in
sbb
mov
aas
insl
add
mov
movsl
push
sbb
out
shl
xchg
stos
push
pop
ret
aaa
mov
fsubp
xor
and
scas
gs
cwtl
add
in
fisttps
push
aam
lret
mov
or
mov
dec
test
es
jge
jmp
std
push
adc
insb
mov
sbb
or
sahf
add
clc
hlt
mov
inc
and
jne
or
cltd
jns
mov
jle
mov
dec
push
inc
push
mov
pop
xchg
mov
xchg
mov
inc
pop
dec
std
sub
nop
xor
fistps
xchg
push
add
xorl
mov
xchg
xor
loop
aam
xchg
mov
xor
stos
and
jnp
nop
imul
sub
xchg
inc
mov
mov
pushf
xchg
adc
jb
mov
stos
add
mov
les
pop
test
lret
jns
xor
cld
inc
cmp
clc
pop
pop
decb
xor
nop
jae
push
pop
sarl
aam
xchg
ds
leave
test
fsubl
mov
sbb
pop
dec
in
nop
daa
into
leave
popf
cmp
cwtl
mov
sub
fists
dec
test
dec
mov
inc
faddl
dec
adc
pop
cmpsl
int3
mov
mov
cmp
icebp
bnd
mov
dec
mov
add
fs
push
sahf
inc
hlt
mov
test
shl
stos
popa
pop
ja
jb
test
lcall
mov
add
jmp
je
cs
int3
and
arpl
xchg
sbb
cmp
push
add
pop
and
sti
push
mov
cmp
push
cmp
or
ja
cmp
jle
ret
mov
dec
shrl
jmp
mov
mov
cmc
jp
sbb
lret
and
fstpt
outsb
mov
push
out
inc
mov
imul
mov
arpl
cmp
in
decl
das
lods
call
lds
cmpsl
arpl
sbb
into
ljmp
das
cmp
jnp
xchg
sbb
adc
insb
scas
fisttpl
cltd
and
in
dec
sarb
out
pop
mov
xor
in
or
lahf
in
push
addr16
mov
pop
jmp
adc
mov
mov
outsb
sub
cmp
jl
fwait
add
call
mov
pop
mov
jbe
xor
xchg
mov
cmp
push
fisttpll
das
sub
xchg
bound
daa
ss
inc
dec
adc
pop
bound
daa
dec
gs
int
jp
aam
sbb
push
cli
xchg
fcmovne
std
push
movsb
insb
and
sbb
stos
mov
scas
jnp
stos
push
mov
adc
adc
bound
dec
filds
cmp
std
in
test
cmpb
sub
aaa
pop
mov
jae,pn
mov
shrb
pop
int
lahf
push
test
jle
pusha
aaa
push
xor
mov
add
inc
je
push
lock
out
adc
mov
test
or
lods
pop
lret
xchg
fisttpl
push
inc
inc
into
ret
sti
fsubrp
pop
and
insl
iret
cmp
push
lret
mov
mov
movsl
aaa
out
shrl
xchg
sub
adc
mov
stos
movsl
mov
les
dec
out
add
pop
movsl
add
mul
push
sbb
sbb
mov
add
mov
add
fnclex
fidivs
sub
sahf
cmp
adc
in
shll
add
cmpsb
mov
push
out
jae
jmp
cmp
ja
mov
bound
jl
add
sbb
in
xor
jb
xchg
sub
idivl
addl
addb
int3
push
cwtl
mov
mov
ljmp
out
sbb
pusha
aam
lcall
jg
pop
pusha
ficompl
movsl
inc
fnstenv
movsl
jb
mov
lahf
aam
repz
adc
push
roll
fnsave
cmp
iret
mov
xor
shl
jg
dec
xlat
mov
sarb
in
and
xchg
pusha
aaa
dec
fwait
lret
scas
xchg
aam
adc
cltd
addr16
lock
insl
xchg
out
sbb
xor
xor
in
scas
dec
outsb
sub
outsl
lods
adc
lcall
xor
je
push
lret
sbb
mov
add
sarb
cltd
fiaddl
js
fsubs
scas
mov
and
adc
cmpsl
ljmp
jno
jle
popa
sbb
arpl
and
mov
jo
and
int
sarb
popf
push
cmc
int
test
push
or
insl
mov
arpl
adc
sub
mov
jge
jge
scas
sbb
cld
fcompl
add
push
nop
test
orl
inc
pop
cmp
shll
shrl
xor
sar
and
out
dec
sar
add
pop
or
push
add
and
inc
idiv
xchg
push
mov
dec
insb
sbb
push
fcmovnb
shlb
pop
ss
popf
and
fs
sahf
mov
dec
sbb
ja
repnz
ror
jb
and
jecxz
icebp
sahf
cmp
call
loopne
jnp
je
sti
push
leave
dec
and
and
push
lret
xchg
mov
test
sbb
imul
arpl
out
les
insl
jne
mov
mov
jno
dec
jl
scas
pop
in
jecxz
insl
aam
imul
push
ljmp
out
popa
pop
add
jns
xchg
xor
cld
cmpsl
movl
pop
fnstenv
das
jle
push
fadds
pop
inc
mov
mov
daa
xor
lock
popa
jae
bound
adc
jno,pt
sub
sub
cmp
lret
rcrb
aaa
nop
dec
popa
inc
add
or
cmpsb
dec
and
ljmp
adc
and
xchg
fwait
loopne
es
pop
jo
xor
inc
mov
jae
jmp
mov
dec
inc
rorb
adc
jno
scas
jl
mov
scas
sti
shrl
fisubrs
or
xor
lea
call
movsb
lods
lock
inc
insb
ljmp
adc
scas
pop
cmp
xor
popa
loope
cwtl
mov
sub
leave
push
cmp
push
stos
adc
mov
cltd
flds
xchg
adc
jae
pop
bnd
push
pusha
xor
mov
scas
mov
ss
mov
pop
ljmp
mov
lahf
ljmp
push
repnz
stc
or
dec
and
nop
fdivl
dec
xor
or
xchg
xor
mov
out
jl
jecxz
mov
pop
gs
je
aam
add
cli
xchg
dec
dec
test
cmp
xor
divb
xchg
mov
lods
jmp
fists
push
das
int3
jl
or
addr16
insl
xchg
jb
imul
cmpb
ja
movsb
in
add
repz
push
xchg
push
daa
shr
and
pop
jbe
pushf
push
pop
push
ret
sub
test
sahf
lcall
aam
pop
lods
inc
orb
sarl
cmc
out
push
push
jae
push
or
add
scas
push
adc
xor
sbb
and
shll
adc
or
ds
mov
mov
loop
mov
jecxz
arpl
xor
ljmp
imul
gs
or
xchg
cmc
adc
jnp
sub
out
inc
fs
mov
dec
lea
sbb
cmp
mov
sahf
and
or
sti
mov
push
gs
mov
push
roll
js
xorb
ret
or
pop
cwtl
add
or
sub
add
andl
sbb
cmp
mov
leave
xchg
mov
fisubrl
mov
int
and
lcall
add
call
mov
xor
push
sub
aas
push
adc
jae
push
sub
ss
sub
push
mov
outsl
xchg
xor
into
inc
mov
das
test
mov
out
cltd
mov
insb
int3
andl
jae
xchg
lods
imul
xor
rcrl
mov
xor
stc
dec
mov
pop
cmp
cmpsb
xchg
jo
stos
loop
adc
imul
sub
cwtl
or
jno
push
add
adc
hlt
aam
loop
fidivrl
and
pop
les
jle
notb
gs
inc
or
cmp
das
test
orl
dec
ret
fdivs
ss
add
xor
outsb
rcrb
xchg
cmpl
out
and
jl
push
cmp
cld
repnz
and
scas
fwait
clc
jbe
enter
insb
pop
sahf
fildll
insl
sbb
test
or
arpl
je
dec
jns
nop
or
stos
push
pop
leave
les
adc
mov
rcll
jae
xchg
push
test
iret
rorl
sub
movsl
int3
push
cmp
jle
adc
aam
xor
movsl
inc
jo
addl
ret
arpl
dec
sub
lahf
and
std
jae
insb
pop
test
push
stc
xor
inc
icebp
mov
popa
push
adc
in
out
movsb
xchg
and
out
xchg
insl
pop
in
outsb
fidivrl
push
sub
cmp
sub
js
add
pop
xlat
pop
push
popa
xchg
or
les
fsubrp
xorl
jp
pop
aad
jge
fistl
sbb
hlt
xor
jecxz
xchg
lods
push
lds
test
mov
jecxz
lock
push
sub
mov
mov
out
mov
mov
push
dec
scas
push
pop
into
xchg
lahf
push
bound
daa
cmc
arpl
popa
gs
ret
nop
dec
aad
xchg
filds
cld
mov
outsb
mov
pop
bound
les
into
mov
jp
ret
pop
xor
daa
and
lods
out
sbb
loope
sub
hlt
lea
add
adc
jg
out
xor
jle
mov
dec
sti
je
sub
popf
pop
jle
jns
xchg
xor
jge
sbb
les
jmp
xor
pop
insb
inc
cmp
mov
faddl
ja
mov
loope
pop
sbb
xor
and
pop
fcmovne
dec
mov
cs
mov
jp
push
enter
pop
jno
loop
mov
mov
aad
test
sarl
iret
cmp
push
mov
cs
mov
mov
adc
and
inc
imul
mov
pop
aaa
sbb
cmpsb
out
mov
lds
xchg
mov
jp
arpl
push
inc
sub
dec
xchg
and
fbstp
mov
mov
fsts
jbe
add
ss
dec
rcrl
lahf
hlt
sub
out
mov
inc
mov
push
scas
loope
out
lods
movl
int
ja
out
jmp
imul
sbb
jno
inc
pop
cmp
repnz
stos
aas
leave
dec
adc
add
jmp
adc
sahf
mov
pop
std
sub
adc
lahf
in
jno,pt
lahf
xchg
jg
adc
addr16
js
sub
movsl
push
push
into
inc
adc
into
xchg
fs
lods
hlt
test
arpl
sub
cmp
jo
fistpl
push
rorl
jae
jge
jo
pop
xchg
sbb
mov
fcmovbe
test
fstpl
and
sbb
into
lods
cmp
mov
loopne
jp
das
lods
or
out
jb
cmpb
mov
inc
push
repz
or
mov
mov
xchg
mov
test
adc
or
test
push
ss
xchg
fisubs
movsl
mov
and
in
mov
dec
fimull
jl
leave
arpl
imulb
fwait
jle
leave
inc
cmp
push
sub
jle
and
hlt
inc
dec
jbe
addb
dec
xor
adc
inc
insl
sbb
lcall
sbb
ds
and
pop
cmp
mov
mov
xlat
push
xchg
xor
or
adc
mov
adc
mov
or
xchg
test
and
fs
pop
xchg
push
jg
push
sub
and
push
movsb
mov
je
popf
repnz
mov
jo
sub
es
mov
loop
mov
push
inc
repnz
push
push
pop
fistl
inc
ds
jnp
shlb
inc
cli
push
add
mov
mov
inc
movsb
jmp
or
inc
mov
popa
lods
jb
mov
jmp
jnp
pop
xor
pop
jmp
add
outsb
jp
fisttpll
orl
cmp
andb
xchg
xor
mov
mov
mov
addr16
push
mov
stc
jnp
ds
pushf
iret
loop
inc
xor
ret
cld
inc
or
and
jl
jb
xorl
inc
mov
jae
sarl
jns
fcmovnu
sbb
xchg
xor
xor
mov
sbb
xchg
ljmp
push
ficoms
pop
ret
mov
mov
or
rcll
mov
dec
jle
dec
dec
jbe
es
rcrl
inc
lock
aad
lahf
xchg
mov
fildl
out
pop
push
test
jge
lcall
adc
loope
sbb
mov
cltd
std
mov
sbb
cmp
ljmp
clc
addl
xor
stos
jmp
int3
dec
insl
cmp
arpl
and
and
mov
pop
in
icebp
stos
std
or
add
loop
xchg
aad
xchg
or
popl
pop
cmc
xchg
xchg
xor
movsb
and
xor
and
insb
in
mov
pop
jns
mov
std
lcall
cli
andl
addr16
mov
test
sbb
jl
inc
mov
idivb
sub
ja
jo
lcall
sti
rorl
and
or
dec
add
jne
inc
aas
jnp
xor
add
bound
inc
int3
mov
mov
inc
mov
mov
cmp
mov
jns
dec
repnz
mov
sub
sub
test
add
and
repz
lret
outsb
cltd
mov
pop
mov
lret
popa
inc
fisubs
loope
shl
loop
sbb
push
pop
loop
fstl
jns,pn
cwtl
je
sub
mov
mov
cmpsb
fildll
jo
lods
mov
cmp
pushl
mov
add
outsl
or
and
mov
jb
mov
fistpl
sbb
mov
stc
push
test
mov
popf
arpl
rorl
mov
out
das
pop
mov
jge
mov
pop
jo
fwait
xchg
pop
xchg
pop
mov
clc
insb
mov
arpl
hlt
xor
sbb
jno
insb
jmp
pop
sbb
mov
and
out
adc
out
mov
jl
lock
aam
lock
adc
pop
sahf
pop
ret
sahf
jmp
ljmp
xor
inc
inc
lds
mov
dec
sarl
adc
jnp
mov
sbb
sbb
std
mov
int
loope
adc
div
mov
mov
or
xlat
xchg
sub
ss
bound
sub
add
cmp
push
pmaxsw
outsl
aad
movsb
pop
mov
rolb
add
mov
push
loopne
pop
add
xchg
lahf
test
xchg
push
mov
into
loope
sub
dec
gs
in
mov
push
pop
inc
std
sub
mov
out
mov
and
dec
xchg
mov
scas
ror
or
std
jae
mov
dec
in
mov
std
fnsave
pop
mov
add
dec
int3
jns
lcall
mov
sbb
fmull
sub
fldcw
bound
mov
inc
pop
ret
xor
inc
hlt
and
add
fwait
pop
mov
xchg
lret
mov
daa
pop
imul
test
ljmp
add
inc
inc
cwtl
xrelease
xor
xor
or
mov
or
shll
jp
xor
int3
pusha
cwtl
rcr
push
fwait
cwtl
and
daa
xlat
mov
add
sbb
fstps
mov
fisubs
nop
fsts
push
daa
jmp
cmp
inc
icebp
loop
lret
das
ror
and
fucomi
js
cmp
xchg
mov
push
sahf
push
and
mov
mov
iret
push
add
mov
sahf
push
mov
xchg
dec
mov
mov
das
lahf
mov
iret
adc
movsb
pop
add
fadds
add
push
fcmovb
mov
adc
iret
push
cld
xchg
dec
inc
adc
xchg
popf
sbb
dec
xchg
or
cmp
insb
pop
push
fcompl
jne
push
cli
push
ffreep
xor
jbe
xlat
or
mov
cmp
shlb
popa
pop
mov
rclb
roll
shl
fadds
jns
popf
inc
nop
push
mov
sbb
pop
inc
push
pop
stc
sbbl
dec
js
or
dec
ficoml
pusha
mov
jno
scas
loope
pop
mov
xor
insl
xchg
int
dec
pop
jno
sbb
aam
cld
adc
movsb
into
sub
imul
outsb
ja
test
mov
push
push
cmpl
jle
lcall
jae
ja
push
or
shlb
xchg
inc
and
jb
and
inc
inc
inc
fcomip
gs
clc
loop
out
test
push
adc
mov
les
or
and
add
js
cmp
imul
mov
dec
loopw
or
jbe
lcall
pop
je
sbb
xlat
imul
bound
add
jp
test
cmpsl
imul
push
jb
add
mov
aaa
jle
in
lods
scas
sub
lret
popa
test
rclb
mov
push
push
and
push
jg
icebp
test
scas
scas
xchg
mov
push
add
inc
inc
mov
pop
sub
bound
je
and
lods
int3
cmp
out
pusha
mov
inc
faddl
pusha
mov
mov
or
pop
mov
repnz
int
lret
imul
sbb
push
push
add
sbbb
xor
pop
aaa
inc
cltd
push
fcmovnu
aam
aam
and
mov
mov
mov
pop
pop
cmpsb
cltd
mov
insb
test
je
cmp
pop
xchg
call
xchg
jl
ror
inc
fwait
lds
pop
imul
testl
inc
jnp
into
lods
and
js
loopne
jmp
cli
loopne
inc
shl
stos
movsl
add
fistpl
mov
inc
xchg
pushf
ds
mov
sub
inc
sub
icebp
clc
cs
nop
mov
sub
shl
sbb
lahf
les
mov
test
outsl
sub
add
scas
fwait
pop
xchg
in
addl
sahf
jb
cld
cmc
test
idivb
into
and
sbb
pop
pop
lcall
insb
sbb
push
daa
into
mov
push
les
mov
divl
pop
sbb
and
imul
insl
adc
push
jae
or
dec
rorb
pop
ds
pop
push
vpmulhuw
fdivrp
pop
pop
shrb
clc
je
push
fs
nop
cmp
xchg
stc
les
sbb
jbe
aad
mov
push
xorb
jmp
scas
pusha
sub
in
pop
add
out
lds
jmp
inc
dec
fmul
bsf
scas
outsb
cmp
jbe
loop
fcmove
dec
aad
shrl
mov
cmp
dec
lock
or
loop
dec
dec
and
xchg
inc
add
addr16
fistpll
xlat
aam
sub
mov
pop
gs
jb
in
xchg
dec
shl
pop
in
lret
cmpb
in
pop
sub
inc
out
fnstsw
push
arpl
sbb
incb
outsb
inc
xchg
pusha
pop
mov
out
enter
add
jae
jle
je
push
pop
ds
std
or
test
xchg
add
loopne
sub
fwait
jnp
cmp
adc
cmp
xorl
xor
mov
mov
imul
pop
and
jmp
lock
or
jae
lods
pop
mov
cmpsl
mov
cltd
subb
jmp
push
das
popf
cmp
mov
ds
sub
xchg
ror
xchg
addr16
jns
pop
sbb
ds
or
mov
pop
adc
cmp
jmp
jbe
ds
mov
cmp
and
push
lret
sbb
inc
and
lods
pop
addb
sarl
dec
sbb
ret
stos
or
inc
jae
lods
inc
fst
enter
inc
adc
xor
mov
je
cwtl
cmp
lock
fs
sbb
dec
inc
icebp
mov
xor
mov
or
lods
fcmovnu
jne
cmp
repnz
aas
daa
cmp
or
lcall
and
adc
pushf
lret
rclb
sbb
push
dec
das
pop
stos
out
push
test
lret
lods
jp
daa
int
dec
ret
insb
aam
cmc
leave
jmp
stos
xchg
cli
loope
jmp
std
mov
pop
xorl
dec
push
xor
pop
insl
push
arpl
ret
dec
in
lods
stc
scas
inc
enter
pop
or
cmpl
sarb
lods
hlt
imul
inc
fiaddl
sub
in
movsb
cli
dec
xor
pop
fst
notl
adc
push
sub
loop
insb
and
icebp
aas
cmpsb
pop
ja
sbb
cmp
jmp
and
push
into
ret
out
fdivrl
sub
add
xchg
push
pop
pushf
mov
dec
push
cmpsl
ret
stos
repnz
loopne
mov
xchg
inc
fstp
cmp
fistps
mov
mov
data16
mov
mov
es
jle
in
push
jmp
push
sub
inc
inc
out
pusha
xor
ror
adc
push
jb
leave
or
mov
pusha
movsl
out
inc
push
mov
jne
sbb
jge,pt
fucomp
shrb
nop
jmp
push
dec
in
mov
leave
cmc
xchg
pslld
in
test
imul
test
ss
cmpsb
addl
sub
testl
adc
sbb
sbb
out
fcmovnbe
xchg
icebp
mov
mov
mov
sbb
mov
js
adc
mov
add
aam
push
mov
push
push
and
mov
negl
pop
jbe
push
sub
adc
xchg
xor
jne
stos
adc
icebp
jne
lret
ss
sub
mov
and
inc
mov
cltd
add
aas
inc
jb
cmp
jno
subb
jne
std
cmc
adc
adc
mov
movsb
clc
ret
sub
inc
push
fwait
mov
add
in
pushf
and
jl
jo
dec
dec
push
addl
mov
movsb
push
sub
xor
clc
ljmp
adc
test
cmp
stos
pop
add
ret
ljmp
inc
fwait
cmp
xchg
rcrl
ja
lock
dec
mov
inc
aad
rorb
sub
jg
dec
mov
add
inc
jnp
jg
into
pushf
pop
clc
fwait
xchg
gs
cld
in
scas
mov
push
pop
adc
inc
sub
into
jnp
jge
push
cmpb
dec
mov
or
jbe
dec
push
dec
dec
jecxz
pop
push
inc
or
mov
gs
or
popa
orb
cmp
sbb
aad
roll
jge
clc
daa
xchg
push
insb
mov
outsl
dec
xchg
notl
jmp
daa
pop
dec
andb
mov
cltd
call
pop
xor
xchg
das
cs
sbb
loop
inc
cmpb
lods
and
mov
data16
into
add
add
push
sti
push
cmp
dec
pop
fbstp
mov
rcll
push
mov
clc
dec
mov
dec
outsb
shlb
idivb
sbb
push
sbb
lds
mov
or
push
mov
add
lret
and
mov
xor
outsl
movsl
cmp
xor
xor
ficomps
cld
dec
push
clc
ljmp
popf
push
and
mov
aaa
and
testl
cld
jle
pop
xchg
mov
adc
mov
in
stc
inc
jb
notb
xor
mov
add
scas
cmpsb
and
aam
nop
add
aam
cmp
xchg
inc
stos
dec
inc
pinsrw
pop
xor
cmp
cmp
adc
and
add
cmc
in
fdivs
mov
fdiv
mov
leave
jecxz
ja
xchg
in
inc
xor
addr16
push
sub
in
mov
xchg
cmpsb
jcxz
dec
adc
jae
mov
movl
cwtl
in
jp
push
jp
push
lods
push
lods
pop
movsb
jno
ret
enter
iret
imul
push
add
ja
mov
shl
mov
lods
pop
inc
xor
dec
adc
mov
lea
lods
mov
push
cmp
sub
mov
mov
dec
int3
adc
pop
gs
rcrb
insb
and
repz
jo
or
adc
aas
divl
xchg
ficoms
jmp
push
test
das
xlat
jl
sub
adc
cmp
movsl
xchg
sub
icebp
mov
rcll
mov
jbe
std
sbb
sbb
xchg
icebp
cmp
cwtl
dec
adc
movsl
add
xor
aas
shrb
sarl
dec
bswap
adc
aas
add
cld
mov
jl
or
mov
adcb
push
daa
data16
shll
push
push
leave
sub
mov
sti
rorb
add
pop
xchg
inc
sbb
pop
jne
add
dec
pop
jl
cmp
mov
nop
mov
xor
inc
je
ljmp
sbb
cmp
pop
stos
mov
mov
inc
int3
xor
jg
cmpsb
out
fdiv
sbb
add
ja
sub
pop
jb
lret
outsb
push
add
outsb
add
adc
sbb
push
arpl
mov
stc
aam
cmc
idivl
iret
loope
aam
dec
mov
dec
repnz
push
pop
sub
mov
movswl
dec
and
gs
les
out
xor
dec
cmpsb
repz
xor
addr16
xchg
loopne
fsubrl
das
push
sub
mov
inc
lret
insb
jecxz
pop
test
shll
cmpsb
and
jecxz
imul
push
mov
je
mov
xor
cmc
cmp
lods
or
daa
lret
ljmp
pop
lds
mov
sti
cmc
adc
adc
loope
repnz
mov
lcall
add
outsw
pop
xchg
clc
sbb
cmp
in
push
xchg
mov
cmpl
push
pop
dec
mov
daa
dec
les
inc
push
sub
dec
scas
xor
push
add
dec
mulb
adc
jo
mov
fimuls
std
push
bound
lods
fucomp
or
mov
mov
add
lcall
test
pop
xor
sarl
xchg
repnz
mov
pop
dec
lods
and
add
mov
sub
lods
mov
sub
add
push
out
aad
cmpsb
jnp
add
inc
loopne
ret
xchg
test
stos
add
mov
sahf
out
ja
adc
loope
mov
insl
adc
cmpsb
xchg
sahf
jb
je
jmp
data16
inc
dec
hlt
pop
xor
aad
es
inc
rorb
mov
mov
les
insb
ds
jo
fs
pop
push
sub
stc
popf
sti
mov
push
cmp
dec
inc
inc
ror
cli
mov
call
aaa
and
fwait
or
cmp
ss
sti
aaa
pop
xchg
jmp
sbb
in
pop
shrl
jno
sub
cmp
add
std
cwtl
sbb
push
push
jg
jno
cmp
jge
stos
jmp
push
je
cmpsl
inc
mov
mov
rep
or
push
adc
test
je
pushf
mov
pop
xchg
fistpl
mov
push
fcoms
popa
rorb
push
dec
cmp
inc
adc
sbb
xchg
outsb
orb
lea
and
adc
popf
ja
loopne
or
out
dec
xor
loope
fnstsw
mov
cwtl
sarb
jae
ds
push
jne
mov
pop
dec
ret
jno
lods
es
jne,pn
into
call
pusha
xlat
inc
jnp
rolb
pop
push
sub
push
lods
test
push
inc
add
add
mov
fildll
xor
fdivrl
sbb
jle
or
je
shrd
and
or
fildl
data16
mov
inc
stc
pop
into
ret
pop
and
repnz
pop
int
icebp
pop
insl
xlat
mov
add
fwait
mov
filds
scas
mov
push
mov
pop
cmpsl
cmp
cmp
inc
push
sub
lea
xor
or
fdivr
add
arpl
popa
mov
sbb
sbb
xorb
pop
adc
adc
push
fisubs
push
aaa
jmp
movsl
pop
mov
lods
fstp
fisubrs
mov
or
lcall
pop
fwait
out
pinsrw
ret
add
out
xor
popa
add
and
lea
push
sub
sub
inc
inc
movsb
insl
xor
daa
jnp
push
popa
jmp
sbb
jno
hlt
push
jne
lcall
shlb
or
popa
xor
sub
lods
imull
loopew
test
xchg
sbb
mov
xor
dec
addl
jmp
mov
ret
es
sbb
xorl
mov
sbb
push
pusha
cmp
mov
ds
pop
outsb
stos
inc
lret
mov
lods
inc
or
xchg
pop
cmp
cltd
jecxz
das
ss
jnp
div
mov
clc
stos
aad
push
shl
jb
mov
push
notb
and
shll
mul
dec
adc
jmp
popa
sub
jb
aad
push
leave
pop
inc
leave
cmp
inc
inc
ret
je
test
adc
cmp
adcl
mov
or
cld
fildll
push
pop
clc
ja
mov
in
cmp
mov
xchg
imul
cltd
mov
shr
push
sahf
and
push
mov
add
mov
jnp
test
cmc
add
lahf
idiv
ret
adc
insl
xchg
push
mov
xor
pusha
push
xchg
xchg
or
or
sub
sti
andl
push
aaa
sub
xor
loopne
mov
cli
mov
xorl
outsb
xchg
enter
stc
cli
sahf
shlb
cwtl
pop
dec
sbb
out
push
shll
in
mov
push
jg
cmp
sub
and
push
in
sti
jne
popf
push
lret
xchg
cmp
int3
call
inc
std
adc
push
mov
data16
bound
pop
loopne
cltd
je
mov
xadd
jne
inc
test
aaa
cmc
test
dec
icebp
dec
mov
test
push
pop
inc
mov
fsubl
sbbb
cmp
bound
lret
lret
subb
push
push
mov
or
data16
pop
sarl
call
and
jecxz
mov
sub
pop
xor
fsubs
fstl
lahf
leave
cmpsb
mov
fisubs
sub
cmp
and
dec
and
stos
movsb
int
gs
mov
jno
popf
add
dec
or
sub
cltd
pop
sahf
dec
pusha
add
repz
dec
and
or
mov
icebp
jl
sbb
mov
add
push
pop
mov
mov
fs
sbb
lret
xlat
push
inc
adc
mov
mov
jle
inc
fucom
in
jmp
jecxz
addr16
and
cmpsb
mov
inc
jnp
adc
jae
sar
call
dec
sub
xchg
jge
ror
int
inc
and
pop
mov
mov
xchg
pop
test
inc
mov
dec
xchg
mov
push
adc
and
xrelease
sub
mov
xor
stc
sub
scas
je
sahf
mov
xchg
and
out
push
xlat
loop
push
pusha
pushf
lock
sbb
dec
ljmp
jbe
fidivl
mov
nop
push
sbb
dec
sub
sub
jl
add
jne
inc
xor
js
sbbl
into
rclb
pushf
fwait
push
jp
iret
ret
notb
adc
push
xor
ljmp
xchg
push
lods
stos
xchg
mov
popa
cmp
mov
int3
ret
outsl
mov
fisttpll
jnp
jge
clc
fisubrl
push
mov
mov
aam
hlt
push
stos
sub
ljmp
mov
fisttpl
subl
cmp
push
push
dec
cmp
mov
clc
loop
inc
daa
jmp
addr16
lds
adc
or
fcmovbe
rcrb
icebp
std
daa
stos
mov
xor
cmc
sub
mov
or
repz
fistpll
sbb
fmuls
in
test
mov
jo
popa
rcr
push
test
mov
or
push
andb
pop
aad
jbe
cmp
pop
mov
lret
packssdw
mov
hlt
andb
out
movsl
sti
mov
fiadds
out
push
xchg
scas
adc
ret
scas
or
cwtl
mov
xor
dec
insb
cmp
subl
or
dec
or
and
mov
ds
inc
and
xor
data16
in
mov
mov
mov
add
push
sbb
out
movsl
cmc
dec
push
push
xchg
rorl
outsb
mov
fcmove
mov
jo
shll
mov
mov
movsl
inc
test
and
in
ss
jecxz
mov
in
imul
orb
xchg
sbb
stc
enter
nop
xchg
lods
daa
icebp
and
mov
stos
mov
and
roll
outsl
stos
push
xor
jbe
and
cmpsb
sub
aad
hlt
adc
ljmp
xchg
jp
rcll
push
rolb
hlt
sub
cltd
mov
xchg
stc
ja
cmp
ljmp
lret
pop
dec
test
cld
push
cmp
xor
fisubs
mov
xchg
xor
ja
mull
mov
arpl
push
jecxz
imul
mov
bound
pop
cs
data16
ss
test
aas
icebp
insl
mov
aaa
cld
mov
inc
data16
sub
shrl
mov
out
pop
xor
mov
ret
popa
inc
jle
aas
sbb
loope
push
daa
retw
test
and
pop
ret
sub
mov
xor
and
inc
sub
cmc
pop
data16
ds
mov
dec
sbb
stos
mov
adc
es
rcll
and
jae
mov
cmp
xchg
sarb
pop
cmc
jecxz
xchg
int3
mov
dec
clc
outsl
fcoml
add
scas
cmpsl
fs
ret
cmc
jecxz
mov
cmpsl
lea
sbbl
mov
adc
xchg
xlat
push
xchg
cmp
mov
js
lret
sub
popa
sbb
xor
scas
les
cmp
jmp
jl
jle
lock
outsl
std
adc
out
sub
lret
ja
stc
xchg
in
push
mov
pop
enter
test
push
cmp
jbe
mov
xchg
push
rorb
xor
stos
pop
fcomps
mov
adc
lcall
push
fs
mov
mov
in
popa
cltd
filds
push
fisubrs
mov
push
pop
lods
push
pushf
jb
pop
push
jbe
pop
jp
push
sbb
fmuls
push
cmc
ficompl
sub
push
repz
std
mov
jae
add
add
xchg
out
popa
pop
push
sub
das
or
jb
adcb
pop
sub
inc
mov
out
ljmp
repz
xor
lods
mov
les
pop
adcb
call
mov
cmp
pop
or
cli
fmul
sbbb
mov
sub
push
ljmp
dec
into
jge
sbb
add
xor
jp
in
pop
mov
ljmp
dec
fidivl
jg
jmp
dec
out
nop
ds
jo
mov
sbb
jae
pop
lret
or
jmp
or
inc
jb
cld
roll
adc
out
rcll
jecxz
xor
add
les
pop
iret
test
neg
xchg
cli
push
dec
iret
ret
mov
hlt
mov
scas
dec
xlat
loop
mov
in
movsb
out
and
fsin
loopne
mov
push
shr
pop
loope
push
cwtl
adc
adcl
push
sub
jecxz
pop
adc
sub
test
fldcw
rolb
cld
mov
lahf
mov
dec
nop
pop
int3
aas
mov
jae
call
hlt
sbb
cmp
stos
add
or
jg
das
popa
mov
or
mov
in
lea
pop
jae
push
repnz
fnsave
gs
xchg
dec
cltd
sbb
cmp
mov
cmp
push
push
mov
roll
addr16
or
or
lret
hlt
test
lds
pushf
gs
flds
outsb
jbe
in
insl
out
loope
jae
stos
add
cmc
clc
aaa
jo
arpl
sbb
and
push
dec
test
mov
mov
xchg
or
icebp
cltd
mov
repz
pop
insl
xor
popa
jmp
mov
inc
adc
inc
sbb
arpl
stc
jne
inc
pushf
add
addr16
ja
mov
sub
test
ja
xor
push
mov
cld
leave
fldl
pusha
jp
pop
lea
jbe
aam
sub
out
addr16
das
cmc
lods
insb
pop
or
and
push
sub
sub
adc
popa
ret
inc
ret
mov
lret
mov
loope
push
test
and
or
enter
mov
mov
loop
add
add
mov
mov
ljmp
push
dec
out
clc
ret
and
in
movsl
adc
cmpsb
in
test
sbb
mov
and
push
test
fwait
ja
xchg
fsubrl
jge
or
or
adc
sbb
and
daa
sbb
or
sbb
dec
out
loopne
push
mov
les
push
out
imul
push
adc
pop
push
xlat
mov
mov
outsl
xchg
dec
push
mov
pop
or
incb
cltd
pop
inc
cmpsl
iret
clc
adc
push
mov
out
outsl
jb
add
lret
insl
int
and
cltd
mov
js
sarl
xchg
sub
dec
pop
and
push
in
outsl
mov
sarb
inc
in
jp
adc
mov
and
daa
sbb
scas
sbb
jbe
cvtdq2ps
inc
inc
mov
out
or
mov
fisttpll
into
cmp
lret
xchg
mov
stos
cmp
dec
into
cli
stc
pop
enter
subb
out
adc
or
inc
push
cmc
and
pop
ret
push
in
cmp
sarb
xchg
dec
xchg
push
jmp
pushf
mov
repnz
and
stos
repnz
out
repnz
lret
pushf
cld
cmp
sub
dec
pop
adc
inc
adc
repz
cltd
xchg
mov
mov
test
xor
xchg
das
outsl
dec
push
addr16
push
insb
iret
int3
mov
mov
stos
inc
or
mov
push
je
xchg
out
fld
lret
push
popf
pop
add
cmc
jo
or
mov
das
or
fdivrs
and
pop
loope
movsl
or
mov
mov
lcall
lock
mov
sarl
jg
adc
pop
dec
mov
xchg
lret
pop
mov
add
xor
add
std
ret
cli
ljmp
fistps
lods
mov
and
rcrb
lret
mov
mov
mov
mov
neg
loopne
jae
dec
xor
jmp
mov
add
mov
sbb
mov
add
or
popf
push
rorb
push
fcompl
lock
cmp
jns
les
push
jmp
fwait
test
lock
sub
and
mov
sub
stos
movsl
jne
hlt
cmp
fs
std
scas
shlb
stos
inc
testl
bound
pop
test
shll
mov
popl
and
ljmp
insb
add
popf
dec
jae
popa
mov
in
adc
jne
repnz
pop
or
pop
jmp
insl
pop
call
out
fstpt
sahf
and
mov
mov
push
pop
in
scas
es
pop
fsubrl
test
fdivr
fiaddl
adc
sub
inc
mov
jmp
call
jle
pop
in
cli
push
sub
jns
mov
clc
orb
imul
lret
or
out
xor
fcompl
sbb
stc
mov
jmp
push
in
clc
loopne
lds
mov
xchg
pop
hlt
cmp
js
inc
xchg
cltd
fadds
adc
jb
pop
leave
add
pop
cmp
lods
rcll
mov
mov
shll
xchg
adc
mov
and
mov
add
push
cmp
adc
pop
dec
aaa
lods
movsb
pop
mov
out
or
adc
data16
xchg
mov
ljmp
fdivrs
dec
or
mov
jnp
outsl
fisttpl
dec
cmp
lods
mov
or
cmpsb
mov
int
ja
gs
pop
sbb
clc
imul
shlb
pushl
xor
inc
jns
sub
xchg
rcr
push
mov
add
call
and
int
fwait
inc
dec
jns
fists
fwait
imul
subb
ljmp
fistpl
xchg
push
mov
inc
loopne
jge
cmpsl
jae
and
cltd
xchg
jge
dec
sub
jno
roll
jo
mov
cmpsl
dec
pop
xchg
push
mov
pop
test
or
lahf
xchg
or
mov
popf
cltd
scas
mov
fs
lods
jnp
push
pop
add
stos
dec
pusha
sbb
mov
scas
outsb
and
and
cmpsb
cmp
lods
jo
push
inc
jecxz
fstps
cmp
jp
mov
jne
inc
dec
xor
lcall
sbb
mov
ljmp
mov
add
xchg
xchg
push
insb
pop
movl
mov
jo
mov
push
inc
sbb
test
adc
ret
add
out
int
popf
and
orb
iret
cmpsb
dec
jp
add
or
les
add
inc
pop
es
mov
xor
subl
sbb
into
imul
into
shll
mov
and
add
lea
mov
arpl
subb
ds
enter
dec
test
loope
pop
push
pop
out
cmp
stc
xchg
mov
int3
adc
dec
mov
fdivrl
fcmovnb
xor
mov
pop
pop
and
and
rol
js
test
in
addr16
xlat
je
hlt
inc
inc
pop
or
xchg
aad
sub
jmp
repz
andb
dec
mov
dec
fwait
repz
in
xchg
sub
movsb
or
jnp
mov
into
sbb
js
mov
into
in
ror
sbb
mov
rol
sub
pop
in
nop
push
adcl
dec
mov
incb
push
jle
addr16
prefetcht2
push
fimuls
sbb
xlat
arpl
inc
jg
xchg
sahf
xchg
lret
daa
cmpsl
push
xor
dec
inc
inc
jbe
scas
push
sbbl
dec
das
ret
imul
add
adc
aaa
push
dec
pop
lret
xlat
mov
movsl
mov
pop
ret
movsl
push
jae
or
xor
enter
push
xchg
sbb
je
cmp
cmpsl
adc
push
orl
inc
fidivs
push
jb
out
lcall
mov
imul
inc
xchg
stos
lock
inc
aam
jle
add
lds
xchg
fiadds
adc
leave
pusha
xchg
js
jae
dec
in
mov
inc
dec
dec
xchg
cmp
mov
xor
leave
out
or
pop
ret
out
inc
aad
mov
jp
xor
adc
adc
aaa
pusha
rol
sti
out
mov
mov
mov
stos
and
pop
movsl
jne
adc
les
mov
lahf
jae
or
push
jp
jmp
outsb
mov
jge
cs
push
repnz
sarl
and
dec
aaa
push
mov
dec
xor
fstl
mov
test
dec
adc
sub
pop
dec
lods
ret
notb
in
ror
imul
cmp
pop
mov
loopne
cmpb
imul
out
shrb
xchg
mov
dec
mov
add
jbe
sub
fndisi(8087
popf
mull
inc
test
jmp
cmp
xchg
sbb
int
push
in
insl
ja
mov
cmp
pop
sbb
push
cs
or
repnz
je
cld
and
add
mov
sbb
xor
test
outsb
divl
inc
jns
sub
test
or
test
mov
rclb
xor
adc
inc
into
adc
aaa
mov
loop
ret
loopne
in
in
mov
and
add
arpl
inc
adc
lock
mov
test
stc
and
pop
scas
cs
movsl
subl
or
mov
push
daa
les
push
push
out
fadd
jo
clc
js
into
adc
fisubs
data16
cmp
mov
lahf
mov
arpl
mov
iret
and
int3
pop
popf
jnp
loopne
lea
in
mov
hlt
mov
lock
jnp
jl
xchg
jbe
fwait
push
adcl
dec
nop
jnp
add
int
xor
push
pop
dec
ja
mov
mov
dec
mov
jb
push
pop
bound
clc
outsb
les
jg
gs
jl
and
dec
iret
outsl
jl
imul
ret
sub
pop
cmp
imul
xor
and
dec
pusha
add
jno
rolb
andb
and
andb
daa
aas
xor
push
add
ss
sbb
fs
push
in
xchg
hlt
pushf
repnz
pop
nop
ja
and
out
jo
fimull
mov
xor
xor
and
lret
fcoms
cli
xchg
sub
aas
mov
aaa
sub
mov
arpl
adc
jle
xchg
cmc
ror
cs
jp
cmpsl
shl
push
mov
sti
push
xchg
sbb
add
push
add
xchg
pushf
and
in
xor
rcrl
mov
sahf
outsl
sbb
sbb
out
mov
or
inc
push
mov
pusha
pop
jbe
test
fistpl
bound
adc
jae
xchg
jp
sub
inc
hlt
stos
adc
ret
mov
loopne
xchg
push
xchg
js
in
xchg
xor
and
mov
fbld
inc
in
xchg
cmpb
dec
lcall
mov
jns
aaa
cs
pop
or
loop
mov
and
jo
sub
fdiv
dec
sbb
mov
mov
inc
adc
pushf
jp
fdiv
mov
push
jne
adc
dec
gs
cmp
push
stc
push
xor
cmp
test
jb
es
push
dec
dec
or
xchg
inc
roll
cli
lock
mov
xor
negb
mov
inc
jno
repnz
sub
jae
jp
leave
ss
adc
jne
cmp
mov
stos
dec
xchg
jbe
mov
push
mov
out
push
mov
addr16
add
arpl
and
test
movsl
xchg
ror
inc
int3
jnp
cltd
loope
or
nop
pushf
inc
sti
mov
aam
and
add
sbb
sbb
jbe
addr16
loop
les
pop
roll
jo
imul
push
ficomps
hlt
in
ss
mov
ficoms
aaa
out
andb
mov
repz
aad
lret
lret
mov
cs
cltd
cmp
xor
ds
ss
jae
pop
push
xchg
add
pop
mov
pop
insl
loope
insb
xchg
mov
into
inc
pop
xlat
add
pop
push
fidivl
xchg
adc
movsl
pop
xchg
subb
int3
fwait
pop
lahf
push
stos
pop
cmpsb
cli
mov
leave
fnstcw
enter
mov
push
jo
mov
mov
rcr
es
movsb
cmpsb
outsl
movsb
fwait
dec
push
pusha
sbb
xlat
and
cli
inc
jg
mov
in
icebp
cwtl
and
pop
lea
sub
in
popa
xchg
pop
sub
inc
lea
mov
fsubl
in
mov
adc
mov
lret
pop
stos
cmpsb
pusha
jmp
mov
sbb
test
pop
outsb
mov
loop
addb
add
clc
cld
push
das
fcomip
mov
or
cmp
pop
das
xor
sbb
ja
fmuls
fstps
jg
cli
inc
jl
mov
mov
cmp
outsl
sub
cmp
add
ficoml
xchg
pop
ja
mov
insb
dec
mov
pop
or
shll
push
push
and
out
push
and
dec
xor
mov
pop
cmp
loope
xchg
test
dec
pop
loopne
mov
dec
xor
rcrl
dec
push
push
add
loope
insb
lock
mov
aam
and
cmp
push
mov
cmp
fwait
cmc
hlt
cmp
xchg
push
mov
testl
loopne
orb
in
cmp
outsl
dec
and
adc
outsl
or
inc
xchg
popf
push
aad
leave
enter
sti
mov
xchg
je
scas
xchg
fstpt
dec
mov
mov
mov
ss
lock
adc
inc
and
movsl
movsl
jbe
fnstcw
sahf
xchg
pop
ja
push
loope
aam
lret
dec
push
xor
out
pop
dec
mov
std
sarl
outsl
push
iret
sub
fidivl
add
repnz
cmp
or
inc
mov
dec
pop
mov
mov
scas
scas
orb
pop
ja
cmp
lcall
adc
addb
pop
inc
and
shll
out
out
jg
adc
jecxz
xchg
jnp
jmp
xchg
lds
into
adc
cmc
call
add
jbe
push
sub
lock
mov
imul
clc
sub
push
cwtl
mov
xchg
push
fidivl
das
jle
inc
pop
rorl
pop
jle
mov
scas
and
xlat
jge
cmp
mov
xchg
daa
and
adcl
js
sub
xchg
pushf
pop
or
sbb
lret
fbld
ljmp
xlat
dec
add
scas
dec
stc
out
or
push
jbe
or
test
cwtl
lret
jg
sti
xlat
rcrl
ja
fbstp
or
add
jae
mov
xchg
add
into
push
addr16
imul
mov
out
rcrb
sbb
aad
adc
test
jp
mov
mov
mov
cmpsb
mov
aaa
sbb
add
addl
mov
or
ret
in
clc
clc
xchg
sarb
test
push
dec
test
ret
cmp
pop
push
pop
mov
add
addb
add
mov
rep
inc
mov
inc
out
gs
sub
add
or
or
dec
and
adc
xor
fstps
mov
je
lcall
push
xor
xchg
lahf
mov
dec
push
push
cld
cmpb
ds
mov
push
cmp
pop
imul
xchg
mov
cwtl
push
xchg
cli
cmp
pusha
sub
inc
movb
iret
test
pop
and
push
jle
arpl
pop
pop
test
movsb
adc
push
imul
xlat
dec
adc
je
popa
push
lea
movsb
pushl
mov
out
sub
sbb
or
cmp
jmp
aad
mov
outsb
xor
mov
adc
cmp
xchg
jne
enter
cs
push
sbb
enter
stos
xchg
int3
add
sti
enter
adc
hlt
int3
in
es
adc
pop
pushf
mov
jge
cld
jl
xchg
pop
jle
sub
jge
add
insb
sbb
cmpsl
lea
sahf
push
xchg
mov
rcrb
neg
jmp
rcll
addr16
mov
lds
cmp
gs
fldcw
rcll
js
stos
or
lods
mov
jle
and
sahf
push
cli
mov
and
in
fpatan
test
imul
push
or
call
cmc
xor
mov
popf
mov
jb
gs
pop
leave
jns
xor
sub
mov
bound
xor
movsl
xchg
jno
mov
cmp
xchg
jno
lahf
jp
aad
popa
mov
mov
push
mov
in
push
mov
inc
jl
dec
xor
pushf
push
push
jmp
shlb
out
movsb
and
call
fiadds
shrl
add
jns
popa
je
sahf
icebp
jo
cwtl
aas
pop
adcl
adc
insl
test
in
pop
mov
ja
lret
cmpsl
test
lea
pusha
shr
fisttpll
mov
out
into
enter
xchg
adc
and
test
jg
mov
adc
sarl
jbe
mov
cwtl
pop
out
icebp
cli
sub
push
inc
sub
pop
test
repnz
shlb
repnz
adc
push
lods
mov
push
rcrb
cmp
test
and
push
test
test
mov
sub
aaa
mov
sbb
fnstcw
mov
mov
mov
jae
xchg
or
jbe
pushf
jnp
dec
mov
and
jnp
jae
mov
dec
add
sahf
push
mov
pushl
movsb
ficoms
or
mov
rorb
or
push
xchg
pop
xor
mov
addr16
jecxz
inc
in
dec
and
ljmp
out
jno
inc
fs
inc
fistps
pop
jmp
and
mov
mov
xchg
cmp
dec
aad
cmp
dec
sti
mov
in
fstpl
xor
loope
sbb
pop
stos
sbb
fninit
fnstcw
inc
loopne
repz
inc
jo
cmp
mov
sub
cmp
pop
or
ljmp
dec
or
lret
test
pop
pusha
cmp
mov
ja
xchg
ds
mov
out
jmp
aam
push
insb
cmp
xor
stos
pushf
jo
xchg
cmc
and
add
sub
loope
daa
repnz
inc
fiaddl
es
stos
insb
and
xchg
test
adc
xchg
inc
xchg
mov
lods
jl
ds
and
mov
pop
sahf
push
xchg
pushf
pop
pop
mov
add
arpl
ret
rcrb
push
lcall
cmpsl
mov
mov
push
xchg
leave
popa
xchg
clc
sub
cltd
xchg
loope
jns
mov
mov
test
push
push
jnp
sub
mov
sub
jbe
mov
or
mov
je
incl
lock
ja
and
cmp
aaa
int
mov
das
repz
xor
inc
clc
mov
sti
aas
pop
jne
jb
push
xlat
test
push
xor
clc
decb
clc
xchg
insb
jle
mov
fidivl
inc
mov
mov
xor
inc
int
mov
adc
jae
lret
out
jo
xchg
test
mov
and
roll
daa
mov
or
adc
pushf
xchg
or
out
mov
adc
mov
sbb
ds
test
stos
ds
xchg
imul
mov
push
lea
scas
pop
addr16
mov
cmp
in
jecxz
push
jle
pop
fnstcw
jge
or
repz
sar
mov
testb
andl
rcr
daa
mov
push
lret
mov
loope
lods
mov
scas
cmp
lock
mov
mov
cld
js
push
push
shl
mov
push
sbb
push
lret
lods
add
add
fcoml
data16
into
ss
xchg
and
push
inc
pop
andl
std
cltd
insl
cs
arpl
pop
aaa
mov
repnz
fs
add
gs
dec
adc
pop
xor
stos
rcl
sbb
fstl
jecxz
xor
pushf
lret
js
add
mov
cmp
call
mov
cwtl
dec
out
mov
stos
js
lock
jb
enter
pop
in
nop
lods
xchg
out
jne
jmp
lods
sbb
loope
xor
sbb
ror
loopne
in
shl
rcl
push
clc
mov
mov
fmul
enter
hlt
in
xchg
jbe
outsl
sub
sahf
xor
orb
jbe
fs
xlat
pop
shlb
dec
shlb
xchg
push
test
xor
jl
je
punpckhdq
lcall
in
xchg
repz
fcmovbe
arpl
adc
dec
mov
inc
mov
inc
xchg
loopne
es
cmp
mov
and
inc
mov
loopne
lea
sub
fidivrl
cmp
les
out
pop
adc
and
sub
insl
mov
insl
dec
fistpl
fdivr
es
cmp
pop
add
push
subb
mov
xorb
lret
popf
dec
mov
push
out
pop
mov
sti
inc
sahf
mov
data16
into
je
sarl
loop
mov
sub
daa
notb
mov
in
jmp
pop
aam
push
cltd
js
cmpl
mov
scas
and
cmp
shl
aam
add
pop
pop
lret
test
popf
aaa
sahf
jle
xchg
xor
jno
leave
lahf
mov
stos
stos
push
add
mov
xor
and
icebp
pop
push
cld
add
fildl
addr16
xchg
xchg
dec
pop
int3
sbb
stc
aas
push
mov
ficoml
xor
stos
add
mov
sbb
cld
notb
and
and
dec
shrb
setns
pop
adc
add
sbb
jnp
test
subps
jg
inc
add
dec
mov
loop
xchg
ja
mov
push
cltd
add
sub
cmp
lret
and
lahf
loopne
pop
pop
fsubl
ss
or
icebp
push
shll
sub
pop
add
scas
movsl
sub
cmpsl
push
inc
mov
add
out
mov
fcmovu
cli
cli
movsl
sbb
sbb
sbbl
push
dec
sahf
jmp
push
jp
jnp
clc
pop
jno
lret
or
pop
push
int
add
cmp
shrl
insb
sahf
repnz
mov
mov
shll
loop
imul
xor
sub
jecxz
aas
fdivp
xchg
imul
in
mov
cmp
js
loopne
out
dec
and
dec
psubq
loop
pop
outsl
or
arpl
pop
add
add
push
lret
flds
gs
sub
scas
fisubs
loop
push
pavgw
sarl
and
iret
sbb
dec
mov
mov
cmp
and
dec
cmp
imul
outsb
imul
aam
mov
adc
pop
dec
je
pop
cmp
inc
sahf
addps
xor
xchg
push
cmp
sub
xchg
ljmp
icebp
jno
mov
jl
lds
inc
add
imul
mov
mov
lcall
jmp
mov
aad
adc
xorb
cmp
in
and
mov
mov
leave
xor
mov
scas
aas
pusha
mov
push
out
lds
and
dec
pop
xor
nop
pop
mov
mov
or
subb
mov
push
jg
or
pop
mul
lret
mov
arpl
mov
in
inc
xchg
std
adc
dec
shll
arpl
outsl
cmp
mov
pusha
rcr
ja
mov
pop
pop
push
inc
orb
and
scas
or
inc
dec
leave
subl
adc
leave
stos
push
popa
jno
imul
xor
in
popa
pop
movsb
cmp
outsb
out
outsl
mov
push
cli
popa
adc
mov
ret
je
lods
add
xchg
mov
mov
jne
movsb
inc
jbe
sub
inc
sbb
test
dec
test
imul
rol
push
xchg
cld
lds
inc
out
xor
test
lahf
xchg
ds
or
pop
mov
or
jmp
sub
sarl
mov
in
out
mov
push
pop
js
mov
push
add
xchg
mov
adc
in
dec
add
pop
fsts
mov
int3
lods
repnz
inc
pop
xlat
fisttpl
ret
repnz
subl
xor
pop
add
hlt
or
cmc
xor
dec
fldt
mov
and
jle
xchg
sub
xor
fstl
adc
fwait
add
divl
cmpsb
and
in
and
or
dec
xlat
ljmp
xchg
and
inc
xchg
dec
xchg
or
xchg
add
sub
in
cmc
mov
je
mov
xor
mov
pop
call
mov
rclb
shll
in
mov
xchg
sarb
inc
jbe
dec
sub
pop
out
mov
mov
push
push
scas
pop
stos
cmc
cwtl
sub
and
addr16
adc
mov
and
xchg
jbe
lcall
sbb
mov
push
popa
jg
pop
push
sbb
enter
push
and
mov
mov
mov
std
stc
xchg
nop
and
cmp
gs
shlb
js
xchg
push
or
jne
call
fcomip
add
icebp
jge
xchg
pusha
or
mov
fiaddl
out
sbb
clc
dec
adc
pushf
sahf
fisubl
and
mov
int
push
mov
in
lods
ja
fsubrl
jle
fsubr
xchg
stos
and
xchg
cmp
dec
mov
out
mov
mov
pop
fstpl
cs
subl
jmp
mov
pushf
push
sub
lret
sbb
mov
sti
xchg
mov
cmp
ret
ljmp
dec
xchg
xchg
arpl
mov
jecxz
add
inc
subl
in
sub
jbe
aas
or
jb
call
inc
rolb
dec
lcall
pop
popa
mov
gs
jmp
mov
fistpl
bnd
sar
sub
pop
addr16
push
mov
cltd
jl
dec
inc
add
mulb
mov
push
insb
xor
insb
sbb
pop
jno
loop
jl
inc
jmp
inc
arpl
jge
in
inc
ds
ret
or
xlat
dec
and
test
nop
rorl
mov
pop
fnstenv
popa
lds
mov
lea
das
or
push
dec
in
xor
jl
xor
add
ss
ss
pop
mov
int
ljmp
and
lret
mov
int3
pop
mull
ja
mov
inc
outsb
push
xchg
out
and
jnp
inc
mov
mov
mov
mov
inc
mov
gs
fistpll
dec
xchg
in
inc
pop
rcrb
jne
sbb
aad
js
mov
rorl
hlt
mul
das
push
cmp
mov
mov
xchg
push
sub
testb
popa
imulb
and
out
ret
ja
test
jg
inc
bound
sbb
xchg
das
cmp
sti
cld
daa
lds
loop
mov
sahf
inc
inc
loop
or
pop
out
cmp
fdivrl
add
lret
out
or
dec
mov
jmp
adc
xchg
lcall
mov
mov
out
cmp
push
push
popa
cmp
mov
ficomps
mov
roll
outsb
adc
ss
aam
inc
jb
jp
mov
outsl
shl
repnz
mov
pop
insb
fstl
mov
xchg
aad
dec
in
popa
pop
cmp
mov
and
test
add
mov
ret
rolb
sub
mov
mov
lock
aaa
xor
add
push
cwtl
std
add
test
push
sub
push
lods
sbb
filds
add
imulb
push
outsl
mov
leave
ret
outsb
dec
push
sub
pop
cmp
push
lahf
loop
pop
pop
mov
clc
mov
repnz
mov
xchg
sbb
lret
pop
and
movsb
and
imul
push
stos
pop
jl
into
adc
push
mov
push
out
repz
aad
dec
push
push
shlb
pop
xchg
or
nop
fidivl
inc
jne
pop
mov
ljmp
fistl
xor
jb
cmp
leave
xchg
daa
xchg
imul
cld
incl
fdivl
xor
bound
dec
ret
mov
fsubs
insl
cli
xchg
adc
sbb
mov
xchg
xor
ror
or
pop
scas
pop
adc
xor
jbe
mov
in
adc
movsl
dec
lcall
daa
or
hlt
ffreep
gs
push
push
popa
lods
in
daa
lret
and
mov
dec
inc
cltd
cmp
imul
xchg
test
fsubrl
push
jae
sub
sarl
cmp
shl
enter
cmpsl
ljmp
sbb
cmp
mov
cmc
leave
xchg
scas
lahf
lea
cmp
add
xchg
loope
sbb
std
mov
xchg
xchg
test
sbb
mov
sub
popa
push
jecxz
sbbb
in
adc
jmp
dec
add
inc
clc
sub
scas
dec
outsb
jecxz
jecxz
xor
subl
mov
sbb
add
mov
jecxz
roll
xor
fisttps
into
or
stos
jge
es
les
out
sbb
imul
push
mov
mov
and
push
sub
sti
out
movsb
mov
es
jo
sub
movsb
cmpsb
and
and
ret
adc
mov
xor
dec
loopne
inc
mov
push
leave
test
or
cmp
cld
inc
dec
cmc
int
cwtl
lods
movsb
xchg
leave
es
cmpsl
adc
call
adc
mov
jbe
inc
cmp
js
mov
push
push
mov
int3
scas
das
pop
xchg
inc
sbb
scas
push
dec
jg
out
cmp
shlb
jmp
out
push
adc
cmp
mov
xchg
inc
pop
cs
mov
movsl
call
je
add
enter
pop
test
push
ljmp
lcall
mov
lret
mov
and
rsqrtps
xchg
out
lods
adc
adc
lock
hlt
out
mov
scas
jbe
das
xchg
aas
inc
lahf
cmpb
adc
and
rclb
or
ss
daa
fsubrl
sbb
pop
cmp
pop
lahf
ret
pop
pop
sub
repnz
imul
push
jp
jo
stos
sbb
dec
mov
gs
xchg
in
adc
inc
adc
sbbb
inc
ja
int3
in
mov
enter
or
dec
test
inc
ss
push
test
jecxz
push
shr
mov
les
mov
push
ss
bound
pop
mov
inc
inc
in
lods
sarb
xor
mov
pusha
test
loop
xlat
lods
mov
push
push
fsubl
xor
nop
jg
pop
push
stos
dec
jbe
mov
pusha
mov
dec
mov
mov
push
push
stc
xor
push
pop
pop
jmp
lock
xchg
fs
xchg
arpl
mov
inc
movsb
mov
mov
sarl
leave
stos
jmp
or
in
lahf
mov
xchg
lcall
add
ffree
lods
rolb
fisubs
mov
mov
xchg
stc
mov
and
addr16
lcall
outsl
dec
ret
mov
jb
std
mov
push
ja
mov
fmull
mov
or
repnz
mov
mov
lds
mov
call
cwtl
movsb
mov
jmp
pop
int3
pop
pop
pop
int3
lods
sbb
bound
push
pop
and
or
test
jno
and
push
inc
mov
addr16
fidivs
jp
lahf
in
sbb
sub
xchg
mov
in
outsb
loope
in
pop
mov
mov
ffreep
mov
mov
inc
loope
jg
int
xchg
testb
out
dec
ja
add
push
outsl
mov
mov
xor
mov
hlt
cmc
call
or
cld
out
es
dec
icebp
push
bound
jge
sub
mov
or
imul
jnp
inc
cmp
fstps
cltd
ret
dec
mov
dec
jo
jno
aas
lret
or
les
push
add
cmpsl
sarl
rcrl
or
xor
les
mov
and
out
addr16
sbb
pop
dec
aaa
rcll
mov
fidivl
arpl
imul
pop
sbb
xchg
dec
pop
jo
cmp
xor
sub
dec
add
mov
cmp
cmc
mov
jns
pop
push
stc
add
stc
movsl
sahf
subl
xor
std
nop
rcr
jp
adc
inc
loop
movsb
jae
cmpsb
mov
mov
fwait
in
inc
in
movsb
push
push
mov
jle
cmp
mov
fistl
outsb
fcompl
je
lods
add
shl
sbb
xchg
xchg
cmp
pusha
in
and
xor
push
mov
sub
je
das
lods
jmp
data16
lods
inc
push
push
fstl
add
cmc
enter
repnz
stos
dec
insb
loope
fisttps
push
mov
sbb
push
imul
into
stos
arpl
jno
stos
lds
rcrb
arpl
xchg
popf
pop
mov
dec
lods
ret
push
ja
sub
fwait
push
inc
xchg
iret
sbb
pusha
ds
jno
std
push
cmp
pop
add
rolb
leave
and
outsl
cmpsb
pop
adc
arpl
or
or
pop
xor
pop
xchg
out
je
mov
or
mov
loopne
icebp
adc
mov
fwait
test
jmp
sub
addr16
dec
sub
es
push
mov
pop
inc
repz
mov
stos
bound
not
lea
fisttpl
ds
lret
push
and
dec
xchg
nop
je
or
and
jg
dec
sub
loopne
push
decl
test
mov
aaa
xchg
cmpsb
dec
int
int3
xor
jg
pop
inc
dec
ret
mov
adc
hlt
mov
lret
or
jge
dec
aaa
dec
dec
cmp
push
neg
pop
ja
add
int3
mov
xchg
es
xor
cli
loopne
lods
sahf
and
popf
xchg
decl
xchg
xor
push
js
inc
inc
fdivs
retw
mov
inc
fwait
lods
rorb
pop
adc
aas
std
push
push
mov
jbe
jg
cmp
stc
loopne
dec
into
inc
push
xchg
push
pop
mov
xchg
cmp
adc
mov
leave
fsubrp
mov
aaa
lret
bound
ret
movsb
repz
and
rol
jl
or
scas
add
xor
sahf
mov
ds
xor
sbb
mov
int
cmp
push
or
mov
jecxz
lea
push
sahf
or
push
ror
and
cmc
in
loope
and
cmp
jae
lcall
icebp
cmp
subl
insl
and
adc
ljmp
js
das
andb
rcr
test
test
jecxz
and
sbb
icebp
or
clc
pop
mov
int3
cmpsl
imul
adc
jo
xor
jbe
adc
adc
pushf
movsb
daa
lock
aaa
push
jbe
push
rcrb
xchg
popa
mov
and
sahf
stos
enter
pushf
push
mov
inc
or
stos
mov
stos
jmp
shl
cmp
inc
aaa
frstor
add
push
fldenv
xor
fsubrl
cs
adcl
ljmp
sbb
fstl
sti
xchg
iret
mov
scas
push
shll
popa
push
addr16
add
insl
pop
test
or
stos
imul
fisubrs
inc
xor
xor
jae
aas
ljmp
ret
in
out
fidivrs
data16
inc
xchg
inc
sub
pop
and
scas
mov
adc
in
cmpsl
es
lds
shll
or
pop
divl
rcl
in
bound
sub
inc
aaa
mov
jb
test
stos
mov
xor
jg
push
das
adc
bound
popf
push
stos
xor
and
mov
add
jecxz
mov
adc
aaa
out
shrb
fsts
sub
adc
out
and
in
xor
inc
mov
stos
ja
les
mov
aaa
mov
push
cmp
adc
cs
add
xlat
xchg
nop
aam
xor
inc
add
adcb
scas
bound
xchg
imul
sbbb
mov
add
cmpsl
sahf
jnp
lret
pop
push
push
in
pop
dec
mov
js
loopne
test
push
cmp
stc
fisubs
sbb
mov
cmp
or
cltd
push
mov
jle
lahf
call
inc
fidivrs
les
out
push
sbb
mov
in
fwait
outsl
and
cld
ljmp
orl
pop
aad
jae
cmp
aam
push
push
mov
sub
arpl
lods
aam
cltd
sub
dec
push
mulb
mov
test
lahf
addl
cmc
cmp
adc
dec
pop
inc
int
add
and
dec
inc
fcomp
inc
aam
jle
aaa
mov
push
adc
outsl
ja
movsl
mov
push
cmp
ret
icebp
cmp
in
mov
xor
dec
pop
popa
shll
fxch
xor
std
xchg
call
dec
dec
imul
cmp
orb
movsb
cs
jge
inc
fildll
adc
dec
and
mov
sbb
flds
or
stos
push
aaa
ljmp
lds
clc
lods
dec
mov
lods
pop
out
in
push
test
lock
scas
dec
loope
inc
cs
idivl
jle
add
loope
pop
or
cmp
mov
adc
jge
mov
sub
jae
pop
out
jb
cltd
inc
negb
daa
in
xlat
loope
jo
jle
mov
lea
sarl
pop
xchg
je
mov
pop
iret
fisubrl
inc
stos
mov
arpl
and
mov
fstps
aaa
xchg
out
adc
aaa
and
js
pop
lods
sub
inc
xor
push
inc
testb
jle
subl
mov
cmpsb
rcll
dec
and
mov
ror
add
jl
mov
call
cmp
jbe
ret
hlt
or
mov
leave
lcall
sahf
mov
pop
xlat
or
and
push
mov
out
inc
cmp
adc
iret
xchg
xchg
fisttpll
lcall
lods
cli
data16
adc
gs
jl
shlb
push
pop
push
ljmp
cld
pushf
rol
push
add
jnp
in
or
pop
fsubp
arpl
scas
ret
fwait
fwait
out
pop
cld
pop
es
in
xor
ja
xor
xor
or
add
cmp
and
insl
add
or
sbb
adcb
or
add
adc
je
mov
imul
adc
pushf
loope
mov
rcrl
sub
xchg
fsubrs
add
orb
or
into
daa
divl
sahf
cmpsb
mov
lock
or
aam
int3
xchg
mov
scas
mov
xor
adc
js
or
leave
out
into
mov
mov
xlat
test
mov
fadd
jl
mov
rcr
out
and
xor
loopne
ret
and
cmp
adc
pop
and
push
inc
popf
outsl
pop
mov
movsl
add
add
aas
xor
sub
filds
addl
jns
stc
js
dec
repz
cmp
iret
mov
scas
jne
add
and
call
repnz
in
xchg
scas
ret
shr
lock
sub
out
sti
mov
mov
dec
icebp
pop
in
int
jmp
jbe
xor
adc
or
and
in
jb
icebp
xor
inc
clc
popa
scas
sahf
movsl
jne
xlat
jne
dec
outsb
movsb
jnp
push
js
xor
sbb
lret
push
mov
sbb
pop
imul
mov
cmp
lea
mov
ret
cmp
or
pop
mov
add
or
lret
popf
icebp
out
adc
fsubl
daa
pop
das
mov
mov
and
inc
lock
or
pop
mov
pop
mov
sub
lea
rolb
add
insl
jb
pop
xchg
lea
jo
adc
sbb
add
int
je
push
je
mov
cltd
inc
ja
push
push
in
mov
stc
ret
fldcw
push
mov
notb
cmp
mov
sbbl
fwait
orl
rorb
jl
mov
cli
pop
movsb
jns
dec
pushf
jmp
jp
je
mov
outsl
push
xchg
mov
fs
shl
mov
in
stc
popf
decl
adc
outsb
pop
lahf
fcomps
sbb
cmp
in
lds
pop
mov
faddl
lea
push
int
xchg
andl
jo
out
lods
add
sbb
mov
inc
xor
test
xchg
aas
outsb
xchg
cs
test
mov
add
shrb
adc
icebp
inc
or
sahf
sub
jno
cwtl
sahf
les
sbb
mov
or
cmp
and
lret
or
jle
sbb
add
pop
pusha
jmp
hlt
xchg
lods
push
sub
in
and
mov
inc
xor
addr16
cmp
and
in
mov
loopne
add
je
daa
add
sahf
jmp
mov
adc
dec
arpl
xor
rcll
popa
dec
lds
push
jo
push
push
test
inc
out
xor
jnp
mov
lds
stc
mov
inc
or
or
addr16
dec
fisubl
or
xor
out
mov
xchg
push
add
je
in
mov
mov
xchg
or
mov
sti
ss
aam
mov
cmp
mov
cli
nop
movsb
stos
sbbb
mov
dec
outsb
dec
arpl
mov
data16
cmp
insb
bound
push
push
pushl
ljmp
xorb
adc
jb
inc
imul
add
dec
divl
jae
or
fdivrs
hlt
add
leave
fs
sarb
and
mov
pop
pop
fsubs
mov
push
mov
dec
inc
pop
inc
mov
xchg
inc
pop
dec
mov
dec
ljmp
inc
gs
add
ja
negl
and
fcoml
cmp
outsl
out
cmp
inc
cmc
out
jae
mov
arpl
sti
mov
push
pop
sub
sbb
data16
sti
cs
flds
loop
lods
repnz
fldl
jmp
inc
mov
add
mov
inc
loope
push
and
popa
out
mov
cmp
fiaddl
test
inc
jmp
scas
aam
xor
sub
cmc
ljmp
addb
stos
ds
and
les
lock
sbb
sbb
call
sub
repnz
ja
sbb
xlat
and
xchg
sbbb
mov
and
insb
and
sar
jle
lock
in
inc
aam
jmp
sub
les
xchg
jl
adc
jle
leave
jne
or
sbb
push
scas
mov
pop
movsb
fsubl
dec
hlt
jge
jae
inc
jecxz
push
xor
pop
test
pop
jae
js
lret
push
cwtl
notb
dec
dec
nop
lds
in
xor
dec
insl
test
cmpsb
mov
or
mov
scas
sarl
mov
sbb
sbb
push
lahf
cmpsb
xor
inc
sub
flds
push
sub
jbe
test
cmp
popa
and
mov
inc
lret
xchg
movsb
mov
jp
push
mov
adc
pop
mov
cmc
sahf
test
sbb
push
in
cmp
xchg
aad
addr16
mov
ss
dec
fsubs
cmp
data16
sahf
test
loopne
fstpl
lcall
push
neg
not
js
movsl
mov
jp
in
or
xor
jbe
adc
rcr
and
pop
stos
imul
fstp
cltd
add
fldt
ficoml
aad
addb
mov
lods
insl
cmp
leave
add
aas
in
push
add
mov
mov
fwait
sbb
add
sahf
iret
and
clc
sub
and
cs
pusha
cmpsb
xlat
push
jo
mov
push
mov
stc
xchg
mov
stc
mov
sbb
adcl
fbld
mov
push
mov
mov
rclb
pop
mov
fistps
jge
jl
movsl
push
push
inc
and
daa
add
sub
mov
das
xchg
and
pop
mov
pop
fstps
push
add
mov
fld
lea
or
mov
mov
icebp
jp
jnp
xor
hlt
out
dec
je
loopne
js
pushf
add
mov
or
mov
fcoml
inc
aaa
arpl
sbb
cld
mov
out
lret
test
adc
inc
jmp
es
jp
jecxz
rcrb
outsl
fists
adc
or
cmp
cmp
dec
fadds
mov
popf
add
outsb
pop
iret
mov
push
sub
jg
inc
testb
sbb
dec
inc
push
push
add
adc
or
pop
sbb
imul
ficompl
mov
rcrl
repnz
scas
fbstp
aam
sub
jle
or
ja
fcomps
mov
popl
loope
aam
stos
es
jg
mov
mov
scas
mov
mov
insl
fisttpll
stos
push
inc
adc
inc
js
push
inc
mov
jg
sub
dec
int3
or
scas
jnp
int
cmpsb
inc
add
jl
pop
out
pusha
add
jmp
or
jno
jno
decb
lret
pop
imul
fsubrl
xchg
clts
arpl
cmp
xchg
or
lods
fsubp
loope
outsl
pop
pop
aaa
out
clc
dec
pop
lss
cmpsl
sbb
lock
adc
rolb
inc
sbb
scas
xchg
jbe
xchg
sub
outsb
pop
jno
int
ret
cmc
andb
push
in
ret
mov
fadd
xor
cmp
mov
and
inc
pushf
clc
jno
fs
push
xlat
in
sub
addr16
scas
mov
movsl
fdivrl
pop
fsts
lea
call
fwait
psubb
cmc
xorl
and
xchg
ss
ficompl
mov
test
sbb
mov
xchg
cmc
iret
adc
fwait
pushf
cmpsl
dec
sbb
pop
xlat
or
inc
out
jnp
mov
insb
rorb
dec
xchg
add
cli
inc
inc
and
hlt
add
dec
movsl
fwait
pop
add
sti
imul
fs
ret
pop
push
and
dec
or
mov
pop
inc
call
ds
lret
out
xchg
das
stos
pop
imul
shr
je
adc
sbb
adc
in
push
sbb
ret
push
inc
sbb
pop
pop
mov
mov
lcall
adc
pop
pop
daa
jg
outsb
das
mov
adc
mov
mov
xor
into
pop
mov
inc
imul
jge
dec
call
jge
andl
cld
cmp
and
fimuls
xchg
fistpll
clc
inc
xchg
xchg
pushf
or
mov
or
dec
sbb
divl
mov
ficompl
in
enter
or
fnsave
int3
pop
jns
jb
fcomps
pop
or
push
lods
dec
cmp
ret
lea
sahf
pop
jmp
test
cmpsb
pop
in
fdivl
and
repz
fcmovnb
daa
in
call
mov
mov
or
test
sti
loopne
ret
mov
and
jns
pop
inc
loopne
cmp
insl
pushf
lds
repnz
mov
or
mov
push
push
mov
test
mov
imul
addr16
mov
fcomps
out
mov
int3
mov
insl
or
xor
cwtl
ud0
xlat
loope
adc
inc
sbb
mov
push
push
jle
add
nop
push
sub
mov
or
jb
nop
int3
daa
xor
or
adc
cmp
repz
cmpsl
lret
scas
xlat
rcr
out
outsl
and
aam
or
rorb
cmp
add
out
push
push
shl
outsl
add
stos
fwait
roll
pop
mov
dec
idiv
xchg
loopne
lea
div
out
sbb
cmpl
cld
dec
test
xchg
test
addl
int3
push
int3
mov
clc
xchg
xchg
ret
es
sub
dec
push
push
mov
inc
push
aam
aad
mov
or
jo
inc
inc
push
inc
add
cmp
jg
xor
in
jne
xchg
in
cli
scas
int3
rcll
sub
mov
stos
sbb
mov
or
aam
sub
xchg
outsl
inc
icebp
repnz
cmc
mov
movsl
dec
loop
add
arpl
das
jnp
fwait
mov
cli
stos
rol
xchg
push
mov
ficoms
cld
dec
xchg
sbb
test
mov
fisubl
aam
and
sbb
lcall
aas
xor
orl
mov
popw
sarb
insb
lret
movsl
xor
and
and
cmpsl
and
mov
pop
enter
out
lcall
aad
pop
mov
in
xor
imul
cmp
lea
dec
std
loop
enter
dec
shlb
icebp
dec
mov
jno
gs
dec
lock
sbb
stc
mov
fxtract
in
jae
into
xor
or
xor
dec
sbb
pop
mov
outsb
push
fldcw
xor
repz
xor
jbe
in
sbb
xor
xchg
jl
pop
cmp
call
mov
push
xchg
pusha
shl
mov
in
dec
dec
int
sub
bound
sub
das
push
ret
std
jno
mov
pop
aas
jbe
cmp
gs
shlb
test
imul
ja
mov
mov
and
fsubrs
push
push
out
lret
test
add
or
jns
jne
jo
movsb
out
stos
lds
xor
lahf
nop
jge
cmp
lcall
push
lahf
into
xor
stos
int
repz
das
pop
mov
push
dec
sub
xchg
or
or
scas
leave
in
into
or
sti
jae
or
imul
ficomps
adc
push
push
mov
fstl
mov
xor
int3
test
adc
ret
adc
imul
inc
mov
movl
negl
xchg
mov
inc
cmp
pop
xchg
les
test
adcl
xor
adcb
sbb
daa
pop
lods
js
xor
icebp
rcrl
push
or
jbe
xor
and
inc
add
int3
adc
sub
outsb
xor
jecxz
add
xchg
mov
lods
sub
xchg
pop
xchg
notb
cmp
xor
rcll
int
cmp
pop
xchg
movsb
jle
cltd
icebp
inc
out
cs
push
cmc
in
pop
add
sti
add
xchg
add
outsb
int
and
push
repnz
xor
inc
sub
icebp
imul
xor
stos
mov
fisubl
arpl
xchg
xor
xor
js
das
into
xchg
and
jecxz
jno
pop
cmp
mov
sarl
repnz
popf
push
jg
mov
sbb
out
push
push
pop
mov
mov
dec
xchg
orl
xchg
mov
fmuls
push
bndldx
jg
mov
lahf
mov
fucom
jge
scas
popa
inc
mov
pop
xorl
lds
in
jp
adcl
mov
aam
dec
fnsave
aas
pop
push
or
shrl
ret
lea
and
xlat
in
test
xchg
inc
jmpw
push
movsb
sar
push
jge
mov
imul
ds
sbb
mov
cs
jmp
clc
xor
dec
jmp
pop
mov
iret
sub
jp
mov
test
adc
enter
jno
dec
in
andb
in
add
repz
test
lock
stc
shl
or
adc
dec
gs
ljmp
lcallw
add
aaa
lcall
pop
or
cli
divl
add
and
mov
imul
lock
push
cmp
ret
inc
cli
add
push
testl
adc
push
ret
pop
sub
jge
out
movsl
xor
movsb
out
cmp
and
test
jmp
cwtl
out
inc
notb
lret
xor
or
xor
pop
cli
or
pop
popa
adcb
pop
es
dec
sub
pop
jae
fstpl
push
add
mov
pop
cli
cmp
mul
push
pop
ss
or
sahf
mov
mov
ret
out
rorb
ljmp
pop
jle
add
cmp
out
xchg
filds
insl
and
int
sub
xor
cmp
gs
popf
stos
popf
push
jle
and
push
add
xor
xor
jge
out
lock
js
add
scas
sbbb
pop
inc
leave
ss
cmpsl
movsl
xchg
sub
test
jecxz
mov
rorl
hlt
sub
xchg
les
sbb
fwait
mov
je
or
cmc
push
dec
inc
sarl
sbbl
inc
aad
mov
mov
or
jp
push
testb
jo
lret
jb
push
aad
inc
pop
adc
imul
pop
mov
fbstp
mov
lods
sub
push
jecxz
and
dec
mov
push
cmp
pop
add
dec
push
sub
mov
aaa
das
xor
out
ds
rolb
out
jecxz
jnp
xchg
pop
shrl
mov
fsubrs
push
daa
sbb
div
mov
add
sub
add
xor
pop
repnz
xchg
cmp
adcl
into
pushf
nop
stos
testb
jae
xchg
lret
and
push
mov
into
xor
mov
imul
mov
push
jae
or
ss
xchg
or
in
jl
lods
mov
daa
es
movsb
xchg
test
inc
mov
hlt
jb
mov
shll
pushf
mov
fbld
inc
sbb
andb
xor
mov
inc
sbb
in
sti
cmc
movsl
lock
lret
push
or
jnp
push
inc
sti
jns
pushf
sbb
int
pop
sbb
lds
popf
outsl
fldt
das
bound
imul
mov
cmpsb
lock
mov
xor
jae
aaa
adc
mov
mov
inc
mov
scas
sub
or
jle
adc
mov
jno
sbb
test
sbb
xchg
add
jns
add
es
push
insl
outsl
xor
mov
and
push
sub
clc
pop
shrl
or
mov
cmp
add
jne
jno
push
jecxz
scas
cmp
loope
out
repnz
sbb
xor
mov
mov
imul
mov
mov
addb
rolb
test
push
jo
push
iret
cld
mov
out
and
ljmp
dec
testl
sbb
out
stos
and
inc
jb
pop
cwtl
pusha
dec
sbb
outsl
sahf
mov
sbb
inc
jge
mov
adc
xchg
inc
ret
mov
dec
stos
andl
mov
sbb
push
pop
fadds
jno
call
adc
addr16
push
or
ret
push
mov
fs
mov
movsbl
pop
enter
push
dec
in
fs
in
and
outsb
push
sbb
sbb
and
lds
xor
mov
clc
int
inc
flds
enter
mov
enter
adc
and
out
shrb
fptan
push
jmp
fucomip
fstp
add
pop
add
and
stos
pusha
lret
mov
push
pop
pop
fwait
pop
jb
mov
xor
in
cld
jl
pop
fsubl
cmp
jne
fisubl
mov
add
jg
fadd
insl
std
xor
mov
mov
cmp
sbb
scas
scas
cwtl
addl
leave
repnz
push
lahf
fidivrl
sub
dec
jns
sti
pop
and
lods
sbb
add
push
xchg
hlt
adc
xchg
mov
xlat
insl
mov
inc
xchg
adc
fdivrs
cltd
aad
adc
cmc
shlb
dec
gs
or
stos
mov
jle
in
mov
mov
and
lcall
je
jno
insb
adc
into
dec
adc
ret
dec
test
daa
pop
loopne
mov
sbb
push
orb
es
das
or
out
stc
fs
xchg
cs
je
sub
pop
inc
popf
pop
loopne
insl
xor
enter
je
sub
mov
xchg
jo
sti
es
lret
test
cltd
and
cltd
xor
popf
js
pop
xor
leave
out
in
bound
push
jno
xor
pop
aam
pop
decb
hlt
push
rolb
inc
test
push
pusha
or
in
pop
push
mov
div
enter
das
in
mov
subl
mov
fisubrs
std
lcall
into
mov
jmp
sahf
jo
loop
aam
fwait
mov
xor
mov
stos
cmp
call
sbb
outsl
push
mov
dec
scas
jns
bound
push
cmpsb
mov
push
sbb
and
adc
bound
outsb
xlat
test
test
or
jge
sbb
pop
les
mov
insb
xchg
pop
sub
insl
cli
pop
lahf
stos
cmp
nop
push
addr16
jb
mov
in
ss
inc
mov
jge
mov
and
sbb
sbb
push
out
cmp
lret
shl
xor
out
jnp
sbb
and
mov
into
out
orl
xor
cmp
or
das
sbb
push
push
mov
nop
dec
imul
add
xor
iret
sbb
sbb
adc
xchg
mov
xor
sub
cltd
push
and
lret
cmp
jg
stc
mov
xor
add
jl
xor
std
ljmp
dec
fiadds
mov
push
dec
imul
shrl
xor
fcomp
mov
js
subb
sub
iret
cmp
mov
in
rcrb
into
je
mov
in
ficoms
and
je
cltd
xchg
push
adc
divb
sbbl
adc
dec
shlb
loope
js
and
int
xchg
sbb
lods
data16
or
mov
xchg
cmp
mov
movb
jnp
sbb
ret
jae
push
in
pushf
movsb
push
jp
adc
add
push
push
clc
lret
jecxz
fwait
sbb
lahf
ja
ljmp
jge
add
neg
fdivrs
fbld
cli
sub
leave
inc
add
mov
mov
stc
mov
sti
and
ret
ja
paddd
add
sbb
jecxz
push
ja
sub
cli
fidivrl
push
pusha
and
mov
pop
test
adc
mov
sub
jmp
add
sub
cld
loop
inc
dec
pop
out
aas
jge
jecxz
cwtl
inc
mov
imul
in
dec
leave
int
sub
lahf
mov
imul
shrl
xchg
and
cmc
ffreep
repz
mov
test
or
and
push
sub
test
fstps
test
xchg
mov
shrl
dec
inc
xlat
fsubrp
mov
xlat
push
fsubl
ret
gs
mov
pop
bound
pop
xchg
adc
ljmp
mov
in
fs
icebp
ret
inc
jb
mov
loopne
xchg
sbbb
into
sbb
mov
call
clc
fistpll
sbb
xchg
dec
in
inc
mov
sti
mov
lcall
bound
xor
xor
xchg
js
neg
outsl
or
cld
push
cmpsl
mov
jae
fidivl
roll
test
lret
flds
scas
push
cmpsb
shrl
sub
out
xchg
mov
daa
xchg
and
sarb
bound
fnstenv
imul
in
xchg
push
fwait
sbb
dec
mov
pop
dec
adc
fisubrl
mov
ret
in
jo
add
sbbb
push
mov
lea
push
adc
pop
enter
cmp
push
leave
pushf
pop
rcrl
sub
jne
and
mov
push
sti
mov
mov
pushf
mov
jge
test
lods
rcr
xchg
out
pop
stos
in
stos
cmc
push
adc
std
xchg
out
ffree
jnp
pop
mov
add
std
push
aaa
out
jl
repz
test
mov
lahf
jne
popa
imul
jp
psubsb
cmp
adc
cwtl
subl
and
xchg
adc
std
or
shrb
mov
adc
mov
stos
mov
sarb
push
push
loopne
mov
outsl
out
inc
mov
pop
adc
mov
fimuls
fistpl
call
xchg
out
rclb
aam
ret
cmp
or
or
mov
lcall
pop
icebp
cmp
sbb
xchg
jg
mov
push
std
mov
clc
jmp
imul
sub
pop
inc
jne
aad
into
imul
mov
shlb
or
out
mov
aad
in
enter
mov
and
inc
and
jae
leave
test
mov
cli
pop
sub
fidivs
xor
sbbb
repnz
subb
aaa
aas
outsb
dec
push
or
mov
pushf
mov
shlb
imul
fcom
repnz
insb
ret
insl
push
bound
loop
out
outsl
cmpl
lods
cmp
fstpl
out
pop
out
popf
lret
push
outsl
pop
arpl
mov
lds
inc
sub
sub
jo
aas
rcll
add
loope
test
jge
sarb
mov
dec
adcb
sbbb
or
stos
jmp
cmpsl
push
ds
or
sbb
outsl
xchg
mov
cmp
pop
ja
fdivrs
pop
mov
push
scas
sarb
sub
mov
popf
jb
push
data16
insb
pusha
repnz
movsb
ja
fimull
pandn
cmp
mov
xchg
pop
cltd
pusha
pop
dec
repz
adc
xchg
xchg
in
and
jno
out
sahf
imul
cltd
movsb
fldcw
mov
push
sbb
cmpsl
shlb
mov
addl
add
push
mov
lret
push
dec
dec
mov
xchg
sub
sub
iret
dec
insb
repz
or
mov
outsl
mov
push
push
loopne
in
clc
jmp
leave
adc
ret
cmpsl
pop
sahf
push
cwtl
sbb
sbb
mov
mov
jecxz
repz
mov
fsubl
test
dec
hlt
rcll
sbb
andl
jecxz
popf
inc
jmp
jg
imul
orl
rolb
add
xor
mov
adc
jb
adc
pop
movsb
jmp
push
cwtl
cmp
push
mov
dec
push
inc
pop
sbbl
mov
pop
cmp
add
xlat
fsubrl
mov
cmp
in
dec
mov
xor
scas
push
jg
sbb
sub
stc
data16
dec
jecxz
push
sub
xor
test
and
mov
cmp
pop
jae
test
mov
lock
and
xor
lods
mov
ljmp
and
movsb
outsb
xchg
das
mov
shll
push
and
orl
stc
test
sbb
or
mov
insb
jno
cmpb
fs
jge
cmp
mov
in
dec
push
xchg
inc
jnp
mov
daa
add
xchg
minps
add
hlt
jnp
les
cli
outsb
push
ljmp
push
pushf
gs
xor
lock
xchg
inc
scas
mov
stos
mov
cmc
in
sbb
andb
and
push
ja
mov
or
aas
fmuls
xchg
and
in
or
es
fcom
clc
pop
iret
cwtl
push
jno
sub
xchg
add
mov
roll
dec
and
push
pop
stos
test
ss
in
mov
push
jno
cwtl
movsl
call
and
pushf
jecxz
mov
sahf
lret
lahf
std
mov
cmc
ja
xchg
mov
data16
aad
out
gs
cmpl
fsubr
mov
dec
aas
jge
pop
jge
pop
mov
outsb
stc
sbb
inc
test
dec
xchg
xchg
xchg
pop
adc
mov
push
pop
xchg
lea
aaa
pop
inc
mov
jl
loope
lret
mov
dec
clc
xor
mov
or
xlat
std
dec
mov
xlat
loopne
jmp
inc
push
dec
jns
mov
adc
sub
or
push
mov
cwtl
pop
int3
fs
cld
daa
js
std
addr16
stos
xor
test
lods
arpl
ds
pop
das
pop
xchg
fildll
dec
push
fcomps
daa
lahf
xchg
mov
out
rolb
jb
push
sbb
pop
jae
mov
addb
push
mov
insb
sub
mov
pop
mov
incb
cmpsb
sub
jl
and
and
push
adc
push
mov
push
mov
cmpsb
out
leave
or
movsb
sahf
je
fsubs
pop
fwait
not
pop
xor
dec
jl
add
fucomip
push
stos
mov
and
mov
jmp
popf
addl
sbb
pop
push
js
jmp
cmp
mov
push
and
subb
arpl
hlt
mov
cmp
inc
mov
pop
pop
pop
add
sub
lahf
cmp
mov
in
xor
add
mov
lahf
dec
dec
push
jns
bound
ljmp
sbb
mov
orl
sub
jo
gs
enter
cmp
hlt
lret
mov
testl
and
cmc
ds
adc
push
loop
mov
xchg
enter
lcall
add
cs
inc
xorb
mov
pop
and
add
decb
inc
jb
mov
push
or
sahf
rcrl
aam
int
dec
dec
int
cwtl
xor
mov
jge
cltd
xchg
incb
mov
jge
fs
push
mov
pop
cmpsl
inc
push
pop
jb
adc
inc
nop
mov
inc
pop
stos
gs
lret
mov
mov
lock
test
fistpll
add
fs
push
test
lea
pop
dec
fldl
mov
pop
jmp
push
insb
push
lods
loope
push
cmp
xchg
fcmovnb
enter
and
adc
int3
call
call
xchg
adc
loope
add
stos
sub
ret
aas
mov
stc
pop
dec
cmp
adc
pop
lret
mov
cmpsb
mov
jb
jge
jne,pn
data16
lods
lcall
pushf
fsubrs
adc
sahf
jne
das
addl
dec
scas
push
lea
fstpl
xor
xchg
or
push
lea
icebp
mov
jecxz
data16
push
hlt
xchg
push
movsl
pusha
add
and
cmpsl
sbb
popa
es
pop
dec
icebp
cwtl
bound
dec
and
aad
push
aaa
flds
dec
aam
iret
and
jmp
cmp
push
iret
lret
cwtl
ror
pop
in
jecxz
pop
xchg
xor
sub
les
stos
cmpb
add
loopne
test
adc
ljmp
fs
jle
out
popa
cmp
xchg
scas
adc
xchg
xchg
mov
jns
shll
cmp
dec
into
sbb
xchg
pushf
inc
mov
into
xchg
prefetcht1
ds
push
mov
dec
mov
push
jmp
push
outsl
sbbl
mov
testl
push
shlb
test
mov
mov
scas
sub
cmc
xor
out
sub
push
lea
pop
mov
xor
leave
ret
push
in
out
mov
and
dec
add
jmp
cwtl
mov
je
mov
cmc
dec
je
push
stos
xor
callw
int
mov
dec
mov
push
lahf
push
lahf
cmp
xchg
pop
stos
pusha
pop
fsts
inc
mov
ffree
aas
sub
xchg
leave
fs
and
pop
cmpb
inc
mov
nop
sbb
xchg
repnz
xor
scas
fsts
enter
cmc
jbe
loope
int
xor
xchg
pop
or
add
inc
add
in
inc
ljmp
pusha
pop
rcll
dec
jnp
push
icebp
shr
inc
imul
in
sub
arpl
sub
add
xchg
pop
movsl
xchg
insl
fnstcw
cmp
iret
nop
aas
mov
push
mov
popa
cmp
inc
test
mov
or
add
adc
addb
xchg
leave
test
inc
out
dec
inc
push
mov
iret
cli
adc
adc
pop
iret
ret
jne
jle
push
out
out
loopne
repnz
sub
dec
lret
push
divb
pop
arpl
xlat
in
in
pop
cwtl
mov
test
adc
inc
mov
scas
xchg
in
mov
stos
ud2
and
fs
clc
daa
loope
cmp
test
xor
shr
pop
shll
out
xor
jno
push
jnp
push
jno
loopne
push
add
or
repnz
sbb
pushf
scas
sbb
pop
xor
and
adc
mov
arpl
mov
lock
xchg
pop
xchg
sti
sarl
push
cmc
push
and
push
loop
sarl
mov
cmpsb
movsb
es
and
inc
sahf
sbb
sbb
push
adc
outsl
jl
xchg
out
xchg
mov
pop
jge
lods
cmp
mov
in
add
fmull
loopne
test
pop
in
in
xchg
lock
xlat
xor
sub
mov
sbb
xor
in
lods
push
faddl
pushf
mov
stc
cmp
nop
jno
push
test
adc
adc
xchg
lock
js
jno
in
adc
rcrl
add
sbb
cmp
inc
fs
and
int3
movsb
mov
mov
xchg
mov
mov
xchg
sbb
sti
pop
xor
add
and
inc
and
in
bound
ret
sarl
scas
xchg
lret
dec
jmp
popa
pusha
sub
out
inc
cmp
sbb
in
loopne
into
shlb
dec
ljmpw
test
dec
mov
xor
xchg
add
xchg
jbe
in
mov
adc
mov
addl
testl
call
cmp
test
stos
adc
adc
pop
imul
cs
cmp
sti
sbb
lods
dec
cld
imull
dec
fdivrp
addr16
sub
andb
sbb
pop
adc
lds
mov
cwtl
cltd
ficoms
in
sbb
int
jnp
or
movsl
and
xchg
adc
outsb
sti
int
int
push
xor
repz
mov
push
mov
aas
sub
fidivs
fsubrs
cmp
xchg
xchg
mov
das
xchg
clts
add
sahf
mov
out
stos
loopne
xlat
cmp
movsl
sbb
adc
ljmp
cli
fs
sbb
sti
cmp
mov
int
pop
add
pop
xchg
push
ret
nop
fcmovu
jp
jb
pop
add
cmp
nop
stos
dec
xchg
dec
popf
jecxz
das
stc
out
xchg
and
mov
pop
jecxz
mov
and
sub
imulb
dec
and
mov
xchg
cli
xchg
add
mov
push
push
inc
leave
cs
fmul
in
insb
pop
loopne
imul
mov
add
dec
dec
xchg
lods
mov
dec
sbb
cli
fisttps
sub
cmp
sub
ja
cmp
xchg
out
dec
shll
stc
repz
adc
inc
aas
mov
pop
ret
or
xor
popa
sbb
mov
hlt
negb
int3
and
jg
lock
xor
hlt
or
push
lret
mov
add
add
pop
xchg
cmp
loope
in
scas
sbb
push
outsb
enter
lahf
or
int
loopne
ficoml
jmp
jns
dec
xchg
xor
aam
lcall
in
sub
lcall
push
sub
aaa
sarb
lret
orl
aad
cmpsl
and
sbb
xchg
push
sbb
mov
sub
hlt
stos
cwtl
xor
xlat
test
or
out
jmp
sub
dec
mov
mov
push
fwait
test
ficomps
aam
rolb
aam
stc
dec
mov
fptan
lcall
jo
cmp
add
imul
enter
mov
shl
inc
xchg
fs
test
adc
adc
push
add
das
mov
je
mov
and
cmpsl
orl
push
lret
shlb
sahf
push
mov
es
cmc
cmpsb
sub
xchg
mov
cltd
cmp
push
and
in
movsl
pop
int3
insl
or
push
adc
push
gs
push
xchg
test
xchg
dec
mov
ret
sub
xchg
xchg
push
out
cli
mov
sbb
sub
inc
dec
and
shrl
fmuls
push
daa
rolb
test
and
or
sub
insb
and
repz
add
lahf
or
lahf
or
mov
and
push
loope
push
mov
pushf
insl
stc
bound
mov
or
cmp
sbb
pop
cmp
je
in
push
mov
out
imull
movsl
fcoml
sbb
cs
push
mov
push
test
pop
out
pop
mov
push
es
dec
jno
adcl
popa
out
xorl
ret
insb
push
jb
xchg
test
xor
icebp
cmpsb
cmp
and
insl
mov
shl
inc
shll
pop
push
sahf
pop
into
fsub
shll
adcb
sbb
push
sarb
xchg
outsb
sbb
xchg
fists
jle
pop
ds
repz
nop
or
pop
stos
std
bound
je
mov
lods
jbe
cwtl
dec
push
jb
pop
jmp
mov
mov
dec
sub
pop
jp
test
loopne
lret
shll
aad
and
fwait
or
sarl
rorl
fwait
gs
fsubl
incl
cmc
and
pop
into
jnp
test
cmpsb
lret
test
imul
in
clc
sbb
mov
setne
icebp
dec
cmpsb
add
sub
mov
mov
repz
mov
popf
adcb
leave
hlt
into
ljmp
and
pop
lods
and
stos
js
movsl
loope
lea
and
mov
inc
xor
cwtl
mov
decl
xchg
mov
mov
mov
sbb
push
int
mov
or
mov
jae
fwait
inc
mov
jmp
fidivrs
stos
mov
dec
jbe
mov
push
mov
and
dec
pop
jae
std
sbb
cmpsl
jb
mov
lahf
jae
loop
pushf
pop
stos
test
imul
cwtl
mov
pop
and
ss
xchg
push
lea
aas
or
data16
mov
adc
insl
push
sub
inc
mov
loope
out
mov
push
mov
aad
push
xchg
pop
mov
das
lock
mov
pop
out
imull
cmp
daa
sahf
mov
mov
inc
mov
insl
dec
sahf
pop
sub
loopne
pop
inc
sub
pop
or
xchg
scas
jecxz
jo
push
iret
lret
and
dec
jl
cmp
xor
adc
in
push
jmp
test
imulb
test
sarb
push
sbb
lahf
jo
or
inc
out
pop
pop
xor
inc
jns
mov
cltd
lret
cmp
adc
dec
fdiv
pop
add
jno
aas
mov
xor
mov
shrl
adc
push
mov
pusha
sbb
loope
out
jb
ret
sti
sbb
in
adc
mov
xchg
sub
mov
mov
pop
adc
and
ja
mov
mov
in
sarl
add
stos
cmpsl
iret
and
jnp
mov
das
xchg
xchg
mov
ret
repnz
in
addr16
jae
push
xchg
pop
jmp
arpl
jns
xchg
or
loop
jl
lret
imul
icebp
mov
push
movsl
mov
and
sub
cmp
jp
xor
jl
fcoms
mov
outsl
sub
cmp
or
arpl
loope
out
mov
ret
pop
sbb
sub
test
push
xor
sti
jmp
es
pushf
push
fiadds
int3
mov
xor
popa
xchg
add
mov
push
les
add
cmp
cmp
clc
and
insb
push
divl
fbld
adcl
ds
mov
jns
ret
adc
daa
and
int
mov
push
shlb
bound
inc
stos
pusha
pop
loop
pop
inc
adc
in
fisubl
into
push
fcoms
mov
xchg
cs
add
xor
in
lods
fcomps
xor
pushf
mov
jmp
xor
mov
imul
je
dec
lock
inc
sub
lret
nop
adc
add
mov
dec
loopne
dec
cmp
adc
scas
lds
test
loopne
push
lahf
sti
es
jp
jne
aad
xor
lahf
add
adc
jb
or
lock
xor
js
pushf
mov
repz
inc
cmp
inc
subb
xor
push
cmp
fidivrs
pop
mov
lods
lea
cwtl
xchg
and
andl
push
mov
arpl
jno
mov
scas
xlat
cs
dec
movsb
rcr
scas
imul
mov
test
rcrb
and
clc
or
mov
negb
aam
fmull
add
inc
xchg
std
enter
inc
mulb
mov
in
roll
adc
les
pop
cmp
jge
push
insl
shll
cmpsl
xchg
das
xchg
in
loopne
adcb
les
daa
and
and
cmp
popa
mov
lea
jns
xor
cwtl
or
pop
rclb
xor
add
sub
popf
leave
imul
push
gs
movsl
xor
and
jp
xor
mov
sbb
shll
pop
dec
cmp
mov
hlt
insl
pushf
sub
fbld
ret
xor
popa
out
cltd
sub
xorb
pop
movsl
fs
xchg
inc
jb
lock
movsl
mov
test
nop
stc
xchg
mov
call
clc
lret
mov
mov
dec
icebp
enter
mov
jmp
aas
xor
sbb
inc
xor
push
sbb
xchg
adc
pop
jmp
test
push
es
pusha
sbb
call
xchg
and
cmp
push
xchg
push
scas
test
popf
sbb
sub
xlat
ljmp
fwait
lods
cmp
cmp
out
jge
adc
xchg
adc
subb
inc
mull
fbstp
xchg
mov
sbb
sub
jne
xchg
aam
mov
popf
and
dec
mov
cmp
or
std
leave
clc
sub
adc
ss
and
fwait
fwait
cmpsb
repnz
movsb
adc
testb
fmul
pop
fnsave
sub
dec
ret
mov
enter
ds
iret
sub
insb
jge
rcrl
mov
mov
lds
mov
or
sbb
xchg
cltd
mov
cmp
inc
cmp
std
push
and
stos
xor
cltd
fwait
mov
adc
and
gs
jmp
mov
shrb
enter
push
mov
int3
shll
pop
rep
mov
rcrb
sti
or
or
test
add
stos
aaa
js
sub
xor
aam
inc
mov
adc
mov
ret
pop
adc
orb
inc
aas
fwait
cli
iret
xlat
loope
jnp
aad
iret
inc
stc
imul
addr16
sub
inc
mov
test
sbb
fnstenv
jnp
xor
push
add
add
sub
imul
xor
or
loopne
ljmp
jne
nop
mov
inc
clc
add
cmc
movsl
mov
dec
fldcw
repz
inc
or
dec
sahf
mov
aas
push
rclb
mov
inc
outsl
xor
dec
dec
int
mov
push
test
scas
pop
pop
add
rcr
dec
data16
jl
fdivs
mov
inc
pop
sub
mov
cwtl
mov
shlb
lret
leave
xchg
insl
imul
pop
lds
icebp
or
lods
les
mulb
sbb
pop
icebp
imul
dec
mov
imul
sahf
push
aam
inc
mov
jecxz
inc
fdivl
out
dec
jo
cmpsl
xor
pop
sub
inc
jecxz
or
and
inc
xor
jbe
sub
mov
dec
sub
fsts
or
inc
jecxz
mov
std
xchg
stos
pop
or
push
mov
hlt
sbb
aas
loopne
push
ds
cwtl
ficompl
adc
es
or
iret
sub
int3
push
add
mov
movsb
inc
jno
dec
adc
push
cmp
in
jp
dec
fstcw
imul
dec
fwait
cmp
daa
aad
in
jb
insl
and
jns
xor
scas
movsl
cld
loope
or
dec
jle
ret
jmp
jne
mov
lcall
stc
jns
shrb
lds
mov
loope
test
incl
dec
xor
sbb
out
aas
xchg
insl
js
xchg
imul
mov
sbb
cmc
incb
jne
add
enter
or
xor
jne
pop
or
fcoms
inc
xchg
test
xor
sbb
mov
idivb
xchg
sub
inc
mov
pusha
jecxz
pop
add
popl
dec
cld
sub
add
fldcw
sub
iret
addl
mov
sbb
xchg
push
push
stos
inc
jne
orb
sub
imul
or
loop
mov
cmp
pop
dec
mull
mov
mov
repnz
jns,pt
fwait
or
lret
xor
xor
and
adc
aas
inc
mov
test
pop
shlw
divps
movsb
jmp
push
push
jno
add
sbb
mov
cwtl
movsl
xchg
lahf
imul
pop
jo
pop
inc
mov
mov
arpl
push
lock
cmp
divb
jle
dec
mov
sub
fistpll
push
mov
insl
xchg
mov
dec
lds
dec
xchg
aam
push
jmp
cli
mov
gs
push
sub
in
in
inc
cmp
shlb
shlb
sub
cmc
jl
and
xor
or
sarb
xor
cmpsb
xor
popa
sahf
cli
enter
ljmp
cmp
gs
cmp
mov
out
mov
fildll
push
inc
jno
filds
imul
cmp
mov
repnz
jecxz
inc
stos
call
jmp
add
jno
mov
xchg
fcos
push
cmp
xchg
scas
and
leave
xchg
mov
and
mov
pop
fst
int3
fiadds
insb
movsl
pop
fldcw
xchg
fimuls
lcall
dec
dec
shll
jl
adc
mov
in
mov
repnz
sbb
mov
ret
pop
jno
adcl
je
inc
sbb
test
aad
adc
xor
pop
repnz
push
and
push
je
adc
lock
incl
sbb
jecxz
lock
inc
sti
adc
mov
mov
add
aad
pop
iret
test
jo
mov
lods
mov
shlb
movsb
jns
pop
and
mov
aad
pop
popa
in
push
mov
and
pop
xlat
dec
and
sub
addb
lock
std
pushf
push
sbb
push
stos
and
pop
xlat
dec
les
mov
dec
in
clc
mov
add
add
add
dec
mov
pop
mov
movsb
mov
push
jmp
sahf
cltd
mov
orb
pop
enter
icebp
jp
xlat
ret
cli
in
push
jne
in
les
stos
test
jbe
mov
and
mov
sbb
jo
test
or
scas
sbb
jne,pt
jae
add
and
push
loope
add
cwtl
push
jle
std
into
stos
les
iret
cmp
call
ficompl
fstps
mov
jg
xlat
adc
pop
pusha
fiadds
jp
inc
pop
cmpsl
aaa
mov
cmpsl
push
cmp
add
mul
lret
pop
stos
mov
dec
push
xor
je
cmp
js
fildl
inc
adc
push
mov
or
mov
and
jl
lds
test
or
cmp
xor
xchg
mov
dec
add
jge
popa
fucomp
int3
mov
fcmovnu
mov
and
jmp
fwait
hlt
int
ljmp
lea
mov
fdiv
xchg
and
ss
dec
pop
sub
ljmp
sbb
or
inc
fcoms
ds
out
test
lret
adc
sub
loopne
shrb
into
xchg
mov
sbb
push
daa
pop
movb
sahf
int
mov
clc
ss
lods
das
out
pop
ljmp
incl
mov
cmp
shrb
pop
push
add
andl
shlb
outsl
sub
pop
sbb
sub
sbbb
adc
dec
rclb
xchg
or
pushf
xor
cmp
mov
sbb
xchg
popf
movsl
inc
das
add
pop
mov
mov
pushf
jl
push
in
lods
sub
bound
push
push
inc
xor
lock
shrb
mov
jns
cmp
ret
mov
fcompl
out
fbstp
lock
jo
or
aaa
dec
dec
add
test
sub
std
mov
div
jb
dec
adc
mov
lods
sub
sbb
jg
insl
adc
xor
fmuls
mov
lods
jmp
imul
inc
pop
mov
cmp
fadds
mov
std
ret
push
mov
out
popf
mov
jge
inc
sbb
test
test
cmp
subb
and
jg
shrl
mov
sbb
xchg
or
add
cmp
lret
lcall
inc
repnz
fcompl
sbb
xchg
xorb
lret
add
stos
jle
movsb
sub
add
xchg
hlt
ds
je
mov
dec
push
dec
add
cmp
shll
aaa
pushf
aaa
xor
subb
dec
or
adc
sbb
icebp
add
pushf
sub
xchg
fwait
clc
push
push
leave
imul
push
ja
mov
pop
sbb
pop
cmc
fsubrs
test
ret
loopne
or
cmp
adc
imul
dec
les
cli
aaa
out
rcr
dec
add
push
out
into
push
or
test
loop
sub
mov
mov
cld
sbb
rcrl
movsb
sbb
and
push
stos
jmp
adc
cmp
push
lods
test
cmp
or
adc
cmp
call
fcompl
or
scas
in
mov
or
mov
std
or
data16
pop
movsl
data16
in
idivb
xor
push
xchg
cmp
jecxz
std
push
and
fs
sub
sbb
sbb
jo
mov
xchg
mov
movsl
sub
aam
pop
ret
sub
jecxz
dec
imul
mov
in
lock
dec
mov
cmp
ret
mov
pop
fcoms
icebp
ljmp
cld
in
aad
push
jge
add
xor
sahf
mov
das
mov
mov
jl
daa
lcall
jbe
std
xlat
cmc
jl
popa
loop
fsts
or
pop
inc
inc
imul
adc
jae
dec
pop
and
leave
mov
mov
test
ret
lock
dec
icebp
lods
gs
and
pop
ss
pop
and
xor
xor
dec
shr
out
packssdw
jae
test
jae
loope
daa
pop
xchg
push
xchg
pop
fbstp
popa
xchg
sahf
or
cld
pop
fsubl
stos
in
icebp
sahf
jge
xchg
and
inc
test
in
lds
push
aaa
out
fnsave
dec
in
cmp
jl
out
test
mov
pop
xorl
fadds
mov
outsb
outsb
pop
push
and
push
loopne
lods
sub
stos
inc
jg
push
fistl
jg
icebp
je
pop
in
ret
cmp
movl
mov
fmull
iret
sub
gs
sahf
cmp
ljmp
adc
jno
in
pop
inc
jo
jmp
push
mov
jl
add
jp
insl
inc
cli
xchg
sub
lcall
or
popf
jge
mov
adc
lahf
push
shr
jbe
pop
scas
mov
push
xchg
icebp
pop
push
or
add
pusha
mov
mov
testb
or
sbb
inc
inc
push
roll
aas
inc
ficompl
pushf
pop
je
sbb
lcall
out
pop
movsl
or
jg
dec
addr16
fcomps
sub
mov
shl
inc
fisttps
gs
xchg
pop
insl
leave
xor
adc
insb
or
shlb
call
pop
fcompl
addr16
dec
out
jne
mov
gs
out
test
push
mov
call
and
xor
or
pop
in
mov
scas
imul
cmpsl
dec
negb
daa
push
lea
ljmp
in
mov
push
push
out
sbb
dec
xchg
idivb
popa
push
jl
pop
ss
loope
fisttpll
pop
dec
push
fldl
cmp
and
jo
sub
xor
fstps
or
pop
xrelease
popa
mov
push
pop
das
pop
lret
mov
hlt
jg
jne
je
push
xor
cltd
cmp
jo
sbb
inc
data16
popa
lods
mov
into
dec
xor
sbb
xor
pop
fcoml
inc
es
cs
jne
dec
imul
in
data16
mov
scas
aam
cmp
add
jno
pop
ljmp
push
out
push
leave
jmp
sub
ret
pop
xchg
adc
aad
mov
scas
mov
cmc
sub
adc
loop
std
sti
aaa
jae
jo
push
xchg
xchg
fnsave
cmp
mulb
popa
fcmovu
popf
push
subl
mov
hlt
inc
jae
sbb
orl
imul
aas
sub
inc
popa
gs
popf
lods
ret
jno
push
add
mov
jmp
gs
pop
lock
or
fnstenv
mov
mov
sti
out
push
jecxz
xor
fwait
daa
jo
sbb
mov
dec
out
or
mov
jg
mov
dec
cmp
xorl
shrb
ss
mov
gs
lods
lds
jp
dec
sahf
imul
and
mov
and
sbb
xor
mov
arpl
in
call
flds
lret
shlb
in
pusha
jmp
loopne
imul
inc
fiadds
push
bound
movsb
out
es
mov
adc
push
push
out
xchg
repz
movsl
push
push
jns
repz
xor
xor
push
or
pop
cwtl
lret
out
mov
push
dec
iret
ss
mov
ja
push
jbe
aaa
cmpsb
rol
sbb
jle
sub
xchg
and
into
mov
jno
adc
mov
xchg
loope
and
xor
mov
mov
and
fnsetpm(287
xor
mov
sub
jae
push
jne
xchg
fsubrs
sti
inc
stos
jmp
push
iret
push
inc
sub
int3
mov
xchg
ucomiss
jno
out
pop
pop
cmp
push
mov
icebp
idiv
jno
xchg
mov
pop
pop
pop
shrl
mov
mov
and
in
and
inc
outsl
fidivrl
shl
inc
mov
adc
push
jge
cmc
sub
push
jmp
fwait
mov
jnp
cmp
cld
pop
mov
push
lods
add
lahf
setle
aas
or
xchg
vpmadcsswd
out
inc
fcompl
push
pushf
dec
sbb
out
fildll
roll
lahf
incl
adc
lcall
push
ret
loop
xchg
hlt
push
lods
addr16
daa
test
jle
fidivs
bound
clc
mov
icebp
fmull
mov
add
outsb
push
repnz
outsb
cmp
push
pop
clc
inc
shl
dec
jecxz
out
fcomip
int
and
outsb
jmp
mov
add
insl
sti
or
lahf
push
push
cli
push
das
jns
mov
mov
lret
loope
leave
inc
leave
mov
rcr
mov
inc
das
push
push
jno
add
imul
and
test
movd
add
rorl
icebp
rolb
pop
mov
ljmp
dec
adc
pop
lret
sti
pop
cmp
add
insb
mov
test
imul
in
stos
add
int3
pop
mov
aam
and
sbbl
stos
bound
in
cmpl
xchg
roll
das
push
push
movsl
jp
or
mov
inc
imul
dec
sub
xor
mov
jns
stos
push
ljmp
aad
stos
in
push
add
fwait
or
xor
push
dec
incb
shlb
test
cmpsb
out
mov
loop
mov
movsl
mov
test
push
mov
xlat
sub
xchg
pushf
stos
push
push
stos
mov
inc
enter
mul
outsl
sub
ja
test
pop
pop
into
aas
sub
in
call
jge
in
pop
rorb
addl
sbb
push
xor
xchg
int
jmp
inc
push
inc
mov
cwtl
por
push
adc
out
cmp
les
cs
xchg
mov
in
cmp
mov
stos
mov
or
xchg
and
jne
fsincos
xchg
jbe
ja
lock
orps
and
gs
fadd
or
mov
add
sbb
cli
fmuls
mov
sub
std
mov
inc
mov
push
shl
int
das
xor
popl
insl
adc
test
sbb
out
aaa
cmp
inc
jo
out
jb
adc
xchg
leave
and
jno
xor
das
stc
fsubs
rcr
popa
ss
fcomps
out
sbb
xchg
or
cwtl
cmp
lods
das
pushf
mov
mov
je
mov
jae
int3
pop
fisttpl
test
aas
lods
cmp
mov
and
dec
mov
mov
pop
mov
lret
shlb
daa
enter
push
mov
int3
mov
call
cmpb
mov
adc
and
dec
cs
add
inc
in
es
xor
test
hlt
ret
out
mov
arpl
daa
jb
repz
cmc
jno
pop
pop
mov
xor
sbb
clc
stos
jg
scas
inc
mov
and
inc
sbb
add
push
push
xchg
jnp
enter
out
push
push
mov
das
sbb
loop
out
addr16
mov
roll
mov
add
mov
out
and
xchg
fwait
pop
popa
out
lret
xor
xlat
bound
cmp
or
mov
adc
nop
xor
icebp
movsb
pop
xor
andl
xorl
lods
or
adc
adc
insl
lea
push
sbb
stc
ret
push
call
add
jecxz
insl
sbb
stc
stos
pop
mov
or
sub
sti
mov
jns
or
negb
pop
adc
adc
inc
jne
pop
xchg
mov
out
ja
or
add
sbb
sub
call
sub
mul
fs
mov
pop
pop
xchg
mov
nop
daa
mov
insl
aaa
shlb
lods
cmpsb
icebp
inc
inc
push
push
cwtl
insb
or
add
xor
pop
pusha
lds
fsubrs
mov
push
fildl
push
jne
pop
cwtl
repnz
xchg
rclb
movsb
xchg
cmp
jle
or
lret
or
cld
cmp
ja
mov
das
add
push
mov
xor
sub
mov
pushf
and
xchg
test
cmpsb
pop
push
mov
imul
add
lock
stos
orl
in
push
xchg
inc
sbb
aam
popa
pop
cmp
inc
rclb
jge
jp
or
test
or
test
cwtl
aam
xchg
loope
insb
pop
inc
xchg
test
leave
mov
stc
mov
fwait
mov
inc
mov
in
mov
mov
in
jp
inc
scas
jnp
or
xor
sub
repz
jns
dec
fnstcw
xor
push
cltd
cmc
and
pop
xchg
pop
sbb
stos
dec
push
cmp
jmp
faddl
jne
mov
movsb
push
pop
ljmp
pop
pop
insb
xchg
mov
jns
xchg
cmp
stc
jae
movsl
jo
xlat
mov
cmc
sbb
das
fidivrs
inc
pushf
sbb
adc
imul
out
sbb
or
add
mov
mov
and
aam
inc
xchg
push
jmp
js
in
dec
mov
lods
out
test
mov
xor
imull
adc
jae
push
sbb
mov
arpl
jae
fmuls
xchg
dec
xchg
sti
aad
lds
imul
or
or
in
sbb
push
pop
pop
pusha
lods
jmp
or
bound
xor
push
loopne
adc
push
mov
sub
lods
loopne
pop
scas
jecxz
mov
pop
xchg
jb
lock
push
bsf
loop
xor
cmp
jle
fwait
sbb
add
stos
xchg
outsl
mov
neg
call
xchg
inc
mov
inc
cld
sbb
dec
incb
std
outsl
lock
mov
pop
outsb
addr16
scas
mov
movzbl
jno
jle
push
xor
sbb
mov
mov
in
addl
adc
mov
sub
or
pop
xlat
mov
pop
add
stos
mov
jmp
in
or
lret
jns
adc
pop
xor
mov
jns
aaa
mov
stc
cmp
pop
xchg
cmp
and
idivl
inc
shlb
insb
cld
xchg
sub
sahf
dec
xchg
loopne
mov
je
inc
mov
xchg
xor
jns
push
adc
sbb
loopne
push
xor
jb
dec
aad
ret
sub
aam
pop
adc
mov
inc
fs
cmp
in
stc
pop
add
adc
inc
and
movsl
xchg
lock
and
divb
xchg
mov
out
inc
in
dec
sub
repz
adc
fnsave
outsb
lret
ds
aam
mov
ja
sbb
mov
loopne
lcall
xchg
ficompl
mov
xchg
adc
mov
xor
mov
jns
ljmp
imul
sarb
mov
sbb
ret
je
enter
push
mov
add
shlb
out
jae
popf
push
rep
hlt
pusha
mov
mov
out
xor
stos
inc
or
mov
cmp
jg
jb
movsb
in
jns
adc
shlb
int3
fdivrs
out
mov
xchg
lret
popf
sbb
ds
in
aam
std
loopew
push
cltd
sub
inc
adc
icebp
outsl
loopne
pop
repnz
nop
lcall
fwait
or
mov
cmp
push
xorb
mov
push
cmp
mov
aaa
sub
push
cs
or
hlt
subl
je
push
fdivl
inc
data16
scas
pop
or
dec
jns
out
inc
cmpsb
lods
and
test
cmp
aad
adc
ja
or
ret
xor
aas
leave
ret
push
and
mov
dec
sub
aam
or
add
mov
lock
fistpll
mov
inc
jbe
xchg
xor
ret
aam
pop
addr16
cmpsl
cmpsb
aas
jns
inc
and
std
aaa
push
int3
xchg
push
inc
addl
cmpsb
rcr
sar
movl
inc
xchg
xlat
sarl
shll
mov
adc
dec
es
cmp
aam
into
sbb
es
jl
mov
fisubl
out
push
lods
cld
mov
mov
push
repz
divl
push
mov
out
rol
movsl
sub
aam
hlt
push
ljmp
bnd
or
sbb
pop
lds
pushf
cmp
cmp
add
ljmp
jg
mov
imul
ret
jp
lret
and
mov
jle
xor
lret
repz
sub
xchg
sbbb
mov
mov
pop
outsb
push
ss
jmp
gs
stos
mov
add
pushf
fwait
and
cmpl
aad
dec
mov
sub
cmpsb
rcrl
cmc
jne
repnz
xchg
push
notb
lea
and
cmp
add
xchg
xor
push
mov
sbbb
lcall
enter
inc
and
rolb
ja
jo
mov
add
pop
aaa
cmp
dec
imul
dec
popa
pop
push
sub
cmp
or
jmp
push
add
mov
jnp
sbb
fs
or
pusha
cmp
jg
adc
xchg
sbbl
mov
std
int3
inc
pop
sub
dec
cmpsb
cmp
mov
lahf
aaa
cmc
popf
pop
xchg
nop
sbb
xchg
adc
inc
mov
test
mov
mov
or
sub
mov
adc
pop
mov
cmp
sbbb
cmp
inc
xlat
scas
in
jmp
mov
adc
adc
js
xchg
in
mov
cmc
cld
mov
setns
jne
jecxz
aam
repz
add
push
push
pop
in
xchg
enter
jmp
push
in
and
adc
jp
add
icebp
ret
jno
mov
xchg
mov
cltd
enter
or
mov
mov
push
cld
call
mov
call
jecxz
sbb
cmpb
enter
pause
jo
aam
test
outsb
je
ret
mov
test
jnp
or
jl
add
jg
mov
pop
stc
addr16
nop
xor
cmpb
roll
mov
cmp
add
mov
pop
jne
xor
cltd
and
sub
jbe
mov
addr16
imul
cmp
xchg
cmc
lock
xchg
into
or
dec
sbb
arpl
jno
cli
fiaddl
lock
cmpsl
cmc
mov
adc
es
jecxz
out
lods
cwtl
out
pop
push
and
mov
adc
add
sub
sar
mov
rcrl
push
inc
pop
dec
pop
ljmp
jecxz
leave
dec
jp
int3
lods
dec
repnz
test
fwait
pop
mov
test
jns
dec
nop
aas
lock
test
cld
mov
pushw
aaa
movsb
dec
lret
xchg
sub
pop
or
notb
outsl
cmp
arpl
fisubrs
push
bound
js
mov
dec
and
cld
push
push
test
fdiv
cmp
les
fisubrs
loop
in
mov
inc
mov
xchg
jnp
js
xlat
js
push
add
aaa
add
pop
mov
ror
sbb
xchg
movsb
fcmove
sub
daa
and
cld
xchg
sub
pusha
jl
out
jo
leave
pop
sbb
or
stos
and
shlb
fistl
icebp
mov
lods
mov
mov
push
out
push
or
addb
jo
lods
pop
cmp
cltd
pop
sbb
test
inc
sub
sub
addl
pop
sub
mov
xchg
xlat
inc
cmpsl
or
sarb
and
xchg
lods
add
mov
xor
lds
xchg
add
mov
out
jae
sbb
cmpsl
xchg
pop
mov
movsl
loope
repnz
inc
out
push
popf
loopne
add
test
lock
add
lret
les
adc
fwait
pop
pushf
add
rclb
scas
sbbl
and
nop
and
adc
push
imul
or
subb
pop
loopne
sub
xchg
and
shrb
sbb
sub
ds
mov
fiaddl
mov
dec
xor
outsl
add
hlt
mov
jle
mov
dec
mov
popf
insl
mov
ficompl
ss
cltd
xor
sbb
popa
fsubrl
xchg
xchg
sbb
xchg
xchg
xchg
jns
or
xor
pop
mov
inc
sub
pop
dec
and
ja
xlat
outsl
xor
out
notl
push
imul
jmp
rcrb
jg
mov
or
mov
rcll
mov
push
popa
sbb
xor
dec
cmp
andb
jg
mov
sub
add
add
inc
pop
push
pop
mov
pop
out
mov
mov
test
imul
negl
hlt
jge
imul
repz
pop
fistpl
push
je
aam
int3
cmp
jo
fmul
popa
mov
jns
ret
cwtl
inc
fmul
mov
scas
test
rcrb
jecxz
test
insb
gs
shr
cmp
xchg
jl
and
mov
shlb
pop
jne
push
loop
mov
icebp
sub
xchg
mov
jg
lock
mov
or
mov
into
test
sahf
dec
pop
jmp
lods
jl
sub
and
and
ja
lret
cli
js
mov
inc
cmp
xchg
fsubs
pop
or
mov
lret
push
pop
stos
aaa
in
cs
sbb
call
inc
fildll
fs
scas
xchg
lret
fstpt
cmp
repnz
xor
add
inc
mov
pushf
or
scas
and
inc
sbb
sti
dec
into
xchg
divl
mov
lods
cmp
test
out
adc
and
mov
lret
test
or
xor
dec
dec
int3
ss
xchg
pop
pop
fwait
rcrb
arpl
movd
ret
cmp
xlat
lcall
lods
push
mov
xchg
imull
sub
pusha
insl
push
in
xor
inc
xchg
loopne
fbstp
cli
insl
pop
sbb
and
push
stos
sarl
cltd
sub
lock
sub
jle
push
mov
add
cmp
lds
stos
cli
jmp
mov
sub
mov
sub
fmuls
movsb
scas
or
mov
xor
out
icebp
fcmovbe
shl
cmpsb
dec
repnz
movsl
xchg
fdivrl
in
fdivl
mov
shll
in
out
sub
lret
js
movsb
inc
push
push
subl
add
movsl
jle
aad
cwtl
ja
mov
rcrl
and
pop
lods
loopne
rolb
fwait
adc
jo
cmp
repz
add
ja
add
cltd
xlat
sahf
fwait
hlt
lds
push
pop
rol
push
fimuls
sub
push
les
cld
nop
xchg
cmc
adc
imul
test
icebp
or
fidivrl
add
mov
shlb
mov
dec
push
rcrl
aaa
aaa
mov
aad
clc
jl
or
enter
dec
sbb
ficoms
leave
jnp
insb
stos
lock
xchg
mov
xorl
lds
xchg
jmp
add
je
call
in
adc
mov
push
push
mov
mov
add
sub
cli
push
add
cmpsb
and
bound
dec
mov
adc
and
mov
aas
int
dec
mov
out
inc
mov
lea
xchg
rcrl
in
in
cmc
mov
fildl
mov
fcomps
lret
es
out
push
imul
fwait
sub
pop
xlat
mov
movl
jecxz
pop
adc
xchg
jle
les
mov
cltd
ss
cli
aaa
sbb
mov
mov
add
rorl
jp
inc
push
push
and
jg
mov
and
pop
cmp
hlt
into
sub
push
sub
inc
cmp
out
sub
xchg
push
mov
pop
aaa
out
data16
sub
push
push
rorl
inc
in
xlat
in
out
lcall
mov
pop
lds
icebp
ret
xchg
inc
ljmp
jge
lods
adc
lcall
xor
push
add
pop
push
xchg
pop
call
mov
cltd
clc
enter
insl
outsl
in
leave
call
push
or
cmp
cs
outsl
fdivrl
inc
ja
inc
cmpsl
nop
sysret
in
pop
ja
push
mov
das
popf
mov
leave
xor
sub
mov
dec
clc
jnp
pusha
les
pop
jmp
cli
and
add
xchg
cli
dec
repnz
push
push
cmpsb
dec
mov
xlat
cmp
xor
mov
xchg
and
in
pusha
mov
call
loope
mull
sub
pushf
or
mov
lds
dec
ljmp
fmuls
insb
or
stos
out
stos
mov
and
pusha
stc
adc
pop
dec
cs
push
push
ds
leave
je
and
mov
popf
xchg
aad
lret
popf
lahf
dec
xorpd
dec
ds
mov
fwait
and
mov
xchg
mov
repz
ror
mov
pop
js
mov
xor
mov
pop
rcrb
add
push
push
insl
adc
or
pushf
mov
xchg
outsb
mulb
dec
mov
xchg
push
lock
mov
pop
push
shll
or
imul
das
mov
sub
mov
adc
in
sub
jns
or
mov
jge
jmp
cmp
mov
frstpm(287
mov
or
movsl
aam
or
ljmp
icebp
lea
pop
insb
arpl
fisubrs
inc
mov
ret
adc
test
inc
aaa
xor
push
in
sbb
scas
es
das
enter
mov
xor
daa
in
lods
cmp
pop
cmpsb
scas
push
cmp
fcoms
dec
jl
lea
fmuls
xor
pop
mov
sub
outsl
cli
mov
add
outsb
mov
lods
jp
inc
fcompl
push
jp
cmpsl
add
icebp
pushf
jo
cld
lds
or
jbe
les
mov
push
fnstcw
sbb
insl
mov
push
cmc
mov
data16
jae
cmpsb
xor
jge
adc
lock
or
outsl
mov
popf
sbb
les
or
inc
sbb
xchg
push
cli
add
dec
test
xor
stc
insl
inc
xchg
mov
outsl
scas
iret
push
jnp
je
arpl
jne
and
sbb
xchg
xchg
nop
sub
addl
stc
inc
adc
arpl
bt
push
div
mov
xchg
mov
inc
inc
sbb
mov
and
push
dec
inc
inc
or
aad
jno
xor
aam
push
and
push
out
mov
pop
sbb
int3
clc
arpl
sahf
push
mov
mov
js
ret
test
inc
mov
xor
test
aaa
hlt
loope
shrl
xlat
and
test
int3
cltd
sbb
add
hlt
xchg
dec
ja
ja
mov
shll
push
xor
popf
popa
cmp
and
repz
fdivr
sub
ds
and
dec
rcll
fcoms
pusha
jmp
and
decb
fiadds
add
das
mov
cli
addr16
fsubr
push
pop
inc
push
ret
jge
sbb
into
fmull
mov
jp
mov
pop
outsb
iret
push
or
pop
inc
inc
icebp
pop
push
push
sti
xchg
dec
outsb
pop
aaa
mov
dec
in
out
call
pop
xor
and
add
rol
mov
rorb
clc
popf
inc
shlb
pop
data16
pop
or
lahf
sub
mov
fsubs
xor
sub
shr
je
adc
push
cmp
mov
loopne
repnz
lret
jecxz
mov
push
push
push
enter
out
push
and
cld
pop
adc
mov
aas
shrl
sbb
sub
imul
push
jae
jg
ja
push
pop
adc
add
subb
mov
movsb
inc
push
sub
xchg
xor
leave
and
mov
gs
lret
js
cmp
or
inc
popf
movsb
mov
jg
movsl
icebp
aam
xor
mov
mov
xchg
aas
stc
ss
popa
lcall
mov
cs
mov
gs
pop
and
xchg
gs
or
cmp
pop
inc
lcall
xchg
pop
fwait
jmp
lret
and
mov
xor
adc
call
mov
in
cmp
mov
xor
imul
sub
dec
faddl
jns
fwait
and
cltd
mov
add
iret
pop
lods
add
pushl
rorl
nop
and
dec
jmp
hlt
and
call
cmp
push
inc
add
enter
push
adc
push
mov
mov
mov
lret
fcomps
pop
int
dec
xor
mov
clc
movsb
and
sbb
sub
les
js
lods
xor
adc
out
push
xchg
push
inc
and
mov
fistpl
fdivr
hlt
add
mov
in
addr16
clc
cltd
cli
mov
out
cmp
arpl
sti
sub
mov
outsb
inc
mov
xchg
das
mov
mov
xchg
jp
jnp
lock
imul
test
cmp
jo
xchg
pop
pushf
in
mov
popf
xchg
js
jno
pop
sub
adc
addr16
cmp
test
push
sub
mov
and
and
adc
in
outsb
adc
push
les
in
aad
or
pop
dec
not
dec
sub
in
sbb
rol
push
cmovle
in
sub
pop
adc
inc
rorl
fidivrs
dec
jae
mov
cmp
and
shr
adc
jnp
cmp
negl
rclb
das
cli
jge
or
pop
inc
std
xchg
push
cltd
fcmove
and
bound
or
pop
pause
out
out
cwtl
jmp
lods
mov
xchg
gs
hlt
popf
cmp
mov
fstpt
in
in
std
push
inc
push
test
inc
jl
loop
push
lock
jbe
lock
ret
fisubl
mov
int3
or
push
stos
xrelease
mov
add
xor
fwait
jg
cli
lret
xorl
inc
adc
jns
ljmp
cmp
or
test
mov
add
les
jb
je
pop
mov
mov
inc
pop
adc
inc
data16
and
pop
xor
fisubl
arpl
dec
loope
xor
sub
add
push
or
sarl
mov
lret
js
in
jl
push
xchg
ljmp
mov
adc
inc
sub
cmp
dec
int3
jle
xor
push
xchg
repz
push
inc
pop
inc
add
xor
fildl
inc
scas
pop
addr16
mov
testl
jo
out
pop
lea
xchg
xchg
bound
rol
dec
mov
add
mov
mov
movsb
call
test
test
dec
ja
pusha
adc
lret
sub
loop
add
jmp
in
movsb
call
push
pop
ds
and
cmp
mov
sahf
sub
jbe
das
mov
lea
xchg
xor
shl
pop
fbstp
les
add
fiadds
or
jle
xchg
xchg
and
sub
push
adc
jne
scas
cwtl
dec
and
jp
mov
xor
fcmovu
and
int
cmp
mov
test
pop
push
xchg
lahf
sahf
fmulp
xchg
fisttpl
outsl
daa
push
notb
arpl
adcb
mov
out
cmp
push
mov
inc
jmp
cwtl
outsl
clc
pop
je
repz
test
dec
int
leave
dec
push
aaa
lcall
addr16
pusha
dec
addr16
jmp
idivb
cmpb
jb
adc
and
or
sbb
pop
dec
lea
jo
clc
mov
push
lahf
xor
xor
mov
or
iret
xor
int3
jp,pn
xor
sbb
jge
mov
add
mov
pop
mov
inc
sbb
rcl
lods
adcl
aas
mov
add
jno
idivl
pop
mov
pop
push
gs
add
psraw
pop
xor
fmull
pusha
arpl
jno
inc
xor
loop
push
loope
shl
or
sbb
ljmp
lcall
call
clc
sti
jnp
and
xchg
sahf
shrl
jmp
sbb
in
sbb
fiaddl
add
sub
shl
outsb
xchg
cmp
or
xchg
cld
nop
sub
clc
xor
mov
outsb
and
das
dec
fldenv
pop
aas
and
cwtl
mov
sbbb
dec
es
mov
test
mov
xchg
fwait
inc
add
pushf
push
nop
push
es
jae
scas
orl
push
dec
fsubs
mov
out
in
mov
add
sbb
jmp
xchg
sbb
xchg
mov
decb
lea
call
jle
sti
sbb
jne
mov
pop
ror
dec
aam
sbb
or
jle
sub
negb
fwait
xchg
mov
adc
movsb
orl
dec
jge,pt
mov
in
xchg
popa
sub
jb
jmp
or
sbbb
sbb
jae
cmp
test
fiadds
pop
xor
sti
cmp
cmp
xchg
loop
mov
xchg
xchg
jmp
pop
popa
mov
jg
scas
ja
fldt
pop
dec
and
jo
jno
cmp
push
rcl
sbb
mov
cmpsl
add
adc
in
dec
xor
addr16
and
je
scas
xor
or
dec
mov
aaa
arpl
xchg
push
pause
fs
cwtl
lret
in
mov
in
inc
dec
lods
mov
inc
push
mov
into
andl
jecxz
mov
push
pop
mov
sbb
push
cmpsl
repnz
push
in
jg
sahf
sbb
mov
xor
pop
mov
cmpl
popa
jbe
jge
mov
aaa
cmpsb
fisubrl
xlat
mov
sbb
imul
jnp
leave
mov
push
popa
xchg
inc
xchg
or
sbb
shlb
cmpsb
int3
loope
xchg
sub
xchg
mov
push
stos
mov
movsb
cmpsl
sbb
pop
aad
lods
inc
sarb
bound
movsb
xchg
jno
mov
jl
scas
leave
add
pop
std
arpl
fwait
mov
inc
inc
jge
rcr
insl
cmp
sti
pop
les
sbb
inc
rclb
lds
sub
xor
cwtl
les
lret
sbb
sub
fprem1
mov
addr16
pop
std
pop
mov
dec
fwait
mov
sbbl
mov
insl
cld
jae
std
mov
cmp
test
ret
sub
daa
int
and
adc
daa
adc
fs
xor
cltd
scas
jb
xor
test
inc
pop
in
pop
icebp
insb
sti
adc
adc
frstor
and
add
xchg
mov
mov
or
lcall
or
adc
dec
add
int
and
mull
push
aas
push
mov
push
inc
sbb
out
adc
mov
ljmp
xor
mov
push
sbb
push
sbb
jb
jle
xchg
xor
or
ds
or
ss
pop
fldcw
cwtl
dec
push
push
stos
cmp
pop
shlb
or
push
pcmpeqb
ja
mov
xchg
nop
fisubl
mov
inc
and
sub
out
repnz
aad
movups
push
pop
fwait
sti
jne
pop
mov
inc
jo
adc
int
and
jg
shll
inc
loopne
mov
cmp
mov
cmpsb
pop
xchg
cmp
imul
or
adc
mov
xorl
jbe
mov
jns
xlat
shlb
test
mov
cli
xor
daa
add
pop
fisttpll
and
xchg
lahf
neg
sub
out
clc
or
lods
push
bound
xchg
outsl
inc
and
push
dec
push
into
and
lods
cld
sub
sub
orl
mov
test
pushf
cld
test
fstl
loopne
stc
jns
shlb
mov
outsb
xor
psubsb
lock
movsb
iret
movsl
sbb
mov
lret
cmp
fsubrs
mov
clc
push
adc
mov
inc
ret
cmp
mov
adc
xchg
push
insl
add
cmpsl
mov
aam
xor
xor
jecxz
mov
cmp
lods
test
push
push
sbb
add
sub
aaa
lods
sub
sbbb
push
mov
mov
jae
dec
cmp
inc
subb
jns
in
or
movsl
mov
je
std
mov
add
dec
in
xor
push
insl
and
pop
mov
stc
in
and
imul
dec
sub
aam
and
nop
mov
push
test
lds
xchg
arpl
call
mov
insb
lea
ds
push
insl
jae
insl
sub
lret
sahf
iret
inc
mov
mov
mov
and
psubusw
push
imul
bound
and
mov
hlt
jle
xchg
inc
push
mov
mov
int
sbb
push
fiadds
and
bound
inc
xlat
gs
xor
inc
out
cltd
into
mov
add
mov
adc
sub
imul
loope
shrl
clc
and
pop
popf
cmp
inc
mov
push
add
pop
adc
pop
cmp
inc
pop
or
mov
mov
mov
add
movsl
ljmp
or
and
xchg
pop
cmp
mov
iret
mov
insb
and
flds
inc
loope
push
sbb
or
dec
pcmpgtw
and
lcall
fsub
mov
jge
mov
sbb
jo
adc
sbb
outsb
inc
add
addr16
and
xlat
jp
xchg
jnp
sub
lret
sti
fldenv
cmpsb
sbb
sbb
mov
popa
out
mov
inc
xchg
mov
int
lcall
push
mull
mov
xor
jbe
mov
jns
dec
jnp
out
es
neg
into
adc
inc
push
mov
in
popa
mov
push
arpl
mov
imul
add
dec
out
insl
out
pop
cld
and
lret
mov
loopne
fisubs
mov
lret
cld
and
and
sbb
adc
aas
mov
sub
xchg
inc
xchg
rol
sbb
and
mov
test
arpl
mov
outsb
dec
adc
push
adc
add
mov
jge
cmpsl
push
or
push
mov
fs
cld
fcmovb
cltd
jle
sub
insb
mov
dec
mov
aas
int3
cmp
bnd
push
add
es
inc
xchg
fnstcw
dec
js
inc
xchg
or
lret
in
pop
mov
aaa
out
repnz
dec
ss
pop
adc
xor
imul
mov
and
std
xchg
outsb
inc
jns
inc
sbb
adc
jne
iret
mov
arpl
inc
sbb
mov
popf
cs
push
xchg
imul
mov
and
in
ds
xor
and
mov
in
in
out
arpl
push
lds
insb
jo
stos
es
sbb
in
inc
xchg
adc
push
call
mov
push
lods
les
mov
xlat
mov
fisttpll
bound
mov
xchg
test
cmc
in
sub
js
test
cmp
addr16
imul
into
xor
out
jo
xchg
pop
rcrb
ljmp
xchg
cmpsl
bound
lcall
out
cmp
fidivl
ja
push
sbb
fwait
mov
stos
arpl
cltd
mov
ficoms
jbe
pusha
jmp
aas
sub
lock
xor
mov
lods
xchg
pop
dec
add
je
mov
xchg
shrb
inc
dec
lret
fsubrl
sbb
notb
xchg
inc
add
or
loope
shll
jle
pop
push
les
loop
sbb
jle
add
ljmp
mov
test
dec
jbe
ss
loope
or
xchg
ja
xor
dec
mov
pop
dec
arpl
and
outsb
xchg
clc
sbb
sti
scas
push
pop
cmpsb
cld
sbb
dec
jns
aas
hlt
js
dec
cld
push
mov
xor
outsb
int
jle
test
movsb
nop
sub
adc
movsl
cwtl
clc
adc
out
sahf
fldt
lea
sarl
and
mov
dec
call
and
imul
pop
icebp
add
aas
fsubrl
es
bound
mov
in
adc
xchg
inc
inc
pop
xor
out
and
xor
testb
jge
cli
pop
sub
rcrb
mov
sbb
test
pop
out
fmul
adc
inc
sbb
cmc
arpl
inc
sub
popa
or
mov
fisubl
test
add
out
int
stos
std
lods
mov
fcoml
inc
fsubl
ss
std
adc
push
mov
and
pusha
jecxz
repz
js
sub
add
dec
xchg
xor
push
dec
jge
or
adc
push
mov
dec
jg
scas
icebp
popf
lahf
je
out
xor
dec
push
push
push
xchg
mov
push
sub
cld
push
push
aad
fdivr
jb
inc
fcmove
jno
lcall
cmp
rcr
add
testb
test
add
add
sti
push
call
idivb
dec
int3
jecxz
mov
or
repz
mov
fsubrs
js
fisubrl
and
mov
mov
sbb
mov
sti
bound
rcrl
jno
imul
stos
int3
mov
mov
and
pusha
rcrb
jle
push
clc
arpl
sbb
loopne
lret
xchg
test
jecxz
mov
popa
add
leave
xchg
jmp
pop
jecxz
cltd
jmp
aaa
rclb
pop
pop
jecxz
mov
mov
or
pop
arpl
inc
nop
pop
inc
outsl
inc
xor
jp
icebp
loop
xchg
out
lea
hlt
jp
xchg
adc
call
xchg
aas
movsl
push
out
mov
adcb
jne
and
jns
pop
in
orb
icebp
dec
push
ret
mov
out
mov
xlat
xor
push
aad
in
test
mov
flds
bound
mov
push
dec
hlt
inc
xchg
incl
pop
pop
sub
outsb
adc
xchg
push
dec
icebp
mov
push
jb
and
in
mov
subl
lahf
lea
mov
shll
xlat
xor
push
pop
andb
xor
cli
cmp
push
jo
jl
mov
imul
mov
or
in
mov
cmp
inc
pop
jo
shr
or
lahf
mov
and
sbb
int
push
std
ljmp
movsl
ds
xchg
xor
and
movsl
push
in
sbb
lds
divl
adc
movd
cmp
lret
cmpsb
hlt
sbb
negl
xor
mov
mov
das
or
adc
sbb
jecxz
jg
inc
fmull
leave
cmp
cmp
dec
je
pop
adc
int
add
in
xchg
inc
jno
push
es
addr16
pop
mov
clc
mov
ja
mov
sub
or
lock
jno
pop
lods
cwtl
fldl
mov
push
test
sbb
std
cmpsb
push
repz
mov
movsl
out
jl
and
xchg
xchg
stos
cs
fdivs
pop
cli
jnp
mov
sbb
push
aam
shlb
lea
sbb
sbb
mov
out
sub
push
rcrb
cmp
fistl
or
mov
push
cltd
lea
fwait
cld
mov
mov
insb
cmp
add
loop
xchg
xor
adc
jmp
int
fstpl
sub
xchg
stos
dec
pop
cmpsl
jecxz
lods
push
call
jle
jl
mov
das
test
insl
xchg
fists
shlb
insl
in
pop
outsb
xchg
loopne
cmp
add
mov
dec
call
xchg
jns
mov
mov
cmp
jns
icebp
xor
mov
lods
mov
mov
lea
clc
popf
repz
or
stc
fwait
inc
lds
popa
jge
mov
call
int3
mov
adc
mov
sbb
dec
test
add
popa
stos
mov
dec
push
jecxz
inc
pop
inc
jp
mov
das
jg
cmp
push
mov
add
outsl
insl
std
xor
inc
es
out
and
mov
xchg
inc
jl
bound
pop
inc
filds
stos
adc
iret
xor
aam
dec
clc
sub
jns
jbe
sbb
out
mov
cs
stos
orb
push
jecxz
aaa
or
pop
push
jmp
xlat
xor
push
lods
mov
mov
xchg
movsl
imul
or
xchg
bound
enter
or
sub
add
add
push
mov
or
lahf
inc
arpl
inc
mov
iret
adc
mov
inc
in
inc
mov
fs
shlb
pop
xor
aam
aam
testb
or
pop
push
ja
jae
mov
cli
mov
jmp
push
andb
xor
ja
addr16
pop
push
out
iret
mov
push
and
fwait
fwait
push
pop
jbe
inc
hlt
xor
insb
lret
adc
push
mov
or
wrmsr
and
repnz
out
xor
mov
jns
lds
sub
mov
mov
mov
and
xor
push
jmp
fiaddl
flds
xor
pop
test
jge
mov
inc
mov
fsubp
xchg
repz
addl
fsubr
mov
inc
sub
xor
sbb
stos
repnz
fsubl
dec
imul
or
test
loopne
data16
imul
imul
rorl
inc
clc
xlat
mov
pop
dec
data16
jbe
push
dec
jnp
push
mov
or
xlat
push
dec
fs
mov
adc
xor
xchg
push
jmp
push
in
mov
push
sbb
out
inc
enter
xchg
mov
call
pushf
adc
out
xor
mov
test
xchg
xchg
movsl
insb
lret
out
pop
out
mov
sbb
pop
cmp
fildl
call
lret
adcb
iret
push
dec
popa
mov
ljmp
mov
lret
sahf
aam
fldl
cmp
xchg
insl
enter
sbbb
add
cwtl
or
ret
add
fucomi
xlat
dec
cmp
ds
push
pop
cmp
outsb
mov
cmp
mov
jle
add
jb
lods
pop
mov
adcl
das
in
cmp
dec
cmp
mov
inc
inc
mov
jp
add
movsl
lock
std
std
idivl
cmpsb
sub
dec
add
int
stos
mov
adc
insb
sub
jno
add
jae,pn
std
sti
dec
nop
adc
add
jle
mov
inc
pop
icebp
xchg
iret
movsl
mov
negb
sbb
shrl
cmp
stos
xchg
dec
cltd
dec
push
push
xchg
inc
fstpl
mov
data16
test
andb
and
in
jne
push
jb
enter
cmpsl
jle
insb
ja
imul
cld
loopne
xchg
ja
aaa
jmp
mov
or
inc
push
data16
mov
or
shl
ret
jo
sub
cmp
test
testb
pushf
fdivrs
pop
fnsave
sub
cmpsb
mov
inc
outsb
adc
push
jmp
xor
lds
dec
daa
push
cmpb
or
in
inc
in
pop
in
or
lods
mov
adc
and
xchg
les
xor
pop
push
xchg
addl
mov
jo
pop
addr16
repz
jo
mov
insl
ljmp
sahf
mov
mov
push
xchg
jno
stc
or
pop
jle
push
sti
sub
mov
mov
mov
inc
sbbl
pop
test
enter
aad
xor
and
imul
add
pop
in
es
nop
arpl
imul
or
xor
inc
xor
loopne
rorl
cmpsl
adc
into
jp
das
sbb
movsl
int
ret
jle
xorb
vmovupd
sub
ss
cli
sub
aaa
pop
sub
ret
sub
mov
aas
js
xlat
stos
aad
sub
enter
or
je
cmp
push
cwtl
and
push
add
subl
jl
adc
repz
es
jp
mov
push
add
or
and
inc
sbb
dec
testb
xor
pop
iret
hlt
testb
and
ret
push
ds
push
add
sub
add
bound
pushf
aam
andl
leave
xor
into
adc
in
push
dec
mov
bound
or
leave
mov
pop
pushf
or
fwait
hlt
stc
cmpsl
pop
es
add
jo
fiaddl
pop
mov
jne
xchg
mov
dec
mov
in
pusha
sub
jne
and
pop
xchg
add
in
xor
bound
shll
rcrb
leave
repnz
std
xor
fisttps
insl
xor
fwait
imul
loop
xchg
ja
leave
and
adc
or
es
push
jmp
rcll
pusha
pop
or
addb
aaa
sub
dec
lcall
scas
sbb
adc
insb
out
mov
push
fdivrl
xor
mov
inc
bound
pop
pop
xchg
add
imul
loop
sbb
mov
aad
stc
mov
dec
dec
fwait
in
lea
pop
cltd
fstps
fs
iret
hlt
dec
cmpsb
push
adc
cmp
pop
je
cmc
mov
je
dec
sbb
pop
repz
movsl
mov
jbe
andl
cmp
and
fiadds
shrl
or
roll
pop
xchg
mov
nop
cmp
fadds
jns
push
push
adc
fs
iret
mov
sahf
adc
mov
inc
or
lcall
fwait
add
cmpsb
ret
xchg
xchg
popa
sti
lods
or
call
sub
insb
nop
test
push
fadds
mov
sub
push
mov
je
push
movsb
das
pusha
mov
inc
inc
inc
xorl
aaa
xchg
pop
int
adcl
sbb
loop
rclb
xchg
mov
imul
je
push
jmp
sub
in
cld
xchg
add
push
jb
pop
cmpsl
dec
cmc
call
inc
clc
push
xchg
sbb
dec
inc
lret
add
stos
sbb
ror
and
or
and
lods
adc
mov
daa
stos
mov
cmp
push
sub
ljmp
in
fcmovnu
cmp
mov
mov
in
add
and
mov
jae
fbld
icebp
movsl
xor
or
jmp
mov
out
fwait
sub
mov
and
jae
add
je
push
scas
sub
sbb
popa
push
xchg
jne
fdivl
mov
xor
pop
jle
test
fwait
bound
addr16
mov
jecxz
imul
subb
mov
cmp
inc
enter
push
mov
cmp
dec
inc
data16
sub
cwtl
sub
sub
xchg
fcmovnb
pop
js
mov
or
in
nop
arpl
xor
call
daa
and
sbbl
imul
jp
enter
fs
xchg
sub
int
mov
out
and
test
jmp
mov
inc
test
out
ret
mov
repz
inc
out
add
inc
std
mov
aaa
int
inc
ds
xor
pop
loopne
fnstsw
shlb
xchg
jmp
inc
mov
hlt
or
dec
lret
fildl
xchg
jle
fbstp
mov
stos
and
push
xchg
and
push
mov
loope
fbld
divb
dec
dec
cwtl
adc
lods
xchg
push
inc
sbb
jp
out
jne
rorl
sahf
sub
wbinvd
mov
fisubl
enter
sbb
clc
sub
add
aad
sub
test
sbb
mov
inc
add
sti
mov
jecxz
lods
int3
into
push
addr16
add
dec
stos
mov
in
hlt
out
stos
mov
cmpsl
into
cmp
int3
lret
out
sbb
cmp
js
jg
push
and
aad
into
push
xor
jmp
hlt
mov
sbb
std
nop
shr
aaa
pop
insb
out
movsb
out
out
dec
cld
xor
dec
pop
pop
scas
xorl
or
jp
sub
mull
rol
lods
in
xchg
cmp
jp
pop
cmpsb
pop
scas
adc
orb
lods
fwait
aad
cltd
scas
pusha
insl
cld
sbb
fisubl
loope
push
sub
repnz
pop
xchg
mov
imul
lret
cltd
xor
fsubs
mov
scas
jae
aas
dec
sbb
loope
push
inc
roll
adc
decb
fsubrp
aad
js
out
lcall
jae
cmp
inc
jge
sbb
test
add
mov
outsb
lret
out
inc
stos
loop
rcrl
add
push
mov
cs
xchg
jns
dec
push
outsl
orl
xchg
jbe,pn
mov
push
pop
pusha
repz
mov
popa
out
leave
pushf
jnp
xchg
repz
xor
mov
imull
js
pop
pop
aad
mov
fisubrl
mov
cmp
lret
jmp
or
loop
je
cmp
xor
mov
nop
jno
cli
aam
addr16
incb
pop
xchg
fwait
scas
sub
xchg
add
jl
cmp
jmp
pop
ds
fwait
mov
jmp
loopne
sti
hlt
lods
daa
dec
pop
mov
sti
sub
jae
shrl
dec
ds
mov
sbb
or
popa
pop
dec
inc
pop
push
out
fsubl
add
test
xor
or
mov
inc
scas
mov
repz
xor
lock
adc
mov
mov
rcrl
popa
fisubl
loope
inc
sbb
mov
test
and
shll
sub
adc
xchg
daa
addr16
fcomi
btr
push
mov
addr16
daa
mov
jmp
lcall
xchg
push
inc
lret
and
pop
int3
mov
xor
mov
imul
out
mov
mov
outsb
mov
mov
jge
sbb
inc
test
push
push
xchg
xchg
testl
in
repz
orb
jno
pusha
dec
ret
pop
mov
pushf
mov
clc
cmpsb
fwait
add
lds
xor
pop
cmp
icebp
out
inc
fisubl
cmp
pop
movsb
jne
jnp,pt
jecxz
adc
int
lods
or
outsl
out
lea
mov
mov
stc
sub
popl
push
outsb
movsb
add
and
std
shll
out
sbb
jae
mov
add
xchg
adc
test
or
ret
jnp
mov
sbbb
int
int
pop
mov
mov
call
and
out
lods
movl
mov
lea
cmc
mov
push
dec
cmp
lock
test
mov
adc
dec
or
and
sub
lahf
dec
jg
mov
fistpl
inc
cs
xchg
je
mov
addl
cmp
push
xor
test
shl
and
fmul
xor
sbb
das
ss
sbb
push
push
xchg
sbb
out
or
insl
jae
add
inc
fsubl
sbb
xor
and
and
stc
jae
and
push
icebp
test
push
sbb
out
xchg
call
test
pop
out
cmpl
loop
daa
and
xchg
aas
les
jb
out
test
fwait
push
int
fimull
mov
mov
out
push
push
out
shl
nop
gs
rcrl
call
or
nop
sarl
mov
aad
out
aas
in
sbb
movsb
mov
popf
sahf
int3
xor
loope
dec
and
ss
xchg
inc
cmp
das
add
xor
rclb
int3
adc
pop
jp
or
mov
lods
dec
adc
lcall
nop
add
and
inc
dec
arpl
fisubrs
dec
mull
sbb
xchg
adc
mov
cwtl
or
adc
push
pop
iret
jbe
popa
inc
stos
mov
stc
lahf
cs
hlt
mov
adc
sbb
movnti
adc
test
aaa
stc
loopne
mov
push
test
sub
pop
stos
test
add
cmpsl
dec
stos
push
mov
xchg
pop
out
push
repz
cmpsl
ds
out
cli
fisubs
xor
movq
or
inc
sub
mov
or
dec
flds
push
sti
mov
cmp
sbb
jmp
mov
outsb
inc
xchg
xlat
leave
push
add
adcl
dec
scas
sar
iret
lock
jne
mov
popf
inc
outsl
pop
adc
addr16
aas
adc
das
xor
push
cwtl
xor
lock
outsb
inc
shll
and
int
stc
adc
jg
sub
inc
sbb
xor
rcll
cwtl
xchg
std
and
jg
out
pop
mov
inc
lahf
adc
dec
adc
in
mov
into
mov
mov
push
lahf
sub
xor
out
mov
dec
mov
cwtl
sti
stos
iret
mov
xchg
pusha
mov
cltd
roll
das
xchg
shl
dec
mov
xorb
cmp
icebp
add
ss
dec
pop
je
mov
xchg
jae
push
lds
mov
int
sbb
cli
push
repnz
js
addr16
shlb
inc
js
shlb
adc
lret
movsl
inc
cltd
xor
dec
xchg
andl
mov
ljmp
jns
xor
mov
mov
push
test
fstl
movsb
loop
bound
jg
frndint
stos
mov
mov
inc
cli
loope
int3
icebp
mov
mov
pop
testb
mov
xchg
inc
dec
mov
mov
out
adc
push
dec
mov
dec
pop
xchg
sub
ja
sub
pop
push
lahf
inc
ret
and
clc
mov
adc
divl
lea
mov
mov
xlat
jbe
jge
in
nop
push
loopne
sub
movsl
test
push
insb
add
jp
das
fmuls
sub
and
and
pop
hlt
dec
pop
rol
jl
out
stos
loope
fsubrs
dec
and
mov
xchg
pop
lea
lahf
das
xchg
mov
data16
mov
popf
arpl
sbb
push
mov
div
pop
jo
jle
and
clc
push
pop
sub
fcmovu
mov
adcb
je
dec
dec
fildll
inc
mov
das
xor
stos
lock
pop
popa
std
das
cmpb
test
lock
fucomp
push
mov
in
sbb
sbb
int3
jb
jge
insb
lret
xlat
fs
cmp
mov
jbe
jns
xchg
aam
out
andl
xchg
aad
dec
lcall
mov
jae
sub
icebp
sub
stos
movsl
xchg
mov
mov
jecxz
jb
cmpsl
orl
stos
sti
xlat
mov
push
int
in
jp
jp
aad
mov
mov
cmp
into
xor
daa
push
cmpsb
mov
xchg
mov
pop
ret
ret
xor
iret
pop
iret
inc
cmp
mov
inc
mov
repz
push
movsb
dec
movsl
jp
jl
cmpsl
fnstcw
cld
push
xchg
imul
call
sahf
or
or
ss
xchg
sbb
sahf
sbb
lahf
fdiv
repnz
stos
pop
sub
cmp
mov
int
sbbb
stos
push
pminsw
adc
loope
jns
jmp
std
sbb
xchg
fwait
mov
push
mov
jns
lea
push
dec
mov
adc
scas
lea
pushf
push
jnp
xchg
ljmp
mov
movsb
jg
les
push
xor
in
xor
cltd
andb
push
add
fisttpl
add
flds
cmp
bnd
fadds
cmp
lods
lcall
sar
lea
sar
imul
call
hlt
cwtl
add
lock
in
ss
imul
inc
shll
hlt
push
pop
in
add
and
sarl
mov
in
add
sub
jecxz
jae
rolb
imul
push
jecxz
cmp
iret
mov
jno
xchg
ret
mov
sar
pop
push
or
push
std
test
push
je
je
jmp
icebp
imul
and
lds
lcall
jp
jmp
icebp
mov
sub
inc
fisubrs
pop
popf
mov
out
jae
xor
dec
jecxz
add
std
cwtl
or
xchg
mov
scas
mov
adc
je,pt
pop
call
or
or
cltd
jge
test
push
pop
mov
pop
sub
xor
mull
iret
adc
xlat
fs
out
aas
call
test
js
jle
pop
dec
repz
xchg
sub
test
call
rcr
and
xor
xchg
xchg
repz
push
lods
jl
jl
mov
or
ds
or
out
and
jge
cwtl
cmp
nop
sub
test
mov
xor
and
jmp
lea
sbb
lret
inc
xor
push
xor
lock
jecxz
dec
push
push
fdivr
mov
rolb
mov
lods
arpl
add
mov
iret
pop
push
pop
popa
ret
jb
mov
stos
mov
inc
mov
inc
xor
push
sahf
jmp
jecxz
cmc
sbb
fldcw
push
sbbl
outsl
jo
push
inc
sbb
scas
sub
pop
pop
ja
filds
ljmp
scas
mov
out
dec
sub
pop
cmp
sub
dec
or
in
add
ret
or
lahf
int
lahf
pop
jns
push
cmpsb
xchg
adcl
pop
or
jbe
jmp
js
jbe
mov
ret
movsb
iret
cmpsl
mov
cmp
imul
scas
icebp
or
shlb
dec
lcall
jne
les
dec
mov
mov
imul
push
add
loopne
xchg
mov
stos
mov
cltd
flds
popf
push
mov
pop
inc
and
or
pop
daa
test
imul
add
fstpt
daa
cmp
mov
repnz
push
int
pushl
inc
inc
pop
testl
xchg
adc
movb
or
addr16
xor
mov
sub
mov
cmp
sahf
pop
stos
fsubr
aaa
jbe
cmc
movsl
dec
jb
pop
cmp
jbe
inc
imul
cmp
ljmp
cs
in
in
fistpll
pop
in
adcb
in
push
fcoms
mov
jp
inc
mov
add
scas
das
in
inc
scas
ret
lret
sub
stc
pop
mov
inc
je
out
loop
decl
clc
mov
in
xchg
sbb
push
bound
imul
xor
inc
packuswb
jb
inc
cmp
repz
inc
pop
mov
pop
jnp
fsubr
xor
pop
jno
js
clc
dec
xchg
out
inc
mov
pushf
and
jp
sbb
sub
jle
and
mov
push
aas
pushf
xchg
cmc
cmpsl
push
mov
shlb
cmpsl
incl
adc
push
sbb
inc
xchg
xlat
es
insb
pop
fucomi
in
jecxz
sub
push
ja
fsts
push
es
adc
mov
lcall
sahf
roll
jbe
inc
out
cltd
jns
cmp
vpmacsdd
into
xchg
push
xchg
pop
push
mov
add
push
and
in
sub
dec
scas
sub
jne
or
jle
nop
jmp
add
fmull
pop
out
sbbb
pop
add
cltd
cmp
add
cmp
std
scas
pushf
pop
bound
inc
cld
jmp
sub
lcall
xchg
in
arpl
jae
test
icebp
fisubrl
pop
push
sahf
dec
icebp
mov
mov
test
adc
fcomps
shll
jae
in
mov
mov
add
push
pop
sbb
push
aam
xchg
xor
mov
arpl
add
orb
aaa
adc
out
push
in
adc
mov
aad
test
xchg
pop
mov
mov
roll
add
jge
dec
or
pop
sub
lret
xor
je
sub
fistl
scas
push
jb
push
enter
insb
and
dec
outsb
xchg
inc
test
mov
lcall
cmp
pop
stos
std
mov
sahf
and
mov
xchg
sbb
cmp
pop
cmp
ja
stos
es
sub
mov
mov
xor
xchg
sbb
sbb
mov
ljmp
cmpb
push
loope
sub
idivb
lcall
stc
add
xor
inc
orl
mov
push
dec
xchg
outsl
jae
inc
dec
sti
notl
fs
mov
push
or
arpl
cmp
mov
jl
sbb
loop
sbb
and
push
adc
pusha
mov
lret
in
in
jl
lret
decb
arpl
xchg
js
fisubl
fs
add
adc
mov
loope
ficompl
mov
xchg
lock
fldt
jno
daa
cwtl
adc
push
mov
sbb
mov
ret
rorb
mov
cmp
jl
inc
loopne
xor
je
adc
hlt
mov
push
push
outsl
ds
insl
lock
push
popf
fst
notb
hlt
dec
imul
xchg
es
push
movsl
setbe
xchg
mov
sub
in
fbld
ffreep
rcr
mov
mov
das
insb
inc
jg
xchg
or
daa
nop
xchg
xchg
push
scas
lea
iret
jbe
mov
sarl
mov
fisttpl
adc
mov
shl
dec
je
aaa
push
inc
imul
jo
pop
insl
mov
or
mov
cmp
mov
pusha
or
shl
shrb
cld
add
add
mov
jno
aam
mov
lret
cmp
cld
mov
insb
xchg
xor
out
xchg
call
enter
loopne
and
rcr
push
test
xchg
push
test
mov
in
das
repz
stc
mov
inc
inc
push
jns
pop
adc
mov
sbb
push
jg
call
mov
adc
inc
jb
leave
popf
rcrb
jno
xchg
data16
repnz
in
or
jne
lcall
shll
xchg
push
cmpsb
mov
fsub
mov
sub
fistpl
xor
cmp
popf
jns
inc
inc
push
mov
adc
jnp
add
mov
mov
or
inc
add
dec
push
leave
lcall
and
or
sbb
jmp
aam
mov
push
into
mov
ljmp
mov
sbb
shl
dec
inc
pop
pavgb
iret
adc
dec
movsl
clc
loop
sar
adc
jnp
aaa
repnz
inc
mov
cmp
pop
inc
stos
xor
mov
jnp
mov
push
adc
sbb
push
xorb
cmp
loope
mov
sbb
mov
and
mov
mov
popa
popf
lret
aaa
mov
pop
fistps
xor
fldenv
pop
and
sub
mov
ss
repz
outsb
push
pop
fisttps
fistl
xor
adc
mov
cmp
stos
mov
sahf
negl
test
imul
jno
test
into
sbb
test
into
fnstsw
sub
xchg
test
adc
inc
push
aam
loope
in
repnz
xor
aad
add
push
sbb
sbb
iret
jmp
cmc
add
xchg
sarl
jns
cli
cmp
inc
outsb
and
mov
fisttps
iret
add
adc
shr
fcmovnbe
inc
pop
or
xchg
adc
xchg
mov
push
dec
stos
cmpsl
scas
and
pop
xor
sub
mov
lcall
push
push
mov
pushf
jb
sbb
mov
loope
sarb
mov
movsl
cwtl
ljmp
lock
add
test
pop
xor
stos
lea
push
cli
add
repnz
xor
pop
mov
mov
xchg
jle
push
sbb
dec
cs
pop
ja
lcall
enter
insb
pop
cli
enter
or
cld
fst
lret
movsb
cmpsl
decl
mov
test
sbb
movsb
dec
arpl
cltd
push
loopne
xchg
mov
lea
lds
call
aad
fdiv
pop
add
xchg
mov
clc
in
add
jle
es
add
sub
mov
daa
xor
outsl
jo
jp
jecxz
mov
je
stc
cltd
lods
sbb
and
test
xor
les
sub
scas
mov
xchg
mov
xlat
push
sub
nop
mov
or
aad
pop
push
jge
jae
sub
inc
popa
imul
mov
xchg
pop
movsl
mov
push
sub
push
lds
lods
mov
scas
fldenv
xchg
cmc
aas
and
push
push
imul
mov
xchg
jo
adc
aad
movsl
mov
inc
fisttpll
mov
fisttps
add
sti
or
push
add
cmp
push
in
xor
leave
xorb
js
xlat
repnz
iret
jnp
aaa
nop
int3
sub
out
push
mov
fistpl
pop
xlat
insl
jmp
push
in
push
xor
jmp
jmp
inc
and
sbb
mov
mov
xor
cld
ret
ljmp
repz
faddl
in
xor
mov
outsl
push
sub
xchg
loopne
cmpsb
cmpsl
or
enter
xor
fwait
push
out
addl
mov
xchg
daa
loop
mov
xor
xchg
cltd
shr
or
xchg
lock
pop
divb
pushf
add
movsl
push
add
push
mov
loopne
test
arpl
das
xor
mov
outsb
stos
addr16
push
movsl
jle
fnstenv
push
and
or
test
cmpsl
decl
adc
jg
enter
dec
dec
sub
adc
outsb
inc
mov
mov
aas
shl
inc
orl
xchg
inc
sub
pop
lock
jns
xchg
sbb
cmpsl
inc
sti
xor
hlt
dec
aaa
scas
loope
jl
push
or
mov
je
xchg
inc
sbb
jnp
dec
push
test
pop
or
int3
insb
test
fsubrs
sbb
push
mov
mov
jne
ds
push
inc
call
lret
jns
rcrb
xchg
jle
xchg
sub
dec
inc
push
add
data16
and
stc
xchg
hlt
std
rclb
cltd
or
cwtl
push
in
cmpsl
shrb
stc
jl
jp
mov
leave
fldt
cltd
sar
movsb
outsb
inc
adc
or
add
push
inc
mov
or
xlat
jb
ret
and
pop
faddl
sub
imul
cmp
fmuls
push
xlat
push
push
jcxz
dec
imull
out
mov
lock
xchg
js
aad
pop
or
add
mov
pop
addr16
mov
ss
mov
add
aad
mov
fdivs
jb
mov
inc
cmp
dec
sahf
inc
out
lcall
pop
cli
insl
es
ljmp
fsubs
inc
data16
mov
or
clc
nop
es
mov
mov
cli
xor
scas
jecxz
push
xor
stos
sti
xchg
int3
xchg
nop
mov
push
test
and
cmp
cmpsb
das
adc
outsb
mov
aas
fsubrs
mov
and
ljmp
aam
xchg
add
jg
testb
xchg
rcll
jmp
ss
dec
sbb
push
xor
call
cld
push
and
mov
adc
mov
loopne
ljmp
lahf
push
cld
frstor
fldcw
push
out
or
mov
adc
pop
in
lock
fstpl
push
out
arpl
dec
int
push
dec
push
les
sbb
push
mov
xor
xor
xchg
pop
shlb
pop
jmp
cmc
mov
nop
inc
fprem1
out
dec
push
and
das
mov
mov
xchg
lods
pop
fdivrp
and
inc
or
test
fists
rsqrtps
popa
pushf
adc
out
xchg
pop
jbe
insb
lahf
stc
std
and
ds
mov
adc
or
das
loopne
pop
clc
shld
lret
jb
fists
add
ret
lret
or
enter
std
incb
in
scas
pop
es
inc
pop
aam
xor
xchg
dec
mov
call
inc
gs
xchg
les
mov
cmpsl
xchg
aad
aas
out
sub
pop
lret
mov
fsubl
jle
int3
movsb
pop
mov
jbe
imul
xor
xchg
cmp
sti
mov
xchg
pop
int
cmp
ret
xor
xchg
xchg
insl
mov
mul
push
ljmp
jne
add
imul
scas
js
xchg
push
pop
std
xor
mov
and
xor
xchg
scas
stos
mov
repnz
dec
mov
mov
cmpsb
xchg
mov
lret
popa
mov
sbb
mov
addb
sbb
loopne
inc
and
outsl
adc
dec
mov
in
push
das
push
xor
xchg
push
sahf
cmpb
loop
mov
fiaddl
cmp
enter
dec
mov
adcl
and
mov
test
or
mov
rcpps
push
imul
sarb
lods
cwtl
enter
jg
pop
test
shlb
sub
loop
pop
shr
sti
xor
iret
adc
out
in
and
or
inc
inc
aam
in
sub
fistl
sub
gs
xor
insl
dec
dec
mov
add
push
push
jbe
pop
dec
cld
insb
movsl
mov
cmp
cmp
jge
lea
xchg
and
js
test
cs
xchg
movsb
and
and
push
jno
pop
mov
int3
pop
pop
hlt
xchg
xchg
les
ljmp
sub
shl
stos
inc
xor
cmpsl
jnp
mov
jne
rorb
or
mov
jae
sub
hlt
fidivrl
add
mov
push
es
sub
imul
cmp
jb
les
lret
sbb
mov
dec
enter
push
pop
xchg
orl
or
inc
xchg
call
in
xor
add
jge
fwait
pop
mov
push
jb
add
pop
arpl
fisttps
clc
movsb
out
pushf
xchg
sbb
cmp
dec
or
add
test
mov
inc
sbb
std
or
mov
mov
xor
movsl
fbld
int3
fbstp
inc
lret
xchg
push
pop
ds
cld
pop
jp
sarb
adc
dec
cmp
push
add
xchg
mov
push
inc
and
gs
mov
inc
call
sbb
push
leave
jb
pop
xchg
xchg
sub
notb
push
out
sbb
sti
ljmp
push
xor
xor
rcrl
dec
mov
push
movhps
or
mov
adc
push
mov
pusha
sbb
dec
loop
inc
cmpsl
cmp
pusha
adc
sub
mov
pop
jp
lock
push
out
or
loop
push
cmc
repnz
cmp
repz
inc
mov
jecxz
mov
in
pop
sahf
outsl
dec
or
sbbb
ss
and
sahf
xor
sbbl
fnstenv
or
icebp
push
push
jbe
test
popf
push
lea
jg
cmp
into
pop
and
subl
sbb
clc
cmp
ja
les
cmp
pop
mov
cld
add
cltd
adc
inc
xor
sbb
test
aam
shrl
adc
test
scas
stos
xor
adc
mov
fcoms
aam
mov
dec
gs
jbe
push
jb
sub
outsl
mov
mov
xchg
jbe
jp
push
punpcklwd
xor
ret
repnz
sub
mov
cwtl
addr16
cmp
leave
es
adc
roll
lret
out
add
lea
jno
pop
xchg
and
inc
pop
rorl
sub
push
ret
lcall
push
and
into
js
adc
adc
mov
stos
popa
inc
mov
ret
pop
rcll
pop
or
lcall
xor
dec
xorb
pop
aas
push
mov
outsl
sub
mov
or
adc
add
sub
inc
scas
xchg
add
mov
insl
out
inc
cmp
or
dec
shr
fdivl
mov
sbb
jbe
mov
ret
adc
cld
ljmp
push
sbb
mov
push
nop
push
std
int
jl
mov
dec
cs
jl
push
jecxz
lods
popa
out
popf
xrelease
repnz
movsl
cmp
rcrl
and
ds
push
cmp
cmp
fs
rorl
mov
lcall
ljmp
and
xchg
adc
push
adc
dec
in
cltd
pop
jle
pop
mov
pop
or
in
mov
jne
inc
jno
aad
daa
test
scas
push
pop
mov
repz
xchg
cltd
add
xor
cltd
lock
jl
sbb
push
shrb
cmp
xor
mov
out
push
repz
fcmovnu
pushf
in
lret
pushf
jns
popa
mov
xchg
int3
push
jae
xor
and
and
fbld
ss
jle
imul
int
sbb
or
stos
push
outsb
hlt
cs
scas
shll
in
dec
pop
fucomp
fstpl
cwtl
cs
fs
mov
clc
xchg
lcall
fwait
gs
out
xor
cmp
clc
or
icebp
add
fsubl
int
jmp
sbb
jp
ljmp
lret
dec
mov
fwait
pushf
mov
or
fs
mov
ja
mov
or
inc
addr16
jno
sub
stos
push
pop
andl
xor
and
jmp
push
decb
dec
sar
jnp
nop
imul
xor
rcll
dec
dec
xchg
mov
mov
jl
xor
fnstcw
in
mov
inc
aam
data16
in
lret
push
sub
sub
mov
fs
sbb
leave
outsb
mov
mov
sub
lcall
mov
inc
inc
mov
mov
push
fimull
addl
inc
insl
cmpsb
cmpsb
shll
stc
xor
mov
enter
jno
lds
int3
popf
out
mov
pop
mov
dec
pop
repnz
fwait
aaa
movl
rcrb
sbb
inc
mov
xor
fldenv
cmp
lahf
xchg
sbb
outsl
pop
fs
sbb
mov
jae
imul
mov
pop
add
cmpsb
push
in
aas
fcoml
into
mov
dec
data16
or
gs
jecxz
inc
mov
sub
mov
mov
xor
shrl
jb
lods
adc
or
xor
or
ds
test
mov
iret
and
or
insl
insb
mov
popa
jmp
inc
push
jg
pusha
mov
or
pop
fmuls
aad
or
ljmp
jnp
sub
fdiv
aas
mov
mov
and
test
outsl
in
js
fildll
cwtl
call
pop
sbb
mov
int3
pop
std
mov
push
popa
pop
xchg
sub
out
imul
daa
test
lock
lock
inc
mov
mov
mov
mov
and
ret
test
sub
aam
pop
ja
jl
ss
ja
fcmovnb
sub
and
cwtl
aad
push
in
adc
faddp
fnstsw
mov
jne
or
cld
sar
icebp
jl
stos
cmp
movsb
cmc
push
rcr
andl
xchg
push
cmpxchg
push
fists
out
pop
mov
sub
sub
push
sub
lcall
pop
and
in
and
inc
out
add
scas
mov
cltd
dec
nop
jb
stos
mov
cmpsb
jae
push
mov
mov
and
xchg
ljmp
int
or
cmc
enter
scas
cmpl
sub
xchg
jno
add
push
out
and
sahf
cmp
pushf
cmp
sahf
add
cmp
sbb
push
out
sarb
and
sbb
int
lcall
inc
outsb
mov
mov
dec
pop
sub
or
xor
inc
inc
pusha
push
stc
pop
mov
shrl
mov
jmp
in
imul
ljmp
scas
jb
loop
jbe
adc
lds
pop
stos
cmp
add
dec
shr
loopne
sbb
mov
test
dec
push
and
inc
scas
out
vaesdec
hlt
sbb
mov
adc
mov
fcomps
push
xchg
mov
les
xor
popa
sub
fidivrl
cltd
hlt
cmp
adc
clc
jne
push
mov
stos
mov
xor
fdivr
mulb
push
adc
adc
mov
cli
xchg
xor
xchg
mov
pop
mov
lock
scas
ror
xchg
sbb
out
mov
jl
cmp
dec
es
data16
fisttpll
into
std
pop
jl
andl
lcall
loope
pop
mov
sbb
repnz
inc
loop
lds
movsl
rcrl
cs
pop
out
aad
sub
cmp
adc
cmc
cltd
mov
sub
xchg
leave
mov
xchg
xor
sbb
mov
push
inc
sub
mov
pop
sbb
or
push
daa
push
and
out
dec
mov
or
sti
push
mov
push
cmpsl
int
aaa
iret
or
push
aaa
push
mov
in
sub
sub
loope
add
cld
mov
or
jo
sbb
loopne
xchg
push
jno
dec
jle
mov
mov
fmuls
testb
pop
scas
inc
fsubrs
ss
dec
and
fmull
jno
mov
xchg
cmp
add
mov
inc
xchg
inc
out
xor
mov
or
cmp
fmull
inc
mov
or
pop
ja
aaa
mov
cmp
lret
sbb
icebp
jg
cmc
jb
mov
jae
outsb
aaa
daa
not
rclb
jb
notl
inc
pop
cs
and
outsl
imul
cwtl
shrl
dec
shl
fists
cld
mov
aam
jns
in
jnp
mov
outsb
aas
cs
inc
lds
pop
mov
popf
sahf
push
std
je
mov
ret
mov
fsubl
jecxz
adc
lods
jae
jns
add
stc
or
adc
pop
jne
fwait
cwtl
cld
mov
stos
dec
push
mov
xchg
sti
int
xchg
jmp
push
outsb
mov
subb
sub
int3
and
jnp
je
jecxz
call
inc
xor
inc
add
popf
imul
insl
push
and
push
sbb
divb
movsb
mov
sub
stc
adc
xchg
dec
mov
jno
xor
and
movsb
icebp
xchg
in
hlt
ljmp
shlb
adc
repz
dec
cmp
cmp
pop
movsl
adc
das
int3
mov
add
cmpsl
xchg
enter
in
sub
mov
icebp
int
cld
push
mov
loop
je
jnp
imul
mov
out
adc
mov
outsl
icebp
fwait
jns
fsubrp
xor
enter
out
inc
js
pop
cmc
adc
dec
lods
scas
into
mov
cwtl
or
xor
jg
xchg
ret
mov
dec
mov
out
xlat
dec
movsb
lods
addb
data16
loopne
test
cmp
push
or
push
test
out
push
aad
clc
sbb
and
bound
jge
push
loopne
dec
lea
loop
mov
sti
lods
inc
sub
mov
gs
imul
push
mov
fidivl
mov
lcall
int3
dec
std
sbb
idivb
jo
cltd
daa
dec
je
cmp
sub
fidivl
add
cltd
jb
in
xorb
repnz
and
pop
wbinvd
mov
xchg
shlb
fwait
mov
nop
sub
lds
fsubs
sbb
lods
xchg
mov
out
mull
dec
inc
mov
add
mov
or
push
jmp
pop
cld
out
xor
fcmovu
push
stos
jns
loop
mov
add
mov
das
mov
into
mov
in
xchg
sbb
jmp
push
outsl
int
lret
sbb
stc
enter
lock
pop
ss
inc
cltd
lock
imul
scas
xchg
aas
sub
add
icebp
mov
scas
adc
mov
js
dec
push
jb
jns
pop
jp
or
or
pop
aam
inc
sub
lahf
xor
mov
mov
pushf
pop
aad
push
outsb
icebp
in
cmpsl
jmp
idiv
out
push
es
or
lods
cmc
mov
test
cmp
xchg
pop
lds
push
imulb
mov
daa
cmp
loop
sub
mov
test
xchg
aad
std
imul
adc
ret
sbb
jbe
jle
xchg
adc
dec
idivl
mov
mov
gs
std
jge
fwait
imul
insb
repz
pop
xor
insb
xchg
lret
leave
data16
imul
pop
add
sub
mov
ja
mov
or
cmp
xchg
xor
push
sub
orb
lahf
and
pop
aam
in
sahf
lods
stos
fwait
imul
loopne
add
sbb
subb
fcompl
aam
sbb
inc
pop
int3
jno
jmp
xchg
ja
ja
pop
or
ret
aas
push
arpl
xchg
addb
sbb
add
jmp
loope
pop
imul
jp
push
dec
jp
imul
fstpl
test
stos
sahf
mov
movsl
addb
movsl
or
outsl
xor
std
mov
iret
ds
sub
orb
add
cltd
inc
jo
call
iret
inc
pop
cld
sbb
sub
mov
push
inc
add
xchg
or
jnp
and
inc
adc
imul
inc
sub
ds
fwait
imul
inc
fucomp
clc
sbb
dec
fldl
pushl
aas
xchg
mov
stos
mov
lahf
inc
xchg
and
std
ret
mov
pop
lahf
movsl
pop
repnz
push
test
cmpsb
int
iret
insl
js
ficomps
push
daa
rolb
inc
cmp
fildl
pusha
push
jo
mov
lds
out
movsl
pop
jp
jl
jge
mov
mov
or
int
inc
push
sarb
mov
push
xchg
jne
adc
cmp
cmp
out
pop
and
iret
std
and
scas
jmp
or
es
and
bound
ljmp
inc
sbb
ss
aaa
loop
inc
dec
cwtl
push
push
sbb
pop
in
inc
pop
ljmp
jb
jbe
ret
adc
inc
in
pop
push
addb
test
jo
cmp
xor
xor
iret
imul
test
pop
js
movsb
test
lret
xchg
xor
aad
pop
mov
mov
outsb
jno
adc
jle
fistl
dec
repz
clc
push
js
mov
cmp
inc
aam
xor
push
add
fisubl
stos
cmp
rcrb
sahf
mov
and
cmpsb
dec
in
xor
and
cmpsb
lret
test
ss
nop
inc
sub
and
sub
sarb
movl
sbb
cmp
call
imul
sahf
inc
orl
lret
mov
xchg
push
pop
mov
mov
out
dec
xchg
xchg
sbb
mov
mov
std
mov
dec
push
sti
sub
mov
fsts
add
aaa
rorl
pop
rol
insb
lret
scas
inc
leave
cli
stc
inc
push
in
push
ret
pop
lods
dec
lahf
fwait
push
push
cmp
sub
lods
mov
xlat
cld
jne
in
nop
into
data16
cmpsl
push
call
test
jne
push
dec
dec
gs
xor
xchg
loope
push
cmp
into
loop
mov
mov
in
mov
pop
pusha
pop
add
pushf
lret
in
push
fildll
rclb
or
pop
mov
xor
loopne
mov
iret
add
cmp
or
mov
les
loopne
clc
lret
out
sub
ffreep
stos
in
add
test
hlt
cmp
mov
xor
fisttps
jnp
aad
inc
arpl
fdivrs
scas
sbb
jle
sbb
sbb
sbb
jmp
gs
and
andb
stos
sbb
test
mov
fdivrl
mov
pop
mov
cld
out
cltd
scas
mov
out
outsb
dec
divb
jl
into
repnz
ljmp
add
loopne
imul
imul
mov
addr16
or
ds
pop
adc
andl
jecxz
inc
push
int
outsl
xchg
insb
popa
fcomps
xchg
push
lock
fldt
jne
movsb
inc
scas
jns
sbb
pop
xchg
popf
pop
es
add
shlb
aaa
lcall
je
jmp
adc
insl
fmull
jp
sub
mov
adc
cmp
es
push
nop
dec
fs
cmpsl
inc
pop
shll
pop
cltd
outsb
mov
jmp
data16
stos
mov
mov
inc
cmpsb
les
daa
xchg
pop
add
and
shl
pop
sbb
mov
lret
add
add
push
inc
adc
pop
call
mov
sbb
mov
xchg
daa
push
negb
adc
add
mov
and
mov
sbb
call
xchg
jle
dec
add
std
cmp
mov
sbb
push
xor
pop
ljmp
push
arpl
xor
jno
cwtl
scas
mov
cmpsl
xchg
scas
push
cmp
cmpsb
adc
mov
pop
out
fwait
jmp
mov
testl
fcmovnb
out
add
fisttpl
outsl
fdivl
loope
pop
aad
pusha
rorb
cld
testl
fildl
int
pop
out
mov
cmp
rcll
out
repz
mov
loopne
push
push
ror
mov
pop
lock
jbe
out
cmp
xlat
imul
dec
xor
outsl
fidivrl
or
stos
xor
pop
mov
in
enter
out
dec
call
sti
stos
mov
in
stos
imul
xor
jge
iret
and
test
add
imul
jo
pushf
lahf
sub
or
adc
pop
int
sub
loopne
mov
sahf
repnz
sub
add
inc
ss
jl
xor
out
pop
xchg
jp
mov
push
jo,pn
pop
inc
clc
subb
cwtl
dec
cmpsb
fdivrs
sub
mov
xchg
mov
and
mov
arpl
add
mov
into
xchg
jmp
add
jnp
xchg
xlat
jae
les
sbb
pusha
push
cmp
sub
bound
pop
adc
mov
shl
mov
jg
rorl
out
sub
pop
ljmp
hlt
notb
cmp
jo
int
sbb
and
pop
pop
cld
pop
and
pop
out
cltd
enter
sub
inc
sti
rcl
dec
push
mov
das
mov
in
pushf
inc
fdivrl
inc
sahf
sbb
and
xchg
ja
lock
dec
inc
hlt
push
mov
inc
sbb
inc
mov
rorl
push
lds
xor
repnz
aam
repnz
in
das
enter
mov
inc
inc
xchg
rorl
mov
mov
push
jmp
cli
inc
mov
add
daa
sahf
outsl
pop
in
ret
mov
ds
stos
pop
sbb
xchg
push
mov
jp
jns
or
call
insb
sub
xchg
add
pop
adc
lods
shr
ret
add
mov
dec
mov
cmp
outsl
out
sub
cld
test
dec
in
ds
movsb
iret
dec
inc
aad
sahf
ret
cli
dec
and
popf
ficompl
push
xchg
push
cli
sub
cld
xor
data16
popa
and
add
ja
mov
nop
xchg
xchg
adc
pusha
mov
and
in
test
shll
or
loopne
mov
sbb
inc
popa
mov
addl
xor
adc
push
call
into
sub
dec
call
jns
mov
xchg
lcall
aaa
dec
fdivl
stos
push
or
xchg
ret
mov
out
repnz
cld
lcall
or
pop
pop
and
subl
mov
mov
mov
lock
insb
fisttpl
fdivs
lods
sub
aad
jmp
mov
sar
aaa
xor
sub
leave
mov
jnp
loopne
cwtl
push
or
cmp
mov
jbe
scas
clc
call
dec
mov
scas
jb
cld
test
inc
adc
sub
movsl
dec
cmc
inc
movsl
lea
cltd
add
cltd
add
adc
imul
outsb
sarl
ss
push
js
jnp
jge
addr16
icebp
mov
pusha
ds
xchg
dec
out
or
sub
jb
mov
and
sub
fstpt
mov
cmpsb
or
ret
pushf
fidivrs
mov
pushf
incl
or
fadds
pop
push
test
imul
in
pop
push
sbb
mul
jb
dec
int3
jge
push
pop
pop
push
sub
jg
mov
jmp
and
imul
fmuls
fisubrl
mov
fisubrs
pop
cmp
xchg
xchg
arpl
dec
and
mov
int3
cli
or
xchg
dec
adc
jp
mov
in
adc
in
fmull
repz
imul
test
dec
test
push
test
dec
scas
ficomps
xor
repz
aad
mov
push
pop
jbe
ret
in
arpl
lock
out
stos
test
pushl
mov
pop
pop
mov
loop
mov
aas
push
push
jbe
cmp
sbb
stc
insb
mov
cmp
sbb
and
jno
add
nop
push
outsl
sbb
stos
pop
fdivl
int3
loopne
mov
outsb
mov
pop
pop
and
and
sub
pop
scas
inc
xor
gs
mov
xchg
lea
mov
and
xor
sbb
cmpsb
fcmovnu
push
in
add
mov
pop
aam
cmp
cmpsb
mov
sub
sti
push
pop
daa
jo
mov
mov
sahf
xor
stos
andl
int3
pop
and
gs
rcr
or
mov
pop
xor
sbb
mov
shlb
inc
inc
sbb
popf
icebp
std
sub
loop
jne
dec
adc
push
xor
je
cltd
jg
xor
xor
cmovns
adc
add
adc
iret
scas
int
pushf
cmc
or
mov
dec
xor
mov
into
add
mov
out
pop
lret
aaa
adc
adcl
mov
es
pop
sbb
out
test
pop
nop
fimull
pop
jns
dec
sub
ss
popf
in
push
push
filds
out
and
mov
jno
in
xchg
dec
dec
sub
inc
and
in
adc
call
mov
and
xlat
add
iret
into
divl
and
sbb
pop
adc
rcrl
mov
cmpsl
adc
insb
shlb
pop
test
cmpsl
mov
adc
push
aam
inc
xor
sbb
fldt
nop
push
push
adc
dec
ret
or
mov
mov
inc
xor
dec
xchg
xchg
xor
notb
cmp
fstpt
int3
fcomps
ss
test
cs
jnp
enter
rcrl
mov
or
enter
nop
mov
pop
iret
dec
push
sahf
cmp
mov
push
in
data16
inc
sbb
cli
jo
fwait
sub
cmc
cmpsb
insb
cmp
popa
jl
xchg
gs
out
loope
loopne
xlat
add
std
jnp
jbe
sub
scas
sbb
mov
lods
sti
inc
aaa
mov
jg
mov
and
xlat
ja
sbb
cmc
movb
lcall
add
cmp
lods
addr16
and
mov
push
in
lahf
jns
insb
mov
test
orl
out
lret
mov
loopne
pop
aaa
push
dec
sbb
negl
pop
inc
mov
movsb
popa
clc
xchg
xchg
lea
sbb
mov
mov
pminub
das
loop
pop
jp
inc
and
xchg
mov
mov
xor
cmp
daa
insl
pop
pop
xor
push
adc
aas
jb
mov
lods
imul
roll
pop
iret
cld
inc
and
test
cmpsb
dec
int3
in
sbb
test
data16
or
mov
movsb
sbb
hlt
push
mov
movsl
and
jb
cmpsl
int3
pop
sbb
stos
xor
stos
in
pop
cltd
or
mov
mov
lods
xchg
scas
add
jg
or
pop
jp
divb
mov
mov
jbe
gs
push
pushf
cwtl
mov
lock
pop
icebp
or
lods
repz
and
hlt
and
cmc
faddl
addr16
ret
sbb
push
push
repnz
daa
inc
movsl
mov
xor
imulb
pop
mov
sub
scas
jae
add
xchg
les
pop
add
adc
stc
mov
scas
out
rorl
fwait
push
jge
cmp
cmc
insl
dec
jbe
push
sbb
pop
fldt
jge
cmp
movsb
push
sub
xlat
fbld
jo
aaa
dec
ljmp
out
sbb
sbb
or
jae
sbb
xor
dec
jge
js
aad
icebp
inc
imul
and
mov
ss
inc
cmc
xchg
dec
adc
sbb
mov
jb
popf
push
aam
dec
fdivrl
add
inc
xchg
adc
dec
mov
cld
mov
outsb
gs
dec
nop
inc
movnti
push
cmp
add
in
insb
stc
push
sti
add
loopne
imul
cmp
bound
aas
pop
or
in
iret
imul
jecxz
mov
mov
inc
adc
mov
xchg
sbb
xchg
js
xchg
mov
outsb
or
xor
xchg
jns
jp
mov
icebp
decl
clc
cmp
pusha
mov
test
adc
jbe
mov
mov
sbb
mov
daa
sub
testb
and
outsb
sub
aad
cld
jne
mov
push
lahf
insb
sub
repnz
pop
mov
mov
fimuls
push
icebp
xlat
cmc
je
icebp
cltd
test
cwtl
mov
xor
dec
stos
insb
push
adc
jb
and
aad
call
sarb
out
inc
push
fs
jnp
or
xchg
lods
test
add
or
mov
pop
lret
push
xor
adc
sub
cli
pop
lods
inc
dec
out
pop
int3
int3
pop
call
xchg
mov
andl
sub
inc
and
outsl
inc
or
sub
rcll
repnz
push
add
loopne
jmp
inc
jb
es
sub
addr16
mov
nop
enter
das
sbb
push
sbb
arpl
ret
dec
sub
inc
xchg
pop
xchg
mov
in
or
int3
sub
jmp
fcmovu
mov
push
mov
bnd
push
jo
jne
cmp
mov
pop
ret
mov
stos
inc
jp
out
in
out
rolb
arpl
adc
mov
mov
pop
sub
xchg
sbb
mov
cmp
ret
jge
sbb
mov
insb
or
leave
into
xchg
mov
stc
xor
popf
jne
aaa
or
add
sub
jmp
decb
xor
mulb
push
testb
loop
out
lods
jno
sbb
jg
subl
notb
aad
and
cmp
mov
inc
xchg
loopne
clc
sbb
sbb
std
jl
cmp
adc
out
movsl
push
lds
fldl
mov
ss
lcall
add
out
jae
sub
xor
xor
pmaxsw
cs
pop
repnz
aam
add
and
scas
push
mov
add
ds
pop
bswap
sub
push
dec
pusha
out
and
int3
sahf
sbb
xchg
scas
xchg
leave
inc
outsb
and
mov
push
push
xor
jg
pop
push
push
clc
push
adc
jle
lcall
cld
mov
push
out
mov
je
movsb
std
lods
inc
rclb
jp
sahf
adc
int3
rcrb
cmp
les
ja
jg
jp
xor
jb
out
pop
xchg
lods
pusha
inc
dec
outsb
in
fsubl
rcll
push
dec
and
sub
or
and
jnp
cli
mov
repnz
push
test
push
inc
push
cltd
arpl
ret
xlat
mov
push
push
mov
insl
push
cs
sub
out
push
inc
jno
pop
cmp
test
nop
inc
jle
mov
dec
fwait
xchg
inc
icebp
xchg
mov
sub
xor
cmp
add
andb
rorl
shlb
xchg
xchg
in
xchg
mov
adc
push
in
mov
sbb
lds
lret
stos
das
rcl
loopne
loop
pop
je
pushf
pushf
jo
sub
aam
outsl
in
test
ret
jg
stc
scas
repnz
test
outsb
rclb
rcrb
jo
dec
sti
xor
aaa
xchg
inc
std
pop
stc
lret
adc
shlb
sub
push
jnp
out
mov
jne
nop
and
clc
popf
loop
js
xor
jno
inc
mov
dec
leave
data16
adc
push
push
das
jns
or
push
hlt
add
out
mov
das
in
dec
int3
adc
and
add
fwait
insb
rol
es
fwait
cmp
inc
mov
and
add
hlt
ja
cmp
xchg
mov
inc
push
notl
lock
push
adc
loope
and
cmp
push
mov
dec
and
mov
mov
mov
jp
loopne
dec
pop
sub
daa
mov
push
mov
sub
mov
nop
lock
les
inc
inc
sbb
repz
pusha
test
rcl
xchg
stc
pop
push
dec
dec
push
mov
sbb
mov
in
test
cltd
xchg
lret
mov
push
call
dec
add
sub
jb
decl
sub
aaa
jg
gs
pusha
icebp
push
int
test
jb
roll
or
pop
or
or
add
arpl
ret
pop
cmc
fstpt
pushf
fsubrl
test
xchg
ret
nop
mov
push
jmp
xchg
mov
cmp
xchg
cld
cli
outsl
adc
ss
movsb
jecxz
pop
addb
sub
jp
sub
aad
sti
inc
insb
mov
sbb
mov
jl
xchg
mov
sub
clc
push
out
pop
repz
cmc
ficoms
xor
lret
fs
roll
xchg
mov
pusha
pop
insb
pop
popf
int
cmpsl
mov
xchg
xchg
adc
jl
rcll
aam
push
out
sar
popa
sbbb
sbbl
adc
ret
dec
iret
jp
lahf
cmc
sbb
push
ljmp
insb
push
aad
mov
outsl
xchg
sub
imul
lods
ja
fs
and
loop
ss
adc
nop
pop
pop
out
cmp
push
inc
sub
fistpll
sub
jb
push
cld
mov
lahf
jns
pop
and
fildl
xchg
clc
dec
ljmp
mov
cmp
loope
push
sub
adc
mov
mov
not
pop
hlt
into
dec
sbb
aad
pushw
xor
das
inc
nop
std
pslld
jge
push
mov
sub
push
jl
xlat
jns
inc
add
sbb
pop
lea
mov
sbb
jle
fsubs
stos
push
cltd
cmp
notb
cmp
loopne
sub
jns
jne
inc
sub
mov
jne
icebp
dec
loopne
push
mov
cmp
insb
jle
dec
mov
cmpsl
sub
or
aaa
ss
xchg
push
jnp
repz
add
out
test
in
sub
xchg
inc
arpl
add
inc
cltd
addl
and
add
mov
and
gs
loop
lret
rcll
imul
push
pop
repnz
pop
pop
jnp
pop
imul
dec
xor
scas
cwtl
xor
and
xchg
out
addr16
sti
leave
jne
outsl
mov
imul
insl
std
test
mov
imul
outsb
mov
cmp
add
addl
rolb
xchg
mov
icebp
daa
push
lock
jnp
cmp
pop
sahf
adc
lds
push
xchg
mov
lea
add
mov
inc
dec
incl
arpl
push
testl
add
pop
in
std
mov
lods
out
lock
je
mov
pop
fildl
outsb
pop
fisttpll
out
in
shrl
mov
out
pop
inc
lds
xor
mov
pusha
loop
repz
lcall
inc
sub
pop
in
or
pushf
cmp
aaa
fs
mov
ja
or
fadds
fcoml
xchg
mov
adc
push
js
dec
and
ds
mov
das
and
mov
clc
ds
mov
sbb
ja
pop
lret
aaa
add
mov
sti
cwtl
adc
mulb
xchg
dec
inc
jle
ds
lds
int3
lret
bound
jno
jp
scas
out
stos
sbb
and
idivb
jle
dec
jle
mov
dec
outsl
int3
sbb
sbb
shl
xchg
adc
mov
cmp
out
ss
in
xchg
in
inc
push
mov
or
int3
or
imul
call
addr16
pusha
inc
xchg
orl
ljmp
mov
jle
jecxz
dec
int3
in
addr16
xchg
lahf
xor
add
cld
in
cmpb
shlb
insb
dec
sarb
ret
fists
ljmp
out
add
loop
push
int
push
pusha
jnp
cltd
enter
fwait
adc
mov
cmp
or
and
cmp
xchg
fmull
jmp
xchg
mov
lock
fimuls
or
jns
xor
push
imul
cmpsb
inc
leave
ret
mov
inc
jnp
inc
and
adc
inc
ja
lods
mov
sbb
pop
clc
cmp
sub
sub
push
xor
and
inc
mov
data16
jb
fwait
int
cmp
inc
xchg
fsts
mov
jmp
fsubrl
push
andb
mov
mov
fcomps
push
pop
push
inc
and
cmpsb
daa
dec
aaa
mov
repnz
mov
or
daa
inc
mov
mov
sarl
jne
push
sbb
fcoml
and
push
aam
ror
rclb
sbb
fcomip
or
int3
and
insb
movb
repnz
mov
repnz
adc
pusha
cltd
insl
fistl
cmpsb
clc
jecxz
mov
movsl
outsl
mov
jo
inc
and
ljmp
pop
sub
cwtl
es
cmp
jecxz
push
adc
rolb
cmp
stos
jae
pusha
lock
pop
pop
fdivl
repnz
addr16
jl
pop
cld
icebp
addr16
arpl
lods
cmpl
stc
xor
nop
scas
or
push
or
xor
hlt
lret
js
jbe
cmpsl
popa
je
cmp
and
sti
popa
push
inc
ret
xor
push
dec
adc
jge
push
loope
jecxz
lret
imul
sbb
jae
nop
inc
jp
sbb
xchg
add
mov
sub
mov
into
stos
dec
bound
outsl
push
out
int
je
mov
out
lds
and
mov
cltd
mov
push
out
add
adc
push
adc
andl
mov
mov
aaa
and
xor
pusha
push
add
push
imul
jno
adc
pop
mov
ljmp
int
mov
pop
stos
cmpsb
addl
mov
cltd
fwait
mov
rolb
mov
xor
jmp
inc
insl
mov
xchg
inc
mov
lahf
loopne
mov
out
popl
mov
jmp
les
dec
inc
cwtl
lahf
mov
push
mov
cmc
aad
mov
push
dec
scas
lea
enter
jne
movsb
jg
or
pop
cmp
push
lods
aad
xor
adc
mov
mov
das
xor
push
add
xor
je
jne
shlb
jnp
jbe
xor
or
add
mov
in
test
push
pop
mov
leave
fisttpl
aam
mov
vmptrld
or
js
xchg
cmp
pop
mov
pop
or
stos
inc
push
sarl
adc
and
mov
xor
lahf
out
pop
cltd
ljmp
ljmp
pusha
and
mov
mov
fbstp
cmp
aad
dec
sbb
cmpsb
xor
ds
ss
jne
inc
mov
daa
pop
popa
cmp
inc
push
hlt
mov
push
cld
filds
mov
sbb
out
xchg
repnz
xchg
xchg
imul
insl
add
aas
cld
push
sub
ret
repnz
add
push
jle
push
mov
lock
outsb
and
andb
cwtl
out
inc
ret
cmpsb
pop
or
ds
mov
in
fstps
adc
inc
jecxz
insb
jp
sarb
adc
mov
cmp
movsl
stos
add
arpl
xor
or
and
sti
cmp
jecxz
xor
xlat
test
leave
xor
imul
adcl
fsubrl
cwtl
into
mov
sub
dec
jg
out
inc
ja
mov
pusha
mov
loop
xchg
or
xor
cmpsl
aad
xor
lcall
jge
icebp
and
rorl
jmp
lret
pop
mov
mulb
xor
movsb
mov
jg
sbb
fwait
ljmp
pushl
cmpsb
jge
mov
sbb
add
loop
mov
shll
push
es
pop
ret
add
mov
pop
xchg
sbb
and
out
imul
mov
xchg
pushf
inc
mov
imul
sub
push
lret
push
mov
jb
dec
lret
push
pop
sub
shrl
push
js
fisttpll
mov
mov
jb
push
das
shlb
sub
inc
dec
outsb
int3
cltd
add
mov
fmulp
dec
repz
xor
stos
cltd
mov
sbb
xorl
xor
roll
dec
fmull
into
xchg
xor
dec
inc
push
xchg
subb
loope
cli
out
mov
fildl
cmpsb
fists
push
and
out
jl
jmp
cmp
push
repz
lock
lret
lds
push
jg
imul
mov
in
adc
notl
jmp
sub
mov
cwtl
push
in
leave
push
mov
popf
je
jl
daa
mov
pop
or
dec
jbe
xlat
mov
cmp
je
in
das
jle
push
jns
mov
adc
jbe
xchg
pop
lock
push
mov
ffreep
cmpsb
cli
lods
mov
sub
std
xchg
outsl
loopne
lods
inc
je
pop
push
popf
dec
xor
test
fstp
cmc
inc
aas
ficoml
ljmp
cmp
clc
out
nop
es
jmp
mov
lea
stos
cmc
mov
mov
insl
cmp
popf
iret
adc
es
adc
pushf
call
inc
test
ficompl
dec
xchg
mov
jge
or
jge
pop
xor
sbb
out
imul
inc
movsb
js
or
jmp
dec
sub
xchg
push
mov
push
loop
and
push
fistl
adc
xor
and
mov
push
imul
xor
mov
dec
mov
cmp
out
jg
sub
mov
ss
pop
sub
stos
xor
xor
addb
jmp
mov
pop
dec
aad
adc
mov
cmp
pop
divb
insl
ljmp
inc
push
jae
insb
cli
call
mov
stc
sbb
mov
arpl
cmp
mov
rcr
and
rorl
out
das
or
int3
test
mov
sbb
push
jmp
loop
or
sbb
iret
out
cmp
fstpt
sarb
je
mov
inc
loop
daa
jns
loop
push
stos
adc
sbb
lock
mov
push
iret
push
add
add
or
or
or
pandn
ss
sub
mov
pushf
aaa
sub
mov
mov
int
repnz
adc
sbb
scas
fcompl
test
rol
clc
xchg
adc
mov
lock
pop
mov
mov
mov
push
sahf
sti
enter
mov
dec
fdiv
ret
cmp
bound
or
out
iret
xlat
stc
pop
shll
push
clc
xchg
xchg
in
xchg
es
jnp
cmp
pop
ret
or
mov
mov
aas
mov
lret
push
lock
adc
add
imul
sub
psubq
cli
fidivrs
add
add
xchg
mov
push
cmpsl
inc
push
mov
imul
mov
sub
aam
xor
add
jnp
sbb
dec
dec
dec
scas
add
daa
jge
mov
leave
mov
mov
lret
popa
adc
aaa
inc
js
jae
shl
cmp
add
ds
lret
scas
push
and
or
xchg
push
mov
inc
arpl
stos
mov
jae
cltd
sbb
push
pop
mov
jmp
loope
ljmp
jge
pushf
pusha
add
loop
int
pop
repnz
adc
gs
pop
pop
repz
mov
arpl
shr
mov
dec
xor
int3
lret
inc
add
das
int
mov
sbb
mov
jnp
mov
movsb
hlt
pop
cwtl
dec
dec
es
bound
xlat
or
popl
arpl
cli
xchg
pusha
sahf
push
xchg
and
fcmovnb
in
leave
arpl
inc
or
or
sbb
xchg
sub
outsl
rcrl
adc
and
mov
xchg
int
xor
and
lods
push
je
jne
repz
xchg
mov
pop
dec
adc
jmp
jg
test
in
sub
cwtl
jbe
sbb
push
cltd
movsl
mov
cld
js
jg
pop
pop
imull
or
sub
movsl
pop
or
adc
cmp
sbb
mov
cmpsl
enter
insl
and
stos
mov
or
pop
fiaddl
popa
cld
cmp
or
push
cmp
cmp
jp
shll
jne
mov
movq
nop
popf
jo
push
xor
mov
cli
xchg
gs
scas
lods
pop
in
fcoml
sub
push
nop
xor
push
push
lds
dec
adc
cmp
enter
mov
sbb
push
fnsave
push
enter
movsl
outsb
mov
fcmovnbe
mov
push
push
insb
out
mov
and
mov
aad
hlt
mov
repnz
mov
push
rclb
xchg
jnp
add
lcall
lcall
add
insb
ret
sbb
fsubl
add
scas
mov
in
or
test
daa
cwtl
add
ror
dec
pop
sub
push
mov
jae
jmp
dec
clc
cmp
xor
cmp
mov
sub
sbb
pop
lods
leave
pop
int
add
adc
xchg
enter
rorl
imul
sbb
jp
pop
nop
jmp
dec
fimuls
pmulhuw
add
sub
adc
pop
ss
mov
pop
andb
push
cs
outsl
jl
lcall
adc
call
aam
cmp
hlt
add
inc
pop
adc
jae
mov
mov
mov
mov
and
inc
sahf
push
test
je
add
or
stos
cwtl
lcall
mov
arpl
call
negl
in
mov
movsb
lea
pop
and
mov
mov
mov
aaa
mov
jmp
test
mov
pop
arpl
mov
dec
adc
add
adc
int3
addr16
jle
out
ja
icebp
push
xchg
mov
negb
shll
cmp
inc
mov
cltd
sbb
cmp
cmpb
mov
xchg
xlat
jno
je
jns
into
mov
push
sbb
divl
fisubrs
arpl
pop
sub
cli
icebp
fdiv
pop
sbb
rep
mov
testl
and
push
xchg
imul
push
inc
lahf
aaa
jle
pop
push
out
out
sub
repz
gs
jge
daa
push
inc
cmp
addl
bound
jl
imul
pop
mov
xorl
cmpsb
orl
inc
les
sub
inc
push
sti
cmp
ret
and
or
arpl
rorl
cld
in
fistpl
add
in
mov
push
fistps
pop
pop
or
fistps
stc
movsl
adc
lcall
ficomps
xor
adc
incl
xchg
stos
adc
mov
ret
movsb
dec
push
imul
add
rcrl
mov
cmp
subb
shlb
mov
rorb
les
nop
fs
push
adc
dec
or
das
mov
mov
sub
mov
inc
ds
add
xchg
adc
rcll
in
mov
pushf
lahf
mov
orl
call
jl
test
pcmpgtw
mov
pop
andl
imul
mov
mov
je
into
dec
inc
mov
ret
or
pop
jp
shlb
mov
mov
jns
or
jp
and
mov
mov
xlat
scas
xchg
shll
push
xor
jmp
adc
mov
inc
lret
rolb
push
xor
out
push
pop
fdivrl
add
fwait
xchg
pop
sbb
and
fldt
pop
xor
or
sub
imul
mov
inc
jl
pop
cmp
sahf
shll
hlt
xchg
dec
rol
and
inc
jb
fidivrl
push
leave
sbb
movsl
aam
cld
jbe
repnz
push
or
and
or
test
push
shl
jecxz
outsb
or
sahf
xor
test
lock
mov
jle
hlt
xor
lret
dec
movsb
mov
mov
movsl
sbb
sub
mov
test
push
out
inc
lahf
adc
dec
dec
pop
xor
push
clc
ret
je
push
dec
fisubs
shlb
dec
pop
js
mov
jb
in
movsl
and
es
lret
push
mov
jb
ljmp
mov
xchg
jmp
xor
pop
ret
dec
js
sbb
cmpsl
sub
sbb
or
xor
test
sub
jg
in
sbb
inc
sub
call
sbbb
sbb
or
adc
out
cmp
push
dec
or
shll
xchg
fidivrl
dec
dec
inc
mov
push
inc
add
push
jne
shll
out
mov
not
mov
mov
dec
pop
xchg
pop
add
nop
outsb
sti
fidivs
imul
cwtl
mov
or
jno
cli
aas
loope
pop
js
test
lds
mov
jl
loop
xchg
jno
repz
mov
lods
mov
fidivrl
jo
or
aam
jbe
xchg
inc
stos
or
loopne
add
add
mov
push
xor
mov
dec
pop
iret
int3
ret
add
mov
test
mov
pop
rcll
jb
fwait
lock
cwtl
dec
xchg
ret
add
mov
dec
fadds
and
loop
iret
orl
and
or
gs
push
add
shll
mov
insb
inc
pushf
mov
fwait
shr
fldl
jle
das
add
ret
mov
push
int
rclb
out
daa
dec
pop
cld
aad
mov
xor
mov
cltd
movsb
hlt
lcall
push
call
xchg
pop
pop
outsl
jno
mov
imul
xorb
mov
mov
pop
mov
je
cmp
xchg
pusha
xchg
cs
and
dec
int
cli
and
aas
jne
mov
and
sbb
aaa
test
test
xor
jmp
inc
popa
jo
xchg
int
fidivs
jge
xor
push
mov
mov
in
mov
outsl
test
out
fsubrl
loop
xor
and
lods
lcall
test
rcl
sbbb
imul
iret
xchg
fsubs
xor
jge
add
sbb
call
mov
dec
mov
clc
add
in
jno
xchg
fiadds
arpl
inc
jne
fs
aam
fdivl
fcmovnbe
stos
lods
mov
outsb
ja
xchg
and
jecxz
out
cltd
pop
faddl
in
bound
jge
pop
mov
dec
mov
push
jle
push
lea
lret
aam
pop
adc
sarb
sahf
insl
call
xor
mov
js
test
cmp
and
jne
push
sub
cmp
jecxz
pop
push
fildl
in
and
jbe
repz
adc
ret
mov
sub
xor
or
rep
add
xor
sbb
cmpb
arpl
jle
lock
nop
add
xor
rorb
lahf
mov
mov
sbb
inc
jnp
pop
es
int
aam
out
dec
out
daa
pushf
cmp
pop
cmpsb
sub
das
movsb
cmc
clc
mov
in
stc
jo
push
adc
paddusb
sbb
xor
stos
loope,pn
or
xor
sub
sbb
outsl
pushf
inc
mov
adc
add
or
pop
popa
stos
mov
ret
divl
cmp
iret
std
pusha
lock
pop
or
adc
mov
jbe
inc
jecxz
push
add
ljmp
or
mov
sub
push
xorb
add
dec
push
jne
dec
push
mov
pop
popa
rclb
add
ss
xlat
mov
push
test
imul
test
push
ret
pop
xlat
test
xchg
pop
sub
mov
and
add
cmpsl
inc
fbld
outsb
rcll
jp
jle
or
int
jbe
mov
jge
jb
add
push
aaa
loopne
rcll
xor
decl
leave
jno
es
fcmovu
dec
xor
xor
sarl
and
popf
ret
pop
mov
xor
inc
aaa
movb
adc
cmpsb
jae
sub
call
mov
int
es
mov
jbe
stc
xrelease
xchg
imulb
imul
xchg
fsubs
lods
cmc
lcall
inc
js
fidivrl
daa
push
sahf
or
aas
jbe
pop
popf
mov
push
clc
icebp
aas
repz
imul
sub
scas
push
jge
or
sbb
mov
call
jnp
xchg
pusha
aad
push
pushf
sub
add
out
fwait
aad
adc
scas
dec
push
jmp
jne
inc
push
lret
shll
adc
fwait
adc
pop
aam
leave
xchg
lock
sub
mov
out
mov
mov
div
pop
stos
sbb
test
inc
push
loope
ss
imul
popa
sbb
gs
xchg
cmc
jnp
add
cmpsb
hlt
scas
dec
and
pand
lcall
and
dec
inc
addr16
repz
mov
fiaddl
jns
push
enter
cmp
xchg
jmp
dec
adc
fcom
push
mov
fsubl
pop
lcall
or
add
push
xchg
aas
ja
cwtl
jecxz
call
ljmp
mov
sub
add
std
xchg
dec
jmp
repnz
shll
aaa
sub
arpl
rcr
xchg
jmp
sbb
sbb
sbb
cmp
adc
mov
mov
stc
push
dec
out
pop
outsl
cmp
mov
iret
mov
pop
call
and
scas
lds
pop
dec
icebp
push
fadds
mov
clc
mov
fnsave
pop
movsb
cmpsl
fimuls
mov
into
push
in
cmp
insb
cmp
sbb
insb
ja
movsb
les
pop
push
and
outsl
mov
pop
adc
jb
movsl
mov
aam
push
xchg
inc
mov
jno
fiaddl
mov
out
or
push
pop
stos
out
pop
int
stos
das
lret
les
je
fildll
or
add
lahf
lods
ds
in
xchg
lods
jg
pusha
push
and
ficoml
test
push
call
and
and
dec
mov
inc
lock
jbe
xchg
push
sub
xor
adc
push
mov
je
sbb
jmp
pop
stos
mov
lock
add
xor
mov
aad
or
sub
add
and
dec
loop
push
inc
inc
cmp
xor
mov
imul
stc
icebp
std
sbbb
dec
imul
lret
dec
notl
jmp
cmp
jbe
test
shr
ljmp
mov
mov
or
xor
mov
je
inc
pop
cmpl
dec
and
out
mov
lea
mov
pop
mov
daa
sbb
sbb
out
scas
stc
mov
mov
in
push
faddp
out
adc
xchg
fdivrs
pop
push
adc
inc
mov
add
sar
xchg
sarl
mov
faddp
push
lods
jmp
lods
and
outsb
or
mov
jns
push
cltd
jg
cli
push
je
nop
fisubs
pop
or
xor
mov
jg
cld
aad
cmp
dec
add
add
xor
ss
popf
popa
sbb
adc
add
push
or
sahf
push
xchg
cltd
mov
xchg
lcall
outsl
push
sbb
dec
add
push
test
arpl
and
iret
inc
xor
movsl
cld
and
sub
mov
imul
or
ret
lahf
jmp
xchg
adc
xchg
movsl
mov
mov
xchg
in
adc
ret
pop
jp
iret
pop
das
jns
lahf
out
fwait
push
in
hlt
fdivrs
pop
incl
add
outsb
shlb
push
loop
mov
pop
jmp
sub
push
fisttpll
test
dec
jne
inc
inc
push
xchg
popf
fdivrs
in
mov
or
dec
int3
lcall
jge
jnp
xor
mov
sbb
lret
rcl
dec
cmp
push
dec
cmpsb
mov
ret
push
iret
cwtl
js
xchg
leave
popf
mov
xchg
xchg
mov
fstps
popf
ret
push
movsb
jge
cmp
mov
jbe
mov
pushf
mov
jae
jg
cmp
mov
pop
cmpsb
fcomp
inc
mov
add
mov
jb
bound
int
aaa
fstpt
faddl
fdivl
xchg
xor
or
lret
mov
xchg
xor
call
mov
pop
lret
sub
adc
inc
mov
push
fsts
jge
fwait
test
outsb
loope
loope
lods
inc
or
data16
stos
mov
sbb
lea
cmp
lcall
push
jo
sti
cmpl
dec
cwtl
or
jge
mov
inc
ficoms
xchg
pop
sahf
mov
xor
call
mov
pop
movsb
pop
dec
add
or
pop
cld
mov
xor
ss
ljmp
pop
sub
inc
out
jg
mov
scas
jo
mov
lea
aas
xchg
cli
and
cmpsl
inc
dec
in
inc
jle
sbb
popf
jge
mov
mov
lret
les
mov
das
push
fstps
sbb
in
adc
imul
mov
sub
insl
test
mov
orl
lods
sub
add
popa
push
mov
jno
mov
xchg
pop
adc
mov
sub
sub
inc
rcrb
push
sub
daa
sti
inc
mov
gs
lret
loope
jmp
stc
jns
push
sub
cmp
movb
into
inc
data16
lea
lcall
orb
push
push
dec
dec
xchg
nop
or
nop
xor
lret
shlb
es
sbb
loopne
loope
mov
pop
cli
adc
fisubs
pusha
or
jnp
ljmp
cmp
pop
fwait
int3
xchg
and
cmp
sbb
or
in
adc
xor
in
icebp
push
fwait
mov
xchg
out
lock
add
aaa
jl
jl
sbb
mov
push
add
add
dec
ja
test
sub
adc
outsb
enter
inc
cltd
lds
daa
test
jecxz
push
pop
in
push
addl
das
cmp
lea
loop
adc
sbb
xchg
das
sub
push
add
movsb
or
fisttps
loop
test
stos
jmp
leave
adc
cmp
movsb
ds
cltd
sub
sub
iret
hlt
push
sub
sub
push
push
imul
inc
inc
outsb
adc
xchg
jmp
jae
out
sahf
mov
lahf
int
xchg
icebp
sbb
jns
xchg
mov
sub
sahf
ljmp
fmulp
mov
add
sub
ret
fucompp
jb
push
jl
enter
inc
xor
sahf
xor
cltd
mov
xchg
and
add
xchg
lods
fwait
subb
and
mov
idiv
dec
std
xor
mov
loope
dec
dec
std
data16
pop
inc
mov
leave
push
std
sbb
into
dec
sti
add
lds
bnd
xlat
das
outsl
dec
pop
insb
xor
int
push
jl
and
ja
aas
pushf
jg
push
sub
sbb
gs
pop
inc
in
test
pusha
xor
lcall
in
out
ljmp
sub
das
xlat
mov
das
or
bound
lds
sti
or
mov
inc
sub
loope
ja
push
rcll
sbbb
call
jecxz
insl
or
repz
imul
xor
movsb
and
cld
ret
mov
movsl
adcb
rorl
jbe
lret
mov
inc
rolb
pop
lods
rorb
xor
ficoms
ljmp
fs
call
mov
out
inc
cmpsl
or
or
adc
mov
push
dec
stc
dec
fs
and
xor
out
divl
mov
dec
data16
cmp
jecxz
cmp
dec
dec
cmp
les
or
inc
test
cmovp
fcmovb
push
and
add
sbb
sbb
pop
and
leave
push
arpl
mov
mov
cmc
mov
loope
rclb
into
fsubl
push
mov
ljmp
push
mov
outsb
or
mov
add
push
mov
add
pop
fistl
iret
jnp
ss
ja
sub
outsb
jge
sbb
movsl
sarb
sub
xor
fcoms
outsl
rorb
xor
pop
lret
ljmp
pop
lret
scas
or
les
push
cmp
mov
arpl
cmp
call
pop
sub
out
rcl
lcall
push
adc
jp
and
aad
push
mov
ljmp
xorb
xor
push
mov
or
adc
pop
test
jecxz
js
sbb
int3
sahf
mov
and
cmpsl
cmc
insl
imul
lds
and
rcll
xor
insb
dec
fildll
hlt
imul
mov
and
shll
cwtl
mov
mov
or
push
pop
insb
jp
lahf
mov
aaa
jp
xchg
mov
mov
js
inc
cmp
push
outsb
dec
jge
leave
jnp
insb
sbb
sti
test
pop
or
adc
test
dec
test
fwait
stos
int
mov
jecxz
ds
and
mov
movsl
test
or
and
lea
cmc
sub
pop
sbb
cld
adc
cmp
cmp
loop
rorb
rorl
aam
pop
ret
scas
mov
add
daa
xchg
lret
out
shlb
nop
sbb
mov
gs
xchg
jae
inc
and
pop
add
jbe
pop
or
jnp
insb
dec
or
shrl
movzwl
mov
out
cmpsb
jae
push
sub
mov
out
sbb
cmc
test
into
mov
inc
stc
fucomp
push
into
fistpll
out
fdivl
mov
nop
push
mov
sub
push
mov
repnz
xchg
adc
xor
inc
sahf
inc
mov
in
roll
out
ljmp
mov
add
push
pop
shlb
xor
std
enter
xlat
add
test
out
lret
mov
scas
jl
xor
sbb
pop
or
jg
mov
fildl
adc
fstps
rolb
ret
insl
push
loop
mov
outsb
cltd
mov
xor
cmp
add
in
add
das
add
dec
jecxz
mov
sbb
xor
and
loop
loop
outsl
push
jle
es
xor
add
dec
sub
xor
std
lret
xchg
movups
cmp
mov
imul
mov
pop
call
shll
lea
fnstcw
cmpsb
pop
or
inc
jle
in
inc
add
xchg
jne
sbb
push
xor
add
inc
ficoms
popa
and
mov
add
mov
mov
iret
lea
push
pop
sbb
ret
sahf
ret
out
or
daa
inc
popf
pop
aas
faddl
repz
fwait
inc
or
iret
stos
xchg
dec
or
ja
setp
icebp
fwait
dec
in
je
mov
xchg
cmp
stos
sub
test
inc
sub
test
add
loopne
stc
sbb
test
clc
lret
js
inc
xchg
dec
dec
mov
and
and
mov
lahf
in
test
push
cmp
add
mov
xlat
jne
lods
mov
loopne
adc
dec
mov
mov
inc
leave
scas
roll
pop
sarb
cltd
fcmovnbe
adc
gs
dec
lock
pop
xor
and
xchg
push
jmp
push
sbb
mov
mov
out
data16
das
rcl
cltd
jne
dec
mov
arpl
stos
pop
mov
cs
lcall
inc
mov
mov
mov
dec
xor
rclb
lahf
mov
sbb
out
lea
xchg
and
bound
lahf
sub
cmp
mov
mov
mov
int
stos
jmp
incl
popf
out
sub
add
mov
sbb
lcall
cs
pop
sahf
insb
je
adc
out
jne
cltd
movsb
or
les
in
aad
add
sti
in
int
or
sarl
scas
out
adc
jno
push
cmp
cwtl
sbb
rcll
cmp
and
dec
and
lahf
xor
stos
orb
xchg
dec
insl
sbb
xchg
jnp
mov
jge
lret
out
adc
test
aam
out
shll
mov
or
and
cmp
cmp
les
and
fmuls
movsb
icebp
in
sbb
outsl
pop
sbb
movsl
pop
mov
mov
aas
add
imul
nop
pop
pop
and
add
adc
pop
hlt
xor
clc
test
rcl
push
scas
in
jae
scas
ja
sbb
lcall
xchg
sbb
aam
or
cmpsl
nop
scas
imull
int3
flds
popa
lods
je
enter
xor
sti
jecxz
cmp
int
cmp
imul
fistps
add
mov
inc
cmpb
sbb
test
fcmovnb
pop
push
mov
rcr
xchg
add
xchg
out
shlb
sub
js
mov
adc
or
pop
std
mov
and
addr16
add
cmovae
dec
lea
jecxz
loop
mov
lods
popf
filds
dec
iret
add
push
out
xor
fdiv
lods
das
mov
add
imul
mov
fs
push
les
pop
aam
outsb
pop
js
and
inc
lahf
xor
cmpl
andb
or
dec
push
pusha
xchg
push
nop
pop
jmp
loop
popa
push
and
or
jb
rorb
outsb
addl
dec
fistpll
cmc
stc
popa
inc
xchg
dec
cmp
jecxz
ret
cmpsb
orb
mov
adc
inc
stos
mov
fistl
insl
mov
cmc
jecxz
insb
and
nop
stos
arpl
jbe
insl
popf
sub
add
cs
loop
jne
push
push
and
lods
icebp
mov
mov
ja
xor
subb
jle
mov
dec
inc
js
jbe
ficomps
fsts
sub
roll
sti
lds
imul
lret
mov
jne
pop
lods
dec
push
inc
inc
mov
out
popa
sbb
mov
leave
loope
push
gs
push
xlat
jnp
cs
fsin
dec
cmc
push
cmp
jne
add
xchg
push
pop
lcall
sbb
pop
inc
cmp
and
and
popf
shlb
inc
inc
cwtl
fldl
dec
test
inc
scas
inc
leave
pop
mov
repz
loope
lea
stos
mov
pop
add
jbe
mov
push
push
mov
ret
or
test
sub
ds
cmpb
push
xchg
adc
int3
aad
outsl
or
pop
pop
call
leave
lret
sub
pop
mov
in
add
inc
mov
jne
mov
ret
mov
pop
mov
adc
jb
push
xor
loope
and
mov
cltd
xchg
daa
aad
lock
or
dec
cmp
js
ret
ds
repnz
xchg
xchg
mov
into
cmpsl
popa
cmc
xor
ret
insb
cld
fsubrp
das
sbb
push
hlt
inc
xchg
sbb
stos
int
inc
mov
in
or
and
stc
and
mov
ss
arpl
test
add
movsb
mov
sub
inc
aas
or
cwtl
push
sub
mov
cmpsb
jnp
xor
popf
mov
push
and
mov
sub
pusha
lret
stc
jg
sub
int
mov
scas
loop
or
movsl
push
push
mov
fcompl
mov
push
loop
mov
xchg
fsubrs
mov
push
iret
scas
sub
dec
fsubl
mov
jg
ja
or
and
dec
push
mov
insl
into
inc
or
shl
dec
pop
scas
das
aad
sti
mov
out
enter
fwait
xchg
adc
cld
in
es
xchg
mov
ss
fcomps
inc
xor
jmp
push
push
sub
push
cmpsb
hlt
fildl
cld
fadds
sub
loop
mov
out
sub
lods
mov
fsubrl
jl
adc
push
dec
insl
cmp
dec
test
fwait
rolb
pop
adc
imul
xchg
addr16
push
lods
cmp
jno
addr16
inc
jecxz
jbe
dec
pop
push
mov
arpl
aaa
fimuls
lret
push
or
pop
mov
jg
mov
push
fdivs
or
pop
movsl
add
cwtl
arpl
pushf
ret
movb
mov
test
jecxz
and
je
fs
mov
pop
out
mov
jge
stos
add
lahf
mov
jge
repnz
adcb
cmpb
mov
xchg
dec
ror
repz
xchg
sub
leave
loop
in
clc
add
ret
and
pusha
ljmp
inc
mov
fadd
fstl
sub
ret
shl
out
lea
aad
xchg
insb
pusha
mov
lret
inc
scas
push
cmpsb
lds
xor
insb
inc
loope
inc
fldenv
pop
fstpt
mov
mov
int3
out
push
adc
or
mov
lret
movsb
jl
jmp
out
add
ret
add
std
xchg
xor
mov
and
xchg
ljmp
outsl
dec
aas
lret
push
inc
test
inc
dec
dec
aam
mov
mov
dec
int3
pop
inc
das
cmp
adc
leave
dec
cmp
outsl
dec
movsb
and
mov
cwtl
sahf
pop
shlb
xor
nop
push
add
popa
pop
mov
mov
inc
js
fsubs
dec
jo
or
pop
or
fwait
mov
out
addb
rcl
adc
mov
mov
outsl
and
popf
test
shll
iret
and
test
rorl
mov
rcr
pop
jp
outsb
pusha
popf
mov
xchg
into
adc
push
and
jno
add
or
aad
pop
dec
jg
incb
xor
xor
sbb
sub
popl
popl
daa
sub
xor
pop
out
adc
inc
mov
jle
loopne
jno
cmc
gs
and
jnp
mov
lahf
mov
shl
dec
pushf
cmp
rorb
rcrb
cmp
insl
aam
sub
cmpsl
and
xchg
inc
pop
sbb
jno
push
fcomp
and
aad
fnstcw
and
fadd
lret
test
push
outsb
ret
xor
and
rcll
mov
push
in
pop
pop
add
hlt
xor
int3
ljmp
popa
lret
insb
aas
cmp
jbe
popa
pusha
pop
cmp
push
jle
ficoms
cmpsl
push
mov
andl
mov
xor
rcr
sbb
mov
rcll
filds
pop
shl
pop
iret
lahf
cmpsl
insl
pop
pop
cld
cmp
fwait
xchg
dec
shll
jle
xchg
cli
mov
and
mov
pop
cwtl
xchg
dec
push
xchg
int
cltd
cwtl
xor
cld
data16
leave
dec
push
fidivrl
xchg
jecxz,pn
sbb
int
and
and
aas
jecxz
inc
aaa
or
push
lret
or
push
cmc
and
negb
cmp
cmp
shl
iret
push
test
ds
daa
and
das
sbb
sbb
inc
sarl
push
mov
data16
arpl
lret
scas
sahf
repz
xchg
mov
cmpl
or
aas
aad
les
add
ret
mov
mov
lds
xor
sub
pop
loope
lock
xor
mov
pop
sbb
dec
lods
jge
nop
or
adc
adc
nop
mov
ljmp
and
pop
mov
hlt
lret
push
dec
mov
dec
inc
in
js
les
cmpsb
nop
mov
jp
ljmp
jg
decl
pop
out
or
cld
rorl
popa
stos
into
or
in
mov
inc
push
mov
push
mov
jne
and
adc
xor
push
jno
mov
push
xchg
inc
push
lock
adc
cli
or
movsl
push
push
jle
imull
and
jg
pop
inc
cmpsl
insb
fsts
fisubrl
out
aam
or
pop
mov
jno
adcl
sarb
pop
enter
sub
lret
mov
mov
mov
lea
sbb
in
addr16
pop
loope
inc
ret
aad
inc
sub
mov
out
sar
in
push
jge
inc
or
int3
mov
pop
inc
mov
and
jo
mov
mov
insl
test
icebp
out
mov
mov
icebp
xchg
dec
xor
mov
xor
inc
or
mov
pop
fcmovne
mov
and
mov
inc
mov
dec
rclb
lret
std
aas
push
pop
push
test
adc
sub
test
xchg
cmp
fnstenv
push
mov
inc
cltd
push
xor
mov
jl
push
mov
ret
shll
pop
mov
jb
dec
call
push
test
out
popa
jmp
xlat
insl
dec
cmpsl
aas
int
adcl
mov
daa
out
cwtl
daa
add
push
pop
mov
aaa
js
pusha
mov
jecxz
add
jmp
and
push
arpl
inc
repz
inc
mov
out
insl
gs
in
sbb
gs
fidivrs
sub
sbb
xor
shll
push
shr
mov
sbb
pop
push
dec
test
lds
loop
enter
xchg
xchg
repz
jnp
or
jle
mov
out
ret
std
pop
jbe
sub
add
sahf
push
icebp
lret
pop
mov
pushf
pop
mov
dec
sbb
sub
push
int
psadbw
test
fldl
sarb
mov
ds
shrb
dec
and
sbb
push
lods
insb
pop
push
xchg
nop
es
es
fwait
dec
mov
push
comiss
test
pop
mov
cltd
icebp
and
sbb
jp
or
cmc
pop
cmp
in
sbb
cmp
fadds
outsl
mov
lds
push
xlat
cmp
loop
push
into
aam
icebp
shll
lcall
rorl
mov
cs
outsl
mov
add
pop
mov
push
xchg
es
xor
iret
ja
andl
push
push
out
mov
movsb
sub
jb
arpl
jg
mov
scas
jle
aas
movsl
lcall
mov
xlat
xchg
and
dec
shrl
sbb
dec
call
mov
fwait
xchg
sarb
mov
sbb
insb
pop
fcomip
data16
mov
dec
sub
sub
shrb
daa
scas
in
dec
in
mov
in
push
jno
add
sub
outsb
cmp
mov
pop
jbe
mov
cmp
xchg
call
lods
cmpsb
lret
add
cld
es
sub
xor
lods
bswap
cmp
lock
fstp
dec
inc
xor
and
je
add
in
popa
xor
and
repnz
cmp
lock
mov
repz
sbb
push
rolb
sub
and
sub
popa
sbb
pusha
push
scas
or
js
lahf
ret
insl
push
movaps
xchg
xor
pusha
stos
lock
xchg
add
mov
test
ret
adc
lock
fucom
push
jb
mov
lock
push
mov
adc
nop
mov
pop
imul
in
jno
jne
dec
in
in
jg
mov
testb
add
filds
dec
inc
inc
dec
dec
push
mov
xchg
push
jge
ss
inc
push
test
xor
ss
loop
mov
lock
mov
pop
cltd
mov
mov
stos
push
enter
adc
jbe
mov
sti
cmc
scas
shrl
sbb
cwtl
xchg
xchg
sbb
and
cmp
jae
fisubl
jno
mov
xor
rcll
or
cmpsl
shll
mov
mov
dec
stos
xlat
xchg
xor
fwait
sbbl
mov
pop
or
daa
cwtl
xor
imul
sbb
ljmp
dec
xor
adcb
and
sub
xchg
cmp
and
mov
or
lret
mov
jl
lock
adc
mov
out
ljmp
pop
inc
movsl
xchg
jnp
faddl
lcall
fbstp
testb
jmp
cmp
mov
lock
testb
push
sub
dec
mov
mov
cmp
push
imul
sbbl
dec
cmp
lret
aas
cld
pushf
sbb
pop
nop
xchg
mov
cmp
popa
leave
mov
inc
test
loope
xor
stos
test
shlb
gs
mov
push
pop
pop
and
inc
adc
add
cltd
jp
adc
subl
dec
pushf
adc
pop
dec
lods
loope
ds
fnstenv
mov
shlb
je
xchg
push
lock
loop
stc
call
and
mov
bound
data16
jbe
add
fdivrs
sbb
leave
fistpl
push
scas
cmp
fcom
js
mov
jb
jge
inc
dec
or
out
inc
cltd
dec
mov
jmp
or
dec
mov
movsb
dec
sbb
rcl
inc
mov
nop
leave
and
cmpsb
mov
iret
bound
xorb
in
dec
cltd
and
xor
loope
inc
push
mov
dec
and
testb
sub
mov
xchg
scas
out
jo
adc
std
sub
repnz
push
loope
push
xchg
mov
pushf
push
jae
fistl
sti
inc
out
xor
mov
xchg
adc
mov
add
adc
andl
mov
jo
adc
mov
mov
mov
dec
lahf
ret
rorb
dec
outsl
out
loop
aas
rol
mov
pop
push
adc
nop
cmpsb
or
insl
xchg
jmp
test
or
test
popa
pop
insb
mov
popa
into
jg
adc
adc
cmp
adc
lods
mov
cmp
jns
push
insb
jecxz
in
cmp
test
mov
cwtl
or
and
into
es
in
adc
into
inc
sarl
cli
lcall
sub
push
call
or
mov
push
push
push
inc
mov
and
std
loope
add
jg
jge
inc
mov
xchg
dec
insl
mov
mov
scas
pop
lret
mov
das
daa
out
bound
xor
push
fwait
cmpsl
ja
lret
xchg
push
daa
arpl
add
sub
jne
lods
pop
ja
aaa
nop
jge
rolb
mov
push
jae
sbb
cmp
stos
fcoms
lods
rorl
mov
clc
lret
inc
push
icebp
cmp
cld
pop
out
out
jle
and
xor
dec
push
jae
push
mov
add
jecxz
sbb
and
mov
lods
jns
arpl
xor
push
push
inc
iret
xchg
lret
int3
scas
xor
xor
pop
xor
and
fildll
pushf
std
dec
xchg
ljmp
stos
jae
or
test
call
xchg
cmpsb
jo
mov
mov
dec
xchg
xchg
cmp
ficoms
adc
scas
es
xchg
repnz
pusha
lods
push
outsl
mov
mov
adcl
loop
sahf
push
add
aam
mov
jecxz
xchg
adc
and
xlat
add
pusha
scas
xchg
push
test
ret
inc
data16
sub
cld
pop
pop
ljmp
dec
loop
pop
mov
inc
arpl
pop
cmpsb
jb
fcomps
mov
mov
and
add
push
ret
data16
adc
inc
push
push
sarl
in
xor
mov
xlat
out
gs
loope
add
sub
pop
fmuls
cmp
or
push
push
sub
xor
sub
out
jl
push
push
fstl
addr16
in
test
xor
jb
mov
add
xchg
sahf
xchg
push
mov
aad
int
dec
jb
dec
inc
inc
sub
cmp
shl
jo
mov
adc
insb
push
cmc
rcl
pop
es
dec
jae
repnz
xor
or
dec
add
add
loopne
mov
clc
lret
xor
adc
mov
sbb
insb
dec
mov
rcrl
cs
and
jp
jle
lods
xlat
mov
mov
nop
sub
daa
mov
sbb
nop
sarl
pushf
mov
imul
xchg
outsb
mov
ljmp
add
xor
cs
jecxz
int
inc
in
inc
movsb
jae
cmc
sub
enter
fisubrl
inc
ret
outsb
rolb
in
fstpl
ljmp
mov
and
push
inc
mov
int3
adc
jne
add
jl
adc
mov
mov
fcomi
pop
iret
jmp
in
pop
in
lcall
adc
sub
lods
shrb
mov
xor
adc
jo
dec
scas
cs
adc
pusha
xchg
sub
sub
jle
or
adc
gs
imull
sbb
orl
fwait
pop
push
pop
add
lods
addr16
push
call
out
pop
sub
inc
mov
jno
bound
roll
incb
sti
data16
mov
push
xor
into
enter
xlat
adc
jbe
sub
adc
adc
sub
lea
jp
mov
clc
mov
and
ja
add
push
dec
cmp
movsb
jo
mov
pop
adc
fmull
sub
ret
xor
data16
sti
mov
stos
mov
cmp
and
mov
loopne
movb
fs
inc
mov
xchg
outsb
push
mov
xchg
push
bswap
mov
push
loopne
sbb
mov
jne
fstl
mov
jno
cmp
cs
xchg
inc
sbb
pop
xchg
push
adc
push
outsb
push
js
sub
xor
faddl
insb
mov
inc
out
inc
movsb
sub
movsl
ret
adc
pop
add
rcrb
jecxz
mov
in
aaa
in
pushf
or
mov
and
pop
repz
cmp
xrelease
push
fcmovb
inc
mov
ljmp
sbbb
push
mov
push
sub
in
sub
xchg
sub
shll
xchg
inc
enter
cmp
pop
jbe
fsubs
imul
enter
xchg
cmc
xor
mov
push
push
mov
fisttpl
sahf
dec
xchg
mov
xchg
adc
xor
enter
mov
xchg
clc
mov
sub
mov
addb
ljmp
ds
jl
jl
fidivl
mov
arpl
inc
dec
movsb
jecxz
fidivrs
sbb
mov
and
pop
mov
cmp
add
jge
aad
xchg
inc
dec
or
adc
loope
cmovnp
repnz
xor
sbb
or
int
hlt
mov
dec
sub
into
ja
aas
daa
push
out
adc
cmp
es
xor
push
icebp
xchg
inc
sbb
mov
jp
xchg
jno
repnz
mov
shlb
subl
int3
add
lea
rorb
fs
sbb
loop
rolb
sarl
and
sahf
adc
push
into
pop
aaa
enter
pusha
mov
sub
fs
mov
bound
sbbl
inc
pop
xchg
jmp
mov
xchg
pop
in
mov
pop
movsl
dec
and
mov
xor
loope
xor
cmc
cmpsl
xchg
jo
mov
push
pop
mov
push
ds
scas
push
lret
cmpsl
incb
scas
movsl
lahf
addr16
sbb
aad
sub
test
adc
loope
imul
call
rcrb
rol
xchg
out
sub
mov
adc
lods
test
arpl
pop
aaa
flds
add
stc
fisubrl
jne
out
test
dec
icebp
gs
sub
jae
mov
pop
sbb
inc
iret
in
hlt
xor
leave
testl
inc
xchg
into
ss
mov
and
ljmp
cs
add
icebp
mov
das
or
jo
jl
fwait
jns
out
xchg
aaa
jno
pop
pop
in
xchg
loop
ficoml
ret
lock
xchg
mov
inc
enter
aam
clc
dec
lock
insl
test
roll
push
out
leave
fisttpl
popa
pop
sub
pusha
push
sub
cld
popa
ljmp
shrl
inc
stc
aas
inc
pop
stos
fisttps
mov
xor
fsub
pop
push
dec
and
or
sbb
jae
mov
inc
out
dec
mov
push
mov
cld
pop
negl
scas
lods
dec
mov
call
addr16
insb
jae
push
or
loop,pn
iret
test
push
mov
inc
cmp
sbb
pushf
lahf
aam
jecxz
mov
dec
push
mov
xchg
or
dec
int
and
inc
push
xor
aas
push
orb
mov
jb
fwait
pop
out
mov
inc
movb
xor
test
sub
test
mov
push
pop
mov
cmc
pop
jle
xor
fiadds
icebp
pop
cmp
sbb
jmp
adc
xchg
inc
sbb
inc
lock
mov
mov
mov
test
jge
jbe
jmp
nop
idivl
je
rorl
mov
ljmp
jl
lret
fidivs
jne
nop
add
push
popa
imul
mov
dec
jmp
ljmp
stc
adc
jmp
jmp
movl
or
in
out
stc
sti
lret
jns
fisubrs
shlb
lea
out
sbb
iret
gs
mov
add
inc
mov
sbb
mov
test
mov
pop
sbb
outsl
mov
pusha
dec
icebp
fadds
mov
jl
xlat
iret
pop
data16
into
hlt
jmp
jae
mov
inc
xchg
sbb
mov
hlt
lods
xchg
ss
mov
nop
xchg
insb
icebp
in
loopne
inc
inc
div
sub
push
outsl
adc
cmp
leave
sub
inc
jno
add
push
int3
sahf
push
sbb
dec
push
in
and
sarb
data16
xchg
ss
adc
icebp
ss
jbe
movsb
pop
or
fwait
push
les
xchg
loop
hlt
pop
sbb
push
daa
movsl
test
lds
xor
mov
adc
aaa
test
jb
stos
out
ret
popf
jmp
push
dec
xor
cli
sbb
mov
leave
xchg
lahf
rclb
and
dec
nop
sti
fiaddl
stos
xchg
xor
mov
push
dec
jmp
xchg
dec
ss
lods
hlt
add
pop
adc
sub
lea
jmp
xchg
sub
mov
fdivs
jo
sub
mov
xor
leave
cs
dec
mov
pop
mov
clc
mov
xlat
orb
shlb
mov
mov
mov
movsb
es
and
add
push
test
mov
cltd
lret
or
jno
mov
ljmp
mov
sbb
push
mov
fstpl
inc
ret
cmpsl
push
out
dec
sub
adc
mov
lahf
je
xchg
jp
xchg
xchg
sub
test
aaa
iret
push
mov
add
out
orl
sub
test
or
mov
mov
sbb
dec
pusha
movsb
pop
cwtl
insl
jnp
in
fsubl
dec
jns
dec
adc
push
jbe
cmpsb
push
add
sbbl
jg
xchg
push
and
mov
cmpsl
push
or
fsts
jbe
sub
icebp
arpl
cmp
ds
dec
xchg
jl
or
sub
fidivrl
mull
push
in
das
aaa
loopne
ljmp
cmp
out
cmpsl
mov
call
int
xor
mov
daa
subb
push
and
fdivr
sub
jp
push
mov
mov
and
jg
aas
push
test
mov
jmp
add
imul
inc
or
sbb
aaa
or
mov
imul
pop
pop
loop
insl
lret
jg
xor
leave
mov
test
dec
mov
mov
mov
mov
in
push
lock
ja
pusha
mov
sarb
push
in
aaa
es
fwait
inc
int
int
push
pop
pop
cltd
xchg
adc
decl
pop
movsl
add
push
lea
xchg
add
bound
rep
add
cli
add
imul
ret
iret
scas
jmp
ss
inc
jl
mov
cmp
adc
jae
and
mov
dec
icebp
sub
ret
fwait
push
mov
inc
cld
and
aam
xchg
jae
mov
or
std
mov
dec
or
ja
icebp
push
jg
or
pop
jbe
fwait
inc
aaa
fcomps
or
gs
xorl
test
pop
lods
cmc
mov
add
mov
mov
test
push
fnstcw
int
or
add
sbb
js
pop
and
aaa
inc
es
xchg
insl
mov
movsb
push
lea
inc
pop
loop
pop
scas
jle
scas
mov
jge
jle
adc
inc
cltd
fnstsw
lock
data16
jno
cld
adc
nop
mov
data16
cmc
fisubs
clc
jbe
jmp
aad
cmp
icebp
repz
ret
dec
imul
inc
jmp
cli
and
js
lock
jp
subb
leave
cmp
fdivs
push
xchg
xlat
ret
test
mov
test
and
lods
cmp
inc
dec
ljmp
sti
fsubl
mov
lret
mov
icebp
lods
inc
sbb
push
jae
dec
push
inc
inc
and
sub
int
insl
push
icebp
pop
xchg
cmp
cmp
inc
pop
cmpb
jne
jne
push
pop
mov
out
test
int
inc
cmpsl
mov
cld
push
mov
hlt
divl
lds
aas
leave
jbe
inc
lds
mov
inc
xchg
mov
sbb
jb
mov
addr16
cmp
xchg
pop
mov
sbb
xchg
fnsetpm(287
adc
in
cmp
dec
pusha
pop
mov
jg,pt
int
sub
pop
jb
sbbl
shrl
pusha
loopne
mov
clc
inc
mov
nop
and
aas
dec
scas
jnp
loope
mov
push
les
xchg
sahf
cmp
xchg
or
out
cmp
push
sub
scas
push
xor
arpl
int3
shlb
cmpsb
mov
call
lds
lock
movsl
movsb
dec
jl
clc
add
mov
sbbb
jg
pop
jecxz
inc
mov
out
fwait
mov
mov
xor
push
lret
dec
loopne
add
arpl
stos
xchg
pop
xchg
push
xchg
int
adc
mov
add
xchg
xchg
push
dec
sti
lds
pop
add
adc
ret
sub
push
push
mov
out
das
popa
ret
jg
mov
loop
jae
out
push
xchg
clc
andb
jle
xchg
lret
xchg
xchg
movsb
aaa
mov
and
mov
ljmp
jae
dec
outsl
push
push
divb
pop
xchg
pop
fstpt
add
insl
mov
popf
stc
or
fs
xor
pop
jg
xor
jno
pop
mov
xlat
push
repnz
mov
add
xorb
stos
jo
mov
int
test
mov
data16
adc
push
sahf
mov
mov
cmc
dec
daa
jno
mov
adc
rcll
lret
sbb
or
or
adc
jmp
aas
xor
jno
iret
into
xchg
jb
and
incl
nop
xor
pop
or
mov
gs
pop
xchg
fs
pop
ret
mov
ss
add
mov
cmp
lret
mul
in
mov
sbb
les
xor
inc
jbe
inc
faddp
ficoms
mov
int
fildl
xor
jae
out
add
mov
dec
xor
add
xor
std
sahf
sti
cltd
push
pop
int3
aam
or
cmp
push
mov
in
or
cld
jo
cmp
lods
fmull
addr16
out
loopew
dec
imul
dec
insb
sub
in
inc
adc
arpl
mov
xor
fsub
faddl
xchg
ret
pop
cmp
inc
rorb
hlt
sbb
dec
sbb
ret
fcomi
arpl
hlt
adc
aam
push
stos
xchg
test
adc
push
push
ja
test
fmull
push
lret
scas
divb
cli
cmp
fiaddl
icebp
movsb
mul
xchg
mov
lods
movsl
xchg
cltd
lds
push
cmp
mov
xor
add
mov
xchg
or
pop
mov
ja
pop
out
or
addr16
iret
cmpsb
xchg
xor
outsl
arpl
movsb
shl
jnp
pop
xchg
and
adc
cmpb
sub
or
inc
test
test
scas
ja
lahf
or
stc
push
jg
add
jg
shr
fwait
push
test
jae
mov
outsb
outsl
lret
push
das
and
in
jmp
rcrl
aaa
mov
push
xor
xchg
add
movsl
inc
cwtl
push
scas
jle
rcll
sbb
pop
ror
les
jmp
push
addr16
sti
daa
push
cmp
adcl
dec
pop
aam
fadds
adc
repz
insb
or
pop
cmp
fsub
xchg
icebp
mov
xchg
aas
mov
jbe
inc
sub
cwtl
pop
fdivl
in
test
jns
fbstp
and
pop
push
dec
adc
add
jno
cmp
add
jecxz
adc
int3
leave
lret
es
xor
xor
mov
dec
mov
fnstsw
pusha
sar
mov
xchg
xor
les
mov
cld
mov
dec
dec
fcoml
push
xor
and
adc
repz
idivb
js
add
push
scas
mov
push
insl
mov
jecxz
leave
int
jp
jb
mov
int
mov
mov
clc
sub
ja
sub
xchg
inc
pop
xlat
fnsave
cmp
xchg
ds
out
or
sub
mov
mov
inc
in
out
sbb
pop
lods
stc
arpl
xchg
push
int
test
and
movsl
shrb
sbb
xchg
pop
fs
pop
daa
cmp
mov
shlb
out
pop
jge
xchg
ds
cld
mov
iret
xchg
pop
jp
xchg
test
xchg
ljmp
lock
cmp
into
jge
add
les
into
js
xchg
sbb
loop
xchg
test
arpl
repnz
jae
dec
inc
push
add
sbb
jne
pop
out
fcomip
or
scas
fcomps
movsl
test
sub
xor
push
lds
or
aam
mov
aad
inc
xor
and
adc
xchg
mov
mov
insb
mov
jo
mov
mov
in
and
fs
arpl
in
jae
repz
add
jmp
fmul
lret
inc
cmc
repz
and
xchg
enter
pop
jns,pn
xchg
lods
data16
mov
out
xor
sbbl
mov
pop
ljmp
jg
jge
outsl
xlat
in
adc
dec
mov
mov
nop
cwtl
xorl
divl
xchg
in
sub
mov
iret
xchg
iret
cs
mov
sub
sbb
popf
rep
mov
push
dec
mov
jmp
sbb
rolb
loope
dec
lds
in
pop
fistpl
mov
sub
or
push
rcrb
xchg
or
sbb
scas
pop
mov
popf
sbb
mov
push
test
xchg
lahf
jb
mov
fidivl
mov
test
cmp
xchg
dec
out
xchg
dec
and
pop
xchg
shr
mov
sub
fadd
mov
jno
xchg
out
push
jb
fbstp
mov
stos
jmp
aad
mov
iret
mov
nop
daa
cvtpi2ps
sbb
gs
ds
les
mov
or
mov
inc
data16
cwtl
ficomps
pushl
and
adc
movsl
mov
ret
stos
xor
adc
adc
xchg
movsb
es
sub
cli
push
mov
scas
sub
mov
jmp
mul
sub
out
cmc
gs
mov
ret
outsl
or
aas
push
push
in
daa
add
push
mov
inc
push
scas
cmp
mov
rclb
xchg
xchg
out
cmp
insb
push
lds
mov
pushl
xchg
test
jns
pushf
jno
jle
les
in
or
ljmp
fdivl
mov
sub
sbb
jp
sbb
cmp
inc
dec
add
ret
xorl
outsb
sub
jl
mulb
dec
or
mov
sub
jb
rcll
aam
stos
xor
or
add
hlt
movsl
jl
cwtl
cmp
mov
or
adc
sbb
mov
ret
mov
mov
ret
jno
lods
daa
or
into
xchg
mov
or
inc
cmp
ret
lret
jb
mov
gs
gs
and
adc
add
aas
repnz
pop
mov
mov
dec
fmull
mov
outsl
aas
cmpsb
pop
push
outsl
jno
jns
movsl
aad
cmp
loop
loopne
cmp
out
movsl
jle
mov
fldl
fadds
push
insl
aam
or
xchg
mov
mov
cltd
clc
repz
add
out
arpl
icebp
bound
lret
test
cltd
cmp
sarb
xor
dec
xchg
pop
out
push
pop
push
pop
cmpsb
and
in
jecxz
setle
lret
js
iret
fistpll
xorb
je
or
int3
ds
push
and
mov
adc
rol
notb
mov
pop
jge
mov
pop
into
sbb
xchg
shl
xchg
lret
outsl
inc
sbb
sbb
into
jl
fistpll
and
add
out
in
push
mov
sbb
in
roll
sti
xor
adc
adc
pushf
adc
fldenv
lods
movsb
xchg
pusha
scas
loopne
stos
outsb
add
cli
cmpsl
mov
imul
jns
sbbl
inc
js
inc
xor
pop
lahf
mov
jp
into
cmp
stc
je
jo
add
mov
test
xchg
inc
lds
insl
lock
imull
mov
dec
punpcklwd
sbbl
stos
mov
notb
jecxz
jns
out
in
sbb
std
sarb
cmp
stos
adc
xchg
pop
icebp
aaa
aam
pop
push
and
push
or
pop
push
add
xor
mov
inc
addb
adc
repz
mov
xor
aad
ret
fwait
push
cmpsb
add
pop
lods
dec
in
or
add
or
mov
int3
add
xor
fiaddl
sbb
mov
jns
push
xor
loop
lea
rolb
or
aas
movsb
push
and
divb
sub
scas
dec
sbb
add
out
mov
inc
test
dec
int
mov
and
imul
mov
sahf
xchg
sbb
ds
add
xor
pop
inc
sub
add
mov
mov
mov
aaa
sbb
sbb
lret
loopne
xchg
or
test
stos
in
ds
data16
jnp
test
stos
mov
xor
add
lds
aas
dec
shl
xor
clc
call
jnp
cli
mov
dec
int
test
jns
test
mov
popf
jle
lods
data16
xor
insb
sti
rolb
cltd
pop
jle
nop
jo
jbe
mul
stc
xchg
int3
scas
push
sub
inc
xchg
lods
pop
movsl
sub
add
sahf
lods
movsl
sbb
cld
shll
inc
cmp
pop
cmp
fisubl
inc
js
fdivs
pop
test
adc
iret
test
mov
or
jg
inc
lds
enter
shrl
and
icebp
or
xlat
jp
or
in
jns
inc
add
int3
sub
daa
push
dec
mov
inc
pop
push
in
shll
roll
pop
out
cmp
repnz
add
aas
push
mov
imull
mov
fmull
jle
lahf
sub
scas
push
add
ror
mov
icebp
mov
jns
into
stos
xchg
es
in
mov
xchg
out
lds
mov
xchg
fadds
mov
leave
pcmpeqb
hlt
mov
add
add
out
sub
mov
pop
mov
outsl
dec
sar
ret
bound
cmpsb
cmc
cwtl
gs
ja
shl
inc
add
stos
push
xchg
repnz
sub
iret
and
ds
test
mov
push
sbb
jo
mov
or
mov
sbb
add
pop
jmp
sub
jns
aaa
or
dec
das
pop
test
in
jecxz
mov
aad
out
pop
push
js
jge
sub
in
mov
pop
inc
inc
dec
cmp
jl
inc
and
lds
xchg
push
xchg
nop
and
mov
or
imul
xor
jnp
pop
movsl
pop
std
fnstenv
sbb
lods
push
mov
inc
pop
imul
lods
test
sbb
dec
stos
mov
inc
lcall
and
xchg
lret
sub
mov
xor
push
daa
insl
pop
jecxz
iret
out
fiaddl
sub
and
outsl
ljmp
movsb
adc
push
dec
xchg
mov
sbbb
sahf
cmp
fldenv
fadds
imul
sbb
pop
add
add
mov
xchg
insl
add
cld
inc
ror
and
push
andl
dec
mov
outsb
jae
mov
test
mov
imulb
jge
inc
fisubl
cmpsl
push
cmpsl
push
cmp
lret
cmp
jns
sbbb
xor
scas
pop
xor
push
ret
je
pop
inc
out
and
adc
movsb
or
sahf
aaa
sub
adc
pushf
and
mov
arpl
sub
cld
test
sbb
in
popa
lock
in
inc
in
rcrl
pop
mov
mov
inc
push
pop
jns
sub
cmp
sub
jmp
arpl
dec
push
inc
out
pushf
pusha
out
inc
xor
xchg
movsl
test
adc
mov
dec
xchg
incl
cmpsl
insb
pop
or
repnz
cs
cmp
cmp
cwtl
icebp
popf
gs
out
inc
lcall
add
push
ss
push
out
aaa
cmpsb
jl
stos
sub
adc
dec
jmp
sbb
pop
outsb
jmp
rclb
dec
or
test
cmp
mov
add
outsl
test
sbb
mov
mov
adcb
and
mov
outsb
mov
fcmove
mov
out
dec
adc
mov
fstp
mov
out
stos
or
pop
pop
ss
or
ljmp
out
push
push
aam
fbstp
insb
or
add
jb
cltd
and
test
fwait
adc
out
mov
push
and
cmp
jnp
adc
iret
sti
add
ja
ljmp
mov
aam
repz
sub
add
leave
cli
imul
mov
js
mov
jae
inc
or
sub
scas
fdiv
jge
test
push
imulb
ja
inc
inc
pushl
dec
dec
inc
mov
enter
and
cwtl
xchg
or
rcll
jge
xor
pusha
mov
insb
dec
adc
xchg
jne
jge
bound
pop
in
push
mov
add
hlt
loopne
aas
sbb
push
cli
xor
adc
mov
cmp
add
mov
imul
push
pop
and
dec
fcoml
call
jb
push
rorl
aad
add
inc
add
jge
bndldx
sti
loop
ljmp
repnz
rcr
insb
setl
cmp
lods
mov
mov
in
sti
imul
sbb
xor
sub
scas
push
sub
js
dec
push
xor
outsl
mov
mov
xor
lds
add
pop
movsl
dec
mov
add
dec
out
mov
cmp
xlat
int3
ret
mov
xchg
jae
and
imul
cmp
inc
into
sarl
mov
sub
lcall
loope
ret
add
mov
xor
push
xchg
loope
inc
cmp
cmpb
cs
dec
push
or
add
std
cmp
fwait
rorb
test
test
fcomip
das
into
popf
cli
ret
and
and
jb
cmpsb
jns
cmp
pop
jp
fistps
lods
sbb
adc
mov
out
xchg
jns
dec
sub
dec
push
cmp
sarl
cmp
test
test
and
inc
add
ret
inc
and
add
test
push
lcall
xor
fs
icebp
movaps
lcall
loop
jnp
and
fsubs
add
push
sbb
test
xor
inc
insb
jle
add
bound
iret
orb
aas
dec
bound
in
fisttps
adc
sub
aam
jmp
xor
xor
in
movsb
dec
mov
mov
jns
mov
dec
mov
mov
push
leave
arpl
dec
and
rcll
cmp
or
out
xchg
push
adc
mov
sbb
gs
imul
push
testl
rolb
sbb
pop
push
data16
jg
insl
cmp
inc
cmp
xchg
pop
adc
xor
add
mov
or
sbb
xchg
imul
ficomps
cs
add
dec
jnp
mov
lcall
in
jno
pop
mov
leave
dec
and
mov
loope
cld
sub
mov
jnp
cmc
xchg
ds
pop
jne
jae
test
leave
rclb
imul
jp
addr16
cmp
cltd
xchg
mov
sbb
adc
lret
setl
divb
sub
xchg
or
subl
rclb
repnz
mov
testl
pop
mov
cmp
pop
jg
push
inc
lock
mov
mov
into
jge
hlt
or
mov
hlt
mov
xor
addr16
add
mov
inc
pop
stos
add
adc
pop
lret
fldenv
pop
cmp
ja
insb
arpl
in
int3
mov
xchg
addb
fwait
and
orl
and
in
sub
jne
xchg
push
lods
popa
inc
ja
rolb
bound
pop
adcl
rorl
xor
dec
xorb
js
mov
ret
or
add
mov
lahf
cmpsb
ss
sub
jae
dec
aas
adc
jns
push
out
sti
inc
js
loopne
in
or
out
sahf
cmpsl
jno
out
pushfw
xchg
adc
sbb
jo
dec
lcall
orb
inc
inc
jle
in
dec
mov
jg
arpl
lods
dec
jp
add
ss
pop
jb
jo
lret
in
push
and
add
fcomps
je
mov
sub
push
cmp
nop
xchg
lds
push
fistl
mov
push
in
push
mov
ret
mov
mov
pop
jb
jbe
xor
outsb
je
mov
mov
daa
cmp
repnz
out
add
mov
and
cmp
inc
clc
xchg
xchg
dec
out
ret
xlat
lods
jo
mov
mov
push
cmp
loopne
push
insl
push
push
mov
sbb
add
testl
dec
dec
shrb
repz
jecxz
cmpsb
pop
inc
mov
fsubrl
fisttpl
enter
lahf
hlt
mov
sbb
test
je
gs
pop
and
push
cld
shrb
xchg
aaa
data16
mov
cmp
add
mov
pop
inc
imul
shll
push
lods
and
mov
fdivrs
cltd
out
mov
popf
out
xor
cmp
test
popf
inc
mov
std
cmp
into
jno
jb
fisttps
ret
aam
jns
ret
stos
xchg
push
mov
pop
adc
rcrb
push
incb
pop
je
xor
arpl
sub
popf
sbb
sbb
jp
ret
xchg
push
mov
mov
mov
arpl
cld
fwait
lock
or
mov
ret
rorb
lret
mov
jbe
pop
movsl
mov
sub
and
decb
and
push
cmc
and
and
rcrb
xor
push
xchg
cmpsl
aad
and
adc
stos
inc
data16
or
xchg
in
in
sbb
jbe
cwtl
push
popf
shl
hlt
scas
sti
lret
mov
inc
fneni(8087
cwtl
inc
ja
bound
push
mov
inc
xorb
xchg
insb
mov
cmpsb
mov
adc
int
xor
es
loopne
in
and
cmpb
out
in
mov
out
sti
icebp
xchg
mov
xor
loope
mov
test
pop
mov
cltd
inc
mov
scas
clc
or
sub
shlb
shrl
nop
jnp
jno
lret
xchg
sbb
aam
jnp
pop
in
into
cs
mov
xchg
push
hlt
adc
ds
pop
rcl
and
or
jmp
sbb
stos
push
popf
inc
gs
not
mull
setbe
mov
mov
nop
or
mov
nop
jae
fsubl
lea
lret
jb
cmc
pop
std
cs
sbb
or
pushf
xor
adc
adc
je
daa
sbb
pop
outsl
mov
cmpsl
and
jmp
adc
insl
mov
push
roll
push
fildll
mov
adc
in
mov
dec
in
xchg
insl
xchg
inc
push
adc
jo
mov
mov
imul
fs
push
inc
adc
sbb
add
cmpsb
push
add
fistl
pop
fiaddl
push
in
inc
push
fmull
push
inc
xchg
rolb
ret
mov
mov
fstpl
mov
clc
add
test
stc
xchg
sbb
or
sub
and
mov
std
cltd
mov
es
lret
lea
loope
or
cltd
icebp
sub
jno
jne
cs
ljmp
cmp
mov
pop
push
ret
rorl
sub
inc
jle
or
dec
test
outsb
inc
push
nop
or
fsub
jbe,pt
jle
clc
popf
inc
into
or
cmc
jb
sub
test
xor
ret
mov
loopne
rorb
and
dec
outsb
or
inc
jl
lret
sbb
fwait
ds
insb
xchg
pop
push
mov
ja
in
cwtl
xor
mov
lret
xor
sub
roll
lods
in
xchg
lcall
mov
inc
in
adc
xchg
or
fisttps
loop
mov
pop
test
adc
sub
mov
cmp
lds
scas
mov
lea
loop
push
inc
mov
or
jl
leave
popf
push
xchg
out
insb
addb
aas
into
mov
mov
out
sbb
xor
stos
or
aam
cmp
pushf
cwtl
inc
dec
mov
cli
iret
adc
mov
out
mov
xchg
sbb
fs
fcoms
or
push
sbbb
mov
or
mov
in
mov
add
cld
into
xlat
mov
mov
or
nop
aad
pop
popa
or
in
push
pmaxub
push
push
out
push
add
scas
jnp
test
enter
and
dec
sub
aad
stos
dec
xor
shll
pop
std
fs
mov
into
mov
shlb
dec
add
jge
lcall
jl
mov
mov
stc
mov
mov
lods
push
jecxz
and
fsubl
mov
popa
test
sub
enter
xor
or
cwtl
xchg
sbb
mov
sub
imul
std
data16
adcl
or
cli
sar
pop
cltd
es
ror
das
stos
sbb
mov
mov
ds
jecxz
inc
lea
lods
add
mov
shlb
mov
push
push
in
dec
mov
pusha
cmpsb
push
aad
das
xlat
repz
cwtl
rcl
daa
aad
add
dec
lahf
sbb
loop
inc
mov
imul
cld
int
test
xchg
mov
in
inc
jbe
xor
dec
shrl
cmpsb
mov
pop
sub
lods
push
bound
mov
push
into
scas
mov
inc
dec
and
jo
pop
push
imul
xchg
movsb
lods
cmp
and
sub
or
cmp
add
leave
jbe
mov
push
xor
test
xchg
lahf
cmp
inc
xor
pushf
shrl
jno
lahf
stc
cltd
push
aas
sbb
loop
mov
push
jno
pop
addr16
xor
mov
out
cmpsl
addr16
pop
outsl
enter
or
mov
iret
loop
add
cmp
lods
scas
shlb
cmpsl
sbb
push
aad
xchg
dec
jnp
push
out
adc
mov
into
dec
gs
imulb
mov
sub
mov
aad
stc
mov
sub
test
sbb
pop
and
insb
lock
stos
mov
lret
and
mov
repz
dec
fs
insb
fwait
imul
sahf
mov
imul
cli
cmp
test
outsb
stc
xor
cmpsb
cmpsl
xor
das
out
mov
mov
das
add
jo
cmp
in
or
jl
and
movsl
mov
push
pop
xchg
fdivrl
ret
mov
sbb
dec
divb
sarb
cmpsb
lock
and
xchg
sub
dec
mov
cmp
lcall
dec
mov
push
mov
cmpsl
mov
mov
test
pop
push
cs
jle,pt
adc
cmp
mov
add
add
inc
push
or
jo
mov
dec
push
addr16
cmp
andl
cmpsl
and
lods
scas
dec
mov
inc
leave
ss
mov
stc
and
das
ret
mov
jg
rol
jo
ljmp
stos
sub
cmp
xor
jp
mov
ja
jnp
es
xorl
adc
xor
xchg
fcompp
and
mov
mov
aaa
stos
sbbl
movsb
je
arpl
jge
dec
sub
in
jl
sub
gs
inc
mov
aas
sbb
xchg
js
cltd
mov
cmp
loope
lahf
lret
sub
xor
mov
out
pop
leave
call
jp
xor
lret
xchg
insb
sbb
imul
sub
in
jl
cmpsl
in
lcall
jge
rorl
leave
sahf
sahf
in
mov
push
lret
sub
sub
sbb
repz
xor
inc
mull
cmpsl
mov
cmovno
jl
mov
repz
or
cmp
xchg
stos
inc
mov
ficoml
loopne
push
sti
pop
adc
sub
outsl
ds
adc
out
cmc
cli
add
aam
and
fwait
pop
adc
fsubrs
push
mov
outsb
daa
jo
mov
aad
cwtl
jl
mov
jecxz
adc
sub
shlb
orl
lea
mov
jecxz
mov
int3
or
das
inc
orl
sbb
in
mov
mov
add
cmp
mov
jmp
xchg
into
jecxz
mull
xlat
ja
ss
sub
fmull
movsb
inc
adc
pop
lock
pop
ljmp
and
stc
mov
pop
cs
aam
jg
inc
movsl
and
or
xor
dec
mov
cli
nop
push
stc
in
or
jne
pop
data16
pop
add
iret
cmc
push
cmpsl
pop
mov
divl
mov
imul
and
push
stos
sahf
adc
frstor
lds
sbb
leave
xchg
xchg
sub
add
adc
icebp
call
xlat
adc
mov
add
test
mov
lahf
daa
test
pop
cwtl
jnp
lret
les
dec
das
orl
adc
jle
js
push
xorl
into
push
and
push
adc
pop
fstpt
iret
cmp
inc
test
subl
push
push
repz
sbb
mov
shll
adc
mov
mov
cmp
push
xchg
scas
test
mov
orl
mov
lods
shlb
pop
mov
rorb
mov
mov
push
mov
inc
mov
xchg
or
ljmp
or
aas
pop
fisubs
and
and
jecxz
mov
jecxz
mov
and
lea
dec
mov
fisubl
shrb
cmpsl
popf
jb
inc
and
xor
lods
ret
xchg
pop
mulb
xor
test
js
bound
mov
std
lods
ret
ret
dec
ret
adc
dec
sti
pop
sub
and
movl
jae
add
sub
iret
adc
push
or
pusha
xchg
mov
in
out
or
test
sub
mov
ljmp
pop
pop
mov
hlt
sahf
idivb
hlt
call
mov
inc
es
into
lock
into
lods
ss
push
icebp
cmp
jecxz
clc
lret
dec
pop
mov
mov
fists
inc
pop
sub
pop
lret
pop
or
in
andl
mov
mov
push
jecxz
stos
mov
enter
inc
jo
cmpb
sbb
dec
sub
ljmp
outsb
aad
xlat
push
mov
cmp
or
loop
insb
sahf
xor
inc
jmp
mov
lret
jo
mov
clc
sub
xor
lcall
jne
inc
pop
and
inc
xorl
mov
fimull
mov
inc
icebp
push
pop
pop
jp
inc
fcompl
test
push
sub
int3
cmp
fwait
xlat
lods
in
out
repz
add
push
scas
aaa
lahf
adcb
mov
jg
repnz
push
cmp
push
scas
out
aam
movl
leave
push
mov
mov
push
dec
dec
stc
std
inc
out
cwtl
dec
mov
pop
sti
call
out
lret
mov
test
das
pop
sahf
mov
mov
mov
ret
xor
aad
mov
lret
mov
mov
inc
sbb
xor
bound
xorl
clc
or
int
mov
insb
stos
movsb
outsl
xor
dec
push
loope
cmp
mov
mov
dec
push
stc
ficoms
aad
inc
inc
imul
xchg
cmp
dec
pusha
fwait
and
adc
pop
das
inc
fnstsw
scas
or
insb
sahf
xorl
movups
nop
les
add
xor
sbb
test
sti
test
insl
mov
mov
or
push
jnp
loop
inc
call
adc
lahf
insl
aam
cmp
js
cltd
popf
scas
gs
sub
insb
in
cmp
jb
push
push
repnz
push
and
jne
and
hlt
sub
mov
mov
pop
mov
xorb
cmp
ffree
das
xchg
scas
in
jl
in
out
lods
cmp
or
sub
insb
jnp
dec
gs
push
xchg
mov
movsl
jge
dec
push
int3
pop
inc
push
je
mov
fs
popa
dec
jo
sub
or
imul
lods
cmpsl
adc
sub
mov
arpl
into
adc
fwait
inc
dec
adc
xchg
lods
jne
or
mov
and
sti
loopne
gs
xor
add
mov
loopne
mov
and
dec
enter
out
scas
in
rclb
jge
test
cmpsb
mov
or
insl
insl
push
das
xor
ret
in
faddl
popa
cmp
adc
pop
movsl
xor
mov
outsb
out
ret
xchg
jle
xchg
push
in
and
dec
jle
cmpl
add
fisubrl
adc
imul
and
add
jae
xchg
cmp
and
test
aad
imulb
cmp
rcrl
adc
cmpsl
jp
cmp
push
sub
xchg
sub
int
mov
fwait
sti
in
lahf
jge
movsb
mov
insl
hlt
aam
iret
enter
xchg
insl
out
stos
xchg
jb
and
scas
jns
jns
sub
mov
test
jne
lds
loope
fwait
xchg
insb
jns
orb
sahf
cmp
xchg
and
pop
pop
pusha
test
clc
xor
sbb
insb
inc
je
inc
in
mov
xchg
xchg
repnz
and
pop
out
insl
mov
lret
inc
push
fcomip
xor
sub
sbb
pop
mov
int
cmpl
jp
jecxz
pop
sti
xor
sbb
imul
push
decb
js
lahf
jbe
nop
jns
or
jecxz
xchg
lret
les
leave
dec
scas
bsf
mov
mov
test
inc
std
xor
lcall
lret
testb
push
leave
pop
out
icebp
jg
cmp
xchg
dec
lock
cwtl
aas
shr
jge
adc
push
adc
in
cltd
divb
add
sub
sub
push
cmp
push
mov
cwtl
cmp
hlt
fwait
or
int3
pop
cmc
je
lock
dec
push
mov
fcompl
adc
loop
xchg
iret
pushf
arpl
mov
clc
and
cmpsl
or
adc
sub
sub
jl
adcl
mov
mov
je
fwait
addr16
inc
dec
fdivs
cmpsl
xor
jno
in
or
fidivrs
scas
lahf
clc
and
js
imul
ficompl
popa
push
insb
sbb
shl
enter
popf
push
mov
pop
cmp
jmp
cmpsb
enter
fistl
fisubrl
fs
xchg
inc
cmp
mov
push
jg
xor
stos
sbb
push
push
addb
adc
pop
and
cmp
ss
leave
insl
cmp
je
push
and
push
mov
in
jg
pop
mov
inc
pop
cmp
adcl
mov
jl
icebp
inc
pop
test
arpl
inc
adc
fisubrs
bound
lret
and
cmp
cmp
and
out
or
scas
insl
pop
or
inc
or
add
testb
adc
jae
aad
pop
inc
loope
scas
add
jecxz
icebp
sub
sub
mov
cmp
mov
cmp
mov
pop
loope
inc
or
out
mov
pop
mov
xchg
loopne
in
cwtl
push
insl
hlt
lock
xchg
inc
rcrl
and
xchg
pop
jp
fisubs
or
std
fs
xchg
sbb
inc
pop
cmp
or
dec
xchg
jno
add
mov
push
jbe
ret
std
mov
scas
shrl
in
sub
sar
sub
cmp
dec
sub
jno
repnz
mov
test
xchg
out
xchg
ret
or
loop
std
test
pop
mov
leave
xlat
lcall
jo
add
xor
insb
ret
out
rcll
push
cmc
iret
and
in
xchg
std
in
xor
loopne
cmp
cmp
cmp
fiaddl
inc
hlt
mov
push
jns
dec
mov
mov
inc
sarl
sub
mov
orl
sub
adc
sub
out
cld
mov
mov
sub
out
mov
int
lahf
sbb
inc
fidivrs
jg
xchg
or
outsl
bound
mov
insl
xchg
add
scas
push
lahf
ss
and
push
sub
add
pop
rorb
rcrl
cltd
int3
mov
dec
pop
pop
xor
hlt
ret
push
js
dec
xchg
lea
pop
clc
and
xchg
out
pop
into
inc
mov
cli
xchg
pop
hlt
jno
mov
jbe
repz
mov
and
inc
inc
jo
nop
data16
pop
and
mov
out
orb
push
fnsave
out
mov
sub
mov
movsb
ss
sbb
cmpsb
ds
cld
std
aam
jnp
fld
movsb
pop
lea
xor
jl
rorb
pusha
lahf
xor
jnp
jbe
repnz
shl
mov
lea
aaa
cmp
mov
cld
fs
in
sbb
cmp
push
fnstcw
ja
out
addr16
xchg
stos
xchg
pop
add
test
dec
pop
dec
add
cwtl
frstor
mov
push
cmp
lds
pop
xchg
sbb
mov
pushf
push
repnz
popf
pop
mov
jg
lds
cmp
fcmovu
test
icebp
pop
fs
imul
mov
mov
cmp
push
imul
fcmovb
mov
jp
loop
jno
mov
ljmp
lcall
leave
fwait
aas
mov
xchg
into
add
and
popf
int
add
pop
addr16
jno
jb
lret
or
pushf
or
cmp
ret
enter
mov
pop
inc
rorb
rclb
dec
jnp
or
imul
out
sbb
jle
insb
cltd
imul
mov
xchg
mov
adc
rorb
mov
jmp
xor
dec
xchg
call
sbb
cmc
mov
fildl
mov
cld
push
rclb
fwait
xlat
dec
sbbl
mov
push
add
sbb
aaa
inc
lea
mull
es
add
addr16
dec
lahf
adc
cltd
pop
push
sub
in
sbb
int3
mov
out
cli
adc
push
mov
add
xor
add
mov
daa
xchg
fcomps
loope
xorl
lods
lods
roll
add
in
inc
xor
pop
jne
rorb
pop
int
dec
cld
sti
mov
lds
test
outsl
lods
mov
std
xor
push
lahf
testl
or
sub
or
or
stc
mov
int3
dec
sbb
xorb
loopne
xor
sarb
stos
lds
cmp
dec
cmovl
fmull
adc
pop
adc
jge
das
ss
leave
or
hlt
clc
xor
push
cmp
sub
push
or
jl
push
rcrb
pop
fisttpl
lret
and
or
pop
xor
push
mov
xor
mov
adc
inc
cli
mov
add
mov
or
adc
inc
clc
daa
or
cltd
rclb
in
or
mov
jno
jne
fwait
jg
test
fcmovnbe
jmp
sbb
filds
xor
push
fistpl
inc
fnsave
leave
inc
add
movsl
in
lret
fwait
hlt
add
insl
sub
xor
jg
push
call
insb
inc
and
popf
pushl
fs
add
jb
icebp
jo
aam
sbb
sahf
pop
out
push
xor
xor
inc
aam
or
sub
aaa
mov
lret
xor
fdivl
sbb
hlt
fwait
pop
mov
inc
jae
cli
pushf
out
movsb
dec
fisttpl
hlt
popf
push
call
movsb
pusha
mov
je
test
es
pop
pop
ret
or
inc
imul
add
addr16
push
cmc
pushf
dec
andl
jecxz
mov
mov
or
dec
movsb
jbe
fs
push
or
and
ss
lds
movsl
mov
mov
shlb
jmp
and
or
outsb
pusha
jl
movsl
jae
jne
sub
loop
push
push
cmp
bound
data16
jb
movsb
cmp
jns
dec
lock
int
cmp
jp
jnp
lock
mov
aam
out
xor
ret
nop
gs
push
in
adc
dec
sbb
sub
lods
xor
mov
popa
xor
das
dec
mov
lcall
cmp
add
and
jp
xor
loope
fdiv
pop
mov
add
xor
mov
and
rclb
and
stos
or
dec
std
xlat
mov
inc
out
jbe,pn
pop
leave
lods
xchg
jl
ret
jns
cmpsb
pop
hlt
rsqrtps
shll
out
outsb
jle
stos
jno
add
dec
idivl
xchg
hlt
lret
cltd
aam
jge
mov
and
fistl
out
jecxz
sbb
jno
iret
pop
sbb
cld
arpl
mov
mov
lods
adc
lds
jg
int3
lea
push
push
inc
hlt
adc
mov
dec
adc
out
aad
sbb
mov
aad
sbb
jg
add
test
xchg
jge
mov
jne
cmp
xchg
cld
jno
mov
jns
ret
or
sub
iret
iret
pop
jmp
pop
inc
jg
mov
rcrb
aas
xor
ja
roll
add
popf
iret
sbb
out
or
sbb
test
mov
ds
in
into
xchg
pop
dec
jge
sarb
or
mov
mov
jl
push
in
in
mov
add
pop
subb
sub
inc
sub
aas
ret
stos
pusha
rorb
jae
movsb
ss
mov
cvtpi2ps
add
shl
daa
imul
sub
aad
mov
xchg
pop
cli
push
mov
aad
ljmp
jnp
mov
shlb
jle
sub
inc
rcll
jo
ret
fmul
push
data16
mov
call
pop
push
clc
mov
ret
sbb
sahf
int3
mov
pop
loope
sbb
jno
dec
mov
xchg
rcll
push
in
jecxz
jns
fadds
stos
lcall
dec
xchg
inc
mov
insb
or
sub
mov
cmp
outsb
cmp
ja
adc
pop
dec
mov
cmp
jmp
int
mov
mov
and
insb
jmp
out
pop
rcrb
test
or
pop
pushf
lahf
jns
push
xchg
cmp
xchg
xchg
cld
dec
stc
and
or
or
jmp
and
stos
mov
fwait
push
mov
cld
mov
fcmovu
inc
cmpsb
outsl
add
adc
cmp
push
jb
mov
pop
mov
fsubrl
push
push
push
or
push
lret
dec
ja
cmp
test
mov
or
dec
or
pop
jns
scas
insl
inc
sbb
add
pop
or
or
dec
out
out
mov
xor
mov
aaa
pop
jbe
mov
test
pop
adc
nop
fistps
add
andb
pop
iret
in
ds
and
test
jnp
cwtl
repnz
sbb
xor
push
rorl
sub
divl
mov
movsb
xchg
dec
and
dec
jnp
mov
mov
jae
inc
call
xchg
cwtl
enter
sbb
and
add
pop
sub
push
fcmovbe
loopne
and
testl
pop
cmp
test
pop
mov
mov
xchg
insl
test
jl
out
jb
jecxz
inc
add
test
mov
push
rol
and
jg
mov
test
les
or
sti
adc
sub
mov
push
sub
test
loopne
movsb
lock
loope
push
push
les
fsubl
packsswb
xchg
jl
int
insb
ss
pushf
pusha
in
mov
lods
add
xor
push
and
ljmp
sbb
or
xor
aaa
push
test
rcr
xor
push
mov
in
adc
mov
lahf
out
adc
ljmp
loop
int3
sub
add
imul
rorl
sbbb
test
cmpsb
scas
inc
adc
sub
int
mov
pop
arpl
xchg
add
or
and
mov
outsb
mov
and
subl
cmp
shrb
vphadduwd
jo
jb
dec
inc
jge
leave
mov
pusha
outsb
sbb
inc
cmpsb
pop
cmp
fwait
inc
cwtl
in
or
mov
ljmp
jns
sbbb
lea
rorl
mov
jge
cs
mov
outsl
xchg
lock
mov
inc
psrad
in
js
jp
in
pop
dec
push
les
sti
push
mov
ja
push
jecxz
sti
jmp
sub
pop
mov
bound
inc
dec
rcll
mov
mov
xchg
mov
enter
inc
or
enter
movsl
nop
inc
sahf
sbb
mov
sti
inc
lods
cmp
mov
push
outsl
or
jns
sub
pop
stos
jmp
imul
test
pop
push
mov
push
aas
lret
insb
dec
inc
pop
jbe
push
and
sbb
push
sub
jecxz
push
push
inc
cmpsl
fildl
enter
xchg
mov
or
sub
dec
jo
clc
inc
popf
cmp
adc
js
out
ret
cltd
xchg
push
or
cmpb
xchg
cmp
add
mov
push
dec
shll
out
sub
not
jge
fucomi
cmp
popf
sbb
inc
sbb
hlt
pop
inc
xor
enter
pop
outsb
mov
imul
aad
repnz
cs
fwait
loopne
pop
out
shll
mov
push
pop
jns
cmpsl
xor
incl
pop
and
scas
or
fistpl
adc
cs
arpl
mov
and
adc
dec
int
xchg
repnz
maskmovq
testl
rolb
in
jle,pn
push
mov
dec
cltd
push
out
mov
adc
fdivrl
inc
adc
xor
or
sbb
ret
fucom
inc
xchg
sub
enter
pop
pop
xchg
ret
dec
cmp
shlb
xchg
and
cmp
sub
xchg
sub
xchg
fwait
pusha
andb
xor
fnstcw
mov
dec
mov
inc
dec
testb
sti
fcmovbe
je
stc
es
push
in
inc
xchg
mov
xchg
mov
sbb
or
cmpsb
and
cmp
mov
dec
faddl
xchg
mov
adc
sti
pushl
aas
lret
test
jg
lret
pop
xchg
jmp
out
sti
jp
cmp
test
cld
adc
dec
les
mov
outsl
sti
pop
lret
inc
mov
xchg
rcrl
minps
cld
jno
cwtl
rcll
pop
push
dec
xor
add
je
in
je
shll
ss
dec
hlt
pop
int3
xor
push
mov
jns
sbb
mul
sbb
scas
ja
bnd
lcall
xchg
adc
sbb
jae
dec
mov
fcompl
in
loope
in
jnp
inc
in
sub
sbb
mov
les
mov
cmc
add
xchg
adc
insb
not
inc
mov
sub
jmp
xchg
enter
mov
sbb
fnstenv
insb
jo
adc
pushf
test
sbb
jo
pop
fiadds
les
push
sbbb
pop
xchg
insl
cmp
shlb
jns
mov
wrmsr
and
and
daa
imul
int
mov
jbe
push
and
dec
jns
es
out
in
jb
enter
pop
inc
jmp
jmp
stos
call
push
inc
mov
adc
fcoml
repnz
bound
popa
or
sub
leave
push
sub
pop
cmp
mov
test
loopne
cs
or
call
cmp
add
out
mov
inc
adc
mov
popa
stos
out
cwtl
add
inc
mov
shlb
popl
jae
inc
movsb
int3
enter
out
inc
cltd
sub
pusha
shll
movsb
lret
inc
lcall
adc
fwait
adc
ja
push
arpl
pop
out
ljmp
or
roll
mov
enter
push
mov
add
cmp
mov
push
dec
mov
andb
mov
int
into
out
mov
xchg
jb
jp
popf
dec
mov
add
pop
paddd
mov
enter
insb
lods
push
int3
pop
pop
sub
push
add
movsl
inc
dec
or
xchg
mov
push
ja
mov
dec
mov
loop
arpl
push
jp
clc
xor
mov
mov
or
idiv
cld
xor
es
and
sbb
lea
pusha
and
sbb
lods
pop
shr
outsl
push
mov
xor
cmc
cs
dec
push
mov
imul
dec
add
sti
push
popf
push
movsb
mov
mov
mov
sbb
mov
bound
mov
out
push
cmpsb
mov
jge,pt
pusha
data16
cltd
push
andb
mov
cmpsb
cmp
xlat
insl
sbb
and
pusha
rcr
into
pop
jno
aad
pop
or
aaa
pop
inc
and
sub
test
es
cltd
mov
std
mov
xor
cmpsl
xor
adc
rcrb
and
cmp
sti
scas
imul
jne
mov
adc
add
xchg
lret
xlat
outsl
loop
mov
inc
insl
cmp
dec
push
mov
idiv
ljmp
xchg
mov
jg
test
adc
pop
pusha
test
jle
cmpsl
sub
cmp
add
stos
iret
dec
jns
sbb
sbb
xchg
out
mov
in
or
inc
mov
stos
out
xor
or
jl
cltd
lcall
adc
push
jmp
rolb
icebp
gs
fstl
nop
or
jl
sbb
push
sbb
cli
mov
sub
test
into
dec
or
lcall
xor
cmp
pop
push
adc
mov
jb
mov
and
call
mov
scas
xchg
push
ljmp
dec
inc
loop
shrb
or
dec
in
call
and
mov
push
std
mov
lds
loopw
shlb
cmc
pop
add
push
repz
pop
iret
mov
jl
xor
stc
cmp
cmp
jg
ret
push
sub
pop
sbb
ljmp
dec
pop
sbb
in
inc
aas
das
pop
cmp
dec
or
stos
and
lea
xchg
lds
dec
jge
cmp
mov
and
scas
xor
sbb
add
push
jbe
mov
xchg
xor
add
lock
adc
push
ficomps
mov
out
mov
iret
cwtl
ljmp
cltd
lahf
pushf
jmp
xor
pop
shll
ljmp
mov
ret
sub
mov
mov
call
mov
or
inc
or
popa
cmp
pop
inc
add
out
cltd
mov
aaa
sti
outsb
or
push
add
lret
jbe
lock
or
pop
daa
aam
test
jne
cmpsl
loope
cmp
inc
pop
daa
repnz
enter
sarl
mov
jb
jg
test
jns
cmc
into
imulb
add
fbld
rol
or
jb
pop
iret
and
add
ret
icebp
mov
pop
fsubr
lods
mov
adc
scas
push
mov
jnp
add
xor
popa
xchg
jne
lea
dec
mov
pop
iret
lods
sbb
out
pop
shll
test
mov
and
call
pop
mov
pop
xchg
add
fld
roll
test
sti
and
in
or
cmc
movsb
cmp
test
sbb
fisubs
pop
inc
les
bswap
push
dec
daa
rcrl
dec
xorl
jnp
xchg
xlat
cmp
jnp
neg
scas
sub
cmp
mov
sahf
sub
add
sbb
inc
mov
test
sub
ljmp
gs
call
and
cltd
rcr
sbb
push
or
mov
ja
mov
cli
or
xlat
filds
cmp
popa
xor
movsb
mov
or
and
pop
pop
push
adc
cmc
lods
jmp
cmp
cmp
cmpsl
dec
aad
mov
push
int
and
cmp
ds
and
and
not
mov
mov
arpl
cmp
mov
and
xchg
xchg
mov
cmp
cmpsb
adc
movsb
mov
cmovp
pop
jp
aad
push
aaa
and
js
xor
cmp
or
cmp
mov
lds
dec
push
or
jb
adc
enter
push
iret
iret
repnz
adc
mov
pop
in
fmulp
mov
mov
mov
xchg
push
xor
mov
loope
and
dec
adc
decl
lods
mov
jg
and
std
cmpsl
mov
dec
xchg
in
add
xchg
repz
outsb
bnd
cmp
clc
mov
mov
vhaddps
xor
outsb
adc
push
inc
or
dec
push
push
mov
clc
xor
aad
cli
testl
test
sbb
orl
loope
inc
jbe
jg
vucomisd
inc
out
mov
int
adc
mov
inc
pop
adc
iret
nop
daa
mov
mov
in
rcl
add
pop
out
jbe
ds
xor
movsl
mov
test
subb
movsb
jecxz
xor
xor
out
addr16
inc
fs
fsubl
test
xchg
cs
in
aaa
fisubrs
dec
popf
jecxz
out
pop
mov
xor
filds
bound
lret
outsl
mov
int
bound
mov
stc
sub
and
sub
int
movsb
movsl
jmp
push
movsb
mov
xchg
popa
inc
in
fsubr
pushf
add
pop
test
out
inc
pop
pop
roll
int3
loope
mov
dec
std
call
sbb
loopne
mov
xor
lret
jl
push
mov
inc
iret
sbb
push
divb
sub
addl
sub
call
inc
xlat
sahf
lods
jmp
or
push
stos
subb
mov
and
jecxz
es
mov
xor
popa
mov
ds
pop
mov
cmp
xchg
jnp
outsl
mov
mov
pop
pushf
insb
mov
jge
add
xchg
test
scas
or
inc
lea
jne
xor
mov
and
psubw
lret
fstp
pop
dec
xchg
lret
loope
push
ljmp
xchg
pop
iret
scas
test
adc
gs
push
aad
dec
push
sub
out
or
js
mov
jp
fcmovbe
adc
push
cmp
add
xor
loope
movsl
cmp
iret
pop
ss
rcrl
std
xor
jmp
adcb
add
xchg
int
dec
mov
sti
mov
and
inc
pop
adc
mov
xorb
mov
fmul
stos
dec
fsubl
jo
repnz
mov
in
mov
mov
aam
xor
aas
idivl
repnz
clc
scas
loope
and
cmpsb
push
dec
mov
sub
nop
inc
bound
pop
inc
pop
sarl
movsl
test
adc
mov
inc
mov
sbb
or
jo
mov
call
inc
jmp
push
pop
jmp
testb
repnz
lahf
and
xlat
sbb
sahf
or
aas
sub
push
repnz
stos
add
sbb
xchg
icebp
les
out
into
andb
xchg
aaa
ret
inc
add
pop
fimuls
data16
por
inc
mov
insl
scas
dec
popf
and
xchg
andb
loopne
cmp
fiaddl
push
mov
out
call
in
dec
sbb
stc
into
mov
dec
cmp
add
mov
sbb
out
repnz
mov
gs
mov
and
jg
outsb
fyl2x
cmc
out
pop
test
icebp
lods
xchg
idivb
sub
jns
and
inc
mov
pop
decl
jg
aam
insl
jg
cwtl
push
push
push
es
inc
sti
js
push
paddd
in
pmaxub
cmp
cmp
sub
stc
hlt
les
dec
xchg
scas
fidivrl
es
js
gs
mov
push
add
jae
cmp
pusha
or
push
jnp
mov
aam
push
pop
in
xor
mov
int3
cld
xorb
clc
xchg
movsl
scas
dec
pop
leave
and
xor
sbb
dec
jne
inc
xor
xlat
add
popa
adc
popa
fwait
int3
xor
mov
ds
cli
mov
cmp
lahf
in
fmull
mov
jns
out
fsubrp
jge
push
into
jns
pusha
ficoml
push
xchg
push
test
in
lret
or
push
jge
clc
in
xchg
sbb
inc
push
out
ljmp
icebp
out
xchg
lcall
inc
lods
popf
aad
mov
cltd
jb
scas
leave
and
xchg
scas
cmc
mov
enter
pop
pop
cwtl
stc
iret
fdivrl
imul
iret
cmp
shll
loop
mov
cmp
aas
cltd
adc
into
xor
aad
test
shlb
fiaddl
addl
cmp
out
jmp
inc
test
cmp
test
add
cmp
jb
gs
jno
test
repz
into
dec
inc
cmc
jbe
iret
add
dec
test
dec
stos
sub
dec
sbb
std
fimull
xor
mov
add
xor
cmp
pop
xor
push
mov
mov
mov
ret
enter
sbb
out
adc
orl
mov
testl
mov
imul
in
jl
cmp
rcl
jle
fnstenv
test
xor
xchg
out
mov
imul
fcoml
js
jno
or
mov
insb
dec
cmp
push
fidivl
mov
push
jnp
inc
dec
or
imul
inc
pop
rcrl
rol
std
scas
sti
adcb
icebp
pop
xor
push
jl
and
sarb
mov
fisubl
dec
sub
mov
hlt
lea
and
pop
and
incb
xchg
jg
pusha
ficoms
jno
push
inc
mov
lret
or
call
call
inc
and
fsubs
push
jnp
lcall
xor
add
jp
daa
mov
pop
or
push
call
repnz
or
mov
push
shl
xchg
repnz
fcomps
push
jae,pt
int3
ds
adc
lahf
mov
shlb
inc
xchg
adc
xchg
adc
in
xor
mov
nop
cld
test
xor
std
fldenv
je
dec
enterw
jb
add
mov
inc
cmp
dec
repz
shl
jne
xchg
pop
test
add
insl
inc
push
cmc
test
adc
movsb
mov
je
loope
popl
mov
mov
stc
mov
out
jb
aam
inc
mov
ds
mov
cmp
add
aas
xchg
sub
add
jbe
mov
and
inc
fs
add
cli
fisubl
out
cld
xor
pushl
cmp
push
nop
outsb
push
xchg
lods
xor
inc
mov
shll
push
mov
mov
das
sbb
or
test
aam
loopne
in
xchg
fstpl
cmpsl
iret
push
mov
lret
and
xor
push
stos
sahf
outsb
add
add
pushf
aad
xor
jns
mov
dec
popa
inc
shll
iret
test
dec
sub
aad
out
sti
cmpsb
mov
or
pop
rep
int
in
das
xor
sub
pop
and
jmp
out
fwait
sub
add
push
repz
inc
test
jno
inc
aam
shll
dec
push
sub
int3
pushf
xchg
and
mov
rcrl
outsl
or
fldt
dec
dec
lcall
mov
lea
aad
int
sub
jae
cmp
rep
ds
jne
jle
lods
in
sub
in
cmp
xchg
jmp
or
push
pop
scas
fs
mov
inc
insl
sub
pop
call
ljmp
mov
xor
out
fidivl
push
call
out
jp
loop
xchg
lret
lret
iret
movsl
mov
pusha
jmp
pop
lock
xchg
or
cld
lahf
fisubrl
lcall
in
fstpt
push
push
rolb
loopne
in
bnd
push
mov
in
mov
repz
pop
jne
mov
xchg
mov
jnp
inc
dec
sbb
xor
mov
cmp
cmp
sbbb
or
popa
lret
and
jg
jge
mov
ljmp
std
sbb
push
test
adc
sub
or
xchg
mov
adc
sub
and
push
fisubrs
das
push
jg
cmpb
jmp
xchg
addr16
outsl
popf
xor
adc
bound
repnz
or
stos
test
sbb
or
lds
mov
es
sbb
or
push
jb
xor
cmpsb
sahf
push
loope
aas
out
jno
fldenv
pop
test
or
bound
mov
push
pusha
imul
lcall
int3
xchg
sub
mov
fisttpl
lret
and
cmp
cltd
stc
inc
mov
sarb
xchg
xlat
movl
xchg
hlt
ja
sub
mov
or
inc
std
jae
xchg
lods
cmp
adc
outsl
push
inc
mov
jb
push
pop
pushf
and
dec
call
stos
add
sbb
push
sub
int
adc
sbb
or
ss
cld
mov
filds
xchg
in
jb
add
notl
mull
pop
push
roll
rorl
std
js
mov
mov
push
xchg
push
into
or
pop
jb
jne
fildl
push
shll
sbb
imul
loopne
jb
outsl
or
pop
push
and
mov
shlb
xchg
dec
mov
andb
add
sbb
xor
cmp
jb
mov
mov
into
lahf
fildll
cmpsl
gs
outsb
aam
push
push
jo
lods
push
push
jne
xchg
ds
dec
and
cmp
sbb
xchg
xor
or
xlat
jbe,pt
lret
call
lods
rcrl
xchg
lcall
add
lea
mov
loop
test
lds
bound
in
xchg
lcall
mov
push
sub
adc
mov
adc
mov
lahf
jno
mov
pop
jp
or
repnz
and
mov
test
mov
test
push
imul
push
sub
or
sbb
xor
out
adc
insl
cltd
dec
test
out
ja
mov
dec
cmp
inc
imul
pop
mov
roll
dec
loop
pop
inc
dec
push
js
push
xor
pushf
mov
adc
add
or
out
lods
jnp
adcb
cmpsl
jo
loop
pop
test
mov
sahf
sahf
mov
aam
pushf
clc
inc
lods
pop
xor
mov
dec
jbe
jl
cmpsl
ret
fnstcw
or
popf
mov
jbe
popw
in
out
imul
push
rcrb
and
cmpsb
lea
testl
daa
ret
mov
outsl
lea
rcl
dec
idivb
cmp
mov
icebp
aaa
ret
js
popa
fwait
xchg
fstpl
outsb
cli
cmp
pop
xchg
fisubrl
dec
adc
mov
fistl
xchg
aaa
cmp
pop
pop
mov
aam
dec
bound
jle
shll
iret
insl
jl
popa
add
add
mov
jecxz
mov
mov
lret
es
dec
sub
repnz
inc
aad
jns
leave
mov
gs
jge
xchg
addl
dec
xchg
inc
or
sub
xlat
aad
mov
sbb
xchg
std
cmp
loopne
mov
sbb
in
insl
cmp
inc
inc
xor
push
filds
pop
fsts
roll
xchg
stos
imul
addb
and
fisttps
enter
into
dec
push
push
fcoms
outsb
cmp
mov
inc
inc
daa
xchg
sarl
and
inc
aad
push
lods
xchg
inc
cmp
ret
push
mov
mov
outsb
shrl
mov
jmp
in
jecxz
mov
pop
hlt
ret
rorb
out
sbb
shlb
push
sub
inc
jb
jl
fstpt
std
sarl
push
add
adc
xor
jle
mov
cmp
cmp
sub
xchg
jg
aaa
xchg
jp
xchg
xchg
mov
adc
popf
sub
jmp
arpl
fdivrs
jbe
jne
push
arpl
mov
inc
adc
popa
push
sbbl
jns
mov
stos
leave
es
mov
add
xchg
or
ret
sub
les
gs
inc
lds
dec
pop
pop
fwait
or
mov
fcmovnbe
dec
out
dec
and
int
sub
or
cmp
addl
add
js
int
test
loop
ficoms
or
pop
jl
rcrl
cmp
xchg
xor
scas
push
pop
pop
or
adc
xchg
sub
loope
xchg
test
mov
arpl
jb
in
in
daa
dec
lock
xlat
lahf
mov
adc
sbb
xorl
pop
dec
outsl
xlat
sti
or
mov
jo
sub
push
pop
pop
push
ret
popf
or
lcall
ljmp
or
add
sbb
xor
lahf
pop
scas
int3
push
sbb
add
jbe
xor
sbb
cwtl
cmpsb
jg
xchg
mov
nop
into
sub
push
dec
cmp
mov
or
ret
inc
adc
xchg
jle
mov
or
pop
mov
loopne
popf
cs
jp
dec
ja
mov
je
pop
fsubl
insb
pusha
in
iret
sub
addr16
test
pop
dec
sub
jle
lds
imul
mov
mov
adc
into
xchg
push
mov
mov
pop
mov
add
xor
mov
mull
repz
mov
pusha
mov
mov
pusha
stos
push
shrb
pop
cmc
mov
ret
sub
or
ss
popl
mov
jp
test
push
pop
shll
fadds
dec
add
test
int3
in
inc
lock
std
inc
dec
and
jp
loop
xor
lock
push
aad
and
mov
adcb
add
mov
sub
ljmp
jecxz
mov
scas
dec
aaa
std
pop
push
ret
cmp
mov
sti
nop
test
jg
mov
cmpsb
mov
jmp
lea
fwait
jecxz,pn
mov
cmpsb
in
cltd
std
aad
sbbl
push
ss
xor
cld
negl
or
dec
sarb
sbb
ds
lock
dec
lods
orb
xor
test
fwait
lret
leave
pop
or
inc
scas
jnp
push
adc
pushf
in
ficompl
sbb
and
adc
jbe
mov
mov
or
icebp
pushf
out
jp
lods
popa
andl
mov
push
aam
sbb
aaa
xchg
cltd
xchg
mov
lea
int
out
add
int3
stos
imulb
xchg
add
int
testl
inc
mov
pop
add
jmp
pusha
cmc
mov
xchg
push
sub
in
sub
cmpl
dec
dec
enter
pop
movsl
dec
test
adc
sbb
add
sub
xchg
in
fnstenv
fmull
adc
jae
rcl
pop
jl
fildl
scas
into
shlb
jno
inc
addr16
arpl
push
in
stos
sub
add
mov
sbb
inc
inc
sbb
inc
cmp
sub
in
stc
inc
adc
xchg
into
aam
and
imul
mov
clc
clc
rcrb
dec
adc
pop
lret
aam
lret
bound
stos
insb
leave
pop
jne
loop
mov
loopne
or
jl
jnp
and
lock
mov
sub
cli
mov
sub
fwait
push
push
cmp
sub
rcrl
jge
adc
or
pop
mov
mov
imul
loope
and
shr
lods
cs
xor
xchg
int
cs
dec
xor
or
fwait
lret
jb
push
pop
cmpsb
mov
sbb
stos
mov
lahf
sbb
mov
pusha
sub
pop
aaa
cwtl
and
fwait
int3
in
pop
test
outsl
in
xchg
test
rcl
in
push
mov
les
mov
popa
ja
xchg
cmp
dec
or
aam
lods
fdivrs
add
jp
or
pop
rol
pusha
push
cmp
sti
mov
lds
pop
cmp
pop
and
addb
adc
add
dec
ja
in
push
repnz
dec
mov
sahf
and
xchg
jmp
in
lock
fs
mov
loope
ja
mov
popa
cmpsb
test
loop
nop
push
jne
mov
push
xchg
sub
out
inc
aad
mov
jae
mov
es
ljmp
or
mov
fiaddl
stos
fdivs
push
push
test
inc
aas
sub
outsl
sub
jl
cmp
or
mov
push
or
dec
cltd
fsubp
ret
leave
inc
cmp
ret
mov
jae
push
loopne
rorl
les
repz
ficompl
sbb
stc
jo
movsl
sti
jp
mov
rol
aaa
out
and
xor
nop
std
push
popf
imul
stos
out
jne
jns
xchg
and
push
out
mov
cmp
add
inc
and
stos
or
out
scas
in
pushf
jge
shlb
sub
sbb
dec
lock
add
stc
cmpsl
dec
inc
add
add
nop
sti
adc
test
mov
sbb
fs
cmp
pushf
add
roll
mov
mov
sbb
and
cmc
xchg
adc
mov
dec
jmp
mov
cwtl
jp
jae
adcb
jne
pop
and
fmull
je
loopne
adcb
and
cs
cli
popf
jno
or
push
jg
dec
cmp
out
pop
pop
test
adc
sbb
jp
mov
imull
mov
inc
pop
sub
imul
sarl
xchg
cmp
jne
push
adc
jl
lock
sub
xchg
push
mov
out
add
jmp
sbb
repnz
and
cmpsb
je
add
aam
add
push
xor
adc
mov
sub
in
xor
sub
testb
stos
lahf
ret
dec
or
jg
fldlg2
mov
inc
ret
insb
jb
jp
cmp
mov
jbe
movsl
cmpl
or
adc
pop
stos
in
lret
inc
xchg
lods
sub
xor
divb
cld
push
jne
lret
push
jg
dec
sbb
lods
sbb
xchg
adc
fninit
inc
mov
sbb
or
xor
clc
cmpb
mov
pop
xorb
xchg
and
or
push
mov
and
sub
mov
movsl
test
push
xchg
loope
cmpsl
pop
ret
lcall
mov
adc
jmp
mov
ss
xchg
loop
lret
adc
jmp
in
sbb
jno
les
in
adc
ret
cmc
fs
inc
out
jnp
jmp
push
rorl
fptan
and
bound
jne
sarl
movsb
ss
sbb
movsl
cmp
mov
cmpsb
xlat
jnp
pop
outsl
push
cltd
jb
jnp
sbb
stc
fistl
fidivrl
push
lods
adc
pop
adc
in
add
inc
clc
xor
shlb
es
mov
bnd
loopne
mov
or
cld
data16
inc
jg
push
add
mov
cs
xchg
dec
rclb
adc
loopne
mov
js
loopne
sti
jbe
repnz
dec
mov
stos
dec
iret
imul
imul
insl
shll
test
lcall
lret
jbe
mov
leave
hlt
ljmp
dec
jp
jnp
mov
or
ret
movsb
pop
fs
mov
xchg
jae
adc
call
or
lods
test
or
jle
sub
bound
mov
mov
adc
mov
je
rol
mov
hlt
repnz
push
ljmp
sbb
pushf
scas
push
mov
pop
sti
ss
fcoml
mull
mov
push
call
adc
xchg
jbe
mov
loope
outsb
cld
jb
inc
jecxz
aas
push
add
addr16
pop
xchg
adc
sbb
loopne
lret
sub
push
jnp
lds
das
add
sub
mov
les
out
daa
sahf
inc
in
mov
icebp
jae
jno
cld
push
shlb
inc
jne
add
cmp
popa
inc
and
jge
orb
pop
lcall
sub
lcall
mov
imul
scas
push
push
add
shl
cmp
sarb
iret
daa
cmc
insl
adc
adc
neg
xor
testl
xchg
pop
mov
push
or
dec
icebp
addr16
or
fmul
push
pop
ljmp
outsb
icebp
adc
push
jb
adc
lret
dec
fs
or
lock
push
mov
popa
outsb
and
or
cld
pop
mov
push
out
jge
cmp
xor
movsb
push
sub
dec
pusha
insl
pop
daa
fidivl
mov
adc
jl
daa
ret
cmp
shl
inc
shl
sub
sbb
aaa
mov
sar
sub
pop
cmp
test
xor
cmp
add
jecxz
ds
xchg
rcll
into
mov
xor
insl
shll
xor
or
dec
aas
cmp
pop
xchg
add
adc
cmpsl
cmp
fnsave
mov
cltd
das
pop
mov
int3
mov
sbb
cmp
aas
pushf
dec
insb
mov
inc
xchg
pop
int3
bound
les
and
adc
xor
outsb
and
pop
pop
adc
fdiv
frstor
fcom
loopne
into
insl
adc
enter
hlt
push
xchg
xchg
mov
dec
outsb
into
icebp
sahf
lret
sbb
fists
jmp
int
out
sar
sub
daa
mov
shrb
cs
push
shr
pushf
xor
mov
iret
dec
loopne
adc
movsb
xchg
jl
push
or
test
iret
hlt
sti
ret
int3
jmp
push
push
aaa
dec
dec
jo
mov
inc
pop
nop
out
dec
inc
mov
mov
adc
sbb
roll
mov
cmpsl
mov
daa
mov
fwait
subb
jecxz
nop
or
std
xchg
cmc
subl
mov
repz
in
jno
and
push
jnp
out
dec
jnp
pop
es
push
rcll
and
add
mov
push
xchg
sbb
sub
mov
in
mov
cld
mull
shl
in
in
pop
xchg
cmp
xor
jnp
cltd
mov
lret
inc
popa
dec
mov
sbb
fs
mov
ljmp
fxtract
mov
sub
inc
mov
rcrl
and
jns
and
mov
cli
xchg
mov
or
cltd
or
sbb
adc
addl
cmpsl
movl
jmp
sbb
cmp
lret
pop
xchg
decl
xchg
and
scas
inc
nop
scas
shrb
add
mov
int
insb
lahf
cld
into
dec
cmp
stos
pop
and
jo
je
sub
aam
imul
pop
sub
and
mov
inc
mov
or
mov
jmp
lock
sbb
xchg
cmp
adc
js
aas
out
ret
mov
mov
add
jo
inc
sbb
lret
adc
scas
xor
cli
int3
push
cmpsb
xor
test
in
add
movsb
ja
inc
pop
fwait
hlt
mov
rcll
inc
xor
mov
aaa
repz
pop
cli
es
sbb
sbb
int
add
xchg
fimuls
stc
cmp
mov
xchg
lret
mov
push
inc
mov
push
xchg
test
and
movsl
into
das
leave
cmc
bswap
test
test
addr16
out
in
mov
xchg
sar
addr16
sbb
bound
das
daa
xchg
mov
popa
test
pop
pop
fs
cmp
jbe
pop
out
mov
dec
dec
ss
or
incl
mov
cmc
mov
jns
into
sub
lock
loop
lods
jae
test
mov
movsb
pop
cltd
xchg
and
sub
xchg
jnp
dec
jae
mov
cmpsl
pop
and
sbb
idivl
xchg
mov
adc
jno
call
ret
dec
dec
ss
icebp
ret
pop
bound
pop
xor
mov
movsb
aam
out
and
cltd
pop
dec
push
mull
mov
inc
xor
and
dec
sub
sub
inc
out
enter
xor
dec
push
rorb
sub
push
ds
pop
je
mov
sarl
dec
int
cld
lret
add
xchg
inc
push
call
loopne
jnp
in
mov
lock
fbld
mov
in
push
lahf
in
push
dec
in
cwtl
pushf
lods
in
add
mov
cmpsl
mov
call
push
adc
outsb
inc
jl
rcll
aas
mov
inc
fs
xchg
and
or
xor
push
cmp
repz
push
ljmp
mov
jmp
ret
in
mov
aaa
xor
adc
out
mov
add
shlb
cmp
and
jge
mov
loope
imul
push
pop
les
add
stos
ret
popa
dec
movsb
int
out
xchg
stc
lret
movsb
das
or
jmp
push
xchg
push
sbb
lods
jl
movsb
push
inc
movsb
or
test
xchg
fcoms
aaa
jg
xor
push
jo
test
test
add
adc
add
mov
dec
je
xor
adc
dec
out
in
aas
push
push
imul
gs
mov
idivb
fdivrl
xor
jecxz
mov
push
jle
loop
outsl
sub
sti
xchg
ret
in
out
loop
fidivl
sahf
or
decl
sbb
jl
std
sub
xchg
sbb
pop
lahf
ljmp
cwtl
jle
xlat
sbb
loopne
insl
jns
out
sbb
push
aas
fst
push
sub
imul
movsb
mov
loopne
ljmp
cltd
push
scas
and
jae
out
xor
test
xchg
iret
in
or
dec
mov
xchg
pop
add
pop
mov
jb
lds
jge
sbb
arpl
insb
push
mov
jl
sbb
ss
push
sbb
pop
pop
add
mov
mov
cmp
scas
outsl
icebp
jnp
inc
lods
faddp
outsl
call
sub
jae
rorb
popa
mov
cmp
into
popf
mov
ja
inc
cli
mov
mov
in
dec
pushf
cwtl
jge
sarl
mov
sbb
xchg
fwait
xchg
or
jb
sub
div
sub
adc
pop
aaa
sbbb
jae
aas
cmovle
or
lods
stc
pop
mov
hlt
mov
out
js
adc
shll
push
mov
dec
add
mov
xchg
cli
stc
into
js
loopne
mov
mov
dec
mov
adc
jge
lret
push
in
not
mov
adc
jo
or
ljmp
jl
jp
hlt
pop
mov
sbb
ror
mov
insl
jp
lret
ljmp
sbb
aas
lret
mov
push
xchg
in
sarl
mov
in
fmuls
adc
iret
insb
data16
cmp
pop
lret
fiadds
cmc
push
adc
call
je
dec
mov
cmp
pop
pop
pushf
nop
sbb
pop
pop
cmpsb
fstl
mov
push
cmc
insl
das
imul
mov
sbb
rolb
ljmp
roll
mov
outsb
repz
es
jmp
cs
jnp
lods
in
and
ret
and
or
xor
jns
sbb
xor
cmp
mov
jl
dec
popf
int3
outsb
xor
or
xchg
add
add
aam
adc
mov
fmull
outsb
outsb
adc
clc
lds
out
sar
sub
mov
dec
pop
cwtl
push
jb
pop
iret
aas
out
test
js
or
sbb
mov
cmp
mov
adc
dec
jnp
adc
sahf
add
lds
mov
clc
gs
xor
add
xchg
mov
shlb
add
mov
out
dec
lods
xchg
jne
out
mov
xchg
sub
dec
sub
or
cmovae
movsl
jnp
and
pop
push
repz
push
or
and
fildll
int
rorb
mov
pop
and
cmpsb
lods
ret
add
mov
fdivs
mov
popf
fwait
jle
pop
push
mov
dec
loopne
rorl
cmp
mov
lods
sarb
pop
sub
test
cld
xchg
popa
xor
xlat
xchg
mov
inc
ficompl
mov
mov
or
orb
mov
push
adc
push
jl
jmp
dec
out
lods
dec
sub
sti
mov
les
push
aam
xor
add
repz
imul
mov
xchg
mov
mov
inc
cmc
add
jae
mov
and
mov
pop
aad
jne
cmpsl
sbb
add
mov
xchg
mov
pop
sub
hlt
lcall
outsb
out
mov
inc
mov
pop
sbb
aas
hlt
imul
addr16
push
test
in
jno
fiaddl
add
inc
or
push
pushf
ja
pop
repnz
mov
inc
gs
sub
js
xlat
and
push
cmc
je
add
gs
mov
and
push
jmp
add
xchg
and
mov
jg
fdivs
mov
decl
cli
dec
fst
insl
out
aad
aas
push
ret
fnsave
psrlq
gs
xchg
pop
jg
andb
add
cmpsb
dec
lds
xchg
sbb
mov
add
pop
sahf
enter
out
jno
imul
xchg
outsb
cltd
lock
ficompl
out
xchg
inc
and
je
decb
and
iret
shrb
jp
xchg
and
xor
mov
testb
int3
xor
push
jb
test
cltd
addr16
test
mov
xor
mov
cmpsb
out
and
ljmp
ds
and
sub
xor
and
leave
int3
dec
aaa
push
fisubrs
add
dec
mov
xchg
or
sub
clc
fsubr
addr16
call
inc
icebp
cmp
mov
js
mov
jno
xor
pop
xchg
adc
and
gs
mov
sub
loop
mov
jmp
cwtl
mov
sbb
fadd
je
pop
cs
rcr
mov
cld
loop
outsb
jl
stos
andl
sub
pop
mov
arpl
lret
ja
xor
je
dec
subb
pop
fildl
push
xlat
xchg
xor
arpl
xchg
lds
push
ficomps
push
iret
xor
push
pop
insb
in
clc
loope
xor
pop
inc
lock
leave
sti
adc
push
mov
adc
pmulhuw
xchg
daa
sti
jecxz
or
and
pop
or
aaa
fcmovbe
sub
dec
hlt
orl
xchg
movl
mov
pusha
cmpsl
mov
lods
cmp
addb
adc
inc
mov
mov
hlt
inc
test
stc
enter
and
aas
lret
rcll
cmpsb
mov
sbb
stos
lea
lcall
movsl
out
stos
dec
pop
out
mov
in
lahf
inc
add
iret
adc
xchg
and
rcrb
adc
mov
notl
fwait
into
adc
setp
rcr
add
test
add
mov
mov
mov
adc
pop
insl
sarl
mov
das
out
roll
or
push
out
stc
es
jae
mov
outsl
pop
fcoml
add
lock
mov
mov
shll
xchg
xor
and
cltd
bound
cmpsl
mov
sub
scas
fs
test
std
dec
sub
dec
cwtl
je
cmp
das
jo
sub
lahf
decb
mov
cmpsl
jbe
icebp
lret
in
add
xchg
jo
pop
cmp
inc
cwtl
adc
stc
pop
add
and
sbb
jnp
cld
js
inc
popa
sahf
cmpsb
inc
arpl
push
pushf
sub
sti
and
stc
mov
sub
mov
cmpsb
stc
hlt
mov
xor
and
and
repnz
lret
icebp
jno
push
out
scas
gs
in
test
cmpsb
and
cltd
sub
push
inc
sahf
cmp
ffreep
add
push
add
or
out
pop
mov
jo
movsl
into
add
fisubrl
or
cltd
cltd
fmulp
lods
mov
pop
inc
cmovnp
cmp
mov
test
cltd
sbb
inc
xchg
enter
loope
out
ret
jl
adc
cmpsb
vcvtsi2sd
mov
ficoms
jl
dec
xor
cltd
stos
lods
jp
or
mov
or
sub
mov
adc
enter
xchg
aam
pop
sahf
dec
sti
scas
hlt
orb
lds
out
in
aam
mov
pop
push
xor
dec
xchg
rolb
adc
dec
cmp
movsb
inc
pop
sub
lea
mov
std
test
or
jg
sbb
fwait
lods
test
cmp
hlt
loope
xchg
shlb
subb
pushw
mov
pop
pop
repnz
in
mov
inc
data16
inc
fdivrp
jno
mov
lret
mov
sbbl
scas
mov
adc
arpl
xor
in
addr16
lds
pop
repz
jle
fcmovnbe
and
into
push
movsl
push
mov
push
shlb
adc
fimuls
cwtl
inc
insl
jg
xor
scas
fdecstp
cld
fcomps
or
rol
jmp
dec
dec
xlat
pushf
adc
imul
aad
sti
call
or
mov
xlat
add
cmp
lcall
or
ret
sti
sub
or
in
xchg
lock
inc
adc
dec
test
push
inc
clc
pop
adc
icebp
push
dec
jl
and
std
addb
mov
daa
daa
notl
mov
sbbb
cltd
cld
pop
cmc
nop
mov
outsl
test
rcrb
popf
cmp
out
dec
jge
lds
sti
int3
popa
sbb
loop
scas
fistps
insl
sbb
add
sub
nop
cmp
sbb
fdivs
mov
xchg
mov
push
mov
pop
jp
sub
lods
xor
adc
xorb
dec
mov
dec
sub
stos
add
lret
jle
fwait
scas
or
xchg
dec
gs
xchg
hlt
fimuls
jmp
pop
sbb
jb
in
shrl
and
inc
push
shrb
fs
sbb
xchg
add
push
inc
mov
sbb
mov
jno
mov
adc
sbb
repnz
shll
ja
cmpsb
orl
and
test
xchg
or
sbbl
jno
ljmp
fisttpl
inc
shll
repz
les
ds
loopne
loopne
dec
dec
jg
mov
pop
test
in
movsb
das
test
push
aas
cmp
int
mov
sbb
dec
sbb
sub
xor
gs
out
ret
dec
add
subl
xchg
add
arpl
ss
cmpsl
inc
jnp
adc
rcrl
lock
call
stc
imul
ret
push
dec
clc
out
dec
insb
cmp
mov
inc
push
idiv
cmc
and
mov
fs
in
stos
inc
push
mov
mov
jae
pop
cmp
jb
pop
sub
sbb
call
cmp
hlt
popa
flds
inc
in
cmp
test
icebp
lahf
adc
movsl
sbb
push
in
lods
and
mov
adc
enter
pop
sar
cmp
adc
mov
jle
or
outsl
jnp
cld
add
jnp
mov
lahf
enter
dec
xlat
mov
lahf
and
fistpl
mov
movsb
push
mov
outsl
dec
in
xor
or
dec
sbb
xchg
jno
and
xchg
mov
mov
mov
mov
imul
aas
mov
mov
pop
add
pop
jp
movsb
pop
ficompl
in
mov
dec
out
mov
sahf
mov
cmpsl
push
sarb
iret
arpl
push
mov
incb
into
ljmp
inc
cld
xchg
imul
and
imul
testb
dec
jo
popa
cs
push
add
fdivrs
adc
cli
fsubrl
jmp
mov
dec
pushf
fs
lahf
shlb
mov
ss
add
fisubs
add
sub
push
xor
xorb
dec
sbb
jle
aam
aam
pusha
xchg
xchg
sbb
int
xor
pop
jge
sub
imul
pop
push
out
xchg
dec
cmp
adc
lods
or
mov
pushf
fstpt
jp
hlt
cmpsb
push
xor
insl
fs
mov
rorl
xor
pop
push
popa
fldt
mov
out
adc
sub
outsb
daa
fldcw
bswap
ljmp
inc
xor
xor
lods
test
repz
jp
mulb
xor
xchg
inc
aad
dec
inc
mov
ss
leave
cmpsl
pop
call
push
cmpsl
cltd
cmpsl
or
lods
sub
jbe
jno
addr16
xor
xchg
aas
or
shrb
orl
int3
loop
stos
leave
sub
in
jl
int3
mov
out
fldt
jle
inc
push
sub
lods
add
dec
fwait
aas
or
sbb
cmpsb
inc
insl
cmp
push
in
push
ja
cwtl
rclb
rolb
pop
sbb
sub
arpl
sti
mov
jne
mov
xchg
lock
js
push
xor
dec
loopne
movl
add
push
dec
popa
hlt
mov
push
push
mov
cli
adc
enter
mov
fidivl
mov
or
mov
xchg
pop
shrd
icebp
test
push
pop
dec
js
add
arpl
mov
fwait
mov
dec
lret
nop
lock
sti
sbb
ljmp
cltd
jnp
loop
mov
jmp
stos
jmp
xor
or
jle
jl
insb
fcomp
pop
pop
lds
sub
in
dec
inc
lea
inc
inc
push
inc
jns
imul
dec
cmp
mov
sub
imul
das
fwait
rorb
shlb
and
jle
fdivrl
outsb
dec
add
nop
ror
fists
fisubs
fs
adc
outsb
shrl
jne
into
add
mov
inc
scas
aas
add
cld
xchg
sbb
fiaddl
mov
shlb
and
ljmp
lret
aaa
xor
out
jl
fwait
stos
test
push
popa
xchg
int3
fwait
ss
out
mov
dec
imul
or
add
js
ret
jb
pop
mov
mov
leavew
sub
lahf
add
inc
ds
xchg
add
aad
mov
xchg
adc
jnp
or
dec
in
fwait
xchg
popf
cmpsb
lods
scas
shll
jecxz
clc
movsb
enter
les
stos
sti
int
mov
popa
testl
cmp
stos
xor
imul
ss
cmpsb
mov
lcall
xor
lods
add
sbb
push
lahf
mov
lcall
out
mov
and
cmpsl
roll
jb
jne
inc
ds
outsb
and
xchg
push
sbbl
push
mov
push
aad
xor
cmpl
pop
fidivrl
aam
sbb
and
add
mov
loopne
xchg
add
cmpl
ds
fsubs
dec
xchg
stc
sbb
shrb
test
adc
jg
mov
mov
adc
int
cs
inc
xor
xlat
fwait
stos
std
clc
mov
pop
ljmp
xor
inc
out
std
rcrl
push
jnp
ljmp
sub
sub
out
pusha
inc
add
fimuls
mov
idivl
and
out
jnp
lock
mov
adc
pop
cmp
or
or
pop
adc
fcoms
sti
rorb
mov
mov
rorb
shlb
inc
or
sbb
jmp
aas
scas
dec
lea
dec
pop
es
xchg
iret
pop
mov
adc
les
mov
insl
mov
fdivrl
inc
xchg
lret
pop
daa
pop
jle
add
mov
rorl
inc
jle
cmp
cmp
adc
lgs
lds
jae
ret
addr16
jo
inc
lahf
xchg
cli
sbb
jp
lcall
lahf
and
lahf
enter
jge
out
testl
dec
adc
push
loope,pt
ret
or
mov
adc
call
jle
cmc
repnz
pop
jae
sbb
push
jo
int
fst
push
inc
xchg
mov
push
dec
push
ljmp
scas
push
pop
cmc
ss
popa
dec
adc
push
andl
fistpl
lods
cmp
insw
pusha
daa
mov
fildl
call
mov
add
leave
cmp
push
cwtl
jnp
fstpt
cmp
mov
dec
addr16
sbb
test
lods
push
andb
push
push
pop
jne
lds
in
cmpb
lret
pop
fidivl
lret
out
rcll
dec
jecxz
push
xchg
inc
lds
test
mov
mov
dec
sahf
imul
adc
inc
icebp
pusha
loopne
sub
fildll
pop
ja
xchg
inc
std
inc
sbb
pop
imul
and
inc
cltd
scas
imul
outsl
pop
jbe
imul
cmp
mov
testb
add
in
adc
sbb
or
enter
aaa
push
push
fisubl
popf
imul
push
adc
xor
clc
loope
clc
ds
lahf
xchg
arpl
je
daa
xorps
in
sarl
call
pushf
pop
inc
mov
push
or
xlat
iret
sub
scas
xchg
insl
loop
leave
cmpsl
ret
sub
xor
mov
jmp
fbld
jmp
addb
dec
lcall
xchg
fcmove
fnstsw
mov
pop
dec
adc
inc
sub
jecxz
sub
xchg
call
cltd
fildll
lcall
dec
sahf
movsb
push
lea
stos
sti
inc
das
cmp
jmp
push
inc
pop
fidivl
push
push
andl
jnp
mov
cmpsb
xchg
out
insl
lahf
in
lods
inc
pop
outsb
lea
test
sub
cmpsb
rorw
fiadds
adc
lods
mov
mov
mov
jecxz
sbb
mov
mov
and
adc
cmp
leave
fildll
jno
into
sahf
xor
jns
lods
sbb
fnsave
call
dec
out
js
push
push
sub
push
jg
lods
add
movsl
das
jge
mov
movsb
je
pop
sti
xor
mov
pushf
add
sbb
mov
pop
add
cld
inc
or
lea
out
pop
dec
mov
push
repnz
xchg
cmpsl
xlat
testb
dec
cltd
lods
mov
stos
imul
enter
sbb
sarb
mov
imul
inc
mov
out
loop
xchg
and
jo
sub
mov
pop
out
dec
fsubl
push
pop
jle
in
xchg
jmp
mov
lcall
shlb
mov
cmc
inc
testl
jns
cmpb
in
out
insb
mov
ljmp
lods
lcall
mov
inc
sbb
jb
or
je
jecxz
and
inc
or
and
fcomp
imul
dec
scas
xchg
into
shl
rclb
insl
int3
sub
cld
outsl
xchg
mov
data16
lds
shrl
pusha
mov
pop
sti
loope
ss
or
daa
adc
fildl
sbb
aam
out
aad
jns
push
and
cltd
stos
out
outsb
addr16
xchg
lret
out
pop
mov
icebp
inc
idivl
arpl
inc
add
cwtl
cs
sbbb
dec
lods
pop
subb
mov
out
add
rcll
sbb
aas
fwait
adc
aas
fnstenv
fsubrs
jbe
pop
push
subb
dec
push
mov
pop
lds
mulb
enter
xor
repz
xor
inc
xor
mov
ret
das
int3
mov
jb
add
jg
sub
fdivrs
mov
push
inc
push
xchg
add
and
pushf
sbb
divb
in
mov
lret
pop
jmp
cmp
in
cmpsl
js
in
dec
mov
popa
adc
or
nop
add
ja
lods
mov
mov
jl
add
rorb
sub
outsl
xchg
mov
insb
fistps
jb
cld
lods
sti
sbb
popa
push
mov
scas
xor
sub
mov
lret
std
mov
ds
lret
imul
lret
xor
ret
pop
jbe
inc
mov
sti
and
pop
lahf
jmp
xchg
jecxz
xchg
arpl
cmp
sub
fsubs
push
outsl
and
push
stos
cld
adc
loop
inc
mov
push
inc
xchg
lcall
imul
fsts
cmpsb
push
xor
cmpsb
cmpsl
fildll
pop
push
mov
ljmp
je
pop
iret
lock
je
leave
popf
sbb
add
les
inc
enter
ja
mov
leave
mull
enter
adc
lddqu
imul
sbb
arpl
mov
int
push
mov
sub
mov
add
sbb
mov
addb
or
fwait
inc
mov
int3
cmp
cmpsb
adc
data16
jo
ficoms
imul
out
jl,pt
jle
std
fiadds
stc
rcrb
push
into
lcall
push
dec
jmp
or
dec
xchg
push
dec
fisttpl
dec
cmpb
ret
mov
pusha
into
ljmp
mov
bound
fdivrs
mov
mov
sub
addl
imul
and
incb
cmp
and
scas
push
js
add
push
mov
loopne
popf
cmc
mov
push
leave
push
ffreep
fcomps
or
shlb
orl
xchg
push
fsub
cmp
out
in
jge
lret
repz
mov
add
call
stos
loope
sbb
je
ss
sub
pop
lods
mov
les
pop
jl
mov
test
inc
das
test
pop
cs
lock
xchg
out
mov
into
into
push
jbe
cwtl
je
and
jge
push
sub
adc
mov
and
dec
xlat
xor
mov
mul
lods
xor
jecxz
jbe
xchg
add
sarb
push
and
jo
loopne
mov
ja
fcomps
and
lahf
xor
imul
mov
repz
fisubrl
cwtl
inc
pop
stc
xchg
int3
mov
dec
xor
cmpsl
push
push
jns
cmp
xchg
cmp
xor
rolb
loopne
ljmp
mov
mov
jne
xchg
iret
fcomps
sbb
mov
mov
inc
mov
inc
mov
and
dec
popa
out
lret
push
fistps
mov
cltd
or
inc
mov
inc
outsl
lret
mov
data16
pop
jb
push
xchg
sbb
jecxz
aas
mov
inc
aam
jl
sbb
jo
mov
inc
sub
xchg
lods
addl
cmp
iret
bound
repz
cmp
xchg
loopne
clc
dec
pop
mov
lret
xchg
sub
sbb
adc
mov
test
mov
int
push
imul
cltd
ja
push
mov
aad
xor
mov
out
rcll
daa
js
pop
sub
sarl
test
sahf
mov
adc
or
mov
push
fcoml
sub
repnz
push
push
jae
repnz
pop
sti
or
mov
mov
inc
ljmp
jle
cmp
push
jb
in
adc
jno
iret
ds
mov
push
iret
xchg
sub
into
enter
xchg
xor
sbb
push
sub
add
movsl
test
xchg
pushf
fwait
pop
jno
pop
add
sub
sbb
or
clc
cmp
cmp
out
or
pop
ljmp
adc
test
sub
sbb
test
nop
testl
cwtl
mov
jl
ss
mov
xor
or
jp
and
and
push
js
out
dec
sbb
inc
ret
aad
push
rol
adc
cmc
pop
push
push
enter
mov
jnp
in
out
mov
mov
fistl
scas
xlat
cmp
add
jno
ss
loop
scas
xchg
cmp
add
stc
sub
pop
dec
in
cmp
in
shrl
shll
es
inc
xor
dec
mov
ds
pop
push
imul
cmp
sahf
jl
lods
and
pop
mov
xor
jle
mov
roll
dec
cmp
push
adc
jl
push
sbb
je
addb
push
notb
enter
movsl
adc
add
add
sub
cltd
and
pop
xchg
scas
rol
icebp
fnstsw
sbb
bound
sbb
jp
movsb
or
int3
js
mov
lahf
sarl
cmpsb
pop
inc
xchg
xor
add
xor
mov
dec
mov
inc
jmp
fstp
cmp
jae
and
mov
add
jo
add
jne
xor
fidivrl
in
std
jg
mov
xor
mov
cmp
mov
mov
inc
jg
jge
pop
mov
ljmp
shrb
scas
add
call
test
idivl
aam
jmp
enter
lret
out
insb
xor
imul
mov
cmp
inc
push
cmp
jg
pushf
aaa
pusha
xor
jge
scas
dec
fsubl
mov
fwait
shrb
lret
xchg
cmp
mov
push
inc
push
pop
leave
mov
int
or
jmp
push
sub
dec
xlat
fld
pushf
pop
pop
jmp
xchg
cmc
sub
idivl
cld
daa
jl
ret
popa
mov
loope
xchg
jg
scas
cli
and
stc
popf
lahf
or
cmp
sbb
push
mov
xchg
cwtl
xchg
push
in
test
stos
jb
arpl
push
outsb
ljmp
imull
xchg
push
fdivs
clc
and
mov
xchg
xor
rolb
mov
inc
hlt
dec
scas
push
out
inc
xchg
in
fstl
mov
mov
push
inc
jecxz
or
lds
test
mov
iret
and
js
insb
in
sub
js
in
js
les
bnd
ret
repz
or
lods
jp
cmp
je
mov
add
or
sti
mov
jecxz
cmp
pop
inc
ja
or
cld
lret
ret
inc
dec
fidivs
lcall
lahf
pop
mov
shlb
push
lods
jo
inc
dec
nop
sub
mov
lahf
or
jb
out
lea
insl
stos
incb
loop
adc
pop
push
sub
mov
mov
mov
jp
push
into
ljmp
or
mov
sbb
sub
ljmp
leave
push
inc
pop
jo
fwait
mov
out
pop
out
dec
lahf
xor
mov
cld
or
fidivs
and
shrb
je
dec
dec
add
sub
sbb
xor
push
jge
jp
fimuls
ret
aaa
inc
repz
and
adc
sub
cmpsl
and
xor
fs
aaa
test
xor
mov
notb
and
xchg
cld
jo
mov
mov
or
test
cld
dec
mov
mov
gs
jno
outsl
dec
popa
push
cmpsb
mov
mov
mov
clc
cmp
test
es
mov
inc
add
push
int
inc
pop
ds
cs
pop
sbb
mov
shl
popf
lock
test
or
ret
std
das
add
mov
cmovno
fldcw
xchg
inc
and
idiv
out
mov
xor
sbb
xor
subb
fs
xchg
sub
pop
mov
jmp
imul
stos
mov
sbb
stc
pushf
daa
pop
mov
adc
push
sub
add
clc
fsubrs
ror
lret
xchg
add
inc
fnstcw
into
jnp
and
cld
rorb
out
lret
xor
mov
mov
inc
aam
mov
xor
mov
push
jle
mov
movsl
jae
jl
loopne
fxam
mov
jns
pop
aam
shll
roll
pop
lods
xchg
dec
mov
int3
gs
xchg
add
adc
fcmovnu
jmp
jne
das
and
mov
push
sub
dec
xchg
jp
sar
inc
cli
push
shll
leave
cmp
cltd
lcall
mov
mov
mov
shrb
cld
test
dec
int3
jo
sbb
push
call
in
aad
mov
pop
inc
fdivrs
out
in
and
sbb
filds
aad
je
sbb
std
cmc
mov
pusha
test
cmp
and
and
mov
clc
idivb
add
or
imul
cld
sub
xchg
sahf
lahf
jno
ljmp
mov
movsb
jo
imul
jnp
mov
adc
stos
or
popf
push
popf
mov
insb
pushf
adc
add
cmp
loop
pop
ljmp
sti
stos
into
dec
mulb
sbb
int3
add
or
testb
aam
sti
adcl
cmp
mov
gs
mov
vmovhps
pushl
mov
pop
add
popa
stos
and
mov
inc
out
jnp
bound
call
xor
dec
push
push
nop
push
mov
xor
push
xchg
filds
jns
ja
mov
inc
data16
shrl
add
mov
add
mov
test
add
subb
fdivrl
insl
in
add
sbb
xor
sbb
subl
aas
mov
loop
das
push
jb
lret
sub
jg
out
mov
jecxz
and
cwtl
pcmpeqd
into
cmp
sub
call
sub
out
ds
aam
pushf
cmp
iret
fildl
movsb
mov
imul
loop
std
movsb
movsl
push
cmp
mov
sub
das
in
jmp
or
jbe
push
sbbl
test
add
xor
mov
mov
sbb
in
loop
push
fcoml
push
pop
cmpsl
insb
cmc
or
dec
fcoml
pop
pop
lds
lock
inc
clc
arpl
out
lock
outsl
push
ds
inc
imul
cld
sbb
inc
lock
fstpt
inc
xchg
or
fisttpl
out
ds
mov
and
sub
pushf
push
cmp
cmpsb
repnz
fisttpll
and
mov
cmp
xor
sbb
mov
mov
aam
cli
aad
sub
cmp
enter
pop
loope
fs
sub
rcl
push
fdivl
mov
mov
out
add
jns
cwtl
push
scas
inc
je
push
jmp
inc
push
sub
xchg
outsb
cmpsb
push
mov
in
hlt
ret
lock
lss
pop
xchg
or
mov
dec
or
sub
push
dec
clc
movsl
movsl
sahf
movsb
mov
mov
sub
sahf
xor
sahf
in
loopne
loopne
adc
add
pop
sbbl
inc
push
cmp
cmp
scas
leave
rolb
lcall
push
and
xor
std
push
xor
sarl
push
pop
flds
xorl
add
and
and
sub
stos
push
int3
push
sub
sbb
or
xchg
push
xchg
cltd
xchg
pop
outsb
ljmp
in
sub
stc
pop
add
arpl
je
aam
add
mov
gs
add
cwtl
outsl
mov
xchg
or
mov
inc
fnstcw
insb
push
incl
mov
or
in
add
mov
mul
jmp
xchg
test
add
jl
jmp
or
cs
push
xchg
lcall
mov
mov
xchg
imul
clc
xchg
dec
sub
cmova
mov
fsubr
fisttpl
mov
je
pop
pop
cmp
mov
bound
negl
xchg
pushf
sbb
stos
lods
push
inc
jmp
xchg
mov
pusha
sarl
fcmovbe
das
cmovp
insl
adc
fbld
sarl
repz
sbb
std
divl
mov
pop
adc
mov
in
jl
out
arpl
mov
sub
dec
jg
out
mulb
pop
fiaddl
test
bound
push
inc
xchg
fcompl
inc
aas
imul
cwtl
cltd
stc
jge
adc
iret
filds
loope
stos
lahf
mov
rcrb
mov
int
cmp
inc
add
incb
es
adc
jle,pt
iret
xlat
jne
cwtl
sub
int3
lds
outsl
int
lcall
js
call
xchg
jnp
sbb
xchg
sbb
cs
mov
jo
hlt
mov
or
add
add
add
mov
cmpsb
jl
sbb
mov
les
sbb
inc
jbe
sbbb
jmp
adc
and
lds
mov
pop
out
push
icebp
cli
xor
addb
pop
pop
lret
and
cmc
sub
adc
and
pop
test
aam
sbb
inc
or
add
lods
mov
in
or
adc
or
jge
xchg
mov
mov
xor
not
and
subl
inc
xor
dec
and
inc
inc
loopne
cwtl
call
jecxz
stos
ja
cmp
mov
jnp
movsb
sbb
fcompl
push
mov
jbe
popf
mov
icebp
or
ret
pop
pushw
repnz
mov
and
xchg
lcall
ljmp
cmp
test
sbb
stos
outsb
dec
adc
mov
mov
mov
mov
adc
inc
xor
pop
adc
in
adcl
fs
mov
sub
push
dec
cld
pop
cltd
sub
fimull
shll
test
aaa
adc
enter
add
fisubrs
dec
aam
or
dec
test
aam
xchg
in
inc
sub
insb
inc
ret
inc
loop
int3
xchg
enter
sti
out
jb
jmp
mov
sub
dec
aas
adc
arpl
loop
adc
movsl
xor
xchg
addb
scas
iret
lret
push
mov
pop
inc
inc
pop
rcrl
frndint
notl
sbb
das
and
jle
int3
push
sbb
jb
lock
mov
push
mov
inc
pop
shrl
and
cmp
mov
jns
mov
sbb
jle
int3
push
sbb
jmp
dec
rorl
adc
lcall
sbb
clc
pusha
loopne
jl
ret
lret
ljmp
jb
push
rolb
sub
sbb
pop
lcall
fs
fcompl
mov
push
mov
imul
mov
push
arpl
ja
ja
jbe
sub
enter
push
jl
cwtl
jle
aas
js
adcl
daa
cs
stos
cmp
aad
xchg
xor
adc
and
mov
and
inc
jbe
stc
push
cmp
jo
pop
leave
cmp
sbb
and
pop
mov
loopne
jo
test
push
xchg
fiadds
pop
stos
fldcw
out
push
push
lods
leave
xor
jae
mov
xchg
push
mov
sbb
subl
movsl
mov
mov
add
popa
pop
sub
repnz
pop
push
jg
in
cmpsb
popf
das
or
aaa
mov
mov
xor
cwtl
push
xor
inc
mov
loopne
ffree
add
into
xor
addl
pop
dec
sbb
cmp
scas
rolb
mov
cmp
sub
pushf
cmpsb
mov
jmp
cmpsb
push
fimuls
add
mov
outsl
out
sub
cmp
pop
and
insl
lret
sbb
xchg
xor
fcmovnb
in
cltd
adc
jne
adc
jb
jo
fdivr
xchg
in
sahf
ja
jg
mov
and
dec
dec
repz
push
xor
loopne
adc
jg
dec
cwtl
pushf
ret
inc
xchg
xchg
jmp
add
or
cmp
in
cli
push
jle
lret
imul
outsb
cmp
mov
jecxz
cmp
or
faddp
in
int
cld
movsl
adc
sbb
movsb
push
pop
xor
mov
mov
push
int
imul
jge
adc
dec
jg
dec
push
inc
push
xchg
stos
fwait
adc
push
in
in
lea
jecxz
push
lea
pop
loop
jge
push
jp
push
outsb
cltd
out
or
sub
dec
repz
loop
mov
mov
rcrb
ficoml
insb
inc
push
inc
xor
add
cmpsl
and
mov
push
mov
xchg
jns
adc
add
dec
dec
xor
adc
adc
enter
sbb
ret
imul
or
and
mov
mov
into
into
xorl
insb
out
lret
out
mov
sar
adcb
popa
xchg
or
notb
sti
ror
or
bound
sbb
divl
cmpsb
lret
mov
enter
dec
or
orl
sbb
push
fwait
out
cmp
ja
xchg
mov
xchg
mov
mov
hlt
fistpll
shlb
scas
sbb
lahf
shrb
movsl
cwtl
mov
mov
adc
lods
popf
lret
inc
xchg
bswap
cwtl
lret
stos
xchg
jne
cmpsb
jp
mov
sarb
iret
mov
and
xchg
adc
aad
gs
incb
lret
xchg
js
xor
cwtl
in
xchg
dec
out
cmp
repnz
add
stc
add
sub
dec
lret
add
out
jmp
xchg
pop
push
test
imul
xchg
sub
inc
or
mov
adcb
xor
ret
mov
vfnmadd213pd
push
and
shl
add
mov
mov
lock
or
aam
jmp
jo
add
dec
and
and
pushf
inc
cmp
mov
lods
xor
adc
xor
and
loope
je
je
div
cmp
cmp
fcomi
aam
roll
add
sbb
and
push
outsl
popa
push
stos
gs
incb
mov
sub
pop
and
ljmp
leave
leave
ret
pop
add
gs
nop
adc
xchg
jmp
add
in
dec
or
mov
movsb
repz
mov
lcall
rcl
cmpsb
xor
mov
das
pusha
sub
pop
mov
mov
pop
xchg
mov
bound
xor
sub
mov
ret
mov
pop
mov
xlat
ror
inc
loope
ss
gs
fsubrs
clc
jns
adc
jp
inc
gs
int
and
cmpsb
dec
mov
and
ljmp
cld
repz
jmp
mov
aas
outsb
movsb
push
xor
jno
mov
xchg
mov
xchg
pop
mov
push
jl
out
adc
shl
or
pop
ss
cld
test
cmp
imul
inc
cmc
shl
push
sub
clc
pop
sbb
insl
test
decb
push
mov
cmp
dec
out
fiaddl
testb
in
addr16
cmp
inc
lds
in
or
mov
fstl
mov
daa
jl
lods
jl
lds
mov
or
fbld
sub
aad
xchg
mov
xorl
test
sahf
cmovno
rcrl
sub
xorl
and
lock
cmpsl
inc
fwait
mov
in
mov
mov
pop
inc
popa
in
fstpt
scas
ljmp
dec
pusha
inc
push
aad
cmp
fs
popf
loop
xchg
or
dec
mov
pop
les
push
inc
aaa
adc
fidivrs
cld
aas
insl
fwait
sbb
shll
jl
data16
iret
push
lahf
rolb
pop
xor
mov
push
lcall
dec
mov
push
jmp
imul
cmpsl
push
inc
dec
mov
inc
inc
mov
adc
test
jecxz
in
push
popa
or
rcl
or
dec
mov
cmpsb
loop
sbb
sti
and
clc
jo
push
push
pop
outsl
outsb
xchg
jle
imul
dec
inc
sub
xchg
xchg
mov
leave
mov
mov
jnp
or
sub
push
scas
das
mov
int
in
fwait
aad
sahf
lret
pushf
mov
push
mov
adc
daa
lods
adc
ficompl
pop
dec
inc
jo
les
xchg
jl
push
cmpsb
pop
and
sbb
push
outsl
jle
adc
and
cmp
fst
xchg
lret
inc
xchg
mov
outsb
bound
movl
es
and
ds
xchg
xchg
pop
xchg
pushf
outsb
and
shlb
push
xlat
xchg
xchg
imul
ret
or
das
adc
test
stc
jmp
pop
scas
sbb
add
sbb
cmp
aam
dec
rcrl
xor
rcl
xchg
out
sub
sub
add
imul
clc
int3
lea
sbb
hlt
sub
and
and
mov
in
sbb
ret
aam
insb
fwait
rcll
aas
adc
jmp
push
xor
mov
mov
or
jecxz
je
sbb
lock
outsl
mov
jle
outsl
adc
push
fs
xor
or
mov
scas
mov
sbb
pop
sub
pushf
insb
jae
push
imul
add
mov
fdivs
add
hlt
mov
mov
data16
test
pop
sub
mov
insb
rorb
push
push
push
test
dec
add
jmp
fimull
pop
lea
popf
sub
push
push
cmp
xor
out
scas
jmp
dec
jo
xor
push
dec
push
add
mov
sub
andl
xor
adc
ss
test
lcall
jae
rcl
mov
mov
mov
inc
leave
loopne
insb
push
sbb
sbb
dec
and
dec
cmp
fiadds
jne,pn
pushf
jecxz
popa
jnp
jae
bound
ffree
call
pusha
and
shl
mov
es
das
aam
or
xchg
jp
data16
icebp
push
fstpl
dec
pop
lcall
pop
jge
aaa
popf
mov
adcl
in
movsl
movsb
popf
sub
and
jecxz
inc
dec
cmp
jae
in
inc
sbb
xchg
frstor
pop
ds
hlt
imull
dec
pusha
and
test
fisttpl
push
or
sbb
or
mov
or
cmp
loopne
push
mov
mov
mov
jno
add
aas
mov
loopne
js
or
cmp
std
jge
test
and
iret
popf
cwtl
or
lcall
xor
hlt
rcrl
roll
and
insb
lds
pop
mov
xchg
shll
xchg
std
iret
pop
stos
outsb
cwtl
shrl
stos
pusha
mov
test
pop
or
iret
jge
inc
leave
inc
imul
insb
mov
cmp
leave
incb
jg
pop
lea
dec
pop
lret
inc
enter
cs
icebp
mov
dec
pop
and
fisttpl
dec
mov
adc
push
into
push
add
enter
xchg
push
lock
inc
push
jp
add
scas
mov
fidivrl
movq
in
nop
push
aam
xor
mov
mov
or
and
mov
out
aad
add
ds
addl
xlat
int
popa
sub
ja
addr16
outsl
enter
jp
mov
enter
xor
pop
xor
cltd
add
les
add
out
es
adc
addr16
xlat
call
mov
dec
xchg
pop
mov
ljmp
adc
mov
xchg
xor
adc
mov
jbe
mull
sbbl
mov
loope
cmp
pop
jmp
jmp
sbb
jno
daa
mull
not
xor
aad
mov
push
push
stos
fdivrl
or
push
xsha1
cmpsb
or
popa
jmp
push
or
xchg
jge
orl
sub
xchg
int3
inc
jae
leave
jb
add
dec
adc
sub
xchg
xchg
gs
faddl
mov
lret
dec
bound
sub
mov
or
adc
into
arpl
cmp
lcall
dec
lea
daa
add
not
mov
xchg
push
test
dec
pop
and
xor
pushf
mov
adc
sub
mov
fstps
pop
clc
lock
das
jg
add
dec
out
ljmp
ret
or
cli
push
cmpsl
adc
mov
out
xor
pop
js
xchg
push
sub
insb
test
mov
lret
xor
out
fcoml
sahf
push
ss
cld
or
test
fsubrl
cs
inc
xlat
cltd
aam
test
int
dec
aaa
jbe
jge
nop
sar
add
loope
data16
out
or
movsb
lds
pop
aaa
push
cmp
lcall
in
mov
adc
push
jmp
clc
xchg
rorl
mov
pop
repz
mov
pop
aaa
pop
cmp
out
xor
sbb
icebp
inc
ja
inc
call
xor
xchg
cwtl
pop
je
clc
addl
lea
aas
add
mov
call
or
jmp
arpl
in
dec
jle
out
mov
mov
cmpsb
in
lds
jl
test
pop
ljmp
sbb
or
mov
repz
pop
xchg
fisubl
add
inc
cmp
sti
mov
and
arpl
je
xchg
add
push
inc
xchg
es
loope
jb
icebp
shll
add
pop
inc
mov
repz
dec
movq
in
mov
int
dec
movsb
insb
push
push
push
lret
mov
mov
pop
dec
int
call
cwtl
mov
movsl
cmpsl
mov
or
setae
pop
push
push
mov
ljmp
fisttpll
addr16
mov
sub
mov
xorb
jmp
adcb
push
mov
pop
out
mov
cli
jg
scas
loopne
xor
cmpsl
loop
addr16
stos
or
cld
pushf
into
add
nop
pop
or
sarb
mov
add
gs
jno
nop
hlt
push
xchg
xchg
movsb
leave
mov
mov
xor
push
lahf
arpl
lods
sti
stc
dec
std
inc
pop
rcrl
xchg
out
inc
push
dec
push
rolb
jo
jle
sub
je
mov
fisttpl
movsl
sti
nop
int
push
pop
mov
cmpl
std
inc
push
xchg
jp
mov
jl
cli
popf
push
stc
cmp
pop
sti
mov
xor
push
jb
arpl
sbb
ret
cmp
xchg
push
stc
xchg
jns
jle
bswap
dec
orb
cmpsb
in
pop
mov
push
mov
pop
test
sbb
stos
outsl
mov
scas
js
jmp
nop
ret
into
and
into
inc
xchg
cld
test
push
lock
lods
sub
jnp
pushf
out
adc
popa
dec
inc
ret
fwait
lcall
mov
add
inc
ja
movsl
jg
jns
mov
jge
ret
push
dec
mov
or
sub
dec
adc
xchg
sahf
pop
push
outsl
pop
pop
pop
xchg
xor
or
or
int
lds
xchg
jmp
sub
out
ds
xchg
into
mov
gs
fsubrl
adc
sub
fdivr
mov
pushf
dec
adc
inc
add
mov
loope
xor
pop
add
repnz
push
add
adc
pop
mov
push
daa
aad
and
test
and
add
add
mov
lret
pop
mov
cmp
jne
inc
cmpsb
repnz
sub
sarb
in
adc
ja
lcall
xchg
pop
dec
pusha
mov
dec
push
lea
scas
push
adc
aam
mov
mov
mov
sbb
icebp
sub
mov
addl
ss
dec
cmp
jmp
cs
sub
repnz
add
insb
mov
xchg
adc
icebp
inc
popa
mov
mov
mov
in
lea
xchg
test
pop
clc
call
push
je
shll
out
push
mov
inc
inc
mov
jo
cmp
es
loope
ret
das
pop
add
push
mov
arpl
xchg
imul
xor
mov
push
mov
leave
cmp
movsl
push
xchg
mov
std
scas
pushl
adc
pop
add
std
adc
push
gs
in
sti
push
aaa
in
fxch
inc
jns
orb
iret
gs
jb
inc
add
or
rol
enter
imul
enter
into
pop
jnp
xor
xchg
mov
inc
mov
cmpsb
mov
rcll
les
stos
xchg
je
push
xchg
out
inc
rol
sbb
fwait
and
and
and
test
hlt
and
xor
push
arpl
adc
xor
adc
push
shr
out
sbb
clc
idiv
push
sbb
in
and
fwait
add
push
jb
add
cli
add
cmc
daa
lahf
mov
clc
ds
xchg
fwait
xchg
jle
jb
xchg
sbb
pusha
mov
lahf
pushf
cltd
fcoml
xchg
mov
sub
jmp
mov
cmp
bound
cli
jmp
cltd
lahf
into
xlat
fidivs
mov
lods
test
stc
xchg
sub
jnp
sbb
hlt
mov
pop
shll
shld
in
loop
fwait
outsb
ljmp
pop
jmp
or
add
or
lds
and
cwtl
mov
nop
jecxz
or
sub
inc
add
mov
cltd
jmp
lret
ljmp
je
mov
outsl
inc
mov
leave
pop
ja
jle
push
push
sbb
call
jmp
sbb
pop
movsb
repz
pusha
inc
push
xchg
incl
jno
nop
mov
jle
sub
xchg
shrb
dec
jb
outsl
daa
out
or
sub
aaa
push
add
xchg
jmp
gs
loope
or
or
jl
jno
push
push
sbb
stc
xchg
jp
inc
pop
in
scas
sub
in
mov
cmp
pop
dec
in
insb
jg
pop
aaa
inc
mov
lret
scas
jns
test
push
scas
or
push
imul
mov
testb
inc
mov
push
pop
sbb
jp
sub
setno
jle
scas
xchg
lock
ja
mov
jle
leave
loop
sub
adc
and
fs
xchg
incl
les
xor
test
lret
inc
and
sbb
jne
std
shlb
mov
jge
jae
or
xor
xchg
sbb
iret
icebp
test
mov
data16
sub
outsb
jae
test
jo
call
push
and
fdivrs
dec
imul
sbb
add
mov
or
and
in
mov
jno
adc
ffree
push
addr16
out
or
xchg
xor
cld
cmc
das
jle
xchg
clc
sbb
insb
sub
mov
adc
fstps
jnp
push
mov
sub
inc
pop
pop
pop
xchg
pop
das
lcall
outsb
or
jbe
shrb
push
xchg
dec
mov
jne
pop
adc
dec
mov
cld
loope
and
and
jmp
outsl
icebp
mov
mov
pop
or
sarb
jb
insb
int
fwait
ljmp
loope
cmpsl
and
push
call
mov
std
jge
popf
pusha
rcl
movsl
pushf
pop
shll
sbb
stos
jae
cmp
mov
push
adc
or
sbb
sub
imul
inc
leave
mov
pop
popa
loope
adc
cmpb
dec
inc
sub
xor
or
jnp
jnp
inc
fnstcw
mov
lahf
fwait
dec
pushf
mov
pop
mov
pop
and
inc
dec
arpl
out
sbb
jbe
adc
xor
mov
sahf
dec
mov
cs
xchg
shll
xchg
das
and
aam
aam
mov
xor
and
mov
lods
jo
lds
icebp
add
stos
sbb
cmpsl
or
mov
punpckhbw
mov
add
mov
dec
xchg
ljmp
push
jne
mov
pop
sahf
sti
cld
cwtl
add
jne
and
sub
fidivrl
jecxz
cli
imul
in
aad
dec
mov
shrb
push
jns
fwait
data16
xchg
push
and
decb
std
leave
stos
outsb
mov
jp
outsl
movsb
xchg
repnz
aaa
dec
xlat
iret
and
add
and
jle
dec
cld
mov
adc
mov
jmp
loopne
jno
lahf
push
fsubrl
jbe
fcmovnb
gs
xor
mov
pop
outsl
les
xor
inc
scas
or
or
and
mov
loope
pop
add
mov
cld
xchg
daa
mov
adc
stos
jp
inc
pop
lock
push
dec
dec
js
cmp
add
sbb
or
in
push
stos
cli
scas
je
orb
hlt
pop
test
pop
xor
jg
mov
lcall
pop
lods
pop
cmc
jge
xlat
ficomps
addr16
pop
push
insl
xor
push
xor
popf
lahf
add
mov
test
cld
mov
ja
das
add
movl
add
loope
cmp
cmp
hlt
popl
or
add
inc
xchg
fmuls
fwait
dec
testl
pop
sti
cmp
dec
push
insb
scas
or
std
dec
outsb
imul
stos
inc
insb
xor
or
sbb
or
mov
lcall
jne
movsl
sti
addr16
imul
dec
push
stos
pusha
lcall
dec
test
dec
test
add
das
xor
inc
mov
daa
aam
fdivr
lods
inc
jnp
enter
jns
xchg
sbbl
pop
imul
in
xor
stos
fs
xchg
iret
mov
call
jl
xchg
mov
mov
ljmp
cltd
xor
mov
xchg
mov
cmp
jmp
lahf
cmp
into
ds
jg
out
add
aas
cmpsb
sub
push
push
add
mov
lods
ljmp
not
inc
in
jmp
fucom
pop
add
mov
mov
pop
int
mov
mov
sbb
and
xchg
je
push
jns
enter
cmp
xchg
gs
inc
pusha
sbb
mov
hlt
scas
cwtl
icebp
int
add
js
rorb
jecxz
pop
repnz
push
movsl
push
or
mov
enter
sub
mov
pushf
jb
pop
xchg
lret
mov
outsb
gs
imul
test
jbe
pop
dec
stos
ds
lea
pop
adc
in
testl
adc
mov
adc
addr16
hlt
jmp
mov
cmp
scas
xchg
icebp
mov
mov
aam
xor
push
push
aad
add
cmp
jns
add
sbb
mov
pop
dec
negl
or
inc
callw
xchg
dec
xor
sub
dec
xchg
dec
mov
jae
push
xchg
cmpsb
es
or
nop
in
pop
aas
push
insb
enter
pop
ss
popa
sub
ja
cltd
jnp
dec
mov
in
movsl
aam
mov
adc
shll
jle
lods
push
pop
fs
mov
loop
lcall
test
push
in
ret
fdiv
stc
fadds
push
and
jo
sbb
sub
insl
xor
stos
in
mov
icebp
push
adc
inc
or
inc
or
outsb
neg
mov
xor
mov
inc
pusha
or
scas
xor
lret
jno
mov
fwait
popf
or
pop
nop
addb
shl
add
push
fistps
mov
dec
stos
rolb
daa
insl
and
mov
push
xchg
dec
rcrl
lahf
arpl
imull
mov
pop
pop
inc
and
cld
mov
in
jl
insw
xchg
loopne
mov
movsl
ret
lds
jmp
sbb
int
push
cmp
xchg
push
in
inc
adc
pop
mov
mov
ficomps
addr16
dec
imul
in
inc
sbb
cmp
fwait
sub
push
dec
cmp
pop
add
std
stc
sub
adc
mov
xor
pop
jne
ds
add
shl
lret
push
inc
fcomi
jo
stos
mov
pop
test
push
mov
call
mov
xchg
push
arpl
testl
pop
xor
pusha
lods
add
bound
adc
dec
xor
sub
mov
cmp
push
fwait
out
bound
outsl
mov
pushf
sub
sbb
ds
das
std
pop
add
movsb
push
jg
popf
dec
lret
mov
repnz
lods
jmp
shlb
inc
pop
jp
inc
imul
dec
push
mov
cmc
jno
fstpl
fwait
call
aad
dec
xor
push
and
movsl
jl
pusha
int3
pop
sbb
lahf
aam
xor
and
lods
out
or
mov
loope
negl
or
pusha
int
pop
jno
push
mov
and
lods
cmpsl
jbe
mov
into
repnz
aad
out
daa
stos
cld
call
lods
adc
bound
xlat
sub
cmpsb
outsb
cmc
pop
fdivl
jge
out
int3
rorb
xchg
xor
sbb
pop
sub
lods
insb
adc
mov
fsts
add
xchg
dec
push
sbb
pop
cmpsl
add
jb
add
movsl
mov
test
dec
jg
nop
shlb
out
jmp
mov
pop
jbe
pop
pushf
jnp
and
daa
inc
hlt
out
sbb
icebp
mov
jmp
mov
fnstcw
and
sbb
mov
sbb
mov
or
cs
or
dec
lods
push
loope
sbbl
mov
js
push
adc
divl
dec
jp
xor
and
popf
das
push
lret
push
xchg
mov
cmp
jno
push
cli
xchg
ja
test
pop
dec
push
repz
xor
sub
iret
fisubrs
pop
push
mov
mov
xchg
test
add
jnp
mov
pop
mov
orb
and
out
test
dec
mov
xor
pop
mov
out
and
xchg
jg
xchg
jp
adc
loope,pt
fdivrs
cmp
jp
mov
vpcomub
mov
lahf
std
mov
add
data16
cmp
repz
ret
into
std
xchg
in
fldt
ja
or
jb
decl
inc
xchg
dec
push
das
push
jl
stos
sahf
icebp
mov
dec
xor
cmp
loopne
jae
push
mov
xchg
scas
mov
push
jns
popa
dec
and
cld
ljmp
or
sbb
push
cmp
push
fidivrl
mov
lods
jno
inc
dec
mov
mov
and
push
jl
aad
les
cmp
repnz
sbb
cwtl
xor
fstps
xchg
dec
int
scas
sbb
loopne
push
rcrl
mov
pop
cmp
mov
jb
out
and
shll
sub
pop
outsl
dec
jns
adc
data16
add
int
notb
andb
nop
or
inc
lahf
inc
or
nop
repnz
cmp
mov
adc
fisubrs
inc
xor
mov
into
dec
ljmp
push
push
mov
adc
lret
fwait
mov
jne
test
cmp
pop
in
jp
xchg
rcr
sahf
pop
repnz
inc
rclb
sbb
gs
add
icebp
loope
sahf
in
sub
add
pop
inc
and
cmp
sbb
xor
es
inc
inc
sarl
sub
rcll
dec
sub
mov
inc
inc
dec
mov
push
push
inc
andnps
jl
xor
and
dec
in
fistps
out
adc
push
imul
cmp
rclb
int
or
outsb
icebp
cmpsb
jae
mov
adc
ja
push
jne
sub
repnz
jp
xor
jle
cltd
add
dec
aad
scas
mov
mov
shlb
xor
je
mov
fldcw
and
loopne
and
in
lds
inc
xor
sbb
call
cltd
xchg
out
push
jnp
mov
pop
xlat
outsb
push
std
ja
lds
cmp
add
push
add
dec
add
push
jne
sbb
push
test
xchg
cltd
std
push
lahf
idivb
das
jle
stos
cmpsl
imul
xor
sbb
sarb
fwait
pop
mov
xchg
outsb
mull
fucom
add
shll
loop
cmp
inc
xor
jl
sbb
sarl
pop
push
dec
pusha
sbb
sbb
jb
mov
std
adc
inc
adc
test
xor
insb
filds
mov
sbb
das
jo
inc
mov
adc
cli
or
add
negb
mov
arpl
movsb
jbe
addr16
enter
fldenv
test
test
fxch
cmp
mov
addb
mov
scas
sbb
inc
lock
data16
out
shrb
cmp
mov
inc
dec
xlat
pushf
enter
push
mov
and
mov
mov
push
mov
scas
xchg
mov
and
stos
mov
jb
add
xor
dec
out
cltd
pop
iret
call
sbb
jl
xchg
sbb
loopne
cmpsl
testb
out
and
sub
cltd
mov
dec
adc
out
pop
fimuls
mov
in
cmpsl
fists
cmp
add
test
mov
fcoms
ret
jle
jbe
sbb
mov
mov
scas
in
xor
xor
leave
jnp
in
pop
mov
shlb
lahf
jnp
cmp
cmp
and
dec
cs
cmp
hlt
push
sbb
cld
lods
add
movups
or
int3
in
leave
xchg
sub
cli
out
pop
std
aad
dec
out
add
loop
xor
rcrb
popa
movsb
ret
sub
sub
cmc
sbb
fisttpl
push
loop
in
shll
insb
and
dec
aas
into
mov
iret
pushf
inc
cld
scas
call
das
popa
lods
stc
xchg
mov
push
aaa
addl
in
aaa
sbb
lcall
jae
push
popa
in
cmp
cmp
aad
xor
imul
sub
inc
jmp
shll
or
xchg
popf
scas
fadds
ficoml
push
mov
ficoml
inc
notb
ss
adcl
loopne
sub
movsl
not
xor
or
xchg
subb
cmpsb
loop
rorl
dec
mov
inc
scas
mov
ss
inc
sbb
pop
call
cwtl
cld
mov
inc
cmp
popf
lock
xor
xlat
or
cmp
xor
mov
mov
and
jnp
imul
pop
push
scas
fiaddl
arpl
mov
inc
mov
lret
bound
cwtl
jg
add
sbb
cmp
xchg
fsubs
jbe
in
mov
adc
xchg
inc
sub
dec
movsl
cltd
mov
sub
and
frstor
push
and
iret
push
fists
lret
cmp
inc
mov
inc
shrb
insb
or
out
pop
pop
inc
insb
inc
out
pusha
inc
add
cmpsl
inc
pop
arpl
cli
cmpb
jns
lods
add
mov
fidivrs
mov
inc
rcl
cld
scas
rolb
dec
in
jl
fdivr
mov
push
or
test
mov
mov
and
jb
call
mov
ljmp
loop
xor
sub
clc
pop
inc
cmpsl
adc
loopne
push
out
push
lahf
cmpl
pop
aas
adc
cs
mov
xchg
sbb
mov
jbe
xchg
mov
xchg
sub
mov
outsb
xchg
and
xchg
insb
mov
ficoml
and
sahf
sbb
scas
pop
into
es
pop
inc
dec
jecxz
or
movsl
dec
sbb
scas
adcl
jns
or
and
jl
shll
push
cld
cwtl
mov
dec
sahf
jmp
out
lahf
nop
and
popa
int3
lcall
mov
scas
add
sbb
icebp
sub
je
xor
jge
fildl
out
loope
sub
jmp
jbe
fcmovb
add
notb
cs
push
adc
mov
inc
adc
jo
push
mov
adc
nop
decb
outsl
inc
cmpsl
inc
stc
xchg
mov
sub
pop
in
push
rcrl
mov
mov
int3
pop
lcall
bound
sub
in
cmp
xchg
sbb
rcrb
testl
lahf
mov
and
fdivr
xor
ja
mov
incl
or
out
lds
or
adc
sti
js
hlt
lret
push
ja
lahf
repnz
jp
mov
cli
sbb
aam
dec
arpl
jg
ret
xor
xchg
imul
xchg
jmp
ret
pushf
in
pop
mov
add
test
gs
int
roll
out
push
sbb
dec
aas
jb
or
loop
cmp
dec
xchg
mov
dec
scas
xor
mov
fisttpll
stos
ret
and
xchg
xor
push
sbb
add
fisttpl
add
lret
mov
pop
or
lea
sub
popa
mov
cmpsl
andl
push
fs
rorl
sub
push
aad
shlb
cmpsb
sbb
cmp
mov
ss
dec
jne
jo
mov
xor
fdivs
test
mov
fbld
in
mov
cmp
add
xchg
aam
sbb
inc
js
fidivrl
repnz
jmp
jbe
jnp
in
mov
xchg
push
adc
mov
inc
adc
lds
sti
lcall
arpl
lahf
inc
mov
sbb
scas
xchg
popa
gs
or
shlb
sar
cmp
dec
out
aaa
fwait
adc
in
or
int3
movsb
js
mov
pop
ret
and
shl
inc
ret
push
and
mov
cmp
lret
loop
inc
or
sub
push
idivb
mov
popf
or
popa
shr
ja
xchg
pusha
pushf
nop
adc
lret
mov
pop
ja
jb
divl
push
aam
in
pop
cmp
jo
clc
mov
sbb
arpl
into
xor
arpl
jo
xchg
xor
jl
cltd
inc
shrl
jb
data16
add
popf
sub
lock
inc
out
and
aad
shll
out
aas
jmp
pop
incl
bound
mov
fsub
xor
cwtl
jo
pop
loopne,pt
out
pushf
clc
fs
insb
stos
jae
push
sti
daa
pop
rcrb
push
push
cmp
xlat
int
ret
xor
sub
out
scas
xchg
imul
push
loop
dec
inc
mov
sub
cwtl
movsl
mov
sub
sbb
inc
lds
pop
mov
ja
add
aam
adc
add
push
mov
je
lret
lss
push
out
mov
pop
sub
cld
enter
bound
lret
push
adc
pop
andl
xchg
pop
pop
test
fisubrs
ljmp
data16
sub
jae
xchg
imul
cmc
mov
loope
sbb
push
ds
test
sbb
lods
in
icebp
das
movsb
bound
dec
ss
cmp
and
je
shll
adc
fwait
inc
mov
mov
fwait
sub
jo
lods
mov
jns
sbb
daa
divl
int
nop
xchg
mov
mov
mov
cmpsl
mov
addr16
xchg
adc
dec
insl
stos
fimuls
in
mov
push
inc
stos
mov
lock
dec
inc
scas
pop
lret
repz
lods
sub
and
sub
ljmp
ret
sub
movsl
mov
mov
into
xor
mov
nop
push
xor
mov
cmc
lret
int3
jns
add
in
push
rol
addr16
dec
scas
lods
ja
push
cmpsb
mov
mov
lret
idiv
les
inc
in
jp
daa
test
out
mov
shlb
inc
jle
push
mov
jmp
push
mov
lea
mov
std
rclb
sbb
and
sbb
inc
dec
insl
icebp
addl
out
in
insb
xchg
pusha
aaa
popf
shll
sub
adc
dec
xchg
and
lret
mov
addb
divl
adc
ljmp
inc
push
in
vmwrite
fcoml
nop
cmp
nop
das
lcall
in
out
mov
cmp
add
jle
mov
mov
cs
dec
divb
lods
fcmovne
mov
mov
into
sbb
rolb
icebp
xchg
xor
cmp
sbb
sub
jmp
pop
clc
rcrb
sbb
loopne
push
out
or
pop
fidivl
shl
lds
dec
jnp
jae
fisubrl
mov
mov
xor
fisubl
and
sub
notb
adc
mov
test
or
loopne
and
stos
cmp
loop
sub
test
pop
stc
jg
lods
test
push
inc
pop
into
bswap
mov
test
push
arpl
or
jae
lcall
subl
push
or
fidivl
ficomps
adcb
scas
and
adc
jle
das
cmpsl
sub
call
sbb
sbb
xor
nop
adc
dec
popa
dec
dec
pop
ja,pn
adc
test
aam
jno
lcall
adc
mov
into
jl
fldl
mov
ljmp
pusha
jnp
out
shrl
cmc
cmp
fs
pop
push
into
aas
cmc
xor
mov
and
ret
mov
lcall
enter
roll
jne
mov
ljmp
adc
out
adc
clc
stos
cmp
ja
mov
lock
push
dec
daa
cwtl
imul
inc
mov
jl
or
cmc
jmp
movsl
negb
lock
dec
inc
stos
mov
das
mov
mov
ljmp
lods
sar
jae
jbe
inc
mov
push
outsl
xchg
cmpsb
xlat
int
push
push
enter
gs
push
cmp
sahf
inc
pop
inc
add
inc
mov
outsl
mov
and
lods
out
add
js
jl
roll
addr16
repz
mov
push
sbb
xor
shlb
jae
sahf
psrlw
mov
sub
les
lods
rorb
cmpsl
cs
pop
adc
xchg
mov
jl
or
ror
sub
dec
test
data16
js
mov
loope
test
sub
jl
daa
mov
test
outsl
fmul
lds
jnp
fnstcw
dec
fsubp
mov
or
stc
call
mov
add
lds
stos
stos
jg
add
push
sbbl
jbe
movsl
dec
cmc
cmc
or
mov
mov
iret
jae
jle,pt
cmp
cmp
pop
cmpsb
jmp
fincstp
cmovns
shll
sbb
mov
ds
mov
mov
pop
jbe
call
mov
mov
jne
inc
jmp
mov
pop
subl
push
jb
inc
and
aas
xor
lcall
test
das
jmp
pop
cmpsb
scas
fisubrl
lret
addr16
pop
lods
and
addb
jle
stc
sub
mov
mov
mov
cmp
inc
or
xor
nop
jne
add
cwtl
sbb
rorb
cs
jle
loopne
push
iret
add
popa
mov
mov
xchg
jo
enter
xchg
jae
jbe
dec
mov
in
popf
subb
pushl
enter
arpl
xlat
faddl
lret
inc
sbb
gs
add
es
fidivl
shl
mov
daa
and
mov
pop
daa
mov
lods
and
sbb
mov
lods
ds
mov
mov
add
idivb
jne
add
sbb
sbb
jmp
mov
imul
mov
daa
in
mov
icebp
add
push
mov
push
pusha
sbb
mov
loopne
mov
loop
add
push
mov
pushf
out
fpatan
dec
xor
fld
insl
dec
iret
les
mov
fwait
mov
out
out
push
jl
or
stc
mov
jns
add
stc
lea
cwtl
jle
rcll
jl
inc
loope
sbb
cmpsl
insl
pop
add
xchg
fcmovnbe
hlt
and
es
mov
mov
adc
cmpsl
cmp
push
push
jbe
inc
pop
pop
sti
insl
inc
jg
and
pop
testl
pop
xchg
dec
sbb
xor
xchg
bnd
dec
push
sarl
dec
or
jns
jp
cld
mov
push
into
xor
and
stc
xor
leave
aam
sbb
cltd
add
movsb
xchg
or
aad
outsb
sub
jl
std
xor
or
sub
and
repnz
xor
add
cmp
and
icebp
mov
imul
and
ret
fimuls
xor
push
leave
cmp
pop
insl
jae
cwtl
repz
movsl
in
jb
dec
std
fs
jecxz
cmpb
xor
nop
xchg
mov
xchg
mov
cmp
pop
les
sub
insl
in
add
push
test
idivl
loopne
std
hlt
cld
dec
dec
add
sahf
fcoml
js
inc
repnz
shlb
dec
ljmp
sbb
mov
xchg
sbb
jb
mov
xor
out
mov
stc
xor
dec
loop
mov
mov
insb
adc
mov
scas
mov
mov
push
iret
imul
push
or
add
jecxz
sbb
in
sub
pop
or
xor
push
lahf
ja
inc
rcr
scas
xor
enter
mull
rsm
mov
iret
in
mov
in
loop
int
cmp
mov
test
inc
jle
sti
sbb
dec
mov
orb
outsb
icebp
jmp
sbb
add
pop
fdivs
insb
clc
ja
rol
mov
add
dec
pop
outsb
insl
cltd
enter
popa
fdivl
adcl
movsb
lret
adc
lds
sub
xor
hlt
orb
jle
bound
aaa
jl
pop
in
or
jb
shll
mov
sbbl
xor
ret
call
xor
loope
push
mov
lea
pop
jecxz
lea
xor
push
add
pop
ret
ss
adc
mov
sti
es
dec
sbb
dec
std
dec
pop
sub
xor
adc
outsl
lret
or
add
cmp
out
push
ret
stc
push
sbb
aam
test
jp
out
fisttpll
cmp
jl
xchg
orl
fisttpll
pop
out
in
cmp
out
aas
mov
nop
data16
js
aaa
add
gs
mov
sub
adc
popf
inc
test
push
or
pop
pop
cmpsl
xor
or
dec
push
xchg
push
or
out
test
ja
dec
adc
pop
mov
xchg
sub
mov
popa
dec
cmpsb
lret
mov
out
jmp
jb
pusha
xor
out
ljmp
cmp
xchg
mov
cs
mov
pop
clc
dec
mov
mov
dec
jmp
xchg
lret
stos
in
shrb
mov
outsb
in
rcrl
lcall
cmpsl
in
aas
inc
sahf
push
pop
ja
mov
insl
jmp
jecxz
imul
and
std
std
jnp
dec
jge
adc
pop
xor
or
repnz
mov
or
push
push
sub
movl
stc
fs
mov
mov
push
cmp
pop
or
jb
sbb
jmp
mov
jl
push
jbe
cmp
sbb
repnz
xchg
loopne
or
xlat
and
add
push
mov
in
xchg
jmp
arpl
mov
leave
xor
hlt
test
in
ja
cmp
pop
push
or
jnp
jl
dec
and
in
adc
dec
and
pop
and
jp
mov
jno
dec
repnz
xchg
jmp
mov
push
mov
add
jns
sbb
add
arpl
mov
lods
in
jae
cmp
stos
sbb
mov
int3
pop
pop
jmp
pop
pop
sahf
or
cmp
adc
icebp
jl
cmpsl
ret
cmp
push
dec
das
cwtl
cmpsl
add
sub
xchg
es
xor
inc
imul
cmp
jle
scas
loopne
sarl
xor
in
inc
xchg
xor
hlt
sub
lds
jno
dec
adc
mov
mov
decb
clc
xchg
pop
and
xor
or
add
or
push
pop
adc
enter
cltd
jbe
int3
rorl
ljmp
inc
sbb
rorb
mov
dec
std
pop
mov
mov
and
add
xor
cmp
xorl
inc
mov
mov
inc
or
cwtl
jo
cmp
or
daa
roll
outsb
nop
xchg
mov
loop,pn
loopew
ss
jbe
sbb
iret
cltd
je
ret
sbb
mov
dec
stos
inc
cltd
cli
out
mulb
jnp
mov
xor
leave
aam
adc
cmp
pop
sti
xor
sar
outsl
dec
int
je
movsb
subl
das
pushf
mov
pop
orl
aam
les
adc
js
pushl
jmp
lss
out
jp
or
jbe
lds
shr
sarb
popa
jecxz
cs
mov
xchg
xchg
pop
mov
cltd
std
movsl
pop
fldl
jne
sar
cmp
push
jecxz
xchg
mov
in
and
loope
sbb
insl
out
jg
xor
xchg
push
cmp
inc
pop
cmp
add
nop
std
pop
cmpsl
int
clc
aam
loop
sub
and
mov
leave
aas
dec
mov
aam
mov
push
shl
xor
sbb
arpl
jl
xchg
and
stc
nop
add
stc
sbb
pop
inc
add
mov
arpl
xchg
sti
imul
mov
cs
dec
movsl
aaa
push
pop
jnp
popa
mov
mul
sub
hlt
add
iret
push
loopne
loopne
cld
sbb
std
xor
mov
das
and
leave
sahf
jb
add
push
dec
or
call
mov
call
ljmp
fmuls
testl
inc
or
cmp
lcall
cli
mov
inc
pop
rolb
imul
rcrl
loope
xchg
mov
mov
push
sbb
mov
gs
jae
inc
dec
dec
mov
sub
xor
jecxz
and
imul
sbb
adcb
dec
mov
jecxz
popa
sub
mov
test
je
shlb
aam
fldenv
mov
pusha
xor
fwait
int3
push
xchg
dec
sub
fldt
mov
mov
inc
xchg
and
mov
stos
sbb
pop
inc
dec
imul
add
mov
sbb
push
out
xchg
movsl
cmp
call
cmc
daa
cwtl
fdivs
pushf
jae
cltd
dec
push
data16
add
sti
push
push
ficoms
rclb
js
je
cld
xchg
cmp
cltd
orb
xchg
xor
xor
and
sbb
lods
or
ret
push
js
fwait
std
mov
aas
fisubl
pop
fcompl
inc
jp
pop
arpl
std
mov
sbb
aas
mov
scas
in
bsf
cmpsl
and
stos
pop
or
sbb
nop
or
popa
mov
ret
adc
and
call
sbb
fmuls
cmpsl
mov
int3
dec
xchg
cmp
sbb
xchg
mov
rolb
andb
dec
jns
or
jo
dec
adc
iret
mov
insl
push
inc
fs
call
mov
cmp
into
mov
pop
cwtl
add
and
repz
cmp
stos
sub
ret
jle
pop
loope
push
xor
sbb
aas
int
inc
add
jl
jbe
mov
push
and
mov
or
push
fadd
mov
nop
dec
pop
nop
fiadds
sahf
push
inc
fs
sbb
nop
or
shlb
pop
loop
mov
push
std
lahf
and
andl
mov
cmp
adc
inc
jns
repz
out
stc
inc
or
and
cwtl
ljmp
pop
add
jbe
outsb
das
dec
and
in
push
fstp
sbb
jmp
pop
lret
int3
add
stos
out
pusha
jmp
lods
shlb
cmpsb
gs
and
push
mov
cmp
lea
push
lock
dec
xchg
frstpm(287
arpl
push
int3
jle
and
shl
imul
repz
cld
cmc
filds
fst
jae
jl
icebp
cmp
sbb
negb
pop
push
pop
lods
and
dec
mov
pusha
xchg
hlt
jecxz
fnstsw
mov
test
pop
jo
pop
cli
push
inc
std
out
in
cmpsb
arpl
iret
jb
jae
dec
in
pop
into
xor
fistpll
sbb
sub
cli
out
cmp
pop
loop
jbe
xchg
sub
test
mov
cmpsb
movsb
mov
xorl
test
ret
mov
jl
in
and
xchg
insl
or
sbb
pop
loope
mov
add
cmpb
adc
cli
imul
xor
fs
shll
scas
xchg
or
push
adc
hlt
add
sbb
jne
inc
shr
mov
pop
sub
jno
repz
es
aaa
cmp
lahf
adcl
stc
les
add
mov
loopne
inc
notl
or
fisubrl
shll
xchg
int
mov
push
jecxz
dec
lods
outsb
outsb
xor
cmp
push
idivl
jecxz
negb
repz
adc
popa
mov
movsl
pop
test
imul
lcall
and
adc
mov
int3
push
push
insb
inc
pop
mov
inc
push
and
sbb
mov
enter
fsts
pop
imul
sub
addr16
je,pt
or
dec
hlt
add
nop
fdivl
sub
imul
cld
dec
jle
insl
mov
mov
fidivl
jbe
mov
cmp
jge
sub
hlt
stos
dec
jno
push
repnz
outsb
out
mov
cs
xchg
pop
mov
leave
sahf
jp
mov
push
xor
loope
jmp
repz
loop
xchg
mov
in
or
push
fs
sarl
mov
clc
mov
out
call
test
adc
int3
sarl
clc
xchg
sbb
ffree
adc
rorl
repnz
lcall
hlt
or
inc
stos
sub
inc
mov
jle
out
pop
lret
xor
add
or
inc
inc
xchg
call
jle
pop
mov
push
pop
les
dec
ret
rcrb
jle
jbe
fdivrl
ja
iret
pxor
pop
cmp
icebp
shrb
push
jne
add
ss
and
lea
shll
fnstenv
inc
cltd
sbb
fwait
mov
outsl
fucom
cmpsl
fneni(8087
shlb
xchg
fldl
ss
aam
sbb
loope
jno
cmp
sti
mov
pop
test
push
shll
outsl
and
or
sarb
shr
mov
mov
push
loop
pop
addb
ljmp
lock
repz
es
in
cmpb
call
mov
mov
out
int3
loope
enter
mov
cmp
ss
out
mov
pop
jbe
in
test
repnz
iret
adc
rcrl
movl
xchg
inc
lret
mov
xchg
xor
jae
sub
xor
dec
inc
jbe
jo
push
jl
xchg
cmp
lods
and
test
push
cmc
mov
ljmp
jle
lods
mov
sub
sub
xchg
inc
sub
dec
dec
pushf
inc
pop
pop
pop
mov
adc
js
xor
lcall
int3
push
mov
jno
push
imulb
jmp
aam
mov
negb
int
inc
ret
scas
das
adc
sbb
call
fldcw
and
jbe
mov
call
pop
subb
jg
cmp
sbb
jp
lcall
sbb
add
xor
cwtl
iret
mov
loope
daa
dec
push
nop
out
call
inc
lods
jnp
mov
adc
sub
adc
jbe
jne
dec
sti
mov
mov
movsl
insl
pop
xor
lods
mov
sarl
fistpll
mov
lods
aas
push
iret
insb
cwtl
out
test
ljmp
inc
xchg
sti
clc
lahf
flds
into
dec
bound
dec
sbbb
inc
fidivs
subb
negb
test
mov
cltd
in
in
in
mov
stos
fwait
loope
lock
shr
movsb
mov
pusha
or
int
jb
add
jae
out
mov
inc
daa
or
in
mov
push
sbb
pop
cltd
push
ljmp
jo
mov
lods
lods
bsf
sbb
ret
jnp
push
fidivs
imul
movsl
lret
or
mov
xchg
push
lea
mov
fidivrl
jecxz
cmp
jnp
out
push
or
in
ret
pop
push
xchg
mov
lock
les
adc
in
lret
into
xorb
push
inc
lea
insl
mov
test
ret
push
xchg
mov
pusha
ljmp
rcrl
xchg
xchg
sbb
adc
nop
xchg
xchg
sub
cltd
cli
mov
rclb
dec
stc
loopne
out
xchg
or
push
subl
cmp
clc
xorl
adc
cmovl
imul
fistl
xor
sbb
mov
mov
or
jmp
adc
xchg
mov
mov
mov
push
out
xchg
cltd
cmp
out
gs
movsl
push
test
or
aad
ds
lds
inc
mov
inc
xor
scas
repz
and
mov
jnp
pop
mov
mov
fstps
loop
xchg
xor
or
and
cmp
add
jp
dec
add
rcrl
pop
cmp
fildl
mov
cld
rclb
out
pop
cmpsb
adc
test
mov
mov
out
int
adc
scas
inc
jmp
add
lock
adc
mov
sti
xchg
sbb
mov
ljmp
jne
imul
mov
lods
in
outsb
fdivrl
dec
out
fdivrl
jbe
xchg
ffree
add
pop
xchg
mov
stc
stos
aam
shl
rcrb
ds
push
jo
or
push
iret
inc
pop
push
and
leave
adc
pop
ss
imul
sub
sti
mov
push
mov
sub
shrl
fdivrs
arpl
stc
or
call
je
imul
xchg
add
or
xchg
mov
xchg
mov
inc
sub
push
jmp
rorb
orl
idivb
leave
scas
or
push
add
and
xchg
mov
subl
sub
aam
dec
cld
fistl
stos
aad
shrl
pop
les
dec
push
loopne
pushf
arpl
adc
and
dec
lods
cli
mov
and
cmp
movsl
jae
enter
arpl
xor
pop
inc
flds
imul
pusha
popf
test
mov
add
test
push
ljmp
pusha
xlat
push
andl
jae
cmpsb
push
adc
hlt
push
inc
pusha
push
pusha
daa
jecxz
push
clc
stos
pop
mov
push
mov
icebp
sub
mov
int
bound
pop
add
ds
sub
mov
sub
or
xor
lret
ljmp
xchg
mov
loop
ja
xor
dec
stos
outsb
das
stos
insl
iret
push
mov
loope
les
add
in
jmp
or
sub
ret
movsb
movsb
rcrb
lahf
cmp
imul
cld
dec
xchg
int
hlt
fldl
jg
int3
inc
ret
dec
pop
inc
les
dec
mov
push
mov
push
xchg
bound
imul
int3
adc
and
or
pop
mov
divl
lahf
test
ja
sahf
mov
loop
je
sub
add
and
imul
test
inc
cs
lahf
ficoms
fisttpl
dec
adc
ret
mov
lea
mov
xlat
jmp
addps
into
js
mov
ds
lods
jo
cs
pop
add
and
inc
jg
cltd
cmp
mov
push
insl
mov
dec
mov
mov
sti
inc
ror
adc
jmp
fwait
adc
jns
cmpb
fisubrl
aas
xor
xchg
ret
imul
add
rep
out
icebp
daa
push
xor
mov
adc
arpl
sti
xor
sub
insb
push
and
jge
idivb
cmpsl
pop
push
adc
mov
xor
mov
loop
mov
mov
ss
leave
jnp
std
mov
adc
adc
push
jmp
push
shlb
xor
call
jne
mov
adc
test
in
push
ja
dec
xor
mov
mov
and
pop
or
cltd
imul
int
hlt
leave
cmp
adc
lret
or
jbe
and
mov
shr
xchg
jl
cmpsb
sub
xchg
divl
dec
cmp
sahf
push
lret
push
sti
dec
es
push
ret
pop
sub
js
enter
loop
hlt
out
cmp
mov
test
and
pop
mov
pusha
flds
dec
cmp
enter
data16
test
xor
lahf
cmp
cmp
jl
lahf
xchg
mov
push
jecxz
pop
in
and
jnp
mov
push
sub
mov
shlb
pop
ja
test
xor
adc
fld
ljmp
cmp
popa
cmc
gs
dec
inc
out
or
insb
cli
std
js
xchg
fiadds
cmp
mov
cmp
and
mov
cmc
pop
outsl
mov
xchg
aad
loopne
dec
jmp
repnz
pushf
std
outsb
cmc
xchg
push
les
jo
jns
iret
shll
or
xchg
loop
mov
cmp
jbe
mov
mov
add
dec
pop
xchg
push
das
xchg
fs
mov
outsb
and
sti
cs
movsl
stc
lea
jnp
lcall
out
jnp
lods
xchg
xchg
mov
fs
pop
addl
dec
fimuls
into
dec
mov
fildll
aad
xchg
or
in
jo
aam
sbb
insb
loop
popf
enter
sbb
ja
ret
out
mov
int3
aad
in
std
iret
cmp
cmp
lret
out
andb
push
dec
cmpsl
sbb
dec
daa
aas
sbb
testb
fimuls
sti
inc
out
shlb
es
push
in
sub
push
movsb
test
shrb
movsl
push
adc
mov
cmp
push
fwait
ljmp
imul
mov
fmul
bound
mov
push
bnd
in
mov
mov
inc
out
add
dec
movsb
add
fidivrl
dec
fcoms
xlat
sbb
inc
lahf
jbe
push
add
ficompl
loop
xorl
adc
push
fistps
jno
xchg
loopne
add
push
lret
jnp
cmp
mov
inc
inc
ljmp
mov
mov
cli
push
adc
loop
dec
mov
fimuls
push
ficompl
jecxz
push
mov
adc
aaa
shlb
xchg
addr16
iret
popa
xor
ds
data16
and
dec
clc
mov
leave
sub
xchg
cmpsb
dec
fadds
fildl
in
shll
loop
push
enter
jnp
mov
das
jmp
mov
outsb
pushf
icebp
mov
cmpl
dec
lods
cmpsl
cmpsb
adcl
adc
mov
subb
lock
fldl
or
hlt
cli
mov
popf
sbb
cmp
push
int
dec
push
push
ror
cld
jle
and
popf
mov
add
aad
clc
fnsave
xchg
xchg
jae
fs
fmul
dec
dec
jno
std
xchg
mov
dec
insb
xchg
js
test
loope
in
repnz
pushf
cld
shrb
es
add
ret
rorb
xchg
sbb
cltd
push
sbb
sbb
shl
mov
pop
xor
mov
rorl
fnstsw
or
cmp
push
mov
fisubs
cwtl
xorl
out
ss
inc
xchg
or
jne
dec
dec
or
mov
outsb
icebp
movsl
out
inc
test
shll
rclb
pop
mov
lods
mov
and
outsw
sub
sbb
dec
ret
cltd
adc
sub
xchg
mov
enter
aam
ja
shlb
jo,pn
mov
or
jne
push
into
jg
mov
addb
cltd
int3
cmp
pop
add
mov
sub
cmp
lret
mov
dec
out
pop
lret
or
and
shl
push
cs
sub
in
inc
jno
adc
jp,pn
mov
addr16
add
int
fcoms
mov
adcl
test
orl
cmp
fidivs
mov
dec
adc
loop
stc
jno
dec
pop
push
adcb
push
push
loop
jb
enter
push
inc
cmp
call
pop
pushf
imul
mov
cmpsl
sarb
call
sbb
sbb
dec
dec
mov
inc
jl
aas
shll
dec
lret
sub
test
xchg
jmp
inc
mov
jecxz
insl
inc
pusha
cwtl
dec
xor
and
dec
nop
lock
push
shl
cltd
add
cmp
scas
cmp
xchg
jns
mov
stc
dec
cmp
jmp
add
jecxz
ss
mov
test
in
ret
ss
pop
popa
out
push
inc
test
fwait
cld
cmc
ljmp
sbb
clc
shrb
inc
fucomp
int3
gs
lcall
std
sub
in
and
pusha
dec
jg
mov
xchg
push
pushf
sahf
dec
in
sbb
sahf
mov
fwait
xchg
rcrl
jnp
ret
std
in
js
add
cmp
adc
jae
cmp
mov
fwait
mov
mov
jl
xchg
filds
into
xchg
clc
sub
cmp
xor
dec
les
mov
jae
pop
jnp
dec
std
aaa
mov
and
idivb
ret
int3
mov
mov
outsb
lods
ret
faddp
sbb
inc
add
pop
imul
outsb
xchg
or
jns
jnp
ja
sti
cmp
movsb
rorl
mov
push
jmp
xor
sbb
xchg
jns
mov
arpl
cmc
pushf
cld
sub
aas
lods
div
test
mov
cmp
cmp
adc
jne
mov
push
nop
adc
fisubs
push
push
xchg
fldcw
jecxz
pop
fstpl
cmpsb
or
xor
or
jne
in
xchg
mov
das
mov
sbb
sti
mov
insb
push
lods
orl
adc
cmp
and
jae
clc
cmp
inc
mov
aaa
or
daa
push
pushf
xchg
inc
push
pushf
movsb
xor
test
out
gs
push
mov
jmp
xchg
sub
cmp
inc
pop
std
mov
jae
test
hlt
or
xchg
adc
mov
es
xchg
inc
lea
insl
jns
movl
or
inc
mov
sahf
jns
arpl
es
mov
fnstenv
popa
test
fldt
fwait
pop
fnstenv
and
repz
push
mov
rorb
mov
or
rorb
adc
jo
push
es
cmp
inc
bound
push
xor
mov
icebp
mov
ror
aad
sahf
outsb
pop
out
jmp
pop
jp
lods
lea
adc
aaa
nop
xchg
xchg
push
pop
push
aaa
mov
and
psubq
jbe
psadbw
shlb
jmp
mov
dec
and
clc
mov
inc
inc
pushw
jbe
push
jb
flds
xchg
add
add
enter
mov
jg
and
faddp
enter
aad
rorl
scas
or
aas
fnclex
stos
out
out
xchg
cmpsb
cwtl
push
fistl
xchg
fs
cld
mov
or
dec
push
popa
in
pop
shrl
mov
cmpb
push
dec
js
jg
idiv
lea
mov
enter
andl
mov
push
cmc
cmp
push
mov
jne
inc
pop
andl
int3
xchg
leave
cmpsl
ds
xchg
and
ss
inc
pop
test
dec
pop
mov
push
imul
rcrb
cmp
lds
pop
cmp
push
mov
stos
fdivr
test
push
cltd
cltd
rcl
js
mov
shrl
fmuls
dec
adc
xchg
nop
jne,pn
mov
out
or
arpl
xchg
inc
xchg
shlb
jp
or
dec
cmp
push
xchg
pusha
orb
mov
dec
push
mov
fdivrs
out
sti
sahf
xchg
xchg
add
es
pop
ss
cmp
out
aad
mov
xchg
test
int
pop
jbe
mov
ret
xchg
dec
dec
add
mov
lret
cli
adc
in
jnp
sub
daa
mov
jle
cmpsl
ret
imul
addr16
mov
fsubrl
insl
std
shrb
dec
sub
sbb
mov
lcall
push
fwait
add
inc
ljmp
subb
scas
jmp
clc
ss
cltd
loope
sub
jp
sahf
loopne
inc
repz
sub
adc
dec
lea
adc
mov
xchg
movsl
fistpll
push
lds
pop
in
js
orl
icebp
sub
int3
popa
leave
in
movsl
pop
lea
jno
inc
ss
mov
js
sbb
mov
pop
loope
xchg
inc
mov
sbb
fdivl
scas
aad
jo
push
add
cltd
icebp
ret
fwait
stos
pop
into
insb
inc
mov
mov
sahf
jnp
mov
pusha
ret
pop
add
cltd
ficoml
int
out
fidivrl
rcrb
sub
mov
lcall
push
adc
xchg
or
mov
int
cmc
or
call
mov
mov
add
add
dec
adc
movsb
sahf
cmp
add
or
cld
fsubs
sbb
aaa
cltd
pop
and
adc
mov
addb
mov
mov
pop
sbb
xchg
xchg
ret
ja
push
shrl
sbb
push
inc
push
faddp
lea
mov
repz
iret
push
ret
loope
cmpps
mov
mov
push
or
sub
out
pop
cmpsb
shrb
out
adc
mov
fldt
inc
clc
enter
push
mov
flds
gs
stos
mov
push
decl
out
ret
xor
mov
stos
inc
sbb
out
sub
fucom
inc
daa
popf
divl
popa
popa
aam
pop
stos
mov
cmp
jl
inc
ds
popa
fimull
add
adc
mov
jne
mov
mov
jmp
mov
call
and
xchg
add
orl
pop
addl
out
daa
jecxz
or
xor
xchg
mov
sub
push
mov
push
dec
popf
xchg
add
jbe
or
int
rorb
enter
test
out
fnsave
sub
and
les
mov
sti
jns
in
jmp
dec
push
shlb
inc
pop
xchg
pop
in
xor
or
xchg
sbb
pop
int3
addb
sbb
xor
and
or
insl
sub
bound
lods
icebp
mov
push
stc
dec
jmp
and
sub
fisubrs
or
sbb
std
mov
jl
mov
xchg
es
inc
loop
xor
and
lea
adc
mov
out
shl
cmc
or
daa
xor
sbb
cmp
xorb
call
push
iret
sub
sbb
dec
sbb
mov
popf
pop
loopne
aam
sbb
push
xor
ret
jp
xor
push
in
jmp
enter
repnz
dec
rolb
cmp
fs
stc
adc
es
loop
push
data16
sbb
mov
fcoms
or
call
jae
stos
sbb
test
xchg
mov
mov
arpl
cmp
rcrb
scas
ds
pop
add
shufps
fidivrs
mov
sti
mov
pop
mov
mov
xorl
sbb
dec
sti
push
jno
sbb
and
insl
pmulhuw
andb
clc
arpl
pop
push
cs
pop
push
sbb
pop
xchg
jne
add
iret
clc
adc
in
lea
push
push
sub
icebp
outsb
pop
inc
pop
int3
fildll
mov
insb
fsubrs
adc
xor
lock
hlt
aam
xor
inc
popa
and
daa
xchg
jae
dec
stc
jecxz
adc
ret
jae
push
push
pop
enter
xor
jmp
sub
sarb
lret
sub
mov
jecxz
dec
xchg
inc
shlw
cs
orb
jno
notl
or
ja
loopne
cmpsl
pushf
mov
inc
dec
out
aaa
sub
into
jecxz
je
jmp
sub
in
push
loop
dec
push
gs
dec
jmp
call
or
nop
ds
xchg
xchg
ret
jnp
mov
in
jge
xchg
xlat
sbb
push
dec
popa
ss
int
jg
movsb
mov
rcrb
sub
cwtl
adc
in
jnp
mov
sbb
or
pop
iret
mov
push
popf
mov
push
shrb
add
mov
fsubs
add
pop
repz
test
pop
stos
dec
mov
out
rcrb
decl
or
mov
test
cld
test
mov
arpl
jge
pop
jmp
in
add
pushw
xor
lock
cmp
mov
bound
mov
in
dec
and
fnstsw
mov
jecxz
idiv
mov
out
sarl
or
in
jle
xor
mov
subl
movsl
add
into
sub
aas
mov
push
shlb
in
mov
mov
xor
jb
xor
pushl
fsts
jge
cltd
shl
sub
jge
addr16
cld
pop
sbb
dec
push
cmpsb
add
push
shr
loopne
mov
xchg
daa
adc
or
fsts
lea
sub
push
mov
jp
ret
pop
ret
leave
mov
sarl
sbbb
nop
call
mov
fcomi
scas
xor
insl
das
xor
add
or
cwtl
or
jg
cmc
dec
pop
inc
and
mov
into
nop
adc
cmp
and
lods
sub
cmp
hlt
incb
dec
cmpsb
xor
xor
or
scas
sub
out
jecxz
sub
jl
pmullw
ret
jo
xchg
dec
div
sti
dec
xlat
jae
mov
add
cltd
clc
lods
sub
roll
dec
inc
cli
movsl
sbb
xlat
stc
mov
jmp
dec
cmp
adc
lea
jns
sub
pushf
push
outsl
out
mov
jbe
bound
jnp
pop
mov
and
outsb
cmpsb
push
jno
mov
aad
fidivrl
repnz
popa
int3
inc
push
insb
shlb
mov
sti
xlat
jae
jne
insl
adc
lds
inc
std
xchg
dec
and
adc
add
popf
loopne
cmp
mov
adc
sbb
and
lahf
addl
into
add
sub
pop
in
sbb
add
cmp
out
cmp
lds
lds
mov
in
xchg
js
dec
inc
dec
xchg
sbb
pop
test
ja
outsl
in
jecxz
add
popa
test
mov
jmp
scas
incl
shll
xor
ja
out
add
int3
mov
scas
pop
ret
inc
push
xchg
in
pusha
inc
jbe
ret
add
cmpsl
aas
adc
dec
add
test
mov
jbe,pt
push
sahf
cmpsl
mov
rol
push
jp
jb
and
jmp
mov
aam
or
xor
adc
mov
push
sub
rolb
and
popf
addr16
sbb
push
sub
dec
call
adcb
fs
pop
mov
in
push
xchg
ret
icebp
cmp
jnp
lcall
aas
and
mov
arpl
ja
jb
dec
loope
jns
shl
mov
lret
rcll
mov
arpl
inc
jg
xlat
test
xchg
sub
outsb
push
rorl
test
ss
xor
push
fisttpl
clc
add
pop
sbbl
lock
idiv
cld
and
inc
std
rol
lods
cld
pushf
lock
scas
and
add
push
jmp
leave
push
xchg
add
sub
xchg
adc
cmpsb
lods
das
lcall
dec
pop
jg
rorl
or
push
scas
ljmp
add
xor
ja
cmp
mov
adc
punpckldq
sub
sub
adc
mov
pop
adc
aas
std
pop
mov
push
subl
sbb
addr16
pop
mov
sbb
cmp
pop
dec
shlb
ret
adc
inc
xor
jg
sarb
mov
dec
mov
mov
repz
pushf
popf
loope
and
imul
out
addr16
push
push
popa
adcl
aas
shrb
mov
and
out
sysret
push
into
add
xor
xor
shl
out
stos
imul
iret
insb
rol
icebp
mov
icebp
push
push
jnp
out
push
in
ja
gs
or
or
add
shll
dec
mov
call
mov
pop
sub
push
fwait
pop
test
adc
std
leave
push
outsl
fnstsw
add
mov
fs
cmp
popf
mov
jl
push
push
int
sti
stos
iret
aaa
mul
xor
lahf
or
in
in
hlt
mov
sbb
dec
jmp
dec
xchg
ljmp
fstpl
aad
hlt
xor
lcall
mov
adc
push
add
push
or
cmp
mov
lds
pushf
add
jnp
lods
cmp
adc
imul
pop
pop
mov
test
xchg
jp
dec
aas
lea
xor
or
fsubr
dec
dec
inc
bswap
iret
or
jmp
push
or
pop
and
ja
orl
adc
mov
jl
stos
test
sti
adc
dec
pop
rolb
sub
sub
ss
and
rorl
movsb
je
ja
cli
test
fdivr
dec
jg
popf
jns
je
stc
cwtl
mov
pop
pop
push
pop
sub
dec
adc
insb
dec
gs
push
dec
pop
jg
jns
imul
xor
xchg
push
sbb
and
inc
xchg
jne
shl
xchg
mov
xor
sub
pop
pop
mov
jmp
mov
add
pop
pusha
fnstcw
mov
dec
inc
add
jecxz
pop
shr
and
in
repz
cld
or
pop
insl
cli
jl
arpl
insb
jl
rcll
sbb
mov
mov
lahf
sbb
aas
vmread
mov
inc
pop
xchg
and
movsl
sub
pop
or
jnp
jge
mov
movsl
add
cli
leave
dec
insb
dec
adc
fsubs
mov
pushf
adc
into
push
push
add
popa
jp
ja
test
sbb
push
icebp
test
inc
shl
and
cmp
test
jp
add
add
cmpsb
dec
rolb
andb
xor
jge
add
inc
imulb
xor
or
inc
test
int3
xchg
in
incb
inc
sarl
shrl
adc
scas
xchg
in
xlat
pop
insl
sbb
xchg
je
cmp
lds
test
call
sbb
pop
jae
dec
inc
jg
adc
push
lahf
inc
jne
xlat
xchg
mov
outsl
arpl
in
aaa
push
adc
stos
loope
cltd
stos
lea
scas
addr16
orl
daa
es
push
push
in
push
sbb
mov
pusha
xacquire
xor
xor
push
jl
mov
daa
push
add
add
in
or
call
sbb
mov
mov
ret
rorb
add
dec
shlb
adc
cld
in
push
mov
fistpl
sbb
push
push
fwait
mov
and
stc
jns
cmp
sub
and
mov
cmp
push
xchg
iret
mov
in
jle
push
add
stos
xchg
xor
or
mov
inc
xchg
ret
in
fists
pop
sbb
je
test
push
js
aas
xchg
mov
std
inc
inc
test
inc
jnp
xor
jge
cmp
pop
dec
negb
notb
fimuls
jb
andb
int
mov
xchg
and
and
daa
add
jle
daa
jnp
daa
push
lret
in
lods
jmp
push
loop
fdivl
sbb
aad
ljmp
and
mov
xchg
jno
and
fisttpll
jae
jl
cs
adc
je
jnp
rorl
out
xchg
in
int3
call
adc
cmp
dec
test
iret
lcall
sub
mov
sbb
cltd
sub
ss
ret
dec
sub
subb
adc
sbb
mov
shll
inc
ffreep
cmp
repnz
ljmp
xchg
iret
fldl
and
inc
subb
movsl
rcrb
mov
pop
mov
hlt
insl
inc
lds
lock
scas
outsl
mov
xor
inc
mov
and
add
mov
test
add
or
sbb
sbb
xchg
push
push
mov
dec
movsl
nop
iret
mov
xchg
lahf
mov
lret
imul
xor
mov
fidivrl
or
pusha
jne
sub
daa
mov
cli
test
or
mov
mov
sahf
sbb
lret
hlt
jl
or
mov
stos
jns
mov
xchg
imul
jo
xchg
add
jl
das
out
cmp
stos
xchg
or
ss
je
add
into
and
loop
adc
repz
jno
fmuls
loopne
imul
ljmp
out
push
mov
pusha
je
sbb
test
jbe
adc
push
xlat
and
mov
cmp
fcmovne
lcall
inc
mov
mov
jns
sbb
jo
or
mov
jmp
in
push
xor
adc
add
push
lods
jno
insl
addr16
addr16
add
mov
ljmp
mov
sbb
sub
cwtl
out
loope
es
loope
lods
fwait
mov
negb
sub
jbe
bound
out
je
out
lods
xchg
sti
aas
jl
cmc
push
mov
out
push
fwait
jge
pop
mov
inc
outsb
pop
add
aaa
ljmp
es
fcoms
dec
dec
mov
pusha
inc
aaa
shrb
mov
mov
adc
les
mov
ret
out
test
or
add
std
in
sbbl
xor
mov
and
cwtl
fidivs
addb
in
bound
enter
clc
jge
xchg
fucomip
add
pop
jae
aaa
push
adc
xor
enter
inc
xchg
int3
pusha
dec
add
rep
push
mov
test
lahf
sbb
jno
nop
rcrl
scas
xchg
cwtl
outsb
es
sub
scas
aas
mov
pop
orl
push
nop
imul
mov
ja
ret
add
lret
lods
pop
ret
fcompl
jp
adc
dec
jnp
unpcklps
mov
mov
jp
add
ds
test
mov
les
xor
push
cmpsb
js
xor
popf
es
xor
cmp
lods
push
repz
jb
in
stos
sbb
lods
mov
pop
in
jecxz
out
sbbl
ret
pop
mov
sarb
mov
repz
push
jmp
shll
sbb
mov
std
loope
push
cwtl
clc
xrelease
incl
daa
cs
inc
mov
ret
sbb
jae
das
ret
jae
or
jge
and
bound
and
dec
adc
pop
mov
lds
lods
jb
or
shlb
sarl
sub
les
jno
aas
jmp
inc
insb
mov
cmp
leave
inc
nop
adc
aam
and
push
or
fs
in
mov
cmp
fsts
imul
push
and
lods
sti
xchg
xchg
int
jmp
leave
push
push
mov
out
test
mov
pop
and
jecxz
jl
pusha
ljmp
jb
sub
xor
dec
dec
mov
in
in
int
pushl
jmp
sbbb
push
and
jp
sbb
fcom
and
jmp
xchg
fwait
mov
rdmsr
jb
and
dec
adcl
ror
je
inc
cld
jmp
add
outsl
pop
mov
mov
mov
jb
ljmp
aaa
cld
repnz
movsl
and
add
lret
js
jge
in
xchg
enter
scas
jp
out
inc
pusha
xor
arpl
fldt
cmpb
mov
mov
mov
inc
stos
push
repnz
sub
mov
shrl
in
fdivl
and
mov
sbb
repnz
outsb
lcall
pop
repz
jle
ret
or
sub
iret
jno
add
inc
jmp
sbb
pop
mov
jl
aaa
fldl
xchg
rcl
arpl
push
adc
mov
adc
dec
test
shll
ret
xchg
test
dec
xor
fistl
fcomp
jbe
mov
mov
mov
pop
mov
mov
mov
mov
fistl
ds
mov
loope
adc
xor
popa
jge
lds
addr16
jl
xor
mov
inc
sbb
test
fbstp
and
cmp
nop
idivl
push
jl
cmp
xor
adcb
lcall
xchg
push
pop
subl
test
sbb
rorb
stos
inc
cmpl
add
cmp
push
mov
jl
hlt
push
mov
adc
inc
push
mov
add
outsl
lea
dec
testb
roll
loopne
outsl
xchg
ljmp
shlb
ljmp
xchg
leave
add
xchg
push
aas
cmp
stc
insl
add
jns
mov
adc
cwtl
cs
sahf
addr16
stos
mov
das
out
aaa
sti
fdivrp
ljmp
shlb
xor
and
sahf
out
imul
rorl
test
jae
push
mov
mov
mov
push
mov
pushf
testl
jnp
sti
sub
or
rol
adc
adc
xchg
clc
push
mov
pusha
and
xor
xchg
pop
jle
pop
dec
or
xor
scas
mov
outsl
lret
inc
and
fistpl
xchg
dec
xchg
mov
add
jl
xchg
scas
aaa
pusha
lret
enter
jmp
fiaddl
ret
mov
mov
je
mov
mov
xchg
xor
cmpsl
pop
xor
or
sahf
and
xchg
mov
jns
ljmp
adc
aam
ss
inc
and
imul
or
and
mov
mov
imul
insb
inc
sub
cmc
cwtl
iret
dec
mov
mov
or
pop
icebp
scas
into
inc
mov
cmp
loop
and
jp
cwtl
xchg
mov
cli
dec
push
mov
xor
pop
test
inc
add
mov
mov
dec
push
sahf
fs
mov
imul
adcb
call
leave
lcall
sahf
lods
inc
shl
jns
xchg
cld
inc
jp
xchg
testb
or
pop
add
adc
test
jmp
movd
sbb
aas
negl
lret
dec
call
mov
xchg
sub
cmp
mov
jno
cmp
bound
es
div
insb
jecxz
repz
ss
sub
adc
out
jne
or
dec
and
rclb
or
cs
sub
cmp
cmp
jae
aas
fsubrl
popa
mov
xchg
push
mov
and
add
hlt
and
dec
in
addl
jp
fdivl
cmp
jae
lahf
addr16
int3
add
xchg
stos
enter
jb
fnstsw
or
fadd
add
addr16
xchg
vandnps
adc
mov
repz
insb
fistps
inc
pushl
cmp
pop
mov
or
sbb
pop
je
mov
scas
mov
loopne
jbe
enter
mov
hlt
jno
fs
jae
shr
lret
rol
mov
scas
in
adc
adc
rcll
cs
je
pop
shlb
adc
cmp
jb
gs
and
xchg
xor
mov
push
rorb
stos
cmp
fldt
or
xor
mov
sti
push
push
mov
js
frstor
push
mov
fidivrs
add
hlt
addr16
xchg
rcll
ja
xor
pop
je
shrd
adc
mov
dec
bsf
or
mov
pop
dec
out
out
ret
xchg
stc
xorps
push
mov
push
repz
into
mov
xlat
das
mov
cmp
stos
xchg
shrb
or
out
mov
stos
loopne
or
fcoml
jno
shrb
fimull
xor
cmp
sbb
imul
sub
cli
add
push
jmp
add
je
clc
jl
add
sub
lcall
mov
jmp
pusha
aad
mov
imul
mov
pop
mov
adc
push
and
cld
test
mov
cmp
inc
out
dec
ss
sub
cs
ds
adc
repz
jne
xor
xchg
or
icebp
test
gs
xor
js
clc
or
loopne
mov
je
sysret
jl
xchg
inc
insl
xor
aas
xchg
insb
sbb
xor
xchg
insl
jle
sahf
pushf
dec
mov
sbb
push
ljmp
pop
mov
mov
into
or
cmp
mov
fcmovne
scas
dec
adc
pop
test
sub
out
int3
push
in
mov
and
push
cmp
inc
jns
call
insb
pop
jnp
sbb
insb
pop
scas
push
pop
sbb
daa
out
jne
icebp
xor
daa
loop
mov
mov
xchg
shlb
xchg
or
xorl
das
or
xchg
fxtract
test
cld
push
dec
jno
negl
jg
cmp
pop
dec
mov
jnp
push
aas
outsl
loop
dec
mov
mov
lcall
fisubl
daa
xor
adc
jne
sbb
xor
in
aam
movsl
push
pop
test
pop
popf
insl
pop
and
jg
adc
mov
test
mov
out
dec
repz
cs
mov
insl
xchg
xchg
out
cmp
lods
cmp
int3
scas
xchg
and
and
inc
sti
mov
sub
xchg
lahf
dec
rcr
mov
pop
adc
stos
sahf
push
mull
aas
in
outsl
sub
jle
fstl
inc
xchg
xchg
cltd
mov
mov
inc
sbb
lcall
xchg
int
hlt
xchg
cmp
pop
lods
xchg
adc
lahf
testb
inc
jl
loopne
jecxz
and
in
or
insl
mov
mov
mov
aaa
mov
xor
in
adc
repz
sbb
xor
pop
pusha
adc
dec
and
jle
or
pop
fdivrl
idivl
or
les
mov
js
push
or
dec
cmp
mov
hlt
shll
je
test
and
push
call
aam
and
dec
sub
fnstenv
leave
lock
dec
xor
xchg
pop
jbe
push
and
sbb
adc
pusha
adc
movsl
xor
dec
ret
lcall
mov
push
inc
in
add
or
lock
xor
scas
rcrb
or
ficompl
inc
and
push
pop
iret
push
cmp
inc
shll
mov
jmp
and
jmp
int3
push
jle
jle
or
inc
test
push
sub
jp
pop
arpl
fldt
in
mov
xor
sub
cmpl
pop
ror
push
add
adc
jp
sti
out
fisubl
dec
bound
std
fisubl
mov
mov
mov
mov
mov
jg
push
mov
push
push
adc
lock
push
jns
xchg
inc
mov
shll
xlat
or
jb
data16
xor
pop
into
out
repnz
popf
in
stos
aas
cmp
xor
cmpsb
rcr
iret
ficoms
pop
jge
mov
mov
out
xor
cmp
adc
or
xorl
aas
test
sub
xor
jae
sbb
popa
mov
repnz
and
aad
lret
push
jle
cmp
and
cmc
dec
sbb
sub
sbb
or
or
inc
pop
rorl
mov
fwait
lds
inc
or
xchg
test
and
pop
pusha
mov
jg
ds
stos
stos
or
mov
push
dec
es
add
sbb
adc
xor
mov
cs
aas
or
dec
push
push
mov
popa
sub
stos
jne
lods
mov
out
dec
inc
push
test
js
idivl
lods
xor
mov
icebp
imul
cltd
inc
lahf
jbe
stos
xchg
adc
and
pop
arpl
jmp
mov
xchg
and
adc
addl
adcl
nop
loop
stos
iret
jmp
sbb
jp
movsb
inc
adc
rorl
push
xchg
rcr
xchg
jge
lret
mov
pop
sub
dec
sbbl
sbb
jb
in
xchg
hlt
in
out
pop
xchg
cld
adc
mov
push
test
stos
and
adcl
xlat
stos
sub
mov
hlt
test
outsl
jp
xchg
add
sub
scas
jp
xchg
add
push
push
cs
sbb
adc
data16
and
inc
cwtl
cs
movsb
loop
in
lods
or
int3
pop
mov
push
test
pushl
aam
aaa
cmp
pushl
imul
loopne
mov
sub
cmp
js
pop
dec
movl
ds
rclb
cmp
xor
out
mov
and
cltd
fistpl
push
sbb
insb
out
ret
repnz
ror
sub
sub
sub
stos
inc
sbb
dec
pop
cmp
push
and
stos
ret
cmpsl
aas
push
addr16
dec
out
inc
mov
ja
mov
xchg
xchg
pusha
fisubl
inc
add
adc
push
lcall
inc
or
pop
insb
xchg
ficompl
cmc
cmp
stos
rcrl
or
clc
out
movsl
popa
sbb
mov
mov
mov
inc
out
movsl
rorl
xor
aaa
mov
mov
shl
add
mov
cmpsb
mov
add
ret
dec
and
push
adc
out
call
or
rorl
xor
cmc
popf
add
sub
clc
dec
mov
mov
aad
out
rcr
dec
popf
xchg
cli
ficompl
xor
popa
iret
xacquire
xor
jle
mov
out
shr
mov
push
jne
test
sbb
xchg
out
out
mov
or
lahf
lcall
std
mov
outsb
cmp
sub
sbb
dec
mov
mov
enter
shl
ret
sbb
add
mov
xor
mov
jle
pusha
mov
outsl
out
ret
lea
xchg
cwtl
xor
sbb
xchg
aam
out
repnz
je
jmp
ljmp
jne
and
dec
lcall
or
fisubs
push
int3
adc
pop
lock
add
mov
jmp
adc
rorl
or
movsl
push
shrl
pop
pop
sahf
sbb
movsl
and
mov
xchg
xchg
mov
add
push
jmp
loope
inc
add
sbb
mov
shll
scas
lods
xchg
jp
adc
pop
xchg
mov
rep
fdiv
and
stc
sub
aad
push
adc
scas
outsl
inc
xor
jle
or
jl
insb
pushf
out
shl
pushf
xchg
outsb
test
loop
fisubl
mov
in
sti
push
hlt
je
jne
inc
xchg
xor
mov
rclb
das
and
out
push
aas
xchg
hlt
push
sbb
add
in
fadds
xor
stos
aam
cmp
push
pop
insl
popa
cmpsl
xor
cld
fisubrs
jl
push
shrb
pop
dec
and
dec
cwtl
xchg
ret
icebp
aam
sbb
enter
cmc
outsb
sub
add
roll
and
sarl
aaa
ja
cmpsl
push
sub
ss
pop
shlb
pushf
testl
es
lods
push
push
xor
imul
fsubl
sar
inc
scas
mov
ficoml
mov
das
rcll
dec
fistps
ret
cmp
ret
lret
mov
mov
pop
ja
lods
lcall
and
in
dec
ds
filds
fldt
jo
push
sahf
push
mov
adcb
mov
add
dec
and
cmp
inc
addr16
xchg
jne
cmpl
lcall
hlt
pushf
arpl
xor
ficoml
cld
js
or
inc
fisttpll
sarb
or
loop
ret
insb
int3
sbb
fldz
xor
dec
fs
and
lods
mov
adc
addr16
nop
or
mov
xor
jge
mov
lea
sub
mov
mov
loope
mov
jg
call
fwait
xchg
mov
cmp
push
pushf
xlat
imul
push
fimuls
adc
stos
dec
adc
adc
icebp
int3
jp
ja
pushf
mov
push
sti
inc
jecxz
sbbl
lahf
in
shrd
daa
mov
cli
sub
js
pop
addr16
inc
adc
faddl
ror
lcall
loope
repnz
xlat
repnz
xor
sbb
popf
outsl
mov
pop
std
pop
stos
mov
sti
or
push
rcrb
scas
fnstcw
or
jbe
lods
inc
out
imull
hlt
add
int
insl
movsb
or
out
pop
repz
ljmp
add
hlt
add
scas
inc
jno
in
stos
mov
loopne
push
orl
outsl
and
mov
dec
sub
sub
std
pop
lds
call
pop
mov
adc
mov
jb
mov
lcall
in
lods
int3
cltd
and
cmp
rcr
jmp
addl
lods
jbe
xor
and
push
insb
jno
mov
fidivrs
xchg
jp
inc
aam
mov
int
in
gs
cltd
popf
es
fists
and
leave
lret
mov
add
mov
ret
or
shll
pushw
xor
popa
lock
hlt
mov
inc
std
xor
lea
sub
sub
lods
sbb
mov
addb
xchg
mov
inc
and
sub
dec
imul
xchg
cmpsb
test
push
push
pop
or
or
dec
inc
call
push
mov
and
mov
pop
pusha
push
negb
lods
add
add
push
shlb
fiaddl
pop
data16
ds
push
ret
cmp
cmpsb
pop
mov
xor
mov
inc
icebp
mov
dec
js
xchg
lds
mov
int
dec
push
ret
jnp
data16
das
and
shll
inc
insl
fbld
push
jae
lods
adc
cmc
addr16
cmp
fmull
jne
pushf
es
pop
adc
lock
pop
mov
jge
out
dec
daa
push
cmp
mov
test
int3
pop
adc
scas
lods
jbe
cli
or
sbbb
ret
ret
jnp
inc
mov
push
out
push
aaa
fwait
loopne
aad
dec
xchg
mov
mov
gs
ljmp
or
leave
daa
inc
or
popa
dec
adc
inc
pop
sti
push
fsubrp
sub
sbb
and
add
dec
push
repnz
imul
sahf
xor
int
loopne
jle
into
lock
pusha
and
repnz
xchg
inc
std
inc
mov
mov
xor
mov
sub
int
test
fwait
insl
outsb
jnp
scas
cmp
enter
fucomip
mov
addl
push
xor
cli
sub
fidivl
xor
push
stos
dec
jmp
and
aaa
enter
leave
imul
jle
ffreep
push
mov
out
outsb
loop
out
sub
push
arpl
mov
fs
push
or
mov
inc
cmpsb
gs
imul
frstor
jno
enter
test
into
sub
imul
push
insl
lcall
adc
dec
mov
inc
jae
mov
dec
in
out
mov
mov
scas
incb
pop
mov
add
dec
mov
mov
call
das
pop
add
dec
sub
out
pop
mov
xor
jb
pop
sahf
lock
cmpsl
pop
cmc
inc
loopne
inc
ja
aas
pop
hlt
lret
sbb
je
mov
xlat
adc
jbe
mov
mov
in
and
pop
jo
popf
lods
shrl
lds
sbb
lods
sub
icebp
rorl
negl
xor
xor
addr16
xchg
mov
jnp
sub
out
decb
xchg
mov
addb
fdivl
call
enter
in
outsb
negb
enter
int
xlat
lea
aad
cmp
inc
xlat
push
and
rcrb
add
xor
mov
testb
fcoms
mov
mov
or
sbb
add
bound
xchg
rcr
ret
sbb
ror
pop
mov
or
testb
out
fs
insb
cwtl
cmp
pop
movsb
lods
pop
adc
bound
frstor
stc
js,pn
pushf
outsl
xor
sbb
fwait
pop
mov
cmp
adc
and
fnstenv
mov
mov
clc
test
sub
lock
mov
outsb
push
cmc
xor
pop
ss
sti
pop
push
daa
pop
xchg
lcall
in
repnz
daa
out
fidivrs
and
sarl
inc
filds
subb
push
cmpsl
adc
stc
jl
sbb
aaa
mov
xchg
push
sbb
xchg
lods
pushf
dec
push
pop
xor
das
dec
test
xchg
mov
jb
xchg
pop
and
hlt
nop
add
pop
adc
mov
jmp
xor
js
jmp
add
mov
cli
and
jg
rcrl
sbb
or
mov
fs
pop
out
sub
jl
fbstp
in
xchg
mov
mov
loopne
data16
loopne
mov
mov
jno
or
xchg
ret
inc
cmp
pop
cmp
xor
jecxz
mov
mov
sbb
pop
sub
push
push
sbb
xor
jle
mov
call
or
jo
sub
mov
lret
xchg
jns
mov
adc
mov
mov
lcall
push
movsl
adcl
dec
out
mov
add
out
jp
stc
inc
sub
clc
dec
aad
int
test
enter
cmp
push
sti
xor
xchg
fs
push
aaa
in
ds
fcomps
jecxz
sbb
into
push
stc
test
idivl
fsubs
push
scas
xchg
clc
in
mov
addb
pushl
out
adc
pop
inc
loop
notw
shrb
cltd
in
or
add
sub
sub
ja
xchg
enter
xchg
mov
pop
repnz
lahf
and
addr16
ss
fstps
or
add
xchg
test
test
std
aas
jae
movsl
sub
pushf
clc
mov
pop
ret
es
call
dec
push
mov
andl
mov
pop
test
pop
pop
and
stos
sub
mov
mov
jns
ljmp
ja
push
movsb
cs
loope
jp
pop
jge
ret
adc
pop
cmpsl
xchg
mov
aas
out
mov
cmpsb
dec
xor
scas
cmpsb
jp
xchg
pop
sbb
jmp
rorl
cmp
das
jo
xchg
cmp
in
pusha
mov
pop
jno
sbb
out
sbb
fwait
jmp
or
in
xchg
js
push
in
rcrb
cmp
test
loop
add
xchg
and
in
cmpsb
xchg
mov
add
mov
fbld
out
push
adc
jmp
jae
scas
roll
in
stc
mov
bound
jns
sbb
in
xor
pushf
sarl
inc
test
popa
push
out
in
pop
ret
ret
test
lods
in
mov
push
mul
mov
mov
push
mov
dec
es
jecxz
xchg
xor
and
mov
nop
div
popf
cmp
pop
lock
popf
imulb
xor
stc
and
mov
fsubr
mov
pop
ret
sbb
outsl
into
jg
into
pop
xchg
push
mov
fdivrl
and
dec
repz
lds
add
inc
es
lds
push
mov
sub
js
adc
gs
cs
sub
dec
jne
add
popa
shl
addr16
or
repnz
jnp
jle
jb
cltd
and
or
sub
inc
jl
fadds
mov
fs
leave
jno
pop
loop
and
aas
sbb
push
xor
and
outsb
inc
lcall
leave
testb
xor
je
and
add
negl
mov
jne
dec
movsl
xchg
pusha
ja
cmpsb
lret
imul
popf
sbb
std
cmp
jecxz
push
roll
movsl
setb
ss
pop
inc
jp
sub
fwait
cmp
ja
mov
xchg
push
mov
cmp
stc
pop
lods
fidivrl
rcll
add
data16
cmp
or
testl
mov
arpl
fwait
jo
scas
clc
outsb
push
cmpsl
push
mov
pop
cmc
pop
xlat
into
outsb
mov
addr16
sahf
insl
popf
mov
sub
mov
fucomp
add
jns
mov
sub
mov
mov
push
dec
push
arpl
lcall
mov
cld
movsb
mov
rep
jo
cld
lret
and
jl
mov
mov
out
or
rolb
popa
into
add
xchg
dec
sub
xchg
daa
cmpsb
sbb
lds
scas
imul
jns
fmulp
xchg
add
and
fstps
scas
jecxz
cltd
xchg
push
cli
xchg
push
repnz
bound
leave
xchg
xchg
add
fisttpll
mov
sti
jne
mov
sbb
call
inc
jbe
adc
add
popf
loop
std
jecxz
xchg
mov
cmpsb
xchg
movl
jne
inc
mov
add
int
lahf
jno
add
sbb
loop
inc
dec
push
loop
xlat
dec
lods
xchg
or
jp
lods
xchg
or
jno
cwtl
lods
cmp
mov
jg
int3
jge
cmp
pop
jp
sub
jne
jg
jo
scas
push
or
inc
sub
dec
cli
hlt
rcrl
push
lea
scas
mov
movsl
fmuls
or
mov
or
xor
out
mov
jbe
sarl
dec
hlt
and
mov
mov
mov
sahf
sbb
popa
jge
dec
adc
sbb
clc
fsubl
xor
ficomps
lock
andb
jl
jo
xchg
and
xchg
shll
scas
pusha
and
aaa
test
popa
xor
jo
pop
pop
push
aad
aam
cmp
mov
pop
mov
and
shll
dec
jne
cmpsb
pop
jbe
mov
ret
pop
pop
loop
sbb
jnp,pt
sub
and
sub
les
je
mov
pop
imul
sub
outsl
pushf
fcmovne
xor
scas
insl
lret
dec
into
jl
aas
xor
insl
lret
mov
or
je
in
pop
pop
fstsw
push
cli
lock
adc
jae
jno
lcall
int
pushf
xlat
subl
fiadds
sub
int3
pop
mov
jnp
fisubl
shl
mov
xchg
outsb
sub
xchg
xchg
fidivrl
dec
in
pusha
adc
dec
add
lods
jbe
ficompl
sbb
cmp
lret
inc
inc
popa
js
inc
repz
ss
rep
cwtl
sti
sbb
adc
call
jp
inc
dec
adc
insb
push
or
das
and
mov
inc
xor
jmp
mov
lods
mov
fldcw
lock
sbb
ret
mov
pop
data16
xlat
adcb
and
xor
test
ds
and
aaa
ret
lret
in
mov
movsl
inc
mov
inc
das
push
push
mov
and
daa
out
and
adc
xor
adc
mov
sub
cmp
dec
std
test
pop
jno
push
mov
daa
jmp
cmp
xor
or
stos
cmpsl
sbb
jmp
into
inc
push
dec
pop
cmp
adc
test
addb
sbb
repnz
xchg
and
int
subl
lea
stc
js
enter
jmp
sbb
push
lods
adc
xchg
mov
push
xor
cld
mov
psubb
dec
notb
mov
fstpt
stos
ret
orl
in
cmp
test
les
lds
add
lcall
incb
enter
jne
pop
dec
sub
jge
mov
xor
jle
pop
bound
sub
subl
jp
jecxz
mov
mov
out
xor
gs
sub
mov
clc
leave
push
lcall
aas
loop
add
xchg
cmp
jecxz
inc
inc
dec
push
aam
mov
leave
out
leave
pop
lods
jmp
inc
daa
aam
dec
xor
scas
dec
push
pusha
lahf
ss
jmp
sub
rcll
push
mov
adc
xchg
fs
pop
and
pop
mov
rcrl
cmc
ja
fisubrl
ds
scas
adc
loope
cs
push
sbb
pop
lret
shl
fdivrs
mov
sub
and
fs
pop
test
or
cmpsb
shll
mov
cmp
popa
mov
xor
xchg
mov
add
jne
dec
or
out
sub
das
cmpsl
adc
push
add
loope
decl
and
add
out
pushf
lret
pusha
stc
iret
and
mov
pushf
mov
cs
aam
dec
popa
push
jno
arpl
in
xchg
dec
inc
aas
xchg
and
in
and
ljmp
out
push
or
insl
pop
xchg
hlt
rcll
add
cmp
cmp
or
jbe
push
sub
pop
pop
pop
gs
aam
in
xlat
rcr
cli
rcrb
cltd
pop
xor
mov
enter
test
sti
outsb
js
add
adc
cmp
pop
in
cmp
xchg
sbb
aaa
in
or
jl
add
out
push
push
lahf
nop
xchg
mov
stos
fidivl
inc
in
cmovne
jle
lock
cmpsl
test
movsb
cmp
cs
or
pusha
lds
mov
push
cmp
cld
jmp
pop
repz
mov
xor
xchg
flds
pop
lea
aad
pop
fwait
insb
cmpsl
jnp
aam
bound
xor
adc
mov
imul
lcall
and
mov
imul
xor
inc
mov
sarl
sub
dec
adc
loop
xor
loope
jbe
mov
shll
lods
scas
push
in
pop
movsb
clc
pushw
mov
push
in
cmc
test
pop
add
pushf
cs
shrb
insb
paddsw
leave
imul
dec
movsb
mov
sub
dec
hlt
inc
cmp
sbb
roll
out
loope
aaa
sub
cmp
daa
js
inc
stos
mov
iret
pop
jl
in
push
adc
std
sar
dec
pop
lcall
das
ljmp
cmp
inc
jge
loopne
fbld
jmp
jae
ss
loopne
jnp
mov
fcomip
pop
cltd
pop
sarl
push
mulb
repnz
in
adc
lock
xchg
sti
mov
pop
sub
jns
adc
sbb
pushf
xchg
arpl
cmp
jge
loop
pushf
xchg
iret
pushf
inc
repnz
mov
or
jge
adcb
frstor
mov
sub
xlat
sahf
mov
pop
in
cld
and
jo
in
inc
dec
sub
jmp
push
ljmp
rcr
out
into
sub
sbb
adc
cltd
mov
rorl
sbb
inc
xchg
roll
fwait
loop
das
test
add
add
nop
cmpsl
loopne
sbb
xor
int3
scas
mov
mov
popl
inc
test
inc
pop
outsb
out
ljmp
xchg
push
add
out
imul
filds
loopne
lahf
cmp
mov
mov
dec
cmpsl
pop
sbb
lods
lods
add
inc
jge
out
jmp
add
stos
decl
icebp
ret
xchg
dec
inc
ja
jecxz
pop
sbb
cmp
test
or
inc
fisttpl
ljmp
mov
scas
sbb
cltd
cmpl
push
jmp
repnz
xor
cmp
push
fnstcw
mov
sub
rcrb
pop
push
loope
sbb
stos
js
mov
mov
pop
adc
mov
lds
dec
int
sbb
in
push
aas
or
cs
nop
inc
add
push
inc
scas
mov
sbb
rolb
jle
or
dec
stos
js
jmp
cmp
pop
push
in
mov
jl
or
stos
decb
stc
xchg
jmp
and
jnp
xchg
xchg
js
mov
pushf
xchg
mov
sbb
push
jne
sbb
push
xchg
les
hlt
stos
add
jl
loope
frstor
cs
xchg
stos
mov
mov
and
jmp
cmp
push
in
xor
sbb
dec
pop
leave
xchg
mov
daa
add
orl
outsb
and
xchg
cmc
fcoml
adc
in
int
and
iret
cmp
xor
sbb
ret
push
inc
add
stos
add
mov
mov
xchg
fisubrs
jp
jmp
loop
aad
dec
mov
sbb
ss
imul
in
je
cmp
xlat
jo
mov
sub
mov
mov
lods
lock
add
cli
mov
and
dec
adc
shll
subl
in
scas
movsb
fstl
scas
hlt
in
sbb
sti
shr
pop
jle
sub
es
push
mov
lds
add
inc
bnd
stos
fcomps
lahf
jmp
fiaddl
or
bound
shrl
adc
mov
je
clc
cmp
scas
or
ds
dec
flds
icebp
jb,pt
lret
stc
add
ljmp
push
notl
push
test
add
cmpsb
or
mov
pop
pushw
out
push
mov
or
clc
addr16
cli
dec
nop
jne
bound
inc
dec
dec
pop
sub
push
jne
pop
add
iret
call
inc
fbld
or
xchg
cmovle
jnp
mov
rcrl
stos
cmp
sahf
cld
inc
out
test
es
or
ret
xor
add
mov
or
enter
add
lock
inc
mov
mov
dec
jns
adc
bound
int3
jae
ljmp
sbb
push
js
adc
fadds
mov
mov
add
stos
push
xor
in
std
cmp
xchg
xchg
pop
add
hlt
in
popa
outsl
inc
xchg
and
mov
dec
out
mov
outsl
in
xchg
enter
pushf
push
mov
jecxz
repz
mov
stc
jg
lret
sub
adc
push
pop
js
add
jne
in
outsl
ljmp
cmp
loop
out
push
fs
test
out
xchg
push
divl
inc
cmp
aaa
cmp
jmp
mov
xchg
add
mov
lcall
mov
lret
mov
pusha
push
ficoml
js
hlt
mov
sub
mov
cmp
jle
push
mov
push
test
divb
push
daa
mov
into
inc
decl
pop
mov
and
cmc
adc
dec
push
test
and
pop
sti
cmp
xor
pop
dec
add
pusha
fsubrl
fildl
mov
pop
arpl
loopne
sbb
in
jecxz
mov
or
dec
push
inc
adc
mov
adc
sub
gs
in
sub
flds
les
inc
push
pusha
pop
hlt
fwait
jg
ror
inc
ret
jo
testb
out
aaa
sbb
mov
lret
jae
jle
outsb
inc
xchg
enter
sbbl
imul
jnp
shll
mov
or
jns
aas
cmp
mov
lods
cmpsl
sbb
cmpsb
cmpsl
sbb
ss
es
call
adc
sahf
mov
xchg
test
jmp
jo
test
in
xchg
cmpl
das
pop
add
cltd
mov
mov
addr16
add
repz
dec
xchg
adc
ret
dec
pop
clc
loop
sub
pop
adc
cmpsb
ficomps
popf
jmp
test
mov
or
test
mov
adc
scas
cld
adc
xor
mov
sbb
ds
and
pop
sarb
pushf
pop
sub
ret
or
call
ret
mov
sub
lds
popf
and
jns
daa
jne
pop
cli
or
mov
dec
std
mov
rcrb
jl
cltd
movsb
mov
insl
loop
insl
ljmp
enter
inc
int
mov
pop
sub
movsb
lea
js
adcl
xor
cmp
xchg
insl
mov
add
sbb
cmp
xor
ror
or
js
rolb
int
jb
test
push
add
push
es
imul
fwait
sub
rorb
or
jnp
adc
call
pop
fisubrl
rclb
jmp
add
aam
push
ret
mov
dec
cli
mov
loope
cld
ja
mov
fcoml
shrb
mov
test
aas
cmp
mov
int3
rcl
cmp
push
mov
mov
mov
sar
bound
jg
sub
call
bound
and
cld
xor
iret
insb
and
cmp
movsl
jae
out
movsl
jnp
cwtl
pop
push
gs
dec
rcrl
sbbb
pop
xor
sub
sub
mov
outsl
into
jnp
mov
outsl
add
pop
ror
lock
popa
daa
shlb
lock
xor
dec
fwait
insb
cmp
sbb
xchg
test
xor
shl
xchg
jnp
repz
cmp
dec
add
pop
jmp
div
jne
gs
jo
es
cs
lret
jge
sahf
dec
je
inc
dec
xchg
or
pusha
jle
pop
cmpb
adc
mov
add
js
mov
adc
shrl
push
lds
mov
loop
jp
hlt
leave
sub
and
sub
inc
inc
add
pop
or
sahf
sahf
inc
or
mov
push
aaa
sbb
sub
shlb
addb
push
rcrb
in
mov
sub
lahf
cli
adc
xor
stos
jno
pop
fadds
and
xor
dec
mov
dec
lock
dec
push
cmp
shrb
fcompl
jno
scas
mov
loope
negb
jbe,pt
cmp
jl
fcmovu
psraw
mov
and
sahf
out
xchg
adc
clc
sbb
popl
jge
divl
lret
dec
jb
inc
imul
sub
and
test
cmpsl
js
sbb
mov
pop
fldl
les
dec
lahf
mov
and
xchg
sub
aas
pusha
jb
push
mov
xor
js
xchg
and
or
xchg
xchg
push
out
fistps
subb
add
rol
cwtl
cmp
mov
pop
test
mov
inc
in
jbe
scas
jp
cmp
dec
cmpsl
idivl
fidivrs
xchg
or
xchg
adc
sbb
mov
loopne
scas
and
negb
aas
dec
int
and
cmp
inc
ds
and
cmpl
addr16
jp
aaa
mov
push
das
cmp
in
push
adcl
mov
cwtl
icebp
aad
pusha
divl
in
cmpsb
xor
loop
subl
mov
cld
jle
shlb
sub
jb
addb
fsub
jp
and
cmc
mov
mov
out
pop
lea
push
jge
mov
pop
fwait
xor
rcr
sub
out
rolb
imul
jns
or
push
pop
pushf
popa
inc
into
adc
and
jb
fisttpl
dec
mov
test
mov
push
hlt
scas
sbb
nop
add
enter
cmp
mov
ficoms
dec
cs
inc
pop
daa
out
xchg
mov
mov
xchg
scas
testl
arpl
outsb
sub
imul
sub
xor
push
sti
cmp
xor
testb
jbe
xlat
push
xor
shll
mov
mov
in
jp
adc
sub
jbe
ret
jbe
xchg
inc
lods
ds
xor
mov
and
and
or
mov
jg
jbe
movsb
gs
imul
mov
inc
seta
sbb
mov
xor
xlat
pop
mov
arpl
xor
add
popl
iret
adc
inc
dec
jno
dec
es
fimuls
scas
jns
sbb
cmp
mov
jb
sti
fmuls
out
and
imul
fidivs
jecxz
mov
cltd
sub
adc
cmp
andl
push
or
mov
mov
dec
ret
sub
adc
leave
jo,pn
pop
cmp
insl
out
adc
dec
xor
rorb
hlt
mov
add
adc
add
sbb
popa
das
push
inc
inc
cld
call
mov
jb
pop
movsb
pop
aaa
test
ss
push
xor
fsubrl
adc
sbb
jle
or
sbb
fcomip
insl
gs
daa
jecxz
pop
xchg
gs
mov
loop
mov
scas
mov
sbbb
lcall
mov
jl
push
mov
bswap
xchg
xor
lcall
and
iret
stc
and
xchg
stc
pop
mov
addl
in
sub
mov
add
pop
in
sbb
xor
mov
daa
xchg
call
sarb
scas
icebp
movsb
xlat
fcomps
rcll
imul
iret
ret
adc
daa
sahf
mov
xlat
mov
int3
push
push
loope
pop
popa
inc
imul
inc
lret
jno
mov
dec
ja
pop
sbb
xorl
jne
lock
insb
leave
pop
ja
inc
test
push
aad
loopne
andb
test
or
sub
lahf
jne
xor
popf
imul
clc
jge
and
ror
adc
fwait
xchg
xchg
xchg
movsb
dec
imul
inc
into
xchg
jo
imul
mov
dec
into
pop
scas
rcll
mov
insl
dec
fsubl
stos
jl
dec
aaa
cld
mull
adc
shrl
push
fsub
in
mov
shl
in
shll
push
pop
testb
xchg
mov
push
mov
shld
mov
cmp
fdivrs
gs
jo
xchg
xchg
out
push
mov
jbe
lock
cmc
or
cmp
push
adc
cmpsb
shll
aaa
scas
mov
and
xor
leave
mov
cwtl
jl
cmc
aam
lock
out
mov
fdivl
xor
sub
inc
lcall
cmp
es
outsl
cmp
call
pusha
stc
das
xor
mov
push
not
lret
nop
stos
sbb
int3
mov
gs
arpl
aaa
int3
std
and
dec
mov
out
insb
mov
jge
lcall
lods
ja
enter
in
mov
push
test
sarl
leave
arpl
jae
adc
fs
and
cmp
std
add
das
lret
aad
ret
test
sub
inc
arpl
dec
in
inc
mov
gs
mov
dec
xor
mov
cwtl
popf
scas
adc
or
in
stos
sbb
push
jle
add
sbb
jecxz
jge
cmp
dec
sub
imul
loop
push
pusha
subl
or
dec
push
jle
push
aaa
jne
loope
or
xchg
inc
repnz
gs
jg
imul
add
push
sub
or
xchg
popf
daa
inc
sbb
adc
mov
mov
aas
shlb
pop
inc
insb
sahf
lods
jnp
scas
adc
or
mov
cmp
es
movsl
ror
scas
mov
lret
shll
cmp
sub
and
stos
cmpsl
arpl
das
mov
cmp
pop
sbb
adc
mov
cmp
push
or
add
sbb
outsb
aas
test
iret
mov
call
out
jmp
mov
sub
lret
rcrl
sbb
xor
pushf
xchg
inc
cmpsb
push
and
and
std
les
and
pop
xchg
xchg
dec
repz
push
xor
sbbb
aad
xchg
ret
out
add
jo
jmp
mov
push
pop
cmp
push
cmp
fstps
rclb
mov
out
shrb
sbb
jle
and
popf
sub
adc
push
xorl
loop
xor
sbb
int3
pop
or
jg
xor
pop
insb
cld
cmp
in
adc
sub
or
mov
iret
in
clc
sbb
int3
pop
inc
ja
adc
andl
lahf
xor
mov
aas
vandps
mov
sub
ja
push
inc
push
pop
mov
cmpsb
jno
pop
cmc
sub
and
push
mov
stos
or
sbb
int
xor
shll
sub
push
pushf
mov
outsl
or
sub
imul
negb
fisttps
pop
incl
lods
sarb
jg
push
or
daa
cltd
imul
mov
outsb
mov
mov
and
mov
cmpsb
and
enter
call
mov
outsb
ret
cmp
mov
cmp
sbb
lret
cmp
imul
jge
aas
stc
adc
xchg
rsm
shl
je
insl
and
xchg
ficomps
out
mov
repnz
add
popa
inc
ljmp
jge
xor
cld
dec
xchg
sub
test
mov
int
lret
mov
lods
jo
ljmp
enter
imul
pop
jne
xor
lock
dec
loop
xchg
cltd
lods
cs
outsl
bound
out
leave
mov
sahf
xchg
xor
lahf
in
and
pop
rorb
mov
lss
test
aas
xchg
push
sub
cwtl
testb
clc
and
cmp
lahf
aad
push
adc
sbb
cmp
test
inc
add
lds
dec
ja
int3
dec
int3
mov
test
adc
fimuls
push
sti
jmp
orb
decl
stc
dec
adc
in
xor
sahf
and
in
test
fsubs
xchg
andl
int3
jne
jge
stc
icebp
jecxz
and
lods
cmp
out
clc
outsl
rclb
pop
fisubrl
mov
inc
into
add
cmc
sub
xor
or
dec
pop
addr16
add
cmp
scas
movsl
scas
and
sub
pop
pop
cvtps2pi
jp
movsl
mov
cmc
or
lret
loopne
mov
lods
cli
push
lods
jbe
aam
sahf
fwait
jl
dec
mov
cmp
and
jmp
adc
jne
xchg
sbb
std
xchg
or
addl
insb
scas
clc
outsb
adcl
push
xor
push
mov
push
jo
iret
sbb
int
data16
shlb
adc
mov
movsb
inc
adc
inc
ja
cmp
imul
add
call
test
loope
movsl
adc
nop
aam
jmp
xchg
fists
inc
mov
hlt
cld
popa
sbb
xchg
push
lret
and
push
fwait
scas
bound
call
ljmp
sbb
inc
mov
cmpsl
movsb
int
xchg
rcr
ja
js
movsb
fwait
fs
pop
xor
aaa
xlat
imull
outsb
ret
cld
fistpl
ret
xor
push
iret
xlat
adc
push
push
pop
inc
mov
imul
enter
xchg
sahf
jo
cmp
dec
enter
addr16
and
cli
xor
mov
jbe
or
dec
jecxz
cli
iret
dec
lahf
insb
cld
adc
dec
xchg
into
cmp
fistps
repz
imul
insb
mov
fsubrl
aas
jge
jns
push
mov
and
jns
push
call
into
sbb
call
aam
mov
icebp
stos
lds
lods
jmp
call
bound
jle
fstpl
in
dec
cmp
dec
sbb
cmc
roll
sbb
lret
cmp
sbb
xor
adc
aas
mov
or
ret
das
xor
xor
fwait
and
dec
in
mov
mov
filds
mov
cmp
aam
pushf
stos
cltd
xchg
gs
push
in
movsb
fidivrl
icebp
jae
test
xchg
mov
les
je
cmc
add
cmpsl
subb
out
dec
pop
test
fndisi(8087
pop
lcall
shll
mov
mov
call
dec
push
sub
cmp
mov
mov
pusha
in
cwtl
xor
push
mov
stos
shlb
jne
inc
and
cmp
inc
cmp
mov
outsl
push
fisttps
shlb
jl
outsb
push
int3
cmovp
mov
jb
or
sbb
pop
movsl
fists
sub
mov
clc
clc
xchg
popa
mov
nop
inc
cmpsb
jo
aad
xor
clc
lcall
arpl
mov
stos
cli
rcrb
jae
adc
lea
loop
and
iret
fldl
test
stos
dec
inc
xchg
mov
jbe
adc
xchg
mov
ljmp
mov
lret
mov
cmc
ja
scas
xchg
jbe
arpl
xchg
dec
push
cs
aas
cmp
add
or
push
inc
jae
fdivrp
pop
push
cmpsb
adc
or
jnp
nop
out
mov
fstpt
mov
push
jge
or
es
jne
mov
pop
mov
cmp
daa
mov
hlt
loopne
mul
out
lret
out
pop
pop
leave
mov
outsl
xchg
sbb
lea
mov
push
sub
cltd
push
sbb
fbstp
out
mov
pop
outsb
adc
cmp
aaa
mov
pop
fwait
cmp
add
add
adc
add
add
jne
add
push
push
imul
add
jg
dec
dec
add
push
push
jns
gs
add
push
jns
je
insl
add
adcl
je
sbb
push
imul
add
dec
gs
popa
addr16
or
push
imul
sbb
dec
dec
push
jns
je
insl
add
push
jne
gs
outsl
fs
gs
jb
arpl
fs
jae
add
ja
dec
gs
outsl
jb
push
jne
add
data16
gs
imul
push
je
insb
jae
add
insb
jae
jb
jo
outsl
add
mov
inc
insb
popa
jae
gs
add
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
add
call
cwtl
icebp
push
inc
sub
scas
dec
fsub
mov
pop
mov
add
push
and
pop
push
mov
pop
mov
jno
jno
jp
sub
jae
movswl
xor
push
sub
pop
xor
mov
mov
xor
sub
add
dec
dec
dec
and
sub
jne
mov
jmp
out
cmp
jle
sub
push
jns
jo
pop
jmp
test
mov
mov
movsb
cmp
mov
lret
rcll
not
test
or
enter
icebp
and
mov
insl
ljmp
es
add
sahf
mov
stos
adc
mov
pop
test
out
adc
dec
xchg
inc
hlt
push
pop
fcom
data16
sbb
ljmp
pop
adc
jbe
lahf
nop
insl
or
adc
or
out
mov
jbe
sub
push
insb
scas
pop
and
sahf
movsl
or
jbe
stos
adc
xchg
adc
and
push
out
adc
push
or
or
mov
in
jnp
jne
scas
fstpl
rcrl
lods
loopne
pop
pop
mov
or
mov
lock
nop
or
daa
dec
ja
clc
outsl
xchg
je
mov
jnp
outsb
mov
xlat
push
movzbl
inc
pop
mov
xchg
adc
mov
xchg
pop
mov
in
hlt
mov
loope
cmp
xor
push
pop
inc
xchg
rorb
jno
bound
inc
push
mov
cmc
xchg
ficomps
xlat
jnp
leave
or
test
addr16
daa
dec
mov
leave
pushf
jmp
xchg
imul
xchg
into
adc
movsl
repnz
ret
mov
fstps
fstps
or
inc
nop
loop
fnstenv
clc
addr16
adc
loop
daa
and
push
into
mov
loop
and
adc
or
popf
incl
sahf
fsts
pushf
fdivrs
push
lds
cmp
loopne
add
mov
add
xlat
daa
leave
xchg
test
mov
push
pop
mov
scas
jmp
loop
fldcw
icebp
fcomps
pop
mov
ficoml
into
lcall
lret
ret
xchg
dec
sbbb
mov
pop
cmpb
sbb
pop
popa
loop
fldenv
xor
loop
pop
aas
dec
or
jp
fcomps
or
in
mov
loope
in
add
imulb
mov
cmp
js
sbb
daa
out
add
sbb
pop
dec
jp
pusha
jle
xor
xchg
push
pop
jp
xchg
xor
cmpsl
lods
leave
repz
out
sub
mov
dec
popf
pop
sub
test
int
les
jp
loop
ja
bound
test
jmp
lock
cmp
push
fsubr
or
lock
dec
jne
pop
outsl
int3
xchg
sub
add
mov
je
lahf
and
mov
sub
adc
mulb
out
sub
daa
out
adc
xchg
pop
out
sbb
pusha
mov
mov
cmc
dec
out
or
repz
ret
xchg
scas
mov
jb
test
sub
inc
je
sbb
push
ret
int3
pop
and
mov
and
cmp
popf
sbb
inc
daa
pusha
and
push
and
sub
inc
lea
jne
xorb
es
and
jae
pusha
and
out
sub
ret
and
fadd
jp
adc
mov
or
dec
movsb
sub
call
adc
daa
pusha
hlt
test
dec
es
scas
sar
pop
cmpsl
aam
inc
jg
sbbb
mov
pop
and
ret
and
ret
popf
cmp
push
pop
sbb
daa
pop
hlt
int3
pop
and
leave
daa
pusha
lahf
mov
push
leave
stc
int3
pop
and
push
es
and
ret
popf
xor
and
ret
gs
pusha
insb
lods
bswap
popf
xor
and
stc
int3
pop
and
jl
pusha
and
andl
and
jle
addr16
ret
pop
popf
lret
daa
pusha
fmull
pusha
and
push
ljmp
fucomip
ljmp
lds
negl
cmpsb
sbb
pop
pop
popf
cmp
lahf
lret
daa
pusha
daa
jg
pop
jo
daa
movl
ret
inc
out
fisubl
daa
pusha
addb
pop
add
cmpsl
fcmovbe
enter
lods
bswap
popf
cmp
and
fs
and
loopne
out
stos
lahf
jno
nop
mov
loopne
mov
insb
fstpl
ret
and
ret
and
jg
jg
jg
inc
imul
lahf
pop
pop
jp
cltd
pop
cmp
jg
push
test
inc
pop
cmpsl
int3
rol
out
mov
aaa
and
cmp
jg
push
test
movsl
or
ret
cmpsl
int3
rol
out
mov
es
lcall
dec
out
xchg
ljmp
aad
sbb
arpl
jmp
dec
test
call
push
cmp
pop
mov
daa
pusha
and
sbb
out
aad
sbb
arpl
jmp
dec
test
loopne,pt
enter
enter
enter
sbb
out
aad
sbb
arpl
jmp
dec
test
mov
push
xchg
bound
or
cmp
les
xchg
sub
ret
lcall
dec
mov
sbb
out
jbe
xor
jp
and
std
sub
repnz
jle
pop
xchg
bound
repnz
xchg
dec
jb
add
call
cmpsl
adc
lock
repz
lcall
fsubrl
jg
cmpsl
adc
pop
repz
rep
jg
add
je
inc
movsl
in
es
and
sbb
pusha
lock
int3
pop
and
ret
cmp
orl
icebp
pop
and
sub
xlat
andl
daa
pusha
xchg
sub
mov
and
ret
addl
fcompl
bound
pop
enter
and
aas
add
add
movsb
and
stos
cmp
cmp
or
fs
inc
jg
pop
mov
mov
pop
sub
and
push
cmpl
sub
ljmp
jo,pt
dec
divl
int3
cmc
addr16
mov
addr16
push
sbb
ret
int3
ljmp
ret
and
ret
and
ret
and
adc
pusha
pop
xor
and
ret
and
jle
lahf
and
ret
and
ret
and
ret
and
ret
and
lcall
and
add
nop
add
mov
mov
pop
xchg
cmp
pop
inc
xchg
sub
and
mov
std
dec
dec
push
enter
pcmpeqb
lcall
dec
mov
pop
push
arpl
mov
dec
or
sbb
push
jbe
add
andb
bound
into
push
punpckhbw
aaa
imull
shr
cwtl
js
iret
adc
push
dec
mov
and
xor
imul
bound
lods
mov
xchg
adc
bound
mov
push
ja
test
xchg
insb
or
push
out
mov
mov
iret
ja
repz
mov
cli
outsb
xchg
and
hlt
fs
out
adc
mov
pop
pop
fwait
dec
and
add
add
add
rolb
rolb
jo
add
rolb
sbb
fiaddl
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
fiaddl
add
flds
add
fiaddl
add
fildl
add
fiaddl
add
add
or
add
dec
fildl
add
fildl
add
fildl
add
add
sub
add
popa
fildl
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
jnp
add
add
add
mov
add
add
add
sahf
fildl
add
add
add
add
ret
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
imul
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sbb
popa
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
fnsave
pop
stos
inc
mov
testl
fisubrl
mov
scas
movsb
mov
sbb
idivb
push
push
inc
add
xor
testl
adc
pushf
dec
sbb
adc
cwtl
add
mov
inc
lock
or
mov
mov
xchg
or
test
mov
sub
jmp
daa
or
cld
mov
mov
dec
das
push
jge
jecxz
fistl
push
xlat
jmp
enter
loopne
jno
jmp
movsb
pop
ret
mov
pop
adc
scas
cmpsb
dec
jnp
xchg
sbb
jp
cmp
fnstcw
dec
test
jge,pt
push
je
sbb
sbb
into
jns
push
mov
test
in
scas
pop
mov
add
cmpsb
adc
add
pusha
lea
call
push
int
inc
bound
data16
jecxz
scas
scas
cmp
shrl
jo
les
out
insl
test
subb
int3
add
popf
lcall
insb
std
xor
add
mov
or
vcmpss
inc
pop
bound
cli
outsl
cli
sub
and
cmpsb
cmc
enter
aaa
dec
gs
iret
aaa
dec
sarl
fimull
xlat
jno
clc
cwtl
icebp
aaa
xor
rolb
loop
arpl
xchg
sbb
and
mov
push
enter
xchg
cwtl
cmp
and
mov
jle
jne
ljmp
push
nop
pop
inc
call
es
xchg
cltd
pop
sub
andl
lcall
inc
fs
sbb
and
ret
pop
sbb
jmp
dec
ljmp
jae
das
sbb
mov
imul
imul
lcall
scas
icebp
dec
scas
cmp
int
repnz
sub
out
cwtl
xchg
cmp
add
nop
add
ljmp
aas
and
hlt
jnp
cmovge
mov
insb
int3
ss
in
aas
pop
sbb
and
push
dec
sub
stc
sbb
fmull
ljmp
pop
shlb
pop
xor
mov
pop
imul
jg
in
and
fimull
fldt
push
stos
popa
push
int3
scas
push
cmp
or
mov
sbb
repz
in
retw
jae
sub
jne
dec
push
or
pop
in
das
mov
loope
repz
dec
les
mov
add
adc
int
popf
jg
imul
lods
dec
jecxz
cmp
inc
fs
popf
mov
test
push
data16
add
fmul
push
sub
sub
adc
scas
mov
mov
je
adc
mov
xor
aam
mov
mov
cmc
xor
sub
jle
ljmp
test
cmpl
mov
mov
and
inc
mov
cmp
jmp
dec
sub
cs
clc
adcl
lret
rcrb
xor
cmp
mov
out
popf
adc
roll
scas
jge
add
lods
mov
roll
movsl
xchg
lock
test
je
cs
aam
int
inc
in
lea
lods
pop
sbb
sbb
daa
arpl
stos
shl
insb
pop
lock
fists
adc
aam
leave
data16
mov
and
sbbb
jl
sarl
xchg
sbb
adc
lahf
push
push
dec
scas
neg
subl
shl
inc
les
ret
or
in
dec
js
sub
movsl
imul
popf
mov
lock
call
frstor
xor
cmp
cmpsl
jbe
enter
push
mov
test
loop
push
mov
or
test
dec
loopne
cld
test
mov
xchg
aad
pop
pcmpgtw
add
pop
or
stc
sub
xchg
std
idivl
cmp
mov
test
mov
xchg
stc
jnp
pop
lods
add
inc
sub
andl
adc
jge
push
adc
sub
mov
add
dec
mov
sub
push
mov
or
cmc
add
add
jge
xchg
rcrb
imul
out
xchg
dec
inc
js
mov
mov
daa
dec
dec
or
leave
out
inc
imul
outsl
cmp
push
popa
xor
add
push
aad
sbb
push
xchg
and
inc
inc
lods
mov
subb
xchg
dec
jae
repz
mov
mov
cmp
nop
dec
adc
andb
fcomps
adc
leave
xchg
daa
cmpsb
fsubr
ljmp
mov
aam
aam
jge
pop
in
lock
inc
or
js
and
mov
andb
in
mov
sub
mov
sbb
or
es
mov
sub
fldl
inc
fstpt
jp
pop
mov
mov
jno
adc
stos
aaa
and
and
subb
popa
jle
or
fmull
icebp
sarb
sub
cmp
fs
mov
cmpsb
sub
jo
jecxz
aam
xchg
scas
mov
lret
jg
push
int3
int
jns
je
mov
xchg
in
xor
add
dec
test
add
pop
sbb
sbb
add
push
sbb
xchg
dec
pusha
mov
fwait
pop
adc
out
lods
mov
inc
jnp
imul
xchg
xor
mov
xchg
dec
add
fwait
jmp
mov
add
mov
in
xchg
pop
sbb
jns
aad
mov
les
fdivl
mov
pop
push
jle
mov
add
fs
sub
ret
xchg
iret
mov
sub
xor
or
and
xchg
call
divps
test
fmuls
or
pop
test
cmpsl
loopne
mov
pop
sbb
dec
test
mov
ljmp
stc
fs
mov
jge
add
push
and
in
mov
sub
nop
lea
mov
fcoms
insl
les
nop
rcr
inc
push
push
idivl
sbb
sbb
jo
into
fwait
repz
lods
das
icebp
punpckhdq
repnz
js
inc
or
adc
out
xor
sbb
insb
xlat
or
pop
mov
jmp
imul
ja
aaa
sub
fisttps
mov
in
xor
mov
xchg
shrl
pop
lret
push
xchg
test
pop
xchg
cli
ljmp
enter
jne
pop
mov
cmpsl
jne
add
fdivl
jae
scas
stc
jne
hlt
adc
sub
aam
inc
hlt
pop
stos
cmp
test
pop
lcall
loopne
inc
das
test
or
inc
fwait
jg
sbb
dec
mov
jge
push
cmpl
loop
or
lahf
mov
lcall
cwtl
aaa
dec
addb
push
je
outsl
sub
mov
femms
mov
lods
mov
sub
repnz
inc
cmp
into
test
dec
sub
aam
adc
dec
push
bound
fadd
std
loopne
adc
loop
push
xor
add
out
cmp
push
stos
jno
cmp
or
jns
mov
fdivs
pop
and
in
mov
test
js
fs
jns
leave
dec
add
xor
jne
cmp
inc
push
dec
stos
xor
or
mov
and
cs
or
repnz
xor
xor
or
xchg
mov
pushf
xor
sbb
xchg
inc
pop
rcll
jo
sub
popf
dec
shll
movsl
lcall
mov
and
pop
and
sub
cmpsb
add
jne
ret
pusha
mov
lret
mov
mov
xor
pop
xor
sarb
mov
xor
jg
inc
pop
ljmp
orl
rolb
pushf
dec
inc
rcrb
xor
icebp
mov
cmp
inc
fistpll
xor
clc
imul
sub
lods
addr16
dec
xchg
fldenv
adc
push
mov
sbb
mov
mov
jecxz
movsl
leave
xchg
ljmp
movsb
push
xchg
mov
incl
ds
inc
clc
xchg
test
mov
mov
xor
dec
sub
mov
std
insb
pushf
fs
add
fidivrl
pop
or
add
stc
sar
push
adc
int
scas
mov
ljmp
pop
insb
jno
jge
cmp
push
out
inc
lea
ret
insb
ret
ljmp
aas
dec
pop
out
and
int3
in
jb
xchg
push
mov
push
sbb
insb
sbb
dec
adc
sub
out
mov
cwtl
mov
mov
movsb
jg
fucom
lahf
inc
pop
fisttpl
xor
xor
mov
test
insb
pusha
xor
les
inc
aas
xor
mov
sbb
popa
ret
jae
xchg
push
pop
and
int
pop
seta
cmp
outsl
jle
loop
call
addr16
jns
jecxz
pop
mov
mov
push
xchg
push
push
sti
inc
or
stos
xchg
addl
adcb
std
pop
pop
lds
mov
cmc
fs
lods
xchg
lods
inc
movsb
or
mov
inc
fwait
inc
call
dec
jmp
cmp
mov
sub
fsubrs
imul
fcoml
push
enter
lods
mov
mov
jnp
lods
lods
ljmp
das
or
or
insl
fwait
std
movsb
or
test
popa
push
mov
push
test
fsubs
add
pop
push
mov
xchg
enter
mov
xchg
lods
xchg
add
cmp
jno
adc
fmull
mov
lret
pop
sub
int3
or
jae
test
add
xor
movsl
mov
pop
iret
xor
sbb
scas
or
outsl
adc
push
pushf
leave
lods
sahf
adcl
ret
inc
rolb
jge
add
imul
in
sbb
or
pop
test
add
and
lds
cmpsl
int
sbb
stos
repnz
cmp
jl
xchg
adc
xchg
arpl
leave
aas
push
jmp
icebp
je
and
pop
ja
inc
sub
hlt
cmpsl
xchg
mov
and
std
clc
sbb
jecxz
mov
add
lds
cs
xorl
inc
xor
mov
mov
hlt
rclb
cmp
icebp
shlb
lea
fs
dec
pop
aad
lcall
lods
push
outsb
out
sbb
push
dec
jnp
push
or
cmp
leave
in
or
mov
aaa
les
xor
sbb
movsl
pop
mov
and
notb
cmp
lods
arpl
sub
sbb
mov
or
ja
ds
lock
and
popf
lds
adc
pop
insb
mov
incb
arpl
cmpsb
ficompl
pushf
xchg
cld
loopne
jno
into
sub
cmpsl
sbb
sub
jecxz
loopne
jno
loop
jbe
dec
xor
lret
sub
loopne
jno
xor
out
cmpsl
dec
pop
int3
or
cmp
hlt
mov
adcl
sbb
pop
insb
dec
add
cmp
jno
cmc
ficoms
sub
pop
xorb
sti
sbb
or
fnsave
xor
mov
cmp
stos
lea
es
push
popl
fisubrs
push
jl
mov
add
iret
loope
mull
je
pop
ljmp
mov
mov
mov
and
icebp
ljmp
cmpsb
jmp
xchg
cmp
cld
sub
lock
pop
call
push
lcall
or
test
or
mov
int3
jmp
das
fimull
cli
test
mov
inc
test
jne
stc
jbe
mov
test
aam
mov
pop
jb
mov
xchg
xchg
sub
xlat
jmp
cmpsl
gs
stc
std
sar
push
bound
jnp
inc
das
imul
dec
add
lods
adc
cmp
into
gs
mull
pop
push
mov
jbe
mov
cmp
xchg
xchg
shll
mov
mov
adc
rep
add
stos
or
lods
sub
not
adcl
mov
add
je
pop
aam
out
xor
arpl
inc
jecxz
sub
test
insl
push
repz
cmp
pop
xchg
shrb
cmp
cmpsb
mov
cmp
into
into
mov
fisubrs
lods
sbb
mov
sub
repz
addb
jne
mov
ss
repz
push
pop
xor
shrb
lret
lods
cmp
jne
int
adc
faddl
xchg
pop
dec
jo
sbb
nop
sti
mov
fsubrl
push
test
in
arpl
into
adc
cli
out
mov
aam
mov
jno
add
into
leave
std
stc
dec
jge
gs
cmp
insl
lret
or
jge
cli
and
out
or
ljmp
loop
out
xchg
mov
sub
loopne
mov
xor
ret
jge
xchg
pop
rolb
inc
popf
mov
sbbb
lods
mov
mov
and
sbb
adc
movsb
or
xchg
dec
int
cmp
or
icebp
xchg
test
cmpsl
inc
mov
add
out
scas
push
stos
flds
push
mov
sahf
add
out
js
jnp
mov
shrl
rolb
in
cmp
xor
repnz
xlat
mull
dec
shlb
fwait
cmpsb
arpl
mov
pop
fsubs
into
push
mov
adc
ret
or
push
es
add
rolb
inc
mov
cmp
push
mov
movsl
aam
xchg
xor
outsl
fcomps
jae
pop
sbb
out
scas
jle
aas
call
std
shll
adc
stos
int
or
or
addr16
cmpsl
ret
sub
movsb
fdiv
or
or
pop
aas
or
loop
shrb
cli
repnz
sbb
clc
or
imull
stc
std
mov
outsb
sub
sbb
in
pop
add
jg
movsl
loope
inc
and
rclb
mov
aam
sbb
dec
imul
mov
or
dec
dec
sub
inc
or
adc
fsub
test
jo
aad
mov
push
out
repz
ficoms
cmpsl
fnstcw
das
std
repz
inc
mov
sti
xchg
mov
xor
mov
or
sbb
dec
push
mov
jmp
mov
jns
cld
mov
xor
popf
xor
sbb
int
jno
push
mov
ja
dec
or
xchg
insb
add
and
fs
pop
andl
adc
loop
push
lods
adc
add
cmpb
and
dec
sub
fwait
mov
push
adcb
int3
push
jno
cltd
test
clc
repnz
mov
les
or
stos
jl
or
scas
es
push
mov
push
inc
into
xor
les
pop
or
inc
push
mov
aaa
stc
test
fcmovne
cli
repz
sub
shll
in
xchg
das
adc
icebp
les
pop
xor
sub
lods
jbe
fcoml
icebp
push
and
arpl
mov
rcrl
sbb
lods
mov
add
je
mov
cmp
dec
sub
test
jbe
outsb
and
jl
fs
push
cmp
icebp
jae
or
pop
push
aad
push
out
xchg
ret
cli
cld
dec
addr16
adc
jns
xchg
push
and
imul
lret
iret
daa
int3
add
add
call
xchg
jmp
jmp
scas
xchg
lea
leave
cmpsl
imul
nop
clc
dec
sbb
push
fdiv
call
xchg
aas
sahf
mov
push
xlat
xor
sub
orl
nopl
loope
mov
fidivrl
in
inc
es
filds
jo
jne
jmp
mov
lret
lahf
push
pop
mov
in
mov
out
push
mov
jns
xor
push
jp
inc
out
push
push
cmp
mov
add
out
jg
cmp
fbld
xchg
add
das
or
or
or
adc
lcall
xor
div
test
pop
out
pop
jne
in
cmp
dec
sub
mov
loop
mov
insb
mov
cmp
pusha
hlt
pop
xchg
sub
repz
sbb
rcrl
push
loop
xor
xor
not
lock
mov
sub
mov
and
outsl
pop
add
clc
gs
aad
xorl
xchg
push
sbb
idivl
or
mov
cli
xor
push
shll
xor
negb
mov
ljmp
lds
push
and
add
notb
push
lds
orb
add
enter
xor
popf
repz
shrl
call
inc
sbb
cmp
xorb
mov
imul
in
jne
jp
mov
js
pop
sbb
dec
in
loop
insb
cs
mov
lahf
dec
aad
dec
incl
jae
inc
jmp
mov
mov
popf
push
in
addr16
aad
aaa
fnsave
add
das
stos
mov
or
mov
push
adc
dec
negb
enter
movsb
mov
add
mov
lret
pop
jno
inc
sub
xor
inc
fmull
aaa
enter
rorb
pop
test
insl
jbe
and
mov
pop
fisubs
pop
les
adc
sbb
cld
movsb
or
fmull
test
sbb
jne
addb
mov
loop
xchg
loop
jnp
mov
add
es
push
pop
cmp
ja
test
iret
loopne
iret
cld
es
mov
xor
je
cmpsb
xor
fistps
jg
jmp
add
ss
jae
and
lahf
lods
push
arpl
repnz
pop
adc
cvtps2pi
cs
xor
jg
sub
lock
jns
ljmp
xchg
xor
xchg
mov
push
mov
ret
into
fsubs
mov
pusha
lcall
inc
xchg
bound
or
in
xchg
xchg
idivl
popf
stos
into
test
imul
add
rorl
popf
xchg
dec
sub
pop
sub
dec
and
pushf
daa
rorb
orl
rorb
test
xlat
add
in
dec
stos
in
mov
cs
push
jo
cmp
js
jmp
movsb
dec
add
mov
push
imul
push
and
pushf
insb
scas
cltd
jae
or
xorb
mov
jno
cmpl
dec
enter
rcl
cmpsl
pusha
jle
pushf
mov
ret
or
push
xor
mov
imul
ficompl
cli
pop
dec
aaa
add
movsb
pop
adc
mov
sub
xchg
sbb
fdivs
sbb
pop
push
xchg
ja
lret
fcomip
das
mov
mov
loop
inc
sbb
shlb
sar
out
out
mov
nop
shll
xor
push
stc
lods
pop
out
arpl
loop
test
gs
stc
in
ret
loopne
imul
mov
pop
xchg
fsubrl
push
cmp
iret
imul
je
add
mov
dec
jnp
inc
xorl
decl
adc
mov
push
pop
xchg
dec
lock
xorb
inc
push
mov
sbb
fisubrl
test
push
js
jae
pop
inc
pop
mov
cwtl
mov
sub
movsb
xchg
testb
push
add
xchg
mov
neg
mov
fistpl
jmp
stos
inc
xor
mov
insb
es
imul
sub
mov
cmc
sbb
roll
ret
mov
roll
or
out
and
scas
inc
or
insl
jmp
out
push
mov
push
jne
sahf
cltd
cmp
out
adc
or
lahf
icebp
xchg
dec
ljmp
cmp
or
or
mov
or
sub
push
inc
cmpsb
loope
xchg
cmpsl
lahf
inc
and
mov
leave
mov
mov
push
and
add
fwait
cmp
jl
cmp
mov
xlat
add
popa
into
mov
je
shrl
insb
jecxz
pmulhw
sub
mov
cmovae
add
xor
push
cmp
mov
sbb
sbb
mov
sahf
pusha
rcrb
bound
xor
push
push
jbe
dec
stos
scas
rcrb
lret
flds
loopne
test
xchg
movsb
out
roll
xor
mov
test
jp
aam
insl
mov
shll
mov
add
xor
adc
movl
dec
xor
aad
in
mov
ret
xlat
test
cmp
adc
push
add
fcompl
jbe
mov
mov
icebp
mov
jl
fdivl
jo
add
push
pop
xchg
or
sbb
inc
sbb
or
sub
dec
sti
jns
lcall
pop
std
jnp
mov
push
mov
pop
lret
insl
and
out
mov
mov
js
sbb
and
jg
mov
xor
adc
add
mov
pop
loop
mov
xor
out
push
and
sbb
xlat
int3
or
insb
xchg
hlt
add
je
sahf
loopne
ret
cmp
subl
sbb
fldcw
mov
mov
mov
push
mov
cltd
addr16
in
jg
shrb
jbe
mov
std
sbb
jbe
sahf
xchg
xor
dec
and
sub
or
fstl
movsb
push
iret
jb
js
xor
data16
pop
stc
popf
mov
inc
int3
stc
scas
int
sub
mov
bound
fnstsw
test
mov
int3
cmpsw
ja
inc
das
loop
pop
adc
mov
jmp
loopne
add
xor
out
ja
loopne
mov
xlat
jno
fisubl
jecxz
pop
cmpsl
arpl
mov
dec
shll
cmp
lret
outsb
push
movsl
sbb
stos
rolb
sbb
xor
cltd
call
xor
imul
inc
hlt
int
fmul
or
sti
ror
js
jne
push
andl
mov
leave
inc
push
popa
mov
pop
xchg
mov
icebp
mov
ret
cmpsb
mov
xor
mov
pcmpgtb
int
mov
push
stos
dec
inc
mov
mov
insb
pop
divb
adc
or
mov
push
jmp
adc
jle
xchg
iret
cmp
jne
pop
xor
das
stc
decb
repz
pop
dec
sbb
sub
inc
ja
cmc
xor
ja
lods
daa
ret
cwtl
sbb
jmp
fsub
push
mov
loop
outsl
cmp
adc
sbb
xchg
jns
int3
repnz
and
mov
mov
aas
fcomps
in
aam
or
aaa
loopne
scas
sbb
dec
lods
in
daa
push
stos
pop
push
inc
in
mov
sbb
sbb
ja
pop
and
cltd
aas
enter
lcall
adc
pop
xchg
inc
sub
pop
inc
sarb
push
inc
xor
adcb
mov
cwtl
inc
pop
ror
mov
sub
push
pop
mov
mov
or
push
test
outsb
clc
ret
or
xlat
jnp
repnz
mov
mov
mov
jg
xchg
es
orb
int
es
xchg
test
adc
dec
mov
ret
in
push
das
ret
inc
jp
mov
inc
jno
adc
cmpsl
rcrl
push
mov
ja
mov
and
lods
rolb
or
loop
jbe
clc
testb
pushf
test
adc
mov
shrl
enter
imul
adc
dec
dec
in
dec
mov
lods
clc
pop
in
xorl
jmp
xchg
out
pop
stos
xorl
inc
jecxz
sub
int3
aas
dec
ja
and
sti
adc
sub
mov
aas
mov
add
sub
xchg
movsb
sbb
int3
fwait
loop
push
sbb
pop
sub
cmp
fisubs
adc
pop
mov
fnstenv
inc
xchg
add
dec
in
push
dec
push
out
sbb
ds
sti
cmp
and
dec
lods
pop
popa
in
or
test
js
in
cmp
stos
mov
mov
add
adc
dec
mov
insl
int
outsb
or
xor
push
ja
mov
push
inc
add
leave
lahf
push
sahf
dec
rcll
pop
or
push
in
and
les
xchg
shlb
cwtl
jg
xchg
pop
mov
iret
ret
mov
jecxz
loop
or
dec
sbb
or
xchg
push
test
inc
sti
push
sbb
sbb
mov
adc
out
mov
mov
inc
and
data16
popa
in
inc
repnz
push
loop
mov
inc
jnp
into
jb
test
sub
imul
std
adc
mov
int3
jnp
inc
mov
movsb
mov
and
and
and
pop
adc
jge
sahf
mov
das
xor
xor
ds
fcmovne
stc
arpl
lea
ljmp
lds
call
mov
push
mov
push
hlt
pusha
nop
in
jg
xchg
push
ror
sbb
pusha
scas
pop
lea
pop
adc
into
jp
subb
dec
jmp
cmp
das
faddp
cmpsb
xchg
pusha
cmpl
scas
aaa
fxch
js
adc
enter
pusha
pusha
cli
mul
std
mov
or
test
pop
fidivrs
inc
andl
addr16
jnp
or
add
jo
add
cmp
outsl
ja
dec
cmp
push
movsb
mov
repz
adc
bound
aad
inc
xchg
and
dec
call
mov
imul
repz
cltd
jge
or
hlt
xchg
xchg
xchg
fmull
xor
iret
fisubrl
std
test
cmp
mov
cli
les
sbb
icebp
xor
scas
cli
ja
arpl
xchg
or
jge
repnz
sbb
lods
cmp
mov
cmp
mov
push
inc
fs
in
repnz
push
insb
inc
out
orb
std
xor
dec
dec
stos
std
sub
or
imul
jbe
aad
adc
stos
xchg
dec
cwtl
dec
ja
jnp
lahf
outsb
and
int3
ret
cmp
imul
mov
movsl
lret
pop
xor
jmp
clc
ja
mov
jns
nop
cli
dec
xor
out
stos
test
xor
cmp
sti
jg
mov
xor
je
aam
leave
pop
pop
data16
push
das
test
loopne
mov
daa
shlb
jo
jmp
movsl
cmpb
fsubp
mov
jl
mov
mov
adc
mov
mov
push
pop
adc
push
mov
adc
xchg
repnz
in
push
ret
mov
inc
cmp
lea
lret
xchg
ret
ficomps
dec
or
sub
fdiv
mov
shr
ret
jbe
insb
outsb
jle
pop
les
insl
adc
fs
inc
jmp
shrb
movsb
sub
push
das
inc
jle
cmp
xor
sarl
decb
daa
pusha
sub
mov
jge
lret
mov
push
stos
mov
mov
les
inc
or
push
pop
push
or
adc
cmp
divb
mov
jp
in
inc
inc
mov
test
out
pop
je
aad
fdivr
sub
lock
push
pop
push
mov
lea
xor
ret
subl
js
insl
in
mov
lock
jg
push
sbb
call
xor
push
nop
ljmp
fmuls
cmp
cli
mov
inc
mov
xchg
inc
push
jle
popa
mov
paddsw
push
xor
icebp
xor
daa
dec
sbb
stos
leave
lea
inc
mov
xchg
mov
xchg
subb
idiv
push
pop
cmp
lds
sbb
pop
fld
dec
dec
xor
or
out
sbb
push
jmp
jno
pop
test
arpl
cmp
test
sarb
xchg
jp
gs
mov
push
pusha
mov
xchg
adc
sbb
adc
cmp
mov
jl
cmp
inc
xchg
cmpsb
xchg
test
sub
cmpl
and
out
rdtsc
mov
insl
adc
push
dec
sbb
jp
sub
insb
pop
negl
pop
push
mov
in
js
push
mov
int3
in
pushf
int
pop
fidivl
mov
and
insb
lret
mov
add
sbb
in
rolb
ret
mov
sbb
lret
sub
test
push
bnd
xor
add
bnd
outsb
dec
pop
mov
jns
cmpsb
jbe
sub
imul
pop
inc
sbb
lock
lds
adc
int
addr16
or
aas
sub
adc
or
dec
push
jnp
roll
gs
lahf
out
sbb
sbb
xor
fiaddl
ljmp
cmp
push
dec
mov
sub
mov
adcb
dec
xor
dec
iret
pop
sub
inc
movsb
mov
jo
sbb
je
sub
jae
add
cmp
mov
pusha
cld
movl
adc
and
aad
sbb
loop
pop
gs
adcl
icebp
lret
nop
add
dec
fisubrl
push
scas
mov
daa
into
inc
sub
pop
sub
mov
push
sub
jle
pop
pop
xchg
loope
hlt
out
inc
fwait
jmp
mov
adc
ficoms
aam
mov
jp
sub
and
es
sub
outsb
add
mov
in
aas
pop
cmpsl
loop
out
jno
ficoml
outsl
cli
insb
orb
popf
adc
pop
xorb
mov
popf
push
test
pop
clc
jmp
mov
and
addr16
and
cmpsl
popa
xor
push
adc
xorb
jg
lea
sbb
mov
mov
mov
mov
dec
iret
fistps
outsb
mov
mov
insl
mov
inc
int3
ljmp
inc
adc
fidivl
cmp
sub
mov
loop
xchg
aas
es
jecxz
jnp
cmc
xchg
stos
mov
push
ljmp
push
test
dec
sar
in
imul
sub
and
xchg
or
or
xchg
xchg
lods
aam
adc
inc
loope
ret
sbb
jne
or
cmp
jge
mov
add
aas
shl
jo
dec
jle
inc
adc
out
pusha
loope
jmp
shrl
loop
stos
jmp
test
dec
aas
pusha
ds
inc
fdivrs
ret
mov
repz
cmp
outsl
pop
fdivs
movsb
mov
mov
xchg
outsl
mov
and
rcrb
cmp
vmread
divl
mov
push
and
and
sub
fisubrs
mov
sbb
das
popa
test
loope
out
add
cmpsb
inc
lds
shrb
repnz
push
add
inc
sub
adc
pop
pop
push
adc
pusha
and
add
gs
ret
ret
aam
mov
mov
mov
mov
pop
or
lds
call
out
stos
or
xchg
dec
dec
jle
mov
pop
imul
sbb
add
fisubrs
add
cmp
idivl
popa
gs
xor
mov
mov
xchg
jbe
pop
inc
leave
jae
dec
int
pop
pop
xor
je
mov
aaa
shrl
mov
sbb
sti
fimuls
or
std
adc
cltd
dec
jg
movsl
aad
das
mov
mov
pop
stc
cmpsb
mov
fldl
jno
mov
cltd
rcrl
mov
int3
movsb
jo
or
lea
test
xchg
lcall
aas
roll
out
add
lea
fdivrs
xor
xchg
push
mov
iret
or
jnp
aas
fimull
inc
cli
les
jo
aad
enter
aaa
xor
jnp
sbb
xlat
rcrb
push
fcoms
repnz
sbb
jge
imul
pop
inc
xor
inc
shrl
add
mov
stc
cmpsb
icebp
cwtl
and
dec
dec
jne
loopne
rcl
movsb
sbb
mov
mov
scas
mov
and
pop
scas
mov
sub
jp
jecxz
push
jge
dec
xchg
or
add
out
imul
pop
mov
fdivs
std
pavgw
scas
add
cmpsb
jmp
cmp
test
cmp
sbb
std
in
dec
mov
xchg
pushf
jge
insl
bnd
bound
stos
stos
cmp
jns
pop
pop
adc
adc
orb
jb
xchg
andl
and
jl
fdivl
push
or
fildl
jmp
mov
sti
xchg
mov
pusha
rorl
pop
stos
jno
xchg
mov
xor
push
sbb
push
sarb
mov
movsb
je
orb
mov
jne
push
cmp
out
data16
out
jmp
mov
dec
push
scas
push
lret
lds
fidivrs
frstor
mov
xor
hlt
push
jmp
push
movsb
lds
adc
stos
push
mov
out
in
bound
or
pop
data16
xchg
cmc
sahf
rcrl
mov
or
mov
lret
bound
mov
xchg
scas
stc
mov
pop
push
lcall
xchg
repnz
js
mov
sbb
rorl
insb
daa
fdivp
stc
das
fstl
xor
mov
mov
dec
adc
fadds
roll
imul
adc
lret
imul
xor
shl
mov
inc
inc
xchg
ljmp
dec
add
stc
mov
pop
sbb
outsl
fnstenv
pop
shll
push
shrb
popa
cmp
in
lret
push
mov
mov
mov
lahf
iret
or
add
adc
sbb
push
mov
inc
jnp
pop
inc
fstpl
push
xchg
stc
fcmovne
fsts
cld
outsb
test
arpl
cltd
imul
adcl
xchg
mov
xor
sbb
jne
sti
cwtl
xchg
fmull
sarb
pop
sahf
movsb
sbb
arpl
pushf
outsl
sahf
xchg
int3
xchg
mov
movsl
and
inc
adc
pop
pushf
pop
mov
or
sbb
fsubrs
std
pop
xor
movsl
popf
xchg
inc
xchg
jb
ret
cmp
in
mov
xor
out
adc
out
add
mov
je
mov
bound
xor
sahf
mov
push
int3
inc
sub
jae
ret
push
jmp
out
fs
jne
mov
pop
adc
aaa
sbb
xchg
sbb
aas
fwait
adc
popf
je
daa
fbstp
pop
jo
repnz
mov
cmp
shrb
cmp
xor
jo
cltd
pop
add
loop
shl
js
xchg
or
addr16
negl
mov
sbb
inc
pop
fildl
or
adc
scas
dec
sbb
push
pop
dec
mov
lods
mov
cmp
sahf
scas
cld
mov
rol
sub
in
xor
pusha
scas
add
cmc
mov
test
cmp
push
loope
xchg
in
cld
sub
xor
div
shl
enter
sub
push
inc
cmpb
ljmp
push
inc
inc
loopne
inc
mov
jo
repnz
mov
lretw
aas
fwait
cmp
and
jge
dec
mov
dec
push
out
outsl
jno
jnp
xchg
jnp
mov
in
add
outsl
or
test
mov
add
dec
cmp
inc
stos
lret
call
push
insb
pop
xor
jecxz
mov
stos
or
mov
ja
fidivl
pushf
aas
adc
push
ret
mov
fisubs
mov
push
data16
push
xchg
loopne
and
add
mov
mov
enter
loope
sahf
mov
xchg
xor
idivl
clc
pinsrw
test
dec
das
les
jmp
sbb
sbb
pop
xchg
dec
ret
mov
xchg
mov
cmp
mov
shlb
cltd
ja
lods
xor
pop
jno
mov
lcall
push
pop
mov
jns
xchg
fwait
test
mov
inc
xchg
inc
cltd
mov
xor
cli
outsl
cmp
lds
stos
sbb
insl
fwait
or
or
cmp
or
mov
mov
sti
xchg
cmpsl
lsl
ret
repnz
clc
popa
jle
push
shlb
movsb
rcr
shll
out
cmp
xor
adc
jno
xor
shl
mov
mov
pop
adc
sub
sbb
cmpsl
add
dec
mov
loopne
insb
sub
loop
and
mov
stos
enter
lods
sbb
jp
jg
xchg
sahf
adc
out
decb
call
or
jmp
loope
pop
jns
in
out
adc
hlt
and
jns
cmp
mov
fs
iret
adc
cmp
movsl
sbb
jns
mov
lcall
dec
test
push
clc
or
dec
xor
cmpsl
mov
push
xor
sub
in
jmp
push
insl
push
andb
push
cmp
std
testb
andb
je
jns
pop
hlt
shlb
xor
gs
xchg
jmp
lahf
fstps
cmp
inc
xchg
int
mov
dec
popf
push
idiv
enter
xor
shl
arpl
dec
les
addr16
mov
or
xor
xor
jae
lods
xchg
push
jbe
add
lock
and
cmp
add
dec
xchg
pushf
shrl
fs
add
mov
xchg
jl
xchg
xchg
inc
test
sbb
mov
sub
jmp
xchg
in
test
mov
fldl
sub
inc
in
and
and
and
mov
dec
pop
xchg
lods
mov
add
sub
xlat
pop
adc
xor
cmpsl
lock
push
adc
cmc
out
xchg
fmulp
fnsave
outsb
es
push
stos
pop
out
push
fsubrl
rolb
nopl
arpl
xchg
leave
xchg
scas
loop
aas
rorb
jae
mov
jle
cs
dec
movsb
and
pusha
pushf
imul
repnz
xchg
mov
inc
xor
enter
mov
arpl
nop
mov
ret
jp
ds
test
popf
stos
xchg
stos
inc
cwtl
inc
lret
xorb
mov
xchg
inc
mov
in
in
xlat
adc
stos
cmp
push
lods
and
push
sbb
mov
and
dec
lods
js
push
jbe
stc
pop
xor
ds
jl
inc
push
xlat
jbe
push
sbb
leave
sbb
out
lods
mov
ficoml
lret
push
jbe
test
loopne
push
je
add
in
lods
andb
call
inc
cmc
dec
or
out
add
cmp
inc
mov
out
test
cli
dec
incl
in
ret
mov
inc
xor
pop
ja
aam
out
xor
mov
sbb
xlat
je
or
lea
pop
and
xor
mov
das
or
mov
cmp
or
sbb
mov
dec
mov
or
jns
xor
mov
jp
push
and
mov
fnsave
in
or
xor
jmp
jb
outsl
movsl
dec
test
and
add
shl
xor
mov
jnp
gs
sbb
loope
rcrl
mov
mov
ljmp
stos
push
cmpsl
fcoms
xchg
test
jnp
mov
adc
leave
in
mov
cmpsb
dec
call
sbb
mov
xchg
mov
shll
ljmp
pop
pop
inc
push
push
sub
and
int
mov
lret
pop
lret
pop
stc
fdivl
dec
adc
adc
shlb
mov
sub
pop
and
in
lods
xor
sahf
cmp
ret
lcall
cmp
lret
mov
ljmpw
aam
ja
inc
add
mov
ret
cwtl
insl
xor
iret
movsl
test
in
outsl
mov
das
ret
and
xchg
pop
sub
lods
pop
daa
stos
add
lret
sbb
push
stos
mov
pop
cmp
cmp
idivl
sbb
push
mov
sbbb
shl
or
cmp
adc
sarb
sub
mov
xchg
mov
mov
mov
data16
sub
push
push
xchg
rcrl
lahf
imul
mov
sti
aas
daa
mov
or
out
in
cmp
xor
cld
and
dec
rolb
cmpsl
adc
or
outsb
fmull
out
or
fstpl
mov
lret
pushf
iret
inc
cmp
inc
ss
or
jge
cmpb
andb
xor
push
lds
scas
and
cs
sub
mov
or
sti
xchg
inc
jle
scas
jbe
adc
push
push
leave
insb
outsl
daa
iret
fwait
cmp
sbb
and
inc
add
push
pop
xor
mov
out
and
fwait
mov
xorl
shr
and
bound
inc
fs
ficompl
stc
mov
mov
inc
sbb
imul
sub
daa
int
rorb
rolb
xor
cmp
pop
mov
xchg
ret
jae
outsb
std
adc
xchg
sbb
pop
push
mov
fwait
jp
push
pop
sahf
into
fwait
jge
or
cmp
daa
jmp
push
daa
in
test
mov
dec
mov
mov
adc
inc
lahf
test
mov
icebp
jb
mov
call
les
cmc
shr
iret
mov
sub
add
les
xchg
inc
jge
sub
mov
mulb
das
mov
pop
lods
in
sbb
test
mov
test
jo
out
xchg
mov
leave
jg
test
ret
subl
arpl
sub
in
add
sbb
enter
scas
xchg
push
fstl
clc
cmp
push
cli
loop
fiaddl
adc
je
add
xor
xor
out
jno
aam
fists
pop
dec
inc
mov
mov
std
movsl
dec
loopne
sub
mov
in
divb
inc
sbb
or
cmp
dec
pop
movsl
adc
and
mov
push
cli
inc
pop
into
cli
out
add
fstpt
lcall
mov
xor
loope
xchg
das
lret
mov
mov
jmp
and
arpl
bound
imul
arpl
jae
js
mov
xchg
daa
inc
pop
fxtract
and
adc
hlt
mov
push
dec
hlt
push
fdivrl
adc
sub
aas
mov
or
roll
sub
aaa
inc
dec
push
jmp
out
cli
shll
fdivs
test
ljmp
insb
mov
mov
out
push
mov
push
sbb
mov
jge
popf
pop
fistps
daa
and
xchg
xrelease
in
ljmp
int
cmp
enter
ldmxcsr
ss
shlb
lods
sbb
mov
mov
jb
sahf
sub
test
mov
cltd
in
imul
jbe
lahf
lcall
cwtl
fstpl
test
jb
cld
cmp
xchg
fstpl
jns
sub
inc
pop
jno
pop
add
adc
icebp
fwait
or
mov
push
aaa
aas
dec
cli
sbb
movsl
mov
in
jo
pop
ja
jmp
cli
arpl
inc
outsl
add
xor
aad
adc
xorb
leave
sbb
inc
jae
push
push
leave
je
and
sbbl
mov
xor
rorl
push
mov
mov
shl
mov
test
je
jmp
sbb
aaa
int3
sbb
mov
cld
jmp
fmull
shrl
in
test
mov
pop
dec
mov
pop
xchg
sbb
jbe
loop
sub
and
stos
repnz
dec
mov
ds
dec
testl
push
mov
mov
mov
loop
inc
aaa
sti
sub
rcll
cs
cmp
xchg
ja
sub
inc
les
add
cmp
maxps
es
iret
inc
adc
adc
ret
in
test
cmc
cli
in
pop
adc
push
xchg
into
out
fldl
dec
adc
shrb
jg
cmp
sub
movsb
dec
add
inc
mov
stc
ror
xchg
sub
in
adc
add
jne
push
mov
mov
cwtl
sbb
cmp
jno
stc
std
jns
and
mov
mov
mov
icebp
pop
jne
pop
push
jbe
and
dec
inc
cmp
scas
pusha
or
push
movsl
repnz
lea
mov
inc
push
scas
ljmp
movsb
std
mov
test
add
xor
inc
cld
stc
test
movsl
fidivrl
pusha
lods
sbb
jb
out
jbe
sub
sahf
mov
lahf
xor
dec
fnstenv
ja
xor
clc
xor
mov
fs
testb
mov
add
jno
int3
in
arpl
in
out
jae
insb
dec
in
scas
mov
xchg
movsl
mov
jmp
cli
jo
pop
and
push
mov
sbb
xchg
add
fistpll
mov
push
inc
andl
shrb
xchg
jo
or
mov
cmp
mov
insl
mov
pop
xor
in
fnstcw
cld
jbe
imul
repnz
inc
mov
lods
jns
lret
int
imul
bound
int
xchg
aam
jmp
xacquire
lods
cmpsl
nop
cmp
repnz
lds
loop
pop
lods
testb
ds
dec
ljmp
ret
out
jo
or
mov
pop
add
in
ljmp
xor
std
pop
inc
mov
into
jmp
test
xchg
lea
push
mov
pop
aaa
jmp
mov
mov
mov
in
sbb
lds
adc
mov
push
pop
pusha
iret
mov
dec
mov
xchg
dec
lea
out
movsb
fcomi
mov
xorl
sub
ret
xchg
mov
les
sub
loope
repz
sub
xchg
jmp
js
xor
and
add
shrb
mov
cltd
out
and
clc
outsb
jne
int3
sub
das
in
fs
xor
mov
push
mov
mov
or
out
xor
pop
jecxz
in
std
push
dec
adc
test
or
decl
lahf
mov
inc
inc
dec
testb
and
push
gs
rorl
cwtl
lods
stos
mov
push
dec
iret
pop
fstps
and
loope
sahf
mov
dec
rclb
aaa
out
mov
adc
repz
cmc
adc
shl
je
cmpsb
add
adcb
sarw
adc
scas
mov
lret
mov
int3
push
ljmp
xor
lods
push
mov
push
ret
push
mov
xorb
push
test
jne
std
addr16
cmp
mov
jg
sbb
insb
pop
scas
xchg
pop
pop
fisubs
inc
cltd
jge
pop
xchg
sarl
addb
add
jmp
ret
and
dec
mov
mov
xorb
sbb
cmp
sub
mov
and
add
adc
cmp
adc
pop
nop
dec
jae
sbb
int3
jns
jo
cmp
inc
outsb
mov
aam
add
test
pop
mov
enter
push
inc
cmp
xchg
insb
cli
movsl
jnp
les
inc
mov
icebp
sbb
addb
mov
push
in
pop
or
cltd
fabs
repnz
add
jbe
sub
imull
pop
cmp
lock
cmp
and
mov
mov
test
sbb
or
push
mov
daa
pop
cmpsl
aad
loope
lock
cltd
adc
mov
rcrl
mov
insl
mov
mov
iret
jl
lds
or
ret
lods
jecxz
and
mov
cld
cmp
mov
cmp
or
and
stc
rorb
dec
test
mov
test
ss
mov
mov
or
xlat
push
fstps
ja
mov
aam
daa
inc
pop
jnp
rep
out
pop
mov
mov
or
inc
movsb
ja
pop
imul
lcallw
scas
add
movsl
inc
jns
push
nop
out
push
stos
cwtl
stc
add
jg
cmpsl
in
fcmovne
pop
push
lods
fld
mov
push
inc
lret
jp
mov
push
mov
jne
imulb
mov
mov
push
in
mov
or
pop
inc
and
cmp
shr
fdivr
add
js
and
fildl
popf
stos
outsl
xor
add
cmp
sub
or
loopne
xchg
xlat
mov
incb
aad
dec
imul
movswl
stos
mov
out
lahf
imul
jmp
or
jg
aam
jmp
inc
iret
shlb
mov
and
mov
add
cltd
mov
std
dec
pop
xor
push
inc
pop
ret
dec
cmp
aaa
icebp
pop
adc
imul
test
in
dec
push
push
mov
sub
loope
hlt
sarl
xor
icebp
xchg
adcl
test
shlb
test
sub
and
dec
out
addr16
in
into
ds
stos
xor
fsubl
fwait
mulb
ljmp
iret
mov
emms
fists
inc
aam
jg
push
push
int3
movsl
rclb
scas
push
stos
inc
mov
dec
xchg
jns
xchg
iret
enter
fisttpll
adc
jg
pop
xchg
push
adc
dec
jne
add
ja
xchg
dec
dec
popf
or
mov
sbb
pushf
es
xchg
xchg
ds
test
jecxz
adc
dec
mov
les
test
int
mov
in
in
stos
xchg
insl
xlat
fisttpll
mov
enter
icebp
fwait
rorl
inc
mov
test
sub
sbb
adc
sub
mov
xor
pop
mov
xor
mov
clc
dec
aam
sub
imul
dec
std
cmp
pop
jo
or
cltd
into
adc
cmc
outsb
push
cmp
mov
xor
xchg
mov
mov
aad
std
fld
mov
je
out
inc
orb
adc
xor
ficomps
mov
mov
jl
cmp
movsl
sahf
out
dec
idiv
jbe
rcrb
popl
push
sbb
fcoml
mov
mov
pop
jnp
inc
sub
into
inc
sub
xchg
mov
psubusb
sub
dec
adc
dec
out
cli
ds
int
push
jo
dec
imul
push
bound
dec
jl
dec
cmp
test
movsl
xor
jns
pop
popf
dec
outsb
adc
repnz
push
push
pcmpeqw
mov
jl
mov
test
or
add
fucom
in
dec
sub
and
aad
jg
roll
movsl
xchg
jb
and
sub
mov
mov
aaa
cmpsb
lcall
xchg
cmp
mov
ficoms
leave
sub
out
jge
sub
scas
xor
mov
adc
ja
pop
std
push
dec
outsl
push
lret
fimuls
lret
and
orl
mov
lods
or
scas
nop
push
mov
test
scas
jnp
jns
lcall
add
cmp
sub
sahf
lds
je
test
mov
mov
sub
and
mov
jle
and
cli
addr16
or
pushf
ret
or
mov
insl
mov
pop
adc
addr16
into
fucom
add
cmp
sub
sub
inc
mov
jl
or
mov
jb
ret
loop
jle
in
pusha
push
mov
out
cmpsl
out
cmc
lods
jns
inc
xor
sahf
outsb
jge
inc
pop
shll
out
dec
out
and
dec
icebp
adc
lret
lcall
push
xchg
hlt
mov
ret
out
cmp
repnz
cmpsl
fldl
inc
std
dec
popa
sub
je
lret
adc
inc
cmp
shll
adc
fldenv
lds
xchg
cmc
jbe
and
mov
shlw
and
mov
xor
cmpsb
mov
test
fs
cmc
push
mov
inc
daa
mov
jne,pn
sarl
push
xchg
cld
xor
stos
outsl
enter
and
cli
mov
sub
std
clc
xchg
dec
pop
std
andb
inc
push
cmp
pusha
xor
dec
add
cmpsb
or
mov
jns
jge
cmp
push
and
inc
mov
out
sub
push
mov
in
dec
stos
lret
dec
sar
jnp
jge
into
or
xor
mov
sub
cli
aas
loope
sbb
out
pop
mov
jbe
or
xor
dec
xor
lret
in
gs
fnstenv
mov
push
push
sarl
js
movb
mov
pop
mov
ljmp
jecxz
mov
or
loopne
or
ror
cwtl
inc
cwtl
adc
cmp
pushf
xchg
jmp
in
pop
es
outsl
ja
pop
sub
loopne
add
jl
mov
test
jae
mov
cld
inc
jbe
jmp
neg
pop
jp
and
dec
dec
or
rorl
pop
aad
cwtl
jno
test
outsb
mov
enter
addr16
aad
jbe
xor
dec
jg
sub
dec
out
lock
pop
je
xor
mov
int3
sbb
sub
mov
lcall
out
dec
inc
popa
and
mov
jp
xchg
jmp
adc
ficoms
inc
add
sbb
mov
out
sbb
dec
inc
mov
rorl
cmpsb
iret
mov
fs
out
pop
loopne
enter
rolb
sub
addr16
mov
pop
lret
cmp
xlat
aaa
je
mov
push
cli
jmp
mov
xor
or
out
lret
es
roll
lahf
aaa
sahf
sarl
push
stos
dec
adc
push
out
stos
xchg
push
push
or
push
scas
cmp
mov
imul
sbb
sbb
int3
aas
pop
adc
repz
fstpt
mov
and
pop
jno
jne
lret
pop
mov
or
push
add
or
push
imul
jge
jae
scas
sub
orl
sub
add
cltd
cld
fstl
loop
or
clc
mov
lahf
imul
faddl
mov
xchg
lods
cwtl
dec
ficoml
or
push
mov
dec
icebp
mov
mov
and
repz
sbb
push
mov
and
popf
cmp
jae
jecxz
lods
cmp
pop
xchg
jns
xchg
pop
adc
jbe
leave
es
dec
sub
fistl
cli
popf
cs
jns
test
xor
push
mov
sub
lods
clc
sbb
lock
rorb
lods
paddw
push
out
out
pushl
mov
cmpsb
adcl
xchg
cmpl
inc
imul
movsl
scas
icebp
sub
testl
loope
lret
int3
xchg
mov
jo
xchg
js
cltd
ds
in
test
lea
xor
cwtl
xor
fistpl
sbb
aad
push
cmc
pop
dec
jnp,pt
dec
cltd
loopne
clc
in
mov
popa
jge
pop
jp
dec
pushf
movsb
jb
popa
loop
or
mov
cli
bound
xchg
cld
jmp
xchg
and
lock
aaa
movsl
fstl
mov
sbb
gs
xchg
inc
fstl
jnp
xorl
insb
dec
xchg
ja
pop
rolb
mov
jg
cmp
fwait
scas
int3
cmpsl
into
sbb
jnp
cltd
sbb
cs
inc
sbb
je
movsb
or
xchg
mov
mov
or
jbe
das
fs
xchg
stos
push
lods
adc
out
cmp
sbb
mov
loope
mov
or
ret
xchg
dec
jge
adc
popa
testb
sbb
xchg
adc
mov
ret
pop
and
pop
faddl
xchg
sub
out
insl
aam
xlat
cld
or
lds
and
or
scas
jno
push
add
jnp
adc
push
shlb
pushf
leave
xor
xchg
ljmp
xchg
mov
cmp
mov
dec
push
push
inc
jae
push
dec
inc
xchg
fldenv
xchg
jo
lret
stos
mov
repz
xor
lods
push
jo
mov
ja
ja
arpl
test
psllw
popa
stc
xlat
xchg
std
pop
fbld
out
push
shrl
push
mov
mov
outsb
cltd
shlb
xor
sub
or
mov
out
push
into
pop
cmp
add
or
jg
and
insb
int3
mov
add
lahf
cmpsb
mov
dec
sti
xchg
out
test
clc
mov
lock
arpl
in
dec
inc
jle
xor
xor
add
testb
xchg
xor
cmpsl
dec
inc
push
mov
lcall
jns
ljmp
shll
push
stos
stc
rcl
test
xchg
push
sbb
push
mov
aaa
stc
repnz
lret
add
popf
cmp
aad
stos
test
or
mov
pusha
cmp
stc
lods
es
push
adc
push
nop
shlb
mov
fidivs
pop
outsl
jae
loope
mov
out
push
cmp
lret
or
aas
cwtl
lds
pop
call
aam
ret
mov
mov
xlat
js
mov
imul
iret
mov
fcmovnu
xor
xchg
cmovl
add
fisubrl
push
xchg
repz
jp
jmp
enter
insb
and
ss
out
mov
pop
cli
mov
not
in
push
mov
loope
push
movlps
fs
fnstcw
or
movsl
scas
lcall
add
push
pop
iret
inc
int
dec
std
push
loope
movsl
sahf
push
cmp
mov
sahf
movsb
sti
xchg
fs
xchg
repnz
lock
fsubr
push
shll
jbe
popf
mov
int
sub
mov
into
push
add
jl
and
mov
pop
fisttpll
lahf
push
xor
stos
push
pop
cmp
mov
push
out
notl
jo
adc
loope
pop
inc
jno
jae
das
push
mov
xchg
jl
push
pop
cwtl
or
push
push
dec
icebp
jle
push
inc
jmp
scas
cmc
or
les
aad
das
jle
sbb
jae
out
xchg
outsl
sbb
jne
lret
inc
mov
push
loopne
ds
jns
insl
aas
stc
cli
pop
cmpsb
sub
push
push
leave
aad
dec
stos
cmpl
pop
pushf
or
cmp
and
and
xchg
stos
jge
dec
outsb
dec
pop
fadds
stc
lea
lcall
fisttps
lock
adc
dec
jns
out
mov
xlat
mov
push
orb
mov
fsts
or
mov
shrl
icebp
stos
pop
pop
mov
jbe
cwtl
testb
inc
jae
cmp
cmp
push
mov
addl
ret
pop
stc
cmp
fwait
inc
xor
jno
test
inc
push
cwtl
pop
mov
inc
and
aaa
dec
jg,pt
or
pop
pop
inc
lret
jnp
pop
test
add
lret
imul
mov
bound
fisubl
sbb
xchg
ds
test
clc
mov
sbb
test
lods
popa
add
aam
cld
clc
bound
subl
jle
add
jecxz
mov
arpl
in
scas
pop
jb
sub
add
loopne
fmull
dec
pop
dec
leave
hlt
jns
mov
out
xchg
test
inc
push
pusha
lds
jl
pop
test
dec
adc
jl
daa
in
or
push
xchg
scas
jle
mov
icebp
repz
jae
mov
movsl
gs
xchg
out
adc
mov
iret
and
and
cltd
push
jae
pop
xlat
mov
dec
push
insb
lret
insb
dec
xor
xor
add
test
dec
mov
repz
lret
out
xchg
mov
adc
add
inc
addl
mov
dec
aam
add
mov
shlb
xor
test
ljmp
xor
add
inc
dec
ja
pop
cmpsb
sub
dec
push
add
arpl
je
fnstenv
xchg
push
mov
dec
pop
jp
mov
pop
fwait
ja
pop
and
jae
xchg
pop
iret
pop
bound
dec
xlat
cli
mov
mov
dec
int3
adc
data16
add
lcall
sub
arpl
test
add
xchg
stos
push
cmpsb
push
shrb
loope
sbb
int3
pop
mov
pop
xchg
ljmp
clc
aad
aad
repnz
mov
cmpsl
sbb
gs
add
aad
pop
dec
dec
test
bound
xchg
mov
or
mov
adc
scas
and
sbb
js
testb
jns
addr16
mov
in
fnstsw
lea
test
pop
jae
dec
les
jl
mov
or
dec
inc
jno
mov
data16
test
sahf
dec
inc
lods
jbe
clc
pop
xchg
ret
lock
cmp
cld
nop
outsl
xchg
cli
inc
push
loope
ret
mov
or
loop
push
ret
mov
sub
push
dec
roll
sti
jb
sub
adc
pop
xchg
xchg
sbb
std
fistl
arpl
hlt
fdivrs
shlb
aad
xchg
sub
sbb
push
inc
fdiv
imul
ljmp
out
fldcw
js
sbb
mov
and
pop
xchg
fpatan
xor
xchg
fiaddl
pop
pop
xchg
sbbb
jae
mov
push
push
inc
and
out
add
add
push
and
mov
pop
adc
mov
aaa
inc
filds
jnp
lods
shlb
cmp
cld
mov
sbb
mov
scas
and
mov
jns
or
push
outsl
data16
xchg
jl
int3
push
sub
ja
inc
test
scas
pop
jbe
xchg
insl
enter
fwait
out
test
dec
push
ja
insb
dec
add
out
nop
push
das
xor
xchg
psubb
faddp
es
subl
sub
push
xor
sub
xchg
inc
dec
test
jae
xchg
hlt
sbb
xor
jle
mov
jl
and
cmc
cmpsl
addr16
push
mov
dec
xor
inc
test
mov
jo
cmc
push
cmp
loop
cmp
inc
xor
jno
mov
stc
mov
rclb
lods
or
adc
pop
pop
sahf
in
push
pusha
mov
shrb
inc
xor
andl
push
std
into
mov
scas
cmp
std
sub
inc
push
xor
jle
push
xor
mov
cs
lods
mov
dec
mov
imul
lret
jmp
sahf
add
popa
add
mov
stc
cmp
mov
lods
aam
stc
mov
jl
mov
shll
lret
cmp
lea
popa
dec
sbb
mov
cmp
and
push
lcall
inc
push
inc
cmc
sbb
or
imul
push
sub
xor
adc
mov
test
push
add
movsl
imul
repnz
loope
pop
loope
and
in
jne
add
mov
or
bound
mov
jns
and
cmpsb
lcall
dec
adc
lcall
inc
int3
lahf
fst
push
pop
fsubr
pusha
lcall
jl
bound
int
loopne
dec
sub
in
sbb
mov
daa
in
cltd
adc
xchg
dec
mov
out
clc
mov
sbbb
sub
mov
sbb
push
adc
das
push
xor
mov
inc
mov
xchg
mov
add
nop
push
and
lds
sub
push
test
imul
add
std
cmp
repz
ja
jg
aad
mov
mov
adc
sbb
jbe
test
xchg
loop
mov
cmp
mov
daa
int
mov
cmp
add
adc
repnz
xlat
sbb
jmp
inc
dec
mov
xchg
imul
push
mov
sub
cli
xchg
push
fbstp
iret
jmp
iret
mov
lods
xor
cltd
xlat
dec
lcall
jg
and
mov
out
fisubrl
pop
inc
test
idivl
or
or
and
pop
pop
pop
lret
adcb
outsl
push
sub
ret
xor
dec
xchg
jnp
test
mov
mov
fisubl
xchg
add
lcall
add
movsl
and
mov
sub
mov
outsl
test
jmp
mov
jnp
sbb
lods
mov
fistpl
sub
stos
push
nop
sub
mov
imul
push
cmpsl
sub
xchg
adc
and
test
imul
mov
mov
mov
push
mov
fstl
cmp
fwait
sub
jle
notl
dec
fidivrs
jne
int
stos
jae
je
shl
sub
imul
jae
add
push
shlb
sbbl
mov
and
or
cmp
pop
and
xor
mov
je
pop
call
mov
and
push
or
sar
mov
movsb
js
push
out
and
movsb
daa
inc
fidivrl
lret
call
lods
sub
mov
hlt
fwait
jmp
adc
fcoml
mov
les
test
mov
xchg
pop
add
scas
or
xor
dec
sahf
in
pop
subl
hlt
inc
mov
or
stos
imul
mov
jae
out
nop
stc
pop
add
xor
xchg
jecxz
imul
xorb
inc
loop
jns
das
aas
int3
out
xchg
or
xor
mov
nop
push
xchg
mov
dec
lret
add
adc
cmp
dec
xor
aas
rorb
outsb
movsb
fmulp
cld
cmpsl
and
leave
inc
xlat
in
lock
sti
and
lods
dec
adc
fucomp
and
adc
loope
data16
daa
jmp
lds
push
xchg
mov
fistpl
pop
hlt
adcl
push
lret
ljmp
adc
pop
jo
xchg
add
push
aam
vmovapd
popf
sbb
pop
dec
pop
adc
mov
test
out
jae
imul
fisubrs
cmp
in
out
icebp
lret
fs
out
xor
push
in
xor
dec
aaa
mov
adc
and
inc
sub
sbb
cmpsb
sub
jo
jecxz
jne
push
outsl
testl
addr16
cmp
das
into
lret
jge
hlt
jecxz
int
aam
add
test
int3
stc
ja
mov
outsb
sti
ret
cs
add
into
and
sbb
xor
jne
lock
mov
add
pop
hlt
add
leave
repnz
mov
push
nop
popf
icebp
adcl
mov
imul
popa
scas
sbb
leave
sub
dec
push
imul
mov
jle
ljmp
push
outsl
mov
sub
jge
in
jmp
mov
xor
nop
jns
call
sbb
mov
mov
cmp
xchg
jno
pushl
push
movsl
jle
shlb
and
and
sarl
pop
insl
scas
adc
adc
jns
add
pop
mov
push
test
movsl
xlat
loopne
hlt
mov
sahf
and
aas
mov
ret
test
xchg
addr16
jne
sub
jbe
jae
mov
add
push
stc
or
xor
xchg
mov
pushaw
ljmpw
lock
imul
arpl
mov
in
mov
push
nopl
imul
hlt
sti
jno
out
rclb
cmc
hlt
jnp
pop
mov
add
cwtl
sub
out
mov
fs
sar
daa
dec
pushw
cltd
jmp
in
push
sarl
out
push
rorb
fwait
imul
fsubl
xchg
dec
fstl
mov
jp
int3
js
imul
std
lahf
or
xor
lret
clc
sbb
out
pop
cmp
insl
aad
rcrb
xor
sbb
or
adc
out
xlat
fnsave
or
dec
or
fisubrs
mov
add
xor
mov
ljmp
and
or
push
mov
mov
xor
push
dec
push
push
add
xor
mov
pop
xlat
fwait
inc
cmc
das
lahf
cmp
lods
out
xor
xchg
jge
aaa
dec
push
sub
int
xor
mov
jle
cmpsb
addr16
xlat
mul
cwtl
add
fmuls
add
mov
movsb
jl
mov
out
or
insb
xchg
pop
cli
sub
test
or
repnz
test
push
or
jge
dec
or
push
fbld
stos
inc
loope
in
pop
test
mov
movsl
mov
sti
sahf
ret
xor
out
in
and
adc
jno
adc
rcrl
jg
pop
in
test
mov
stos
fsts
aas
lret
push
push
das
add
insb
in
in
popf
rcrl
int
adc
bound
rorb
lea
rcr
mov
in
mov
jge
cwtl
sub
adc
adc
inc
mov
cltd
or
outsl
jecxz
dec
out
pusha
test
jne
pop
je
adc
add
or
pop
fsubr
push
int3
mov
stos
xchg
push
mov
dec
sti
leave
loop
pop
pop
subl
push
sbb
ja
sahf
out
pop
push
xchg
lds
fisttps
mov
clc
or
aas
cmpsl
add
jo
xlat
pop
sbb
lret
and
inc
std
adc
cltd
enter
lret
rcrb
pushf
lcall
imul
imul
mov
mov
dec
add
dec
loope
shrb
adc
es
mov
pop
lea
mov
int
int
adcb
push
std
shrl
push
scas
dec
rcrb
popa
add
adc
lea
dec
jns
rcll
mov
shll
jne
mov
jecxz
loopne
mov
adc
sahf
shl
jg
ds
lods
arpl
jmp
mov
arpl
xor
jg
int
lcall
mov
test
or
jno
sub
dec
cmp
loop
sub
outsl
cli
js
lock
add
shrl
pop
push
movsl
jae
pop
shll
xor
insb
cmovb
das
pusha
or
lods
push
fstl
add
outsb
stos
repnz
jl
aam
and
roll
gs
cmpsl
lret
push
rorb
and
push
insb
mov
mov
out
cmp
fwait
outsb
mov
imulb
mov
push
mov
pop
test
push
fs
mov
std
mov
stc
inc
insl
pop
pop
and
outsb
in
cmp
dec
push
loopne
mov
daa
aas
in
inc
inc
mov
cmp
aam
gs
mov
jb
jae
out
add
push
inc
out
cmp
cmc
cmp
aaa
mov
movsb
sarl
pop
sarl
or
xor
leave
pop
jae
mov
sub
faddl
sbbl
or
gs
int
and
outsb
jnp
repz
pop
xchg
adc
adc
decb
jae
pop
fs
cmpsl
pop
jge
daa
fcompl
cmp
rcrb
xchg
mov
push
and
je
mov
xchg
lock
std
cs
xor
adc
mov
fs
and
sbb
je
adc
jg
lea
iret
push
outsl
gs
sbb
mov
jl
lcall
adc
jbe
mov
jo
es
add
hlt
rcll
hlt
mov
inc
mov
stos
bound
dec
ss
rorl
or
ret
xor
xchg
das
pop
jle
cli
dec
cltd
pop
popf
cli
out
mov
ja
sub
sub
mov
int3
les
out
pop
add
cmp
push
add
outsl
sbb
xchg
ljmp
std
test
sub
ret
jo
xor
lret
adc
pop
or
es
insb
and
gs
testl
xor
xchg
lock
cmp
jnp
and
repnz
dec
inc
mov
pop
movsl
jmp
imul
jo
aam
add
int
add
mov
mov
test
lea
and
xchg
mov
dec
or
pop
xchg
repnz
mov
inc
ficoml
pushf
dec
loop
stos
inc
imul
fidivl
xchg
sti
push
mov
inc
stos
mov
inc
je
jl
outsl
gs
sub
mov
ss
sub
loop
jle
int
dec
adc
lret
negl
xor
mov
imul
or
cmp
inc
adc
push
fidivl
test
ja
jae
add
xor
outsb
sub
pusha
dec
push
adc
mov
or
test
aam
and
in
mov
and
pop
mov
dec
lret
mov
cld
les
int
pop
mov
dec
lcall
gs
leave
dec
dec
popf
xorl
jg
aas
les
adc
scas
insl
sti
popf
arpl
mov
ss
movsl
cmp
pop
les
decb
rcll
popa
fidivrs
xor
loop
dec
and
clc
add
clc
lds
or
xlat
mov
fucomip
popa
imul
cmc
mov
mov
mov
and
je
fdivs
pop
jecxz
mov
push
dec
fiadds
js
pop
lods
and
arpl
and
cli
sub
cli
or
fdivp
mov
dec
aam
push
mov
mov
addr16
mov
mov
xchg
out
sub
pusha
pop
fcmovnb
fst
test
imul
dec
into
or
inc
lcall
sti
sbbl
shll
and
cli
out
out
repz
fdivrs
sub
aam
dec
in
push
cmp
stos
jle
cmc
addr16
xchg
xchg
in
lret
imul
ret
pop
repz
cltd
push
psllq
clc
cltd
dec
fnstcw
cli
xor
push
test
xchg
icebp
cmp
aam
es
mov
or
sarl
or
jle
push
xor
pop
push
and
push
push
add
adcl
pop
loope
and
mov
test
lods
sbb
push
jbe
jno
mov
jo
adc
jl
mov
xor
stos
push
push
rolb
loopne
test
mov
push
pop
mov
ror
loop
add
das
cltd
aaa
mov
sub
lods
add
fsts
jle
pop
pop
mov
ljmp
fs
outsl
push
insl
in
cmp
fidivrs
test
jo
ficompl
and
mov
jge
incb
rcrb
cmc
and
mov
dec
ljmp
out
adc
inc
lcall
sbb
aaa
loope
lret
fstps
fiaddl
xchg
mov
sub
into
cmp
mov
or
outsl
jno
dec
icebp
lcall
fistpl
mov
in
pusha
ljmp
repz
rorb
js
pop
lret
lahf
imul
pop
pusha
sub
sub
xchg
or
sub
lds
incl
jnp,pn
mov
sbb
imul
cmpsb
aam
aas
loop
xor
sarl
ficomps
cmpw
nop
xchg
sub
icebp
sub
add
rcr
add
push
ror
and
jl
in
mov
adc
std
enter
loopne
xchg
imul
test
jo
and
add
test
xor
js
lods
iret
jge
xor
jae
jno
mov
xor
loope
popf
loopne
repnz
lret
sub
mov
shll
pop
clc
test
fstps
divb
xchg
and
out
mov
mov
popa
scas
lcall
aas
adc
mov
nop
rclb
sub
pop
sub
push
repnz
scas
fs
fwait
xlat
sub
add
jb
stc
cmp
incb
jl
or
jnp
js
cmp
xchg
dec
das
push
adc
xchg
shrd
or
mov
out
or
add
push
cwtl
or
cmp
pushw
push
das
and
or
pop
out
daa
jp
jle
ror
mov
sub
xchg
push
sub
jecxz
and
push
mov
mov
sbbb
insl
addr16
lcall
stos
push
xchg
popf
sub
pop
data16
mov
lahf
stc
jo
xchg
xchg
push
xor
lahf
cmp
adc
out
shlb
int3
sub
aas
popf
cs
jae
jnp
dec
nop
mov
inc
mov
xchg
cli
pop
or
lds
sub
sbb
inc
testl
cmp
cmc
popf
dec
jae
mov
mov
mov
lea
and
add
push
xor
pop
arpl
outsl
xchg
adc
cmp
cmp
js
stos
testb
push
add
jg
pop
rcrl
add
lcall
and
pop
dec
or
jae
sub
bound
dec
sub
scas
loop
lcall
nop
mov
mov
xchg
dec
adc
mov
pop
sub
inc
mov
mov
lock
divb
dec
and
imul
adc
push
push
iret
cld
dec
adc
sub
cltd
pop
cmp
int
jg
mov
fwait
mov
or
add
jl
int3
clc
in
mov
loope
ss
mov
jnp
sbb
push
xor
imul
loope
aam
xor
sub
popf
dec
mov
aam
sarl
push
fnstenv
xchg
or
push
xor
lret
dec
fisttpll
dec
aam
sar
mov
dec
pop
pop
shr
in
push
pop
adc
add
mov
xor
xor
notb
xchg
xor
mov
mov
jbe
cmp
inc
loope
mov
jo
loopne
pop
in
test
inc
clc
pop
jno
subb
mov
sbb
in
mov
ret
inc
outsb
jmp
aad
sbb
push
cmp
ret
jo
xlat
jle
fldcw
mov
push
imul
sub
ds
fdivl
cmpsb
insl
inc
dec
lahf
inc
fsubrp
mov
push
popf
jl
jns
pop
sbb
dec
or
jge
lods
stos
cmp
cwtl
jns
jb
fisttps
movsl
jb
repnz
aaa
fnstcw
push
gs
cmp
mov
popa
adc
dec
mov
mov
jecxz
mov
adc
shlb
ljmp
fcoml
pop
xor
arpl
inc
mov
push
inc
stos
add
and
and
pop
cltd
cltd
add
push
inc
mov
adc
add
or
pop
orb
ja
out
jnp
dec
movsb
add
adc
call
pop
shlb
jo
push
dec
pop
pop
aad
mov
push
cwtl
mov
in
push
scas
das
fsubl
movsb
dec
sbb
jnp
jae
lret
or
lret
jne
rclb
shl
shrl
add
test
mov
jbe
daa
mov
sub
sahf
in
inc
sbb
scas
js
jle
stos
or
jle
nop
mov
scas
xchg
in
test
pop
adc
xchg
pop
dec
jne
dec
push
rcrb
out
aam
pop
loopne
fdivl
mov
inc
js
dec
idiv
subb
dec
adc
cmpl
fsincos
mov
mov
xchg
ds
mov
lcall
ss
or
mov
ja
mov
mov
cmp
imul
add
xor
loope
lea
jecxz
xor
adc
loop
jecxz
lret
sub
inc
and
pushf
negb
mov
fs
mov
mov
lret
dec
aaa
xchg
aas
movsl
stos
jle
adc
loope
cmp
mov
testb
into
es
pop
sub
out
jns
pushf
jae
stos
jne
or
and
jae
call
or
out
xchg
test
push
xchg
js
fimuls
sbb
pop
cmp
jno
es
stc
or
ds
lret
incl
call
adc
mov
xchg
test
add
ret
sbb
int3
xchg
hlt
or
xor
lds
mov
lcall
call
sti
sub
mov
std
jo
out
clc
imul
in
cmp
call
inc
or
pop
cmc
mov
outsb
adc
and
cmp
add
push
lock
adc
jo
dec
inc
cmpsb
ds
adc
xchg
test
cli
or
aaa
and
sbb
sbb
fdivs
sbb
sub
mov
sti
jae
cmpsl
push
push
push
mov
mov
jecxz
jecxz
push
stos
inc
sbb
subb
or
sti
xchg
mov
jp
and
jae
push
es
lock
jg
out
out
fsubl
xor
orl
stos
push
ja
movsb
jne
sbb
cmp
clc
mov
test
fwait
xchg
addl
mov
cld
sbb
adc
add
inc
adc
js
adcl
ret
inc
outsb
js
lcall
mov
pop
mov
mov
inc
outsl
popf
fistpll
xchg
out
ret
sahf
sbb
icebp
or
ja
sbb
in
in
cmpsl
lret
ja
xor
cmpsl
push
arpl
cmc
icebp
xchg
mov
cmc
sub
inc
insl
fidivrl
push
cwtl
stos
or
aam
jle
push
fisttpl
lcall
jae
jl
adc
xchg
inc
outsl
sbb
adc
nop
loopne
adc
and
in
inc
jecxz
cmpsl
and
dec
push
sbb
inc
sbb
or
lock
and
outsl
and
outsb
fs
test
cmc
mov
fldcw
jecxz
shll
mov
xchg
test
and
mov
cmpsl
das
rcr
jp
jns
cli
mov
lahf
dec
dec
sbb
mov
out
xor
push
ficoms
test
mov
xlat
pop
enter
jno
test
xchg
mov
dec
repz
lds
mov
xchg
add
repnz
lock
dec
leave
das
adc
inc
std
loope
xor
cwtl
popa
mov
out
cli
dec
push
cmp
adc
aam
sbb
lret
and
aas
into
ds
xchg
jp
xchg
lahf
inc
add
mov
adc
lret
inc
and
clc
insb
xor
int3
dec
inc
movsl
repnz
add
cmpsl
icebp
push
xor
call
lahf
cmp
or
popa
scas
nop
cli
xlat
dec
dec
adcl
js
mov
rol
add
int
push
push
jge
sahf
xor
push
jbe
push
test
cmp
pop
pop
or
fucomp
add
aam
and
xor
sub
pop
sbb
xor
sub
outsb
mov
cli
les
mov
movsb
pushf
xor
jo
sub
add
jmp
xchg
dec
sbb
in
jno
jecxz
shll
leave
mov
xor
jg
xchg
cwtl
rcl
js
adc
insl
cmp
sbb
aam
inc
cmp
lods
test
xchg
mov
outsl
xchg
mov
cmp
mov
jno
mov
es
pushf
ja
and
jmp
bound
int3
mov
pop
mov
hlt
mov
test
aas
js
jo
xchg
mov
inc
xchg
scas
inc
dec
test
mov
add
fcmove
aam
dec
repnz
sarl
daa
shlb
mull
xor
pop
addr16
