xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
push
addl
pop
ret
add
popl
push
mov
push
pop
mov
pop
push
xchg
xchg
xor
xchg
push
xor
pop
xchg
popl
push
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
mov
ret
mov
ret
xchg
popl
push
ret
push
pop
push
pop
mov
mul
xchg
xchg
xchg
push
pop
push
pop
push
addl
pop
ret
mov
ret
mov
ret
xchg
addl
xchg
ret
push
pop
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
call
push
push
push
push
call
push
call
push
call
push
call
push
call
push
push
push
call
push
push
push
call
call
pushl
xchg
add
push
push
push
push
call
push
push
push
push
call
call
push
push
push
push
call
push
push
push
push
call
push
cmp
jae
ret
pop
call
push
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
pop
jne
lods
and
es
adc
jbe
dec
add
cld
test
pushf
inc
mov
sub
cltd
leave
mov
mov
incl
js
imul
scas
sarl
cmpl
imul
add
cmp
pop
lds
scas
bound
xor
pop
test
fmull
cmp
sbb
xorl
push
inc
cmp
fisubrs
adc
dec
daa
and
xchg
test
mov
sub
xchg
pop
mov
arpl
cmpsl
sub
push
xchg
dec
pop
lods
and
mov
jbe
sub
ret
xorb
push
in
mov
les
rol
jecxz
xchg
aad
mov
movsl
jecxz
fmull
xor
push
pushf
hlt
idivb
stos
cmp
add
leave
enter
cmp
gs
repz
adc
fwait
ja
in
bound
dec
adc
outsb
hlt
mov
xor
add
adc
lods
cmp
inc
xchg
pusha
mov
aad
mov
movsb
mov
sub
aaa
jp
std
in
loope
jb
xor
movsl
int3
incb
cs
mov
mov
xor
mov
js
jecxz
cmp
lods
outsl
fidivrl
mov
ficomps
ret
loop
ret
lahf
mov
shlb
lret
test
inc
fmull
shll
ds
pop
aaa
arpl
cmpb
lods
pop
jno
cmp
and
jl
adc
sub
jle
dec
and
mov
pop
enter
arpl
test
pop
stos
adc
or
dec
roll
xchg
dec
pop
js
inc
ljmp
std
add
fabs
ja
mov
lahf
shll
fistps
lods
jae
mov
xchg
fwait
add
out
add
push
mov
xchg
inc
jp
sub
fldcw
scas
mov
sub
xchg
iret
out
test
jns
pop
adc
or
out
mov
sbb
aad
jb
cli
push
or
mov
ret
sub
out
nop
mov
jle
cmpsl
cmp
sarl
sarb
adcl
push
in
push
sub
scas
pop
ds
jbe
mov
outsb
xchg
outsl
or
push
dec
jno
adc
add
es
adc
roll
icebp
xchg
jae
test
jp
aas
addr16
pusha
mov
dec
adc
mov
pop
mov
sbb
outsl
adc
arpl
pop
inc
int3
mov
outsl
cmpsb
shlb
out
xchg
jmp
mov
outsl
in
dec
inc
into
mov
ja
loope
daa
lds
jno
dec
shlb
popa
pop
sbb
cmp
xchg
mov
fmuls
std
pop
daa
mov
xor
and
shll
cmp
mov
in
lahf
dec
jno
or
and
push
mov
push
sbb
sbb
aad
outsb
cli
in
add
cld
daa
fistpl
daa
dec
pushf
push
and
pop
inc
je
je
xor
sub
xchg
repz
aaa
cmp
cmpsb
push
push
lods
pop
into
sbb
iret
shr
cli
sub
sarb
pop
jp
xor
cs
dec
push
fisubs
pop
and
std
decb
push
mov
cs
pop
repnz
push
pop
xchg
std
cmp
mov
dec
das
add
push
lods
cwtl
sub
les
xchg
mov
movsb
mov
and
aad
data16
lret
sbb
je
inc
mov
test
push
xor
stos
ja
cmp
ret
jne
sbb
cmp
call
pushf
mov
dec
jns
jle
flds
pop
sub
mov
mov
sti
stos
jnp
dec
mov
xchg
cmc
out
adc
iret
xchg
nop
jno
pop
out
sbb
or
stos
jg
subl
lcall
xchg
ds
sbb
sbbl
dec
push
mov
push
jne
dec
jns
cltd
push
shlb
push
sbb
mov
jae
jmp
push
dec
rcrl
imul
jge
or
dec
sub
loope
xor
cwtl
adc
enter
xchg
xor
xor
add
dec
psubq
ficoml
jae
leave
adc
cmp
out
loopne
fcoms
imull
xchg
mov
aam
jnp
add
aas
andb
stos
cmpsl
push
mov
js
mov
sub
mov
cli
cmpsb
adc
int3
mov
cmp
cwtl
and
insb
mov
stos
xorl
jmp
lds
push
ret
in
push
lret
mov
adc
lods
inc
jecxz
enter
add
mov
add
xchg
xchg
movsb
addr16
inc
mov
push
mov
mov
inc
pop
xor
xor
bswap
insl
cli
xlat
cmpl
out
push
jge
push
mov
stc
data16
mov
jmp
in
adc
adc
push
sub
imul
cmp
pop
pushf
je
lock
aad
mov
and
xlat
rcrl
sbb
inc
xchg
or
aas
ror
sbb
js
sti
rorb
push
and
rcrb
cs
push
pop
xchg
sbb
rcll
clc
leave
insl
xor
cmp
cmp
mov
test
xor
bound
andb
jne
xchg
scas
rcrb
mov
jno
push
push
es
or
decl
pop
nop
dec
pop
dec
push
imul
loop
jbe
std
test
fimull
mov
mov
jmp
js
pushf
dec
or
mov
cmp
shl
xchg
out
cmp
out
mov
push
mov
mov
movsl
adc
lcall
pop
mov
arpl
xlat
push
arpl
repz
or
fwait
movsl
rolb
xor
fsubr
loope
push
out
std
push
fnstsw
scas
scas
sbb
lret
test
and
mov
push
shl
fstpt
mov
jle
push
and
lret
shr
loopne
cmp
add
lcall
call
cltd
xor
and
mov
mov
jnp
je
mov
lea
ljmp
mov
lcall
push
enter
flds
les
dec
in
arpl
fnop
pop
pop
adc
int
add
sbb
shll
stos
pop
aam
push
inc
cmp
push
inc
add
mov
xchg
push
pop
xlat
loop
es
cs
ljmp
je
or
xchg
xchg
pusha
sub
jnp
adc
pop
ror
mov
aaa
mov
jo
adcl
cmove
jmp
xor
mov
add
adc
test
sbb
pop
mov
call
xor
test
xor
sub
mov
mov
nop
leave
nop
push
into
mov
js
adc
add
pushf
das
sbb
add
and
les
lock
sbb
mov
fcmovb
test
call
lods
dec
sub
add
aad
cli
mov
testl
push
pushf
add
test
lret
pusha
lcall
scas
dec
shll
jne
out
mov
push
push
fidivrs
outsl
aam
fs
dec
sub
mov
or
test
cmp
cmpsb
ret
inc
xchg
shll
and
je
sub
lcall
jae
ds
outsb
xchg
loop
out
pushl
sahf
out
andb
or
repz
jno
sub
sbb
stos
repz
test
dec
in
clc
fsubs
xor
xchg
mov
jge
fmuls
dec
mov
push
addr16
daa
fidivrs
inc
addr16
arpl
mov
pop
cwtl
fsub
nopl
test
ja
xchg
lea
sti
cltd
in
pop
and
xorl
sbb
inc
dec
mov
jecxz
mov
shrl
push
push
inc
jmp
mov
dec
xor
pop
std
mov
dec
gs
cld
pop
mov
sub
jbe
xor
rolb
dec
mov
aaa
test
push
cmpl
fidivrl
rclb
mov
push
or
test
cmp
mov
sub
push
xchg
cmpsb
jp
leave
adc
or
test
jge
dec
dec
test
insl
and
movsl
pop
jne
jns
fsts
std
jns
xor
or
dec
lds
push
xchg
mov
adc
inc
ficomps
shll
adc
xlat
outsl
mov
add
in
push
adc
sub
ficompl
nop
stos
mov
mov
xor
stos
divb
xor
fstpl
mov
fwait
retw
mov
pop
test
push
jne
add
add
sub
insl
mov
push
lock
insb
enter
and
add
jbe
dec
pop
xchg
xchg
add
add
mov
cmp
dec
insl
cwtl
in
mov
jo
clc
aas
fildll
fs
test
enter
dec
lahf
shrl
bound
sbb
sbb
sub
mov
icebp
mov
je
dec
mov
subl
and
sbbb
es
mov
mov
jmp
cli
jo
stc
and
or
mov
testl
and
cmp
cmp
nop
loop
push
out
jl
fwait
sahf
clc
jb
adc
loop
sbb
dec
push
sbb
subl
shlb
sbb
dec
pusha
fs
pushf
subl
scas
cmp
rcr
bound
je
stc
shl
or
lods
movsl
xchg
loope
mov
lahf
cmp
cmp
mov
mov
cwtl
fisttpl
arpl
jmp
aad
out
jae
add
lods
fidivrl
mov
movsl
push
sub
cmc
lret
bts
hlt
cli
cmc
push
es
jecxz
fmull
mov
testb
mov
sub
cmp
into
ret
jo
dec
jp
aad
add
jge
push
cmpsl
jecxz
lods
outsl
dec
sbb
cltd
outsb
notb
pop
mov
outsl
inc
movsl
and
xchg
mov
ds
push
and
das
push
sbb
jb
xlat
cmp
fldln2
pop
in
loope
call
cwtl
outsl
dec
and
repnz
pop
out
push
int3
xchg
rolb
xor
xchg
push
shll
jo
xchg
push
ds
popf
cmp
in
mov
push
dec
lahf
pop
ds
insl
or
mov
mov
xchg
int3
repnz
jmp
loope
fwait
leave
sbb
cmp
sub
jmp
fsubr
adc
cmp
and
fistps
shr
adc
jbe
mov
lods
mov
dec
callw
jnp
jle
mov
mov
jg
das
pop
xor
sarb
fnsave
push
lea
jbe
pop
jl
roll
lahf
enter
and
jae
fsubs
mov
mov
les
adc
out
out
jne
movsl
fidivrs
outsb
pop
addr16
xchg
jp
mov
cmp
and
mov
push
push
pop
cltd
add
clc
or
stos
jge
or
cmp
bound
aaa
adc
sub
mov
push
pop
sbb
mov
and
sub
sbb
cmp
sub
iret
mov
addr16
clc
xchg
cmpsb
enter
iret
sbb
push
fsubrl
jmp
ret
mov
movsb
fisttpll
cmp
testb
in
out
in
jno
filds
aad
jmp
imull
mov
xchg
int
mov
xor
aaa
push
sub
cmpsb
sub
mov
mov
lret
mov
js
orb
mov
jbe
cmp
dec
add
xor
cli
cli
out
jo
adc
in
mov
andl
loopne
or
stos
stos
lea
test
jmp
mov
sbb
insl
xchg
push
aad
push
sbb
xchg
xor
dec
xchg
sub
inc
mov
mov
bound
pop
cmpsl
jl
scas
aaa
or
and
ret
outsb
sub
push
fsubrl
stos
pop
fldenv
or
out
mov
add
lahf
aaa
or
cwtl
add
ret
cmp
adc
pop
and
cwtl
inc
not
add
cld
xlat
cwtl
jae
lret
jbe
cmp
jge
jne
lret
sahf
fisubrs
xchg
xor
les
mov
sbb
stos
ljmp
and
insl
dec
repz
lcall
xlat
aam
hlt
into
xor
pop
nop
aam
jns
or
push
xchg
sub
cmp
testb
add
aad
cs
lock
push
scas
insb
xor
lcall
bound
mov
lock
adc
cmp
sub
push
push
mov
addr16
gs
ja
and
cmp
lock
cmp
adc
push
negb
movsl
rcrb
imul
loopne
xor
mov
cmp
out
shl
dec
jecxz
int
lahf
shll
in
sahf
out
ret
xchg
rcrb
xlat
ja
ret
sbb
xor
sub
or
and
in
mov
scas
fisttps
adc
fistpll
or
sbb
pop
testl
dec
into
daa
movsl
add
pop
adc
xchg
jle
push
js
adc
cmp
repnz
inc
sahf
fs
inc
fisubrs
std
push
and
xor
mov
adc
jne
and
sub
inc
dec
mov
enter
xchg
mov
pop
cmpsb
push
cmp
xchg
or
sub
inc
int3
out
sub
mov
sbb
jns
in
sub
shlb
dec
push
xchg
fildl
push
inc
xchg
dec
aas
arpl
jecxz
xor
mov
mov
add
movsb
push
int3
lds
push
test
xor
mov
push
divl
sub
fwait
jnp
repnz
pop
inc
test
cmp
stos
outsb
pusha
ds
pop
jo
pushf
inc
mov
enter
mov
or
and
mov
push
push
jae
test
int
push
jmp
addb
sbb
inc
push
push
outsb
inc
inc
jle
xchg
jae
jecxz
mov
and
mov
xchg
pop
test
into
dec
add
pop
xchg
dec
sub
lcall
push
cmc
adcb
out
stc
scas
lock
testl
xchg
or
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
jg
mov
fsts
int3
jmp
add
sarb
dec
pop
jo
mov
push
icebp
or
push
inc
cmp
sbb
mov
iret
mov
insl
movsl
out
aad
sub
mov
jae
pop
sbb
je
divl
add
and
jge
lods
sub
xchg
lcall
cmp
mov
insl
lret
xchg
adc
jb
jp
ret
sub
push
data16
lock
or
xor
stc
popf
pop
cmp
std
in
dec
mov
sub
adc
pop
clc
sti
inc
testb
cmp
push
add
xlat
in
sub
jge
add
fwait
test
xor
mov
les
xchg
out
add
imul
and
idivl
fstpt
inc
fwait
xchg
int3
addl
repz
loope
sbb
loopne
mov
add
std
xchg
repnz
inc
mov
ds
or
in
fxch
xor
lret
out
sbbl
js
jns
sbbb
xchg
mov
dec
cmp
pop
movsl
and
js
push
pop
push
sbb
cmp
cli
xor
arpl
popa
mulb
icebp
lods
mov
dec
jge
pusha
mov
lret
cmp
scas
in
jecxz
cmpsb
in
mov
roll
adc
inc
dec
data16
xor
bound
mov
cmp
les
sub
sub
and
cmpl
xor
fs
cld
inc
add
add
pop
dec
es
cmp
cmc
cmp
fs
imul
pop
cmc
mov
and
popf
push
out
scas
dec
in
es
mov
push
aaa
rclb
test
xchg
das
out
or
add
loopne
inc
xchg
sbb
add
aaa
outsb
xor
and
dec
lods
loope
aam
xchg
inc
dec
xchg
jmp
push
xchg
pushf
daa
ret
aam
dec
jg
cmp
mov
test
or
xchg
mov
jp
pop
sahf
rcrb
xlat
xchg
outsb
xchg
sub
outsb
repz
push
mov
fcoml
or
fdivs
fs
or
cmp
in
fnstenv
add
mov
jns
fistpl
xchg
push
add
les
fists
cltd
mov
in
repz
dec
and
dec
movsl
iret
cmpsl
xor
sub
mov
push
dec
subb
mov
pusha
pop
mov
hlt
les
sub
mov
cwtl
mov
sub
fisttpll
call
push
bound
lret
dec
jmp
popa
cwtl
mov
inc
sub
xor
test
popa
and
fimull
cmpsb
lods
pop
andb
add
inc
stos
inc
out
arpl
int
push
dec
adc
insl
shr
mov
out
lock
mov
cld
mov
imul
mov
or
jno
push
div
ss
mov
jl
jne
addr16
lds
leave
lahf
int3
add
mov
push
loopne
or
shl
or
mov
je
dec
xchg
pop
mov
pop
add
mov
add
out
test
ds
add
adc
fistps
xor
in
pop
cltd
cs
loop
fidivrl
mov
out
mov
add
push
sarl
fs
inc
jbe
sub
out
lds
lods
fldl
ds
jb
out
shlb
insl
and
out
mov
dec
mul
aam
cmp
fs
cmpb
pop
pop
out
roll
xchg
imul
xor
das
ldmxcsr
mov
lea
xor
lods
mov
add
mov
pop
std
test
and
sbb
lods
std
rorb
xchg
push
ret
fcom
pop
jno
test
cwtl
pop
les
fstl
clc
xchg
jns
mov
jne
jb
mov
pop
add
and
sub
int
fists
sbb
cmc
loope
es
inc
imul
es
int3
int3
loope
aaa
pop
cmp
push
cmp
xchg
daa
jne
push
cmp
ljmp
xchg
cmpsb
fs
leave
jle
out
xor
mov
xor
dec
scas
das
add
mov
pop
mov
xor
push
fdivrs
cltd
in
mov
sbb
mov
ret
out
in
xchg
push
je
ret
aas
inc
mov
std
mov
cld
call
or
fdivl
fs
dec
leave
push
in
out
cmp
mov
fiaddl
cmp
sbb
imul
inc
test
in
test
fldt
xlat
jns
loopne
and
cmpsb
jns
movsb
push
or
xor
add
lahf
adc
jg
jno
pop
gs
and
add
jns
test
lods
movsl
cmpsb
mov
dec
in
mov
mov
rcr
sub
xchg
sub
cmp
aas
xlat
cmpsb
dec
push
testb
xchg
rorl
ror
lds
pusha
lds
cmp
inc
loope
mov
cmp
pushl
xchg
mov
dec
xor
cmp
mov
lret
cld
push
insb
xchg
xor
pop
es
xchg
subl
cmc
pop
mov
mov
addr16
jecxz
adc
mov
cmp
mov
ds
dec
int3
sbb
mov
xchg
pusha
mov
mov
gs
sbb
dec
fisubl
adc
mov
insb
dec
add
fs
xchg
jo
pmuludq
out
fiadds
lcall
lahf
shr
pop
push
sub
fs
mov
imul
cmp
cld
stos
adc
ret
jl
pop
loopne
pmaxub
mov
sahf
push
aas
fimull
insl
push
scas
pop
mov
push
pop
push
xor
sub
dec
push
and
mov
push
cmc
mov
and
push
cmp
xchg
scas
add
je
rolb
outsl
adc
adcb
cli
mov
sbb
add
insl
push
add
jle
rolb
dec
lock
or
popl
jle
insb
loope
or
xor
lret
pop
xchg
dec
leave
ficoml
add
jecxz
pop
xchg
inc
mov
cmp
mov
inc
stos
cmp
lods
test
pop
pop
adc
mov
out
in
test
pop
adc
xor
cwtl
jae
andb
dec
adc
and
js
addb
xor
les
push
cmp
es
sbb
pop
dec
push
sub
jb
test
cmp
stc
dec
jge
jae
enter
mov
add
lcall
sub
aad
fs
mov
aas
jmp
or
sub
sub
setne
mov
mov
adc
mov
cmp
or
mov
jb
push
pop
push
rcr
sub
mov
addr16
fmull
pop
dec
decb
cmpsl
jp
adc
stc
arpl
aad
jge
jae
call
mov
add
ds
jae
dec
cmp
out
cli
call
xchg
in
pop
pop
ror
sub
mov
outsl
mov
mov
cld
mov
jecxz
loope
mov
sti
cltd
xlat
adc
pop
sar
jo
mov
out
test
test
or
rcl
jae
mov
jge
cmpl
add
and
mov
enter
in
mov
lock
pop
stos
xchg
push
add
out
daa
mov
inc
jle
jnp
or
push
mov
fstps
xor
lods
cld
in
in
add
xchg
sub
pop
pop
ja
pushf
adc
imul
popa
icebp
xchg
daa
cmp
stc
sub
movsl
push
movb
adc
push
mov
out
ficomps
lods
ffree
fs
push
cmp
test
es
push
test
rolb
popa
mov
stc
jecxz
lea
mov
inc
icebp
jge
pop
test
add
dec
lods
jg
push
sarl
add
mov
pop
or
pop
jae
idivl
popa
stc
sbb
jle
fistps
das
mov
addb
jg
jecxz
pop
lahf
or
jle
sbb
mov
adc
sti
pop
xchg
mov
dec
or
loopne
dec
aaa
jnp
xor
or
sub
testl
pop
ljmp
pop
pop
xor
mov
lds
scas
into
inc
sub
daa
sbb
dec
sbb
js
push
icebp
adc
inc
inc
mov
sarl
movsl
loop
add
enter
push
sub
data16
xchg
gs
jl
mov
jg
pop
lret
mov
push
push
dec
fucomp
sbb
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
xchg
push
int
inc
out
push
pusha
ja
mov
pop
pop
xchg
ja
inc
mov
sub
hlt
inc
gs
fstpl
lcall
cmp
mov
push
enter
lret
stc
loope
imul
rorl
and
int3
sub
jns
lahf
inc
hlt
adc
in
dec
mov
lret
test
ds
jmp
repz
push
sti
and
pop
icebp
or
mov
sub
lock
std
jae
loop
aaa
lret
stc
pop
sbb
ds
sti
rcr
xor
test
sub
mov
sbbl
fs
xor
lcall
lock
jae
sub
std
fnstcw
ret
mov
sbb
enter
lret
add
sub
xchg
je
loopne
sbb
fstps
lock
dec
cmpsb
jae
decl
lods
es
adc
rorl
dec
das
xlat
cmpsb
gs
stc
cltd
inc
dec
adcb
inc
pop
cmp
leave
or
inc
sti
mov
fsubp
or
rclb
bnd
dec
xor
in
shl
outsb
lahf
pop
inc
cmp
out
stos
lea
in
fs
outsl
sbb
sub
dec
adc
jo
lea
jg
push
dec
pop
push
mov
and
dec
dec
test
and
dec
je
sarl
push
mul
addr16
stos
xchg
gs
inc
push
sahf
sub
xchg
and
fs
in
pusha
ret
sbb
rorb
push
popf
pop
insb
incb
imul
push
lock
mov
sbb
push
push
cmp
test
insb
adc
mov
add
mov
push
mov
adc
lret
fdiv
xchg
scas
cmpsb
mov
inc
xchg
adc
sub
lret
inc
and
in
outsl
pop
loopne
ss
test
push
xchg
movsb
arpl
divb
pop
sahf
xchg
xor
pop
mov
lds
outsl
cld
adc
push
push
inc
mov
icebp
xchg
lcall
mov
xlat
mov
addl
movsb
imul
add
iret
mov
stc
imul
jno
js
fiaddl
leave
movsb
iret
rcrb
push
cmp
in
lds
dec
inc
ljmp
test
jmp
rcll
inc
xor
mov
fsts
in
sub
and
cltd
outsb
popa
hlt
insb
mov
out
dec
and
ror
imul
push
fildll
ret
dec
push
out
jno
and
jbe
or
push
outsl
cmpsb
negb
mov
xchg
and
scas
ljmp
fnstsw
mov
add
push
adc
xchg
push
push
mov
daa
pop
cli
inc
cmp
cld
mov
xor
lcall
jp
mov
sub
jnp
lcall
mov
out
and
mov
add
add
les
push
pop
jl
mov
xchg
ret
dec
inc
jge
jle
jno
sbb
leave
aad
push
lea
data16
lahf
addb
xlat
addr16
gs
push
adc
pop
fisttpl
dec
aad
pop
ja
fsubrs
push
sub
mov
sbb
add
pop
or
repnz
arpl
rorl
test
and
xchg
fcompl
addr16
jo
or
sbb
dec
into
xchg
inc
gs
and
sarb
add
lds
xchg
sub
clc
insl
data16
sub
xchg
dec
gs
push
add
cwtl
pop
push
insb
lea
movsl
adc
and
fistpl
or
fdivs
xor
push
push
mov
jb
push
mov
in
cmp
xor
cmpsb
fdivp
mov
lcall
mov
cltd
aaa
xchg
subb
push
lret
jge
xor
xchg
fwait
mov
xchg
adc
iret
add
xchg
sub
and
xchg
out
sbb
movsb
add
fidivrl
aad
enter
popf
add
in
lock
in
add
lahf
push
nop
mov
cltd
xchg
dec
cmp
lret
stc
ja
stos
pop
int
das
xchg
shr
mov
adc
pop
andb
sub
mov
movsl
mov
mov
sbb
sub
subb
mov
notl
cs
inc
dec
repz
nop
mov
cmp
dec
pushf
ss
aaa
mov
je
pop
testb
inc
push
insb
adc
ret
in
js
mov
enter
inc
shr
mov
faddp
lods
sbb
lahf
ljmp
mov
xchg
stos
shrb
test
cmp
cmc
jmp
pop
fistpll
add
imul
cld
jle
lods
cltd
frstor
or
mov
fnsave
adcl
xchg
lea
dec
push
jmp
into
mov
adc
xlat
je
jecxz
rorb
js
sub
sarl
cwtl
in
jae
aam
sarl
xlat
test
adc
in
shrb
inc
jae
push
mov
push
mov
ror
jle
test
into
hlt
orl
mov
ds
sub
adcl
pop
xor
decb
xlat
push
pusha
and
mov
fidivrl
mov
sub
es
jo
jbe
or
pop
scas
and
dec
xor
aam
in
sub
pop
xor
rcll
pop
xorb
or
cmpsb
mov
push
les
and
enter
test
aam
imul
dec
cld
out
fs
lahf
cmp
in
dec
push
push
arpl
dec
jae
jnp
mov
outsl
cmpsl
xchg
mov
and
jns
dec
cmp
jae
mov
inc
divb
cmp
mov
dec
mov
jns
pop
aam
pop
mov
fwait
pop
mov
insb
mov
mov
lods
mov
dec
xchg
stos
push
loopne
push
jp
jmp
outsl
loope
jne
mov
jne
dec
test
dec
andb
or
jge
aaa
xchg
imul
andps
push
mov
into
sbb
jle
aaa
adc
popl
sbbl
adc
sub
jo
sarb
fucomp
push
inc
fs
mov
outsl
repz
lods
xlat
and
mov
cmp
aas
popa
dec
cltd
cmpsl
push
xchg
xchg
pop
inc
jmp
testb
out
pop
fs
or
out
fisttpl
adc
shlb
pop
pop
or
push
rclb
xor
imul
mov
sbb
adc
mov
fildll
out
and
pop
mov
adc
mov
mov
ret
cmp
arpl
mov
xor
and
stos
rol
iret
mov
sbb
mov
dec
mov
pop
cs
add
push
popf
adc
pop
push
xchg
and
sub
xchg
loop
xor
pop
add
or
test
adc
adc
fsubrs
jecxz
insl
arpl
jb
lret
pop
les
or
mov
nop
or
out
scas
cli
add
stc
stos
adc
ret
lods
push
cwtl
out
jge
sub
jecxz
inc
jle
pop
lahf
cmp
mov
cmovle
or
insb
test
daa
ja
sbb
imul
insb
rcr
sub
dec
cmp
std
push
mov
jno
mov
push
or
inc
out
push
mov
fildll
dec
pop
xchg
jp
adc
les
and
jns
cmp
out
push
cmp
fdivl
add
repnz
jmp
lcall
pop
icebp
mov
cmp
sbb
jo
movsl
or
rol
out
insb
adc
aam
mov
and
inc
jl
inc
or
add
das
out
rolb
sbb
fsubrs
jecxz
insl
arpl
mov
dec
mov
addr16
test
fnstsw
das
vrcpss
std
aam
cmp
cmpsl
sbb
je
jno
push
cld
hlt
or
mov
cmovle
inc
bound
std
inc
and
insb
cmc
lock
mov
imul
cmp
faddl
fnsave
sub
loope
inc
clc
pop
mov
movsb
stos
cmp
leave
add
fs
jle
bound
sub
aaa
lcall
rcrb
fistl
jl
cmp
ss
mov
mov
cltd
xor
icebp
adc
mov
and
jl
xor
add
int
pop
push
out
sub
dec
jbe
andb
lea
jae,pn
xor
cmpsl
loopne
call
mov
lds
pop
mov
stos
call
and
jmp
loope
pop
dec
icebp
addr16
rcrl
sarb
iret
andb
icebp
vorps
cs
and
fisttps
out
mull
rcrb
xor
movaps
sbb
cwtl
jge
cmp
mov
xchg
mov
mov
adc
dec
adc
lds
test
jne
mov
sbb
mov
hlt
test
add
inc
or
shlb
popa
iret
imul
addl
cwtl
xchg
scas
sbb
pop
or
jmp
jecxz
lods
ja
sbb
lea
dec
mov
cmovae
xlat
ret
adc
leave
nop
mulb
sbb
fidivl
ds
sbb
sub
and
and
shll
jmp
in
push
and
xor
push
das
push
cmp
shrl
adc
lcall
jp
and
in
push
mov
mov
movsl
icebp
lds
movsb
xchg
mov
test
jb
cmpsl
pop
jp
and
or
in
dec
sub
jp
or
outsl
sar
shlb
jb
fsubrp
mov
mov
cwtl
and
stos
js
mov
dec
js
push
cmp
jb
adc
imul
divl
popl
int3
rcl
push
clc
rcrl
insb
xor
idivb
xchg
ffree
inc
mov
push
pop
add
push
cmp
ret
push
lea
test
pop
sub
mov
dec
cltd
test
cmp
sub
fwait
xchg
push
push
mov
or
icebp
or
jbe
shlb
jb
mov
sahf
xchg
ret
sub
jno
mulps
jnp
sub
ficoml
jl
xlat
repz
daa
ficomps
xchg
lahf
mov
push
push
in
nop
jg
inc
mov
std
sub
nop
lret
cmp
pusha
mov
ss
inc
xchg
sub
xor
xchg
pusha
push
mov
shll
mov
outsb
dec
adc
sti
add
push
cs
ds
daa
xchg
jg
xor
lock
gs
dec
mov
add
mov
pusha
ret
jl
or
cmp
cmp
and
lret
cmp
in
jnp
rcll
and
shlb
dec
cmp
shr
sub
xchg
push
addb
xlat
decl
add
cmp
add
sub
xchg
push
add
js
test
inc
pushf
push
xchg
xor
inc
popa
test
fbld
cmp
les
mov
sbb
inc
dec
shll
repz
sbb
sub
pop
in
xlat
adc
lret
jnp
out
jle
lods
mov
or
aad
mov
jne
in
pop
ret
in
dec
mov
pop
dec
stc
in
sbb
lea
scas
cmp
js
push
aad
lods
push
test
popa
rcr
and
mov
ds
pop
dec
arpl
fcompl
add
mov
or
pop
jp
ss
cmc
dec
sub
adc
dec
leave
sub
sub
push
pop
xchg
pop
or
xchg
xchg
stos
xchg
cwtl
cmp
popa
cs
mov
push
mov
data16
lahf
lods
or
loopne
imulb
push
lahf
push
add
jnp
gs
mov
mov
and
outsl
jg
push
push
jbe
ret
cmp
scas
pop
test
fldcw
sub
adc
jl
in
fdiv
and
fnstenv
shlb
sub
rorb
int3
ss
pop
mov
sub
jns
xchg
mov
test
scas
mov
jno
cmp
mov
rcl
inc
dec
or
daa
xor
or
push
and
js
popa
xchg
movsb
pop
jae
push
push
push
aad
outsl
mov
and
dec
std
sbb
loopne
stos
scas
and
push
and
mov
fimuls
xchg
adc
testl
pop
je
scas
cmpsb
inc
mov
je
sbb
test
loope
sbb
fimuls
mov
xchg
outsl
sbb
and
pop
mov
pop
adc
and
pop
leave
adc
hlt
test
jo
out
inc
sahf
fcmovnbe
inc
jns
dec
xchg
mov
jp
xchg
mov
adc
sbb
push
rorb
push
scas
movsb
jmp
aad
cmp
push
dec
into
aas
pop
sub
sbb
int
jg
add
bound
add
stos
push
popa
ret
int3
jl
jle
jge
cltd
xchg
push
sahf
ds
out
push
ds
mov
cmp
jno
call
xchg
fadds
sbbb
int
lcall
call
iret
adc
mov
jg
sub
pop
mov
data16
mov
loope
or
divb
xor
fmuls
es
xchg
adc
inc
popf
or
sbb
adc
inc
push
jg
scas
fistpll
les
test
movsb
cwtl
sahf
sti
pop
mov
in
xchg
push
mov
fmull
mov
stos
mov
push
cs
or
arpl
lock
loope
adc
push
movsb
cs
or
repz
loope
fmul
jnp
mov
rcll
mov
xchg
in
push
sub
outsb
sub
push
sbb
lret
ljmp
rcrl
sub
test
sbb
mov
xor
repnz
aad
sbb
mov
lcall
in
cmp
ja
rolb
nop
pop
xchg
fs
mov
stc
xchg
repnz
pop
mov
dec
gs
daa
scas
inc
sub
and
xchg
push
push
pop
jg
mov
xlat
aaa
cmpsb
ret
push
mov
mov
sbb
jns
icebp
and
mov
mov
or
icebp
mov
mov
inc
inc
xchg
push
std
inc
mov
popf
stos
mov
push
fmul
aas
cli
out
xchg
test
cmp
add
mov
call
mov
out
mov
std
sub
sub
loope
jmp
and
jmp
cmp
adc
ja
sbb
dec
ficompl
popf
add
repz
jge
xorl
jp
pop
mov
xor
ror
or
lods
xchg
add
or
push
repz
cmpl
dec
xchg
dec
and
xor
jae
fstl
sub
xor
rcrl
inc
scas
cmp
gs
push
cli
adc
sub
das
xor
mov
repz
or
jbe
add
cmp
vcmpsd
push
mov
popa
ds
xchg
mov
lahf
xchg
xor
nop
jg
xor
notl
in
add
testl
stos
mov
int3
icebp
lret
lcall
stos
xor
sub
int
pop
xor
out
repz
loop
adc
xor
or
out
xchg
ljmp
xchg
xor
decl
and
fildl
mov
mov
xor
popa
fldenv
jg
dec
lret
sub
push
or
lahf
cmpsl
outsl
test
aaa
leave
hlt
xchg
jnp
cwtl
jnp
pop
lds
lea
nop
or
outsb
mov
or
in
inc
fistps
and
inc
push
loop
jecxz
je
jb
js
dec
inc
mov
js
or
adc
xchg
pop
xchg
in
mov
inc
jle
sbb
push
dec
mov
adc
movsl
fidivl
fcompl
mov
fidivrl
int
es
and
inc
adc
pop
aaa
add
jne
stos
cmp
inc
add
arpl
outsb
mov
and
in
push
or
das
mov
inc
sub
rclb
ja
pop
inc
aaa
sbb
out
mov
daa
xor
sti
stos
inc
mov
test
gs
outsb
outsl
xchg
cmpsb
dec
xchg
loop
ja
sahf
inc
ja
cltd
shlb
jb
aas
sub
add
cld
loope
or
push
mov
xchg
int3
mov
test
adc
inc
into
aas
out
cs
push
cmp
xchg
jecxz
ss
scas
inc
aad
lret
push
push
outsb
roll
nop
cmp
popa
mov
repnz
fxam
adc
xor
pop
lret
xor
fmull
mov
lret
sbb
jo
cmp
cmp
mov
in
out
add
fcmovnu
jmp
xchg
add
pushf
andl
mov
mov
lcall
cmp
ret
imull
inc
mov
and
out
test
popf
ret
push
jb
daa
add
inc
outsb
mov
adc
add
push
aas
cli
daa
rclb
jmp
cmp
jmp
sbbl
jno
fstps
dec
xchg
pop
movsb
pushl
in
push
insb
dec
xchg
and
mov
sub
mov
jecxz
outsb
and
inc
and
nop
xchg
out
and
cmpsb
or
inc
sbb
sbb
inc
aad
mov
repz
and
cltd
pop
jge
hlt
aaa
mov
sti
rclb
mov
mov
sbb
lods
es
mov
xor
pop
mov
mov
and
sahf
ret
adc
cmp
xor
pop
pop
call
imul
fwait
iret
and
les
out
cmp
arpl
inc
lock
test
orl
mov
in
js
mov
pop
mov
loop
std
adc
mov
jns
or
lds
pop
ds
pop
push
xor
mov
int
mov
xorb
and
and
or
test
lcall
mov
mov
rcrl
cmc
inc
mov
pushf
fisttpll
loopne
shlb
or
add
push
mov
sub
dec
xchg
and
pusha
addr16
imul
out
inc
mov
maxps
jmp
jmp
shll
pop
loopne
or
jle
or
sti
sbb
pop
push
push
sbb
popa
mov
imul
dec
jb
adc
sub
sub
dec
arpl
pop
adc
add
stos
pop
daa
lods
mov
jb
xchg
cmpl
pop
add
jns
xor
iret
push
out
and
mov
mov
mov
stc
dec
iret
pop
sbb
mul
outsb
inc
mov
mov
mov
hlt
xchg
xchg
iret
addb
inc
es
pop
stc
sbb
add
or
add
lcall
test
sbb
fisttps
and
std
imul
jmp
dec
movsb
out
js
sbb
frstor
jp
sbb
pop
es
popa
cltd
add
bound
sbb
icebp
inc
xchg
jae
fisubl
push
imul
pop
cltd
stos
or
mov
ret
xor
jmp
adc
add
jns
out
andb
mov
cmpsl
mov
jmp
bound
adc
test
push
int3
mov
fstpt
mov
imul
add
jae
mov
test
and
imul
daa
sub
popa
cmp
lds
dec
mov
cltd
iret
ret
sbb
flds
cmp
adc
repnz
adc
loop
out
seto
push
iret
aaa
je
leave
outsb
mov
pusha
dec
xchg
and
repz
adc
adc
mov
jno
sarl
test
aad
xchg
out
add
out
pop
iret
dec
imul
push
and
sub
imul
insb
ljmp
cmp
fnstcw
xor
lret
lock
dec
popf
pop
popf
sub
mov
cmpl
mov
int
or
jbe
fcomip
pop
inc
cmpl
movlps
push
mov
mov
mov
addr16
pop
inc
mov
daa
add
cmp
in
js
out
push
mov
es
and
movsl
inc
jle
and
fwait
leave
rorb
fdivl
es
dec
mov
xchg
cmp
add
out
imul
jae
scas
inc
mov
inc
dec
jno
lods
xor
mov
jnp
sahf
pop
test
adc
lds
fsubl
push
push
mov
fstps
sbb
fst
loop
mov
adcl
jp
mov
faddp
push
loopne
cmpsl
fisubrl
daa
pop
insl
stos
jbe
hlt
xchg
jmp
leave
pop
inc
js
xchg
lock
pusha
lock
aam
std
pop
sbb
insb
xchg
pusha
gs
sub
leave
dec
les
dec
xchg
lds
mov
cwtl
and
mov
and
fwait
test
add
std
jo
fildll
rcll
push
push
jle
insb
mov
popf
ret
inc
jno
stos
jle
shlb
sbb
fldcw
test
mov
test
scas
mov
lret
mov
outsb
int
inc
clc
mov
lea
stos
pop
ljmp
cltd
dec
push
push
test
sbb
adc
fldl
scas
jns
je
inc
ret
or
lea
or
lds
daa
inc
roll
in
scas
pop
sub
es
movsb
and
aad
jbe
test
in
dec
outsb
loopne
and
jl
sub
xchg
in
adcl
fs
dec
xor
scas
cmp
pop
add
fs
fnstsw
push
inc
rcrb
pop
cmp
jb
aaa
aas
js
push
or
push
pop
or
enter
and
push
pop
inc
mov
imul
cmp
pop
sar
nop
push
into
jns
push
ss
not
call
mov
repnz
outsb
sub
dec
xchg
jecxz
das
mov
cmp
gs
sbb
fwait
arpl
std
icebp
pop
xor
cmp
and
mov
push
dec
icebp
leave
incl
push
hlt
popf
mov
outsl
es
test
xchg
xor
xchg
dec
clc
cs
call
popa
dec
and
cmp
inc
test
daa
xchg
sub
mov
push
pop
sbb
mov
cmp
in
in
xchg
cmp
pushf
inc
clc
ret
sub
cwtl
aam
jno
data16
cmpsl
push
lock
lahf
dec
je
sbb
sbb
int3
test
hlt
inc
add
sub
andl
sub
test
push
out
dec
push
pop
aam
add
popf
cmpl
inc
inc
xchg
imul
dec
dec
inc
jle
cltd
cmp
les
insl
add
in
lock
add
cltd
jno
aam
sbb
insl
jmp
pop
xor
sbb
loopne
popf
sarl
push
or
sahf
aaa
jne
mov
dec
cltd
sub
iret
loopne
dec
mov
mov
std
int3
pop
inc
dec
sub
add
into
imul
and
test
std
sbb
cs
xchg
mov
popa
dec
imul
pusha
insl
pop
jns
and
mov
shl
faddp
sub
dec
mov
cli
adc
sub
or
clc
xor
fists
fwait
scas
dec
sbb
fdivrs
lock
dec
push
enter
add
jmp
mov
arpl
lds
cmpsl
jmp
rcr
mov
mov
int
sahf
mov
aas
or
mov
pop
mov
xchg
lods
call
push
and
jnp
and
dec
inc
rcrl
imul
repz
push
or
jo
filds
mov
xchg
scas
sbb
adc
insb
and
js
iret
and
sub
mov
pop
mov
loopne
cmp
lret
or
mov
aam
shlb
cmp
ss
movsl
cmpsb
int
lret
pop
dec
cmpl
mov
mov
into
xchg
xlat
mov
xchg
cli
xlat
dec
stos
andl
xor
aaa
ss
lods
adc
testl
in
push
aad
outsl
jae
jmp
inc
or
push
bound
and
xor
fwait
or
push
imul
and
jmp
adc
mov
adcb
jmp
adc
mov
clc
cmp
gs
sbb
add
cmovg
into
push
popf
mov
leave
mov
dec
stos
mov
adc
loope
rorl
sub
add
fmull
js
jg
mov
testl
clc
cmp
mov
push
xchg
pop
cmpsl
xlat
mov
movl
nop
dec
leave
in
shrb
ret
mov
das
inc
loope
scas
mov
inc
loop
sbb
shlb
push
mov
mov
jno
aaa
push
mov
jecxz
fildll
inc
aad
sub
push
lock
std
sub
pop
mov
dec
xchg
mov
scas
and
stc
add
popf
mov
int
ss
addr16
cli
add
mov
lds
sbb
addl
cmp
inc
cmpsb
jno
dec
loop
or
xchg
xchg
mov
andb
mov
mov
and
add
push
xor
inc
ljmp
mov
adc
mov
inc
idivl
jo
cld
inc
repnz
mov
jbe
nop
mov
push
mov
enter
add
decb
xchg
pop
cld
mov
lods
sub
aaa
pop
mov
sbb
jecxz
mov
imul
jbe
add
jo
cmp
std
test
dec
add
lcall
pop
mov
or
dec
rolb
mov
aam
pop
mov
jmp
push
mov
cmp
fxch
mov
mov
insb
inc
addr16
and
pop
ja
ljmp
jne
lcall
es
mov
mov
pop
dec
xchg
mov
adc
xchg
cmp
mov
bound
ljmp
vmaxsd
fmuls
pop
mov
leave
push
insb
jno
pop
flds
int3
jmp
cmp
adc
pushf
mov
add
out
dec
push
enter
shlb
imul
mov
sbb
jmp
pop
data16
or
pop
lret
jl
mov
int3
and
cmc
mov
shll
inc
sbb
std
rorb
jecxz
outsl
inc
test
stc
cmpsb
add
cmp
add
mov
cmp
out
push
in
sarl
add
pushw
out
fisubs
push
jg
ds
add
cltd
mov
fnstcw
push
mov
dec
out
fdivrs
adcl
add
lock
cltd
add
jno
filds
loopne
inc
xor
jecxz
aas
in
or
push
clc
mov
loopne
cwtl
imul
cmp
loope
inc
lret
inc
or
or
cltd
aad
daa
mov
xor
fwait
in
and
xor
lcall
out
loopne
test
rcrb
mov
push
jne
sub
fs
in
sub
mov
movsl
sbb
dec
in
out
hlt
adc
push
push
lcall
add
mov
das
loop
repz
les
js
mov
pop
push
aaa
lods
xchg
cs
xchg
call
pop
faddp
xchg
ror
clc
ficompl
fmuls
fwait
pushf
mov
sub
xor
sub
iret
fdivrs
fsubrs
push
pop
jns
push
jnp
popa
repnz
jl
jecxz
cmp
jne
mov
dec
in
adc
jge
mov
pop
out
push
idivl
in
push
scas
push
pop
xlat
inc
xchg
push
ffree
stc
mov
push
scas
push
pop
dec
xchg
movsb
hlt
gs
test
out
push
pusha
out
and
icebp
jae
xchg
xor
push
inc
mov
fistpll
shll
push
inc
xchg
dec
je
js
xor
leave
mov
xchg
or
fisubs
lahf
adc
rclb
adc
out
mov
jno
call
xlat
test
inc
and
mov
rcrb
iret
lods
jp
and
icebp
arpl
movsl
inc
cmp
pop
jle
sbb
jmp
scas
pop
sub
ja
and
pop
mov
outsl
loop
mov
jge
popa
icebp
cli
sbb
mov
shlb
jge
addr16
adc
fisubrl
jb
jb
movsl
xchg
dec
push
mov
nop
shrb
mov
sub
adc
add
xchg
fistl
aad
in
mov
mov
mov
xchg
aad
jmp
fildl
push
xor
add
lods
scas
lahf
dec
testl
push
cmp
and
movsb
nop
pop
xor
loopne
dec
adc
nop
and
add
sbb
push
fnstcw
mov
stos
ljmp
lret
repz
decl
pop
repz
jns
jge
call
lea
or
pop
insb
push
adc
push
cmc
dec
inc
mov
int
fistl
iret
adc
add
out
mov
mov
lods
lods
movsl
sub
leave
and
repz
xor
fisubrs
ret
add
test
inc
popa
sub
stos
or
mov
mov
jge
inc
adc
scas
push
cmovno
stos
mov
lods
repz
lock
dec
or
aam
xor
je
loopne
cmpsb
in
jnp
jnp
mov
inc
mov
lds
hlt
aas
push
jge
xor
xor
xlat
sbb
mov
adc
test
ds
jg
mov
inc
xchg
jno
sti
inc
xlat
int
je
lea
add
subl
or
ret
push
fidivs
and
sub
lock
push
push
test
adc
movsl
jge
xlat
idivl
push
fnstenv
sbb
lods
jecxz
or
test
in
xor
jecxz
mov
push
ret
arpl
stos
xchg
ret
mov
pop
xchg
pop
insb
pop
jo
shlb
in
add
imul
lds
mov
lret
gs
sti
jno
sbb
mov
xchg
jnp
mov
xor
lret
mov
fsubrl
stc
inc
and
mov
cmpsl
xor
sub
arpl
xchg
mov
xor
mov
lahf
in
lods
daa
sub
ret
jae
lods
loop
cli
push
test
push
lret
push
mov
jmp
sarb
sbb
nop
lret
adc
in
sbb
sbb
in
arpl
fildll
in
dec
and
imul
les
and
and
cld
lcall
push
testb
test
ljmp
pop
or
cmc
pop
lock
mov
and
scas
outsl
or
leave
mov
add
xor
sbb
dec
sub
sub
test
pop
jl
lods
std
fs
sub
stos
ja
xlat
mov
pop
mov
imul
out
mov
fisubl
inc
shlb
fistpll
sub
push
pop
xchg
adc
dec
jle
insb
sub
jle
stc
popa
faddl
push
pop
lcall
adc
pop
inc
and
aam
out
fsubp
push
push
mov
inc
ret
leave
pop
fistpll
sbb
sti
daa
mov
fstpt
scas
jmp
jle
or
push
and
pop
inc
mov
inc
xlat
insb
lock
and
xchg
lods
shll
inc
sub
out
or
out
andl
pushf
stos
mov
dec
jne
mov
lcall
jnp
in
pop
cld
mov
fs
sbb
xor
or
cmc
sbb
mov
shlb
sub
and
inc
popf
or
dec
or
into
mov
adc
cmpsb
lods
int3
fisttpll
lcall
xchg
jne
jae
outsb
mov
or
mov
fwait
cld
addr16
scas
xchg
inc
popa
imul
cli
adc
orl
scas
pop
mov
les
xor
adc
lods
mov
fiaddl
into
pop
sub
add
lcall
stc
jnp
cmp
mov
dec
lret
cmp
mov
pop
movsb
lret
orb
les
sub
dec
nop
adc
jmp
jmp
cld
idivl
add
loope
cli
popa
jns
shr
pop
sbb
mov
push
cmpl
cwtl
into
test
and
test
mov
pusha
lods
test
adc
push
dec
inc
lret
aam
pop
sti
jns
sahf
movsb
xor
repnz
mov
mov
in
lods
xchg
push
add
out
adc
or
push
in
inc
xchg
sbb
aad
add
inc
mov
and
hlt
and
test
dec
or
popf
jecxz
pop
mov
out
push
mov
jl
in
vunpckhps
or
in
stos
ss
lds
jnp
or
clc
and
insb
mov
inc
jnp
lods
sahf
xchg
pop
out
faddl
shlb
xchg
fidivl
sbbl
ret
test
loope
call
xor
mov
imul
ret
mov
adcl
pop
cmpsb
xor
lret
push
cmp
dec
mov
int
mov
lods
sbb
jns
divl
xchg
jbe
int
sti
fcompl
mov
pop
nop
and
push
mov
mov
lcall
cmpsl
mov
cmp
pop
and
nop
rcrb
cmpsb
jecxz
mov
xchg
loope
jp
sub
or
mov
mov
js
dec
cmpsl
or
test
push
mov
mov
icebp
sbb
lahf
sbb
je
lahf
mov
rcll
cmpsl
dec
push
push
int
inc
js
mov
pop
enter
leave
insb
dec
cmp
int
pop
pop
pop
cmp
xchg
ja
rcll
sub
mov
adc
cmpsl
add
fstpl
sbb
mov
loopne
jbe
or
mov
jmp
and
pop
lahf
sub
rcrb
idivl
in
negl
cld
icebp
xor
pop
pop
mov
and
adc
outsl
mov
out
cli
sbb
mov
les
pop
pop
dec
cwtl
rorb
cmp
inc
or
popf
xchg
mov
mov
fistps
aad
adc
into
roll
rcrl
fstpl
int
pop
outsb
testl
dec
lock
xor
popa
imul
dec
xchg
push
mov
xchg
cs
enter
lret
cmc
call
in
das
sbb
add
les
or
test
cltd
lock
xchg
mov
popf
jecxz
out
cmp
mov
pushf
in
adc
ret
pop
mov
jmp
cmpl
cmpsl
add
or
cmpb
cmp
adc
mov
out
les
sub
ds
cli
js
test
outsl
ret
cmp
je
inc
faddl
cli
mov
pop
cmpl
stc
sbb
or
popf
xchg
lret
adc
mov
dec
sub
lods
xor
push
sti
fdiv
or
int3
mov
pop
xchg
pushf
mov
mov
rclb
xor
dec
mov
repz
outsl
movsb
mov
dec
push
incl
push
gs
in
jnp
and
movsl
test
jae
ret
stos
enter
cli
mov
into
ss
lds
subl
nop
fcmovbe
or
sti
cmp
adc
pop
mov
and
roll
mov
jecxz
add
and
push
mov
fs
mov
mov
mov
lret
and
push
in
fidivrs
test
or
pop
rorl
push
inc
test
pop
loope
outsb
hlt
loopne
flds
int3
ljmp
dec
das
sbb
xchg
stos
and
cmp
sbb
gs
xchg
xor
mov
pop
mov
vpshufhw
repnz
icebp
jmp
stos
popf
jo
xchg
imul
xchg
mov
aad
shl
int
mov
cmp
mov
mov
mov
nop
sub
fcmovnb
pop
adc
xchg
lret
mov
fistpl
or
lods
dec
mov
fisttps
les
push
or
in
rol
js
arpl
das
ljmp
ja
int
pop
jne
or
inc
xor
test
xchg
pusha
sub
divb
pop
lret
in
inc
pop
or
aad
repnz
jl
jp
add
insl
lcall
cmp
in
cs
in
mov
popf
cmpsl
cli
pop
push
fs
shrl
jo
push
sbb
pushf
push
cmpsl
out
or
sub
nop
fnstenv
in
push
les
roll
test
mov
stos
jno
sub
stos
mov
int
repnz
popf
cmp
subl
sub
jge
out
xchg
adc
jp
rclb
imul
sub
push
lods
or
push
cmp
push
sub
and
fstpl
aas
pushf
pop
jne
rorl
xchg
jns
lcall
push
xor
scas
xor
xor
xchg
adc
or
pop
xlat
cmp
notb
lea
std
pushf
mov
sbb
popf
stos
push
add
xor
daa
das
pop
xchg
mov
cs
jo
ret
test
inc
inc
push
sbb
mov
fdivrl
add
icebp
inc
inc
sbb
movsb
or
dec
sub
xor
ds
outsb
imul
scas
loopne
pusha
ret
ja
push
cmp
pusha
jbe
pop
negl
lahf
aaa
rolb
ret
sti
sub
fadds
aad
sahf
or
stos
rol
mov
mov
daa
in
or
jl
inc
je
pop
xor
ds
aam
aas
mov
lcall
push
cli
stos
scas
xchg
inc
out
inc
loop
mov
in
sub
mov
pop
jmp
pop
dec
pop
sub
test
addb
jns
stos
cwtl
das
enter
mov
jbe
mov
xor
jmp
data16
lret
cltd
cs
sbb
push
mov
jl
or
push
int
push
stos
sti
or
mov
popa
and
cmc
loope
sub
and
test
pop
pop
cs
cmc
add
add
pop
popa
jbe
test
cmp
fisttpll
xchg
gs
and
int
sbb
ds
lret
push
mov
sahf
xchg
icebp
pop
mov
sbb
das
cmp
out
dec
sub
ss
decl
add
push
dec
jp
orb
mov
sbb
sub
lahf
xor
sub
je
adc
std
xor
sahf
popa
jle
mov
push
ss
call
lahf
out
icebp
push
pop
lds
sbb
clc
test
or
fadds
mov
movsb
aas
sbb
addb
shlb
ret
out
loopne
les
dec
sub
sbb
mov
dec
and
jb
std
mov
jne
lock
sub
lods
push
aaa
xchg
jnp
pop
popf
xchg
lcall
cmp
or
mov
xor
jp
and
scas
jg
aaa
fisubs
call
sub
mov
push
mov
repz
ja
push
scas
mov
fwait
and
fwait
jg
add
push
xchg
aaa
clc
mov
lock
std
cmovo
arpl
jg
popl
jne
adc
xchg
mov
mov
fsubl
lret
fdivrs
sbb
xor
xor
loope
pushl
or
adc
movsl
adc
pop
sbb
lea
jle
mov
xor
aas
mov
in
mov
ljmp
or
add
dec
loopne
sub
jns
add
movl
lock
mov
xlat
popa
out
call
adc
loop
inc
dec
and
jmp
or
sbb
xor
jl
mov
jmp
je
xor
mov
into
mov
mov
aad
or
adc
mov
jno
iret
cltd
mov
ja
jae
stos
imul
rorl
inc
sub
xchg
and
aam
dec
cmp
cs
inc
sbb
or
test
add
mov
dec
push
movd
adc
imul
mov
mov
nop
imul
shlb
fldt
jns
push
sbb
sbb
dec
xchg
test
sahf
sbb
sub
mov
jae
mov
lcall
add
or
inc
mov
sub
sbb
shl
lahf
popa
jp
test
mov
daa
xchg
pop
push
xchg
mov
into
arpl
pop
xchg
imul
push
cld
stos
xor
into
daa
jae
outsb
test
scas
testl
xchg
mov
lods
notl
lods
xor
fisttpll
test
push
sti
loop
adc
test
xchg
adc
fnstcw
adc
pushf
orb
mov
pop
fsub
mov
sbbb
add
dec
push
cmpsl
or
call
lods
cmp
scas
mov
ja
aad
lret
sbb
shrl
test
mov
xchg
push
dec
out
jmp
popa
in
std
addr16
mov
lods
ds
insb
aad
popf
push
xor
jl
ljmp
adc
and
nop
cmp
push
mov
xchg
mull
mov
mov
xor
cld
outsl
out
jle
or
push
pop
ficoml
push
jp
cli
mov
dec
roll
sub
push
sub
pusha
xor
push
pop
call
cmp
lahf
adc
icebp
roll
mov
adc
subl
and
ror
adcl
xor
sbb
fldcw
enter
push
sbb
repz
roll
add
loop
and
fwait
inc
movsb
ss
addr16
cmpb
and
iret
add
fisubl
or
sbb
fisttpl
jno
pop
or
data16
push
sub
add
dec
lds
lods
aaa
or
mov
pop
lcall
dec
sahf
jmp
ss
sbb
pop
and
push
pusha
mov
mov
popa
test
jle
add
movsl
in
aam
xor
jp
mov
cmp
andb
test
icebp
sub
aam
out
stos
and
lock
dec
leave
stc
sti
lcall
xchg
push
inc
lret
aas
mov
add
aad
ds
mull
push
sub
jp
mov
insl
imul
and
pop
dec
stos
ds
push
push
push
das
sarl
xor
or
mov
lret
inc
aad
mov
les
movsl
call
ret
ja
xor
bound
mov
xor
cmp
mov
inc
adc
or
xchg
out
dec
adc
xor
repz
jecxz
aam
jns
push
sbb
int
cltd
pop
mov
sbb
scas
sub
mov
loope
sub
in
xlat
test
out
or
xchg
std
pop
jp
sar
and
jno
push
dec
pop
loop
dec
mov
movsb
push
shrb
mov
jae
sub
cli
dec
cmp
push
imul
fldt
sbbb
add
sub
adc
clc
mov
mov
mov
mov
add
mov
insl
fsubl
repz
pop
pop
jbe
adc
daa
jae
adc
in
sbb
sbb
incb
adc
test
cmp
jns
add
add
imul
jg
scas
inc
sbb
rorl
xchg
mov
fidivs
jae
cmp
enter
aam
cmp
and
mov
fdivrl
scas
xchg
and
hlt
shr
cmpsb
and
pop
cmpsb
push
mov
imulb
jns
xchg
inc
sbb
push
push
or
in
add
hlt
mov
popa
imul
and
imul
in
adc
inc
jo
or
arpl
add
les
mov
mov
inc
push
pop
mov
xchg
jbe
loopne
push
jl
je
xlat
cmp
push
adc
and
cmp
cmp
cmp
jns
lret
jno
cmp
or
aas
sbb
push
incb
push
ja
neg
dec
cmp
pop
test
xchg
sub
sbb
fwait
and
scas
mov
loop
cmpsl
lea
push
sti
test
lods
xlat
test
push
cmp
sub
rcrb
mov
mov
dec
xor
jo
scas
mov
cld
lock
push
pop
cmp
cltd
inc
and
fsub
cld
rorl
bound
stos
sbb
int
xchg
inc
int3
xor
pop
mov
mov
adc
stos
inc
xor
enter
out
mov
sub
or
daa
mov
cli
jecxz
xor
push
dec
lds
pop
lcall
in
pop
inc
sbb
into
ds
mov
jb
xchg
xor
sbb
clc
pop
dec
imul
pop
je
sbb
sub
jns
pop
cmp
xorl
mov
out
xchg
dec
in
ds
add
xchg
push
outsl
out
xchg
test
mov
and
loopne
pop
cs
pop
and
lcall
sub
inc
push
fmulp
fnstenv
mov
dec
jbe
imul
cmp
into
adc
mov
sub
cmp
int3
aas
fiadds
sub
jae
xor
ret
fbstp
sbb
push
mov
dec
sub
sub
add
adc
out
fnstenv
and
xchg
xchg
loopw
shr
je
cmp
shll
inc
je
lret
into
cmpsb
fdiv
push
mov
loope
dec
mov
in
imul
dec
pop
and
xor
pop
aas
xchg
sbb
and
add
jg
stos
js
es
test
sub
and
cltd
xor
mov
ja
int
stc
and
push
mov
and
xchg
xchg
jl
xchg
push
inc
int3
data16
push
call
adcb
fs
cmp
hlt
add
adc
add
fs
xchg
fidivrs
test
push
dec
or
rep
xchg
push
xchg
pusha
xchg
or
mov
lahf
mov
arpl
sbb
cmpsl
rclb
jns
jmp
movsb
js
dec
mov
rolb
push
loope
loop
inc
jo
enter
mov
xor
ss
mov
lock
mov
push
or
push
roll
and
call
xchg
lcall
push
into
pusha
mov
lods
into
inc
iret
jmp
or
arpl
pop
hlt
inc
mov
xchg
xchg
lds
jae
sbb
lods
sub
out
adc
test
dec
or
lock
out
add
jp
jle
sub
lret
mov
add
adc
mov
adc
lds
popf
roll
data16
and
stc
push
sub
add
xchg
jmp
loope
in
or
mov
adc
or
add
test
jecxz
add
dec
std
push
sbb
call
lahf
lret
cmc
movsb
sbb
mov
jle
sbb
sub
gs
mov
xor
lret
sub
or
scas
mov
popa
or
pop
sub
inc
adc
jae
mov
sub
add
jbe
cmpsb
adc
pop
pop
mov
mov
inc
cmp
cmpsl
adc
lea
and
xchg
mov
mov
cmp
cmp
xor
xor
mov
lret
jns
push
in
outsl
test
rcrl
bound
mov
aaa
mov
lea
loopne
inc
hlt
test
dec
xor
dec
rolb
and
jle
test
dec
add
rcrb
pop
jns
outsl
popa
sbb
mov
rcrb
add
icebp
mov
and
lea
push
mov
call
test
sbb
adc
push
jnp
push
mov
mov
mov
mov
sbb
lods
mov
xlat
and
xor
pusha
add
adc
repz
xor
mov
and
stc
lcall
jne
adc
es
jne
cmpsb
out
nop
sti
adc
fwait
nop
cmpsl
sub
add
outsb
inc
sbb
mov
adc
jge
cli
inc
movsb
sbb
sahf
xor
add
cmpsl
and
aaa
notl
jnp
pop
xchg
jmp
leave
dec
xchg
daa
repz
sbb
adc
imul
push
or
out
daa
fwait
mov
jge
roll
fs
xor
sub
lcall
push
mov
sub
adc
lods
pop
daa
in
cmpsb
push
adcb
int3
sti
jge
mov
sbb
xor
aaa
popa
pusha
jns
inc
ds
mov
cmp
mov
lods
sub
sbbl
repnz
cmp
loope
and
mov
shlb
lods
and
stos
cld
push
ror
addr16
adc
lea
pop
and
cmpsl
rorl
bound
adc
mov
leave
xchg
pop
or
pop
stos
lock
shll
repz
mov
int3
mov
cli
arpl
movsl
push
movsb
popf
das
test
inc
or
aam
test
mov
sbb
filds
push
adc
lods
sub
and
cmp
xor
rcrb
or
bound
mov
jmp
and
jb
stos
icebp
mov
xchg
dec
cmpsl
sub
ret
and
mov
cmp
addb
inc
popf
mov
inc
fistpll
fsubrl
sbb
lods
mov
jmp
sti
sbb
ror
cmpb
out
in
sbb
fsubrs
roll
push
pop
mov
fwait
push
mov
or
pop
test
pusha
popa
push
fisubrl
pop
sahf
loop
lahf
fadds
imul
mov
aam
fbstp
cmp
adc
arpl
adc
mov
imul
movsl
push
mov
jo
ljmp
loope
cmpsl
notl
dec
out
mov
test
mov
jecxz
lret
jg
sbb
sarb
sahf
pop
insb
std
pop
daa
or
mov
pop
int
and
inc
or
lock
js
sub
pop
loopne
orl
or
jg
cmp
shll
mov
adc
fs
mov
daa
push
int3
sarl
das
data16
adc
jge
imul
mov
adc
into
in
push
pop
cmc
mov
call
jl
clc
and
into
insl
outsb
inc
push
jne
mov
loopne
xorl
xchg
das
imul
and
bound
cltd
mov
xor
mov
cmpsl
jl
enter
mov
addr16
sub
mov
lretw
pop
or
ljmp
push
adc
cmp
hlt
shlb
les
aaa
mov
cmp
jne
dec
ds
insl
orb
inc
sbb
inc
out
pop
xchg
outsl
jge
outsb
mov
add
xchg
dec
rorl
adc
xchg
les
push
loopne
lahf
or
and
sub
xor
inc
inc
cs
jmp
cmpsl
inc
mov
insb
in
jmp
or
or
mov
stos
repz
add
stos
lds
insl
mov
push
xchg
out
in
xchg
and
sahf
sub
push
aas
int
xchg
je
lods
pop
dec
dec
fnstcw
and
xchg
imul
test
xchg
jge
ret
sbb
xor
add
adc
in
sbb
pop
loopne
in
sub
sti
sbb
ds
push
jno
andb
cmc
scas
int3
cwtl
xchg
mov
add
out
mov
xchg
dec
xchg
sub
xchg
and
fwait
mov
pop
push
xchg
xchg
pop
shll
xchg
lcall
test
movsl
and
and
lcall
push
cmp
mov
sahf
or
pop
ret
repnz
pop
es
xor
mov
mov
addl
fs
in
xchg
and
adc
dec
cmp
repnz
cmpsb
pop
dec
pop
in
jbe
xchg
mov
out
or
out
imul
fsub
fldenv
mov
mov
add
lock
mov
fdivrs
inc
cwtl
xor
lods
add
movq
dec
inc
or
pop
pop
pusha
push
xlat
cld
xchg
pop
sti
int
add
adc
add
jns
xchg
inc
pop
sub
test
pop
test
mov
in
daa
clc
adc
pop
mov
shlb
out
cld
jno
loope
mov
and
jp
into
les
jmp
fsubr
xchg
mov
repnz
jecxz
inc
add
mov
inc
sbb
loope
push
push
pop
movsl
aaa
mov
or
mov
adc
sbb
jmp
adc
push
xchg
cwtl
in
lds
and
mov
hlt
jecxz
dec
gs
insl
adc
aam
shr
or
inc
pop
stos
add
pop
and
inc
mov
xorb
movsb
mov
mov
sbbb
popa
psubw
xchg
incl
jne
add
sbb
jne
popa
mov
jecxz
cmp
cs
dec
add
xchg
xcrypt-cbc
cmpsl
push
pop
inc
lock
gs
out
sub
out
or
add
or
inc
fcomps
addr16
inc
pop
jne
sub
and
lcall
pop
fadds
push
imul
out
sbb
in
js
dec
stc
lahf
or
cld
fisttpl
mov
mov
mov
mov
sub
fistpll
out
je
popf
into
sub
lds
push
xor
mov
lods
xor
mov
loop
stos
repz
sbb
dec
fisttps
repz
jb
shlb
lods
insw
repz
in
ja
imul
xor
lods
lret
xchg
or
sub
xchg
sub
mov
add
pop
popa
popa
les
int3
ljmp
or
loopne
adc
mov
ss
cmp
jecxz
mov
cmp
outsb
inc
in
inc
test
loope
xor
pushf
dec
push
iret
xor
mov
lods
movsl
into
xchg
stos
push
insl
mov
mov
dec
inc
leave
popf
shrb
jg
dec
repz
js
cmp
dec
iret
xchg
jmp
shlb
or
loop
jns
pushf
sub
mov
jge
ret
xlat
mov
lds
adc
call
adc
and
arpl
scas
movsb
hlt
lcall
cmpsb
mov
out
pushf
aad
sub
xor
xchg
dec
cmp
insl
mov
int3
xor
mov
xorl
push
mov
xor
mov
or
sub
add
cmp
inc
arpl
push
mov
xor
dec
adc
cmp
pop
repnz
inc
subb
fisubrs
repz
push
jp
add
rcr
mov
mov
movsl
fwait
push
nop
popa
cltd
sbb
mov
pop
sub
lods
xchg
dec
in
decl
jmp
and
out
das
mov
sbb
and
dec
push
jno
and
or
popf
adc
gs
mov
jecxz
inc
jbe
outsb
push
shlb
outsb
pop
in
popf
sbb
pop
loope
push
cld
xor
pop
out
rorl
add
pop
test
adc
adc
cld
or
stos
das
fstps
cmpl
int
jno
xlat
mov
jle
ret
mov
inc
pop
pop
xchg
mov
rorl
add
fisttps
pop
xchg
int3
packssdw
cwtl
addb
push
mov
out
int
faddl
arpl
out
mov
xchg
mov
pop
lahf
sbb
cmp
setno
repz
jmp
push
hlt
jg
push
aas
xchg
ficoms
in
jmp
and
leave
test
jno
int
push
movsl
hlt
aas
mov
call
pusha
movsl
inc
fildll
enter
or
mov
mov
or
push
sub
push
lods
push
adc
ja
or
out
fmuls
push
mov
aas
push
out
mov
sbb
mov
pop
dec
mov
xchg
daa
repnz
jo
xor
or
push
mov
bound
push
sub
ficompl
pop
mov
aad
sarb
mov
push
pop
sub
outsl
xor
cmp
mov
jbe
or
mov
fld1
rolb
adcl
inc
addr16
das
xchg
adc
fistl
cmpsb
enter
push
leave
testb
adc
mov
adc
add
cmpps
clc
fimull
popf
and
cmp
dec
sti
push
je
jge
cld
xor
ret
jl
dec
push
sbb
and
xor
sbb
push
adc
out
adc
ds
fwait
cltd
sbb
call
lock
jo
jmp
xchg
ret
fsubs
stos
and
stos
loop
in
mov
xchg
or
cwtl
push
push
or
or
push
inc
xchg
pop
sti
mov
das
pop
imul
or
cld
in
insb
push
ret
adc
lret
or
cmpsb
xorl
sub
mov
gs
fcomip
inc
or
test
jle
dec
or
or
out
xchg
test
int3
arpl
outsl
ljmp
sub
das
gs
subl
inc
outsl
pop
cmp
lods
jnp
adc
xchg
sbb
sbb
rorb
sbb
jge
inc
jecxz
or
adc
cwtl
mov
cmpsl
inc
jo
je
dec
loope
mov
imul
inc
call
sub
sub
repz
aaa
in
cmp
pusha
jmp
jle
inc
xor
push
in
mov
mov
dec
xor
pop
idiv
cwtl
push
ss
push
jmp
scas
sbb
out
lcall
nop
push
lods
fldl
add
loop
test
fimull
mov
cmp
call
inc
loopne
shr
mov
cmpl
add
mov
mov
adc
sti
adc
repz
dec
repz
cld
stos
inc
jb
sbb
cmp
lods
or
and
sbb
aaa
or
xchg
cmc
cmp
lcall
mov
pop
pushf
jecxz
lcall
xchg
jb
mov
insl
mov
cli
xor
xchg
mov
fists
pop
cltd
sbb
push
xchg
mov
dec
inc
lds
pop
in
add
cli
fistpll
loopne
enter
inc
pop
insb
jge
mov
in
insb
dec
sub
push
jl
jae
test
dec
jle
fwait
sbb
sbb
clc
mov
xchg
lret
ficoms
repz
jnp
outsb
add
sti
repz
dec
push
push
add
shlb
push
shrl
mov
cmp
negl
mov
mov
scas
hlt
outsb
jmp
jmp
lods
andl
das
loop
cld
pop
and
std
lds
leave
add
mov
pushf
icebp
jge
sub
fwait
push
fadd
idiv
pop
add
lahf
shll
lea
clc
jg
shll
cmp
push
movsb
les
add
or
ja
adc
rorb
movsb
push
cli
cmp
mov
inc
mov
aaa
imul
xchg
xchg
jmp
inc
sub
popa
sub
test
ljmp
dec
ljmp
push
or
inc
ja
std
lea
push
sub
add
shl
mov
push
arpl
lret
jl
dec
sbb
push
dec
add
stos
imulb
mov
rolb
adc
push
enter
inc
test
dec
xchg
add
dec
or
stos
in
fimuls
and
outsb
scas
push
sub
imul
jno
add
mov
adc
shrb
lcall
push
shrl
fisubl
xchg
js
jecxz
sub
fisubrs
jns
and
inc
cmp
mov
jge
push
mov
mov
mov
xor
dec
enter
cmpsl
insl
add
add
inc
mov
or
dec
pop
cmp
adc
sarb
xchg
dec
jecxz
jge
lods
daa
popf
stc
and
and
mov
sub
int
pop
pop
mov
or
maxps
clc
jle
rcrl
mov
cmp
stos
ss
add
movsb
mov
scas
int3
mov
mov
pmaxsw
mov
stos
lret
pushf
mov
movsl
test
incl
sbb
movsb
mov
push
mov
sbb
jbe
test
sub
iret
ret
fwait
and
add
popf
mov
mov
dec
or
or
les
push
aaa
sub
add
ss
movsl
jns
negl
xchg
mov
fbstp
mov
pop
cltd
cmpsb
mov
jae
add
fisttpl
call
jge
adc
and
cld
push
inc
xchg
or
inc
loop
lods
sti
inc
fisttpll
mov
jb
mov
adc
xchg
pop
int3
arpl
push
sbb
or
cmp
out
dec
das
add
push
mov
cltd
bound
jl
sbb
outsl
fs
pop
jl
aam
add
adc
push
sub
fwait
cmp
lret
xor
xlat
xchg
out
jecxz
jnp
cmp
sti
push
push
and
outsb
ja
add
into
fwait
mov
iret
inc
jge
pop
jmp
data16
imul
add
je
sbb
popa
hlt
fmull
xor
iret
aam
stc
mov
xchg
dec
and
and
pushf
daa
popf
in
cs
aam
into
ljmp
cmpsl
adc
sub
sub
xchg
cwtl
sbb
fwait
mov
pop
pusha
aad
pop
cmp
add
jle
test
aam
sub
mov
pushf
out
mov
fsubl
push
push
das
call
mov
shrb
stos
push
aam
std
fldt
cli
sahf
push
out
loope
sahf
sbb
mov
inc
mov
scas
lods
or
cmp
add
xchg
je
mov
nop
pushf
pop
movsl
push
std
add
loopne
in
scas
pop
stos
inc
js
push
mov
inc
bound
scas
mov
add
aad
and
int3
lds
xor
in
add
cmp
adc
inc
xchg
xor
lcall
mov
mov
push
dec
aam
ror
rorb
jecxz
dec
aas
ja
clc
sbb
mov
in
mov
xorl
roll
mov
iret
inc
ret
and
fisttpll
aam
push
rclb
add
and
loopne
clc
xchg
mov
scas
inc
xchg
push
or
loop
mov
fucom
clc
jb
int3
iret
xor
mov
stc
sub
push
push
js
xchg
das
nop
mov
dec
movsb
popf
std
scas
int
add
insb
outsl
mov
dec
xchg
rcrl
mov
and
pop
ret
inc
jg
jae
ja
inc
clc
mov
jb
fwait
cmp
add
test
xchg
sbb
xchg
bound
mov
test
mov
scas
jno
mov
mov
shl
push
ret
inc
popf
stos
mov
sbb
sub
mov
rorl
cmp
shll
and
push
push
mov
imul
repz
sub
cmp
pop
mov
mov
jns
mov
or
jl
aaa
mov
mov
dec
lret
add
mov
imul
test
pop
inc
adc
jb
and
jg
data16
xchg
out
fstpt
movsb
lods
push
decl
pop
adc
ljmp
aam
ret
movsl
dec
cmp
out
xorb
addb
lods
push
decb
pop
jns
jecxz
ja
insl
sub
int3
jmp
or
cwtl
loopne
xor
xor
jno
add
mov
ja
mov
push
add
adc
add
jp
das
imul
cmp
mov
push
dec
add
lods
loope
repz
mov
mov
inc
cmp
mov
cwtl
inc
mov
jmp
sub
std
cwtl
in
sub
xlat
jne
jle
and
mov
xor
and
dec
and
xchg
jge
lods
je
adc
mov
cli
pop
fisubrs
andl
in
adc
mov
call
and
xchg
in
xchg
xchg
jge
jno
inc
mov
outsl
in
jg
into
in
jmp
jge
mov
sarb
fildl
pop
call
cmp
enter
xor
cwtl
fmulp
sub
call
cmp
iret
es
mov
sti
mov
inc
push
dec
mov
les
roll
cmc
jecxz
imul
add
cmpl
dec
fdivrs
xor
adc
inc
sbb
adc
lahf
pop
arpl
scas
pop
sbb
cmpb
and
sarb
ja
push
aas
cmpsl
std
daa
in
sub
adc
scas
push
sahf
ljmp
adc
lock
mov
lret
or
adc
aam
movb
call
dec
stos
jg
imul
data16
in
sbb
mov
out
lret
mov
and
sbb
xchg
add
roll
js
dec
pop
cltd
dec
inc
mov
sbbl
int
or
pusha
cltd
sub
mov
jbe
sub
push
sub
sbb
or
or
adcl
jmp
les
leave
mov
andb
inc
daa
lea
cmp
sub
icebp
mov
push
loopne
jecxz
mov
negb
or
fsts
lds
mov
enter
loopne
outsl
xor
sub
into
mov
dec
sub
gs
pushf
lods
add
incl
cmpsl
popf
add
xor
jnp
xchg
sub
xlat
mov
push
mov
sbb
orl
in
jmp
sub
iret
mov
lret
adc
xchg
xor
aad
mov
testb
fstpt
daa
xor
lods
call
shrb
and
dec
stc
sbb
nop
cli
dec
mov
add
leave
push
loop
imul
sub
jle
out
fidivl
inc
pop
in
mov
in
cs
hlt
or
sub
rorb
push
mov
sarl
or
daa
add
lds
and
enter
fwait
jmp
xor
push
jns
popf
dec
insb
xor
jno
call
jae
test
mov
sub
insl
daa
fisubrs
pop
xor
in
shll
inc
or
shrb
push
icebp
mov
jo
xchg
adc
out
aas
pusha
inc
mov
repz
in
fwait
cwtl
push
cmc
inc
cmp
js
inc
adc
cmpsl
test
jno
idivb
icebp
sub
xor
xor
or
pusha
outsb
or
es
outsb
addr16
fsubrl
pop
fcomps
shl
cwtl
in
test
mov
mov
out
lods
push
loop
sahf
test
mov
scas
aas
ret
push
test
stc
xchg
mov
jae
out
push
lock
pop
jmp
ds
fisubrl
mov
cltd
cmp
jmp
adc
outsl
orb
mov
jecxz
rolb
inc
lea
add
mov
sbb
mov
sub
mov
push
inc
dec
cmp
leave
scas
movsb
mov
ficomps
mov
jns
inc
or
cmp
dec
outsl
push
jp
sbb
psraw
cmc
pop
mov
jnp
sahf
mov
push
int
stos
jne
adc
insl
xchg
cld
xchg
loope
inc
xor
inc
cld
pop
cmpsb
xchg
inc
loope
mov
pop
loop
lods
push
repnz
push
jecxz
jge
adcb
xchg
pop
pop
jo
adc
jl
mov
dec
and
sub
pop
daa
lods
loope
sub
xchg
dec
daa
adc
sbb
or
repz
pop
xchg
mov
inc
xchg
ss
mov
idivb
xor
pop
fisubs
mov
xor
addr16
add
jbe
dec
lret
mov
push
in
inc
pop
jae
adc
and
out
mov
sub
movsl
roll
sbb
push
xchg
xchg
arpl
or
lods
ret
and
sahf
mov
and
shrl
inc
fnstcw
iret
ja
jmp
adc
fcmovnu
adc
xchg
xchg
cmp
cmove
add
cltd
add
bound
dec
mov
sbb
xchg
add
into
xor
lock
dec
mov
mov
cmpl
call
jle
mov
out
mov
jp
adc
push
push
std
bound
xchg
jns
adc
test
add
daa
sub
rcl
hlt
js
icebp
imull
xchg
cli
jge
xor
mov
daa
adc
fst
mov
test
es
xor
fidivl
mov
fldenv
roll
lret
mov
orb
jns
or
into
jb
mov
arpl
jge
xorl
adc
jnp
xchg
push
rclb
cmpsl
leave
add
mov
aad
mov
xchg
mov
xchg
cmp
repnz
std
out
js
sbb
add
and
fiadds
pop
dec
push
out
sbb
out
push
mov
cli
sbb
mov
call
lods
repnz
test
icebp
sbb
add
jp
or
pop
inc
xchg
adc
jge
push
mov
add
imul
xor
jle
dec
sarl
dec
mov
loopne
pop
jecxz
aam
mov
mov
mov
sbb
pop
push
sbb
sbb
rcll
push
fisttpl
sahf
mov
les
mov
push
add
sub
fwait
inc
stc
mov
inc
movsl
mov
sbb
and
push
push
sub
jg
into
outsb
jge
arpl
mov
repnz
or
cwtl
out
test
aam
xor
jecxz
stos
aaa
xchg
xor
pushf
mov
cmpsb
fucomp
sarl
adc
lcall
inc
sub
bound
sbb
addr16
dec
dec
or
sti
mov
insb
or
rcll
and
xchg
add
lret
sub
or
add
pop
sub
or
mov
and
inc
jmp
inc
fimuls
outsl
pop
cld
mov
sarb
sub
aaa
jno
jmp
adc
push
ret
pusha
push
or
xchg
aam
fprem1
mov
test
sar
xor
in
or
out
or
push
sbb
sub
adc
adc
sbb
stc
bsr
flds
push
sbb
add
nop
sbb
xor
mov
sub
and
test
xor
hlt
pushf
sbb
outsl
lahf
mov
fwait
pop
pop
lret
stos
xor
ds
mov
movsb
lcall
stos
sub
lcall
xor
sahf
dec
mov
dec
dec
xchg
inc
loope
outsb
add
inc
iret
cmpsb
fisttps
add
imul
adc
add
popa
inc
sub
sub
sbb
scas
adc
jbe
shll
mov
test
and
cwtl
xchg
dec
cmp
mov
popf
dec
loopne
xor
jp
decb
pop
sbb
push
mov
lods
stos
push
and
jle
loop
and
int3
pop
sbb
out
ret
lock
push
ret
jns
rcrb
cwtl
or
data16
fs
push
push
es
push
or
aad
cmc
ret
test
cwtl
jae
cmpsb
dec
or
mov
sti
sarl
stos
sub
out
jbe
jae
xchg
aaa
dec
cmp
pop
add
mov
xor
jae
pop
mov
pushf
pop
mov
mov
or
pop
arpl
imul
xor
dec
sar
ret
cmp
icebp
test
lret
mov
mov
pop
loope
add
xor
pop
adc
xor
mov
cmp
mov
inc
mov
dec
pop
lea
inc
mov
fbld
rcrl
lock
je
lods
add
or
jo
jno
mov
lret
mov
adc
add
mov
out
adc
jge
inc
mov
push
cmpsb
jp
or
mov
add
or
push
insb
add
pop
in
mov
das
jmp
jbe
jns
sbbl
adc
mov
out
jne
push
jnp
movsb
lret
lods
add
addr16
stos
rorl
mov
fwait
loope
pushf
dec
mov
xchg
xchg
pushf
or
out
mov
adc
and
adc
lret
mov
not
into
outsb
les
std
jmp
and
call
fsub
mov
or
sub
sbb
dec
fdivrp
dec
and
outsb
lcall
sbb
mov
call
pop
jecxz
jo
jb
iret
jae
adc
mov
sub
lock
fwait
xchg
push
sub
fldl
mov
xchg
xlat
fsubrl
mov
fcmovbe
enter
sub
push
or
ret
repz
xor
sbb
outsl
inc
sub
test
inc
fmull
pop
pushf
add
xchg
outsb
std
movsl
ja
cmp
inc
cmpsl
mov
xchg
mov
dec
push
in
cld
lds
push
jle
nop
int3
adc
sbb
mov
test
in
test
inc
and
or
pop
xor
cmpb
cwtl
mov
cmp
mov
pop
sub
xor
pop
ret
sarl
iret
ret
add
jg
ret
jmp
sti
pop
xor
add
push
rolb
sub
cmp
xor
push
jle
dec
cmpsb
stos
sbb
cmp
push
pminub
ja
jl
out
fistps
pop
lcall
sahf
push
add
push
ljmp
sbb
adc
xchg
shr
adc
xor
lods
push
fstpl
xchg
ss
push
out
in
scas
xlat
push
test
lods
test
scas
cmpsl
adc
arpl
sub
adc
lret
push
pop
hlt
ja
cmp
sub
ljmp
adc
xchg
add
iret
push
lds
out
push
fldt
xor
dec
pop
jle
test
cltd
adc
dec
xchg
and
call
aam
mov
add
sti
xchg
adc
cmc
pop
aam
lods
js
pushf
and
daa
rcr
cmpsb
jbe
cmp
into
mov
rcll
ret
int
push
fs
inc
push
jp
or
in
push
xchg
mov
cmp
test
xchg
xchg
sbb
jg
fdivr
lahf
inc
imul
popa
and
pusha
inc
jns
enter
cmpsb
dec
rorl
stc
popa
sbb
lret
push
loopne
sbb
pop
test
in
dec
shll
pop
je
mov
adc
fst
pop
shlb
push
cmp
pop
aas
fidivrs
ficoms
bnd
and
dec
dec
icebp
push
mov
inc
stos
stc
lods
cmpb
fmul
and
mov
xchg
pop
dec
int3
pop
cmpl
and
push
lret
sub
cmp
lahf
xor
ret
andl
std
pop
xor
push
lcall
lcall
fstpl
jmp
pop
cmpsl
stos
mov
mov
pop
fdivs
mov
mov
xchg
mov
fdivrp
add
lahf
fcmovu
push
push
cmp
pop
pop
sbb
ss
test
and
sti
lret
push
sbbl
popl
movsl
in
repnz
mov
addr16
out
sahf
mov
mov
subl
mov
pop
cmpsb
fmull
lock
push
pop
lcall
jnp
outsl
pop
out
jge
sarl
jmp
jbe
fsubrl
imul
mov
clc
pop
imul
std
adc
shr
jecxz
jb
cmp
xchg
sub
in
or
out
lods
ret
into
cwtl
out
dec
jae
add
mov
and
pop
call
cmp
data16
push
lret
pop
and
jne
jecxz
jo
test
lods
or
notb
ret
mov
cli
shr
jle
xchg
push
arpl
stc
lret
jmp
or
sahf
mov
dec
lods
mov
ja
push
cwtl
inc
push
cmpb
test
push
mov
arpl
jge
data16
fdivl
xchg
js
cmp
subl
test
out
frstor
jecxz
sbb
xor
ja
imul
pop
sbb
cmp
pusha
mov
inc
and
inc
jo
adc
jnp
repz
mov
sub
mov
into
pop
jno
sbb
out
push
pop
ficoml
pop
sbb
push
push
leave
lea
aam
push
sbb
test
jecxz
jns
mov
scas
jmp
pop
nop
pusha
push
jge
mov
push
dec
addr16
dec
mov
sub
inc
add
jo
xchg
lret
adc
dec
sahf
sub
mov
mov
adc
test
pusha
jo
mov
fimull
call
push
fwait
roll
inc
lret
mov
je
mov
fidivs
mov
pusha
js
loopne
pop
insl
or
add
gs
fwait
cmc
movsl
bound
pop
movsl
loopne
std
add
inc
mov
fmuls
hlt
pop
test
fdivl
enter
xchg
mov
shrb
xchg
ret
xor
cmp
mov
or
and
sbb
scas
subl
adc
push
iret
and
dec
movsl
outsl
add
pop
sbb
fwait
xor
mov
andl
dec
nop
loopne
pop
sbb
je
enter
pop
inc
mov
arpl
cs
sbb
or
pop
add
and
jns
adc
push
push
mov
cltd
mov
xchg
pusha
in
je
fs
jno
xor
add
cmp
test
aam
orl
adc
and
and
xchg
sub
cmp
sbb
mov
sbb
fidivrs
cmp
lods
dec
leave
iret
jno
enter
jo
sbb
xchg
shll
mov
aas
lret
test
cli
push
jmp
int
add
testb
addb
and
divb
dec
add
cmp
push
icebp
inc
add
adc
xor
inc
lret
sub
je
sub
insb
mov
jecxz
mov
ss
in
push
stos
mov
rorb
inc
lds
sbb
insl
scas
mov
lods
pop
pop
mov
sti
or
mov
fdivrl
pop
mov
push
pop
movsb
das
push
inc
mov
xchg
mov
lea
sub
mov
or
jbe
xor
es
sub
in
ret
mov
int3
mov
mov
stc
jns,pt
dec
push
and
add
fstl
mov
cltd
imul
pop
imul
jb
mov
push
mov
adc
jge
inc
daa
pop
or
repz
and
adc
dec
cmc
nop
icebp
pushf
xlat
insb
ja
dec
sbb
pop
hlt
call
push
scas
dec
call
mov
int3
ret
mov
imul
cmp
ret
xor
rcll
aad
and
and
inc
dec
cmp
pop
mov
mov
shrl
in
add
jge
sbb
ss
mov
scas
lret
cmc
mov
in
sti
jl
jno
loopne
sbb
icebp
cld
pop
fmuls
ljmp
or
int
adc
aad
adc
push
scas
rcll
cs
lods
mov
dec
or
inc
andl
ljmp
cmp
push
std
lods
dec
add
sbb
adcb
push
adc
push
xor
inc
cmp
arpl
stos
ja
shl
push
repz
mov
ficoms
jg
popf
out
cmp
outsl
xorb
fcompl
jmp
dec
pop
xchg
mov
jp
jo
and
outsl
xchg
xchg
loope
push
enter
les
xchg
adc
rcl
cmp
push
push
repnz
andb
jb
cmp
mov
loopnew
push
cmpb
cmc
jo,pt
xchg
imul
xchg
xor
pop
imulb
mov
sbb
repz
shll
test
sub
sub
push
sub
mov
mov
clc
mov
jno
sbb
xchg
mov
std
fsubrs
push
loopne
cld
xchg
call
daa
icebp
jbe
xchg
mov
cmc
add
mov
dec
xor
nopl
jb
push
xlat
daa
xchg
rcrb
push
xchg
dec
je
mov
xchg
call
dec
xchg
add
fwait
popl
pop
test
xchg
and
sub
or
jle
fidivrl
scas
sbb
add
inc
sbb
sub
pop
mov
cmp
inc
fucom
scas
mov
pusha
mov
repnz
push
xchg
pop
adc
sbb
lahf
test
inc
push
add
mov
imul
ret
inc
mov
mov
popa
icebp
into
cmp
idivb
test
add
mov
mov
sub
add
lea
outsb
sub
cmp
push
loopne
lret
sub
xor
xor
dec
shl
push
shll
aaa
fucomp
xchg
fimull
aas
xor
idivl
popa
lret
jbe
jecxz
dec
sub
imul
andb
pop
inc
mov
jmp
lods
shll
pop
adc
pop
imul
popa
xor
add
insb
jno
xor
inc
pop
fstpl
shrl
pop
xor
mov
jnp
fsubl
aaa
adc
xchg
lds
cmp
xchg
cmpsb
mov
mov
testb
and
sbb
ret
jo
popw
push
jnp
mov
mov
cmpsl
sti
pushf
mov
ret
cli
xor
fildll
out
std
jle
mov
sub
dec
dec
or
xor
leave
inc
sbb
in
shrb
inc
mov
jle
iret
xor
mov
push
ds
sti
mov
inc
xor
mov
in
mov
sbb
les
repz
mov
cmp
pop
out
or
mov
hlt
jp
jbe
outsl
adc
aaa
repnz
and
outsb
pop
jmp
dec
addr16
arpl
mov
ret
popf
bound
cld
repz
pop
pop
ljmp
mov
and
mov
pushf
movsb
push
ret
lahf
shll
out
jg
insl
in
mov
fdecstp
repz
into
cmpsb
mov
mov
ja
add
push
adc
sub
and
mov
decl
inc
pusha
stc
mov
lods
adc
xchg
jmp
loop
mov
ds
sahf
out
and
jmp
pop
mov
out
xchg
adc
xorl
jo
clc
mov
mov
pop
jecxz
shl
xchg
ja
jo
ds
push
jb
adc
add
test
sbb
or
xor
mov
out
lret
clc
and
xorb
mov
insb
pop
xchg
lcall
push
mov
mov
jmp
in
lds
adc
mov
scas
dec
adc
ficoml
mov
dec
adc
mov
daa
jae
xor
ja
shlb
ja
icebp
pop
sub
movsb
fmul
popa
not
movsb
dec
in
or
aam
fsubrl
in
cmp
sti
fndisi(8087
add
fstl
jne
mov
push
pop
pushf
xchg
js
aam
push
push
or
jp
cs
pop
in
loopne
pop
lock
add
pop
jp
imull
pop
push
xchg
mov
jle
cmpsl
mov
push
adc
sbb
push
ja
cwtl
jg
xchg
icebp
xchg
aas
iret
add
es
inc
mov
mov
aam
dec
movb
mov
and
loope
or
pop
fidivrl
xchg
aas
movl
dec
stos
lret
ss
popf
and
add
or
je
test
add
int3
jl
mov
addr16
outsb
addr16
lret
insb
dec
push
xor
insl
sub
jne
cmp
add
adc
xchg
adcl
xchg
sarl
pushf
push
push
movsl
sbb
add
mov
pop
popa
push
jnp
adc
push
outsb
repz
push
gs
jbe
imul
push
fsubrl
sub
add
shll
cltd
in
fistpll
ja
subps
jle
mov
pop
cmc
pop
in
out
dec
cmpsb
add
push
jbe
or
in
mov
push
or
cmp
inc
sub
and
cld
sbb
lods
push
cmc
ficompl
jne
adc
mov
lods
mov
xor
xchg
mov
into
sahf
cmpsb
dec
mov
mov
in
xchg
mov
loope
nop
orl
mov
aam
rolb
mov
xchg
and
jp
fstpt
pushl
loop
filds
dec
inc
sub
popf
ljmp
dec
cld
push
push
jns
fsubrs
in
cltd
sarb
in
lret
mov
jmp
cmp
ficomps
xchg
jnp
scas
xchg
jg
lahf
movl
call
jno
fsubrs
push
test
add
sti
rolb
jne
cli
inc
jl
add
andl
push
repnz
fistpl
xor
cwtl
orl
or
xchg
mov
jae
clc
cmp
push
cmpsb
dec
xchg
lret
mov
jbe
dec
xchg
xor
or
jnp
pop
jb
pop
imulb
jmp
rorl
jp
pause
addr16
fs
or
das
push
or
jl
ja
mov
mov
cld
adc
mov
jb
push
pmulhuw
cmpsl
add
pushf
lds
jmp
iret
mov
int3
dec
call
es
sbb
mov
xchg
jae
xchg
cwtl
or
rolb
fmuls
adc
cmp
add
aad
fsub
movsl
imulb
xor
inc
nop
jae
add
mov
out
xchg
scas
les
shrl
cld
jbe
les
jl
mov
jp
mov
jmp
push
shl
call
xchg
cwtl
mov
pop
shll
xchg
cmp
mov
or
test
dec
addr16
fcomp
push
pop
cmpsb
xor
pop
outsl
fs
lcall
addr16
cmc
imul
mov
mov
mov
outsb
mov
ret
shrl
mov
and
sbb
cmp
xchg
mov
jge
push
dec
mov
das
jno
push
mov
test
out
mov
divl
pop
push
add
loop
out
nop
push
xor
push
fcomps
fisttps
xorb
sbb
iret
and
sbbl
outsb
pop
ja
mov
rolb
stc
jne
inc
out
lock
fwait
movsb
inc
pop
pop
xor
cmpsl
pop
mov
scas
nop
push
pop
das
inc
dec
movsb
pop
dec
lcall
inc
jnp
jns
sti
pop
push
sbb
ja
pop
andb
add
nop
add
imul
orb
sub
adc
loop
popa
shlb
and
scas
add
andb
test
mov
imul
inc
jbe
jno
or
sbb
call
adcl
shlb
xchg
decb
jl
pop
and
arpl
mov
jb
fistpll
test
push
push
insb
int
into
add
shl
nop
xor
imulb
xchg
les
or
rorb
xor
mov
out
dec
pop
mov
sub
ret
or
sub
mov
or
jmp
les
xorl
rclb
xchg
push
xchg
xchg
loop
mov
and
dec
popa
mov
icebp
repnz
test
and
mul
pop
aam
cwtl
out
pop
out
mov
popf
mov
icebp
push
arpl
lock
fdivrl
xor
shrb
xor
jb
iret
nop
cltd
mov
cmp
add
hlt
cmpsb
cld
data16
mov
fisttpll
push
lock
sub
pop
or
pop
xchg
sar
aaa
sbb
xor
movsl
sbb
pusha
lret
pop
stos
test
pop
or
ljmp
jae
push
loopne
jb
inc
push
xchg
lock
leave
stos
dec
sar
rcl
pop
das
dec
nop
jae
cmp
inc
loop
pusha
push
inc
pandn
int3
icebp
jns
jnp
incb
mulb
aas
test
inc
hlt
imul
lods
cmpsb
mov
popa
ds
in
insb
cwtl
addr16
loope
lock
mov
mov
add
or
in
and
clc
push
in
in
addb
loop
xchg
inc
inc
cmp
jg
stos
lods
inc
fwait
hlt
out
mov
jne
sub
sti
insl
xchg
xor
sarb
movsl
dec
outsb
xchg
mov
adc
jno
mov
in
pop
aaa
sti
mov
mov
xor
out
push
leave
push
dec
fisubrs
lock
cmp
les
mov
dec
les
in
loop
jns
sub
cwtl
mov
push
pop
jge
jp
aam
add
les
sub
xrelease
insb
and
jp
sub
add
or
in
mov
cld
push
pop
aad
xchg
add
test
fs
or
pop
xor
sbb
cmp
cltd
aam
or
push
call
mov
testl
pop
addr16
inc
xor
es
pop
cmp
cmp
mov
test
popf
rclb
incb
add
inc
sbb
movsb
sub
dec
icebp
xchg
jg
out
mov
test
in
mov
pop
jae
pushf
adcl
xchg
fwait
push
scas
dec
jecxz
pop
ret
cmp
sub
adc
jl
push
loop
jle
xchg
std
mov
ja
mov
leave
inc
xor
in
ficompl
lret
inc
cmp
jmp
xor
mov
cmp
fistpl
ss
and
jo
outsl
mov
sbb
dec
push
loop
push
pushf
add
sbb
dec
in
push
into
xchg
outsb
out
scas
jb
adc
and
mov
jb
ret
test
ret
pop
cltd
or
lods
mov
mov
test
jb
sti
shl
mov
popa
pop
addl
push
mov
fldt
pushl
popf
pusha
and
loop
fs
lahf
xor
fs
mov
push
jae
fstpt
in
dec
xor
and
xor
xchg
push
pop
jae
lods
fcomps
les
loop
sbb
cld
cmc
filds
jge
mov
int
cmc
inc
mov
mov
sbb
mov
adc
dec
adc
pop
mov
nop
add
lods
jb
in
lea
stos
jle
sub
popa
pop
flds
pop
popf
cmpb
mov
andb
cs
and
xchg
cmp
or
aaa
push
adc
lds
jnp
lahf
scas
pop
cmp
clc
sbb
sub
ja
int
xchg
fcomps
xchg
test
pop
je
daa
pop
mov
add
xchg
mov
lock
and
dec
jmp
bound
cmpsb
cmc
xor
add
cmp
into
movq
ss
mov
sbb
js
xchg
shl
mov
jmp
jge
pusha
mov
xor
push
stos
shll
push
addr16
addr16
inc
mov
test
xchg
mov
sarb
scas
negb
rcll
cmp
or
pop
lahf
adc
lcall
mov
imul
orl
and
cmp
mov
repz
jmp
xchg
rcl
jne
jecxz
lret
lea
lea
call
push
ss
xchg
cld
fcoml
sbb
test
and
jp
mov
movsl
cs
mov
mov
in
jmp
leave
test
xchg
dec
je
movb
mov
mov
jns
pop
jp
mov
pop
insb
pop
aad
add
jp
pop
scas
inc
sbb
inc
in
xchg
inc
add
dec
push
les
imul
pusha
inc
push
jp
addr16
icebp
push
push
in
lret
cld
ret
stos
ret
dec
mov
aaa
pop
push
and
mov
cli
cltd
jo
sub
mov
and
out
mov
divl
cld
movsl
jo
xchg
xchg
movsb
out
shlb
addr16
fidivrs
outsb
cmc
int
sub
sti
pop
sbb
dec
jg
xor
jmp
adc
jne
notl
stc
push
jp
add
push
mov
jl
sub
addl
jge
mov
xor
out
jbe
sbb
mov
fwait
mov
pop
sahf
out
cmpsl
fmuls
loopne
rcrb
jp
adc
sarl
cmp
inc
loope
test
jno
jb
jmp
cmp
mov
inc
add
pop
outsl
ret
sbb
xchg
xchg
jno
mov
mov
clc
enter
jae
xlat
pusha
imul
insb
sub
push
test
sub
push
mov
jno
dec
sub
add
mov
xor
mov
fldl
sub
sahf
sbb
scas
and
push
cmc
inc
leave
enter
dec
sbb
stos
in
test
test
ret
shlb
loopne
push
aad
popa
adc
cmpsl
insb
sbb
xchg
push
jb
sahf
loopne
rcrb
cmp
scas
xor
and
mov
cmp
mov
jp
mov
pop
cmc
xor
int
inc
addl
imul
loope
popf
xor
xchg
test
loope
je
pop
stc
lods
imul
mov
pushf
setp
pop
or
jbe
xor
cmp
and
stos
jne
scas
arpl
add
lret
mov
repnz
and
stos
pop
xor
roll
popf
sbb
daa
sub
add
aas
jmp
and
mov
pop
daa
dec
loop
dec
mov
out
ret
xor
cmp
inc
aad
mov
pop
ljmp
cld
jl
add
mov
enter
sbb
addr16
sub
lcall
fsubr
mov
mov
enter
testl
or
aam
cmpsl
lods
ja
dec
cmp
fisubl
adc
outsl
pop
dec
sbb
nop
push
pop
in
jge
mov
pushf
lcall
inc
push
mov
out
outsl
cltd
adc
in
mov
add
stos
sbb
or
cmp
in
push
mov
push
mov
test
or
loope
push
mov
mov
fmul
stc
dec
cmp
test
push
adc
adc
cld
pop
mov
jp
push
dec
insb
and
adc
inc
adc
cld
jmp
out
movsb
mov
fadds
aad
pushf
shr
lods
and
clc
enter
xchg
in
jg
push
clc
cmpsl
repnz
out
push
jns
out
pushf
mov
jecxz
les
mov
adc
aaa
jnp
sub
sub
push
out
pusha
lcall
inc
std
jns
clc
mov
dec
shrb
lods
and
je
sti
test
mov
fcoml
cmp
adc
imul
sbb
aaa
and
outsb
mov
fucom
sbb
test
idiv
aas
xor
daa
sahf
add
mov
fmuls
rorb
xorl
iret
sarb
enter
psubusb
xchg
sti
std
add
dec
ficompl
xor
or
inc
add
jecxz
and
lods
lds
or
mov
pop
in
lahf
push
ret
push
repnz
mov
inc
loop
xchg
inc
js
adc
xor
out
jge
stos
icebp
int3
inc
jmp
aad
repz
sub
xchg
sahf
push
lods
adcb
cmpsb
ds
sahf
repz
mov
xlat
lds
lret
enter
repz
dec
aas
add
mov
sub
jnp
pop
das
push
shlb
jns
mov
aas
ja
test
or
loop
push
ss
or
inc
or
pop
in
mov
jbe
pushf
push
int3
call
and
adc
sbb
stc
testb
idiv
or
movsb
push
adc
cmp
sub
push
inc
ss
mov
mov
cmp
outsb
jg
mov
sar
loope
fisttpl
add
jno
test
pop
xchg
mov
arpl
add
or
mov
sub
adcb
add
mov
divb
in
add
aas
idivl
dec
pop
add
dec
inc
js
fs
mov
jp
hlt
stos
push
in
push
popf
or
inc
or
addr16
out
out
xchg
mov
cmc
lds
dec
pop
and
inc
push
xchg
sub
idivb
adcb
leave
cmc
call
inc
lret
gs
fwait
dec
out
inc
dec
aaa
dec
cmp
loop
and
int
push
dec
adc
lods
lods
adc
sub
add
dec
push
sbb
in
mov
push
sti
mov
adc
sbb
mov
loope
and
shll
in
mov
outsl
lahf
lds
sub
sub
in
sbb
mov
pop
mov
pop
cmpsb
iret
dec
jns
dec
push
movsb
loop
jmp
dec
aam
inc
divb
cmpsl
push
pxor
adc
rcrb
dec
xchg
cltd
mov
xlat
pop
aad
pop
sti
test
fwait
pushf
jmp
jns,pt
call
or
loope
xchg
inc
cmp
xchg
cmp
out
daa
rol
into
out
or
or
repz
aas
int
push
sub
stc
or
mov
sbb
xor
dec
mov
mov
addl
mov
stos
mov
iret
xor
into
pop
das
iret
jae
in
pop
and
sub
scas
loop
enter
aam
cmp
out
pop
and
bound
fmuls
in
push
push
jle
rcll
pop
adc
pop
daa
ja
sbb
movsb
mov
xor
and
mov
test
sub
ror
jge
test
mov
push
ss
mov
stc
xlat
pop
cmp
or
and
pop
xchg
inc
xor
mull
aad
mov
ret
cmc
xor
xor
daa
mov
das
xchg
pop
in
clc
jno
xchg
jmp
or
sub
mov
push
lds
push
cmpsb
ss
test
push
mov
rcrb
shr
jo
mov
or
mov
stos
dec
mov
inc
orb
xor
mov
jo
sub
add
and
and
rcr
in
push
ljmp
mov
xchg
lahf
and
push
loopne
fsubrs
cmp
filds
add
jne
add
cmc
push
fisubrl
in
mov
cld
mov
inc
inc
pop
dec
xor
ljmp
imul
xor
jle
mov
dec
inc
mov
test
fnstsw
push
mov
xchg
rcrl
out
sti
in
mov
mov
xlat
add
out
arpl
shrl
cmp
dec
ficomps
stos
xor
xchg
add
inc
jle
add
adc
mov
ficomps
mov
popf
dec
and
in
push
xor
add
sahf
cmp
dec
out
fwait
push
idivb
fimull
test
out
dec
xchg
lahf
leave
pop
int3
addr16
mov
cmpsl
mov
push
dec
shll
orb
flds
xchg
adc
int
mov
pusha
out
dec
cmpsb
adc
shll
jl
and
pop
js
adc
jmp
lods
push
aad
or
dec
cwtl
mov
push
sub
cmp
xlat
push
sub
mov
pop
xchg
mov
dec
lods
adc
dec
clc
rorl
mov
jb
add
das
xor
xchg
push
imul
mov
mov
mov
mov
jle
jns
sbb
in
jbe
aad
dec
add
fs
jnp
dec
cmpsl
loope
pop
sti
xor
cmp
add
xchg
insl
pop
ja
repnz
sbb
lahf
pop
lock
inc
sbb
les
cmp
xchg
xchg
dec
push
cmp
inc
mov
dec
push
lea
fcomps
cmpsb
jnp
inc
dec
push
frstor
push
mov
enter
cmp
lret
in
sbb
mov
clc
lret
xchg
push
sbb
pusha
and
pop
mov
pop
mov
xchg
adc
dec
sub
sbb
pop
out
push
out
pop
sbb
cmp
daa
gs
inc
sub
mov
push
cmp
call
iret
cld
mov
jl
fcmovu
iret
inc
pusha
outsb
imul
scas
movsb
or
andb
rcr
push
sbb
sub
in
push
or
jb
cmpsl
test
out
pop
sub
jmp
jb
stos
inc
adc
out
movsl
adc
gs
jg
fldl
sbb
sub
adc
das
cwtl
popf
xchg
xlat
test
mov
outsb
outsb
xor
insl
xor
dec
cld
cmp
outsl
test
xchg
add
fimuls
nop
sar
add
roll
or
jl
stos
jl
jbe
mov
add
sbb
scas
adc
mov
loop
adc
std
mov
cmp
adc
jl
mov
in
mov
aam
sbb
out
jle
in
popf
fisttps
jecxz
or
add
test
pop
stos
mov
add
call
mov
jb
mov
mov
mov
pop
lahf
shll
lret
sbb
xchg
or
mov
std
add
shlb
cmp
xor
push
mov
mov
add
out
cltd
xchg
ret
in
sbb
add
fs
inc
push
stos
and
inc
pop
inc
jmp
in
and
shl
jnp
mov
lahf
adc
xlat
xchg
or
ja
pusha
lods
mov
cmpsb
subl
js
es
jns
mov
dec
in
inc
push
fildl
mov
pop
leave
int3
fnstsw
dec
movsl
pop
push
xchg
nop
out
inc
inc
lret
adc
jnp
sub
lahf
fwait
xchg
xor
pop
rorl
adc
xor
addl
icebp
dec
jge
fwait
push
sahf
jno
test
cltd
pop
shrb
lds
ret
jle
add
shr
lods
push
adc
add
nop
push
lret
xchg
mov
sbb
out
jle
fwait
mov
les
mov
ret
popa
sub
test
ret
in
iret
cmpsl
push
movsb
xchg
mov
clc
adc
pop
lock
adc
js
rcl
inc
leave
gs
and
in
into
cwtl
sub
mov
mov
imul
sub
fstps
lods
sbbl
lods
in
lcall
xor
mov
pop
sahf
popf
cs
xchg
call
ret
lock
scas
pusha
cmpb
out
movl
mov
sbb
insb
lods
sahf
ds
testl
flds
jle
mov
push
icebp
add
js
lret
icebp
loope
mov
popl
pop
lcall
inc
and
dec
sbb
push
out
shl
push
popf
jb
pusha
sbb
cmp
mov
dec
fs
mov
dec
hlt
js
xor
popf
add
fistl
cmc
xchg
fisubrs
scas
mov
cmp
rcrl
inc
mov
sar
mov
push
mov
and
cmpsl
mov
pop
cmpsb
push
push
scas
lea
aas
dec
adc
int
lods
ss
inc
mov
cmp
push
push
inc
arpl
les
cld
in
pusha
mov
fiaddl
add
cmp
ffree
xor
sub
mov
lcall
pop
and
icebp
inc
cld
lods
test
lahf
cwtl
mov
sbb
filds
pop
adc
ds
xchg
adc
push
mov
pop
in
fisttps
mov
inc
push
imul
jle
jge
mov
lcall
mov
pop
mov
outsb
add
or
sbb
add
mov
mov
cltd
push
mov
pop
mov
jne
aaa
dec
sbb
outsl
shll
cmp
mov
lahf
shl
jle
fmull
aad
jno
movsl
xor
mov
adc
cmpsb
mov
jl
pop
imulb
cli
xchg
adc
inc
push
mov
dec
jmp
add
cmp
mov
inc
xchg
fucomip
stos
inc
test
fcmovbe
lods
xchg
aam
mov
fsubl
in
push
adcl
sub
mov
fwait
icebp
aaa
icebp
ror
stos
fmulp
aaa
xchg
repz
fwait
push
jmp
mov
movsb
mov
cmp
cmpb
or
ret
pop
in
add
and
mov
call
sub
pop
das
xchg
mov
mov
push
pop
in
mov
cmp
rol
or
lret
sub
fwait
es
cmpsb
inc
in
nop
push
jg
cld
push
add
xor
push
sub
jns
jb
jbe
lret
cmp
in
push
jnp
stos
mov
test
lret
je
lock
test
inc
cmpl
cmp
jmp
adc
mov
fisttpll
jl
mov
xchg
pushf
mov
jae
adc
lahf
out
push
pop
das
adc
cmp
loope
cld
cmp
lods
mov
shl
push
add
fisubrl
pop
testl
fisubs
push
std
adc
pop
jo
sub
or
bound
stos
lods
sub
and
mov
std
and
addr16
cmp
push
mov
sbb
sub
mov
in
push
fldenv
aad
jmp
and
leave
jo
inc
fisubl
pushf
clc
sub
add
ss
inc
pop
push
int
loopne
test
fldlg2
pop
cmp
clc
stos
arpl
pushl
pop
xchg
aad
clc
fwait
mov
push
mov
pop
fiadds
xchg
sbb
test
cmpsl
enter
xchg
pop
lock
js
push
cs
ffree
mov
cmc
outsl
stc
jge
mov
push
mov
jo
push
xchg
pop
fidivrl
mov
and
lods
lcall
shll
jmp
jno
andb
daa
mov
adc
clc
out
mov
cwtl
cmc
mov
andb
sbb
jmp
xor
pop
jle
inc
xor
out
or
out
xchg
jo
cmpsl
ffree
mov
sti
stos
and
push
cmpsl
adc
jmp
decb
cmpsb
xchg
jmp
jecxz
sbb
lods
das
xor
dec
mov
jmp
and
adcb
loope
out
fs
scas
or
lahf
adc
rcl
push
mov
xchg
push
jle
mov
inc
enter
inc
fdivs
or
mov
sub
fs
int
xor
outsb
mov
inc
call
aaa
xorl
and
jle
movsl
mov
and
ljmp
call
jmp
int
xchg
mov
or
cli
pop
inc
xor
ret
jns
mov
jns
inc
jmp
pop
jns
into
in
ret
rclb
sub
in
jmp
xchg
pushf
lahf
mov
add
push
inc
xor
and
mov
lcall
sub
push
loop
testb
int3
push
sub
ret
shrl
rcrl
jp
pop
jne
daa
cmc
adc
mov
shlb
clc
lods
icebp
icebp
lea
sub
bound
pop
ret
push
lds
mov
sub
out
and
jno
test
shrb
cwtl
int3
sarl
push
loop
shlb
repz
and
js
in
lcall
mov
or
int
jb
jg
xchg
fdivrs
jecxz
shrl
mov
inc
mov
jl
dec
repnz
test
jo
jbe
cmp
out
push
push
loope
insb
xchg
lcall
jnp
cmc
test
lahf
bnd
enter
mov
mov
cmc
inc
test
test
cs
and
jecxz
cmc
xchg
push
cmpsl
mov
jbe
jge
pop
rcrl
popa
sub
ret
insb
push
fsub
jmp
jg
cmpsb
aad
cmc
mov
jl
adc
jle
in
dec
je
cmp
xor
jbe
enter
dec
ror
insl
pusha
stos
pop
mov
loope
jbe
and
and
mov
lods
jae
sub
xchg
cwtl
add
and
inc
or
sub
scas
movsb
mov
add
and
adc
xchg
leave
test
inc
mov
xchg
cmp
and
xor
out
xor
mov
jns
or
fucom
imul
mov
lret
dec
xor
adc
mov
sarb
pop
pop
mov
push
idivb
add
sahf
roll
pop
rcll
or
xor
aam
daa
inc
jno
jge
sub
push
sub
outsl
into
cmp
outsl
rorb
cld
mov
js
pop
addl
cmp
sbb
dec
push
mov
sarb
imul
inc
pusha
fwait
ljmp
sub
daa
fcmovu
mov
push
movsl
mov
cmp
in
cmc
mov
dec
mov
int3
dec
cmp
add
sbb
add
lea
dec
rclb
ja
jg
test
ret
aad
rcrb
xor
pusha
push
lret
lcall
repz
pop
ja
js
hlt
xor
shl
push
mov
jo
jp
add
sti
adc
ds
sub
cmp
pop
ss
adc
dec
call
inc
cmp
std
loope
aad
pop
cli
push
mov
or
cmp
daa
ret
in
jnp
pop
sbb
push
movsb
sbb
sub
mov
les
push
pop
and
or
cmpsl
mov
push
mov
adc
sub
insl
push
cmp
sub
xchg
inc
in
xor
in
leave
popa
xchg
add
lret
xor
es
call
xchg
into
xor
inc
cli
out
ret
ret
xor
inc
push
xor
ljmp
and
les
enter
pushf
sub
xlat
pop
cld
enter
mov
cmp
sub
test
xor
push
cmp
cmpsl
dec
dec
call
das
pushf
pop
pop
cli
hlt
data16
int
mov
cs
jp
cs
clc
or
cmp
cmp
ds
jg
loope
das
xor
out
in
dec
jge
xor
xchg
and
xchg
add
xchg
outsb
pop
fdivs
sub
xor
aas
lods
push
mov
roll
jp
inc
dec
sbb
xchg
mov
stos
inc
into
add
arpl
pop
adc
frstor
mov
jnp
inc
lds
pop
lcall
std
xor
aam
rcr
push
out
stc
jns
push
dec
enter
imul
aaa
clc
adc
mov
inc
aad
xchg
outsl
sahf
xchg
and
inc
out
bound
lea
mov
mov
fadds
subl
xchg
ret
lock
and
inc
or
ds
nop
jmp
dec
sub
mov
mov
icebp
xor
pop
add
jle
or
push
andb
into
sub
dec
pusha
pop
dec
xor
ret
pop
loopne
shll
mov
push
mov
mov
pop
jbe
cmp
stos
into
in
add
push
and
xchg
push
cmp
aam
mov
inc
jecxz
notb
sbb
add
adc
jg
push
mov
imulb
mov
lods
repz
jmp
cmpsl
xor
pop
loope
push
xchg
push
es
fsub
or
aad
mov
lds
sbb
xor
pop
cmp
iret
push
sarl
sbb
or
sti
repz
cmpsb
mov
mov
mov
sarl
xchg
js
lock
aad
les
shlb
call
int
imul
adc
and
test
out
push
jg
xor
xchg
jg
daa
icebp
lock
hlt
adcl
mov
inc
or
neg
inc
inc
pop
or
add
pop
daa
push
mov
into
sub
sarl
daa
es
or
repz
push
mov
es
fstl
cwtl
pushf
pop
dec
sub
dec
add
sub
fadds
je
bound
xchg
std
gs
push
cmpsb
add
xchg
imul
pop
inc
adc
shrb
or
shll
sub
jnp
jmp
mov
clc
lock
sub
ds
adc
test
xchg
pop
cmpsb
pop
inc
mov
push
les
pop
adc
adc
add
gs
and
pop
ss
add
xor
push
jle
lcall
mov
popf
repnz
stos
loopne
mov
xor
out
or
ss
xor
mov
int3
dec
lods
orl
mov
xor
inc
sbb
repnz
stc
mov
out
imul
aaa
ret
mov
in
movb
xchg
pop
cli
xchg
int
and
das
lea
or
mov
les
push
rcrl
jp
mov
sbb
imul
out
fdiv
xchg
jmp
xchg
clc
sub
fcompl
jno
mov
pop
imul
fdivl
jne
fldenv
add
bound
sub
adc
inc
dec
adc
std
mov
and
jae
in
xor
lock
clc
test
rclb
inc
adc
adc
sti
cmpsb
mov
lock
xchg
sub
in
xchg
test
or
add
loope
cmp
mov
add
nop
jo
mov
out
cmp
mov
inc
ds
lods
sbb
in
mov
mov
and
loope
sar
xchg
lahf
jno
push
add
mov
jmp
xor
dec
mov
mov
into
faddl
pusha
pop
and
mov
jecxz
pop
sar
push
sbb
push
lea
and
data16
and
mov
out
push
sarl
lods
dec
lods
iret
inc
clc
adc
sub
int
idivl
push
imull
rcr
push
insl
xchg
and
in
into
push
jb
pushf
inc
add
sahf
or
or
mov
fmull
inc
adc
jle
push
mov
imul
filds
lret
popf
cmp
mov
jg
push
add
add
repz
mov
ror
mov
cmp
xor
in
orl
out
jbe
shll
mov
ret
mov
xorl
ljmp
gs
sbb
jl
repz
cmc
mov
loop
sahf
lret
movsl
test
push
into
mov
xlat
loop
into
mov
inc
mov
lret
repnz
push
aaa
mov
imul
fs
add
inc
push
xchg
mov
or
out
fwait
sub
inc
mov
pop
mov
sbb
push
push
dec
nop
loopne
or
xchg
mov
addr16
mov
jp
mov
imul
lcall
dec
into
mov
scas
xchg
rep
test
cli
pop
and
dec
jae
sbb
pop
pop
jmp
lock
or
sbb
push
mov
out
lods
xor
mov
daa
insb
incl
xor
xchg
inc
push
fwait
repz
aam
mov
cli
mov
gs
and
lock
in
fdivrl
lret
out
sub
push
sub
lret
movsl
adc
or
shlb
mov
and
cmp
push
iret
inc
lret
xchg
push
or
push
mov
sub
ja
sbb
mov
xor
fiadds
pop
adc
xor
lods
inc
push
es
sub
inc
and
pop
add
test
arpl
lock
jecxz
xchg
pmovmskb
fbld
add
loop
fisubrs
push
xchg
inc
clc
pop
mov
stos
shll
sub
add
pop
leave
sub
frstor
pushw
fcoms
adc
ret
jl
and
loope
push
lahf
sub
inc
dec
mov
or
mov
test
bnd
jge
push
xchg
dec
cmp
inc
popa
lea
jp
or
lods
aas
in
mov
cmpsl
xor
shr
out
cmp
pop
cmp
adc
mov
sarb
shll
addr16
dec
ds
nop
insb
add
inc
sbb
test
jbe
cli
cld
ret
sbb
mov
and
js
movsl
mov
rorb
or
aaa
sbb
mov
leave
test
or
aas
mov
rorb
dec
xchg
jo
mov
adc
or
mov
mov
cmp
mov
cltd
ret
push
or
mov
inc
out
adc
into
lods
xor
rolb
inc
dec
jne
push
sbb
leave
loopne
sub
add
mov
add
jbe
js
fs
fdivl
outsb
hlt
inc
call
add
ljmp
sub
or
std
lcall
push
mov
ds
frndint
or
push
sbb
push
xor
stos
fs
fwait
and
jae
stos
sbb
mov
mov
je
test
inc
jle
icebp
xor
pop
out
xor
data16
mov
aam
mov
cs
adc
adc
or
push
ss
inc
in
push
into
fldl
dec
sub
add
stos
arpl
and
out
mov
cs
and
xchg
int3
and
or
mov
add
outsl
add
inc
out
mov
xchg
dec
xor
sub
mov
ds
jo
jmp
movsb
pop
and
orl
rcl
and
dec
pop
cmp
aam
mov
js
je
stos
inc
add
dec
movsl
push
sub
adc
movsl
mov
jge
mov
cmc
inc
mov
xchg
lods
xor
cmp
jge
das
and
mov
test
push
mov
add
imul
xlat
stos
out
mov
push
std
leave
mov
sub
fcoml
out
das
push
mov
mov
inc
fwait
lock
xchg
cmpsl
mov
mov
std
and
aas
scas
arpl
dec
sarl
lret
lods
ja
mov
add
scas
add
mov
pop
fsts
in
and
push
xor
cwtl
call
mov
add
cmp
pop
cwtl
enter
mov
push
adc
ljmp
test
pop
mov
or
shrl
jne
xchg
test
lds
push
jg
loopne
lea
mov
mov
pop
push
pop
insl
and
and
test
punpckhbw
enter
fsubrs
mov
mov
dec
stos
push
xadd
outsb
lcall
sbb
adc
shlb
movsl
int
cmpl
push
cmp
std
imul
fidivs
push
jae
adc
cld
inc
cli
lea
adc
inc
shl
popf
in
add
mov
loopne
ljmp
adc
mov
jge
cmp
mov
popa
adc
ljmp
sub
add
mov
dec
mov
je
adc
xor
test
jo
cmpl
fwait
negb
jb
ss
rolb
loopne
hlt
mov
cmp
jecxz
inc
mov
lock
jmp
loope
adc
aas
lock
shll
call
jle
push
inc
mov
inc
scas
dec
fistps
hlt
in
fcomps
pop
cmpsl
xchg
mov
add
xor
dec
mul
add
dec
xchg
cmp
or
adc
shrb
sub
jg
stos
pop
popl
test
xlat
int
adc
xchg
cs
and
sub
aad
shll
jno
jecxz
cmp
pop
push
enter
repz
ja
pushf
fidivrs
cmovs
stc
int3
ja
test
lahf
xlat
adc
xchg
lahf
pop
or
arpl
jmp
out
imul
out
xchg
out
push
push
push
jnp
cmp
and
lret
es
clc
push
aad
stos
in
sbb
bound
enter
arpl
out
fwait
outsl
sbb
outsl
aam
pop
fstl
cmp
les
xchg
push
and
dec
adc
cmp
jns
mov
cmpsl
mov
push
jl
aaa
nop
push
xchg
add
fcoml
or
cmp
adc
push
cld
into
mov
mov
and
leave
lahf
orb
mov
pop
out
popf
cmp
iret
ror
loopne
or
xchg
sbb
cmp
pop
es
push
mov
mov
test
cmpsb
std
dec
in
or
cli
hlt
jns
jmp
ret
outsb
dec
sub
or
aas
adc
push
xor
ror
push
dec
and
mov
cltd
push
js
std
fnsave
out
xor
repz
fwait
and
out
dec
gs
mov
ja
jecxz
bound
xchg
fnstsw
subb
scas
popa
cmc
aaa
inc
testl
sar
outsl
ja
xchg
ret
cmpb
pop
cmp
add
insb
mov
dec
inc
subl
xor
add
enter
mov
dec
cmp
popa
cmp
sbb
shll
or
xlat
adc
xor
sbb
in
push
call
cmp
fldl
pop
mov
fmuls
fsqrt
adc
ret
daa
xor
push
xor
sbb
inc
adc
xor
mov
xchg
les
fidivs
pop
mov
ja
ret
cwtl
rcll
sub
shll
cmp
and
mov
out
fldcw
shl
inc
enter
or
les
and
mov
mov
jnp
add
push
fidivrl
push
rcl
out
pop
dec
sbb
xor
repnz
xor
ficoms
test
call
cmc
push
in
push
mov
popf
sub
xchg
sar
nop
fisttps
pop
and
bound
sbb
xlat
hlt
std
xchg
outsb
ja
dec
call
les
jbe
shl
fwait
leave
or
inc
and
mov
inc
or
lret
rolb
jmp
adc
andb
mov
je
sbb
fildll
iret
sub
dec
std
or
test
xchg
jbe
cld
lods
xchg
popf
daa
leave
xlat
aas
fcmovb
push
push
lahf
hlt
rcrl
lods
lods
sahf
nop
push
imul
xlat
rcll
dec
cmpsb
xchg
in
cld
push
sar
rol
fs
adc
negb
pop
and
andb
and
xor
adcb
cmpsl
xchg
inc
mov
xor
mov
pop
lret
fadds
test
stc
sub
jge
mov
cwtl
popa
ljmp
cmp
mov
icebp
imul
push
into
mov
lea
cli
repnz
shl
xchg
ret
sbb
lret
loopne
adc
push
icebp
xorb
sbb
pop
popa
aas
jp
jno
adcl
mov
inc
mov
push
popf
jno
inc
and
scas
jne
jbe
cs
mov
aaa
dec
xchg
arpl
push
or
loope
ja
cmp
jno
pushf
std
sub
sbb
jae
or
mov
xchg
mov
pop
je
mov
and
push
pop
pop
in
int
cmp
test
xchg
inc
sti
mov
mov
in
push
xchg
cli
xchg
nop
mov
push
aam
filds
xor
fmul
jne
mov
int
pop
nop
xlat
ss
add
mov
js
stc
int
fidivs
lods
xlat
in
cmp
movsl
lret
cwtl
inc
dec
and
pop
jo
lock
push
leave
lds
pop
lods
lea
aam
mov
loopne
movsl
ss
out
adc
lret
imul
rcrl
sbb
cmp
dec
inc
addr16
dec
or
pushf
repz
inc
dec
xchg
addr16
in
or
test
mov
jns
and
sub
pop
dec
push
mov
dec
in
mov
push
loopne
mov
lods
push
mov
roll
cmpsl
push
pop
and
jge
out
xchg
or
jnp
sahf
pop
mov
xchg
cmp
stos
out
cmpsb
test
bound
adc
and
dec
cmp
xchg
and
fincstp
mov
pand
sbb
sar
loope
mov
jbe
mov
ja
fistpl
stc
xor
fdivr
dec
mov
fwait
sti
mov
mov
inc
pop
and
test
adc
imul
add
mov
mov
sub
mov
push
call
sbb
ret
xchg
lods
pop
jbe
xor
lcall
and
push
push
xchg
add
daa
or
xchg
fists
pop
cmp
adcl
push
lret
test
dec
js
xchg
cmp
jno
push
xchg
int3
popf
clc
sub
push
fdivs
or
mov
lret
arpl
sub
mov
test
aad
cmpsb
movsb
loopne
pop
sti
gs
roll
fnstsw
pop
je
pop
pusha
shld
sbb
push
add
aad
ds
pop
pusha
lea
pop
mov
mov
mov
imul
in
cmp
stos
mov
cmp
gs
pop
sbb
jg
sub
int3
imull
pop
or
mov
js
inc
and
fmuls
fistpl
arpl
adc
push
dec
mov
dec
dec
or
out
mov
push
pop
stos
xchg
mov
push
or
sub
roll
mov
push
dec
scas
daa
clc
or
fwait
push
loopne
lahf
dec
lds
int
aad
aaa
jp
sbb
les
jno
jg
stos
js
call
in
add
call
gs
sub
cmpb
and
xchg
sub
stos
and
subb
ss
out
pop
leave
xor
xor
sahf
cmc
sub
lcall
lods
and
les
aaa
rcrl
sub
xchg
mov
push
out
out
inc
cltd
dec
loopne
mov
sti
aam
lret
jl
fs
or
in
clc
and
pop
into
repz
lods
mov
pop
lret
inc
out
lret
adc
or
dec
stos
je
jnp
cmp
jo
outsl
cld
jge
daa
je
sbb
pop
test
dec
add
mul
inc
call
negb
xacquire
mov
scas
jecxz
push
cmp
push
jg
in
es
out
div
aad
cli
inc
shll
jmp
js
loopne
jno
adc
pop
std
add
lds
add
push
cs
pop
imul
test
inc
push
ud2
and
mov
xchg
movsl
daa
push
das
mov
fucomi
loope
lods
out
cmp
scas
lods
push
jmp
pop
adc
subb
shrl
mov
jnp
hlt
jns
jg
sbb
mov
in
sti
sub
mov
cmp
sub
xchg
cmp
fidivs
push
into
jecxz
sbb
jo
xlat
push
push
rcl
loope
mov
arpl
mov
out
mov
inc
xor
leave
negb
cmc
or
mov
xor
inc
xchg
mov
mov
into
adc
lock
sub
push
jecxz
adc
std
movsb
orb
int3
mov
mov
inc
push
pop
push
add
sahf
movsb
or
and
hlt
in
cmpsl
ret
lods
pusha
sub
ljmp
pop
movsb
xor
sub
aas
push
fldenv
xchg
popa
xchg
addr16
das
icebp
add
cmp
sahf
add
and
repnz
push
subl
dec
mov
cld
scas
or
leave
mov
sahf
mov
addb
push
data16
jne
movsl
mov
shr
jmp
mov
mov
les
rolb
push
mov
jbe
loopne
and
shll
jge
iret
lds
mov
xor
add
loopne
outsl
pop
push
sub
dec
xchg
lds
int3
sub
mov
fnsave
mov
mov
sti
lcall
lods
loop
sub
jne
push
movsb
inc
xchg
and
std
loop
dec
mov
movsl
stos
dec
pop
pushf
loopne
pop
mov
fstpt
dec
stos
mov
lar
xchg
ret
or
out
lret
dec
lods
sbb
testb
mov
outsb
out
out
dec
jg
aas
add
lret
scas
call
lock
or
adc
outsl
jle
lds
push
int
inc
cmpsl
xor
add
into
xor
outsb
mov
pop
sub
jne
pusha
pop
push
push
pop
xor
mov
mull
dec
mov
lds
stos
dec
add
jmp
adc
aaa
stos
imul
pop
lcall
jae
daa
hlt
cmc
test
jl
hlt
testl
orb
mov
je
mov
int3
scas
push
orb
stos
xor
test
jnp
xchg
adc
cmpsl
rorb
push
cltd
lcall
push
dec
and
stc
xlat
sub
shlb
inc
mov
cmpsl
je
sub
cwtl
test
or
jp
push
enter
out
and
push
xor
xchg
xor
dec
jne
cs
push
cmp
mov
sbb
mov
xor
mov
add
ljmp
or
repz
addr16
or
repz
fmul
sbb
lret
arpl
or
ret
std
fistl
mov
int3
inc
xor
sub
int3
lret
mov
repnz
push
loopne
into
add
repnz
jb
cwtl
pop
popf
sub
cmpsb
imul
ljmp
or
sub
push
movsb
test
push
pop
adc
int3
daa
jmp
adc
fcoms
mov
clc
xor
cmp
xor
lahf
aaa
cld
adc
push
pop
xchg
add
les
mov
ljmp
fmuls
scas
inc
or
mov
loop
push
dec
lahf
addr16
mov
jmp
or
fmull
idiv
mov
jnp
xor
add
cmp
xchg
out
jmp
sub
mov
insb
inc
push
sub
xchg
cmpsl
xor
aas
repnz
imul
pop
nop
repnz
add
ja
popf
adc
out
repz
jg
inc
inc
and
xchg
in
negb
scas
mov
cltd
adc
in
dec
pop
xor
adc
jae
cwtl
fstpt
cmp
and
push
mov
inc
inc
nop
dec
std
roll
movsb
xchg
adc
mov
mov
jl
arpl
pop
add
push
movsl
in
and
and
cmp
inc
xor
shrb
cmp
xchg
ret
test
mov
push
les
test
push
stos
cld
mov
icebp
loop
adc
iret
push
lods
rcr
jne
mov
stc
fdivl
jns
or
adc
and
mov
push
xchg
add
cmc
sahf
jns
rclb
fwait
jo
add
add
stos
mov
adc
repz
push
cmc
dec
mov
jo
pop
insl
stc
jl
fcoml
in
and
push
push
cmpsb
iret
inc
popl
nop
xchg
mov
mov
shrb
cs
xchg
arpl
and
fldenv
adc
sbb
jbe
ds
and
pushf
push
mov
or
xor
mov
movntps
and
sti
in
fwait
push
mov
repnz
dec
popf
or
dec
dec
ds
pusha
sbb
lock
test
imul
cmpb
sti
xchg
pusha
mov
cmpsw
jmp
in
xchg
cmp
out
fdivrs
dec
bound
push
pop
fmulp
sub
clc
ds
loopne
dec
lret
lock
add
into
scas
lods
push
data16
mov
push
test
call
pushf
out
jne
subl
cmp
adc
push
inc
shll
incl
pop
loopne
sbb
jnp
lods
popa
fists
and
das
jb
add
sbb
test
hlt
jbe
sub
insb
aad
gs
push
hlt
iret
and
lock
adc
dec
fwait
cmp
mov
jecxz
or
xchg
in
sbb
jp
inc
jns
andb
cmp
addr16
cmp
inc
jmp
xor
fdivrp
adc
dec
mov
add
sub
xor
sub
inc
cld
ja
repnz
cld
sbbl
push
fs
jmp
scas
add
sbb
cmp
push
aam
shll
pop
adc
push
push
lret
push
cmc
mov
push
ficoms
int3
dec
stc
inc
lret
or
out
repz
jg
jnp
jle
mov
icebp
adc
xchg
inc
lahf
out
pusha
popa
mov
pop
inc
lods
cmp
ror
test
loope
mov
clc
pushf
sbb
repnz
xchg
mov
adc
adc
incb
out
shrl
mov
inc
sbb
adc
lea
push
hlt
nop
pop
fnstenv
lahf
sbb
push
jne
jmp
lret
dec
lahf
loope
pop
inc
mov
sub
xchg
or
add
lret
in
pop
pop
cld
or
add
lods
in
loop
inc
mov
sbb
aam
cwtl
jge
push
gs
dec
adc
mov
mov
nop
outsb
xor
cmpsl
outsb
loope
mov
mov
and
aaa
inc
mov
lock
mov
jp
inc
sub
mov
jmp
cs
imul
push
mov
mov
loope
sbb
mov
aam
and
pop
cmc
lods
xor
cld
and
xchg
cltd
pop
push
mov
punpcklbw
mov
cmp
insb
mov
mov
or
call
and
insb
bound
or
std
xchg
fbld
adc
lret
test
adc
cmp
stos
add
pop
xor
sbb
pop
mov
xchg
aas
data16
mov
push
mov
xchg
fmul
in
decb
cld
test
cld
or
movsb
iret
push
out
cli
adc
dec
frstor
aaa
push
push
inc
mov
mov
cmpsb
mov
ret
push
fwait
pop
test
add
mov
leave
or
xchg
push
int3
xor
inc
leave
and
add
divb
fisttpll
inc
pushf
pop
mov
dec
or
xlat
cmp
lods
pushl
xchg
jbe
xchg
and
mov
and
push
bound
sar
imulb
adc
dec
pop
mov
mov
ljmp
cmp
adc
cmp
outsb
or
cli
lcall
push
jae
push
lea
out
sbb
mov
jge
push
xor
mov
sbb
push
sub
xchg
push
sbbb
mov
cmpsl
add
imul
shlb
or
stc
int
adc
push
mov
gs
xor
adc
out
fisttpl
mov
jg
push
and
jnp
add
xchg
push
cwtl
pop
out
cmp
movl
outsl
je
lods
test
iret
addb
imulb
cmpsb
sbb
jl
xchg
dec
lcall
mov
inc
je
sarl
loop
xchg
loop
es
or
push
pop
dec
in
fwait
pop
cmpsl
sbb
xchg
xor
andl
mov
xchg
inc
in
aad
lret
in
pop
mov
test
pushl
in
pop
loop
mov
add
xchg
mov
loope
mov
jne
sbb
mov
xchg
das
call
xchg
jae
sti
loop
test
arpl
lock
fcmovnu
imul
dec
insb
and
inc
loope
mov
cmp
or
lcall
filds
cmpsb
mov
jecxz
jecxz
mull
adc
xchg
mov
jmp
sub
jmp
cli
pop
cmp
pushf
inc
mov
ds
sub
push
enter
mov
out
mov
push
aam
and
ss
imul
mov
and
cmp
in
push
in
jo
orb
ret
imul
insb
push
popf
dec
cmp
test
pop
sub
or
add
pop
ja
xchg
xchg
test
fisubrs
xor
sub
xlat
jl
or
and
daa
xlat
rorb
roll
and
mov
lods
xchg
fcmovnu
push
ror
push
xchg
inc
inc
ret
repz
divb
iret
adc
outsl
xchg
xor
and
jge
lock
lret
dec
sahf
cmp
mov
stos
dec
out
jl
clc
bound
insl
cmpb
inc
loop
aad
nop
aam
sub
xchg
and
filds
jo
jecxz
sarb
mov
ret
pushl
mov
push
and
mov
jle
xchg
inc
sbb
enter
punpcklbw
ror
pop
adc
inc
pop
and
mov
add
arpl
ja
mov
push
pop
cs
pop
leave
dec
and
dec
add
and
mov
rclb
pop
push
enter
cmp
jmp
sti
pop
cltd
or
inc
jno
jge
out
data16
inc
fwait
jg
fadds
ficomps
sarl
cmp
pop
in
cs
mov
shlb
and
and
fsubrl
test
xchg
inc
xchg
xchg
mov
mov
mov
jl
clc
adc
cld
out
adc
and
loope
into
push
arpl
xor
xchg
sub
mov
jno
dec
fadds
push
leave
inc
pop
mov
gs
leave
mov
repnz
sbb
jo
imul
mov
in
mov
lods
imul
sbb
aad
add
movsb
cmp
movsb
adc
leave
scas
in
rclb
test
push
inc
push
je
in
xor
mov
push
adc
je
imul
rolb
add
out
iret
mov
jbe
cmp
stc
xor
data16
mov
enter
idivl
movsl
xchg
bound
mov
push
xor
mov
and
and
sub
shrb
dec
inc
lcall
dec
test
fs
inc
mov
arpl
lods
mov
adc
cmp
test
std
test
jbe
add
cltd
mov
push
xchg
and
dec
jb
insb
imul
andb
jmp
enter
je
fcomps
lods
pop
xor
jnp
nop
sbb
imul
out
lds
gs
dec
cmp
jns
in
jg
xchg
adc
insb
xchg
adc
pop
pop
out
sub
std
into
inc
cmp
nop
mov
data16
fstps
sbb
xchg
push
dec
divl
mov
test
leave
lods
jmp
inc
mov
sti
push
xchg
push
test
inc
es
push
out
aad
loopne
and
jg
and
jmp
test
and
mov
jbe
out
ds
addb
fdivl
sub
stc
inc
sbb
xor
movsl
ret
shrb
mov
mov
adc
push
fiadds
mov
je
push
cmpsb
push
fsubl
sbb
push
dec
add
fstpl
mov
inc
xchg
stos
icebp
movsl
mov
mov
cwtl
xor
mov
lods
arpl
hlt
mov
push
outsb
cmpb
orb
andl
inc
dec
cltd
popa
pushf
pop
fscale
enter
stos
mov
loope
add
mov
mov
inc
loopne
xchg
push
sub
out
cld
mov
fisubrl
push
pop
inc
xchg
mov
cmpsb
push
inc
mov
sti
jl
pushf
add
fsubr
fwait
lret
rcrl
push
fwait
seto
fimull
jmp
pop
pop
mov
es
or
std
dec
push
pop
hlt
cmpsb
jge
out
mov
mov
push
cmp
dec
adc
jb
adc
xchg
mov
scas
jns
dec
mov
ljmp
ja
cltd
sbbl
cmpsl
xchg
outsl
pusha
mov
movsb
sub
mov
and
adcb
shll
loope
pop
xchg
aas
outsl
xchg
cwtl
popa
enter
lods
sbb
pop
xchg
adc
jo
jp
js
hlt
pop
pop
cmpsl
roll
mov
xchg
test
mov
sti
pop
mov
sbb
add
xor
aad
lods
sti
inc
lea
sub
and
es
inc
mov
jp
in
sahf
pop
int3
sbb
pusha
xorb
flds
jo
lret
cli
in
neg
or
hlt
mov
arpl
pop
iret
in
aas
shlb
es
lea
and
in
pop
test
sub
fisttpll
inc
pop
lcall
xchg
mov
daa
js
push
sbb
mov
lock
dec
loope
sbb
jge
int
jg
mov
jne
xchg
push
outsl
andb
jp
inc
cld
push
outsb
xchg
pushf
rcr
pop
invd
dec
fs
loope
shll
sbb
rcrb
xlat
xlat
pop
sbb
mov
or
imul
movsl
enter
loopne
lods
push
setp
cld
cmpb
cmpsb
mov
and
and
dec
jne
mov
pop
inc
mov
lock
xor
gs
stos
mov
js
jmp
insb
icebp
ret
call
add
imul
or
xor
in
mov
adc
lock
dec
dec
and
lods
sti
mov
jmp
mov
das
jmp
test
add
sahf
popf
fwait
movsl
mov
sbb
les
sub
adc
cmpsb
fimuls
cmp
stos
inc
mov
fnsave
out
pop
repz
xor
mov
sub
pop
add
mov
add
clc
mov
dec
xlat
xor
mov
cmpsb
addr16
lret
fsubrs
or
add
push
scas
rol
mov
testl
xchg
pop
loope
pop
stos
lea
loop
fsubl
cltd
adc
dec
pushf
repz
add
jmp
pop
xchg
mov
arpl
aas
lahf
ficompl
adc
pop
sbb
out
orl
out
or
cmp
call
aad
insl
lret
mov
xchg
mov
xchg
dec
ret
xchg
mov
lea
cmp
arpl
testb
or
fcomi
test
sub
cmpsl
out
addr16
and
xchg
addr16
std
add
movsb
fldt
addl
fidivl
jmp
cltd
mov
jle
pop
insb
push
loop
pop
lea
cwtl
pop
hlt
sub
adc
imul
in
shll
mov
pop
pop
leave
or
sbb
dec
xor
xor
sbb
stos
fsts
mov
nop
or
fldcw
int3
movsb
sub
outsb
pop
pop
sbb
lods
mov
push
adc
xchg
inc
add
out
lds
push
roll
divb
cmc
addr16
pop
lret
inc
aas
xchg
push
sub
cmp
test
dec
cmpsl
mov
mov
in
inc
aam
xchg
inc
adc
lea
ficoml
inc
and
jbe
mov
stc
push
mov
clc
shll
in
mov
inc
rcr
and
mov
sub
jecxz
les
jle
ret
fisubrs
mov
cli
pop
rcrb
push
scas
ss
dec
pop
sub
adc
cmpsl
fcompl
out
fsubrs
jo
jae
mov
iret
lods
mov
jmp
cli
dec
negl
je
loope
sti
popf
or
insl
stos
cli
call
jecxz
aas
xor
sbb
mov
push
add
jmp
ja
mov
insb
scas
xor
stos
repnz
dec
fldenv
push
and
pop
ss
lret
test
aas
push
jmp
ror
das
nop
aad
leave
push
mov
inc
mov
push
das
cld
iret
seto
sbb
loop
xor
jno,pn
push
aad
scas
aad
shl
cwtl
test
xchg
and
pop
lods
sbb
jns
adc
fchs
inc
pop
xor
outsl
xor
sbb
ret
mov
ljmp
lret
cmp
mov
pusha
cmp
rorb
adc
jbe
popa
stos
pop
inc
jb
shrl
adc
adc
nop
scas
filds
push
hlt
sbb
push
adc
adc
ljmp
and
jbe
scas
pop
mov
pop
add
mov
jb
cmp
cmp
xor
or
in
sub
mov
repz
call
mov
enter
sti
cmp
push
and
xchg
lea
dec
add
mov
xchg
aad
push
stos
fs
cmp
sbb
xor
xchg
stos
push
push
ljmp
pop
lods
xchg
shll
pop
mov
push
sbb
push
mov
jo
lods
jns
ss
addl
and
sbb
mov
push
shrb
les
test
stos
dec
sbb
punpcklwd
cmpsb
push
xchg
jns
fiadds
mov
into
outsl
scas
inc
push
stc
fdivrs
test
inc
jmp
pushf
jmp
add
adc
sahf
dec
sbb
mov
arpl
sub
xchg
das
aaa
inc
ds
mov
inc
shlb
push
fdivl
imul
in
inc
outsb
adc
rcll
mov
out
and
add
shll
mov
pushf
dec
mov
push
mov
es
dec
call
out
stos
and
push
add
in
jbe
xor
pop
dec
sar
xchg
out
jecxz
mov
rcrl
fwait
jl
cmp
in
stos
mov
jle
jb
call
roll
mov
mov
push
lret
jmp
mov
aaa
or
inc
stos
jmp
mov
imul
dec
es
int
arpl
movq
andl
mov
lock
dec
push
ss
dec
mov
icebp
loope
xchg
pop
sbb
inc
jno
inc
shlb
js
cs
sbb
pop
pop
xchg
mov
push
shlb
push
inc
inc
ja
sbb
dec
sbb
mov
arpl
dec
cmp
test
mov
mov
test
add
pop
mov
das
mov
pop
sub
sub
xchg
mov
jbe
aam
sbb
out
out
dec
lcall
adc
loope
jmp
add
and
mov
fcomp
in
or
lea
mov
xchg
loopne
in
sbb
adc
push
or
mov
mov
lods
sti
cmpsl
jnp
pop
jecxz
cmp
dec
add
inc
and
or
inc
xchg
ds
push
xor
sti
scas
cmp
lahf
xor
pop
fsub
xchg
imul
pop
stc
jae
push
sbb
mov
shlb
fildl
xor
inc
cld
dec
mov
and
mov
popa
into
or
or
rcll
stc
or
push
idivl
nop
add
jae
adc
pop
stc
repz
push
add
mov
stos
xor
roll
es
jl
mov
pop
mov
mov
adc
mov
out
lock
movsl
mov
jl
sti
scas
repnz
mov
loop
pushf
push
dec
imul
jp
lock
shl
in
iret
repnz
lods
test
mov
and
mov
fsubl
inc
stc
sub
pop
subb
inc
pop
mov
pop
pop
mov
cld
jb
fists
sub
mov
add
jae
mov
xchg
dec
mov
adc
in
mov
cmp
jae
sub
dec
int
add
jmp
outsb
scas
cmpsb
pop
movsb
in
leave
in
add
out
in
clc
stos
pusha
inc
out
pushf
jecxz
and
mov
mov
cs
pop
clc
sti
fsubrs
iret
int
ds
jo
sbb
push
ret
stos
repz
cmp
xor
pop
sbb
fcomps
lcall
psrlq
insl
or
dec
jo
cmp
call
mov
stos
inc
in
jmp
add
sub
or
mov
lret
insl
jno
mov
mov
outsb
popa
int
xchg
or
mov
and
push
mov
xchg
push
stos
xor
cmc
popf
dec
pop
fcomi
and
jbe
les
cmc
push
dec
int3
incb
cltd
dec
movsl
fisubl
mov
out
loop
lahf
leave
jo
jmp
stos
or
add
imul
out
sbb
xor
sbb
add
imul
or
jge
push
les
add
adc
adc
jmp
sbb
test
addr16
loop
push
jge
call
mov
xor
lea
fst
cs
in
idivb
and
adc
fbstp
pop
pop
addr16
mov
gs
lds
push
mov
xchg
loop
jmp
pop
and
fnstenv
test
rol
out
arpl
fdivrl
js
xor
cmp
mov
addr16
mov
fists
sbb
stos
inc
repz
enter
adc
jmp
lcall
add
sarb
pop
popf
mov
cwtl
fcomip
jae
testl
daa
js
xchg
add
jle
cmc
inc
jmp
push
sub
call
sub
cmp
dec
cld
mov
xchg
mov
lcall
mov
and
mov
mov
cwtl
out
fidivl
sub
std
loopne
inc
loop
sti
xchg
jmp
cmp
fcoml
lahf
frstor
cmc
iret
ljmp
or
push
sub
inc
mov
dec
call
sbb
fimuls
mov
inc
sub
lea
out
mov
and
fisttpll
dec
dec
xor
es
jg
cmp
push
or
jmp
fmuls
jno
jnp
sbb
push
xor
sbb
inc
shl
incb
jmp
in
pusha
lods
push
ja
xchg
jecxz
fldcw
cmp
cmp
sbb
adcl
mov
mov
jl
adc
cltd
bswap
in
adc
sahf
cmp
ret
es
jo
scas
ljmp
idiv
cmp
je
enter
inc
cmp
ret
xchg
and
adc
jmp
sahf
aad
jge
in
mov
addr16
gs
insb
mov
adc
ret
repnz
je
inc
mov
xor
jo
mov
jns
mov
int3
movsb
lret
adc
sub
ficoms
daa
in
jnp
push
xchg
push
adc
dec
jge
fistl
and
and
xorb
add
les
xchg
push
adc
shll
movsl
popf
dec
popa
add
dec
and
or
sbb
jl
inc
lds
iret
aad
mov
daa
dec
or
ret
mov
addr16
arpl
jnp
lahf
rclb
mov
sub
call
loop
jp
lds
pop
imull
sarl
lcall
mov
xor
in
mov
nop
lahf
loope
andl
iret
les
pop
movsb
sub
stos
xchg
xchg
jno
cmp
dec
push
jnp
fs
mov
pop
imul
cs
and
cli
xchg
pop
push
mov
call
dec
mov
xchg
jnp
inc
stc
dec
xchg
sahf
fcmovne
xchg
xor
mov
inc
sub
pinsrw
sub
mov
jle
add
int3
add
adc
push
inc
cmp
push
rcr
cmp
mov
and
lret
call
inc
shlb
rolb
xorl
adc
popf
dec
lret
mov
or
cmpsl
jge
mov
dec
mov
pop
jecxz
loop
or
cmp
in
mov
in
push
xorl
sbb
push
cmp
ja
mov
sbb
xor
inc
mov
mov
xor
jb
jle
out
cmpsb
or
popa
cmp
ja
repz
adc
sub
test
rcll
cmp
adc
inc
in
dec
and
ror
aaa
mov
insl
jne
lock
mov
cli
xorl
sahf
push
insb
out
imul
sub
cmc
mov
push
add
scas
and
adc
lcall
mov
std
push
mov
adc
add
xor
push
or
sbb
mov
push
mov
lret
pop
jne
call
cmp
push
iret
mov
push
and
nop
xor
adcb
cmp
imul
inc
sub
add
aas
roll
mov
and
mov
jbe
into
cwtl
and
outsb
lods
mov
popa
dec
adcb
insb
inc
adc
xchg
cltd
ss
cmc
sub
es
sarl
ds
mov
call
sub
sub
roll
leave
mov
dec
fs
xchg
rclb
jg
inc
imul
dec
cmpsb
lds
pushf
mov
fisubs
add
lcall
mov
push
out
xor
popf
cmp
inc
dec
cs
adc
enter
xor
sar
or
pop
xor
add
fwait
mov
jnp
mov
jbe
aas
lret
add
dec
ljmp
sub
pop
add
fsubrs
adc
pop
aad
mov
xor
pop
dec
or
mov
and
pop
dec
ficoms
sahf
sbb
pop
sbb
or
adc
outsb
decb
jne
pusha
pop
sub
sti
leave
adc
or
nop
cmpb
jne
scas
arpl
mov
jl
push
pop
cmp
or
cmp
adc
adc
mov
cwtl
push
shrl
lcall
mov
and
and
xor
into
xchg
daa
fmul
subb
adc
popa
push
lahf
xor
or
mov
jp
add
lahf
in
dec
cmc
mov
adc
xchg
dec
push
and
or
imul
inc
jmp
int
insl
stc
mov
dec
xchg
and
ret
or
or
push
jbe
mov
rcrb
imul
mov
rcrl
out
mov
sub
push
loop
xchg
into
mov
adc
shlb
into
mov
cmp
sub
mov
pop
or
flds
sti
cmpsb
ret
and
repnz
pop
js
loop
inc
jmp
shl
icebp
in
lcall
movsl
movsl
or
fisttpl
sub
andb
mov
inc
inc
lds
insl
pop
push
cmc
je
jne
mov
leave
inc
insb
cld
inc
fisubrl
loope
out
xchg
inc
pandn
push
push
add
loop
mov
pusha
sarb
sbb
mov
enter
inc
jae
and
ret
dec
lahf
mov
in
pop
push
pop
xchg
push
sbb
inc
or
push
pop
adc
inc
sbb
sbb
jmp
adc
scas
aad
mov
mov
inc
mov
push
insl
xchg
jmp
inc
push
mov
xchg
lock
cmp
sbbl
push
pop
pop
jg
and
outsl
mov
popf
sub
popa
es
push
mov
outsb
xchg
jmp
outsb
dec
pcmpgtw
adc
mov
pushf
xlat
push
and
ficoms
fwait
mov
pop
imul
orb
movzwl
or
cltd
mov
insl
scas
aad
jb
cld
jne
mov
mov
sahf
push
lahf
cmpsl
sbb
out
push
inc
lret
jp
add
pushf
cli
and
add
mov
mov
pop
push
mov
out
cmc
pop
jb
loop
and
mov
and
cld
pusha
pop
fstps
clc
insl
aam
push
and
lahf
jnp
push
adc
call
imul
imul
pop
loop
sub
xchg
rorb
dec
mov
outsb
daa
xchg
shll
pop
jo
or
xchg
cltd
mov
dec
jae
inc
or
add
mov
into
sbb
nop
aas
cmp
js
jns
jl
std
std
imul
popf
aaa
mov
ret
push
hlt
enter
cwtl
cmpsl
and
or
cmp
dec
je
add
mov
pop
lds
mov
xchg
outsb
lods
fs
inc
xor
lret
or
push
in
xchg
mov
push
sub
and
inc
sbb
dec
xchg
sarb
out
sbb
mov
sbb
out
int3
dec
jl
inc
cmp
push
add
fs
out
lds
pop
or
into
and
cmp
sub
cmpb
push
jnp
xchg
outsl
cltd
xchg
aam
rorb
and
jmp
push
shll
aad
les
repnz
sarb
xchg
jmp
lods
sbb
dec
in
add
dec
cmp
neg
push
jae
fwait
lahf
ret
divb
inc
and
jns
mov
cmp
sbb
cmp
pop
pop
sarb
in
dec
mov
inc
ljmp
mov
in
lcall
jnp
push
dec
addr16
pop
push
add
add
xor
ret
pop
movsb
shrl
stos
mov
pushf
inc
notl
sbb
clc
dec
mov
aam
add
pop
xchg
lds
add
mov
sub
out
adc
or
push
ficoms
sub
push
lds
sub
pop
lcall
test
cmp
out
sub
sub
jae
test
push
rcrl
sbb
push
dec
mov
adc
ret
rcrl
rorl
int3
mov
sarb
cmpsb
mov
std
mov
add
xor
loope
pop
mov
movsl
pop
lret
cli
pop
mov
pop
push
cmp
testb
mov
sti
push
repnz
cs
or
xor
or
xchg
push
add
mov
push
lcall
stos
cmpsb
cmp
test
int3
cmp
clc
cmpsl
test
pop
outsb
xchg
ljmp
mov
imul
xor
ja
imul
jns
test
pop
add
push
inc
xchg
stos
xchg
out
and
mov
xor
stc
mov
and
mov
mov
lcall
push
inc
lret
je
add
orl
aaa
outsl
mov
or
sub
sbb
shlb
idiv
icebp
lret
lcall
sbb
out
sti
mov
and
stc
subl
aad
and
repnz
cwtl
in
pop
or
cmp
sbb
sbb
cmpsl
pop
xor
mov
fnstcw
dec
inc
imul
lds
push
xchg
out
or
adcl
lcall
test
mov
pop
loop
xchg
push
push
mov
push
mov
jns
rclb
fucomp
movl
lret
fcoml
inc
lods
push
mov
test
jmp
int3
arpl
and
ja
inc
inc
and
jge
cmp
pushf
push
pop
shlb
sub
int3
stos
cli
and
test
cmp
cmp
push
in
mov
push
lahf
outsb
in
in
cmp
and
data16
jno
inc
int
and
jae
cmp
and
ja
data16
add
pop
sbb
out
lahf
in
in
xchg
push
inc
imul
pop
adc
cltd
scas
mov
pushl
daa
jmp
testb
out
bound
lea
stos
insl
mov
jne
ror
dec
lret
cwtl
lahf
cmpsl
lahf
loope
or
fcompl
leave
sub
adc
adc
inc
xchg
cli
inc
cmpsb
adc
test
ja
jecxz
mov
out
sbb
aad
scas
test
adc
xchg
test
in
xchg
aaa
je
xchg
xchg
in
ss
imul
cmp
and
dec
dec
jg
std
and
jbe
daa
fisubrl
inc
xchg
fdivrl
aam
lea
das
movsb
mov
mov
push
mov
shll
mov
dec
icebp
and
mov
mov
pop
adc
push
xchg
mov
inc
mov
push
out
dec
push
outsb
mov
push
add
adc
push
ljmp
ret
adc
pusha
fcmovnb
sarb
stc
mov
jmp
cwtl
mov
into
sbb
sub
jecxz
jle
std
test
xor
xchg
add
add
or
fcompl
adc
test
inc
sbb
sti
add
and
mov
xor
or
cmp
inc
push
gs
xchg
sti
jbe
dec
push
xchg
daa
aaa
jl
sub
enter
mov
insb
sbb
jle
xor
int
push
mov
adc
jmp
jno
sbb
add
adc
testb
adc
mov
mov
mov
mov
push
jg
fs
adc
cmp
push
iret
int3
sub
lock
sub
fs
je
xchg
lods
jae
inc
test
sbb
xchg
imul
icebp
mov
sbb
mov
adc
xor
in
xchg
dec
fldenv
imul
push
test
dec
dec
dec
sub
inc
or
sub
mov
ret
sub
inc
and
xchg
ret
stc
ret
xchg
sub
xor
inc
addb
loopne
xchg
push
lcall
in
repnz
enter
xchg
inc
mov
mov
lock
clc
bound
mov
lcall
inc
inc
adc
and
fistl
in
icebp
fiadds
lret
add
xchg
fwait
ljmp
inc
xchg
ret
xchg
inc
movsl
scas
not
leave
in
out
inc
xor
ss
and
ficoml
sti
inc
xchg
and
jl
mov
movsl
cmp
inc
mov
das
popf
mov
sbb
aas
pop
dec
push
add
xchg
adc
out
divl
push
jecxz
sbb
mov
push
ja
jo
je
shrb
dec
lret
movsl
sbb
jle
mov
pop
inc
push
pop
icebp
mov
xor
std
scas
mull
lds
daa
cltd
ficompl
int3
lods
outsl
daa
repnz
scas
cmp
jp
js
inc
push
popf
push
adc
jbe
pop
orb
inc
inc
adc
inc
call
push
mov
add
add
sub
mov
jl
or
adc
js
lahf
test
push
or
jge
and
mov
loope
jno
addr16
sti
fsts
mov
shll
cltd
sbb
pop
shrb
cli
aaa
div
dec
push
mov
or
push
adc
repz
je
cld
sarb
xor
cwtl
popa
dec
testb
xor
and
mov
pop
lea
jns
xchg
and
pushf
out
or
jae
xchg
dec
repnz
mov
mul
lods
push
mov
cmpl
mov
jmp
insl
inc
test
mov
sub
out
mov
inc
fcomps
pusha
lret
notl
jno
lret
push
pop
cli
dec
dec
fcomp
add
shll
in
loopne
lahf
aaa
addr16
popa
incl
in
in
cmp
imull
imul
dec
inc
sbb
cltd
xchg
or
or
lea
or
hlt
outsl
roll
shll
xchg
jecxz
test
addr16
and
pop
and
add
push
ficompl
cmp
pop
mov
push
push
data16
mov
xchg
mov
mov
sub
cmp
or
inc
pop
inc
push
mov
jb
and
cmpsl
mov
jae
pop
jne
sub
mov
cli
push
lods
adc
sbb
xchg
jg
sub
xchg
mov
and
lret
mov
outsb
inc
pusha
fidivrs
jl
loop
add
outsl
adc
cltd
imul
jno
enter
sbb
nopl
into
fsubs
and
or
mov
adc
jbe
inc
sbb
out
stos
pop
mov
jnp
mov
pop
push
lahf
aam
mov
inc
jns
lahf
loop
lods
fnstenv
fs
sub
push
add
movb
outsb
lret
and
outsb
test
out
mov
push
xor
jl
pop
faddp
adc
push
fcmovu
mov
inc
adc
xor
sub
sbb
lea
ja
mov
cltd
lret
out
sti
jne
es
pop
jl
notl
xor
loope
pop
jg
inc
aam
pop
add
clc
pop
stos
pushf
mov
out
jge
mov
out
ss
outsl
out
xchg
dec
xor
xor
insb
pusha
ljmp
lahf
jae
shr
jns
into
push
jl
add
sbb
mov
push
and
or
lock
push
mov
and
movsl
inc
xchg
mov
in
stos
fstps
inc
sbb
dec
dec
adc
push
int
or
cmp
pop
fimull
subl
or
pop
inc
sar
clc
or
loop
xor
ret
out
in
subl
loope
cmp
gs
jmp
mov
pop
xchg
sub
cwtl
test
jno
xor
aad
popf
jb
mov
mov
jne
add
cmpl
mov
pop
mov
and
leave
jo
lock
mov
hlt
enter
andl
jecxz
mov
leave
imul
sub
into
loop
sbb
sub
mov
test
std
repz
mov
mov
or
add
in
inc
jae
adc
push
adc
pop
xchg
pusha
in
xor
jmp
enter
cld
push
adc
cmp
inc
inc
jo
shrl
inc
movsb
cmp
lea
ss
scas
int
lret
das
inc
mov
test
mov
imul
dec
aam
es
ljmp
cmc
pop
pop
mov
pop
test
dec
mov
inc
out
aaa
dec
pusha
ret
or
out
sub
inc
iret
mov
mov
sub
inc
cmpsl
dec
dec
orl
insl
fldt
ret
loopne
xchg
add
cmp
mov
test
pusha
pop
sub
sahf
sbb
push
stos
test
stos
mov
inc
sub
adc
mov
stos
dec
lret
rorl
scas
lods
js
mov
cmp
cmp
jnp
sbb
pop
mov
pop
or
mov
out
out
cltd
mov
rorb
jge
out
out
std
sub
pop
xchg
pop
push
adc
repz
popa
cmp
xor
jne
inc
fs
pop
bound
xor
divb
je
mov
imul
sub
dec
lcall
bound
rorl
mov
sarb
dec
dec
and
orl
roll
loopne
sub
push
in
jno
cli
cmp
add
push
test
es
std
dec
bound
cmp
inc
scas
call
jnp
std
sub
mov
insb
dec
fmul
jmp
adc
add
mov
out
adc
aad
fiadds
jne
scas
outsb
shl
sti
jle
xor
enter
out
xchg
push
popa
js
mov
mov
cwtl
loop
cmpl
cld
pop
pop
jl
mov
push
or
xchg
mov
fcoms
sub
cmp
sub
or
out
inc
cmp
inc
in
push
enter
dec
mov
out
sub
fnsave
daa
dec
jmp
jnp
fxtract
sbb
pushf
ret
mov
pop
and
xrelease
push
clc
push
xchg
mov
mov
jmp
pop
dec
inc
xchg
sub
mov
popf
in
mov
or
scas
dec
rorb
pop
fiaddl
sub
mov
add
sub
jmp
hlt
gs
jns
sbb
in
push
rol
shrl
mov
sbbl
rcl
int3
inc
iret
clc
cwtl
popl
sub
push
nop
add
add
sbb
rcrl
xor
adcb
test
adc
push
icebp
ja
push
icebp
lock
and
out
jp
js
xchg
or
inc
or
adc
fiadds
pop
aam
inc
fcmovnbe
loopne
dec
iret
add
ja
push
stos
xor
outsl
in
cmc
pop
fisubs
popf
adc
daa
ljmp
inc
fs
daa
in
mov
jg
mov
imul
xor
and
subb
jg
push
incb
pop
cld
xchg
xchg
ljmp
pusha
xchg
bound
sar
inc
nop
mov
push
sub
bound
push
lods
mov
add
and
into
or
pop
insb
ret
and
fnstenv
nop
mov
enter
fstp
rcr
dec
cwtl
das
rol
movsl
jmp
in
jge
push
push
call
mov
add
clc
cwtl
repnz
or
push
dec
adc
push
out
mov
stos
mov
scas
jp
test
in
std
lds
lret
insl
pop
cld
pop
sbb
mov
into
cmc
push
mov
jns
mov
xor
ret
ss
repz
loop
psubsb
rolb
sbb
pop
aaa
fwait
sub
push
mov
sub
mov
or
ja
jnp
jmp
ret
jnp
adc
lret
push
cmp
out
jg
bndstx
repnz
push
popf
or
or
test
inc
fdivr
call
inc
out
ret
popa
mov
stc
sahf
lock
mull
xor
fidivs
aaa
and
inc
jbe
inc
mov
cmc
and
xchg
daa
stc
or
push
xor
or
es
cmp
sti
xor
pop
add
aas
dec
es
mov
jmp
cwtl
jmp
dec
cmpsb
pushl
bound
fwait
pop
adc
aaa
loopne
loop
mov
adc
cli
pop
scas
mov
cli
pop
scas
mov
scas
icebp
pop
arpl
or
sub
fimuls
ds
ss
inc
jg
ret
in
dec
or
add
sub
inc
push
xchg
mov
xor
ss
dec
sub
jl
push
ss
cmpsb
inc
sbb
dec
xchg
cmpsb
inc
sbb
dec
xchg
xchg
sbb
outsl
lods
jbe
movsb
xor
inc
jp
mov
jns
cmc
pop
sub
imull
mov
aad
or
xchg
lock
adc
loopne
lret
mov
jl
xchg
mov
inc
xlat
pop
xchg
imul
inc
lds
jmp
into
call
sub
sbb
mov
dec
in
clc
push
push
and
loop
out
push
push
sbb
sub
push
fcmovne
xor
or
sbb
add
movsb
xchg
mov
sbb
add
sar
pushf
jge
insl
aaa
imul
fs
test
nop
out
push
pop
add
cmp
daa
add
rorl
popa
jb
adc
hlt
movsl
mov
cwtl
dec
push
mov
jns
gs
sbb
mov
sahf
xor
sbb
les
cmp
xor
popf
ret
jno
push
insl
int
xchg
loopne
cmpsl
lcall
mov
js
shlb
push
hlt
adc
xchg
mov
nop
aad
adc
cmp
xor
add
pop
arpl
inc
std
shlb
scas
push
sbb
push
jns
push
and
lahf
mov
push
jo
ds
repnz
shl
xchg
sbb
pop
dec
cltd
dec
inc
xchg
push
ljmp
in
stos
loope
inc
mov
or
adc
imul
std
sbb
aam
loope
lret
pop
xchg
adc
lahf
push
and
fildl
lods
popf
fs
mov
jle
push
pop
call
cmpsb
mov
xchg
sti
or
mov
lahf
je
pop
dec
mov
cmp
ss
dec
fwait
mov
xchg
lret
push
or
sbb
jb
fstpl
or
and
das
cltd
push
adc
lret
sbb
out
mov
xchg
pop
pop
pop
xchg
and
mov
clc
insb
jge
jle
mov
repnz
and
ljmp
push
cmpsb
fnstenv
pop
jo
and
lret
popa
movsl
nop
or
clc
sbbb
sbb
xchg
add
stos
add
xchg
es
push
xor
mov
test
xchg
jmp
testb
push
mov
inc
mov
jns
das
mov
ja
pushf
dec
or
jl
xlat
lea
cltd
or
mov
lods
aad
fistl
sub
adc
imul
cld
jl
jp,pt
mov
xor
mov
sub
popf
fldl
sub
in
setae
popf
jb
jbe
mov
xchg
aas
jmp
aaa
shll
sbb
js
adc
mov
push
fsubl
xchg
push
fwait
in
cmp
push
fildll
jns
in
clc
xlat
mov
lret
mov
leave
sub
sahf
xchg
cmp
sub
sbb
test
add
pop
repnz
imul
ret
shr
mov
fildl
inc
pop
adc
frstor
ret
lock
sub
push
mov
testl
jo
cmp
inc
out
js
cs
call
int3
in
mov
pop
rclb
in
fs
sub
imul
call
fistpll
pop
mov
dec
inc
aad
mov
in
mov
test
iret
sahf
cmp
lret
int
out
push
mov
out
cmpsl
sub
fcmovu
inc
mov
jne
js
loopne
lret
or
sahf
dec
mov
xlat
or
mov
fildll
push
das
jnp
pop
xor
add
dec
sahf
xchg
ds
jmp
sub
sti
sbb
xor
cmp
sub
or
cmp
jae
mov
out
out
jb
jmp
mov
mov
dec
dec
xchg
xchg
xor
cmp
shlb
mov
xlat
adc
clc
sarb
jp
loope
fyl2xp1
dec
mov
ja
mov
repz
jmp
sbb
and
mov
dec
jecxz
and
inc
aad
mov
or
cmp
lea
aam
lret
scas
popf
stos
add
sub
dec
fcomp
jmp
lret
jp
xor
stos
jmp
imul
mov
mov
fs
stos
push
push
xchg
cmc
shrb
fmull
iret
mov
xchg
pop
fnstenv
sbb
xchg
int
cwtl
std
add
call
push
pusha
ljmp
jne
dec
push
inc
neg
ss
jae
mov
bound
std
ljmp
fwait
mov
mov
add
cltd
mov
and
mov
and
int3
mov
pop
xchg
loopne
les
inc
outsl
clc
and
sbb
jp
aas
mov
dec
sbb
inc
scas
cmpsb
test
inc
pop
mov
cmp
jnp
icebp
loop
add
repz
mov
or
int3
xchg
inc
cmc
xor
popf
and
sbb
sti
adc
mov
mov
jle,pn
test
xor
xchg
into
push
mov
popa
or
mov
jle
mov
sti
testl
push
pop
xorl
and
lahf
adc
pushf
flds
cmpl
daa
mov
cmc
shlb
lock
clc
xchg
add
sub
lea
mov
ret
fwait
mov
test
jl
cmp
ret
ljmp
lods
movsb
and
adc
push
inc
mov
mov
pop
fisubl
mov
jge
arpl
jbe
push
jg
cmp
cmp
je
lret
jmp
mov
push
cmc
jnp
or
cmp
cwtl
in
cli
enter
pop
ds
ds
sub
pop
repnz
arpl
out
or
fidivl
cmp
push
cmc
adc
pop
pop
lret
lds
and
sub
dec
aaa
insb
dec
ret
dec
sub
fstpt
cltd
xchg
shrb
fmul
enter
jg
xchg
push
add
sub
loopne
data16
movsl
or
int3
and
sub
sbb
xor
mov
jne
gs
mov
imul
dec
push
jne
xchg
cld
dec
cli
out
mov
or
pop
imulb
pop
or
mov
dec
xchg
or
or
push
dec
xor
push
mov
dec
sbbl
and
mov
push
cld
ljmp
pop
aam
popf
enter
jle
fstp
add
das
fsts
aaa
popf
dec
in
fildl
mov
xor
mov
or
mov
jp
mov
jmp
xchg
jo
mov
and
pop
mov
outsb
arpl
and
and
das
dec
or
push
imul
xor
mov
lods
inc
fcompl
and
sbb
mov
and
insb
je
jecxz
and
jno
xchg
lods
jle
nop
in
arpl
test
push
mov
xor
push
pop
imul
jbe
addb
adc
dec
pushf
int3
stc
arpl
test
ret
pop
mov
mov
xor
sbbl
jle
or
fisttps
inc
stos
ret
call
xor
sbb
xor
sbb
and
repnz
addb
dec
pushf
es
pop
popa
inc
imul
out
loop
jecxz
mov
gs
test
out
fsubrs
std
jnp
movsl
mov
add
adc
sbb
jae
test
add
insb
adcb
sti
xchg
fcmovb
scas
in
rcrl
aam
loopne
mov
shr
sbb
or
scas
stos
xor
or
pushf
mov
push
mov
lret
cld
xor
shrb
lods
mov
and
sahf
mov
xchg
pop
std
out
icebp
push
call
dec
inc
lods
jg
mov
std
push
push
out
add
popa
es
in
adc
xor
cmp
ret
in
mov
cmp
repnz
loope
subb
outsl
int
xchg
ja
sbb
push
lods
lahf
enter
sub
mov
in
loop
iret
pusha
jge
pop
sbb
es
int
mov
pop
cmp
test
imul
cs
mov
pop
scas
sub
enter
fistps
in
jne
frstor
test
xchg
add
imul
jns
mov
xlat
pusha
scas
dec
push
add
stos
shlb
adc
cwtl
pop
jle
lahf
xor
loope
mov
add
push
fwait
stos
enter
loope
aad
adc
in
nop
xchg
lea
jno
or
pop
lods
xor
cmp
sbb
fiaddl
lock
jae
xchg
stos
inc
inc
jl
jmp
jo
fisttpll
dec
add
stc
push
pop
inc
jge
sub
push
loopne
mov
push
sub
add
jb
stos
dec
adc
lock
sub
enter
push
mov
xchg
mov
push
fucomi
or
adc
cmp
inc
push
sbb
out
xor
int
inc
std
sbb
lret
in
hlt
fs
aad
xchg
enter
mov
pop
int
pop
jecxz,pt
mov
and
mov
addr16
adc
push
xor
adc
xchg
arpl
and
lds
mov
or
inc
out
add
jnp
dec
loopne
out
mov
jo
and
in
popa
ret
mov
loop
pop
mov
imull
adc
or
and
pop
and
jbe
inc
dec
aaa
jl
jo
rolb
dec
ret
push
cli
jb
test
cwtl
xchg
ret
cmp
stos
and
xchg
into
push
sub
push
inc
out
push
outsb
push
dec
lret
xorl
insl
and
pop
push
and
cld
mov
xchg
and
inc
stos
stc
rcl
sub
mov
loop
cmpsl
sub
arpl
in
cmp
xchg
pop
cs
push
outsb
sbb
jecxz
mov
cld
outsl
lea
mov
xor
adc
cmp
push
fadds
pop
push
inc
rcrl
lock
mov
push
repnz
sbb
sbb
insb
lock
mov
xor
xorl
xchg
pop
shl
and
dec
or
pusha
outsl
out
rolb
push
lds
mov
push
or
sbb
xchg
dec
cld
stc
lret
adc
aaa
and
xor
jns
in
adc
sbb
or
lret
subl
mov
in
fsubrs
mov
sub
mov
dec
in
icebp
test
push
jge
pop
mov
mov
mov
mov
adc
jmp
out
pop
jle
iret
into
cmpb
out
adc
jno
xchg
and
call
or
and
xchg
xor
popa
addr16
ffreep
mov
cmp
lods
sub
into
out
mov
insb
lcall
cmp
cwtl
fs
nop
cmp
sub
loopew
cltd
sub
scas
cmp
lds
out
sbb
sbb
pushf
notl
addb
mov
fimuls
cmpsl
xor
movsb
aad
out
xor
mov
into
pushf
cwtl
mov
mov
dec
lret
dec
mov
mov
loop
sti
pop
and
adc
flds
xor
xchg
stos
out
or
pop
push
adcl
mov
mov
mov
popl
mov
dec
shrb
adc
in
xchg
cmp
inc
add
and
ljmp
pop
add
mov
rorb
inc
dec
das
mov
adc
pop
xor
cmc
insb
frstor
xorl
and
stos
ror
mov
xchg
mov
jle
and
test
adc
aaa
add
xchg
daa
sbb
sbb
jp
jmp
add
jno
mov
aad
xor
xchg
pushf
and
push
mov
negb
fimuls
inc
adc
sub
out
lods
scas
repnz
scas
shlb
pop
lock
pop
xor
fsubr
imul
xor
dec
faddl
add
cmp
fidivl
adc
addr16
lea
push
leave
xor
mov
and
in
and
bound
cmp
cmpsb
fbstp
adc
jnp
add
movsb
push
int3
outsb
or
data16
cmp
jbe
adc
lods
mov
clc
jnp
pop
jb
in
mov
imul
sbb
clc
mov
push
and
dec
cs
adc
and
sbb
push
sarb
test
jnp
cmp
xchg
jle
nop
push
cmp
inc
and
cmp
insb
xor
adc
in
imul
mov
push
fimull
push
inc
movsl
xor
inc
lods
loop
push
xor
jae
cmp
sbb
jne
call
pop
cmpsb
outsl
scas
jle
or
out
cld
popf
mov
pop
dec
or
nop
sahf
xchg
ss
mov
std
in
mov
adc
rorb
leave
jo
mull
nop
dec
bound
jne
imul
mov
pop
hlt
sbb
les
jle
incb
xchg
les
dec
andl
ret
jno
push
shrb
and
xor
xchg
ret
insb
sbb
cld
test
xchg
jno
sub
outsb
mov
lds
ret
pop
jmp
adc
jl
or
or
mov
aad
mov
fwait
xlat
call
pop
movsl
enter
sbb
cmpb
pop
shrb
daa
push
mov
rclb
pop
xchg
mov
ret
cmpsb
adc
xchg
dec
adc
test
popa
aas
push
xchg
cmpb
push
fsubl
adcl
das
mov
scas
mov
lock
addb
loopne
mov
arpl
dec
jno
out
fsubrs
jge
test
inc
ret
das
ret
push
mov
adc
cld
outsb
xchg
jnp
add
pushf
in
dec
dec
xchg
mov
or
out
popf
jp
adc
mov
in
packsswb
dec
xchg
xor
mov
mov
into
jle
mov
mov
popa
cmp
dec
mov
dec
add
xchg
imul
push
cmp
int3
aas
adc
cmpsb
das
icebp
add
sub
inc
adc
rcl
fwait
mov
orl
cmp
sbb
icebp
jo
aas
out
icebp
insb
js
xlat
mov
rcrl
mov
push
xchg
hlt
sarl
jnp
aam
lret
rclb
ljmp
sub
pop
or
inc
adc
jnp
test
or
dec
repz
movsb
imul
or
xor
dec
out
sub
mov
out
bound
lret
mov
out
les
mov
pop
cs
dec
cmp
aam
arpl
add
lods
leave
arpl
mov
push
pusha
mov
add
fsubrl
movsb
int
push
test
push
cmpb
icebp
sub
icebp
das
jg
jae
jnp
pop
aad
stos
jg
xchg
xor
out
outsl
les
and
cmp
push
jae
fcmovnb
out
daa
addr16
inc
or
lea
ror
test
mov
inc
lds
out
adc
stc
xchg
sub
inc
mov
jge
lcall
hlt
aad
test
or
adc
inc
mov
pop
movsb
fimull
rcll
sahf
pop
jnp
inc
add
add
enter
pop
adc
fimull
sub
rorl
imulb
pop
mov
mov
movsl
sahf
fbstp
mov
mov
test
xor
flds
and
insb
lods
pop
pop
push
xchg
std
int
sbb
mov
cmp
sbb
cltd
and
add
rcll
fisubl
insb
sti
lcall
fnstsw
mov
loopne
xor
daa
adcb
sbb
out
mov
pop
xor
outsb
test
arpl
cmp
push
inc
mov
aaa
cmpb
cli
jns
push
aad
xchg
push
xchg
lock
lods
fidivrl
push
test
mov
scas
ret
xor
push
call
lds
out
jno
daa
arpl
mov
push
cli
xchg
mov
call
aaa
loopne
inc
sahf
mov
loope
scas
pop
adc
push
mov
jb
push
mov
fs
sbb
inc
cmc
imul
mov
mov
sahf
movsl
push
push
cmp
divl
cmpsl
hlt
jl
aaa
shl
mov
lock
fists
dec
mov
cmc
sub
adc
xchg
mov
mov
ret
mov
bswap
cmc
cmpsl
call
pusha
hlt
xchg
aas
xor
dec
mov
bound
or
dec
lcall
out
lea
adcl
jl
pushf
sub
pop
xchg
jb
jg
mov
mov
int3
popf
jno
sbb
cltd
aaa
enter
xchg
push
lods
ja
xor
lea
in
push
inc
enter
xor
pop
sbb
sub
out
adc
xchg
popf
add
dec
test
cmp
popa
movl
and
or
sbbl
out
aas
xorb
inc
push
negb
jns
xchg
xchg
sbb
ret
clc
dec
lret
xchg
xor
fldenv
int
lcall
fbld
add
int3
gs
loop
ja
pusha
xchg
bound
data16
mov
orl
ljmp
test
xchg
fidivrs
jle
jb
add
fsub
jb
sbb
rolb
dec
jmp
sbbl
xor
adc
stc
jbe
fsubr
je
and
loope
scas
inc
cmp
sub
movsb
fnstcw
xchg
xor
or
inc
js
test
push
adc
or
adc
iret
lret
in
pop
push
add
add
insb
mov
add
fcmovnbe
mov
xchg
xchg
and
xlat
fistpl
mov
mov
sub
lret
jnp
and
push
and
sarl
hlt
out
add
jp
sub
adc
hlt
jnp
mulb
lret
test
inc
push
outsl
dec
and
loop
call
mov
shll
nop
xchg
inc
inc
mov
out
mov
xchg
aam
repz
sub
xchg
xchg
sub
jp
pop
repnz
mov
mov
add
and
cli
xor
xchg
nop
jbe
cltd
je
sbb
pop
lret
bound
ja
pop
bound
pushf
ds
mov
xor
in
mov
add
add
mov
xor
cmp
das
int3
push
rorl
jmp
pop
shr
aas
adc
ljmp
jmp
in
jmp
or
cld
call
mov
mov
das
jno
ljmp
lods
push
je
and
cmp
cmp
push
test
inc
mov
test
js
adc
clc
imul
insb
push
jmp
jb
or
ret
mov
fucomi
pop
sbb
xor
pop
mov
add
mov
xchg
cmp
xor
das
pop
nop
test
lods
push
dec
mov
imul
fstpl
fsubs
jp
nop
ret
xchg
outsb
and
sub
out
into
fstpl
adc
sbbl
mov
bound
xchg
popa
ficomps
pop
stc
jp
xor
lahf
fistps
dec
inc
adc
aaa
in
push
inc
bound
aaa
mov
mov
sbb
mov
xchg
hlt
jne
pop
pop
dec
pop
mov
mov
mov
loop
adc
rorb
mov
pushf
test
sbb
jmp
jb
out
jge
or
inc
bound
sti
or
stos
cmp
xor
jle
adc
jl
cmpsl
les
cmp
xchg
icebp
aad
es
inc
jnp
mov
popf
sub
jge
imul
xchg
pop
sbb
jg
sti
push
bound
nop
cld
push
jge
and
jo
cmpsb
jae
xor
inc
scas
das
mov
add
mov
jg
clc
jmp
adc
shr
push
cmp
xchg
cli
xor
in
mov
ljmp
adc
out
lods
jle
mov
push
xor
cmp
and
arpl
pop
xchg
xchg
mov
push
es
mov
xchg
clc
test
adc
cmc
stos
and
dec
add
and
jne
mov
divl
subb
es
mov
movsb
jge
enter
push
in
push
shrb
enter
pop
xchg
divl
sarl
pop
shll
jecxz
pop
repnz
mov
sbb
lcall
cltd
fstps
dec
push
sub
jb
pop
or
or
fisubs
jbe
xor
rcl
xchg
jbe
cmp
xlat
arpl
push
int
xchg
mov
std
das
lahf
iret
pop
jnp
test
cmpb
add
imulb
mov
or
lret
jbe
jl
mov
xchg
push
xchg
push
js
mov
loopne
push
test
jne
stos
ret
dec
push
add
aam
xor
jg
inc
push
jmp
daa
pop
pop
inc
cwtl
aad
lods
cld
stos
mov
push
ljmp
xor
hlt
jne
push
es
lret
sub
sbb
lcall
mov
int
dec
inc
movsb
lcall
mov
clc
daa
adc
or
leave
pop
inc
lret
cli
loope
and
mulb
or
mov
lret
xchg
adc
decb
or
sbb
stc
inc
jns
sub
aad
adc
pop
in
insl
or
cmp
inc
mov
and
xchg
int
lods
inc
lret
cmc
iret
sbb
cmp
push
stc
add
loopne
sbb
out
imul
insl
dec
dec
and
jno
sub
arpl
and
push
dec
pop
sbb
jae
int3
inc
mov
outsl
mov
mov
sarb
sbb
fisttpll
sbb
mov
cltd
insl
mov
int
adc
mov
mov
push
and
sub
add
mov
ljmp
mull
es
cmc
or
or
les
stc
inc
push
in
icebp
lret
imul
aaa
or
and
sbb
pushl
mov
adcb
movb
fnstcw
and
pop
scas
mov
xchg
mov
jmp
repnz
pop
je
pop
rorb
cmpsb
mov
or
shll
in
test
xchg
nop
or
outsl
inc
jg
test
or
cmp
and
pop
scas
stc
xor
test
mov
sbb
push
xor
adc
pop
stc
fwait
lock
xchg
or
rcll
int
cmp
fcom
mov
fs
sarl
adc
sub
mov
repz
mov
cmp
cwtl
inc
pop
mov
mov
les
loope
xchg
pop
dec
xor
inc
cli
jno
adc
dec
lods
leave
ret
push
xor
jo
pushf
ret
aas
sbb
adc
ds
pushf
fcoms
push
mov
push
popf
pop
pushfw
mov
push
push
cmp
lods
cmp
pushf
xchg
add
xor
insl
das
lods
idivl
ja
push
rcll
loope
fs
subb
pushf
pusha
movsb
lock
xor
inc
in
xchg
cmpsl
shlb
mov
loope
stos
int
rol
push
sti
arpl
xlat
add
jecxz
sub
mov
lret
les
addr16
sub
mov
shll
jl
mov
mov
sub
inc
mov
mov
out
mov
pushf
xchg
lahf
aas
mov
out
ljmp
cmc
or
mov
hlt
mov
jo
pop
pop
ljmp
xchg
test
icebp
xchg
test
testb
lds
cli
xor
mov
and
jo
aam
inc
in
sbb
pop
lret
push
fdivrl
and
sub
mov
pop
add
inc
inc
rorb
mov
outsb
idivl
adc
iret
in
pop
scas
xchg
ds
negl
inc
sbbl
lret
or
insb
pop
stc
out
popa
int3
fcomps
subl
xor
cmc
cmp
mov
add
xor
dec
test
data16
push
movsb
mov
dec
imul
lcall
or
nop
lods
jb
mov
push
pop
mov
stos
inc
lahf
jne
bnd
xchg
scas
or
adc
sbb
cmp
sbb
xchg
dec
jb
aaa
out
adc
jne
pop
cmp
lods
adcl
cmp
sub
push
cmc
outsl
mov
scas
push
dec
fsubr
iret
les
mov
dec
push
pop
fs
dec
fsts
hlt
setge
scas
fistpll
jecxz
xor
inc
sub
xchg
and
push
xorl
sub
lds
cmpsl
xchg
out
and
orl
addr16
pushf
loop
or
pop
or
out
lret
xor
scas
lahf
add
out
xor
gs
jg
and
adc
fildl
sbb
insb
rcrl
dec
xchg
fwait
sub
sti
push
hlt
dec
mov
fisttpl
sti
popf
fbld
out
stos
push
std
lahf
loope
sti
sbb
xchg
fs
mov
stos
mov
or
jl
mov
leave
or
pop
xchg
fwait
mov
pop
orl
addb
lret
cmp
js
nop
fcompl
pop
out
xorb
addb
testb
jno
jb
rorb
shll
cltd
pop
mov
jae
js
icebp
add
je
es
mov
test
insl
dec
jno
jns
xchg
imul
mov
inc
pop
sbb
and
popf
pop
inc
inc
xor
and
sahf
int3
bound
adc
mov
pop
iret
push
adc
loope
cmp
enter
mov
mov
cmp
jb
adc
mov
shr
std
imul
lcall
adc
push
in
data16
test
inc
mov
cmc
mov
mov
cmp
xchg
and
lock
pusha
pop
cmp
incl
add
push
rolb
mov
test
ja
mov
or
int3
add
cli
ret
sub
mov
js
pop
mov
movsb
cmp
mov
push
mov
jo
mov
push
das
mov
stos
aad
and
mov
les
fisubs
cmc
or
fstpt
push
push
cmc
inc
in
pop
or
jbe
popa
in
cmp
push
jb
shrb
test
jge
jg
add
xchg
or
jns
push
add
pop
or
shlb
loope
push
ret
out
daa
push
mov
imul
jns
xor
pop
inc
test
enter
jmp
sbb
gs
js
pushf
aaa
sub
aas
popf
addr16
adc
iret
lods
mov
dec
and
cwtl
jle
mov
stos
rorb
sbb
cmp
orl
test
mov
mov
sub
push
scas
fcoms
cmp
push
adcb
mov
inc
adc
jecxz
je
imul
mov
push
cmp
scas
mov
mov
adc
ja
mull
dec
movl
and
jecxz
pop
mov
scas
inc
push
lods
in
aas
cwtl
insb
movsl
jne
cmp
insl
add
mov
ret
out
cmpsl
rcrl
xchg
mov
inc
mov
xchg
sbb
adc
ja
mov
clc
mov
mov
shr
mov
xchg
inc
xchg
dec
fisubrs
dec
popa
lcall
mov
divb
icebp
insl
adc
cld
stos
dec
es
jb
mov
ja
jmp
inc
xchg
movsl
out
jb
leave
int3
cmp
je
mov
insl
cmp
mov
lea
divb
push
cmp
fidivl
mov
outsb
add
add
aad
hlt
xor
out
mov
test
inc
dec
daa
outsb
xchg
shrl
inc
xor
push
call
test
test
sbb
movq
cwtl
mov
sarl
js
orb
pop
aaa
fld
movsb
jecxz
and
movb
in
inc
xor
mov
repnz
test
lret
je
test
add
ret
hlt
mov
outsb
pop
xor
inc
inc
scas
fistps
push
stos
jl
pop
jp
ret
mov
ja
adc
popa
inc
pop
xchg
ja
dec
jb
xchg
jae
pop
push
jb
adc
loope
inc
rcrl
mov
lret
sti
push
dec
aam
fldcw
lret
ljmp
adc
xor
loopne
inc
mov
or
lods
push
outsl
shlb
jbe
mov
jne
lcall
cli
lcall
mov
or
cmp
push
sahf
clc
jns
adc
in
lahf
pop
sub
sbbl
adc
mov
leave
mov
rorl
sarl
movb
stos
jg
or
push
std
adc
adc
outsl
test
repz
dec
jne
shll
je
mov
adc
mov
arpl
cmpsl
adc
test
jp
mov
inc
pop
add
lret
mov
mov
dec
pop
and
sbb
stos
sarb
rcrl
mov
jo
loope
mov
pop
mov
addr16
stc
pushf
fbstp
add
mov
test
mov
test
pop
in
stos
fmull
add
xchg
xchg
sbb
adcl
pop
jge
nop
cmp
mov
iret
stos
jg
push
mov
mov
idiv
loopne
xor
imul
aaa
arpl
int
mov
and
daa
outsl
hlt
push
daa
mov
mov
mov
cmp
or
sbb
orl
and
popf
aad
push
incb
jg
fnstenv
test
or
jno
push
xchg
push
mov
insl
das
adc
cmc
and
fwait
jns
fsub
mov
jecxz
xchg
jno
out
loope
lods
add
inc
push
dec
in
sbbb
aaa
xchg
fisubrl
pop
ljmp
push
es
mull
mov
loop
test
xor
xor
pop
xor
ds
xchg
sub
dec
fmull
mov
adc
sbb
and
icebp
pop
push
jle
cmc
sbb
sub
pushf
ret
or
sub
outsb
std
movsl
mov
adc
push
cs
idivb
jp
dec
or
and
inc
enter
jmp
mov
mov
lahf
cld
int
out
mov
cmp
add
lds
xor
pop
repnz
mov
popf
jecxz
adc
scas
and
notb
add
daa
jmp
xchg
dec
cwtl
test
nop
inc
loopne
mov
jecxz
xchg
xor
repnz
pop
adc
stos
imul
repz
sahf
mov
mov
push
sbbb
pop
and
cmp
dec
out
jg
mov
subl
push
rol
loope
inc
ds
shl
repnz
fidivl
imul
xor
xorb
or
or
cmpsl
xor
ja
adc
popf
dec
pushf
negb
lahf
in
add
negl
add
mov
fdivrs
mov
xchg
insb
dec
adc
lret
dec
mov
dec
pop
inc
jmp
imul
mov
mov
scas
xchg
js
lock
pop
leave
push
push
cmpsb
add
cmp
popf
pusha
jmp
movsb
ss
dec
xchg
sbb
daa
and
ret
inc
inc
frstor
fcmovnu
sbb
cwtl
push
shl
sub
outsl
je
adc
ret
lock
mov
cmpsb
sub
shrb
out
fwait
push
imul
fildl
and
mov
cmc
dec
iret
icebp
repz
ret
jnp
lock
add
push
and
imul
adc
dec
mov
mov
pop
popa
jecxz
push
fistpll
ds
and
kmovw
jmp
popa
test
ja
sub
push
mov
jns
adc
mov
inc
ud1
lods
sub
xchg
and
dec
stos
add
cmp
jae
mov
add
repnz
cs
aam
arpl
jb
out
test
filds
pop
pop
and
je
and
and
ja
xchg
cmp
cmpsl
test
sub
cmp
sub
dec
loop
cmp
xchg
fcmove
push
popa
stos
cmp
lcall
or
inc
pop
xchg
pop
mov
cwtl
gs
mov
inc
sbb
xor
mov
sub
dec
stos
xor
jp
test
dec
flds
xchg
rolb
mov
popl
mov
pop
cmp
mov
jmp
mov
mov
pushf
push
jg
lahf
rcl
fcmovne
lret
lds
push
add
xor
imul
out
loop
mov
xor
mov
cli
ja
sub
jns
orl
and
or
fisttpll
fstpt
mov
sub
fdivl
push
outsb
int
fcoml
pop
and
push
lret
xor
repnz
sbb
sbb
ret
xor
hlt
pop
in
adc
mov
sbb
pusha
add
cmpsl
nop
inc
andb
loop
imul
pop
shrl
add
xor
imulb
add
outsb
movsl
es
jp
sbb
pop
andb
aaa
inc
imull
stc
cmc
test
push
mov
mov
adcb
or
mov
and
add
fsubl
out
test
jp
add
test
and
adc
cmp
mov
jno
and
mov
or
outsb
fwait
mov
rep
jns
movsb
pop
mov
inc
daa
push
mov
push
mov
mov
stos
push
out
jle
xchg
mov
hlt
add
ds
je
in
notb
push
push
mov
mov
adc
cmp
subl
pop
int
xor
ret
jle
pop
add
sbb
dec
ja
les
lea
adc
xor
dec
lock
add
jo
mov
mov
jecxz
lods
or
daa
adc
pop
dec
cmpsb
js
repz
mov
inc
mov
bound
clc
je
cmp
out
clc
dec
insl
adc
das
andb
push
insb
sahf
mov
mov
mov
jmp
xor
dec
push
dec
popa
das
aas
inc
lods
jae
fcoms
into
mov
sbb
les
popl
test
mov
sbb
or
adc
jbe
xor
std
xor
js
adc
xchg
inc
mov
rol
loopne
loope
aas
rclb
sub
inc
ret
push
adc
sub
repnz
out
mov
cmp
mov
aaa
lods
adc
cld
jmp
inc
nop
out
test
sarl
mov
in
push
mov
xor
sub
pop
stc
loope
inc
leave
xor
or
movsb
cltd
out
fwait
pop
jae
popf
mov
cmp
mov
jp
and
loopne
stc
push
jg
shlb
push
inc
movsb
call
mov
iret
out
or
inc
mov
cmp
cld
or
cmp
lods
loop
out
xchg
xchg
mov
aaa
ret
sbb
mov
mov
adc
mov
xor
mov
stos
pop
xchg
in
scas
sarb
out
jmp
jecxz
mov
and
testb
aas
int
sbb
addb
lret
push
in
sbb
pop
out
test
es
int
imul
shl
pop
pop
push
inc
add
scas
inc
inc
sahf
enter
pop
jmp
imul
xor
repz
xchg
mov
in
pop
pop
scas
fwait
mov
test
jp
mov
lcall
mov
cwtl
rolb
xchg
push
push
int
dec
or
shrb
out
lods
aaa
shrb
mov
cmp
xor
test
int
ja
movsb
push
xchg
sub
pusha
xlat
sub
pop
inc
push
outsl
mov
add
add
mov
adc
mov
test
cmovl
ret
mov
lret
dec
xchg
outsb
and
xchg
jl
leave
mov
mov
test
cli
mov
jno
jecxz
add
adc
pop
test
test
mov
jle
sub
push
mov
xchg
add
dec
mov
jo
mov
mov
xor
inc
ja
mov
pop
inc
mov
loope
mov
xchg
and
push
ficoml
pushf
mov
test
imul
pop
xlat
in
movsl
imul
es
mov
ljmp
lds
dec
mov
js
xchg
cmp
lahf
jae
jmp
jb
dec
sbb
pop
mov
out
cmp
test
inc
ss
insb
or
rclw
jle
aad
fcomi
xor
int3
push
adc
xor
dec
jo
in
jo
jbe
ret
xor
rorl
push
inc
sarb
sub
inc
in
dec
out
jb
fnstcw
lods
inc
xor
mov
jnp
cwtl
cwtl
pushf
pusha
or
pop
lahf
push
push
and
shl
int
or
mov
or
jns
sbb
xchg
pop
add
push
mov
test
stos
enter
or
std
push
jns
pushf
mov
inc
jl
shrl
add
push
adc
enter
adc
out
clc
popl
xor
fiadds
test
andb
loopne
imul
fcoml
pop
mov
leave
push
cmp
mov
sahf
cmp
inc
imul
xor
fnstenv
arpl
jo
addl
xor
nop
xchg
or
lahf
test
inc
shl
lret
das
sbb
pop
lea
jmp
cwtl
cmpsl
mov
mov
mov
xor
es
xor
jp
ficoms
out
inc
cmp
or
cld
cmp
shll
xlat
shll
insb
cmp
push
push
iret
sar
mov
xor
xor
test
movsl
sbb
pop
incl
cmpsb
xchg
gs
repnz
xor
aas
stos
shrl
xchg
and
jecxz
je
imul
cwtl
aam
inc
int
pushl
fstl
pop
out
mov
or
loop
push
cltd
adc
mov
frstor
sahf
mov
mov
add
sbbb
xchg
xchg
mov
aam
negl
xor
lock
jno
or
pop
cmp
pop
cmp
jb
out
loop
fcomps
nop
jns
mov
mov
mov
test
push
inc
inc
insl
ljmp
lahf
mov
jbe
in
mov
mov
push
jl
jecxz
jnp
push
aaa
jecxz
stos
mov
cs
jne
into
cmp
repnz
lds
fcomip
jne
inc
dec
sub
xor
je
fs
or
inc
add
arpl
pop
jno
rcrb
dec
mov
xchg
push
orb
pop
pop
aam
sbb
test
into
shll
or
cmp
mov
jg
int3
sbb
or
adc
push
adc
push
imul
lret
mov
sbb
and
add
ja
or
xchg
jns
xchg
sbb
std
sub
test
sbbl
sbb
pop
add
sbb
push
outsb
xchg
cmp
xchg
jnp
lods
pop
pusha
les
scas
push
xchg
jg
add
ret
inc
xor
movswl
inc
fldenv
ss
xchg
pop
pop
aas
hlt
adc
pop
int
fldt
ret
sub
movsl
pop
es
or
mov
mov
mov
add
scas
emms
add
aas
jnp
shrb
xor
movsl
adc
mov
popf
inc
cld
xor
and
out
shrl
mov
ret
aam
sbb
subl
mov
pop
xor
pop
inc
loope
lock
mov
mov
ljmp
lret
in
imul
cmpsb
mov
pushf
cmpsb
xor
mov
jb
insb
ret
fldcw
or
xor
out
gs
push
fdivr
mov
loopne
xchg
xchg
stos
rorl
jmp
adc
mov
cli
adc
outsb
or
xorb
mov
imul
leave
ret
out
mov
arpl
push
cld
mov
or
cmpb
or
sahf
push
arpl
jno
mov
cmp
lods
outsb
mov
shl
jg
jp
jb
adc
dec
adc
into
fimull
xor
fisubrs
sub
pop
lret
or
scas
hlt
pop
scas
shll
or
adc
clc
mov
mov
cmpsb
arpl
dec
sbb
add
push
sub
les
fwait
jae
jae
adc
incl
pop
push
mov
lea
pushf
pop
and
loope
add
pop
add
sub
cmc
mov
sbb
mov
sub
pushf
fsubs
xlat
repz
in
popa
int
dec
dec
je
push
cld
int3
cmp
mov
push
adc
subl
icebp
jge
inc
call
push
inc
and
sbb
ljmp
cmp
iret
and
dec
or
add
cmpsb
mov
std
test
out
scas
pop
sbb
add
inc
js
dec
or
xor
sbb
sub
or
or
push
add
dec
dec
subb
mov
jb
jp
repz
adc
xchg
sbb
add
cltd
int
push
jl
bnd
xor
sub
lock
je
adc
popf
pop
inc
pop
dec
shl
cmpsb
dec
pop
jnp
dec
mov
out
sbb
jp
pop
mov
xlat
lods
dec
jp
xlat
outsl
sbb
stos
jl
add
fisubl
pop
mov
jae
mov
jne
sbb
lret
mov
mov
inc
mov
test
jl
xchg
in
and
ret
add
pop
add
out
xlat
adc
xchg
mov
sbb
jne
fdivs
add
push
pop
std
jbe
idivl
add
shrb
mov
ss
and
pop
dec
push
mov
or
jno
sub
inc
movsb
xchg
movnti
in
fwait
test
or
cmpsb
dec
push
lea
ds
sub
js
ficoms
inc
lret
lea
or
or
pusha
std
fmull
je
mov
lret
sub
xchg
mov
lcall
je
pop
sahf
outsl
push
pushf
and
arpl
stos
push
sbbb
in
shlb
xlat
enter
jmp
add
and
ljmp
cs
xchg
sbb
dec
jno
test
mov
or
jle
pop
flds
xchg
lcall
push
pop
dec
push
cltd
ljmp
loopne
outsb
js
loopne
inc
dec
jp
fwait
mov
dec
je
jo
sub
fsubrp
mov
lds
inc
ljmp
xor
mov
arpl
sub
cmpsb
sub
leave
mov
bsf
mov
fs
sub
rcrb
pop
sarl
pop
test
rcr
fwait
icebp
test
call
mov
popf
sub
imul
scas
notb
addr16
mov
pop
iret
inc
sbb
inc
popf
clc
or
jbe
jle
inc
push
jns
inc
aad
push
ret
jmp
popa
jmp
or
iret
scas
pextrw
movsb
cwtl
push
add
adc
fucom
mulb
dec
xchg
jae
loop
sti
outsb
add
add
push
mov
lret
inc
mov
mov
adc
rcrl
faddp
sti
je
push
sub
in
pop
cltd
scas
lret
icebp
inc
and
xchg
mov
inc
mov
jl
addr16
mov
jns
adcb
popa
add
nop
add
mov
cs
dec
pop
xchg
adc
mov
popa
es
dec
and
pop
push
pop
in
repz
adc
push
mov
sub
aam
mov
mov
xchg
xchg
movsb
popa
mov
and
jle
jg
and
sahf
or
inc
pop
mov
mov
cmp
jmp
xchg
push
xor
pop
mov
jns
pop
sub
lock
cmp
lods
nop
cli
fisubrl
mov
fmull
adc
mov
fiadds
loop
sti
movsb
pop
out
in
fnstenv
sbb
xadd
test
xchg
aad
cmp
loope
ds
jns
sbb
sbb
sahf
ljmp
in
fs
add
pushf
xor
mov
stos
test
jg
push
mov
xchg
ss
out
cmpsb
testl
mov
mov
adcl
out
icebp
cli
cs
adc
jp
lahf
fsubrl
loope
push
jnp
mov
leave
data16
and
and
ja
dec
scas
scas
jmp
ds
loope
dec
in
test
sub
sbb
notb
lret
cmp
and
mov
cld
lods
sbb
pop
popa
lahf
cmp
sbb
mov
mul
call
or
add
arpl
test
dec
add
sbb
xlat
mov
pusha
je
sbb
test
testl
mov
pop
fildl
push
cmpsl
lock
shll
pushf
push
loop
jns
push
adc
jecxz
cmc
xor
hlt
fmul
or
cmp
xchg
push
push
pop
sub
add
and
push
cmp
mov
imul
sbb
lret
or
xchg
stos
rcr
mov
mov
inc
sbb
cmpsl
push
adc
jmp
mov
dec
jecxz
aas
dec
sbb
jnp
bound
push
cmp
pop
xchg
int
orl
inc
faddp
sahf
out
mov
sahf
loopne
dec
sbb
lods
lods
arpl
xchg
pop
dec
stc
ljmp
pop
cmp
cs
xchg
mov
sbb
xlat
sub
and
pop
je
movsb
ljmp
xorb
pushf
int3
std
sbb
jbe
add
add
xchg
xchg
dec
push
push
cld
bound
dec
cwtl
out
jb
les
divl
inc
xchg
pop
rep
cltd
aaa
cmpsb
fcoml
mov
push
test
sub
je
daa
pop
stc
aam
inc
rcl
sub
dec
pusha
ja
adc
inc
sub
mov
aam
sbb
pop
push
aad
stc
jle
mov
mov
inc
pop
inc
xor
adc
cwtl
adc
test
nop
sbb
aad
loope
js
and
dec
adc
in
add
pop
dec
and
and
mov
sub
push
adc
leave
in
sbb
push
imul
and
pushf
ror
inc
xor
adc
scas
ret
push
fwait
dec
cltd
sahf
sub
xlat
test
idivl
sbb
push
jno
test
adcl
mov
das
adc
ja
fwait
stc
insl
xor
outsb
ss
xchg
test
sub
popf
mov
xor
or
xchg
js
test
inc
mov
nop
add
clc
sbb
xchg
mov
in
xchg
fcmovnu
pop
dec
enter
out
fwait
dec
pop
lcall
ss
inc
mov
cmc
push
lahf
jge
pop
rorl
mov
mov
mov
loopne
fiaddl
sarl
test
xchg
fdivrl
cmp
clc
in
xchg
gs
adc
call
adc
in
ds
mov
movsl
enter
aaa
movsb
jnp
jnp
arpl
testb
cli
imul
push
push
xchg
loopne
into
cltd
pop
scas
outsb
mov
mov
pop
daa
add
out
xlat
loope
jecxz
xor
push
sbb
mov
in
mov
das
fadd
ja
test
pop
inc
mov
inc
mov
fadd
ret
cmp
xor
cmpl
push
movsl
xchg
xor
push
fwait
rcl
push
xchg
sbb
lds
push
mov
xchg
mov
aam
lcall
cltd
push
mov
cwtl
pop
push
mov
adc
push
fdivl
xor
push
leave
int3
xchg
dec
push
add
call
xchg
mov
and
cmpsb
arpl
ds
pop
cmpsb
pop
movsl
insb
xchg
push
cmp
cmc
inc
pop
push
add
cmp
xchg
pop
notb
push
and
cwtl
inc
push
test
jae
int
cltd
out
in
adc
mov
mov
jns
rol
outsl
sub
push
and
aam
and
xchg
push
imul
pop
in
xor
fcoms
adc
sarb
jbe
add
loop
stc
cmp
les
inc
jmp
test
outsl
mov
inc
stos
add
push
aam
xor
pop
adc
lock
enter
leave
shlb
addr16
incl
into
dec
ja
icebp
std
jae
cmpsb
xor
inc
jnp
dec
or
ss
cld
idivl
add
xchg
cmp
pop
sbb
dec
ds
push
sub
sbb
movsb
ficompl
and
mov
shlb
movsl
shll
push
out
and
mov
in
push
mov
rcl
aas
clc
lods
dec
gs
ljmp
sbbl
negl
adc
xor
popa
and
movsb
insl
lahf
mov
imul
and
call
push
cs
push
flds
and
pop
leave
adc
or
imul
mov
es
das
gs
adc
cltd
mov
jbe
pusha
jp
xchg
jae
shll
adc
jb
roll
mov
test
push
je
cs
sbbl
adc
icebp
pushf
jbe
sub
mov
jge
insb
and
mov
mov
pop
ret
cmc
xlat
popl
inc
push
mov
ljmp
mov
push
cmp
loop
scas
sub
sarb
inc
mov
jne
popa
jb
adc
in
cwtl
cmp
mov
outsl
pop
std
inc
pushf
jg
mov
push
inc
andl
push
mov
mov
aas
push
popa
cli
outsb
xchg
and
and
scas
aad
lret
orb
add
hlt
inc
pop
add
int
sbb
aam
lock
addr16
mov
xor
mov
xchg
jb
pushf
inc
dec
mov
mov
jo
repz
pop
jnp
out
sub
movsl
jmp
or
push
lea
mov
dec
andb
push
inc
nop
mov
notl
mov
fadds
jb
aad
sub
xchg
cmp
cs
scas
or
imul
sbb
or
fldt
popf
pop
bound
movl
aas
xchg
cs
fadd
mov
mov
es
cmpsl
pand
mov
mov
mov
dec
jbe
iret
js
push
inc
es
mov
xchg
sbb
into
sarl
stos
xor
jno
sbb
push
adc
sub
movsb
pop
mov
mov
movsb
xchg
orl
lcall
arpl
mov
jae
xor
test
mov
test
stc
pusha
pop
mov
sub
aad
jmp
in
sbb
sub
es
inc
mov
xchg
mov
jnp
xchg
mov
test
jb
das
clc
jno
out
adc
leave
xchg
leave
xor
clc
or
out
mov
cmp
rclb
icebp
cmp
inc
clc
pushf
xchg
sbb
inc
cmp
pop
mov
mov
fwait
sbb
mov
ljmp
pop
mov
testl
push
push
push
or
repz
push
jmp
and
andb
iret
adc
leave
and
cwtl
inc
shrb
pop
movsl
add
mov
cwtl
pop
jp
xor
clc
fstpt
hlt
adc
sub
mov
dec
xorb
aad
add
les
movsb
scas
pop
dec
mov
cmp
jae
test
movsl
dec
ret
or
cmpb
out
push
js
cmpsb
mov
push
dec
loop
mov
push
popf
sarl
ret
mov
or
sahf
ffreep
orb
lret
ret
xor
mov
in
pop
jno
jb
cltd
loope
or
lds
or
pop
test
dec
cmp
js
les
and
sub
shr
imul
in
das
test
jg
aaa
lock
xor
adc
int3
jmp
mov
clc
pop
int3
call
clc
das
cmc
rcll
dec
xchg
ljmp
sahf
or
sub
fidivrl
fsubrl
jl
jae
hlt
rorl
mov
cmp
jb
out
or
sbb
lcall
mov
mov
out
mov
dec
or
out
fdiv
adc
jl
cmpsl
imul
lods
push
int3
xorl
int3
cli
xchg
pushl
and
and
sbb
fidivrs
dec
sub
in
adc
mov
popa
mov
cwtl
add
popa
xchg
shll
mov
scas
mov
sbb
xchg
shlb
aad
xor
mov
cmc
sub
dec
jmp
add
mov
or
ret
jge
push
stos
xchg
xchg
mov
xchg
sub
out
adc
xor
in
or
push
fisubs
test
fdivr
xlat
loope
sbb
mov
push
fisubrs
loopne
dec
outsb
mov
into
jl
jnp
test
xchg
pop
xor
adc
test
push
aam
out
mov
sahf
sbb
mov
mov
adc
enter
loope
mov
out
std
xchg
jmp
aaa
inc
shlb
pop
mov
inc
push
fiaddl
pop
jns
leave
jp
xchg
pop
dec
gs
inc
ret
or
cmp
pushl
test
inc
lods
addb
jl
sub
jle
mov
jmp
rclb
sbb
add
orb
pushl
mov
out
push
imul
test
push
test
sub
jno
jl
gs
mov
dec
test
data16
in
mov
les
push
cli
pop
insl
jnp
push
or
ja
sbb
dec
fisttpl
ja
sub
mov
iret
je
test
popf
jge
loopne
jae
mov
cwtl
aam
or
or
jne
inc
icebp
add
dec
jb
pop
pop
cli
dec
adc
sbb
shlb
fcmove
lea
or
jecxz
inc
mov
cli
test
scas
outsl
inc
dec
rcrl
mov
fldpi
repz
cmpsl
mov
push
aad
sub
mov
cmp
jb
ja
fwait
xchg
daa
cmc
or
cmc
inc
inc
cmpb
jno
movsl
dec
xchg
daa
stc
out
ficoml
adc
mov
daa
movsl
xchg
jne
jge
cli
xor
imul
loop
pop
mov
or
adc
add
push
cld
cmc
mov
mov
mov
xor
adc
ds
adc
adc
adc
scas
lods
vhsubpd
popf
ss
pop
mov
rorb
scas
iret
aas
push
xchg
arpl
sbb
fwait
in
loop
in
mov
add
inc
jae
cmp
sub
pop
aas
nop
mov
lahf
pushf
dec
push
mov
push
repz
out
jae
dec
and
xchg
pop
out
fwait
aaa
ficoms
repz
aam
test
push
and
sbb
inc
cld
dec
loope
ljmp
stos
lds
stos
sub
outsb
xor
and
inc
pop
stos
hlt
cmp
je
cmp
sarl
add
adc
push
mov
cs
add
pop
iret
xchg
xchg
hlt
inc
dec
call
jne
sti
or
fdivl
mov
nop
aaa
cmpsb
sahf
mov
sbb
fwait
xchg
sarl
lock
pop
negb
and
cmpsl
out
sub
mov
aaa
orl
add
push
and
and
inc
jae
push
xchg
mov
xor
rol
scas
fidivrl
je
icebp
out
jno
jne
sbb
rcll
je
adc
stc
jne
mov
xchg
mov
iret
ljmp
lds
pop
sub
movsl
xchg
fwait
insb
pop
subl
jns
cwtl
mov
out
mov
imul
mov
and
mov
mov
pop
popa
dec
lcall
add
dec
cmc
jo
call
mov
mov
push
fxtract
lods
push
ss
mov
sub
dec
xlat
rorl
push
dec
sub
scas
mov
fwait
mov
jb
mov
inc
cli
adc
in
mov
jmp
and
mov
sub
test
cs
out
jo
cltd
out
jle
adc
loop
ds
cltd
mov
imul
test
mov
and
pop
movsb
cmp
loope
dec
push
popa
dec
stos
mov
adc
das
lcall
pop
jmp
int3
xor
pop
bound
push
dec
mov
mov
movsb
or
xor
jecxz
in
add
lock
lods
pop
cmc
cmp
jl
mov
data16
icebp
rorl
sar
shl
mov
sbb
scas
xchg
mov
inc
inc
and
data16
push
aas
push
mov
aaa
jmp
lods
cmpsl
ljmp
push
nop
bound
mov
dec
call
cmpsb
push
ja,pn
sub
call
push
fiaddl
mov
adc
add
cmp
add
loop
loop
xor
xchg
das
push
roll
je
fs
and
or
lock
mov
in
lock
sbb
jmp
mov
ja
shrb
push
cs
mov
cmc
or
push
jne
imul
arpl
lcall
adc
or
movsb
shrb
enter
and
mov
hlt
fistps
jmp
cmovs
xchg
jno
sub
mov
or
int
std
je
or
inc
rclb
fsubrs
cmp
test
xchg
fdivr
cmp
xchg
dec
gs
mov
dec
cmc
pop
mov
lock
push
mov
mov
and
mov
leave
pop
outsl
popa
push
out
loopne
pop
lds
jg
pop
loopne
negb
movsl
aas
divl
movl
call
mov
fisttps
and
and
sub
stc
out
int3
rcll
and
mov
cmp
data16
in
pop
in
cmpsb
and
out
push
sub
xchg
outsl
sahf
mov
addr16
dec
iret
lods
in
lahf
lods
stos
std
mov
adc
faddp
scas
das
bound
sub
cmp
out
mov
notb
ret
add
stc
inc
inc
loope
push
pop
popa
xlat
aam
push
or
mulb
sub
lock
lock
gs
ja
lock
std
pcmpeqw
mov
mov
mov
fwait
lea
mov
fs
in
es
jecxz
shrl
aad
mov
push
stc
gs
xchg
pop
mov
pop
into
and
or
filds
out
fs
cld
cmp
je
mov
mov
push
push
adc
aas
sbb
out
shlb
stos
jne
or
addl
ret
mov
push
mov
stos
movsb
pushf
aaa
sti
jp
ret
push
ljmp
lahf
jl
jl
lods
sub
jle
mov
sub
inc
mov
imul
sti
in
inc
inc
mov
test
dec
std
mov
je
stos
dec
xchg
js
and
mov
fildll
lahf
jecxz
sbb
mov
inc
and
inc
mov
data16
xchg
cs
movsb
lret
lcall
jmp
daa
inc
jae
xchg
or
inc
popf
jge
cmpsb
sbb
test
cs
scas
imul
call
popf
mov
mov
insl
std
inc
cmpsb
xor
std
xor
add
mov
xor
in
stc
outsl
mov
dec
ficoml
cmp
sub
xchg
ds
gs
xchg
jecxz
dec
add
incb
cmp
movsb
mov
outsb
inc
xchg
cmc
shrl
outsl
jmp
fbld
mov
mov
adc
lock
je
int
and
mov
xor
inc
and
shlb
sub
xlat
inc
cld
add
outsl
rorb
jb
push
mov
test
push
insb
sahf
stos
push
cmpsb
dec
daa
mov
push
and
dec
rcrl
fisttpl
inc
int
cmp
mov
mov
push
aad
aam
mov
add
out
lcall
inc
xor
pop
or
mov
add
sub
mov
push
dec
les
divl
mov
add
cmp
adc
mov
xchg
cmc
bound
mov
int
jbe
faddl
dec
dec
sbb
je
mov
lods
stos
test
in
loop
stos
aaa
sbb
mov
dec
loopne
mov
mov
mov
cs
lea
fidivs
lds
inc
lcall
testl
mov
xchg
xchg
inc
cld
cmp
imul
mov
fistpll
add
leave
adc
roll
icebp
out
add
aas
ficomps
gs
xchg
pop
outsl
sbb
inc
test
dec
cld
icebp
xchg
outsl
xor
pop
xchg
icebp
sub
jmp
cmp
dec
ljmp
mov
add
dec
std
adc
adc
mov
pop
push
ror
dec
lods
mov
xchg
cmp
push
cmp
lcall
rcrb
stos
mov
adc
ljmp
sub
shlb
insl
or
sub
mov
test
call
repz
jns
sub
and
aas
pop
or
cmpsb
or
rcrl
xchg
push
push
jp
nop
push
test
sub
lahf
lock
mov
push
sbb
push
inc
dec
notl
fs
inc
jp
rcll
add
sub
sbb
xchg
in
rol
xor
xor
hlt
lcall
in
push
jle
pushl
inc
dec
xlat
inc
or
data16
xlat
sbbl
jns
lret
das
mov
int
dec
and
movsb
mov
outsl
pop
mov
mov
int
lock
mov
stos
mov
jb
sbb
shlb
lds
add
enter
sbb
add
pop
mov
fiaddl
jge
adc
cmc
out
shl
subl
mov
pop
dec
pop
fstpl
aam
sub
popl
ja
lock
jo
arpl
in
sub
in
fnstenv
dec
dec
pop
jo
pop
aaa
lahf
addr16
bnd
jle
test
das
and
push
inc
js
pop
sbb
jne
dec
sub
dec
call
jbe
pusha
inc
inc
xchg
pushf
sahf
outsl
xchg
xor
lds
sahf
mov
popf
lret
and
ljmp
mov
jmp
xchg
mov
shll
pop
add
loop
js
push
sub
sbb
xchg
shrl
cld
in
mov
out
pop
jp
scas
push
insb
sahf
mov
sarb
cmp
cmp
adc
mov
push
popa
insb
leave
xchg
bound
lret
pop
xchg
in
push
stos
add
enter
dec
aad
mull
pusha
ss
mov
dec
lcall
push
sub
sbb
fistpll
xchg
pushf
test
or
aad
and
pop
sbb
xchg
jp
pop
xchg
or
mov
push
in
push
fbstp
notl
cmpsb
sti
stos
in
leave
adc
mov
dec
sbb
push
mov
mov
xor
dec
ds
and
pop
adc
sbb
loop
mov
sbb
sub
out
sbb
push
ljmp
xchg
add
scas
insb
cmpsl
sbb
scas
push
pusha
mov
dec
movsl
adc
jg
jns
pop
addr16
mov
cs
repnz
insl
adc
aaa
imull
dec
jns
insb
inc
push
pcmpgtb
or
dec
jp
test
orl
push
pop
out
push
stc
push
adc
enter
popa
and
mov
stc
in
pop
cmp
adc
dec
mov
insb
jl
sub
je
andb
lcall
pop
sahf
fisttpl
adc
xchg
data16
xchg
sbb
jne
cmpsl
pushw
je
mov
push
inc
in
pop
loopne
push
in
clc
mov
imul
dec
loope
cmc
enter
scas
jge
dec
pop
bound
movsb
xor
cmp
jmp
mov
xor
cmp
inc
in
imul
xlat
outsl
inc
lahf
out
fidivl
xor
aad
test
out
mov
nop
dec
dec
mov
jmp
mov
inc
shrb
push
arpl
inc
cs
xchg
mov
inc
lods
sbb
pop
jle
push
pop
cmp
sub
jns
mov
mov
test
add
xchg
or
jl
xchg
movsb
push
add
or
test
xchg
mov
in
ja
addr16
xlat
mov
test
sbb
dec
mov
aam
cs
filds
ficompl
fcmovnb
or
cmpsb
inc
mov
mov
mov
jmp
aad
idivl
sbb
ds
mov
xor
pushf
mov
or
or
jl
addr16
sbb
popf
and
mov
out
dec
test
pop
repnz
outsb
inc
push
xchg
mov
inc
adc
icebp
cltd
dec
std
lahf
lret
mov
lock
push
and
dec
pcmpgtd
js
add
jecxz
dec
xchg
nop
jno
gs
shrb
dec
arpl
in
int3
aas
adc
shrb
jo
fiaddl
jp
inc
jns
and
mov
lds
mov
fidivrs
sarb
mov
test
mov
int3
bswap
stc
inc
movsl
push
pop
rcl
cmp
or
dec
nop
sbb
mov
adc
xchg
push
and
fistpll
int3
adc
add
clc
imul
lds
pop
jecxz
xor
shl
mov
addr16
jo
cmp
push
cmpsb
adc
and
inc
scas
dec
sbb
jl
hlt
inc
inc
out
int3
sbb
ja
loop
jo
push
jp
rcll
xor
sbb
adc
shrb
cmpsl
or
adc
test
mov
jae
nop
int3
cmp
shlb
and
or
sub
sub
fs
testl
xchg
jg
mov
mov
xor
mov
loop
lahf
sub
mov
push
aas
push
sbb
cltd
cmpsb
insb
push
mov
repz
cmp
mov
fnstsw
jb
mov
mov
loopne
jb
es
mov
sub
xchg
sub
add
jne,pt
sub
addr16
cltd
out
into
aaa
notl
outsl
or
xchg
fsubs
mov
icebp
push
mov
repnz
ja
inc
cmp
push
jne
int3
imul
sbb
imul
inc
int
or
stos
cld
xor
call
push
inc
ret
aaa
xchg
xor
cmp
mov
inc
mov
leave
fs
jo
pop
es
scas
adc
stos
in
out
or
call
daa
jne
ja
xchg
mov
push
dec
inc
cmp
lea
mov
cs
sbb
mov
jg
inc
sub
scas
pop
jp
dec
div
fwait
iret
add
adc
fmuls
into
lcall
lret
outsl
insb
cmp
dec
repz
cld
dec
xchg
and
int3
xchg
ret
dec
je
mov
mov
push
inc
add
iret
mov
sbb
daa
iret
lahf
jp
ja
sbb
mov
test
bound
pop
xor
mov
xor
mov
dec
das
xchg
push
sub
lret
add
pop
sbb
sub
fdivs
jo
in
and
xor
ljmp
popf
add
ret
cs
cmp
xor
sub
pop
inc
aam
mov
mov
fnstenv
ds
fwait
mov
aad
mov
dec
mov
fldcw
push
fwait
aam
inc
sti
or
in
mov
roll
push
mov
add
out
jb
mov
push
cmpsb
je
imul
enter
ret
cmp
popa
fmulp
mov
push
mov
mov
or
out
dec
pop
xchg
xor
pop
push
mov
ja
out
insl
imul
jecxz
in
test
jp
nop
or
hlt
pop
and
ss
mov
ror
sub
and
mov
mov
jne
xchg
pop
mov
ds
mov
inc
sbb
out
sub
cmp
bound
mov
pop
fwait
test
stos
mov
cmp
cmpsb
xlat
jbe
adc
inc
lods
iret
cmp
jbe
inc
mov
or
shl
in
or
push
in
repz
dec
add
push
inc
shll
jp
or
pop
mov
dec
popa
in
mov
iret
mov
pusha
cmp
std
sti
mov
mov
arpl
dec
or
mov
lret
mov
imul
bound
jmp
shl
pop
in
jg
out
nop
xchg
mov
pop
sbb
jae
dec
das
xor
aam
adc
pushf
frstor
leave
push
cmp
fistl
xor
lcall
repnz
mov
les
lcall
push
mov
cmp
jecxz
out
mov
shrl
jmp
mov
or
hlt
mov
jg
icebp
ret
sub
push
mov
pushf
daa
dec
je
inc
ret
mov
jne
repz
movsb
inc
xchg
xchg
adc
das
repz
es
or
icebp
mov
sbb
mov
adc
cltd
jecxz
out
mov
cmp
xchg
outsb
mov
mov
xchg
sub
push
int3
lods
cmovnp
sbb
cmp
xchg
add
sti
mulb
mov
jo
mov
push
pop
add
mov
cmp
das
xchg
lahf
sub
jecxz
cmc
roll
rol
cltd
call
cmp
std
faddl
add
xor
divb
iret
fbstp
dec
mov
into
sub
scas
adc
fcmovne
mov
xlat
std
aas
mov
imul
sahf
jp
mull
mov
mov
lret
dec
ds
inc
sbb
lret
push
mov
or
fsubrs
jecxz
cld
mov
outsl
arpl
mov
das
push
movsl
sti
jo
xchg
jns
gs
bound
push
outsl
fs
movsl
scas
fildl
add
mov
leave
adc
mov
sub
and
push
fisubrs
scas
fnstcw
lahf
sbb
dec
out
cmp
xchg
add
sub
sbb
popa
das
push
inc
inc
xchg
dec
out
fimull
sbbb
nop
out
subb
andl
jb
xor
xchg
insl
testl
imul
test
sub
push
ret
jg
mov
iret
mov
xchg
lds
pushf
jb
in
lahf
push
lds
icebp
loopne
xor
jle
dec
mov
dec
jge
xor
loop
das
or
add
cltd
push
jge
das
inc
mov
mov
mov
fsts
stos
mov
fadd
fnstsw
dec
out
pop
das
and
movsl
int
jne
jns
push
mov
movsb
cvttps2pi
les
xor
dec
das
and
aas
lock
xor
rclb
fimuls
popa
lea
xchg
jne
imul
fwait
jge
ja
aam
or
adc
adc
aaa
mov
dec
fiaddl
in
push
mov
das
mov
add
adc
or
jns
fcmove
and
push
lock
cmp
les
mov
mov
sub
jns
adc
sarl
add
add
loopne
cmpl
pop
jl
and
out
test
xchg
mov
mov
lods
jne
push
mov
into
lahf
sub
mov
jl
xor
push
insl
mov
in
xchg
jge
mov
mov
nop
sahf
jle
rorl
sub
movsb
in
shlb
in
popf
movsl
mov
mov
jae
xor
sar
push
lahf
or
xor
and
icebp
shl
imul
cmpb
jp
insl
add
dec
scas
pop
test
or
jns
mov
scas
sbb
ds
movb
inc
lods
inc
mov
les
rolb
and
std
testl
mov
push
imull
pusha
ror
and
aam
inc
or
hlt
lds
scas
pop
icebp
push
mov
sub
fidivs
pop
xchg
lret
in
pop
sti
js
pusha
push
pusha
lahf
cmp
mov
inc
jp
loop
xchg
add
mov
or
das
dec
loop
pop
push
aam
std
adc
and
mov
sbb
loop
xchg
add
rcrl
push
xchg
jl
and
push
jae
inc
mov
mov
fcompl
out
mov
push
mov
cli
mov
sub
and
stc
adc
les
sub
mov
std
jno
jae
and
mov
lods
pop
sub
das
inc
repnz
xchg
dec
in
mov
mov
inc
mov
inc
inc
repz
scas
insl
mov
imul
stos
lods
xor
xchg
data16
repz
push
xchg
jbe
scas
icebp
sbb
out
push
in
leave
push
dec
jae
xchg
cmp
imul
mov
inc
filds
xchg
mov
dec
loop
orl
fisttpl
mov
sub
push
jl
dec
mov
insl
out
mov
push
push
xor
pop
mov
xor
pop
fidivrs
int3
add
dec
mov
lods
adcb
push
add
cmpsb
and
in
negl
dec
push
js
test
cmp
pop
inc
mov
ret
cli
cmp
jle
hlt
repz
and
sub
push
mov
lret
int
inc
lds
and
and
fsubrl
pop
lea
daa
pop
mov
jge
or
dec
fsubrs
mov
mov
jno
jb
cwtl
out
dec
mov
push
pop
or
add
xor
repz
mov
xchg
sub
dec
jg
sub
and
rcrb
cwtl
jae
fildll
push
sbb
jp
jp
jge
pop
mov
fldenv
xor
inc
mov
inc
sbb
pop
dec
and
add
lcall
inc
inc
and
inc
push
shll
cmp
xchg
mov
mov
jmp
sub
lock
cmp
dec
xor
mov
sbb
pop
xor
mov
rcrb
mov
xchg
jae
arpl
and
lret
push
sbb
mov
adc
dec
scas
test
fnstcw
out
daa
or
arpl
mov
pop
sub
inc
sbb
imul
add
pushf
std
jb
test
cmp
or
out
pop
xor
cmpsl
mov
les
shrl
ret
leave
lcall
aas
add
cmp
iret
dec
and
or
inc
lock
and
jge
add
mov
jle
mov
cmp
cmp
jg
mov
mov
ss
xlat
lcall
dec
icebp
mov
dec
lret
mov
ds
jmp
sbbl
pop
stos
push
jns
jmp
sub
jg
mov
push
push
or
ret
pop
fsubs
xchg
lods
pusha
pop
aaa
je
pop
mov
rorb
cmp
add
cmc
cmp
ret
adc
out
bound
mov
hlt
inc
mov
das
out
int3
push
inc
imul
addl
out
pop
xor
mov
jb
jns
xlat
lcall
or
dec
out
int3
xor
mov
jge
xchg
cld
sub
xchg
in
push
fwait
pop
cld
fistpll
ds
imul
sub
dec
insb
xor
pop
pop
das
test
mov
pop
mov
xchg
push
add
cmc
call
xchg
fsts
push
add
je
test
das
test
in
pop
adc
or
pop
push
test
aad
cmpsl
or
add
lahf
xorb
fiadds
int
pop
out
mov
pusha
add
push
inc
je
rcr
daa
mov
out
pop
inc
push
xchg
aad
pop
clc
or
ffree
sbb
pop
int
cli
dec
pop
mov
cs
push
sub
pop
dec
sbb
in
ret
icebp
cld
jmp
in
sbbl
movb
out
xchg
cmp
jb
scas
popa
les
outsb
push
pop
cs
test
stos
call
push
and
xor
sub
daa
les
jge
xchg
int
sbb
idivl
loopne
push
jb
add
add
idivb
cmp
push
add
pushf
adc
aas
pop
mov
popa
test
call
inc
aam
xor
in
add
dec
jb
out
mov
in
aad
jmp
inc
cmp
fisttpl
mov
outsl
enter
adc
stos
popf
dec
addl
orb
stos
stos
fildll
pop
out
xor
dec
imul
inc
jecxz
inc
dec
mov
inc
mov
xchg
jp
sbb
dec
fldl
and
cli
int
lahf
in
dec
aaa
mov
movsb
xor
mov
dec
pandn
aam
repnz
inc
lea
rcrl
add
into
cld
xor
negb
add
xchg
cld
lcall
andl
mov
lea
fimuls
pop
and
jbe
adc
faddl
fcompl
sbb
int
dec
mov
xchg
cmp
out
mov
pop
mov
adc
stc
or
adc
inc
mov
loopne
xchg
dec
js
stos
push
ss
test
sbb
push
pop
sti
cmp
xor
aas
mov
or
sub
xor
testb
and
hlt
subl
and
ss
cmpsb
dec
or
int3
and
fs
pop
mov
dec
clc
pop
dec
jns
adc
int3
push
mov
jmp
std
xlat
mov
fisubl
sub
sbb
jg
mov
jl
imul
inc
add
aaa
push
loope
outsb
dec
dec
ficoms
orb
lods
jno
and
and
dec
aaa
test
sbb
sahf
pushf
inc
sahf
mov
insl
and
outsl
mov
mov
and
cmp
cs
ret
pop
into
adc
cltd
lds
je
cmpsl
jge
push
arpl
mov
jmp
mov
cltd
sahf
dec
fucomip
sbb
push
hlt
add
add
mov
inc
inc
sbb
push
mov
or
dec
and
roll
xchg
jno
repz
subl
fstps
xchg
imul
ljmp
gs
aas
daa
and
shrl
icebp
aam
cwtl
out
push
mov
fisubl
jmp
cwtl
sbb
mov
dec
js
inc
and
mov
fnsave
test
test
repz
inc
jns
dec
and
jb
aad
daa
inc
loop
icebp
jne
insb
cmpl
xor
clc
inc
insb
stos
jno
mov
pop
or
insb
insb
mov
fcmove
mov
pop
test
sbb
aad
xchg
insb
cwtd
cld
dec
adc
adcb
loop
clc
fcmovne
push
sbb
jecxz
aam
pop
paddsb
loope
negb
fisttpl
cltd
add
outsl
ja
cmc
sahf
dec
jmp
mov
lret
pop
jmp
mov
inc
fnstsw
popa
add
aad
fisubl
sbb
stos
jg
jl
sbb
mov
inc
iret
fs
sbbl
out
shl
add
push
in
rcrb
lret
in
bnd
mov
jno
and
push
pop
mov
int
mov
lcall
mov
xor
loop
leave
push
cmpl
adc
and
cli
sbb
cli
insb
inc
push
inc
pop
dec
and
ficompl
xor
cld
or
inc
dec
sbb
sbb
inc
adc
push
inc
pusha
sbbb
ffree
leave
lock
xchg
loop
ret
push
leave
addl
movsb
out
sub
jl
mov
inc
aas
jns
xor
inc
in
xor
mov
es
mov
js
dec
sbb
lea
out
sbb
hlt
adc
jo
xchg
xchg
jmp
adcb
push
push
mov
dec
mov
rcrl
cmp
movsb
popa
pushf
push
add
ficoml
mov
pop
movsb
in
orb
data16
mov
push
inc
lret
out
xchg
inc
ret
or
mov
mov
fxch
movsl
pop
adc
rcrl
mov
mov
jmp
pop
test
out
gs
xor
test
fbld
jne
mov
pop
pop
das
xlat
bound
mov
enter
jae
inc
and
popf
inc
sbbb
cmc
sti
push
iret
sub
mov
lods
xchg
push
cmp
fbld
outsl
jmp
stc
int3
mov
push
mov
pop
mov
stc
or
cwtl
fs
ret
xchg
insl
xchg
popa
push
out
bound
and
jp
out
cli
inc
data16
dec
pop
test
jns
or
popf
inc
dec
dec
incl
dec
mov
mov
setg
rol
ljmp
int
jne
fs
cld
jbe
mov
leave
add
lahf
ficoml
mulb
std
fsubrs
jle
outsb
cld
lods
test
outsb
push
imull
inc
mov
sbb
lods
test
cli
test
rcrl
mov
adc
out
xorb
and
pusha
fdivs
aad
jo
aad
pusha
test
and
dec
popl
scas
aam
pusha
aaa
daa
mov
mov
dec
mov
aaa
xchg
cld
push
shrb
shlb
xor
add
ror
cmpl
or
shll
test
add
or
in
ret
mov
push
jp
push
xchg
sub
icebp
inc
aam
inc
addb
inc
xor
push
ljmp
cmp
jb
lret
add
adc
or
inc
adc
aas
mov
mov
mov
pop
adc
es
pushf
les
pop
ss
dec
scas
sbbb
cmp
sarb
sbb
cmp
imul
in
xchg
pushf
or
adc
testl
sub
and
or
shlb
ss
sub
jo
dec
and
jecxz
dec
push
cmc
mov
cs
arpl
sbb
popa
inc
std
fsub
cld
adc
push
iret
push
jns
adc
gs
add
in
clc
outsl
mov
mov
jmp
add
int
adc
jno
mov
daa
ret
arpl
out
out
jne
pop
xchg
jae
lea
cld
pop
mull
mov
popf
sub
gs
pop
mov
mov
pushw
call
dec
xchg
or
mov
jb
or
imul
inc
jle
xchg
fs
call
sub
call
sub
shll
and
daa
out
xor
aaa
pop
cmpsb
xchg
and
stc
mov
out
dec
fdivrl
fidivs
sub
xor
and
out
and
cmpb
lret
mov
fnstsw
push
ret
data16
mov
test
pop
mov
xor
mov
out
mov
mov
fisubrs
adc
mov
sbb
test
inc
push
insl
mov
aaa
pushl
pop
lods
pop
sub
pop
int3
sbb
push
ja
mov
sub
leavew
aad
popf
loope
cmp
and
pop
outsl
stos
lods
sub
hlt
fprem1
mov
aas
repz
stos
cmp
and
and
mov
cmp
pop
jecxz
mov
int3
pop
add
pop
mov
pushf
add
sbb
sub
pop
pop
push
lock
jmp
push
lea
aaa
cwtl
pop
nop
and
mov
pop
fstl
pop
movsb
xor
and
sbb
push
mov
sub
iret
adc
fwait
mov
adc
ret
lods
adc
jns
jae
sbbl
popf
lods
mov
das
loop,pn
sbb
aaa
mov
cmp
es
movsl
xor
jbe
jb
mov
hlt
inc
xor
int
mov
pushf
in
lods
cld
and
xor
mov
sets
sbb
push
loop
notl
cmpsl
dec
fistl
jge
sub
test
xchg
sbbl
sti
fstpl
jae
add
push
cmp
mov
fnstcw
dec
xchg
mov
mov
push
aas
ja
imul
xorl
dec
clc
pop
leave
movsb
or
xor
mov
jne
repz
nop
iret
fisubs
into
int
xchg
in
sbb
pop
inc
loop
mov
xchg
repz
add
jb
xor
sarl
insb
xor
cmp
push
icebp
push
xor
rep
pop
add
jle
rcll
sbb
fisttps
adc
ds
push
jo
pop
or
sbb
daa
xor
cmp
xlat
jae
jo
mov
pop
dec
imul
mov
jl
shl
mov
cli
jb
mov
cld
mov
xchg
sub
pop
hlt
imul
bnd
jge
int3
fidivrs
testl
lret
test
js
cmpb
xlat
push
lock
cli
rcll
xchg
push
sbb
lcall
inc
js
cli
and
sbb
sub
call
lods
sbb
jg
mov
sti
push
sbb
out
pop
ljmp
arpl
js
dec
inc
pop
gs
cmp
jnp
imul
dec
cmp
nop
in
mov
mov
add
or
cld
in
shr
xor
insl
pop
xchg
rclb
sbb
cmp
lret
out
and
mov
sbb
sub
pop
lret
icebp
adc
xor
cmp
adc
lret
test
dec
pop
scas
push
adc
in
jno
aas
sti
sbb
out
dec
mov
addr16
adc
rcrb
push
mov
dec
je
jbe
mov
addr16
clc
dec
daa
mov
add
jl
arpl
sub
xor
mov
sti
sub
in
inc
push
mov
fld
jbe
stos
and
mov
cld
ja
lret
sub
sub
sbb
int3
sbb
and
add
jge
in
loopne
jge
subb
sub
and
outsb
lds
push
cmpl
daa
pushf
mov
mov
lret
stc
push
js
test
mov
adc
cmpl
lret
mov
inc
xabort
fldcw
ret
push
inc
xor
test
shlb
or
jge
xchg
sbb
into
scas
cmp
cltd
pop
addr16
mov
inc
into
stos
push
dec
jecxz
sub
ss
subl
xchg
adc
add
imul
push
lods
aad
stos
repnz
push
stc
push
nop
xchg
fs
fistps
xor
mov
ret
mov
test
popa
cld
adc
sahf
jp
sahf
push
or
pop
xor
imul
adc
push
jo
psllq
or
pop
inc
daa
lea
mov
leave
loop
or
push
rorb
in
cmp
lahf
jne
add
aaa
xchg
in
in
push
outsb
adc
ds
sub
aas
jns
ret
mov
faddl
xor
push
loope
cmp
xchg
jle
push
jbe
rcll
stos
nop
shr
dec
sub
jge
mov
add
sahf
adc
imull
movsb
data16
mov
arpl
sbb
jge
nop
xor
jne
out
and
imul
xchg
daa
mov
or
xchg
adc
enter
mov
icebp
xchg
mov
pop
or
es
xchg
ret
aad
imul
cmp
sbb
ss
sbb
sbb
rcll
out
mov
or
xchg
push
hlt
dec
add
mov
aas
out
dec
dec
xor
sub
pusha
inc
fidivs
sbb
ds
loope
push
popa
aaa
test
insb
push
loop
xchg
ret
jne
test
mov
mov
popa
inc
into
pop
or
and
in
adc
fadds
repz
fstl
add
test
push
mov
movsl
shll
push
pop
jl
in
out
cmp
lds
loop
mov
mov
pop
lods
mov
mov
ret
jns
xchg
xor
cmp
sub
inc
sub
xchg
nop
push
sbb
aas
and
and
push
add
cmp
push
sbb
imul
inc
push
fstpt
movsl
push
jecxz
stos
mov
dec
cmp
dec
mov
pop
dec
fdivrl
jl
jmp
fistpll
sub
xchg
jne
mov
clc
mov
lock
aaa
aaa
xchg
and
int3
loop
mov
inc
in
fstpl
cmp
jb
adc
enter
mov
in
fsts
scas
inc
inc
dec
pop
mov
dec
and
int3
fldenv
gs
pusha
fsubrl
jp
pop
ja
mov
mov
push
cmpl
aas
cmpsb
push
sbbl
test
mov
jo
int3
or
add
into
cld
std
leave
clc
js
jecxz
test
mov
cmp
popa
mov
jle
push
repz
ss
je
jo
jnp
ss
repz
add
aaa
jmp
mov
inc
or
pusha
push
orl
add
jg
lret
mov
mov
jge
movsb
mul
out
xchg
mov
adc
xor
xor
lds
pop
call
inc
jnp
mov
xchg
ret
add
cld
or
ret
ja
in
mov
aad
int3
inc
into
aam
daa
xor
jno
xor
scas
xchg
mov
test
lock
or
fwait
movq
mov
sbbl
fimuls
inc
stos
sbb
dec
cwtl
in
sub
xchg
pop
test
pop
adc
loope
imul
aam
or
pop
dec
jb
add
loop
ljmp
shl
xchg
incb
hlt
mov
pop
movsl
ja
fidivrs
enter
std
fildl
std
or
repnz
xor
cld
addl
push
sbb
push
in
mov
ss
dec
dec
push
sub
dec
imul
jbe
clc
out
sbbb
sub
xor
addb
add
cmp
push
xor
rorb
mov
test
sar
and
xchg
sbb
or
or
repz
push
push
bound
inc
test
into
test
loopne
adc
pushl
mov
ljmp
scas
mov
idiv
lods
movsl
int3
xor
xor
aam
into
adc
mov
push
sbb
fs
dec
jbe
adc
mov
mov
sub
push
int3
lret
cmc
cmp
xor
xchg
mov
and
adc
ret
mov
sahf
rcrl
or
sti
js
fnstenv
add
xchg
faddl
xor
inc
push
mov
mov
jg
and
out
push
fnsave
mov
sbb
stos
jg
popa
test
lret
shl
in
and
aad
pop
sbb
pop
lds
sub
repz
cld
xor
test
jmp
rcl
sbb
into
xchg
jg
xchg
jne
mov
inc
add
and
imul
test
add
mov
mov
sbb
xor
sbb
push
mov
fdivs
loope
roll
mov
push
push
out
data16
push
and
mov
pop
cli
imulb
mov
and
test
outsl
sbb
fstl
in
cmp
dec
mov
fwait
mov
imul
inc
mov
in
pop
rcr
ljmp
push
cmpb
dec
outsl
cmp
add
addr16
adc
mov
push
mov
ss
pop
or
or
sub
or
sbb
inc
lods
in
push
xor
rcll
mov
add
inc
test
inc
add
gs
jb
sub
cwtl
dec
out
ror
insl
in
sub
sahf
test
sbbb
out
add
xor
lret
cmpsl
cmp
xchg
xor
cmp
test
sub
popa
daa
adc
rclb
sbb
stos
data16
fcmovnu
jmp
xchg
jbe
neg
cmp
les
stos
sbb
cmp
int3
sti
sbb
sarl
adc
ficompl
mov
inc
and
cli
js
lret
lret
mov
addl
rclb
test
call
popa
or
adc
in
into
cmpsb
xchg
xchg
sar
in
mov
or
or
sbb
es
rorb
mov
outsl
test
sti
addr16
ficompl
je
ja
adc
cmpsb
ljmp
xchg
iret
rol
in
ret
fisttpl
and
testb
xchg
push
jno
movsb
mov
add
sahf
lcall
fists
icebp
adc
pop
popf
ret
jl
xchg
jns
hlt
or
jo
dec
adc
ds
arpl
and
mov
mov
insl
jl
cmc
jmp
subl
lret
sub
popf
loop
fildl
in
incb
mov
xor
sub
and
iret
das
add
xchg
xchg
loope
dec
jno
enter
pop
ja
add
sarl
mov
push
xchg
pop
rolb
dec
pop
mov
shll
and
mov
les
lret
int
data16
jns
iret
mov
movsl
xor
rcrl
jle
data16
inc
jle
repnz
scas
push
xorl
mov
ret
cmp
dec
mov
inc
push
out
and
sub
cmp
rorb
or
xchg
shll
mov
or
sub
ds
mov
mov
pop
push
sub
rcrb
sbb
jb
cltd
mov
psubsw
ret
loopne
mov
test
or
inc
xchg
test
mov
lods
loop
hlt
pushf
pushf
sbb
cmp
push
cmp
sbb
loopne
pop
push
pop
loope
fstp
mov
push
int3
pop
add
inc
adc
lods
and
ret
xrelease
xor
pop
inc
sbb
shrb
idiv
testb
xor
mov
das
aam
add
in
pop
add
mov
cwtl
mov
and
in
push
sub
and
pop
adc
aad
lret
into
dec
xchg
inc
push
insl
xchg
cmp
xchg
sub
test
subl
or
xchg
fsubr
rcr
ss
in
outsl
in
std
mov
pop
jnp
lea
out
inc
imul
cmp
pop
fscale
cwtl
out
outsl
sahf
ss
out
mov
xorb
int
or
xor
pop
gs
scas
popa
roll
mov
out
pop
push
sbb
std
das
push
jbe
pusha
and
addr16
cmp
dec
push
ficompl
inc
pop
daa
push
scas
cmp
je
cmp
lods
movsb
rcr
loope
movsb
lods
int
inc
out
xor
inc
mov
stos
mov
fwait
icebp
mov
ret
mov
dec
daa
aaa
sub
jae
and
fs
in
mov
xchg
cmp
add
out
lea
mov
and
xchg
mov
mov
and
jmp
push
xchg
sub
mov
ret
subl
mov
cld
roll
xchg
sub
shll
cmp
scas
jge
sub
nop
cmpsb
bound
push
lret
jecxz
mov
inc
into
movsl
or
rorb
jle
jge
mov
mov
das
xorl
mov
push
inc
imul
divb
lods
or
adc
mov
pop
sub
dec
lret
or
into
addr16
stc
and
addr16
xchg
xchg
mov
clc
pavgw
sti
jae
xchg
outsl
sub
pop
xlat
cmp
inc
jp
clc
jb
std
popa
in
int3
mov
jle
aam
cmp
pop
push
or
loopne
movsl
out
mov
pop
dec
lret
cli
add
mov
in
mov
mov
and
adc
fisubrl
inc
xor
je
data16
call
and
dec
lods
push
adc
pop
mov
dec
push
popl
dec
and
add
inc
mov
shl
addr16
sbb
pop
test
mov
iret
shrl
imul
sub
adc
aaa
frstpm(287
lahf
sub
pop
mov
mov
arpl
dec
out
cmp
adc
mov
addb
mov
and
inc
mov
mov
adc
inc
out
stos
daa
mov
enter
pop
and
xchg
pop
addb
xchg
xchg
daa
sti
mov
iret
gs
popf
xchg
adc
aad
iret
push
jl
int3
popa
cmp
and
inc
xor
xor
adc
shrb
call
movsl
ret
out
xchg
jne
inc
xchg
push
push
pop
aad
aam
dec
outsl
scas
xchg
cmpsl
jp
pop
add
repnz
xchg
cmp
js
addr16
es
mov
insl
cld
dec
cmp
mov
call
imul
out
mov
cs
sbbl
dec
cmpsl
ss
mov
loopne,pn
sbbb
inc
fwait
mov
jno
mov
mov
xor
pop
ret
mov
mov
push
and
pop
push
xchg
pop
pushf
push
icebp
daa
or
lcall
mov
lds
cmp
adc
push
mov
jnp
fisubs
xchg
xchg
xchg
scas
dec
js
jns
cltd
lods
mov
mov
fiaddl
cltd
pop
and
inc
cmp
das
test
loop
adc
xchg
arpl
push
jne
dec
insb
mov
jo
cmp
xchg
push
mov
and
push
fstps
jge
in
adc
mov
xchg
insb
sbb
mov
jecxz
adc
xchg
imul
adc
mov
mov
inc
xlat
mulb
jnp
lcall
mov
pop
sbb
adc
mov
ja
into
push
add
sub
iret
cmp
pop
repnz
adc
fidivl
xor
dec
mov
lods
push
scas
mov
pop
divl
fmull
into
mov
int3
xor
add
movsl
adc
adc
cmpsb
ljmp
jne
mov
mov
clts
lds
pop
mov
inc
sbb
sbb
mov
imul
sub
mov
pop
mov
mov
pop
pop
mov
out
cs
pushl
push
or
popf
fsubl
fisubl
push
cmp
stos
testb
mov
sbb
roll
jno
mov
fsubs
in
sub
xlat
xchg
lds
mov
imul
mov
add
ret
es
ja
inc
xchg
adc
aaa
clc
aad
les
dec
int
or
movsb
mov
sub
push
inc
jecxz
xchg
jle
mov
xchg
sbbl
fisttpll
add
adc
pop
dec
mov
jmp
jecxz
jo
js
fsts
je
insb
push
mov
dec
jnp
pop
daa
jnp
fwait
jmp
les
sub
pop
dec
add
scas
lock
int
add
mov
add
mov
imul
or
push
icebp
leave
insb
mulb
rcrl
aaa
xchg
add
push
or
data16
mov
clc
jnp
push
pop
test
push
fdivl
data16
in
pop
pop
loop
push
jae
cmc
sbbb
out
dec
dec
rorl
add
lahf
in
adc
xchg
mov
movsb
out
imul
cmc
mov
ja
mov
sbb
mov
leave
in
mov
inc
test
fldl
sbb
lret
adc
push
scas
push
jmp
sbb
je
roll
cli
dec
sub
jbe
pop
cli
push
xchg
push
les
in
xchg
cmp
out
mov
add
aad
mov
lret
sbb
dec
sub
sbb
popa
jecxz
and
ret
push
dec
xor
test
pop
or
xor
pushf
arpl
int
ret
push
pusha
inc
into
mov
mov
push
and
sbb
sbb
mov
fisttpl
and
or
push
dec
lret
mov
add
pop
and
inc
xor
rcrl
mov
pop
repz
das
pusha
mov
outsl
pop
jmp
lret
mov
cmp
ljmp
or
sbb
enter
cmp
mov
push
sahf
out
inc
jp
mov
jmp
loope
in
xchg
push
sub
adcb
in
out
movsb
insb
cmp
dec
setle
out
push
xchg
or
fsubrs
mov
in
std
xor
jb
pop
sbb
xor
test
imul
setbe
icebp
mov
sbb
sbb
jns
add
push
push
insl
out
stos
mov
movsl
insl
cmc
and
and
shll
mov
andb
adc
pop
aaa
xor
scas
sub
inc
xorb
pop
adc
sahf
aam
jge
inc
pop
arpl
push
jnp
mov
or
adc
outsl
mov
ret
pop
mov
mov
in
jg
bound
sub
nop
loop
xor
and
hlt
adc
jecxz
cmpsl
insb
and
dec
lods
fdiv
cmp
push
arpl
rclb
lahf
cmc
insl
push
add
jg
dec
and
or
test
imul
lods
jp
or
mov
push
mov
or
mull
lcall
jmp
or
jbe
xor
loopne
icebp
mov
push
sub
bswap
jns
xlat
xlat
mul
movsl
inc
xchg
imul
adc
enter
fwait
cwtl
sbb
testl
pop
inc
jl
adc
loopne
subl
mov
jl
xor
inc
push
aad
inc
jecxz
inc
xor
mov
pop
ret
push
xlat
pusha
repnz
fsubrs
popf
xchg
cmp
ja
add
pop
ret
addb
loope
xor
xchg
mov
int3
mov
lret
sub
mov
cwtl
adc
mov
das
aam
lods
stos
mov
stos
mov
add
fdivrs
flds
loop
inc
inc
inc
outsb
in
or
sbb
pop
and
sub
sbb
mov
in
sbb
aaa
call
in
jecxz
adc
push
lods
jp
pushf
or
cmp
ret
pop
dec
lahf
mov
stos
shrb
int
lods
jae
aaa
xor
mov
or
test
mov
cwtl
inc
fcomip
xchg
fs
mov
rcrl
mov
in
inc
arpl
adc
or
xor
xor
cmpl
xor
lds
stos
jne,pt
int3
dec
sub
jbe
and
mov
sub
mov
push
cmpsl
cmp
je
mov
pop
nop
jp
subb
lret
stos
loope
and
jl
stos
mov
mov
and
jl
icebp
cli
aam
mov
enter
sbb
xchg
push
adc
lock
ljmp
and
lahf
sahf
test
pushf
dec
push
add
push
daa
test
push
pcmpgtw
push
push
ljmp
push
adc
adc
roll
dec
mov
mov
fidivs
cmp
loop
mov
leave
lea
fisttpll
push
inc
inc
pop
inc
pop
imul
jno
enter
lds
mov
pop
xorb
dec
push
jecxz
add
adc
enter
ljmp
popa
mov
inc
bound
push
jecxz
jb
repz
out
mov
loope
xlat
mov
or
mov
mov
out
and
test
mov
push
xchg
outsb
ret
mov
or
adc
js
inc
adc
add
adc
xor
pop
in
push
inc
or
outsb
test
pop
clc
out
push
outsb
gs
stos
insb
add
pop
jge
dec
fiaddl
shll
xchg
mov
out
mov
mov
push
sarl
cltd
inc
jmp
and
cs
nop
or
stc
fwait
inc
pop
lahf
cmp
test
cmpsb
xchg
call
in
pop
addr16
push
popf
jae
lods
jecxz
add
mov
dec
icebp
sti
popa
jno
mov
and
mov
les
mov
int3
adc
sahf
cwtl
ret
fiadds
aaa
add
rcll
xchg
scas
lcall
in
iret
rcrb
sbb
movsl
xchg
xor
ds
dec
inc
lds
add
incl
xchg
xor
mov
and
adc
jb
push
mov
sahf
nop
xchg
and
testb
lea
xor
add
sub
push
pop
out
aad
sahf
sub
movsl
insl
jmp
xchg
jmp
sub
mov
ljmp
stos
mov
and
cli
lret
ja
dec
and
dec
mov
bound
cli
sub
in
clc
int3
inc
ret
sbb
and
push
mov
lcall
add
cmp
inc
mov
xchg
insb
inc
push
daa
jmp
icebp
imul
popa
fs
adc
jb
or
mov
ss
insb
adc
aas
ficompl
pop
adc
cmpl
mov
iret
in
test
jge
jo
frstor
jmp
jp
stos
inc
les
jo
test
jmp
repnz
jbe
rorl
jge
push
loop
adc
ss
and
inc
imul
mov
sub
adcb
or
jecxz
sbb
inc
sub
fdivrl
xchg
or
push
push
in
rcl
and
adc
xchg
cltd
jp
cmpsl
ds
push
mov
ds
push
mov
ds
push
mov
ds
push
mov
ds
push
mov
ds
push
mov
ds
push
mov
ds
push
mov
ds
push
mov
test
ret
cld
xchg
xchg
imul
cmp
mov
or
aaa
mov
lock
or
xchg
loop
ficomps
mov
adc
fs
cmp
adc
cmpsb
nop
xor
je
inc
cld
xorb
das
adc
iret
sbb
bound
xor
scas
mov
mov
sbb
add
push
xchg
lahf
jge
fwait
adc
jo
fcomi
fwait
movsb
jbe
lret
inc
push
imul
jmp
push
or
jbe
mov
pop
mov
sahf
mov
xor
into
jp
fstl
and
js
sub
sbb
or
imul
pop
imul
leave
ret
sub
jbe
sub
daa
lods
or
ds
icebp
or
cmpsl
nop
dec
jg
stos
pop
gs
push
jl
and
hlt
call
push
xor
push
xabort
jno
jecxz
loope
and
fstpt
idivb
xor
xchg
punpckhwd
leave
jmp
rcr
mov
sbb
push
pop
push
addl
js
xor
push
ss
fidivs
xor
mov
jg
repz
inc
or
mov
repz
add
in
dec
mov
xchg
enter
or
ljmp
mov
test
cmp
shrl
sub
loop
arpl
dec
push
or
in
repz
popa
fiadds
mov
add
add
push
mov
fisttps
mov
out
xor
add
sub
test
mov
mov
jge
jl
dec
popa
sub
rorb
mov
fwait
outsl
sbb
jns
mov
hlt
outsl
movsl
sub
mov
mov
stos
popa
shlb
and
imul
xchg
mov
push
sub
addr16
mov
push
dec
mov
cmp
push
push
jne
fisubs
add
lods
inc
sbb
cs
xchg
push
mov
sub
addr16
pop
gs
and
les
pop
add
mov
test
sub
les
sbb
xor
cmpsb
cmpb
lods
adc
add
int3
ljmp
xchg
xchg
test
out
outsb
pop
fcmove
aas
lock
leave
gs
and
int
mov
into
imull
bound
jge
push
jecxz
outsb
pop
adc
sub
mov
arpl
js
mov
loope
or
call
inc
loop
addb
lcall
out
cmp
push
push
mov
cmpsb
ret
xchg
sbb
adc
insl
fdivl
dec
movsl
sbb
ss
add
sbb
aam
xchg
out
mov
inc
rclb
dec
jno
jl
pop
push
cltd
test
cmc
dec
mov
xor
push
ret
push
or
push
in
in
xorb
ja
mov
pushf
mov
sub
outsl
sbb
scas
movsl
sbb
and
repz
mov
and
mov
stos
sbb
mov
loope
js
sbb
jnp
lds
int
mov
ret
push
idivl
inc
xor
and
movsb
sbb
sbb
pop
xlat
lds
data16
or
xchg
ret
inc
jnp
fdivs
pusha
pushf
lahf
inc
mov
pop
enter
in
sahf
mov
sub
jl
inc
aam
fwait
sahf
push
add
mov
sbb
jl
jg
mov
cmp
dec
aam
orl
push
pop
lretw
test
scas
inc
add
enter
in
push
lret
pop
orb
in
nop
mov
sbb
and
xor
inc
or
push
clc
push
out
mov
mov
push
mov
js
sub
or
hlt
pop
cmc
sarb
in
mov
sbb
loope
cmp
mov
js
mov
shl
lahf
ret
pop
in
mov
das
sbb
outsl
lds
cmc
adc
out
lods
ja
jmp
jecxz
imul
cmpb
jne
xchg
ret
aam
imul
cmpb
jae
sbb
or
pop
popf
push
enter
jns
das
push
shlb
mov
cmpsw
dec
popf
add
out
fcompl
popa
insl
ljmp
gs
mov
insb
loopne
cmp
xor
ja
sbb
in
mov
push
jae
push
mov
cmp
and
call
xor
xor
push
sub
mov
aad
mov
enter
cltd
xchg
ds
arpl
fs
fisttps
add
addr16
sbb
mov
dec
inc
lea
pop
xor
mov
outsl
dec
xchg
or
jge
sbb
ja
xchg
cmp
shl
add
jbe
cld
xchg
push
fcompl
push
and
push
jb
daa
sub
push
jmp
sub
inc
xor
push
mov
fdivrs
mov
adc
daa
pop
or
mov
test
ss
mov
ljmp
mov
jns
in
adc
xchg
pop
sbb
pop
daa
mov
jbe
dec
gs
cmp
repnz
rcrl
data16
lret
adc
add
push
incl
jle
clc
dec
cmpsl
xorl
mov
or
rorl
cmpsl
loopne
push
sti
adc
jmp
sub
or
inc
mov
loope
fsubrp
add
repz
stos
xchg
dec
jae
lcall
mov
adcb
test
push
pop
addr16
xor
mov
push
and
nop
jecxz
lods
adc
push
and
fists
aaa
fs
fdivl
xor
inc
push
pop
and
sub
jnp
fcomps
mov
out
jbe
mov
push
or
fdivl
mov
cmc
pop
or
or
add
fldcw
mov
frstor
jne
add
and
leave
mov
push
push
push
lods
cmpsb
repz
jo
push
mov
mov
push
shrb
adc
sbb
daa
clc
xlat
mov
stos
outsl
ljmp
push
cs
inc
push
mov
inc
inc
pop
orb
sbb
sbb
xchg
push
jo
and
pop
jno
addr16
mov
stc
add
sahf
pop
rdmsr
sti
aas
inc
dec
sbb
pop
and
ret
sahf
pop
jle
xor
pop
icebp
or
mov
xorl
sbb
sub
mov
mov
sub
into
mul
cmp
sahf
shlb
insb
in
inc
xchg
add
xor
pop
lahf
ret
insb
adc
lcall
scas
sub
stos
push
jne
andb
out
test
mov
pop
mov
xor
test
add
imul
adc
vpminsw
adc
fldl
fadd
sti
loop
decl
mov
test
stos
and
sti
jmp
outsl
pop
dec
sbb
dec
xchg
sub
push
popa
sub
js
xlat
test
pusha
sarl
xchg
out
std
std
icebp
mull
test
fldl
rolb
jp
mov
idivb
dec
aaa
lds
divl
push
fs
fsubl
xor
iret
xchg
mov
cmp
or
fisttpll
mov
xchg
mov
out
push
movsl
shl
pop
loope
fs
imul
das
sbb
xor
fadds
mov
pop
arpl
push
leave
mov
sbb
pop
mov
fwait
int3
lret
xor
sub
or
push
jns
imul
int3
rolb
xchg
inc
out
sub
in
add
mov
and
fsubrs
dec
lret
jns
xor
mov
dec
mov
testl
insl
shlb
push
sbb
cltd
cmpsw
imul
xchg
adc
and
mov
fildll
xor
fstps
add
cmpsl
xchg
jbe
xchg
lret
orl
pop
mov
and
ffree
int3
mov
scas
dec
inc
mov
pop
add
popw
das
sub
inc
iret
lock
push
movsb
adc
into
pop
jle
and
pop
test
sbb
outsb
je
aas
clc
lods
jo
in
popf
shrb
call
cmpsb
add
scas
sub
lds
insb
push
clc
test
cld
ret
adcl
mov
pop
add
shlb
stc
scas
inc
cmp
and
mov
es
cmp
xor
nop
mov
dec
sub
subl
sbb
mov
mov
cmpsb
imul
or
arpl
jge
xchg
inc
push
dec
arpl
popa
pop
xchg
sub
push
dec
inc
mov
into
mov
movsb
jnp
repz
xorb
pop
xchg
sbb
and
into
or
and
fs
stc
and
cmc
test
mov
lea
sub
jae
jl
add
cmpsl
fisttpl
nop
cltd
in
push
add
icebp
cmc
fstpl
pop
pop
movsb
cmpsl
mov
sub
fcmovb
fmuls
in
outsl
loop
mov
pop
es
inc
cmp
scas
xchg
sbb
adc
pop
dec
xchg
or
mov
fdivr
arpl
cltd
fs
insb
jg
icebp
jmp
movsl
jno
xor
pop
inc
inc
loope
cltd
pop
mov
sbb
repnz
std
pop
movsb
lcall
pop
pop
push
cld
xor
inc
cmc
movsl
dec
outsl
lock
addb
or
sbb
xchg
inc
sbb
je
jnp
icebp
cmp
mov
cld
mov
test
inc
out
mov
sbb
xor
adc
insl
jmp
sti
xchg
sbbb
and
cs
adc
fisttpl
jl
sub
dec
hlt
pop
jl
push
push
into
repz
push
jp
ror
fbld
sub
cmp
int3
push
call
xchg
dec
xchg
inc
hlt
stos
inc
repnz
ljmp
mov
cmp
int3
adcb
cmp
ljmp
lret
mov
lahf
xor
inc
cltd
movsb
cmp
shlb
cltd
push
push
fstl
test
dec
push
jle
xchg
adc
shll
dec
in
or
inc
cmp
and
lret
pusha
fs
pop
divl
stc
add
adc
jbe
loop
xor
push
or
push
xchg
xchg
addl
rcr
popf
mov
imul
sarl
or
lds
dec
jae
mov
ficoms
mov
into
mov
mov
sub
stos
repz
mov
pushf
pop
sub
daa
hlt
insb
sub
jg
push
sbb
addr16
les
add
mov
jmp
bound
adcl
inc
in
dec
mov
into
cmp
cltd
int3
adcb
vcmpps
and
stos
sub
or
mov
pop
shrb
inc
stc
adcl
fwait
int
js
push
daa
push
push
cmc
bound
or
pop
nop
xorl
cmp
lock
mov
adc
aaa
mov
pop
sub
pop
test
bound
mov
loop
mov
inc
xchg
cmp
jp
xchg
jg
sbb
mov
dec
push
push
mov
or
xlat
dec
dec
pop
push
stos
push
inc
rcrb
sti
outsl
jae
mov
aad
and
sub
insb
push
push
or
lods
out
dec
adc
or
mov
adc
sbb
or
and
sub
je
imul
pop
cmp
and
mov
xor
mov
xlat
nop
inc
arpl
test
shll
push
dec
mov
sahf
arpl
sbb
xor
jbe
insb
jecxz
clc
cmp
sub
mov
fisubl
xchg
mov
pop
out
aad
arpl
jns
test
rcrb
xchg
sbb
test
inc
cmp
mov
adc
and
mov
out
mov
mov
lret
push
idiv
mov
mov
ret
xchg
faddl
sbbl
subb
aas
testl
test
testl
jp
xchg
test
fxch
and
sti
repnz
pushf
mov
enter
pop
std
mov
cmp
add
loop
out
mov
movsl
sbb
int
inc
icebp
pusha
add
add
adc
aaa
in
lock
pop
dec
mov
rorl
cmpsl
lock
pop
std
jae
xchg
pop
mov
mov
int3
push
test
fdivrp
mov
inc
icebp
jb
xorb
mov
dec
ret
inc
push
pop
sub
xchg
stos
ffree
adc
in
imul
mov
sub
loopne
in
sbb
xchg
push
xor
clc
pop
xor
push
dec
inc
jnp
clc
or
enter
cld
push
jmp
pop
mov
inc
mov
dec
mov
loop
movsl
lods
xchg
enter
pop
add
daa
push
jbe
and
push
xchg
sub
mov
mov
popf
sub
ret
cmp
mov
pop
or
loope
and
mov
fimull
mov
je
mov
jl
mov
das
mov
aaa
mov
scas
int3
xlat
jns
pop
xor
mov
mov
lods
adc
mov
notl
ss
push
mov
popf
ja
lds
lret
push
addr16
jne
adc
lods
int
outsb
icebp
xchg
int3
out
out
fiadds
filds
fisubl
or
test
dec
mov
adc
xchg
adc
pop
pop
stos
aam
push
cld
in
orl
imul
mov
xchg
ds
bound
xor
call
mov
inc
mov
mov
pop
repnz
rcl
mov
jle
push
in
es
lahf
roll
scas
in
js
pop
push
add
jg
rorb
loopne
int3
and
adc
mov
lahf
add
aas
mov
mov
inc
xor
enter
fiadds
pop
int3
cmp
inc
push
xchg
xor
jp
aas
ja
es
fcomp
jecxz
iret
stos
or
adc
shrb
sub
gs
aas
aam
and
es
les
xor
jge
cmp
push
xor
xor
mov
pop
sub
inc
stc
out
pusha
adc
push
aad
mov
xchg
testb
test
cmpl
shl
ror
push
movntps
and
mov
adc
ret
cmp
test
or
xchg
ret
mov
push
sbb
imul
data16
cli
idivl
outsl
jmp
repnz
popf
outsl
movsl
loopne
mov
sti
std
or
insb
inc
das
adc
ja
dec
dec
and
or
in
ja
push
xchg
adc
mov
js
clc
popa
aas
fists
xchg
xchg
popa
mov
lods
mov
mov
into
add
mov
sbb
outsl
pop
push
xchg
mov
inc
jnp
or
addr16
xchg
dec
and
ds
push
aam
xor
fmull
pusha
clc
pushf
push
xchg
inc
fisttps
add
lods
lock
in
dec
in
sub
outsl
les
cmp
sbb
jb
js
and
jl
jb
subl
insl
mov
xchg
mov
sti
ljmp
call
sahf
or
push
mov
mov
shrl
adc
pop
sbb
cli
or
orb
aam
or
leave
push
mov
das
inc
je
sub
xchg
push
mov
mov
hlt
insl
in
dec
ffree
mov
jo
cmp
xchg
int3
sbb
pop
daa
mulb
mov
test
mov
rcll
fcmovu
mov
and
cmpsl
pusha
mov
sbb
fnstenv
je
push
pop
test
dec
jns
les
pop
mov
xor
ret
jp
sbb
mov
dec
aam
fsubrl
imul
mov
add
mov
mov
ds
push
aad
or
mov
mov
shr
inc
dec
imulb
mov
push
orl
jns
cmpsl
jo
daa
icebp
mov
push
test
add
nop
rcrl
sbbl
test
ret
lods
xchg
cltd
fnstsw
xchg
movsl
xchg
mov
hlt
ror
mov
js
les
or
sbb
frstor
adc
xchg
out
les
mov
adc
imul
mov
dec
stos
popf
mov
sahf
fcmovu
dec
mov
iret
push
je
gs
push
push
sub
and
mov
aam
stos
xor
mov
dec
mov
call
sub
xchg
setns
sbb
jno
mov
fstcw
xchg
sub
daa
mov
jnp
movsb
lock
pop
mov
adc
mov
loopne
push
dec
ja
ret
faddp
andl
sbb
cld
xchg
push
sbbb
hlt
aam
xchg
adc
test
and
jp
faddl
ffree
push
test
imull
mov
xchg
sub
dec
mov
lahf
xor
sar
aad
fs
jbe
lea
push
sbb
push
pop
mov
repnz
inc
cs
and
aad
iret
adc
inc
sti
mov
in
jge
and
pusha
and
or
sbb
scas
jg
inc
mov
popa
mov
fsubrp
aad
notb
dec
stc
in
xor
or
setns
or
lret
pop
fs
fiadds
jecxz
out
cmp
lods
lock
out
enter
mov
popa
scas
test
pusha
mov
dec
inc
cmp
adc
jle
int
sub
imulb
xlat
clc
xor
loope
jecxz
lods
push
imulb
ss
repnz
pop
stc
out
jecxz
gs
pop
lahf
cmp
hlt
mov
fucomp
push
pop
lock
lea
sbb
mov
inc
xor
cmp
jge
fiaddl
xor
fildll
xchg
addr16
push
nop
fstl
push
dec
inc
mov
mov
dec
fldl
pusha
cltd
dec
arpl
cmp
nop
mov
ds
cmc
jg
push
nop
cld
dec
cld
pop
pushw
lea
jmp
notb
pop
inc
shl
xchg
call
sbb
ss
icebp
sub
jb
mov
inc
mov
sub
jle
dec
retw
push
test
mov
call
inc
gs
mov
sbb
xchg
fwait
mulb
sbbb
mov
adc
xchg
mov
mov
jle
int3
cltd
outsl
into
dec
jnp
addr16
js
hlt
dec
pop
push
lods
xchg
mov
fisubrs
stos
xchg
add
add
inc
je
dec
mov
xor
or
repz
mov
lods
push
repz
push
push
push
sbb
push
loopne
mov
ret
lcall
andl
xor
out
cmc
mov
out
lods
mov
test
xlat
xlat
out
imul
lcall
ret
and
mov
push
pop
test
lods
xchg
das
jl
out
mov
sub
mov
sbb
movsb
das
cmpsl
fldt
out
pop
dec
ja
fwait
jnp
je
sbb
jnp
movsl
dec
mov
mov
cs
stos
mov
flds
fwait
les
xor
cs
popf
add
repnz
les
movsl
mov
add
jmp
and
out
out
dec
cmp
lods
cli
xor
xor
cmp
mov
push
and
cmp
daa
imul
arpl
dec
js
ss
sbb
dec
jp
fsts
mov
mov
xor
mov
sbbb
mov
repnz
sub
stos
pop
fstsw
xchg
fists
mov
mov
sbb
aas
out
pop
mov
jbe
mov
push
cltd
push
push
gs
pop
xchg
mov
lfs
or
sub
fwait
scas
push
fisttpl
cmc
xor
jle
and
test
repnz
cli
inc
fs
out
inc
cmp
std
mov
test
jge
out
fisttpl
inc
popa
cmp
add
mov
push
test
mov
fs
or
add
add
ljmp
cli
addr16
loope
std
inc
lcall
pop
pop
sub
popa
sub
or
dec
xor
fiadds
not
or
sub
cmp
mov
jle
in
data16
and
lods
ret
mov
out
and
inc
jnp
push
cmp
test
lret
in
in
add
call
and
mov
out
add
not
inc
inc
inc
arpl
rcrb
push
xchg
ret
lods
inc
or
adc
fcmovb
lret
jge
pushf
aad
xchg
jecxz
lea
mov
adc
push
jo
lock
int3
mov
sahf
stc
pop
mov
jnp
and
mov
pop
and
pop
push
sub
shrb
nopl
inc
in
xor
les
cmpsb
pop
mov
adc
imul
adc
shlb
imul
mov
and
outsb
cmp
aam
push
push
sbb
xlat
jp
sbb
adc
imul
pop
jns
lcall
shl
in
fsubs
dec
pop
push
ror
aam
dec
icebp
or
jbe
mov
in
lods
xor
pop
in
mov
stos
push
pop
pop
sbbb
cli
add
jae
pop
inc
inc
xchg
movsl
mov
inc
push
mov
bound
adc
sub
inc
add
getsec
adc
mov
je
gs
inc
dec
jl
mov
int3
cld
rorl
daa
shll
push
mov
test
rcll
movsb
ja
sbb
mov
aas
or
cwtl
stc
test
nop
stos
je
jl
cmp
cmp
inc
xor
adc
stos
cmp
iret
inc
sub
test
jo
inc
inc
stc
jmp
jl
fisubs
mov
mov
mov
lcall
xchg
negl
cmp
pop
mov
ss
inc
fcomps
scas
aam
lret
inc
xchg
inc
jle
rcrl
mov
cmp
daa
push
popa
lcall
mov
sbbb
aaa
or
enter
sub
in
mov
mov
cmp
test
sahf
cmp
aaa
pop
in
push
jae
cmp
sub
jmp
dec
adc
sahf
and
aad
test
jmp
pushf
aad
fistl
aad
sti
mov
pop
out
push
jmp
or
push
in
cmp
cmp
jl
lods
xor
lcall
and
mov
push
or
xor
cmc
or
cmpl
push
jbe
dec
adc
out
pop
test
stos
popf
andb
mov
mov
insb
mov
inc
mov
add
sahf
out
pop
incl
daa
jg
pop
or
sub
mov
dec
les
mov
pop
add
inc
inc
getsec
rcrl
mov
cmp
xchg
pop
dec
aad
cmp
sub
inc
incl
xchg
inc
sbb
divb
std
fwait
xor
aad
inc
cld
push
mov
subb
dec
push
arpl
jo
sahf
test
cmp
adc
out
gs
pop
sbb
in
fldcw
fildll
movq
xchg
jne
push
and
push
or
add
and
lea
scas
mov
aam
hlt
stc
lds
lret
xorl
inc
push
std
fs
gs
ret
inc
mov
lret
mov
repz
add
jp
rcrb
rclb
sub
bound
jle
jg
rcll
out
lock
sbb
cltd
jl
xchg
in
aad
jne
push
mov
mov
push
pop
fimull
push
mov
sbb
xor
int3
insl
lods
inc
xor
fldcw
and
call
cmp
arpl
cmc
das
cmp
adc
jbe
adc
cmp
add
mov
popf
dec
sti
mov
fildl
test
ljmp
mov
mov
dec
sub
cmpsl
add
in
pop
cmpsl
out
jnp
dec
mov
push
jl
icebp
lcall
test
jmp
clc
les
xchg
and
sti
out
sbb
xchg
pop
rcl
dec
or
mov
xor
test
sub
mov
sub
int3
mov
in
mov
pop
xor
mov
idivl
adc
pop
int3
jge
xor
fs
push
lret
pop
dec
in
sub
addl
notl
inc
es
and
inc
nop
rcll
jp
icebp
dec
xchg
fisubs
xchg
xchg
nop
push
test
pop
xchg
mov
fwait
stc
dec
inc
xor
test
and
jecxz
or
cmc
rolb
loopne
xchg
xchg
rorb
jae
jle
out
in
lahf
jb
and
or
mov
xchg
call
mov
xchg
mov
mulb
dec
cmp
addr16
lods
and
out
push
and
es
jbe
enter
or
dec
pop
dec
rcrb
in
mov
and
test
repnz
out
mov
cmp
sub
mov
nop
push
sub
rorb
popa
fidivs
adc
jmp
scas
push
inc
inc
xor
sahf
sbb
lret
mov
fisubrs
and
les
push
push
inc
xchg
jle
pushl
ja
pop
xchg
jo
mov
push
daa
rcr
mov
outsl
ret
add
outsl
adc
dec
mov
cs
push
pop
push
sbb
bound
push
mov
inc
jb
pop
sbb
outsb
daa
adc
add
iret
lcall
pusha
addr16
lea
jecxz
test
cltd
push
adc
lret
pop
mov
les
mov
sub
lock
add
imulb
mov
mov
shlb
add
inc
xor
mov
in
mov
icebp
mov
icebp
cmp
inc
loopne
in
out
sub
out
mov
movsl
jns
inc
mov
imul
xor
cs
add
ds
mov
pop
mov
mov
cs
ss
ficoml
data16
mov
push
pop
imul
lahf
ret
xor
cmpsl
inc
scas
dec
stos
imul
icebp
ljmp
push
adc
iret
fsubrl
cmp
arpl
fwait
sbbl
lret
jecxz
sbb
mov
push
pushf
and
fisubl
adc
xor
dec
in
mov
lods
cld
mov
inc
loopne
and
jnp
xchg
fsave
rolb
repz
in
mov
cltd
cmpsl
push
int3
repz
sarl
das
jge
mov
and
fsubrs
xchg
jo
outsb
mov
add
shr
loop
insb
xchg
push
inc
dec
or
inc
or
xor
cmpb
pop
outsl
xchg
ljmp
in
addr16
sarl
dec
rcll
pushf
mov
idiv
xor
jae
jo
xchg
lahf
pushl
or
sahf
scas
jecxz
mov
xor
cmpsl
push
mov
ds
mov
enter
ljmp
dec
push
jae
mov
loope
out
push
cmc
sub
inc
ret
in
ret
pop
ljmp
push
daa
dec
mov
or
xchg
ficompl
ds
add
sbb
inc
jg
add
sbb
bound
sbb
int3
into
cmp
fwait
pop
jae
mov
insb
popf
mov
xor
inc
inc
dec
inc
scas
imul
xchg
cmp
jbe
sti
mov
adc
mov
stc
js
int
mov
cmpsl
inc
adc
xchg
fmul
mov
add
xor
jb
daa
add
loopne
mov
ret
mov
jnp
cmp
mov
jge
cmp
mov
les
pop
jl
outsb
ret
inc
cmp
pop
mov
mov
add
jp
mov
dec
push
fstpl
lods
dec
lahf
sbb
inc
inc
test
repnz
decb
aas
shrl
cld
inc
or
cmp
hlt
adc
cmp
dec
mov
sbb
fistpl
and
inc
xor
sbb
test
bound
ljmp
cld
imul
push
xorb
inc
sbb
sbb
out
insl
dec
notl
repz
ds
je
sbb
or
jge
imull
ja
adc
cmp
aaa
jp
or
push
popf
jnp
nop
je
mov
shlb
jge
pop
mov
push
lcall
mov
ret
gs
int3
xchg
arpl
ret
popf
adc
cmpsb
ljmp
fcmovnu
pop
sti
mov
cltd
loopne
mov
inc
mov
adc
lea
mov
push
enter
sub
mov
mov
and
mov
mov
mov
ret
mov
inc
addr16
pop
inc
add
xchg
mov
xchg
in
ficoms
sub
scas
dec
clc
xchg
jmp
jge
add
or
sbbb
stos
push
inc
add
pop
xor
fs
fwait
cld
cmp
movntps
loop
push
xchg
leave
and
add
cmp
and
leave
out
popf
dec
or
push
cld
cwtl
sti
js
das
sti
xchg
mov
push
mov
jno
sbb
loop
mov
filds
add
es
add
clc
out
dec
adc
mov
adc
cmp
sti
in
adc
sub
adc
mov
mov
and
scas
in
adc
add
scas
dec
out
bound
out
jp
pusha
mov
add
int
or
lds
mov
adc
xchg
mov
pop
xor
mov
scas
in
fistl
in
mov
xor
sarl
fdivrl
xchg
mov
mov
int
push
inc
and
inc
aam
push
lret
es
inc
outsb
or
aas
pop
jbe
mov
call
mov
dec
adc
mov
or
test
stos
in
push
fildl
add
shlb
mov
jo
mov
js
shll
cltd
mov
and
mov
in
fdecstp
je
jmp
mov
or
adc
leave
xlat
and
push
xchg
mov
iret
mov
xor
cmp
ja
ds
jmp
sub
aaa
lret
fucomip
sub
add
es
pushf
sub
lds
or
das
dec
and
loop
test
dec
fldl
adcb
or
cltd
mov
js
cltd
rol
shrb
adc
popf
dec
xchg
inc
mov
ret
outsb
gs
dec
jno
les
adc
movsl
add
xor
sub
movsl
imul
shr
inc
cmp
cmc
add
std
mov
in
xchg
test
fidivs
pop
sbb
lea
or
cmp
jecxz
aam
inc
psraw
sub
sub
bound
push
lods
dec
lahf
push
int
ljmp
fiaddl
or
cmp
test
rcrb
add
out
xchg
sub
mov
cmc
jno
or
or
popf
mov
pop
cmp
mov
ds
hlt
outsb
into
adc
addr16
test
dec
add
jge
test
sbb
test
ficomps
sbb
sub
jmp
insl
and
pop
sub
aas
cmp
cltd
xor
mov
out
es
mov
jnp
inc
int3
ss
rcl
pop
or
imul
enter
jp
repnz
fwait
mov
jmp
and
repnz
movsb
sbb
and
push
shl
xor
mov
xor
cmp
cld
inc
fisubl
out
mov
mov
sub
stos
addl
fdiv
push
mov
pop
push
imul
sbb
enter
push
push
or
cmp
ret
andb
das
lahf
inc
js
push
test
outsl
inc
push
adc
popf
push
rcrb
mov
push
push
dec
push
idivb
xor
pop
cmp
out
loope
mov
mov
insl
mov
ss
rcrl
inc
shrb
lcall
aas
pop
pop
fwait
xchg
ret
inc
pop
mov
ds
adc
loopne
mov
xchg
fucomip
add
pop
test
mov
lahf
fstps
arpl
adc
sub
clc
repnz
fstl
ret
das
inc
mov
xchg
pushf
xlat
jp
out
call
leave
dec
hlt
mov
mov
stos
mov
js
pop
mov
or
xchg
ss
xor
cmp
dec
and
mov
mov
cmp
mov
pop
inc
mov
xchg
push
sar
sbb
call
jp
pusha
fidivs
inc
fildll
popa
clc
add
xchg
mov
cmc
loop
push
movsb
call
jmp
inc
sbb
or
and
jmp
call
movsl
lods
sub
cmp
jbe
inc
jnp
and
and
out
out
fadd
test
daa
data16
and
xchg
push
scas
aam
mov
bound
movsl
jl
fistpll
xchg
mov
inc
sbb
or
push
ja
xchg
cs
jns
adc
popf
cmp
dec
mov
je
loopne
leave
jle
mov
mov
or
cmp
loop
out
xor
mov
jmp
data16
fistl
fnsave
pop
push
adc
mov
mov
or
and
test
jmp
push
push
jle
push
pop
ret
out
xchg
pop
pop
and
in
hlt
sahf
ret
add
inc
or
out
dec
je
dec
cld
aad
cmp
in
mov
pop
movsl
mov
mov
jg
pop
jle
shr
push
pop
sbb
inc
mov
andb
ds
push
fadds
and
addb
add
sub
jmp
mov
add
bound
sbb
inc
incb
icebp
lods
inc
decb
inc
jmp
and
sbb
xchg
imul
adc
out
dec
das
in
aaa
lahf
movsb
dec
adc
iret
mov
dec
mov
jg
xor
push
push
cld
or
cli
and
inc
push
rcrl
lea
sub
sbb
mov
xchg
push
out
loopne
push
mov
lahf
repnz
rcrl
cwtl
jo
push
pop
repz
jbe
push
ds
pop
adc
jecxz
movsl
lahf
cmp
add
pop
shr
loopne,pt
jbe
pop
push
pop
shll
xchg
aas
adc
push
sbb
or
cmp
test
leave
nop
cli
add
lods
stc
pushw
fsubp
rcr
gs
negl
lock
in
inc
mov
push
shll
scas
rclb
push
dec
es
fsubrl
mov
cmp
add
lret
repz
xchg
dec
pop
pop
ret
mov
add
push
mov
or
mov
jmp
jnp
repz
icebp
int
js
fwait
push
jp
pop
lds
or
popa
int
cs
movsb
pop
outsb
dec
pop
jae
and
xchg
testl
aam
lret
cmc
sbb
lret
xor
aas
xchg
push
xchg
int
in
push
xor
mov
daa
sti
mov
lea
cmp
pushf
andb
ja
mov
into
and
mov
and
cs
enter
adc
mov
clc
shlb
repz
push
imul
mov
push
sahf
mov
push
mov
daa
mov
jae
int3
and
cmp
insl
popf
nop
test
xor
fists
dec
stos
xor
mov
pushf
jg
cld
pop
xlat
mov
ja
cltd
sub
pop
cmpsl
and
adc
out
js
xchg
mov
push
rclb
cmp
sahf
sbb
mov
lock
ret
cld
sbb
lock
inc
dec
jl
jg
lea
stc
es
jl
enter
pop
sub
outsb
pop
jg
jle
mov
push
mov
imul
adc
push
xor
fldt
sbb
mov
stos
fisttpl
pushl
push
xchg
mov
sbb
fsubr
push
lahf
je
jo
gs
pushf
pop
aam
in
xor
int
out
lock
int3
jmp
call
add
mov
mov
mov
mov
push
jb
pop
popa
lcall
mov
xorb
and
sub
push
fst
lcall
fisttpl
lea
and
xor
mov
cltd
cld
loope
sahf
and
lds
in
adc
xor
ss
scas
push
sbb
adc
pushf
in
adc
jg
xchg
int
fcom
enter
dec
jg
aad
add
aam
dec
cli
sbb
call
das
push
mov
ret
mov
sahf
push
outsl
jne
cmp
push
rorb
xor
clc
ja
inc
jno
push
sub
xchg
inc
negl
scas
int3
cmpsb
js
divl
push
and
ja
inc
add
ret
dec
sti
fiadds
cmp
push
mov
nop
fwait
xor
popa
cld
add
xchg
sub
hlt
popf
push
or
popa
add
push
xor
fucom
cmpsb
sbb
lcall
int3
jmp
xchg
sahf
pop
lods
lock
push
add
jg
je
pop
pop
lret
lahf
adc
jl
cmpsl
xor
sbb
inc
or
enter
xchg
mov
scas
inc
mov
xlat
leave
jne
jge
imul
adc
xchg
inc
sub
push
test
cmp
les
std
out
arpl
flds
adc
jno
cmp
sbb
jo
push
fwait
xchg
and
icebp
push
ljmp
inc
sbb
imul
enterw
mov
or
fists
mov
negb
or
inc
lret
xor
adc
aaa
pop
bound
dec
cmc
push
std
ja
pop
cmp
or
lret
cmp
sbb
cs
push
out
push
sub
icebp
dec
or
mov
cmpsb
repz
icebp
cmp
out
cmpb
idivb
mov
or
adc
sub
xor
cmc
or
pop
xorl
and
xchg
lods
xchg
sbb
lock
pop
adc
jl
dec
xchg
sbb
dec
decb
lret
cmpsl
es
xchg
adc
arpl
mov
xchg
sub
xlat
ja
push
in
xor
movb
loop
cli
mov
ss
mov
es
or
and
daa
dec
in
lods
enter
adc
cwtl
in
jb
mov
arpl
div
xchg
adc
imul
inc
stos
mov
ficompl
xor
xchg
inc
inc
add
out
jg
mov
cmp
push
arpl
xor
push
mov
xor
popf
or
fdivl
sub
test
fs
stc
sbb
sub
sub
popf
add
pusha
pop
mov
pop
sahf
push
movsl
outsl
sub
adc
lods
dec
xor
imul
test
clc
dec
fucom
sbbb
loop
adc
insb
xchg
push
mov
inc
adc
cmp
jno
push
int
lretw
leave
push
mov
sbb
lea
sbb
aad
lret
sub
ror
test
pop
in
scas
jp
cli
mov
jle
push
sbb
adc
loopne
pop
mov
pushf
test
loopne
daa
pop
imul
ret
mov
xchg
lock
adc
outsl
fbstp
in
lahf
in
mov
inc
clc
inc
mov
shr
adc
mov
xor
mov
cmp
inc
in
mov
dec
pop
push
fidivrl
push
mov
push
sahf
push
push
mov
sbbb
mov
and
jo
inc
outsb
inc
andl
adc
dec
xchg
dec
stos
xor
mov
push
adc
daa
imul
dec
mov
xchg
cmp
mov
icebp
cmp
rcrb
xor
fistps
xchg
or
push
icebp
pop
and
jae
jle
ret
pop
fcomps
lock
push
sub
push
or
scas
push
lret
inc
adc
inc
insl
dec
or
sub
pop
push
insl
xorl
test
adc
fucomi
xchg
or
sbb
in
pusha
shll
je
dec
dec
fnstsw
call
orl
inc
mov
xchg
mov
outsb
mov
dec
hlt
stos
mov
mov
fwait
dec
int
or
mov
jge
mov
jecxz
call
push
add
call
mov
xor
pop
in
ja
in
cmpsb
sbbb
data16
into
lret
inc
test
push
jge
std
xchg
dec
xchg
mov
dec
scas
aam
sbb
imul
arpl
dec
add
in
in
push
sbb
add
scas
cli
cmpsl
in
sbb
push
mov
movsb
push
repz
mov
popf
mov
subb
mov
fidivrl
push
icebp
add
push
add
in
in
adc
daa
sbb
mov
ds
and
or
imul
cmp
sub
push
std
sub
es
ljmp
insl
or
enter
fadds
lods
cmp
pop
pop
sbb
into
in
daa
adc
xor
ss
out
mov
icebp
pop
mov
or
faddl
je
jb
dec
fldt
mov
mov
arpl
pop
iret
addr16
rolb
jmp
jno
push
mov
les
jo
pop
out
repz
jbe
jecxz
cmpsl
xor
xor
fldt
mov
ret
cmp
pop
ds
and
push
in
fwait
sbb
mov
sarb
rclb
jl
jno
mov
jb
add
adc
shl
sbb
out
and
outsl
xchg
lock
push
or
int3
and
mov
fadd
bound
adc
jg
push
push
call
mov
insl
push
rcl
loopne
push
inc
add
xor
test
lret
xlat
scas
sbb
and
push
sbb
scas
rorl
aas
add
mov
test
into
sub
fcompl
popa
mov
xor
test
into
push
out
imul
frstor
dec
int3
and
dec
mov
adc
js
sbb
cwtl
int
sub
aas
lcall
int
test
popf
popa
mov
stos
sarl
mov
push
in
roll
std
sub
xor
adc
lcall
lret
jmp
lea
fistpll
pop
je
inc
sbb
jle
sub
sub
fisubs
fldenvs
sar
sbb
inc
addb
into
inc
roll
inc
dec
pop
scas
mul
fwait
pop
mov
sbb
sbb
sbb
fiadds
dec
inc
rcl
xchg
sbb
andl
mov
daa
push
cmpsb
pop
pop
fimuls
mov
dec
mov
sbb
aam
jp
sarb
mov
dec
enter
int3
clc
adc
out
pop
cmp
push
mov
adc
hlt
mov
rcr
mov
mov
lcall
movl
xchg
shll
in
cmp
test
stos
mov
xor
jnp
mov
scas
jmp
gs
pop
mov
ret
jb
and
popf
dec
rorl
jle
mov
cli
fwait
pop
cmpb
dec
andb
mov
out
mov
scas
arpl
sbb
in
addr16
js
js
hlt
scas
jecxz
cmp
xchg
insb
add
mov
fidivrs
ret
popa
aas
jle
mov
gs
iret
cltd
in
sbb
mov
or
adcl
popf
add
mov
xor
add
ret
sbb
loopne
ret
sub
and
add
mov
lea
push
mov
inc
fldenv
inc
daa
jo
movl
mov
std
mov
sbb
sub
aam
or
mov
in
or
adc
mov
ret
inc
out
jo
add
ljmp
pop
xchg
fstl
mov
jae
xor
filds
xor
imul
xor
arpl
lea
xor
das
jecxz
jecxz
dec
push
sbb
pop
add
pop
jne
and
and
mov
jno
or
in
ficomps
jb
out
stc
popa
popa
enter
andl
sti
ficomps
fldt
pop
mov
pop
jns
jne
sub
xor
mov
iret
push
sub
pop
mov
xlat
sub
repz
pushf
sahf
roll
add
or
push
jg
ja
mov
aad
insb
addr16
in
and
mov
sbbl
adc
movsl
sub
pop
out
mov
mov
mov
jno
jbe
sub
push
stc
lea
mov
rcr
jp
dec
in
mov
jns
mov
outsl
lret
sub
dec
cmp
ds
mov
sbb
push
js
pop
mov
mov
fdivrl
mov
int3
je
shrb
divb
rclb
xchg
insb
jns
mov
push
pushf
inc
ljmp
jle
stos
dec
cmpsl
loop
pop
inc
movsb
push
pop
xchg
dec
or
shlb
push
push
jne
xchg
mov
push
js
mov
jge
in
dec
and
dec
push
sub
xor
jnp
mov
daa
loopne
pushw
out
ficompl
adc
dec
dec
sahf
inc
mov
loop,pt
aaa
arpl
mov
jno
mov
negl
sub
sti
or
adc
jno
enter
xor
inc
call
add
pop
dec
cld
pop
mov
and
pop
fldt
xor
mov
mov
rol
jb
pop
dec
mov
mov
and
push
icebp
adc
mov
adc
xor
test
aaa
pop
jae
inc
scas
sbb
jle
jmp
cmc
cmc
sub
out
jne
mov
mov
decb
ja
mov
and
dec
mov
in
out
in
mov
arpl
add
lea
addr16
ret
and
and
movsb
popa
call
das
add
xor
mov
cmpsl
sahf
aam
push
test
insl
rorb
fwait
dec
mov
sahf
out
insb
insl
stos
scas
lcall
mov
mov
mov
das
lret
cmp
shr
ret
adc
ss
sub
xchg
dec
mov
jmp
cmp
mov
std
dec
push
pop
dec
aas
mov
lret
aaa
inc
mov
add
push
or
in
push
jne
mov
jns
decb
aaa
mov
cmp
mov
push
test
addr16
mov
jecxz
fnsaves
xchg
push
sbb
enter
pop
push
popfw
mov
pop
xchg
sub
lret
jbe
adc
andl
dec
insl
inc
jo
mov
sbb
push
adc
jne
andb
test
loop
dec
leave
popa
int3
pop
adc
outsb
cmpsl
mov
cmc
lret
ret
stos
sub
cmc
popf
xchg
dec
adc
or
js
repnz
ljmp
pop
stc
test
test
pop
ret
mov
or
mov
jecxz
aas
mov
je
in
or
pop
push
inc
push
adc
lds
sub
sub
in
mov
cmpsb
cli
stc
ret
adc
aad
mov
insb
cmp
add
push
jl
sub
xor
jnp
std
xor
jbe
imul
mov
adc
cld
xchg
in
and
fidivrl
fistpll
push
xlat
push
mov
repz
and
pop
stos
lcall
fildl
mov
outsb
pop
cmp
js
push
mov
rcl
dec
getsec
or
aaa
sub
icebp
pusha
push
gs
push
xor
shlb
xor
gs
or
divl
lock
xchg
orl
mov
jb
fs
int3
sub
add
jne
cltd
ror
aas
mov
cmpl
jmp
push
pop
je
aas
push
setne
inc
shrl
jmp
mov
pusha
adc
jns
das
push
jmp
sbb
mov
stos
fildll
je
test
into
dec
sub
xchg
jb
dec
movl
in
inc
and
sarb
lods
xchg
sbb
shrl
loope
loope
cmp
jmp
dec
enter
jge
stos
sub
cmp
inc
gs
jnp
fcoms
sub
mov
sbb
sbb
test
ret
sbb
xor
push
movsl
dec
popf
addr16
loopne
aad
rcll
mov
insb
cmp
mov
push
je
nop
mov
lret
jl
in
pop
sahf
cmc
lods
fidivrl
xchg
insb
pop
fnsave
insb
pop
cmpsb
shll
mov
sub
push
mov
jbe
jne
repz
xor
cs
xchg
add
sbb
pop
and
sbbl
lcall
test
jnp
repz
out
pushf
mov
and
adc
sub
fsubs
pop
addr16
rcrl
scas
mov
pop
jb
ljmp
or
cmpsl
or
jns
cmpsl
pop
lea
in
addr16
je
addb
sahf
mov
ficomps
push
xchg
into
std
fwait
in
pop
je
xor
test
fldcw
inc
jae
mov
out
fdivrs
pushf
out
aas
leave
mov
xor
hlt
movsb
mov
cli
mov
add
adc
lcall
sbb
iret
std
jmp
sub
mov
gs
jbe
push
aaa
pop
scas
sub
imul
pusha
cmp
jge
clc
push
fsts
mov
pop
push
inc
cltd
rcll
adc
lret
hlt
inc
jmp
scas
into
push
shlb
sub
pop
fwait
repz
cmp
ret
cmp
mov
test
mov
adc
scas
pop
adc
aaa
inc
cmp
mov
aad
mov
pop
xor
push
cmp
adc
cmpsl
cmpsb
stos
push
or
insl
imul
push
mov
imul
pop
shll
aad
lds
test
adc
jle
inc
in
loope
mov
loopne
stc
push
jmp
and
fcoml
call
push
mov
adc
ljmp
adc
cmp
and
cmp
fistpll
aam
dec
fmuls
or
jmp
outsl
push
test
adc
clc
mov
fsts
lods
imul
sti
mov
es
aas
jmp
push
stc
lods
mov
mov
out
int3
fcomip
cmp
lods
sbb
push
mov
jge
and
and
xor
outsb
scas
fstps
push
inc
dec
pop
enter
testb
xchg
ss
test
xchg
and
and
jle
fstp
sub
gs
or
or
ffreep
or
pushf
std
or
push
jmp
add
roll
and
hlt
imull
pop
cmp
mov
dec
enter
popf
fcomps
push
popa
push
pop
cld
push
pop
sbb
or
mov
out
mov
fcompl
mov
popf
in
mov
mov
leave
pushl
mov
add
fldenv
cmp
add
stc
sahf
lods
xor
mov
shlb
outsl
aas
in
cmp
in
dec
popa
dec
movsl
enter
xchg
dec
sahf
or
pop
lahf
leave
loop
fisttpll
nop
lret
dec
ds
inc
jecxz
mov
jo
les
in
scas
xor
std
push
push
nopl
mov
mov
in
enter
call
data16
movsb
cmp
fsts
push
inc
adc
xchg
sub
aam
jp
repz
mov
sbb
adc
jg
pop
jmp
cmp
sub
pop
pop
movsb
xchg
mov
dec
mov
cwtl
mov
lock
out
ljmp
daa
xchg
mov
cmpsb
xchg
pop
clc
adc
and
ja
cld
push
sbbl
or
and
adc
and
loopne
and
mov
inc
dec
stc
or
outsb
je
jns
xchg
shrl
mov
hlt
out
loope
pop
lds
leave
lret
inc
loopne
adc
es
cltd
addr16
sub
jge
cli
arpl
ds
cmpl
cs
jle
jecxz
jbe
subl
jb
popa
pop
xor
adc
lahf
mov
cmpsb
fdivs
pop
pop
and
push
int
or
mov
jne
pop
xchg
enter
insb
xchg
dec
ds
sub
push
add
dec
mov
cmp
test
movsbl
mov
mov
push
jecxz
cmp
fmul
push
or
popf
push
xchg
dec
add
push
jns
cmp
cmc
inc
mov
into
xor
sbb
sub
cld
in
mov
and
sahf
mov
adc
out
lods
mov
pop
mov
mov
push
push
leave
mul
lods
out
and
lea
out
pop
jmp
lret
stos
or
int3
add
fnstcw
mov
pop
sti
in
add
sbb
push
sub
jecxz
dec
rclb
or
mov
and
lcall
jae
dec
pop
pusha
in
sub
stos
je
xchg
inc
xchg
out
data16
mov
mov
pop
lock
pop
mov
test
pop
cmp
sbb
sbb
push
sbb
mov
leave
mov
movsl
dec
fmul
dec
inc
pop
xor
jb
xor
push
lds
pop
test
rorl
fs
pop
sbb
mov
jl
and
test
fdiv
js
popa
pushl
fwait
repnz
clc
ficoml
or
std
loope
jge
dec
loop
or
data16
push
xchg
fs
es
notl
or
mov
fnstcw
push
insb
addr16
jle
sub
jns
imul
fs
fidivl
or
nop
je
jmp
mov
into
dec
xchg
or
cli
aad
sbb
out
pop
add
mov
sub
int
shrl
pop
clc
aas
lahf
lock
jge
jb
mov
scas
inc
iret
cltd
jg
je
clc
cmp
xor
mov
fldenv
aad
xor
arpl
sbb
mov
cmpsl
push
pop
mov
pop
push
pminsw
rcrl
xchg
inc
rcl
sub
adc
pushf
imul
test
pop
es
push
mov
xchg
pop
js
hlt
sub
add
gs
mov
orl
push
push
dec
mov
pop
popa
inc
es
xor
loope
inc
bound
clc
rcrl
test
pop
jge
push
cmp
sbb
mov
mov
pushf
sbb
fimull
out
jg
pop
rorb
xor
jb
insl
lahf
rcrb
notb
ret
lock
imul
std
xchg
popa
add
scas
pop
xlat
jle
ficoml
jbe
out
sti
sub
cwtl
lods
data16
outsb
fists
or
xchg
sbb
add
mov
pop
daa
mov
daa
ret
and
into
dec
mov
or
inc
cmp
sub
push
fnsetpm(287
repz
mov
ret
or
add
ds
outsb
push
aaa
icebp
mov
hlt
loop
rcr
addr16
inc
cmp
dec
xor
and
mov
and
lret
xlat
sti
lret
inc
cmpsl
into
push
jmp
fnstcw
ss
adc
push
lea
clc
sub
mov
mov
cmp
cs
fildl
loope
pushf
leave
sub
int3
or
notl
xchg
inc
lret
or
lret
dec
xor
xchg
rcll
dec
jne
fwait
popa
and
mov
enter
fcmovu
enter
getsec
xchg
gs
cmp
push
cltd
in
pop
pop
ror
jmp
int
bound
mov
mov
lcall
mov
mov
lcall
int3
push
leave
aas
fcmovb
mov
pop
or
mov
cld
xor
pop
in
pop
fstps
int
adc
ss
shl
arpl
adc
jbe
inc
xchg
aad
sbb
sbb
fcmovbe
cmpsl
pop
and
ljmp
inc
jle
and
mov
dec
jae
pop
xor
in
lock
push
push
js
out
add
popf
jg
jge
dec
adc
jp
mov
gs
fdivrs
fnstcw
or
jne
lock
inc
adc
pop
pop
std
das
rcrb
pop
cmp
shl
mov
jecxz
pushf
stc
fsubl
dec
call
or
cmpsb
mov
pop
jp
sub
mov
push
jno
mov
xor
pop
lods
cmp
mov
clc
and
cmpsb
xchg
sbb
pop
lea
sbb
sub
fcompl
js
mov
call
nop
daa
cmp
repnz
inc
shr
mov
adc
push
or
adc
push
arpl
shll
aaa
push
mov
sbb
adc
add
sbb
pop
test
dec
push
imul
stc
push
cmc
add
insb
pop
push
scas
call
movzwl
int
add
sub
jae
sub
pop
jns
push
dec
adc
mov
stos
orb
mov
fdivrl
aas
push
or
rorl
lods
sti
or
jnp
mov
inc
jne
loopne
out
mov
push
ss
lds
and
inc
mov
test
pop
dec
add
add
sub
add
jge
loopne
sub
stos
push
notl
inc
cmp
jmp
mov
test
lods
xchg
sub
fildll
mov
in
cmpsl
loop
ret
repnz
cld
mov
adc
mov
shrl
xchg
jle
mov
into
dec
jb
or
sbb
cmp
mov
lret
adc
popa
sti
adc
mov
cs
fnstsw
lods
push
push
mov
clc
xor
xchg
xor
outsb
and
or
ficoms
call
xchg
cmp
mov
mov
cmp
and
shrb
sti
pop
add
sbb
pop
pop
sub
pop
inc
gs
mov
fmuls
stos
mov
pop
call
lret
push
idivl
stos
out
xchg
push
into
jecxz
or
loop
or
cmpsb
lahf
sbb
pop
lahf
aam
sub
out
sbb
mov
mov
push
fdivp
imul
mov
jg
pop
pcmpgtw
dec
inc
mov
inc
js
je
stos
mov
iret
push
ret
lds
addr16
adc
push
ss
shll
mov
push
xor
mov
lea
cmp
push
mov
cmpsb
pop
lods
std
jl
lret
jl
push
mov
mov
push
mov
decb
movsb
ret
push
xor
das
or
test
xor
mov
ljmp
into
adc
mov
cltd
lods
call
cltd
and
mov
inc
rcrb
jbe
pusha
add
pop
imul
int
mov
js
xor
dec
xchg
mov
imul
sbb
mov
stc
sub
mov
mov
cli
repz
mov
xor
imulb
ficoms
push
dec
fistpll
jmp
add
or
sbb
mov
mulb
push
test
lcall
arpl
je
stc
pusha
push
out
fisubs
das
sub
jl
int3
mov
and
xor
frstor
cmp
cmp
fists
test
add
clc
mov
or
sub
pop
sub
cmp
sub
inc
out
daa
fcompp
ret
rorb
mov
rcll
arpl
test
loopne
imul
insb
negb
and
xor
adc
test
xchg
stc
cmp
mov
pusha
lahf
cwtl
mov
insl
push
mov
scas
pop
test
cmpsb
aas
enter
in
push
call
xchg
aaa
data16
aas
sti
or
sub
imul
push
aam
inc
xor
clc
push
test
mov
pop
cmpsb
inc
pop
sahf
mov
nop
arpl
cmp
or
mov
sbb
jnp
out
and
scas
sarl
insl
lods
outsl
mov
leave
loop
ljmp
mov
out
mov
inc
dec
bnd
test
sub
push
add
add
rcl
or
push
push
cld
pop
add
rclb
jo
push
inc
push
lret
fwait
arpl
inc
sub
in
or
push
sub
cmp
repnz
pop
inc
lcall
pop
pavgb
adc
push
xor
cmp
pushf
pop
lods
bound
std
ret
out
mov
pushf
lds
popf
jmp
arpl
or
jo
dec
xchg
push
mov
mov
mov
jno
jmp
jg
popa
jne
jge
fndisi(8087
adc
jg
or
mov
call
mov
add
negb
addr16
insl
inc
int3
jg
push
pop
mov
movsl
jae
loope
cmpsl
mov
lods
test
mov
enter
std
pop
nop
mov
inc
scas
pop
push
arpl
push
inc
adc
testb
jg
or
js
jle
aad
mov
loop
test
xchg
dec
sbb
push
pop
mov
bound
insl
fcoms
xlat
lods
testb
lahf
call
call
cmp
pop
insl
ret
xchg
movsl
js
mov
cmpsl
mov
jns
fsubl
dec
lahf
imul
call
sarb
xchg
jmp
scas
add
out
cwtl
mov
jo
pop
test
loop
adc
pop
xor
repnz
test
scas
mov
dec
aas
mov
xor
xor
jne
mov
xchg
call
adc
pop
gs
ret
rolb
lock
pusha
jne
push
jmp
xchg
push
popa
cmc
call
int
fstpl
cmp
mov
testb
sbb
jb,pt
pop
loop
test
imul
inc
inc
lods
jmp
mov
loope
neg
jnp
jmp
jp
dec
les
notb
push
pop
xlat
mov
ljmp
xchg
adc
inc
and
inc
xchg
adc
test
push
les
mov
lcall
call
xchg
cmp
or
add
sbb
pop
js
insb
pusha
and
ds
icebp
push
push
imul
sbb
jno
and
sbb
outsl
xchg
mov
cmp
xchg
enter
stos
das
mov
rcl
sbb
pushf
in
and
or
pop
xlat
orb
xchg
leave
std
lods
insl
test
les
test
out
cmp
cmp
push
or
dec
jle
adc
cmp
adc
decb
rclb
sbb
mov
fcoms
inc
imull
inc
jecxz
cmpsl
orl
sub
fisttpll
push
scas
push
adc
mov
sbb
inc
mov
rclb
mov
jo
test
adc
add
or
outsl
enter
repz
jmp
add
sub
pop
insl
andb
push
rcrb
scas
adc
out
xor
push
pop
adc
inc
arpl
push
ret
jle
test
sub
test
out
and
mov
mov
mov
mov
scas
sbb
inc
popf
sbb
sarb
sbbl
les
rcrl
popf
hlt
fs
pop
ret
fisubrl
sub
mov
cmp
ficompl
lds
fwait
jb
les
subb
les
lcall
mov
mov
es
fwait
mov
fadd
aam
sub
xor
and
push
dec
inc
fstpt
adc
push
jp
clc
or
xchg
cmp
ljmp
orl
jecxz
popf
ja
outsl
jnp
int
aad
add
dec
pusha
pop
out
int
jmp
repz
pop
mov
inc
and
arpl
lock
sbbl
mov
fidivl
bound
test
sbb
xchg
mov
sbb
in
ja
xor
mov
inc
mov
add
sbb
push
arpl
mov
outsb
and
in
fldl2t
mov
in
popf
je
pop
or
fnsave
cmp
xchg
inc
fwait
andb
jl
mov
or
xor
or
push
or
xchg
mov
jecxz
jns
out
pop
scas
mov
mov
adc
fs
push
lods
jb
ret
jmp
frstor
outsb
out
mov
push
jle
push
data16
ffreep
add
sbb
xor
adc
call
mov
and
xchg
stc
push
sub
cmp
test
bound
stos
cmp
sub
mov
xchg
out
popa
lods
sub
jo
outsb
cmp
inc
mov
mov
sub
and
pop
in
dec
cmp
repnz
call
ds
dec
inc
add
fnstenv
stos
in
inc
cmp
fstp
aam
lods
icebp
mov
xor
aam
cld
adc
pop
insb
inc
mov
clc
test
int
push
pusha
sub
lods
mov
scas
mov
push
dec
je
and
xchg
in
or
push
in
or
jnp
fadd
js
inc
sub
roll
int
add
push
hlt
cmp
scas
out
xorl
out
scas
in
jmp
arpl
push
jno
mov
sub
push
sbb
xchg
push
fisubs
cmpsb
jno
jnp,pn
push
test
std
in
sbb
call
mov
aam
mov
add
jno
sub
mov
sbb
int3
movsb
pop
jmp
sbb
mov
ljmp
xchg
roll
jnp
jbe
jg
in
xchg
lods
ds
lahf
inc
xchg
sbbb
sbb
lock
and
adcb
dec
xor
mov
dec
addb
es
jns
pop
xor
fdivs
and
clc
dec
or
sub
aam
adc
pop
cmpsl
pushf
je
fs
nop
push
push
sbb
out
lods
dec
shll
scas
cwtl
xor
insb
movsb
daa
xchg
bound
dec
pusha
gs
call
and
jno
cmp
es
fcomi
in
aaa
and
sahf
mov
xlat
pop
sahf
and
jae
int
shl
cmp
les
mov
mov
add
mov
jno
add
imul
sub
sub
fdivr
xor
cmp
xlat
fs
push
stos
sbb
daa
arpl
into
pop
mov
ja
ficompl
jle
inc
in
push
out
shll
mov
jecxz
fidivrl
jl
test
push
repz
sub
les
xchg
in
mov
lds
cwtl
or
sbb
cmp
or
xchg
fstpl
sti
ret
sbb
flds
rcl
jge
or
inc
fmuls
stos
lds
xor
test
bound
popa
pop
out
cmp
inc
cmp
sub
rclb
push
ret
jae
and
movsl
cld
loope
fwait
daa
hlt
repnz
mov
and
dec
mov
mov
mov
mov
mov
mov
mov
pminub
lock
mov
bound
cmp
push
xor
out
push
test
cmp
and
push
cwtl
int
and
call
push
js
mov
inc
inc
pop
sub
jecxz
sub
add
pop
aaa
adc
push
fdivrs
or
lods
cmc
negb
les
sarb
int3
leave
fs
dec
fidivrs
or
repnz
movsb
dec
jl
jns
and
push
mov
pop
sub
xorb
rclb
sub
inc
imul
dec
lods
lcall
fsubrs
ret
test
or
push
int
mov
xchg
dec
outsb
pop
jbe
into
cmp
leave
push
out
pop
lcall
push
cwtl
shrb
cmpsb
jle
imul
mov
xor
dec
mov
push
pop
xlat
mov
fisubs
cs
sahf
inc
mov
loopne
nop
xchg
icebp
mov
scas
idivb
loopne
or
repnz
insl
xor
or
push
xor
add
sti
outsb
jp
or
popf
imul
push
loopne
jg
mov
lods
cmpsl
fsubs
int3
clc
jno
lea
and
ljmp
je
das
mov
xor
mov
rcrb
cmpb
clc
pop
lahf
mov
push
sarl
pop
shl
rcll
fadds
subb
or
jl
cmp
add
test
ljmp
sub
pop
xlat
sbb
es
in
mov
xchg
iret
ss
lcall
xor
shr
jns
mov
sbb
jmp
out
push
adc
outsl
mov
lcall
push
mov
push
cmc
xchg
push
sub
in
in
out
dec
add
int
mov
lock
sbb
mov
inc
stc
dec
inc
xchg
mov
clc
repz
cmp
repz
das
inc
mov
in
pop
mov
in
mov
lret
cmpsl
test
or
push
mov
jo
mov
orl
sar
in
fdivrl
cmp
out
sbb
mov
xchg
mov
int
xchg
push
das
pop
inc
xor
dec
jno
mov
into
icebp
xchg
and
inc
push
dec
mov
popf
hlt
test
cmc
xor
sbb
rcll
pand
dec
xchg
dec
mov
imulb
cltd
mov
inc
cwtl
sbb
adc
arpl
lock
xlat
out
adcb
dec
fcmovnu
aaa
push
inc
xor
or
mov
jne
mov
sub
fucom
fs
mov
repz
dec
into
jmp
adc
icebp
into
das
xlat
jb
mov
out
sub
inc
add
movsl
cmp
aaa
mov
inc
clc
fwait
and
in
inc
sub
mov
idivb
dec
xor
sar
or
sbb
jmp
xchg
shrb
and
push
mov
jg
scas
adc
lea
ret
sub
pusha
fidivrl
push
push
jb
movsl
dec
xchg
and
ret
jl
cmp
ficoms
xchg
mov
sbb
popa
jmp
movsb
mov
mov
sub
pop
mov
sbb
lock
push
fwait
movsb
xchg
xor
cmp
test
stc
xchg
loopne
inc
dec
mov
shlb
sbb
add
out
test
push
jp
repnz
or
addr16
cmc
xor
or
sub
push
stos
push
rol
iret
stc
pusha
sbb
jle
dec
mov
rolb
pop
mov
cld
mov
and
mov
ljmp
scas
in
sbb
dec
mov
js
jmp
cli
cmpsl
sbb
imul
inc
es
shlb
and
and
jne
sti
js
mov
mov
pop
fcomp
mov
lahf
cmp
ss
jbe
and
jecxz
fstpl
jmp
mov
lcall
cmp
mov
adc
cltd
xchg
mov
clc
push
cs
stos
outsl
jb
imul
mov
dec
jns
in
cmp
repz
mov
cltd
xor
push
jp
lcall
jns
roll
mov
add
enter
lock
test
inc
jg
pop
out
sbb
es
and
fldcw
pop
or
jle
pusha
movsb
es
dec
inc
into
icebp
imul
idivb
lods
int
ret
or
cmp
and
mov
push
lcall
rcrb
xor
push
mov
out
scas
adc
sub
or
pop
ss
mov
outsl
jno
enter
loope
cmp
push
and
adc
xor
lock
out
add
f2xm1
test
pusha
lods
in
jg
data16
mov
cli
push
ficomps
fmulp
push
xchg
in
mov
mov
and
inc
lea
arpl
call
mov
addl
lcall
cmp
ljmp
js
int3
mov
shr
and
repnz
pushf
lock
mov
insl
ljmp
stos
daa
inc
enter
nop
pop
mov
mov
loope
cmpsl
popf
mov
adc
xchg
test
negb
into
xchg
xlat
cmpsb
mov
fcomps
push
leave
cmpsb
mov
test
cld
pop
loop
sub
and
movl
iret
cmp
fstpt
and
push
out
popa
xor
movsl
mov
rorb
in
mov
sbbl
lods
js
adc
push
popa
pop
dec
add
cmp
pop
mov
dec
pop
pop
bound
dec
cmp
inc
xchg
dec
pop
jp
jle
shr
clc
outsl
ret
adc
sti
add
bnd
js
pop
adc
test
jo
out
jbe
xor
call
adc
push
repnz
jg
lock
inc
cmpsb
dec
pop
ljmp
cmp
xor
mov
fcmovbe
in
mov
sub
pop
mov
push
xchg
xchg
sub
fbstp
call
cmc
mov
fadd
sbb
xchg
push
xchg
adc
mov
insl
dec
scas
or
sub
popf
outsb
mov
cmp
repz
iret
cli
inc
xor
mov
leave
sti
add
mov
jg
mov
dec
shlb
jge
mov
fwait
rclb
fmulp
je
in
push
sub
dec
lcall
shll
stos
stos
pop
ja
dec
dec
nop
pop
push
jae
adc
jmp
pushf
inc
inc
adcb
mov
dec
add
inc
xor
fmull
push
xchg
arpl
lods
mulb
int3
enter
mov
inc
mov
cmp
pop
inc
iret
add
and
mov
cwtl
pop
insl
jmp
orl
or
add
call
ret
lret
pop
inc
adcb
das
pop
jbe
loop
out
pop
xchg
mov
lods
sar
or
push
jns
mov
inc
fstps
int3
mov
sbb
mov
nop
insb
push
data16
shll
inc
cmpsb
mov
pop
repz
jecxz
dec
int
xlat
lods
pop
scas
nop
mov
in
push
icebp
mov
pop
data16
js
sbb
inc
cmp
fnsave
xchg
popa
imul
pushf
or
hlt
addr16
in
inc
fistps
paddsb
mov
or
jg
mov
pop
mov
lahf
je
sub
mov
jns
movsb
mov
loop
mov
leave
adc
shrl
cmp
dec
rorl
std
dec
push
arpl
pop
pop
ljmp
jp
fisttps
jl
jl
jnp
in
out
scas
push
inc
std
pop
mov
inc
imul
enter
rol
or
push
fwait
loope
icebp
cmpsl
out
sbb
cmp
js
jbe
mov
mov
sti
les
int
sub
sbb
enter
sub
test
lret
mov
sub
js
fsubs
add
pop
xor
aas
lock
mov
das
fnstenv
lods
negl
dec
aad
jne
test
push
jge
imul
mov
jle
cmp
xor
or
xor
idiv
cmc
xchg
sbb
xor
nop
xchg
ljmp
xchg
data16
nop
es
fdivrs
and
jbe
add
test
stos
pop
insb
adc
es
xor
mov
or
into
sub
in
push
mov
test
inc
mov
mov
jbe
adc
int3
or
cmp
in
mov
pop
adc
inc
lods
out
inc
add
xor
pop
icebp
stos
push
mov
jnp
mov
mov
mov
add
mov
xchg
jg
sub
stos
pusha
fnstsw
pop
lcall
stos
ljmp
fstl
leave
pusha
push
fwait
aad
jno
shll
mov
inc
es
sbb
test
call
cmp
dec
push
mov
push
into
or
jg
imul
js
stos
pop
daa
pop
add
cmp
ret
cmp
cld
xchg
mov
or
push
dec
mov
xor
stos
jns
cmpsl
sbb
dec
sbb
repnz
sbb
add
push
mov
mov
pop
rorl
or
jge
cltd
inc
sti
mov
orl
fiaddl
mov
xchg
aas
addr16
mov
push
pop
jl
arpl
loopne
mov
sbb
mov
lcall
xor
arpl
icebp
pop
test
sub
push
push
js
dec
xor
js
jbe,pn
loop
inc
js
enter
inc
or
and
inc
cmp
pop
inc
leave
sbb
int
jmp
std
aas
fsubs
dec
xchg
sbb
mov
fs
xor
cmp
out
cld
sbb
inc
jmp
in
fidivrl
daa
inc
and
add
jae
lods
pusha
jns
sbb
dec
test
or
addr16
sbb
mov
pop
and
idiv
adc
mov
jmp
jmp
mov
and
data16
dec
ret
jg
notb
add
push
pop
pusha
into
pop
push
lds
cwtl
push
jle
iret
arpl
inc
pusha
add
outsl
xchg
adc
lret
dec
cltd
pslld
xor
xchg
add
cmpsb
jns
repnz
and
in
fs
mov
jb
das
pusha
xor
add
ficoml
fnclex
out
ljmp
xchg
test
xchg
jg
sbb
or
xchg
mov
cmc
out
xchg
push
push
jbe
mov
mov
shl
mov
rclb
test
hlt
and
ss
int
scas
jl
dec
adc
jno
repnz
dec
adc
sub
sub
fcoms
mov
dec
lret
lahf
lret
dec
sub
inc
lahf
or
das
cld
stc
mov
mov
sbbb
sub
fistpl
mov
pop
cmpsl
pushf
shll
rclb
xor
pusha
sbb
insb
lret
adc
or
ret
and
movb
xchg
fcmovnu
inc
cmp
andb
ret
jae
sub
dec
les
cmpsb
nop
sbb
imul
xor
orl
jg
xchg
xchg
jo
stos
push
dec
incl
pop
adcl
scas
ja
inc
pop
lea
leave
in
iret
lods
jg
cmp
lea
icebp
mov
loopne
fwait
or
ss
pushf
push
mov
insl
and
pop
scas
mov
dec
movsl
addr16
in
pop
popf
inc
push
pop
sub
mov
mov
ja
adc
insb
inc
movd
jne
stos
hlt
orb
jle
dec
push
aas
ret
stc
mov
xchg
jae
pop
jecxz
sub
mov
cmp
push
mov
push
pop
leave
jge
jecxz
out
pop
inc
lea
push
stos
repnz
inc
add
add
pop
repz
push
imul
push
test
insl
gs
and
cld
call
stos
sub
scas
mov
xor
adc
fisubrl
pop
lock
cmp
imul
cld
outsb
inc
inc
fcomp
jg
mov
mov
shlb
push
dec
int
lahf
cmpsb
inc
stc
adc
jno
lcall
andl
xchg
test
mov
sub
out
pop
test
shlb
cmpsl
shlb
test
ss
pusha
je
mov
cmp
lods
out
mov
addr16
add
sar
insb
push
stc
imul
add
inc
add
jae
test
ja
pop
insl
pop
movups
sbb
fldl
rolb
insb
sub
jle
sbb
push
cmovge
push
pop
or
les
aas
lds
loope
fwait
jo
mov
das
fs
mov
stc
ret
lock
mov
aaa
fs
add
pop
add
ja
ds
mov
push
jo
int3
mov
ja
pop
adc
sahf
pop
push
test
adc
mov
stc
xchg
mov
jmp
repz
jnp
cmpb
pop
and
je
nop
popa
test
mov
mov
xchg
jbe
add
or
xor
or
repz
pusha
in
mov
cwtl
nop
push
pop
arpl
lahf
stc
xchg
sahf
jb
negl
movsb
pop
inc
lods
mov
mov
jns
imul
ret
jns
mov
dec
xor
int
outsw
mov
mov
ljmp
push
add
inc
mov
add
xchg
stos
sahf
adc
sti
fistl
cmc
push
pop
in
int
cli
jns
xlat
scas
xchg
pop
jg
mov
popa
or
jecxz
jo
xchg
pcmpgtw
hlt
or
insb
bnd
jno
lds
cwtl
ja
push
clc
insl
stc
or
mov
cmp
cltd
xchg
rclb
scas
mov
xchg
and
xor
jo
testl
push
xchg
insb
mov
sbb
jle
ss
mov
pusha
and
loopne
and
cli
pop
mov
dec
popa
sub
inc
lretw
xor
jge
ss
ds
pop
addr16
loope
pop
std
sub
xor
add
xor
add
rorb
cmpsl
and
sbb
pop
sub
dec
mov
jecxz
inc
ds
push
mov
xor
jecxz
addr16
sub
inc
ss
mov
sub
push
mov
dec
loopne
call
lret
sub
inc
lret
jp
mov
aas
fcompl
xchg
xchg
fwait
sub
jmp
mov
push
js
cmp
in
jns
add
sub
das
or
and
xchg
pushf
mov
jmp
dec
inc
push
test
mov
aas
inc
adc
pusha
jmp
fisttps
sbb
push
sub
pop
je
shr
xchg
mull
jne
mov
gs
loopne
xchg
xor
insb
pop
xchg
popa
repz
add
push
mov
xor
repnz
sbb
lods
js
cs
shll
out
push
repnz
icebp
push
fcmovb
popa
loop
cld
loopne
cmp
lcall
sub
leave
lcall
cli
shlb
jae
lea
pop
lret
cmp
adc
test
stos
fcoml
dec
lret
out
outsl
inc
movl
adc
aad
loopne
fcom
fwait
jg
std
lods
aad
stc
enter
push
mov
lahf
and
push
cwtl
xchg
out
movsb
mov
mov
or
cmp
movsl
arpl
fmul
add
data16
xchg
ret
nopl
imul
mov
shrb
stos
or
out
sub
push
les
out
dec
je
pusha
lods
arpl
push
sub
sub
sbbl
cmp
lds
jb
xlat
loopne
xchg
inc
or
push
mov
xchg
mov
iret
scas
pop
pop
mov
nop
mov
push
aam
arpl
adc
dec
aam
test
clc
xor
pop
inc
addl
out
push
jl
mov
inc
push
add
mov
lods
ja
mov
sub
jno
add
movsb
jge
jnp
xchg
jno
fistpll
push
jne
movsb
loopne
ss
pop
sub
push
cwtl
push
dec
mov
jecxz
or
pop
xlat
mov
lea
push
push
push
repz
les
test
mov
in
dec
test
mov
dec
lret
aas
movsb
mov
dec
cmp
mov
in
adc
addr16
and
dec
or
ds
mov
outsl
mov
mov
test
cmp
fldcw
rcrb
mov
dec
xor
xor
mov
ror
cltd
push
push
mov
pop
adc
pop
pop
adc
addr16
scas
push
cmc
fidivrs
shl
gs
xor
or
pushf
cld
xchg
jne
mov
xlat
incb
mov
mov
push
mov
pop
push
rcrb
jns
cltd
sbb
sbb
or
add
cmp
push
sbb
fisubl
jb
insl
pop
shr
sub
and
je
test
int3
test
pop
dec
subl
movsb
ret
pop
jne
aam
jo
je
je
mov
dec
dec
xchg
popa
xor
mov
lret
gs
mov
pop
nop
lds
insl
or
inc
outsl
cld
je
filds
mov
push
sub
jae
pop
clc
jg
scas
xchg
sub
xor
movsb
das
hlt
mov
daa
and
push
and
pop
ret
mov
cmpsb
jecxz
push
cmp
aas
sub
pop
divb
mov
sahf
popf
jecxz
rsqrtps
fdivrs
mov
or
mov
and
out
jg
xlat
ret
ljmp
arpl
lret
push
mov
aad
jae
pop
dec
test
repz
cmp
lds
in
push
pop
adc
sbb
push
jnp
xchg
jecxz
sti
movsb
dec
setae
cmc
or
dec
and
jne
loop
pop
pop
cmpsb
jbe
or
inc
xor
mov
and
jae
pop
push
and
xchg
push
aam
inc
call
xor
mov
xchg
xor
inc
mov
mov
adc
aaa
pusha
cmpsb
sbb
es
pop
aas
fstl
mov
xchg
adc
lret
xchg
and
mov
pop
push
adc
sub
data16
adc
fsubrp
gs
pop
mov
outsl
jo
inc
nop
pusha
shl
push
adc
loope
mov
call
adc
sub
xchg
lret
movsb
pop
jae
fstpl
inc
outsl
shl
lods
jae
inc
inc
stos
add
mov
lret
or
xchg
inc
rcrb
cmpsl
jb
mov
jnp
dec
mov
sbb
out
jae
addb
movb
rcll
sbb
cld
imul
mov
add
fsubl
divl
nop
out
or
cmp
sqrtps
cmp
in
pop
push
repnz
and
cld
loopne
mov
pop
jle
je
sbb
adc
test
mov
rclb
jp
push
sbb
push
popa
dec
pop
or
sub
das
sub
xchg
gs
mov
dec
mov
jbe
out
sbb
add
sub
cltd
sbb
outsl
maskmovq
idivl
ljmp
lock
xchg
xor
pop
hlt
lret
popa
leave
arpl
dec
add
sub
call
iret
xchg
xor
add
fstl
mov
lahf
cmpsl
mov
and
xchg
sub
add
mov
xchg
mov
lret
sub
xchg
jne
dec
aaa
fwait
mov
add
jne
jg
arpl
adc
mov
push
jecxz
test
pop
xlat
movl
inc
roll
imul
nop
loopne
push
pop
cmpsb
inc
test
mov
jmp
insb
scas
and
xchg
fnstsw
test
sub
ret
rcrl
cmp
mov
xor
jecxz
iret
xchg
mov
sahf
inc
cs
out
inc
cmpsb
adc
cld
incb
push
push
enter
in
mov
jno
gs
sbb
pop
in
jg
mov
imul
out
pop
or
xor
push
inc
fldenv
rorb
out
inc
pop
daa
sub
xchg
nop
cmpl
cmp
iret
pop
xchg
loopne
and
repz
push
or
movsb
xchg
orl
ss
pop
xor
fbstp
lock
subl
mov
mov
loopne
jmp
push
adc
mov
jp
sbb
dec
out
out
es
mov
xor
ret
xchg
leave
sbb
adc
dec
scas
inc
mov
jb
xor
pop
push
mov
lods
inc
sbb
mov
or
stos
mov
cwtl
mov
imul
mov
scas
dec
lods
push
and
dec
inc
push
fildl
sbb
xor
add
dec
aas
out
dec
popf
std
push
fwait
push
scas
int3
adc
jge
fisubrs
imul
fucompp
jmp
xor
hlt
sbb
mov
imul
or
dec
lea
push
mov
les
push
push
mov
xchg
xchg
lret
pop
push
mov
xchg
xchg
mov
gs
pop
sbb
sti
jnp
jb
scas
adc
sti
iret
cmp
cmp
add
push
xor
adc
movsb
adc
mov
sub
mov
mov
sub
sub
in
and
ret
scas
push
sbb
enter
jmp
gs
sbb
or
in
aam
jl
repz
mov
outsl
or
and
add
scas
pop
fwait
cltd
out
cli
enter
mov
ret
jbe
sub
mov
into
pushl
push
out
out
inc
int3
cmp
add
fistpll
hlt
or
fistl
mov
mov
jbe
insb
enter
pop
sarl
fadds
iret
jae
std
fildl
push
subl
ds
cmc
jbe
pop
xchg
xor
sub
das
jo
add
es
ss
sub
sub
js
loope
mov
jno
call
mov
stc
frstor
jl
jle
lods
or
xchg
fldlg2
sub
aad
lcall
in
cmpsb
mov
push
sub
adcb
cmp
jb
test
in
mov
test
mov
hlt
mov
fs
shll
sbb
push
enter
xchg
cs
out
js
ds
xchg
pop
pop
xor
cs
cs
dec
or
test
stos
jmp
clc
and
push
and
adc
xor
lea
sub
outsl
mov
sbb
mov
jl
jo
adc
jg
cmp
push
fs
popaw
fisubrl
and
cwtl
shlb
movsb
adc
mov
add
cs
shll
notl
pop
inc
int
stos
push
psraw
push
cmc
jl
sti
jo
mov
dec
daa
adc
roll
xchg
sub
cwtl
inc
movsb
dec
push
das
mov
test
jno
inc
popa
and
or
jmp
mov
push
mov
lea
cmp
js
pop
jp
jecxz
outsb
ret
push
loope
adc
push
fistl
movsb
fildl
sbb
mov
sbb
rcrb
cmp
and
push
out
in
push
dec
sbb
jl
mov
mulb
sahf
cmc
stc
cmp
mov
jmp
push
das
adc
jne
push
inc
pop
mov
dec
lds
and
lea
fcompl
or
jno
or
push
sub
les
push
outsl
in
xchg
lcall
ret
push
mov
int3
int3
lods
aaa
dec
dec
xor
jle
mov
push
loope
mov
mov
mov
push
mov
aas
mov
subb
lcall
and
incb
dec
in
pushf
xor
jle
test
ds
mull
or
scas
mov
pop
push
fstpl
fdivrs
or
xor
js
mov
push
xor
daa
movsb
push
das
call
inc
or
push
sbb
xchg
jp
sub
loope
adc
push
sbb
mov
mov
xor
adc
fidivrs
jmp
test
push
and
mov
popf
test
sbb
mov
mov
out
popf
cltd
inc
mov
and
add
repnz
mov
xor
jb
xor
repnz
xorl
fwait
mov
out
dec
adc
rcll
out
lcall
aaa
outsl
pushf
lcall
cmp
add
xchg
iret
inc
je
xor
rcrl
xchg
mov
test
xchg
pop
popa
inc
or
pop
outsb
andb
dec
and
pop
into
jns
lret
xchg
mov
shlb
pop
push
xlat
inc
lret
fcmovnu
xchg
and
sbb
test
inc
aad
adc
gs
fists
cmpsb
ret
lock
jge
push
mov
pop
lcall
mov
lea
jne
xchg
ja
cld
adc
scas
call
mov
test
or
sub
incl
nopl
xchg
lahf
shll
scas
fnsave
out
hlt
imul
xor
push
push
insl
cwtl
andb
xchg
mov
inc
aaa
or
icebp
xor
add
icebp
jg
or
mov
sub
lahf
sahf
pop
and
or
out
or
mov
mov
in
testl
rcrb
mov
adcb
sbb
pop
push
and
inc
push
xchg
mov
sbb
or
daa
outsb
orb
push
lods
adc
mov
ds
es
mov
ret
aas
mov
mov
push
decl
sarl
adc
push
and
xchg
adc
je
scas
int
xchg
in
add
inc
inc
xchg
xor
and
iret
xchg
mov
mov
xchg
pop
popa
int
insb
push
pushf
jge
je
ss
jg
pop
and
mov
mov
jne
inc
call
sbb
lret
lret
gs
scas
push
xor
inc
rcrb
ret
test
mov
xor
push
jmp
jg
sub
test
xchg
stc
jnp
imul
push
inc
lcall
dec
js
movaps
fcompl
mov
mov
sbbl
lcall
push
xor
xor
pop
push
or
cmp
xor
loop
mov
xlat
xchg
repnz
or
add
add
add
add
add
testl
mov
push
add
ror
leave
pop
mov
xchg
je
loopne
sbb
xchg
je
loopne
sbb
lods
lods
inc
in
in
hlt
mov
xchg
je
loopne
sbb
xchg
je
loopne
sbb
xchg
je
loopne
sbb
sub
adc
xchg
je
loopne
sbb
xchg
je
loopne
sbb
xchg
je
loopne
sbb
xchg
je
loopne
sbb
xchg
je
loopne
sbb
xchg
je
loopne
sbb
inc
fcmovnb
in
scas
and
add
adc
add
jb
add
add
add
add
mov
jg
add
add
rcll
mov
pop
inc
add
rolb
add
push
add
add
add
add
add
fadds
add
mov
add
add
or
add
add
add
add
add
add
and
add
add
leave
subl
add
add
addb
add
add
add
lcall
adc
cmp
add
add
add
add
or
add
add
add
mov
add
add
std
pop
xchg
inc
add
push
add
add
sbb
add
add
add
mov
add
add
into
add
add
js
lds
inc
add
push
add
add
push
or
add
inc
add
stos
add
stos
mov
add
add
push
lret
inc
andb
add
push
add
add
dec
test
add
xchg
add
jg
add
add
add
inc
dec
sub
adc
sub
mov
cld
sub
xchg
jne
rcrb
stc
fimull
fwait
iret
jg
jbe
je
imul
inc
inc
daa
fstl
in
mov
jae
adc
fldenv
imull
jno
into
arpl
mov
ds
mov
add
sbb
es
push
jnp
cwtl
les
scas
imul
jo
iret
lret
xchg
push
xor
imull
push
fstpl
movsl
add
sahf
dec
ficompl
hlt
leave
inc
push
sub
pop
mov
sub
pop
adcb
bound
stos
jne
add
push
pop
out
imulb
inc
xor
mov
in
mov
fisubs
push
mov
xchg
push
iret
pop
outsl
sar
mov
out
std
sbb
lcall
mov
add
jb
inc
sarb
push
lahf
or
fidivrs
out
pushf
and
test
ret
pop
dec
mov
gs
data16
inc
jb
add
mov
jmp
fldcw
xchg
mov
lcall
adc
lahf
pop
xchg
sbb
aad
fcoml
push
cmp
cmp
std
scas
imul
outsb
mov
add
mov
or
jp
mov
pop
inc
ds
int
popa
fsubrl
xchg
pusha
pop
mov
mov
pop
or
or
xchg
fwait
pop
out
movsl
sbb
sbb
ret
mov
mov
push
lcall
push
pop
cmp
inc
cmp
sbb
mov
imul
repz
and
fimuls
add
adc
mov
adcb
and
in
jl
dec
push
std
sbb
adc
mov
cwtl
aas
std
pop
out
push
mov
add
sbb
pop
stc
fnstenv
dec
push
push
imul
add
ds
xor
or
clc
icebp
xchg
jns
jp
lock
pop
dec
imul
xor
sub
ljmp
scas
pop
je
xchg
sbb
add
xor
stc
dec
xor
xor
loope
jnp
js
inc
cld
sbb
je
mov
shrl
or
jbe
mov
lods
cmp
xor
xchg
in
and
out
movsb
mov
xor
flds
add
jo
enter
push
add
mov
jbe
adc
fldenv
clc
mov
hlt
shll
mov
push
and
loope
or
jecxz
insb
shl
inc
push
cmp
in
push
inc
stos
pop
and
lods
xor
jno
pop
inc
lcall
pop
out
jp
jge
cmp
cmp
dec
mov
adc
mov
clc
xchg
mov
xlat
pusha
leave
dec
push
fdiv
inc
push
push
loop
xchg
mov
fld
sbb
imul
pop
cmp
stos
inc
ja
testb
sarl
jns
mov
inc
aaa
adc
fidivl
xchg
test
adc
es
lahf
dec
lods
mov
push
in
pushf
jecxz
mov
sbb
xchg
mov
test
rcrb
cmp
pop
inc
push
aad
nop
sbb
push
ffree
stos
and
or
fists
push
cmp
push
ljmp
ret
sub
imul
mov
jb
sbb
or
rorl
pop
cmpsb
add
rcr
jbe
pop
out
mov
pop
xchg
sahf
cmc
shll
mov
adc
cwtl
out
test
insb
push
mov
dec
push
popf
jge
out
bound
iret
enter
adc
sub
neg
jecxz
xchg
js
repnz
or
add
cmp
adc
stos
sbb
adc
lods
jecxz
fldcw
and
push
push
test
adc
mov
int3
loop
add
add
cmp
mov
je
and
xchg
mov
popa
lea
mov
jecxz
cmp
mov
dec
or
push
jg
sahf
xchg
out
dec
pop
imul
jo
cmpsl
push
sahf
push
push
rclb
xchg
mov
lret
insl
push
fs
in
push
subb
cld
out
pop
push
or
xchg
lods
out
mov
or
push
div
popa
dec
mov
or
das
mov
cwtl
push
inc
jecxz
ds
and
xchg
shr
xchg
jg,pt
push
pusha
xor
repnz
mov
das
sahf
in
cmp
mov
scas
fmul
xchg
test
dec
fsubp
stc
adc
in
scas
or
rolb
cmp
mov
pop
xchg
adc
pop
loop
incl
cltd
cwtl
xor
shl
add
xorl
add
add
add
mov
add
inc
ror
or
je
xchg
out
cmp
sbb
outsb
xor
pop
rcll
push
mov
cmpsb
dec
pop
fstpt
dec
push
sbb
fwait
push
cmpsl
mov
dec
pop
jp,pn
xlat
mov
sbb
cmp
or
jb
inc
and
jl
lahf
pop
lcall
adcb
in
ds
js
mov
add
push
jg
fdivl
inc
std
arpl
xor
inc
mov
fistpl
jb
xor
pop
icebp
push
xchg
jns
xor
pop
scas
and
ret
outsb
ja
call
pop
leave
jp
xor
mov
jns
mov
and
adc
fstps
add
ss
daa
push
fwait
mov
push
jecxz
js
mov
test
shrb
aas
loop
sub
xor
pop
daa
cmp
mov
es
xor
adc
bnd
add
add
push
pop
mov
jle
push
xor
fcoml
in
add
jnp
mov
inc
out
inc
inc
addb
fs
stc
pop
popf
imul
mov
jmp
test
inc
inc
mov
fidivrl
popw
insl
sbb
int3
ror
adc
ss
inc
int3
das
add
jno
clc
out
jns
pusha
adc
or
mov
push
add
add
mov
push
dec
adc
push
and
cld
negl
lds
out
rolb
shlb
stc
mov
fcmovne
sahf
mov
pop
aam
adc
fwait
push
cli
enter
inc
cmpsb
cmc
push
das
pushf
jo
xchg
and
pop
xlat
out
cwtl
pop
idiv
stc
movsl
mov
jle
nop
pop
aas
into
cs
adc
push
or
sbbl
dec
scas
mov
sarl
in
xchg
inc
adc
or
xchg
aam
movd
mov
mov
dec
in
fisubl
inc
mov
sahf
mov
mov
mov
or
cmp
add
insl
addl
mov
and
adc
xor
arpl
in
jae
jl
xchg
ljmp
in
mov
orl
cld
jo
cmc
sbb
mov
and
sbbb
dec
xor
aam
cmp
lods
shll
fcoms
mov
sbb
test
loope
mov
test
or
or
mov
stos
je
cmp
fs
icebp
lahf
roll
cmpsl
or
and
fidivs
ss
comiss
jge
loop
ret
mov
call
in
loopne
popa
and
jbe
dec
fcomp
in
mov
push
pushf
icebp
cltd
pop
test
pop
and
jecxz
sbb
sbb
adc
jmp
mov
jl
inc
ret
fistl
mov
and
ficoms
inc
test
jle
insl
outsl
sti
pop
ss
jl
xchg
incl
stos
clc
add
arpl
hlt
inc
and
fsubl
fcoml
test
push
cld
mov
mov
jb
pop
mov
lcall
call
sub
sbb
lds
andl
cli
lea
pop
push
je
jae
ss
pop
sbb
xlat
add
repz
aas
roll
mov
psrad
and
adc
lods
in
adc
add
pusha
mov
mov
mov
push
insb
fs
into
mov
cli
int3
add
ret
pop
mov
fldl
dec
xchg
xchg
add
or
lods
divb
cld
cltd
push
inc
dec
fldenv
mov
dec
sbb
xchg
push
push
adc
sbb
loopne
sub
pop
or
push
mov
push
cwtl
and
out
xchg
mov
add
mov
xchg
xchg
test
pop
sbb
lahf
push
add
incb
cmpsb
call
enter
mov
add
pop
rclb
insl
xchg
mov
jge
adc
adc
cmc
sti
jne
adc
scas
out
or
cld
xadd
inc
pop
imul
adc
lock
ret
lahf
je
rol
cmp
sub
shrl
lahf
push
arpl
push
xor
fsubrl
xchg
and
loopne
or
mov
inc
sbb
mov
and
or
shr
lret
cld
out
pusha
cmc
xor
cld
dec
xor
cmp
sbb
push
xchg
mov
inc
shr
ret
test
adc
fdivrl
shr
subb
xor
mov
in
bound
ret
fwait
sbb
and
or
jmp
out
mov
ss
cld
iret
jl
fldcw
mov
pop
bound
gs
and
cld
xchg
dec
mov
jge
xchg
mov
jle
out
inc
sbb
std
xchg
cmpsl
inc
test
inc
adc
push
lock
jmp
push
xchg
outsl
fcoml
in
inc
jnp
push
xchg
adc
inc
test
mov
cmp
sbbb
add
xchg
jae
adc
lcall
sbb
jb
sub
sti
in
mov
dec
xlat
fisttpl
insl
lret
rorb
fdivr
lret
xlat
int3
fcmovnb
add
or
inc
adc
in
out
xchg
cli
push
jbe
cwtl
sbb
add
iret
dec
in
roll
mov
loope
ret
lock
jmp
or
enter
jbe
pop
xor
std
cmp
and
in
adc
gs
or
in
lcall
imul
mov
in
fmull
adc
ret
add
fwait
mov
or
jne
sbb
push
test
btr
adc
mov
loope
sub
jne
push
or
out
dec
mov
and
insb
lahf
mov
add
mov
mov
outsb
or
icebp
sbb
push
mov
ds
dec
rcpps
orb
lahf
fstps
xchg
int
sarb
dec
cmc
and
push
cmp
ficomps
xor
ljmp
mov
out
mul
xchg
jns
mov
add
mov
in
stos
mov
jp
test
je
and
add
cmpsb
mov
sti
mov
jg
popf
sbb
push
in
pusha
add
int
add
jmp
pusha
push
cmp
xchg
cltd
lock
xchg
outsl
mov
sub
imull
ds
mov
mov
fstl
mov
xor
dec
dec
out
fisttpll
mov
frstor
ljmp
dec
scas
adc
repz
inc
lods
sti
imul
dec
ret
push
sub
cwtl
dec
pushf
mov
movsb
cmp
movb
jne
sub
in
rcrl
data16
insl
ss
push
hlt
cmpsb
bound
xor
or
add
idivb
mulps
outsl
test
jg
sbb
les
sbb
and
mov
jecxz
mov
mov
fs
xchg
and
and
jno
mov
xchg
lcall
pop
jae
pop
xor
stc
icebp
lret
add
imul
xor
test
aam
add
or
mov
sbb
gs
mov
sbb
and
dec
inc
lods
mov
xchg
lds
aam
jmp
jb
jecxz
call
cltd
jge
and
mov
inc
call
push
leave
test
call
in
rcr
lods
aad
cwtl
pop
mov
pop
dec
dec
jne
xor
xor
fs
ljmp
das
mov
ja
cli
or
es
sub
rorb
sbb
cmp
add
jnp
test
add
jae
popf
mov
iret
hlt
stc
ficompl
pusha
push
push
mov
ret
out
loope
xor
ss
sbb
cmp
cmp
cmp
movsl
gs
and
jp
sub
lret
xlat
int3
inc
ret
or
or
pusha
inc
add
imul
pop
das
dec
subb
in
push
add
movsb
insl
cmpsb
mov
adc
cmp
and
stos
insl
repnz
and
cmp
mov
shr
decb
adc
or
aas
inc
mov
dec
fs
icebp
fisttps
test
loope
pop
pop
xchg
inc
jg
fbld
movsb
xor
loopne
cmpsl
jmp
xchg
fistpl
mov
fwait
sarl
and
ret
sbb
or
xchg
push
out
push
add
out
loopne
jns
add
xor
aad
nop
and
jb
mov
inc
mov
movsb
shrb
xchg
hlt
pop
jbe
loop
xchg
imul
pushf
push
shlb
add
scas
insb
iret
sub
jns
lds
sub
loopne
imul
adc
pop
ss
bound
cli
jbe
sbb
and
paddw
mov
adc
ja
inc
insl
scas
cmp
js
push
das
inc
sub
cmp
mov
rcrb
jmp
inc
idivl
ja
xor
or
dec
dec
jb
cmp
je
mov
and
aaa
sub
loop
test
rcll
lods
cmp
das
mov
push
and
cltd
imul
mov
nop
push
add
lock
fwait
jecxz
xchg
add
jb
push
push
push
ds
les
into
rclb
mov
adc
cmp
push
mov
cmp
lcall
stos
push
xchg
aad
js
sub
xchg
mov
jl
test
movb
fistpl
mov
ljmp
xchg
push
fnstsw
out
aad
lods
popa
sti
loopne
jp
and
xor
movsl
add
nop
arpl
inc
dec
and
fsubr
lea
jl
repz
and
xor
sbb
imul
sbb
shlb
jl
mov
les
push
push
loope
cmpsl
fwait
cmp
add
rorl
imul
push
imul
adcb
mov
adc
xchg
jg
mov
aad
push
xor
je
das
mov
repz
imul
xor
mov
mov
mov
cmc
movsl
fbstp
insb
xchg
subb
xchg
aam
mov
sub
dec
push
out
adc
ljmp
push
aad
scas
cmc
jecxz
dec
and
add
ss
fwait
aam
adc
jmp
adc
into
sub
mov
stos
nop
push
insl
add
lret
jne
flds
sahf
push
cmpsb
xchg
dec
jecxz
xchg
adc
je
or
pusha
test
outsl
aam
rclb
pop
fisubs
cmp
in
test
mov
sub
mov
dec
sbb
and
jp
jb
fstpl
mov
xor
xchg
and
adc
inc
sbb
imul
sub
pop
aam
cmpsb
insb
cmp
jle
jg
and
sbb
xchg
lcall
lds
daa
loopne
leave
xor
mov
mov
push
call
in
insl
xor
arpl
fsubs
into
pop
popa
inc
testb
icebp
bound
xchg
or
jnp
sahf
inc
fistpl
mov
xor
daa
fmull
jns
shll
cmp
jns
push
xor
adc
inc
mov
mov
mov
lret
sbb
mov
and
xchg
sub
add
xchg
subl
cmc
out
and
pop
ret
and
cmp
cli
leave
pusha
or
dec
popl
outsb
inc
adc
fidivs
repnz
or
fstpl
std
mov
cmc
xor
inc
gs
repz
jge
lea
sbb
mov
pop
outsb
adc
das
jo
sub
mov
cwtl
in
add
daa
add
xchg
clc
adc
inc
shlb
pop
test
mov
mov
jbe
and
ja
mov
cli
rclb
and
cmp
and
pop
jle
fcomps
sub
jb
aas
mov
jl
sbb
ret
sbb
push
fidivs
push
add
repz
xchg
mov
xchg
mov
cmpsl
dec
sub
xor
sar
movsl
jecxz
ret
sbb
lcall
jl
xor
scas
mov
mov
xchg
mov
mov
subb
enter
ljmp
test
mov
sub
mov
aam
pushf
push
movsl
fucomp
les
call
in
mov
shrb
mul
mov
inc
rolb
mov
jno
sub
imul
dec
xor
mov
lcall
or
std
mov
or
lcall
aaa
lea
scas
jp
sti
mov
ret
pop
xor
push
adc
cld
and
mov
fildl
into
mov
outsl
or
repnz
jnp
in
and
cwtl
cli
push
cmp
les
xor
rorb
adcb
cwtl
and
pop
mov
and
stc
repnz
pop
xchg
xchg
xchg
pushf
dec
sbb
test
sub
lea
movntps
mov
imul
dec
outsl
aas
ds
mov
mov
mov
mov
xchg
mov
addb
mov
ss
and
sbb
insb
jb
mov
jo
mov
fstps
repnz
mov
out
mov
and
leave
icebp
pop
xor
dec
das
ja
imul
and
ljmp
mov
jns
punpcklwd
movsl
scas
enter
pop
rcl
outsb
and
lds
dec
lods
out
adc
mov
clc
inc
xchg
pop
bound
fcmove
xor
movl
and
imul
imul
sub
jg,pn
stc
mov
mov
mov
push
stc
sbb
mov
xchg
push
sbb
insl
xor
jnp
push
push
ljmp
sub
add
outsl
jnp
inc
jbe
mov
adc
cli
and
sarb
mov
lods
xchg
ljmp
test
cmc
adc
lods
inc
xchg
sub
pop
xchg
inc
mov
mov
jle
mov
cld
xchg
adc
nop
xchg
sbb
leave
xchg
imul
out
jno
jo
mov
push
pushf
shlb
mov
sub
xorps
std
rolb
test
jle
int
cld
jge
add
pop
cmp
xor
andl
cld
pushf
dec
add
dec
xlat
adc
dec
cmp
jnp
sub
sbb
lds
xor
inc
sub
mov
pushf
mov
shlb
push
pop
outsb
xchg
dec
dec
xchg
jecxz
pusha
push
sub
jmp
lcall
pop
xchg
insb
push
lret
lds
mov
sbb
dec
jo,pn
push
xor
adc
pop
push
inc
push
sti
cwtl
xorb
es
dec
in
imull
add
ja
in
adc
repnz
gs
addr16
addr16
sbb
into
and
adc
outsb
int
scas
pop
adc
in
shll
xchg
adc
shll
outsb
inc
cmp
mov
mov
push
in
es
sub
xlat
xchg
mov
mov
mov
incl
sarb
adc
sub
cmpl
ret
push
mov
ficompl
sub
addr16
and
mov
lods
push
jle
and
aaa
jge
aad
inc
or
in
mov
lcall
mov
les
xchg
inc
sbb
pop
mov
imul
decb
pop
inc
jbe
bound
cmp
mov
xor
lahf
repz
xor
and
jae
xor
xchg
out
push
cmp
lret
cmp
dec
lods
xor
dec
mov
jae
ret
lods
mov
dec
sbb
mov
into
inc
push
and
std
outsl
mov
mov
mov
not
stos
ret
loop
fs
std
in
movsl
mov
jg
lret
xchg
jg
mov
sub
pop
sub
scas
repz
inc
iret
icebp
int
or
sbb
pop
mov
popa
lds
push
das
push
push
in
xchg
repnz
jb
dec
adc
lret
sub
mov
push
imul
outsl
pusha
js
pop
mov
mov
mov
push
xchg
mov
pop
in
ficomps
sbb
ljmp
shlb
pop
cmp
movsb
dec
mov
pop
jnp
push
pop
std
add
and
sbbb
divl
mov
bound
scas
adc
div
testb
sbb
or
xchg
inc
pop
pop
sbb
pusha
inc
inc
outsb
xchg
cmp
inc
jg
xchg
call
les
mov
pop
pop
out
cmp
pop
xchg
incb
push
fsub
sarb
fmuls
mov
sub
aaa
or
mov
insl
mov
and
sti
push
fistpll
jmp
mov
cli
push
jl
imul
divb
mov
ja
push
push
jge
jnp
insb
jb
rol
ja
test
cmpsl
xchg
or
movsl
mov
add
cld
nop
into
inc
jns
or
sub
loope
mov
sub
xchg
popf
stc
out
out
or
xor
xlat
outsb
sub
sbb
mov
fwait
mov
dec
inc
push
sbbb
sub
shlb
pop
pop
mov
pop
mov
add
rcrb
scas
cmc
sbb
cltd
sub
add
sub
or
fisubs
pop
jns
xor
xor
and
pop
loopne
in
mov
mov
lahf
enter
add
in
mov
hlt
repz
mov
xchg
je
ficoms
insb
bnd
aas
push
inc
stos
shl
mov
dec
xchg
fildl
push
xor
mov
loop
sub
gs
cmp
push
popa
aas
fcoms
sub
pop
xchg
lahf
or
sub
add
pop
ret
or
cli
lret
call
mov
push
dec
pop
outsl
lods
and
push
pop
lret
inc
push
dec
sub
mov
mov
pop
jecxz
fbstp
xor
das
xchg
sbb
das
dec
dec
sbb
add
cmp
ret
cs
dec
cmp
out
sub
addr16
adc
lods
mov
push
mov
jg
movsl
xor
add
arpl
stos
movsl
shl
mov
adc
outsb
fwait
push
pop
stc
sub
in
jb
inc
and
xor
add
test
cmp
cmp
cmp
add
sbb
fwait
jg
jp
out
inc
shlb
jb
repnz
jns
iret
jmp
and
or
mov
lret
add
and
xor
inc
xchg
dec
fidivs
pop
jl
push
test
sub
push
imul
sbb
mov
sub
mov
mov
add
fs
push
lahf
mov
xchg
or
mov
push
call
push
data16
fsubrs
push
fwait
push
pop
inc
cmp
or
pop
mov
fmul
dec
in
mov
fisubs
pop
dec
sbb
std
or
inc
mov
inc
jo
fnstcw
and
fmull
and
mov
mov
mov
adcl
repnz
repnz
adc
movsl
sub
dec
inc
ret
mov
inc
sbb
or
jecxz
push
mov
nop
cltd
dec
cmpsb
mov
lds
shlb
mov
sub
mov
cmp
andl
mov
sub
mov
sub
dec
xor
mov
and
sbb
icebp
adcl
jmp
out
add
in
rcrl
imul
mov
out
lock
aaa
scas
xor
sbb
iret
fucomi
aam
adc
aad
cld
inc
mov
sbb
cmpsl
insl
lods
mov
out
ret
je
cli
cltd
xor
mov
movsb
inc
fisttpll
cli
cmpsb
lds
pop
hlt
pop
sbb
pop
mov
pop
push
cmpsl
inc
cmc
mov
jle
mov
ss
popa
cmpsb
cmp
push
imul
mov
aas
inc
mov
pop
call
cli
and
inc
ds
pushf
mov
pop
and
mov
int3
nop
push
mov
inc
sub
pushf
nop
jnp
stc
xchg
jnp
arpl
mov
push
inc
sbb
xchg
push
dec
cmp
push
pop
rcll
lcall
cmp
and
jmp
rol
inc
cmc
cs
fdivl
sub
mov
and
out
mov
xchg
sbb
loop
jae
insb
inc
xchg
loop
int3
js
inc
pop
lds
sbb
scas
xchg
fdivl
icebp
mov
clc
jge
in
add
mov
arpl
and
add
xchg
push
into
and
xchg
adc
or
icebp
leave
shlb
jge
mov
cs
push
arpl
push
add
pop
xchg
pop
mov
int
pop
ret
mov
sub
aad
rorl
xchg
cmpsl
lcall
aad
insl
pop
dec
jl
or
in
jb
iret
sub
mov
clc
and
outsl
sub
cmp
jp
dec
in
rcr
push
adc
or
add
in
mov
pop
cmp
pop
aad
xchg
cmp
aad
push
jne
jecxz
xor
insb
in
in
rcrl
jl
mov
adc
es
add
or
dec
std
rcrl
mov
or
sbb
daa
sbb
and
popa
cmp
cmp
addr16
jbe
push
andl
pop
subl
hlt
dec
xor
or
out
xchg
popa
sub
xchg
insl
loope
and
enter
xor
pop
or
add
out
dec
mov
lret
loop
andl
push
mov
push
je
sarl
jns
into
out
mov
ja
dec
int3
adc
mov
sbb
in
lcall
pop
idivl
addr16
mov
jl
cli
cmc
mov
jnp
popf
jns
sub
add
lahf
ss
push
add
imull
imulb
sbb
or
cmc
push
mov
dec
push
lds
inc
arpl
or
rclb
push
push
jnp
bndldx
aad
or
int
fwait
xor
fldl
ret
je,pn
sub
or
test
jl
mov
pop
stos
mov
shlb
loop
gs
lods
mov
or
push
ljmp
scas
inc
inc
mov
mov
ja
jb
sbb
and
repnz
pop
add
add
xchg
mov
pop
fs
mov
mov
mul
cwtl
int
loope
cmpsl
ret
test
scas
mov
test
sbb
or
mov
cwtl
in
and
dec
shrb
mov
add
imul
mov
push
shrl
or
mov
adcl
sub
pop
nop
ret
inc
loope
jno
lea
dec
ja
idiv
xor
jo
ljmp
xchg
fwait
adc
int3
fwait
cmp
add
inc
cmpsb
sbb
fidivs
mov
loopne
or
dec
outsb
lahf
loopne
cmovg
negb
imul
fs
dec
sbb
xlat
scas
sub
std
cltd
bound
inc
test
stos
xor
repz
std
gs
call
lret
aaa
sbb
mov
xor
addr16
pop
pop
cwtl
mov
inc
or
sub
xor
mov
negl
sbb
xchg
lods
mov
mov
sub
cltd
mov
xor
cmp
adc
dec
sti
loope
pop
cs
cmc
imul
imul
addr16
imull
cmp
jge
pause
push
or
mov
popa
jmp
outsl
lea
mov
ljmp
aad
loop
out
mov
jl
lret
enter
inc
ficoms
in
xor
jle
or
stos
pop
xor
lock
notl
and
fldenv
inc
arpl
test
push
push
arpl
cmp
lea
mov
jp
shrb
adc
cmp
pop
fnstcw
jbe
mov
adcl
test
sbb
daa
imul
scas
adc
sbb
cmp
std
and
out
sar
dec
jmp
pop
stc
cmc
dec
jae
xor
fs
sbb
jmp
lret
lods
pusha
fildl
mov
enter
mov
dec
jle
cld
mov
pop
clc
dec
pusha
out
xstore-rng
cmpsl
inc
in
mov
cli
icebp
pushf
das
shlb
jg
jg
cmp
mov
xor
or
pop
pusha
out
nop
cs
leave
jg
cmp
ljmp
mov
loop
mov
std
loope
daa
pop
or
es
jle
ret
jp
in
mov
cmp
test
push
loope
or
int3
inc
sub
cmpb
rcrl
adc
pop
xlat
fstpt
jae
add
and
mov
stos
mov
dec
and
insb
lea
daa
hlt
movsb
lods
mov
mov
outsl
push
aas
mov
aaa
jmp
pop
test
cmpsl
push
ss
mov
push
push
popf
xchg
stc
and
imul
rcrl
sbb
dec
insl
mov
adc
jecxz
push
inc
fldcw
cmp
mov
sahf
mov
rol
lcall
push
xchg
stc
fs
mov
jl
mov
cs
sub
es
popf
pop
sbb
inc
cmp
lock
adc
outsl
lea
ret
in
push
js
gs
push
hlt
subb
xor
gs
adc
in
or
jae
mov
dec
insb
rcr
xchg
dec
out
xor
dec
not
xchg
inc
mov
add
testl
pop
stos
lds
push
das
dec
dec
inc
mov
cmp
pop
push
test
addr16
pop
cltd
dec
shll
xchg
sar
adc
mov
adc
test
or
cltd
xorl
xchg
ds
dec
pop
aaa
dec
pop
neg
std
sbb
adc
xchg
xor
fwait
adc
ret
inc
jmp
push
push
lea
aaa
dec
add
shlb
xchg
add
adc
mov
loopne
stos
and
jl
jae
ds
mov
lret
lahf
add
inc
out
aad
in
lret
fmuls
stos
stos
inc
dec
xor
test
xor
mov
mov
mov
add
inc
or
rcrb
mov
nop
dec
adc
out
orb
mov
dec
je
repnz
aad
ljmp
divl
cmpsl
fsqrt
and
aam
mov
out
lock
mov
fwait
arpl
shlb
into
pop
stos
subl
cmp
pop
mov
pusha
push
and
dec
mov
jae
sub
movsl
jmp
data16
je
inc
jbe
mov
mov
mov
ds
aaa
mov
sti
pop
ficoml
pop
mov
stos
pop
cmp
or
push
mov
rcrb
test
jno
sbb
cli
iret
mov
mov
loopne
mov
stc
mov
divps
add
pusha
sar
cwtl
mov
fwait
pop
gs
outsb
inc
mov
cs
jmp
pop
inc
scas
ss
push
jae
cmpsl
sbb
sbb
addr16
mov
fiadds
pop
sahf
and
lods
add
je
outsl
jp
pop
mov
lods
in
out
pop
es
xor
lea
xchg
sub
aaa
mov
int3
jp
xchg
xor
mov
mov
inc
out
mov
movsl
shl
arpl
and
add
xor
sbb
pop
jb
mov
adc
mov
out
and
js
aad
push
lods
fsubrs
xchg
add
ret
sar
stos
test
arpl
sub
or
loope
push
push
cmp
sub
nop
dec
add
rorb
adc
pop
xchg
outsl
xchg
loopne
mov
and
out
test
jae
pop
outsl
mov
and
inc
or
dec
out
xchg
std
repnz
lock
jecxz
enter
lock
ret
cmpsb
push
in
insb
add
jp
nop
sub
push
xlat
in
das
jg
jmp
jae
in
cmp
pop
lahf
repz
loope
imul
rorl
adc
fisubs
inc
xor
xchg
jge
lods
mov
into
cwtl
pop
fstpl
inc
std
sub
test
xor
pop
bsf
mov
jbe
cwtl
mov
inc
fdivrp
jbe
push
inc
or
and
push
jne
pop
hlt
jno
out
sbb
cltd
movsl
shrb
arpl
add
pop
dec
mov
mov
test
jbe
add
aad
push
cwtl
fsts
jno
sub
shll
sub
mov
mov
or
lods
and
ja
push
add
das
les
add
adc
sub
insb
lds
push
xor
das
js
in
imul
sub
push
add
xor
xorb
push
push
pop
add
add
sbbb
outsl
sbb
mov
pop
ret
sbb
jns
mov
xor
popf
cmp
sahf
mov
jp
xor
arpl
test
ss
sub
repnz
addr16
test
fcomps
imul
scas
pop
js
mov
cmpsl
ficompl
cmpsb
aaa
data16
shlb
out
cmpsl
mov
sub
mov
fwait
aam
sahf
xchg
or
sbb
mov
cmp
sbb
cmp
call
shll
jb
inc
stos
lret
std
aam
sub
and
ja
call
xchg
add
sbb
mov
mov
xor
fisttpl
data16
xlat
jo
pushl
push
lds
jmp
add
loopne
cmp
dec
out
hlt
pop
jle
adc
ja
push
shll
jecxz
sub
clc
fs
sarb
ret
jno
insl
faddp
inc
pop
sub
lods
andb
in
mov
loop
sbb
cmp
add
pop
inc
mov
xchg
xor
and
sub
mov
dec
cmp
ret
jmp
cld
inc
repnz
xor
adc
ja
out
shlb
cmc
dec
adc
cmpsl
lds
lods
jge
stc
xor
push
xchg
pop
adc
dec
rol
int3
mov
aad
jae
iret
xor
imul
xchg
cmp
ds
or
dec
sbb
cmp
mov
lea
pushf
ss
push
and
or
pop
imul
or
and
pop
test
ja
xor
inc
add
xchg
mov
outsl
daa
iret
cmp
xchg
sub
jb
cmp
adcl
cld
shrl
jp,pt
imul
in
pop
jnp
push
dec
mov
idivb
push
insb
aad
pop
ds
jb
mov
adc
sub
imul
mov
movsb
mov
xor
push
jbe
mov
pop
dec
je
inc
mov
ljmp
test
mov
sub
repnz
les
jge
sbb
push
pop
imul
jge
icebp
arpl
mov
pop
sub
mov
dec
xor
js
push
or
int3
and
lock
pop
mov
dec
insb
out
cld
cs
cltd
xchg
imul
enter
mov
add
mov
dec
adc
aam
push
mov
mov
lret
sbb
jl
cmpsb
pop
adc
mov
lahf
andb
xchg
cs
xor
push
enter
out
xchg
lea
add
call
adc
stos
xor
xlat
or
adc
or
icebp
sbb
mov
inc
ljmp
xor
or
mov
rorb
sbbl
fcoms
cmp
pop
sahf
push
push
sti
outsb
gs
mov
test
xchg
add
jg
mov
dec
dec
cs
insb
call
add
insb
mov
xor
cs
dec
sub
lahf
mov
push
sbb
out
cli
pop
push
and
cmp
ret
imul
rcll
mov
inc
push
bound
and
loopne
fsubp
mov
add
vhsubps
jnp
fisubrl
mov
test
dec
repnz
cmp
ret
fwait
pop
mov
mov
push
test
int
xchg
cltd
adc
jbe
xchg
mov
rcrb
dec
and
rcll
stc
cwtl
cmpsl
jne
loope
cmp
mov
inc
pop
movsb
movsl
out
into
in
push
xchg
cmp
push
mov
jae
mov
clc
cmp
loope
sub
xor
mov
mov
jne
mov
cmp
addr16
dec
sarb
out
push
inc
jg
mov
cmpsb
filds
std
jae
scas
shll
ljmp
ds
notb
dec
mov
outsl
inc
or
adc
icebp
into
int3
push
push
xor
cmp
cwtl
into
imul
pop
out
aaa
int
repz
adc
adc
jo
fists
mov
jno
adc
jno
or
por
mov
popf
test
mov
cmc
movsb
sbb
rep
arpl
xchg
dec
fldl
popf
cmc
mov
ss
dec
dec
push
push
stc
imulb
or
call
fsubrs
and
daa
ret
push
mov
or
and
shlb
dec
pop
inc
mov
push
adc
pop
mov
mov
popa
jne
xchg
jg
cmp
inc
popa
cs
andb
xor
loopne
test
in
mov
sub
mov
imul
xchg
es
pop
jmp
pop
add
jmp
push
loop
in
add
pop
lahf
xchg
enter
cmp
pushf
addr16
sbb
leave
dec
mov
xchg
js
nop
call
jno
pop
or
imul
sbb
jno
int3
stos
inc
inc
mov
and
int3
sti
jge
icebp
and
cwtl
dec
mov
push
test
or
pop
das
cs
xchg
sbb
adc
loop
mov
cmpsl
aad
mov
das
inc
sub
fadd
ja
xlat
cmp
push
pushl
pop
sub
repnz
sti
lock
out
shrl
push
jle
andb
cmc
pop
mov
or
rol
adc
add
pop
jg
lahf
or
mov
push
sub
mov
add
pslld
xchg
add
int3
imul
aas
sahf
sub
fstpl
out
fcmovbe
xchg
pop
out
loopne
rorb
dec
sti
jle
insl
sar
jmp
shlb
jle,pt
xchg
aad
lock
xchg
dec
imul
jb
cmpl
cmpsb
int3
aaa
and
push
jne
psrlq
jle
jo
push
in
int3
sbb
mov
pop
push
hlt
sbb
js,pn
test
enter
add
mov
dec
test
cld
in
test
mov
cld
push
pop
mov
or
rolb
dec
mov
and
stos
mov
mov
mov
ljmp
jg
cmp
test
sti
addl
jne
add
inc
push
je
outsb
rclb
sbb
rcll
aam
push
ja
xchg
mov
sbb
add
fwait
ds
cs
scas
mov
push
loope
ljmp
sti
popa
cmpsl
stos
aas
add
mov
in
movsb
jl
pop
fcomip
repnz
xor
cmpsb
and
in
xchg
cmp
stos
sbb
inc
inc
inc
sub
ret
sahf
xlat
push
mov
in
rorb
mov
fisttpl
subl
add
pop
insb
nop
in
mov
push
push
inc
inc
loop
jmp
pcmpeqd
and
mov
insb
add
insb
test
add
or
fiaddl
sbb
aas
mov
shll
les
mov
cmpsl
jle
and
jb
or
scas
or
pop
out
inc
fldz
or
imul
fstpt
cli
push
or
stos
bound
insl
pop
adc
mov
pop
test
xor
xor
dec
je
cltd
mov
xchg
or
fcomp
sub
scas
jecxz
jge
cmp
xchg
mov
cmp
cmp
sbb
clc
shrl
dec
mov
push
popa
inc
ss
jne
xchg
aad
mov
fs
ljmp
push
aas
out
mov
out
dec
cli
mov
adc
inc
roll
mov
imul
adc
negl
in
xor
je
or
mov
loop
inc
in
cltd
int
insl
pushf
push
fists
adc
xor
xchg
icebp
or
dec
mov
mov
das
lods
push
inc
stos
nop
cmpsl
adc
scas
mov
cmpsl
es
jle
or
aaa
jmp
mov
adc
scas
pop
scas
pop
and
jge
icebp
mov
cmp
add
mov
aam
leave
es
sbb
adc
mov
mov
xchg
das
xlat
pop
cmp
cmp
popa
lock
inc
jmp
in
jae
into
mov
add
inc
rorb
outsl
mov
cmp
jae
stc
or
jmp
adc
pop
jbe
inc
popa
dec
inc
jge
adc
pop
pop
call
ss
cli
push
inc
les
dec
int
jo
daa
mov
loope
scas
je
dec
push
in
pop
xchg
scas
xor
sbb
in
les
xor
push
or
jmp
icebp
pop
pop
scas
fucomi
out
iret
jns
push
adc
cmpsl
pop
xchg
adc
nop
sti
push
int
call
and
scas
stos
cli
mov
push
jl
add
les
leave
mov
jbe
fwait
arpl
insb
jnp
push
punpckhwd
test
js
lods
dec
cmpsb
mov
lret
or
stc
repz
loop
inc
adc
in
pushf
mov
mov
and
xchg
jns
xor
int
mov
jnp
fstl
dec
sti
dec
out
and
adc
inc
scas
push
ss
pushf
scas
mov
add
ja
aam
mov
loopne
es
fisttpl
jns
pop
or
stos
mov
leave
das
addb
iret
xor
xor
jmp
sbb
das
and
and
cmpl
sbb
cmp
and
fdivrs
lret
mov
cs
adc
fs
addr16
mov
loope
add
xchg
mov
pop
mov
and
and
mov
rolb
jno
jg
xchg
movq
std
cmp
ja
cmp
pop
xchg
or
cltd
movsb
dec
or
adc
dec
rcrl
sub
inc
adc
add
xor
test
sbb
jbe
fwait
sub
push
repz
mov
xor
repz
dec
mov
add
push
inc
sbbb
les
mov
xlat
inc
add
mov
pop
nop
lahf
mov
cmpsl
fsubrl
xchg
sub
in
cmp
inc
cmpsl
or
sahf
dec
sub
lahf
test
sub
repz
std
xchg
pop
adcb
push
insb
dec
in
xor
andb
int3
mov
addr16
or
pop
sub
gs
inc
popf
and
dec
mov
leave
cmp
repnz
addl
fmuls
in
sbb
out
bound
jecxz
cmp
mov
aas
mov
test
andb
dec
test
gs
sub
sbb
pop
testb
push
or
inc
lcall
push
jno
lret
in
ret
lods
mov
repnz
xlat
jmp
mov
mov
pop
imul
jnp
pop
xchg
mov
mov
rcll
and
sub
sbb
ljmp
enter
cmp
mov
pop
outsl
dec
das
and
int
jle
sub
add
data16
xchg
inc
mov
push
cwtl
and
movsb
shrb
cmc
int3
sub
insb
add
xchg
scas
inc
xor
lcall
out
in
jge
sbb
push
xchg
addl
test
cmpsl
fs
sub
out
adc
push
jge
aaa
movsl
vrcpss
fistl
ret
lret
pushw
test
test
or
or
sbb
fs
shl
bound
shlb
cmp
std
adc
in
jae
push
mov
ffree
in
loope
mov
test
pop
cmp
sti
dec
popa
stc
mov
dec
test
and
test
xor
test
cli
adc
pop
xlat
jno
jmp
mov
mov
cmp
mov
cs
mov
mov
lods
dec
push
popf
and
pop
rcll
fmuls
or
imul
mov
in
jne
insl
movsl
adc
mov
cmp
mov
lret
outsb
lahf
push
and
inc
es
lock
test
sbb
jne
scas
mov
cld
mov
fcoms
lods
mov
addb
lcall
ss
xchg
je
dec
add
inc
nop
aaa
sub
push
ds
dec
jbe
add
pop
popf
leave
xchg
pop
imul
int
jbe
mov
fnsave
clc
push
clc
iret
stos
shl
pop
jbe
mov
clc
repz
sbb
out
sbb
frstor
ficoms
lcall
mov
movsb
xor
jg
jne
jae
ljmp
push
adc
xorb
jmp
andl
dec
mov
mov
xor
insb
insb
push
xor
or
in
rcrl
pop
mov
dec
lock
xchg
sbb
lods
lock
cmp
jb
repz
int3
adc
lret
mov
mov
outsl
mov
lcall
push
pop
mov
rcrl
jae
aas
cs
dec
mov
inc
mov
ss
out
or
add
or
out
add
push
mov
sti
pop
xlat
stc
sahf
int
inc
scas
gs
adc
pop
mov
frstor
xchg
jle
add
mov
xor
outsl
push
mov
xor
dec
mov
ret
mov
nop
push
jmp
xor
mov
xlat
inc
mov
adc
jmp
xchg
and
mov
mov
xchg
repnz
pop
pop
pop
subb
clc
enter
jg
insl
push
dec
dec
icebp
sbb
adc
fsubrl
dec
loop
add
xor
data16
mov
mov
xchg
push
loop
pop
fcom
rcrl
mov
outsb
inc
push
ficompl
sub
jp
sahf
addr16
fmuls
stc
out
sub
and
and
popa
movsl
adc
rcrl
sub
sbb
add
push
pop
xchg
or
aas
inc
push
fdivs
hlt
jne
or
jae
rcrl
mov
add
xsha1
or
push
ja
push
inc
test
lds
push
loop
lods
addr16
xchg
in
or
shrb
shrl
movsl
test
daa
nop
and
loopne
out
or
daa
jecxz
inc
pusha
jns
lods
fisttpl
test
mov
mov
ret
pop
jae
mov
stos
arpl
pop
aaa
cmp
das
push
cmp
inc
mov
jecxz
mov
inc
rcrl
jecxz
iret
ljmp
fwait
lods
jns
cmp
iret
xchg
or
sub
int3
pushf
jno
cltd
movsl
cmc
jge
cmp
jl
sbb
mov
inc
jae
js
dec
mov
jmp
jl
int3
add
pop
cltd
ret
cli
out
dec
fnstsw
add
jge
std
mov
aaa
je
lds
sub
xchg
dec
faddp
fcoml
outsl
punpcklbw
cmc
push
lahf
pop
ljmp
test
inc
mov
or
rcr
jp
std
scas
add
lret
sub
mov
sbb
fldt
imul
ret
pop
popa
cmpsl
andl
jle
aad
jge
xchg
loop
adc
aam
fiaddl
add
imul
and
fiadds
mov
lahf
xlat
sbb
pop
mov
mov
push
lret
shl
jns
sub
adc
loopne
adc
jnp
in
iret
mov
pusha
xlat
push
aas
dec
ds
divb
jg
mov
cmp
std
mov
push
push
xlat
adc
scas
jno
add
add
sbb
jge
ret
or
push
mov
fstps
pop
ja
or
out
or
push
rcll
repz
mov
mov
xorb
movsl
adc
cwtl
pop
adc
orb
lret
sub
xchg
jbe
jae
mov
imul
mov
mov
addr16
aas
movsl
lea
xchg
imull
mov
mov
push
xchg
xchg
ret
fsubl
mov
jle
dec
insl
mov
mov
xchg
mov
in
lcall
cltd
inc
fs
test
sbb
decl
insb
clc
mov
scas
sti
cld
jp
mov
lds
sbb
out
je
ret
push
or
push
imul
inc
pop
test
jo,pn
and
mov
and
sub
jo
xor
sbb
fsubr
inc
mov
jge
sub
js
fwait
mov
in
jle
inc
dec
mov
and
pop
inc
lahf
shll
insl
je
outsb
insl
or
mov
int3
int3
sbb
or
pop
testl
stos
inc
push
jb
fs
es
mov
pop
sti
sahf
leave
xchg
sub
es
dec
daa
cmc
pop
negl
hlt
clc
sbb
gs
sub
stos
push
push
xchg
mov
xorb
int3
add
xor
mov
pop
sbb
pop
cli
dec
push
cltd
adc
fmul
repz
mov
xor
jb
jg
and
movl
jmp
adc
rol
mov
or
jl
inc
test
dec
sbb
mov
pop
and
add
popa
ds
bound
jbe
xor
xchg
sub
lea
adc
add
mov
mov
sarl
rorl
mov
test
mov
mov
leave
jnp
sbb
inc
xlat
stos
std
add
sbb
cmpsl
mov
out
std
rcrb
push
test
push
lods
jle
rcll
add
inc
rcl
fistl
and
pop
lret
mov
mov
adc
adcb
push
adc
adc
repz
outsb
jp
rclb
pop
call
aad
xchg
inc
push
add
ret
call
push
add
fs
pop
mov
pusha
and
ret
sbb
dec
gs
cmp
push
cmp
xlat
and
mov
insb
test
loope
arpl
xor
lock
fldcw
rorl
push
jnp
mov
das
xor
nopl
pop
sti
or
add
sbb
jno
push
popa
sub
adc
push
push
fs
mov
inc
out
push
test
mov
xor
or
adc
push
roll
sbb
jge
insb
inc
add
inc
in
jbe
mov
mov
cmpsb
dec
inc
lea
mov
cwtl
into
xchg
jns
pop
mov
ss
jle
test
es
into
lcall
jg
cmp
fldl
pop
ret
push
push
test
dec
pop
jb
cltd
fmuls
out
setg
xor
clc
pop
xor
and
scas
sub
cmp
or
out
push
push
add
in
add
push
cmpsb
add
pop
outsb
sbb
mov
data16
sbb
mov
out
popf
sbb
in
fsubrl
push
ror
sti
enter
push
cmp
int3
popf
inc
cli
hlt
or
loope
mov
jecxz
addr16
out
ret
popa
xor
jae
adc
sub
std
add
cmpsl
adc
dec
insb
push
stc
cmp
adc
stos
cmc
iret
fistl
and
and
mov
xlat
fsubrl
fcomip
aaa
dec
lahf
push
pop
cs
xchg
inc
cs
ds
adc
jecxz
pop
sahf
xchg
ljmp
loop
jle
xchg
bound
add
xlat
std
xlat
sti
inc
test
xchg
movsb
lret
xor
fs
movsl
xor
in
shll
test
fisubs
push
and
pop
cmpsb
data16
stos
or
jle
out
mov
pop
inc
mov
mov
aad
icebp
pop
mov
mov
add
in
clc
add
add
fcmove
ficompl
sbb
push
insb
push
push
jb
or
pop
mov
xchg
daa
pop
hlt
mov
fistl
adc
or
adc
test
mov
jae
out
and
out
es
fiaddl
cltd
adc
jl
sbb
stc
mov
mov
xchg
jmp
in
pop
ja
fdivl
cmpsl
add
dec
mov
insb
xor
mov
test
dec
fstpl
sub
add
push
loope
sub
enter
in
lret
test
add
lcall
jmp
mov
pop
dec
sub
out
xchg
pop
jl
sbb
push
cmp
jecxz
jle
mov
pop
xor
sub
xor
add
loop
lcall
push
gs
xchg
xor
pop
test
xor
mov
pop
dec
dec
pop
mov
clc
inc
scas
test
cltd
les
adc
fdivr
pushf
cs
push
xchg
adc
sub
leave
jo
mov
dec
push
xor
adc
stos
xor
movsb
mov
xchg
mov
xchg
lcall
out
xlat
mov
pusha
push
out
fstps
test
mov
aad
shr
pop
pop
xchg
sbb
lret
jge
add
cmp
les
or
loopne
movsl
push
or
mov
mov
xchg
enter
sbbl
pop
lcall
pop
stos
push
popa
movsb
pop
div
dec
jmp
sbb
fistps
fisttpl
or
inc
cmp
movsb
rcrb
pop
mov
or
dec
adc
shrb
xchg
aad
ffreep
les
bound
xchg
sub
pop
inc
imul
fidivl
xchg
jmp
dec
adc
lcall
ret
jne
mov
inc
or
dec
fwait
cmp
xchg
cli
lcall
jp
cs
iret
lret
mov
push
pop
mov
pop
lods
cmp
xchg
test
ret
jl
int
push
outsb
movl
das
jnp
push
scas
test
lea
adc
and
mov
pushf
lds
xchg
mov
mov
cmp
leave
xchg
adc
inc
sub
iret
mov
jmp
outsl
out
and
dec
or
outsb
xchg
imul
insl
arpl
mov
xchg
loopne
arpl
arpl
push
enter
mov
bound
lret
pop
fwait
and
xchg
mov
push
popf
mov
ror
mov
sub
sub
dec
ja
and
les
lds
jo
out
dec
mov
adc
add
lds
cwtl
dec
out
call
call
stos
test
push
sbb
xchg
test
mov
lahf
insb
push
xor
fcomp
push
daa
test
or
pusha
fldl
and
inc
mov
pop
inc
cmpsl
imul
push
cmpsl
mov
loopne
out
add
add
add
xchg
cmp
and
popf
jnp
adc
xor
or
xchg
sub
addl
mov
fcomps
call
adc
sahf
sub
mov
fld
mov
pusha
ja
inc
imul
mov
inc
inc
push
and
mov
stos
out
or
ret
mov
out
int3
inc
ja
mov
mul
fsubrs
add
jae
xchg
daa
cmp
jno
jmp
je
or
int3
test
int
outsl
stos
lods
jns
stos
mov
sub
xorb
add
stc
sub
cwtl
scas
jmp
cli
lret
fxch
pop
jge
dec
sub
insl
cmp
das
repz
cwtl
pop
insb
adc
push
aam
push
inc
test
inc
in
and
pop
cmpsb
js
push
scas
cld
sbb
jge
mov
mov
push
hlt
jae
enter
push
pop
pusha
mov
adc
cmpl
or
xorl
ds
sub
adc
je
and
inc
cmc
xchg
push
cwtl
in
cmp
inc
fbstp
frstor
mov
push
les
scas
std
int3
insb
jecxz
cmp
mov
jb
lds
inc
xchg
mov
add
mov
or
icebp
xchg
ss
pop
cmp
sbb
js
lret
dec
idivl
in
cmp
ljmp
mov
and
xor
mov
xlat
jecxz
or
jp
and
cmc
out
xchg
loopne
imul
push
insb
stos
jb
jns
mov
or
sub
xchg
loop
inc
ljmp
ffree
mov
sbb
repz
push
xor
sti
out
push
xchg
jno
jmp
int3
loope
shll
cmp
sbb
ds
lret
dec
cmp
aas
lret
bound
or
sbb
cmpsb
pusha
pop
imul
or
test
jge
inc
sbb
mov
jge
sub
sub
mov
sahf
pusha
lods
sbb
scas
mov
add
lea
mov
lods
mov
popa
mov
out
shll
imul
mov
fsubl
mov
inc
aas
mov
add
jns
xor
mov
and
fs
ja
adc
push
cltd
adc
in
js
fwait
lods
and
push
cmpsb
ljmp
loopne
jno
sahf
push
mov
es
icebp
mov
aam
dec
sarb
pushf
push
bswap
in
or
pushf
lahf
cld
cmp
jo
rcrl
mov
lret
movsb
addr16
mov
and
jge
imul
out
mov
pop
sti
pop
pusha
aad
andl
fdivl
in
mov
mov
dec
xor
lock
jecxz
xchg
std
data16
inc
daa
xchg
fndisi(8087
lds
daa
adc
mov
mov
int3
jo
mov
in
pusha
cmp
scas
pop
dec
repnz
sahf
jb
int3
pop
nop
mov
mov
out
outsb
add
sbb
imul
or
inc
xor
popf
add
aaa
xor
scas
in
sahf
sbb
out
cli
push
cld
aaa
out
push
and
sarl
out
std
push
shl
xlat
notb
clc
out
into
negl
scas
lahf
push
xchg
stc
xchg
mov
pop
push
xor
jbe
mov
push
outsw
sbb
xchg
mov
sbb
sbb
xchg
mov
lcall
fmul
fs
adc
nop
insl
mov
cmp
cmpsb
mov
xchg
lods
cmp
out
repnz
cmp
sbbl
push
xchg
das
mov
xchg
inc
inc
xchg
sbb
ror
dec
jle
mov
pop
adcb
cs
push
icebp
pushf
cmc
jne
dec
adc
stc
andb
add
sub
les
pop
xchg
adc
sbb
jle
repz
das
xchg
pop
hlt
in
xchg
aad
mov
icebp
or
mov
cli
in
dec
add
sbb
test
sub
shlb
mov
cld
aas
adc
enter
cmpsb
or
icebp
push
subb
enter
pop
push
decb
inc
gs
xor
shlb
or
pop
sub
shl
fwait
mov
xchg
orl
add
fistps
jp
push
test
sbb
repnz
cmp
sub
fcoms
dec
imul
rcrb
dec
loop
mov
fidivs
or
mov
mov
mov
and
mov
cmp
fistl
pop
lcall
mov
arpl
insl
call
push
lcall
or
or
mov
fsubl
mov
repnz
lds
out
dec
pop
daa
bnd
nop
pushf
loop
mov
out
sub
out
je
insl
inc
cmpsb
fldcw
or
jae
popf
mov
inc
and
jae
ljmp
movsl
mov
xorb
movsb
fsubs
subb
fmull
sbb
or
inc
adc
xchg
nop
mov
xchg
inc
fmuls
sbb
sub
lock
sub
mov
les
addr16
pop
data16
subb
gs
dec
inc
ss
mov
sub
sub
inc
repnz
nop
dec
pop
cmp
mov
daa
mov
repnz
scas
insl
or
mov
repz
pop
and
jb
sub
cld
int3
scas
inc
dec
pop
repnz
rcl
jp
scas
inc
mov
jl
dec
filds
js
in
lock
shl
pop
cmp
jl
mov
cltd
dec
mov
aad
sbb
sbb
xlat
sub
mov
mov
pushf
loope
cwtl
insl
scas
arpl
mov
inc
pop
cltd
int
out
inc
pop
mov
shll
adc
and
sarl
fldcw
mov
mov
movsl
ret
andb
sarb
adc
push
adc
jbe
in
test
addr16
and
mov
repz
rol
mov
dec
push
cs
xchg
xchg
adc
and
cmc
out
daa
nop
popa
sbb
sub
sbb
push
shrl
xor
pop
mov
jmp
dec
mov
push
mov
sub
loop
xorb
lea
rclb
mov
cmp
sub
lret
adc
ja
sbb
pop
out
push
jnp
insb
jg
adc
aad
xchg
push
cmpsb
aas
xor
or
fcompl
mov
push
or
out
ljmp
sub
int3
push
dec
rcrl
sti
sbb
pop
shr
rolb
mov
daa
stos
pop
mov
loop
push
int3
popa
insb
roll
mov
add
push
and
repz
jp
mov
mov
jge
pop
mov
push
and
push
test
jne
xchg
dec
or
int3
sbb
dec
lds
outsl
adc
scas
icebp
and
sub
xor
sbb
lds
pop
xor
into
xor
in
mov
shlb
incl
mov
int3
xchg
cmpsb
mov
and
lahf
jno
enter
icebp
or
xchg
cmp
insl
xor
adc
mov
ljmp
or
add
inc
fwait
out
lds
pop
mov
gs
inc
ss
pop
in
mov
popa
push
ficoms
les
or
rol
push
sahf
or
lods
inc
jg
sub
sub
js
xchg
sub
pop
pop
iret
out
les
mov
adc
jmp
push
sti
ds
scas
sub
outsb
fiaddl
inc
adc
dec
rorl
lods
push
adc
xchg
inc
js
jns
aam
loope
or
movsl
xor
nop
jmp
test
shl
rolb
es
das
test
sub
andl
jg
jl
les
in
push
sbb
pop
xchg
in
pop
aaa
sbb
pop
jns
adc
test
mov
push
jmp
fcmovnb
cmp
pop
mov
mov
or
inc
cs
mov
stc
aaa
dec
push
dec
sub
cmc
mov
jne
add
mov
fs
incl
push
add
bound
imul
in
and
mov
test
das
pop
mov
sti
stos
mov
in
rclb
popa
mov
mov
cmpsl
js
cmp
aam
xchg
rcrl
repnz
test
fdivrl
mov
addb
fbstp
pop
add
stos
mov
or
jle
jg
in
pushf
xchg
fidivrl
lret
les
jg
ja
out
mov
fidivrl
jp
dec
cmp
lods
repz
xchg
dec
pop
push
inc
test
into
data16
cmpsb
sub
xchg
mov
pop
jge
in
xchg
out
inc
pop
sbb
push
cwtl
out
test
cmc
dec
int3
mov
adc
mov
cmpb
mov
incb
test
int3
fs
adc
gs
adc
cmc
fdivl
dec
adc
or
pusha
daa
subl
push
mov
cmp
jb
mov
xchg
imul
repz
aaa
or
pop
mov
stos
cmpsl
fstl
addl
and
jno
aaa
xchg
cwtl
je
call
inc
test
cmp
adc
pop
inc
adc
cs
and
sbb
mov
or
cmpsb
mov
pop
pop
jge
aas
cmc
out
pop
aaa
cwtl
jle
dec
rclb
mov
xor
stc
sub
test
scas
xchg
pop
sub
pushf
aaa
adc
mov
add
mov
ficompl
add
mov
dec
mov
lods
movsl
lods
or
mov
fwait
rcrb
lret
add
xchg
call
mov
outsb
xchg
cmp
mov
sub
test
sbb
pop
jbe
je
xor
pusha
xchg
cli
cwtl
mov
adc
adc
mov
inc
push
and
orb
outsb
lds
pop
out
xlat
dec
jbe
fdivrl
jecxz
fstpt
int3
or
mov
add
inc
jge
xor
aad
mov
lahf
sub
sbb
inc
push
das
adc
inc
inc
push
fcmovb
xchg
je
mov
sub
cwtl
shll
fstpl
cmp
pop
push
or
jmp
jge
adc
outsl
dec
sub
out
aad
movsb
cmp
inc
fdivr
imul
xor
pmulhw
sbb
movsb
or
int
xchg
int
mov
pop
pusha
pushl
sbb
adc
les
jl
rcrb
jns
cmp
lahf
aad
xor
adc
inc
movsb
aad
inc
lahf
lcall
push
dec
movsb
jbe
add
xchg
leave
jmp
inc
rolb
arpl
pop
and
mov
jp
sahf
ds
push
and
xor
xor
jns
mov
test
pop
cs
adc
and
dec
xchg
mov
mov
mov
imul
leave
sub
enter
dec
mov
or
outsb
sbb
or
shll
jmp
xchg
inc
xor
mov
loopne
cwtl
xchg
mov
xchg
cmp
jnp
jno
inc
mov
xchg
jae
mov
xor
jne
cmp
iret
add
pop
push
mov
pop
adc
repnz
rcrb
xor
xor
je
push
dec
fdivrl
mov
loopne
pop
push
push
arpl
js
mov
test
add
jnp
sub
scas
lds
lds
jmp
sub
mov
pop
movsb
lods
sbb
mov
sub
js
ds
out
dec
ja
add
jo
dec
dec
xor
add
mov
mov
cld
int
pop
adc
or
mov
or
cmp
dec
mov
jl
push
addb
xchg
pause
test
cmpb
fcmovu
dec
sbb
icebp
add
pusha
std
xchg
test
std
mov
push
fs
mov
jae
aas
or
mov
scas
in
mov
jb
xchg
jne
mov
fldl
es
outsl
scas
imul
pop
shlb
jle
sbb
cltd
movsl
lret
cmp
bound
pop
cmp
lret
push
mov
inc
loop
jg
push
sbb
adc
int3
cmp
sarl
nop
jg
sarb
pop
or
sbb
mov
mov
in
sbb
popf
cmpsb
xor
mov
sub
stos
popf
int
movsl
pop
pavgb
lock
sarb
mov
push
cwtl
pop
rcrl
popf
xchg
jnp
jle
xor
je
mov
ljmp
cmpsb
jne
out
sub
mov
adc
je
and
jne
insl
cmp
push
cmpsb
add
push
cltd
xchg
inc
adc
out
test
pop
xchg
xchg
jno
inc
das
add
and
dec
xchg
xor
fcomps
cli
pop
or
cmc
xchg
cmp
mov
or
into
cmpsl
sbb
pushf
bound
into
xor
cmpsb
sbb
dec
add
dec
and
mov
sbb
xorl
pushf
cltd
cli
xlat
push
mov
aas
pop
paddd
push
stos
pop
pop
mov
notb
fdivrs
push
dec
mov
xchg
addr16
dec
dec
flds
int3
dec
pusha
cmp
pop
inc
dec
addr16
mov
gs
das
or
movsl
push
xor
in
sbb
push
insb
cmp
dec
lods
mov
xchg
aad
js
inc
pop
push
lahf
test
jmp
sbb
and
icebp
pop
insl
mov
lods
aam
add
xor
shll
jne
cmpb
stos
lea
adc
in
xchg
dec
mov
js
leave
in
xchg
fiadds
in
orb
mov
sti
inc
movsb
out
adc
mov
dec
stos
xor
cmpsb
dec
outsb
sbb
jle
xchg
xchg
das
adc
lcall
xchg
dec
and
add
mov
shrl
imul
insb
pop
xor
sub
or
std
mov
pop
push
rolb
lcall
jle
icebp
test
inc
ljmp
and
fisubs
insl
xchg
sbb
push
jbe
mov
out
fimuls
pop
scas
lret
movsb
sub
jno
das
sub
push
sub
pop
and
jb
adc
pop
xchg
test
cs
sti
inc
clc
incb
push
mov
or
into
xor
mov
push
mov
xor
enter
shl
jmp
add
xor
pop
sbb
rclb
xor
daa
add
push
ja
shrb
sbb
pop
inc
mov
add
dec
imul
sbb
dec
sub
jge
sbb
stos
test
xchg
push
setno
roll
dec
sub
dec
adc
sub
mov
icebp
test
and
ja
jl
cmpsl
setns
pop
scas
in
cmpsl
cmpsb
push
lret
dec
mov
call
mov
nop
outsl
lods
xchg
scas
in
sub
cmpsb
jb
enter
jne
sarl
pop
mov
lahf
xchg
or
or
lea
xor
subb
push
add
aam
and
push
inc
stc
cld
iret
test
mul
insl
inc
sub
cs
mov
jnp
ret
push
cmp
cmp
das
jns
stc
sbb
cwtl
adc
insb
lcall
or
sub
test
jg
lret
loopne
mov
inc
mov
notl
xor
sahf
inc
xchg
cmc
test
gs
setl
sbb
ds
inc
pusha
sbb
xchg
push
fnstenv
sub
leave
adc
mov
lods
jmp
xor
and
fists
xlat
notb
cmpsb
jecxz
cld
inc
fs
cmp
roll
loopne
mov
cmp
insl
and
push
push
and
in
pop
imul
addb
test
mov
jb
sub
add
xchg
inc
push
mov
push
xchg
sbb
out
inc
jo
mov
pop
leave
and
inc
divl
stos
dec
mov
pop
aas
mov
mov
pushf
pushf
sti
jns
push
mov
js
fstpl
push
dec
inc
push
imul
and
jne
xchg
inc
adc
dec
dec
jbe
loopne
inc
add
outsb
mov
insl
xchg
adc
sub
sub
je
dec
lret
out
insl
iret
subb
adc
jns
mov
mov
xor
nop
subb
jle
dec
and
adc
mulb
cli
test
jle
mov
fs
lock
dec
push
in
mov
cmc
sarl
popf
call
out
mov
adcl
push
cmp
xor
or
dec
and
and
es
shr
in
je
cs
jb
pop
test
loopne
dec
lds
mov
inc
jl
pop
test
push
xor
out
adc
movsb
inc
cmc
add
adc
or
or
push
adc
mov
fwait
pop
pop
fcoms
mov
and
push
lahf
in
and
sbb
leave
or
mov
ffree
dec
jecxz
ficoml
inc
pop
enter
nop
cmpsb
xchg
lods
push
mov
pop
inc
popf
dec
data16
cwtl
xchg
add
insl
sub
fdivl
mov
loopne
inc
push
into
rcrl
sbb
xor
sub
rcl
movsb
loope
out
movsb
xchg
pop
lock
ficomps
adc
push
jmp
dec
fwait
pop
loope
insl
lods
gs
cs
xchg
sub
fnstsw
add
imul
mov
dec
and
rolb
push
adcb
mov
and
pop
out
rcr
pushf
rcr
dec
dec
adc
dec
jl
stos
mov
cmpsb
xor
aam
add
sub
cmp
aad
insb
adc
icebp
cmp
mov
lds
ret
ss
lock
inc
stos
xchg
clc
and
jecxz
xor
stc
int3
les
adc
xchg
xchg
sbb
xchg
and
mov
arpl
fstp
ror
dec
pop
vphadduwd
pop
lods
xor
rcll
out
jae
loopne
jg
cmp
inc
pop
cmp
outsl
sub
das
mov
cmpsb
fcmove
sub
notb
sub
roll
stc
sub
sub
pusha
mov
mov
movsb
jmp
scas
xchg
das
cli
dec
push
les
adc
push
fwait
inc
loope
mov
xchg
cs
jbe
jl
gs
xlat
or
aaa
mov
push
adc
xchg
xor
inc
dec
pushf
arpl
inc
mov
add
in
pop
dec
or
out
movl
cwtl
gs
mov
sahf
xchg
out
fs
pop
and
sbb
xor
shrl
mov
inc
pop
mov
or
jmp
fwait
pop
je
add
ss
or
xor
aad
dec
xchg
dec
das
push
or
aaa
inc
test
std
inc
inc
daa
popa
inc
test
stc
xchg
jmp
add
mov
notl
aas
or
and
or
das
std
int3
dec
push
incl
pushf
cli
jmp
rolb
jnp
mov
shlb
jmp
sbb
mov
pop
dec
sub
mov
push
inc
cmp
cmpsb
pop
push
and
roll
and
mov
cs
fdivrl
lds
rcl
xchg
dec
pop
mov
insb
xchg
dec
mov
fwait
push
jmp
inc
repnz
dec
imul
push
lods
xchg
inc
out
xchg
cmp
pop
loope
and
bnd
push
cmpsl
icebp
in
push
repz
mov
pop
jo
cwtl
adc
nop
push
lret
jle
fwait
and
xchg
push
push
inc
cmp
mov
jge
lods
imul
xor
lods
sbb
divl
xor
sub
add
inc
ret
ljmp
loope
and
fstpl
mov
lods
lahf
xchg
mov
cmpsb
ret
jp
and
inc
fwait
sti
movsb
xor
out
jle
js
cs
mov
js
pop
lahf
xchg
sbb
mov
cmp
jns
push
pop
inc
fistps
xchg
push
repz
mov
int3
adc
xchg
imul
ret
pop
adc
lret
cmpsl
out
flds
dec
aaa
mov
jnp
lds
lock
jno
icebp
shll
sbb
loopne
push
test
and
fsubp
add
pop
into
add
mov
jge
ficomps
push
push
or
cmp
fdivs
daa
stc
loopne
xchg
jge
leave
xor
jne
inc
push
fs
aas
imul
push
xchg
in
jbe
testl
cs
jb
clc
pop
insb
lods
or
nop
sub
lock
sbbb
aad
pop
sbb
xor
cmpsl
mov
stc
in
shlb
or
mov
ljmp
inc
in
push
addr16
rcr
addr16
stos
xchg
cmp
icebp
inc
mov
push
inc
sub
int
sub
mov
sub
pusha
inc
xorl
xor
out
jmp
add
jae
addr16
hlt
cmp
xchg
call
cmp
mov
data16
fistl
or
pop
mov
cmp
pushf
aaa
or
test
sar
fcomip
popa
mov
cld
js
push
loop
sbbl
pop
cmp
mov
jo
fs
dec
fcom
inc
xor
ret
push
sub
inc
jp
pop
pop
mov
adcl
sub
fsubs
mov
pop
push
adc
pop
jmp
fsubrs
insb
bnd
jne
mov
dec
je
and
in
jnp
inc
repz
aam
inc
pop
mov
fdivr
arpl
les
push
mov
push
loop
and
xlat
and
std
inc
mulb
pop
mov
cmp
cmp
cwtl
mov
add
sarb
adc
into
mov
in
jmp
rcr
cmpsb
sub
mov
pop
fnstcw
leave
ret
int3
lds
sub
js
ret
arpl
pushf
call
hlt
xchg
pusha
stos
cs
pop
out
lds
ret
fwait
cmp
jecxz
test
scas
mov
xchg
mov
adc
jmp
pop
je
mov
jae,pn
push
pop
scas
js
xchg
push
out
cmp
jle
xor
cmp
ja
xorb
xchg
stos
dec
add
add
stos
add
inc
int
into
xor
push
xchg
jno
and
inc
pop
push
inc
mov
pop
sbb
inc
push
push
test
mov
mov
stc
ss
ret
mov
jnp
jl
and
mov
inc
push
xchg
std
xor
es
aas
push
mov
mov
jo
mov
adc
mov
adc
es
iret
dec
mov
repnz
lea
cld
icebp
daa
cmp
jae
inc
ret
sub
addr16
mov
add
adc
dec
imul
ret
mov
push
lds
add
orb
dec
loopne
div
mov
mov
add
test
jno
inc
std
mov
or
sbb
insb
xchg
cmp
fs
xchg
iret
mov
fldl
aam
pop
negb
cwtl
out
xchg
sub
dec
out
pop
xlat
shll
mov
or
test
fcoms
test
loop
cld
xor
and
mov
jecxz,pt
es
out
jp
jecxz
mov
xor
dec
rclb
pop
arpl
jecxz
in
inc
xchg
movsl
out
or
lea
iret
pop
ret
roll
cmp
repnz
test
into
adc
inc
test
jg
ret
push
jne
ja
stos
ret
ret
pop
push
jae
jnp
cli
or
pop
adc
inc
cwtl
xchg
fbstp
daa
dec
xor
sub
icebp
cmpsl
jno
mov
jl
pop
jg
dec
and
inc
jl
mov
adc
nop
loop
imul
jg
mov
mov
or
subb
popf
rorl
jne
cmp
add
ret
popf
jns
call
dec
add
scas
movsb
imul
sbb
clc
cmp
xlat
loopne
mov
inc
repz
dec
inc
mov
aam
shlb
push
iret
xor
insl
push
out
sbb
lcall
xchg
into
hlt
xchg
es
cmp
test
xchg
les
push
add
xchg
gs
jmp
imul
test
mov
sbb
sti
outsb
fnstcw
inc
cwtl
stos
or
les
mov
jp
movsw
cmpsb
scas
mov
mov
push
xchg
jp
int3
popf
pop
imul
sub
sub
cmp
sub
lock
and
in
das
dec
inc
je
jmp
jmp
mov
xor
xchg
rcrl
fmuls
lods
mov
or
or
adc
cld
adc
sub
adc
negl
dec
mov
rolb
inc
xor
jmp
and
repnz
arpl
sahf
lahf
movsl
inc
push
xchg
lds
idiv
xlat
jp
xor
jge
push
mov
cmp
shll
inc
aas
cmpl
ficompl
rcrb
insb
push
add
out
insb
ja
out
push
xchg
mov
and
pop
mov
pop
rcrb
test
mov
mov
shrb
cmp
push
lods
sub
mov
lret
mov
xchg
int3
mov
aam
sbbb
xor
mov
mov
dec
loop
out
jge
repz
fldt
test
rclb
dec
ffree
xchg
insl
and
enter
jns
add
div
inc
and
stc
fnstcw
and
pop
xchg
movsb
aas
sarb
jmp
xor
out
loop
fbld
fs
push
sar
mov
xor
nop
addr16
fisttps
mov
push
es
jne
sub
push
jmp
aam
inc
or
cmp
in
xchg
paddsw
push
pop
ss
mov
mov
mov
mov
sub
mov
jmp
push
lret
push
mov
movsl
pop
daa
stc
mov
insl
mov
fsubrp
fildll
mov
mov
fld
jbe
lret
mov
xchg
add
push
call
sbb
xchg
jae
mov
push
adc
ss
push
int
push
stos
jge
aaa
lahf
push
and
or
push
sbbl
icebp
xchg
mov
sahf
jb
push
xchg
test
lods
add
sbb
pop
mov
lds
mov
inc
cmc
jns
xchg
jmp
dec
adc
cwtl
sbb
test
sbb
test
adc
into
or
xor
push
mov
mov
cmp
mov
or
mov
jmp
mov
cmc
jbe
shl
add
repz
mov
dec
je
adc
push
mov
es
dec
sbb
pop
test
fstpt
jo
or
mov
push
sbb
arpl
sbb
clc
fisttpl
cld
mov
mov
cwtl
movsl
lret
scas
or
push
test
sub
flds
pop
out
out
sbb
vunpckhps
or
testb
mov
daa
repnz
add
pop
jge
or
movsl
shlb
inc
cmp
jb
test
jo
or
or
adc
loope
xchg
ret
lds
in
inc
rorl
mov
or
pop
test
cmpsb
xchg
jno
push
mov
movsb
outsb
jle
sbb
ljmp
jge
or
enter
cmp
jecxz
cmpsb
jns
fwait
aaa
flds
pusha
add
sub
pop
xchg
push
ret
xor
add
sahf
xchg
icebp
adcb
adc
loop
jb
ret
dec
enter
and
push
or
mov
sbb
xchg
sub
jl
mov
pop
adc
and
sub
test
or
popf
add
gs
inc
xor
push
sub
jno
ret
jae
push
inc
adc
test
and
aad
lahf
stos
fcoms
ds
mov
push
and
xor
lahf
xor
ds
cmp
ds
cmpsl
adc
and
sbb
push
pushf
push
or
insl
lret
lods
mov
test
mov
aad
or
nop
and
adc
leave
dec
push
add
cmp
push
cmp
insl
sbbl
dec
outsb
mov
mov
jmp
popa
dec
aaa
xchg
push
mov
iret
fimuls
call
sbb
mov
sti
daa
stos
rolb
pop
mov
out
dec
and
pusha
mov
or
bnd
cltd
xchg
lds
scas
cmp
inc
or
jbe
xchg
fsts
lea
push
cmp
inc
mov
stc
xor
cmp
xorb
and
sub
insl
iret
cltd
enter
or
add
inc
pop
cmp
loop
not
cmpsl
and
or
xor
mov
movsl
test
pop
cmp
movsb
cmp
mov
dec
mov
or
cli
pop
test
cltd
mov
add
cmpsl
adc
xor
and
xor
loopne
add
lock
ficomps
push
adc
shll
iret
aam
loope
daa
mov
sbb
jmp
xchg
sarl
cmp
xchg
mov
mov
aas
cld
pushf
movsl
xchg
sub
rolb
notl
gs
jae
cmp
loope
mov
mul
fidivrl
mov
sti
dec
cmp
mov
in
inc
mov
loope
lods
test
adcb
or
sbb
inc
cmp
jge
sbb
or
adc
sbb
mov
stos
jle
dec
xchg
loope
fs
xlat
jae
xchg
dec
sbbb
jb
movsl
push
push
jae
xchg
jns
mov
outsb
imul
dec
adc
inc
mov
adc
scas
adc
mov
test
jno
or
out
push
scas
lds
mov
jle
pushf
xor
mov
mov
shrb
ja
mov
mov
popa
aam
int
jae
or
icebp
push
adc
repz
mov
test
dec
ficoml
mov
cpuid
push
data16
or
or
cld
adc
or
addr16
sub
or
loopne
adc
pusha
je
jne
cmp
bound
cwtl
movsb
fidivl
outsb
adc
iret
inc
loop
sbb
gs
xor
xlat
leave
inc
repz
movsb
fcomps
inc
xchg
imul
pop
in
and
mov
push
cmpsb
addr16
andb
xchg
lahf
pushf
fistpl
fistl
xchg
jnp
pop
xchg
adc
enter
movsb
pop
jae
int
xor
fs
push
push
ret
fnstsw
outsl
inc
pusha
or
add
dec
inc
jo
pop
imul
leave
inc
push
fptan
push
sarb
ja
ja
stos
pushf
test
loopne
negl
mov
rolb
push
mov
and
xor
xor
mov
sbb
jmp
roll
sbb
cwtl
dec
jg
pop
ja
inc
cmpsb
movsl
lea
out
pop
push
pop
inc
adc
push
xor
jmp
sbb
adc
push
or
push
lods
cld
and
xor
push
xor
stc
out
dec
stos
inc
jle
cmp
xchg
subl
aaa
test
jb
cmp
sbb
sub
aad
pop
jo
sub
fiadds
dec
sbb
xchg
xchg
in
lahf
xor
lods
test
dec
stc
cmp
les
sbb
push
ss
ffreep
mov
or
fists
lock
xor
sbb
std
inc
clc
lret
sahf
es
inc
incb
in
cmp
lret
add
sar
push
push
cmpsb
enter
mov
ja
shrl
jle
or
sbb
aam
push
loop
mov
testl
adc
outsb
shl
fsubr
sub
sub
rorb
mov
jl
scas
cmp
push
cld
mov
pop
sti
lret
pop
dec
scas
popa
arpl
xchg
inc
stc
xchg
shrb
sub
lods
jmp
add
lea
cmp
insl
bound
mov
jl
lret
cmp
pop
mov
push
iret
bound
jae
pushf
adc
sub
out
push
jle
popa
mov
je
add
movsl
scas
cwtl
xchg
xchg
ja
cmp
sub
adc
pop
cmpb
sbb
pop
sbb
adc
outsb
and
ret
push
out
imul
cmp
lcall
fnsave
rorb
ljmp
insb
jl
out
sub
xchg
js
or
stc
sub
daa
and
test
adc
dec
jmp
mov
xor
sub
push
pusha
loopne
jg
aam
sub
or
ffree
mov
inc
inc
test
sbb
lods
lcall
inc
test
inc
pop
dec
jl
xchg
xlat
aad
cli
xor
lea
mov
in
xor
jl
inc
bound
cmp
scas
sbb
dec
jmp
sub
xor
pop
inc
mov
out
ret
ret
shrb
xchg
adc
adc
fimull
mov
ljmp
out
addb
pop
xor
ficoml
add
mov
rcr
adc
lahf
cld
lods
xchg
ss
sbb
inc
pop
popf
lea
sbb
adc
pop
mov
and
mov
lds
push
mov
xor
sbb
je
ret
mov
jle
push
inc
fdivrl
fmull
add
ret
hlt
jle
filds
shrl
pop
add
pop
mov
mov
inc
push
fdivp
or
cmp
testb
mov
xchg
lds
js
push
add
les
dec
push
mov
cmp
pop
dec
pop
cmp
icebp
push
rolb
ljmp
bound
pop
cmp
imul
add
jmp
out
pop
push
and
and
aam
icebp
jl
lret
mov
pop
jb
clc
aam
test
adc
lcall
dec
sub
mov
adc
sub
outsl
dec
ja
pop
jo
push
push
jecxz
inc
ja
and
leave
mov
mov
jns
push
sbbb
cmc
and
je
xor
fmuls
cmc
mov
mov
imul
sar
mov
test
test
mov
and
dec
testb
cmp
xchg
push
out
mov
push
xor
pushf
call
add
push
jbe
adc
subb
stos
mov
pop
andl
int
divb
add
jne
add
andb
lea
add
test
repz
int3
jmp
test
inc
movsl
test
repz
and
test
test
out
cltd
adc
leave
push
push
pop
or
cmp
clc
cs
mov
or
push
rorb
adc
pop
addr16
lds
call
pop
or
cmp
cmp
sub
jns
clc
rclb
scas
sub
mov
inc
sbb
into
and
or
ja
cwtl
inc
mov
jg
sbb
popf
fcmovnu
add
fcoms
dec
add
inc
cmpsl
push
dec
push
imul
lret
jns
movsb
jl
enter
xlat
mov
fisubs
sbb
cmp
cmp
fstps
cmc
pop
imul
mov
xchg
xchg
and
stc
scas
xchg
jnp
aas
pop
sahf
cmp
mov
inc
push
sbb
icebp
in
adc
or
add
xor
pushf
loop
mov
push
lods
pop
dec
sbb
sub
and
sub
outsb
pop
mov
mov
aam
dec
aam
xchg
cmpb
or
and
add
pop
xchg
push
into
pop
inc
in
pushf
sub
xor
adc
sbb
cmpsb
mov
in
sbb
iret
outsl
shll
mov
pop
mov
popa
fidivs
hlt
push
fmull
out
push
jmp
xchg
mov
je
shrl
fisttps
mov
aad
icebp
inc
add
jne
enter
jb
xor
inc
shr
mov
sub
imul
lods
in
ds
insb
pand
adc
mov
dec
cwtl
pop
inc
in
pop
lds
jge
test
push
and
add
pop
cld
cmp
lea
es
push
mov
pop
stos
cmp
fcomps
sbb
cli
pop
and
push
pop
push
add
ds
popa
jge
stos
ror
mov
push
test
movsl
dec
mov
into
cmp
lods
test
push
test
ja
out
pop
clts
mov
xor
jge
dec
push
jno
xchg
and
and
jo
pushf
ret
adc
sub
fwait
inc
lcall
sbb
lahf
push
fs
leave
xor
je
mov
cmp
movb
mov
int3
clc
icebp
jne
gs
in
xchg
cmp
sub
and
insb
ficoml
mov
dec
inc
into
xchg
shll
or
jbe
repnz
aam
dec
jp
sbb
jo
mov
pop
in
cwtl
pushf
mov
xor
lahf
inc
int
mov
xchg
fs
loopne
mov
lret
inc
mull
push
leave
jl
shlb
stos
mov
loope
mov
jecxz
in
mov
xchg
in
jle
mov
enter
fisubrl
call
lock
out
cli
push
daa
test
cltd
int3
int3
mov
mov
sbb
mov
scas
jmp
or
add
pushf
adc
jno
loope
mov
adc
xchg
orb
movsl
fcmovnb
jne
loopne
xchg
stc
sbb
add
pop
push
mov
mov
lods
outsl
ljmp
rcll
xchg
in
add
add
xor
add
or
inc
and
jae
popf
vphsubwd
iret
daa
cmp
pop
hlt
out
sbb
inc
loope
outsl
sbbb
cmc
jle
cmpsb
aas
or
mov
mov
sub
daa
pop
stos
popf
rcr
lahf
fcmovnu
push
mov
jo
lods
mov
ret
addl
fistpl
cmc
aas
push
insl
pop
movsb
call
ja
add
fdivs
aad
in
jae
sub
subl
push
imul
cs
jmp
inc
jp
add
cmp
popa
outsl
sub
adc
cmp
incl
or
xchg
or
adc
sub
addb
enter
lret
and
cmp
lcall
mov
lcall
and
sub
cmc
dec
fsubs
lds
jge
and
and
in
or
xchg
aad
pop
fwait
daa
push
out
xchg
cltd
ret
movsl
sbb
fisttps
add
insb
icebp
mov
int3
push
sbb
mov
xchg
jge
add
mov
pop
fisttpll
icebp
jb
cmp
test
out
mov
cmpsb
roll
iret
adc
clc
add
jg
mov
xchg
and
jp
add
fstpt
mov
inc
mov
cmp
sub
loopne
pop
pop
jge
pop
bswap
xchg
fldenv
and
aam
jbe
out
pop
jno
int3
loop
cmp
mov
jns
out
lds
sub
aaa
mov
xchg
cmp
sahf
rcll
push
adc
and
add
inc
cmp
loopne
popa
adc
dec
sbb
push
js
lods
cmpsb
mov
sbb
mov
ss
jecxz
push
jnp
sub
jo
and
cmp
jg
ja
in
daa
insb
cwtl
pop
stc
xor
push
xchg
jecxz
in
jecxz
dec
mov
jnp
mov
xchg
cmp
scas
xor
dec
jb
dec
gs
jl
mov
cmpsb
movsl
cmc
les
gs
dec
dec
inc
in
jle
sbb
mov
sysexit
jo
xchg
lds
xchg
in
and
cmp
mov
cmp
cmc
jo
loop
cmpsl
les
cmp
bnd
movsl
loope
or
xor
loope
cmp
loope
outsl
xchg
lret
fs
xor
icebp
sbb
jle
and
out
je
push
fs
mov
jg
xor
mov
roll
ret
pop
out
aaa
movsl
sub
mov
ja
mov
aam
or
dec
rolb
out
xchg
and
sub
out
das
push
jne
mov
rorl
iret
xchg
sbb
lsl
lret
loope
mov
xor
mov
sbb
push
cltd
jb
mov
ljmp
pop
inc
xchg
mov
pop
jne
sbb
xchg
add
add
stos
daa
fcompl
insl
scas
or
jbe
bound
add
outsb
int
push
sti
xlat
icebp
test
jg
sbb
stos
cld
mov
jg
jmp
mov
scas
jmp
bound
insl
mov
mov
adc
aam
rcrl
mov
sahf
xchg
mov
pop
subl
gs
push
movsl
daa
jle
sbb
outsb
ja
mov
adc
fcoml
sbb
push
dec
cmpsb
mov
shlb
lods
outsl
loope
jl
xor
xor
mov
mov
andl
pop
push
mov
gs
or
pushf
inc
loopne
sbb
dec
out
es
cmp
xor
pop
pop
sbb
jbe
popa
xchg
jo
jmp
push
push
mov
lods
ds
jbe
nop
cmp
jl
adc
adc
jne
repnz
das
add
dec
dec
lods
pop
scas
fimuls
mov
and
push
lock
ret
dec
subb
inc
or
sti
outsl
and
sti
xchg
rsqrtps
cmpsl
je
jns
lcall
fwait
mov
add
adc
movsb
movsl
adc
aad
mov
xlat
data16
into
mov
gs
mov
cmp
add
aam
jmp
gs
xchg
mov
outsb
inc
pop
fmulp
aam
or
dec
add
pop
or
rolb
add
stc
add
insb
bound
and
add
mov
lock
mov
mov
cmp
movsl
lret
xchg
dec
or
out
fisttps
pop
mov
bound
jnp
pop
into
scas
xor
test
jp
leavew
adc
shl
lret
pop
shlb
mov
adc
out
fs
and
stos
stos
jl
and
lds
push
fsubr
cmp
inc
js
test
in
aas
adc
ret
adc
into
outsb
ret
mov
ljmp
daa
les
mov
insb
pop
add
xchg
pop
adc
rol
inc
iret
pop
adc
sbb
or
in
mov
sbb
jmp
ret
rcll
lea
mov
les
ret
jle
scas
and
ret
out
mov
cmp
ror
xchg
jns
lds
or
and
fsubl
xchg
dec
sbb
jp
and
mov
dec
mov
std
push
popf
push
mov
and
out
les
outsl
in
jp
xchg
push
rcr
std
mov
xor
ret
or
sub
into
insl
xchg
adc
cmp
dec
loope
dec
mov
dec
jo
pop
cli
adc
int3
jecxz
or
mov
sub
cmp
cli
call
xlat
mov
pusha
scas
mov
fldpi
mov
les
jp
or
add
je
mov
or
cmpsb
mov
test
and
pop
fldt
scas
push
testl
xchg
adc
out
imul
xor
dec
pop
repz
xor
adc
dec
popf
js
mov
xchg
sub
aad
push
xor
sbb
mov
xor
cmc
push
int3
mov
push
lret
mov
ret
imul
xchg
mov
shrb
jle
adc
push
sub
imulb
lahf
pop
xor
mov
jp
push
pop
in
mov
adcl
or
jae
sbbb
cltd
sbbb
push
repnz
scas
xchg
fwait
loope
sbb
sub
cli
fistpll
push
add
mov
dec
sarb
ljmp
mov
xlat
rcrb
rcll
push
out
sbbb
adc
lds
or
lret
add
adc
jle
cmp
xchg
lcall
test
cmp
ljmp
sub
mov
das
dec
loope
mov
popa
and
mov
fsubrl
xchg
mov
mov
add
or
fbstp
fsubp
imul
inc
mov
inc
adc
fbld
and
xchg
fxch
mov
out
add
scas
cmp
jae
scas
inc
push
int3
call
ret
leave
iret
sahf
xlat
rol
lahf
fdivrp
mov
push
out
pop
mov
push
das
out
xchg
negb
xchg
aaa
jo
jno
pushf
pop
xor
mov
and
mov
mov
iret
mov
or
fisubl
jp
add
jnp
cmpl
aas
push
int3
sti
sub
adc
scas
js
xor
mov
push
xor
sbb
aaa
sub
leave
add
ljmp
out
mov
xchg
es
pop
mov
push
ss
mov
adc
jmp
pop
fcompp
ja
jnp
loopne
inc
and
fld
mov
aam
pop
sub
xchg
pop
push
or
push
fsub
push
aam
sbb
sub
sub
out
dec
xchg
ret
add
test
and
xlat
jne
out
adcb
repnz
repnz
int
cs
fdivl
dec
and
mov
inc
inc
out
inc
mov
jecxz
mov
xor
mov
jp
mov
inc
push
mov
fsubrs
shlb
jb
ljmp
daa
lock
lea
inc
push
fmuls
js
rcll
pop
pop
out
sti
and
test
push
addr16
cmpsl
push
cld
cmpsl
mov
add
xchg
mov
pusha
jns
fsts
std
jmp
push
dec
push
out
fistpll
int
and
lock
or
scas
xchg
out
inc
or
ja
enter
and
add
ret
jae
mov
push
lock
xchg
leave
cmc
cmp
or
dec
ja
call
mov
add
push
jae
ljmp
les
jl
fwait
adc
addr16
xor
test
not
mov
fildl
test
lret
jb
push
cmc
mull
jle
cmp
fistpll
daa
outsb
sbb
pusha
les
and
push
rclb
repnz
jmp
das
xchg
and
out
sbb
lret
adc
jge
and
pop
icebp
es
mov
test
loop
lds
cmc
push
fcoml
and
pop
daa
cmp
popf
cmp
xor
sub
sub
xchg
cmc
int3
fwait
int
into
sbb
mov
ficoml
das
sbb
inc
mov
outsb
add
ljmp
sub
pop
adc
or
inc
adc
lods
shlb
or
cmp
and
lcall
leave
jo
test
cltd
outsb
out
adc
xor
cld
stos
lods
xor
cwtl
xchg
ss
pusha
cld
inc
mov
pop
sub
sbb
addr16
stos
mov
pushw
push
rorl
aad
or
fs
cmp
hlt
filds
sub
inc
fistps
sub
outsl
xchg
iret
push
fisubs
push
push
xchg
lods
mov
jmp
mov
int3
ret
inc
inc
pop
dec
sbb
movsl
and
add
popl
add
jns
push
pop
in
loopne
mov
gs
fwait
xchg
out
inc
leave
test
fcomi
les
hlt
test
jne
arpl
psubusb
mov
xlat
out
es
pop
inc
pop
sub
test
cwtl
sub
mov
lods
dec
scas
dec
stos
hlt
cltd
sbb
outsl
scas
and
arpl
lods
out
add
and
mov
popa
dec
fdivs
in
push
notb
add
stc
sbb
mov
jecxz
mov
and
jmp
adc
inc
jecxz
pop
daa
call
imul
sbb
popf
adc
imul
sub
testl
stc
mov
addr16
clc
xchg
xchg
and
add
les
adc
sahf
je
fldt
sarl
sub
dec
sub
sbb
mov
push
jmp
hlt
jne
out
sub
js
test
ret
fcmovne
sub
divb
js
dec
lods
out
cmpsl
in
loop
mov
shrl
daa
inc
lahf
sub
lods
clc
fnstenv
cmp
xchg
repnz
lahf
repz
inc
gs
push
scas
dec
outsb
jno
cmp
xchg
add
popfw
ret
adc
pop
push
leave
xchg
es
add
push
xlat
into
fwait
in
mov
repz
out
hlt
cld
test
inc
dec
fs
xlat
mov
mov
mov
das
cmp
movsb
inc
std
adc
xchg
dec
jmpw
xchg
sub
jp
pushf
iret
pop
testl
pop
imul
mov
dec
jns
dec
xor
mov
addr16
jbe
popa
aas
xor
gs
or
rorb
fisttps
xor
ret
cmp
adc
mov
and
sub
mov
mov
imul
aad
notl
test
imul
lods
test
xchg
sub
xchg
and
shrl
jl
mov
shll
lea
addr16
in
rorl
inc
aam
outsb
jg
push
mov
push
jge
jno
in
mov
sbbb
or
pop
pop
dec
push
lods
test
cmp
fsubr
pop
test
std
jecxz
push
in
xchg
or
add
arpl
sahf
dec
sarl
xor
int3
add
inc
test
dec
cli
pop
pop
mov
lods
jae
mov
jbe
sbb
lretw
push
inc
sbb
and
fldcw
dec
sub
mov
int
mov
iret
cwtl
sahf
push
cli
dec
push
mov
xchg
stos
insl
iret
sbb
and
mov
mov
and
xor
push
daa
or
je
mov
mov
outsb
or
xor
pop
les
xor
into
popf
sub
cmp
jle
cltd
and
mov
xchg
adc
jle
push
jle,pt
mov
sbb
clc
xor
jnp,pt
dec
orb
push
push
les
ret
dec
pop
and
ja
mov
sarl
pushf
aad
cld
xor
cmp
movsl
sub
cwtl
lods
pushf
push
sahf
or
mov
aam
cs
xchg
push
jbe
call
mov
pop
out
cmp
and
out
out
mov
pop
mov
dec
shrl
xchg
out
mov
aad
icebp
jne
pop
out
cli
push
push
int
in
out
aas
jne
data16
out
jle
jmp
mov
aam
dec
testb
sahf
lods
testl
aaa
mov
jge
jecxz
in
xchg
shll
inc
lods
call
shll
mov
mov
ret
imul
fsubl
xchg
aam
dec
pop
cmp
rorb
jmp
xchg
daa
sub
push
xchg
mov
jae
and
add
adc
or
lds
jae
fs
cld
and
mov
pop
ljmp
xor
inc
ss
inc
or
addr16
in
imul
add
push
xchg
icebp
dec
ret
or
and
xchg
sbb
jg
popa
mov
ss
jae
add
fnstsw
ficoml
cs
mov
leave
mov
inc
inc
jae
lahf
mov
xchg
jb
in
and
adc
adc
sub
xchg
popa
rcrl
inc
cmp
cs
cmp
fsubrs
decl
fwait
call
pusha
add
cs
xchg
hlt
mov
mov
imul
decl
popa
or
sbb
into
andb
lcall
push
add
cmp
pop
sahf
push
dec
xor
stos
filds
cltd
xchg
mov
bound
ret
xchg
mov
mov
mov
dec
cmpsl
jns
fcmovnbe
jno
aas
in
inc
icebp
xchg
mov
in
jns
int3
fisubrs
cmp
fidivl
cmpsl
mov
lods
xchg
mov
int
or
mov
inc
jne
rcll
mov
movsl
inc
inc
in
adc
inc
shrb
int
sub
and
mov
out
mov
xchg
xor
das
aad
iret
fdivrl
movsl
add
sbb
stc
cmp
mov
push
jnp
outsb
andb
mov
push
pusha
fisubrs
push
addl
jl
cmp
xor
popa
mov
pop
push
push
imul
jge
sahf
mov
and
sub
imul
imul
xlat
ret
xor
and
cmp
adcb
cmpsl
or
call
shl
ret
pop
jge
divb
xchg
cmpsl
arpl
scas
data16
sarl
fisttpll
fiadds
jle
test
dec
jmp
adc
std
sub
xor
std
cmp
mov
in
inc
insb
jb
fs
mov
lcall
test
pop
jp,pt
jae
jg
test
push
mov
mov
pop
inc
or
xchg
maxps
mov
mov
daa
aaa
loop
ljmp
stos
mov
fstps
jg
or
lock
xorb
dec
movsb
jg
dec
call
out
mov
jl
mov
mov
lahf
in
add
push
push
add
adc
cmpsl
loop
cmp
mov
out
shlb
adc
and
push
jge
dec
sub
cmp
jo
push
inc
je
negl
push
mov
adcl
sub
add
scas
push
mov
lahf
psllq
pusha
aam
cli
aas
sub
stos
dec
pop
xchg
dec
fildl
icebp
cld
fimuls
das
add
ret
outsl
iret
inc
pop
jb
outsl
jne
outsl
mov
bound
mov
add
insb
push
sbb
sbb
pop
lods
aad
adc
pop
add
insl
das
int
cmp
test
popf
shr
test
mov
loop
test
and
jae
rclb
call
xchg
pop
xor
push
mov
mov
ret
mov
dec
aaa
leave
mov
sti
jnp
test
or
test
mov
xchg
jae
bound
and
mov
fucomi
data16
inc
mov
clc
flds
add
nop
mulb
xchg
push
jge
fisubs
and
inc
mov
mov
add
xchg
adc
cmp
enter
pop
int3
pop
leave
or
pop
add
adcl
rcll
xchg
or
fwait
mov
out
and
sbbl
int3
stos
mov
mov
or
outsb
and
inc
sbb
pop
outsb
mov
pop
loopne
jmp
cmp
mov
xchg
dec
inc
push
in
testb
mov
outsb
push
xchg
push
sub
push
inc
inc
jb
mov
call
cmp
lret
inc
push
mov
mov
push
mov
aam
jle
xchg
pop
testl
std
push
ja
jle
inc
xchg
lock
xchg
out
inc
mov
jle
ja
jae
shlb
out
vpsrld
inc
in
ljmp
xor
push
addr16
scas
xchg
testb
insl
ljmp
emms
int3
jnp
arpl
ss
adc
cmpsb
pop
cli
mov
push
sahf
add
lcall
dec
shrb
in
mov
ror
insl
jecxz
fucomp
das
jne
jo
cwtl
add
xor
sub
mov
das
xchg
cwtl
aam
nop
int
pusha
cmc
xchg
scas
add
in
daa
adc
je
sbb
xchg
mov
in
cltd
enter
push
jno
dec
xchg
mov
fmul
lds
out
out
mov
mov
js
jl
push
test
inc
sub
dec
xlat
popa
in
and
stos
test
jle
push
mov
xchg
test
in
outsl
push
and
in
lea
cmp
jg
lods
push
add
fcoml
int3
or
les
cld
pop
pop
imul
mov
pop
lea
push
add
or
lods
and
faddl
adc
mov
loope
pop
sti
sbb
adc
adc
mov
stos
mov
jb
jl
push
jl
mov
and
pop
push
jmp
push
mov
clc
lcall
pop
loopne
aaa
push
mov
dec
or
dec
rol
sbbl
sub
negl
inc
adc
cmpsl
test
xchg
outsb
pop
inc
stos
push
mov
inc
out
cwtl
jge
pop
stc
mov
jle
into
arpl
test
push
inc
sbb
in
and
cmp
out
xchg
sub
push
sub
mov
stos
push
repz
xchg
das
imul
cmpb
movsl
push
or
dec
das
add
out
pop
mov
add
xchg
dec
out
xor
inc
out
or
outsb
cltd
js
fistl
lock
jg
lea
inc
fidivs
fsubr
dec
ljmp
jne
test
inc
jmp
fisubrl
cltd
dec
test
das
sub
stos
scas
leave
dec
xor
add
push
push
adc
jg
and
cmp
adcl
cli
aam
lods
sub
adc
push
loop
call
iret
sub
jp
sbb
jo
mov
filds
test
je
add
xor
xorl
cmpb
pop
dec
jle
add
mov
mull
stos
sub
xchg
sub
popf
and
js
leave
repz
add
ja
pop
stos
cli
int3
ds
sbb
adc
dec
mov
in
dec
pop
vpsadbw
and
fnsave
cmp
jmp
dec
fcoms
imul
adc
shr
mov
adc
xchg
repz
stos
mov
sub
jno
mov
fs
enter
shr
xor
mov
mov
shll
xor
testl
push
xchg
gs
js
nop
in
jl
std
push
adcl
inc
outsb
loop
dec
roll
mov
sub
cmp
mov
add
js
inc
mov
mov
sbb
pop
push
dec
shlb
adc
and
jnp
add
loopne
pop
jl
adc
mov
fwait
repnz
fists
mov
scas
scas
hlt
jns
xchg
add
fiadds
jl
mov
ljmp
nop
loopne
rolb
int
pop
jp
pop
dec
dec
aam
sub
test
sub
or
add
xlat
mov
int
jmp
outsb
out
mov
push
xor
arpl
hlt
jns
test
gs
bound
fwait
lods
push
pop
jb
insl
inc
ss
add
call
hlt
daa
iret
dec
in
pusha
jae
lock
xchg
dec
pop
int3
movsb
sbb
push
sbb
xchg
int3
outsb
sti
jbe
fisttpl
aaa
push
jl
daa
adc
mov
rclb
mov
add
imul
add
pusha
test
icebp
push
inc
cmpsl
add
xlat
stos
mov
cwtl
in
jle
jecxz
and
icebp
sub
jae
or
test
jne
fstpl
inc
cwtl
sub
enter
xor
pop
repz
lods
pop
add
add
mov
add
cmp
movups
sub
out
out
sahf
mov
aaa
push
push
add
inc
mov
xlat
popa
pop
les
or
cmp
sub
mov
jns
fbld
cmp
std
unpcklps
dec
int
sar
fsubr
outsb
ret
sub
pinsrw
dec
orb
mov
or
aad
popf
push
pop
enter
andb
mov
mov
fidivl
out
adc
clc
xchg
cwtl
jg
lock
mov
xlat
cli
icebp
sahf
scas
lahf
test
mov
test
push
dec
fsts
ret
fldenv
jbe
xlat
jecxz
mov
xor
sbb
ror
fnstcw
xor
das
lahf
xchg
xchg
jae
insl
mov
xchg
inc
cmp
push
mov
push
or
loope
fdivrp
sub
sbbb
mov
imull
arpl
dec
or
sub
pushf
jmp
ret
fwait
xor
icebp
dec
jbe
fdivrs
pop
jp
aam
sub
inc
cs
cmp
xchg
iret
inc
jl
push
loope
in
mov
loop
cmp
cs
or
mov
bound
xchg
lock
and
sahf
adc
loop
and
test
js
pop
fcmovne
mov
sti
sub
jno
lcall
pop
call
sbb
imul
cmp
push
enter
decb
fnsave
nop
pop
jne
push
xchg
inc
cmp
pop
sub
inc
idivl
sbb
inc
push
mov
test
jbe
ret
xlat
sbb
jo
sbbl
sbb
dec
movsl
mov
add
inc
pusha
and
dec
cmpl
test
or
jo
insb
roll
nop
mov
push
das
push
pop
loope
cmpsb
loop
pop
outsl
inc
outsb
cmc
pop
shr
sub
xchg
out
ret
sub
imul
addr16
jp
push
xchg
inc
test
pop
xchg
jnp
pop
sub
add
fstps
outsl
mov
js
pop
jle
lods
cmpsb
adcb
jns
cmp
idivl
xchg
pushf
imul
jp
mov
push
int
mov
xor
add
lret
sub
mov
dec
enter
mov
mov
fbstp
jp
repz
in
xchg
dec
imul
das
dec
push
stos
into
ds
mov
xchg
xor
lret
test
imul
jp
lcall
and
mov
xorb
into
xchg
or
jmp
or
xor
jl
jl
das
push
sahf
jge
cmpsl
jne
jae
je
dec
nop
mov
cmp
and
addb
imul
insb
inc
out
lcall
mov
dec
cmpsl
pop
xchg
mov
orl
paddq
shlb
dec
jl
xchg
mov
clc
sbb
lret
rclb
lds
mov
xchg
loope
inc
and
gs
das
ret
inc
stc
inc
fdivs
lret
and
xchg
mov
cmp
stos
das
nop
and
dec
inc
push
stos
dec
xor
sbb
push
outsb
or
popf
inc
xchg
lcall
cmc
arpl
ja
test
add
popf
mul
inc
enter
ret
mov
mov
adc
sarl
jp
xchg
ffreep
sub
jbe
inc
jmp
imul
add
or
jae
arpl
xor
repnz
cmc
mov
mov
add
xchg
icebp
popl
xor
xchg
es
sub
fbstp
repnz
sbb
movsb
fst
jecxz
pusha
jg
je
loop
sti
xchg
jecxz
jecxz
ljmp
inc
push
mov
sbb
fisubs
sbb
pop
sub
xor
or
or
cmp
lahf
xchg
xlat
div
inc
xor
cmp
pop
ds
sbb
sub
nop
rcrl
sahf
ret
lcall
sbb
and
icebp
mov
push
xchg
add
mov
xchg
add
push
mov
fcmovne
sahf
pop
xor
push
xor
cmp
jmp
adc
xor
jae
jb
idivl
mov
mov
ljmp
mov
or
inc
xor
xchg
and
stc
stos
mov
rolb
int3
loop
or
xor
iret
in
sbb
xor
sti
pop
rcll
inc
ja
insb
addr16
dec
imul
push
xlat
sub
jle
push
mov
mov
repz
xlat
paddb
push
enter
inc
xchg
lahf
leave
mov
push
push
jne
lret
add
or
sub
in
sti
xor
jecxz
xor
fld
and
push
inc
cli
pop
adc
push
shll
int
shlb
cmp
dec
jmp
sti
sub
add
cmp
popa
sti
cmc
fdiv
mov
fcmovnu
shrl
sbb
push
sub
pop
stos
stos
adc
insl
adc
or
or
jo
push
icebp
or
pushf
push
jnp
sub
adc
cmpsb
sar
dec
dec
xor
inc
add
ja
pusha
cmp
shrl
push
and
pop
scas
pop
scas
hlt
hlt
pop
fstpl
add
aam
push
ss
sbbl
mov
mov
inc
xchg
xchg
jmp
sbb
inc
inc
scas
cltd
clc
cmp
mov
push
rcrb
ja
pop
stos
jne
adc
lods
cmp
outsl
lods
fldl
in
xchg
aas
lods
pop
arpl
jl
adc
dec
addl
pop
add
mov
lea
lds
outsl
loope
mov
jmp
sub
sbb
lock
or
xor
movsl
cmp
push
mov
cmp
lret
fwait
daa
mov
fcmove
cwtl
out
dec
or
adc
adc
lods
test
xchg
fldenv
mov
imul
mov
inc
repz
bound
pop
iret
cld
aas
pop
and
and
lock
into
and
in
loopne
fisubl
call
fdivl
adc
je
arpl
outsb
inc
adc
in
sbb
aam
and
mul
int
sbb
outsl
mov
mov
jnp
and
or
pushf
jecxz,pn
xchg
cmp
imul
aam
in
int3
mov
pop
push
jp
addr16
int3
adc
mov
pusha
lds
pop
and
bound
pop
fldenv
lret
mov
cmpsl
lods
outsl
pop
lahf
mov
ret
fistpl
clc
xor
lods
mov
cmpsb
jl
sahf
cmp
test
cmp
test
and
ret
cmp
pop
jle
sub
stos
rcll
cltd
pop
test
flds
xor
or
cmp
mov
sbb
sub
pop
xchg
popa
pop
jl
js
mov
mov
sbb
adc
outsl
inc
stos
sub
in
ret
cmp
push
xchg
addb
ret
popa
cmp
fimuls
sub
pop
inc
outsl
fcmove
inc
mov
adc
dec
imul
ja
cmp
lds
jno
adc
lock
insl
test
insb
jmp
xchg
sbb
outsl
mov
sarl
test
loope
pop
cltd
pop
inc
mov
imul
dec
movsl
push
or
pop
dec
mov
bound
dec
je
jp
mov
mov
ss
movsb
mov
mov
leave
or
inc
inc
add
fcmovbe
mov
push
popf
repnz
dec
ret
cmp
or
sub
mov
loopne
pusha
sti
insl
aam
push
addb
push
scas
jns
jg
pop
xor
int
dec
add
icebp
icebp
pop
icebp
test
movsb
mov
leave
and
pop
sbb
and
cli
adc
or
cmp
jns
jno
jo
cmp
mov
xchg
add
push
ds
push
testl
mov
or
jecxz
iret
cmp
cltd
call
sub
bound
in
cmp
mov
sbb
sti
lock
jp
xchg
push
outsl
lea
jmp
pushf
push
in
popa
les
out
xchg
vmovdqu
xchg
push
and
lods
loopne
nop
sub
pop
sub
lods
xchg
jp
cmpsb
sub
subb
adc
and
pop
cmp
in
call
push
cli
lds
in
mov
mov
xor
add
jle
xor
and
adc
cmp
mul
jmp
pop
push
cltd
jbe
shl
lds
pop
sbb
es
and
lret
xchg
mov
lds
add
push
pop
test
xchg
xor
fstpl
inc
xor
add
daa
mov
pop
or
mov
stc
je
jmp
sbb
mov
das
mov
and
enter
or
out
icebp
dec
sbb
and
in
sub
repnz
popa
xor
cmpsb
and
popa
loope
xchg
xor
add
jp
ljmp
or
jl
outsb
movsb
sub
outsb
scas
enter
ljmp
fldcw
add
push
ret
cmpsl
cmp
test
lds
mov
adc
repnz
xor
xorl
mov
xchg
sar
cmp
aas
cs
mov
xchg
rcll
jo
mov
movsl
cmp
add
push
adc
ret
mov
mov
stos
jecxz
or
das
jo
outsb
enter
mov
hlt
cltd
xchg
adc
and
and
cmp
add
cmpsl
dec
inc
lds
fcoml
sbb
cld
push
push
dec
adc
push
xchg
stos
push
jno
inc
xchg
popf
mov
xchg
hlt
cld
cmp
push
leave
dec
lods
lods
stos
stc
rolb
loopne
stos
dec
pop
xchg
out
fs
pop
add
stc
add
cmp
sbb
mov
insb
repnz
and
cmp
rcrl
adc
sbb
sbb
test
cmpsb
repz
and
jo
sbb
out
stos
into
fcoms
and
imul
cmp
mov
lea
repz
stc
pop
cmp
cmp
inc
xor
cwtl
cld
int
mov
push
and
push
iret
push
movsl
rorl
pop
and
mov
in
adcb
pop
movsb
mov
ss
and
xchg
or
clc
jnp
rcr
inc
lret
arpl
bound
aad
mov
xor
shl
outsl
inc
lret
ret
repz
pushf
mov
push
fildl
das
push
gs
es
pop
incb
pop
pop
cmp
imul
into
cmc
pop
sar
into
and
and
mov
decb
jg
lods
sub
push
mov
mov
shrl
subb
aam
sbb
xor
loop
insb
les
addr16
cltd
inc
push
cld
in
adc
mov
or
in
push
test
idivb
sub
mov
adc
les
leave
mov
push
out
jae
call
mov
dec
faddl
dec
add
mov
ja
scas
cmp
mov
aas
out
inc
jg
pop
pop
sub
insl
loopne
mov
push
mov
inc
and
or
dec
xchg
inc
mov
and
lea
addb
mov
je
xchg
test
mov
xchg
mov
pop
in
cmp
add
pop
and
push
xchg
repz
jnp
fmull
xor
push
jle
out
adc
pop
cmp
nop
ljmp
cltd
in
in
mov
pop
and
popa
jmp
imul
into
pop
sbb
fisttpl
idivb
jg
sahf
iret
jb
add
cmp
jb
jne
push
iret
adc
cmp
dec
xor
dec
push
movsl
shrb
int
and
inc
jle
sub
jns
and
cmpsb
js
into
sahf
orb
les
shl
mov
call
adc
test
xchg
mov
shrl
dec
mov
mov
enter
loop
adc
inc
lods
fsts
pop
outsb
cmp
or
shl
lcall
xor
sub
icebp
push
aas
pop
and
sbb
popf
lret
fcmovnb
jp
test
push
adc
mov
cmp
adc
sub
imulb
pop
push
cs
call
stos
popf
xchg
sbb
mov
mov
mov
or
or
xor
adc
sbb
lahf
test
out
mov
ds
sub
ret
scas
jle
daa
cwtl
mov
ds
push
inc
push
jo
in
movsb
scas
mov
in
add
fdivl
push
push
test
mov
mov
rorl
adc
pushf
in
jo
je
mov
ja
cltd
cmp
push
lock
sbb
jb
sub
mov
push
addb
cmpsb
adc
ror
ds
pop
jl
jo
fildl
xchg
lea
dec
imul
push
insb
and
out
mov
out
push
inc
mov
push
in
push
and
pop
test
fwait
or
enter
or
stos
pop
pop
sbb
push
adc
dec
hlt
cmp
out
jnp
lret
cmc
loope
int3
push
mov
das
test
sbbl
and
scas
testb
and
or
add
ror
jp
rcr
sub
jbe
enter
fistpll
mov
dec
pop
add
or
jecxz
fdivr
in
mov
push
mov
faddl
aaa
les
jns
sub
xchg
fsubr
push
mov
add
stc
and
cld
lahf
push
jns
mov
daa
adc
xchg
or
repz
lahf
ja
pop
xchg
ss
leave
add
out
adc
inc
push
push
jge
sub
sbb
addr16
mov
and
lea
cld
sub
inc
cmpsb
nop
js
fdivl
pop
inc
jmp
sub
inc
and
cmp
jne
pop
fisubrl
cmp
adc
mov
cmp
xchg
in
xor
jnp
pop
xchg
dec
inc
inc
cld
sub
dec
sbb
xor
in
sub
aas
inc
mov
sub
leave
pop
jns
dec
mov
jp
mov
lahf
loopne
mull
and
pop
notb
mov
dec
movsl
idivb
adc
adc
add
fnstenv
lods
sbb
fwait
dec
aad
xchg
xchg
fmull
xchg
mov
gs
and
fstp
pop
pop
push
xchg
jge
jmp
or
mov
movsb
fucomi
daa
insb
movsb
inc
mov
ss
xchg
ljmp
or
shlb
in
add
fs
add
js
and
sbb
push
gs
shl
outsl
sbb
mov
test
xchg
and
mov
shll
xchg
inc
popw
in
sub
subl
lret
cmp
lret
dec
push
testl
fsubl
xor
push
sbb
xchg
inc
and
testb
mov
cmp
lret
addl
adc
add
test
es
out
roll
pop
andb
push
scas
insb
sub
xor
pop
and
cmpb
setge
cltd
shrb
xchg
dec
and
enter
mov
dec
xlat
enter
out
jmp
sbb
sub
stos
cmc
jge
pop
outsb
and
je
and
jne
sub
adc
rolb
adc
push
inc
adc
xchg
push
jge
jge
add
repnz
sbb
popa
roll
jmp
pop
mov
mov
pop
rolb
mov
and
mov
push
add
inc
out
or
xor
add
jne
lret
cmc
mov
dec
xchg
cli
cli
inc
push
pop
xchg
aam
add
dec
inc
inc
jecxz
and
mov
leave
imul
call
dec
adc
xchg
cltd
jle
adc
jl
stc
sbb
shlb
and
stc
or
dec
pop
popa
js
xchg
clc
adc
inc
cmpsl
jecxz
hlt
add
ror
and
push
les
jmp
pop
mov
add
in
inc
addr16
and
mov
jno
test
testl
shlb
js
inc
rcll
out
out
sub
sub
push
aad
cwtl
imul
fs
lcall
xchg
sbb
add
cmp
lods
loopne
or
mov
jae
popa
nop
xchg
mov
lea
stc
xor
push
popa
mov
stos
mov
lret
cmp
arpl
cmp
xchg
mov
push
jb
jmp
xor
fdivs
adc
jbe
dec
addr16
mov
xchg
lret
lret
cwtl
je
inc
pop
ret
fcompl
push
incl
movsb
dec
mov
xor
call
xor
add
jle
out
lahf
add
push
insl
cmp
mov
iret
stos
imul
jmp
jl
hlt
insb
sub
push
lock
xchg
ficoms
mov
insl
xchg
addr16
repz
push
pop
out
adcb
shl
pop
mov
les
add
popa
outsb
sub
jns
xor
addb
sub
mov
scas
mov
cmpsb
dec
insb
jo
lahf
mov
clc
pop
cmc
pop
adc
xchg
and
pop
add
aaa
pop
imul
jmp
aas
mov
jmp
orb
cltd
or
and
negb
hlt
jge
xchg
orb
jmp
push
adc
ret
cmp
xchg
mov
push
pop
test
in
outsb
sbb
rcll
and
clc
sbb
xor
pop
outsl
fs
loop
push
or
cmp
subb
loop
out
shlb
lea
pusha
inc
jb
and
cmp
push
add
sbb
jb
adc
xor
clc
sbbb
xlat
jae
dec
shll
xor
dec
jbe
insl
iret
xor
out
mov
aad
aas
ss
xor
in
fs
mov
lret
clc
ret
push
cld
jbe
into
xor
push
fdiv
push
or
xor
cltd
or
sbb
adc
dec
dec
dec
jne
xor
imul
call
sbb
pop
mov
in
inc
mov
into
cld
insl
adc
mov
mov
sub
fdivs
out
es
fstpl
into
sub
int
adc
cltd
adc
push
lcall
loopne
test
push
lret
fisubrs
hlt
and
push
sarl
imul
adc
outsl
xchg
xor
mov
cwtl
xor
pop
xchg
mov
ja
xor
dec
lret
int3
cwtl
mov
mov
mov
pop
imul
xor
clc
pop
stos
cwtl
xor
pop
cmp
mov
xor
sub
lret
add
adc
lods
add
mov
xchg
insl
shll
adc
inc
repnz
fnstenv
inc
inc
mov
dec
nop
into
jne
mov
loope
xchg
loope
cmp
mov
icebp
adc
movsl
and
incl
in
popa
adc
xor
xchg
xchg
push
leave
and
jge
test
mov
and
in
subl
jl
inc
cmp
cli
std
gs
push
in
push
jae
inc
mov
and
sbb
mov
fstpt
push
fildl
mov
inc
insb
dec
int
popa
dec
and
mov
pop
mov
repz
jecxz
mov
jle
out
sub
sbb
inc
test
pop
jnp
mov
adc
mov
inc
in
add
ljmp
cmpsb
dec
adc
loopne
jge
ret
dec
bound
mov
push
popf
stc
add
mov
cmp
lcall
iret
pushf
push
inc
mov
jge
sub
mov
mov
push
jnp
sahf
jecxz
icebp
mov
stos
mov
xor
fdiv
mov
and
pop
pop
test
cmpsb
push
lds
stos
popf
loope
divb
fwait
mov
ss
mov
insl
test
sub
ret
dec
pop
inc
popf
icebp
add
fs
into
ja
int
cmp
xchg
idiv
out
loop
in
popf
shlb
repnz
sub
fnstcw
dec
jne
pop
lds
and
in
mov
repnz
lock
out
xchg
and
daa
jbe
int3
aad
shll
cwtl
scas
notb
aad
push
jae
roll
incb
sahf
into
fwait
les
divl
inc
xchg
push
mov
dec
call
push
jne
sub
mov
lret
stc
push
insl
int3
int
orl
aaa
cmp
call
int
call
or
pop
test
dec
outsl
adc
add
loop
js
sbb
inc
repnz
xor
dec
arpl
pop
shlb
jo
loop
and
sbbb
mov
dec
cmp
inc
push
scas
out
mov
arpl
mov
mov
and
outsb
gs
add
cmp
cmp
cmp
or
imul
xlat
xor
in
mov
inc
sub
xor
pop
lock
cmpsb
test
mov
xor
outsb
mov
cwtl
xor
pop
sub
xchg
ret
dec
jbe
jmp
repz
sub
mov
stc
dec
sbb
jne
les
test
movsb
mov
push
inc
sub
mov
popf
imul
iret
outsl
in
inc
xor
aam
or
ds
adc
inc
movsb
dec
jb
dec
push
outsb
push
lods
push
sub
stos
push
mov
jecxz
outsb
mov
in
sbb
jns
idivb
out
addr16
mov
cmpsb
and
sahf
push
inc
xorb
movups
pop
add
cmovge
inc
jae
or
sahf
push
enter
faddl
lret
orl
lock
bswap
fstl
mov
stc
dec
aam
sbb
sbb
push
andb
or
xor
int3
das
dec
and
sarb
addr16
rcll
mov
push
inc
dec
adc
inc
je
xchg
sub
and
lea
out
push
adc
and
cltd
mov
sub
test
mov
xchg
pop
jae
push
xor
daa
outsl
xchg
fisubrs
ss
test
fidivrs
into
dec
arpl
mov
and
add
push
mov
sbb
sbbb
cmpsl
push
ds
fmuls
imul
mov
pop
loopne
mov
mov
inc
in
outsl
into
sahf
test
call
xor
cmpsl
mov
testl
sub
mov
push
rcll
inc
adc
inc
out
ljmp
cmc
pop
and
mov
mov
or
and
mov
xor
jae
cmp
dec
push
cmp
xchg
jnp
add
test
and
or
hlt
dec
jne
loop
sub
clc
rorb
jnp
andb
adc
int
pop
add
jne,pt
inc
in
jae
das
call
and
stc
sbb
test
and
hlt
call
mov
std
add
inc
inc
cmp
xor
sbb
cwtl
cltd
pop
cmp
xor
inc
loop
adc
add
test
pop
inc
push
in
and
outsl
stos
aad
jmp
aam
fidivl
push
jo
jb
add
daa
in
cmp
in
rorb
mov
mov
or
sahf
outsb
lock
push
jge
mov
xor
fldl
in
outsl
sbb
jne
add
jmp
jl
stc
pop
push
pop
hlt
sub
loop
sbbl
call
mov
xor
vcvtps2dq
add
mov
lret
test
mov
nop
pop
or
ret
lret
lret
iret
iret
jle
mov
in
push
mov
or
ret
pusha
or
test
xchg
jno
cmp
stos
ffree
icebp
rcll
in
rclb
cli
push
mov
mulb
xchg
stos
adc
push
or
mov
pop
cli
fistpll
enter
mov
cmc
daa
cli
loopne
add
mov
fnstsw
push
adc
clc
adc
shrd
jbe
insl
or
test
cltd
mov
cmp
add
data16
or
lock
lahf
lock
nop
sub
lahf
in
outsb
sbb
jae
out
mov
nopl
mov
mov
push
ljmp
xor
add
mov
fsts
inc
dec
ds
insb
pop
mov
call
popa
and
jbe
repnz
fwait
cwtl
shl
mov
dec
jo
inc
cmp
hlt
loope
push
mov
out
pop
inc
add
loope
pop
dec
jecxz
jo
or
stos
mov
xor
cmp
mov
repz
pop
dec
fwait
cltd
lds
or
inc
stc
sti
cmp
jno
bound
adc
ret
xchg
std
test
daa
js
add
mov
add
or
iret
cltd
cmp
fisubl
xchg
jge
repz
mov
fcomps
mov
data16
xchg
sbb
cmp
lea
xchg
lods
pop
mov
sub
jb
negl
int3
xchg
sarb
pop
mov
push
jl
lret
mov
lods
jp
addb
sbb
lea
mov
and
ljmp
sub
in
xchg
scas
andl
xor
outsl
mov
dec
dec
push
clc
inc
add
loop
fs
sbb
adc
mov
nop
lods
test
xchg
sub
lock
inc
xchg
push
sbb
pop
mov
push
adc
dec
adc
lds
push
lret
lock
mov
pushf
inc
push
mov
sub
fwait
dec
cmpsb
lahf
test
cmp
insl
inc
push
enter
test
fildl
and
sub
in
and
loop
jmp
or
stos
push
cmpsb
push
sub
push
test
jl
mov
push
xor
inc
bswap
sbb
std
xchg
repnz
ja
add
sbb
sub
sbb
sbb
fs
lcall
mov
scas
add
pop
or
mov
sti
mov
sub
mov
mov
repnz
je
xor
bound
jecxz
jns
lret
cmp
xor
push
test
test
mov
mov
in
loop
mov
push
sub
enter
mov
repnz
xlat
addr16
popa
cmp
loop
lret
jbe
jns
jne
fisubrl
bound
inc
dec
mov
lock
pop
mov
clc
and
mov
and
adcb
pop
inc
mov
enter
jle
jmp
mov
jb
sub
mov
insl
cmp
stos
adc
push
mov
cltd
pushf
stc
push
inc
ret
mov
cmp
popa
xchg
mov
jno
mov
repz
lods
cs
mov
xor
out
inc
sbb
cwtl
mov
jno
lods
in
cmp
mov
scas
sbb
sbb
stos
xchg
inc
add
fdivl
test
mov
imul
jmp
mov
mov
psllq
and
addr16
cld
jmp
or
dec
dec
inc
push
test
stos
jp
cmp
cmc
sbb
in
pop
je
pop
xchg
inc
mov
xchg
mov
and
inc
addl
orl
jnp
sub
xchg
and
pop
and
jg
mov
xchg
sub
stos
rol
jmp
fwait
mov
jo
cmp
jae
mov
gs
or
lods
lret
xchg
leave
scas
mov
add
inc
mov
js
sbb
mov
sub
mov
lock
addr16
bound
movsl
mov
testb
or
xlat
and
int
jmp
aaa
mov
enter
out
leave
arpl
inc
ret
add
or
fsubrl
sbb
orl
mov
test
cli
push
push
stos
jnp
enter
push
stos
xor
shll
fnstsw
mov
mov
sbb
out
pop
pop
sarl
into
pop
xchg
clc
jbe
ljmp
push
adc
popa
ret
sbb
pop
and
popf
aas
mov
movsl
jnp
stos
cmpsl
aam
push
dec
fbld
out
call
mov
mov
and
sbb
add
mov
shrb
ret
arpl
mov
mov
pop
into
outsl
mov
popf
pop
shlb
jl
xor
movsl
aas
ja
sahf
dec
cli
incl
fidivrl
xor
icebp
imul
stos
shll
lods
lret
xor
add
or
ja
test
cs
xchg
lahf
push
xor
das
add
leave
outsb
int
cs
push
push
clc
rcll
loopne
xchg
hlt
roll
repnz
mov
xchg
push
sub
or
fildll
jp
pop
inc
cmp
sub
dec
ja
add
bound
cmp
inc
add
in
ljmp
pop
ffree
mov
xor
push
ds
jmp
lods
sbb
fisttpll
stc
std
dec
xor
push
push
and
jle,pt
pop
and
test
imul
xor
lock
ds
jbe
scas
and
pop
shr
repz
add
bound
jp
mov
mov
xor
inc
add
ret
rorl
push
adc
adc
pop
cmp
iret
add
or
or
cmpsl
add
pop
lret
mov
jge
pop
mov
cmp
or
mov
and
push
pop
outsb
jne
stos
mov
push
xor
pop
lods
and
sub
popa
int
dec
test
notl
fmul
imul
pushf
dec
gs
scas
lret
sbb
and
mov
xor
std
mov
mov
sub
lret
sbb
inc
mov
push
jns
inc
fchs
mov
test
mov
jecxz
in
mov
enter
add
lock
aad
rcrl
daa
ret
orb
sbb
cld
and
pop
inc
popl
mov
movsb
jns
pushf
mov
jne
cmp
lret
out
jnp
ret
and
or
mov
fnsave
lcall
adc
and
mov
and
jbe
test
pop
or
push
jge
adc
dec
loop
add
sbb
xchg
pusha
test
outsl
push
mov
lcall
sbb
jns
pushf
push
sub
std
repz
mov
mov
or
or
xchg
andb
ficompl
push
add
mov
add
ss
enter
lcall
or
in
xchg
add
push
cmpsl
add
ret
or
in
out
xchg
mov
cmp
insb
push
pushf
push
inc
lahf
shlb
pop
test
js
movsb
cmp
jb
mov
pop
xor
inc
mov
xchg
mov
repz
pusha
or
ds
jmp
xor
jae
mov
xchg
int
xlat
daa
mov
push
inc
rclb
pop
sbb
xchg
ja
ret
js
push
out
mov
sub
dec
lret
mov
pop
mov
mov
jnp
cmc
cmp
je
mov
cmp
mov
jge
ljmp
ds
daa
mov
out
sbb
xlat
push
mov
jp
cs
popa
sub
fsubr
mov
loopne
add
push
jae
adc
cmp
call
inc
mov
mov
jp
loopne
xchg
fidivrl
push
mov
int3
cmpsb
push
mov
outsb
or
clc
xchg
push
mov
jno
sti
add
inc
imul
xchg
push
js
add
insb
in
hlt
dec
fisttpl
ret
fmuls
cmc
mov
push
repz
dec
mov
std
lret
psrlw
pop
into
lock
and
dec
pop
in
pop
loope
xor
scas
inc
and
or
jl
xor
jo
xchg
adc
into
out
add
cmp
push
push
mov
lea
out
sub
adc
dec
sub
jecxz
ret
lret
and
pop
stos
js
mov
push
jnp
jne
iret
adc
jp
movsl
cltd
roll
cmp
sub
dec
xor
mov
adc
push
pusha
mov
add
dec
pop
scas
stc
mov
cmp
inc
mov
out
lea
daa
outsl
scas
dec
scas
xor
ss
popf
jnp
jl
movsb
mov
push
hlt
push
out
subb
and
stos
jb
addr16
add
test
icebp
les
mov
jge
mov
popf
pop
and
ret
rcrl
push
into
inc
outsl
mov
nop
shrl
push
je
stos
sub
xchg
into
gs
out
pop
push
adc
call
xor
adc
mov
nop
cmpb
imul
push
add
xchg
shll
lods
incl
out
xchg
dec
xor
cli
outsl
inc
fwait
leave
rorl
xlat
push
xchg
div
ja
cmc
cmp
das
xlat
jecxz
or
scas
mov
add
scas
mov
dec
sbb
lret
add
xor
mov
xchg
roll
sub
push
and
je
push
or
push
or
push
or
xchg
mov
popf
mov
mov
sbbl
pushf
xchg
pop
jno
in
inc
rcrl
sub
aaa
pop
out
mov
pop
cmp
or
mov
in
or
mov
jne
hlt
stos
inc
sahf
adc
js
lds
adc
push
xchg
cmp
sub
push
lock
leave
or
or
jae
into
cwtl
jp
leave
das
push
outsb
inc
inc
in
in
sub
and
and
stos
cld
pop
push
dec
outsb
arpl
test
mov
inc
sahf
add
push
dec
inc
cmp
mov
inc
xlat
push
push
fisubrl
pop
mov
inc
repnz
or
das
in
cli
clc
push
sub
bswap
mov
inc
lret
inc
out
daa
scas
arpl
ja
jmp
stos
sub
mov
cmpsb
xchg
ljmp
jae
sub
out
and
pop
jns
test
cmpxchg
andl
test
dec
ljmp
gs
jg
jl
lea
mov
ja
and
pop
loopne
pop
mov
push
mov
shrb
in
jge
cltd
jb
fucomi
push
dec
insl
aaa
xchg
shrl
or
aas
outsb
add
jge
orb
sbb
lcall
jae
inc
cmc
jl
lea
fcompl
ljmp
leave
sub
mov
fcomps
movsb
xchg
xor
dec
test
mov
enter
inc
inc
xchg
leave
cld
popf
and
cmp
clc
cmp
icebp
mov
loope
or
inc
lret
arpl
notb
popa
or
inc
or
out
enter
push
into
dec
lock
pop
xchg
in
pop
fwait
inc
adc
int3
mov
mov
pop
or
ds
jns
js
cmp
call
jge
and
pop
cmp
mov
xor
cmpsb
mov
jae
add
pop
inc
fisubrs
testb
aas
cmp
loopne
fidivl
icebp
pop
insb
aas
sub
in
sub
das
xor
ret
ds
loope
pusha
mov
pop
cmp
sbb
or
dec
in
scas
adc
repnz
add
xchg
pop
xorb
sbb
sbb
ret
dec
popa
sub
inc
sub
mov
push
jge
test
and
fcomp
dec
pop
mov
pop
adc
add
mov
xchg
flds
mov
add
xchg
popf
cmp
jbe
movsl
add
push
and
pop
mov
pop
xchg
cmpsb
adc
push
adc
dec
or
int3
mov
sbb
jp
test
add
lea
dec
loop
aas
lret
ja
inc
jns
in
test
arpl
or
xor
push
je
clc
out
orb
sbb
mov
mov
xchg
dec
mov
jo
repnz
push
xlat
loopne
adc
inc
add
pop
cmpsb
inc
mov
enter
sbb
enter
paddsw
sti
aaa
aas
pop
pop
jmp
mov
fs
inc
xchg
sub
repnz
es
in
lock
sbb
adcb
cltd
inc
js
push
xlat
out
adc
lock
jno
test
out
hlt
dec
xor
push
mov
sarb
xor
in
adc
shrl
xchg
sbb
mov
or
orl
add
loop
addr16
jge
sarb
lods
imul
add
repz
repnz
mov
mov
pushf
push
or
pop
push
lcall
arpl
or
cld
loope
push
adc
lcall
inc
sarl
hlt
add
scas
dec
inc
cs
scas
inc
dec
mov
and
ret
int3
into
stos
fwait
push
cwtl
mov
push
inc
in
and
out
dec
adc
jmp
out
les
shl
xchg
dec
cmp
mov
aam
fdiv
pop
mov
fs
mov
jo
inc
cmp
pop
adc
adc
sbb
test
jmp
inc
or
add
xchg
mov
loop
test
pop
lcall
in
pushf
stos
mov
movsl
rcrl
rcrl
nop
scas
in
fnstsw
stos
mov
movsl
jl
jb
inc
xchg
into
xchg
xor
adc
jo
xlat
icebp
or
xchg
xchg
insb
dec
inc
mov
xor
push
jnp
stc
or
jne
inc
mov
out
jl
lds
inc
stos
sub
add
add
jg
mov
pop
and
xchg
fimuls
xor
stos
gs
les
jne
cmp
push
add
fcoms
shll
sub
jmp
andb
sub
push
mov
or
fidivrl
ror
pmaxsw
icebp
shlb
xor
rcrb
negb
adc
lahf
push
loope
test
insl
inc
in
mov
xor
jl
add
outsb
ret
mov
in
icebp
jae
scas
xchg
jb
sahf
sti
mov
jle
dec
fcoms
xchg
cltd
pop
enter
xor
in
in
ror
xor
and
pop
add
lcall
aam
in
clc
and
xor
adc
mov
lcall
mov
lahf
dec
in
gs
call
add
sbb
adc
lods
inc
adc
jle
clc
pushf
xor
xor
sub
or
fwait
push
stc
dec
mov
ds
movb
push
fwait
imul
push
das
jae
and
and
cmp
sub
lods
pop
iret
in
dec
mov
pop
sar
mov
lahf
jb
xchg
push
ret
push
or
adc
std
dec
outsb
pop
sub
bound
arpl
jne
sbb
fidivrl
mov
cltd
pop
mov
popa
sbb
pop
xchg
xchg
outsb
xorb
out
popf
inc
test
jl
in
xor
mov
fdivrl
cwtl
das
inc
xlat
cmp
cltd
inc
stc
jbe
les
pop
lods
imul
scas
imul
addb
daa
jl
das
lods
cs
and
inc
jb
add
xchg
gs
mov
cmp
mov
scas
xlat
leave
push
cmp
push
adc
lcall
jnp
call
pop
das
aam
daa
in
pop
inc
mov
mov
leave
mov
push
aas
lds
inc
push
cmc
mov
pop
dec
cmp
aas
mov
cmc
outsl
int3
add
outsb
cs
pop
pop
pushf
imul
outsl
cltd
dec
pop
aas
push
stos
push
int
leave
movsl
js
popa
inc
adc
enter
je
lret
and
mov
cmp
mov
inc
std
decl
lcall
scas
rcll
std
frstor
mov
cmpsb
and
jecxz
mov
push
js
iret
or
cmc
pop
and
roll
mov
in
orb
test
xchg
imul
sti
gs
cmp
adc
pop
decl
jae
imul
xor
xor
jns
loope
out
test
fidivs
cli
jo
xlat
jge
mov
mov
stos
shlb
mov
xchg
shll
sub
push
aas
ret
sub
cli
gs
orl
dec
adc
out
mov
jno
mov
pop
xlat
mov
mov
iret
rorl
xchg
push
fsubrl
pushf
lock
or
outsl
pop
fimull
sub
or
popa
sub
add
xchg
js
sarb
mov
arpl
xchg
xchg
xor
mov
fwait
adc
pushf
sbb
decl
mov
pop
dec
add
scas
cli
add
mov
out
mov
sbb
arpl
mov
std
jge
jmp
es
push
stos
popf
pop
cmpb
rorl
leave
js
divl
jecxz
xchg
push
jl
adc
jge
mov
lcall
or
mov
cltd
adc
jae
shlb
adc
pop
cs
hlt
pop
xchg
push
mov
sbb
xchg
jns
in
jge
lods
fsubrl
jg
jl
cmpsl
lret
push
data16
push
fists
and
sbb
test
stos
aas
test
imul
pop
sub
add
test
hlt
subl
mov
test
rorl
mov
add
arpl
cmp
sbb
push
push
cli
out
sub
fistpll
add
cld
and
mov
dec
cmpl
stos
add
popa
in
add
sub
pop
dec
repnz
imul
add
out
scas
mov
or
cmp
jo
arpl
lret
imul
outsb
fistpl
cs
insl
push
icebp
mov
pop
ficomps
dec
test
imulb
adc
fildll
jle
mov
int
sbb
loopne
lcall
jae
xchg
jge
adc
pop
jmp
clc
inc
in
loope
and
adc
add
sahf
adc
pop
xchg
mov
cli
inc
push
pop
sbb
fimuls
into
sub
aam
test
imul
xchg
and
negb
ret
mull
jb
addr16
and
dec
insl
sahf
mov
mov
out
mov
sbb
loopne
cli
daa
jbe
ftst
jno
insb
and
lock
fcmovnu
and
mov
adc
gs
pop
and
pop
xor
xor
shlb
pop
jl
jle
dec
jns
imul
fbld
aad
inc
icebp
js
cmpl
aaa
xchg
mov
lret
data16
fidivl
or
divl
or
mov
sub
fnstsw
sub
stc
jl
xchg
inc
xor
sub
add
pop
and
push
add
in
jle
xor
es
sub
test
jbe
std
push
ja
pop
jmp
inc
adc
out
mov
lods
insb
push
push
leave
iret
fildll
adc
jl
push
cmc
fnstsw
repz
lea
insl
hlt
inc
shl
pop
fucom
mov
xchg
push
lret
and
inc
lretw
mov
test
mov
dec
fwait
jecxz
fdivrs
mov
jge
andl
sbb
out
push
push
jb
int
xchg
mov
andl
xor
data16
out
inc
inc
scas
cmp
mov
sti
push
mov
mov
mov
or
add
popa
or
lods
mov
add
mov
xlat
leave
clc
popf
dec
rcl
sbb
iret
pop
inc
sub
shlb
xchg
pusha
stos
in
loopne
mov
jmp
xchg
fucomip
mov
dec
lods
fs
fcomps
aad
add
arpl
scas
or
sti
dec
in
dec
add
add
pop
xchg
mov
cli
nop
sbb
mov
mov
gs
mov
inc
dec
fisttpl
dec
adc
sarb
mov
pop
ds
out
icebp
inc
jbe
test
jge
loop
arpl
xchg
fs
test
xor
and
dec
add
fstps
mov
xchg
jmp
int3
imul
in
jns
fidivrl
data16
fpatan
dec
arpl
mov
cli
rolb
jmp
pushf
xor
xor
clc
gs
jp
sub
mov
sub
bound
jmp
xor
or
jecxz
xor
repnz
pop
out
sub
mov
push
xchg
jmp
inc
mov
orl
in
sub
addb
mov
ljmp
pop
aas
xchg
mov
std
and
inc
cmpsb
pop
jmp
jno
xor
adc
sbb
rcrb
in
in
arpl
fldl
add
xchg
lea
enter
xchg
push
add
inc
jl
mov
stos
test
xchg
jp
xor
xor
mov
ja
and
mov
jne
shl
bound
mov
mov
fisubl
fwait
shll
hlt
jl
cmc
add
aam
fwait
pop
push
aas
sbb
pop
lret
stc
gs
ss
jg
sub
and
mov
push
ret
test
fwait
xor
or
sub
iret
insl
dec
enter
jle
jg
enter
pop
or
daa
mov
mov
add
iret
cmpsb
test
test
or
test
repz
jnp
fistl
roll
aam
push
ror
test
es
fcmovbe
jo
lea
cld
jae
lods
in
jecxz
jmp
inc
imul
pop
add
dec
roll
add
xlat
lea
mov
and
dec
pop
xchg
mov
imul
pop
in
pop
pop
sub
push
xor
sbb
dec
adc
lret
cmp
into
and
cmp
outsb
xchg
adc
movb
outsb
adc
mull
ja
push
mov
mov
xchg
into
pusha
into
jns
or
test
aam
mov
or
icebp
jb
xor
iret
test
fs
push
cmpsl
cmp
daa
fcmovnu
repnz
add
adc
sub
imul
js
sub
sbb
sbb
mov
mov
xchg
pop
mov
int3
push
inc
leave
xor
inc
cmp
xchg
movsb
popf
xor
mov
mov
es
mulps
mov
jb
inc
cli
add
bound
enter
popa
es
adc
int3
and
cmpb
cmp
push
sub
les
inc
in
sub
mov
xor
mov
sub
out
mov
push
push
nop
cmp
mov
daa
ss
jg
cwtl
test
add
cld
add
pushf
or
enter
ja
shlb
push
js
dec
push
je
add
push
lds
inc
cmc
das
and
ljmp
pop
push
xor
outsb
test
jnp
icebp
inc
cmpsl
les
icebp
pop
int3
xor
ret
inc
sbb
fs
outsl
std
iret
mov
mov
jle
pop
and
call
rcll
xchg
sub
insl
push
out
push
push
pop
shlb
in
pop
xor
dec
push
imul
jmp
jl
mov
jle
fbld
xlat
hlt
and
mov
pop
adc
adc
mov
lea
and
loop
fwait
push
lea
sbb
idiv
test
push
out
je
mov
jb
push
sbb
fwait
rolb
fwait
mov
mov
xor
mov
aas
iret
jne
mov
jb
cltd
popa
lock
pop
jbe
lods
mov
cwtl
and
nop
dec
idiv
ret
sahf
pop
sbb
es
daa
rcr
cmp
mov
fstps
xlat
sub
xor
mov
adc
inc
push
pop
cwtl
xlat
data16
popf
xlat
adc
icebp
mov
pop
aad
push
push
pop
xchg
push
jae
shrd
data16
pop
fcomp
mov
lret
frstor
jbe
fisubs
cmp
lock
push
push
inc
adc
cld
adc
ret
roll
mov
call
push
xor
mov
push
ds
psubw
rep
loopne
loope
fcomps
cltd
push
int
jbe
pushf
dec
ret
sub
div
xor
cltd
sar
mov
add
xchg
fnstsw
add
mov
mov
ror
popa
push
jmp
fs
xchg
pop
pop
xchg
adc
pop
inc
inc
aad
repz
mov
in
aas
ret
call
in
cwtl
je
pop
outsb
inc
adc
lcall
pop
into
jmp
ret
mov
jecxz
pop
ja
aas
fimull
iret
ds
daa
add
fcomps
xchg
shll
sub
xlat
add
jo
lret
and
dec
xor
xchg
pop
cmp
fists
push
and
mov
movsb
in
aam
or
pop
jg
fmull
mov
cs
movsl
jns
mov
mov
es
hlt
rol
mov
jl
push
xor
jo
fdivs
xchg
out
lods
sbb
dec
push
xchg
jmp
stos
fsubp
stos
pop
sahf
mov
xchg
sub
adc
stc
xor
fstpt
out
jmp
fwait
sbbb
xor
stos
andb
push
js
cmp
xchg
fldcw
add
xchg
testb
sbb
mov
jns
out
pop
jnp
inc
lahf
ljmp
les
jne
stos
jp
inc
and
ds
sbb
movsb
push
add
lods
mov
mov
add
adc
jno
cmp
addb
movsl
push
cmp
fwait
aam
jmp
sti
icebp
mov
fs
or
sub
out
mov
cmp
fnsave
test
adc
mov
aad
sar
test
es
inc
les
or
add
ljmp
adc
inc
fsub
pusha
push
mov
pusha
sti
jmp
adc
lock
sub
leave
jnp
inc
nop
mov
jns
pop
inc
mov
push
push
clc
pushf
cmp
cmp
imul
pop
xchg
decb
mov
push
jge
inc
lods
insl
jecxz
dec
xchg
pop
pop
push
ficomps
pusha
out
sub
in
push
aam
or
mov
in
inc
jbe
fs
es
mov
iret
in
mov
icebp
adc
jle
cli
test
pop
subl
xchg
les
lret
stos
sub
sbb
bound
in
mov
pop
pop
ret
mov
cmc
insl
push
push
aad
arpl
fyl2xp1
shlb
out
scas
scas
stc
inc
or
lods
jns
cmp
fistpl
cmp
adc
ds
lods
pop
mov
mov
ret
push
frndint
jns
dec
shr
jp
mov
mov
jle
jbe
mov
push
inc
inc
imul
mov
dec
sub
fcmovnbe
push
rcrb
out
pop
sbb
mov
iret
jg
lret
out
loop
enter
lods
test
call
add
imul
lcall
test
mov
mov
ljmp
or
xor
jbe
dec
cwtl
push
lret
xor
sub
rorl
aaa
roll
sarb
xchg
pop
jecxz
pushf
fstpt
std
sub
xor
sbb
cmc
jmp
gs
jl
cmp
fldt
adc
movsl
xor
mov
hlt
mov
jne
or
mov
jae
push
jmp
add
push
call
jecxz
adc
popf
pop
stos
xor
push
repz
mov
pushf
rorl
mov
addl
dec
pop
mov
test
repnz
stc
loop
and
fsubrs
dec
push
int
jbe
in
pop
cmp
sar
mov
xchg
dec
jmp
outsb
test
aas
sbb
jmp
jb
outsl
mov
lcall
inc
fnstenv
addr16
inc
out
cmp
pushf
stos
inc
push
gs
push
cmc
das
or
or
push
cmp
popf
loopne
mov
out
inc
jno
std
mov
cld
rclb
movsw
popa
mov
lods
mov
xchg
in
add
fstps
jge
cltd
nop
lret
cmp
roll
cmc
push
fsubrs
push
sub
loop
mov
push
les
shrl
popa
call
cli
fs
cs
ss
mov
xor
mov
adc
mov
add
or
daa
jo
sahf
mov
aam
and
pop
pusha
dec
jge
dec
scas
inc
xor
pop
xor
add
jns
lahf
mov
add
icebp
ret
mov
dec
mov
fdiv
cmp
repz
loopne
or
sbb
xchg
xor
lods
ret
into
push
mov
inc
fwait
gs
out
dec
mov
push
ljmp
xlat
or
push
push
jecxz
sahf
popf
popf
pop
cwtl
xchg
repnz
roll
add
push
jnp
cli
mov
push
stc
inc
into
arpl
movsl
mov
cmp
das
mov
imul
sbb
cmp
mov
mov
pop
push
imulb
pop
xchg
cli
or
cld
test
hlt
inc
jl
or
insl
mov
aam
lods
cld
or
mov
ljmp
sub
rcrb
addb
inc
setnp
xchg
mov
imul
xorb
or
dec
or
andl
shl
fisttpl
sbb
out
jns
push
imul
sub
xlat
repz
pop
cmp
in
xchg
mov
js
fadd
repnz
mov
pop
outsl
or
in
lret
sahf
loop
gs
lea
cli
cld
cmp
out
sbb
lahf
daa
repnz
repnz
mov
aaa
xchg
movsl
sbb
sub
mov
lock
enter
add
mov
mov
call
pop
dec
call
dec
cmp
ret
xchg
jo
or
dec
sahf
lods
xor
iret
pop
frstor
inc
sar
push
or
mov
xchg
or
lret
shrl
fs
sub
out
in
out
imul
in
push
jecxz
adc
nop
jp,pt
and
adc
push
mov
call
cmp
mov
movsb
lahf
mov
mov
imul
jge
cmp
insl
gs
popf
andl
shl
jp
repnz
push
inc
shrb
loopne
sub
sub
push
add
mov
sbb
sbb
xlat
test
ds
sub
cmp
out
jbe
mov
lods
arpl
mov
sbb
push
pop
jge
out
inc
in
inc
jmp
cwtl
sbb
test
jl
bound
and
xchg
push
cmp
ss
sub
push
jl
jns
pop
jg
aas
dec
cmp
pop
fildll
or
mov
ds
xor
popa
dec
sbb
nop
roll
sahf
mov
cmp
aam
ret
cwtl
bound
xchg
cwtl
hlt
push
sbb
mov
jmp
mov
mov
dec
pop
stos
sub
mov
inc
outsb
mov
call
mov
je
add
sub
inc
pop
sahf
sbb
in
or
and
aad
ds
mov
xchg
adc
mov
add
dec
pop
add
mov
fistl
and
sahf
xchg
gs
lahf
lods
insb
jno
fildll
js
cmp
cmc
fcomps
fsubrs
cmp
mov
adc
xor
movsb
add
add
and
sub
and
iret
or
int3
xor
mov
pop
xor
cmp
movsl
sbb
jo
in
add
jbe
add
pop
dec
stc
test
jnp
es
leave
cmpb
and
xor
fistps
rorl
scas
shll
bound
inc
mov
lods
repnz
rcrl
sbb
mov
mov
dec
aaa
push
repnz
fisubs
in
xchg
arpl
sub
movsl
sar
fildl
fucomp
push
and
pop
sub
std
cmpsb
sbb
push
dec
mov
lahf
push
add
fistpl
dec
jg
jl
mov
cmp
sub
vhsubpd
std
mov
in
or
hlt
inc
sbb
lcall
mov
sub
addl
xchg
inc
or
or
mov
shlb
shll
lret
nop
test
std
xchg
out
nop
add
sub
mov
fs
and
mov
js
imull
and
insb
sub
ret
hlt
xchg
add
out
and
xor
lcall
stc
shlb
xor
rclb
xor
jbe
mov
mov
fmull
ret
xchg
inc
je
inc
ja
pop
mov
xchg
fadd
xor
pop
fists
jge
push
les
xchg
or
andb
jbe
out
xchg
jo
rorl
sub
mov
movsl
or
mov
jecxz
push
mov
add
ljmp
mov
cmp
insl
leave
mov
mov
divl
xor
sbb
dec
or
ds
jns
cmp
and
xchg
jmp
add
fldcw
xor
test
icebp
mov
fisttpl
fs
pop
add
btc
loop
jp
jns
jmp
fcoms
rorl
aaa
lods
mov
mov
repz
cmc
mov
out
pop
xchg
mov
aaa
xor
pop
mov
cwtl
leave
fidivl
inc
dec
push
das
jg
push
int
push
inc
mov
incl
in
cmpsb
cmpl
imul
ret
xor
push
scas
push
lods
mov
cli
shlb
lea
repnz
pop
sbb
loopne
not
xor
rep
fdivl
ss
jns
out
test
scas
push
lock
imul
jg
pushf
shl
std
pop
out
in
sti
sub
sbb
mov
cmpsb
cltd
jg
fdivl
jmp
inc
jno
mov
mov
cmp
jge
mov
sbb
pusha
cwtl
mov
add
xor
jl
inc
add
or
jp
sbb
cmp
movsl
inc
jg
lcall
into
adc
push
pusha
cltd
jnp
int
cmp
add
roll
dec
lret
or
jecxz
cmpl
inc
push
cmp
leave
test
shl
add
iret
cmpsl
into
mov
adc
cmpsb
sbb
add
fidivrl
xchg
sbb
add
add
xchg
lret
mov
fisubrl
ljmp
sahf
jge
xor
out
insb
fs
scas
leave
call
repz
mov
xchg
jg
push
sbb
icebp
cmc
test
mov
out
jns
ds
mov
add
jb
mov
rcrb
ret
lock
aaa
outsb
adc
adc
lock
jno
in
jno
pop
adc
out
jo
adcl
daa
lcall
fisubrl
mov
das
adc
sti
pop
fisubl
scas
cltd
jo
dec
jmp
adc
insb
jl
push
pop
add
and
andb
aaa
movsb
jmp
add
imul
xor
repz
add
pop
sarl
or
jl
or
scas
lret
in
push
movsl
push
lods
xor
push
nop
idivb
mov
cmp
inc
fwait
push
mov
ret
adc
out
sub
lds
std
ret
or
and
dec
cmp
add
pop
pop
aam
shll
lods
cwtl
mov
sarl
out
inc
inc
mov
mov
and
and
inc
test
inc
scas
ds
xor
dec
jo
rcrb
aad
pop
mov
int3
in
stc
sub
dec
popf
mov
cmpsb
xchg
xlat
test
lretw
pop
sahf
mov
inc
push
jne
add
sbb
aam
push
imul
xor
mov
mov
or
or
mov
mov
dec
sbb
mov
outsb
lock
in
pop
fisubs
push
stos
fcomps
stos
pop
mov
inc
roll
inc
cmpsl
mov
out
add
imul
mov
loope
xor
or
mov
cmp
inc
sub
lea
int
loopne,pn
pop
fisttpll
adc
or
cmp
iret
mov
std
testb
jo
mov
mov
icebp
in
addr16
jge
stc
loop
pop
dec
dec
push
dec
inc
dec
dec
pause
lret
cld
fdivs
roll
mov
je
loopne
sbb
xchg
je
loopne
sbb
fnstsw
imull
das
or
or
add
je
loopne
sbb
xchg
je
loopne
sbb
xchg
je
loopne
sbb
xchg
je
loopne
sbb
out
hlt
pop
hlt
adc
call
mov
mov
xor
inc
push
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
testl
adc
lds
addr16
sahf
adc
push
dec
