cs
incl
add
add
inc
outsl
outsl
insb
gs
outsb
add
add
fsubr
incl
gs
jb
lea
sub
add
jns
gs
jmp
mov
inc
adc
push
push
je
imul
in
pop
and
add
inc
das
lret
cmpsb
imul
idiv
outsl
xchg
cs
pop
push
dec
bound
arpl
dec
ret
mov
pop
orl
pop
cmp
enter
pop
xor
and
and
and
adc
or
cmp
enter
sar
leave
xchg
sbbl
sbb
in
sarl
outsb
clc
iret
inc
in
rcll
mov
call
pop
xchg
sub
inc
and
add
mov
and
mov
sbb
arpl
in
loopne
fmul
leave
xchg
sbb
aam
shl
fistpll
int3
push
mov
add
push
jmp
push
mov
jne
xor
pop
mov
fisttps
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
insl
and
sub
add
push
mov
mov
dec
sti
negb
in
cld
test
dec
mov
mov
mov
add
xor
mov
inc
add
mov
sbb
or
divb
push
mov
push
push
outsb
decl
mov
mov
mov
imul
ja
or
push
or
ret
adc
test
insl
push
add
add
jmp
add
pcmpeqw
dec
push
mov
cmp
jne
mov
adc
test
mov
xor
pop
xchg
mov
imull
mov
dec
cmp
jb
mov
add
call
mov
addr16
bound
jne
mov
fadd
pop
sub
jnp
cmp
jmp
sub
insl
sarl
add
iret
cs
sub
jmp
mov
pushl
or
jnp
stc
mov
sub
mov
daa
jnp
pop
aam
test
or
jmp
fldt
sbb
sti
jne
or
mov
mov
jmp
jge
mov
incl
and
push
push
xor
lcall
mov
test
je
mov
mov
out
xchg
adc
jecxz
add
aam
add
mov
mov
mov
movl
fs
in
sbb
push
push
jne
js
fldt
and
cmpl
jbe
inc
mov
fldt
mov
mov
loop
incl
gs
xchg
mov
mov
add
mov
sbb
dec
jmp
bnd
out
ja
mov
add
jnp
jp
sbb
cmp
mov
jbe
add
jnp
test
or
add
xchg
filds
mov
add
or
in
fcmovnu
jl
mov
dec
in
loope
xlat
jns
sub
roll
adc
hlt
mov
rorb
lock
mov
add
push
movb
imul
inc
sub
mov
into
cmp
pop
sbb
nop
jbe
mov
cmp
or
push
push
push
cmp
xchg
adc
sti
push
push
ror
jmp
ss
fmuls
ss
mov
call
mov
nop
fcmovne
out
popf
jmp
dec
xchg
and
inc
test
mov
std
and
and
add
mov
sbbb
es
sbb
inc
inc
add
cwtl
jno
add
and
out
lea
cmp
hlt
sbb
je
and
jns
jmp
cmp
jg
jp
into
aam
xlat
pop
push
add
mov
nop
dec
inc
dec
inc
ds
mov
add
mov
cmpl
movsl
adc
push
dec
cwtl
je
adc
enter
push
jp
pop
ja
ds
fisttps
push
cmp
add
imul
ja
jle
test
pop
shl
cmp
pop
add
add
popa
xchg
xor
or
enter
sub
fbstp
adc
xor
jmp
lahf
movl
jne
mov
dec
jmp
imul
xlat
adc
sbb
xlat
cmp
fdivs
dec
and
inc
nop
dec
js
dec
or
pushf
xchg
in
pop
dec
jg
or
and
sbb
jmp
lods
lea
cmp
jae
mov
cmp
inc
add
mov
mov
ret
mov
cmpsb
jae
cmp
cmc
addl
cmp
sbb
fstpt
pop
lea
inc
sbb
aas
sti
outsl
mull
mov
push
cmpb
fstpt
or
in
dec
mov
in
or
mov
clc
bswap
fcmovnu
popf
mov
add
mov
adc
xor
cmp
sarb
add
ret
mov
movb
pop
mov
push
int3
xchg
xchg
ret
fbld
cltd
in
pop
sti
mov
push
and
add
bnd
shll
sbb
xor
out
pop
add
les
popa
mov
pusha
xor
mov
adc
inc
ret
mov
negb
xor
nop
xchg
sbb
sbb
in
and
fists
add
icebp
jne
adcb
stc
fsubs
cmp
inc
in
aaa
add
add
int3
mov
jmp
lret
push
fsts
adc
xor
add
icebp
negb
pushf
ret
jmp
dec
in
shll
pop
ret
or
repz
cmp
data16
ret
mov
call
add
sbb
mov
jl
into
sbb
push
sarl
mov
jnp
mov
adc
incl
mov
add
loop
jecxz
or
adc
ss
push
or
fsubs
orl
dec
or
pop
jg
ret
incb
inc
sbb
add
cmp
add
in
sub
push
enter
ret
insl
push
xor
pop
add
popa
fbld
inc
cmpsb
jb
cmp
sbb
push
jnp
add
push
arpl
pop
pop
and
xor
or
pop
add
add
adc
sub
dec
or
add
or
scas
or
push
push
pop
add
and
pop
lods
mov
andb
mov
sub
jg
clc
sub
fbstp
fldl
add
rorb
cld
jmp
adc
decb
mov
test
fimull
pop
jb
rclb
cmpsb
xor
or
or
ret
cmp
xchg
add
push
xchg
out
mov
push
push
add
sub
jo
dec
shlb
aaa
mov
in
lods
fs
hlt
rcll
or
pop
rcl
icebp
mov
sbb
cmp
inc
or
loopne
insl
aam
pop
push
sub
cmp
or
push
or
test
pop
mov
push
mov
sub
int
or
lcall
sub
adc
iret
xor
xor
push
push
and
loope
orb
movsl
mov
dec
or
dec
and
sub
push
mov
cmp
xor
inc
pop
push
repz
dec
call
sbb
js
and
jo
subl
mov
lods
lea
jle
rcrl
aam
lock
push
dec
dec
mov
xchg
push
mov
dec
and
fsubrs
ret
dec
mov
repnz
pop
cltd
ljmp
clc
add
das
inc
pop
rclb
or
xor
or
mov
fidivrs
jno
ds
mov
or
loope
pop
jg
pop
inc
xor
das
fcoml
pop
je
pop
jmp
adc
mov
push
push
jne
or
hlt
pop
mov
movq
jne
movsb
sub
jge
adc
sbb
or
add
add
jge
sahf
and
dec
hlt
push
sub
adc
roll
xchg
mov
insb
mov
cmp
lods
sbb
sbb
dec
pop
jmp
and
outsb
sub
add
or
xor
jge
aad
or
test
inc
hlt
and
and
inc
gs
add
inc
xor
adc
xchg
in
mov
ret
test
popa
das
jl
xor
scas
inc
push
shlb
sub
lea
xor
mov
mov
mov
test
pop
or
add
orb
fadds
sbb
pop
sbb
adc
loope
sbb
pop
pop
or
add
xor
insb
rcll
mov
xchg
xchg
test
int
sub
push
inc
cmp
xchg
pushf
je
pop
jne
testl
ss
lcall
clc
mov
test
punpckhbw
ror
or
insl
decl
dec
adc
mov
setbe
push
inc
mov
pop
or
or
out
or
imul
lcall
roll
mov
add
cmp
pusha
ret
test
sbb
adc
mov
pusha
adc
mov
add
loopne
xchg
std
sti
or
orl
jmp
outsb
pop
mov
add
jl
or
or
push
ret
rorl
popf
nop
sub
sbb
enter
iret
shrl
mov
out
mov
mov
sub
jge
test
jno
cmp
clc
mov
adc
rcll
stos
or
into
xor
or
or
cmp
add
sbb
xchg
and
push
sub
testb
adc
or
add
push
test
mov
test
fnstenv
push
push
pop
xor
push
or
adc
dec
in
pusha
addr16
cmp
jl
in
jbe
out
int
or
sbb
mov
add
or
ss
add
fstps
and
aam
fbstp
or
add
or
jge
lods
popf
fwait
push
ret
jno
test
scas
fs
fadd
rorb
dec
shl
cs
stos
pop
in
add
push
cmp
xchg
jmp
andb
fcom
jne
add
test
ret
or
pop
pop
mov
sbb
stos
jg
add
sbb
jp
pop
add
dec
popf
adc
pop
fdivr
dec
fiaddl
pop
movsb
ss
ret
arpl
push
inc
push
insl
push
jge
sbb
adc
xchg
and
mov
sbb
cmp
fs
inc
and
push
cmp
adc
call
or
dec
pop
xor
pop
in
je
bound
inc
je
mov
testb
stc
leave
je
xchg
sbb
enter
pop
cmp
mov
xor
mov
ret
sub
sbb
testb
jmp
add
adc
cltd
outsl
mov
jns
out
jg
nop
scas
daa
shlb
int3
outsb
stc
cmp
or
aas
insl
lret
or
mov
cmp
iret
jge
sbb
mov
mov
and
sbb
mov
fsubrs
in
pop
push
je
push
push
push
cmp
jne
and
outsb
jnp
rclb
sub
add
pop
stos
pop
rcrb
sub
push
scas
nop
or
cmp
pop
lahf
sub
and
fsubs
ss
popl
mov
mov
or
divl
je
nop
call
mov
mov
and
rep
mov
je
cld
lea
fistpl
jle
adc
sbb
add
pop
jecxz
ljmp
jb
cmp
ja
sub
dec
sub
fucomip
ret
jnp
pop
pop
xlat
sbb
push
push
cli
jp
mov
daa
fdivrl
mov
rcrb
sub
outsl
dec
data16
add
shll
pop
loope
jle
cmpsl
mov
pop
cmp
adc
test
sub
addr16
out
shrl
pop
shll
sbb
pop
and
fnstcw
cwtl
jecxz
negb
cmp
add
and
or
mov
lahf
push
mov
and
dec
mov
sbb
dec
je
dec
rcr
jo
enter
outsl
sub
notl
into
shr
es
mov
cmp
scas
icebp
fnstenv
dec
ja
mov
or
fsin
or
or
loop
push
or
aaa
sub
pop
dec
push
mov
cmp
jne
sub
in
jg
mov
cmp
jne
or
add
fldt
pop
pop
cmp
cmp
jne
shr
rorl
sub
jmp
or
cld
ret
in
lret
mov
shl
add
nop
or
stos
mov
std
mov
stos
pop
out
fldt
or
test
or
jo
xor
or
loop
mov
mov
rcrb
mov
jle
xor
div
cltd
xor
icebp
neg
cli
mov
jmp
mov
inc
mov
pop
ljmp
sub
jle
dec
pushl
outsl
insb
mov
mov
inc
dec
jne
daa
sbb
mov
push
sbb
jl
fildll
imul
int3
add
push
inc
repnz
sbb
and
add
sub
je
pop
lret
lret
iret
and
je
pop
je
xor
daa
adc
das
je
jge
in
pop
add
adc
ja
cmp
ja
lea
add
add
mov
dec
out
int
imul
idiv
or
fdivrs
js
pop
sub
jmp
inc
and
pushf
mov
add
sub
popl
std
gs
dec
and
pop
adc
or
leave
push
add
aad
movsb
and
pop
dec
pop
xor
mov
or
clc
clc
lock
inc
mov
fsubs
cmpb
lcall
adc
lea
pop
lea
fldt
mov
call
lahf
cmp
es
lds
add
popa
xlat
adc
mov
jns
pop
sub
push
jge
jge
inc
cmp
repnz
xor
sbb
mov
push
fstp
fldt
add
out
pop
adcb
aas
mov
pslld
pushf
or
daa
pslld
mov
adc
xchg
lahf
cld
and
sbb
add
aas
inc
mov
mov
pop
jnp
out
xor
xchg
sub
or
out
jmp
xor
leave
sbb
mov
int
inc
jbe
imul
cmp
mov
mov
bound
dec
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
call
aas
push
push
int3
into
sbb
rorl
mov
push
pop
test
incl
movsl
sbb
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
outsl
mov
ljmp
test
lds
iret
decl
js
inc
sub
ljmp
loopne
jmp
xchg
test
stos
pop
out
sub
imul
divl
das
cld
jmp
jl
xor
cmp
call
mov
push
inc
mov
push
das
lock
lcall
cld
sarb
repnz
test
nop
fistl
lahf
nop
incl
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
ds
push
cmpsb
scas
mov
pop
or
addl
jmp
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
stos
mov
mov
repz
mov
subb
and
call
les
outsb
bound
xor
and
cmp
push
jae
sbb
cmp
jne
mov
in
sbb
add
mov
jb
sbbl
nop
jg
movzwl
loop
mov
push
xor
push
nop
mov
test
pusha
jl
jae
sub
xor
cld
hlt
mov
jbe
push
xor
add
xor
jo
or
mov
pop
jp
push
push
clc
sub
or
mov
xchg
or
or
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
cld
jmp
jo
imul
push
dec
popa
jae
push
popa
insb
jne
fninit
fldcw
cmp
mov
or
pop
mov
xor
mov
inc
or
jae
fdiv
add
adc
loopne
inc
test
push
xchg
cmp
sbb
xor
and
aaa
test
outsb
xlat
orb
push
pop
jl
invd
aam
xchg
outsl
and
popl
in
add
int3
aaa
jo
mov
or
push
cld
ret
pusha
subl
mov
js
and
sbb
cmp
sbb
ja
fldl
mov
adc
mov
mov
ffreep
movsb
sbb
in
cmp
je
pop
mov
rcrl
push
mov
xor
ucomiss
jnp
dec
jne
jne
fists
insl
mov
jbe
xor
pop
cs
xor
sbb
int
and
push
lock
sub
mov
mov
jge
jle
or
push
sqrtps
push
cld
add
push
pop
sub
mov
jo
pop
cmp
add
rorb
push
pop
stos
int
jne
inc
jmp
jo
sahf
dec
add
xor
mov
pop
popfw
rol
ss
mov
cld
pop
xchg
icebp
pop
jmp
pop
sbb
cmp
or
ds
xor
hlt
repnz
fs
lock
add
or
inc
add
push
mov
dec
or
movl
pushf
sub
mov
pop
push
aas
mov
push
pop
pop
jo
or
adc
push
clc
jge
jl
lret
or
out
mov
cli
or
adc
mov
fcom
and
add
rol
cli
in
mov
notb
add
outsl
xor
sbb
sbb
add
add
jge
push
push
pop
push
push
mov
adc
mov
mov
cmpb
sbb
notl
cld
sub
inc
inc
jmp
add
iret
call
and
pop
cmp
push
mov
push
push
jae
pushf
pop
loop
ficompl
into
mov
sbb
arpl
testl
add
arpl
fisubrs
mov
jnp
cmp
and
outsb
shll
mov
negb
xor
icebp
jecxz
add
mov
cmpl
je
movsb
adc
xchg
or
ja
sbb
dec
insb
mov
fadds
and
fs
or
add
adc
push
and
push
cmp
je
orl
ret
cmc
adc
sbb
xchg
ficoml
mov
sbb
sbb
dec
cmp
add
add
sti
sbb
add
sub
dec
sub
jmp
xorb
adc
lahf
movsl
outsb
add
sbb
push
mov
popf
jmp
das
ds
stc
divb
dec
dec
inc
add
xor
loop
mov
mov
stos
popa
aaa
xchg
mov
orb
push
push
push
push
push
inc
pop
pop
arpl
xor
insb
mov
pusha
pop
cmp
pop
mov
mov
xor
lahf
xchg
inc
or
pusha
add
lahf
mov
aam
jecxz
out
shrb
lret
mov
adc
pusha
xchg
rorb
filds
xchg
mov
sub
jmp
ret
insl
shlb
loopne
fnsave
sbb
leave
ret
pop
mov
pop
add
sub
pop
cmp
std
pop
outsb
out
sub
adc
pusha
add
das
stc
aas
sub
jb
je
jmp
cmp
cmp
fbstp
and
cmp
cmp
nop
jmp
mov
jmp
mov
es
jmp
mov
jmp
mov
ljmp
push
mov
shll
inc
aaa
cli
or
dec
xor
shrb
push
or
pop
stos
add
mov
or
sbb
je
sub
xor
fsubr
dec
sbb
adc
sbb
gs
cli
cli
lahf
pop
jae
adc
cld
out
or
jge
lahf
or
test
lret
sub
fnstcw
push
adc
and
push
dec
mov
mov
sbb
in
je
push
ficomps
or
sbb
loopne
out
and
add
jns
add
or
inc
aaa
dec
aad
add
mov
idivl
xorl
add
add
xor
jle
dec
mov
and
aas
mov
call
adc
xorl
xchg
fisttps
xor
xchg
loopne
cmp
js
ds
cmp
jle
add
inc
mov
nop
ja
cmp
jg
movl
sbb
cmp
fidivrl
loopne
mov
inc
dec
movb
cli
or
ret
idivl
je
mov
push
mov
add
mov
cmp
dec
jne
pop
pop
mov
cli
add
xchg
es
lds
sub
nop
mov
add
cld
push
clc
push
idiv
add
loopne
sti
rorl
cmp
ljmp
mov
mov
or
fisttpl
dec
out
ret
cli
out
cmc
xchg
push
pop
sbb
inc
scas
pop
sbb
pushl
add
mov
mov
and
push
pop
inc
mov
sbb
or
xor
adc
ret
sbb
clc
shlb
xor
shll
mov
push
push
mov
fstps
push
lods
roll
sub
cmp
add
shlb
add
or
mov
mov
jnp
cmpb
push
cmpl
adc
mov
pop
mov
call
adc
movsl
adc
in
fcompl
dec
and
int3
adc
inc
mov
xor
jo
out
pop
mov
adc
add
mov
cmp
sub
cmc
adc
clc
bound
push
mov
xor
fistpl
push
out
es
cmp
cmp
in
or
sub
xchg
or
lds
sti
popa
out
cmp
inc
dec
mov
inc
clc
xchg
gs
pushl
push
dec
jl
lock
mov
mov
push
and
sub
movl
mov
jne
pop
pop
pop
fdivl
and
inc
jg
pop
inc
jo
push
out
or
mov
imul
jmp
cmp
xchg
dec
push
testb
mov
and
xchg
adc
inc
das
insb
loopne
push
rcrl
inc
add
aad
mov
jb
iret
add
fcmovne
sbb
clc
xchg
stc
mov
dec
or
push
lock
out
call
mov
orl
or
or
or
pop
push
jo
stos
add
movsb
incl
push
ljmp
inc
jmp
lea
cmp
mov
jge
push
shll
mov
mov
sub
mov
add
xchg
mov
xchg
out
sub
popa
shrl
sub
fdivl
jge
xor
jl
xor
push
cmp
call
xor
and
or
pop
fiadds
je
add
jmp
ret
sti
fucomi
inc
add
jmp
jmp
imulb
and
pop
add
fisttpll
add
in
add
cmp
daa
mov
sub
mov
sub
insb
repnz
insb
notb
cwtl
shrl
rcrl
pop
jne
insb
popa
add
add
lods
sbb
sbb
jb
pop
mov
les
das
push
push
cld
add
bound
mov
adc
bound
cmc
iret
inc
popa
imul
adc
jbe
inc
jb
cmp
sub
rorl
pop
int3
inc
cld
adc
gs
pop
dec
lcall
flds
push
push
pop
lsl
inc
jle
mov
inc
jo
lret
mov
pop
mov
push
xor
mov
dec
or
or
loop
dec
stos
add
push
mov
es
jle
aas
fistl
pop
jae
ja
mov
loope
sbb
add
dec
jmp
xchg
push
mov
repnz
mov
or
add
mov
lds
inc
imul
dec
xor
out
pop
xchg
pop
lea
loopne
movl
popl
ljmp
push
push
mov
sub
ja
add
push
sarl
push
mov
pop
dec
dec
add
pop
mov
push
dec
inc
or
add
in
dec
mov
fbld
sub
inc
pop
out
divl
adc
jecxz
and
mov
add
jmp
pusha
jmp
push
adc
mov
dec
rcll
adcl
inc
mov
jle
sbb
mov
in
je
push
xchg
cmp
adc
in
stos
sbb
inc
xor
cltd
out
inc
ret
lret
pop
pop
sub
lock
icebp
es
jl
cmp
jge
sub
xchg
jl
mov
xchg
add
insb
stc
or
shr
in
jmp
mov
pop
ffreep
das
data16
ret
mov
xor
sub
pop
clc
jle
sub
fnstcw
and
stc
add
lea
mov
daa
push
push
or
scas
out
xchg
dec
stos
ja
jbe
push
lds
dec
jge
cmp
inc
xlat
mov
lock
xor
fdivs
mov
outsl
sub
das
clc
push
add
inc
pop
sub
xor
add
mov
inc
dec
xor
push
in
aaa
jge
dec
cld
push
ss
js
mov
inc
cmp
mov
sbb
sbb
in
pop
fwait
outsb
add
push
adc
clc
mov
pop
adc
dec
jle
jae
mov
cmpl
sbb
push
sbb
mov
mov
push
mov
jmp
ja
sub
push
inc
add
jl
icebp
dec
push
xchg
xor
arpl
orl
or
and
imul
call
cmpsl
xchg
mov
mov
or
mov
lret
packssdw
repz
sbb
adc
push
inc
xor
jp
das
or
jg
sahf
dec
add
mov
pop
and
push
or
mov
stos
test
js
inc
mov
mov
sub
mov
cmp
and
fistpl
std
cmp
je
cmp
jno
pushf
jbe
cvttps2pi
adc
mov
out
add
cli
and
data16
or
icebp
aas
incb
sbb
test
jmp
in
xlat
fcmovb
sbb
js
outsb
adc
subl
inc
xor
cmp
mov
or
add
dec
rclb
les
pop
xor
call
sbb
lock
inc
add
sub
repnz
mov
push
sbb
jmp
das
jp
ljmp
cmp
or
xor
or
cld
fidivs
push
add
sarl
add
cwtl
mov
jg
popf
or
push
adc
and
add
je
or
jo
sbb
stc
and
arpl
xor
push
aas
jmp
adc
pushf
sub
in
lea
clc
mov
jo
gs
mov
add
dec
fcoms
packssdw
or
xor
dec
mov
sbb
adc
popa
in
in
pop
cmp
push
dec
inc
in
js
push
mov
xlat
icebp
dec
jne
lods
sbb
jle
xlat
repz
std
insb
and
mov
testb
push
jb
enter
aaa
pusha
mov
dec
jne
cmp
inc
jbe
xor
cs
jmp
jnp
sub
adc
data16
test
add
or
imul
std
add
pop
and
jmp
pop
arpl
les
clc
les
sub
pop
sub
add
add
iret
gs
std
sarb
or
mov
fists
es
ja
mull
mov
push
dec
cld
add
fildl
lret
xor
push
and
pop
sbb
sbb
leave
fildl
xchg
push
mov
sti
pop
or
mov
movsl
fidivrl
sbb
repnz
sbb
adc
mov
fistpll
xor
shl
rcl
rcl
rcr
out
jb
xlat
cmp
jb
jmp
sbb
inc
loop
pop
test
mov
inc
push
repz
data16
sarl
pop
dec
addb
imul
fistl
mov
mov
hlt
xor
int3
aam
or
xorb
sbb
ljmp
jl
jns
push
add
inc
or
jmp
cmp
jne
mov
mov
and
sub
je
adc
insb
shr
mov
cs
bswap
mov
fnstsw
sbb
inc
xor
ljmp
adc
stc
push
jb
out
jge
fsubrl
pop
sub
jmp
push
jno
xchg
or
jmp
push
notl
aaa
aaa
or
lds
loopne
inc
adcl
mov
pushl
xor
xor
cs
cltd
pop
data16
fldt
scas
add
adc
loope
sub
fisubrl
shll
in
push
rcll
mov
rolb
sub
xchg
cmp
bound
dec
inc
leave
cmpsb
out
lcall
das
jg
leave
imul
or
stos
cltd
and
jmp
xchg
hlt
xchg
or
cmp
inc
into
or
add
pushf
sarb
push
fsubrl
add
adc
mov
daa
jmp
xchg
or
xor
jge
stos
dec
lds
or
push
adc
mov
adc
pop
in
push
push
mov
sbb
cmp
scas
mov
add
mov
push
sbb
inc
inc
mov
push
pushf
inc
aaa
daa
cmp
xor
insb
xor
xor
repz
add
jns
bound
push
call
insl
jnp
ljmp
call
popa
filds
call
or
mov
jo
pop
cmp
xor
jge
jge
inc
cmp
addr16
push
dec
add
lock
adcb
loopne
push
in
scas
loopne
pop
decl
push
mov
mov
outsl
mov
mov
lods
fldl
jge
add
sub
in
inc
outsb
or
leave
mov
and
push
fcmovu
push
iret
adc
push
test
push
arpl
out
jmp
out
add
cmp
mov
jg
in
push
lock
jno
pop
imul
insb
add
push
cmpl
fisubrs
jle
int3
or
dec
dec
cmp
pop
pop
test
roll
insl
or
iret
sbb
push
int3
ret
fadds
je
cmovg
mov
in
mov
aam
sbb
inc
mov
pop
daa
mov
je
push
push
push
and
pop
shll
imul
mov
adc
mov
les
incl
inc
shll
pop
leave
aaa
cmp
ss
icebp
add
cmp
add
inc
fisttpll
mov
adc
push
cmp
jge
xor
shrb
mov
add
or
or
daa
or
adc
or
pop
mov
imul
mov
ret
inc
insl
les
jmp
add
out
xor
scas
push
clc
adcb
push
lock
push
sahf
and
es
cmpsb
ljmp
or
lods
push
or
fldt
mov
jo
pop
js
pop
fldl
ds
add
ret
push
pop
xchg
adc
ret
fisttpl
pop
adc
shl
jne
bound
pop
push
push
lea
pop
test
arpl
add
rol
sub
rolb
roll
cli
cmpsb
jg
in
adc
xor
xor
fistpl
lret
int3
mov
inc
outsl
jae
adc
fistl
je
or
pop
loop
neg
movsl
add
inc
cmp
test
out
pop
mov
push
sub
or
gs
pop
aas
inc
leave
testl
test
es
jmp
mov
jb
gs
xor
cs
insb
or
jg
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
adc
loopne
mov
jecxz
fisubrl
inc
out
adc
push
adc
lret
rcrb
push
and
sub
push
and
mov
fcompp
cs
jns
mov
addr16
inc
call
mov
mov
addr16
mov
add
add
add
dec
clc
daa
mov
pusha
dec
push
in
pop
mov
push
repz
adc
mov
testb
jge
pusha
shll
add
or
mov
add
cmp
insb
ret
jle
push
fdivs
or
xlat
inc
inc
mov
pop
imulb
iret
push
test
push
cmp
sti
cmp
je
pop
aaa
cs
pop
repz
cmc
add
sbb
xor
mov
je
popa
jb
jg
out
arpl
popa
insb
gs
sbb
or
fwait
and
adc
mov
data16
cmp
mov
insb
xor
clc
mov
and
or
iret
pop
fs
test
add
jb
mov
sbb
xor
cs
dec
push
push
jb
push
daa
dec
shl
jge
add
jo
movl
adc
mov
push
push
mov
lods
push
and
ljmp
jg
mov
ds
je
orb
sbb
push
adc
adc
mov
add
aam
loopne
fisttpll
push
push
mov
jo
pop
mov
inc
mov
or
pop
cmp
aad
add
add
sarl
shll
add
mov
dec
sar
aaa
call
xchg
das
enter
sarb
bound
ficoms
sub
dec
add
icebp
mov
add
push
xchg
incb
xchg
sbb
pop
lea
push
push
popa
push
xor
adc
fdivrl
sub
cld
adc
call
out
mov
xor
xor
pop
repnz
cld
scas
dec
incl
ja
and
clc
or
repnz
add
dec
pop
mov
test
int3
push
clc
pop
subl
out
jae
or
add
sbb
add
and
ljmp
or
fs
sahf
and
dec
mov
or
mov
jle
sbb
mov
clc
mov
adc
cmp
nop
and
cmp
cmp
jbe
mov
add
and
jle
and
mov
rorb
push
mov
mov
mov
test
movsl
inc
aas
nop
jae
icebp
cmp
mov
cmpl
push
incl
sbbl
jmp
inc
outsl
jl
push
mov
adc
je
xor
test
xchg
lea
add
cmp
sub
aaa
fsubs
ret
mov
jb
jno
stos
outsl
sbb
pusha
aas
fsubl
addr16
pop
jb
mov
sbb
fisubs
inc
inc
mov
mov
das
mov
mov
and
rclb
push
fs
push
cwtl
aaa
icebp
insb
inc
cmpsb
in
clc
insb
inc
es
sub
enter
sbb
mov
nop
inc
mov
test
xchg
inc
push
movsb
mov
push
cwtl
xchg
add
in
push
jb
cld
ret
clc
push
popa
sbb
xor
cld
or
sbb
inc
lea
cmp
or
lock
call
fsub
pop
aam
xor
and
int3
enter
add
mov
mov
or
lods
test
orl
mov
xor
and
and
and
and
orl
pusha
pop
pop
push
or
enter
dec
xor
and
and
and
and
or
enter
adc
xor
and
or
cmp
and
daa
dec
sahf
cmp
ret
lock
xor
and
in
xor
and
xchg
orl
les
or
repnz
les
pop
pop
xor
and
and
and
xor
or
enter
and
xor
and
sbb
xor
and
sbbl
or
enter
add
cmp
and
cld
clc
fs
inc
push
hlt
lock
nop
inc
push
sbb
in
inc
push
sbb
aam
sbb
int3
enter
nop
inc
sarb
mov
nop
inc
push
sbb
sbb
xchg
push
sbb
mov
inc
cmpb
inc
push
je
jbe
add
jno
xchg
cmp
dec
jo
push
loopw
enter
ds
orl
icebp
repnz
or
enter
divl
enter
stc
cli
enter
sti
cld
std
and
loopne
or
enter
in
xor
and
out
xor
and
and
and
rolb
rcl
aam
xor
and
xlat
xor
and
and
and
rolb
ret
les
enter
xor
and
and
and
mov
or
enter
mov
xor
and
and
and
pop
ret
or
mov
dec
push
enter
pop
xchg
inc
jo
je
pop
repz
rorb
lcall
xchg
mov
adc
push
sub
cmp
in
std
jg
inc
js
gs
imul
adc
cmp
addr16
jns
jnp
pop
inc
dec
gs
jo
nop
dec
pop
pop
aas
add
dec
pop
movsb
or
dec
jne
inc
pop
inc
decl
dec
gs
outsl
jb
mov
popa
negb
mov
or
outsb
repnz
jb
add
add
inc
popa
add
lret
inc
popa
insb
xlat
pop
push
pop
xchg
pop
and
nop
mov
pop
mov
or
or
dec
pop
fs
adc
sub
pop
or
imul
nop
push
fs
adc
xchg
rclb
pushl
jae
outsb
jbe
jb
insb
outsl
ja
pop
push
and
adc
pop
in
pop
sub
or
mov
je
push
bnd
pop
mov
pop
sub
sbb
or
imul
inc
and
mov
enter
pop
gs
push
and
or
and
insb
arpl
push
pop
fnstenv
outsb
fs
nop
aam
sbb
cmc
inc
pop
xchg
xchg
insl
cli
and
outsl
imul
or
pop
or
sbb
je
mov
sbb
test
icebp
inc
fldenv
xlat
call
pop
or
xchg
push
mov
jmp
sub
and
dec
pusha
push
jb
insb
adc
xchg
pop
jecxz
mov
fbld
scas
push
je
arpl
nop
cld
xor
xor
mov
insb
inc
imul
cmovb
popa
push
popa
or
xor
mov
andb
mov
or
fs
adc
xchg
sub
lret
fdivs
mov
nop
or
insb
stos
data16
cmp
pop
enter
arpl
adc
popa
gs
ja
adc
aas
adc
cs
xor
fdivrl
inc
push
dec
pop
or
jae
and
dec
cs
add
and
add
and
cltd
and
cld
into
inc
sbb
lret
mov
mov
call
mov
and
leave
jne
or
jns
negl
data16
push
repz
push
ret
fsts
dec
hlt
or
or
cli
cmp
ret
push
or
sbb
sbb
pop
sub
sub
jbe
shll
add
divl
dec
jne
xor
sarl
pushl
movsb
mov
negl
and
leave
pop
lret
lock
rol
inc
ljmp
push
sub
fnstcw
outsl
jmp
fnstcw
orw
call
push
daa
andl
imul
pop
fildll
fildll
ret
dec
in
stos
mov
jle
fildll
filds
rorl
fildll
stc
mov
insl
mov
mov
add
push
push
fcom
fstsw
sahf
jae
sti
pop
mov
ffree
ffree
ffree
ffree
pop
lret
mov
rcrl
js
push
rclb
inc
xor
and
inc
or
pop
xor
sub
dec
rcrb
mov
inc
lock
cmc
mov
sbb
cli
push
xor
xlat
sub
add
add
and
push
orb
cmp
rclb
sarl
cwtl
mov
cmp
cld
lock
lea
mov
xchg
cmp
shr
push
cmpsl
imul
add
clc
sbb
mov
sar
sub
insl
clc
pop
inc
call
xorb
mov
movsl
mov
inc
push
add
lock
push
ret
sub
jle
pushf
xchg
pushl
adc
out
push
pop
mov
mov
fists
jbe
dec
add
lret
and
gs
incl
inc
sub
mov
mov
inc
fldcw
push
or
fldcw
pop
pop
fidivs
xor
rorb
fildll
xor
adc
mov
cmp
add
mov
cmpsl
or
or
shlb
cs
rclb
pop
or
add
ret
inc
adc
repnz
call
fadds
cmp
jbe
mov
cmp
dec
xchg
sub
pushf
dec
mov
add
daa
mov
shll
pop
or
testl
push
sbb
mov
fildl
shrb
insb
mov
bound
xor
sbb
adc
call
pop
scas
jo
mov
dec
pop
xchg
adc
ret
into
jmp
ret
add
clc
or
mov
stos
fmuls
push
or
and
cmp
sub
jmp
je
bnd
call
mov
sub
lods
gs
mov
jne
pop
ret
inc
lock
hlt
adc
lods
jmp
or
je
cmp
adc
mov
push
push
mov
cli
pop
add
add
fildl
jge
dec
or
jae
push
jae
cltd
add
xchg
or
or
sbb
push
push
push
mov
mov
mov
push
stc
inc
cmp
or
sar
pop
pushl
cmp
ja
imul
mov
add
xchg
add
add
cmpl
inc
fistps
jg
lds
cmpb
jae
inc
sbb
je
leave
ret
and
mov
jg
lods
sbb
pop
jne
lea
loop
in
fimuls
and
and
outsb
mov
imul
sub
jnp
xchg
ja
pop
add
imul
adc
or
jbe
pop
daa
icebp
hlt
dec
fsubrs
sarl
xlat
or
mov
faddl
loope
aam
cmp
sub
je
int
add
sbb
cli
cli
or
sub
push
in
jmp
xor
imul
adc
or
js
adc
andb
std
stc
push
jne
push
bound
cmpl
jbe
mov
push
add
xchg
cmp
lock
xor
and
lods
adc
jmp
mov
add
add
pop
fistpl
popf
and
insb
aad
pop
cmp
push
inc
mov
or
add
or
ja
xchg
jecxz
imul
push
loopne
mov
mov
ds
lods
pusha
cmpsl
push
leave
mov
ja
repz
mov
xchg
mov
aaa
cld
negb
mov
inc
je
mov
push
inc
je
mov
data16
mov
add
jp
ds
cli
push
divl
sub
ret
mov
les
sbb
adc
fdivrl
test
mov
pop
popa
jo
mov
and
movsb
shll
negb
mov
jl
ret
sbb
adc
push
test
pop
iretw
lahf
mov
mov
and
test
fs
daa
movhps
imul
or
dec
or
push
and
xchg
rolb
ret
jmp
jge
add
or
xchg
xchg
adc
pop
adc
add
add
add
mov
sbb
sbb
push
fs
daa
dec
cld
lea
popa
mov
or
das
xor
cmp
jl
jmp
add
cmpsl
push
xlat
add
lods
mov
jge
add
jmp
lea
or
jnp
pop
mov
inc
mov
iret
and
or
push
or
push
or
movsb
push
mov
stos
xchg
push
mov
movzbl
xchg
mov
mov
mov
inc
dec
or
xchg
jg
dec
mov
sbb
incl
stos
cmp
jne
pop
pop
stos
aam
sub
mov
mov
fwait
jns
mov
jl
mov
cmp
stos
push
adc
pop
xor
jge
xor
add
jbe
or
daa
in
add
jmp
mov
movzwl
sbb
inc
shrb
jmp
jecxz
pop
pop
lahf
lea
mov
mov
jmp
push
xlat
cs
ret
sti
add
jecxz
jge
ja
movswl
cmp
add
inc
add
sbb
mov
jne
fs
inc
jmp
or
outsl
jno
enter
dec
inc
enter
sub
inc
dec
ret
cltd
add
or
dec
aam
mov
cld
xchg
dec
or
sbb
sbb
mov
cmp
or
inc
jmp
loope
inc
je
stos
loop
pop
adc
fstpt
stos
or
and
daa
mov
add
push
pop
add
mov
bound
and
sub
mov
add
leave
mov
mov
mov
test
dec
sbb
fwait
out
sbb
add
add
test
in
push
ret
mov
dec
pusha
sti
addr16
jecxz
push
dec
je
dec
jne
cli
out
fisttpl
jmp
mov
jnp
stos
jecxz
cmp
in
inc
jne
mov
ret
dec
jns
jno
filds
or
cmp
xchg
mov
add
sbb
clc
lea
add
adc
push
push
push
jg
sbb
mov
pop
pop
mov
inc
loop
dec
test
push
xor
imul
add
int
test
adc
inc
sub
sbb
sub
out
jge
xlat
or
sub
imul
sub
sbb
out
pop
sub
sub
loopne
subb
dec
push
add
je
pop
ret
pusha
xchg
or
cmp
rol
and
mov
cmp
testl
fldl
cmpl
icebp
scas
jo
inc
and
mov
sti
imul
clc
pop
push
into
mov
fabs
push
leave
sbb
je
test
cld
jmp
fcomp
fstsw
fucom
fcomi
fwait
pop
inc
testb
pop
fidivl
out
mov
lea
mov
inc
sub
dec
mov
clc
outsl
int
and
add
sub
sub
add
jns
dec
fmul
das
icebp
fwait
jmp
add
call
jae
jns
add
jb
out
add
or
push
sti
and
data16
mov
fs
pusha
out
jmp
mov
xor
push
jmp
in
scas
or
mov
add
dec
push
or
call
lret
mov
rcll
mov
out
pop
out
ficomps
mov
or
jp
std
fistpll
add
pop
mov
cmpsl
sbb
jae
dec
add
or
in
insl
rcl
or
add
orb
push
fidivl
fwait
cmp
sbb
push
imul
outsl
into
and
jne
dec
adc
cmp
fcmovu
jae
adc
push
and
fucomi
inc
filds
lea
iret
movb
cmpb
testl
fisttpl
pusha
out
sub
sub
add
pop
cmpsb
es
insl
mov
adc
add
fadds
loopne
lret
xchg
push
mov
xchg
mov
cmpb
sbb
inc
add
mov
lahf
push
jb
mov
sbb
lcall
mov
mov
adcl
xor
iret
cmpsl
scas
push
add
or
sub
mov
je
mov
rolb
mov
loopne
push
push
mov
ja
pop
lea
dec
sub
pop
pop
hlt
lcall
lock
cmp
and
repz
or
jne
pusha
add
sbb
cs
mov
pop
mov
je
pop
mov
jo
sbb
nop
sub
clc
dec
push
call
pop
mov
movd
addr16
mov
or
jmp
adc
sub
mulb
test
pop
je
dec
cmp
inc
stos
add
add
push
add
icebp
mov
ret
fchs
push
aad
cmp
iret
test
andl
scas
and
sti
inc
or
push
pop
adc
cmp
ret
cld
mov
nop
call
jbe
or
ret
das
push
sarl
ret
lds
mov
les
cmp
orl
arpl
add
das
push
push
sub
add
ja
xchg
add
hlt
push
sub
lret
inc
sbb
mov
outsl
or
stc
lock
adc
jb
jae
clc
mov
in
ds
ret
inc
adc
add
add
adc
adc
mov
icebp
sbb
pushf
sbb
je
xlat
mov
mov
int
sub
and
fdivrs
shlb
stos
cld
cmpl
mov
loop
adc
inc
jno
sarl
xor
adc
loopne
xor
aas
mov
scas
sti
js
rol
inc
mov
mov
and
jmp
mov
shlb
notb
jae
call
leave
hlt
xor
pop
je
jne
sbb
jbe
add
pusha
mov
in
jle
xchg
ds
xorl
jae
or
add
adc
gs
mov
adc
daa
sub
loop
sbb
add
inc
dec
imul
cld
fisubrl
inc
rclb
mov
addr16
loopne
jne,pn
dec
out
f2xm1
jle
mov
inc
mov
inc
or
and
sbb
push
mov
pushf
data16
sahf
std
pop
lahf
sub
es
loopne
mov
inc
psllq
idivb
add
adc
movhps
fsubrs
pop
stos
dec
push
iret
sub
int
fstp
add
add
cs
xchg
xor
add
cld
jo
inc
add
or
inc
mov
jp
fstpl
add
cld
movb
inc
ss
xor
arpl
arpl
mov
mov
insl
lahf
cmp
push
lea
xchg
pop
pop
dec
pop
mov
mov
add
add
in
dec
and
xor
or
sub
mov
lahf
rclb
and
insb
add
or
jbe
inc
push
add
pop
inc
call
add
pop
or
hlt
xchg
insb
cs
inc
fadds
call
and
jmp
push
sbb
stc
jle
pop
sub
sahf
push
or
push
adc
inc
shlb
adc
arpl
mov
push
out
inc
add
or
inc
inc
roll
add
inc
aam
inc
ds
push
or
push
sbb
movsb
push
pop
mov
bound
xor
js
dec
lods
mov
enter
loop
push
add
out
mov
mov
xchg
enter
or
jns
clc
mov
mov
xchg
cmpb
mov
or
cld
inc
push
or
add
push
arpl
jl
jge
test
js
jmp
outsl
pop
jmp
or
xor
lods
or
cs
stc
adc
add
or
int
sti
push
mov
mov
push
jno
and
jo
and
in
mov
jp
or
pop
jmp
sar
lret
adc
cs
dec
sub
jb
sub
cmp
jmp
pop
nop
and
sub
int3
test
add
scas
push
mov
adc
inc
jge
inc
ret
pop
inc
xchg
push
add
leave
insb
rcll
or
rorb
pop
xor
pop
sub
loopne
hlt
icebp
and
pushf
insl
popf
repz
mov
or
hlt
stc
pushw
clc
adcl
loopne
xor
dec
loopne
fs
cwtl
sbb
jnp
xchg
addl
cld
jecxz
int
mov
add
shll
mov
add
cmp
cwtl
shrb
packuswb
les
or
sahf
sbb
xor
sbb
push
cmp
je
enter
jmp
xor
inc
xor
sub
jmp
and
add
mov
pop
xchg
flds
add
bound
or
imul
mov
xchg
nop
inc
mov
inc
popf
test
add
jo
mov
cwtl
das
jle
mov
cld
cmpl
cmp
enter
test
pop
daa
jae
mov
add
or
pop
or
mov
lock
addl
test
push
arpl
scas
je
xor
adc
decb
sbbl
or
adc
xor
pop
mov
sub
jle
ss
int3
mov
call
lock
mov
packsswb
fnstenv
pushf
pop
jmp
xchg
xchg
ds
cmp
sbb
pop
pushf
mov
sbb
push
xor
in
nop
xchg
popa
inc
add
ss
xchg
mov
mov
adc
bound
aad
dec
push
adc
mov
cld
icebp
lea
adc
rolb
jb
add
mov
and
out
cmp
insb
jo
or
in
lret
sub
add
dec
mov
lock
or
loope
pop
mov
sbb
repnz
ret
add
lods
adcb
addr16
pop
adc
dec
push
xor
daa
add
mov
jae
xchg
lahf
mov
mov
imul
lahf
or
lahf
fistpl
fcoms
lahf
pop
jl
pop
mov
inc
jle
test
add
add
ficoms
mov
mov
in
fbld
sbb
add
mov
and
or
or
fsubrl
and
fcoms
and
fsubrs
enter
jge
test
inc
add
xchg
xchg
dec
xchg
mov
mov
popf
or
mov
mov
add
or
jmp
xlat
push
mov
add
sbbb
loop
mov
bound
cmp
pop
and
jmp
add
cs
es
jp
testl
dec
test
jl
mov
and
sbb
iret
sub
adc
leave
incb
in
mov
add
adc
inc
adc
mov
or
aad
imul
jo
jae
lea
mov
lds
insl
sarl
ljmp
sub
cs
lret
dec
pop
pop
sub
test
mov
adc
cmp
inc
mov
adc
or
adc
xchg
test
in
inc
adc
aam
mov
pushf
add
cmp
icebp
pop
or
sub
jb
add
inc
lcall
jne
mov
fwait
out
pop
hlt
hlt
insb
xorb
bound
stc
sub
xchg
pop
hlt
sbb
rcrb
fdivs
add
sahf
xor
sbb
repz
in
fdivs
or
pop
xor
jmp
mov
pushl
push
mov
sub
jb
inc
mov
mov
shrb
push
dec
jne
lock
xlat
add
inc
jne
lock
add
pop
xchg
inc
f2xm1
xchg
xchg
scas
push
icebp
cmp
push
movl
cmp
inc
add
and
or
insb
in
mov
movzwl
adc
jle
shr
mov
movsl
cwtl
mov
or
clc
xlat
fldenv
movb
sbb
inc
adc
bnd
pop
mov
fistpll
mov
sbb
sbb
or
xor
adc
inc
inc
cmp
jmp
cwtl
push
or
sbb
and
push
push
fildl
fchs
xor
xchg
adc
add
rorl
inc
lock
out
jne
jmp
push
pop
inc
pop
xchg
in
ja
shlb
pop
sub
sub
mov
add
push
add
jae
adc
jne
push
subps
jb
popa
adc
movsb
push
and
xchg
or
dec
out
jl
adc
pop
xor
mov
in
mov
or
out
dec
dec
mov
rcll
jmp
sbb
and
sahf
in
or
nop
mov
push
sbb
jg
in
in
nop
add
xorb
mov
push
sbb
mov
fdivl
fcom
loopne
test
repnz
xchg
aam
fs
jle
subl
mov
push
sahf
insl
shrb
jl
mov
adc
sarb
mov
int3
mov
and
mov
cmp
sub
and
sbb
push
mov
in
xchg
add
aas
popa
sarb
jb
adc
hlt
mov
cmp
add
fcompl
sysret
hlt
mov
enter
sub
pushf
arpl
adc
or
and
cmp
or
clc
mov
push
insl
das
fs
outsl
push
xor
les
sub
fwait
add
add
or
push
pop
or
and
push
dec
add
loop
xchg
femms
pop
mov
orw
jae
sbb
inc
ret
push
mov
orb
push
jp
xchg
lret
mov
gs
mov
adc
mov
test
add
cmpsb
and
adc
lcall
addl
inc
jb
gs
jo
arpl
add
test
inc
push
push
fs
negl
imul
pop
xorb
notl
jo
mov
push
imul
pop
mov
xor
aas
cmp
inc
imul
cmpsb
imul
mov
mov
xchg
pop
dec
lock
dec
lret
cmpsb
imul
dec
xlat
xor
shlb
movsb
enter
je
mov
test
fucomp
sahf
dec
inc
jg
or
arpl
movsb
pushf
insb
dec
ss
mov
movsb
cmp
nop
sahf
cwtl
aam
sbb
mov
nop
out
lahf
or
int
rcrb
or
jge
xor
js
je
lahf
movsb
cmp
pushf
pop
jo
lahf
insb
sbb
jae
sbb
sahf
fs
lahf
leave
xchg
out
je
or
pop
push
lcall
inc
lcall
dec
ss
fwait
inc
push
mov
pushf
insb
push
imul
xchg
sahf
sub
mov
mov
and
sahf
and
fwait
xchg
sahf
sbb
mov
jbe
adc
add
lods
sub
movsl
hlt
cmp
xchg
or
scas
mov
jmp
mov
pusha
add
mov
mov
in
pushf
mov
std
or
xchg
sbb
repnz
clc
jns
nop
add
cwtl
inc
mov
in
xchg
mov
pop
xorl
sbb
arpl
cmp
nop
arpl
dec
mov
in
sbb
xor
mov
push
xchg
cwtl
or
dec
xor
leave
test
aad
lahf
pushf
or
adc
xor
mov
jg
jb
lea
mov
into
and
or
ja
inc
mov
cmp
xlat
sbb
add
je
inc
pusha
and
xor
jb
js
vpavgb
lea
push
or
scas
cwtl
ret
out
lret
mov
lea
jb
cmp
nop
js
hlt
add
push
dec
xchg
je
cmp
jge
and
rclb
push
lret
xchg
nop
jecxz
fs
nop
push
add
sbb
int
test
enter
or
pop
push
push
je
cld
imul
fmul
out
and
aam
adc
xchg
adc
aad
insl
jae
cmp
enter
nop
pop
push
and
xchg
pushf
xchg
fsubr
xchg
xchg
sub
enter
jne
nop
add
scas
pop
test
cmc
or
add
adc
stos
push
rcll
jl
rcll
adc
cmp
incl
je
rolb
or
inc
sub
mov
add
or
push
sarl
and
jg
mov
xchg
push
inc
dec
or
mov
sbb
jle
mov
jge
sub
arpl
ja
lea
add
adc
add
fcmovnu
fistpll
sarb
push
dec
fwait
inc
orb
test
dec
xor
inc
jle
mov
push
aas
mov
or
jmp
push
popl
lret
lcall
jmp
inc
cmp
add
jne
lods
fnstsw
leave
call
mov
lods
movsb
sub
or
repz
or
dec
lds
adc
aam
es
add
mov
adc
or
sub
jle
in
or
mov
orb
mov
shl
mov
std
fildll
sub
jg
dec
mov
xchg
mov
jle
shlb
clts
ret
loop
fstps
and
inc
or
xor
lea
and
hlt
inc
add
inc
lock
inc
and
cs
shll
push
sti
cmpsb
or
xorb
enter
mov
and
inc
or
sub
adc
adc
in
jge
js
ljmp
imul
mov
and
nop
test
js
and
das
mov
jne
cmovno
cmp
subl
pusha
xor
pop
mov
xor
dec
or
int3
rolb
adc
lock
cmp
push
enter
sahf
rclb
inc
xor
mov
int
adc
sarl
add
adc
cltd
jnp
mov
inc
pop
cmpsb
push
adc
adc
pusha
mov
or
inc
mov
adc
mov
jo
adc
inc
jnp
lahf
mul
push
mov
cmp
in
popl
inc
cmp
pop
mov
xchg
or
lds
outsb
pop
lcall
call
mov
hlt
push
aaa
andb
loop
cmp
push
push
jmp
ljmp
pushf
add
push
xchg
shll
imul
xchg
jmp
in
jg
cmp
lret
loope
lcall
in
add
mov
enter
push
das
xor
push
or
fdivs
pop
lods
lea
mov
or
stos
add
jnp
fcmovb
jl
sbb
test
xor
sbb
repnz
xor
and
push
push
or
sbb
ss
outsl
incl
jb
je
dec
add
adc
add
enter
js
aam
add
pop
push
adc
sbb
ds
fwait
scas
add
and
test
or
fwait
mov
add
sbb
pop
daa
test
pop
ficoms
stos
outsb
and
pop
add
mov
inc
inc
cmp
jge
data16
jp
sahf
pop
cs
ror
mov
insb
jns
add
adc
push
push
mov
or
adc
lret
xor
sgdtl
add
jne
sti
insb
imull
add
dec
movaps
mov
mov
sti
push
aam
inc
ds
pop
cmp
inc
add
shlb
jnp
adc
fildl
and
add
test
adc
icebp
push
daa
mov
xchg
pushf
test
das
mov
jb
add
push
subb
cwtl
pop
gs
test
inc
cltd
inc
popa
aam
pop
push
cmp
rorb
jo
sahf
pop
mov
fstpt
insl
popa
jo
add
lret
mov
jnp
inc
xchg
xchg
fildl
jb
cmpsb
in
mov
dec
push
push
leave
mov
mov
inc
pusha
stos
pop
mov
mov
popa
or
test
dec
pusha
xchg
or
ss
leave
shl
pop
mov
sbb
sti
rorb
push
fnclex
les
adc
fimull
inc
push
int3
int
sbb
dec
sbb
jge
daa
mov
jo
out
sbb
sub
and
dec
mov
and
mov
cmp
je
mov
jmp
sub
cmp
mov
fisubl
cmp
adc
jp
mov
orl
or
push
dec
mov
loop
pop
add
mov
daa
mov
not
and
mov
mov
adc
ret
or
testb
mov
pop
jae
imul
sbb
not
and
mov
and
jbe
aam
mov
lods
call
xor
shrb
add
btr
adc
pop
dec
jns
call
xor
mov
mov
adc
shl
ret
mov
sbb
and
pop
and
lcall
fstpl
push
fstpt
mov
cmp
mov
and
adc
stos
lods
push
or
fistpl
pop
rolb
je
loop
idivb
jl
sub
dec
sti
lea
mov
sbb
mov
lret
or
sbb
pop
ja
mov
add
add
pop
jb
jmp
outsb
filds
pop
push
add
pop
add
jae
cli
out
enter
or
cmp
imulw
mov
sub
pop
fstpt
jae
add
mov
mov
push
fidivrl
sub
movsb
cmc
outsb
cltd
xor
sub
imul
mov
scas
pushf
les
sbb
jbe
mov
sbb
testb
fimuls
jbe
mov
inc
add
add
add
sbb
loopne
insb
add
sub
adcl
nop
xlat
inc
push
sar
sti
pushf
xlat
fwait
dec
cmp
call
mov
xchg
popf
aas
or
push
xchg
push
xlat
dec
pop
cmp
fwait
pushf
xchg
fnsave
sub
sbbb
dec
addl
es
in
push
int3
insl
push
add
or
std
ret
xor
outsb
adc
add
aam
inc
push
shll
call
dec
sub
lods
xchg
mov
xchg
pop
and
lods
ss
mov
mov
sub
jg
or
je
push
fs
dec
mov
int
mov
or
push
xor
xlat
ljmp
sahf
mov
xchg
or
dec
or
pop
xchg
in
xor
dec
fisttps
cmp
pushf
andl
sahf
sbb
and
cwtl
dec
or
inc
js
mov
insb
xlat
leave
pop
lcall
xchg
insl
cmp
data16
inc
sub
les
andb
pop
fldt
mov
xor
test
push
shl
jb
add
fisttps
sahf
push
mov
push
out
popa
sbb
pop
enter
push
subb
push
xchg
iret
jo
xchg
inc
adc
adc
or
rcrb
cltd
or
xor
adcl
inc
fs
jae
mov
dec
mov
cwtl
cmp
cs
inc
or
jle
xchg
xchg
gs
or
or
mov
dec
imulb
aam
fcmovnb
inc
popf
inc
mov
data16
inc
in
sbb
ud0
inc
loopne
mov
sahf
pop
dec
jmp
sbb
jne
add
out
incl
aas
or
hlt
rolb
dec
mov
sbb
or
adc
aaa
imul
in
mov
outsb
nop
add
or
cld
add
nop
xlat
adc
mov
mov
xor
adc
xor
cmpsl
push
ljmp
insl
out
jae
hlt
inc
lahf
push
jne
mov
faddl
sub
add
sbb
add
jle
or
ret
and
std
xchg
mov
gs
in
jbe
push
mov
add
fnstenv
scas
mov
jnp
cmp
and
or
push
loopne
xchg
and
dec
adcb
or
sahf
fsubs
sub
sub
push
fmull
test
push
add
mov
test
or
ja
insb
and
xor
mov
fsubrl
pop
mov
lods
mov
les
daa
hlt
sbb
pop
mov
cmc
cmp
add
stos
jge
lods
push
cltd
xchg
and
inc
push
push
mov
arpl
mov
fsubrl
xor
insb
mov
or
push
js
in
jmp
jae
jne
lods
mov
or
daa
adc
cli
xor
sub
inc
fcomip
mov
push
mov
inc
fsubs
xor
adc
mov
adc
test
dec
xchg
cmp
jne
lods
or
xor
inc
mov
pop
add
or
rolb
test
ljmp
nop
nop
lock
test
and
xor
cwtl
popa
outsb
xchg
outsl
sbb
mov
and
test
cmp
or
inc
insl
mov
cmp
adc
push
adc
rclb
enter
bound
popa
cwtl
iret
fcompl
and
cmc
stos
pop
loopne
sbb
pop
fs
test
inc
clc
push
xchg
push
push
stos
xchg
or
mov
add
jp
xchg
mov
les
pop
inc
push
cmp
mov
sbb
inc
sbb
cmpl
int3
jno
sbb
inc
fs
adc
loope
adc
sbb
pop
xor
in
xchg
sub
xor
loopne
lock
aas
or
iret
adc
push
inc
test
lret
inc
enter
sarl
cs
movsb
add
call
or
into
mov
rclb
mov
or
or
mov
or
aaa
mov
adc
jo
push
cmc
enter
out
pop
xor
push
adc
mov
rcrl
jae
sub
pop
sub
jge
push
mov
out
inc
movsb
test
add
jp
cmpsb
call
xor
clc
icebp
mov
xchg
int3
or
pop
add
cmp
les
mov
xlat
es
daa
push
or
cld
mov
xor
mov
or
dec
dec
or
fisubrl
fwait
mov
fs
sub
hlt
mov
das
jecxz
lods
push
or
push
adc
movsb
inc
push
fstps
add
call
add
jb
xor
xor
mov
xor
lock
mov
jbe
mov
pop
or
lea
cld
dec
dec
stc
adc
jmp
je
jmp
movsl
loop
add
inc
push
sbb
or
cmp
jmp
pop
mov
addb
pop
lea
aas
push
aaa
loop
sbb
or
jmp
push
insl
fisttpl
adc
sahf
adc
push
inc
outsl
repnz
or
sbb
cmp
add
sub
hlt
lock
mov
add
out
add
inc
pop
push
inc
jg
pop
rolb
mov
add
sbb
push
ss
mov
lds
xor
pop
lcall
adc
pop
sub
dec
adc
sub
int
mov
pop
or
aas
insl
js
ret
push
je
mov
sub
ret
ja
mov
int
jnp
cmp
test
lret
or
imul
inc
or
mov
icebp
xor
rolb
mov
dec
cmp
jb
mov
mov
jp
pop
pop
mov
xor
or
cmpsb
and
mov
push
test
mov
pop
dec
in
iret
jne
jp
int3
sub
test
movb
xchg
aad
xchg
nopl
aaa
mov
fdivs
into
jle
jg
shlb
div
addl
mov
xchg
or
jne
mov
fsin
sub
cmp
cmp
ret
push
lea
mov
push
dec
pop
stos
lahf
cmp
cmp
outsl
faddl
lea
jl
or
jo
or
cmpsb
outsl
or
andb
add
add
inc
adc
sbb
pop
lret
push
adc
insl
push
ret
jl
sub
mov
sbb
pop
mov
add
in
into
pop
add
jnp
je
jge
jae
fildl
popf
fwait
mov
and
es
nop
or
sub
dec
ret
or
iret
test
adc
lahf
mov
pop
mov
cmpsl
dec
push
or
push
jmp
xchg
arpl
mov
sti
add
mov
push
stos
or
add
fcmovnb
adc
add
xchg
lahf
lock
icebp
xchg
sub
add
mov
adc
sub
inc
mov
arpl
push
pop
sub
in
pusha
mov
adc
push
fsubr
sbb
in
cmp
out
inc
jmp
enter
out
fcmovu
stos
mov
push
sbb
sbb
dec
inc
imul
xchg
stos
rorl
jnp
jmp
ja
sbb
nop
out
add
andb
or
mov
ljmp
bound
inc
cmp
rclb
or
mov
imul
inc
xchg
adc
jle
adc
leave
je
lods
orl
ljmp
push
daa
out
insl
pop
sbb
fistpl
adc
clc
jbe
fldcw
adc
xor
sub
insb
daa
cwtl
push
lods
inc
adc
mov
stos
fsubrl
inc
xchg
cmp
or
ljmp
mov
push
add
mov
xchg
xor
pop
sbb
xchg
mov
add
add
mov
rcrb
adc
roll
bndstx
or
sbb
test
scas
iret
mov
push
push
adcb
inc
daa
jb
xchg
and
push
dec
pushf
xor
loopne
dec
push
inc
scas
movsb
pushl
aaa
sbbl
pop
xor
mov
add
or
movsl
mov
scas
push
jbe
xor
fildll
inc
xor
push
dec
cwtl
mov
jae
add
negb
fldcw
lock
cmpl
clc
adc
orl
insb
push
fs
pop
pop
or
enter
dec
xor
and
and
cmp
xchg
cmp
scas
call
popf
and
inc
test
or
sub
cli
dec
mov
jo
hlt
push
cmc
xor
and
ret
daa
push
inc
mov
mov
xchg
cmp
xor
arpl
sub
add
xchg
xchg
pushf
mov
iret
mov
sbb
push
mov
sub
push
or
fisttps
out
push
and
dec
rcl
pop
and
pop
sub
lcall
popf
ljmp
xor
cmp
sete
neg
sbb
jae
lock
hlt
push
lods
xor
cmp
jb
adc
cmp
jl
pop
jg
pop
inc
pop
fucomi
adc
pushl
add
adc
inc
cmp
jl
cmpb
fistpl
pushl
bound
mov
ss
cmp
mov
jne
or
cmp
fcos
jecxz
aad
push
and
mov
out
inc
sub
pushf
push
lock
icebp
push
or
or
inc
jle
insb
mov
nop
push
sub
push
sub
clc
in
shrl
and
add
jecxz
mov
or
daa
mov
jg
jg
push
cmp
xor
mov
adc
jbe
imul
out
mov
push
inc
add
pop
ret
int
xchg
jge
in
sbb
movb
mov
mov
push
lods
xchg
or
inc
cmp
sti
push
and
inc
dec
push
xadd
clc
stos
test
lds
popa
jmp
dec
sbb
xor
sbb
jnp
push
nop
shr
push
sbb
pop
or
jl
and
inc
xchg
inc
sbb
add
mov
add
adc
insb
sarb
cmp
inc
gs
inc
mov
inc
bound
cmp
xchg
insl
nop
adc
fdivrl
aam
leave
jge
movsl
movsl
fcoml
nop
mov
mov
inc
xorb
insl
adc
ljmp
in
adc
pusha
mov
stos
ds
push
imul
data16
lcall
movsb
sbb
lock
aam
push
imul
rolb
add
ljmp
popa
jmp
push
fsubrs
or
cmp
in
pop
bnd
xchg
push
inc
mov
dec
mov
inc
jae
rorb
pop
inc
xchg
push
push
mov
std
lea
push
dec
jns
test
imul
bound
dec
or
stos
sahf
shr
add
xlat
adc
rcrb
sbb
or
jb
sahf
mov
jno
hlt
fbstp
jp
xorb
inc
cmp
pop
clc
jmp
pop
push
iret
fdivp
js
xchg
mov
mov
mov
iret
or
push
mov
or
fidivrs
ja
cs
or
sarl
into
mov
popf
adc
rorl
clc
add
jne,pn
call
ret
mov
imul
mov
add
sbb
push
inc
adcb
push
rorl
push
sti
mov
xor
aam
sbb
jnp
lret
inc
jne
adc
sti
aaa
pop
and
test
jne
mov
fstps
fisttpll
mov
std
fimuls
arpl
add
push
xor
out
add
dec
jle
add
lea
adc
inc
jle
pop
stc
jge
inc
pop
add
data16
cmp
sub
aad
or
test
push
add
popa
pusha
push
andb
pop
sub
push
inc
cmpsb
mov
or
add
jae
gs
arpl
test
je
xor
rcrl
add
stos
sbb
mov
mov
subb
push
test
adc
inc
rorb
pop
sahf
in
add
test
add
push
and
shl
push
sbb
andb
mov
iret
mov
add
addb
pusha
test
pop
and
cmp
jge
jl
pop
in
cmp
push
cmp
add
flds
outsl
rcrl
pop
mov
push
add
pop
mov
mov
pop
shll
stc
rclb
inc
xchg
vmovupd
pusha
mov
pop
mov
mov
cmpl
shll
sbb
push
jmp
sbb
jmp
lea
cmp
jns
cmp
jp
movl
push
daa
jne
cmp
push
push
adc
adc
int3
dec
lcall
ret
jmp
sti
sbb
adc
adc
imul
adc
push
mov
loope
add
push
push
scas
gs
shrb
inc
mov
sti
mov
cmpsl
js
push
les
pusha
sub
mov
pop
hlt
and
mov
fsub
andb
adc
sbb
pop
inc
lock
push
adc
adc
or
or
push
add
jg
mov
add
or
nop
insl
icebp
shlb
neg
arpl
sub
dec
mov
clc
fdivrs
and
lahf
jl
movswl
push
lds
mov
dec
test
push
add
shll
jge
mov
ror
ret
jmp
shrl
push
jb
test
mov
lds
inc
lahf
push
fcompl
mov
cmp
outsb
mov
scas
aam
inc
sbb
cmp
cmp
sbb
lea
lods
loopne
lds
sub
xor
push
adc
pop
addr16
fs
mov
fwait
push
push
cmpl
jb
frstor
xchg
add
pop
or
lret
mov
mov
cltd
sbb
test
mov
xchg
fcmovnb
sub
add
push
pop
arpl
add
and
add
test
sub
inc
cs
icebp
pushl
mov
mov
aam
imul
sub
add
arpl
push
cmp
lods
mov
out
in
xor
xor
fnstenv
lea
sbb
aaa
addr16
rcrb
adc
pop
sub
movsb
ljmp
mov
cvtdq2ps
jnp
mov
push
scas
cmp
jl
call
mov
fs
movsb
popf
imul
loop
cmpl
scas
insl
adc
adc
rcll
stos
jo
mov
jo
or
sbb
add
or
push
sbb
ret
ds
add
and
jmp
or
push
sub
or
or
loopne
or
sub
adc
dec
ja
fadd
inc
add
mov
sbbl
sub
xchg
pop
jl
fwait
xchg
cwtl
push
rcr
or
rcrl
lock
inc
or
lods
lock
sbb
xor
add
sbb
pop
clc
adc
sub
subl
es
sbb
lds
cmp
push
not
add
mov
lds
arpl
push
add
clc
sbb
xor
or
pop
js
shr
or
xchg
inc
dec
sub
push
out
rorb
jp
mov
shr
rorb
adc
outsb
pop
add
inc
ret
mov
xor
add
ja
jmp
add
ss
dec
fs
inc
adc
xor
add
out
or
add
repz
add
or
in
cmpsb
dec
repz
xor
jle
rcrl
or
sti
sahf
shll
stos
or
test
add
ret
lods
rorb
and
mov
loop
addr16
push
add
movsl
sub
mov
sbb
add
mov
xor
hlt
add
mov
fisubs
and
ljmp
jns
jae
and
mov
mov
or
sbbl
sbb
popa
imul
lcall
into
add
push
jne
outsl
lret
das
and
insl
jo
imul
mov
jae
pop
shl
jmp
add
or
loop
jle
mov
into
adc
or
les
push
loopne
dec
sbb
sub
std
push
mov
sbb
xchg
fisubrs
xor
xor
pop
jp
lds
jne
test
int3
lea
dec
rorb
lea
cmp
stos
and
inc
loop
hlt
jp
mov
mov
add
fstl
mov
popa
inc
mov
call
and
stos
popa
adc
add
pop
inc
sbb
mov
aam
in
testb
lea
push
movb
ret
pusha
pop
mov
sahf
jle
pusha
jg
push
push
pop
pop
dec
popa
mov
sbb
mov
pop
mov
mov
lea
xchg
pop
sti
push
shr
pop
mov
jae
jecxz
std
mov
jne
clts
add
orl
adc
sub
decl
out
scas
pop
cmp
cmp
or
mov
inc
adc
add
mov
add
inc
aaa
mov
add
jno
popa
sbb
xor
mov
dec
cmp
jnp
jb
mov
jae
push
add
or
push
add
enter
add
push
pop
or
or
or
jb
and
sar
add
mov
enter
in
rcl
leave
sbbl
push
mov
test
sbb
fisubrl
pop
add
out
sbb
sbb
fcomps
dec
xchg
sbb
pop
or
xchg
rcrb
or
enter
push
mov
int
rcrb
ret
call
xor
add
call
imull
gs
imul
lods
sbb
adc
adc
sti
pop
push
loop
and
fstp
out
add
add
dec
sub
stos
cmc
dec
iret
xchg
jbe
loop
add
ss
jnp
or
test
stos
pusha
ss
test
stos
push
or
jne
mov
adc
hlt
sub
inc
mov
add
xchg
pop
es
or
or
je
cli
xor
in
pusha
fmul
mov
push
sbb
and
cmp
and
sub
and
xchg
rclb
pop
xorl
bound
mov
pop
ficoms
inc
mov
repnz
or
pop
loopne
cmpsb
test
xor
jg
xchg
insl
jae
pop
jl
add
stc
mov
add
jle
pop
sbb
clc
inc
pop
mov
mov
icebp
xchg
stos
cld
mov
mov
insl
data16
ss
mov
pop
push
test
loop
sub
xor
sub
adc
sbb
es
loope
mov
inc
push
mov
daa
lret
leave
imulb
xor
inc
cmp
jo
and
sbbl
pop
sub
push
ret
jae
and
xchg
adc
pop
je
xor
cmp
or
jnp
shrb
or
rorb
xchg
ret
out
lea
shr
push
repz
bound
or
add
mov
test
mov
mov
or
dec
mov
or
add
push
and
cmp
xchg
mov
push
and
in
or
mov
mov
push
mov
sub
stc
pop
sbb
jmp
sbb
xor
jo
les
jae
and
jecxz
aas
inc
sub
jbe
test
ficomps
and
push
aad
push
sti
idivb
pop
mov
das
nop
mov
aam
fwait
pop
and
inc
movzbl
inc
loopne
das
ret
push
adc
ss
aaa
push
fcomps
inc
mov
sbb
pop
mov
push
sbb
cmovo
push
push
ficoml
enter
dec
daa
inc
das
fsubrl
outsb
or
pop
subl
ret
cmc
es
inc
testl
and
or
mov
ret
add
mov
jmp
sub
popa
arpl
cmpsb
ficoms
repz
neg
xor
pop
mov
push
jmp
add
inc
adc
ss
arpl
dec
pop
int
push
shll
icebp
dec
jg
sbb
ret
mov
lret
into
outsl
inc
pop
inc
data16
hlt
jmpw
mov
fnstenv
mov
cmpsl
adc
inc
lahf
imul
sbb
add
in
shrb
jl
or
xchg
sub
popw
jmp
and
rorl
lds
ret
in
jbe
or
inc
es
cmp
sarb
sahf
xor
pop
outsl
arpl
jl
or
in
mov
call
ljmp
mov
mov
sbb
pop
scas
mov
pop
nop
inc
out
mov
fmuls
js
mov
shr
jp
cli
add
lret
jg
dec
add
test
add
inc
xchg
ja
dec
pcmpeqw
dec
pcmpeqb
push
jge
fsubrs
rcrb
sti
or
dec
or
or
mov
or
iret
js
popa
and
adc
repnz
mov
add
pop
js
leave
push
enter
sbbb
add
adc
jle
out
xchg
xchg
dec
sbb
jno
cmp
push
mov
xor
mov
or
inc
mov
or
aad
cmp
ret
sbb
xchg
cld
mov
mov
das
pushf
mov
mov
xor
in
outsb
pop
mov
adc
outsl
and
and
sub
dec
dec
sub
shl
fnstcw
sub
add
add
or
les
or
jge
inc
shll
xchg
out
adc
jne
out
mov
aas
aaa
push
or
push
push
mov
pop
add
imul
ret
ret
fstps
push
mov
xor
adc
aas
pushf
insl
and
cmovb
adc
ss
push
setle
xor
adc
out
fcomip
and
jo
sbb
out
jl
sbb
cmp
add
push
sbb
and
push
fdivs
adc
push
sub
or
mov
pop
sub
xchg
and
mov
push
add
add
or
jnp
jne
mov
icebp
pop
pop
fcmovnbe
jne
lods
add
adc
mov
fidivs
and
dec
pop
dec
incb
aam
add
add
stos
adc
xor
xchg
jmp
push
les
mov
aas
je
sti
or
fistpll
inc
add
sbb
cmpl
push
jb
pop
pop
fidivs
sub
add
je
dec
je
pop
je
and
addr16
jno
cltd
pusha
ret
je
inc
or
rol
push
cmp
dec
cmpsb
in
dec
adc
push
mov
sbb
pop
mov
adc
add
lcall
cmp
fisttpl
cmp
xor
push
sbb
imul
push
xor
shlb
dec
push
ljmp
imul
adc
shll
pop
insb
fcom
mov
insl
push
mov
cmp
dec
inc
imul
mov
sub
or
cmp
xchg
mov
ss
pop
cmp
or
jmp
mov
xchg
addl
inc
adcl
xchg
adc
or
mov
or
subl
test
sbb
sub
daa
inc
jno
test
mov
mov
adc
adc
aaa
xor
vdivpd
push
push
push
mov
add
xchg
mov
inc
in
aam
dec
sbb
cmp
ret
pop
out
lret
ds
lea
je
jl
loopne
xchg
rorb
mov
fcomps
adc
xchg
lods
inc
imul
es
fwait
orl
jo
or
je
icebp
lds
push
inc
clc
adc
fdivrs
nop
push
js
push
push
cmp
je
pop
mov
add
outsb
addr16
sub
push
mov
jbe
and
cmp
into
ljmp
and
ds
jne
cmp
xor
adc
xor
pop
cmp
add
jl
mov
sbb
xor
imul
lods
sbb
jb
shrl
jo
repnz
cmp
jo
push
out
addb
sub
rcrb
mov
sbb
push
cmp
test
pop
xchg
mov
fisubs
cmp
inc
inc
or
cmp
jne
pop
inc
push
sbb
and
sbb
adc
sar
das
repnz
lds
fsts
movsl
fwait
mov
decb
xchg
mov
mov
pop
or
jle
jge
aam
lret
sbb
and
mov
jns
pop
mov
es
mov
loop
or
sub
mov
in
jo
iret
pop
jb
jmp
push
insl
dec
sbbb
xor
inc
push
jno
repnz
sti
iret
add
call
add
je
outsb
jecxz
lret
ret
in
xor
lcall
stc
mov
stc
add
movzbl
int
adc
cmpsl
movsl
jae
cli
scas
shrl
and
inc
mov
sub
mov
jbe
jo
decb
pop
xchg
pusha
cli
pop
push
add
cmp
ja
push
stc
insl
xchg
movsb
aaa
adc
add
push
aam
insb
and
push
lods
lret
popa
test
or
cmp
ja
les
into
push
leave
dec
into
pop
fbld
dec
jne
pop
daa
cmp
lret
add
mov
cmpl
test
xor
lds
mov
xlat
mov
stos
add
xchg
sbb
push
dec
dec
mov
insl
xchg
fiaddl
adc
subl
lds
sub
push
and
mov
jmp
add
add
mov
ja
xor
hlt
sbb
add
test
addl
shrl
xchg
pop
das
add
push
ja
sub
jno
sub
sbb
mov
ja
pop
add
leave
pop
ljmp
cmp
cmp
add
adc
dec
mov
mov
andb
or
push
outsb
ja
fcomi
sub
gs
lds
lret
sbb
into
xchg
mov
lods
cmp
push
adc
lods
add
add
dec
and
mov
inc
mov
es
cmp
fdiv
leave
fs
fiadds
lcall
xchg
or
add
or
push
xor
inc
or
dec
lock
data16
cmpsl
pop
into
popa
loop
push
xchg
cmp
inc
ss
sub
xchg
cmp
fmull
push
int
add
or
push
pop
jmp
scas
pusha
pop
out
push
and
pop
sub
cmp
or
sub
insl
out
push
cwtl
pop
or
imul
mov
scas
inc
ja
pushf
or
ljmp
cmovs
addl
xchg
imull
mov
or
add
inc
shlb
test
fdivrl
inc
arpl
adc
mov
or
loop
inc
arpl
pop
mov
fwait
jnp
ret
or
dec
cmp
dec
and
stos
pop
sub
adc
addr16
pop
cmp
ja
cmp
or
jo
fdivp
push
loope
inc
dec
xor
pusha
jmp
loop
jae
in
in
outsb
pop
and
cmp
inc
jne
inc
pushf
inc
sbb
enter
pop
xchg
push
jb
ficoms
dec
inc
jnp
cmp
mov
push
lahf
mov
cld
sub
xchg
inc
cmp
dec
or
dec
roll
call
and
orl
hlt
and
adcl
je
outsl
dec
inc
lret
and
pop
notb
and
int
adc
lahf
push
cs
pop
and
xchg
pusha
or
pusha
addl
push
shlb
sub
aad
sbb
and
hlt
adc
mov
sbb
sub
sub
js
pop
push
pop
loopne
pop
mov
or
movsb
pop
test
in
gs
mov
imul
xchg
je
sub
push
ss
xor
ja
mov
pop
out
push
inc
xor
jae
jg
stos
movsb
icebp
push
jne
int3
fs
xor
inc
pop
jmp
xor
lods
insb
shlb
mov
inc
push
xchg
dec
outsb
adc
leave
jb
enter
cld
add
in
outsb
and
je
mov
jp
xchg
hlt
xor
adc
dec
adc
mov
stos
push
mov
xchg
lock
mov
sbbl
add
mov
and
adc
enter
cltd
xor
xor
testl
ret
cmpxchg
idivb
scas
int
js
lea
imul
inc
inc
cli
xor
mov
sbb
out
jl
adc
ss
and
adcb
lcall
mov
mov
hlt
in
mov
or
pop
add
mov
or
or
or
mov
fcmove
and
mov
adc
sti
das
mov
mov
lcall
pop
fists
repnz
mov
pushf
cmp
ja
inc
push
das
sbb
aas
fwait
sub
stc
mov
pcmpgtd
pusha
das
jbe
repz
mulb
mov
jle
adc
jne
nop
push
inc
xchg
add
pop
sub
mov
aam
inc
in
add
fsubrs
dec
add
sub
or
lret
and
add
sbb
jle
pusha
cmp
xchg
loopne
lret
xchg
add
xchg
inc
jo
insl
sbb
adc
cmp
push
sub
lea
sahf
add
push
add
inc
stos
push
scas
pop
imul
xchg
and
les
mov
lahf
adc
mov
hlt
push
adc
ja
adc
lods
jl
add
mov
outsb
sub
add
mov
mov
jmp
stos
adc
lcall
mov
sub
xchg
and
inc
adc
mov
mov
mov
mov
push
mov
aaa
push
jmp
sub
mov
or
push
or
int
cmp
jge
inc
subl
arpl
mov
mov
rolb
cmp
je
popa
jno
loopne
and
sbb
mov
lea
push
cmp
stos
cld
push
mov
jg
fmull
ds
leave
or
mov
out
mov
insb
xchg
cmp
jmp
lds
mov
mov
adc
fdivp
aad
mov
mov
data16
inc
cmp
ret
lods
pop
pop
js
stc
call
jae
in
push
inc
fstpt
imul
push
je
fnstcw
cmp
xchg
ljmp
incb
add
jle
outsl
jae
into
cwtl
dec
outsl
lock
jo
rorl
mov
arpl
pop
push
xchg
int
cmp
xorb
and
leave
lock
inc
mov
je
jmp
or
mov
dec
test
mov
mov
push
mov
sub
push
sbb
lock
add
jmp
js
add
int3
adc
shll
xor
aas
test
imul
jnp
or
lsl
pop
sarb
sub
daa
or
cmp
movsb
in
push
loopne
icebp
jmp
mov
sar
xor
add
jl
mov
pop
into
push
dec
cmp
sub
movsl
xchg
sbb
or
subl
ret
inc
and
cwtl
aaa
insb
xchg
pop
sub
push
inc
in
repz
mov
pop
ds
daa
sub
test
ret
push
mov
push
pop
cmp
mov
xor
mov
jmp
add
mov
jo
test
mov
ja
sub
in
in
mov
inc
popf
ja
nop
and
jo
andb
iret
inc
test
inc
push
or
enter
roll
in
pop
sbb
pop
add
jb
pop
repz
mov
dec
mov
jle
orb
mov
push
lcall
mov
xchg
pop
inc
dec
add
jg
sbb
into
jle
fidivl
jmp
jmp
cmp
jle
push
rorl
cmp
mov
es
fistpll
shr
push
xchg
je
mov
xchg
push
and
out
fmuls
filds
or
sbb
cwtl
mov
sbb
ret
or
insb
out
and
push
or
cmpsb
mov
insl
or
enter
push
in
sbb
add
mov
fisttpll
sbb
jb
jb
or
inc
movswl
sbb
and
and
push
fidivrl
and
ss
jle
cmp
cmp
fimuls
mov
cmp
push
aad
cmpb
dec
insb
cmpl
mov
sbbb
xchg
dec
insb
gs
movsl
jp
jns
or
mov
push
add
mov
mov
jge
nop
sbb
mov
stc
or
push
fstp
push
fs
xorl
add
push
jne
subl
add
dec
jl
ljmp
and
jae
sub
or
adc
adc
scas
in
sub
adcb
sbb
sub
sbb
or
dec
mov
das
add
push
std
sub
jmp
fcmovnbe
mov
inc
mov
movsb
cwtl
adc
sub
jmp
dec
pop
cmp
and
call
cltd
inc
mov
mov
adcb
ror
ret
and
leave
add
xchg
pop
and
je
inc
adcl
lret
xchg
or
fildl
sbb
mov
fs
mov
jae
stc
adc
leave
sbb
loopne
jmp
and
lock
ljmp
add
pop
mov
or
push
jns
dec
dec
sbb
sbb
ljmp
mov
movsb
mov
sti
add
icebp
mov
mov
std
pop
sub
jge
inc
inc
push
mov
cmp
imul
lret
out
dec
push
inc
jae
or
pop
mov
inc
push
adc
pop
sbb
daa
daa
addr16
sar
or
sub
and
call
pop
push
ficomps
loop
push
adc
sbb
xchg
insl
pusha
dec
mov
leave
incl
or
add
ret
pop
movsb
fs
or
mov
xor
add
push
ret
mov
gs
into
cmp
call
push
inc
xchg
insl
jb
hlt
shl
or
push
pop
fstl
repnz
push
sar
enter
sarl
pop
sti
and
mov
outsb
mov
cmpsl
mov
mov
and
aam
adc
inc
dec
test
inc
in
inc
into
and
jne
mov
mov
lret
mov
mov
pop
arpl
xor
out
aas
dec
adc
mov
jmp
push
pop
pop
or
out
jmp
lcall
adc
xchg
mov
test
out
cwtl
cwtl
xchg
in
mov
push
push
out
mov
or
xor
or
shlb
sbb
pop
xlat
arpl
jo
jnp
repnz
cwtl
add
popf
inc
test
fcmovnu
popf
mov
or
int
push
mov
mov
ljmp
jg
lods
adc
lret
or
dec
add
sbb
cmp
jle
mov
push
movsl
inc
mov
adc
mov
sbb
and
pop
pop
mov
push
pop
iret
cmpsb
dec
lret
mov
xchg
rorb
loopne
sub
inc
jg
jle
test
jbe
and
xorb
out
adc
and
fistpl
andl
lock
shr
shrl
inc
outsl
decl
mov
jmp
lea
push
lea
sbb
cmp
push
mov
imul
add
push
add
or
xchg
jae
and
jecxz
push
add
adc
lret
sbb
inc
and
leave
mov
push
cltd
loope
xchg
in
push
jb
inc
mov
jbe
and
inc
push
mov
das
push
mov
xchg
ljmp
sarl
shll
js
mov
pop
pop
sti
adc
test
mov
mov
or
cmp
lret
xorb
sbb
push
inc
jne
gs
mov
mov
lods
dec
or
or
push
fists
fcompl
pcmpeqw
jbe
mov
or
jb
rorb
sbb
xchg
or
dec
and
test
aas
pop
icebp
lcall
mov
xor
roll
pop
or
inc
mov
adc
and
mov
test
push
fnstsw
mov
loopne
shl
sar
lahf
mov
inc
inc
add
push
adc
sbb
jns
push
ds
sub
mov
push
mov
xchg
out
sbb
and
push
or
mov
mov
addb
and
jl
add
inc
inc
aas
or
cwtl
xchg
mov
popa
rol
ljmp
fsts
jno
mov
or
pop
cmp
mov
and
scas
sahf
inc
jcxz
into
shr
cltd
fsubl
add
push
add
sbb
ja
push
xchg
pop
inc
sub
jle
popa
and
popf
sti
mov
or
popf
cmp
scas
mov
iret
iret
adc
xchg
or
pusha
lcall
lret
sbb
mov
adc
scas
hlt
mov
test
push
pushf
sbbb
jbe
mov
cmpsb
jo
adcb
out
add
pop
outsl
mov
xchg
adc
mov
xchg
movsb
lcall
inc
stos
or
or
jne
dec
dec
insl
push
enter
sub
and
jnp
push
push
sub
add
cld
das
add
jecxz
shr
or
add
dec
cmpb
add
lock
or
adcl
jne
pop
mov
sub
movsl
adc
sbbl
cmc
pop
mov
and
inc
sub
bound
test
sub
jle
in
add
jmp
xor
bound
pusha
dec
adc
lods
das
mov
pop
and
add
mov
xchg
and
enter
daa
fwait
xchg
mov
rol
mov
ja
and
push
adc
inc
sub
sbb
not
sub
sbb
sbb
push
cmovbe
pushl
xchg
xchg
popa
call
add
or
adc
in
mov
rolb
ret
cmp
arpl
and
std
jp
addr16
push
in
call
cmp
and
sahf
mov
les
in
push
adc
pusha
dec
inc
dec
testb
rclb
adc
mov
push
adc
sbb
bound
and
ss
push
sbb
mov
sti
mov
cli
ljmp
add
push
inc
loopne
test
movsl
cld
inc
repnz
xchg
nop
mov
or
push
add
or
xor
xor
into
and
inc
popa
je
xor
jg
pop
sub
dec
imul
push
imul
push
std
jae
inc
jne
jb
push
jo
pushl
jo
outsl
adc
push
push
inc
outsl
insb
sbb
inc
add
and
mov
insl
push
outsl
outsl
je
pop
jae
xor
inc
dec
inc
cs
or
jae
mov
push
xchg
add
and
gs
jo
dec
outsb
cmp
pusha
outsl
scas
xchg
stos
inc
idivl
lea
xor
idiv
incl
inc
xor
inc
inc
inc
sub
sub
xor
inc
inc
add
xor
xor
inc
jge
or
rorb
inc
fcompl
or
dec
xor
dec
add
pop
add
pop
jb
lret
xchg
in
adc
pop
lret
cmp
xor
adcl
and
dec
sub
and
adc
mov
int3
enter
fs
sarb
lods
test
insl
fs
mov
xchg
mov
mov
mov
add
add
add
or
adc
dec
cltd
xor
push
in
mov
adc
sbb
push
pop
lock
pop
xor
sarb
cmp
push
dec
add
xchg
out
and
jmp
and
or
popaw
insb
push
cmp
je
jl
xchg
cmp
xchg
je
nop
sub
sbb
dec
mov
add
je
sbb
js
dec
mov
iret
imul
mov
data16
adc
xor
pop
push
xor
xchg
hlt
ret
imul
or
cmp
mov
or
loopne
sub
push
adc
rolb
mov
inc
and
sbb
cmc
and
insb
or
mov
dec
inc
insl
mov
or
inc
mov
cs
pop
mov
scas
in
cli
add
sub
lock
cmp
xchg
mov
enter
mov
outsl
sbb
inc
ds
inc
xchg
out
add
or
mov
sti
sbb
push
sbb
dec
push
add
enter
sub
add
xor
add
xor
xor
cmp
xchg
and
add
sub
xchg
test
and
sbb
mov
mov
pop
add
dec
push
jl
and
inc
ror
jo
mov
xchg
stc
fs
inc
mov
xadd
xor
in
push
or
enter
xchg
sub
or
push
sub
and
pusha
inc
aam
jo
ljmp
fdivs
cld
push
lock
add
and
dec
sbb
and
adcl
mov
add
or
aad
push
push
dec
xlat
inc
inc
rolb
enter
shlb
movsb
xor
ret
push
dec
pop
orb
repnz
es
das
or
pop
outsl
mov
mov
repz
mov
cmpsb
cmpsl
push
cmpsb
fmull
mov
add
adc
xor
add
or
add
sbb
rorb
and
add
dec
inc
aam
add
int
int
repnz
enter
mov
into
pmulhuw
shr
mov
stos
sub
xchg
jnp
clc
sti
jne
push
cmp
add
shrb
push
cmp
add
dec
fcompl
mov
add
shr
inc
mov
adc
data16
rcrb
sbb
adc
mov
add
push
inc
les
int3
in
inc
inc
xor
xor
pop
mov
mov
and
xchg
pushf
dec
push
fists
clc
inc
push
or
cmpb
sub
add
adc
mov
fnsave
add
repz
imul
mov
ss
insl
imul
ljmp
sbb
ret
call
mov
push
lea
jg
and
adc
push
icebp
call
or
push
inc
faddl
in
mov
in
and
push
aas
or
mov
mov
mov
jge
dec
pop
mov
enter
pusha
mov
mov
jnp
insb
movq
push
repnz
adc
push
pop
mov
mov
aad
mov
les
mov
inc
fbld
je
push
push
xchg
aad
push
movb
mov
lret
jle
mov
inc
push
imulb
inc
lock
sbb
idivl
jge
mov
sub
or
adc
pop
push
jb
jns
outsb
nop
andl
les
push
inc
lahf
roll
jnp
xor
adc
push
sahf
add
jecxz
jo
and
mov
daa
roll
shr
inc
rcrl
divl
mov
or
inc
cmp
ljmp
loopne
adc
add
leave
pop
add
mov
add
push
inc
fisttpl
fcompl
push
in
enter
hlt
fcoms
inc
mov
loopne
lds
or
or
push
and
and
call
lahf
idivl
xchg
or
xor
or
pop
addl
push
and
pop
jnp
shrb
and
add
pop
leave
psubw
mov
push
push
add
inc
mov
inc
push
dec
mov
inc
mov
cmpsb
outsl
js
inc
push
jbe
je
pop
or
rcr
movsl
jb
outsl
sbb
inc
dec
cli
mov
mov
dec
jae
mov
aaa
aaa
or
hlt
mov
or
push
add
fmuls
inc
popa
loopne
add
loopne
cmpsl
mov
or
lock
pop
mov
sarb
int
cld
mov
fs
xchg
cmp
hlt
insb
dec
js
and
popf
aad
ret
adc
and
sub
es
add
jno
inc
jb
call
add
xchg
inc
xchg
xchg
mov
rorb
inc
inc
cwtl
data16
mov
or
jge
cli
sub
mov
or
sub
cwtl
or
mov
sbb
inc
jle
adc
std
pop
pop
or
sub
test
and
inc
add
add
push
add
cmpsl
mov
or
xor
xor
inc
and
dec
jge
jbe
inc
and
sarb
push
ret
gs
hlt
lock
push
pop
mov
faddl
fstpl
pop
push
cwtl
rcl
inc
and
cld
and
ss
xor
mov
je
push
mov
inc
push
nop
sub
fadds
ss
out
mov
mov
leave
enter
fsubrs
aam
xchg
or
aam
rolb
in
jmp
inc
int3
int3
push
nop
dec
enter
stos
lods
sub
pop
mov
ds
pusha
or
pop
dec
or
mov
ja
xor
pop
or
repnz
sub
xor
cs
lea
dec
jbe
or
ret
ror
out
jae
mov
and
push
jo
and
lea
and
push
and
adc
mov
xchg
jl
sub
incl
adc
pop
sub
xchg
mov
clc
push
sub
add
xor
sub
mov
push
loope
imul
jbe
int3
push
test
aaa
fwait
pushl
xchg
movsb
or
and
movsb
mov
addb
jae
and
movnti
pop
lahf
dec
scas
fs
pushf
cwtl
inc
and
jae
pusha
pusha
cwtl
js
pop
enter
xchg
nop
nop
stos
cmp
popa
orb
push
popa
ss
inc
jbe
dec
mov
dec
or
lcall
push
or
pop
add
inc
stos
xor
int3
outsl
and
pushf
and
sbb
mov
or
stos
xchg
add
mov
mov
jl
fmull
stc
pop
fstp
xchg
mov
out
jl
lcall
push
je
addl
and
adc
loop
add
jge
adc
mov
mov
gs
add
fisttpl
repnz
lds
cmp
add
inc
dec
gs
dec
adc
and
xchg
cmpl
cmp
mov
pop
test
sub
fisttpll
or
and
push
add
inc
rcl
or
mov
mov
les
or
sub
inc
aam
and
jnp
rclb
fs
mov
cbtw
jb
aam
inc
or
sbb
popf
in
imul
sub
daa
and
aas
sub
bound
call
push
mov
in
test
fs
xchg
shlb
jl
shrd
adc
xchg
or
or
jb
movsb
mov
and
inc
mov
jb
xchg
mov
cwtl
mov
mov
scas
xchg
xchg
rclb
pop
xchg
xor
out
add
fucomip
sub
nop
nop
sub
aas
addr16
inc
xchg
xchg
das
call
xor
testb
mov
xor
pop
inc
movsl
cmpsl
into
orb
sbb
pop
rolb
jl
jmp
lea
sbb
adc
mov
enter
hlt
add
inc
in
call
jb
cltd
lret
and
jge
and
or
lock
or
loopne
js
mov
mov
lods
xchg
clc
mov
cld
cmp
add
int
xor
or
fwait
add
insb
in
lahf
ficoms
xor
mov
and
sbb
xor
mov
pop
repz
mov
lahf
xchg
lods
rcll
incb
rolb
pop
xchg
xor
mov
sub
sbb
xchg
imul
add
push
push
sub
es
adc
jb
push
add
or
in
cmp
pop
adc
or
test
dec
push
add
adc
insb
or
fisubrl
jo
pop
mov
mov
sbb
popa
push
notl
push
adcl
push
xchg
fs
and
rolb
fs
inc
push
int3
enter
push
sbb
mov
fs
xchg
push
nop
sub
nop
and
jg
dec
push
sbb
loopne
and
nop
sbb
imul
in
and
repnz
leave
and
add
add
test
mov
push
pop
mov
sub
cmpsl
mov
xor
mov
dec
iret
fldl
and
cwtl
aad
or
insb
add
xor
cmp
pop
sbb
mov
repz
je
cmp
out
punpckhbw
aam
add
lret
repz
aam
xchg
rolb
enter
or
shlb
push
xor
out
add
add
or
add
stos
push
shrl
sbb
pop
xchg
in
scas
int3
lock
out
cmp
in
fldcw
push
add
sub
cli
mov
mov
add
ror
aaa
sbb
sbb
sbb
xorl
and
les
mov
push
sarb
or
or
lahf
pop
leave
aaa
cmp
sbb
push
outsl
and
sbb
mov
loop
mov
inc
imul
sub
scas
test
xor
mov
push
xor
mov
bound
add
push
mov
inc
enter
push
xchg
adc
push
addr16
leave
sbb
jbe
out
lods
in
dec
mov
dec
sub
decw
ss
std
mov
jl
sbb
sbb
pop
shlb
or
hlt
and
aas
jl
jl
jb
mov
push
mov
or
cmpsl
xor
shld
pop
inc
inc
mov
lret
adc
xor
out
clc
clc
and
shlb
andl
rorb
aad
sub
imul
addr16
mov
pushf
popf
movsb
cmp
cmp
mov
mov
cli
mov
pop
xchg
out
sbb
mov
inc
sbbl
inc
sub
rol
sbb
lock
clc
out
and
and
adcb
add
sbb
inc
push
shlb
dec
incl
sti
xor
and
push
jb
push
imul
lds
cwtl
ljmp
ss
xlat
movsb
lods
add
fcoml
sbb
cmpb
fsubl
lds
or
add
cmp
jmp
adc
adc
stos
out
push
push
and
xor
mov
add
mov
ficomps
and
test
or
add
mov
and
push
inc
in
lret
fildll
mov
add
sbb
stos
loopne
outsl
add
enter
sbb
call
or
cmp
push
lods
xchg
cld
popa
popa
mov
subb
ljmp
or
je
inc
mov
or
fcompl
xor
cmp
lods
and
lods
push
jbe
fdivrs
scas
int
pop
mov
sbb
in
jg
aaa
movsb
pusha
daa
negl
add
ror
inc
repnz
and
cmp
add
add
push
xor
dec
shlb
mov
and
cmp
cltd
in
and
mov
push
dec
clc
loope
or
inc
push
xor
xchg
and
dec
mov
lods
out
sahf
pop
dec
subb
pushf
fucom
jge
movsl
and
aam
sbb
adc
jae
dec
add
stc
xor
lock
push
int3
mov
sub
dec
stos
dec
fs
movsb
clc
jge
add
pop
or
pop
pop
adc
jne
nop
jp
imul
shrl
enter
fnstcw
sub
push
push
cmp
fsubr
inc
dec
jnp
inc
cmp
cmp
cmp
jmp
cmp
jne
mov
jne
or
fidivrs
bound
pop
mov
or
repnz
adc
mov
pop
inc
aam
sub
hlt
lods
fadds
mov
cld
insl
mov
push
adc
and
cs
push
ljmp
pop
jae
sbb
insl
sbb
pop
dec
enter
cmp
inc
add
mov
enter
mov
hlt
cmpsl
loope
nop
and
clc
sbb
mov
and
js
fs
dec
add
sub
pop
cli
outsl
push
adc
mov
mov
into
stos
shl
mov
outsl
dec
loop
mov
mov
ja
sub
enter
pop
repz
dec
repnz
pop
sub
std
dec
adc
dec
mov
call
js
adc
xor
adc
dec
sbb
and
jne
push
adc
pop
imul
jne
test
popf
dec
mov
and
dec
push
daa
scas
push
andl
or
jb
insl
pop
jecxz
push
and
push
outsl
mov
mov
inc
and
add
adcb
lods
jns
sbb
bound
lds
js
mov
adc
aaa
outsb
fadds
aad
sbb
mov
out
adc
cmp
push
test
jle
mov
adc
jb
popa
je
jp
sbb
xor
add
pop
push
adc
test
ret
mov
lods
inc
repz
ds
dec
in
mov
outsl
cmpsb
xchg
rclb
or
dec
add
sbb
in
add
adc
add
and
inc
pop
add
add
ss
pop
xor
add
push
xor
pop
leave
dec
or
and
sahf
and
mov
aad
shr
xor
fwait
and
testb
push
adc
leave
add
flds
in
popa
test
pop
test
mov
sub
cmp
push
sub
aaa
mov
mov
test
cld
sub
jge
test
cs
cmp
ret
push
jb
bound
and
jmp
faddl
xchg
dec
xor
mov
subb
pop
pop
js
es
cs
mov
mov
popa
cmpsl
and
negl
mov
mov
sub
jnp
in
shrl
pop
scas
pop
or
test
dec
inc
mov
daa
or
addr16
movsb
gs
js
mov
and
jae
mov
jo
sarl
in
pop
clc
pop
or
pusha
cs
cmp
and
test
daa
hlt
add
aaa
test
sbb
add
es
daa
sub
sub
and
push
mov
test
sti
cmp
cwtl
xchg
lods
cld
cmp
jl
call
adc
xchg
inc
testl
pop
test
lret
call
insl
dec
out
jne
sub
inc
xchg
xchg
xor
mov
jnp
fsubs
adc
sbb
and
test
or
push
or
sti
mov
mov
int
aam
imul
call
pop
mov
sub
insl
pop
mov
movsl
ds
test
push
jmp
push
lods
or
aaa
adc
sbb
add
lock
and
and
sbb
test
int3
outsb
mov
jbe
je
adc
sbb
in
xor
enter
mov
xchg
jl
mov
push
mov
inc
sbb
adcl
ds
shufps
sti
jno
sbb
push
je
stos
mov
dec
push
jbe
mov
pushl
jns
xor
pushf
inc
dec
sub
sbb
cwtl
cltd
leave
es
xchg
xor
and
pop
mov
cmp
add
and
arpl
repnz
xor
mov
enter
add
mov
push
pop
or
arpl
fldcw
outsb
push
jo
in
and
add
repnz
sub
ror
jl
add
inc
aad
adc
xchg
xor
je
popf
sub
call
mov
sbb
or
sbb
dec
mov
mov
daa
sbb
inc
ja
push
jbe
and
clc
mov
in
rolb
aaa
into
adc
add
cmp
imul
imul
cmp
sbb
inc
fdivrs
jl
mov
out
lret
push
test
mov
scas
dec
mov
xchg
lods
cmp
std
mov
cwtl
add
cmp
inc
adc
or
cwtl
push
dec
daa
ja
mov
lret
loop
js
repz
jne
inc
add
sub
dec
adc
aaa
andb
inc
mov
rep
or
outsb
mov
or
dec
insb
test
fwait
pop
dec
or
or
movl
in
add
pop
adc
push
add
sahf
push
jo
sub
push
xchg
leave
push
jp
sub
and
mov
pop
mov
das
testb
mov
pop
xor
push
xlat
pop
fcmovne
cld
insb
mov
or
cmp
adc
negb
cmp
jne
xor
fistpl
push
mov
cmp
loop
mov
mov
mov
push
sti
sbb
dec
gs
pop
adc
adc
inc
cmp
dec
cmp
and
push
cmp
lcall
and
add
mov
rorl
lsl
cmp
flds
push
nop
and
mov
push
add
push
and
or
outsb
sbb
add
cmp
sbb
and
outsl
mov
dec
lods
imul
in
add
mov
adc
mov
rcl
testb
icebp
push
and
sub
sub
xor
cmp
add
add
cmp
mov
call
leave
inc
or
jns
and
andb
lret
cmp
push
mov
iret
mov
mov
push
cmp
mov
insl
mov
ss
add
out
and
sub
arpl
xor
mov
ficomps
xlat
test
and
adc
test
fsubl
popf
loopne
stos
int
in
pop
jp
inc
or
test
jl
inc
xor
jp
cltd
idivl
ret
or
or
mov
ja
inc
add
mov
out
pop
xchg
adcb
sbb
insl
lods
loop
sti
inc
dec
jne
inc
push
push
fidivl
imul
in
mov
call
test
jl
inc
flds
aas
xor
add
mov
xor
pop
xor
add
dec
sub
pop
cmp
push
pop
mull
cli
push
pop
push
sbb
ret
fst
xor
ds
inc
push
and
adc
lods
mov
aam
rcrl
cmp
out
divb
pop
mov
or
cmpsb
jle
lahf
imul
in
or
xchg
js
outsl
shlb
dec
sbb
mov
shl
ds
decl
call
je
push
push
add
and
add
mov
push
daa
sbb
and
jnp
or
hlt
mov
pop
add
xor
jo
sub
cmp
xor
sub
mov
push
dec
js
sub
add
adc
pop
cmp
nop
inc
and
mov
mov
jg
rolb
and
cmp
jg
insb
mov
sbb
add
xor
or
incl
fs
aaa
jge
add
pop
add
sbb
sub
dec
dec
xchg
ds
jae
hlt
sbbb
incb
jae
jl
add
xor
cli
pop
inc
inc
cli
movb
cmp
mov
btr
lret
xchg
cmpsl
pop
push
fldcw
jno
or
fs
adc
or
or
pop
jnp
pop
push
or
inc
pop
lea
inc
mov
jmp
ja
cwtl
mov
push
add
push
inc
sub
test
push
cmp
cmpl
pop
push
js
or
inc
insb
scas
or
jg
fxch
jb
lar
push
push
mov
or
push
mov
nop
or
adc
push
repnz
movsb
cmpsb
or
or
push
jo
adc
mov
cmp
mov
rorb
insl
push
jno
or
push
push
in
pusha
and
outsl
ss
ret
or
es
dec
push
fs
cmp
or
imulb
or
jmp
xor
jae
cmp
sbb
mov
sbb
lods
mov
adc
push
ss
outsl
fsubr
das
pop
inc
cli
cmp
ja
push
sub
add
jg
sbbb
cmpsl
jbe
nop
xchg
adc
sbb
inc
adc
mov
in
and
pop
je
pop
inc
and
adc
push
inc
das
rolb
scas
pusha
test
and
sub
cltd
inc
sub
and
adc
push
popf
and
data16
inc
mov
jae
rorl
mov
cmpl
and
push
push
add
inc
dec
outsb
xor
ja
dec
lea
dec
pop
inc
xchg
xchg
in
ret
js
je
pop
or
jle
filds
mov
sbb
rcr
iret
lcall
or
and
push
sti
pushf
je
add
fsubl
jle
fcoms
or
icebp
int3
pop
and
fadds
adc
mov
inc
dec
xor
ficompl
insb
addb
dec
push
call
popa
in
sbb
fldenv
mov
add
inc
pop
mov
cmp
xor
loope
cmp
cmp
and
sub
mov
stc
pop
daa
xchg
inc
push
add
xchg
lar
adc
mov
fwait
push
movsb
pop
or
push
sbb
adc
or
adc
and
sub
push
sbb
pop
xor
aas
test
inc
pop
in
push
jb
pop
inc
lahf
and
inc
add
enter
inc
ret
incl
add
leave
leave
leave
leave
cld
clc
hlt
lock
in
cmp
push
cwtl
cmp
pop
dec
lock
les
test
push
xchg
inc
daa
or
stos
loopne
pusha
outsl
dec
addr16
ja
jl
cmovb
mov
mov
pop
mov
adcb
add
rclb
mov
adc
dec
push
pop
pusha
sarb
sbb
enter
js
js
in
cli
fdivrs
insb
add
adc
mov
and
sbb
inc
fs
sub
rcrl
adc
push
dec
mov
call
push
push
imul
pusha
pop
jle
mov
and
repnz
pusha
jo,pn
test
mov
stos
mov
or
push
or
pop
fsub
imul
lea
adc
negb
or
call
inc
mov
cld
add
ret
add
and
or
mov
push
pop
mov
sarb
loop
sub
mov
rorl
jecxz
leave
or
sub
or
push
hlt
pop
imul
mov
outsb
into
testl
popf
mov
xor
or
ljmp
stos
and
leave
fbld
add
lock
orb
ficompl
sbb
sub
bound
and
test
ja
decl
loop
adc
popf
dec
add
add
fisubrl
faddl
add
xorl
lock
adc
push
js
push
sbb
add
push
or
jle
mov
inc
pop
dec
dec
add
js
in
xor
or
or
pop
test
add
jnp
rorl
or
push
insb
mov
stos
pusha
dec
movsl
out
aas
mov
sub
sarl
add
push
and
add
mov
inc
je
jne
mov
sub
mov
xchg
dec
jne
mov
or
test
cmpl
rolb
je
ja
push
pop
push
add
fwait
push
inc
pusha
pop
inc
sub
lea
out
xor
outsb
sbb
pop
ret
sbb
inc
sub
cmpb
bound
jnp
adc
bound
jmp
push
add
mov
or
lea
mov
addb
lahf
adc
mov
mov
cmp
inc
call
cmp
ljmp
push
pop
mov
cmp
and
jl,pn
push
add
xchg
fwait
push
pop
jbe
xchg
inc
add
add
or
das
add
add
pop
enter
xor
inc
xor
sbb
mov
in
sub
sub
dec
push
mov
xchg
push
jg
xor
add
and
sbb
inc
sbb
jo
xor
xchg
fwait
rclb
add
clc
mov
or
icebp
testb
mov
adc
push
pusha
daa
mov
jbe
pop
mov
sbb
and
les
pop
mov
and
cmp
int3
mov
cltd
sub
push
jg
int3
mov
or
je
mov
mov
ljmp
cmp
push
mov
add
fsubs
add
and
sbb
mov
dec
inc
pop
adc
movsb
mov
mov
fs
push
add
jmp
mov
push
push
push
or
sub
inc
ds
popa
xor
push
imul
jl
xor
xor
add
or
lea
add
jnp
mov
ficoml
cmp
or
or
pop
jge
and
inc
or
mov
sub
xor
aad
add
sti
sub
inc
movsl
or
adc
dec
or
sub
aam
test
or
xchg
call
xlat
cmp
and
or
or
inc
push
loope
jo
push
ficomps
lods
inc
push
outsb
add
or
test
movb
ret
fnstenv
jnp
jne
mov
sub
cmp
jne
inc
or
inc
add
imul
insl
and
mov
mov
movsb
mov
mov
mov
push
push
push
scas
or
fcmovb
mov
repz
cmp
xchg
or
mov
mov
or
sbb
test
push
fucomip
mov
adc
daa
mov
fsubrs
inc
sub
add
int3
pop
xor
adc
or
xchg
adc
aam
fisttps
mov
mov
lods
mov
push
pop
mov
pop
push
pop
xor
test
and
adcb
sub
jge
inc
or
sahf
and
add
shr
add
add
pop
ficoml
cld
mov
cmp
pop
out
add
cmc
test
and
adc
mov
repnz
inc
clc
mov
jle
rolb
cmp
sub
pop
sub
setle
push
adc
mov
cwtl
out
xorb
mov
jp
inc
sub
jmp
inc
mov
cs
jmp
orl
mov
add
popf
or
or
notl
xchg
push
adc
and
dec
push
sbb
inc
mov
jbe
enter
movl
xchg
test
mov
xchg
inc
daa
test
inc
outsl
in
inc
cmpsl
xchg
aas
and
pop
sub
adcb
add
loopne
mov
adc
add
stc
jae
mov
outsb
addl
filds
or
orl
or
inc
push
or
test
outsb
add
loope
test
test
mov
mov
pop
add
xor
xchg
dec
or
adc
adc
push
or
push
sbb
js
push
jne
and
cmp
cmp
es
dec
mov
aas
adc
pusha
dec
or
push
sbb
nop
or
jno
testb
lret
pop
or
imul
sbb
mov
inc
adc
inc
call
sbb
insl
cmp
inc
dec
cmova
xor
sti
mov
push
cmp
xchg
es
push
lds
cmp
add
out
std
xlat
mov
cmpl
stos
cmpsb
add
repz
les
mov
inc
andb
ja
or
or
jo
inc
mov
jmp
adc
pop
push
pop
sahf
fcmovnbe
test
movsb
cmp
andl
inc
test
add
jbe
jne
ljmp
add
rolb
popf
cwtl
sub
mov
push
and
pop
cmp
jbe
mov
das
mov
adc
popl
xchg
js
fs
sub
or
das
cmp
sub
test
push
or
addr16
or
out
inc
in
add
jl
adcb
pop
push
inc
mov
in
mov
cmp
and
dec
dec
sbb
loop
cmp
xchg
aas
and
mov
push
test
push
cld
fdivs
imul
in
xor
rolb
popa
sbb
dec
cmp
ja
nop
cmpsb
adc
leave
and
and
cmp
fs
xor
insl
and
gs
jecxz
movsb
inc
inc
js
jne
or
or
mov
in
cmp
sbb
push
xchg
loop
fcoml
int
insb
jo
and
data16
rorb
jb
sbb
insl
cmp
nop
pushf
mov
mov
and
sti
dec
mov
mov
pop
adc
sbb
jns
dec
push
adc
dec
iret
pop
dec
enter
dec
fs
dec
das
pop
mov
mov
dec
adcl
jb
xor
fs
or
and
nop
inc
push
xor
cmp
lds
pop
inc
jmp
and
dec
popa
imul
cld
push
push
inc
icebp
pop
push
cs
stc
or
inc
cwtl
or
adc
mov
in
sahf
mov
adc
adc
sub
ret
inc
movsl
fisubs
fcoms
dec
push
lea
lahf
push
lret
in
adc
data16
les
or
pusha
insl
or
sbb
push
insl
and
rolb
pop
or
movl
add
push
inc
or
push
and
popa
push
in
mov
xchg
shr
push
gs
orb
cs
add
out
icebp
dec
mov
add
add
jecxz
cwtl
push
in
std
sub
jnp
mov
cmpb
or
or
mov
sub
sub
adc
sbb
sbb
mov
pop
push
push
addb
stc
or
push
mov
xchg
inc
jle
pop
mov
inc
aaa
nop
cmpsl
mov
aas
mov
into
dec
jb
pop
push
sbb
test
sub
fildl
add
add
hlt
add
add
mov
mov
lea
inc
pushf
fwait
dec
jbe
sub
fs
andb
sbb
mov
mov
sbb
notb
or
sbb
or
inc
pop
mov
adc
or
mov
or
add
jl
popf
or
sbb
push
sbb
cmpb
sbb
lds
fildll
jp
add
and
mov
iret
mov
lcall
and
jnp
or
and
xlat
dec
sahf
clc
jge
add
add
inc
clc
pop
xor
mov
mov
or
dec
mov
imul
jbe
hlt
fbstp
bound
or
cltd
insb
lock
cld
cmp
sahf
add
add
cwtl
mov
fildl
mov
lods
lret
mov
lret
movsb
mov
xchg
in
and
lahf
adcl
mov
xchg
mov
lea
push
mov
dec
idivl
jne
mov
es
rcll
and
mov
popf
jnp
pop
out
xor
mov
arpl
sbb
mov
adc
iret
mov
xlat
shrd
add
push
mov
int
movsb
push
jns
pop
xor
push
fsts
adcb
mov
mov
add
or
orl
jnp
or
stos
add
loopne
jns
rep
cwtl
xor
sahf
push
mov
add
mov
push
daa
hlt
in
popa
inc
dec
sbb
mov
lods
outsl
or
enter
dec
dec
jp
and
int3
pusha
add
or
push
lock
push
imul
xchg
push
push
ja
ss
lea
ja
cs
sbb
test
ss
add
lock
and
or
enter
xor
or
sub
dec
mov
sbb
sbb
arpl
pop
adc
mov
daa
mov
cmp
test
jb
sbb
addr16
pop
and
jae
aas
inc
mov
sub
dec
rorb
stc
adc
enter
pop
jl
fs
push
add
and
sub
adc
ljmp
mov
iret
dec
test
dec
push
or
out
outsb
leave
pop
xchg
add
ss
aas
inc
inc
ljmp
js
adc
loope
jmp
push
loop
testb
cmp
ja
aam
push
pop
lret
cs
pop
pop
cs
fcmovnu
pop
add
pusha
ja
mov
in
jb
or
push
hlt
insb
mov
add
jo
je
jne
lcall
mov
lret
cmpsb
jmp
pop
push
pop
lock
push
mov
dec
pop
mov
pop
imulb
and
nop
cld
jo
mov
in
inc
jo
clc
or
adc
cld
movsb
movl
adc
adcb
les
lods
mov
lods
sub
lret
roll
or
lds
sub
dec
sub
and
nop
mov
or
rclb
mov
in
mov
aam
xor
xor
lahf
pop
pop
andl
ja
and
mov
mov
popf
imul
lcall
sbb
jo
das
outsl
dec
repnz
call
enter
push
outsb
cmp
mov
mov
add
in
fsubs
xor
fcoml
push
leave
mov
add
insb
insb
dec
lock
fsubrs
dec
rorb
cmpl
xchg
sahf
pop
dec
popa
lcall
xor
adc
sbb
add
sub
or
popf
xor
xchg
sub
stos
xchg
int
push
jnp
push
and
gs
xchg
adc
xor
inc
push
xor
cmp
push
sub
cltd
out
inc
ss
inc
xchg
mov
sbb
jae
xor
jg
pop
cmpb
jne
icebp
cmp
ret
imul
pop
sbbl
nop
rorl
dec
add
jbe
dec
scas
push
lods
mov
pop
or
inc
cmp
sub
in
sbb
xchg
jno
cmp
mov
jo
pop
or
sbb
inc
or
imul
sub
xor
xlat
fwait
push
jb
dec
or
or
and
pusha
shll
arpl
dec
shll
ret
and
in
ds
aam
add
cltd
aam
fldl
ret
adc
add
sbb
push
orb
subps
and
aad
lods
or
jae
mov
sub
sti
add
inc
or
adcb
mov
sub
daa
nop
gs
adc
rolb
adc
and
add
add
add
inc
test
push
sbb
pcmpeqb
dec
cmc
and
jg
push
mov
daa
xor
js
jno
and
push
xor
enter
les
icebp
sub
sahf
pop
cld
or
test
pop
and
add
pop
popa
inc
add
rclb
adc
bound
shlb
and
inc
mov
in
data16
rol
sbb
and
mov
dec
je
xor
dec
js
fs
adc
mov
lea
sub
lret
sub
cltd
push
push
sbb
mov
fsubl
dec
adc
xchg
repnz
mov
add
mov
and
lods
lods
mov
pop
lods
push
dec
add
add
int
enter
sbb
add
push
or
inc
scas
shll
fldenv
xchg
test
sbb
popa
in
or
pop
cmp
adc
add
xchg
scas
cmp
or
jno
or
sub
into
pop
and
xor
xor
and
push
inc
and
xor
adc
adc
and
stos
pushf
mov
js
movsb
cwtl
mov
cwtl
clc
xchg
xchg
adc
outsb
inc
pop
mov
push
rolb
nop
nop
xor
rorb
cmpl
inc
lds
and
sti
mov
add
add
mov
int
js
add
test
test
or
add
fldcw
push
push
movb
and
sti
pop
dec
fsubrs
lsl
push
cld
and
jbe
adc
test
mov
mov
sub
mov
mov
mov
push
adc
sub
in
js
mov
inc
nop
loopne
sub
pop
or
cmpl
push
out
cld
inc
lods
ds
rolb
push
inc
fsubrs
and
push
les
push
lods
mov
lods
or
adc
jae
jno
add
sub
popl
sbb
nop
or
pop
movsb
cmp
and
inc
add
nop
sbbb
mov
popf
rcrl
pop
enter
shll
js
js
inc
inc
scas
ret
or
movsb
lock
adc
cmp
pop
mov
xchg
xor
or
or
js
push
push
mov
dec
fs
sbb
xor
dec
in
cmp
mov
push
cmpsb
mov
jb
or
mov
push
daa
loopne
orb
pusha
pusha
mov
jo
sbb
mov
pop
std
aam
dec
or
int3
adc
and
insb
insb
fs
ret
mov
mov
popa
push
cmpsl
mov
out
int3
fs
pop
push
pop
das
push
or
pop
sbb
inc
adc
adc
das
es
inc
sbb
adc
xchg
push
mov
mov
mov
leave
xor
pusha
pop
cmc
sbb
lea
addr16
mov
leave
sbb
xchg
push
mov
pop
js
push
iret
out
cltd
dec
hlt
cwtl
sahf
loopne
push
js
dec
dec
enter
js
inc
mov
and
push
jbe
dec
jnp
or
pop
and
pop
cltd
cmp
clc
negl
push
sbb
dec
mulb
sbbl
sub
leave
mov
pop
nop
inc
or
or
dec
add
or
or
or
lcall
mov
scas
enter
js
ret
or
hlt
in
add
mov
enter
repz
or
rorb
add
sub
das
inc
sbb
daa
mov
xchg
or
cwtl
js
outsl
test
push
sub
test
adc
in
mov
js
inc
inc
and
xor
mov
xchg
fnsave
roll
inc
jo
add
jno
xor
cmpsb
imul
xchg
inc
xchg
outsb
rcr
jae,pt
je
cmpsb
mov
add
cmp
or
cmp
loope
xor
sbb
push
push
fs
jns
scas
sub
push
mov
cmpsb
xor
fsts
add
es
andl
ret
add
call
js
sub
or
mov
adc
adc
nop
dec
push
test
outsb
jg
xchg
lods
inc
loopne
rclb
call
xlat
jmp
adc
loopne
jae
add
cmp
push
and
andb
test
addb
xchg
push
inc
inc
xor
add
dec
mov
rorb
clc
push
arpl
add
adc
mov
enter
sbb
lods
sbb
es
xor
cmpb
and
xor
out
cmp
dec
jmp
fs
adc
and
jo
int3
xor
cmp
in
int
int3
andl
or
daa
xchg
jecxz
je
xchg
popa
fs
in
inc
addl
popf
push
jbe
jp
lahf
arpl
enter
sub
mov
dec
les
mov
pushf
sub
call
cs
inc
push
clc
fisttpl
in
inc
sub
or
je
repz
dec
cmp
mov
or
pop
push
mov
call
mov
lds
icebp
sbb
inc
mov
adc
dec
jnp
popf
xchg
add
sahf
sub
or
xchg
dec
adc
add
jmp
mov
mov
pop
pusha
xchg
cld
mov
fnsave
sbb
sbb
lods
pop
and
lds
inc
sbb
or
dec
add
or
add
fwait
je
add
mov
fs
mov
dec
sahf
call
sbb
fldt
or
xchg
inc
out
cmp
jo
and
sti
and
pop
pop
add
js
jg
test
pop
out
in
push
pop
push
push
inc
dec
cli
sub
xorb
and
dec
dec
inc
dec
push
sub
push
inc
gs
je
sti
decl
movsb
popa
insb
popa
jbe
jb
lock
imul
push
inc
jne
push
or
mov
outsb
and
jb
jge
dec
js
pop
dec
out
and
cmpb
enter
in
imul
fwait
sub
adc
mov
push
push
inc
push
out
push
mov
in
jo
add
dec
cmp
jbe
pop
push
popa
pop
or
dec
push
push
jae
imul
test
add
jns
adc
inc
arpl
mov
push
or
iret
dec
cmp
and
jmp
pop
push
mov
sub
add
mov
or
sub
pop
sub
mov
je
adc
xorb
add
push
dec
pop
mov
ljmp
add
mov
insl
sbb
ret
cmp
sub
add
orl
sub
push
sub
hlt
dec
cmp
sbb
push
imul
cmp
insl
jl
fdivl
jae
mov
loopne
jb
add
mov
push
fwait
jb
adc
pop
test
inc
adc
pop
lods
fwait
mov
inc
adc
fisubs
inc
cmp
and
insb
sti
ja
test
pop
inc
js
mov
and
push
mov
push
cmp
or
push
add
pop
insb
pop
enter
stos
in
dec
mul
push
jmp
sbb
and
mov
adc
ja
inc
cli
lcall
push
es
adc
add
and
movl
lods
dec
push
xor
adc
xlat
mov
push
out
push
push
mov
sbb
or
enter
inc
rolb
fimuls
jnp
addr16
loopne
sbb
push
inc
or
aaa
sbb
xchg
add
adc
sbbb
or
adc
je
inc
mov
js
jg
sbb
push
out
repz
add
insb
mov
popa
jge
sbb
inc
jge
pop
rolb
mov
daa
and
hlt
insb
jo
inc
push
push
loopne
or
xchg
sub
fldcw
jge
inc
mov
hlt
xchg
adcb
gs
test
shl
push
andb
test
jge
adc
pop
and
push
cmpsl
pop
sub
fcmovb
adc
push
add
xchg
add
xchg
jle
add
and
add
adc
adcl
cmp
cmp
lods
or
mov
test
or
add
xor
add
or
fistpll
push
jg
and
inc
jmp
std
push
jbe
adc
loope
jbe
aas
lods
jg
xchg
sbb
in
in
sbb
jg
or
push
aas
dec
decl
pop
imul
shl
imul
fcoms
jb
enter
pop
or
pop
jnp
ds
roll
adcl
test
es
add
push
xlat
push
gs
push
inc
xchg
jecxz
xor
add
cwtl
fwait
sahf
or
in
inc
xor
aam
xor
mov
dec
sahf
fs
out
mov
clc
test
add
leave
daa
fnstenv
loopne
mov
jne
dec
fsubl
xor
sbb
adc
inc
loopne
dec
fadds
push
inc
rclb
xchg
insb
mov
push
sub
inc
enter
frstor
int3
subl
mov
in
les
and
fs
cmp
rol
mov
sbb
mov
add
shlb
sbb
inc
add
adc
add
add
fs
dec
push
jl
dec
bnd
cltd
add
inc
stos
pop
sub
adc
loopne
mov
jmp
mov
adc
dec
mov
arpl
imul
sbb
or
dec
leave
inc
rcrb
test
orb
sub
and
mov
dec
mov
xchg
or
pushf
pushf
mov
testl
add
mov
inc
aas
mov
inc
fcomi
orl
call
push
fsts
popa
inc
je
js
xor
pop
aam
sahf
mov
push
test
test
push
jne
inc
popf
xchg
test
dec
adc
ret
mov
and
or
inc
sub
outsl
test
daa
andl
jbe
push
mov
jno
fsts
les
xor
scas
xchg
add
fwait
gs
int3
jl
dec
xor
add
in
fld
mov
lea
mov
add
cmp
lods
scas
sub
hlt
mov
mov
mov
mov
andb
or
or
or
adc
sbb
lret
scas
pop
outsb
pop
loopne
pushf
insb
add
ss
aam
mov
je
in
cmp
cmp
cmp
aas
inc
ss
data16
add
je
inc
mov
cltd
scas
pop
pop
add
push
rolb
shl
and
js
ljmp
push
das
sbb
insl
ret
shlb
sbb
enter
pop
enter
aam
int3
and
rolb
mov
or
enter
movsb
xor
and
and
orl
test
push
or
jb
and
leave
and
pop
and
push
push
xchg
pop
jb
dec
dec
inc
inc
pop
jb
and
leave
and
leave
and
sbb
xchg
pop
jb
adc
xchg
pop
jb
or
add
cs
in
cld
clc
hlt
xor
xchg
dec
lock
push
or
test
mov
sbb
imul
push
add
shll
ja
outsl
lock
call
push
sub
push
lods
xor
test
pop
jbe
xchg
arpl
sub
testb
jl
and
mov
fsubl
add
mov
sub
push
aaa
push
adc
push
lret
inc
push
outsl
cwtl
mov
inc
add
push
imul
inc
lock
test
pop
mov
js
pop
adc
mov
scas
pop
shrl
add
jb
mov
cmp
cmp
das
and
jl
pop
mov
adc
leave
in
aaa
xor
adc
subl
fwait
dec
jns
pop
sbb
ret
jl
loopne
xor
adc
loopne
or
js
push
pop
inc
mov
lret
pusha
mov
or
arpl
add
sarb
mov
pop
sub
push
enter
rorl
mov
mov
and
xor
call
loopne
les
adc
movaps
movsb
jmp
push
dec
ret
add
lds
and
mulb
dec
or
inc
pop
mov
adc
mov
mov
imul
mov
call
mov
int3
shrb
mov
mov
leave
mov
inc
or
add
mov
or
pop
icebp
dec
fs
and
pop
push
xchg
sub
rorb
adc
dec
popf
insb
pop
js
pop
or
and
lcall
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
das
fbld
push
subl
mov
and
mov
and
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
cmp
inc
xchg
lea
pop
jbe
into
scas
pop
mov
dec
push
push
mov
adc
xlat
push
push
aam
faddl
in
imul
cmpsb
imul
imul
cmpsb
imul
lcall
lcall
fsub
in
insb
mov
imul
pop
addb
add
fs
dec
dec
mov
and
je
sbbl
xor
nop
xchg
pop
call
nop
orl
popa
cmp
nop
mov
pop
insb
enter
pop
rcrl
and
adc
and
push
testl
popf
add
sub
dec
push
inc
or
xor
scas
xor
jle
or
ret
cmp
jne
push
or
rorb
add
jo
out
jl
jae
pop
or
in
ja
add
or
add
add
inc
je
add
jnp
imul
decb
das
std
add
jb
addr16
xchg
add
in
sub
jnp
insb
fs
outsl
jne
and
imul
leave
nop
dec
add
add
add
arpl
nop
inc
push
cmp
add
or
sbb
or
nop
or
add
jne
mov
jnp
jns
add
xor
int3
sub
insb
in
sbb
dec
shll
pop
fdivrl
shll
addb
xor
ret
adc
shlb
mov
xor
shll
or
dec
lret
push
sbb
fidivrl
mov
jp
push
xchg
shll
out
xor
shll
push
ss
xor
shll
push
mov
shll
out
push
xor
shll
pop
fidivrs
mov
jle
add
dec
shll
popa
loope
xor
shll
push
shll
mov
xor
shll
or
dec
leave
sub
dec
shll
pop
fnstcw
mov
jns
add
xor
lds
xor
shll
shll
lea
shll
in
sbb
popf
pop
fnstsw
sarl
adc
or
xchg
shll
push
rcl
dec
shll
jae
xor
shll
repz
mov
xor
rorl
dec
shll
imul
shll
jmp
sbb
fwait
pop
pop
fcmovnu
dec
shll
jnp
xor
shll
sti
pop
pop
xchg
xor
roll
dec
shll
addr16
shll
out
pop
xchg
shll
xlat
xlat
dec
shll
ja
xor
shll
testl
dec
rorl
dec
shll
outsl
outsl
xor
shll
out
pop
pop
lahf
shll
dec
shll
jg
mov
incl
lcall
jo
imul
imul
cmpsb
imul
mov
add
and
mov
jecxz
add
sbb
or
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
pushf
push
test
stos
dec
pusha
add
fwait
xchg
andl
js
imul
imul
cmpsb
imul
imul
neg
jnp
pop
push
push
dec
dec
inc
cmp
mov
flds
adc
flds
cmp
add
enter
stos
cltd
fists
lahf
je
jg
dec
pop
adc
pop
or
or
or
fstpl
sub
add
or
and
inc
leave
nop
or
xchg
or
or
sysenter
fldl
adc
adc
adc
adc
adcl
sbb
sbb
sbb
std
pop
icebp
in
adc
adc
nop
inc
push
sbb
adc
fs
xchg
push
mov
sbb
test
sbb
daa
fldcw
xchg
aam
and
or
dec
std
lcall
add
clc
sbb
incb
outsb
jne
outsb
mov
add
push
dec
inc
mov
xor
roll
aam
call
loopne
pause
add
mov
add
movsb
push
aas
jl
mov
cmp
mov
mov
pop
or
int3
pop
pop
xlat
inc
xorl
rcrb
add
cmp
mov
inc
imul
jne
test
and
les
scas
imul
inc
aas
sbb
lret
cmpsb
imul
lods
adc
test
lcall
add
push
pop
cmp
push
add
pop
mov
inc
fcoml
je
adc
xor
lods
pop
add
jl
add
xor
fsubl
add
test
pop
out
xor
push
mov
pop
xchg
sub
sbb
add
daa
and
adc
je
jmp
insb
movups
pop
cld
in
push
xor
je
mov
or
or
jl
int3
call
shld
cwtl
add
imul
dec
stos
es
pushf
mov
sbb
jbe
int3
push
adc
mov
mov
push
popf
pop
cmpb
pop
in
mov
adc
pop
addl
stos
inc
push
add
adc
mov
add
add
xchg
int
or
ret
or
xor
add
add
inc
ss
push
loope
add
add
aam
daa
and
cmp
loopne
fistpll
jl
gs
pop
pop
dec
dec
je
insl
jle
push
insl
adc
jnp
sbb
mov
or
or
fadd
ljmp
and
cmp
fisttpl
adc
add
jb
sub
mov
dec
mov
aam
jns
dec
outsl
fs
xor
inc
imul
push
mov
jne
cmovle
push
inc
xor
push
add
outsl
insb
insl
jo
outsl
int
call
popa
jo
push
mov
ss
insl
xor
inc
mov
push
add
inc
shll
jmp
outsb
cmp
inc
or
jp
arpl
mov
jmp
push
packuswb
fistpll
push
jg
jne
insb
mov
pusha
out
push
jne
ss
xor
dec
and
xchg
cmp
int
mov
gs
in
and
outsl
jl
adc
mov
dec
jmp
insb
popa
cmp
adc
mov
inc
je
imul
popf
loope
inc
clc
xor
push
mov
jne
or
dec
jne
and
inc
push
fisttpl
pop
push
cmpsl
imul
imul
mov
xor
or
inc
cltd
jbe
or
mov
lods
dec
push
imul
jb
or
mov
dec
mov
data16
mov
xor
ds
fxch
frstor
add
dec
outsb
adc
imul
inc
popa
bound
aaa
in
inc
xor
je
push
push
mov
divl
push
push
aas
imul
or
insb
adc
mov
adc
or
adc
mov
jae
or
and
and
push
push
mov
adc
testb
jae
sub
insl
dec
inc
fs
jae
out
popf
int
adc
inc
inc
adc
cmp
insl
mov
nopw
sub
fs
outsb
jbe
stos
mov
mov
aas
in
mov
and
inc
shll
push
shrb
adc
cwtl
xchg
and
and
pop
loope
sub
mov
push
cmp
imul
pop
imul
sub
inc
pusha
out
xor
inc
push
repz
scas
adc
inc
outsl
jae
mov
xlat
test
or
push
cmp
sub
push
and
mov
xor
pushf
push
mov
inc
jo
lret
xor
xchg
inc
dec
cmp
pop
scas
xchg
or
fsubrs
inc
inc
lcall
leave
or
and
or
int
or
gs
out
lods
out
sbb
out
adcb
add
arpl
dec
repnz
clc
mov
push
fsubs
inc
int3
mov
int
es
mov
add
insb
and
sbb
loope
insl
mov
pushw
dec
iret
addb
adc
cmc
movb
sub
or
scas
add
xchg
jo
sbb
lahf
dec
inc
or
jnp
movsb
mov
outsb
cs
into
or
pop
inc
sbb
enter
or
testb
fs
pop
aaa
push
je
sbb
mov
ja
or
push
and
and
insb
loopne
pop
jns
mov
mov
or
adc
dec
gs
and
cltd
mov
gs
in
or
lds
or
sub
push
mov
leave
sbb
nop
insb
pop
cmp
sahf
mov
xor
imul
push
push
fidivl
insb
pop
mov
push
jae
test
leave
leave
punpckhdq
xor
mov
sub
mov
inc
push
stos
or
push
or
sub
inc
pusha
inc
or
xchg
int
and
or
push
pop
cli
inc
mov
adc
rorl
xor
mov
faddl
jae
pusha
scas
sub
jbe
xor
sbb
dec
xor
mov
jo
pop
imul
or
xchg
mov
inc
sbb
cmpsl
mov
outsb
shll
or
xchg
mov
scas
mov
aad
cli
ror
mov
or
int
inc
dec
loop
xorl
inc
imul
shl
fisttpll
insb
add
dec
sub
stos
loop
xchg
lds
or
outsl
out
sbb
xor
scas
popa
inc
cltd
mov
sbb
mov
jb
sbb
lea
lahf
inc
imul
ss
bound
xchg
mov
xchg
push
dec
xchg
outsb
push
dec
push
xchg
inc
fimuls
imul
mov
pop
adc
xchg
push
pop
or
pop
add
popf
in
dec
mov
xor
les
mov
jno
adc
adc
push
repnz
loope
pop
sbb
dec
adc
mov
pop
sbb
cmpsl
je
jne
pop
add
mov
mov
adc
loop
fisttps
stos
sub
es
sbb
dec
sbb
dec
ret
js
cmpsl
test
push
shrl
jl
push
dec
inc
xchg
and
jo
insb
add
movsl
pop
in
and
ret
aad
bound
data16
push
arpl
insb
dec
rcll
inc
hlt
push
dec
dec
das
and
mov
popf
push
lock
enter
icebp
add
sbb
push
xchg
lret
jge
loopne
dec
pop
ret
scas
fiadds
xchg
sbb
or
cltd
mov
pcmpgtd
xchg
push
fdivs
sub
js
mov
push
lock
jae
daa
fisubs
adc
rcrb
je
add
dec
or
adc
xor
push
mov
les
add
pop
add
call
lods
push
idiv
pushf
sbb
push
add
popf
in
mov
mov
jae
xchg
push
repz
mov
or
jno
or
mov
push
inc
or
ss
jnp
cmp
sub
sub
fimull
cmp
ss
testl
or
shl
sarb
imul
mov
lea
inc
mov
mov
or
bound
rorl
loopne
adcl
inc
dec
cmp
arpl
adc
xchg
mov
mov
sub
in
sub
adc
ja
inc
xchg
loopne
hlt
shrl
cmp
inc
pop
aam
push
mov
mov
mov
and
xorb
adc
leave
jecxz
xlat
fmull
push
adc
adc
lahf
add
jbe
popa
pop
ret
jo
push
cmp
imul
pop
sub
arpl
sbb
inc
add
loop
sub
pop
inc
sub
out
pop
idivl
add
sbb
jle
pop
adc
or
mov
pop
or
add
add
sbb
pop
adc
imul
sub
pop
mov
into
mov
lret
subl
cmp
movsl
ret
or
inc
add
add
sbb
inc
inc
test
jle
or
jmp
and
repz
or
inc
push
inc
mov
adc
add
sbb
orl
popf
dec
jge
in
imul
rcrb
inc
fs
out
add
scas
imul
pop
xchg
sub
or
fcomp
and
ja
daa
jae
je
mov
daa
push
lret
fistl
xor
sbb
pop
inc
icebp
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
or
add
adc
add
xchg
nop
add
