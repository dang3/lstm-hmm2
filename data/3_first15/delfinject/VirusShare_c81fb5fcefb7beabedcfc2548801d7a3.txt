and
mov
xorb
out
pushf
out
cmp
add
add
inc
shlb
adc
dec
add
hlt
inc
xchg
inc
sahf
cmpsl
stos
xor
adc
adc
loopne
andl
sub
shrl
fildl
imul
scas
fldl
imul
and
add
adc
xorb
in
int
mov
lock
into
in
mov
repnz
fdivp
add
and
add
jb
fidivrs
pop
scas
dec
push
mov
scas
jb
mov
mov
push
mov
outsb
ffree
outsl
cmpsb
add
sti
jmp
jge
sti
neg
jle
sahf
jg
sahf
incl
xor
inc
pop
sub
mov
jecxz
add
jmp
sahf
xlat
gs
mov
inc
sub
mov
imul
test
push
mov
and
addl
sbb
jae
xor
jmp
jno
sub
repz
fadd
loopne
sub
fdivrl
ss
test
mov
sti
xchg
xlat
hlt
or
fadds
xchg
cmpsb
leave
int3
pushf
add
in
bound
or
jae
push
jle
mov
ret
push
cmc
fnstcw
inc
ret
aam
in
jne
or
jnp
lcall
pop
dec
lock
leave
mov
jbe
sub
aam
jl
cs
push
jg
push
idivl
das
mov
nop
iret
daa
mov
xorb
fwait
jb
lahf
adc
rclb
repz
push
fistps
scas
cwtl
xchg
cltd
ss
push
pop
xchg
bound
addr16
ds
jle
sti
pop
lcall
dec
iret
mov
in
mov
pop
or
and
mov
incl
pop
idiv
add
dec
mov
dec
orl
in
jo
mov
push
inc
xchg
ficompl
aam
pusha
push
push
lea
pop
cmpsb
inc
inc
ficomps
out
sahf
jp
or
push
imul
fistpll
mov
lock
loope
cs
sub
or
pop
inc
mov
into
adc
pop
push
sbbb
xor
out
pop
std
cmp
sub
mov
jns
cmpsl
rcl
mov
in
nop
push
cmpsb
mov
push
jno
xchg
and
xchg
fisubs
mov
push
iret
mov
cmp
inc
scas
mov
test
movb
in
pop
shrb
mov
pop
pushf
jbe
addr16
dec
jns
ds
mov
icebp
arpl
cmp
mov
roll
jo
push
mov
sub
loop
lock
iret
jns
push
mov
cmc
stc
mov
out
fwait
out
movsb
and
rclb
sbb
mov
sub
mov
inc
into
lret
lcall
inc
inc
orl
into
adc
mov
and
push
dec
negl
mov
lcall
cltd
cmpsb
cmpsb
dec
and
inc
mov
sub
and
stos
xor
mov
bound
bound
push
push
xchg
cli
out
xor
mov
cmpsl
inc
ret
sbb
rorb
inc
out
cmp
sbb
mov
aad
ret
cmpl
or
sbb
rolb
inc
add
push
pop
sub
sbb
mov
aaa
into
mov
xorl
xchg
ficompl
and
lcall
pop
sbb
and
out
in
or
sub
push
sub
mov
jb
pop
push
jl
sbb
daa
andb
lock
enter
dec
sub
fwait
mov
push
mov
mov
imul
mov
or
sbb
scas
inc
xor
imul
add
fsubl
jmp
andb
leave
pusha
daa
inc
fiaddl
dec
mov
inc
ja
testb
xor
mov
push
enter
mov
lods
sbb
cltd
mov
rcl
lea
fstp
lea
xchg
cmp
jecxz
faddp
aam
lock
loopne
pop
and
push
imulb
mov
dec
icebp
xchg
pushf
dec
or
xchg
sbb
imul
test
je
jnp
leave
dec
xor
mov
lds
into
stos
pop
outsl
push
sbb
nop
xchg
push
scas
adc
jl
adc
push
mov
mov
aad
add
jp
mov
push
and
mov
aad
sbb
fnstsw
cmp
pop
clc
cmp
and
cmp
dec
inc
xchg
icebp
fidivrs
mov
sub
out
sub
aaa
push
add
jle
in
adc
push
int
adc
inc
js
mov
test
and
pop
adc
rcr
dec
xor
dec
cmp
fistl
call
add
adc
in
cmp
xor
adc
xor
ret
es
push
adc
mov
push
or
fsubl
add
push
int3
or
jbe
movsl
test
and
pushf
movsb
add
shlb
mov
or
and
int3
push
fnsave
sbb
js
mov
fwait
or
stc
xorl
rclb
push
or
lods
lahf
js
and
sbb
mov
sbb
es
xchg
in
inc
push
dec
aas
mov
cld
repnz
sbb
push
jno
sar
push
mov
scas
mov
data16
std
lahf
push
aaa
repz
mov
das
or
leave
inc
jl
pushl
mov
sbb
int3
ret
cmp
jl
inc
inc
pop
test
mov
ret
decl
in
cmp
aam
faddl
mov
fimull
push
inc
into
ss
push
clc
push
mov
pop
dec
lea
mov
sub
push
cmpl
xlat
sbb
test
lret
mov
lret
loopne
inc
cmp
adc
dec
pmulhw
stc
js
adc
test
add
test
inc
out
std
pop
bound
loopne
popf
loopne
mov
mov
cmp
jge
les
dec
xlat
orl
insb
mov
js
leave
sub
push
int3
mov
mov
adc
sti
cld
fadds
in
jns
xchg
movsl
sti
push
xor
cwtl
jp
je
pusha
mov
inc
sbbb
movsb
shll
pop
mov
sub
frstor
jp
mov
outsb
xchg
les
jne
scas
jmp
inc
xor
jno
out
xor
push
insb
xor
xchg
sti
push
repnz
cwtl
into
fbstp
xor
and
and
or
mov
mov
sub
xlat
lret
arpl
aam
xchg
xor
adc
clc
andb
sti
push
lret
testl
cmp
adc
add
ss
mov
xor
pop
sub
dec
mov
mov
pop
or
mov
lock
mov
push
mov
call
lret
cli
dec
xor
push
movsl
lock
scas
push
nop
aad
xchg
cltd
fs
leave
jge
xor
roll
rol
cwtl
xchg
dec
mov
adc
xlat
fldcw
cld
repz
dec
xor
shrl
jb
dec
arpl
sbb
stos
adc
sahf
scas
mov
add
push
jo
push
mov
daa
pushf
mov
dec
mov
push
dec
sbb
add
cmpsl
dec
sti
mov
jmp
jne
shll
jno
fwait
outsb
cld
or
jecxz
mov
fldt
shl
aaa
pop
in
sbb
jns
dec
jl
sbb
aaa
mov
xor
inc
xchg
dec
dec
add
dec
popa
add
sbb
fsts
movsb
fwait
into
dec
sbb
sbb
mov
push
pushf
sbbl
mov
mov
or
andb
cmp
or
inc
and
mov
cwtl
add
ljmp
inc
pop
inc
xor
cmpb
mov
inc
test
or
or
out
mov
stos
mov
xor
ljmp
xor
jmp
int
or
int
test
in
in
xchg
into
movsb
jae
pop
gs
lcall
mov
xchg
sbb
out
mov
ss
and
mov
lret
imul
icebp
sbb
and
clc
adc
push
pop
mov
mov
movsl
jmp
fnstcw
hlt
loope,pt
je
cwtl
lea
aad
ljmp
dec
dec
jge
es
nop
and
mov
add
out
jecxz
insl
and
push
dec
inc
daa
test
add
jnp
dec
cmpsl
jp
xor
mov
test
push
xchg
jnp
out
xchg
dec
sub
fisubs
dec
shlb
pushf
lods
mov
mov
inc
jg
aas
dec
inc
scas
and
gs
and
mov
jns
loope
add
push
stc
push
adc
ret
mov
ror
je
je
and
insl
cmc
inc
sti
xchg
mov
call
or
lea
mov
add
out
test
out
sbb
inc
mov
adc
in
andb
imull
inc
lods
mov
or
pop
xchg
fnstenv
and
stos
insb
mov
xlat
sub
mov
filds
popf
aas
xlat
cmp
scas
sub
mov
mov
cmp
adc
out
iret
out
rorb
stc
addr16
in
mov
adcl
sti
stc
mov
in
out
lret
jg
mov
lods
sub
shrb
es
leave
and
andb
addr16
adcb
aaa
lret
popa
ret
cmp
lahf
sub
fstpt
push
jecxz
cli
mov
repz
push
jp
dec
clc
mov
gs
xlat
jnp
jbe
notl
test
push
fisttpl
jbe,pn
mov
int3
add
adc
mov
jbe
push
push
or
sbb
mov
nop
ja
cmp
push
cmc
fdivrs
push
push
or
das
imul
mov
movsb
pop
bswap
and
fcmovnu
ret
xlat
mov
cld
add
and
push
jp
xchg
inc
xchg
mov
sub
pop
insb
movb
add
pop
or
jmp
sbb
clc
mov
dec
adc
inc
and
int
ja
fdivr
cmp
adc
push
jbe
adc
add
pop
fsubs
cs
cmp
mov
loope
cmpsl
xor
cmp
mov
je
sahf
lock
je
test
data16
and
xchg
and
sub
imul
andb
aas
leave
cmpsl
rclb
into
shll
outsb
add
add
iret
dec
popa
fcmovne
dec
nop
sbb
sub
sbb
cmpsl
pushf
loope
in
xchg
or
xlat
out
push
mov
fiaddl
into
mov
popa
mov
inc
ja
xor
adc
insl
sub
jns
in
pop
scas
xchg
leave
fcoms
cmp
je
inc
mov
xlat
add
imul
in
mov
mov
xchg
mov
mov
data16
lods
out
in
xchg
test
sub
scas
pusha
lret
mov
cli
int3
sahf
sbb
out
test
lock
nop
adc
or
movsb
sub
addr16
out
inc
repnz
cmpsb
mov
or
mov
jns
mov
push
cmpsl
into
stos
icebp
repnz
hlt
add
mov
add
lods
add
cltd
add
xlat
adc
call
subl
fildl
lret
mov
mov
and
adc
add
sti
mull
cld
fbld
cmp
mov
jae
mov
mov
xchg
dec
xchg
push
push
mov
xchg
aaa
xchg
fnstsw
or
jns
xchg
cmpb
daa
fs
js
dec
cmpsb
inc
jmp
jno
and
adc
scas
cmc
adc
movsb
int
mov
xchg
lods
inc
cs
mov
std
sbb
fsqrt
mov
daa
dec
nop
sbb
daa
push
fildl
xchg
adc
mov
shr
pop
sbb
insl
jle
outsl
xor
pop
popa
mov
vgetmantpd
stos
mov
pop
dec
jae
pop
mov
pushf
sub
inc
sbb
roll
xchg
ss
int3
jmp
sub
pop
mov
fwait
push
loopne
push
fwait
jns
shll
inc
xchg
sub
and
fstpt
lods
hlt
sub
jle
sbb
shll
das
sti
jbe
inc
pop
and
jecxz
mov
mov
stos
mov
fcmovnb
push
xchg
cmp
mov
ja
clc
addr16
ja
arpl
sub
mov
test
test
mov
lods
idivb
adc
int3
push
iret
popa
jno
and
pusha
xor
cmc
ror
cmpsl
mov
sub
push
jmp
jle
aad
mov
pushf
sub
scas
adc
mov
fwait
cmpsl
clc
inc
stos
movsl
and
inc
aam
adc
jge
dec
scas
xchg
xor
out
jae
ret
out
repz
push
inc
roll
xor
call
or
cld
mov
mov
loopne
sbb
loopne
pushf
dec
fbstp
xchg
rolb
cmp
mov
add
mov
sbb
mov
jecxz
inc
mov
stos
fstenv
orl
jno
cwtl
push
dec
xlat
out
fwait
pop
test
or
insb
loop
mov
in
add
jo
sub
push
sti
xchg
lods
mov
call
cmpsl
loope
inc
ds
jo
loopne
rolb
push
aas
lret
ljmp
adc
jmp
push
mov
dec
ret
aam
and
sbb
cmp
add
and
inc
push
jnp
mov
dec
int
mov
into
orl
out
pop
out
test
rcrl
cwtl
sbb
clc
pop
mov
lock
fildll
in
jns
sub
in
fwait
mov
or
push
mov
int
push
xchg
sub
enter
aas
cli
nop
aaa
out
jbe
test
sub
push
push
inc
pop
cmp
mov
mov
push
loop
sub
aaa
cmpsb
test
xlat
pop
jp
int
test
pop
stos
mov
and
jae
dec
mov
sbb
sbb
out
lds
pop
ret
sbb
sbb
sbb
clc
jb
cwtl
pop
and
jb
es
and
icebp
jl
xor
xor
in
jmp
mov
js
iret
mov
inc
xchg
in
cmp
test
xchg
fbstp
inc
fs
stos
xlat
lds
push
daa
adcl
test
scas
lahf
mov
loop
xor
fs
ret
push
cmp
lock
mov
fistps
sbb
test
adc
xor
mov
cmpsl
jge
addr16
inc
adc
je
imul
aaa
or
xorb
test
dec
fdivr
cmp
adc
leave
shlb
xchg
outsl
dec
inc
sar
decl
testl
fsubrl
inc
xchg
leave
prefetch
or
adc
les
jno
jecxz
or
cmp
addr16
aam
adc
fimull
push
mov
adc
ljmp
push
fs
shlb
sti
jno
in
add
dec
sbb
popf
xchg
das
nop
mov
inc
dec
pop
or
and
jno
adc
and
adc
imul
pop
aam
push
jno
ret
xchg
push
sbb
mov
mov
mov
pop
or
nop
stos
xor
mov
cmp
or
and
mov
push
pusha
inc
mov
insb
jecxz
pop
js
sub
repnz
xchg
lea
cmpsl
call
xchg
rolb
aaa
je
push
jg
and
stc
aam
js
in
dec
mov
repz
es
inc
rorl
in
xchg
ret
inc
into
sub
shl
push
adc
mov
adc
mov
adc
adc
pushf
sub
push
mov
js
lcall
stc
repnz
pusha
fwait
loope
jno
sub
adc
fistl
add
pop
xor
scas
sahf
xlat
imul
mov
add
pop
lret
dec
ja
ss
dec
xchg
leave
pop
sbb
orl
cmpsb
pop
jg
leave
inc
mov
and
or
xchg
jnp
add
pop
jb
js
imul
add
adc
mov
scas
js
mov
insb
or
dec
ficomps
jno
sbb
push
insl
sbb
xchg
repz
cmp
stos
push
pop
jle
mov
enter
mov
shrl
fwait
pusha
sbbl
dec
cmp
and
adc
mov
pop
inc
in
test
dec
inc
mov
test
hlt
mov
stos
pop
push
sbb
insl
lods
mov
xchg
lcall
std
mov
imul
xchg
inc
dec
inc
add
lods
mov
insb
sahf
outsl
cmpsl
mov
fnsave
icebp
sub
push
xor
sbb
or
fucomip
xor
into
cmp
push
xchg
je
repnz
inc
dec
insb
leave
cmp
dec
scas
xor
push
pop
rcll
mov
sbb
sub
andb
push
xchg
sub
fs
xor
mov
das
sbb
jge
xchg
hlt
mov
sub
jmp
sbb
jae
stos
stos
ds
lahf
sub
sub
scas
data16
mov
imulb
iret
mov
repnz
fiadds
mov
cmp
shlb
lea
scas
lea
cmpsb
cmp
cmp
push
popa
pusha
or
pop
sbb
fcomip
mov
loopne
inc
mov
sbb
pop
dec
push
adcb
dec
cmp
sbb
push
inc
sub
push
pop
lret
mov
mov
mov
dec
sbb
es
xchg
xchg
pushf
lahf
repnz
mov
inc
jo
cwtl
dec
test
dec
pop
add
cmp
xchg
stos
nop
ret
xchg
cmp
out
pop
dec
sub
or
fnstsw
test
mov
and
outsb
gs
or
jnp
movsb
mov
mov
xor
pop
stos
stos
cmp
nop
mov
adc
orb
or
push
adc
pusha
mov
xchg
jmp
je
push
cmp
loope
popf
ret
xchg
adc
mov
dec
pop
stos
inc
sub
adc
jmp
hlt
clc
mov
dec
in
push
push
mov
bound
pop
cmc
cmpsb
add
iret
pop
movsl
cltd
push
dec
nop
push
sub
addr16
popf
jb
hlt
push
mov
in
call
jge
mov
sub
cmp
add
xchg
and
pop
jl
shlb
dec
ss
add
or
orb
leave
data16
popa
jecxz
loop
jge
xchg
and
cmp
sub
jae
shlb
xor
jbe
mov
icebp
addb
mov
lods
ret
lret
jp
leave
into
jbe
fldcw
mov
mov
pop
push
fldt
repnz
enter
dec
mov
push
dec
in
fwait
adc
test
aad
mov
popf
out
xor
lods
rorb
int3
outsb
cmp
cwtl
fs
mov
bound
push
push
sbb
jns
daa
dec
mov
cwtl
aas
mov
test
push
mov
cs
rsm
xlat
ss
rcl
xchg
cmp
movsb
and
ret
and
daa
jns
jo
xchg
inc
addl
pop
fadd
int
inc
mov
in
in
push
loop
dec
sti
insb
push
outsl
int
test
push
insb
add
ds
dec
das
mov
sub
orb
movsb
hlt
sbb
daa
xor
sbb
out
cmp
enter
inc
repz
mov
cmp
mov
call
cmp
pop
mov
mov
and
aaa
in
test
mov
adc
fldt
and
mov
aas
push
push
out
out
pop
inc
or
xor
lahf
push
aaa
dec
xchg
and
xchg
xor
lds
leave
push
jns
mov
mov
push
mov
ljmp
inc
xlat
in
lods
fwait
pop
lods
sti
loope
xchg
rolb
mov
xchg
inc
mov
aam
cmpsl
mov
sbb
repnz
daa
pop
fwait
add
and
xchg
repnz
mov
ja
loopne,pn
mov
mov
jecxz
xchg
loopne
cmp
xchg
fucom
xchg
jmp
out
xor
pop
lods
scas
dec
cmp
mov
int
lret
lcall
pop
mov
stc
inc
pop
fs
xlat
je
jae
lcall
aaa
add
test
shlb
cltd
mov
pop
fwait
cmpsl
sbb
mov
cmp
push
imul
sub
jno,pt
jg
push
pop
scas
fwait
aaa
lock
add
xchg
ss
push
test
fnstsw
loopne
out
fstpl
scas
test
mov
andb
aas
out
mov
push
cmpsl
insl
aas
push
mov
fldt
or
arpl
mov
repz
push
arpl
push
add
cwtl
lret
into
repz
cmpsb
scas
dec
mov
movsb
fstps
aam
mov
mov
pop
clc
jg
xlat
adc
mov
xchg
inc
push
sti
inc
in
xchg
xlat
mov
inc
imull
testl
fmull
insl
bnd
jb
jb
fisttps
mov
sahf
das
xchg
pop
clc
xchg
into
test
decb
ret
pop
mov
cmp
jmp
les
mov
pushf
inc
dec
idivl
xorl
xlat
fisubl
pop
lcall
push
leave
mov
push
shlb
ds
ret
clc
lahf
adc
and
jnp
push
fnstcw
jae
sub
push
call
jp
or
mov
cmp
jnp
sub
cmp
incb
frstor
mov
iret
jo
fsubr
mov
mov
mov
mov
push
inc
out
mov
in
test
pop
jecxz
jp
mov
ja
fadds
cwtl
mov
mov
xchg
scas
and
jno
mov
mov
js
stc
inc
jns
mov
push
addr16
cmp
cmp
orb
mov
cwtl
xchg
test
pop
aad
dec
adc
mov
jmp
jmp
lods
outsl
fistl
xchg
lret
jbe
loop
mov
and
mov
fadds
cmp
sbb
int
fwait
lret
pop
and
popa
fcoms
lcall
repnz
fmul
jb
rcrb
pop
jne
pop
insl
sub
sub
fisubl
mov
inc
fdivrl
cld
mov
lds
scas
xor
xchg
mov
mov
sub
push
fsubrs
nop
xchg
xlat
ja
sbb
fxch
jnp
xor
mov
jg
mov
daa
adc
cs
mov
test
xchg
in
popf
mov
inc
xor
int
cmpsb
push
cmpsl
or
fldt
push
mov
mov
push
in
int
and
ror
xor
xor
shrb
cmp
sbb
jmp
pusha
out
inc
push
imul
fldt
scas
push
dec
sub
or
pop
dec
incl
mov
mov
mov
jmp
movups
xchg
in
add
cli
xchg
loope
pushf
nop
sub
jmp
dec
pop
xchg
mov
int
lds
pop
lea
push
add
cmp
xor
jmp
jp
sub
inc
sub
pusha
loope
inc
cmpsb
xchg
inc
xchg
ljmp
or
cmp
hlt
push
aaa
and
aas
add
adc
cmc
push
pushf
add
aam
jnp
push
pop
pushf
jne
push
ljmp
adc
movsl
insl
xchg
in
jle
xchg
leave
dec
js
insl
mov
xor
jnp
cltd
out
pop
fbld
adc
mov
repz
fisttps
pop
bound
xor
int3
popf
inc
mov
mov
lahf
aaa
out
cltd
ret
movsl
xor
fucompp
sbb
xchg
push
xchg
shll
sarl
sub
xchg
jb
jo
pushf
aas
xchg
iret
xor
sti
jb
in
jecxz
mov
adc
xor
scas
mov
int3
fiaddl
bound
sub
push
test
cmp
sub
ss
xchg
or
fcompl
cmp
dec
fsub
scas
and
push
mov
nop
lods
loopne
movsb
mov
sbb
movsb
in
aad
xchg
std
daa
dec
mov
lret
xchg
pusha
cmp
inc
adc
sti
ret
dec
test
enter
inc
leave
pop
cli
add
scas
mov
mov
mov
js
cld
mov
int3
lea
sti
cmp
bound
add
adc
mov
fs
mov
mov
enter
dec
cmp
jg
rorb
pop
inc
outsb
xor
jecxz
loop
pop
lods
or
or
push
das
scas
mov
jmp
aaa
mov
mov
mov
aaa
stc
es
inc
out
addr16
enter
shl
mov
pop
cmp
ljmp
clc
shll
or
aam
sbb
sbb
insl
pop
sbb
mov
push
fildll
hlt
xor
xchg
push
lcall
call
jae
addr16
sbb
xchg
dec
xor
repnz
int
push
xor
xchg
pushl
pop
add
push
sub
test
and
mov
shl
mov
or
repnz
xchg
sbb
jl
cmp
outsl
in
mov
popa
jl
mov
pop
push
ljmp
clc
repz
sahf
push
rcrb
sarl
xchg
jne
out
dec
xor
js
and
fwait
sub
push
clc
stos
cs
push
enter
add
push
hlt
lcall
push
cmp
push
inc
push
xchg
or
xchg
mov
sub
jecxz
sub
in
test
das
cs
test
sbb
xorb
add
xor
test
js
iret
sbb
jno
add
je
fidivl
or
mov
mov
inc
add
cmpsl
hlt
mov
lods
mov
jge
push
adc
inc
xor
fildl
dec
fcoms
xlat
sub
inc
mov
mov
repz
mov
out
dec
add
add
insl
stos
lock
or
movsl
in
push
lret
or
divb
fst
stc
addr16
testb
sbb
movsb
ljmp
enter
inc
icebp
gs
cmpsb
andb
jae
push
mov
lahf
jno
add
mov
jnp
push
ds
push
into
sahf
dec
mov
inc
mov
popf
lock
repz
sub
mov
movb
lret
add
cmp
or
mov
and
sub
fldenv
dec
data16
ljmp
mov
sub
sarl
dec
lcall
das
mov
sahf
dec
cmp
sub
fld
leave
cmpsb
xchg
mov
inc
push
inc
lahf
arpl
sbb
sub
jb
mov
and
dec
gs
and
xchg
mov
mov
popa
jecxz
inc
fs
xor
mov
push
adcb
sub
cmp
lods
push
jge
sbb
xchg
adc
popf
pop
add
loop
stos
leave
sub
mov
or
fucomp
es
in
lret
mov
pop
scas
mov
mov
cmp
outsb
ss
pop
cltd
jmp
push
or
adc
out
cli
pop
popa
jecxz
fwait
mov
xor
rolb
ss
sbb
scas
mov
sarl
xor
pop
and
rolb
sub
test
pop
sbb
jg
jp
pop
stc
lock
xor
sbb
mov
je
and
dec
loope
lret
mov
jge
test
aam
mov
push
xchg
mov
push
cmp
sahf
stos
xor
dec
and
sbb
jno
sbb
pushf
jns
mov
push
jno,pt
or
pushf
cmp
or
jecxz
sbb
daa
call
sub
fsubrs
lock
sub
clc
push
mov
push
int
xchg
fwait
stos
cmp
xlat
mov
out
hlt
fcoms
shrb
pop
test
push
jmp
repnz
xchg
cli
shl
sti
aaa
push
adc
xchg
dec
fidivs
mov
adc
leave
imul
repnz
cld
mov
cmp
jl
sub
mov
mov
mov
js
mov
icebp
loopne
popf
lahf
adc
or
xor
lahf
lahf
adc
adc
adc
xor
adc
idivb
addr16
ror
adc
inc
adc
inc
jmp
nop
aad
test
cmp
adc
into
fidivrs
repnz
stos
xchg
pop
jecxz
push
daa
dec
cmpsb
cmp
es
add
mov
fisttps
shrl
adc
push
mov
lcall
pop
int
pushf
xlat
push
inc
sub
jg
push
loopne
jp
cmp
test
dec
cmpsl
in
mov
mov
cmp
das
outsb
jno
faddl
dec
mov
insb
push
in
imulb
mov
movb
cmp
push
out
movsb
mov
je
shll
inc
add
cmp
xlat
jp
insl
lahf
popf
out
mov
jns
cmp
mov
push
icebp
lret
or
mov
out
ffree
jno
js
lock
in
push
dec
shr
push
leave
popa
lret
xchg
sbb
cmp
mov
add
mov
aad
dec
out
fildl
mov
out
xor
sahf
enter
test
or
xor
enter
lock
add
aam
in
rcrb
movsb
pop
ja
mov
lods
push
or
mov
mov
repnz
sbb
pmaddwd
loope
adc
mov
jl
clc
mov
clc
pop
xor
into
into
out
jnp
mov
sti
in
test
ret
jno
test
stc
test
and
ret
adc
sahf
mov
and
cmp
cld
mov
mov
push
xchg
js
test
add
push
sbb
jo
adc
scas
dec
sub
inc
pushf
and
stos
pop
imul
xchg
aas
jmp
adc
daa
push
fcmovne
mov
or
fcompp
mov
cld
mov
mov
int
out
pop
jl
lods
xor
xchg
jmp
push
lods
cmp
imul
sbb
xor
rcrl
in
cmpsl
lock
sbb
out
add
add
dec
aam
std
nop
imul
push
sahf
or
orl
fs
sbb
int3
es
or
mov
sub
adc
push
data16
push
mov
fildll
repz
loopne
mov
fcmovnbe
pop
and
xchg
outsl
mov
xchg
or
and
cmp
cmp
xor
push
dec
movsl
in
mov
mov
gs
mov
clc
repz
divb
mov
mov
push
rcl
fisubl
daa
aas
pop
jae
out
sbb
pushf
ja
leave
sbb
or
xchg
std
test
adc
jmp
cmpsl
int
xchg
popa
lret
xor
das
ds
mov
pop
adc
or
sbb
scas
inc
sbb
mov
push
jmp
addl
xchg
and
aaa
fmul
jno
dec
pop
shll
xor
out
inc
xlat
out
js
repnz
dec
mov
adc
inc
mov
ds
imul
fnstsw
cltd
ds
jns
stos
mov
jbe
sti
pop
shr
ja
cmp
inc
dec
adc
xor
sub
out
dec
loopne
cltd
sahf
and
popa
pop
lgs
xchg
push
sbb
xchg
xchg
dec
mov
test
jecxz
scas
jl
jo
ljmp
out
or
aad
fdivrs
inc
add
mov
loope
xor
ja
pop
push
sti
cmp
pushf
mov
fildl
fdivrl
mov
sbb
add
sahf
cwtl
dec
subb
push
sbb
data16
add
mov
xor
or
movsl
mov
aam
and
pop
in
in
setg
hlt
add
or
iret
cmp
repz
dec
push
mov
nop
fxch
sbb
inc
dec
pop
js
cmp
pop
hlt
and
mov
xchg
mov
dec
sbb
mov
shr
add
cmp
xchg
mov
xlat
jo
cmp
shll
bound
test
jl
mov
pop
xchg
ret
xchg
jb
andl
subl
jecxz
movsb
inc
xlat
or
push
jle
jae
adc
push
mov
imull
lock
push
push
sub
mov
sub
mov
cmp
xchg
sarl
sub
ss
ss
push
mov
sbb
mov
stos
icebp
xchg
fs
mov
ds
xchg
sbb
cmp
pop
jg
adc
sub
lods
inc
imul
repz
adc
adc
out
cmp
mov
mov
push
pusha
lahf
fldenv
aam
insl
icebp
jb
xor
repz
mov
lcall
push
and
xchg
ds
hlt
push
or
ds
es
js
imul
movsl
scas
xchg
jg
fsubl
mov
aas
pop
call
push
loopne
cmpsl
stos
cmp
add
and
scas
fwait
mov
faddl
mov
xlat
mov
jnp
add
mov
push
xchg
inc
push
mov
and
mov
lods
xlat
lods
repz
sub
ficomps
xor
stos
ret
nop
xchg
lds
jae
dec
sbb
dec
mov
xor
mov
xchg
pop
pop
ret
or
add
daa
mov
test
add
mov
add
roll
iret
inc
les
fsubrs
cmp
sbb
dec
push
cmp
and
pop
and
outsb
mov
push
aam
shrb
fistpll
lret
pop
testl
cmp
cmp
repz
or
xor
push
cs
inc
ficompl
in
push
test
mov
xchg
dec
enter
xlat
lret
xchg
jb
xchg
loope
jg
pop
ja
shrb
mov
pop
jmp
jnp
dec
sub
outsb
push
cltd
push
in
ja
in
xchg
scas
rcrb
ret
out
mov
cmp
mov
inc
ljmp
or
push
pop
xchg
std
cmp
lods
jbe
stos
aam
inc
cmp
or
jns
cmp
xchg
inc
xchg
inc
rol
cmp
sbbl
push
push
pop
mov
push
cli
movsl
xchg
mov
sti
mov
test
inc
dec
cmp
mov
pop
clc
out
sbb
call
push
cmp
lock
and
adc
andl
push
sub
sbb
dec
or
or
loop
inc
pop
and
add
mov
lea
dec
xor
add
test
out
es
lahf
ss
jne
mov
ret
sub
jl
call
sbb
lcall
sbb
inc
inc
orb
adc
shlb
or
and
sub
mov
movsl
mov
add
enter
xchg
stos
scas
sub
and
mov
pop
cmp
mov
adc
dec
xor
inc
bound
add
int3
jns
pop
popf
inc
scas
xlat
mov
aam
mov
dec
mov
stos
test
inc
pushf
xor
xchg
nop
sbbb
and
xchg
and
shrb
or
pop
and
fwait
lret
jmp
cmp
stc
fistpll
icebp
repz
ja
jmp
jmp
sbb
and
imul
test
mov
call
into
inc
popa
inc
imul
ret
lahf
xchg
jo
inc
dec
negl
adc
pop
xor
ds
mov
push
inc
xor
negb
incb
dec
shll
add
xorl
lahf
lahf
add
push
aam
clc
test
jnp
lea
ss
mov
aas
xlat
mov
sbb
add
jl
filds
jg
mov
imulb
mov
lahf
mov
and
and
nop
loopne
and
and
adc
invd
inc
adc
mov
insl
inc
pop
inc
aam
notb
mov
out
call
and
or
movsb
in
popf
shlb
push
insb
add
push
jo
sti
enter
or
add
addb
lret
sti
pop
fisttpll
dec
sbbl
and
cwtl
cmc
xchg
mov
sbb
mov
bndstx
pop
roll
or
dec
ds
add
push
mov
inc
daa
insb
test
jg
jge
cmp
jp
sbb
mov
rorl
mov
in
test
aaa
and
bound
sbb
fimull
mov
lret
daa
test
das
aad
jge
incb
popf
leave
dec
add
fldl
test
scas
test
inc
push
rclb
clc
mov
jns
mov
xor
cld
inc
shll
jbe
mov
arpl
cmp
icebp
or
jg
bound
sub
std
lea
push
xchg
add
leave
lods
cld
insb
push
mov
mov
icebp
cli
jmp
subb
sbb
das
add
add
arpl
mov
cmpsb
cmpb
stc
jl
adc
cmp
pop
je
popf
je
int3
sub
aad
mov
lods
je
pop
pop
jmp
push
pop
fdiv
jmp
ret
in
inc
scas
call
icebp
inc
jl
xor
movsb
gs
in
push
add
jp
cmpsb
sbb
cmpl
movsl
mov
push
or
push
std
ljmp
lods
aas
mov
pop
or
je
sbb
aad
fwait
cmp
xor
jno
shl
cli
push
add
dec
and
cltd
je
mov
cmpsb
inc
mov
push
mov
cmp
sahf
cli
jb
insb
loope
daa
mov
push
sbb
adc
repnz
cmp
pop
fdivr
mov
mov
sbb
lahf
clc
lds
aad
or
and
xchg
je
shr
cltd
sahf
xor
mov
cmpsl
sti
dec
or
jns
not
inc
jg
mov
sbb
sbb
push
out
mov
ljmp
jne
data16
or
cwtl
sbb
pop
sbb
shll
test
test
loop
shrl
test
sarb
inc
push
fidivl
ret
jns
or
inc
cmp
push
repnz
jbe
jbe
mov
aad
xor
pop
lret
inc
aad
out
dec
ljmp
dec
inc
ret
lret
jne
fnsave
pop
in
add
mov
mov
es
fwait
cmp
scas
and
out
data16
and
pusha
xchg
xor
aas
dec
in
bound
outsb
xchg
push
repz
ret
ljmp
jp
push
in
int
dec
xchg
adc
sbb
mov
xchg
inc
les
movsb
mov
or
dec
and
push
outsb
xor
insb
shrl
xlat
dec
dec
pop
pushf
pop
shlb
arpl
cwtl
lock
add
push
das
lds
add
mov
push
xor
test
ljmp
stos
dec
push
dec
popl
xlat
iret
repnz
movsl
adc
jb
sbb
fisttps
push
push
sub
xor
jbe
into
in
and
cmp
in
addr16
pmaxub
pop
lret
xchg
icebp
dec
pop
outsl
stos
loope
xchg
jbe
jnp
in
mov
jp
loop
sbb
lcall
pop
push
insl
das
cld
xchg
test
cmp
jg
xchg
imul
in
and
pop
inc
addr16
aaa
insb
and
stc
call
pusha
sub
repz
pusha
xchg
sbb
jae
insl
cmpsl
ja
fisttpll
sbb
jmp
pop
pop
pop
in
jge
sub
and
mov
cmpsb
mov
int3
push
mov
lds
fisubs
dec
lods
arpl
iret
dec
pop
inc
es
adc
and
pop
dec
decl
or
ficoms
icebp
mov
div
out
cwtl
mov
std
or
xchg
push
or
cs
popf
push
pop
cld
fisttpl
test
mov
add
mov
outsb
push
xor
pop
jae
fxch
jge
and
push
int
cmp
push
sbb
jecxz
jnp
add
sbb
and
add
push
or
xchg
fidivs
xlat
mov
push
fld
jle
pop
lcall
push
cld
sahf
sbb
stos
xor
divb
imul
insl
mov
rcrl
mov
cltd
cmpsb
push
mov
insl
sub
int3
sahf
sub
in
and
pop
xchg
fcoml
out
outsb
mov
sbb
iret
pop
in
test
leave
inc
add
loopne
in
mov
sbb
mov
scas
xchg
js
jl
pop
mov
fmull
inc
fs
sbb
dec
xchg
ret
xchg
or
jle
inc
cmp
cmp
cmp
adc
lcall
stos
pop
xor
xor
imul
sysexit
out
add
hlt
ficomps
fwait
adc
fs
test
jne
sub
out
cld
xlat
int
dec
aad
lahf
mov
mov
das
xchg
push
pop
bound
mov
lock
mov
xor
pop
rclb
jmp
push
mov
xchg
imul
pusha
mov
test
xor
cltd
mov
mov
dec
lea
repnz
and
jno
les
loop
mov
jbe
mov
subb
xor
adc
dec
fsub
pop
lds
adc
sbb
mov
data16
dec
out
test
aad
xor
pop
pop
jecxz
cs
adc
pop
test
push
pop
inc
shll
pusha
push
arpl
sahf
sub
dec
adc
out
pop
cmc
fisttpl
jle
or
int3
cmp
sbb
sub
repnz
rcrl
sub
pop
int
inc
subb
cmp
inc
subl
rcr
shr
insl
dec
leave
inc
repz
addr16
sti
xchg
test
in
mov
imul
hlt
sbb
lods
inc
aas
xchg
rorl
mov
cmpsb
adc
xchg
mov
or
lds
push
jnp
inc
in
inc
mov
mov
popl
xchg
cmp
pop
pop
mov
leave
xor
sbb
or
adc
mov
test
bound
lock
dec
adc
scas
icebp
or
imul
cmp
cltd
ret
test
adc
stos
jno
mov
xchg
sti
pop
xor
ds
mov
lods
mov
iret
arpl
pop
bound
mov
ljmp
mov
xchg
xchg
fmuls
inc
int3
xlat
inc
push
iret
push
mov
mov
clc
sub
add
dec
sub
or
or
mov
jge
adc
push
pop
cmp
mov
lret
xor
mov
out
outsb
hlt
jl
mov
rolb
aam
iret
xchg
mov
fwait
jecxz
data16
pop
or
xor
inc
out
xor
pop
cmp
xchg
lock
xorb
sbb
sbb
cli
add
pop
sub
sbb
sbb
and
cld
loopne
mov
jge
mov
mov
dec
mov
fnsave
push
push
test
add
add
mov
pop
sub
pop
sub
cld
clc
push
pop
in
push
push
push
pop
push
fisttpl
aad
aad
jnp
jecxz
movsb
out
cs
add
cmc
inc
jecxz
aaa
sti
push
mov
cmp
into
mov
mov
or
in
movsl
les
jbe
and
mov
mov
jnp
pop
mov
adc
fimull
push
xchg
mov
sub
cld
mov
loope
ret
adcb
push
pop
movsb
push
pop
mov
in
mov
jle
ja
lahf
mov
std
idivl
outsl
nop
sub
mov
mov
stos
and
add
insl
sahf
push
cmp
xchg
xor
repz
hlt
mov
data16
dec
sbb
cld
mov
mov
cmp
push
pop
mov
xchg
ds
mov
mov
incl
add
sub
loope
imulb
dec
daa
orb
sub
popf
cwtl
andl
lods
add
sub
push
es
in
dec
sbb
scas
gs
inc
nop
mov
push
bnd
mov
pushl
or
pushf
rcrl
loopne
ret
popa
lods
sbb
inc
dec
repnz
out
xor
mov
mov
orb
and
in
fsubr
mov
enter
adc
inc
push
jle
xlat
jg
jecxz
fnsave
xlat
xchg
mov
scas
mov
xchg
push
ret
inc
in
popa
loop
subl
aad
sbb
test
lcall
arpl
fadd
inc
ret
testb
mov
jnp
lret
adc
bound
push
test
and
es
aad
sti
sub
push
and
fisubrl
in
lods
mov
mov
pop
mov
lret
mov
fstpt
push
js
insl
packssdw
mov
xlat
sar
enter
push
push
or
inc
and
mov
repnz
xor
ret
mov
ror
cld
inc
test
fists
cmpsl
mov
sahf
mov
rcrb
sbb
adc
jno
divb
push
add
mov
dec
cmpsl
scas
jnp
mov
push
std
stc
fwait
or
movsl
loope
movsb
int3
sub
cmp
movl
and
sarb
push
icebp
or
pop
sub
call
mov
imul
xor
xchg
sbb
movsb
xchg
inc
cwtl
xchg
cmp
in
fdivr
xchg
dec
push
jecxz
ja
mov
fcmovnu
int3
jle
in
arpl
movsl
data16
jge
popa
insl
or
push
test
arpl
and
pop
cmp
sbb
divb
je
cmp
lcall
mov
sub
jg
xchg
and
or
sub
jge
mov
mov
in
jg
in
sbb
idivl
sub
jmp
popa
xor
mov
jbe
fstps
insb
or
inc
xorl
testb
outsl
add
das
aad
xlat
pushf
std
je
inc
push
pop
mov
sar
int3
inc
fistpl
mov
out
idivb
js
repz
mov
lahf
xchg
outsb
xchg
mov
mov
bound
push
lds
push
enter
pop
and
push
sbb
mov
mov
push
das
push
dec
pop
sub
cmp
or
sub
push
or
add
or
or
and
jle
icebp
std
cmpsb
xor
sub
cs
pop
lret
cmp
imul
rcrb
and
pop
shlb
cmp
out
sbb
or
and
ja
cmp
shrb
movsl
push
popf
inc
cs
adc
xchg
cmp
xchg
dec
lcall
hlt
lds
mov
dec
push
ljmp
fmuls
mov
lods
xorl
fisubs
addr16
inc
stc
adc
testl
mov
pop
mov
insb
lret
sbb
add
jnp
or
roll
lret
jl
push
adc
sbb
add
arpl
cmp
lahf
fs
sbb
dec
pop
pop
daa
sbb
push
dec
mov
mov
cmp
sahf
or
dec
aad
call
mov
test
mov
mov
in
pop
pop
lods
loop
ret
cld
inc
dec
je
and
fistps
sub
adc
mov
sbb
fidivrs
inc
clc
sub
inc
movsb
jo
mov
pop
stos
rclb
push
and
sbbb
jns
and
xlat
mov
fisttpll
imul
fst
mov
cli
aas
out
popa
aas
mov
dec
rcr
insb
mov
ret
jbe
les
pop
test
sbb
inc
xchg
mov
sub
add
or
lds
push
rol
push
mov
inc
mov
aam
popf
sub
push
pop
push
sbb
adc
xchg
iret
js
shll
outsl
sbb
cli
cwtl
mov
bound
mov
out
arpl
ds
rcll
outsl
inc
out
xor
popf
cmp
jmp
les
movsl
rclb
cmp
mov
add
clc
iret
pushf
and
movsb
push
dec
push
or
xchg
mov
je
in
fcmovb
and
pop
sub
mov
enter
aad
lret
shrb
dec
ret
repz
mov
sbb
int
xchg
test
pop
orl
pop
cmp
or
jno
xchg
mov
mov
cmp
cs
lret
xor
adc
dec
and
dec
cmpsb
push
push
sub
mov
or
data16
push
push
and
cli
mov
push
das
lods
xlat
loope
sbb
push
lock
jmp
insl
push
jg
ljmp
jmp
icebp
int
cmp
fidivl
cmp
adc
mov
pushf
ss
jp,pt
jp
dec
push
dec
push
xor
xchg
fisttps
mov
nop
dec
inc
loopne
loope
inc
and
enter
xor
mov
mov
push
inc
pop
pop
insl
ss
dec
lret
mov
pop
cmp
nop
jbe
jnp
or
pop
sbb
out
testb
das
out
pop
dec
xchg
fstpl
add
pop
lahf
mov
imul
push
mov
pusha
push
dec
hlt
je
push
xchg
push
pop
lret
sahf
call
out
dec
pop
or
loopne
pop
mov
ret
mov
pop
les
es
sub
push
int3
or
xor
xchg
faddl
mov
lods
mov
ffree
xchg
cli
rorl
add
fildl
loope
imul
imulb
fistpl
out
popf
test
pop
sbb
mov
xchg
inc
dec
daa
movsl
arpl
insb
mov
sbb
mov
adc
loopne
jmp
xchg
movsb
adc
mov
jne
mov
sbb
repz
push
cwtl
push
jmp
pop
ja
cmp
pop
add
mov
mov
inc
add
lcall
pop
add
jmp
iret
cmp
mov
or
mov
cmp
jb
iret
addr16
push
mov
jb
sub
cltd
js
sbb
sbb
test
xor
push
jmp
rolb
push
xchg
in
jne
lea
jle
fiaddl
or
xor
js
notl
popf
dec
mov
cmp
into
add
mov
fldenv
mov
divl
divl
rorl
push
popa
shll
or
mov
mov
pop
and
push
jns
movsb
in
cmp
push
or
sub
repnz
repnz
jbe
pop
pop
rcll
jecxz
leave
xchg
leave
mov
adc
sub
les
test
adc
inc
dec
cmp
sahf
mov
es
pmuludq
xor
loopne
mov
sar
scas
mov
inc
testl
imul
xor
mov
mov
adc
aaa
mov
test
arpl
jne
or
pop
jle
ss
push
mov
pop
cs
cmp
insb
sbb
mov
xor
push
sbb
out
cmpb
sbb
cmp
mov
iret
fisubrl
pop
pusha
btc
lret
sbb
inc
jle
mov
rcrb
lock
lea
jnp
leave
mov
or
shrb
pop
jae
lret
sub
xor
cmp
pop
push
cmp
add
mov
sub
jne
sbb
sub
xlat
sbb
and
cs
fnstcw
pushf
push
fs
bound
sbb
push
ja
mov
adcl
or
mov
push
cs
sub
cmpsl
and
cmpsl
stc
cmp
popf
lods
xchg
add
test
dec
pop
xor
mov
dec
lods
test
cmp
xchg
mov
loop
push
cmp
pop
in
and
and
push
out
add
xchg
mov
repnz
dec
or
dec
aas
sbbl
dec
into
mov
mov
stos
lea
ret
jae
jg
add
enter
xor
int3
in
mov
hlt
inc
sahf
pop
mov
ret
leave
mov
clc
test
fisttps
sub
loope
test
mov
push
fdiv
push
loopne
insb
mov
call
or
ds
ja
pop
mov
es
xorb
push
lahf
cli
aaa
push
lret
lock
ss
push
mov
mov
imul
jae
push
addr16
mov
xchg
jae
adcb
mov
mov
inc
cmp
sbb
push
push
or
lret
je
add
xchg
int
roll
movsb
add
clc
mov
push
or
test
or
and
lret
call
aas
jo
ss
jbe
sbb
daa
rorl
dec
stos
inc
xchg
test
lret
out
jne
ret
xchg
pushf
adc
sub
sbb
lea
xor
pop
adc
scas
scas
push
bound
xor
out
mov
fsub
dec
rclb
jmp
xor
shlb
pushf
mov
hlt
inc
push
jl
mov
cltd
xor
push
xor
das
sub
clc
daa
cmp
mov
sti
push
xchg
jecxz
stc
sahf
sbb
jp
or
sub
enter
inc
cmpsl
mov
sti
jne
divl
cwtl
jns
insl
xchg
ss
clc
push
stc
pop
int3
push
push
xor
and
icebp
into
push
popa
cmp
gs
adc
and
mov
sahf
jmp
xor
cwtl
sub
xor
mov
fcmovne
imul
or
sbb
femms
frstor
xchg
adc
jge
aam
push
jb
jge
sbb
popf
pop
lds
lods
jb
inc
stos
call
pop
add
cltd
mov
ret
push
scas
ret
add
push
stos
loop
fimuls
xor
and
test
pop
movsl
add
hlt
pop
mov
xchg
mov
and
push
ja
dec
iret
cld
mov
stos
arpl
jle
repz
pop
push
andl
cmpsb
imul
mov
and
or
rcll
ja
and
in
mov
pop
idiv
loopne
push
and
cmp
jl
stos
les
sti
lahf
mov
test
fimull
aam
fdivrs
pop
pusha
sub
andb
mov
pop
daa
xor
aaa
sarb
movsb
repnz
je
and
leave
mov
add
pop
and
add
jbe
arpl
jae
insb
mov
mov
adc
add
les
into
ds
rcrb
mov
pop
adc
mov
add
xchg
push
bound
lcall
ficoml
jl
ret
cmpl
cmp
cmp
jg
fbld
sahf
lods
or
jbe
fdivs
sahf
stos
and
loop
repz
dec
dec
mov
mov
jge
adc
popf
les
test
xchg
in
jle
push
cltd
data16
push
out
pop
flds
xchg
jne
loop
pop
mov
data16
adc
lea
testb
xchg
mov
jae
and
lds
hlt
jb
adc
xchg
mov
push
pushl
xchg
jmp
iret
cmc
lret
mov
test
or
adc
lcall
mov
ror
push
jge
sbb
inc
adc
in
jmp
test
dec
call
out
mov
fwait
stos
or
pop
cmp
out
cltd
daa
icebp
add
add
hlt
sbb
test
sbb
xor
push
rcrl
dec
icebp
inc
inc
leave
push
lret
test
dec
sbb
dec
fimuls
jb
push
or
adc
jnp
add
jbe
push
loope
push
loope
mov
xor
leave
lea
divl
dec
sbb
cmpsb
inc
lcall
mov
jb
xchg
push
add
or
cld
mov
dec
dec
mov
mov
adc
ds
addr16
sub
mov
jbe
cmp
js
lock
or
jo
add
or
jge
jge
ja
out
sbb
rcr
gs
pop
pop
sbb
sub
in
inc
rolb
push
fcompl
adc
sub
out
popa
fldl
mov
sbb
enter
add
cmp
inc
insb
inc
mov
push
sbb
sbb
movsb
ds
clc
jg
cpuid
push
rcrb
pop
ret
sbb
and
in
mov
hlt
loope
subl
out
scas
pop
iret
pop
out
inc
out
test
hlt
add
cmp
cld
adc
adc
ret
in
cld
jo
push
cmp
jno
sub
cmp
sahf
es
xchg
aad
inc
sbb
and
out
sub
xor
ds
jmp
push
push
fwait
scas
in
mov
mov
dec
data16
mov
int3
clc
lods
inc
mov
mov
xchg
sub
orl
lea
popa
fs
jbe
mov
mov
daa
leave
jae
push
dec
outsb
test
leave
mov
lds
inc
ds
pushf
stos
les
jl
cltd
ret
shll
sbb
cmpsb
addr16
mov
lea
or
xchg
in
sub
pop
rcll
pop
pop
or
cld
mov
sbb
mov
and
xchg
xchg
outsb
cmp
shl
push
fisttpll
out
stos
jl
mov
mov
xchg
fsubs
push
into
sbb
mov
sbb
daa
shl
sub
mov
pop
jno
imul
jb
aad
pop
jne
jmp
push
cmpsl
stos
sub
test
add
mov
mov
or
sub
sub
in
negb
mov
test
repnz
mov
sub
mov
pushf
push
mov
and
in
in
inc
sub
mov
sbb
jno
ss
xchg
mov
jnp
cld
jnp
pop
dec
inc
inc
clc
insb
out
movsl
in
or
popf
dec
sahf
rclb
daa
xchg
cld
sub
xor
cs
pop
jle
push
mov
stos
sti
das
sub
push
pop
jecxz
xchg
fcmove
inc
lods
inc
push
jne
mov
adc
mov
push
addr16
or
sub
fucomi
ficompl
sti
mul
std
mov
movsl
out
fwait
imul
cwtl
test
into
nop
mov
and
pop
mov
inc
cmpsl
adc
jbe
arpl
inc
in
das
je
lods
mov
movsb
mov
js
pop
sub
cmp
push
jbe
or
ss
in
pusha
fwait
sbb
push
ret
dec
stc
lock
jo
int
sub
stos
lock
mov
fsubrl
das
or
xor
pop
xchg
mov
call
rorl
stos
xchg
mov
dec
pop
and
pop
sbb
sub
pop
stos
in
sbb
std
cmpsl
cmp
icebp
fwait
and
ret
mov
into
fistl
cmp
pop
mov
mov
mov
push
push
cli
out
cmp
outsl
dec
jge
mov
outsb
push
xchg
decb
sbb
scas
jecxz
inc
enter
push
jmp
xchg
popf
or
fisttps
xchg
cmpsl
inc
gs
lcall
inc
push
pop
pop
cmpsb
push
mov
xor
imul
pop
xor
popf
dec
es
mov
pop
scas
xor
imul
imul
test
cli
rclb
std
xor
imul
rcrl
cmp
jmp
add
pop
enter
inc
test
outsb
leave
sub
jmp
std
mov
add
in
cmpsb
mov
imul
out
mov
out
pop
mov
inc
push
dec
xchg
adc
repnz
imul
add
pop
faddl
jb
jge
or
mov
and
mov
hlt
dec
inc
mov
jecxz
into
mov
add
mov
insl
mov
fistpl
ficoms
sub
aas
sbb
stc
repnz
xor
mov
sub
shlb
mov
call
inc
jmp
in
dec
rclb
add
bound
pop
sbb
outsb
cmc
mov
std
divl
adc
inc
pop
dec
sar
add
xor
into
or
test
int3
add
fidivs
inc
add
orl
pop
mov
fistps
inc
pop
popa
out
inc
fcompl
or
jb
test
inc
cmp
cmc
add
popa
out
cmc
mov
cmc
xlat
sbb
cmpsb
fsubp
push
mov
nop
sbb
out
adc
movsl
test
xchg
popl
movsb
gs
cld
and
jbe
push
mov
arpl
pusha
lcall
xorl
mov
in
ss
cmp
fcomps
divb
pop
out
fwait
xor
cmpsb
push
imul
in
xchg
mov
mov
and
cmp
addr16
xchg
pushf
dec
nop
dec
sub
int3
das
daa
and
enter
xorb
xor
inc
cmp
jge
jb
fistps
in
call
fists
pop
mov
ss
xchg
dec
mov
inc
mov
adc
aam
out
pop
mov
xchg
xor
fiaddl
bound
jmp
jle
mov
inc
mov
fmulp
sbb
negb
add
add
mov
lods
fsubs
mov
mov
pop
hlt
mov
movsl
xchg
fnsave
lcall
and
bound
dec
jle
mov
insb
rcll
push
sahf
jnp
cmpsb
add
xor
negb
pop
xor
jae
mov
pushf
jno
lcall
fdivrs
inc
je,pt
and
iret
test
lds
adc
lret
cmovs
and
push
insl
in
sbb
lret
popf
mov
and
sub
lahf
shlb
sbb
fstpl
xchg
pop
mov
sbb
fwait
adc
mov
dec
cwtl
cmc
push
xlat
cmp
out
cmpsb
imul
mov
xor
mov
outsl
jo
imul
notb
leave
inc
mov
cmc
push
dec
dec
test
cltd
mov
mov
hlt
lcall
lret
in
mov
pop
dec
loopne
sub
jg
repnz
dec
call
jmp
add
insl
jp
fiadds
jne
mov
pop
outsl
mov
xchg
xchg
jp
cmp
push
cltd
ljmp
ljmp
nop
and
lds
add
insl
pop
push
stos
jecxz
rorb
fldcw
out
daa
adc
je
jp
fnstcw
lock
mov
lods
idivl
mov
js
lea
outsb
cli
cltd
mov
fwait
cli
push
testb
out
repz
mov
fstps
ret
pop
add
sub
jnp
adc
stos
and
incl
jp
jg
std
jp
int
add
cld
and
push
mov
sahf
lock
jmp
jne
cmp
sub
or
arpl
adc
movsb
add
movsl
adc
dec
mov
jle
movl
push
mov
idivb
inc
mov
jae
or
insl
hlt
mov
pusha
stos
mov
std
or
jmp
pop
sbb
and
mov
cld
mov
dec
jnp
pop
mov
es
js
int
mov
mov
out
les
lret
movsb
mov
cmp
push
adc
sbb
cmp
cli
xorb
sbb
ret
sbb
and
xor
sub
mov
lea
stc
jecxz
movsl
or
je
lahf
cmp
add
adc
in
rcrb
unpcklps
inc
repnz
and
xor
shl
incl
icebp
inc
or
push
andb
sub
fiaddl
bound
push
fdivs
push
push
sbb
divb
jbe
add
aad
jle
imul
mov
pushf
std
jl
pop
push
imul
jb
jbe
push
mov
loopne
shlb
jp
xor
mov
xchg
mov
add
sbb
pop
xchg
push
rorb
push
test
or
push
scas
pop
call
jo
jg
add
lods
icebp
in
jns
mov
jle
add
push
iret
or
mov
js
sbb
nop
sbb
mov
insl
jne
cmc
popa
push
mov
aas
inc
fisubs
xchg
push
repz
mov
fcmovnu
fwait
xchg
mov
pop
jne
sbb
pop
xchg
pop
test
jae
cmp
dec
test
jecxz
xlat
xor
cs
in
test
cs
iret
dec
lock
jg
adc
xor
fdivrl
adc
sbb
pop
mov
scas
push
rcrl
push
inc
and
in
xchg
pop
call
int
jge
out
icebp
dec
clc
mov
mov
std
out
cmc
mov
jne
ljmp
and
dec
sbb
enter
and
push
aam
pop
sahf
pop
cmp
sub
cmp
mov
mov
js
mov
mov
xchg
xor
lock
in
lahf
dec
xor
ljmp
xor
push
mov
leave
pop
div
push
mov
xor
jecxz
inc
push
cmpsb
stc
mov
cmpsl
mov
sub
out
rol
clc
mov
mov
jmp
inc
cld
je
adc
sbb
out
cmpsl
lea
addr16
sti
add
imul
bound
and
fxch
xor
and
imul
mov
xor
es
mov
imul
loope
mov
adc
fsub
lcall
aaa
push
adc
cs
aas
xchg
jbe
sarb
lods
sti
inc
push
jl
inc
filds
mov
ljmp
into
leave
int
jp
or
loop
xor
dec
or
lods
jp
loope
adc
xor
stc
cwtl
jge
popa
jmp
adc
jae
movsl
test
leave
jnp
int3
out
sbb
cmpsb
pop
push
popa
adc
inc
mov
xchg
lods
jge
inc
mov
pushf
hlt
repz
jbe
test
test
jl
es
dec
jge
or
mov
mov
mov
iret
lahf
imulb
loop
loop
xor
cmp
lret
mov
addr16
inc
push
pushl
adc
inc
out
mul
int
sub
inc
jle
cmpsb
arpl
mov
add
sub
mov
fcoms
cld
or
inc
mov
lds
inc
mov
bnd
fisubl
mov
adc
adc
fdivrs
and
fmuls
mov
push
push
call
leave
cltd
sbb
pushf
push
xlat
mov
divb
adc
sub
cld
hlt
out
mov
add
mov
into
out
test
callw
cmp
xor
insl
clc
aas
jp
cwtl
push
ja
out
imul
jno
rolb
shrb
inc
arpl
in
jg
ja
clc
cmc
jae
cmp
or
xchg
push
imul
mov
xchg
push
push
jg
sti
xlat
mov
gs
subb
cwtl
mov
fmulp
ret
adc
shl
cmp
or
movsb
popf
jmp
add
add
mov
sub
fbstp
ja
test
adc
loop
jne
sbb
pusha
add
adc
lcall
sub
dec
dec
sti
ret
xor
cwtl
sbb
lea
fbstp
into
cltd
cmpsl
and
pop
test
mov
jb
int
add
lcall
adc
xchg
ror
in
mov
pop
xor
ss
addb
sub
add
rolb
and
sub
int3
inc
fs
mov
rcl
mov
das
lcall
std
xor
movsb
mov
and
je
dec
inc
adc
push
std
fisubs
dec
dec
fmull
stos
jle
cmpl
ja
mov
push
jecxz
movsl
adc
stos
mov
nop
ja
scas
out
insb
iret
mov
cmp
xchg
fnstenv
xor
testb
in
gs
or
lcall
ffree
stc
inc
js
cmp
pop
inc
in
leave
test
dec
icebp
dec
mov
jmp
mov
push
inc
fdivr
push
fimuls
xchg
mov
mov
add
xchg
xor
cli
push
and
mov
lret
mov
dec
subl
dec
icebp
and
mov
ds
shll
sbb
xchg
scas
inc
pop
xchg
movsb
dec
push
ficoml
popa
sbb
call
insb
das
add
mov
fs
xor
movsl
loopne
arpl
ljmp
pop
cmp
movsl
lret
ds
bound
cltd
inc
push
test
inc
jp
scas
repnz
test
in
dec
jne
push
fidivrl
and
nop
ret
mov
add
cwtl
fcmovne
jge
or
mov
push
jbe
push
add
lret
rorb
ja
push
sub
mov
bound
outsl
pop
in
adc
int3
loop
or
push
cmovbe
or
jmp
into
fistl
mov
pop
clc
dec
out
pop
incb
es
test
pop
imul
sbb
pop
push
dec
mov
je
test
iret
or
xor
push
addl
sub
inc
fsubrs
dec
jg
daa
dec
xorl
in
push
lods
test
add
in
inc
lea
dec
dec
shl
pop
inc
sbb
cmp
mov
adc
stos
rcl
scas
adc
cmp
mov
dec
cwtl
xor
stc
in
jmp
or
imul
ret
je
mov
jmp
mov
and
shl
push
pop
dec
and
sbb
cwtl
inc
inc
xor
leave
or
push
sbbl
jle
iret
imul
inc
aas
xorb
inc
jns
push
loope
or
shll
es
dec
movsb
sahf
outsl
arpl
or
bswap
pushf
mov
adc
iret
sub
std
popf
pop
test
jp
daa
pop
fisubl
xchg
pop
xchg
inc
js
je
cmp
add
or
dec
push
push
test
mov
pop
xor
leave
inc
add
outsb
lret
je
mov
xor
fstpt
sbb
jge
xorl
jecxz
push
mov
mov
push
aam
shll
lcall
dec
push
faddl
cmp
out
ljmp
pop
cmp
sub
pop
std
pop
add
inc
imul
or
jmp
xchg
into
ds
xor
mov
call
pop
mov
aad
les
jp
test
adc
jno
aad
push
mov
and
jae
scas
repnz
add
xchg
xchg
imul
fcomps
mov
clc
inc
cmpsb
jge
repz
mov
pop
idiv
pop
add
insl
jno
adc
stc
jbe
mov
test
xor
cs
sbb
xor
sbb
push
scas
adc
ds
pop
xor
aad
jno
lahf
test
insl
mov
orl
lods
fists
fimuls
add
repnz
fisttps
daa
cmp
inc
dec
into
fs
jno
fstpl
push
mov
mov
mov
dec
inc
icebp
sbb
mov
push
inc
mov
pop
pushf
icebp
sbb
js
imul
enter
je
pusha
and
aam
ret
push
mov
lds
scas
mov
mov
rcrl
cmp
pop
test
mov
adc
mov
inc
xor
mov
jle
xchg
ljmp
jne
imul
aam
inc
jne
ljmp
push
sbb
jle
jnp
out
call
sub
out
sub
sbb
idivb
dec
adc
jg
jb
sarl
ja
andb
jmp
in
dec
jecxz
addl
out
testb
cwtl
cmp
outsb
adc
mov
mov
fnstcw
push
shlb
sbbl
aaa
cmpsb
nop
cmp
xchg
ret
loope
int
popa
pop
xor
out
sbb
mov
or
adc
add
jp
test
les
dec
dec
lret
push
movsb
pop
mov
fmuls
leave
jmp
bound
push
mov
ljmp
popf
arpl
push
test
insl
lret
sub
leave
mov
inc
dec
sub
movsl
mov
and
repnz
jmp
loope
repnz
fstpl
imul
fucom
dec
lods
mov
mov
insl
or
stos
dec
jmp
aaa
xchg
or
imul
lds
xchg
xchg
mov
mov
dec
nop
or
fwait
out
cmp
repz
movsl
mov
mov
mov
push
ss
int3
enter
imul
js
cwtl
xchg
arpl
push
lock
jnp
gs
push
sub
adc
cmpsl
rcrl
outsl
pop
push
inc
lret
rorl
push
imul
inc
xchg
aas
ret
sbb
into
out
fsubrl
push
push
nop
mov
leave
push
add
jo
fcompl
dec
lahf
lods
and
outsb
cmp
mov
call
pop
out
cmp
ja
fucomp
mov
mov
fst
lds
xchg
xor
pop
add
jge
ret
cmp
cmc
push
or
mov
test
test
push
cmpb
lods
ret
aad
fldenv
inc
pop
movsb
dec
test
pop
mov
push
mov
mov
es
mov
push
pop
mov
mov
lea
cmp
je
xor
cmp
and
lds
test
sub
mov
adc
or
mov
fucomip
lret
scas
popa
push
mov
dec
bound
adc
jg
cltd
xchg
sub
addr16
mov
repz
test
mov
push
inc
mov
vunpcklps
push
aad
popf
mov
dec
push
pop
scas
pusha
mov
mov
subl
sub
pop
xchg
imul
inc
stos
dec
int
pop
mov
jae
push
sbb
cmp
rol
leave
xlat
push
jns
loop
sub
ss
jnp
and
xor
lods
pop
push
lret
dec
sub
sbb
gs
lock
sbb
test
cmpsb
inc
notl
sub
nop
ret
vaddsubpd
lret
scas
inc
xchg
out
ss
sub
pop
mov
ljmp
imul
stos
test
cmpb
xor
push
fs
scas
mov
xchg
cltd
daa
push
ljmp
aad
xchg
xor
jne
in
test
int3
cmc
cmc
data16
sub
jg
inc
popa
jge
dec
ret
js
mov
xchg
icebp
xchg
jle
push
lods
jp
bound
cmpsl
inc
repz
rorb
dec
mul
lea
jne
push
in
mov
mov
jne
xchg
cmp
adc
in
xchg
xchg
sbb
or
cmpsb
xor
aas
repz
pusha
stos
xlat
bound
loop
sbb
repz
mov
scas
aam
mov
mov
mulb
dec
lcall
mov
jo
mov
loopne
mov
cmp
dec
leave
jns
push
insl
movsl
jae
outsb
cmpsb
subl
push
push
cmp
popf
jecxz
lahf
mov
cmp
jb
orl
lods
jno
leave
add
je
inc
test
cld
jecxz
xrelease
jecxz
imul
xor
call
jle
ficoml
mov
dec
fdivl
push
dec
xchg
mov
add
mov
push
pop
scas
jns
lods
xchg
mov
add
dec
fbld
cli
adc
stc
test
add
dec
cs
dec
test
push
lahf
pop
mov
cmp
mov
mov
mov
or
or
push
xchg
int
push
mov
or
adc
push
and
mov
xchg
cmpsb
push
jb
mov
pop
call
mov
pop
jbe
movsl
push
cmp
add
mov
out
in
mov
xchg
ss
xchg
jg
push
loope
rcrl
lret
xor
int
jae
cltd
and
push
mov
and
or
mov
lods
mov
aam
or
dec
pop
movsl
inc
imull
iret
ret
and
or
in
adc
sub
icebp
xchg
and
aaa
lock
dec
repz
xchg
cmc
lods
mov
push
jo
mov
lock
movsb
lock
rcrb
xor
andl
jne
push
push
fadds
inc
out
outsb
ficomps
cs
shll
push
insb
add
dec
lcall
xor
sbb
xlat
mov
das
or
subl
inc
mov
bound
outsl
pop
idiv
cmpsl
mov
clc
cmpsl
shll
fmull
fnsave
repz
jno
enter
iret
ss
fnstcw
ret
dec
mov
adc
lcall
mov
sub
inc
stos
cmp
adc
dec
mov
mov
test
mov
cmc
int
fisubrl
je
inc
cmp
shrb
or
in
sub
sub
subw
xor
dec
xor
xchg
push
test
or
cmp
test
inc
and
repnz
stos
xor
out
pop
add
in
xchg
test
mov
mov
dec
sbb
push
leave
hlt
ja
or
stos
lea
sub
jp
dec
fdivrp
out
ljmp
cmp
push
push
rcr
sti
cltd
dec
fstpl
std
jecxz
scas
popa
int3
dec
rol
cmc
mov
dec
scas
cmp
or
jnp
xchg
fildll
jne
mov
inc
ds
push
jb
pop
lods
int
xchg
xchg
cmc
push
jns
xor
push
loopne,pt
sbb
push
movsb
test
jo
cmp
mov
dec
test
fsubrl
xchg
insb
pop
mov
test
lret
add
lret
pusha
negl
decl
jne
xor
dec
add
add
mov
xorl
test
aam
and
sbb
sub
sbb
lods
mov
or
enter
dec
insl
mov
jge
cmp
popf
adc
mov
and
cmp
inc
jp
xchg
push
shrl
lods
xor
scas
add
rcll
popf
cli
bndldx
pop
std
or
cs
out
mov
xor
sub
or
xchg
cwtl
pop
loopne
jecxz
pushf
sub
add
dec
into
daa
mov
notb
es
sti
add
or
leave
das
in
mov
cs
pop
mov
sub
sub
cmp
popf
lds
mov
inc
push
out
popa
movsl
push
adc
mov
xor
mov
jne
into
sub
ds
shr
ja
bound
inc
lret
xchg
es
int3
sbb
test
xor
cmc
iret
cmp
enter
push
clc
loopne
mov
cmc
jno
jmp
pop
add
xor
dec
fucom
sub
aas
and
jge
divl
je
sub
pop
sub
adc
test
xchg
jge
repnz
dec
mov
fimull
addr16
data16
lods
jp
pop
jecxz
lock
pop
inc
jno
mov
cmp
sbb
cltd
out
xor
mov
inc
addr16
pop
jle
mov
movsb
test
sub
pop
fistps
aam
sbb
jge,pn
int
push
jl
xchg
sub
int
xor
cmc
outsb
jnp
js
int3
jbe
pop
shrb
add
or
sub
cmpsl
fcoml
mov
push
xor
int3
inc
xchg
dec
sbb
lea
mov
int3
cwtl
pop
fldcw
mov
jne
push
mov
bound
hlt
jb
mov
add
jg
aad
out
or
mov
and
in
insl
lret
insb
fwait
push
sub
jp
push
dec
mov
inc
sub
mov
pop
sub
sub
add
stos
fs
aad
xchg
cmp
adc
stc
test
aas
xchg
loopne
cmp
pop
and
cld
fmulp
aas
pop
sub
xchg
add
fisubl
or
test
pushf
lcall
mov
xor
mov
outsl
mov
add
sub
push
add
orl
out
mov
inc
adc
test
ret
sub
arpl
push
popf
push
adc
jmp
popa
mov
testb
sbb
and
inc
push
test
jl
in
mov
insb
dec
test
adc
in
dec
cmpsl
mov
inc
das
adc
push
repnz
sti
dec
sub
ja
mov
das
mov
scas
push
mov
inc
adc
push
leave
fs
ljmp
iret
cmpxchg
test
cltd
push
mov
icebp
inc
das
mov
pop
in
test
aad
les
cmc
jbe
loop
rcr
push
and
nop
xchg
inc
gs
dec
push
mov
jns
mov
inc
mov
mov
into
dec
fidivrs
add
pop
movsl
loope
js
mov
xchg
push
adc
xchg
lock
mov
mov
movsl
cmp
out
into
aam
movsb
jns
fisubs
daa
mov
enter
mov
outsb
es
in
out
jo
mov
dec
cmp
pop
inc
repz
mov
mov
and
adc
jge
adc
push
push
dec
popa
xchg
mov
jae
outsl
lahf
les
repnz
ss
addl
or
adc
dec
xor
push
or
out
push
out
jecxz
cmp
js
xchg
mov
cmp
xchg
add
fsubrp
movl
int
sub
mov
and
test
out
fmull
xchg
sub
mov
pop
add
inc
mov
push
rcrb
out
outsl
es
iret
sub
imul
adc
jns
jne
add
add
or
or
test
add
adc
repnz
fistpll
jl
test
sbb
inc
fcoml
jns
ja
inc
lods
and
sub
scas
loop
fistpll
jno
cli
jmp
lcall
and
in
jns
dec
or
adc
dec
inc
dec
sbb
mov
clc
xchg
xchg
pop
insl
xor
aam
mov
xchg
sub
pminsw
ss
sub
mov
lea
jmp
jo
xor
mov
loope
jle
adc
xchg
mov
test
pop
cltd
cmp
inc
pop
lds
sub
xor
cmpsb
or
in
movd
sub
test
adcb
gs
test
mov
push
xchg
dec
sbb
sbb
add
or
mov
shrb
imul
aad
sbb
push
push
sbb
dec
mov
sbb
jae
repz
xchg
pop
or
nop
sub
xor
cmc
cltd
or
xchg
jg
test
push
ljmp
clc
fdivrs
mov
adc
mov
push
ds
fmuls
push
insl
pop
push
int
fwait
jp
sub
jb
sti
jle
cli
mov
mov
out
jg
xchg
push
cmp
jmp
push
lds
arpl
cmp
push
push
mov
push
inc
int
push
inc
cmc
pusha
mov
inc
ret
enter
xor
mov
cmpsl
xor
add
mov
sbbb
cmp
jb
lcallw
fs
nop
inc
adc
sub
test
push
dec
jae
pop
sub
mov
mov
outsl
sti
addr16
jecxz
int
xchg
jl
sbb
icebp
js
clc
push
mov
inc
jp
pop
sbb
test
aam
ja
or
cmp
jp
insb
dec
pushf
inc
push
push
xor
enter
push
call
mov
pop
pop
movsl
stc
add
sub
adc
inc
inc
jmp
sbb
in
add
mov
out
push
rcrb
lret
xchg
in
fsubrp
lea
mov
adc
or
jmp
jmp
inc
and
sub
xlat
repnz
out
rclb
insl
lea
dec
pop
mov
mov
icebp
test
fsubrl
lods
xacquire
jmp
push
jmp
pop
hlt
or
cwtl
pop
fdivrl
xor
jne
repz
test
sti
adc
lret
jae
mov
xchg
jg
sub
stos
cmpsb
mov
mov
call
das
cmpsl
sub
lock
push
inc
cmp
cmp
repz
push
in
andl
adc
mov
push
jle
or
pop
mov
xchg
and
pop
adc
add
add
mov
sbb
jne
pop
rcll
or
xchg
mov
push
lods
jecxz
loop
pop
dec
and
add
sub
loope
scas
lods
in
dec
dec
and
mov
jns
in
popa
cmpb
jmp
sahf
stc
lds
adc
fnstenv
cmp
pop
pusha
xor
mov
xor
imul
mov
sti
pop
inc
mov
xchg
cmp
xchg
jne
cmp
mov
test
sarl
pop
jns
and
dec
js
mov
dec
mov
stc
sbb
enter
bound
mov
or
insb
cmp
pop
push
mov
and
cmpsl
dec
pop
push
mov
xorb
lret
xchg
jb
adc
orl
inc
aas
push
sbb
popf
scas
jle
inc
fsubrl
int
mov
stos
test
cmpl
pop
and
xor
or
daa
dec
xor
imulb
push
push
jmp
add
add
pop
inc
test
inc
int3
fs
mov
lret
fs
fsubr
aam
mov
xorl
outsl
push
pop
leave
push
add
push
rep
dec
imul
inc
push
or
aad
or
loop
jl
mov
cmp
pop
mov
push
mov
mov
jo
cmp
jae
test
push
cmp
pop
in
in
popa
jg
mov
mov
jl
sti
xor
loop
adc
xor
lds
inc
dec
mov
jo
cld
rorb
cmp
add
out
addb
call
inc
xchg
cmp
and
add
add
lds
mul
add
loopne
in
dec
add
imul
lcall
jle
stos
jbe
fidivl
pop
mov
fcmove
lods
fnstenv
stos
cli
movsb
mov
or
enter
gs
push
mov
dec
cmp
bound
test
aas
repz
jl
in
std
pop
sbb
xchg
jg
or
add
outsl
outsl
inc
mov
into
enter
scas
jnp
dec
mov
adc
add
aaa
cmp
sub
jno
mov
sbbb
cmc
in
xor
enter
xor
adc
push
jecxz
push
jg
fwait
jns
jle
pop
adc
jg
cli
mov
aas
stc
sbb
dec
nop
mov
fcomi
sahf
inc
dec
fwait
jg
hlt
mov
xor
sahf
jne
sub
cmp
clc
cld
cmp
xchg
mov
inc
dec
mov
sub
and
adc
aad
or
mov
cmp
sbb
mov
cmp
icebp
mov
sub
std
push
movsl
mov
or
xchg
fidivrs
cmp
xchg
or
test
push
dec
out
sbb
loop
hlt
loop
pop
sarb
jmp
les
shll
mov
pop
adc
jne
jo
out
mov
sbb
les
pop
imul
nop
dec
push
add
and
std
dec
mov
or
mov
sbb
out
jo
popf
imul
push
bound
notl
stos
outsb
cmp
or
icebp
movsb
cmp
shrb
lcall
repz
xchg
mov
push
pop
testl
in
lret
imul
cltd
push
pop
clc
mov
sub
inc
jnp
cwtl
mov
es
jle
arpl
out
mov
mov
sti
xchg
add
cmpb
inc
mov
push
int
sbb
pop
jl
into
xlat
or
xor
mul
out
push
push
push
mov
movsb
adc
adc
adc
mov
xchg
addl
sti
jg
sub
push
adc
sarl
scas
mov
std
cmc
iret
and
jecxz
jns
xchg
xor
jle
pop
cltd
fiadds
pop
or
movsl
xchg
cmp
adc
or
adc
rclb
mov
adc
lods
sub
aam
adc
dec
jmp
lcall
pop
cwtl
xor
mov
or
mov
jnp
movb
cmp
out
mov
jl
push
mov
out
adc
cld
loope
jle
xchg
repz
in
outsb
pop
jno
dec
push
leave
imul
psrlw
mov
ljmp
popa
dec
mov
sar
dec
add
pop
mov
sbb
sub
into
scas
or
sbb
std
pop
stos
jnp
push
pop
cmpsb
idivb
imulb
jne
icebp
aaa
movsl
test
enter
cmp
cmp
shll
pop
gs
jns
mov
out
aam
sub
ficompl
lds
push
xorl
cmp
xor
sub
add
xchg
stos
xor
fidivrs
sub
shlb
ret
shlb
or
inc
movsb
sbb
movsb
int3
inc
cmp
sub
ljmp
fwait
push
pusha
loope
mov
cld
sub
les
pop
adc
call
outsl
lods
es
gs
or
xor
int
pop
push
jae
sbb
lods
cld
add
jg
pop
mov
mov
scas
jle
pop
ljmp
inc
xor
sub
jns
push
push
push
cli
jns
inc
nop
inc
or
iret
fcomps
cmp
lcall
xor
push
in
inc
push
lds
adc
inc
repz
roll
lods
cmpsl
ret
loopne
test
jo
jg
mov
mov
jnp
push
push
add
adc
psadbw
mov
or
out
mov
nop
nop
xor
xchg
sti
adc
out
insb
imul
cltd
cli
test
jo
push
shl
xor
andb
pusha
push
pop
addl
repz
jmp
fiaddl
pop
test
jmp
xchg
aas
stc
ret
out
add
movsb
xor
out
notb
imul
xchg
into
push
popa
mull
in
imul
inc
loopne
scas
hlt
jo
mov
rol
pushf
push
push
pop
cmp
mov
xor
fsubrs
push
lahf
push
imul
dec
daa
scas
cmpsl
outsb
cmp
mov
add
movsl
enter
mov
xchg
xchg
jmp
adc
and
push
and
out
test
push
and
scas
dec
repz
lock
inc
or
decl
pusha
out
push
inc
jne
movsw
xchg
shl
inc
adc
xor
mov
jecxz
and
xor
pop
jg
mov
cmp
add
stos
cmp
or
inc
push
sub
push
mov
mov
inc
or
stc
ja
sbb
push
cmp
cli
inc
aad
mov
pop
add
or
mov
jnp
xor
push
leave
push
lods
cmp
adc
fistpll
and
in
cld
outsb
pop
push
out
lds
loope
and
lds
test
push
mov
jae
movsb
test
inc
and
sub
mov
lods
push
aad
jnp
adc
out
xor
aaa
or
xor
jl
rcrl
mov
in
jns
jmp
fisttpll
adc
push
xor
or
pop
cmpsb
daa
cltd
bound
ds
scas
or
jnp
call
aad
mov
xor
ds
dec
pop
loope
jg
push
arpl
cmp
and
sarl
mov
push
repnz
dec
jbe
adc
mov
stos
mov
push
shl
cwtl
fstpt
jo
fbld
les
aad
dec
fsubrl
cld
repnz
adc
cli
imul
dec
xchg
pop
xchg
jno
cld
movsb
testl
mov
or
mov
xchg
ss
xchg
pop
jp
add
aam
in
out
mov
aam
roll
jg
imul
sub
mov
or
sub
cmpsl
pop
out
in
ret
pusha
mov
inc
xchg
xor
insl
adc
pusha
andb
pop
inc
pop
add
es
test
inc
lret
inc
stos
push
sbb
push
ret
mov
mov
add
hlt
ljmp
movsl
loopne
and
or
and
lret
icebp
push
pop
rcll
sbb
inc
arpl
mov
icebp
adc
movsl
icebp
aam
push
jmp
fbld
pop
pushf
inc
dec
lods
mov
mov
sub
xor
xchg
popa
inc
sub
outsb
adc
dec
mov
mov
std
xor
idiv
jnp
ret
out
lahf
test
inc
ljmp
loop
cmc
out
lcall
mov
mov
adcb
add
lahf
out
test
mov
add
adc
or
fst
mov
bound
xor
adc
leave
je
lret
add
cmp
movsb
lock
adc
lahf
inc
xchg
std
dec
mov
cmp
aas
cmp
lds
mov
mov
pop
xchg
jmp
dec
jno
daa
or
cmpsl
mov
push
xor
les
push
cwtl
xchg
jl
dec
xchg
repz
in
mov
jmp
xlat
pop
mov
mov
mov
aam
cmc
dec
fsubr
or
aad
outsl
fs
out
jg
fwait
push
aam
xchg
xlat
xor
mov
xorl
sbb
subb
xor
imul
fwait
imul
fmull
xchg
jmp
in
mov
cltd
mov
nopl
loopne
js
cltd
sub
lea
mov
push
sbb
fwait
adc
stos
or
lock
pusha
leave
push
mov
lahf
imul
pop
cltd
mov
mov
fcomps
idivb
into
xor
add
fmulp
inc
cmp
pop
out
fsubrl
aas
gs
cmp
jle
jae
dec
rcll
mov
inc
mov
xor
in
mov
mov
jge
cmc
jge
jge
xor
cld
push
test
jns
xchg
out
mov
add
push
sbb
rcll
pop
test
and
or
loope
shlb
push
and
out
xor
mov
jle
jne
iret
cmc
add
sub
mov
fnstenv
push
push
out
cmpsl
or
fs
rcll
pop
rcr
push
jge
jnp
jg
xchg
xchg
and
out
jl
push
fwait
mov
mov
stc
cmpsb
cli
sbbb
push
mov
sbb
outsl
mov
mov
fs
pop
xchg
lds
pop
cld
mov
xlat
push
mov
pop
test
pop
sbbb
or
fstpl
cmp
jae
jb
inc
out
inc
sbb
inc
cs
jno
repz
sbb
pop
imul
repz
in
push
sahf
pop
call
or
imul
out
sbb
dec
push
xor
outsl
jge
loopne
jle
push
jmp
inc
sub
scas
sub
pop
adc
and
or
data16
and
jne
dec
lds
or
sub
mov
loopne
sarb
lahf
jl
repz
sbb
xor
lret
sub
sub
inc
mov
or
idivb
sub
sub
xchg
in
insb
cmp
js
jecxz
or
out
outsl
pop
into
cwtl
push
xor
out
call
jp
pop
in
or
push
jle
inc
ss
push
cmpb
outsb
mov
cmc
sbb
cwtl
ljmp
fsts
daa
loop
or
add
sbb
lods
mov
fs
movsl
lods
repnz
mov
or
leave
dec
enter
xchg
mov
xchg
dec
mov
xchg
sarl
fwait
sbb
fldenv
outsb
out
das
insl
nop
jo
leave
insl
shrb
mov
rep
lret
jmp
jae
test
pop
enter
mov
mov
push
push
fistl
ret
bound
xchg
das
shl
enter
push
xchg
aas
sbb
shlb
mov
mov
cmp
jp
repnz
add
movsb
mov
mov
lgs
jp
cli
xchg
test
mov
in
icebp
sub
mov
add
sbb
cltd
and
jno
mov
outsb
mov
cmp
add
mov
mov
xchg
std
add
js
incl
mov
dec
sub
jno
stc
add
jmp
in
out
mov
push
adc
or
ja
loopne
cwtl
in
push
mov
mov
stos
sbb
insb
repz
add
mov
dec
xchg
xchg
jecxz
jle
addr16
arpl
adc
push
dec
push
xchg
sbb
push
sub
xchg
inc
rorl
cmc
iret
xor
and
xchg
xlat
daa
out
hlt
dec
dec
fucom
mov
ja
stc
push
dec
lock
push
lahf
std
cmc
in
add
hlt
mov
sbbl
and
fnstcw
pop
repnz
into
adc
adcl
jle
repz
cmp
inc
es
out
xchg
repz
cld
loope
cmpl
addr16
lahf
mov
cmp
fwait
pop
test
xor
shl
push
stc
add
adc
dec
add
sti
pusha
ss
push
add
xor
sbb
imul
cmp
dec
dec
xor
cmp
sbb
arpl
cmp
mov
imul
lret
pop
stos
lret
mov
dec
adc
int
in
mov
repnz
cmp
push
ljmp
pop
mov
push
mov
xchg
mov
ret
stos
adc
cli
in
push
add
repz
pop
push
add
cmpsb
mov
and
jb
dec
stos
inc
push
or
push
push
push
cmp
cli
cld
inc
mov
cmp
imul
sub
xchg
jecxz
je
ss
popf
scas
stc
mov
daa
jmp
in
test
sub
loop
adc
cli
adc
mov
jg
sub
lahf
faddl
js,pn
fistps
mov
sub
ds
xor
cmp
and
jnp
dec
dec
cwtl
imul
pop
jp
mov
cmp
jns
jo
push
stc
insb
mov
sbb
inc
leave
shr
add
pop
xchg
mov
jecxz
inc
or
xor
or
jns
icebp
inc
scas
ret
mov
xchg
ja
sbb
or
cmp
fsubrs
jl
andl
sbb
loop
int3
or
jge
shrl
sub
xchg
push
stc
jle
sbb
es
dec
jbe
xchg
jle
arpl
pusha
test
scas
sub
bound
les
aas
push
cmpb
loopw
sbb
sub
jmp
scas
in
add
gs
mov
sub
and
ret
mov
insl
or
icebp
aas
dec
sub
inc
mov
push
xor
cmp
dec
int
cmp
pushf
sbbb
cltd
adc
int
adcl
movsb
xchg
nop
mov
mov
out
dec
push
xor
movsl
mov
push
cltd
fdivs
ja
cltd
xchg
push
fsubr
cmp
lods
cmc
mov
mov
arpl
cwtl
shl
sub
or
outsb
call
in
xchg
fmuls
hlt
xchg
push
out
cmp
or
mov
enter
lea
bound
pushf
and
fcomi
dec
fistpl
add
cmc
arpl
in
daa
arpl
mov
pushf
mov
aam
jmp
mov
lock
sbb
mov
scas
movsb
adc
mov
or
lret
pop
cmp
cmp
bound
and
mov
lock
or
repnz
jmp
mov
push
rcrb
jne
inc
mov
push
pop
jle
mov
mov
test
push
inc
mov
ja
push
aaa
dec
movsb
xchg
xor
mov
dec
pushfw
mov
call
fwait
inc
cs
and
mov
dec
sbb
rclb
jns
out
mov
sti
add
cli
adcb
outsb
mov
daa
jo
jmp
out
popf
push
mov
jge
pop
mov
ss
ja
outsl
pop
fbld
xchg
imul
mov
sahf
or
lods
adc
lcall
dec
mov
ret
mov
or
xlat
aam
xchg
out
mov
outsb
daa
push
adc
mov
sub
mov
or
adc
shll
nop
mov
popa
movsl
inc
push
dec
sbb
push
jae
and
add
push
jmp
fs
push
dec
outsl
mov
jp
ljmp
sbb
or
dec
je
cmp
dec
sub
xchg
daa
pop
push
dec
mov
outsl
mov
cmpsl
mov
dec
pop
das
iret
inc
jns
mov
xchg
leave
shll
loop
sbb
jmp
jnp
dec
ret
xchg
mov
xor
xchg
push
cmp
cli
pop
and
cmp
sbb
sub
mov
jne
jmp
and
ret
or
and
push
adcl
mov
push
adc
sarl
pop
and
mov
mov
sahf
stos
vmovupd
rcl
push
lods
jno
out
adc
hlt
jle
sub
push
inc
bound
fs
cmpsb
pop
mov
aad
push
fldl2e
or
add
mov
das
mov
aad
loop
mov
xchg
xchg
popf
ljmp
ss
xchg
outsb
inc
inc
clc
shlb
sarl
sub
xlat
mov
cmp
shll
xchg
popa
movsl
imul
xchg
sbb
fsubrs
dec
out
in
fidivrl
cld
movsl
dec
jg
or
test
addl
pop
mov
and
add
popf
gs
inc
ffree
scas
mov
sub
fcoms
repz
addl
insl
add
inc
or
push
icebp
adc
adc
xchg
fcom
out
push
orl
out
and
or
xchg
fnstcw
xchg
hlt
push
pusha
mov
loope
cs
hlt
dec
loop
jp
pop
jmp
dec
dec
inc
lahf
cmp
fs
pop
or
jg
decb
dec
fistps
mov
xor
adc
jmp
faddl
orb
push
int3
adc
rcrb
xor
mov
sub
int3
pop
mov
dec
inc
push
adc
loop
and
mov
clc
subl
mov
add
push
inc
movsl
je
mov
jbe
mov
pop
ret
push
lretw
je
fdivrs
faddl
imul
dec
dec
xchg
movsb
and
xor
test
xchg
mov
dec
adc
cmp
add
mov
les
fdivs
inc
inc
xchg
test
pop
inc
xchg
outsb
push
mov
fs
xchg
notb
es
jle
jl
pop
sbb
out
mov
mov
lea
enter
pop
pop
xchg
mov
add
dec
xchg
jmp
mov
mov
jbe
lock
pop
movsl
pop
push
adc
xor
rclb
inc
clc
loopne
xorb
push
dec
pop
test
mov
js
xor
xchg
add
test
negl
jmp
fisttps
xchg
jae
sub
jbe
jl
dec
push
pop
push
andb
pushl
xchg
xchg
mov
outsb
pop
rcl
cmp
leave
pop
arpl
movsl
test
and
imul
pop
in
lret
loop
faddl
fwait
gs
mov
shll
outsb
int3
bound
dec
push
adc
xor
jl
jl
lea
sub
test
fsub
mov
sbb
and
mov
js
repnz
je
loopne
stc
push
stos
adc
cmp
mov
mov
inc
and
xchg
sahf
xchg
jge
dec
ret
cwtl
cmp
jb
mov
xchg
jmp
cld
pop
xlat
mov
jne
rcl
pop
mov
and
jne,pn
pop
mov
pop
pop
adc
cmp
push
int3
sbb
xchg
out
mov
rcrb
dec
xchg
xchg
xchg
dec
mov
cmc
xor
dec
mov
jg
inc
pop
rcll
mov
ds
add
push
rclb
jle
inc
xchg
jl
sub
mov
je
or
sti
and
psubusw
sbb
ds
jns
dec
and
mov
gs
into
mov
and
ret
xor
sbb
jmp
fisubrl
mov
lret
pop
enter
nop
mov
lock
lods
mov
push
movsl
in
ret
push
mov
fiadds
aaa
pushf
lret
sbb
lcall
jne
test
or
test
adc
push
subb
mov
cltd
jns
push
add
loop
pop
add
pop
subb
pusha
sub
mov
sbb
or
jo
jl
jo
icebp
jge
mov
or
cmp
stc
jne
enter
in
fcoms
and
inc
push
and
mov
daa
andb
push
mov
cwtl
dec
and
and
push
or
jbe
aam
push
jno
inc
xchg
jb
mov
mov
push
mov
ja
int3
cs
dec
pop
inc
dec
dec
das
aaa
and
cmp
fs
fstp
ljmp
push
ret
outsb
mov
call
mov
inc
jb
mov
sub
test
into
leave
pop
fldcw
add
loop
scas
jge
stos
cmc
mov
jge
add
std
mov
inc
mov
into
jg
test
std
es
sbb
movsb
out
popa
lea
lret
pop
test
or
jno
imul
jge
sbb
arpl
clc
xchg
pusha
je
jno
nop
xchg
or
pop
pop
cmp
xchg
adc
aas
mov
sar
stos
mov
push
sbb
add
into
je
movsl
mov
sub
pop
and
mov
mov
lods
sub
sbb
cli
push
adc
dec
jb
sahf
xchg
and
sub
movsb
push
lods
dec
pop
dec
xchg
push
pop
inc
leave
mov
cmp
xor
cmp
inc
xor
push
cli
push
push
xor
xor
mov
out
dec
push
push
test
notb
jle
cld
ljmp
std
rcrb
data16
ret
cld
into
shrb
inc
loopne
pop
decl
mov
adc
push
mov
popf
dec
mov
mov
xchg
insl
lock
inc
push
pop
cmp
jno
dec
inc
xchg
fnstsw
dec
pop
add
ret
pusha
incl
repnz
and
adc
fs
jp
dec
lahf
xchg
les
insb
out
jecxz
bound
cltd
ret
cld
xchg
sbb
rorb
sbb
sbb
loopne
pop
icebp
cmpsb
int3
orl
cvtdq2ps
cmp
dec
and
xlat
aaa
xorb
xchg
pop
cwtl
inc
xorb
mov
cmpl
cmp
push
pushf
into
and
cmpsb
mov
outsl
addb
insb
lret
xor
rcrl
clc
lcall
or
popa
mov
mov
pop
fildl
in
pop
push
fiaddl
adc
nop
aaa
pop
xchg
jnp
fisubl
jne
jp
add
sub
pop
mov
mov
imul
push
fs
mov
fcmovne
or
add
inc
or
and
or
lods
sub
adc
cwtl
or
inc
dec
jo
roll
loopne
push
push
rorl
std
cmp
call
cmc
js
popa
mov
loop
sbb
insb
add
mov
dec
add
sub
jge
ror
or
ss
stc
cwtl
ljmp
imul
ss
test
xor
adc
test
mov
std
fs
lods
cmp
les
out
call
jns
lret
shlb
jecxz
mov
sar
aas
push
add
or
scas
cmc
int3
test
or
orb
xchg
in
dec
inc
dec
lcall
cmp
mov
testl
imul
add
push
int
es
or
sbb
sahf
jo
movsb
test
cmp
clc
and
lret
jns
push
dec
dec
cmp
fisttpll
sub
stos
loopne
movsl
cmp
push
sub
pop
dec
pop
mov
out
outsb
movsl
inc
aad
mov
lahf
mov
fisubrs
out
lcall
int
fwait
inc
imul
pop
adc
jg
mov
mov
pop
or
or
jno
push
inc
xchg
push
jne
mov
out
mov
and
imul
scas
test
loop
cmp
add
cmp
mov
cmc
rcl
push
pop
mov
in
mov
lret
je
lcall
mov
mov
stos
rcrb
ljmp
fistps
pop
dec
sbb
dec
mov
mov
bnd
inc
xor
inc
pushf
imull
push
xchg
lods
jnp
outsl
pop
sbb
cwtl
mov
popf
cmp
call
pop
push
out
mov
stc
int3
xor
leave
push
daa
adc
in
jl
push
movsb
lret
fidivs
dec
and
aad
mov
fbstp
repz
push
inc
sbb
and
add
inc
cmp
dec
pop
or
aad
fsts
sub
inc
push
sub
les
pop
push
popf
add
mov
sbb
xor
mov
fistpl
testb
mov
pop
ljmp
outsb
jo
pusha
mov
mov
mov
not
mov
xchg
repnz
icebp
icebp
cmp
es
in
xchg
cmp
arpl
mov
andb
sbb
xor
mov
enter
mov
jmp
dec
rorb
sbb
js
pop
addl
arpl
in
xchg
arpl
sbb
jo
sbb
and
pusha
pop
shll
ds
dec
pop
idivl
dec
mov
cld
and
outsb
add
cmp
daa
mov
daa
pop
xchg
je
in
mov
nop
dec
es
cmp
or
or
sbb
rcrb
sub
sbb
sbb
xchg
outsb
shl
dec
pop
adc
loopne
ljmp
outsb
add
sarl
iret
hlt
imul
lds
xchg
sbbl
dec
jbe
sbb
adc
loopne,pt
jno
fnsave
ds
pop
fnstenv
sbb
roll
rol
push
cmp
lea
sub
popf
sub
xchg
sbb
cs
inc
push
in
icebp
sub
mov
in
mov
out
push
add
jge
out
cli
jbe
push
adc
xchg
push
sub
mov
fmull
cld
gs
sub
add
dec
fstpl
push
xchg
inc
xor
aam
dec
mov
mov
jge
adc
mov
js
inc
out
popl
sbb
enter
dec
dec
add
and
dec
push
shl
lahf
repz
dec
shlb
sahf
inc
xchg
jmp
mov
xchg
mov
std
aaa
push
xchg
shlb
fists
push
and
mov
cltd
mov
sbb
add
mov
jnp
mov
arpl
mov
aam
or
aaa
data16
ljmp
and
stos
pop
jb
scas
das
daa
sbb
inc
dec
xchg
outsl
insl
fsubp
mov
cli
cld
out
pop
fistl
sahf
jbe,pt
icebp
stc
xlat
imul
in
lods
mov
lods
data16
mov
fstp
xlat
cmp
mov
xchg
push
jp
out
std
jno
push
push
mov
enter
sbb
push
cmc
div
idiv
jg
xor
outsb
icebp
ret
jg
movsb
push
lret
dec
cmp
xchg
filds
ljmp
or
ds
sbb
dec
mov
inc
cli
dec
inc
sub
sbb
mov
lcall
test
shll
push
sub
dec
nop
out
incb
xor
adc
mov
push
sti
and
or
mov
fiaddl
jo
mov
pusha
push
pop
rolb
lret
movsl
add
push
sbb
sub
lds
push
test
cld
mov
or
xchg
fisubrs
sub
mov
out
mov
lods
or
insb
xor
in
in
stos
inc
mov
je
lock
sub
jnp
movsb
lahf
adc
lret
outsb
sbb
dec
sbb
gs
das
repnz
push
jbe
mov
dec
inc
push
mov
mov
and
xchg
inc
xchg
dec
sub
pop
xorl
mov
int3
and
or
sbb
fildl
decb
lods
jg
pop
push
cmpsb
daa
adc
sahf
pop
jmp
jge
repz
push
aas
add
lret
cwtl
les
sbb
daa
xchg
jg
dec
and
mov
divb
add
pop
and
fsubrs
sub
and
cmp
movsb
pop
xchg
cli
mov
pop
std
fnstenv
jnp
out
mov
add
cld
cmpsb
push
cld
pop
ja
cmp
adc
jbe
inc
pusha
or
test
std
outsb
dec
xchg
stos
mov
mov
out
jle
mov
outsb
push
into
int
xchg
sar
cwtl
push
add
lcall
scas
in
cmp
setp
shrl
cmp
mov
jbe
xchg
push
push
mov
ds
inc
sub
adc
mov
outsb
dec
xchg
and
mov
push
sub
fldl
mov
or
sbbl
or
loopne
adc
ret
and
sbb
daa
and
mov
and
adc
in
mov
fwait
daa
pop
dec
and
pop
mov
lods
inc
loope
shll
fmull
in
pop
daa
sbbb
push
insb
cs
cmp
xchg
xchg
inc
dec
sbb
std
xchg
xchg
cmp
jae
fs
lock
ret
movsl
xorb
push
jo
xchg
fabs
test
push
das
ret
xchg
inc
cmp
out
ficompl
fmull
adc
xchg
aas
sub
jp
xor
adc
push
test
insl
xor
ds
arpl
pop
sbb
xorb
repnz
ret
es
or
sub
lods
mov
bound
roll
and
or
std
pop
in
xor
aaa
push
dec
mov
scas
push
mov
push
jno
inc
test
and
mov
les
insl
inc
adc
mov
xchg
dec
mov
sahf
and
push
fdivs
mov
aad
leave
addr16
jp
lea
sbb
adc
in
xor
out
movsl
push
lods
add
mov
pop
lret
mull
add
shl
inc
mov
pop
jo
push
fmuls
fdivrs
xchg
and
data16
in
shl
xchg
xor
scas
mov
sbb
jg
test
or
sub
lcall
push
or
add
xchg
cwtl
xchg
jnp
fsub
mov
lret
fadds
dec
and
xchg
fildl
push
push
fstpl
jns
test
mov
jl
or
jns
addl
adc
in
cmp
xchg
mov
xor
jo
lods
add
mov
enter
pop
mov
mov
dec
lahf
push
xor
in
jge
stos
stos
stos
les
or
jb
pmulhw
jo
loop
movl
mov
int3
sbb
xchg
into
push
sbb
je
das
jno
mov
adcl
cmp
sub
push
xor
push
rorb
inc
mov
mov
lods
jmp
xchg
xorl
adc
subl
add
pop
in
arpl
movsb
inc
or
std
xchg
adc
cwtl
pop
inc
imul
and
ja
mov
lret
js
mov
icebp
lods
sub
std
jno
jnp
mov
sbb
lret
jno
mov
jg
scas
jo
push
jbe
cmpsl
jmp
mov
mov
push
sub
rorb
sarb
push
dec
xor
xchg
cmpb
in
jnp
jne
stos
loopne
inc
or
mov
pop
jle
pop
xor
repz
lcall
and
decl
out
lret
sbb
add
imul
lret
mov
add
clc
stc
scas
out
out
xor
dec
sub
std
or
aaa
sbb
pop
mov
jbe
clc
gs
lret
xchg
enter
ficompl
add
sub
loop
cmp
mov
pop
pop
push
and
mov
mov
or
push
in
xchg
jnp
adc
pop
push
lds
sbb
arpl
rorl
enter
xchg
out
lods
mov
adc
fidivs
xor
add
pop
and
cmp
adc
lea
nop
sbb
mov
sbb
pop
js
ds
adc
mov
shl
fnstsw
das
mov
pop
in
call
lods
jmp
add
push
mov
mov
cs
xchg
sahf
orl
dec
mov
pusha
xchg
sbb
lcall
hlt
insl
ret
ljmp
out
leave
pop
pop
jg
xor
loop
mov
sbb
xchg
icebp
cmp
mov
sbb
into
mov
test
rcll
push
jecxz
pop
int3
movsl
mov
popf
push
or
pop
int3
mov
and
push
cmpsl
dec
ret
xor
mov
xchg
mov
mov
xchg
fs
mov
sti
jb
int3
pop
pop
rolb
sar
inc
add
pop
push
iret
mov
in
push
pop
xor
in
repz
dec
mov
mov
dec
xlat
das
les
shl
pop
sbb
and
mov
or
pop
jns
add
sbbb
adc
test
mov
inc
subl
push
and
sbbl
push
xorb
add
and
jp
loopne
das
mov
push
push
fisttpl
mov
jle
lcall
popa
popf
mov
aaa
mov
dec
lahf
sahf
gs
cs
ds
lret
mov
les
mov
nop
enter
mov
xor
mov
std
mov
daa
push
sub
add
sub
push
push
mov
jo
movmskps
lret
sub
je
sbb
push
pop
int3
mov
data16
lret
fstpl
xchg
add
add
mov
or
inc
jns
and
iret
popf
ja
inc
in
cmc
je
out
dec
pop
push
xlat
cltd
fsubrl
cmc
out
dec
ds
fs
std
shlb
inc
jl
jnp
mov
mov
jnp
cmp
and
pop
outsb
ror
xor
jge
cld
imul
sti
inc
dec
or
mov
mov
repnz
cwtl
std
gs
sub
into
lods
push
dec
lcall
mov
sbb
sti
and
rcr
mov
leave
les
cli
push
pop
sub
dec
call
mov
push
jno
mov
push
cmp
out
xor
ret
push
ss
lock
loopne
sbb
out
push
jb
in
inc
faddl
add
sbb
es
adcb
sub
inc
pop
push
loope
mov
fstps
or
daa
adc
jmp
push
icebp
inc
iret
sbbb
insb
test
rcl
xor
mov
push
mov
cmc
jl
pop
ficoms
lods
clc
inc
stos
sbb
hlt
or
lret
std
pusha
ss
push
jae
aaa
pop
addr16
fidivrs
dec
insb
jp
push
push
jno
adc
adc
out
out
insl
mov
pop
repnz
sub
jp
sbb
inc
cmp
dec
cltd
popf
push
or
or
sub
and
inc
fbstp
popf
aad
and
ficompl
inc
ljmp
jnp
mov
mov
dec
movsl
ffreep
sbb
add
add
js
mov
out
das
inc
pop
adc
ret
shll
fsubr
inc
out
mov
xor
mov
pop
jb
xchg
jae
mov
icebp
cmpsb
aam
inc
fcmovne
test
addl
push
fwait
pop
push
xchg
nop
add
sbb
pop
scas
adc
aaa
xchg
nop
cmpl
ss
in
popa
addl
adc
lock
ja
xadd
popf
adc
dec
in
mov
jg
in
jp
add
mov
adc
lods
inc
xor
outsb
pop
xor
cwtl
ljmp
leave
add
fs
push
lahf
xchg
mov
mov
insb
stos
enter
fs
out
fyl2xp1
sahf
inc
inc
push
and
ljmp
arpl
pop
rolb
jae
and
dec
js
arpl
inc
test
sub
jecxz
pop
jmp
xchg
adc
mov
mov
psadbw
pop
fldl
sbb
mov
jo
in
fsubl
in
push
add
idivb
pop
add
mov
xor
pusha
adc
sbb
sub
or
push
pop
jecxz
xchg
pusha
in
int
sub
loop
push
xchg
xor
pop
das
notb
dec
aad
lock
in
xor
inc
cld
cwtl
mov
jo
in
call
test
inc
lcall
xlat
fxtract
jnp
inc
mov
adc
push
lret
iret
add
mov
or
hlt
iret
or
sahf
add
shr
mov
jne
call
dec
and
add
xchg
scas
cmp
jno
ja,pn
ret
xorl
jmp
inc
or
loop
lcall
pop
out
out
repnz
xchg
aas
or
js
jo
gs
jns,pt
pop
xchg
lock
xor
mov
in
lea
push
push
push
push
pop
push
ljmp
xchg
pmaxsw
imul
pusha
pop
mov
add
mov
andl
mov
xor
xor
adc
sbb
or
test
and
out
pop
std
imul
sbb
test
enter
push
aad
jbe
ds
test
out
sbb
jg
enter
add
stc
pop
jmp
pop
leave
rclb
cmp
xchg
insb
dec
ds
shrb
fisubrs
out
dec
push
push
mov
stc
sarl
push
cmp
sbb
arpl
inc
push
lea
dec
adcb
cmp
jnp
cmp
jp
sbb
jl
xchg
jnp
mov
jl
sahf
jnp
sysexit
sbb
aam
outsb
stc
mov
fisttps
sub
cmp
xor
ja
inc
scas
es
fsub
adc
and
sbbb
sub
sbb
test
lret
out
bnd
and
cwtl
int
les
jmp
int
push
loopne
cmpb
call
pushl
jg
scas
xlat
inc
inc
int3
add
lods
or
pop
test
rcrl
sbb
cmp
sti
sub
outsl
lea
dec
xor
inc
test
in
or
loope
andl
decl
subl
or
pop
mov
jmp
jmp
xchg
sub
jmp
sbb
fdivl
lcall
sbb
fcoml
mov
out
shll
dec
je
ja
cmp
aad
lahf
add
push
push
outsb
fisttpll
fldl
mov
xchg
mov
ficoms
pop
les
or
stos
inc
cmpb
cmpsb
or
pusha
int
lods
dec
sbb
jmp
aas
in
call
or
mov
mov
imul
fcoms
adc
pusha
jecxz
mov
dec
push
pop
cmp
in
out
filds
adc
in
lea
add
dec
sub
jb
movsl
ret
jle
mov
jecxz
js
andl
sbb
sub
inc
fxch
ror
es
ret
cmp
aad
xchg
jmp
pop
jecxz
push
jmp
sbb
int3
push
icebp
ja
das
nop
and
ljmp
test
dec
jle
or
mov
push
imul
push
jno
psadbw
aaa
test
adcl
xchg
lods
jbe
mov
aaa
pop
xchg
jb
fidivs
out
in
push
movsb
loop
or
mov
sbb
mov
shrl
push
in
icebp
int3
aaa
lods
std
jne
pop
iret
push
mov
cmc
dec
push
dec
shlb
lods
ss
insl
xor
lods
and
push
insb
jmp
test
jge
dec
push
cmp
loopne
xorl
adcb
in
mov
add
add
push
aas
lds
imul
scas
fnstenv
mov
lahf
ss
gs
leave
jge
and
pop
and
aas
sub
cld
lods
ljmp
in
inc
adc
xchg
das
inc
rorl
sbb
mov
xchg
jle
loop
idivl
or
cmp
pop
outsb
call
dec
pusha
xchg
loop
mov
outsb
sbb
inc
fsubs
imul
mov
mov
clc
mov
pop
pop
mov
dec
aad
aaa
mov
add
push
iret
and
outsb
repz
pop
std
cmp
out
movsb
cwtl
sbb
xchg
sbb
scas
cmp
movsl
repnz
push
lock
cli
pop
imul
cmp
movsl
xor
bound
lea
cmp
cmpsb
sbb
pushf
jmp
in
insb
pop
insb
repz
add
ja
aam
xor
inc
lcall
lds
ret
sbb
enter
sbb
pop
xlat
fucomi
inc
outsb
add
inc
push
shrb
jne
dec
shrb
mov
outsl
insb
je
pop
push
loope
xor
xor
jo
dec
mov
mov
pop
cmp
ficomps
push
out
or
push
adc
jne
lcall
idivb
pop
into
cwtl
movsl
popf
mov
int
es
jmp
push
rcll
ret
jno
push
xchg
out
subb
pop
cmp
cmp
das
jmp
jp
fistl
jnp
jo
ja
mov
std
aaa
leave
pop
or
repnz
sti
fimuls
xchg
andl
adc
cmpl
jge
sub
add
mov
shll
push
aam
stos
mov
mov
mov
inc
stos
mov
xor
dec
cmp
stos
data16
cmpsl
mov
cmp
call
stos
aaa
adc
loop
sub
inc
push
leave
mov
cli
jbe
dec
mov
pop
xor
test
out
xchg
mov
push
sub
cmpsl
aad
xchg
push
cmp
mov
jl
into
add
jl,pt
fsub
jle
dec
mov
and
xlat
repz
lock
dec
cmpb
inc
fimuls
pop
data16
shrb
stos
lret
test
inc
test
test
lds
gs
inc
pop
lea
xor
jae
jae
cmc
or
lods
in
mov
pop
dec
pop
out
scas
pop
mov
movsb
pop
mov
jns
lock
nop
add
push
sub
test
ret
mov
pop
scas
out
call
cmc
xchg
mov
arpl
sbb
lret
inc
push
add
sbb
in
push
dec
mov
lock
push
pop
mov
imul
pop
or
sub
and
xor
sub
or
dec
jle
adc
mov
mov
adc
push
mov
xor
jne
xlat
add
xlat
jmp
jne
fs
adc
mov
cmp
adc
pusha
xor
or
xor
xchg
dec
sbb
repz
sub
test
ficoml
sbb
aad
xlat
xchg
jmp
mov
aas
setno
pop
outsl
test
sub
xchg
mov
mov
add
push
pop
lock
loope
dec
cltd
sub
loop
or
jmp
xlat
mov
and
pop
sbbb
inc
mov
lods
pushf
hlt
nop
loopne
arpl
loopne
fidivs
jmp
fcmovne
and
cld
push
xchg
rcrl
lea
mov
dec
sbb
jne
xchg
mov
or
pop
cmp
inc
movsl
shl
adc
cmpsl
lcall
sub
and
jno
loopne
push
push
jge
jecxz
rcrl
mov
cwtl
add
clc
ret
cmp
add
xchg
fisubrs
add
jle
dec
jb
inc
je
mov
jo
ljmp
mov
icebp
lock
mull
ds
daa
fiaddl
mov
stos
dec
mov
adc
icebp
gs
or
gs
test
pop
fistpl
jnp
lods
mov
fdivrl
push
jno
xor
push
imul
xchg
jmp
stc
jo
icebp
andl
jle,pt
fwait
lock
sub
es
lea
iret
xchg
movsl
jge
lods
mov
or
daa
push
shlb
std
popa
fldt
rcll
push
and
shlb
sbb
pop
or
push
addr16
and
aad
and
or
jno
shlb
clc
ror
mov
stc
repz
pop
fimull
dec
out
out
and
adc
lcall
sub
scas
outsl
mov
je
pop
cltd
shll
call
jge
mov
hlt
sbb
add
les
add
addr16
addl
mov
push
mov
lahf
imul
repnz
xchg
pusha
mulb
push
lods
aad
scas
push
roll
icebp
push
rcrb
cld
cmp
adc
ljmp
test
sub
xchg
scas
inc
sub
mov
inc
sub
scas
fdiv
rcrl
mov
inc
stc
mov
stos
xchg
stos
mov
xchg
mov
mov
movdqa
adc
jb
fs
shl
imul
mov
lcall
mov
push
add
jae
mov
movsl
push
push
sbb
rorb
repnz
ss
cmp
jmp
out
dec
fnstcw
lcall
adc
or
pop
xlat
dec
xchg
lods
arpl
adc
xchg
call
fldenv
sub
cmc
popf
arpl
sub
mov
leave
pop
clc
jbe
pop
push
or
outsl
dec
sbb
xor
je
pop
jo
test
sbb
test
clc
stos
sahf
imul
in
movsb
or
mov
movsb
leave
mov
push
fimull
les
lahf
pop
ljmp
jne
mov
les
inc
loopne
push
jnp
in
pushf
data16
fdivrl
mov
or
inc
jns
or
mov
push
popf
and
mov
out
jmp
imul
sbb
add
repz
subl
push
mov
sub
sbb
fildl
xlat
clc
scas
jge
cli
xchg
push
sub
push
lcall
mov
cmpsb
adc
hlt
aad
loopne
inc
cwtl
stos
cs
cmp
sbb
xchg
scas
or
dec
jle
pop
jmp
ljmp
or
test
cltd
cwtl
inc
lds
in
int3
fimull
mov
cmp
mov
arpl
add
or
daa
sbb
leave
js
rcll
cmp
inc
pop
in
lods
out
aaa
or
shlb
xchg
nop
jbe
jns
mov
jns
outsl
pop
cmpsl
adc
xchg
adcl
xchg
add
popf
and
mov
imul
mov
not
jecxz
movl
repnz
in
push
in
sbb
sub
dec
sub
jg
fwait
push
int3
or
cltd
sbb
roll
inc
es
cmpsb
imul
movsb
popf
int3
jp
sti
clc
outsl
adc
cmp
rorb
or
push
cld
mov
mov
push
gs
insl
into
daa
out
sub
or
mov
aam
sbb
dec
adc
adc
sub
sahf
xor
lds
mov
test
push
dec
lcall
dec
cltd
mov
ret
movsb
and
mov
cmp
inc
aam
mov
pop
or
push
cmpl
outsl
jl
call
aaa
rcrb
lea
sbb
js
push
push
fstpt
ret
push
xchg
sbb
test
xchg
xor
out
jp
xor
push
insl
mov
lock
test
push
inc
fildl
std
fidivs
inc
jne
adc
add
sarl
fsubrs
cmp
cmp
push
push
sub
fcomps
sbbb
xchg
or
lock
inc
add
lds
mov
int3
cmpb
test
sub
pop
mov
push
jecxz
fsubr
push
stc
pop
push
nop
test
movsl
pop
in
pop
and
mov
jb
push
mov
movsb
push
lret
aad
mov
lods
jg
mov
repz
test
sbb
inc
repnz
xchg
xbegin
daa
xsha1
cmpsb
dec
lret
popa
iret
mov
add
pop
xchg
sub
das
outsl
mov
test
sub
add
js
sbb
lret
lahf
mov
arpl
cmc
push
cmp
jbe
sahf
fistpll
repz
lret
mov
or
pop
sar
xchg
ds
jae
jb
sti
daa
lods
ja
dec
sbb
push
fnstcw
mov
pop
cli
push
decb
xchg
add
and
mov
test
xchg
cmovb
and
inc
xor
test
or
mov
fmuls
insl
push
jle
mov
jg
xor
aas
mov
push
mov
movl
inc
es
test
fwait
call
push
xchg
jmp
and
ret
xchg
shrb
scas
sub
lods
mov
jb
xor
mov
inc
mov
or
rclb
out
scas
sbb
and
dec
xchg
nop
outsl
xor
xchg
rcll
adcl
mov
push
jns
and
jb
adc
dec
push
test
out
cwtl
pop
sti
out
add
int3
lds
int
fs
addl
stos
rcl
pop
jno
test
and
aas
pop
mov
stos
outsb
mov
fs
in
and
jecxz
lret
pop
cmpsl
mov
or
imul
pop
lret
mov
dec
ds
push
fsubrs
mov
xorl
movsb
and
mov
test
lea
fisttps
xchg
mov
mov
or
push
repnz
insl
xor
adc
jg
xor
jecxz
lcall
push
cmp
adc
popf
shlb
xor
push
mov
mov
loopne
push
lret
cmpl
mov
fwait
and
pop
addr16
mov
icebp
and
jl
dec
add
push
in
jo
cwtl
in
mov
rcrb
movsb
xchg
pop
movsl
adc
cmp
sub
xlat
jecxz
pop
int3
shlb
mov
mov
out
fstpt
out
fistps
loop
inc
mov
inc
cmc
fchs
pusha
addr16
stos
push
movsb
cmp
mov
sti
inc
and
lea
test
outsb
mov
jae
and
jmp
push
jae
sbb
inc
sti
xchg
ret
mov
add
cmp
pop
xorb
fidivs
les
stos
incl
mov
repnz
sub
jp
jno
xor
das
jns
ljmp
inc
jno
pop
mov
jg
and
movsl
repnz
push
sbb
jb
imul
stc
push
sahf
sub
mov
cmp
cmpsl
flds
mov
in
cld
js
inc
add
cs
xchg
lods
jge
fisttps
pop
inc
stos
mov
ja
ja
cs
loope
pop
repz
ljmp
repz
dec
not
test
and
jmp
xor
jns
lcall
push
sbb
dec
aas
enter
jmp
xlat
pushf
adc
jno
pop
mov
xor
out
repnz
push
lods
lods
pop
jecxz
call
jae
jnp
pop
pop
push
push
xchg
xchg
cmp
jmp
inc
xchg
lcall
addr16
bound
std
fstpt
jb
icebp
out
fdivs
jl
negb
cmc
ljmp
mov
push
jle
xor
jp
out
std
or
xor
xor
push
sbb
cmpps
std
sbb
cmp
fsubp
push
pop
xchg
lods
sbb
jmp
mov
pop
loop
jp
add
adc
push
adc
jl
test
jecxz
fildl
or
xchg
cmp
push
jns
test
les
lds
out
insl
stc
test
inc
sti
mov
lods
iret
mov
push
fisttps
inc
test
jne
aaa
inc
mov
lds
inc
repnz
cmp
pop
pop
push
or
bound
lea
lods
ficompl
xchg
mov
es
cwtl
pop
jno
push
dec
dec
call
add
xor
test
nop
adc
mov
repz
leave
mov
mov
mov
mov
pop
push
fwait
rclb
inc
mov
sbb
cmp
pop
hlt
bound
sbb
decb
lock
out
lret
xchg
sti
adc
pop
cmp
inc
int3
js
ss
pop
dec
push
sbb
lock
mov
jle
xchg
scas
insb
cld
pop
out
xchg
imul
add
scas
push
jle
sbb
mov
mov
adc
xchg
xor
outsb
rorl
shll
mov
and
cwtl
adc
incl
mov
sbb
sbb
daa
dec
clc
ficomps
mov
jb
cmp
add
sbb
xchg
mov
int3
jnp
fs
cmp
add
dec
sub
mov
mov
sub
adc
outsb
jbe
mov
js
fisubs
inc
mov
mov
adc
ljmp
mov
jl
push
inc
fs
fnstcw
pusha
xchg
fcomip
daa
imull
cmp
mov
orl
cmc
add
inc
int
pusha
xchg
add
mov
cmp
dec
cmp
and
roll
out
xor
dec
pushf
sub
negb
pop
aas
mov
pop
xor
and
dec
lea
inc
cs
test
mov
jmp
sti
or
call
pop
scas
sarl
and
enter
inc
mov
repnz
test
jecxz
outsl
xchg
and
xchg
stc
sbb
cwtl
and
mov
or
xchg
and
testb
sbb
loop
jb
fsubs
popf
lods
jp
je
lods
adc
aaa
jne
inc
mov
xor
imul
xchg
xchg
mov
dec
push
and
jle
lahf
adc
test
test
mov
push
in
mov
out
test
and
xchg
cmp
push
pushw
add
arpl
dec
xchg
insb
mov
lock
hlt
mov
into
cmp
push
test
add
pop
xchg
xchg
in
hlt
pop
decb
in
insb
stos
filds
sbb
stos
cli
cmpsl
cmpsl
dec
lods
mov
xor
pop
inc
xchg
fwait
and
rolb
mov
inc
xchg
mov
push
mov
cmp
jmp
inc
ret
repnz
sarl
mov
inc
mov
jae
adc
cmpsl
cmp
xchg
lcall
adc
aad
cmp
mov
and
mov
pop
pop
jne
in
fwait
in
push
lods
adc
mov
mov
mov
icebp
add
cmp
push
roll
mov
mov
les
repz
sahf
fbstp
mov
xchg
pop
loope
test
fsubrl
aaa
xor
mov
jge
cmp
push
dec
mov
jno
jecxz
and
in
sbb
movsl
mov
fsubrp
jno
pop
test
mov
subl
cmp
movsb
jae
mov
jl
lock
mov
cmp
lcall
mov
iretw
stos
cwtl
nop
jae
daa
stc
out
rcll
notl
movb
push
es
fistpl
push
inc
mov
xchg
mov
cmpsl
mov
sub
into
subl
xchg
inc
out
je
cmp
fidivrs
jmp
lret
dec
lret
ficomps
mov
nop
test
adc
int
adc
push
cmpsb
scas
jg
mov
fidivrs
cmpsl
sub
mov
or
dec
pushf
dec
out
repz
or
add
iret
ss
je
and
pop
mov
vcomiss
out
xadd
or
repz
loopne
mov
sbb
movsb
ds
in
xchg
push
pushf
test
sub
ss
dec
push
jg,pn
jae
sbb
xor
call
js
outsl
mov
fistpl
or
repz
push
lahf
xchg
and
dec
jns
xor
movsl
mov
sbb
notb
or
iret
test
adc
cmp
sub
xor
dec
cli
fldcw
dec
dec
mov
mov
inc
repz
in
xor
or
les
xchg
int3
cmp
fsub
mov
cmp
push
dec
mov
dec
push
push
loope
add
test
je
fadds
mov
mov
gs
or
outsb
inc
ss
jno
jbe
outsb
cmp
mov
daa
mov
data16
popf
pop
mov
sub
mov
lea
or
shll
xchg
inc
and
gs
mov
sbb
fdivr
ret
shrl
ret
mulb
mov
cpuid
fs
lcall
dec
daa
cmpsb
ja
mov
pushf
xchg
adc
fdiv
jns
push
imul
subb
xchg
outsl
add
cmc
lods
int
cmp
je
push
dec
imul
sbb
jae
nop
call
xchg
mov
cwtl
or
sub
pop
rcll
mov
dec
arpl
or
cmp
pop
add
xlat
imul
into
icebp
mov
lock
pop
clc
pop
insl
mov
fcomps
pushf
mov
push
insb
push
dec
pop
jnp
ja
push
xor
sbb
icebp
decl
cltd
pop
call
test
movsb
pop
xlat
cmc
mov
test
andb
cli
movsl
fsts
and
pop
adc
cmc
jnp
fdivp
js
clc
ror
push
jg
mov
lahf
xor
pop
mov
sub
pop
lret
jno
in
ret
and
sbb
inc
cmp
addr16
push
popf
cmp
mov
ss
jb
dec
lahf
mov
sbbl
adcb
pushf
lret
ret
aad
sub
cmc
xchg
push
fcmove
lcall
insb
bnd
sub
movsb
pop
je
out
dec
or
add
or
jecxz
mov
mov
adc
mov
pop
sbb
fwait
push
orl
rcrb
test
sti
push
test
mov
stos
insl
bound
adc
pop
xlat
cmp
lods
push
repnz
push
dec
mov
pop
icebp
cld
jmp
cltd
movsb
adc
sbb
mov
imul
enter
cmp
dec
push
loop
xchg
shl
rorl
adc
movsl
inc
dec
shrl
scas
ret
mov
mov
pop
jl
in
cld
ja
mov
inc
je
loop
imul
movsb
inc
fists
in
call
mov
push
adc
mov
insl
pop
stc
insl
jnp
push
inc
std
push
test
outsl
arpl
test
inc
leave
mov
fsubp
fists
push
push
shr
jne
fcmovb
outsl
loopne
enter
push
pop
test
jmp
pop
dec
in
cwtl
inc
popf
fwait
lahf
pop
mov
sahf
inc
xor
pop
fdivs
clc
pop
imul
or
adc
xchg
push
and
add
adcl
jmp
push
test
mov
cmp
lods
sbbl
mov
cmp
scas
xor
dec
stos
insl
imul
mov
mov
mov
push
jne
and
insb
push
sahf
aam
out
into
mov
pop
cwtl
pushf
mov
push
sbb
idivb
jmp
divl
pop
sbb
ljmp
data16
pushf
out
lods
push
test
xorl
add
test
imul
shlb
jb
push
xchg
ret
int
dec
and
and
xchg
xchg
lret
pusha
insl
js
add
pop
jp
jns
adc
add
fucomip
dec
cmp
mov
xor
outsb
pop
adc
sbb
nop
jno
popa
push
fdivs
jg
or
mov
xchg
lds
movsb
mov
jb
pop
xor
sbb
cmp
sub
jl
stc
popa
hlt
inc
insb
xorb
nop
cmp
or
mov
idivl
arpl
add
inc
in
call
push
mov
mov
les
mov
or
hlt
mov
add
push
daa
push
pop
xchg
lahf
jmp
jmp
push
xor
add
or
xchg
add
adc
jb
adc
pop
rcrl
or
cmp
mov
mov
or
and
jge
xor
fcoms
xor
dec
pop
mov
mov
adc
push
cld
add
out
push
push
pushf
push
sahf
out
add
cmp
fdivp
or
addr16
pop
push
jns
out
loope
arpl
and
push
adc
mov
pop
push
cmp
rcrb
push
xlat
cmp
mov
pop
negl
in
lods
pop
dec
lcall
cmpsb
sub
mov
cmp
and
inc
addr16
jne
push
dec
mov
mov
or
cmp
fmul
pop
and
sbb
test
fnstcw
mov
leave
insl
popf
mov
arpl
xor
push
push
repz
mov
imul
daa
and
ret
mov
hlt
jb
mov
adc
lods
add
xchg
sbb
pop
lock
pusha
or
push
xor
push
mov
mov
pop
add
shl
jnp
push
sti
add
ret
leave
aas
fwait
out
push
in
mov
fiaddl
jg
adc
sbb
jg
sahf
out
call
sub
add
sbb
pop
lods
sub
andl
adc
ja
inc
push
dec
stos
xchg
push
test
imul
mov
adc
jg
pop
cwtl
cs
das
std
xlat
or
enter
jmp
jecxz
loope
popl
andl
or
adc
xchg
ss
inc
insb
nop
or
cwtl
imul
dec
in
lods
and
jns
outsb
ss
or
jbe
pop
jp
mov
dec
out
xor
out
cmc
pop
sbbl
mov
jo
xor
mov
mov
repnz
adc
mov
mov
mov
stos
pop
inc
jnp
into
daa
jnp
popl
daa
push
pop
int3
cmpsl
subb
lret
add
rorb
mov
test
pop
arpl
xor
jb
lds
popf
mull
mov
mov
add
stc
inc
lods
mov
pop
jne
push
mov
mov
stc
idivb
sti
inc
lret
xchg
inc
lods
jne
testb
pusha
lahf
movsl
adc
int
test
stc
hlt
sar
repz
cmp
push
adcb
aad
push
lock
fildll
adc
lea
mov
and
cmp
sarb
dec
xchg
cmpsl
mov
lret
das
add
imul
dec
push
pusha
les
jne
movsl
mov
cmp
mov
movsb
mov
add
xchg
inc
andb
mov
xchg
imul
mov
fwait
popl
daa
or
add
xchg
fnstenv
movsb
mov
repz
lahf
mov
xchg
iret
cld
sub
sub
test
nop
mov
stos
je
mov
idiv
aam
mov
pushf
jnp
push
out
bound
pop
mov
xor
xchg
push
cmp
jmp
xchg
in
mov
push
lret
and
bound
test
in
in
inc
cmpsl
mov
push
pop
mov
pop
addr16
std
jne
xchg
mov
sti
sbb
cmp
shll
mov
stos
lods
jecxz
push
mov
ret
ret
push
push
jmp
out
popf
imul
iret
xchg
mov
push
xchg
adc
int3
xchg
addr16
pop
push
imul
loop
lahf
mov
fmull
pop
addl
fcomp
xchg
rcrl
js
cmc
jmp
jmp
out
inc
pop
xchg
les
mov
cmpsb
sub
xor
jp
cmp
nop
rorl
adc
aaa
jp
mov
loop
mov
push
jne
adc
mov
sbb
in
xchg
gs
jb
jmp
xchg
jle
mov
aad
nop
fimuls
push
jmp
mov
or
in
inc
adc
ficompl
xchg
jo
shlb
jle
testb
mov
scas
jbe
cmpsb
imul
leave
ja
jne
push
test
cmpb
lcall
pop
mov
call
fwait
movsl
dec
xchg
adc
sahf
xor
push
mov
in
out
std
xor
pop
pop
pushf
sub
dec
push
push
push
and
fcmove
test
insl
adc
pop
inc
in
pop
fs
cmp
xlat
mov
cmp
dec
push
pop
lds
ljmp
repnz
xchg
fs
gs
xlat
sti
inc
pop
lahf
orb
stc
stc
sti
lods
pushf
or
jne
out
mov
addr16
cmp
pop
pusha
xor
inc
dec
ficomps
and
mov
into
cmpb
outsb
and
mov
scas
cmp
mov
leave
in
repnz
cmp
stos
or
xchg
mov
aaa
adc
mov
fwait
push
int3
push
sub
dec
cmp
mov
call
ja
fs
or
outsb
cmpsl
sbb
xchg
inc
jmp
dec
loope
inc
rclb
sub
in
into
sbb
je
shl
daa
leave
sub
add
rcrl
add
aaa
push
xchg
cltd
stos
dec
and
mov
xchg
mov
xor
xchg
out
sti
cld
xchg
pop
adc
aad
lods
sub
dec
ja
mov
sbb
icebp
adc
out
xchg
je
xor
js
fstp
in
stc
in
in
aad
add
faddl
loop
test
jno
ss
outsb
sub
sub
in
leave
aad
mov
repnz
shl
gs
test
ja
mov
sbb
mov
cmc
xchg
ljmp
std
int
int3
push
out
pop
pop
jle
inc
cmp
std
mov
lcall
jbe
stos
iret
movsl
aam
clc
pop
cmp
adc
push
cmp
cmp
shll
mov
icebp
loopne
mov
inc
jno
dec
mov
sub
mov
ret
xorl
push
mov
cmp
popa
loope
push
mov
inc
mov
inc
mov
mov
cltd
adc
xchg
lods
in
lods
fldenv
push
test
cwtl
sbbb
mov
pop
imul
ret
into
mov
lcall
push
popa
pop
xchg
shrl
inc
push
dec
addr16
or
leave
pop
test
inc
dec
sub
jmp
xchg
test
cmp
arpl
test
fwait
adc
daa
pop
rorl
push
ss
gs
js
xor
ret
xor
dec
xchg
mov
fnstenv
scas
mov
pushf
outsl
inc
pop
addr16
in
jge
jp
dec
hlt
pop
cmp
aad
outsb
out
mov
fwait
rcll
pop
test
mov
test
fldt
out
stos
scas
jae
repz
push
loop
sbb
aaa
pushl
dec
mov
mov
xchg
push
arpl
sub
stos
mov
dec
mov
pop
scas
sbb
loop
or
in
cmp
iret
mov
fistpll
add
loop
mov
daa
repnz
fwait
movsb
mov
cli
inc
mov
mov
xchg
out
inc
out
out
or
or
sbb
das
aaa
mov
jno
cmp
lcallw
mov
sahf
sub
ret
icebp
and
sbb
test
pop
lods
outsl
and
xchg
inc
or
fwait
int3
xchg
ljmp
scas
cwtl
pop
adc
dec
out
das
adc
pop
test
add
xor
aaa
fwait
push
jg
jecxz
pop
jbe
sub
hlt
and
dec
xchg
inc
fldl
xor
mov
add
insl
adc
inc
insb
xor
paddw
imul
add
fs
cmpsb
cld
in
mov
pop
sub
mov
sbb
test
mov
ljmp
clc
andl
jle
ja
mov
lahf
add
mov
xchg
addr16
aas
inc
lcall
and
fnstcw
dec
rcl
bound
mov
lret
ffree
lea
jo
insb
push
fcoml
jo
and
jae
pop
push
pop
pop
push
add
repnz
int
push
je
mov
fildl
mov
shrl
jle
dec
fistps
ljmp
sub
loopne
adc
push
ret
sbb
sub
mov
incl
dec
hlt
lret
iret
out
jle
cs
pop
sub
loope
and
and
xor
cmp
xchg
gs
das
cmp
insl
mov
insl
lea
pop
xor
add
test
dec
mov
inc
bound
pop
adc
xchg
push
push
xlat
popa
mov
mov
xchg
sub
lods
lds
sub
xorl
inc
std
fnsave
adcl
mov
out
and
adc
or
out
shrb
data16
lock
test
and
adc
in
xor
and
add
and
sti
pop
cmp
xchg
repz
ficoms
cmp
pop
out
ret
and
ja
push
inc
jmp
inc
cmpsl
jbe
and
adc
or
stc
mov
rorb
xor
push
lock
adc
mov
cltd
mov
jg
dec
fsubs
or
out
push
xor
es
mov
push
pop
sub
out
jnp
lcall
inc
call
mov
outsb
inc
inc
mov
mov
mov
inc
fs
cli
push
sbb
xor
imul
push
cmpsl
ret
lea
cs
push
push
cmp
lods
and
out
popf
jmp
psllq
loopne
push
insb
mov
xchg
xlat
and
dec
push
ljmp
popl
inc
mov
movsl
mov
subb
pop
lds
xor
lods
xchg
push
add
into
ret
xorl
out
testl
or
xor
xor
xor
sbb
rcll
sahf
je
mov
movsb
push
sbb
out
dec
push
ljmp
mov
sub
and
popf
pop
iret
hlt
iret
out
loopne
ret
jne
fstps
pop
or
mov
fisttpll
xor
aad
dec
xchg
adc
sub
inc
rorb
addr16
jo
xchg
dec
push
dec
xchg
outsl
jbe
into
cs
add
xchg
and
mov
fidivl
and
inc
adc
jg
push
or
sbb
aad
sub
int
and
jno
stos
xor
lcall
aam
ficoms
add
mov
and
decb
sub
add
mov
dec
sbb
cmpsl
sbb
jg
or
loope
jno
cmp
in
cmp
jg
loope
movsb
adc
and
pop
push
pop
push
sbbb
xor
sub
fistpll
mov
jb
mov
push
mov
fs
test
sub
dec
push
pop
rorb
mov
je
repz
imul
jecxz
jae
push
dec
xchg
add
dec
jp
sbb
pop
movaps
push
sub
sbb
fucom
and
ret
xor
mov
hlt
sub
cwtl
sub
xchg
insl
aas
out
mov
xchg
adc
mov
das
test
add
cmc
scas
stos
push
cmpsl
mov
or
popf
in
enter
jno
insb
push
cs
adc
test
addr16
jno
aas
fldl
mov
cmp
xchg
mov
call
push
in
fldl
jbe
pop
pusha
jmp
jnp
fwait
bound
in
shll
fistps
int3
into
or
mulb
popf
add
in
sbb
sbb
jge
push
or
imul
sub
std
inc
mov
in
push
stos
push
sbb
dec
stos
and
pop
insb
pop
mov
movsb
jg
aaa
shl
shl
mov
sub
jmp
pushf
pop
mov
arpl
test
and
sbb
scas
test
test
out
mov
and
insb
lods
das
push
in
ffreep
pop
jg
nop
or
mov
push
dec
pop
add
aad
sti
lock
push
jg
add
xor
pop
sub
sbb
cmc
or
aas
std
inc
mov
test
xchg
and
filds
js
pop
in
cmp
pop
fs
xchg
mov
out
sub
dec
out
push
dec
pushf
cltd
xchg
xor
pop
aas
and
or
push
cli
push
sbb
inc
aad
aaa
leave
push
andl
repz
push
dec
jae
add
push
inc
sar
jmp
ret
cmp
ret
sub
inc
dec
mov
faddp
pop
sub
sub
sbb
test
sbb
xchg
lea
rorb
aam
out
pop
int
push
fmul
cmp
adc
jecxz
or
loopne
and
imul
push
push
mov
mov
or
sbb
lods
xor
je
and
xchg
pop
lods
pop
xchg
sub
test
fdivl
sub
mov
inc
leave
and
push
out
call
lcall
lret
aam
outsl
pop
xchg
cmc
rcl
ret
or
mov
jns
cmc
add
ficompl
rorw
shll
insl
test
push
pop
mov
inc
add
push
loopne
nop
aas
xchg
mov
outsb
mov
pop
aas
xlat
push
int3
mov
cmp
pop
divl
cmc
mov
jns
mov
xlat
ret
mov
dec
xchg
incl
adc
push
and
stos
cwtl
mov
xor
je
dec
out
iret
hlt
push
pop
out
movsb
inc
popa
jmp
xchg
cmpsl
testb
add
gs
dec
js
adc
imul
xchg
lock
in
mov
mov
xor
insl
or
cmpb
push
pop
popf
cld
mov
cmp
sub
mov
test
loope
cld
dec
lcall
sbb
lods
call
xchg
enter
or
shrl
mov
sbb
aad
jns
jbe
inc
out
push
push
movsb
add
inc
push
fwait
int
repz
arpl
mov
jo
mov
sub
std
jbe
inc
xchg
insl
mov
adc
inc
outsb
inc
je
mov
rolb
dec
mov
jbe
push
fmul
sbb
xchg
fistpl
xlat
in
cld
out
imul
imul
inc
jnp
mov
xor
insb
mov
enter
push
inc
push
pop
push
cmc
and
das
std
mov
xrelease
outsl
rcr
lahf
or
and
repz
lods
lcall
icebp
je
imul
aam
adc
sbb
push
ret
lock
cmc
cmp
lret
addr16
outsl
cwtl
push
sub
inc
cmp
aam
lea
subb
or
xchg
std
sub
fstp
pop
dec
dec
cmpsl
pop
stos
xor
call
xchg
inc
fldl
decl
xor
call
addr16
adc
inc
data16
cli
jge
pop
push
rcrb
dec
mov
daa
sub
mov
andl
out
mov
sahf
mov
and
lcall
cmpsl
in
dec
xor
shr
push
adc
das
mov
adc
fwait
or
push
mov
push
test
dec
or
je
mov
shrl
mov
cwtl
ja
cs
mov
mov
add
inc
jg
lods
dec
push
push
or
sub
test
adc
addl
fs
stos
and
shll
xchg
out
and
lahf
adc
rorb
xor
into
inc
loopne
fldt
movsl
mov
icebp
les
dec
mov
stc
cmp
push
lods
add
mov
into
mov
std
cld
cmp
sub
lea
mov
out
adc
addr16
sub
mov
inc
inc
loope
jbe
ljmp
xchg
repnz
push
in
xchg
fs
out
mov
lods
xor
xchg
adc
and
out
add
in
jg
cmpsb
add
lcall
dec
fsts
scas
add
lock
ljmp
mov
fldt
arpl
test
or
lcall
dec
mov
ret
js
clc
jnp
pop
cmp
out
jge
and
mov
mov
cwtl
xorl
aaa
sti
in
add
dec
sub
inc
stos
sub
sbb
jecxz
popf
mov
or
insb
cwtl
das
ja
dec
jns
and
xlat
shr
sub
cmp
adc
call
sahf
xor
gs
xlat
repnz
mov
sbb
jno
sbb
ljmp
insl
adcl
ret
jp
aaa
and
jmp
pop
pusha
xor
lea
mov
mov
sbb
rclb
jb
int
insb
rcl
sti
mov
sub
mov
mov
cmp
mov
xchg
push
add
clc
jnp
pop
adc
int
test
repz
mov
inc
fwait
addr16
insb
sysret
jns
pop
cmp
mov
ja
pushf
lods
cmp
mov
in
dec
scas
push
or
fwait
aaa
push
cmpsb
pushf
push
mov
mov
fadds
jecxz
imul
sub
xchg
and
inc
sahf
push
aam
inc
push
sbbl
outsl
pop
sahf
xchg
adc
or
or
fsubrs
sub
add
sub
fwait
cli
repz
call
add
mov
hlt
pushf
fldenv
in
ds
push
enter
shr
mov
push
loop
int3
fwait
inc
pop
movsl
or
mov
icebp
and
jnp
adc
sub
ret
add
pop
icebp
icebp
add
pop
jb
push
dec
sub
pop
xchg
addl
out
mov
mov
sub
jg
and
movsl
call
int3
cmpsb
sub
cmp
inc
ds
xchg
jb
mov
orl
dec
addr16
jnp
rorl
jle
lods
mov
sbb
xor
sub
jmp
xchg
out
shrl
mov
cmpsb
ficomps
adc
or
xchg
sbb
jb
add
sbb
lahf
bound
jge
lods
lds
in
cmp
les
cmc
clc
inc
scas
push
push
push
adc
mov
loope
jne
test
xchg
pop
loope
add
and
xchg
add
pop
sbb
in
mov
xchg
nop
in
xorl
movsb
mov
decl
jg
dec
inc
addr16
xchg
mov
icebp
xor
lock
or
addr16
mulb
in
pop
adc
push
loope
fs
pop
cli
pop
pop
into
test
add
test
jcxz
add
jo
pop
inc
sbb
mov
jns
cld
dec
clc
outsl
dec
sub
pushl
clc
gs
fstps
sbb
jnp
fs
gs
push
pop
rcrb
push
das
sub
pop
xchg
js
pop
jne
mov
movsl
popf
sub
lret
fwait
jne
push
or
cmp
clc
push
bound
add
sub
dec
xor
sub
cwtl
inc
jns
jno
and
xor
das
dec
jne
std
pop
mov
repnz
stc
lcallw
jb
inc
dec
cmpsb
pop
jecxz
jae
push
insl
test
sub
sbb
out
pop
push
dec
clc
out
repz
imul
sub
mov
jno
outsl
mov
inc
fcompl
sbb
adc
fs
xor
xchg
or
test
inc
push
shr
leave
insb
xor
test
filds
nop
jno
and
jg
pop
jmp
lahf
sbb
cwtl
mov
xchg
outsl
mov
push
cmp
dec
pop
addr16
dec
xchg
jp
mov
notb
stos
cmpsl
fucom
push
sub
mov
adc
test
and
pop
dec
imul
pop
jnp
mov
cmpsl
pop
ret
loopne
pop
enter
inc
xchg
jo
insb
push
push
out
ret
jle
leave
int
mov
sub
int
ror
aas
gs
jl
adc
notl
lea
fisubs
ret
push
mov
pop
lret
scas
lret
dec
push
mov
dec
cwtl
movsb
sti
arpl
push
cwtl
jmp
mov
movsb
sbb
xchg
std
push
sub
mov
xor
inc
leave
fisttps
mov
nop
scas
das
adc
cmc
outsl
mov
lods
add
adc
mov
outsl
ficoml
and
ljmp
rcll
or
xchg
lds
imul
aas
mov
jns
push
daa
jbe
push
lcall
xor
mov
roll
push
inc
addr16
or
xorb
movsl
imul
mov
bound
mov
pop
sar
out
or
mov
sbb
leave
outsl
mov
pop
mov
pop
mov
lods
mov
lods
jb
sub
call
inc
lods
xor
inc
mov
sub
adc
fs
imulb
push
arpl
fisubs
pop
inc
clc
ret
cmpsb
fs
popf
push
cmpsl
and
or
and
insb
adc
cltd
add
mov
and
mov
mov
xchg
mov
xchg
fdiv
push
mov
mov
jae
cmp
gs
fldt
lret
mov
popa
dec
ror
xchg
adc
push
xlat
xchg
xchg
mov
out
add
xor
jl
outsb
out
push
inc
sti
jo
sbb
fiaddl
pop
dec
sbb
jmp
push
rcll
call
jle
testb
mov
pop
mov
mov
fsubr
push
pop
sbb
pop
or
pop
xor
stos
ffree
xor
stos
cmc
pop
cmc
shll
out
cltd
jnp
int
in
shl
dec
fidivs
ja
mov
add
inc
lods
adc
iret
shl
mov
xchg
into
push
pushf
sbb
test
push
pop
cmpsb
push
adc
mov
sbb
shlb
mov
ret
stos
cmp
mov
add
xor
cmp
mov
add
cmp
lods
pop
adc
loop
pop
dec
lds
sub
lret
inc
sub
ficoms
aam
jge
cmp
idivl
cmp
sbb
sbb
sub
fstl
cmp
sub
ret
lock
push
jb
jl
mov
jns
lock
sbb
aaa
mov
scas
cmp
pop
sub
bt
fdivp
adc
loopne
add
fisubl
insl
sbb
xchg
pushf
mov
xchg
sub
aas
dec
mov
stos
ror
imul
xor
insb
adc
in
pop
xchg
push
movsb
sarl
shlb
xor
mov
pop
mov
adc
add
push
mov
adc
test
mov
adcl
jmp
cmp
fldl
inc
inc
xchg
mov
es
fcmovbe
cmp
sbb
inc
jle
fcomps
movsl
inc
xlat
sbb
xchg
sbb
dec
iret
sbb
mov
lds
inc
lahf
add
jmp
sub
fistpll
xor
fdivr
jo
adc
mov
sub
ljmp
movb
ret
push
test
jae
dec
in
fwait
jmp
pusha
mov
ret
jge
sub
movsb
add
pop
sub
xor
push
rolb
outsb
imul
outsb
mov
xor
stos
mov
arpl
insl
mov
add
adc
pop
sahf
adc
rorl
andl
dec
pop
add
xor
sbb
mov
ds
cmp
data16
xor
xchg
not
or
add
mov
add
das
xchg
fidivrl
dec
push
pop
daa
das
jle
mov
adc
call
hlt
shrl
push
jo
cmpsl
jp
jno
bound
sbb
dec
xchg
push
stos
int3
adc
enter
inc
lods
loopne
arpl
insb
leave
out
aad
mov
or
mov
fwait
ret
fldt
lret
xchg
dec
out
and
dec
mov
ret
mov
in
pop
popf
ds
hlt
std
fdivrl
pop
clc
fs
mov
xchg
test
shll
jbe
ftst
stos
aas
dec
jmp
cmp
mov
fs
loopne
mov
aam
xchg
pop
pusha
repnz
mov
push
jg
and
popf
les
fadds
mov
xchg
push
push
pop
arpl
mov
jbe
adc
add
aad
mov
hlt
mov
jge
fisttpl
das
jmp
les
aas
repnz
jecxz
sub
sahf
and
call
cmp
jp
insb
mov
icebp
test
inc
push
sbb
push
mov
sub
test
and
insb
fwait
cs
adc
or
push
sti
cs
mov
pushf
sbb
push
sub
pusha
leave
dec
mov
xchg
mov
inc
aas
xor
gs
or
fidivrs
imul
aas
adc
int3
repz
mov
xchg
scas
pop
in
dec
movsl
add
sub
adc
xor
inc
push
or
mov
pop
push
inc
mov
push
mov
in
sub
sub
shlb
inc
jae
mov
test
xor
cmc
fwait
sub
sub
test
xchg
or
in
dec
pop
out
jle
xor
inc
xchg
enter
not
mov
mov
xor
addl
in
icebp
sub
sub
fcomps
lods
adc
cmp
test
mov
scas
lods
pop
call
mov
hlt
dec
jno
das
mov
popf
lret
push
and
sbb
push
jecxz
cli
ss
pop
jp
push
ret
dec
pop
mov
cmp
dec
push
xchg
shr
out
jle
fmull
fwait
ljmp
mov
and
sub
cs
pop
scas
das
out
and
mov
pushf
mov
sub
lea
pop
scas
sub
mov
jmp
pop
and
inc
inc
xchg
xor
out
sbb
xchg
das
fcmovnb
adc
daa
stc
sub
cmpsb
lret
fdivs
pop
int3
fbstp
jecxz
enter
mov
repnz
xchg
jge
into
cmp
or
cli
scas
inc
dec
jne
test
stos
in
fistpl
aam
subb
push
inc
adc
ljmp
aam
jmp
mov
mov
pop
fs
lea
push
aas
cwtl
pusha
inc
movq
scas
pop
dec
push
shll
adc
sub
mov
in
mov
mov
pop
ss
insb
add
rcl
int
cvtdq2ps
loopne
in
lcall
adc
mov
dec
aad
fldenv
cld
xlat
mov
int3
xchg
adc
add
mov
mov
mov
dec
xor
test
cmp
cmp
negl
insl
lcall
cmp
ret
imul
or
adc
jns
xchg
adc
mov
push
mov
ds
outsb
dec
inc
adc
add
in
les
stc
cs
ret
sahf
js
push
mov
stc
or
lahf
adc
cmpsb
roll
lods
cmpsb
mov
rcr
sahf
xchg
xor
mov
inc
stos
xor
cwtl
outsb
addr16
jbe
xchg
xchg
xorl
iret
icebp
add
fsubrs
jl
add
cmp
pop
addb
xchg
sti
dec
and
out
mov
dec
fwait
rorl
adc
out
xor
or
pop
pop
adc
xchg
ja
outsb
dec
inc
flds
dec
xchg
jo
xor
aad
jecxz
cmpsb
testl
sti
sti
imul
push
int
or
into
movsl
mov
push
insl
mov
sbb
lock
in
mov
cltd
out
fs
xor
adc
mov
test
or
test
pop
pop
sbbb
cmp
jge
sub
adc
ret
outsl
pop
jo
sbb
insb
sarb
gs
mov
stc
and
shll
pop
roll
aam
pmaxub
sbb
jp
xchg
mov
and
out
mov
mov
inc
jmp
push
mov
sub
shll
test
and
mov
jno
adc
cmpsb
inc
fcom
jae
in
mov
or
or
lahf
sub
stos
imul
pop
jp
pop
sub
push
push
cli
pop
jecxz
cmpsl
cmp
scas
scas
jnp
jg
sbb
jg
mov
add
out
setp
and
loope
add
inc
cltd
cmp
mov
mov
cmp
scas
push
testb
popa
push
aad
jne
pop
leave
adc
loopne
ss
inc
mov
into
adc
mov
cmp
int
aad
mov
pop
adc
subb
xchg
mov
rorl
jp
mov
int3
sub
pop
ret
lods
push
clc
push
jne
sbb
out
pushf
xor
cwtl
push
push
movsb
test
ret
cmp
ret
std
stos
jle
jp
cmp
jnp
pop
jne
aad
add
or
loopne
shll
jns
fsubrp
pop
xorb
xor
enter
mov
and
and
ret
add
cmc
mov
mov
scas
xor
push
mov
enter
in
xchg
imul
cmp
and
xlat
push
in
add
mov
pop
jmp
inc
xor
fwait
mov
test
imul
mov
insb
sub
test
stos
add
mul
scas
mov
inc
mov
mov
pop
fdiv
fiaddl
xchg
inc
popa
or
mov
sahf
jne
cs
nop
cwtl
sbb
lret
mov
mov
push
leave
add
pop
lods
ds
iret
in
xchg
sti
popf
jo
xor
sahf
lcall
mov
mov
in
push
repz
jo
add
loopne
pcmpgtb
aaa
dec
push
xor
xor
iret
push
lock
rorl
stos
add
ljmp
inc
jb
adc
xchg
and
xor
add
adc
dec
fiaddl
sub
push
push
scas
xor
into
jnp
testl
add
imul
xor
adc
dec
jle
js
mov
mov
daa
fsubl
or
adc
aas
pop
mov
mov
stos
lret
popl
fisubrs
test
and
clc
fxch
push
jne
sarl
test
sbb
js
inc
cmp
mov
adc
and
leave
cmp
jmp
arpl
lcall
arpl
mov
sub
gs
push
xchg
push
js,pn
sub
cmp
outsl
pop
cmp
jns
add
pop
scas
mov
data16
xchg
lds
push
inc
push
and
ret
scas
sbb
inc
hlt
stc
push
dec
lods
xchg
in
test
adc
jns
pop
add
stc
fistps
jno
pop
fidivrl
push
or
mov
jb
cld
in
call
mov
and
or
mov
fsubrs
mov
add
dec
dec
fstl
loope
push
jecxz
call
pop
pusha
cltd
inc
jmp
sahf
sbb
adc
cmp
sub
not
adc
and
mov
push
xchg
adc
push
das
bound
hlt
xor
scas
stc
pop
subl
cmpsl
push
add
mov
cvtdq2ps
dec
out
notb
adc
jle
and
repz
arpl
mov
adcl
mov
shrl
adc
mov
xor
int3
mov
fmull
ds
aas
leave
lret
mov
pop
jns
insl
pushf
dec
fstpt
cmp
aaa
xchg
outsb
pop
pushf
cli
dec
cli
xor
sbb
pop
push
sub
call
fcoml
sub
cmp
fdivrs
sbbl
mov
lea
push
dec
lods
pusha
stos
inc
dec
dec
mov
jmp
xor
aad
cli
in
jo
lret
lods
ficoms
pop
jl
hlt
mov
xchg
sarl
jbe
fwait
push
sub
les
dec
mov
ja
and
pop
and
push
ljmp
and
jl
or
fwait
std
push
mov
out
sub
jne
fidivs
add
sub
sbb
add
shlb
scas
push
lahf
or
jg
mov
out
andl
push
dec
jae
push
mov
outsl
icebp
xchg
test
faddl
xchg
push
dec
stos
or
lahf
add
push
in
lods
cmc
and
cmp
push
mov
vhsubps
adcl
xchg
mov
mov
push
push
ss
push
das
push
int
cmp
push
sahf
mov
insl
xor
sub
roll
pop
mov
arpl
out
cmp
dec
gs
xor
cmc
dec
inc
or
ja
sub
cli
sub
or
lcall
push
inc
insl
icebp
xor
lds
das
sub
aad
insl
test
or
aam
jnp,pt
mov
bound
test
mov
js
jae
add
or
insb
jae
add
out
dec
les
js
inc
test
pop
jmp
lcall
pop
cmp
mov
pop
jns
cmpl
aad
pop
add
sub
inc
mov
mov
push
sub
test
adc
adc
mov
add
push
je
in
sbb
sub
dec
jmp
lds
insl
jbe
ret
cmp
out
ficomps
cmpb
stos
fstpt
daa
xor
dec
sub
outsl
test
push
lret
cwtl
into
testl
pushf
push
jle
lods
insb
inc
mov
add
fcomps
dec
push
mov
adc
in
icebp
mov
pop
andl
scas
mov
pushf
mov
jns
and
mov
ret
mov
adc
push
jmp
mov
cli
push
mov
push
out
inc
sahf
pop
mov
stos
mov
push
popf
ljmp
ret
xchg
stos
les
jbe
pop
mov
test
nop
pop
mov
add
cwtl
inc
xchg
and
andl
cltd
jae
lahf
mov
js
rol
fadds
xchg
testb
mov
lret
scas
imul
arpl
ret
popf
mov
mov
cmpsl
xor
fs
cmp
imul
add
adc
mov
or
cmpsl
dec
or
push
mov
inc
xor
mov
fsubs
enter
push
xchg
xor
sbb
cmpsl
cld
repnz
idivb
pushl
push
push
inc
out
jne
add
dec
out
mov
test
jmp
push
jbe
jne
and
sub
bound
aad
faddl
xor
ret
lds
xchg
lcall
or
xor
jae,pn
add
fsubrs
movsl
adc
xlat
jno
subb
mov
rorl
sub
xchg
sbb
and
cmc
repnz
xchg
iret
lock
jle
in
push
cmc
push
sub
cmpsb
sar
outsl
notl
cmp
in
sub
ret
out
jae
inc
test
fstpl
mov
adc
xchg
sbb
xor
push
xor
inc
or
mov
lea
push
push
popf
rol
fdivrs
mov
mov
mov
pop
or
icebp
inc
stc
call
es
xchg
into
mov
test
jge
or
sbb
aaa
int
jg
add
ficomps
xchg
push
xchg
scas
xor
jle
pop
jg
gs
clc
lods
mov
bound
jecxz
jnp
push
sbb
fiadds
lds
mov
outsb
out
xor
mov
adc
mov
daa
mov
inc
mov
gs
icebp
in
jo
or
sbbl
jg
daa
pusha
mov
mov
fisttpll
notl
bnd
sbb
or
insb
mov
xchg
cwtl
or
fs
mov
mov
loope
add
jl
xor
out
mov
in
push
gs
call
and
or
push
lcall
outsb
push
sahf
in
test
xlat
adc
cmp
shlb
aas
nop
aaa
push
addr16
push
popf
jbe
and
inc
scas
shll
pop
mov
and
rcr
aas
stos
imul
mov
into
and
add
je
mov
push
pop
jne
inc
cwtl
inc
pop
mov
jmp
inc
jb
push
jns
loopne
cmp
push
and
mov
jmp
push
push
jae
sub
push
add
mov
jl
ljmp
or
test
ds
xor
mov
arpl
mov
testl
inc
rcll
dec
ljmp
addr16
or
aam
hlt
ja
dec
lret
inc
test
sub
jp
fs
lcall
adc
inc
jl
xor
je,pt
cld
and
insl
fstp
pop
mov
mov
cmpsl
and
loop
cmp
add
push
pop
sbb
lds
sbb
pop
std
dec
adc
and
or
jmp
xchg
outsl
mov
cli
pop
dec
sbb
sbb
xor
repz
mov
and
addr16
sub
cmpb
daa
dec
sbb
mov
adc
push
pop
flds
pop
mov
lret
aas
adc
cmp
mov
jg
adc
daa
mov
push
xchg
nop
in
repz
lea
adc
xlat
loopne
sub
dec
push
rep
in
sarl
pop
and
sbb
icebp
ret
pushf
outsb
sub
push
adc
cmp
in
and
dec
into
repz
fwait
push
hlt
cmp
jle
dec
ret
orl
jnp
pusha
dec
push
cmpsb
sub
sahf
adc
dec
jb
ss
sbb
and
push
mov
out
cmp
and
imul
jae
repz
jb
mov
mov
frstor
data16
cld
jp
push
mov
pop
push
jge
jge
movsl
pop
add
rolb
push
test
push
xchg
fisttps
and
repz
jmp
push
movl
imul
stos
inc
ss
jbe
jno
mov
jb
out
adc
or
cs
rolb
jae
jge
mov
jl
jmp
pusha
push
ja
add
pusha
aad
test
ret
xor
pop
xchg
sub
dec
xchg
stos
fst
icebp
xor
sbb
ja
ret
push
fimuls
mov
push
sbb
movsl
cltd
daa
out
data16
in
xor
sub
rolb
push
mov
jne
add
aas
inc
push
cmp
outsb
aaa
push
mov
sub
scas
mov
and
pop
and
daa
in
inc
mov
dec
lahf
dec
jbe
push
or
pop
adc
xor
pop
test
mov
pop
push
int3
loopne
pop
sti
lods
mov
pop
dec
inc
pop
ret
js
jns
cmpsb
or
cmpsl
fwait
inc
sti
pop
cwtl
push
out
or
mov
cltd
xor
in
loope
inc
jge
pusha
push
jmp
mulb
jne
fdivs
repz
add
aad
xchg
ljmp
out
inc
mov
lods
ds
imul
pop
dec
or
ss
bnd
out
je
xchg
sub
mov
xchg
enter
sub
addr16
les
fcmovne
add
xchg
sbb
pop
pop
movd
mov
out
push
ret
fs
dec
xchg
xor
cwtl
pusha
out
orb
add
sbb
loope
push
cmp
inc
mov
rolb
imul
mov
sbb
imul
xor
mov
and
push
outsb
cld
lret
mov
fidivrs
or
dec
cmc
test
sarb
cmp
arpl
jmp
movb
call
je
push
jns
sbb
imul
push
and
sub
pushf
jb
push
aas
xchg
mov
adc
pop
dec
sahf
adc
jbe
push
fistpl
arpl
adc
sub
insl
stos
mov
sbb
scas
adc
xor
xchg
sub
stc
pop
adc
arpl
and
inc
cwtl
repz
negl
push
ss
sahf
hlt
xchg
mov
adc
inc
or
ja
adc
imul
js
adc
sub
mov
fcmovb
ror
ds
mov
lods
rcrl
dec
ficoms
jmp
xor
addr16
icebp
aaa
add
adc
add
xchg
jbe
in
pavgb
push
push
push
shll
ss
push
adc
add
jnp
fcom
outsb
ret
repz
jp
loop
xchg
jbe
xor
in
cmp
test
mov
or
je
cmpsb
xor
jne
push
lret
pushf
dec
out
ss
jl
ljmp
rol
sbb
mov
sub
shlb
stos
jne
xchg
out
sbb
cmp
mov
rcrb
lret
and
fs
mov
cli
add
fmuls
pop
lods
push
iret
adc
push
push
mov
xchg
mov
mov
test
bound
sub
inc
rorb
into
outsb
test
push
cmp
in
jmp
sbb
cmp
fistpl
bound
mov
xchg
stos
in
xchg
mov
outsb
xchg
mov
lcall
or
and
addr16
out
je
sbb
jae
flds
fisubrl
mov
sbb
push
and
sbb
imul
xor
stos
inc
pop
aaa
insb
or
popa
and
xchg
jbe
xchg
mov
adc
out
loop
in
mov
sbb
daa
xchg
push
lock
mov
mov
imull
sbb
jmp
mov
or
ja
cmp
sbb
xor
and
scas
cmp
shlb
aam
clc
fsubrl
mov
pop
xchg
sub
jge
add
movsl
xchg
mov
mov
cmp
mov
cltd
jo
pop
push
iret
loope
mov
int
mov
test
dec
or
loop
in
out
addl
dec
ds
adc
pop
mov
popa
cmp
mov
enter
sbb
adc
pop
cmp
fwait
mov
add
fsubs
adc
adc
cmpsl
stos
inc
inc
cli
mov
or
aas
in
lahf
jne
cld
sar
push
jg
pop
les
test
jae
clc
add
aad
les
adc
and
inc
ret
fistpl
ja
xchg
pop
pop
pop
in
mov
mov
xor
fisubrs
cltd
xor
and
notb
fs
mov
outsb
scas
insb
roll
mov
ss
mov
add
mov
jne
mov
push
pop
mov
mov
in
loop
int3
std
stos
mov
sti
add
sbb
out
push
nop
sbb
pop
stc
adc
jmp
xchg
or
xchg
mov
xchg
mov
adcb
dec
mov
xor
xor
clc
das
adc
popf
test
test
dec
add
mov
pop
mov
cmp
fs
add
pop
les
or
fs
lret
inc
sub
fisubs
or
adc
push
test
hlt
sbb
pop
test
ficompl
or
cltd
and
jb
nop
les
fcmovnbe
test
in
xor
sub
cmc
mov
je
int3
push
cmp
mov
push
gs
cmp
mov
hlt
loopne
in
pop
fmul
sub
push
fmul
xchg
dec
jno
stc
mov
lock
cmp
xchg
adc
fimuls
mov
mov
push
pusha
in
jae
popa
mov
iret
add
imul
out
or
inc
test
xchg
es
sar
mov
inc
add
sbb
xor
subb
mov
sbb
lahf
jno
mov
dec
je
mov
iret
jge
repnz
test
fsubs
sub
dec
lods
push
push
push
mov
aam
pushf
adc
mov
repz
lcall
dec
test
dec
jecxz
fsubrs
ss
mov
jmp
pop
mov
movsb
jmp
aaa
mov
xchg
xchg
dec
shll
xchg
jl
dec
push
aad
inc
jecxz
icebp
mov
mov
mov
xor
xor
leave
in
and
loope
mov
adc
pop
jae
push
cmpsl
mov
pop
js
push
mov
and
xor
xchg
mov
mov
lds
cmc
inc
lea
xorb
shr
ficoms
jmp
xchg
xchg
jno
pop
cmp
jne
int3
xchg
repz
adc
push
aas
add
xorl
das
addr16
rcrl
sub
movl
enter
jmp
arpl
stos
add
add
rcrb
jb
aad
fildll
push
ds
push
cmp
mov
xor
cmp
arpl
out
out
out
popf
aam
xchg
pop
out
jl
jp
lahf
repz
xor
test
cmp
sub
xchg
lds
mov
jle
jbe
test
push
cmp
xchg
lds
arpl
fimull
jb
add
dec
pop
popf
das
pop
inc
inc
and
loop
inc
mov
dec
push
mov
pop
jns
mov
cmp
inc
shlb
jb
pop
add
pop
xchg
lret
out
lods
xor
xchg
xchg
test
aam
lock
stc
cmc
test
iret
sub
out
xchg
out
pop
xchg
xor
jns
mov
inc
jno
jmp
repz
loope
sub
call
out
pushf
ds
jb
iret
cmpsb
shlb
sub
cltd
fcomip
jns
ja
call
inc
xor
mov
repz
fdivr
pop
jge
sub
lahf
mov
push
test
xchg
mov
inc
popf
inc
xor
inc
mov
jecxz
fstps
xchg
sahf
insl
mov
cmp
or
out
repz
popa
test
mov
mov
adcl
out
mov
sarl
std
or
mov
roll
fcompl
inc
iret
aaa
cmp
jmp
psubsb
ljmp
jge
popl
and
or
jmp
mov
inc
sbb
mov
in
call
rclb
scas
or
dec
arpl
in
stc
lret
icebp
inc
and
test
xor
sarb
lcall
jb
in
xchg
sub
cmp
fwait
in
fildl
mov
ficompl
lock
inc
jle
das
adc
scas
dec
inc
cmc
mov
pop
pop
push
push
sub
push
jge
sub
addr16
cmp
aas
mov
into
pop
bound
pop
jl
mov
aaa
mov
fwait
aad
push
mov
das
nop
inc
jecxz
jae
cmpl
xchg
xchg
cmp
dec
dec
mov
divl
mov
inc
fidivs
adc
or
xchg
inc
xchg
out
pusha
cmc
xchg
push
rclb
movsl
add
mov
mov
inc
xor
mov
jg
dec
int3
lahf
push
sub
dec
cmpsb
pop
pop
mov
mov
jb
adc
mov
into
dec
popf
mov
dec
xchg
mov
lret
xor
imul
push
jmp
and
leave
push
or
addr16
sub
mov
cmp
incl
scas
insl
fwait
in
push
mov
add
in
or
ret
adc
sbb
fisubl
push
mov
mov
sbb
dec
xchg
or
lea
cs
mov
lret
adc
mov
loop
push
ret
pushf
push
std
or
xchg
dec
add
sti
xchg
add
mov
sub
sbb
call
xchg
mov
insl
xchg
jns
or
mov
mov
push
mov
jbe
sbb
rolb
lret
dec
outsb
xlat
mov
scas
sbb
jecxz
mov
incl
sub
xor
cmp
rclb
jmp
adc
and
xchg
push
jge
jo
push
jb
shrl
divl
out
xchg
push
jp
loopne
fimull
ds
enter
or
sbb
mov
xorb
xor
cmp
rclb
daa
sbb
jp
shrb
scas
pop
jno
cmovge
shrb
ss
jnp
pop
jb
mov
push
and
adc
mov
mov
push
mov
insb
mov
add
xchg
mul
add
sbb
xchg
xchg
fsubrs
in
mov
arpl
ret
lods
cmp
jge
push
imul
xor
clc
cmpsb
mov
aam
xor
add
aad
rcr
cmp
sti
sbb
adc
inc
lock
call
or
inc
dec
test
cmp
loopne
push
jmp
movsb
ret
or
mov
int
inc
cmp
xchg
and
ret
xor
dec
push
fstps
mov
and
rorb
pop
ljmp
mov
jnp
push
scas
test
insb
or
jo
imul
data16
fldenv
fidivs
add
call
mov
imul
sub
and
adcb
xchg
dec
leave
fimuls
adc
xchg
lods
mov
pop
or
cmp
out
scas
cmp
ficompl
cmp
push
lds
iret
stc
filds
insb
sbb
mov
lret
push
ds
jmp
mov
insl
cmp
inc
in
je
mov
cld
xchg
push
xchg
call
insb
jo
mov
fstpl
lea
xchg
cwtl
dec
cmc
and
mov
dec
incl
dec
mov
push
not
mov
sarb
sbb
xor
inc
pop
jp
in
adc
mov
gs
adc
mov
das
sbb
daa
dec
xchg
insl
aaa
dec
mov
mov
sahf
pusha
cmp
ffree
jge
popa
inc
or
test
aad
push
mov
cmp
fistpll
insl
add
jecxz
call
mov
mov
popa
fcomps
sahf
insb
inc
rclb
ficomps
mov
iret
cmpsl
push
push
dec
adc
fcomi
imul
sub
outsl
movsb
nop
rolb
and
adc
pop
jmp
int
fsin
pop
outsl
int
pop
xchg
sub
xchg
cmp
sub
out
sbb
mov
icebp
popa
mov
nop
push
and
cmp
je
test
arpl
mov
into
inc
or
dec
dec
mov
jge
outsb
cs
pop
rolb
pop
sbb
dec
sbb
into
cmp
and
dec
ds
xchg
addr16
pop
mov
fwait
dec
cmp
mov
push
dec
mov
cmpsb
push
mov
mov
lock
xchg
mov
test
out
hlt
xor
in
jns
shl
pusha
pusha
or
subl
inc
into
adc
lcall
cmp
push
movsb
fcmovne
popf
and
push
call
push
or
aaa
push
and
sub
daa
adc
mov
in
movsl
or
mov
xor
dec
adcl
cmp
ds
addr16
add
inc
aad
imul
mov
daa
cmp
pop
leave
and
dec
cmp
nop
push
pushf
mov
dec
out
fwait
xchg
sub
fstpl
sbb
in
adc
sub
fwait
cmp
out
pop
mov
xchg
xor
or
cmpsl
repnz
push
mov
mov
in
dec
hlt
out
mov
decb
jecxz
pop
es
mov
lret
cmpsl
xchg
cmp
test
mov
sbb
xorl
cli
or
or
loope
dec
cld
jnp
jne
arpl
pop
lods
out
inc
cmpsl
xchg
jnp
not
insb
cs
lret
jo
cld
dec
adc
orb
push
and
or
imul
pop
push
fldt
or
outsl
xchg
ficompl
cmpsl
mov
sub
jge
mov
mov
leave
arpl
in
mov
jle
addr16
shlb
xor
mov
mov
popa
pushf
xchg
or
xor
mov
pushl
jp
pop
imul
mov
into
shr
imul
and
mov
lret
sub
arpl
xor
arpl
inc
sub
and
mov
dec
cltd
and
andl
and
xchg
and
lahf
jp
scas
out
dec
ret
push
out
incl
sub
mov
jmp
adc
jp
sub
lret
xor
aas
cmp
subb
test
ret
mov
xor
add
leave
mov
sahf
pop
icebp
sbb
cmpsb
or
aam
nop
xchg
mov
xor
decl
dec
mov
leave
xor
lods
out
mov
sbb
cli
inc
sahf
xor
out
adc
jnp
mov
int
mov
and
nop
ljmp
stos
pop
xor
es
shrb
xor
xchg
xchg
in
in
sarl
call
movsl
push
sub
pop
pop
ds
insb
or
xor
test
mov
dec
pop
mov
pop
sub
rorb
and
jge
or
out
fwait
inc
mov
das
or
jle
adc
icebp
insb
push
add
scas
and
inc
push
fcompl
push
je
clc
enter
ret
ficoml
loope
push
sbb
inc
in
inc
push
jge
dec
insb
adc
je
mov
pop
aam
js
mov
inc
jns
lret
jecxz
xchg
cmp
cmpb
decb
fisubrl
repnz
sbb
inc
jbe
subb
xchg
xor
scas
dec
fisubl
int3
lds
adc
push
xor
mulb
mov
adc
and
repnz
mov
jne
arpl
inc
fistpll
pop
push
insb
xchg
inc
jp
or
cld
stos
push
sbb
push
aad
inc
mov
rol
mov
scas
sub
xchg
cmp
push
xor
loopne
and
dec
mov
lds
out
mov
and
int
jp
push
iret
mov
in
lea
inc
lcall
jecxz
mov
jle
xchg
stos
cmp
mov
lcall
sbb
popa
test
in
dec
and
sbb
jbe
test
test
lahf
adc
out
lcall
inc
inc
test
lcall
mov
movsb
mov
ds
fists
jecxz
mov
mov
jb
push
cmp
aaa
mov
add
xchg
xor
stc
mov
rep
inc
data16
xlat
mov
bound
outsl
inc
mov
loopne
push
cwtl
mov
dec
cmc
popf
dec
jle
out
inc
mov
js
xor
ss
out
fs
out
cmpb
jnp
mov
mov
je
xor
xor
iret
arpl
xor
or
add
je
in
push
fnstsw
aad
sub
jecxz
pushw
or
or
fistps
test
mov
jb
pop
les
ds
dec
repz
jns
js
rcrb
rep
jo
daa
das
or
xor
pop
sti
xchg
inc
jle
jg
rcr
jle
scas
stc
sub
dec
ret
jns
jmp
rorl
xor
push
lahf
mov
jge
fbstp
cmp
jb
call
inc
or
aad
push
sbb
mov
ss
fisttps
pop
bound
pop
das
mov
xchg
jns
stos
in
cmpb
cld
pop
mov
aad
js
out
sub
fs
outsl
inc
rolb
pop
jmp
and
mov
ffree
clc
jnp
in
push
in
pop
imul
rcll
pop
inc
pop
push
push
insl
or
sbb
scas
in
js
jecxz
xor
stos
xor
jmp
cmpsl
push
lea
aaa
imul
cltd
sub
push
xlat
push
iret
push
jnp
mov
cmp
rcll
xor
pop
lods
ja
sub
sbb
aam
jns
rol
add
cmpsb
xchg
bound
shlb
punpckhwd
lret
sbb
push
dec
lock
jl
xor
fists
dec
xor
adc
xlat
xor
in
inc
cmpsl
je
hlt
into
or
gs
mov
cmpsb
cmp
mov
hlt
iret
ret
lea
pop
push
jecxz
xor
push
mov
pushf
adc
mov
jge
popa
std
popf
xor
loope
inc
adcl
jl
mov
mov
sahf
cs
mov
cmp
xor
mov
push
lods
jmp
xchg
inc
inc
xchg
stos
imul
mov
jo
lods
dec
cmpsl
mov
inc
frstor
sub
mov
pushf
cmp
iret
fisttps
es
ficoms
lret
fsts
or
jnp
cmp
out
push
popa
sub
or
ds
sbb
pop
iret
xchg
imul
sarl
inc
and
int3
push
ficomps
add
push
lds
or
adc
xor
add
adc
adcl
jo
jo
add
lods
add
mov
js
ret
sbb
stos
add
mov
mov
push
or
nop
xchg
clc
nop
andb
test
lods
sub
adcl
or
mov
pushf
sub
push
jo
push
pop
inc
inc
mov
mov
adc
lahf
test
adc
shlb
test
jp
mov
add
or
sub
pop
mov
ret
inc
sub
ret
dec
popa
fwait
xor
dec
and
dec
mov
in
add
sbb
mov
imull
stos
gs
mov
cmp
add
add
sub
pop
push
mov
mov
xor
ret
push
enter
dec
stc
and
repnz
mov
lret
imul
mov
mov
fadds
and
push
push
int3
rcll
jmp
fbstp
xor
push
cwtl
stos
dec
pop
mov
mov
lret
inc
inc
jp
xchg
and
cltd
aad
bound
mov
test
sbb
pop
and
xchg
pop
jae
xor
rcrb
push
sbb
lds
and
cmpsb
cltd
xor
lret
pop
sub
scas
into
xchg
test
xchg
push
kaddw
mov
xor
mov
les
fs
stos
mov
push
scas
and
xlat
cmp
xchg
in
sar
cmp
dec
outsl
arpl
or
cmpsb
mov
mov
shrb
rcll
xor
xchg
sti
fwait
sbb
sub
push
xchg
cli
enter
lock
adc
xlat
xchg
test
xchg
sub
loop
cmp
or
outsb
sbb
sahf
sbb
stos
mov
dec
push
mov
cmp
cmpsl
cmpsl
mov
sbb
or
sbb
cmp
push
mov
sbb
enter
insb
mov
fldt
scas
xor
add
dec
out
jbe
and
mov
inc
pop
mov
scas
sti
mov
decl
imul
nop
insb
mov
cmp
jb
mov
fldenv
dec
cmc
addl
dec
mov
clc
jmp
scas
fstps
js
repz
leave
or
fisubs
jecxz
inc
jecxz
clc
push
and
mov
sbb
out
xor
mov
jge
inc
push
stos
dec
push
orb
shl
mov
bound
inc
sbb
repnz
std
mov
fidivrl
push
sbb
xlat
sub
mov
ds
xchg
popf
cmpsb
sti
ja
adc
inc
add
sbb
dec
hlt
outsl
in
pop
jge
adc
or
xlat
adc
inc
cmpsb
pop
jno
jecxz
nop
shll
inc
mov
pop
js
add
int3
movl
xchg
and
xor
pop
lret
push
imul
lds
pop
imul
and
lock
sbb
xchg
and
push
sub
add
mov
and
pushf
fcompl
add
fwait
in
sub
xor
jle
inc
push
push
aaa
mov
xor
leave
test
sbb
jae
addr16
and
fsubrs
dec
sbb
jmp
pop
or
ds
mov
cmpsl
cmp
lcall
or
or
dec
sbb
xchg
loop
jo
xchg
push
lods
mov
inc
add
arpl
daa
mov
lock
and
inc
mov
sbb
cwtl
mov
cmpsl
jg
mov
dec
addb
push
pop
jl
mov
push
add
cmpsl
xchg
lods
push
cltd
inc
inc
mov
pusha
in
fisubrl
shll
inc
popa
loopne
cmpsb
and
push
aad
call
popf
sub
push
ja
ljmp
dec
inc
push
int3
xchg
imul
ds
cli
xchg
push
xchg
mov
fdivl
sbb
loopne
fnsave
xchg
pop
int3
mov
rorb
out
insl
inc
outsb
scas
cmpsb
shlb
pop
lret
sbb
fildll
js
jb
cmovp
imul
and
add
test
das
pushf
mov
loop
xlat
xlat
xchg
stc
rcrb
test
sbb
xchg
mov
push
pop
insb
dec
jg
shll
add
jg
out
pop
sub
xor
jmp
std
fnstcw
cmp
movsb
adc
or
mov
ljmp
fldenv
add
or
loop
jg
stc
imul
mov
repz
lock
fisubl
cmp
lock
jmp
mov
mov
adc
jo
cmc
mov
idivb
and
popf
push
aam
jmp
dec
stc
fmul
sub
aad
sbb
and
lods
sub
iret
inc
push
dec
outsl
and
bound
shl
sbb
or
and
add
xchg
lea
out
icebp
xchg
dec
adc
and
testl
pop
icebp
add
stos
pop
gs
push
out
lcall
leave
or
jl
out
dec
jbe
jmp
outsb
jb
sub
push
leave
push
leave
es
loope
xor
xor
stos
scas
xchg
jge
fucomp
call
inc
fldl
mov
sti
cmp
scas
test
fwait
pop
enter
rcll
imul
outsb
out
xor
roll
gs
mov
jne
rcrb
lock
aaa
mov
fimull
add
cs
mov
jp
mov
out
iret
inc
adc
imul
mov
outsl
out
mov
mov
push
pop
in
jg
addr16
lret
inc
cmc
ja
subb
shrb
clc
daa
jge
add
addr16
mov
adc
mov
sbb
ss
je
dec
adc
pop
loop
pop
sbb
sti
dec
sarl
jae
or
xchg
lods
xor
mov
mov
jno
mov
das
call
pop
jbe,pn
movsl
das
or
aad
jge
test
jg
pop
sbb
out
fadds
out
inc
dec
sbb
movsb
push
fwait
jne
jne
dec
mov
push
xor
dec
dec
pop
fnsave
add
sub
inc
dec
lods
cmp
scas
pop
xchg
movsl
in
xchg
into
and
gs
ss
inc
repz
out
sub
mov
and
sub
xlat
inc
in
or
or
lock
orl
sbb
jecxz
jl
in
cmp
adc
repnz
pop
or
push
add
repz
or
bound
dec
outsb
sub
mov
jg
adc
pop
pop
dec
xor
imul
loope
jnp
cmp
pop
decl
or
mov
mov
stos
f2xm1
cltd
test
pop
fdivl
cli
cmpsl
mov
mov
insb
dec
cmc
pop
xor
adc
ja
inc
adc
dec
sbb
and
scas
movb
add
aas
popl
cmp
sub
cmp
xor
sahf
cmp
clc
rcrl
fldt
insl
inc
jne
mov
cwtl
stc
mull
out
push
adc
pushf
insl
lcall
cs
adc
data16
adc
outsb
mov
push
jne
ficoml
ljmp
test
mov
pop
inc
flds
lods
jnp
fdiv
fildll
cmp
insl
or
fdivr
scas
std
mov
jb
insb
js
push
push
mov
cmp
cmp
push
repz
sbb
js
and
xchg
ret
cmp
xchg
push
pop
push
lahf
xchg
dec
add
fnstsw
add
fsubrl
test
mov
cmpsb
popf
aaa
pop
rolb
filds
and
pop
out
push
mov
add
jae
stos
iret
xchg
ljmp
dec
push
scas
xor
call
gs
inc
push
mov
shll
imul
push
mov
fcmovbe
cmp
aad
and
ret
xor
cmp
push
and
push
adc
ret
xor
mov
std
add
mov
mov
cltd
cmpl
cmpsb
jp
lahf
lods
mov
sub
in
int3
dec
lods
add
int
sub
dec
push
sub
mov
rolb
ret
mov
dec
pop
push
fdivrl
xchg
lods
mov
pop
push
push
out
sub
sub
push
cltd
cmpsb
sub
insb
std
es
push
xchg
or
jb
aad
mov
stos
pusha
xlat
movsl
mov
out
xchg
das
sbb
and
xlat
xor
dec
in
arpl
and
xchg
xchg
fdivrs
divl
je
xlat
stc
imul
xor
shrl
push
in
xchg
imul
into
jmp
jno
jbe,pn
cmp
addr16
sar
roll
push
push
arpl
xchg
sahf
adc
in
notb
xor
inc
or
add
fcomp
mov
in
andb
push
mov
lahf
xor
insb
into
imul
jae
je
cli
movsl
ja
pop
push
sti
lahf
pop
xor
div
xor
aaa
push
lcall
xchg
jg
pop
adc
std
out
mov
gs
mov
jmp
mov
or
xlat
xlat
xor
repz
test
and
mov
loope
push
jge
push
imul
add
add
std
hlt
stos
jmp
sbb
popa
inc
ret
dec
xchg
inc
movsl
mov
out
jnp
pop
cmpsb
rclb
mov
mov
cltd
xchg
mov
flds
pop
xchg
imulb
jns
insl
cs
mov
popa
aam
jp
push
mov
dec
fucompp
arpl
fnsave
sbb
push
shlb
jg
enter
adc
jle
call
xor
loopne
xchg
adc
dec
push
xchg
cmp
dec
sbb
repz
sub
sub
leave
jns
inc
sbb
andb
outsl
stc
imul
inc
xor
xchg
out
jns
outsb
faddl
fisubl
cmp
jnp
int
insb
mov
or
pushf
or
repz
dec
push
xorb
push
sbb
cmp
xlat
jmp
fldt
cltd
mov
stos
fildl
into
int
decb
jmp
movsb
dec
andl
adc
dec
mov
and
cmp
insb
cwtl
js
insl
pop
shll
inc
es
mov
outsl
lods
fsubrs
imul
push
and
sub
push
movl
xchg
fisttps
mov
jl
movsl
dec
adc
call
and
mov
mov
mov
xchg
testb
in
add
or
ret
push
jp
aas
lcall
icebp
sbb
dec
and
xchg
dec
std
sub
mov
stos
jae
jnp
and
jb
cmp
rorl
push
loopne
testl
out
jne
mov
out
ljmp
adc
movsl
jg
xchg
data16
adc
arpl
rorb
scas
das
mov
sbb
and
mov
mov
and
xor
xor
icebp
push
stos
outsb
fnstenv
jae
jb
pop
dec
jns
inc
adc
and
mov
aas
add
shll
lds
dec
orb
lods
xor
daa
daa
mov
sub
fisttps
mov
mov
pop
dec
hlt
out
fldl
pop
jae
cmp
inc
rcr
icebp
xchg
mov
sub
mov
jne
insl
xchg
pop
loop
aas
nop
sub
pop
jecxz
pop
xor
jle
fdivs
daa
and
clc
int
pop
lock
mov
int3
jg
jp
lcall
xchg
fdivs
jbe
jg
cmp
push
cmp
or
js
sti
sbb
punpckhwd
adc
jae
leave
push
fcmovu
and
and
pushl
jne
or
dec
movsb
mov
leave
mov
jbe
dec
jmp
bound
data16
fldl
ret
and
pushf
mov
mov
enter
aad
dec
mov
ror
iret
or
aad
aas
xchg
insl
pop
fisubrs
mov
lahf
adc
jb
sbb
sti
adc
test
jne
out
ficompl
shrb
jecxz
dec
daa
mov
and
pop
jns
push
fxch
mov
out
push
jp
xchg
out
mov
ds
inc
inc
scas
mov
push
ret
push
push
add
pop
inc
push
scas
stos
mov
lods
jnp
or
insb
or
cmp
mov
dec
mov
ucomiss
add
mov
stc
enter
xor
mov
inc
add
xchg
inc
fdivs
jecxz
sub
adc
dec
mov
lods
call
idiv
std
inc
add
int
dec
adc
insb
dec
fcoml
clc
push
push
lods
inc
fidivl
pop
in
loope
popa
iret
push
repz
or
adc
addr16
jmp
fistpll
mov
jg
xchg
pusha
jmp
fldl
out
or
jecxz
adc
stos
nop
inc
jge
js
dec
int3
sti
fwait
xchg
repz
rorl
pop
aaa
pusha
lock
xchg
pop
ds
sub
jae
mov
lods
dec
adcb
mov
jg
sbb
inc
ret
xor
je
cli
sti
xchg
inc
lea
xchg
jmp
gs
in
cmp
adcl
pusha
repz
cmp
sub
sarb
push
cmp
movsb
cmp
addr16
xor
loope
rorl
sbb
pop
inc
adc
xor
jns
test
xor
or
imull
dec
in
pop
inc
mov
cmp
insl
push
ja
xor
clc
addb
std
popf
and
mov
sbb
outsb
or
mov
xchg
push
xchg
mov
adc
xchg
and
mov
fs
les
loope
movsl
jmp
mov
sub
mov
imul
sbb
xor
aas
jecxz
repnz
shr
inc
mov
pop
dec
add
ss
in
adc
mov
jbe
or
mov
scas
add
ret
sub
in
out
push
popa
adc
mov
pop
aaa
jo
dec
jns
ds
mov
xor
pop
pop
arpl
dec
xchg
or
sub
sub
sarl
or
sbb
test
inc
mov
lret
arpl
aas
ss
push
call
mov
push
mov
cmc
sahf
fisttps
xlat
cld
and
popf
sbb
mov
sbb
sbb
into
jge
scas
or
inc
out
cmpsb
jae
stos
lock
addr16
ljmp
push
call
popf
je
ret
outsb
pop
shr
inc
clc
add
or
cmc
fiadds
mov
iret
sub
sbb
cmp
notb
inc
fdivs
or
enter
jns
xchg
mov
jb
sbb
lds
push
es
cmp
sbb
pusha
std
cmc
lock
cmp
push
data16
stos
xchg
movsb
lea
or
rcl
dec
xadd
cmc
dec
adc
aam
sub
pop
push
inc
add
mov
jl
in
mov
and
jnp
enter
pop
and
dec
or
mov
xchg
xchg
insl
lahf
cmc
iret
mov
mov
add
xchg
add
sbb
repz
stos
ja
fwait
shll
jle
jp
aas
push
rcr
movsb
scas
adc
or
arpl
inc
lret
mov
pop
pop
js
out
mov
imul
push
fstpl
and
cmpl
lods
dec
addl
outsb
mov
xor
mov
cmc
fimuls
in
mov
xor
fucomi
cmp
and
adc
arpl
xchg
mov
jg
sbb
sarl
inc
fwait
in
xchg
outsl
das
rorl
sub
add
mov
test
pop
cmpsb
sbb
mov
dec
push
mov
sub
xor
fdivr
fs
das
mov
jbe
cmp
lret
pushl
fstp
movsb
pop
movsb
clc
cmp
pop
xchg
fistpll
out
pop
inc
pop
test
sub
sbb
lret
cld
sub
enter
cld
idivl
out
call
outsl
lahf
lahf
mov
enter
sti
mov
imul
lods
push
xchg
add
dec
fs
loop
pop
dec
fisttpl
inc
out
pop
sub
imul
pop
es
push
adc
fs
or
movsl
inc
imulb
dec
lretw
push
adc
xchg
mov
sti
inc
mov
incl
out
inc
adc
inc
gs
andb
and
adcb
repz
cltd
or
pop
dec
sub
add
push
and
sbb
mov
test
mov
dec
cld
inc
push
pop
and
repz
jo
push
push
loopne
popa
insl
cmp
jl
mov
data16
xlat
push
xor
adcl
or
popf
ret
mov
pusha
lahf
jno
stos
pop
xor
inc
push
adc
sahf
mov
cmp
add
shlb
cmp
in
dec
shr
dec
mov
mov
jno
sbb
lea
loopne
sbbb
ret
leave
andb
sub
filds
sbbb
jge
cs
cmpsb
aam
and
sbb
jle
test
and
mov
iret
ret
xor
jbe
inc
repnz
shrb
cmc
dec
out
push
pushf
stos
imul
bound
aaa
xchg
push
dec
cwtl
popf
mov
adc
or
adc
pop
push
andb
dec
push
xlat
leave
push
roll
jne
cmpb
jno
push
ret
jnp
ds
loope
in
jns
mov
mov
sub
mov
mov
rclb
outsb
jmp
dec
movsb
jle
ja
inc
data16
push
lahf
sarl
push
out
test
ret
popf
push
leave
mov
arpl
shrl
dec
sub
int3
fcmovu
ficomps
mov
mov
lcall
mov
and
jg
jo
es
cli
dec
arpl
dec
lock
push
add
int3
xchg
xor
data16
push
xor
add
mov
push
xlat
clc
mov
add
sti
inc
scas
jae
hlt
dec
inc
fisttpll
movsl
sti
test
inc
xchg
call
test
cwtl
mov
ja
jle
push
mov
pop
imul
cmp
ss
mov
test
or
pop
sub
inc
push
out
mov
xchg
add
test
pop
cmp
cmp
ret
mov
nop
or
lods
adcb
jae
push
jne
mov
sbb
mov
imul
xchg
mov
lock
addr16
mov
jl
mov
cmc
xchg
mov
sbb
sub
je
mov
scas
sarb
lcall
sbb
jecxz
jle
cwtl
xor
fisttpl
aad
int3
test
mov
mov
cmp
sbbl
cmpsb
jge
jbe
push
js
insb
in
push
mov
mov
sbb
ficoml
testb
xor
subb
ljmp
mov
mov
adc
sub
movsb
xchg
xor
fisubl
cmp
lret
xchg
inc
out
or
jle
popf
xor
popf
ret
or
mov
outsl
stos
pop
push
add
inc
outsb
xchg
cli
pusha
mov
out
cli
int3
xchg
inc
xchg
int3
mov
ss
ds
mov
mov
test
fisubrl
leave
popa
jle
lret
mov
mov
mov
scas
rcrl
mov
add
ss
gs
xchg
mov
jb
inc
lea
pop
cmp
cld
xor
xchg
insl
stos
inc
sub
adc
dec
cli
push
fistps
out
xor
in
out
xchg
lock
loop
dec
outsb
pop
dec
dec
andb
sbb
fldenv
sub
adc
mov
adc
fidivrs
mov
pusha
inc
cwtl
aam
gs
push
mov
mov
int3
push
je
test
popa
ss
lret
into
lea
xor
push
pop
jp
fnsave
push
ljmp
sbb
push
xchg
xchg
scas
cmp
roll
ljmp
mov
jb
push
jp
aam
jg
cs
mov
ret
cltd
inc
enter
jg
andb
xor
dec
mov
in
add
call
fldcw
cwtl
int3
cmpsb
sahf
shll
jmp
adc
xor
jb
fbstp
mov
cs
lcall
fwait
pop
add
data16
stos
add
shrb
enterw
fsubs
mov
fidivs
stc
or
testl
dec
call
sub
jns
cmpsb
scas
xchg
js
std
inc
testl
mov
mov
inc
enter
pushf
jno
in
outsb
or
mov
in
outsl
in
iret
popf
mov
mov
mov
mov
es
in
repz
movsl
mov
xchg
pushf
popl
data16
push
daa
jp
pop
frstpm(287
inc
ja
test
gs
xor
inc
and
mov
lret
dec
test
gs
jns
sub
xchg
mov
stos
mov
jbe
cmpsl
push
imul
mov
ljmp
inc
cmp
mull
ret
jecxz
test
mov
leave
pop
adcl
ljmp
or
out
jp
mov
test
jl
test
mov
call
mov
lcall
mov
hlt
jno
addr16
dec
negl
mov
mov
cmp
iret
in
in
jg
in
jae
push
mov
sub
aas
mov
jne
or
dec
xchg
push
gs
in
ja
pop
push
ds
dec
dec
ds
dec
mov
adc
fcoms
jns
into
dec
les
lcall
test
mov
xchg
dec
xchg
ds
xchg
pmuludq
fisttps
les
mov
cltd
daa
sub
jae
fs
scas
mov
out
popa
mov
cwtl
mov
cmc
stc
scas
std
jne
aaa
jo
push
xchg
shrl
jg
fldl
pop
test
ret
in
neg
icebp
dec
add
lds
jno
mov
shll
mov
push
or
inc
xchg
ds
aam
mov
or
adc
shll
orb
jecxz
lret
inc
push
push
sbb
mov
pop
insl
out
inc
out
ds
mov
pusha
pop
in
mov
int3
or
jecxz
adc
cmp
decb
filds
fwait
inc
mov
push
mov
or
rcrb
in
lret
pop
xchg
fcompl
sub
loope
cmpb
mov
jmp
sti
or
and
cmp
ss
jne
or
mov
dec
es
adc
mov
or
xor
rcrl
mov
xor
dec
xor
les
in
xorl
cmp
lock
xchg
loop
insb
test
xchg
mov
add
mov
stc
aas
and
xor
enter
cltd
inc
sbb
cwtl
mov
leave
push
dec
shr
inc
add
inc
cmp
inc
dec
inc
js
push
sbb
cmpl
bound
cmp
mov
jne
sub
xchg
mov
cli
inc
xrelease
sub
rep
xor
mov
jbe
xor
insl
shr
dec
or
stc
arpl
xlat
cmp
sub
enter
mov
repz
daa
test
mov
or
je
xchg
jmp
sahf
bound
shrl
lock
fstps
aad
pop
stos
adc
cmp
movsb
push
jecxz
cs
or
jb
adcl
and
push
in
arpl
xor
mov
cmc
or
cmp
mov
mov
pushf
bound
mov
inc
xor
bnd
mov
aas
push
add
inc
adc
daa
dec
sbb
test
xchg
gs
pop
mov
cld
sbb
or
popl
movsb
pushfw
enter
das
dec
mov
jmp
test
lods
jl
jmp
popa
or
hlt
sahf
pop
mov
cmp
addr16
mov
pop
repnz
or
adc
sub
xor
int
stos
loopne
or
pop
sti
cmpsl
cmp
leave
lds
push
add
pop
in
push
ficomps
cmpsl
or
pop
sarl
mov
popf
iret
adc
addr16
sti
and
xor
pop
mov
jg
int
push
out
xor
mov
add
xchg
xchg
mov
sbb
mov
enter
insb
data16
and
mov
rorl
data16
and
ret
mov
fcomps
sbb
ljmp
clc
stos
lods
sub
mov
push
jo
sbb
dec
fldl
clc
jmp
dec
xlat
ds
out
test
and
xchg
inc
sarl
leave
add
add
iret
pushf
push
cmpl
mov
call
out
inc
dec
or
jg
cmc
lods
mov
out
fs
or
mov
push
mov
rorb
movsb
jmp
sarb
jecxz
mov
insl
cltd
jne
inc
lcall
inc
popa
fisttpll
cmp
push
inc
jle
mov
mov
call
jb
cmp
into
sub
mov
test
adc
jae
fnstcw
les
shl
sub
int3
ret
pop
lock
sti
in
ss
orl
jns
jne
push
sbb
out
add
nop
fs
pop
and
repnz
pop
enter
call
mov
leave
lds
or
mov
paddusw
fidivs
sti
pop
dec
mov
imul
xchg
lcall
mov
mov
scas
mov
jecxz
add
rcr
movsl
insl
das
jmp
leave
test
jl
mov
push
stos
aaa
sti
fistpll
inc
divl
adc
loop
popf
stc
push
and
mov
xchg
add
mov
inc
test
xchg
jp
daa
xor
mov
push
ljmp
jo
outsl
push
add
ret
and
insb
mov
clc
mov
mov
cwtl
dec
jmp
out
sub
push
jo
inc
push
cmpsb
faddl
pop
gs
inc
sbb
sbb
int
movsl
loop
outsl
or
add
push
imul
inc
adc
sub
bound
pop
dec
stc
les
popa
fwait
lea
sub
inc
pop
push
lods
jmp
xchg
imul
inc
inc
and
cs
lea
sbb
aaa
push
aad
rolb
push
lods
push
bound
add
outsb
mov
out
and
in
daa
add
and
jae
xor
cld
pop
or
mov
add
push
mov
and
inc
pop
push
sbb
daa
cmp
jno
shl
fsts
mov
or
repz
test
daa
xor
fcoms
xchg
add
das
sub
push
jp
inc
lds
in
mov
sahf
imul
sbb
mov
xor
je
sub
pushf
jmp
incb
dec
ret
inc
test
rcrb
fimull
mov
lret
das
jmp
jl
in
xchg
pushf
or
roll
xchg
jg
sub
push
rol
aas
flds
adcb
bound
loope
loope
in
pusha
lods
jp
mov
out
and
mov
mov
cmp
mov
xchg
les
aaa
ficompl
mov
sbb
mov
mov
push
out
inc
cs
dec
aas
pushf
xchg
test
mov
sub
int3
inc
stos
push
jnp
cwtl
sti
movsb
add
dec
pushf
sbbb
mov
inc
ror
enter
sub
sub
mov
test
push
sbb
mov
lahf
jne
fdivl
cmpsl
add
sub
outsb
mov
sbb
lcall
or
sarl
pop
push
xchg
ja
nop
fldcw
jb
inc
mov
cld
xor
in
in
ss
and
mov
sub
ja
jbe
movsb
aaa
fcomp
outsl
ds
push
pop
rcrb
cmpsb
add
int3
push
int3
mov
fdiv
out
xor
inc
testb
pop
scas
inc
mov
mov
inc
fstpl
roll
outsl
pop
outsl
dec
shll
dec
pop
mov
test
pop
pop
jge
pushf
xlat
rcrl
mov
jge
iret
test
fildll
pop
outsb
nop
jnp
pop
aas
ret
push
shll
mov
ja
je
jle
xor
push
in
xor
adc
testl
out
pusha
push
lods
scas
std
out
mov
cmp
cli
sti
pop
xchg
div
and
popa
fsub
fimull
inc
insl
lock
mov
fs
xor
aaa
xchg
testl
push
leave
insb
mov
int
fmull
imul
ds
xor
aas
fcoms
mov
imul
dec
xchg
std
and
push
pop
xorl
test
fistpl
mov
fnstenv
pushf
and
push
jp
inc
pop
jg
push
add
loopne
jl
aaa
hlt
stc
adc
dec
pop
movsl
lea
int
les
jnp
sub
mov
scas
lea
lea
push
add
inc
ja
mov
dec
dec
cmp
mov
in
cld
mov
out
insl
adc
repz
cmp
test
das
rcl
mov
xchg
sbb
insb
into
push
adc
pop
mov
lret
or
pop
ja
pop
and
outsl
push
xchg
stos
not
stos
jl
js
pop
out
das
jns
dec
adc
push
call
test
dec
sahf
xor
ret
ljmp
es
lock
inc
loopne
es
xchg
test
push
cmc
mov
pop
add
jecxz
jo
adc
loope
push
mov
fistl
xchg
and
sub
push
pushl
lea
cmp
pushw
pop
xchg
lock
popw
inc
mov
cmpsb
lcall
xor
sbbb
mov
push
data16
pushf
jecxz
mov
jg
jmp
popa
mov
aas
cmp
xor
imul
mov
lods
lods
je
push
sub
test
fistpl
scas
ds
loope
xor
mov
jmp
push
addr16
push
sbb
repz
jne
mov
lods
lea
out
fcoml
movsb
divb
push
aad
and
pushf
int3
idivl
xor
sub
idivb
pushl
xor
pop
lds
int3
test
sub
sarl
jno
repz
cmp
mov
inc
adc
sahf
pop
dec
test
daa
hlt
and
dec
insb
jle
dec
fdivs
mov
sar
add
ljmp
stc
decb
fcomi
xchg
mov
repnz
push
in
ret
ljmp
adc
dec
xor
push
shrb
sbb
mov
xlat
xchg
les
jl
inc
scas
mov
outsb
cwtl
enter
lret
mov
or
test
pop
scas
inc
push
aas
pop
loop
sbb
iret
xor
loopne
xor
repnz
dec
jge
jno
stc
inc
lods
rolb
mov
data16
sbb
fmuls
xor
mov
and
hlt
daa
and
xchg
dec
sysenter
stos
pusha
xor
or
sub
ret
and
or
mov
fs
xchg
aam
loop
fbstp
rorb
jno
movsb
xchg
cmp
js
mov
mov
sub
inc
sti
adc
rcrl
and
clc
enter
fnsave
out
paddsb
cmp
addr16
and
popa
lea
or
sub
cs
insl
push
mov
or
sbb
adc
fnstsw
jg
int3
in
cmp
mov
insb
into
add
jle
std
inc
and
pushf
fidivl
cmc
inc
iret
cmp
pop
aaa
push
ret
iret
lret
enter
inc
ret
loopne
jae
pushf
shll
cmp
cmp
mov
sti
gs
scas
mov
inc
dec
flds
cltd
imul
add
xor
xchg
mov
and
add
int
into
imul
sbb
pop
stos
jae
lods
cli
mov
mov
scas
mov
sbb
mov
orb
mov
xor
mov
les
out
cli
jge
cmpsl
cld
mov
mov
push
dec
jb
lret
in
cmp
es
adc
cmp
in
in
pop
pop
imul
jmp
mov
sub
pop
and
fwait
jl
fadd
popf
in
sbb
cmp
ret
mov
mov
mov
lahf
bnd
sub
mov
xor
int3
inc
dec
stos
mov
jbe
push
mov
xchg
dec
shl
mov
out
push
aam
int
mov
aad
pop
cmp
jg
add
daa
mov
ljmp
test
mov
fldcw
loopne
mov
dec
pushf
cmp
dec
out
stos
outsb
jmp
sub
sub
push
push
negl
mov
sarb
addr16
pop
or
mov
jns
inc
and
add
flds
or
aad
or
sahf
sbb
sub
cmc
xor
std
cld
arpl
add
mov
xor
lret
sub
xchg
jno
ja
orb
xchg
jle
mov
lcall
pop
sub
clc
adc
sbb
sub
cmc
cmp
mov
dec
insb
xchg
cli
push
xchg
out
sbb
mov
fmul
add
jp
sti
xlat
repz
jo
mov
popf
cmp
in
add
adc
mov
push
cwtl
aaa
push
scas
or
arpl
pop
inc
outsb
xchg
loopne
push
lret
cmp
inc
testl
ljmp
jno
xor
jo
aad
xor
enter
jmp
sbb
push
dec
pop
ret
ds
push
in
push
and
pushw
mov
push
or
shrl
test
repnz
test
fistpll
cmp
jb
cmp
push
ffreep
push
inc
xchg
xor
iret
push
pop
outsb
cmp
test
pop
jb
shll
pop
sbb
ljmp
mov
imulb
test
or
inc
int
lret
xchg
cmpsb
fsts
nop
and
push
dec
addr16
ljmp
mov
push
push
inc
jns
xchg
xchg
imul
fistps
sub
fs
fisttps
pushf
repz
shlb
inc
in
stos
jb
pop
cmp
xor
adc
pop
daa
push
jbe
sbb
out
pushl
clc
jp
repz
sbb
mov
int3
cli
arpl
in
add
int3
or
dec
stos
into
xchg
adc
mov
fwait
insb
or
push
repnz
push
icebp
ss
pushf
cmpsl
dec
pop
and
jmp
lods
xchg
mov
cli
push
lea
test
in
stos
scas
rorl
ds
ds
xorl
xor
push
pop
imul
lahf
pop
sub
lret
adc
fstp
xor
mov
lcall
call
inc
dec
in
fnstsw
in
cli
divl
imul
add
add
cmc
xrelease
jbe
mov
outsl
stos
sar
adc
divl
movsb
mov
ds
inc
or
add
fildl
xor
ret
test
or
in
iret
hlt
pmulhuw
movsb
cli
loop
jnp
scas
sbb
add
out
xor
jle
arpl
call
jns
inc
xor
movsb
cmp
sbb
adc
aaa
aaa
cmc
adc
lods
sub
cmp
sub
loope
xchg
dec
fsub
arpl
testl
mov
fiadds
pop
ret
cmp
adc
mov
mov
mov
in
inc
pop
push
mov
insl
cmp
pop
lret
or
pop
mov
fcompl
xchg
cs
subl
and
aaa
jmp
sbb
dec
dec
daa
jge
sub
cmp
jns
push
add
test
sti
dec
cmp
loop
push
scas
fs
mov
ja
fnsave
fwait
add
fsubrl
outsb
sub
rorb
lret
and
fstpt
rorl
les
mov
dec
and
push
push
mov
sbb
arpl
sbb
lock
outsl
mov
int3
sti
cmp
add
and
push
pop
arpl
xchg
ret
fimuls
pop
ret
jno
outsb
mov
insl
mov
lret
sahf
pop
xchg
mov
lahf
push
mov
into
fwait
mov
ds
jl
in
rorl
push
lea
in
popa
sub
int
sub
cmp
fadd
push
xor
push
mov
iret
sahf
add
rorb
fcmovb
imul
imul
mov
cmp
pop
xchg
leave
inc
rclb
mov
divb
divl
sub
jle
inc
ja
jecxz
in
test
xchg
adcb
inc
jns
xchg
sub
fs
jae
adcb
cmc
dec
loop
mov
cmpsl
dec
test
call
rcrl
add
jg
repnz
out
pushf
jbe
movsb
lcall
out
clc
xchg
fisubs
inc
mov
adc
stc
fdivp
sti
add
xchg
jecxz
adc
push
sub
movb
jbe
inc
xchg
stc
sbb
mov
sub
les
int
mov
rcrl
icebp
xor
jle
push
out
and
lret
sub
lods
in
jge
sbb
add
dec
scas
or
call
lock
xlat
adc
push
cltd
jnp
pop
in
inc
pop
clc
icebp
jae
bound
pop
mov
mov
std
xchg
jmp
sti
mov
sbb
xchg
sbb
fisubrs
mov
dec
mov
fisubrs
lcall
add
jle
movb
mov
push
aas
dec
sub
sub
scas
popf
add
cmp
xchg
orb
pushf
sub
dec
lock
add
dec
mov
push
mov
push
cwtl
rol
and
push
cmp
sub
das
mov
lods
les
mov
adc
cwtl
call
pop
mov
dec
stc
pop
cmp
adc
imul
pop
or
div
rcr
cwtl
adc
test
adc
scas
fcomps
xchg
jbe
xchg
int3
xor
add
int3
outsl
jno
mov
or
lcall
es
add
into
ljmp
add
nop
int
push
xchg
dec
jno
fldenv
add
adc
and
bound
enter
xlat
movsb
mov
dec
out
ss
stos
data16
jnp
jnp
insl
lods
mov
jo
pop
ficomps
shll
bnd
loope
es
mov
rcrl
gs
or
inc
xor
xor
mov
push
int
sbb
or
fs
iret
xor
es
cmp
aad
add
ds
jp
sub
in
out
call
inc
not
std
cmc
subb
and
add
sub
mov
jp
push
ret
push
outsl
sbb
jge
push
mov
xchg
hlt
mov
sub
adc
mov
je
cmp
out
movsl
hlt
movsb
xlat
xor
or
cmc
out
mov
iret
mov
add
pop
mov
repz
jne
sub
sub
mov
mov
cmp
shlb
mov
push
lods
or
std
imul
fmuls
mov
fisttpll
jns
add
es
scas
out
mov
pop
out
sub
adc
aam
lods
push
push
popa
sbb
ffreep
and
sarl
sbb
aaa
push
subb
or
cmpsb
js
popa
ljmp
xlat
push
jl
fidivs
rorl
cmp
sub
mov
cld
scas
ror
fwait
dec
cmp
add
dec
popf
insb
or
inc
lret
cmc
cli
mov
jecxz
in
loope
aaa
add
dec
inc
outsl
cmp
jecxz
jecxz
and
and
test
les
inc
jnp
xchg
je
or
lods
movsl
jae
dec
loop
jae
jae
sub
test
push
pop
cltd
mov
sub
add
inc
pop
mov
mov
dec
add
outsb
orb
mov
mov
add
or
ja
orb
push
or
adc
std
cwtl
clc
lahf
sahf
fnsave
sub
stc
adc
dec
fnstenv
mov
cmp
lret
dec
popa
in
loop
insl
call
jp
out
lahf
loop
mov
scas
mov
add
scas
repz
fstps
fistps
dec
sbb
mov
lahf
xchg
push
fidivs
andl
pop
sbb
int3
jle
aad
inc
pop
pop
sbb
and
fsts
imul
xchg
mov
scas
xor
mov
and
sahf
fstps
jge
mov
cmp
dec
mov
sbb
pop
das
mov
cmp
jmp
add
dec
data16
ficoms
movsl
cwtl
loop
mov
sbb
xchg
xchg
mov
inc
mov
sub
dec
add
adc
mov
repnz
fldt
shll
add
sub
jns
pop
adc
lds
sub
loope
les
mov
fs
cmp
pushf
ds
les
xchg
xor
rcll
jne
leave
pop
sbb
cwtl
mov
shll
rcrl
pop
pop
pop
pushf
push
push
push
xlat
adc
push
pop
insl
mov
xor
adc
lret
test
outsb
dec
sbb
rcll
push
adc
dec
xor
bound
mov
add
ret
test
in
cli
cmp
inc
int3
mov
pushf
aad
inc
popa
inc
add
dec
push
mov
adc
cmc
mov
xor
arpl
jmp
loope
mov
lea
xor
xchg
ret
inc
popf
inc
mov
mov
addr16
in
aam
cli
fbstp
out
add
add
and
cmp
std
jle
push
repnz
xorl
dec
outsb
icebp
push
cmpsl
int
jl
jmp
pop
out
das
cmc
dec
inc
and
fsubs
js
dec
imul
fcmovnu
inc
mov
xchg
xor
lret
mov
push
movsl
popf
out
or
mov
sub
xchg
dec
outsl
lret
in
and
lock
xor
cld
push
pop
mov
or
repnz
and
jecxz
pop
dec
pop
fidivrs
xor
leave
add
or
mov
jle
in
insb
xchg
out
xlat
mov
add
push
adc
adc
adcb
push
stc
sahf
mov
mov
aaa
push
mov
xor
xor
lret
dec
push
xchg
ljmp
sarl
xor
aaa
cmp
push
sbb
mov
adc
mov
mov
fidivs
jle
jo
aad
pop
jns
arpl
aad
xor
jo
xor
aas
lock
lods
push
xchg
xchg
aas
dec
sbb
sub
xchg
divb
adc
ret
inc
xor
xchg
dec
fidivrs
jge
mov
sarl
and
push
and
cld
push
and
mov
test
popa
repz
jp
mov
out
cmpsl
pushf
ret
dec
aam
cmp
in
cmp
iret
jg
jae
dec
adc
sub
and
in
mov
hlt
sbb
and
mov
pop
push
xor
sbb
pop
into
jno
cmp
sub
or
jns
in
mov
dec
inc
addb
mov
push
fucom
or
mov
test
dec
and
or
sbb
je
or
jmp
push
sti
push
lcall
lcall
jle
lcall
rcr
out
jp
clc
repz
lret
mov
aam
dec
and
out
jecxz
dec
sbb
and
in
out
mov
sbb
add
inc
pop
xor
sbb
cld
arpl
popa
leave
mov
popf
pop
adc
fwait
nop
dec
idivl
out
sbb
push
inc
push
pop
js
sbb
sub
pop
in
notb
mov
lahf
pusha
fldt
and
adc
cld
pop
idivl
pop
sbb
test
xor
sub
repnz
jecxz
je
and
fsubrs
xchg
fdivrl
inc
addr16
dec
xchg
sbbl
shl
mov
xchg
subb
out
dec
stos
or
test
push
jo
mov
xor
cmpsl
testl
xor
mov
xchg
enter
ret
jmp
xchg
and
pop
push
sub
insl
xor
inc
stc
push
pusha
dec
pusha
mov
in
ss
xchg
cld
out
insl
cmpsb
add
jbe
jnp
pop
out
push
popf
ret
data16
cmp
call
add
ret
mov
cld
orl
ja
out
test
lcall
loope
jl
mov
cltd
push
sti
cmp
pop
test
sbb
jmp
in
push
into
adc
subb
addr16
test
out
shrb
fwait
mov
or
and
in
sahf
mov
xlat
mov
jae
shl
jbe
call
xor
sub
sub
scas
sbbl
outsb
shl
jb
addr16
nop
jp
jno
mov
leave
and
mov
mov
aad
lcall
push
mov
fwait
sbb
jecxz
ret
xor
jns
cmp
cmpl
pop
call
icebp
adc
clc
adc
push
dec
xchg
repnz
push
xchg
mov
pop
mov
xor
or
mov
inc
out
pushf
cmp
adc
xchg
loope
mov
mov
add
mov
out
fdivl
pop
lahf
inc
sbb
jbe
mov
mov
xchg
cwtl
cmp
jnp
push
paddw
mov
or
xchg
ja
mov
aam
movsl
mov
mov
filds
pop
mov
icebp
pop
mov
loop
pop
push
jns
dec
jmp
mov
cmpsl
lret
inc
ds
imul
je
jl
in
pop
fstpl
mov
scas
or
or
pop
pop
pop
and
pop
jo
les
ds
dec
sub
mov
mov
in
std
mov
mov
xchg
js
adc
rcrl
pop
push
cmp
xor
test
hlt
fprem1
mov
mov
and
cld
cwtl
incb
ljmp
loop
mov
ja
popf
cs
imul
test
in
mov
cmp
xchg
cs
es
mov
repz
out
test
decl
push
jbe
sbb
gs
pop
adc
push
xchg
add
xor
lods
lahf
loopne
cmp
mov
mov
cwtl
stos
fst
push
ficomps
xchg
sub
lods
mov
pop
data16
xor
leave
out
cmp
repz
out
cmpsb
aas
stos
cmpsb
lods
mov
pop
jae
mov
jge
lock
iret
mov
out
push
outsb
mov
add
dec
xor
fidivrs
sbb
gs
nop
mov
lret
mov
cmp
xchg
add
stos
out
movsb
test
cmp
repz
pusha
ror
leave
sti
mov
aas
loop
cmc
ljmp
aaa
out
mov
fnstenv
je
pop
daa
enter
jb
cmpsl
sarl
in
notb
jnp
outsl
sti
rcr
ffree
jecxz
imul
cmp
in
jbe
sub
dec
and
mov
insl
pop
pop
scas
ds
jecxz
jbe
adc
pop
sub
push
gs
xchg
idivl
push
mov
adc
outsl
fstps
lret
adc
jns
jne
addr16
aaa
jp
cmp
into
push
loopne
cmp
enter
jnp
inc
ret
push
sbb
sub
adc
xchg
fadd
mov
pop
xchg
or
sub
jne
jmp
or
add
mov
jge
mov
inc
imul
rcr
and
push
jle
sbb
adc
jle
adc
xchg
push
inc
jno
test
js
dec
stc
mov
cwtl
pop
cld
xor
jmp
xchg
push
mov
ror
mov
adc
jecxz
jge
ja
xor
not
dec
cmp
cmp
lods
push
inc
and
jg
dec
xchg
pop
rcr
jmp
lods
cwtl
xchg
dec
fidivs
jg
mov
sbb
xchg
or
jne
inc
pop
xor
lds
lret
push
jp
lea
xor
xchg
cmc
es
sahf
adc
pop
je
push
jbe
jmp
sub
fs
jae
addr16
dec
out
popa
jmp
sub
push
sub
insb
jns
je
mov
xor
inc
sub
xlat
cmpsb
dec
test
sub
clc
add
pushf
xchg
add
add
jnp
jns
mov
or
mov
push
push
mov
inc
int
xchg
iret
cmp
iret
shrb
mov
cmp
sub
push
or
mov
sub
sahf
sub
arpl
aaa
js
loope
popa
out
jae
lcall
fildl
mov
addr16
mov
clc
inc
jge
sbb
lcall
dec
jecxz
mov
inc
movl
push
cmc
lds
fstl
add
loopne
sub
fnstenv
xchg
add
mov
sub
fnsave
jno
mov
push
jno
jne
pop
fmuls
push
scas
mov
dec
push
dec
inc
jnp
xchg
test
xchg
insl
out
aam
and
push
xchg
pop
add
jmp
ja
sub
push
mov
sbb
jae
ret
inc
xchg
sub
jnp
pop
jb
push
popf
les
xor
add
push
jo
enter
mov
out
push
paddusw
repnz
pop
bound
jbe
in
cmp
lret
push
jns
sbb
ss
fucomip
sub
gs
jns
pusha
out
xor
adc
movsb
mov
ret
or
jl
fwait
ss
mov
loope
pop
mov
adc
aam
out
lret
lods
jne
cmp
std
push
ret
mov
mov
stos
clc
repz
in
insl
jge
inc
insb
mov
int
jb
es
stos
cmpb
lods
sarb
stc
popa
sub
popl
and
fwait
adc
roll
ja
sbb
xor
pusha
jp
mov
rcll
or
sbb
pop
mov
nop
icebp
sbb
aad
shll
jae
scas
xor
inc
les
xor
loopne
xor
mov
lret
xor
dec
jbe
jp
arpl
adc
in
mov
mov
xorb
jb
bound
xchg
cmp
stos
insb
push
adc
addl
imul
mov
test
inc
adc
rorb
out
jle
lods
cltd
or
sahf
xchg
jnp
mov
in
aaa
lods
xchg
enter
jae
repnz
sub
and
test
fwait
adc
adc
leave
movsl
in
push
and
popf
dec
loop
sbb
cld
stc
cmp
out
sbb
mov
and
ja
sti
push
mov
addr16
aad
in
add
push
icebp
cmpsl
cmp
repnz
daa
adc
scas
dec
repz
ljmp
xor
je
xchg
pusha
mov
jbe
rclb
jmp
outsb
push
adc
fsub
push
xor
mov
cld
jb
xchg
shlb
cmpsb
fs
mov
sbbb
into
pushf
popf
test
cs
pop
nop
es
leave
xchg
lea
sbb
pop
outsb
jmp
movb
xchg
cmpsl
xor
stc
fcomip
mov
aaa
rcrb
mov
cmp
sbb
mov
jg
xchg
jmp
jmp
push
push
xor
adc
and
jo
sub
sti
in
fimuls
lock
mov
es
call
hlt
xchg
jne
mov
xchg
adc
jmp
and
add
cmpl
repz
sub
mov
or
aam
mov
jg
bnd
xchg
in
adc
sbb
sbb
and
repnz
enter
push
test
xchg
and
clc
ja
push
lcall
loopne,pn
cwtl
loop
test
pop
push
jns
pop
daa
dec
or
pop
push
fwait
lock
sbb
mov
hlt
push
mov
lret
add
clc
repnz
mov
sti
mov
dec
xor
mov
jle
xchg
xchg
xchg
cmc
push
or
sub
and
test
mov
jmp
mov
out
clc
pop
sbb
cmp
popa
cltd
mov
sub
push
jl
add
int3
idivb
adc
add
imul
push
cs
popl
mov
cmp
in
sbb
mov
mov
jno
shrl
loopne
xor
add
pushf
fldcw
pop
sarb
aas
xchg
roll
inc
cli
andl
push
adc
fstpl
inc
mov
stc
push
rcl
mov
rcll
in
std
jmp
rorl
jge
cld
mov
pop
int
push
jno
es
mov
cmp
lahf
inc
mov
cmp
cmp
iret
jp
stos
mov
dec
fdivl
jns
popa
stos
mov
test
or
sub
nop
test
mov
pop
fcmovne
testl
and
jp
fdivrl
dec
pop
mull
pusha
stos
inc
sbb
je
sub
testb
jbe
xor
stos
dec
out
das
cmpsb
adc
repnz
cmp
sub
mov
stc
mov
popf
divb
loop
sub
xchg
pop
jns
jge
push
jb
xlat
aad
rorl
xlat
push
push
mov
shlb
outsl
pop
xor
xor
pop
out
sub
cltd
mov
je
add
nop
xchg
dec
mov
rcl
rcll
xor
push
insl
pop
shl
roll
lods
xchg
xchg
jbe
int
xchg
pusha
inc
jl
stc
add
lock
addl
add
mov
ss
rol
add
mov
mov
xchg
mov
movsl
mov
mov
add
adc
stos
sub
mov
sbb
notl
push
loopne
mov
outsl
inc
xor
lcall
jb
xchg
popf
out
lahf
jo
dec
cmp
jnp
mov
js
jle
outsl
pop
imulb
nop
imul
fs
mov
xor
popf
inc
mov
ret
jae
sbb
lock
adc
mov
adc
xchg
cltd
inc
push
mov
ret
repnz
jg
fwait
sub
fnstsw
enter
jle
dec
xchg
in
dec
adc
dec
shll
fdivrl
cmp
testl
and
mov
les
jmp
or
mov
mov
mov
lahf
rorb
dec
push
and
sub
mov
xchg
push
out
inc
daa
js
out
xchg
repnz
adc
inc
adc
adc
andb
out
je
in
jl
adc
jmp
je
xchg
xor
pop
xchg
shll
add
mov
jmp
pop
pop
jno
lret
iret
fwait
outsb
addb
pop
pop
push
jo
add
xor
mov
cmc
ja
lahf
fadd
jnp
push
cmp
cmp
pop
and
and
and
in
adc
lods
sbb
pop
xchg
dec
fdivrl
pop
push
or
cli
sahf
insl
push
ret
push
cmc
sub
push
sti
js
mov
lods
pusha
mov
mull
push
cmp
jb
out
shrb
aad
adc
gs
lret
push
jnp
movsl
or
cwtl
mov
xchg
les
add
shrb
jecxz
daa
jle
jb
lock
popf
sub
mov
orb
xor
ret
mov
mov
rcll
sti
pop
cmp
or
sub
mov
inc
pop
cmc
fcmovnb
out
xlat
in
push
adcb
shlb
shll
cmp
pusha
imul
jp
pop
push
data16
xor
mov
or
inc
push
mov
not
sti
shll
iret
xchg
cld
jns
aad
sti
and
popf
sti
mov
adc
fistpl
fwait
mov
sbb
mov
sbb
pop
mov
sti
sub
nop
mov
inc
lds
int3
popa
stos
adc
inc
pop
cmc
dec
pushf
sbb
cmp
cwtl
push
cmp
scas
aas
negl
mov
mov
scas
std
into
or
add
arpl
adc
xchg
jl
and
rolb
out
add
adc
pop
xor
or
push
fimull
mov
les
insl
push
mov
inc
stos
add
stc
mov
jne
push
xchg
mov
imul
mov
push
jae
out
repz
iret
js
in
pop
fsubl
ss
adc
stc
push
ss
mov
jne
inc
cmp
mov
ljmp
push
cmp
pop
xor
cmpl
and
int3
inc
jge
mov
jle
cmp
pop
test
ss
lahf
stos
push
mov
shlb
bound
mov
test
movsl
dec
ret
dec
loope
or
push
cwtl
jecxz
lock
std
insl
sahf
xlat
dec
arpl
adc
test
in
cmp
cmp
loopne
push
enter
movsl
pushf
pop
add
push
mov
xor
ja
fwait
sub
push
xchg
lcall
add
sub
xor
icebp
out
push
inc
pusha
les
rclb
popf
dec
jae
inc
inc
mov
jne
cwtl
inc
cmp
cli
movlps
test
pop
dec
sbb
lock
xchg
pusha
mov
iret
adc
jp
xchg
and
call
or
xchg
movsl
gs
jg
ss
dec
mov
mov
cmp
mov
adc
orl
mov
shll
fwait
lock
gs
cmp
add
and
adc
or
aaa
dec
cmp
dec
outsb
cltd
sbbl
jecxz
xor
movsb
lods
sbb
and
jns
inc
sbb
js
into
adc
pop
jmp
pop
push
lret
push
push
jmp
mov
js
dec
outsb
lock
fsts
mov
mov
sbb
addb
push
lds
fistps
or
in
fsts
fnstenv
jmp
insl
dec
repnz
dec
cwtl
sahf
hlt
dec
in
popa
jbe
mov
std
add
outsb
inc
rorb
cmp
and
test
jae
int
lahf
fiaddl
xor
lods
xchg
out
out
cwtl
stos
pushf
and
lods
xchg
fcmovnu
ss
and
iret
inc
outsl
in
sub
push
sub
sti
adc
aaa
push
lods
fbstp
adc
imul
int3
loop
clc
dec
lret
xor
fcompl
or
xchg
push
ja
push
xchg
inc
dec
sbb
jecxz
sub
out
ret
dec
or
mov
das
inc
sub
addr16
int3
je
hlt
in
imul
test
mov
addb
mov
fnsave
sbb
push
add
repnz
cmpl
xchg
addr16
xchg
inc
jo
jl
mov
lret
dec
dec
mov
xchg
cmp
adcl
pusha
push
and
jbe
iret
mov
push
jo
jns
mov
mov
sbb
pop
into
jp
aam
mov
or
and
sub
loop
cmpsb
pusha
rorl
xor
dec
jge
lods
inc
or
sbb
push
adc
inc
loop
fnstsw
mov
add
aaa
out
scas
push
jae
stc
ret
test
jb
imul
mov
sub
dec
xchg
ds
and
adc
out
and
out
push
xlat
sub
and
test
mov
inc
push
cmp
mov
loope
fldl2t
cmp
push
rcl
out
or
subl
jno
int
cltd
ficoml
dec
xor
enter
punpcklwd
into
push
pop
test
xor
jle
dec
xchg
xchg
or
loopne
scas
mov
sbb
and
insb
push
lods
fs
into
sbb
sti
hlt
fs
sub
pop
xchg
aaa
sub
pop
aas
lock
je
mov
or
sbb
inc
orl
roll
xor
mov
loopne
mov
jg
lret
add
loopne
nop
sub
adc
cmpsb
cli
jge
push
add
mov
fbld
aaa
push
xchg
sbb
mov
mov
pushw
xchg
adc
dec
scas
jns
into
and
enter
jmp
mov
ficoml
pop
incb
testl
adc
call
inc
jns
dec
fidivl
mov
cli
into
adcl
push
insb
icebp
stc
jo
xchg
sbb
xor
rol
push
cmp
push
inc
aaa
push
popa
ret
or
or
gs
lret
lret
mov
out
pusha
mov
int3
or
push
arpl
in
adc
mov
cmpsb
add
and
lcall
movsl
inc
int
jmp
adc
sub
mov
mov
cmp
into
dec
popf
sahf
fucom
mov
movsl
cli
hlt
xchg
add
sub
push
inc
mov
rclb
loope
dec
sub
inc
dec
xchg
inc
stos
or
jnp
fsts
test
dec
xor
mov
rorb
rcrb
xlat
mov
sbb
outsl
pop
imul
lea
adc
push
xchg
adc
repz
jns
pop
movsb
decb
scas
jne
inc
push
xchg
ret
ret
test
fisttpl
sub
jmp
push
add
mov
sarb
xchg
cli
jmp
loope
imul
push
mov
es
in
mov
jl
jne
aam
cmc
mov
divl
aad
rcr
xor
mov
xabort
push
ljmp
xor
outsb
outsb
xlat
add
mov
imul
loope
cmp
cwtl
data16
cwtl
mov
fwait
imul
imul
std
jb
xchg
cld
nop
lods
mov
jle
into
xor
scas
js
enter
jmp
sub
cmpsl
int
rcrb
cmpsl
out
mov
in
xor
mov
mov
dec
mov
notl
mov
les
ljmp
jge
jo
inc
xlat
hlt
pop
into
stos
xchg
inc
mov
sti
sbb
xor
imul
and
call
xor
pop
mov
sbb
adc
test
xchg
mov
iret
cltd
and
jno
ja
cwtl
aad
mov
xchg
nop
and
repz
sbb
pop
xlat
pop
mov
mov
pop
cmp
nop
repnz
push
or
aas
ret
dec
dec
sub
in
xor
dec
leave
and
mov
ss
add
xor
pop
lea
hlt
shrb
xor
and
aaa
bound
test
add
stos
cmpsl
test
faddl
sub
inc
lea
pop
bound
add
fidivrs
xor
movsb
fadds
xchg
jo
jnp
mov
sbb
iret
into
sbb
push
ja
cmp
scas
scas
stc
int
stc
lret
fisubs
lret
popa
fwait
aaa
fistps
lods
popf
sub
test
stc
jbe
mov
xor
mov
mov
jge
out
or
daa
push
insb
push
pop
clc
add
hlt
mov
jmp
xor
scas
fcom
push
add
cmpsl
pop
shrl
xchg
xchg
mov
sar
faddp
sbb
dec
lcall
inc
rolb
test
jb
push
fists
cmp
jg
lcall
mov
or
sub
cmp
jae
push
pop
add
orb
xor
aad
jl
xchg
scas
rol
mov
xor
push
push
cmp
mov
andb
scas
cmc
lcall
les
loopne
scas
xor
test
pop
loope
cmp
xorl
out
in
daa
faddl
lret
mov
jecxz
push
hlt
mov
mov
adc
dec
xchg
xchg
in
lock
ljmp
mov
out
cmp
jg
jecxz
cmpsl
sub
inc
shl
negb
shlb
dec
sub
mov
xor
stc
je
adc
adc
sti
rorl
lahf
hlt
add
clc
xchg
out
test
rcrb
popa
push
loop
daa
bound
das
xor
add
push
inc
aaa
pop
cmp
mov
repz
adc
stc
popa
nop
sbb
repz
addr16
sbb
scas
mov
xor
xor
push
mov
in
test
ja
test
imul
mov
jne
xchg
repz
mov
into
or
addb
loop
jno
icebp
add
addl
filds
rcrb
lret
gs
xor
aas
sbb
cs
xchg
push
stos
fdivrs
add
xchg
test
and
shl
iret
jle
push
loopne
sti
or
popa
cwtl
and
sub
clc
sahf
adc
int
fs
subb
andl
clc
subl
fcomp
shr
div
add
fsubrl
lock
jne
mov
xor
sbb
ret
sbb
stos
xchg
fisttpll
rol
popf
sub
mov
pop
ret
aaa
xchg
or
les
jo
push
std
jle
cwtl
ds
les
pop
lret
fcomi
aas
cmpsb
adcl
xchg
and
cmp
pop
mov
js
fbld
out
xchg
mov
shll
cmp
inc
sbb
jno
aaa
inc
repnz
jno
loop
je
xor
sbb
push
mov
add
adc
pop
lods
ds
sub
push
inc
add
loope
sbb
andb
ja
popa
test
mov
sub
in
fchs
sub
add
les
mov
inc
jae
mov
xchg
repz
push
cwtl
shrl
dec
sti
in
stc
outsb
cmc
stc
push
pop
daa
imul
outsl
xlat
push
cs
es
push
xchg
aaa
cld
cmp
jne
das
fiadds
adc
inc
outsl
sti
jae
mov
dec
adc
dec
mov
adc
fisttpl
negb
jp
aaa
iret
in
fldl2e
push
rorl
sub
lods
or
mov
loopne
mov
pop
faddl
inc
adc
or
les
push
daa
lods
xor
add
in
ss
les
adc
adc
jp
and
lea
loop
cli
iret
daa
icebp
mov
mov
ss
les
fsubrp
push
fsubr
mov
sbb
jg
ret
and
inc
mov
and
mov
jae
mov
jae
in
daa
sbb
jne
test
and
arpl
add
icebp
jbe
movl
fldcw
lea
ljmp
push
dec
outsb
jmp
sbb
jp
pop
fiadds
xchg
test
outsl
in
pop
adc
test
mov
movl
jns
inc
cmpsl
std
xchg
std
pop
into
lea
xchg
sti
and
pop
out
out
movsb
sbb
mov
jl
add
jle
mov
push
xor
dec
mov
push
or
push
cmp
xchg
adc
or
insl
jb
push
xlat
das
leave
in
stc
push
test
popf
es
lock
push
cltd
sarb
xchg
add
aad
sti
jnp
into
fsubrs
movsl
adc
push
lret
push
dec
push
mov
push
mov
push
or
sub
adc
xchg
scas
adc
sub
mov
les
movsl
mov
ret
pop
mov
or
mov
push
addl
sbb
mov
movsl
es
andl
pop
inc
jl
xchg
push
lock
cs
cwtl
fs
ret
xlat
insl
rcll
push
pop
inc
loop
mov
cmp
xchg
inc
aam
mov
xchg
mov
into
cmpsb
mov
loop
test
outsb
or
in
adc
or
sbb
stos
and
xor
scas
and
insb
adc
mov
xchg
mov
sbb
add
mov
add
or
add
adc
mov
dec
adc
rorb
mov
mov
push
subl
push
mov
and
mov
mov
cmp
cmp
loopne
loopne
addr16
inc
add
and
and
or
adc
xor
rorb
and
sub
xchg
sub
sbb
pusha
add
adc
call
fadds
add
mov
or
in
fwait
ja
mov
cwtl
jnp
lds
xchg
jg
cmp
popa
sub
fnstsw
lds
jno
jg
cs
xchg
and
dec
push
pop
stc
movsl
int
mov
jge
cmp
out
pushf
mov
mov
inc
push
dec
or
jp
cltd
add
sub
cmp
hlt
sub
sbb
jne
lcall
sub
push
das
push
add
push
mov
and
shlb
movsl
mov
push
es
jbe
mov
xchg
das
int3
lds
movsl
rorb
xchg
pop
mov
mov
xlat
or
inc
gs
mov
mov
and
popf
push
aas
xchg
pop
ljmp
mov
fldt
push
dec
outsl
gs
mov
into
cld
addr16
sub
and
push
jns
es
push
sbb
enter
jnp
mulb
idiv
into
mov
insl
sub
jge
cmp
testb
mov
in
adc
daa
push
outsb
mov
ss
mov
jmp
mov
jmp
adc
out
jge
mov
push
mov
mov
andl
lock
xchg
enter
dec
shlb
inc
setnp
jp
movsb
sub
jnp
in
fsubl
add
inc
sti
outsl
rcrl
dec
ret
mov
fcoml
imul
inc
or
mov
aam
movsl
cmp
sti
js
sub
pop
xchg
mov
jnp
aaa
in
cld
mov
clc
aad
shl
shl
sub
mov
call
enter
and
fdivrl
std
outsl
pop
cmpsl
aam
mov
mov
sbb
and
mov
xchg
cmc
mov
push
dec
lds
jmp
loopne
rcrb
cmp
jae
dec
inc
sub
pop
add
sarb
and
or
and
dec
xorl
leave
inc
imul
out
inc
dec
es
in
xchg
sub
dec
mov
cs
add
test
push
cs
data16
fidivs
hlt
enter
jmp
dec
pop
jmp
lds
fdivr
aas
pop
push
out
insb
scas
adc
sahf
mov
fwait
dec
or
xchg
inc
and
adc
jb
or
mov
pusha
and
mov
pop
inc
push
mov
in
popf
lea
aas
jbe
mov
xchg
aas
cmc
rclb
xor
sub
sbb
xor
popa
add
jbe
dec
jle
rcll
movsb
fstpt
add
js
mov
xor
test
mov
cmpsb
mov
jns
out
test
je
sub
pusha
jne
popa
das
fistl
pop
arpl
jne
lods
push
imul
lds
call
iret
pop
push
mov
mov
scas
xchg
mov
push
jg
std
sarl
and
outsl
es
mov
sbb
xchg
sti
incl
movsb
stos
bound
add
adcb
clc
push
test
jg
lahf
cmpsb
cmpsl
rorl
mov
stos
push
pop
add
mov
pop
mov
int3
xor
or
mov
out
rolb
pop
fisubl
das
scas
mov
adc
cltd
ret
jle
mov
push
mov
jecxz
xchg
out
add
lods
ja
outsl
or
sbb
cwtl
in
inc
je
bound
xchg
rclb
pop
dec
enter
in
mov
sub
in
or
pushl
insl
in
std
add
dec
inc
je
push
push
dec
push
push
das
and
xchg
notl
dec
adc
ss
xchg
xchg
xchg
neg
lret
cwtl
cmp
mov
jnp
jg
les
mov
adc
repz
add
adc
xor
sbb
mov
adc
push
jmp
cltd
dec
rcl
movsl
fsubrl
mov
push
add
or
jnp
xchg
xorb
lds
add
jae
arpl
out
imul
mov
dec
inc
mov
jnp
adc
fists
xchg
push
wrmsr
outsl
mov
dec
xchg
adc
cmp
aam
push
mov
add
imul
test
adc
fldt
ljmp
mov
sub
ficoms
movsb
ficoml
loope
out
rcrl
inc
fsts
mov
mov
push
xchg
mov
xchg
pusha
test
into
iret
insl
jne
in
pop
mov
popf
ljmp
fildl
fcmovbe
add
pop
xchg
leave
test
mov
xchg
outsb
adc
mov
mov
lds
add
ret
hlt
jecxz
or
mov
xchg
add
mov
insl
sub
or
mov
rorl
shl
xor
mov
or
lea
das
push
xchg
sbb
mov
xor
lock
pop
and
enter
adc
xchg
jbe
inc
inc
je
mov
and
out
out
jns
xchg
and
inc
popf
xlat
pusha
ljmp
daa
cmpsb
jecxz
push
adc
int3
jecxz
imull
or
fdivrl
xchg
repz
pushf
inc
cli
inc
enter
addr16
dec
xchg
pop
mov
mov
pop
dec
popa
mov
adc
in
sbb
mov
mov
lock
or
sub
out
mov
sub
cmp
and
pop
sub
in
fists
iret
mov
sbb
push
xchg
fistps
sub
lods
jecxz
test
push
out
shrb
mov
shll
mov
sub
mov
in
iret
mov
push
pop
sbb
fs
jmp
outsb
aam
int3
sub
dec
loope
aas
mov
cltd
hlt
call
mov
insl
xchg
hlt
cmp
fmuls
repnz
in
jp
jns
scas
dec
insl
push
outsb
jg
push
mov
iret
mov
pop
mov
pop
adc
or
pushf
loop
inc
sub
cmpsl
jge
stos
test
cli
fisubrs
mov
jmp
and
mov
shrb
xchg
cli
inc
loopne
jg
mov
mov
sub
sub
cmp
dec
insl
push
jmp
lods
jl
jecxz
lcall
popl
and
sbb
test
test
ss
loop
ds
outsb
adc
or
imul
fisttpl
mov
add
rorb
add
or
fwait
ret
push
jns
push
add
scas
ljmp
dec
scas
out
int3
jns
cmpsl
scas
loopne
inc
sub
push
imul
rorl
ljmp
leave
pop
ret
push
jns
cwtl
push
pushl
add
loop
jno
and
std
cmp
loope
inc
xorb
cmp
out
into
xor
popf
push
fs
popa
imul
mov
pushf
js
cmpl
lock
xor
mov
xchg
xchg
pop
push
inc
inc
out
mov
pop
clc
fimuls
xchg
mov
nop
sub
dec
les
cmpsb
push
jg
push
add
movsl
xchg
roll
and
mov
fisttpll
add
cli
jns
lret
aaa
jae
inc
mov
add
repnz
jne
ret
dec
std
lcall
shrl
aad
bound
ljmp
push
ds
mov
popf
lret
in
sbb
je
adc
stc
mov
mov
mov
outsb
loopne
fcoml
push
jmp
fisubrl
les
pushf
jl
jecxz
notl
nop
stc
pop
xchg
stos
xor
iret
and
xchg
cs
aad
fimuls
mov
inc
sbb
dec
stc
pop
daa
pop
or
enter
into
inc
daa
enter
xor
bound
jno
push
jge
pop
mov
notl
fcmovnu
shll
mov
jno
push
loop
int
lcall
sub
stos
ljmp
jg
dec
xchg
pop
push
mov
movsb
loope
add
loopne
rcrl
gs
push
pop
movsl
outsl
outsb
sub
lods
aas
push
inc
cmpsb
aas
adc
push
xor
mov
rcl
xchg
mov
gs
or
mov
orl
adc
rolw
mov
lahf
dec
inc
icebp
fwait
outsb
adc
shll
or
or
shrb
scas
pop
or
push
push
pop
arpl
sarl
lahf
addr16
pushf
loop
in
mov
xor
xchg
aam
jno
mov
xor
push
jg
xlat
jno
mov
int3
aas
mov
or
mov
mov
scas
xlat
and
dec
mov
stc
and
cmc
inc
mov
insb
add
add
jo
fstl
dec
rol
mov
pushf
imul
or
pop
inc
ret
ljmp
call
xchg
stos
in
adc
push
in
sbb
sub
pop
pusha
pushf
ljmp
repnz
xor
test
orl
ja
push
daa
es
lahf
inc
mov
xchg
movsl
pop
or
ds
popf
sub
cld
xchg
negl
mov
gs
and
mov
push
push
xor
add
out
push
dec
dec
dec
push
lcall
outsb
cli
jne
sbb
mov
inc
jae
rol
imul
xchg
in
xor
xor
fcom
jne
sub
inc
int
mov
add
sbb
mov
xchg
sbb
int3
das
and
hlt
imul
sbb
cmp
cmp
xchg
mov
dec
xor
popf
push
push
cli
mov
dec
aam
xor
cmp
pop
mov
pop
adc
jne
and
pop
dec
cld
pop
mov
push
into
mov
sbbb
arpl
xorl
mov
mov
push
jmp
xchg
adc
stc
rorl
rcrl
jno
mov
mov
je
cs
je
fidivrs
movl
mov
fistps
push
imul
shll
fninit
mov
cmp
cmp
fcmovb
pop
pop
addl
ljmp
loopne
test
imul
inc
hlt
pop
mov
xchg
andb
xor
mov
imul
in
inc
movnti
inc
inc
sub
stc
fisttpl
inc
rcl
adc
pop
push
stc
out
int3
test
mov
enter
xchg
pop
or
test
mov
rcl
jp
jbe
inc
shrb
xchg
xchg
inc
in
mov
jg,pt
mov
cli
sbb
or
sbb
lds
push
adc
dec
cmp
mov
jb
sub
clc
std
ljmp
xchg
sub
lods
jb
push
dec
jmp
pop
hlt
sub
sub
mov
jnp
dec
call
push
xchg
cli
ljmp
ret
inc
pop
mov
lea
sbb
sub
mov
add
add
sub
mov
aam
andb
sub
sub
dec
flds
xchg
iret
fcompl
pop
int3
insl
xor
xor
faddl
pop
push
loopne
inc
loopne
stos
sub
stc
repnz
adc
push
jp
or
nop
xchg
xchg
mov
and
enter
enter
inc
test
jo
mov
nop
and
insb
int3
mov
pop
xlat
sub
push
xchg
ficoms
leave
push
jns
out
add
and
push
and
push
jg
fptan
arpl
dec
rolb
xor
in
mov
dec
dec
jo
aam
outsb
jg
jbe
movsb
flds
xchg
insb
enter
stos
sbb
mov
cmp
inc
lods
std
mov
dec
jns
mov
stc
andb
enter
rolb
mov
inc
xchg
mov
and
insb
pop
xorl
xchg
loop
das
inc
faddp
push
inc
fdivrs
test
jle
clc
cmc
adc
movsl
aas
int3
lods
cs
mov
imul
mov
add
xchg
fisubl
sub
adc
adc
sub
stos
lods
or
mov
mov
adc
repz
outsb
fsubrs
roll
mov
mov
mov
stos
and
adc
mov
roll
xchg
test
fimull
or
and
adc
push
jne
stos
cmp
mov
ret
in
jne
cmpsl
jecxz
xor
mov
jae
mov
ror
andb
mov
xor
es
hlt
fcmovne
xchg
subl
sub
shrb
insb
mov
xor
cmpl
andb
cmc
lea
xor
fwait
out
jge
mov
leave
push
add
cld
jg
notl
cld
dec
pop
es
pop
dec
and
sbb
les
push
sbb
mov
int3
inc
fsts
jb
adc
pop
or
push
cmp
pop
cmp
dec
mov
movsl
xor
sbb
arpl
dec
ja
pop
jns
push
pop
sub
aaa
sbb
mov
outsb
jg
jl
scas
daa
lds
push
filds
stos
out
mov
mov
fucomp
sbb
movsb
mov
repz
sub
mov
arpl
nop
js
lds
in
insb
adc
sbb
ja
enter
sbb
iret
jg
mov
cmp
jle
jle
ds
add
cmp
out
dec
arpl
sbb
je
xor
arpl
les
in
jne
test
cmpsb
cli
hlt
xor
xor
lea
cmp
stos
cmp
add
out
and
loopne
xor
loop
fiaddl
outsl
outsl
pushl
rorb
cmp
scas
cld
movsb
mov
push
incb
cmpsl
mov
icebp
out
movl
cmp
xchg
inc
scas
mov
dec
sub
fcoml
dec
sti
aam
dec
inc
ja
jbe
adc
jmp
sub
dec
js
test
int
arpl
cli
jecxz
sub
jo
xor
sub
sahf
mov
mov
mov
popf
jnp
sbb
inc
xor
mov
fdivl
pushf
mov
imul
popf
push
leave
mov
iret
sbb
les
mov
inc
or
daa
lcall
push
mov
movsl
outsl
cmp
adc
sbb
shr
jns
test
jo
push
pop
pop
scas
loopne
insb
repnz
mov
sbb
sub
inc
daa
mov
jno
gs
fldenv
pop
xor
rcrl
scas
repnz
sub
loop
test
or
jmp
sub
fchs
pusha
out
cmp
jne
sub
mov
inc
rolb
pop
add
xchg
mov
cmpl
sti
insb
cmp
jne
pop
mov
push
dec
push
nop
mov
sbb
mov
dec
jp
adc
jle
pushf
cmp
insl
into
sbb
dec
lea
out
inc
adc
psubw
pop
mov
sarl
add
shr
icebp
inc
mov
push
push
cmp
mov
sbb
cli
bnd
push
mov
cmc
inc
dec
jae
dec
sahf
fstpt
sub
bound
push
roll
dec
jns
mov
cld
dec
stc
add
out
fisttpll
pop
fsubr
loope
mov
fnstenv
cmpsb
mov
mov
ret
jmp
jg
imul
pop
xor
aas
push
bound
and
mov
jge
aad
xchg
mov
addr16
popa
mov
inc
ret
cmp
push
and
aaa
sbb
mov
jnp
fwait
mov
test
lods
in
and
sbb
into
dec
xor
adc
stos
adc
roll
mov
pop
mov
inc
mov
mov
cli
in
inc
cmc
or
lret
push
shr
cmp
ret
or
and
or
inc
in
scas
enter
pop
mov
fdivr
pop
jns
sahf
mov
cmp
repnz
stos
mov
mov
inc
pop
push
add
or
mov
outsb
nop
xorb
mov
hlt
mov
pop
xor
shr
or
ds
test
and
mov
pop
in
movsb
mov
aaa
cmc
xchg
adc
sub
fldenv
xchg
loop
loopne
popa
mov
fucomi
repnz
lret
push
ret
mov
inc
cmp
cltd
fimuls
push
jmp
inc
lret
insl
push
out
jmp
sbb
sti
or
cmp
mov
xchg
repz
pop
or
sub
dec
stc
mov
sbb
mov
or
ret
aam
dec
xor
jns
scas
and
jp
mov
outsl
js
xchg
ss
cmc
leave
repz
cmpsb
mov
nop
mov
cmp
add
sbbb
sub
bound
and
cmc
lcall
decl
fidivrs
loop
lret
jbe
nop
inc
xor
pop
push
xchg
pop
test
xchg
xchg
neg
push
popa
movsb
xchg
push
addr16
loopne
out
xchg
divl
xlat
repnz
repnz
xchg
sub
dec
mov
stos
loope
fisubrs
cmpsb
dec
lock
or
mov
test
sbb
mov
lock
out
and
cs
cmp
cltd
loope
adc
ss
mov
shrl
es
lods
xor
or
pop
bound
out
frstor
call
fwait
sub
outsl
int3
loop
sbb
mov
dec
inc
int
je
mov
jno
mov
js
negl
imul
jp
or
dec
or
xor
loop
push
push
pop
lock
mov
bound
pop
xchg
and
pop
push
pop
add
inc
outsl
sbbb
mov
decl
dec
mov
pop
cwtl
mov
sub
lods
and
mov
data16
in
mov
sub
jnp
sub
in
lods
out
xor
imul
mov
subb
orl
add
sub
pop
add
call
sub
cwtl
or
pop
add
sub
add
adc
dec
add
adc
push
or
roll
add
cmp
pusha
scas
add
call
sbb
add
jo
and
lock
mov
xor
pop
add
pusha
adc
xor
add
inc
add
xor
nop
sbb
push
pusha
adc
xor
add
inc
add
xor
mov
subl
inc
sbb
mov
sti
arpl
dec
jno
jns
push
xchg
push
fucom
clc
jmp
mov
cltd
es
inc
cmpsl
out
mov
scas
lods
dec
insb
adc
and
xor
sbb
inc
or
movsb
les
jns
push
push
dec
inc
push
add
out
shlb
adc
xchg
xor
rcr
add
adcb
jo
push
sbb
dec
ficomps
arpl
pop
push
bound
mov
xchg
lds
mov
adc
hlt
push
in
js
xor
test
shl
rolb
bound
popl
push
push
inc
push
dec
sahf
push
cmp
bound
idivl
call
jne
outsl
cmp
hlt
lcall
sub
add
mov
xor
das
imul
scas
subb
std
pop
iret
pop
iret
push
sbb
pop
mov
fmuls
loopne
mov
pop
jl
adc
fidivl
in
dec
clc
jnp
inc
sahf
repz
and
jmp
bndldx
xor
sbb
mov
sub
das
xchg
lret
sbb
xor
sub
rcl
jns
rorb
cmpsb
xlat
jp
repz
mov
pop
sub
pushf
add
cltd
mov
mov
pop
inc
xor
clc
es
mov
insb
aad
inc
cmp
cmc
movsb
test
adc
sub
dec
or
xchg
in
mov
or
mov
adc
les
jno
jo
fdivrp
lahf
mov
iret
dec
mov
add
adc
pop
dec
add
cmc
aad
xchg
scas
mov
cld
out
in
xchg
dec
fiadds
into
xor
andb
imul
xchg
adc
jecxz
rol
cmp
pop
in
sbb
sub
or
adc
pop
dec
mov
bound
lcall
call
and
pop
cwtl
dec
add
popf
dec
cmp
push
fcmovbe
add
xchg
cmp
sahf
je
push
xchg
jbe
lahf
fs
pushf
xchg
xchg
mov
lods
mov
notb
mov
jp
aam
dec
push
dec
mov
in
dec
mov
mov
test
mov
xchg
mov
rorl
pushf
push
sbb
ljmp
push
dec
lock
aaa
or
rorl
shrb
ret
sbb
mov
jae
mov
xchg
dec
or
mov
inc
js
call
out
pop
dec
or
shll
repnz
or
xor
lea
dec
push
in
pushf
sarb
add
in
icebp
je
jae
mov
xchg
popa
xchg
pusha
push
mov
jnp
es
out
dec
xor
mov
popl
mov
jmp
gs
mov
add
push
ret
cmp
mov
int3
jecxz
cmp
mov
daa
test
xor
incl
mov
sub
push
sub
push
lock
cli
xchg
jno
xchg
mov
mov
inc
or
cmpsl
jnp
pop
rolb
mov
out
ss
iret
ds
popl
popf
mov
scas
pop
jp
out
daa
jmp
jb
loope
aaa
inc
adc
sbb
movsb
xlat
cltd
fstp
jg
pop
cmp
sahf
mov
aaa
xchg
cltd
cmp
pop
pop
mov
cmpl
int3
fisttpl
outsb
jge
shll
outsb
scas
push
adc
dec
icebp
ja
scas
faddl
stos
imul
cmp
xlat
inc
add
scas
fld
adc
jno
jp
pop
jge
test
gs
push
adc
mov
inc
xlat
test
mov
dec
xorb
je
popa
mov
ja
cmpsl
fs
pushf
rorb
enter
stc
rcl
cltd
das
mov
mov
cmp
bound
lock
scas
data16
pop
or
sbb
mov
jge
test
orl
scas
lret
pushf
idivl
shlb
ficomps
xchg
js
cmpsl
insb
xchg
cld
gs
or
xor
int3
sbb
sbb
int3
lahf
add
adc
rorl
or
dec
sbb
scas
dec
add
movsb
cmp
dec
xchg
jnp
jbe
mov
push
icebp
insl
push
scas
jnp
or
xor
push
mov
xchg
fidivl
movsl
cmp
lahf
sub
or
pop
mov
add
cmc
in
in
leave
lock
repnz
inc
outsl
in
dec
in
dec
popa
jnp
mov
jl
sbb
icebp
movsl
int
imul
jge
and
xchg
ret
shll
or
sahf
imulb
test
mov
ret
push
xchg
pusha
fistpll
add
jecxz
int
hlt
es
jae
jecxz
test
cli
xchg
scas
or
pop
or
fsubrs
sti
bound
pop
dec
and
sahf
push
xor
jnp
sbb
adc
xchg
mov
adc
jno
push
repnz
loop
add
mov
stc
push
add
int3
cmc
sahf
or
fwait
pushf
cli
mov
mov
push
fiadds
cld
lahf
adc
out
negb
cld
and
jl
sbb
les
test
push
xbegin
shll
push
cmp
jl
lds
pop
mov
es
jb
jp
jp
clc
sbb
pop
push
lods
dec
movsl
mov
push
push
in
xchg
add
push
clc
imul
mov
ret
lcall
icebp
and
pop
insb
sti
sar
movsb
pop
push
std
mov
mov
aas
loop
sbb
cltd
sbb
mov
xchg
add
jo
mov
bound
and
imul
loope
and
and
sar
and
pop
cmp
or
jg
mov
pushf
je
mov
mov
hlt
pop
mov
xchg
pop
lahf
jnp
and
jg
mov
sub
std
push
sub
and
mov
pop
add
pop
sub
addb
daa
xchg
xchg
jle
lea
outsb
pop
mov
sbb
fistpll
and
sub
movsl
or
push
jg
cmp
lcall
lcall
call
iret
add
mov
idiv
xchg
fdivr
repz
xchg
jl
daa
cs
fstpl
pop
les
mov
sbb
push
je
mov
insl
pusha
push
mov
icebp
cmp
out
pop
jae
icebp
pop
outsl
dec
jecxz
fwait
xorb
add
loope
movsl
mov
fs
or
push
jnp
decb
push
cmpsb
mov
dec
inc
sarb
mov
cmp
dec
cwtl
mov
insb
xchg
jge
dec
nop
std
sahf
pusha
icebp
fwait
imulb
out
nopl
pop
shl
cmp
mov
fdivrs
lret
js
sbb
out
data16
add
pop
gs
scas
jmp
std
in
leave
gs
hlt
scas
dec
cld
scas
lret
call
ss
seta
loop
cmp
int
xlat
mov
gs
xchg
mov
mov
push
cli
sbb
dec
adc
out
mov
mov
dec
jp
test
mov
mov
jecxz
and
hlt
adc
mov
call
add
sahf
cld
std
and
enter
xchg
jmp
cmc
int
fwait
lret
stos
out
xchg
and
cwtl
inc
add
xchg
aaa
pop
jbe
xchg
mov
cmpsl
pusha
mov
jnp
in
ja,pt
add
push
inc
faddp
dec
mov
iret
sbb
popf
std
mov
fisubl
inc
mov
pushf
or
sbb
jo
dec
or
ds
in
inc
xchg
int
loope
push
mov
inc
inc
mov
mov
cmp
adc
inc
sub
test
mov
mov
dec
fidivs
mov
mov
loopne
mov
push
mov
pop
mov
rorl
in
lret
add
sahf
sarl
fistps
mov
cld
fistpll
repnz
sub
push
pop
xchg
outsl
jecxz
xchg
cmp
fdivs
pop
sub
test
and
mov
fs
mov
mov
pop
andl
dec
xchg
mov
mov
stc
lock
lds
xor
cwtl
mov
icebp
jo
push
xchg
in
jmp
notb
pop
xchg
cs
xor
xchg
stos
push
loopne
das
jle
dec
jns
popa
lahf
mov
clc
push
in
mov
arpl
adc
out
pop
mov
in
mov
fs
shr
or
popw
xchg
mov
xchg
lret
inc
xchg
aam
std
and
fstpt
lock
mov
mov
and
leave
sub
call
lds
inc
cltd
out
cmc
push
lds
imul
test
shlb
divl
ljmp
lds
add
mov
cli
jbe
inc
lods
in
mov
inc
sarl
fdivrs
pop
testl
pop
jnp
cwtl
clc
in
inc
int3
shll
lea
pop
pop
or
cmpsl
dec
xlat
jno
cmp
jp
push
sub
push
inc
xchg
mov
xor
xchg
into
mov
jle
fwait
push
xchg
cld
xor
push
add
mov
dec
pop
pushf
les
lret
jecxz
jle
iret
sbb
inc
mov
dec
incb
jle
test
std
insb
negl
cltd
xor
sbb
in
adcl
push
xor
sti
jecxz
adc
cmc
shlb
mov
call
and
push
inc
jae
push
shl
dec
mov
ret
nop
iret
mov
sbb
xor
pop
lods
cs
jae
inc
mov
mov
js
cmp
push
and
pop
stc
push
sti
mov
das
xor
mov
fnstcw
cmc
push
stos
pop
sub
loopne
sbb
mov
mov
lods
cmp
or
xchg
mov
fnclex
lcall
adc
push
mov
loopne
out
lahf
divl
pop
adc
xchg
das
icebp
and
in
cli
fcoml
xchg
sahf
mov
adc
cmpsb
rcl
and
adc
mov
aad
dec
dec
adc
das
inc
bnd
fldt
dec
les
push
cmpsl
and
movsb
fdivp
cmp
jge
dec
fcom
inc
rorb
test
fsubp
mov
pop
test
cmpsb
sub
pop
cld
mov
adc
daa
cltd
inc
cmpsb
push
cltd
subl
sub
mov
inc
mov
les
jns
xchg
pop
cmp
aam
lret
add
cmp
enter
push
cmp
call
fiadds
aam
xchg
jp
hlt
jns
popa
ss
inc
xor
pminsw
mov
stos
mov
dec
mov
dec
test
lret
pop
cmpsl
mov
mov
xor
push
flds
mov
stos
test
and
sub
stc
outsl
xchg
pop
jmp
cli
mov
and
icebp
icebp
popf
cmp
pop
dec
outsl
add
scas
out
sub
dec
int3
sbb
adc
pop
add
mov
pop
movsb
lret
jl
push
inc
cmp
leave
cli
jbe
jp
pushf
cmc
sti
jp
lahf
aaa
and
pushf
test
fwait
cli
pushf
fdivrs
test
pop
xor
and
loop
in
push
fisubl
push
mov
adc
jo
cmp
ffree
out
mov
jns
aam
lea
test
ja
xchg
inc
daa
mov
fstp
test
cmpl
mov
sbbl
mov
cli
add
mov
scas
addr16
mov
aaa
outsl
fstl
xor
and
or
or
sahf
lods
sub
xchg
shlb
push
pusha
daa
xlat
scas
bound
add
inc
adc
arpl
sti
pop
subl
mov
mov
bound
outsl
mov
add
in
jl
xor
repnz
mov
stc
int3
push
xlat
jne
out
in
out
lret
mov
sbb
lods
jge
ds
push
shl
pop
dec
xlat
mov
xchg
xchg
data16
jge
mov
or
cltd
hlt
pop
je
push
jl
jle
lock
pop
jo
cmp
cmp
jnp
inc
das
push
lahf
cs
add
add
lds
cs
fisttpl
lret
aas
icebp
add
loop
pushl
fstl
subb
fcomip
out
cmpsb
js
sbb
jno
jle
mov
pop
push
xlat
je
insb
pop
rorl
xchg
xchg
je
push
dec
js
inc
orl
pop
and
push
inc
rcr
popa
push
hlt
movsl
enter
sub
mov
and
push
mov
rolb
lret
dec
mov
ret
jmp
ljmp
loop
pop
push
out
ret
inc
int3
int3
xor
and
fstpt
pop
sbb
aaa
jp
lods
test
jb
in
and
jbe
xchg
outsl
xor
jge
push
xor
movsl
dec
add
fcmovnb
dec
inc
cwtl
rcr
test
call
lods
aam
cmpsb
or
fidivs
mov
loope
jne
pop
test
lret
jne
sbb
dec
sahf
add
push
cmp
inc
aaa
clc
andl
ja
sub
xchg
std
mov
fistpll
test
mov
lods
fst
fldt
sbb
ja
das
mov
lods
aam
add
call
shll
pop
and
mov
aaa
xor
clc
mov
mov
mov
dec
xor
sub
jle
stos
fsubr
push
cmc
arpl
loopne
out
or
push
jno
pop
inc
mov
or
iret
sub
scas
and
sbb
fbld
cmp
xor
call
bound
and
add
scas
mov
repz
mov
daa
in
and
int3
mov
repz
lock
arpl
push
pop
rcr
inc
gs
int3
mov
sub
pop
loopne
pop
mov
cli
xchg
cli
mov
icebp
daa
and
sub
bound
jle
cli
mov
and
mov
ja
bound
jecxz
xchg
popa
outsl
loopne
or
out
hlt
adc
adc
ret
std
pop
pop
xchg
ret
push
outsb
movsl
iret
ds
cmp
popf
in
cmp
lahf
inc
xchg
inc
cmpsb
dec
aas
adc
sub
jmp
in
in
xchg
call
jmp
sbb
jp
test
or
and
adc
shr
pop
sbb
xchg
xchg
mov
jmp
jae
data16
stc
dec
sub
test
xor
push
dec
xchg
loope
xchg
mov
out
fbld
shrb
dec
movsb
push
sbb
sbb
lea
aam
dec
lret
repz
enter
fadds
imul
test
fcomip
fsts
adc
push
das
je
adc
push
test
ds
in
fadds
lock
notb
insl
sbb
and
pop
or
and
or
aaa
js
dec
pop
out
arpl
adc
jecxz
imul
out
lea
rorb
jmp
push
jbe
fcoms
adcb
daa
inc
popf
lcall
aaa
add
mov
subb
sarb
jne
cmp
int
out
sub
and
rorb
repnz
xor
lcall
adc
sti
sbb
inc
mov
and
inc
jmp
popa
add
mulb
inc
adc
arpl
nop
mov
push
lods
movsl
sbb
lds
jb
lock
push
sti
into
adc
das
sbb
sbb
xor
ss
enter
insb
or
jl
mov
cmpsb
fdiv
add
mov
mov
pop
dec
mov
fwait
call
bound
mov
dec
sub
cli
leave
mov
sub
dec
rcrl
flds
imul
pop
cld
dec
fidivl
push
ljmp
push
jecxz
shll
inc
cmc
pop
adc
pop
inc
mov
repz
rcrb
nop
cs
fnstenv
push
pop
dec
cs
fdivrp
sbb
inc
pop
dec
sub
dec
jg
xlat
jg
xchg
mov
arpl
push
jb
divl
stos
stc
aaa
insl
pushf
loope
imull
je
std
fs
jg
mov
dec
cmp
xchg
mov
mov
mov
sar
and
mov
cmp
test
insl
xor
mov
pop
xchg
or
fwait
ljmp
lods
inc
loopne
push
mov
mov
imul
jmp
in
test
mov
loope
js
xchg
pop
lods
xchg
xchg
xchg
ficoml
out
pop
outsl
enter
jnp
push
stc
sbb
mov
js
pusha
or
lret
sub
sbb
mov
xchg
sub
outsb
jmp
fs
sbb
push
mov
lret
lret
cmp
repz
arpl
xchg
dec
mov
lods
xchg
test
rcrl
std
pop
call
add
bound
jae
mov
and
lahf
push
dec
xchg
gs
mov
rolb
insb
enter
flds
inc
add
test
test
jno
mov
mov
inc
test
xor
repnz
lods
mov
call
pop
cmp
inc
xor
popf
aam
mov
or
bound
repz
nop
cmp
int
xchg
mov
inc
xchg
call
das
stos
enter
jnp
mov
das
pop
std
add
xchg
xchg
out
pop
pop
and
add
jmp
ja
mov
push
punpcklwd
push
xchg
js
push
loop
lcall
sub
and
cwtl
mov
adc
fs
jb
or
cmp
cltd
iret
cld
or
pushf
pop
fimuls
mov
push
mov
pop
mov
add
sub
push
iret
movsl
test
out
dec
inc
aaa
pop
push
mov
pop
hlt
adc
mov
sbb
into
mov
fs
jb
jae
hlt
imul
mul
mov
xchg
jne
jl
mov
ja
mov
aad
jg
stos
push
xchg
xchg
cltd
mov
outsl
push
inc
mov
stc
stos
mov
pop
or
sbb
in
or
pop
jg
popa
push
sub
jns
adc
insb
push
in
lods
test
dec
dec
es
push
test
out
cs
shlb
stc
inc
lea
ja
int3
in
xchg
push
xchg
xchg
data16
and
loop
das
out
mov
xchg
hlt
cmpsl
movsb
lret
pop
dec
aaa
adc
xchg
mov
mov
ret
scas
mov
sub
inc
lea
rcr
mov
int3
jnp
loopne
dec
jl
pop
or
int
cmp
pushf
or
cmc
rcr
insl
sbb
adc
jmp
out
fcoms
dec
dec
scas
mov
cmpsl
cwtl
adc
rclb
add
iret
rcr
pop
pop
stos
inc
iret
js
dec
dec
sbb
push
mov
xor
pop
mov
mov
pop
push
jno
or
jmp
fisttps
mov
call
out
rcr
mov
and
sub
popa
mov
sbb
mov
dec
int3
ss
xchg
out
pop
mov
cmp
ret
leave
cmp
mov
xor
outsb
inc
push
outsl
aas
cmp
cmp
jmp
out
mov
loope
stc
fidivs
pop
adc
aam
mov
stc
xor
mov
jnp
add
push
aas
xor
cmp
add
dec
into
xor
fcmovnu
inc
adc
fsub
das
jbe
jl
pushf
cld
pushf
adc
and
sub
movsb
dec
shl
dec
test
sub
pop
mov
xchg
arpl
or
dec
ljmp
mov
cmp
dec
jle
lsl
fwait
push
dec
push
push
in
adc
adc
mov
sbb
xchg
pusha
sbb
into
outsb
mulb
inc
insb
or
push
jb
pop
push
in
arpl
sti
test
xor
insl
adc
jge
adc
addr16
lret
clc
dec
cmp
pop
fsts
aaa
and
pop
jle
xchg
rcrb
jle
mov
pop
inc
inc
ljmp
notl
add
dec
imul
cmp
lahf
mov
leave
shll
dec
dec
sub
add
or
pusha
lds
jge
add
adc
xchg
js
dec
sarl
pop
cmp
mov
leave
pop
cmp
shrd
sbb
in
fcmovu
pop
and
push
and
js
mov
aam
repnz
or
mov
cmp
flds
jns
jb
rolb
adc
and
sbb
sbb
xor
out
and
cmpsl
icebp
roll
sbb
frstor
pop
inc
mov
cld
dec
mov
inc
add
insb
fwait
into
sub
int3
add
ja
negl
dec
push
out
push
mov
dec
push
insl
xchg
jle
dec
push
push
mov
adc
fs
daa
jg
mov
lock
cmp
popf
std
and
repnz
loope
jns
xchg
ja
or
ss
xchg
jno
mov
nop
je
data16
out
cmpsb
mov
pop
cld
pop
out
lods
cmpsb
loop
jmp
jmp
out
mov
ret
push
scas
imul
mov
pushf
scas
mov
mov
clc
cmp
adc
inc
pop
out
pop
inc
cmp
in
inc
out
xchg
mov
shrl
cmpsb
push
bndstx
aaa
gs
cmpsl
popa
or
dec
rolb
sub
cwtl
cld
outsb
sbb
dec
jg
into
call
sub
repz
popa
xchg
sub
sub
scas
repz
jnp
mov
pusha
fs
sbb
test
adc
mov
and
cli
xor
or
mov
xor
fimull
into
hlt
fldenv
jg
dec
pop
in
mov
xchg
je
popa
dec
add
mov
pusha
adcb
adc
xlat
ljmp
pop
outsl
or
jno
mov
sar
leave
jp
sub
fcmovu
jne
inc
mov
adc
sahf
inc
mov
push
movsb
out
sbbb
lret
lods
popa
aam
mov
jge
popf
jecxz
xor
pop
push
jno
jae
lret
out
imul
sbb
mov
jg
push
mov
and
in
imulb
inc
mov
movsb
stos
push
inc
enter
stc
push
aaa
int3
sbb
decb
xchg
mov
sbb
push
sbb
popl
test
lock
push
enter
adc
lds
xchg
cmpsl
cmp
jg
pop
xchg
dec
cmc
mov
push
mov
sahf
fnstsw
daa
jecxz
insl
adc
and
das
cmpsb
xchg
jge
mov
cs
js
icebp
or
dec
add
test
sahf
in
and
popl
repnz
mov
andb
adc
cmp
mov
adc
mov
ja
xor
mov
pusha
sub
push
hlt
mov
mov
xlat
sbb
mov
fwait
and
daa
push
cli
ja
sbb
jns
cwtl
mov
fisttpll
mov
inc
jnp
push
xchg
mov
push
and
jecxz
adc
xchg
in
popf
popa
es
and
pop
stc
repz
jbe
jae
lock
jne
stos
push
add
lahf
mov
and
xor
iret
sbb
data16
pop
jle
or
je
bound
jno
and
fdivl
icebp
add
iret
lahf
aaa
mov
push
and
ja
insb
rclb
mov
jp
mov
or
lods
dec
xlat
pop
je
xor
mov
stos
shlb
lcall
jo
fnstcw
out
in
int
loope
lahf
imul
jo
xor
and
cmpb
testl
cmpsl
je
mov
hlt
sahf
std
sub
push
popf
hlt
cltd
pushf
or
aad
out
in
or
dec
iret
inc
or
imul
mov
dec
jmp
cmc
repz
decl
jno
repnz
sbb
inc
xchg
mov
fcmovne
inc
adc
jecxz
sar
add
fisttpll
cmp
mov
outsl
lret
adc
adc
sub
pop
imul
or
out
subb
lods
sarb
mov
aas
push
xchg
cwtl
jl
xchg
rol
test
mov
sbb
mov
push
push
pop
dec
jg
arpl
sahf
push
cmp
mov
jg
outsb
xchg
sbb
xchg
pop
inc
popf
or
out
inc
icebp
out
xchg
daa
mov
inc
rol
jb
push
push
xchg
sbb
xchg
jns
movsb
test
imul
jae
aas
xchg
and
push
inc
cmp
or
daa
aad
sbb
mov
add
outsl
in
sbb
cwtl
andl
aam
ds
cmpsl
jo
dec
xchg
xor
xchg
adc
jne
inc
add
pop
fnsave
gs
pop
push
stos
sahf
sbb
mov
jl
arpl
pop
dec
lret
clc
mov
lock
imul
roll
cld
inc
mov
push
push
xchg
mov
mov
xchg
xchg
mov
insl
and
data16
outsb
hlt
pop
in
sub
fnsave
pushf
sbb
adc
std
mov
jmp
ljmp
inc
lds
add
mov
int3
cmpsb
or
leave
out
mov
mov
sarl
push
mov
pop
xor
hlt
in
popa
test
inc
mov
hlt
mov
into
xchg
jle
push
sahf
pop
sub
imul
and
and
cwtl
adc
mov
push
mov
gs
imul
dec
cmp
mov
or
mov
xor
je
adc
out
sti
push
xchg
out
xchg
mov
lods
cmpsb
mov
in
cmp
xchg
lcallw
outsb
dec
std
fnstenv
mov
xor
cmpsb
add
in
and
jmp
mov
jns
inc
pop
jno
hlt
inc
mov
mov
xchg
pop
dec
cmpsb
xchg
mov
lods
nop
and
imul
aas
push
and
faddl
adc
jns
mov
pop
mov
in
mov
test
or
inc
cli
dec
push
push
test
sub
sbb
aam
enter
inc
inc
shlb
outsb
lret
xchg
rep
shrb
insb
mov
jbe
jmp
movsl
mov
mov
cld
out
mov
mov
je
mov
xchg
imul
testb
inc
je
add
es
sub
scas
xchg
sarb
push
dec
xchg
jge
sub
mov
or
cs
int3
cmp
pop
sahf
push
iret
dec
ds
mov
xor
loope
mov
jmp
jne
or
repz
or
nop
arpl
out
xchg
dec
jno
add
push
push
sbb
and
sti
mov
pushf
les
xor
in
push
into
mov
imul
xchg
dec
cli
pop
mov
aaa
xor
cltd
cmp
fidivrl
jbe
loop
xor
xchg
xchg
sbb
fcomp
adc
mov
lods
pop
mov
je
sub
in
push
rcl
fisubrl
inc
cmp
imul
and
jle
jns
mov
pusha
and
or
mov
imul
add
and
xor
push
subb
pop
std
cltd
dec
ljmp
xchg
push
pop
push
xor
loop
pusha
adc
jo
outsb
xor
sbb
and
jae
or
ss
jne
aas
fnstcw
and
jp
push
sbb
loope
fnsave
ljmp
sbb
pushf
or
sub
dec
jp
jnp
pop
xchg
inc
loop
cmc
scas
mov
in
xchg
lock
lea
cmp
fldt
pushf
cld
or
shlb
push
push
lods
push
xchg
rorb
out
popf
jns
cmp
pushw
in
jg
leave
fcmovnb
movsl
aaa
mov
nop
rcr
repz
repnz
mov
scas
xlat
push
sub
aas
inc
shlb
outsl
pop
mov
inc
data16
ret
lds
xchg
or
in
or
scas
stos
clc
mov
in
jno
jp
popa
lock
ss
icebp
pop
cmp
jge
xorl
xor
imul
add
test
dec
xchg
scas
adcl
test
in
mov
je
data16
adc
cltd
std
mov
jecxz
cli
iret
in
sbb
jnp
clc
iret
out
pop
jmp
sti
fstpt
scas
addr16
xchg
jg
iret
ret
xor
jge
xchg
sub
testl
xor
sub
sub
dec
test
sbb
adc
jno
inc
aam
or
test
fcmove
pop
pop
xchg
outsb
mov
fsub
mov
pop
loop
pop
mov
enter
es
dec
test
xlat
sub
mov
mov
shrl
lcall
mov
jle
mov
xlat
pop
or
repz
outsl
push
scas
cs
imul
es
inc
add
pop
aad
outsb
movsl
shll
leave
aaa
sub
push
or
mov
add
mov
lcall
incl
data16
add
shll
leave
in
mov
push
stc
dec
shrb
call
test
inc
jbe
mov
fwait
inc
adc
fwait
xor
loop
pusha
sub
mov
out
fistpl
stos
dec
mov
and
sbb
push
mov
xchg
repnz
cmp
ds
cld
xor
mov
or
in
lahf
out
lahf
sub
cli
imul
cmp
or
push
inc
minps
xor
imul
adc
and
into
sti
mov
cwtl
or
sbb
dec
repz
push
test
int
and
sbb
adc
xchg
mov
sahf
ret
mov
jge
push
pop
pop
sub
shrb
xor
and
push
sub
pushf
cmp
inc
sbb
sbb
arpl
cmpl
dec
xor
addr16
test
test
or
mov
mov
popa
dec
xor
neg
aas
push
push
pusha
scas
adc
sbb
jg
or
xchg
shl
cld
adc
or
jle
aas
jg
push
seta
jmp
stc
loope
arpl
pushl
jne
fwait
cli
insl
in
mov
add
fsin
sti
lcall
cmp
outsb
mov
xchg
fistpl
imul
imul
jae
xchg
js
jge
into
add
es
pusha
test
xor
add
mov
cmc
shll
xchg
xchg
jbe
inc
push
sti
lock
pop
or
int
cmp
jl
inc
sbb
mov
aam
insl
scas
mov
sub
jo
ret
xor
inc
js
enter
cmc
into
mov
pop
xchg
xor
imul
pop
das
add
ljmp
sbb
mov
test
rol
pop
pop
or
sub
push
mov
cmp
push
sub
inc
mov
cwtl
leave
add
pop
mov
lds
adc
scas
push
rol
ret
sub
je
call
jge
sbb
adc
mov
ss
mov
mov
aaa
mov
popa
in
cmp
mov
jnp
popf
cwtl
xor
cltd
add
mov
push
std
outsl
lahf
pop
movsb
inc
mov
push
je
mov
out
mov
sbb
mov
or
sbb
cmpsl
test
jmp
xchg
add
mov
xor
inc
sbb
mov
add
lds
cli
xor
scas
subb
mov
jbe
or
in
clc
sub
xchg
and
push
scas
mov
jge
xor
mov
loope
and
cmpsb
add
adc
out
push
push
cltd
stos
repz
call
ds
imul
add
movsl
stos
mov
stos
insl
xor
push
loope
mov
push
int3
cmp
or
cmp
arpl
in
and
ja
mov
ss
icebp
xchg
push
jae
xchg
js
cmc
fs
push
mov
jne
addr16
jecxz
push
pop
xor
push
cwtl
cs
scas
and
test
xor
pusha
fldcw
sub
xor
inc
mov
sbb
popa
js
insl
mov
cmp
adc
add
mov
mov
mov
xchg
loopne
sarb
stos
fadds
mov
mov
adc
add
push
pop
push
push
in
in
sub
das
cmp
xchg
adc
pushf
test
test
or
pop
call
mov
lock
jl
cmp
jno
stos
sub
jbe
loop
mov
jge
sbb
scas
sbb
aad
push
dec
mov
push
xchg
mov
inc
inc
popf
pop
cli
int
je
dec
gs
stos
inc
xchg
sbb
xchg
jbe
movsl
and
test
lds
mov
pop
pop
sbb
repz
aad
sbb
add
aam
test
adc
push
arpl
lods
cmpb
pop
fsubl
out
aad
mov
rorb
mov
xlat
mov
mov
out
jmp
pop
std
adc
leave
sbb
xchg
jb
movsw
leave
xchg
sbb
leave
rcr
fldenv
cmp
or
imulb
xchg
pop
scas
icebp
dec
leave
imul
sbb
pop
pop
cmp
mov
push
rcl
pop
mov
test
lock
or
mov
fwait
je
push
ljmp
dec
jns
cwtl
mov
push
sbb
bnd
pop
lea
inc
jp
mov
xor
and
mov
stc
mov
mov
lahf
stc
sbb
das
stos
add
mov
subb
sbb
sub
xchg
push
testb
cmp
xchg
gs
jo
lcall
les
mov
sub
das
aaa
ret
lds
sub
mulb
mov
sub
out
and
lods
xchg
repnz
mov
add
rcl
loop
jge
sub
ss
testl
cmp
addl
lea
push
xor
icebp
mov
outsb
adc
cs
cld
dec
xchg
pop
mov
rorb
cmc
jbe
cmp
into
stos
lods
push
das
xchg
pmulhw
das
pop
scas
aam
xchg
stos
cmp
adc
into
mov
jmp
and
mov
inc
mov
das
lret
pop
mov
pop
push
dec
or
mov
xchg
je
jmp
mov
test
jno
push
aam
jns
dec
inc
aam
aad
cmp
insl
mov
jmp
in
dec
hlt
mov
shll
mov
xchg
inc
sti
mov
inc
pop
add
imul
shlb
mov
sub
ss
orb
cld
jne
out
ret
sub
bound
aad
cli
jge
notl
std
jo
inc
outsb
loopne
sbb
out
mov
fs
add
add
mov
push
sub
mov
pop
sarb
es
nop
dec
dec
push
mov
xchg
movsl
insl
adc
push
inc
mov
cmpsl
jbe
and
stos
movsb
daa
xor
cmp
jecxz
bound
jmp
inc
or
popa
push
lret
and
rolb
sarb
dec
subl
inc
lods
frstor
movsl
mov
divl
push
mov
xchg
lods
cmp
test
adc
xor
cmp
repnz
out
xchg
pop
xchg
stos
repz
js
jle
mov
pushf
scas
xchg
imul
cmp
clc
add
sbb
push
test
pop
or
lock
movsl
jmp
mov
pop
cli
test
clc
mov
stos
pop
shrl
pop
mov
clc
jecxz
clc
xor
int3
mov
shl
push
shll
in
jg
call
mov
test
fists
arpl
and
imul
sub
clc
adc
sbb
jns
push
adc
in
repz
or
or
cmpb
fdivrs
dec
shlb
jp
ret
pop
fst
push
movsb
out
in
inc
lret
stc
xchg
std
out
dec
insl
ret
xchg
dec
mov
into
push
fisttpl
leave
stc
xchg
push
clc
idivl
loop
add
pop
test
jmp
repz
xchg
lahf
and
pushf
int3
adc
aad
and
mov
sbb
jle
xlat
ss
pop
sub
dec
mov
jno
leave
jae
xor
push
xchg
pop
mov
les
xor
dec
pushf
lods
idivl
int
popf
lret
sbb
out
push
sbbl
push
fsubp
push
mov
in
shlb
bound
fwait
cmpsl
sbb
pop
sbb
sysret
data16
ja
arpl
adc
fbstp
push
cli
mov
imul
fdivrs
dec
cmp
outsl
fsubs
mov
dec
test
or
stos
in
rclb
insb
mov
xchg
cli
nop
call
movsl
sbb
mov
das
mov
shlb
cmpsb
mov
sbb
sbb
aam
jnp
fisubs
sbb
ret
cmp
mov
pop
cmpb
je
cmp
xchg
ficoml
jg
sub
pop
les
cs
or
testl
lods
jnp
jmp
sub
andb
push
lea
rclb
ficoml
js
cmp
in
mov
movsl
inc
inc
push
pop
lods
xchg
jle
pop
jecxz
push
sarl
ljmp
testl
stc
aaa
jecxz
push
scas
sbb
rcr
inc
lcall
pop
sub
test
fwait
out
out
into
and
mov
repnz
push
jp
leave
and
aaa
push
push
repnz
test
pop
shlb
inc
jecxz
push
mov
mov
test
or
and
inc
push
fsubl
pop
test
dec
cmp
mov
fisttpl
jp
xchg
xor
xchg
insb
fistps
push
add
into
in
sarb
cmp
push
xchg
mov
sti
xchg
call
xlat
repz
lret
call
adc
testl
in
pop
insl
dec
push
and
dec
loop
call
mov
cltd
nop
ja
mov
movsb
and
mov
xor
loopne
int3
addr16
xor
sbb
cmp
cwtl
fsubl
lea
leave
xchg
mov
cld
fsubrs
in
inc
in
cmp
mov
in
mov
cmpsl
iret
sarl
mov
dec
sbb
push
icebp
sahf
popf
cmpsb
push
ret
ror
in
xor
in
or
cltd
stos
xlat
or
xchg
mov
dec
cmp
ss
int
pop
xorl
jge
daa
or
sbb
dec
lahf
aaa
jg
jmp
ret
push
int
fnstcw
jg
cmp
divb
mov
adc
in
xchg
xor
jnp
fldt
dec
cltd
rcr
dec
sub
iret
inc
outsl
lcall
roll
inc
enter
negb
adc
jmp
cmc
cmc
fiaddl
and
jg
pusha
mov
sbb
mov
mov
clc
mov
lret
cltd
jns
xlat
aas
loopne
ret
std
mov
cmp
subl
inc
jmp
shll
push
dec
push
out
repz
loopne
js
inc
loope
aad
push
and
movsl
sub
push
or
test
das
das
push
pop
inc
fcom
ljmp
xchg
inc
add
push
lcall
mov
inc
pop
in
sti
dec
loopne
adcl
sarl
pop
cmpsl
sub
xchg
pop
inc
ds
jbe
call
clc
mov
dec
cs
insb
in
mov
add
or
cs
adc
stos
xor
int
dec
push
jge
xor
in
sahf
imul
cld
cmc
mov
lods
xor
mov
fwait
jno
push
add
push
lea
fdivs
push
pop
sti
xchg
bound
imul
and
clc
and
adc
and
sarl
sub
lret
jne
adc
sub
int
orl
mov
mov
loope
pop
sbb
dec
xchg
jne
cli
sub
inc
and
jp
cmp
xchg
test
imul
push
jbe
fstl
adc
dec
dec
in
push
fsubrs
outsb
pop
jmp
fcmovb
outsl
mov
sti
aad
cmp
sbb
xchg
test
mov
int3
add
in
dec
scas
adc
subl
adc
testb
adc
pushf
pop
or
leave
or
or
push
fsub
or
mov
mov
xchg
lret
mov
mov
mov
ja
sbb
xor
es
jl
cmp
inc
fnsave
jae
mov
icebp
jl
stos
pop
ds
jns
inc
xor
pop
mov
jae
pop
in
mov
xlat
lds
xchg
jo
data16
jg
push
cmp
rcrl
test
gs
jo
stos
clc
cmp
inc
out
cs
mov
hlt
dec
lahf
cmc
and
pop
inc
jg
fcmovnb
sbb
xchg
mov
loopne
lahf
push
xor
xlat
jb
push
fsubrl
pop
adc
gs
lahf
dec
jae
lret
adc
or
lcall
xchg
ret
lds
daa
push
test
jecxz
bound
lret
mov
jle
or
cwtl
add
orb
jo
sub
bound
loop
add
adc
jle
mov
pop
aam
ret
mov
ds
jbe
xchg
imulb
cmp
popl
pusha
jae
fisttpll
icebp
aas
cmp
inc
imul
notl
cmpsb
aad
dec
cmp
enter
jne
pop
in
xchg
push
insb
addr16
sbb
pusha
subb
in
mov
idivl
insl
lds
xchg
scas
idivl
stc
pusha
arpl
aas
mov
lret
aad
xchg
lods
lods
fisubs
mov
or
lret
fst
push
mov
cmpsl
in
sbb
ficomps
enter
sub
pop
mov
or
pop
mov
sbb
push
xchg
repz
in
mov
mov
dec
arpl
xchg
dec
mov
mov
adc
mov
leave
or
mov
xor
xchg
pop
clc
ret
or
sub
xor
repz
sti
mov
mov
arpl
jbe
dec
icebp
nop
iret
inc
pop
xor
jmp
fistpl
pop
adcl
jno
dec
push
popa
cltd
mov
cwtl
into
inc
lahf
icebp
in
sub
cmp
xor
and
js,pn
das
das
sbb
xchg
inc
pusha
or
sub
fiadds
pop
test
cmp
pop
xorl
lahf
xchg
push
adc
addr16
lea
pusha
inc
cli
int
xor
inc
cmp
lods
enter
test
mov
jnp
dec
aam
push
mov
sbbb
mov
sub
fdivrs
sub
sarb
cli
mov
sbb
out
push
sub
sub
sbb
sahf
ret
je
mov
inc
fists
mov
sbb
rcrl
out
sub
cli
arpl
push
fstl
adcl
dec
xchg
mov
jecxz
mov
jmp
or
imul
inc
ja
cmp
jmp
sahf
mov
jecxz
pop
mov
or
mov
pop
pop
cmpsl
xlat
lock
dec
pop
and
mov
mov
and
dec
aad
inc
push
fs
mov
pop
lea
test
in
xor
sub
pusha
dec
sub
fmul
pusha
jecxz
mov
hlt
pop
les
aad
test
mov
jmp
movsb
cmp
mov
mov
scas
sbb
push
jp
data16
out
mov
add
mov
out
loop
adc
mov
and
jbe
mov
cmpsb
mov
cld
stos
mov
dec
jno
mov
rcrl
or
add
imul
sub
js
push
loop
pop
jmp
ljmp
push
mov
and
jg
add
in
adc
sbb
stc
inc
ds
inc
mov
cmc
or
jnp
add
jecxz
out
xor
negl
push
xchg
rolb
mov
ss
or
fcmovu
lcall
inc
cli
ljmp
xchg
pop
push
dec
cwtl
jge
jl
sub
mov
ficomps
shrb
adc
jne
shrb
sub
sub
fistps
faddl
mov
push
repnz
mov
sub
fwait
stc
sub
outsl
data16
fistps
push
mov
mov
fwait
lahf
pop
and
xor
jmp
dec
cmp
ret
sbb
cmpsl
or
in
rol
xchg
imul
fsubs
pop
push
or
jp
pop
and
repz
mov
cltd
or
mov
inc
filds
ja
das
mov
cmpsb
pusha
hlt
in
jge
scas
cmc
dec
push
hlt
pop
and
push
push
ja
scas
push
insb
jae
test
int3
xor
mov
ficomps
push
in
mov
xchg
dec
xchg
imul
lods
call
dec
xor
ficomps
fcmovnb
xor
inc
add
shl
andb
dec
pop
sbb
add
and
sti
sbb
and
inc
pop
cli
inc
xor
or
ja
std
ds
mov
xor
push
jp
fs
inc
mov
les
adc
mov
loopne
lds
das
orb
cmpsl
mov
mov
xchg
ja
test
lret
stos
pop
aaa
notb
xchg
hlt
push
movsl
cmc
inc
and
sbb
test
and
sbb
stos
test
imul
icebp
sub
or
pop
push
push
mov
and
in
lret
enter
xchg
and
cs
in
mov
mov
loop
add
mov
add
in
xor
push
mov
pop
sbb
push
mov
xchg
jecxz
int3
jbe
cli
mov
jb
fdivl
xlat
fadd
shll
fs
inc
lods
dec
lret
adc
ja
and
push
mov
jo
ss
xlat
cmpsl
lahf
insl
shl
mov
out
dec
cmp
sbb
mov
pop
sub
pop
aas
inc
cld
aad
lods
filds
cmp
push
mov
lahf
daa
data16
jle
insb
dec
scas
or
and
dec
stc
aam
cmp
fs
outsl
sub
xor
imul
mov
cmpsb
aad
cmc
test
insl
or
cmp
out
jmp
inc
aas
pop
jo
pop
inc
pop
je
cmpsb
push
arpl
xchg
fcmove
rcr
sbb
std
mov
imul
push
lods
push
push
cld
xor
push
cmp
mov
jge
mov
inc
cld
mov
xchg
scas
cltd
dec
xor
dec
lods
push
push
stos
or
add
aaa
jecxz
inc
cmp
lock
gs
inc
lds
popa
cmp
fwait
js
jbe
test
cmp
aad
gs
shr
stos
or
xchg
aad
cwtl
push
sbb
jp
idiv
fwait
jnp
pop
mov
jo
idiv
mov
or
inc
pusha
cmp
das
mov
test
ret
imul
cld
popf
jle
cmp
stos
int
or
xor
cmp
gs
push
repnz
cs
adc
xchg
jnp
jbe
mov
sbb
mov
and
dec
lret
enter
aaa
pop
test
and
push
inc
lea
mov
loop
jbe
cmp
fnstsw
sbb
adc
mov
pop
cld
sbb
inc
cmpsl
sbb
pop
daa
xor
jno
aad
push
pop
andl
mov
pusha
xor
mov
sahf
stos
mov
push
mov
ret
dec
or
dec
js
mov
out
outsb
inc
pop
inc
and
aaa
lret
imull
cmp
cmp
or
icebp
lods
pushf
loope
jge
and
dec
jbe
js
push
push
sub
inc
lods
xor
xchg
imul
jg
jge
les
xchg
les
add
xchg
std
cmp
int3
jle
mov
in
add
mov
xor
push
jmp
jno
cmpsl
imul
in
pushf
mov
out
jmp
test
es
adc
sub
jg
aas
mov
push
adc
jp
cmc
mov
xchg
inc
loope
push
dec
and
mov
sub
in
jae
add
pop
inc
xchg
cmp
lret
into
mov
iret
aam
rcr
dec
clc
in
imul
cli
jno
mov
inc
mov
cmp
out
popa
cmp
negl
into
movlps
push
adc
inc
out
mov
repnz
jae
or
pop
pop
leave
push
addl
inc
xchg
inc
jp
mov
les
arpl
daa
insl
xchg
stos
arpl
sub
shr
mov
cmpsl
xor
pop
mov
aad
fs
ficoms
fsts
jp
dec
dec
sbb
fs
jb
dec
pop
jno
jbe
xchg
mov
mov
adc
lcall
push
test
pop
dec
or
repnz
jp
movsb
mov
dec
cmp
mov
subl
dec
jmp
dec
addr16
ja
mov
sub
mov
mov
pop
negl
jecxz
and
dec
in
add
mov
mov
xchg
jnp
cmc
xlat
out
jge
jnp
out
add
mov
and
cmp
outsl
lds
mov
in
mov
pop
mov
int
ljmp
clc
sub
sbb
fwait
pop
addr16
jo
jno
fisttps
xchg
mov
and
mov
xchg
lcall
mov
ja
cmp
mov
movsl
mov
sub
sub
xchg
dec
daa
mov
addr16
sbb
lock
hlt
icebp
mov
xor
dec
mov
gs
add
mov
sbb
xor
inc
ds
sub
mov
loop
xlat
fs
dec
mov
pop
bound
mov
filds
pushf
mov
mov
fidivs
pop
jmp
pop
std
sbb
cltd
jne
cmp
sbb
cli
negb
push
mov
lret
jg
icebp
shrl
and
sbbb
mov
or
cmp
iret
dec
into
inc
jae
mul
and
cmp
stos
pop
outsb
addr16
push
scas
push
inc
adc
add
pushf
mov
out
adcl
jbe
sar
in
in
js
push
add
cmp
fldenv
daa
inc
dec
std
fiaddl
sub
imul
dec
xor
and
push
ljmp
js
add
in
out
fst
loopne
add
jne
mov
xchg
hlt
imul
push
push
push
cmp
xor
imul
adc
mov
clc
test
cmp
inc
mov
inc
and
rcrb
popf
push
inc
int3
stos
repnz
mov
aaa
out
mov
sub
sub
test
push
inc
push
pop
mov
and
int3
cmc
mov
xor
jmp
push
movsl
testb
daa
lret
inc
ret
mov
or
imul
stc
ffreep
push
out
xor
divl
inc
jns
xchg
sbb
stc
lret
fildll
mov
xchg
jge
cmp
aam
fstps
xchg
mov
leave
xchg
dec
cli
adc
pop
mov
outsb
test
in
adc
cld
call
into
adc
std
ds
out
ljmp
dec
inc
cmp
and
loopne
inc
in
addr16
arpl
test
mov
vmread
mov
sbb
lods
nop
leave
push
es
add
dec
push
scas
and
outsb
jl
and
cmpsl
jno
lahf
call
jae
and
mov
mov
mov
mov
gs
scas
cmp
or
std
popf
inc
pop
iret
js
mov
das
inc
das
and
mov
fbstp
lret
ret
mov
xchg
pop
in
repnz
stos
fcoms
pop
movsl
jae
icebp
lahf
jno
sub
or
xchg
ret
scas
ja
clc
jne
imul
xchg
jl
xchg
push
push
jp
mov
ljmp
inc
pop
xor
sub
outsb
lret
push
pop
clc
mov
push
je
movsb
mov
mov
jge
and
fcompl
mov
aad
and
inc
clc
std
add
fimull
ret
inc
outsb
xor
inc
inc
cwtl
xlat
jb
push
rolb
enter
sub
out
inc
jmp
xchg
mov
jp
and
xchg
xchg
fcmovnb
ja
jge
adc
mov
in
shlb
adc
cltd
clc
dec
lds
mov
aas
push
pop
mov
mov
lods
push
sbb
ds
push
lods
fsubp
in
mov
or
xor
out
ja
fs
pop
sbb
cmp
inc
mov
dec
fwait
mov
mov
push
repz
jmp
lcall
jae
cmp
idivb
and
out
lock
pushf
std
sub
addr16
dec
ror
pop
inc
rclb
pop
jno
dec
pop
lcall
shlb
icebp
and
rcrl
xchg
leave
mov
mov
mov
or
into
call
in
or
jns
inc
push
pop
arpl
loop
and
ds
or
jmp
daa
popf
mov
xor
enter
sbb
mov
push
daa
inc
out
addr16
out
outsb
cld
dec
aam
inc
mov
and
loop
repnz
shll
jecxz
pushf
xchg
xchg
mov
insl
fwait
pushf
mov
jg
rolb
fcoms
jo
scas
mov
push
subb
test
repnz
rcll
and
pop
rclb
cwtl
les
ret
add
push
repnz
std
in
and
fs
es
jg
mov
cmp
cmp
bnd
repnz
mov
lods
testb
mov
ret
jle
sub
ficompl
and
outsb
aad
repz
lds
sbb
lahf
cwtl
dec
repz
es
fidivrs
mov
negb
dec
out
dec
inc
dec
mov
xchg
lret
dec
adc
es
sbb
stos
cmpsl
sub
stos
insb
cmp
xchg
ficoms
ss
push
mov
mov
dec
pop
jg
scas
xchg
pushf
in
imul
xor
pushf
add
mov
movsb
jg
and
imul
ds
ds
pop
insb
and
inc
scas
movsl
jp
push
cmc
repnz
dec
mov
dec
mov
jmp
push
sahf
test
mov
enter
inc
jae
jo
xor
or
stc
dec
or
and
adc
mov
inc
dec
or
push
pop
cmp
dec
pop
js
ret
arpl
xchg
pop
push
mov
cltd
ficoms
push
nop
into
jno
add
mov
adc
jp
push
mov
or
pop
out
and
cmp
xlat
fisttps
push
pop
mov
cmp
dec
ret
movb
sub
int
ja
insl
pop
cmpsl
add
js
mov
ljmp
or
and
jl
call
mov
cs
fisubrs
cli
push
je
rorb
icebp
cwtl
pop
ret
xor
lock
dec
mov
mov
jnp
push
jae
lret
jns
dec
lahf
lea
int
mov
iret
jbe
ja
je
mov
icebp
popf
cmpsb
pop
sarl
or
push
dec
lock
add
jge
pusha
gs
inc
daa
lods
faddl
cmp
cld
ret
cmp
pusha
inc
pop
scas
aaa
dec
lds
cmc
or
sti
in
push
push
xchg
jbe
nop
fmull
jge
lock
orl
pusha
leave
insb
pusha
xor
mov
lock
push
stc
jno
repz
mov
ret
hlt
mov
mov
outsb
fsubl
mov
jmp
leave
push
jecxz
clc
dec
out
push
sub
out
or
je
fsubrs
pop
daa
popa
adc
lds
lods
fcomp
xchg
jnp
testl
ret
push
mov
rcll
repz
imul
int3
jp
imul
and
mov
movsl
xchg
jb
das
cmp
add
out
xchg
and
xchg
clc
sbb
jle
mulb
xchg
arpl
mov
xlat
or
sahf
and
mov
adc
ss
or
cmpsl
mov
arpl
into
jno
push
arpl
adc
stc
xchg
scas
jae
xor
mov
ss
mov
mov
push
call
hlt
or
push
add
shll
cmp
dec
adc
pop
mov
xchg
xchg
lahf
lock
stos
cmpsb
cmpl
test
std
int
addr16
in
iret
into
arpl
or
mov
insb
pop
cld
pop
aam
lret
lods
mov
aaa
pop
mov
add
jle
sti
pop
mov
cld
into
xor
icebp
icebp
bound
sub
jns
sbb
pop
xchg
push
imul
pop
jle
lds
pop
mov
adc
xchg
stos
jae
outsb
jl
divb
cwtl
movsb
pushf
add
adc
dec
orl
jb
xchg
cltd
lods
sti
cmp
dec
mov
aad
cmp
cmp
sbb
ss
scas
rorl
mov
inc
test
xor
iret
sti
add
dec
dec
xor
and
jbe
jp
mov
movl
cmpsl
sub
ret
ja
mov
jno
stc
in
dec
jecxz
and
pop
mov
adc
das
sahf
les
add
stos
xlat
or
fisubl
jp
sbb
pop
aam
mov
lcall
dec
jb
aaa
jbe
je
jo
insb
mov
fcoms
shlb
test
lret
mov
arpl
sbb
in
mov
inc
inc
jno
and
cltd
push
ja
push
mov
inc
sub
pop
cmc
cmp
push
jle
jecxz
xchg
ret
add
mov
lods
xor
movsl
pushf
xchg
dec
cltd
sbb
fnstenv
cmpsl
addl
arpl
rol
outsl
push
loop
daa
cmp
mov
pop
push
stos
fidivrs
lock
out
loopne
fmul
and
push
into
cmpsl
shrb
jge
pop
sarl
out
in
cwtl
loope
dec
mov
not
and
cmp
xor
mov
addr16
aas
repnz
repnz
dec
aam
sbb
mov
sbb
fildll
sbb
test
fmull
test
arpl
fstpt
push
mov
decl
jae
dec
aas
in
lea
addb
mov
outsb
add
aam
repz
xor
repz
mov
fnstcw
mov
cltd
jmp
pop
push
add
imul
jg
cmp
adc
mov
push
xlat
cmc
mov
pop
sub
dec
lret
dec
std
fisubrs
aam
mov
push
fnstenv
mov
cli
adc
dec
push
ds
ret
jnp
mov
inc
sub
sbb
jecxz
xchg
rcrl
or
sub
aaa
inc
incl
xchg
popa
pop
lahf
les
rcll
dec
imul
push
pop
dec
fcmovne
pop
jbe
js
jg
push
lods
ljmp
outsb
push
add
lahf
test
mov
fcmove
popl
mov
jl
push
aaa
push
andl
cmc
insl
shlb
jno
mov
sub
cmp
mov
jle
cld
jecxz
fidivrs
xacquire
iret
in
sti
and
jns
frndint
push
movsl
insl
loop
mulb
xor
and
push
ds
fldt
loope
leave
fisubl
jae
out
lcall
movsb
push
jb
pop
pushf
xchg
movsl
sub
fbstp
notl
push
mov
pop
push
les
dec
sbb
in
aas
xor
xor
push
lret
push
popa
clc
mov
lahf
push
jle
out
mov
shl
push
test
outsl
adc
fnsave
scas
fsub
inc
repz
inc
pusha
rcl
xchg
test
dec
aaa
push
mov
ja
leave
leave
mov
xor
fistps
pushf
lret
loope
sarl
jle
dec
push
std
fmull
fnstcw
in
push
and
outsb
test
fs
testb
stos
push
xchg
cmp
mov
mov
lret
sbb
push
fs
repz
and
pop
jge
jns
pop
jb
lods
push
js
xchg
into
sub
mov
in
enter
ret
inc
testb
enter
cwtl
sub
mov
xor
movsl
mov
add
test
test
shrl
mov
pushf
and
cs
pop
or
stos
push
sub
dec
adc
xor
fcomps
in
jo
sarb
loopne
sahf
pop
jns
popf
jo
sub
sub
mov
and
jo
jbe
mov
movl
js
popf
addr16
cmpsb
clc
cmp
xchg
ja
ffree
xor
pop
stos
lds
pop
inc
sti
mov
in
xor
sbb
sub
fisubrs
push
dec
das
in
scas
xchg
sbb
jmp
sub
daa
xchg
popf
dec
stos
data16
loop
andb
arpl
and
dec
into
add
mov
cmp
cld
push
inc
shll
mov
jp
mov
dec
mov
ja
idivb
ja
push
or
add
mov
cmpsb
inc
shll
cmpsl
inc
loopne
inc
xlat
imul
test
mov
or
outsl
ret
mov
repnz
mov
cltd
pop
jo
scas
mov
sbb
lods
jbe
adc
out
pop
stos
bound
dec
int3
inc
push
cmp
sti
jbe
and
sub
pop
mov
add
push
adc
retw
push
cli
inc
or
adc
imul
xchg
jecxz
lock
jns
loope
dec
ret
inc
je
and
and
xlat
sbb
mov
psrlw
jb
test
mov
push
call
vpaddb
sbb
or
stos
fistpll
add
movsb
inc
rorb
out
push
inc
out
sbb
xor
adc
and
loopne
cmc
enter
out
out
cli
call
inc
ret
icebp
arpl
aad
mov
cmp
jp
das
push
or
shrb
or
inc
jle
rcr
xor
adc
inc
pop
add
flds
inc
fs
pop
dec
ljmp
cmp
mov
adcl
mov
xchg
add
cmp
sub
dec
inc
je
or
xor
add
lahf
sti
xor
xor
mov
ljmp
cltd
or
test
mov
neg
jno
push
push
mov
std
xor
out
xor
pusha
divb
xor
cmp
pop
rcr
daa
js
mov
and
cltd
pop
aas
sub
sbbb
or
sbb
and
ret
cmpsl
aad
or
test
imul
jge
mov
addr16
aam
fidivl
push
in
rcll
mov
dec
inc
cli
pusha
arpl
pop
inc
add
mov
mov
testl
stos
test
mov
push
imul
loopne
push
xchg
sbb
popa
mov
incl
das
jecxz
les
inc
aam
iret
push
movsl
mov
call
test
inc
je
push
loop
repz
lock
pop
add
test
mov
enter
cs
pop
pop
cmpsl
lret
mov
call
dec
out
stos
mov
xchg
rolb
mov
nop
pop
leave
dec
imul
js
adc
adc
push
jp
pusha
mov
xlat
nop
jno
adc
bound
push
push
jl,pn
inc
dec
aas
out
adc
pop
ljmp
pop
inc
or
in
repnz
dec
jecxz
sub
sbb
int
mov
xchg
test
pop
shl
lods
fs
gs
xor
sbb
stos
push
sub
lcall
mov
pop
decb
cmp
imul
jb
and
lahf
and
jae
push
shrl
movsl
jecxz
fs
push
lret
push
pop
ljmp
int3
sub
sub
inc
xor
jl
test
test
inc
xor
shlb
or
mov
mov
jmp
outsb
pop
stc
mov
lds
mov
std
dec
cwtl
mov
cltd
xchg
or
jecxz
in
inc
jae
or
cmpsb
or
mov
push
outsb
subb
cwtl
xor
add
popf
sbb
xchg
mov
daa
dec
jge
stos
shrb
inc
xchg
addr16
xor
inc
inc
inc
dec
fcmovne
mov
pop
sub
cmp
repz
cmc
fbstp
shrl
sahf
dec
call
adc
add
mov
push
inc
cmp
mov
and
repz
pop
ret
mov
push
xchg
call
ja
negl
loopne
jns
scas
cmp
mov
aad
insl
mov
xchg
sub
adc
rcrb
call
fnstenv
imul
incl
mov
cld
mov
shlb
inc
scas
ret
call
xchg
insb
stos
out
bound
mov
mov
data16
scas
fldenv
cmp
lods
mov
fadds
or
or
pop
sti
adc
and
frstor
xor
loopne
rol
lahf
mov
cmc
sbb
aas
lcall
push
outsl
scas
and
inc
test
and
inc
outsb
jg
add
push
leave
fwait
pop
pop
ret
shl
add
add
dec
or
rclb
jbe
dec
add
cmp
pop
add
aam
das
xchg
movsb
ret
inc
out
test
xchg
push
xchg
enter
sbb
pop
rsqrtps
sub
shr
jae
stc
pop
or
dec
in
pushf
nop
add
lahf
xchg
lea
mov
dec
lds
push
ja
mov
jne
fimuls
push
cmp
or
inc
sbb
sub
mov
jmp
inc
adc
notl
adc
mov
push
xor
sbb
rorl
inc
cmp
in
in
jo
ret
enter
hlt
js
push
add
adc
adc
adc
and
push
and
sub
arpl
dec
loopne
sub
add
pop
repnz
and
in
add
adc
add
add
cmpb
adcb
daa
add
adc
xchg
or
mov
pusha
loopne
pop
pop
repnz
jg
iret
inc
cmp
in
jo
arpl
cmp
jl
je
sbb
jbe
add
jno
nop
push
loope
adc
jmp
loop
push
shrb
inc
roll
adc
and
xchg
xchg
test
leave
andb
roll
mov
fs
dec
and
inc
pop
xorl
push
push
pushf
in
or
cmp
sub
iret
or
add
daa
mov
fadds
dec
data16
xor
pushf
idiv
mov
mov
and
sub
lock
cltd
xchg
pushw
pop
out
pop
daa
push
push
cli
in
add
add
mov
cld
mov
and
call
xlat
pop
dec
pop
fwait
shll
inc
mov
aaa
out
sub
pop
cs
aas
outsl
cwtl
or
icebp
jns
adc
aaa
sub
or
std
jne
in
in
push
data16
std
cs
aad
jnp
movsb
lsl
nop
sub
or
repz
leave
jne
mov
call
cli
jl
stc
sti
pop
outsb
jl
mov
leave
gs
sbb
cmp
out
cmp
out
or
cli
mov
xchg
rep
cmp
jge
inc
int3
int
sbb
jne
mov
push
cs
and
iret
test
lock
loopne
push
push
xchg
and
into
stc
ljmp
sub
or
cmp
inc
mov
cmp
and
cli
mov
ss
xchg
pop
aam
mov
pop
data16
mov
int
cwtl
or
in
shl
test
es
leave
bound
mov
gs
fwait
lock
imul
xor
cmp
lret
sbb
sbb
mov
xchg
add
xchg
sbb
and
insl
repnz
jmp
ja
jns
cmp
mov
mov
data16
inc
addr16
xchg
xchg
lods
out
mov
sbbb
xchg
xor
mov
sti
lcall
adc
inc
ret
rclb
and
sahf
leave
sbb
pop
repz
push
jb
test
inc
or
sarl
jecxz
push
pop
sbb
and
mov
clc
loopne
sbb
push
or
jno
pusha
inc
inc
push
add
jp
into
xlat
jge
repz
or
loope
subb
test
add
sbb
nop
test
mov
sti
outsl
decb
nop
aam
mov
dec
add
sub
add
xor
insl
jnp
jmp
pushf
sbb
push
add
dec
inc
or
fwait
popf
push
xchg
jb
lahf
popf
mov
iret
test
push
push
in
dec
mov
sub
fsubrl
pop
jecxz
sbb
mov
fbld
into
jns
xchg
dec
and
xchg
cmpsb
jmp
lret
nop
in
push
aas
das
enter
aam
imul
lret
dec
mov
ljmp
sub
leave
movsb
xor
dec
ss
repnz
xor
mov
jbe
mov
lret
sbb
lds
fs
stos
out
and
mov
push
decb
adc
insb
pop
mov
scas
into
inc
mov
push
in
jle
aaa
mov
jp
adc
mov
std
jl,pt
cmp
dec
pop
addl
sbb
adc
sub
fists
ja
cmp
jb
jnp
adc
cld
cmp
mov
cmp
lea
fildl
sbb
inc
outsb
and
pop
dec
les
divl
cmpsl
enter
fidivl
add
xchg
je
push
push
fs
adc
cmp
mov
aaa
mov
add
cmp
mov
pop
push
xorb
inc
mov
lods
pop
mov
rcll
fsubs
add
cmpsb
lret
ds
xor
fsubp
hlt
mov
dec
add
out
arpl
push
in
les
jb
bound
xor
and
aad
insb
pushf
popf
ds
std
xor
mov
rorl
mov
mov
adc
insb
movsl
popf
imull
in
push
cmc
movsb
nop
cli
xchg
mov
outsb
mov
mov
mov
push
adc
dec
xchg
shl
adc
push
dec
inc
and
std
pop
or
cld
mov
xlat
outsl
add
jne
std
adc
inc
pop
add
mov
sub
loop
xlat
cmpsb
cmc
dec
or
call
push
outsb
jecxz
dec
sti
je
pop
int3
les
or
push
sarl
in
add
insb
das
sbb
cmp
mov
test
stos
inc
addb
int3
jo
out
jg
jle
jle
xchg
in
pop
lods
adc
jmp
xor
cs
xchg
and
lret
add
mov
stos
mov
mov
or
sbb
push
out
push
jl
sub
mov
mov
fucomi
sub
mov
andb
mov
mov
inc
outsb
in
mov
imul
test
bound
xchg
pop
push
gs
ret
fidivl
das
jp
mov
xor
outsl
cmc
dec
data16
ret
mov
jp
jmp
enter
push
push
dec
cli
sbb
fucomp
mov
es
daa
std
insb
outsl
jp
push
or
and
pop
jp
sub
out
inc
nop
cmp
in
adc
inc
sbb
clc
fdivrp
das
out
dec
push
nop
enter
pop
outsb
dec
jae
or
outsl
jp
inc
push
dec
add
aad
stc
xor
or
pop
sub
sub
push
or
inc
or
inc
jmp
xor
xchg
pop
ficoms
xchg
sbbb
popf
pushf
shr
ret
inc
dec
and
and
mov
dec
xor
aaa
repz
cmp
cli
cmp
shlb
sahf
push
xor
cmp
inc
add
hlt
mul
xor
add
mov
iret
adc
dec
repz
jb
xchg
lods
mov
nop
jmp
out
xchg
pop
pop
xchg
das
mov
pop
sti
mov
sbb
rolb
incb
flds
inc
and
or
int
mov
dec
lods
arpl
push
sub
fcoms
inc
rcll
pop
fucom
cmpsb
leave
fldcw
dec
gs
imul
loope
adc
test
jmp
sbbl
jae
xchg
sbb
popf
or
popa
arpl
stos
icebp
xchg
scas
cwtl
mov
add
mov
sbb
push
and
lods
loop
mov
int3
cmpsb
xchg
sub
ljmp
cmpsl
and
add
insl
in
add
jl
sti
lret
fcmovnbe
shll
stos
mov
int3
sbb
sub
sub
add
push
xor
cmp
lcall
xor
sahf
or
add
or
ret
adc
sub
outsb
push
js
sbb
test
mov
pop
repz
xor
xlat
or
enter
mov
mov
ljmp
mov
mov
arpl
cmp
inc
nop
sti
xchg
fs
imul
sbb
sar
push
push
push
and
pop
push
imul
mov
lods
sub
lret
les
xor
in
inc
cld
sub
insb
pop
xlat
stos
in
dec
mov
nop
loop
xor
dec
push
in
mov
cli
xchg
mov
sub
lahf
jns
xchg
fisttps
leave
dec
lods
loope
fdiv
loope
out
data16
sub
push
inc
xor
jns
inc
sahf
lock
cmp
aad
insl
int
fldl
adc
jb
enter
push
xor
test
test
adc
loop
lods
sbb
add
andb
aaa
pop
xadd
mov
push
js
push
call
or
fdivrl
cmp
iret
push
xor
and
jecxz
and
pop
jb,pn
sub
mov
push
int3
leave
push
push
mov
adc
dec
lret
jb
movsb
inc
or
or
cmp
pushl
pop
pop
int3
pop
in
js
mov
xor
out
xlat
das
mov
movsb
inc
data16
push
cmp
addl
fdivl
in
mov
mov
fbld
or
loope
stos
sbb
cmp
jb
pop
lret
cmp
mov
jnp
lcall
pop
dec
inc
jmp
jp
pop
lods
test
mov
dec
mov
in
mov
fwait
push
test
outsl
ja
int
jg
pop
sbb
add
ds
or
pushf
fimull
pop
sbb
and
clc
push
popa
pop
or
mov
xchg
movsl
enter
or
pop
jne
loopne
adc
lmsw
gs
adc
jle
inc
xor
jbe
mov
xor
xchg
fwait
rol
mov
mov
es
out
jb
ja
push
cwtl
mov
fidivrs
rclb
fldcw
in
inc
dec
aaa
hlt
or
pop
mov
sub
loope
pop
jge
sahf
add
adc
aaa
push
fsubr
mov
jns
lods
rolb
cmp
les
lcall
add
ret
xor
orl
lds
xchg
imul
sti
test
pop
mov
add
fcomip
cmpsl
add
xor
movsl
insl
jnp
cmp
hlt
xchg
clc
inc
mov
jne
dec
fwait
js
sub
out
jns
ret
pop
orl
shll
lahf
cmp
jl
add
jb
dec
out
jo
fs
int3
inc
addr16
mov
cmpsl
lea
or
dec
push
movsl
jmp
clc
loopne
sbb
sub
inc
ret
xor
xchg
and
test
xchg
xchg
xrelease
and
mull
data16
int
sub
sahf
dec
call
lahf
popa
inc
jnp
mov
stos
mov
and
das
rol
enter
mov
lahf
push
push
push
inc
or
mov
adc
dec
mov
pop
test
cs
add
ret
daa
cmp
pop
xlat
mov
xchg
xlat
mov
ds
repz
pop
mov
or
adc
insb
mov
out
movsl
cmp
mov
sub
bound
pushl
dec
add
addb
scas
cmp
out
fisttpll
fwait
icebp
sbb
jge
outsl
jae
cld
sub
ljmp
mov
jno
not
int
icebp
dec
out
add
jmp
jnp
add
sub
out
inc
inc
lret
insl
aas
cli
sbbb
jecxz
xchg
push
fiadds
xchg
jo
xor
rol
call
loope
xchg
std
inc
xor
cmp
ljmp
andl
fimuls
cmpsl
cmc
int
cs
push
or
popa
fs
ss
inc
data16
dec
andl
shl
arpl
push
inc
sbb
or
shl
ljmp
and
lret
or
or
repnz
in
int
bnd
xor
mov
test
stc
sub
fisubrs
clc
sub
push
dec
hlt
aas
loope
dec
pop
add
lock
insl
inc
into
jno
add
inc
or
and
mov
aas
xchg
add
clc
jne
fs
jge
lock
test
cmp
inc
jbe
pop
ljmp
fs
cs
fs
cmp
mov
fnsave
js
adc
cmp
jp
into
mov
mov
xor
add
aam
loop
cmp
aad
insl
push
xlat
inc
pop
mov
mov
jnp,pt
dec
xlat
rcrl
jg
icebp
out
inc
sbb
mov
ljmp
outsb
aaa
pushf
notb
call
cmpsl
loop
aad
add
sbb
out
or
scas
mov
jle
dec
xchg
pop
push
push
inc
stc
test
mov
mov
pop
pop
inc
daa
lds
push
mov
mov
btc
test
mov
leave
or
jle
outsb
mov
test
imul
and
add
and
push
movsl
mov
dec
jne
bound
jno
cmp
adc
mov
push
cmp
cltd
mov
xchg
mov
popa
movsl
dec
dec
sub
test
ljmp
sub
rcrb
mov
addr16
dec
add
push
mov
sub
push
ljmp
pop
cmc
shr
and
lods
cmp
xorb
xchg
lods
inc
scas
ds
pop
adc
pop
loopne
js
mov
out
push
jmp
test
xor
inc
inc
test
jne
pop
xor
leave
clc
xor
jg
ds
je
jnp
ffree
dec
add
pop
inc
xor
movsb
add
and
out
add
lods
lea
jecxz
cs
mov
push
inc
data16
sub
cmc
out
jne
enter
xchg
mov
repz
adc
adc
out
cld
mov
sbb
or
cmpsl
dec
cmpsl
jno
jb
mov
jle
es
rcrb
aam
pushf
popf
mov
or
enter
icebp
jp
fsts
pop
in
arpl
out
in
adc
mov
subb
test
scas
mov
popa
jmp
or
pushf
jp
mov
fs
sub
xchg
mov
test
shll
cmpsl
cmp
push
mov
cltd
sbb
pop
cmpsb
and
data16
test
out
or
or
and
and
xor
pushf
or
mov
popa
add
add
pop
jo
loopne
and
xchg
jmp
lods
pop
lret
pop
xlat
cs
add
aam
xor
mov
sub
sub
inc
into
push
pop
and
xor
enter
jb
lret
dec
or
pop
dec
andl
cwtl
sarb
movsb
mov
push
inc
icebp
and
sbb
bound
fs
push
push
int3
test
push
outsl
or
xchg
xor
pop
cmp
or
sti
adc
mov
fldl
fs
push
cs
call
andl
hlt
faddp
xchg
push
out
scas
cwtl
scas
push
popf
test
mov
mov
push
popa
mov
xor
aam
push
out
stos
sbb
das
test
enter
divl
pusha
imul
sahf
scas
dec
jl
mov
out
dec
xor
inc
pop
ljmp
push
pop
pop
inc
push
xor
mov
pop
in
mov
cmp
stos
sub
into
pop
ja
jecxz
inc
jmp
loope
and
jl
mov
xor
xor
call
sub
cmp
jp
nop
loopne
mov
push
xchg
mov
in
xor
push
mov
daa
rcrl
sti
test
add
mov
fcmovbe
outsl
sub
gs
xchg
popa
cli
js
cmp
mov
lret
fstps
pop
imulb
mov
mov
inc
insl
orb
iret
fisubrl
fs
mov
sub
xchg
jb
outsl
adc
add
and
sti
pushf
push
stos
mov
pop
test
inc
push
pusha
cmp
je
movsl
imul
inc
push
test
xor
popf
sub
repz
stos
or
fsubl
add
push
roll
pushf
sbb
mov
jle
add
jbe
xor
mov
nop
fdiv
or
fisubl
ss
ficoml
rcr
add
sbb
cmc
jne
push
jl
les
in
das
inc
repz
jno
add
roll
lea
xchg
xchg
ss
outsb
ljmp
inc
cmp
leave
jne
xchg
adc
scas
xor
loope
cli
movsb
sub
lods
and
addl
xchg
mov
fisubs
add
adcb
inc
xchg
and
inc
cmp
and
add
or
in
inc
add
mov
adc
push
lods
es
pop
push
sub
push
lea
das
cmp
int3
pop
or
insl
mov
iret
xchg
ja
inc
pop
mov
push
bound
or
enter
or
mov
fisttpll
adc
xor
test
sub
leave
xor
jnp
xchg
jp
movsl
mov
rcrb
stos
lods
imul
jg
pop
mov
xchg
in
in
sub
in
add
out
pop
jl
enter
mov
cs
dec
arpl
outsb
push
bound
lahf
cmp
xchg
mov
test
in
popa
jl
xchg
xchg
repnz
nop
iret
inc
lahf
mov
jge
cmp
shl
insl
add
mov
aam
and
dec
cmp
mov
aas
in
icebp
je
shr
push
inc
nop
std
das
bound
test
jno
adc
jnp
mov
cmp
iret
pop
fs
inc
add
mov
clc
push
jg
mov
jmp
mov
leave
orb
test
gs
aaa
jb
and
add
lret
arpl
loope
cmp
loopne
popa
jecxz
jmp
movsb
mov
jle
dec
fmull
pop
add
inc
push
aaa
push
sahf
mov
addl
cmpsb
stos
inc
dec
mov
mov
in
aad
jle
inc
icebp
mov
adc
xchg
sbb
mov
insb
sbb
inc
in
dec
cmp
push
sub
sub
call
sarl
mov
ja
push
inc
jecxz
push
xor
cmp
icebp
mov
cmpb
xchg
dec
lcall
fstpl
into
out
call
lahf
cwtl
push
push
or
insl
fcmovb
clc
mov
and
popf
iret
fnstenv
inc
testb
int
shrb
dec
out
fisttps
xchg
hlt
pushf
mov
cmp
dec
inc
or
lret
mov
mov
xor
pop
mov
call
inc
stos
inc
popa
push
and
and
addr16
cmp
pop
inc
es
xchg
xorb
stc
shrl
out
rorl
add
aad
pop
pop
sbb
and
leave
fnstenv
repz
xor
jle
push
cmp
mov
cmp
mov
sbb
add
mov
and
xor
in
outsb
sbb
adc
xor
inc
loop
xchg
sub
int3
je
add
ss
imulb
adc
add
movsb
subl
jbe
and
fistpll
mov
inc
inc
pop
push
xor
data16
push
outsl
sbb
data16
ja
sub
mov
adc
dec
inc
out
in
vpsubd
loopne
stos
or
sbb
sbb
cld
in
call
mov
dec
fisttps
push
test
xor
sub
mov
xchg
push
add
push
aad
sub
pop
bound
test
xchg
stos
push
sbbb
insb
and
cmp
dec
outsl
push
dec
lds
dec
clc
and
xlat
iret
add
orb
cld
sbb
call
stos
rcl
test
pop
add
popf
xor
push
mov
aaa
pop
pushf
add
ds
dec
push
xchg
cmp
loopne
mov
add
adc
add
mov
fimuls
fcomip
inc
adc
dec
sti
fisttps
jge
xor
pop
adc
sub
sbb
mov
or
test
je
pop
mov
push
cs
xchg
arpl
movsl
lods
adc
sub
sbb
mov
incb
popf
stos
sub
lods
mov
sub
fs
xchg
dec
out
mov
test
mov
pushf
xor
les
inc
dec
cwtl
fistl
adc
in
lock
negb
add
mov
arpl
mov
pushf
cmp
and
ss
ja
adc
xchg
xchg
lea
mov
mov
stos
sbb
test
dec
jno
xchg
mov
xor
mov
bound
push
mov
ljmp
inc
scas
outsl
lods
mov
push
add
das
ljmp
mov
jo
je
imul
cmp
out
fsubs
push
sti
fstl
lcall
dec
imulb
push
and
pop
xchg
sbb
jo
leave
mov
stos
outsb
mov
mov
and
stos
mov
xchg
push
jl
add
push
sub
and
cld
xchg
idiv
aam
jmp
test
jle
cwtl
jge
cmp
jecxz
push
and
xor
xor
add
push
imul
repz
pop
in
inc
push
pop
pop
lea
test
pop
addb
sahf
adcl
ljmp
adc
inc
call
xchg
push
jne
sub
mov
mov
mov
ja
loop
inc
lret
out
iret
rorb
sbb
ja,pt
jl
mov
enter
aad
lock
push
xor
jbe
mov
inc
aad
rcll
out
cwtl
jl
lods
repnz
adc
mov
mov
inc
mov
adc
bound
jno
cmp
mov
and
sbb
loop
xor
ljmp
or
cltd
mov
sub
xlat
mov
xchg
mov
mov
loopne
xchg
jp
inc
dec
dec
std
ret
jp
sbb
mov
lea
outsl
jmp
inc
pop
pop
jb
or
jbe
in
fidivrs
push
rcl
loope
mov
mov
pop
jnp
and
pop
and
mulb
cmp
cltd
push
stos
push
mov
adc
xchg
dec
push
loopne
mov
sbb
aas
enter
dec
nop
cld
mov
das
dec
push
mov
das
mov
out
aaa
pop
js
add
mov
and
test
mov
pop
adc
inc
sbb
mov
test
adc
dec
adc
add
sub
sahf
ror
dec
movsb
pop
cmc
jns
cmp
xchg
xor
loope
mov
jno
hlt
stc
mov
push
push
sub
and
outsb
mov
mov
cld
inc
add
cmp
dec
adc
cwtl
inc
out
xchg
inc
in
cwtl
ljmp
add
and
stos
mov
and
je
outsl
add
inc
fistps
mov
pop
jo
lds
vpaddd
mov
jp
fdivrs
aad
cmp
movsl
aad
aam
addl
dec
cmp
adc
mov
push
repnz
xlat
sbb
cld
jnp
xchg
mov
hlt
mov
xlat
pop
jno
scas
loopne
rcr
dec
lret
jb
cmc
or
dec
lds
sbb
fmull
fisttpll
pop
stos
mov
push
sbb
iret
jmp
imul
dec
imul
lret
out
sub
jnp
call
xchg
jmp
imul
push
out
dec
lods
or
das
sbb
jp
ss
jge
loope
rcrb
mov
xor
jae
mov
cmp
inc
mov
int3
lea
pusha
mov
mov
inc
pop
add
std
jmp
xchg
into
push
lods
jl
jns
push
or
inc
mov
out
mov
ss
xchg
inc
shrl
sbb
push
movsl
ret
jmp
cld
fwait
out
xchg
sub
ljmp
mov
shlb
mov
daa
int3
xlat
out
daa
cmp
cmc
push
xor
push
add
fucomi
and
nop
cmp
cld
orb
pop
shr
and
mov
gs
aaa
daa
cmp
lret
dec
or
dec
mov
pushf
xchg
test
leave
sbb
xor
dec
fstps
jecxz
flds
xchg
test
jb
push
std
pop
add
xor
pop
xor
out
fmuls
dec
and
rol
pop
into
pushf
shlb
mov
mov
fisttps
pop
stc
mov
hlt
jne
or
mov
pop
fcmovb
lods
pop
jge
dec
dec
ficompl
pop
lds
ja
call
das
jmp
stc
push
xlat
mov
xchg
pop
stc
test
inc
ds
jmp
xchg
add
xor
sub
push
outsb
imul
push
outsb
sub
add
insl
jb
test
loop
rcrl
repz
sub
outsl
and
mov
mov
adc
lods
into
fsubrl
aam
xchg
lahf
sub
pushl
push
aas
pop
pop
jne
aaa
mov
inc
lret
jne
pop
popf
pop
add
stos
adc
cmp
movsl
out
je
or
loope
mov
lahf
dec
push
jbe
ljmp
push
mov
js
and
mov
push
mov
sbb
stc
cmpsl
repnz
scas
mull
mov
sub
inc
jno
imul
test
push
add
jecxz
test
sbb
into
jg
add
add
imul
lret
jns
stos
and
push
and
das
push
jg
xor
insb
das
and
cmpsb
xchg
aam
clc
sub
cmp
add
jge
mov
dec
aaa
lahf
in
movsl
pop
fildll
test
mov
xchg
jle
inc
stc
mov
nop
scas
cmp
out
rolb
mov
dec
dec
insl
mov
jne
and
xor
and
adc
test
inc
xchg
cmpsl
into
xchg
int3
ja
mov
popf
inc
dec
sbb
sahf
stos
push
cmpsb
fsubp
inc
jne
push
cmp
xor
push
sub
inc
cmp
push
subb
lea
outsl
popf
pop
cmp
scas
test
or
sti
cmp
cmp
push
outsb
cwtl
pop
adc
insb
add
int
mov
xchg
or
incb
lds
test
jge
lds
ja
fdivp
test
mov
sbb
es
outsl
inc
sbb
cwtl
xor
fdivrs
fstpl
cmp
fmull
notl
sbb
pop
adc
jo
cmpsb
or
add
leave
pushf
inc
incb
icebp
inc
aaa
sub
test
leave
ss
fisubrs
cmp
sbb
add
dec
out
dec
dec
sub
sub
and
aas
sub
and
leave
jae
and
ret
shlb
or
call
cmp
mov
jmp
jns
leave
xorb
psubsb
push
in
mov
mov
sub
call
mov
lods
ja
lret
mov
test
out
or
inc
sarl
mov
lods
xor
dec
jge
ds
dec
insb
push
popa
mov
insl
repz
mov
fisubs
sbb
cmc
add
dec
dec
pop
mov
adc
push
xchg
les
mov
jb
out
shlb
popf
push
jns
and
in
dec
pop
jg
idivl
aad
roll
lret
cmp
ret
adcb
pop
cmp
int3
or
xor
xor
and
jge
int
movsb
jne
in
jo
fistl
inc
test
push
add
repz
ret
mov
mov
je
dec
cltd
adc
and
out
mov
mov
aad
jo
mov
std
into
ds
xor
rcrl
inc
mov
inc
pop
dec
aad
loopne
cmp
andb
fiaddl
mov
test
out
xchg
mov
push
push
pop
mov
divl
cmp
ficoms
mov
jl
mov
sub
or
jbe
loope
cmp
dec
clc
sub
pop
jle
insl
jl
or
mov
or
aam
cmc
sub
cmpsb
int
push
outsb
jns
mov
sarl
sbb
dec
cmpl
ja
mov
sti
jns
sbb
and
and
orb
jns
ror
mov
in
mov
cmpsb
dec
cli
lods
xchg
jecxz
std
int
pop
insl
adc
cmp
jmp
inc
pop
in
dec
adc
adc
in
sub
xchg
mov
adc
scas
cli
xchg
repz
stos
jmp
or
call
fwait
jmp
loopne
lods
xor
lret
lret
scas
mov
inc
push
xorb
mov
repnz
dec
adc
sbb
push
xchg
cmp
push
mov
loopne
in
into
cmp
insl
inc
gs
mov
mov
cltd
mov
filds
inc
stos
sub
clc
inc
mov
test
pusha
out
mov
mov
jmp
xchg
scas
sub
ja
dec
mov
test
nopl
mov
cmc
in
ds
std
xchg
inc
xchg
sbb
mov
mov
in
lret
mov
xor
loopne
jmp
ja
ds
notl
sahf
sbb
adc
inc
fwait
mov
hlt
mov
cmpsl
xor
into
or
cmpsb
andb
or
xchg
and
daa
shll
ljmp
xchg
insb
inc
das
ljmp
add
inc
ljmp
mov
mov
dec
dec
sbb
mov
ret
xchg
xchg
adc
and
jns
out
or
clc
xor
lods
dec
cmp
mov
les
insl
fisubs
adc
ljmp
lahf
fcoms
lods
cli
pop
scas
xlat
jne
test
or
dec
lcall
cmpsb
jbe
lds
lret
xor
loope
cmp
outsb
dec
xorl
clc
cmpsb
and
lahf
ss
push
jb
hlt
mov
stos
pop
fidivrs
lods
inc
fimull
loope
add
imul
cmpsb
pop
addr16
mov
rcl
sbb
push
and
add
cmp
jae
into
mov
fsub
lcall
lret
dec
nop
test
lds
cli
arpl
outsb
mov
inc
pop
sarb
fdivrs
lea
mov
gs
daa
mov
sub
std
lock
outsl
xor
cmp
mov
xor
sbb
sahf
cmp
pop
or
cmp
fs
or
or
mov
sbb
mov
pop
pop
or
stc
cmp
push
push
lods
mov
xchg
xlat
pop
cmc
xor
ja
and
jne
out
xor
sbb
or
pop
push
and
mov
ficoml
push
jae
sbb
fisttps
mov
inc
pop
pop
dec
xchg
mov
subl
faddp
xlat
das
xchg
rcr
aad
and
cmp
int
sbb
cwtl
out
scas
dec
xchg
push
mov
dec
in
jle
arpl
faddp
sub
je
test
test
and
notl
dec
push
faddl
dec
jne
mov
sub
fdivs
rcll
out
dec
mov
and
in
mov
call
xchg
and
pop
cmc
pop
xchg
adc
push
adc
popa
sbb
adc
shll
mov
ljmp
xchg
stos
inc
js
mov
mov
cmp
std
cmp
int
xor
pop
push
cmpsb
lods
pop
aas
hlt
xlat
cmpsl
push
and
out
outsb
mov
add
mov
pusha
and
jne
jns
jmp
aad
sub
mov
sbb
cmpsb
mov
xor
mov
movsl
outsb
dec
cmp
add
mov
cs
leave
adc
mov
out
mov
mov
mov
les
jae
repnz
cli
adc
mov
scas
das
cmp
pop
lcall
jg
mov
or
int3
pop
inc
and
lea
xor
sbb
cld
imul
push
jne
push
ja
lods
dec
gs
test
push
push
jae
scas
cmp
mov
rcr
push
mov
sbb
inc
sub
xchg
ret
sti
mov
int
add
inc
xchg
and
or
fsub
pushf
fstps
jns
sbb
xchg
in
mov
arpl
arpl
fwait
leave
lock
xor
sbb
dec
fyl2x
mov
cmp
fidivs
xor
jg
cmpsl
ljmp
out
cs
jnp
mov
fwait
adc
inc
xchg
je
scas
mov
push
cmp
or
fwait
bswap
mov
and
out
jae
enter
jl
push
cli
lret
stc
les
and
ret
pop
dec
lock
jmp
mov
fs
sahf
jle
inc
rorl
lds
popf
adc
xor
mov
enter
cmp
std
mov
dec
cli
xor
inc
cmp
fbstp
jo
or
ljmp
jg
lods
cmpsl
in
out
test
jg
ret
shlb
cwtl
mov
cmpsb
aad
jl
xchg
adc
cmpsl
stos
jno
sbb
scas
push
pusha
inc
push
cmp
in
fnstcw
mov
cmp
inc
inc
dec
pop
jo
xchg
loope
or
ret
out
rcr
adc
loopne
ljmp
xchg
add
xor
inc
flds
stos
pop
enter
aam
xor
fsubr
jbe
cmp
push
sub
repnz
jge
push
xor
jl
out
es
xchg
or
scas
mov
stos
mov
push
stos
ret
mov
sahf
js
jae
xchg
into
jle
dec
lret
xchg
dec
test
inc
mov
adc
shll
insl
stc
out
pop
popf
mov
adc
xor
in
push
cwtl
jo
test
sti
sub
shrb
mov
xchg
jae
lcall
mov
and
dec
out
mov
adc
and
mov
iret
dec
xor
dec
sbb
jle
dec
fidivrl
cmp
pushf
pop
pop
inc
mov
adc
xchg
out
ss
cli
mov
mov
jb
aam
xchg
mov
pop
in
jnp
ja
sub
xchg
xor
mov
sub
push
sub
rorl
ret
xor
jno
pop
or
mov
ret
jle
cmp
movsl
inc
or
lret
mov
push
dec
mov
mov
rol
loopne
nop
mov
jmp
pop
and
push
inc
pop
and
pop
sbb
sub
fistpl
mov
xor
aaa
fisubrl
in
cmpsb
sti
imul
outsb
add
lds
adc
xor
bound
xchg
mov
cmp
lods
push
int
imul
in
pop
movsl
faddl
jbe
js
inc
xchg
pop
mov
adc
xchg
mov
fdivs
add
xor
je
xor
ljmp
and
inc
and
and
xlat
mov
push
je
scas
lods
push
ret
adc
jo
cld
or
mov
movsl
mov
int3
bound
dec
mov
mov
pop
cmp
sub
and
jns
mov
repz
mov
mov
out
push
and
fstpl
jp
lods
mov
jge
push
enter
fistps
enter
cwtl
jb
jmp
and
ljmp
shrl
jne
jnp
in
lods
pop
lea
imul
mov
mov
scas
ds
adc
cld
in
mov
lahf
shl
iret
cmpsl
sub
shll
dec
movsl
jle
iret
aam
pop
jp
out
xlat
dec
inc
loopne
cmp
bound
lret
outsb
ds
lock
fsubr
rcrb
test
push
or
adc
fldl
cwtl
inc
push
sbb
frstor
movsb
fs
in
add
mov
and
jmp
jecxz
int3
hlt
ja
pop
sbb
ljmp
out
insb
sub
inc
lods
mov
repnz
mov
mov
jle
cs
scas
jl
ljmp
xchg
xor
sub
jno
ret
push
jg
sbb
xchg
mov
lret
cli
sub
iret
aaa
or
mov
insl
pop
jo
icebp
mov
jbe
jo
jg
pop
jl
sbb
mov
jbe
or
xor
out
in
pop
push
hlt
adc
pop
movsb
fimuls
cld
or
roll
lret
stos
les
lret
outsl
inc
rclb
in
fwait
sarb
icebp
xchg
mov
sub
add
movq
gs
leave
push
movsl
add
jl
add
adc
ficompl
ja
or
pop
sbbb
mov
imull
jns
xchg
mov
push
rcr
push
add
scas
push
cwtl
xchg
out
setno
cmp
daa
and
xor
push
jo
or
js
jnp
movsl
and
jge
mov
les
insl
cmovs
jg
add
or
pop
xor
inc
mov
out
sbb
cmc
test
mov
and
adc
mov
leave
mov
push
daa
std
mov
mov
inc
test
or
sbb
xlat
stos
mov
lcall
jns
and
lret
fwait
inc
ret
sbb
cmp
mov
xchg
inc
stos
xchg
adc
in
pusha
stos
inc
mov
movsb
push
mov
dec
pop
mov
jb
icebp
lcall
push
pminub
aad
mov
lcall
cli
push
lahf
xor
outsl
out
punpckhwd
rorl
insl
es
lahf
lcall
in
pop
mov
aas
in
mov
sub
faddp
or
in
cltd
push
dec
or
les
or
pop
and
push
fsubrp
mov
pop
fcomip
lock
insl
cltd
push
dec
das
or
shlb
out
jle
push
inc
lret
mov
pop
xchg
or
fbld
nop
stc
mov
adc
pop
jl
enter
mov
int3
imul
jge
je
imul
shll
addr16
decb
fwait
jns
loopne
rorb
mov
repnz
inc
fcmovnb
xlat
xchg
mov
inc
mov
test
outsl
js
fmull
stc
jl
jle
aaa
popa
xlat
jle
sbb
ds
sti
fmull
sbb
or
ret
pushf
ja
inc
stos
ja
xor
int3
xor
mov
push
xor
jo
cmp
add
adc
popf
mov
ss
mov
mov
sarb
fildll
push
out
cmp
push
xor
xor
leave
mov
push
pop
ret
cs
popa
mov
push
mov
xor
inc
pop
pop
mov
mov
jecxz
push
pushf
push
push
in
lcall
mov
mov
mov
add
xchg
scas
jmp
fists
jnp
jp
lcall
and
ror
xlat
inc
cmp
pop
lods
sbb
add
sahf
cmp
movsb
cld
sahf
xchg
add
and
sarb
das
cli
in
lea
out
jmp
jmp
mov
jne
sbb
mov
insb
ficoms
addr16
in
and
stos
cmc
jns
pop
and
ds
subb
into
mov
aad
sbb
cltd
sbb
xchg
out
ja
jge
xor
add
out
inc
dec
ja
testl
dec
dec
sub
ret
push
fwait
sbb
jno
pop
sub
sub
mov
dec
xor
movsl
cmp
xchg
push
pusha
jb
pop
or
mov
cmp
lret
les
adc
jecxz
sub
je
sbb
mov
cmp
outsb
fidivl
out
pop
push
fcoml
dec
or
fimuls
mov
pop
jo
ss
push
fnstsw
push
mov
xchg
pop
jne
and
sbb
loope
and
es
jg
or
xchg
jge
adc
pop
lods
mov
push
mov
pop
pop
lcall
mov
mov
mov
mov
jmp
fisubl
pop
fdivp
sbb
jle
push
add
int
cmp
or
jp
movsl
push
mov
xlat
push
movsb
pop
push
hlt
jg
jecxz
ljmp
jns
ja
push
shll
arpl
sub
or
mov
push
xchg
jb
and
icebp
xor
popa
sbb
lock
add
insb
mov
pushf
push
into
jge
sbb
rolb
aaa
filds
xchg
mov
fs
rcrb
pop
xlat
fst
gs
loop
jae
mov
push
mov
leave
mov
sbb
adc
sti
pop
popa
fldt
jb
jmp
divl
push
mov
or
shll
cmp
shrb
jnp
inc
xchg
sbb
loop
inc
bound
pop
adc
dec
hlt
and
lahf
xor
xor
mov
jbe
shrl
jmp
pop
push
cmpsb
push
dec
xor
imull
imul
mov
adc
cmp
push
xchg
shl
adc
push
ss
es
cmp
sbb
dec
out
jae
es
jnp
arpl
add
in
lahf
xchg
pop
adc
arpl
adc
mov
push
cmp
js
mov
dec
icebp
pop
push
out
iret
lds
das
dec
sbb
and
subb
dec
adc
idivb
xchg
mov
xchg
repz
xchg
xchg
ja
xor
ret
rorl
jmp
call
mov
adc
pusha
stc
repnz
jecxz
jns
mov
es
es
in
gs
fucom
xlat
sti
mov
dec
push
jge
lea
int
fimull
jp
lods
ss
xchg
arpl
je
mov
repz
movsl
sti
roll
cwtl
push
fmull
mov
and
mov
or
xor
sbb
pop
lret
cmp
xor
and
movsl
xchg
sahf
repnz
cmpsb
xchg
bswap
cs
cmpsb
pop
aam
stc
imul
bound
cli
dec
lahf
sub
push
insb
inc
lods
lods
xchg
lcall
fsubl
loop
inc
xchg
fwait
push
mov
xchg
cmpb
adc
and
xor
outsl
outsl
pop
imul
pop
mov
int3
dec
sarl
push
jmp
and
loope
shrb
jle
imul
clc
lods
adc
mov
xor
movsb
mov
pop
sarb
dec
dec
xor
dec
or
push
imul
adc
mov
sub
fidivrl
ud0
inc
cmp
icebp
stc
cwtl
mov
loope
ds
jg
sbb
imul
lods
xor
pusha
xlat
dec
scas
jl
movsl
mov
or
fistps
push
fwait
xchg
stos
les
hlt
mov
repnz
mov
add
push
jbe
rcrb
nop
mov
test
inc
xor
jle
test
dec
cmpsb
inc
add
jecxz
mov
pinsrw
out
repnz
push
xor
cs
dec
xor
in
pop
pop
pop
mov
cs
jo
ret
or
les
mov
or
daa
in
popf
fidivl
cmp
outsl
sbb
sti
add
pop
xor
test
lea
mov
cmpsl
mov
jns
ds
mov
es
pop
lret
pop
repz
push
data16
push
xchg
out
mov
push
jp
dec
call
cmpsb
mov
pop
xchg
xchg
xor
and
xchg
insb
push
lds
mov
jmp
mov
cmc
test
aaa
scas
negb
imulb
mov
testb
mov
mov
hlt
iret
pop
sahf
or
test
pusha
dec
js
xchg
lock
sbb
mov
adc
adc
mov
inc
inc
mov
sbb
aam
xchg
mov
and
mov
cmp
mov
imul
lods
jnp
rorb
lcall
push
push
addl
inc
or
push
inc
repnz
data16
rcll
cmp
inc
mov
sub
xchg
std
jb
adc
ja
adc
lods
aaa
lods
or
sbb
dec
lret
test
leave
sub
clc
aad
hlt
add
cmp
fistl
sbb
pop
stc
dec
mov
cltd
jnp
mov
or
mov
xchg
ret
dec
orl
cmp
push
push
xchg
loopne
ret
call
shlb
push
js
or
and
movsb
shr
ljmp
lds
cmp
scas
add
mov
mov
sbb
xchg
pop
rcr
rorl
and
jecxz
xchg
fildll
sub
inc
ljmp
mov
sub
test
sub
push
ja
addr16
cmp
inc
jl
pop
mov
jle
iret
fimuls
stc
into
sub
mov
fcoms
add
sti
inc
push
cmp
adc
adc
add
adc
xchg
adc
sub
jnp
hlt
inc
pop
aaa
jecxz
loopne
xchg
fadd
rorl
mov
mov
repnz
cmpsl
jmp
add
and
aaa
inc
leave
mov
movsb
stos
ss
add
out
sbb
mov
xlat
sbb
aaa
lea
int
cmpl
pop
in
add
cmc
test
outsl
or
jp
fisubrl
pop
mov
inc
push
xor
pop
cwtl
out
jne
lea
fisubrl
xor
stos
or
xchg
fsubrl
jae
mov
push
in
or
and
and
sbb
iret
je
adc
mov
arpl
add
sbb
mov
push
js
mov
cmpsl
push
sar
fildl
ret
jns
xchg
lods
add
push
fstpt
or
xorl
mov
ss
icebp
sub
xchg
dec
xor
pusha
push
add
or
push
pusha
push
sub
sbb
pop
jbe
add
sub
mov
inc
fnstcw
addl
mov
fucomi
cmp
insb
ja
push
push
sub
push
shll
sub
mov
cmp
sbb
inc
stos
lock
fs
daa
mov
add
stc
sub
add
mov
or
pop
adc
dec
inc
xchg
sbb
js
push
push
rcl
jmp
pop
xchg
dec
or
sbbb
js
cmp
sbb
xor
mov
push
xchg
or
sbb
scas
adc
mov
xchg
mov
sub
adc
scas
push
sbb
jb
jp
pop
js
sub
bound
adc
sbb
mov
mov
dec
mov
xchg
les
roll
adc
cmc
add
scas
push
decb
and
mov
and
push
pcmpeqw
addr16
pop
push
jns
ret
inc
pusha
mov
mov
ret
mov
loop
cmpsb
rcll
adc
mov
into
mov
divl
mov
cmp
push
call
pop
repnz
cmp
and
jnp
int3
jbe
mov
sbb
inc
sti
xor
xor
stc
imul
dec
outsb
movsl
jne
jbe
mov
push
inc
sub
mov
fdivl
ret
ret
mov
test
ss
adc
push
imul
dec
ljmp
mov
jo
test
sub
std
dec
dec
jns
ljmp
mov
cmpl
cltd
push
mov
sub
repnz
sbb
fmul
ljmp
jecxz
in
xchg
sbb
mov
jl
aam
sub
enter
popf
sbb
cmp
jae
inc
mov
lds
rcr
adc
pop
out
das
adc
inc
fimuls
push
pop
fistl
es
mov
sub
add
xor
shrb
inc
pop
test
sar
jg
inc
mov
lahf
sub
loopne
xor
mov
aam
dec
dec
das
rclb
into
pusha
movsb
cmp
jo
sbb
test
ret
scas
sbb
cs
leave
sar
cmpsl
out
out
hlt
hlt
mov
nop
jns
cmp
stc
jno
mov
lret
mov
or
shll
mov
mov
or
out
sbb
xchg
cmpsb
imul
sub
push
enter
rcrb
nop
dec
and
rep
sub
cmp
aad
ds
sar
mov
leave
ret
mov
repnz
mov
iret
jecxz
ret
les
les
test
inc
ja
mov
mov
test
and
push
mov
mov
loope
adcl
outsl
add
fstpt
mov
sub
and
xor
out
in
ja
data16
add
cs
ja
nop
jb
mov
test
loope
jp
jmp
cmp
mov
pushf
mov
jae
dec
adc
mov
in
aam
pop
popl
inc
dec
fmuls
scas
xchg
cmp
jne
push
sbb
test
sti
lods
stos
mov
jo
jae
jne
xor
xchg
adc
cmc
jne
jnp
cmc
es
incb
jg
add
cmc
jnp
mov
mov
test
stos
gs
sub
cmp
inc
adc
jg
ljmp
adc
pop
stc
add
mov
insl
or
cmpsl
mov
lods
push
cs
mov
cmp
inc
sbb
and
or
xor
fucomi
out
iret
aad
xchg
cli
cwtl
lret
push
out
notb
jnp
shrl
sbb
aaa
cmp
insb
repz
jno
in
out
sbbl
jg
pop
test
or
jp
xchg
lcall
or
adc
cmp
imul
loope
adc
mov
mov
mov
jl
dec
aad
jae
aad
mov
and
cmp
enter
ret
mov
iret
lods
pusha
repz
lods
int
test
test
jnp
ja
and
push
sarl
push
dec
push
and
insb
mov
inc
repz
out
out
stc
and
lret
les
inc
aaa
shr
mov
sbb
mov
dec
daa
xor
cmp
sub
lea
cmpsl
iret
iret
dec
push
mov
cli
pop
shll
push
in
fists
adc
sub
add
mov
xor
xor
jns
mov
fmuls
testl
sub
pop
ret
imul
shl
push
mov
or
add
ljmp
mov
mov
and
jne
jl
inc
mov
cli
pop
or
mov
pop
cmp
rorl
xor
mov
divb
imul
jge
xchg
pop
pop
clc
inc
pop
pop
stc
mov
push
sbb
popf
pop
frstor
add
stos
cmp
or
roll
jl
inc
test
and
xchg
jp
addb
rcll
push
cli
add
jecxz
jle
mov
cld
sbb
outsl
nop
sub
inc
push
leave
and
xor
outsl
sbb
fwait
ljmp
popl
arpl
in
sahf
mov
out
ja
stos
pop
rol
and
jb
inc
pop
mov
shl
and
sbb
imul
xor
or
loope
xorb
mov
sub
cmp
fsts
inc
jl
sarl
insl
decl
test
adc
pop
insl
fwait
xor
sub
adc
scas
cwtl
or
mov
movsb
sbb
pusha
xor
les
add
cmp
ss
jmp
lret
test
xchg
fisubs
loope
push
repnz
into
gs
ds
scas
add
mov
scas
sub
sbb
cmpl
xchg
int3
insb
cmc
xchg
inc
add
push
add
cli
mov
jp
sahf
lea
mov
rol
mov
xchg
mov
xchg
repnz
lcall
negb
iret
rolb
cmc
ror
xchg
lock
out
inc
imul
and
clc
movsb
pop
and
or
test
jae
mov
fiaddl
and
push
pop
cmpsl
cmp
cmp
leave
pop
pop
scas
or
orl
xchg
pop
lret
inc
sbb
push
mov
dec
pop
sbb
xchg
push
dec
add
fbstp
ficoml
fwait
out
popf
inc
mov
or
scas
clc
mov
loopne
sbb
neg
lods
mov
inc
push
mov
sbb
rolb
mov
data16
sbb
jns
mov
out
jmp
jno
sbb
cmc
sbb
mov
rolb
sbb
mov
loop
rcrb
xor
filds
or
fs
inc
test
sarl
xchg
jns
and
cwtl
es
in
cmp
ljmp
lods
mov
bound
and
std
sbb
test
jmp
ds
mov
ds
das
push
push
addb
dec
movsb
test
dec
jae
xchg
adc
xlat
add
sbb
in
jecxz
in
loopne
int
fcompl
sbb
test
in
dec
mov
dec
fs
int3
icebp
lds
cwtl
inc
sbb
pop
lret
cmp
and
xor
or
filds
pusha
mov
jg
sti
into
clc
cli
mov
adc
sub
mov
bound
loopne
pop
cld
jbe
lods
xor
adc
sbb
iret
mov
and
sbb
adc
sbb
xlat
inc
and
cmp
fwait
push
bound
push
dec
outsb
jle
pop
pop
test
mov
std
ds
fimull
mov
jno
dec
lcall
mul
cltd
fmuls
pop
test
dec
sbb
insb
cld
jmp
cld
mov
lahf
mov
push
leave
or
cmp
cltd
add
outsb
xor
ficoml
daa
cmp
popa
mov
xor
inc
idivb
fldlg2
test
cmp
mov
mov
stos
pop
mov
arpl
adc
or
jno
xlat
jb
mov
fstps
jnp
xchg
jecxz
add
enter
rcrl
dec
mov
subl
dec
inc
mov
adc
push
movb
pop
adc
push
cmp
repnz
cmpsl
lods
in
mov
inc
mov
jno
lahf
adc
stos
or
jnp
xor
jmp
sbbb
mov
cmp
cmpsb
and
ret
pop
outsb
shlb
sbb
push
arpl
xor
mov
aaa
lock
mov
dec
shll
mov
shl
and
int
cwtl
icebp
sbb
mov
int3
push
insl
and
xor
cmc
jmp
jno
xchg
lock
lret
sbb
cwtl
jp
lods
fcomip
idiv
scas
mov
popf
push
cltd
in
je
mov
loop
push
xor
jl
pop
fadd
xchg
xchg
pop
arpl
outsl
adc
icebp
add
imul
dec
add
sub
jl
push
sar
mov
scas
jns
les
mov
and
mov
outsb
xor
leave
xor
sahf
cs
std
loope
loop
cld
and
add
notb
incb
jne
jle
lahf
cli
loopne
fnstenv
std
shl
scas
mov
fxch
cs
xor
ljmp
mull
leave
aad
xlat
dec
icebp
and
cmp
bnd
ds
inc
fsub
pop
fists
pop
cs
jo
adc
xchg
push
dec
mov
or
test
sub
inc
adc
jb
ret
mov
push
inc
add
xchg
je
mov
pop
fs
stos
xchg
lea
mov
mov
xchg
dec
int3
aam
dec
jmp
fcmovu
and
or
inc
orb
push
xorb
sub
insb
and
divb
popa
xor
test
inc
pop
les
pop
movsl
fsubr
push
pop
adc
xchg
adc
lahf
leave
pop
cwtl
push
lods
or
inc
adc
xchg
xor
int3
mov
mov
pop
movsl
or
adc
test
into
loopne
mov
lock
push
cmp
sbb
mov
adc
hlt
and
dec
inc
dec
cmp
insl
lahf
repz
in
iret
sbb
jb
pusha
nop
or
nop
fisubrs
adc
frstor
call
ds
jnp
xor
pop
bound
sbbl
je
and
rcrl
dec
pop
mov
xchg
pop
inc
sahf
mov
cmp
sub
sbbb
xor
jae
push
cli
sub
xor
or
mov
jb
les
cld
gs
inc
loop
xchg
mov
bound
in
pop
ds
mov
mov
lds
lret
data16
mov
repz
dec
fwait
dec
fldcw
adc
jo
or
cmp
cld
jge
adc
cmpsl
inc
test
loope
xchg
fcoml
pop
aas
fdecstp
filds
aas
inc
sbb
insb
adc
pushf
loop
cld
gs
add
fwait
mov
add
xchg
daa
mov
or
imulb
mov
repnz
gs
fidivrs
lret
mov
and
jae
sahf
jno
shlb
adc
test
pop
push
and
out
outsb
out
fmull
pop
rcr
loopne
mov
out
std
bound
jae
jp
cmp
js
sbb
das
cld
imull
mov
flds
push
clc
add
push
xchg
out
out
adc
push
sahf
stos
pop
pop
pushf
orl
cltd
xor
repnz
pushf
inc
adc
cli
mov
xor
pop
jle
icebp
ljmp
cltd
stc
sbb
sti
mov
jmp
pop
dec
test
jo
dec
lret
fstpl
inc
sti
movsb
shll
jp
mov
cld
cld
xchg
lds
loop
push
pop
aam
cmp
ret
aas
mov
and
in
mov
gs
icebp
sbb
and
lcall
and
xor
push
xchg
in
cli
out
xchg
add
xor
and
dec
sub
ds
shl
xchg
cmpsl
xchg
cmpsl
adc
mov
jg
jns
cs
testb
imul
jmp
mov
loopne
add
sbb
sub
in
ss
or
sub
jo
adc
add
mov
push
fsubs
or
or
adc
sbb
test
pop
popa
nop
data16
lods
mov
or
stos
lds
inc
sub
inc
and
leave
ror
and
call
movsl
mov
cwtl
or
add
cs
data16
mov
mov
and
and
rolb
pushf
add
sub
mull
sbb
push
cli
sbb
mov
pop
or
push
xor
test
adcb
push
nop
xchg
cmc
rclb
xchg
shl
push
stos
ss
data16
push
in
mov
imul
push
insb
pop
out
adc
jl
push
cmc
mov
jns
ret
and
mov
push
sub
les
inc
sahf
pop
inc
dec
out
jbe
fcoms
fwait
add
loope
or
fmuls
xor
stos
cli
fildll
cs
jae
repz
dec
das
lock
ret
sbb
lcall
aas
dec
ret
pop
psubb
cmp
test
jg
pop
inc
mov
push
pusha
xor
bound
mulb
fs
std
cmpsl
mov
call
sti
push
stos
loope
jo
xor
loope
in
inc
push
gs
pop
popa
test
inc
in
lret
das
sub
add
push
out
insl
xchg
adcl
arpl
xor
inc
xchg
aam
jno
push
jg
adc
icebp
mov
adc
pop
inc
pop
scas
dec
scas
mov
mov
xor
or
test
fwait
pop
mov
pop
jg
aam
pop
adc
inc
mov
fldt
or
xchg
push
rolb
les
jno
out
sub
sub
xor
and
aad
xchg
gs
jle
inc
outsl
pop
test
pop
mov
sub
aad
mov
sarb
std
pop
adc
cmpsb
andb
jmp
add
pop
lock
std
movsl
inc
std
adc
rcr
insb
jo
jo
xchg
stc
movsb
or
jnp
pop
popa
in
out
or
movsb
aaa
cmp
ud1
sub
cwtl
es
cld
lret
bound
movl
pop
fsubr
sub
ja
nop
xchg
jmp
popa
out
mov
dec
or
imul
notl
addr16
xchg
mov
in
je
push
stc
inc
enter
fisttps
pop
pop
jg
xor
shl
push
pop
mov
mov
add
scas
popa
cltd
push
mov
add
jns
int
mov
pop
mov
fs
add
sbbb
fimuls
fwait
loopne
outsl
push
adc
pop
sub
pop
pop
out
push
cmp
mov
mov
or
aas
xchg
dec
outsb
ret
out
inc
xchg
pop
out
or
in
jge
aas
loope
jb
aam
mov
mov
mov
cmp
adc
add
es
jmp
jle
sbb
loope
loopne
adcl
jmp
push
jns
fbld
loop
or
jl
test
push
inc
mov
outsb
les
movsb
in
sub
pop
addr16
in
pop
mov
push
adc
cld
mov
lods
pop
jnp
and
inc
adc
xchg
les
loop
dec
mov
jb
pop
mov
dec
fistpl
bsf
mov
pop
je
mov
scas
popf
jg
out
out
inc
in
loopne
scas
xchg
jae
mov
aam
mov
orb
xchg
push
js
fnstenv
xor
les
dec
into
in
stos
aad
stos
aad
cmp
mov
fcmovu
les
leave
int
pop
sub
out
fwait
out
js
xchg
stos
loopne
aaa
jns
sti
imulb
hlt
xlat
push
dec
mov
rcl
int3
or
ror
in
pop
jae
lahf
movsl
sti
jae,pn
xchg
mov
out
dec
lods
iret
mov
shll
rolb
xor
in
pop
stc
fists
mov
push
lret
into
in
jp
adc
adc
loop
jbe
es
dec
vpmulhuw
jp
int
es
insb
icebp
jo
test
sbb
mov
cld
cld
dec
orl
out
clc
dec
xor
jae
clc
sbb
mov
or
lcall
imul
and
pop
sub
adc
inc
add
sub
push
mov
cmpsl
xchg
push
or
mov
xchg
cmp
xor
fstpt
and
test
push
mov
add
fcomps
jp
mov
cmp
cmp
lcall
in
sahf
sub
std
and
nop
dec
dec
aam
xor
mov
mov
push
cmc
sbb
out
pop
mov
gs
out
cwtl
cmp
scas
je
sahf
xchg
push
push
gs
cmpsl
dec
sarl
mov
dec
adc
test
aad
aad
jno
aam
push
int
testb
test
xchg
movsl
push
push
jbe
repz
cmp
jl
cmp
push
sub
negb
and
into
add
fsubl
addr16
add
jg
lods
mov
xor
jp
stos
cld
jae
inc
pop
mul
cmpb
push
out
sti
xchg
and
sub
pop
mov
loope
les
inc
daa
adc
jecxz
mov
mov
pop
cmp
or
xor
rcll
or
movsb
xchg
ret
mov
gs
xchg
add
xchg
sub
jle
and
sbb
nop
sbb
push
gs
inc
jle
andl
pop
ds
fidivrl
nop
lret
adc
push
push
iret
shll
insl
outsb
sub
inc
pop
xchg
mov
cmc
mov
movsl
adc
push
movsb
movsb
xchg
test
pop
cmp
loop
inc
shrl
cmpsb
fcmovbe
xor
out
mov
lcall
addl
xchg
mov
mov
sahf
dec
adc
sub
pop
imulb
push
popa
shr
shlb
adc
pop
shr
lds
pop
loop
or
filds
cmp
jnp
push
jne
push
movsb
sub
adcl
int
inc
and
gs
mov
icebp
jl
xchg
push
movl
mov
push
adc
or
cwtl
xchg
inc
add
inc
add
and
addb
add
adc
inc
add
jo
loopne
loopne
cli
push
xchg
movsb
jl
inc
and
mov
jp
mov
inc
xor
jecxz
push
repnz
mov
xor
mov
bound
or
aam
xor
sbb
sarl
ljmp
push
sahf
call
mov
or
movsl
aas
cwtl
in
and
mov
cmp
aam
or
std
mov
and
orl
inc
cmp
test
int
sub
jb
mov
add
inc
dec
push
xlat
inc
and
jne
jle
shrb
gs
mov
mov
mov
and
adc
iret
push
sub
mov
jnp
pop
ljmp
adc
sub
insb
ret
int3
outsl
mov
mov
in
sub
cmp
sub
mov
push
mov
sub
and
in
sbb
mov
popf
hlt
pop
sbb
hlt
mov
insl
int3
xchg
sub
jl
sub
push
push
enter
sbb
mov
dec
les
inc
add
scas
leave
aad
scas
xlat
shlb
jnp
mov
mov
js
dec
neg
js
aam
mov
inc
scas
mov
mov
daa
call
aam
cmc
icebp
mov
imul
adc
or
test
push
xchg
push
aad
sub
in
imul
dec
lods
and
bound
dec
fcomi
mov
in
aaa
sub
push
sahf
in
mov
cltd
mov
popa
loop
aas
push
icebp
lcall
mov
call
jbe
xchg
fwait
shr
jno
inc
test
repnz
iret
lcall
mov
or
fst
mov
cmovg
xchg
sub
lret
adc
mov
data16
rorl
pop
cmpsb
in
xlat
push
sub
jne
mov
sub
inc
ss
or
imul
inc
inc
mov
mov
jno
enter
cs
push
adcb
or
mov
stos
rcr
mov
push
cmpsl
mov
mov
sbbb
jns
add
stos
inc
dec
fwait
cmp
call
into
and
jne
sbb
cwtl
stos
filds
ret
rorb
and
sub
test
xchg
mov
xor
pop
mov
movsl
push
idivb
aad
nop
inc
cltd
hlt
les
imul
pop
lods
fimuls
jecxz
insb
sahf
shl
int3
outsb
inc
xchg
ljmp
or
daa
outsl
stos
mov
mov
mov
mov
test
into
in
pop
xor
int3
lret
mov
pop
cld
in
xor
dec
jl
jbe
xchg
nop
inc
fwait
dec
cmp
cmp
fistl
push
sbb
sub
insl
add
add
movsl
fcom
ret
fwait
je
cli
mov
sbb
paddsw
add
mov
pop
negb
xor
movsl
and
xor
lods
or
outsl
xchg
aaa
mov
pop
lea
dec
stos
into
cli
mov
loopne
testb
pop
rorl
mov
cld
mov
pop
fcoml
cwtl
push
mov
jge
fiaddl
imul
aas
fildll
jge
loopne
lret
pop
stos
inc
mov
add
cmp
mov
ficompl
loop
jp
arpl
mov
inc
xor
lock
pop
mov
jmp
mov
jmp
sahf
mov
push
fcomps
and
and
cld
jle
pop
cmp
aaa
insl
fdiv
fiaddl
mov
test
outsl
push
mov
sbb
jmp
sbb
into
mov
shrb
sar
push
jmp
sbb
sbb
test
out
daa
lret
jg
and
or
sbb
adc
stos
mov
pop
in
sbb
cmp
xor
out
sahf
push
jp
jb
mov
lea
es
add
push
dec
test
daa
and
lcall
js
insb
arpl
cmp
jnp
adc
mov
dec
xchg
push
int
adc
adcb
fcomp
shl
imul
ja
ljmp
mov
or
shlb
push
test
imul
cmp
daa
push
push
loop
shrb
jp
les
mov
test
xchg
and
lock
loope
push
pop
int
or
cmp
jns
pop
dec
ficompl
test
dec
push
mov
pop
div
imul
pop
push
cmp
sbb
and
add
inc
int
push
int
push
lcall
add
inc
fistl
lret
xor
and
xor
mov
sbb
pop
scas
lods
push
dec
nop
enter
pop
mov
jle
mov
xchg
mov
mov
push
dec
repz
mov
mov
dec
sbb
test
fidivs
vcvttps2dq
movsb
pop
jge
mov
sbb
cmp
and
jmp
movsb
pushf
fistl
jnp
sti
push
out
out
xor
mov
add
mov
push
inc
mov
adc
leave
mov
bound
scas
pop
out
imul
xchg
mov
mov
push
je
mov
adc
xchg
add
outsl
xchg
add
out
nop
jne
hlt
subb
pusha
cmpsl
mov
lret
sahf
mov
rorb
sbb
mov
mov
mov
pop
lock
dec
push
or
dec
fisubs
sbb
pop
mov
pushl
fdivr
xchg
sbb
xchg
jmp
sub
push
push
dec
test
mov
mov
outsl
inc
jecxz
mov
pop
and
dec
mov
stos
subl
mov
jp
inc
inc
adc
je
ja
iret
cmp
xchg
addb
dec
mov
or
std
stos
loop
cmp
shlb
mov
xor
lds
mov
mov
je
hlt
sbb
test
mov
out
loop
sahf
pop
push
addr16
mov
mov
cmpsb
loope
cli
out
ljmp
xor
cmp
rcl
mov
add
xor
pushf
nop
jle
and
push
adc
ss
jg
xchg
in
xor
add
push
faddl
dec
out
ja
pop
lret
jmp
push
enter
xchg
sbb
lds
adc
xchg
sub
cmc
fistps
jbe
std
clc
stos
jmp
insb
cmp
inc
mov
fcoms
add
fisubs
mov
add
lods
int
jge
lods
loop
cwtl
push
sahf
test
sbb
xchg
decl
cwtl
pop
jno
xor
fiadds
inc
js
fcoml
dec
mov
scas
mov
jnp
jle
jo
hlt
sub
hlt
subb
hlt
test
int
sub
insl
push
xchg
fldt
mov
movsb
and
loop
dec
mov
cmc
scas
mov
iret
xchg
int
in
jle
or
int3
lds
push
dec
cmp
dec
and
jno
iret
fnsetpm(287
in
mov
scas
add
sbb
les
pusha
fwait
shll
fsubrl
add
fsubr
imul
test
aam
xor
add
mov
fiadds
in
push
mov
sahf
adc
push
ljmp
mov
mov
movb
lcall
popf
mov
push
xor
dec
xlat
js
dec
sbb
js
mov
adc
pop
mov
xchg
mov
xchg
pop
addr16
cmp
dec
pop
cmc
scas
sti
jle
mov
mov
in
dec
out
cltd
fdivrs
mov
lcall
and
pop
test
sub
orb
lret
imull
xchg
clc
aas
popf
inc
or
enter
lret
xor
insb
cld
inc
xor
mov
sbb
es
dec
xchg
fldt
out
loopne
test
adc
dec
mov
inc
push
gs
hlt
cmp
inc
inc
fwait
aaa
dec
and
cwtl
jns
dec
sbb
jb
test
testb
pop
outsl
jecxz
cmp
xchg
lcall
subb
mov
mov
popl
pushf
stos
mov
testb
lock
pop
xor
movsl
dec
loope
iret
push
imul
stos
mov
insl
outsb
sub
fmull
add
mov
ja
mov
roll
imul
fidivrl
leave
clc
sub
lods
adc
jg
nop
pop
out
sub
inc
in
cmp
in
aad
sarl
shlb
lcall
into
test
mov
mov
mov
testl
push
loope
stos
push
cs
les
sub
sbb
mov
stos
add
xchg
pusha
jns
outsl
test
mov
fs
push
icebp
cld
xchg
inc
shrl
xchg
pop
add
or
xchg
imul
fistps
add
adc
mov
sub
pop
loope
or
pop
push
push
cltd
aaa
fiadds
or
outsb
xchg
jnp
sbb
sbb
inc
sahf
fisttpl
mov
mov
in
aaa
sti
das
dec
es
out
insl
fisttps
xchg
fbld
fucom
ret
jns
sahf
mov
ja
dec
push
scas
rcrb
xchg
adc
cmp
dec
ds
shll
shlb
inc
test
insb
dec
push
push
and
jg
sarl
push
push
inc
mov
movsl
aam
ret
inc
and
push
sbb
into
rcr
push
in
push
and
pop
mov
shlb
xor
lds
xor
sbb
movsl
lods
int3
push
lret
and
mov
dec
test
scas
int
pop
ret
or
mov
push
adc
popf
and
xor
imul
inc
add
rorl
ret
into
les
inc
xchg
mov
inc
iret
or
jne
jecxz
push
int
mov
mov
in
xchg
or
inc
mov
or
call
adc
dec
lods
inc
test
testb
insl
sub
andb
lock
dec
jge
in
fiaddl
push
adc
mov
sbb
aam
lock
shrb
lea
out
jo
dec
pop
add
xchg
sahf
inc
fwait
mov
das
imul
sub
in
push
pop
inc
adc
or
cmp
jl
mov
or
push
ret
fcmovb
jns
xchg
sahf
std
rcll
rorl
ss
xchg
inc
inc
xchg
pop
sbb
add
test
sbb
rclb
out
cmpl
cmp
and
mov
sbb
sub
sub
fs
jg
inc
sub
push
jmp
xchg
test
fiaddl
in
imul
cltd
dec
push
mov
dec
add
and
mov
mov
cltd
sbb
out
and
cmp
repnz
out
data16
aam
and
outsb
xorb
jmp
in
jmp
mov
push
pop
dec
xchg
adc
sub
or
repnz
xor
xor
adc
mov
push
leave
mov
cmp
mov
mov
cmp
xchg
adc
aad
xchg
jl
lea
ds
shll
ds
mov
or
xchg
nop
lahf
lret
cmp
in
lret
mov
and
push
ja
mov
xchg
cs
push
mov
scas
jp
test
push
add
or
xor
jbe
xchg
movsb
adc
push
push
jbe
test
or
xor
push
jb
mov
mov
dec
enter
inc
pusha
jge
cltd
cld
bound
xchg
xchg
insl
cmp
neg
cmovs
jg
fwait
aam
jo
cli
add
js
jle
div
sub
mov
and
out
mov
push
inc
push
sbb
fwait
inc
out
adc
inc
out
or
in
push
stos
push
scas
pop
ja
jae
pop
fsubr
cltd
filds
sbb
test
test
bound
mov
sub
fisubrs
orl
lret
adc
jmp
pusha
lret
jmp
in
xchg
dec
mov
jae
cld
cli
adc
add
mov
or
xor
inc
sbb
fdivl
push
mov
cmp
adc
sbb
push
mov
bound
dec
lcall
or
rcrb
clc
cld
push
movsl
ljmp
fdivrl
jmp
or
jmp
jno
xchg
pop
inc
mov
pop
pushl
xchg
test
aam
pusha
mov
dec
adc
push
mov
pusha
add
lock
push
push
xlat
loope
inc
cmp
pop
cld
sbb
xchg
jge
or
jno
jae
mov
push
and
das
out
cmc
lcall
test
mov
jne
leave
add
stos
es
jmp
lret
mov
test
mov
cli
cltd
add
fdivl
push
cld
arpl
xchg
xor
je
mov
jl
jae
inc
dec
jbe
movsb
int3
dec
outsl
xor
pop
cmpsl
sbb
lock
add
push
shll
push
xchg
jb
pop
fwait
popf
cld
sub
pop
jnp
movsb
das
push
inc
scas
dec
cmp
lds
movsl
aam
fnstsw
shlb
push
repz
sub
mov
pop
xlat
arpl
push
mov
mov
xchg
dec
dec
es
dec
xchg
jge
ja
aas
aad
gs
fdivl
out
subl
popa
adc
dec
inc
jmp
xchg
lcall
cmp
ret
push
repnz
lods
sbb
jbe
rclb
cwtl
mov
sbbb
cld
mov
mov
cmpsl
inc
push
or
jns
mov
std
sahf
stos
pop
sbb
hlt
outsl
inc
repnz
add
mov
push
lea
inc
sbb
stos
add
cli
ret
insb
addb
rolb
andb
or
or
dec
add
movsb
addr16
pop
mov
fnstenv
sub
add
lret
enter
jmp
fcmovnb
insb
test
and
addl
cmpb
and
and
in
pop
jnp
pop
mov
cmp
mov
dec
xchg
mov
shll
push
adc
fwait
jb
cmp
incl
cmp
outsb
gs
inc
and
enter
pop
std
pop
or
sbb
loopne
popf
loope
das
enter
cld
test
int
int3
inc
push
shll
lret
cmp
xor
cmp
lcall
clc
push
xlat
lds
popf
cmpsb
mov
imul
xor
pop
xchg
aad
jae
bound
xor
jbe
xor
mov
dec
adc
sub
les
push
pop
pushf
ror
ljmp
in
fiaddl
xor
ljmp
outsb
mov
movzwl
adc
inc
fwait
loop
lret
jns
out
mov
push
arpl
jo
arpl
lds
lcall
fcomp
test
fcoml
add
and
mov
or
sahf
mov
pop
jo
xor
ret
fs
sbb
mov
xchg
push
sbb
push
lods
and
cwtl
mov
push
push
in
fmulp
fsubl
jne
out
mov
inc
inc
fs
ret
out
inc
push
jmp
cmp
lea
pushf
aad
push
inc
jg
pop
popa
xor
xchg
and
sarb
push
adc
fnstcw
pop
xchg
push
loopne
mov
push
daa
ret
call
jo
jmp
mov
sub
add
psadbw
enter
dec
out
mov
andb
inc
mov
xchg
add
adc
fldt
sbb
lods
std
clc
push
mov
negl
rcrl
dec
push
mov
repz
pop
sub
inc
mov
cmpsb
lods
add
pop
pop
jge
insl
lcall
lea
pop
clc
jp
xor
jae
jbe
adcl
pop
cld
fldl
mov
inc
and
mov
push
ret
out
imul
xlat
jmp
mov
or
xchg
fisubrs
xchg
orb
xchg
cmp
pop
rolb
lcall
cs
mov
or
mov
repz
push
sbb
mov
repz
sub
idivl
or
popa
add
lods
cmp
fwait
loop
shll
pusha
push
mov
sbb
aam
jge
mov
push
stos
sbb
nop
stos
loop
shll
mov
hlt
mov
xchg
bound
fnstenv
arpl
xchg
mov
pop
mov
mov
cmp
sbb
cmp
aam
mov
jns
orl
jecxz
hlt
stos
loopne
or
push
sahf
pushf
notb
dec
lret
jecxz
rorb
in
and
mov
or
inc
lahf
mov
cmpsl
xchg
aad
nop
test
push
subb
daa
inc
sbb
sub
jle
sbb
pop
dec
fcoml
pop
mov
xchg
adc
pop
jg
addr16
fs
imul
or
cmp
ja
xor
pop
or
add
cmp
xor
inc
mov
gs
push
sbb
mov
mov
push
mov
mov
dec
mov
sbb
cmpsb
inc
adc
out
lret
sbb
pop
mov
in
push
je
dec
pusha
sbb
lds
movsb
dec
mov
dec
and
aam
or
mov
dec
das
jmp
jae
or
repz
xchg
mov
push
pop
aad
mov
inc
call
iret
mov
pushf
push
mov
mov
dec
xor
addr16
das
or
subl
shll
xchg
cld
mov
cmp
insl
shlb
pop
pop
mov
frstor
adc
xor
and
mov
pop
pop
pop
mov
mov
pop
inc
cmp
les
push
fadd
xor
aas
mov
add
xchg
inc
vfmsubadd213pd
and
lcall
je
mov
push
jecxz
shlb
lds
aaa
mov
popf
test
sub
mov
sub
lds
push
fwait
add
test
cltd
mov
xor
cwtl
ds
push
or
push
push
jb
mov
adc
inc
push
sbb
sar
fwait
cmp
fucomip
sbbb
xchg
mov
mov
jecxz
inc
sahf
clc
mov
inc
aad
popa
adc
mov
sti
das
xchg
shll
addr16
add
cmp
aaa
data16
push
inc
in
testl
jae
fcompl
jg
pop
add
push
add
lret
aad
jg
rcl
repz
and
sub
icebp
lock
pop
inc
fimuls
jns
decl
fldcw
dec
dec
mov
xchg
insl
sahf
dec
lea
mov
push
jno
mov
and
sub
fwait
shlb
rolb
push
mov
pusha
push
cltd
push
push
aas
cmp
jns
sbb
cmc
add
popf
add
sti
and
loope
cmpsb
int
jmp
jbe
scas
insl
js
cmp
sbb
jnp
push
lods
aas
dec
out
inc
push
add
imull
mov
pop
inc
and
das
adc
out
lahf
cmp
pushf
sub
xor
enter
je
adc
xor
fstpt
lds
enter
inc
cmpsb
add
or
cmp
int
fisubs
dec
push
inc
int
orb
movsl
jbe
ret
sbbl
insl
mov
clc
loopne
xchg
or
xchg
cwtl
frstor
imul
mov
test
inc
sub
aas
cwtl
movsl
aam
int
test
les
adc
loop
push
popa
mov
lcall
in
and
in
and
adc
inc
das
or
insl
xor
or
testb
jo
sub
and
out
jmp
pop
jae
nop
inc
sub
mov
rorb
xchg
jmp
mov
or
arpl
push
pop
and
das
inc
out
sub
mov
sti
gs
int3
or
shll
out
dec
cli
hlt
test
inc
mov
and
js
xor
out
push
pop
movsl
fstpt
bswap
repnz
out
fcoms
cmc
mov
jmp
add
jo
ret
shrl
in
cwtl
dec
rcll
adc
xchg
movsl
sti
ret
rol
mov
repnz
mov
pusha
jae
xor
sbb
mov
mov
frstor
sub
push
loop
cltd
mov
xchg
orb
jge
imulb
jp
rorl
jl
out
stos
sub
xor
ja
mov
jg
mov
adc
add
movsb
mov
sbb
mov
divb
das
cmc
fwait
cli
fldenv
jp
stos
cmpsb
xor
mov
mov
inc
or
sbb
dec
repnz
daa
test
pop
data16
jnp
and
push
and
push
push
fadd
push
cmpsl
jl
ljmp
adc
and
xchg
mov
test
sbb
testl
xor
pop
je
sbb
mov
jb
dec
dec
dec
fmull
nop
add
pop
js
push
adc
test
push
ss
mov
mov
xor
pusha
nop
stc
dec
jmp
xchg
mov
xchg
sbb
mov
mov
and
xchg
xchg
pop
add
and
pusha
out
nop
lods
stos
shll
cmpsb
outsl
adc
xchg
ljmp
add
popa
or
push
inc
jmp
lods
aam
cmp
jae
adc
mov
or
outsl
outsb
punpcklwd
call
lret
loop
loop
hlt
les
xchg
mov
and
mov
sbb
or
outsb
cmp
cltd
aas
xchg
test
adc
data16
mov
popa
dec
dec
lock
inc
aaa
push
adc
ret
ss
inc
jo
lret
mov
or
mov
jns
mov
mov
add
adc
aad
push
dec
push
xchg
lcall
rorb
xchg
movsl
aad
mov
push
ljmp
lcall
mov
jecxz
lods
out
xor
sti
fldl
jns
mov
pop
emms
mov
xor
mov
jb
mov
xor
or
rolb
jns
movl
out
jl,pt
mov
and
cmpsl
or
xor
sbb
mov
sub
cmc
negl
sub
sbb
gs
cmp
mov
scas
and
stc
imul
adc
dec
fisttpl
aaa
inc
sbb
or
test
or
cltd
sbb
adc
iret
imul
mov
hlt
sub
fiadds
pop
sbb
or
sarb
cmpsl
jg
inc
das
pop
cwtl
mov
cmp
sti
cmp
jg
mov
cmp
sbb
xchg
xchg
and
jbe
xchg
pop
out
popl
cs
mov
cmpsb
cmpl
pop
call
xor
loop
mov
push
fadd
mov
cmpsb
pop
dec
sbb
pop
cmovs
mov
fcoml
push
aad
nop
hlt
or
daa
js
pop
push
xor
sub
popl
test
sbb
test
xchg
idivl
lods
bound
popf
pop
test
jae
lock
sub
cmp
outsb
add
enter
movsl
cmc
or
or
cmpb
insb
mov
or
xchg
fiaddl
xchg
jno
dec
inc
fwait
iret
jl
jge
test
int3
faddl
movsb
adc
xor
sbb
xor
mov
mov
pop
into
pop
sbb
jno
sub
sbb
or
pop
xor
js
outsb
movsb
push
aaa
call
adc
mov
iret
sbb
jne
and
cmc
dec
aas
test
jge
rcl
aam
aas
lret
negl
subb
sub
in
fucom
mov
mov
in
sahf
push
sub
enter
jecxz
aam
out
int3
add
loopne
int3
les
sub
mov
or
jmp
inc
pop
dec
adc
sbb
and
shlb
aaa
sub
data16
jp
ret
push
xchg
leave
xchg
lock
xlat
pop
and
addr16
or
pop
andb
arpl
add
in
add
pop
xor
push
dec
xor
dec
test
jae
inc
and
sub
xchg
mov
pushf
sbb
jp
les
popl
and
int
inc
push
push
xchg
adc
or
pop
sub
and
pop
cmp
bound
xchg
test
cmp
lods
jno
inc
inc
in
jbe
sub
sbb
daa
sub
das
repz
mov
push
mov
jg
movsb
xorb
dec
adc
js
mov
pusha
xchg
xchg
ficoml
aam
stos
and
enter
dec
lds
push
cltd
shlb
cmpsb
mov
sub
es
push
lods
adc
lods
jge
fs
ret
cmp
cmp
sbb
pop
sbb
and
or
add
add
xchg
or
das
push
ret
clc
dec
xor
lret
jmp
fisubs
mov
dec
das
or
clc
sahf
cwtl
or
inc
cmp
sbb
add
leave
mov
inc
movsb
lods
in
dec
cs
repnz
dec
popa
ds
into
xor
push
adcl
xor
xor
shrl
pop
jmp
push
push
shlb
dec
je
pop
into
enter
stos
jp
xchg
pop
shlb
cmp
jns
and
cmpsb
add
mov
pop
push
mov
sub
or
ret
js
aaa
sbb
or
es
fneni(8087
and
sahf
xchg
lea
enter
inc
pop
pop
shlb
sbb
in
add
divl
mov
lods
mov
hlt
test
pop
mov
leave
sbb
or
mov
or
sub
jl
xor
lods
fimuls
in
lds
xor
sahf
test
test
sub
test
inc
mov
shl
jmp
test
sub
cmp
ret
mov
mov
incl
cmp
jmp
adc
sbb
cmp
lock
iret
xor
lcall
int3
in
or
inc
adc
xchg
in
test
fwait
mov
dec
roll
fiadds
test
mov
test
push
push
or
xchg
xor
inc
imul
pop
jno
aaa
fwait
std
pusha
push
pop
pop
add
fisubrs
jle
enter
dec
stos
mov
sub
subb
out
cmp
sbb
leave
out
bnd
das
cmp
adc
sahf
fxch
jno
lahf
or
out
xchg
ss
xchg
add
dec
cmp
dec
mov
mov
mov
outsl
mov
push
jns
out
inc
push
jae
lods
adc
mov
and
cltd
gs
xlat
dec
out
dec
data16
out
xchg
shr
outsl
jg
out
mov
test
jnp
pushf
lods
dec
das
orl
mov
or
in
inc
ja
fldcw
xor
sub
inc
mov
push
scas
jno
mov
fistpl
test
test
fdivrl
mov
pop
dec
mov
popf
mov
mov
outsl
xlat
fwait
dec
in
subb
in
test
jnp
out
scas
mov
jg
dec
jnp
ja
dec
xchg
out
movsl
lds
mov
test
fsts
clc
jg
fwait
pop
sub
stos
mov
cs
cmp
cmpl
js
ljmp
xor
das
mov
and
sub
mov
xchg
loopne
iret
insb
out
pushf
xlat
dec
outsb
mov
in
lret
xor
adc
jb
stc
lcall
inc
sub
mov
ljmp
subl
dec
lcall
sbb
ljmp
sub
sbb
fidivrs
inc
mov
dec
lods
fdivl
dec
xchg
and
gs
xor
movsb
inc
jbe
faddl
jb
push
jge
or
nop
orl
test
imul
cmp
movsl
test
popa
mov
loope
xchg
push
push
cmpsl
inc
inc
dec
jmp
sub
pusha
push
stos
mov
cmp
push
and
mov
lea
cmc
les
call
mov
mov
mov
shrl
stc
and
xor
bound
mov
add
push
jmp
xor
mov
jle
popf
jbe
in
imul
mov
push
mov
jg
mov
adc
dec
mov
jle
outsb
pop
mov
adc
pop
sub
loop
pop
lea
out
cmp
mov
mov
xor
ficomps
rcr
popa
das
aam
pop
das
jg
xchg
and
jmp
mov
adc
gs
xor
mov
push
decl
jne
imul
das
inc
cmp
jne
imul
dec
mov
mov
sbb
sarb
cmpsl
iret
jle
push
mov
lea
inc
mov
stos
leave
popl
mov
test
sbb
sub
sbb
test
sahf
jl
aaa
mov
and
adc
sub
or
inc
inc
jp
xor
pop
pop
push
test
hlt
mov
ret
adc
xor
shl
int
pop
and
mov
inc
push
daa
test
push
pop
push
cld
icebp
sbb
daa
adc
sub
or
out
dec
ljmp
inc
mov
in
rcr
sub
dec
xor
mov
push
add
lods
aas
mov
fldcw
inc
negl
push
pop
xchg
and
icebp
sti
dec
popf
imul
mov
aas
pop
jb
pop
mov
loop
enter
pop
fcmovbe
xchg
add
fists
xchg
in
outsl
aaa
in
sbb
cli
mov
popa
dec
mov
or
insb
jle
out
mov
lds
fwait
test
adc
sub
and
stos
jns
popf
ret
lret
ret
iret
adc
cvtps2pd
in
test
int
pop
clc
enter
add
push
fstps
mov
mov
xlat
cmpb
pop
cwtl
popa
test
pop
jo
imul
roll
pop
and
pushf
stos
js
iret
xchg
cmc
ret
jns
out
or
xor
fldl
shr
push
push
call
int
jle
shlb
int3
or
sbb
out
pusha
daa
xor
decb
mov
mov
mov
jmp
dec
movb
movsl
sbb
xchg
sbb
mov
cwtl
out
ficompl
mov
cmpsl
cmp
fisubl
neg
js
aam
or
mov
lock
lret
fisttpl
ret
adc
add
jno
das
dec
inc
test
jl
xor
test
ss
test
negb
or
or
mov
add
add
out
sti
bound
cwtl
bound
inc
mov
push
aaa
and
sti
gs
insl
lea
jb
cmpsb
test
pushf
mov
sub
adc
mov
jl
mov
int
pushf
add
xor
cli
into
mov
mov
add
bswap
and
lea
mov
dec
dec
stc
movsl
cmp
dec
push
mov
out
pop
sub
sbb
lea
sbb
lret
cli
push
mov
mov
shlb
xchg
movsb
cmpb
pop
stos
nop
push
lahf
nop
mov
imul
pushf
jns
cmp
inc
sbbb
dec
stc
in
sbb
add
ja
and
cltd
not
pop
sbb
sbb
js
fldcw
inc
jae
dec
or
xchg
test
inc
or
jl
arpl
hlt
xor
pop
and
mov
lods
mov
in
dec
add
sub
out
scas
outsb
push
cwtl
add
cld
jle
andl
call
xor
stos
sub
push
pop
push
pop
pop
xchg
jns
and
xchg
pop
add
push
stos
or
cmp
inc
aaa
test
jecxz
inc
ss
lods
mov
bound
sbb
or
adc
sub
sarl
ljmp
adc
fistpl
lahf
mov
mov
add
imul
jp
jo
mov
scas
xor
loop
mov
lahf
inc
mov
jo
mov
pop
cmp
inc
mov
pusha
add
flds
lds
mov
xchg
xor
xchg
xchg
mov
xchg
lock
adc
push
mov
ss
or
lods
int
and
les
adc
icebp
push
add
ret
loope
pop
mov
inc
aaa
mov
std
stos
hlt
mov
inc
mov
fdiv
fs
and
cmp
cmc
mov
sub
pop
fnsave
or
sahf
cmp
dec
sub
std
push
fwait
xor
js
imul
pop
cmp
or
pop
mov
rcll
cmp
call
ret
or
dec
inc
fisttpl
xor
mov
pusha
xor
stos
cmp
insb
mov
das
iret
mov
push
insb
cmc
sbb
cmp
cmpsl
mov
shrb
pop
sub
je
add
jne
push
lea
mov
push
or
bound
movswl
cmp
jb
push
mov
sti
and
fcompl
loop
mov
sbb
push
clc
loopne
lahf
arpl
int
mull
sbb
inc
and
and
mov
dec
pop
sub
loop
cmp
mov
scas
and
sbb
pop
sbb
xorl
aam
jo
xchg
and
movsb
pcmpgtw
es
les
add
test
push
jecxz
and
xchg
dec
dec
add
pusha
and
sub
xchg
sub
outsb
mov
loopne
flds
ja
fisttpll
add
fistl
mov
xlat
push
inc
fdivs
sbbb
jle
mov
mov
mul
sbb
mov
ljmp
push
mov
popf
xor
lret
mul
xor
enter
adc
sahf
jp
movsb
loope
add
mov
aaa
adc
xchg
out
cli
or
clc
or
icebp
dec
pop
xchg
jecxz
jmp
insb
arpl
jmp
mov
jg
lods
leave
lret
lea
aas
ds
push
enter
stos
xchg
stos
add
je
mov
mov
nop
movsl
push
movsl
sbb
stos
adc
cli
xor
mov
repz
dec
sub
sbb
jb
mov
mov
pop
out
int
rorl
push
mov
out
or
icebp
daa
imul
jae
and
adc
mov
inc
xor
clc
mov
push
mov
inc
fdivr
leave
xlat
mov
popf
outsb
jl
dec
add
jl
pop
pop
xchg
sti
mov
addl
mov
or
push
mov
dec
in
lods
stos
inc
mov
xor
mov
add
sbb
lret
js
lret
jae
mov
shll
lds
pop
push
pop
dec
and
cmp
test
fsubl
pop
movsl
enter
insb
jnp
int
scas
dec
outsl
push
loope
daa
sub
nop
pop
cmp
arpl
jae
jmp
imul
mov
inc
mov
inc
mov
push
xchg
data16
jecxz
pushf
lret
mov
xchg
nop
sub
lock
jns
sti
add
pop
jge
movsb
aas
lods
cmp
stc
and
popf
xor
push
xchg
jle
outsb
mov
aas
sbb
je
or
add
std
xchg
adc
lods
div
aas
pop
mov
dec
movsl
movsb
jg
sub
insb
cmp
xor
sub
jne
test
adc
mov
push
adc
pusha
mov
jmp
or
cmp
insb
out
in
lods
mov
popa
leave
filds
xchg
repz
jbe
lods
sbb
sbb
pop
cmp
inc
daa
and
fisttpl
test
mov
js
push
popl
scas
movq
adc
jns
dec
lcall
shll
lcall
sbb
in
idivl
cwtl
mov
out
mov
mov
stc
inc
cmp
inc
loop
je
and
in
call
pop
scas
out
loopne
loop
mov
lret
inc
dec
pusha
popf
arpl
out
in
test
test
or
push
jecxz
in
push
mov
sbb
xchg
mov
cmp
loopne
popa
lret
cmpsb
stos
mov
lods
xor
scas
or
or
mov
inc
pop
aas
jecxz
push
and
pop
loopne
mov
outsl
fnstenv
jno
sub
movsb
adc
push
add
ja
lods
test
movsl
inc
loope
jle
push
sub
ds
adc
outsl
int
bound
push
bound
or
sbb
or
idiv
jp
iret
or
sbb
les
sahf
cld
dec
aam
in
push
lcall
xor
mov
outsl
imul
jmp
mov
cmp
stc
popa
xchg
jmp
pop
mov
jns
pusha
pushf
pop
xchg
les
out
inc
sub
mov
pmulhuw
jmp
adc
mov
and
ret
mov
jbe
xchg
lods
push
call
inc
insb
pop
mov
jp
out
out
inc
mov
or
cwtl
insl
addr16
sub
sbb
repnz
out
xchg
mov
lahf
mov
sahf
std
outsl
mul
loopne
mov
cli
mov
repz
aas
xchg
mov
or
int
pushf
add
ja
xor
std
aas
add
pusha
jmp
in
out
aam
dec
sbb
mov
sub
and
dec
sub
nop
xor
inc
enter
in
sar
stos
dec
fdivr
mov
lcall
sbb
shrl
sbb
hlt
mov
fcomp
pop
in
and
or
ds
push
aam
fists
sub
mov
inc
js
fimull
out
lahf
sub
aad
shll
xchg
lock
pop
or
call
inc
notb
adcl
pop
jle
in
push
fstl
movl
leave
sti
jnp
cld
imul
mov
cmp
push
in
out
pop
js
and
enter
jecxz
jecxz
test
icebp
inc
out
fdivl
add
sahf
or
xlat
in
pop
adcb
push
hlt
stos
xlat
mov
int
je
pop
adc
push
ja
lock
ljmp
test
adc
xchg
cli
mov
mov
repnz
out
jne
sbb
sub
adc
fnstenv
insl
sub
cwtl
add
mov
sub
mov
andl
loope
sbb
pop
inc
xorb
test
or
insb
and
dec
stc
inc
data16
dec
ljmp
jno
movsl
int3
mov
add
cmp
dec
sub
inc
or
sub
fsubrl
nop
jmp
jle
popf
mov
lock
seta
aaa
jnp
xchg
dec
idivb
enter
daa
push
mov
add
add
add
adc
rcll
icebp
push
int3
in
mov
mov
sub
sbb
cwtl
lret
lea
jp
aad
movsb
hlt
cmpsl
pop
test
insl
push
xchg
xchg
lea
les
jnp
std
sbb
sbb
jae
xchg
mov
test
push
push
xchg
push
cli
add
iret
dec
ss
add
lods
and
sbb
loopne
xchg
cmc
into
mov
and
popa
adc
add
mov
pop
out
cld
rorl
cmp
out
fldt
add
jb
fisubs
movsb
sub
pop
xor
mov
cmp
pop
loop
fdivrl
xor
enter
xor
adc
popf
add
dec
pushf
hlt
nop
sub
mov
shll
addr16
xchg
jne
jg
repnz
pop
div
mov
mov
mov
fnstcw
loope
test
jmp
xor
mull
shr
add
push
or
adc
push
shl
jecxz
test
jmp
add
push
sub
push
data16
and
jb
jmp
jb
sub
cld
push
mov
cs
xchg
sbb
stos
fwait
jae
mov
cmc
decl
fs
lret
andl
fnstcw
mov
xchg
lret
loopne
xchg
icebp
jne
pop
xchg
cld
popa
out
mov
xor
lcall
cld
ja
sub
mov
cmpb
in
sub
sbb
jmp
sbb
jae
psubsw
lahf
jbe
xchg
inc
hlt
inc
pop
dec
fisubrl
dec
pop
ror
or
add
sahf
dec
cmp
mov
pop
dec
inc
pop
lds
dec
bound
sbb
xor
cld
sbb
cmp
mov
sbb
adc
in
mov
pop
mov
pop
ret
jecxz
pusha
cmp
jp
loope
ja
ficomps
ret
cmp
push
cli
in
js
into
int
repz
mov
cmp
mov
fldt
sub
sbb
and
fidivrl
xlat
jo
insb
jge
ret
mov
jl
imul
cmp
pop
and
lahf
pop
adc
data16
mov
dec
cmp
out
dec
xchg
pop
xchg
push
test
cmp
mov
xor
sub
dec
ss
inc
jb
xor
lods
cltd
push
or
adc
loop
jl
mov
pop
xchg
push
mov
fdivl
sbb
push
shll
sub
scas
das
bound
fcoml
out
aad
cmp
test
test
mov
mov
jecxz
mov
outsb
fstl
negl
jg
xor
cmp
out
daa
pop
mov
add
pop
test
jle
aas
aaa
jmp
enter
es
push
test
or
scas
out
push
movsl
xchg
and
repz
and
pushf
out
mov
cmp
loop
arpl
daa
lcall
cwtl
add
sbb
ljmp
push
shlb
cmp
lea
jle
enter
xor
in
fsubrs
pop
or
mov
mov
cwtl
dec
mov
lds
addr16
add
pop
out
xor
push
aam
aas
jecxz
jmp
hlt
adc
or
push
movsb
jnp
ret
inc
hlt
stc
mov
jmp
int
mov
icebp
and
les
pop
jle
or
aam
es
aas
jne
inc
inc
xor
pop
bound
sub
stc
push
mov
mov
mov
repnz
xor
adc
jmp
bound
je
or
jno
fldenv
fidivrl
outsb
jl
sbb
and
bswap
pop
psubq
xchg
mov
test
jae
hlt
test
or
fwait
iret
nop
cmpsl
push
jnp
mov
cltd
and
aam
mov
out
dec
inc
jns
pop
push
sub
mov
ljmp
jns
sub
xchg
call
lods
jno
or
lock
mov
sub
mov
dec
shll
movsl
flds
mov
je
int3
sbb
jne
jns
enter
mov
add
push
int3
inc
and
xchg
push
fstl
cmp
push
ret
mov
mov
sub
mov
jb
fdivrp
shlb
ds
cmc
jnp
and
lods
sti
jcxz
std
fwait
es
out
sub
fmuls
jge
ret
and
ret
mov
xchg
mov
cmp
out
or
mov
clc
xchg
mov
xor
pop
jae
xchg
pop
lahf
and
xor
xchg
mov
and
or
jae
imul
jo
aaa
push
outsb
jo
xor
push
fnstsw
insl
mov
imul
lods
leave
mov
mov
pop
ret
sbb
movsl
hlt
out
jg
cmp
lahf
js
add
imul
ja
sbb
sub
pusha
sbb
jle
mov
push
int
cmp
test
sarb
fistpll
andb
ss
add
ja
movsb
mov
ret
xchg
pop
call
jmp
rolb
jnp
idivb
aaa
test
cwtl
out
adc
xchg
rcr
pop
imul
lret
sbb
pop
test
loop
lods
adc
pop
addr16
push
orl
pusha
ljmp
cmp
mov
leave
scas
xchg
sbb
adc
jp
sti
inc
lods
cmpsb
jp
pop
popa
jle
jp
pop
push
push
adc
xor
test
mov
stc
xchg
sbb
jns
into
pop
add
add
cmp
clc
hlt
xchg
movsl
ret
outsb
xchg
jecxz
jp
inc
sbb
mov
mov
push
dec
dec
dec
mov
add
pop
fistpl
add
inc
xchg
testb
xor
jge
cwtl
js
adc
jnp
daa
sbb
out
repz
push
mov
mov
adc
fsubl
or
xor
rorl
out
sbb
xor
and
xchg
xchg
push
enter
mov
adc
xchg
ja
in
inc
sub
fmuls
sub
aaa
cmp
adc
pop
out
out
es
cs
pop
lock
sbb
ret
sub
enter
sub
pop
add
scas
xchg
int
push
loope
movsb
popf
mov
pop
mov
insl
out
mov
xchg
aam
movsb
mov
in
adcb
pop
xchg
sbb
sub
xor
mov
cmp
movl
cld
mov
xor
jnp
jg
pop
lock
fildl
pop
and
outsl
xchg
cli
xchg
sbb
jb
dec
test
ret
enter
push
sbb
cltd
fcoms
cs
xchg
adc
popa
imul
mov
sahf
into
xor
aaa
cmp
add
popf
test
xor
xchg
pop
lcall
dec
outsl
jns
mov
incb
sub
xor
ss
mov
jmp
mov
cld
push
orb
sbb
dec
jmp
test
scas
adc
mov
mov
sti
leave
dec
push
xor
pop
test
js
lock
das
loop
cmp
xor
xlat
test
pop
sbb
or
clc
or
or
out
and
loope
rclb
push
push
lea
and
mov
sahf
mov
jno
gs
cmp
stos
lret
pop
and
rcl
out
stc
es
popl
dec
inc
mov
or
ror
xchg
lods
mov
sbb
ja
mov
mov
cmp
outsl
xlat
fwait
pop
loopne
ljmp
mov
cmpsl
fadd
add
stos
cltd
or
andl
sbb
pop
je
pop
repz
sbb
popl
fnstcw
sahf
inc
hlt
jb
mov
jbe
or
pop
aad
pop
jmp
sar
jns
sub
mov
push
sbb
clc
movsl
js
sub
pop
xlat
in
ret
lcall
clc
cmc
icebp
loopne
pushl
pop
mov
xor
xor
jno
push
pop
enter
ss
sub
adc
aam
pop
xor
pop
call
inc
mov
and
adc
and
xor
jnp
data16
lock
out
inc
add
imul
std
pop
mov
loope
lcall
jle
pop
dec
sub
jmp
jno
inc
testb
in
sbb
mov
ja
test
dec
and
sub
pop
in
jge
ljmp
mov
push
shl
psubb
int3
nop
mov
push
pushf
mov
int
popf
ds
inc
mov
insb
add
xchg
clc
jmp
push
mov
dec
xchg
xor
mov
add
negb
and
mov
mov
jno
call
andb
xchg
bound
idivb
jns
inc
addl
and
mov
and
cmp
movsl
push
push
in
sbb
and
ljmp
pop
mov
push
jge
mov
stos
push
ss
fucom
mov
jle
out
fwait
push
jnp
aas
jo
xchg
out
movsb
jmp
mov
out
clc
mov
ret
iret
int
scas
cwtl
scas
enter
xlat
jp
mov
lahf
ret
lret
inc
push
lods
xchg
lds
lea
mov
test
cmp
mov
lea
xchg
cs
add
repz
or
mov
icebp
lods
dec
xchg
or
adc
mov
in
fwait
mov
pop
out
bound
fidivrl
jge
mov
xorb
mov
lds
add
dec
movsl
cld
out
pop
call
mov
jae
pusha
xor
pop
leave
jg
lret
pop
pop
dec
loop
out
test
cmpsl
ljmp
call
add
movsb
sub
addr16
pop
inc
cltd
movsl
jno
mov
aad
mov
call
pop
pop
movsl
mov
xchg
shl
cmp
inc
out
frstor
icebp
lock
repz
jp,pt
push
or
ss
lds
in
mov
jns
dec
and
xchg
inc
cmp
push
mov
mov
addr16
mov
rcr
pop
aad
xchg
jns
and
iret
jb
stos
mov
pusha
test
sub
out
repz
or
ja
xor
push
cltd
bound
mov
imul
sbb
popf
dec
mov
fsts
ret
xchg
jmp
xor
xchg
and
test
loop
push
dec
add
test
xchg
jge
scas
jae
mov
xchg
pop
negl
negb
cmp
out
testl
mov
cmp
bound
lret
arpl
loope
mov
sbb
cmpsl
ret
ds
addl
out
in
xor
lcall
or
cmp
xchg
stc
dec
cmp
pop
js
inc
xor
mov
jnp
xchg
std
cli
cmpsl
lcall
lods
test
xlat
fs
mov
in
push
fisubrl
or
lea
aad
and
ljmp
dec
lods
cld
xor
popa
cmpsl
xor
fistps
addr16
movsb
fistpll
mov
shll
ret
inc
add
cs
sbb
rcr
push
jl
sbb
cli
adc
pop
outsl
imul
sbb
mov
fsts
pop
leave
cmp
push
pop
in
or
fwait
cmpsb
xor
stc
outsb
scas
adc
lods
mov
cmp
roll
lahf
push
fisttpll
mov
lea
mov
jl
out
xchg
xchg
lea
and
and
push
ljmp
push
adc
pop
mov
add
sbb
cld
cmp
sub
add
lahf
sbb
mov
push
sub
xchg
mov
insb
fwait
xchg
call
sqrtps
fsub
jecxz
ud2
fs
and
mov
pop
inc
in
adc
lret
xor
imul
jmp
mov
lds
pop
dec
repnz
call
or
fs
cmp
ret
sub
mov
fwait
pop
dec
mov
test
push
mov
ffree
stos
pop
faddp
ds
imul
inc
push
movsl
jno
mov
mov
out
testl
fnstcw
push
loope
mov
jmp
mov
mov
imul
push
aad
jbe
xor
mull
scas
lahf
jg
inc
push
xchg
sub
mov
rclb
fwait
add
jno
into
xor
jnp
cmp
imul
jnp
jno
dec
inc
xchg
cmp
push
mov
scas
cmp
dec
test
popa
push
xor
jl
icebp
add
mov
xorb
jo
jmp
cmp
mov
scas
push
mov
sahf
pushf
lcall
insb
js
pop
push
aam
gs
add
adc
sbb
out
mov
mov
mov
enter
sbbl
mov
sub
aad
sti
sahf
and
inc
push
popf
jne
jnp
aas
sbb
inc
inc
pop
inc
nopl
ds
pop
test
testl
mov
jmp
sbb
add
add
fcomps
fcoml
stos
mov
cld
mov
loopne
mov
or
sub
jg
sub
aad
pop
xor
xchg
icebp
jg
or
cwtl
out
xchg
outsb
call
mov
iret
xor
and
inc
frstor
sarb
jo
ss
mov
jnp
mov
ja
and
add
sub
xchg
sub
mov
sbb
outsb
jl
cmp
pop
sbb
xor
xor
fsubl
xor
fisttpll
lret
xchg
sub
into
lds
mov
mov
cli
pop
in
or
js
pop
cli
jno
jle
xor
icebp
add
mov
push
in
push
es
dec
pop
loope
sbb
test
in
ret
sti
fnstenv
or
lods
cwtl
cld
xor
sub
mov
test
test
xor
dec
jne
adc
wrmsr
sbb
clc
xchg
ret
dec
mov
cmpl
cmp
and
jl
inc
mov
testb
mov
mov
fsubs
js
dec
fcoml
xchg
sub
jmp
pop
sbb
clc
mov
and
imul
cmc
in
dec
mov
add
push
loopne
sbb
xlat
push
sub
push
and
pusha
aam
add
adc
xor
popa
mov
aas
xor
ja
jmp
jnp
shlb
mov
fldl
cmpsb
xchg
das
les
mov
dec
and
imul
scas
inc
stos
add
int3
cmp
fxch
scas
idiv
int
pop
push
cmpsb
adc
ljmp
clc
cli
adc
repz
cmp
cmp
mov
in
xchg
stc
sub
repz
dec
insl
sbb
ljmp
sahf
gs
out
cwtl
ret
jp
add
ud2
bound
adc
std
xchg
es
sub
or
add
into
jp
mov
adc
inc
pop
fxch
or
je
jnp
add
mov
push
sbb
fdivl
and
push
aas
lret
add
movsb
lret
mov
mov
gs
xchg
lret
xor
pop
aaa
pop
aad
and
dec
ljmp
mov
test
add
inc
int3
or
jne
mov
nop
in
pop
adc
sub
mov
pop
sub
xor
sti
cmpsl
aad
stc
mov
imul
add
and
lahf
mov
outsb
adc
sub
add
sub
pop
pushf
mov
jl
inc
cmp
lcall
das
sbb
push
jb
mov
sahf
push
pop
and
jmp
mov
fnstcw
dec
xor
js
inc
cwtl
test
adc
addr16
aad
xchg
decl
jle
cmp
out
aad
or
hlt
pop
loopne
inc
mov
add
divb
sar
test
cltd
in
mov
and
sub
xor
mov
add
sti
xchg
mov
data16
add
imul
imul
js
lds
or
les
lret
add
xchg
sti
add
push
test
jbe
mov
fisubl
push
inc
add
bound
cmpsb
les
stos
jg
popf
iret
jg
loopne
stos
dec
xor
push
sbb
roll
jbe
in
push
mov
loope
jo
repz
add
int3
dec
xor
movsb
ss
fs
fcomps
enter
jbe
mov
jge
jge
cmp
std
xor
outsl
in
test
clc
inc
movsb
sub
jecxz
inc
in
cmp
inc
imul
adc
fmull
ret
adc
aam
xor
shll
mov
icebp
test
mov
fldcw
addr16
cmp
inc
cld
add
mov
filds
cmp
and
cmp
out
idivb
cwtl
mov
and
pop
lds
jae
xor
jecxz
sub
fidivs
scas
jmp
dec
enter
es
push
call
or
fucom
stc
mov
adc
gs
push
fcmovnu
rcll
fs
push
int
in
rorb
and
adc
dec
xchg
inc
or
adc
jecxz
rolb
out
gs
js
pop
xchg
cltd
sub
and
cmp
xchg
sbb
dec
push
push
dec
xchg
xlat
mov
adc
insb
fldcw
sbb
push
adc
aas
push
pop
scas
dec
int
push
shlb
lahf
inc
or
inc
lret
add
xchg
sbb
scas
insl
adc
adc
xor
rorl
in
inc
sahf
xor
and
out
mov
mov
mov
dec
mov
pushfw
or
xchg
add
sbb
pop
or
xor
dec
xchg
cmc
rcll
ja
je
and
mov
push
sbb
pop
in
inc
xchg
fcomps
lods
xor
dec
je
sbb
imul
cmp
aas
out
in
dec
sub
je
sub
enter
gs
test
jnp
clc
mov
pop
push
test
dec
add
out
mov
scas
lock
mov
xchg
push
repnz
mov
pushw
mov
pop
sbb
cmpsb
sub
adc
jae
andb
jae
pop
jmp
cmc
repnz
xor
pushf
lret
out
fsub
lea
jl
lret
jg
jne
cltd
arpl
push
test
jno
sbb
movsl
addr16
out
iret
ret
mov
lcall
xchg
imul
or
sub
fwait
imul
fnsave
sub
lods
pop
dec
inc
sahf
and
xchg
push
cltd
mov
enter
adc
inc
xchg
std
ja
adc
add
xlat
movsl
inc
xor
iret
ss
js
out
mov
insl
pop
and
aam
inc
cld
or
fdivrl
ss
xchg
cmp
movsl
mov
pop
inc
add
std
test
cwtl
test
pushf
xor
sbb
sbb
cmp
add
push
mov
out
mov
ror
arpl
mov
movsl
jp
and
insb
fisubrl
dec
adc
cmp
icebp
push
mov
flds
rcrl
jp
push
insb
mov
aad
popa
gs
adcb
jno
push
pop
xor
fimull
dec
jo
outsl
aas
test
jnp
into
je
mov
xor
sahf
ja
sbb
mov
cmc
les
clc
mov
push
jne
add
jecxz
dec
add
or
and
test
fst
jne
pop
cmpsl
les
lahf
inc
nop
inc
scas
sub
push
jns
jnp
mov
sbb
popa
fcmovnbe
push
stos
popf
mov
sbb
push
jmp
lcall
mov
push
stos
out
loop
test
mov
sub
jo
stos
cwtl
jecxz
pop
subb
mov
in
mov
cmc
jle
fmuls
dec
sbb
lods
mov
loope
and
or
mov
sub
sub
push
and
push
mov
add
push
aad
add
and
push
jle
push
add
xor
in
sbb
jge
dec
push
lret
or
or
xor
andl
mov
xchg
dec
lea
rol
inc
in
loop
dec
lods
sahf
cmpsb
notl
div
ret
sbb
sub
call
dec
frstor
js
push
sbb
or
mov
sahf
add
xchg
mov
lds
and
cmp
imul
ja
sub
inc
fidivrs
icebp
fwait
scas
popa
push
shll
mov
lret
dec
jecxz
or
mov
das
ss
cmpl
arpl
mov
mov
in
aas
orl
mov
xchg
push
push
push
inc
outsb
js
mov
mov
mov
maxps
push
inc
dec
sar
push
jae
mulb
clc
cwtl
push
sub
out
fldcw
jae
push
mov
test
add
inc
dec
mov
sub
mov
int3
and
cmc
jmp
jns
out
add
cmp
ja
or
pop
jp
push
dec
mov
and
sub
adcb
in
dec
testl
mov
lret
pop
or
imul
cmp
fcmovnb
adc
push
std
in
sahf
mov
push
lcall
mov
and
in
fcomps
push
xlat
aas
adc
jmp
mov
data16
push
lahf
fsubl
gs
movsb
push
rcrl
out
and
and
and
in
in
loop
jl
lret
cmp
sub
leave
xchg
cmp
test
outsb
stos
xchg
dec
mov
add
push
adc
pop
cmp
inc
jb
dec
xor
sub
dec
shr
je
push
mov
movsl
dec
xor
lret
dec
xchg
dec
add
xlat
adc
les
mov
dec
shll
sbb
stos
arpl
or
or
dec
pop
std
cmp
iret
lret
lods
mov
pop
andb
test
pop
xorb
pop
and
push
pop
jb
add
jno
cmp
mov
out
pop
mov
push
shr
sub
cmp
xlat
push
jge
imul
rclb
vpminsw
push
cmpsl
enter
mov
push
out
es
sbbl
and
add
xchg
sbb
push
ja
cli
mov
mov
lods
xor
mov
ds
and
dec
arpl
rorl
pusha
and
add
sub
xor
fimuls
or
mov
mov
inc
mov
mov
mov
pop
or
in
sti
jo
pusha
std
out
sarl
ss
xor
loop
pop
push
push
sub
cwtl
or
adc
jns
mov
pop
jge
mov
sbb
roll
adc
sub
xchg
scas
push
jecxz
jae
push
cmp
rclb
add
call
sbb
sbb
jl
je
add
sub
mov
sbb
outsl
enter
cmpsl
sbb
adc
push
daa
movsb
es
dec
mov
dec
inc
mov
cli
scas
push
xchg
orl
mov
lods
adc
ds
push
iret
femms
imul
xchg
pop
mov
test
loopne
rclb
mov
sbbl
pop
and
jl
adc
push
out
jge
testl
mov
ret
xor
xor
in
and
jns
sub
dec
cmp
fs
je
push
cmpsb
movsb
ja
push
inc
pop
ss
out
iret
loop
lods
mov
sub
mov
xchg
jnp
push
and
jle
jns
dec
add
rolb
mov
lea
mov
test
and
push
xchg
jge
repz
in
stos
cmp
into
rorb
shl
mov
adc
ret
pop
and
jl
mov
dec
mov
shll
jnp
xchg
cmpsl
cmp
and
fistps
ja
or
cmp
push
stos
inc
int
ljmp
jp
dec
sub
xchg
scas
out
sbb
fnstcw
sahf
xor
jle
and
aas
inc
or
mov
je
mov
sub
enter
test
jb
lock
and
test
push
arpl
ret
add
imul
jne
cmp
cmc
xor
test
out
mov
pop
or
addl
sbb
test
scas
cmc
fsubr
mov
jb
je
jecxz
pop
jo
push
fidivrs
loop
cmpsb
jae
insl
shl
icebp
sbb
and
push
lea
xchg
sub
enter
les
jmp
mov
dec
shll
mov
pop
mov
push
int
fiaddl
arpl
fdiv
jle
sub
lcall
push
and
inc
cld
movsb
nop
imul
inc
cltd
mov
mov
stos
je
fs
lahf
push
mov
testl
mov
subb
pop
mov
ljmp
lds
and
mov
and
cmpsb
mov
adc
adc
lahf
xchg
das
in
fcmovb
adc
xlat
cmpsl
lea
jle,pn
or
mov
lcall
outsl
pushl
scas
dec
icebp
popf
test
sbb
push
sub
and
pop
leave
and
fisubrl
jo
pop
adc
adcl
popa
push
xlat
adc
jecxz
scas
sub
jnp
sub
mov
sbb
and
xchg
cmc
sbb
and
adc
xchg
mov
cmp
cmpsb
mov
or
cmp
pushf
jge
cmp
mov
cld
cs
dec
xchg
inc
call
imul
ds
in
repz
fcom
lcall
sbb
pop
lea
stos
scas
gs
jmp
and
ds
xor
push
movsl
inc
xchg
rcr
sahf
es
shll
dec
aas
leave
push
pop
mov
outsl
push
pop
js
or
dec
xlat
dec
add
adc
mov
jns
jns
mov
push
and
dec
negl
jle
adc
clc
xor
sub
rorl
dec
adc
dec
xlat
testl
xchg
out
mov
sti
lock
outsl
add
andb
push
lret
mov
fldl
xchg
add
lret
jae
sub
push
pop
js
icebp
in
mov
add
and
sub
cmp
adc
mov
mov
stos
imul
inc
imul
push
mov
jo
cmc
cltd
jo
out
add
sbbl
push
and
cmc
rolb
in
mov
mov
xor
xchg
jb
les
push
xor
insb
inc
out
pushf
mov
popl
cmp
push
sub
push
movsb
ljmp
add
sub
cmp
and
outsl
mov
insb
test
or
cmpsl
leave
ret
inc
and
mov
ja
xchg
dec
adc
ficoml
jp
push
insb
jb
or
lock
into
shlb
cmp
call
sti
jmp
xchg
cmp
cltd
jnp
fistpll
mul
aad
mov
push
in
popa
movsl
test
test
mov
adc
adc
lret
or
ror
inc
lcall
fnstenv
push
xchg
xor
clc
sbb
push
inc
xlat
cmp
push
xchg
movsb
lcall
xlat
jp
jge
pop
imul
into
in
movsb
dec
movsb
pop
fs
lock
pop
jecxz
lds
xchg
in
xchg
add
mov
addl
cli
cli
push
pop
into
mov
rcll
imul
bound
popa
sahf
push
mov
adc
arpl
sub
mov
test
cmpsb
test
aam
xor
dec
cmc
aad
mov
js
xor
nop
jl
in
je
jnp
adc
xor
into
in
pop
cmp
fldenv
adc
xchg
pop
push
gs
pop
xchg
jle
sub
and
push
cltd
inc
mov
add
aaa
cli
xchg
push
pop
cld
bound
push
and
nop
and
sub
cmp
xchg
add
cli
jg
and
sub
sbb
out
push
xchg
inc
and
or
xlat
stos
and
add
xchg
loope
idivb
mov
xchg
stos
adc
sbb
push
fdivs
mov
imul
xchg
pushf
dec
push
ds
das
mov
movsl
sub
fsubrp
inc
sbb
mov
adc
jb
call
lcall
inc
fwait
mov
cmpsl
push
push
movsb
inc
jno
andl
int3
mov
frstor
out
inc
adc
orb
aam
ds
adc
aam
xor
jmp
mov
popf
mov
xchg
insb
sbb
adc
push
sbb
and
mov
imul
pop
sub
out
sahf
sahf
jg
dec
jge
out
rol
aam
dec
push
dec
mov
sub
inc
adc
pop
and
push
fidivs
dec
in
push
push
sbb
out
sub
addr16
xchg
out
jg
rcll
and
ja
dec
lods
shl
xchg
call
imulb
lods
cmp
ret
push
push
adc
lret
xchg
fcomps
xor
push
lock
mov
sbb
cmp
mov
adc
lods
repnz
bound
shrl
push
call
arpl
outsb
sahf
movsb
ljmp
adc
mov
or
xchg
mov
xchg
cld
gs
pop
pop
add
movsb
je
neg
cmpsb
xchg
mov
test
enter
cmp
pusha
jbe
lods
shll
mov
je
rolb
xchg
ss
aaa
add
fsubp
xchg
push
arpl
mov
and
push
cltd
cmpsl
pop
addb
in
mov
jle
loope
mov
inc
mov
andl
xchg
fcompl
lea
stos
xor
adc
xchg
cld
hlt
jno
dec
std
cwtl
daa
mov
adc
call
dec
loop
imul
pop
sub
pop
test
jo
ja
imul
sahf
movsb
out
and
fisubrl
add
pop
lock
in
mov
sub
cmpsb
push
mov
pushf
ja
inc
vcvtsi2sd
jmp
lret
jle
inc
es
ficomps
or
sbb
mov
aaa
test
test
iret
ja
mov
pop
jns
sub
fwait
inc
sarl
ror
fs
dec
cs
notl
je
fsubs
mov
ja
push
call
into
pushf
jbe
sub
pop
and
pop
mov
fsubl
fidivrs
cmp
dec
sahf
jns
push
lea
xchg
outsl
mov
or
dec
jge
daa
xor
cmp
dec
mov
rorl
or
jl
cmp
jne
in
mov
out
lret
jecxz
mov
adc
pusha
adc
popa
rol
jae
insl
mov
mov
arpl
or
jmp
inc
adc
rclb
andb
aaa
mov
popa
sbb
adc
mov
daa
cmp
test
pop
jp
cltd
cltd
fstps
or
lock
mov
rcrb
mov
pop
sti
loop
sbb
loopne
int3
and
mull
arpl
sbb
mov
rcrl
jg
js
fiaddl
push
inc
xor
jl
sub
mov
jle
cmp
or
xor
int3
cmp
xorb
imul
mov
push
andl
out
and
add
mov
cltd
jmp
pop
jl
sbb
jmp
xor
dec
leave
push
mov
mov
mov
xor
pop
jb
pop
cmpsb
xchg
jmp
mov
outsb
sahf
lods
xor
ds
push
sub
sbb
add
jo
outsb
lret
xor
xor
clc
push
pop
mov
out
repnz
out
rorl
jo
xlat
jmp
fwait
dec
cltd
mov
mov
in
jmp
in
mov
inc
dec
jle
loopne
andb
cmp
or
push
mov
push
sub
xor
xor
and
mov
sbb
adc
cmpsb
rcl
fstpl
loopne
aaa
pop
jl
add
or
mov
pop
mov
xchg
adc
or
lods
lds
add
jo
inc
xor
and
out
sbb
pop
mov
je
dec
pop
es
ja
add
aad
or
jg
mov
push
ret
movsl
xchg
out
xchg
in
inc
in
xchg
xor
or
in
movsb
xchg
ficoml
push
and
lods
sub
lds
imul
dec
mov
jmp
cmp
or
push
mov
popf
roll
inc
ja
add
cli
cmp
ja
std
dec
adc
add
call
dec
data16
cmp
mov
insl
jp
mov
push
out
xor
pop
adc
fcmovu
inc
and
sub
push
pop
adc
push
mov
icebp
outsb
idivb
mov
jae
mov
bound
sbb
jg
aaa
cmc
and
cwtl
xor
sub
pop
shrb
in
cmp
or
add
mov
jae
and
jnp
pusha
and
jnp
add
push
int3
or
cmc
mov
cmp
es
rclb
jecxz
pop
add
jmp
dec
adc
sarl
ret
stos
loop
ret
fs
stos
out
flds
pop
fiadds
mov
ficoml
cmp
pop
dec
mov
je
ror
ret
push
shll
push
hlt
pop
push
jmp
sub
hlt
inc
inc
mov
sbb
mov
inc
dec
pop
jp
imul
daa
js
or
xchg
cmp
aaa
xlat
sub
and
aam
sbb
inc
mov
mov
jl
mov
sbb
mov
adc
mov
stc
pop
sahf
sbb
dec
aaa
aam
out
or
mov
adc
fldt
cwtl
add
cmp
cld
pop
pop
push
ret
sub
sbb
repnz
jmp
dec
aas
dec
call
and
cmp
dec
ret
movsb
xchg
dec
push
in
and
jb
shlb
xchg
jbe
outsb
sub
dec
inc
cmc
int
daa
pop
jg
adc
mov
loope
push
pop
pop
adc
ljmp
sbb
pop
xchg
jb
cmc
jmp
mov
ljmp
pop
sub
push
out
cmp
inc
adc
mov
push
test
popf
jp
es
in
ja
pop
cltd
inc
adc
or
std
imul
jo
jp
mov
es
or
jno
into
inc
out
xchg
mov
pop
mov
xchg
cmpsb
loopne
xor
fadd
pop
cmp
cmpsb
pop
into
mov
sbb
in
jmp
enter
push
pop
add
mov
jecxz
pop
ja
pop
bound
rcl
lcall
nop
addr16
notl
sub
jb
xor
xchg
outsl
xchg
xor
outsl
pop
push
shrl
mov
xorl
gs
fstps
cmp
leave
xchg
mov
xchg
mov
loope
sahf
lock
add
cmc
es
dec
popf
nop
xchg
das
push
sbbl
movsb
lahf
jae
jnp
rcr
stos
jl
add
dec
subb
push
lds
jns
xchg
faddl
repnz
mov
sub
xchg
in
scas
xchg
mov
push
lock
movsb
in
lods
xor
test
adc
stc
pop
loopne
xor
mov
and
out
xchg
inc
test
jae
jo
out
jo
inc
jge
or
push
xchg
lret
jp
outsb
pop
js
jle
mov
stc
daa
mov
or
rorl
mov
push
cld
and
aam
sahf
enter
decl
ljmp
sub
cltd
mov
cmc
jge
add
ljmp
mov
fsubr
daa
dec
xor
mov
das
adc
xchg
popa
andl
xlat
adc
xlat
sahf
jmp
test
lods
out
sub
jmp
es
jge
fadd
fwait
popa
xchg
jmp
pop
stos
es
out
mov
dec
cmc
inc
and
cwtl
es
rcll
lods
les
int
icebp
jnp
or
notb
lock
jbe
and
loopne
aam
lret
pusha
je
sub
imul
sbb
push
aad
mov
scas
mov
mov
and
jl
adc
std
adc
or
rorl
bound
mov
jl
adc
loop
or
outsb
iret
xchg
out
jl
or
sbb
outsl
inc
mov
or
xchg
gs
int3
out
add
incl
or
jns
add
pop
inc
dec
mov
sub
or
scas
sbb
in
pusha
outsl
outsb
cmc
repnz
add
cli
jmp
sub
jns
int
push
cltd
ljmp
fdivrs
mov
repnz
test
push
je
div
inc
pop
sub
jmp
push
int
jmp
sub
cli
sub
push
loope
in
jne
insl
and
xlat
insl
cltd
scas
push
aaa
pop
scas
ret
cmp
mov
pusha
pop
xchg
push
jecxz
mov
lods
aas
lret
push
call
out
sarb
jecxz
outsl
mov
scas
fldenv
cmpsb
jnp
ret
out
sti
lods
lret
jle
sbb
addb
and
test
mov
outsb
pop
jae
into
test
outsl
cmpsl
mov
in
jp
fcmove
das
push
xlat
popa
fwait
adc
jl
push
pop
add
mov
push
mov
int3
adc
cmc
addr16
fxam
loopne
and
hlt
rcrb
sbbb
and
pop
fwait
inc
mov
sbbb
das
jmp
outsb
lock
cmpsb
gs
in
dec
je
or
out
or
dec
call
imul
add
sbb
cmp
loopne
out
cmpsb
sbb
sub
adc
test
stos
jl
xchg
icebp
pop
lea
lret
mov
arpl
jns
mov
outsl
test
popa
pop
pop
and
repnz
cmc
aas
jns
mov
mov
jnp
xlat
xchg
xchg
cmp
fldt
pop
pop
lea
pop
inc
pop
mov
and
popa
add
dec
or
mov
rcrl
and
bound
out
dec
mov
sbb
sub
pop
cmp
repnz
push
sub
mov
cld
push
leave
ja
int3
mov
mov
xchg
das
mov
pop
daa
fwait
cs
fs
mov
scas
cmc
int3
ss
fs
xchg
push
mov
ror
dec
pop
sbb
mov
jnp
ret
sub
ljmp
daa
mov
pop
divl
lea
daa
imul
push
out
push
jp
xchg
mov
xchg
fcmovnu
and
and
rorl
stos
cmp
out
jno
enter
addb
xchg
addr16
and
xor
cmp
in
rolb
cli
cmp
add
xor
jns
sbb
push
lcall
imul
loop
rol
push
divl
movsl
jbe
shll
stos
lods
jg
scas
test
sub
xor
sub
in
mov
push
push
int
pop
push
sub
mov
pop
outsl
jno
mov
adc
in
ss
pusha
jl
rcr
je
and
xchg
imul
subl
xor
nop
jbe
outsb
icebp
ja
js
and
mov
cmc
ret
int3
dec
sbb
ffree
les
mov
adc
xor
lret
lods
jle
pusha
sbb
stos
cmp
fnstenv
or
mov
xlat
push
outsl
mov
sub
add
arpl
adc
jmp
and
shll
cli
jmp
mov
gs
mov
stos
mov
fwait
xor
aas
lods
imul
les
pop
iret
mov
lods
mov
mov
inc
fists
and
fcomp
pop
dec
cmp
cwtl
mov
pop
jge
push
std
push
xchg
roll
cmp
mov
pop
dec
push
rclb
shrb
or
jecxz
add
xchg
dec
jae
mov
cmp
addr16
mov
mov
mov
int
mov
adc
ljmp
pop
mov
stos
pop
shrl
mov
xor
repnz
mov
xchg
jmp
mov
dec
test
out
sbb
xchg
jmp
mul
add
or
aas
out
out
mov
loope
jg
cmpsl
cmp
loop
test
xchg
mov
pop
push
xchg
lahf
add
jo
je
insl
mov
xor
jnp
adc
popf
pop
shll
jns,pt
or
ror
mov
orl
out
sub
or
mov
out
icebp
xchg
fistl
mov
xchg
test
xor
insb
cltd
dec
and
fsts
pop
inc
imul
aas
jo
jmp
adc
adc
fimull
jnp
movsl
testb
int3
mov
pop
fwait
push
jnp
dec
addl
movsb
add
adc
fstpl
clc
imul
sub
sti
add
call
movsl
pop
cli
sbb
xor
or
cmpsl
pop
dec
test
mov
mov
icebp
xchg
adc
lcall
ret
fmull
adc
test
xor
ss
sbb
push
adc
daa
pop
push
and
les
les
std
mov
mov
mov
or
inc
test
jno
sahf
cmp
test
or
sbb
hlt
inc
push
into
sub
fsubl
fsubs
xchg
ds
iret
loop
aas
outsb
fisubs
loopne
out
xlat
inc
xchg
push
mov
sbb
pop
imul
repnz
and
out
add
insl
fistl
dec
mov
fnstcw
pop
inc
lahf
ret
out
mov
push
mov
pop
push
and
cmp
add
and
inc
cmc
sbb
xor
jecxz
outsb
xchg
adc
push
and
fisubl
or
pop
push
xorl
mov
adc
fisttpl
mov
pop
test
outsb
fnstsw
mov
rolb
daa
dec
cltd
jl
fisttpll
pop
cmp
stos
outsl
in
dec
hlt
imull
jge
imul
xor
insb
dec
add
daa
mov
xchg
mov
dec
cli
inc
fs
or
mov
repnz
sbb
jg
xchg
sbb
mov
or
ret
add
out
lea
std
pop
pop
test
mov
mov
sti
xchg
sbb
sub
push
fnsave
sub
lret
mov
cli
iret
stos
std
sbb
cmp
hlt
mov
scas
dec
sub
inc
mov
mov
xchg
stos
cmovb
or
push
dec
and
out
jbe
data16
mov
mov
pop
and
xchg
jbe
jbe
enter
xor
push
mov
insl
enter
adc
mov
xchg
and
mov
fidivs
mov
jg
adc
mov
and
jmp
fidivrs
mov
stos
pushf
mov
aam
aad
fcmovu
add
mov
andb
push
iret
jae
dec
sub
pop
ds
sub
scas
shll
sbb
sub
pop
adc
aas
jmp
mov
cmpsb
adc
mov
push
roll
out
jo
adc
in
fld
inc
push
out
fisubrs
xchg
sahf
fwait
lock
sbb
mov
mov
cmp
cltd
xchg
lock
popa
aaa
cmp
adc
or
xor
cltd
sub
cmp
adc
outsl
andl
bound
int3
cwtl
xor
inc
pop
scas
and
jl
fs
pop
repz
push
cmc
sub
loopne
scas
mov
int
stos
mov
xchg
shr
pop
pop
stc
mov
sbbl
cltd
inc
xor
jl
adc
pop
jmp
andl
push
dec
or
mov
fcoml
inc
fstpt
mov
test
cmc
xchg
imul
mov
fistps
and
inc
jbe
push
pop
popf
and
jae
sub
pop
cmp
push
jl
cltd
xor
lahf
xchg
jge
imul
outsb
lahf
push
sbb
jg
lahf
imul
and
lods
mov
xor
mov
lods
call
es
pop
stos
pop
jl
mov
loop
xor
sbb
inc
inc
dec
sub
jl
pop
dec
pop
cmp
or
roll
sbb
pop
mov
mov
mov
cmc
adc
movlps
pop
or
lds
sub
push
fpatan
cmp
jl
cmp
adc
mov
ror
loope
gs
jb
cmp
sub
mov
xchg
mov
and
adc
lock
dec
fldenv
adc
test
or
out
arpl
and
and
pop
loop
stos
jmp
lret
sbb
ljmp
enter
stos
and
jne
xchg
nop
sub
andl
lahf
not
xlat
adc
adc
pop
inc
ja
push
mov
and
xor
mov
jp
test
fwait
pop
xor
adcb
ss
xchg
arpl
push
push
aam
cli
ja
pop
or
xchg
and
mov
in
sub
xchg
popf
dec
cmp
shrl
insl
fs
out
pop
leave
out
sbb
mov
jg
lock
dec
dec
mov
dec
je
or
lds
lods
mov
add
cltd
xchg
xchg
mov
cmp
cmp
mov
icebp
xchg
lahf
mov
xchg
rorl
or
jno
std
inc
push
es
les
test
and
mov
cmp
xor
jbe
push
shrl
cld
xor
popf
je
push
int
dec
pop
pop
and
add
push
push
dec
test
mov
or
inc
test
mov
in
and
mov
jo
aam
ret
mov
sub
sub
mov
sahf
mov
iret
loope
mov
in
out
fptan
out
mov
sub
inc
pop
mov
mov
pop
mov
mov
xchg
add
xchg
std
in
push
lds
xchg
syscall
data16
test
call
and
or
loope
icebp
and
lea
test
lods
test
fs
loopne
mov
jo
aam
int3
inc
mov
lea
stos
or
mull
ret
adc
mov
int
pop
or
xor
imul
call
mov
cltd
cli
pop
lea
xor
mov
out
mov
sahf
xor
rclb
pop
popa
cmp
mov
add
mov
mov
jb
aad
fistpl
repnz
cmpsb
aam
xchg
stc
jmp
mov
mov
lcall
jne
dec
or
sub
bound
loop
cmp
out
dec
jbe
adc
insb
cld
adc
lods
loop
xchg
roll
inc
pop
das
mov
xor
and
iret
or
in
lds
add
jne
loopne
add
int
lret
add
ja
mov
xor
push
pop
vpcmpeqb
adc
fs
push
aam
fldcw
jno
pop
cmp
std
adc
push
add
loop
sbb
aas
mov
scas
mov
int
jns
mov
fistl
cli
sahf
scas
xchg
nop
mov
es
mov
push
cmp
int3
loopne,pn
or
pop
movsb
mov
jmp
int3
cmpsl
aam
mov
push
mov
in
add
push
and
lock
mov
movsb
jns
jnp
xchg
push
icebp
jge
test
jo
xor
mov
out
jae
add
push
mov
mov
inc
sbb
pop
pop
hlt
dec
dec
es
enter
popf
into
js
dec
inc
mov
and
mov
and
popl
ja
sub
inc
push
loop
scas
pop
rclb
jl
rorb
in
std
sahf
sbb
inc
mov
add
stos
sarb
and
js
push
sbb
push
pusha
push
fildll
xchg
xchg
sub
and
test
mov
or
scas
push
cmp
mov
xchg
sub
fs
push
pop
notb
push
pop
aaa
sbb
loop
hlt
addl
mov
mov
shrb
test
push
mov
jge
pop
cmpsb
mov
lock
pop
mov
movsl
add
add
mov
add
movsb
sbb
cmc
xchg
and
fs
ret
orl
pop
mov
sarb
in
mov
mov
cmpsb
enter
insb
cmp
loop
addl
mov
nop
push
cmpb
jp
jnp
stc
xorl
cmp
mov
mov
stc
je
call
jl
adc
leave
lock
sub
xor
enter
ja,pt
xor
push
cmpsb
mov
scas
into
sub
adc
cltd
fucomp
mov
mov
fisttpll
cmpb
pop
in
out
adc
adc
mov
je
hlt
inc
outsl
fnclex
jns
pop
aam
enter
xchg
dec
mov
imul
iret
sub
enter
or
stos
mov
jnp
imul
xchg
call
push
mov
mov
cmp
aas
aad
inc
std
adc
das
mov
lods
enter
dec
jg
test
popf
fldcw
sbb
jnp
mov
stc
add
jecxz
xchg
sbb
aas
into
xor
xchg
push
lcall
pop
fs
pop
jle
ret
push
scas
repz
pop
out
mov
cwtl
add
mov
in
shll
dec
xor
mov
mov
pop
lcall
push
cmp
fnop
pop
pop
mov
mov
push
cs
mov
mov
dec
outsl
iret
pop
mov
jg
adc
xchg
push
in
add
push
jl
cmpb
jl
rcrb
xchg
aaa
icebp
mov
sqrtps
mov
add
mov
imul
scas
mov
rclb
lods
stos
int3
mov
jecxz
or
and
cmp
or
mov
cltd
aam
pop
fs
xchg
fstl
cli
fs
sbb
dec
xor
out
sahf
xor
pop
xchg
ds
and
xor
push
lret
mov
icebp
sarl
mov
outsb
fisubl
cli
sub
jle
lds
and
pop
loope
nop
popa
cmovge
ljmp
in
into
sbb
int3
xor
loop
ja
jmp
adc
addr16
outsb
imul
dec
sahf
mov
dec
adc
pop
sbb
pop
movsb
test
mov
jbe
push
repnz
aas
dec
push
movsb
int3
shll
pop
lea
cltd
mov
adc
push
out
arpl
inc
mov
leave
popf
fildl
adc
stos
fisubrl
mov
mov
push
xor
pop
push
lret
insl
cmpsb
pop
mov
xor
testl
mov
add
or
jno
sub
ds
imul
gs
paddsb
das
mov
out
out
push
lret
or
pop
cmc
lret
sub
lret
stc
mov
push
data16
and
mov
into
out
orl
or
adc
push
repz
xor
and
push
sbb
add
xor
lock
adc
mov
ljmp
cmpsl
dec
in
in
inc
lcall
jg
xlat
arpl
inc
icebp
enter
loope
push
sub
pop
inc
ret
mov
mov
fld1
push
jl
push
clc
scas
ret
jp
dec
mov
sar
mov
sub
or
sub
and
pop
cmc
adc
push
mov
mov
mov
adc
sbb
push
add
add
outsb
aam
and
mov
mov
and
mov
sub
andb
dec
sbbb
fs
cmp
shrl
xor
rcrl
cmpb
cmp
hlt
iret
fs
push
dec
cmp
cwtl
ljmp
pop
aaa
dec
pop
jecxz
sbb
icebp
addr16
xor
in
cmp
sub
imul
mov
pushf
into
les
sar
ret
jle
loopne
in
mov
daa
lods
hlt
cmp
cmp
aas
cmc
pushl
dec
xlat
into
xchg
mov
aaa
lret
sub
andl
cmp
xchg
and
shll
int
inc
xchg
mov
movsb
rcll
xchg
shrb
mov
lock
test
aad
fstps
mov
mov
push
roll
dec
pop
and
bound
dec
and
mov
jecxz
mov
xor
testb
mov
inc
shll
es
popf
addr16
fwait
jb
adc
xor
pop
jns
mov
mov
out
pop
mov
daa
outsl
das
mov
sbb
call
lahf
pop
cmp
aas
inc
repz
sbb
push
fwait
ret
ss
mov
jne
and
das
mov
adc
shrb
out
jae
jp
sbb
out
insb
cmp
cmc
fwait
outsb
repz
popf
sbb
shll
sbb
outsl
inc
add
xor
out
hlt
jns
clc
pop
pusha
sub
jge
cmp
scas
shrl
cmp
mov
lret
ss
ret
outsb
sub
jl
fistps
sub
mov
push
push
in
ss
lods
aam
fisubrl
cmp
xlat
push
sub
mov
ss
add
ljmp
pop
mov
nop
int3
mov
push
dec
pop
sbb
jecxz
inc
cmp
mov
dec
mov
sub
arpl
jno
lret
push
sub
cmp
femms
mov
dec
sub
mov
dec
and
rclb
aaa
add
cld
insl
lcall
fadds
das
pop
jge
daa
je
jb
push
aad
mov
lret
jo
xchg
stc
lahf
pop
out
and
add
mov
mov
pushf
lret
push
imul
aam
pushf
ljmp
xor
out
cmp
xchg
popf
into
popa
dec
xchg
jne
enter
imull
leave
divl
sub
push
mov
mov
push
add
and
push
xor
ret
push
sub
insl
ss
cmp
rcrb
es
repz
bound
int3
fiaddl
repnz
xorb
dec
add
es
pop
sti
push
push
daa
xchg
lret
push
insb
pop
hlt
idiv
fstpt
mov
lcall
jne
mov
dec
int
mov
and
pop
xchg
jns
das
push
popa
adc
fs
cmp
jns
popa
lea
dec
and
sbb
mov
int3
fdivrl
shlb
mov
jb
fwait
insb
ret
mov
hlt
rorb
sub
int
jnp
lods
call
lock
scas
dec
sub
lahf
mov
mov
or
mov
adc
jns
fwait
mov
loop
ljmp
and
pop
xchg
or
and
movsl
xor
iret
icebp
ficoms
stc
xor
jge
into
mov
adc
shll
inc
movsl
mov
or
xchg
xchg
cmc
int3
lret
mov
out
test
int3
cmp
mov
mov
pop
sbb
add
add
pop
mov
test
loop
pop
iret
out
inc
mov
ja
loop
cmp
cmp
jl
dec
rcrb
or
add
sub
jno
lods
cmpsb
mov
mov
ss
sub
and
loopne
imul
clc
add
xor
dec
push
call
pop
adc
mov
scas
pop
lock
and
adc
xlat
mov
mov
repz
inc
xchg
js
pop
inc
jnp
lea
jb
movsb
mov
push
sub
je
adc
sbb
mov
and
pusha
movsb
mov
fnstenv
testl
inc
leave
test
mov
push
pop
lcall
testb
or
std
push
fs
scas
inc
addb
or
fcoms
les
shll
lcall
ss
sbb
pop
adcl
mov
fstpl
xor
xchg
mov
sarb
pop
std
adc
sbb
fsts
adc
stc
or
call
icebp
aaa
and
in
loopne
sti
call
inc
pusha
data16
pop
cld
jo
add
stc
in
das
dec
outsl
fwait
xor
jb
ret
sahf
and
iret
adc
mov
push
int
and
stos
add
frstor
jb
jae
sub
xor
mov
clc
inc
push
ss
ret
fs
pusha
pop
dec
cltd
sahf
dec
mov
jae
add
jp
mov
lcall
sub
vpunpcklwd
jb
xor
pop
jnp
adc
sbb
sub
jne
mov
or
and
cmp
in
jg
aas
movsl
mov
in
or
push
out
push
mov
daa
vsubss
lahf
push
mov
es
addr16
jno
jp
pop
xchg
sbb
dec
xorl
fs
lea
addb
js
jnp
add
add
das
aas
loop
stos
cli
lret
mov
xlat
es
into
pushf
movsl
ja
dec
testl
outsl
pop
out
fnsave
adc
mov
fwait
int
popa
ljmp
scas
mov
mov
lahf
test
mov
pusha
sub
adc
ss
sub
fcoml
fsubl
repz
sahf
enter
leave
adc
mov
add
loope
sub
add
orb
shll
sbb
and
or
stos
sub
xor
mov
mov
pop
ficoms
jmp
lahf
add
ret
test
rclb
mov
push
fcomps
mov
adc
out
dec
shr
rcrl
or
dec
mov
popf
fmuls
xchg
ljmp
mov
scas
inc
xchg
lahf
ja
js
cmp
mov
sarl
out
push
jae
add
jp
mov
xchg
cmp
int
pop
mov
enter
mov
jg
lods
sahf
hlt
loopne
fisubrl
cmp
loopne
jmp
fnstenv
outsb
iret
xchg
sub
lahf
test
adc
xchg
ja
ds
xchg
aas
jne
sub
scas
scas
fwait
testb
sub
mov
xchg
cmp
xchg
sbb
bound
into
scas
fdivrs
xchg
push
lcall
pop
mov
in
jmp
mov
mov
or
fstps
jbe
rcl
xchg
pop
scas
inc
mov
mov
orl
iret
jge
sbb
ret
mov
mov
imul
xor
or
out
jge
inc
pusha
adc
inc
pop
lcall
sbb
out
int
cmpsb
pop
imul
iret
sub
stos
pop
pop
xor
xchg
pop
mov
xchg
je
out
mov
xchg
lock
pop
cmp
mov
out
and
jg
lahf
incl
cmp
push
or
mov
test
les
dec
jo
lock
pop
out
jmp
mov
or
adc
pop
push
cli
jae
ret
mov
loope
inc
or
pop
xchg
sub
mov
push
xlat
lcall
cmc
lock
sub
push
lcall
add
mov
jp
pop
ljmp
jbe
cs
jne
push
mov
movsl
and
test
fwait
mov
movsl
add
dec
insb
fldl2e
outsl
cld
into
mov
xchg
mov
xchg
scas
imul
sbb
jae
popl
fmull
pop
push
stc
mov
cmp
sub
gs
stos
rol
or
push
xor
jecxz
cmp
fs
mov
popa
add
pop
mov
shll
orb
or
and
dec
jb
lock
lods
lret
mov
push
xchg
pusha
das
sbb
or
scas
call
lds
std
push
cmp
inc
xchg
das
xchg
and
je
jno
add
mov
or
pushf
ljmp
movsb
fdivrp
dec
jp
lods
jns
xchg
jecxz
mov
jp
push
push
adc
inc
out
test
je
repz
sub
inc
mov
push
xor
sti
push
mov
jge
sarb
sbb
cmp
mov
prefetchw
pop
fwait
movsb
aad
add
sbbb
inc
cmpb
mov
outsb
jp
in
push
dec
or
xchg
std
ret
or
leave
add
push
cmp
xchg
lret
inc
pop
xchg
insb
pop
std
xor
out
mov
push
pusha
cmp
sbb
add
inc
mov
jne
insb
cld
scas
rol
test
mov
push
stos
mov
in
ss
leave
mov
leave
dec
mov
dec
ljmp
sub
cmc
inc
push
lds
add
rcll
pmaxub
push
hlt
pop
in
aad
fwait
cli
add
in
popa
icebp
adc
jmp
mov
sub
mov
lock
mov
imul
cmpsl
dec
pop
mov
push
mov
scas
adc
xor
outsl
ds
sbbl
xchg
mov
lods
xchg
jb
jb
jle
data16
pop
imul
xlat
into
push
das
jae
jmp
pcmpeqd
mov
sub
jecxz
mov
inc
cmp
test
mov
faddl
push
adc
nop
les
mov
dec
mov
insl
es
or
sbb
push
ficomps
shll
fs
rcl
lcall
mov
add
add
add
jb
fsubr
ffree
bound
jg
repz
stos
sub
in
xlat
stos
frstor
mov
popf
sahf
or
mov
sarl
sbb
popf
gs
add
push
or
fabs
sub
in
clc
lds
sub
shlb
adc
xchg
jns
arpl
fucomi
and
cmp
inc
xlat
in
pushf
push
stos
mov
xchg
repnz
sbb
lahf
fwait
gs
popf
movsb
cmc
out
jb
push
fildl
add
cmp
cmpsb
in
push
xchg
ret
xchg
cwtl
jb
mov
xor
lret
repz
jno
popa
lcall
shlb
aam
dec
fs
inc
sub
into
pusha
jbe
aaa
adc
test
insl
xchg
mov
out
mov
xchg
in
jle
shrl
fwait
sub
cwtl
mov
lahf
lcall
lds
sbb
adc
orl
mov
jno
sbb
push
pushf
adc
adc
mov
jnp
cmp
mov
xlat
sub
jae
pop
out
outsb
in
call
data16
daa
add
repnz
sbb
and
inc
sahf
inc
out
movsl
adc
cmpsl
xlat
push
lds
scas
in
inc
and
push
xlat
std
ja
dec
fldenv
xchg
mov
push
add
test
sbb
jne
mov
movsl
mov
pushf
or
or
xchg
pop
xor
cmp
add
sub
lahf
imul
sti
testb
xchg
shr
cmp
sub
ljmp
stc
out
fwait
push
or
je
mov
add
inc
add
lret
jne
push
or
inc
xchg
sub
imul
mov
push
sbb
dec
or
aas
dec
pushf
out
lea
call
mov
adc
push
inc
or
lret
push
jne
mov
push
dec
repz
cwtl
loope
mov
sbb
and
mov
es
int3
or
and
adc
inc
jge
mov
fnstsw
ja
imul
mov
testw
or
arpl
rol
or
add
mov
cmc
repnz
xor
pop
cmpsl
mov
mov
sar
xor
cmpsl
jo
pop
lds
mov
lds
xlat
push
pop
inc
add
into
sbb
pop
scas
and
das
jmp
lcall
loop
sbb
xor
and
in
mov
dec
xchg
mov
mov
fwait
mov
sarb
addr16
faddp
jns
inc
adc
fcmovb
push
sbb
imul
fnsave
aad
dec
cld
or
out
fidivrl
mov
push
clc
and
fwait
inc
jns
sbb
movsl
popf
rorl
out
add
jge
clc
icebp
xor
adc
mov
sbb
or
dec
pusha
push
aam
in
jo
pop
mov
and
rcrl
pop
jb
mov
push
sub
fwait
test
in
xchg
rolb
lock
or
in
sbb
sub
xchg
dec
mov
lcall
jb
jne
fdivr
cmp
xor
cmpb
pop
pop
test
inc
adc
pop
jb
dec
pushf
pop
and
sahf
mov
dec
jne
dec
sbb
aad
jae
dec
xor
and
mov
sbb
xor
push
fstpt
push
sti
sahf
int
pop
mov
jo
xchg
dec
jae
adc
mov
lret
push
fbld
add
cmpb
pop
test
mov
push
dec
push
pushf
push
shlb
scas
aas
push
cwtl
jns
int3
data16
cwtl
or
lahf
ja
push
faddl
xchg
sbb
cwtl
mov
in
call
movsb
or
cmp
mov
mov
js
xor
xor
dec
repz
out
mov
mov
jns
mov
jle
stc
fwait
push
movsl
subb
sbb
cmpsb
xorb
fstps
mov
das
out
mov
mov
fisubs
cmp
clc
lcall
sahf
jg
push
adc
pop
pop
icebp
mov
rolb
loopne
leave
mov
pop
sbb
test
les
mov
ret
add
sub
and
int
outsl
aas
out
test
inc
gs
inc
loope
das
sub
push
dec
mov
pop
mov
data16
dec
add
jl
mov
lcall
fdivl
ss
sbb
ret
cmp
stos
cli
sbb
je
xor
lret
iret
jg
push
and
cmpsb
pop
jle
in
js
sub
xor
std
or
test
cwtl
mov
jae
sbb
lret
or
repnz
cmp
insl
xchg
sbb
out
jb
dec
xchg
or
xchg
imul
inc
inc
or
test
ja
add
out
cmp
popf
mov
pop
cmp
jns
inc
cmp
lret
jno
push
mov
or
pop
fldcw
jae
mov
mov
xchg
xor
or
add
xor
std
xlat
sbb
repz
push
enter
xchg
fsubrs
call
les
mov
dec
je
fnstenv
popf
mov
popf
std
sbb
jne
fiadds
xchg
jns
sti
jle
mov
push
fsubp
push
rcll
fcmovnu
xchg
negb
sti
adc
mov
movsb
lea
jg
dec
sub
repnz
dec
cld
mov
mov
pop
cwtl
imul
cmp
jns
dec
into
imul
aaa
xor
loope
jmp
into
mov
push
in
lret
jg,pn
pop
inc
dec
imul
mov
inc
xor
and
movsb
mov
ljmp
sbb
ret
pop
or
pop
or
mov
icebp
cmp
daa
stc
pop
jle
cli
sahf
lret
fcmove
cli
cmp
negl
dec
cltd
aas
xlat
leave
xor
aaa
sub
imul
mov
dec
cmp
test
pop
jge
daa
test
movsl
mov
xor
dec
push
mov
dec
maxps
insb
cli
inc
pop
push
or
cmpl
and
std
mov
lods
pop
mov
fnstenv
mov
in
orb
rclb
fs
fs
into
cmp
xchg
cmpsb
lret
in
outsl
icebp
lcall
add
inc
data16
mov
or
mov
imul
lar
xor
adc
aas
aam
sbb
and
jae
mov
std
sti
sub
lcall
mov
push
inc
lahf
scas
test
dec
pop
aas
inc
scas
movsb
test
scas
movsl
das
jbe
push
addb
ja
xchg
std
pop
add
stos
or
dec
test
mov
enter
jb
std
mov
mov
dec
and
rorb
or
jl
sbb
cmp
push
iret
jne
aam
cmp
outsl
sbb
add
or
repnz
sub
or
and
xchg
push
jp
test
or
jbe
sub
and
mov
ds
jns
xor
add
int
stos
test
jno
and
mov
cwtl
aaa
push
arpl
leave
pop
fisubs
mov
xlat
mov
out
fimuls
jb
sbb
push
sub
mov
int3
dec
xlat
mov
mov
icebp
or
push
mov
or
mov
lret
jae
stos
push
lcall
sub
lcall
mov
mov
lret
lock
loop
push
mov
cmp
xchg
hlt
xor
jge
sbbb
mov
in
pop
dec
loopne
fimuls
stc
in
cmpsb
sbb
adc
and
push
rolb
sbb
sub
test
fsubr
bound
sarl
ret
push
sbb
adc
push
mov
push
inc
mov
test
cmc
mov
dec
call
inc
clc
test
mull
loopne
dec
lret
pop
das
pop
or
loop
out
loope
push
push
out
sub
insl
ficomps
lds
mov
inc
push
and
cmpsb
xchg
in
and
movb
inc
daa
mov
mov
mov
push
pushf
xchg
xchg
test
sub
loop
in
sbb
cmpsb
test
pop
push
pop
sbb
bound
jp
lods
xchg
push
pop
gs
sbb
imul
inc
insl
mov
sub
push
or
inc
adc
mov
loop
adc
mov
ja
push
or
push
mov
mov
arpl
pop
dec
mov
pop
dec
adc
imul
inc
loopne
xor
dec
rorb
push
movsb
je
jp
xor
testl
pop
outsb
dec
lds
and
sub
pop
faddl
das
jecxz
decb
and
test
xchg
jecxz
into
xor
test
sub
imulb
mov
fidivrl
ficoms
mov
imul
xor
roll
sub
mov
lahf
aas
adc
push
add
orl
call
es
lds
inc
loop
das
xor
pop
test
mov
rorb
cmpsl
gs
fcomip
push
out
pop
clc
jae
xchg
mov
setle
xor
adc
xchg
mov
mov
aas
cmp
pop
lret
lahf
adc
popa
xchg
stc
mov
out
ror
mov
cld
adc
pusha
inc
lcall
and
enter
inc
mov
into
push
xor
jnp
xor
xor
cmpsl
xchg
jnp
jp
mov
sub
add
lock
dec
arpl
xchg
mov
rcr
test
dec
jae
sbb
push
aas
sahf
lahf
mov
and
add
int
fsubrp
outsb
rolb
xchg
fistps
or
xor
cmc
xor
emms
jmp
dec
stc
cmp
rolb
mov
cmp
mov
xlat
mov
adc
shr
and
scas
scas
loop
cmp
loope
xchg
push
fsubl
jno
push
dec
std
rclb
lock
fwait
test
mov
mov
xor
shl
add
push
test
adc
xlat
push
cmovle
std
jge
cltd
dec
repz
je
xchg
stos
mov
dec
xchg
aam
nop
rcrb
xor
dec
scas
inc
movsl
test
ret
mov
jae
out
xor
mov
and
lret
adc
dec
scas
fmuls
sbb
and
iret
sbb
lcall
cli
test
cld
imul
dec
mov
mov
mov
pop
push
xlat
movsb
loop
pop
push
imul
loop
mov
add
ret
add
push
in
setb
jno
mov
jp
stc
push
push
push
sbb
aaa
mov
inc
inc
sbb
mov
push
lea
pop
bnd
setle
or
inc
sbb
in
xchg
nop
iret
adc
repnz
cli
mov
inc
clc
aas
ret
std
xchg
cli
scas
jle
das
mov
test
idivb
enter
xor
fwait
not
dec
ret
mov
add
pushf
out
jmp
je
fsubrl
out
pop
xchg
cs
ja
fs
sbb
enter
pop
jbe
lea
dec
inc
adc
jmp
pop
leave
inc
ds
dec
mov
fistpl
or
sbb
push
fimuls
push
sahf
mov
mov
inc
inc
or
test
sub
repnz
sbb
test
aas
mov
pop
enter
jno
inc
inc
xchg
sub
mov
notb
int3
lods
pop
pushf
in
xor
sbb
xorb
int3
cltd
mov
fwait
divl
or
jb
andb
mov
les
mov
rclb
in
es
xchg
cmpsl
imul
test
mov
pop
aam
addb
xorl
ljmp
fs
cmp
lods
roll
pop
ror
mov
sbb
dec
insb
cmp
addr16
or
es
dec
test
movsl
nop
sbb
cs
push
sbb
ljmp
push
and
mov
jl
jo
jmp
add
jg
jl
jbe
call
dec
sbb
cli
fwait
lret
push
test
or
roll
lea
pavgb
cmp
arpl
inc
or
push
push
ss
sub
cmp
jns
xor
movsl
dec
jno
jge
jns
jmp
cmpb
pop
mov
mov
sbb
adc
sbb
sbb
add
out
add
mov
or
add
dec
icebp
jg
test
out
call
jge
enter
adc
dec
push
rorb
adc
outsl
xchg
push
movsl
pop
push
mov
test
pop
push
out
dec
jb
cwtl
xlat
inc
loopne
pop
inc
shrb
mov
xor
pop
xchg
sub
jne
lea
add
xlat
pop
pop
outsl
aam
jns
jmp
dec
out
int
inc
sbb
mov
ja
or
out
and
lea
sub
and
mov
dec
mov
pop
sub
xchg
mov
addr16
das
mov
add
fists
xchg
bound
imul
push
sbb
pop
push
xor
or
or
mov
aam
imul
movsb
fidivs
out
stos
cmp
mov
imul
je
cmp
ds
arpl
lock
mov
xchg
repz
add
popa
or
and
jbe
shrb
lea
ret
ljmp
rolb
sbb
push
pop
sub
xor
dec
or
pop
les
xlat
loope
dec
outsl
aad
mov
sub
bound
sub
and
imul
and
jnp
jle
dec
xchg
cmp
adc
leave
sbb
adc
lret
mov
xchg
iret
mov
outsb
sbb
jo
out
mov
push
jb
cmpsl
lods
push
adc
aaa
xor
test
dec
inc
shll
inc
in
xchg
cmp
in
fwait
pop
pop
pop
ljmp
inc
lds
mov
out
mov
scas
sbb
dec
cmp
xchg
push
insb
xchg
pop
mov
sbb
push
sbb
jnp
repnz
inc
jecxz
addr16
test
mov
leave
adc
lcall
mov
push
inc
dec
push
mov
pop
push
cmc
or
mov
cmpsl
push
ja
or
out
shrl
out
push
push
cmp
shrl
mov
call
bound
cmp
out
fwait
imul
mov
in
xchg
cmp
fwait
xchg
cmp
into
fdivrs
jle
test
leave
xchg
sar
cmpsl
xchg
sub
outsb
xchg
out
adc
inc
jo
lods
or
inc
sarl
pushf
daa
shlb
shrl
push
mov
jnp
jge
out
add
mov
nop
jecxz
aas
insb
sbb
xchg
stos
mov
mov
cmc
push
hlt
mov
inc
adc
pop
out
popf
movsl
inc
push
mov
lahf
ficomps
nop
add
lret
cvtps2pd
xchg
leave
movsl
fcmovnbe
xchg
scas
fsincos
jecxz
or
shll
mov
pop
dec
pop
ja
add
and
jge
outsl
out
push
xchg
cmp
fwait
dec
xor
inc
and
mov
fldenvs
iret
and
in
pop
insl
sarb
mov
jb
adc
arpl
rcl
adc
cwtl
repnz
cwtl
in
sbb
sbb
sub
mov
cmpsl
fnstsw
das
ljmp
inc
add
cld
loope
jnp
jne
fnstenv
repnz
test
pop
sub
jmp
loop
xor
sbb
or
pop
sbb
das
loope
add
int
test
enter
dec
pushl
arpl
mov
mov
xchg
add
stos
add
xchg
addl
dec
or
xor
out
mov
stc
fwait
scas
adc
push
mov
sbb
mov
push
aad
push
scas
inc
dec
or
mov
test
push
negl
rcll
add
mov
mov
or
aas
pop
iret
ror
icebp
popa
pop
aad
cmp
xchg
xchg
pop
mov
add
or
push
add
ss
aad
shll
xor
mov
call
imul
adc
ret
sbb
lahf
mov
add
aad
lock
lods
inc
jecxz
fnstsw
xor
sar
and
mov
inc
daa
sti
adc
push
pop
lods
pop
push
pushf
inc
out
out
jne
xchg
xor
incb
les
std
mov
xchg
shlb
jl
into
das
xor
pop
cld
or
xchg
scas
jb
out
dec
inc
das
stos
sbb
mov
cli
gs
dec
mov
mov
popa
icebp
push
ret
je
pop
popa
xchg
gs
xchg
dec
adc
repz
mov
clc
xlat
xor
aam
jne
inc
xlat
pusha
mov
add
cld
dec
cs
data16
add
cmp
stos
shll
das
inc
cld
sarb
int3
repz
fimuls
sub
out
xchg
loopne
bound
cmpsl
xchg
lods
addb
into
lret
ja
xchg
cmc
loop
jne
pop
addr16
push
mov
roll
repnz
dec
aam
into
inc
push
jno
cmp
cmp
sbb
fucom
ljmp
aad
not
gs
lcall
loope
xor
andb
cmp
sti
in
inc
insb
cmp
push
xchg
xor
xor
jbe
add
rcl
pop
xchg
test
inc
out
cmp
cmpsb
cmpl
add
jno
or
jg
cmp
je
add
sub
and
adc
xchg
add
clc
push
in
pop
enter
popf
test
and
cmpsb
dec
jns
adc
xor
cmp
idiv
hlt
add
in
scas
or
in
push
sbb
pop
sub
jg
xor
xchg
sbb
subb
mov
setg
repz
adc
rcl
sahf
rclb
loopne
mov
adc
sti
mov
insb
mov
outsl
aam
mov
xchg
in
fisubrl
nop
imul
push
fdivs
repz
cld
leave
mov
stc
setg
lahf
pop
xchg
dec
loope
div
mov
jl
roll
stos
mov
sti
xchg
cltd
jp
and
mov
loop
push
cmp
insl
fsubs
jge,pt
mov
aam
adc
jg
ds
sub
xchg
lods
call
adc
adc
scas
xor
jecxz
dec
or
jnp
xorl
add
pusha
js
cmp
nop
pop
adc
fwait
addr16
and
iret
mov
popf
jbe
stos
cs
pop
fsubs
push
scas
or
adc
daa
imul
mov
or
gs
push
jno
cmp
ret
jecxz
xor
enter
stc
not
addl
outsl
mov
sub
in
mov
pop
push
xor
mov
in
dec
dec
loop
sub
imul
adc
inc
push
inc
subl
inc
shl
jns
xor
sub
fistl
xchg
push
dec
nop
es
cmpsb
pop
ret
xor
push
jbe
fmull
popa
mov
mov
pusha
cmc
jp
cmp
and
cmc
insb
push
adc
mov
mov
pop
daa
or
imul
xchg
xor
cs
push
inc
inc
pop
dec
les
sbb
jmp
sbb
in
enter
pop
or
sub
mov
xor
paddd
repnz
jle
nop
inc
xchg
pop
cmp
push
ja
mov
xor
shlb
pop
jne
mov
jne
insb
dec
ret
jmp
js
inc
xor
std
xor
nopl
out
int3
xchg
lret
adc
insl
popl
dec
cwtl
into
testb
and
jmp
test
cs
adc
dec
scas
lods
gs
ljmp
add
xchg
ds
stc
cmp
mov
adc
test
dec
loopne
mov
loope
pop
loopne
adc
adc
movsb
es
push
sub
push
sbb
jge
pop
scas
insb
fbld
and
lret
lods
cltd
mov
loop
and
cmp
xchg
adc
lret
xor
inc
je
ja
xchg
scas
mov
add
test
and
sub
stc
adc
adc
jbe
test
dec
push
stos
iret
outsl
pusha
mov
loop
adc
pop
mov
jmp
test
mov
mov
cld
ljmp
and
mov
flds
push
fwait
push
in
add
and
cmpsb
fldl
bound
xchg
adc
jnp
retw
in
pop
xlat
rcr
mov
cmp
cmp
fucomp
int
inc
add
adc
int
push
ljmp
mov
pop
push
mov
orl
inc
xor
loope
and
sub
roll
lods
inc
or
movsl
mov
out
enter
dec
dec
mov
je
cs
mov
or
ja
or
dec
or
xchg
sbbb
sub
das
and
mov
jmp
push
sub
test
pop
aam
sub
or
cs
jae
or
jno
insb
mov
lahf
push
gs
nop
adc
and
xchg
daa
out
repnz
mov
jbe
or
mov
xchg
jno
fwait
cltd
mov
sub
cmc
ret
fstps
cmp
or
test
cmp
xlat
cmp
sarb
je
fbstp
pop
push
mov
out
hlt
adc
enter
fnstcw
mov
jmp
popa
nop
jmp
shl
mov
cmp
mov
scas
idiv
inc
lods
adc
fsubrl
and
push
dec
or
inc
sti
mov
pop
int3
jne
in
pop
test
cli
jbe
xor
sbb
movsl
xchg
xchg
rclb
adc
rcl
arpl
rclb
cmp
test
hlt
mov
dec
jae
rcrb
adc
push
push
loop
pop
add
push
push
push
rcll
adc
fs
dec
cmp
bound
jb
ja
aas
adc
ret
push
and
pop
hlt
in
aaa
xchg
push
daa
addr16
ror
movl
adc
jmp
pop
adc
dec
dec
fadd
stos
mov
mov
filds
dec
xor
add
movl
dec
int3
cmp
cmp
rorb
adc
push
imul
cmp
in
jo
jno
inc
sbb
add
add
hlt
pop
pop
notb
dec
test
mov
inc
pop
xchg
inc
push
sbb
ljmp
in
ljmp
dec
jo
inc
imul
push
jg
mov
enter
jno
dec
in
fsubp
adc
inc
inc
lahf
loop
cmp
nop
pushf
faddl
scas
and
mov
mov
sub
mov
push
rorl
push
and
and
out
repz
push
push
div
dec
loope
xchg
push
mov
adc
xor
stos
dec
andb
lea
aad
rorb
adc
clc
popf
sbb
adcl
rol
popa
sub
shll
mov
fcomip
sub
xchg
add
ss
sahf
repnz
call
push
push
xor
xchg
cld
inc
jbe
jae
sahf
stos
mov
into
push
rorb
push
and
xchg
jnp
shll
dec
scas
sub
add
mov
xchg
cmp
lcall
stos
clc
ja
lahf
popf
jne
fwait
movsb
fs
mov
sbb
pop
lock
aad
or
xchg
sbb
jp
inc
jecxz
test
sub
fcmovu
cmc
mov
fwait
sub
roll
lds
mov
insb
lods
xchg
rcrl
mov
pushf
mov
fwait
dec
aad
stos
xlat
sbb
test
add
xchg
or
lret
adc
mov
push
lret
sub
lret
lock
push
mov
out
pop
imul
lret
add
call
pop
into
jmp
mov
sub
add
lock
mov
sahf
pusha
inc
jg
add
dec
les
dec
rcl
adc
mov
stos
dec
adc
cmpsl
sti
lret
fs
jnp
int3
xchg
sub
or
vunpckhps
and
test
rolb
lock
out
nop
std
test
sbbb
ds
jb
out
mov
loope
xchg
cmp
or
jge
test
mov
lcall
xor
push
mov
mov
adc
dec
add
or
pop
inc
cmpsl
mov
push
aaa
inc
inc
iret
lods
and
inc
inc
sti
inc
imul
xchg
and
xor
sbb
dec
decb
jge
push
mov
in
jb
lea
or
mov
iret
andb
sbb
sbb
adc
pop
shl
mov
jnp
lret
adc
mov
into
outsl
inc
fcmovb
js
stos
mov
adc
test
adc
sti
call
bnd
xor
or
bound
mov
movsb
arpl
pop
adc
pop
bound
aas
sub
lds
jle
sbb
inc
xor
bound
xor
inc
xchg
add
aad
lcall
dec
idivl
scas
stc
xor
clc
pop
shrl
add
xchg
mov
das
sti
cmp
in
fcoml
sbb
ja
call
dec
jmp
repnz
movsl
push
pop
jecxz
and
nop
mov
fwait
add
xchg
fwait
ljmp
mov
xor
shll
shr
jo
push
xor
and
int3
or
or
fnsaves
out
into
xchg
roll
mov
popl
mov
in
push
cwtl
int
loop
lock
aad
mov
sub
cmp
ja
popf
lds
mov
inc
fcmovnb
adc
aam
daa
or
push
push
jg
mov
jmp
jg
add
jle
lahf
mov
sub
jl
ret
sub
repz
and
adc
xor
xchg
iret
cmp
jmp
xchg
imul
mov
and
fwait
inc
inc
mov
mov
aaa
out
xor
pop
pop
fisubs
mov
inc
dec
repz
icebp
iret
jmp
hlt
pop
and
jp
lret
and
sbb
test
pop
push
pop
sbb
sbb
cmpsb
inc
aad
fadd
add
shl
lret
xor
ficomps
sarl
xorl
test
fdivrs
xchg
pop
insl
push
aaa
add
rorl
mov
pop
jno
mov
jno
adc
addr16
jbe
add
cltd
sbb
lds
sbb
gs
emms
and
int
mov
insb
insl
xchg
mov
xchg
push
arpl
call
and
mov
lret
sti
sbb
mov
xchg
push
leave
mov
cs
aas
add
mov
adc
sub
out
lret
xor
sbb
movsl
out
ret
dec
sbb
incb
push
and
mov
jno
inc
push
inc
or
lret
shlb
cltd
stos
mov
mov
mov
sarb
lea
aam
push
inc
cmp
cmpsl
movsb
cmc
call
in
lret
sbb
mov
push
jle
sub
jmp
ja
cmp
pop
xor
repz
ficoms
outsl
fldenv
cmp
jecxz
jmp
or
sar
sbb
fucompp
stos
in
sbb
xor
cmp
xor
pushf
and
insl
test
xchg
out
sbb
mov
push
lods
in
xor
mov
aas
imul
int3
push
pop
jg
aaa
xor
inc
icebp
mov
mov
cmp
rolb
lcall
push
push
ret
jp
jnp
push
lods
add
and
add
jp
pop
add
mov
clc
pop
les
sbb
push
push
push
inc
leave
pop
xchg
xor
ds
rclb
pusha
addl
jle
aad
push
int3
inc
mov
loop
mov
ds
mov
xchg
cltd
jge
insb
pusha
inc
mov
pop
test
pushl
push
adc
scas
push
call
fmuls
setge
mov
fs
inc
stos
fbstp
push
faddp
rcl
xchg
fiaddl
and
or
pop
insl
dec
inc
ret
testb
xor
daa
cmp
and
dec
pushf
jmp
or
mov
mov
stos
mov
inc
mov
stos
aas
nop
addr16
xlat
mov
xor
rcl
or
jb
outsb
lahf
mov
adc
push
dec
lods
push
gs
sahf
dec
repnz
std
jne
mov
shlb
fwait
jp
orl
sub
clc
mov
sub
or
mov
or
mov
sarl
mov
stos
pop
inc
dec
xchg
ds
and
loop
cmp
dec
vmovntpd
lret
pushf
test
and
movsl
cmovae
add
cmp
shll
mov
and
fstps
aam
inc
xorl
jecxz
cli
cli
mov
cmpsb
test
das
lret
ljmp
pop
jle
inc
data16
jle
out
xchg
jecxz
lods
adc
push
cli
mov
andb
jge
mov
dec
add
inc
aaa
fstpl
xor
stos
pushf
push
cltd
push
push
xor
lea
ljmp
iret
push
sbb
ret
or
int
dec
hlt
mov
cwtl
gs
inc
mov
cmp
inc
iret
jg
mov
pop
fnstcw
push
lea
imul
adc
xor
out
sbb
les
push
and
pop
sarl
in
div
adc
in
lods
std
es
mov
jnp
jp
jae
xorb
test
es
cmp
mov
test
outsl
mov
adc
pushaw
sbb
sub
mov
sub
data16
sbb
popl
sub
add
xor
push
movb
sub
sub
jns
xchg
movsb
mov
push
fs
cld
mov
and
cli
bound
sahf
add
inc
decl
push
jo
xchg
and
xor
adc
popf
cmp
pop
mov
xor
mov
repnz
push
sub
jbe
test
mov
stos
xor
sbb
jecxz
pop
fisubl
pop
lcall
or
cmp
js
int3
xor
jge
repnz
cwtl
fidivl
outsb
xchg
pop
push
inc
pop
loopne
pop
cmp
jmp
sbb
cmp
movsb
aaa
movsl
mov
jg
addr16
subb
jb
mov
movsb
and
shll
push
push
daa
add
mov
mov
mov
mov
icebp
mov
adc
pop
and
bound
jmp
orl
and
loope
jno
das
das
pop
testb
lret
loope
arpl
mov
or
add
pop
sti
lods
movb
push
jle
shrb
jecxz
push
mov
insl
jl
je
push
or
sub
frstor
jb
cmc
inc
sub
imul
mov
in
stos
adc
daa
gs
xchg
jae
xchg
push
and
jb
xchg
mov
lock
insl
and
inc
repnz
sbb
xor
shr
xchg
scas
movsl
xor
pop
fistps
adc
adc
cmp
jno,pn
mov
sub
or
dec
nop
out
cmc
sub
xor
push
pop
push
enter
leave
pop
pop
bound
mov
loopne
mov
sbb
dec
cmp
shrb
in
lods
testb
pop
mov
inc
sub
lahf
lea
es
dec
xchg
cmp
jle
push
xchg
les
mov
hlt
sub
rcl
jnp
imul
test
adcb
xor
jnp
bound
insb
outsb
sahf
mov
pop
push
mov
pop
enter
dec
sbb
adc
out
cwtl
jnp
push
inc
js
mov
mov
mov
dec
sbb
sbb
jmp
xchg
das
mov
push
test
cmp
bnd
insb
mov
dec
mov
cmc
ja
push
xchg
sub
fwait
xchg
aam
lret
fmull
dec
mov
sbb
pop
xchg
inc
stos
mov
xor
xchg
enter
sar
test
xor
outsb
pop
ja
int3
push
lcall
pop
push
gs
fcoml
mov
aam
imul
fisubrs
ret
insl
lret
movsl
lods
jne
aad
mov
or
push
and
test
jmp
in
pop
das
out
div
in
test
pop
cmp
repnz
or
in
popaw
addr16
outsb
fnstsw
orl
and
adcl
lock
xchg
cltd
cli
lea
sbb
popf
and
pop
push
subb
aas
and
arpl
ja
inc
test
out
in
popf
clc
jge
aad
mov
and
xchg
mov
lea
nop
push
cmpsb
add
mov
cltd
sub
sahf
mov
xchg
mov
sub
xchg
xor
addr16
mov
mov
lea
mov
ret
push
scas
dec
mov
and
mov
mov
outsl
mov
adc
inc
or
in
sbb
jae
and
cwtl
xchg
out
out
shr
or
xor
cs
cmc
jo
jle
or
scas
cmc
jl
push
xor
imul
cmp
adc
ret
inc
mov
and
mov
cltd
scas
stos
xor
fdivrs
rcll
test
subl
sub
xchg
jecxz
scas
das
dec
adc
push
in
mov
or
stos
add
std
adc
mov
cmp
mov
adc
dec
and
or
mov
jb
push
call
cmp
and
and
daa
add
cmp
cld
pop
mov
mov
mov
cli
jmp
dec
or
jno
adc
push
enter
stos
xor
cmpb
stos
sub
stos
jp
dec
call
or
jmp
dec
adc
lea
jecxz
scas
jmp
addr16
ss
sub
and
or
fs
jo
loop
add
xorb
jmp
addb
mov
shlb
shrl
roll
dec
movsl
into
push
setno
in
jmp
imul
cmpsb
out
rcll
jle
jmp
data16
push
aad
sbb
scas
popa
lods
into
mov
inc
ljmp
or
xor
into
pop
aad
mov
ret
inc
jno
sub
shrl
xchg
cmp
cmc
pop
xchg
and
pop
mov
inc
pop
xor
ljmp
or
incb
ljmp
push
in
jp
jnp
cmp
cmp
shll
std
inc
mov
mov
addl
inc
orb
loop
arpl
adc
xor
pop
push
inc
jge
int3
nop
test
stos
add
icebp
loope
sub
icebp
inc
push
add
xor
orb
cmpsb
cltd
xor
adc
shl
into
mov
jmp
and
leave
xchg
xor
pop
cmpsl
and
xchg
sbb
gs
cmpsb
inc
mov
into
pop
add
sub
lret
scas
sub
pop
cmp
repnz
leave
mov
popa
insl
jg
mov
and
push
movsl
jbe
mov
or
dec
sarl
mov
loope
push
adc
repz
in
icebp
mov
adc
int
arpl
daa
ret
or
mov
xchg
in
movsl
loopne
cld
xor
pusha
sub
subl
dec
bound
dec
jbe
rclb
or
cltd
or
sub
inc
mov
push
sbb
pop
rcl
add
or
lea
push
push
fcmovb
and
sub
rclb
sub
and
call
adc
push
xlat
push
add
loopne
dec
lock
hlt
mov
push
lret
bound
fsts
cmpsb
mov
jp
bnd
adc
sub
int
test
out
xchg
sub
or
ja
pop
dec
int3
mul
and
push
push
ja
cmp
bnd
stc
jg
jae
inc
dec
and
and
shll
fisttps
repnz
mov
adc
push
dec
popf
push
jo
inc
cmp
fisttpll
ret
dec
add
mov
sbb
es
fdivl
mov
inc
mov
mov
jbe
sbb
je
out
sub
push
cmp
adc
adc
jmp
pop
loopne
addl
sbb
pop
add
push
jbe
fsubl
aas
inc
rorb
pop
movsl
jb
push
sbb
cltd
fadds
in
xchg
cld
inc
fnstsw
xor
add
jge
sbb
fwait
pop
shrl
loopne
dec
mov
inc
jge
cld
lock
int
sbb
sbb
push
xchg
or
sbb
pop
cmp
pusha
pop
imul
imul
xchg
xchg
cltd
sti
mov
xchg
xchg
cmpsb
xor
push
ret
popa
sti
xor
jb
imul
push
negl
leave
and
inc
xchg
cmpl
insl
push
inc
dec
pop
add
icebp
ret
pop
scas
in
iret
push
sbb
push
loope
push
push
cmpsb
xchg
jmp
push
stos
aaa
adc
and
mov
fsubs
push
or
or
xchg
cltd
insb
xor
popf
xchg
divb
adc
outsl
jne
xchg
mov
outsb
mov
xchg
insl
add
and
or
push
out
pushf
insb
rcl
mov
jb
es
cmpsb
enter
dec
shll
and
mov
imulb
dec
das
mov
mov
fcoms
add
sahf
pushf
add
add
or
lods
sahf
arpl
jbe
mov
lahf
hlt
out
jnp
out
cmp
mov
and
push
xor
xchg
mov
add
inc
xchg
xchg
out
int3
int
cltd
lea
push
add
pop
ss
dec
xchg
xchg
lahf
pop
mov
arpl
mov
in
lods
out
sbb
hlt
cmp
insl
mov
iret
sbb
ds
jl
cmp
mov
out
loopne
push
decb
inc
cmp
inc
sbb
add
mov
subl
push
xchg
fidivrs
xlat
xorl
aaa
or
js
sbb
int
es
cmp
sbb
out
jg
ja
clc
mov
sbbl
cmp
mov
cmp
push
fldt
push
iret
out
scas
out
lahf
outsb
mov
outsl
insb
mov
xor
ret
leave
lcall
dec
sbb
dec
sahf
lock
dec
cmp
lahf
mov
stc
nop
mov
lcall
clc
sbb
or
out
inc
mov
addl
fimuls
stc
xchg
pop
sub
mov
icebp
sub
test
and
inc
pop
shll
push
lret
push
or
leave
in
mov
fcoml
cmovge
bound
aas
fisubrs
jle
inc
adc
repz
push
and
push
inc
fcoms
cmp
lods
daa
ret
cmp
fwait
daa
mov
pop
nop
inc
lcall
test
adc
iret
jmp
jo
inc
in
push
scas
push
orl
fcoms
repnz
rorb
insb
repnz
mov
jecxz
dec
scas
jo
sbbb
mov
jle
push
push
cmpsl
ljmp
adc
dec
arpl
test
and
ret
mov
lahf
cmp
mov
lods
xchg
jp
outsb
ljmp
insl
cltd
outsb
push
or
fimull
sub
mov
jae
sahf
daa
lret
iret
cmpsb
out
rcr
inc
popf
pusha
pop
inc
jle
and
lods
out
xchg
outsl
and
push
ljmp
aam
sub
je
cmp
fsub
push
scas
nop
mov
movsb
fsubl
je
jl
popf
jb
cmpsb
lods
lods
jle
loopne
mov
jle
cmp
outsl
lods
dec
je
movsl
cltd
inc
pop
movsl
cmp
sbb
cli
loop
outsl
cmc
cmp
xor
dec
pop
mov
in
mov
cmpsb
sub
xor
push
mov
cmp
cmc
and
sbb
sub
mov
and
lcall
inc
lods
sbb
fldt
test
mov
repnz
mov
insb
inc
inc
dec
inc
imul
cmp
xor
add
aam
lcall
mov
call
arpl
jnp
push
imulb
fnstenv
fnstenv
mov
pop
lea
cltd
xchg
call
sbb
std
push
iret
test
aas
loop
ret
mov
xor
outsb
mov
xchg
rclb
repnz
xchg
jp
icebp
sti
fwait
jae
ljmp
bound
or
subb
xor
outsb
int
push
inc
jecxz
out
pop
dec
inc
test
mov
testl
mov
add
sub
xchg
adc
nop
mov
inc
pusha
sbb
popf
sbbl
aaa
xchg
xor
movsb
pop
or
adc
mov
bound
bound
jge
inc
imul
stos
adc
outsb
pop
mov
and
mov
jge
mov
cmp
mov
ror
push
jp
xchg
sub
mov
ud0
je
mov
or
jbe
mov
iret
mov
or
aad
inc
pop
mov
in
lea
iret
shlb
inc
in
mov
push
lahf
jno
push
pop
push
mov
xor
xchg
pop
nop
lahf
push
loop
xchg
movsb
push
xor
add
sti
clc
loopne
out
cltd
xor
sub
in
mov
xor
into
sub
scas
and
pusha
sbb
cmp
sub
xchg
xor
inc
adc
jle
push
and
lock
sarb
jb
cmp
ljmp
mov
je
test
sub
nop
push
pop
or
loopne
cmp
mov
mov
outsl
or
ljmp
adc
cmpsl
adc
mov
int
push
cmp
inc
inc
inc
out
cs
stos
mov
std
sbb
jge
sub
add
mov
fistps
call
mov
add
sbb
xor
jg
ret
cmc
mov
jmp
add
dec
sarb
mov
pusha
lods
loop
adc
out
mov
mov
xchg
and
lahf
add
jns
jle
inc
jbe
cmc
push
popa
and
mov
movsb
addl
mov
adc
fdivl
in
mov
fcomp
sbb
jp
lea
inc
je
cmpsb
cmpsl
add
js
shll
cmpsl
xlat
fisubrl
xor
cld
cs
inc
in
sub
push
sti
sbb
stc
addr16
xor
aas
mov
jbe
xchg
pop
ja
mov
int3
mov
adcb
negb
mov
mov
xor
add
jecxz
cmpb
sbb
mov
movsb
pushf
mov
inc
sbbb
cli
xchg
ljmp
adc
sbb
xchg
xor
movsb
xchg
push
jae
xchg
cmpsl
mov
popf
in
enter
inc
pop
rcrb
dec
ret
jne
pushf
ja
stc
and
jno
insb
test
fldln2
mov
sub
mov
clc
out
mov
xor
mov
ja
mov
jb
jns
mov
adc
mov
lds
in
cmc
sbb
xchg
mov
enter
movsb
roll
stc
fisubs
mov
pop
je
stos
inc
insb
mov
sbb
or
outsb
adc
dec
cmp
roll
xor
sbb
es
push
mov
fldl
std
push
xor
outsl
mov
jmp
int
cmpsl
jmp
dec
xor
sti
hlt
je
cmp
data16
or
push
out
push
mov
ljmp
inc
or
fisubrl
ret
daa
cltd
sarl
movsb
pop
popl
je
push
sub
mov
outsb
add
adcb
loope
pop
add
ret
in
adc
mov
aad
dec
or
xchg
mov
jnp
fwait
adc
les
cmp
push
inc
add
test
scas
jno
push
loope
in
add
insb
fisubrs
push
shlb
cltd
jne
pop
data16
loope
rol
jmp
shll
inc
insl
sub
sbb
sti
insl
adc
imul
xchg
cmp
mov
fidivl
mov
dec
jge
dec
stos
inc
dec
jl
cwtl
push
add
test
xchg
push
xor
ljmp
fimull
call
mov
sub
div
xor
pop
mov
in
cwtl
in
outsb
lcall
jl
mov
test
lret
pop
sbb
shl
int
adc
pop
test
inc
in
xchg
ja
les
mov
fcoms
jo
into
xchg
aad
sahf
insl
push
push
or
inc
mov
sub
cltd
cmc
lcall
gs
js
fisttpll
fs
stc
leave
aas
sti
gs
packuswb
cmp
scas
das
out
dec
nop
pop
es
imul
push
adc
pop
pshufw
pop
fwait
mov
or
and
mov
sbb
add
push
pusha
aam
addb
ret
orb
or
add
mov
adc
pop
jae
fldt
outsb
aas
das
enter
incb
mov
dec
push
test
mov
sbb
lea
testl
incb
pop
lea
das
and
scas
sbb
mov
cmp
jl
adc
xor
test
xor
out
mov
or
in
sbb
ucomiss
cmc
mov
test
dec
adc
sub
clc
es
lea
rolb
ja
ret
xchg
mov
cs
adc
inc
es
push
sbb
data16
pusha
pop
aaa
rcrl
dec
mov
jns
fimuls
shlb
inc
outsb
andb
pop
in
jg
jne
mov
jmp
and
pop
jecxz
add
inc
stos
cmpsb
cmpl
jge
xchg
addr16
shlb
inc
ret
test
ret
xor
pop
jne
sbb
into
push
jo
ja
xor
ficomps
idiv
jbe
and
cmp
inc
addl
test
int
or
pop
xor
add
pop
ss
adc
stos
cmp
cli
dec
push
mov
in
cmp
push
push
stos
repnz
push
sub
icebp
mov
lahf
sbb
pop
outsb
push
test
lods
mov
adc
lods
mov
dec
aad
mov
add
shl
mov
add
popa
sbb
push
dec
cmp
popa
fsubrl
pop
ss
mov
cli
in
in
popa
adc
push
les
jno
rol
pop
add
lock
mov
add
ret
mov
dec
or
xchg
mov
roll
fildl
test
ljmp
xor
arpl
loope
test
add
and
ds
movsb
adc
cs
xchg
lcall
test
pop
pop
aaa
in
pmaddwd
pop
cmp
in
pop
ficomps
sbb
in
in
je
das
xlat
mov
jnp
mov
cmp
inc
lret
ljmp
mov
add
lods
add
adc
insl
inc
cwtl
xor
jmp
mov
push
xchg
ficoms
icebp
mov
insb
push
add
pusha
gs
mov
fs
pop
jno
jecxz
jo
imulb
xchg
lcall
test
xchg
or
xor
test
fwait
jnp
ret
dec
pop
mov
cmc
cmp
imul
test
push
popf
inc
data16
sbb
aas
adc
loop
pushf
cmp
fmull
or
sbb
cmc
mov
mov
frstor
inc
andl
jnp
pop
inc
sub
int3
jmp
mov
dec
cwtl
jae
std
in
sahf
adc
push
outsl
and
shll
out
roll
arpl
mov
sti
xor
mov
xchg
adc
rcrb
fldenv
xor
test
mov
or
sbb
mov
push
add
nop
popa
lahf
add
push
nop
sub
ficoml
bound
test
adc
sub
stc
repnz
cs
cmp
mov
jp
lcall
sub
jns
imul
mov
int
cmp
je
and
ror
outsb
mov
pop
push
inc
sahf
lret
and
mov
repnz
clc
lret
cld
ret
mov
jbe
jecxz
mov
sbb
pop
or
sub
mov
cmp
out
mov
cmc
pop
cwtl
add
xor
push
sub
add
push
std
dec
mov
cmpsb
rorl
jo
and
adc
push
jmp
cmp
testb
lahf
arpl
andl
adc
add
loope
jp
movsb
lahf
pop
adc
jp
dec
addr16
decb
xchg
inc
add
jp
mov
pop
push
or
cmp
int
pop
pop
mov
addr16
sbb
mov
shl
popa
adc
pop
and
popf
sub
jns
push
fimuls
cmp
bnd
push
lret
push
or
fbstp
push
nop
imul
fstps
and
mov
or
loopne
sarl
xchg
or
mov
mov
popa
mov
mov
pop
shr
push
adc
mov
aas
in
jne
lret
cwtl
push
adc
xchg
add
movsl
xchg
and
push
test
test
push
addb
lret
and
rcrl
in
inc
pop
xchg
and
enter
pop
iret
cmpsl
in
sub
mov
add
push
jno
lods
sbb
sub
sub
mov
in
shl
pop
movsl
mov
jl
sub
in
or
aam
gs
push
shlb
xor
pop
mov
cmp
and
es
and
jnp
pop
jno
push
mov
xlat
repz
fidivl
and
stos
and
dec
leave
jp
mov
xchg
sbb
pop
or
xchg
adc
stc
cmpsb
es
adc
adc
pop
adc
fld
mov
lahf
inc
jnp
fcos
sahf
sbb
clc
dec
xorl
add
xchg
pop
push
popa
and
dec
cmc
and
mov
mov
push
jmp
mov
scas
mov
mov
shlb
mov
movsl
mov
lret
lahf
insl
xor
decl
popa
and
jl
wbinvd
and
xchg
arpl
adc
test
cmp
loop
insl
pop
dec
cmc
sbb
daa
out
in
loope
xor
popa
aam
jp
dec
scas
es
out
pop
xor
movsl
pop
mov
sbb
stc
sub
dec
lret
jb
add
xorl
lds
std
mov
negl
xor
repz
adc
jnp
push
movsb
inc
int3
pop
cmp
cwtl
sarb
out
xor
pop
pop
cld
test
out
outsl
insb
pop
das
mov
jecxz
or
xor
call
inc
and
outsl
dec
xlat
cmp
stos
ds
hlt
dec
scas
mov
xchg
dec
test
int
pop
sbb
mov
inc
aas
add
jbe
ret
call
or
sub
cmc
sbb
push
test
adc
pop
or
lds
sbb
mov
loop
sub
or
xchg
out
sbb
repnz
xchg
push
lahf
dec
mov
and
cmp
mov
pushf
in
jbe
loope
testb
ljmp
jnp
cs
sub
orl
mov
sub
lock
xlat
loope
js
lea
push
mov
adc
pop
pusha
mov
mov
push
mov
jbe
adc
xchg
inc
adc
fmull
in
mov
aaa
add
sub
leave
jo
inc
push
xchg
sbbb
inc
inc
loop
sbbl
xor
jb
jl
jbe
mov
jge
inc
fwait
or
leave
push
mov
lea
es
inc
sub
and
cltd
ret
xchg
shrl
jbe
rcrb
and
dec
mov
sahf
bound
sarl
xchg
push
sbb
xchg
pop
pop
cld
push
mov
mov
icebp
xchg
mov
enter
mov
test
add
pop
testb
push
lahf
add
jne
scas
insl
jp
pop
pop
mov
xor
mov
and
sbb
sarb
and
scas
inc
cmp
push
test
jne
int
ss
cmp
cmpsl
push
add
ret
fcoml
xchg
int3
loopne
jae
push
stc
pop
mov
in
jns
push
mov
lds
mov
dec
xchg
ja
loopne
lea
dec
or
icebp
mov
or
hlt
fstpt
xchg
lahf
int
sti
outsl
cltd
inc
ljmp
inc
pop
xor
xor
insl
adc
lods
adc
xor
xor
out
shr
pop
sar
ficoms
pop
pop
shrb
idiv
inc
popa
dec
mov
inc
mov
jmp
repz
mov
cmpsl
call
dec
lods
cld
mov
push
fldt
lock
xchg
add
inc
push
pop
and
push
xlat
in
lods
lret
jge
nop
or
dec
jno
dec
cmp
sub
aaa
mov
push
jns
sbb
fs
out
sbb
lods
sbb
lahf
sbb
stc
outsb
cmc
data16
std
jp
mov
pop
and
xor
int3
es
sub
aad
sub
cmp
pop
ret
mov
lahf
xchg
test
nop
mov
gs
push
cmp
xor
shrb
push
mov
addl
dec
in
fdivrs
bound
xor
in
lcall
std
std
cltd
xor
mov
test
data16
fcmovu
negl
lea
or
out
sbb
sarl
inc
pop
cli
insb
inc
ss
aaa
sbb
pop
cmp
jle
sub
pop
add
test
lret
ljmp
mov
jecxz
inc
jecxz
dec
jo
dec
mov
jecxz
loop
push
std
jmp
pusha
cld
push
mov
lods
sbb
mov
mov
inc
cmp
pusha
stos
mov
inc
pop
lret
scas
jne
push
gs
adc
and
pusha
inc
push
iret
push
out
dec
or
push
addr16
xlat
pop
cmp
nop
cmpsl
adc
xor
nop
or
cli
leave
bnd
add
pushf
sti
push
stos
mov
pop
imul
nop
jp
pop
outsb
and
adc
jae
xor
stos
sub
sahf
popa
mov
data16
lcall
push
dec
mov
test
sahf
xchg
jecxz
enter
cmp
xchg
aam
popa
fs
movsl
test
ljmp
xchg
bound
xchg
dec
mov
pop
sub
insb
pop
cmp
movsl
xchg
adc
push
icebp
pop
std
push
aad
fsubrl
inc
fmuls
xchg
cmpsl
and
or
aad
andb
or
mov
roll
add
in
shrl
lret
push
hlt
push
xchg
lea
js
jp
dec
lds
push
in
aas
test
imul
jo
test
ret
ficoms
push
ss
push
dec
inc
add
mov
lock
or
push
push
int
xchg
xchg
push
imul
or
pusha
shl
mov
lock
gs
mov
sbbb
mov
add
cmp
sbb
dec
aas
xor
mov
nop
jb
and
cmp
jl
mov
test
xchg
push
ljmp
jmp
add
aaa
xor
loop
cmp
pop
in
decb
sbb
pop
sbb
enter
add
inc
popf
popf
push
fstl
mov
jno
enter
push
or
add
int
sbb
hlt
pop
maxps
pusha
jnp
pop
addr16
ja
cld
les
mov
sti
xchg
push
cmpl
addr16
pop
ds
pushf
popa
shll
arpl
xchg
test
push
insl
outsb
fcmovb
dec
jmp
leave
or
pop
loopne
push
into
adc
sbb
into
mov
or
xor
xor
stc
mov
and
or
jns
add
cmp
out
pop
push
dec
jp
jnp
lcall
xchg
fisubrs
stos
mov
daa
daa
pop
add
or
inc
mov
imul
cmp
cli
psrlw
push
and
insl
in
push
aaa
popa
lcall
jl
jl
rcl
mov
sarl
pop
nop
outsl
push
xor
pop
mov
and
xchg
insb
sub
inc
stos
adc
jp
jae
jo
in
mov
lret
bound
data16
mov
aam
scas
jbe
xchg
push
or
jmp
jo
jmp
cmp
xchg
pop
jae
dec
push
push
push
sbb
jno
mov
xchg
or
add
scas
sub
sti
mov
sar
jecxz
mov
imulb
mov
test
jl
cmpsl
or
cli
outsb
insb
jb
test
jne
inc
in
dec
pop
or
out
lods
cmpsl
or
stos
pop
arpl
xchg
mov
mov
lretw
mov
inc
loope
xchg
adc
fwait
pop
dec
into
aam
lods
cs
dec
mov
int
out
or
das
cmp
ror
and
clc
out
xor
in
mov
into
pop
push
adc
adc
add
mov
mov
movsb
paddq
dec
mov
adc
cwtl
sub
mov
cld
add
in
sub
cli
pop
mov
scas
rcrl
rclb
cmp
xchg
adc
les
mov
in
add
push
mov
scas
lret
push
sarb
mov
dec
clc
popf
fcoms
clc
testl
outsb
repnz
sbb
adc
loop
sbb
cs
xor
repnz
pop
mov
in
mov
push
push
jp
xchg
xlat
xchg
bound
stos
xchg
orb
out
jo
jmp
cmp
cmc
jb
add
rcll
xor
mov
lock
dec
jmp
adc
pop
push
mov
in
adc
jl
out
xor
lret
xchg
movsb
loope
xchg
mov
outsl
sub
inc
cmp
add
clc
mov
call
push
rcll
push
cmp
adc
push
mov
jns
cmp
xlat
test
pop
js
mov
jae
imul
ret
mov
lret
int3
jne
sbb
jb
les
sub
xor
cltd
call
sbbl
imul
jns
or
dec
addb
mov
stos
dec
nop
push
lret
jl
cltd
pop
inc
in
in
push
inc
and
or
int
loopne
cmp
into
gs
xor
or
mov
mov
mov
test
and
les
gs
mov
xchg
and
push
cmp
add
add
cmp
sti
pop
call
shrl
xor
xlat
push
dec
loop
scas
jmp
dec
pop
lahf
xor
mov
ljmp
das
mov
fstpl
cmp
push
push
dec
es
sti
cmc
mov
inc
mov
mov
sbb
push
in
push
inc
jge
sarb
jb
jecxz
icebp
pop
jne
fsubrs
push
into
dec
adc
scas
loopne
push
mov
sti
cmp
and
dec
ds
stc
loope
mov
iret
rclb
jnp
xchg
jns
and
xchg
mov
jp
pusha
jle
or
dec
rolb
int3
testl
jb
fisttps
cwtl
andb
nop
dec
mov
and
push
cs
cmp
subl
aas
adc
inc
test
idivb
xchg
loop
cli
mov
stos
adc
jmp
mov
dec
shlb
dec
lret
jmp
or
movsb
xchg
xor
push
xchg
sub
inc
aas
imul
cmpb
pop
fcmovb
jecxz
inc
jmp
incb
stc
push
and
mov
ss
mov
out
ja
xchg
adcb
pop
cltd
mov
pop
sub
pop
add
test
mov
inc
mov
push
mov
loope
inc
xor
movsb
dec
ljmp
je
popf
and
fcoms
push
cmpsb
loope
or
lcall
in
jge
insb
sbb
in
push
ficoml
fsubrs
flds
lahf
sbb
sub
shlb
cmp
xor
adc
cwtl
pop
das
in
jbe
sub
fbstp
dec
das
mov
jecxz
int3
cmp
sahf
sbb
push
xlat
imul
outsb
push
xor
cs
pop
pop
cmpsb
mov
mov
xchg
inc
xchg
rcrl
sahf
or
pop
xlat
pop
nop
shll
mov
cmp
cmpsl
mov
aad
dec
insb
lods
movsb
push
pop
mov
adc
push
jnp
ror
je
sbb
xor
fnsave
jnp
inc
fisubrl
rcrb
dec
imul
dec
mov
jg
jno
stc
pop
seto
add
fs
dec
sbb
mov
out
ds
push
mov
pop
scas
cmp
cwtl
mov
dec
insb
adc
xchg
sub
adc
pusha
sub
or
mov
movntps
dec
dec
mov
es
sbb
cli
push
in
jge
out
js
mov
shlb
mov
cld
es
jae
or
cmp
jb
lods
or
arpl
out
xor
in
jnp
push
or
jl
push
ret
ss
lea
adcb
sbb
sub
lcall
rcrl
in
or
adc
add
jg
inc
xchg
rcr
gs
int
jge
pusha
call
inc
ja
stc
sub
fmull
dec
adc
push
jmp
rcl
mov
jecxz
in
cmp
dec
jle
stc
or
aaa
adc
hlt
adc
lds
dec
sbb
fstpt
pop
addl
add
cmc
mov
icebp
aaa
test
xor
movsl
sbbl
and
xchg
sub
xor
jle
pop
mov
inc
fs
pop
test
push
jo
mov
lcall
mov
scas
push
jl
jge
sbb
mov
hlt
cli
cld
add
or
sbb
xchg
dec
xchg
jge
cmpsb
scas
xor
leave
pushl
ds
xor
xchg
cld
add
in
cmp
jnp
lcall
adc
push
js
xorb
or
stc
stos
data16
test
pop
jbe
inc
push
std
daa
and
mov
sarb
div
lods
mov
mov
sub
cmc
add
xlat
lods
call
sahf
dec
les
jno
mov
add
insb
clc
inc
fwait
outsb
jae
lds
sub
adc
push
les
cmp
xor
clc
sbb
sbb
inc
pop
test
rorl
call
adc
inc
jg
pop
xor
pop
movsl
push
fiaddl
outsl
sbb
jae
notb
ja
and
push
jp
fs
mov
xor
cltd
mov
xlat
cmp
movsl
out
inc
pop
xor
hlt
subl
ret
sub
push
and
push
and
jle
popf
lods
or
sar
je
int3
aad
sub
lods
jmp
mov
jno
lea
stos
ljmp
and
hlt
jle
fs
xchg
pop
test
mov
pop
add
orl
mov
adc
cmp
mov
lahf
sbb
enter
aam
and
mov
jle
aad
xchg
lds
dec
arpl
xor
lods
jns
cltd
pslld
sub
push
add
fcoml
xchg
cmc
sbb
je
add
stos
outsl
fisubs
lock
je
daa
pop
add
pop
and
gs
addr16
sub
xor
add
imul
js
jns
repz
jno
outsb
test
test
xchg
cli
jb
ljmp
stos
pop
mov
mov
sub
cmp
sub
pop
icebp
cmc
insb
jmp
pop
std
outsl
inc
add
pop
into
push
shll
stos
lds
sub
mov
sbb
jl
out
mov
ljmp
cmpsl
cmp
mov
xchg
sbb
roll
or
jp
and
shll
adc
stos
push
xchg
sbb
push
mov
cmp
test
and
xor
bound
add
testb
and
jl
inc
gs
adc
cmp
mov
mov
dec
jbe
cwtl
jg
jbe
jno
ret
das
inc
stos
add
jg
sahf
add
adc
clc
insl
push
in
push
mov
jmp
stos
adc
dec
inc
daa
mov
xchg
adc
push
mov
out
iret
test
sub
in
mov
and
sbb
aam
ja
or
inc
sbb
jnp
push
addr16
mov
sahf
in
ljmp
loop
push
mov
rep
movsl
leave
and
push
push
mov
pop
mov
mov
lock
sbb
movl
out
mov
into
call
inc
xchg
loope
dec
inc
js
push
out
sti
jbe
sub
xchg
and
xor
add
mov
xchg
mov
add
dec
push
lods
loopne
pop
cli
xor
loopne
mov
xor
outsb
cltd
popa
nop
sub
fidivrl
test
xchg
mov
in
int3
inc
cld
jno
adc
xor
cmp
sbb
mov
shl
lock
mov
push
push
adc
movsl
jae
add
dec
lea
fadds
pop
lcall
aas
daa
lahf
filds
mov
clc
sub
pop
cmc
push
jge
in
xchg
fsubl
jge
ffreep
jne
pushl
cmp
jl
mov
pop
rclb
mov
sahf
lds
pop
jl
in
mov
add
iret
mov
mov
in
leave
pop
lcall
pop
add
inc
stc
jecxz
sub
hlt
add
stos
rcll
cld
cwtl
mov
sahf
fs
dec
mov
mov
loopne
shrb
push
scas
mov
jne
jecxz
movsb
mov
xor
lods
fsubrl
clc
xchg
inc
pushf
inc
fstpt
aas
movsl
and
shrl
std
in
add
pop
test
insb
jmp
mov
cmpsb
insb
and
pushf
pop
sbbl
loope
in
mov
mov
lret
ret
popa
push
xchg
imul
pusha
lds
das
cmpsb
or
or
jmp
cwtl
push
and
aaa
xchg
cwtl
inc
repz
mov
aam
adc
std
cmp
xchg
mov
sbb
mov
repz
rcrl
add
imull
or
pop
jne
pop
pop
popa
cwtl
pop
sub
jecxz
push
shl
insl
inc
sahf
aas
mov
aaa
dec
push
adc
lret
mov
fs
push
and
sub
jae
sub
pop
cltd
adc
sub
ror
outsl
arpl
sbb
call
or
lret
imul
lret
push
pop
pop
xchg
lret
ljmp
or
movsl
mov
jnp
jae
rclb
dec
shr
mov
pushf
ficoms
cmp
movsl
xor
stos
pop
dec
cmp
xchg
in
add
pop
pop
jnp
inc
adc
call
nop
push
cmp
fs
rcl
push
fbld
mov
sbb
test
sub
or
lods
insb
push
shrl
mov
jmp
jne
outsb
mov
cltd
dec
dec
int
pop
out
pop
xchg
sbb
bswap
sbb
in
lahf
jl
call
and
or
mov
test
fcompl
arpl
sbb
data16
ss
xchg
pop
addr16
pop
or
push
push
in
dec
jb
out
mov
lods
es
repz
mov
mov
xchg
dec
xlat
ljmp
mov
subb
filds
cld
xchg
add
xorl
dec
daa
rcl
xor
dec
dec
ret
pop
mov
fldt
pop
outsb
out
inc
or
cwtl
xor
add
push
cmp
out
addr16
jl
icebp
sbb
stos
sub
ds
out
dec
popf
mov
je
bound
movsl
sbb
adcl
adc
pop
sub
fdivrs
or
inc
lcall
fiaddl
jp
stc
lret
call
or
or
sarb
sbb
iret
movsb
mov
jbe
scas
jns
and
add
sub
lds
mov
xchg
loope
loope
jl
lds
and
sahf
jle
cmpsl
or
mov
scas
jns,pt
push
mov
dec
adc
jmp
jg
rcl
cltd
arpl
push
into
fldt
jo
pop
inc
leave
push
insl
and
and
and
lret
je
cmpsl
les
cmp
stos
in
addr16
inc
repnz
mov
mov
cmp
mov
in
xchg
ficoml
jg
hlt
lfs
mov
iret
jb
pop
ficoms
shrl
mov
mov
rclb
rcll
sbb
adc
loope
pop
mov
jns
sarb
cmc
add
scas
and
sub
out
outsb
jecxz
jae
cmp
push
cld
push
cmp
inc
mov
loopne
into
inc
scas
inc
hlt
cmp
int
push
andl
mov
sub
jne
mov
test
push
cmpl
and
dec
jge
not
jl
mov
sbb
mov
fabs
mov
pop
push
repnz
rcll
and
adc
test
cmc
add
ret
jnp
ljmp
loopne
lods
mov
addr16
mov
xchg
fisubrl
sahf
pop
jp
ret
jnp
add
mov
out
pushf
xchg
repnz
fidivrs
dec
mov
cmc
test
out
neg
cwtl
daa
mov
rorl
es
xor
pop
push
imul
inc
add
dec
test
clc
les
inc
cmp
jecxz
push
mov
mov
sbb
daa
fisttps
ljmp
jle
cwtl
inc
test
in
jmp
test
and
pop
dec
xor
movsb
adc
jb
push
xchg
lods
pop
leave
dec
aas
pop
mov
mov
inc
pslld
adc
push
xlat
ficoms
outsb
call
test
test
pop
dec
les
ret
mov
xchg
into
in
shlb
mov
rcrl
loopne
bound
or
aam
jge
push
or
das
mov
pop
loopne
sar
inc
dec
lods
xor
test
inc
testb
mov
push
ret
insl
mov
xchg
mov
dec
sbb
bound
pop
das
enter
loop
and
mov
fwait
jb
stos
outsb
sbb
pop
and
stos
or
xorb
mov
aam
loopne
pop
pop
popf
cmp
filds
pop
daa
pop
xor
mov
mov
xorb
sbb
cmpsl
scas
enter
mov
dec
mov
cld
adc
fcomip
xchg
daa
stos
cmpsl
jge
jo
test
cmc
add
xchg
aad
xchg
loopne
sar
add
into
inc
sbb
add
mov
jbe
add
jmp
sub
pop
sbb
outsb
xor
pusha
add
sub
pushf
jae
and
mov
push
test
push
mov
xor
mov
sbb
pop
outsl
inc
pop
andb
dec
add
fmull
jae
roll
jne
hlt
xor
rorb
imul
enter
scas
movlps
jnp
mulb
lahf
push
lahf
xchg
adc
fstpt
adc
addr16
push
shlb
cmp
xchg
sbb
shr
fcmovu
rolb
jae
rcll
out
jecxz
cs
cmp
andl
pmaddwd
movsb
xchg
sbb
rolb
cmp
dec
es
push
mov
pop
sbb
xchg
jecxz
lret
pop
bound
scas
mov
push
pop
and
daa
fbstp
fisubrs
jnp
aaa
xchg
out
sub
scas
push
inc
in
inc
cmpsl
movsl
push
sbb
xor
sub
daa
or
sbb
push
cmpsl
gs
inc
jae
and
and
sub
push
add
dec
shll
bound
test
popa
jp
hlt
dec
sarb
daa
xor
push
es
cmp
stos
and
call
jno
lret
fnstenv
mov
ljmp
stos
sub
testb
lcall
jb
mov
mov
mov
sbbl
fs
cld
or
jb
fstpl
imul
adc
shr
xor
lahf
sub
ss
pop
les
push
sti
flds
inc
pushf
stos
stos
mov
scas
mov
filds
imul
jp
xor
mov
jno
xor
enter
fidivs
stc
sub
fs
add
dec
sbb
icebp
cmp
push
mov
js
pop
out
test
shr
pop
ficoml
add
cmc
fcompp
push
xor
ret
sahf
fisttps
lds
mov
add
sbb
and
push
inc
ficoms
and
scas
jmp
ja
bound
adc
push
xor
into
ss
dec
divl
popa
add
dec
into
inc
mov
sbbb
jl
stos
std
add
adc
int
sbb
stos
adc
addb
mov
jns
jno
cmp
add
test
cmp
xchg
sbb
xchg
add
enter
mov
adc
out
sar
ret
icebp
in
cwtl
mov
insl
sbb
xor
and
rclb
jl
add
cmp
jle
dec
mov
repnz
mov
ja
cmp
out
adc
dec
cmp
fs
pop
mov
xchg
fsubl
lea
jmp
xchg
push
push
rcl
adc
push
xchg
xorl
jb
stc
mov
dec
jle
and
pop
sub
or
or
sbb
sti
jg
testl
pop
iret
push
vpackssdw
jl
adc
mov
mov
lods
pushf
fbstp
hlt
jl
xor
mov
or
mov
mov
rcrb
adc
or
cmp
mov
lods
inc
lahf
push
push
clc
clc
jae
jno
in
stos
sbb
inc
lods
fimuls
cwtl
aad
mov
sub
adc
jo
enter
mov
int3
sbb
out
leave
cmp
aam
cmc
push
jae
fwait
adc
or
scas
insb
add
ret
push
fsubl
shll
push
push
out
int
sub
xchg
push
getsec
push
sub
mov
in
and
fs
stos
cmpsl
rolb
lret
fs
es
sub
mov
jmp
ja
addb
scas
inc
mov
lds
inc
pop
fcmovb
test
cs
sahf
push
pusha
xchg
sbb
adc
dec
insb
jle
sub
imull
push
dec
lds
jge
enter
or
push
xchg
addr16
fsubrs
leave
mov
lret
xchg
cmp
xchg
sub
scas
dec
sbb
sbb
xchg
jne
xchg
jle
out
shlb
inc
aam
mov
jnp
shlb
or
shll
pop
mov
jbe
cld
daa
fbld
jns
or
mov
cmp
push
add
jnp
inc
nop
jl
mov
pop
cmpsl
lcall
dec
add
sub
jno
sub
mov
adc
aas
sub
cmp
and
mov
clc
fcmovu
dec
in
cmp
lea
jno
fwait
jecxz
add
inc
and
xchg
das
testb
stc
sub
mov
sub
ror
aad
mov
pushl
sbb
and
inc
ficompl
pop
cmp
mov
loop
and
mov
mov
sahf
xchg
jmp
cld
jg
jne
addl
sub
gs
inc
ret
cmpsb
jbe
dec
sub
jmp
pop
fsts
cmpsb
add
add
scas
xchg
adcl
push
add
aam
in
xadd
nop
test
in
pusha
cwtl
cmp
insb
sub
xchg
push
sbb
mov
jp
fwait
mov
cmc
out
cmp
dec
mov
sbb
clc
inc
xchg
pop
inc
aam
and
enter
ret
mov
mov
add
test
in
testb
mov
js
push
je
dec
mov
push
mov
and
iret
int3
mov
int3
out
sarb
jl
mov
dec
dec
insl
popf
hlt
hlt
mov
sbb
dec
lahf
es
loop
cmp
ljmp
test
loop
pop
xchg
ja
cmpsl
loopne
ret
pop
pop
push
mov
push
pinsrw
mov
add
repnz
sub
lcall
cmp
push
xor
pop
cmc
shr
cmp
mov
push
or
lods
insl
repz
sti
xlat
pop
xor
js
xchg
ljmp
xchg
pop
lock
fs
cmp
pop
xchg
push
xor
negb
in
jbe
dec
jp
das
cmp
dec
rolb
push
cwtl
ror
sub
hlt
push
mov
pushf
cmp
mov
mov
adc
loope
es
into
cmp
xchg
aaa
or
jge
dec
movsb
fnstenv
xor
dec
in
adc
inc
jp
cmpsb
lea
lret
or
xchg
nop
dec
dec
lock
lret
js
dec
fbld
and
adc
orb
lock
loope
testb
xchg
lea
ljmp
push
jns
cmp
das
test
jle
insl
enter
cmp
jp
loop
shll
sub
mov
push
add
push
add
inc
jbe
inc
dec
jns
dec
push
scas
adcl
data16
stos
or
leave
stc
cmp
xchg
stos
fwait
daa
mov
jmp
adc
jbe
sti
and
push
stc
or
test
insl
jp
adc
ret
popf
ljmp
testb
loopne
sbb
cli
fdivrp
mov
aam
sub
push
xchg
popa
add
mov
sbb
adc
cmp
sbb
scas
add
out
clc
sbb
mov
pop
xchg
push
ss
loop
cmp
mov
push
jle
adc
adc
push
mov
aad
xor
dec
jp
adc
add
jl
xorl
cmp
and
imul
jnp
xlat
and
dec
test
push
pop
cmp
and
sbb
cmp
add
scas
push
cmp
xchg
jl
cli
inc
pop
push
insb
cmpsb
cli
sbb
stc
lcall
and
ss
sub
mov
jge
rcrb
dec
xor
xchg
fimull
inc
cmp
jae
xchg
fs
fldz
insl
mov
inc
out
xchg
mov
inc
mov
jmp
pop
testb
mov
leave
das
jbe
in
push
jp
mov
mov
dec
xor
loopne
outsb
dec
add
movsl
jo
call
js
cli
lret
mov
int
aas
popl
rolb
pop
popa
lock
jmp
es
sbb
sub
mov
fs
adc
sbb
mov
movsl
aaa
test
jl
push
imulb
ss
or
ljmp
out
rolb
popf
andb
sti
jo
shr
cmp
addr16
jae
in
mov
cmp
int
mov
mov
setbe
xor
rcrb
enter
push
iret
pop
sub
cltd
sarb
fstpt
xor
push
cmpsb
or
hlt
fisttps
dec
out
subb
aad
icebp
jae
or
xorb
inc
jbe
daa
lahf
pop
rcll
jecxz
std
or
cmp
out
aam
iret
mov
loope
fs
xor
fdivrl
mov
pushf
movsb
insb
mov
loop
mov
ljmp
mov
insl
test
lds
mov
push
lea
movsb
or
xchg
inc
hlt
insb
inc
stos
adc
cmp
mov
mov
sbb
pop
xor
mov
pushl
cmp
pop
hlt
push
decl
cmp
cmp
xor
xlat
fs
aas
add
shlb
es
popa
je
outsb
adc
mov
in
aad
lea
mov
jp
mov
in
call
cmp
out
lods
test
lea
iret
push
inc
repnz
adc
test
lahf
jb
fwait
mov
shr
pop
jno
scas
jp
sub
inc
inc
ja
shrb
icebp
lock
pop
inc
pop
insb
adc
insl
je
data16
lods
push
or
dec
stos
mov
fiadds
jl
lea
mov
pushf
sbb
xchg
push
push
xchg
loope
repz
push
lcall
and
fdivrl
popf
sub
fidivrl
xchg
ficoml
lret
add
jbe
push
jmp
loopne
fwait
adc
repnz
aad
mov
test
sub
addr16
xor
jecxz
dec
pop
test
stos
out
orl
aam
cmp
cwtl
push
stc
aas
dec
test
mov
sub
sahf
faddl
ds
aam
cmp
sub
notb
into
cmp
push
dec
dec
sbb
aaa
adc
lahf
mov
or
aaa
adc
mov
out
mov
insl
jae
ja
mov
mov
xchg
xlat
xchg
xor
stc
push
adc
int3
cwtl
xor
mov
stos
jg
xchg
enter
ret
push
or
jo
mov
cmp
mov
sarl
lock
test
into
aas
gs
mov
push
jo
inc
xchg
inc
and
stos
aas
cwtl
das
cmp
add
adc
out
repnz
cmp
stc
sbb
rcrb
loopne
ret
mov
and
shlb
add
test
stos
jecxz
fstps
xchg
outsb
sub
mov
xor
and
gs
mov
je
and
mov
shrl
cld
push
xchg
out
cmpsl
xor
test
sarb
jns
addr16
rolb
xchg
fwait
xor
imul
add
out
dec
pop
loope
ss
std
pop
es
repnz
mov
xchg
sub
sbb
arpl
cmp
add
mov
pop
pop
inc
repnz
int3
mov
fwait
jnp
out
std
push
jmp
mov
xor
jmp
loop
stos
lcall
cmp
jg
enter
out
sub
orl
dec
frstor
data16
insb
or
jbe
xchg
arpl
push
bound
in
and
lods
lret
add
sbb
mov
pop
dec
dec
jno
mov
pushf
lret
mov
and
or
adc
shrb
popl
nop
pop
xor
js
call
push
jb
jbe
cmpsl
lret
fistps
or
mov
mov
shl
inc
adc
clc
xchg
dec
adc
leave
inc
cmp
push
push
xchg
subl
shll
shrl
mov
adc
jnp
cmp
and
cld
in
inc
jle
lods
js
insl
adc
add
jmp
sub
mov
mov
cmp
push
mov
jb
dec
in
jns
outsb
mov
or
hlt
sarb
mov
loopne
lea
or
xor
xchg
pop
imul
stos
icebp
popa
icebp
mov
xor
rolb
aaa
movsl
xchg
sbb
push
cmp
mov
dec
mov
or
xor
dec
scas
test
gs
in
scas
daa
test
rcrb
pop
mov
mov
xor
pusha
int
test
std
pusha
inc
dec
cmpsb
pop
arpl
sbb
xchg
lahf
pop
jne
mov
jne
jl
cmp
pop
in
and
push
jae
scas
aad
cmp
lcall
imul
movsb
repz
enter
pop
lds
xchg
mov
mov
or
in
test
rcrl
pop
push
je
mov
into
push
fwait
scas
adc
cltd
adc
sbb
push
mov
sbb
in
xchg
and
iret
adc
sbb
jp
iret
cmc
pusha
popa
out
les
push
cld
mov
push
inc
jnp
insb
pop
push
pop
loop
mov
or
test
mov
mov
push
xor
mov
sahf
icebp
cmpl
movsb
jg
loopne
lea
push
pusha
js
bound
outsb
push
ret
inc
hlt
mov
dec
in
add
jns
sar
dec
inc
jns
imul
or
stos
pushf
dec
popa
cmc
jmp
lcall
jb
pop
cmp
cmp
enter
sbb
cmp
mov
xchg
sub
outsb
jne,pn
aam
xor
out
fs
jmp
out
lcall
in
ja
inc
ret
imull
sbb
ss
ljmp
repnz
cmp
adc
test
cmp
rcrl
repz
mov
icebp
lahf
jb
lcall
and
adc
xchg
mov
out
pop
inc
daa
inc
add
out
data16
adc
cmp
cmc
cltd
add
jmp
inc
lods
ret
push
jge
in
test
sbb
push
sahf
mov
sub
loope
dec
dec
pop
add
dec
gs
ret
and
in
test
ret
dec
inc
in
dec
push
and
jne
sub
jl
mov
popa
xor
and
push
lods
or
aam
pusha
stos
paddusw
scas
enter
jmp
data16
rorb
cmpsb
in
pop
in
aas
mov
test
fistpl
pop
scas
je
sub
in
inc
xor
pop
aas
data16
or
adc
sbb
inc
jg
dec
inc
push
ficoml
adcl
mov
pop
adc
pop
inc
dec
dec
xchg
dec
stos
push
adc
push
cwtl
or
mov
pop
subb
pop
pop
lods
mov
dec
xchg
aaa
or
ss
int3
loop
mov
sub
sahf
les
cmp
divl
cmp
adc
insl
out
ja
gs
jno
jl
jns
fdivr
ds
ja
mov
test
cltd
mov
mov
sbb
jle
sub
pop
inc
push
adc
ret
push
mov
cmc
loopne
loope
mov
jecxz
frstor
lcall
bound
mov
cmp
mov
xchg
cs
push
out
iret
out
inc
loopne
push
dec
mov
mov
frstor
push
add
fs
xchg
pop
rcr
stc
rclb
cli
add
mov
rcrl
push
sbb
sbb
cmc
push
sahf
add
mov
fidivrs
outsb
das
mov
sbb
out
mov
pause
mov
out
adc
lods
lock
or
push
push
pop
lret
and
push
xchg
fimull
into
cmp
scas
std
mov
outsb
imul
cmp
es
aas
push
sub
adc
stc
mov
mulb
push
pusha
xor
test
jl
in
push
mov
jle
test
mov
mov
xor
xchg
mov
mov
dec
sub
cmp
out
and
sbb
loope
fiadds
xchg
sub
jecxz
adc
ljmp
pop
push
ret
add
movl
ror
jnp
sbb
insb
pushf
inc
movsb
add
mov
jne
pop
adc
mov
jg
inc
sahf
jecxz
and
cmpsb
jbe
cli
xchg
push
jmp
imul
shl
iret
jecxz
adc
imul
jno
orb
push
enter
aaa
push
xchg
add
imul
or
jno
sarl
adc
ret
shrl
fidivrl
mov
pushf
mov
cmp
pop
fdivrl
pushf
pop
cltd
sbb
cs
test
and
mov
es
stos
inc
inc
xchg
xor
movsb
and
mov
jo
cmp
lods
xchg
dec
mov
ds
pop
mov
jmp
inc
add
ucomiss
and
inc
cmp
jl
push
mov
push
out
push
sub
xchg
push
in
push
push
and
and
inc
in
fcomps
stc
cmp
mov
ljmp
adc
addr16
sub
out
xchg
jle
jl
cmpsl
xchg
jle
fcompl
sarl
ljmp
cmp
test
idivl
xchg
sbb
push
aam
fdiv
in
lcall
cmpsl
jno
ret
mov
shlb
mov
je
dec
lods
mov
sub
and
hlt
mov
popa
lahf
popf
in
das
jge
popa
orl
sbb
jnp
push
ret
dec
cltd
fucomp
xchg
daa
mov
addr16
sbb
scas
mov
out
xchg
adc
mov
xchg
out
mov
push
mov
push
out
loop
mov
jae
fdivl
dec
pop
out
lret
or
stc
fcmovbe
shlb
pusha
jp
pop
mov
inc
int3
jmp
jle
in
mov
adc
sub
mov
aaa
fisubrl
negl
xchg
cwtl
stos
inc
jbe
sub
and
add
xchg
out
sub
sub
dec
sub
dec
xchg
fwait
cmp
iret
mov
xchg
shr
and
sub
push
pop
sbb
xor
outsl
je
mov
lock
stos
lods
dec
cmpsl
sar
xchg
and
nop
lea
lods
sub
cld
mov
cmpb
cmp
sub
jbe
aad
mov
and
jl
fsts
or
sbb
cmp
mov
popf
popa
repz
cmp
imul
in
ja
xchg
mov
out
pop
aad
vpunpcklqdq
icebp
test
pop
push
leave
scas
loopne
scas
xchg
and
push
sub
xor
fsubrs
xchg
push
pop
sub
xchg
dec
cmp
mov
ret
inc
sbb
adc
pop
xchg
add
ret
cmp
ret
jno
fwait
jno
dec
push
fs
jno
into
inc
xchg
mov
push
cmp
add
data16
xor
jbe
mov
lret
fists
mov
push
daa
add
jbe
push
xor
fcoms
and
cwtl
lea
hlt
in
aaa
addr16
xor
lds
push
or
push
data16
and
jnp
mov
dec
and
fwait
push
lahf
push
fcompl
jge
mov
add
jp
fwait
lods
mov
xor
push
lret
lcall
add
xchg
sub
add
sbb
in
inc
hlt
mov
fimuls
aas
iret
sbb
test
in
xchg
xchg
enter
xchg
sbb
inc
arpl
jmp
xor
push
and
push
lcall
aam
lock
push
push
mov
jl
dec
jmp
lret
xor
sub
cmp
ja
inc
scas
aad
jae
jb
imul
dec
pop
fcomp
pop
push
lahf
out
clc
inc
xchg
enter
mulb
inc
mov
or
dec
dec
int3
pushf
mov
subl
or
iret
xor
pop
lret
push
fprem
fstpl
shl
test
data16
cli
adc
add
cmc
fwait
sbb
repnz
ret
dec
mov
pusha
cmp
sahf
cmp
mov
scas
leave
inc
pop
andl
test
mov
jge
popf
lret
outsl
sub
adc
add
sbb
lcall
clc
dec
fsubr
fisubrs
jmp
mov
das
cli
xchg
mov
fldcw
inc
mov
pushf
repnz
mov
in
inc
xlat
sub
pop
push
insl
jo
sub
add
xchg
inc
test
adc
inc
push
sahf
scas
ja
imul
add
jmp
icebp
mov
add
mov
daa
aaa
aam
sub
test
xchg
mov
fidivrl
push
int3
shlb
adc
ret
decb
xor
gs
imul
jb
loope
mov
leave
mov
jle
or
pop
sti
dec
inc
fsubr
cmp
inc
cmc
inc
adc
in
outsl
dec
push
sbb
mov
mov
adc
insb
pop
pushf
mov
push
andb
xor
loopne
add
aam
faddp
ljmp
stc
insl
jl
jmp
adc
stc
inc
xor
cld
mov
jl
cmpsl
push
adc
sarl
push
sbb
jb
or
sti
scas
xchg
call
and
push
fistps
out
cmp
movl
cmpsb
jle
sub
mov
popa
mov
xchg
push
mov
cmp
xchg
cmpsb
outsb
push
or
push
in
sbb
push
cld
pop
mov
mov
ljmp
xchg
mov
jg
jno
xchg
sub
fiadds
lret
mov
adc
adc
outsl
lea
pop
cmp
cmp
cmp
mov
cli
pop
push
add
aaa
jns
mov
push
clc
aaa
mov
int
sti
cld
mov
rorl
pop
push
pop
xchg
sub
mov
push
aas
arpl
lock
sbbl
mov
mov
push
scas
and
loope
sub
sti
adc
xchg
push
cmp
sub
in
push
loop
stos
sub
fcomps
xchg
fimull
sahf
divl
adcl
sarb
pop
out
outsb
cmpsb
test
ja
push
dec
and
xchg
lds
in
jae
imul
push
mov
adc
es
filds
inc
or
negl
dec
mov
jl
jne
lods
inc
pop
xor
xchg
push
sub
mov
les
cmp
inc
and
loopne
imul
aaa
sti
test
sbb
pusha
adc
push
ljmp
cmpsb
addb
or
push
pop
enter
sub
cmpsl
or
sbb
mov
and
or
and
xor
jmp
adc
xor
and
adcl
ljmp
arpl
jbe
dec
mov
movsb
mov
push
or
jb
inc
jg
arpl
lret
mov
ja
fmull
arpl
ret
sbb
sbb
or
sbb
scas
mov
and
pop
jle
movl
add
sbb
out
fidivrl
lcall
mov
mov
sarl
testl
cld
loop
or
cli
sbb
mov
inc
lock
adcl
into
popa
xorb
inc
int3
sbb
mov
push
jge
cwtl
mov
ja
sub
lods
daa
in
es
ljmp
mov
cmpsl
ds
jnp
movsb
xchg
cmpsl
and
lock
faddl
sub
xor
pop
cli
mov
add
inc
and
jnp
jmp
push
pop
insl
mov
sub
gs
or
ficoml
outsb
imul
cli
popl
cmp
scas
or
mov
mov
fsubrl
cmp
jg
fnstsw
xchg
test
call
xlat
clc
fprem
xor
xchg
xor
nop
aad
leave
out
inc
adc
dec
popf
pop
mov
dec
rorb
cmpsb
aad
sahf
shrl
add
sarl
mov
or
int
mov
stos
clc
mov
cwtl
lahf
pop
jp
cld
xor
call
sti
push
rcrl
pop
aas
imul
jg
sbb
inc
sub
cmp
icebp
sbb
in
pop
push
call
mov
outsb
es
adc
dec
ja
xor
adc
mov
xor
bound
pop
pop
jo
jg
data16
in
mov
test
mov
add
fcoms
dec
fnstenv
mov
ret
push
cmp
loopne
dec
loopne
popf
stos
ljmp
je
leave
out
stos
sbb
aas
jnp
or
test
push
xor
popa
shr
into
gs
mov
push
jmp
scas
jae
jae
mov
rcrl
fmull
jnp
push
ljmp
bound
stos
or
add
aas
pusha
adc
inc
cmp
inc
cld
andb
das
cmc
out
repnz
das
lds
cmc
cmp
and
dec
push
sub
adc
push
push
or
sbb
hlt
addr16
out
adc
mov
push
fstps
addb
decl
idiv
mov
iret
mov
call
std
fidivs
int3
fstpl
mov
jbe
push
imul
inc
mov
adc
fwait
xchg
jecxz
mov
popa
aaa
es
sbb
jmp
test
jmp
fldenv
int3
test
xlat
mov
mov
es
xchg
or
inc
das
je
cmp
in
aaa
xchg
scas
aas
cli
pavgb
mov
push
or
sbb
or
gs
out
and
push
sub
or
adc
and
aas
dec
sahf
jp
ljmp
in
xor
push
scas
sub
or
ljmp
and
pop
cmp
mov
mov
fsubs
cs
pop
jnp
jecxz
xor
xchg
sub
add
test
push
stos
shr
mov
sahf
sbb
push
sti
inc
hlt
outsl
and
dec
push
pop
das
xlat
lock
inc
cld
imull
jno,pt
repz
mov
sbb
mov
orl
mov
xchg
push
lcall
mov
scas
test
outsb
inc
dec
xor
mov
sub
or
adc
int3
cmp
sub
inc
imul
jbe
push
inc
arpl
test
aas
and
mov
push
mov
cmp
stos
in
nop
shlb
movsl
xchg
push
pop
loopne
inc
jns
jne
adc
test
mov
push
or
or
sbb
push
xchg
mov
push
mov
aad
inc
pop
scas
xor
push
aas
push
jg
gs
ror
pop
push
lods
in
push
pop
lock
cmp
scas
dec
mov
and
sbbl
frstor
ljmp
jge
sub
pusha
ds
nop
mov
pop
sub
xchg
jno
cld
pop
push
shlb
popa
imul
jmp
jne
scas
mov
xchg
mov
push
das
xor
lcall
sub
jo
pop
addr16
sub
outsb
add
pop
ja
push
or
loopw
inc
inc
shll
adc
push
jnp
adc
movsb
mov
xchg
mov
ror
jp
inc
bound
ret
push
daa
push
call
xchg
das
dec
mov
pop
and
int3
faddl
aas
mov
and
mov
push
mov
dec
pop
add
in
clc
pushf
jle
dec
xchg
xchg
xchg
adc
mov
imul
sub
cmc
jecxz
mov
xchg
mov
xchg
xchg
lahf
out
loop
add
xchg
pop
sub
adc
jno
mov
loope
test
sti
divb
pop
in
rdtsc
mov
lahf
scas
mov
xchg
insl
inc
addr16
jae
add
in
pop
sbb
je
or
outsb
out
dec
and
outsb
pop
dec
cmpsb
pusha
pop
insl
inc
sarb
inc
or
sti
adc
jmp
or
mov
mov
fdivs
fisttps
xchg
mov
out
jge
jb
mov
xor
jns
mov
jmp
mov
push
cld
jp
in
or
sub
lret
inc
icebp
push
in
sub
fstps
push
pop
push
sub
xchg
jge
and
inc
or
jg
ror
aas
fsubr
cmp
hlt
sub
shrb
lret
push
mov
outsl
push
mov
and
pop
inc
ds
jge
adc
mov
jno
sarl
mov
mov
push
add
std
loopne
sub
pop
or
mov
jne
nop
rclb
insb
mov
out
hlt
rol
dec
push
cld
mov
dec
push
mov
push
sub
pop
mov
mov
pop
std
cmp
imul
mov
mov
lcall
mov
xor
scas
sbb
in
or
xchg
sahf
mov
fdivs
mov
mov
test
jecxz
inc
inc
pushf
int3
mov
ret
xor
dec
adc
or
cmpl
push
pop
xchg
xlat
ljmp
sub
jmp
js
push
cmp
test
sub
inc
adc
xchg
jmp
icebp
cmp
jp
in
mov
jns
xor
icebp
push
jecxz
dec
mov
mov
add
je
and
cmp
inc
cs
pop
dec
xlat
daa
repnz
std
and
mov
adc
mov
push
mov
mov
mov
lcall
lret
sub
xchg
out
int
out
add
jae
das
xor
sbb
int3
cmpsl
lods
test
adc
jge
push
in
push
pop
sbb
cmp
popa
push
ds
mov
mov
fildll
lods
jge
inc
into
pop
mov
or
movsl
add
loop,pn
sti
aam
loopne
adc
or
or
xor
sub
sub
inc
or
mov
and
add
in
movsb
xchg
test
cwtl
add
test
loopne
pop
loop
jb
mov
outsl
and
fstl
scas
xchg
std
cmp
mov
mov
or
mov
shll
push
sub
inc
adc
and
loope
inc
dec
mov
ds
cmc
jecxz
mov
inc
push
sbb
fs
or
pusha
nop
ja
sbb
push
cmp
aaa
mov
push
adc
dec
xor
mov
mov
into
sub
jecxz
popf
outsb
lds
insb
sahf
das
mov
xchg
pop
cmp
add
repz
sbb
cmpsl
sub
leave
test
pop
cs
mov
leave
jnp
les
push
insl
mov
mov
lea
dec
in
negl
push
xchg
divb
or
insl
pop
out
aam
sahf
jae
xor
push
mov
add
aad
adc
push
dec
lcall
jns
lcall
es
orb
push
mov
out
pop
mov
fwait
shrl
cmp
jmp
ss
into
js
lret
sbb
les
and
js
jmp
mov
lock
xchg
cmp
mov
cs
enter
sarl
imul
jmp
outsl
mov
inc
xchg
cmp
into
jmp
jns
loopne
jne
or
cs
push
fwait
imul
jne
jp
cld
stc
jns
addr16
xchg
repz
pop
cli
xor
and
in
cld
mov
out
shll
push
xlat
push
jo
icebp
out
adc
xchg
push
jae
or
icebp
sub
jp
lods
pop
xor
arpl
fsubs
mov
push
inc
sahf
mov
pop
lds
xlat
xchg
rcrb
mov
fildll
popf
dec
pop
xchg
fcomps
das
xchg
pop
mov
ja
jp
jecxz
dec
cmpsb
sarl
out
push
or
mov
js
dec
out
test
xchg
sub
jo
xor
testl
mov
pushf
mov
mov
push
movsb
or
push
mov
mov
shr
hlt
inc
aas
push
xor
add
add
cmpsb
mov
aaa
push
jle
std
stos
test
fnstenv
popa
imulb
adc
ret
mov
fcmovb
mov
je
fiadds
or
mov
adc
cmp
sbb
add
ljmp
cmpl
stos
outsl
pop
mov
ficoml
subl
dec
shrl
mov
push
stc
cmp
addr16
jg
and
inc
test
or
mov
sub
jb
pop
lea
repnz
out
jle
popa
push
mov
sub
and
cs
mov
loop
dec
fs
adc
push
mov
out
or
push
dec
jnp
jmp
mov
push
jnp
cmp
push
pop
pop
mov
ds
inc
inc
or
loopne
xchg
imul
inc
out
cmpsb
stos
lods
xchg
cmp
push
mov
mov
loop
jg
mov
pop
mov
insl
sahf
cmc
jl
sub
or
inc
and
shr
loope
insb
lea
in
ret
and
stos
xchg
push
add
fisubl
mov
call
xorb
jo
mov
jae
adc
out
or
dec
push
or
dec
into
or
lret
repz
jns
cmp
xor
lods
sub
lahf
out
hlt
mov
push
cli
adc
push
pop
push
pop
adc
jge
add
stos
sbb
push
pop
mov
sub
sbb
loopne
xlat
jbe
cmp
and
fs
lahf
inc
in
xchg
jnp
test
movsl
into
sahf
jbe
xchg
out
add
insl
clc
push
cmp
das
mov
add
xchg
xor
xchg
jmp
push
scas
cmp
mov
push
les
mov
in
pop
in
jnp
lods
daa
dec
jmp
pop
sbb
add
leave
lds
in
push
fcomps
movsl
pusha
mov
push
add
sbb
xor
js
jmp
mov
negl
jl
sub
ficoml
je
pop
dec
insl
cmc
jge
pop
icebp
push
mov
xchg
and
insb
pop
cmp
push
les
push
push
push
stos
mov
jnp
mov
pop
cmp
ret
fstps
repnz
stc
pop
ffree
add
mov
add
fnsave
into
rcrl
movsl
arpl
jg
mov
cmpsl
and
or
xor
fadds
gs
mov
jae
xchg
pop
gs
jae
mov
push
dec
loopne
push
jge
jge
pop
or
sub
jns
fildl
xchg
dec
cmp
adc
pushf
mov
pop
jp
stc
ja
add
xchg
insb
push
ds
lock
das
dec
fisubrs
xorl
xor
ljmp
sbb
pop
gs
rclb
jb
xorl
sbb
inc
or
negb
out
add
clc
aad
mov
mov
sbb
fidivrs
mov
faddl
mov
stc
imulb
lret
sbb
ret
sbb
lahf
cmp
loopne
xorb
movsl
out
jmp
repnz
cli
les
in
lock
jp
push
fnstenv
mov
cmp
cwtl
xor
push
dec
or
out
cmpb
add
imul
adc
sub
inc
dec
stos
int
inc
or
lahf
cmpsl
push
js
movsb
xor
and
hlt
inc
daa
inc
cmp
add
mov
sti
repnz
xchg
adc
lods
cmpsl
xchg
mov
sti
cmc
out
adc
mov
or
ss
stos
iret
sbb
push
cmp
filds
ja
xchg
aad
xchg
test
push
sbbb
inc
pop
push
push
in
push
sbb
xchg
es
push
out
or
push
sbb
rclb
sub
iret
cmpsl
or
inc
or
test
dec
cmp
jl
xchg
mov
inc
test
mov
adc
inc
lcall
jne
xor
and
adc
repz
imul
lcall
fs
push
fcmovu
stc
or
movsb
les
inc
fisubrs
or
les
mov
movsl
add
das
fistps
dec
stos
sub
daa
imul
imul
jl
movb
test
aad
inc
fiaddl
mov
jae
adc
or
test
sub
xchg
fdivrl
sbb
push
pop
rcr
pop
cmp
scas
mov
sub
outsl
mov
sarl
mov
xchg
stos
and
xchg
bound
aam
inc
scas
xorl
pop
sbb
loop
pop
hlt
jg
sbb
push
push
lds
xor
outsb
lret
lahf
xor
or
push
mov
std
cmovg
pop
jo
insb
mov
fwait
sbb
fstps
lahf
fldt
cli
je
jnp
sbb
arpl
arpl
jnp
movsl
cmp
dec
inc
sbb
push
xchg
cmc
cmp
iret
xchg
test
out
add
xchg
loopne
scas
loop
inc
test
jae
shrl
dec
cmp
leave
jle
jnp
cwtl
sub
ret
ljmp
mov
adc
cmp
push
lods
jp
add
push
mov
into
add
sub
mov
imul
scas
xor
movsb
mov
jmp
mov
adc
gs
xchg
cli
ret
stc
inc
and
jg
xor
mov
add
sub
sbb
rcr
leave
jg
add
xchg
dec
lret
jbe
xlat
inc
inc
cwtl
xchg
or
aas
scas
inc
jmp
inc
fsubr
mov
loop
out
dec
inc
add
cmp
mov
push
ss
mov
or
adc
inc
gs
push
je
pushf
rclb
iret
cld
push
popf
sbb
dec
inc
andb
test
sbb
push
ret
jmp
popf
sahf
mov
pop
sub
sub
mov
shl
mov
iret
je
loopne
test
mov
push
pop
addr16
push
sarl
rclb
inc
jecxz
adc
sub
scas
ret
mov
sub
adc
cmpsl
pop
adc
sbb
jl
dec
xlat
and
into
sbb
cmp
out
mov
xor
dec
jo
imul
cmc
sub
cmpl
fwait
add
lds
stos
push
sbb
shl
ret
stos
bound
cli
sub
ds
test
out
adc
pop
mov
cwtl
enter
lds
popa
mov
mov
popf
stos
stos
enter
sbb
push
fwait
lods
sbb
cmp
pop
stos
dec
scas
sub
fiadds
cs
rorb
xchg
add
xchg
mov
adc
int3
sub
inc
data16
sbb
mov
arpl
jge
adcl
sahf
push
cmp
xlat
push
lea
jnp
icebp
gs
mov
out
addr16
xchg
xor
hlt
inc
dec
adc
lcall
jge
sbb
xorl
dec
adc
jo
int3
clc
out
pop
xor
das
pop
outsb
push
xchg
jge
js
pop
mov
xchg
fldl
repnz
fwait
repnz
cmpsb
shl
ret
inc
addl
mov
gs
lds
add
mov
lock
sbb
stc
test
mov
and
pop
mov
ljmp
cwtl
int
cmp
push
mov
movsb
add
in
jo
mov
jp
outsb
inc
xchg
add
lds
jne
xchg
femms
adc
jg
mov
dec
jl
and
jb
add
inc
xchg
psrlq
imul
add
xchg
adc
add
pop
push
adc
js
xchg
mov
xchg
sahf
addb
mov
cmp
push
movsl
outsb
not
mov
neg
sub
mov
sub
pop
iret
jo
pop
int3
xor
jg
adc
dec
sti
nop
js
xorl
and
sub
sbbl
jg
mov
clc
ret
test
xchg
stos
mov
movb
mov
inc
fstps
in
push
arpl
outsl
pop
jge
daa
popf
les
stos
fidivrl
loopne
pop
sub
add
scas
mov
addr16
push
mov
add
xor
dec
in
dec
test
insb
push
test
popa
mov
rcll
xchg
jl
es
aad
push
fisubrl
gs
jg
mov
lahf
xchg
cwtl
lahf
pop
sti
xor
clc
dec
pop
imul
mov
lret
sbb
loopne
icebp
loopne
push
jnp
loopne
dec
push
stos
ljmp
jnp
ja
scas
mov
cmp
ds
enter
or
ret
dec
les
std
push
test
cmpsl
mov
leave
ret
ds
mov
cmpsl
sahf
mov
pushf
cwtl
lock
dec
add
and
bound
movsb
xchg
cld
xlat
loop
outsb
jbe
mov
adc
jb
or
imul
mov
add
fs
or
cltd
cmp
sub
fnstcw
adcb
adc
mov
sub
mov
clc
out
mov
or
cltd
dec
inc
mov
adc
mov
jg
dec
fcmove
xchg
addb
jmp
adc
jo
and
push
in
xor
fwait
inc
js
sahf
mov
jle
scas
push
mov
mov
loopne
push
loope
mov
mov
xor
jge
jp
add
je
adc
loope
jne
popa
pusha
jmp
cmp
cli
mov
xchg
pop
push
fwait
xor
scas
sbb
push
jg
mov
mov
insl
inc
push
sub
fs
push
add
push
ljmp
clc
xchg
cld
dec
mov
xorl
add
or
cmp
jp
shl
mov
shll
jmp
je
sub
rolb
add
xchg
fs
sbb
cmp
popf
and
jl
ficompl
mov
movsl
test
fldcw
and
xchg
pop
sub
test
lcall
jecxz
repz
xchg
mov
inc
cmc
rcll
pop
dec
ja
loop
fmull
cmpsb
fcmovne
adc
add
sbb
and
or
fwait
xchg
push
xchg
push
inc
outsl
lock
js
arpl
fcompl
mov
jno
movsb
lea
lret
push
mov
and
dec
push
jp
xchg
loopne
sub
mov
outsl
and
imul
negl
mov
inc
mov
dec
add
dec
popl
hlt
pop
les
cmpb
or
mov
lcall
add
addb
and
jae
test
gs
inc
inc
jp
or
mull
pop
cmp
sub
call
xor
out
add
je
push
js
mov
mulb
mov
es
mov
or
or
mov
dec
sarl
sbb
ds
addr16
mov
mov
frstor
in
into
mov
sub
mov
mov
sbb
jbe
sbb
cmp
xor
rcl
sbb
adc
mov
xchg
dec
mov
repnz
pop
jae
jge
popf
out
or
pop
push
xlat
jp
mov
aad
pop
cmp
aam
jnp
mov
test
or
mov
add
jle
mov
int3
ds
adc
sbbb
rcrl
or
stos
lret
mov
int
lods
inc
hlt
lea
popf
outsl
pop
pop
mov
adcb
lock
mov
out
xor
bound
loop
pop
cmc
xchg
pop
pop
loopne
daa
ljmp
jecxz
add
or
shr
into
jns
cmpsb
data16
or
cmp
popa
aaa
fisubrl
pop
inc
insb
loope
shrb
adc
mov
ret
scas
mov
cli
ret
cmp
pop
pop
aad
jp
mov
or
rclb
push
jbe
xchg
test
pop
pop
add
pop
outsb
mov
movsl
add
mulb
or
shrb
ljmp
mov
lahf
and
mov
in
pop
jge
sbb
scas
jb
out
movsl
repnz
dec
and
pop
pop
jmp
or
mov
clc
in
frstor
ss
adc
lea
sarb
ret
jmp
ljmp
ljmp
xchg
fmul
xor
mov
lods
push
fsubrl
sbb
xlat
cmpsb
pop
scas
sbb
ret
add
pop
imul
aam
push
scas
cmp
mov
je
lods
call
psrlw
and
add
test
pop
inc
cmp
cmc
enter
jae
fwait
ret
jnp
arpl
xchg
cmp
test
aam
icebp
dec
adc
mov
mov
add
inc
imul
mov
cld
jb
mov
sbb
outsb
cmp
jmp
cli
mov
int3
subb
outsb
cli
mov
jle
pusha
fs
jmp
xor
cmpl
je
push
das
lret
mov
push
mov
gs
imul
js
xchg
cwtl
xchg
cmp
aaa
sar
mov
pop
xor
xchg
mov
mov
inc
or
dec
mov
mov
jnp
lcall
icebp
inc
push
adc
dec
les
push
pop
pop
pop
clc
dec
adc
xchg
mov
cmc
fiaddl
mov
inc
fcomi
pop
mov
cmpsl
dec
pop
pop
and
xor
inc
xor
fisubrl
sbb
mov
and
movsl
ss
in
add
mov
cmp
push
mov
hlt
js
imul
pop
sbbl
scas
xchg
xchg
scas
cmp
mov
xor
inc
daa
push
cltd
stos
mov
shl
xchg
lods
xor
outsb
jbe
mov
push
mov
popa
jbe
bound
sarb
jbe
dec
inc
out
jle
or
sbb
inc
or
and
cltd
or
adc
jns
mov
loop
sbb
inc
adc
dec
scas
and
add
aam
or
ds
add
cs
dec
pop
ja
test
jl
push
jp
cmp
push
lret
sbb
pushf
imul
into
inc
outsb
mov
jmp
or
inc
add
mov
xchg
pop
movsl
aad
test
pop
mov
adc
out
pop
and
pop
shll
or
push
jns
test
mov
stos
jecxz
shlb
test
sbb
add
dec
adc
pop
cltd
arpl
push
fdivrl
add
fisubrl
lea
scas
xor
pop
inc
pop
inc
cmp
ret
cs
mov
sbb
mov
xor
xchg
dec
cwtl
mov
cmp
or
add
pushf
pop
pop
lea
mov
push
or
lret
ret
cmpsb
pop
popa
movsb
repz
inc
jnp
cwtl
adc
loope
mov
nop
inc
fdivl
push
neg
sarl
inc
rolb
adc
movsl
push
fcoml
cwtl
aas
adc
mov
lret
inc
cmp
xchg
daa
push
mov
stos
dec
testb
cltd
and
xchg
in
mov
jle
and
movsb
pop
push
push
hlt
fxch
lret
sub
cltd
dec
xchg
xchg
push
jmp
xchg
push
ret
add
dec
xchg
cmpsl
dec
pop
inc
add
icebp
movsb
cmp
lds
inc
xchg
cmpsb
and
ficomps
ja
movsl
push
and
mov
push
and
pop
mov
dec
sub
dec
mov
pop
xchg
in
dec
cmpsl
aam
xchg
stos
push
pop
dec
adcb
addr16
bound
jecxz
cmpsl
cwtl
push
lret
dec
mov
pop
and
adc
sub
mov
pop
push
inc
push
divb
movb
in
pop
sub
mov
jo,pn
sub
jp
jle
and
out
addr16
adc
inc
sbb
js
in
xchg
sub
addb
sbb
mov
cmp
add
in
mov
loop
loopne
int
push
mov
and
scas
sarb
je
mov
add
cltd
mov
pop
lock
cmpsb
jecxz
movsb
add
or
xor
push
enter
mov
lods
repz
mov
mov
jo
out
add
xchg
ljmp
clc
xor
out
dec
pop
xor
jp
popf
imul
lods
iret
sub
push
xchg
movsl
cs
push
push
scas
cmpsb
frstor
orb
jmp
mov
mov
popf
adc
mov
mov
popf
lcall
leave
js
das
pop
roll
movsb
dec
and
jg
dec
addr16
push
mov
call
push
lods
xchg
add
je,pt
iret
xor
pop
xchg
add
ret
test
mov
cld
jnp
jae
mov
xlat
inc
addr16
jno
clc
or
ja
and
outsl
jmp
in
aaa
addr16
lcall
sub
enter
stc
lds
and
movsb
pop
lahf
jnp
daa
pop
and
aad
pop
cmp
cmp
jecxz
add
ret
lret
xchg
mov
cmp
lahf
mov
jecxz
adc
adc
push
dec
int3
xchg
sub
mov
push
loopne
pusha
shl
inc
pop
sti
dec
jp
or
sub
mov
mov
cmp
dec
pop
call
xchg
lods
pop
hlt
scas
lret
pop
mov
jno
sbb
xchg
popa
testl
mov
sbb
out
inc
lods
jp
test
into
dec
clc
cld
fisubl
jl
lods
sub
adc
mov
loopne
mov
xor
pop
fistpll
add
sub
outsl
push
shrl
imul
std
pop
sbb
mov
xchg
repnz
loope
andps
pop
jae
mov
lret
jg
mov
les
ds
ficompl
push
jmp
les
mov
mov
sbb
jnp
sub
inc
aad
outsb
fcoml
test
push
xlat
cmpsl
repz
xchg
pop
scas
in
sti
jno
mov
xor
dec
mov
pusha
add
das
lds
xchg
mov
cmp
mov
scas
dec
data16
clc
fcmovu
adc
sti
dec
test
out
and
scas
or
push
cmp
jmp
inc
and
xor
jno
enter
inc
xchg
xor
aaa
inc
dec
stos
mov
mov
test
in
pushf
push
les
aaa
ss
cmpsl
mov
pop
jmp
sahf
test
inc
push
jmp
mov
jae
and
rcrl
fldl
fldl
ss
jp
mov
ss
mov
repnz
inc
arpl
inc
iret
jnp
sub
rorl
push
pop
ljmp
inc
cmp
lock
jae
sub
jecxz
pushf
xor
push
push
or
cmp
jne
lret
xchg
shll
scas
mov
xchg
pop
cltd
mov
mov
inc
jmp
jge
repz
cli
into
xchg
cld
lock
fisttps
add
inc
add
sbb
and
or
enter
sub
imul
outsb
in
or
hlt
lods
push
stos
mov
xor
rorl
aad
cmpsl
push
xchg
mov
mov
lods
inc
nop
pop
stos
rcl
pop
push
mov
xor
shll
and
dec
imul
test
xchg
xchg
fadds
inc
add
iret
xlat
in
inc
bound
popf
dec
sub
imul
ljmp
jns
mov
push
or
or
push
rclb
cs
lods
lods
fimull
addl
dec
or
mov
sub
jle
mov
outsl
iret
sub
shrb
mov
ror
movsl
mov
cmp
xor
sti
pop
das
test
fisttps
or
xor
xchg
incl
clc
loop
xchg
fsubrs
into
scas
scas
or
or
in
mov
out
scas
or
sub
push
mov
pop
pop
fdivrl
aam
sub
pop
cli
data16
push
fdivl
insb
mov
mov
pop
jno
push
lds
clc
flds
adc
outsb
ror
and
sub
cmpsl
xchg
add
add
add
add
mov
int3
mov
rclb
pop
jl
rcrb
pop
clc
and
out
jl
and
or
xchg
pusha
xchg
mov
out
outsl
push
pop
or
mov
jp
sahf
dec
pop
pop
sub
push
xor
push
pop
in
dec
inc
fsubrs
add
jp
or
lahf
mulb
or
push
popf
xchg
pop
pop
inc
xor
bound
mov
add
jnp
cmp
insb
dec
mov
push
cwtl
mov
push
mov
cltd
and
cmpsb
inc
and
cli
sub
sbb
cld
mov
xchg
mov
cmp
inc
test
xchg
adc
jb
bswap
shrb
in
dec
outsb
lret
pop
push
mov
push
test
jge
std
das
into
loop
mov
addl
jb
xchg
aaa
push
dec
cmpsl
int3
sub
sti
js
scas
iret
leave
stos
aas
jnp
sub
cmp
ss
jns
cmp
lds
sub
sbb
dec
sub
je
jg
xor
cltd
arpl
aas
jecxz
adc
out
xchg
fcomps
std
aas
mov
fwait
aam
dec
or
roll
movsl
in
sbb
es
mov
lods
testl
imul
fisttps
inc
jge
aad
mov
xchg
pop
outsb
xor
and
mov
jno
and
add
jecxz
sub
ja
mov
aaa
xor
leave
dec
mov
pop
mov
imul
mov
jne
sbb
aad
pop
mov
call
push
inc
mov
stos
and
adc
call
add
push
fcomps
clc
test
cmc
xchg
in
jns
inc
mov
or
rcrb
imul
insl
jg
jae
shlb
mov
xor
popf
or
nop
jge
xor
adc
cmp
lds
dec
in
xor
push
xchg
jp
xchg
jbe
push
mov
sub
pushf
das
or
mov
sbb
xchg
clc
sub
test
leave
push
push
adc
cmp
iret
mov
inc
into
cltd
ss
dec
hlt
insl
mov
std
mov
lcall
mov
push
pop
xchg
add
orb
jo
mov
pop
xchg
addl
inc
imul
in
test
int3
call
jbe
movsb
xchg
dec
out
dec
add
jecxz
mov
xlat
scas
roll
sbb
fstpl
dec
sub
gs
push
sub
rorl
repz
in
fxch
and
fs
addr16
adc
jle
lock
movsl
push
push
and
int
lods
insl
dec
adc
lods
push
cld
cmc
jno
dec
or
xchg
mov
push
sahf
daa
test
sti
cmc
in
clc
es
fisubl
and
iret
push
daa
lahf
pop
inc
dec
xchg
int
push
xor
dec
aam
jno
dec
and
cmpsl
addr16
sbb
mov
lds
sub
in
lcall
xlat
in
aam
adc
or
jge
jmp
std
and
in
in
addl
xchg
or
gs
pop
push
jmp
or
dec
fisubrs
rorb
por
mov
push
mov
pushl
or
and
out
mov
lea
jnp
push
fldlg2
sbbl
mov
in
cmc
fcomps
inc
xor
jo
dec
sub
pop
lds
push
xchg
cmp
inc
daa
xchg
pushf
push
and
test
push
fstl
lcall
add
push
add
scas
jne
mov
xor
cltd
test
outsb
mov
add
data16
mov
inc
das
mov
add
std
xchg
xorb
lret
or
xchg
enter
xchg
and
scas
xchg
xchg
mov
xchg
daa
xchg
mov
ret
inc
mov
mov
mov
repz
test
inc
ds
sub
mov
outsb
loop
adc
sbb
push
in
mov
fcompl
sbb
xlat
pusha
push
or
xchg
out
inc
pop
les
pop
mov
fdivrs
or
pop
adc
sarl
aad
jg
mov
pop
sti
aam
ret
pop
lret
lret
gs
mov
add
adc
jmp
xchg
push
pop
push
popa
popf
push
pop
push
dec
fisubrl
sub
adc
mov
icebp
gs
icebp
adc
xchg
arpl
nop
mov
cmp
pusha
int
frstor
mov
dec
sbb
adc
and
mov
addl
adc
pop
sub
loop
jle
sub
or
cmc
xchg
hlt
adc
sbb
jbe
leave
xchg
test
scas
dec
sbb
and
orl
pop
xchg
push
and
std
cmp
js
xor
lods
aam
loopne
aad
sub
call
in
pmuludq
data16
xor
mov
sub
sub
mov
cmp
cs
movb
jno
ret
or
lcall
in
cwtl
or
mov
and
adc
imul
loope
jb
or
insl
or
mov
repz
dec
pop
adc
push
sub
add
inc
mov
scas
hlt
popa
enter
inc
jb
fdivl
add
jne
inc
call
ret
shl
negb
nop
fcmovb
mov
dec
sub
or
mov
cmp
int3
dec
aad
mov
pushf
lock
fmuls
sbb
jmp
sbb
cld
stos
mov
in
pop
int3
sbb
outsb
mov
ja
sbb
imul
fisubs
xor
mov
push
loope
fildll
or
pushf
mov
mov
mov
inc
cmp
sub
les
inc
mov
mov
ret
mov
outsb
and
pop
add
mov
xlat
mov
xchg
inc
jae
jp
jns
mov
mov
mov
scas
jbe
mov
outsb
sarb
addr16
in
inc
arpl
ja
cmp
in
xchg
lods
mov
cmc
pop
loop
cvtpi2ps
pop
test
fdivl
xor
and
jo
cmp
hlt
loopne
loopne
mov
jne
xchg
vpshlq
and
arpl
jg
dec
xchg
xor
cmp
testb
adc
mov
aas
mov
xor
mov
add
loop
aad
aam
or
cwtl
mov
dec
pop
rcl
mov
xor
insl
repz
mov
int3
out
dec
movsl
cmpsb
pop
adc
xor
jbe,pt
psubusw
jbe
mov
shlb
mov
adc
cmpsl
mov
test
inc
and
sub
stc
cmp
or
jl
mov
aad
xchg
mov
dec
lahf
shlb
dec
fs
gs
popa
lret
inc
cs
jnp
out
mul
lret
test
int3
out
jmp
dec
daa
or
adc
sub
out
cmp
stos
dec
jl
das
pop
lcall
adc
jle
cmpsb
inc
mov
cltd
jo
lahf
outsb
xor
lahf
rep
cs
push
lods
push
mov
add
pop
cmpsb
lret
and
call
leave
sub
jecxz
xchg
ret
fcmovnbe
or
cmp
mov
lds
jmp
dec
jecxz
test
aad
and
jnp
dec
xchg
push
pop
popf
inc
cwtl
mov
sbb
test
or
jno
pop
xchg
dec
aad
adc
cmp
aam
imulb
lods
fmull
sub
sub
add
insl
inc
addb
in
jne
xor
int3
cmp
xor
jns
mov
sub
sbb
sbb
addr16
mov
mov
ret
outsb
inc
faddp
xchg
adc
lods
imul
aad
dec
xor
sbb
pop
cltd
sbb
adc
sub
cmp
pushf
and
cmp
mov
data16
xor
in
inc
ds
outsb
mov
add
cmpsl
xor
xchg
popa
mov
rorl
mov
call
mov
ds
bnd
dec
iret
mov
jb
sti
lret
adc
out
stos
jbe
inc
jecxz
rep
sub
lods
ss
cmp
pop
xchg
xor
jge
sub
dec
std
inc
or
sub
and
out
popa
and
fcoms
jl
arpl
movsb
arpl
mov
mov
dec
lds
aam
ss
es
movsb
push
out
pop
fwait
or
inc
jo
roll
add
out
adcb
hlt
and
loopne
cs
push
orb
xor
and
enter
adc
outsl
adc
scas
stc
aad
push
pop
cli
or
imul
rcll
inc
in
cmp
cmp
loop
jae
shl
in
mov
or
xchg
addr16
cmp
and
sti
xor
sub
aad
cli
in
pop
sbb
out
sahf
lea
jl
cli
test
test
mov
xor
pop
xchg
sbb
dec
inc
adc
or
bound
add
and
pop
cmpsl
or
imul
xchg
xchg
jb
outsb
push
sbb
xor
leave
inc
notb
xor
push
pusha
addr16
int
or
push
cmp
sbb
lahf
mov
push
adc
cmpsb
sub
push
push
push
push
push
loop
dec
cmpsb
pushl
fidivs
lahf
addl
test
mov
push
inc
sbb
mov
or
std
and
adc
int3
vpsllq
outsb
cmp
addr16
ljmp
sub
push
loope
jmp
testl
outsl
pusha
jmp
and
inc
cwtl
push
lock
add
jmp
stos
nop
loope
outsb
xchg
stos
or
mov
fs
sbb
and
push
cmp
mov
and
xor
dec
xor
popf
lods
pushf
dec
cwtl
lret
cld
mov
outsb
cmp
mov
jo
xchg
cmp
lock
xchg
add
or
into
fnstcw
out
lret
stos
ss
mov
sbbb
and
addb
jo
xchg
xorb
mov
fs
fsubr
movsb
add
or
jl
or
push
ljmp
mov
push
jl
sub
push
or
scas
jnp
inc
lcall
gs
cmp
test
sub
rorb
push
add
add
fstps
test
pop
fdivrs
jge
xor
mov
inc
dec
lret
mov
or
and
xchg
loop
mov
push
adcb
push
sbb
jb
out
loope
test
or
shlb
aaa
inc
sbb
mov
pop
hlt
and
addr16
mov
clc
mov
adc
lahf
mov
pop
fidivs
jnp
lods
lods
enter
jno
es
scas
sbb
xor
jns
push
gs
mov
mov
or
mov
in
and
or
sar
jmp
add
mov
push
jnp
popl
iret
add
jne
add
add
pop
lds
and
je
shlb
pop
mov
adc
rclb
test
pop
mov
aad
dec
add
int3
fimull
sub
js
std
push
sub
jno
mov
cmp
hlt
mov
rcll
das
xor
xor
or
repz
xor
jge
repnz
test
inc
jae
imul
lahf
mov
pop
out
add
dec
pmulhw
ja
push
mov
out
shll
fs
lds
inc
cltd
mov
pop
incb
jge
in
cld
dec
bound
scas
pop
mov
cmp
add
nop
sbb
mov
jbe
xchg
sbb
aam
scas
shlb
dec
adc
or
jecxz
orl
add
scas
mov
cmp
mov
hlt
rol
mov
repz
js
decl
movsl
fstpt
dec
jle
cmc
scas
ret
adc
and
push
push
fadd
inc
push
push
and
and
dec
repnz
mov
add
cld
mov
push
inc
out
out
mov
mov
ror
add
jle
xor
in
scas
jnp
mov
dec
pop
cmp
cli
and
stos
add
test
lds
outsl
es
sahf
pusha
mov
jbe
cmp
xor
or
mov
or
xchg
inc
mull
jecxz
jmp
fdivr
pop
clc
push
add
loop
and
xchg
pop
aaa
outsb
lods
daa
cmpsl
bound
int
js
mov
test
pmullw
xor
lods
mov
pushf
test
jmp
dec
fwait
or
sub
pop
add
jae
jne
cmpb
cmp
in
outsl
inc
mov
cld
stos
pop
test
mov
sti
adcb
popa
sub
jns
xchg
mov
loopne
fisubs
movsl
mov
stos
lret
shrl
sahf
xchg
dec
data16
js
rolb
add
shrb
test
push
cmp
lea
push
aam
pop
sti
arpl
push
jnp
pop
imulb
sti
push
pushf
scas
repnz
mov
and
je
dec
fadd
fldl
lods
jp
dec
inc
push
mov
outsl
sarl
sbb
imul
test
sub
mov
push
cmc
lret
push
push
cmc
icebp
push
lret
fsubrl
mov
std
push
ljmp
rorl
pusha
sub
add
push
test
dec
js
in
cmpsb
inc
pop
iret
dec
shrb
pop
pop
clc
pop
jle
mov
lock
gs
jmp
jle
icebp
gs
aaa
jns
sbb
xlat
push
movsb
movsl
je
dec
fistps
add
adc
gs
sti
hlt
pop
dec
mov
push
add
mov
outsl
js
push
jnp
leave
cmp
in
inc
loopne
out
movsb
push
stos
push
stc
cmp
int3
jae
xor
stos
sbb
scas
ljmp
push
pushf
mov
cmpsl
pushf
dec
movsb
jmp
adc
mov
jle
lds
in
sub
mov
pop
call
test
sub
mov
cmp
add
cmp
jecxz
dec
loope
loopne
jae
push
dec
fsubrl
lret
bound
repnz
divb
call
jns
mov
clc
faddp
mov
xor
xchg
mov
cmp
shll
xchg
mov
int
repnz
ret
shlb
sub
push
loop
movsb
cmpsb
insl
sub
dec
sbb
inc
cwtl
int3
inc
aaa
jae
sub
fcomps
hlt
das
or
shrb
lret
shll
repz
xchg
ss
add
lods
jbe
mov
add
out
and
in
push
sub
xchg
sti
or
icebp
or
outsl
mov
push
cmp
or
syscall
insb
mov
mov
sarl
fstpt
push
ds
movsb
pop
adc
loope
or
sbb
mov
scas
cmp
outsb
int3
sub
jnp
loopne
dec
popf
lret
scas
jae
adc
mov
idivl
inc
pop
and
cmp
xor
ret
push
inc
dec
sbb
lock
add
jae
lock
ja
dec
ret
jne
jae
push
jle
add
ja
pushf
rol
xlat
mov
mov
sub
arpl
add
bound
shl
mov
adc
stos
pop
gs
and
push
sarb
cmp
std
jb
bound
in
jmp
and
sbbb
ret
mov
push
xchg
out
push
jbe
add
sti
jge
in
sub
sbbl
stos
or
xchg
rclb
lods
pop
dec
mov
sbb
loopne
jp
loop
mov
lret
jae
jl
cmc
aad
ss
jmp
call
lahf
cltd
lods
inc
add
mov
lods
loop
lcall
push
add
and
and
imul
and
data16
into
xor
pop
out
dec
or
daa
cmp
xchg
mov
in
int3
scas
xor
sahf
and
xchg
ret
xchg
jg
push
adc
mov
nop
dec
out
mov
outsb
jae
xchg
mov
and
add
mov
imul
mov
xchg
and
inc
aad
adc
in
fldenv
loopne
data16
cli
movsb
mov
idivl
in
xchg
aas
sbb
outsl
push
xchg
insl
pushw
les
ds
cmp
xchg
into
add
add
sub
jns
xor
pop
mov
int3
mov
and
jo
jbe
mov
mov
outsb
jae
loopne
inc
pop
inc
mov
mov
mov
test
cs
xor
fdivrs
pop
lret
movsb
pop
cmp
lahf
mov
incb
pop
sbb
mov
pop
jo
adc
es
shl
push
sahf
ja
adc
stos
jns
ret
aam
enter
pop
sbb
lock
dec
stos
lods
bound
sub
xchg
cmp
sbb
pushl
inc
mov
std
jecxz
lods
std
push
adc
lods
mov
mov
pop
cs
mov
outsl
sbb
ljmp
sub
bsf
cmp
shl
push
push
int3
push
mov
push
jbe
rorl
sbb
cmc
sub
int3
jp
xchg
ds
loope
mov
push
std
and
aad
xor
cmp
inc
add
in
xorb
ror
cmp
hlt
mov
sahf
lock
dec
test
inc
xchg
inc
sti
cmp
sahf
jmp
add
addr16
push
xor
insl
adc
scas
iret
sbb
add
or
mov
adc
jmp
sbb
push
adc
pop
or
aad
adcb
lods
int3
cmp
mov
rcl
xor
cmpsb
jae
clc
adc
and
ffree
fldl
jge
fisubrs
shlb
add
repnz
cmp
push
cmp
jg
jecxz
dec
pop
repz
inc
push
adc
repnz
insb
sbb
jb
mov
int
das
pop
daa
dec
xor
jecxz
inc
mov
mov
jle
out
pop
or
sarb
sarl
cmp
mov
inc
mov
push
jmp
imul
mov
bound
dec
out
push
pop
ja
xchg
icebp
jge
push
pop
add
mov
sbb
scas
xchg
aas
cmp
into
sarl
xor
mov
data16
push
cs
lods
sbb
insl
in
into
int3
cs
fs
xor
int
push
jl
jne
popf
popa
jb
jo
pop
dec
mov
mov
jno
movsb
je
mov
cmp
jecxz
adc
rcl
dec
cmp
fistpll
sub
andl
mov
out
out
bound
cltd
iret
ljmp
sub
popa
lret
int3
loopne
icebp
and
sbb
hlt
in
push
stos
mov
inc
movsb
xchg
mov
shll
stos
jl
jp
in
fs
shrb
stos
push
repnz
inc
fldt
repnz
je
jmp
cs
cli
mov
into
or
push
xchg
jns
jnp
jl
sub
hlt
or
daa
popa
xchg
add
sub
test
fsubrs
or
xor
mov
aaa
fidivs
sub
sub
mov
or
xchg
pushf
jmp
add
mov
outsb
repz
push
in
jo
cmp
sub
push
ret
dec
lock
popf
add
cld
pop
add
fsubl
sub
jo
mov
ret
cmp
iret
fildll
xchg
icebp
or
adcb
lcall
shlb
adc
movsb
imul
out
mov
scas
cmp
jmp
mov
rcrb
imul
lcall
and
call
mov
fisubrs
ficomps
push
xchg
sub
pop
pop
mov
mov
out
push
out
push
inc
sub
cli
push
out
out
pop
cs
je
xchg
pop
out
inc
cmp
in
adc
cmpsb
sub
les
dec
sarl
cmp
sbb
cmp
movsb
adc
sub
inc
lods
cmp
fnsave
rcll
into
ljmp
mov
ds
imul
repnz
jp
push
mov
dec
mov
stc
out
popa
xor
push
mov
pop
test
sub
addr16
sti
mov
mov
xor
popf
imul
cmc
out
jnp
jle
insl
addb
faddl
icebp
mov
ficoms
fs
repz
mov
mov
push
sbb
fsubp
push
fistps
or
imul
cltd
les
add
jne
push
into
test
mov
movsl
sbb
out
sbb
inc
add
movsl
pop
and
ljmp
shrb
xchg
mov
mov
dec
jmp
mov
sbb
pop
inc
or
xchg
gs
fisttps
cmp
lds
into
pop
ds
out
mov
ficompl
pop
cmp
mov
into
inc
movsl
xchg
pop
push
add
lock
xor
cmc
out
rcll
outsl
call
or
sbbl
push
and
insb
sub
pushf
and
mov
mov
lock
jle
add
adc
cltd
iret
push
lock
mov
or
clc
outsb
lret
mov
and
push
xchg
add
jo
pop
enter
or
repnz
or
ds
sub
sub
ret
cmc
jnp
inc
xor
in
sub
pop
lahf
popf
test
mov
loop
pusha
cltd
stos
inc
sub
push
mov
in
aas
loop
mov
loopne
mov
orl
xor
or
inc
dec
sti
jl
mov
pop
icebp
mov
xor
push
nop
pusha
je
mov
mov
in
ljmp
or
int
jae
push
mov
insb
pop
mov
xchg
shrb
sar
dec
dec
gs
xchg
fldl
pop
adc
sub
add
cmp
dec
packssdw
call
sbb
ss
pop
insl
jne
xchg
pop
popa
add
add
lods
stos
pop
leave
xor
fs
add
aaa
clc
aam
sarl
aaa
hlt
mulb
fs
and
aad
enterw
sub
les
cmp
sbb
sbb
or
xchg
je
inc
push
test
sbb
outsb
mov
into
testl
push
mov
ret
rcrl
xchg
into
or
lcall
flds
and
push
in
arpl
add
fmuls
cltd
fsub
rcrl
ja
mov
adc
dec
dec
data16
gs
scas
inc
in
xchg
sub
das
out
sbb
daa
test
andl
mov
jb
loopne
push
aas
inc
es
hlt
dec
jne
enter
inc
fildll
fmull
int3
jp
out
cmp
std
pop
xchg
lahf
test
mov
lods
ss
aas
mov
dec
jmp
xchg
sub
out
push
es
icebp
mov
mov
adc
pop
mov
mov
out
mov
mov
rcr
test
repnz
nop
ljmp
fcoms
and
dec
xchg
mov
lret
icebp
sbb
int3
cmovp
mov
subb
sub
lods
push
ljmp
dec
jno
stc
aaa
popa
sti
jae
cmp
addl
out
xchg
aam
pop
cmp
push
dec
push
je
mov
sub
sub
lcall
cmpsb
hlt
lret
shll
mov
mov
lock
xchg
loope
push
cmp
push
addb
fdivl
in
jge
or
jbe
into
icebp
wbinvd
cmp
cmp
clc
movsb
mov
jno
mov
lahf
in
cld
mov
sub
push
in
mov
pop
aaa
cld
pop
pop
adc
mov
xor
push
loop
adcb
lcall
fdivrl
sbb
mov
call
mov
jge
jle
scas
push
xchg
mov
mov
dec
mov
sahf
sbb
out
sub
mov
and
adc
pop
insl
inc
pop
pop
and
test
push
jmp
xor
and
ds
jp
xor
xchg
or
and
or
stos
mov
mulb
iret
iret
insb
in
and
data16
cmp
mov
inc
dec
or
dec
xor
xlat
les
mov
setge
out
xor
popa
mov
arpl
hlt
lahf
mov
jecxz
xchg
xor
jns
dec
pusha
mov
or
push
fsub
ret
xchg
das
inc
cmpl
pusha
icebp
movsb
sbb
and
mov
imul
push
in
test
out
jno
cwtl
dec
jle
loope
movsb
mov
dec
cmpb
sbb
out
icebp
gs
cmpsl
add
clc
xor
pop
and
rclb
iret
mov
aam
aam
jno
divb
ljmp
push
jne
xchg
ss
sbb
mov
xor
in
push
mov
jg
aaa
dec
xor
adc
xchg
mov
lods
mov
inc
jo
iret
mov
dec
mov
inc
cmp
ffreep
es
mov
popf
ret
dec
imul
int
into
pop
outsl
lods
inc
fistl
sbb
or
les
or
dec
mov
mov
addb
daa
lret
dec
repnz
inc
fistps
fnstsw
cmpsl
fs
xor
push
xchg
mov
ja
shll
out
subl
leave
mov
sbb
sub
mov
xchg
ficompl
mov
or
ret
and
fcompl
xor
cmp
sub
mov
roll
aaa
repnz
stos
pop
adc
nop
pop
dec
cmpsl
sbb
inc
dec
mov
test
push
mov
dec
xor
test
cli
mov
movsb
cmc
jp
cmp
in
bound
xchg
stos
aas
or
push
mov
lahf
ret
pushf
dec
sub
xchg
stos
inc
xor
jne
jl
repz
je
push
mov
jo
push
pop
aad
dec
imul
or
pop
xchg
mov
aas
adc
push
push
mov
pop
leave
mov
push
stos
lret
mov
mov
cltd
and
test
jmp
cmp
dec
dec
ret
aam
push
push
lahf
mov
fldl
inc
mov
insl
into
jle
dec
repnz
inc
js
aad
inc
jp
and
cld
pop
jo
lods
out
in
xor
mov
jle
les
subl
sbb
leave
pop
je
push
jl
sub
test
pop
dec
xor
fnsave
arpl
cmc
add
pop
xchg
add
sahf
stc
mov
xor
adcb
lods
mov
vpackssdw
and
jmp
xchg
aad
mov
xchg
xor
sbb
xor
sub
and
fistpll
jne
int3
loopne
xlat
jne
mov
mov
sahf
mov
hlt
ja
cmpsl
insb
repz
rclb
es
xchg
jl
dec
lds
stos
push
mov
lods
dec
int
outsl
aas
clc
pop
pop
jns
bound
in
data16
mov
mov
pop
add
stos
pop
lret
sub
mov
outsl
xchg
imul
movsb
js
adc
jb
notl
sbb
test
mov
pop
or
xchg
jo
popf
inc
push
insb
cmp
ds
sbb
jmp
sbbl
imul
mov
xor
xor
and
test
pop
ljmp
imul
mov
ja
push
dec
and
mov
sbb
addr16
insl
jne
jnp
imull
jo
outsl
xor
jp
sbb
mov
sti
popf
adcb
cmp
adc
add
adc
jo
add
into
adc
lret
cwtl
je
push
roll
sbb
stos
xchg
sbb
sub
adc
mov
and
mov
push
jg
sbb
std
ja
aas
sub
pop
fidivl
xchg
mov
imul
popa
sub
subb
mov
pusha
jne
cld
ljmp
xor
or
dec
les
imul
cmpsl
mov
shrl
movsl
fcomi
repz
jmp
leave
adc
adc
testl
leave
ljmp
into
cmc
push
adc
mov
mov
cmc
sahf
xchg
out
adc
scas
aad
mov
sbb
fcmovnu
hlt
xor
push
in
dec
sbb
arpl
icebp
scas
fsubrl
xor
sub
push
mov
popa
sbb
cltd
icebp
repz
movsb
faddl
dec
mov
jecxz
fcomp
jge
fcmove
mov
fcoml
js
inc
mov
in
xchg
sub
pop
ret
mov
cmp
sbb
pop
dec
test
mov
testb
das
mov
loopne
add
adc
mov
mull
xchg
pop
mov
sbb
fdivl
cltd
daa
dec
dec
push
imul
pop
inc
dec
xchg
mov
ret
in
fiadds
rolb
fcmovbe
mov
lds
ljmp
insb
shrb
adc
cmp
mov
cmp
or
and
ret
xor
inc
dec
pcmpgtd
mov
or
out
in
rclb
and
cmc
cmp
and
or
push
pushf
jnp
out
cltd
lods
cmc
lea
and
adc
addr16
add
inc
add
lcall
or
mov
leave
mov
and
test
cmp
sbb
xchg
mov
fisttpl
sub
es
aad
sub
inc
repz
jl
pop
arpl
mov
adc
push
mov
fiaddl
out
iret
or
loopne
ljmp
or
out
push
and
push
and
push
cmc
adc
imul
and
dec
or
fs
loop
mov
sbbb
push
pop
inc
mov
mov
push
rclb
or
mov
dec
xchg
pop
out
mov
push
addr16
inc
add
mov
xorb
pop
iret
in
sbb
cmp
inc
idiv
arpl
mov
pop
jmp
push
jns
mov
aaa
lock
jecxz
sub
rcl
iret
popa
stos
cmp
jnp
or
movsl
mov
mov
sub
sti
lock
mov
mov
scas
pop
pop
mov
dec
push
mov
test
jb
mov
jle
mov
dec
push
cli
mov
ret
mov
inc
sub
fldenv
and
lock
gs
jno
outsb
in
pop
jle
mov
in
inc
push
leave
add
sbb
nop
cmpsl
adc
lods
shll
es
cmpsl
stc
adc
jl
push
icebp
icebp
lods
test
daa
mov
or
inc
xlat
or
lods
cmpsb
out
cmc
push
stos
xor
xchg
cmpsl
or
mov
xchg
cmp
jmp
cwtl
in
lds
mov
loopne
pushf
repnz
xchg
and
pop
pop
sahf
gs
lock
jecxz
imul
jnp
jo
leave
push
cli
dec
fldt
incl
into
mov
mov
push
hlt
sub
mov
xor
les
out
xor
add
adc
lret
push
pop
push
mov
cmp
sub
mov
sbb
mov
sbb
outsl
sub
pop
repz
sub
jmp
pop
sub
mov
and
xor
xor
xlat
pop
cmp
dec
inc
repnz
cmp
test
mov
jo
mov
arpl
xchg
int3
aas
or
mov
cltd
addr16
ret
pop
dec
pop
lods
dec
pop
andl
shlb
add
and
fwait
xor
xchg
sbb
in
stos
mov
mov
mov
stos
pop
sbb
out
pushf
push
adc
mov
lods
pop
add
pop
cs
loopne
cld
subb
sahf
pop
lea
fildll
inc
mov
jecxz
xchg
sub
mov
jle
xchg
add
sub
stc
pusha
hlt
mov
insb
push
push
jecxz
lcall
imul
mov
adc
xor
int3
jnp
cmpsb
repnz
in
aaa
cmpb
lret
xchg
cmpsl
or
inc
mov
in
jmp
xchg
xchg
in
adc
inc
imul
call
js
fistpll
adc
mov
mov
pop
add
xlat
jbe
sbb
fdivrs
mov
cs
fscale
and
sub
jp
es
adc
repnz
xchg
dec
pop
pushf
fsubl
mov
enter
out
sub
sbb
xchg
push
jae
and
incl
lcall
popa
xchg
mov
fcmovnu
and
pop
pop
stc
stc
call
ds
and
sub
popf
add
jno
ret
mov
repnz
add
push
mov
sub
adc
pop
subl
mov
jo
xchg
adc
cli
ljmp
rolb
and
mov
mov
cmp
mov
and
pushf
lds
pop
ds
xchg
mov
lock
sbb
fs
inc
mov
xchg
mov
or
imul
jo
pop
addl
cli
test
insb
leave
sbb
mov
sbb
lret
shlb
jecxz
mov
nop
sti
lds
lock
aas
lds
repnz
out
jo
jg
sahf
lret
cs
xchg
les
or
pop
xchg
mov
xor
js
sub
subl
push
test
frstor
rorb
pop
mov
xor
fdivl
test
add
push
cmp
loope,pt
fadd
int3
pop
sbb
push
push
cmp
jmp
pop
fistpll
leave
push
fdivl
fsubr
cmp
insb
push
aad
cmp
test
pusha
jne
ficompl
jbe
inc
jmp
aaa
and
sub
jbe
sbb
jae
shll
addr16
rolb
fcmovne
scas
dec
mov
hlt
je
mov
inc
fwait
cmp
pop
mov
cmp
xor
push
cmp
negl
sub
pop
jb
lods
sub
pop
jae
xor
hlt
mov
lahf
mov
pop
adc
xor
add
mov
fimuls
pushf
cmp
hlt
push
cmp
dec
icebp
int3
mov
mov
fwait
xlat
push
outsb
push
ljmp
loop
lea
pop
ss
inc
iret
sti
das
xchg
fucomi
jb
andb
loope
pop
jo
iret
cmp
add
mov
pop
adc
pmulhuw
fsubr
cli
xlat
test
out
lret
in
iret
jle
pop
jnp
ljmp
int
roll
insb
inc
pop
adc
lds
mov
jb
cmp
xchg
or
xchg
pop
repnz
sub
mov
sub
add
ss
inc
sub
inc
inc
mov
int
mov
xchg
enter
jno
push
ds
pop
sub
pop
sub
enter
inc
cmp
cmp
sub
bound
xchg
pop
and
adc
adc
inc
mov
add
movsb
int3
xchg
out
pusha
insl
mov
adc
in
push
scas
aad
push
inc
push
mov
inc
cld
and
ljmp
sub
or
jl
andb
in
sahf
ficoms
orl
stos
add
cltd
sahf
cmpsl
movsb
mov
rcll
iret
push
cmp
jne
sub
and
jnp
fdiv
mov
aad
das
pop
icebp
mov
lahf
ret
aas
or
cld
aad
xchg
jecxz
mov
xchg
scas
out
push
mov
mov
mov
addr16
sub
sub
xor
daa
sbb
xor
sbb
xor
xchg
outsl
jge
jnp
push
dec
movsb
mov
loope
mov
mov
aam
push
stc
loop
push
lret
pushf
jge
adc
mov
sbb
inc
flds
jno
or
aam
std
and
mov
aad
jo
pop
push
inc
insl
inc
pushf
lods
push
ja
pusha
or
jb
add
sub
fsubs
add
test
mov
ret
cmp
push
iret
and
aad
sbb
call
xor
jo
daa
mov
scas
xchg
leave
ror
fwait
cmp
push
xchg
stos
insb
mov
popf
xor
aad
ljmp
push
adc
popf
or
aas
aaa
fidivrl
push
cs
sbbl
or
cmpl
movq
outsb
pop
daa
das
sbb
and
nop
mov
pusha
stc
push
pushf
shl
popf
dec
daa
push
stc
test
xor
and
pop
mov
mov
pop
pop
jne
inc
pop
or
test
std
out
lret
push
mov
stos
mov
fwait
dec
in
sub
hlt
xor
mov
mov
xorl
repnz
iret
outsb
pop
mov
xor
imul
add
mov
jo
xchg
pop
push
popa
and
inc
test
pop
push
dec
sbb
mov
sub
fistl
iret
and
mov
xchg
jl
jge
xor
fmuls
mov
pop
push
ds
pop
test
lea
jne
in
stos
ret
sub
cmpsb
leave
les
fnstenv
stos
add
dec
adc
test
sub
rclb
or
imul
pop
fcmovu
jecxz
xor
add
lcall
test
pop
mov
cli
or
aaa
mov
dec
xor
jge
inc
mov
xchg
lods
dec
rcrb
aad
shrl
push
addr16
xor
stc
addl
mov
pop
ficoms
cmpb
scas
dec
xchg
enter
xlat
fcoms
inc
btc
lock
lret
adc
ret
jl
fmuls
int3
pop
mov
push
pop
sbb
push
push
xchg
ret
in
cmp
push
pushf
jp
cltd
adc
enter
mov
push
xor
movsb
jge
clc
mov
push
lods
jae
add
dec
and
cmpsl
std
cmp
inc
iret
push
adc
leave
mov
mov
cmp
and
or
shr
push
dec
push
mov
fsubl
cwtl
outsl
dec
sbbl
lds
jb
xchg
push
incb
scas
cmpsl
push
sub
jmp
cmp
sarb
and
push
push
adc
push
cmp
adc
es
iret
decw
pop
xor
adc
popa
push
in
fcmovnb
fwait
jp
xor
repnz
xor
and
or
movsl
pop
mov
and
adc
std
pusha
mov
dec
and
push
sub
mov
xor
cld
int
sub
pop
and
test
mov
and
push
sub
leave
aad
and
add
push
or
cmc
lea
fwait
xlat
pop
loopne,pt
mov
daa
push
out
fs
sbb
scas
mov
jb
xchg
xchg
sub
or
movsl
xchg
lock
sahf
dec
mov
pop
repnz
dec
pop
loope
in
faddl
push
dec
call
xchg
into
dec
pop
lahf
sti
push
cmpsb
bound
cld
xor
fs
inc
pop
mov
dec
xchg
out
push
adc
into
lock
repz
mov
or
add
add
mov
push
lock
iret
imul
rcrb
push
and
xor
ja
jb
lcall
push
pop
cmp
sarl
xor
stc
insb
in
std
aas
jbe
pop
dec
ret
loope
sub
xor
jle
xor
mov
andb
push
out
addl
jb
test
data16
shl
ficomps
xor
test
pushf
ljmp
add
sub
popf
adc
lds
in
xor
lret
cmpl
mov
lret
jg
rorl
adc
push
sbb
mov
add
test
cs
into
enter
fisubrl
or
mov
cmp
cmc
pop
dec
jecxz
add
das
das
push
mov
xor
scas
inc
in
push
jns
jb
in
xchg
clc
ljmp
push
mov
xchg
jno
fs
lea
ja
rorl
ja
push
dec
or
cmp
fnstcw
lcall
xor
dec
jno
cmp
mov
mov
cmpl
lock
dec
mov
js
out
mov
fldl
add
and
insl
cmpsl
adc
sbb
jmp
addr16
scas
fcomi
cmp
pop
push
inc
ljmp
mov
shrl
in
shll
fmul
push
cmp
xlat
mov
fnsave
add
xchg
loop
adc
shll
cli
cmp
mov
test
push
cmp
fiaddl
mov
sbb
jns
xchg
lds
and
xchg
cmp
jp
pop
xor
xchg
add
stc
and
lock
mov
and
mov
inc
sbb
loope
hlt
jbe
jmp
mov
xor
mov
adc
add
xor
cld
inc
test
add
mov
je
mov
fwait
inc
pop
fdiv
and
lahf
xchg
fists
or
inc
cld
scas
test
mov
mov
add
adc
int3
aas
cmp
mov
or
lret
lock
add
ds
mov
lock
hlt
lock
sarb
or
and
xor
xor
pop
rorl
sub
push
mov
adc
mov
lret
add
jae
xchg
xchg
xor
mov
outsb
add
enter
xchg
jp
mov
push
sarl
shl
inc
mov
jg
mov
cwtl
fsubs
xlat
pop
sbb
mov
mov
xchg
fisttps
sbb
or
mov
clc
jl
adc
jo
or
pop
pop
cmp
mov
stc
xor
jne
mov
mov
cltd
and
inc
dec
push
push
mov
xor
adc
sbb
mov
jne
and
int3
iret
push
ret
sbb
ljmp
int
or
aaa
xlat
mov
pusha
iret
and
fisttpll
rolb
mov
add
data16
cld
mov
pop
push
lods
jg
cmp
bound
and
lcall
xchg
pop
mov
fimuls
xchg
cmc
fdivp
dec
in
xlat
in
cmpsl
and
and
jge
fwait
push
in
or
pop
sbb
dec
lea
scas
std
xor
xchg
cld
rorl
and
das
dec
jmp
in
push
dec
test
out
mov
insl
pop
ret
jmp
insb
xchg
cli
scas
int
mov
jns
mov
and
xor
add
pop
xor
inc
repnz
aam
ss
xchg
jecxz
out
mov
roll
sar
loope
out
dec
dec
cmp
or
push
jmp
out
xchg
mov
or
imul
pop
int3
lods
lods
add
movsl
sbb
mov
and
jg
fcoms
xor
mov
testb
jne
adc
push
adc
push
jg
lret
and
sarl
insb
inc
pop
or
pop
xor
dec
iret
mov
inc
stos
mov
loopne
inc
repnz
mov
imul
cld
xor
pop
mov
shlb
roll
pusha
cmpsb
mov
mov
lds
testb
jo
mov
rcrb
js
pop
push
out
aam
inc
int3
fld
and
loopne
dec
enter
mov
inc
fstpl
aas
pushf
ret
push
xor
call
add
pop
mov
inc
sahf
lret
xchg
jecxz
or
jl
fnstcw
jecxz
call
push
leave
iret
jmp
cmp
or
add
mov
arpl
add
mov
pop
outsb
jg
xlat
mov
jge
sbb
stos
je
jae
mov
sub
ret
ds
sub
stc
rcrl
int
push
in
mov
lcall
xchg
xor
inc
xor
lods
clc
lock
cmpsb
pop
cmp
pop
mov
or
stos
add
sbb
dec
or
sbb
outsl
xchg
stos
leave
inc
inc
es
pop
je
jb
jb
adc
or
adc
push
out
add
inc
or
push
scas
pop
pop
jle
xchg
adcl
or
xchg
es
ds
sbb
push
jae
sub
push
loope
sbb
sub
aam
enter
call
mov
fidivl
xor
jb
ret
bound
xor
or
push
mov
out
cmpsl
mov
dec
popf
mov
xor
adcb
addr16
adc
ljmp
dec
and
lods
mov
mul
xchg
aaa
stc
subb
das
mov
mov
sbb
mov
orb
or
insb
pushf
or
inc
lcall
cmpb
add
subl
lcall
movsl
mov
jns
adc
mov
or
mov
xor
sub
cltd
add
sbb
arpl
adc
mov
subb
fucom
shlb
jg
jae
iret
insl
and
cmpsl
jg
fadd
xchg
lods
into
push
and
or
sbb
inc
lret
sbb
pop
nop
dec
xor
dec
lcall
dec
xchg
mov
dec
push
mov
ret
jge
add
xchg
mov
mov
or
push
cld
stos
jmp
daa
xchg
adc
in
mov
addr16
cld
jo
mov
and
cs
aaa
in
sbb
test
xchg
into
sbb
dec
out
mov
loope
call
sub
insl
call
ror
cmp
rolb
push
and
pop
dec
jb
sub
sub
inc
ljmp
cmp
sahf
sub
sbb
or
loop
add
mov
test
in
pop
aad
lds
sub
xor
sbb
inc
into
pushf
push
xchg
xchg
fnsetpm(287
mov
mov
inc
sbb
jae
or
repz
adc
add
test
inc
pushf
add
sub
pushf
pusha
inc
sub
fdivl
jle
sbb
jae
in
inc
cltd
jmp
xchg
push
imul
pop
lcall
sahf
nop
pop
add
imul
dec
pop
mov
cmpsb
mov
or
adc
jecxz
push
jb
outsb
js
mov
pop
mov
lods
aad
xchg
hlt
in
sub
push
pop
and
in
cs
std
or
xchg
fstpl
or
inc
push
pop
or
inc
ja
push
xor
arpl
mov
mov
sbb
mov
pop
loop
jge,pn
push
sti
and
and
xor
sbbb
ret
adc
push
cmpsb
aaa
and
aad
andl
or
repnz
cmp
jo
mov
out
pushf
xor
subl
sahf
insl
testl
rcll
dec
ficomps
mov
sbb
xor
mov
push
jmp
mov
push
std
or
rorl
mov
in
fst
fcomps
cmpb
lahf
inc
hlt
cmp
xor
mov
xor
pop
das
mov
subl
mov
shl
test
sub
cmc
push
movsl
jae
jmp
shrl
fldenv
nop
call
aad
les
mov
mov
out
cltd
imul
mov
leave
pusha
sbb
pop
mov
jo
mov
jno
adc
icebp
movsb
test
data16
xor
and
orl
leave
sub
out
test
in
xchg
xchg
xchg
repnz
iret
divl
add
not
jo
je
clc
addl
imul
and
rclb
jbe
push
inc
push
cwtl
mov
test
shlb
orl
jmp
sub
loope
sub
dec
jb
movsl
and
ficomps
lea
fldl
dec
mov
imul
cmp
or
fildl
pushf
popa
mov
out
insl
dec
jge
xchg
cmp
mov
mov
mov
movsb
inc
and
loop
mov
jp
jb
les
stos
popf
adc
lahf
mov
mov
cmp
inc
test
mov
gs
mov
cwtl
je
lock
sub
mov
insb
fsubp
ljmp
divb
in
xor
lods
out
inc
adc
jecxz
fs
fmull
mov
inc
jbe
jge
mov
imul
xor
je
dec
jo
inc
cmc
fisubs
lea
xchg
mov
add
pop
jge
sbb
in
gs
cmp
xchg
inc
stos
xchg
aad
xlat
fwait
lahf
shr
pop
loope
fistpl
call
lret
aaa
adc
dec
repz
hlt
xchg
jecxz
sub
rol
shlb
add
cmp
mov
pop
and
push
cmp
lret
std
push
sub
addr16
sbb
inc
sbb
cmpb
adc
arpl
ljmp
pop
in
leave
mov
xor
push
outsl
fistpll
stos
in
aam
punpckhbw
in
mov
push
out
lcall
dec
fwait
mov
jl
lea
popa
into
cmp
subl
and
leave
mov
insb
lea
adc
jg
scas
popf
in
pushf
sahf
sbb
imul
loopne,pn
in
cmp
xchg
mov
test
mov
dec
sbb
mov
adc
imul
sbb
or
dec
and
stos
add
sub
cmp
inc
movsl
stos
dec
sub
jbe
popf
jno
leave
inc
jno
cmp
xorb
aam
test
fwait
cmpsl
push
jo
xchg
call
xchg
int3
sbb
adc
cmpsb
add
add
outsl
mov
lahf
mov
mov
shlb
pop
or
inc
push
and
outsl
iret
js
jnp
and
xorb
je
dec
adc
jecxz
insb
int3
std
dec
cld
and
dec
xor
sbb
fisubs
xchg
add
jmp
mov
fdivrs
faddl
inc
lahf
xlat
loop
adc
mov
mov
stc
pusha
cmp
mov
xchg
int3
fsubrs
jae
lock
xchg
cli
pop
push
mov
popl
sub
lods
xchg
push
adc
push
enter
add
pop
adc
ss
icebp
push
not
ret
jno
rcll
adc
clc
inc
popf
jg
cmp
pop
cli
inc
sbb
je
push
lods
out
mov
and
xor
or
mov
cs
jo
mov
add
mov
cs
mov
adc
in
push
divl
sbb
inc
out
push
ljmp
add
push
inc
mov
jo
cmpsl
cmpl
push
and
dec
mov
mov
dec
ret
or
xchg
popf
sti
sub
and
lods
nop
in
mov
mov
not
jne
and
loope
jmp
push
pushf
mov
push
sbb
sahf
sbb
xchg
mov
out
iret
push
stos
lcall
sbb
adc
xorb
push
arpl
cltd
mov
popl
push
fs
dec
cmp
aad
pop
pop
stos
jl
nop
dec
mov
jo
daa
fisttpll
jl
push
cmc
nop
in
pop
in
xorb
cs
into
jmp
ds
sbb
mov
pop
sub
sbb
or
mov
mov
out
mov
and
das
dec
fucomip
inc
lahf
fdivr
sarb
jg
adc
nop
xchg
test
xchg
insl
test
into
repnz
mov
icebp
sub
push
jecxz
add
pop
bound
pop
mov
add
cmp
test
pop
mov
dec
xor
and
mov
dec
test
insb
mov
push
push
push
in
mov
pop
scas
lret
das
sbb
mov
push
in
call
loopne
mov
add
xor
rclb
inc
mov
cmp
mov
dec
push
in
out
mov
jne
divl
sbb
mov
inc
scas
jp
cli
test
jg
decl
push
adc
xchg
in
jnp
idivl
mov
xchg
adc
test
out
loopne
into
add
notb
cmp
xor
roll
or
xor
out
xlat
add
push
aas
and
bound
jno
jmp
fwait
push
xchg
cld
cltd
stos
aam
repnz
cli
adc
xchg
in
sbb
inc
cmp
scas
sbb
mov
sub
xor
mov
adc
pop
les
test
add
cmpsl
outsb
fsub
push
in
lahf
push
int3
and
subl
xchg
jne
push
push
push
divl
xor
mov
sbb
inc
jnp
std
fcompl
push
addl
ja
mov
dec
or
and
pop
je
sbb
xchg
and
test
add
xchg
cmpsl
mov
mov
jnp
pop
movsl
movsb
dec
dec
xchg
je
push
pushf
pop
or
xchg
fmuls
pop
call
clc
shrl
mov
xor
mov
stc
inc
sub
jae
or
xchg
out
fidivs
push
xor
stos
and
xor
push
pop
xchg
xlat
sub
mov
es
push
mov
push
lcall
in
lcall
jno
add
insl
jge
sub
leave
push
sub
mov
mov
insb
mov
mov
push
fnstcw
push
mov
fnstcw
in
popa
out
pushf
cmp
pop
adc
ja
lahf
hlt
sub
test
subb
int3
clc
icebp
outsb
out
mov
mov
rcr
pop
push
insb
xchg
xchg
je
insl
add
rorl
js
and
pop
xchg
ss
ds
xchg
inc
pop
mov
add
add
and
int3
out
jl
xchg
enter
rol
hlt
stos
mov
inc
dec
dec
mov
stc
nop
xor
sti
test
pop
mov
dec
and
dec
dec
imul
dec
mov
inc
xor
xchg
jl
mov
testl
dec
stc
push
rol
lock
xchg
pop
and
jg
insl
mov
pop
inc
push
addr16
std
in
jmp
test
add
cmp
xchg
fistl
adc
sbb
jle
dec
dec
mov
sbb
andb
push
sbb
shl
mov
in
mov
jl
sahf
pop
orb
aas
xchg
dec
and
xor
test
aaa
pop
mov
pushf
roll
jbe
push
mov
xchg
imul
loopne
int
push
je
arpl
out
out
idiv
lods
inc
mov
mov
xor
mov
mov
xorl
lods
movsl
bound
add
push
mov
push
xor
mov
test
xchg
jle
inc
sbb
movsb
stc
ficomps
inc
push
push
das
mov
mov
xchg
sti
cmp
mov
neg
repz
xchg
mov
xchg
xor
cld
pop
int3
adc
mov
pop
out
fdivs
jae
inc
push
mov
and
xchg
xchg
xor
jl
cmp
dec
orl
ds
sbb
mov
test
mov
xchg
scas
sub
repz
cmp
mov
arpl
gs
shlb
test
lahf
cwtl
inc
insb
mov
pop
push
test
pop
sub
mov
xor
rorl
xchg
xor
xchg
mov
enter
lods
stc
mov
push
sar
and
mov
xchg
and
out
cmpsl
in
xchg
mov
mov
scas
jmp
sbb
and
xchg
fwait
jp
ljmp
mov
jo
out
test
pop
dec
mov
mov
push
xlat
xor
xlat
out
je
ljmp
js
mov
nop
lcall
adc
push
imul
push
test
faddl
push
bound
fldt
mov
xor
cld
push
mulb
or
in
stos
add
movsl
cltd
push
in
adcl
xor
ret
sub
or
addl
and
loopne
dec
mov
and
movsl
add
stos
pushaw
ficomps
xchg
cmp
stos
cli
daa
rcrl
gs
mov
jmp
popf
je
shll
cltd
inc
lea
adc
xchg
lods
jnp
inc
lahf
cwtl
loop
out
lods
std
out
dec
stos
mull
mov
sti
jecxz
jmp
push
cld
js
clc
popf
mov
std
mov
mov
and
xlat
stos
addr16
push
mov
rcr
inc
es
jbe
and
jmp
add
xchg
cs
ret
mov
xorl
and
mov
daa
mov
mov
xchg
stc
mov
or
std
sbbb
add
xor
jmp
xlat
xchg
sti
xorb
jge
shll
sub
nop
enter
xor
rol
movsl
cmp
enter
popf
cmp
cmp
outsl
mov
outsl
loop
add
and
out
movsl
mov
adc
clc
push
shlb
lea
jge
pop
test
and
fwait
cmp
sub
cmp
loopne
scas
inc
pop
xor
shrl
add
ds
daa
cmp
cli
roll
fidivs
sbb
nop
cmp
sub
data16
cltd
inc
cmp
int3
or
in
inc
and
scas
pop
shll
push
std
leave
or
xchg
jecxz
xchg
mov
mov
fsts
rcll
push
repnz
cltd
add
push
push
addb
repz
xor
lea
roll
pop
jmp
jge
enter
sbb
daa
mov
xchg
fsts
inc
in
and
stos
inc
pop
std
push
sbb
xchg
ds
mov
cmp
aas
test
sahf
xchg
sub
ss
mov
imul
add
out
lock
out
xchg
test
xchg
ljmp
push
add
push
popa
dec
inc
into
push
orl
sbb
push
cmc
bound
sub
lcall
and
and
xor
popa
loope
sub
adc
mov
cli
invd
or
push
jmp
ja
mov
and
int3
xchg
dec
mov
in
jbe
xchg
dec
addb
xchg
sub
push
mov
lods
xchg
mov
pop
add
fs
mov
fcoml
mov
cmp
pop
add
mov
push
or
and
dec
jo
push
sar
add
fstp
movl
xchg
das
std
sti
movsb
xchg
mov
push
inc
repz
out
or
outsl
aas
push
out
pop
sbb
mov
mov
xor
and
divl
iret
push
mov
hlt
out
jo
mov
xchg
cmp
test
cmp
adc
in
pinsrw
add
cmp
push
pop
sub
or
cmp
jecxz
or
mov
jge
lcallw
adc
sub
mov
jnp
xor
cld
roll
push
sbb
adc
sahf
int3
adcl
and
bound
fcmovbe
pop
orb
jg
add
mov
mov
clc
push
inc
mov
call
es
insb
push
mov
jbe
pop
aas
pop
sub
test
test
push
jp
scas
loopne
mov
add
fs
int3
jae
rclb
das
cld
adc
mov
push
jo
and
cmc
int
out
lea
jmp
xchg
push
or
addb
movsl
stos
stos
dec
cmp
into
stos
ror
aaa
mov
or
mov
aam
int
and
push
add
push
pop
jl
sub
pushf
cmp
adc
xchg
mov
dec
or
outsb
loope
sbb
mov
dec
mov
mov
sarl
fnstcw
xor
cmpxchg
sbb
sbb
jge
lret
das
mov
enter
sub
mov
repnz
jnp
je
sub
inc
jns
xor
lods
xchg
xchg
ds
ja
mov
dec
repnz
mov
pop
or
aaa
adc
cmp
jae
icebp
in
push
mov
jge
jne
adc
adc
pop
sub
add
ss
outsb
jne
loopne
sub
enter
mov
pop
pop
arpl
xlat
mov
pushf
jae
jbe
push
ja
call
cmp
push
mov
ret
ja
and
mov
repz
and
pusha
inc
push
cmc
adc
xor
jo
pop
xchg
cs
popf
mov
push
sub
popf
xor
addr16
mov
arpl
hlt
ficoml
xor
jno
dec
sub
inc
enter
push
js
pop
adc
fcmovu
xorb
inc
stos
mov
jle
dec
sub
mov
insl
dec
daa
or
mov
xchg
xchg
cmp
and
sahf
mov
shrl
mov
sub
in
cmp
push
or
lret
das
xor
pop
and
arpl
mov
jbe
jecxz
mov
iret
cmp
cwtl
mov
sbb
mov
aam
sbb
outsl
arpl
push
les
stc
mov
mov
and
jle
sbb
in
int3
xchg
adc
inc
push
push
in
rolb
fimull
mov
int
xchg
adc
rolb
pop
adc
hlt
insl
or
lock
mov
mov
fnstenv
dec
in
inc
jo
cs
enter
sbb
sub
inc
lods
xor
repnz
jl
sub
xor
ja
xchg
mov
adc
adc
es
testb
gs
das
push
sub
push
outsl
push
sub
out
adc
sbbl
jge
mov
pop
lds
pop
bound
mov
xor
scas
xlat
xchg
sbb
icebp
stos
pop
xchg
lcall
dec
mov
and
xchg
ret
xchg
call
cmc
ss
in
push
and
push
mov
xor
jg
lods
aam
or
cmpsb
sahf
jb
repnz
aas
dec
lods
pop
cmpsl
out
xchg
inc
push
adc
lods
sub
not
stos
cltd
cmp
ds
repnz
cmc
lods
cmpb
sub
fadds
sbbl
xor
lock
push
mov
das
pop
test
and
add
and
sar
daa
push
daa
push
insl
push
pop
xchg
and
pushf
mov
mov
pop
cltd
or
pop
pop
sbb
jl
shll
test
inc
stos
js
lods
aad
jb
lret
xor
jnp
std
mov
mov
push
pop
jp
push
popa
mov
cmpsl
sbb
sub
rcr
mov
xchg
mov
dec
xor
push
je
mov
pop
or
and
push
xor
andl
js
into
inc
ret
sbb
push
and
movb
mov
pop
aad
jno
xlat
push
mov
cmpsb
sub
scas
outsl
adc
rcrb
test
adc
stos
mov
mov
jnp
xchg
gs
push
les
cmp
xor
sbb
int3
pop
cmp
ficoml
xchg
xchg
push
addr16
mov
repz
fisubrl
lea
dec
enter
mov
lcall
push
sbb
loope
or
ror
add
or
mov
sbb
push
push
xor
nop
mov
fistps
inc
push
adc
popa
sahf
adc
sbb
mov
adc
add
aad
inc
mov
movsl
imul
scas
sub
sbb
popl
pop
xor
mov
xchg
fsubrl
movl
out
mov
imull
or
mov
int
add
imul
xor
mov
sub
lods
inc
repnz
addr16
lea
test
pusha
jns
push
out
cmpsb
mov
loopne
fidivrs
clc
lock
and
push
inc
jmp
loope
dec
mov
and
jns
or
xchg
repnz
stc
call
popa
and
jg
int3
int3
fnstenv
inc
scas
insl
pusha
imul
adc
pop
jge
xchg
xor
xor
cmc
imul
aas
fdivrp
cmc
and
popa
jns
test
mov
mov
fidivrs
addr16
mov
aad
push
cmp
mov
xlat
and
xchg
jns
ret
add
mov
icebp
mov
out
lds
repz
imul
addl
mov
fsubrl
pop
fnstenv
add
xchg
and
add
stos
pop
mov
fstl
ss
ficomps
insl
enter
mov
mov
push
fisttps
inc
out
mov
mov
or
das
mov
out
pop
push
dec
jmp
jp
dec
ret
imul
or
and
mov
pop
xor
outsb
lds
lcall
lds
push
mov
fstl
add
sbb
sahf
sbb
mov
pop
push
jns
stc
hlt
and
xchg
into
jae
out
mov
push
into
stc
jns
ret
mov
sub
lods
lahf
xchg
xlat
sub
sti
cwtl
adc
rcl
jb
xor
mov
pop
outsb
repz
lods
clc
mov
add
lret
testb
imul
mov
push
inc
scas
popf
in
in
dec
mov
lock
out
sub
into
mov
dec
push
orl
xchg
ljmp
xchg
ficoms
cs
push
mov
mov
aam
xchg
push
jns,pt
jno
xorl
or
or
rcr
aaa
test
ljmp
pop
sbb
cltd
cwtl
rorb
adc
inc
sti
out
push
xchg
iret
and
jb
in
push
cmpsb
mov
xor
push
add
lock
ja
fs
pop
jl
xchg
push
inc
cmp
test
or
popf
push
lret
sbb
jae
imul
stos
enter
or
mov
cmp
mov
jbe
mov
mov
addb
pop
push
rolb
add
jle
bnd
mov
repnz
bound
jge
lahf
adc
adc
mov
cmp
dec
mov
pop
pop
je
ljmp
push
sub
out
out
inc
xor
nop
aas
jmp
shll
or
mov
repnz
cmpsb
cli
xchg
pmulhw
jo
inc
movsb
stos
jecxz
push
cmpsb
push
in
test
jb
in
int
sbb
jbe
jnp
int
sbb
dec
mov
add
hlt
or
fsubrl
int3
mov
mov
xchg
popa
testl
jge
cmp
push
pop
jmp
stos
sub
pop
outsb
push
add
in
jne
repz
clc
xchg
mov
sub
dec
fildl
fxch
sbb
les
movsl
inc
dec
and
movsb
mov
jecxz
and
jne
in
xchg
mov
xlat
fwait
xchg
stc
jmp
inc
jne
dec
out
sub
pop
insl
push
add
or
clc
testb
shl
pop
pop
mov
fwait
stc
je
pop
mov
loope
icebp
mov
aas
fcomps
jge
sub
xor
cmp
sbb
cmp
cmp
xchg
lods
lahf
vpcmov
xchg
mov
lds
fcoml
mov
jmp
outsl
das
aas
std
scas
sti
dec
pop
push
mov
push
pop
loopne
xor
movsl
bswap
inc
loope
cwtl
cmp
xor
cmp
xchg
pusha
popf
ljmp
pop
fldcw
push
sub
shrb
xchg
adc
mov
pusha
es
cmp
or
jmp
scas
jo
out
ja
popa
jp
fstl
adc
mov
adc
pop
xor
mov
or
cmp
in
mov
test
or
repz
jo
jbe
cltd
popa
ljmp
neg
mov
inc
lds
addr16
pushf
sarl
lahf
pusha
sbb
inc
push
fsub
inc
jg
fistl
mov
adc
cmp
mov
and
in
sub
sbb
pop
rclb
pushf
fwait
test
dec
jno
xchg
push
outsl
loopne
mov
adc
jno
into
dec
xlat
jecxz
jno
movsl
insl
xchg
sarl
subb
or
shl
jp
or
mov
inc
int3
add
pop
pop
in
jecxz
inc
ds
cltd
xchg
jecxz
sbb
xor
imul
js
ret
push
shr
add
xor
push
push
xchg
mov
xchg
mov
out
shlb
pop
xor
mov
decb
jecxz
out
ret
in
ljmp
sub
adc
and
cmp
jg
sub
daa
xlat
shr
mov
or
popf
add
pop
fwait
addl
mov
mov
std
stos
lds
daa
test
sbb
push
mov
xchg
jmp
dec
inc
je
pxor
dec
cwtl
cltd
inc
sbb
loopne
jne
sbb
jbe
xor
dec
stos
mov
stc
and
cmp
shrb
call
loope
popa
pop
fidivrs
ds
pop
aad
sbb
push
pop
lret
sar
jae
sbb
cs
and
dec
mov
roll
pop
shll
pop
out
and
pop
cmc
pop
lret
adc
xor
push
xorb
cmpsl
divl
jle
mov
add
sbb
mov
push
je
adc
aad
mov
mov
mov
lret
aas
arpl
jle
stc
cmp
push
pop
cmpsl
pop
xchg
push
jbe
lret
sub
pushf
sti
mov
movsl
test
mov
lods
adc
mov
mov
cld
mov
push
sub
mov
xor
ret
jg
jns
rcl
lock
movsb
imul
push
stos
xchg
mov
std
js
mov
mov
loop
stos
scas
mov
std
cmc
outsb
jae
ret
stos
add
push
fstps
push
dec
out
call
ljmp
mov
adc
xchg
adc
add
sbb
iret
repz
inc
pop
mov
xor
movsb
in
push
stos
add
mov
xor
rcll
fcmovnbe
nop
outsl
ljmp
push
or
xor
fisttps
dec
je
movsb
adc
subb
sub
imul
and
push
movsb
jb
lret
sarl
cmp
sbb
lea
in
repz
mov
jns
jg
jmp
ss
push
add
xlat
mov
or
xchg
iret
fwait
xlat
lcall
pop
jnp
into
push
stos
lock
push
cmp
jmp
inc
test
jle
call
enter
inc
fwait
lds
dec
push
or
iret
cwtl
test
xor
and
push
addr16
mov
and
data16
cs
cmpsb
inc
push
call
cmp
mov
xchg
jns
or
jo
and
hlt
fwait
mov
ja
int3
test
int
stos
in
cmpsb
fmuls
jp
lods
in
mov
sbb
push
fcmovb
movsl
bound
or
jne
and
ljmp
ja
cmpsl
xchg
fdiv
pop
lret
andb
pushf
or
lock
pop
dec
mov
xchg
jl
in
ljmp
mov
fldcw
popa
imul
test
pop
add
cmpsb
enter
fsubrl
adc
pop
sbb
push
jo
dec
mov
loop
cld
jne
lahf
sti
mov
iret
ljmp
sub
xchg
jg
lcall
icebp
je
mov
imul
imul
movsb
add
and
es
xchg
lret
pushf
repz
cmp
andl
and
dec
fbld
dec
push
cmp
xor
jne
inc
or
xor
mov
ss
aam
and
push
les
push
mov
inc
pop
int3
sub
pop
and
jne
enter
cwtl
fiaddl
dec
sarb
iret
add
sbb
out
cmc
sbb
sti
add
mov
test
fmuls
pop
in
add
jae
add
fcoml
jecxz
out
mov
repz
aad
pop
xorb
or
inc
je
mov
adc
mov
repnz
push
jne
inc
lods
add
sub
idiv
dec
out
stos
filds
cli
pusha
sbb
test
in
js
add
push
es
push
add
push
dec
bound
cs
lret
sbb
push
nop
mov
xchg
sub
adc
mov
orb
push
pop
or
sub
nop
ret
orb
out
add
xor
imul
sahf
push
sub
adc
aad
mov
cmc
jg
xchg
lods
bound
add
shlb
fnstenv
pop
cli
mov
jnp
js
arpl
iret
jnp
je
and
dec
popl
fistl
xchg
lods
push
push
das
lods
sbbl
outsl
push
lcall
fisubl
lret
insl
in
push
dec
mov
sbb
icebp
sbb
mov
call
ds
pop
sbb
repz
roll
enter
mov
fwait
fistps
ljmp
ljmp
std
cmp
inc
or
mov
mov
aad
aam
test
subl
jo
fisubs
cmp
xchg
xchg
adc
movsb
dec
mov
mov
sub
pop
xchg
cld
adc
push
mov
jmp
dec
xlat
std
repz
mov
arpl
push
and
dec
pmullw
ja
incl
or
call
jecxz
sbb
and
push
cwtl
sub
or
push
dec
insb
cmp
lret
xor
adc
jmp
pop
xor
xor
lret
cltd
insl
imul
xchg
mov
out
mov
inc
add
sbb
mov
inc
je
jb
pop
cmpsl
push
pop
sarl
inc
aaa
pusha
jmp
cmp
inc
in
mov
in
and
sub
das
add
xchg
popf
test
pusha
push
std
mov
push
nop
and
jno
aaa
add
lret
jmp
aad
stos
sbbl
je
mov
in
mov
ficoml
mov
mov
inc
xchg
and
xchg
xor
sub
leave
cmc
push
mov
imul
or
mov
js
add
pop
xchg
sbb
clc
shrb
adc
push
repnz
or
sub
sub
std
adc
dec
lcall
stos
pop
out
cmp
shll
xadd
insb
mov
mov
sub
add
add
push
imul
push
push
mov
scas
xchg
add
push
xchg
scas
jl
pop
cmp
ss
or
sub
jl
xlat
fmull
lea
leave
push
lds
daa
cmp
vpunpckldq
jl
add
adc
pop
inc
xchg
jl
push
adc
and
lcall
out
outsl
pop
xchg
dec
sub
add
and
gs
and
xchg
cwtl
sbb
nop
rcr
lcall
push
cmpsl
xor
rcr
lock
and
lret
sub
and
insb
lret
xchg
fbstp
mov
dec
popa
or
cltd
adc
add
call
out
cmp
mov
dec
outsb
in
sbb
sub
cld
lret
xor
xor
inc
or
adc
jp
inc
imul
aaa
fistpl
dec
mov
mov
cmp
mull
sub
scas
mov
cld
ret
dec
lcall
mov
jmp
jmp
pop
lea
mov
xor
sub
or
xor
xor
xorb
sub
popl
add
inc
shl
push
or
stos
imulb
jne
jl
mov
jmp
inc
decl
subb
aam
aaa
xor
bound
and
aaa
cmp
cmc
adc
add
clc
push
insl
mov
loop
and
mov
mov
push
xchg
repz
push
jg
sub
call
aad
or
mov
lcall
sub
add
cmp
adc
dec
sahf
jnp
jns
jb
icebp
roll
int
jl
cmc
call
cmpl
jg
inc
fiadds
inc
adcl
and
pushf
lea
inc
push
fnstsw
andl
xor
mov
in
inc
fstp
addl
imul
in
mov
loop
mov
sbb
arpl
arpl
mov
lcall
mov
aam
pop
repz
les
sub
push
xchg
ljmp
fisubrl
lahf
jle
dec
adc
cld
xchg
fwait
cmp
fimull
cmp
push
cltd
jo
pop
adc
lcall
sbb
mov
mov
hlt
mov
sbb
fmuls
mov
loop
push
and
mov
rclb
into
cmp
mov
jecxz
or
sbb
arpl
cli
outsb
add
icebp
pusha
ja
jne
cwtl
test
popf
call
movl
pop
jg
movsl
push
mov
out
inc
sub
imul
gs
xor
and
mov
mov
movl
sub
mov
fisttpll
ret
dec
bnd
xlat
ja
lahf
pop
shrb
add
mov
adc
out
push
dec
or
daa
sub
insl
jecxz
pop
notl
lret
les
fwait
xlat
mov
hlt
xchg
arpl
fcompl
jmp
mov
push
sbb
or
lcall
push
icebp
test
sbb
fadd
ja
test
lahf
lods
into
fcomip
jo
insl
into
jle
adc
push
fldcw
ret
xlat
stos
into
jo
push
pop
push
mov
inc
mov
inc
imul
or
mov
pop
mov
mov
sub
incl
xchg
push
add
jns
mov
sbb
add
cltd
sbb
sbb
xchg
lock
test
test
add
shl
xchg
ljmp
sub
les
cmp
mov
add
sbb
cmp
mov
cli
imul
pop
in
sqrtps
inc
push
pop
xchg
inc
lret
dec
or
inc
mov
fistps
cmp
out
cmc
ss
cmp
ljmp
xorb
xchg
int3
mov
mov
adc
mov
jbe
mov
stc
mov
jp
mov
ret
ret
inc
lret
adc
xor
jns
mov
inc
pop
adc
test
test
fidivl
mov
shll
into
cmp
cmp
fadd
cmpsl
andb
cli
cli
dec
adc
and
push
jmp
scas
in
or
scas
mov
ljmp
stc
cmp
ja
hlt
ret
cmp
cmp
js
dec
cmc
pop
out
out
in
push
lcall
fstpt
mov
idiv
mov
pop
sbb
scas
insl
cmp
aam
cmpsl
mov
sbb
into
loope
push
dec
push
push
inc
roll
test
xor
scas
mov
sub
jns
ficompl
cmp
rol
aam
popa
pop
mov
cli
push
scas
jecxz
lods
or
fidivs
loopne
mov
cwtl
stos
sub
jmp
xchg
cld
xchg
sub
cmp
pop
or
ret
aad
dec
ss
push
stos
addr16
push
out
jno
inc
lods
aad
sbb
popa
jbe
repz
sub
xor
je
and
lahf
out
sub
and
fmull
in
mov
je
xlat
mov
scas
cltd
jnp
sub
xchg
lods
pop
iret
inc
cmp
addr16
xchg
or
leave
cmp
xor
mov
dec
ret
movsb
f2xm1
stos
push
insb
roll
mov
xor
cli
adcl
ljmp
sub
mov
sarl
fdivrl
sub
inc
sti
inc
jg
cmpsl
mov
daa
mov
push
pop
sub
fnstenv
xor
and
cmp
dec
inc
subb
test
pop
fldcw
xor
sbb
lret
adc
and
adc
and
adc
pop
aaa
sbb
rcrb
dec
pop
pop
mov
dec
sbb
push
mov
sub
dec
mov
inc
lds
mov
xchg
xor
xchg
nop
jmp
inc
fs
ja
xchg
mov
push
stos
inc
aaa
out
in
pop
jg
ret
jnp
push
jns
std
in
mov
sbb
jbe
int3
or
imul
sarb
adc
and
shrb
sbb
fsub
adcl
cmp
adc
shrb
or
fildl
jno
in
xchg
or
xor
xor
js
imul
xchg
adc
xchg
and
mov
jmp
inc
xchg
pop
inc
in
and
push
push
aam
int3
inc
cmp
fsubrs
xor
shrb
insb
inc
push
rep
mov
mov
cmc
lea
mov
sub
nop
es
addl
add
add
or
push
mov
jne
or
xchg
pusha
add
inc
mov
or
mov
mov
in
cmpsl
push
mov
xlat
mov
xchg
push
in
lahf
pop
pusha
xchg
test
mov
pop
int
inc
cli
dec
dec
addl
enter
xchg
push
pop
shlb
pop
repz
popa
das
dec
lret
shll
ficomps
cmp
sbb
lds
int3
inc
mov
xchg
loop
inc
mov
xchg
jle
jns
scas
sti
push
pop
xor
or
jg,pn
rorl
inc
xlat
dec
xor
cltd
addr16
jge
mov
jno,pn
push
lods
mov
stc
sub
xchg
ja
repz
mov
sbb
mov
push
pop
out
cmp
sub
shl
mov
ret
cltd
jbe
outsb
in
lahf
pop
in
push
lods
jo
movsb
mov
fstl
dec
in
fldenv
aam
mov
mov
sahf
push
aaa
ds
scas
int
adc
insl
or
repz
xlat
das
mov
test
jno
and
mov
xor
push
pop
aad
add
sub
js
jl
cmp
das
addb
mov
xchg
aam
repz
aad
ja
push
outsl
aas
shrb
addr16
insb
xor
js
jae
insb
mov
adc
imulb
scas
mov
mov
outsb
sbb
fdivs
shll
setne
out
es
fistps
enter
ljmp
arpl
sbb
imul
fidivrs
call
dec
mov
mov
movsl
pushf
mov
xchg
aaa
js
jns
push
and
fsubr
and
mov
pop
mov
push
pop
loope
leave
int
xor
add
mov
jl
cmp
lahf
pop
shrl
mov
cmp
fidivrl
and
stos
cld
repz
jl
je
stos
xlat
mov
fisttpll
rolb
jnp
int3
and
fildll
pop
pop
inc
jns
in
and
cli
add
sub
dec
mov
push
les
jl
jl
push
nop
add
jno
ja
movsl
in
cltd
out
clc
jo
inc
adc
mov
push
into
das
shr
fwait
std
sub
lahf
cmp
mov
call
insb
pop
imul
in
add
and
mov
loope
mov
dec
ds
pop
aam
pusha
xchg
push
es
into
fistps
sbb
repz
ja
in
pop
jmp
gs
das
mov
outsb
hlt
nop
popf
cs
clc
xor
leave
dec
shrl
jg
pop
test
jno
xchg
mov
mov
add
dec
adc
pop
incb
subb
lds
int
push
int3
shlb
add
fisubrl
lcall
lcall
jb
or
scas
test
addb
xor
add
lret
inc
xchg
or
push
dec
into
jae
pop
iret
lock
cmp
jl
fdecstp
insl
leave
mov
pop
fadd
stos
cltd
lods
and
mov
js
inc
cmp
sub
and
test
cmp
xchg
sub
repz
dec
addr16
cld
stos
pusha
push
loopne
je
push
inc
clc
cmp
stos
push
mov
dec
out
fs
xchg
inc
sbb
inc
xlat
lcall
cld
xchg
hlt
pop
mov
pop
cli
xor
incb
orb
mov
outsb
or
sub
lahf
neg
mov
jecxz
jns
test
shll
mov
enter
decl
or
int3
sub
lret
arpl
xchg
test
push
and
add
orl
out
mov
and
mov
into
and
inc
mov
xor
xor
xor
jecxz
in
push
push
adcb
pop
xlat
inc
cmpsb
inc
inc
fisttpll
add
and
pop
or
imul
test
sbb
jecxz
jnp
sub
enter
shll
push
mov
movsb
scas
out
clc
addr16
mul
dec
iret
jmp
xchg
inc
xchg
fimuls
inc
daa
mov
pop
xchg
out
cmpsb
pop
aam
loope
mov
jmp
fucomp
mov
add
cmc
cmpsl
test
scas
ljmp
dec
sub
stos
sub
pop
inc
pop
mov
popf
enter
into
xor
imul
mov
ja
les
xchg
and
sbb
mov
out
mov
cmp
mov
xor
and
addr16
in
or
sbb
std
aad
into
or
mov
inc
lret
fcoml
out
add
jp
push
outsb
call
dec
sub
add
inc
loop
insl
mov
adc
xchg
bound
outsb
test
outsb
xchg
iret
hlt
in
push
iret
sbb
xlat
fmull
mov
xchg
and
lret
jmp
insl
aad
test
testl
mov
scas
mov
push
pop
dec
xor
pop
and
sti
add
push
cmp
je
das
fs
xorl
lret
fwait
mov
push
mov
push
dec
adc
mov
push
add
iret
ds
inc
enter
pop
lods
mov
xor
inc
ja
hlt
insb
push
xchg
ss
test
mov
pop
jne
in
jns
jmp
cld
daa
fbld
sub
xchg
adc
xor
ljmp
inc
aaa
sub
test
pop
into
rol
adc
fstpt
pop
mov
test
push
inc
dec
sub
in
nop
mov
or
dec
mov
sub
cwtl
in
leave
les
mov
in
and
pop
dec
xchg
push
bound
sbb
add
add
jle
dec
cmp
es
movsl
stc
pop
test
mov
lods
mov
jb
iret
inc
push
cwtl
daa
ficoml
sub
lahf
pop
cli
sahf
cmp
xor
dec
inc
xor
aam
nop
and
daa
jnp
sarl
xchg
mov
pusha
push
inc
push
int
add
push
jno
mov
push
std
add
sarb
stos
dec
subl
out
pop
jge
dec
jnp,pn
add
inc
pop
jle
dec
mov
jmp
adc
and
push
push
ret
sbb
js
gs
fwait
adc
jne
sub
fs
xorb
xchg
stos
lds
xlat
ljmp
outsb
in
stc
jns
and
lea
cmp
jmp
insl
mov
cmp
mov
ret
mov
je
prefetch
or
out
push
pop
data16
aas
rorl
mov
out
les
leave
sub
leave
out
pop
push
push
out
pop
and
lock
push
iret
dec
push
and
lods
les
out
push
shrl
imul
fstpt
adc
sub
sub
jns
cmp
shll
jbe
mov
loopne
comiss
jb
movsl
imul
repz
add
lcall
adc
sub
scas
jmp
movsl
xchg
xor
fwait
push
daa
mov
lods
xor
inc
and
xor
test
test
cmp
mov
xor
inc
dec
aad
adc
cmp
outsl
mov
outsl
testb
mov
pushf
test
cmp
push
call
mov
jo
js
add
dec
xor
stos
inc
xor
stos
mov
lea
das
inc
push
lea
scas
aaa
daa
xor
or
js
out
pusha
pop
insb
mov
xor
mov
loope
sub
hlt
and
mov
add
fs
jge
adc
lds
xor
ror
dec
pop
out
hlt
sub
push
mov
aad
bound
and
or
data16
movsb
mov
push
sbb
mov
loopne
inc
enter
loope
test
movsl
out
or
ret
test
popa
pop
inc
and
jmp
insb
nop/reserved
jbe
roll
ss
fwait
xchg
push
mov
lahf
mov
test
cwtl
iret
cmp
js
pop
fisttps
inc
movsb
out
lret
shll
out
pop
fs
lea
add
cmpsb
jle
fidivrl
enter
fwait
fwait
jo
int
rorl
xchg
daa
xor
mov
xorb
pop
subl
sti
mov
mov
xchg
dec
js
test
push
lret
les
andb
xor
mov
subb
dec
adc
repz
dec
sub
cmp
lods
sbb
cld
imul
jns
daa
push
jl
adc
incl
insb
mov
lret
pop
sub
inc
sbb
and
lcall
lcall
insl
popa
sub
out
enter
jb
mov
inc
inc
mov
cmpsb
call
test
lds
iret
pop
adc
xchg
mov
ja
xor
push
mov
mov
std
aam
mov
je
push
cmpb
scas
jno
lahf
xchg
es
fistps
aas
out
das
lret
bsf
test
jmp
test
sub
shlb
ljmp
push
les
dec
inc
cwtl
movsl
fstps
out
mov
popa
push
inc
loopne
sub
fisttps
cld
xor
inc
jge
clc
dec
xchg
pop
or
mov
mov
mov
cmp
shlb
xor
adc
add
and
jb
sub
std
sub
jle
xchg
ds
xor
push
hlt
jns
mov
fidivrs
mov
fcoml
in
adc
fwait
xchg
hlt
loop
dec
and
cmpl
push
pop
lcall
call
arpl
push
xchg
scas
jg
jne
add
xchg
hlt
bound
jg
repnz
inc
xor
dec
sbb
andb
xchg
dec
and
mov
adc
dec
or
aaa
arpl
cwtl
sub
add
jns
cwtl
sbb
pop
mov
inc
cmpb
fiadds
xchg
add
mov
dec
xor
cli
mov
or
fldl
mov
lret
mov
mov
fildl
push
xchg
movsb
lea
pop
imul
mov
add
push
cmpsl
jle
shl
push
inc
dec
test
mov
test
and
xor
push
mov
cmp
loopne
testl
imul
jg
add
popa
inc
adc
inc
dec
push
in
xor
xor
mov
sub
cmp
enter
xlat
inc
mov
call
ret
xchg
pop
or
imul
fs
lock
sbb
xor
xor
mov
xchg
orl
lea
jnp
pop
iret
pushf
add
outsb
mov
fists
pop
add
sbb
mov
fcomps
ljmp
sbb
jo
add
adc
or
scas
jne
jge
movsl
arpl
sbb
dec
mov
jno
pop
sbb
ja
stc
mov
ljmp
jb
cmc
cmp
mov
push
gs
mov
push
jae
test
xchg
loopne
addb
scas
mov
sub
scas
jmp
orl
mov
xchg
or
or
dec
test
xor
ficoml
int3
jge
mov
test
adc
mov
dec
pop
insb
sub
test
lcall
add
fsubs
xor
icebp
ret
call
sub
dec
leave
cs
inc
sbb
inc
push
ds
and
xor
sub
pop
out
xchg
cwtl
insb
lea
outsl
mov
xchg
out
mov
dec
mov
cmc
icebp
jg
xchg
cmovs
inc
xor
cmp
les
push
flds
fcmove
push
mov
movsl
or
outsl
fucomip
shll
lods
mov
in
in
sub
andl
mov
outsb
test
aas
cmp
mov
sbb
cld
js
sbb
call
sub
out
pop
sbb
push
in
xor
frstor
adc
outsl
push
dec
pop
scas
jle
mov
sub
inc
mov
addr16
pop
pushw
sbb
test
pop
sbb
xor
cmp
add
jle
data16
push
add
sbb
sti
lea
cmp
jb
loopne
and
add
int3
mov
fs
sti
mov
mov
inc
scas
cmp
jecxz
mov
mov
pop
or
xchg
test
push
into
mov
aaa
nop
jp
sarl
inc
test
xchg
cli
jl
ret
cli
adc
lods
je
lods
mov
sbb
add
cmc
xor
jns
inc
adc
inc
repnz
xchg
ror
push
enter
aam
jl
xor
inc
fstpl
pop
push
xchg
mov
jge
out
popf
push
loop
dec
movsb
mov
sub
inc
stc
xor
cs
int
pop
pop
aaa
sub
shl
in
enter
cltd
jg
nop
je
movb
shll
lret
adc
shll
stos
ja
jmp
xchg
jp
mov
gs
adc
mov
push
and
inc
dec
imul
push
adc
nop
or
pop
mov
dec
les
xor
sbbl
and
pop
test
mov
add
push
lret
mulb
out
and
inc
lds
ret
jns
push
insb
test
cmp
push
or
jae
and
dec
cmp
mov
mov
fiadds
mov
xchg
leave
loope
xchg
mov
xchg
xchg
jb
sbb
fmull
push
or
mov
pop
inc
sbb
addr16
clc
movsl
les
movsb
mov
daa
daa
leave
adc
in
inc
sub
enter
fistpl
xchg
inc
cmpsl
dec
and
and
inc
dec
addb
xor
fnsave
leave
lods
sbb
mov
loope
fpatan
adcl
fistpll
push
fs
adc
jle
cmp
and
ss
dec
inc
sub
js
hlt
and
out
push
mov
les
sub
test
inc
or
mov
idivb
jnp
adc
fdivrs
xchg
sub
xor
cmp
testb
mov
cmc
dec
sbb
sbb
xchg
clc
xchg
or
outsl
popf
mov
je
cmpsl
push
mov
mov
pop
in
out
cmpsb
aad
mov
in
jle
dec
aam
cmc
and
out
das
push
xor
fimuls
or
jmp
sub
push
stos
jae
test
enter
lret
xor
sub
xor
cs
mov
adcb
je
inc
pop
iret
mov
push
add
mov
insl
test
movl
push
dec
fistpl
popf
mov
pop
cmp
ret
pop
xor
rcr
inc
enter
fstpl
cli
dec
sbb
std
mov
cmp
cmp
and
mov
in
jg
jecxz
cmp
into
popf
rclb
mov
rcrb
sbb
lea
je
sub
shlb
out
sti
and
lahf
scas
mov
jnp
or
mov
jg
add
mov
mov
enter
jno
jg
mov
mov
addr16
xor
jb
pop
in
outsb
pop
leave
pop
inc
imulb
faddl
sbb
lods
lods
cmc
dec
xlat
mov
push
les
jnp
jns
mov
scas
rorl
mov
clc
adcb
daa
sbb
icebp
lods
lods
scas
push
jecxz
out
fsub
pushl
jp,pn
fcmovu
mov
mov
mov
data16
in
and
fadd
insb
pop
and
testb
out
sbb
xchg
xchg
push
jge
scas
popa
dec
cmp
iret
inc
mul
mov
mov
adc
pop
dec
dec
push
cld
sarb
lds
shlb
mov
mov
data16
lret
xchg
inc
pop
sti
lret
or
call
cli
cltd
ret
adc
push
xchg
dec
daa
mov
cmp
jle
sub
loop
pop
inc
pop
loop
xchg
jle
mov
lock
into
dec
ret
push
idivb
or
call
dec
cmpsb
in
data16
fdiv
daa
dec
mov
addr16
mov
pushf
std
mov
mov
in
rorl
cmp
cmc
lods
push
popf
mov
test
inc
scas
and
movsb
clc
outsl
mov
call
out
jne
xchg
lods
jl
adc
mov
cld
add
cmp
pop
add
ss
inc
mov
leave
outsb
sub
loopne
aas
int3
loop
dec
xor
or
cmp
nop
pusha
nop
add
pop
in
sahf
dec
jns
enter
fildl
inc
shl
aaa
mov
cmp
call
sbb
movsb
mov
out
and
push
scas
popa
pop
sbb
shl
test
frstor
or
mov
je
and
aad
jb
sbbb
and
lea
jb
inc
push
lds
push
xchg
mov
loopne
xchg
stc
fldl
cmpl
dec
das
cltd
adc
roll
ljmp
outsb
jbe
mov
xor
and
and
hlt
movsl
jg
adc
mov
icebp
and
cmpsl
adc
ja
and
outsb
mov
leave
jb
cmp
nop
or
out
xchg
adc
divb
imul
iret
dec
sbb
cmp
and
lcall
and
xor
adc
add
roll
and
lds
inc
je
mov
adc
cmp
mov
leave
adc
adc
insb
aaa
dec
outsl
xchg
fstpt
in
mov
mov
daa
or
and
add
adc
mov
sbb
inc
add
addr16
arpl
push
icebp
insl
mov
in
sbb
in
jge
stc
lret
outsl
insb
test
inc
js
nop
dec
icebp
mov
lret
and
fisttpl
nop
stos
out
scas
into
addr16
mulb
push
out
imul
ret
or
push
sub
xchg
jecxz
pmullw
ja
add
fidivl
lock
xchg
daa
popa
imulb
lret
nop
jno
cmpsl
repnz
fs
ret
mov
int3
iret
push
clc
jmp
xchg
pop
push
mov
push
jb
xor
inc
fiadds
pop
xlat
rcll
rcl
pop
push
sbb
subb
push
pop
dec
and
pushf
add
dec
or
mov
push
gs
mov
icebp
lret
jge
std
call
int
jmp
cmp
inc
jne
mov
xorl
xor
pop
repz
imul
insb
testl
lds
dec
xor
pop
rcll
sub
mov
pop
cmp
je
jl
sbb
sub
stos
cmp
inc
mov
fildll
lret
test
push
cmp
inc
xor
addb
push
or
inc
fcom
dec
add
dec
cltd
pop
es
and
push
jp
ljmp
adc
mov
jnp
in
imul
lret
repnz
inc
divl
mov
inc
adc
pop
and
imul
rorb
jge
sbb
xlat
mov
andb
jnp
fdivrs
daa
into
dec
xchg
or
call
in
mov
pop
or
loopne
mov
sbb
dec
or
shll
pop
imul
ss
inc
push
pop
sub
test
fistps
popf
sub
jle
add
inc
push
xor
sti
mov
inc
cld
nop
mov
rcrl
icebp
push
aad
bound
mov
mov
dec
pop
adc
cmpsb
ja
mov
dec
jg
jnp
sbb
sub
into
xchg
lahf
nop
mov
mov
xchg
bnd
mov
jp
sbb
jp
sar
hlt
and
aas
add
movsl
jbe
pop
pop
stos
dec
dec
jbe
lahf
sub
sbb
movsl
cmp
pop
or
mov
jnp
mov
sub
std
mov
fucomip
xor
pop
sub
ds
lahf
cmpl
sti
add
shll
stc
mov
cmp
inc
cld
sahf
inc
outsb
xor
mov
les
aam
lds
cmpsl
pop
jb
ljmp
dec
aaa
jbe
push
in
inc
in
scas
sub
andb
stos
enter
adc
gs
pusha
xor
push
sub
fisttpll
bound
jo
repz
dec
ficomps
pop
aad
xor
stc
sbb
mov
out
out
adc
dec
daa
jl
insl
in
sbb
xor
std
sahf
into
sbb
or
icebp
into
jmp
adc
popf
lcall
test
lcall
int
std
dec
das
add
pop
push
cmp
inc
mov
pop
ds
in
or
push
mov
fs
add
jbe
pop
cs
xchg
iret
and
xor
aam
nop
or
sub
pop
adc
add
adc
cltd
push
mov
adc
inc
mov
test
fstpl
push
fmull
lcall
mov
sahf
pcmpgtw
push
test
rorb
push
xor
pop
cmp
sbb
test
mov
adc
fs
push
mov
je
xchg
push
mov
jnp
daa
shlb
fsts
add
sbb
sbb
lret
dec
insl
pop
sbb
cmp
fnstsw
push
jae
mov
into
fmuls
cli
sti
test
jne
into
loope
ret
into
or
cmp
mov
repz
fmulp
pop
mov
jle
fsubs
cmpsl
mov
push
cmp
fsubr
mov
gs
neg
add
push
test
jmp
sub
pushf
xor
mov
fwait
out
inc
jo
stc
in
shlb
fwait
popa
add
iret
in
jge
inc
jle
les
cmp
mov
outsb
push
sbb
nop
xchg
aaa
mov
push
mov
je
push
sbb
push
add
lea
mov
mov
movsb
dec
jge
push
jae
pusha
adc
das
inc
push
loopne
xorb
fldt
dec
test
cs
jns
aad
arpl
popf
pop
and
fbld
add
mov
cmp
int3
daa
lret
xchg
add
push
push
add
in
jge
movsb
movsb
ffree
push
ljmp
repz
and
out
or
nop
repz
push
inc
jecxz
push
arpl
pusha
fsubrs
cmp
loop
movb
fnstcw
roll
pop
loope
imul
lret
fcoml
sub
mov
out
sbbb
ljmp
and
pusha
movsl
push
arpl
dec
xchg
mov
xor
ret
inc
jbe
xor
pop
aam
jns
mov
sbb
mov
adcl
leave
fs
dec
into
dec
add
push
push
jne
jge
arpl
pop
pop
nop
mov
mov
gs
aam
sbb
mov
mov
ljmp
imul
shl
mov
sbb
sahf
inc
pushf
jbe
dec
xchg
push
cs
mov
add
xchg
jns
xchg
push
sub
imul
stos
add
aad
rclb
les
ds
and
int3
push
push
dec
addr16
mov
xor
lods
xorl
pop
lock
pop
or
ret
adc
cmp
adc
sub
ror
inc
mov
les
push
outsb
adc
xchg
inc
pop
push
leave
and
aas
adc
jns
mov
mov
jb
sbb
into
test
es
sub
dec
and
mov
stc
push
ja
rorl
pop
pop
jmp
fs
inc
adc
fisubrl
cli
mov
add
imul
mov
inc
ret
sub
rorb
ljmp
add
mov
mov
pop
jecxz
out
or
mov
cld
add
push
loop
lock
in
mov
out
negl
adc
addr16
mov
and
dec
xor
add
push
cwtl
xorb
int
popf
xor
pop
lret
fwait
rorl
xchg
inc
cs
stos
out
hlt
mov
daa
xchg
inc
adc
pop
mov
jmp
test
mov
xchg
pop
pop
pop
dec
in
push
inc
jg
out
jp
or
or
push
pop
jb
shlb
mov
cmp
in
dec
sub
jmp
inc
pop
shrl
scas
sbb
arpl
cmp
daa
xchg
jne
rolb
sub
dec
or
sbb
stc
mov
lret
les
divb
arpl
lds
and
outsl
addr16
pop
or
rolb
jl
in
pop
int
rorl
pushf
cwtl
pushf
mov
xor
out
int3
push
xchg
pusha
sbb
fwait
or
ret
add
ret
pusha
adcb
cmp
cmp
or
xchg
mov
adcl
out
jae
icebp
cmp
addl
jae
test
mov
lret
inc
ds
imul
push
mov
ds
cmpsb
jo
dec
dec
jp
sbb
xor
in
dec
jae
mov
out
les
jbe
mov
push
fs
pop
push
nop
add
aaa
lods
mov
cltd
mov
mov
rcrl
imul
adc
push
cmpsb
inc
add
gs
pop
pop
xor
add
inc
lret
mov
mov
js
lods
sub
xchg
hlt
lret
loopne
fnstenv
sub
push
and
sbb
sti
outsb
ss
hlt
inc
adc
ja
sarb
pop
cwtl
or
inc
addr16
jp
jb
out
je
dec
mov
adc
inc
fsubl
mov
jae
mov
mov
iret
imul
inc
jbe
fistpl
cmp
add
jae
cmp
inc
cmp
or
in
bound
cltd
mov
dec
push
jb
cmp
scas
push
cmc
xor
push
jbe
adc
ret
pop
xchg
dec
in
cmp
xlat
lock
gs
sbb
std
mov
pop
test
inc
andl
sub
icebp
xor
cli
pop
push
jecxz
push
cmp
pop
xchg
rcll
ja
sar
pop
jne
ljmp
ds
mov
test
movsl
stos
cmp
push
cmpsl
popf
dec
cs
push
inc
push
in
fst
rcr
mov
add
ffree
fstpt
popf
inc
testb
cmp
xor
mov
in
adc
jne
and
cmpsb
dec
xchg
shlb
push
not
jno
stc
sbb
stos
and
roll
adc
jecxz
or
ret
mov
push
sbbb
test
add
bound
inc
dec
aaa
xor
shrb
cmpsb
inc
adc
cs
jge
xchg
cwtl
sbb
ds
add
stc
mov
xlat
mov
bound
testb
aad
xorb
dec
lock
xor
cs
adc
mov
or
push
add
jbe
inc
or
js
adc
cmp
xchg
mov
daa
add
inc
jbe
add
rcr
cmp
aas
sbb
xchg
lea
add
repz
pop
adc
outsb
das
out
fs
mov
mov
daa
inc
sbbb
icebp
adc
bound
mov
or
aaa
push
xchg
mov
mov
pop
dec
mov
movsl
mov
shll
push
xchg
mov
adcl
jl
call
test
inc
push
sbb
mov
stos
negb
sbbb
insl
push
into
inc
fidivl
das
push
cmp
nop
ss
adc
cmp
push
adc
mov
lock
and
lds
ljmp
dec
pop
push
in
lock
inc
mov
iret
mov
or
in
cltd
fs
icebp
fwait
and
push
add
push
sub
jb
sahf
xlat
xchg
stos
jmp
out
and
dec
add
xchg
test
das
xorl
iret
adc
lds
ret
mov
imul
stos
test
outsl
xchg
and
xchg
push
sbb
insb
shll
fcmovne
sub
pop
jmp
add
adc
lock
das
or
stos
push
call
push
je
push
jno
mov
mov
mov
or
fwait
insl
arpl
inc
cmp
sbb
fsubrl
jle
mov
mov
and
outsb
mov
lcall
push
jbe
outsb
xchg
insl
sahf
cld
sub
stc
pop
stos
test
mov
jb
and
divb
sbb
jge
push
aam
dec
mov
pop
stos
dec
in
fistpll
dec
xchg
test
rclb
lcall
into
aam
outsl
push
xor
jl
push
push
add
xchg
pop
xlat
mov
dec
test
out
pop
test
pop
dec
imul
dec
iret
cmp
sbb
sbb
pminub
jno
arpl
cli
push
rorb
enter
das
bound
pop
testb
pop
loop
loope
in
repz
sahf
mov
sarb
mov
std
aas
in
outsb
cmp
je
inc
adc
jne
mov
ja
out
push
das
out
xchg
push
sub
lock
jg
xor
add
jae
test
dec
pop
call
xchg
add
pop
aam
mov
fwait
or
sbb
xchg
aam
popf
cmp
into
cltd
push
mov
cmp
in
ret
leave
loop
lds
mov
fisubs
fidivrs
enter
mov
lahf
in
sub
sbb
add
test
dec
out
cmc
mov
sub
push
pop
mov
xchg
mov
and
ljmp
rcll
andl
scas
mov
repnz
scas
outsb
les
xchg
fiaddl
out
mov
add
fnstcw
sub
sbb
and
push
test
push
pop
sbbb
repnz
cmpsl
sbb
dec
jae
out
dec
add
inc
cmpsl
pop
ss
dec
mov
sub
and
cmp
hlt
cmpsl
pop
sub
pop
into
lods
shll
push
jl
int3
mov
and
leave
cmp
lcall
xchg
sbb
movsb
xlat
pop
jne
cltd
push
push
inc
imul
mov
std
add
mov
and
mov
rorl
clc
xchg
push
fisubs
or
repz
jb
outsl
in
and
mov
lahf
sub
push
pop
scas
loopne
in
out
push
jae
xchg
fldz
movsl
push
mov
jns
jmp
xchg
andps
mov
arpl
in
loopne
and
mov
xchg
dec
mov
and
pop
xchg
out
bound
dec
fistl
jmp
push
mov
cwtl
pushf
mov
ds
adc
ds
clc
aad
mov
rcrl
fsts
push
mov
or
add
mov
push
fcmovne
and
adc
or
inc
test
clc
push
lret
lahf
xchg
mov
dec
add
sar
push
pop
in
les
cs
push
xchg
push
scas
xlat
mov
jmp
pop
dec
dec
int3
add
sbb
cmp
enter
mov
jbe
inc
aas
iret
std
rep
sahf
js
xchg
ljmp
das
bnd
inc
rcl
fnstenv
fistps
enter
aaa
add
inc
stc
std
cmc
je
loope
addl
imul
jg
fistps
sahf
xchg
jbe
xchg
add
add
psrad
sub
xor
leave
hlt
mov
mov
fstpt
in
lcall
jno
iret
mov
jl
or
jnp
daa
mov
mov
bound
pop
lcall
adc
xor
dec
or
and
and
or
add
push
movsl
push
imul
fs
int
push
jne
adc
cmp
ja
and
xor
lock
adc
es
fisubrl
inc
ret
adc
lret
sub
dec
add
pop
les
out
ss
pop
cmpsb
jmp
mov
in
in
inc
rclb
jno
or
cwtl
add
sub
cli
jl,pn
and
fistpl
cmpsl
dec
add
fidivrl
push
lods
lods
divb
xchg
std
sbb
sbb
jle
rolb
xor
fistps
mov
test
pop
or
lcall
jo
insb
stos
push
add
add
mov
mov
enter
pusha
mov
ret
mov
sbb
pop
ret
pop
pop
test
push
jne
dec
add
and
add
adc
mov
shrl
mov
lods
sti
pop
addr16
fdivr
cmp
clc
cmp
or
push
pop
adc
jne
je
test
push
add
jae
cmp
mov
dec
mov
gs
xchg
inc
push
push
jecxz
fildll
dec
mov
dec
rcr
xchg
addl
sbb
lds
rclb
inc
push
jbe
xor
jge
or
stc
sbb
push
call
jecxz
ret
popf
lock
mov
adc
dec
sti
xchg
cmp
lods
dec
pop
sub
push
pop
lret
leave
or
cmp
out
nop
inc
je
xchg
aas
dec
xor
std
and
testl
loope
mov
pop
out
mov
in
mov
fsubrs
adc
popl
mov
adc
push
and
inc
xor
cwtl
bound
mov
xchg
mov
aas
push
bswap
xchg
cmp
pop
dec
loop
mov
repz
adcb
jp
push
test
push
sub
cmp
icebp
loop
mov
out
mov
jns
or
cmp
jnp
mov
or
jb
xor
sub
jne
sbb
xor
cmp
cwtl
aam
js
js
push
clc
and
add
aaa
imul
xor
in
push
pushf
sti
addr16
jo
sub
and
and
in
sti
out
sub
mov
xchg
mov
xor
dec
jnp
cmp
xorl
orl
dec
and
mov
bswap
adc
pop
lds
jl
ror
and
pop
jg
into
cmpsl
les
mov
xor
dec
mov
pop
out
and
js
loope
insb
inc
loop
lcall
push
movsb
int
fcmovu
jecxz
testb
mov
aad
mov
jl
cmc
lahf
mov
test
lods
adc
add
push
adc
mov
imul
inc
push
or
shll
inc
mov
popa
enter
out
sbb
cmp
repnz
add
pop
xor
dec
add
mov
dec
mov
xchg
push
pop
dec
scas
add
mov
or
cltd
inc
ja
adc
aaa
xchg
xor
lods
testl
imul
arpl
add
adc
mov
mov
sbb
inc
int
pop
inc
add
jg
add
sbb
cmp
push
dec
pop
xor
mov
xor
xchg
pop
mov
enter
lods
sbb
sub
or
mov
enter
out
dec
jle
movsb
push
enter
call
jl
lret
mov
adc
or
popa
decb
jno
lods
mov
ret
adc
xor
mov
sub
push
push
dec
fwait
rcl
add
pop
jecxz
movsl
jl
and
or
mov
cs
fldl
pop
sub
sub
pop
imul
pop
addr16
ja
adc
push
mov
sti
mov
stos
daa
and
lcall
lods
pop
aaa
imul
pop
push
sarb
inc
je
xchg
jmp
jbe
out
outsb
jge
push
add
addb
or
xchg
lods
cmp
idivb
sahf
adc
xor
push
mov
inc
jle
shlb
rorb
or
dec
cs
push
popf
xchg
pusha
or
add
clc
out
insl
shrl
mov
sbb
pop
cmp
push
lea
cmpsl
pop
imul
dec
sbb
or
pop
data16
aad
mov
movsb
and
scas
in
mov
sub
out
pop
imul
sbb
cmp
insl
jp
sub
dec
dec
fnstenv
xor
out
xchg
xchg
jno
shr
jo
or
lods
out
add
gs
mov
clc
jae
rcrl
in
jge
pop
shrl
mov
dec
rclb
mov
push
aam
push
iret
pop
sbb
clc
mov
jbe
jecxz
pop
out
sbb
repnz
bswap
mov
repz
out
ficompl
fwait
scas
jmp
mov
cmc
scas
cltd
xor
push
jmp
xchg
cs
xor
pop
push
pusha
inc
dec
inc
push
enter
sub
fisubrl
cmp
pop
dec
or
or
test
aas
icebp
and
scas
popf
add
cmp
stos
out
cld
in
xor
test
cli
inc
xlat
pop
push
or
mov
rcr
mov
mov
pop
xor
mov
les
stos
loope
cmp
jnp
mov
out
es
jmp
sub
and
mov
sar
jbe
jmp
rcl
xchg
xchg
xchg
lods
lahf
ja
movsl
jge
faddp
outsb
stos
jbe
pop
xchg
loop
push
lock
or
inc
pop
sub
jo
rcrb
mov
lods
sub
loop
scas
cmc
aas
ljmp
sti
pushf
cmp
mov
loope
subl
mov
push
loope
fldcw
hlt
inc
adc
lods
mov
scas
sub
outsl
scas
pop
jge
or
jne
add
rolb
xchg
sbb
out
insb
stc
iret
stos
mov
push
add
roll
and
lret
add
jno
adc
xlat
mov
sub
xor
sti
pop
add
xor
cltd
fucomip
loop
or
ss
sub
fildll
mul
mov
jne
sbb
ficomps
and
xor
bswap
sbb
stos
inc
lock
push
shl
jg
and
mov
add
out
xchg
dec
test
add
call
push
fsts
mov
and
push
dec
add
in
push
inc
outsl
fnsave
repz
lret
add
xchg
andl
pop
fucomi
push
out
mov
xchg
sub
or
push
sub
mov
fsubrs
xchg
das
fistl
cld
std
int
cli
mov
add
mov
out
ds
push
adc
inc
js
and
xchg
mov
jae
xchg
or
mov
jle
cmp
inc
stos
cli
jle
sbb
int
ret
rcr
cltd
fcoml
jl
shrl
or
pop
or
mov
pop
inc
jecxz
lcall
int
fdivrs
icebp
jno
addr16
movsl
xchg
bound
mov
insl
stos
cmpsl
dec
lcall
loopne
movsb
jle
jle
hlt
adc
push
pop
out
adc
in
rcrl
push
sub
jno
sbb
push
dec
add
and
shlb
loopne
mov
push
imul
test
or
sbb
inc
or
fs
imul
leave
adc
cmc
adc
or
cmpsl
mov
inc
jecxz
fsts
add
cmp
inc
sub
cwtl
dec
or
adc
in
in
add
into
iret
mov
xor
mov
or
xchg
sbb
cmp
leave
xor
add
imul
or
mov
mov
ret
fucomi
stc
fldcw
cli
dec
sahf
mov
lcall
xchg
fwait
mov
cwtl
andb
fldl
mov
and
fcompl
push
in
lods
jecxz
add
subb
and
fsubrl
int3
out
mov
and
lcall
mov
jbe
pop
outsl
push
mov
fdiv
pop
dec
int3
cmpsb
cmp
adc
mov
icebp
mov
sbb
scas
lret
mov
sub
dec
shl
pop
mov
push
xchg
sbb
sub
jecxz
dec
pop
sbb
cli
nop
cltd
ret
sbb
push
sbb
mov
rolb
sub
dec
mov
sbb
mov
adc
aas
mov
inc
xlat
cmp
mov
or
pushf
push
ja
std
add
sbb
loop
cmpsl
dec
rcrb
cld
mov
int
mov
mov
xchg
ret
lahf
test
mov
mov
lahf
loopne
cmp
pop
mov
jb
or
into
xor
fimuls
shl
xor
sub
sub
mov
lret
into
data16
push
or
jne
lahf
lret
pop
add
lahf
mov
orb
sbb
cmpsb
jb
mov
pop
iret
and
jg
jg
clc
add
push
xchg
add
pop
imul
mov
shl
adc
repz
fdivrp
loope
push
jl
icebp
test
add
inc
lds
xor
call
movsl
ss
adc
sub
jno
xchg
push
push
test
dec
movsl
dec
bound
and
jno
jp
aaa
setl
int3
push
dec
cwtl
subb
xchg
sub
call
lcall
and
ja
dec
fsubs
stc
dec
es
jge
xchg
repz
mov
add
sbb
mov
loop
int3
xchg
xchg
dec
ds
add
insb
std
mov
xor
xor
mov
ljmp
outsl
dec
pop
xchg
leave
lea
sub
sub
push
call
push
fs
sbb
jle
jle
pop
ljmp
cmp
or
fsincos
rolb
nop
mov
shll
aas
jp
or
push
inc
into
mov
mull
or
xor
adc
mov
out
adc
into
je
movsl
mov
mov
imul
pop
rorb
or
jnp
push
andl
jmp
sub
daa
adc
mov
scas
jmp
inc
dec
js
mov
mov
dec
loop
pushf
fwait
push
sti
mov
push
and
push
ficompl
jp
scas
mov
fstpt
cwtl
test
pop
xchg
jb
and
into
std
lret
repnz
pop
push
sub
sub
sub
fsubr
push
in
cmp
in
pop
cs
lods
push
adc
jg
jb
xchg
dec
fs
jge
xor
mul
pop
test
xor
xorl
lea
cwtl
jne
ds
inc
sub
daa
xor
mov
push
jne
and
testb
mov
sub
in
aam
sbb
cmpsl
mov
insl
mov
sti
fldenv
xchg
mov
pop
out
repz
leave
xlat
out
ja
pop
push
or
jbe
icebp
cmp
dec
das
mov
addl
sbb
popa
sub
in
pop
aad
mov
pop
ret
in
stos
leave
fldenv
mov
mov
in
dec
mov
inc
lods
test
sbb
mov
adc
fcmove
mov
ja
andb
mov
shlb
repz
mov
pop
jns
jecxz
xchg
arpl
fisttps
pop
call
sbb
mov
cmc
xor
rolb
lret
lret
negb
loope
in
mov
sbb
jo
cmpl
adc
bnd
xchg
push
pop
jmp
in
icebp
in
aam
sar
js
fadds
gs
pop
or
stos
jge
mov
add
movb
out
cmp
lds
push
cmp
mov
test
push
or
ja
icebp
test
mov
cmp
cmp
inc
cmpsb
sbb
cwtl
adc
dec
push
sub
jle
xchg
les
aas
jmp
scas
scas
xor
inc
cmp
jge
xchg
sbb
jns
add
jecxz
push
les
das
push
pop
mov
cwtl
pop
mov
mov
cmp
mov
jge
imul
mov
push
xor
cmp
stos
mov
sub
xor
test
sbb
push
in
mov
mov
insl
cs
mov
das
popa
add
insb
test
sub
push
in
and
inc
in
aam
aad
das
jge
imul
inc
pop
adc
out
loop
push
rclb
dec
sub
repnz
dec
push
stos
jmp
adc
insl
cmp
push
lds
jne
mov
push
xchg
aas
dec
shll
jae
movsl
xchg
push
jp
mov
sbb
pop
data16
je
in
andb
arpl
cmpsb
dec
lret
sub
mov
jle
or
mov
lahf
push
xor
mov
xchg
pop
push
push
xchg
lahf
sub
dec
sub
scas
loope
dec
clc
test
popa
dec
lock
in
nop
add
loope
bswap
gs
fs
or
or
enter
fbld
sub
aas
jnp
int3
adc
ficoms
psubsb
jns
loope
sbbl
mov
jmp
xor
push
adc
pop
addr16
xchg
pmullw
lds
sbb
xchg
sub
js
hlt
pop
sub
mov
mov
scas
push
sub
call
sbb
clc
jbe
cmp
push
push
pop
iret
pop
cwtl
jo
outsb
stos
mov
popf
imul
in
cmp
mov
loopne
and
mov
pop
rcrb
mov
fadds
pusha
sub
xor
cltd
dec
mov
sarl
sbb
outsb
push
sbb
xlat
test
push
scas
jge
cmp
mov
xor
push
test
out
test
jno
movsl
pop
in
push
cmc
in
fidivs
movsl
adc
sahf
adc
sbbl
push
adc
inc
fistps
xlat
xor
call
js
sbb
push
mov
mov
fwait
xor
mov
je
push
lods
mov
jmp
xchg
adc
sub
mov
int
mov
stos
add
lock
add
hlt
pop
jecxz
mov
sub
bound
stc
aam
add
add
mov
or
cs
adc
mov
pusha
adc
and
jne
pop
and
ret
insb
imul
test
cmp
push
out
jne
dec
mov
lcall
mov
push
movb
mov
sti
test
adc
incl
out
leave
cs
xchg
cmp
ljmp
jl
ret
sahf
mov
mov
loopne
dec
cs
pop
test
mov
and
ljmp
andl
adc
dec
stc
push
dec
inc
pop
inc
and
loop
mov
das
aam
cmp
dec
mov
loop
jg
jns
mov
popf
sbb
scas
rcrl
cmpsb
aam
jp
pushf
dec
mov
adc
cld
pusha
nop
push
inc
lea
aas
adc
mov
push
jne
ret
jmp
inc
jne
and
pop
cmp
lret
push
pop
rcrl
vpsubusb
dec
or
lock
dec
xchg
rcrb
fsubp
popf
sub
cli
fildll
shll
jo
mov
xchg
mov
mov
add
insl
jge
lcall
pop
repnz
mov
sub
sub
std
loopne
push
pop
lahf
std
aad
pop
icebp
je
lods
fs
jbe
sar
mov
ret
mov
scas
insl
fmul
stos
pop
push
xor
bnd
sbb
jp
aas
clc
dec
ja
mov
mov
test
out
daa
js
imul
fwait
fisubrs
inc
int3
popa
arpl
pop
jle
insb
das
lods
mov
mulb
sbb
mov
in
jg
adc
lods
xchg
push
addr16
sbb
lcall
jns
xor
inc
mov
out
aam
fldenv
mov
mov
repz
lcall
dec
push
jmp
cmp
inc
and
std
roll
push
jmp
adcl
cmp
pushf
sub
mov
outsb
sub
jae
xor
mov
adc
push
loope
sti
or
add
sbb
mov
repnz
push
pop
loopne
sbb
shl
push
sbbl
inc
mov
sti
jg
pop
sqrtps
call
rcr
pop
mov
mov
fs
stos
inc
loope
sbb
xchg
jns
rcrl
push
scas
pop
decb
test
pop
cmpsb
sbb
adc
insl
mov
push
or
cmp
cwtl
insl
mov
ljmp
rdpmc
stos
push
xchg
cltd
stos
mov
mov
sahf
or
mov
xchg
jp
pop
inc
lret
add
fucom
test
sbb
pop
hlt
in
pop
ja
in
push
jmp
or
add
lret
xchg
sub
inc
jbe
and
jbe
daa
mov
int
cmpsb
lret
mov
clc
push
cmp
xorl
mov
inc
dec
aas
outsl
es
cmpsl
and
add
or
iret
test
push
add
lods
pusha
arpl
icebp
cld
out
in
add
inc
xchg
imul
lods
je
xchg
adc
stos
stos
les
add
push
stos
mov
repnz
daa
aam
cltd
out
shll
cmp
jbe
clc
push
mov
aad
mov
and
es
xchg
xchg
push
cmp
jg
sbb
jne
jmp
jg
mov
xchg
inc
nop
rcll
add
enter
test
pop
fdivrs
push
jecxz
ss
cmp
popa
dec
sbb
sub
and
ret
mov
push
idivl
mov
popa
mov
loopne
in
xor
pop
into
ja
leave
pop
jp
mov
cmc
and
dec
mov
adc
les
nop
inc
test
lea
adc
push
cmp
nop
into
jb
adc
sbb
sub
jle
sbb
fsubs
aad
imul
sbb
and
lock
in
xor
cmp
xor
aad
jl
push
mov
rcl
or
rorl
cltd
daa
mov
aad
movsl
sub
jmp
mov
ss
sbb
gs
outsl
lcall
xor
enter
lods
adc
dec
jge
xor
ljmp
ds
xor
pop
or
lods
scas
jp
mov
jnp
push
pop
lcall
data16
divb
adc
inc
jbe
push
cld
cmp
pop
cmp
push
inc
cmp
inc
pop
mov
or
mov
hlt
dec
pop
jns
cmp
popa
cmp
bound
cmp
xor
cwtl
pop
mov
test
mov
mov
push
sti
push
mov
pop
xor
lea
callw
lret
fbstp
cmp
mov
int
imull
scas
call
ficoms
jns
popf
movsl
bound
adc
adc
popf
xor
cmp
mov
sub
sub
fcoms
negb
mov
aad
push
cmp
aad
pop
clc
dec
lock
or
pop
mov
lret
adc
ror
mov
push
std
and
das
fwait
call
push
sub
movsl
scas
jge
subb
ret
daa
adc
adc
push
testl
push
sti
pop
dec
inc
and
test
xchg
insb
mov
inc
jnp
or
dec
sbb
adc
and
xor
push
enter
leave
mov
divl
iret
jbe
inc
or
push
lods
fisttps
dec
bswap
jmp
push
and
push
insl
cmp
scas
loope
pop
xchg
push
arpl
lea
sbb
fwait
pop
sbb
xchg
ss
adc
cmpsb
push
sbb
ltr
xchg
sbb
sub
jb
cwtl
jge
cmp
push
lcall
mov
js
mov
mov
sub
jne
add
sbbb
bswap
int
xchg
ja
push
push
shrl
repnz
xchg
and
ret
push
repz
outsl
or
pop
out
cmpsb
push
enter
and
xchg
fdivrs
je
or
mov
icebp
adc
mov
mov
sahf
mov
rclb
roll
and
cmp
pop
xchg
or
ds
cwtl
adc
test
lret
xchg
repz
cmpsl
je
mov
push
int3
cld
lret
sub
and
dec
mov
lret
loope
daa
es
repz
jae
xor
pop
xchg
pop
pop
push
mov
je
daa
and
je
cmp
mov
dec
stc
pop
jg
xlat
mov
in
add
and
pop
das
and
icebp
incb
xor
daa
xor
ljmp
xor
js
aas
cmp
lret
pop
xor
lcall
cmpsl
pop
daa
inc
and
sbb
fwait
cmpsl
cwtl
cmp
pop
pusha
push
fnstcw
fsubl
jmp
adc
jl
into
mov
pop
and
cmpsb
mov
into
add
or
push
add
movsl
and
xor
jg
pop
sbb
je
and
scas
je
push
aaa
icebp
data16
pop
jo
mov
les
int
and
and
in
or
fwait
shlb
ret
sub
push
mov
filds
pop
xchg
es
arpl
test
mov
adc
insl
and
push
lret
mov
mov
jno
adc
mov
jb
lea
imul
cmp
outsb
add
push
and
in
sti
push
pop
int
hlt
jno
loop
pop
jp
popf
lahf
hlt
mov
lret
fs
or
push
shlb
cmp
mov
das
xor
mov
aam
add
push
imul
xor
cmp
out
cmp
mov
pop
add
mov
repnz
pop
sub
mov
xlat
imul
andl
sub
ss
icebp
lcall
in
arpl
xor
data16
xchg
ljmp
out
pop
mov
push
std
inc
ja
jo
leave
rorl
sti
sub
or
hlt
lods
inc
push
mov
sbb
or
lods
push
in
arpl
cmp
dec
enter
jmp
mov
push
mov
aad
sahf
sbb
pop
jb
and
mov
xor
inc
xchg
fnstcw
fists
inc
jmp
aad
cmp
sub
sub
and
dec
cwtl
or
push
repz
push
mov
mov
lds
mov
sbb
sbb
pop
int
xchg
mov
shrb
or
sub
adc
lea
add
out
das
fldenv
pusha
mov
jb
sti
sbb
es
lcall
aad
xor
adc
adc
dec
inc
lahf
mov
fdivl
popa
scas
pushf
mov
fidivl
lahf
divl
inc
mov
push
cmc
sbb
lahf
adc
sbb
and
fldl
cmc
popf
sbb
sbb
arpl
call
gs
sub
jl
or
jmp
repnz
jmp
xchg
push
hlt
sbb
push
dec
out
in
mov
or
mov
or
or
imul
adc
mov
test
outsl
mov
div
out
rcrb
repnz
cmpsl
loop
xchg
mov
and
sub
ljmp
mov
pop
fidivrl
stc
jecxz
cmp
gs
mov
mov
or
jo
jmp
jb
out
repz
sub
mov
xlat
pop
mov
pop
cwtl
fstpt
cwtl
jns
or
push
fstpt
incb
shl
mov
andb
aaa
mov
and
push
loopne
test
push
xor
and
xor
popf
jge
dec
ficoml
ret
mov
insb
repnz
lret
dec
cmpsb
push
clc
repnz
lret
xor
pop
cmpsb
dec
out
pop
sub
push
fnstsw
push
and
or
add
int
iret
in
leave
or
jmp
std
ret
stos
add
add
jle
dec
int
cltd
xor
imul
pop
sbb
popa
jno
mov
mov
lds
sub
mov
rorb
insl
mov
test
push
subl
and
lods
xlat
mov
andl
sbb
mov
jle
dec
mov
test
ret
cltd
mov
inc
loop
xor
int3
mov
andb
inc
inc
sbb
fsubrp
mov
add
int
sub
jle
cmpsb
xor
jge
jmp
mov
fdivrl
ss
sub
leave
push
mov
sbb
ret
inc
jns
lret
cmp
idivl
repz
shlb
mov
push
push
xchg
jo
repz
xor
inc
fisttpll
adc
sarb
hlt
jg
sahf
dec
cmp
test
arpl
inc
mov
imul
lods
rcl
mov
es
addb
stc
jle
pop
jmp
xor
lret
movsl
cli
lret
imul
mov
inc
call
popf
fildll
gs
sbb
jns
mul
loop
xchg
jg
in
push
fcoms
mov
cltd
aas
mov
cli
pushf
xchg
mov
adc
inc
into
lret
btr
imul
leave
mov
shrb
cmp
cmp
sarl
fists
push
int3
movd
stos
dec
mov
and
inc
or
push
xor
xchg
cltd
popa
inc
mov
sbb
outsb
xor
fsubrs
or
mov
insl
aaa
ss
jmp
std
std
out
jg
out
inc
jne
cmc
insb
cmc
jmp
orl
jmp
dec
popf
xor
jp
les
idiv
in
jp
push
arpl
mov
mov
insb
mov
insb
cmpb
out
cmp
call
jne
mov
cs
repnz
xchg
cmpsl
pop
cld
push
clc
into
fisttpl
into
jl
addr16
cld
cmp
jl
push
mov
stos
fs
add
ror
mov
cld
push
jp
jp
sub
negb
test
js
cmp
xor
shrb
imul
mov
rorb
ret
push
jl
mov
ss
xchg
cmpsb
int3
pushf
xchg
rclb
rcrl
or
pushf
push
icebp
fwait
dec
in
dec
dec
sub
or
pop
aaa
mov
push
pop
into
pop
mov
lret
xchg
cmp
lds
out
insb
jns
pushf
mov
out
jns
les
jle
sub
pop
push
gs
mov
repnz
xor
cs
sbb
insb
aad
jle
sub
stos
xchg
leave
jo
lea
pusha
xchg
pop
int3
mov
cmp
inc
iret
mov
mov
and
adc
cwtl
jge
fcoms
push
popf
and
cli
add
or
and
ret
lods
xor
or
int
inc
xor
jnp
call
aad
das
mov
push
push
es
sbb
cmp
mov
jnp
imul
out
mov
mov
insb
adc
ss
and
adc
lcall
subl
inc
mov
icebp
add
es
mov
mov
pushf
cmpsb
mov
pop
fdivrl
add
lock
pop
inc
push
dec
imul
pop
mov
in
add
xchg
push
jp
notl
movsl
fisubl
insb
das
mov
stos
pop
ds
dec
rorb
das
pop
pop
inc
mov
js
lods
mov
xchg
int3
mov
lds
pushf
cld
inc
loopne
es
sbb
enter
cmpsl
and
hlt
ret
sbb
pop
fisttpll
adc
aas
pop
lods
gs
jne
scas
out
shlb
dec
lret
inc
andl
add
push
jns
scas
sbb
and
cltd
jmp
push
sbb
dec
mov
out
cmp
jns
scas
iret
stos
pop
cli
add
inc
mov
in
incb
push
fs
pop
fdiv
pop
enter
cld
sbb
lahf
jne
pop
shrb
mov
mov
or
int
lea
out
xor
jb
mov
push
test
hlt
movsl
fs
jmp
xor
stos
int3
mov
daa
in
out
mov
jno
sub
sbb
sbb
mov
push
sbb
mov
in
cltd
lahf
xor
inc
sub
xchg
or
fistpll
testb
inc
sub
inc
scas
movsb
insl
jmp
pop
stos
stos
pop
je
pop
push
insl
shl
pop
xor
xorl
jnp
repz
and
inc
pop
adc
cld
pop
push
aaa
mov
mov
mov
out
popa
fisubrl
mov
stc
adc
ret
xchg
cld
adcb
cmp
mov
in
clc
push
je
shrb
cwtl
inc
mov
xor
and
push
add
pop
mov
dec
xchg
std
mov
and
mov
mov
mov
mov
hlt
orb
xor
sti
into
pop
lds
add
aam
scas
push
jp
mov
std
xchg
inc
cld
fmulp
mov
sub
push
dec
sbb
and
and
sbbl
out
mov
jne
outsb
hlt
pop
lret
mov
sbb
xor
sbb
imul
push
add
test
pop
fdivrs
gs
xchg
mov
dec
dec
and
leave
cmp
stos
fiaddl
sti
or
sub
insb
mov
or
adc
xchg
xor
or
and
jecxz
aam
lret
das
or
xchg
fnsave
aad
xchg
enter
cmp
enter
pop
and
sarl
mov
daa
test
gs
pop
and
lahf
data16
int3
mov
adc
pop
nop
xchg
ficoms
inc
dec
dec
jb
hlt
dec
sbb
dec
shlb
push
test
push
test
sub
sbb
mov
push
sbb
scas
push
cs
add
inc
scas
mov
xor
call
iret
or
lds
push
shrl
or
das
loop
lcall
jnp
add
rcr
pop
scas
adc
rcll
dec
into
orb
pop
insb
pop
and
imul
sarb
movsl
scas
insl
lods
jne
inc
dec
mov
sbb
inc
fsubrs
fwait
in
int3
mov
and
or
lock
adc
out
in
push
xchg
daa
lcall
test
es
rorb
punpckhwd
dec
mov
xchg
sbb
jle
mov
data16
push
xor
cmc
mov
or
stos
sbb
push
push
das
mov
sarl
cmp
cmpsl
daa
ljmp
lea
cmp
xchg
mull
sbb
pop
inc
xchg
std
adc
xor
sub
aam
or
cmp
jl
stos
mov
push
xchg
test
out
cmp
mov
cmc
pusha
bound
scas
popf
decl
popa
inc
movsl
or
mov
adc
jb
inc
inc
xchg
fnstsw
and
dec
xchg
cmp
pop
test
and
addr16
pop
xor
push
loop
or
and
mov
adc
jne
imul
jno
cmpsb
mov
or
push
ja
push
sbb
cmp
repnz
ret
sbbl
mov
sbb
cmc
ja
xchg
pop
mov
jmp
xchg
cmp
sub
sub
pop
clc
sbbl
arpl
stc
dec
cs
iret
mov
xchg
sub
sbb
je
ficoml
jmp
mov
cmp
clc
loop
fdivrs
inc
xor
fsubs
jne
sub
xchg
nop
pop
or
mov
sbb
mov
inc
fs
fstpl
out
or
adc
loop
xchg
mov
push
mov
std
repz
mov
movsl
js
mov
mov
push
cltd
jge
loop
repz
pop
pop
loopne
mov
xchg
dec
pop
out
pop
pop
stos
lcall
lods
push
pop
pop
push
push
push
movsb
jb
inc
push
leave
sub
xchg
sarb
adc
xchg
and
stc
movsb
adc
cmp
outsl
jmp
pop
or
inc
scas
pop
jnp
sbb
fildll
sub
xchg
out
push
and
sub
cmpsl
in
fucomp
dec
push
push
int
pushf
clc
repz
cmp
or
loop
aad
push
cmc
pop
addl
sub
dec
mov
push
pop
sub
sbb
adcl
or
adc
popf
test
lcall
sub
pop
shlb
repz
jne
xchg
xchg
mov
cmc
and
push
ja
mov
mov
push
mov
fwait
add
std
ss
push
in
inc
lods
jns
leave
add
stos
test
je
movsl
push
mov
dec
test
std
repz
push
and
mov
test
and
mov
je
mov
daa
xchg
jl
into
push
fstl
stos
mulb
bound
or
testl
loop
jb
jne
xor
or
and
iret
mov
and
int
cmc
push
ljmp
in
pusha
ret
add
jecxz
stos
inc
adc
test
lock
cmp
imul
movsb
xchg
cli
xor
enter
sub
addb
jbe
ret
fs
xor
jbe
in
rcl
lds
aaa
mov
cltd
mov
ss
mov
mov
ljmp
insb
mov
sbbb
cmpb
fwait
sbb
test
inc
fs
es
repnz
lock
push
mov
ds
xchg
loope
dec
push
jmp
xor
js
mov
mov
and
sbb
pop
repz
mov
cmp
pop
cmpsl
lods
fisttpl
cli
push
icebp
push
and
test
es
mov
pop
mov
jl
bound
dec
mull
xor
pop
cmp
mov
shrl
ret
fildll
gs
push
xchg
out
loop
and
insb
es
sub
add
dec
xchg
aad
adc
jl
mov
notb
fldcw
nop
fucom
inc
in
push
jb
in
in
xchg
out
sub
or
mov
addl
dec
and
push
mov
push
call
xor
mov
insl
pop
sub
out
jl
jge
adc
jle
or
sahf
sub
push
popf
cmp
dec
dec
mov
fadds
nop
ret
push
xchg
dec
mov
addr16
sub
inc
les
adc
data16
dec
sub
ret
inc
mov
mov
pop
dec
add
adc
sub
lret
adc
test
enter
imul
push
js
rorl
ds
gs
das
mov
xchg
push
push
jnp
push
lahf
cmc
sub
outsl
popf
mov
mov
fs
add
xor
in
cmp
push
pop
in
dec
jg
adc
xchg
sub
pop
mov
adc
jle
inc
dec
cwtl
mov
fs
fnstenv
push
push
dec
std
mov
rorb
mov
sbbb
cltd
iret
imul
inc
rcrl
sbb
pop
adc
gs
jecxz
test
inc
cmp
xchg
pop
fs
and
les
pop
fcomps
adc
mov
aad
icebp
pop
les
adc
mov
mov
add
loop,pn
sub
pop
mov
push
jge
push
xchg
mov
dec
jne
das
push
fwait
push
push
rolb
jl
or
jp
jnp
imull
mov
mov
int3
mov
popf
xor
jg
fldenv
rorb
dec
xor
pop
stos
xchg
pop
shrb
inc
testl
adc
cld
aaa
int
or
cmpsb
fs
loop
or
xor
and
xchg
in
sub
ss
push
adc
xchg
sub
or
adc
test
out
xor
shrb
mov
xchg
mov
lcall
pushf
les
dec
ja
add
stos
ja
mov
xchg
js
daa
dec
push
in
je
push
cmp
mov
jge
and
testb
adc
in
mov
iret
loope
xchg
std
xlat
pop
pusha
rcrb
dec
or
jns
scas
or
xchg
sti
jo
lock
push
rcrb
and
popw
fidivrl
pop
mov
add
jg
shlb
push
shlb
pushf
mov
add
pop
icebp
cbtw
and
xorl
cmp
dec
jns
mov
les
mov
add
imul
or
xor
std
pop
push
mov
cltd
fistpll
pop
jbe
fsubl
xor
out
cvttps2pi
std
cmp
dec
sub
mov
xchg
cwtl
xlat
enter
hlt
stos
movsb
cmp
push
mov
in
mov
popa
jg
and
mov
scas
ja
test
push
sbbl
add
data16
cmp
outsb
enter
icebp
pusha
cmpsl
mov
sub
pushl
aam
jp
shlb
push
push
cld
xor
jmp
lret
cli
ss
and
dec
arpl
adc
out
and
mov
in
out
or
pop
push
push
outsb
mov
sbb
or
pop
push
pop
adc
and
popa
je
lahf
lcall
or
idivl
rcrb
jmp
bound
pop
in
lret
mov
jmp
mov
lock
aaa
clc
enter
arpl
loop
jae
daa
lea
inc
je
or
adc
push
pop
outsl
push
push
cmp
inc
adc
int
and
mov
sbb
pop
lods
ds
or
push
pop
add
xor
imul
dec
out
leave
adc
add
cmp
mov
push
mov
cmc
pop
jmp
shr
xor
jbe
xchg
fcom
out
and
xchg
cmp
fistps
cmp
add
cli
out
or
xor
addl
cmp
adc
inc
enter
pop
sub
mov
clc
inc
mov
push
xlat
lds
popa
jmp
out
add
es
xor
rol
xor
push
fidivs
stos
mov
aam
icebp
sar
imul
sahf
or
pushf
inc
out
pop
and
fistl
aaa
xor
sbb
imul
or
mov
dec
adc
adc
sub
movsl
push
lods
jno
push
lret
rcrb
out
lea
or
push
scas
or
mov
xor
incl
out
flds
idivb
cmp
sub
pop
fcoml
fdivr
sti
addl
push
in
sbb
loopne
shr
psrlq
jge
ficomps
inc
xchg
or
rcll
scas
test
call
cmp
jbe
stc
insl
mov
mov
nop
into
mov
mov
faddl
add
mov
xor
add
dec
xchg
filds
xchg
stos
sbb
jbe
outsb
call
sahf
add
push
sbbb
mov
mov
push
sub
push
ret
jp
add
push
adc
scas
mov
pop
push
sbb
leave
cltd
and
cmp
stc
jae
movl
repnz
sub
stos
lods
roll
test
into
cmpsb
pop
int3
pop
sbb
hlt
pop
call
pop
js
xchg
ds
outsb
lds
into
idivb
jbe
sbbb
cmpsb
add
cs
push
dec
dec
or
rcr
dec
faddl
mov
dec
fcomi
and
sbb
mov
lods
adc
pop
push
icebp
inc
push
lahf
xchg
jmp
fcoms
cs
push
insb
int
mov
sub
je
test
adcb
lods
fisubrl
and
jmp
inc
xor
dec
or
cmpsb
dec
jp
push
imul
test
jge
and
ja
orl
arpl
imul
in
inc
cwtl
idivl
das
mov
in
inc
adc
dec
aaa
xchg
push
movl
add
arpl
pop
inc
cmp
repz
pushl
call
pop
push
cmpsb
jecxz
popa
push
and
test
popf
cmpsb
jmp
sbb
mov
and
add
xor
adc
cld
jl
sub
lods
popa
sbb
sub
inc
sahf
repz
dec
insb
mov
inc
cld
mov
fsubs
out
rclb
xor
mov
xor
stos
fdivr
and
sar
mov
out
cltd
popl
call
int
xor
adc
ret
es
lock
cmp
or
fwait
cs
push
movsb
mov
pop
cwtl
dec
mov
jo
mov
cmp
scas
and
xor
pop
and
enter
fisttpl
pop
ds
icebp
mov
aas
mov
dec
lea
outsb
cmp
ret
shlb
or
jmp
jbe
pop
jp
aad
xor
lahf
xor
iret
mov
adc
ficompl
lods
inc
scas
pop
shll
je
mov
mov
cmc
sbb
fdivs
sub
jle
test
add
rcrl
push
insb
js
add
push
sub
in
int3
pushl
ret
cmpsb
pop
add
frstor
mov
mov
hlt
mov
jecxz
enter
repnz
out
xchg
sarl
dec
sbb
adc
repz
cmp
sbb
dec
stc
daa
les
add
sbb
mov
fisubs
aam
jecxz
stos
mov
in
sbb
add
push
sub
int
imul
ret
mov
pushf
mov
std
mov
ja
adc
push
sbb
inc
lock
lret
loopne
mov
lds
or
fldcw
enter
icebp
rcll
movsl
xchg
and
push
xchg
jmp
push
fucomp
iret
xor
mov
mov
mov
rolb
popl
cli
adc
into
cmpb
dec
insb
adc
ffree
popl
push
in
jmp
or
aam
pop
test
dec
stos
je
mov
jle
fcoml
nop
sub
popf
dec
pop
adcb
jl
pushf
jns
andl
xorb
jb
jecxz
fsubr
test
lret
push
pop
sub
fldcw
scas
inc
or
pop
jmp
std
stos
fldl
shll
cmp
jns
xor
adc
dec
or
xor
repz
jns
add
das
iret
out
lret
push
cmp
fwait
dec
fcom
jge
cld
mov
mov
jo
mov
jge
cmp
popa
jp
jle
adc
cmpsl
push
fildll
cmc
enter
notb
mov
clc
sub
dec
pop
insl
test
and
stos
insl
xor
pusha
mov
cmp
mov
mov
out
clc
xchg
mov
inc
jne
mov
test
lret
test
sbb
jo
sarb
dec
add
and
dec
adc
sub
loopne
mov
addb
adc
andb
cmp
mov
fsubs
shll
das
pop
mov
push
xor
ffreep
inc
add
daa
data16
sbb
sbb
xchg
or
loopne
and
rcrl
adc
ficoml
sub
pop
or
js
sbb
jge
adc
hlt
ds
icebp
das
and
mov
popa
lea
sbbl
lods
in
stos
aad
xlat
je
mov
cmp
test
adc
and
jne
xlat
arpl
cld
push
ljmp
mov
rcr
sbbb
pop
sti
xchg
cmp
sub
mov
and
sub
pop
pop
cld
sub
imul
and
andl
frstor
sub
xchg
outsl
and
mov
sti
fcomi
sub
test
push
xchg
and
sbb
nop
scas
enter
and
dec
scas
dec
les
add
imul
dec
int
icebp
das
dec
test
outsl
mov
int
jae
jns
or
sbb
xchg
pop
out
add
lods
roll
jno
lea
push
outsb
iret
aas
movl
imull
or
jno
add
in
les
dec
adc
mov
xchg
jecxz
loope
add
mov
mov
lret
xchg
daa
outsb
sub
fimuls
outsl
test
jl
push
jno
mov
jmpw
sbb
cmp
gs
insb
xchg
cld
ret
inc
sti
lock
mov
lret
lret
das
mov
and
jb
imul
sbb
movb
or
inc
dec
mov
push
jns
das
or
push
mov
xor
out
pop
jecxz
lcall
sub
std
sub
jl
push
in
adc
paddusw
ja
and
je
nop
push
lahf
sub
push
jmp
dec
inc
push
aaa
jge
loopne
mov
shlb
mov
cli
ror
and
out
out
mov
mov
cwtl
pop
jno
mov
out
jne
mov
mov
aam
adc
add
and
push
cwtl
xchg
adc
jnp
imul
pop
sti
loop
lea
cmp
sbb
icebp
int3
leave
sahf
xlat
outsb
adc
adc
mov
add
cltd
fsub
cmp
iret
ss
adc
lret
pushf
test
out
movsb
inc
jl
pop
daa
cmpsl
mov
xlat
nop
or
imul
mov
jns
push
push
aad
and
jg
in
sbb
and
push
nop
cld
adcl
add
lods
or
leave
mov
and
or
enter
stc
icebp
xchg
pop
and
aam
xchg
mov
sbb
jb
bound
std
jmp
pop
and
nop
lcall
or
ret
inc
adc
sub
xor
adc
rcrb
or
negb
xlat
mov
cwtl
dec
rcll
ja
ret
sbb
dec
outsb
loope
or
pop
xchg
inc
and
add
test
aaa
push
into
clc
jg
les
mov
push
jne
xor
dec
jne
iret
inc
fmuls
sbb
xchg
cmpsl
int3
pop
popf
sahf
xchg
and
add
movsb
mov
xor
inc
xchg
sbb
in
arpl
jne
and
pop
jge
jp
outsb
subl
fidivs
insb
test
ret
add
sbb
femms
push
xchg
xchg
or
cmp
sbb
jo
jb
mov
neg
iret
loopne
pop
or
mov
les
or
or
movsb
xchg
inc
mov
hlt
inc
dec
push
dec
fstpl
jae
xchg
jbe
cmp
push
inc
aam
or
add
xchg
inc
push
icebp
cmpsl
nop
pushl
jecxz
xchg
push
rolb
enter
xor
mov
mov
movsl
mov
jmp
cwtl
cmpsb
out
adc
mov
ja
imul
out
cmc
mov
out
fcomi
jo
mov
xchg
fisubl
pop
mov
and
mov
shlb
add
bound
and
inc
xor
jecxz
and
shrb
push
insl
pop
xchg
mov
xor
pop
data16
sub
movsb
cmp
movsb
shrl
and
add
mov
rcrb
subl
dec
mov
test
pushf
test
pop
hlt
xlat
dec
idivb
lret
jb
cmp
sub
int
mov
scas
add
jnp
jb
outsl
push
test
jo
cltd
sbb
stos
lret
mov
lahf
lods
das
dec
call
cltd
mov
mov
sub
or
pop
inc
enter
dec
icebp
jae
out
or
push
shll
inc
inc
sti
faddl
lahf
out
push
imul
pop
loop
jno
push
xchg
adc
jb
lahf
das
hlt
aaa
and
lcall
cmp
cmp
les
jne
sub
xchg
cmp
mov
mov
mov
lret
int3
add
das
push
sbb
pusha
stc
sub
pop
xchg
ljmp
sbb
push
mov
adc
mov
sub
pop
sub
aaa
pop
ljmp
sub
dec
das
in
out
mov
cmp
sub
insb
cmp
mov
push
xchg
call
xor
inc
jmp
mov
jg
fstp
sub
cmpsl
or
outsb
lods
xchg
popa
test
cwtl
and
sub
and
out
cmc
mov
fmuls
and
lret
and
das
pusha
cmp
mov
loopne
sti
pop
push
cmpsl
pop
xor
or
mov
mov
sbb
inc
sub
ljmp
and
jns
aas
lcall
add
lods
mov
mov
pop
ja
sub
mov
mov
inc
mov
jno
dec
jl
push
addb
cmp
call
xchg
dec
ret
push
mov
andl
test
ret
mov
sbb
cltd
jns
imul
sub
loop
mov
roll
outsb
mov
pop
mov
daa
and
push
ret
cld
cmpsl
sub
jmp
in
sub
pop
in
mov
leave
and
mov
cmp
mov
int3
xchg
sarb
ja
fnstcw
push
shrl
out
mov
xor
xchg
repnz
xor
andb
lret
xchg
mov
lret
xchg
xchg
icebp
mov
xor
mov
les
aam
icebp
push
iret
sbb
fs
pop
icebp
divl
out
add
sbb
je
cld
je
sub
popa
enter
sub
fdivl
xchg
in
scas
fisttps
mov
and
sarl
adc
inc
fistps
inc
insl
movsb
lret
fs
add
sbb
or
scas
sti
mov
push
inc
js
lods
fs
adc
fmull
orb
xchg
xchg
mov
add
andl
cld
int
in
and
sti
cli
packssdw
mov
pop
movaps
inc
sti
push
push
sub
rcrl
push
mov
cmp
xlat
mov
jp
fsub
add
push
xor
cmp
stc
inc
pop
call
jbe
xchg
idivl
jg
xchg
cwtl
sub
xchg
rcrl
sbb
or
adc
xor
xchg
into
loop
movsl
or
xor
stos
adc
dec
jno
sub
test
gs
sbb
jbe
leave
sub
xchg
mov
cmp
push
fimuls
les
in
jb
lods
dec
dec
push
int
lcall
sbb
mov
add
ret
push
aam
jl
popl
push
jnp
cmp
mov
fcompl
popa
dec
lods
pop
and
test
jae
rolb
inc
mov
test
fwait
inc
std
gs
shl
dec
push
adc
sub
mov
lret
mov
jnp
ficomps
ja
pop
aaa
cmp
inc
adc
imul
int
cltd
adc
testb
sbb
scas
ss
subl
aas
out
pop
mov
pushf
fcomip
data16
sbb
lods
adc
insb
popf
jno
lea
lret
data16
xchg
repz
mov
aaa
pop
jge
mov
fs
divl
xor
mov
in
or
push
les
or
pop
std
mov
push
cmpsl
cwtl
mov
adc
mov
add
xchg
repnz
xchg
xchg
les
call
lods
subl
jle
ja
or
adc
into
mov
or
pushf
loopne
add
clc
adc
and
dec
cmpsb
int3
xor
jp
orb
mov
jo
dec
inc
in
aam
std
xor
je
xchg
aam
je
shll
aad
jp
testl
test
sbb
sbb
and
test
popl
lock
cwtl
push
out
jp
cmp
inc
lock
into
lahf
fdivrl
loopne
icebp
adc
push
dec
fwait
sti
lock
in
sarb
and
ret
jg
ret
shlb
ds
dec
and
push
loope
mov
push
pop
xor
shr
sub
les
add
pop
lret
fisttpl
cs
jl
out
js
mov
push
inc
mov
ss
fsts
stos
dec
mov
shrb
jbe
idiv
sub
lea
or
mov
shll
int3
shlb
dec
cmp
data16
cmpl
xchg
xchg
testb
mov
arpl
jns
mov
push
jno
inc
xlat
pusha
sbb
mov
mov
fs
jb
jg
outsb
addb
scas
or
sti
xor
adc
shll
mov
xchg
xor
mov
lret
or
and
sti
adc
xchg
out
mov
lock
sbb
inc
pop
std
enter
inc
ret
mov
adc
lods
or
ljmp
xor
xchg
lahf
shl
jecxz
bnd
push
xlat
jge
push
sub
std
sarb
lods
arpl
or
push
div
stos
jecxz
mov
xor
mov
mov
js
or
xor
ss
sahf
inc
adc
dec
test
jmp
mov
inc
hlt
icebp
cmpsl
jnp
jns
or
cli
pop
sbb
div
les
push
setb
pop
mov
dec
insb
jg
out
xor
lock
adc
sub
lods
inc
mov
incl
xor
add
inc
gs
lret
call
add
cmp
push
mov
dec
ja
rorb
add
addr16
mov
sti
jo
rcrb
repnz
cs
hlt
test
repz
aas
cmpsb
push
loopne
movsl
sbb
sub
lods
gs
test
inc
mov
pop
ljmp
sub
mov
data16
or
or
push
xchg
push
push
pcmpeqb
dec
das
lcall
adc
stc
ds
popa
pop
repnz
cli
mov
repz
lds
jecxz
loopne
sub
xchg
pusha
or
jb
or
out
mov
and
mov
pop
lret
sub
pusha
cmp
xor
mov
aam
add
dec
mov
repz
and
into
cs
idivb
sbb
mov
andb
popf
cmp
loopne
mov
pop
mov
or
jl
loope
ficompl
push
aaa
or
sarb
push
cmpsb
xor
fwait
adc
xchg
inc
jnp
adc
cld
cmc
cmp
push
dec
push
mov
add
fs
icebp
xchg
lods
je
mull
push
stos
addl
mov
movsb
push
fadd
add
dec
insl
jge
out
xchg
push
fs
mov
inc
pushf
js
ds
outsb
fildll
aad
jmp
push
pop
js
fistl
xchg
mov
in
mov
mov
popa
xor
rcl
jecxz
jp
pop
shl
into
fnstsw
stos
setg
jbe
xor
test
cli
loope
cmp
sub
test
jnp
jmp
jl
int
and
js
push
jno
cmpsl
mov
pop
inc
sub
pop
lds
je
test
pop
sub
or
sbb
mov
ljmp
xor
mov
stos
sub
shlb
pop
in
push
movsl
jle
or
mov
xchg
pop
push
insl
pop
and
adc
ret
add
repz
jp
iret
aad
mov
push
push
mov
cli
repnz
fstpl
mov
jg
push
cli
jge
push
out
inc
mov
dec
pop
xor
mov
mov
jl
mov
sahf
mov
fildl
fadd
mov
lahf
xor
sbb
push
cltd
arpl
out
sub
and
and
loope
repz
and
push
fs
ja
cmpsb
cmpb
and
repnz
ds
insl
cmc
nop
sub
mov
fcomps
mov
mov
lock
sbb
sbb
jne
daa
mov
inc
pop
jp
iret
mov
test
aas
popa
jmp
repnz
cmp
js
jb
jns
xorb
pop
and
jecxz
xor
es
sbb
idivb
das
inc
inc
leave
mov
insb
adc
outsb
fadds
cltd
stos
jno
sbb
in
stos
cs
cmp
ja
xor
insl
push
popa
fwait
xor
scas
pop
decb
xchg
outsb
lahf
or
cmpl
dec
fistl
sbb
sti
ds
dec
pop
cmc
arpl
cmc
or
mov
inc
inc
inc
and
lahf
cmovg
sbb
ja
sub
std
in
sub
add
js
sbb
ret
mov
or
sub
dec
test
js
ja
push
pop
out
cmp
js
daa
in
xor
popa
adc
mov
sti
or
je
scas
inc
fists
jne
ja
or
xor
fs
call
mov
inc
mov
sub
sbb
push
imul
std
xlat
popa
mov
movaps
mov
dec
or
xchg
adc
push
lods
dec
daa
push
in
cmp
mov
ss
test
in
push
shrb
int
psubw
jle
mov
ret
cmp
leave
adc
daa
outsl
push
arpl
test
loope
test
cmc
repz
mov
add
cwtl
add
loop
fldl
incb
pusha
inc
dec
test
mov
mov
jne
xchg
lcall
inc
out
popa
in
sub
aad
notl
or
xchg
sahf
test
and
popf
orl
mov
notb
inc
mov
cld
popf
add
popf
pop
push
add
pop
popf
jge
iret
xlat
mov
cltd
loope
mov
push
insb
or
lcall
mov
or
ret
das
loopne
dec
inc
mov
mov
scas
ds
aam
icebp
jno
pop
sbbl
lds
adc
inc
and
inc
mov
insb
sub
push
insb
cmp
inc
mov
sub
cmp
sub
sbb
aaa
ljmp
mov
mov
rorb
sbb
xchg
push
cmpsb
xor
movsl
outsb
mov
mov
push
cmp
xor
loop
adc
mov
stos
cmpsb
mov
addl
pusha
aad
rclb
mov
js
cld
mov
rorb
fistpll
fsubs
lcall
xchg
mov
xchg
or
jmp
fldenv
and
test
cmp
mov
fs
sbb
sti
mov
fisubrl
outsl
push
add
pop
cmp
fidivs
push
pop
mov
push
add
dec
cmc
dec
or
mov
scas
jne
fcoms
cmp
add
mov
mov
cs
xchg
mov
pop
dec
pop
mov
or
les
and
insb
inc
out
test
rcrl
faddl
add
adc
and
pop
xchg
or
adc
or
pop
fidivs
cmc
je
jge
ljmp
pop
js
fstpt
mov
push
jle
imulb
push
pusha
fcomps
and
out
xchg
ficoml
imul
pushf
xchg
jg
inc
push
icebp
cmc
sub
imul
cmp
dec
jl
mov
cltd
jae
sbb
jp
xor
shll
add
filds
je
mov
adc
movsl
mov
add
iret
or
jp
clc
pop
les
pop
lock
jne
mov
inc
scas
sbb
or
push
mov
or
jae
adc
and
push
mov
jno
push
rcrb
mov
in
sahf
cmp
push
test
xchg
leave
xchg
push
popa
xorl
cmpsl
daa
mov
loopne
test
aad
sti
mov
push
loop
cmp
icebp
lods
jae
jmp
das
mov
jecxz
jbe
and
stos
or
movsb
mov
mov
lret
or
into
popa
mov
jno
add
aam
push
jns
xor
sbb
out
lahf
iret
dec
inc
stc
movsb
push
scas
movsl
bound
leave
mov
xchg
push
cmp
hlt
cld
mov
cmc
nop
and
clc
mov
add
mov
pop
xchg
ja
aaa
mov
push
shll
and
dec
jmp
outsb
push
xchg
inc
jle
adc
cs
jp
cmp
push
loopne
outsb
outsb
mov
cmp
ficomps
push
jge
xchg
push
inc
lock
leave
push
inc
scas
std
lods
xchg
pop
sti
fadd
pusha
fiadds
mov
pop
fnclex
je
jmp
dec
cwtl
pop
pop
cmpl
cs
insb
cmp
mov
adc
mov
jne
adc
insb
enter
das
into
sbbl
out
jne
adc
loopne
jl
fidivs
mov
stos
fwait
jge
mov
pop
sbb
idivl
mov
lret
or
mov
push
iret
sub
in
cmpsl
mov
roll
jb
repnz
int3
es
imul
in
je
popf
aas
jmp
scas
lods
mov
mov
in
clc
push
or
data16
cwtl
sub
push
sbb
xchg
inc
js
xchg
xchg
insb
sbb
lods
aam
jae
mov
mov
cmp
mov
movsb
scas
or
lods
xchg
sbb
rcll
and
cmc
mov
icebp
int3
gs
les
mov
jbe
movsl
imul
test
pop
movsl
lods
int3
cltd
pop
adc
sub
pop
add
or
jno
shl
mov
add
mov
sub
jb
mov
aad
xchg
test
movsl
xor
xchg
dec
xchg
cwtl
cwtl
pmovmskb
test
cmp
hlt
leave
mov
sub
adc
or
push
pop
fwait
xlat
mov
divb
insl
scas
mov
xor
hlt
in
or
out
jne
sbb
lds
mov
fadds
int
data16
xchg
call
mov
dec
lcall
mov
sbb
rorl
mov
inc
mov
cwtl
push
mov
cmc
pop
arpl
jmp
pop
mov
sti
test
mov
aas
out
xchg
call
pushf
jae
imul
push
xchg
mov
daa
inc
loop
dec
loope
and
cwtl
hlt
xchg
sbb
mul
sub
lahf
cmpsb
mov
mov
xchg
ss
jo
mov
rcrb
pop
repnz
adc
cltd
fisttps
cmp
jmp
verw
cmc
adc
pop
hlt
jo
fs
or
test
mov
nop
adc
shr
dec
mov
rcl
andb
sub
mov
jp
sub
and
cmovo
nop
push
adc
xor
xor
jp
imul
cmc
mov
test
cmp
icebp
lods
jp
push
test
int
sub
shlb
inc
aam
mov
leave
cmc
ret
mov
sub
dec
pop
les
cwtl
pop
subl
js
leave
jb
mov
and
inc
inc
test
int3
xor
xorb
pop
lcall
test
or
in
jmp
pop
dec
push
gs
cmp
lock
les
dec
imul
test
pop
fs
mov
cld
adc
mov
aaa
lock
jbe
xor
mov
shr
cld
sub
inc
push
fs
popa
and
aaa
adc
lcall
sbb
cltd
cmc
jo
mov
cmp
mov
fistps
data16
mov
outsl
negl
stc
pop
jp
jnp
and
jns
mov
pop
addl
pop
lds
lret
xor
negb
pop
repnz
pop
daa
sbb
pop
ss
push
pcmpgtw
inc
popa
ss
or
or
jnp
pop
xor
rcrl
ror
lahf
mov
sbb
das
enter
aam
sbb
sbb
nop
cld
push
mov
pop
imul
pusha
push
adc
add
xchg
or
xchg
cmpsb
mov
lods
sbb
ja
sysenter
fimuls
out
lcall
mov
xor
cmpsl
daa
and
loope
pop
stos
cs
and
stos
cmp
xchg
cmp
pop
gs
popa
test
add
mov
xchg
jl
jecxz
fndisi(8087
mov
popa
ror
sbb
inc
jo
jb
sbb
mov
call
sub
and
sbb
and
imul
jns
lahf
adc
scas
orl
outsb
and
inc
ret
jp
and
xchg
hlt
or
pop
xchg
push
ss
and
fdivrs
add
fistpl
cmp
test
xor
jo
pop
ja
fildll
out
or
icebp
dec
lcall
dec
mov
xchg
sahf
jbe
lahf
scas
jmp
mov
pop
pop
sub
loopne
out
dec
lret
iret
and
xor
test
mov
adc
inc
test
jae
pop
and
add
adc
lods
in
xchg
push
inc
ret
sub
mov
jp,pt
add
jnp,pt
shll
pop
call
test
and
jb
pop
pop
cmpsl
mov
push
xchg
popa
call
sbb
icebp
lea
out
cmc
pop
dec
add
fucomip
hlt
das
or
mov
cld
cmc
mov
push
enter
mov
data16
pop
cli
xor
xor
movl
mov
lds
fwait
stc
outsb
ror
xor
call
popa
bound
clc
jo
xchg
iret
nop
gs
cmc
push
adc
or
sahf
or
add
adc
inc
shll
dec
mov
pop
orb
add
popa
inc
out
and
arpl
sarl
sub
aad
pop
inc
mov
inc
decb
les
adc
data16
mov
fcompl
push
xchg
inc
cmp
rclb
cmp
sti
ja
cli
dec
mov
or
roll
cs
paddsw
jl
mov
mov
out
push
in
pop
push
es
push
inc
add
into
aam
sub
xchg
imul
dec
push
jle
pop
ret
insl
jo
std
test
jp
pop
arpl
push
repz
adc
mov
test
std
xor
and
add
out
jbe
jbe
gs
pushf
movsb
mov
adc
jmp
push
ljmp
test
xor
adc
scas
std
fcmovnbe
xchg
sub
cmpsb
out
jne
push
mov
adc
mov
aad
rcl
fcoms
cmpsb
insl
cmc
cmpsl
loopne
cmovle
mov
jecxz
pop
push
das
add
or
aas
cmc
add
insb
xchg
data16
xor
fwait
xor
ja
imul
xor
cmp
lock
rcl
out
pop
sbb
sub
je
lock
adc
and
imul
inc
adc
inc
adc
pusha
mov
adc
in
je
add
and
adc
std
mov
jb
adc
out
or
das
ljmp
push
ss
xor
hlt
stc
adc
sbb
lods
push
push
dec
inc
call
mov
dec
ret
adc
jmp
mulb
movsb
jl
aas
dec
arpl
sub
mov
xchg
test
std
or
test
cmp
cmp
or
or
pop
dec
insb
subb
sub
pop
xchg
das
jo
repz
dec
shll
rclb
cs
pop
pop
and
gs
xchg
enter
sbb
add
jmp
push
hlt
test
sbb
vpextrw
jae
rcrb
scas
les
fsub
and
test
pop
push
and
or
dec
pop
sbb
sub
xchg
int3
pop
jl
lods
icebp
jae
in
xchg
mov
outsb
mov
xlat
or
xchg
pop
je
cwtl
pusha
jo
pop
jecxz
nop
push
dec
push
shrb
adc
sbb
les
mov
xor
push
lock
or
shrb
mov
sbb
fcmovnb
mov
inc
ljmp
arpl
pop
mov
or
and
int
sti
mov
aaa
jl
sub
ja
in
mov
and
push
outsb
out
divl
push
jmp
mov
repz
sbb
push
push
pop
ljmp
cmp
loop
fisttps
xor
jne
jle
pcmpeqb
popf
fmuls
xor
push
out
in
xchg
push
cltd
adc
lret
scas
sbb
dec
cmp
and
ljmp
and
cs
fisttpl
xor
lcall
popf
xor
push
or
sbb
dec
inc
adc
lds
mov
test
inc
xchg
xchg
xor
pmaxsw
lock
and
xchg
lock
mov
cmpsl
push
xor
inc
pop
dec
push
cli
pushf
int3
and
sbb
or
jnp
mov
scas
mov
jmp
sahf
pop
mov
mov
in
add
pusha
xor
addr16
dec
mov
iret
in
cwtl
bound
or
loopne
jnp
jle
dec
data16
out
xchg
jae
mov
inc
jg
ror
pop
sub
ljmp
lcall
out
jmp
mov
or
lahf
xor
jge
inc
sbb
add
mov
and
xchg
adc
cwtl
enter
loope
es
sub
pushf
subb
gs
push
stos
ds
pushf
and
push
test
fsubrl
aam
sub
sti
jno
ret
out
rorl
arpl
and
lret
mov
clc
mov
lret
inc
pop
aaa
fwait
sub
xchg
or
jge
aam
fidivl
push
add
insb
adc
xchg
cwtl
jne
push
pop
scas
lea
push
addr16
jl
mov
pop
pop
adc
xor
out
loope
xor
pop
cmpsl
xor
push
jl
ja
push
stc
popf
nop
ljmp
cmp
mov
mov
sub
and
jbe
push
sbb
in
mov
pop
add
int
es
xor
xchg
cmp
xchg
movsb
sub
mov
mov
and
cmpsl
cmp
mov
cld
sub
leave
sbb
mov
out
aas
push
mov
movsb
nop
push
mov
xchg
dec
dec
and
pop
and
lock
sbb
jne
into
sar
adc
stos
and
divl
and
xchg
xchg
fistps
aaa
movsl
inc
rcrl
lock
mov
rcll
pushl
adc
jo
dec
mov
aas
push
pop
fsubl
mov
stc
movsb
push
mov
xchg
sbb
dec
rorl
jns
fcomi
xor
pop
sbb
test
cmp
test
or
adc
ss
mov
add
lret
loope
das
por
pushf
dec
push
aas
cmpsl
cmpsl
pop
mov
sub
mov
or
sub
xchg
paddb
jg
scas
xchg
in
xchg
sbb
lret
add
push
pushf
pop
movsl
add
scas
fstl
mov
push
stc
insl
iret
jg
in
jb
dec
mov
jne
lds
stos
hlt
outsl
in
pop
xchg
push
in
adc
rcr
insb
gs
aad
das
notb
mov
sbbb
and
shrb
js
sbb
xor
mov
sti
stos
add
jbe
sbb
xchg
mov
mov
adc
ljmp
mov
push
mov
push
lret
sub
lods
push
int3
pop
cmpsb
sbb
mov
or
aaa
xchg
fldt
mov
stos
shll
jno
xchg
push
sub
mov
cwtl
inc
in
movsl
outsb
jnp
cmpsl
clc
loop
rcrb
add
mov
out
daa
mull
fistps
loopne
ficomps
fldcw
das
push
lea
xchg
and
dec
fdivp
int3
mov
cli
out
into
lock
mov
jae
shll
lahf
inc
push
imul
jmp
out
icebp
stos
push
mov
lahf
iret
mov
int
fistps
in
jmp
jno
out
test
ds
add
aaa
btc
pusha
pop
fiaddl
dec
aad
xor
mov
into
loop
fs
shl
test
add
and
mov
out
ljmp
cmp
sbb
pop
scas
data16
mov
pop
outsl
push
imul
cmc
sbb
or
sub
inc
mov
push
jmp
sbb
and
inc
sbb
inc
sub
xor
xchg
ret
sarb
add
or
pop
mov
adc
adc
sbb
push
loope
push
mov
imul
fstpt
pop
insl
popa
mov
dec
mov
sub
xor
fstps
fsubl
xchg
xlat
insl
and
or
pop
push
jbe
aad
inc
adc
in
out
xchg
mov
fsub
xchg
faddl
inc
mov
aaa
mov
loope
sub
std
js
test
xchg
std
int
xor
add
dec
cmovp
test
mov
lods
clc
sti
xor
fcoms
jg
cs
lock
push
lock
jbe
jg
cmp
notb
cmp
cmpb
shr
mov
mov
fadds
test
imul
sbb
roll
mov
insl
js
push
pushf
mov
loopne
cmc
lods
or
and
mov
sbb
mov
or
lods
mov
test
mov
dec
call
stos
int3
lcall
lret
fsubrs
lea
or
sub
pop
xchg
push
mov
fcmovne
imul
nop
lds
push
in
aam
ss
ret
test
pop
mov
test
mov
jecxz
cmpl
mov
mov
mov
inc
jecxz
lret
mov
push
pushf
lahf
icebp
or
cmp
repz
push
jp
sbb
enter
in
insl
xchg
and
xchg
jl
into
jl
jbe
test
ljmp
and
sti
add
cld
xor
mov
inc
das
divl
xor
push
jbe
add
xor
xor
inc
mov
imul
sbb
out
inc
aad
test
mov
fsubs
xchg
mov
cmp
cmp
jp
imul
ljmp
inc
stos
push
icebp
iret
gs
adc
pusha
cltd
bswap
mov
int
or
call
jp
xor
adc
mov
add
push
add
inc
adc
mov
cli
nop
js
aaa
or
rorb
mov
popf
cmp
mov
inc
or
mov
iret
xor
xchg
repz
jo
or
and
ja
fidivl
pop
xchg
add
xor
dec
shl
xchg
fidivs
jnp
jne
das
push
adc
push
sub
int3
ljmp
addb
mov
push
or
ss
sbb
js
xor
push
lods
push
add
jge
pop
push
loopne
popa
sbb
shlb
pop
in
mov
int3
test
xor
lods
mov
xor
mov
jmp
es
pop
pop
sbb
dec
xchg
imul
lcall
xor
mov
inc
sub
aam
aam
ret
lds
cwtl
jmp
mov
and
adc
lds
lahf
out
inc
jg
int3
inc
ret
in
xchg
xchg
imul
xor
sahf
jne
xchg
pop
pushf
xor
inc
into
leave
outsl
adc
int3
jns
or
push
dec
pop
add
insl
xor
lret
inc
aaa
test
xlat
jns
mov
xchg
pop
adc
mov
push
insb
push
ds
js
xchg
lret
das
aad
and
xor
push
jmp
roll
add
arpl
insb
cltd
fcoms
xor
inc
test
mov
test
scas
imul
fldt
push
sarb
cmpsl
or
push
sub
and
pop
insb
movsbl
repz
fcmovnbe
pop
loope
dec
push
xor
addl
mov
xchg
sub
sbb
fcoms
jb
imul
mov
cmp
out
dec
fwait
inc
sbb
dec
out
adc
jo
cmpsl
scas
add
inc
adc
pop
pop
sahf
jb
dec
dec
shll
in
and
xor
inc
roll
sub
pop
adc
mov
push
ljmp
insl
outsb
cltd
sbb
xchg
pop
sub
jno
and
push
inc
pop
lret
lret
rclb
rorl
pop
pop
aaa
mov
popf
jmp
xor
xchg
sub
ret
inc
pusha
adc
adcl
fnsave
test
cmp
inc
test
pop
push
push
dec
dec
test
and
mov
jne
or
negb
xchg
mov
cltd
nop
shr
mov
imul
sbb
movsb
add
repnz
cmp
incl
insl
sub
popf
and
cmp
jnp
jns
sub
cwtl
jnp
cwtl
ja
push
test
mov
jnp
or
mov
adc
xchg
xchg
mov
fbstp
daa
aad
inc
dec
mov
pop
cmpsb
and
adc
cli
xlat
icebp
mov
popf
mov
sub
mov
enter
sub
shrl
add
mov
sbb
stos
js
or
mov
jmp
addr16
push
test
shl
jns
es
addl
insb
lcall
mov
es
cmpsb
jmp
mov
mov
test
aas
jbe
push
adc
push
stos
cmpsb
mov
lret
xchg
stos
aam
pop
mov
ss
decb
hlt
out
add
cmp
sub
xor
xchg
lods
xchg
or
test
sbb
jle
pop
push
shll
jns
jecxz
aas
loopne
enter
pop
pusha
xchg
cmp
and
or
lret
xchg
xlat
mov
mov
ds
jae
xchg
dec
pop
push
aaa
lret
push
adc
inc
arpl
xchg
sahf
adc
sbb
je
arpl
jecxz
or
shl
and
rorb
cld
mov
lahf
es
push
lods
mov
es
icebp
adc
fs
in
movsb
lret
sub
and
push
insb
dec
cmp
rorl
mov
test
testb
jmp
and
adc
in
or
push
in
push
cmpsl
sbb
pushf
rorl
adc
lea
push
std
dec
cmc
xor
cmovp
call
dec
insl
je
loope
loope
shl
or
mov
xor
ret
jmp
out
xchg
mov
pop
or
lea
in
add
sbb
adc
adc
add
adc
dec
repnz
ss
out
daa
cmp
xor
lcall
lods
xchg
or
test
mov
mov
sbb
xor
cmp
mov
push
jne
fwait
dec
and
test
mov
test
lods
mov
mov
mov
dec
sub
stos
pop
sub
sbb
in
pop
out
jnp
insb
and
fstpt
mov
sarl
lods
inc
shlb
mov
pop
jmp
adc
xchg
sbb
rcll
ds
lea
push
lret
mov
es
les
mov
arpl
or
in
mov
mov
xlat
fistl
sbb
mov
sub
or
cmp
sbb
or
test
rcl
xchg
jmp
jecxz
jns
rcll
fdivl
out
into
mov
fs
fiadds
fldenv
cmpb
loopne
shlb
int
cmp
pop
push
in
xchg
clc
sahf
js
ffree
inc
subl
mov
dec
inc
mov
lock
sub
or
cs
fdivrs
loopne
lds
mov
popf
icebp
aas
out
pop
mov
inc
in
lea
into
jmp
and
jp
push
jne
in
loopne
push
jp
xchg
js
pushf
cmp
ljmp
jno
lock
data16
repnz
adc
sbb
pop
dec
push
hlt
aas
cmpsl
addl
stos
mov
add
inc
fldcw
lcall
test
and
int3
and
cwtl
push
int3
sub
int3
xor
adc
push
test
jp
jmp
xor
sbb
xor
xor
mov
in
or
sub
xor
insb
cs
test
in
in
std
xor
sbb
jns
or
lods
mov
dec
popf
xlat
add
push
dec
xchg
stos
cmp
jnp
add
mov
pop
js
mov
pop
jg
js
movsb
mov
xchg
pop
cld
cld
pop
push
mov
mov
scas
testl
push
push
imul
mov
cld
and
lock
loop
dec
neg
sub
jle
gs
cmpl
xor
mov
clc
fisttpl
outsb
dec
sahf
out
mov
cmp
aas
stos
les
fnstcw
lock
mov
out
push
repnz
mov
dec
mov
mov
lahf
call
loopne
push
jle
jns
xchg
xchg
xchg
fstps
mov
mov
mulb
pop
sub
pushf
push
or
shl
aad
xlat
adc
insb
mov
arpl
dec
push
push
cmp
jnp
jl
pusha
add
iret
fsubs
clc
cmp
int3
enter
out
fmul
jle
pop
popf
sbb
pop
mov
mov
xchg
cld
inc
jle
enter
push
clc
add
and
push
sub
xchg
xchg
sbb
sub
or
mov
divb
das
insl
pop
movsb
stc
add
stc
clc
xor
jge
dec
dec
push
roll
or
je
xor
xor
inc
insl
lods
sbb
subl
mov
sbb
pushf
aaa
push
outsb
scas
jo
sbb
ret
icebp
lcall
jle
mov
aas
mov
dec
pop
inc
mov
fbld
popf
outsb
cmp
lret
dec
xchg
fstl
mov
std
jo
nop
jg
es
xchg
outsb
loope
imul
popa
cmpsb
jno
cmp
or
cmp
in
popf
outsl
push
sbb
shlb
sysret
shl
cmpb
jo
subl
leave
out
inc
cmp
mov
test
fs
pushf
push
loope
and
jns
jbe
arpl
mov
mov
jle
jp
rolb
fldt
sbb
aaa
out
repnz
sub
mov
insb
sub
cmp
lret
xchg
in
cltd
imul
jnp
data16
imul
lret
add
add
repnz
inc
push
ret
dec
ss
cmpl
lea
dec
outsb
cmpsb
ret
mov
ss
popf
sbb
xor
xchg
cmpsb
pop
hlt
dec
stos
neg
arpl
hlt
stos
inc
sbb
orl
insl
push
adc
inc
pop
cld
dec
lods
imul
cmpsb
jnp
add
jmp
pop
adc
mov
movsl
out
aas
cwtl
pop
pop
jle
mov
or
cltd
lock
cltd
xchg
test
jmp
inc
add
mov
and
sub
mov
cmp
adc
sbb
dec
mov
stos
pop
adc
adc
or
addb
or
loope
fcmovb
cs
xchg
pop
rcl
out
std
cmp
push
out
push
pop
and
call
or
insl
xor
sub
fisubrs
pop
add
adc
adc
bound
ss
rcll
dec
icebp
inc
xchg
cmp
jae
aad
adc
ror
ds
ss
inc
pop
mov
lret
movsl
or
jmp
mov
sbb
pop
inc
dec
in
xchg
push
popa
inc
push
push
mov
call
sbb
pop
or
pop
cmpb
out
pusha
lods
xchg
sub
mov
imul
out
in
dec
xor
dec
adc
cs
andl
dec
mov
add
pop
jmp
mov
pushf
adc
sbb
xchg
and
fldt
mov
sbb
sub
xor
out
mov
pusha
dec
rcl
cmp
aaa
lock
lahf
sub
sbb
push
push
jo
mov
jne
mov
jae
mov
mov
dec
out
sbb
roll
cmpsl
pop
fdivl
xor
mov
std
mov
loope
repz
sub
outsb
jecxz
gs
mov
cmp
out
xchg
pop
mov
mov
jmp
dec
aad
vunpcklps
ret
inc
scas
dec
dec
loope
push
sub
movsb
pop
scas
or
pushl
pop
movsl
ret
js
dec
dec
xchg
pop
mov
sbb
xchg
xlat
repnz
stos
push
push
inc
pop
cmp
outsl
or
popf
lret
outsl
lods
into
sub
jmp
cmpb
daa
cmp
rolb
incb
pop
push
adc
scas
cs
lret
adc
xor
mov
dec
adcl
test
jle
pop
imul
mov
cltd
xchg
lds
popf
adc
sbb
sbbb
test
add
dec
dec
add
jae
xor
test
mov
sbb
lret
sbb
adc
mov
inc
sub
insb
cltd
dec
test
sub
imull
cmp
xchg
and
pop
xchg
rorl
xor
lods
icebp
mov
xchg
into
rorb
mov
cmpsl
mov
xchg
add
mov
xor
inc
pop
mov
jb
mov
outsb
scas
dec
ds
mov
test
jecxz
xor
push
cmp
sub
and
in
cmpsb
mov
xchg
sbb
fwait
dec
cmpsl
push
stc
fcomps
jl
lcall
or
adc
rcl
ja
lds
ja
cmpsb
mov
enter
out
push
mov
addl
lcallw
sbb
pop
test
aam
std
mov
jo
outsl
loopne
push
ret
xchg
mov
mov
push
jle
rorb
lret
add
loopne
bound
repnz
mov
adc
push
adc
je,pn
out
cmp
mov
rcrb
fwait
dec
add
inc
iret
mov
add
mov
iret
push
lret
xchg
in
ret
adc
sarl
test
jo
je
mov
push
sbb
inc
sub
ds
mov
mov
in
mov
mov
cmp
mov
fs
fidivl
mov
int
mov
xchg
leave
jmp
mov
sbb
pop
jns
cltd
xor
mov
idivl
xchg
and
inc
jge
shrl
sbbl
and
jns
pop
orl
out
test
pop
or
repnz
ljmp
adc
shrl
bound
push
pop
jecxz
std
jbe
push
ds
roll
ljmp
jl
inc
ret
dec
add
test
lds
scas
pop
pop
out
test
add
pop
int
sub
bound
jno
jo
pop
or
dec
lods
pop
cmp
ljmp
js
and
fadds
cltd
xchg
mov
jbe
test
aam
fwait
add
je
adc
add
mov
test
and
icebp
add
inc
push
or
mov
rcll
sub
subb
xor
lock
adc
mov
xchg
push
jecxz
cmp
decl
lret
subb
or
and
jecxz
sbb
add
jno
ret
xor
push
jp
pop
aam
xor
filds
test
inc
cmpsb
dec
jl
mov
sbb
mov
push
ds
xchg
mov
mov
lock
scas
bound
sbb
inc
ljmp
out
xor
fucomip
das
mov
mov
subb
sbb
pop
jg
push
dec
add
pushl
fs
mov
enter
je
popf
and
mov
or
test
and
int3
push
negb
aaa
rorb
call
inc
push
mov
mov
mov
add
pop
clc
lods
int
loopne
sub
ss
jne
or
xor
adc
cmp
push
cmpsl
aam
cli
sbb
es
fisubrs
xor
dec
insb
in
mov
pop
lret
pop
outsl
jle
mov
jge
push
cltd
or
adc
es
cmp
notrack
xor
sub
mov
adcb
add
and
insl
jl
add
dec
rorb
pop
dec
out
xor
xorb
int3
pop
out
add
cmp
pop
shlb
iret
pop
xchg
push
ljmp
jno
xor
adc
popf
xchg
sbb
icebp
xchg
arpl
pop
dec
or
pop
pop
popl
rolb
lahf
ficompl
lret
pop
dec
xor
xchg
rorl
mov
loopne
arpl
stc
std
lret
cs
xchg
rcl
cmpsl
cli
adc
leave
scas
jne
dec
pop
stc
pop
inc
repnz
xchg
movsb
enter
mov
jle
test
xor
xchg
sti
lods
fsubrs
jle
in
aad
mov
int
pop
mov
adc
mov
test
mov
sbb
pushf
inc
and
lods
add
pusha
in
fcomi
jbe
nop
and
outsb
jb
sub
call
cld
inc
gs
outsb
mov
addr16
push
daa
not
push
xchg
icebp
cltd
insl
test
cli
and
lahf
loop
or
je
lods
lret
mov
xor
nop
mov
mov
stos
ljmp
cmp
loopne
jae
mov
ficomps
sti
xlat
pop
cmp
mov
push
in
scas
insl
mov
push
dec
fdivr
testl
fidivs
orb
fstpt
add
cld
repz
add
jb
rcr
in
bound
dec
je
fs
push
dec
into
jp
pop
loop
sarl
fidivrl
sub
and
sahf
inc
sbb
jp
pop
xor
inc
dec
hlt
mov
xchg
xchg
movsl
pop
cmp
xor
add
jl
pop
dec
insb
mov
mov
cmp
sub
icebp
hlt
jnp
xchg
adc
sbb
imul
cs
fcomps
xchg
xchg
loop
xor
test
xor
pop
aaa
pop
pop
rcll
lds
add
mov
xor
mov
lods
das
dec
and
out
inc
pop
lods
push
clc
pop
test
fisttps
imul
ss
jbe
add
cmc
inc
leave
sub
push
push
lret
push
inc
sbb
pushf
xchg
cmpsb
lods
push
or
sub
push
xor
out
dec
and
jle
outsb
rcr
nop
push
data16
jnp
outsl
push
mov
lods
mov
outsl
subb
mov
jbe
add
inc
mov
or
or
push
adc
pop
pop
fsincos
out
repz
mov
jns
sti
mov
mov
mov
popa
push
aam
dec
das
and
xlat
lahf
adc
test
jne
fstl
push
sub
jl
mov
jg
sub
mov
jne
sub
insl
xor
stos
lods
push
xchg
jmp
aaa
test
out
scas
cmpsb
jge
xchg
pop
imul
mov
xchg
push
dec
aad
pop
inc
pop
nop
scas
mov
dec
jns
mov
pop
cmpl
mov
pop
cmpsb
sub
sub
sahf
je
mov
add
enter
push
outsb
add
in
xchg
push
ds
add
pop
push
xor
rcrl
push
negl
icebp
push
inc
sbb
in
out
sti
push
mov
cs
or
add
mov
xor
cli
mov
cmpsl
shlb
xchg
call
aad
notl
cltd
pop
jge
push
lahf
or
sub
add
std
mov
xor
sub
cs
gs
sub
iret
adc
cwtl
repnz
mov
xchg
insb
mov
sub
jno
test
mov
ret
jns
or
sub
xor
pusha
inc
jne
cli
or
and
jne
std
inc
mov
mov
inc
and
jl
xchg
in
or
addb
mov
ljmp
push
call
mov
inc
subb
scas
push
rcrb
dec
stos
jg
arpl
and
out
addr16
xchg
aam
add
hlt
out
mov
pushf
roll
jno
xchg
mov
mov
in
and
je
scas
xor
mov
push
or
stc
insl
pop
mov
xorb
repnz
lock
imul
rcll
xchg
adc
xorb
xchg
sbb
jae
mov
shll
push
repnz
stos
fbld
data16
push
out
stos
addl
inc
jp
add
gs
pop
adcl
mov
inc
jmp
movsl
or
push
push
xchg
mov
es
mov
push
cmpb
pop
and
cmp
mov
and
fldl
pushf
ror
insl
pop
or
out
adc
jo
inc
or
lods
cmpsb
inc
sti
inc
hlt
dec
out
cmp
aad
or
mov
cmp
imul
cmp
jmp
popa
pop
mov
scas
insl
insl
insw
inc
mov
mov
call
inc
mov
adc
aad
gs
icebp
sbb
mov
xor
lret
lcall
push
add
loopne
call
dec
insl
xchg
shlb
mov
push
or
nop
ljmp
cmp
and
jecxz
aas
leave
xor
cmc
mov
mov
or
dec
dec
cmp
xor
xorl
or
mov
imul
inc
mov
jmp
push
int
dec
out
fidivl
inc
mov
adc
pop
mov
ds
sub
sub
leave
jle
mov
and
popa
ret
mov
xchg
push
cmp
jns
push
lds
insb
repz
nop
push
sti
and
xor
repnz
das
add
mov
out
mov
mov
xchg
not
add
stos
je
or
arpl
push
rcrl
stos
repz
push
sub
xor
adc
rorb
adc
xchg
roll
pop
hlt
lcall
cli
push
xchg
jge
pop
xchg
out
movb
int
cmp
mov
inc
xchg
xor
adc
les
push
out
sbb
push
roll
and
push
pop
add
dec
jo
loopne
call
faddl
jns
cmp
gs
iret
addr16
adc
jns
xchg
mov
fwait
jnp
out
push
fucomip
scas
aad
repz
decb
repnz
test
lret
lock
xchg
cmp
adcl
out
adc
adc
or
mov
imul
jne
pop
data16
shrl
push
test
inc
mov
fsubrs
shlb
pusha
add
vhaddpd
adc
fstpt
push
push
mov
div
mov
mov
test
pop
sbb
rcr
add
ljmp
rorb
or
dec
lods
imul
push
daa
cmpl
cmp
cmp
push
aaa
push
shr
mov
aad
or
mov
scas
jl
imul
test
inc
jle
add
push
inc
daa
add
inc
or
nop
xchg
add
mov
mov
dec
jg
insl
sarl
pop
fildl
ficoms
cmp
add
mov
loop
outsl
popa
pop
sbb
gs
repnz
rol
bound
nop
mov
cmp
push
sbb
xchg
push
ret
mov
aas
in
imul
js
inc
mov
cmp
and
jnp
dec
leave
push
push
repz
das
and
cmp
jecxz
pop
push
dec
outsl
repz
fisubrs
mov
imul
mov
out
sarl
sub
sub
sub
pop
stc
fmull
sbb
loopne
mov
xor
imul
or
lods
lret
dec
xor
dec
pop
test
push
sbb
jge
or
inc
neg
sub
push
lea
mov
out
out
and
les
pop
mov
pushf
fdivs
loopne
popf
mov
icebp
aaa
add
lock
fbstp
jl
pushf
mov
or
jge
or
bound
in
cli
push
std
push
mov
fstps
mov
pop
sub
sub
jne
dec
add
enter
out
add
cli
sbb
sub
jmp
lret
les
and
xchg
pop
lods
dec
dec
xorb
fnstcw
fists
cmc
inc
cmpsl
mov
mov
sarb
je
call
push
xchg
and
jge
test
sbb
jns
testb
out
adc
mov
divl
mov
testl
adc
push
mov
push
jmp
mov
jl
sub
cmp
int
mov
or
mov
adc
mov
into
repz
or
ffree
xchg
mov
fistpll
aam
lcall
sbb
inc
test
lcall
loopne
push
repz
outsb
aad
insb
mov
out
popa
jl
sahf
xchg
adc
loop
iret
pusha
sub
pop
bnd
add
sub
ljmp
push
xor
sub
pop
cmp
pop
ljmp
dec
stc
pop
rcl
outsl
loope
xor
ror
sbb
mov
cwtl
aaa
pop
cli
sbb
icebp
out
cmpb
inc
scas
test
cwtl
xor
aad
mov
pop
aaa
outsl
push
pusha
ljmp
mov
sti
js
jnp
sbb
xchg
mov
lret
arpl
fdivr
cld
mov
sub
fistpll
loopne
xchg
movswl
adc
hlt
stos
fdivl
sbb
inc
cmp
das
xchg
push
std
xchg
je
mov
jbe
push
pop
sub
stos
add
int
mov
ficompl
push
add
inc
adc
mov
loope
fcmovnbe
mov
dec
sub
sti
pop
in
fdivl
jmp
cmp
sub
sub
xchg
faddl
in
jb
mov
dec
fistps
xchg
aam
pop
loopne
push
lret
das
je
mov
dec
push
and
pop
cmpsb
xchg
adc
rcll
loop
mov
stos
jb
sub
mov
mov
hlt
ljmp
pop
movsl
fisubrs
cmpb
pop
movsl
in
rol
jecxz
xchg
jb
sbb
shrl
ficoml
jmp
xor
std
loope
jbe
stos
das
push
aad
es
mov
clc
mov
out
loopne
test
shll
mov
inc
sbb
pop
cmp
bound
imul
fidivs
arpl
mov
mov
jb
data16
add
and
ljmp
insl
ss
or
call
jb
jne
pop
mov
std
push
iret
or
inc
mov
mov
pop
mov
rorb
or
mov
lret
push
mov
call
mov
dec
or
js
lea
daa
lea
shl
mov
mov
lcall
inc
out
cmp
mov
fsts
pop
lods
dec
pop
xchg
mov
lea
xchg
jae
scas
por
xor
xchg
aaa
scas
in
pop
add
cmp
jne
mov
popa
mov
scas
icebp
xor
cmc
xchg
out
test
ja
add
imul
aad
jb
pop
mov
pop
ror
out
movsl
dec
jl
mov
shr
mov
push
add
push
dec
je
ret
add
push
test
add
push
ss
aam
das
xor
pushf
push
test
mov
push
add
cmp
mov
testl
lds
lahf
adc
mov
stc
test
push
xor
iret
loope,pt
in
pop
jne
out
add
je
mov
mov
negl
popl
sar
pop
idiv
sbb
cmp
ret
sarb
dec
insl
mov
cmp
pushf
dec
sub
pop
dec
mov
xchg
outsl
xchg
dec
and
and
shll
fwait
xchg
dec
mov
pushf
pusha
insb
mov
lcall
push
jno
mull
lcall
jnp
test
inc
sub
cltd
add
or
ja
sbb
orl
sbb
roll
xchg
push
jo
adc
jo
sub
cmpb
add
sbb
adc
sbb
push
sbbl
push
dec
jge
ret
stos
sbb
pop
pop
pop
sub
ret
lods
rcrl
in
pop
out
daa
test
jp
aas
roll
out
fisubrl
mov
enter
lea
mov
and
test
fsub
adc
push
mov
loopne
ret
clc
add
mov
insb
pop
add
jae
sarl
add
push
sub
mov
and
ss
pop
js
fildl
fisttpll
addw
mov
dec
xchg
into
jecxz
jb
shll
sahf
push
icebp
fs
cmpsl
in
pop
hlt
sub
add
push
cmp
xor
rcl
out
imul
jl
enter
addr16
mov
cmp
sahf
inc
cmp
adc
sbb
aas
int
test
pop
in
cmpsl
cmp
dec
imulb
cmpsb
rcrl
cmp
fs
xor
sbb
scas
cld
jle
jne
pop
push
shrb
push
lea
test
jno
cmpsb
clc
push
cmp
mov
call
js
stos
ds
jns
pop
and
fwait
in
outsb
cmp
push
mov
iret
sti
mov
aas
addr16
and
cltd
insb
mov
shl
mov
idivl
push
xchg
mov
xlat
add
dec
cmp
repnz
push
xor
cmp
jecxz
dec
clc
pop
sti
out
and
out
push
mov
mov
and
sbb
and
pop
insl
lds
mov
xor
lret
fbstp
ret
jns
xchg
mov
mov
xchg
lahf
xchg
into
xchg
lds
jbe,pt
sub
xchg
aas
inc
test
test
dec
mov
xor
xchg
and
jb
clc
jmp
js
in
stos
mov
push
test
nop
int3
dec
push
xchg
sub
stos
loop
jmp
inc
ss
mov
pop
dec
std
or
lods
imul
scas
mov
dec
mov
jp
dec
shll
push
scas
movsb
dec
dec
fmuls
mov
imul
add
mov
lcall
mov
inc
mov
dec
cld
sti
outsb
mov
sbb
int3
xchg
ljmp
push
cmp
icebp
scas
mov
inc
fwait
mov
fldl
dec
push
mov
test
mov
lea
adc
stc
mov
mov
xchg
jl
jns
cli
push
mov
jmp
push
ffreep
cmc
pushf
mov
cmp
insl
cmp
mov
inc
push
fistpl
or
cmp
test
test
int3
je
mov
out
mov
call
adc
mov
or
sbb
ljmp
cld
sbb
or
ret
and
icebp
repnz
mov
inc
outsb
jae
cwtl
iret
add
adc
stc
mov
mov
aam
inc
cmp
jge
mov
mov
movsl
repz
jo
jns
aam
push
mov
lea
xchg
cmc
loope
das
rolb
jae
fxch
sbb
orb
test
mov
and
ret
fs
push
add
mov
push
ret
mov
and
movsl
frstor
cmpsb
sarb
iret
adcl
repz
stos
inc
mov
les
lds
or
ficomps
aaa
or
mov
bound
mov
sahf
sahf
outsb
xchg
or
bound
xchg
shr
daa
inc
and
insb
movsl
mov
adcl
jns
mov
mov
enter
add
lds
lret
int3
inc
and
inc
lods
jno
insl
cmp
sbbb
std
jp
popa
sub
push
iret
cmp
mov
out
sub
xor
push
jne
sub
adc
mov
rcrb
scas
xor
clc
cmp
stc
mov
enter
les
dec
int3
repz
cmp
repz
add
jnp
sbb
loopne
mov
adc
out
ret
inc
cmp
aaa
adc
lock
cmpsb
jge
push
mov
or
in
ror
push
sub
es
push
icebp
mov
xor
fdivr
jns
filds
inc
lods
xlat
jmp
push
adc
mov
lock
jo,pn
xor
fs
and
fs
addr16
arpl
add
cmc
xchg
movsb
jmp
cmpsl
mov
les
fists
jno
dec
cs
fistpll
sarl
stc
pop
xor
loope
or
and
flds
loop
repz
cld
mov
jge
mov
ret
pop
in
loopne
fadd
pop
iret
popf
loopne
js
xor
je
clc
xchg
loope
xchg
int
cmp
divb
push
mov
adc
gs
fwait
cwtl
lret
rclb
mov
aad
loop
xchg
repnz
test
hlt
mov
and
and
jp
jle
mov
mov
out
pop
push
mov
aad
pusha
aaa
add
push
inc
sbb
movsl
fsubrs
or
add
jmp
push
test
and
inc
stos
shl
sub
xor
mov
lea
or
popa
pop
push
repz
scas
xchg
mov
mov
xlat
and
and
xor
jo
lea
jl
ss
mov
mov
arpl
pusha
pop
pusha
aam
push
imul
jmp
sub
sub
pusha
xchg
adc
xor
fwait
outsl
in
fnstcw
xchg
inc
sub
or
and
repz
arpl
jp
jle
fcmovnb
sub
push
aaa
dec
mov
pusha
sbb
rol
jb
sbb
or
and
or
leave
pop
mov
sbb
cmpsb
test
cmpsb
loopne
mov
mov
lock
adc
and
repz
jae
int3
dec
mov
fadds
lock
les
pop
aaa
xchg
dec
fists
mull
push
cmp
outsl
pop
mov
pop
icebp
in
pop
pusha
into
lds
sub
cs
or
jmp
and
mov
mov
loope
dec
ret
hlt
lock
xchg
add
push
add
fidivrl
scas
sbb
pop
clc
scas
cld
inc
xchg
lcall
cmpsb
adc
arpl
adc
mov
and
hlt
pop
inc
gs
gs
das
xor
push
sbb
mov
mov
rolb
inc
gs
jl
outsl
xlat
sbb
add
addl
inc
cmp
mov
imul
out
test
push
pop
inc
add
mov
test
sbb
lods
push
jle
mov
mov
adc
test
es
jle
es
push
add
mov
inc
adc
mov
jnp
adcb
push
push
cmp
fsts
inc
xchg
repnz
lods
sub
pop
sbb
mov
fidivl
out
inc
xor
cmc
inc
xor
adc
mov
jg
movsb
cmp
mov
pop
ret
mov
lds
sub
adc
mov
loope
push
mov
add
out
jne
cmp
xor
jp
fimull
xchg
decb
insl
cmp
fdivs
dec
mov
xchg
movsl
mov
xchg
rclb
popa
imull
pop
mov
lods
xchg
iret
pop
clc
iret
dec
rcr
push
cmp
in
adc
ret
popa
loop
in
call
out
adc
outsb
jge
movb
and
repz
cmp
pop
icebp
arpl
rcr
in
jl
and
push
jl
mov
js
mov
mov
leave
add
cmp
test
stc
sarl
lds
xchg
push
iret
iret
lahf
adc
sbb
pop
mov
or
adc
mov
mov
fisubrl
lock
and
xchg
mov
mov
xchg
fs
xor
ret
xor
nop
cmp
repz
int3
loope
loopne
push
rorb
mov
lock
das
stos
das
mov
loopne
mov
mov
cmp
insb
ss
jb
xchg
xchg
lods
mov
mov
add
mov
add
mov
push
fiadds
pop
mov
test
sub
loopne
mov
faddl
enter
fbstp
shlb
out
shlb
sub
cmp
push
aaa
fs
arpl
inc
sub
pushf
lret
mov
sarl
mov
pop
movsl
mov
ret
and
dec
jmp
pop
jle
push
dec
mov
pop
xor
mov
addl
inc
dec
filds
inc
ds
inc
jb
gs
arpl
fistl
jno
dec
pop
inc
clc
and
popf
scas
jbe
sbb
int3
jge
jle
out
ja
sbb
aam
sti
add
nopl
mov
add
add
push
cmp
or
dec
dec
ja
mov
jl
jg
addl
xchg
cld
popa
sub
xchg
sti
test
pop
sub
jle
mov
rorl
cld
xchg
es
cmc
mov
xchg
mov
jns
push
and
jle
cwtl
push
jle
sub
xchg
repz
rcl
jmp
push
cmp
adc
data16
fdivr
loop
cmpsb
mov
xchg
xchg
int
xor
mov
out
outsl
std
lods
push
daa
pusha
nop
cmp
xor
out
mov
loope
fbld
fiadds
bound
cmp
lret
jle
pusha
enter
ja
pop
in
sbb
mov
pop
imul
mov
pop
add
pop
push
fs
fwait
outsl
or
cli
adcl
sbb
cld
mov
ja
int3
jnp
bound
js
out
in
xor
aad
mov
js,pt
add
call
fiadds
cld
jp
xchg
push
sub
mov
daa
in
add
stos
stos
and
orb
cmpsl
mov
push
sti
cmc
push
loopne
push
push
jno
fisttpl
sbb
xchg
and
sbb
sub
out
mov
fldcw
push
push
pop
js
lods
mov
adc
outsl
pushf
cltd
push
push
jne
or
pop
shrb
popf
mov
jmp
fstl
test
xor
push
mov
lock
pop
daa
repnz
sbb
sub
shlb
and
push
inc
jge
dec
pop
int3
bound
cwtl
int
orl
jl
push
cwtl
dec
pop
mov
ret
lods
fnstcw
aas
add
sbb
pop
or
jnp
inc
popf
sahf
insl
cmp
mov
fs
and
ficomps
mov
lahf
and
test
mov
xchg
stos
imul
mov
jle
lods
inc
scas
cmpsb
inc
mov
imul
pop
ja
xchg
out
mov
cmp
pop
add
add
or
jle
inc
aas
movsl
cmp
lret
mov
xchg
jae
gs
cmc
imul
mov
lds
daa
rcrb
xlat
std
pop
pop
push
pusha
gs
ret
mov
inc
push
out
pop
mov
xorl
adc
ljmp
loopne
mov
sbb
xor
lcall
in
addl
aas
inc
push
aas
int
or
and
mov
mov
mov
or
push
test
and
inc
addr16
add
cmp
dec
dec
sbb
jno
mov
inc
je
cmp
fnstsw
outsl
push
xor
or
fldt
jmp
sbb
xchg
into
out
xchg
pop
cli
sbb
or
hlt
xchg
notb
add
add
call
pushf
jb
adc
insb
mov
fs
in
mov
iret
ljmp
jg
aam
daa
xor
pop
int3
cmp
shll
jnp
add
xor
or
les
test
push
insl
adc
jecxz
stos
std
dec
pop
iret
and
into
pop
mov
mov
or
pop
mov
xchg
mov
scas
mov
xor
das
dec
int3
je
std
pusha
cmpsb
inc
adc
adc
xor
leave
mov
popa
push
pop
cli
push
roll
mov
jecxz
sub
roll
aam
rcr
inc
push
pop
add
mov
add
mov
cmp
outsl
lea
push
test
lcall
cwtl
dec
mov
sbb
outsl
fmuls
xor
test
mov
ret
cwtl
dec
popa
stos
popf
lea
jmp
out
ret
rcr
daa
push
in
fsqrt
mov
es
orl
cmp
popf
outsb
testl
jp
sbb
ds
or
mov
fistpl
jno
jecxz
lret
sahf
mov
sti
add
enter
add
xor
sbb
mov
out
add
adcl
adc
shlb
orb
dec
push
fucomi
or
vminsd
pop
mov
jl
push
outsb
popa
jg
fnstsw
ljmp
mov
rclb
mov
nop
fsubl
dec
addr16
loope
dec
jne
add
in
or
mov
mov
lret
xor
xchg
xchg
mov
test
ret
and
mov
push
mov
cli
shr
cs
lea
test
aad
js
pop
into
into
mov
adc
mov
sub
aas
adc
jae
push
enter
nop
adc
loopne
nop
ret
rcl
js
push
or
jbe
in
add
mov
pop
mov
rcrl
divb
das
ljmp
movsb
popa
jb
sbb
in
stc
jae
loop
sbb
adc
pusha
push
jb
sahf
shrl
ljmp
cltd
push
inc
dec
push
jmp
adc
xchg
pop
cmp
sbb
push
inc
test
pop
pop
insl
mov
xchg
andl
pushf
cmp
shll
jae
shlb
fwait
xlat
mov
inc
inc
icebp
lock
pop
lea
lods
lods
incb
sub
out
adc
stc
lret
pop
enter
repnz
in
mov
mov
xor
jecxz
fsubs
jl
fcmovu
iret
or
scas
clc
adc
dec
jne
data16
into
rol
fs
mov
fisubrl
call
xchg
out
cli
push
shll
out
pop
cltd
cwtl
sbb
iret
mov
mov
iret
add
data16
xchg
inc
mov
or
mov
imulb
insb
rcr
cli
in
jmp
repnz
mov
push
adc
jae
es
jp
out
popf
fwait
pop
mov
mov
into
shll
push
cwtl
inc
cmp
and
lock
iret
data16
mov
loop
ljmpw
into
add
les
movsb
pusha
lret
adc
insl
pop
mov
nop
test
sub
lahf
dec
cmp
inc
fsubs
xlat
xor
mov
sahf
fs
xor
lret
add
push
sbb
mov
mov
jo
xchg
xchg
cmpsb
cs
jmp
xor
ret
sub
jge
adc
jg
lods
sbb
fcoml
dec
imul
icebp
rorl
ja
cmpsl
loope
xlat
loopne
add
jnp
jb
xchg
and
and
lods
or
pop
mov
fadds
jns
inc
xchg
jns
divb
dec
jb
js
push
push
adc
data16
pop
pop
jo
mov
popf
push
mov
rcl
push
xor
or
lcall
or
cmp
loop
imul
adc
inc
jnp
ficomps
out
into
xchg
lret
mov
push
outsb
dec
in
dec
mov
adc
popl
xchg
inc
test
jle
or
lock
xor
outsb
shrb
imul
mov
push
jbe
and
or
jo
and
dec
add
mov
bound
inc
rcl
jecxz
push
lcall
rorb
stos
cltd
addr16
sahf
std
shrb
sub
cmpsl
jo
xor
push
lods
mov
test
jae
mov
mov
ret
fsubr
add
sub
lea
push
gs
enter
sbb
xchg
arpl
data16
sub
sbb
imul
pop
and
shufps
xchg
outsb
loopne
outsl
mov
jl
push
push
fldl
pop
or
pusha
or
push
out
push
inc
xor
mov
mov
lret
pushf
in
push
loopne
addb
ljmp
outsb
mov
cmp
mov
adc
cmp
iret
mov
xor
out
mov
xor
subb
mov
mov
lea
data16
adc
pop
and
es
push
sbb
mov
dec
sti
pushf
cltd
das
or
xchg
mov
daa
cmp
loope
and
stos
in
lods
mov
aam
pop
fisubs
cmp
cwtl
shr
dec
mov
sbb
out
ja
out
jge
filds
lahf
or
hlt
syscall
out
sub
mov
sbb
mov
sub
insl
sahf
xchg
cmp
pop
incb
xor
mov
lods
pop
push
in
jecxz
and
jae
sahf
incl
adc
and
dec
lret
shll
jns
std
or
scas
dec
and
sbb
pop
lahf
filds
frstor
add
or
and
ja
hlt
loope
cs
es
push
inc
pop
jmp
dec
es
stc
sub
loop
sub
add
xchg
cmp
lret
subb
outsb
js
data16
adc
call
cltd
pop
mov
add
xchg
xchg
aad
xchg
sub
and
repz
insb
mov
in
mov
fidivl
mov
fimull
or
dec
mov
imul
push
pcmpgtw
lahf
jg
cmpsl
lcall
out
fs
pop
iret
add
movsl
jecxz
out
jns
ror
cmpsb
ds
and
cmp
jecxz
movsl
mov
push
imul
test
mov
xchg
jmp
xchg
lret
outsl
or
inc
jge
fsub
xchg
fildl
push
stc
pop
shrl
jne
jb
rol
push
cmp
pop
jle
pop
sbb
push
mov
pop
or
cli
cld
jne
aad
pop
shrb
jbe
shlb
js
les
fldl
or
lods
add
les
fwait
iret
pop
ret
es
sbb
insl
mov
jbe
sub
mov
xor
mov
ss
inc
cmpsb
xor
mov
adc
daa
cmp
mov
ds
cs
popf
sub
loopne
push
jmp
hlt
repnz
lahf
xor
outsb
nop
add
pop
insl
ficompl
ret
add
out
mov
inc
inc
xchg
pushf
push
sub
es
scas
or
pop
xchg
xchg
sub
xchg
in
sub
outsl
push
int3
subl
fistpll
das
or
sub
loopne
xchg
in
fildl
inc
std
in
pop
push
outsl
dec
inc
sbb
bound
dec
sbb
xor
mov
ret
ss
pop
and
fstps
adc
and
or
or
jge
sub
test
js
dec
lahf
jno
cmc
sbb
sub
flds
cs
out
lea
ffree
jl
jg
jge
outsb
cmpsl
mov
and
dec
jb
push
and
xlat
mov
into
or
lcall
pop
and
test
loope
or
mov
inc
push
cmp
mov
in
orl
mov
cmc
repz
js
mov
cmpl
adcb
or
fildl
jg
add
lods
stc
rol
dec
xchg
arpl
pop
add
pop
outsl
or
sbb
jg
outsb
stc
cli
ficompl
xorb
nop
nop
xchg
into
popf
push
mov
movsl
enter
xchg
jns
push
mov
dec
push
js
gs
xchg
mov
aas
push
mov
jge
ret
mov
inc
push
test
ss
pop
sarb
adc
arpl
push
jo
nop
sub
hlt
fcmovu
push
or
sbb
sti
or
xor
inc
insl
push
adc
dec
adc
in
daa
lds
mov
xchg
sbbb
adc
pop
leave
cltd
mov
jecxz
test
scas
dec
pusha
daa
dec
pop
mov
pusha
dec
jmp
mov
bound
pop
xor
test
inc
sub
bound
sahf
and
cld
ss
jno
add
pushf
scas
decb
push
inc
out
lea
adc
sub
shr
dec
dec
mov
clc
fucom
push
cmpsb
inc
and
dec
and
lret
push
stos
xor
out
mov
inc
test
fiadds
dec
fdivrl
and
sub
xchg
push
mov
popf
pop
repnz
dec
sbb
sub
cli
pop
dec
scas
jg
pushf
mov
stc
add
ss
mov
add
lods
mov
and
int
insb
rcll
push
outsb
pop
in
pop
xchg
mov
mov
shlb
pop
sub
adc
repz
or
adc
je
out
mov
decl
xchg
aad
popf
and
mov
test
jno
sarl
std
inc
lcall
cmp
sbb
mov
clc
xchg
pop
mov
outsl
out
push
push
mov
ret
or
insb
xor
mov
pop
std
aad
enter
xor
xchg
dec
lock
push
xor
sbb
std
int3
mov
pop
dec
push
inc
jmp
adcl
mov
jo
enter
stos
or
or
pop
or
aam
add
inc
fcompl
leave
stc
push
push
scas
sub
jb
inc
xchg
or
sub
faddl
fwait
push
adc
aaa
pusha
daa
sub
pusha
out
stc
jmp
dec
and
push
add
lahf
mov
jecxz
pop
fnstsw
xchg
and
arpl
cmp
mov
sbb
jl
pop
jge
bound
mov
rcll
imul
inc
stos
dec
mov
test
pop
fs
cmpsb
lea
xchg
call
pop
shrb
mov
cmpsl
adc
add
xchg
lret
gs
je
mov
or
add
push
add
inc
push
dec
add
xchg
clc
pop
inc
mov
ja
fidivs
xchg
out
push
pop
clc
xchg
mov
leave
dec
mov
shlb
fidivrs
add
loopne
repnz
stos
cmc
in
fs
pop
xchg
repnz
sti
add
sub
enter
and
out
sarl
cs
jecxz
out
mov
pop
and
leave
xchg
shl
daa
mov
imul
sbb
in
lods
jp
mov
rcl
cmp
popf
and
mov
xchg
mov
daa
and
stos
add
adc
push
push
outsl
or
xchg
psubb
mov
and
ret
jl
ja
inc
ljmp
je
xlat
lods
and
outsl
mov
fwait
or
mov
jle
push
jle
sub
into
iret
mov
cmpsb
mov
or
popa
dec
adc
into
push
mov
stc
mov
out
out
in
mov
jge
jle
lret
incb
or
or
mov
inc
sbb
iret
add
adc
pavgb
pop
in
hlt
sub
iret
and
adc
shll
pop
mov
imul
test
xchg
or
mov
fildl
dec
ss
inc
mov
push
cmp
mov
xor
in
lods
ja
push
sbb
cmpsl
popf
jnp
or
mov
int3
aaa
dec
cwtl
mov
pop
mov
mov
loope
andb
cmp
call
mov
jle
stc
and
cld
aad
xchg
jnp
jg
rorb
out
jo
into
pushf
div
jl
cmp
or
xchg
sarb
push
enter
push
xchg
xor
push
cmp
dec
and
sub
pop
cmp
jb
and
sub
gs
mov
pop
inc
inc
leave
movsl
pop
bound
xchg
cmp
fisttpll
add
lcall
push
mov
push
lret
lahf
stc
add
adc
mov
inc
test
int3
xchg
xchg
mov
aas
cmc
jne
jo
test
mov
adc
movb
outsl
jp
adc
ud2
enter
adc
orl
test
cld
ret
sti
es
ds
out
inc
jp
ret
into
cmp
insb
test
xlat
mov
into
sub
mov
mov
and
pop
and
sub
lcall
pop
mov
push
call
stc
shlb
lcall
add
push
push
bound
lods
cmpsb
or
jo
or
pop
fneni(8087
testb
mov
dec
movsl
pop
add
test
divl
push
push
xchg
rorl
adc
rorb
outsb
push
xorb
cmp
cmp
mov
aas
dec
je
lods
cmp
and
into
xchg
shlb
daa
sub
xchg
or
shlb
loopne
and
jns
addr16
sahf
add
aad
in
fcomi
sbb
call
in
cmpl
pop
pop
enter
lods
mov
mov
or
call
ret
ror
mov
inc
dec
cmp
mov
jmp
jge
popf
daa
pusha
mov
jecxz
sbbb
sub
stos
test
pop
cmp
fs
push
sbb
filds
mov
cs
add
lret
push
repz
sub
dec
jp
ret
cmp
dec
test
pop
std
imul
and
sahf
lahf
pop
js
mov
or
pop
cs
push
jno
je
sbb
dec
loopne
jne
loope
adc
mov
pop
fisubs
mov
mov
push
xchg
outsb
cmpb
add
sahf
jecxz
dec
pop
cmp
pop
rcl
cmp
jo
lret
ljmp
push
mov
xchg
inc
xchg
mov
jmp
mov
and
sbb
mov
xor
stc
fsubs
xlat
fldt
jae
adc
out
and
mov
xor
xor
xor
xor
sbb
sub
jo
mov
enter
push
cwtl
icebp
adc
sti
inc
xchg
out
aam
jns
xlat
cmp
mov
fldl
sbb
lcall
sub
xor
ficompl
and
cmp
xor
testl
je
lock
stos
loope
icebp
inc
jb,pt
test
nop
mov
in
aas
push
mov
in
pop
insl
and
mov
mov
jo
and
pusha
dec
jmp
push
aad
jne
ret
outsb
xchg
push
out
xchg
movsb
push
clc
mov
pop
dec
pop
push
push
fistpl
mov
shrl
pop
push
add
popf
mov
cmp
push
lea
mov
mov
test
fisttpl
mov
push
pop
sti
out
or
cmp
or
push
cwtl
icebp
pop
pushf
popl
and
pop
sbb
imul
popa
mov
push
and
add
mov
das
add
sub
pop
mov
fsts
out
clc
cmovs
cmp
rcrb
and
push
and
xlat
adc
adc
mov
and
jmp
jnp
adc
fucomi
divb
add
mov
mov
pop
mov
jb
loopne
cmpsl
xchg
mov
lcall
push
lea
leave
mov
add
dec
rorl
dec
repz
test
push
jge
test
mov
inc
mov
mov
sbb
xchg
xchg
mov
push
xor
adc
inc
add
shlb
or
insb
js
mov
dec
and
mov
ja
hlt
cmp
ret
mov
pop
in
mov
cmp
out
push
xchg
adc
xchg
adc
xor
out
mov
mov
cmp
orl
adc
and
mov
push
push
mov
sub
jecxz
mov
dec
xchg
mov
cmp
out
xor
sub
pusha
or
pop
inc
lods
mov
hlt
or
ret
pushl
pop
ja
icebp
fnstsw
pop
test
or
scas
jns
push
inc
lods
inc
add
lea
or
hlt
cli
xchg
fsubs
jae
cli
push
sub
push
inc
cmpsb
stos
dec
inc
sbb
icebp
jbe
clc
mov
imul
jae
scas
jp
pcmpeqd
pop
mov
jmp
xchg
fwait
adc
scas
pop
movsb
mov
lock
cltd
inc
fdiv
mov
inc
and
stos
ss
nop
sarb
cmpb
cltd
sub
xchg
adc
sub
push
stos
add
mov
not
lock
fisttpll
fsub
cmp
push
mov
mov
or
mov
xchg
xchg
nop
cmp
lods
fsubs
ret
fisubrs
sahf
xchg
leave
subb
and
inc
sub
stos
pushf
xor
cld
ljmp
aaa
or
lcall
aam
mov
push
sub
dec
ret
popf
push
lock
sub
je
dec
lahf
mov
pusha
sti
jp
dec
mov
add
ljmp
cmp
cmp
sete
gs
jb
into
aaa
jb
icebp
stc
daa
call
xchg
popf
lret
or
mov
shlb
test
insl
jge
int3
inc
test
mov
ljmp
orl
cmp
lret
add
xor
test
std
aaa
fmuls
fistpll
das
cmp
cmp
jae
xchg
dec
mov
and
fwait
adcl
ss
xchg
out
popf
inc
cwtl
inc
imul
mov
sti
jbe
popf
cs
insl
in
ret
mov
dec
cmc
pop
hlt
or
push
lcall
mov
add
or
test
ficompl
sti
pop
xor
imul
fmul
js
insb
mov
sbb
ljmp
mov
shlb
xchg
jg
lock
fwait
push
nop
pop
std
sbb
lret
inc
sahf
stos
ss
add
cmp
pop
mov
jle
jmp
xchg
lods
aam
addb
jo
mov
cmp
mov
cltd
inc
jecxz
mov
shll
sbb
sub
mov
lods
or
mov
scas
sbb
jo
out
jo
in
push
jnp
andb
iret
mov
sarb
outsb
push
aaa
dec
add
fbld
cmp
out
int3
stc
leave
insl
into
inc
push
js
push
test
mov
repnz
hlt
jecxz
sbb
pop
push
push
fcomi
mov
pop
jno
dec
in
data16
add
lahf
imul
cmp
dec
sti
xchg
inc
lcall
cmp
cmp
pop
bound
mov
add
int3
or
mov
ja
jnp
jnp
scas
mov
cli
aad
xor
dec
pcmpgtd
and
push
bound
xchg
aaa
cmp
xlat
call
xor
push
sub
xchg
mov
mov
pop
xchg
push
jp
and
ljmp
incl
add
mov
cmpsb
scas
and
loop
push
nop
mov
xor
mov
cltd
mov
mov
dec
mov
cmp
cli
xlat
push
mov
xor
loop
or
push
add
in
cmp
sub
pop
out
jnp
ss
outsl
pusha
jecxz
imul
and
sub
shl
mov
adc
sub
shrl
xchg
sub
mov
outsb
adc
dec
and
stos
xchg
jecxz
fadd
push
repnz
sub
clc
dec
xor
cmp
les
xchg
or
in
popf
stos
mov
int
jmp
aam
jecxz
fisttpl
stos
out
and
mov
lea
jmp
add
pop
pusha
push
mov
add
pop
dec
jne
pop
out
sub
movsb
sahf
sbb
je
jp
mov
daa
ljmp
lea
pusha
sub
push
fwait
popa
or
push
daa
mov
popa
mov
jecxz
mov
shl
mov
and
and
dec
push
sub
arpl
pusha
mov
xlat
sbb
sub
pop
xor
inc
lods
nop
push
push
jge
mov
into
cltd
incb
dec
pop
fwait
and
cli
lods
lds
jne
ss
je
cmp
mov
sbb
mov
push
sbb
inc
int
push
aaa
aam
pop
mov
repnz
xchg
jecxz
xchg
pop
xor
cs
cmp
hlt
pop
jmp
sub
pop
enter
enter
fdiv
jl
test
push
bound
or
movsb
cmp
rorl
dec
adc
inc
mov
cld
stos
rcl
into
ret
cmpsb
pop
icebp
popa
push
inc
je
mov
jne
cli
rcll
fidivs
dec
mov
xor
ret
aas
je
imul
sub
and
jb
sub
ret
push
sub
xchg
xlat
sti
adc
push
sbb
insb
and
adcl
sub
xchg
or
ljmp
lret
test
push
mov
mov
adc
rorb
mov
pop
xor
fmuls
movsl
loope
jle
das
cwtl
cmp
orb
cmp
fadd
dec
xchg
cmpsl
add
mov
inc
jbe
jbe
daa
imul
loopne
cmp
sub
xchg
pop
sti
mov
dec
dec
iret
cmc
inc
pop
icebp
dec
jl
xor
arpl
push
jns
inc
xchg
and
int3
sbb
fcomps
sbb
dec
jle
mov
into
mov
pop
call
dec
aad
sbb
imulb
dec
jecxz
cltd
pop
jns
xlat
pop
or
mov
pop
push
dec
fcmovbe
in
sbb
fldl
or
ficoms
and
push
ja
je
iret
jmp
xor
cmp
add
stc
pcmpeqw
insl
loopne
dec
add
fmull
addl
jo
cmp
call
jmp
jle
jp
repnz
pop
fsubrs
roll
add
clc
pop
jle
xor
movsb
adc
push
and
inc
clc
outsl
add
das
push
jp
mov
sub
add
cmp
mov
sub
popf
xchg
jnp
mov
test
cli
sbb
sbb
xlat
cmpsb
dec
cmpsl
fwait
add
xchg
orl
ds
stos
and
and
and
movsb
out
inc
movsb
inc
loopne
adc
pop
daa
adc
add
les
add
pop
mov
push
lds
mov
stos
or
orb
dec
mov
cmp
data16
jp
inc
rcpps
sti
rorl
dec
je
cltd
adc
pop
xchg
or
jg
pop
inc
dec
test
lock
sub
push
push
jbe
cmc
push
pushf
mov
out
or
pop
jge
lcall
or
adc
aaa
nop
lds
in
sahf
sub
fs
xchg
or
xchg
movsl
ljmp
adc
insl
clc
js
lods
push
dec
cld
adc
out
scas
sbb
mov
into
jae
insb
add
push
addr16
mov
or
aad
arpl
mov
std
pop
mov
xchg
call
clc
mov
cld
dec
cmpsl
fcmovne
int
shll
enter
push
mov
fiadds
mov
repz
xchg
jb
cmp
or
push
push
dec
jle
test
inc
cmp
mov
cli
xchg
ds
sub
shlb
pop
push
inc
mov
nop
scas
adc
xchg
mulb
test
push
aaa
mov
jns
rorb
or
popw
jmp
pop
dec
adc
and
sbb
fiaddl
stos
jle
repz
cmp
xor
fwait
out
pushf
push
mov
dec
add
mov
mov
arpl
fildl
ret
inc
sbb
cmp
sbb
popf
das
mov
pop
sar
mov
inc
cs
ds
mov
clc
pop
call
jp
lea
pop
and
adc
adc
mov
mov
sbb
jo
ret
sbb
xchg
mov
repz
test
cmp
sub
lea
cmp
aam
lods
xchg
fstpl
inc
jb
cmc
mov
cmp
aam
mov
sti
call
mov
mov
addr16
inc
lods
dec
movb
out
in
arpl
add
cld
mov
loopne
popf
jbe
lret
loop
jne
sub
sub
insl
gs
xchg
in
or
test
fcoms
test
xor
rcrl
pusha
dec
arpl
insb
jo
jne
cli
ljmp
es
push
fnsave
sub
imul
push
adc
dec
repnz
cwtl
stos
outsb
shll
orl
adc
jae
out
movsb
out
add
les
mov
push
adc
cmp
ffreep
pop
push
test
negb
ret
inc
lret
mov
sub
jl
or
add
sbb
scas
pushf
inc
jle
push
and
jmp
sbb
sbb
lock
add
bound
adc
mov
std
outsl
mov
adc
shrl
ja
dec
mov
rep
clc
dec
jmp
mov
lret
mov
cltd
fstps
out
mov
cltd
add
dec
js
lahf
xchg
negl
int3
push
xchg
movsb
into
mov
xor
test
jo
fst
dec
sti
mov
lods
xor
aad
cmp
mov
stc
imul
cmp
dec
mov
inc
cmp
jb
repnz
and
cs
xor
mov
cmp
repz
js
sub
ja
or
jp
cmp
jo
mov
add
outsl
push
sbb
jns
aas
xchg
nop
inc
ja
arpl
fldenv
dec
and
adc
jecxz
push
add
xchg
pop
mov
cld
jmp
or
imul
outsl
fcomip
fbld
push
outsl
pop
adc
sub
xchg
push
cmp
pop
inc
addr16
lds
push
mov
js
pop
and
sbb
xlat
push
repz
inc
arpl
into
fidivrs
push
pop
imull
mov
rcrb
pop
sub
mov
pusha
dec
ret
scas
scas
jle
jg
mov
gs
lahf
dec
mov
xchg
cmp
sbb
push
dec
jge
push
or
or
jbe
mov
incl
das
xor
dec
add
or
in
addr16
sub
adc
mov
mov
sub
mov
xchg
cli
inc
fisttpll
jo
and
cmp
adc
mov
xchg
cmp
add
jl
add
std
cmpsb
mov
jmp
popa
inc
hlt
nop
add
sub
arpl
push
daa
mov
and
mov
shrb
or
scas
out
out
xor
mov
sahf
test
cmp
add
adc
dec
fnstenv
mov
int3
sahf
ljmp
sub
xchg
inc
push
in
xchg
pop
or
jne
fwait
inc
lock
pop
push
mov
sbb
jecxz
ja
call
mov
in
jno
out
xor
sarb
nop
test
ficoml
int
out
cs
in
mov
sbb
add
mov
mov
dec
jge
dec
rorl
lahf
adc
in
in
inc
ja
xor
fisttpl
push
and
mov
mov
sub
mov
aad
inc
lcall
dec
in
das
fldenv
mov
xchg
lret
jmp
pop
sub
int
das
and
inc
les
cmp
fmuls
aaa
pop
sub
add
fstpt
add
mov
dec
ds
sahf
leave
rolb
and
imul
adcb
test
pushl
bound
jno
pop
push
cmpl
test
dec
pop
in
sbb
xor
jecxz
cmp
jne
and
cmp
sbb
pop
push
pop
push
push
xchg
mov
hlt
outsb
inc
mov
sbb
cwtl
dec
clc
aad
scas
cmpsl
ljmp
mov
lock
daa
loope
xor
jo
lea
rcr
sbb
ja
aas
in
sub
mov
imul
push
ja
ljmp
aaa
icebp
out
xchg
sbb
ljmp
in
movsb
ss
or
or
xchg
movsl
ljmp
push
and
mov
and
and
and
dec
and
incl
in
adc
jb
fistl
inc
stc
rcrb
jb
es
mov
roll
mov
xorb
jg
add
mov
adc
cmpl
mov
lods
push
cmp
in
or
xor
and
icebp
test
addr16
inc
cltd
jne
gs
mov
xchg
imul
adc
push
mov
xchg
mov
jecxz
pop
and
fstps
mov
imul
cmp
testl
or
mov
cli
cmp
sbb
xor
fmuls
xchg
lds
sbb
push
xchg
jl
mov
mov
push
push
dec
mov
call
arpl
or
inc
and
pop
scas
adcl
popf
cmp
in
xchg
or
daa
mov
inc
push
or
or
rcrb
nop
out
xor
lds
cmp
xchg
and
or
sub
pushf
jo
leave
and
ja
in
iret
daa
popa
xchg
add
outsl
dec
ja
cwtl
push
jmp
sub
ss
cmp
aam
outsl
cmp
jg
xor
test
leave
push
dec
lds
jmp
int
popa
loop
fistl
adc
outsb
gs
jo
aas
push
sbbb
or
mov
fldt
or
out
stos
push
in
repnz
outsl
subb
xchg
shrl
adcb
sub
cwtl
add
add
repz
jbe
ret
sti
lds
inc
std
add
xchg
or
ret
and
add
pusha
in
int3
and
dec
mov
xor
jecxz
xchg
inc
insl
popa
inc
gs
jns
fstpt
lock
mov
cmp
popa
jge
rcrb
push
jbe
cltd
call
mov
data16
repz
mov
in
pop
xchg
add
cld
jno
pushl
xlat
or
xchg
mov
cwtl
cmp
mov
mov
popf
lock
and
adc
xor
inc
xchg
jb
outsl
insl
jns
in
mov
dec
loope
test
movl
push
dec
add
daa
jg
cmp
ja
popa
es
leave
ja
mov
scas
test
mov
or
jle
mov
popf
fldenv
xchg
jmp
lods
orl
movsl
push
cmp
jae
aad
jl
sbb
stos
gs
mov
mov
mov
fstpl
sub
jnp
push
ja
insb
mov
jmp
pop
jecxz
shrb
adc
xchg
mov
jo
repz
je
xchg
sbb
pushl
push
sbb
cwtl
xchg
fnstsw
adc
dec
enter
scas
gs
jmp
jbe
push
push
imul
lret
xchg
and
pop
push
lods
jmp
in
cmp
mov
in
dec
and
aad
cmc
std
adc
andb
cltd
mov
mov
mov
mov
pushf
mov
sub
push
fwait
pop
xchg
pop
inc
ja
fidivrs
mov
xor
or
outsl
cmp
decb
jecxz
jno
add
test
sti
loope
jge
push
adc
add
mov
push
pop
adc
or
movsb
push
cmp
push
fisubrl
clc
cmp
mov
mov
fstpl
dec
pop
in
loopne
insb
lea
inc
aam
jl
roll
fbstp
test
pop
sbb
cmp
add
sti
loopne
sarl
les
jae
mov
repz
pop
out
es
mov
pop
sbb
cmp
jbe
insl
aad
dec
outsb
decb
cwtl
iret
mov
jnp
or
ds
and
movl
mov
fs
stc
into
xor
mov
push
and
and
dec
shr
in
cmp
cmc
jle
xchg
enter
std
out
lahf
stc
aas
dec
gs
jge
inc
lcall
and
add
mov
and
pop
daa
jmp
lret
lods
out
pop
popf
cmp
pop
bound
cmp
pop
jnp
and
sub
jmp
cmp
dec
sub
jbe
fdivl
add
xchg
inc
shll
push
stos
ja
push
addr16
xor
enter
pop
das
mov
inc
pop
loope
jle
lods
adc
mov
push
mov
or
sub
and
xor
in
nop
dec
bound
shll
push
arpl
cmp
sbb
cmc
arpl
jnp
cwtl
pusha
ret
fcmovb
mov
or
xchg
dec
daa
sahf
loope
jo
sub
fs
fnstsw
sti
mov
add
mov
adcl
stc
outsb
sub
aam
dec
aad
mov
bnd
sbb
mov
mov
sahf
push
inc
adc
inc
jl
aaa
js
mov
xlat
and
adc
test
add
pop
mov
loope
iret
xchg
xor
jmp
aam
cld
and
jecxz
push
sub
or
sbb
divb
andl
sbb
mov
outsb
loope
repnz
add
push
lahf
sub
lret
dec
xlat
adc
sbbb
dec
faddl
mov
mov
test
outsb
inc
out
push
xor
shrl
insb
call
mov
outsb
push
or
out
dec
sbb
jae
mov
mov
pop
mov
xchg
adc
xlat
add
aam
fsubrs
xchg
cltd
adc
fdivp
xchg
bound
sbb
cmp
sub
aas
out
ret
pop
add
popf
mov
icebp
xor
push
aam
dec
cmc
or
pusha
mov
mov
cld
dec
hlt
iret
xor
in
out
jg
pop
push
in
cli
add
stos
fstp
imul
insl
mov
sub
or
inc
mov
mov
jno
jbe
jmp
shl
idivl
cs
emms
inc
aaa
fs
loope
jae
lea
stos
jnp
and
and
lcall
ljmp
pop
movsb
test
and
es
lea
pop
dec
push
out
cli
dec
movsl
xchg
push
pusha
inc
cmovp
in
push
xchg
jae
sub
xlat
cli
sahf
dec
and
clc
pushf
dec
sub
push
inc
dec
cmp
and
dec
es
cld
stos
std
pop
inc
adc
inc
push
dec
pop
test
test
scas
aas
jbe
loop
enter
and
notl
fdivrl
mov
ficoms
mov
adc
mov
jecxz
mov
xchg
inc
movb
dec
and
out
repz
dec
sub
addr16
gs
gs
fldt
shll
sbb
cmp
jmp
fwait
lods
jns
shrl
std
aas
add
fnstenv
dec
sub
xchg
insb
or
fnstcw
cld
ds
gs
pop
mov
xacquire
fbld
push
sub
pop
nop
mov
filds
fldt
ret
ja
cmp
push
sbb
incl
and
test
outsb
xchg
fcomps
adc
dec
push
fsubr
andl
divl
cmpsb
mov
xor
dec
dec
inc
sti
fdivrs
mov
adc
ljmp
inc
daa
aam
add
lcall
and
sbb
sbb
mov
mov
inc
in
mov
mov
dec
and
xchg
xor
lods
jmp
xor
repz
cmp
mov
outsb
push
or
jmp
lahf
xchg
push
or
xchg
out
fsubrs
lcall
pop
push
inc
push
sub
subl
hlt
and
iret
lods
adc
cltd
pop
pop
inc
adc
enter
jg
xor
xlat
ljmp
icebp
in
mov
mov
add
lret
push
bound
pushf
push
lret
add
mov
inc
je
outsb
inc
pop
mov
push
push
sbb
adc
divl
pop
scas
daa
loope
stos
test
in
enter
lock
mov
jne
js
cmpsb
jne
inc
cwtl
lods
cmp
jge
sub
cwtl
je
popa
pop
test
aaa
cltd
push
pop
xor
test
sahf
mov
lds
xchg
and
adc
ljmp
push
cmp
jb
fwait
notb
lahf
push
mov
mov
push
fnsave
inc
inc
or
gs
mov
mov
mov
shrb
inc
negb
fs
int3
repnz
sti
push
sub
mov
fimull
add
pop
inc
das
mov
add
lret
add
out
stc
mov
xlat
add
xor
cmp
xor
pop
jbe
lea
stos
out
mov
movsl
and
addr16
inc
or
pop
cmpsb
push
mov
rorb
inc
inc
cmpsb
fadd
je
bound
mov
mov
cmpsl
orl
out
stc
cmc
jecxz
fcompl
aas
inc
fildll
push
lds
mov
mov
lods
loopne
and
insb
push
outsb
or
jge
dec
mov
lcall
pop
cmp
mov
xchg
cmc
push
xor
clc
and
add
cmp
aad
inc
frstor
sbbl
bnd
mov
lods
js
aas
adc
scas
inc
push
gs
and
mov
mov
jno
xchg
xor
call
popa
pop
fnsave
ret
mov
push
pushf
stos
cli
mov
sbb
out
pop
cmp
fnstsw
sbb
mov
sub
xor
iret
popw
xor
inc
popa
shll
dec
mov
lfs
ss
push
cmp
sti
fnstenv
sbb
adc
fsubrl
push
outsb
sub
pushf
lcall
xor
xor
and
mov
mov
je
inc
ret
daa
or
xor
push
ret
push
pushf
xchg
adc
mov
sbb
xchg
sti
rorb
pop
cli
jmp
mov
pusha
pushf
loop
insb
jecxz
loope
dec
cltd
test
cmp
ret
sbb
les
or
xchg
add
fst
fmul
iret
cvttps2pi
jp
dec
mov
inc
and
ret
out
fsubrl
pop
fwait
or
inc
jmp
mov
xor
iret
shrl
leave
inc
jp
cmp
out
shl
mov
test
xchg
aam
inc
adc
lods
loop
in
aaa
popa
js
and
sbb
jmp
popa
dec
pop
xor
out
iret
out
das
es
sbb
push
in
cmp
stc
nop
in
dec
sahf
mov
bound
loopne
mov
insb
sbb
mov
leave
pushf
dec
fbstp
mov
push
insb
mov
jmp
mov
fwait
cs
dec
pusha
mov
lcall
mov
mov
jg
mov
testb
xchg
and
adc
mov
push
xchg
mov
sub
xchg
xchg
push
fwait
clc
add
rcl
xchg
leave
aad
subb
arpl
out
add
add
call
or
push
add
cmp
ret
cmp
jecxz
ljmp
into
aad
pop
xchg
stc
int
insl
into
test
jecxz
xor
je
mov
repnz
pop
popf
in
fbstp
inc
jle
ror
pop
pop
addb
int
sbb
stos
jbe
xchg
sbb
cwtl
call
mov
jae
fwait
mov
loopne
push
and
cmp
fimull
test
dec
clc
ficompl
fmul
call
jno
lahf
jo
push
and
add
sub
mov
adc
and
push
pop
jg
sti
rol
mov
dec
jle
hlt
push
rol
ljmp
and
dec
push
shlb
jne
push
sbb
mov
sbb
gs
add
mov
cld
pop
mov
lret
sub
lret
pop
adc
out
sub
cmpb
push
sub
mov
fisttpl
clc
test
sub
jl
pop
rcrl
scas
faddl
lods
sbb
adc
movsl
mov
push
dec
cld
or
add
sbb
xchg
insb
pop
pop
sub
sbb
hlt
shlb
xchg
mov
or
jo
test
imul
cmp
adc
xchg
loopne
mov
jmp
add
mov
dec
mul
icebp
and
sbb
xor
mov
shrb
lahf
popf
adcl
iret
fstpt
dec
jno
ds
push
inc
scas
xchg
cmp
sti
push
mov
scas
xchg
sbb
scas
cmp
and
shr
push
inc
pop
fbstp
rcrb
js
pop
inc
bound
and
xchg
xor
sbb
and
test
push
mov
inc
int3
stos
inc
or
sub
sub
mov
add
xor
fisubs
aas
mov
lock
mov
adc
cld
sub
cli
add
push
test
sbb
add
push
add
or
or
fisttps
jno
add
mov
push
sub
mov
mov
sub
pusha
gs
data16
xor
popf
xor
pusha
loopne
cmp
fnsave
pop
mov
lods
leave
jne
or
jnp
pop
ja
ja
fnstsw
sub
lret
mov
pushf
or
or
test
mov
xor
sub
jno
push
and
jmp
adcl
xor
aas
in
in
lea
shll
mull
ja
sub
outsl
sbb
xchg
mov
lds
inc
inc
ret
jge
and
push
fimull
mov
pop
xchg
push
enter
or
daa
test
or
mov
ficoml
lds
jbe
scas
clc
inc
xchg
or
push
add
cli
or
scas
sbb
aaa
or
out
or
call
jne
push
lcall
or
shrl
int3
scas
test
jne
scas
mov
cs
cmp
loopne
push
xor
sbb
or
in
in
push
dec
stos
inc
ret
pop
sbb
call
mov
mov
mov
sbb
push
es
cmp
and
sarl
out
or
dec
iret
mov
or
sbb
and
dec
into
mov
mov
mov
xchg
add
pusha
dec
sub
cmp
loope
rorb
xor
cmp
sar
adc
ljmp
nop
repz
push
insl
ja
add
jmp
mov
mov
dec
dec
pop
sti
bound
jno
loope
sub
cmc
mov
xchg
lahf
push
push
fisttpl
pop
lea
flds
xor
sub
or
enter
int3
mov
dec
call
cmpsb
lods
dec
jg
mov
and
out
push
test
lods
jb
cltd
das
mov
notb
aas
jl,pt
mov
lret
loop
pop
scas
fcomps
adc
andl
xchg
add
test
repz
sub
mov
inc
fwait
pop
pop
popf
sub
sbb
inc
sahf
ficompl
imul
inc
jmp
mov
inc
jle
adc
xchg
adc
daa
xor
fcompl
fnstcw
and
sub
add
dec
add
cmc
and
bound
incl
push
fistl
xchg
or
or
insl
test
cmp
xchg
and
in
push
clc
jb
test
cld
xor
rcrl
out
inc
xchg
jbe
xchg
mov
jl
mov
add
dec
leave
into
adc
loopne
dec
and
xor
cmp
jl
add
cmpb
sub
imul
orb
adc
imul
repz
test
loope
push
and
aad
jae
inc
sti
ds
xchg
inc
jo
stos
xlat
push
mov
outsl
mov
orl
xlat
lock
decb
into
orb
bound
or
pop
outsb
inc
fildl
leave
ret
adc
lcall
daa
mov
test
mov
insl
pusha
push
ret
xor
lcall
mov
pushf
aam
lods
je
aad
loop
iret
jmp
shl
imul
jl
into
inc
inc
jnp
jae
dec
ret
mov
clc
std
popf
sbb
and
lahf
repz
adc
and
jl
xchg
in
or
jg
repnz
jno
es
or
and
testl
jg
mov
jp
int3
imul
ds
les
lock
inc
mov
jo
add
push
hlt
jg
rorb
xor
mov
clc
popl
inc
mov
out
sbb
fmul
sbb
jmp
pushf
mov
inc
mov
clc
out
scas
push
xchg
out
popa
out
push
pusha
ljmp
xor
inc
adc
fldl
cmpsb
addr16
and
cltd
xlat
inc
sbb
inc
ficoml
pop
je
rorb
or
xor
mov
lds
push
dec
mov
push
jle
test
mov
or
inc
xor
scas
inc
mov
inc
inc
push
aam
jmp
xchg
mov
stos
dec
in
insb
scas
and
loopne
out
int
dec
iret
mov
inc
pop
mov
das
mov
mov
aas
pop
data16
jae
xchg
jo
mov
rolb
orl
stc
sbb
push
cmpsl
jbe
stc
xor
or
pusha
mov
sti
aam
mov
xacquire
loopne
js
mov
bound
popa
es
insb
cmpsb
and
out
adc
pop
jbe
inc
sub
fsubrs
insb
mov
out
cli
outsl
xor
xor
pop
push
insl
inc
and
loopne
dec
pushf
cmpsb
inc
loopne
outsb
mov
iret
pushf
lea
xchg
inc
mov
loopne
push
add
push
shl
inc
mov
dec
iret
mov
scas
jae
incl
test
inc
aas
test
mov
in
mov
les
xor
nop
aam
xlat
vpaddusw
xorl
lock
iret
out
or
pop
xchg
movsb
jl
fwait
int3
jl
mov
push
xchg
xchg
pop
cmc
data16
pop
incb
and
sub
jo
dec
fisubrl
int3
xchg
add
aaa
leave
and
mov
cmpsl
mov
jge
dec
push
sbb
mov
stc
and
add
mov
mov
cmp
sub
in
outsl
inc
insl
dec
int3
xor
fimuls
xchg
jnp
icebp
xchg
enter
bound
js
mov
inc
mov
and
sahf
clc
sbb
out
sbb
mov
ja
xor
mov
orb
xor
xor
mov
pop
stos
or
sub
inc
out
ficompl
jl
pop
push
int
mov
mov
shl
add
mov
xlat
test
add
mov
add
js
add
push
scas
mov
fwait
mov
mov
out
repz
add
add
and
pop
add
jo
stc
jl
lock
xchg
sub
mov
insl
jbe
orb
xchg
je
fs
iret
int3
aam
es
push
repz
jle
imul
popw
stos
cmp
jl
daa
cwtl
lcall
mov
cld
xchg
arpl
test
in
outsl
add
int3
push
roll
pop
mov
into
gs
mov
xor
jb
aas
and
push
inc
test
inc
adc
out
cmp
ljmp
gs
int3
and
sbb
adc
pop
xor
lods
andl
mov
push
imul
fwait
ja
cltd
mov
jp
mov
outsb
cmpsb
jl
inc
sub
sbb
cmp
xchg
lods
pop
xor
jo
cmpsb
out
inc
dec
mov
out
cs
rorl
fwait
les
leave
sbb
aad
mov
dec
xchg
in
loop
mov
in
lods
push
fwait
lahf
push
xchg
cltd
mov
in
and
inc
repz
jbe
mov
dec
es
jne
fmuls
out
js
mov
inc
sbb
cmpsl
stos
inc
dec
push
leave
cwtl
dec
flds
jae
cmpsb
inc
enter
sbb
icebp
adc
sbb
mov
xchg
dec
aam
jl
insl
subl
xchg
ret
fildl
adc
hlt
mov
ret
outsb
pushl
fdivrl
or
movsb
ret
dec
pop
jmp
and
xchg
jnp
clc
jo
dec
or
inc
orb
cmp
sbb
cli
stc
loope
movsb
fwait
sbb
adc
xor
inc
mov
out
cmpsb
mov
xor
cwtl
insl
dec
mov
dec
mov
dec
les
sub
lahf
nop
dec
orl
mov
es
add
aam
jl
pop
sub
jle
push
hlt
bound
xchg
mov
subl
hlt
loopne
or
dec
nop
pusha
incb
int3
out
mov
push
xchg
pop
push
cmpsb
data16
dec
jae
rorb
mov
ja
xchg
cmp
adc
mov
inc
sbb
adc
mov
sar
js
testl
bnd
jb
ret
jge
pop
xchg
push
jp
dec
popa
and
inc
mov
out
dec
sbb
insb
mov
inc
mov
cmp
inc
shl
cmp
rclb
hlt
ret
stc
loop
xchg
cld
orl
lods
and
pop
js
les
jae
insl
xchg
movb
or
mov
ss
xor
mov
and
mov
adc
jmp
cmpsl
pop
push
push
xchg
adc
xchg
mov
mov
mov
adc
test
pop
push
andl
loop
shrl
icebp
mov
inc
pop
in
cmp
jo
lea
and
cld
ja
movb
clc
insb
dec
fcom
or
mov
mov
rorb
push
popa
jge
hlt
stos
lret
lea
clc
pop
and
ja
fldt
ss
sub
push
and
mov
rcr
push
adc
mov
xchg
out
sub
testb
mov
cmpsl
sbb
xor
xchg
dec
mov
daa
pop
mov
movsb
aas
cs
out
out
dec
push
jne
jg
cmpsl
and
xor
ss
dec
testb
jb
jb
add
and
mov
pop
cmc
iret
mov
rorb
out
filds
neg
test
test
pushf
data16
jg
sti
out
sti
test
adc
mov
pop
pop
or
sbb
movsl
into
out
inc
sbb
jbe
xlat
orl
fwait
ret
ret
mov
icebp
mov
xor
and
jmp
ret
fucomp
mov
lods
fiadds
sub
lock
popa
mov
loop
inc
cli
roll
xchg
imul
adcb
push
jmp
lret
int3
cmp
shrb
cmc
cld
inc
add
aaa
mov
loop
lock
mov
jbe
roll
out
inc
pop
mov
les
out
jmp
cmpsb
push
out
inc
pop
pop
scas
adc
mov
cmc
rcrl
push
divb
sti
mov
loop
xor
push
mov
mov
push
into
jl
xor
cltd
pop
loope
or
shl
push
add
xlat
or
mov
aad
or
cmpsb
mov
mov
xor
add
popa
and
imul
xor
and
adc
shrb
push
addr16
jp
lock
adc
or
out
lret
or
push
mov
and
adc
adc
or
out
and
xor
addr16
insl
xchg
push
push
rcr
mov
pusha
and
add
cld
imul
add
stc
lret
dec
subb
xlat
imul
out
aam
shll
repnz
mov
stos
xlat
sub
jb
and
adc
xlat
fucom
scas
mov
cmc
out
movsb
adc
insb
ss
sub
aad
mov
sbb
popf
cmpsl
pop
cmp
rclb
jmp
leave
push
sahf
aaa
inc
fwait
pop
push
outsb
mov
fisttpll
imul
add
jecxz
repz
jmp
add
bound
scas
jl
xchg
faddp
cmp
lea
repz
mov
lret
pop
stos
aaa
hlt
and
ljmp
fcom
pop
pushf
dec
xchg
gs
dec
test
cli
push
jae
daa
sub
lret
mov
sub
pop
ja,pt
dec
jb
mov
into
call
sbb
jns
loopne
jmp
lret
mov
sbb
jp
out
ret
subb
and
rcrl
je
push
lock
dec
not
stos
lds
adc
outsl
sti
pop
and
outsl
mov
mov
pop
mov
clc
xchg
sub
jl
ja
mov
je
push
push
push
popa
gs
mov
pop
scas
lcall
cmp
test
cmp
xor
es
jp
fisttpll
push
xchg
imul
mov
cmp
out
xor
mov
pop
dec
std
stos
xlat
mov
inc
in
frstor
je
cld
nop
mov
shlb
inc
dec
mov
aam
dec
or
add
lret
shll
lods
leave
fcmovnb
inc
push
popf
dec
test
repz
dec
inc
pop
andb
dec
nop
icebp
sub
mov
xlat
pusha
sbb
xchg
pop
pusha
sbb
arpl
loope
fimuls
andl
pop
and
das
movsb
insl
sti
xlat
sub
xchg
pop
sbb
in
add
pushf
xchg
mov
xlat
movsb
and
and
xor
mov
lea
inc
sbb
stos
sar
arpl
sub
lds
jg
movsb
loope
xchg
imul
test
or
lahf
and
popf
repnz
fdivp
jne
dec
ficompl
jmp
adc
dec
jp
or
mov
testl
adc
jle
and
inc
cmc
pushf
adc
insl
in
jmp
mov
hlt
movsb
and
and
mov
inc
inc
jg
test
inc
inc
push
pop
loop
pop
hlt
jb
ror
or
jge
jecxz
cmp
cmp
and
push
mov
dec
cwtl
ret
shl
pop
xchg
test
xchg
xchg
cmp
cmpsb
lret
push
mov
push
hlt
mov
aam
in
jns
jo
int3
push
mov
out
clc
hlt
or
pop
xor
imul
push
xchg
pop
push
and
stos
and
aaa
mov
popa
mov
adc
testb
xchg
sub
sub
popa
inc
xor
stos
add
icebp
movsb
dec
mov
into
inc
lods
ljmp
push
out
dec
mov
in
pop
sub
out
std
or
std
into
sar
sbb
faddl
push
aam
jnp
inc
clc
ret
loope
inc
xor
sub
pusha
xchg
or
bound
int3
push
dec
sahf
sub
xor
push
pop
xor
pushf
jae
lea
call
cltd
lds
cmp
lds
cwtl
fisttps
jmp
movsl
sbb
mov
add
insb
dec
movsb
cmpsb
call
notl
push
pop
adc
xor
xchg
add
fstl
andb
sbb
xor
push
jae
aaa
add
outsl
lock
mov
shrl
push
outsb
mov
fisubrl
mov
mov
xor
mov
pop
xlat
xchg
add
bound
test
filds
fwait
pop
std
js
or
cmp
mov
mov
dec
add
cmc
sbb
push
loope
fs
dec
jno
mov
push
sbb
in
push
mov
mov
jle
push
and
popa
cli
cmp
push
into
sahf
cltd
inc
xchg
addr16
jae
dec
push
add
inc
push
xor
push
xchg
dec
rorl
sarl
inc
adc
pop
movsl
sbb
repz
mov
subb
popf
jge
in
adcl
ret
sbb
stc
add
daa
and
sbb
cmp
inc
mov
int
cmp
cmp
lret
shrl
mov
aaa
test
sub
lcall
add
scas
test
pusha
sbb
mull
clc
scas
shld
shl
xchg
cmp
movsb
xor
push
in
rcr
mov
insl
or
std
call
mov
iret
sbb
int3
mov
arpl
fwait
outsl
popf
loop
stos
insb
or
mov
fs
stos
mov
inc
int3
sub
push
or
push
jb
cmp
out
dec
lcall
sub
or
xor
test
fdivl
xor
inc
pop
sahf
sub
pusha
mov
dec
inc
lock
jb
mov
inc
lret
cmpsb
dec
dec
pop
or
aam
add
out
imul
addb
call
fistl
ret
add
bound
cmp
ljmp
pop
scas
cmp
mov
movsb
pop
pop
add
sbb
mov
out
fbld
sub
fiadds
pop
sub
jecxz
lods
popf
fisttpl
dec
inc
sub
cmp
cmp
scas
add
call
or
sbb
push
test
add
scas
test
in
jmp
mov
xchg
subl
dec
ja
fdiv
hlt
pop
dec
ffreep
push
pop
jne
jl
fdivl
push
addr16
imulb
or
mov
jo
mov
in
mull
mov
inc
mov
cmc
sub
out
add
sub
xor
cs
push
xchg
sub
rorb
movsl
mov
gs
jecxz
adc
mov
lahf
push
subb
sbb
hlt
sub
push
test
jns
push
adc
lock
xor
lret
fcmovb
lret
xor
shrb
into
or
lea
push
icebp
xchg
andl
mov
inc
lcall
in
jnp
mov
ljmp
orl
or
mov
or
mov
xchg
pop
jb
repz
mov
aad
ficoms
fcomps
popf
rolb
xchg
movsb
fs
clc
lods
inc
mov
push
ljmp
push
pop
push
fsubrs
push
test
test
je
stos
jp
fadds
push
ds
int3
out
and
xchg
mov
dec
fbld
add
sub
and
in
xchg
ljmp
pop
lods
cwtl
aaa
rcr
mov
int3
sub
pusha
mov
cwtl
mov
fisubrs
adc
mov
imul
add
mov
rcrb
and
or
mov
lods
xor
pop
push
dec
pop
std
mov
mov
push
cwtl
sbb
xchg
dec
mov
popf
adc
xor
push
xor
fdivrs
or
test
mov
stos
leave
movsb
test
lock
jl
fisubrs
xchg
aaa
and
mov
cwtl
leave
enter
push
lock
scas
out
pop
sbb
add
adc
mov
or
psrad
and
xchg
jno
cmp
and
sbb
nop
ret
push
sub
cli
xor
pop
push
cmp
mov
adc
mov
mov
inc
pop
push
lret
mov
push
sbb
loop
xor
inc
xchg
sbb
lea
popf
std
dec
clc
jle
dec
cmp
jo
jg
dec
pop
aam
aad
push
jno
shl
fimull
std
push
jnp
cs
adc
cmpsl
sub
inc
mov
xor
pop
adc
cmpl
sub
adc
adc
jle
jnp
cpuid
mov
sbb
add
pop
mov
or
sahf
lret
mov
lds
js
in
iretw
jp
imulb
push
sub
rolb
hlt
and
cmp
pop
test
mov
push
testb
xchg
or
roll
adc
outsb
in
les
subl
jecxz
sbb
adc
rcl
push
mov
pop
icebp
add
fnstcw
jge
sub
mov
adc
outsl
call
cwtl
inc
ret
inc
mov
dec
dec
add
mov
mov
add
nop
inc
mov
lds
hlt
or
inc
stos
xor
adc
shll
call
inc
sti
test
or
mov
push
jle
xchg
sub
sbb
iret
mov
daa
fisubs
popa
xchg
cld
rcrb
adc
and
pop
pop
sub
js
or
jae
push
jo
xchg
sub
mov
or
jg
aad
daa
cmp
pop
cmp
sarb
enter
or
xchg
mov
jg
mov
outsl
add
mov
inc
pop
movsl
or
jns
in
pop
ret
mov
inc
insb
filds
das
movsb
test
jl
loopne
push
sub
pop
ljmp
mov
das
add
sbb
das
mov
bound
xchg
sbb
in
fcmovnb
daa
js
add
mov
xor
cmovg
pop
pop
frstor
lret
nop
subb
lret
popa
fwait
pop
add
push
mov
cli
lcall
pushf
out
push
fadds
cmp
xor
aam
ds
mov
push
jle
jns
adc
stos
sbb
lods
sahf
mov
aas
clc
dec
cmp
mov
cwtl
sbb
inc
mov
mov
mov
addr16
cs
lods
fs
loope
ljmp
out
pop
ds
mov
cmp
adc
push
cmp
sub
into
aam
addr16
cltd
imul
aad
ds
cmc
xchg
icebp
lock
mov
jne
add
adc
mov
add
jg
dec
pop
test
mov
cmp
adc
int3
rcrb
or
pop
divb
cwtl
push
out
fwait
cs
sub
add
push
sbb
mov
imul
inc
lahf
stos
ja
xchg
pop
dec
cmpsl
out
call
lret
sbb
xchg
aas
and
iret
fsubs
sub
sbb
inc
adc
inc
aam
outsl
mov
divb
jg
out
and
loopne
mov
shlb
xor
pushf
fsts
mov
daa
inc
mov
repnz
dec
inc
push
stos
cmc
in
leave
add
sbbb
push
subl
in
sub
pop
sbb
or
lret
frstor
lret
sti
inc
bound
jmp
sarb
jne
out
into
add
loopne
dec
imul
jo
sbb
push
mov
rcrl
pop
ja
jecxz
fidivl
jbe
mov
lahf
push
xor
dec
test
push
pushf
punpckhwd
fs
movsb
repnz
into
inc
and
or
sub
jl
cmp
or
lret
aaa
popf
cmp
mov
sbb
movsb
adc
fldcw
adc
pop
xchg
scas
jno
pop
pop
dec
jge
and
cmp
lods
into
addr16
in
int
pop
std
hlt
pop
aaa
cwtl
repnz
popf
sbb
dec
mov
mov
incb
cwtl
cmpsb
mov
xchg
xchg
pushf
xorb
xchg
xchg
sub
repz
out
or
xchg
cli
jmp
outsl
adc
inc
out
ds
stos
sbb
out
cmp
mov
inc
nop
subb
adc
or
pop
sti
push
lret
pop
bound
cmp
call
inc
test
loopne
mov
fsubs
xor
pop
adc
movsb
shll
pop
fidivrl
loope
je,pn
test
mov
sti
mov
std
mov
into
inc
inc
push
ja
daa
xchg
push
lods
jae
adc
mov
dec
mov
jmp
mov
into
jge
and
adc
popa
out
imul
and
icebp
inc
shrb
bound
aad
fldenv
and
nop
lods
sahf
push
inc
aaa
cmp
and
dec
loope
inc
enter
mov
in
sub
jmp
daa
xchg
in
inc
into
jge
cwtl
jo
stos
xchg
jnp
dec
lods
dec
out
data16
bound
sub
pusha
add
push
fs
add
fmull
cmp
scas
add
adc
push
push
adc
out
xchg
dec
adc
scas
and
stos
inc
mov
mov
int3
sub
js
mov
xchg
sbb
test
sub
mov
sub
mov
pushf
inc
xchg
jle
mov
inc
jp
mov
add
pop
cmp
push
push
stos
xchg
iret
js
stos
cmp
xor
sub
shl
push
mov
lods
push
divl
mov
inc
lods
fcmovbe
stos
bound
jnp
mov
pusha
and
sarl
jo
in
pusha
or
xor
neg
roll
push
adc
daa
mov
sbbb
mov
pop
inc
enter
inc
adc
add
mov
fiadds
nop
divb
scas
int
cs
push
popa
adcl
xlat
jae
pop
fs
sub
mov
je
fisubs
dec
dec
out
loope
loope
cmpsb
push
das
xchg
sbb
clc
xchg
pop
push
rcl
xchg
cmpsb
xor
imul
jbe
rcll
jns
or
xchg
sbb
out
insb
std
jle
rorl
gs
xchg
jb
sbb
aas
test
add
imul
push
sbb
je
leave
adc
movsl
inc
jge
aad
mov
push
lahf
faddl
dec
lods
lods
mov
pop
idivb
mov
add
lret
inc
sbb
movsl
or
add
push
push
dec
sub
pop
aaa
int3
stos
or
cvtps2pi
test
test
inc
fs
cmp
jl
jp
rclb
dec
or
inc
inc
lock
stc
inc
jg
inc
adc
mov
xchg
jg
je
mov
push
or
arpl
shlb
or
sti
ss
push
cmp
cmp
inc
inc
inc
ss
xor
cmp
dec
popf
mov
pfrcpit2
jecxz
outsl
or
int
js
and
mov
dec
leave
xor
mov
dec
mov
pop
push
jo
fidivrs
push
ljmp
insb
push
lods
or
xchg
mov
hlt
xorl
inc
lods
xchg
dec
jle
fwait
inc
insl
dec
lret
and
sti
sbb
push
jl
lcall
lcall
lock
iret
in
pop
mov
ret
out
outsb
popf
imul
pop
enter
and
push
movb
sub
shll
mov
add
xchg
pop
push
ja
and
test
jae
cmp
adc
push
lock
dec
out
mov
mov
andb
hlt
movsl
dec
daa
out
ret
xor
jmp
xor
push
daa
sub
xchg
jp
fisubrl
lahf
jne
mov
fmuls
cmp
clc
lods
arpl
and
cs
inc
dec
mov
dec
outsl
mov
imul
ds
loopne
mov
add
ret
dec
fcomp
lock
shrb
in
arpl
imul
and
jp
cmp
repz
and
mov
or
outsl
mov
cwtl
mov
cmp
mov
jg
add
test
cmp
sbbb
fldln2
push
cmp
jmp
andl
push
sbb
stos
icebp
xchg
push
adc
fwait
xor
jnp
loop
out
mov
in
idiv
push
add
mov
mov
xchg
cmpsb
push
lea
xchg
cmp
out
into
imul
cltd
int3
mov
outsb
mov
xchg
fistpl
push
inc
mov
inc
jb
mov
sbb
les
subb
repz
into
repz
mov
bound
mov
jno
pop
pushf
xchg
je
cltd
insb
dec
jl
fsubp
add
addr16
or
and
add
mov
pushf
repnz
mov
lret
or
sbb
add
push
or
xlat
dec
pop
push
icebp
add
cmp
mov
xchg
xor
xor
xor
add
inc
int3
push
bound
data16
or
ss
sbbb
sub
xchg
clc
aaa
test
testb
mov
in
mov
pushf
arpl
in
push
mov
dec
mov
inc
add
insb
mov
cwtl
lret
lods
xchg
mov
sub
gs
das
std
sub
jl
ds
lret
push
pop
std
lahf
aas
xor
std
enter
pushf
cld
sub
jmp
lds
push
loope
pop
and
loope
shl
xchg
cmpsb
pop
int3
aam
loop
pop
xor
sbb
cmp
sbbl
sahf
dec
add
jbe
lahf
xor
dec
movsl
data16
sub
cmp
shrl
pusha
xchg
les
fwait
aam
or
fs
and
or
movnti
mov
xor
cmp
add
add
cmp
and
push
adc
leave
pop
push
cs
add
inc
lods
in
out
xor
cmp
jmp
mov
pop
dec
loope
rorl
mov
xchg
cmp
jno
ret
push
and
pop
or
xlat
adcl
inc
loope
insb
in
xchg
out
mov
int3
fsubrs
push
stc
adc
flds
and
cmpsb
lock
or
dec
and
cmp
cltd
dec
cmc
sub
and
xlat
mov
loopne
dec
lds
cmc
cmpsl
sbb
xchg
loopne
jb
sbb
or
sub
xchg
inc
mov
xor
mov
subb
or
push
andb
adc
andl
in
push
aad
pop
and
sub
sahf
mov
inc
shl
mov
pop
testl
jb
push
rorl
push
in
shrb
shld
mov
aad
leave
insb
in
xchg
adc
pop
push
mov
arpl
in
dec
insl
clc
mov
ljmp
fiaddl
lock
ja
push
ret
clc
scas
cmp
jb
aad
outsl
icebp
push
add
sub
pop
movsl
adc
pop
ret
mov
sub
repnz
std
repnz
jne
in
xor
stos
xor
std
mov
in
aas
rol
insl
lret
imul
ja
fstl
insb
testb
clc
ret
add
mov
push
out
xchg
test
lret
cmp
jmp
sarb
in
or
and
add
add
mov
pop
fimull
les
jns
dec
pop
adc
jmp
test
mov
callw
pop
iret
jae
imul
xor
aaa
mov
sub
lret
fwait
loop
mov
pop
xlat
in
dec
sbb
jge
mov
outsl
and
or
repz
addr16
rorb
push
jp
insb
dec
insl
popf
xchg
add
dec
xchg
lods
sub
dec
adc
push
mov
imul
jmp
jmp
xor
sbb
dec
sbb
dec
sub
in
mov
mov
and
sti
or
xor
notl
mull
sahf
xchg
jo
outsb
xchg
dec
stos
int
fcomps
cmc
data16
mov
pop
sub
icebp
jg
in
jb
sbbb
cld
es
pop
gs
insb
lcall
dec
imul
or
push
mov
add
test
mov
test
imul
add
loopne
fs
xchg
movsb
stos
es
jmp
movsb
cmp
add
aam
xor
pop
lret
jl
inc
sahf
dec
jle
mov
shr
xor
xor
cmp
and
xchg
cmp
add
leave
cmp
jle
in
aam
sahf
mov
cmp
aam
cltd
ss
and
dec
imul
or
imul
xor
movsb
jne
sub
dec
outsb
shr
js
enter
xchg
dec
and
lock
std
popf
xchg
fldenv
das
jne
in
cmp
adc
sub
int
mov
and
fdivrl
jbe
aad
adc
add
lret
inc
push
push
das
sub
divb
inc
nop
cmp
cmp
or
inc
xor
rep
adc
mov
mov
push
rcr
je
sub
jb
or
sub
sub
xor
dec
lds
adc
ja
jne
and
repnz
or
fwait
icebp
pop
inc
mov
cmpsl
dec
cld
loopne
pushf
dec
xchg
pop
xchg
dec
stc
cli
or
js
mov
in
pop
dec
frstor
scas
cmpsb
pop
shrb
shll
adc
enter
outsl
lahf
insl
ret
sbb
adcl
in
adc
dec
inc
lcall
xor
iret
in
stc
push
sbb
cmp
js
push
call
fs
xor
inc
arpl
mov
jle
outsl
pop
imul
pop
adcl
adc
xchg
adc
les
loopne
inc
js
aaa
cmpb
dec
sub
in
xchg
mov
mov
jmp
push
loopne
jns
cltd
cltd
popa
jb
adc
mov
cmp
push
push
jne
push
inc
jne
mov
sbb
pop
daa
fs
mov
xor
lock
ds
add
cmp
mov
sti
test
stos
inc
mov
cli
sub
mov
jno
js
out
adcl
lahf
mov
pop
and
fldt
ret
fstps
movsl
mov
inc
mov
cmp
push
icebp
daa
mov
pop
pop
int
imul
and
push
add
inc
push
xor
ret
push
js
shlb
dec
loop
rcll
bound
pop
push
xchg
cwtl
mov
aad
add
cmpsb
xchg
call
mov
mov
and
mov
add
push
fsubs
jns
pop
cmp
inc
push
dec
fiadds
add
fistpl
call
push
lret
das
jge
xchg
xor
jne
or
cld
mov
mov
and
mov
movsb
cmpsb
mov
pop
lahf
jnp
adc
cwtl
mov
push
jae
sahf
and
lahf
xor
pop
dec
or
ljmp
syscall
jge
filds
out
jp
dec
push
decl
testl
push
popa
ret
jmp
loop
mov
test
xor
mov
sahf
dec
addr16
mov
std
ret
and
pop
arpl
test
adc
push
test
sarl
sbb
or
dec
adc
leave
jl
mov
pusha
mov
lods
or
push
push
pusha
fadds
push
scas
ds
mov
les
and
jle
push
jge
dec
mov
lea
int
adc
loop
pop
stc
adc
xor
push
or
mov
cmpsl
and
inc
in
in
dec
xlat
out
sub
pop
push
dec
mov
js
fisttps
dec
iret
imul
xchg
andl
sldt
out
xor
adc
adc
repz
add
ret
lock
sbb
jns
add
sub
jno
outsb
push
lds
xchg
sub
adc
inc
or
hlt
lret
orb
aam
or
repz
push
out
adc
adc
test
sub
loop
daa
sbb
testl
sub
aaa
push
inc
aas
ret
inc
rep
lods
xchg
jne
addr16
and
sbb
xor
movsl
jmp
js
lea
data16
mov
lds
mov
xor
xchg
into
les
lcall
bound
stos
mov
lret
lret
daa
mov
repz
popa
sbb
dec
sbb
and
out
das
aas
inc
cmpsb
hlt
add
dec
jl
mov
mov
inc
dec
sbb
int
add
rolb
movsl
or
es
dec
fsts
and
sub
mov
push
fisubs
mov
mov
cmpsb
rcr
movsl
xlat
lods
mov
out
cltd
shrl
mov
bound
dec
idivl
fimuls
and
fwait
rcll
ljmp
les
xchg
inc
jge
iret
fdivrs
push
loopne
xchg
in
leave
pop
hlt
rcrl
sub
into
jg
cmp
cmp
in
movsb
mov
into
cmp
rolb
pop
xor
ss
mov
data16
push
sbb
dec
shl
lret
cmp
test
dec
fistl
dec
xlat
sub
lds
roll
push
fcoml
mov
in
repnz
mov
pop
int
movsl
gs
sbb
sahf
inc
cmpsl
dec
sub
ficoms
mov
push
fsubrs
jo
frstor
adc
push
mov
fstpt
lret
movsl
lods
or
jnp
pop
cmp
flds
cli
jmp
push
pop
lods
xchg
inc
dec
mov
cmp
pushf
nop
mov
loopne
push
cmpsl
xchg
adc
xchg
cmp
popa
pop
test
add
jecxz
or
stc
out
popa
lret
imul
and
out
add
rcll
pop
adc
cmc
orb
push
gs
in
pop
push
into
aaa
out
dec
hlt
cmpsl
jp
test
cmp
xchg
je
mov
dec
mov
pop
and
jo
xor
fcoml
mov
pop
inc
cltd
inc
insb
jecxz
fs
pop
dec
rcrl
js
rcrl
mov
shlb
movsl
into
pop
lret
fdivl
mov
pop
out
loop
sahf
jp
jp
ja
pop
jae
imul
mov
setnp
aas
fcmovu
cmp
jle
cwtl
push
ja
loopne
inc
inc
jmp
fbld
ret
inc
data16
sub
xchg
cltd
adc
sbb
push
smsw
shlb
mov
sub
mov
arpl
pop
dec
sbb
lret
dec
jno
xchg
popf
divb
sbb
sub
pop
fcomp
jae
mov
mov
dec
test
mov
inc
dec
add
push
daa
in
adc
movl
sti
aas
movsb
pop
cmp
fisttpll
popf
jns
fwait
xorl
in
icebp
cmp
call
jns
sti
cmp
push
push
jge
inc
lods
lock
xchg
mov
jmp
stc
dec
adc
popf
push
mov
cmp
or
jns
inc
pop
lods
pushf
enter
mov
xor
adc
push
insb
pop
dec
mov
orl
aad
jmp
aad
movl
clc
inc
arpl
sub
cmp
xor
push
test
or
cmpsl
and
dec
jl
adc
and
leave
jb
dec
jmp
lret
push
dec
jl
push
fldl
push
ja
cmp
mov
xchg
mov
xor
clc
mov
sub
mov
leave
push
jge
cmp
daa
adc
sub
cmp
mov
leave
nop
pop
cwtl
dec
push
lock
jne
lahf
sbb
hlt
movsl
or
ss
xchg
xor
xchg
jo
nop
cmp
xchg
mov
mov
jbe
xchg
das
add
rorl
adc
jg
ja
pusha
mov
mov
add
imul
xor
jp
idivb
jge
sahf
push
or
cmpsl
and
inc
sbb
enter
insb
sub
loope
inc
mov
lds
mov
mov
inc
mov
and
test
inc
stos
std
insl
imul
push
lea
dec
mov
lcall
roll
sbb
mov
lods
bound
outsl
fwait
dec
jp
cmpsl
fidivs
mov
aaa
pause
das
les
mov
push
shl
push
call
cmp
ret
call
adc
mov
cmpsl
push
stc
mov
fcomp
or
in
ret
shrl
and
andb
outsb
loop
lret
mov
xchg
fs
cli
mov
into
pop
outsb
xor
aam
inc
xchg
add
pop
in
xchg
mov
push
pop
dec
lea
add
bound
jmp
aad
imul
mov
xchg
cmpb
add
push
mov
sbb
adc
push
test
push
mov
xor
and
data16
dec
sub
scas
or
sti
jle
int
iret
mov
jb
cld
xor
inc
mov
loope
pusha
dec
sti
ds
aaa
jl
adc
inc
sub
dec
into
jg
roll
repnz
mov
fisubl
int
jge
negl
ss
rep
jle
mov
and
xor
gs
push
cmp
push
jl
shr
inc
cmc
mov
add
and
mov
mov
add
jnp
dec
xchg
or
out
xchg
outsl
stc
or
shlb
scas
pop
scas
nop
fisubrl
sub
fbld
fimull
icebp
jne
xchg
iret
es
push
imul
xchg
fcomp
hlt
add
mov
and
xor
push
xchg
insl
or
jne
aad
mov
inc
sarb
jno
push
or
dec
sbb
clc
imul
stc
mov
addl
dec
call
dec
aad
cli
sbb
jp
jnp
addb
pusha
cli
sbb
fisubs
and
repnz
xor
xchg
xchg
in
cmp
adc
xlat
hlt
imul
add
jge
shll
and
fistl
push
std
sbb
sub
fisttpll
sbb
add
fnsave
ficoml
arpl
je
sbb
push
outsb
dec
out
jge
sbb
js
push
inc
and
cmp
mov
cwtl
ret
cmc
inc
in
popaw
clc
pushf
pop
sti
add
mov
fst
inc
int
shlb
movb
pop
into
aam
aam
xchg
imul
mov
cmpsl
mov
push
lret
mov
mov
inc
lahf
repnz
dec
pop
lea
div
ja
leave
xchg
leave
jo
aas
sub
das
js
xchg
out
xchg
outsb
lahf
xor
inc
decl
int3
jbe
lds
popf
ss
in
movsl
pop
cmp
mov
and
stos
and
ret
push
pop
mov
xchg
push
test
or
aas
jl
testb
ljmp
jo
frndint
jmp
mov
cwtl
xor
dec
jns
mov
xor
push
pop
imul
cld
push
in
cmp
adcb
fimuls
add
mov
in
lods
cmp
sbb
cltd
je
jne
inc
shr
pop
push
test
es
js
push
or
cmc
addr16
lcall
lret
jnp
int3
out
repnz
ljmp
into
xorl
xchg
enter
jmp
loop
lods
xchg
je
fcomi
pusha
stc
push
sbb
sub
cwtl
fistps
xchg
push
and
scas
arpl
push
sti
inc
data16
sbb
mov
and
rcll
adc
mov
inc
cmp
dec
jle
cwtl
push
xor
push
pop
call
mov
push
mov
lock
pop
cs
adc
push
sti
test
das
sbb
jbe
outsl
sub
xchg
jmp
dec
aas
loop
or
ret
aaa
inc
ficoml
bnd
out
cli
loope
leave
mov
cmp
mov
mov
adc
mov
js
je
sbb
movsb
fs
js
sub
std
dec
pop
rcrb
loopne
push
repnz
sub
sub
ret
idivl
pop
xchg
mov
push
push
outsl
or
in
xor
lcall
lret
cmpl
lods
jnp
jbe
jbe
mov
mov
sub
cmpsl
stos
mov
dec
mov
cltd
push
aam
hlt
cmovs
pop
cmp
and
clc
iret
mov
testl
and
notb
mov
xor
sbb
xchg
sub
js
push
push
adc
pop
xchg
sbb
ja,pt
sub
clc
rolb
loope
dec
repnz
adcb
mov
cmc
rorl
mov
notb
mov
mov
les
push
mov
sahf
adc
mov
mov
mov
outsl
bound
xchg
sbb
std
fiadds
mov
addr16
dec
aam
jp
mov
shll
dec
xor
loope
sbb
dec
add
lods
dec
out
push
inc
popf
psubq
pusha
in
push
adc
push
icebp
shrb
sub
dec
pop
shl
pop
dec
inc
int3
adc
arpl
mov
sbb
xor
xorl
jns
push
push
adc
sbb
cmp
jnp
sbb
push
pop
fnstsw
mov
cmpb
xchg
idivl
mov
push
or
xchg
pop
fidivs
and
pushf
arpl
inc
aas
or
jno
pop
add
lods
add
mov
and
fldt
sbb
test
jno
sahf
int3
jl
xchg
stc
push
fsubs
push
rcrl
out
mov
adc
mov
adc
xor
scas
subl
clc
ret
and
add
clc
push
inc
mov
inc
jns,pn
aaa
jns
stos
inc
fimuls
cmp
fwait
rcr
jns
fwait
les
xor
lods
jl
or
loop
jb
add
add
add
xor
push
jle
cmp
add
jae
xchg
lock
inc
call
out
clc
push
xor
xor
outsb
arpl
decl
jb
jp
ss
pop
inc
je
dec
pop
mov
into
stc
fwait
cmpsl
ds
add
jp
cltd
add
das
add
push
pushf
xchg
cs
push
mov
xchg
fstp
stc
add
inc
pop
jmp
sub
xor
aad
ds
and
jg
xchg
test
test
ret
ficomps
and
xchg
scas
jne
aaa
xor
jae
gs
sub
pop
xchg
push
je
adc
xchg
fistpll
cld
inc
xchg
and
dec
rolb
sbb
test
lea
filds
loop
test
jnp
idivb
inc
ficoms
push
cmpsb
mov
aas
pop
mov
jp
jno
out
sub
daa
ljmp
inc
sbb
outsb
push
aad
xor
inc
mov
out
pop
in
test
push
roll
push
shll
faddl
dec
insl
cmp
out
push
iret
sbbb
clc
les
jmp
add
imul
adc
xor
pop
mov
xchg
xorb
mov
in
test
inc
enter
sarb
mov
sbb
cmpsb
and
dec
test
mov
jge
adc
add
nop
mov
jno
ret
mov
dec
xchg
mov
xor
mov
int
mov
jecxz
sbb
mov
movsl
add
xchg
scas
sub
xor
gs
outsb
jge
aad
sti
cmp
sbb
loop
inc
mov
repnz
pop
pop
into
add
pusha
mov
div
sub
movsb
loopne
lret
into
add
pop
scas
dec
or
adc
xchg
mov
out
lock
dec
or
cwtl
mov
inc
in
pop
push
out
pop
inc
cmp
mov
push
push
movsb
cld
fwait
gs
inc
aam
xor
jl
mov
adc
fdivp
pop
jbe
repz
pushf
pop
mov
in
jo
cs
ror
mov
and
outsl
adc
push
inc
dec
dec
aas
jo
mov
daa
shl
cs
xchg
cmc
ja
fcomps
jo
sahf
dec
adc
ss
jge
adc
test
dec
stc
and
mov
xchg
jl
lret
scas
add
pop
mov
bswap
dec
add
aas
lock
sbb
xchg
sub
inc
xchg
adc
loop
mov
decl
icebp
lods
hlt
adc
sub
mov
lds
xlat
adc
leave
push
std
and
mov
lock
mov
sbb
sub
mov
fdivrl
push
xchg
adc
pusha
inc
sub
aad
nop
cmp
loop
mov
test
and
aad
inc
cmp
push
jb
inc
iret
pop
in
fwait
and
imul
jg
adcb
push
clc
cmpsb
jl
push
mov
xchg
rcrl
cmpsl
in
mov
jns
push
adc
mov
cmpsb
loopne
pop
data16
jbe
xchg
push
movsb
es
imulb
ficompl
std
inc
lahf
sub
jb
adc
xor
cmc
add
subb
pop
adc
stos
aas
cli
cld
jle
mov
test
in
mov
in
sarb
rol
dec
push
out
fbstp
inc
jp
sub
jmp
mov
jne
xchg
in
lds
mov
iret
add
lods
pop
mov
dec
xchg
xchg
add
ret
sub
mov
sub
lods
xchg
clc
ja
mov
jg
nop
add
dec
fstpl
jmp
frstor
push
enter
mov
aaa
mov
icebp
sub
add
push
push
push
adc
js
push
xor
and
out
outsb
mov
subl
sbb
in
cmp
push
pusha
movsl
popf
xor
imul
sub
pop
std
fsts
dec
push
pop
mov
addr16
pop
xor
pop
xchg
add
pusha
push
mov
imul
loope
jae
and
xchg
das
xchg
push
jns
in
jg
dec
sahf
mov
add
mov
ja
pop
sar
sarl
pop
inc
stc
lret
sub
nop
push
jo
pusha
adcb
movsl
and
outsb
pop
cmp
data16
mov
jle
and
mov
pusha
aad
std
movsb
xor
or
outsb
pop
jbe
std
repnz
enter
pop
add
icebp
int3
inc
mov
cmp
call
andl
fsubrl
adc
sti
ljmp
adc
call
jns
xor
add
push
jmp
lods
mov
mov
cs
jg
xor
mov
xchg
sar
push
repz
fisttps
and
adc
push
cmp
repz
lock
mov
test
imul
mov
daa
dec
inc
mov
push
imul
fiaddl
mov
mov
je
fs
mov
in
and
and
dec
into
fwait
and
dec
in
pop
mov
stos
mov
out
push
mov
xchg
fildl
dec
loop
jno
je
mov
mov
and
and
push
xor
cli
fbstp
insl
jg
cmpsb
jns
mov
and
adc
ja
shll
mov
sbb
jns
xor
push
imul
leave
or
add
adc
and
stos
fsubp
push
enter
insb
lcall
out
inc
xchg
dec
loopne
les
sbbl
mov
mov
mov
dec
inc
pusha
jecxz
in
or
mov
nop
dec
pop
add
ret
aad
add
inc
cmc
rolb
or
sub
aam
inc
addr16
or
sbb
and
stos
aad
cs
cmp
mov
jb
addr16
in
imul
push
fists
mov
adc
clc
cmp
out
cmpsl
xchg
push
in
pop
sar
arpl
or
push
shll
dec
test
mov
jl
pop
loopne
xchg
inc
jno
sbb
int
xchg
ja
pop
shrl
mov
les
and
scas
cli
push
add
ds
bnd
mov
xor
inc
mov
xchg
aas
rol
xor
or
les
inc
or
xchg
sub
test
xchg
inc
inc
push
cmpsl
xchg
stos
aad
sub
add
mov
jae
ds
lods
ljmp
cmp
std
sub
test
mov
mov
xor
outsl
loopne
sub
jne
pop
popl
adc
adc
pop
ja
jb
pop
ss
fistps
aaa
clc
adc
mov
std
and
sbb
dec
sbb
js
pop
lcall
pop
lds
mov
into
jmp
inc
scas
cmpsl
arpl
inc
cmp
sbb
int3
in
lods
out
int3
imul
movsl
sbbl
push
sbb
sbb
dec
mulb
push
jns
jae
aas
adc
sbb
xlat
sub
pop
call
imul
jle
cmp
add
pushf
jge
insb
push
bound
fmuls
and
sbbl
les
push
loope
sahf
add
pop
fucomip
jno
jl
sbb
mov
mov
stc
xchg
ja
cwtl
mov
sarb
inc
mov
dec
mov
sub
cmpsb
flds
jno
adc
les
sahf
stc
sub
repz
mov
jae
jp
cwtl
pop
mov
stos
xor
cmp
decb
fidivl
add
imul
dec
xchg
in
xchg
or
push
sub
and
sbb
sbb
mov
lret
aas
aaa
xor
xchg
ss
inc
pop
lret
dec
mov
stos
and
lcall
cld
jp
insl
cmp
xchg
sbb
test
jae
cmp
ja
lods
mov
gs
shll
xor
nop
nop
or
mov
and
dec
roll
add
xor
cmp
inc
sub
xchg
rorl
jbe
adc
add
mov
mov
dec
dec
ja
lcall
fisttpl
jp
pop
xchg
cmpsl
mov
or
xor
popf
pop
jle
mov
push
outsl
or
testl
test
psubsw
and
lret
mov
ss
rcr
or
pop
sbb
push
dec
rorb
jmp
mov
xor
je
xchg
icebp
mov
mov
cmpsb
fdivrl
jecxz
add
adc
lret
adc
cmp
std
jb
and
cmovl
test
adc
dec
pusha
into
mov
sub
pusha
mov
outsl
adc
inc
sub
bound
mov
and
rclb
sbb
xor
add
xor
jge
in
mov
ret
dec
mov
lods
outsb
insb
adc
es
add
dec
std
das
sub
int
xor
sub
jl
mov
sbb
out
ret
test
xor
insb
test
dec
pop
mov
into
dec
cmpsl
jne
inc
xchg
cmpsb
je
dec
movsl
dec
jge
aaa
hlt
cwtd
addl
or
add
aad
enter
sbb
imull
mov
pop
mov
outsb
imul
das
andl
pop
add
insl
jne
add
jle
cwtl
sti
mov
lret
inc
mov
push
pop
pop
mov
pop
mov
xchg
jl
lahf
mov
jne
jbe
pop
dec
sbbb
pop
add
inc
mov
sbb
inc
xor
and
leave
pop
movsb
subb
pop
and
mov
or
jne
or
popa
insl
stos
ss
push
aad
push
cwtl
mov
lahf
push
or
xchg
adc
jl
xchg
add
xor
pop
nop
cmp
xor
jle
lret
and
les
fistpl
adc
in
jg
jb
sbb
outsl
sub
push
leave
scas
fnstenv
mov
insl
test
sub
in
add
push
add
cmp
cmp
cs
scas
call
ds
ljmp
js
adc
xchg
push
sub
mov
push
pop
out
fmull
jge
cwtl
orb
das
shll
lahf
dec
stos
pop
daa
daa
rorb
fmul
jbe
loopne
push
ljmp
in
inc
stos
dec
jl
lcall
mov
mov
cmpb
hlt
ret
mov
or
mov
sahf
cmpsb
loop
aaa
jno
in
cmp
and
addr16
into
mov
push
adc
pop
xlat
repnz
jae
xor
pop
sbb
inc
cmp
jl
push
dec
data16
push
faddl
xchg
or
cli
push
adc
pusha
int
js
and
and
jge
xchg
or
inc
pop
inc
mov
stc
xchg
inc
push
mov
adc
adc
sub
mov
arpl
fsubr
stos
pushl
dec
ret
push
lcall
int
cmp
inc
jo
movsl
ja
xchg
out
test
jle
push
cs
mov
insb
pop
jge
shlb
leave
mov
or
sti
xor
ljmp
ss
mov
inc
xchg
loope
fisttps
cld
cld
aaa
rolb
mov
bound
cmp
test
mov
mov
adc
fisttps
inc
mov
dec
pop
arpl
adc
pop
sar
ja
ret
jne
icebp
loope
mov
xchg
push
jae
mov
ljmp
or
or
push
pop
popa
pslld
sbb
ret
scas
pop
adc
and
ret
pop
add
xchg
das
or
enter
movsl
adc
clc
imul
mov
shl
xor
orb
lods
imul
xor
push
sbb
jle
jecxz
sbb
dec
cli
lods
int3
mov
test
rcll
dec
jge
sti
push
adc
in
pop
sub
add
ljmp
cltd
xor
movsl
in
pushf
cld
and
mov
pop
movsb
xlat
and
pop
push
aad
dec
pop
sub
insb
adc
lock
xchg
fld1
shl
mov
pop
or
sub
repnz
jle
nop
std
adc
cmp
aas
into
push
ror
addr16
mov
dec
sub
in
scas
cli
cmp
xchg
inc
xor
popf
mov
mov
xchg
daa
outsb
adc
jae
dec
call
mov
mov
xor
stos
lahf
adc
or
inc
jle
repz
ror
push
icebp
xor
aam
push
gs
pop
mov
mov
sar
jge
out
out
outsl
dec
push
xor
cmp
sbb
fwait
test
adc
cmp
xor
leave
push
imul
and
mov
inc
pop
xor
imul
inc
insb
dec
retw
rclb
inc
fnclex
pop
or
inc
sub
push
xor
and
fdivrl
je
sub
popf
dec
or
sub
cmpsw
sub
pop
in
dec
xchg
sarl
data16
jae
enter
mov
mov
int
sbb
fbld
insb
test
pusha
test
sahf
std
test
mov
mov
stos
enter
lods
call
sbb
out
call
int
cmp
xor
rcr
push
pop
movsb
jb
or
pop
jge
and
cmc
pop
test
gs
adc
sarb
xor
aaa
mov
shrl
jnp
ja
inc
pop
jae
lods
adc
adc
lock
pop
hlt
or
lret
mov
enter
rcl
in
push
loope
sahf
add
xlat
jp
clc
cmp
mov
movl
pop
popf
jecxz
icebp
movsl
cmp
cltd
add
andl
loop
add
cld
dec
shl
andb
lock
inc
movsb
cmpsb
sbb
jge
test
dec
sub
lahf
pop
dec
xlat
sub
fldl
into
addb
inc
loopne
adc
fmul
jg
mov
je
xor
sub
add
js
xor
xchg
movsb
aas
movsl
lret
jns
das
lcall
adc
xor
pop
mov
sub
les
sub
hlt
fisttps
movsl
jp
xor
fistpll
cli
test
push
jle
scas
adc
bound
xor
gs
in
mov
jle
incl
inc
xor
out
mov
ds
and
movq
pop
xlat
movsb
icebp
mov
sahf
cs
pop
iret
mov
shl
mov
cmpsl
loopne
repz
pop
fwait
in
or
cmp
xor
es
jle
in
cmp
jns
inc
pop
push
aaa
imul
xor
cmp
push
repnz
or
push
and
xchg
shlb
inc
sbb
out
adc
jbe
lret
nop
push
enter
cli
movsb
jb
and
push
inc
jp
mov
adcl
pop
daa
cmpsl
enter
jb
cmp
int3
repz
mov
push
mov
dec
and
pusha
lcall
mov
hlt
add
mulb
cmpl
fdivs
icebp
mov
xor
data16
popl
and
pop
lret
shlb
jnp
jbe
or
mov
sarb
xchg
sbb
lahf
shrl
dec
fs
fld
push
daa
fidivs
xchg
roll
out
fiaddl
jne
sub
xchg
push
test
pop
push
fcoms
pop
out
add
pop
rclb
cmp
movsl
inc
mov
xor
sbb
sbb
out
sbb
pop
jbe
dec
repz
stc
or
adc
dec
lea
pop
addl
into
aaa
xchg
dec
pop
aad
sbb
repz
sbb
jp
mov
mov
lret
xor
into
lahf
js
mov
adc
xchg
enter
fdivl
faddl
insl
add
out
jb
dec
insl
stos
inc
fwait
adc
into
mov
mov
pop
mov
pop
and
out
out
lret
lea
sbb
pusha
popf
xor
jns
or
aam
cmp
pop
add
cmc
dec
lret
and
arpl
or
shrl
sbb
add
test
inc
je
leave
movsl
jle
jle
push
enter
loope
in
jecxz
repnz
test
xchg
sub
mov
jbe
orb
das
test
movsb
negb
repz
enter
mov
mov
xlat
mov
xlat
loope
imul
das
stos
mov
sbb
cmpsl
aas
push
rorb
clc
cmp
jmp
insb
lahf
fdivrl
aad
sbb
jne
xchg
push
cmp
mov
out
pop
cmp
es
sbb
cmp
cmp
cld
aad
lock
call
addr16
push
cmp
jecxz
icebp
and
sbb
insb
pop
pop
hlt
dec
cmp
setae
clc
lcall
sbb
mov
cmp
out
sub
sbb
rcl
js
pop
push
nop
mov
addb
lds
popf
aam
jmp
in
lret
dec
or
lods
mov
in
lret
push
xor
mov
pop
push
test
mov
jle
testb
push
popf
add
adc
inc
xchg
roll
cs
inc
sbb
dec
out
pusha
mov
xchg
or
and
jb
push
ret
or
or
ret
mov
mov
call
add
jecxz
push
and
add
out
pusha
out
rorb
scas
popa
cmpsb
pop
add
rcr
ret
pop
loop
jno
cmpsl
add
inc
mov
cmc
nop
mov
xchg
dec
pop
out
in
and
lea
push
rorl
or
sahf
mov
xchg
lds
int3
addps
sarl
push
ss
in
pop
insb
popf
jbe
sub
mov
mov
cmpsb
dec
imul
shl
mov
mov
outsb
testl
add
test
inc
sub
mov
or
in
lods
inc
mov
sub
mov
adc
out
out
and
inc
outsl
rol
or
mov
cltd
mov
adc
jae
jae
imul
sub
push
mov
xlat
and
scas
lock
sbb
mov
test
sahf
mov
insl
dec
popa
fs
or
pop
mov
fcom
mov
dec
loop
rol
jbe
loope
inc
mov
les
cmp
test
add
jo
movsb
cmpb
or
mov
mov
dec
daa
stc
dec
cltd
push
push
mov
icebp
xchg
cmpl
and
xor
adc
roll
xor
xchg
inc
add
mov
push
sub
jbe
in
pop
or
nop
add
pop
and
addr16
jbe
inc
js
inc
mov
shlb
inc
pop
stc
arpl
testl
es
and
push
pop
ret
adc
sbb
xchg
xor
mov
sbb
xor
mov
lea
mov
fs
cmp
inc
sahf
pop
sub
out
data16
or
ret
repz
mov
fnstcw
pop
cmp
in
ret
push
sub
xchg
xchg
cmp
stos
lret
fbstp
aaa
aas
mov
xchg
fwait
outsl
test
into
das
in
jl
in
xlat
scas
scas
roll
mov
addb
andl
cltd
dec
ret
cmp
ret
and
cmp
cltd
or
add
test
daa
add
movsb
xor
fwait
fs
shrb
call
lcall
xchg
aad
cmpsl
cmc
push
inc
in
aam
mov
aas
adc
daa
addl
data16
std
pop
adc
and
fcompl
push
or
fs
push
push
or
popa
cmpsl
aaa
sahf
sub
xor
sub
in
mov
arpl
fsubs
cs
mov
iret
sbbb
arpl
leavew
adc
mov
pop
das
out
addr16
and
jecxz
ret
je
jmp
rorb
ficoms
dec
or
adc
inc
leave
dec
mov
popf
in
sbb
int
xchg
test
test
divl
mov
in
mov
mov
sub
pop
mul
push
in
cmc
sub
inc
cmp
std
sbb
gs
jo
xchg
shll
ja
push
pop
lret
lahf
sub
mov
adc
aad
out
push
and
mov
testb
cmp
jl
ds
popa
imul
fwait
mov
xchg
inc
fs
add
and
pop
insb
xor
push
int
adc
mov
je
and
int
sbb
inc
add
sbb
push
xorb
jb
jns
xchg
xchg
and
stc
mov
sbb
mov
out
mov
jne
cli
pop
dec
add
gs
pushf
xchg
fs
aad
popf
xchg
and
mov
pop
aaa
or
push
andl
scas
call
shrl
dec
fwait
dec
addr16
dec
ds
jne
mov
and
fwait
jbe
push
cmp
xchg
jns
jecxz
xchg
loopne
push
mov
adc
jb
pop
mov
mov
stc
lock
popa
stc
cmovae
js
lds
push
fisttps
cli
out
push
mov
mov
bound
xchg
and
in
int3
js
bound
aad
shrl
jns
mov
cli
rcr
push
stos
dec
fwait
shrl
pop
mov
clc
pop
mov
pop
sub
jnp
push
cmp
add
pop
daa
scas
mov
pop
sar
out
dec
out
aas
test
rolb
mov
inc
repz
sub
dec
scas
ret
loop
jp
sub
or
sub
jg
jecxz
xchg
dec
xchg
fdivrl
xchg
pop
movsl
jbe
bound
xor
pop
outsl
pop
cmp
mov
movsl
into
vzeroupper
xor
mov
shrl
popf
aad
pop
jecxz
inc
je
das
hlt
test
and
jle
sbb
mov
shlb
nop
mov
mov
pop
out
adc
sbb
adc
inc
pop
cmp
xchg
aaa
push
lds
aam
in
ss
push
mov
mov
std
mov
aas
int3
shll
into
xor
mov
fwait
lock
lahf
adcb
aam
sub
mov
mov
imul
or
je
sbb
mov
shrb
mov
in
sbb
adc
push
insl
cmp
push
jne
xor
fisubrs
idivl
cmpl
mov
imul
pop
add
mov
popa
jp
or
sub
lods
cld
pop
pop
and
popa
jb
sbb
outsb
pop
pop
and
flds
sbb
test
push
mov
xor
sbb
dec
loop
popf
push
cli
mov
mov
jecxz
mov
mov
aas
ss
dec
test
push
outsl
int
les
jg
pop
lret
sti
mov
pop
repz
negl
and
or
add
and
sbb
jmp
lds
mov
add
dec
insl
mov
sub
cmp
xor
jbe
jmp
dec
push
pop
sbb
and
jo
sbb
in
leave
or
cli
clc
vmwrite
push
or
pop
mov
adc
jno
jns
xchg
stos
mov
and
insl
in
and
lar
ds
pushf
pop
cwtl
inc
xchg
out
add
insb
fcmove
xorps
xor
inc
pop
enter
lahf
aad
dec
jle
or
jl
mov
jmp
adc
repnz
mulb
adc
xchg
jecxz
jno
xchg
lea
inc
fiadds
mov
add
dec
imul
js
ljmp
jmp
mov
loopne
repnz
mov
in
cmp
mov
addl
or
dec
dec
in
repz
pop
or
or
cmp
repnz
fadds
dec
loope
xor
push
add
cmpsl
pushl
ljmp
fisubl
inc
shrw
sti
movsl
lcall
xchg
daa
jnp
mov
std
loope
push
mov
jnp
xchg
cmp
mov
jle,pn
inc
ds
jno
add
gs
xchg
ljmp
pop
mov
mov
scas
mov
push
pop
push
ret
into
es
jle
aad
push
mov
cli
mov
je
or
fs
mov
xchg
dec
outsb
sub
jb
mull
cmp
adc
adc
pop
add
rclb
aaa
test
xor
push
jno
add
pop
xchg
inc
adc
add
sbb
cmp
mov
inc
add
fsub
outsl
jl
and
push
xor
dec
sub
daa
xor
sbb
cltd
pop
pop
gs
mov
pop
in
xchg
iret
cmp
mov
dec
fdivl
insb
inc
lea
sbb
jo
mov
inc
mov
sub
add
pusha
cmpsb
iret
jae
add
sbb
outsl
stos
divb
xor
cmc
pop
scas
cmpsl
dec
mov
jecxz
xchg
test
loop
outsl
aaa
repnz
pop
loop
and
push
xor
fwait
mov
loope
pop
int3
cmpsl
inc
lds
or
jmp
mov
loop
aam
push
sub
bound
ror
out
mov
jnp
xor
cmpl
or
scas
sbbb
repz
ds
inc
push
aam
and
mov
shlb
ds
fs
movsb
fldenv
jns
or
fs
bound
dec
jge
cwtl
or
sti
cwtl
fwait
sbb
cmp
mov
in
dec
mov
sbb
fs
pop
bnd
loopne
icebp
jmp
sahf
out
mov
or
mov
jne
push
dec
xlat
inc
lahf
cli
mov
shlb
pop
jno
outsl
cmp
sub
push
xchg
in
xchg
xchg
mov
push
arpl
icebp
mov
xor
out
push
imul
mov
mov
mov
or
cmp
or
cmp
sti
test
fdivrl
mov
mov
jecxz
jle
icebp
stos
stos
fnstenv
lcall
pop
xchg
sbb
dec
cmp
mov
shlb
mov
int
sahf
stc
fwait
test
jae
aam
add
cmpsl
adc
push
and
mov
push
insl
inc
mov
adcb
adc
or
push
roll
rcll
aas
inc
ret
jecxz
pop
xchg
and
sub
scas
call
test
call
xchg
mov
xor
inc
je
mov
cmc
cmpsl
fucomp
sub
and
mov
pop
pop
pop
push
jns
mov
js
xchg
dec
or
pop
cmpsb
xchg
aaa
sbb
xchg
pop
arpl
shl
inc
movups
mov
sbb
cltd
xor
sub
xchg
xchg
mov
sarb
adc
push
faddl
sub
ljmp
out
sub
insb
sahf
movsl
push
loop
pushl
mov
mov
jae
in
repnz
jns
lock
sbb
std
int
cmpsb
push
aaa
sbb
push
inc
adc
popl
and
imul
dec
adc
pop
fsubrs
xor
std
jmp
cmp
xchg
pop
mov
scas
push
repz
xchg
adc
inc
mov
adc
dec
mov
mov
cmpb
sub
jp
lea
sub
bound
push
dec
sbb
mov
mov
fadds
cmc
and
add
rcl
sti
add
jne
in
lods
dec
push
pop
iret
jmp
sbb
dec
mov
testb
std
cmp
subb
push
cmp
adc
test
mov
js
jnp
mov
sbb
imul
and
mov
lahf
dec
mov
mov
arpl
jbe
pusha
cmp
xor
push
pop
fidivrs
mov
enter
fidivl
push
adc
jmp
xchg
int
push
loop
mov
ret
xor
jnp
xchg
sbb
mov
bound
into
sarl
js
dec
icebp
aam
pop
xor
arpl
scas
mov
test
stos
aaa
pop
testb
sub
xorb
ss
pminub
rcrb
and
roll
sub
jmp
pop
and
mov
mov
sub
cmpsl
mov
dec
fs
mov
sbbb
mov
fincstp
mov
xchg
pop
sub
adc
idivl
mov
gs
adc
mov
pop
insb
inc
sub
or
je
not
idiv
mov
mov
cltd
add
or
inc
and
das
push
pop
cmp
int
sub
pop
mov
xchg
stc
mov
cli
pop
repz
cmp
dec
jecxz
push
mov
pop
lret
sbb
inc
jmp
stc
push
jle
add
xor
cmp
sub
pop
add
lahf
ficoml
jns
mov
mov
xchg
add
in
test
cmp
loope
movl
add
dec
rorb
inc
outsb
lock
ret
inc
mov
ja
or
jp
jp
xchg
sbb
lahf
xor
xor
jne
icebp
push
mov
sub
int3
xchg
cmp
cmp
out
sahf
mov
or
shr
mov
scas
outsl
repnz
and
shl
in
je
repz
int3
mov
jl
push
aas
in
lret
inc
rep
add
lea
nop
cmp
mov
jnp
cmpsl
jnp
add
pop
sbb
scas
xchg
mov
fildl
dec
lret
mov
or
loope
dec
push
mov
outsb
add
inc
fildl
lcall
mov
push
adc
int
jge
shrl
jno
cmpsl
scas
adc
ss
add
xchg
jns
pop
push
dec
dec
mov
sti
int
jg
pushf
repnz
push
data16
pop
out
xor
scas
cltd
or
xchg
xchg
loope,pt
jg
call
push
cmp
and
pop
fbstp
popa
mulb
jnp
lea
dec
sbb
xchg
cli
mov
sahf
lea
ds
cmp
sbb
aas
test
dec
mov
das
sbb
inc
adc
mov
imulb
and
pop
lds
mov
xor
or
imul
push
mov
ss
lahf
cwtl
adc
stc
jns
cld
sub
loope
sbb
jae
mov
or
adc
add
pusha
cld
loopne
into
and
stc
mov
call
mov
sbb
mov
enter
dec
or
pop
push
movsb
out
mov
adc
pop
mov
pop
adc
mov
fdivl
loope
rcrb
jae
inc
add
mov
cmpsl
jl
in
xchg
into
clc
test
xlat
call
mov
shlb
add
xchg
shrb
sti
mov
adc
sti
xchg
les
dec
push
mov
mov
sub
push
lretw
or
xor
data16
scas
or
call
dec
mov
in
jne
lret
shlb
insb
adc
imul
push
pop
ja
mov
in
insb
jo
fadd
push
inc
jp
xchg
sbb
bound
mov
imul
dec
inc
iret
jp
pop
or
sarl
rcl
hlt
ret
adc
jl
pop
roll
push
outsb
lds
dec
mov
outsb
mov
push
push
adc
jmp
adc
mov
sbb
pop
out
jle
out
pushf
stos
xchg
push
cmp
mov
faddl
mov
push
jae
lea
xlat
add
cmp
cmp
sbb
jle
ss
push
mov
and
lret
xchg
sub
ficoms
iret
and
inc
pop
xchg
mov
arpl
aam
cmp
ss
pop
lret
add
pop
mov
jae,pn
mov
or
xor
adcb
bound
cld
pushf
mov
jno
int
imul
cmp
dec
test
stos
dec
sbb
fcmove
das
stc
jbe
cmp
nop
mov
mov
cmp
xchg
int
test
push
imul
jmp
lcall
leave
pop
pop
fadds
xchg
mov
sahf
cmpsl
push
ja
lcall
adc
jns
cmp
ds
xlat
fdivl
rcll
inc
es
sub
sti
add
ret
ja
and
outsb
pop
mov
and
aaa
clc
xor
pop
and
and
lock
dec
mov
cli
sub
pop
sub
enter
pop
mov
mov
pop
add
lret
loop
sub
xchg
mov
pop
and
mov
out
pop
mov
in
and
pop
in
mov
and
frstor
mov
cltd
out
test
mov
repz
stos
jb
jb
js
cmp
ja
jl
call
insl
es
xchg
idivl
pop
sbb
cmp
sbb
mov
mov
movsl
rcrl
ss
iret
xchg
push
ret
push
jae
push
jp
out
mov
stos
out
sbb
fs
je
cmpsl
sbb
sahf
pop
lods
pop
movsl
aas
lahf
repnz
push
adc
shr
and
jecxz
mov
add
jl
xchg
pop
xor
mov
loop
std
aaa
js
mov
call
ficoml
push
xor
nop
fadd
call
pop
jp
js
and
or
xchg
inc
sub
mov
sub
scas
sbb
cltd
mov
frstor
cli
mov
cmp
dec
cmp
xor
aas
sub
xor
sbb
push
mov
repz
fadd
addr16
js
shll
pusha
ljmp
inc
jae
sbb
push
mov
or
addr16
or
or
nop
pop
cmp
jae
push
fldl
mov
subb
lock
xlat
loope
pop
sub
inc
mov
push
pusha
cmp
pop
mov
ret
inc
aas
icebp
inc
push
loope
push
jne
cmp
dec
cmc
jmp
pop
dec
and
xchg
movb
add
testl
sbb
sub
fwait
leave
mov
mov
faddl
mov
dec
adc
cmp
and
push
out
dec
rolb
add
into
cmpb
mov
pushf
inc
gs
and
out
sbb
fcompl
push
movsb
sarb
dec
xchg
fists
mov
push
lret
xor
cmp
test
mov
in
ds
sub
jb
je
sbb
test
repnz
add
repnz
mov
dec
jmp
inc
xchg
sbb
lcall
jno
inc
mov
loopne
and
or
adc
jbe
mov
stos
jbe
jo
int
add
lahf
dec
mov
sub
cmp
int
movsl
loopne
lock
xchg
xor
sbb
pusha
gs
mov
mov
xor
dec
sbb
jmp
mov
movsl
xor
scas
es
insb
dec
fiaddl
aad
outsl
xor
mov
sti
aas
cmp
mov
roll
dec
jnp
mov
mov
xor
sub
push
add
jg
movsb
fsubrl
mov
sbb
fidivs
xor
xchg
pusha
fiaddl
dec
je
cmpsb
ret
shll
mov
sbb
cli
push
in
xor
lret
call
mov
lcall
jb
in
jp
out
and
mov
aam
outsl
cmp
test
pop
xor
scas
mov
fwait
sbb
mov
ret
mov
inc
mov
in
jl
xor
lds
sbb
cmp
mov
dec
push
pushw
xor
mov
pop
or
icebp
ret
jg
hlt
push
cltd
pop
out
and
add
out
popf
sub
xchg
in
mov
fiaddl
stos
push
aas
incb
ja
out
dec
cld
arpl
andb
ret
leave
xor
mov
sar
push
repz
xchg
or
adc
rcrl
fdivl
arpl
rolb
cli
pop
pusha
vpbroadcastw
sub
testb
mov
rcrl
xchg
sti
dec
jbe
rorb
fsubs
push
xor
mov
das
ja
or
scas
repnz
and
lret
lock
jb
mov
inc
jmp
mov
and
and
call
dec
nop
outsb
call
xchg
repz
das
inc
adc
push
pop
js
mov
or
enter
scas
push
ss
lret
pop
xchg
mov
or
in
loop
lds
jp
loop
lods
jae
push
pop
loop
push
mov
lods
pop
sub
lret
push
cwtl
cmpsl
lods
add
popf
fists
jp
add
pop
movsl
xchg
mov
sbb
pop
in
out
lds
mov
xor
cwtl
test
cmpsl
test
ret
add
mov
mov
fsubrl
es
out
pop
ret
mov
es
in
xchg
xchg
pop
addl
sbb
fdivr
outsl
or
adc
rolb
mov
jae
xchg
inc
arpl
or
mov
cli
pop
adc
out
movsb
cwtl
scas
pop
pop
lea
pop
les
in
cmc
lcall
push
sub
sahf
outsl
jno
mov
push
loop
sub
mov
push
sbb
mov
sub
addb
inc
es
lds
sub
dec
fadd
mov
push
stc
inc
in
add
and
frstor
xchg
adc
enter
das
mov
sub
pop
ss
adc
mov
lahf
jge
jle
test
nop
cmp
pop
jge
push
mov
cmp
leave
outsl
dec
das
shlb
pop
or
sbb
into
lock
jle
jecxz
add
lock
cmpsb
daa
xor
call
out
jbe
push
pop
jb
pop
mov
out
mov
stc
fsubl
xchg
jnp
cmp
hlt
movsb
sub
mov
push
jp
bound
mov
insb
inc
sub
fldenv
jle
in
push
ds
out
mov
sbb
pusha
jno
cld
mov
and
xorl
dec
jl
dec
sub
aad
jl
and
cmc
loopne
lret
bound
out
add
jl
jg
sub
mov
ja
lock
shrb
pop
cmp
xor
gs
mov
dec
push
pop
aaa
lods
sarb
scas
pop
sbb
jp
mov
xor
xchg
nop
mov
pop
outsl
add
sbb
pop
in
ds
sub
rcll
adc
add
movsb
jne
outsb
movsb
mulb
fwait
sahf
cmp
sub
addr16
fistl
jle
imul
mov
pushl
xor
aas
mov
test
jae
pop
pop
or
ljmp
movsb
sti
add
pop
and
sbb
cmp
xchg
bound
push
and
adc
sub
inc
cmp
fidivl
stos
xchg
or
cmp
in
into
dec
idivl
movsb
out
les
das
int
cmc
xor
fisttpl
rorb
testb
mov
xchg
ret
fistps
and
push
cld
lods
mov
push
sub
pusha
orl
jmp
pop
aaa
mulb
xor
in
arpl
imul
ret
jne
das
adc
mov
scas
enter
mov
xchg
inc
push
sub
cld
push
inc
push
xor
cmpsl
lret
mulb
ja
and
or
imul
sub
scas
pop
mov
mov
push
popa
xchg
mov
loopne
sbb
test
cwtl
pop
jnp
aas
out
push
add
iret
loopne
push
hlt
inc
xor
fisubrs
push
jno
addr16
or
scas
add
dec
xor
push
sub
xchg
jp
pop
and
popa
test
or
cmp
pop
int
and
cs
out
jle
mov
or
sbb
mov
cmpb
lcall
cs
sub
popa
inc
fdivs
out
jg
mov
add
insb
ret
popa
xor
xor
jno
out
cmp
div
loope
pop
mov
and
shlb
push
sub
adc
dec
push
inc
ss
lret
shlb
pop
sbb
test
lcall
inc
push
aas
push
testb
jge
mov
pop
xlat
dec
ss
pop
push
mov
arpl
das
push
inc
ficoms
mov
ds
sarb
mov
out
xor
data16
inc
jl
cmp
cmp
sahf
push
pmaxsw
and
imul
loop
aas
push
insl
pop
in
stos
cmpsl
lret
testl
das
test
js
or
cmp
inc
cwtl
loop
cmpsl
stc
xor
movl
mov
repnz
jne
pop
nop
insb
popa
sbb
imul
punpckldq
out
rorl
xor
fldcw
fcmove
jb
jne
enter
or
cmp
xchg
in
cmp
xchg
iret
inc
in
or
fnstsw
pop
pop
outsb
fadds
movsl
mov
fbld
mov
cmp
push
cwtl
out
subb
xchg
push
mov
mov
push
mov
cmp
cmpsb
inc
fs
popa
scas
sub
out
pop
sub
pop
sbb
or
add
fs
xchg
push
jnp
xlat
fildll
push
stc
mov
adc
push
repz
mov
adc
in
mov
jp
jb
jecxz
cmpsb
pop
fwait
bound
lahf
insb
mov
push
xchg
adcl
mov
fisttps
dec
pop
sbb
dec
stos
push
cltd
adcl
bound
cmpl
dec
scas
mov
popfw
test
jns
dec
movsb
in
xor
inc
mov
xor
fildl
daa
jge
loopne
and
rcr
ljmp
xlat
movsb
sbb
fbstp
pop
adc
add
dec
mov
inc
sub
cs
lds
add
and
andl
ret
cmpsb
or
ret
icebp
jno,pt
pop
mov
push
xchg
jbe
cld
mov
jecxz
ret
call
fstps
xchg
or
lret
xchg
lods
pop
jle
xchg
dec
adc
or
push
adc
addr16
aam
sub
scas
xchg
inc
mov
loope
push
cli
insl
push
fidivrl
or
mov
aas
mov
jae
aam
paddsb
test
cwtl
mov
push
ficoml
sbb
sub
cmpsb
cld
sub
sub
sahf
xor
xchg
jge
dec
dec
cmp
dec
pop
dec
jo
fmuls
loope
jbe
adc
xchg
pop
repnz
cmp
push
push
cmp
cmpsl
adc
push
repz
in
mov
cmpsb
lea
jmp
ljmp
insb
push
jp
lods
sub
scas
lahf
or
cli
cmp
je
sub
dec
into
dec
mov
out
sbb
or
movsl
stos
shll
xchg
std
addl
xchg
sbb
sar
insb
xchg
pop
lea
aas
outsl
negb
das
in
movsb
movsl
loop
enter
dec
and
cld
and
mov
and
jno
inc
iret
test
sub
push
loope
faddl
jo
loope
fldt
mov
repz
aam
popa
sub
jge
icebp
outsb
pop
orb
lahf
icebp
push
scas
ja
sbb
pushl
scas
jne
iret
mov
or
vdivps
xor
mov
mov
rcl
cvtdq2ps
push
xor
cmp
int
in
sbb
imul
inc
and
jo
jno
jns
and
inc
jnp
mov
loopne
adc
test
ret
cmp
lods
int
mov
sti
in
mov
adc
in
add
sub
add
dec
sub
add
ljmp
mov
xchg
cmp
xchg
add
nop
adc
loop
add
mov
pop
adc
xor
add
jae
xchg
out
sahf
and
mov
mov
lods
jae
out
mov
fidivs
fadds
outsb
aam
in
jne
lock
scas
scas
and
jae
adc
testl
adc
imul
pop
and
rcr
repnz
flds
nop
jmp
inc
pop
pop
call
xchg
inc
test
xchg
jmp
push
cmc
sbb
mov
push
push
sub
mov
push
fistpl
lret
ret
mov
dec
loop
js
mov
adc
inc
mov
jle
fdivrp
or
movsl
cs
xchg
movsl
xchg
cmc
cwtl
lcall
jmp
test
or
mov
dec
in
sahf
pop
ljmp
sub
sbb
sub
movsb
sti
xchg
sub
out
sti
adc
jp
push
stc
daa
rcr
adc
or
sbb
cmc
adcl
icebp
inc
pop
add
pop
mov
int3
cmc
add
pop
imul
sub
fists
fbstp
inc
fmull
gs
inc
fsubl
pop
inc
xchg
jb
inc
lods
in
add
movsl
leave
dec
aam
test
js
push
mov
cld
xchg
stos
aam
lret
xor
scas
xchg
ljmp
ja
pop
pop
adc
cltd
dec
xor
or
dec
outsl
shlb
out
adc
mov
sti
lods
mov
dec
xchg
mov
stos
popa
push
lods
fwait
imul
test
xlat
xchg
fistpl
in
bound
mov
xor
pop
jg
cmpsl
dec
or
pop
pop
popa
testb
adc
clc
pop
adc
or
mov
out
arpl
js,pn
dec
jne
add
cwtl
nop
adc
test
lods
lea
mov
or
mov
push
loop
loope
adc
jecxz
adc
jae
cmc
or
pop
mov
jp
fwait
sub
pop
pushf
mov
icebp
or
dec
sbb
adc
xchg
xor
push
shll
fidivrs
inc
jb
mov
in
fwait
leave
mov
incb
lods
sub
fdivl
insb
adcl
mov
outsb
xor
or
outsl
sahf
add
aaa
cld
addb
ja
push
xchg
jecxz
pop
outsl
mov
clc
bound
dec
pop
dec
pop
sub
adc
sbb
testb
xchg
js
inc
push
lahf
mov
inc
adc
clc
jp
clc
jbe
cmc
mov
adcl
fldcw
arpl
int
std
cmp
pop
pop
mov
push
or
mov
scas
adc
lods
movsb
push
xor
sbb
cmpsb
pop
and
or
and
movsb
adcl
shrb
push
push
out
adc
ficompl
xor
push
xor
add
add
cltd
pusha
sbb
shlb
jbe
dec
daa
mov
mov
push
out
lret
rorl
dec
stos
sub
das
in
push
lcall
pop
nop
pop
data16
sbb
mov
movsl
popa
ljmp
lea
jb
dec
dec
and
fs
dec
sbb
jnp
cmpsb
test
rorl
inc
sbb
out
adc
sbb
cmp
ret
pop
fists
iret
xchg
mov
jmp
repz
out
inc
subps
xor
das
push
fs
and
lcall
hlt
mov
jb
imul
test
cmp
inc
lods
jmp
ljmp
hlt
lods
idivl
cmc
mov
lods
xchg
jg
pop
push
lahf
daa
stos
pop
and
pop
sub
das
test
and
mov
cmp
mov
sub
adc
test
mov
mov
iret
scas
push
or
pop
mov
test
add
fwait
cvtpi2ps
cmpsl
sbb
cs
dec
and
orb
mov
movsl
adc
test
sbb
js
pushf
mov
sbb
inc
imul
cld
cmc
add
cmpsb
or
leave
int3
sub
ljmp
xlat
mov
adc
jne
stos
inc
jle
add
push
pop
movsl
clc
jo
jecxz
loope
orl
shl
mov
xchg
push
push
pop
cmp
dec
dec
in
mov
fimuls
jb
adc
push
popf
mov
cmp
hlt
js
fcom
data16
dec
sahf
test
dec
push
out
mov
and
inc
jle
dec
mov
and
imul
or
addr16
loope
movsl
cmp
clc
pop
and
nop
inc
frndint
cld
inc
repz
pop
sbb
jp
xor
imul
loopne
jns
lret
loopne
test
cmp
mov
xchg
xor
sbb
lds
or
fwait
xor
and
insl
adc
pop
mov
test
sub
fisttps
and
cli
pop
data16
push
jb
out
lods
adc
xor
into
sbb
cltd
cmc
neg
sub
popf
mov
xlat
jne
mov
mov
bound
int
xchg
in
mov
subl
into
mov
xlat
in
daa
lock
and
cld
je
lret
fcomps
mov
das
fldcw
lea
mov
sahf
stc
in
or
xor
add
sub
adc
pushf
inc
inc
lcall
pop
xchg
stos
lret
jmp
fistpll
nop
xlat
loope
dec
fimuls
scas
mov
rcrl
adc
xlat
lods
or
adc
andl
pop
add
cmp
lahf
shll
mov
xor
ds
jg
fwait
and
mov
lds
inc
xor
and
xlat
dec
sti
cmpsl
sarb
sub
jae
and
xor
mov
pusha
mov
inc
addr16
cmpsb
inc
jnp
push
test
aaa
mov
sti
push
loope
dec
jbe
sahf
in
or
sti
push
call
jmp
push
lods
xchg
mov
xchg
inc
out
cmc
arpl
popf
pop
mov
push
and
mov
pop
dec
fisubrs
xor
aam
jle
ds
mov
in
je
xchg
jns
cmp
scas
xchg
outsl
cwtl
inc
imul
addr16
add
aaa
push
clc
mov
sub
loopne
aaa
pop
in
adc
push
adc
add
aaa
push
xchg
push
dec
mov
mov
ret
jecxz
xor
cmpsb
in
insl
leave
cmp
push
xlat
dec
xor
adc
push
mov
ret
lds
adc
xchg
or
into
adc
adc
or
idivb
adc
mov
inc
int
gs
imulb
mov
inc
jne
hlt
dec
push
lcall
shrb
dec
jb
push
in
test
lods
mov
add
sub
sub
sub
mov
push
icebp
addb
les
dec
xchg
adcl
mov
fsts
push
mov
daa
movsb
enter
adc
loope
icebp
push
or
cs
inc
xchg
repz
push
ljmp
les
lds
into
mov
inc
xlat
xchg
xlat
xor
mov
jg
adc
imul
pop
fisttpll
jae
icebp
notb
lods
subb
out
cmp
aam
xchg
mov
outsb
js
divps
mov
pop
mov
and
test
cmp
push
inc
fldenv
lock
rorb
mov
imul
popf
filds
pop
repnz
mov
sub
leave
sbb
mov
mov
repnz
sub
dec
adc
inc
sub
sub
daa
insb
or
push
je
pop
add
mov
das
push
xchg
outsl
jp
hlt
std
mov
xchg
jns
pop
or
mov
repz
call
cmc
pop
push
hlt
cmp
push
frstor
rorb
xor
mov
ret
scas
test
mov
pop
lcall
dec
loopne
stos
pop
ss
test
pop
test
inc
inc
sub
cmp
lock
cmp
and
insl
pop
xchg
inc
imul
lock
pop
leave
faddp
rolb
cmp
pop
popa
mulb
xorb
push
pop
lret
mov
ds
inc
out
das
xchg
cmpsl
icebp
xchg
jl
or
lds
popa
xchg
jne
jge
pop
inc
jge
mov
data16
cmp
add
sar
fmuls
ja
aaa
test
cltd
xor
pop
xlat
or
and
rcrl
out
pop
orl
loope
iret
mov
popf
adc
adc
lea
dec
fbstp
clc
inc
sub
xchg
cmp
mov
pop
dec
in
mov
inc
dec
ss
push
out
insb
popa
loope
inc
sub
imul
pop
mov
sahf
mull
push
div
and
pop
nop
jns
mov
negl
daa
jns
call
ret
xchg
jl
xor
pop
cmpb
cli
add
inc
xor
dec
add
ds
repz
dec
incl
les
jae
pusha
xor
mov
xor
sub
idivb
cld
sub
mov
ds
sub
in
cmpsl
sub
movsl
in
xor
pop
leave
push
xchg
mov
xchg
in
pop
sar
pop
xchg
pop
scas
sbb
lock
xchg
pop
pop
test
cmc
ret
gs
jns
negl
adc
adc
push
mov
cmp
pushf
push
nop
adc
cli
or
and
or
imul
mov
dec
lret
jb
arpl
sub
or
jo
shll
xchg
xlat
pusha
jecxz
push
ljmp
or
push
add
inc
fdivr
and
adc
or
dec
push
mov
pop
adc
stos
cmp
arpl
sbb
xchg
jnp
add
addr16
adc
insl
fcomps
pop
xor
xor
sub
nop
xchg
cwtl
outsl
jl
cmpsl
nop
ss
test
daa
mov
sub
test
out
scas
jne
sti
das
jnp
xchg
xor
jl
or
repnz
rcr
xlat
xchg
std
inc
aas
sbb
lods
adc
pop
adc
dec
mov
inc
popf
add
or
xor
sub
xor
or
pop
insb
cmc
faddl
add
into
repnz
popf
mov
pop
sarb
add
push
pop
add
jp
xor
add
push
scas
inc
push
out
pop
mov
and
xor
aas
push
aas
sub
imulb
cmc
add
outsl
push
jne
movsb
fwait
lods
cmpsb
jae
stos
leave
shr
mov
or
ss
xchg
push
mov
es
in
jg
sti
scas
dec
insl
scas
call
movsb
jbe
in
mov
ror
jne
lcall
cmp
js
push
inc
sbb
imul
lods
ds
gs
scas
mov
mov
or
pushf
or
cmp
loope
aaa
push
scas
and
fcmovnbe
lods
sub
into
inc
push
fcmovne
push
push
xor
sbb
cmc
sti
pop
mov
bnd
sub
sbb
aas
aad
xchg
data16
pop
push
call
ss
fldcw
xlat
add
mov
dec
adc
stos
and
sti
fiaddl
adc
xchg
and
adc
shlb
mov
mov
fwait
add
or
jp
daa
adc
xor
mov
add
dec
stos
fdivl
sbbb
pop
adc
or
sbb
in
popf
cwtl
pop
imul
xchg
push
in
jmp
inc
in
stos
and
loop
hlt
ds
add
ret
cmpsb
test
sub
mov
aaa
mov
sub
jecxz
or
test
fldcw
cmp
mov
jge
add
in
icebp
mov
std
xchg
or
loop
cltd
arpl
iret
jo
aaa
xor
rol
inc
imul
xchg
push
cld
rclb
je
in
in
jo
xlat
rcrb
sbb
mov
arpl
pushf
les
pop
mov
imul
in
sti
jg
and
sub
jnp
adc
push
mov
mov
and
jmp
xchg
lods
nop
cmp
test
push
loop
adc
mov
sti
mov
cmpb
in
add
int
clc
dec
loop
cli
roll
cmp
inc
jne
adc
sbb
lods
jp
adc
in
cmp
or
push
ret
stos
mov
mov
out
stos
out
ja
mov
cmp
jecxz
jle
dec
stos
hlt
jge
xor
inc
leave
xchg
stos
jo
es
add
fmull
push
aam
aam
mov
std
push
fimuls
sbb
icebp
and
xchg
rol
imul
dec
pop
es
xchg
push
insl
or
std
out
mov
pop
jg
cmp
sub
pusha
dec
nop
add
mov
aaa
cmp
push
xchg
repnz
inc
call
xor
xor
push
dec
lods
add
fcmovbe
mov
sub
mov
jmp
dec
minps
ret
mov
pop
decb
mov
jmp
leave
pop
into
jge
sbb
xchg
xchg
je
shl
in
mov
call
pop
push
scas
xchg
push
sbb
jecxz
and
mov
add
popf
adc
xor
add
jo
mov
shlb
js
call
lock
jge
movsl
xchg
out
les
xor
ret
ret
cmpsb
imul
mov
or
inc
and
xor
aam
pop
and
in
dec
or
fstl
popf
xchg
mov
and
inc
xor
mov
jns
fmuls
xchg
add
pop
xor
pop
sub
jnp
xchg
push
fsin
mov
xor
mov
stos
mov
ret
mov
jno
aas
xchg
inc
adc
jmp
mov
jge
xorl
lods
stc
xchg
dec
cltd
mov
jne
adc
sub
mov
xchg
jl
das
sti
nop
adc
mov
add
je
scas
imul
xor
divl
sbb
lds
inc
xor
mov
enter
fldenv
lods
addr16
or
das
rcll
cmpsl
jb
lahf
dec
xchg
sub
cmp
or
sbb
pop
cmp
mov
fstps
inc
sti
in
and
push
add
xor
iret
hlt
sub
in
push
out
mov
push
mov
dec
out
ret
mov
mov
sbb
xchg
lods
arpl
jns
pop
jmp
pusha
ljmp
and
popf
sbbb
cmpsl
mov
fists
and
jmp
pushf
cs
daa
sub
idiv
pop
jg
lds
xchg
mov
mov
cld
inc
push
and
dec
pop
pop
adc
jae
test
fwait
outsb
int3
lods
xchg
ret
mov
dec
jge
fldl
pushl
lea
cltd
xchg
mov
sahf
sarb
test
negb
push
clc
mov
xchg
add
movsb
out
adc
andl
fmul
out
jge
iret
push
orl
sub
and
aam
push
pop
aaa
ret
fists
stc
fs
mov
imul
lret
mov
lods
pop
int
test
adc
cs
inc
pop
insb
pusha
scas
sbbl
xor
inc
jbe
xor
test
push
pop
movsb
fcoml
mov
sbb
jno
sub
mov
xor
ret
mov
mov
mov
cmp
aad
insb
pop
mov
cmc
adc
mov
mov
das
in
xchg
stos
test
in
mov
das
bound
jne
stos
and
sbb
adc
or
in
cmp
shlb
inc
mov
stc
mov
sub
movsb
jnp
or
jge
push
in
xorl
adc
jecxz
cmp
test
jns
icebp
data16
pusha
mov
in
pop
fimuls
js
arpl
ficoms
push
icebp
push
insb
push
es
and
pop
pop
cs
dec
lcall
packuswb
pop
cmp
cmpb
cmp
push
jg
add
sbb
mov
lods
jae
cmp
mov
loop
jle
dec
sbb
jbe
stos
adc
xor
cmp
dec
test
inc
enter
push
xchg
lods
mov
lods
mov
aaa
mov
ret
push
push
cltd
mov
movsb
cmp
xchg
adc
jge
sub
mov
sarl
andl
imul
xchg
push
mov
aad
mov
sub
or
iret
int3
pop
pop
jmp
test
dec
in
push
or
cli
mov
push
je
lods
sbb
negb
cmp
orb
mov
xlat
push
lods
movsb
pop
jmp
repz
test
inc
push
sbb
sub
xchg
cmp
fs
and
adc
in
mov
mov
adc
jae
mov
rorb
mov
or
nop
xorb
mov
jle
adc
orb
les
arpl
test
loopne
jbe
mov
mov
lret
or
jno
leave
cmp
dec
mov
sbb
inc
repz
xchg
call
mov
int3
cs
push
das
fidivrl
cmp
rol
or
and
imul
pop
push
inc
je
rorl
repz
push
popf
pop
jnp
int
cmp
std
dec
sbb
lds
adc
sahf
ljmp
pop
push
and
push
inc
lahf
xor
movsb
lret
gs
gs
jne
xchg
and
add
ss
xchg
or
scas
fwait
add
scas
pop
sub
sahf
push
lea
lret
sub
sbbl
sub
xchg
aaa
jl
cld
int
iret
cli
rcrb
movsb
incl
sbb
mov
mov
sahf
jmp
or
data16
and
pop
xlat
pop
fldt
loop
xchg
ljmp
adc
xor
hlt
inc
ds
add
int
sti
aas
shl
xor
clc
fadds
xor
dec
pcmpeqb
add
ljmp
xor
xchg
inc
sub
mov
mov
push
mov
outsl
add
fsubrl
js
jns
pop
sub
xchg
out
adc
cld
dec
push
add
lods
daa
ljmp
xchg
das
daa
ds
testl
mov
mov
loopne
and
in
xchg
repz
call
pop
sbb
cmp
add
stc
out
clc
sub
sti
fiadds
lock
xor
and
fwait
push
scas
inc
ror
mov
push
or
push
cmp
hlt
adcl
pusha
lret
mov
ss
or
test
push
pushf
out
je
jl
ficompl
xor
cmp
cmpsb
inc
xor
add
popa
or
inc
out
lock
add
jo
ret
mov
add
fldenv
jbe
in
push
icebp
pop
lock
push
pop
mov
scas
inc
lods
pop
dec
outsb
cmp
xchg
fld
stc
jb
ss
jge
test
test
jecxz
repz
or
push
aam
std
aaa
lret
or
popf
jb
lods
adc
push
in
outsl
pop
lock
pop
das
shrl
loopne
xchg
loop
adc
test
jno
jb
adc
inc
cmpsb
imul
out
repz
xor
add
fidivs
aad
rcrb
out
jne
ljmp
out
out
pop
jnp
repz
idiv
pushf
or
into
mov
mov
cmp
jo
sbb
and
popa
enter
mov
setne
loope
sbb
cmp
fnstsw
aaa
lock
out
xorb
in
mov
push
or
in
rcrl
test
inc
pusha
bound
xchg
pop
mov
mov
outsl
pop
jno
inc
push
dec
inc
mov
lcall
jecxz
jmp
adcb
or
jmp
mov
insb
scas
cs
icebp
fs
xchg
stos
xchg
cmc
hlt
pop
and
cwtl
fwait
pushf
ja
daa
clc
xchg
in
ss
mov
in
test
or
jb
or
insb
mov
xor
mov
jl
bound
gs
xchg
push
mov
ds
or
adc
pop
bound
sbb
insb
and
mov
lcall
and
outsb
jno
nop
lahf
in
or
pop
xchg
nop
stos
adc
inc
push
daa
loopne
popa
or
mov
adc
sub
cmp
mov
movsb
dec
push
test
subb
test
adc
pop
xchg
in
lss
jg
mov
inc
push
fldl
lret
push
stc
xor
jmp
loopne
and
add
roll
int3
ficoms
es
push
das
iret
adc
out
aad
dec
lret
repnz
lds
push
imul
imul
shr
mov
xchg
movsl
add
aas
movsl
rcrl
adc
mov
sbb
outsb
push
jg
adc
lcall
aad
ret
movsl
mov
out
inc
inc
cltd
inc
lahf
movb
lds
and
ds
and
fildll
mov
pop
adc
repnz
jbe
lock
and
push
lret
scas
mov
loopne
push
pop
movsl
mov
les
imull
out
insb
jmp
or
xchg
int3
ds
iret
popa
pop
pop
aam
jns
inc
fsubrs
mov
pop
scas
gs
into
sbb
scas
jnp
ret
fstpl
jl
or
adc
xchg
pop
aam
rcr
xchg
int3
xor
xchg
insl
icebp
push
iret
icebp
pop
push
inc
fldt
leave
sbb
je
lock
inc
cmp
iret
clc
cmp
jne
mov
mov
aaa
jle
sbb
push
jnp
fsub
mov
xchg
cmp
or
adc
loopne
out
addb
pop
push
cwtl
xor
pop
outsb
das
fwait
cs
xchg
xchg
jle
leave
add
inc
push
gs
lods
dec
jge
mov
mov
pop
mov
dec
bnd
test
outsl
add
inc
das
and
and
fmull
gs
inc
jnp
jg
mov
stos
adc
daa
lret
mov
pop
add
push
pushf
xor
xchg
xlat
sbb
mov
push
lret
mov
fisttps
xchg
xchg
mov
dec
outsl
mov
jle
sub
xchg
mov
daa
test
cmp
mov
enter
pop
sbb
aaa
jnp
les
fwait
test
lods
xchg
xchg
xchg
jmp
mov
xchg
adc
cwtl
xor
hlt
inc
mov
mov
xchg
push
arpl
push
mov
add
push
sbb
sub
and
test
and
cmp
jl
sub
sub
pop
popf
xchg
or
cltd
jge
cltd
jg
es
xor
xor
or
icebp
inc
mov
mov
pop
test
dec
or
pop
xchg
push
lahf
sbb
sbb
cmp
data16
lock
popl
imul
sub
scas
dec
cmp
push
mov
push
mov
in
push
mov
sbb
pop
nop
cmc
sti
test
loopne
out
in
iret
shrb
js
loope
inc
sub
pop
iret
out
repnz
cmp
jle
or
out
in
cmc
int
out
add
filds
ja
repz
cli
insl
jmp
mov
aas
jbe
iret
pop
sahf
cltd
lock
cmp
xchg
fsts
pop
or
fstps
mov
xchg
stos
out
jnp
out
std
jge
cwtl
cmp
jg
inc
inc
or
xlat
mov
push
inc
mov
repnz
jb
jns
int3
jecxz
jge
cmp
dec
or
jb
out
clc
xchg
jbe
fsubs
jge
jb
inc
js
cmp
packsswb
pop
mov
sub
sub
ficoml
push
pushf
cli
addl
mov
mov
in
ljmp
push
fwait
mov
mov
or
push
aam
push
push
mov
fildll
or
lret
mov
xor
push
jl
jo
pushf
ds
aad
adc
fwait
add
fistpl
cs
mov
push
dec
push
lock
lcall
xchg
mov
loope
sub
or
mov
in
mov
pop
cmp
jne
enter
out
xchg
push
leave
xor
adc
cli
nop
movsl
fmull
lock
add
mov
dec
fdivrp
cmp
int3
insl
pop
or
nop
inc
cmp
mov
in
out
cs
mov
xor
jo
or
sbb
fstpl
dec
mov
test
in
xor
cwtl
cmp
repnz
sbb
and
pop
and
mov
mov
gs
imul
mov
mov
sub
je
pop
out
cli
lcall
cmpsb
movsb
ds
mov
and
in
repz
roll
rclb
hlt
push
mov
insl
sahf
repz
jge
sub
bound
dec
jecxz
dec
sub
or
cmp
xchg
test
jmp
push
add
aam
or
push
sub
push
scas
jg
les
shrl
xchg
cli
ret
jecxz
out
dec
cmp
mov
mov
sti
daa
mov
cld
fs
jmp
es
aad
insb
mov
mov
dec
mov
pop
cld
and
rcrl
push
subb
dec
dec
pop
outsl
and
jo
lret
int
cmp
arpl
cli
adc
imul
mov
mov
cs
or
xor
or
les
imul
pop
sbb
clc
push
mov
fstl
std
add
sub
lret
pop
outsl
sub
xor
test
stos
aad
push
push
test
mov
sahf
mov
sbb
test
mov
int
stos
jp
mov
and
pop
add
pop
aad
inc
incb
sub
jmp
sbb
mov
pop
mov
xchg
addr16
fmul
pop
push
out
addr16
cmp
nop
scas
sbb
sahf
popf
and
pop
sahf
pop
gs
lods
pushf
ljmp
dec
mov
push
lds
dec
adc
cmp
pop
stos
pop
add
fwait
test
mov
pop
rorl
push
mov
jno
in
je
lods
mov
out
lods
mov
push
jnp
lret
out
mov
adc
add
ret
inc
jp
mov
jae
fbld
dec
stos
push
repz
mov
fnstcw
stos
in
pop
pop
and
loopne
lcall
jo
jne
inc
jmp
dec
xchg
push
hlt
shrl
test
fs
push
jns
mov
push
sbb
push
jne
movsl
inc
es
pop
mov
mov
jmp
test
filds
add
subb
daa
cld
daa
bound
and
fdivrs
xchg
les
xchg
push
test
addl
sub
sahf
test
inc
fmull
push
daa
fdivrl
shrl
lds
cmp
ficoml
in
cmp
addr16
pop
mov
movsb
xchg
insb
add
data16
rcrl
lcall
out
in
mov
jecxz
popa
js
leave
in
mov
iret
cmpsb
addb
fistl
iretw
into
fistl
mov
movntq
in
lret
or
lea
inc
xlat
inc
test
sub
mov
mov
or
fildll
and
adc
inc
aas
mov
mov
jle
xor
jmp
lret
jo
jecxz
test
cmp
mov
int3
pop
and
movsb
pop
pop
or
or
lret
push
cmp
adc
xchg
mov
ret
mov
scas
jae
or
push
push
sbbl
orl
mov
mov
insl
lret
mov
lret
push
pushf
cld
pop
cmpl
xor
adcl
adc
dec
jbe
ret
lds
flds
filds
shl
push
mov
std
pusha
imul
jo
add
add
flds
and
ror
mov
inc
outsb
mull
fdiv
arpl
sub
testb
and
push
shl
imul
mov
adc
incl
mov
call
js
add
lods
or
pop
and
sbb
jae
xor
adc
mov
jnp
lret
sbb
xchg
out
jp
jge
fwait
sbb
shrb
ret
add
sub
push
call
mov
lods
push
and
mov
sbb
cmc
mov
loop
pop
insb
insl
pop
pop
pop
mov
outsb
movsb
push
bound
outsb
fsubrs
cmp
nop
adc
into
pop
push
add
add
orl
or
es
push
mov
jl
sysenter
add
add
push
and
test
or
dec
andl
lcall
into
sbb
cmp
cs
xor
inc
xor
push
imul
sub
loop
sbb
cmp
jle
mov
lods
mov
cld
stos
int
mov
ret
mov
cmp
add
add
inc
xchg
xor
add
lret
sbb
or
cltd
xlat
inc
pop
jmp
popa
jl
inc
or
mov
imul
dec
clc
and
test
sbb
rolb
fadds
rorl
mov
and
adcb
cmpsl
xchg
cli
jl
icebp
pushf
push
aam
mov
inc
cmp
xor
xchg
inc
mov
in
push
push
add
or
sbb
push
or
mov
aas
sbb
insl
cmp
and
aam
inc
sub
lods
mov
lahf
movsb
push
sbb
dec
lods
data16
add
int3
into
fsubs
mov
sub
jnp
xchg
arpl
outsl
out
imul
sub
cltd
aam
fdivr
lock
lock
inc
or
inc
xor
icebp
mulb
cltd
adc
inc
dec
cs
mov
cltd
push
cmpsl
pushf
in
inc
and
div
aaa
dec
mov
push
scas
movsb
sbb
cmp
pop
roll
insl
movsb
sbb
push
mov
xor
outsl
dec
pop
roll
inc
push
jnp
js
sub
adc
cmp
sub
add
movsb
in
sarb
pop
jge
sti
int3
andl
and
inc
orl
add
sti
mov
push
pop
mov
cld
out
lock
out
pop
cmc
loop
mov
push
xor
push
cli
pop
inc
in
add
jmp
ljmp
clc
sti
pusha
bound
shrl
adc
push
je
mov
jae
push
out
mov
das
mov
sbb
mov
mov
fiadds
add
in
mov
mov
mul
adcb
pop
pop
push
cmc
add
jbe
ficompl
or
jbe
inc
xor
mov
cmpsb
aad
fistl
jmp
shl
movsb
mov
rcll
rclb
sbb
adc
das
ret
sbb
sbb
push
push
cmp
pop
xchg
lock
push
movsl
pushf
mov
dec
mov
sbb
sub
add
push
cmp
and
ss
fwait
jl
jns
sbb
jns
in
dec
mov
adc
sahf
dec
mov
xchg
mov
fimull
adc
loopne
pushf
or
pop
adc
iret
frstor
jmp
cmp
leave
or
mov
mov
loop
and
fcomps
and
mov
xchg
dec
stos
jp
imul
enter
scas
inc
jo
movsb
cmc
subb
mov
addl
stc
or
sub
sbb
lods
sub
cli
jp
stos
cmp
mov
jns
in
dec
inc
lcall
dec
xor
ja
scas
clc
push
and
mov
mov
add
cli
leave
dec
out
ficomps
and
dec
outsb
pop
pop
mov
mov
out
jp
push
xor
call
mov
push
test
push
sbb
popa
sbb
cmc
outsb
inc
inc
mov
push
callw
sbb
xchg
adc
xor
sbb
pusha
and
jecxz
loope
mov
in
pop
sarb
out
mov
and
jb
xchg
dec
mov
fdivs
xchg
mov
mov
lcall
sub
mov
xchg
pusha
sbb
mov
rcr
mov
jo
mov
orb
push
iret
inc
or
inc
mov
jmp
sbb
xchg
or
mov
xor
and
test
and
and
mov
test
mov
adc
cmp
add
mov
push
ret
push
lds
pop
test
pop
jecxz
push
inc
ljmp
dec
dec
enter
das
pop
shrb
lahf
add
insl
pop
dec
loope
out
std
jl
jno
mov
leave
insl
cwtl
imul
mov
mov
out
pop
lock
bound
sbb
jae
in
jmp
out
mov
and
cld
int
test
sbb
sahf
lahf
mov
cltd
bt
inc
pop
cmpsl
jnp
sbb
lret
sbb
or
jl
loope
fldcw
mov
inc
or
push
cmp
push
rcrb
movsb
pushf
mov
push
std
push
loopne
xor
pop
and
mov
ret
into
mov
or
sbb
sbb
pop
jo
lods
rorb
ljmp
pop
cmpsb
sbb
aas
imul
lock
push
inc
insl
cmp
xchg
repz
je
dec
xchg
ret
jb
jecxz
leave
xor
fbstp
jmp
pushl
jbe
gs
mov
mov
jg
fidivl
inc
jb
xchg
lock
mov
divb
sbb
push
outsb
lock
sahf
test
jmp
inc
mov
mov
mov
sub
pushf
out
out
mov
test
movsb
mov
insl
test
shlb
mov
add
add
movsb
ljmp
xor
sub
xchg
iret
lods
mov
out
sarl
or
es
cmc
xchg
dec
lds
mov
mov
movsb
ljmp
roll
sub
fildl
push
dec
shll
sub
jne
adc
jo
mov
cmovb
xchg
add
inc
sarl
push
out
mov
ja
cmp
push
icebp
push
cmpsl
movsl
lret
pop
sub
add
cmp
pop
lock
mov
out
movsl
outsl
push
stos
int
and
icebp
movsl
mov
icebp
jae
shlb
rcrb
sub
imul
stos
das
subb
pop
pop
pop
pop
inc
cs
pusha
cmp
mov
jbe
inc
sbb
xchg
mov
popf
rol
movsl
fildll
sub
insb
jmp
cmp
mov
jp
scas
mov
mov
xchg
mov
int3
mov
in
mov
insb
and
mov
mov
inc
or
pop
ljmp
cmpl
or
push
mov
lret
adc
jnp
dec
ss
cmp
outsb
imul
mov
mov
sbb
xchg
mov
call
gs
es
dec
ficomps
je
cmp
jno
dec
dec
mov
xchg
loopne
jne
mov
or
inc
call
add
imul
pop
mov
adc
jp
cmp
outsb
movsl
pop
iret
pusha
scas
add
pop
hlt
jl
jg
push
and
mov
roll
or
xchg
jbe
push
fdiv
imul
xor
je
add
popa
pop
or
pop
aad
and
aad
or
sub
test
lea
call
mov
mov
aaa
mov
out
jecxz
es
aad
aas
insb
fdivrl
ds
jmp
cmp
mov
xor
outsl
jae
mov
xchg
pop
dec
xor
and
aam
fildll
add
ljmp
ljmp
sbb
cmp
pop
inc
adc
rcll
cs
rorl
ret
xchg
hlt
fs
mov
xor
out
sub
in
cld
das
fcoms
hlt
in
js
mov
ja
frstor
xor
dec
and
sbb
dec
jecxz
pushf
dec
pop
imul
sbb
sti
push
nop
fildl
xchg
xchg
aad
and
sbb
in
xor
fdivrs
arpl
int3
inc
aad
mov
icebp
into
push
mov
mov
scas
std
mov
pop
faddl
cmpsl
fcoms
lods
pop
imul
insl
in
subb
sbb
ret
je
mov
mov
movsl
mov
popa
mov
ret
inc
xchg
je
mov
xchg
adc
jmp
sbb
xchg
mov
xchg
add
mov
call
add
lcall
dec
imul
jo
sbb
repz
or
daa
popf
push
les
pop
repz
cmp
jae
mov
jbe
dec
testb
lea
cltd
cmp
push
cmp
int
cmp
dec
pop
and
fldenv
enter
stos
mov
cmp
push
cmovle
stos
sahf
pushf
repz
fisubl
lock
pop
xchg
jmp
xor
mov
jne
jge
in
push
roll
icebp
mov
dec
fcomip
jno
jmp
sbb
inc
xchg
div
aam
and
mov
jp
lods
mov
push
inc
das
add
aaa
js
loopne
pop
in
push
iret
pop
arpl
mov
das
xor
dec
mov
imul
das
push
loop
pop
insl
int
push
lods
or
cmpsl
jno
js
out
popf
mov
push
inc
mov
call
jp
mov
dec
call
movsb
cmc
push
fisubrl
xchg
mov
add
mov
dec
cmpsl
lahf
test
movb
cmpl
lods
xorl
and
lret
xchg
mov
lea
and
cmp
xchg
movsb
pop
scas
sbb
mov
es
dec
xchg
jp
jbe
fcoms
shl
incl
in
insb
inc
iret
outsl
push
or
sbbb
mov
mov
mov
in
dec
cmp
dec
pop
ljmp
mov
dec
ja
popf
testl
imul
jo
xchg
std
jno
aas
push
xchg
mov
std
in
rorl
fwait
sbb
and
inc
mov
push
mov
mov
lods
fstpl
fcmovnu
into
imul
int3
in
jmp
xchg
mov
sti
es
xor
not
cmp
loop
and
push
add
mov
sbb
stos
out
adc
ja
imul
adc
pop
adcl
or
subl
adc
in
enter
adc
loopne
out
fcoms
mov
cmpsb
out
imul
subl
test
adc
sbb
pop
in
das
push
aaa
fstpl
pop
jmp
jb
or
stos
sbb
pop
lock
mov
out
out
icebp
sahf
xlat
sub
into
push
mov
loop
add
dec
fnstenv
inc
add
mov
insb
xchg
jle
and
push
lcall
sbb
pop
cmp
test
push
pop
subb
imull
bound
push
ljmp
xchg
aam
xchg
xchg
lret
add
and
sti
inc
out
mov
cmp
xchg
cmp
sti
or
cmp
ret
jge
sbb
xchg
cmp
mov
out
stos
mov
daa
sbb
stos
pop
mov
mov
lahf
add
test
and
jno
cmp
lahf
incl
mov
bound
pop
jmp
fstpt
fwait
divb
mov
clc
pop
sub
xchg
push
xchg
xor
test
out
test
cmp
js
cmp
sbb
cmpsl
push
sbb
stos
push
stos
aas
push
or
sbb
jno
orl
lods
fwait
shll
fs
mov
scas
inc
out
int3
jno
test
cltd
clc
fs
jp
push
lods
std
cmp
arpl
ds
mov
cmp
xor
ss
out
repnz
jno
cmp
in
jnp
stc
lods
neg
adc
subb
cmp
push
lods
adc
xor
ja
scas
and
decb
pop
push
jmp
sub
cmc
push
mov
mov
mov
jecxz
xor
pop
aam
jnp
and
repnz
mov
lahf
push
cmp
jae
out
popf
int3
icebp
cltd
push
pop
mov
adc
mov
in
popa
das
mov
int3
xor
sbb
lock
inc
nop
sub
aas
shlb
sbb
sbb
gs
and
and
insl
inc
sahf
mov
adc
sbb
scas
fsubrs
jo
fdivr
ljmp
loope
fbstp
mov
sarb
xchg
call
push
jp
out
outsb
arpl
xor
inc
out
aas
push
jae
mov
in
or
ret
testb
mov
testl
data16
jbe
or
je
cs
mov
cmp
add
rclb
cld
adc
push
das
out
lret
mov
leave
iret
or
pop
clc
outsl
cmp
fwait
dec
xchg
aas
mov
fbld
jg
out
int
jne
sbb
jnp
pop
cmp
out
out
and
ret
jg
sbb
je
popa
cld
movq
add
fwait
sub
pop
fcmovb
push
int
mov
cmp
test
push
fdivrp
jne
mov
bound
js
lds
jae
push
sub
movsb
sub
ljmp
leave
imul
inc
cmpsb
and
sub
mov
push
sti
push
lcall
lcall
adcb
and
clc
stos
push
aad
and
sarl
dec
jbe
jns
test
pop
mov
lahf
fadd
sbb
icebp
inc
pop
pop
mov
bswap
imul
rolb
mov
xchg
rorb
addl
out
or
ret
xor
add
lock
out
mov
fsubrp
aad
and
xlat
dec
add
imul
mov
cmp
lock
push
xor
cmp
nop
adcl
icebp
inc
fcompl
inc
in
jl
mov
jo
adc
xchg
mov
push
iret
jl
lods
or
mov
push
xchg
xchg
add
dec
loopne
hlt
or
rol
push
cmp
sub
and
rclb
pop
add
add
and
or
clc
push
pop
add
add
in
scas
mov
xchg
js
jns
outsl
les
mov
mov
xor
subl
adc
and
movsb
std
cmc
aad
jne
mov
cmp
cmp
mov
or
add
add
cltd
mov
adc
cmp
aam
and
inc
cmpsb
push
hlt
pop
outsl
rorb
imul
aam
add
cwtl
pop
cmpsl
clc
mov
enter
in
ja
hlt
lock
add
xchg
ja
mov
jno
inc
and
jno
jg
dec
pop
xchg
push
or
imul
xor
cmp
add
add
mov
jl
fldt
shll
pushf
imul
sbb
mov
xchg
les
inc
xchg
fs
ss
and
dec
pop
inc
pop
cmp
out
ret
std
jl
movups
mov
aas
push
push
adc
dec
inc
or
ja
rorb
shr
scas
jp
imul
aaa
aas
pusha
enter
lock
inc
and
lea
mulb
cmp
in
call
test
sub
nop
inc
push
jns
mov
inc
into
dec
clc
sbb
ds
add
mov
cmp
add
sahf
xor
xor
divl
or
outsl
out
add
sbb
cwtl
xor
andl
xchg
adcl
std
cwtl
dec
ror
pop
pminub
daa
daa
push
push
ljmp
cs
xchg
fwait
ret
pop
lds
scas
mov
std
adc
hlt
ficoml
jb
pop
les
repnz
ljmp
imul
js
cli
ror
adc
pop
outsb
and
adc
popf
cmp
cld
shlb
clc
cmp
aas
cmp
loop
cltd
ja
shl
xchg
push
fs
cmp
xchg
in
stc
cmc
lods
pushf
mov
or
movsl
add
mov
fucompp
cmp
idiv
rcrb
sbb
addr16
or
je
or
out
lcall
xchg
cmpsl
jnp
sub
cmp
mov
and
sbbb
mov
push
sbb
imul
lcall
repnz
insb
and
jnp
aaa
data16
pusha
jecxz
xor
inc
or
lcall
jb
xor
dec
lcall
cmpsl
or
sub
pop
push
cs
cmp
cmpsb
mov
adc
lods
sub
leave
std
mov
in
pop
lahf
imul
push
dec
cmc
out
out
repz
jne
ss
lret
stc
popf
push
imul
daa
int
push
xlat
cmp
cmp
mov
and
lcall
pop
xlat
arpl
push
hlt
push
mulb
aas
rcrb
rcrb
fs
fbld
mov
lds
in
pushf
pop
inc
mov
mov
xor
ds
aaa
mov
mov
imul
cmp
mov
and
dec
mov
jge
jge
or
cmp
arpl
xor
jo
lret
stc
jnp
aad
fwait
rclb
adc
sub
test
scas
jnp
pop
in
jl
arpl
cmp
jns
jno
jae
outsb
cmp
insb
cs
and
cmpsb
xchg
in
aad
daa
adc
pop
add
inc
mov
sbb
pop
mov
xlat
sbb
rorb
enter
mov
push
daa
cld
adc
xorb
sbb
pushf
inc
cld
jl
lods
push
sub
sbbl
xor
int3
cmp
int3
xor
mov
loopne
push
cmpsl
stos
push
xor
ja
dec
sbb
leave
xor
pop
pop
sbb
movsb
jb
repnz
dec
xor
pop
pop
imul
inc
and
add
xor
add
test
pop
call
out
jno
jge
sbb
sbb
and
mov
pop
stos
lcall
sbb
dec
jmp
repnz
iret
pop
pop
test
out
add
cmp
pop
push
dec
cmc
push
mov
push
or
push
mulps
mov
aam
enter
mov
out
push
sub
test
movsl
cmp
test
inc
xchg
lret
xchg
das
shrb
jl
jnp
jns
testl
jge
leave
or
daa
test
mov
mov
rclb
jne
outsl
cmp
imul
out
sbb
es
inc
adc
jmp
aas
pop
in
movsl
mov
dec
pop
mov
jge
roll
push
cmpb
inc
jge
cmp
clc
imul
sub
sub
push
cmp
add
ret
pushf
or
test
mov
dec
and
pop
xchg
inc
stos
mov
push
aas
sub
dec
inc
mov
data16
mov
or
mov
xchg
push
or
ja
cmc
add
dec
and
adcb
sub
rol
iret
and
xchg
mov
dec
in
orl
mov
xor
pop
cmpsl
mov
lods
loop
fmulp
cmpsb
mov
cmpsb
add
cwtl
push
bound
xor
test
mov
push
popf
xchg
popf
mov
test
xchg
fsubrl
add
sahf
adc
inc
mov
jg,pn
sub
mov
lock
cmp
and
lahf
and
fistpll
jge
sub
inc
and
inc
cmpsl
lods
xor
addr16
sbb
add
idiv
int3
fwait
add
xchg
pop
mov
sarb
add
adc
sub
adc
test
mov
fwait
jle
dec
mov
inc
mov
fst
jecxz
cmpsb
sbb
icebp
ljmp
clc
lcall
andl
div
mov
sub
mov
jo
leave
cmpsl
cmp
fisubs
je
testb
repnz
sahf
sbbl
aaa
shrl
and
subl
push
nop
enter
pop
in
inc
jno
dec
mov
mov
sub
int
and
ss
jl
jne
and
push
sarl
mov
xor
or
fcmovnbe
ret
add
js
pop
test
aaa
sub
cmp
aas
into
push
ffreep
repnz
and
int3
mov
cli
popf
jno
aaa
adc
movsl
ss
and
fidivl
movsb
and
add
pop
int3
jne
cmp
lcall
int3
dec
push
pusha
push
outsb
mov
fs
adc
in
xor
fdivrs
pop
push
das
cmp
xchg
jne
push
pop
ljmp
int3
cmp
cmp
lock
js
mov
and
out
mov
mov
sub
fldl
or
out
test
and
mov
iret
movsl
mov
add
in
or
mov
scas
mov
adc
pop
xlat
std
test
push
js
out
dec
dec
iret
mov
mov
cmp
push
jmp
or
sbb
aas
jae
lret
pop
fcompl
cld
mov
push
test
dec
insl
jbe
mov
div
add
jne
and
cmp
mov
out
xor
inc
mov
movsl
repnz
cmp
pop
pop
aam
das
cmp
lods
push
mov
fcoml
lods
add
or
add
lods
ds
sub
sub
aas
addr16
mov
cmc
in
inc
push
test
mov
loopne
mov
cmp
sbb
insl
sar
mov
sbb
repz
jbe
jae
testb
jo
lock
lcall
fistl
xchg
jecxz
mov
divb
cmpsb
xchg
mov
je
xchg
lahf
jne
jne
lret
jne
std
mov
sahf
push
pusha
xor
or
cmpsl
arpl
decl
mov
lods
inc
imull
in
ja
loopne
outsb
push
inc
cltd
ffree
mov
add
rorl
push
pop
xchg
hlt
xor
mov
inc
xor
popa
lods
icebp
sbb
ret
sbb
movsb
js
dec
pop
xchg
rcr
cmp
pop
dec
shll
popf
andl
bound
test
mov
fnstcw
mov
push
scas
adc
aaa
mov
negb
cmp
stc
pop
add
push
out
xchg
nop
pop
loope
add
in
mov
mov
sub
lods
and
cmpsb
ret
fs
add
and
add
xchg
jb
loope
xorb
push
ljmp
sub
xchg
inc
dec
lods
loopne
jo
cmp
push
iret
lret
inc
cmp
mov
scas
outsl
xor
lret
jg
aas
xchg
repnz
sub
add
add
rorb
sbb
pop
fsubr
inc
or
addr16
push
lock
adc
fisubs
lret
repnz
lret
das
adc
out
negb
pop
xor
imul
add
xor
sbb
cmp
aaa
cmpsb
push
push
test
inc
inc
lahf
or
pop
lahf
loop
pusha
in
push
mov
enter
inc
mov
cmpsb
and
mov
cmp
insl
imul
fcomip
cmpsl
test
fistps
std
xor
dec
mov
inc
dec
adc
sbb
shrl
jge
and
mov
push
lcall
cli
xor
adc
loop
sub
push
fwait
std
lock
xchg
daa
into
in
sub
adc
movsl
lcall
dec
in
sahf
test
sub
adc
adc
cmp
inc
rorl
mov
adc
push
jnp
aas
mov
sbb
ss
rolb
cmp
movsl
stos
fcoml
repz
ds
sbb
jecxz
or
arpl
sub
in
cmp
dec
add
inc
mov
jne
in
and
pop
push
mov
adc
movsl
dec
lret
ja
loop
hlt
dec
es
xchg
shlb
test
test
inc
sbb
sti
aam
push
dec
mov
lods
mov
pop
pop
shl
fdivl
iret
popa
push
pop
es
adc
imul
push
and
push
test
push
lock
outsb
lret
or
mov
call
ret
cmp
push
sub
ret
sbb
inc
jo
sub
ret
pop
sub
test
stos
dec
xchg
into
inc
adc
dec
lds
jbe
sbb
mov
fstps
popf
cmpsb
push
or
icebp
push
fsubl
jb
fldl
mov
mov
scas
pop
jnp
call
and
out
adc
sbb
pop
iret
mov
mov
aaa
sub
jae
shl
xchg
cmp
dec
mov
inc
cli
sbb
cmc
add
mov
mov
mov
jge
inc
rcrl
mov
arpl
push
popa
pop
aas
push
mov
mull
stos
jae
mov
enter
cmp
std
xor
jg
push
and
mov
repnz
mov
push
push
add
test
xchg
subl
loop
pop
push
lcall
sub
pop
or
insw
adc
sub
fstps
or
scas
mov
add
add
pop
lock
ret
fcoml
jae
mov
stc
les
adc
movsb
stos
add
or
je
pop
scas
xor
jl
or
stc
int
sbb
adc
fisubl
mov
sub
xor
mov
jge
push
fdiv
andb
push
jl
dec
cmpsl
in
xchg
dec
cvtdq2ps
loop
in
sub
lret
lds
jo
pop
lea
push
rolb
rol
xlat
dec
push
inc
loop
fnstsw
inc
mov
sbb
in
sbb
sub
fadd
ret
lea
adc
cmc
sub
lea
mov
rcrb
pop
outsl
sub
cmpsl
enter
es
mov
scas
roll
pop
sub
rorb
enter
out
ret
push
jns
std
adc
pusha
jo
nop
sub
sub
hlt
xchg
int
push
sub
iret
sbb
xor
xor
mov
jo
cmp
mov
add
jg
xchg
dec
sbb
out
or
fyl2xp1
icebp
xchg
xlat
aas
insl
mov
outsb
xor
jne
shrb
mov
rcrl
pop
push
andb
pop
loopne
push
stos
lretw
sbb
pop
into
sbb
cmc
loopne
in
popa
iret
jecxz
mov
add
xor
jmp
lods
mov
or
cmp
int3
jge
jmp
rolb
pop
dec
pop
mov
sbb
pushf
dec
push
and
xchg
jmp
enter
cmp
ja
push
cmp
les
call
pushf
out
jb
fcomip
nop
jl
outsb
jmp
test
inc
mov
sti
mov
dec
aas
pop
jg
mov
out
adc
mov
loopne
fsts
xchg
mov
ret
and
stos
pop
mov
or
add
or
mov
and
sarl
push
jne
add
push
insb
pop
test
inc
cmc
pop
aas
std
jb
int
rcrb
adc
cs
in
scas
mov
dec
aas
adc
jle
xor
movsb
incl
sbb
xor
imul
mov
inc
mov
xchg
pop
sti
stos
cmp
fidivrl
mov
mov
daa
ss
call
fildl
inc
ja
xor
ja
mov
cmp
xchg
addb
xchg
push
push
pop
cltd
insl
scas
dec
dec
jg
movhps
or
dec
icebp
dec
mov
jns
cmpsl
cld
std
and
dec
hlt
pusha
out
pop
dec
jge
sbb
or
ss
jecxz
inc
xor
or
mov
mov
push
add
imul
sbb
adc
mov
daa
mov
mov
xchg
and
xor
lea
adc
jmp
movsb
dec
shr
outsb
mov
add
lcall
cli
adc
dec
sarb
fcoms
je
jne
dec
outsl
aas
imul
cs
insl
dec
push
popf
iret
pop
inc
fstl
add
cs
insb
cltd
mov
xchg
pop
pop
sub
pushf
stc
inc
hlt
rcrl
push
dec
jo
inc
fnstsw
push
or
or
add
popa
jecxz
dec
sbb
push
inc
les
fisttps
jl
jge
mov
jne
mov
stc
movl
test
sub
mov
scas
push
iret
pop
jg
cmpsl
imul
js
xor
call
lret
push
lods
iret
inc
sbb
testl
or
jmp
cli
fists
jp
push
cs
ljmp
hlt
mov
cmc
and
pushf
cmp
push
scas
int
cmpsl
gs
xchg
push
daa
and
mov
or
and
xlat
cmc
lods
jne
testb
pop
es
or
add
adc
gs
mov
mov
fwait
xor
sub
dec
sbb
adc
xor
ljmp
clc
repnz
mov
imul
aad
mov
loope
mov
test
das
in
cmp
mov
xor
roll
int3
sub
fcoms
mov
push
lahf
mulps
aam
or
push
and
push
xor
shrb
ja
sbb
std
les
jbe
lahf
mov
and
sbb
pusha
ljmp
jmp
or
sahf
loope
xor
cmc
std
dec
xchg
sub
test
mov
jg
mov
add
mov
dec
imul
xlat
jno
adc
mov
push
insl
jp
sub
arpl
addr16
iret
clc
lcall
shl
or
push
lods
dec
ud0
pop
jbe
bound
loope
int
adc
xchg
into
sbb
into
pop
mov
repz
aaa
mov
shl
jmp
add
shl
xchg
cld
addr16
jmp
cli
es
fidivl
mov
mov
in
out
out
mov
jnp
js
ret
cmp
aaa
pop
jb
jmp
push
mov
pop
pop
jnp
cmp
xor
test
xlat
jmp
mov
push
jae
push
push
cld
cmp
mov
add
sti
into
cs
inc
push
inc
xor
mov
xchg
xchg
test
adc
pusha
adc
cmp
push
or
mov
sarl
sub
cmpsb
mov
fsts
andl
sub
and
mov
push
pop
enter
mov
inc
pop
sub
fwait
or
out
data16
push
fiaddl
xor
push
xorb
sub
xorl
xchg
or
fs
pop
dec
inc
aaa
call
dec
imul
xchg
xchg
ror
mov
cld
leave
data16
pop
movsb
push
inc
lods
xchg
xchg
loopne
repnz
xchg
mov
inc
movsb
sub
sub
jbe
repz
icebp
push
fsub
movd
and
mov
call
xchg
je
call
jp
pop
push
lods
mov
cmp
pop
and
mov
xchg
jl
mov
addr16
sbb
cmp
mov
or
int
pop
sahf
je
and
jne
scas
xchg
callw
ret
inc
sub
rclb
or
inc
pushf
cltd
dec
cltd
push
push
dec
imul
je
sub
or
aad
push
sbb
jle
mov
rcrb
aas
sub
mov
sub
mov
sahf
xchg
push
ret
sub
mov
xchg
mov
sbb
es
popf
icebp
jl
andb
ret
pusha
in
das
or
cld
test
ficomps
repz
ds
das
xchg
aam
test
mov
xor
int3
inc
data16
push
cmp
lods
xchg
test
nop
sbb
into
std
ror
mov
scas
push
add
xor
shl
dec
addr16
adc
pop
scas
inc
lods
je
jae
ficoms
cmp
stos
mov
mov
into
push
jl
cmp
shlb
test
add
popf
rcl
mov
mov
addl
cmp
adc
lock
jae
pop
mov
loope
jmp
push
aad
mov
dec
clc
push
inc
call
jge
aas
out
jmp
mov
mov
jecxz
stos
xor
cmp
jle
mov
jecxz
dec
sti
hlt
adc
cmp
sarb
and
fdivl
pop
sbb
or
push
out
out
sar
push
cwtl
outsb
mov
les
sub
mov
rolb
cli
add
cmp
jle
cmp
dec
pop
sbbb
sub
and
les
roll
xor
pop
jecxz
cli
dec
or
and
addb
hlt
std
negb
adc
adc
scas
stos
dec
mov
fimull
jae
loope
cmpsl
cwtl
popf
xor
adc
mov
jg
dec
cld
daa
push
push
aam
push
pop
adc
fisubl
cmpsl
dec
lock
cmp
sbb
ret
jne
xchg
movsl
fistl
jno
push
push
movsl
dec
dec
jns
xchg
cmp
dec
adc
in
inc
add
cwtl
mov
sti
cltd
lcall
cmp
or
mov
mov
push
and
stos
cmp
mov
std
or
mov
nop
sbb
push
or
mov
add
or
xchg
xchg
cmp
mov
stos
or
movb
repz
bound
adc
mov
dec
and
hlt
pop
sub
adc
cmp
aam
pop
aad
cmpsb
inc
cld
cmp
sub
push
xor
imul
push
xchg
cmpsl
outsb
sub
repnz
and
fisubrl
scas
bound
call
inc
or
int3
mov
aad
rcl
sbb
aam
and
cld
add
rolb
test
push
test
ljmp
mov
test
outsb
xchg
fwait
jge
push
aad
repz
xor
aam
pop
and
mov
jmp
insb
popa
repnz
jbe
in
mov
sbb
mov
fisttpl
cmc
pop
sbb
movsl
out
sbb
mov
add
jbe
xchg
and
pop
mov
rcll
xor
inc
dec
pushf
mov
sub
sub
add
mov
cmpsl
push
mov
lcall
bound
push
jno
insl
cwtl
add
add
jae
data16
nop
addr16
add
sub
arpl
stc
orl
cltd
sbb
out
inc
add
cld
pop
pop
stos
shll
lods
jle
dec
call
out
fwait
adc
iret
fcompl
cmp
into
aad
sbbb
daa
add
adc
insl
push
cmp
test
stos
mov
int3
or
mov
popa
mov
add
loope
sarb
mov
or
and
cli
mov
sub
cmp
gs
xchg
out
testb
dec
mov
or
aad
lahf
pop
sub
rorl
xchg
imul
lcall
sbb
mov
inc
aas
xchg
adc
mov
jo
xchg
rcrl
aaa
jmp
ret
lahf
xchg
andb
iret
addr16
mov
call
mov
sbb
mov
shr
std
sub
movsl
add
insb
inc
enter
das
push
pushl
pushf
scas
enter
fmuls
push
xor
pop
test
divb
in
cwtl
mov
push
sbb
adc
pop
inc
addr16
inc
sbb
and
push
jae
mov
add
cltd
jo
and
mov
dec
add
aas
ja
into
sarb
xchg
jns,pt
out
cmc
negb
imul
shll
rol
ficoms
clc
sub
pop
int
dec
adc
ss
add
mov
pop
or
bound
in
jmp
xchg
pop
cmp
mov
fptan
mov
repz
frstor
jne
addl
pushf
push
ljmp
push
notl
into
add
cltd
sub
push
xor
lret
pop
mov
fnstenv
cmp
fisttps
loope
mov
dec
mov
test
mov
pop
daa
out
mov
cmp
inc
pop
test
clc
jge
xchg
mov
mov
push
and
ret
or
or
push
popf
cmc
mov
mov
inc
dec
repnz
adc
shlb
pop
aas
lods
ret
jae
add
mov
pop
push
jb
xchg
fisttps
jno
mov
lahf
rclb
mov
xchg
or
mov
or
mov
les
iret
loope
push
rorl
add
jg
mov
adc
mov
xchg
sarb
mov
mov
pop
flds
mov
into
add
call
push
scas
push
ss
add
sbb
jnp
push
ss
adc
int
iret
andb
xchg
mov
hlt
test
nop
inc
js
call
cmp
sub
data16
loope
xorb
dec
lea
dec
jg
sub
iret
lods
lret
not
scas
nop
xor
out
ljmp
or
push
sub
xchg
sub
pushf
dec
hlt
mov
or
jg
insl
das
jg
imul
mov
xor
xchg
pop
or
icebp
mov
inc
out
pop
scas
repnz
das
xor
jg
test
pop
adc
push
adc
dec
bound
mov
cmpsl
nop
cmp
aas
push
adc
pop
cld
jg
cmc
in
or
lds
push
test
mov
orb
sbb
jp
xchg
or
push
mov
jg
sub
xor
repnz
adc
pop
add
shrl
stc
shlb
mov
xor
add
aaa
jmp
push
ja
mov
push
push
sbb
loopne
add
xchg
sub
push
push
loopne
cmp
jbe
xchg
mov
xchg
adc
fiaddl
fmul
cs
in
mov
jne
xchg
loopne
shrb
mov
adc
cmp
cmp
push
js
movsb
sbb
push
or
xchg
sets
jg
outsb
adc
test
push
mov
clc
daa
mov
fsubrl
or
movsb
int3
cmp
sub
mov
add
xchg
cmp
adc
rolb
xchg
cmp
dec
stos
test
inc
lret
hlt
xchg
sbb
aas
xchg
or
mov
imul
add
jmp
or
jmp
jmp
mov
push
add
subl
xchg
nop
mov
scas
dec
sub
call
dec
or
cmp
add
xor
sbb
sbb
ret
loopne
popa
push
mov
mov
std
inc
jne
sbb
fdivr
mov
jmp
in
movsb
dec
xor
push
push
pusha
jl
fisubs
js
dec
sbb
cmp
and
std
pop
mov
xchg
stos
ljmp
daa
aaa
gs
jbe
and
int
mov
inc
mov
dec
out
jo
cmp
ja
pop
and
cs
sub
test
stc
imul
pop
in
or
and
ss
out
cmpsl
dec
pop
sti
andb
mov
pushf
cmc
pushf
lea
mov
pop
jle
fists
outsb
push
movsb
repnz
add
mov
fwait
inc
dec
pop
lods
pop
addr16
ja
pop
rclb
into
xor
scas
ja
sbb
push
pop
retw
mov
fwait
dec
hlt
iret
or
leave
jbe
mov
rolb
add
cmpsb
or
mov
lock
mov
lods
imul
dec
xchg
cmp
jl
dec
sub
dec
fs
fnstcw
adc
pop
pop
into
xor
push
mov
je
rcrb
and
sbb
pop
test
pop
inc
jno
in
pusha
dec
roll
sahf
jno
cmpb
dec
addr16
cld
loop
mov
push
or
jo
mov
ja
mov
test
add
fisttpll
sub
push
dec
or
jno
aad
jo
sub
mov
cld
sub
mov
call
adc
and
je
dec
jne
icebp
ljmp
inc
xor
sub
mov
bswap
push
mov
loopne
xchg
jle
outsl
dec
mov
jno
inc
roll
decl
pop
xchg
in
testl
sub
jp
xchg
dec
or
syscall
xchg
push
shlb
dec
fadd
mov
mov
and
sbb
mov
cmovb
xchg
mov
mov
popf
ror
xor
mov
xor
or
out
xlat
xor
inc
into
je
jmp
fnstsw
scas
dec
fstl
or
int3
jl
add
mov
in
ljmp
mov
push
add
mov
inc
mov
and
jg
push
inc
andl
xor
in
sub
jb
push
ja
ljmp
lods
add
adc
daa
out
mov
jmp
adc
push
repz
dec
or
inc
arpl
inc
jbe
push
addr16
sub
push
xor
nop
mov
inc
nop
dec
jg
add
jge
xchg
adc
sub
sub
and
iret
lock
and
push
imul
fsubrl
repz
test
mov
jl
pop
clc
arpl
or
mov
lock
sarb
sbb
icebp
popa
mov
mov
push
lea
jbe
daa
jg
stos
movsb
inc
cmp
loop
mov
sbb
cmp
sbb
rorl
repnz
xchg
shlb
stos
data16
and
mov
adc
enter
xchg
dec
rcrb
mov
sbb
dec
gs
test
daa
call
adc
pop
xchg
ret
shrb
neg
xchg
mov
aaa
xlat
lcall
das
mov
cmp
outsb
dec
mov
add
test
sub
pusha
xor
fldt
psubw
inc
lea
mov
push
and
and
icebp
repnz
sti
aam
pop
stos
cmpsl
out
fdivrl
daa
and
dec
fsubl
mov
in
jb
loop
xor
mov
roll
jl
lcall
popa
lea
mov
mov
cmp
mov
mov
mov
arpl
insb
mov
int
insl
lret
xor
in
inc
into
lea
and
lret
mov
mov
int
jno
sbb
mov
inc
je
decl
push
filds
idivl
mov
adc
out
push
outsb
and
inc
out
fwait
cld
fimuls
push
mov
dec
cmp
js
push
jmp
aad
inc
mov
inc
ja
xchg
subl
push
and
push
out
jnp
mull
pop
popa
ret
loope
mov
lds
loop
push
sub
mov
and
fcmovnbe
cmpsl
das
xchg
test
fdivl
jge
fdivrl
add
xchg
mov
sub
jle
dec
adc
mov
jge
dec
in
jae
clc
lods
push
mov
in
bound
in
xchg
mov
mov
shll
inc
jge
jmp
push
cli
inc
sub
lods
push
fisttpll
frstor
xor
inc
adc
shlb
jne
cwtl
xor
cmp
into
xorl
jo
ret
mov
testb
mov
mov
mov
imul
sub
pop
xor
testb
or
faddp
enter
shll
jae
cld
jno
mov
test
mov
push
loopne
and
xchg
nop
daa
xlat
in
cmp
add
outsb
sarl
dec
add
and
jno
test
fcmovnu
xchg
stc
movsl
das
dec
je
aad
in
push
cli
cmp
sub
sub
add
lds
sbb
xor
int3
dec
pop
fsubl
add
sbb
adc
sub
aam
movb
mov
adc
inc
rolb
dec
mov
dec
adc
lock
xchg
xlat
mov
add
sahf
push
loope
mov
shr
xchg
jle
js
dec
inc
cld
pop
mov
mov
imul
mov
cmpsl
int3
pusha
mov
inc
pop
mov
mov
lahf
push
mov
cltd
scas
sub
es
xlat
add
jns
pushf
shll
sub
inc
cmc
in
cmp
xchg
out
pop
or
cmpsl
sbb
rcrl
lahf
fcomip
adc
mov
sahf
mov
pop
enter
aas
sbb
inc
pop
repnz
mulb
aad
jno
rcl
stos
jp
xor
aam
call
add
ss
push
fldcw
cli
scas
lcall
pop
sub
cmc
js
movsb
cmc
or
scas
dec
test
icebp
cmpsb
repz
xor
inc
mov
cld
lahf
and
sub
test
push
cmp
inc
clc
in
mov
stos
push
mov
xor
jne
adc
xchg
pop
fidivrl
das
mov
jmp
sub
jmp
xor
cwtl
fucomi
xorl
sbb
jb
fwait
sub
add
subb
xchg
add
out
movb
nop
add
sbb
jl
xor
dec
imul
pop
mov
mov
mov
mov
loope
inc
jno
push
fistpl
adc
lods
das
test
xchg
mov
loop
add
and
pusha
repnz
es
jb
jb
sub
push
cmp
lret
in
mov
mov
inc
lret
mov
repz
inc
sbb
mov
sub
lret
pop
mov
scas
sbb
pop
test
hlt
xchg
or
xor
inc
mov
sti
sbb
pop
sbb
xor
jnp
scas
ljmp
pop
call
lcall
fcmovb
push
and
adc
pop
rcrb
enter
rol
nop
ds
pop
bswap
jmp
clc
sbbb
cli
aad
push
pop
call
add
shrl
mov
pop
out
dec
cmp
push
cmc
ret
and
push
in
mov
push
cmp
jns
fisubrs
cmpb
dec
pop
ret
test
ss
fcomps
in
dec
sub
mov
scas
pop
les
xchg
mov
sub
ret
push
sti
stos
adc
out
pop
or
js
aad
jl
sarb
aas
mov
inc
lcall
arpl
xor
cmpsb
sub
mov
aam
xchg
sbb
es
outsl
mov
or
cmp
loopne
cmpsb
jecxz
clc
cwtl
fdivp
icebp
inc
mov
notl
add
push
in
sub
adc
fbstp
lret
imul
mov
std
hlt
imul
xor
xchg
imul
sub
inc
ret
cld
push
xchg
orb
mov
fidivrs
daa
es
rcll
mov
xor
call
pop
out
stos
push
scas
mov
aam
sahf
dec
imul
test
shlb
sub
pop
clc
add
inc
mov
push
les
push
lods
dec
push
in
out
dec
xchg
dec
or
mov
and
adc
push
mov
cmp
adc
add
stc
mov
pop
stc
mov
or
sbb
testb
ret
jle
shll
add
dec
sub
mov
mov
xchg
lret
cmpsl
xchg
cli
sub
iret
icebp
fs
add
scas
pop
out
int3
in
sub
sbb
test
repnz
cmc
xor
mov
jmp
jge
pop
mov
cld
lret
jge
cmp
jmp
push
jmp
xchg
dec
scas
dec
lret
arpl
std
lock
cmpsl
push
add
cltd
in
lds
dec
push
clc
push
mov
repz
lahf
pop
loopne
inc
fiaddl
arpl
repnz
je
lcall
je
jne
jge
adc
pop
or
arpl
rorl
dec
sub
pusha
or
lods
cld
test
insl
movsb
gs
gs
pop
ja
negl
negl
push
sub
cmp
popa
pop
cmpsl
daa
repz
adc
adc
dec
fistpl
mov
imul
lcall
adc
sub
adc
int3
xor
nop
adc
es
imul
push
pop
mov
xchg
lret
cwtl
xchg
mov
add
jge
pop
xor
lcall
inc
adc
cmp
adc
fwait
push
imul
daa
fldt
mov
test
sbb
rcr
dec
inc
xchg
jmp
movsl
sub
lret
in
lahf
ss
stc
mov
mov
bound
popa
add
push
bound
pop
int3
dec
test
lods
loopne
adc
loop
cmp
mov
xor
add
mov
fistpl
icebp
inc
xchg
cmp
dec
pusha
sub
subl
jne
inc
mov
sbb
pop
icebp
dec
sbb
popa
and
out
fists
popa
int3
clc
and
pushf
ret
mov
cmp
mov
shl
xor
dec
rclb
jmp
pop
cmp
cli
adc
dec
jae
popa
cmp
or
test
int3
lret
gs
xchg
inc
add
jno
pushaw
loope
sub
dec
push
sub
mov
popf
push
aam
bound
fisttpll
jnp
in
pushf
je
in
xchg
adc
inc
cmpsb
push
mov
adc
lret
xchg
lock
pop
fwait
das
ret
push
sti
sarb
or
mov
add
popf
and
es
mov
daa
ret
add
sub
ret
aad
push
mov
dec
outsb
daa
popf
ds
or
pushf
mov
sub
loop
pop
mov
pop
es
inc
sbb
in
dec
mov
adcl
cli
in
xchg
jb
and
mov
aam
jo
addr16
dec
cli
inc
and
lods
adc
mov
cmc
repnz
inc
dec
aas
sbb
add
inc
and
lock
sbb
shll
imulb
jp
mov
mov
inc
aaa
mov
adc
ja
cmp
iret
pusha
and
fcmove
push
xor
add
jmp
jg
jp
lahf
mov
cli
lods
lea
iret
arpl
stos
rorb
ret
mov
sub
or
stos
test
mov
mov
fmuls
repz
mov
nop
mov
loopne
inc
xor
cmp
outsl
and
jno
dec
inc
cmp
add
into
inc
mov
jl
adc
dec
adc
cmp
cs
mov
xor
jle
leave
outsl
or
jge
and
mov
inc
xchg
lds
and
mov
testl
xchg
outsb
stc
add
or
cwtl
xchg
xor
rcll
es
sbb
sahf
xchg
outsb
cmp
xchg
shll
dec
xor
cmp
scas
fstl
roll
sbb
stos
fxch
adc
js
lods
jo
loope
xor
aad
leave
loopne
gs
and
xor
pop
mov
adc
jecxz
jbe
push
iret
loope
mov
cmp
testb
neg
lret
in
dec
das
jl
cli
xor
jmp
pop
mov
mov
mov
shll
scas
pop
mov
or
sub
insl
outsb
push
and
aas
xchg
xchg
push
push
adc
xchg
stos
jae
inc
sbb
push
pop
cltd
roll
sub
cltd
movsb
sub
out
in
mov
mov
push
test
insb
call
lcall
data16
pop
sbb
xchg
adc
pusha
xor
les
mov
jo
xor
popa
fdivrp
lds
js
arpl
scas
inc
enter
sub
jg
cli
sub
cmp
cmp
es
inc
repnz
sub
fs
in
test
cmpl
lds
pop
cld
fsubrs
dec
push
pushf
push
das
test
push
mov
xchg
adc
adc
mov
sbb
adc
xor
pop
mov
frstor
adc
xchg
insb
dec
cmp
mov
andl
xor
iret
and
int
mov
test
pop
add
bound
dec
pop
rorl
js
shll
xlat
insb
jp
outsl
mov
xlat
fdivrl
dec
aam
cld
add
pop
mov
cmp
idivb
xchg
movsb
cmc
lcall
cmp
dec
push
mov
sti
dec
push
and
movsl
lea
cmp
or
setp
fs
fcoms
fwait
sub
outsl
loop
mov
sub
xchg
loop
mov
push
cld
dec
push
push
call
pop
jne
and
in
cwtl
mov
cmp
mov
mov
sub
test
mov
mov
xor
sbb
cmc
push
mov
xorl
imul
notl
pop
hlt
imul
jmp
xchg
xchg
and
fsub
mov
pusha
xchg
xor
dec
es
xor
dec
cltd
push
repz
ret
cmp
dec
add
cli
adc
mov
in
insl
pop
mov
ret
enter
lock
push
mov
lea
xchg
js
sti
sub
stos
loopne
pop
mov
imull
ret
popa
mov
int3
fsubrs
adc
jb
ds
out
iret
and
imul
mov
mov
scas
inc
pop
push
pop
mov
mov
lock
out
mov
push
jnp
daa
adc
add
adc
orb
jg
call
shlb
aaa
adc
xchg
xchg
sub
cmpl
sbb
cmpsb
popf
fadds
sbb
out
shll
bound
adc
mov
mov
pop
jbe
jp
jge
ss
adc
mov
test
je
es
lret
jge
lods
add
mov
xchg
test
mov
lahf
scas
fcmovne
inc
jl
movl
mov
ljmp
fsubrl
rorb
into
and
fwait
xor
push
pop
adc
inc
xchg
xchg
clc
test
cmp
loope
movb
mov
inc
pop
cmc
inc
imul
daa
mov
add
xchg
aas
jg
in
mov
jbe
lret
imul
mov
jl
inc
add
dec
dec
inc
arpl
cmp
data16
jp
sub
pop
add
mov
add
rol
mov
mov
sbbl
dec
mov
and
aaa
and
in
sarl
in
xchg
aad
rolb
push
inc
sub
test
dec
add
and
sub
mov
and
push
add
adc
or
hlt
add
jg
dec
call
mov
adc
mov
sub
sahf
iret
push
sbb
jbe
xchg
dec
int
jne
mov
dec
mov
mov
mov
arpl
orl
sub
lret
data16
test
divl
mov
push
push
repz
and
insl
int3
mov
xchg
ja
cmp
cmp
ret
negl
adc
jnp
jns
in
getsec
cltd
shrl
pop
bound
mov
sub
jae
or
mov
call
xchg
in
sbb
inc
call
repz
push
into
mov
mov
xor
jne
xor
dec
push
xor
push
mov
daa
xor
repnz
sbb
fstpl
adc
pop
enter
adc
insb
mov
mov
ror
aam
lods
xchg
insl
outsl
pop
enter
lahf
cs
popf
clc
adc
xor
pop
inc
push
aaa
test
dec
into
jne
mov
sbb
lods
mov
inc
mov
pop
arpl
inc
movsl
je
xor
sahf
inc
dec
fisubrs
sub
sub
jno
or
jo
mov
imul
jb
jge
jnp
push
jae
sbb
enter
mov
xor
sbbb
adc
mov
lret
sub
push
out
and
fcmovne
cmp
adc
in
cmp
les
jmp
in
decl
call
sbb
xchg
cs
adc
loope
and
xchg
enter
sub
pop
or
xchg
sbb
scas
rorb
xchg
sub
fldl
int3
mov
adc
or
mov
mov
push
out
jecxz
or
cmp
xchg
or
push
lock
jmp
inc
test
xchg
mov
inc
mov
mov
dec
mov
shlb
dec
inc
jnp
push
lret
adc
add
repz
lods
out
jno
mov
js
gs
mov
inc
pop
sahf
mov
es
ret
add
or
cmp
mov
jg
inc
cmp
and
add
in
pop
dec
outsl
fwait
aam
sub
in
and
pop
add
sub
sbb
data16
inc
mov
ror
cmc
xchg
cmpsl
inc
add
cmp
call
fs
xchg
subl
pushf
bound
fdivr
or
xor
fs
jns
nop
pop
ret
mov
dec
divl
pop
mov
in
out
jecxz
notb
add
jle
adc
add
xor
xor
jg
inc
jbe
jmp
mov
jbe
ds
test
jns
dec
arpl
cwtl
jae
out
mov
fs
fdivs
xchg
cwtl
leave
in
iret
stc
add
xor
sbb
adc
mov
lahf
lods
jmp
cwtl
jmp
push
jae
shlb
sbbl
aas
adc
inc
jl
mov
xchg
mov
inc
pop
ss
stos
daa
cmp
pop
sbb
jecxz
enter
nop
mov
shll
push
pop
or
push
cmc
subl
dec
dec
call
mov
jle
adc
std
xor
sbb
iret
cmp
pop
in
xchg
js
pop
call
cmp
mov
into
push
jmp
scas
inc
push
push
push
cmp
mov
xchg
cltd
pop
dec
sub
push
xchg
push
enter
inc
ss
adc
test
fsts
arpl
mov
and
inc
mov
popf
cmc
fwait
adc
les
mov
popa
xchg
cmpsb
repnz
add
aas
inc
mov
sbb
shll
xchg
mov
in
std
sbb
std
test
push
mov
das
pusha
adc
jl
js
mov
shlb
rorb
pop
cmp
cld
or
add
mov
or
mov
sbb
cmp
ret
jmp
shl
jb
loopne
pop
lcall
arpl
aam
mov
scas
push
inc
add
adc
pop
and
test
icebp
rol
sar
aam
daa
dec
ret
daa
add
and
inc
mov
add
lock
movsl
jno
add
cltd
int3
jmp
ror
into
jge
push
mov
ja
push
into
cmpsb
and
fadd
insb
in
mov
dec
mov
xor
jo
cmp
cmp
loopne
lret
int
js
dec
insl
sbb
mov
push
cltd
jnp
xchg
mov
jb
jbe
and
test
cmp
stos
cmp
pop
pop
inc
repz
add
test
js
clc
sub
cmpsl
add
scas
orb
pop
dec
lock
das
mov
mov
push
mov
imul
cwtl
stos
add
leave
enter
movsl
xor
adc
js
push
repz
cld
add
in
add
dec
cmpsl
in
xor
punpckhwd
in
je
cmp
adc
jmp
mov
push
jp
ljmp
mov
dec
js
scas
loop
call
mov
and
loopne
sti
xor
push
imulb
push
call
mov
flds
insl
movsl
aaa
test
push
pop
popf
test
jb
hlt
sti
sub
adc
and
scas
push
es
dec
lods
sbb
aam
ljmp
sub
imul
add
dec
fmuls
mov
xchg
xor
xlat
mov
adc
cltd
movsb
pop
mov
call
xchg
shlb
repnz
push
sbb
pop
outsl
dec
addr16
lcall
xchg
cld
adc
jmp
mov
push
and
jb
and
js
jmp
call
scas
inc
add
imul
sahf
and
mov
rcrl
mov
xchg
mov
loopne
mov
fs
sbb
sub
ret
int
daa
push
popa
pop
pushf
or
sub
in
and
pop
insb
and
jecxz
jmp
jae
lret
jle
or
into
movnti
gs
add
rolb
or
push
aas
sub
xchg
ficoms
cltd
xor
adc
lret
xchg
inc
daa
cmp
cvtdq2ps
push
mov
sbb
push
jle
cmpb
hlt
cwtl
in
jle
imul
cs
xchg
lret
push
popa
lods
pop
aas
mov
pop
xchg
insl
push
outsb
xor
cmpsb
cmp
icebp
cmp
mov
rclb
sub
and
adc
ret
pop
in
pop
lret
data16
ret
and
pop
mov
add
outsb
fwait
push
xlat
mov
sbb
cmpsl
lds
or
imulb
jno
sbb
test
xor
sbb
inc
pop
and
in
dec
test
push
icebp
fdivr
addr16
mov
push
add
jp
sbb
jbe
mov
cld
pushf
or
jo
jbe
enter
ficoms
push
repnz
outsb
cmpsb
xchg
test
sub
stc
outsb
jb
push
or
hlt
xor
sub
and
and
and
out
lods
imul
lea
sbb
pop
mov
push
add
sub
inc
pop
push
fs
and
jae
insl
pop
sub
test
mov
or
or
sbb
inc
insl
mov
mov
mov
imul
push
cmpsb
sub
or
xchg
jge
push
xor
add
mov
cs
cld
sub
jge
pop
mov
hlt
sub
pop
push
xchg
call
mov
scas
ss
pop
jns
pop
xor
insl
and
ret
sbb
pop
movsl
pop
stos
sub
fs
dec
or
ljmp
inc
mov
test
adc
fimuls
in
andl
hlt
xchg
cmpsl
mov
cltd
sahf
mov
mov
mov
add
sbb
mov
pop
xchg
sub
jnp
add
sub
sbb
and
adc
and
adc
cmp
out
sub
fldenv
xor
ret
mov
adc
pop
push
aad
jecxz
into
mulb
insl
fwait
repnz
mov
push
cli
lds
jle
movsl
leave
cwtl
stos
pop
jecxz
xchg
test
inc
sub
mov
mov
aaa
repz
xor
stc
loop
fsubp
imul
pop
sahf
in
mov
jae
or
fsts
push
imul
jp
jnp
sbb
daa
cmp
in
sbb
sbb
ret
cmpsb
mov
jg
sub
sbb
push
adc
out
pusha
mov
stos
clc
cmp
sub
jmp
negl
inc
inc
in
sub
popa
iret
test
pop
and
xor
scas
aaa
aad
cltd
jmp
inc
mov
push
cmp
and
cmp
imul
mov
das
inc
push
test
push
cli
insl
jecxz
jp
test
divl
mov
adc
rcr
or
or
sahf
pusha
mov
push
dec
das
cltd
adc
push
je
loop
mov
shlb
sbb
cmp
adc
cmpsb
and
push
mov
or
xlat
ret
pop
dec
xor
jmp
xor
pop
jge
push
in
into
test
gs
push
fsubl
mov
inc
pop
std
sub
stos
inc
popa
fwait
adc
iret
push
xor
sarb
outsl
outsl
ljmp
and
sti
mov
imul
cwtl
add
jge
into
pop
in
jo
sub
adc
mov
loope
pop
xor
mov
pop
outsl
push
ljmp
add
stos
lea
ds
inc
jg
je
jno
addr16
ds
orl
aad
into
lret
nop
lods
sarl
popf
dec
and
es
lods
mov
mov
jns
mov
pop
popf
std
cltd
out
jecxz
cli
repnz
pop
fnstenv
test
pop
mov
push
mov
sbb
addr16
popf
push
aaa
xor
push
and
xor
scas
aad
or
and
lahf
and
negb
adc
cmpsl
addr16
les
sbb
aam
add
or
pop
jae
pop
dec
sub
hlt
ja
cmc
adc
jecxz
movl
shrl
outsb
loopne
xor
or
test
dec
adc
inc
sarb
fucomp
mov
shrl
pop
sub
push
xor
leave
inc
out
mov
dec
ret
mov
or
dec
movsl
sbb
callw
in
cld
lahf
push
push
push
lds
jne
and
lret
jle
push
sub
enter
mov
repnz
cli
sbb
or
js
push
test
lock
jle
call
cmp
pop
push
jg
or
in
test
es
mov
mov
int
fsts
hlt
lods
push
xor
jle
xor
cmpsl
dec
call
jl
cs
cmpsl
sbb
push
cltd
enter
pusha
stos
adc
and
sbb
es
xchg
dec
mov
popf
add
cmp
ror
into
popf
jp
fscale
mov
sbb
repnz
jne
mov
inc
sahf
pop
stc
mov
mov
and
cs
adc
loop
js
sbb
jl
cltd
push
cmc
insb
or
lret
fsubl
test
pop
std
xor
add
mov
or
cwtl
aad
xchg
add
sbb
add
xor
and
sbb
dec
out
lods
or
sbb
ret
sbb
jno
xchg
add
lds
jp
out
pop
sar
stos
push
jmp
sbb
sahf
outsb
les
dec
add
pop
jno
xor
cmp
out
xor
jecxz
inc
test
fwait
mov
lahf
test
ficoms
and
pushf
daa
fs
pushf
pop
cmp
jp
xchg
sahf
xor
aam
push
addr16
jbe
xor
in
sub
jle
dec
or
jl
cmp
mov
fistpll
jle
mov
dec
sub
loop
ds
lahf
je
bound
or
mov
leave
inc
mov
cld
or
cmp
push
cmp
pop
push
pop
rorl
lods
lods
pop
xchg
and
dec
mov
outsb
mov
nop
aaa
push
shl
xorb
cli
jp
ljmp
and
sarb
pusha
pusha
dec
cli
adc
and
adc
std
lcall
sub
xchg
mov
inc
fistpl
lret
push
dec
xor
pop
push
scas
movsb
xor
mov
lea
aam
popl
std
ds
jnp
stc
std
shlb
and
pusha
mov
scas
in
insl
sbbl
inc
ljmp
pop
mov
popf
inc
jmp
jno
xchg
loop
subl
xchg
ds
pop
mov
jnp
pop
cli
js
cmp
dec
pop
dec
pop
push
mov
dec
stos
jle
stc
push
cmp
rcl
scas
cmp
push
in
popf
xor
mov
shrl
test
inc
and
pushl
insl
xchg
mov
inc
ja
adc
movl
mov
into
into
pop
mov
adc
je
enter
insl
in
test
pushf
jp
ja
cmc
xchg
fs
cmp
insl
cmp
lds
mov
jmp
or
mov
leave
cltd
and
mov
aaa
mov
imull
add
sub
aad
notl
pop
sub
lahf
xchg
fimuls
daa
cmp
lock
bsf
rcll
dec
es
nop
pop
mov
or
add
sbb
jmp
pushf
loopne
mov
mov
paddb
jno
jae
aas
idivl
test
inc
pushf
dec
xorl
sub
and
outsl
pop
dec
adc
cld
call
andl
sub
add
nop
lea
mov
lock
adcb
imul
cmp
xchg
int3
stos
rolb
imul
cltd
gs
imul
aam
mov
mov
pop
fcmovu
insl
add
call
sbb
loope
mov
jo
fstl
ja
aad
push
rclb
sbbb
inc
push
ror
jg
jl
mov
insb
divl
xchg
xchg
mov
xchg
mov
adc
xchg
jecxz
mov
dec
pop
test
push
int3
dec
xchg
das
fwait
scas
arpl
out
mov
leave
aaa
and
add
xchg
sub
fnstcw
push
sbb
xlat
mov
test
fsubrs
shll
push
inc
pop
mov
and
popf
negb
call
push
shll
jnp
shll
fwait
or
ja
jecxz
mov
mov
xchg
mov
push
push
xchg
or
or
lods
adc
mov
cmpsb
lcall
test
inc
sbb
scas
xchg
enter
shll
hlt
xchg
test
push
lcall
dec
cli
mov
lds
out
push
rdpmc
dec
popf
xor
test
pop
les
dec
sbb
test
outsb
pop
call
aad
shl
and
daa
adc
cmc
fs
sbbb
pop
dec
sub
jle
mov
rcrl
jnp
xchg
push
cmp
mov
jp
pop
mov
fdivrs
dec
mov
das
xor
ficoml
cli
pusha
adc
lcall
xchg
dec
mov
inc
ret
jg
pop
pop
sub
lods
call
rcll
idiv
cmpsl
stos
mov
fisubl
push
fidivrl
imul
cld
test
les
std
es
rcrb
dec
jne
or
cwtl
add
clc
add
sbb
popa
mov
push
leave
adc
ret
cltd
xchg
scas
outsl
test
dec
scas
push
imul
pop
fnstcw
out
push
clc
stos
push
sub
mov
sbb
pop
fdivrl
mov
ljmp
loope
jmp
ffree
jns
xor
popa
test
and
mov
roll
shlb
xchg
lcall
push
push
and
dec
or
mov
sub
add
rclb
sub
stos
testb
movsb
rcrb
ljmp
es
fdivr
cwtl
mov
jnp
xlat
repz
test
fists
outsl
and
loop
adc
cli
pop
mov
test
mov
fdivrl
or
lods
lods
stos
fistpl
push
lcall
in
mov
pop
push
out
std
xchg
cwtl
das
cld
out
out
adc
cs
dec
sbb
ds
xchg
jno
js
push
mov
jge
and
lahf
cmpsl
inc
push
jmp
dec
in
dec
lods
sti
test
jae
mov
outsb
jl
js
pop
decl
dec
lods
cld
fs
jmp
call
cmpsl
fdivl
ficoms
ja
xchg
push
idivl
test
scas
xchg
jno
loope
fidivrs
inc
dec
jnp
xor
int
cs
addb
sub
mov
mov
jp
and
pop
and
movsl
mov
dec
pop
or
jnp
call
leave
sbb
lret
pop
je
ss
out
mov
add
aas
lret
pusha
and
lods
lretw
push
loop
dec
mulb
std
mov
adcb
inc
rcll
test
xor
xorb
xlat
rcrb
xor
int
hlt
push
xor
or
sub
addb
inc
sbb
repnz
das
in
inc
repnz
add
fildl
push
xchg
sub
pop
iret
adc
or
int3
ror
inc
lds
cmp
rclb
inc
push
lds
sarl
les
add
ds
fcomi
jns
test
pop
mov
repnz
mov
divb
push
xchg
mov
sbb
xor
movsl
xor
loop
jecxz
jbe
hlt
in
cmp
out
call
xor
aad
cmp
addr16
loopne
mov
in
in
data16
mov
into
push
test
ljmp
data16
mov
imul
push
addl
fidivs
clc
mov
bndldx
bound
and
xchg
xchg
push
pop
cmp
dec
movsl
cmc
or
xlat
pushl
push
ja
pop
icebp
outsl
lret
popa
pop
out
pop
mov
push
out
aam
or
bnd
sub
mov
push
inc
or
adc
fmuls
xchg
cld
xchg
outsl
hlt
xor
daa
push
xlat
mov
cli
dec
or
and
or
movsb
lods
inc
outsl
mov
test
cmp
mov
fmulp
push
lea
gs
insb
shl
fsubp
sti
scas
or
adc
mov
dec
aas
mov
or
pop
inc
lods
mov
je
in
lcall
in
incl
sbb
negb
out
cmp
fbstp
dec
jb
repnz
shrl
cmp
mov
or
dec
adc
js
icebp
sahf
int3
insb
push
stos
sahf
test
sub
mov
into
jno
call
inc
cmpsl
and
mov
jb
scas
out
shlb
adc
mov
cwtl
and
xchg
xchg
cmpsb
add
push
pop
adcb
subb
add
mov
jo
and
add
add
xor
popa
lret
out
cmp
pop
xchg
jle
inc
or
inc
and
sub
xchg
enter
xchg
fptan
aaa
popa
pushf
mov
addl
fstpt
pop
aaa
adc
orb
cmpsb
sbb
cmp
xchg
adc
mov
cld
add
add
test
cmp
test
mov
adc
pusha
lods
inc
or
out
test
add
pop
sub
mov
into
flds
cltd
lods
daa
in
adc
sbb
or
int3
jg,pt
cmp
cltd
mov
shlb
pop
fiadds
testl
pop
sub
roll
hlt
cmpsb
sahf
cmc
xchg
fcom
xor
push
pop
and
sbb
lods
adc
ret
inc
mov
insb
sbb
inc
sub
inc
pop
scas
out
jmp
into
shrl
xchg
add
sti
jnp
inc
adcb
or
ja
mov
mov
cmc
xor
cs
fs
xchg
test
xchg
or
fwait
push
mov
mov
leave
mov
das
xor
sbb
add
addr16
popa
std
cltd
in
mov
es
pop
test
and
dec
add
mov
xor
loopne
inc
inc
fstpt
fisttpll
adc
and
and
or
push
stos
fldenv
inc
xlat
mov
sarb
negb
je
dec
popf
lock
xor
pusha
sti
mov
shl
or
push
or
negb
jns
jns
jnp
mov
mov
getsec
add
stos
xor
hlt
notb
sbb
scas
insl
mov
cltd
push
mov
sti
stc
insb
cmp
pop
mov
jnp
shrb
push
roll
fwait
out
shl
decb
es
daa
cmp
bswap
mov
popa
pop
out
dec
xchg
add
int3
inc
js
and
dec
dec
jle
sub
xor
aas
mov
or
and
xchg
imul
sbb
in
add
enter
lods
add
roll
outsl
mov
and
cmp
add
loop
fwait
iret
out
fwait
ja
sub
dec
mov
js
out
outsl
sbb
pop
sub
into
aad
rolb
int3
outsb
xlat
mov
fcoms
mov
je
xchg
xchg
mov
icebp
outsb
pop
hlt
dec
bound
pop
adcb
sbb
subps
icebp
mov
xchg
insb
movsb
mov
mov
mov
mov
stos
sarl
mov
sti
xchg
sub
pop
or
mov
and
pop
into
sbb
in
mov
adc
into
das
test
pop
and
push
sbb
mov
add
sbb
scas
ret
outsb
pop
mov
pop
mov
mov
inc
roll
icebp
aas
push
jmp
mov
sbbl
pushf
cwtl
iret
sub
jle
call
sarb
adc
xchg
sub
es
cltd
jp
rcl
outsb
pop
cmp
or
outsl
and
cli
mov
pop
jmp
test
mov
or
xchg
cli
inc
pop
shrb
mov
cwtl
xlat
xchg
call
scas
test
das
setle
add
pop
sbb
aam
fcomps
or
xchg
enter
push
inc
push
mov
dec
std
mov
aaa
arpl
addr16
rcrb
or
push
xchg
jl
pop
icebp
inc
test
push
cmp
mov
push
iret
ss
pushf
inc
vphaddbd
test
adcb
xorl
xor
test
cwtl
icebp
xorl
mov
xchg
jg
inc
jmp
dec
fabs
aam
dec
pusha
lret
jle
lahf
inc
mov
dec
shl
imull
int
aam
add
sbb
ror
sub
faddl
notl
pop
add
lods
jl
js
mov
outsl
repz
rcl
leave
aaa
rcrl
and
xchg
jne
mov
sahf
mov
mov
cmp
cltd
push
mov
and
or
ret
mov
cmp
out
leave
test
in
test
out
jns
sti
movsl
jecxz
pushf
push
mov
dec
mov
mov
fucomip
cltd
add
jge
nop
inc
cmpsb
out
xchg
pop
mov
lods
push
inc
lret
sbb
adc
cltd
pop
mov
add
cmp
mov
leave
sbb
inc
jae
ficoms
add
xorl
and
jmp
inc
xor
cwtl
dec
fisttps
fldcw
adc
xor
adc
xor
cltd
rorb
and
call
stc
mov
mov
mov
and
cmpsl
lods
pop
jecxz
sbb
mov
in
dec
fsubl
push
sub
xor
cmp
add
fidivrl
stc
cmpl
test
xor
mov
sub
push
shlb
cmc
jp
mov
xor
flds
push
jne
arpl
pop
add
mov
lcall
into
sub
cmp
cmp
lods
pushf
cli
or
test
lret
movsl
jge
fs
cmpsl
xlat
dec
sbb
ja
cld
mov
mov
xchg
and
into
push
mov
hlt
cmpsb
fisubl
leave
jbe
mov
xor
cmpl
aam
shr
inc
fdivs
rcrl
jnp
sbb
aad
inc
rcr
out
out
pop
cli
subb
mov
cmp
aad
pop
cwtl
sbb
cmp
inc
call
das
adc
es
push
jg
jge
cltd
dec
arpl
xor
mov
imul
xchg
lods
fildll
mov
jne
fs
fucomi
mov
inc
adc
nop
movsl
sbb
inc
stos
pop
xor
lahf
scas
fsub
cltd
notb
mov
push
jmp
jge
mov
sub
icebp
fs
sbb
in
jge
mov
in
shll
js
mov
jb
stos
jne
into
jnp
jbe
outsl
inc
sbb
popa
out
das
mov
pop
sub
xor
ds
in
loopne
sbb
sub
das
jmp
pushf
cmpsl
loop
leave
lahf
dec
push
push
push
cmpsb
mov
sbbl
je
jne
mov
sub
and
imul
popf
push
jmp
ret
lcall
adc
lds
loop
mov
loopne
dec
int
push
lods
xchg
cmc
mov
pop
hlt
cmp
imul
arpl
mov
jmp
daa
jecxz
repnz
popa
aam
hlt
das
or
inc
mov
mov
ljmp
fnstenv
sbb
jp
ljmp
mov
pop
push
push
loope
enter
dec
jmp
sahf
gs
push
pop
cmpsb
ret
mov
xchg
jle
add
test
and
mov
adc
cli
cmc
popf
and
cmp
inc
add
cmp
je
inc
pop
ss
xchg
or
pop
pop
mov
mov
jo
xchg
sub
ss
jns
jge
xor
fwait
ror
in
es
insb
fstpt
shrb
iret
or
mull
push
orl
jne
jl
adc
or
adc
or
clc
adc
movsl
cmp
pop
sbb
das
pop
cmp
jnp
bnd
xor
std
push
daa
cs
je
sub
fwait
imulb
push
leave
dec
hlt
or
mov
and
aaa
fcoms
pop
popa
out
cmpsl
pusha
xchg
push
cwtl
test
xchg
jg
jle
jmp
and
inc
call
repz
sub
jne
add
sbb
jmp
ljmp
insb
inc
loop
cmp
jae
daa
scas
lods
inc
mov
add
test
sub
sbb
add
ljmp
cwtl
clc
iret
mov
out
fldenv
or
popa
cmpsl
in
leave
aam
and
ret
fsub
lea
pop
xchg
adc
cmpsb
dec
jmp
es
push
inc
out
mov
xchg
jp
lock
shr
push
sub
fisttps
adc
fxam
mov
lcall
ss
cmp
sub
push
mov
inc
test
outsb
push
cmp
pop
mov
sbb
dec
movsl
mov
lods
xchg
sub
dec
sub
icebp
and
shrb
vmovq
adc
mov
cmp
xor
jns
xor
fiadds
pop
cmp
out
jns
push
data16
jnp
or
pop
cs
aaa
inc
repnz
adc
sub
cltd
cmp
or
testl
dec
lea
mov
dec
fadd
ror
movb
mov
cvtdq2ps
adc
cli
mov
fdivl
push
imul
pusha
inc
orb
hlt
jns
je
mov
cmp
pop
mov
inc
cmp
push
xchg
mov
or
std
pop
gs
jg
jb
andps
js
test
ret
sahf
xor
xor
jle
or
jno
or
movsb
clc
hlt
nop
pushf
rolb
sbb
rcl
cltd
sahf
and
xchg
fdivl
cs
mov
ja
xchg
adc
insb
or
test
pop
sbb
mov
leave
insb
mov
jb
add
shrl
cmpsb
popa
mov
ret
mov
jg
cli
mov
add
inc
movsb
rol
imul
xlat
jns
shll
sub
xor
ds
adc
xchg
loope
cmp
jb
cmc
dec
xchg
and
popa
test
ljmp
add
or
leave
sub
arpl
mov
in
sub
loop
pop
leave
xchg
and
sub
iret
repz
fistps
sub
or
jmp
push
icebp
movsb
insb
lcall
mov
in
test
nop
xor
adc
out
ja
movsl
pop
insl
outsb
mov
push
sbb
mov
cmp
pop
pop
fs
mov
jno
stos
sub
mov
jecxz
jne,pn
out
mov
mov
push
cmpsb
mov
flds
xor
aam
and
inc
mov
jmp
daa
lea
xlat
sub
pop
cmpsl
mov
add
xchg
fwait
mov
jmp
jle
or
imul
adc
xor
inc
sti
aaa
scas
das
push
inc
xchg
ret
and
insb
stos
push
jmp
sahf
xchg
jo
jb
pushf
mov
cmp
aam
fsub
mov
loopne
xorb
xor
or
xchg
or
mov
pop
dec
push
in
out
mov
jmp
cmp
xor
adc
jmp
jg
es
aaa
fstl
push
roll
repz
jp
sti
xor
rorb
mov
mov
pop
sbb
mov
jbe
mov
mov
and
inc
cmp
jne
xchg
aam
leave
cmp
out
sbb
enter
and
dec
dec
sub
je
cmc
push
faddl
jno
jg
popa
fiadds
push
insb
push
fs
cmp
cltd
bound
push
mov
jge
ds
push
sbb
mov
and
xor
cli
scas
aad
aam
int
xlat
lret
mov
in
adc
sbb
dec
add
ljmp
in
sub
mov
inc
ret
je
out
or
lret
cs
popa
aad
mov
push
mov
ficomps
dec
or
sbb
sbb
js
ds
ljmp
lret
adc
jecxz
lret
addl
or
mov
or
inc
bnd
lret
aam
mov
out
mov
push
xchg
jno
pop
or
inc
rorl
leave
xor
adc
pop
jno
cmp
push
and
mov
add
jns
or
xchg
inc
mov
cmp
and
test
mov
dec
fwait
jcxz
cmp
cmovle
out
push
test
je
xor
pop
xchg
mov
push
dec
int3
or
adc
sub
ficoms
mov
fcoml
sub
clc
or
daa
flds
outsl
jne
push
and
call
sub
jl
pop
mov
mov
mov
xchg
pop
daa
pop
inc
cmpsb
jae
andl
mov
sbb
push
movsl
notl
pop
adc
sahf
subl
inc
mov
fs
cld
jmp
inc
fcomps
or
ret
aas
push
adcl
lea
push
adc
adc
ljmp
pop
add
mov
ret
or
cwtl
or
aad
jns
into
in
mov
sub
lock
mov
es
sbb
and
mov
add
repnz
adc
clc
sti
and
adc
push
gs
inc
out
popa
xor
push
pop
aam
push
les
mov
mov
sbbb
sbb
add
pop
out
sbb
rorl
in
aam
dec
aaa
push
ja
stos
rcrl
jge
rcrl
movsl
xor
add
dec
mov
shlb
push
jo
fldl
ret
test
inc
jecxz
fwait
cmpsl
test
bnd
sub
rolb
jecxz
cmp
and
sub
loopne
or
test
lret
add
xchg
adc
inc
pop
mov
rol
inc
cmpsl
add
dec
jb
insl
pusha
pop
adc
sti
push
jbe
xlat
popf
push
dec
sahf
and
fdivrl
je
and
mov
pop
sbb
lds
test
and
adc
fdivl
cmp
mov
push
lods
movsb
xor
imul
mov
ljmp
icebp
add
xor
cmpb
nop
ficomps
mov
mov
pop
dec
and
pop
shll
sub
subb
shll
dec
push
mov
mov
push
pop
jmp
or
lcall
cmpsl
adc
lea
nop
sub
mov
shrl
fcomp
cld
cmp
inc
mov
push
aad
dec
js
repnz
inc
das
sub
xor
mov
pop
insl
test
cmp
sub
sbb
pop
xchg
dec
je
mov
fs
nop
mov
rcrb
pusha
and
push
jge
in
mov
mov
jno
push
push
mov
in
jl
scas
movsb
mov
sbb
mov
sbb
mov
test
dec
pop
pop
rclw
arpl
inc
repz
cmpb
and
je
cmpsl
fisttps
mov
mov
roll
sbb
std
leave
jns
into
dec
sub
push
sub
add
gs
adc
dec
les
adc
mov
or
lcall
xor
hlt
mov
mov
mov
adc
adc
adc
or
lahf
ret
fisttps
adc
xor
out
sub
in
shlb
ret
je
or
shrb
clc
sar
mov
jge
ret
push
data16
cmpsb
inc
sub
dec
aaa
xor
out
in
pop
shll
and
cwtl
adc
inc
add
rcl
mov
fmull
out
jo
pop
or
rcll
inc
mov
mov
out
enter
out
and
mov
mulb
xchg
push
cmpsl
and
popa
inc
and
lcall
or
lcall
lret
or
mov
pop
int3
xorb
mov
inc
iret
mov
and
es
jl
add
dec
mov
nop
dec
imul
pop
hlt
lret
pop
jbe
insl
mov
add
out
dec
push
xchg
mov
mov
add
test
pop
xor
insl
pop
sbb
push
xchg
stos
add
mov
in
lock
test
scas
mov
mov
addr16
jb
outsb
cmp
fimuls
das
xchg
cmp
cli
fldt
arpl
or
into
cmpsl
push
aaa
shr
pop
subb
cmp
dec
sbb
outsb
sbb
es
repz
mov
sarl
sub
mov
fwait
xor
add
xor
imul
sbb
imul
mov
push
cs
adc
cmp
adc
arpl
mov
dec
push
jnp
sbb
jle
or
cmpsb
inc
out
pushf
adc
mov
cmp
pop
pop
mov
jle
xor
lods
jl
pop
ds
movsl
idivl
int
ret
cmp
cmc
push
mov
adc
xchg
push
xor
test
xlat
notb
shlb
scas
dec
push
inc
adc
lahf
mov
xlat
adc
push
adc
jo
push
xor
and
pop
js
dec
clc
or
in
xchg
push
sarl
outsb
and
cmp
mov
ljmp
arpl
jne
bsr
xor
aaa
mov
shll
sub
int3
and
cmp
add
push
and
push
fnstenv
repz
xchg
mov
adc
pop
dec
scas
push
dec
scas
push
sub
ret
and
xchg
add
sub
push
negb
fprem
ja
pop
das
je
js
inc
push
and
and
cltd
nop
or
adc
sub
lret
adc
adc
push
jns
adc
test
and
xor
pop
jno
repz
cltd
sbb
inc
mov
or
jb
jp
sar
adc
dec
mov
out
pop
pop
cmova
out
sub
stc
faddl
fidivrs
sbb
nop
and
mov
adc
pop
and
adc
rcrb
inc
xchg
cmp
add
fdiv
insb
incb
stos
pusha
iret
int
ds
scas
sahf
daa
or
sarb
nop
pop
loopne
xor
scas
inc
shll
xor
pusha
push
call
adc
jecxz,pt
mov
sub
jns
pop
pushf
mov
jmp
inc
sub
ret
push
shlb
es
add
dec
and
add
test
xchg
rorb
rorl
sub
adc
adc
push
shrb
sub
or
adc
gs
dec
mov
mov
jo
mov
shrb
cmpsl
xchg
pop
sbb
jge
sar
xor
repnz
add
pop
stc
sub
in
xor
pushl
fadds
imul
bound
call
mov
inc
mov
movsl
lods
dec
aad
pop
pop
insl
insb
pop
jne
push
xchg
mov
push
test
outsb
lock
call
test
and
jecxz
and
mov
inc
icebp
cs
sub
jmp
push
loopne
jae
mov
mov
fsubrs
mov
in
fwait
cmp
xor
sbbl
xchg
lea
leave
cmp
inc
pushf
xchg
lea
leave
dec
xchg
xchg
xchg
and
les
xchg
cmp
jge
jae
pop
jecxz
dec
sbb
shrl
lret
mov
jns
push
sbbb
dec
or
xchg
dec
push
into
jmp
mov
cmp
lods
movb
fstl
adc
lock
xchg
dec
idivl
inc
inc
xchg
ss
lods
mov
mov
jo
inc
and
icebp
xchg
jae
hlt
xchg
xor
xchg
push
leave
dec
scas
xchg
xchg
inc
gs
mov
sbb
cld
jl
cs
and
jmp
imul
pop
lods
pcmpgtw
and
in
sub
sbb
repnz
insl
and
scas
ds
inc
mov
jo
in
icebp
xchg
test
in
xor
iret
or
lahf
daa
sbb
mov
xor
cmp
leave
mull
scas
cmp
test
pusha
aas
dec
sti
movsb
scas
inc
ret
mov
inc
lods
push
enter
fsubr
mov
ror
testb
movsl
jb,pn
sub
or
fsts
lea
push
inc
mov
xorb
push
hlt
sbb
lods
cltd
cmp
mov
sbb
xchg
dec
outsl
sbb
rol
mov
shrl
jmp
pop
frstor
cwtl
mov
test
cmp
lock
xor
fcompl
dec
sub
aad
mov
pusha
jg
pop
cmp
popa
xchg
and
insl
and
jno
jecxz
mov
shlb
xor
pop
ds
pop
gs
mov
setnp
mov
sub
jmp
enter
out
cmc
mov
int3
loopne
dec
mov
push
lods
inc
xor
push
mov
mov
inc
xchg
dec
mov
push
pop
idivl
lea
mov
xor
push
lret
or
inc
mov
sub
jno
or
inc
sub
mov
das
mov
pop
int
data16
popa
pop
in
js
jae
or
mov
or
shlb
sub
hlt
dec
mov
popf
mov
mov
arpl
test
jbe
mov
sbb
iret
sub
xor
movsl
ds
movsb
mov
xlat
mov
shl
stos
jp
lea
sbb
loopne
data16
fimuls
loopne
fxch
mov
dec
xor
sbb
mov
fbld
rclb
cld
jnp
mov
or
dec
xchg
adc
and
mov
sub
jnp,pn
mov
adc
adc
dec
dec
mov
nop
into
inc
cmp
arpl
lahf
cmc
jle
dec
clc
inc
jae
int3
mov
push
es
xchg
inc
shlb
arpl
adc
xor
fmul
mov
sbb
push
jmp
fmull
cmp
leave
lahf
mov
imul
xlat
sbb
adc
cld
lods
lea
sbb
cmpsb
push
cmp
mov
es
jp
cltd
lock
xchg
inc
pop
fwait
stos
jge
inc
adc
aas
pop
mov
rcrl
js
sub
in
or
ljmp
jle
xchg
dec
dec
js
jp
fbstp
and
pop
lds
int3
int
js
mov
mov
mov
iret
lea
sub
jne
leave
fcoml
les
xchg
aam
stos
stos
sbb
out
sbb
push
adc
mov
mov
shrl
jecxz
mull
stc
and
loop
mov
rcrl
sti
and
sti
scas
mov
out
lds
adcb
data16
icebp
push
clc
inc
repnz
cmp
sub
xchg
loope
pusha
sarb
jmp
pushf
imul
stc
adcb
cmp
sbbb
cmpsl
fldenv
stos
xchg
scas
loopne
hlt
sahf
or
push
push
mov
mov
mov
cmpsl
insl
add
mov
push
cmp
push
stc
mov
xor
or
mov
lret
adc
adc
ret
xor
adc
mov
jl
iret
lds
lods
add
jae
mov
jnp
arpl
cmp
add
test
add
sub
push
shll
icebp
icebp
aaa
ja
push
sarb
pushf
jb
lret
mov
int3
mov
pop
ds
out
test
fldenv
sahf
ret
mov
push
mov
idivb
mov
insl
std
loop
push
jne
or
dec
or
push
addb
mov
dec
adc
sarl
sub
and
inc
stc
lcall
and
add
or
nop
add
xchg
add
movsb
cmp
ret
std
jae
mov
bound
repnz
stos
inc
mov
inc
xchg
fld
sub
or
stos
inc
in
pushf
inc
movsb
xchg
pop
push
mov
xchg
nop
adc
mov
cmp
sbb
sub
inc
adcb
es
xchg
pop
dec
sbb
mov
xor
lret
mov
out
push
loopne
mov
mov
popf
jno
hlt
xor
lea
movsl
jl
jmp
xchg
or
and
sbbb
adcb
cld
jmp
andl
test
add
jge
popa
xor
mov
or
push
xchg
push
mov
sub
scas
inc
jle
adc
lcall
movsl
mov
adcb
in
orb
int
cmpsl
cs
outsb
mov
scas
adcl
repnz
push
cmp
fistpll
add
cmc
in
test
enter
mov
scas
imul
icebp
dec
pushf
movsb
hlt
fxch
jle
mov
pop
sub
adc
xchg
push
mov
sarb
adcl
outsl
or
push
mov
or
xchg
fmuls
in
xor
mov
test
into
push
insl
jne
pop
arpl
adc
lock
aad
cli
rol
pop
insl
pop
sub
cmp
daa
push
mov
leave
sahf
ljmp
in
aam
repz
dec
sub
cmp
xor
xchg
adc
rcrb
inc
inc
mov
cmp
or
or
aad
ret
jl
call
sbb
iret
adc
dec
xchg
popa
mov
andl
cltd
pop
and
dec
lea
xchg
add
rcrl
jne
inc
push
in
icebp
cmp
daa
es
add
push
xlat
aas
fnstcw
and
in
aas
xorb
mov
jl
jp
enter
test
pop
stos
ficomps
or
jle
cmp
stos
pushf
lock
das
inc
arpl
xchg
repz
aas
fistl
sar
fs
test
mov
adc
orl
sbb
pop
mov
lods
pop
pop
lods
sahf
inc
into
inc
stc
cld
adc
jnp
push
imul
mov
xchg
popa
jge
mov
dec
inc
push
push
add
rclb
xchg
sub
inc
inc
add
nop
pop
or
test
xchg
pop
inc
shrl
and
push
mov
xchg
into
insl
hlt
ljmp
sbb
jbe
adc
mov
imull
imul
xchg
ror
xchg
stc
adc
bound
or
ret
push
pushf
negb
push
and
xor
and
cld
gs
mov
inc
arpl
out
int3
mov
sbb
pop
ljmp
lods
ja
loopne
roll
pop
pop
hlt
mov
mov
fbstp
cmpsb
jno
xchg
ja
into
aam
mov
xchg
aam
xchg
and
inc
aam
xchg
aaa
popf
sbb
and
cmpsl
mov
adc
cmp
mov
xchg
pop
jb
jne
test
mov
inc
pop
push
insl
aaa
push
nop
fsubrl
xchg
push
sbb
xor
mov
push
mov
leave
push
ja
lret
out
shl
sub
aam
xor
or
cld
mov
pusha
scas
or
sub
inc
loop
pop
and
lret
mov
cmpsl
push
mov
sbb
jb
pop
ja
jbe
add
jnp
cmp
adcl
mov
mov
loope
mov
adc
fadds
cmpsb
pop
jmp
adc
repnz
aam
mov
ret
jb
xor
xchg
movsb
or
dec
stc
test
mov
adc
fisubl
inc
push
cmp
lods
or
dec
mov
in
mov
and
lods
nop
mov
rcrl
mov
movsb
test
in
jecxz
data16
leave
mov
adc
or
sub
lahf
inc
jne
das
insl
push
inc
push
cwtl
repnz
fcomp
mov
mov
outsb
jmp
fisttpll
or
xchg
inc
sbb
call
pushf
jne
test
mov
and
xchg
sti
jno
fadd
and
adc
pop
cs
movsl
out
push
push
testl
lods
icebp
pushf
mov
ja
push
sub
insb
and
into
push
aaa
js
ds
ljmp
mov
add
fnsave
bound
mov
pop
repz
add
movsb
or
add
mov
repnz
test
js
fimuls
and
outsl
nop
lret
int3
sbb
in
lea
int3
jle
push
cmpsl
stos
mov
push
into
dec
mov
mov
jle
sbb
xor
mov
jle
cltd
fcoms
enter
ljmp
test
mov
cmpsl
jne
rclb
int3
je
pop
rcrl
mov
out
fidivl
mov
mov
jo
xor
adc
js
mov
sub
inc
jnp
mov
dec
add
outsl
push
add
fisubrs
jns
pop
test
mov
idivb
out
rorl
pushf
mov
int3
fstps
mov
icebp
daa
sahf
dec
ljmp
loope
pop
mov
dec
push
test
lret
subb
jns
mov
cltd
pop
xchg
push
std
int
adc
and
xchg
cmp
int
dec
jnp
push
ds
mov
inc
mov
mov
pop
idivl
or
lret
std
icebp
add
aam
aam
mov
or
and
into
and
pop
jo
jle
mov
insb
or
xchg
inc
mov
xlat
mov
fisubl
out
sbb
xchg
outsl
aam
popf
xchg
pop
push
xlat
in
shl
xor
add
andb
add
or
lods
aaa
rcll
ret
lods
cmc
sub
das
and
sub
iret
and
adc
sbb
js
jb
jno
mov
mov
mov
jge
popl
shr
shr
inc
and
inc
stos
cmp
rcr
std
mov
push
out
or
or
and
aas
sti
outsb
into
int
jae
add
jns
xchg
into
sub
sbb
imul
cmova
mov
mov
aas
mov
test
or
aas
hlt
imulb
icebp
inc
mov
xorl
in
out
adc
mov
scas
dec
hlt
pop
sbb
inc
or
push
cmp
add
ja
test
add
test
fwait
pusha
les
push
or
rcl
lods
or
fiadds
and
popf
xchg
ret
test
sbb
lods
add
sub
or
mov
and
dec
cwtl
xchg
dec
push
mov
add
or
xor
or
inc
or
jge
psraw
sti
cmp
cld
inc
test
and
jns
rolb
movb
and
pop
fsts
ret
add
imul
cmp
mov
and
dec
stc
cmc
shlb
outsb
ljmp
adc
xchg
mov
leave
inc
ss
push
push
push
aad
repnz
xor
lock
fwait
subl
inc
cltd
jno
add
out
dec
dec
fimull
xchg
imul
dec
xchg
imul
das
and
int
sbb
mov
icebp
stos
push
jne
shlb
push
sti
sbb
inc
fldcw
pop
aaa
aaa
stc
movsl
in
lock
std
popf
jecxz
or
sbb
xorl
xor
xchg
mov
jg
mov
cmp
cmovg
sbb
je
push
and
cld
in
leave
mov
stos
mov
sahf
jo
popa
xlat
rcll
out
das
pop
mov
movsl
aam
repnz
mov
and
dec
subl
dec
inc
jne
pop
sti
dec
push
adc
xchg
xchg
les
or
cmpsb
cmp
addr16
out
sub
addb
insl
add
rorb
pop
notb
jns
nop
add
lret
movsb
pushf
imul
fstpl
test
lods
sahf
xchg
push
jmp
faddp
cltd
ds
pop
imul
test
cmp
popa
push
das
mov
mov
mov
in
cmp
inc
xor
stos
jl
dec
jle
fisubl
inc
sbb
fldcw
mov
addr16
mov
xchg
push
add
jmp
lock
mov
rcrb
push
dec
aam
sub
mov
or
ret
mov
vpaddusb
cli
fstpl
or
pop
arpl
movsl
inc
imul
cmpsl
or
mov
xor
js
mov
push
cmp
mov
add
cltd
seto
sbb
sbb
mov
cmp
add
xorl
pop
cltd
out
jns
lea
inc
mov
sub
pop
adc
jns
fsubrl
les
xor
xor
pop
mov
mov
jmp
cld
loopne
mov
in
test
icebp
fcmovu
adc
sbb
sbb
das
bound
inc
mov
and
sahf
iret
pusha
popa
aad
xor
and
and
sarb
dec
out
andl
rorl
inc
push
dec
xchg
push
int3
sbb
cmc
daa
sub
mov
pop
add
scas
fs
xchg
push
mov
xor
pextrw
push
xchg
iret
out
dec
popa
and
jnp
push
or
and
rorl
mov
xlat
add
mov
mov
outsl
fsubrs
xorb
mov
adc
pop
nop
ja
ret
xchg
xchg
in
cwtl
jle
sub
and
cmp
int
and
in
sbbl
jnp
cmp
loopne
popf
loopne
sbb
dec
mov
loope
into
insl
fildl
or
and
xchg
test
cmp
jb
in
cmovb
repnz
add
jmp
insl
stos
cmp
xchg
jno
aam
or
arpl
xchg
repnz
mov
and
out
in
idiv
xor
and
and
in
jne
cmpsl
jle
into
enter
clc
bound
test
rcrb
mov
imul
aam
repz
mov
cs
dec
mov
je
add
enter
sti
add
push
call
scas
cmp
mov
adc
mov
xor
push
pop
mov
out
cmpsb
nop
aas
popa
pop
aad
sti
movzwl
mov
pop
adc
jg
and
dec
mov
xchg
pop
out
lret
dec
xchg
and
adcl
arpl
mov
repnz
sarb
sub
adc
cmp
and
mov
stc
push
insb
sub
jo
or
test
or
incl
push
pop
adc
repnz
mov
cs
fisubrl
shlb
adc
cli
cltd
out
gs
mov
adcl
pushf
dec
jb
mov
stos
movq
dec
sbb
xchg
sarb
sub
fyl2x
loop
mov
xor
push
sub
out
dec
add
lea
das
cmp
inc
jae
das
fdivr
or
mov
push
xor
adc
in
xchg
or
push
and
pop
popf
and
imul
jle
cmp
inc
cmpsb
jge
jnp
mov
add
out
xor
js
cmp
int3
mov
pop
fwait
das
add
fisttpl
inc
push
lods
mov
xchg
mov
movsl
jle
test
out
sub
xor
push
movb
cmp
mov
ret
xchg
ja
push
lret
cmp
inc
ljmp
jp
adc
das
cmp
inc
pop
pop
lods
ds
insl
jo
jmp
aad
add
xchg
adc
dec
add
imul
fiaddl
or
jbe
ret
sub
ds
sbb
movsl
adc
inc
paddusw
push
sahf
scas
or
xchg
xlat
pop
push
dec
cmp
sbb
loopne
das
les
dec
inc
cmp
mov
loope
sti
sbb
test
std
mov
lods
inc
sbb
lret
push
adc
int
adc
iret
rorl
cltd
ror
call
cmp
loop
mov
fidivrs
loope
mov
je
mov
fwait
into
xchg
fdivrl
inc
xor
add
scas
cltd
sub
push
cli
sbb
sub
mov
mov
mov
daa
xor
jp
pusha
aad
jae
repnz
sub
jae
jns
loopne
and
and
test
les
or
imul
divl
daa
mull
push
pop
mov
cmp
push
jae
pop
repz
sbb
fimull
enter
hlt
inc
inc
shl
and
jno
jne
mov
es
and
xchg
jp
dec
nop
popf
data16
fstpt
fs
jo
xor
xchg
adc
pop
fsubrp
cmc
test
pop
pop
pop
or
sbb
aaa
jp
fwait
push
and
outsl
xlat
fwait
push
cli
mov
fistpl
cmpsl
and
adc
lcall
jp
outsb
and
sub
or
adc
lret
cli
adc
movsb
inc
xchg
shll
or
lds
mov
clc
repz
jge
pop
aas
xchg
xor
outsb
jg
stos
xlat
lret
inc
sbb
or
in
mov
adc
pushf
xor
and
faddl
xor
ljmp
jnp
repnz
aas
aaa
aad
sub
xchg
lea
mov
cmpsb
pushf
mov
cmp
cmp
pop
xor
jmp
imul
sub
dec
fisttpll
jo
xor
xor
adc
call
cmpsb
aam
lods
ficoml
out
shlb
test
aas
lahf
adc
test
xor
xchg
mov
rorb
repnz
into
add
addl
inc
jecxz
in
cmpsb
pop
adc
or
jmp
jmp
xchg
pop
mov
mov
rcrl
push
inc
push
test
cltd
lahf
scas
das
aaa
ljmp
cmp
push
mov
rcrl
adc
mov
mov
cmc
fs
sahf
mov
jp
mov
movl
xchg
push
mov
loopne
lahf
in
xchg
int3
fistpll
enter
xchg
jns
ja
dec
mov
imul
adc
shll
mov
and
mov
add
gs
mov
aas
jb
ficomps
dec
inc
cwtl
mov
nop
notl
and
or
scas
inc
push
inc
iret
sub
pop
int
mov
rorb
add
shrb
cmp
jo
mov
inc
adc
out
mov
sub
loop
push
xchg
shrl
xor
xchg
xchg
push
and
mov
sbbb
push
inc
dec
xor
testl
sbb
lods
out
bound
jb
lret
clc
sbb
jecxz
lcall
add
lods
mov
pop
stos
ret
clc
mov
mov
ss
pop
sbb
shr
sub
cmp
ds
sbb
shll
lcall
mov
cmp
fildl
incl
aas
aam
es
popf
aam
mov
add
and
je
pop
dec
in
fdivp
fistl
jmp
lret
mov
popa
push
getsec
fisttps
pop
xchg
call
mov
int
test
jmp
jns
andb
cmpl
incb
jmp
popl
push
aaa
jg
das
cmp
dec
cmp
or
mov
loope
fstpt
dec
pop
push
pop
fwait
sub
lret
dec
dec
nop
jne
das
movsl
dec
mov
cmp
push
pop
aas
push
cmp
dec
sbb
adc
add
cld
cwtl
addr16
clc
imul
jmp
and
sub
jnp
jmp
ljmp
cmp
into
cmp
cld
xlat
into
ja
out
mov
cmp
notl
sahf
ret
scas
scas
test
insl
mov
ret
lahf
ds
sbb
push
mov
aam
push
dec
adc
out
rorb
loope
neg
push
sbb
rorl
push
stos
mov
and
cmpsl
xchg
pop
lea
fiaddl
repnz
lds
pop
insb
xchg
icebp
aad
sub
add
mov
pop
sub
in
adc
dec
fwait
rolb
mov
cli
adc
std
lahf
xor
push
cmp
xlat
test
int
push
sub
out
jge
mov
mov
push
xor
adc
mov
mull
or
outsb
ret
cmpsl
sub
insl
xchg
adc
add
mov
add
outsl
test
aas
fnstenv
popa
and
lock
xchg
stc
sbb
dec
pop
mov
or
imul
movsl
sbbb
xchg
add
pusha
negb
xchg
fisttpl
dec
adc
lds
push
repz
aaa
shl
push
daa
ja
mov
fdivrl
sbb
leave
scas
add
cmpsb
or
lods
cmp
cmp
xor
cmp
sub
cmpsb
cmpl
inc
or
popf
shrb
insb
lahf
ret
adc
pushf
sub
inc
mov
dec
insb
sbb
enter
adc
inc
pop
lret
cli
pop
enter
outsb
xchg
fwait
cmp
loope
frstor
arpl
in
fs
nop
and
in
pop
mov
inc
aad
lds
inc
xor
jns
js
jae
mov
fwait
push
cmpsb
add
xchg
or
or
cmp
mov
das
fcoms
push
push
jg
leave
das
pop
clc
add
into
mov
cmp
mov
xchg
xchg
pop
cmp
add
xor
mov
fbld
push
mov
dec
xor
add
xchg
push
fsubl
or
inc
mov
pop
lahf
pop
xchg
popa
adc
cmp
je
jmp
popw
pusha
mov
rcrb
rcrl
daa
das
popf
add
xchg
lods
lock
jb
mov
movl
mov
pop
cmpsl
cmpsl
pop
adc
push
fwait
adc
lock
sub
es
stos
push
mov
lcall
subb
test
add
push
or
adc
add
mov
jo
or
or
stos
mov
adc
adc
andb
int
inc
and
xor
enter
jle
mov
pop
push
mov
adc
mov
neg
aam
fwait
sub
test
movsb
mov
test
pop
inc
fs
repz
mov
cli
jne
mov
cs
fmul
lods
loopne
lea
push
in
mov
dec
xor
add
mov
dec
or
cltd
cmpsb
andl
sub
mov
inc
mov
adc
add
sub
dec
cmp
push
mov
pavgw
fisubrl
dec
mov
inc
push
mov
in
mov
sbb
jg
bound
add
push
adc
lahf
ja
test
inc
fistpll
jne
adc
xor
and
pop
out
mov
push
xchg
cmp
sti
cmp
aas
and
dec
arpl
mov
or
lcall
push
fnsave
or
inc
jo
fxch
scas
jl
jl
loope
inc
ret
pop
sub
loop
int3
add
push
push
or
mov
xchg
sub
jle
xchg
pushl
xchg
mov
cmp
aad
jmp
lcall
ds
xchg
in
mov
push
push
xchg
fdiv
adc
push
es
or
inc
mov
mov
jae
addb
push
scas
out
xchg
sbb
adc
inc
call
xchg
popa
xchg
fisubrs
shrb
adc
adc
rolb
inc
xchg
mov
mov
dec
and
add
inc
in
pop
cmc
popf
mov
mov
scas
jno
adc
loop
xchg
pop
inc
imul
pusha
and
push
xchg
ror
adc
jge
lods
add
xor
cmp
sbb
xor
fdivr
cld
jmp
push
dec
arpl
movntps
daa
out
addr16
in
push
lret
jno,pn
scas
jb
push
jecxz
mov
push
add
pop
push
cwtl
clc
mov
pop
nop
add
mov
jbe
stos
cmpsl
mov
outsb
sahf
and
pop
jo
rcr
dec
fcomps
or
aaa
push
das
stos
dec
aad
adc
sbb
xlat
jg
repnz
inc
add
sub
fcomps
daa
stos
and
popa
mov
bound
pushf
test
or
outsb
dec
aaa
and
sub
nop
inc
or
sti
cmpsb
test
js
mov
xchg
pop
cmpl
cltd
push
cmpsb
mov
mov
pushf
div
in
xchg
inc
xor
fmuls
adc
xchg
cli
in
jmp
dec
enter
mov
cmp
cs
nop
in
mov
icebp
das
arpl
sbb
shlb
jb
cwtl
lret
aam
push
mov
sbb
out
lock
mov
mov
inc
mov
inc
lret
xchg
pop
int3
ljmp
inc
pop
xlat
or
xchg
movl
xchg
daa
push
sbb
xchg
or
jb
dec
push
mov
add
and
or
mov
mov
adc
add
divl
jecxz
aas
cmp
scas
dec
mov
or
and
mov
mov
inc
jno
test
cmp
jg,pn
xorb
jo
mov
and
mov
push
push
jle
jo
jo
sahf
sbb
arpl
pushf
cltd
repnz
mov
xchg
pop
loopne
lcall
mov
xor
mov
outsb
lret
lea
imul
lret
jns
cwtl
repnz
mov
cli
test
sbbb
or
mov
or
cli
imul
adc
xchg
adc
imul
loope
dec
cmpsb
mov
add
ret
int3
push
std
shrb
stos
aam
add
push
movsl
insb
stc
adc
nop
xchg
nop
and
test
mov
push
std
mov
dec
mov
mov
loopne
inc
test
mov
dec
pushl
lret
idivb
inc
test
mov
outsl
fdivs
popf
aas
push
xor
lock
adc
in
or
xor
dec
adc
shlb
stos
or
adc
push
and
sahf
lea
into
and
rcrb
add
pushf
cmova
push
bound
outsl
or
adc
pop
xchg
out
sbb
mov
pop
unpckhps
pop
pop
add
aad
lcall
mov
pop
or
loope
pop
adc
sbb
fildl
inc
orl
sub
mov
jecxz
adc
test
xchg
push
or
jno
cs
mov
dec
pop
dec
cmpsb
dec
iret
or
lods
das
mov
mov
movsl
ljmp
mov
dec
and
pushf
jl
inc
insl
mov
fidivs
mov
adc
or
dec
setno
xchg
mov
loopne
aad
insb
cmc
dec
sub
inc
push
mov
lea
xchg
push
mov
mov
push
test
or
out
xor
lcall
lods
shll
dec
pop
js
adc
fisttpll
dec
cmp
rolb
test
sbb
fiaddl
adc
and
fisubrs
or
sbb
cmpsl
inc
inc
incb
rcrb
push
adc
and
test
jp,pt
dec
sub
daa
cwtl
iret
test
shrl
lods
mov
pop
pop
out
inc
push
pop
mov
push
lret
xchg
xchg
adc
push
push
sub
dec
sub
imul
xor
xchg
pop
fcompl
pop
add
aaa
push
pop
push
setne
sahf
jb
sub
mov
fsincos
xor
test
adc
jge
icebp
pop
add
sbb
push
outsl
dec
enter
mov
inc
or
bound
ljmp
enter
xchg
jmp
out
sub
stc
jecxz
jne
mov
inc
fstps
xor
inc
mov
popf
push
jae
pop
mov
bound
push
call
in
std
adc
ss
fcmovnbe
and
shrb
fidivrl
push
pop
add
inc
outsb
xlat
pop
add
test
stc
cltd
lods
fsubp
les
dec
dec
es
gs
fsubl
cmc
movsl
shlb
ljmp
and
push
pop
inc
in
fwait
sub
cmc
fcompl
aaa
fidivrl
pop
iret
mov
sub
insb
fimuls
pop
andl
es
aas
cmp
addr16
add
lods
adc
pop
andb
or
push
pop
enter
pushf
stos
pusha
push
repnz
fnclex
int
adc
cmp
adc
mov
xor
mov
popa
jae
out
sbb
dec
out
adc
out
add
cmp
cmpl
arpl
jo
mov
adc
add
mov
stc
hlt
repz
push
js
jbe
cld
push
inc
addr16
xlat
js
fmull
out
clc
in
cmp
jle,pt
out
pushf
push
jns
fidivl
or
pop
jns
xchg
jnp
imulb
pop
add
idivl
jno
pop
jg
sahf
scas
popf
lock
fdivl
stos
mov
in
orb
sbbl
push
dec
xchg
cmp
scas
fdivrl
xlat
jb
test
jecxz
push
mov
fisubrs
ja
push
dec
in
hlt
sbbb
sahf
cli
jb
xchg
les
cmp
daa
mov
xchg
cltd
xchg
test
mov
pop
lcall
stos
ljmp
push
dec
clc
daa
es
pop
jl
icebp
sub
cmpsb
jnp
and
mov
mov
jle
sub
xchg
pop
rorl
es
in
mov
lods
shrl
push
enter
cltd
sbb
je
les
mov
bound
ret
rcll
and
lret
cli
mov
lods
outsl
inc
and
xchg
lea
mov
sbb
in
mov
xchg
mov
pop
rol
mov
rcll
test
jp
dec
sub
sub
push
fwait
mov
testb
mov
outsb
mov
aad
xor
add
mov
clc
jo
jne
outsb
mov
out
test
std
or
xchg
hlt
es
jmp
xchg
xor
xchg
in
mov
arpl
inc
outsb
sub
movsb
repz
addr16
cltd
arpl
cmpb
xor
out
jbe
or
push
mov
jmp
jecxz
inc
adc
add
rclb
mov
sbb
pop
dec
mov
mov
mov
das
mov
dec
xor
jg
mov
dec
inc
sbb
lock
mov
xchg
cmpsl
hlt
mov
lret
popf
xlat
lret
fucom
es
jg
adc
fwait
clc
test
add
jne
add
mov
adc
insb
shr
mulb
aam
pop
xchg
fiadds
inc
sbb
in
mov
adc
loope
testb
aaa
ja
add
xchg
imul
enter
dec
les
je
cmp
fidivrs
inc
and
repz
lret
xorl
loopne
loop
sarl
movsb
push
xor
jmp
sbb
scas
adc
dec
mov
pushf
int
xor
sbb
and
fcoms
push
add
pop
sbb
mul
pop
cmp
or
pusha
jb
inc
xchg
icebp
les
or
pop
loopne
mov
lahf
ds
pop
jb
jle
jns
lret
fsts
push
and
and
adc
jge
mov
push
pop
leave
idiv
fst
jg
test
mov
jnp
xchg
in
mov
repz
mov
dec
ficomps
inc
stos
pop
aaa
in
repz
mov
mov
daa
mov
in
pop
mov
shl
psrad
jmp
mov
scas
lret
out
hlt
scas
sub
push
xor
sbb
or
dec
push
loopne
jecxz
loop
xchg
push
jb
fimuls
jg
loop
jns
nop
imul
filds
mov
pop
dec
mov
dec
and
xor
dec
inc
imul
ficoml
mov
in
xorl
mov
out
ret
mov
cld
lea
pushf
sti
xchg
sbb
shll
dec
sbb
push
lret
int3
movsb
mov
xor
out
in
sbb
push
or
adc
cmpsb
cltd
adc
sti
popa
inc
rorb
add
dec
pusha
mov
xchg
adc
test
xor
inc
pop
mov
inc
movb
ja
loope
pop
data16
push
mov
jae
pop
push
mov
aaa
lret
pop
xor
and
mov
data16
out
dec
xchg
out
out
lea
cltd
stc
lea
xchg
stos
push
cmc
or
mov
fs
aaa
jmp
add
xor
pop
mov
fstpl
push
outsb
andl
mov
lods
in
hlt
jb
std
and
jge
mov
and
jno
sbb
inc
pop
push
outsb
mov
loope
outsb
mov
lods
sub
ret
and
inc
movsl
test
mov
mov
lret
bound
ja
inc
jne
jle
and
xchg
shll
sbbb
mov
jne
fsub
out
adc
int3
sub
mov
lock
shl
xor
data16
inc
fistl
aas
stos
and
add
lcall
cmp
push
dec
jbe
jl
or
jge
jb
mov
cmp
ja
lret
lods
jno
mov
jns
ljmp
cltd
push
xor
imul
hlt
fstl
arpl
pop
arpl
stc
mov
scas
hlt
sbb
xor
jns
sub
inc
sub
sbb
leave
dec
daa
push
enter
xor
pop
xchg
mov
xchg
imul
shll
mul
and
gs
and
loop
sahf
pop
push
lret
js
cmp
or
filds
dec
idivl
pop
inc
clc
cltd
popa
jp
jno
rcll
xor
ds
mov
adc
mov
xor
xor
mov
in
inc
or
leave
lea
jmp
adc
push
test
fisubl
add
xchg
ror
sahf
and
sub
push
adc
xor
mov
es
in
and
push
add
mov
push
popf
loop
aaa
out
fdivrl
hlt
mov
add
cmp
add
bound
stos
and
call
mov
lcall
mov
enter
dec
pop
mov
push
pushf
add
lock
fwait
and
je
js
sub
sub
and
sub
popf
stos
add
inc
jne
lret
xchg
daa
mov
cmp
cltd
pop
push
sarb
lcall
adc
out
pop
push
test
mov
mov
push
lock
xchg
dec
mov
jmp
daa
dec
pop
cmpsl
inc
mov
add
dec
mov
out
jp
dec
lret
negl
in
mov
or
iret
push
sbb
dec
or
or
xchg
adc
stos
shll
and
stos
xchg
mov
rclb
inc
mov
inc
mov
popf
pushf
jp
nop
or
cmc
cmp
cmp
cmpsl
loop
das
cli
cmp
lea
add
push
inc
pop
nop
mov
xchg
sbb
out
jp
outsb
inc
out
push
jno
test
fmull
dec
fstl
xchg
and
sub
pop
and
inc
andl
or
cwtl
cmp
ds
sbb
mov
daa
jmp
jo
icebp
push
mov
ret
jp
mov
mov
lods
iret
dec
add
adc
dec
inc
xchg
shll
and
xor
jo
lock
and
push
loop
sbb
mov
or
pop
mov
push
lret
loope
roll
pop
aam
imul
mov
pop
inc
fimull
arpl
inc
fwait
inc
inc
and
popf
repnz
outsb
imul
sbb
or
adc
jns
sbb
repnz
sub
in
sub
mov
popa
adc
fs
dec
cmp
icebp
nop
jae
sub
jbe
xor
fadds
cmc
lock
mov
xor
inc
jecxz
pop
stc
dec
sahf
fstpt
jo
imulb
and
outsl
lcall
jae
inc
rolb
cmp
jns
notb
rorl
or
not
mov
ja
mov
lcall
sbb
in
and
daa
pop
fsubs
mov
dec
inc
cwtl
cmpsb
stos
fs
mov
hlt
lods
and
hlt
testb
cld
cs
out
cmc
mov
adc
scas
hlt
cmpsb
xor
jecxz
mov
inc
push
mov
xchg
cld
mul
mov
sub
fistps
xor
shrl
jle
daa
pop
xchg
repnz
mov
dec
pop
leave
leave
addr16
mov
test
jnp
xchg
out
mov
lods
clc
mov
into
cmp
mov
add
pop
adc
or
pop
jecxz
mov
mov
imul
lea
mov
js
movsl
sbb
cs
jae
sbb
pop
mov
nop
cld
jmp
push
mov
inc
iret
push
imul
xchg
lret
jp
in
pop
pop
imul
or
xchg
xlat
out
jecxz
mov
popf
add
adcb
cmp
lods
add
push
je
aaa
xchg
and
scas
aas
push
repnz
or
dec
inc
jo
je
shlb
int3
sbb
imul
push
loopne
je
jb
push
into
leave
mov
xor
sub
push
and
pop
ss
out
repnz
cwtl
sbb
push
ds
sbb
push
enter
shr
push
sub
int3
mov
addr16
shlb
cmc
out
repz
cmp
push
xchg
push
dec
mov
shr
cmc
addr16
adc
imul
ss
insl
inc
or
and
mov
ret
sbb
pushf
data16
lret
lret
cmp
popa
cmpsl
add
inc
repz
mov
movsl
jae
xlat
jmp
mov
and
pusha
fcmovnu
es
xchg
xchg
adc
mov
or
dec
cs
xchg
imul
out
push
ja
push
imul
movsb
nop
les
lahf
int3
sbb
fisubrs
out
cmp
mov
call
mov
ja
jo
inc
sub
jbe
movsb
daa
mov
psraw
repnz
cmp
mov
push
loop
jne
dec
sub
cli
outsb
andl
les
pop
cmpsl
xchg
inc
pop
adc
mov
addr16
ret
push
pop
xor
icebp
cmp
movsb
gs
mov
jmp
repnz
insl
enter
cs
xchg
xchg
call
stos
sub
adc
adc
scas
lret
sub
leave
jb
dec
mov
sbb
sub
adc
subb
jbe
ja
and
aas
lret
mov
in
lods
mov
test
shll
lcall
cmpsl
mov
or
insl
leave
cltd
lock
mov
jge
lret
in
aas
in
fsubl
js
out
xor
outsb
sbb
idivl
in
adc
mov
cmpsl
mov
mov
sub
and
in
xchg
jmp
xchg
cmpsl
repz
or
mov
or
mov
negb
clc
cld
mov
aaa
mov
jbe
jg
jmp
push
mov
mov
rcrb
sarb
call
sbb
push
push
lahf
pop
addr16
inc
push
lahf
stc
int3
leave
dec
jne
cmp
imul
push
cs
add
jge
dec
xchg
enter
fidivl
push
sbb
add
lret
shrl
xor
mov
outsl
stos
arpl
decb
outsb
mov
aam
pop
cltd
xor
scas
rol
jno
stos
stos
das
xchg
pop
xor
jg
sub
mov
inc
sahf
pop
dec
loop
call
cs
enter
xchg
push
mov
repnz
adc
in
fdivr
in
ss
pop
int3
mov
cld
push
or
mov
xor
push
stc
insl
aas
lds
sub
cs
subl
inc
aaa
jns
jno
and
cltd
adc
mov
test
es
fnsave
in
cmp
adc
push
adc
lret
orb
rol
lret
test
mov
repnz
sub
xchg
or
inc
mov
xchg
into
fst
adc
push
hlt
jmp
in
cltd
repnz
data16
out
cmp
jns
jbe
imul
mov
mov
scas
rclb
mov
push
shrl
mov
sbb
mov
out
cmp
mov
inc
mov
aas
icebp
jns
jle
sub
lods
pop
adc
xor
adc
xor
push
jge
sbb
xchg
std
outsb
fimuls
add
addr16
cld
jmp
mov
cmpsl
aas
decl
hlt
outsb
popa
pop
inc
imul
ret
cmp
push
add
xor
daa
dec
adc
sub
mov
push
mov
popf
fcomip
sbb
cmc
pusha
sti
mov
repz
push
fildl
sub
jns
jle
mov
inc
dec
movsl
icebp
xchg
or
xchg
xlat
mov
fstps
imul
lahf
sbb
fs
fmull
mov
push
cld
lcall
in
and
fdivrl
mov
mov
pop
inc
ljmp
dec
dec
cs
xchg
fmull
in
aaa
mov
or
mov
fwait
mov
xchg
jmp
out
movsb
out
push
into
hlt
xor
adc
in
andb
dec
mov
xchg
or
gs
cmp
fs
ss
adc
adc
jp
mov
adc
int
cli
xor
ss
jae
fcoms
out
loop
ljmp
and
dec
lret
aam
inc
mov
lds
inc
cmp
mov
imulb
testb
pop
enter
mov
mov
pop
xlat
out
push
dec
hlt
push
xchg
xchg
fsubrs
lret
sar
jb
sub
sub
sub
xor
cltd
push
aam
lahf
cmp
push
inc
loopne
shr
sti
cmp
xor
add
inc
call
mov
mov
outsb
mov
stos
in
sub
ficompl
je
fnstenv
xorl
int3
stos
xchg
fldcw
cmp
es
jle
hlt
jo
movsb
jnp
stos
les
mov
pop
mull
es
or
jns
idiv
je
lock
push
outsb
fists
aad
popf
lods
inc
imul
fs
xchg
jbe
jl
test
mov
mov
sbb
mov
or
pop
in
jecxz
xchg
shrb
sbb
adc
dec
imul
sbb
aad
mov
ja
test
mov
sahf
mov
inc
sbb
divl
cmp
dec
and
add
stc
pushf
int3
or
loope
or
pop
js
sbbb
fstps
ret
jo
out
adc
xor
lods
dec
dec
in
mov
xor
insb
aad
pushf
inc
cmp
xchg
push
arpl
add
pop
movsb
pusha
repnz
mov
jecxz
imul
mov
pop
add
cmp
std
shlb
daa
mov
dec
cmp
test
daa
xchg
lahf
fistpl
lods
and
cmp
sub
es
ljmp
lods
pop
in
push
pop
sub
sbb
lods
xlat
in
pop
cmp
in
mov
pusha
jmp
mov
adc
cmp
sub
xor
je
pop
xchg
inc
xor
lahf
lods
stos
push
fwait
sub
push
mov
inc
and
adc
es
xor
pop
xchg
sti
jmp
sub
sbb
mov
fcompl
leave
es
adc
shl
ss
and
leave
jbe
popa
mov
jp
aam
int
mov
ljmp
paddsw
addb
push
sti
ljmp
fcoml
cmp
jnp
das
or
dec
out
addr16
add
jbe
aas
mov
jo
call
cmp
stos
fwait
pop
decb
leave
adc
push
or
loopne
cmp
ficoml
lock
mov
and
imul
std
push
fs
lahf
addr16
cwtl
jnp
adc
mov
push
dec
xlat
pop
cmp
addr16
test
enter
xchg
jmp
xor
mov
lea
xor
shll
sub
into
enter
xor
mov
sbb
inc
movsl
adc
call
jne
push
sub
mov
inc
mov
mov
cmpsb
pop
dec
out
mov
xor
sub
pop
rcrl
subl
pop
cmpsb
dec
pop
adc
adc
mov
or
ja
sahf
loope
out
loop
sbb
in
cwtl
mul
adc
cmp
mov
repz
cmp
mov
cmp
js
xchg
add
push
dec
add
cmpsl
sub
jnp
flds
mov
push
lret
stos
sub
xor
out
xor
cmc
call
push
cmc
in
negl
sub
cmp
mov
movsb
idivl
jno
add
aas
mov
dec
imul
stos
ret
addb
pop
ret
int3
cmc
movsb
scas
cmpsl
vandps
icebp
dec
inc
mov
adc
mov
ljmp
xchg
insb
pop
popf
fistl
js
int3
loope
dec
js
pusha
and
sbb
inc
stos
out
jg
cld
dec
in
mov
scas
fwait
add
rorb
sub
pop
adc
adc
push
popf
jge
push
or
mov
sub
in
in
mov
fcmovnu
sub
jle
add
xor
ljmp
outsl
adc
in
icebp
jae
jle
clc
pop
pop
xlat
mov
mov
aam
pop
dec
stos
out
jle
ljmp
cmpsb
xchg
cmpsb
test
cli
adc
dec
dec
jae
sub
xchg
sarb
enter
xchg
sahf
fsts
and
repz
stc
inc
out
adc
pushf
xchg
test
cwtl
pop
pusha
or
mov
and
enter
jp
fsts
or
shlb
pop
ja
ret
push
pushl
test
jne
test
mov
and
test
dec
pop
mov
test
stc
sbb
dec
jb
sub
and
jno
or
jb
ffreep
jae
rorb
dec
loop
fwait
xlat
stos
dec
pop
ds
jns
addr16
outsb
jmp
jg
and
cltd
pusha
stc
test
fs
outsb
lahf
pop
adc
jg
icebp
push
pop
mov
aam
mov
jecxz
add
hlt
std
nop
shrb
sbb
dec
stos
call
pop
leave
out
jmp
sub
sub
jg
mov
pop
dec
mov
test
mov
in
setae
pop
mov
shll
mov
xor
mov
iret
jle
push
pusha
test
sti
mov
sti
jge
sub
fdiv
shll
and
xorb
mov
dec
sbb
add
jmp
fs
xor
ss
pop
inc
ret
xchg
popa
lds
arpl
data16
rcl
repz
mov
mov
pop
int
jmp
pusha
cmp
rcrl
sbb
mov
aaa
xchg
mov
call
test
lods
cltd
jmp
dec
add
imul
in
mov
sub
adc
outsb
mov
push
dec
xchg
fwait
mov
add
fld1
orl
and
ret
lret
push
data16
mov
mov
daa
jno
push
scas
mov
iret
mov
jb
std
add
lock
push
or
xor
fucom
jbe
mov
mov
mov
aaa
xchg
out
insb
movsb
xorl
addr16
jle
pop
push
mov
in
push
mov
push
xchg
insb
mov
push
mov
mov
inc
jp
icebp
gs
sub
div
lcall
xor
pop
add
mov
and
mov
cmp
or
ja
add
dec
jmp
mov
popa
cmpsl
adc
scas
test
and
dec
adc
inc
ret
in
jl
jne
xchg
fdivrl
cmp
mov
jbe
cwtl
inc
mov
ds
fists
ret
pop
ja
gs
pop
mov
sahf
lret
jp
sub
xor
push
in
movsb
into
lahf
jb
sar
xlat
ficompl
daa
js
dec
cmpsl
jl
xor
jge
sti
out
out
inc
pop
xor
sarl
mov
pop
arpl
jno
out
icebp
push
sbb
dec
jmp
fmul
cmp
mov
loop
xchg
adc
jge
outsl
leave
pop
bound
ljmp
stos
dec
popa
pop
cmp
add
test
add
adc
add
cmp
mov
xchg
sbb
sbb
pushf
or
iret
cmp
xor
dec
push
mov
cli
loope
dec
push
sbb
adc
mov
fdivrp
insl
gs
aaa
pop
lcall
mov
sub
cmpsl
inc
mov
cmp
scas
add
dec
dec
mov
scas
in
xchg
cmpb
pop
loop
aad
roll
cmp
enter
and
aas
les
sarb
push
dec
stos
sub
repz
mov
ss
dec
int
ret
hlt
enter
mov
inc
loop
scas
and
scas
sbb
jo
mov
mov
fidivrl
and
xor
clc
xlat
fwait
test
lret
int
das
jg
xor
push
dec
push
cmp
pop
ss
push
mov
mov
cwtl
mov
dec
rcrl
inc
add
mov
xor
mov
ret
mov
push
xchg
into
or
pop
dec
and
fisubrs
xchg
incl
jg
icebp
gs
and
mov
add
mov
jge
mov
inc
gs
xchg
and
mov
stc
test
mov
pushf
xchg
push
rcl
aas
stc
stos
cmp
mov
xchg
scas
lret
sub
mov
lret
lcall
pop
pop
pop
push
pop
cld
rcrl
or
mov
mov
test
mov
push
xchg
and
sbbb
test
adc
pop
or
sbb
sti
scas
xlat
push
in
dec
pop
pop
popf
aad
and
xchg
cmc
push
pop
mov
sbb
sahf
push
jno
int
in
cmp
sahf
mov
out
fisttps
js
push
imul
cld
sub
sarl
repnz
test
dec
push
iret
mov
add
xor
hlt
mov
jbe
sbbl
push
sub
dec
mov
into
gs
cmp
clc
push
insb
mov
push
stc
push
mov
int
aaa
cmpsl
daa
das
sbb
inc
outsl
mov
shrb
sbb
ffree
lahf
mov
out
mov
ret
xor
inc
sti
les
mov
fisttps
daa
stc
test
enter
xchg
mov
adc
jb
movsl
cmpsl
cvtps2pd
mov
xchg
mov
xchg
mov
lret
imul
ficompl
jae
in
cmp
in
pop
addr16
std
shr
pop
or
lret
inc
sub
pop
push
dec
in
in
pushf
mov
mov
sbb
ljmp
out
cmc
out
jbe
andl
outsl
lods
pusha
sbb
repnz
out
dec
adc
jmp
lahf
mov
sub
xchg
pop
cmp
insb
mov
mov
add
test
repnz
test
into
cltd
aas
cmp
mov
jp
shl
ds
es
lret
jb
sbb
jbe
sbb
js
inc
push
fnstsw
cmpsl
out
push
lods
les
scas
mov
dec
xchg
in
jbe
or
stos
sub
xchg
lods
inc
cs
sti
out
adc
push
lret
cmp
xor
aad
xchg
arpl
jecxz
idivl
stc
sti
sub
movsb
pop
mov
ja
pop
hlt
test
xor
ljmp
jmp
test
fildl
mov
xor
lahf
loopne
je
dec
sub
and
out
mov
pop
inc
out
pushw
fbld
mov
mov
pop
cld
shlb
pusha
jmp
ja
and
mov
fwait
push
xchg
sbb
mov
fcoml
andl
fsin
sub
enter
fisttpl
aas
adc
fcom
mov
das
adc
sahf
or
insl
into
popf
test
mov
inc
stos
dec
iret
push
out
xlat
mov
in
xchg
xor
push
lret
shrl
pop
dec
int
test
mov
shrl
lahf
mov
xchg
or
pop
imul
xor
add
cltd
popf
out
das
push
add
sbb
xchg
popf
mov
dec
jae,pn
nop
imull
imul
int
lock
arpl
sbb
adc
stos
mov
mov
fstpl
xor
mov
das
push
jo
cmpsb
pushf
add
sbb
pop
xchg
and
cmc
xor
lahf
mov
pop
fimull
adc
inc
outsl
test
and
pop
fs
dec
and
sti
and
cld
dec
pusha
xlat
or
sub
clc
ret
or
adc
data16
fdivp
test
out
enter
bound
outsb
push
fdivp
scas
fisubs
sub
ja
jo
cmpsb
fcmovnbe
lahf
add
cltd
adc
dec
inc
cs
lea
pop
insl
call
xchg
shrb
jge
jo
sahf
leave
push
mov
out
mov
sti
in
push
das
or
icebp
push
in
sub
xor
cs
and
jge
icebp
ret
fdivl
or
repz
loop
dec
dec
sti
ficoms
pop
je
and
add
int3
outsb
mov
xchg
inc
jnp
pop
nop
into
insb
ret
cli
fcoml
arpl
aas
lret
js
xor
outsb
mov
fcmovb
test
and
fcmove
out
idivb
cmpl
aad
and
and
imul
or
cmp
hlt
cmp
ljmp
test
pop
dec
push
daa
stos
adc
mov
test
jge
push
jb
mov
inc
repz
das
fistpl
jg
cmp
pushf
stos
test
insl
pop
adc
lret
daa
insb
cmp
jmp
cwtl
dec
pop
out
mov
xor
ret
aaa
jg
inc
jp
push
sub
pop
scas
sub
jb
pushf
jge
arpl
pop
inc
movsl
das
insl
lds
sbb
enter
pop
push
pop
xchg
movsl
lds
pop
mov
xchg
out
cmpsl
shlb
mov
mov
xchg
add
fisubs
movsl
push
cmp
test
andl
cmpsb
mov
jle
push
icebp
inc
fistps
push
mov
pop
clc
sub
mov
pop
sahf
pop
xor
inc
aam
jb
scas
dec
dec
jecxz
xchg
dec
dec
inc
pushl
sub
push
push
lds
pop
xchg
jnp
add
scas
pushf
gs
mov
adcl
rcrb
int3
xchg
inc
out
pushf
xchg
ja
shl
in
iret
sahf
sbb
sub
and
push
or
pushf
inc
xchg
mov
std
repz
jns
mov
ss
mov
adc
nop
mov
xchg
pop
in
jo
fsubrl
lahf
push
pop
pop
push
jb
adc
and
sti
dec
lcall
scas
fisubrl
in
xlat
movsl
mov
sbb
gs
adc
pusha
and
cwtl
ljmp
jecxz
test
sub
gs
arpl
pop
sbb
mov
jno
lcall
xchg
sti
in
add
mov
mov
mov
ud0
cmp
pop
xlat
jge
int
idivb
roll
std
dec
add
ret
ret
ffree
ds
sub
es
dec
jns
cmp
cmpb
inc
sub
fistl
mov
test
jno
std
cmp
lock
pop
pop
sbbl
loopne
mov
enter
dec
pmullw
mov
xchg
jnp
cmp
lods
mov
popa
sbbb
xor
in
clc
push
inc
fstps
xchg
out
rcr
das
jl
mov
mov
push
mov
pop
mov
lock
movsb
xchg
adc
inc
mov
jnp
test
pusha
popa
mov
lret
sbb
xchg
pop
dec
or
iret
xchg
jecxz
test
sar
push
arpl
jo
clc
stos
push
bnd
push
repnz
les
fwait
adc
int
push
cmp
sub
dec
int3
add
rorl
jae
push
loope
and
rorl
adcl
lods
in
fwait
mov
cmpb
test
adc
fs
popa
sbb
push
sbb
mov
mov
jecxz
inc
sub
js
pop
push
test
cmp
mov
xchg
pop
lret
xlat
add
or
repnz
dec
fiaddl
add
popf
cmp
sbb
ljmp
rorl
sbb
mov
and
sbb
add
es
jp
and
pushf
and
inc
es
push
push
testl
xor
and
xchg
push
ja
xor
xchg
ja
adc
push
aaa
arpl
mov
jp
iret
mov
sbb
movsl
and
sarb
jmp
jp
das
mov
jns
sti
push
xchg
or
mov
cmc
bound
repnz
cmpb
xor
loopne
jge
mov
int3
rorl
leave
es
jp
out
pop
adc
pop
adc
jmp
push
data16
call
push
push
mov
lea
aaa
jg
jg
and
jecxz
xchg
popf
outsb
pushf
inc
adc
pop
xor
jb
add
cmc
pop
dec
mov
pop
adc
repz
jg
and
jecxz
or
xor
lcall
inc
imul
adc
cmp
pop
lock
jnp
xor
lcall
dec
fldt
inc
or
lret
mov
or
cmp
jecxz
sbb
movsl
add
push
xchg
or
cmp
or
mov
mov
enter
les
shlb
cmp
xlat
pop
pop
pop
inc
imul
aam
int3
leave
dec
inc
movsl
mov
shl
jp
mov
std
lods
push
cmpsb
roll
pop
inc
sbb
sbb
jg
dec
jl
fidivrl
adc
jl
jbe
pop
mov
es
lcall
stos
sbb
dec
adc
aas
xchg
sub
call
aad
ret
sbb
fstpt
repz
imul
jl
ret
int3
pop
inc
push
je
mov
push
xchg
cmpsl
pop
jae
out
jecxz
ja
nop
pop
or
jmp
fwait
inc
inc
cli
inc
gs
dec
and
shrb
lret
clc
loope
add
ror
xor
fstp
jnp
bnd
insb
stos
popf
cmp
addl
and
mov
arpl
hlt
sbb
sub
mov
or
push
out
add
mov
ret
lret
xchg
shlb
xorb
push
dec
push
xchg
movsl
sub
sbb
sahf
insl
jae
ds
pop
fwait
mov
pop
inc
addr16
inc
add
lock
fmul
xor
call
mov
mov
or
xor
and
cmp
push
pop
out
push
inc
push
shlb
bound
mov
mov
sti
dec
lea
repnz
outsb
cmp
loopne
xor
ret
push
cmp
fcmovbe
mov
scas
push
mov
jb
sbb
lcall
mov
push
insb
addr16
jbe
xlat
mov
pop
mov
or
pop
sub
or
jo
mov
xor
jge
test
cmp
cmpb
arpl
sub
lahf
sbb
out
push
enter
mov
mov
jae
pop
jnp
push
sbb
icebp
ja
adc
test
xchg
mov
cmp
nop
in
insb
inc
inc
sbb
push
das
mov
fldenv
dec
push
ret
dec
movsb
test
pop
pop
scas
jae
aam
add
jb
push
mov
and
shlb
adc
sbb
sbb
ja
jo
movsb
pop
dec
rclb
cmp
xor
cwtl
daa
xchg
xchg
daa
xor
in
aaa
out
adcl
inc
lock
push
jnp
das
out
jno
js
scas
push
sub
in
ss
es
rorb
ret
mov
and
es
icebp
and
pop
cwtl
inc
lods
mov
sub
lret
movsl
rol
pop
sub
mov
out
push
pop
pop
xchg
xchg
cmp
add
call
or
sti
mov
sbb
xchg
push
movsl
out
daa
sbb
in
test
loop
cmpsl
xor
outsb
cmp
pop
lock
jge
jo
insl
in
loop
test
xorb
lods
ret
ds
ljmp
dec
xchg
mov
pop
dec
mov
or
push
pop
clc
cmp
aaa
mov
loopne
pop
mov
and
fimuls
add
ret
adc
push
xor
xchg
push
loopne
aam
or
call
mov
in
lret
mov
or
mov
scas
mov
in
and
jns
test
mov
je
push
dec
loope
mov
inc
ds
mov
dec
daa
cmpl
lahf
push
andl
insl
fistps
dec
cwtl
movl
cmp
mov
sbb
scas
jg
out
mov
in
lock
and
inc
stc
fwait
es
popa
mov
and
sbb
lahf
lret
xchg
and
jns
push
sbbl
or
adc
test
fbld
cmp
push
fiaddl
daa
push
xor
cmp
cmp
lcall
dec
or
stos
in
jge
aaa
out
push
ret
mov
int
adc
dec
sub
push
mov
inc
xchg
ret
sub
push
repz
jge
clc
cmp
test
cmp
std
adc
cmp
outsb
xor
icebp
je
fiaddl
or
xchg
mov
js
in
and
add
mov
loope
ds
add
insl
sbb
ret
arpl
xor
sbb
lret
xchg
jmp
cmp
aaa
or
and
arpl
insl
inc
repnz
xchg
adc
mov
fadds
cmp
cmp
dec
pushf
test
jne
popf
xor
imul
sbb
icebp
mov
test
loope
jbe
lods
out
dec
ljmp
fucomi
insb
sbb
jmp
inc
outsl
mov
ds
push
jg
out
test
push
out
sbb
xchg
aad
out
fwait
mov
cld
aaa
out
outsl
add
or
pop
or
mov
add
fcoms
movsl
repnz
pusha
lea
cmpb
outsb
xor
repnz
into
shll
mov
pop
lods
mov
test
inc
and
jae
inc
in
dec
fnstenv
xor
les
lahf
ret
mov
adc
xchg
lods
cwtl
inc
pop
cld
in
bound
or
arpl
and
leave
mov
dec
inc
push
mov
std
add
addr16
mov
cmp
and
cs
cli
sbb
les
or
cmpsl
jne
and
outsb
sbb
jbe
jbe
and
adc
xchg
xor
xchg
cld
cmp
pop
leave
sbb
xor
inc
pushf
arpl
cld
add
addl
or
jne
xor
cmc
mov
jecxz
mov
dec
iret
in
rolb
pop
jb
mov
lret
push
pop
lahf
xor
insb
sbb
cmp
fmuls
adc
inc
lahf
cmp
leave
and
arpl
ss
notb
xchg
mov
das
cmp
mov
movsl
cmp
ljmp
adc
xor
and
arpl
cmp
cmp
scas
and
pop
pusha
or
andl
repnz
pushl
daa
mov
push
test
fwait
and
sub
and
stc
jmp
sub
sbb
mov
sbb
pop
ror
pop
cmp
mov
mov
cmpsl
gs
arpl
fildl
sub
in
roll
and
cmpsl
add
pop
xchg
shl
mov
fucomp
dec
fldcw
pop
loop
call
int3
nop
mov
pop
lods
jns
adc
int3
gs
les
arpl
lahf
iret
in
gs
arpl
mov
and
or
and
cmpsb
dec
jb
fwait
outsb
xor
adc
imul
popa
and
sub
xor
dec
xor
sub
daa
cld
jmp
pop
dec
mov
mov
push
pusha
jbe
fists
mov
lret
int3
push
inc
and
call
xchg
mov
bound
xor
sahf
cmp
cwtl
call
adc
addr16
sub
cmp
xchg
rcrb
lods
loopne
adc
xchg
aad
lods
jl
mov
sahf
pop
or
leave
xchg
lahf
xor
popa
and
cwtl
dec
into
outsb
mov
jo
jmp
stos
xchg
add
mov
daa
cwtl
addr16
daa
mov
sahf
mov
dec
mov
xchg
pop
cld
rorl
jmp
aam
dec
scas
inc
arpl
mov
add
stc
cld
mov
xchg
divb
std
movsb
aas
sarb
daa
jle
mov
movsb
jl
call
pop
xchg
or
and
call
fs
pusha
mov
pop
cltd
fs
sbb
sub
cmpsb
cmp
jo
icebp
mov
mov
sub
mov
xchg
inc
mov
shlb
sub
ficomps
or
jle
cmpsl
jae
outsb
dec
jns
or
mov
pop
mov
push
imul
popf
loope
loopne
cmp
fs
ja
sbb
mov
fldcw
adc
push
dec
mov
push
movsl
mov
cmp
mov
jb
lods
cwtl
push
jns
xor
bnd
xchg
clc
dec
iret
pop
mov
xchg
adc
test
mov
pop
inc
add
and
mov
gs
ss
mov
push
push
mov
or
ret
call
arpl
sub
pop
mov
fnsave
sub
jbe
mov
pop
iret
fcomps
or
out
fwait
inc
mov
mov
stos
bound
fisttpll
mov
lahf
icebp
jmp
sub
jecxz
pop
add
fucomi
shrb
insb
lahf
call
filds
fnstsw
inc
dec
push
fcoml
negl
mov
push
pop
xor
ret
cmpsl
sub
or
xchg
std
dec
mov
dec
jo
push
lahf
fwait
movsb
pop
rclb
jne
and
jb
negl
lahf
adc
std
das
lcall
aas
leave
movsb
push
testb
fnstcw
clc
pop
mov
xchg
jmp
cmc
cmp
lods
mov
push
mov
std
cmp
lahf
cmp
jno
je
or
inc
inc
mov
aaa
insl
xor
cmpsb
push
in
mov
mov
icebp
lret
loope
push
jne
xchg
lods
aaa
fs
cmp
mov
int3
aam
outsb
popf
andb
mov
sub
sbb
dec
test
push
cld
mov
adc
mov
in
lret
sub
dec
dec
insb
adc
stc
mov
imul
dec
std
mov
xor
pop
sbb
mov
and
xchg
rol
dec
ljmp
pop
mov
mov
test
and
and
ljmp
dec
mov
sbb
std
insl
push
push
and
test
push
cmp
movsl
xchg
mov
aas
iret
adc
jb
cld
mov
js
ja
in
pop
stos
pop
mov
dec
inc
scas
fildl
loope
in
imul
clc
xchg
mov
push
sahf
pop
das
and
push
or
sbb
ds
sbb
push
int3
test
jmp
int3
mov
mov
movsl
insb
je
repnz
pop
dec
mov
rcll
xor
pop
mov
outsb
mov
aas
sbb
test
cmp
push
std
add
lds
lret
fidivl
push
mov
cli
fldt
add
inc
shll
fsubrl
mov
mov
push
enter
hlt
test
shll
sbb
dec
mov
sub
idiv
mov
dec
jno
out
adc
sti
syscall
cmp
cmp
push
adc
int
sti
hlt
rcrl
test
in
lcall
movsl
or
subb
xchg
jnp
insb
les
inc
iret
dec
xchg
adc
xlat
inc
dec
les
mov
sbbb
lods
adc
pop
push
mov
pop
xchg
adc
pop
push
pop
mov
xchg
xchg
push
cli
sar
cltd
inc
xor
loope
cwtl
add
outsl
inc
push
mov
cmpsl
pop
xchg
push
lods
mov
movsl
mov
lret
push
push
mov
out
mov
rclb
pop
ja
and
mov
adc
xor
push
adc
xor
adc
test
out
ljmp
pop
cmp
lods
rclb
std
les
cmc
sbb
insb
mov
ret
xchg
leave
clc
cmp
xor
out
loope
cltd
push
or
cld
cmp
mov
in
mov
sub
cltd
xchg
pusha
movsb
sbb
jmp
inc
test
loopne
mov
test
push
pop
pop
stos
push
pop
mov
flds
jmp
cltd
out
push
xchg
maxps
jg
adc
cmp
xchg
inc
decl
sbb
imul
sar
mov
mov
xor
push
jp
cmpsl
adc
bound
xchg
lock
sub
insl
movsl
int
addb
jnp
test
xor
cltd
dec
mov
adc
cwtl
xor
mov
cwtl
xor
mov
cwtl
xor
mov
cwtl
xor
mov
cwtl
xor
mov
cwtl
xor
mov
cwtl
es
mov
xor
xor
sbb
out
stos
or
push
jns
mov
and
enter
and
aam
test
xchg
test
or
aaa
mov
sahf
aaa
mov
or
inc
sbb
lock
roll
test
imul
add
push
mov
add
push
cmp
or
sub
dec
dec
out
pop
ficoml
sub
fiadds
lds
arpl
mov
aas
arpl
fwait
sbb
cmpl
into
jecxz
stc
jns
and
dec
jecxz
es
lods
xlat
cmp
inc
and
shll
push
xchg
pushf
inc
cltd
mov
pop
xor
cli
loop
pop
cltd
cwtl
leave
cmpb
sarb
jg
xchg
fdivrl
pop
imul
into
stc
mov
inc
outsl
orl
sbb
jno
jno
addr16
movl
cmp
jp
inc
or
sbb
sbb
sbb
sbb
cmp
cmp
push
pop
or
pop
wrmsr
push
orb
pop
es
daa
push
test
xor
cltd
or
mov
shl
jb
jb
jb
jns
xor
jb
jns
cmp
push
jns
cmp
sbb
sbb
cmp
push
jp
ds
cs
loopne
out
in
rol
int3
add
add
and
add
xchg
or
loopne
add
ror
int
cmpsl
adcl
push
orb
sbb
out
out
out
hlt
and
aas
push
push
jbe
js
inc
pop
mov
add
add
add
sub
mov
jp
cmp
sub
nop
add
cmp
adc
mov
dec
in
push
dec
xor
xchg
in
jnp
sub
and
data16
push
mov
mov
in
insl
xor
jno
sub
mov
xchg
mov
pop
push
push
js
add
mov
arpl
mov
add
or
imul
mov
scas
or
test
or
iret
test
sub
sar
mov
movsl
lods
imul
int3
xlat
sbb
fstpt
les
add
jne
cltd
push
dec
push
mov
movsb
sbb
outsl
jl
imul
mov
sbb
mov
adc
jecxz
push
jne
adc
cmp
jo
and
pushf
pop
xor
push
fstps
push
in
shll
dec
dec
cltd
shrl
mov
xor
icebp
and
xchg
xchg
sbb
out
xor
pop
cmp
addr16
mov
pop
repnz
fsubl
or
pop
fucomi
pop
scas
outsb
sahf
in
filds
cmp
fnsave
into
adc
aaa
push
adc
mov
mov
mov
xlat
mov
push
dec
xor
test
cmp
push
jg
imul
add
notb
icebp
cmp
jecxz
xor
mov
dec
lea
test
cs
fists
popa
inc
cmp
mov
lods
ja
outsb
mov
cmp
push
in
movsl
in
imulb
loope
dec
pop
xchg
int
xlat
push
outsl
rolb
xchg
scas
nop
fsubrl
fs
inc
xor
mov
js
cmp
inc
inc
movl
outsb
dec
mov
dec
pop
ss
xchg
lea
cmp
xchg
popa
call
jo
lock
rcll
stos
pop
push
cmpsl
jnp
push
sbb
mov
sub
and
sub
add
sub
adc
xchg
lret
mov
mov
mov
imul
pop
pop
shlb
mov
iret
enter
loopne
dec
inc
xchg
popa
xor
dec
test
push
mov
daa
mov
xchg
out
and
js
add
test
push
add
xchg
test
mov
xor
jecxz
ljmp
test
jle
mov
xor
in
or
scas
push
mov
ss
mov
out
pop
sbb
pop
divl
sbb
lods
inc
insl
xor
inc
call
xor
mov
ja
aaa
cmpsb
ds
add
ret
jb
test
sbb
aas
jge
dec
shl
jmp
sti
adc
stos
lret
fidivs
lea
hlt
pop
mov
cmpxchg
mov
sbb
push
jp
or
daa
or
loopne
and
daa
mov
sub
fwait
mov
enter
test
push
shr
ja
add
add
icebp
push
sub
scas
insb
push
adc
jmp
sahf
int3
or
push
fimull
aam
lret
cli
mov
push
pop
cmp
imul
cs
test
mov
fidivrl
mov
jg
xor
push
pop
jge
inc
cwtl
add
mov
lcall
lods
aaa
mov
stc
add
inc
fisubrs
and
je
bound
mov
mov
fcom
mov
sar
call
mov
je
popa
out
cs
mov
lret
out
adc
push
pop
imul
jae
into
loopne
push
mov
mov
xchg
add
add
inc
mov
and
mov
cmpb
das
ss
jl
hlt
xor
cli
lock
lea
inc
mov
push
stc
jnp
lahf
jb
test
pop
cmp
in
inc
dec
push
inc
cmp
pop
mov
cmp
cmpb
xchg
sahf
inc
inc
push
push
sbb
jae
out
ds
push
jg
into
cltd
mov
shlb
sbb
jns
mov
and
das
lods
pop
movsb
mov
pop
mov
dec
popa
ljmp
clc
cmc
sub
scas
mov
out
dec
mov
scas
push
std
push
hlt
xchg
or
mov
pop
sbb
rol
icebp
ret
push
inc
flds
les
loop
xchg
popa
andb
pop
push
mov
jecxz
pop
pop
into
mov
cmc
test
loop
add
sbb
add
jp
rclb
rclb
insb
adc
loope
lret
leave
add
rcrb
xor
sbb
push
cmp
cmp
je
add
jae
jne
stos
addl
leave
pusha
cmc
hlt
shlb
push
inc
lods
int
test
add
repz
imul
jns
xor
lcall
mov
push
mov
inc
dec
gs
or
push
or
mov
xchg
xor
sbb
sub
sbb
hlt
dec
shr
outsl
jnp
ud1
popa
addr16
inc
mov
ret
lret
adc
imul
push
push
js
and
mov
jp
in
mov
xchg
mov
call
add
push
mov
out
jge
in
or
xchg
cmpsb
mov
fwait
popa
test
setp
xchg
cli
add
push
dec
xor
es
enter
iret
bound
sub
cmp
inc
dec
or
dec
aam
shlb
mov
inc
push
mov
push
mov
jmp
hlt
lret
jp
jmp
ljmp
xchg
sub
pop
aaa
cmc
adc
dec
lahf
aaa
sub
ret
inc
lcall
mov
fisubrl
xor
daa
cli
aad
movsb
test
pop
sub
jmp
push
jmp
fsubs
scas
into
add
imul
sbb
add
and
es
sub
or
xlat
mov
mov
xor
pop
decl
mov
mov
xor
cmc
and
cmp
adc
adc
push
cwtl
adc
test
sbb
mov
sub
ret
test
xor
lock
xor
ror
loopne
fs
test
cli
push
xchg
and
leave
inc
outsl
mov
lods
and
lods
pop
add
or
and
shlb
lahf
cmc
adc
mov
and
icebp
mov
fildll
push
pop
stc
pop
out
aad
sbb
aad
dec
push
lods
jne
jmp
push
lea
stos
mov
mov
or
add
and
xchg
mov
test
mov
dec
fistps
jno
sub
sub
in
popf
jle
or
inc
ffree
loope
xchg
cmpsb
mov
xchg
pop
adc
out
add
rcll
inc
sbb
jne
sub
fsubrs
std
sbb
or
jbe
cmp
xchg
call
inc
dec
lods
lcall
inc
pop
xor
push
dec
lea
fdivrp
lcall
mov
repnz
mov
dec
add
lret
pusha
popf
pop
xor
mov
inc
mov
outsb
sbb
inc
xchg
pop
mov
loope
sbb
push
out
stos
test
cltd
add
lea
mov
jge
jne
cli
or
repnz
mov
push
dec
push
out
sbb
nop
leave
jecxz
xlat
xchg
xchg
je
repnz
cmc
cmp
jge
cs
rcrl
icebp
inc
das
ret
fistpll
dec
jnp
jb
imul
ja
jmp
in
imul
adc
or
lret
sub
sbb
or
shrb
push
call
adc
inc
std
rcrl
scas
inc
pushf
dec
out
insl
ja
jecxz
es
sub
sub
popl
popf
mov
xchg
adcb
pusha
ficomps
mov
inc
cmp
fadd
mov
sub
popf
in
dec
push
push
inc
enter
push
adc
cltd
popf
xchg
xchg
jbe
das
aad
icebp
xchg
push
jge
popa
loopne
lret
sub
jb
inc
fidivs
lahf
sub
jp
adc
inc
and
test
or
jbe
adc
nop
or
loope
rcrl
dec
jno
sub
dec
vmaxps
jg
nop
push
ret
pop
div
out
mov
fdiv
xor
cmp
ret
imul
stos
ret
inc
push
roll
push
sbb
or
add
out
test
cmp
and
xor
leave
js
jns
sub
xchg
ret
xchg
ret
or
and
inc
mov
cmp
sbbl
dec
pop
lock
sbb
sbb
gs
addr16
add
dec
pushf
xor
out
mov
lock
inc
jb
lret
ljmp
lret
loope
or
addb
cmp
mov
cli
add
dec
pop
sub
mov
es
adc
sahf
inc
fwait
xor
ja
stc
sbb
mov
lret
add
mov
ftst
and
push
scas
adc
fucomip
jbe
mov
out
imul
cs
mov
or
daa
out
adc
adc
adc
outsb
rep
mov
pop
pop
push
movswl
mov
movb
outsb
xor
mov
mov
mov
xchg
call
jb
jns
dec
icebp
pop
incl
hlt
ret
jp
sbb
and
or
inc
stos
push
jmp
cld
jo
stos
test
loopne
pop
push
mov
ficoml
xchg
cld
mov
or
mov
stc
xchg
movsl
popf
xchg
or
stos
addr16
xor
mov
clc
inc
add
mov
cmp
out
pop
dec
mov
xor
push
and
fdivrs
scas
hlt
sub
pop
dec
lods
lods
push
scas
cld
xchg
cmp
lcall
xor
adc
sbb
scas
fcmovnb
js
sub
xchg
cmpl
sahf
fcmovb
pop
nop
dec
dec
sarl
or
lcall
int
adc
sub
jmp
cs
jbe
orl
jns
and
cmc
sbb
jp
scas
lods
in
loopne
xchg
mov
xchg
xor
dec
sbb
pop
insb
xchg
icebp
insl
or
ret
cmpsb
out
outsb
sbb
dec
arpl
sbb
jp
mov
cmc
mov
mov
cs
xchg
out
repnz
xchg
mov
push
test
xchg
repz
cli
inc
sub
hlt
ret
fwait
xor
add
scas
cmp
xchg
jb
add
sbb
pop
dec
cltd
jbe
xchg
nop
decb
incb
jb
push
adc
xor
cmp
push
and
fucomi
enter
mov
js
outsl
or
gs
rcrl
mov
push
dec
fsubr
in
aad
repz
mov
jg
loopne
sti
scas
adc
adc
xchg
inc
inc
sbb
orl
jl
or
jge
mov
lods
dec
xchg
jb
aad
sub
push
mov
pop
aas
inc
popf
loopne
fwait
cmpl
add
aam
jbe
inc
icebp
repz
sbb
ljmp
out
inc
or
xor
pushf
rcl
jle
xor
ret
xchg
sbb
and
addr16
aam
cld
gs
jmp
sarl
idiv
cmp
aad
cmp
sub
mov
lret
push
mov
cmp
enter
test
cmpsb
loop
nop
mov
cmp
inc
outsb
out
test
mov
mov
pmulhuw
xchg
in
movsl
sub
pop
andl
das
cltd
dec
popa
repz
icebp
loope
daa
inc
xor
dec
sub
mov
mov
imulb
xchg
roll
sahf
adc
divb
je
loop
cmpsl
push
jno
rclb
lcall
jle
addr16
popa
fucomi
pop
lock
jns
push
xchg
leave
adc
pop
adc
das
aas
out
fs
and
cld
loope
jle
sbb
cltd
adc
aas
jo
push
add
add
addr16
ljmp
xchg
dec
push
ret
das
mov
add
cwtl
push
pusha
mov
jns
mov
dec
xchg
push
sbb
xlat
sub
inc
mov
lods
xchg
mov
cmpb
jo
mov
jnp
loopne
sahf
push
mov
adc
inc
clc
decl
and
xchg
jno
xchg
int3
sub
call
dec
mov
movsb
xchg
stc
lds
fadd
insb
enter
inc
cmp
cmc
movsb
mov
push
in
xchg
insl
cmp
mov
mov
mov
mov
add
and
lods
mov
push
clc
mov
mov
sti
pop
lods
test
or
and
inc
lahf
movsb
mov
add
mov
mov
mov
sbb
and
add
add
inc
or
push
data16
sub
push
mov
sbbb
add
dec
mov
lcall
shlb
push
and
call
daa
push
add
lret
push
xor
or
xor
push
mov
sbb
test
xor
and
psrlw
mov
and
push
mov
fcoms
fadds
mov
sti
inc
jecxz
int
inc
dec
aad
fmull
sub
shl
jle
sub
int3
sub
adc
and
not
js
mov
int3
sub
adc
add
in
dec
call
lock
mov
ret
sti
xor
outsb
pop
les
jne,pn
loopne
xchg
push
sbb
clc
scas
mov
push
mov
xchg
mov
lahf
inc
and
ret
cmp
arpl
jmp
hlt
test
stos
cmp
jns
imull
add
xchg
int3
pop
cmpsb
mov
imul
gs
mov
mov
mov
call
loopne
notb
jno
cltd
dec
dec
jns
jno
cli
ja
jg
add
pop
pop
sbb
jge
xchg
inc
mov
repz
push
push
xlat
xor
insl
aad
mov
cwtl
or
sahf
xor
outsl
movsl
add
lods
push
repnz
ret
repnz
mov
jecxz
out
out
mov
lret
je
add
es
sti
pop
test
cmpl
xchg
insl
push
push
cmp
pushf
pop
jae
shrl
xor
lret
inc
pop
inc
mov
mov
dec
ds
xor
fistl
iret
shrb
mov
push
fidivrl
loop
repz
imull
push
push
pop
cs
cs
lret
aad
push
int
pop
popa
push
shll
test
push
xchg
orl
push
sbb
fidivl
arpl
fnsave
fldcw
and
sub
bound
arpl
fwait
leave
call
pop
roll
or
cli
or
in
sub
mov
xor
dec
cs
ror
lcall
xchg
hlt
pop
testl
xchg
hlt
mov
xchg
fisttpl
mov
xchg
add
int3
dec
mov
fadd
mov
lods
stos
push
xchg
push
pop
fstp
shlb
and
ror
mov
bound
loop
imul
mov
loopne
ljmp
mov
lret
adc
pop
mov
lret
xor
xor
inc
aam
mov
loopne
test
mov
lods
push
out
push
xchg
fimull
jae
outsb
mov
mov
scas
mov
push
sub
test
fistpl
insb
and
stc
pop
js
inc
push
sub
push
mov
frstor
lret
test
out
andb
jb
jns
cld
adc
orb
mov
dec
cld
xchg
push
cmp
nop
mov
jecxz
and
addr16
push
fnstenv
insl
xchg
fmuls
jle
outsl
aaa
popf
and
test
fwait
out
xlat
jbe
leave
inc
loope
sbb
pop
cld
dec
scas
jbe
psubd
sub
adc
xchg
cmpsb
push
ret
fs
mov
nop
and
mov
push
pop
movsb
popl
lods
pop
scas
idivl
leave
mov
in
std
sub
inc
sbb
mov
lods
inc
test
test
pop
push
ljmp
inc
jg
and
xchg
lds
sbb
mov
ljmp
push
jp
push
pop
hlt
out
push
jle
testb
mov
mov
mov
in
mov
lods
stc
jmp
inc
loop
out
pusha
push
outsb
repz
xlat
aam
adc
andb
mov
test
cwtl
ljmp
jg
mov
mov
mov
test
cltd
incb
xchg
jp
xchg
jnp
push
es
sbb
test
fdivr
cli
lahf
sbbb
pop
add
push
inc
movl
xchg
xchg
mov
outsb
jmp
push
and
shrb
mov
popf
daa
jl
pop
push
sbb
push
dec
sub
lret
lahf
out
outsl
and
or
fildl
sarb
and
jns
stos
out
gs
data16
add
sub
loope
call
jo
jne
mov
insb
or
xlat
push
jnp
cmpsb
add
inc
or
sub
lret
lret
cmpsl
jl
pop
pop
inc
lods
scas
mov
mov
mov
lods
inc
scas
cwtl
jecxz
inc
xor
lret
mov
ja
insl
add
adc
mov
test
add
xchg
and
fwait
xchg
inc
xchg
cmp
cmp
jns
mull
mov
lcall
sbb
and
sub
and
and
adc
sahf
and
and
sbb
xchg
stos
insl
movsl
inc
subb
cltd
sub
pop
mov
lcall
icebp
and
mov
movsb
test
mov
popf
sti
ffreep
push
scas
jmp
xor
push
data16
cmpl
inc
add
cwtl
dec
and
pop
xor
fwait
insb
inc
ljmp
dec
iret
jbe
imul
adc
push
mov
mov
mov
stos
push
insb
sbb
mov
push
dec
cltd
mov
push
pop
push
cmp
test
int
stc
repz
iret
mov
test
stos
push
and
jle
sbb
mov
imul
pop
push
xchg
ret
loop
dec
cwtl
or
xor
pop
pusha
xor
pusha
xor
pusha
xor
lods
movl
cmp
cmp
dec
inc
incl
test
and
dec
lret
add
push
fstl
hlt
mov
rol
gs
or
cmp
dec
movsl
outsl
inc
xchg
in
xchg
xor
inc
cwtl
pop
mov
imul
sbb
mov
lret
stc
mov
and
out
cmp
lods
and
cmp
inc
sbb
in
imul
insb
push
xor
movsb
nop
and
push
test
jle
data16
daa
xor
incl
push
adc
jnp
shlb
xchg
dec
loop
mov
mov
push
call
ja
test
in
outsb
test
insb
jge
jnp
scas
add
sbb
xor
and
subl
jns
movsb
xchg
push
jecxz
ret
movsb
test
dec
sti
cmp
xchg
les
mov
lds
jl
icebp
insb
or
mov
and
mov
enter
cli
pop
jbe
xchg
out
rclb
xor
inc
lea
mov
jbe
jecxz
and
mov
or
adc
inc
call
pop
xchg
cmp
mov
sbb
pop
aas
jb
ds
mov
pop
cmpsl
push
rorl
dec
ret
fbstp
shr
add
fnstcw
cld
xchg
mov
pushf
data16
jle
sarl
jecxz
mov
xchg
sarb
xchg
mov
xchg
sub
clc
sti
jg
and
rol
and
hlt
mov
in
jnp
outsb
push
loop
je
imul
ss
mov
mov
adcb
movsl
mov
push
pop
pop
mov
or
int3
lods
inc
sbb
std
jmp
sub
jo
add
sbb
cwtl
add
fists
adc
int
stc
jno
data16
and
cmpsl
fs
lds
psrld
pop
jp
push
test
lock
out
aas
mov
lods
add
rcll
pop
mov
pop
xor
push
andb
scas
iret
sarb
aam
aam
mov
test
sbb
mov
adc
jl
jp
xchg
jmp
pusha
or
sbb
jmp
sub
push
loop
mov
in
hlt
cs
aas
xor
pop
mov
insb
loope
fsubs
outsl
mov
pushf
ljmp
shrl
xor
loopne
iret
mov
lods
in
rorb
nop
stos
clc
mov
cmp
cli
dec
cmp
jg
bound
cmp
testl
pop
dec
sub
xchg
xchg
in
ds
sbb
xor
push
sbb
sub
or
pop
and
mov
fisubs
ret
push
sbb
cmp
ja
sub
mov
mov
mov
add
or
pushf
inc
pop
xchg
dec
mov
cmp
xor
lea
inc
test
movsb
outsb
stc
mov
mov
lahf
cmp
push
pusha
push
mov
push
rcr
rcr
mov
xorb
ds
mov
jae
jnp
mov
push
pusha
leave
push
sbb
xchg
lret
pop
or
ja
das
call
movsl
fbld
sub
pop
mov
cmp
cmp
icebp
add
jo
sub
dec
loopne
xchg
js
cmpb
push
xor
subl
push
insb
bound
and
fwait
scas
inc
pop
and
adc
repnz
aaa
mov
push
xlat
xor
jnp
mov
xchg
insl
mov
sbb
pop
mov
jne
in
int3
or
dec
push
push
mov
inc
pop
sarb
jns
and
leave
jge
movsl
xchg
movl
lea
sbb
lds
dec
xor
xor
xor
lret
clc
dec
dec
jae
or
cmp
aas
mov
sub
cli
loop
push
stos
inc
lret
jne
xor
rcl
jle
lods
in
ret
jecxz
in
inc
inc
sbb
js
popa
mov
pop
pop
clc
jnp
mov
mov
inc
add
or
insl
push
fdivl
lret
icebp
mov
daa
mov
push
cmp
mov
add
out
add
in
lret
pop
xchg
sub
imulb
pop
or
inc
lods
mov
push
lea
lret
pushf
adc
xchg
pop
or
jecxz
ret
sti
into
and
mov
or
xadd
mov
loopne
out
jae
mov
andl
scas
mov
xchg
int3
imul
sub
shrl
int
xor
pop
push
sarb
shl
movb
psraw
fwait
test
cltd
rclb
pop
lock
clc
out
and
xchg
mov
test
or
negl
mov
test
test
call
jns
cs
sbb
addr16
sbb
xorps
dec
push
adc
mov
and
pop
pop
xchg
lock
fisubl
movsl
hlt
cmc
popf
loope
scas
loop
xor
mov
stos
clc
push
lods
imul
pusha
add
je
repnz
mov
divl
cwtl
js
cmp
inc
cmpsl
mov
or
inc
rcrb
adc
out
xor
stc
in
cmpsl
xor
push
xchg
sub
push
iret
mov
push
push
scas
pop
mov
lea
stc
jge
jnp
btr
lock
mov
loopne
xchg
mov
sub
ja
dec
pop
sarl
insb
movsl
aad
cmp
sbb
or
mov
xchg
aad
cmpsl
pusha
and
lea
bnd
add
pop
xchg
adc
clc
sbbb
call
pop
aas
push
fistps
xchg
fwait
dec
les
in
mov
dec
xor
sahf
jns
jns
mov
les
nop
imul
xor
sti
ret
addr16
out
xchg
icebp
lods
push
sti
es
and
mov
mov
jnp
push
xor
push
mov
sbb
mov
sub
fdivrs
jle
xchg
aas
ret
mov
cmpsl
and
in
stos
and
jae
dec
inc
or
mov
shrl
inc
dec
xor
xchg
adc
push
dec
jmp
stos
xor
push
push
les
jle
insl
jno
stc
pop
xchg
mov
rcll
fwait
dec
mov
std
ret
int3
xchg
sub
dec
add
ret
xchg
rcrl
push
push
mov
inc
cmp
xchg
add
xchg
jns
sbbb
jne
mov
push
pop
fbld
jge
or
leave
andb
test
mov
xchg
mov
enter
cli
xor
sub
and
jno
mov
jg
fisttpll
xor
out
pop
jb
pop
in
fbstp
jge
jns
or
out
or
fs
sub
gs
sub
or
and
jmp
xor
mov
roll
mov
mov
arpl
test
ja
fbstp
dec
xchg
push
dec
aam
outsl
lea
push
fwait
sahf
stos
out
sbb
xchg
push
lock
add
push
xor
leave
insb
mov
jo
jo
inc
push
jbe
and
lret
je
ljmp
scas
sub
xor
mul
xchg
add
loope
dec
xor
test
cmpsl
mov
ds
pushf
xor
test
pop
xchg
rep
jb
cmp
add
out
sub
mov
pop
mov
mov
pop
mov
gs
sub
arpl
dec
or
xor
xor
jp
mov
jp
push
shr
dec
leave
dec
cld
cmpsl
aam
repnz
mov
aas
push
stc
xchg
jmp
mov
cs
mov
lods
xchg
fs
pop
int
mov
jbe
out
std
cmpsl
fdiv
mov
sub
and
lret
ret
dec
dec
xchg
in
mov
jno
je
adc
jmp
jl
rcr
mov
das
adc
lock
inc
movsb
mov
sahf
rclb
ss
faddl
ss
subb
out
jl
mov
add
lods
and
mov
jo
push
ret
push
iret
ret
mov
ja
xor
push
cmpsl
jns
dec
fwait
adc
add
les
jo
mov
pop
insl
sub
aaa
orb
arpl
sbb
pop
test
adc
mov
cmpb
cli
dec
lods
cmp
sub
scas
add
add
imul
push
lret
test
repz
notl
sub
loop
pop
insl
movl
mov
xchg
mov
frstor
lods
or
pop
loop
pop
pcmpeqd
xchg
int
inc
ja,pt
cli
pusha
out
push
xchg
push
icebp
mov
cmc
inc
int3
xchg
dec
xchg
dec
cltd
addl
fdivrl
shrb
mov
sub
cwtl
adc
sbb
or
inc
pop
movsl
sti
sbbl
push
arpl
sbb
test
les
in
cmp
inc
sub
xchg
adc
mov
repnz
inc
data16
and
jl
mov
jle
sbb
inc
xchg
dec
sbb
and
mov
cmc
out
ret
inc
xor
icebp
fs
xlat
in
jns
pop
cmp
adc
in
loop
mov
ss
dec
push
mov
test
or
gs
into
mov
mov
inc
cmp
push
xchg
stos
out
das
sti
dec
mov
push
push
ret
ljmp
fidivrs
sar
fsubs
add
pop
pop
mov
push
and
adc
fdivrs
js
sbb
mov
sub
or
add
jbe
and
mov
sub
in
mov
lods
mov
clc
mov
xchg
cmp
push
jl
jge
pop
shlb
xchg
mov
inc
flds
stc
xchg
inc
mov
insb
loopne
jo
cli
add
popf
mov
cs
add
lods
into
rcll
insb
bound
aas
push
fdivr
stc
out
mov
lea
cmp
int
jmp
repz
jl
mov
push
mov
or
out
pop
mov
das
sbb
movsl
sbb
rorl
mov
jg
pop
cmp
loop
dec
jne
mov
inc
fwait
outsb
add
fcmove
sbb
sarl
dec
push
mov
rol
mov
pop
ljmp
push
daa
es
cltd
test
add
fistl
push
arpl
aam
push
add
sub
mov
aad
je
and
push
cld
mov
push
test
iret
gs
xor
and
adc
in
inc
scas
cmp
dec
xor
and
mov
pop
dec
jne
xor
mov
cld
mov
push
outsb
push
add
inc
push
mov
mov
sar
test
mov
data16
or
fnstenv
add
xchg
add
popa
int3
movsl
cmp
push
mov
out
pop
jmp
loop
push
sub
fnsave
xchg
dec
mov
jecxz
and
out
xor
xchg
and
lcall
cmp
jno
fstpl
fwait
dec
inc
inc
in
popa
dec
cli
loopne
ficoms
inc
jmp
xor
mov
add
mov
icebp
pop
test
jle
inc
xchg
out
fcompl
notb
push
mov
push
pop
mov
mov
clc
int
daa
dec
mov
push
mov
lahf
pop
push
mov
les
mov
fwait
out
je
mov
out
pop
data16
ficoml
int3
mov
sub
ljmp
pop
clc
cwtl
rolb
leave
je
ja
mov
bound
mov
sarl
pop
outsl
je
add
imul
out
mov
push
pop
pop
mov
cmp
mov
imul
aad
xchg
fmuls
xor
mov
pop
xchg
enter
mov
ds
inc
test
popa
mull
rcrl
test
mov
scas
xchg
call
xchg
aam
xchg
pop
sti
pushl
pusha
fsubrl
jmp
insl
jbe
jnp
adc
pop
or
add
andl
and
pop
mov
fimuls
popf
push
push
out
repz
inc
ret
iret
imul
pusha
mov
decb
cwtl
push
int
lds
jmp
mov
jae
adc
out
repnz
movsl
insb
cmp
inc
mov
fmul
ljmp
add
push
into
and
xchg
mov
ss
sbb
test
push
xor
xchg
frstor
mov
int
dec
cmp
orl
mov
scas
scas
or
cmp
out
sbb
bswap
mov
fmul
add
std
jmp
jo
adc
aad
jmp
dec
icebp
pop
push
ds
ljmp
repnz
adc
xchg
push
xchg
and
hlt
mov
inc
or
repz
xor
sbb
add
les
cmp
movsb
inc
or
adc
xlat
cmc
xchg
sbb
repnz
xchg
xor
mov
push
cltd
jmp
mov
jne
dec
sahf
inc
sub
decb
jbe
pop
lret
jle
ljmp
int3
mov
clc
push
stos
xchg
or
pusha
fldl
gs
and
shll
sbb
lods
sahf
dec
jae
push
push
arpl
and
xor
add
rcrl
bnd
mov
lahf
rclb
das
mov
xchg
push
cmp
aaa
aad
dec
fstl
sbb
xor
mov
add
movsl
lsl
xor
xor
das
stc
mov
push
mov
in
ret
adc
scas
ja
mov
cmp
or
call
mov
test
and
adc
out
jp
mov
pop
push
icebp
jo
mov
mov
pop
or
xchg
pop
pusha
clc
mov
aad
fstsw
push
mov
in
mov
pop
in
push
pop
lods
sti
cmpsb
cmp
aad
mov
mov
ljmp
jbe
scas
push
push
ret
push
xchg
lret
sub
or
loope
testl
hlt
dec
inc
ds
fimuls
cmp
cmc
fs
int
adc
or
pop
mov
stc
or
mov
in
mov
sbb
test
mov
xchg
push
pop
sahf
push
sbb
and
push
mov
arpl
pop
inc
call
sahf
mov
push
jmp
or
push
add
sub
outsb
addr16
or
push
shll
imul
int
and
sub
push
enter
cld
fmuls
in
push
or
repnz
xor
or
pop
test
inc
adc
stos
jne
cmpsb
lds
movsb
and
or
jae
push
adc
dec
arpl
sbb
loopne,pn
xor
int
out
xorb
inc
cmp
pop
stos
push
inc
insl
cmp
xor
xchg
mov
in
xchg
or
jae
js
push
dec
sub
xor
xor
cmp
lahf
inc
sbb
int
test
pusha
iret
mov
mov
push
xchg
ret
pop
pop
clc
fidivl
add
cmp
push
data16
sbb
pop
mov
mov
pop
outsb
push
mov
push
mov
sbb
pop
movb
rcr
and
pcmpeqw
outsl
out
rorb
test
pusha
jge
push
jo
sub
jle
dec
jns
or
pop
push
out
pop
test
adc
popa
imul
or
mov
dec
pop
cmp
fdivs
popf
out
jns
ja
dec
leave
mov
fwait
adc
adc
fnsave
js
in
mov
loope
mov
and
push
jnp
xor
mov
fcmovnb
leave
mov
rorl
xor
push
push
imul
lods
jne
jnp
scas
aaa
pop
fbld
enter
mov
out
and
xchg
sti
sbb
js
mov
lods
aad
pusha
push
fistpll
ds
mov
bound
push
push
and
cmc
mov
jmp
icebp
andl
jne
inc
scas
sbb
dec
pop
pop
or
out
out
adcb
mov
cmp
push
out
stos
leave
divl
out
and
ret
mov
ljmp
mov
insb
mov
jp
pop
push
stc
std
imul
cmc
shl
cmpsb
push
fidivrl
ret
fsubl
pop
mov
mov
mov
fstl
popa
insb
sahf
sar
mov
stos
mov
rolb
cli
sbb
xchg
push
xchg
jmp
jecxz
out
int3
or
ljmp
jecxz
add
adc
lds
fs
cmpsb
xlat
outsl
sbb
push
adc
cmp
mov
lds
mov
push
xchg
sub
or
sbb
xchg
pop
inc
cmp
mov
das
outsl
not
scas
cmc
or
aad
jmp
cmpsb
into
ss
mov
add
mov
push
out
mov
aas
ds
popf
or
mov
pop
jg
fscale
jle
sbb
sbb
icebp
rorl
insl
pushf
stos
mov
stos
jne
in
sub
incl
js
pop
pushf
add
stos
imull
add
mov
dec
dec
fs
cmc
mov
leave
jnp
and
imul
mov
ds
lcall
cmc
push
push
jecxz
pop
in
jne
int
dec
sub
pushf
jge
into
js
pop
mov
mov
cmp
xlat
push
fistpll
stos
ds
das
das
sub
adc
jl
xor
roll
aad
mov
sbb
scas
sbb
xor
fcomp
pop
push
sub
test
mov
or
add
mov
mov
jno
adc
adc
pop
gs
sbb
sub
sub
jg
and
repz
cmpsb
mov
lret
icebp
lods
test
add
inc
jnp
stos
adc
fisttpl
mov
dec
negl
mov
imul
inc
mov
fucom
insl
lds
fldenv
inc
mov
icebp
jecxz
adc
adcb
in
ja
stos
add
ss
lock
loop
cmp
dec
jae
popf
lea
push
je
js
loopne
imull
pop
out
jne
sbb
sbb
mov
pop
icebp
clc
or
das
mov
pop
mov
lcall
jns
daa
insl
movsb
lods
test
add
loope
cmp
ljmp
imul
fs
lahf
ss
pop
test
add
adc
sub
mov
xor
cmc
mov
in
inc
aad
and
add
sub
inc
dec
daa
shlb
lods
pop
ds
and
and
mov
ret
dec
popa
or
inc
push
or
lods
fbld
push
and
insb
call
mov
or
iret
out
lds
lds
notb
leave
rorb
mov
mov
aad
sub
push
adc
mov
dec
adcb
ficoml
xchg
jl
sub
fildll
dec
xor
maxps
or
or
adc
xchg
inc
cli
test
xchg
dec
adc
loop
rclb
mov
inc
pop
jge
out
into
pop
cmp
inc
imul
mov
jl
sbb
mov
icebp
and
adc
inc
aam
add
std
jge
imull
fistl
mov
sarb
mov
or
pusha
xor
iret
fsts
ret
lret
cmp
test
mov
cmp
lcall
pop
std
jecxz
clc
ds
scas
aaa
sar
pop
aas
outsb
cmp
cmp
add
cmc
int
call
hlt
stos
jne
setnp
loop
idivb
das
mov
cmp
sub
cmc
gs
orl
mov
insl
xchg
xor
adcb
dec
loopne
lock
dec
es
or
mov
icebp
divb
add
xchg
dec
pop
mov
push
xor
movsb
call
lods
in
and
js
mov
iret
xor
and
or
inc
xlat
call
dec
andl
dec
jno
insb
xchg
or
mov
js
adc
aas
jg
fcompl
add
andb
mov
idiv
fidivl
pop
cmp
push
cmp
repnz
dec
jne
je
mov
push
mov
sub
ret
out
mov
adc
mov
popa
scas
jb
inc
jnp
icebp
hlt
call
mov
aad
ficomps
aam
bnd
adc
scas
shlb
pop
sarb
xchg
pop
push
maxps
lea
movsb
add
rcr
and
ja
aad
inc
mov
dec
rolb
pop
mov
stos
pop
int3
ljmp
mov
or
cmc
lods
pop
cmc
mov
mov
add
lret
dec
cld
mov
add
inc
inc
adc
nop
xchg
in
push
imul
scas
addr16
lods
add
ret
cwtl
xchg
repz
xor
mov
dec
add
inc
test
add
test
add
mov
dec
or
mov
movsb
cld
add
pop
pusha
or
xchg
push
pop
filds
mov
movsl
test
add
popf
in
pushf
lret
test
cmc
loopne
mov
cli
sbb
aaa
jle
cltd
sbb
ja
dec
xchg
inc
sub
mov
outsl
test
xor
outsl
mov
sahf
jge
mov
dec
fsub
fs
mov
inc
pop
adc
out
cli
mov
add
and
mov
popa
and
lcall
mov
xchg
mov
inc
jle
cmc
pop
and
pop
add
jns
and
push
fbstp
mov
pop
iret
ljmp
jecxz
pop
fisubs
dec
loop
jecxz
pop
fisttps
cmpsb
pop
aad
pop
es
dec
or
sbb
cmp
sub
dec
jae
in
lcall
mov
das
pop
push
in
mov
ljmp
imul
push
jge
mov
ret
add
shrl
test
and
xchg
or
lcall
add
adc
cwtl
subl
ret
pop
inc
movsb
push
mov
std
adcb
xchg
mov
push
notb
iret
xchg
dec
ljmp
mov
fstpt
push
mov
scas
pop
sahf
xor
inc
ja
leave
loop
push
sbb
in
push
ds
fadd
sub
add
xor
jge
sub
js
out
sarb
jge
data16
push
imul
pushf
popf
push
push
and
shr
mov
and
inc
xor
jae
inc
shlb
clc
mov
std
adc
push
jecxz
inc
pop
leave
outsb
lret
jae
aam
jecxz
fs
sarb
sbb
fisttpl
pop
mov
ficoml
jnp
adc
mov
and
popf
adcb
stos
test
add
dec
pop
mov
lods
mov
into
sarl
aaa
movsl
xchg
pop
pop
jge
dec
pop
and
and
out
out
int3
inc
fcomp
dec
bound
imul
ljmp
cltd
mov
in
ljmp
mov
nop
mov
sti
mov
fnstcw
mov
maxps
ds
repnz
dec
stos
mov
xchg
fidivl
mov
mov
pusha
cli
mov
test
loop
ficoml
inc
dec
cmp
stc
roll
pop
dec
cmp
sbbl
adc
ficompl
add
mov
jl
dec
and
pusha
or
lods
jp
in
lds
cmp
aas
jae
out
cli
sbb
aad
pop
fisttps
cmp
insb
fists
cmp
fnstsw
cmp
iret
mov
lds
push
sub
lods
xlat
cmp
xchg
adc
cmpsb
lods
push
xlat
pusha
cmp
popa
rol
stos
lret
stos
jmp
bound
jecxz
xsha1
cmpsb
psubw
jg
nop
inc
test
das
jge
inc
cmpb
sub
cmp
inc
fisttpll
xorb
loopne
movsb
pop
mov
das
or
nop
and
jp
mov
jmp
sbb
iret
jp
pusha
xor
fs
xor
mov
dec
ds
jae
and
je
out
icebp
scas
aaa
pop
out
and
inc
adc
ficoms
xlat
and
imul
cmp
mov
sbb
lea
jno
test
inc
shl
cmp
dec
dec
pop
pop
test
into
sbb
xor
leave
add
add
pop
push
inc
push
inc
gs
xchg
out
adc
xor
imul
test
xor
mov
lods
mov
xchg
jns
mov
sbb
imul
rclb
fdivs
and
xor
xchg
add
jmp
sbb
stos
pop
or
mov
incb
lods
and
jp
fmuls
or
into
cmp
sti
into
cmp
jmp
cld
push
ja
fucomip
cmc
mov
inc
cmp
sub
sbb
push
in
push
push
jbe
jg
das
xlat
aas
dec
jo
sub
inc
test
mov
rcrb
mov
pop
jo
xchg
jmp
fisttpll
sub
mov
push
mov
sub
adc
xchg
les
fcompl
push
fmull
mov
inc
push
leave
adc
cmpsb
cmp
sub
jno
stos
cmpsb
aad
lcall
test
xor
movsl
jle
movsb
sub
xor
push
jmp
mov
cmpsb
in
mov
add
filds
frstor
xor
sub
jo
out
mov
pop
ret
inc
std
pop
popf
cmpl
push
cmp
insl
cmp
inc
cmpsl
movsb
inc
and
xor
add
mov
aam
sahf
xchg
pop
pop
in
jge
ret
inc
and
scas
add
sbb
mov
popf
inc
and
xchg
push
ss
bound
pusha
or
pop
icebp
mov
mov
shl
lcall
shll
divb
lcall
repnz
mov
dec
cmc
fiadds
xchg
add
push
pop
mov
cmpb
and
scas
fstl
jne
cmp
or
orb
and
into
cli
stos
add
jnp
xchg
mov
pop
add
mov
lahf
scas
orb
pushf
scas
sbb
pop
jo
outsl
les
scas
out
sub
adc
jo
push
fcmovnb
push
or
xchg
add
je
orb
or
insl
or
sahf
add
xchg
xor
les
and
mov
add
pop
inc
lock
jno
rclb
sub
daa
mov
dec
sub
loop
adcb
cmc
insl
adc
and
adc
adc
sub
adc
mov
push
data16
test
add
and
xchg
sarb
inc
add
ret
push
inc
fwait
subb
inc
add
in
aam
mov
add
and
clc
add
or
mov
sub
inc
or
mov
rorb
sbb
and
sbb
mov
push
sub
add
sbbb
inc
add
jl
adc
adc
cmp
jbe
add
sbb
inc
dec
fldl
mov
or
rclb
movsb
add
popa
add
xchg
add
xchg
fnstenv
adc
fwait
popf
cmp
mov
sbb
fwait
xchg
loop
es
mov
mov
lds
adcb
add
push
and
inc
dec
aam
xor
sub
mov
push
movb
xor
xchg
or
shl
push
inc
xor
int3
inc
popa
mov
push
fadds
mov
mov
arpl
addr16
lahf
or
leave
mov
push
pop
or
and
roll
or
pop
push
insb
lock
sub
inc
jmp
inc
lods
or
je
rorl
cs
in
inc
movsb
or
nop
sub
icebp
mov
pop
push
repz
xchg
imul
cld
mov
mov
pop
iret
inc
movsl
lea
sub
gs
popf
mov
loopne
mov
cmovbe
test
aaa
lods
adc
inc
hlt
andb
or
ret
in
inc
adc
push
xchg
test
xorb
inc
mov
bound
xchg
in
in
and
jl
dec
loop
inc
push
push
inc
adc
fstl
pushf
jo
stc
dec
sbb
or
dec
inc
icebp
sar
insb
into
sbb
addr16
adc
dec
mov
xchg
movsl
cmpsb
daa
pop
clc
xor
push
ret
xchg
lahf
push
scas
push
jns
test
xor
fcompl
pop
lsl
fcomp
push
je
push
and
jmp
aad
pushf
inc
adc
cld
mov
xchg
movsl
pop
fs
jb
jl
mov
cs
sub
movsl
xor
mov
addr16
nop
mov
pushf
mov
pusha
cmp
js
outsl
in
std
dec
pop
add
xlat
dec
fcompl
xor
fsubrp
jb
inc
add
mov
mov
in
gs
daa
pop
push
aad
cmp
mov
mov
inc
gs
mov
cmc
in
ret
cld
pop
jb
fbstp
sti
and
jno
std
movsb
mov
jmp
rorb
bound
loopne
xchg
jb
ljmp
icebp
in
sbb
test
lea
jo
inc
nop
outsb
mov
add
mov
mov
mov
push
int
lret
inc
jle
imul
sbb
ljmp
mov
int3
adc
add
cmpsl
pop
int3
or
cmp
mov
push
push
xor
push
stos
scas
outsl
sub
push
sti
add
push
cltd
xlat
pop
pop
push
xor
outsb
cmpsl
arpl
mov
faddp
pop
add
cmp
push
xchg
mov
or
inc
jmp
inc
mov
scas
lods
out
or
cmp
lret
jge
gs
jmp
dec
xlat
push
and
gs
ds
jg
rol
sub
stc
clc
aas
cmp
mov
paddb
cmp
sbb
int3
pop
push
cmp
adcl
pop
pop
pop
pop
jae
pop
fcoml
cmpl
les
inc
ss
sub
cmc
sti
sub
pop
lods
push
or
lds
cmp
aad
sbb
fnstsw
lahf
dec
stos
iret
push
or
addr16
ret
shr
into
iret
idivl
jae
cmpsl
sbb
mov
stos
pop
ss
lret
fnstcw
iret
mov
fs
test
adc
mov
jb
orl
into
or
out
cmpsb
ret
sub
jo
inc
jb
stos
and
fistpl
insb
cwtl
xchg
repnz
push
mov
ss
mov
push
lret
jmp
xchg
movsb
orb
out
push
pop
fld
or
imul
add
scas
insb
mov
pop
loope
cmp
test
jae
dec
rcrl
mov
stos
adcb
es
divl
sahf
std
and
das
in
add
andb
cmp
mov
cmc
pop
xlat
adc
push
mov
sub
out
icebp
test
ret
ffreep
push
out
scas
popa
add
lock
or
dec
push
das
popa
add
mov
or
xor
jl
xchg
lret
push
fs
loop
int
push
dec
into
es
xor
repnz
or
add
xor
les
icebp
cmpsb
adc
cmp
pop
xchg
add
push
pop
mov
cmpl
jmp
add
adc
xchg
repnz
stos
icebp
xchg
xor
cwtl
xor
test
and
pop
pop
loopne
mov
in
or
jmp
mov
ds
cmp
fmuls
fistl
or
bound
mov
or
mov
and
sub
sbb
jb
or
cltd
push
imul
jne
xchg
les
mov
dec
xor
add
in
add
popf
jecxz
movsl
gs
pop
dec
xlat
mov
bnd
sbbb
outsb
xchg
xchg
mov
fs
jae
ljmp
jge
push
aas
and
cmp
ret
adc
cmp
dec
or
adc
daa
add
fnstenv
sbb
mov
test
cmc
dec
or
leave
int
and
sub
mov
cmp
xor
cmpb
mov
mov
mov
mov
cmp
xor
flds
pop
cs
adc
inc
and
filds
popf
ss
cwtl
lock
rcrb
fisttpl
imul
orl
aad
ja
sub
jmp
outsb
icebp
lret
mov
inc
pop
call
enter
adc
jns
mov
andl
aam
pop
xor
mov
pop
sbb
add
adc
mov
pop
adc
lret
mov
notb
test
ljmp
in
mov
ret
aas
subb
sub
mov
pop
and
idivb
loopne
popf
jge
js
cmpsb
jmp
mov
pop
jae
orl
jnp
rorb
movsl
jmp
int
aad
xor
ficoms
adc
pop
mov
out
pushf
add
aam
test
insb
jbe
cmc
add
mov
add
cmp
cmp
into
ss
xchg
add
sbb
sub
mov
mov
into
insb
ds
xlat
sub
add
enter
lret
cmp
testb
push
out
sarb
xchg
jns
imul
outsb
or
xorl
lea
in
es
and
iret
iret
aaa
fstps
jae
or
push
subb
mov
cli
movsb
mov
dec
cmp
fistl
mov
sub
add
adc
mov
aad
in
pop
and
in
add
lea
in
iret
jmp
cmp
sub
loope
stos
je
mov
add
loope
jne
or
mov
sub
or
push
dec
sbb
jns
out
inc
fisttpl
mov
inc
jmp
prefetcht1
xchg
sbb
nop
ret
pop
mov
daa
push
pushf
dec
adc
xchg
mov
hlt
mov
or
fsubl
pop
add
push
scas
pop
mov
pop
das
or
out
test
or
push
repnz
ljmp
lods
sub
hlt
xor
sub
push
gs
arpl
in
push
pop
sbb
bswap
lahf
shl
sub
cld
ret
outsl
ljmp
sbb
das
std
lret
mov
in
or
inc
push
popf
add
cli
push
ret
mov
sub
pop
cmp
gs
mov
xchg
dec
mov
jg
cmpsb
les
mull
addr16
fiaddl
inc
pop
outsb
sbb
jae
jg
andl
insl
loopne
leave
cmpsb
mov
xor
mov
gs
dec
fsubrl
push
and
ret
movsb
add
shlb
or
int3
mov
jb
jp
scas
xchg
repz
loope
arpl
push
cmc
ds
push
or
xor
fcmovnb
adc
push
or
popa
cld
out
outsl
stc
data16
jmp
xchg
movsb
addr16
popf
mov
in
cmp
or
fwait
out
fwait
bound
cli
gs
fwait
and
add
xchg
cs
xor
pushf
shrl
xchg
jmp
jb
lock
or
repnz
pop
lcall
jp
xor
pop
pop
ret
out
mov
sbb
scas
enter
lret
incl
in
fsts
xchg
andl
xor
test
push
dec
shrb
flds
adc
add
xor
xor
inc
xor
test
call
lret
lods
int3
and
inc
sahf
push
inc
mov
in
pop
fstpt
push
sbb
ljmp
mov
addr16
pop
adc
cmc
jo
mov
int
sub
in
movsl
xchg
jbe
pop
sub
mov
mov
sub
aad
dec
fistpll
mov
cmp
xchg
lock
jo
push
shll
in
adc
adc
xchg
inc
addb
pop
imul
inc
arpl
stos
ret
scas
jno
add
or
sub
movsb
or
das
mov
and
xchg
popa
or
add
ret
push
or
loopne
rorl
es
mov
mov
lods
add
and
add
mov
jge
mov
xor
es
pop
data16
jmp
outsb
jno
lock
jle
bnd
iret
into
into
fldlg2
imul
out
jnp
sahf
mov
lods
add
in
std
pusha
inc
mov
xchg
adc
mov
pop
mov
mov
movsl
std
in
icebp
cmpb
test
xchg
add
push
pop
mov
and
or
arpl
fsubs
xchg
or
sub
in
iret
fadd
push
fistpl
cmp
push
inc
ljmp
lods
mov
stc
cwtl
adc
out
inc
cmp
mov
xor
pushf
sub
jmp
mov
fwait
hlt
jne
imul
hlt
cmpsb
dec
decl
push
lahf
in
lock
pop
push
ret
lock
or
pop
loope
fstpl
dec
out
or
and
subb
idivb
cmp
jmp
pop
repnz
cmp
cmp
cmpsb
out
sarb
jmp
std
sub
mov
mov
mov
aas
sti
or
jp
hlt
xchg
sbb
inc
push
mov
pop
mov
lock
adc
fs
sbb
or
dec
pusha
push
xor
cmpsl
pop
ret
mov
push
stos
pop
jne
xchg
push
pushf
out
repnz
mov
sub
push
mov
push
loopne
adc
mov
dec
cli
shrl
lock
hlt
in
clc
out
into
push
sarl
lods
inc
je
leave
sti
adc
and
mov
int3
repz
push
scas
or
mov
mov
test
test
loope
jno
mov
loope
jge
fstpl
fldl
mov
mov
dec
add
bound
dec
cmp
push
inc
fldenv
enter
out
or
add
sbb
repz
sub
mov
push
fmuls
xchg
addr16
mov
dec
fdivrl
lods
rclb
pop
cmc
pop
add
gs
xor
imul
mov
stos
adc
mov
scas
pop
sbb
or
push
ljmp
arpl
sub
scas
in
mov
mov
outsl
pop
mov
sub
es
push
lods
sti
das
paddb
stos
je
push
stc
nop
loop
bound
in
push
xchg
mov
loop
int3
cltd
mov
test
aas
jno
pop
sarl
fisubrs
aas
cmp
xchg
insl
mov
xchg
sub
cmc
les
stos
mov
pop
push
pop
mov
dec
pop
mov
xor
mov
cli
das
ret
mov
dec
loopne
addr16
or
aas
adcb
xor
or
mov
add
pushf
pop
inc
lret
cmpsb
or
cmp
jge
adc
arpl
and
xor
cmp
mov
sbb
push
push
lods
sti
nop
mov
lds
xchg
cld
dec
pop
cwtl
mov
addr16
xchg
fcomps
mov
test
pop
es
sti
push
mov
repz
adc
cwtl
lds
sbb
and
sarb
ljmp
testl
ja
inc
mov
sahf
and
popf
cltd
add
pop
and
mov
cmp
mov
mov
pusha
xchg
add
in
sub
iret
gs
mov
adc
xchg
adc
rcr
fistps
ss
ljmp
xchg
pop
popw
adc
sub
adc
in
out
pop
inc
and
xchg
sub
pop
test
inc
xchg
add
sbb
mov
cmpb
out
and
push
sbb
test
aaa
mov
roll
add
sbb
dec
divb
cmpsl
xlat
faddl
or
mov
outsb
test
loop
jns
and
xor
fs
and
jmp
mov
lret
pushf
test
or
leave
stos
jne
int
into
outsb
push
sub
fucomp
cmp
daa
xchg
lret
inc
arpl
push
push
sub
or
inc
stos
sti
addl
push
cmp
cmp
divl
loope
jmp
sbb
fcoml
add
cmp
mov
pop
mov
or
in
fst
xor
xchg
fwait
out
test
mov
ss
insl
fidivrs
aas
roll
scas
or
xchg
in
aad
in
lret
loopne
add
cmp
mov
jge
jnp
in
stos
lret
aad
mov
stc
cmp
in
xchg
call
xchg
adc
popf
test
daa
mov
xor
movsl
xor
sub
test
mov
and
mov
ja
pop
xor
inc
pop
inc
mov
xchg
out
daa
mov
lods
xlat
scas
dec
add
bound
pop
inc
stc
xchg
lds
fimuls
leave
lds
int
div
std
bound
jmp
jnp
fdiv
in
jge
mov
js
sub
repz
xor
in
rol
adc
inc
cmp
pop
scas
jp
hlt
insb
pop
pop
lcall
mov
stos
testl
popf
dec
aad
outsb
xor
inc
push
pop
scas
sti
sbb
sbb
inc
mov
adc
int3
mov
push
jp
inc
and
cmpl
sub
dec
push
repnz
shufps
cmp
fdivrp
pusha
xchg
rcrb
xchg
fldt
xlat
xchg
test
jmp
mov
xorl
mov
out
icebp
or
aaa
mov
dec
inc
push
pop
nop
lret
shrb
sbb
and
mov
cmp
jmp
mov
sbb
movsl
fiadds
clc
stos
push
push
std
aam
mov
cmp
cmpsl
add
mov
aad
div
mov
or
jns
add
sub
adc
and
sub
ljmp
cmp
pop
repz
aad
js
mov
loopne
jb
sub
push
icebp
insb
sbb
mov
push
cmpsb
scas
cmc
sbb
cmp
jmp
arpl
dec
dec
bound
sahf
dec
bound
fimuls
cltd
pop
es
jo
enter
stos
out
mov
lds
cmp
sub
xchg
shl
mov
arpl
push
push
sbb
mov
pop
daa
xorb
shlb
movsb
hlt
adc
sti
movsb
cmc
mov
je
push
and
je
pop
push
out
inc
mov
inc
mov
mov
pop
mov
mov
mov
push
or
dec
mov
mov
or
xchg
dec
jnp
sub
stc
cmp
fisttpll
pop
mov
push
loope
test
add
jg
out
into
mov
loop
lea
cld
push
lret
xorps
sbb
fstpt
xlat
push
les
xlat
cltd
xor
orl
outsb
jge
shll
negl
and
sbb
push
cmp
mov
test
arpl
mov
rcl
jb
in
add
pop
test
cmp
fwait
outsl
outsl
adc
out
stos
test
mov
in
fstl
pop
out
into
in
lcall
stos
adc
aas
aam
xor
pop
lahf
icebp
pop
movsb
je
sbb
jae
std
mov
les
xchg
lret
leave
and
push
jle
lods
jp
lret
mov
dec
cmp
dec
jmp
pop
xor
ficomps
mov
or
pop
xor
pop
cmp
popf
shlb
adc
nop
cmpsb
scas
mov
movsb
jg
xchg
push
adc
cmpsl
mov
int
mov
cld
add
cwtl
adc
das
ss
and
imulb
push
out
icebp
out
jmp
add
insb
pop
je
lock
mov
test
xchg
cmp
sub
loope
sahf
enter
sub
mov
push
mov
push
popf
pop
xchg
sub
pop
dec
enter
stos
js
inc
inc
mov
fcmovb
scas
lahf
adcl
mov
push
stc
and
aaa
insl
and
add
je
mov
xchg
sub
pusha
adc
sbb
pop
cmp
mov
fcoms
mov
in
push
mov
aas
ljmp
dec
sub
jp
lods
out
addb
imul
loop
fwait
pop
imull
jno
das
dec
or
mov
call
pop
mov
sbbl
and
mov
sub
div
flds
pop
shl
cs
lahf
out
test
pop
pop
mov
cs
sbb
int3
lock
sarl
push
cmp
push
mov
mov
outsb
lods
fisubs
jle
xor
stos
xchg
fsubl
adc
pop
lret
cld
inc
scas
cs
mov
movsb
pop
push
out
outsb
mov
fisubrs
mov
push
bnd
test
inc
mov
lods
adc
adc
push
movsb
icebp
or
jecxz
shrb
push
push
jp
mov
divb
cmpsl
jl
inc
pop
repz
pop
cltd
mov
sub
push
es
lret
dec
sbb
mov
movsl
xchg
fstl
sti
mov
sarl
cltd
js
fcompl
jns
lahf
jle
sahf
es
shl
and
arpl
mov
jecxz
and
sarb
shrl
clc
ds
addr16
daa
pop
sub
mov
out
shr
jae
rcr
in
push
xchg
outsb
jmp
mov
xchg
mov
mov
fimuls
cmpsl
dec
push
pop
popf
out
notl
clc
mov
push
out
mov
cs
std
jnp
jmp
data16
push
xchg
shll
mov
cmp
in
xchg
les
data16
fdivs
sbb
xor
jne
data16
mov
dec
subl
scas
push
pop
data16
push
in
clc
jnp
rcr
mov
repnz
or
pop
out
and
mov
pop
sti
mov
jae
mov
sti
outsl
add
mov
outsl
shl
add
insb
cmp
int3
mov
add
outsb
insb
or
pop
sub
iret
jno
lret
mov
nop
shrb
mov
sub
aaa
and
js
in
ljmp
leave
clc
jl
scas
out
xchg
ds
pop
shl
mov
or
or
mov
cmp
adc
scas
inc
mov
push
jb
into
pop
dec
sub
sub
adc
into
ret
jl
sbb
mov
xor
pop
in
sbb
cld
xlat
sub
pushf
xchg
xchg
xchg
stos
push
pop
fwait
lcall
jbe
xchg
pop
shll
pop
pop
jns
imul
je
push
scas
jmp
xor
inc
in
insl
push
mov
lods
push
rcl
push
cmp
pop
insb
jmp
aaa
es
xchg
ret
movsl
push
fdivrp
stos
sbb
ret
ror
popa
les
aas
rcl
in
xor
push
loop
jp
fimull
movsb
mov
scas
cmpsl
dec
xchg
ss
jae
pushf
fs
jle
mov
pop
or
mov
pusha
sub
ror
mov
pushf
inc
push
sbb
cmp
lret
inc
mov
repnz
cmp
aad
stos
mov
sub
inc
pop
xchg
mov
repz
mov
sar
int
mov
push
imul
aas
out
inc
adc
add
in
sti
xchg
push
ret
mov
out
scas
add
jb
ror
and
enter
inc
imulb
xchg
pop
test
sbbb
xchg
fsubrl
add
pusha
and
jbe
ja
paddusw
outsl
shr
sub
hlt
cmp
jbe
popa
inc
xorl
jle
mov
fldt
mov
adc
fsts
inc
push
decl
jle
mov
inc
mov
or
imul
repz
std
mov
jg
pop
sub
or
lahf
je
sbb
les
and
enter
repnz
jns
cs
je
and
jae
push
mov
imul
pusha
push
xchg
jmp
movsl
sub
loop
mov
enter
cwtl
adc
inc
mov
pop
pop
pop
fiadds
popa
jle
out
mov
inc
stc
jmp
mov
xor
jnp
or
jae
mov
dec
in
inc
insl
int3
mov
jg
xor
push
sti
and
jnp
daa
fucompp
and
mov
lea
add
xchg
loopne
push
inc
cmp
or
sub
mov
inc
popf
enter
loopne
and
pop
mov
cwtl
mov
or
stos
jae
mov
in
int3
cld
jae
xchg
xchg
jg
jecxz
jne
lret
cmp
nop
mov
gs
mov
nop
pusha
andl
or
push
and
outsb
popa
rcr
adc
fnstcw
ret
icebp
and
nop
aas
push
es
divb
insb
push
popf
out
add
cmpsb
aas
dec
dec
xlat
adcl
in
test
xchg
shrb
pushf
pushf
sbb
or
sbb
xorl
int
stos
xchg
mov
cld
nop
rclb
adc
add
push
inc
inc
add
ja
dec
xor
fstpt
dec
dec
push
aas
xchg
and
adc
jl
lods
inc
dec
pop
aas
mov
cmc
xchg
or
push
leave
aas
cmp
rcll
mov
or
jne
mov
cmp
ret
rcrl
jmp
jge
cmp
cltd
insb
roll
xor
ret
pop
cmp
xchg
aas
scas
jae
bound
sbb
fstpt
mov
push
mov
xor
mov
movsl
mov
inc
inc
and
sti
xchg
xchg
imul
pop
mov
push
pop
test
push
imul
pop
cld
xor
rcl
push
mov
lea
in
jge
jmp
jp
fisubrs
push
adc
inc
jno
ss
arpl
cmp
xchg
jle
in
enter
flds
dec
adc
inc
mov
std
xchg
dec
jmp
outsb
je
fsubr
jbe
jp
pxor
sbb
cmp
insb
out
fsubs
mov
push
dec
popf
mov
ds
mov
lss
cmp
mov
or
stos
mov
pop
or
xchg
cmpsl
sub
out
push
pop
or
ss
mov
hlt
xor
adc
aaa
mov
bound
out
mov
into
cmp
xor
sub
sub
imul
arpl
xchg
jmp
and
xchg
icebp
add
adc
sub
jo
cmp
xchg
pop
lods
mov
mov
and
repnz
stos
jge
daa
xor
push
cmp
js
mov
ja
jnp
icebp
sbb
adc
push
movsl
outsb
xchg
or
pusha
pusha
cltd
cmp
mov
es
or
xorb
or
adc
dec
add
add
loopne
mov
in
adc
aad
arpl
xorb
in
sbb
sti
lds
data16
sub
loopne
std
in
sbb
fldenv
shrl
sbb
inc
iret
fstps
mov
inc
xchg
cli
mov
cmp
adc
sbb
ljmp
pop
sub
sbb
sbbb
int3
sbb
sahf
in
cmp
icebp
cmc
dec
and
cli
pop
movl
popa
ret
insl
inc
push
pop
push
cmp
fildl
loop
fdivs
in
imul
mov
test
enter
outsl
bsf
in
int3
int3
push
cld
xchg
mov
jb
cmpsl
shlb
fs
gs
int
fmul
int3
pop
xor
mov
imulb
je
fdivrl
or
inc
jnp
inc
cld
bound
xchg
enter
out
movb
xchg
push
sbb
mov
jb
mov
stos
fistpll
outsl
decl
fbld
sbbb
fwait
jne
lock
mov
mov
xchg
cmp
and
sbb
mov
jne
cltd
bound
loope
push
push
loopne
insb
push
out
cmp
mov
mov
and
pop
add
adc
pop
cmp
or
cltd
repz
ja
gs
ds
into
and
ja
xor
sbb
cmc
cli
jge
mov
xchg
xor
jl
in
sub
sub
add
or
stos
flds
into
pop
add
xlat
mov
mov
xchg
push
mov
lea
lahf
inc
in
stc
mov
sbb
sahf
sahf
push
sub
aad
sub
test
inc
xchg
imul
pusha
hlt
aam
aas
lret
jbe
lret
das
icebp
popa
mov
jge
inc
xchg
and
mov
loope
xor
pop
and
flds
jge
inc
xor
inc
push
cwtl
cwtl
lods
and
mov
negb
pop
fcmovu
push
repnz
pusha
sbb
dec
mov
cmpl
sub
and
repz
sbb
inc
dec
popa
iret
jp
cwtl
mov
shll
dec
leave
or
cmp
push
xchg
fcmovnu
ret
aam
fcoml
loope
sbb
adc
lret
xor
xor
clc
es
fcomps
stos
mov
nop
iret
sbb
lock
loope
lods
mov
xchg
test
repz
ds
imul
jmp
pop
cld
and
les
test
adc
mov
adc
fidivrs
lods
xor
pop
insl
in
adc
mov
cld
add
inc
mov
cmp
repz
cwtl
mov
inc
lret
sbb
xor
repz
cmp
iret
cltd
mov
fwait
jge
push
add
subl
dec
out
push
pusha
mov
inc
cltd
xor
xchg
lods
bound
and
pop
inc
das
push
sbb
lds
jp
aam
shrl
dec
xchg
pop
or
jecxz
pusha
sahf
add
adc
testl
jae
pop
rcrl
les
sbb
dec
mov
pusha
std
or
xchg
mov
pop
xchg
mov
scas
inc
mov
dec
pop
in
cmpb
mov
lock
sbb
sub
out
sbb
mov
push
fbld
std
iret
mov
jns
fcmovu
pop
in
popf
xorb
dec
popf
mov
rcl
xchg
lods
push
dec
mov
dec
cmp
fidivl
jl
push
inc
push
in
pop
aad
jns
xchg
mov
pop
xchg
mov
dec
jno
cmp
inc
xchg
sbb
lret
aaa
push
in
in
ja
js
jno
inc
dec
lods
into
push
mov
fcomi
outsb
popf
clc
and
sbb
adc
lock
xchg
loop
mov
add
sbbb
push
push
int
pop
mov
push
sbb
jae
popa
dec
clc
dec
lret
adc
cmp
push
imul
stos
xchg
das
clc
add
jnp
stc
pop
cmpsb
leave
and
adc
pop
test
ret
nop
xchg
push
xor
dec
pop
pusha
adc
mov
test
repz
stos
sbb
cwtl
test
dec
mov
mov
jge
stos
jg
testb
daa
push
enter
ret
icebp
cli
jl
ror
jae
sarb
pop
repz
mov
outsl
loopne
loope
dec
cwtl
xchg
or
es
lock
jnp
sahf
iret
dec
movb
jp
int3
test
pop
out
cmpsl
xor
lds
xchg
or
cmp
nop
in
push
ret
cmp
sbb
shr
mov
lcall
xchg
fs
repnz
loope
xchg
mov
stos
or
cwtl
cmp
mov
xorl
paddd
out
and
pop
aad
es
imul
xchg
xor
icebp
lods
cwtl
sbb
sbb
repnz
repnz
imul
popf
cmpsb
out
mov
dec
imul
sbb
jae
sbbl
mov
xchg
scas
mov
aaa
jmp
cltd
dec
das
addr16
cmp
std
rcl
sbb
repnz
sbb
pop
mov
adc
mov
mov
mov
xor
lods
pop
push
lcall
mov
jmp
aas
dec
xor
or
mov
lret
add
out
push
out
push
pop
icebp
jb
stos
iret
pop
fwait
dec
jno
imul
or
pushf
mov
dec
int3
jge
adc
jmp
jns
sub
subl
push
jmp
inc
shlb
out
push
rcr
shrb
neg
stc
std
jle
popa
cli
std
pop
ret
pusha
into
rcrb
sbb
mov
fisubl
inc
dec
mov
push
icebp
cmp
sub
mov
cmp
outsl
pop
and
ds
insb
enter
xor
sub
aas
push
inc
push
movsl
push
sbb
xor
jne
and
dec
mov
lock
sub
mov
or
popl
insb
jns
jge
out
outsl
bound
mov
jge
and
sti
mov
pop
cmp
or
pop
xchg
rcll
cltd
xchg
xor
or
add
pushf
add
or
loopne
leave
in
lcall
ret
dec
fsubrl
inc
adc
stc
xchg
clc
push
pop
or
ljmp
cmp
jg
fdivrl
add
push
iret
lods
or
lds
dec
xor
cmp
lods
mov
cmp
push
xor
loop
adc
cmp
and
scas
xchg
in
sub
rolb
sub
hlt
test
pop
pop
dec
mov
sbb
aaa
fbld
gs
inc
or
inc
push
xchg
jo
mov
arpl
int
test
mov
sbb
jp
and
jmp
fstps
gs
dec
fwait
ret
dec
xchg
push
and
lret
push
dec
or
daa
jg
shufps
push
test
mov
push
lcall
insl
push
aas
xchg
subb
push
xlat
dec
inc
mov
and
popa
add
sahf
mov
fwait
jecxz
add
or
cld
into
test
mov
lret
jns
imul
push
jb
push
cmpb
cltd
jge
push
or
xchg
adc
inc
xchg
test
stc
push
push
mov
shl
xorl
dec
subb
sbb
popl
stos
lods
loope
jo
lds
movsl
arpl
out
lods
clc
adc
or
shlb
or
and
in
mov
jae
and
jl
add
xchg
into
movsl
xchg
and
test
adc
pop
and
jno
das
mov
push
addb
data16
pop
adc
rorb
cmpsl
sarl
fidivrs
enter
mov
insl
sub
lods
jecxz
mov
imulb
mov
in
xchg
sub
in
mov
mov
leave
ret
scas
loop
test
xchg
push
xchg
inc
push
ret
out
pop
xor
cli
dec
test
jmp
cs
int3
xchg
inc
xor
dec
fmul
jecxz
lret
imul
adcb
pop
adc
jecxz
pop
dec
and
push
mov
pop
adc
or
loope
lea
call
cmc
inc
jl
jne
xchg
jp
int3
push
xchg
inc
sub
mov
mov
sub
dec
dec
add
inc
push
and
mov
mov
push
mov
fsubp
icebp
fdivrl
and
push
and
lret
cmp
mov
or
into
xor
add
add
jle
shll
andl
fcoml
mov
mov
pop
or
movsl
shrl
dec
xlat
xchg
fs
mov
sbb
sub
mov
rol
daa
ljmp
jo
jp
adc
adc
inc
movsl
dec
xor
repnz
push
pop
pusha
ljmp
jle
loop
dec
mov
inc
mov
jg
sbb
cmc
sarl
add
sub
sahf
xchg
or
adc
adc
bound
ja
jge
inc
lock
lock
xor
aam
lods
sub
pop
jg
xorb
inc
mov
xchg
cmp
xchg
add
inc
rcrl
jne
loopne
mov
xor
les
mov
out
xchg
jo
push
pop
nop
in
jmp
shrb
cld
scas
popa
push
or
pop
inc
pop
xor
sbb
dec
imul
push
push
popl
cltd
stos
idivb
ret
xchg
std
lcall
test
and
iret
mov
adc
repnz
and
hlt
xchg
sub
aaa
sub
sub
add
or
stos
mov
xor
jp
sahf
xor
iret
and
arpl
ss
adc
cmpsb
ret
addr16
dec
mov
jne
jae
adc
xor
mov
repz
lahf
and
pop
lds
mov
sbb
xchg
cwtl
or
hlt
or
push
mov
iret
andb
enter
arpl
es
jo
test
rcl
cld
jle
inc
jns
daa
jmp
adc
or
or
jle
addr16
mov
in
pop
push
pop
hlt
pop
and
test
gs
or
jle
jp
das
les
in
mov
pop
popa
add
inc
jecxz
mov
and
sbb
loope
mov
loope
ret
lahf
cwtl
scas
mov
pop
push
add
sbb
popa
pop
not
fs
insb
mov
adc
stos
dec
xlat
pop
stc
mov
stos
inc
ds
inc
insl
add
test
jno
stc
rorb
outsb
lds
daa
sbb
mov
iret
push
mov
lods
inc
mov
inc
dec
cmp
and
lods
mov
stos
rorb
jge
sub
cmp
adc
cmpsb
ds
aas
stos
movsb
sub
adc
jne
ffree
iret
xchg
jmp
sbb
sub
inc
jnp
pop
cld
xchg
xchg
cmp
pop
lret
jnp
xchg
fstpl
xchg
and
cmc
fnstsw
adc
les
adc
pusha
enter
jae
pop
fdivs
adc
sarl
cmpsl
mov
jle
filds
xor
xchg
pop
popf
or
xchg
pop
adc
adc
jle
sub
xorl
int3
jle
lahf
jo
leave
bound
add
test
and
jecxz
pushf
fsubr
pushl
mov
xor
scas
push
inc
inc
fimuls
inc
pop
xchg
out
sub
jecxz
lock
bound
hlt
cmc
pop
dec
cli
and
enter
loop
cld
or
mov
sbb
jle
out
dec
add
or
push
std
das
sbb
xchg
and
std
xchg
sti
dec
xor
arpl
mov
mov
pop
pop
clc
cmpsl
push
inc
ss
jae
xchg
jge
pop
loopne
ficoml
leave
mov
jnp
jge
arpl
enter
mov
mov
sbbl
or
push
fs
jns
xchg
xor
and
pop
cli
ret
push
lods
icebp
cli
ds
cli
sub
lods
pop
adc
push
mov
inc
insb
jle
sub
add
mov
in
push
andl
inc
mov
push
cltd
push
and
adc
add
ret
and
xor
test
mov
cmp
scas
mov
push
shlb
adc
pop
movsb
push
xchg
cli
dec
sbb
xchg
enter
out
jne
outsl
out
jecxz
sbb
daa
adc
lcall
fcmovnbe
add
inc
cltd
lret
sub
pusha
adc
dec
jns
xchg
in
push
xchg
pop
mov
add
scas
test
xchg
jae
push
push
icebp
cltd
cmpsb
data16
jnp
dec
daa
movsl
rcrb
or
imul
xchg
mov
jl
sub
stos
lahf
adc
int3
push
fcmovnbe
inc
shrl
or
in
jg
dec
mov
pop
ljmp
out
cmpsl
add
jg
mov
test
fsubs
mov
daa
or
sub
jmp
divl
xor
aas
push
negb
dec
jb
dec
push
pop
and
test
mov
fnstsw
pop
sbb
lret
shrl
xchg
int
pop
pop
insl
iret
cmp
add
mov
enter
pop
xor
push
cmpsb
iret
add
out
stos
jno
andb
leave
or
pslld
mov
pop
inc
inc
lods
dec
jg
xchg
outsl
sub
ja
sub
mov
testb
mov
sub
jo
cmpl
divb
lea
cmp
aas
jl
sahf
jns
lods
mov
fucomi
xlat
mov
das
insl
aad
xor
xchg
sbb
or
lret
or
dec
xor
flds
and
jb
icebp
cld
or
lds
fs
add
das
cmc
addr16
mov
mov
arpl
jmp
sub
add
fildll
or
daa
xor
mov
adc
mov
data16
lock
mov
sbb
dec
add
or
jbe
sub
test
xor
loop
pop
push
push
inc
add
icebp
ret
or
or
sti
and
jno
push
push
stos
push
fidivrs
add
subl
shlb
jg
lds
xchg
shll
lcall
cmp
cmpsb
sbb
lahf
insb
out
fldl
mov
faddl
fcoms
cmp
in
sbb
xchg
xor
rolb
ss
scas
jg
ds
jb
lret
sub
sar
scas
scas
sbb
sti
std
and
lds
nop
mov
mov
inc
xchg
divb
outsb
or
and
sub
cmpsb
xchg
ss
hlt
sbbb
and
mov
je
jae
jl
pop
outsb
test
xor
lret
bound
rcll
scas
sub
lods
cwtl
sbb
dec
adc
movsl
dec
imull
jg
add
cmpsb
lods
faddp
in
jb
cmpsl
in
pop
mov
sbb
lret
fimull
xchg
iret
pop
sarb
in
and
lock
dec
push
and
arpl
in
sbb
data16
add
rclb
pop
int
and
dec
push
movsl
sbb
xor
add
cmc
push
aam
das
je
pop
mov
or
mov
sbb
push
add
or
icebp
fidivs
clc
lea
mov
fwait
xchg
fsubrp
daa
mov
xchg
add
dec
adc
popa
std
negl
cmp
test
pop
sub
xchg
js
push
aam
push
ljmp
loope
pop
push
mov
mov
pop
xor
test
in
ret
xor
dec
in
add
dec
cli
pop
inc
shrl
ret
add
sbb
xchg
nop
ss
adc
popf
xchg
nop
stos
out
pop
gs
jge
sti
fldl
cmpsb
imul
inc
ss
fs
fdivrl
rorl
lret
xlat
push
hlt
lods
or
mov
lds
and
inc
dec
mov
sbb
inc
and
cmc
push
mov
lret
movsb
fisttps
xor
xor
test
add
push
jge
into
push
andl
stos
sbb
fxtract
in
jl
or
sub
popa
es
xchg
push
or
pushf
call
adc
adc
jecxz
push
inc
push
lahf
std
stos
cmpb
in
xchg
push
fnstenv
data16
mov
mov
jge
push
push
lock
scas
pop
in
pop
sbb
out
insb
mov
mov
jp
orl
ret
out
shr
or
adc
and
xchg
push
cmp
leave
mov
inc
and
nop
fcoml
lret
dec
jae
int3
add
mov
mov
mov
mov
mov
mov
lods
loopne
in
sub
ljmp
ret
sub
mov
repz
mov
out
jg
pop
repnz
adc
push
mov
bnd
xchg
lret
mov
mov
pusha
sbb
jl
out
xor
and
inc
dec
add
in
movsb
lret
cltd
mov
dec
repz
mov
loopne
push
aaa
lds
into
jp
mov
sbb
mov
mov
jne
add
aad
pusha
insl
mov
and
insl
mov
into
stos
notl
jmp
in
mov
pop
repz
push
fsubs
loopne
xor
shlb
in
imul
and
sbb
sbb
sub
hlt
jg
popa
xchg
mov
adc
pop
inc
cmp
sti
sbb
movsb
push
jl
lret
sbbl
pop
enter
clc
fcoms
cmp
popf
dec
xchg
movb
push
add
cmp
movsl
sub
sbb
mov
xchg
icebp
add
cwtl
mov
dec
sub
pop
mov
add
insl
xlat
push
add
lcall
aad
and
dec
jge
aas
je
popl
ja
nop
xor
sub
jle
pop
jo
call
cmp
and
ficoml
jae
data16
or
jo
jecxz
or
fcoms
cmpsb
adc
cltd
add
fwait
dec
std
sub
jg
dec
test
roll
pushf
insw
sub
fcoml
insb
push
adc
cld
fs
mov
and
pop
and
mov
jb
aam
hlt
pop
jp
adc
mov
and
inc
jns
call
xchg
dec
dec
test
enter
mov
int
gs
fbstp
dec
mov
repz
and
xor
mov
xor
ret
inc
lock
jg
xchg
push
int3
enter
cltd
mov
scas
push
dec
push
xchg
jae
je
stos
push
xor
arpl
test
aaa
dec
or
mov
faddp
shrl
inc
rol
shlb
rcrb
rcrb
sbb
cmp
xchg
in
xor
ja
out
leave
rcrl
dec
dec
sti
in
fstps
jle
aaa
inc
imul
mov
push
test
mov
call
popa
mov
stos
and
cmp
xchg
jno
insl
xor
sbb
repnz
mov
call
mov
dec
add
popf
inc
sbb
xchg
pop
repz
inc
sbb
xor
dec
dec
std
cmp
mov
pushf
mov
test
cmp
xchg
pop
incb
lock
push
add
pop
loop
xchg
push
negb
sbb
dec
bound
rolb
sub
mov
inc
dec
enter
mov
icebp
fwait
mov
gs
mov
adc
call
scas
mov
popf
lahf
in
fldt
add
outsl
lcall
cmp
in
mov
pushl
sub
xchg
cmp
shlb
xor
movhps
jb
ja
push
mov
sub
push
push
xchg
out
sti
dec
adc
add
fisubrl
arpl
in
aam
push
dec
jnp
ds
insl
repnz
sub
sub
mov
sub
insb
test
cmpsb
xor
xchg
rcll
inc
mov
insb
les
xchg
or
daa
xor
push
push
xchg
fiaddl
outsb
hlt
aam
cld
pop
mov
xchg
sbb
xor
sarb
subl
cmp
addl
xchg
adc
imul
cli
arpl
cmpsb
push
inc
fiaddl
out
add
cmpl
aaa
out
xchg
add
cmp
leave
mov
mov
fstl
fwait
mov
sub
mov
int
je
movsb
pop
popf
xchg
adc
pop
aad
sub
pop
sbb
mov
push
sbb
daa
inc
je
sti
sti
test
rclb
jge
lds
ljmp
ss
ret
sub
pop
pop
movsb
jns
out
jge
into
mov
loop
data16
repnz
jl
insl
mov
out
xchg
or
cltd
xor
dec
popl
icebp
out
sahf
lcall
repnz
and
xchg
jle
xor
push
mov
clc
inc
cmp
dec
sub
push
adc
xchg
and
mov
add
adc
sbb
fwait
cmp
lret
aas
test
movsb
ja
and
mov
adc
cmpsl
test
in
sbb
fsubs
lds
call
push
hlt
jge
mov
cmp
cmpsb
in
aam
stos
jbe
inc
pop
xor
fwait
sahf
in
push
mov
sar
loopne
jl
rcr
adc
lds
mov
fsubrl
movsl
out
int3
jecxz
rcrb
and
jmp
das
push
pop
jge
shrb
xchg
les
loope
pop
jp
test
xlat
jno
sub
jecxz
or
mov
stos
loop
pop
nop
mov
js
dec
xlat
icebp
or
dec
ret
and
jbe
sub
adc
jmp
push
in
jne
repz
je
push
jge
xchg
sbb
icebp
pop
cmp
pop
ficoml
sub
nop
rcrl
jp
inc
in
faddp
mov
fsts
jg
or
push
pop
ljmp
ret
adc
mov
insb
scas
in
sbb
push
xchg
adc
aaa
add
mov
imul
repnz
push
sbb
jo
sub
popa
out
loopne
pop
push
test
fstl
sub
and
cltd
xchg
mov
aam
cmp
xchg
insl
push
pop
inc
movsl
gs
push
sbbl
jo
das
mov
mov
adc
or
sbb
mov
mov
movsb
xchg
or
or
dec
cmp
movl
lods
pop
ja
jecxz
into
sub
enter
daa
mov
jo
jge
int
sbb
sbb
stc
jo
jb
or
jb
xchg
mov
push
int3
repz
pushf
das
lcall
movb
pop
aas
push
fwait
mov
inc
cmpsb
outsl
outsb
out
xor
dec
into
out
inc
add
cmc
cmp
lods
fcoms
mov
jp
nop
fsubs
out
aam
lret
push
inc
pop
adc
inc
lods
movsb
pusha
cmp
mov
mov
jl
pop
imul
shlw
mov
ds
sbb
sti
icebp
jge
jecxz
rcrb
loope
xor
lret
jmp
jb
pop
div
fistpl
test
movsb
push
and
inc
popa
pop
test
out
xchg
mov
push
mov
mov
cmc
push
into
push
sub
inc
out
mov
xchg
pop
add
add
adc
pop
sti
stc
lods
sbb
inc
mov
repz
ljmp
mov
sub
adc
stos
loope
jne
cmc
out
pop
jg
or
popf
push
pop
jo
fldenv
gs
mov
out
mov
or
sahf
cmpsl
repnz
jb
cmpsl
lret
popa
jne
and
loopne
js
inc
rcr
pop
int3
mov
into
mov
jmp
xchg
testb
scas
notb
pop
mov
into
sbb
adc
mov
mov
test
sub
clc
dec
pop
sub
dec
pushf
lods
jns
call
lds
aam
mov
arpl
cmpsb
imul
dec
push
and
mov
ss
jge
add
idiv
fldl2t
pop
repnz
add
xchg
lock
je
test
popa
mov
xorps
cmc
mov
loop
imul
add
adc
stos
pop
lds
movl
shld
dec
mov
icebp
push
adc
in
xchg
ret
outsl
jo
insl
lahf
mov
inc
sti
dec
lods
push
jnp
cmp
sub
mov
jl
inc
dec
dec
mov
movl
sarb
push
cld
mov
or
roll
xor
call
jmp
iret
test
enter
xchg
xor
int3
lret
insl
loop
inc
cmp
push
pop
mov
mov
and
ljmp
lds
cs
movsl
sbb
fs
gs
lods
adcb
pop
ficomps
mov
inc
lods
shrl
xchg
xchg
mov
sub
loopne
out
in
cmp
lret
aaa
mov
mov
shl
leave
stos
idivl
xlat
cmp
std
fiadds
nopl
sbb
cmpsl
mov
lcall
ficoms
fldcw
inc
mov
dec
xlat
mov
pop
test
sub
mov
mov
xchg
test
adcl
and
mov
mov
outsl
cld
ret
addr16
cld
mov
mov
mov
roll
sub
fstps
int
xchg
lcall
push
xchg
inc
lods
mov
xchg
mov
fldcw
cld
pop
adc
or
xor
cli
aam
aam
fcompl
js
dec
fisttps
shll
cmpsl
xorl
mov
push
sub
mov
mov
ss
cltd
or
sbb
lret
sbb
cmp
pop
xor
inc
pusha
xchg
mov
jb
xchg
xor
push
pusha
xchg
out
mov
lret
cwtl
and
dec
mov
lahf
jne
test
loopne
ljmp
aad
inc
stos
dec
loopne
sbb
add
xchg
mov
mov
rol
mov
fbstp
sbb
mov
mov
pushf
and
cmp
mov
ror
push
movsb
addr16
pop
jno
scas
sub
jnp
outsb
xchg
xor
pop
mov
pop
jno
adc
pop
pop
jae
push
in
repz
pop
pop
repz
incl
mov
mov
fdivrl
cld
lret
imul
cli
fcos
adc
sub
data16
repnz
mov
mov
fbstp
push
lcall
cmp
dec
sbb
ret
jp
clc
out
cltd
push
push
fs
push
loope
xor
jo,pn
dec
mov
daa
jae
mov
into
jecxz
stos
sub
mov
jl
addl
and
add
push
cmp
xchg
and
clc
rcl
xchg
mov
xchg
mov
sub
pop
out
stos
mov
xchg
push
pop
lahf
jge
movsl
std
xor
sar
test
mov
adcl
cmp
js
xor
lea
shll
aas
dec
sbb
sbb
fucomip
mov
std
mov
hlt
neg
int
or
xchg
ss
ret
add
push
inc
xchg
push
xchg
push
xor
js
xlat
scas
add
adc
sbb
xchg
repnz
inc
mov
inc
enter
and
aas
sub
mov
movsb
ss
add
sub
add
jmp
pushf
in
test
inc
or
sub
jo
dec
xlat
jae
jae
jbe
int3
sub
mov
sbb
jo
dec
lret
fistpll
rorb
jle
or
movsb
in
xor
fstp
test
pop
aad
push
shl
leave
and
test
or
mov
xchg
xor
insl
gs
push
sbb
jg
test
cltd
push
orb
mov
push
pop
cmp
decb
inc
xchg
or
out
adc
cli
repnz
aas
daa
lea
cmp
subb
xor
rorl
mov
pop
aad
imul
push
pop
shlb
push
bound
push
pop
mov
inc
xchg
dec
jne
bound
scas
jmp
xchg
and
jbe
out
mov
lret
pop
std
sbb
jae
imul
iret
sahf
jb
jg
dec
jnp
inc
pop
call
out
xchg
pop
cmp
or
xchg
push
shlb
push
push
aas
mov
xor
in
scas
sub
sub
adc
mov
fldl
movsb
js
in
mov
sbbl
or
ss
ljmp
pop
fxch
movsb
dec
mov
and
lret
xorb
and
mov
outsl
jb
push
add
negb
sti
arpl
rcrb
testb
dec
outsl
and
ret
lds
mov
out
jmp
sbb
fs
pop
or
arpl
pop
push
cmpl
lea
out
jb
sub
int
fcmovb
sbb
jb
push
test
out
les
or
ds
mov
aas
mov
imul
push
add
jno
aad
xchg
ficompl
out
mov
ds
leave
fsubp
daa
loop
jns
lock
imul
insl
aaa
int3
loopne
adc
push
shll
adc
mov
mov
in
in
lods
mov
adc
ret
enter
ja
push
repnz
imul
into
rcr
jbe
mov
adc
daa
sbb
out
add
enter
xchg
push
jmp
clc
icebp
lahf
mov
or
xchg
std
xor
xchg
lods
push
lcall
mov
icebp
mulb
xorb
sbbl
mov
sbb
out
push
ss
sub
or
inc
pop
js
std
test
scas
inc
inc
pop
dec
add
jp
mov
add
das
jbe
aaa
pop
xchg
mov
loope
rorl
adc
aaa
inc
mov
add
in
mov
aam
jmp
les
cmp
lret
mov
mov
jo
icebp
jbe
push
fmul
dec
inc
and
test
xchg
xchg
lock
cmp
push
dec
jnp
xchg
mov
or
push
xchg
es
into
sti
xchg
push
cli
addr16
sbbl
push
into
jmp
insl
cwtl
sbb
push
mov
je
aad
jae
or
lock
pop
jae
jmp
cmp
int
inc
repnz
fidivs
or
js
jo
mov
lcall
dec
sti
add
add
or
mov
jbe
aad
in
dec
inc
mulb
mov
jg
shll
repz
push
sbb
les
cmc
mov
adc
loop
ljmp
test
fdiv
lock
push
je
aad
jae
mov
scas
pop
push
pop
loope
lds
mov
cmp
cli
scas
push
in
xor
lret
stos
insl
lea
enter
add
pop
imul
cwtl
cmp
adc
sub
outsl
popa
cli
mov
xor
or
aad
nop
xorl
pop
jne
adc
inc
stc
jb
xchg
testl
push
adc
inc
sarl
je
dec
and
add
jns
rclb
mov
sbb
in
out
test
mov
xchg
cmpsl
sbb
hlt
xor
fcomi
sub
outsb
jl
mov
dec
inc
inc
cmp
je
xchg
jb
and
in
xor
xchg
mov
scas
test
mov
jbe
mov
outsb
sti
or
mov
adc
test
pop
push
sbb
jl
add
xchg
dec
rclb
leave
lods
movsl
jmp
pop
xor
mov
sbb
or
jecxz
aad
lods
mov
jne
pop
outsl
jno
adc
jne
cmp
daa
xorb
jmp
mov
loope
insb
mov
sbb
pop
das
push
stos
jg
sub
pop
repz
in
test
jl
ja
fcomps
sbb
mov
jle
cmc
sub
sbb
aas
cmp
aam
sti
mov
inc
in
lds
jge
rcll
xchg
mov
daa
xchg
stos
cmp
fildl
pop
xchg
out
push
mov
sbb
inc
lods
cmpsb
sub
daa
sub
mov
jg
out
fwait
mov
mov
stos
aad
dec
rcrl
jo
je
push
shr
jmp
loopne
xlat
test
insb
xor
pop
pushf
mov
sahf
pop
adc
ficoms
inc
movsl
hlt
mov
xor
push
lcall
xchg
pop
dec
add
dec
adc
ret
rorb
inc
hlt
test
xor
test
xorb
imul
push
shll
sbb
repz
inc
in
add
lods
sub
pop
xchg
and
pop
lods
push
and
mov
push
pop
cs
push
rclb
jne
call
stc
pop
pop
cmp
cmpsl
xchg
neg
cmp
and
out
outsb
aam
imul
xchg
int
lahf
in
daa
xor
ja
dec
adc
jmp
push
sarb
popa
popl
cmp
jns
lret
push
xor
shrl
test
and
push
aaa
in
js
popa
jle
or
lahf
and
dec
test
and
pop
jg
aad
push
pop
mov
out
dec
jo
and
popa
call
mov
xchg
adc
jno
jo
addr16
mov
lea
dec
bound
mov
ss
mov
jg
sbb
in
sbb
xlat
loop
shlb
adc
loopne
rolb
js
push
arpl
sbb
and
adc
sub
loop
insb
in
pop
je
xorl
sbbb
sub
mov
test
mov
out
push
fincstp
cmpsl
or
sbb
xchg
repnz
incb
xchg
cmpsl
push
lock
repz
jmp
mov
test
lock
in
jo
inc
adc
inc
int3
and
xchg
sbb
popa
outsb
in
lea
add
popa
xchg
xchg
loopne
inc
inc
sbb
movsb
and
mov
mov
daa
ljmp
and
or
adc
push
lods
cltd
aaa
aad
xor
xchg
dec
cmp
push
push
sar
clc
je
sarb
mov
xor
mov
jo
jbe
mov
stos
add
dec
sbb
pop
div
gs
mov
add
ds
sub
insl
es
loop
pop
lods
lcall
push
repnz
imul
sti
mov
jns
sub
out
rcl
cmp
jbe
mov
xlat
mov
cld
add
mov
mov
push
lods
adc
test
cwtl
fistpll
es
jp
sub
mov
or
cltd
xchg
fbld
imul
add
jno
fcompl
jle
lahf
push
add
icebp
gs
mov
lods
inc
push
add
mov
rcrb
dec
mov
xbegin
mov
xchg
dec
out
add
popa
mov
not
jbe
enter
jo
mov
ficompl
mov
cld
sub
cld
xabort
jg
jbe
mov
add
rclb
xlat
xchg
lahf
ja
test
aam
mov
ljmp
cli
aam
mov
dec
lods
jb
push
js
popf
ss
add
pushf
daa
inc
inc
jbe
hlt
jp
cmp
xor
add
fsts
lret
cmp
pop
sub
icebp
movsb
sbb
push
mov
xchg
sbb
stos
add
je
and
pop
jae
push
fbstp
bound
push
mov
mov
mov
pop
movsb
test
add
xor
dec
inc
mov
push
addr16
dec
testl
movsb
mov
es
loopne
mov
cmp
push
mov
insb
sub
mov
das
cmpsb
inc
je
dec
icebp
shlb
sysexit
testb
sbb
faddl
mov
lods
mov
daa
stos
rcll
fldt
adc
sub
sbb
rcll
popa
mov
and
lahf
adc
and
mov
xchg
inc
sub
bound
ljmp
jmp
bsf
int3
ret
test
ss
lcall
dec
icebp
dec
mov
mov
pop
push
inc
xchg
push
mov
mov
xchg
sub
insb
mov
ja
mov
ds
and
loopne
je
and
lds
lods
in
lret
jp
or
test
dec
mov
imul
out
das
inc
push
pop
xor
cmp
aam
std
ljmp
mov
mov
bound
cld
push
pop
dec
mov
cli
mov
into
icebp
stos
adc
cmp
out
cmp
cmp
imul
loopne
xor
xchg
cmp
inc
pusha
mov
xchg
das
out
incl
push
jmp
outsl
in
or
mov
pop
in
repz
push
cmp
xorl
mov
ja
jb
mov
mov
jns
jl
xchg
popf
movsl
and
adc
lods
mov
in
cmpsb
inc
test
daa
fisubrs
arpl
sub
dec
mov
mov
mov
mov
push
fnstcw
pop
mov
pop
mov
add
push
push
fadd
add
movsl
or
leave
js
cmp
xchg
mov
lds
inc
adc
inc
dec
or
xor
ret
test
dec
xlat
sbb
lret
in
jl
xchg
in
or
popf
pushf
out
mov
inc
push
lods
fimull
lock
jmp
lahf
xchg
fs
js
push
cld
test
push
adc
pop
inc
add
xlat
ret
sbb
add
sub
jg
cmp
jl
pop
pop
fisttpll
pop
xchg
push
popa
in
ret
lret
test
arpl
dec
sub
pop
insl
adcb
ficoml
fstl
out
cmp
imul
xchg
fs
sub
stos
adc
stc
and
adc
mov
xchg
push
mov
js
push
stos
sbb
js
popa
mov
idivl
pop
je
pop
imul
jecxz
into
gs
cmpsl
jecxz
mov
imul
mov
iret
pop
movsb
mov
stos
mov
add
push
or
scas
daa
lcall
mov
rcll
loop
cmpsb
and
mov
inc
rcll
dec
inc
xchg
shrb
mov
jae
sub
cmp
inc
pop
pop
je
push
fdivrp
or
shr
inc
cmpsb
iret
lods
das
mov
lcall
movsl
popa
push
or
movsl
popf
divb
lret
sbb
ds
aas
lahf
xor
sbb
cmpsb
mov
filds
pop
sub
jmp
into
add
mov
and
dec
and
cli
in
mov
pop
mov
call
lods
mov
repnz
pminub
add
ret
cli
push
aam
shrb
cmp
sub
cld
pop
imul
dec
pop
push
out
cmp
ficomps
lcall
inc
adc
sbb
in
push
lods
aaa
push
pop
cmp
outsb
and
mov
sub
cs
sub
xor
xor
sbb
addb
push
mov
cs
push
add
es
adc
sub
and
pminsw
cmp
das
lahf
repz
mov
inc
mov
stc
jmp
sbb
pop
shlw
cwtl
jg
xchg
and
mov
fstpl
dec
jg
jno
push
ljmp
lods
fidivl
dec
pop
lret
popa
mov
mov
mov
lahf
xor
movsb
push
xor
mov
mov
mov
mov
xor
xchg
pop
stos
aaa
lahf
mov
jecxz
data16
cmp
dec
scas
sahf
mov
mov
xchg
jl
adc
or
out
mov
adc
sbb
push
add
fmuls
test
movsb
jge
adc
jp
lahf
sbb
mov
mov
inc
sub
cmp
cli
push
data16
mov
jmp
push
mov
bound
jo
pushf
nop
pop
mov
mov
jb
add
negl
inc
mov
adc
popa
cmp
cli
leave
sub
int3
mov
cli
jle
ja
out
loope
sub
or
sbb
jmp
addr16
lock
dec
dec
pop
jp
fsubs
aas
scas
dec
stos
jmp
imul
out
xchg
mov
icebp
ljmp
xor
mov
lock
cmp
jmp
or
int
cmp
add
pop
out
movsl
mov
mov
gs
inc
fdivr
push
hlt
pop
fnstcw
fsubl
lret
je
ret
ret
inc
jecxz
popa
sub
adc
mov
xorb
adc
lcall
fistl
lret
jp
fs
call
pop
or
icebp
mov
orb
dec
mov
scas
sti
push
mov
add
mov
jmp
jbe
jge
or
sbb
cwtl
js
pushf
dec
mov
adc
stc
jo
mov
pop
out
or
ret
movsbl
or
cmp
mov
loop
jbe
push
fs
leave
jge
inc
push
xchg
mov
cbtw
sub
or
test
hlt
jo
lahf
mov
push
popa
repnz
pop
inc
xchg
sahf
xchg
mov
mov
repnz
bound
cmp
mov
xor
jne
add
stos
and
adc
push
pushf
inc
adc
les
or
call
xchg
push
repz
jns
adc
test
stc
xorl
xchg
rcrb
sub
and
add
pop
icebp
addr16
leave
sbb
repnz
scas
outsb
ffree
pminub
push
xor
int
leave
mov
xchg
mov
push
stos
dec
sub
into
sub
push
loope
sbb
dec
push
or
or
out
xchg
dec
clc
jne
je
mov
dec
dec
stc
xchg
cli
pop
loopne
jmp
fst
xchg
or
aam
pop
push
cmp
pop
xchg
ja
out
inc
repz
divb
insb
fnstcw
pop
imull
lock
pop
outsl
clc
adc
bound
imull
sarl
ss
pop
scas
xor
cmp
dec
pop
outsb
push
push
add
insb
enter
loop
mov
loopne
outsl
jns
rcl
dec
out
jle
int3
sub
fldt
fs
testl
movsl
decl
inc
decb
dec
andb
or
xor
cmp
imul
movsb
cltd
ja
repz
lret
das
in
inc
movsl
int3
call
push
mov
js
stc
fldenv
es
repz
arpl
and
push
lods
add
mov
xor
mov
out
fsubp
fcmovu
pop
mov
out
mov
fst
jb
je
out
jnp
jge
loopne
pop
mov
push
repz
in
clc
cmp
in
jg
ds
push
push
inc
mov
inc
scas
sub
in
loope
pop
mov
lods
into
pop
mov
xchg
out
stos
mov
jno
sarb
fidivs
mov
aas
push
xchg
jmp
out
jg
fwait
xchg
mov
test
mov
notl
push
mov
imulb
decb
jg
shrl
iret
idivl
pop
mov
int
out
stos
sub
inc
loope
mov
xor
jl
xchg
popf
icebp
xor
dec
ljmp
clc
ja
int
out
addb
xor
aad
ffree
mov
repz
mov
movsb
adcb
xor
pop
negl
pushf
jmp
insb
repz
popf
or
arpl
sbb
mov
ja
scas
lods
mov
js
push
and
cld
xchg
xchg
pop
mov
enter
leave
jnp
test
imul
push
jg
and
push
ss
push
push
inc
lods
add
mov
insb
popf
fs
shlb
dec
inc
pop
add
adc
jb
lods
icebp
out
xor
jmp
inc
add
test
mov
push
mov
dec
fidivrl
sbb
cmp
sbb
testb
jbe
inc
aam
push
call
fldl
add
xorl
ljmp
lds
rclb
fwait
adc
mov
pop
xor
scas
pop
push
inc
push
out
jl
cmp
fmuls
jbe
ret
pop
outsl
loopne
sub
daa
outsl
mov
push
cmpsb
mov
mov
push
jbe
pop
test
cmpsb
pop
sub
bound
enter
movsl
xor
bound
fs
loope
sahf
cmc
or
push
iret
repz
dec
ficoml
in
pop
std
bound
rcr
cmp
inc
jmp
out
adc
or
push
jb
push
push
jge
cmc
cmpsb
aam
adc
dec
jnp
cwtl
repnz
stc
lea
dec
dec
push
dec
cmp
js
jg
lods
inc
xor
cli
pop
mov
outsb
sarb
shll
sbb
adc
mov
loop
mov
std
jge
gs
loopne
lock
mov
in
dec
adc
les
mov
movl
call
jge
movsb
enter
lods
sbb
fs
jns
and
push
adc
scas
ljmp
hlt
sbb
and
pop
jns
js
and
repz
aas
mov
adc
jg
xchg
clc
popf
xchg
and
lods
and
in
fidivl
inc
jns
rolb
dec
inc
sub
pop
pop
imul
gs
in
or
mov
or
std
cltd
mov
bound
icebp
sub
mov
mov
push
in
into
add
ljmp
and
cmp
pusha
sub
mov
cs
mov
dec
inc
mov
pop
adc
xchg
sarb
cwtl
clc
lret
inc
cmc
ds
pop
sub
jbe,pn
inc
imul
sarl
pandn
mov
sub
jbe
out
das
pop
pop
out
daa
mov
mov
and
jmp
xchg
shr
outsl
push
pushf
xchg
ror
out
push
ljmp
add
jo,pn
out
ret
jne
mov
mov
stos
rcrl
fs
inc
scas
movsb
dec
mov
out
hlt
aad
inc
inc
mov
rcrb
mov
xchg
mov
adc
jge
aas
sbb
scas
fidivrl
pop
pop
in
push
mov
adc
mov
pusha
sbbl
xchg
pop
in
or
push
aas
fsubl
push
dec
sbb
or
mov
gs
sub
sbb
jno
push
cmpsb
rcll
fdivrs
imul
dec
xchg
mov
in
xchg
int
sbbl
xchg
pushf
jecxz
xchg
adc
daa
dec
jne
push
icebp
inc
je
test
jne
test
and
mov
test
pop
scas
int
aad
adc
enter
xlat
jl
shlb
and
sub
fidivs
in
popa
sbbl
inc
mov
call
pushf
lods
add
jl
stos
xchg
into
mov
jno
add
jecxz
lock
std
loop
mov
jmp
sbb
lods
jecxz
cmp
sti
mov
out
push
mov
xor
out
rorb
movl
fwait
mov
ror
jb
pop
inc
cwtl
mov
xor
outsl
ror
inc
mov
sbb
and
sub
iret
sub
inc
bnd
and
not
in
and
cmp
cmc
das
and
mov
jne
call
jnp
sub
ss
pop
insl
out
int3
jp
push
pop
jne
into
jnp
dec
add
add
add
cmp
pop
sbb
leave
jp
ds
aaa
les
mov
jno
push
lods
sbb
outsl
std
int3
jne
addr16
inc
adcl
and
sti
das
sti
xor
cs
jo
cld
add
cmp
shl
int3
jecxz
pop
or
or
mov
lock
mov
pop
jle
cltd
fwait
push
xchg
std
xchg
stos
mov
mov
jb
pop
addr16
adc
push
and
sahf
flds
fcoms
pop
xchg
jl
push
and
sub
clc
push
je
xchg
cmc
mov
js
mov
add
rcrl
push
pusha
sar
daa
push
insb
mov
add
mov
mov
add
mov
jmp
insb
rcl
int3
lahf
int
int
lret
push
stos
fdivrs
jg
jecxz
cld
scas
test
mov
lret
jge
in
insb
test
cmp
lcall
jnp
test
push
xor
inc
mov
pop
int
je
lahf
cmp
lcall
and
add
sahf
jg
in
pop
sar
and
addr16
mov
leave
pop
add
fs
ss
mov
pop
imul
mov
repz
push
scas
cld
in
mov
jle
sbb
jo
stos
mov
mov
adc
imul
in
sbb
mov
mov
push
push
push
les
in
andl
mov
inc
jge
mov
cmpsl
rorl
jle
sub
inc
decl
in
cwtl
push
sbb
cmp
sub
jns
xchg
adc
pusha
sbb
mov
aad
xchg
fwait
add
scas
pop
popa
push
sbbb
cli
test
cwtl
data16
sub
popa
jbe
mov
lock
inc
mov
xchg
sahf
push
jo
call
adc
cmp
adc
jns
inc
push
addb
or
popa
and
pusha
cld
xchg
test
dec
and
push
int3
jmp
dec
and
shll
mov
cmpsb
fldcw
adc
movsl
cmpsl
xor
adcl
mov
in
test
and
mov
repnz
lret
add
dec
inc
fwait
mov
lods
aam
cmp
pop
sbb
xchg
jg
add
sub
xor
xor
imul
lret
xchg
nop
es
out
cld
loope
pop
xor
sbb
sub
js
xor
mov
inc
sbb
in
or
jecxz,pn
out
cmpsb
insl
adc
inc
sub
lret
cmp
jno
fwait
dec
test
and
xchg
stos
pop
dec
mov
inc
and
iret
pop
sub
jmp
and
dec
mov
mov
imul
add
mov
inc
cmpsb
xchg
xchg
lret
in
push
popf
inc
mov
in
stos
mov
cltd
test
mov
mov
popf
xor
dec
test
imul
adc
mov
shrb
cltd
pop
insl
cmp
mov
adc
shl
pop
jb
stos
xchg
je
rorb
dec
sbbb
mov
pop
mov
imul
add
pusha
jo
sub
repz
fdivrs
mov
ret
mov
pop
inc
sub
jecxz
xor
push
pop
jne
mov
mov
jbe
jecxz
push
es
fiadds
mov
xlat
xchg
pusha
push
push
push
out
sbb
and
adc
xchg
pop
cmpsb
rdmsr
jg
jge
push
jns
mov
pop
fcmovbe
test
and
repnz
enter
jmp
or
jecxz
xchg
repnz
push
test
gs
mov
sub
fstpt
pop
sbb
sub
push
out
mov
repz
xchg
ret
jge
adc
pop
popf
pop
mov
mov
test
repnz
jge
or
les
mov
cmpl
icebp
inc
and
int
popf
outsb
mov
mov
push
mov
jns
stc
idiv
mov
incb
inc
stc
rcl
mov
xor
jle
fwait
xor
or
cld
cmp
out
js
call
stos
adc
popf
ret
leave
outsb
out
adc
adc
push
adc
out
sar
sub
cmpb
xor
sahf
rcrb
cmp
test
test
aas
sbb
mov
inc
sub
stos
pop
test
adc
jecxz
movsb
pop
dec
push
les
or
inc
mov
in
and
pop
or
mov
adc
push
test
sbb
jne
or
xor
jge
cmp
xchg
es
arpl
shr
movsl
jb
pop
out
cmpsl
xchg
jo
mov
add
pop
out
mov
pop
pop
clc
push
scas
inc
sarb
adc
shrl
scas
jo
imul
dec
or
mov
xor
dec
or
test
mov
cmpsb
jbe
pop
xchg
in
or
dec
shrl
mov
ror
mov
pop
pop
mov
faddl
pusha
xor
cmpsl
xchg
icebp
or
lock
cmp
into
mov
sub
int
movsb
adc
sahf
push
sub
jae
out
xchg
mov
movsl
jbe
icebp
xchg
sbb
and
jno
ds
sub
in
test
cmpsl
inc
pop
pusha
xlat
sub
sbb
mov
lret
je
repz
mov
mov
xlat
jmp
push
lahf
xlat
test
push
add
cltd
ljmp
es
pop
iret
mov
mov
movsb
push
or
andl
mov
xor
cmpsl
push
stos
push
adc
lock
shll
inc
jo
fadd
lock
xchg
inc
push
jnp
pop
sub
sub
cwtl
push
shrb
mov
movsb
or
cvtps2pi
or
mov
inc
fcomps
push
aad
loopne
test
adc
dec
pop
cs
pop
jo
fcompl
pop
push
in
mov
xorb
and
push
inc
fwait
inc
sbb
or
mov
jno
jb
lds
fidivrl
imul
pop
cmp
arpl
sbb
pop
xor
and
lods
bound
mov
cmp
inc
shll
out
sbb
lea
sbb
push
jne
push
push
enter
sti
pop
fmuls
push
and
cmp
scas
sbb
ficompl
push
xchg
and
xor
mov
cmc
fdivrl
std
outsl
dec
and
ficomps
jl
movsb
adc
add
fwait
sbb
out
mov
out
adc
in
adc
loop
out
rcrb
gs
fstps
aas
sbbl
dec
cmp
lcall
pop
stc
sbb
mov
into
push
add
jo
push
fs
mov
imul
and
in
insl
jne
lcall
and
cmp
in
sbb
xchg
pop
or
xchg
sub
test
les
mov
arpl
mov
nop
dec
data16
pusha
out
mov
dec
jge
pop
adc
clc
outsl
daa
loopne
pop
shll
adc
add
insb
and
jae
xchg
inc
jno
jns
pop
test
fistpl
mov
jno
xchg
jae
shrl
xor
ret
subl
add
adc
pop
inc
sub
inc
lock
mov
ret
test
lods
sub
cmp
inc
pushf
pop
adc
sbb
sub
das
cmp
in
pop
inc
outsb
movq
xlat
mov
je
mov
mov
jl
jnp
lods
mov
cmp
bound
xchg
sub
fsubl
xchg
nop
sti
out
and
push
push
aaa
adc
sub
mov
mov
mov
and
pop
cmp
gs
mov
dec
push
cmovg
mov
or
dec
popa
test
dec
aas
stos
cwtl
imul
xchg
ret
or
cmpsb
jl
mov
popf
push
fstl
or
push
xchg
push
inc
bound
es
es
push
test
orb
gs
clc
jp
mov
mov
mov
je
push
sub
test
out
fimull
andb
mov
inc
mov
cld
pop
sub
jnp
mov
dec
rolb
jnp
shrl
repz
mov
and
sub
cmp
icebp
lds
stc
jb
lods
out
in
les
lock
push
sub
bound
loop
inc
push
insb
and
mov
ror
repnz
mov
or
inc
xorl
test
cmc
nop
clc
fiadds
les
das
pushl
add
xor
xor
push
push
or
jno
testl
lds
cmpsb
enter
test
ja
and
movsb
pusha
dec
and
mov
repnz
jp
mov
push
jno
inc
out
aam
loop
lea
into
test
inc
pop
in
mov
mov
adc
jl
sub
insb
sbb
inc
neg
out
inc
enter
and
faddl
jne
dec
push
dec
mov
out
in
push
pop
mov
pop
leave
jmp
in
push
ss
inc
jp
xor
int
jp
pushf
push
cmp
pop
sub
jge
jle
popa
scas
sub
dec
fmul
sahf
js
xor
xor
rclb
into
lds
pop
cmp
pop
je
fsubl
sub
sub
popa
cmpl
cmp
pop
xorl
stos
mov
mov
pushl
pop
loop
fldcw
gs
and
dec
pop
xor
je
fwait
dec
aaa
aad
int3
push
xor
inc
add
and
and
add
cmp
mov
mov
adc
insl
mov
rorl
lods
stos
dec
int
lcall
sub
ret
into
movl
arpl
xchg
and
mov
faddp
scas
pop
sbb
jg
adc
lods
insl
mov
xchg
cltd
xchg
add
loope
mov
mov
cmp
lret
mov
or
mov
mov
int
xchg
pop
lea
fisubs
ret
stos
push
sbb
fs
sbb
mov
pushl
or
lods
mov
mov
push
cmpsb
aas
push
mov
stos
ret
adc
mov
mov
adc
mov
or
mov
fs
mov
and
mov
and
jp
push
fwait
int3
pop
pop
pop
jno
aaa
pop
pop
scas
or
xlat
je
cmp
adc
movsl
dec
jae
cli
mov
pop
mov
jb
arpl
shl
or
stos
mov
jge
jo
and
les
lods
mov
lods
jmp
pop
adc
movsb
adc
fstl
jnp
sbb
loop
out
xchg
mov
cmp
mov
cmp
stos
inc
int
xor
and
outsb
les
repz
imull
mov
inc
pop
mov
and
mov
inc
loop
in
jge
nop
nop
dec
cwtl
jnp
inc
int3
nop
jne
or
pop
and
and
and
mov
inc
sub
ss
mov
inc
xor
loope
mov
cltd
pushf
pop
add
and
into
fnstsw
add
inc
jl
in
pushl
je
xchg
jne
mov
push
add
dec
add
jae
fwait
jb
xor
fimuls
mov
jae
add
pusha
or
push
mov
or
add
pop
jbe
push
mov
xchg
push
pop
inc
xor
mov
pusha
jns
xor
or
sub
pop
sbb
mov
mov
mov
xor
jne
inc
pop
popa
xor
jecxz
jbe
aaa
leave
leave
aad
cs
pushf
jle
sub
or
pop
cmp
inc
fs
mov
xor
gs
dec
or
xchg
pushfw
push
fcmovb
iret
divl
jle
and
adc
into
inc
pop
test
cld
pop
push
inc
repnz
in
es
mov
fwait
in
shrb
ljmp
cmpsb
add
push
loope
je
mov
jb
mov
fnsetpm(287
fdivrl
inc
pop
lcall
aas
pop
gs
sub
sti
xchg
cwtl
pop
in
sub
sti
daa
mov
outsb
xchg
inc
push
push
pop
cmpsb
or
testb
popf
scas
insb
out
mov
xor
fbld
scas
lods
leave
cmp
fdivrs
jecxz
lret
lret
jl
shlb
je
xchg
sbb
dec
push
test
mov
out
clc
iret
icebp
sub
mov
xor
mov
jg
mov
xchg
lock
adc
lret
inc
push
xor
neg
adc
sub
mov
dec
sub
sub
aaa
popa
add
popf
addr16
xchg
rcr
jne
test
jge
cmp
xchg
inc
repz
jnp
addr16
pop
push
leave
add
push
cmpsl
jl
pop
mov
aas
in
aad
gs
pop
sbb
lods
or
sti
sub
bound
in
fdivrs
fsubs
scas
es
imul
pop
sub
and
jno
sub
pop
lea
sub
js
ret
insl
or
packssdw
je
aaa
lds
xchg
sti
stos
mov
cs
jbe
xchg
out
inc
cmp
aaa
test
adc
addr16
and
shrb
inc
inc
or
fidivrs
mov
ficoms
pusha
mov
xlat
outsb
lods
insb
xor
lcall
push
push
lock
insl
push
push
roll
shl
jne
mov
lods
aas
sub
cmp
mov
push
cmp
fwait
pop
cmc
sbb
pop
xorb
mov
ds
scas
gs
or
je
lret
pop
push
jmp
dec
sbb
insl
es
jmp
aas
sbb
ljmp
cmc
insl
jg
pop
cmp
sub
inc
jno
mov
lds
data16
ljmp
pop
rclb
adc
dec
xchg
cmp
cs
add
std
scas
lcall
lds
add
cld
xchg
imull
lods
notb
es
push
or
ljmp
dec
loopne
fistps
pop
sub
xchg
jecxz
push
incl
fs
lret
fnstsw
fadds
test
sub
icebp
loope
rol
push
ds
pusha
iret
test
mov
loop
ret
lods
cld
mov
mov
add
inc
jbe
cmpsb
dec
dec
loope
popf
movsb
cli
mov
fiaddl
imul
sub
mov
fists
subb
mov
or
push
aam
xchg
pop
or
nop
mov
out
ret
daa
xchg
in
sbb
mov
lret
cmp
xchg
dec
sahf
xchg
jne
js
aaa
xor
sbb
pop
jns
das
movsb
fstpl
push
movsl
add
xor
cmp
cwtl
jge
cmp
into
sub
lea
movsb
mov
lcall
out
test
pop
lcall
push
sbb
out
inc
add
arpl
ficoms
ret
cli
js
fs
add
or
xor
cmpsb
sbb
test
pop
mov
mov
push
std
divb
out
clc
bound
xchg
pop
shl
rclb
shl
mov
lea
jbe
sbb
push
fistps
dec
mov
hlt
mov
cmc
jbe
testl
sbb
js
xchg
pushf
imul
add
and
push
mov
pop
add
xchg
or
inc
movl
jle
lods
ja
push
js
arpl
cmp
cwtl
js
xchg
fdivs
stos
adc
sub
imul
push
jae
andl
data16
lods
mov
icebp
mov
jb
fstpl
fiadds
cli
inc
mov
not
fisubs
aaa
adc
jb
or
jle
cltd
mov
add
add
push
mov
xchg
pop
adcb
mov
js
jge
iret
int
fimuls
in
dec
fstl
sahf
or
arpl
mov
cwtl
jl
call
push
ljmp
push
push
mov
sbb
aaa
loope
les
mov
mov
mov
jmp
adc
xor
fdivrl
rclb
inc
cmpsl
dec
dec
enter
mov
mov
add
push
loop
pop
in
xor
xchg
dec
and
jge
push
mov
popa
leave
icebp
daa
loope
sub
iret
fisttpl
rcrl
inc
sub
pusha
cltd
push
stos
cmpsb
mov
fwait
sbb
mov
xchg
cwtl
push
rol
mov
jno
movsl
add
imul
jo
push
sti
scas
scas
inc
lahf
ficoml
ds
fs
mov
jge
icebp
add
mov
das
xchg
mov
dec
jl
int
cmc
inc
jmp
mov
jle
in
push
and
int
jecxz
pop
loope
mov
pushf
xchg
pop
mov
mov
push
push
push
in
pop
adc
pop
in
sbb
cld
ljmp
ret
or
xor
stos
sti
adc
outsl
xchg
icebp
ror
mov
sbb
pop
lret
pop
data16
lods
mov
mov
mov
out
scas
aas
mov
loopne
mov
scas
mov
xchg
xchg
gs
sub
or
lret
mov
clc
push
push
dec
test
fisubs
mov
xchg
push
cli
mov
gs
xor
stos
pop
dec
push
mov
dec
cmp
push
lea
inc
cmp
iret
dec
mov
clc
mov
stos
pusha
gs
mov
test
xor
lcall
cltd
push
aam
lods
xchg
pusha
push
subl
xor
mov
aam
mov
js
jmp
mov
shll
and
add
fisttpll
enter
jno
out
lock
hlt
add
scas
std
push
loop
aas
sbb
mov
int
jne
mov
movsb
push
test
test
call
cwtl
jne
sbb
lret
push
divb
repnz
imul
call
fistpll
mov
stos
cs
sub
pushf
shll
rol
push
and
adcb
and
stos
fiaddl
cmp
inc
inc
insb
xor
pusha
push
sbb
lods
es
mov
stos
sub
in
fadds
adc
xchg
xor
iret
mov
inc
jne
insb
gs
lahf
jl
enter
push
mov
xchg
movsl
cli
xchg
rcpps
aad
jmp
jne
or
pop
mov
cmp
in
and
mov
ficompl
cld
dec
mov
cmpsb
adc
ret
outsl
add
addr16
cltd
sbb
push
js
jge
loop
mov
fbld
xchg
lahf
pop
jge
sbb
adc
mov
mov
jne
int
mov
scas
push
add
push
dec
ljmp
dec
test
xor
adc
cltd
mov
push
add
sub
push
add
dec
cmpsb
xor
add
cltd
stc
lret
sub
popa
lret
pop
pushl
jnp
rcll
repz
cmp
mov
jne
inc
out
push
add
mov
aas
mov
add
sbb
enter
lods
pop
pop
scas
xchg
ror
push
out
lea
push
sbb
sti
mov
rolb
gs
pop
mov
mov
cli
sbb
push
push
out
aad
push
lahf
stc
sub
mov
mov
adcl
incl
mov
jle
dec
lock
mov
outsb
sahf
cli
adc
test
loop
pusha
adc
push
icebp
movsl
inc
ret
mov
mov
xorl
cmp
or
and
and
shrb
inc
mov
dec
push
adc
adc
sbb
mov
jb
xchg
xchg
or
hlt
xor
sbb
test
mov
dec
inc
inc
shll
or
or
xorb
jae
jnp
in
xor
in
ja
add
out
scas
sti
pop
add
shlb
mov
arpl
shll
mov
fs
pop
xchg
add
xchg
adc
sub
xor
dec
addr16
and
cmpsb
sahf
or
or
lea
sub
loop
out
fdivrl
or
xor
out
pop
sbb
xchg
or
mov
testb
push
jnp
cmp
xlat
out
jb
in
lds
or
and
add
aaa
mov
dec
add
pop
ds
pushl
enter
add
mov
aas
push
lret
sub
add
xor
fisubl
mov
loopne
mov
adc
dec
popa
pop
test
pop
mov
cs
cld
or
xchg
aam
pop
push
pop
sub
jp
and
das
dec
cs
and
cmp
cmp
arpl
mov
daa
pop
cmpl
or
pushf
mov
jmp
mov
inc
jb
test
xchg
aam
sub
scas
cmp
pop
cmp
pusha
xchg
andl
inc
mov
popf
mov
outsl
jnp
aad
fisttpll
pop
mov
sub
je
je
dec
pop
sbb
inc
lock
mov
fidivl
xchg
or
roll
inc
addl
inc
addl
mov
aas
jecxz
dec
cmp
cltd
xchg
push
push
sar
mov
mov
mov
les
and
add
adc
pushf
sbb
popa
xchg
and
cmpsl
jle
mov
outsb
gs
jp
stc
xchg
xchg
xlat
test
call
inc
dec
addl
lret
dec
loope
data16
sub
ret
pop
rorl
or
lds
into
xchg
xchg
push
sub
ret
and
std
jp
adc
sti
xchg
mov
xchg
mov
pop
mov
shl
cli
xor
inc
es
mov
push
inc
das
iret
lods
test
fcomi
repnz
mov
push
sti
mov
aad
push
repz
dec
xchg
xchg
mov
fstl
scas
dec
and
bound
in
iret
and
cmp
xor
inc
ds
pop
test
inc
enter
arpl
sub
cli
xchg
mov
ljmp
mov
or
fisubl
sub
mov
jne
jmp
pusha
in
ja
iret
rolb
inc
jl
pop
scas
push
sbb
inc
int
mov
inc
xor
lcall
je
and
sahf
loopne
jno
fsts
lret
pusha
je
andb
fwait
or
mov
lds
jg
mov
push
aad
faddl
test
hlt
push
or
loope
adc
lock
clc
mov
fistl
xchg
pop
fcmove
xor
adc
loop
iret
or
sbb
dec
mov
xor
xor
imul
outsl
lods
jns
mov
dec
loope
lea
jmp
enter
and
dec
and
push
xchg
and
pop
xchg
mov
lods
sbb
sbb
pop
jns
frstor
or
fcoml
mov
or
mov
fdivs
and
jo
and
or
rcl
cmc
inc
jo
sbb
outsl
lds
jmp
inc
xchg
fdivs
mov
jmp
mov
test
aam
loope
pop
daa
cltd
mov
divb
aam
push
imul
scas
cmp
loopne
test
jbe
in
xchg
cmpsl
add
stos
out
loope
fbstp
dec
out
ret
aas
jg
sahf
ret
sarb
repnz
psrlq
insb
xor
jge
xchg
popa
sti
stos
je
ljmp
leave
lret
repnz
sub
in
pop
push
fstpt
cmp
lock
pop
xchg
xor
std
test
dec
ret
push
and
push
call
push
cmp
out
sbb
sub
or
lds
adc
iret
pop
les
ljmp
aaa
and
nop
cmp
ret
icebp
inc
jg
int
inc
insb
repz
mov
ja
sub
mov
xchg
cmp
inc
shl
sbb
mov
pop
test
andb
out
xchg
mov
test
imul
mov
mov
mov
adc
pop
dec
jmp
lret
pop
xchg
xor
mov
adc
adc
cld
addr16
sub
push
icebp
fisttpll
hlt
xor
xor
adc
cld
xlat
gs
lret
daa
push
xor
mov
sahf
scas
mov
mov
jbe
mov
fcoms
cmp
add
stc
jl
repnz
jne
and
mov
aam
jo
vaddpd
fistpll
xor
popa
iret
push
push
lret
sarb
and
pop
std
pop
stc
pop
pop
mov
pop
sti
or
or
sub
sub
in
mov
mov
jecxz
xor
sbb
jle
stc
mov
mov
cltd
push
ss
push
lahf
test
jge
negl
adc
jne
xor
sbb
fldl2t
mov
xchg
pop
shl
imul
pop
in
push
rorb
add
inc
add
sub
mov
jo
xor
mov
fbstp
jno
ljmp
and
xchg
add
test
cld
std
sahf
ss
pop
bound
inc
call
xlat
mov
aaa
cmp
rcrl
mov
or
mov
imul
outsl
xor
adcl
mov
jmp
ret
shl
scas
push
mov
adc
je
test
or
sub
dec
lods
cmp
mov
mov
pop
test
or
xor
inc
mov
dec
fwait
inc
dec
scas
jecxz
pop
in
xchg
in
mov
adc
loop
loope
push
dec
loope
mov
and
fimull
and
jmp
mov
test
cltd
shll
int3
imul
mov
jbe
mov
xchg
mov
in
sub
addr16
test
push
sbbl
fdivs
insb
fs
xor
movsb
movsl
jne
les
pop
loope
mov
dec
js
imul
dec
and
jge
stos
mov
out
lods
mov
push
shl
cmp
adcb
adc
shrb
and
pop
inc
mov
bound
xchg
in
pop
mov
jnp
in
mov
push
mov
push
push
lahf
sub
pop
fwait
xchg
loope
loopw
dec
stc
inc
or
rcrl
push
and
decb
xchg
mov
xor
xor
jecxz
fwait
jno
ficoms
fiaddl
rclb
pop
pop
outsb
ja
and
sub
into
jge
lahf
test
xchg
rcll
pop
dec
mov
outsb
test
inc
js
in
cmc
dec
jnp
or
fs
lahf
inc
aam
and
inc
jecxz
ja
pop
popa
mov
das
inc
call
sub
mov
outsb
mov
mov
stc
ljmp
leave
lret
sub
dec
xchg
lahf
jecxz
jle
jno
jl
jmp
call
xor
pusha
mov
jne
repnz
leave
cltd
into
xchg
fists
or
sahf
fwait
mov
cmp
jnp
jae
jno
insb
mov
push
fldl
mov
insb
push
retw
and
stos
mov
out
aam
nop
fisttpl
push
jmp
repnz
jae
mov
daa
lret
aad
pop
sub
sti
inc
in
dec
mov
xor
cltd
sti
inc
test
mov
push
and
shl
std
enter
mov
fwait
push
scas
in
cmp
ljmp
movsl
aam
shll
je
push
sub
cwtl
add
dec
insl
mov
cwtl
popw
fs
icebp
cmc
adcl
test
jle
adc
fldt
inc
daa
int3
sbb
and
hlt
pop
pushf
jno
test
mov
cmp
dec
cmc
popa
js
mov
mov
in
or
int3
xlat
outsb
aas
lods
cli
out
mov
xchg
mov
mov
cli
add
cmp
movsl
int
cli
or
jb
sbb
sbb
mov
jg
lods
mov
lock
test
das
ljmp
test
mov
cwtl
or
out
in
out
pop
pushf
scas
insb
adc
popf
adc
into
mov
add
lcall
push
mov
xor
leave
xor
mov
xchg
pop
or
repnz
sbb
pushf
sar
cmc
mov
and
cmp
mov
adc
pop
into
push
out
jo
ficomps
jb
mov
cmp
ljmp
dec
insb
xor
dec
movsl
in
xchg
jp
repnz
iret
pop
or
mov
lahf
das
shrb
xchg
mov
lahf
sub
das
pop
inc
cmp
nop
jne
push
lcall
pop
jl
xchg
cltd
xor
cmp
int
xchg
sbb
in
frstor
sub
xor
dec
inc
pop
mov
adc
out
shr
roll
repnz
aam
xchg
jae
jp
stc
xorps
adc
dec
jmp
pop
icebp
jns
pop
in
inc
ds
pop
sub
add
adc
sbb
shr
or
sbb
xchg
cmpsb
scas
hlt
sbb
push
add
mov
mov
inc
loope
popf
out
and
into
gs
jns
mov
jmp
iret
sub
push
jbe
repz
mov
insl
loope
les
add
adc
movsb
mov
push
and
dec
sbb
pop
and
cs
and
js
movsl
scas
or
outsl
lods
je
dec
mov
xor
mov
pop
sbb
jnp
jle
cs
popa
das
mov
dec
std
sub
pop
lds
cmc
or
lods
push
faddp
adc
xor
pop
adc
dec
mov
fwait
bound
cmp
xorb
pop
jb
stc
mov
into
mov
push
dec
pop
jae
sub
and
cwtl
mov
sub
push
scas
icebp
xchg
stc
add
in
add
inc
je
sbb
mov
int
pop
sub
mov
clc
enter
lods
movsl
out
mov
push
jae
outsl
loop
ret
cmp
ljmp
jmp
lods
gs
jmp
lcall
lds
jl
insl
cld
rdtsc
mov
pop
jo
mov
mov
dec
sti
sub
push
sub
push
clc
jecxz
mov
sub
jmp
lds
pop
sub
daa
adcb
cltd
addr16
dec
int
inc
lcall
out
pushf
mov
pusha
lret
xor
pop
inc
addr16
pop
jns
xchg
jbe
sub
push
out
inc
mov
outsl
inc
mov
mov
sub
push
xorb
movsb
test
push
lret
xchg
lods
add
scas
dec
shl
les
xorl
cmpsl
jo
test
mov
cmp
cmp
push
add
fwait
and
jae
push
dec
add
in
sub
sbb
aaa
mov
jp
pop
mov
or
xchg
outsb
push
lret
pop
xor
mov
out
xor
dec
and
shrl
jmp
sarl
out
xor
push
in
add
mov
shl
jp
or
cltd
aas
dec
hlt
pop
inc
mov
mov
adc
dec
lock
add
out
les
aam
andb
xor
jb
sahf
mov
ja
pop
test
dec
jae
daa
into
xchg
jmp
lcall
lcall
cli
pop
cmp
cmp
adc
bound
mov
pop
sub
jbe
pop
out
out
popf
hlt
call
push
sub
adcl
js
and
push
test
inc
lds
jae
and
cmp
or
push
cmp
push
test
xchg
repz
xchg
fbld
cwtl
xchg
out
mov
sub
or
dec
loope
jecxz
ret
mov
mov
push
jnp
cmp
or
cmp
les
jb
dec
pop
js,pn
mov
or
mov
pause
stos
stc
sbbl
sbb
leave
cmp
fdivrp
filds
lret
rcr
mov
push
fwait
out
xchg
push
scas
jne
sub
adc
jo
push
stos
sbbl
lret
loope
icebp
mov
cmc
movsl
jne
cmp
in
scas
xchg
cmp
data16
add
out
push
repz
outsb
in
jmp
mov
xchg
fwait
lock
or
xor
out
xchg
xor
jmp
pop
dec
out
inc
jae
mov
jae
mov
xor
cwtl
pusha
in
insb
adcl
or
dec
cltd
hlt
add
adc
pop
pop
aam
ret
push
xchg
jmp
enter
cwtl
arpl
jne
dec
ds
mov
push
stos
cld
jbe
scas
lods
xchg
xchg
adc
sub
push
mov
adc
sti
mov
sbb
adc
stc
testb
sub
test
xor
les
pop
pop
jl
call
int
popf
jp
fldt
fimuls
leave
lods
xor
insl
lea
test
inc
xchg
add
dec
scas
fs
mov
int
adc
cs
in
addr16
pop
test
dec
lcall
mov
loopne
adc
xchg
sar
inc
push
lret
or
lret
call
xchg
push
add
mov
fdivs
rorb
xchg
jno
pop
in
test
hlt
into
sub
mov
add
xchg
scas
push
cwtl
mov
fists
mov
jne
mov
sub
add
pop
fsts
lds
push
out
test
clc
leave
dec
inc
mov
push
add
mov
mov
push
dec
adc
ret
mov
pop
lds
mov
aaa
lods
insl
adc
mov
jg
rcrb
cmpsb
pop
and
mov
rol
das
mov
pop
add
add
std
lods
ljmp
sbbl
sbb
lret
iret
mov
dec
popa
mov
stos
mov
sbbb
pop
pop
pusha
pop
inc
ljmp
add
sar
pop
shll
pop
dec
jns
cs
enter
lret
repnz
ret
push
scas
lds
outsl
int
cmp
stc
mov
jecxz
mov
push
sarb
and
fwait
xor
mov
fldcw
jl
and
or
enter
or
cmp
mov
mov
xchg
add
or
imul
push
xchg
push
pop
xor
mov
scas
mov
mov
sbb
cmc
xor
ja
icebp
out
aas
pop
int3
sub
jmp
dec
mov
cmp
push
popa
cmpsl
mov
mov
ret
loope
neg
ljmp
outsb
cwtl
pop
sub
lahf
and
clc
sbbw
jp
add
call
mov
shll
loopne
pop
das
jae
fistpll
jbe
xchg
mov
cmp
sub
dec
cltd
and
pop
fdivp
mov
decb
clc
lods
push
xchg
jecxz
mov
or
jb
sbb
push
mov
psrlw
testl
jge
rorl
frstor
popf
inc
jbe
fdivp
pop
test
lea
shll
pushf
inc
pop
fildll
dec
push
cmp
sbb
inc
mov
in
inc
loop
outsl
lods
cmpsl
push
cmc
fprem1
adc
daa
aas
dec
push
dec
cmc
in
stos
mov
ret
jg
push
mov
lret
scas
mov
sahf
cmc
mov
mov
gs
imul
mov
mov
enter
fstl
inc
adcb
jnp
iret
dec
mov
xor
mov
es
les
dec
push
dec
sub
pop
or
insb
jo
das
mov
mov
int3
pop
xchg
lahf
inc
lret
sarb
cld
lds
and
inc
sbbl
xlat
mov
add
scas
or
cmp
js
cwtl
clc
mov
cltd
sti
dec
cltd
dec
pop
jno
mov
mov
jnp
orb
inc
add
nop
push
nop
push
jbe
lret
cltd
and
mov
movsl
lahf
dec
into
movsb
sub
inc
mov
push
cltd
fldenv
sbb
cmp
sub
mov
or
sahf
cmpsl
cltd
jg
pop
inc
shll
andb
mov
xchg
mov
cmp
movsl
int
cmp
mov
mov
sub
mov
fcomi
mov
repnz
mov
mov
xchg
lahf
lret
les
fistps
idivl
xor
clc
ja
leave
in
cmp
jecxz
ja
scas
and
dec
stos
pop
xchg
jecxz
mov
ret
push
xchg
mov
outsb
mov
push
fcmovnbe
or
push
inc
test
adc
push
push
mov
ljmp
lods
push
leave
dec
and
push
jnp
xor
fldl
mov
je
loopne
and
test
mov
or
cs
and
iret
pop
mov
jl
xchg
adc
fucom
pop
pop
sub
xor
jne,pn
jp
stos
xchg
cs
ds
mov
push
scas
push
jnp
mov
jl
addr16
mov
sub
test
imul
addr16
inc
xor
popf
loopne
movsb
cmp
out
dec
ja
outsl
in
fimuls
xchg
sub
fadds
les
add
icebp
mov
pop
mov
jno
das
cli
popa
xorb
ja
test
outsl
lods
es
fldcw
pop
push
std
xor
mov
mov
mov
pop
or
lcall
movswl
push
andb
push
and
dec
fs
jno
jmp
or
aam
cmpsl
jge
xchg
xchg
leave
dec
inc
leave
push
xor
inc
fs
cmpsb
inc
ret
fcomps
xchg
sbb
jo
xchg
xchg
mov
dec
xchg
xchg
call
mov
push
je
decb
xor
jp
mov
mov
dec
lds
xchg
adc
loope
call
pop
jnp
or
cwtl
mov
int3
popa
and
repz
sub
jg
xchg
jo
fildl
and
jl
pop
pop
enter
pop
mov
xchg
xchg
scas
iret
jmp
out
jmp
out
mov
mov
xor
arpl
or
jge
in
push
sarb
shlb
inc
hlt
add
jmp
rcr
sub
cmp
add
dec
add
and
inc
push
mov
inc
aaa
jo
roll
inc
fwait
add
inc
inc
adc
adc
add
adc
aad
cmp
mov
push
jl
jl
int
ljmp
ss
fmull
mov
daa
sub
dec
push
add
loop
int
mov
pop
sbb
cmpsl
cmp
cmpsb
loop
fs
cld
in
adc
nop
out
int3
int
cs
call
pop
and
pop
xchg
jp
imul
int3
ficomps
push
aad
stos
pop
push
push
fldt
mov
lret
add
sub
mov
ret
mov
inc
ljmp
mov
push
bsf
negb
adc
rolb
jns
jne
loope
xor
out
in
imul
stos
aam
aad
inc
dec
int3
and
lret
cwtl
and
aam
sub
lcall
mov
loopne
and
lahf
mov
lods
fs
ret
sti
mov
mov
add
xchg
popf
in
jmp
xchg
add
ds
cmp
and
and
or
sbb
subb
cwtl
sub
xor
das
popf
and
adc
sbb
cmpsb
mov
out
popa
int
push
inc
mov
sub
data16
cwtl
pop
dec
adc
lret
mov
or
es
and
rcrb
xchg
adc
cld
mov
aad
sahf
add
add
push
add
adc
adc
mov
push
add
push
xchg
test
pop
sub
stos
ss
xchg
add
push
outsl
inc
subb
mov
fisttpl
mov
ret
ret
jnp
cmp
ror
out
cmp
pop
jae
mov
or
shl
or
pop
sub
scas
mov
loop
clc
push
add
push
or
andb
test
mov
mov
add
call
fwait
jl
out
xchg
int
int3
and
imul
push
lds
pop
mov
loopne
shll
push
add
push
int3
inc
out
hlt
loope
dec
stc
ficoml
xor
mov
fstps
add
fwait
push
cmp
in
hlt
jnp
shll
pop
jmp
push
in
repz
or
xor
shl
into
orb
xchg
fwait
jnp
dec
es
and
sub
leave
lahf
add
pop
pop
and
sub
fwait
pop
pop
scas
jno
and
rorb
add
adc
adc
es
lods
aam
lret
fdivrl
test
jge
mov
sub
xchg
fstpl
out
outsb
mov
mov
xchg
in
xor
fwait
mov
hlt
int
mov
xor
ret
imul
xchg
data16
in
or
adc
iret
sub
fnstcw
jb,pn
in
lret
adc
aas
push
cmp
pop
cmpsb
xchg
shlb
test
fwait
mov
mov
in
sub
mov
imul
sar
fs
xor
push
inc
and
xchg
adc
inc
inc
add
clc
aam
sbbl
adc
cwtl
mov
mov
jno
mov
js
sahf
add
mov
jecxz
and
rclb
or
sub
sahf
add
loopne
jb
sbb
fcoml
rolb
mov
shrb
lcall
mov
xchg
ljmp
jb
inc
cli
adc
dec
pop
lret
xor
lret
mov
paddb
sbbb
filds
mov
cmpsl
add
test
pop
dec
jae
push
arpl
add
movsl
or
mov
test
cmp
rorb
mov
cltd
aas
jbe
and
mov
push
movlhps
push
fnclex
clc
jne
xlat
jnp
cltd
cmp
adc
addl
int3
or
jae
jne
addr16
push
fidivrl
xchg
out
jo
data16
out
mov
lahf
pop
lret
loopne
push
leave
lea
cmp
mov
or
and
sub
mov
cltd
jo
mov
and
test
sbb
push
popa
ficoms
mov
int3
pusha
shrl
into
sub
bound
mov
mov
xor
inc
shlb
xor
repnz
xchg
mov
and
outsb
and
in
mov
inc
pop
leave
enter
out
idiv
movsl
mov
enter
lgdtl
add
push
dec
mov
pop
cltd
shlb
adc
lcall
rorl
lret
jp
jnp
and
dec
xchg
sub
jl
das
jecxz
cwtl
les
fidivs
sbb
not
pop
dec
hlt
sub
andb
cwtl
cmp
mov
lock
and
js
xchg
sahf
jne
aam
lahf
js
sub
sbb
push
xchg
in
out
test
fs
mov
insb
pop
xchg
cld
shl
sub
filds
lock
xchg
bound
enter
in
dec
cmp
lock
cwtl
mov
in
cmpsl
xor
mov
into
mov
push
stos
push
mov
jno
aas
xor
ss
and
jle
jae
sub
icebp
loop
mov
es
rcll
push
bnd
daa
add
dec
xor
push
frstor
aad
or
mov
adcl
inc
pop
pop
fdiv
sub
push
adc
mov
gs
jbe
cmp
mov
mov
or
ljmp
pop
in
push
pushf
mov
scas
jb
inc
push
fisubrs
pusha
jbe
xchg
xor
loop
pop
mov
push
sbb
xchg
jle
sbb
sub
loop
inc
leave
sub
ret
loopne
adc
cltd
sub
js
jns
arpl
mov
int3
dec
insb
mov
test
pushl
ret
je
mov
xorb
bound
inc
loopne
xorb
add
nop
sub
mov
aas
enter
add
imul
mov
jge
jbe
or
lret
xchg
movsl
adc
nop
jmp
lret
into
lret
fcomi
mov
mov
sbb
xchg
jecxz
loopne
in
daa
les
pop
cwtl
mov
jns
add
push
xorb
jecxz,pn
cmp
add
daa
loopne
adc
dec
or
std
and
add
sub
or
sbb
sbb
xor
out
out
jae
testl
pop
sbb
out
jl
insl
fstpl
icebp
push
iret
jno
pop
push
test
ss
repz
lds
sti
inc
jmp
jnp
add
fwait
add
add
loopne
mov
xor
add
adc
popf
gs
cmc
scas
push
add
cmp
dec
lods
jo
jnp
pop
outsb
or
in
ror
je
in
adcl
js
mov
icebp
adc
mov
and
xor
or
mov
add
cli
inc
or
movsb
divl
in
jno
andb
add
or
or
pusha
cmp
sub
mov
xor
adc
push
cwtl
add
and
paddsw
adc
and
sbb
test
negb
std
lock
push
push
adc
addr16
sbb
das
dec
and
mov
lret
lcall
fnstenv
loopne
loope
cmp
sub
loopne
push
sbb
out
xchg
fistps
xor
addr16
call
cmp
jecxz
mov
shrl
jecxz
je
mov
fcoms
adcl
and
xor
cmp
jp
les
mov
mov
pop
jg,pt
mov
mov
inc
jo
mov
lods
mov
add
mov
es
hlt
fdivl
xor
shlb
xchg
addb
jp
mov
xchg
pop
or
cmp
ficomps
orb
stc
adc
mov
add
pushf
outsl
ss
ljmp
sub
in
es
roll
je
mov
cmpsl
xchg
xchg
mov
cmp
pop
push
and
cwtl
jo
pop
mov
push
cmp
out
add
mov
enter
xchg
jno
cmc
pop
sbb
sbb
fdivrs
jecxz
enter
xchg
ret
aad
mov
jo
or
adcb
lcall
daa
pop
and
ficoms
pop
mov
adc
xor
jnp
aaa
jno
mov
icebp
in
in
pop
and
cmp
clc
pop
pop
jae
pop
mov
imul
and
loope
push
jo,pt
add
push
ljmp
cmp
sahf
mov
in
mov
imul
cmpsl
cli
mov
push
loope
or
pop
adc
and
pop
ret
loope
es
xor
mov
cmc
pushf
or
xor
shrl
insl
sbb
mov
pop
icebp
inc
jbe
or
add
mov
bnd
ss
dec
inc
lcall
sub
xor
inc
icebp
cmp
dec
insl
jns
cmpl
add
test
imul
fnstcw
fadd
pop
test
push
add
ja
lret
jns,pt
loop
sti
sbb
shl
rcll
js
into
and
xchg
leave
cmpsl
adc
jno
dec
or
addr16
rcrb
push
pop
pop
insl
ffreep
cmp
imul
xor
mov
addr16
nop
leave
push
and
adc
pop
inc
sub
arpl
xchg
jl
js
or
insl
loope
and
lock
dec
cld
test
ret
jecxz
gs
lret
lret
jg
mov
ljmp
mov
insb
in
cwtl
sbb
sub
jnp
sbb
sub
jge
inc
inc
cmc
jle
xor
sbb
push
and
je
adc
lcall
mov
fldenv
mov
aam
cmp
dec
sbb
inc
sbb
lcall
sbb
and
add
mov
insl
cld
mov
repz
nop
or
jbe
add
sbbl
gs
cltd
scas
test
aas
repnz
data16
orl
dec
icebp
in
xchg
sbb
out
outsl
or
lods
add
dec
sbb
int
out
xchg
sbbb
pop
and
dec
push
cmc
jp
xorps
xor
push
xchg
ja
mov
mov
mov
cmp
mov
dec
jg
sti
adc
xchg
mov
or
mov
lcall
xchg
cmp
adc
lahf
xchg
mov
mov
add
or
sbb
fcmovu
ds
dec
ljmp
jg
sub
add
leave
inc
and
or
nop
lock
iret
lock
lea
jecxz
insl
xchg
sti
or
mov
int
fistpll
bound
adc
push
out
fcoml
cmp
and
mov
mov
out
or
jmp
pop
push
hlt
lret
jp
mov
icebp
and
mov
das
sbb
insb
cltd
clc
fisttpl
mov
lret
inc
and
or
jo
add
sub
mov
popa
mov
dec
and
dec
or
inc
add
out
notb
test
sub
std
dec
dec
lahf
dec
sahf
fildl
cmc
clc
scas
pop
repz
mov
ret
mov
mov
mov
adc
cwtl
roll
pop
in
xchg
pop
decl
pop
in
add
mov
jb
jno
das
je
jmp
clc
jbe
xchg
and
lods
fistps
je
sub
cltd
sbb
xor
sub
fidivrs
xchg
sub
sti
bound
mov
fcmovne
mov
dec
mov
and
mov
outsl
ret
movsb
jp
leave
xchg
sbb
sbb
xor
push
inc
add
movsb
test
movsl
xor
mov
int3
lods
pop
pop
sbb
movsl
cmp
lea
add
add
aam
adc
test
jne
and
out
adc
and
in
std
ret
outsb
imul
pop
add
xor
stos
orb
xchg
pop
xor
mov
ds
inc
lds
push
aas
out
add
add
ss
xchg
arpl
adc
mov
jb
push
fwait
dec
inc
fidivs
mov
faddl
dec
push
pop
leave
enter
inc
mov
mov
mov
and
das
xor
out
xor
fs
jg
sub
std
popa
inc
in
icebp
aad
pop
out
inc
test
arpl
pop
faddp
loopne
sbb
call
loopne
lret
pextrw
popf
fbstp
ficoms
fmuls
jle
mov
fistl
gs
push
aad
jg
movsb
mov
push
test
xchg
xor
or
movsl
jmp
push
jnp
mov
add
dec
mov
scas
arpl
es
fcomip
into
das
mov
int
aas
or
cmpsl
push
loop
cmp
pushf
pop
rclb
jne
insl
icebp
aam
addr16
mov
jne
repz
cmp
jecxz
xchg
and
inc
pop
jg
adc
mov
push
sub
orl
and
je
test
sbb
mov
dec
lret
inc
cmp
movsl
cltd
mov
sarl
ss
lods
dec
jp
mov
mov
push
lock
leave
push
fnstcw
fucomi
jns
mov
jp
mov
adcl
lret
pusha
fidivs
xor
or
mov
or
je
and
cwtl
xchg
mov
sbb
int3
jnp
dec
mov
dec
daa
sbb
cmp
lret
inc
orl
ljmp
xchg
jmp
sahf
sbb
je
xorl
xchg
pop
mov
in
add
sub
fldcw
rsm
mov
cmpsl
fnstcw
jb
cmp
test
xor
mov
sarl
xlat
pop
dec
js
inc
jns
cmpsl
cmp
out
scas
fisubs
mov
mov
adc
ret
jne
inc
dec
adc
inc
shlb
out
cmc
movsb
ljmp
push
sbb
stc
mov
inc
mov
in
rcrb
arpl
dec
lahf
out
cli
filds
sbb
test
cmc
mov
xchg
mov
cmc
xchg
inc
sbb
lock
push
mov
cmc
aas
xrelease
pop
mov
insl
cmp
test
push
mov
daa
xchg
icebp
sub
out
mov
out
mov
ja
xchg
add
dec
mov
cld
fwait
sbb
mov
xchg
jmp
mov
mov
cmp
add
adc
mov
mov
mov
hlt
loop
pop
leave
sub
or
sbb
shlb
add
rep
repz
stc
inc
cmp
and
pop
stc
pop
scas
mov
mov
mov
mov
out
xchg
xor
and
out
rorb
lret
mov
incb
xchg
push
mov
outsb
cmp
data16
stc
stos
lds
adc
dec
adc
or
xor
bound
inc
jno
ja
arpl
out
adc
lods
roll
cs
stos
mov
cmp
cmp
movsb
lods
and
aaa
and
insb
sbb
jg
xor
loop
out
out
push
into
fsubrl
mov
mov
icebp
lods
mov
inc
ret
adc
mov
les
aaa
add
sbb
sbb
inc
xchg
cmp
in
jle
movsb
jae
fbld
cmpsb
inc
jae
or
out
rorb
hlt
loopne
inc
and
sub
xor
ret
scas
shlb
pusha
cmpsb
mov
dec
jne
mov
xchg
in
int3
rcrl
dec
into
fadds
loope
dec
mov
inc
jl
mov
add
inc
mov
lock
mov
sub
in
adc
ret
or
and
fs
js
xchg
fdivrl
xchg
leave
aas
ret
jp
ficoml
or
mov
insb
inc
lds
cmp
test
xchg
or
and
std
inc
ss
fadds
adc
pop
lock
adc
add
mov
adc
xchg
popa
pop
lcall
ljmp
out
rcl
dec
dec
mov
cmc
test
outsl
mov
mov
lret
inc
lea
jae
xchg
cmp
mov
sub
ss
in
pusha
les
insb
cltd
into
mov
popa
sbb
xor
shll
test
sbb
int3
adc
jecxz
xchg
jae
add
add
cltd
insb
rcll
les
in
and
and
mov
cmpsb
mov
addr16
outsb
jno
cmpsb
sbb
outsl
pcmpgtb
jns
lock
xchg
xor
xchg
loopne
ss
lds
pop
in
jnp
xchg
xor
ret
cmpsl
enter
test
std
bound
xor
es
loop
mov
or
mov
cmpsb
cmpl
sbbb
fsubrs
loop
or
insl
lock
sbb
cmc
test
xor
movsl
out
arpl
jne
pushf
jmp
lods
in
pop
or
outsl
lods
sbb
imul
out
sbb
loopnew
fmull
inc
mov
ficoms
mov
add
clc
pushf
xchg
xchg
inc
dec
testl
pushf
cltd
std
repnz
sahf
inc
in
stos
sahf
xchg
dec
mov
fiadds
out
enter
jae
jmp
cld
popa
push
and
mov
mov
cmpsb
rorb
xchg
pusha
rorb
cmpsl
lock
arpl
jmp
or
sub
xchg
iret
inc
xor
fsub
scas
sti
jle
cwtl
lds
xchg
into
mov
adc
push
mov
pop
cmc
adc
mov
and
cmp
in
mov
sub
idivb
sbb
jbe
cmpsb
mov
xchg
mov
int
stos
jmp
lods
or
test
push
fwait
lock
xor
xchg
test
clc
aaa
push
in
ss
or
mov
dec
jnp
popf
adc
adc
mov
dec
orl
scas
lea
push
mov
fs
sbb
sub
and
iret
int3
and
xchg
sub
js
mov
test
iret
dec
leave
push
add
cmpsl
stos
mov
aad
pusha
ja
out
je
dec
add
xor
outsb
out
out
lods
lock
int
inc
pop
aad
mov
mov
in
xchg
test
xchg
fbstp
xorl
fiadds
rcrb
sti
xchg
push
out
mov
xchg
decb
push
sti
int3
push
jecxz
or
and
rolb
jg
mov
inc
loopne
mov
test
loop
cmpsb
mul
cmp
fnsave
jno
shll
pop
cvtpi2ps
movups
mov
loopne
cmp
lock
scas
pop
xchg
inc
xchg
and
sub
ret
repz
dec
mov
stos
in
xchg
fs
cmc
insb
mov
and
loope
out
mov
test
sub
ja
int
pop
pop
dec
xor
mov
push
and
repz
inc
cltd
xchg
insl
inc
mov
mov
fucomip
aaa
test
mov
sarb
jecxz
cmpsb
data16
mov
cmpsl
out
and
pmaxsw
pop
hlt
mov
dec
fldenv
call
test
jp
add
push
fisubl
scas
stos
call
push
or
and
scas
enter
jmp
sbb
cmp
inc
mov
lods
or
and
fdivrl
mov
adc
test
cmpsb
mov
and
push
loope
mov
cs
test
sub
pop
inc
mov
sbb
pusha
inc
sub
repnz
xchg
cmp
hlt
dec
inc
imul
mov
icebp
cmp
pop
adc
push
rcll
das
cltd
leave
cmpb
stos
add
sbb
add
cmp
or
fs
dec
cmp
mov
imul
lods
sub
repnz
out
cld
lret
fwait
mov
xchg
pop
stos
cmc
in
mov
rcl
adc
push
mov
lcall
sub
insb
jae
fldt
sub
mov
pop
lods
sub
cltd
mov
push
fucomp
jne
sbb
shr
jmp
mov
sub
lret
add
add
sti
lea
jne
cwtl
lcall
mov
mov
mov
inc
jbe
ret
sbb
sbb
das
movsl
dec
insb
rclb
shr
je
data16
cmpsb
mov
jmp
sbb
push
inc
sbb
mov
ret
mov
xchg
xor
push
fnstcw
std
stos
jne
movsl
jge
inc
fmull
imul
pop
mov
daa
lock
gs
inc
or
add
jl
mov
lods
cmpsl
pop
pop
es
xor
add
es
sub
clc
leave
mov
or
pop
mov
mov
fs
fst
loope
insb
loope
jmp
push
sub
jno
aaa
adc
push
pop
shld
cmovl
push
aad
and
cli
jmp
mov
mov
jnp
inc
insl
notb
mov
pusha
pusha
pop
pop
fdivrl
jecxz
scas
test
stc
insl
jp
cmpsl
adc
iret
cs
loope
data16
movsb
aas
dec
inc
clc
ret
dec
mov
fadds
mov
cmpsl
pop
lret
ljmp
mov
js
bound
imulb
pop
inc
mov
jp
dec
push
sub
and
push
inc
cmpsb
adc
mov
jo
and
dec
loop
mov
cltd
sub
push
and
mov
dec
std
getsec
cmp
mov
imul
adc
mov
bound
inc
xchg
jmp
pop
call
adc
sbb
dec
in
jae
xor
pusha
loop
dec
data16
imulb
mov
pop
mov
rclb
scas
ja
sbb
rcl
test
sbb
lcall
cwtl
aaa
aam
das
dec
iret
cs
popf
std
lahf
push
cmc
cmpsb
and
rcll
pop
push
push
jg
sbb
ret
iret
dec
fiaddl
mov
movsl
push
mov
cmp
sti
stos
mov
cltd
xchg
movsb
ja
subl
xor
sbb
fbld
sbb
mov
cltd
jp
aad
std
jmp
enter
pusha
iret
inc
jnp
mov
mov
add
lret
push
movsb
cld
addr16
xchg
repnz
jmp
mov
cli
push
sbbl
arpl
dec
fstpl
push
shl
cwtl
sbb
stos
cmp
and
xchg
or
pop
leave
sub
and
dec
dec
adc
push
jno
scas
push
xor
out
mov
imul
or
pop
adc
xchg
ja
cs
add
lret
clc
cmp
repnz
repz
cltd
jmp
inc
xor
adc
out
pop
es
test
test
and
lock
nop
mov
fcoml
test
jmp
or
aaa
adc
cmp
aad
js
mov
adc
pushf
dec
cwtl
imul
jns
jb
sbb
leave
cltd
sbb
shrb
jno
xor
cmp
je
or
push
sbbb
fmulp
jno
popf
lret
frstor
lock
and
fsubs
xchg
pop
orl
dec
mov
loopne
cwtl
test
jno
in
xor
popf
mov
dec
push
jno
mov
out
movsb
lea
hlt
cltd
call
lret
sbb
shll
push
arpl
test
inc
scas
test
std
int3
pop
stos
fldenv
test
pop
xor
imul
sbb
sbb
lock
inc
push
mov
ljmp
ljmp
cltd
inc
pop
or
filds
xchg
incl
mov
in
sub
sub
adc
dec
inc
pop
xchg
push
xchg
scas
xchg
and
lods
mov
jae
adc
adc
les
fnstsw
xchg
fisubrl
cwtl
mov
in
fisubrl
imul
or
push
pop
mov
xchg
add
out
leave
sahf
sahf
cmp
dec
or
aaa
mov
hlt
das
dec
inc
dec
push
jmp
out
cmp
inc
dec
pop
mov
sub
pushf
fmuls
shr
sub
test
movsl
adc
push
sbb
lret
inc
push
lods
lahf
mov
addb
sti
scas
pop
xchg
mov
dec
push
rclb
mov
rolb
cmpsb
push
out
mov
mov
adc
pop
les
iret
arpl
xor
or
sub
testb
stos
rorb
mov
pushf
adc
aaa
mov
and
fcoms
shlb
xchg
jp
push
cmpsb
cltd
mov
mov
add
jl
das
int
lret
mov
rcll
shr
addl
fidivs
jbe
xor
aaa
push
push
movsb
aad
mov
xchg
imul
cmp
iret
test
sub
std
lcall
imul
cs
inc
sbb
pop
in
pop
popf
test
or
push
xchg
test
adc
pop
jl
loop
pop
mov
mov
test
sbb
pop
repnz
jmp
imul
in
pop
dec
and
sarb
stc
dec
in
cmc
sbb
addl
lret
std
pusha
mov
icebp
push
jae
pop
dec
and
inc
push
outsl
inc
mov
sti
mov
fisubs
sar
aam
inc
nop
loopne
in
cmp
jb
js
mov
jne
xchg
sub
insb
lds
inc
call
ss
ja
jmp
xlat
jp
out
mov
or
xor
inc
dec
pop
lock
adc
mul
mov
push
insb
mov
loop
mov
jns
lea
inc
int3
out
int
push
dec
std
hlt
leave
inc
rorl
mov
inc
pushf
lea
xchg
jge
in
negl
mov
mov
pusha
push
mov
into
ljmp
push
int3
inc
shrl
data16
test
cmp
jne
ss
mov
and
cmp
xchg
scas
gs
mov
scas
jmp
push
cmpsl
popa
jne
ret
int3
lea
in
adc
sub
mov
jae
mov
dec
sbb
and
mov
lret
test
nop
jae
faddp
test
aad
or
xchg
mov
in
fldcw
sti
lcall
sbb
push
or
fstps
stos
or
mov
pop
dec
sub
movsl
xchg
or
and
sahf
mov
out
pop
aad
out
sbb
sub
push
dec
add
jne
push
xchg
jl
pop
mov
lods
lret
stc
jle
les
push
roll
pop
pop
clc
int3
insb
test
jmp
cwtl
enter
jp
xor
sub
inc
or
call
int
mov
divl
sub
add
jns
call
ret
xchg
fldenv
xor
ficoms
lret
xor
lcall
mov
jl
adc
pop
aam
int
pop
int3
cmpsb
add
pop
cmpsl
adc
push
xchg
jge
or
pop
fisubrs
dec
movsl
cli
jg
ds
mov
mov
lcall
and
xor
cmc
negb
out
or
push
cli
ss
pop
imul
outsl
push
sbb
sub
mov
jbe
int
pop
mov
out
cmp
cmp
sbb
enter
cmp
sbb
lds
mov
and
cmp
jge
aad
sbb
dec
scas
packuswb
or
sub
sbb
insl
dec
ljmp
mov
and
mov
pop
daa
data16
xor
cltd
movsl
imulb
fdivrl
daa
call
aam
adc
pop
rcl
repz
xchg
pop
cld
subl
in
push
in
insl
jp
adcl
pop
imul
xor
xchg
jp
lret
jbe
ficoms
iret
mov
jo
and
shlb
add
mov
insb
fcoms
jmp
out
loopne
xchg
cmp
jns
stos
jge
ret
hlt
andl
ss
orl
mov
pop
mov
mov
or
and
scas
mov
jmp
xchg
and
cs
xchg
cmp
stos
faddl
cltd
mov
fisttpl
jecxz
jae
mov
jno
jne
repz
mov
cld
mov
jl
jp
jnp
hlt
iret
pop
imul
fcoml
aas
into
mov
test
ljmp
frstor
scas
push
mov
sub
cmovg
mov
push
mov
lods
sub
jmp
or
mov
fwait
jo
and
dec
mov
ja
add
dec
ss
mov
add
xchg
in
dec
and
bound
in
jl
dec
xor
ret
inc
loop
and
lods
imul
add
ss
mov
arpl
clc
fwait
enter
push
stos
in
dec
dec
pop
mov
and
mov
fidivrl
mov
test
push
popa
mov
mov
inc
jmp
out
loope
mov
ss
mov
mov
push
pop
ret
pop
or
jno
pop
call
std
pop
leave
add
push
or
pop
dec
pusha
add
add
sub
sub
mov
mov
fidivl
inc
mov
and
inc
mov
cli
repnz
push
stc
inc
push
sub
mov
lods
pop
push
hlt
xorb
dec
out
push
inc
mov
pop
mov
stc
iret
popa
movsb
dec
inc
rorl
ss
lret
roll
xchg
fistpll
ljmp
mov
out
je
pop
inc
rcrl
aaa
pop
es
roll
adc
ss
rcr
popa
mov
dec
je
stc
dec
pop
ret
das
out
test
cmp
mov
lods
icebp
je
test
icebp
add
lahf
add
add
or
mov
into
out
dec
js
jmp
adc
test
lock
pop
popf
xchg
test
push
sbb
mov
out
xor
notb
addr16
cmc
jecxz
inc
fwait
push
icebp
das
or
stos
add
mov
clc
int
and
dec
jbe
cmp
pop
sbb
sub
fcoms
fldenv
test
sbb
lock
ds
sbb
mov
mov
adcl
sti
sbb
imul
addl
enter
out
dec
sbb
lea
mov
ret
decl
xchg
movsb
loopne
lea
inc
jnp
loop
fsubrl
inc
jns
cli
js
mul
out
dec
push
adcl
pushl
stc
push
or
jno
andb
iret
or
subl
xor
cmpsl
ja
cmp
pop
scas
dec
mov
mov
ss
xchg
mov
fisubrs
pop
cmp
int3
shrl
adc
insb
inc
add
out
in
push
loop
cmpsl
pop
and
lret
push
and
xorb
adcb
inc
add
jl
outsb
sub
xor
loop
mov
xor
jge
inc
cltd
sahf
fcomps
ds
insl
sub
ja
xchg
bnd
dec
push
rcrb
add
xor
fistps
movsl
xchg
push
repnz
das
lods
aam
mov
jnp
mov
add
rorb
mov
or
push
shll
xchg
and
loopne
js
scas
add
es
insl
cmpsl
or
pop
adc
inc
push
out
add
add
sbb
arpl
mov
jp
dec
add
aaa
add
add
xchg
xor
jne
or
push
sbb
out
xchg
jmp
pop
outsb
out
push
andb
addb
push
add
jae
push
xlat
bound
inc
add
hlt
out
cld
sbb
loopne
subb
dec
adc
mov
rclb
push
xchg
faddl
dec
xchg
aas
xchg
aam
in
std
stos
inc
adc
xor
inc
cwtl
inc
outsb
sbb
xor
or
stos
movsb
push
subl
xchg
lods
inc
jae
pop
js
arpl
fwait
jno
pusha
dec
sti
insl
or
lock
cld
movsl
xchg
ret
out
xchg
cwtl
jge
add
sbb
or
addr16
loopne
bound
add
xor
xchg
sub
hlt
mov
xchg
cmp
cmpsb
xchg
sbb
mov
mov
out
lods
cmpsb
xor
push
into
cli
cmp
or
xchg
mull
push
inc
into
sub
xor
push
test
xchg
movsb
gs
xor
jle
aaa
pop
pop
lock
mov
mov
xor
xchg
dec
fidivs
je
cli
pop
pop
xchg
push
push
data16
adc
inc
xor
jae
movsb
je
insl
and
xchg
mov
and
repz
call
mov
loope
inc
inc
xchg
adcb
jo
dec
in
xchg
stc
test
push
mov
jg
add
pop
inc
lahf
sub
shlb
shlb
pop
ja
les
mov
sub
inc
xchg
fnstenv
dec
mov
jne
neg
sub
movsb
mov
fnclex
cmp
sbb
in
lock
push
inc
jae
cmp
jno
adc
push
lea
fstps
rorl
add
xchg
clc
clc
les
dec
incl
push
push
mov
sbb
icebp
push
adc
hlt
adcb
jle
dec
cli
adc
repnz
xchg
inc
push
sbbl
mov
adc
jg
lods
and
je
mov
cmp
cmp
sbb
sbb
int
sbb
sahf
fmuls
nop
mov
sbb
pop
insb
and
push
add
nop
add
push
arpl
inc
jle
testl
sbb
repz
push
lret
add
cmc
in
dec
inc
pop
js
add
inc
sbb
jo
data16
es
push
mov
mov
rep
sti
mov
pop
jle
sub
sub
mov
push
dec
inc
cmp
mov
dec
xor
inc
bound
out
cmp
das
adc
jecxz
adc
push
lods
cld
or
sub
loopne
inc
push
test
sbb
lods
add
sub
addb
xchg
call
aam
or
sub
cmpb
mull
mov
push
pop
mov
sahf
popf
lods
mov
loope
mov
mov
stos
out
inc
sbb
adc
cmp
inc
mov
jecxz
repnz
jl
mov
cmc
fwait
mov
jp
roll
pop
dec
cmpsl
dec
push
mov
add
or
loopne
addb
daa
in
iret
pop
sbb
mov
lret
aaa
and
leave
push
jg
dec
jmp
mov
into
sub
lcall
in
or
cs
mov
push
or
mov
inc
aam
les
mov
js
aaa
jno
xor
fstpt
xchg
pushl
push
mov
movsl
aas
sbb
push
les
sbbb
rclb
and
fiaddl
out
sub
mov
fwait
mov
pmulhw
aas
imull
add
dec
xchg
es
daa
sbb
in
or
test
mov
and
pop
push
vcmppd
imul
insb
lock
stc
ret
jbe
cmp
lcall
incl
sar
cmp
cmp
shl
push
stos
sbb
mov
cwtl
aad
mov
jo
mov
cwtl
imul
mov
and
push
add
xchg
xor
imul
add
add
pop
lret
sub
jmp
scas
inc
sbb
push
aas
and
push
jbe
into
pushf
loop
lods
ds
je
inc
int
popf
jg
leave
lods
sub
sub
push
out
xor
int3
xchg
fadds
push
cwtl
cld
rcl
cmp
je
push
loope
sub
jg
xchg
jno
inc
or
pop
sti
dec
bound
jle
adc
in
js
icebp
dec
ficompl
cmp
das
mov
movsl
cmp
scas
repz
nop
mov
out
xchg
cmpsl
cltd
out
jg
mov
sub
pop
sbb
sbb
lods
mov
or
lret
push
lock
mov
es
adc
stos
mov
mov
xchg
fwait
js
mov
add
jg
addr16
lock
mov
push
lock
or
dec
jno
dec
dec
stos
mov
mov
push
sbb
or
add
scas
ja
jbe
lds
pop
rorb
imul
lods
insb
mov
loope
push
cmp
incb
das
loop
andl
adc
xor
negb
xchg
frstor
and
test
sbb
xchg
iret
push
sub
jle
pop
decl
push
dec
pusha
call
inc
mov
add
cli
jecxz
pop
sti
jae
jecxz
adc
cmpsb
shrb
mov
mov
cmp
popf
xor
rorb
inc
shll
shlb
sub
xor
pop
popa
pushf
dec
imul
push
push
inc
dec
out
fcoml
sub
add
scas
inc
push
jl
lahf
test
jp
loop
addr16
inc
hlt
mov
inc
testb
mov
cmpsl
std
pop
jp
ds
lds
dec
push
repz
cmp
gs
fidivrs
jl
mov
adc
cld
cmp
inc
push
in
mov
loope
xchg
leave
mov
in
add
in
shrl
and
pop
fs
add
dec
mov
cwtl
mov
lock
pop
insl
and
les
mov
icebp
and
jb
lea
mov
test
rorl
adc
jno
loopne
movsl
decl
push
cmp
daa
popf
xor
aaa
add
mov
mov
mov
inc
mov
xchg
push
add
jp
movb
movsb
or
xor
das
mov
test
push
mov
sbb
adc
xor
movsb
mov
mov
scas
mov
pushf
pop
jp
jecxz
add
lods
cmp
divb
push
push
fiaddl
mov
out
arpl
push
xchg
cmpsl
aad
sub
bound
mov
jo
repz
ja
stos
and
lods
stos
mov
xor
dec
daa
orb
pusha
arpl
adc
mov
daa
daa
jnp
cli
xor
xchg
sarb
mov
mov
cmp
xchg
sub
call
and
adc
loopne
jne
movsl
xchg
test
mov
ficompl
sub
loope
ja
inc
dec
xor
mov
in
inc
xchg
loopne
popf
movsb
pusha
mov
mov
inc
xchg
lds
mov
jo
adc
sarb
sbb
xor
mov
fwait
loopne
xchg
pop
lret
push
fs
out
inc
and
adc
sub
pop
add
inc
dec
das
in
adc
inc
into
ficomps
mov
stos
hlt
adc
insb
sub
dec
jecxz
inc
mov
sub
imul
jno
arpl
in
xor
or
nop
aad
leave
test
jg
mov
xor
xchg
jnp
fisubrl
xor
and
or
inc
xchg
mov
cwtl
sbb
movsb
pop
xchg
imul
mov
mov
pusha
add
test
mov
or
test
mov
inc
jno
in
std
add
aas
outsb
xchg
repnz
lods
shll
fadds
pop
lods
push
jle
push
mov
or
adc
dec
rcrb
xchg
ja
into
mov
cmc
add
dec
pop
fs
cmp
insl
jb
ficompl
xchg
dec
in
gs
and
inc
fisubl
out
ss
iret
lret
das
lods
stc
cmp
cmpsb
mov
scas
pop
arpl
jno
jle
dec
xlat
clc
jle
sti
xor
es
stos
jge
xor
adc
stos
jmp
push
mov
pop
cs
sub
mov
cmp
iret
gs
mov
and
pop
push
sub
mov
dec
pop
mov
inc
sbb
adc
fdivl
loope
xchg
hlt
pop
mov
shlb
xchg
sarl
jns
dec
cmp
cmp
ljmp
in
xchg
mov
cmp
sahf
sysret
jcxz
jecxz
mov
lods
add
dec
leave
dec
cmp
add
cld
imul
mov
cmp
jl
subb
lods
xor
sub
mov
addr16
inc
loopne
test
pop
adc
je
scas
clc
cmp
rcll
movsb
nop
adc
lea
ret
int3
loopne
stc
and
stos
pushf
adc
shrl
mov
gs
cmpsl
pushl
adc
cld
push
fsubl
pushf
inc
pop
inc
adc
test
mov
dec
push
sub
aam
movsb
or
jmp
push
mov
and
rcl
sahf
or
test
adc
in
inc
cmp
insb
dec
repz
xchg
mov
in
jb
sub
sti
xchg
jno
cmp
jle
dec
jns
lods
mov
dec
subl
mov
jecxz
lret
fldl
adc
jne
or
cmp
pop
out
xchg
xor
and
mov
dec
dec
fadd
dec
insb
pop
mov
stc
shlb
adc
cli
sub
clc
fdivr
dec
xchg
in
or
dec
jmp
sub
lods
jp
fstps
sti
scas
push
mov
or
lock
imull
call
scas
jp
outsb
cbtw
jno
xor
adc
mov
lret
mov
jge
xchg
mov
sahf
rcll
cmp
movl
sbb
daa
mov
adc
sub
sub
loop
mov
pop
lret
push
sti
xchg
add
cltd
push
stc
xchg
stos
inc
xor
or
and
jae,pn
in
cmp
lcall
xchg
mov
lret
fisubl
lea
pop
sbb
iret
call
or
cwtl
pop
xor
pop
lods
mov
jl
arpl
out
sub
pop
and
and
push
cmp
popa
dec
dec
cli
loopne
mov
mov
xor
rcl
out
dec
fmuls
fsts
add
mov
cmp
or
and
gs
cmpb
cmp
push
adcb
out
cld
mov
inc
dec
gs
mov
sub
out
push
stc
push
imul
rolb
enter
fmulp
fmuls
aad
fwait
inc
and
je
mov
mov
sub
cmc
push
mov
lea
add
pop
jle
mov
dec
mov
or
push
jle
rcll
sbb
ds
lods
sbb
cmp
sbb
hlt
sbbb
xor
movsb
mov
in
je
jns
inc
insb
mov
mov
cmp
jb
add
stos
jmp
fnstsw
xchg
xor
or
mul
cmpsl
push
stc
inc
data16
andl
xchg
movsl
repz
inc
icebp
xchg
jno
retw
insl
imul
push
in
imul
xor
jp
iret
mov
push
pop
push
jo
jecxz
rolb
and
insl
inc
mov
sub
dec
lea
test
push
clc
xchg
xchg
in
pmaddwd
jge
push
push
push
movsl
or
or
xor
dec
icebp
rorb
inc
dec
daa
notl
jo
lret
cmp
dec
out
pop
and
popl
mov
ljmp
popa
loop
mov
das
sbb
mov
jg
mov
fisttps
or
pop
call
call
or
adc
xchg
in
imul
scas
sbbb
xchg
ss
xchg
adc
ret
pop
call
addr16
mov
pushf
stc
pop
ret
repz
push
loopne
addr16
mov
pop
mov
call
lds
in
into
data16
adc
lock
mov
inc
mov
or
jne
roll
push
inc
xor
add
lds
and
cmpsb
or
int
push
push
or
cmp
and
lea
sbb
push
repz
xorb
mov
bound
cld
mov
sub
add
daa
mov
hlt
jp
cmpl
dec
and
xchg
in
js
mov
call
pop
mov
shl
push
mov
out
lahf
jno,pt
lock
test
dec
test
adc
push
adc
jecxz
xchg
icebp
sub
pop
dec
movsl
inc
xchg
jo
xchg
push
mov
jge
movq
sub
pushf
sbb
jns
loop
out
jg
inc
aas
pushf
int
lock
mov
jae
fstp
xor
enter
call
cmpsb
outsl
mov
popa
rorl
xor
pop
add
jl
pop
push
cli
mov
test
jnp
call
lret
call
clc
pop
jnp
outsb
shrb
lcall
insl
xor
sbb
lret
and
aaa
pop
aaa
mov
jnp
int3
pop
test
xchg
sbb
outsl
in
xor
and
sub
sbb
cmp
xchg
adc
cmp
add
jns
xor
out
out
iret
pushw
mov
loopne
popf
hlt
or
pop
xor
iret
in
add
sbb
sarl
stos
add
lret
rorl
push
pop
pop
or
xchg
mov
jno
scas
pusha
dec
jb
fs
lds
pusha
shlb
fcoms
mov
shr
je
js
dec
dec
add
daa
aam
sbb
sub
or
mov
rcrb
lds
dec
fs
or
jecxz
movsb
imul
dec
lea
std
sbb
and
or
mov
add
test
in
mov
mov
roll
rcrl
dec
shl
jle
adc
jno
hlt
push
sub
jl
cmp
bound
dec
pusha
xchg
xor
add
out
and
enter
push
adc
dec
jns
test
add
jo
and
xor
sbb
adc
mov
pushf
pop
mov
icebp
sub
idiv
push
ret
and
add
or
insb
loope
jno
or
dec
call
push
adc
cmc
popa
movsl
cmovb
stos
or
loopne
nop
notb
dec
rcrl
sarl
mov
dec
pop
lock
mov
mov
movsb
or
push
or
mov
pushf
push
pop
lock
iret
sbb
pusha
aaa
les
addl
aas
jecxz
mov
xchg
pop
lcall
xchg
xchg
mov
lea
outsb
repnz
mov
movsl
aad
mov
adc
mov
loopne
mov
sahf
data16
inc
push
pop
cwtl
add
push
jns
bound
jg
outsb
and
rcll
cwtl
test
addb
ret
push
pop
or
jge
jmp
mov
adc
in
xor
push
mov
shlb
inc
test
inc
out
stos
xor
dec
addr16
jbe
or
or
ds
rcr
adc
and
cmp
je
sbb
push
test
and
out
sbb
mov
mov
into
add
lret
adc
dec
movsb
pop
add
adc
cli
sbb
addr16
sub
cmp
cs
mov
add
fcoms
sti
das
pop
loop
fmull
and
loop
jecxz
pusha
movsl
and
mov
add
cmpsb
cmp
mov
inc
fiadds
or
mov
dec
fwait
xchg
add
push
test
or
pushf
push
imul
lea
arpl
mov
loop
fs
leave
push
add
cltd
inc
sub
rcrl
mov
mov
mov
xchg
adc
mov
loopne
pop
fdivr
xchg
sub
sbb
adc
lea
test
inc
sbb
inc
filds
test
in
pop
pop
test
adc
insb
pop
sbb
cwtl
mov
jbe
push
divl
xor
je
arpl
cmc
lcall
stos
mov
es
bound
cmc
sbb
pop
jp
mov
icebp
push
xchg
mov
mov
out
sbb
lds
pop
aaa
dec
or
dec
aaa
jo
dec
js
mov
cmp
adc
jge
mov
xlat
xchg
mov
sbb
mov
xchg
mov
cmp
jo
fbld
mov
into
lods
arpl
push
xor
mov
sti
jo
ss
sbb
ss
ss
add
ss
into
std
sbb
sbb
fdivs
insb
out
or
pusha
xor
inc
leave
leave
mov
in
sub
mov
jae
push
outsb
test
mov
jb
mov
dec
fs
jne
xor
fnstenv
loop
mov
xchg
pushw
sub
mov
sub
insb
lds
stos
inc
jbe
mov
dec
lret
insl
stos
movsl
push
stos
jge
sarl
std
cli
mov
fidivrs
ljmp
popf
adc
out
lahf
cmp
lock
mov
sub
gs
push
sub
or
mov
repz
popf
jl
sar
les
movsl
out
out
stc
cmp
pop
and
cltd
push
push
push
push
into
adc
hlt
inc
cmp
rorl
popf
mov
cltd
jl
lcall
mov
or
popl
jno
mov
or
jp
jge
jb
pop
pop
jnp
jmp
lock
int
mov
incb
shl
sub
add
adc
add
sub
out
mov
dec
sub
and
icebp
and
mov
addr16
and
add
sar
xor
jo
or
or
mov
push
adc
add
adc
adc
pop
push
orl
cld
adc
push
adc
sbb
orb
inc
mov
adc
cmc
loope
jecxz
pop
stos
jmp
enter
mov
aaa
jo
ret
in
mov
add
sahf
add
adc
lock
inc
and
sbb
out
outsl
jno
inc
mov
cld
pop
cmp
dec
inc
adc
ret
mov
jp
ja
dec
andb
rclb
mov
push
mov
add
push
push
and
jo
or
mov
jo
or
mov
std
aas
xchg
mov
push
out
cmp
jne
and
das
xchg
and
sti
sti
add
add
in
out
add
push
or
test
sti
notl
and
xchg
cmc
jmp
pop
adc
push
push
push
fstpt
addr16
pop
imul
mov
hlt
mov
inc
mov
scas
aad
popa
and
push
outsb
sahf
jns
loop
jl
dec
repz
lds
mov
xchg
out
fwait
inc
repz
int
and
lcall
sub
adc
icebp
into
xlat
mov
xchg
or
call
pop
add
add
faddl
dec
add
xchg
inc
xchg
loop
rol
invd
pushf
subb
adc
add
popa
push
add
dec
push
inc
push
mov
sbb
add
or
lock
sbb
fiaddl
movsl
in
sbb
test
call
fiaddl
and
push
es
add
xor
or
cmpl
mov
add
and
adc
adc
sbb
push
aas
pop
pushl
jmp
inc
out
das
and
aad
repz
pop
lahf
dec
mov
mov
ds
adc
adc
orb
in
jecxz
lahf
fstpt
jl
shl
jle
cmpps
mov
out
mov
lods
adc
jg
into
divl
dec
imul
jnp
or
xor
psubb
mov
dec
push
repz
fprem1
loop
outsl
cmpb
ret
adc
pop
cli
bound
cmp
or
sub
test
xor
push
rorb
jg
inc
ljmp
add
mov
add
mov
sar
dec
shl
xor
out
lods
scas
rol
jecxz
jmp
mov
inc
clc
call
or
fidivrs
sahf
sbb
repnz
add
addb
loopne
lock
pop
adc
clc
adc
mov
fwait
ss
sub
in
jnp
fldl
ds
aam
xor
jno
pop
std
pop
pushf
arpl
push
or
mov
push
add
stos
sti
lea
scas
and
sub
sbbb
cmpb
ds
lahf
mov
jae
add
addr16
lock
repnz
ja
loop
dec
out
stos
or
cmp
ss
ljmp
mov
mov
mov
loop
fiadds
iret
ret
push
std
inc
stc
or
inc
jbe
pop
rorb
push
loope
or
xchg
or
or
mov
mov
xchg
adc
mov
aad
sar
dec
jecxz
loopne
xlat
xlat
popf
cmc
dec
mov
mov
jb
adc
jo
add
xchg
and
insl
fisubrs
iret
mov
pushl
idiv
or
ret
out
mov
loopne
daa
jmp
std
loope
andb
sbb
push
lds
dec
sub
test
mov
cltd
repz
fildll
nop
dec
or
or
push
mov
pop
pusha
and
scas
adc
push
inc
or
add
push
add
sub
or
clc
adc
insb
add
jge
filds
sbb
and
push
std
adc
push
pop
imul
xchg
test
dec
inc
daa
in
std
iret
ds
sub
push
call
das
jge
ja
out
jge
xchg
push
iret
popa
cmpsl
loop
rolb
push
stos
ds
repnz
repz
out
cld
push
lods
repz
es
push
aaa
hlt
mov
cmpsl
repnz
cmpsl
and
jne
inc
jmp
sbb
dec
out
cmc
inc
dec
stc
mov
idiv
stos
iret
dec
dec
aaa
cld
mov
mov
fsubrl
jb
inc
fildl
inc
adc
shll
subl
aam
repz
xor
arpl
sub
mulb
enter
repnz
and
aaa
clc
cmp
arpl
push
in
pop
retw
mov
cs
mov
xlat
adc
sub
sahf
dec
xor
lret
rcrl
add
jnp
dec
add
in
mov
fmul
lods
addr16
loopne
or
jl
mov
mov
sbb
lret
fdiv
and
fwait
and
mov
aad
and
pusha
mov
mov
xchg
add
sub
test
add
out
jmp
orb
xchg
int
scas
or
mov
shrl
dec
mov
cmp
je
lods
inc
dec
inc
ss
jae
sarl
cmpsl
cmp
sbb
insb
das
mov
sub
sub
loope
icebp
push
adc
popf
sbb
xchg
push
pop
sbb
stos
gs
mov
popl
aaa
mov
jb
sbb
cli
mov
into
addl
hlt
or
xchg
imull
pop
jmp
iret
xor
adc
jne
jns
into
fcomps
daa
pop
jae
mov
mov
imul
xor
pop
ljmp
xor
lods
lret
inc
mov
out
lret
outsl
push
imulb
insb
cmpsl
xchg
mov
or
xor
fcompl
jecxz
shll
inc
addr16
sbb
testl
push
lcall
push
jns
push
icebp
xchg
fs
pusha
jge
inc
xor
jae
dec
cli
cld
mov
cld
push
js
dec
outsb
dec
leave
mov
fwait
mov
sbb
xchg
das
jno
aaa
repz
je
int3
stos
mov
adc
mov
push
repnz
add
mov
fildl
mov
push
sbb
test
int3
jnp
hlt
daa
ja
fwait
int3
xchg
data16
inc
sbb
sahf
test
outsl
cmp
and
mov
fidivrl
pop
popa
sub
call
pop
pop
cs
jne
mov
jb
addr16
jmp
pop
adc
cmc
scas
mov
test
and
jle
and
pop
xchg
xor
inc
bound
ror
outsl
sarb
or
sbb
cwtl
push
jle
adc
add
add
and
sarb
push
add
push
add
pusha
mov
nop
dec
add
inc
add
mov
xchg
xchg
and
add
out
mov
in
ret
sti
pop
sti
lret
adc
jg
push
jp
mov
lods
inc
in
add
mov
mov
jge
cwtl
cld
cmpsl
add
ret
add
gs
jbe
lcall
sub
pop
lret
lods
repz
aaa
cmp
cld
leave
popf
add
jmp
pusha
push
and
pop
out
clc
pop
and
cld
faddl
jg
and
jnp
pop
call
sbb
xor
test
sub
sub
imul
xchg
or
dec
dec
sub
mov
pusha
dec
arpl
dec
daa
xor
pop
jg
xor
in
xchg
cltd
imul
mov
arpl
out
add
rcrl
fucomp
jno
cmc
jnp
or
sbb
mov
scas
cltd
pop
pop
pop
pop
pusha
popa
bound
insb
insl
iret
fistpl
pop
pop
mov
insl
cmp
scas
xlat
mov
sub
mov
and
bound
clc
xor
das
xor
sahf
lahf
mov
movsl
cmpsb
stos
out
stos
cmp
mov
xchg
pop
into
shrl
pop
decl
loop
inc
mov
cmpxchg
mov
add
xor
lds
imul
hlt
dec
sbb
cmp
pop
xchg
mov
popf
sub
pop
jg
lahf
push
jg
jmp
and
decb
stc
mov
dec
xchg
mov
loop
mov
test
mov
sbb
ljmp
iret
out
movsb
lcall
fcomip
pop
int
lcall
push
jns
sub
fidivrs
inc
cmp
xchg
call
les
push
inc
jo
xchg
pop
dec
inc
sub
out
push
int3
arpl
adc
lcall
call
stos
sarl
sbb
iret
add
scas
push
loope
adc
sbb
and
add
or
push
and
or
test
cmp
jge
adc
mov
cmp
add
js
add
jo
add
xor
in
lock
and
mov
add
orl
ret
add
add
add
pusha
or
pop
lock
adc
negb
loopne
add
adcl
push
push
or
add
rcrl
cmpb
dec
sbb
push
cwtl
adc
jo
xorl
xchg
and
mov
subl
pop
in
add
pop
jb
or
cmp
add
mov
int3
test
xor
adc
fadd
add
add
or
pop
jle
or
xchg
and
scas
xchg
aaa
orb
xchg
push
andl
mov
push
int3
or
roll
jns
mov
enter
pusha
and
xchg
jo,pt
or
sbb
stc
mov
add
and
mov
sbb
mov
adc
notb
rolb
stos
aas
cmp
sarb
mov
rcrb
push
xchg
add
aad
mov
xor
bound
mov
mov
rorb
jb
and
cwtl
and
push
nop
inc
nop
pop
adc
sahf
inc
scas
and
nop
mov
cmpl
and
nop
jae
cmp
sub
jae
pop
or
enter
enter
jp
shlb
fsts
cmp
and
nop
je
ss
adc
loopne
pop
adc
push
nop
dec
nop
pop
ja
cwtl
dec
subl
enter
xchg
pop
cwtl
adc
or
dec
adc
xchg
fldl
or
scas
ret
cwtl
xchg
ja
imul
push
sbb
jge
andl
sbb
mov
or
cld
add
sub
jbe
loopne
sarb
hlt
adc
xorps
dec
in
cmp
inc
ljmp
add
and
adc
sbb
jmp
pop
pop
cli
jmp
and
mov
lods
pop
pop
lret
into
lret
fmul
aaa
into
mulb
ljmp
xor
imul
mull
imul
mov
mov
push
jge
pusha
sbb
ret
pop
inc
or
aaa
mov
testl
jp
out
sti
inc
mov
xor
xor
mov
mov
xchg
jnp
insb
adc
sub
jo
mov
int3
jge
repz
jmp
or
mov
lahf
xor
mov
fbld
mov
test
mov
das
movsl
pushf
cmc
adc
iret
dec
mov
mov
jmp
pop
imul
mov
lret
idivl
cmp
out
cltd
bnd
mov
sub
lock
jnp
adc
adc
and
mov
or
lea
jno
jae
adc
in
push
add
inc
cltd
rdpmc
push
push
and
clc
aam
jp
hlt
and
in
insl
test
mov
hlt
sar
adc
dec
cmp
mov
adc
adc
push
sahf
movsl
cmp
insb
push
loope
or
sbb
enter
or
pop
push
lcall
movsl
shrl
adc
and
in
fcmovu
inc
cmpsb
das
push
cmc
fimull
sbb
sub
jge
push
fldl
push
lret
test
inc
inc
pushf
xor
in
jle
pop
mov
sub
pop
sub
push
jmp
adc
xor
fldl
mov
cmp
xlat
pop
insb
xor
jnp
jge
inc
fs
mov
sbbb
sub
rcrb
hlt
mov
mov
nop
insb
stos
into
ss
xchg
cmp
adc
mov
push
jno
std
jb
xor
pop
shlb
in
push
mov
cmp
ret
inc
adcb
dec
pop
cmp
push
push
add
sbb
adc
movsl
fisttpl
mov
lret
xor
sub
ja
mov
mov
xchg
xor
mov
mov
ss
or
je
or
cmp
jbe
xchg
scas
mov
push
jb
ret
xor
out
dec
xchg
clc
js
push
or
bound
jl
stos
xchg
es
insb
repz
stc
jge
xchg
mov
inc
mov
or
mov
pop
cmc
push
push
cli
outsb
cld
pop
push
and
mov
fmuls
pop
jnp
mov
pop
push
mov
out
or
xchg
adc
push
in
push
imul
sub
rcrl
mov
leave
fidivrs
loop
jmp
mov
mov
lahf
aad
test
jbe
loop
pushf
movsl
cmp
xor
or
out
xchg
pop
ja
fidivl
pop
push
mov
daa
cmp
test
repz
mov
stos
add
into
sub
dec
subl
or
mov
inc
jmp
xor
push
sub
xor
sti
hlt
in
push
sbb
adc
adc
push
mov
scas
mov
dec
enter
pop
xor
mov
push
hlt
js
rcr
push
inc
ficomps
push
pop
jbe
adc
idivb
push
mov
loop
ss
pop
mov
sub
mov
xchg
mov
sahf
fmull
mov
test
cmp
in
jns
gs
int3
lret
or
mov
inc
popf
xchg
lahf
jno,pt
fldt
cmp
pop
int
mov
not
adc
jmp
test
stos
in
lds
ficompl
xchg
and
popa
nop
popf
popa
push
xchg
fnsave
loop
mov
icebp
or
enter
pop
add
xchg
sbb
adc
push
das
push
ret
pop
pusha
hlt
into
xchg
and
popf
stos
mov
mov
iret
xor
adc
lods
pop
insl
jnp
pop
shrl
inc
stos
inc
cmp
xchg
incl
and
js
lds
push
push
add
aad
stos
sbb
in
movsl
xchg
push
jne
push
lcall
xchg
jp
dec
ret
es
icebp
cwtl
xchg
adc
rcl
mov
imul
adc
leave
dec
jmp
fsubl
mov
adc
add
mov
mov
mov
xchg
jle
in
push
dec
dec
jmp
sub
arpl
cmp
and
imulb
cmpsb
cmc
stos
add
mov
and
xlat
cmc
insb
jo
xchg
mov
dec
stos
js
mov
lods
cld
rcrb
sbb
dec
and
ja
xor
sbb
cmp
out
dec
xchg
jbe
popf
bound
lds
xchg
push
test
jg
test
dec
les
mov
cs
scas
pop
nop
test
adc
adc
into
jo
or
stc
cmp
sbb
and
outsb
pop
nop
loope
aaa
scas
inc
push
inc
insl
sahf
mov
xchg
add
and
cmpsb
and
pushf
inc
inc
adc
pop
push
lret
fdivr
inc
in
push
fwait
jbe
cwtl
jecxz
cmpsb
sub
dec
into
mov
rcr
jae
aam
neg
inc
cmp
movsb
pop
push
stc
mov
in
cmp
out
xchg
push
jge
sarl
xchg
mov
vpsubsb
fisttps
mov
sbb
inc
sbb
pop
mov
push
adc
fwait
outsb
lods
cmp
ljmp
arpl
repz
xor
imul
pop
stos
mov
popf
jno
lods
inc
adc
mov
test
pop
movsl
add
jb
lahf
test
les
pop
rcll
mov
dec
test
xor
xchg
fldcw
repnz
jl
fxch
mov
mov
add
jns
sub
and
inc
bound
xchg
jmp
xor
sbb
int3
push
std
inc
mov
imul
push
mov
lret
adc
imul
dec
shlb
adc
and
fidivrl
cmc
in
mov
sbb
outsb
iret
enter
push
int
jo
pop
inc
out
sub
scas
scas
push
aam
push
adc
mov
pop
lea
ljmp
cs
inc
xor
cmp
cmpsb
imul
imull
cmc
stos
adc
xchg
gs
int3
scas
loop
in
dec
ss
fdivrp
xor
xchg
aas
loopne
sahf
outsl
cli
mov
push
dec
cmpsb
xor
mov
stc
mov
cmp
mov
fdivrl
popa
arpl
adc
dec
or
mov
out
mov
xchg
xchg
cld
mov
inc
sti
sbbb
mov
daa
sub
jb
pushf
mov
pop
mov
jnp
aaa
stos
enter
divl
aaa
out
xchg
cwtl
inc
jmp
lds
jp
outsb
ret
cmp
sarl
xchg
xchg
dec
int
sub
lods
pop
xchg
sbb
and
cltd
or
xlat
push
sub
adc
loope
stos
xor
pop
fisttpll
jl
inc
xor
mov
dec
xor
xchg
sbb
adc
shr
mov
cmp
enter
movsb
pop
mov
mov
push
mov
xchg
xlat
outsb
in
sub
jnp
repnz
pusha
fimuls
pop
push
testb
subl
jl
sarl
shlb
mov
pop
cmpsl
push
aad
aam
inc
mov
call
outsl
jmp
jns
jge
inc
es
adc
test
testb
add
mov
test
int
shrl
imul
push
and
cmp
mov
lea
inc
mov
sbb
out
fs
jg
insb
outsb
inc
pop
adc
pushf
gs
inc
jne
jno
mov
scas
in
in
out
stos
push
cmpsb
mov
test
mov
das
mov
leave
jbe
sbb
fnstcw
ss
sub
inc
out
pop
sub
cmovp
jge
jle
popa
and
mov
lret
call
mov
shr
sti
imul
ficomps
push
out
and
sub
adc
xor
mov
inc
inc
jae
mov
xchg
nop
jge
jnp
nop
mov
hlt
in
fdiv
fwait
stc
push
cld
cmpl
js
sub
cmpsb
jp
sbb
adc
sub
in
xchg
push
lock
cli
push
test
in
testb
inc
push
shlb
rcrb
jp
addr16
into
xchg
in
int3
mov
or
jbe
xchg
ljmp
push
jns
shrl
xor
xchg
popf
pop
lea
mov
rcr
sub
icebp
jo
or
pushw
adc
cmp
add
insb
mov
lock
jb
clc
and
cmp
dec
cmp
dec
push
fs
and
in
xchg
aad
lcall
cmp
movsl
fcoms
push
fsubs
xlat
lods
scas
jge
mov
jg
dec
lcall
ret
stos
jecxz
fdivrp
cmpb
mov
sbb
cmpsl
jp
xlat
mov
dec
cmc
mov
aaa
dec
fstl
sbb
popa
jns
sub
in
or
imul
and
loopne
js
lods
insb
ret
test
dec
dec
sub
arpl
fcomps
es
shll
xchg
fsubs
xchg
into
shrb
jno
cmp
mov
daa
xor
cs
lret
aad
pusha
cmp
sbb
mov
or
xchg
out
inc
addl
das
rorl
neg
mov
add
or
jb
add
loopne
push
std
jl
ljmp
ret
in
lcall
int
mov
mov
jae
jl
inc
push
push
iret
mov
sbb
jecxz
je
out
jge
lcall
mov
jle
fwait
jb
mov
cmp
pop
xor
aaa
cmp
sbbb
and
dec
lcall
pop
lods
mov
sbb
je
cltd
or
enter
mov
xor
mov
add
xchg
inc
inc
mov
xchg
mov
xchg
cmp
out
arpl
cli
test
in
pop
push
dec
push
jb
fcom
test
cs
push
sti
gs
shlb
js
sbb
xchg
xor
fsubrs
xchg
popf
push
cmp
sub
mov
push
inc
sbb
dec
outsl
xor
outsb
imul
lcall
ljmp
je
mov
sbbb
mov
sbb
sbb
aad
xchg
rol
ss
bound
lods
mov
mov
cmp
mov
mov
and
pusha
pop
ss
cwtl
jg
hlt
in
push
mov
je
mov
jnp
loope
mov
insb
arpl
pavgw
mov
outsb
jo
dec
fcmovb
lret
aas
push
insl
push
jmp
pop
call
mov
fs
jb
inc
cmpsb
loope
scas
outsl
scas
jns
repnz
xchg
jnp
pop
mov
push
insb
aas
push
nop
mov
jno
mov
arpl
jb
jbe
lea
dec
cmc
sti
scas
int3
out
lock
hlt
test
or
xchg
push
xchg
xchg
adc
cmp
les
or
and
outsb
idivb
pop
fcmovne
jno
cmp
movsb
mov
std
aaa
sbb
xchg
outsl
lcall
fisttps
ret
xlat
xlat
sbb
lock
fistps
das
fs
push
xor
sub
cmpsb
in
out
shlb
cmp
mov
insl
adc
subl
fucomp
stos
test
sarl
pop
jmp
cmp
add
std
int
hlt
leave
and
jo
ficompl
adc
insb
jb
or
or
sahf
leave
or
leave
ljmp
cltd
mov
icebp
lret
in
jecxz
cmp
inc
pop
fistps
fstp
jnp
jmp
pop
scas
movsb
lods
xchg
call
xchg
ja
jp
dec
mov
xchg
cmp
test
jo
shl
xor
cltd
idivl
xlat
es
xchg
cs
movl
clc
filds
mov
pop
cld
mov
sbb
mov
bound
lret
xchg
sub
mov
insb
xchg
mov
pop
mov
movsb
mov
jno
mov
xor
xchg
leave
mov
mov
ret
in
cmc
xor
push
cli
cmp
jns
add
mov
sbb
mov
xchg
jne
cmp
push
addr16
and
mov
rcrb
add
out
adcl
aad
pop
aam
jmp
hlt
mov
adc
jp
test
daa
dec
mov
dec
mov
and
xlat
push
loopne
scas
dec
push
call
add
in
insb
mov
mov
xor
pop
xchg
popf
push
lcall
outsb
pusha
sbb
fsubl
lock
lods
mov
mov
enter
jo
and
out
inc
icebp
insb
sub
or
or
mov
mov
jmp
ja,pn
cmpsb
pop
mov
jne
imul
cmp
in
mov
daa
push
sub
insl
push
arpl
inc
mov
int
xor
je
cmpl
jge
in
cs
push
loope
sub
add
loop
mov
lock
lods
test
add
mov
push
add
cltd
in
aad
mov
dec
jae
popf
mov
xchg
outsl
ds
pop
enter
rorl
sub
pusha
jae
cmpsb
xor
dec
push
dec
mov
cmp
pop
test
jno
in
xchg
cmp
sub
pop
sbb
fiaddl
mov
jo
movsb
rcl
ret
shll
cwtl
sbb
shl
mov
into
xor
out
push
jae
xchg
call
xchg
jmp
loope
fs
and
ja
ret
adc
dec
mov
in
dec
ljmp
xchg
jmp
push
lods
in
ljmp
xor
dec
inc
lds
test
insl
lret
lret
hlt
xor
mov
outsb
cmp
lods
mov
fwait
lods
test
pop
dec
mov
stos
mov
push
pop
or
lods
stos
pop
nop
push
xlat
add
xchg
sbb
sti
push
add
or
mov
daa
jns
js
xor
cmpsl
je
cld
xchg
mov
call
push
sahf
lcall
lret
out
bound
les
lods
call
xor
jmp
pop
mov
insl
shll
add
jp
or
std
loope
dec
add
ljmp
filds
jae
add
cwtl
enter
in
mov
cmpxchg
mov
lcall
jmp
dec
scas
je
push
xchg
sbb
mov
inc
scas
push
mov
inc
adc
cli
inc
jae
xchg
stos
int3
mov
lds
mov
mov
dec
sbb
cli
mov
push
lods
ljmp
push
in
lcall
std
cmp
hlt
nop
ja
xorb
test
jbe
data16
jae
pushf
mov
xchg
in
and
outsl
popa
or
or
in
pop
cmpsb
jge
push
gs
dec
cmpsl
scas
dec
mov
push
jo
pop
pop
adc
mov
mov
sub
xor
mov
or
fisttpl
in
icebp
pop
mov
or
push
in
loope
fwait
sbb
push
fisttpl
lods
fisubrs
xchg
test
fsubp
pop
cmp
movsl
adc
fsubrp
mov
aad
mov
mov
fstps
hlt
adcl
push
cmpsl
lea
or
push
iretw
js
icebp
cmp
sub
inc
jne
sub
or
hlt
outsb
adc
cmp
ljmp
jae
jmp
mulb
xchg
ljmp
xor
push
xor
push
roll
lods
je
mov
or
data16
test
arpl
daa
arpl
push
mov
repnz
jne
jno
push
inc
in
pop
enter
or
stos
pop
mov
fcoms
pop
lcall
pop
addr16
in
jle
mov
out
mov
dec
sbb
mov
lret
adc
fdivrl
jp
xor
out
popa
mov
imull
lret
xor
pop
shlb
shl
int3
xchg
popw
cltd
pusha
in
push
sub
cmp
push
push
push
dec
push
fistl
push
jne
pop
lret
test
xchg
out
push
xchg
sub
in
sub
leave
fcompl
xchg
out
cmpsb
sub
outsl
lea
cwtl
mov
mov
ljmp
jnp
fcompl
notb
and
das
inc
cmpsb
jmp
jle
mov
int3
inc
lret
sbb
sbb
adc
jno
and
je
fsubl
scas
xchg
and
mov
cmpsl
push
bound
loope
popf
outsl
arpl
adc
cli
je
pusha
sahf
pop
push
cmp
lock
or
repz
xor
sti
add
pop
add
fisubrs
arpl
and
sbb
mov
clc
filds
and
fwait
push
xor
cmp
mov
dec
shl
jb
out
jge
xchg
lods
mov
pop
aam
adc
loope
lret
movsl
xchg
xchg
loope
js
xor
out
les
xchg
out
ljmp
lahf
jb
in
push
sub
in
push
aad
xor
lods
les
outsb
dec
cmpsb
or
pop
dec
scas
mov
dec
rcrl
mov
jne
mov
hlt
mov
notb
je
gs
rorl
mov
xchg
pop
in
movsb
dec
aad
rclb
lret
out
jmp
add
mov
in
adc
sbb
mov
mov
or
cli
inc
mov
loop
mov
inc
lcall
add
ljmp
daa
adc
dec
sbb
sub
sahf
fnstenv
sbb
push
sub
shll
mov
dec
jbe
data16
cmp
int
ds
insl
dec
inc
inc
loopne
and
loope
dec
lahf
adc
adc
sarl
fbld
pop
ss
sbb
aam
lret
in
rcrb
cmc
adc
adc
or
int3
xchg
aad
jge
inc
aam
test
push
ljmp
popf
jl
dec
movsb
xchg
xchg
push
test
sbb
sub
sub
decl
xor
and
loop
adc
dec
sub
sub
sub
inc
xchg
addb
push
push
push
push
adc
movsb
push
mov
and
sbbb
add
adcb
mov
pushf
adc
push
push
cmpsl
pop
cmpsb
cld
lds
movb
and
jae
mov
cmc
std
cmp
add
mov
cmp
aas
cmp
fcompl
jl
ja
aaa
xor
fistps
fdivrp
lds
imul
ds
stc
imul
cmpsl
pop
cld
pusha
jecxz
ljmp
xchg
pop
repz
xchg
xor
pop
or
xchg
or
push
mov
ficoml
aam
test
sbb
imul
fdivp
jg
out
leave
ss
cmpsb
subps
test
fbstp
fs
sub
sarb
icebp
daa
add
fsubp
dec
movsb
out
loope
mov
test
into
shr
mov
push
lods
fwait
inc
pushf
pop
arpl
mov
fcoml
sarl
cmp
cmpsb
mov
clc
js
das
push
aas
inc
andl
enter
fstpl
stos
iret
xchg
mov
iret
cmp
aas
cmp
bound
out
fbstp
movsb
xchg
mov
mov
push
lcall
in
jb
dec
pop
jae
jb
xchg
jecxz
dec
arpl
pop
cmp
imul
jg
in
fbstp
mov
ja
jae
mov
addr16
xor
nop
int3
dec
jne
mov
sub
fdivrl
ja,pt
cmp
inc
js
cmpsl
cmp
mov
lea
cmc
clc
pop
loopne,pn
dec
push
dec
jmp
inc
fldt
and
scas
cmp
mov
jae
sti
push
add
mov
xor
fstps
sub
clc
ror
adc
push
dec
mov
mov
add
dec
lahf
dec
orb
aaa
lret
into
push
pop
int3
mov
bound
sub
xchg
nop
push
push
sarb
icebp
xor
cmpsl
mov
dec
lret
nop
outsb
jmp
cltd
pushf
jl
add
cld
ljmp
xor
sub
cmpsl
sbb
cmp
out
icebp
add
mov
jmp
test
fcmovnu
int
sub
cwtl
iret
mov
push
mov
xor
inc
and
fwait
mov
inc
mov
loop
mov
sbb
bound
ret
xorl
jge
outsb
sbb
sub
loopne
sub
add
xchg
dec
sbb
cmp
lahf
and
dec
out
mov
pop
mov
cmpsl
add
outsb
lock
cld
inc
sti
mov
cmc
dec
movsl
jle
xchg
pop
mov
stos
daa
lods
ss
push
mov
addr16
xchg
pop
dec
aam
cwtl
add
lahf
rcrb
or
test
jle
test
outsb
push
movsl
mov
or
aad
add
sbb
mov
stos
jb
pop
in
sbb
les
sahf
pop
adc
fisttpl
stc
mov
mov
mov
mov
mov
cmp
xchg
fsubs
cmpsl
fcoms
enter
dec
xlat
test
cli
cmp
je
scas
in
sbb
incb
mov
push
xchg
sbb
stos
adc
inc
and
cmpsb
imul
shl
and
sarb
pop
test
in
pushf
lods
jmp
mov
fwait
and
mov
xlat
inc
cltd
icebp
jecxz
test
ds
adc
dec
stc
bound
fucomp
dec
mov
cld
jno
mov
or
xchg
cmp
in
shlb
pop
addr16
aad
cmp
ja
mov
push
jns
push
pop
xchg
jecxz
jl
push
movb
cld
inc
icebp
cld
dec
and
mov
fildll
cmp
ret
jno
ljmp
mov
into
into
mov
push
popf
mov
add
enter
jp
or
or
dec
out
mov
dec
stos
push
in
sub
ret
dec
daa
or
ficomps
adc
out
les
mov
adcl
pop
adc
mov
inc
mov
lcall
cmp
stc
add
xor
push
cmc
push
and
push
ficomps
lcall
bound
sbb
int
jbe
test
sub
fs
scas
in
push
lea
cmp
adc
or
pushf
sub
test
pop
outsb
daa
fst
lods
cmp
movsl
jmp
repnz
sub
andb
add
pop
mov
enter
nop
pop
aam
adc
std
call
mov
imul
xchg
mov
insl
sahf
pop
dec
movsb
adc
stos
lret
outsl
dec
mov
add
shlb
mov
inc
mov
lahf
arpl
je
pushf
push
cs
push
cmp
push
imul
push
sbb
or
repnz
xchg
clc
fmull
ss
sub
and
inc
cmp
mov
inc
pusha
int3
fstl
into
xchg
jp
inc
div
scas
enter
movsb
lods
pop
jb
xchg
punpcklbw
jge
jbe
popf
sbb
dec
mov
jmp
xor
jns
jle
insb
mov
imul
scas
jb
iret
xor
inc
dec
mov
into
xchg
sti
loop
push
fwait
inc
or
movsl
imul
xor
fcmovnbe
movsb
pop
mov
mov
sti
push
iret
mov
cwtl
cli
ljmp
xchg
sub
xchg
cmpsl
mov
push
addr16
xchg
cwtl
fmull
lea
sbb
pop
out
arpl
enter
fwait
xchg
ja
xor
push
mov
pop
out
fists
jl
call
xchg
mov
mov
xchg
and
fstpl
repnz
subb
push
sub
repnz
fwait
js
xchg
sub
fsubrl
pop
lods
loope
call
loop
lret
aaa
test
jg
jnp
out
jnp
dec
movsl
mov
jge
les
mov
ljmp
sbb
add
scas
test
sub
jno
cmp
or
repz
imul
mov
mov
and
cmp
repnz
cmp
lods
pop
fsubs
mov
mov
div
mov
in
test
aaa
lret
mov
jmp
iret
jge
and
or
mov
jns
cs
es
imul
mov
aaa
pop
sti
xlat
outsb
mov
mov
pop
test
sub
dec
lods
sub
out
inc
jae
int
sub
pusha
mov
inc
mov
inc
inc
or
push
pop
cmp
out
shll
pop
dec
mov
mov
repz
jmp
jnp
push
cmovg
sub
outsb
icebp
mov
push
repnz
xchg
pop
mov
fadd
out
pop
ljmp
rcr
sbb
jae
xchg
jb
incb
fimuls
in
dec
or
inc
ljmp
cwtl
push
stos
sub
add
push
addr16
ss
push
mov
mov
jl
or
xchg
das
mov
push
or
repz
cmpsb
repnz
out
repz
fwait
dec
mov
jne
stos
push
xlat
andl
sbb
pop
stos
xor
popf
ss
movaps
sbb
aam
jmp
pop
jns
lret
mov
leave
ret
aam
repz
mov
jns
dec
lock
push
cwtl
stos
mov
lods
std
dec
mov
mov
pop
popa
mov
mull
pop
outsb
sti
out
mov
mov
gs
call
dec
mov
frstor
je
mov
insb
repnz
inc
stos
fdivrl
rorb
pushf
fbstp
and
fabs
dec
mov
jne
cld
iret
xor
xchg
icebp
pop
lret
loopne
fstl
outsb
cmp
mov
xor
xlat
stos
js
pushf
in
cs
dec
jmp
ffree
bnd
mov
fmull
je
int3
sub
cmp
mov
lods
pop
int3
xchg
cmp
lret
mov
adc
mov
or
mov
or
scas
jmp
fisubs
aaa
or
into
mov
call
stos
xorl
rorl
sarb
fwait
dec
sbb
add
mov
nop
in
stos
jns
mov
cmpsl
or
push
push
pop
insl
fs
test
dec
stos
lds
pop
xchg
insb
jbe
out
lea
mov
jns
lea
loope
mov
mov
ret
push
cltd
jnp
cwtl
aam
shl
cli
jle
jbe
adc
es
sbb
sbb
filds
mov
dec
adc
adc
scas
xor
inc
fsubl
or
mov
mov
adcl
imul
cmc
jecxz
xor
jecxz
out
sbb
mov
dec
lret
jb
inc
mov
mov
cmc
dec
cmp
or
pop
pop
cmp
jle
push
and
adc
ret
arpl
je
pusha
push
jnp
or
imul
movsl
mov
adc
mov
ret
push
cmpl
mov
or
lcall
test
ss
xchg
aas
mov
sarb
popa
push
out
repnz
xor
clc
inc
sbb
dec
pop
jb
inc
and
frstor
cmpsl
cmp
pop
mov
and
cmp
pop
push
xlat
cmp
xchg
bound
cmp
inc
sbb
in
push
xorps
movl
sub
shll
push
jne
cmp
dec
test
je
hlt
xor
call
mov
mov
lret
xchg
pop
testl
xchg
arpl
fcoms
js
push
negl
mov
ret
jp
stos
fldenv
sub
cmp
loop
incl
orb
loopne
arpl
cmc
test
cli
lods
data16
pop
das
jg
xorb
lea
lods
xor
aam
cmp
in
add
data16
xchg
xchg
rcrl
mov
out
ljmp
adc
xor
or
adc
lret
iret
outsl
sbb
in
fdivrl
jns
mov
or
in
outsl
cmp
fldt
rcll
loopne,pt
pop
aaa
xlat
adc
jle
xchg
xlat
popf
mov
movsl
pop
jns
xor
xlat
aaa
in
jbe
stc
push
mov
fcompl
leave
lret
sbb
enter
mov
or
in
push
jecxz
xor
icebp
imul
xchg
arpl
sub
cmp
mov
nop
mov
aas
shl
adc
arpl
fnstenv
in
xor
aas
orl
mov
in
sub
aad
aam
aaa
clc
lods
push
into
jp
cmpsl
dec
jbe
shrb
jp
fidivrs
jae
aad
int
lock
sti
adc
rorl
mov
and
aam
sbb
popa
cli
mov
pop
xor
mov
repnz
jl
aad
cmp
mov
fdivrp
test
rcrb
inc
cwtl
in
jecxz,pt
ret
test
mov
cmpsl
outsb
sti
mov
mov
inc
inc
loopne
pop
shll
mov
cmp
push
outsl
ss
push
mul
xor
push
push
mov
mov
aaa
outsl
mov
mull
xchg
stc
lcall
jne
leave
push
adcb
dec
fdivrs
sub
stc
mov
xor
movw
jno
aaa
push
mov
movsl
sti
ja
mov
repnz
jmp
jmp
out
dec
push
xor
loop
pop
inc
mov
out
stos
cmp
aas
into
int3
lds
cmp
inc
int
pop
mov
cmpsl
inc
add
outsb
mov
sbb
cmpsb
pop
arpl
fidivl
in
cmc
cmp
mov
mov
mov
divb
pop
push
push
test
ss
ja
and
mov
int
inc
jecxz
movsl
rolb
test
sbb
mov
jno,pn
inc
mov
in
movsb
fwait
lret
mov
add
mov
jle
gs
cmp
pop
ja
mov
outsl
rcrb
xchg
js
scas
pop
mov
cmpsl
adc
rcl
lods
or
icebp
push
sbb
sbb
shlb
je
sub
sbb
push
inc
sbb
insl
fdivrl
testb
and
inc
sbb
sbbb
stos
adc
mov
xor
or
mov
ja
sbb
insl
movsb
test
inc
shrb
xlat
sub
mov
js
jnp
repz
inc
clc
jae
dec
popf
jle
jnp
mov
mov
hlt
sub
sti
mov
aaa
out
enter
nop
push
add
inc
xchg
rorl
sahf
inc
pusha
cmp
add
sbb
js
pop
lock
lock
or
cmpsb
add
inc
inc
pop
popa
jns
rcrb
or
add
aaa
add
mov
les
hlt
jne
xorb
ljmp
jle
std
addr16
mov
aas
sub
push
rcrl
jle
jmp
inc
mov
aad
xchg
xchg
fnstsw
and
push
insl
pop
inc
or
repz
pop
inc
inc
mov
neg
mov
fidivrl
xor
mov
add
jge
mov
add
xor
sub
add
and
push
or
mov
add
nop
fcoms
xadd
mov
orl
rcrb
mov
push
add
js
mov
push
testb
andb
adcb
popa
add
addl
sub
cmp
aas
or
pop
mov
or
addb
add
nop
push
or
lcall
and
ret
rorb
mov
or
aam
inc
test
ret
ret
daa
jns
movsl
or
clc
push
add
and
push
add
push
add
lods
add
inc
push
inc
cmp
xchg
add
hlt
push
inc
hlt
xadd
add
outsl
or
or
and
adc
sub
sub
add
roll
add
mov
test
add
add
add
xor
shl
add
rcrb
mov
add
or
outsl
pop
mov
add
inc
add
pop
call
aam
adcl
in
sbbl
clc
and
push
add
pusha
adc
push
insb
pop
rorb
ret
ret
ret
add
adc
and
sbb
or
push
int3
loopne
cld
daa
add
test
add
add
mov
adc
add
testl
mov
and
adc
lret
jg
imul
or
data16
or
mov
divl
sahf
nop
or
std
insb
and
pop
pop
aam
movsb
push
xchg
repz
add
notb
and
adc
and
cwtl
sub
fdivs
push
dec
and
mov
xor
test
shrl
insb
push
addl
push
jns
lock
and
adc
out
sahf
cmp
sbb
test
pusha
rolb
mov
inc
or
ret
andb
mov
add
add
lea
shl
push
loopne
add
adc
rcll
outsb
adc
aaa
jno
xchg
inc
xchg
xor
out
push
and
ja
mov
mov
pop
mov
pop
incb
fcomip
sbb
pop
in
cld
sub
fucomip
aas
adc
rcll
lods
lea
xlat
or
or
jnp
sbb
cmpsl
cmpsl
xchg
push
fdivrl
pop
sbb
test
mov
testl
mov
sbb
add
mov
mov
cltd
mov
lock
fidivs
jecxz
out
loop
lds
repnz
pop
mov
arpl
pop
out
movsl
aas
xchg
stc
mov
mov
ljmp
lea
in
sub
iret
cwtl
adc
pop
xchg
mov
jecxz
cli
loop
mov
adc
nop
adcl
push
cmpsl
rcrb
cwtl
fistpll
leave
andb
out
loope
dec
sarb
jae
stc
movsb
fdivrs
mov
sub
xor
push
and
sbb
jp
int3
xchg
bound
mov
repnz
push
cltd
inc
inc
les
xchg
dec
bound
xchg
pop
jecxz
mov
push
mov
push
pop
mov
xor
sbb
adcb
lock
les
lret
sub
inc
repz
stc
test
xchg
mov
popf
lcall
jge
mov
xor
dec
movsl
push
fdivp
daa
out
mov
pop
sub
movsl
test
push
shl
pusha
pop
or
icebp
lock
adc
lret
jmp
out
adc
and
stos
mov
and
or
push
add
push
mov
int3
stos
out
xor
mov
jo
daa
mov
stos
and
xchg
mov
sub
arpl
js
or
lea
ret
cmp
pop
test
push
ss
xchg
shl
arpl
test
fcoms
fisubrs
stos
dec
xchg
dec
imul
pop
shr
push
pop
shll
je
add
xchg
pop
push
sub
jl
arpl
cmp
mov
xchg
or
xchg
dec
inc
hlt
xlat
inc
jle
adc
daa
imul
xchg
adc
mov
leave
test
sub
popa
mov
cmpsb
or
xchg
in
and
xchg
sub
fs
lds
xor
pop
jg
pop
pop
test
rclb
mov
mov
nop
repz
jns
sbb
xchg
mov
mov
sbb
mov
inc
in
and
ret
jns
xchg
out
outsl
stos
mov
adc
dec
jnp
add
pop
test
les
inc
lcall
adc
enter
lods
cmpsb
mov
lds
inc
jno
sub
push
movsl
cli
test
xchg
dec
call
pop
lret
cmpsb
mov
lret
xor
inc
repz
inc
ret
shrl
sub
shll
jp
push
pop
data16
adc
in
or
mov
mov
adc
insl
sub
ret
xor
mov
shll
scas
push
pop
es
iret
lods
insb
stc
mov
lods
cmp
pop
push
sub
sbb
xor
sub
pop
sub
mov
mov
aam
in
sub
movsb
test
push
mov
mov
rcrl
jo
cwtl
daa
push
push
mul
clc
lret
cmp
shlb
or
xlat
push
and
push
add
mov
push
lods
loop
xchg
push
sbb
inc
pusha
xchg
fdivp
inc
pop
sub
xor
xor
loopne
imul
sar
rcrb
rorb
into
and
gs
sarb
int
inc
inc
push
jno
sbb
jne
lods
and
xchg
lret
push
mov
popa
xor
inc
fmuls
push
jbe
pop
icebp
dec
bound
lock
test
cli
lods
mov
int3
mov
addl
movsl
repz
push
inc
fistpl
dec
sbb
pop
out
xor
dec
fs
cmp
cmp
stos
jge
pop
adc
lcall
or
fisttps
mov
push
jp
sub
sbb
jge
fs
xchg
arpl
dec
and
loop
jne
ret
lret
xchg
cmc
or
jecxz
or
sahf
std
pop
mov
cs
cmpsb
pop
and
xchg
ret
and
sub
xor
adc
cmpsb
jl
movsb
cmp
hlt
andl
inc
xchg
add
and
imul
mov
mov
cmp
push
mov
jns
jo
data16
add
loop
push
or
movsl
push
push
inc
iret
jp
mov
mov
inc
mov
lea
dec
push
inc
adc
adc
jb
mov
aam
loopne
push
adc
ss
jp
lods
dec
in
sbb
fmuls
lods
mov
xor
inc
insl
sbb
ret
gs
pop
fisubrl
xchg
jge
mov
in
push
jle
xor
xor
stos
cmp
fs
mov
test
or
insb
lret
daa
xchg
decl
sub
lcall
jle
add
inc
mov
out
mov
cmp
mov
add
scas
arpl
pop
push
out
mov
pop
dec
cmp
nop
and
cmp
subl
js
insb
lret
packssdw
xor
int
sub
cmp
into
add
or
mov
stc
xlat
iret
mov
stos
scas
imul
push
fsubl
scas
or
lods
lods
jl
loope
scas
jnp
dec
insb
jl
lret
sub
xchg
leave
dec
xor
lcall
stos
test
push
sqrtps
pop
pop
mov
xchg
cwtl
mov
mov
stos
dec
mov
push
or
es
fcom
cmp
mov
mov
mov
and
lock
pop
stc
ret
mov
sahf
dec
jno
orl
pushf
xlat
jp
xor
sub
or
push
mov
iret
jg
lcall
mov
inc
mov
nop
push
cmc
arpl
adc
or
jmp
std
arpl
or
mov
cmp
out
xor
subl
mov
jne
aas
lret
xchg
clc
ret
or
cmpsb
test
ss
pushl
arpl
or
inc
popa
decl
xchg
dec
cli
cli
cltd
lahf
js
jnp
fwait
and
jne
cld
lods
subb
fdivr
mov
shlb
dec
shlb
inc
inc
lods
mov
and
scas
es
adc
out
push
jge
in
in
das
fcompl
inc
xchg
jle
ret
hlt
in
sahf
mov
test
mov
imul
inc
or
lea
rolb
pop
js
adc
inc
js
jo
mov
xchg
into
daa
mov
add
pop
cmp
nopl
cld
push
mov
dec
dec
mov
mov
push
sbb
cmp
repnz
rclb
xor
push
or
xor
dec
push
mov
push
inc
in
fsubrs
xchg
lret
xor
sub
and
dec
push
push
call
cmp
inc
cmp
mov
jae
cs
insb
add
nop
movsb
mov
mov
adc
mov
jns
push
and
and
dec
or
push
add
cmp
mov
loop
push
mov
sti
ja
cmpsb
mov
js
dec
mov
mov
xchg
add
adcl
idivb
pop
push
and
sub
fidivs
daa
enter
pop
pop
mov
scas
out
lods
leave
test
adc
clc
fsubp
lea
movsb
sub
pop
sbb
mov
push
cli
shrb
mov
sbb
test
xor
adc
mov
push
mov
arpl
or
es
popl
adc
jne
lret
shrb
mov
sti
fistpl
xlat
push
xor
repnz
mov
cli
adc
xlat
sbb
ss
insl
in
sub
cs
out
push
lret
jle
fadds
shll
aad
inc
js
mov
adc
loopne
xor
jmp
cmp
add
movsl
adc
jmp
loop
repnz
push
push
jno
pop
inc
jno
mov
inc
iret
je
xchg
lock
dec
scas
movsl
fbld
and
mov
fisubrs
pop
leave
dec
stos
mov
jno
rcrl
out
cmc
jns
daa
adc
test
adc
adc
nop
pop
in
mov
int3
or
sbb
mov
mov
push
enter
sub
imul
mov
shlb
and
sbbl
ror
mov
or
repnz
repz
out
test
out
stc
ret
into
mov
or
add
cli
cmpsb
cmpl
cmp
mov
daa
pop
cmpsl
lcall
cmp
push
in
cmp
ja
jmp
sarl
enter
daa
pop
fwait
aaa
rcll
push
push
ljmp
pop
bound
cltd
fcoms
jmp
out
pop
out
popf
enter
xchg
pop
cmp
cmpsb
hlt
in
mov
clc
adc
cli
pop
or
inc
fucomp
xor
cltd
mov
push
jb
xchg
stos
adc
je
es
xorb
cmp
fmuls
mov
mov
push
inc
cwtl
add
mov
mov
int
dec
jge
pop
loop
mull
add
and
jge
push
xor
xor
fs
mov
mov
sub
pop
push
mov
xor
and
sub
mov
push
push
data16
push
add
cwtl
mov
loopne
and
xchg
cli
movsl
pop
orl
sub
xchg
mov
add
lea
sbb
mov
std
pop
pop
loope
rorl
mov
xchg
jb
jmp
xor
daa
inc
xchg
mov
or
adcl
orb
lahf
inc
int3
pop
mov
cmp
gs
jnp
ficompl
and
lahf
popa
ljmp
pop
mov
pop
mov
and
cmp
push
pop
ja
jns
outsb
xlat
pop
repz
sub
js
sbb
push
jecxz
inc
out
jb
out
xor
lret
ljmp
pushf
jnp
cli
ljmp
popa
sti
pop
pop
mov
movsl
sub
mov
fdivs
mov
daa
jg
push
xchg
gs
sbb
icebp
or
cmpsb
in
cld
inc
add
popa
xor
sbb
stos
xchg
push
xor
into
cmp
test
mov
or
xchg
lcall
cmpsb
sarb
push
mov
xor
inc
in
jmp
fcomi
inc
xor
mov
cwtl
sub
imul
cli
push
and
test
es
sbb
popf
push
movsl
ds
cmpsb
addr16
lds
call
orb
imul
jp
cmp
xchg
xchg
sbb
xchg
pop
mov
stc
xchg
mov
leave
aad
insl
add
or
in
dec
xor
push
dec
mov
int3
xor
xor
jno
dec
outsl
or
jb
xchg
jbe
neg
sbb
pop
loope
cs
movsb
lcall
jmp
mov
je
dec
mov
mov
add
jno
lcall
dec
mov
cltd
shlb
ss
vmovntps
xor
jne
insb
xchg
imul
adc
sbb
ds
mov
or
mov
dec
push
mov
mov
inc
nop
outsb
test
stc
lret
push
mull
add
fstl
mov
xchg
pop
stos
inc
adc
mov
cli
sbbl
mov
jbe
scas
pop
loope
mov
jle
mov
and
movsl
in
popf
cmp
out
cmp
push
inc
fisubl
cmp
mull
cli
lods
stos
xchg
pop
add
imul
mov
cmp
scas
and
adc
lods
inc
aas
sar
pop
and
lds
xor
sahf
dec
mov
xor
xor
and
jb
pop
cli
popf
lcall
repz
dec
movsb
movsb
addr16
test
add
jge
cli
ret
fldcw
shrb
jp
rorl
movsl
or
pop
cmp
outsb
cmp
xlat
push
in
lods
jl
pop
xchg
sbbl
testb
jmp
imul
or
cmp
int
pushf
cmp
repnz
loop
hlt
jecxz
add
iret
jbe
clc
lret
das
adc
mov
inc
mov
push
lods
roll
enter
push
aad
adc
and
es
add
mov
aad
pop
dec
dec
ds
sbb
jne
xor
inc
gs
in
mov
xchg
cli
pop
push
cmp
arpl
adc
fbld
xlat
enter
faddp
mov
xor
mov
push
sbb
mov
loopne
lea
push
int3
jmp
jno
dec
cltd
mov
mov
in
aas
das
jnp
xchg
mov
pushf
sub
mov
pop
rolb
jns
or
push
lret
int3
jo
inc
xchg
in
je
ret
jp
push
imul
stos
xor
dec
dec
lods
fidivrs
out
sbbb
jg
loope
cmp
inc
add
andl
push
add
push
roll
dec
jns
js
clc
mov
fs
mov
xor
iret
sahf
outsb
movsl
and
lahf
cmp
ss
dec
fwait
cmp
lock
les
cmp
cmp
or
or
sbb
jb
negb
or
pushf
leave
aam
notb
xor
push
scas
cmp
cmp
mov
dec
bound
std
lret
push
mov
adc
mov
out
pushf
ror
outsl
cs
ljmp
and
pop
pushf
inc
insb
shl
sub
jecxz
xlat
mov
sbb
mov
icebp
cmpsb
cld
pop
fiaddl
cmp
les
mov
mov
les
xchg
push
cmpsb
adc
inc
addl
sub
mov
xchg
or
sub
cltd
pop
iret
fdivrs
add
addb
jmp
leave
cmpsl
lock
fcompl
mov
fiadds
jecxz
nop
push
mov
sbb
push
leave
xor
pop
mov
xor
sub
je
push
add
inc
jbe
cltd
loop
scas
insb
jns
xchg
adc
inc
test
add
mov
out
popa
cmp
pop
mov
mov
in
and
inc
aam
pop
movsl
nop
scas
sub
bound
xchg
mov
xchg
or
dec
push
mov
sahf
decb
xchg
or
sub
add
dec
aam
add
cmpsl
jnp
lcall
adc
addr16
nop
fmul
cmpsl
loopne
outsl
inc
lea
jne
cli
push
cmp
imul
jae
pop
pop
iret
xchg
cmp
lret
outsb
push
cmp
fwait
sbb
or
lcall
push
push
add
iret
sub
and
cli
insb
mov
iret
std
rolb
add
push
adc
orl
xchg
cmc
dec
lds
add
and
shlb
out
push
arpl
stos
mov
jecxz
jbe
push
add
jp
loope
sbb
je
scas
fimuls
mov
mov
stos
pop
in
ret
mov
mov
cltd
faddl
mov
jae
jns
insb
enter
in
xor
push
pop
mov
pop
add
dec
push
cltd
adc
addb
ljmp
scas
mov
and
sahf
push
cmp
outsl
push
mov
cmp
fsts
jp
push
or
sbb
and
pop
xchg
test
arpl
es
mov
mov
in
icebp
stc
or
pop
jnp
mov
xchg
std
in
hlt
sbb
aaa
cld
add
jmp
sahf
add
ljmp
jae
mov
lods
fcomps
repnz
or
or
clc
stc
dec
adc
cmp
mov
fcomp
sahf
dec
mov
inc
data16
lahf
push
sbbl
hlt
push
leave
dec
stos
push
gs
push
cmp
mov
adc
rolb
mul
push
xchg
ficompl
xor
unpckhps
add
mov
outsb
pop
cwtl
sbb
jno
aam
aam
in
cmpsb
call
sub
fdivr
dec
mov
mov
testl
clc
stc
jnp
out
mov
enter
loopne
jle
sub
xchg
inc
stos
jbe
clc
insb
jp
sub
insb
xor
push
in
push
add
dec
jmp
iret
aas
push
out
hlt
adc
xchg
movb
jl
lahf
test
loop
and
stc
rolb
sbb
fstpl
push
testl
or
lret
xor
xchg
jl
and
inc
test
lret
inc
mov
add
pop
imul
dec
out
cmp
jmp
sbb
sub
lods
sbbb
sbb
dec
fdivs
in
jno
xchg
cld
aas
shlb
mov
aad
mov
fistps
ja
pop
dec
js
adc
dec
das
cs
cli
arpl
mov
mov
jecxz
shrb
cmovg
in
fs
mov
fmull
sub
stos
clc
ja
imull
push
std
std
or
pushf
fwait
rclb
sub
cmp
int3
sti
cmp
mov
mov
cwtl
sbb
ret
jns
mov
sub
cmp
pop
imul
mov
or
aas
shll
loopne
cmp
xchg
repnz
movsl
lret
mov
xlat
hlt
push
shl
jp
enter
js
rcrb
int
mov
repz
xlat
adc
arpl
dec
fdiv
mov
add
xor
inc
and
les
call
pop
out
idiv
pusha
test
and
xchg
ljmp
repnz
sub
xchg
mov
scas
sub
sbb
pusha
icebp
icebp
jge
push
sbbl
loop
sub
push
shrb
call
loop
inc
sub
mov
jmp
or
lods
lods
js
mov
push
popf
popl
or
repnz
cmp
or
aaa
and
lret
xor
test
int
jae
lahf
add
sbb
dec
ret
ljmp
stc
mov
push
les
neg
cwtl
add
dec
jbe
dec
jbe
push
lret
enter
mov
pop
ret
push
ss
cmp
add
mov
sbb
pop
les
xchg
imul
sti
xor
sahf
andb
mov
and
dec
orl
add
in
push
xchg
scas
mov
or
add
xchg
push
xor
lret
or
cld
mov
jo
cmp
or
jge
jg
mov
ret
sub
and
push
sbb
lret
or
push
xchg
sub
mov
in
mov
fwait
pop
lods
fdivs
or
out
and
orb
xchg
or
dec
sub
loop
cmp
lcall
inc
push
stc
xor
shlb
sub
leave
clc
inc
shr
test
pop
repz
lds
mov
adc
pop
xchg
and
mov
test
ficompl
pop
aam
stos
scas
sub
sub
cmp
mov
dec
or
rol
pop
xor
cmpsb
aas
jae
out
xchg
dec
push
incl
outsb
into
fsubrs
inc
and
or
call
pusha
cmp
mov
pop
and
push
lock
lds
orl
xor
xchg
fwait
pop
testl
stc
nop
dec
and
mov
push
sti
test
inc
fimull
inc
sbb
sub
orl
mov
outsb
mov
mov
fdivrl
xor
mov
jo
pusha
out
sub
jg
and
add
cmpsl
enter
pop
adc
insb
xorl
xchg
out
pop
addr16
fdivrs
push
insl
jg
lds
es
scas
call
push
mov
xor
add
and
push
fcmovb
fistpll
lods
stos
ds
shl
pop
aaa
icebp
or
mov
inc
mov
test
nop
addr16
ret
clc
cmp
inc
aam
push
add
pop
sbb
outsl
mov
push
mov
sub
push
push
lret
push
mov
rol
mov
repz
hlt
and
out
cli
or
jns
jno
xchg
fcompl
push
gs
repnz
sbb
sbb
inc
mov
pop
lods
mov
add
mov
xchg
add
subl
lahf
xor
dec
push
or
loop
pusha
mov
push
mov
push
and
push
into
loop
inc
idiv
rorb
int
mov
cmp
call
lret
mov
adc
jecxz
fistps
dec
lods
xor
loope
ret
sub
mov
add
xchg
adc
xlat
push
and
aaa
jno
fwait
lret
imul
movb
jmp
bound
popf
ret
int
arpl
and
push
rep
push
mov
fisubrs
or
scas
dec
mov
pop
cmp
jge
cmpsb
mov
mov
testl
dec
adc
jmp
push
fs
movsl
scas
dec
xor
jge
inc
aas
push
sub
test
sub
and
bound
imul
mov
jb,pn
data16
je
repz
jl,pn
or
rcr
std
xchg
test
hlt
pop
fstpl
and
mov
aas
pop
adc
add
lods
jecxz
xchg
fists
push
das
sbb
mov
mov
in
sub
sbb
cld
movsb
jb
popf
cld
lods
or
sarl
and
or
push
out
imul
in
jle
xor
sarb
jg
jb
fsin
and
aam
mov
gs
cmpb
sub
popa
mov
push
mov
pop
inc
sub
pop
inc
mov
fs
ss
cmpsb
cmp
sub
outsb
scas
cmpsl
iret
or
inc
lret
inc
dec
push
aam
jns
mov
jbe
adc
out
cmp
pusha
repz
aas
cmp
push
or
xchg
imul
jecxz
mov
push
add
clc
xchg
addr16
ja
popf
xchg
xor
hlt
xchg
cmc
dec
mov
jns
pop
xchg
xor
jno
mov
data16
push
aad
cmp
aaa
pop
inc
movsl
faddl
mov
jnp
cmp
add
mov
jge
pusha
mov
xchg
out
std
add
ljmp
outsb
jae
cmp
adc
push
test
dec
and
dec
cs
aam
inc
aaa
and
ds
pop
add
aas
mov
incl
or
pushf
cwtl
xlat
mov
out
xchg
aam
cmc
lcall
in
or
add
xchg
push
sbbl
and
mov
nop
mov
insb
popa
jmp
std
or
pop
jle
into
daa
adc
lret
imul
xor
xchg
lds
sub
mov
mov
cld
scas
arpl
add
sub
sbb
sbb
and
push
xorb
test
xchg
and
mov
inc
cmpl
push
pop
loope
or
arpl
sub
in
mov
adc
fwait
call
xchg
mov
or
mov
outsl
cmp
xchg
sub
push
add
pop
and
jle
pop
xchg
nop
out
dec
dec
ret
jmp
insl
cs
fistl
and
repz
shrb
aad
jmp
fsubl
mov
jne
add
pop
dec
lahf
push
mov
scas
sub
mov
fnstcw
or
nop
rol
repz
scas
or
lds
lcall
xor
aas
inc
ja
loopne
dec
outsl
push
int3
sub
xor
push
shll
in
pop
shl
pop
cli
cmpsb
loopne
sbb
and
push
ror
js
mov
mov
xchg
rolb
jne
dec
bound
cmpb
pushf
out
adc
pushf
inc
push
loope
pop
es
fisubrl
inc
cwtl
jmp
inc
mov
icebp
add
testb
mov
mov
mov
xor
insb
fs
lret
imul
fldenv
inc
add
xor
lahf
or
mov
mov
gs
cli
pop
fistl
mov
sahf
mov
jg
jae
sbb
lret
sub
stos
pop
pop
cs
mov
xor
mov
mov
lahf
stos
imul
inc
pop
btc
jl
daa
int
jne
jg
mov
add
icebp
std
xor
bound
sub
mov
into
push
pop
mov
fstpl
push
mov
add
inc
cmpsl
pop
mov
lcall
xchg
or
and
jecxz
jns
pop
mov
cltd
adc
cmp
loope
mul
mov
test
movsb
ds
jne
notl
je
dec
pop
fmulp
pusha
mov
lds
and
adc
mov
popa
lods
test
pop
cmc
pmulhuw
lds
aad
jle
loop
gs
fbstp
iret
mov
ret
xor
xchg
js
out
or
dec
inc
repnz
fwait
and
inc
and
addb
xchg
xchg
dec
xor
imul
xchg
adc
lret
das
add
mov
loope
mov
add
fsubrl
repnz
push
fnstenv
add
outsl
jg
push
cmp
es
add
inc
cwtl
test
add
jmp
js
push
aam
dec
adc
jae
cmc
jl
addr16
pop
orl
jle
xchg
add
mov
and
mov
lods
mov
lods
imul
mov
cwtl
mov
clc
cmp
leave
or
into
and
push
mov
dec
js
fsts
pop
ss
imul
ss
xor
sbb
in
sbb
mov
cmp
imul
jae
call
mov
mov
cmpsl
xlat
decb
insl
push
xor
aam
add
jg
cs
jbe
andl
push
xchg
xchg
into
lods
mov
mov
jae
and
ror
sti
add
jb
cmp
leave
pop
mov
sbb
and
shlb
pop
dec
movsl
push
mov
mov
inc
pusha
push
mov
aaa
or
mov
or
xchg
sbb
movsl
insl
test
xchg
jb
rcrb
and
ljmp
add
sbb
cmp
or
or
gs
in
cld
mov
sahf
xchg
loope
dec
xchg
mov
inc
psrad
ja
andl
test
inc
push
jb
mov
rolb
pop
bound
out
repz
loope
repz
xchg
test
scas
lret
hlt
mov
adc
movsb
add
cwtl
inc
push
fbld
ja
repnz
jae
jno
add
nop
test
in
in
leave
cwtl
mov
and
xchg
sahf
addr16
out
jns
add
fstps
cmp
push
in
mov
jmp
and
cmp
jle
xor
outsl
pop
sub
push
jg
popf
fldcw
cmp
xchg
sbb
push
aam
adc
popa
das
sti
and
push
lds
xor
or
mov
mov
mov
push
iret
xchg
mov
cwtl
add
jno
inc
aas
js
mov
or
and
or
cmp
mov
or
pop
in
orl
je
add
jecxz
inc
adc
adc
sub
outsl
lahf
sbb
jns
sub
lods
jle
imul
loope
dec
movsl
jmp
insb
jns
fcoms
mov
mov
movsl
mov
sub
sbb
sbbb
int3
cmp
popf
lahf
mov
insl
sti
insb
test
fdivs
lcall
jo
jno
out
or
or
int3
add
mov
mov
cmc
add
fmul
hlt
jmp
mov
adc
add
jp
dec
lods
std
test
fdivr
mov
or
and
mov
cmp
mov
mov
mov
xor
xchg
or
shll
into
push
insl
sbb
xchg
or
inc
bnd
push
idivb
cmp
loope
lds
rolb
pop
js
jmp
cmpsl
push
cld
call
movsb
jmp
fldcw
add
lret
aad
mov
and
adc
and
sub
cs
jb
cmp
mov
fldcw
add
cmp
ret
icebp
push
popf
mov
repnz
aad
movsl
push
aam
sbb
in
ret
xchg
fbstp
push
imul
les
mov
test
add
insl
jnp
scas
inc
sub
and
int3
dec
lea
fidivrs
add
pop
aad
cltd
xorb
jge
leave
lret
lea
and
aaa
and
pop
cli
nop
push
repz
insl
jns
xor
test
push
arpl
cli
pop
int
sub
insl
push
test
cli
cmp
lcall
nop
mov
mov
aaa
mov
inc
add
mov
cld
push
insb
iret
fstpt
xchg
movsl
pusha
iret
sbb
xor
push
inc
mov
or
jo
dec
pop
data16
adc
test
fucom
inc
mov
push
arpl
loopne
jg
aas
dec
push
mov
lret
jae
cmp
jge
or
or
clc
imul
fwait
divb
push
jmp
pop
mov
shrl
fimuls
hlt
cli
or
loopne
pop
test
dec
inc
ret
nop
inc
sarb
shll
popf
std
clc
stos
xchg
add
jae
jo
sbb
popw
fnstcw
or
push
imul
out
xchg
inc
jmp
insb
jo
mov
dec
repnz
call
or
insb
pop
mov
xchg
lea
xlat
or
fdivs
mov
pop
add
movsl
cmc
push
call
lret
add
pop
sbb
xchg
inc
lods
shl
lcall
jg
mov
inc
in
jge
inc
mov
xchg
rcl
enter
cwtl
push
jmp
fiadds
dec
sub
and
and
and
decl
fisttps
mov
loope
pop
loop
cmc
in
in
push
add
adcb
mov
or
xchg
std
cli
adc
das
lcall
sub
jbe
dec
sub
jae
ds
leave
or
mov
push
sahf
jmp
or
sub
dec
inc
push
lods
test
jle
push
pop
sub
rolb
cli
lahf
das
hlt
jne
std
cwtl
sbb
mov
stos
inc
dec
sbb
data16
mov
pop
bound
shl
jnp
adc
test
pop
cmp
in
push
pop
orb
stos
jno
js
sub
and
inc
sbb
add
sbb
jbe
pusha
mov
data16
lds
loopne
add
sub
cmp
inc
call
mov
sub
movsl
jns
int
sub
mov
ret
insl
out
pusha
jno
adc
add
sub
mov
sub
adc
xorb
sub
jns
cwtl
test
push
cli
out
movsl
cmp
into
xlat
add
adc
cmpsl
lods
fsts
jge
cltd
aad
repz
push
icebp
jno
mov
stc
xchg
cld
sbbl
jecxz
cmpsl
idivb
sahf
push
jge
push
insb
adc
push
mov
lods
push
cmp
repnz
and
push
mov
daa
test
in
loop
add
xchg
ja
mov
sub
push
adc
dec
js
push
subl
fwait
jnp
jns
hlt
dec
pop
pop
and
fdivr
dec
inc
pop
xchg
cltd
aaa
int3
nop
jmp
sub
or
jno
add
or
es
jo
enter
addb
push
lret
fs
sbbb
sbb
enter
mov
pop
push
lods
scas
jb
insl
mov
int3
cld
push
cmp
pusha
cli
add
sbb
sbb
jg
movsl
shrb
push
jge
mov
inc
pop
mov
or
dec
add
in
mov
lret
pusha
mov
out
maskmovq
or
lds
push
ja
dec
mov
xchg
adc
xor
es
push
les
cmc
and
push
pop
mov
mov
aaa
fstl
imul
xchg
jnp
mov
add
out
jb
jl
lahf
pop
push
jae
cs
or
and
fimuls
mov
in
shrb
jl
mov
inc
jp
fsub
subb
aas
jns
rcrl
js
pop
mov
jge
dec
mov
fst
push
inc
fnstenv
jp
pusha
or
clc
popa
data16
andl
mov
fsub
insb
jg
inc
sbb
or
and
test
mov
cmc
out
add
dec
xchg
dec
adc
cmp
jl
xchg
push
mov
xchg
pop
lret
or
sbb
ja
pusha
xchg
call
shrl
pop
fistpll
test
enter
xor
lods
dec
mov
fisttpl
lret
std
aam
aas
add
adc
mov
insl
dec
enter
sub
out
cmp
loopne
shll
cmp
orl
inc
cmpsl
mov
push
ljmp
fmuls
notb
fsubrs
aad
fcmovbe
sarl
and
fs
aam
jmp
dec
loopne
add
into
push
mov
mov
outsb
arpl
xor
sub
sbbl
es
out
cmc
mov
aaa
mov
dec
not
and
sub
dec
cmp
incl
dec
pop
sbb
adc
cs
pushf
xchg
daa
popf
sbb
mov
jmp
mull
les
or
cltd
and
xchg
rep
cmpl
dec
subb
jecxz
lcall
fisttpll
xchg
sbb
jecxz
jnp
or
mov
int
pop
push
mov
push
ss
pop
pop
push
out
mov
aad
test
or
add
pop
notl
cld
outsb
mov
nop
bound
dec
cld
inc
negb
loopne
cmp
push
xchg
dec
cltd
mov
jo
jl
and
pop
xchg
sub
hlt
sbbl
fs
dec
jbe
cmp
xchg
icebp
xchg
xor
test
rclw
jp
or
loope
test
jmp
jnp
pop
dec
dec
jnp
dec
aas
pop
jge
mov
jp
mov
xor
inc
in
xor
push
adc
xor
push
loop
sti
jle
inc
cmp
test
in
cmpsb
mov
js
or
orb
insb
leave
add
mov
outsl
outsl
inc
mov
push
adc
cmp
sub
dec
mov
add
imul
imul
divl
es
mov
inc
iret
cmp
enter
cmp
or
mov
and
mov
xchg
sbb
in
or
mov
loope
or
mov
or
jge
add
mov
or
add
sub
repnz
add
push
inc
shlb
mov
fmul
xor
cmpsb
lods
call
add
idivb
xchg
into
test
fstpt
push
xor
stos
pusha
jmp
mov
lcall
gs
xchg
scas
stos
add
xor
shlb
cmpsb
and
enter
outsb
repnz
subb
jnp
sub
mov
movsl
rorb
arpl
out
sti
jmp
aam
pop
lds
push
xchg
lea
xor
cmp
mov
mov
call
mov
xor
jbe
jmp
js
or
out
scas
cmp
pop
stos
xchg
add
int3
jmp
fidivrl
lods
std
in
mov
mov
aaa
or
mov
into
sti
stos
mov
pop
push
cmpsb
int
pop
mov
adc
aad
les
inc
inc
daa
fisubs
jo
push
jg
lea
pop
insb
nop
lcall
pop
shl
jbe
arpl
xor
loopnew
and
add
xor
xorl
loope
pop
and
ret
cmp
inc
jb
and
or
das
repnz
bound
leave
mov
mov
stc
fistl
and
pop
push
jne
push
push
or
push
mov
loop
jae
pushf
out
push
and
lea
adcl
nop
add
in
leave
fdivr
jmp
fs
test
add
test
in
xchg
adc
xlat
das
les
xchg
fists
mov
push
hlt
aam
xor
loopne
fstpt
fcoml
pop
stos
icebp
mov
mov
or
fildl
xchg
cmpsl
xchg
mov
es
fmuls
movsb
out
les
mov
xchg
and
in
mov
sub
mov
cmp
mov
call
addr16
fnstenv
add
jle
adc
add
mov
or
loop
push
sub
fidivrs
mov
ja
aad
mov
mov
insl
sub
lret
push
jle
popf
rorb
mov
arpl
mov
mov
idivl
mov
xor
call
dec
xchg
inc
adc
jbe
mov
rclb
loope
xor
add
out
xor
mov
push
xor
in
cmp
or
adc
ss
mov
xchg
and
aaa
js
inc
ret
aaa
movsb
roll
out
sub
mov
add
adc
mov
cmpsb
or
in
movsb
rol
lock
mov
cmp
popl
stos
popa
out
inc
jbe
pusha
mov
pop
dec
and
stc
inc
jmp
xor
mov
lcall
mov
iret
xor
xor
popa
mov
in
add
cld
dec
inc
test
icebp
xlat
divb
mov
sbb
and
std
sbb
cmpsl
cmp
idivb
into
inc
arpl
and
sbb
or
fdivrs
jb
xor
adc
rol
and
insb
jns
xchg
xchg
jo
push
dec
fdivp
and
iret
arpl
add
test
jae
cli
fiaddl
xchg
push
mov
and
jmp
pop
jecxz
ret
xor
iret
clc
or
lods
lcall
out
ljmp
mov
cmp
xchg
ficoms
inc
js
mov
mov
cmp
xor
pop
stos
push
shlb
cs
jle
js
dec
cmp
mov
jge
and
lds
jg
lahf
jg
ljmp
sbb
sub
or
cmp
pop
in
push
cltd
mov
sbb
cli
push
jb
iret
xlat
dec
ss
es
bound
pushf
mov
mov
nop
add
inc
inc
mov
push
js
loopne
sbb
imull
dec
repz
mov
call
cmpsl
add
or
cltd
int
sahf
cmp
xor
inc
int3
lods
inc
outsb
in
jmp
mov
adc
in
je
lret
pop
test
pushf
shrb
inc
call
xor
and
pop
xchg
add
mov
push
mov
lock
iret
lret
sarl
leave
adc
stos
xor
lret
pop
pop
mov
push
divl
push
pushl
pop
call
lahf
jmp
data16
lock
adc
mov
adc
sub
or
hlt
pop
outsl
loopne
push
outsb
and
jmp
sbb
pop
ja
mov
insb
sbb
pop
dec
insl
lret
ror
rcrl
je
insb
pop
out
pop
jl
or
daa
push
addr16
orl
jg
rol
aas
xchg
nop
push
aaa
mov
das
lret
cmpsb
push
idivb
fcmovb
scas
sub
jno
notb
jae
in
out
das
pop
sub
dec
mov
or
mov
shlb
pop
xor
and
jns
sbb
push
insl
cld
push
rorb
push
ljmp
fldt
addb
adc
and
fs
pop
xchg
xchg
call
push
jno
mov
pusha
mov
movsb
dec
push
mov
outsb
pop
xor
imul
mov
cwtl
in
jmp
and
popa
je
mov
fidivl
push
mov
sbbb
je
add
jmp
cmp
jae
ja
mov
jmp
or
test
jnp
add
cmc
inc
insb
data16
cli
xlat
fiadds
ror
lods
mov
test
xchg
xchg
lods
stc
ja
and
mov
je
pop
lock
pop
out
adc
sar
les
inc
sub
xlat
out
stos
sub
lods
or
inc
loop
ffreep
mov
scas
inc
sti
pusha
lea
sub
daa
neg
push
int3
push
sbb
pusha
mov
loopne
mov
push
xchg
ret
iret
outsl
ret
or
jp
jl
out
test
cmp
leave
jl
mov
int
jmp
int
rcrl
ret
sub
jle
les
xlat
sub
sub
mov
ret
push
leave
scas
mov
mov
in
cmp
or
mov
xchg
iret
pop
cmpl
imul
lods
xor
mov
std
std
push
push
xor
push
outsb
mov
push
idivb
lret
adcb
stos
out
dec
adc
mov
push
xchg
add
popf
add
stc
in
nop
jne
aaa
jl
xchg
test
in
cmovns
mov
in
sar
mov
imul
xchg
stc
arpl
pop
jmp
sarb
add
cmpb
in
push
push
mov
dec
fnstsw
fsubr
add
out
aad
mov
mov
cmpl
jb
sbb
push
mov
enter
xchg
sbb
cwtl
das
outsl
pop
out
sbb
fidivrs
in
add
mov
xor
pop
push
adc
in
arpl
push
or
mov
cmp
or
mov
xchg
jne
sbb
jne
sub
lcall
xor
xchg
mov
mov
mov
addr16
pop
xchg
xor
imul
push
shll
in
imul
std
aaa
dec
cmp
and
pop
push
add
negl
jl
inc
add
jns
jnp
pop
xchg
jl
rcrb
ja
clc
jno
add
dec
ret
cmc
aad
and
push
jno
fcmovnb
je
fildl
int
dec
or
add
lahf
mov
pop
add
movl
and
and
hlt
outsl
mov
xorl
daa
filds
push
fstp
push
cmp
xor
cmp
or
jae
popf
lock
clc
in
xchg
or
jp
dec
jmp
cltd
mov
rcll
or
fnstcw
adc
and
dec
movb
rcrl
bound
mov
push
sub
xchg
sbb
rclb
mov
ficomps
push
ds
mov
popa
and
call
xchg
fucomp
xchg
sbb
push
andb
jne
cmp
push
mov
popf
into
sti
es
loop
loopne
xor
jne
shll
rclb
pop
jle
movsb
in
adc
push
in
sub
out
pop
in
cwtl
lcall
push
sbb
dec
mov
dec
cmc
stos
pusha
dec
jmp
cwtl
lods
test
inc
repnz
jmp
mov
or
stos
or
sbb
leave
push
cmp
xor
cltd
pop
mov
subb
aaa
push
iret
loope
ficoms
push
push
jmp
pop
pop
xchg
in
mov
xor
daa
in
push
xchg
fldenv
lret
jae
clc
fs
push
outsl
pop
lahf
stc
push
inc
xchg
push
fdivl
mov
jns
push
out
sub
test
call
push
cmpb
xor
insl
andb
push
mov
icebp
push
pop
sbb
add
and
arpl
jecxz
mov
sbb
mov
pop
adc
push
fsubrl
out
in
jmp
mov
dec
fldl
pop
ror
in
test
cld
jg
aam
cmp
aaa
cmp
shrb
push
cmovne
cmp
cmp
mov
sar
adc
imul
cmp
add
push
add
push
and
test
sbb
sub
sub
push
sub
add
shll
add
sub
mov
aad
jmp
add
push
loope
dec
jb
pop
mov
cli
and
test
mov
cmp
or
inc
add
cmp
cs
lret
cltd
iret
pop
xchg
jp
cmp
repnz
loopne
clc
cmpl
rolb
or
mov
mov
ss
jno
fisubrl
mov
ret
fwait
mov
scas
push
aad
sbb
xchg
xor
stos
mov
sub
ja
ja
call
mov
repz
clc
inc
iret
das
popf
push
jmp
dec
push
inc
mov
pop
cmp
loope
mov
cwtl
fisubrl
sbb
cmpsb
shrl
pop
mov
imul
hlt
jne
icebp
faddl
mov
xor
sti
mov
imul
ficomps
scas
enter
repz
fdivrl
ret
leave
and
pop
adc
out
pushf
and
scas
addr16
mov
sahf
xchg
hlt
mov
inc
stc
gs
mov
dec
in
push
cwtl
xor
pop
inc
xor
mov
xor
loopne
cmp
mov
lret
jne
mov
inc
jle
sbb
xor
xor
xchg
mov
dec
insl
pop
dec
mov
inc
dec
aad
das
ja
mov
outsb
jnp
fists
fdiv
fsubr
mov
daa
and
ret
and
call
test
push
inc
aaa
xchg
enter
loop
popf
mov
adc
lods
lret
dec
cs
in
ja
mov
pusha
xchg
pop
leave
ret
push
pop
push
jle
repnz
sbb
sub
mov
mov
jle
clc
jmp
jmp
dec
repnz
ja
xchg
or
stc
cmpsb
std
and
cltd
jmp
pop
out
sbb
and
dec
jb
cmpsb
outsb
cld
xchg
stos
cmpsb
adc
andl
cmp
shlb
pop
mov
mov
je
inc
fistl
dec
in
mov
mov
xchg
mov
fwait
in
push
fucomip
mov
repnz
insl
mov
cld
xchg
stc
and
aad
rcrl
aad
daa
dec
xchg
inc
jl
push
lcall
xor
imul
pop
ljmp
jp
repz
sbb
mov
lock
call
pop
outsl
xor
and
shll
pop
or
adc
jb
pop
mov
in
cmp
cli
dec
xchg
dec
ficompl
mov
mov
cwtl
test
and
dec
adcb
adc
frstor
mov
hlt
cmpsl
pop
sbb
iret
xorb
pop
push
pop
in
stc
test
ja
jo
scas
mov
mov
out
je
sbb
test
mov
cmp
ljmp
mov
pop
cltd
pop
andnps
jle
lcall
mov
int
popa
lds
or
xor
add
or
add
rorl
fldcw
shll
insl
cli
loop
roll
mov
or
sub
mov
cmp
aaa
cmpsb
pop
and
xchg
bound
ret
dec
mov
sub
push
dec
icebp
jno
mov
sub
xor
lahf
xchg
daa
jle
out
mov
push
mov
pusha
cmp
int3
cmp
or
sub
shl
inc
rcrl
and
xor
popa
mov
jg
outsb
popa
repz
sbb
push
rol
or
cmp
ror
nop
jne
and
and
push
push
xor
and
scas
nop
mulb
out
mov
loop
adc
mov
nop
cli
jge
fimuls
xlat
shll
call
xchg
fnstenv
insb
mov
push
add
pop
push
aas
rcl
sbb
pop
mov
ljmp
mov
cmpl
arpl
popa
out
cmp
jno
mov
pop
pop
jle
push
push
sahf
dec
xchg
sub
xchg
fdivrl
xchg
and
outsb
mov
pop
dec
xchg
jno
ficompl
sbb
mov
shlb
insl
sbb
test
ja
mov
repnz
jmp
mov
testl
fwait
or
test
mov
pusha
and
stc
mov
je
mov
out
cwtl
add
in
sub
fbld
push
lahf
ds
lea
add
scas
mov
stos
sbb
sbb
das
call
enter
push
sub
xor
jg
clc
arpl
rcrb
xor
dec
rcll
aaa
lret
xorb
xchg
leave
test
hlt
mov
push
push
stos
jno
mov
jo
sub
sub
pusha
lcall
or
outsb
xchg
addb
shrb
inc
xor
rorl
mov
test
and
shrl
push
out
mov
inc
pop
pop
cmpsl
or
aam
sarb
imul
test
xchg
pop
mov
mov
inc
xchg
mov
inc
fcmovnu
inc
js
xchg
in
dec
ds
jae
rcr
rcrl
or
shr
cmc
rclb
jbe
inc
push
xchg
push
inc
or
jl
addr16
nop
sub
es
adc
pushf
cli
aaa
sub
ja
adc
scas
xor
dec
shll
outsl
sub
push
pushf
xlat
or
lret
cmp
add
repz
std
or
xlat
leave
mov
sti
aam
sbb
push
push
add
cmpsl
xchg
test
mov
fcompl
mov
cmp
mov
xchg
xchg
or
icebp
ja
xchg
shr
popl
aam
stc
pop
and
mov
out
int3
sahf
shll
test
cwtl
cmc
imul
cmpsl
test
push
dec
mov
cmc
push
int
pop
loope
sub
and
aas
aad
and
xor
int
and
imul
jg
jge
sti
rorl
cltd
inc
xchg
mov
cs
outsb
push
or
repnz
daa
dec
test
dec
adc
or
loopne
inc
xchg
call
cmp
jecxz
iret
pusha
loop
add
xchg
dec
fst
repz
xorl
jmp
dec
leave
xchg
sub
icebp
and
addl
pop
pop
iret
jnp
loope
clc
scas
mov
xchg
sub
les
cwtl
sbbl
orb
xchg
or
gs
sbb
testl
xchg
test
jns
xchg
popa
xor
lea
xchg
mov
jl
xor
jbe
mov
or
rorb
enter
loope
mov
pop
or
cs
add
sub
out
clc
popf
stc
fs
cmp
cmpsb
or
stc
jg
jge
and
push
lock
mov
pop
add
es
dec
and
jb
call
cmpsb
clc
cmpsl
fistpl
mov
loopne
adc
or
push
je
mov
push
inc
scas
mov
push
aas
adc
adc
mov
and
push
mov
pop
inc
sbb
out
mov
ja
clc
pop
mov
cmc
push
xchg
aas
scas
xchg
call
das
xor
pop
cwtl
dec
call
pop
inc
fisttpl
sar
pop
cld
add
movsb
mov
fld
or
pop
sbb
call
cmc
mov
das
push
adcb
cmc
mov
pop
and
dec
mov
jno
stc
je
pop
sub
dec
outsb
cld
mov
popf
cmp
loope
inc
jb
fdivs
rorb
out
out
or
pop
shl
outsl
in
dec
push
add
push
mov
insl
pusha
fnstcw
imul
add
je
add
mov
mov
push
cld
pusha
andl
aam
in
dec
les
ror
and
jns
pop
ds
insb
in
movsl
pusha
ds
adc
dec
mov
pop
inc
movsl
cli
lods
pop
jo
movsb
scas
popf
adc
add
add
ss
mov
insl
ljmp
dec
and
push
jg
adcl
add
inc
mov
adc
dec
lahf
fcomip
fdivrs
stc
xchg
jne
dec
mov
cmp
push
cmp
nop
sub
fldl
mov
adc
cmp
mov
add
or
sbb
xorb
push
and
mov
iret
fsubrl
test
xchg
dec
and
loop
dec
mov
mov
mov
flds
sub
out
cmp
icebp
popa
sbb
push
fdivrl
pop
dec
sbb
ljmp
adc
pop
popa
mov
mov
and
lret
push
inc
leave
add
inc
cmp
call
mov
adc
push
in
push
arpl
je
sub
test
jne
lret
pop
mov
in
jl
fsubs
jp
pop
inc
add
jle
das
je
rolb
lea
stos
iret
insb
xor
fs
sbb
ret
aas
cmp
cmp
jbe
stc
sbb
into
adc
sbb
pop
jge
in
arpl
in
cmpsl
adc
cld
push
jp
outsb
lret
mov
jecxz
cmc
jp
dec
inc
mov
add
or
lea
jp
ds
subb
mov
fsubr
clc
fnstenv
cmp
outsl
mov
dec
mov
out
ret
mov
adc
out
add
pop
sbbb
outsb
dec
add
imul
push
xchg
je
cmpsb
mov
mov
orl
pop
xchg
push
xor
adcl
fucomi
add
pop
cmpsl
pop
pop
shlb
inc
jns
je
int3
fisubl
or
repnz
in
stc
pop
loope
loop
mov
push
jmp
hlt
ljmp
jg
add
pusha
cmp
and
outsb
fprem
add
fcompl
mov
in
loope
mov
sbb
test
mov
pushf
nop
aad
imull
and
addr16
movntps
adc
fidivs
push
add
pop
gs
pop
xchg
xchg
or
cmp
add
les
cld
sbb
mov
push
lcall
mov
jle
and
push
mov
test
out
dec
and
movsl
test
mov
into
push
push
or
jge
sbbl
testl
pop
mov
xchg
mov
inc
jbe
cltd
popa
jl
out
push
imul
aam
cmp
mov
sub
inc
ljmp
repz
gs
adc
inc
in
jo
clc
sbb
int3
lret
inc
xor
push
and
pop
stos
ret
fcomps
pushf
ljmp
fbstp
lods
ja
sbb
add
iret
mov
xchg
jnp
nop
push
push
int
repnz
adc
arpl
and
in
lahf
adc
lret
jl
and
fs
addr16
daa
sbb
loope
cmp
mov
or
mov
repnz
mov
xor
mov
mov
enter
in
jle
dec
cmp
xchg
sbb
dec
xchg
nop
dec
and
aas
inc
dec
mov
pop
mov
lret
jns
js
dec
mov
insb
lods
push
fdiv
fsubl
out
inc
mov
iret
leave
pop
sub
and
dec
sub
negb
stc
inc
stos
ja
dec
pop
mov
call
pushf
into
sbb
mov
cmp
push
ror
lret
movsb
cwtl
jg
mov
mov
repnz
stos
icebp
mov
es
ss
lcall
out
fldt
sbb
adc
dec
aaa
sarb
dec
lahf
jp
arpl
xor
insb
pop
shl
int3
pop
ljmp
sub
jmp
lret
lock
fildl
lahf
movsl
mov
push
inc
and
xor
xchg
ret
push
mov
pop
divb
cmp
movsb
rcll
xchg
mov
das
inc
scas
mov
cld
xor
and
scas
cwtl
aad
aad
jp
mov
push
inc
es
push
lret
jp
mov
push
xchg
test
push
adc
inc
cmc
lret
add
popf
test
inc
sbb
xor
mov
dec
pop
dec
addr16
ss
mov
popf
mov
movsl
daa
jnp
rorb
mov
sahf
jae
repz
dec
lahf
negb
dec
xchg
sub
dec
leave
inc
stos
mov
inc
pop
fwait
cmp
mov
inc
dec
and
sub
mov
les
aad
out
pop
aam
popa
cmpsb
shlb
xor
rclb
xchg
data16
out
cmp
int
push
push
xor
pushf
xchg
imul
push
dec
shlb
and
mov
cld
dec
jbe
xchg
add
rcrb
sub
push
sbb
out
mov
jo
sbb
clc
sbb
mov
jns
cmp
jo
into
xchg
leave
loopne
adc
jne
ja
je
push
cli
daa
adc
inc
xchg
push
lret
call
stos
xchg
lock
inc
inc
sub
sbb
mov
jp
jns
cltd
adc
pop
sub
pop
ljmp
std
div
jle
or
xlat
shlb
or
xchg
and
lea
and
shrl
sub
es
mov
jp
ljmp
inc
or
mov
insl
mov
push
jp
push
and
inc
pop
stc
cli
cmp
fmul
push
jle
inc
mov
fldt
mov
addr16
es
jo
dec
orl
rcl
fimull
rolb
sbb
pusha
jp
orl
sbb
and
imulb
iret
sbb
push
or
inc
jo
jle
negl
push
in
jo
je
xchg
xchg
dec
ss
mov
iret
sbb
std
xor
popa
adc
movsb
fcompl
mov
pop
add
dec
hlt
movntps
ss
xor
xorl
and
out
mov
aas
cmp
cs
add
orl
pusha
stos
and
and
xchg
push
in
cmp
dec
call
lea
mov
sbb
fsubp
sbb
sub
inc
add
or
fidivrs
lahf
pop
add
and
out
or
in
fsub
es
test
jmp
sbb
xor
lock
adc
mov
push
add
mov
stos
add
mov
add
ljmp
mov
cmp
mov
mov
cmp
xor
add
cmpsb
dec
pop
or
daa
add
into
lea
ds
cmc
cli
divl
xlat
rclb
inc
sub
fs
xor
in
lds
mov
stos
push
add
cmp
ljmp
sub
shlb
repz
movsl
repnz
xor
ret
and
and
sub
push
mov
and
and
subl
in
push
out
add
or
cli
jecxz
or
leave
mov
dec
xchg
or
into
adc
stos
or
call
je
push
xor
hlt
fisubrl
aaa
xchg
popa
es
fs
outsl
lcall
lds
and
imul
or
loopne
xchg
daa
inc
pop
mov
push
and
and
sub
imul
and
enter
shlb
jb
xchg
int
jae
xor
cmpsb
lret
and
jl
push
adc
sarb
jns
or
cmp
lock
pop
dec
mov
pop
push
test
outsl
je
icebp
mov
mov
push
add
addr16
fsts
in
dec
adc
out
cmpl
neg
mov
imul
in
pop
fistpll
cmp
xlat
mov
js
int
pushf
ds
std
jge
xor
xchg
inc
mov
popf
push
scas
stos
xorb
jbe
dec
cmp
xchg
iret
xchg
lahf
adcb
js
pop
or
push
rcrb
test
sub
mov
test
xor
loopne
dec
repz
lods
jg
xchg
mov
pop
lahf
pusha
jl
scas
fstpl
andb
adc
sahf
cmp
sbb
xor
and
jg
mov
cmp
inc
xchg
pop
mov
adc
enter
ret
adc
addb
imul
xchg
cmc
push
enter
out
inc
call
in
iret
popl
jno
mov
jb
jne
call
cwtl
movsl
dec
jns
repnz
push
mov
and
adc
mov
ficoml
dec
mov
stos
adc
jo
mov
subl
pop
and
fs
icebp
aam
lcall
pop
ds
std
sbb
lds
pushf
out
test
pop
mov
and
sbb
xchg
push
push
push
xor
orb
dec
js
mov
pop
lea
in
or
daa
fwait
adc
inc
popf
mov
mov
insb
mov
mov
cltd
fistl
push
inc
dec
pop
shlb
inc
sub
jp
imul
lock
mov
aad
mov
in
incb
xchg
and
daa
push
stos
inc
test
or
stos
mov
into
dec
xchg
sbb
mov
leave
jb
ret
xor
inc
sub
xor
iret
stos
mov
push
decb
out
jp
jp
icebp
fisubs
stos
es
negb
mov
inc
sub
mov
pop
mov
pop
fisubl
jle
add
xlat
or
push
fstl
push
in
or
add
mov
cmpb
mov
sbb
decb
in
and
and
arpl
cmp
nop
cmp
cmp
pop
push
inc
aas
aas
pop
je
adc
lret
or
flds
lds
out
inc
cmp
sbb
jbe
inc
cmp
push
push
inc
bound
fldt
and
ss
fdivl
pop
add
movsl
test
std
je
and
sbb
cmp
hlt
push
das
mov
add
jae
popf
call
shll
lods
dec
pushf
sbb
jp
sub
addr16
pusha
cmp
repnz
sbb
pushl
sarl
enter
imul
sahf
mov
push
leave
test
lods
xor
mov
adc
rorl
jno
xchg
or
or
jge
inc
lret
int3
mov
cmpsl
cmp
pushf
loopne
push
cltd
push
mov
dec
push
jg
xchg
lods
mov
jne
add
les
mull
push
xchg
divl
movsb
or
mov
jecxz
and
aad
cld
cmpsl
mov
shlb
adc
jle
cltd
rcll
test
mov
pop
lcall
cmpsl
dec
gs
lock
pop
int3
dec
cld
clc
xor
clc
push
xlat
and
push
mov
mov
sti
jae
arpl
fisubs
mov
xchg
adc
repnz
out
ja
cmp
clc
out
loopne
sub
or
dec
aad
and
pop
leave
mov
xchg
out
xchg
xchg
pop
push
ds
pop
sbb
pop
int
mov
adc
jbe
insb
fwait
jmp
imul
mov
outsb
push
pop
lret
push
xchg
cmp
mov
cmp
dec
push
cmpl
jo
pop
adc
xchg
add
or
mov
cmp
stc
fsubrl
push
rorl
jl
mov
leave
in
sti
pop
cmc
pop
adc
xor
pop
push
js
pop
jp
in
jg
dec
pop
mov
add
fucomi
leave
add
lret
xchg
sub
roll
in
sub
iret
jo
mov
mov
push
or
cli
iret
cmpsb
cmp
fxch
sahf
cmp
jns
arpl
rclb
dec
movsb
cmp
adc
icebp
loope
lods
pop
push
mov
jecxz
mov
bound
adc
cwtl
mov
mov
repnz
mov
lods
movl
in
dec
leave
dec
sub
mov
fldcw
ret
inc
xor
movsl
xchg
popa
xor
xor
imul
xchg
loop
fimull
mov
push
inc
xchg
pop
shrb
data16
hlt
enter
pop
lock
adc
mov
jb
xchg
dec
lods
leave
pusha
into
mov
movsl
clc
cs
popa
push
sbb
into
jecxz
lds
push
aaa
xchg
adc
cmp
cs
adc
mov
mov
jl
pop
push
fcmovb
pop
lcall
pop
fcomps
sub
or
dec
mov
inc
aaa
xchg
push
mov
push
mov
pop
jmp
push
xchg
cltd
mov
cld
mov
ljmp
dec
cmp
xchg
mov
sbb
cmp
xor
arpl
cld
in
push
sbb
pusha
mov
out
dec
stc
das
pop
in
rorb
nop
xchg
lods
sub
mov
outsb
cmp
fidivl
cmp
pop
inc
sarb
xor
push
add
dec
sbb
mov
xor
and
mov
inc
jecxz
divb
cmp
cmp
fwait
mov
ret
imul
mov
imul
cli
mov
scas
sbb
sub
subb
in
or
dec
fwait
inc
rolb
outsb
jnp
mov
insl
int
or
and
loopne
sti
std
loopne
add
push
xor
lock
ficoml
loope
jns
ds
jp
orb
cmp
inc
or
sub
push
sahf
or
xorl
mov
fcmove
cltd
std
mov
icebp
rcrb
push
in
cli
stos
push
push
jle
movsb
shll
or
mov
xor
aad
push
inc
das
mov
jns
inc
sbb
fmuls
incb
aad
rcrb
cmc
push
dec
or
es
lcall
test
test
scas
xchg
in
or
les
mov
inc
movsb
mov
push
loop
mov
sbb
jp
dec
int
fwait
jge
aas
xor
jbe
scas
push
lea
fisubl
icebp
mov
pop
repnz
push
divl
xchg
pop
test
xchg
mov
dec
lock
pop
mov
jae
jmp
jne
movsb
iret
cmc
pop
insb
xchg
jo
ljmp
sahf
stc
jmp
jle
push
repnz
cmpsb
fs
pop
aas
xlat
fnstenv
xorb
push
sti
or
mov
mov
fldt
nop
pop
jp
shll
es
dec
mov
cmp
jne
mov
xchg
mov
icebp
sti
fistpll
sarl
repz
aam
sbb
outsb
adc
test
jle
xorl
sbb
inc
xor
pop
cwtl
fdecstp
push
cmp
sub
js
int
fistl
ret
push
fwait
lods
xlat
into
pop
sbb
xchg
es
es
xchg
sbb
xchg
cwtl
mov
pop
cmp
adc
jp
push
mov
out
xchg
pop
aam
sub
sbb
xchg
sbb
into
xchg
shrb
mov
adc
xchg
inc
lcall
jmp
push
addr16
fistpll
sbb
stos
imul
mov
cld
fcompl
sbb
mov
xchg
into
pop
push
dec
inc
call
dec
sbb
jmp
shr
and
test
inc
xchg
nop
pop
mov
push
fwait
sbb
xor
shr
xchg
sbb
adc
pop
sub
sub
fidivl
js
rol
mov
mov
mov
xchg
inc
sub
out
mov
cmpsb
ljmp
enter
sub
inc
test
push
xchg
or
shlb
push
pusha
xor
imul
cmpsl
mov
jb
int3
mov
cli
data16
out
jecxz
sbb
hlt
jmp
push
xor
int3
adc
lret
add
push
lcall
std
inc
mov
xchg
jge
fidivl
clc
std
pop
adc
or
pop
pusha
aaa
movsl
lock
cmpsl
call
jno
cmp
lea
or
pop
add
cld
inc
xor
xchg
mov
sbb
xchg
sar
das
addb
add
out
cld
data16
cs
cltd
cmp
or
sub
sarb
adc
in
dec
sbb
sub
out
sbb
xor
aaa
into
xchg
test
scas
pop
pop
and
cs
sbb
mov
sbb
aas
inc
xchg
insl
dec
sub
sbb
cltd
aas
cmp
push
dec
jne
jo
popl
push
ret
mov
xchg
dec
push
addl
push
or
jne
adc
push
sbb
lds
lock
outsb
test
jb
adc
fmulp
push
cmpsb
es
shl
pop
enter
sbb
cli
sbb
pcmpeqb
xchg
shlb
aam
mov
xor
call
mov
scas
pop
inc
push
lret
pop
leave
xchg
adc
jnp
xor
pop
icebp
loop
mov
sub
out
or
or
jle
pop
das
shlb
lods
movsb
push
stos
fildl
cld
out
lea
xchg
sbb
lret
pop
cmc
xchg
cmc
push
jg
insl
imul
push
insl
out
fnstenv
adc
ret
cltd
cmp
jl
andl
stos
pop
xorl
rol
imul
lahf
push
nop
adc
mov
pop
cltd
mov
jnp
adc
mov
mov
xor
sub
mov
and
enter
inc
mov
sbb
jg
jmp
xchg
fiaddl
mov
popf
cli
int3
jle
or
jl
mov
fbstp
adc
adc
sub
mov
out
sbb
and
xor
push
pusha
rolb
push
test
stos
in
lahf
jae
inc
jmp
jp
pop
cmpsb
in
xchg
ficoml
sbb
sub
pop
push
or
cltd
adc
pushf
xor
mov
cs
adc
fs
nop
cmp
loope
int3
xor
push
mov
xor
ficoml
cli
movsl
in
cmp
mov
andl
rolb
mov
and
stos
cmp
xchg
xchg
lds
aad
shll
pop
mov
mov
fildl
sahf
repnz
aam
sub
popa
enter
mov
sti
xor
sbb
pushf
shlb
cmc
xor
arpl
fwait
or
xor
mov
mov
and
and
mov
cmp
cmp
add
xor
cmc
into
leave
into
cli
or
jbe
iret
ljmp
shll
popa
jae
filds
sti
xchg
lcall
repnz
lahf
scas
clc
jp
mov
scas
pop
sti
cs
dec
punpckhbw
or
dec
xchg
jl
cmp
and
and
lods
ss
mov
das
inc
push
out
test
sahf
scas
pop
cmp
dec
mov
cmp
inc
notl
mov
imul
lcall
popa
out
stc
dec
sub
mov
sbbb
lret
sbb
or
cmp
les
mov
jp
pop
out
mov
push
int3
dec
cmpb
and
scas
sbbb
in
push
daa
inc
pop
int3
push
test
cli
push
inc
adc
cmovs
ds
or
inc
xchg
call
xchg
shll
cmc
mov
push
pop
xlat
test
imul
nop
ret
loop
push
mov
pop
xchg
shrl
mov
jae
cmc
cmp
ret
int3
outsl
insb
cmp
xchg
or
mov
pop
xchg
lods
inc
daa
cmp
into
fdiv
std
pop
inc
imul
dec
xchg
sub
pop
scas
stc
push
xchg
cmc
push
shll
scas
fsts
stos
fdivl
cwtl
aam
jl
loope
mov
mov
stos
loope
mov
push
mov
js
or
in
jae
mov
xchg
cmp
add
fwait
inc
mov
pop
xor
js
fmuls
pushf
or
rorb
xchg
add
into
iret
jno
add
sub
jle
lcall
lea
loop
push
shlb
ljmp
cmp
test
nop
cmp
xchg
sub
pop
pop
dec
mov
dec
push
es
sub
ljmp
dec
adc
push
ljmp
sbb
mov
lds
pop
push
sbb
mov
inc
push
dec
js
pop
fs
xchg
in
rcrl
push
xor
lret
movsl
and
jg,pn
and
push
in
test
adc
sub
and
jo
std
cld
cwtl
fs
sub
cmpsl
orb
outsl
aad
xor
idivl
aad
out
xchg
test
aas
cmp
cmp
adc
les
cld
popa
ror
and
jmp
ret
les
xchg
popa
cmc
sbb
push
or
add
in
imul
dec
and
gs
arpl
sbb
popf
in
mov
dec
pop
mov
in
repz
addr16
bound
sub
iret
shrl
add
into
and
aas
imul
pushl
fistpl
rorl
notb
or
and
inc
push
xor
xor
and
push
fs
dec
inc
xlat
xchg
xchg
test
mov
sub
js
cmpsb
cld
les
xchg
repz
xor
jge
mov
fisubl
jl
scas
sub
cmpsl
popf
xchg
jecxz
sub
clc
addb
xchg
sbb
mov
std
mov
and
ss
int
push
inc
adc
movb
lret
inc
cltd
xor
xchg
fcoml
fdivrs
je
loopne
mov
roll
cld
adc
mov
sahf
stos
xchg
jecxz
jge
ror
sar
sarl
dec
xchg
xchg
repnz
fcompl
sbb
mov
movsb
int
jns
lahf
inc
sbb
loope,pn
and
or
str
jo
xor
incl
daa
jp
xchg
mov
push
add
push
fiadds
lea
outsl
mov
rcrl
adcl
cli
jno
lret
sub
pop
push
push
ret
repz
stos
jns
cmp
dec
adc
loop
sbb
popa
sub
lock
ror
lock
mov
and
pop
int
inc
out
mov
fldenv
and
dec
mov
orl
les
lret
rcl
xchg
out
xchg
lret
dec
and
scas
cmc
cltd
xchg
clc
lcall
stos
mov
test
push
cwtl
add
stos
or
shl
cmp
jb
ret
call
movzwl
mov
mov
aaa
fucom
mov
jmp
mov
push
and
cmc
cld
pop
fcomp
gs
inc
rcrl
fldl
cmp
xchg
mov
icebp
xor
xor
out
inc
cmpsb
add
out
push
add
mov
loopne
mov
je
mov
in
fwait
xchg
dec
stos
ret
enter
mov
mov
dec
jo
lods
and
out
mov
in
push
dec
and
lods
cmpsl
dec
pop
mov
mov
movsl
data16
inc
aas
add
jmp
jmp
mov
cltd
cs
mov
adc
cmp
ds
xchg
iret
add
leave
incl
push
test
pop
mov
jg
xchg
inc
lcall
dec
inc
pop
xchg
mov
popa
stos
sub
gs
cld
lods
ret
add
mov
dec
pop
push
sub
dec
dec
sti
jmp
lock
aad
cmc
sti
xor
in
into
push
scas
pushf
sub
mov
xchg
out
sub
sbb
ret
mov
inc
jae
leave
inc
movsb
pusha
lods
or
outsb
pop
xchg
or
jb
add
shll
test
mov
push
xchg
xor
inc
hlt
mov
push
mov
pop
scas
push
inc
jns
out
psadbw
add
rcl
int
inc
inc
daa
jp
dec
add
ja
mov
inc
imul
sub
popa
xchg
pop
push
push
es
cmp
jo
xor
cmp
dec
shld
ja
and
cmp
icebp
dec
adc
inc
jns
xor
jns
lahf
outsb
jnp
inc
into
cltd
push
sub
test
stos
cmp
bnd
lahf
jle
aad
cli
into
mov
outsl
dec
inc
xchg
cld
stos
shr
pop
xchg
rcll
iret
and
fisubrl
ror
lret
cmp
shr
push
lock
andl
addr16
push
or
xchg
sub
inc
or
sahf
push
pop
inc
dec
sahf
push
inc
out
std
lret
push
sti
or
add
rol
dec
xchg
push
enter
sbb
aam
mov
in
sbb
stos
rorl
cmovae
dec
push
or
cmp
and
outsl
mov
addr16
sub
arpl
mov
dec
pop
lods
push
lock
imul
or
and
in
xor
clc
pop
in
jg
sahf
push
ja
cmpsl
ja
xchg
mov
lea
cmp
pop
inc
mov
enter
adc
pop
inc
sbb
in
frstor
scas
aad
iret
pushf
popf
movsb
cmpsl
sti
and
loope
outsb
leave
sub
dec
push
xor
test
jbe
inc
idivb
adc
out
jl
inc
or
dec
icebp
jns
stos
or
mov
push
leave
dec
xchg
out
insb
dec
popa
pop
inc
or
mov
adc
add
int3
mov
inc
fidivs
pop
scas
insl
dec
into
ss
mov
das
sub
sub
repz
inc
mov
push
mov
xor
lods
test
or
push
aam
int
lret
clc
adc
push
adc
icebp
pop
cs
insb
in
mov
pop
lds
mov
and
inc
mov
jbe
aam
lds
jge
aas
ds
push
imul
aas
mov
mov
mov
popa
mov
and
das
adc
or
cmp
mov
xchg
stos
mov
pop
xchg
or
inc
ret
gs
push
pop
adc
cmpsl
fisubs
cltd
je
mov
inc
push
stc
push
sub
mov
loopne
mov
popa
sub
negl
mov
stos
cmp
fiadds
or
into
add
or
pop
idiv
jnp
lret
outsb
loop
js
addl
icebp
mov
mov
fsubrp
enter
lahf
push
daa
mov
popl
dec
fxtract
mov
xor
inc
cmp
mov
sarl
filds
in
stc
xchg
cmpsl
ret
dec
dec
aad
cmp
sub
stc
iret
ja
inc
outsl
pushf
cmp
lds
loopne
pushf
adc
xadd
mov
pop
sub
shll
outsl
dec
push
insl
imul
cwtl
jle
call
adc
push
dec
xchg
fistps
push
sub
dec
inc
scas
or
sub
mov
push
imul
rolb
mov
cmc
mov
in
shl
dec
gs
je
jle
add
lods
imul
hlt
adc
arpl
int3
xor
gs
inc
and
pushf
out
pop
add
sub
or
adc
mov
xchg
and
js
adc
mov
test
rcrb
pop
popa
push
addr16
pop
jl
imul
sahf
paddsb
jns
push
mov
xchg
loop
mov
xchg
pop
push
dec
test
out
adc
jle
mov
sbb
outsl
jmp
pop
sub
inc
cmpb
unpckhps
xor
std
out
sbb
xor
cmp
jmp
mov
lods
push
xchg
fimuls
sub
sbb
pop
push
lods
js
std
popf
xor
movsb
jg
xor
ja
add
or
aam
adc
rclb
fidivrs
xorl
hlt
out
adc
mov
dec
shlb
push
es
fcoml
jmp
push
xor
jle
jnp
inc
sub
iret
push
xor
inc
xor
inc
xlat
adcl
adc
fidivl
pop
test
ss
mov
aaa
push
stos
adc
push
fmuls
jmp
lods
mov
fsts
fildl
push
add
jmp
pop
pop
dec
mov
out
in
mov
aam
movsb
xlat
insb
jmp
pop
mov
and
adc
les
std
or
adc
jecxz
adc
jbe
xlat
test
add
xor
inc
adc
imul
out
pop
iret
sub
cmpsl
aas
fdiv
call
xlat
jge
pop
iret
dec
and
test
cmp
mov
mov
mov
bound
addr16
push
xchg
dec
push
idivl
dec
aam
mov
imul
adc
dec
js
inc
fsubs
adc
mov
or
or
lods
pop
movb
inc
aas
adc
sbb
test
mov
mov
loop
popa
in
ret
jno
rolb
aaa
cmp
mov
push
and
xor
sbb
xor
sbb
pop
adc
daa
rcll
cmp
inc
mov
jge
sbb
cltd
jns
push
pop
adc
scas
push
push
shll
lods
inc
and
stos
repz
scas
sub
inc
and
popa
pop
pop
jns
pop
adc
daa
aam
mov
rorl
mov
xlat
lcall
rcll
mov
daa
js
repz
cmp
or
mov
fists
push
mov
call
test
adc
out
hlt
movsb
pusha
sarb
inc
xlat
sub
push
cli
pop
cli
xchg
movsl
scas
pop
push
dec
inc
out
loopne
dec
stc
std
hlt
dec
mov
push
hlt
filds
out
push
lea
into
xchg
and
mov
dec
jl
adc
sbb
cmp
sub
and
xchg
or
xorl
js
test
adc
sbb
les
stc
inc
xchg
jle
pop
add
testb
push
jnp
int
inc
pop
push
fnsave
out
stos
push
test
push
out
loope
shrl
dec
inc
lods
pop
fbstp
ss
fimuls
mov
sub
fcoms
call
orl
and
cmpsl
mov
cwtl
and
pushf
adc
repz
cmp
inc
call
mov
sub
inc
jecxz
xor
loop
xchg
push
adc
push
loop
aas
es
repnz
sub
pop
xchg
jmp
insb
imul
scas
pop
push
mov
adc
cmp
xchg
add
sbb
scas
or
mov
adc
push
movsl
aam
aad
xchg
xlat
or
push
mov
adc
lcall
mov
gs
ret
jmp
repnz
sbb
add
nop
into
pop
icebp
lods
loope
arpl
inc
jmp
jbe
pop
loop
movsb
insl
daa
sbb
fs
add
dec
out
fisubs
outsb
xchg
scas
mov
popa
lret
pop
repnz
pop
add
aam
cmp
sar
push
insl
cltd
cmp
mov
leave
pop
xor
std
sbb
add
sbb
ret
mov
int
je
cmp
decl
arpl
sbb
lahf
pop
jmp
cld
pop
fucomi
daa
xlat
scas
pop
lods
and
sub
loop
xchg
mov
jnp
lea
mov
fildll
mov
mov
jnp
lods
push
pop
repnz
inc
leave
test
testb
jecxz
sub
mov
mov
leave
movsb
push
cmc
test
mov
hlt
xor
fsub
pusha
out
sti
rol
adc
push
out
xchg
scas
in
push
test
xlat
cmp
addr16
aaa
ret
pushf
cld
inc
fisubl
sbb
push
mov
testl
lods
notl
cmpsb
loopne
icebp
mov
or
mov
mov
add
cld
xor
popl
out
cmp
ss
clc
xchg
les
movsb
xor
sub
rcrl
in
addr16
mov
hlt
jno
and
lahf
inc
sbb
jg
mulps
pop
call
mov
xchg
push
cmc
mov
adcl
or
dec
jecxz
jg
pop
xchg
jge
jge
std
mov
std
sbb
mov
inc
out
gs
xor
xchg
xorb
sbb
dec
pop
sub
pop
cld
stc
mov
lds
sub
in
jno
scas
inc
mov
fs
dec
push
pushf
je
addl
sub
adc
aaa
not
rcrb
bound
outsl
loopne
aaa
pop
xor
es
mov
in
or
hlt
pushf
sbb
rorb
sahf
mov
jno
repnz
push
cwtl
xchg
inc
dec
jl
adc
cmp
es
stos
add
or
aam
bound
aas
sbb
int
lahf
adc
add
aas
test
mov
daa
cvtdq2ps
jmp
cltd
jns
loope
inc
mov
insl
pop
nop
and
push
bound
mov
dec
dec
mov
mov
mov
jno
and
or
mov
int3
icebp
ret
dec
lea
in
and
cmp
pop
jmp
iret
movsl
lods
sti
pop
loop
jg
adc
icebp
in
pushf
mov
js
cmpsl
test
inc
es
shlb
xchg
mov
call
xor
out
pusha
ficoms
fcoml
es
rcrl
sbbl
dec
add
cld
outsb
mov
iret
ljmp
mov
push
gs
inc
or
js
movsb
jnp,pt
scas
pusha
dec
cs
fildl
repz
insb
push
ficoms
into
cmp
loope
pop
popf
cmp
js
pop
fistpl
pop
jae
xchg
adc
jp
cmp
mov
xchg
mov
add
out
lahf
cwtl
cmp
sub
inc
into
mov
inc
fnstenv
push
or
inc
cmpsl
lret
movsl
sbb
xor
adc
inc
pop
fwait
mov
jbe
push
insl
and
insl
mov
stos
sti
ret
in
fildll
out
mov
scas
jbe
pop
push
jnp
xor
inc
jge
xor
xchg
mov
dec
es
mov
mov
cmpsb
adc
dec
test
sbb
clc
pusha
xchg
sub
or
inc
lret
pushf
pusha
cli
mov
xchg
mov
dec
push
mull
movsl
inc
loope
test
sbb
xchg
aad
fsubl
mov
xor
rcll
xchg
nop
or
out
pop
hlt
test
lcall
aaa
arpl
outsb
adc
jmp
and
divb
std
dec
repz
rorb
jo
pushf
in
xchg
push
ret
int
jecxz
cmp
jmp
movsl
push
push
jg
push
cwtl
icebp
stos
call
push
in
cmpsw
dec
push
dec
test
sbb
mov
sub
les
movb
xchg
es
mov
loop
inc
push
cwtl
mov
stc
insb
xchg
and
test
mov
fwait
ljmp
push
sti
mov
push
decl
or
adc
and
add
inc
dec
sub
lret
aam
dec
popa
mov
push
mov
xchg
mov
add
xchg
jle
inc
cwtl
std
inc
call
js
pop
mov
xchg
or
and
cwtl
out
lret
pop
test
cmpl
test
in
push
ds
movsb
adc
testl
push
es
jnp
clc
sub
dec
aad
xor
je
and
mov
cmp
fwait
inc
movsl
jp
inc
test
adc
or
dec
mov
imul
mov
push
sbb
pusha
movsl
gs
and
adc
adc
in
cmp
aad
fidivl
add
xchg
push
popa
aas
jge
mov
dec
sub
cmc
push
popf
cs
lahf
push
popa
lahf
fidivs
mov
icebp
mov
xchg
aam
sub
cmp
push
xor
sub
stos
and
pop
shll
dec
ret
or
xchg
and
or
xchg
sub
cmp
jbe
iret
add
inc
loope
stos
mov
push
repnz
mov
mov
rorl
adc
jns
ljmp
or
push
imul
movsl
sar
fcoml
or
xchg
jnp
sub
jb
pop
inc
jbe
mov
sti
xchg
sti
jg
fwait
scas
push
jge
mov
mov
fcmovne
push
mov
loope
jbe
lcall
adcb
jmp
jmp
jo
movsb
mov
sti
mov
xchg
idivb
sarl
lods
testl
popf
shr
and
push
leave
lcall
scas
sbb
lock
jl
addr16
shrb
in
xchg
mov
scas
dec
mov
inc
fcomp
and
mov
popa
adc
push
je
test
mov
jecxz
push
lahf
mov
addr16
cmp
jecxz
cmp
add
int3
mov
int
lcall
shl
pop
lahf
mul
lods
dec
mov
jno
aad
pop
aam
xor
pop
push
les
xchg
sbb
mov
bound
stos
dec
adc
mov
bound
addb
cmp
sbb
mov
mov
mov
fs
sbb
xchg
mov
cmpsb
mov
inc
mov
lock
leave
inc
lret
fimull
nop
loope
xor
add
adc
mov
jbe
stos
jns
js
inc
mov
sbb
mov
int
jns
dec
xchg
mov
and
dec
jo
rcl
lea
jmp
pop
movsl
sahf
adc
inc
test
mov
es
mov
adc
mov
cmp
dec
mov
or
leave
xor
jne
or
in
xchg
iret
cmc
scas
hlt
stos
mov
sti
xchg
clc
lret
xchg
rcrb
lods
outsb
xlat
mov
adc
mov
popl
das
sbb
stos
hlt
xchg
insb
andl
xchg
adc
ja
inc
je,pt
jo
sbb
xchg
and
outsl
mov
pop
push
aad
lods
stos
jl
pop
filds
adc
sbb
lret
test
mov
and
mov
or
je
fistpl
push
es
int
pushf
pushl
test
push
mov
mov
aad
cld
repz
pop
push
aam
mov
push
jo
rcl
pop
push
sbb
or
mov
popf
gs
mov
idivl
fildll
fildll
inc
hlt
sub
repnz
out
or
stc
loope
push
xor
mov
sub
lea
or
loope
mov
mov
movsl
jecxz
popf
cltd
dec
js
jmp
rcll
inc
mov
fisttps
stc
adc
cmpsl
lock
lret
les
loopne
inc
push
js
repz
adc
mov
icebp
das
stos
lahf
push
xorb
mov
cmpsb
pop
lcall
push
inc
pop
cld
sar
mov
in
mov
rorb
lds
inc
mov
cmp
inc
or
stos
push
call
arpl
mov
add
jno
lcall
jns
mov
rcr
stos
and
jl
xor
cltd
add
aad
xor
fucomi
add
jmp
jecxz
push
loop
in
cli
dec
lcall
mov
mov
sahf
test
sub
repz
ds
xchg
sub
xchg
mov
jnp
xlat
std
not
pop
push
int
out
dec
scas
leave
push
sbb
dec
xlat
dec
push
popa
xor
jp
mov
dec
and
outsl
mov
rcll
jg
sti
xchg
ficoml
inc
shlb
rcrl
aam
loopne
mov
mov
cmpsb
inc
repz
icebp
lea
jecxz
jge
mov
hlt
fmul
sbb
jnp
cli
in
lds
out
lock
sbbl
jp
dec
cmp
mov
cmp
adc
push
cmp
xor
lret
cmp
xor
push
lods
mov
sti
out
lods
inc
aam
cli
dec
jle
jmp
int3
mov
loope
lock
mov
dec
fs
inc
push
sti
jno
push
je
daa
out
pushf
outsb
arpl
sti
data16
jg
lret
mov
scas
push
fstpl
into
jl
out
adc
mov
push
adc
cmp
jecxz
aas
xchg
loopne
idivb
rcrl
sub
xor
lock
xor
inc
add
adc
in
lods
lock
popf
jnp
inc
mov
dec
sarl
ds
in
mov
cld
fldl
out
arpl
nop
mov
cmovle
xor
insl
push
cmp
cld
sub
mov
test
in
push
cld
push
or
lds
ds
psubsw
dec
cmp
popf
sbb
or
jmp
and
ss
mov
int3
js
loope
rcr
fisubl
xor
jl
cwtl
mul
hlt
sbb
mov
pop
repnz
and
jbe
inc
or
arpl
cmpl
inc
rorb
jge
pop
stos
mov
mov
jmp
sub
ss
cmp
dec
mov
stos
test
rorb
dec
ja
stos
filds
sub
hlt
out
repz
adc
lods
adc
jbe
inc
mov
mov
lret
jo
or
das
pop
xor
dec
pop
sub
jge
sti
mov
stc
inc
sub
stos
or
pop
mov
add
ret
int
shlb
add
out
insb
in
and
mov
rcrb
movmskps
dec
mov
cltd
addr16
jb
dec
inc
push
pop
mov
outsb
lods
dec
fs
rcll
outsb
jge
in
xchg
adc
sahf
es
out
mov
ds
jle
push
fisubrs
pop
loop
or
inc
xchg
jns
addr16
int3
hlt
mov
inc
or
orb
push
stos
or
adc
mov
daa
fdivrp
pusha
scas
adc
jle
or
insb
lcall
xor
inc
push
mov
push
imul
test
fnstcw
push
idivb
jb
cmp
rcll
ret
aam
push
jo
pop
sub
cmp
imulb
push
into
mov
lret
in
js
lds
jl
and
mov
sbb
dec
xchg
fdivs
push
sub
push
cmc
shl
cmp
aas
int
pop
mov
sahf
cmp
push
pop
add
cld
push
sbb
adc
aad
insb
ljmp
inc
dec
add
jne
jne
sbb
ja
data16
mov
call
mov
mov
add
mov
aam
pop
enter
cwtl
shrb
repz
sub
int
int
out
push
in
pop
mov
or
adc
jp
mov
int
loope
pop
es
jnp
sahf
ds
rcrb
andl
lods
mov
mov
mov
adc
imul
jae
loopne
lods
cmp
jo
jecxz
mov
jne
sub
pop
adc
push
outsl
popl
shlb
mov
xchg
gs
rolb
repz
mov
movsl
jmp
jnp
cld
outsb
mov
and
out
sbb
rcll
clc
popa
or
mov
pop
inc
jge
std
and
pop
shl
bswap
add
mov
adc
fidivs
mov
jbe
aad
sbbb
gs
mov
dec
ljmp
mov
mov
pop
mov
mov
ljmp
sub
repz
xchg
mov
cli
movsl
ret
and
inc
ljmp
imul
fs
ljmp
into
repnz
inc
xchg
cld
push
push
fwait
or
push
xor
cwtl
mov
test
sbb
pop
and
popf
clc
sub
out
mov
out
mov
leave
decb
data16
or
ret
mov
xchg
dec
cmp
movsl
or
rclb
orl
sahf
xor
xor
sub
mov
lret
movsb
push
add
je,pt
cmp
lret
cmp
sbb
fs
pusha
mov
outsl
in
sbb
int3
fadd
adc
push
sub
test
inc
pop
in
adc
aaa
pop
test
mov
cmp
ds
int3
movsl
push
sahf
call
repz
outsl
sub
pop
sbb
jmp
add
ret
push
call
es
cs
nop
xchg
fildl
sub
and
mov
jg
in
addl
cwtl
jmp
xor
mov
lret
cmp
xchg
test
inc
xorl
add
repnz
jo
pop
int3
sbb
sbb
xchg
cwtl
push
sub
lret
xor
cmp
cld
add
in
xor
loop
stos
gs
cltd
stos
sbb
fisttpll
and
inc
mov
imul
popf
cmp
rcrb
fisttpl
aam
std
dec
push
jge
xchg
xor
mov
push
stos
sbb
inc
cmp
cmpsb
cmp
aad
out
shll
add
dec
cmp
sbb
sub
sub
je
aaa
stc
cmc
call
add
dec
or
jbe
mov
xchg
add
push
inc
dec
sbb
je
movsb
cmpsl
adc
pop
shrb
shlb
std
adc
rolb
cmp
xchg
aad
cmp
jg
in
hlt
mov
clc
sub
and
stc
pop
lret
cs
cmp
jmp
rorb
cli
push
and
fcmovbe
inc
daa
or
and
fdecstp
imul
cli
mov
in
or
pop
adcb
sub
call
cmp
xor
mov
sbb
xlat
pop
pop
movb
fadd
push
test
sub
cmp
dec
jbe
ret
in
cmp
loop
adcb
sar
jo
xchg
jge
mov
jae
das
dec
ret
cmpsl
lea
jnp
ljmp
js
jmp
or
rcrb
xor
inc
push
rclb
test
gs
scas
push
loopne
pop
sti
out
or
mov
repz
add
mov
push
or
flds
gs
stc
sbb
fbstp
jg
ja
lret
adc
aas
inc
xlat
mov
sbb
pop
cs
out
xor
jae
popa
negl
outsb
sbb
sub
xchg
pop
mov
iret
test
or
xchg
testb
popf
mov
mov
sbb
push
into
sti
sub
xor
sti
xor
mov
cmp
lds
jl
xor
dec
mov
nop
dec
int
xchg
insb
call
pop
ja
fbld
sub
jno
mov
mov
pushf
xor
push
or
fimuls
and
ss
mov
lret
adc
cmp
ret
jmp
dec
cmp
lahf
xchg
push
xchg
frstor
pop
or
pop
mov
adc
les
cld
mov
mov
sub
lock
pop
repz
dec
out
lcall
clc
adc
xchg
push
and
rcrl
xor
roll
inc
sub
and
gs
mov
xchg
jp
push
jne
and
mov
int3
fstl
push
popa
leave
rorl
lds
out
jne
icebp
lods
adc
dec
stc
jo
dec
aas
mov
push
push
jo
sahf
repnz
mov
stc
push
and
mov
je
push
pusha
outsl
les
fs
mov
xadd
imul
add
test
cmpsb
popa
cmp
idivb
cli
xchg
cmp
leave
popa
mov
cmp
add
sub
jl
xchg
push
push
hlt
ds
es
stos
mov
scas
jno
clc
jle
and
iret
jl
add
inc
cmpsb
push
dec
sar
adc
push
push
rorb
cwtl
cmpsl
leavew
cmpsb
pop
inc
mov
outsb
push
mov
push
mov
aaa
fidivs
xlat
into
imull
xor
pop
roll
mov
jnp
lock
cmp
mov
sbb
or
lret
cmp
inc
push
jbe
mov
call
cmp
sbb
and
call
pop
adc
repz
int3
jle
not
fcoml
in
lea
orb
or
subl
sub
fldt
daa
xchg
jns
mov
int3
inc
outsb
lret
xchg
pop
inc
aad
xchg
sub
xchg
jbe
fisubrs
jno
pop
inc
pop
inc
mov
outsl
dec
pop
and
or
and
cwtl
rcrb
bnd
cld
push
in
lods
cmp
aam
outsb
repnz
mov
mov
push
push
add
mov
aas
mov
lock
xchg
mov
jo
jbe
and
dec
scas
iret
out
push
or
inc
or
cmc
push
push
andl
pop
pop
jg
pop
das
mov
mov
push
push
xor
test
jmp
jmp
inc
repnz
fs
mov
push
adc
mov
pop
pop
aad
push
popf
jne
insl
dec
xchg
cmpsl
lcall
push
insl
in
out
push
jle
adc
into
lds
mov
sub
movsl
add
inc
xchg
ficoml
lea
sbb
sbb
call
or
or
and
lcall
popf
in
cs
stos
pop
fs
adc
ret
jle
xchg
test
add
push
cmp
mov
mov
pop
gs
pop
adc
lods
into
mov
sub
adcb
xor
mov
pushf
lret
test
adc
test
loopne
repnz
inc
hlt
pop
sti
cmpsb
cmp
popa
into
movsl
pop
cwtl
mov
cld
divb
push
leave
xchg
sbb
jge
pop
or
mov
pop
pop
pop
xor
int
mov
jne
lret
dec
negb
call
aam
fildl
stc
jmp
cmp
aaa
push
lahf
mov
sar
stos
ljmp
outsb
or
mov
jg
cmpsb
sbb
xchg
das
icebp
sub
cmovle
hlt
inc
push
outsl
mov
lods
mov
mov
mov
out
lcall
dec
mov
cmpsb
xchg
xchg
sub
movsl
rorl
jb
nop
mov
scas
push
push
add
aam
mov
insb
xlat
sbb
jecxz
mov
leave
adcb
mov
add
out
iret
pop
mov
mov
jg
in
ror
imul
out
aaa
pop
hlt
push
jecxz
lods
lret
andl
into
movsb
movsb
mov
pop
add
mov
sbb
cmc
pop
testb
sahf
mov
or
xchg
mov
inc
stos
ret
lods
pop
jo
jge
jae
jmp
mov
aad
repz
testl
not
sub
dec
xchg
test
test
popa
and
pop
enter
in
ret
add
dec
pop
test
mov
add
dec
shll
pop
aam
js
loop
and
pusha
xchg
clc
fldcw
int
and
push
ja
divl
pop
subl
mov
mov
clc
je
icebp
jno
out
sbb
pop
sub
xor
push
pop
insb
lea
push
aam
cmpsl
and
movsl
pop
jno
stos
push
pop
push
inc
push
inc
mov
in
sahf
add
lods
push
icebp
fmul
mov
adc
dec
lea
jg,pt
xor
and
shrb
dec
add
xchg
mov
and
push
outsb
jb
mov
pushf
xor
mov
push
or
les
test
sub
xchg
mov
mov
xchg
mov
sbb
sub
fists
dec
jecxz
mov
inc
xchg
daa
test
loopne
into
xchg
pop
ret
jae
pop
cs
rcll
jns
push
fidivs
dec
je
xor
scas
jno
or
and
xorb
daa
sbb
adc
inc
xchg
out
xchg
sub
mov
in
inc
mov
out
xchg
cld
sub
nop
icebp
mov
in
daa
nop
mov
lock
xchg
dec
push
repz
cmp
ds
cmpsl
mov
js
shrb
jecxz
nop
nop
xor
add
xchg
nop
in
mov
dec
dec
jne
out
jae
in
jo
int3
aad
mov
loop
ljmp
leave
push
or
movb
adc
stc
jg
out
dec
sahf
jno
aaa
ljmp
mov
outsb
pop
adc
cld
adc
movb
js
aam
fcoml
fisubrl
inc
mov
jp
mov
outsb
dec
and
dec
insl
inc
jg
rcrb
shrl
jp
bound
pop
jnp
inc
pop
outsl
push
cmp
loope
add
cmpsl
jae
push
je
adc
mov
ret
scas
or
or
pushf
sub
fcmovbe
sub
pop
xchg
mov
loopne
fs
shr
push
dec
cmp
cltd
or
mov
add
hlt
loopne
dec
mov
pushf
scas
or
jbe
or
bound
mov
mov
out
pop
adc
pop
sti
psllq
mov
cmc
pop
mov
pushf
lods
mov
inc
xor
gs
mov
popf
mov
inc
in
inc
or
inc
shr
rcl
popf
sahf
sarl
pop
jl
das
inc
pop
cmp
les
mov
cmp
cmp
inc
lods
daa
lahf
faddl
clc
cld
adc
cmp
in
jmp
and
int3
outsl
adc
pop
xor
jno
scas
jno
push
cmpsb
sub
lret
and
scas
mov
call
xor
mov
mov
movsl
lds
pop
adc
repz
stos
mov
adc
push
fsub
dec
cmpsb
sbb
xchg
lret
lods
xchg
loope
stc
jle
adc
enter
daa
ja
cmp
or
js
loope
mov
shrl
jb
fisubrl
cmp
cmp
js
lcall
dec
ret
jbe
mov
inc
loopne
xchg
mov
xlat
mov
xchg
shlb
fmull
mov
cmp
ficoml
call
dec
scas
mov
cltd
push
jp
out
push
sbb
xchg
jo
test
pop
outsb
sub
and
mov
or
add
lcall
pop
or
sti
ret
inc
adc
or
addr16
popa
sbb
adc
icebp
in
test
or
mov
test
jnp
mov
insl
pop
cmc
xorl
pop
sahf
dec
push
mulb
mov
push
fs
call
add
sbb
cmpsl
rolb
and
xor
mov
and
mov
sysexit
jmp
mov
jle
dec
sbb
cmpsb
aas
mov
aad
dec
pop
inc
xor
das
dec
ret
cmc
xchg
inc
xchg
jo
inc
loope
repnz
inc
lock
testl
ss
add
les
clc
cmp
jg
jg
or
cmp
cmpsl
das
outsb
test
xchg
cmp
in
push
pushf
test
jecxz
leave
add
inc
pop
mov
add
xchg
fnsave
xor
sub
orl
test
rcr
cmp
or
xor
mov
mov
push
adc
adc
or
xchg
mov
push
sub
adc
pop
jp
jg
ljmp
pushf
cmp
mov
pushf
scas
lods
leave
jne
pop
repz
call
int3
or
test
cmpsb
xchg
sahf
jnp
jg
inc
cmp
cwtl
sbb
jl
int
mov
mov
dec
inc
adc
mov
xchg
test
and
cmpsb
sub
and
test
fneni(8087
stc
mov
rorb
imul
movsl
cwtl
or
bound
add
ja
dec
leave
mov
mov
ljmp
ds
subb
xor
call
inc
stos
pop
shrb
jnp
iret
jbe
dec
imul
push
jecxz
jle
sub
dec
pop
adc
int3
aam
repnz
mov
mov
jle
mov
mov
mov
cs
xchg
sti
sbb
sbb
add
popf
sbb
iret
testb
adc
lods
lcall
add
shll
hlt
fisubrs
mov
dec
pop
call
les
xlat
insb
dec
aaa
es
lock
and
dec
outsb
xchg
inc
ja
test
mov
jle
adc
lds
into
pop
cmp
jbe
or
sahf
sub
testl
cs
sbb
jge
cmp
sub
adc
loope
mov
faddp
mov
incb
xchg
jbe
xchg
pop
inc
test
or
pop
pushf
aas
js
test
leave
sbb
push
stc
lret
pop
loop
ret
mov
test
pushf
adc
xor
cmp
repnz
cmp
and
adc
dec
test
add
and
sbb
gs
pop
fsubrl
and
int3
lock
ret
sarb
lret
data16
inc
idivb
addr16
test
xchg
ret
in
mov
sub
or
or
push
andl
mov
ret
bound
mov
dec
shrb
xor
dec
mov
xchg
xchg
cli
bnd
insb
add
cmp
jg
xchg
or
push
and
arpl
imul
or
xchg
push
and
inc
sbb
mov
sub
stos
inc
in
in
mov
or
lods
xchg
stc
push
in
les
rcl
xor
test
sub
mov
mov
jbe
mov
add
sti
add
jge
push
test
or
pop
jb
jnp
out
in
popa
lock
mov
mov
and
rol
aad
mov
aad
fsubs
sub
sub
xor
aas
push
ret
adc
lods
inc
add
mov
ret
movsb
push
divl
jle
incl
or
imul
in
mov
mov
dec
sbb
xor
cli
adc
loopne
lds
ret
dec
clc
test
pushf
fwait
mov
mov
ja
mov
xchg
lods
add
jns
leave
movsl
ror
addr16
popf
sbb
dec
sahf
dec
test
je
sub
push
and
outsb
mov
push
mov
lahf
fdiv
imul
push
bound
stc
push
adc
lods
jmp
fs
mov
or
push
int
or
inc
in
xchg
scas
lods
pop
jno
mov
mov
mov
sbb
pop
int
push
xchg
add
mov
sub
cli
inc
jnp
aas
inc
in
cmc
out
mov
scas
jl
lret
aas
inc
dec
and
jo
imul
mov
inc
out
jle
add
push
cmp
and
fisubrs
insb
addr16
dec
and
lret
jecxz
hlt
xor
ljmp
sbb
push
fdivp
rolb
mov
push
insb
sub
int3
int
daa
jae
push
mov
jle
insl
adc
push
and
stc
test
mov
hlt
negb
mov
push
shlb
jns
mov
fwait
test
pop
ljmp
cmp
out
popa
out
imul
cmpsb
push
and
push
fcoml
pushf
xor
movsb
mov
cmp
adc
fisttpll
xchg
and
or
mov
push
das
cmc
jle
dec
sbb
mov
xchg
xor
fcoms
stos
and
sbb
push
hlt
mov
lods
mov
pop
pop
loopne
xchg
imulb
ss
das
inc
cmp
xchg
rcrb
xor
jno
or
leave
sbb
cmp
sub
pop
or
ret
dec
jl
sub
aaa
ljmp
daa
lods
fiadds
pop
bound
or
push
lds
aaa
pop
call
pop
jb
js
iret
xchg
pop
fidivrs
repnz
push
ret
xor
icebp
cmp
push
hlt
jbe
mov
cli
jo
ja
into
xchg
rolb
sub
mov
clc
sbb
pop
xchg
dec
inc
fmull
nop
int
xchg
in
jle
mov
fucomip
imul
stc
repnz
adc
repz
test
fcmovbe
loop
pop
out
shl
bound
jb
jg
jle
or
addr16
push
xor
icebp
sti
push
arpl
or
mov
popa
mov
ret
push
shl
sub
ljmp
rol
int
mov
arpl
jbe
in
repnz
mov
in
mov
push
cltd
jmp
lods
pop
mov
notb
jl
stc
mull
hlt
jbe
mov
or
outsl
clc
mov
rcrl
out
pop
xchg
shr
sar
cli
mov
sbb
sbbl
cmpsb
push
mov
sub
sbb
xor
enter
sti
ret
imul
inc
std
jmp
out
xor
lock
cwtl
scas
mov
cmpsb
jmp
aad
ss
push
daa
dec
ja
push
cmc
iret
ror
dec
pop
imul
test
out
shll
movb
stos
shll
movswl
cmc
je
mov
push
movsb
mov
shrl
popa
das
mov
shll
out
mov
imul
mov
jo
insl
push
outsl
xchg
xor
push
ss
ds
pop
js
pop
stos
lock
and
cmovo
sub
jno
cmp
int
inc
js
cmp
pop
movsb
lret
xchg
sub
ss
rcrb
test
hlt
mov
pop
mov
xor
jg
mov
testl
mov
std
pop
divb
arpl
nop
into
push
cmp
jg
pop
xor
ja
ret
fsubrs
inc
jns
repnz
insb
insb
jecxz
jb
add
cmp
movhps
jecxz
pop
mov
xchg
mov
sbb
jecxz
sbb
repz
aaa
mulb
inc
mov
sbb
cmp
or
into
mov
or
aad
sbb
std
subl
pushf
sub
test
xchg
ror
adc
lods
lods
mov
cmovb
push
rorb
mov
stos
icebp
mov
mov
lds
mov
sti
sub
call
add
repnz
addr16
xor
lock
inc
inc
arpl
rcrl
shlb
pushl
cmc
sahf
sub
cli
lret
pushf
and
repz
dec
jnp
out
sub
jne
sahf
out
cmc
and
sbb
and
stc
inc
jle
js
jle
fs
sbb
jo
mov
aaa
sbbl
loope
pushf
mov
bound
test
pop
fcompl
pop
lcall
test
push
pop
lock
loop
xchg
pop
ja
or
mov
xchg
inc
or
scas
test
jne
mov
jae
mov
test
pusha
out
xchg
movsl
mov
cwtl
xor
dec
out
clc
out
xor
insl
sbb
imul
inc
dec
xchg
repz
mov
lods
clc
enter
loope
xchg
inc
xchg
xchg
stos
sahf
pop
pop
icebp
mov
and
not
mov
add
xor
mov
dec
rcrb
inc
sbb
mov
and
cwtl
idivl
cmp
filds
xchg
enter
ret
outsb
dec
inc
jmp
bound
inc
hlt
shlb
lahf
in
shrb
test
daa
loopne
ss
test
xchg
push
mov
jg
shl
mov
idivb
shrb
shrb
ret
fwait
xor
int3
test
in
daa
int
outsl
in
lea
or
push
cmc
out
cmp
in
push
sbb
sbb
or
inc
mov
gs
adc
aam
addr16
pop
das
mov
xchg
div
test
test
cmp
imul
mov
pop
in
jbe
cmp
cs
sarb
cmpsb
jmp
out
loope
leave
stos
testl
dec
sbb
mov
and
movsb
jae
gs
xchg
add
mov
movsl
mov
sub
adc
inc
jnp
inc
iret
and
out
sti
frstor
jg
mov
ja
stos
pop
and
jmp
jbe
cs
int3
test
loop
in
clc
cmc
loope
pop
popa
clc
pushf
in
ret
mov
mov
dec
xchg
mov
cld
iret
rorb
daa
mov
outsb
push
and
or
or
int
negb
push
adc
ret
out
imul
vhsubps
aaa
mov
ficoml
jo
push
dec
dec
pop
clc
lods
test
jmp
fcoms
inc
cvtpi2ps
data16
pop
jae
fisubs
icebp
ds
mov
adc
mov
nop
repnz
in
cmp
stos
mov
sbb
ja
out
imul
movsl
adc
sbb
add
movsb
rcl
iret
mov
incl
jnp
inc
mov
or
popa
jo
jp
test
jmp
adc
cltd
popa
aam
xchg
mov
sbb
test
mov
fsubp
bound
xor
dec
cmpsl
jp
ds
sub
add
mov
testb
xor
xor
popa
push
push
int
faddl
mov
enter
xor
stos
in
push
cmp
inc
mov
inc
pushf
bound
cmp
lea
pop
je
mov
sahf
adc
dec
inc
dec
ja
ret
push
push
les
inc
scas
fsubl
bound
xchg
xor
lds
test
inc
lea
push
push
pusha
pop
mov
mov
out
mov
test
out
dec
pop
and
popf
or
mov
aam
jo
dec
repz
out
std
xor
mov
sub
xchg
ss
idivb
xor
mov
mov
jae
nop
aas
inc
rol
add
pop
repnz
sub
je
movsb
fldenv
add
fidivs
mov
xchg
cs
nop
xchg
std
jne
test
push
loop
daa
push
leave
push
repz
test
add
cmp
jno
mov
push
cmp
popf
cmp
push
nop
cmp
cmc
cmp
push
outsl
mov
jae
ss
leave
icebp
mov
jo
xchg
jae
jbe
adc
sub
andl
or
cmp
in
mov
jp
mov
xchg
push
jbe
mov
inc
dec
test
sub
xlat
add
xchg
ss
sub
inc
xor
pop
fwait
sub
cld
or
sbb
lret
lea
orl
xor
mov
and
popf
imul
pop
inc
adc
insb
sti
xchg
sbb
pop
jge
mov
ret
xlat
pop
ds
pusha
mov
push
addr16
aam
in
std
xor
xchg
andl
sub
mov
mov
scas
or
testl
adc
mov
movsl
frstpm(287
dec
pusha
or
int3
sub
adc
std
xor
shlb
icebp
xor
gs
xor
adc
fmull
mov
sub
mov
insb
xor
insb
xchg
xor
nop
mov
adc
movsb
mov
dec
mov
add
push
mov
idivl
arpl
fpatan
insb
fisttpl
test
mov
sbb
ljmp
popf
sbb
mov
cwtl
sbb
addr16
dec
jp
popl
mov
add
sbb
add
int3
mov
jg
jg
or
and
fildll
mov
xor
or
and
in
or
and
sub
adc
movsb
pop
cmp
lods
push
push
xchg
daa
jmp
jmp
inc
or
xor
pop
and
sbb
mov
push
mov
jnp
mov
sub
cmc
or
test
lret
cld
pop
inc
sbb
rcll
jo
pop
loope
lahf
cmpsl
dec
pop
cwtl
mov
gs
xor
mov
xor
pop
stos
dec
inc
mov
dec
dec
cmp
lds
xor
add
outsl
jmp
push
adc
push
mov
sbb
dec
cmp
jl
dec
pop
cmp
mov
fsubs
lret
jp
test
mov
push
in
popf
push
push
bound
dec
sti
movsb
hlt
int3
and
xchg
mov
pop
pop
je
xor
mov
push
xchg
push
sbb
sahf
out
xchg
jle
mov
push
and
pop
sbb
or
xor
push
pop
xorb
sub
ret
inc
pop
and
push
inc
add
data16
out
js
lods
jbe
mov
jns
mov
lock
rolb
mov
loop
aam
sub
cwtl
or
test
jg
jns
add
cmpsb
cmp
insl
inc
push
mov
fsubrp
stc
lock
mov
pop
clc
inc
cmpsl
mov
push
cmc
mov
and
jb
pop
cwtl
stc
cmp
push
sti
jnp
sbb
into
in
decb
icebp
aas
mov
push
cmp
gs
push
js
mov
jno
mov
inc
subl
add
or
dec
pop
movsl
mov
icebp
sub
fcmovbe
mov
stos
ror
sti
cltd
loop
adc
arpl
int3
dec
sub
pop
or
xchg
lret
dec
xchg
pop
push
jg
aaa
ror
adc
fidivl
add
shr
mov
xchg
cmp
add
cld
xor
cltd
jge
imul
jb
and
jnp
int
ja
pop
push
test
cwtl
add
hlt
pslld
in
pop
es
xor
or
lcall
xchg
inc
shlb
mov
in
inc
insl
xchg
jno
sbb
cmc
or
inc
cmpsb
or
into
xchg
pusha
mov
repnz
jge
dec
inc
outsl
out
mov
xchg
inc
imul
inc
add
jae
leave
sub
jecxz
ret
fwait
add
push
int3
into
loopne
idivb
scas
xchg
inc
sbb
mov
inc
or
sub
mov
repnz
push
and
dec
push
jno
pop
xchg
cmp
cmc
fbstp
cmp
fbld
jnp
stc
mov
mov
sub
mov
outsb
push
inc
movsb
repnz
cmp
mov
mov
sbb
mov
jbe
mov
mov
imul
xor
pop
scas
jbe
aaa
in
cmc
scas
and
sbb
add
or
cmc
adc
adc
ds
cmp
lds
and
mov
in
xor
mov
push
and
repnz
dec
mov
mov
mov
into
movsb
test
cmp
dec
fldl
cmp
push
cmp
jle
inc
cli
xor
icebp
test
push
into
fmull
mov
in
fwait
push
adc
mov
xchg
push
jbe
jo
cmp
sahf
cmpsb
add
fcomps
push
adc
lcall
xchg
shrb
enter
pop
sub
sub
ljmp
mov
push
add
pusha
jno
cmpsl
inc
cltd
or
sbb
and
pop
push
dec
cltd
sahf
inc
aad
jp
and
outsl
add
leave
rcr
out
jno
into
scas
arpl
pop
test
cmp
inc
ror
test
cmp
inc
rorb
repz
cmpsl
movsb
imul
mov
push
addl
aas
push
add
adc
fiadds
push
lods
mov
sbbl
xchg
test
sbb
test
add
xor
xchg
sahf
xchg
int
or
jl
jmp
rcrb
push
leave
jp
fiaddl
roll
adcl
jmp
fstpt
repnz
mov
inc
arpl
adc
xchg
pushf
sbb
mov
lahf
jmp
popa
dec
bound
gs
psrad
jno
outsl
mov
sbb
xchg
movsl
je
ljmp
out
add
push
mov
push
cmp
shrl
shrb
cmpsb
shll
in
adc
in
lcall
jle
fidivrs
test
aam
sbb
movsl
sub
sbb
dec
mov
dec
popa
cmpsb
mov
pop
cld
dec
loope
add
fidivrl
popf
cmp
in
xchg
insl
sbb
gs
data16
imul
or
sbb
or
adc
ss
int
or
jae
xor
and
or
mov
popa
test
and
pop
test
iret
xor
mov
loopne
iret
cmp
mov
cmp
enter
sbb
xor
pop
xor
adc
sub
dec
andb
dec
pushf
or
push
in
orl
add
scas
xchg
push
and
push
or
and
cs
cltd
test
pop
xor
stos
ja
adc
ret
pop
mov
test
out
mov
dec
sbb
mov
pop
add
sub
add
xchg
repz
and
rcll
test
outsl
cmp
mov
lods
mov
mov
sbb
pop
jnp
mov
pop
subl
scas
sbbl
in
bound
dec
jbe
inc
push
xchg
lods
or
addl
gs
out
sub
in
adc
sub
cld
sbb
test
bound
xor
push
mov
scas
xchg
jne
mov
sub
mov
cmc
aam
dec
mov
mov
out
bound
test
jp
test
cwtl
addr16
dec
dec
adc
fmul
mov
dec
pop
mov
cmp
xchg
cmp
push
add
jmp
mov
or
mov
adcl
sub
nop
stos
outsb
in
hlt
scas
stos
xchg
in
push
in
out
add
movsb
lret
xchg
enter
jecxz
cmpsl
pop
shlb
inc
aad
js
test
lods
inc
dec
lock
mov
mov
adc
push
outsl
pop
jno
push
gs
out
lea
lret
xchg
sub
imul
addb
pop
inc
push
cltd
fisttpll
clc
lock
inc
ret
enter
fcomip
mov
xlat
jae
add
or
push
mov
in
pusha
or
out
loopne
inc
pop
ds
loop
and
leave
pop
mov
pop
rcl
cli
xor
loop
mov
into
cltd
cmp
jge
jp
mov
mov
mov
mov
xor
insl
or
loopne
jge
gs
or
and
jecxz
andb
test
push
adc
fbstp
sbb
das
in
fstl
mov
pop
pop
push
jns
inc
enter
or
hlt
in
inc
das
mov
in
pusha
jle
jmp
inc
test
and
jle
inc
fdivr
mov
roll
jae
outsl
inc
cs
jmp
push
sbb
inc
test
jb
xchg
sbb
sbb
sbb
adc
mov
mov
gs
subl
push
jl
sub
leave
lea
jnp
movsb
inc
aas
adc
sbb
jno
ret
pop
scas
test
sub
fsts
jg
subl
fcoms
and
fsts
movsb
mov
loop
mov
jmp
mov
stos
clc
outsl
mov
int
pop
mov
lahf
sub
cmpsb
arpl
push
sub
adc
popa
scas
or
and
jmp
jnp
mov
test
sahf
mov
xchg
add
dec
cmp
xchg
das
dec
mov
jp
jmp
enter
mov
aad
dec
jmp
movsl
in
aas
repz
inc
or
inc
mov
movsl
lds
outsl
xchg
push
add
les
sub
mov
dec
xor
aam
hlt
jns
cmpb
jp
outsb
mov
test
fwait
xchg
fldt
iret
adc
cs
sub
add
loop
mov
subb
push
mov
xchg
xor
cmpl
enter
mov
dec
stc
inc
cs
fdivr
andb
test
sub
sbb
movsb
ja
push
mov
adc
clc
int3
shrb
stos
add
insl
fidivl
mov
mov
aas
add
hlt
xlat
fidivrs
sub
popa
and
mov
push
and
clc
rol
cltd
jnp
mulb
out
or
mov
mov
jg
in
dec
or
sbb
fmul
push
xchg
push
adc
sbb
lahf
add
mov
and
nop
gs
scas
ljmp
mov
cmp
jbe
add
iret
imulb
bound
lahf
aaa
dec
dec
jbe
rcrb
mov
mov
sub
stos
push
in
sbb
mov
in
dec
add
mull
cmp
cmp
pop
sub
push
loop
test
cmp
jns
in
cmp
dec
lret
pushf
sbb
xor
cmp
sbb
mov
pop
mov
xor
dec
fld
mov
xchg
cmp
shll
ss
jp
mov
bound
add
mov
lock
sti
mov
add
les
aaa
mov
leave
leave
xor
xchg
lret
aas
jecxz
xorl
xor
mov
cmp
adc
mov
xchg
pushf
xchg
jae
test
mov
insl
sbb
mov
ds
hlt
stos
fnstcw
loop
inc
or
jb
out
cmp
es
adc
cwtl
and
jg
cmp
add
xor
imul
rol
pop
push
shrb
or
mov
imul
pop
xor
jno
lds
xor
shl
test
jo
fnstsw
outsl
xchg
mov
shrl
leave
xlat
and
xor
ficoml
add
jge
daa
rol
inc
add
lds
dec
enter
add
dec
ja
push
push
xchg
push
lcall
stos
scas
lock
dec
das
pusha
test
in
clc
in
in
lahf
out
sub
out
loop
jge
cmp
xchg
js
xor
push
jg
movsb
inc
mov
dec
out
dec
gs
adc
xor
push
ja
gs
cwtl
push
dec
adc
cmp
pop
and
xchg
mov
jne
mov
lcall
mov
dec
xor
cmpsl
ds
fnstenv
sar
jl
imul
mov
stos
or
jnp
out
cwtl
es
xchg
leave
nop
rcl
sbb
into
push
mov
mov
add
fmull
fldenv
loopne
clc
mov
fidivrs
dec
hlt
test
adc
mov
imul
pop
push
fcompl
mov
adc
cmp
adc
xchg
jno
mov
cmp
cli
mov
arpl
cltd
into
adc
test
in
rcl
mov
icebp
mov
test
cs
aad
dec
xor
jmp
in
push
bound
inc
push
icebp
cmpb
notb
sbb
in
test
push
mov
repnz
stos
mov
or
push
js
xorb
cmp
inc
jnp
inc
stc
mov
insl
mov
hlt
rcrb
cmp
mov
mov
mov
sbb
cmc
nop
sub
lods
scas
cmc
jecxz
movsb
inc
mov
add
jbe
add
shlb
adc
fmuls
push
bound
addr16
fidivrl
movsb
repz
xchg
das
adc
and
sub
mov
jb
pop
test
mov
mov
mov
or
fnstenv
and
xchg
jbe
sahf
pushaw
mov
mov
inc
cmpl
mov
je
out
ret
out
popf
xor
sub
pop
cmpsl
leave
mov
pop
fcompl
and
sti
inc
sub
outsb
divl
popf
jne
mov
cli
outsl
fs
imul
aam
push
jo
mov
aaa
ret
sahf
into
add
dec
push
dec
shr
and
and
shrl
xor
lods
outsl
loopne
push
pop
orl
cmpsb
andb
call
leave
or
cmp
ljmp
lret
das
inc
stos
outsl
mov
and
lock
cmovp
arpl
pop
aad
and
aas
add
std
loopne
push
popf
ss
shrb
andl
jg
xchg
pusha
iret
adc
int3
lret
cmpsl
pusha
inc
outsb
stc
mov
cltd
pop
bound
pop
fiadds
push
mov
incl
sub
call
push
test
xor
xchg
jo
out
jmp
test
data16
sbb
or
lret
rcll
div
js
push
sahf
or
out
cmpsl
jns
dec
js
sub
jg
jns
sbb
pop
in
bound
out
in
or
lea
iret
xchg
mov
roll
jno
iret
test
imul
xchg
imul
mov
and
loopne
shrb
sbbb
dec
popa
mov
rorb
into
pop
lret
push
xchg
lret
fld
clts
mov
push
jne
flds
pusha
cmp
flds
into
lods
dec
and
dec
push
mov
push
int3
jbe
sub
icebp
xor
bound
sbb
push
lret
sub
cmp
sub
jp
call
test
or
jbe
filds
test
mov
sub
pushl
in
mov
push
or
cmpsl
xchg
jns
popa
sbb
into
test
incb
int3
and
pop
xchg
fstps
cmp
daa
cmp
jb
adc
or
fbld
and
addr16
loopne
and
inc
fwait
pop
xor
inc
push
xor
push
or
dec
std
mov
adc
sti
mov
dec
movsb
fnsave
mov
add
xchg
jbe
test
sub
add
hlt
callw
mov
stos
xchg
fld
mov
pop
xchg
push
mov
aam
lret
push
push
cmp
pop
xchg
pop
enter
xchg
and
pop
test
push
lea
repz
outsl
mov
pusha
int3
cmp
and
jmp
testb
outsb
mov
dec
xchg
inc
das
xchg
sbb
lods
adc
scas
xchg
repz
mov
int3
leave
jnp
mov
push
sbb
push
mov
cwtl
pop
rorb
pop
je
sbbb
fldl
roll
js
add
cli
ja
xchg
cld
popa
xor
inc
hlt
pop
cmp
pop
adc
push
and
outsb
dec
stos
pop
fstl
fsubs
xchg
sbb
imul
sub
fisttps
bound
dec
ret
cmovbe
pop
pop
cmp
mov
insb
jo
adcb
push
mov
cmp
mov
push
repz
and
sbb
cmp
add
adc
out
push
inc
mov
lret
push
jl
mov
dec
dec
outsb
add
imul
fucomp
arpl
sti
adc
dec
scas
jmp
xor
xchg
into
or
adc
inc
fstpt
mov
adc
iret
insl
mov
mov
pop
fsubrl
fbstp
xor
inc
mov
pop
mov
or
xchg
xor
sub
repz
int
outsb
and
jmp
push
std
sub
inc
sub
clc
stos
mov
mov
loop
mov
in
shr
mov
inc
gs
adc
jecxz
dec
pop
cmp
cli
loop
test
rcrl
xor
cmp
mov
pop
push
or
imul
test
mov
add
mov
setno
and
enter
lods
pop
sbb
iret
sbb
in
cmp
in
int
insl
sub
mov
jno
scas
out
mov
or
cwtl
mov
xchg
adc
lret
imul
or
push
out
cmp
mov
cs
call
sub
cmpsl
adc
xor
jge
cmp
movsl
inc
loope
xchg
mov
popf
imul
test
fists
das
cmp
cmpb
sbbb
adc
mov
arpl
or
pop
movl
notb
push
in
pop
cltd
ficoml
int
cmpl
cmpsb
out
loop
fcomps
outsl
decb
and
sbb
sub
mov
sub
leave
jmp
stos
inc
call
and
fidivrl
ja
pop
sub
pop
jb
pop
cld
sbb
mov
jno
je
xchg
out
mov
xor
sub
xchg
dec
stc
int3
adc
test
inc
lret
inc
mov
js
add
mov
pop
jmp
notl
push
push
pop
jb
inc
or
mov
jl
cltd
into
inc
jno
xor
nop
fsts
adc
push
ja
je
cmp
mov
cmp
dec
lahf
pop
xor
das
nop
idiv
mov
lods
arpl
push
shll
lahf
adc
mov
mov
shl
mov
pushf
inc
mov
nop
cmc
cmpb
lret
scas
pusha
imul
outsb
xor
stos
and
jle
jecxz
sbb
sub
in
imul
cs
cmp
xor
adcl
sub
and
insl
dec
insl
cld
pusha
cmpsb
scas
push
xor
inc
pop
jp
fsts
jecxz
mov
fcmovbe
dec
outsb
cmp
sbb
cmp
xor
mov
cmp
pop
dec
sub
mov
ret
cmpsl
out
popa
sar
mov
call
fstpl
lret
mov
inc
fldl
sub
ja,pt
sbb
shlb
adc
mov
jno
mov
or
rolb
sub
adc
add
fs
lods
pop
aam
push
mov
dec
icebp
idivb
inc
and
in
add
gs
sub
clc
mov
ds
push
aad
cmp
xor
xchg
leave
or
push
xchg
out
bound
cmpsl
ror
push
jae
inc
xor
outsb
and
xchg
sbbl
and
add
sub
mov
or
cmp
int3
adc
xchg
lea
cmp
gs
mov
cli
cmc
jmp
push
jb
pop
mov
popa
push
out
lods
dec
mov
call
scas
imul
jae
jae
or
dec
mov
ds
sub
cmpsl
mov
pop
jl
or
push
mov
rclb
jl
int
cli
xor
fwait
xchg
dec
fcompl
pop
sbb
in
jo
clc
fisttpl
cmp
mov
mov
jae
and
fsubrp
insb
jns
scas
jl
mov
cld
sub
jle
pop
sarb
mov
inc
cld
xchg
xor
mov
test
rcrl
mov
jae
rcrb
fisubs
pop
ret
aas
stos
jnp
shlb
push
lahf
sbb
cld
mov
mov
test
imul
mov
loop
rcr
xchg
jo
mov
cmc
loopne
pop
addr16
jg
negl
lock
int
pop
pop
pushf
imull
into
mov
push
ljmp
adc
in
xchg
mov
je
imul
cld
mov
out
cmp
movsb
std
mov
mov
je
cmc
outsb
jmp
fs
in
loope
gs
roll
pop
pop
fldt
cmc
jmp
idiv
jo
mov
ss
mov
pop
jp
testl
ret
mov
dec
xlat
jg
mov
mov
sbb
loop
std
mov
cwtl
fidivs
xchg
dec
xor
das
jb
scas
incb
rcrl
jnp
in
mov
filds
js
xchg
jmp
stos
pop
mov
out
lahf
lcall
test
out
adc
fdivrs
sbb
lret
fwait
fwait
pushf
pop
sbb
aas
cs
cmp
inc
mov
and
mov
insl
push
loopne
pop
invd
je
sti
ds
dec
test
mov
insb
bound
movsb
js
or
and
addb
ljmp
xchg
dec
hlt
cmp
add
ret
dec
scas
mov
jo
pop
push
lahf
inc
push
cltd
xchg
pop
in
dec
pop
jge
lods
cli
daa
push
int3
orl
mov
jne
sub
mov
push
cld
in
clc
test
fdivrl
mov
mov
popf
lret
sbb
psrlw
push
popa
popf
gs
push
push
in
xor
inc
or
imul
xchg
fwait
mov
test
cs
cld
out
cmp
aas
fcmovnu
popa
and
fildl
mov
ret
and
jecxz
mov
test
fwait
adc
pop
pop
es
sub
jns
lea
test
inc
inc
or
jae
outsl
mov
mov
sbb
add
shl
jg
out
mov
iret
xchg
mov
xchg
mov
fnstenv
jmp
mov
int
ljmp
pop
lret
jecxz
sub
sub
push
imul
mov
call
lcall
cmp
pop
popf
imul
jbe
dec
or
mov
in
sbb
xor
push
pop
mov
fdivrs
inc
lds
inc
es
int3
mov
aaa
int3
mov
loope
pop
cmp
mov
cltd
imul
out
mov
pop
dec
arpl
outsb
arpl
popf
inc
push
add
pop
pop
shlw
and
notl
jg
out
pushf
cmp
cmp
enter
sahf
pushf
popa
data16
jo
push
jmp
push
or
nop
aam
or
pop
cmp
outsb
push
cs
xor
xchg
mov
jp
xor
sbb
imul
lock
xor
repnz
xchg
or
xchg
jb
sbb
int
lahf
negb
jae
jecxz
hlt
jg
repz
gs
cmp
nop
inc
or
ret
jmp
mov
adc
data16
in
jecxz
jl
outsl
sbb
test
es
sbb
mov
inc
fdivr
jmp
aas
sub
dec
in
faddl
lods
cmp
mov
cwtl
jae
or
lret
test
cmp
fsub
pop
shl
jno
roll
ljmp
cmpsb
addr16
test
icebp
int
fsubs
scas
les
les
outsl
push
sarl
cmp
out
cmp
push
sub
sub
adc
ss
stos
imul
aad
dec
loop
pop
xor
aaa
stos
enter
jl
ja
je
ja
loop
jnp
enter
push
pop
lret
push
cmp
int
xchg
testb
sbb
jle
jecxz
sti
lds
shl
das
hlt
je
sar
lret
adc
js
in
cld
lods
dec
pop
push
jmp
cmpsb
add
inc
jns
or
pusha
cltd
int
fnsave
and
dec
or
gs
xor
out
mov
ja
sub
xor
movl
in
movsl
mov
pop
int3
cmpxchg
jno
mov
sti
outsl
jg
fs
xor
pop
push
jne
in
je
mov
mov
cmpsl
repz
arpl
ds
sub
push
push
and
lahf
dec
int3
pop
jg
roll
jb
sub
xchg
sub
mov
lret
jnp
fyl2xp1
fadds
data16
fsubs
test
shlb
movsl
inc
orb
stos
mov
mov
icebp
xor
cmp
loope
push
shl
jecxz
adc
sbb
adc
add
lea
aam
cmc
mov
test
imul
dec
inc
and
mov
outsb
scas
lock
lods
inc
lcall
mov
inc
adc
xchg
hlt
xchg
xchg
or
rcl
xor
xor
iret
movsb
pop
xchg
jp
test
inc
jg
pop
mov
add
shlb
loop
hlt
inc
loop
cmp
mov
mov
repz
and
jbe
dec
mov
push
push
jl
add
fwait
cmp
mov
aaa
inc
es
lods
inc
pop
shr
cmc
jmp
mov
sti
inc
dec
out
mov
inc
push
xchg
nop
inc
lahf
test
xchg
ja
mov
lods
and
push
movsl
mov
je
outsb
dec
push
adc
jl
pusha
pop
xchg
pop
xor
lods
and
fldl2e
push
mov
xchg
push
flds
jp
fldt
mov
sub
testb
mov
outsl
xchg
inc
mov
test
mov
fxch
mov
es
inc
mov
push
mov
neg
les
cmpsb
mov
js
fs
adc
and
pushl
orl
ds
leave
push
xor
lret
pop
dec
or
movsb
mov
cmp
int3
push
mov
mov
inc
push
and
jnp
jno
mov
adc
gs
cli
leave
das
sbb
ret
imul
mov
mov
arpl
lahf
sbb
dec
popa
rolb
mov
int
shrl
ljmp
or
jae
dec
repnz
stos
fsubr
or
jl
cld
lods
ja
sbb
add
push
test
xchg
pushf
xor
ss
inc
dec
mov
push
xchg
aaa
cwtl
icebp
js
lret
jno
mov
xor
std
aad
cmp
sbb
push
in
rorl
in
orl
inc
xchg
loope
push
mov
inc
shlb
insl
pop
aas
repz
mov
orb
sti
sub
movsb
sbb
mov
jp
or
xor
mov
sbb
pop
cmp
fsubrs
dec
inc
adc
mov
std
aam
mov
push
es
mov
sub
sbb
addr16
xchg
sub
pushf
pop
mov
push
fstpt
jo
out
jl
mov
sahf
lcall
mov
loop
jnp
dec
lret
mov
sub
fdivl
je
jo
mov
fistps
and
repnz
cmp
add
fs
and
repz
cli
das
js
mov
dec
sub
dec
out
xor
je
je
imul
mov
pop
and
inc
stc
mov
pop
das
mov
stc
dec
mov
push
cli
and
jnp
out
mov
mov
imul
out
dec
mov
shlb
fxch
out
adc
movsb
mov
movsl
das
shr
dec
and
out
scas
in
pop
jge
xchg
sahf
sub
sub
das
ud2
mov
dec
ljmp
aam
idivl
xor
pop
fwait
mov
popf
mov
test
repnz
sbb
jne
cmc
pop
push
inc
or
inc
test
inc
push
cwtl
daa
cmp
dec
sbb
ljmp
lods
ret
aas
adc
xchg
mov
aad
outsl
aas
cs
fdivrs
mov
push
ret
stc
faddl
push
or
pop
rclw
decb
stos
push
roll
xchg
xchg
sbbl
add
ror
push
sarl
bound
adc
push
inc
mov
sarl
insl
pop
lods
xor
mov
and
xor
js
in
inc
xchg
repz
jo
ret
push
rclb
and
rcll
jne
stos
and
fcoml
enter
jmp
jp
xchg
jl
int
out
push
nop
jne
sub
popa
push
fmuls
cs
xor
das
stos
iret
cmc
lcall
add
cmpsl
fsubrs
mov
js
leave
cli
aad
xchg
push
insl
jle
pop
cmp
push
xchg
ljmp
shlb
pop
fsubrs
or
fcomi
xchg
repnz
aam
dec
daa
cmp
ret
xlat
lret
cmp
add
adc
gs
mov
jbe
js
ret
addr16
stos
ret
outsb
or
lock
jbe
loop
insb
or
in
les
cmp
int
dec
inc
bound
cmp
mov
repz
push
pop
sbb
aad
jecxz,pn
push
call
xor
mov
enter
rcrb
loop
das
addr16
lret
inc
pop
push
ja,pt
pop
lods
push
sub
into
subl
sub
nop
xchg
outsb
aad
inc
jno
fnsave
mov
mov
nop
das
gs
cli
fists
and
stos
dec
mov
push
mov
movsl
push
pushf
dec
mov
pop
push
lods
ret
sbb
pop
movsl
movsb
mov
xor
or
lret
cmp
push
pop
mov
dec
xor
pop
dec
xor
xor
add
scas
pop
jle
pop
sub
jno
add
xchg
cmp
jle
repz
fistl
dec
fwait
lods
sbb
fsubs
mov
push
pop
sub
or
cld
in
mov
pop
inc
aam
repz
jo
repnz
lock
stc
inc
pop
std
addps
mov
adc
or
std
scas
add
push
icebp
xlat
xchg
popf
sbb
sbb
fidivs
int3
es
adc
xor
ret
int3
out
mov
add
das
mov
mov
insl
scas
roll
xor
outsl
lods
and
inc
or
jmp
adc
or
inc
dec
sub
or
aas
inc
loope
ja
pop
and
pop
mov
rorl
push
cs
pop
adc
lret
mov
imul
pop
lods
and
inc
imul
mov
sub
jbe
and
fstpt
lods
or
lds
push
mov
or
cmp
push
and
inc
loopne
xlat
insb
pop
jmp
out
xor
je
push
xchg
pop
push
adc
outsb
or
sub
cmc
out
add
xor
mov
cmove
mov
into
push
pusha
push
pop
popa
cwtl
jmp
stc
xchg
ds
mov
push
push
xchg
sbb
add
mov
inc
cltd
cmpsl
jae
ret
cs
test
dec
rorl
call
std
sub
mov
dec
or
inc
out
movsb
icebp
enter
or
sahf
mov
lret
ror
fnop
bound
pop
inc
icebp
and
pop
hlt
idivl
cmp
shrb
jmp
dec
cld
unpcklps
pop
dec
and
fcmovbe
or
int
subb
sbb
or
pop
sbb
mov
xor
out
arpl
sub
cmc
sub
shrl
push
push
jmp
jecxz
stos
in
fsubl
lock
jp
cltd
pop
test
dec
faddl
ret
mov
cmp
sbb
inc
lea
xlat
push
shr
out
xchg
fxch
test
push
test
aas
ret
jnp
xor
xchg
popf
lahf
nop
mov
imul
out
mov
xor
cmp
or
jbe
cmp
mov
lcall
imul
mulb
push
shrl
and
xchg
js
mov
repz
aaa
into
fcmovne
dec
push
or
mov
add
or
push
adc
daa
xchg
out
in
xor
mov
popa
inc
pop
arpl
lods
ljmp
lcall
loopne
repz
in
jl
fcoms
sti
dec
aas
fdivs
xchg
jno
lds
or
dec
mov
inc
inc
lds
test
sbb
data16
fdivl
pusha
cmpsl
sub
cmp
dec
jbe
push
ret
sar
lea
fists
sbb
pop
int3
rcll
ja
pop
lret
mov
dec
xorl
arpl
popa
cmc
cmp
rcrb
pop
das
les
pop
iret
jnp
dec
xor
cmp
int3
adc
cmp
push
adc
sub
sbb
je
pushf
xchg
out
push
jecxz
or
fsubrl
jge
xchg
iret
shrl
dec
fcmove
xor
js
ja
jg
leave
xor
mov
nop
loop
sub
in
xor
test
ljmp
mov
sti
popf
stc
mov
pop
mov
and
lea
das
adc
fdivrp
cmp
push
pop
adc
les
or
push
xor
mov
and
sub
cmpl
mov
adc
jmp
int
sti
inc
push
ret
lahf
jecxz
ja
popa
mov
repnz
cmp
push
es
jge
and
lock
test
lret
mov
push
arpl
xlat
or
sub
int
insl
rcl
sarl
mov
adc
out
cmp
add
xchg
shll
mov
sbb
je
add
push
pusha
dec
adc
movsb
cmp
das
xchg
sbb
hlt
push
mov
xor
mov
imul
and
loopne
push
repnz
test
mov
movsb
sub
xor
fistl
mov
bound
icebp
jne
xchg
mov
xor
add
outsl
dec
xchg
sbb
mov
xor
push
clc
mov
scas
jle
xchg
jo
sar
add
dec
outsl
push
js
popa
addr16
sbb
mov
mov
and
mov
loop
stos
push
add
jo
push
jnp
inc
aas
xchg
adc
je
xlat
xor
ss
lock
pop
jp
enter
into
leave
mov
dec
and
loopne
pushf
jo
int3
movsb
fwait
add
inc
lret
add
sub
pop
call
shl
clc
dec
imul
test
repz
out
ja
mov
clc
push
int
sub
leave
jo
inc
mov
fisttpl
loopne
shlb
lret
inc
fnsave
aad
sarb
call
cmp
lods
sahf
aas
shrl
xor
addb
dec
cltd
testb
lods
in
les
mov
cld
cmpsl
fsub
mov
sti
out
adc
mov
insb
imul
xor
push
jae
test
inc
arpl
leave
dec
push
jle
in
imul
dec
cmp
pusha
gs
mov
lods
cmpsl
lret
pushf
jo
loope
cmpsl
int3
test
inc
jno
fwait
jne
sbb
mov
dec
popfw
cmp
in
out
into
mov
cltd
lea
movsb
push
xchg
into
adc
jl
mov
push
arpl
out
push
subl
outsb
mov
fwait
xor
shlb
je
push
mov
xchg
movsl
xor
iret
xchg
gs
xchg
sub
aam
adc
dec
imul
mov
stos
mov
add
inc
loop
leave
mov
mov
xlat
pop
jns
jmp
push
aaa
cmp
mov
idiv
mov
push
and
xorb
shll
push
sbb
and
out
xor
add
scas
mov
xor
jne
cmp
nop
cmp
mov
outsb
rolb
or
cld
pop
cld
add
dec
dec
mov
cltd
test
pop
scas
incl
xchg
imulb
es
add
or
pushf
inc
push
testl
add
scas
lret
sbb
jp
add
lahf
sub
lcall
fmul
and
movaps
adc
cmp
cmp
pop
test
pop
xchg
pop
mov
cli
in
loope
and
pushf
subl
xor
jb
dec
adc
pop
mov
or
faddp
xchg
pusha
inc
jecxz
xor
pop
aad
mov
push
jle
das
subl
xchg
and
sahf
jb
pushl
dec
bound
ja
jp
loope
popf
sti
test
out
aas
std
repnz
push
outsb
mov
cltd
and
in
inc
out
mov
mov
lods
lock
xchg
sub
cmpsb
inc
leave
xor
jnp
jno
cmp
sbb
mov
mov
cmp
in
mov
js
push
push
in
ret
push
repnz
sub
lret
adc
dec
movsb
ja
sub
pop
cs
adcb
outsl
lock
add
imul
or
mov
cltd
pusha
xor
das
jle
inc
pop
icebp
push
xor
push
pop
xchg
mov
jg
dec
ffreep
push
or
sar
lcall
arpl
pop
jns
lret
addr16
cwtl
data16
and
insl
dec
jl
icebp
ret
jb
mov
lcall
push
fsts
xor
dec
push
inc
cld
nop
inc
sbb
pusha
dec
nop
cmp
outsb
insl
pop
adc
and
inc
pop
dec
dec
and
jae
inc
not
push
and
push
inc
jo
mov
in
inc
mov
mov
adc
push
pop
jne
sbb
or
push
imul
sarb
or
cmc
lds
icebp
movsl
aad
xor
das
mov
and
cltd
sbb
pop
jns
movsl
test
push
inc
mov
sub
out
sbb
mov
push
dec
out
js
mov
and
aam
jge
mov
push
fidivl
dec
out
enter
sarl
mov
lea
sub
or
mov
inc
shrl
mov
sahf
repz
or
pop
aaa
mov
xchg
aam
jge
das
mov
mov
testb
insl
pop
jne
and
cs
insb
rcl
scas
dec
fildll
popa
and
adc
insl
insb
imul
roll
sbb
call
clc
or
or
test
dec
xchg
add
rorl
gs
daa
inc
pop
mov
jbe
jge
jecxz
xchg
pop
xchg
mov
xlat
sub
cmp
sbb
stc
jno
and
cwtl
jne
fwait
lret
jecxz
mov
movsl
and
daa
push
mov
jl
jb
mov
fwait
sub
call
xor
rcll
call
cli
clc
add
jne
dec
outsl
in
repnz
sarl
or
and
mov
sbb
lds
ss
stos
test
inc
jmp
mov
jae
fisubl
pop
outsb
das
adc
test
mov
push
push
les
stos
inc
stos
pushf
lds
mov
das
cmpsb
clc
lea
rclb
fnstenv
mov
sub
adc
jns
mov
mov
hlt
cmc
clc
pinsrw
or
mov
inc
aad
pushf
mov
pop
cmp
aad
repz
push
dec
pusha
movsl
and
jecxz
fstpl
lods
mov
rcrb
sbb
adc
out
add
ficompl
repz
lods
or
mov
nop
sbb
push
aam
aam
sub
mov
int3
nop
in
mov
hlt
cmp
push
leave
outsb
jbe
addl
adc
push
addb
lcall
push
jecxz
ljmp
rorb
and
mov
nop
mov
or
dec
shld
jmp
in
sbb
aam
popa
repnz
mov
fstps
inc
repnz
shll
cli
add
jbe
test
rcrb
loopne
rcl
cmc
add
or
inc
dec
popf
inc
lds
jmp
mov
or
pusha
es
fidivrl
insb
std
arpl
in
and
aam
fadd
jg
fistpll
mov
ret
xor
das
push
dec
pop
xlat
call
add
mov
and
lods
dec
jmp
and
sarb
lods
icebp
add
femms
xchg
sub
jmp
dec
xchg
fisubl
loopne
dec
imul
pop
add
push
call
insl
sub
gs
xchg
mov
inc
fdivl
add
scas
cmp
cmpsl
out
mov
push
clc
clc
inc
cmp
pushf
repz
lock
push
inc
dec
pop
loope
popf
or
cmp
movsb
out
or
rorb
mov
loop
xor
rolb
nop
pushf
xchg
pushf
jb
rcll
das
aas
pop
fdivrp
cli
hlt
mov
xchg
hlt
lea
stos
push
xor
cmp
loopne
lods
rcr
add
sub
push
add
mov
jnp
notl
mov
adc
ljmp
mov
jmp
dec
add
pop
dec
sbb
push
push
cmp
and
aas
lods
mov
fdivs
pop
mov
mov
push
in
cmpsl
add
out
dec
xchg
jmp
mov
pushl
xor
insb
jg
pusha
and
notl
sbbl
add
mov
lods
aas
sub
and
adc
adc
out
push
movsl
adc
cwtl
iret
shll
inc
pop
cli
into
xchg
push
xchg
aam
xchg
ret
sbb
adc
filds
mov
mov
and
xor
cmpsb
call
and
mov
test
push
out
push
pop
mov
mov
lcallw
stc
std
jecxz
sbb
push
test
mov
xchg
bound
mov
mov
mov
inc
jae
mov
ljmp
std
jle
and
sub
or
sub
lret
jp
mov
shll
mov
or
lret
mov
dec
imul
cmp
mov
cmp
xchg
in
jmp
mov
lods
push
outsl
test
xchg
shll
stos
in
adc
pop
fwait
push
or
ret
in
jb
lds
aaa
sub
sbbb
and
pop
test
shlb
lea
inc
sub
mov
mov
mov
push
addr16
lock
out
out
ret
mov
fs
and
mov
lea
dec
hlt
aad
les
sub
sub
fbstp
xchg
inc
sub
inc
xchg
lret
pop
repnz
push
imul
mov
add
xchg
inc
cmp
xor
sbb
xor
or
out
lods
mov
xchg
pop
pushf
insb
in
push
into
or
gs
movsl
loopne
pop
xchg
sub
add
sub
lret
outsb
das
cmpsb
sbb
fld
lret
push
shrl
or
rol
fs
scas
ljmp
mov
xor
push
sti
pushf
or
xor
adc
push
pop
lret
insl
adc
jb
pop
jecxz
sti
sbb
call
jecxz
mov
add
sbb
push
mov
inc
dec
add
mov
and
or
mov
test
or
sbb
adc
leave
popf
int3
popa
sbb
mov
push
adc
xor
xchg
xchg
insb
pop
and
pop
mov
ret
aad
push
mov
adc
push
jns
rcrb
addl
pop
xchg
push
cmpsb
lret
lcall
sub
push
add
inc
pop
jb
das
stos
outsb
mov
pop
mov
mov
repz
ret
mov
cmp
mov
das
push
cmp
jl
sbb
adc
sub
ja
test
cmp
mov
je
out
push
and
outsb
push
adc
mov
sub
pop
int
ret
or
icebp
les
popa
jns
mov
xchg
adc
pushl
mov
inc
inc
das
xchg
jmp
adc
or
pop
dec
mov
xor
mov
leave
push
inc
sbb
fwait
jecxz
iret
inc
lret
movntq
arpl
lods
repz
lods
jnp
push
js
adc
nop
inc
pop
push
stos
fwait
jge
into
sub
inc
and
mov
xchg
repnz
pop
loopne
std
pop
jnp
mov
or
gs
mov
xor
dec
aam
xchg
test
lret
mov
insl
vmovshdup
dec
imul
sbb
flds
xchg
mov
shll
push
or
adc
cmp
sub
sahf
mov
and
ljmp
std
or
dec
xchg
inc
and
push
cmc
out
inc
dec
xor
cmp
out
repnz
xchg
mov
pop
jle
fldcw
mov
fcompl
stc
inc
fstpl
pop
scas
add
inc
les
andl
scas
loope
sahf
incl
inc
sbb
fisttps
das
xchg
les
jbe
lds
push
push
imul
rclb
outsl
in
ss
cmp
sub
outsl
mov
call
out
loopne
in
cmp
adc
scas
and
dec
icebp
sub
sbbb
or
adc
pop
iret
push
pushf
mov
pusha
add
mov
loopne
icebp
outsl
jecxz
or
iret
xlat
pop
lock
out
pop
dec
pop
push
vmovaps
sbb
mov
addr16
jmp
aad
daa
inc
fistl
xor
out
int
add
dec
fimuls
mov
int3
in
pop
out
mov
stc
fsub
jg
pop
jmp
scas
pushf
pop
aam
mov
movsb
sbb
lcall
mov
push
dec
lret
or
ss
push
jbe
xorb
pop
movsl
pushf
push
fwait
rorb
push
movsb
pop
imul
fmuls
mov
mov
bound
icebp
mov
out
lcall
jb
dec
lods
test
adc
dec
cmp
data16
pop
aas
dec
mov
lds
js
call
clc
inc
hlt
adc
and
dec
dec
or
jb
push
add
adc
adc
faddl
dec
mov
out
fadds
cmp
ljmp
dec
push
cwtl
ljmp
dec
int3
mov
fldt
mov
pop
test
dec
repz
rcrb
pop
fwait
xchg
jo
add
mov
ja
pop
mov
addb
pop
ret
imul
push
mov
ja
les
adc
xor
jge
push
cmp
cmpl
and
rcr
mov
xor
or
addr16
gs
loop
es
inc
hlt
mov
daa
inc
adc
sub
inc
outsb
xor
and
push
sub
iret
adc
lcall
and
std
je
dec
leave
jl
insl
mov
addb
adc
cmpb
pusha
pop
imul
sbb
or
into
adc
loopne
leave
mov
shll
mov
inc
les
neg
les
stos
jmp
mov
out
lock
pop
rorl
adc
push
push
adc
xchg
or
cmp
lods
dec
daa
inc
jb
jno
icebp
jb
xor
mov
pop
mov
xchg
xor
mov
hlt
lock
xchg
aas
jmp
sbb
cs
je
push
xor
add
fisubl
fldenv
jmp
cmp
cwtl
add
lahf
movsb
pushf
call
mov
push
mov
into
daa
add
rcll
sti
dec
mov
pop
call
sbb
in
jg
add
js
je
mov
in
sbb
movsl
jecxz
sbb
pusha
jb
scas
push
js
bound
incb
jl
ret
mov
and
test
mov
fcmovu
pop
pop
and
and
add
pop
insl
lods
cmc
imul
mov
in
pop
cmp
imul
push
mov
or
and
sbb
mov
loopne
pop
xor
jb
mov
ljmp
push
lret
out
mov
cmp
jnp
jl
xlat
mov
adc
fwait
aaa
mov
mov
in
pop
cmp
push
jns
xchg
rolb
aad
cmp
cmpsl
je
mov
gs
mov
pop
sub
adc
push
sub
and
pop
divl
mov
nop
mov
sbb
dec
aas
test
cs
lods
mov
and
inc
shll
testb
dec
add
cmp
mov
dec
mov
pop
in
push
lcall
fs
popa
jbe
pop
dec
jle
stos
xchg
lcall
xor
aam
leave
fs
inc
inc
sbb
ret
out
sbb
fisttps
and
xor
in
lahf
add
jge
inc
ret
fs
mov
xor
leave
and
and
fstpt
jp
iret
mov
inc
insb
in
cmc
cli
lret
add
sti
xlat
xchg
test
dec
fmull
mov
sahf
push
xchg
push
les
pop
mov
loopne
xor
cmp
mov
or
push
enter
sbb
out
jp
mov
mov
sti
out
mov
and
xchg
mov
lods
roll
call
jg
cmp
cmp
xor
mov
mov
outsl
enter
nop
sti
fwait
xchg
fadd
or
stos
add
mov
xor
out
mov
test
push
cmp
in
or
cmp
int
adc
mov
add
sub
push
leave
cwtl
leave
pop
roll
fldl
mov
add
mov
andnps
add
or
cli
in
xchg
sbb
inc
push
sub
jne
or
mov
in
in
mov
cmp
repz
or
dec
mov
cmpsl
xchg
pop
popa
and
aam
popf
decb
inc
mov
ret
xor
ja
int
jae
sahf
or
aas
out
jmp
cmc
outsl
out
pop
lods
jmp
loop
or
xchg
pop
inc
in
or
cmp
orl
jns
mov
mov
jo
iret
shlb
test
xor
and
sbb
and
or
aam
std
fsubrp
or
jbe
push
pop
xchg
cmpsl
cmpsl
mov
and
mov
into
xor
loope
xor
adc
add
ret
mov
mov
out
dec
popf
fimull
lock
loopne
rorb
dec
sti
js
pop
jmp
cmp
cmp
clc
inc
inc
fiadds
test
jmp
push
cmpsb
xchg
push
mov
mov
pop
lcall
jmp
in
or
jecxz
jbe
add
stos
xor
test
inc
xchg
mov
sahf
lcall
shrb
cmpsb
dec
test
fcompl
add
and
and
cmp
inc
lds
or
stos
pop
rol
inc
push
popf
out
mov
or
mov
fcmove
push
ljmp
add
idiv
inc
cmp
jle
fwait
daa
xchg
out
je
imul
sub
pop
xchg
mov
mov
jl
jmp
das
adc
xor
rcll
enter
xchg
mov
xor
test
xor
inc
mov
hlt
js
test
leave
sbbb
dec
xchg
mov
push
fcoms
pop
xchg
jo
adc
adcb
sarb
pop
out
push
push
mov
loopne
ss
lds
mull
jecxz
sbb
out
icebp
adc
jecxz
shll
pop
cmp
imul
jge
out
inc
mulb
dec
testl
pop
test
cld
dec
jns
mov
jns,pn
mov
lds
ret
fnsave
cwtl
in
mov
std
inc
xlat
gs
and
mov
lods
or
sbb
enter
ret
lahf
lods
repnz
push
cmp
add
mov
mov
fistpl
push
mov
lods
aas
scas
jg
cmp
in
cld
adc
mov
mov
pusha
mov
adc
adc
popa
int3
pushw
and
and
insl
cmp
sbb
shlb
or
mov
push
cwtl
scas
inc
out
pop
add
dec
mov
ss
mov
rcll
inc
int3
sub
sbb
lret
add
lock
adc
jl
sbb
pop
jle
insb
lahf
dec
cmp
dec
adc
mov
mov
sahf
and
jo
xor
loopne
fisttps
xor
test
sub
add
push
out
cmp
ret
mov
xchg
call
add
jmp
mov
sbb
dec
or
mov
data16
xchg
aad
pop
push
mov
out
jns
pop
jbe
test
push
iret
cmp
jb
ret
insl
jecxz
mov
popa
cmc
inc
aam
hlt
and
repz
and
aam
cmc
dec
sbb
rcr
sti
lods
dec
push
jg
out
sbb
sbb
insl
pop
add
adc
das
movsb
clc
and
dec
mov
cmpsl
clc
push
mov
push
aad
pop
loop
lods
add
adc
sub
bound
mov
hlt
push
in
les
jae
int3
out
push
popa
jae
dec
lret
movsl
test
movsl
rcll
or
ljmp
pop
and
adc
add
scas
adc
pop
in
lret
in
and
push
push
cmp
lahf
stc
insb
andl
jnp
or
mov
cltd
inc
add
mov
popa
mov
xchg
dec
insl
push
cmpsl
notb
pop
dec
pop
test
inc
push
add
push
es
movsb
mov
jle
pusha
je
inc
and
mov
insl
in
pop
and
jmp
pop
pop
call
ret
sub
popa
jbe
mov
mov
fldcw
int3
xor
inc
pop
movsl
mov
dec
jne
or
ss
pextrw
jo
in
lret
rcrl
cltd
mov
jbe
imul
xchg
les
cmp
jg
pop
push
aas
arpl
jae
in
lret
enter
sarb
fnstsw
pop
inc
push
pop
fimuls
add
dec
outsl
stos
inc
push
inc
jmp
adc
rolb
mov
mov
test
fcoms
push
cmp
jbe
test
inc
jb
ficoms
jge
inc
xchg
adc
ficomps
mov
push
cmp
xchg
scas
movsb
sub
cli
inc
outsb
outsl
push
or
aaa
cld
das
push
shr
lret
cmp
mov
inc
popf
pushl
pop
pop
mov
sub
out
xor
inc
xor
testb
repz
iret
pop
push
add
jp
ss
jecxz
or
mov
xlat
add
mov
mov
aas
sub
dec
mov
and
in
scas
push
or
cmp
testb
int3
out
ret
rolb
in
mov
pop
mov
icebp
sbb
gs
xchg
scas
mov
mov
je
stos
push
mov
iret
pushf
std
or
leave
add
popa
and
repz
jl
inc
inc
push
mov
test
dec
int3
pop
cltd
jb
testl
jns
test
jmp
xchg
push
repnz
sbbl
push
jb
aad
jmp
or
in
or
add
adc
adc
push
pop
xor
repz
or
sub
add
ret
xchg
out
xchg
push
leave
ss
adc
jo
cmp
test
bound
jno
aas
in
repz
push
inc
in
or
loopne
xor
push
cmp
push
dec
mov
ror
sub
jae
sub
jns
cmc
bound
inc
jp
pop
lahf
enter
lds
xchg
mov
inc
stc
inc
popa
or
stos
pop
inc
imul
aaa
fstl
popf
mov
mov
scas
and
sub
call
enter
je
in
mov
test
jmp
in
mov
addr16
jo
int
pop
test
xchg
and
fsubs
jle
loop
mov
push
push
in
addl
jnp
xchg
push
cli
stc
push
jl
mov
mov
data16
sbb
stc
sar
lea
mov
int
repnz
adc
repnz
xchg
mov
out
jl
fbstp
push
shrl
dec
fmull
cmp
popf
rcl
dec
orb
or
and
les
xor
pop
aam
fs
arpl
mov
data16
mov
mov
pop
push
mov
xor
out
fcmovb
jmp
cli
jecxz
cld
hlt
fsubrp
mov
fidivs
mov
xor
pop
es
call
mov
pop
repnz
mov
ljmp
add
mov
push
mov
mov
push
divb
lock
xchg
pop
stos
pop
data16
jnp
xor
shrl
adc
jbe
cmp
repnz
je
lock
stc
pop
mov
das
insb
xchg
call
and
out
shlb
cmpsb
xchg
inc
mull
add
or
int3
lods
movsb
xor
mov
subl
or
sbbl
cli
mov
popa
sub
ficoml
mov
xchg
stos
cli
sub
loopne
xor
xchg
fidivs
mov
xchg
add
mov
pop
scas
push
jne
es
and
rolb
hlt
fidivl
insb
repnz
mov
jo
sub
dec
and
push
sub
sbb
xor
pop
jns
pop
push
mov
addr16
outsb
mov
adc
xor
sarl
mov
addl
mov
int
and
xchg
fdivrs
shlb
lods
or
bound
mov
sarl
xchg
outsb
div
mov
fldl
jmp
inc
pop
and
ret
pop
cmp
fsts
rolb
mov
xor
pusha
scas
pop
arpl
mov
adc
pusha
mov
ds
mov
xchg
mov
movsl
repz
sbb
jae
stc
sub
cmp
pop
sbb
mov
mov
sub
mov
xor
aas
or
mov
outsb
push
ds
frstor
cmp
testl
jle
jbe
stos
jno
and
push
mov
cmp
gs
pop
daa
pop
pop
xchg
les
out
jae
cld
or
andl
xchg
test
in
xorb
push
imul
movsl
in
pop
cld
dec
pusha
cmp
in
xchg
jp
shl
fidivl
cmp
add
aad
mov
push
fwait
pop
fs
cmc
stc
push
mov
outsl
pop
imul
mov
scas
sbb
cld
dec
add
and
push
in
inc
ja
ss
pop
mov
ja
fldenv
out
mov
and
jle
aaa
outsl
daa
mov
pusha
xor
popf
ljmp
add
sbb
movsb
sbb
jg
cltd
movsb
pop
aam
aaa
mov
xchg
xor
mov
and
cltd
adc
int
cmpl
mov
ret
xlat
add
or
sub
pop
mov
push
inc
out
in
push
negl
loopne
mov
jecxz
push
mov
sub
test
inc
insb
inc
int3
sbbl
test
test
lds
out
hlt
ja
enter
mov
mov
cmc
jnp
jae
mov
repnz
aas
shld
ss
roll
jmp
dec
mov
insl
dec
xor
xlat
mov
xlat
xchg
sarl
or
stos
sub
jmp
aaa
aaa
sub
jge
out
add
jnp
cmpsl
dec
xchg
add
test
push
inc
sbb
dec
dec
pop
cmp
jo
mov
mov
lahf
inc
mov
inc
fisubrs
leave
lods
xchg
lret
cmp
loop
ss
inc
mov
jnp
inc
jae
xor
shrl
loope
ja
or
roll
sub
cltd
stos
jae
rcll
outsl
in
xor
sub
or
out
or
push
cli
jg
movsb
cmp
push
data16
push
jmp
lods
dec
mov
rolb
jecxz
adc
dec
push
cwtl
pop
shlb
mov
sbb
rolb
mov
lcall
mov
or
out
imul
cli
aad
push
adc
xor
cmp
xchg
mov
xor
movsb
pop
jnp
out
fcomip
add
in
loope
push
dec
sub
test
sub
push
mov
dec
inc
pusha
test
mov
xor
sub
flds
aam
shll
test
sbb
lahf
out
repnz
aas
pop
mov
pop
loope
inc
cmp
adc
push
daa
enter
enter
fistps
sub
aad
lea
add
ja
jmp
sbb
orb
mov
add
sarl
pop
push
bound
cmpsl
cmp
out
insb
sarl
adc
aaa
xchg
jmp
pushf
sahf
inc
into
push
std
sbb
jmp
pop
xor
and
and
in
pop
cmp
sarl
dec
pop
mov
fs
andl
pop
and
mov
stos
stc
imul
aam
das
inc
push
adc
nop
popa
je
cmp
cltd
mov
inc
dec
sbb
xor
dec
call
arpl
push
sbb
mov
neg
sahf
add
aas
pop
push
jmp
mov
out
mov
mov
pop
inc
push
sbb
je
rcrb
adc
scas
icebp
flds
in
les
adc
cmp
cwtl
pop
and
push
inc
dec
mov
sub
fwait
data16
je
or
xor
mov
shll
xor
jle
xor
adc
or
cmp
mov
sub
and
add
jge
rcrl
or
loop
insb
jle
lock
loop
push
out
loopne
inc
adc
cmc
in
inc
sysret
xchg
pop
loope
insb
mov
inc
jg
cmpsl
mov
mov
mov
fcompl
shrl
fstps
jnp
sub
mov
decl
fsubs
aas
jg
mov
push
push
shrb
insb
int3
dec
mov
add
jge
adc
mov
jecxz
mov
jg
sbb
addl
add
lods
sub
scas
ljmp
cs
and
pop
in
mov
in
or
adc
out
ds
jecxz
data16
push
out
mov
cld
cld
fdivl
push
push
test
jbe
arpl
xchg
and
fisubrl
pop
es
or
sbbb
dec
and
or
jg
test
mov
sti
cs
insl
and
xchg
negb
das
lcall
or
jae
das
cmp
inc
sahf
outsl
movsb
xor
pusha
lret
std
pushf
push
fcmovu
mov
mov
or
mov
mov
add
in
push
jns
xor
movsb
aas
jmp
lahf
gs
int
rcrb
pop
push
ret
enter
mov
pop
dec
xchg
inc
jmp
cld
push
popa
je
lret
cmpsl
sbb
stc
repz
xchg
push
adc
xor
je
push
sbbb
push
cmpsb
mov
xor
or
xchg
aad
dec
gs
xchg
imul
leave
and
outsl
jae
call
daa
lock
sub
xchg
addr16
jnp
jecxz
add
sbb
in
ret
dec
enter
popa
mov
jno
int
xor
xchg
js
cmpsb
mov
pop
push
xor
bound
fimuls
jp
cltd
and
dec
in
add
test
push
adc
mov
shl
push
pop
xchg
lea
ss
js
cmpsl
mov
sbb
fstl
sub
shrl
and
jnp
mov
out
cmpsb
stc
or
insl
in
aaa
sahf
icebp
sub
int
clc
fwait
jge
and
mov
jecxz
out
out
out
xor
icebp
jge
mov
shlb
push
cmpsb
dec
xor
dec
mov
pop
ret
dec
mov
daa
inc
sub
adc
testb
inc
dec
faddl
and
inc
sbb
jl
xchg
push
push
add
into
popa
mov
or
ja
xor
cmpsl
xor
xchg
in
outsb
xlat
popf
pushl
daa
jmp
push
and
xchg
sub
sbb
push
or
movsl
icebp
sbb
mov
jbe
mov
popa
adc
sbb
imulb
jo
lret
dec
mov
dec
shrb
jle
xor
inc
dec
jb
test
stc
jbe
pop
arpl
repz
push
sub
dec
movsb
ret
or
xor
cmpsl
test
dec
js
test
xlat
inc
mov
lret
dec
aas
imul
sbb
sub
mov
outsb
test
int3
pop
jb
and
mov
in
lahf
jo
notb
incb
adc
ds
jp
and
out
das
and
test
xlat
mov
mov
mov
stc
mov
jge
push
je
or
push
sar
out
jno
mov
mov
call
rorl
or
jno
or
lahf
adc
call
pop
hlt
divl
mov
push
inc
nop
fcmove
mov
mov
fstpt
or
je
adc
cmp
mov
insl
jle
inc
xor
mov
jb
insl
adc
out
movsb
inc
lods
repnz
and
sahf
in
cmpsb
enter
in
es
loopne
mov
xor
cmp
push
mov
dec
inc
sub
rcrb
pop
fadd
sub
sbb
out
test
movsb
jp
sahf
xchg
rorl
inc
push
fsubrs
fcom
xor
inc
mov
adc
stc
mov
pop
xor
inc
in
xlat
dec
sbb
inc
jmp
fs
pop
subb
insl
enter
xor
sub
pop
jmp
or
mov
imull
xchg
mov
and
rcrl
lods
adc
inc
das
cmc
pop
xchg
das
popf
aad
cmp
andb
dec
xchg
mov
sar
pushf
mov
xlat
xor
outsl
cwtl
stos
add
sbb
cmp
insl
scas
mov
clc
test
xchg
aam
push
pop
out
xlat
fwait
loopne
adc
add
jg
xchg
sbb
into
lock
mov
or
mov
mov
push
push
pop
fsubrl
jl
movsl
mov
in
ficompl
or
mov
or
scas
push
mov
mov
ficoms
aad
mov
stos
mov
fucomp
dec
outsb
test
pop
int3
adc
xor
or
in
cmp
aam
mov
cmpsb
cmpsl
pop
shlb
sbb
pop
loop
cmpsl
dec
int
pop
jmp
mov
fidivrl
pop
and
dec
filds
mov
cmc
mov
stos
mov
outsl
rcrl
jecxz
fimuls
outsl
dec
lret
xlat
sub
xor
mov
inc
and
mov
xchg
cwtl
imul
push
push
mov
inc
pushf
imul
out
imul
cmpsl
push
dec
mov
into
clc
lea
sbb
stos
gs
jmp
jns
xchg
test
mov
jecxz
cwtl
mov
mov
out
pop
jns
sbb
push
sub
lcall
dec
push
jae
fcoms
in
stc
fstpl
rol
je
push
data16
in
cs
out
pop
mov
lcall
cmpsl
outsb
push
jmp
addr16
daa
aas
dec
and
xor
cmp
jne
lock
imul
pop
inc
xor
das
punpckldq
test
ficoml
cmpl
xchg
cmp
xchg
adc
cld
mov
sti
add
inc
or
jbe
movsb
jle
sbb
jbe
out
jnp
scas
mov
call
es
adc
cmp
mov
hlt
sbb
mov
push
incb
xchg
jge
push
nop
dec
out
xor
sub
pop
aas
movsb
pop
xchg
popl
pop
repnz
gs
test
or
enter
in
cmp
hlt
movsl
in
or
lahf
cmp
xchg
outsb
sub
mov
ja
jmp
pop
rcl
inc
fs
fidivl
arpl
push
cmpsl
je
ficomps
ret
aad
scas
jp
out
insb
repnz
mov
pop
or
mov
outsl
outsb
outsb
lods
iret
fsubrl
mov
or
add
out
les
aad
les
xor
push
jmp
lods
dec
jb
mov
add
push
test
lock
aaa
repz
push
jne
rcrl
jno
mov
push
stc
adc
adc
jo
or
fmull
rorb
inc
in
jns
mov
dec
fisubrl
scas
pushf
in
enter
xchg
repnz
les
fbld
daa
nop
mov
adcl
arpl
hlt
nop
pop
repz
sub
xchg
push
in
sbb
dec
pop
stos
subl
cwtl
or
jo
or
stc
dec
ret
lods
shrl
mov
jg
push
xchg
mov
add
inc
pop
inc
mov
pop
pop
data16
dec
cltd
mov
jmp
rcrl
int
pop
cld
pop
jecxz
cld
ljmp
stos
sahf
test
stos
call
repnz
rcrb
cmc
movsl
lds
mov
out
lds
sbb
loopne
emms
lods
icebp
adc
mov
into
ret
shl
xor
xchg
pop
mov
mov
out
jp
dec
xchg
push
pop
in
inc
mov
cs
aad
jae
sub
lea
cmpsl
ljmp
bound
sub
dec
rol
jb
mov
pop
popf
stos
adc
mov
js
dec
lcall
jb
aam
xor
mov
and
sub
je
ljmp
mov
jno
stos
or
stos
dec
lret
lret
loopne
cwtl
jmp
cmp
mov
mov
add
in
cmp
push
sub
out
adc
ds
loope
shrb
notl
roll
adc
xor
mov
adcb
jp
or
test
out
into
loopne
jb
jne
adc
or
xchg
mov
iret
jge
mov
sbb
sub
mov
mov
divl
shrl
mov
pop
pop
xchg
fildll
add
fsubr
or
xchg
imul
push
mov
dec
lahf
inc
and
push
jmp
inc
std
fisubs
push
imul
xchg
mov
add
out
xchg
mov
ror
and
outsl
nop
cmpsl
inc
adc
push
sbb
repnz
xchg
and
sbb
xor
shrl
test
in
movsb
aas
sub
stos
jmp
pop
push
jle
movsl
leave
out
fwait
jno
mov
xor
movsl
xor
mov
rorl
aad
cmpsl
mov
ss
das
aam
mov
and
cmp
jne
lods
arpl
cmp
sbb
ret
andl
and
adc
mov
xchg
jno
jle
out
xor
ljmp
sub
adcb
stos
movsb
sub
push
xacquire
data16
icebp
xchg
cmp
lret
repnz
xchg
bound
ret
jge
lods
dec
mov
hlt
cli
popa
aaa
sbb
jp
decb
out
xchg
xor
push
pop
add
lret
cltd
dec
push
and
daa
ss
xchg
in
sub
push
xchg
sahf
xlat
iret
clc
ljmp
inc
dec
mov
mov
pop
and
or
mov
cmpsb
loop
and
stos
cmpsl
stc
lret
jmp
jg
scas
xchg
and
popa
out
xorb
xor
popa
cmpsb
call
sbb
jmp
mov
notb
dec
xor
mov
movsb
ret
and
xor
mov
cmp
adc
inc
jno
mov
bound
mov
or
int
daa
out
cmpb
and
pop
pop
sbb
test
out
lods
jbe
xchg
jno
movsb
lds
int3
mov
cmp
pop
pop
xor
push
bound
sbb
ljmp
sahf
push
lret
mov
test
inc
adc
inc
xchg
std
in
and
mov
dec
divl
jmp
out
add
add
dec
test
popa
push
push
lahf
inc
je
dec
int
pusha
cli
jg
aad
jge
out
xchg
mov
xchg
jno
mov
aad
je
std
add
and
inc
dec
enter
imul
mov
mov
shr
inc
cmc
mov
jb
mov
pop
aad
xor
jge
push
dec
in
cmp
fisttps
or
mov
pop
jg
sbb
aam
inc
jg
pushl
cmpsb
pop
mov
data16
stc
cld
mov
outsb
cmpsb
dec
sarl
cmp
or
subb
mov
fisubrl
aaa
lods
mov
xor
clc
leave
sahf
ds
xchg
pop
addb
mov
ror
enter
dec
mov
lods
aas
repz
loop
sub
fdivr
in
test
scas
push
out
mov
cli
adc
hlt
aaa
jmp
call
push
sar
sti
push
popa
dec
mov
fmul
sbb
xchg
mov
loopne
movsb
or
xchg
xor
pop
icebp
pop
adc
decl
xchg
jmp
add
mov
adc
sub
jae
mov
xchg
mull
arpl
xchg
jge
pop
ss
pushf
inc
xchg
out
pop
add
bound
scas
iret
and
nop
mov
xchg
sbb
and
or
inc
mov
pusha
and
push
fsubrl
inc
lds
xchg
imul
pop
or
pop
add
shll
adc
cmpsl
shlb
push
mov
and
loop
pop
inc
xor
aam
pop
and
insl
fistpl
stos
cltd
pop
inc
or
mov
push
sbb
or
andl
push
rol
mov
xchg
fdivrs
xlat
aad
xchg
rcrl
jo
add
filds
inc
mov
aad
fucomp
jo
or
cmpb
movsb
jge
mov
in
or
mov
mov
lcall
jge
mov
lods
cmp
fisttps
lock
movsl
ss
incb
xchg
adc
popf
fwait
ret
je
dec
out
clc
push
inc
mov
ljmp
add
jmp
or
stc
outsl
xchg
inc
push
or
es
sub
and
cmc
push
xlat
pop
mov
jmp
jno
movsbl
dec
cld
xchg
aas
in
and
rol
psubq
pop
sub
lods
outsb
ror
out
jecxz
mov
push
xor
stos
inc
pop
push
xor
repnz
pop
pop
push
lret
cmp
inc
jo
add
xchg
pushf
sub
cmp
mov
pop
out
pop
cwtl
in
dec
push
sarb
in
mov
outsl
add
rcll
js
inc
inc
das
adcl
or
pushf
in
pop
fstps
jl
or
mov
enter
xor
dec
push
mov
jge
imul
sti
xchg
mov
jne
adc
pop
lea
adc
leave
dec
out
ja
mov
nop
pop
test
ja
test
xlat
into
loop
lret
sub
leave
or
or
fdivrl
leave
mov
shll
insl
jne
or
jmp
movsb
pop
mov
fcomi
out
adcb
enter
es
insb
loopne
pop
stos
in
jne
push
nop
in
sti
mov
pop
mov
adc
dec
and
iret
and
loopne
mov
push
sbb
je
push
mov
jp
dec
inc
in
stc
lret
outsb
nop
pusha
mov
xchg
fucomp
iret
dec
jne
mov
clc
test
inc
push
mull
cmp
cs
addr16
cwtl
cmp
loop,pn
or
push
repnz
cli
cmp
loope
or
xchg
push
div
outsb
lods
imul
mov
pop
daa
daa
pop
xchg
xchg
add
push
dec
push
push
andb
test
inc
mov
fbld
add
dec
sbb
int3
aam
shrb
mov
arpl
inc
jp
inc
notl
stc
jmp
sub
mov
or
sahf
pop
dec
jo
std
insl
sahf
cs
xor
xchg
std
add
or
mov
cs
cmp
jnp
inc
leave
scas
out
sub
push
xchg
mov
pop
mov
adc
and
sbbl
xchg
mov
jbe
sbb
push
add
popf
fimuls
test
loopne
ret
push
jb
mov
dec
je
aam
pop
mov
or
cmpl
cmpsl
in
fwait
mov
xchg
repz
push
repnz
xchg
ss
pop
icebp
mov
pop
mov
mov
dec
int3
push
test
cmpsb
roll
popa
imul
imul
imul
sub
in
jl
jae
cmpsl
sbbb
popf
xchg
stos
push
stc
inc
add
cwtl
fldt
push
pop
mov
mov
hlt
cmc
dec
dec
push
filds
mov
test
dec
shlb
mov
jl
iret
call
push
mov
inc
js
xchg
cmpsl
and
insb
sub
mov
ss
xchg
mov
pop
push
dec
pusha
std
mov
mov
mov
inc
add
sbb
xchg
test
pop
adc
inc
mov
mov
gs
mov
stos
inc
int
pop
fwait
aas
mov
mov
mov
leave
jne
mov
test
dec
jb
push
cmpsl
je
aam
fstl
mov
sti
push
je
sub
dec
inc
pop
pushf
mov
rcll
aad
scas
mov
je
idiv
jmp
out
mov
adc
xchg
mov
gs
sub
mov
addr16
mov
in
call
mov
rcll
mov
repz
pop
mov
pop
pop
fadds
jb
filds
xchg
cmc
or
ret
cmp
xchg
aas
mov
ror
fs
sub
stc
pop
imul
sub
mov
sub
call
lret
dec
dec
mov
mov
imulb
xchg
jb
xor
cmp
enter
es
cli
jo
data16
and
maxps
inc
stos
xchg
mov
es
cmpsl
std
les
arpl
shrb
jbe
leave
inc
cmp
sub
movsbl
in
sti
jp
cs
xchg
adcl
in
fldenv
xor
iret
cmp
fs
repz
out
mov
pop
jno
sub
shr
push
out
mov
mov
jle
int3
jl
sarl
aas
addb
hlt
push
cmp
adc
xchg
loope
fwait
cmp
scas
aas
dec
ficoml
cmpsl
rcrb
fdiv
cmp
sbbl
stos
mov
fsubrl
add
dec
dec
fstpt
fdivrl
fidivrs
fst
add
adc
int
sub
mov
push
mov
fwait
enter
shlb
xchg
arpl
add
push
pop
test
neg
mov
popa
push
mov
gs
repz
adc
sbb
test
xchg
test
insl
icebp
icebp
lret
fwait
xlat
fwait
jnp
sahf
stc
rolw
cmc
jge
pop
cld
daa
sub
sub
je
pop
mov
negl
insb
xchg
mov
mulb
data16
push
testb
cltd
cmp
rcll
mov
xor
es
xchg
adc
aam
stos
cmc
gs
adc
les
into
inc
push
jb
dec
out
rolb
and
mov
push
decl
push
sbb
mov
sub
fsubrs
in
jae
mov
in
repz
fistpl
adc
xchg
scas
fwait
stc
les
xor
or
adc
mov
dec
mov
push
fs
push
mov
pushf
inc
cltd
cmp
mov
sbbl
mov
xchg
loop
cltd
dec
pushf
bound
decb
pop
data16
in
mov
add
cli
cmc
cmp
in
adc
icebp
cmp
pushf
mov
push
cltd
pop
dec
rorl
insl
lcall
adcl
or
pcmpgtw
ret
lds
jnp
push
lods
and
jmp
scas
mov
xor
cmpsl
sbb
cli
pop
ret
lahf
cmp
mov
repz
out
fiadds
icebp
cmp
pop
jnp
test
jae
repz
aaa
fstpt
mov
out
test
out
fwait
xchg
mov
jns
dec
cmp
add
mov
cltd
adc
stos
shr
outsb
mov
in
xorl
xchg
mov
test
divb
push
outsl
mov
in
cmp
add
shl
insb
seto
mov
imul
mov
gs
mov
enter
out
scas
ret
aaa
rep
imul
cld
hlt
ljmp
sub
xor
jl
cmc
out
gs
mov
or
fs
push
mov
jne
pop
pop
fildll
loopne
push
dec
les
xor
sub
cs
cmp
decb
sbb
lea
aam
lcall
scas
jbe
fdivrl
insl
pop
shrb
sti
or
sti
lock
into
loopne
gs
or
ljmp
fcomip
inc
aam
repz
imul
shlb
in
xor
pop
sub
call
test
cmc
sbb
hlt
mov
outsl
mov
xor
fbstp
stos
popa
mov
outsb
mov
push
out
add
add
xlat
push
nop
jecxz
mov
cli
insb
jnp
mov
pop
inc
jge
shlb
movsl
xor
call
lcall
mov
lds
or
xorl
test
push
xorl
jge
shll
dec
push
jns
stos
cmp
mov
add
dec
xorb
mov
sar
dec
sbb
dec
jns
fcompl
jne
shl
xchg
ficoms
adc
imull
stc
in
mov
xchg
xchg
dec
xor
mov
jmp
std
aaa
fsubrp
and
jno
dec
stos
movaps
jle
sbb
pushf
mov
loop
into
fwait
out
push
and
add
fs
cmp
loopne
or
dec
and
fdivp
add
lret
arpl
aam
out
xor
sbb
pop
pop
shrb
xchg
pop
add
lahf
mov
jmp
jle
adc
repnz
add
repz
and
add
ljmp
jbe
mov
adc
push
or
out
popa
dec
pop
xor
xor
fdivrl
ret
lds
xchg
pop
adc
mov
clc
int
leave
jg
pop
inc
jno
adc
jae
cmp
aad
or
dec
adc
lods
mov
incl
frstor
xchg
outsb
or
push
pop
lcall
mov
pop
sub
in
cld
in
leave
lods
xor
push
mov
pop
adc
int3
mov
jnp
movsl
jmp
xchg
xchg
subb
cmp
shll
inc
insl
mov
lds
leave
cltd
and
add
xchg
and
pop
push
add
sbb
jno,pn
ss
add
out
mov
jnp
je
sub
in
dec
adc
loop
fnstsw
mov
dec
mov
jmp
dec
dec
dec
add
jns
push
xor
scas
xor
cmpsb
mov
lds
dec
dec
pop
jp
movsl
inc
push
ja
fucomp
push
popa
ss
cmp
or
mov
shrl
std
mov
dec
int
test
stos
mov
and
cmc
jp
repz
lods
stc
in
adc
inc
pop
dec
aam
in
mov
mov
push
inc
and
inc
jmp
mov
std
pop
dec
outsl
jno
aad
daa
frstor
mov
out
movsl
jb
dec
jno
imul
xchg
stos
loop
pop
hlt
ds
arpl
sub
fldcw
sub
outsl
push
xchg
and
addb
jne
xchg
shr
inc
lret
and
pushfw
xor
push
idiv
xchg
arpl
or
xchg
aad
push
sub
adc
mov
or
or
mov
xor
push
or
and
aad
jp
adc
loope
adc
jmp
mov
mov
std
add
in
enter
pop
xor
mov
mov
jno
ret
and
xchg
dec
cwtl
mov
fwait
test
iret
jmp
and
loope
cmp
push
pop
dec
aad
test
dec
idivl
ret
int3
dec
sahf
jmp
mov
mov
cltd
outsb
data16
lret
or
xchg
das
rorl
mov
xchg
in
mov
adc
dec
cmp
push
push
fwait
lock
pushw
dec
les
into
push
adc
stc
or
fmulp
arpl
adc
xor
mov
jno
int3
add
call
clc
inc
mov
cmpsl
push
shlb
mov
lds
sbb
mov
stos
add
pop
repz
pop
xor
lret
jne
aaa
cmpsl
mov
push
stc
or
dec
adc
lods
sub
xchg
jge
pop
or
insb
fildll
repz
xchg
add
sbb
jmp
fistl
xchg
jne
cmp
push
xchg
mov
mov
insl
pop
mov
lea
fidivs
add
rcll
test
push
sbb
jnp
fisubl
xor
fstp
mov
mov
in
clc
scas
mov
or
mov
push
and
sbb
mov
inc
lock
mov
push
jmp
mov
jno
inc
mov
cmp
xor
notl
imul
mov
push
inc
cmp
stos
movsl
adc
mov
nop
xor
mov
cmp
xchg
bound
jmp
loopne
xchg
xchg
mov
dec
pop
mov
jne
in
and
push
fsubl
mov
push
pop
sbb
xor
popf
mov
cmp
shrl
adc
inc
mov
xchg
repnz
and
fstp
xchg
xchg
je
add
mov
stos
sbb
dec
iret
cmp
lret
roll
adc
ljmp
out
add
jae
bound
cmp
pop
call
lock
sahf
push
mov
sbb
pop
movsl
adc
adc
nop
in
adc
pushf
ret
testb
pop
sub
push
mov
adc
mov
push
jns
xor
cld
or
mov
sub
add
sub
xor
gs
or
mov
mov
push
or
pop
stc
call
jns
sub
loop
mov
mov
xor
out
mov
rcrl
mov
dec
call
addl
mov
arpl
repnz
jo
pushf
loopne
and
nop
mov
mov
cltd
inc
sub
js
das
mov
push
and
icebp
mov
rolb
sbb
inc
lock
cmp
shl
jp
ret
shlb
sub
inc
push
in
lods
push
dec
mov
xor
and
adc
fs
add
push
xchg
mov
insl
jo
imul
in
adc
cmp
dec
sahf
cmc
sub
push
mov
enter
es
inc
mov
rcr
rorb
into
cmc
pushf
dec
addr16
add
inc
cmpsb
jg
jo
popf
push
jns
out
pop
andl
push
sbb
jle
test
scas
xchg
fidivs
movl
sbb
mov
or
push
inc
xchg
aas
pop
vcvttsd2si
push
sub
stc
or
jmp
dec
loopne
sbb
jno
cmpsl
push
ficoml
dec
out
pop
mov
push
out
xor
stc
pop
mov
jge
add
push
and
mov
mov
or
out
xchg
sahf
in
shll
push
jae
stos
insl
mov
int
adc
popa
cmpb
jae
out
xchg
mov
or
imul
repnz
xchg
cmp
es
and
into
ds
mov
sbb
loope
shrb
mov
mov
add
mov
cmp
mov
push
lods
sarl
imul
and
test
sub
push
sub
pop
add
test
es
pop
push
sbb
popw
adcb
cmp
addl
insb
mov
and
cs
sbb
fidivs
jge
sbb
xchg
rcrl
das
pushf
push
mov
add
cld
jmp
mov
cmpsb
mov
add
cmp
imul
sbb
lods
shrl
ret
mov
mov
jb
add
sub
sbb
rcrl
adc
fisubrs
add
cmp
adc
mov
stos
fisttps
xchg
xchg
mov
push
frstor
push
sbb
xor
inc
and
andb
mov
xor
xchg
mov
sahf
icebp
pop
cwtl
inc
sub
movsl
xor
ss
add
int
jle
xchg
sbb
adc
frstor
jecxz
dec
dec
cli
ret
inc
xor
push
inc
jae
jb
stos
scas
sub
or
loopne
cltd
call
cli
sub
std
push
leave
stc
push
gs
lods
jmp
inc
add
dec
addb
fidivrs
aam
lcall
jb
sub
aad
int
pop
test
in
jmp
dec
mov
pushf
push
aaa
mov
pop
fidivl
out
pop
out
popa
bound
mov
shll
inc
data16
mov
das
xchg
iret
sbb
hlt
lods
andb
inc
add
jmp
mov
mov
jns
mov
addr16
stos
or
loope
je
outsl
mov
mov
mov
jecxz
dec
jae
xor
push
pop
mull
sbb
push
idiv
ljmp
outsl
fistpll
sbb
or
mov
mov
psubd
sbb
xchg
and
dec
or
adc
or
pop
cld
or
adc
test
add
incl
clc
sbb
jo,pn
hlt
sub
push
cmp
or
outsl
leave
mov
or
jae
adc
stos
pop
scas
sbb
pop
rol
addb
xorb
aam
rol
add
sub
pop
pushf
push
cltd
add
sbb
ret
int3
cwtl
xor
lret
sbb
js
cmp
mov
leave
loopne
hlt
mov
push
clc
sbb
shrl
mov
jmp
mov
popf
jecxz,pt
dec
loop
pop
rcrl
jae
add
cmp
or
enter
cwtl
xchg
repz
push
loopne
movsl
rol
sbb
cmp
jecxz
sub
ds
lock
and
fsubr
add
add
js
lock
add
add
add
add
adc
xorb
xorb
add
cmp
subb
add
rolb
add
sbb
add
sub
add
inc
add
addb
add
pop
add
orb
add
push
add
add
add
orb
add
sub
adcb
add
inc
add
addb
add
js
lock
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
fs
orb
add
js
lock
add
add
add
add
add
xchg
cmpb
add
add
add
js
lock
add
add
add
add
add
add
add
addb
add
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
js
lock
add
add
add
add
add
test
add
rolb
sbb
add
lock
add
or
add
cmp
add
push
push
add
push
adc
add
cwtl
push
add
mov
add
enter
xchg
adc
add
clc
push
add
adc
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
push
add
sub
add
cs
add
xor
add
cmp
add
inc
push
add
inc
push
add
dec
push
add
pop
push
add
add
add
js
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
rorb
andb
add
or
andb
lock
andb
add
or
andb
add
or
andb
add
or
subb
add
add
push
sldt
orb
sub
add
cwtl
or
sub
add
mov
add
enter
in
sldt
loopne
add
clc
or
sub
add
adc
add
sub
add
inc
or
xor
add
pop
or
xor
add
jo
add
mov
add
mov
sldt
mov
sldt
rorb
add
call
sldt
add
add
sbb
add
xor
add
dec
or
cmp
add
pusha
or
cmp
add
js
add
nop
or
addb
add
test
add
js
lock
add
add
push
add
pushf
push
add
mov
add
ret
orb
add
and
addb
cmpb
add
push
or
addb
subb
sbbb
addb
add
xchg
pop
add
test
add
int3
pop
add
add
add
js
lock
add
add
add
add
jg
add
or
cmp
add
adc
add
sub
add
inc
or
add
pop
or
add
jo
add
mov
add
js
lock
add
add
add
add
pop
add
add
add
js
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
rorb
add
js
lock
add
add
add
add
add
loopne
add
add
add
js
lock
add
add
add
add
add
lock
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
adc
add
add
add
js
lock
add
add
add
add
add
and
add
add
add
js
lock
add
add
add
add
add
add
push
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
push
add
add
add
js
lock
add
add
add
add
add
add
push
add
add
add
js
lock
add
add
add
add
add
add
push
add
add
add
js
lock
add
add
add
add
add
add
push
add
add
add
js
lock
add
add
add
add
add
add
sldt
add
add
js
lock
add
add
add
add
add
add
sldt
add
add
js
lock
add
add
add
add
add
add
sldt
add
add
js
lock
add
add
add
add
add
add
sldt
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
sldt
add
add
js
lock
add
add
add
add
add
add
sldt
add
add
js
lock
add
add
add
add
add
add
sldt
add
add
js
lock
add
add
add
add
add
add
sldt
add
add
js
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
mov
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
rclb
add
add
add
lock
add
add
add
add
add
rclb
add
add
add
js
lock
add
add
add
add
add
loopne
add
add
add
js
lock
add
add
add
add
add
lock
add
add
add
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
adc
add
add
add
js
lock
add
add
add
add
add
and
add
add
add
js
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
add
js
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
adc
add
add
add
lock
add
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
adc
add
call
adc
add
es
call
add
add
add
call
add
add
lret
sub
add
add
cmp
add
cmp
add
addb
cmp
sub
xor
add
insb
fisubrs
add
add
mov
add
add
loopne
add
add
or
sub
xor
add
cmp
sub
xor
add
jo
sub
xor
add
movsb
in
add
add
add
add
add
add
sub
rolb
add
sub
sub
rolb
add
clc
in
sub
rolb
add
enter
rolb
add
cwtl
lock
rolb
add
push
add
add
hlt
sub
rolb
add
or
sub
rolb
add
fdiv
sub
rolb
add
add
add
sub
loopne
add
pop
cli
sub
loopne
add
cmp
sub
rolb
add
sti
sub
rolb
add
add
add
add
add
add
rolb
add
add
add
sub
call
add
add
add
add
sub
sub
add
jo
sub
rolb
add
pop
sub
sub
add
pop
or
add
add
pop
and
dec
adc
add
adc
add
add
add
nop
dec
sub
adc
add
mov
sbb
add
add
add
jge
add
add
add
subl
sub
ss
add
add
test
push
add
add
add
dec
test
mov
add
fadds
add
je
sub
add
add
je
sub
push
add
add
add
dec
mov
dec
add
add
add
add
add
add
add
sbb
add
xchg
sub
rolb
add
movsb
lcall
or
add
mov
add
test
add
mov
add
xchg
test
add
add
stos
sub
int3
add
add
add
cwtl
scas
sub
xor
add
int3
scas
sub
pusha
add
add
sub
hlt
add
add
mov
add
add
add
add
add
add
add
sub
int3
add
add
ret
hlt
add
add
ret
les
add
rol
add
add
add
add
add
add
add
add
add
shrb
adc
add
sub
mov
add
add
add
add
xor
add
or
add
adc
add
add
add
add
add
add
cmp
add
add
add
add
add
inc
add
add
xor
add
sbbb
or
add
cld
enter
add
in
xor
dec
add
add
repz
adc
add
inc
repz
adc
add
pop
repz
adc
add
insb
repz
adc
add
xor
add
add
xchg
repz
adc
add
test
xor
adc
add
sbb
add
add
nop
mov
add
pop
add
dec
add
inc
add
push
add
add
inc
add
push
add
add
pop
add
inc
add
dec
add
pop
add
inc
add
add
dec
add
add
dec
add
dec
add
add
dec
add
dec
add
or
inc
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
push
add
inc
add
add
push
add
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
dec
add
or
inc
add
add
inc
add
add
dec
add
add
or
add
push
add
dec
add
add
dec
add
add
or
inc
add
inc
add
push
add
add
dec
add
push
add
dec
add
push
add
pop
add
dec
add
push
add
add
dec
add
push
add
inc
add
dec
add
push
add
inc
add
add
inc
add
add
inc
add
add
push
add
or
dec
add
inc
add
inc
add
dec
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
push
add
add
push
add
dec
add
add
inc
add
push
add
push
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
push
add
add
add
pop
add
dec
add
dec
add
push
add
or
push
add
dec
add
dec
add
dec
add
dec
add
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
lldt
add
dec
add
dec
add
push
add
push
add
push
add
push
add
add
add
dec
add
inc
add
push
add
inc
add
inc
add
add
push
add
add
add
dec
add
dec
add
inc
add
dec
add
inc
add
push
add
add
add
dec
add
inc
add
add
push
add
push
add
push
add
add
add
dec
add
push
add
inc
add
add
dec
add
add
add
dec
add
inc
add
dec
add
add
add
push
add
inc
add
inc
add
add
inc
add
push
add
or
push
add
inc
add
dec
add
inc
add
push
add
adc
push
add
inc
add
dec
add
push
add
add
dec
add
inc
add
dec
add
dec
add
add
add
dec
add
push
add
inc
add
dec
add
dec
add
add
or
dec
add
dec
add
dec
add
dec
add
add
sbb
sub
xchg
mov
sbbb
ss
xchg
mov
xor
jnp
idivl
cmp
push
mov
sbb
ret
shl
pusha
or
jmp
or
mov
push
repnz
mov
out
push
cmpsl
hlt
lcall
lds
cwtl
mov
fwait
and
cltd
adc
sub
ds
sub
push
sbb
sahf
push
pop
aad
adc
out
cld
out
cld
popa
outsb
fs
adc
adc
popa
pop
dec
dec
repnz
inc
pop
ret
insb
inc
cli
push
dec
or
jmp
mov
insb
mov
jbe
popa
mov
add
add
inc
push
inc
addb
sahf
add
or
clc
out
mov
sbb
inc
notb
mov
cmp
repz
ja
sub
and
add
mov
jecxz
or
aas
cwtl
xor
sti
test
ljmp
push
sti
fdivr
pop
repnz
jns
adc
jns
dec
lods
decl
outsl
sti
dec
fisttpl
pop
mov
sbb
movsb
cltd
outsl
sti
outsb
jle
pop
lahf
sar
call
inc
fs
jae
mov
dec
xor
call
std
pop
clc
mov
mov
fs
jg
lahf
cld
jp
push
std
push
aas
out
hlt
lret
in
iret
or
or
fst
cmp
out
pop
negb
sub
iret
hlt
jmp
pop
or
add
sti
inc
cld
lahf
jae
ljmp
std
ss
outsl
in
jg
jg
test
lcall
bswap
dec
dec
mov
jmp
std
cmpb
jo
sub
jge
cld
pop
cmp
mov
pop
idiv
adc
repnz
ss
sarb
data16
test
decb
subb
sahf
lods
mov
stos
add
mov
cs
sub
xchg
sub
push
outsb
scas
pushf
loope
push
sub
jle
cmp
pop
cmc
push
push
lods
adc
adc
ja
aad
add
and
outsl
fcoml
pop
xor
lret
nop
popa
add
sbb
mov
cmc
pusha
mov
fcomps
lahf
int
jae
cmpb
and
xlat
dec
cmp
jl
repz
sub
lahf
sub
ret
xchg
in
addb
push
stos
and
push
pop
push
xor
push
dec
lock
jecxz
icebp
mov
popa
push
sub
sarl
lea
push
cmp
ljmp
mov
inc
pop
xor
mov
push
fistpll
outsb
arpl
and
out
push
adc
inc
mov
cmpsb
jnp
repnz
movsb
pop
jmp
mov
loope
sbb
imul
jp
mov
push
imul
stos
inc
int3
fucomip
mov
test
jno
push
addr16
popa
repz
cmpsb
aam
dec
rorl
jo
lock
push
je
into
adc
orl
shlb
in
gs
push
loopne
mov
jno
addr16
and
xor
add
dec
aas
pop
arpl
mov
lcall
rcrl
or
pop
ffreep
xor
push
sub
adc
sbb
cli
mov
inc
sbb
jg
gs
in
jae
and
clc
mov
shlb
out
dec
ljmp
jbe
pusha
leave
mov
enter
adc
arpl
push
and
jnp
in
and
inc
psadbw
push
stos
fwait
dec
mov
popa
pop
and
xchg
cmc
mov
divb
and
es
int3
pop
jae
xchg
rcll
jb
pop
pusha
in
fs
add
das
rcrb
in
imul
pop
lret
test
xchg
jp
sti
xchg
addb
fwait
stos
dec
jns
xor
sbb
adc
push
movsl
out
mov
jae
xor
mov
sub
das
stos
mov
jbe
outsb
pushf
mov
inc
mov
dec
pop
xor
adc
in
inc
and
inc
pop
shlb
and
xchg
and
aas
add
int3
cld
sahf
and
imul
push
dec
sbbb
leave
pop
pop
cmc
decb
pop
cmp
scas
stc
jno
push
cmp
pop
popf
in
lret
mov
ret
push
mov
clc
jl
cltd
jp
cmp
data16
push
cmpsb
cld
mov
out
inc
jnp
adc
pop
sub
call
push
mov
mov
push
dec
and
jbe
sub
adc
hlt
out
outsb
jno
lea
idivl
mov
stos
sbb
jbe
fimull
push
hlt
or
insl
pop
fmul
js
cmpsb
and
mov
xor
mov
mov
loop
sub
xchg
or
mov
and
inc
push
pop
ficoml
mov
nop
jge
mov
int3
and
sbb
push
insl
repz
test
jno
add
mov
popa
cs
inc
xchg
push
xchg
pop
cmpsb
int3
fcmove
js
ffree
cs
lock
jb
xchg
sahf
lea
das
xor
dec
sbb
cmp
xchg
divb
scas
out
jb
clc
sub
sub
stc
jnp
xchg
and
je
loop
xchg
xor
cmc
inc
sub
pushl
sub
sub
mov
mov
adc
aam
std
push
pop
jecxz
xchg
jnp
in
mov
sbb
push
gs
mov
iret
jl
movl
js
out
mov
lock
mov
pop
sti
and
pop
push
adc
fisttpl
adc
fistl
loopne
cmp
insl
push
mov
scas
jne
enter
imul
cmp
lcall
mov
sbb
adc
dec
sub
dec
add
mov
inc
mov
outsl
jbe
sub
mov
test
jp
out
xor
aaa
pop
fsubs
sub
aaa
lcall
movsl
repnz
push
test
cmp
dec
mov
je
ja
in
pop
xchg
jle
cmpsb
sbb
pop
scas
in
sub
mov
inc
arpl
stos
aad
fiaddl
shr
aaa
fisttps
pop
cwtl
dec
push
mov
mov
and
hlt
sub
jecxz
cmp
hlt
lcall
inc
iret
sub
xchg
out
mov
xlat
fidivl
jmp
mov
ret
mov
icebp
out
push
stc
pop
sbb
cld
xchg
or
stc
std
test
out
shlb
movsb
mov
xor
mov
sti
gs
aad
das
dec
push
int
data16
cmp
dec
add
push
fidivl
enter
dec
lds
mov
test
xchg
add
inc
dec
imul
hlt
add
mov
out
sti
shl
pushf
sbb
pop
or
push
jnp
xor
fdivrp
jl
add
mov
lcall
sub
adc
pop
inc
into
mov
xchg
push
pop
iret
xor
mov
push
jecxz
or
mov
xor
xchg
xlat
mov
and
cmpsl
leave
push
test
stos
mov
ds
test
mov
and
or
jo
je
push
add
aad
jp
mov
stos
fcoml
aas
push
xor
inc
jb
cli
outsl
iret
popf
adc
or
adc
mov
pop
fdivrs
lds
insb
mov
mov
sbbb
mov
test
add
sbb
xor
movsl
jge
clc
pushf
lcall
and
mov
nop
in
cmpb
insb
push
pop
pop
mov
sub
pop
idivb
ret
xor
iret
mov
fwait
or
bound
cwtl
movsl
fnstenv
push
sbb
pop
push
dec
lods
arpl
jl
decb
cwtl
test
jo
mov
movl
cmp
push
into
inc
das
pop
hlt
adc
fsts
dec
pop
jns
inc
jb
jp
bound
dec
dec
mov
or
aas
mov
aaa
pop
rclb
and
insl
xor
jno
test
add
inc
ja
cmp
arpl
inc
aam
repnz
cmp
push
fsincos
sbb
push
xchg
push
fsubrl
dec
lret
jmp
lds
jl
rcll
cli
in
call
fsubrl
or
rcrb
adc
push
xchg
mov
std
pop
repnz
aaa
xor
dec
push
in
xlat
mov
mov
jno
sub
inc
cmpb
hlt
lret
xor
push
xchg
push
push
imul
in
test
aad
jns
rcll
and
push
mov
cld
sub
mov
in
outsl
mov
sbb
fwait
dec
into
xchg
sbb
adc
lret
in
dec
jne
adc
or
pop
fldl
dec
arpl
inc
dec
lcall
or
cmp
add
jmp
sub
mov
jle
add
or
mov
out
mov
inc
cmc
dec
ss
push
pushf
imul
cmpsl
ja
sahf
xchg
in
test
cmp
cmpsl
xchg
xchg
fsub
es
pop
je
call
imul
jge
incl
jbe
xchg
xor
sahf
dec
jnp
les
popf
jne
push
sbb
cmp
mov
xor
mov
sbb
out
outsb
test
sub
jbe
pop
inc
inc
and
inc
cs
sub
jo
jmp
mov
hlt
push
mov
mov
mov
jp
fcomp
pop
mov
negl
sahf
loopne
sbb
out
std
decb
leave
jb
add
bnd
insl
xchg
xor
push
xchg
mov
xchg
js
mov
fsts
clc
sahf
lods
stc
sbb
aam
xchg
int
mov
xchg
rorl
pop
sub
outsl
cmp
xor
repz
fisttpl
ja
jb
pushf
sbb
out
pop
jp
jne
or
rcrb
divb
or
xor
dec
stos
popw
out
mov
or
je
inc
shrb
xorb
out
mov
adc
lret
into
sti
cmpb
sbb
rcrb
cmp
pusha
xor
test
xchg
rcr
xorl
xor
mov
and
or
data16
int3
mull
sub
jmp
imul
popf
pop
int
cmp
outsl
aaa
lret
jp
ja
je
inc
pop
out
loopne
or
subl
xor
mov
lock
das
adc
imul
pop
mov
scas
or
and
xchg
scas
imul
push
jmp
mov
int3
push
lods
pop
and
push
mov
fstps
push
pop
and
loopne
cltd
xchg
jbe
nop
cmp
fdivrl
pop
and
mov
cwtl
inc
mov
rorb
adc
sarb
sbb
xorl
push
or
int
push
int
adc
push
imul
pop
test
scas
xor
mov
push
idivl
xor
mov
nop
je
mov
mov
mov
push
jb
pushw
sub
and
shll
cmc
sbb
or
call
mov
mov
out
mov
xor
xor
fsub
pop
mov
sarl
test
leave
mov
ds
sbb
push
push
stos
test
jnp
dec
mov
cmp
xlat
mov
fwait
sbb
inc
addb
mov
stos
cmp
popa
movsb
arpl
inc
mov
faddl
fnstcw
lret
jmp
cmp
pavgw
loopne
fwait
push
mov
dec
sub
je
push
sub
sbb
sti
pop
sbb
pop
popf
loopne
pusha
out
add
repnz
cmp
xor
popf
add
ja
cmc
xchg
push
push
stos
pop
ds
pop
adc
and
test
mov
bound
mov
add
and
push
dec
sbb
test
push
pop
mov
aad
shll
xchg
sti
inc
lods
dec
popa
rclb
ds
popa
mov
pop
lahf
mov
cltd
lods
add
loope
nop
test
inc
push
and
in
inc
movsl
push
add
fsubrs
cmp
pop
lahf
popf
aas
dec
jle
int3
cmp
icebp
lahf
loopne
pop
popf
xor
jge
mov
dec
in
hlt
std
dec
sbb
ds
enter
ja
pop
cmp
mov
or
aad
push
pop
icebp
cmp
add
ja
divb
in
or
out
mov
mov
fmull
mov
ret
vpshufd
imul
loop
xchg
push
sahf
or
xrelease
cmpsl
sbb
or
test
adc
add
arpl
fstpl
jae
in
movsb
sbb
in
dec
insb
ror
lods
inc
rorb
out
pop
inc
je
sarl
imul
fidivl
pop
add
stos
clc
inc
push
in
xor
push
pop
je
jbe
jle
mov
arpl
lds
add
xor
jne
das
popf
mov
aam
paddusb
arpl
mov
mov
sub
mov
push
dec
push
adc
adc
jne
in
repz
sti
pop
sarl
imul
fwait
pop
mov
lea
pop
outsb
push
jns
pop
inc
pop
dec
cmp
inc
push
lret
das
aas
xchg
cmp
dec
adc
rolb
cmp
push
mov
hlt
cs
or
ljmp
mov
popf
or
adc
dec
std
mov
inc
rcl
push
and
outsl
add
xchg
push
add
add
lds
jne
pop
popf
rclb
sar
inc
out
pop
mov
inc
cmp
scas
test
fildl
scas
out
push
fdivl
test
xchg
jmp
pop
fs
xchg
dec
das
xor
cmp
or
cmp
xchg
cmp
xchg
xchg
movsl
in
adc
movsl
stos
dec
push
scas
jne
movzbl
dec
add
or
jnp
outsl
aaa
mov
and
leave
pop
and
shrd
lret
int3
fcoms
pop
test
rol
fbstp
add
lret
adc
jle
cmpb
adc
out
add
mov
or
fisubl
scas
mov
cwtl
lea
enter
xor
movsl
push
pop
lods
movsb
or
ds
xchg
and
ds
mov
cmpsb
add
gs
add
push
aad
imul
lods
je
fiaddl
cltd
in
mov
xor
and
sub
negb
ret
icebp
xchg
sub
push
out
mov
sub
out
lret
push
lret
sbb
xchg
out
sub
mov
into
xor
jge
mov
and
popf
and
jge
frstor
mov
imul
xchg
addr16
push
jno
es
sbb
xor
mov
shll
popa
pusha
ret
movsb
adc
arpl
push
or
insb
jo
push
shll
mov
pop
pusha
xchg
push
xchg
scas
lcall
mov
bound
addl
clc
fcmovnu
insl
mov
lods
sbb
sbb
out
xor
inc
pop
icebp
jmp
repz
or
int3
sub
call
sbbb
xchg
cltd
out
mov
inc
mov
xlat
ja
sbb
ficoms
sub
cmp
pop
cli
cmp
xchg
aad
addr16
dec
inc
into
push
adc
and
pop
sub
xchg
push
je
mov
cmpsb
or
incl
xchg
pop
mov
andb
jl
xlat
push
enter
outsb
loop
sbb
lret
test
std
and
adc
ss
orl
add
ret
push
imull
dec
mov
mov
test
mov
jle
xorps
fstps
jg
jle
out
adc
lahf
out
and
rorb
sbb
inc
std
addr16
pop
cld
lock
ljmp
cmc
or
dec
int3
sarb
fsubrl
push
jg
cmp
sub
mov
lock
ja
adc
mov
adc
fdivrl
int3
push
sub
dec
bnd
into
push
mov
sub
aad
and
inc
sub
jb
mov
or
stos
pushf
mov
lock
arpl
inc
and
inc
ljmp
fadd
jmp
lret
iret
mov
push
outsl
mov
sbb
lahf
mov
mov
jns
fcmove
leave
ds
xchg
sti
push
in
rorl
add
add
lahf
jecxz
push
adc
pop
mov
dec
pop
push
popf
mov
popf
sub
add
fsub
sub
imul
bound
dec
pop
test
cmp
push
xor
mov
mov
xor
push
cmpsl
or
out
cs
mov
loope
jns
mov
outsl
mov
sub
mov
adc
testl
dec
cmp
inc
rol
xlat
pop
pop
fsubl
add
sub
shll
rclb
scas
mov
sub
loopne
repnz
inc
or
mov
inc
in
inc
sub
xchg
std
and
sub
sar
ret
lea
dec
int
sbb
test
rorl
dec
xor
shl
lahf
lods
lds
imul
fistpll
popf
icebp
push
cmp
fbld
cmp
rol
or
leave
in
inc
repz
and
aaa
adc
add
mov
aas
fadds
mov
push
jae
bound
adc
mov
pop
clc
and
sub
mov
adc
mov
jno
insb
add
or
gs
inc
sar
daa
mov
mov
add
gs
leave
jge
mov
and
sbb
xchg
fsubr
aaa
aas
scas
sahf
in
js
xchg
cmp
out
push
cmpsl
pop
push
jg
arpl
sahf
mov
mov
mov
jbe
lds
jns
mov
sub
out
pop
rcl
lcall
pop
jl
test
sti
inc
mov
and
xchg
dec
daa
movsb
jnp
cmc
mov
xlat
movsl
inc
or
push
ja
iret
fwait
mov
test
sbb
pop
mov
or
xchg
sub
pop
cmp
lret
and
movsl
dec
cli
fcomi
ret
mov
pop
not
sub
popa
out
cmp
fcmovbe
pop
imul
mov
repnz
fisubl
mov
or
fcmovnbe
push
pushf
std
sbb
fnstenv
repnz
adc
push
cs
xor
and
data16
push
mov
xorl
ret
out
mov
pop
gs
add
mov
dec
xchg
lods
sub
or
pushf
fwait
add
jl
mov
and
test
dec
rorl
fdivr
add
xchg
or
inc
xchg
mov
pop
rolb
hlt
sbb
aam
outsl
or
jle
push
push
imul
push
cmp
xor
and
or
jge
pop
mov
push
push
and
icebp
jg
mov
popf
inc
push
cmc
cmp
push
mov
dec
jmp
imul
cmpsl
rolb
sbb
inc
cmc
out
ss
das
ficoms
pop
xchg
fcmovb
enter
lods
cmp
and
pop
sub
int
cli
add
ret
pop
inc
rcr
cmp
mov
scas
dec
cmp
or
sbbb
xchg
cmp
cmc
lahf
test
insl
xor
mov
jl
xchg
mov
mov
in
push
rolb
dec
pop
mov
adc
jmp
sarb
fucomi
pop
scas
inc
scas
xor
das
push
push
xor
pop
dec
mov
and
stc
mov
mov
imul
cmp
aaa
popl
fs
xor
aam
dec
test
jge
cmove
gs
sub
jmp
dec
ja
pop
in
cs
mov
idivl
mov
mov
sub
in
dec
xor
mov
popa
hlt
loop
mov
adc
xor
lea
in
data16
lea
rcrb
inc
je
test
fsub
nop
and
inc
std
mov
pop
pop
jo
mov
mov
jbe
pop
loopne
sub
mov
push
popa
aad
lahf
add
sbb
xchg
shll
push
das
cmpsl
iret
push
lock
sub
dec
ds
adc
repz
rep
cmp
xadd
mov
out
jbe
push
mov
push
faddl
lods
rolb
xchg
sbb
inc
xchg
stc
leave
sub
cmp
sbb
or
inc
lods
out
xchg
ret
push
xchg
inc
pop
and
daa
movb
xor
and
or
and
xor
adc
aam
popf
loope
mov
ds
shl
insb
test
outsb
xor
sti
shrl
cmc
scas
icebp
pop
aad
push
insl
xchg
mov
cmp
xorl
aad
push
sub
sub
lods
xor
push
or
stc
add
enter
scas
mov
outsb
pop
ljmp
adc
insb
sbb
pop
movl
pop
cmc
mov
jmp
xor
jbe
lea
repz
pop
dec
xor
inc
push
mov
fcmove
mov
mov
xor
push
hlt
int3
shr
mov
pop
push
mov
mov
jp
in
dec
xchg
rcrl
les
scas
mov
or
mov
out
adc
test
andl
inc
repz
sub
sub
inc
mov
int
iret
mov
inc
mov
dec
in
and
push
add
jns
mov
scas
ret
dec
mov
sub
sub
mov
or
cld
fs
out
mov
xor
shlb
insl
mov
mov
pushf
test
outsb
mov
adc
ljmp
xchg
xchg
xchg
inc
sbb
push
shll
dec
pop
lock
mov
xor
push
or
negb
das
mov
sub
jbe
lods
lea
mov
ret
sbb
xor
test
mov
xor
js
loope
gs
iret
daa
leave
add
cmp
sub
rcll
fisttps
dec
pop
ffreep
inc
adc
pop
rorb
sbb
popf
fwait
movsb
push
mov
mov
inc
int
pop
adc
dec
nop
icebp
clc
je
sub
pushf
movsl
testb
dec
enter
dec
test
scas
nop
xchg
mov
mov
inc
cmpsb
bound
mov
out
push
je
insb
and
es
movsl
scas
mov
add
shlb
mov
fs
add
stos
into
jmp
and
push
data16
cmp
clc
mov
mov
mov
ds
jle
je
xchg
ss
jnp
jmp
fisttps
and
dec
xor
or
mov
shlb
mov
fstp
inc
sahf
mov
mov
add
sub
fisubs
fsubs
lds
adc
ficoml
lods
mov
pusha
cmp
hlt
push
lds
jno
fcoml
pop
bound
jge
movsl
mov
aam
jp
repnz
xchg
sbb
mov
ljmp
cmpsb
fistpll
xor
cs
fxch
mov
dec
int
push
dec
fsub
jg
fildl
dec
push
jle
in
adc
sbb
inc
xchg
or
mov
inc
mov
dec
fcomps
sbb
fwait
and
and
rcrb
sbb
clc
sub
scas
lock
std
cmp
lret
cmp
int3
or
xor
leave
mov
xchg
popf
in
fisubrs
and
in
loopne
cli
mov
jecxz
mov
ret
push
aas
sub
dec
and
cwtl
mov
jo
mov
call
dec
adc
pop
or
rorb
xchg
mov
loope
ja
into
sbb
rcrl
outsl
arpl
scas
ja
lret
enter
in
sbb
aaa
test
loop
mov
cwtl
push
pop
push
jb
push
sti
out
add
aaa
cmp
cltd
shlb
loop
jbe
sub
outsl
xor
rol
mov
insb
dec
jp
jne
push
push
outsb
and
mov
jge
test
enter
xchg
xor
lock
pop
dec
aaa
aam
xor
cmpsb
in
mov
aam
sub
and
push
mov
and
dec
jle
push
or
mov
xchg
mov
mov
mov
cld
fwait
xchg
mov
and
xchg
jmp
pop
xor
or
call
cwtl
jae
sbbb
cmp
adc
mov
dec
pop
stc
pushf
mov
inc
stos
jle
ss
rorb
mov
outsb
setno
fs
js
ja
sti
and
leave
cmpsl
insb
adc
lock
mov
sbb
pop
lds
xchg
mov
out
xchg
shll
sub
cmpsl
je
insl
in
pop
cmp
mov
in
lock
jle
xlat
lods
inc
dec
stos
jmp
cmp
std
lahf
xchg
insl
ror
xor
push
popa
mov
jb
pop
outsl
or
pop
pop
loope
sub
adc
xchg
call
ret
dec
jno
push
lret
xchg
sbb
xor
in
mov
or
into
fdivp
xor
mov
outsb
push
pop
mov
mull
ljmp
jne
cmp
xor
in
add
fnstcw
aam
push
icebp
mov
mov
xchg
lods
out
mov
jmp
adc
into
push
lret
adc
call
fdivs
in
cli
push
fdivl
in
or
jg
loope
jge
jno
lret
call
jnp
movsl
sbb
mov
pusha
pushl
dec
xor
push
mov
dec
test
push
clc
xor
leave
adc
lcall
ss
adc
mov
or
push
fbld
push
lret
mov
sarb
clc
push
test
adc
mov
fcomps
adc
mov
lds
cmp
into
scas
mov
ret
outsb
push
lret
push
push
mov
hlt
adc
in
dec
icebp
mov
idiv
mov
imull
push
sub
sar
xchg
and
je
dec
fidivrl
cmp
pop
xorl
sqrtps
lret
in
or
aad
cmp
out
icebp
jno,pt
fidivl
hlt
adc
in
aaa
seto
mov
movsb
lea
jmp
mov
jecxz
adc
sti
mov
inc
repz
pushf
sbb
mov
in
sub
xchg
int
enter
dec
jle
pop
leavew
in
int
mov
pop
dec
in
pop
out
pop
cmpsb
push
xchg
pop
js
sub
jbe
push
xchg
pop
xor
xor
xchg
pop
lods
cmc
mov
jns
xchg
dec
std
jge
sbb
fs
pop
arpl
mov
subl
dec
lds
dec
lods
pusha
and
lret
sbb
cmpb
sbb
testl
scas
sti
out
fwait
pop
inc
sub
outsl
stos
cmp
ret
repz
push
inc
outsl
in
add
mov
rcrb
leave
push
loope
ja
cli
daa
rcr
jnp
inc
jo
add
cmpleps
sbb
inc
out
adc
jns
push
jecxz
pop
cmpsb
in
add
dec
lods
inc
pop
xchg
xlat
push
in
or
adc
pusha
add
and
jno
xchg
iret
cli
mov
ficoml
push
push
or
cs
pop
add
ds
inc
into
stos
pop
xchg
pusha
insb
xor
repz
out
push
stc
hlt
adcl
mov
xchg
fwait
dec
fwait
stos
cmp
jge
sub
push
ficoms
sarb
xor
inc
dec
popa
pusha
push
cld
or
out
add
cmp
dec
popf
adc
or
insb
mov
mov
enter
rcrl
push
jnp
mov
addl
mov
inc
xor
ficoms
push
or
lods
es
mov
mov
push
mov
add
mov
inc
mov
mov
cmp
mov
xor
fisubrs
mov
lods
movsl
clc
outsl
xlat
aaa
and
xchg
imul
sub
xchg
inc
cld
mov
xor
pusha
ljmp
push
push
or
pusha
dec
imul
and
mov
outsb
into
je
loop
leave
in
jb
cmpsl
push
aam
jb
jge
sbb
and
cmp
test
pop
jnp
notb
push
adc
cld
pop
or
push
arpl
leave
mov
out
dec
push
xchg
arpl
xlat
mov
sbb
cwtl
sbb
pop
imul
test
or
movsb
ficoms
inc
sbb
outsb
rol
xchg
sub
scas
out
xchg
adc
fwait
scas
insb
nop
mov
notb
xor
cmp
jmp
push
fidivl
jecxz
or
add
mov
cld
lea
xchg
dec
xchg
and
out
sahf
or
fst
push
adc
and
cmp
ja
add
sub
addb
jmp
movsl
pop
sub
add
mov
daa
jb
es
xchg
fstpl
or
cmp
fsubl
es
mov
loopne
mov
mov
sub
fmull
push
add
mov
sub
sahf
lcall
xchg
adc
pop
pop
aam
insb
aam
inc
push
je
js
sub
cwtl
dec
xchg
inc
addr16
push
leave
pop
jae
lahf
sahf
fsts
cmp
mov
and
aaa
test
push
jbe
jmp
xor
jo
jno
jb
mov
sub
jle
clc
xor
xor
out
int3
mov
add
fs
xchg
mov
sbb
push
cmp
lea
stos
cmpsb
dec
adc
adc
leave
ret
imul
iret
ret
dec
jae
fmull
rclb
jo
inc
dec
popf
xchg
fwait
popf
jmp
std
mov
popa
sbb
iret
je
ret
call
aas
iret
fcoms
jge
adc
mov
std
std
cmp
dec
mov
xchg
adc
push
xchg
pop
mov
sub
sub
inc
call
inc
movsb
inc
hlt
sbb
and
mov
mov
daa
xchg
mov
adc
stc
push
add
pop
pop
popf
jb
clc
ret
lea
jmp
shlb
dec
stos
imull
fsubl
and
dec
cmp
pop
jg
ss
es
loopne
in
jmp
sti
pop
inc
sub
or
movsl
enter
daa
mov
inc
adcl
shll
pop
out
add
clc
add
les
mov
cli
xchg
push
mov
mov
leave
adc
inc
xchg
cwtl
mov
pop
popf
addr16
mov
jmp
mov
outsb
lock
inc
xor
jnp
inc
add
mov
cmc
jmp
idiv
mov
sbb
leave
idiv
jbe
jge
push
mov
hlt
adc
pop
push
fidivrs
add
cmp
test
push
incl
jnp
imul
and
cmp
in
addr16
push
out
shr
or
xchg
in
xor
es
les
jg
mov
sbb
and
dec
pop
test
pop
fisttps
addb
lret
add
daa
out
ficoms
stos
cmp
sub
je
pop
mov
sarl
fs
mov
cli
cmpsl
je
adc
subb
sti
dec
std
inc
ucomiss
pop
xchg
clc
cmp
jp
shlb
push
iret
mov
inc
jecxz
int3
hlt
loope
mov
push
test
shr
xchg
xchg
pop
scas
sbb
imul
xchg
sub
mov
jp
adc
xchg
shl
insl
mov
arpl
mov
les
push
les
push
lret
fildl
insb
sbb
les
sbb
imul
push
outsb
je
out
stos
int
scas
add
enter
test
cwtl
jno
popa
dec
cmp
dec
aam
pop
cmp
jp
daa
jo
fists
or
pop
cmpsb
xorl
adc
movsl
int
jnp
jb
sbb
pusha
fwait
sahf
nop
and
adc
jno
adc
testb
out
test
dec
lcall
push
xor
cmc
xchg
int
fbld
inc
cwtl
bswap
mov
jae
xchg
mov
pop
add
pop
sbb
pop
mov
inc
cmpb
mov
pop
push
decl
xchg
in
jl
pop
adc
xchg
cmp
mov
icebp
outsb
push
adc
push
addl
ljmp
inc
dec
pop
mov
movsb
fcoml
mov
data16
adc
aad
sub
dec
push
and
call
sub
ss
test
jl
dec
add
cltd
ret
sbb
mov
or
loop
jne
data16
inc
out
into
jle
inc
test
xchg
adc
dec
outsl
cltd
mov
es
add
fcomps
sub
clc
in
in
pop
cmp
add
arpl
test
mov
rclb
movsb
push
push
int3
sbb
mov
stc
aaa
jmp
xor
add
xchg
mov
xchg
loope
int
lds
subb
jmp
or
sub
in
or
mov
sub
pop
in
push
xchg
lret
xchg
femms
cltd
jl
add
sub
add
mov
cmp
aam
inc
cmpl
mov
jmp
mov
mov
mov
pop
and
sbb
lret
mov
and
jecxz
dec
mov
add
sbb
jae
push
out
sbb
out
and
mov
test
mov
mov
sbb
mov
mov
jne
cmp
sub
push
out
jb
in
cmp
test
jle
mov
hlt
sahf
xchg
sbb
sbbb
pop
xchg
arpl
sub
lock
ljmp
mov
fsubrs
jns
shrd
aas
push
aas
dec
xlat
shr
ds
mov
add
iret
loope
add
dec
leave
popf
xchg
repnz
aaa
sbb
loopne
sbb
mov
fsubp
loope
jmp
or
arpl
ficoml
jnp
push
aad
dec
cmp
in
sar
xchg
push
jp
xchg
sbb
ljmp
push
cld
push
js
mov
out
bound
ret
pop
test
call
shl
adc
and
add
adc
scas
jb
cmp
int
push
jo
xchg
cmp
sbb
into
mov
inc
mov
aad
adc
xlat
pop
scas
shlb
call
pop
into
jno
push
jne
add
outsl
and
enter
mov
ds
mov
aam
in
pop
jp
pop
jae
mov
int3
and
jae
fdivrs
out
pop
lods
stos
and
out
mov
fcoms
jle
sbb
loop
pop
dec
outsl
incl
out
insl
or
fs
add
sbb
and
jns
adc
cmp
mov
test
jle
aas
outsl
daa
mov
insb
xor
stc
std
pushf
mov
sub
mov
loopne
out
cmpsb
jge
dec
jp
add
push
bound
mov
and
mov
out
test
push
pop
or
cs
and
inc
sub
mov
jecxz
jmp
sbb
lods
mov
mov
jmp
inc
jle
faddl
sub
jg
push
adc
test
lret
orl
adc
scas
inc
ss
imul
inc
daa
xchg
js
sbb
or
xor
lret
xor
mov
loope
cmpl
sahf
test
mov
lds
xchg
or
inc
sub
stos
xor
popa
repz
mov
mov
rclb
pop
fcomip
adc
cmpb
jecxz
in
mov
gs
add
mul
xchg
push
dec
mull
xchg
dec
pop
insl
mov
incb
or
out
pop
std
jne
imul
mov
mov
pop
jbe
gs
rcl
fidivrs
scas
push
add
sbb
stc
or
fmull
and
es
das
cwtl
in
inc
ljmp
fidivs
push
cmpsb
adc
dec
pop
sbb
sub
adc
clc
scas
and
orb
or
div
xor
mov
fidivrs
jns
loope
mov
pop
fbstp
scas
and
mov
pop
inc
jp
inc
aaa
xchg
adc
inc
pop
in
sahf
scas
push
test
sub
lock
jg
ret
adc
outsb
xchg
popf
movsl
mov
jecxz
jbe
dec
loop
dec
push
mov
fistps
jp
test
xchg
inc
shrb
frstor
cmpps
pop
ret
repz
cmp
adc
cmp
out
mov
imul
movsb
outsl
test
and
lods
mov
inc
mov
xchg
vpavgb
and
or
cmp
outsl
mov
sbb
pop
mov
cmp
cmpsl
test
and
push
dec
loope
mov
mov
inc
xchg
mov
fwait
dec
sbb
or
push
inc
test
mov
xor
sbb
out
js
stos
jmp
add
loopne
add
add
insl
jl
fwait
xor
test
mov
ret
jno
test
mov
cmp
clc
mov
lock
lods
jae
pop
cli
sti
outsl
or
mov
cmp
ljmp
iret
lea
pop
or
stos
cltd
mov
jo
scas
xchg
movsl
xchg
jmp
xor
lock
lock
push
sub
js
fadd
repz
sub
mov
push
inc
mov
pusha
push
pop
out
adc
mov
cltd
cltd
sub
rcr
pop
mov
cltd
hlt
rcrl
pushf
cmp
jbe
out
mov
and
aad
ja
gs
mov
dec
popf
lea
dec
jbe
roll
fwait
push
stos
mov
stos
pushf
xchg
xor
in
hlt
dec
dec
jmp
cld
jo
push
lret
loope
mov
fnstsw
dec
iret
inc
sub
mov
fsubrs
mov
aam
adc
jns
push
adc
jecxz
subb
dec
pusha
aad
or
inc
pusha
mov
pop
jmp
mov
inc
pop
inc
mov
mov
add
cmp
jl
cmp
jmp
or
inc
mov
mov
outsb
cmp
ds
adcb
rcr
cmp
imulb
jae
jmp
repz
xor
cmc
xchg
adc
xchg
mov
sbb
pop
jne
jecxz
add
jae
std
inc
movsb
in
outsl
jg
push
xchg
jns
xor
test
outsl
fisubrl
dec
cmc
push
repnz
fstpl
jbe
lock
xor
cmpsl
mov
lcall
fldenv
fnstsw
in
xchg
aam
das
push
aad
sahf
xchg
mov
popa
shll
jmp
xabort
ret
push
push
sbb
pop
xchg
je
jle
loop
sbb
stos
pop
test
fcoml
sbb
xor
adcl
pop
xchg
scas
jl
fdivs
movsl
lcall
dec
loop
push
xchg
out
in
sbb
pop
test
sub
shrl
jle
sbb
mov
fst
adc
dec
pop
jb
pop
pop
fistpl
scas
jb,pn
fistpl
shr
inc
clc
shl
pushf
mov
push
cld
xchg
mov
std
cmp
mov
jae
xchg
add
gs
notl
jae
inc
cld
cwtl
fwait
and
xchg
push
das
push
mov
imul
mov
cmpsb
es
jne
mov
sti
jmp
nop
inc
stos
add
and
adc
es
ret
lret
shlb
into
dec
fcom
nop
mov
push
push
in
lds
xchg
xor
dec
lods
pop
stc
ds
push
xchg
into
out
xor
add
inc
xchg
xchg
out
lea
xchg
or
and
daa
daa
addps
fcompl
pop
xchg
inc
mov
sbb
icebp
outsl
xor
outsl
lods
xchg
in
cmp
or
mov
jl
jmp
xor
lock
movsb
popa
pop
dec
je
aam
loopne
jnp
iret
or
inc
data16
test
inc
mov
imull
in
inc
inc
fdivl
cwtl
stc
jg
test
in
loopne
jmp
and
dec
sbb
jp
imul
mov
push
pop
xchg
pop
into
sub
xchg
pop
adc
mov
jno
or
cmp
inc
popa
sbb
lcall
mov
shlb
adc
jle
rcrl
cmp
decb
ret
pop
icebp
push
inc
icebp
mov
and
mov
ror
cmp
loop
in
scas
add
xchg
int3
xor
not
mov
fs
jge
scas
roll
andps
sbb
sbb
add
push
and
and
dec
xor
rolb
fstps
std
and
in
insl
fdivrl
adc
lahf
ficoml
dec
mov
jne
or
movsl
ljmp
insl
cli
xchg
xchg
or
adc
shll
cli
jecxz
mov
add
enter
loop
jp
rcrb
mov
dec
pop
xor
add
mov
sub
mov
shll
mov
insb
xor
sub
cwtl
outsl
mov
mov
or
fbld
jle
push
jmp
pop
xor
test
sbb
fistl
or
arpl
pop
bsr
and
test
pop
je
mov
popa
inc
stos
push
cmp
stc
pop
mov
mov
jnp
insb
adc
push
add
sbb
inc
in
adc
and
cs
sub
push
or
inc
push
shl
mov
rcrl
pushf
mov
sbb
scas
sub
outsl
leavew
xlat
inc
outsb
out
cmp
loope
sbb
cmp
cmpsl
fldl
xchg
test
sbb
push
xchg
enter
add
cmp
fwait
mov
in
pop
jecxz
push
mov
xchg
sahf
mov
imul
push
sbbb
xlat
mov
shlb
mov
inc
cmpsl
mov
mov
push
imul
jo
jbe
test
outsl
arpl
push
or
dec
ret
mov
aas
repnz
xchg
lods
sub
lods
data16
loopne
sbb
loope
xor
scas
out
cmpsl
mov
iret
je
sbb
loopne
loopne
adc
sbb
adc
mov
shr
and
mov
cmp
jae
dec
imul
mov
dec
frstor
mov
fcmove
mov
imulb
or
lahf
insb
repz
jne
jl
ds
mov
fcmovnb
mov
add
scas
hlt
xor
adc
lea
xchg
ss
insl
fwait
cmp
pop
inc
call
or
imulb
js
pop
add
lret
out
jle
ja
mov
out
fildll
jno
sub
fs
je
sub
aam
push
mov
push
cmpsb
dec
fucom
aas
lahf
dec
or
or
sub
mov
outsl
dec
loopne
scas
shrb
testl
xlat
cmp
dec
scas
jo
stos
sbb
rcll
notl
mov
lret
dec
xchg
sbb
std
jae
sbb
cmp
mov
or
insl
jo
outsl
fs
mov
icebp
dec
xchg
cmp
pop
ja
ja
fldenv
xchg
out
dec
mov
aas
mov
test
pushf
and
lcall
test
lret
dec
jns
xchg
je
in
lret
mov
icebp
push
pop
mov
jge
outsb
das
fistpl
xchg
mov
push
outsb
sub
pop
xor
stos
dec
cltd
cwtl
mov
sub
pcmpeqw
arpl
xor
icebp
les
xlat
js
xchg
and
sub
inc
out
xchg
mov
nop
pop
and
mov
add
cltd
mov
xchg
dec
mov
inc
jle
jge
xor
adc
xlat
add
sti
inc
jno
rorl
mov
push
xchg
rclb
pop
pop
das
mov
mov
mov
mov
jnp
cltd
adc
push
inc
push
adc
outsb
jo
xchg
jge
scas
sarl
es
cwtl
fdivr
sub
pop
and
pop
iret
pop
repz
inc
insl
and
jne
mov
aaa
xchg
and
pushf
push
mov
xlat
clc
lods
xor
daa
and
xchg
lods
into
outsl
mov
xchg
adc
add
add
sti
jno
das
mov
xor
xchg
cwtl
mov
jae
testl
adc
cwtl
cmp
rolb
xor
push
dec
push
or
shl
fcoms
sbb
fs
ficoms
dec
repnz
mov
mov
jmp
ds
mov
in
pop
cltd
jmp
push
add
add
popl
in
pop
rorl
add
sbb
mov
xor
call
inc
push
sbb
lcall
rcrb
jnp
pop
rorb
sahf
daa
pop
add
add
into
shl
movsl
mov
imul
std
push
int
jno
xchg
xor
push
push
ret
cmpsl
repz
inc
jns
adc
add
es
cmpl
aas
inc
imul
mov
leave
cltd
sbb
jmp
jp
outsb
icebp
fnsave
das
mov
scas
aas
and
cs
pop
xchg
iret
mov
int
cs
js
aam
jnp
outsb
gs
inc
ljmp
faddp
sbb
popf
push
movl
inc
pop
clc
out
nop
mov
and
or
hlt
lret
daa
neg
push
cmp
add
test
push
add
lock
mov
xor
or
int
cmp
rorl
out
fsubl
and
mov
cli
wrmsr
in
ja
cmp
pavgw
das
or
jne
addr16
mov
lret
mov
in
mov
sti
xchg
push
push
jno
loope
mov
ss
inc
jnp
hlt
add
mov
cli
sbb
fsubrp
xchg
andl
sbb
ret
out
lcall
sub
or
jae
insl
push
insl
ds
mov
pop
push
mov
pop
push
pop
mov
lret
mov
rcll
ficomps
repnz
inc
pop
jmp
fsubr
stos
pop
shrd
in
lret
je
js
pop
adc
sbb
int3
test
jmp
loopne
push
jns
xor
jno
jae
push
iret
mov
and
in
daa
sub
or
in
je
push
popa
jmp
sbb
sar
push
repnz
fistps
lcall
pop
into
add
dec
test
aam
inc
sarl
and
cwtl
push
xchg
xor
movsb
mov
cmp
push
mov
push
mov
push
add
in
nop
adc
dec
psrld
in
rclb
std
popf
test
mov
loope
dec
mov
pop
dec
inc
xor
ss
jns
neg
push
pop
ss
xor
in
jno
jge
xor
cli
push
fdivrs
sub
adc
int
sbb
data16
dec
mov
aam
mov
mov
stc
push
mov
jg
lds
jle
sub
adc
out
sub
and
jno
sbb
mov
mov
jbe
dec
add
mov
inc
pop
add
xchg
int3
stc
lods
push
rcll
movsl
clc
push
js
cwtl
leave
add
sub
clc
xchg
and
enter
jge
cmp
push
das
ss
repnz
rclb
sbb
lods
in
jno
and
pop
cwtl
sahf
jns
aad
mov
lods
ljmp
mov
mov
loop
xchg
cmp
xchg
inc
pop
lock
or
movsb
movzbl
loope
push
test
push
pop
jbe
xchg
adc
lods
subl
addl
cwtl
sahf
scas
insl
sbb
mov
test
sbb
lahf
sub
mov
fsubs
iret
test
pop
lds
push
add
nop
outsl
pop
imul
cmpsl
call
in
lahf
inc
jns
testl
xchg
inc
add
mov
mov
ljmp
jmp
test
inc
scas
and
push
testb
icebp
hlt
xchg
scas
and
in
pop
sub
dec
daa
pop
sbb
xchg
rcll
orb
jge
cmp
cmp
fsubs
sub
pop
xlat
ss
cmp
pop
sarl
mov
nop
push
mov
mov
xor
push
addr16
pop
filds
fadds
cmc
mov
cmp
out
jge
testb
iret
jl
test
scas
or
jp
outsb
push
test
in
inc
inc
add
xchg
and
pop
fisubrs
xor
jge
cmpsb
cmp
push
adc
test
cwtl
pop
mov
insl
cmp
cmpsb
mov
loop
jecxz
or
pop
shll
mov
dec
lcall
fwait
pop
jo
repnz
cmp
shlb
aas
dec
sbb
stos
mov
cmp
shl
rclb
aam
xor
push
xchg
in
cmc
xchg
out
shll
dec
fdivs
es
and
add
movsl
in
jns
push
jbe
iret
clc
mov
mov
out
cli
movsb
arpl
jbe
int3
jne
enter
ja
ret
pushf
jge
leave
add
mov
jmp
dec
sub
test
push
inc
push
sub
lods
in
cmpsl
gs
je
aad
or
mov
dec
mov
movsl
mov
cli
pop
lret
lret
out
add
leave
xchg
sarb
pop
mov
mov
insl
outsl
cmp
cmp
sub
push
or
jb
fistps
or
icebp
lods
xchg
orl
xchg
lret
ss
movsl
jecxz
js
mov
in
sbb
ljmp
inc
test
inc
dec
sbb
xlat
leave
dec
jb
sub
sub
rcrl
xchg
pop
stos
adc
mov
push
inc
icebp
xlat
cmp
mov
jge
or
sub
sub
push
dec
mov
xchg
or
mov
inc
in
mov
pop
xchg
js
jecxz
pop
push
out
imul
cmc
test
adcl
push
jle
leave
and
bound
push
sbb
push
pop
push
or
shlb
xor
mov
or
inc
jp
adc
je
movsl
dec
mov
cli
pop
stc
or
imul
cmp
dec
aad
mov
sbb
shrb
pop
insl
dec
jge
in
push
xchg
cmpsl
push
sub
jb
inc
outsb
xor
mov
movsl
jns
fiaddl
ljmp
adc
push
cmpl
mov
pop
ja
xchg
ss
shll
lea
testl
lahf
cld
adc
notb
data16
or
fdivl
inc
sbb
aad
into
inc
push
daa
cltd
jp
hlt
test
shl
rcl
out
jle
js
sub
ret
pop
data16
xchg
push
jnp
in
fwait
xor
ljmp
fpatan
dec
aas
decb
or
sti
mov
mov
and
cmpsl
push
jno
scas
jp
mov
lods
repnz
fisubl
adc
mov
mov
cli
jne
and
mov
push
mov
test
cmp
pop
mov
xlat
push
pop
pop
push
loope
jno
or
ret
iret
cmp
dec
arpl
lcall
lahf
xor
rcrl
insb
test
inc
subl
loopne
inc
jae
imul
mov
ret
js
je
lods
cmpsb
adc
fsubr
in
jmp
jo
add
cmc
push
das
xchg
mov
add
fs
jno
sbbb
sarb
jg
sar
sbb
push
mov
or
in
outsb
lret
imul
jp
aam
mov
popf
pop
lret
dec
jae
lcall
call
jno
push
ss
lods
mov
mulb
daa
xor
push
xor
mov
pop
dec
mov
aas
sub
jno
mov
sbb
popf
dec
inc
jnp
jnp
xchg
notl
pusha
push
je
and
add
in
jmp
push
or
loope
or
rcl
ja
adc
insb
in
pushl
pop
shrb
jp
stc
jo
inc
sarb
loope
cwtl
add
sub
clc
arpl
jge
clc
neg
push
xchg
lahf
jge
js
nop
imul
dec
mov
push
data16
ljmp
xchg
es
sahf
test
add
fildl
ret
xor
mov
jbe
mov
mov
loop
cmp
xchg
ret
jmp
pop
xor
inc
xchg
xchg
sti
jg
or
clc
pop
in
js
mov
sbb
aas
test
cmpsb
cltd
call
xor
movsl
jmp
cmc
daa
orl
mov
cltd
cli
not
movsl
fmull
mov
pop
mov
dec
ss
or
aam
inc
push
addr16
test
pop
xchg
adc
or
icebp
aam
dec
enter
xchg
xlat
pop
xor
movsb
mov
xor
jge
notl
xchg
dec
fiaddl
sub
filds
lock
insb
popa
xchg
movsl
inc
aas
std
out
xor
divl
loop
lret
movsb
jg
in
into
sbb
orb
or
push
adc
or
lcall
in
jmp
addr16
lahf
in
xor
imul
jne
scas
orl
cmp
mov
pop
push
loope
inc
outsb
std
xchg
jne
add
imul
addl
in
adc
inc
fwait
lods
adc
or
inc
outsl
insb
loope
std
mov
mov
scas
mov
mov
mov
ss
repz
mull
loopne
fists
pop
or
mov
xchg
jno
sahf
add
ret
jmp
inc
ret
lods
jg
xor
imul
adc
aas
pushf
push
cmpsb
jb
sbb
adc
and
sar
push
jno
lock
or
and
cmp
gs
xor
cmpsl
add
movsl
lret
xor
inc
inc
sub
dec
gs
xchg
sbb
out
cmp
jbe
mov
in
testb
cmpb
aad
movsl
cmp
or
aaa
mov
mov
jnp
adc
sbb
dec
outsl
mov
insb
mov
adc
lea
adc
ret
xchg
sub
loopne
pop
dec
loopne
lret
loope
adc
lahf
pop
enter
loope
fcoml
lcall
stc
or
jb
mov
pusha
ret
mov
test
and
cmp
js
pop
imul
sbb
insl
mov
int3
dec
fdivr
push
sub
jo
inc
enter
or
jnp
testb
or
add
leave
xchg
mov
lds
iret
ljmp
call
cli
jg
gs
jmp
jae
add
xchg
dec
mov
sub
xchg
dec
lcall
test
jmp
enter
clc
xor
outsl
push
lods
clc
cmpsl
shll
add
pusha
dec
imul
dec
ror
addr16
pop
test
mov
mov
scas
cmp
int
loopew
jnp
clc
out
jl
mov
push
sbbl
sti
inc
sub
xor
xor
into
mov
cmpsb
xor
adc
jbe
int3
mov
or
inc
xchg
sub
decb
dec
das
leave
and
dec
jb
fwait
gs
pusha
rcrl
into
and
cs
fnstsw
adcb
jmp
les
cmc
dec
or
jno
and
cmp
pop
push
push
jle
stc
lret
add
cmpsb
xchg
jp
mov
cli
out
call
loopne
dec
mov
iret
sub
lods
xchg
int
sahf
lods
push
xchg
xor
ret
into
mov
pop
fimuls
out
fwait
lahf
jmp
mov
inc
lret
addr16
mov
add
lods
xchg
es
xchg
repnz
icebp
cli
imull
fs
in
in
mov
cmc
cmp
popf
or
jbe
addr16
cs
cmpsl
in
sub
das
sarl
cmpsl
pusha
adc
mov
xor
aaa
fidivrl
les
call
xchg
in
sub
push
sub
mov
dec
xchg
iret
in
cmpsb
clc
push
xchg
add
sti
sub
pop
fisttpll
cmc
cltd
add
mov
stos
xchg
scas
loopne
sbb
mov
es
cmp
insl
aaa
jne
jl
cmpsb
cmpsl
xor
cmp
fistpl
sub
fsub
mov
adc
jl
xorb
push
cli
data16
adc
std
xor
loope,pt
test
rorb
test
cmp
addb
add
mov
cs
pop
fsubrs
idivl
pop
lock
xor
mov
push
and
or
mov
mov
cmpsl
ss
test
addr16
es
mov
lahf
insb
cld
jg
cmpsb
into
je
ss
addr16
in
xchg
sar
jno
iret
mov
lock
pop
adc
mov
imul
jno
rcll
add
jae
xor
lret
dec
adc
xchg
mov
xchg
mov
lock
xchg
xchg
add
sbb
fwait
test
jo
cmp
stc
js
cltd
cmp
lret
inc
xchg
fimuls
jmp
push
lret
lcall
lcall
lods
std
mov
out
xchg
int
adc
add
add
in
in
dec
sbb
test
pop
js
mov
xor
stc
push
mov
and
mov
inc
mov
xchg
and
mov
adc
jne
mov
int3
dec
mov
test
mov
xor
pop
stos
shlb
data16
roll
xor
mov
pop
jge
leave
gs
das
or
mov
ficomps
xor
xor
cmp
insl
dec
clc
push
std
inc
out
rorl
jnp
and
xchg
lcall
sahf
cmpsl
lret
test
das
test
push
push
hlt
jge
jge
hlt
xchg
nop
pop
dec
ds
jle
mov
sub
lea
scas
ljmp
inc
sbb
cmp
inc
mov
jl
lea
addr16
addr16
arpl
fildl
pop
xlat
orb
mov
lret
mov
mov
movsl
xchg
dec
ds
int
addb
std
lret
insl
sbbl
loopne
pop
jbe
pusha
andl
addr16
negl
push
or
sbb
pop
stc
addr16
pop
mov
push
sbb
mov
mov
pop
add
fdivrs
fdivrs
or
les
in
lock
mov
in
cmp
mov
or
or
cwtl
cmp
mov
cltd
xlat
dec
jno
rcll
cwtl
push
ja
and
sbb
orb
mov
fstps
subl
mov
inc
dec
test
push
pop
popf
int3
push
add
ret
dec
jnp
cltd
adc
mov
popf
test
xor
adc
mov
cld
clc
jo
sti
mov
mov
fstl
add
push
scas
inc
mov
loop
inc
sub
out
push
xor
test
icebp
jnp
stos
ljmp
popf
sbb
xchg
dec
nop
mov
jge
ffreep
jne
dec
inc
mov
push
or
fdivrs
push
mov
jp
jnp
pop
mov
cld
aas
mov
cmc
pusha
lods
ret
in
jge
pop
in
xchg
addl
int
mov
pop
mov
shl
iret
xchg
bound
repz
push
outsb
push
scas
dec
je
in
call
push
icebp
sub
jle
addl
mov
pop
lds
fistpl
lret
daa
jb
dec
stos
push
push
mov
adc
pop
pop
push
push
or
jle
int3
repz
fistl
jmp
jae
icebp
dec
in
push
xchg
cmp
loopne
pop
ss
mov
mulb
and
and
sbb
js
aaa
push
orb
xlat
inc
sbb
cmp
pop
pop
xchg
sahf
jle
stos
mov
xchg
and
shrl
xchg
adc
bound
push
dec
jp
adc
lret
dec
push
mov
pop
cs
lret
mov
sub
pop
ljmp
pop
inc
addl
stos
insb
addr16
mov
mov
mov
push
lret
gs
imul
add
add
jae
fwait
outsb
lds
jmp
sub
movsb
aam
mov
jb
mov
jle
mov
sar
xchg
in
push
lret
push
mov
rcll
je
pop
insb
aam
movsl
testl
pop
lahf
mov
inc
add
imul
mov
sbb
aaa
xor
int3
in
cmp
add
mov
daa
or
xchg
jmp
das
lods
mov
xchg
cli
aad
imul
cmpsb
sub
sbb
mov
adc
out
int3
mov
push
clc
es
push
sub
dec
imul
xchg
mov
ss
in
ret
push
push
adc
mov
jae
pusha
adc
xchg
cmp
add
xchg
mov
je
inc
sbb
xor
popa
js
jae
stos
jno
ficoms
and
dec
sbb
lret
cld
push
add
hlt
mov
lret
lock
cmc
outsb
std
outsb
jecxz
lds
aam
inc
aad
js
push
push
in
mov
mov
or
scas
push
mov
dec
js
lcall
cs
int3
cld
jno
pushf
add
jnp
push
jl
and
das
xor
test
xor
jns
bound
pop
xor
cltd
rcll
fmull
insl
jne
test
lret
pop
adc
ljmp
nop
push
into
jle
jge
std
int
movsl
jmp
test
lock
add
ds
xchg
push
int3
repnz
dec
pop
into
shrl
nop
lods
mov
sbb
inc
and
lret
add
lcall
jo
xor
fiadds
pop
ret
movsb
or
pop
sub
cmpsl
dec
imul
pushf
lret
xor
xlat
fcmovnb
mov
aad
out
mov
mov
fwait
leave
push
fmuls
cmp
sti
repnz
mov
push
jle
pushw
dec
je
test
ficompl
sarb
cmp
mov
jbe
xor
popa
xor
lods
push
inc
mov
cmc
stc
ljmp
lahf
pushf
out
mov
fstps
sti
or
sub
dec
in
out
xlat
push
mov
test
push
out
ljmp
pop
jno
adc
out
loope
cmp
sbb
pop
in
pushf
dec
sbbb
clc
add
fs
in
push
push
shlb
mov
inc
xchg
aaa
ret
xor
fsts
test
lock
sbbl
xor
mov
sub
sbb
push
cli
daa
jns
and
lock
inc
addr16
loopne
mov
lods
sub
test
xchg
and
aaa
ja
or
inc
ds
push
and
xchg
push
push
push
repnz
mov
xchg
push
icebp
or
push
js
fdivrs
add
push
scas
cmp
push
enter
mov
jno
fxtract
xor
mov
lock
inc
xchg
adc
xor
pop
sahf
fsubl
or
jno
pop
daa
in
mov
insl
in
cmp
jp
outsb
jp
jl
mov
mov
loop
inc
pop
or
test
push
rol
mov
xchg
shlb
pop
loopne
pop
inc
in
sbb
inc
test
mov
fs
fisttps
daa
jns
jne
sub
xor
cs
adc
out
and
push
movsl
xchg
xor
mov
in
xlat
sub
fildll
push
xchg
sub
mov
loop
fnstsw
mov
in
sbb
cmp
int3
repnz
and
push
jno
mov
movsb
add
xchg
das
adc
daa
and
fwait
sub
and
cld
mov
lcall
enter
cmpsl
adc
aaa
mov
insb
sbb
outsl
mov
stos
mov
mov
aas
or
enter
xlat
mov
scas
dec
or
mov
pop
mov
xchg
lods
jb
iret
jp
testl
inc
dec
mov
cltd
lods
cmp
mov
jae
xorl
subb
test
in
pop
xor
scas
aas
inc
mov
test
sub
push
push
xor
xor
fistpl
mov
adc
sub
jecxz
xor
cmp
jne
addl
xchg
les
divb
sbb
mov
fwait
adc
outsl
cltd
push
cmp
sbb
lret
out
lret
push
pop
pop
fdiv
mov
decl
jge
pop
and
in
lret
mov
jmp
inc
mov
or
xor
jne
cmp
pop
std
nop
xchg
and
sbb
ss
and
ds
cmpsb
insb
psrld
mov
int3
push
xchg
lret
pop
ss
les
enter
into
cmc
sahf
cwtl
xchg
fs
ja
lret
cmp
cltd
or
jns,pt
xchg
daa
inc
dec
sbbl
cli
fcompp
add
pop
movsl
cmp
xor
loope
loop
mov
in
cltd
pmullw
aam
bound
mov
loop
insl
mov
xchg
jge
sub
xor
out
push
dec
or
inc
std
mov
cmp
jl
adc
lods
subl
gs
sub
cmpb
push
movsl
add
inc
cmp
popa
mov
cwtl
push
fs
xchg
dec
mov
stc
jns
mov
out
push
push
sbb
xchg
sahf
mov
lods
jle
mov
fidivs
adc
leave
inc
push
mov
jmp
add
sub
xchg
aad
int3
and
mov
sbb
mov
ja
and
xor
out
stos
outsl
pop
roll
jle
cmpl
imul
add
jno
push
fnsave
pop
fsub
mov
or
xchg
pop
jle
push
insl
je
sarb
sbb
lods
mov
push
aam
add
imulb
iret
mov
into
rcr
fs
or
fcomp
cmp
int3
test
xchg
cltd
in
or
pop
stos
jl
iret
push
or
mov
insl
mov
movsl
stos
loope
push
cmp
gs
popa
ret
mov
in
int3
cwtl
idivl
repnz
out
pop
inc
push
cmp
insl
push
xchg
test
pop
mov
push
xchg
sbb
xchg
cwtl
loop
mov
cmp
jecxz
jge
adc
and
lea
xor
lock
nop
xor
sub
mov
mov
test
mov
sub
push
rclb
jno
jle
pop
and
ljmp
or
sbb
and
fnstcw
imul
int
out
aam
aad
adc
and
sub
andl
into
sbb
pop
mov
shrl
mov
mov
popf
es
nop
jecxz
push
adc
faddl
and
adc
mov
gs
sarl
sbb
xor
mov
loopne
mov
jne
jg
cmp
in
imul
les
ret
adc
das
add
out
xchg
mov
sti
pop
ja
dec
push
pop
movsl
pop
mov
shlb
jns
fisubl
xchg
pop
mov
cwtl
scas
jae
xchg
xchg
push
dec
xchg
jno
push
popa
cmp
xor
dec
sub
roll
je
sub
aam
xchg
inc
jne
jecxz
adc
sub
rcll
cmpsl
les
inc
sahf
scas
fildl
cmc
cmp
lahf
imul
push
inc
out
xchg
jo
xor
loop
mov
stos
pop
lea
push
cltd
mov
sbb
aam
adc
jbe
adc
sbb
lahf
fdivrl
sahf
aas
xor
xor
outsl
xorl
stos
mov
add
arpl
aas
sbb
push
cltd
cld
in
subb
jb
jmp
cmp
jae
ja
pop
dec
xchg
mov
pop
and
push
sbb
and
in
push
shlb
or
add
xchg
fisubrl
ljmp
aas
inc
dec
fnsave
push
pushf
orb
mov
fnstenv
jle
clc
loop
clc
xor
xchg
icebp
xorl
mov
les
stc
mov
mov
mov
jge
data16
dec
mov
sub
xchg
adc
insb
inc
jmp
xor
pushf
sub
in
push
test
dec
jge
shrl
loope
sbb
test
shl
mov
push
xor
repz
out
cmp
scas
jle
adc
mov
sbb
xchg
mov
dec
xor
xchg
call
mov
les
push
or
jp
ret
pusha
push
pushf
dec
sahf
stos
clc
xchg
jno
mov
ja
nop
mov
push
ds
inc
ds
aad
dec
pop
out
aam
jg
inc
arpl
jmp
xor
es
cs
or
mov
les
mov
sub
pop
and
xchg
push
cli
cwtl
imul
add
das
pop
popa
dec
jbe
push
lods
lahf
inc
lahf
mov
js
dec
xlat
jne
dec
mov
in
xchg
mov
lock
stos
movsb
out
mov
repz
mov
int3
cmp
dec
int
inc
sbb
cmp
pop
in
mov
mov
mov
fucomip
in
mov
push
push
fistpll
dec
cmp
and
and
xchg
push
push
or
pusha
imul
lock
fwait
mov
adcl
or
adc
ja
mov
in
lods
das
xchg
lods
fs
xor
lret
mov
enter
rcrb
jp
mov
les
iret
sub
dec
jne
mov
mov
cld
iret
dec
jo
adc
mov
pop
ds
xor
dec
popa
mov
lret
in
jnp
or
out
aad
adc
xchg
adc
imul
ds
fadds
pop
imul
cmpsl
rcrl
mov
push
fstpl
in
cmp
sbb
std
aaa
sbb
int3
ror
arpl
add
arpl
mov
fdivs
inc
lret
xchg
cmp
iret
in
gs
cs
xchg
jo
movsl
movsb
cmp
js
loope
fsubr
scas
pop
out
sbb
lods
out
mov
mov
in
add
test
push
mov
outsb
add
and
xchg
fadds
fst
bound
push
push
fs
jl
aaa
sub
in
inc
jnp
ja
out
mov
and
sahf
mov
xor
aad
mov
lods
imul
adc
and
loopne
outsb
mov
inc
in
fsub
adc
sti
sbb
mov
xor
in
xchg
dec
dec
ret
popa
mov
clc
cmp
movsl
imul
rorb
xchg
add
sub
leave
xchg
test
push
mov
mov
push
ret
or
mov
rolb
pop
rcrl
dec
loop
iret
loop
popa
into
xor
xchg
shrl
mov
push
mov
cmp
ror
cli
push
xchg
mov
jmp
std
mov
call
mov
mov
cld
lea
or
popa
mov
push
js
sub
jmp
leave
ficoms
and
mov
xor
dec
and
sub
mov
outsl
or
jns
inc
fistpl
shrl
clc
rclb
xlat
jmp
mulb
sub
cmp
xor
jge
insl
rcrb
fbld
scas
xor
mov
mov
mov
push
xor
push
xchg
fadd
hlt
mov
out
cld
jmp
sub
mov
pop
ja
into
sub
icebp
jo
sbb
dec
pop
add
int3
sub
test
icebp
out
mov
test
jge
or
pop
dec
inc
sub
insb
fisttps
leave
inc
mov
je
cmpsl
sbb
jno
ret
rorl
or
ret
mov
sub
sub
and
pop
arpl
mov
dec
iret
cmp
push
mov
cmp
sub
cmp
test
stos
jle
xorl
outsl
movsb
pop
scas
mulb
fs
loopne
test
sub
mov
call
data16
test
aam
js
into
xchg
cmp
mov
je
movsb
mov
fsub
outsl
mov
pop
inc
push
pop
lods
dec
mov
pushf
xchg
push
outsb
mov
gs
adc
mov
fdivr
sbb
jge
in
xchg
insl
jae
mov
add
repz
and
push
add
cwtl
leave
ljmp
mov
xchg
ds
mov
jbe
and
int
cmp
dec
loope
xchg
bound
mov
dec
lret
clc
mov
scas
add
fiaddl
orb
push
dec
mov
aad
ljmp
add
cmp
in
mov
aaa
cmc
je
out
inc
jb
mov
cs
push
mov
pop
xchg
sbb
subl
xor
daa
or
leave
mov
fldt
std
and
sub
dec
sub
add
push
js
cmp
add
adc
jns
daa
imul
int
test
cld
test
push
pop
call
in
inc
sahf
add
std
leave
in
or
jl
sbb
bound
jle
ds
pop
add
dec
push
pop
loop
jmp
neg
dec
ficoml
cwtl
mov
sarl
add
and
daa
loope
mov
jge
out
mov
xlat
pop
rcl
mov
mov
mov
flds
pop
insb
aaa
mov
push
sbb
lret
imull
inc
pusha
or
out
xchg
fstpl
outsl
mov
cwtl
pusha
pusha
into
jp
jge
add
cmpsl
loopne
ret
dec
loopne
cs
lds
push
push
inc
imul
or
mov
loop
mov
lahf
adc
ret
in
sbbb
sub
out
pop
inc
cmp
in
fdivl
shr
inc
mov
nop
mov
inc
or
subl
sbb
imul
movlps
mov
push
stos
fnsave
sbb
push
ret
test
shr
lret
xor
xor
insl
jb
cmp
out
sub
int
pop
xchg
push
clc
imul
pop
or
ljmp
inc
xor
pop
imul
push
ljmp
in
or
xchg
add
out
movsl
loop
std
mov
jge
lret
mov
mov
xchg
ljmp
aad
std
fisubs
mov
lea
jno
test
fwait
mov
icebp
loop
cwtl
movsl
mov
jno
mov
ljmp
daa
arpl
movsb
imul
fistpll
jmp
pop
mov
jbe
shrb
roll
ja
lods
sub
movsl
xchg
rorl
sub
jbe
jg
mov
add
fsubrp
repnz
lods
enter
jb,pn
loopne
xchg
shrl
shrl
aad
push
adc
jbe
repnz
xchg
pop
aam
ds
mov
pop
nop
fidivl
mov
fisubl
ss
inc
cmpsl
xlat
in
icebp
loop
into
mov
adc
movsl
or
adc
pop
out
cltd
pop
adc
mov
jne
out
sub
fistpl
mov
adc
dec
xor
xchg
test
mov
cli
mov
scas
push
cld
lcall
pop
mov
xchg
sbb
fdivl
and
cltd
jle
and
cmp
mov
xor
inc
rcl
stos
sar
xor
add
sbb
loope
xor
jge
idiv
loopne
sbb
into
leave
and
and
cltd
xchg
adc
push
jo
scas
insl
js
imul
aaa
loope
ficoms
test
pop
pop
or
jmp
jns
cmp
push
sub
push
jp
push
mov
pop
insl
enter
xchg
push
lock
mov
mov
test
xchg
jmp
sti
loope
aam
xor
pushf
std
in
and
out
jb
scas
sub
inc
mov
test
cmc
dec
fiadds
xor
mov
xor
scas
pop
xchg
cs
cmc
mov
and
jns
nop
sbb
add
ret
inc
jne
in
movsb
mov
out
pop
outsb
sub
push
xor
pop
xchg
sub
bound
pop
faddl
loop
daa
icebp
das
icebp
cwtl
lcall
mov
jnp
stc
loop
insl
mov
mov
lret
shll
pop
mov
sti
jp
shrl
dec
inc
xchg
add
or
xor
mov
lret
and
data16
adc
into
ss
jmp
fwait
jns
divb
nop
push
popa
and
push
or
jl
hlt
insb
adc
jo
aas
aam
dec
nop
pop
mov
out
mov
lea
xchg
push
sub
mov
push
sarb
push
push
out
cmp
test
incl
mov
gs
mov
jg
inc
pop
sarl
stos
mov
test
sub
jge
push
imull
and
jge
push
jg
test
cld
push
pusha
dec
sbb
xor
push
cli
iret
cmc
rcrb
fcom
jle
xchg
pop
insl
mov
xor
adc
jle
jb
stc
or
int3
mov
sbb
in
push
test
sub
inc
xor
lret
out
pop
xor
fs
xchg
sbb
add
pusha
test
jns
dec
insb
sbb
sub
aad
xor
in
ljmp
sbb
xchg
inc
mov
int
fcompl
lret
fcmovnbe
mull
jo
inc
mov
lea
xchg
push
cli
adc
sbbb
aaa
and
xor
test
lret
cld
mov
xor
outsb
lds
dec
inc
pop
cltd
cmp
pop
arpl
cli
iret
shrl
aad
out
mov
std
lret
or
cli
inc
test
cmp
rorb
cli
rcr
push
daa
stos
popa
sub
shrl
iret
lods
insl
insb
and
nop
inc
mov
dec
out
popf
mov
ss
ds
mov
mov
ljmp
test
mov
leave
fistpl
adc
in
jge
pop
les
stc
add
xchg
xchg
push
int3
insb
xchg
adc
mov
iret
xor
daa
aad
pop
add
add
pop
dec
scas
es
lods
mov
out
mov
jne
xor
fwait
int3
insb
es
sub
daa
or
sbb
bound
aaa
fisttpl
test
jno
dec
jl
in
ret
sbb
and
fidivrs
add
or
inc
xor
jnp
add
insb
rcrl
cmp
scas
shl
loopne
in
mov
pop
xor
mov
ljmp
push
loop
push
jmp
xor
notb
shll
dec
add
movsl
lods
test
repnz
mov
jmp
lods
stos
mov
push
shll
movl
pop
mov
inc
hlt
hlt
outsb
mov
jbe
jmp
mov
inc
mov
imul
jp
sbb
test
pop
subb
out
fbstp
inc
call
mov
or
fisubl
mov
add
cld
push
dec
outsb
sub
mov
xchg
pop
dec
push
hlt
iret
sbb
andb
xor
push
cmp
push
pop
loop
mov
lea
jl
and
add
dec
lds
es
jl
cmp
xor
sub
pusha
out
push
adc
jmp
arpl
aaa
test
mov
xor
pop
popa
loopne
std
or
es
push
repz
jle
jg
int
or
cltd
fdivrs
in
sub
xor
outsb
or
daa
mov
xor
mov
mov
or
xchg
repnz
jl
push
adc
lea
scas
cmp
mov
fmuls
aad
inc
mov
jp
mov
test
and
scas
sub
sbb
fwait
mov
fs
std
push
inc
test
mov
add
jmp
lret
add
sti
scas
loope
and
inc
mov
xchg
in
iret
in
inc
test
enter
and
adc
and
stos
aad
xlat
in
cmp
xchg
aaa
sbb
inc
ss
loopne
pop
mov
and
in
add
push
jge
outsb
jp
inc
mov
cmp
xchg
mov
mov
mov
fcompl
pop
mov
and
popa
jecxz
lcall
imul
push
lea
inc
mov
or
jp
push
adc
mov
xchg
jge
mov
jle
or
push
sbb
add
and
in
outsl
aam
inc
pop
lods
cmpl
inc
xchg
out
pop
or
xor
int
ja
sbbl
inc
divb
cltd
sub
sub
sbb
fnstenv
inc
jge
sub
mov
or
sbb
imul
pmaxub
sqrtps
mov
mov
mov
xchg
cltd
lea
mov
cwtl
aam
sbbb
loope
xchg
stos
or
add
cmpsb
insb
test
repnz
mov
aad
es
fisttpl
and
shl
xor
add
lret
pop
cmpsb
ljmp
dec
fcoml
pop
movsb
divb
inc
dec
push
mov
lahf
mull
je
push
pop
clc
xchg
loope,pt
pop
movsl
js
mov
in
sarb
xor
lcall
pop
cmp
pop
push
andl
shll
pop
xlat
stos
jmp
ljmp
push
cmpsl
dec
add
dec
cmp
xchg
dec
mov
stc
je
cltd
mov
dec
xchg
mov
in
cmpsl
fs
aad
cltd
xchg
xchg
mov
imul
int3
cmp
mov
ret
dec
pop
arpl
mov
aas
jle
lcall
aas
popf
sar
mov
imul
inc
mov
mov
into
in
mov
add
clc
lahf
loop
dec
mov
pop
or
pop
xchg
push
lret
jmp
adc
stc
ljmp
ds
mov
cmp
mov
fistpl
sbb
in
fmuls
or
add
roll
inc
aam
popf
mov
or
add
mov
mov
xchg
cmc
lcall
das
jg
cmpsl
mov
mov
movsl
into
repz
pop
cltd
icebp
out
jnp
fisubrl
lcall
loope
or
scas
dec
daa
inc
jbe
shrb
pop
cmp
addr16
xor
hlt
mov
cmp
or
gs
pop
pop
mov
imul
scas
mov
dec
push
sti
shl
clc
mov
test
std
cmc
ret
mov
inc
or
jnp
sub
pop
or
or
stc
cmpsb
pop
in
imul
inc
lods
inc
jg
pop
jb
ret
jne
in
push
push
es
loopne
mov
jl
movsl
dec
xor
push
inc
cltd
mov
cmp
push
xchg
imul
or
sub
mov
fiadds
xchg
sbb
mov
fisubs
push
push
xchg
in
popa
cmp
outsl
adc
jnp
aaa
push
dec
mov
push
int3
push
pop
aad
aad
fadd
mov
xchg
fldenv
push
pop
adc
dec
jb
addr16
dec
lahf
sbb
stc
mov
or
adc
xchg
aas
int
aad
xchg
lret
pop
inc
jbe
dec
mov
push
cli
outsl
in
out
dec
jbe
lret
sub
fcmovu
xlat
lret
sbb
ds
dec
rorb
std
dec
not
add
xor
xchg
pop
and
adc
add
adc
pop
subl
mov
xor
mov
jg
imul
stos
sub
xor
dec
lods
dec
jle
movb
mov
pop
sbb
lods
dec
pusha
mov
cmp
aas
es
rorl
cmp
test
jp
jp
daa
mov
dec
jno
mov
adc
cmc
lds
xchg
adc
fcmovne
loopne
dec
idivb
mov
add
repz
pop
call
dec
mov
mov
int
les
test
movsl
popf
xor
and
inc
pop
mov
sub
mov
movsb
lcall
lahf
mov
sbb
enter
mov
into
test
ja
jg
mov
or
iret
in
push
cmp
sti
test
push
or
add
gs
aas
push
push
or
jmp
movsb
inc
xor
or
add
lret
mov
ja
ja
out
out
in
inc
mov
inc
sub
add
pop
adcl
repnz
sbb
sub
inc
add
and
xor
mov
jae
sbb
dec
in
fidivl
jg
lahf
ja
fmuls
adc
dec
dec
rol
xchg
fdecstp
sahf
jl
std
dec
daa
cmp
scas
jp
mov
sub
or
out
lods
xor
popa
mov
enter
mov
negb
add
sbb
jg
add
mov
sahf
dec
iret
adc
hlt
aad
jle
movsb
arpl
xchg
fildll
inc
jnp
aaa
inc
mov
pop
jmp
gs
and
xchg
sub
leave
push
or
leave
dec
cmp
xchg
movsb
cmc
sub
lret
xchg
lahf
lret
xchg
out
mov
mov
insl
popf
pusha
push
mov
ss
mov
repnz
cmp
sti
dec
pop
clc
add
mov
fs
sti
xchg
pop
dec
arpl
xor
notb
aaa
imul
push
imul
xchg
push
xchg
fadd
add
mov
test
jp
xor
in
lods
jp
pop
jne
cmp
jne
mov
call
push
je
movsb
cmp
scas
imul
sbb
dec
loope
gs
test
add
nop
inc
nop
imul
dec
and
mov
and
push
shlb
cmp
pop
sbb
xlat
fsts
jecxz
ret
sbb
pop
dec
push
cmc
lahf
mov
inc
xor
jne
aad
insl
imul
dec
jae
mov
cli
lcall
cmpsb
data16
push
jb
dec
pop
push
xor
mov
ljmp
es
jo
test
sbbb
and
and
mov
or
push
cmpb
addl
xchg
sbb
shll
cld
add
sbb
lcall
rolb
xchg
clc
in
sbb
adc
sti
fcmovbe
sahf
add
lret
add
insl
cmpsl
jns
shll
cwtl
adc
lods
add
add
dec
pushf
push
cmpsl
fldl
pop
and
sbb
jno
push
je
xchg
xchg
mov
sub
cmp
jae
pop
cs
xor
adcb
or
stc
jbe
out
fsubl
fimull
enter
and
sub
ret
movsl
stc
pushf
sbb
mov
xchg
jnp
cmp
dec
xchg
xchg
xor
push
test
xorb
mov
cmc
mov
sbb
and
push
push
loop
inc
add
sub
push
sub
pop
shrl
ds
imul
mov
mov
push
scas
cmp
pop
ljmp
test
int3
mov
adc
pop
scas
dec
sub
dec
pushf
cmp
add
dec
int3
out
add
inc
inc
sub
inc
aad
sub
inc
jl
test
popa
bound
sbb
lret
and
addl
cmpl
jg
ds
inc
out
pop
mov
inc
xchg
sbb
or
pop
pushf
popf
pop
mov
jae
mov
das
rclb
repnz
adc
push
push
loopne
jp
ficoms
stos
daa
loopne
mov
ja
rol
imul
xchg
mov
fwait
mov
ss
pop
xor
mov
aaa
mov
outsl
dec
rcll
aad
mov
mov
adc
xor
enter
rorl
and
add
mov
lods
scas
std
movsl
jp
and
stos
pop
lret
shlb
mov
leave
lds
std
mov
subb
cld
jo
stos
mov
aaa
and
or
sbb
fimuls
cmc
stc
jl
ss
mov
js
xchg
das
inc
les
push
cmpsl
pop
pop
mov
cld
xor
mov
clc
add
out
mov
xchg
sub
in
out
jo
and
cmp
pop
testl
xor
cmp
pusha
push
jb
pop
rcrb
inc
mov
ljmp
js
cld
push
popl
jne,pt
or
or
loope
xor
mov
pop
add
insb
movsb
arpl
sbb
jns
ret
lock
bound
repnz
xor
cmp
mov
mov
lea
in
or
out
stos
xor
add
mov
adc
popf
xor
imul
and
push
hlt
test
imul
inc
dec
and
dec
lock
stos
notl
fdivl
dec
int3
cmpsb
outsb
insb
out
lret
out
mov
insl
rorb
outsb
and
addr16
dec
inc
inc
sub
movsl
xchg
lret
pop
std
jmp
or
mov
jle
int
dec
jecxz
es
add
push
stc
repz
test
or
nop
xchg
mov
hlt
cmp
arpl
sub
pop
popa
js
or
nop
pop
stos
js
xchg
cwtl
subb
xchg
icebp
and
push
fistps
test
pop
or
jae
xor
fnstenv
fmulp
enter
data16
or
mov
idivb
aaa
push
xchg
ds
int3
adc
leave
movsb
pop
mov
mov
mov
mov
push
mov
pop
jg
repz
lahf
pop
xchg
push
push
std
jo
in
jbe
jecxz
sbb
xchg
int
leave
lods
mov
fsub
js
in
adc
out
inc
jns
jnp
mov
outsl
fidivrl
jns
psubsw
mov
and
rcll
mov
jmp
xchg
int3
lds
fnstcw
push
andb
push
sub
mov
les
mov
out
dec
or
cltd
aas
fwait
sub
xor
test
jecxz
subl
call
cmp
mov
ret
nop
mov
jp
stos
lods
sub
dec
aas
int3
inc
push
jbe
mov
subl
jb
mov
in
dec
dec
mov
and
push
jns,pt
cmp
aaa
outsb
pop
mov
push
or
cmp
push
aad
or
xlat
arpl
aad
mov
mov
dec
and
cmpsb
mov
sbb
xchg
fmuls
pop
mov
and
mov
adc
jecxz
js
sbb
ret
lret
fiaddl
cmp
setbe
jge
mov
test
jecxz
mov
dec
and
lods
inc
and
out
pop
imul
cwtl
xrelease
lahf
push
jns
xchg
loop
sub
orb
addr16
stos
pop
mov
adc
dec
scas
je
or
xchg
je
popf
aas
and
cmp
js
push
mov
push
ret
sbb
add
xor
les
scas
ret
cmp
loopne
add
jbe
inc
push
lcall
mov
ljmp
inc
mov
adc
add
pop
cmp
pop
andl
xchg
cmp
hlt
add
test
sbb
stos
jo
or
mov
mov
in
arpl
pop
fwait
inc
rorb
and
mov
jp
mov
push
jg
imul
test
adc
repnz
xor
fdivrl
jg
mov
push
loop
sbb
popf
test
and
cltd
xor
jg
or
adcb
pushf
xor
add
mov
pop
dec
sahf
loop
aam
push
ja
es
int3
adc
cmp
lods
shrl
mov
idivl
inc
insb
pop
and
idivl
das
lcall
shrl
adc
sub
mov
pop
or
push
out
leave
inc
mov
fcoms
arpl
push
lret
imul
xchg
scas
and
adcb
xchg
imul
imulb
sahf
clc
das
stc
mov
out
iret
push
xor
les
lods
and
std
movsl
mov
daa
jge
or
mov
push
mov
xor
jle
lgs
jle
or
inc
or
das
daa
sub
mov
jns
enter
ss
mov
dec
loopne
pop
cmp
sub
lea
mull
xor
xchg
repnz
out
mov
xlat
lods
mov
dec
lret
stos
stos
add
add
call
loope
mov
pop
mov
xchg
test
jecxz
push
addb
mov
jb
mov
fistpl
xor
faddl
jb
dec
cwtl
insl
std
popa
sub
dec
subb
push
es
outsl
xor
arpl
cmp
sub
sbb
enter
rclb
jge
sub
cmp
pusha
das
inc
frstor
clc
arpl
mov
pop
pop
lea
push
cmp
shl
sbb
or
jno
and
out
cmp
jae
aaa
push
sbb
xor
push
stos
jne
cli
in
gs
jb
repz
mov
jp
jp
adc
pop
mov
mov
nop
mov
inc
into
data16
cld
mov
xor
and
pop
mov
mov
in
roll
shlb
inc
pushl
sbb
pop
scas
lds
pop
dec
cmc
cmp
test
xlat
xor
cld
adc
out
mov
and
push
cmp
cmp
addl
ss
lods
push
cltd
mov
ficomps
pushf
clc
push
jo
out
mov
push
imul
xor
js
xchg
cltd
cltd
push
movsb
sbb
push
dec
pushl
arpl
mov
push
sbb
mov
idivb
jle
lret
lahf
pop
cmpsb
out
out
sbb
dec
jno
jge
jg
or
push
cmp
xlat
es
call
sub
xchg
iret
negb
gs
leave
sub
pop
hlt
inc
cmp
hlt
out
mov
ret
sbb
lret
testb
jmp
xchg
js
icebp
pop
xchg
lahf
dec
es
push
daa
cmp
pop
daa
push
imul
push
out
fldt
push
jns
in
cwtl
sub
cmp
test
xlat
or
cmpsl
ret
push
mov
xchg
enter
mov
imul
scas
sbb
js
call
sahf
inc
sbb
mov
sub
orl
jg
xchg
scas
mov
mov
xor
mov
pop
scas
loope
sbb
mov
mov
lret
xor
sti
jno
imul
ss
push
pop
push
out
iret
cld
rcl
push
mov
fcompl
inc
enter
rorb
push
mov
negl
in
cld
fs
movsl
mov
call
pop
enter
test
aaa
cmp
jge
lea
enter
mov
bound
adc
cmp
mov
push
scas
scas
popf
add
negb
neg
inc
inc
inc
mov
sub
push
jecxz
fstpl
push
pop
fcomip
mov
aas
orb
cmp
insl
mov
mov
lods
mov
fldl
das
fdivrl
nop
mov
lret
lret
mov
andl
dec
std
fbld
xchg
cmp
pop
adc
in
lcall
or
lods
out
shll
cld
add
ficompl
mov
scas
xor
fldt
fidivl
clc
nop
dec
dec
movsl
add
sarl
jmp
xchg
das
jae
scas
cli
stos
xor
out
cmpsb
dec
pop
cmp
add
pop
xor
mov
dec
jp
fs
insb
mov
mov
cs
sub
les
cmpsb
pop
cmp
dec
sub
cmp
mov
inc
pop
das
push
mov
push
mov
in
hlt
adc
loope
int
sbb
es
ljmp
ds
fsubs
ljmp
jle
fbld
fdivr
fnstenv
xchg
les
lods
xor
clc
inc
daa
ficomps
xchg
add
adc
les
mov
enter
and
popa
call
mov
sub
out
arpl
test
into
std
subl
in
adc
sub
sbb
loope
stos
test
push
jmp
mov
jg
jns
jge
add
cs
sub
pop
xor
xchg
sarl
popa
cmp
xchg
and
inc
mov
ljmp
shrl
div
in
push
clc
xlat
jle
push
push
lahf
mov
jg
lods
push
lea
xor
bound
jb
je
sti
stos
push
pop
add
ds
mov
ret
out
mov
into
xorl
mov
scas
mov
or
int3
lods
lock
iret
inc
test
dec
aad
out
pop
dec
mov
sahf
dec
mov
inc
clc
cld
sahf
push
or
adc
push
or
dec
mov
or
push
cmp
sub
mov
jp
popa
push
rorb
xchg
cmpsb
daa
dec
fwait
dec
fcoms
pop
cltd
out
add
cmp
in
jns
xchg
or
cmpsb
enter
inc
mov
jp
aad
jae
add
in
and
sub
cmc
push
aad
mov
lahf
bound
xchg
cmc
xchg
idivl
test
xor
mov
jne
jbe
cltd
mov
jbe
stos
dec
in
inc
sub
fnsetpm(287
pop
fs
sti
out
mov
rcl
push
add
mov
inc
aad
dec
and
dec
sbb
jecxz
inc
mov
movsl
test
cmp
and
mov
and
jcxz
jecxz
dec
in
jns
add
adc
mull
xor
fnstsw
sbb
sub
cmpsl
scas
cs
cmp
negl
or
ret
inc
and
repz
out
mov
lock
inc
lret
nop
int3
lods
mov
dec
xchg
les
jle
xchg
das
test
or
mov
es
jb
movsb
adc
imul
pop
dec
pop
mov
and
jge
sbb
pop
sar
cltd
stos
mov
mov
pop
or
rclb
jl
movsb
rcrl
lahf
adc
sub
inc
into
add
xor
mov
loopne
fs
push
inc
in
push
leave
outsb
jl
sbb
mov
add
or
movsb
ret
mov
nop
test
popa
jae
lods
outsb
sahf
push
ret
and
imul
fnstenv
adc
lret
shll
push
or
in
aas
jge
dec
ljmp
scas
xor
pop
jo
add
mov
adc
sarl
es
sub
iret
adc
inc
shl
shll
and
xchg
aas
xor
mov
jae
cmc
pop
lcall
mov
jo
lcall
loope
mov
fs
paddw
dec
mov
bound
adc
out
sub
sub
dec
mov
insl
cmp
push
popf
mov
shll
mov
push
mov
and
std
ss
cli
sbb
fistps
arpl
jnp
xor
out
fs
pop
mov
lcall
into
mov
aas
mov
jno
insl
mov
pushf
das
in
pop
mov
xor
xchg
int3
arpl
adc
dec
inc
fxtract
scas
mov
in
jno
imul
adc
test
clc
ret
loope
inc
cmp
cltd
aam
lcall
sub
ficoml
xor
jo
sbb
jae
movb
rcr
loope
cmc
or
pop
clc
mov
adc
out
or
adc
cmp
cmp
popa
outsl
lds
imul
push
inc
int
sub
enter
mov
add
fnstenv
mov
sbb
adc
mov
bound
mov
and
loop
mov
dec
xor
rcrl
out
cwtl
fadd
sub
aad
or
call
or
mov
loope
leave
inc
div
rorl
cld
cmp
sub
xchg
push
add
and
jbe
cwtl
std
add
dec
outsl
mov
pop
inc
les
jnp
mov
pop
pop
addr16
xchg
popa
push
daa
iret
add
je
rcl
mov
dec
sbb
ss
adc
and
aas
in
mov
cmpsl
repnz
push
push
xchg
insb
mov
xchg
push
popf
idivb
inc
push
pop
xchg
sub
fisubrs
xchg
jb
xor
jp
or
cmc
pop
xor
pushl
int3
repz
ljmp
mov
leave
xorl
test
cmp
xor
push
pop
addr16
mov
leave
mov
mov
pop
movsl
lock
outsb
mov
xor
jae
test
icebp
dec
sbb
rcrb
sub
jae
out
inc
and
scas
adc
pop
pop
jnp
jecxz
cmp
xor
cmp
insl
inc
sub
mov
pushl
mov
dec
jp
mov
mov
xchg
push
jecxz
les
lahf
insl
mov
negb
cmp
outsl
ficomps
mov
out
mov
ja
mov
dec
cmpsl
sahf
jmp
add
shl
std
push
push
push
sub
movsl
mov
or
adc
pop
cmp
fst
leave
mov
mov
shlb
ret
cs
sub
enter
int3
fbstp
enter
jecxz
fldt
dec
adc
jnp
addr16
jae
and
ficoms
test
test
mov
dec
daa
push
cmpsl
mov
in
jns
mov
sub
test
lret
dec
les
jmp
cs
pop
bound
adc
xchg
shlb
sub
mov
xchg
out
inc
loop
push
cmp
mov
add
xchg
sbb
dec
adc
test
push
and
outsl
icebp
lret
gs
jle
xchg
out
fmuls
add
sahf
or
jnp
cmp
mov
out
call
sbb
popl
xchg
pop
mov
aaa
imul
pop
mov
outsl
out
xchg
mov
mov
ljmp
lds
insb
das
cwtl
mov
rcrb
or
pop
mov
enter
jns
jl
ds
arpl
inc
adc
aaa
xor
fs
mov
out
mov
scas
mov
call
dec
idivl
rorb
mov
mov
and
jmp
xchg
leave
ja
sbb
bswap
pop
idivb
push
xor
insl
cmp
fcmovb
and
dec
test
pop
out
mov
lret
loop
lcall
adcb
push
mov
hlt
xor
aad
mov
push
aas
push
andb
push
lahf
sub
push
jp
mov
cltd
push
xor
lcall
sub
mov
std
sub
lock
jae
xor
sub
scas
dec
loopne
mov
dec
pop
and
xor
mov
inc
pop
mov
jbe
xchg
notb
outsl
pop
xor
cmpsl
in
mov
mov
push
int3
xor
mov
ret
ja
sbb
sub
push
addl
adc
inc
add
lahf
sahf
ret
stos
subl
push
push
jp
inc
push
xor
jno
icebp
xchg
and
xchg
mov
mov
lods
xchg
mov
add
and
mov
and
jg
stc
jbe
insb
hlt
sub
sbb
arpl
shr
incb
sarl
push
xchg
mov
inc
pop
dec
lods
out
dec
mulb
stc
lods
cmp
cmp
bound
pop
lcall
sub
std
dec
jmp
lods
jmp
loop
pop
rorl
jae
push
out
dec
scas
inc
outsb
fistpll
jb
pop
adcl
fisubrl
inc
cli
inc
push
pop
xchg
scas
adc
inc
jmp
pop
adc
pusha
add
and
rorb
movsb
cmp
fs
mov
add
and
ljmp
push
mov
inc
sbb
xchg
int
les
dec
js
sbb
xchg
in
xchg
mov
mov
aas
into
test
test
std
in
mov
lods
push
jne
and
stc
cli
fisubl
call
push
sbb
mov
repz
enter
incb
ror
stos
sbb
mov
jb
jmp
mov
sbbl
push
lret
inc
mov
and
pop
enter
inc
insl
cmc
cltd
ss
loop
pop
jbe
arpl
sbb
sub
addr16
repnz
loope
stos
popf
mov
shlb
mov
adc
insl
jecxz
dec
lods
loope
mov
and
jnp
or
clc
mov
inc
fidivrl
xor
lret
imul
push
je
adc
xchg
adc
jo
fs
repz
repnz
aas
out
mov
jb
mov
subl
lret
xchg
sub
adc
out
int3
cwtl
cs
or
and
sub
mov
repz
adc
or
enter
insl
xchg
movsl
rcl
xchg
cltd
sub
xchg
or
mull
add
in
push
cld
adc
lret
or
pop
xchg
mov
loop
mov
enter
fbstp
add
push
push
aam
push
xlat
aas
fnstsw
mov
mov
popa
push
mov
sbb
out
pop
stos
repnz
clc
loope
mov
das
xor
imul
inc
pop
popf
jge
cmpsl
mov
adc
std
outsl
xchg
push
pcmpgtd
movsl
dec
mov
es
adcb
mov
lea
xor
xor
push
lea
add
sub
pop
cmpsb
imul
inc
mov
pop
jp
outsl
jl
sub
insb
dec
aad
lods
inc
or
sub
dec
add
sbb
push
dec
inc
hlt
mov
or
xor
lea
dec
out
xchg
lods
pop
push
popf
inc
pushf
sub
out
mov
sub
and
jo
cmc
in
sub
in
lret
sub
lock
out
repz
pop
lahf
sub
jns
js
lcall
repnz
inc
rorb
shl
sbb
dec
jo
mov
adc
sarl
jb
jecxz
and
jno
outsb
cmp
xlat
xchg
inc
mov
bound
mov
or
outsl
fisubrl
xchg
sbb
lods
cmp
int
dec
inc
jle
je
mov
out
addr16
outsb
ljmp
mov
cld
sub
pop
dec
sbb
imul
and
scas
sub
sub
mov
push
shlb
adc
mov
loopne
sbb
jle
jl
movsb
jle
mov
inc
or
inc
pushf
fmuls
rcrl
pop
sub
in
adc
clc
jnp
insb
test
fcompl
lret
mov
xchg
pop
jbe
jne
mov
mov
sub
mov
out
outsb
sub
scas
push
stos
xchg
or
rcrb
sub
out
sti
popf
adc
dec
mov
lahf
mov
mov
mov
int
mov
xor
loope
fisttps
data16
xlat
test
loope
sbb
jne
push
mov
jp
popw
mov
add
leave
imull
int3
cwtl
pusha
in
mov
clc
pop
add
and
dec
cmp
in
cmp
stc
mov
ljmp
loope
push
push
clc
pusha
xchg
push
xor
cmp
mov
test
icebp
int
push
scas
cwtl
sbbl
addr16
pushf
ss
arpl
movsb
push
sub
aam
sub
mov
push
insb
sahf
xchg
jmp
xchg
inc
inc
arpl
shrb
push
pusha
sbb
outsl
dec
cmp
psllw
jno
xchg
fwait
inc
shl
stos
js
sub
in
push
xchg
aam
mov
pop
xor
jl
dec
repz
loop
lcall
out
jecxz
mov
movups
ret
pop
cltd
fisttpl
dec
sbb
je
pop
push
aaa
sub
test
xor
adc
and
xchg
test
ss
ss
test
stos
ja
pop
xchg
sbb
xor
mov
sahf
or
sub
mov
dec
mov
cmpsl
xchg
shll
inc
repnz
cltd
xor
in
cmpsl
or
repnz
xchg
adc
ljmp
jbe
lret
fcmovnbe
sub
xor
pushf
dec
and
cmp
sub
jmp
rolb
cmp
and
ret
or
stos
mov
insb
call
out
xchg
or
cmp
jns
jg
cmpsb
lds
mov
ficoms
pop
or
outsb
insl
pop
cmp
jne
and
scas
mov
pop
cmp
fwait
mov
add
mov
into
cltd
push
sub
rorb
lea
lds
aas
fmull
dec
into
xchg
mov
mov
gs
stc
ss
inc
adc
sbb
negl
sahf
fistpl
mov
pop
and
out
mov
ljmp
and
cmp
insb
sbb
push
pushf
shrb
mov
jle
lds
fwait
jno
test
jle
maxps
and
xchg
mov
shrb
aaa
xchg
movsb
arpl
sti
sarl
test
lock
test
mov
push
cmpl
or
in
push
mov
jg
fidivrl
fcmovnbe
cmp
mov
or
and
ud2
fnstcw
inc
cs
je
clc
std
insb
popa
push
cmpsl
fldl2t
pop
mov
das
addr16
push
jp
cmpsl
loop
out
mov
fmuls
jns
jg
ljmp
repz
cmp
movsb
xor
sub
or
add
xchg
jno
jp
sub
cmp
jo
and
pusha
inc
pop
dec
push
lods
in
mov
add
aam
insl
sub
or
jge
and
xchg
xor
mov
jno
sbb
or
mov
jns
xlat
hlt
fildl
sub
jbe
push
pop
out
or
lea
mov
clc
push
push
cli
lret
cmp
mov
dec
push
inc
jge
call
cmp
xchg
aad
cmpsb
adc
iret
clc
cmp
pushf
mov
push
inc
xchg
lock
lods
dec
inc
inc
mov
lea
or
adc
out
daa
sbb
stc
bswap
mov
fistl
xor
enter
mov
dec
in
enter
rolb
mov
mov
rorb
mov
int3
lods
insb
inc
cmpsb
mov
mov
dec
aad
xor
push
lods
and
dec
jmp
repnz
pop
cmpsb
jns
inc
sbb
pop
rcpps
in
insb
sub
jp
lahf
sbb
bound
mov
jne
lea
pop
cmp
cs
jae
mov
neg
leave
cmpsl
cmpl
cld
leave
push
es
mov
mov
fcomps
add
jp
jl
xchg
aad
dec
or
mov
mov
jne
test
aaa
mov
negl
test
ss
repnz
cmpsl
dec
incb
data16
or
jne
xor
daa
test
xchg
sbb
lea
pop
insl
adc
lea
test
xor
jg
cmpsb
xor
cmc
movsl
roll
lock
push
cwtl
lahf
adc
pop
sahf
mov
rcl
jb
adc
jge
xchg
loope
sub
lret
mov
idivb
jo
fdivp
xor
icebp
jbe
clc
inc
testb
sub
fdivrp
pop
adc
mov
leave
dec
ljmp
js
into
in
or
fidivrs
sahf
cli
stos
jl
sbb
dec
adc
push
jg
cmc
movsl
mov
dec
sbb
pop
fbld
test
adc
xor
stc
lcall
jo
aad
cli
ret
sbb
aam
xchg
cmpsb
hlt
out
adc
movsb
arpl
ds
mov
ljmp
outsl
arpl
pushf
add
inc
pushf
sub
out
pop
sbb
clc
repz
call
jbe
adc
push
fmulp
xor
pop
in
or
insl
icebp
insb
addr16
add
cld
cltd
jg
inc
mov
sub
int3
pop
cs
movsb
lods
and
cli
xchg
shlb
js
outsb
lret
mov
and
cmp
pop
cmc
daa
out
scas
dec
sbb
inc
xlat
jecxz
mov
cmovns
sahf
shrb
scas
stos
insl
xorl
sbbb
mov
jno
ds
mov
cltd
dec
mov
idivl
dec
ret
push
cmc
mov
jno
test
push
mov
repz
mov
mov
nop
mov
and
push
movsl
lock
fiaddl
and
fistpll
sub
adc
jo
add
pop
xorl
xchg
aaa
pop
int
pop
ljmp
add
push
add
push
nop
mov
lea
mov
loop
mov
rcl
sar
mov
lds
dec
mov
cmpsl
fistpll
xchg
loope
mov
pop
pop
sub
mov
mov
xchg
and
and
lahf
stos
movsb
sbb
gs
push
mov
mov
inc
outsb
jbe
jle
xchg
pop
jg
or
in
pop
mov
int
mov
jecxz
hlt
lret
jbe
push
shl
xchg
lahf
setb
repnz
xor
ret
push
data16
mov
in
pop
cmp
inc
mov
in
fisttps
popa
mov
inc
push
jge
aas
iret
xchg
xor
fstpt
rclb
popa
push
stc
mov
pusha
popa
sti
mov
out
movsl
xchg
xor
inc
xchg
scas
in
lods
inc
sbb
gs
mov
fucomi
xchg
loope
dec
push
push
sar
in
jl
inc
jnp
ret
sbb
or
xchg
jno
ret
daa
xor
repz
movsb
or
pusha
mov
std
out
and
imul
xor
test
mov
adc
adc
fstpt
xchg
lods
jle
dec
shl
inc
push
pop
mov
in
ds
fcmovnb
push
sub
ret
sub
rcl
pop
pop
pop
cmp
pushf
cmp
scas
add
mov
cli
fwait
mov
xchg
mov
cld
jmp
gs
inc
out
and
fs
repnz
bound
push
int
nop
cmp
cmp
sub
jns
jmp
mov
pop
xchg
push
cmp
inc
dec
inc
jmp
sbb
aaa
daa
push
xchg
lret
popa
or
in
push
rclb
lods
lret
scas
daa
cmp
outsb
outsl
les
and
or
xchg
xchg
insb
mov
inc
xor
push
es
push
and
insl
std
cmpsb
add
mov
test
or
dec
sbb
and
push
jne
in
cld
test
push
outsb
mov
cwtl
inc
lcall
lods
dec
xchg
sbb
enter
ljmp
hlt
dec
pop
xor
push
test
cmp
mov
dec
popa
mov
add
scas
jl
xchg
jg
sub
mov
sti
out
test
xlat
inc
iret
or
in
mov
or
or
shlb
loopne
mov
rcrb
in
or
inc
or
loop
fistpll
dec
or
sub
push
into
jb
bound
mov
mov
roll
mov
lahf
xor
mov
in
loop
dec
dec
or
push
stos
rclb
pop
out
adc
xchg
mov
aaa
in
je
test
pop
sti
loopne
and
dec
pop
shr
imul
add
xchg
cmp
orl
mov
rorl
icebp
imul
dec
out
cmp
cmc
fnstenv
fwait
leave
int3
cmp
popf
rorb
js
fdivl
jns
fsubl
popf
in
mov
sub
hlt
ja
shrl
dec
pop
js
dec
rol
pop
dec
ljmp
cmp
adc
ljmp
push
insl
fwait
and
rol
mov
or
push
dec
int3
rcll
inc
cmp
jae
outsb
data16
je
jne
clc
push
fs
lahf
les
mov
or
fnstsw
aam
sbb
int
das
js
and
adc
dec
leave
lret
add
lock
pop
test
cmp
jmp
outsb
pop
pop
xor
test
jno
cmpsl
arpl
es
mov
mov
jmp
cmc
ret
jb
xchg
arpl
stc
and
xor
loop
jp
imulb
inc
mull
and
jnp
inc
fdivrl
mov
cmpsb
mov
jo
ljmp
adc
jne
sti
xor
xchg
std
inc
jg
push
mov
js
mov
lret
clc
imul
cmpb
xlat
hlt
decl
xor
test
jmp
dec
push
mov
arpl
xlat
je
mov
inc
lret
pop
ss
mov
lods
lods
addl
mov
les
push
sbb
mov
in
call
ficoml
pushf
adc
pop
xchg
dec
mov
dec
popf
movups
call
push
sub
cmp
outsb
adc
jnp
cmpsl
sbb
cld
sub
inc
mov
pushf
cmpsb
inc
movsb
mov
leave
pop
insl
scas
adc
les
add
xlat
jo
push
shl
in
fisubrl
pop
in
pop
clc
iret
test
mov
std
mov
or
or
sub
push
inc
hlt
dec
xchg
shrl
lods
clc
mov
aas
cmp
xchg
add
xor
or
mov
add
or
lods
dec
cmc
das
push
pop
dec
and
push
jecxz
cltd
pop
mov
cmpsb
push
filds
data16
test
mov
imul
push
movb
test
or
out
dec
xchg
pop
mov
and
jo
dec
ds
sbb
out
xchg
push
jbe
dec
repnz
xchg
adc
subl
push
fdivp
cs
xor
int
in
push
cmpsb
pop
cli
cmp
pop
mov
pop
sbb
jle
jg
ljmp
pop
push
fdiv
sub
or
sub
iret
lods
roll
out
ret
mov
imulb
xchg
lret
out
adc
loopne
mov
cmp
add
mov
mov
mov
inc
shll
jl
ja
frstor
xor
push
testl
int3
incl
rcrl
popf
rcrl
popf
rolb
lock
insl
lret
push
je
out
adcb
mov
cmp
pop
fs
mov
clc
inc
pop
enter
mov
push
push
sbb
lret
lds
adc
or
push
cmc
repnz
jp
xchg
lods
pusha
mov
in
xchg
daa
adc
imul
pop
push
shll
es
or
push
xchg
insl
js
addr16
fildl
jg
add
stc
aas
aam
ficoms
stc
jmp
sarl
cmpsl
mov
sbb
ds
push
xor
loope
xor
into
add
lahf
mov
jns
out
andb
add
shrl
rclb
out
aam
sub
cmp
sbb
push
cwtl
cmp
mov
sbb
sbb
out
sub
jmp
and
cmpsb
jge
mov
das
into
les
shll
xor
jae
and
in
inc
icebp
cli
adc
fwait
loope
mov
and
les
fs
adc
inc
aas
pop
leave
add
push
insb
rorl
xchg
push
cwtl
mov
lcall
push
mov
sbb
dec
rcrb
shlb
pop
mov
mov
xchg
insb
out
in
leave
lahf
sbb
jno
push
jb
inc
adc
stos
inc
lock
and
xchg
mov
push
std
lret
dec
out
cltd
popf
xchg
jb
jae
jp
les
or
aam
cmp
and
jo
stc
xchg
ficoml
and
lea
in
or
lahf
out
and
repz
mov
syscall
outsl
adc
out
adc
int3
call
cmc
outsb
cmp
pusha
push
fiaddl
add
dec
and
push
dec
mov
add
pop
insl
fs
lahf
aam
dec
fsub
leave
insl
movsb
mov
imul
or
mov
mov
xchg
sub
xchg
mov
xor
test
or
sbb
adc
add
test
dec
mov
inc
push
or
test
out
ss
adc
pushl
insl
jmp
inc
dec
pop
loope
bound
jne
ret
pop
push
mov
xor
call
out
push
cmp
arpl
or
or
mov
pusha
or
or
inc
enter
and
aaa
in
pop
or
leave
pmulhw
jle
or
pop
jbe
dec
fwait
inc
jmp
xchg
mov
aaa
mov
xchg
add
jecxz
cmp
mov
leave
fildl
inc
xchg
adc
sub
dec
sub
xor
mov
aas
aaa
inc
rcl
mov
and
sub
jl
mov
add
stos
dec
cmp
lods
inc
mov
sub
fistpll
aaa
cmp
and
dec
pushf
imul
mov
stc
mov
or
sbb
daa
pop
push
mov
mov
shll
ret
pop
out
pop
xor
fnstcw
test
loope
jno
mov
out
mov
icebp
lods
ret
and
dec
sbb
mov
subb
lret
lods
pop
add
mov
cmp
inc
dec
push
movsl
mov
pop
iret
jo
jbe
mov
into
bound
mov
sbb
lret
outsl
pop
xor
and
stos
jle
movsb
out
xor
lods
pop
and
fidivl
out
push
sub
das
add
jb
mov
mov
jmp
aas
lds
push
or
in
cmc
jp
or
cmp
hlt
adc
das
mov
in
xchg
xchg
pop
ss
cmp
mov
mov
scas
xor
pop
or
sbb
pop
cmp
jge
pushf
jb
out
scas
pop
das
push
or
xor
scas
mov
push
call
inc
xchg
imul
sbb
inc
jmp
icebp
jmp
stos
push
fistpll
push
adc
mov
jle
ss
dec
fnstenv
and
fiaddl
and
sub
rcl
lods
add
fdiv
lcall
sub
mov
es
imull
rcll
mov
mov
call
int
and
mov
mov
xchg
icebp
xchg
add
lahf
das
mov
lahf
hlt
inc
mov
out
lock
xlat
mov
mov
ret
mov
orl
xchg
lret
scas
dec
cmp
cli
lcall
dec
faddl
das
repz
fistpl
imul
jmp
mov
dec
fwait
insb
lds
in
sbb
push
mov
xchg
lret
xor
lods
sahf
insb
shll
repnz
repz
fsubs
push
fimull
add
fcompl
cmp
inc
fmul
aas
out
jb
imul
scas
mov
cmp
mov
or
push
clc
mov
mov
adc
push
data16
cmp
es
into
hlt
in
lret
es
aam
movsb
jmp
repz
pop
pop
scas
js
inc
or
fists
xchg
mov
push
pop
push
add
mov
adc
cmpsb
xor
fmuls
pop
cli
mov
inc
or
add
stc
pop
fistpl
pushf
cmc
push
out
loopne
loopne
mov
push
cmpsb
or
dec
in
add
addr16
repnz
sub
inc
add
test
fstpt
sti
xchg
mov
cmp
push
jnp
pop
jl
mov
dec
xchg
fmull
jne
push
or
adc
shll
push
dec
mov
push
outsl
or
mov
paddusb
mov
in
jae
or
or
mov
mov
pop
jmp
imul
popf
mov
fisttpll
and
cltd
cmc
sub
sbb
int
int3
jle
mov
inc
ja
sti
jl
fisubrl
sbb
jbe
jbe
outsb
mov
pop
jmp
in
daa
jg
adc
lea
mov
jp
dec
jle
popf
das
psubsw
pop
mov
cli
jg
pop
xchg
test
ret
and
dec
cmp
aaa
mov
std
enterw
mov
ret
aaa
cmp
xorl
flds
dec
xchg
scas
in
and
push
in
insb
test
cmp
xchg
adc
repnz
out
jne
leave
jns
nop
int3
in
xchg
sub
ja
cltd
bound
pop
inc
mov
push
iret
shrb
inc
repnz
jecxz
pop
in
mov
scas
mov
imul
lock
add
mov
enter
iret
sbb
cmp
mov
mov
cmc
mov
pushw
das
out
int3
imul
inc
inc
loope
popa
out
or
sub
push
xor
inc
ss
jecxz
mov
addr16
xchg
jge
inc
pusha
cmp
jne
sub
lret
mov
jns
mov
jl
pop
je
or
mov
xor
jo
mov
inc
dec
ljmp
lret
dec
test
jnp
xchg
or
lahf
lret
ljmp
shll
mov
jbe
sub
iret
or
ds
xchg
test
iret
es
cs
pop
xchg
iret
jno
in
mov
sbbl
mov
lods
push
int
lahf
mov
outsl
ret
in
inc
pop
out
stc
sub
nop
decl
pop
fists
sbb
dec
imul
cmp
les
push
dec
movsl
ljmp
stc
push
stos
fwait
das
in
mov
mov
xor
arpl
sbb
jecxz
js
mov
lret
andl
outsb
adc
mov
xchg
add
gs
stos
addr16
pop
int3
mov
add
test
test
aad
popf
mov
inc
lods
jge
jne
push
icebp
mov
das
xor
jg
pop
sub
fwait
ss
enter
arpl
xchg
ss
pop
sbb
fcoml
fs
mov
xchg
xor
mov
imul
jmp
mov
mov
mov
mov
pop
repnz
data16
leave
out
ja
cld
in
cmp
fsubrs
dec
push
inc
js
dec
push
jmp
lea
negb
jns
sub
dec
shll
fdiv
fs
add
fsub
pop
test
mov
mov
lcall
push
int
imul
popf
lea
add
mov
js
pop
sub
push
push
jae,pt
jae
inc
jae
pop
mov
out
enter
jo
jl
jg
sahf
cli
stos
sbb
xor
pop
test
insb
jl
cmp
push
pop
popa
rclb
sbb
es
into
imul
push
imul
push
pop
xor
clc
fdivl
aas
sbb
cmp
fdivs
rcrl
inc
pop
in
mov
mov
scas
inc
sbb
sti
test
jl
mov
sbb
xchg
addr16
out
lods
push
jecxz
cmpsl
cltd
adc
inc
sbb
or
jno
int3
out
pop
pushf
push
and
pop
pop
ds
adc
adc
xchg
xor
inc
pop
xor
xor
in
cli
rcll
sbb
jbe
std
inc
pop
daa
inc
fsubs
cmpsl
lret
cmp
mov
call
fdiv
push
push
in
xchg
pop
repz
xchg
sbb
arpl
aas
push
testl
jle
add
icebp
push
sub
jnp
mov
jnp
jnp
lods
loope
sbbl
mov
jmp
test
cmp
or
cmpsl
test
movhlps
add
dec
fldenv
xor
and
xorb
repz
out
mov
cmp
mov
push
rcrb
jle
out
mov
mov
jae
movsl
jge
hlt
loopne
push
sbb
pop
out
cmp
sub
mov
sbb
test
mov
cmp
xchg
mov
sub
clc
add
es
jns
adc
sbb
inc
dec
in
push
mov
pushf
popa
mov
xlat
inc
jb
outsb
inc
mov
lods
mov
adcb
movsb
adc
cmpsl
pop
int
lcall
mov
mov
mov
or
xorb
mov
xor
mov
sbb
adc
inc
add
xor
jnp
pop
into
xor
test
call
jecxz
sbb
hlt
sub
dec
jns
push
push
mov
or
mov
xchg
pop
pop
int3
mov
jmp
xchg
fistl
cli
pusha
mov
in
inc
mov
pop
push
cmc
aaa
xchg
and
push
cmp
push
mov
sub
sub
stos
lods
mov
sti
stc
dec
sbb
pop
loopnew
lret
arpl
and
fiadds
push
into
xor
out
cmc
mov
adc
arpl
mull
push
lret
add
sarl
inc
stos
xor
les
sub
and
pop
adc
xchg
sbb
jns
in
dec
push
imul
xor
push
pop
test
mov
xchg
push
cmp
and
jecxz
repz
add
cmp
movsl
std
mov
inc
ds
jmp
or
decb
pop
movsl
into
outsb
jnp
in
and
test
xchg
and
jg
into
lock
inc
mov
scas
jne
adc
dec
outsl
mov
inc
cmc
jg
pop
andb
pop
mov
cmpsl
and
loop
in
repnz
repz
inc
pop
rcll
fisubrl
mov
mov
add
fidivl
push
divl
jo
popf
dec
inc
or
xchg
sub
and
cltd
push
stos
repz
xlat
adc
dec
aas
push
imul
bound
dec
fistpll
stos
pop
mov
cltd
xor
lcall
es
icebp
movsb
mov
sub
or
xchg
loope
mov
incl
mov
scas
fisttps
cmp
js
add
push
cli
xlat
arpl
xor
pop
cmpsb
pop
aad
push
popf
icebp
push
test
out
and
xchg
lret
out
sahf
xchg
xchg
loope
mov
call
in
cwtl
mov
xchg
xor
lock
ja
jp
outsb
pop
ja
pop
out
xchg
mov
push
mov
pop
pop
jge
and
lret
pusha
lock
dec
aam
pop
cmpl
jecxz
lcall
and
xchg
jmp
stos
pop
popa
xchg
in
jle
jp
mov
or
push
cmp
mov
cmp
or
loop
mov
jge
dec
xchg
mov
aas
mov
push
jnp
das
xor
ficomps
das
ret
stc
into
iret
neg
sub
lods
out
ficomps
pop
xor
lea
incl
xchg
add
outsb
sti
stos
inc
ljmp
jg
mov
adc
xor
pushf
inc
xor
in
inc
mov
sbb
mov
fcmovne
rclb
and
xchg
push
push
mov
cmp
inc
int
es
idivl
mov
jl
ja
or
adc
jns
mov
pop
add
jl
push
stos
jg
or
mov
or
xor
scas
je
mov
test
xchg
dec
sbb
je
mov
push
jle
cmpsl
xchg
mov
xchg
js
cli
mov
outsl
fs
loopne
cmpsb
dec
lcall
popf
pop
in
inc
pusha
sti
leave
mov
cmp
cmpsb
mov
hlt
jns
push
mov
mov
mov
std
cld
rcrb
or
cmp
push
cmp
jmp
repnz
xchg
data16
push
add
pop
lods
dec
bound
mov
or
test
sub
sbb
pop
jmp
cld
mov
cld
js
jno
cmpsb
pushf
repz
fnclex
push
fwait
out
lcall
mov
test
and
cmovo
repnz
mov
push
aad
pop
dec
icebp
aaa
cli
les
dec
mov
pop
sti
inc
add
movsl
leave
push
aaa
push
pusha
and
xor
cld
jmp
push
lret
pop
xchg
xor
add
shlb
inc
fsubrp
stc
jge
mov
pop
loop
fwait
pop
mov
dec
ds
orl
cld
pop
inc
mov
add
dec
cwtl
dec
subl
or
loop
sti
push
cmp
ret
rcll
fildl
sbb
testb
mov
xchg
jmp
adc
ret
insb
lock
popa
push
inc
popf
xchg
fldcw
ret
in
push
pushf
xchg
cmc
pop
sub
xchg
shr
push
aam
loop
inc
cmp
cmpsl
out
in
inc
xchg
adc
inc
lods
jnp
aas
sub
push
movsl
rorl
std
mov
cmp
fsubrs
mov
xchg
dec
pop
mov
daa
push
or
jne
jge
pop
ds
les
popf
xor
jl
incb
addl
mov
or
iret
push
insb
outsl
in
dec
call
or
add
call
stos
and
int
hlt
and
xchg
xchg
xlat
mov
fidivrl
int
pop
in
jge
jne
bound
mov
popa
mov
int3
push
ss
insb
cmp
repz
adc
add
aas
push
xor
pop
js
bound
ljmp
pop
dec
xor
push
xor
xchg
inc
mov
jno
out
sub
test
mov
movsl
dec
push
cmp
pop
add
dec
jecxz
fbld
mov
sub
xchg
bound
nop
mov
push
test
jnp
sbb
and
test
imul
mov
mov
ficoms
xor
mov
fstpt
dec
nop
push
je
fists
out
imul
in
les
popf
mov
inc
push
dec
sbb
fwait
cmp
xor
mov
outsl
adc
rcll
sub
cmp
push
xchg
movsl
test
xchg
stos
test
fistpll
arpl
fnsave
adc
xchg
popa
aas
sub
aaa
add
in
lret
jecxz
shll
and
sbb
jae
mov
xor
test
sbb
iret
test
ljmp
sarb
shll
movsl
xor
sub
adc
jbe
sahf
mov
out
xchg
jo
jae
imul
mov
fcomip
mov
sti
hlt
add
nop
out
push
icebp
cs
pop
out
push
in
nop
inc
xor
fisubrs
sbb
bound
cltd
cmpsb
adc
jge
xchg
test
mov
test
imul
pop
xor
mov
test
movsl
jne
inc
out
call
jbe
clc
insb
fidivrs
pop
or
pop
inc
xor
mov
mov
test
int3
and
ljmp
ret
mov
push
jbe
xchg
mov
fbstp
gs
lret
lret
mov
cltd
stc
mov
jo
pop
jbe
lds
lahf
inc
imul
xor
inc
ds
repnz
mov
lods
xchg
and
dec
push
push
cmp
cwtl
xorl
subl
popf
cmpsb
dec
or
pop
mov
ljmp
push
xchg
inc
adc
pop
add
je
pop
popa
jo
fistpll
push
add
sbb
pop
cmovns
out
jb
mov
jno
inc
mov
insb
mov
int
mov
cld
loopne
mov
xchg
ret
mov
push
inc
insl
mov
dec
and
repnz
fcmovu
hlt
scas
cltd
mov
pop
dec
dec
xchg
xlat
cmp
in
push
pop
stc
add
fucomip
mov
sub
pop
lret
out
enter
stc
test
mov
das
fstpl
imul
iret
push
mov
push
sbb
fs
mov
xor
stos
xlat
sub
fistps
dec
loop
cmp
cmp
fidivl
shl
mov
xor
daa
dec
pop
mov
cmp
sbb
or
ret
sbb
inc
mov
xchg
pop
in
mov
add
mov
in
test
aam
fdivrs
add
psllq
and
insb
add
enter
push
xor
jge
inc
subb
mulb
test
popa
sbb
mov
sub
push
out
sub
adc
push
shrl
sub
mov
dec
imul
mov
sbb
enter
push
xor
ljmp
movsb
mov
sahf
inc
ss
pop
or
mov
js
dec
or
inc
lods
adc
test
pop
stc
int3
dec
xlat
mov
lock
movsb
and
loopne
scas
jg
or
xor
loopne
pop
adc
and
and
mov
sub
std
and
push
mov
sub
or
mov
inc
mov
push
inc
sub
push
addr16
fiadds
mov
nop
lret
push
pop
ss
cs
scas
sbbl
jne
jge
es
data16
xor
mov
sub
jmp
jmp
stc
aad
adc
pop
aaa
mov
mov
sbb
xlat
dec
adc
das
pop
adc
pop
call
aas
push
fwait
je
rol
jb
mov
divl
inc
je
dec
adcl
es
pop
out
fdivrs
xchg
fisubl
insl
in
inc
jmp
out
push
out
push
roll
jecxz
out
fbstp
jbe
mov
push
pop
fistpl
int3
aam
dec
lcall
leave
scas
ss
jo
or
movsb
pop
sub
je
cmp
aad
das
xor
mov
inc
and
inc
mov
jbe
negl
push
fldt
dec
mov
mov
mov
in
push
sub
repnz
push
adc
mov
inc
adc
dec
jg
fidivs
fnstcw
fdivr
test
imul
sub
or
inc
mov
pusha
cmp
mov
push
cs
arpl
out
push
cs
or
jbe
sub
mov
mov
push
mov
loope
enter
lea
in
add
loope
fimuls
call
lods
movsb
xor
mov
mov
cvtpi2ps
jb
cmp
imul
or
inc
in
stc
adc
pop
gs
aas
or
iret
cli
or
mov
mov
inc
xchg
sahf
negb
push
rcll
scas
dec
mov
cmp
pop
mov
add
pop
cmp
test
fistpl
jle
jg
data16
movsb
ffree
sbb
inc
outsb
fwait
sbb
lock
push
jb,pt
aad
out
cmp
or
loope
popf
push
mov
add
xor
inc
loopne
mov
cli
mov
fwait
cli
mov
out
lods
sahf
sub
mov
hlt
mov
lods
jl
outsl
lock
imul
jmp
mov
mov
push
add
sbb
pcmpeqd
xlat
pop
stos
mov
repnz
pushf
aas
ljmp
xchg
popa
xor
add
out
push
push
push
xchg
mov
jns
lret
inc
dec
test
lods
xorb
js
inc
pop
dec
push
ja
jmp
int
cmpl
out
cli
fdivr
sub
jnp
outsb
popa
aad
loope
push
ret
sbb
pop
aas
mov
inc
sub
jnp
fildl
sbb
mov
rolb
outsb
sub
fwait
mov
pushf
repz
or
lret
fxch
arpl
pop
xchg
jne
adc
lret
mov
mov
xor
inc
jp
inc
addr16
int3
dec
std
adc
std
lahf
pop
shl
in
xchg
cwtl
sub
aas
popa
rcll
cmovle
scas
out
mov
das
nop
fistps
dec
lods
jbe
ret
sti
hlt
or
leave
test
js
cmp
stos
js
mov
and
pop
add
es
hlt
cmp
mov
mov
test
pushf
jae
leave
xchg
in
mov
inc
or
sub
into
cmpsl
test
scas
add
in
ds
adc
out
inc
out
xor
iret
add
test
dec
pop
inc
push
mov
sub
xor
mov
xchg
mov
cmp
fidivs
out
stc
and
xchg
sub
and
mov
leave
xchg
adc
sub
xor
dec
mov
adc
cmc
cmc
ja
and
cli
pop
adc
sbb
fs
sub
imul
clc
dec
sbb
pop
xor
xor
out
iret
mov
pusha
mov
inc
cmpl
inc
enter
xor
mov
lahf
pop
mov
pusha
inc
and
mov
stos
call
sbb
aam
push
loopne
jmp
xorl
pop
iret
xchg
cld
loop
xlat
push
daa
cmp
fsts
sbb
push
cmpb
sbb
in
dec
sahf
fdivl
mov
push
xchg
add
mov
cli
push
mov
add
push
ljmp
idivl
mov
sub
int3
inc
sub
mov
aas
mov
das
jnp
idivl
add
fsub
scas
or
sti
addr16
or
cmpb
fdivrp
popa
ret
fadd
xchg
mov
sbb
mov
push
xor
pop
dec
dec
je
out
fadds
mov
mov
mov
pop
enter
inc
jns
jo
filds
xchg
stos
and
enter
add
in
inc
loopne
ret
popa
adc
pop
jg
cmp
pop
iret
orl
mov
xchg
lahf
cmpsb
inc
fistpll
jp
lret
test
sbb
jno
in
xchg
mov
fstpt
int3
inc
loope
dec
jge
jno
xchg
xlat
repz
cmp
bound
mov
xor
repnz
jae
clc
jg
push
push
cmc
push
push
jl
call
mov
jecxz
shlb
sbb
xchg
mov
adc
dec
pusha
fs
xchg
pop
sub
sub
orl
push
arpl
sub
inc
or
xchg
cmp
jns
mov
lock
cs
and
nop
xor
push
test
fldt
sub
add
fsubrs
gs
mov
aad
push
lret
sahf
push
sbb
scas
daa
inc
or
xchg
gs
andb
inc
xchg
xchg
mov
enter
xor
and
xor
cltd
and
lods
sbb
cmpb
hlt
sbb
sbb
push
repz
xchg
in
pop
cmp
gs
ret
es
mov
mov
inc
add
jae
cwtl
sub
aas
dec
xchg
lea
mov
cltd
lret
dec
test
xor
push
and
repnz
cwtl
rcr
stc
scas
inc
in
leave
and
and
sarl
adc
movsl
loope
lret
push
repz
push
push
rclb
cmp
mov
in
std
mov
and
sbb
inc
out
dec
inc
xor
ss
mov
dec
or
nop
js
push
inc
mov
sbb
rcrl
push
adc
cmpsb
sahf
lcall
adc
dec
push
popa
ss
cmpsl
jg
sarl
xchg
in
mov
xchg
inc
jne
fmulp
outsb
jae
out
or
jae
outsb
mov
ret
mov
dec
hlt
push
lock
cli
sbb
pop
mov
xor
dec
mov
sub
stos
mov
and
aad
pop
dec
and
pop
adc
sbb
sub
push
xchg
lods
dec
add
repz
leave
mov
add
idivb
addr16
sahf
inc
mov
or
lea
xor
movsl
in
xchg
pop
jmp
mov
add
mov
push
sub
push
push
adc
shrl
sub
push
mov
push
xchg
mov
outsl
push
pop
mov
pushl
mov
xor
sbb
jl
mov
out
cld
pop
mov
lock
fwait
es
or
mov
rclb
push
push
cmp
cli
fcomps
mov
iret
xchg
faddl
and
lret
pop
xchg
std
std
cmp
add
sbb
inc
inc
jne
arpl
inc
push
movsl
xchg
popf
mov
and
and
je
push
ljmp
nopl
pushf
pop
mov
insl
jecxz
daa
mov
shll
cmp
call
test
lcall
popf
inc
fstps
fists
sbb
sbb
push
sbb
aas
jle
lret
lcall
cmp
cmp
pop
test
cmp
or
xlat
inc
clc
sysret
sbb
and
mov
fnstcw
cmpsl
es
mov
test
cmpsl
lods
add
in
dec
and
and
mov
hlt
or
fidivl
jmp
sahf
xor
pop
adc
jle
and
lret
ss
les
jmp
idivb
movsl
dec
popf
out
icebp
jbe
jb
push
mov
in
test
xchg
out
in
ficoml
and
ljmp
xor
mov
stos
push
test
fdivrl
xor
cmp
and
jecxz
adc
cltd
add
in
mov
pop
sbb
dec
xchg
lods
cmp
push
mov
adc
inc
mov
mov
cmp
mov
adc
nop
lret
mov
push
mov
rorl
les
and
pop
sub
add
mov
aad
cmc
and
xchg
adc
mov
bound
lret
imul
adc
scas
sub
inc
xor
in
call
test
insl
mov
rcll
mov
cmp
adc
inc
stos
xchg
ret
mov
cmc
aad
mov
hlt
lcall
mov
add
pop
jo
or
fwait
jecxz
push
shlb
int3
push
cld
stc
jp
insl
inc
sarl
stc
mov
popa
test
bound
lcall
mov
jg
pushl
cmp
cmp
and
scas
inc
pop
and
mov
xchg
movsl
cmp
rolb
inc
aas
cld
lock
pushf
jae
lods
xor
mov
int3
push
adc
mov
add
test
add
pushf
mov
pop
pop
xlat
inc
inc
mov
out
sbb
in
sarb
cmp
mov
pop
jnp
cmp
les
cmc
ds
jns
sbb
enter
in
fimuls
dec
pop
ret
and
inc
idivb
cmpsb
mov
mov
lret
pop
popa
cmp
xchg
stos
push
leave
mov
arpl
mov
pop
jp
rclb
add
xor
mov
cld
push
and
stc
bound
or
and
inc
movsl
mov
sub
fwait
js
cmp
daa
jmp
cmp
cmp
outsb
in
fdivrs
xlat
shl
ja
pop
es
std
cmp
pop
cmpsl
xchg
pop
negb
stos
cltd
dec
sahf
es
jnp
jae
roll
xchg
fldt
jmp
mov
inc
std
cmp
xor
das
dec
push
in
fldl
movl
dec
arpl
jb
sub
mov
pop
shlb
out
stc
xchg
fdivl
sbb
pop
push
inc
add
mov
pop
and
dec
jg
jmp
push
imul
xchg
daa
mov
mov
adc
movb
adc
movsl
xchg
in
scas
ljmp
scas
sub
scas
mov
inc
js
cmp
out
push
jnp
cwtl
in
in
sub
dec
ljmp
mov
jae
jecxz
xchg
sub
clc
lret
push
mov
inc
sbb
push
mov
xchg
sub
jne
fadds
or
in
push
or
les
out
xor
jle
xchg
push
rcrl
out
lcall
mov
sub
fnstenv
mov
sarl
pop
cli
push
lcall
xor
adc
jae
addr16
mov
jle
iret
imul
loopne
in
mov
outsb
in
pop
add
pushf
xor
inc
mov
mov
mov
mov
sub
enter
inc
dec
cltd
xchg
int
insb
js
push
outsl
mov
pop
cmpb
xor
inc
inc
xchg
out
movsl
aas
ficoms
cld
repnz
lret
sbb
pop
out
in
xchg
push
ss
fsubrs
cmp
loope
adc
sarb
pop
dec
in
js
inc
cld
xor
jg
ret
mov
scas
cmpsl
out
mov
lret
out
gs
pop
cmpsl
xchg
mov
outsb
add
xchg
and
loop
mov
jae
or
add
mov
ljmp
sbb
imul
les
sbb
lret
sub
fxch
push
push
sbb
rclb
push
xchg
jg
jmp
testl
jb
cmpsb
xchg
mov
xor
stos
ja
out
je
cmp
dec
sub
adc
fcom
xchg
mov
mov
xchg
fld
dec
xor
int
adcl
int3
and
jle
out
adc
mov
push
mov
movsb
sub
pop
aaa
imul
xchg
dec
sub
imul
adcl
scas
scas
arpl
dec
scas
push
or
sub
shll
stos
ja
mov
inc
add
fs
push
and
dec
sbb
insl
inc
jae
inc
sub
cmc
cmpsl
xchg
or
test
pop
adc
or
push
rcl
adc
pop
scas
sub
mov
repnz
sub
bound
add
popf
cli
xlat
das
imul
testl
pop
movl
push
sbb
roll
sbb
add
mov
lcall
mov
push
inc
je
adc
add
mov
icebp
push
cwtl
shrl
cld
cmp
xchg
aas
xchg
movsl
fwait
aam
stos
das
insb
or
mov
out
or
or
sub
lods
cmp
jb
pop
in
push
je
pextrw
push
cmp
sbb
push
aam
repnz
mov
fisubs
sbb
sbb
pop
mov
pop
loop
fcomps
lcall
test
shll
lods
imul
daa
jle
pop
mov
adc
ljmp
mov
fnstcw
sahf
sbb
pop
inc
inc
pushf
sbb
jmp
xchg
mov
mov
inc
mov
bnd
xor
insb
lret
icebp
jbe
cmp
inc
lea
xchg
insl
jbe
mov
dec
lahf
dec
movsl
pop
lea
pop
and
sahf
nop
xlat
sub
out
xchg
sbbl
gs
data16
mov
sbb
or
add
sbb
loope
jle
mov
xchg
outsl
mov
jmp
jne
into
xchg
imul
mov
repz
out
pop
loop
or
sub
fidivrs
mov
js
imul
mov
pushf
pop
js
pushf
out
push
xchg
push
and
sub
lret
pop
aas
jmp
inc
movsb
sub
leave
and
movsl
sub
push
jno
sbb
and
inc
mov
sbb
jne
jne
jns
jne
xor
add
pop
push
insl
shlb
fcoms
inc
out
dec
lea
pop
imul
push
sahf
add
sbb
ss
outsb
imul
faddl
cmpsl
bound
sti
sti
pop
dec
movsb
movsl
pop
jns
out
mov
push
inc
mov
lds
addr16
and
cs
add
adc
jno
sbb
jl
inc
cmc
loopne
dec
leave
cmp
mov
in
cmpsb
dec
scas
fsts
movsl
push
cmp
fcmovu
mov
xlat
into
insb
jo
iret
push
rclb
push
dec
ds
shll
dec
lea
jno
scas
roll
daa
pop
cmpsb
rcrb
cmp
mov
xor
sbb
pop
mov
cmc
xchg
inc
nopl
inc
fiadds
jecxz
mov
sub
inc
bound
mov
daa
js
les
test
mov
cmp
ja
pop
sti
cmp
cmc
mov
adc
das
aaa
lret
cmpsb
add
faddl
mov
mov
bound
pop
dec
addb
aas
into
sti
and
daa
pop
jne
inc
xchg
bound
mov
stc
sti
cltd
xor
mov
in
vfrczss
jne
jp
jne
sbb
movsl
pushf
cmpsb
pop
daa
imul
dec
sub
mov
add
xchg
push
or
pushw
das
jmp
lock
loope
cmc
call
inc
and
stos
push
adc
jmp
cmpsl
and
cmpsb
push
test
jae
pop
jge
repz
push
dec
add
sub
or
test
mov
hlt
or
dec
or
add
adc
or
sarl
push
bound
movsl
xchg
out
mov
xchg
adc
sub
pop
out
repz
ret
ja
mov
xor
mov
es
fs
pushf
shll
mov
mov
jp
sbb
in
in
mov
mov
adc
dec
and
lods
mov
xor
and
inc
mov
jo
leave
daa
mov
jns
fsubrp
dec
es
jns
xchg
stos
push
or
lcall
jge
mov
push
xchg
inc
mov
jb
pop
andl
jg
add
sarb
sbb
jg
repz
jg
mov
cmp
dec
in
repnz
loop
sahf
lahf
mov
dec
push
repz
mov
dec
xchg
push
aas
sbb
icebp
loop
adc
cmc
gs
sti
loopne
cmp
cld
ds
sub
cmp
jnp
push
insl
ljmp
dec
xchg
xor
jno
xchg
mov
mov
xor
fistps
repz
lcall
sbb
aad
dec
mov
mov
sbb
jae
inc
fwait
mov
rcll
movsl
insb
movsl
or
sbb
and
jp
repz
jnp
fcmovnbe
mov
sub
rolb
stos
add
lcall
rcl
in
fisubs
xlat
pop
sbb
or
pop
mov
pop
pop
mov
and
or
subb
scas
out
lcall
test
in
lcall
jnp
pop
jb
dec
in
sub
adc
repnz
daa
cltd
movsl
jne
iret
pop
out
adc
xchg
xchg
add
mov
xor
mov
leave
div
push
dec
dec
mov
and
pop
cmp
xor
std
mov
xor
jno
pushf
adc
jo
out
rep
test
push
xchg
repnz
and
pop
push
xor
and
test
jne
xor
shll
sbb
pop
add
xor
mov
enter
add
push
out
and
shl
std
xor
dec
and
sbb
loop
sbb
xlat
fstl
mov
fldt
cmp
adc
push
imul
lcall
and
daa
xor
sbb
add
notb
xchg
ficompl
push
cmp
xor
push
negb
mov
es
data16
aas
pushf
push
cli
jmp
mov
adcl
or
jge
cmpsl
hlt
paddsw
mov
mov
flds
push
cmpsb
repz
cmpsb
mov
adc
xlat
insl
xor
loope
mov
roll
test
int
dec
or
stos
setb
lcall
cmp
jnp
mov
inc
push
push
cmc
pushf
stc
adc
jne
xchg
stos
gs
xchg
adc
cmc
pop
test
test
shl
and
adc
fsubs
int3
and
insl
push
pop
mov
enter
push
mov
cli
out
test
mov
or
adc
gs
movsb
xor
cmp
lock
test
aam
jp
push
jp
daa
mov
mov
mov
ret
pop
sbb
fs
mov
and
test
pushf
add
mov
out
pop
in
fisubrl
scas
push
in
jns
xor
stos
push
scas
lret
mov
int
jb
arpl
pop
push
and
mov
jmp
sub
mov
nop
clc
adc
push
ja
loop
lcall
sub
repnz
fstpl
outsb
arpl
loope
sub
repnz
dec
arpl
push
xchg
repnz
mov
fiaddl
jg
imul
out
sub
jmp
and
xlat
inc
push
divb
jns
mov
ret
clc
jecxz
lock
mov
nop
std
mov
mov
mov
mov
int
lcall
or
mov
int
das
and
call
lret
rclb
adc
sarl
inc
sub
adc
in
xor
test
mov
aas
push
dec
test
jbe
adc
lahf
loopne
in
imul
test
lods
mov
ficomps
adc
divl
jo
loope
imul
xor
pop
push
fstpl
sbb
add
popa
and
xor
pusha
dec
sub
lods
add
loope
stos
call
jo
fsubs
add
enter
cwtl
adc
jbe
mov
testb
or
mov
pop
ljmp
cmp
push
or
mov
in
fbstp
popf
ror
out
dec
lods
mov
ja
jbe
jg
sbb
test
fists
xor
loop
dec
mov
mov
sub
sub
fbstp
cmc
adc
fneni(8087
test
popf
andl
scas
pop
fisttps
cmpsb
int
in
jl
xchg
jmp
fsts
stc
loope
sbbl
scas
fcoml
dec
push
adc
push
push
into
rcrl
ficoml
mov
pop
out
add
leave
int
mov
push
scas
loopne
lahf
rolb
faddl
int3
cmp
repz
pop
lods
mov
out
push
add
push
dec
ljmp
mov
int3
mov
cltd
loopne
inc
push
add
lcall
fcoml
or
imul
mov
inc
pushf
popa
xchg
inc
mov
loopne
cmp
xchg
inc
repz
daa
mov
inc
push
dec
or
rclb
sbb
jo
mov
mov
push
adc
mov
in
xor
xchg
test
out
mov
nop
dec
pop
mov
adc
and
ret
shl
fldl
dec
notb
mov
push
ja
mov
pop
repz
xlat
gs
jae
push
ljmp
xchg
in
sbb
test
in
dec
xor
inc
mov
cltd
dec
ds
sbb
fistps
ret
inc
mov
aas
clc
xchg
xlat
jcxz
sbb
das
fsts
fdecstp
ds
or
arpl
jp
out
mov
pop
cmpsb
pop
test
div
fidivl
ljmp
inc
aam
push
cmp
call
mov
scas
out
pop
sub
inc
test
jecxz
sub
int3
mov
fs
test
xchg
xor
movb
mov
xor
test
mov
es
fcmovne
sahf
inc
mov
arpl
or
stc
pushf
mov
in
cmp
cmp
xor
inc
mov
das
pop
cmp
jle
mov
gs
pop
lcall
leave
mov
jns
call
std
dec
cmp
pop
popa
and
cmc
add
rcll
into
inc
or
cmp
push
aam
dec
xchg
fisttps
xchg
idivb
bound
pop
popa
push
scas
sbb
sbb
add
es
and
or
lods
mov
adc
jg
ja
inc
aas
je
dec
mov
test
cmp
or
sub
push
add
xor
mov
in
add
in
push
xor
test
test
sub
shl
mov
inc
rolb
sub
mov
jnp
mov
lahf
mov
addr16
cmp
push
pop
dec
cs
sub
negb
pop
sbb
sbb
out
out
push
xor
inc
push
dec
xchg
mov
mov
repnz
int
mov
xchg
sbb
jno
xchg
jnp
cli
xchg
sub
push
mov
mov
inc
stos
loope
adc
push
aaa
test
push
int
push
add
or
aas
andb
and
mov
out
mov
out
mov
mov
cmp
pop
cmp
mov
hlt
add
hlt
xchg
mul
mov
mov
xchg
insl
dec
ds
sbb
movsb
cli
mov
jbe
push
push
lret
inc
loopne
fwait
sub
pop
sahf
nop
data16
mov
mov
mov
cmp
pop
fisubrs
fistpll
cld
sbb
mov
data16
addr16
aas
sub
in
ret
xor
jno
repz
aad
mov
repz
mov
cld
in
fistl
xor
sub
popf
pushl
inc
fimuls
pop
into
rcr
cmpsl
shr
jbe
pop
dec
clc
cwtl
xor
ret
in
mov
ret
rorb
jbe
add
push
xchg
inc
ret
add
lret
js
sahf
rorb
and
jb
xor
xor
inc
jp
mov
cmp
into
mov
inc
test
ljmp
aaa
jbe
arpl
jmp
jo
lcall
enter
dec
push
pop
scas
sar
rolb
notb
or
repz
into
fidivl
ljmp
mov
movb
gs
pop
sub
inc
jns
dec
cltd
mov
js
arpl
stos
or
or
fst
imul
pop
inc
cmp
shlb
fsubl
and
lea
mov
addr16
test
outsb
int
repnz
subl
sti
enter
mov
xor
pop
cld
imul
or
xor
out
adc
fdivr
jnp
mov
sar
xchg
or
mov
cmp
xchg
xor
dec
adc
or
scas
movsb
bound
fnstsw
dec
push
arpl
imul
or
aas
popf
cmpsl
xor
mov
mov
ret
hlt
imul
jmp
cmc
pop
movsb
fsts
popf
xor
shrl
popa
xchg
jl
sbb
jbe
xlat
scas
insb
repz
sbbb
das
in
idiv
flds
add
int3
cmp
jbe
iret
call
leave
add
pop
xor
xchg
push
pop
pusha
sub
mov
mov
iret
scas
inc
sub
clc
pop
dec
mov
xlat
lds
roll
sbb
std
or
pop
mov
push
sub
sbb
mov
xchg
mov
push
lcall
and
sti
inc
stc
leave
addr16
arpl
adc
add
sub
movsl
loopne
mov
mov
adc
jmp
jmp
out
pop
dec
test
sbb
es
inc
hlt
cld
mov
inc
stos
inc
adc
cmp
out
jb
dec
enter
cmpsb
push
inc
arpl
jg
repz
loope
cmp
xchg
insb
repz
push
lret
xor
push
es
inc
rclb
push
int3
push
cld
dec
std
adc
mov
hlt
fisubrl
and
and
dec
iret
jnp
or
ja
dec
pop
test
lods
mov
cmp
pop
inc
int
mov
out
lret
xor
pop
dec
in
inc
cmp
sub
dec
cmp
sub
mov
orl
repnz
pop
sub
lret
add
push
and
aas
adc
pop
fcmovb
test
in
jno
aas
dec
inc
push
mov
std
shll
xchg
mov
and
jnp
mov
sbb
dec
mov
lcall
and
and
add
mov
bound
test
sarb
pop
inc
xchg
xor
mov
mov
and
push
scas
pop
addl
fcoml
jb
lret
sub
out
jge
scas
cmp
mov
stos
cld
arpl
out
adc
xchg
adc
xchg
lods
xchg
adc
imul
and
xchg
sub
call
add
es
outsl
push
insl
and
cwtl
pop
and
cmp
add
pop
addr16
pop
ficompl
out
xchg
in
and
call
imul
ds
sbb
stos
scas
mov
loope
hlt
jno
push
test
cmp
pop
or
jge
sub
fcomp
sbb
fs
imul
cmp
cmp
loop
mov
xabort
pop
mov
aad
test
nop
and
outsl
dec
xchg
inc
sahf
jb
and
aam
xchg
loop
sbb
out
jg
push
pop
pop
mov
mov
adc
pop
hlt
imul
adc
push
sbb
arpl
lahf
and
xchg
outsb
rclb
leave
lods
and
in
test
xchg
fadd
ljmp
push
push
push
icebp
arpl
icebp
les
mov
mov
ret
xchg
inc
ljmp
outsl
fucomp
pop
jmp
push
pushf
mov
mov
aaa
mov
in
and
cmc
mov
aaa
lahf
bswap
out
clc
xchg
pop
fisubrl
fs
mov
or
sti
xor
xchg
xchg
imul
sub
loopne
sbbb
dec
fsubs
enter
mov
dec
js
lret
cmp
mov
pushl
test
rcll
add
push
mov
push
outsl
jle
push
mov
mov
push
cmc
sti
or
sub
aas
scas
push
jae
mov
pop
adc
mov
sub
pop
test
dec
lea
sub
sbb
lock
cmpsl
add
mov
push
inc
xchg
ret
inc
adc
popa
mov
mov
fwait
pop
push
mov
insb
cmpsb
enter
mov
fcoms
sbb
xor
movsl
jne
mov
fcoml
dec
mov
xor
enter
fisttps
aam
dec
pop
mov
or
jno
mov
cltd
pop
sub
mov
neg
and
push
mov
cmp
pop
fidivrs
sbb
in
fistps
mov
dec
pop
je
pop
sti
xchg
pushf
xor
incb
mov
jp
xchg
iret
xchg
inc
mov
test
mov
dec
into
int
mov
push
xchg
inc
in
in
mov
add
ds
stc
ja
push
sbb
ja
addl
push
mov
fdiv
je
ficoms
dec
jnp
dec
cmp
adc
adc
pop
scas
aad
jnp
adc
sub
and
push
inc
popa
mov
jmp
jo
cmp
cmp
lret
pop
fcmove
jo
push
arpl
cmp
xchg
and
cmp
addb
xchg
fwait
mov
adc
in
je
sub
xchg
hlt
daa
dec
daa
fsubs
sbbl
jl
lret
mov
xchg
inc
lahf
xor
mov
cli
divb
es
dec
pop
and
sbb
push
sub
loope
push
loopne
mov
or
rorl
fsubs
mov
jns
xchg
mov
sub
xchg
mov
das
mov
shlb
jns
insl
inc
mov
out
push
fmull
jmp
cmc
call
repnz
fcomi
xchg
mov
lods
insl
mov
pop
jbe
test
shl
cmp
rorb
cmpsl
insb
outsl
ret
add
cmp
xor
jae
mov
and
adc
jmp
mov
push
ficoms
pop
adc
mov
sahf
adc
sbb
addr16
test
mov
mov
fdivrs
pop
push
pop
xor
push
xchg
or
inc
test
dec
add
fistps
and
or
dec
lods
mov
cmp
cs
mov
repz
cmpsb
cli
mov
jg
mov
mov
test
mov
lea
sahf
jo
inc
cmpsb
clc
mov
negb
cmp
adc
fwait
and
xchg
arpl
mov
call
out
rolb
jg
subl
adc
sub
xchg
adc
setne
cld
jle
xor
mov
adc
ficoml
add
iret
add
ds
or
push
into
int3
fst
and
gs
pop
rorl
dec
cs
or
aaa
cmc
push
dec
push
jbe
cld
push
jge
xchg
and
shlb
push
lods
clc
mov
je
add
sub
jp
xor
jecxz
inc
jnp
mov
stos
fwait
and
mov
jb
cmp
adc
mov
pop
ficoml
dec
jne
cmp
idiv
leave
mov
adc
jae
push
mov
jne
mov
enter
cli
out
lret
call
int3
sbb
pusha
std
out
in
cmp
sub
push
int3
and
in
inc
and
std
out
add
jae
pop
scas
addb
adc
mov
cld
ljmp
jb
jae
jmp
pusha
add
add
into
int3
xchg
xchg
vaddsd
jbe
push
loope
mov
xor
out
ret
test
jbe
mov
jge
mov
jo
jns
loopne
lock
ss
sti
es
ss
std
daa
push
pop
lahf
sbb
movsb
sahf
sti
in
sahf
dec
stos
ror
clc
jl
std
aam
in
test
jmp
cmp
cli
cmp
sub
ret
or
xchg
sub
int3
fcmove
mov
jg
cmpsb
loopne
aaa
xchg
pushf
xor
mov
shll
mov
jge
push
aad
fnstsw
popf
sub
addr16
sbb
rorl
popf
xor
notl
imulb
sub
fstp
add
and
lcall
test
push
test
sti
or
and
into
test
dec
pushf
cmpsl
in
insb
rorb
mov
jmp
push
adc
in
dec
pop
or
dec
sub
leave
push
xchg
pop
xchg
in
dec
adc
and
sub
out
adc
push
lods
dec
add
add
fs
das
jl
test
int
sub
jp
cmp
push
test
test
or
sbb
mov
lock
add
mov
dec
orl
mov
in
jmp
mov
push
fadd
push
mov
subb
jno
jae
fildl
mov
sbb
out
outsl
mov
mov
in
stc
and
and
mov
shll
pop
test
xor
in
jmp
jb
aad
pop
push
push
hlt
mov
lods
xor
pop
cmp
add
aas
mov
movsl
aas
insl
add
lcall
fcom
push
sub
in
test
and
ret
sub
sbb
dec
mov
daa
inc
repnz
mov
push
jp
ss
lods
out
cli
loop
test
cmpsl
mov
das
push
popa
pop
cld
sub
sub
jbe
jle
or
notb
mov
ffreep
movsl
mov
outsb
jge
mov
jno
icebp
dec
dec
or
xor
movsl
mov
bound
repz
push
clc
loop
pop
lret
mov
nop
jg
fsub
jg
insb
idiv
xor
aam
sbb
or
mov
scas
mov
mov
mov
dec
jns
jmp
lods
push
dec
das
xchg
cmp
jle
fistps
mov
call
lock
idivb
hlt
aam
aad
test
in
sti
inc
test
push
jl
jp
insl
inc
sbb
insl
pop
and
popa
mov
subb
loop
mov
mov
cmp
inc
mov
fidivs
inc
stc
cmp
and
sbb
pushf
xchg
fildll
sub
out
sub
xchg
inc
push
lods
sub
jge
mov
inc
jle
mov
ss
in
fsubs
xor
loop
cmpsl
xchg
cltd
and
jle
cmp
cmp
fs
bound
mov
leave
dec
jbe
lret
mov
inc
pop
mov
add
test
ret
movsb
addr16
xor
push
jae
addr16
cmc
repz
xchg
fmull
adc
mov
mov
loopne
popf
out
enter
ds
and
in
fwait
inc
cmp
sahf
sarl
xor
insb
in
or
in
adc
pop
into
xchg
jbe
daa
mov
jb
js
inc
addb
mov
iret
pop
dec
dec
push
lret
fdivs
or
pop
stc
push
adc
push
popf
fnstsw
push
sbb
xchg
loopne
test
dec
aad
push
push
ja
dec
notb
pop
ja
or
xchg
pop
sarb
cmp
pushf
insl
jge
push
and
or
jns
scas
pop
push
xlat
test
or
in
mov
lret
pushf
dec
sub
aam
arpl
loope
subb
xchg
mov
and
xchg
int3
in
mov
imul
fisubrs
or
lds
sbb
scas
sbb
sti
lods
jecxz
jae
xor
pavgw
notl
push
rcll
mov
jne
insb
mov
lods
ljmp
mov
cmp
ret
outsl
cs
mov
cmp
test
jge
jg
fwait
jl
adc
adc
loopne
xor
xchg
xor
add
outsl
mov
jle,pn
cmpsl
test
in
mov
dec
cmp
ficompl
lods
push
test
into
shl
movsb
adc
ljmp
xchg
mov
cltd
mov
lcall
pop
push
insb
movsl
mov
loopne
dec
pop
imul
rorl
and
aas
call
xor
ret
and
ss
xchg
adc
jnp
fidivrl
in
mov
adc
dec
mov
mov
pop
dec
xchg
and
nop
pop
jno
sub
inc
js
add
adc
cmp
stos
cs
das
int3
jo
cmpl
dec
sub
push
popf
js
inc
movl
loope
std
bound
mov
jae
adc
pop
out
rorl
outsl
mov
ret
or
cmpsl
fistps
std
cmp
addr16
out
pop
ret
jle
sbb
lea
call
bound
or
mov
xchg
fdivrs
loopne
mov
sbb
daa
sbb
daa
mov
lock
jl
jb
push
subl
insb
sbb
fcmovbe
loope
inc
or
mov
jae
mov
push
xor
data16
adc
mov
ret
and
ret
popa
push
fistps
xchg
daa
js
inc
mov
add
stc
sar
xor
bnd
push
call
stos
jle
push
lahf
lahf
or
and
sahf
lcall
push
pop
scas
lods
std
lods
sti
aaa
jae
jecxz
ja
lock
mov
jb
add
push
xchg
call
rorl
pop
pop
lea
aam
retw
cmpsl
das
js
nop
hlt
ret
dec
mov
lea
lret
xor
jno
movsl
push
shll
movb
int
movsb
push
loope
shlb
pop
addr16
adc
add
push
push
das
inc
jae
inc
pop
or
xchg
into
out
dec
push
push
adc
and
mov
sub
lcall
lds
cltd
ss
sbb
pop
or
loop
jbe
lret
pop
addb
popa
cmc
push
and
nop
std
fsubl
sbb
add
lahf
testb
call
cmp
leave
in
div
int3
lahf
lock
nop
insl
call
or
addr16
xor
mov
fsub
loopne
push
cmp
sahf
and
outsl
mov
dec
xchg
and
andl
loop
jp
int3
and
jo
dec
push
cmp
xchg
lods
jl
jl
fdivs
int
mov
pop
out
movsb
adc
push
mov
sbb
mov
push
lock
pop
dec
repz
int3
sar
addr16
es
xlat
dec
mov
fstps
inc
mov
fdiv
pop
jl
dec
call
sarb
push
loopne
mov
scas
hlt
xchg
lret
push
sub
lahf
ja
mov
ljmp
xchg
fsubp
jae
sub
or
lock
movsb
or
cmp
lret
sbb
lock
leave
xor
mov
std
jne
je
xor
xchg
and
es
dec
fdiv
and
jno
lahf
clc
inc
mov
je
push
das
cmp
mov
in
add
push
dec
inc
or
ficompl
cli
sub
loop
negb
es
in
dec
dec
fisttpll
repnz
lret
inc
fsubl
pop
shrl
mov
and
adc
mov
cwtl
adc
icebp
cli
cli
lods
dec
notb
xor
daa
inc
enter
cwtl
pop
and
fadds
jne
loop
and
stos
adc
cli
icebp
adc
xchg
test
sbb
icebp
test
dec
or
mov
jb
roll
add
sarb
cwtl
stos
mov
and
mov
push
in
cltd
pop
pushf
mov
daa
call
xor
adc
xchg
aaa
ficoms
adc
push
add
out
cltd
add
and
aaa
das
pushf
and
pop
mov
cmp
fstpl
jle
lea
das
inc
rcrl
test
push
push
insl
adc
sahf
clc
dec
outsb
js
cmp
aam
stos
xor
cmp
loop
and
push
cmc
cwtl
arpl
inc
jmp
mov
jns
mov
jnp
cmp
sbb
cmp
pop
push
push
ds
xlat
mov
jne
xchg
sbb
sbb
loopne
mov
sti
dec
mov
fcmovnu
in
out
xor
dec
push
fnstsw
xor
testl
xchg
movsl
push
mov
sti
in
add
pushf
lock
inc
inc
xchg
mov
mov
dec
inc
std
test
or
push
pop
jp
mov
push
cld
sub
push
pushf
dec
sahf
xor
jle
rcr
lcall
and
add
pop
js
pop
or
std
andl
movsl
sub
xor
loop
cmpsl
ret
xchg
jg
popa
lds
hlt
sub
imul
or
dec
fucomip
adc
pushf
inc
dec
sbb
push
cmp
fs
lahf
mov
cltd
sbb
hlt
icebp
bound
push
cmp
arpl
sti
and
stos
and
test
mov
inc
and
push
cmp
outsl
pusha
cli
nop
orl
and
sarl
xor
repnz
mov
jbe
aam
stc
mov
pop
nop
pop
or
jg
js
sahf
xchg
sti
cmp
xchg
ljmp
insl
sbb
scas
ficompl
xlat
out
call
jl
add
inc
jo
pop
add
sbb
aaa
sbb
test
popl
mov
gs
adc
pushf
add
sbb
sbb
cmc
inc
sbb
movsb
sahf
incl
loop
xchg
xor
mov
test
xor
inc
dec
lret
sub
nop
lret
and
jge
cmpsl
or
jecxz
js
test
insl
mov
sbb
dec
loope
into
ret
ds
jb
sbb
cmp
leave
das
jmp
mov
or
mov
mov
scas
rorb
push
xchg
adc
push
adc
pop
in
cmp
shrb
sbb
sbb
movsb
lahf
sbb
pop
jcxz
test
fmuls
mov
test
xor
push
fldt
inc
sub
lea
jne
dec
mov
mov
pop
pop
cs
stc
sbb
int
shl
add
leave
popa
mov
adc
sub
and
cltd
outsl
int
das
dec
sub
jne
mov
or
pop
dec
lret
cmp
xlat
sarb
or
sub
sbb
jno
mov
add
adc
cmp
icebp
xlat
iret
sbb
add
sbb
mov
mov
sbb
mov
leave
shl
lock
stos
pop
popa
push
pop
insl
mov
xchg
jb
out
sbb
arpl
adc
sub
jo
iret
lret
jne
lods
or
sub
pop
sbb
dec
int
sbb
in
dec
jbe
and
mov
cmp
mov
pop
fidivrl
xchg
cmp
jae
lea
mov
call
lahf
outsl
pushaw
data16
fcoms
mov
jle
push
icebp
call
mov
mov
pop
cwtl
sahf
in
or
jle
scas
scas
cmp
ds
sbb
jp
addr16
data16
xchg
test
add
fs
adc
in
lahf
xor
fnsetpm(287
push
outsl
mov
fildll
imul
mov
push
std
xchg
fcompl
pop
cli
adc
pusha
std
xor
cmovg
xor
loop
sub
and
inc
mov
je,pt
imul
dec
cmpsb
fnstcw
sbb
fbstp
pop
pop
push
cmc
push
or
in
sub
in
fwait
mov
dec
sub
mov
push
js
cld
dec
add
sbb
lea
cld
adc
jl
divl
mov
aad
mov
push
push
roll
fwait
add
mov
push
jle
test
arpl
sbb
sub
packuswb
or
dec
jl
adc
sbb
cmpsl
cli
out
lock
pop
add
jg
loope
imul
dec
out
test
sbb
cltd
sbb
test
cmp
xchg
out
imul
shll
sub
mov
adc
sub
cmp
mov
inc
imul
call
cmp
clc
lods
mov
js
mov
or
cmpsb
test
cmp
lret
orl
in
les
add
cmp
popa
lahf
xor
filds
inc
into
aad
push
out
int3
in
mov
jge
les
lds
dec
push
out
aas
inc
and
add
fcomip
xchg
cld
mov
pop
pop
or
or
jae
cmp
lods
sarb
lock
bound
stos
adc
cmpsl
cmpsb
mov
mov
addb
aaa
div
sti
inc
leave
xchg
mov
lods
popf
jp
jne
cwtl
xor
dec
enter
push
in
jg
aas
push
inc
lret
notb
cmp
pusha
sub
scas
not
daa
push
cmc
aaa
jb
in
mov
int
dec
push
dec
dec
jl
mov
lea
ret
cs
jno
push
outsb
or
xchg
imul
dec
stc
pop
push
nop
out
fs
and
test
and
in
lods
jb
ret
push
adc
add
adc
adc
and
lds
shll
xor
sarl
mov
sub
push
pushf
or
aas
iret
pop
cmc
mov
xchg
lock
dec
arpl
and
in
mov
faddp
into
icebp
imul
cli
push
mov
push
fsubrs
jnp
mov
gs
loopne
outsb
in
and
or
sub
sbb
out
out
in
inc
movsbl
xchg
loopne
or
faddp
pusha
in
jge
out
inc
loopne
shlb
sub
ja
les
or
icebp
cmc
or
nop
pop
mov
lock
xchg
ss
mov
sbb
cwtl
dec
xchg
add
ljmp
and
nop
jne
pusha
jae
int3
mov
dec
mov
arpl
je
popa
push
out
sahf
pop
jns
pop
dec
mov
lcall
cmp
cmp
sub
push
cmpsb
ret
mov
dec
xor
insl
es
sub
outsl
pop
add
test
pop
test
movsl
adc
push
pop
pushf
adc
sti
lods
jle
dec
cmp
enter
push
leave
push
xchg
fcompl
cmpsb
and
push
mov
sbb
andb
aam
pop
pop
cmp
outsl
sahf
outsb
and
repz
clc
int3
shl
outsb
jp
shlb
movsb
adc
fadds
add
jbe
push
jnp
sahf
mov
jo
test
or
gs
add
jecxz
movsl
cmp
rolb
and
jp
es
jno
push
inc
xchg
or
sub
imul
xchg
rcrl
inc
repnz
mov
idivb
jmp
lahf
mov
push
mov
je
rolb
mov
push
ss
push
xlat
push
movl
shr
int
adc
add
adc
xorl
inc
addr16
enter
int3
mov
in
cmp
cli
imul
js
xor
jbe
push
daa
mov
pop
push
mov
and
add
mov
jmp
pop
jmp
cmp
add
xchg
in
out
dec
push
mov
movsl
and
pop
outsl
or
sbb
mov
test
cmc
sub
cmpsb
in
push
mov
and
pop
xor
push
fcoms
mulb
sahf
jge
in
fistpll
sbb
add
in
inc
stc
pop
std
sub
pop
ret
cmp
je
imul
test
jp
add
mov
push
lods
cmc
hlt
es
xchg
int
in
mov
lock
test
push
mov
mov
in
lahf
mov
jo
mov
jae
lods
in
cwtl
fistpl
adc
or
mov
jae
aad
inc
data16
into
fisubrs
clc
out
jmp
xchg
ss
pushf
cmp
inc
or
lret
jl
jle
mov
jno
jle
jg
js
and
insl
mov
dec
pop
xor
xchg
mov
rcll
mov
ds
test
gs
cmpsb
mov
add
gs
hlt
leave
mov
insb
mov
sarb
pop
icebp
lea
clc
dec
fisubs
cltd
pop
push
in
xchg
cmpsb
and
xchg
inc
lds
add
into
adc
push
push
add
or
stos
imul
xor
mov
test
xor
xor
repz
push
sbbl
xchg
pop
push
inc
ret
lods
mov
mov
test
dec
jns
std
into
test
addr16
sbb
lods
cs
inc
push
les
stos
jl
push
lcall
in
hlt
xlat
mov
mov
insb
pop
pop
ficompl
jno
pop
mov
out
mov
aad
and
sbb
loop
mov
test
pop
mov
dec
sbb
leave
jo
dec
dec
dec
sub
pop
xor
mov
fcmovnb
or
repz
aad
scas
pop
popf
cmc
adc
jbe
xchg
inc
iret
mov
push
mov
or
test
int3
scas
in
std
pushl
test
dec
int3
int3
xlat
call
dec
int
pop
inc
adc
rep
add
adc
push
shr
loop
and
jecxz
aad
ljmp
add
xor
push
pop
mov
scas
cltd
mov
ss
xorl
mov
mov
insl
dec
arpl
daa
jmp
fwait
and
lcall
jg
gs
mov
int
je
push
gs
pusha
out
aaa
cmp
mov
jbe
sub
clc
fsubl
push
outsl
call
xchg
lods
fbld
sbb
mov
cld
cwtl
xchg
shr
pop
xor
cmp
into
mov
pop
or
lds
sbb
lock
gs
dec
mov
jle
test
dec
sub
fnstsw
js
mov
jne
mov
std
js
in
xor
push
sahf
xor
mov
mov
icebp
mov
imul
cmp
adc
movsl
sub
and
mov
pop
sbb
jl
xchg
cmc
rorb
das
jae
cmp
nop
pop
pop
or
mov
adc
adc
cmpsl
sbb
add
dec
or
cmpsl
fstpt
adc
data16
sub
int
pop
mov
mov
sub
adc
dec
fmuls
out
cltd
neg
pop
pushf
and
cwtl
mov
test
psrld
std
mov
mov
js
inc
lret
pushf
jo
xor
push
repz
pop
in
ja
dec
dec
mov
into
pop
call
push
mov
pop
rcrl
mov
xor
sub
lcall
arpl
add
in
ret
daa
pop
adc
shlb
dec
jmp
inc
ss
es
mov
jae
out
mov
and
addb
in
mov
add
or
jg
cld
xchg
fwait
pop
dec
xor
push
mov
and
insl
aas
les
fldcw
and
shll
sahf
push
lea
sar
push
je
sub
lret
mov
dec
fwait
or
daa
jp
push
adc
jmp
jp
hlt
mov
dec
push
mov
jnp
es
test
or
cmp
mov
test
clc
mov
ljmp
jb
inc
sub
adc
lods
ret
imul
ljmp
jle
jle
dec
cmp
xchg
lret
cmpsb
mov
in
and
cmc
add
ss
xchg
loopne
test
cld
inc
mov
ds
inc
test
cs
subb
pop
inc
loopne
mul
mov
xorl
test
or
loopne
iret
sub
stos
inc
fld
or
jg
or
jmp
cmpsl
push
les
jno
pop
inc
imul
mov
fs
add
pop
in
mov
scas
dec
mull
jmp
sub
icebp
clc
loope
xchg
sbb
push
ds
jnp
outsb
sti
test
lds
aad
sbb
mov
dec
add
call
lds
xor
cmovno
cmc
sub
test
nop
sbb
ss
xor
push
pop
sahf
xchg
mov
xor
dec
out
adcl
fs
fdivrl
push
repz
and
mov
rcrl
and
mov
bound
mov
pop
push
test
sub
fimuls
mov
stc
mov
movsb
fwait
stc
mov
movsl
fsubs
xchg
push
mov
ficoml
mov
int3
cli
dec
pop
adcl
mov
mov
dec
push
sbb
fisubl
hlt
shrl
loop
icebp
and
orl
insb
outsb
aaa
fadd
test
ret
sub
mov
subl
mov
mov
sbb
xor
xchg
pushf
bound
and
ss
sub
push
loop
cmpsl
mov
push
fwait
mov
lret
lods
mov
jbe
inc
daa
inc
fcmovb
mov
mov
outsl
pop
pop
jmp
xchg
out
hlt
inc
push
in
cmpsl
test
std
cmp
sub
aas
inc
in
jno
jbe
or
lods
jmp
scas
ss
dec
fs
mov
mov
aad
jp
addr16
sbb
pop
sbb
jecxz
repnz
xchg
push
pop
dec
icebp
push
cld
mov
aam
adcl
ret
cltd
mov
jo
repnz
mov
xor
ja
jbe
dec
add
or
sti
loop
mov
push
cmp
lea
push
int3
pop
sub
je
push
shlb
icebp
iret
test
jg
repz
sub
das
add
xor
xor
lock
jbe
lods
outsb
pop
stos
nop
cs
push
lods
out
mov
adc
fs
bnd
dec
ficoml
test
and
lcall
fnsave
fistpll
stc
xor
gs
dec
dec
leave
leave
sub
loope
cld
dec
xchg
jmp
fistps
jle
nop
xchg
cltd
jge
jmp
sub
arpl
and
das
xchg
test
dec
add
jp
fcmovb
adc
scas
stos
cmp
gs
fs
frstor
stos
cmp
shlb
jecxz
dec
je
xor
ja
mov
pop
mov
and
jne
arpl
mov
sub
ficomps
cmp
ret
insl
or
cs
sbb
lcall
push
das
fsubrl
adc
dec
stos
jecxz
arpl
out
mov
loope
push
sbb
sub
inc
adc
and
sub
fisttpll
mov
xchg
sbbb
mov
inc
xchg
aaa
ljmp
je
or
inc
sahf
sub
cltd
fcoml
push
leave
test
aam
push
daa
mov
xor
push
and
cmp
xor
aas
xchg
or
mov
lods
mov
pslld
imulb
jmp
jne
cmp
inc
and
sub
pop
lds
and
into
push
cmp
popf
lcall
divl
push
out
cltd
aas
jge
arpl
mov
dec
mov
cmp
movsb
cmpsl
jno
vmovq
lret
jmp
jno
ss
adc
adc
pop
popfw
std
push
xlat
jb
in
lds
pop
and
or
mov
push
idivb
outsl
mov
adc
cli
mov
pusha
mov
ret
rcll
subb
punpcklwd
cmp
lret
jle
or
jbe
dec
mov
mov
mov
xchg
gs
mov
dec
adc
pop
nop
mov
imul
push
out
call
daa
lock
ret
mov
sub
fidivrl
add
xchg
mov
add
add
sub
repz
mov
mov
mov
mov
sbb
ljmp
mov
fisttpll
fwait
jmp
repz
sbb
into
ljmp
test
xlat
insl
lret
aas
cmp
mov
int3
mov
mov
push
xor
push
aas
mov
mov
xor
adc
shl
gs
add
cwtl
push
xchg
ss
xorb
btc
lret
sub
jecxz
sub
mov
adc
jle
dec
pop
pop
mov
mov
bnd
cltd
lret
imul
pop
xchg
jnp
mov
imul
bound
clc
enter
mov
dec
bound
daa
inc
jl
pop
xorb
mov
aad
shlb
pusha
push
adc
xchg
mov
jne
inc
stos
sbb
lahf
hlt
lret
in
and
jecxz
mov
hlt
pop
pusha
inc
movsb
push
mov
aam
cmp
repnz
mov
xchg
add
push
enter
ret
add
dec
fcmovbe
int3
xor
lahf
shl
sub
mov
into
sub
add
out
shlb
cltd
mov
jae
mov
into
or
faddp
leave
push
jecxz
movb
pop
loop
fstpl
ljmp
xchg
imul
fwait
mov
push
int
sbb
insb
mov
test
mov
adc
mov
inc
xlat
popf
inc
mov
out
fwait
pushf
inc
mov
movsl
mov
mov
nop
jecxz
call
ret
rorl
mov
in
xor
cli
xchg
mov
js
ficoms
inc
pop
xor
imul
xchg
inc
jb
jmp
lods
stc
movsl
lahf
fdivr
test
ja
inc
mov
cmc
add
lret
and
sub
sbbb
mov
push
lods
add
shlb
and
mov
out
mov
cmp
add
mov
jp
fcomip
cltd
cltd
arpl
xor
mov
sub
std
adc
mov
fisttps
cmpsb
inc
frstor
cmp
xchg
shll
pop
inc
call
sub
mov
addr16
imul
dec
xchg
xchg
pop
push
pop
lods
xorb
addb
insb
das
ficompl
or
pop
adc
mov
scas
mov
imul
and
int
in
data16
pop
enter
push
test
repz
mov
in
in
lods
xchg
js
push
jge
mov
outsb
add
les
xchg
mov
and
outsb
repnz
cli
sbb
mov
pop
jb
add
call
popa
int3
ljmp
bnd
or
push
ljmp
test
jge
mov
and
add
cmpsb
push
jge
divb
xchg
shll
int3
mov
lock
and
push
cli
stc
mov
pop
mov
jecxz
cmp
jo
mov
ds
mov
sbb
mov
push
push
mov
ret
xchg
bound
dec
mov
and
mov
push
lret
repz
cmp
stos
mov
fildll
and
sub
push
mov
mov
stos
adc
pop
into
lods
cmp
aam
insb
cld
mov
insl
sbb
pop
outsl
or
icebp
sarb
dec
mov
xchg
cmpsb
mov
outsl
push
xchg
pop
bound
das
cltd
jp
mov
mov
add
out
push
pushw
pop
mov
insb
nop
sbb
fstpl
aad
pop
imul
fdiv
lcall
and
fs
cmp
pop
sahf
and
insl
sbbl
add
das
xor
icebp
in
sbb
xor
fimull
mov
lock
mov
cmp
jno
stos
clc
stos
mov
mov
fldcw
ljmp
test
and
aaa
ret
test
daa
xor
xor
dec
mov
jg
and
xchg
xor
sub
in
out
and
loope
xor
cmp
push
inc
mov
int3
push
dec
jne
sub
in
pop
ja
dec
cmp
ret
cmp
gs
and
out
in
imul
mov
xor
and
jp
push
lahf
outsl
cli
or
aas
fiadds
das
sbb
dec
imul
leave
dec
pop
ja
xor
movsl
cld
mov
movsb
inc
push
pop
ret
arpl
mov
xchg
jmp
cld
and
shll
pop
xchg
sub
mov
sub
shll
test
dec
pusha
lock
out
repz
addr16
mov
jno
shr
cmpsl
sub
push
rorl
adc
sub
push
adc
outsb
std
inc
rcr
push
dec
cmp
into
inc
nop
xchg
and
in
popl
cltd
adc
leave
and
cld
mov
jecxz
fbstp
mov
cld
xlat
int3
stos
push
std
jecxz
adc
in
cmp
xor
push
fistl
jns
mov
inc
push
mov
jne
lahf
mov
dec
and
xchg
inc
jp
or
mov
pop
addr16
xchg
pop
insl
aaa
xor
xor
dec
jecxz
xchg
ja
loop
inc
sub
test
or
sbb
out
outsl
and
mov
stc
inc
testl
enter
adc
xor
sbb
inc
into
mov
negl
add
fisubrs
movsb
cmp
pop
shlb
sti
mov
lods
sbb
push
popf
jmp
fs
rcll
movsl
mov
sti
inc
and
sub
loope
popl
jbe
jae
filds
out
in
in
std
mov
push
testb
rcrl
jo
mov
jecxz
loope
cmp
push
xor
mov
pop
push
mov
test
mov
inc
jmp
sub
cs
add
mov
in
movzwl
jecxz
mov
pop
pop
jl
insb
push
xor
pop
mov
xchg
aad
push
or
cld
js
out
fstps
inc
lahf
sahf
add
inc
cmp
lock
mov
push
jg
jne
xchg
ss
fdiv
or
cltd
sbb
fistpl
aas
xchg
loope
inc
and
imul
jne
call
sbb
sbb
xor
push
push
adc
xchg
xchg
mov
push
mov
inc
xor
push
jl
int3
mov
lret
loopne
out
xor
push
das
push
inc
es
xor
mov
cmpsl
cwtl
jns,pt
cmp
es
shrb
jne
jl
pushf
add
sbb
jmp
dec
push
mull
jecxz
push
xor
mov
pusha
pop
cli
pop
jle
pop
aas
rolb
cmc
add
jb
sbb
data16
imul
in
and
push
jecxz
lret
cltd
xor
mov
adc
mov
mov
add
clc
into
sahf
pop
in
jg
xchg
and
shr
pop
add
mov
adc
jg
test
xchg
adc
fstpl
or
mov
jg
or
mov
int
mov
cltd
cmp
jo
insb
and
popa
cmpsl
cmp
leave
mov
pop
mov
repnz
sub
aam
jg
outsb
pop
mov
test
cmp
shlb
jbe
stos
inc
or
data16
loopne
dec
or
sbb
jne
popa
xchg
and
mov
outsb
popl
inc
push
js
xchg
mov
pusha
push
daa
jne
and
jge
leave
or
aam
sub
cmp
fisttps
stc
cld
mov
rolb
jno
jmp
dec
or
lcall
outsl
mov
push
cmpsb
pusha
add
int
cmp
or
rcrb
jno
adc
inc
sahf
push
sub
lret
ret
cltd
and
xor
or
out
push
mov
push
imul
xchg
pop
dec
dec
push
test
cmp
outsb
push
mov
jg
cmpsl
cmc
inc
push
cmp
cs
lock
sahf
push
bound
push
cmp
ret
xor
and
xchg
testl
ljmp
subb
adc
cmc
and
cmpsb
shl
or
push
out
je
pop
es
mov
insb
jg
ret
scas
leave
int
fists
xchg
xor
ror
lahf
out
data16
repnz
lret
les
sub
mov
xor
lock
mov
cmp
and
rclb
lea
or
in
insl
imul
shl
pop
adc
adc
jno
fnstsw
push
and
push
fistps
cmp
fistpl
mov
int3
cwtl
and
add
aad
mov
frstor
xchg
or
int3
adc
std
stos
out
push
gs
push
push
sub
push
xchg
cmpsb
mov
xorl
andb
loopne
sub
daa
fists
lcall
cwtl
push
in
int
jae
xchg
pop
sub
sarb
mov
push
or
clc
mov
scas
jmp
xchg
mov
mov
lods
outsl
cs
sbb
and
pop
and
pop
fistpll
daa
mov
and
int
pushf
mov
std
test
rclb
add
das
fdivrs
dec
cmpsl
mov
xchg
fs
jle
pop
fadd
mov
outsb
cmp
xor
pop
ja
fcomi
test
mov
xchg
stc
adc
popf
xchg
pop
mov
stos
mov
lahf
repz
cmp
rolb
out
jmp
js
stos
inc
xrelease
test
adc
stos
push
push
xor
xlat
mov
jmp
xchg
jmp
xchg
imul
jno
inc
inc
sub
insl
loop
cmpsb
push
add
sub
sub
lret
and
iret
and
in
mov
push
sahf
push
cmpsl
dec
call
inc
cmpsb
rcrl
add
cmp
sahf
mov
push
ljmp
jge
dec
dec
out
pop
xor
rcrl
mov
insb
icebp
adc
pop
mov
mov
test
imull
out
sbb
aam
pushf
jmp
xor
lahf
sub
mov
daa
das
pop
adc
testl
xchg
je
jp
lods
mov
int3
aas
mov
pop
xorb
fwait
lahf
mov
sbb
loopne
and
test
jb
or
mov
test
adc
mov
mov
fsub
ds
lahf
sbb
pop
fists
xchg
xor
test
inc
jne
mov
movl
jle
cltd
mov
mov
lahf
jnp
xchg
mov
and
jge
shlb
jle
out
faddl
sarb
sbb
cmp
pushf
fistps
js
outsl
adc
scas
inc
xorl
add
addr16
jecxz
outsb
stc
dec
sahf
cltd
sbb
add
pusha
adc
mov
pop
mov
clc
ds
inc
add
lahf
popa
mov
js
loope
cld
mov
addr16
pop
push
inc
mov
mov
sbb
faddp
push
daa
nop
sbb
ret
mulb
and
stos
sbb
xor
add
dec
and
pusha
jmp
mov
push
mov
add
lret
pop
mov
fadds
jae
testb
lea
fcoml
and
mov
sub
sub
stos
ret
cmpsl
sub
adc
in
es
xor
or
jp
mov
adc
leave
outsl
dec
pop
cmc
fistl
popf
sbb
jbe
push
imul
xchg
mov
add
jne
mov
dec
jp
ja
cli
mov
cmp
xchg
pop
push
ret
xchg
scas
xor
imul
dec
pop
add
xor
cmp
psrlw
divl
xchg
mov
ljmp
xchg
mov
sub
pop
into
and
jle
mov
jle
data16
mov
std
lea
subb
xchg
loop
addb
dec
sbb
je
jo
test
mov
adc
push
pop
aad
shrl
mov
fs
shrb
pop
and
icebp
or
mov
std
jle
sub
aam
in
or
add
pushf
loop
xlat
cmp
and
xchg
cli
lock
xor
or
nop
nop
daa
bound
pop
cmp
or
insb
and
add
insb
fsts
pop
push
and
xchg
adc
jne
cmpl
pop
arpl
addr16
adc
es
fmul
mov
cli
subb
pop
lahf
sti
repz
outsb
xchg
pop
outsb
call
sub
ss
popf
int3
inc
add
inc
pop
js
ja
jo
cmpsb
ret
add
jns
push
fildll
and
push
pusha
ljmp
ja
cmpb
stos
push
jl
pusha
xor
cwtl
xchg
xor
jge
mov
or
mov
loope
fldl
jg
jne
jl
ret
xchg
pop
xlat
in
mov
and
aad
push
or
mov
fstp
test
add
mov
out
jl
subl
adc
cmp
jnp
add
sar
int
sbb
in
cmp
dec
push
adc
ret
sarb
loopne
add
out
push
mov
sub
daa
out
mov
xchg
mov
xchg
jns
mov
in
ret
dec
ret
dec
test
xchg
inc
loopne
sub
call
mov
mov
add
jl,pt
xlat
dec
jo
sub
cmp
adc
mov
mov
xor
in
movsb
ret
fnstenv
push
cmp
mov
ja
adc
adc
fmull
jno
jnp
mov
push
or
adc
sub
mov
sbb
jnp
jo
cmp
push
arpl
inc
and
add
xor
icebp
repz
ret
loope
xchg
jg
arpl
loope
pop
hlt
hlt
fdivrs
call
push
mov
and
jnp
push
mov
push
mov
pop
in
inc
push
inc
leave
scas
sub
or
mov
ljmp
or
cs
idivb
rcrl
in
fisttpl
lods
jge
imul
cltd
mov
into
mull
mov
rorl
lods
mov
or
jl
ret
xor
stos
stos
outsb
inc
lret
lahf
ffree
xor
jns
ds
mov
pop
dec
mov
or
arpl
in
sbb
mov
push
test
dec
jle
gs
jno
jo
xchg
add
jne
sbb
orb
jg
mov
add
add
imul
lods
out
cs
mov
sbb
fsubr
in
mov
jg
mov
daa
cmp
fdivrp
addr16
xor
rorb
cmp
xchg
mov
mov
sarb
mov
shl
ljmp
icebp
rorl
push
mov
mov
inc
mov
mov
inc
mov
and
jae
mov
inc
push
add
mov
or
inc
inc
std
jo
scas
repz
mov
addr16
xor
inc
inc
and
inc
dec
int3
mov
mov
ret
cmc
popa
fistl
mov
das
test
out
notl
lods
jmp
out
xor
test
xchg
nop
mov
push
loopne
je
jg
adc
add
jb
and
fidivl
es
mov
aas
dec
clc
dec
movsl
xor
sbb
pop
fld
inc
dec
sub
mov
jmp
jb
aas
int3
jge
movsl
cmp
call
push
and
dec
fstl
mov
adc
dec
mov
cmp
ror
adc
pop
hlt
movsl
ret
jne
test
pushf
xor
out
xchg
push
std
xchg
xchg
stc
inc
lods
jl
cmpsb
jb
fwait
jge
lods
mov
or
bound
cmp
shll
lahf
xchg
fwait
gs
push
pop
add
cmp
in
les
nop
cmc
fistpll
loopne
inc
pop
and
lock
nop
in
and
negb
dec
cmp
es
and
cli
movsl
rorb
push
mov
jge
lret
loopne
mov
or
jno
pop
push
aaa
out
ljmp
inc
cmpsl
arpl
filds
or
cmpsb
mov
sbb
dec
pop
jns
dec
lahf
sub
rcll
add
je
lret
inc
sbb
mov
mov
dec
jmp
pop
cmp
mov
pop
xlat
sahf
sub
cmp
lret
add
bnd
jno
in
std
sbb
das
aaa
lods
xchg
xchg
lret
push
and
pop
xor
jg
xchg
lahf
xlat
aam
fwait
mov
mov
dec
jae
pop
dec
adc
xor
sbb
sbb
sbb
add
mov
call
pop
daa
out
jb
jmp
cs
mov
inc
mov
imul
mov
inc
loope
mov
mov
cmp
push
pop
loope
out
repnz
fdiv
jbe
or
cli
cmp
xchg
push
outsl
inc
or
repnz
sub
stos
push
sub
mov
daa
cmp
push
mov
into
sti
popf
cltd
lcall
xchg
jmp
inc
xlat
in
adc
out
mov
xor
lock
dec
cmp
fucomi
lds
inc
lcall
jne
sahf
push
or
cli
push
mov
or
push
push
push
add
add
in
pop
mov
xchg
aas
out
pop
popf
in
cs
stos
inc
adc
icebp
aas
test
imul
or
lods
cmp
fnstcw
cmc
push
out
imul
and
pop
mov
and
int3
loop
and
sbb
leave
dec
or
lret
lret
lahf
jle
adc
pop
mov
cmp
inc
in
imul
or
sub
stos
xor
cmp
jae
pop
jl
movsl
xchg
ficoms
je
sub
fnstsw
mov
jns
ret
xor
mov
inc
in
dec
aas
xchg
out
out
ljmp
xor
xchg
xchg
in
ss
popa
mov
inc
adc
xchg
fdivrl
cli
in
hlt
pop
xchg
outsb
cwtl
jb
pop
lret
fimull
mov
test
jae
js
jno
mov
sub
push
loop
or
cli
pop
add
call
sti
dec
adc
or
pop
sub
and
dec
push
imull
sbb
mov
int3
rorb
xor
fmuls
int
jae
or
mov
adc
bound
inc
cmp
mov
fxch
xchg
out
adc
dec
ret
mov
adc
cs
dec
pop
pop
push
ret
mov
ljmp
ds
dec
out
icebp
jmp
mov
and
imul
loopne
pop
adc
xor
xchg
xchg
test
xchg
xchg
pop
mov
push
xchg
out
subl
stos
popa
push
xchg
inc
adc
mov
mov
sbb
fistps
lock
ja
sbb
inc
daa
mov
test
jge
in
in
mov
dec
ljmp
mov
xor
stc
mov
fwait
dec
sub
and
in
jecxz
lods
xor
sbb
andl
mov
inc
loop
lods
push
push
jge
xchg
mov
mov
xchg
negl
add
arpl
or
hlt
jne
imul
mov
xor
icebp
add
fisttpl
xchg
pushf
and
adc
pop
ds
push
daa
stos
js
mov
xlat
sbb
scas
popf
pop
mov
sbb
int3
popa
test
inc
lods
xchg
push
dec
mov
in
push
sbb
jg
sbb
mov
fld
pop
test
mov
adc
xlat
push
fldenv
pop
adc
pop
outsl
cmp
outsb
xor
imulb
outsb
call
clc
mov
lds
dec
xor
mov
add
adc
pushl
dec
insb
lods
scas
clc
pop
push
cmp
loope
dec
adc
jg
jmp
call
mov
lcall
or
lcall
pop
adc
lret
push
add
mov
push
hlt
insb
int
hlt
sub
lds
jne
arpl
jo
mov
mov
les
shrl
andl
ret
mov
add
data16
mov
pop
lahf
das
subps
push
test
jns
in
inc
adc
je
out
lods
in
adc
pop
clc
sbb
sub
pop
andl
fcoms
mov
subb
fnsave
xchg
insl
hlt
popf
or
fnstcw
in
push
mov
mov
cmp
fwait
cmp
js
icebp
xchg
dec
and
push
push
sarb
push
mov
movsb
lea
stc
stc
xlat
ds
inc
fadds
sub
sbb
xor
sahf
ret
loope
pop
ds
pop
cmp
adcl
sbb
test
nop
out
push
cmp
mov
incb
orl
ds
ja
in
mov
xor
cmp
stos
push
pop
xchg
sbb
sub
sbb
sti
daa
inc
fwait
and
push
or
mov
mov
inc
aaa
cmp
mov
xchg
inc
sbb
pop
mov
rcll
scas
sbb
enter
sub
fmull
pop
nop
outsl
lods
fdivr
sub
jae
sub
adcb
jno
fisttpl
sub
inc
decb
push
in
js
in
ror
fbld
fwait
inc
cs
in
ffreep
jl
and
negb
js
test
mov
and
loop
inc
and
and
insb
jno
ja
xor
pop
xchg
aad
movsb
arpl
cmpsl
xchg
mov
mov
jg
shrb
test
push
lea
enter
nop
test
or
xor
xchg
testb
add
enter
sbb
xchg
mov
ret
inc
sarl
jp
xor
loope
aas
fistl
jmp
jecxz
sub
aad
cmpb
imull
cmpsb
xlat
lret
notb
out
out
mov
sub
mov
pop
fs
jmp
xor
outsl
mov
pop
hlt
dec
subb
sbb
iret
fldenv
cmp
inc
mov
mov
fistpl
push
rolb
and
sbb
ss
pop
lret
xchg
lahf
sbb
repnz
sub
and
sbb
add
ds
mov
repz
lds
dec
std
mov
dec
cs
jae
sbb
sub
fists
sub
bound
aas
cmp
jno
jle
rcr
jg
mov
lret
mov
jnp
nop
jg
orb
insb
xchg
negl
subps
lret
and
add
mov
in
repz
push
scas
imul
testl
rolb
mov
xchg
mov
loope
out
mov
daa
dec
les
lahf
ja
stc
sti
and
adc
popf
and
xchg
mov
and
loope
ret
in
test
pop
xor
popf
adc
inc
push
dec
jns
cmp
push
mov
leave
xor
cmp
add
out
add
je
rcrb
xor
mov
jge
xor
dec
fwait
sbb
les
data16
mov
mov
stos
lock
inc
rolb
enter
faddl
mov
fstps
or
leave
push
push
xor
imul
mov
adc
pop
dec
jo
adc
dec
dec
push
jb
cmp
int3
repz
fadds
mov
divl
push
out
rcrb
mov
mov
mov
stc
lcall
xlat
mov
sarl
mov
sbb
adc
fnstsw
xchg
xor
stc
ret
insb
aaa
inc
pop
popf
movsb
mov
outsl
cmp
pop
pop
dec
mov
add
rcl
popf
idivl
push
insl
ret
pop
xchg
imul
repnz
imul
pop
mov
and
xor
jns
lcall
jnp
push
add
fstpl
dec
jp
in
lods
adc
outsb
sub
mov
or
and
loopne
dec
pusha
lds
leave
test
fxtract
cmp
lods
ljmp
loop
push
cmp
jge
pop
push
ds
mov
push
test
xor
jns
push
xor
inc
pop
in
aaa
jo,pt
mov
fs
mov
add
cmp
mov
or
es
icebp
mov
push
jmp
jne
addr16
mov
jbe
and
pop
cmp
sahf
jo
arpl
xor
mov
flds
mov
imul
std
cld
sub
jg
ds
adc
xchg
lret
push
adc
lods
aad
xor
fldl
pop
out
cmp
fsubp
cmp
pop
push
inc
icebp
mov
lret
xchg
lcall
push
add
inc
ret
or
sub
test
repz
out
push
jb
adc
jge
mov
movsb
mov
daa
cmc
push
loop
cmpsl
mov
mov
lods
xor
in
sbb
inc
ljmp
xor
pop
ror
ljmp
negb
popf
jge
mov
inc
cmpsl
ficomps
jns
sub
icebp
pushf
and
cmp
insb
movsb
icebp
and
data16
out
xchg
and
in
inc
adc
inc
sub
sub
adc
add
xchg
out
lahf
mov
test
adc
pop
adc
inc
stos
popa
xchg
rorl
sub
fisubrl
mov
push
loope
xchg
jo
in
stos
adcl
ret
xor
or
and
and
add
mov
xchg
mov
and
out
xchg
inc
icebp
sbb
cmp
stos
movsb
mov
sahf
mov
add
aad
dec
jns
pop
add
pop
shrl
mov
ja
ss
inc
ret
adc
arpl
adcl
or
in
mov
lods
adc
movsl
jmp
push
inc
adc
lret
movsl
pop
gs
sbb
push
daa
scas
imul
mov
push
imul
push
and
test
mov
mov
mov
call
std
mov
jp
pop
fstl
fucomip
fs
bound
lcall
mov
xor
out
mov
mov
add
call
pop
fsubrs
inc
in
imul
imul
xchg
mov
test
ja
push
test
cld
sub
ljmp
push
cmpsl
jg
shrl
push
cli
inc
inc
out
cmpsb
pop
dec
push
dec
push
out
pop
stos
ret
jecxz
rorl
pop
push
imul
sub
aas
shl
fcomps
dec
xor
clc
clc
adc
mov
ror
dec
mov
lock
xchg
and
popa
dec
push
pushf
dec
shll
insl
pop
pop
xchg
push
add
or
imul
jb
and
orl
push
idivl
fisubrl
and
xchg
inc
clc
js
loop
ror
scas
addr16
adc
sbb
mov
jb
jmp
jecxz
mov
pop
int
fdivrs
fcomps
dec
rorl
jecxz
sub
dec
xor
jge
mov
add
push
in
popa
in
negb
clc
lea
mov
inc
or
fcmovbe
movsl
scas
mov
adc
je
jg
adcb
loop
pop
xchg
mov
test
mov
sbb
mov
shlb
mov
mov
sahf
jp
cmp
imul
int3
lock
out
mov
cmpsl
and
inc
outsw
jmp
cwtl
xchg
cwtl
out
fstpl
scas
push
cli
push
xchg
mov
xchg
jno
popa
imul
dec
mov
scas
lods
pop
or
xor
xchg
roll
testl
jno
inc
mov
inc
inc
imul
inc
push
mov
jns
xchg
and
sub
cmp
insb
loopne
lret
push
imul
xchg
cmp
xchg
mov
cmp
and
lret
mov
mov
stc
and
pop
dec
call
shlb
or
loope
or
pop
js
jp
push
xchg
in
or
inc
push
and
cmpsb
insb
je
fwait
cld
ds
loope
frstor
inc
pop
and
sti
dec
shrb
mov
int3
add
and
xchg
sub
ja
or
cmp
sub
mov
or
hlt
pop
ret
fbstp
dec
dec
icebp
notb
sbb
test
xor
mov
jno
nop
push
xor
rclb
in
test
test
mov
pop
mov
sbb
hlt
or
icebp
add
inc
xchg
ss
push
cmc
mov
mov
xor
cmc
cld
mov
jno
push
and
adc
mull
inc
rorl
cwtl
pop
add
out
xchg
mov
adc
call
inc
mov
add
mov
jnp
pop
sbb
test
xchg
adc
cli
mov
mov
popa
mov
ds
fdivrl
dec
imul
fwait
push
xchg
insl
popf
scas
jmp
out
imul
in
out
iretw
addr16
cmp
aaa
in
fwait
push
push
xor
jl
jg
fs
jp
shrb
popa
icebp
aas
out
scas
jae
push
sti
cmp
dec
xor
movsb
sbb
push
stc
dec
mov
aas
aas
pop
add
pop
lds
popa
ss
inc
aad
push
popf
sbb
inc
mov
xchg
aas
mov
push
out
xor
cmp
pop
adc
mov
cmpl
sbb
adc
sub
jg
subl
mov
test
loopne
fwait
leave
push
lods
lahf
cmp
pop
sbb
shll
pusha
adc
xchg
hlt
add
fistpl
mov
lock
clc
fcmovbe
mov
sbb
lcall
notl
pusha
loopne
ret
hlt
cli
pushf
in
mov
mov
add
sub
push
lcall
cmpsb
or
inc
repz
test
ficoms
int
in
cli
inc
jmp
test
adc
or
xchg
xrelease
icebp
lcall
test
cmp
push
pop
xchg
pop
sbb
clc
out
leave
les
xchg
add
pop
xor
jge
mov
pushf
cmpsl
and
testb
pop
mov
rcll
aad
inc
rcr
cmp
add
fnsave
imulb
adc
out
pop
xor
ret
stos
loop
mov
leave
fs
xor
into
pop
and
push
sbb
jb
pop
cmc
xor
mov
cltd
imul
sub
sbb
push
das
out
test
stos
xchg
push
sbb
jnp
shll
gs
dec
sub
mov
xchg
outsb
mov
push
mov
jle
sub
mov
test
mov
hlt
sub
stos
insl
data16
jmp
jmp
les
int
fsub
cmp
mov
test
insl
push
sbb
pop
adc
clc
sbb
scas
push
adc
ret
leave
jbe
inc
nop
lahf
arpl
add
cltd
xor
rcrb
stc
jns
cmpl
subb
mov
sarb
iret
mov
add
cld
loop
in
mov
test
and
out
push
gs
comiss
cmpsb
mov
push
sub
and
mov
push
inc
sti
adc
xor
push
sub
outsl
mov
adc
pop
inc
std
insl
mov
mov
jns
rol
jno
std
popf
sarb
pop
cmpsb
push
mov
dec
loopne
dec
and
push
jbe
mov
lea
call
mov
xchg
hlt
in
inc
in
jnp
adc
outsb
mov
mov
iret
inc
iret
fs
test
ds
leave
sbb
scas
loopne
push
roll
mov
clc
fstl
jmp
or
je
stos
add
icebp
insl
mov
roll
adc
pusha
jge
mov
mov
mov
xor
mov
fidivl
mov
cmp
xchg
stos
cmp
xchg
mov
mov
mov
mov
sub
ljmp
addr16
sbb
sbb
pop
xlat
mov
sbb
stos
push
fistpl
es
push
sbb
sub
ds
mov
lock
fsubrl
aaa
into
jmp
or
imul
addr16
and
sub
movsl
gs
xor
push
and
mov
adc
mov
ficoml
push
sbb
hlt
adc
dec
or
cmp
mov
jg
xchg
stos
add
add
sub
push
in
or
mov
pusha
xchg
cmp
add
movsb
add
cmp
inc
or
mov
push
out
push
popa
add
sbb
cmp
adc
mov
and
add
pop
gs
pop
arpl
push
mov
leave
push
pop
clc
repz
shrb
lock
add
outsl
shrb
decb
xchg
cmpsl
pop
test
jecxz
push
sbb
push
mov
dec
popf
pop
movsb
mov
sub
mov
out
pop
jo
pop
lret
sub
ficompl
sahf
inc
stos
out
popf
adc
adc
xchg
xor
sti
test
mov
or
xacquire
sub
mov
enter
xchg
insl
add
adc
add
pop
xor
or
lret
ja
or
xor
fidivs
hlt
mov
xchg
mov
add
mov
fadd
aam
sub
mov
stc
sbb
pushf
faddp
aaa
xchg
leave
sbb
mov
aad
adc
pop
push
cmp
enter
xchg
arpl
lret
aaa
sbb
xchg
jno
dec
out
iret
call
pop
sbb
push
xchg
sbb
inc
push
adc
sbb
dec
imul
pop
pop
orl
into
rorl
and
cli
out
lret
dec
jmp
jno
icebp
das
push
js
aaa
sbb
xor
out
mov
fisubrl
fldt
dec
cmp
push
stc
jecxz
xor
cmp
in
sbb
jnp
lds
push
xor
out
jns
dec
inc
mov
and
dec
or
adc
mov
rcr
fstps
and
daa
cmpsl
scas
or
mov
lret
incl
lahf
loopne
sub
xchg
adc
cmpsl
push
cmp
in
jns
mov
test
lret
jae
add
mov
xchg
xchg
and
pop
push
and
inc
cmpsl
addr16
je
jle
lods
push
aaa
ret
jne
pusha
cmp
sub
out
pushf
jbe
push
pop
lahf
sbb
mov
push
bswap
ja
sbbb
in
fdivs
xor
ss
dec
push
sbb
push
imulb
mov
jno
fmull
movsb
jne
ret
imul
fimuls
mov
dec
inc
aaa
lret
mov
idivb
leave
xchg
pop
mov
lods
pushf
push
fnsave
pop
xchg
rcll
movsl
enter
lds
pop
and
sbb
int3
push
lea
paddsw
jmp
loop
dec
jle
dec
pushf
push
push
push
imul
dec
pop
loopne
lea
lcall
scas
inc
cli
pop
dec
sbb
mov
lcall
std
cmp
dec
mov
jmp
or
aas
mov
out
mov
add
dec
das
push
enter
lods
lea
incl
aaa
push
fdivrl
idivb
dec
jo
inc
mov
fcoml
fs
inc
push
icebp
xor
inc
lods
std
adcl
in
jb
std
lods
icebp
mov
xor
fisubl
jo
dec
sub
add
and
ja
push
jmp
sbb
js
mov
ljmp
inc
clc
xchg
fstl
ds
or
xor
sbb
in
pop
std
adc
out
sub
inc
jmp
sbb
pop
mov
cmpsl
lret
adc
imul
ret
ds
xchg
std
ds
arpl
iret
or
daa
test
cltd
push
push
clc
sub
jmp
inc
mov
repnz
movsl
xor
push
ljmp
idivb
out
push
dec
out
mov
push
popf
clc
sub
clc
xchg
jno
jnp
inc
cmpb
mov
xchg
pop
int3
arpl
mov
sbb
outsl
test
sub
dec
adc
mov
movsl
sub
out
ret
cmpsl
lret
insl
pusha
fnsave
cli
xchg
cmp
pop
pop
cmc
sub
jmp
dec
xchg
mov
dec
sbb
jns
cmovo
xchg
mov
aaa
push
push
in
ret
repnz
pushf
out
mov
mov
xchg
mov
ljmp
or
sti
jecxz
fisubl
mov
rclb
push
stos
xchg
add
push
add
test
es
cmp
cmp
mov
add
mov
negb
jae
pop
clc
aas
loopne
cmp
or
fbld
cmp
dec
loop
push
repz
add
out
xchg
fwait
xchg
xlat
adc
fdiv
ret
iret
arpl
fwait
loopne
fldt
adc
ds
lahf
lret
jecxz
mov
push
pop
mov
popf
add
loope
or
rcpps
sbb
push
and
mov
cltd
xchg
loop
lods
xor
mov
inc
or
fisttps
popa
cs
jmp
outsb
dec
jg
sub
sbb
dec
mov
aaa
push
fs
in
dec
push
dec
outsl
imul
icebp
push
bound
xchg
adc
cld
push
xchg
jmp
adc
adc
cltd
jp
movsl
decb
cltd
mov
sub
adc
mov
insl
jp
jge
lock
and
push
mov
movsb
bound
sahf
test
adc
das
or
sub
add
xor
mov
cmp
lcall
cmpsl
pop
pop
inc
mov
pop
ss
outsb
loope
rorl
dec
jecxz
bound
sub
add
xchg
xchg
jae
aaa
test
pop
xchg
adc
cmc
push
je
cli
jge
mov
out
int3
xchg
popf
dec
pusha
dec
dec
ljmp
add
inc
test
clc
xor
jae
clc
ret
sbb
stos
int
cmpl
bound
lods
test
ljmp
jmp
test
dec
inc
adc
inc
aas
fdivrs
inc
in
inc
data16
xor
ds
rorb
adc
shll
test
hlt
jp
pop
mov
jo
das
pop
test
cltd
mov
xor
xchg
jp
movsb
jle
fisttpll
cltd
cli
das
and
inc
cmp
fwait
insb
jne
add
mov
mov
jl
leave
lods
roll
gs
fildll
pusha
mov
out
jle
sbb
sahf
inc
in
popf
das
and
pusha
fwait
test
out
sti
pop
adcl
push
shlb
sub
jmp
mov
pop
or
dec
test
sub
std
jge
pop
lods
aad
sub
stc
data16
dec
cld
fs
in
adc
enter
jo
aad
fstl
int3
mov
cmp
jbe
xlat
test
sbb
mov
clc
scas
dec
int3
mov
fisubrl
sarl
dec
mov
mov
out
ja
cmp
dec
push
test
pop
cmpsl
mov
sbb
xor
xor
repnz
xchg
jge
jmp
int3
push
mov
sbb
in
mov
lock
lods
mov
push
daa
sbb
cmp
sub
add
dec
dec
js
mov
cmp
xchg
fs
add
cmp
xchg
cmp
sbb
jge
sti
dec
xor
sub
popa
loopne
js
mov
xchg
xchg
rcr
dec
xor
gs
insl
cs
cwtl
into
and
push
repnz
xor
push
hlt
inc
dec
jp
test
and
outsb
out
pop
mov
push
mov
mov
mov
mov
pop
fildll
bound
ficompl
imul
push
add
mov
mov
and
jne
mov
fs
adc
pusha
aas
xor
icebp
lcall
xor
adc
cmp
pop
cmp
dec
test
jecxz
mov
test
inc
and
lods
mov
dec
ss
add
mov
movsl
add
sbb
test
add
es
leave
push
sbb
cmp
test
outsb
push
es
pop
dec
inc
xlat
xchg
xchg
scas
imul
mov
add
pop
aaa
cli
jno
sub
jecxz
lahf
and
pusha
adc
ja
jp
gs
inc
sti
push
js
pop
adc
fs
jge
jae
or
in
jno
mov
jg
loope
test
cmc
aam
sbbl
or
rcll
cltd
mov
pop
xlat
xlat
sub
icebp
test
lret
push
sub
adc
ss
rcr
sub
cmp
jle
push
iret
mov
mov
and
addr16
mov
pop
sarb
aas
inc
das
sub
sbb
pop
jb
or
add
dec
mov
out
mov
sub
xchg
adc
ja
hlt
xchg
out
cmc
sub
std
cs
jle
push
mov
mov
pusha
int
scas
outsl
iret
popf
mov
inc
clc
fbstp
push
jae
sub
pop
pop
and
sahf
cmp
std
sub
jmp
idivb
sbbb
pop
mov
mov
fbld
xor
or
orb
inc
jno
in
test
and
loope
sti
addl
sub
and
lods
aad
jo
addr16
sub
sbb
push
imul
inc
clc
push
test
adc
test
dec
bnd
popa
gs
out
xor
inc
or
or
shrl
jb
mov
or
das
mov
cmp
dec
fimuls
sbb
imulb
das
push
jae
mov
adc
xchg
loope
lret
mov
stc
aaa
test
push
icebp
mov
cmc
jns
mov
xchg
add
mov
testb
pop
xchg
int
test
jns
push
xchg
aas
leave
aaa
xchg
cld
mov
mov
mov
test
sahf
inc
nop
pop
lods
fwait
pop
lods
daa
addr16
mov
push
push
ret
sub
insl
xor
fsubl
hlt
mov
or
lahf
packsswb
and
aaa
cwtl
fwait
jecxz
xchg
mov
aad
lds
inc
sbb
inc
bnd
lcall
push
dec
add
shl
inc
fbld
add
shl
pusha
fistpl
dec
xor
insl
ds
dec
lahf
loopne
and
mov
jmp
into
sub
pusha
sub
or
mov
xor
or
mov
xchg
push
out
daa
sbb
dec
jecxz
lret
cwtl
jg
mov
jno
ljmp
dec
popf
add
ret
cld
movsl
cmc
pop
xor
add
ljmp
dec
sub
loopne
sti
mov
fcoms
lcall
mov
fdivl
xor
add
add
lret
jns
int
repnz
xor
lcall
sub
mov
inc
adc
xor
mov
jp
sbb
xchg
aam
fcomps
pop
test
jle
cli
cmp
sub
cld
scas
in
jecxz
mov
fidivl
rclb
lret
fnstsw
sbbl
sbb
adc
pop
test
dec
mov
lods
cld
add
lret
icebp
es
fidivl
mov
push
jo
jge
jo
inc
out
push
or
scas
scas
sub
cmpsl
jns
mov
fisubs
mov
subb
or
xor
mov
mov
imul
or
or
in
sbb
out
push
cmp
mov
call
dec
test
sbb
or
psrlq
lret
movb
cmp
jo
cli
into
ljmp
imul
sub
ljmp
jo
jo
jnp
dec
popf
mov
loop
pop
insb
jle
pop
fsubs
sub
data16
jnp
fsubs
outsb
mov
dec
xor
js
call
addr16
xchg
sbb
aaa
sub
dec
and
jns
rorl
pusha
or
push
scas
xchg
popa
sub
cmp
popf
mov
or
test
sbb
sahf
inc
into
add
or
lret
mov
std
sub
std
push
xchg
mov
inc
testb
test
inc
mov
imul
pop
popa
add
lods
inc
lret
idiv
mov
lahf
or
pop
addr16
stos
pop
ret
ja
pushf
sub
mov
fldcw
xchg
jecxz
scas
cmc
mov
sbb
outsl
cmp
test
jmp
andb
jbe
fsub
lret
mov
adc
pop
push
in
or
ds
enter
cmp
stos
sarl
fs
push
int3
sub
cmp
fwait
daa
stos
stos
fwait
mov
jmp
lock
add
addb
stc
es
call
sbb
and
cmc
sub
jbe
push
outsb
outsb
sub
aad
xchg
add
and
jl
shlb
or
enter
stos
fmuls
or
jge
add
test
aad
jle
sub
cmovno
out
pushf
inc
jmp
mov
push
rcll
das
imul
push
int
xchg
loopne
push
mov
xor
lcall
stos
jns
lods
sub
mov
movsl
sbb
dec
subl
sbb
mov
mov
fsubs
add
js
jns
add
push
lret
jg
inc
pusha
cld
sbb
xor
xchg
or
cmpsb
mov
fdivl
fidivrl
repz
dec
mov
and
inc
jecxz
es
sar
inc
out
jg
xchg
pop
mov
or
cmp
dec
xchg
call
cmp
gs
ficoml
xor
cwtl
jns
aam
push
and
sahf
mov
daa
es
es
cmpsl
sbbb
cmpsb
in
jge
mov
mov
gs
push
dec
mov
movsb
popa
xchg
shl
shlb
fisttpll
stos
test
icebp
cs
sub
cmp
dec
add
mov
je
mov
dec
notl
sti
daa
shll
shll
fs
inc
mov
pop
imul
pop
xor
arpl
push
popf
shlb
cltd
cld
arpl
sub
and
push
push
shr
repz
xchg
and
sar
insl
cmp
scas
dec
adc
jb
inc
fs
pop
xchg
sti
mov
into
incl
push
fucomi
adc
das
inc
repz
loope
jp
mov
arpl
xor
dec
fwait
out
or
pop
add
stos
cmp
enter
jbe
shl
iret
daa
clc
fcompl
shrl
push
addr16
dec
jg
push
test
cmp
icebp
cmpsb
aaa
gs
add
add
mov
test
sub
jl
bound
sub
mov
mov
fildll
in
sbb
cli
dec
xor
jnp
mov
testb
mov
sahf
cmpsb
or
pop
push
je
das
dec
cmp
js
inc
sub
clc
fldcw
mov
sub
push
cmpsl
imul
mov
xchg
push
xor
xchg
repnz
jecxz
sub
dec
xlat
mov
sbb
inc
cmp
jmp
iret
jnp
aam
js
sbb
ljmp
cmp
xchg
ret
cmp
cltd
outsl
lods
ljmp
inc
and
or
int3
fwait
cs
into
stos
jne
mov
cld
js
xor
mov
dec
pop
int
aaa
fiadds
clc
xor
lods
es
pop
in
cmpsb
xchg
imul
xlat
push
cmpsl
insl
inc
int3
cwtl
inc
rolb
mov
and
xchg
cmpsb
rclb
or
stos
inc
sbb
inc
rcrb
pushf
in
pop
inc
dec
dec
inc
xchg
sbb
jg
inc
out
and
sbb
ljmp
mov
pushl
nop
movsl
inc
or
cmpsl
loop
jecxz
or
out
popf
ss
adc
cli
fwait
mov
fwait
jbe
cmp
ds
inc
sbb
ljmp
dec
push
lahf
mov
mov
inc
push
mov
out
into
jae
jno
mov
dec
movsl
sysret
mov
fwait
xchg
testl
gs
int
xchg
and
push
jb
jae
jbe
jne
cmp
pusha
adc
add
jns
mov
rorb
aam
out
ja
popf
cmp
ljmp
cmpsb
popf
aas
cmc
cmp
and
add
inc
add
shrl
je
xchg
jnp
mov
mov
pop
mov
arpl
insb
adc
sahf
and
mov
aad
dec
fldl
push
add
adcl
cmp
sbb
out
sbb
rorl
mov
and
aas
push
push
jbe
lds
cltd
jle
xlat
or
sbb
scas
adcl
popa
test
sbb
lretw
xchg
and
mov
inc
pmulhw
push
lahf
jns
mov
mov
cmp
aam
and
and
mov
rolb
rorl
ljmp
aaa
dec
movsl
dec
in
frstor
enter
in
stos
scas
xchg
icebp
daa
nop
inc
rolb
sub
jg
inc
xchg
xor
js
xor
cld
lahf
cmp
testl
mov
ja
test
push
mov
adc
sub
and
xor
inc
lods
dec
push
jmp
fcmovne
or
push
cmpsb
out
push
push
mov
test
xor
mov
popa
sbb
negb
mov
mov
outsb
jl
outsl
adc
push
aaa
pop
shlb
mov
xchg
pop
dec
outsl
in
aad
jbe
dec
iret
push
jae,pt
mov
movsl
ljmp
or
push
wrmsr
dec
ss
mov
sub
jo
lret
pop
sarl
xchg
jecxz
adc
add
xor
out
mov
lret
lds
out
adc
cwtl
jl
jge
ret
decl
std
sarb
xchg
jge,pn
inc
mov
push
das
cmpsb
fs
mov
movsb
xor
stc
mov
mov
aas
iret
into
lock
jb
cmc
pop
cltd
push
xchg
popf
ss
mov
outsb
pop
and
icebp
cmp
lds
bound
mov
xor
mov
or
scas
push
or
mov
or
mov
stos
push
je
push
xchg
and
and
idivl
dec
faddl
std
mov
adc
sub
scas
mov
jg
in
loope
fisubrl
outsb
push
mov
and
cmp
xor
push
pop
push
jmp
add
pop
push
xchg
jmp
dec
adc
mov
xchg
push
xchg
insb
in
mov
push
sbb
fldcw
rolb
das
mov
in
ret
sbb
mov
push
xchg
push
or
fsubrl
pop
mov
inc
jl
jge
test
mov
into
cltd
push
addr16
adc
bound
lret
jg
ds
dec
jno
into
jbe
push
or
dec
jae
adc
dec
lea
iret
test
jno
fucom
inc
jne
into
mov
or
xor
xor
insb
add
pop
push
xor
lahf
in
icebp
lods
xchg
cmp
loope
icebp
and
nop
js
fcoml
pop
sbb
mov
or
pop
cld
in
cmp
jbe
fucomp
jge
or
push
mov
sahf
mov
xor
aas
inc
divb
rclb
push
outsb
mov
fwait
ss
ljmp
xor
popf
mov
and
mov
push
sbbl
mov
sbb
jnp
cli
into
pop
cmc
es
add
push
mov
pop
subl
pop
sbb
mov
call
popa
jp
outsl
lods
shrb
js
dec
incl
or
push
push
add
xchg
mov
mov
aam
jo
out
insl
mov
loop
sbb
pop
push
fcoml
or
nop
sbb
ja
mov
pop
and
pop
and
pop
ret
fildl
imul
adc
cmpsl
or
cmp
sub
xchg
push
scas
imul
mov
adc
into
call
mov
lods
and
hlt
sub
jno
insb
adc
pop
mov
xor
std
cmc
jns
testb
adc
jmp
ss
sbb
iret
xchg
sbb
pusha
mov
mov
xchg
jnp
push
clc
pop
stos
mov
push
addr16
jo
push
mov
rcll
in
cmp
xchg
or
mov
fdivrl
inc
adc
into
jns
dec
lods
xchg
aas
pop
fisttps
scas
shlb
std
add
xchg
xor
push
adc
mov
gs
mov
pop
rorb
mov
gs
enter
pop
and
inc
xchg
sbb
cld
lock
ljmp
hlt
lea
mov
jge
pop
sub
push
cmpsl
shlb
adc
stos
negb
lret
lock
das
cmpsb
lods
ret
sahf
dec
xchg
jle
in
es
mov
clc
adc
jp
imulb
dec
inc
ror
pop
adc
jae
cmp
leave
aas
pop
inc
dec
and
mov
mulb
jecxz
flds
xor
pushf
aas
insb
adc
xchg
xor
or
loop
cmc
loop
jge
adc
cmp
push
aam
add
or
das
cmp
std
cwtl
xchg
mov
fdivl
mov
das
sbb
jl
and
lcall
xchg
add
push
jge
iret
jne
adc
inc
and
sbb
dec
lahf
dec
pushf
shlb
les
sbb
aad
or
enter
dec
cmp
jno
cmp
movsb
xchg
sub
aad
cmc
dec
jo
adc
mov
popa
mov
push
dec
jg
das
popa
orl
or
dec
adc
clc
push
shlb
mov
popf
mov
clc
jmp
add
inc
inc
ja
stos
xor
sbb
mov
and
loope
imul
ficoms
adc
rol
or
xor
jmp
xchg
scas
dec
fs
sbb
dec
push
sub
jge
or
lret
cmp
xor
jmp
in
into
fcoml
roll
insl
faddl
cld
dec
int3
aam
fdivrl
sti
jno
sbb
fsubrs
test
inc
inc
sub
mov
mov
push
sarb
mov
jl
into
cwtl
cmp
jle
jae
movsl
pop
mov
mov
fidivs
test
mov
mov
ss
lds
aas
xor
jne
out
adc
xorl
fs
cli
fdivrl
mov
into
jae
int3
jge
lret
fcoms
jl
or
pop
scas
mov
mov
cmp
cmp
jle
mul
pop
out
ret
hlt
repnz
scas
mov
ljmp
push
movsl
sahf
movsl
xchg
arpl
cmpsl
stc
inc
push
test
mov
xlat
xchg
in
sub
jle
xor
sbb
jmp
data16
ja
sbb
adc
mov
sbbl
call
bound
inc
sbb
sub
cmp
xor
xchg
cli
sub
jns
sbb
mov
dec
and
inc
mov
ret
cmp
jmp
rorl
and
in
sbb
mov
sbb
sub
push
and
mov
cmp
jge
repz
mov
ret
loopne
jg
mov
push
js
mov
pop
frstor
stos
dec
sbb
outsb
add
pop
jg
ss
test
adc
mov
out
ja
cli
lcall
mov
and
mov
mov
out
adc
pop
mov
shll
orb
cmp
dec
sub
pop
not
xchg
inc
sub
or
add
xor
cmp
mov
dec
movsb
mov
jmp
lea
ss
inc
test
das
mov
into
jle
xor
aad
jb
mov
jnp
fldenv
mov
fimuls
sbb
popa
jnp
aad
mov
test
jge
scas
lahf
xchg
push
xor
rcr
dec
lret
bsr
sub
rorl
mov
cs
sub
lret
hlt
hlt
mov
sbb
ja
nop
xor
push
cmp
imul
mov
cmp
cmp
in
loope
inc
pop
add
mov
out
in
loopne
fcoms
fs
jns
hlt
cmp
daa
call
sar
rcl
rcrl
loope
and
shrb
repz
inc
fsts
sti
pop
push
mov
push
add
mov
stc
inc
mov
mov
lret
cmpsl
jmp
fiaddl
add
bnd
pushl
cwtl
test
push
lea
sbb
jg
or
in
adc
cmc
cmp
cli
sbb
int
in
dec
dec
aam
testl
inc
jg
std
mov
xchg
out
lahf
fwait
cmp
jns
pushf
push
hlt
mov
scas
jne
or
ret
mov
daa
sarb
mov
inc
fcoms
loope
fwait
dec
push
cmpsb
lds
aas
sub
or
dec
sub
mov
sub
dec
xchg
leave
and
in
negl
pop
mov
pushf
nop
sub
xor
sbb
cmp
pop
or
stos
xchg
fistps
lret
mov
into
aas
jmp
data16
push
or
ret
imul
jecxz
aam
cltd
sub
int3
push
repz
adcl
ds
je
pop
adc
dec
add
in
push
repnz
scas
cmpsl
cmp
movsb
xchg
or
in
stos
rcrb
lock
je
cmc
out
jmp
les
inc
fs
fs
rorl
outsl
mov
hlt
pop
into
mov
es
mov
lds
xchg
repz
js
and
rclb
push
adc
das
dec
sub
icebp
popa
in
dec
mov
jp
movsb
jne
jnp
hlt
insb
mov
fimull
xchg
jmp
insb
outsl
push
cmp
fbld
dec
push
aaa
stos
int3
scas
sbb
push
jne
fidivs
mov
xor
aam
mov
xchg
inc
data16
ja
fs
adc
cmc
in
xchg
inc
dec
sub
out
sub
inc
and
xchg
das
or
pop
xchg
call
aas
or
dec
rorl
scas
mov
ret
push
not
dec
xor
loop
clc
in
in
cltd
insl
pop
out
xor
adc
out
imul
inc
mov
push
jne
sub
movsl
sbb
shlb
int
sahf
cmpsb
mov
push
sarl
dec
pop
push
fldcw
stos
add
xchg
insl
test
aaa
inc
cmp
rolb
jno
into
js
add
push
into
lods
es
push
jecxz
inc
xchg
addr16
into
loop
nop
fisubl
pop
fiaddl
enter
xchg
popf
insl
and
in
push
rorl
subb
push
inc
pop
aad
fwait
mov
popa
pop
adc
cmp
sbb
dec
or
outsb
iret
push
pop
xchg
xchg
push
xor
rorl
inc
popa
push
adcb
dec
mov
fstl
fstps
sbb
xchg
cmp
inc
into
clc
js
imul
dec
push
xchg
rorl
fwait
lahf
sbb
je
pusha
aaa
xor
test
test
jecxz
xor
pop
mov
and
pushf
mov
pushf
pop
jmp
in
push
xor
mov
fisubrl
scas
pop
inc
sub
mov
jae
test
mov
js
aad
mov
addr16
push
mov
jge
cwtl
jno
push
and
je
cs
xor
mov
filds
ret
add
gs
sbb
cld
cmp
or
test
loopne
cld
icebp
add
sub
sub
sub
push
or
jbe
mov
xor
arpl
pop
xor
aaa
out
es
cwtl
mov
lea
lcall
push
xor
shrl
test
inc
clc
inc
adc
pop
cmp
xor
imul
adc
xor
xchg
and
sub
or
aad
imul
add
icebp
orl
and
aam
mov
sbb
icebp
dec
inc
pop
imul
stc
sbb
add
add
pop
push
adc
mov
ja
arpl
dec
pop
addl
shrl
push
mov
clts
pop
je
inc
and
pop
je
mov
out
lret
lcall
mov
or
jg
cld
out
setb
and
int3
fisubrs
jp
sbb
fmul
jmp
rcr
shll
test
xchg
mov
xchg
inc
push
test
mov
xlat
jl
jle
lcall
ror
mov
mov
push
mov
loop
push
out
cwtl
stos
xchg
repz
ret
icebp
js
or
xchg
dec
jnp
dec
jl
lds
mov
jbe
cmp
testb
out
xchg
xlat
and
sbb
lea
lahf
sbb
cmp
cmp
call
imul
jo
lret
fisttps
jns
jp
leave
fistpl
shlb
inc
mov
lock
adc
jae
call
scas
insl
sbb
xchg
sub
popf
repnz
ss
mov
mov
lret
mov
jge
xor
call
or
test
lcall
addr16
pop
es
jp
imul
rcrl
mov
sbb
push
adc
adc
cmp
repz
negl
adc
out
ret
jno
xchg
das
ret
lods
sub
fs
pop
nop
pop
mov
cld
cmp
push
test
pop
int3
sti
cltd
inc
lret
icebp
or
push
orl
adc
addr16
xor
or
adc
mov
or
pop
pop
mov
std
xor
sub
pop
and
aaa
mov
ficoml
and
mov
jl
ret
movsb
inc
lret
add
cmp
pop
fdiv
mov
mov
sub
lea
or
rcr
jle
and
fnstenv
arpl
lret
mov
cmc
dec
sbb
je
mov
jns
mov
lret
movntq
fildl
inc
dec
add
push
imul
or
mov
iret
out
ret
mov
scas
inc
mov
pop
das
dec
fs
je
jnp
pop
mov
mov
iret
mov
aas
jl
or
cmovp
adc
in
fildll
rcrb
inc
enter
cmp
fadds
cmpsl
lcall
mov
rclb
pushf
iret
rcrl
jb
push
jno
adc
lcall
clc
adc
test
in
mov
lret
jne
sbb
and
and
jae
shrl
out
mov
mov
jae
adc
cmp
xchg
jge
mov
cmpsb
or
mov
mov
mov
mov
cs
pop
js
add
or
dec
test
xor
mov
scas
mov
std
stos
xchg
int3
lods
cmp
cmp
popa
rorb
lret
scas
outsb
inc
sti
in
not
flds
xchg
mov
ret
mov
test
mov
les
test
pop
jno
dec
test
jp
adc
inc
icebp
jo
xchg
add
jne
adc
leave
shl
cmc
or
add
pop
xor
adcb
sub
test
dec
pop
pop
jle
aam
stos
ret
rolb
jmp
xchg
es
pushf
pop
lret
ror
adc
pop
xchg
xchg
cmp
sbb
insb
adc
loopne
push
cltd
sub
mov
cmpsb
or
fwait
out
mov
adc
and
mov
mov
iret
dec
pushf
jbe
icebp
pop
jecxz
pop
xchg
pmulhuw
cwtl
pushf
mov
lcall
xchg
push
iret
pop
inc
sbb
ljmp
jne
fsubrl
imul
lret
test
pop
lea
test
mov
lcall
mov
sbb
sarb
bound
mov
aas
jo
fstpl
inc
sti
adc
cmp
test
test
sub
mov
out
xor
int
pop
clc
jbe
rorl
std
lock
movl
xor
scas
mov
push
push
scas
enter
mov
or
inc
push
pusha
and
push
xor
mulb
cltd
adc
sub
clc
in
pop
mov
and
ja
adc
dec
mov
sub
sti
add
inc
mov
push
test
mov
into
mov
and
aad
adc
inc
test
pop
jne
icebp
addb
jns
repz
add
popf
dec
test
push
push
xor
dec
scas
int
ljmp
push
or
loop
add
adc
call
xor
pop
jo
push
mov
nop
stc
loop
pop
sub
pop
or
clc
ja
dec
shlb
mov
pop
mov
lods
push
push
fwait
adc
jle
dec
lahf
fwait
cmp
cmpb
sahf
mov
push
mov
cmp
mov
mov
pop
xchg
push
mov
pop
push
push
fs
pop
add
andl
push
mov
jno
push
xchg
iret
and
movsl
lgs
cli
stos
jnp
push
cmpsl
sarl
leave
dec
xor
ret
xor
popf
lahf
cmp
push
xor
jge
jecxz
mov
ret
imul
mov
jecxz
mov
out
mov
or
cmp
adc
jmp
sbb
sub
cmp
lahf
iret
cmpsl
xchg
mov
jne
push
dec
jbe
xor
xlat
out
jg
pop
into
inc
leave
rcl
xchg
add
lea
xchg
jb
cltd
dec
pop
xchg
jbe
testl
out
sahf
iret
sub
sub
xor
inc
mov
sbb
or
mov
or
ror
rcll
daa
insl
cwtl
test
dec
pusha
fwait
fs
aam
pop
dec
sub
jae
insl
xor
aad
mov
and
sbb
cltd
lods
dec
xor
sub
mov
icebp
push
enter
mov
sbb
fsubrp
in
sbb
mov
and
nop
adc
push
or
adc
add
and
scas
popf
jl
and
insb
rclb
cmp
hlt
cltd
pop
repnz
mov
xor
dec
scas
pop
pusha
sbb
xchg
cmpsb
jbe
aaa
in
xchg
xchg
mov
mov
sbb
scas
pop
insb
push
dec
orl
fsubrs
push
xor
je
dec
test
mov
xor
insb
xchg
aad
sti
push
mov
pop
andb
cmpsl
sti
les
sahf
ret
add
fdiv
out
repnz
pop
jns
gs
push
test
jl
subl
clc
imul
push
sbb
pop
subl
daa
add
add
in
sub
test
aad
cmp
mov
xlat
sub
mov
test
xchg
ja,pn
ds
jmp
jg
les
xlat
sub
lahf
sub
mov
repz
mov
xchg
ret
lret
xchg
sbb
and
fs
mov
mov
jns
jo
mov
xchg
push
sbb
out
rcl
movsl
stc
jge
sub
std
lret
insb
add
popa
fmul
mov
popa
and
daa
pop
sti
out
jmp
lock
test
in
je
lea
ret
dec
pop
sarl
add
pop
mov
rcl
xlat
xor
add
je
into
inc
clc
out
out
fwait
clc
lret
lahf
pusha
je
clc
sub
jg
mov
int
je
inc
fsubrl
jl
or
ror
and
and
loope
fbld
fisttpl
mov
xchg
fwait
xchg
mov
jl
mov
test
adc
add
xchg
jg
arpl
repz
jne
xor
aas
sbb
pop
mov
fwait
shlb
ds
jg
mov
mov
pop
jp
mov
inc
test
mov
push
iret
xchg
xor
mov
cmp
sti
inc
and
ds
sbb
push
ljmp
enter
gs
repz
ljmp
lahf
rcrl
adc
sbbb
and
leave
cmp
cli
mov
out
mov
xor
ds
lods
mov
mov
cmp
and
adc
je
nop
mov
push
push
or
xlat
daa
and
add
push
imul
push
mov
jne
repz
sub
frstor
leave
iret
lret
int3
loopne
mov
push
jge
int3
dec
out
ficompl
pop
push
jmp
adc
or
mov
push
cmc
sbbb
push
and
insl
pop
xor
into
in
push
repz
xchg
xchg
int
loopne
xchg
int3
push
pop
test
push
das
jno
cwtl
mov
cmc
shlb
mov
add
mov
sti
mov
bound
outsl
jmp
popf
sbb
mov
sub
cmp
ljmp
and
push
test
xor
jmp
xchg
pop
es
dec
fcoms
cmpsl
data16
das
pop
mov
or
ljmp
adc
sti
out
jnp
xor
aaa
data16
jnp
mov
dec
out
test
xor
add
cmc
push
lds
mov
xor
enter
sbbb
into
mov
xchg
daa
inc
xchg
xor
stos
cmc
imul
imul
mov
iret
out
inc
sub
xorb
mov
inc
testb
jmp
jle
movsb
jmp
mov
fs
es
xor
mov
push
or
cwtl
and
lods
mov
mov
addr16
push
insl
xchg
hlt
mov
lods
rcll
lahf
test
push
imul
sub
icebp
mov
fistpll
cli
pop
bound
insl
push
xchg
pusha
testl
mov
jecxz
jge
ljmp
aam
xchg
push
pop
dec
lcall
mov
jns
cltd
fsubrp
out
cs
mov
fldl2t
mov
sub
sub
cmpsb
cs
lret
inc
jge
shlb
enter
lahf
sti
pop
dec
imul
mov
mov
cs
mov
xchg
cli
mov
add
lret
or
xchg
movsb
rorl
daa
fsubl
mov
push
sub
test
icebp
pusha
fwait
dec
sub
mov
sahf
sbb
or
inc
mov
out
daa
loope
pusha
push
arpl
xor
cmpsb
jp
pop
in
xor
pop
jmp
jne
mov
outsl
es
mov
jp
fsubl
add
push
add
sub
outsl
lods
sbb
dec
pusha
sbbb
mov
push
int3
cltd
js
and
fs
in
pop
inc
add
xchg
in
inc
dec
mov
fistpl
scas
ljmp
add
or
rcr
adc
rcr
aas
push
xchg
int
jge
sbb
leave
les
push
adcl
movsb
leave
js
les
xor
movsl
data16
or
mov
xchg
mov
insl
pop
sub
sti
in
xor
pop
nop
sub
shrl
shll
inc
pop
sbb
adc
sub
jb
bound
fwait
mov
popf
adc
stos
push
es
xor
ja
testl
xchg
and
jbe
pushf
lods
jmp
sahf
outsb
mov
sub
popa
cmp
push
adc
in
lock
out
or
push
lds
mov
scas
hlt
mov
ficoms
sbb
lock
pop
pop
or
dec
cmpsb
loop
push
lods
lret
daa
mov
movsl
add
jg
dec
sub
inc
sbb
call
stc
fimuls
in
cmc
inc
and
faddl
jns
cmc
mov
repnz
mov
dec
test
dec
inc
fmuls
insl
fildll
mov
pop
xor
addr16
iret
in
inc
push
sahf
xorb
or
jmp
bound
into
mov
push
lea
mov
daa
add
jg
outsl
inc
cld
shl
jb
push
incl
rcrb
push
ret
rcrb
sar
insl
add
pop
mov
cld
out
mov
idivl
stos
test
ret
sti
bndldx
incb
scas
out
xlat
outsb
in
jo
jae
stos
scas
popf
mov
xchg
mov
roll
imul
xchg
outsl
pusha
iret
mov
shrb
sbb
push
push
push
dec
adc
lret
insb
leave
or
arpl
xchg
push
cmp
mov
stos
cmp
iret
adc
into
push
and
lcall
adc
rorb
aad
mov
push
jg
in
xlat
jp
jecxz
les
repz
jge
ret
and
test
pop
aas
and
mov
mov
add
clc
dec
mov
sbb
in
push
lea
mov
in
pop
jl
jmp
xchg
mov
add
jns
push
xchg
jg
dec
out
xor
mov
and
mov
and
std
lret
clc
jmp
push
pop
add
addr16
xchg
divl
std
inc
sti
into
popf
aam
out
inc
mov
shl
xorl
test
call
in
outsb
fldl
cmp
out
rcll
jge
add
ficoms
mov
pop
cmpb
sub
arpl
cmp
cltd
cmp
or
sbb
cltd
ljmp
mov
jmp
jg
jp
jg
add
lcall
jg
iret
fs
jno
mov
mov
or
or
inc
xor
loope
daa
es
mov
repz
inc
dec
add
push
out
push
imul
enter
leave
sbb
mov
fstl
mov
icebp
push
mov
mov
pop
repz
int3
pop
ret
and
pop
nop
movsl
outsl
mov
jo
adc
incl
dec
dec
sbb
xor
jb
hlt
stos
push
into
into
rol
jge
dec
inc
scas
xchg
das
movsl
push
inc
and
push
or
fiaddl
sub
xchg
fdivl
in
aas
pop
popa
xchg
cmp
test
or
adc
pop
mov
enter
shrl
mov
cltd
pushl
xor
push
cmpsl
int3
sub
add
jmp
iret
mov
add
in
stos
mov
in
lods
ljmp
pop
outsb
leave
jle
outsl
jae
test
jnp
out
dec
adc
andb
pop
rcl
xor
repz
and
cltd
insl
jbe
cmpsl
sbb
push
cltd
push
std
insl
pop
mov
sbb
or
adc
sbb
ss
push
out
dec
hlt
mov
je
mov
faddl
sahf
testl
xchg
xchg
cmpsl
andb
cmp
faddl
inc
inc
ja
add
sub
addr16
test
mov
not
mov
xchg
sbb
call
and
sub
dec
inc
aaa
jae
lds
in
push
ss
sub
in
fisttpll
outsb
outsl
push
push
lahf
dec
mov
adc
fidivs
xor
lret
mov
add
xchg
inc
fidivs
into
dec
ja
int
sti
insb
and
adc
pop
push
push
fistps
inc
adc
jnp
cmp
faddp
mov
cmp
adc
lcall
repz
andb
fstps
or
adc
ds
lcall
out
outsb
add
jne
bound
mov
cmpl
push
jle
inc
out
adc
scas
xchg
mov
imul
xor
fistps
movsl
sub
ljmp
xchg
and
pop
sub
cwtl
push
pushf
gs
jns
fildll
es
das
cltd
push
lods
and
in
aas
or
jne
inc
dec
jg
mov
lods
imul
sbb
pop
mov
mov
fdivr
xchg
int
inc
insb
test
std
mov
dec
mov
push
das
dec
jmp
jge
jbe
lahf
push
jp
popf
mov
je
and
in
dec
fldenv
cli
xchg
ret
test
inc
bnd
outsl
inc
add
sbb
out
and
jo
je
addr16
cmpsb
rcrb
out
jge
in
and
scas
sbb
popf
stos
int
adc
pop
adc
aaa
mov
test
push
das
outsb
add
out
push
popf
pop
adc
and
mov
subb
insb
push
or
lret
test
mov
and
call
outsl
pop
push
cmp
jo
push
jae
stos
mov
adc
xor
stos
scas
adc
sub
and
fs
rorb
xor
hlt
fisubrl
adc
inc
aam
mov
js
mov
inc
and
sbb
movsb
mov
mov
push
xor
xor
sub
push
xchg
xor
xchg
notl
lea
jl
mov
out
jle
rcll
dec
mov
rorb
jnp
mov
push
fsub
sbb
loope
aaa
jns
push
mov
pop
aas
test
cmp
fwait
cmpsl
loopne
movsl
aam
stc
add
pushf
test
dec
movsb
mov
lods
cmp
adc
mov
lret
mov
repnz
xlat
in
cmp
mov
out
clc
sub
xor
add
insl
rolb
xor
mov
fwait
sbbb
xor
push
sbb
gs
insb
jbe
lahf
mov
pusha
dec
sub
jo
pop
jmp
jnp
dec
mov
push
pop
addr16
rorl
fiaddl
rolb
or
fidivrl
pop
cmp
mov
xor
or
rorl
and
sub
and
leave
or
and
mov
andl
dec
fsubs
mov
inc
or
cwtl
data16
aas
pushf
mov
cli
lret
inc
daa
add
setg
push
mov
sub
ficomps
adc
mov
pop
xor
cmp
cmc
jno
or
loop
push
mov
in
inc
xchg
mov
inc
sub
hlt
int
push
popa
xchg
lret
mov
inc
scas
adc
stc
ret
mov
or
cli
sbb
sbb
testb
inc
jle
mov
icebp
push
fbld
sub
mov
addr16
xor
clc
cmp
mov
inc
fisubl
or
sub
xor
inc
dec
pusha
mov
loop
sub
pop
xchg
inc
jbe
fbld
push
and
or
fcoms
or
jg
sti
pop
mov
jge,pn
pop
jp
adc
or
shrb
out
into
addr16
and
mov
hlt
repnz
shll
int3
xor
sbb
push
lret
or
xor
pop
or
lret
mov
lds
std
rorb
fwait
imul
jle
inc
jl
adc
mov
xorb
adc
sub
push
fsubrl
pop
sbb
jnp
cli
adc
stos
xchg
and
push
call
int
int
add
rcr
or
iret
inc
mov
cli
push
addr16
mov
outsb
dec
xlat
fistpll
xorl
fldl
jle
xchg
cmp
mov
lret
iret
or
fs
movsb
fucom
ja
adc
int3
dec
das
movsl
out
mov
and
mov
xchg
add
outsl
push
pop
fnstcw
sbb
sahf
xchg
je
cmp
nop
jl
in
out
cmpsl
adc
mov
fstpt
lea
fwait
bound
sahf
in
inc
push
or
frstor
out
and
add
mov
pop
xchg
enter
int
ss
pop
or
push
push
call
mov
pop
loop
adc
mov
adc
rorb
xchg
jecxz
pop
inc
adc
sbb
pop
jg
adc
sub
mov
sbbl
jle
insl
inc
aaa
jne
and
daa
rcll
xchg
or
stos
jmp
xchg
cmpb
jecxz
adc
jle
outsb
loope
mov
mov
es
mov
cltd
or
clc
lds
lock
dec
pop
cs
push
repz
sarl
dec
movsb
repnz
xor
sub
outsb
mov
and
sub
xorb
xchg
cld
aad
popa
mov
push
xlat
mov
pushf
xchg
xchg
adc
xor
fmull
adc
push
int3
mov
add
sub
andb
push
mov
stos
dec
loopne
subl
outsb
add
mov
loopne
popa
xor
sbbb
sub
inc
dec
mov
int3
cmp
push
mov
push
add
data16
adc
pop
jecxz
lods
test
lock
pop
inc
test
xorb
popf
arpl
movsl
xchg
mov
data16
insl
mov
out
xchg
and
lods
jae
xchg
xor
popa
cmc
leave
sub
sti
xchg
push
and
sub
aad
das
iret
subl
sbb
sti
scas
and
int3
xor
rcrb
rclb
pushf
scas
gs
aad
cs
xchg
jg
sbb
scas
shll
rorb
clc
aas
xor
mov
jmp
fstpl
xchg
adc
or
mov
push
xchg
call
xchg
mov
out
ss
cmp
or
push
pop
dec
lret
jl
jae
mov
lcall
cwtl
pop
push
fsubs
out
sahf
jno
push
dec
push
sbb
lods
cmc
scas
sbb
xchg
xchg
adc
lock
or
subb
das
fstpt
and
adc
sbb
cwtl
pop
mov
sub
test
mov
xchg
lea
daa
test
mov
popf
aaa
daa
dec
cmp
push
movsb
insl
pop
mov
mov
fstps
int3
mov
cltd
enter
mov
mov
sbb
xor
xchg
fldcw
mov
xchg
shld
jb
out
sbb
ret
inc
mov
mov
sub
scas
roll
fxch
cwtl
inc
mov
iret
ljmp
xchg
push
add
pop
push
dec
mov
out
in
sbb
mov
in
xor
cld
jl
jbe
loope
clc
sti
add
sarl
pop
sub
xor
divl
movl
push
jg
jo
lods
lds
push
lcall
dec
cmp
push
mov
mov
mov
ja
repnz
inc
or
jbe
repnz
gs
jl
fwait
arpl
int3
out
lahf
mov
cmp
ret
jl
jp
jmp
aam
iret
jge
fnstcw
jp
push
sbb
cmp
out
cmp
jecxz
sbb
in
imull
addr16
push
xchg
popa
mov
mov
loope
or
cmpsl
pop
aad
or
popw
jbe
popf
and
adcb
cmpl
lahf
xor
pop
pop
adc
sub
jle
aam
test
shlb
sbb
scas
jl
sbb
pop
lea
cmp
xchg
and
fxch
add
mov
imul
aaa
xor
jne
mov
sarb
call
xor
popa
lds
jmp
jl
in
mov
test
xchg
push
insb
sti
cmpsl
mov
mov
repnz
rorl
add
jno
xchg
sub
mov
les
imul
cld
inc
mov
idivb
loopne
movsl
lret
stc
mov
test
mov
out
pop
movsb
mov
lret
xchg
ss
scas
ret
pop
cmp
xchg
insl
nop
test
int3
pusha
roll
pop
ficompl
jp
jmp
cmc
in
pushf
test
orl
and
movsb
or
or
in
or
daa
jo
xor
movsl
shrb
cli
cmpl
pop
fcmovb
addb
jp
mul
psrlw
rorb
mov
adc
mov
or
imul
cmp
push
mov
enter
xchg
insb
dec
mov
outsb
pushf
sti
sbb
adc
repz
pop
aas
lahf
mov
pop
das
shll
lods
mov
dec
cmp
daa
cwtl
out
out
adc
mov
xor
dec
shrl
aaa
dec
cmp
iret
pop
cltd
or
mov
xor
psubw
push
scas
dec
pop
repnz
or
cmpsl
mov
je
mov
push
inc
or
mov
fsqrt
loopne
dec
mov
lods
dec
jecxz
cli
pop
test
push
in
cmc
nop
pop
xchg
pop
daa
push
imull
cltd
cmpsl
dec
xlat
outsl
test
aam
enter
mov
inc
sub
aaa
das
sub
dec
hlt
xchg
aaa
pop
in
xor
mov
out
loop
cltd
xchg
neg
jne
out
xlat
sbb
sbb
test
dec
addr16
mov
dec
pop
add
imul
es
jmp
jp
mov
sbb
push
aad
les
lock
or
mov
cmp
dec
addr16
add
lock
mov
jns
add
mov
push
aas
lahf
xor
icebp
mov
xor
push
int
lret
ja
mov
out
pusha
sbb
mov
pop
xor
scas
cmp
idivb
xor
dec
and
cmpb
lea
xchg
push
lahf
xchg
add
dec
cmc
fstp
dec
jmp
in
lret
or
cmp
jb
fdivrl
stc
cmpl
lcall
pop
pop
repnz
in
xor
test
xor
fnstenv
inc
rolb
repz
inc
aam
daa
loope
aad
push
mov
mov
dec
mov
dec
div
push
test
mov
and
cmp
fdiv
add
mov
insl
pop
mov
fsubrl
mov
dec
addr16
out
into
fidivs
mov
adc
mov
int3
pop
sub
pop
jmp
push
fwait
cmp
add
pop
adc
cmp
push
xor
stc
pushf
movsl
mov
and
sub
dec
test
mov
dec
fldcw
or
push
bound
mov
add
imul
cli
sub
push
ds
outsb
cmp
mov
ret
pop
daa
push
jge
sub
call
push
sub
popa
inc
imul
jnp
mov
dec
lret
adc
or
push
sub
jb
aad
adc
shlb
out
bound
in
jnp
cmpsb
mov
xor
inc
out
ret
xchg
stos
dec
pushl
lea
inc
mov
cmpsl
xchg
pop
push
lods
outsl
repz
repnz
add
add
jmp
iret
cmp
fidivrs
jnp
inc
and
je
and
iret
xchg
jmp
push
sub
icebp
lock
test
int3
adc
mov
cs
mov
mov
cld
call
imul
cmp
loopne
sbb
mov
mov
jle
mov
jg
das
dec
push
mov
aas
mov
xchg
setae
iret
popa
loopne
jnp
jbe
ss
inc
dec
addb
push
stos
fldcw
dec
xchg
rorl
mov
adc
mov
add
xor
adcl
sbb
fbld
xchg
insl
xor
pop
int
rcrb
or
mov
dec
adc
std
jecxz
xchg
pop
sahf
js
add
inc
cmp
adc
mov
fstpl
add
aam
dec
sub
int
mov
dec
mov
stos
scas
sahf
in
cld
sub
or
adc
sbb
icebp
push
arpl
pop
iret
sub
les
mov
movsl
cld
fistl
rol
and
jp
rolb
mov
push
mov
test
outsb
fdivr
inc
repnz
xchg
or
mov
xchg
or
xchg
stc
loop
movl
mov
arpl
sub
das
sahf
inc
push
rcrl
fdivl
sub
cld
cltd
pop
sub
mov
sub
in
aas
dec
mov
imul
xchg
rol
lods
or
push
fwait
js
jnp
xor
push
or
sbb
jnp
sub
outsb
add
out
mov
into
dec
pushl
hlt
and
nop
gs
sbb
adc
icebp
jno
and
daa
ja
jmp
mov
insl
dec
inc
cmp
mov
sub
addr16
shl
or
xchg
fwait
push
mov
popf
jle
sbb
and
cmpsl
sub
lahf
sti
and
add
add
and
and
add
lock
nop
jo
xlat
and
add
rolb
mov
mov
push
addl
nop
or
push
cmp
or
xor
lcall
filds
pushf
rcrl
or
repz
push
and
mov
aam
in
lds
fs
call
das
scas
hlt
push
ja
push
enter
loope
lret
shrb
shrl
scas
add
pusha
shll
mov
popf
push
aad
aad
xchg
scas
cs
mov
mov
rorb
ffreep
or
push
add
cmp
cwtl
cmp
les
push
test
xor
hlt
push
stos
inc
jp
les
jb
adc
cmpsb
add
les
pop
rcrl
sbbl
push
int3
fstps
push
into
pusha
stos
movsb
test
fwait
dec
movsl
xchg
dec
cmp
xchg
pop
or
sti
mov
push
mov
pop
out
sbbl
inc
mov
dec
cs
mov
mov
push
jg
xorb
xor
imul
ficomps
push
or
aas
or
ret
ljmp
scas
nop
jmp
cmp
cmp
pop
dec
mov
mov
inc
sub
jno
dec
mov
aas
inc
lret
fisubl
das
std
outsb
jl
out
xor
cmpsb
dec
dec
testl
in
cmp
push
pop
inc
inc
stos
hlt
xchg
pop
outsb
out
call
dec
mov
stos
jae
rorb
dec
movsl
jmp
cld
cmp
adc
adcl
push
icebp
cmp
mov
cmp
je
insl
popf
test
mov
into
or
cmp
dec
arpl
cli
insb
pop
xor
sbb
sti
fstpt
shrb
mov
xor
test
nopl
cmp
xchg
mov
jg
xlat
stos
mov
pop
cmp
int
cld
lcall
adc
das
clc
mov
xchg
ds
test
outsl
push
rol
sub
jecxz
mov
push
sbb
jg
or
xlat
cltd
in
push
insl
jle
test
jnp
faddl
aam
jp
add
ret
pop
repz
in
add
out
mov
outsl
scas
out
xor
orb
outsb
jne
loope
ljmp
insl
push
pop
pop
pushf
add
test
mov
push
inc
call
and
push
int
mov
adc
pushf
fdiv
ljmp
jne
lret
stos
sub
lods
fsub
fidivl
push
rcrl
pop
mov
stc
mov
xchg
inc
icebp
and
push
xchg
popf
sub
dec
dec
add
dec
pusha
je
xchg
mov
arpl
pop
push
add
push
in
push
and
dec
jg
mov
pop
fstpt
lret
ret
ja
jle
or
xchg
cld
repnz
gs
movsl
push
in
add
mov
xor
mov
in
je
mov
jp
pop
cli
pop
gs
xor
jbe
call
sub
jbe
and
inc
jno
cmp
ljmp
push
in
xchg
xlat
mov
ljmp
mov
in
jne
xor
lods
sbb
adc
adcb
int3
sub
jecxz
test
repz
jp
jb
adc
xchg
in
data16
jg
pusha
loop
xchg
sbb
cmp
xor
ss
imul
clc
mov
rcll
push
fisubs
push
call
fildl
lahf
fnstsw
xchg
aaa
push
lahf
je,pt
daa
mov
push
sbb
or
scas
and
cmpsb
push
rclb
lret
mov
outsl
inc
stos
pop
mov
dec
pusha
ja
lret
gs
push
int3
jp
and
mov
fmuls
sbb
and
jge
jge
or
pop
pop
rclb
pushf
fwait
leave
mov
cli
insl
cmpsl
mov
cmpsb
cmp
push
imul
mov
ljmp
shrb
and
fmulp
mov
push
bnd
xchg
adc
call
in
mov
rcl
xchg
mov
jmp
ficompl
cmpsl
test
mull
test
std
lea
lods
jmp
jb
stos
pop
xchg
jo
lea
imul
shlb
stos
pop
stos
loope
and
push
jecxz
xchg
inc
sbb
rolb
push
dec
lea
xor
xlat
cmp
mov
pop
mov
dec
cld
fiaddl
pop
sbb
or
jl
pop
arpl
mov
shll
out
fsts
ss
jb
mov
repz
xchg
in
out
aad
ret
sbb
out
fidivs
push
add
mulb
daa
repnz
icebp
cmp
add
xlat
or
addr16
adc
or
daa
push
xor
imul
out
inc
push
sbb
fcompl
mov
push
mov
loop
lahf
stos
into
lock
push
int3
imul
push
mov
xchg
dec
xbegin
and
jge
xlat
mov
bound
nop
fs
cmp
jge
decb
inc
int
push
imul
fisubl
push
lock
clc
cwtl
cltd
sti
pop
icebp
sbb
add
cmpsb
loope
sbb
xchg
xor
pop
dec
enter
inc
pop
cmpsb
cmp
adcb
andl
arpl
scas
push
or
inc
xchg
jnp
ret
loop
and
lods
mov
ret
mov
std
lret
pop
stos
nop
xor
sub
mov
es
xchg
inc
popa
adc
shlb
sub
outsl
es
dec
cli
cld
add
jl
push
lods
xchg
and
xchg
mov
outsb
xorl
out
mov
xlat
inc
pop
jnp
mov
push
insb
or
ja
out
pop
sub
xor
xchg
ljmp
xor
repz
add
sbb
cmp
je
mov
repz
mov
pop
lds
dec
xchg
add
mov
icebp
mov
cld
sar
ds
mov
adc
std
call
xor
notb
sbb
jge
jge
ja
js
jb
xor
cmp
fs
push
mov
xchg
xchg
mov
movsl
movups
repz
outsl
shll
pop
xor
mov
pop
and
lods
aas
add
lret
sahf
mov
sub
fxam
imul
pop
daa
jo
sbb
arpl
inc
xor
loope
add
mov
push
stos
xor
or
jne
cmpsl
notl
pop
outsl
xchg
push
add
scas
sahf
andl
jbe
dec
aam
lret
loope
mov
jno
mov
xchg
int
stc
into
test
sub
in
push
inc
adc
repz
sub
cli
pop
pop
and
xchg
cli
adc
orb
xor
add
jb
repz
adc
mov
jo
cmc
incb
cld
jno
dec
pop
mov
cmpsl
jo
and
nop
call
pop
jno
xorb
cmpsl
mov
adc
outsl
sbb
mov
rcrl
mov
insb
cmp
adc
push
pop
xchg
push
in
ja
ja
mov
pop
xor
sbb
sbb
repz
outsl
xor
jle
loope
nop
inc
cmpb
mov
mov
and
add
aaa
push
push
jne
clc
shll
imul
int
data16
scas
mov
push
pop
pop
xchg
jp
mov
sbb
ja
arpl
xlat
jne
jmp
test
daa
scas
out
sub
push
pop
shl
push
int
sarl
pop
out
icebp
pop
clc
out
pop
std
inc
xor
or
jo
or
int
xor
shrb
arpl
push
lods
xchg
xor
ljmp
sbb
cmp
subb
mov
push
and
push
in
mov
gs
dec
ds
push
sub
xchg
fwait
dec
jne
insl
jle
add
jne
xchg
cmp
repnz
lds
sbb
mov
inc
lea
movsb
push
fwait
icebp
mov
cmc
jle
adc
sbb
fldt
pop
sub
out
mov
inc
adc
mov
dec
xchg
and
pop
xchg
dec
inc
rcrl
inc
in
adc
mov
mov
and
out
jno
sub
into
mov
add
jecxz
pop
xor
inc
mov
jecxz
mov
pop
inc
in
cmpsb
jae
mov
mov
jmp
mov
fisubrl
loopne
add
cmp
jns
pop
add
and
adc
inc
xchg
xor
dec
clc
jno
or
sti
xlat
ret
inc
add
jecxz
mov
sbb
push
fnstsw
shl
mov
xchg
movsl
cmc
inc
push
test
jle
pop
std
in
xchg
or
ss
push
ret
das
arpl
xor
jecxz
mov
jecxz
push
dec
test
dec
jle
ds
mov
adc
outsl
sbb
xor
outsl
int
js
mov
aaa
dec
mov
pop
adc
divps
clc
sbb
or
or
inc
fisubs
xchg
cmpsl
or
cli
jmp
xchg
outsl
xchg
jecxz
mov
je
lock
mov
pop
outsb
jmp
scas
lahf
shlb
jae
cltd
aaa
add
test
jo
dec
push
mov
mov
push
push
lods
inc
ret
mov
or
jg
or
pop
sbb
xor
push
push
xor
ret
call
dec
mov
xchg
fldcw
in
mulb
pushf
lock
xchg
outsl
push
shl
clc
push
pop
jne
jl
push
mov
cmpps
sub
hlt
fs
inc
mov
sub
inc
jge
mov
xchg
add
sbb
and
shll
call
rcrl
pop
into
push
push
rorb
xor
mov
movsl
lods
add
sbb
push
cld
sti
ljmp
adc
outsb
hlt
ds
imul
inc
inc
or
lahf
pop
in
mov
sbb
sub
clc
inc
mov
ficomps
lods
jmp
insb
adc
and
stos
xor
and
dec
or
insb
inc
mov
shl
insl
add
sbb
and
shr
in
push
mov
mov
xor
push
pop
pusha
test
movsb
cmp
popl
jno
mov
outsb
lahf
push
cwtl
xchg
xor
loopne
fsubp
mov
mov
fnstsw
addr16
dec
lock
out
loop
les
cltd
dec
test
stos
stc
bound
lahf
jecxz
popa
std
mov
stos
dec
adc
mov
lock
dec
dec
and
mov
in
inc
lret
cmp
sub
jp
cmp
cmp
inc
stos
imul
in
movsb
jmp
mov
jle
cwtl
cmp
ffree
add
inc
mov
and
jmp
adc
cwtl
iret
testl
xchg
xlat
fistpll
xchg
mov
icebp
repnz
in
sti
pop
and
je
shlb
sbb
ret
aad
and
lret
pop
sbb
fistpll
mov
movb
ds
outsb
add
cmp
xchg
adcl
fstpl
cmp
jg
mov
test
sub
loope
insl
aam
inc
scas
fwait
cs
popf
imul
lret
insl
jl
nop
cmpsl
iret
xor
add
mov
push
std
adc
pop
iret
icebp
xchg
rcll
inc
push
out
pop
cmp
xor
test
dec
add
clc
adc
clc
lds
pop
mov
or
ror
mov
scas
test
fwait
test
jl
cmc
xchg
fildl
cli
imul
imul
in
nop
pop
lods
adc
jp
ss
cmpsb
ja
shlb
test
fnstsw
rol
push
shufps
pop
mov
adc
mov
jge
movsl
xchg
add
mov
pop
bnd
push
mov
cld
xor
outsb
repnz
mov
sub
stc
dec
mov
stc
out
dec
pop
rcrl
jmp
pop
iret
cs
fidivs
inc
sub
sti
xlat
jnp
adc
mov
jge
decb
shrl
fimuls
cmp
lock
mov
sub
pop
xlat
sbb
call
mov
cmpl
jp
mov
call
test
fisubrl
or
je
mov
inc
aad
imul
xchg
lret
add
out
push
and
jg
dec
mov
out
pop
les
or
and
mov
xlat
xor
bound
xor
arpl
in
outsl
mov
out
xor
cs
or
jb
jmp
test
jno
sub
lods
cmp
int3
cmp
imul
xor
movsl
xor
fs
out
repnz
pushf
outsl
bound
sbb
repnz
adc
xchg
int
push
les
rorb
mov
pusha
hlt
or
addb
cmp
outsl
iret
pop
js
inc
mov
mov
aas
gs
jp
gs
sahf
adc
lcall
sub
inc
or
mov
sti
icebp
pop
push
pushf
je
rcl
fimuls
add
dec
jnp
jmp
enter
cmp
lcall
mov
movsl
movsb
repz
jp
xor
and
idiv
nop
sub
loopne
sub
mov
iret
iret
and
push
ficompl
cmpsb
addr16
pusha
cltd
test
movsb
insl
xchg
push
xchg
cli
in
clc
sub
cmpsl
inc
pop
and
xchg
cmp
js
in
movsbl
pop
xchg
lahf
sbb
mov
push
cmp
sub
std
inc
push
sbb
push
add
pusha
mov
cmc
xlat
in
ljmp
pop
jecxz
mov
or
rcrb
jne
jne
cmpsl
sub
sbb
cmp
cs
pop
inc
fs
xor
ljmp
out
mov
addr16
push
sbb
inc
cmp
or
jb
jo
push
sub
pop
cs
dec
xor
cmpsl
iret
imul
cs
jbe
inc
fmull
push
in
daa
xchg
and
sbb
inc
lods
das
and
mov
mov
sbb
fcomp
pop
ret
jne
mov
outsb
or
dec
xchg
fdiv
fcomps
std
xchg
imul
add
testl
iret
inc
cmpsl
push
mov
add
sbb
xorl
inc
pop
pop
push
mov
outsb
push
rcll
cmp
pop
fdivrl
fwait
out
sbb
aam
sbbl
movsl
pop
inc
xchg
je
loope
mov
jnp
pop
div
xor
cmp
dec
in
mov
jecxz
mov
shl
outsl
mov
shrb
and
xor
push
adc
in
cmp
jno
rcll
fcoml
test
add
pop
xor
dec
xchg
pop
adc
out
sub
js
outsl
xor
push
mov
inc
xor
enter
cmp
push
sbb
push
mov
iret
xchg
xchg
sub
pop
das
loop
push
and
lahf
xchg
mov
and
xor
aam
add
cld
outsb
pop
push
dec
cmp
mov
pop
ret
jbe
outsl
loope
loopne
pop
pop
popa
push
popa
testl
xchg
sub
lret
das
mov
mov
pop
fwait
das
mov
inc
fs
insb
ds
dec
mov
cmpl
gs
sbb
out
mov
dec
jp
xor
or
or
mov
mov
adc
mov
xchg
pop
adc
incb
movsb
mov
lret
call
sbb
or
stos
test
push
or
ljmp
aad
std
mov
gs
xchg
dec
je
mov
push
rcll
or
cmp
push
scas
jbe
add
fs
mov
sub
into
clc
dec
pop
inc
mov
jg
lds
and
into
loop
adc
or
scas
dec
scas
cmp
enter
je
into
mov
scas
dec
push
loop
addl
push
mov
fdivl
fucomi
lret
aam
les
popf
cmp
xchg
pusha
xchg
adc
popa
inc
ja
test
stc
fidivrs
xchg
es
jb
mov
xlat
sbb
das
dec
jecxz
cmpb
mov
xor
sarl
push
cmc
pushl
inc
jb
popf
das
jp
xchg
ljmp
movsb
stc
jmp
jb
pop
loope
popf
mov
fwait
inc
int
mov
adc
out
shl
call
je
cs
xchg
in
outsl
imul
mov
jle
push
or
lret
imul
psubusw
mov
lock
jg
mov
mov
dec
insl
ja
pop
and
aad
mov
inc
push
imul
imul
add
add
dec
push
in
sti
push
enter
sahf
les
pop
fwait
sar
daa
sti
flds
mov
xchg
cli
mov
notb
jo
aam
dec
out
dec
mov
aaa
pop
dec
mov
ss
fists
push
inc
push
cmp
ds
rcll
dec
notb
mov
ret
ss
stos
lock
in
sub
push
inc
adc
lea
ret
xchg
repnz
mov
cmpsl
xchg
or
mov
loop
fsubl
pushf
loopne
out
in
sub
fidivrs
xchg
mov
mov
xchg
sarl
scas
fists
xor
adc
jmp
roll
pop
add
dec
mov
or
dec
mov
push
clc
cltd
adcb
cmp
inc
jne
mov
adc
sub
xchg
xchg
cmpsl
scas
arpl
orb
scas
mov
push
sbb
out
cltd
pop
inc
sub
sub
cmp
push
mov
pop
lods
ljmp
fistl
out
or
mov
es
mov
lcall
gs
mov
scas
adc
aaa
jmp
aas
pop
cmp
test
stc
sub
xchg
xchg
xor
fisubrs
bound
xchg
addr16
into
jnp
xchg
mov
pop
adc
dec
cmpb
ljmp
mov
addr16
cwtl
sbb
sahf
mov
stos
sbb
ret
inc
in
mov
dec
mov
pushf
cs
push
repz
fs
and
mov
add
adc
test
push
inc
mov
pop
pop
sub
jae
not
mov
mov
xor
nop
pop
cli
sahf
or
fldcw
pop
test
cmp
jbe
faddp
popf
addr16
rolb
sub
in
or
ret
out
mov
xor
and
imul
test
and
jbe
fstpl
dec
pusha
fnstenv
push
rcl
or
mov
test
ds
fsubl
jl
mov
icebp
cmpsb
clc
jecxz
stos
mov
and
in
sub
sub
iret
std
jl
mov
loope
mov
ds
sti
lods
xlat
xor
jmp
xchg
shrb
int3
mov
arpl
xchg
xchg
orb
jo
in
ds
jg
push
mov
sbb
iret
mov
sbb
pop
add
addr16
xchg
je
loopne
inc
jg
jnp
loop
jge
idiv
xchg
cmc
jp
sti
jno
cmp
aad
pop
sahf
add
adc
negl
in
inc
pop
ret
mov
insb
inc
mov
bound
pop
xor
sub
xchg
es
fnstcw
addl
fistl
ja
and
leave
jnp
dec
mov
scas
dec
scas
shrl
test
xchg
inc
or
pop
inc
test
push
insw
sub
dec
mov
pushf
ret
cld
jmp
and
imul
and
sbb
loop
pushf
mov
or
jb
sub
cli
repz
sbb
outsl
mov
cmpsb
adc
mov
jns
in
test
push
testl
or
fwait
and
loop
fcoms
lret
xrelease
cmp
call
cwtl
mov
ret
lret
jg
addr16
cmp
jo
popa
sahf
lcall
lods
dec
mov
cmp
dec
lahf
cmp
push
jb
jp
test
sti
divb
insl
clc
shlb
popa
mov
and
jg
mov
mov
out
mov
rcrb
cwtl
fst
jge
lds
lods
xor
inc
mov
int
jnp
xchg
mov
test
arpl
nop
dec
lods
push
mov
lcall
push
jge
sbb
stos
hlt
push
mov
dec
xchg
push
sarb
pushf
add
sahf
cmpsl
jnp
xchg
rcrl
loopne
lock
cmp
jne
mov
aaa
mov
ficomps
repz
andb
gs
sub
enter
inc
lret
out
andl
es
insb
mov
xorb
ret
cld
xor
mov
jge
test
mov
jle
loop,pt
xchg
lods
mov
sbb
and
xchg
cmp
data16
cmp
pop
into
aas
insb
ds
clc
push
imul
int3
gs
jg
mov
in
mov
into
stos
push
add
movsb
pop
daa
ret
cli
in
mov
adc
inc
dec
call
lcall
in
dec
enter
pusha
leave
lcall
ret
sub
or
cld
xchg
or
not
pop
adc
fs
jb
cltd
xor
lods
or
cs
mov
cli
popf
or
inc
sahf
pop
pusha
pop
or
sahf
mov
ds
fisttpl
ret
and
mov
cmc
in
aad
inc
mov
mov
addl
movsb
cmp
jnp
dec
daa
mov
loope
push
imul
mov
sub
xlat
dec
mov
and
push
test
testb
lods
fidivrl
repz
sub
lods
lcall
loopne
sub
aam
pop
cmp
jnp
pop
fidivrl
jge
cltd
arpl
outsb
movsl
push
or
add
addr16
mov
lret
dec
lahf
mov
mov
cmp
jl
call
jg
imul
adc
pop
cwtl
es
cwtl
sar
and
and
sbb
test
sbb
adc
fcmovb
movsl
push
pop
fdivrl
mov
xor
push
in
cmp
shll
mov
mov
nop
pop
or
dec
xor
pop
push
popa
cmp
push
cld
push
and
dec
data16
and
xchg
mov
xorl
lahf
pushf
jbe
ret
aam
aas
divl
lods
popf
jge
xchg
pusha
lcall
out
mov
lahf
aaa
or
fcomps
aaa
sahf
aam
jnp
loope
lcall
mov
ret
sub
xor
mov
cmp
xor
mov
movb
add
jg
arpl
daa
lahf
mov
xlat
cli
out
outsl
jp
ljmp
mov
xchg
out
mov
in
pop
sbb
insb
fmull
insb
push
xchg
add
outsl
push
dec
outsl
ror
fisubrl
dec
sti
outsb
xchg
jmp
xlat
lahf
fcom
mov
mulb
das
adc
jb
pop
shlb
or
push
rcll
popf
push
loop
and
or
sub
add
cmc
and
mov
add
les
jmp
adc
adc
mov
in
xchg
cmp
xor
or
data16
ret
sub
outsl
push
outsb
pop
leave
or
fidivrs
jp
lcall
outsl
add
shrb
jge
sbb
pop
sbb
lock
pop
jae
mov
pop
into
mov
sbb
mov
mov
rcrl
addr16
push
shrb
add
xchg
cmpb
xchg
faddl
adc
leave
sub
repnz
fsubr
inc
cld
cld
mov
push
test
shll
xchg
cmp
adc
data16
ljmp
push
add
lret
out
adc
mul
inc
or
sub
cmp
pop
cltd
push
push
arpl
mov
lret
cmp
fwait
mov
jno
rcr
adc
aad
testl
pop
ret
insl
mov
mov
rorb
call
mov
pusha
ds
hlt
xor
out
fucom
cs
aad
cwtl
mov
push
jmp
mov
test
adc
add
xchg
mov
ror
pop
pop
jno
mull
lods
imul
or
mov
into
jmp
lods
or
xlat
dec
lods
movsb
cwtl
mov
push
pop
fcmovnu
sub
add
and
sub
loop
or
lcall
movsl
loope
idivl
dec
and
push
push
aad
out
orl
push
add
fidivrl
test
sub
addr16
mov
jns
arpl
push
xchg
cli
sbb
dec
imulb
xchg
pop
xor
sbb
jmp
inc
jecxz
mov
pop
add
jl
icebp
lcall
cld
ljmp
cmp
gs
addr16
mov
sbb
rcrl
outsb
out
inc
test
lcall
push
out
xchg
pop
add
aaa
lahf
mov
add
mov
dec
push
out
in
xchg
cmpps
pop
flds
lea
cmpl
jb
in
shl
pop
loop
cmp
jl
sub
lcall
lret
bound
outsb
push
xor
ror
xorl
hlt
sti
icebp
popf
xchg
mov
daa
inc
jns
imul
add
scas
jo
hlt
sub
cmpl
icebp
mov
xchg
das
dec
jecxz
xor
in
bound
push
test
das
pop
sub
and
mov
mov
mov
or
out
out
cmp
jg
leave
push
inc
cmp
mov
push
dec
ss
fwait
sub
stos
inc
insl
lret
and
adc
aad
fisttps
test
xchg
dec
and
push
ss
dec
sbb
mov
lds
add
lock
les
insb
pop
movsl
sub
cmp
mov
xor
xchg
sub
sarl
jle
insl
mov
adc
jno
cld
adc
inc
and
cli
setb
hlt
test
mov
xor
ljmp
ja
inc
mov
xor
leave
and
sbb
pop
inc
dec
sub
pop
int
inc
sub
lret
jbe
popa
sub
aas
lret
jmp
out
mov
les
stos
std
or
lret
int3
mov
mov
dec
xor
lock
fmul
outsl
icebp
xchg
movsl
or
fistps
cmp
xchg
rorl
push
lcall
jmp
fdivs
mov
mov
stos
je
dec
mov
sahf
adc
sbb
sub
cmp
bound
push
les
and
mov
loope
add
inc
dec
dec
js
and
sbb
sub
mov
cmpsl
xchg
cmpsl
sub
inc
pop
fdiv
mov
jmp
jl
fcomps
xor
ja
out
stos
jnp
in
arpl
sarl
js
push
xchg
in
sbbl
clc
lock
addr16
jmp
out
int
lods
jle
xlat
shrl
mov
scas
mov
sahf
enter
xbegin
in
xchg
cld
cmpsb
xor
pushf
xlat
fprem
nop
mov
enter
push
in
jns
addl
sbb
lds
and
cmpsb
aaa
push
fists
sti
gs
add
iret
sub
pop
add
cmp
mov
sub
pop
pop
pop
mov
orl
adc
sub
jle
mov
pop
ds
push
jl
fdivrp
pop
jno
cmp
mov
cmpsb
inc
adcb
fidivs
test
mov
cmp
sbb
dec
push
mov
push
inc
xor
ficoml
dec
push
add
jnp
mov
call
decl
jmp
and
popa
gs
add
push
xor
add
add
xchg
sbb
jmp
push
bnd
sub
jns
adc
test
sbb
push
pop
mov
outsb
cld
das
cmp
dec
shl
jmp
insl
mov
dec
sbb
mov
jle
xor
xchg
ss
frstor
daa
movsl
or
movsb
fmuls
dec
sbb
dec
add
mull
pop
push
scas
imul
out
test
lcall
fdivrl
dec
fcomps
add
add
push
jmp
add
mov
add
cmp
jb
inc
xchg
add
sub
arpl
pop
or
jno
dec
mov
mov
jo
imul
cltd
mov
push
pop
clc
aas
iret
mov
lods
xchg
mov
xor
xor
sbb
sbb
xchg
sahf
clc
outsl
repz
ljmp
movsl
inc
pop
adc
addr16
loope
rcrb
pop
in
mov
jmp
iret
test
mov
insl
adc
sbb
int
out
ljmp
out
xchg
jp
sbb
js
inc
jge
out
cmp
push
mov
or
scas
push
int
sub
push
sbb
pop
pop
xlat
mov
pop
xchg
mov
movsb
dec
aad
loop
pop
mov
or
jae
jns
pop
das
pusha
mov
mov
nop
pop
xlat
mov
cmpsl
push
adc
gs
enter
js
enter
iret
xor
insb
cli
add
rcl
inc
pop
jl
arpl
idivb
scas
sbb
inc
cltd
int3
mov
jb
mov
jnp
fdivs
xchg
xchg
cmp
fldt
jle
mov
fucomi
test
std
mov
xchg
shrb
js
jmp
xor
inc
mov
movsb
pop
adc
or
into
orb
sbbb
out
cmp
xchg
sbb
ljmp
sahf
cmp
mov
sub
fs
dec
dec
xchg
and
xchg
prefetch
sub
outsl
mov
stos
adcb
dec
ja
adc
xor
cs
fstpl
mov
dec
stos
test
mov
xor
adc
mov
xor
popl
mov
or
fidivrs
daa
loopne
test
sub
mov
xchg
xor
hlt
push
loop
and
mov
add
mov
dec
fcompl
gs
shll
lods
or
jno
out
scas
push
sbb
jg
sub
pop
pushf
cmpsb
pop
out
pand
push
inc
or
dec
mov
cli
add
mov
sarl
repnz
subb
shr
jb
nop
mull
imul
stos
jb
rclb
adc
hlt
test
arpl
or
nop
fildl
shrl
fs
lods
mov
gs
aaa
addr16
xchg
xor
mov
push
xor
aad
cs
mov
lods
test
mov
into
lods
xchg
sbb
or
push
cmpsb
sbb
dec
mov
xchg
fiadds
push
inc
jns
mov
mov
out
jp
sub
mov
push
pop
jnp
sbb
stc
test
sarl
ja
sub
sbb
sub
insl
push
mov
invd
cltd
stos
subb
leave
mov
in
xchg
jae
daa
mov
clc
mov
fbstp
shrl
das
adc
fsubrl
dec
cmp
or
jbe
xchg
lahf
and
lock
into
adc
je
mov
repz
dec
stos
add
push
jle
add
adc
mov
pop
ss
push
push
and
out
ret
call
sbb
lret
loope
and
xchg
or
mov
pop
inc
dec
xchg
xchg
xchg
icebp
sti
movsb
add
jo
jg
dec
int3
leave
loope
flds
push
ret
mov
jmp
iret
and
jl
insl
inc
or
insl
xchg
and
rcrb
xchg
out
stos
lods
mov
cli
pop
in
pop
cmpsb
adc
pushf
daa
punpckhwd
push
mov
add
adc
push
in
in
movsl
dec
mov
data16
push
add
into
adc
mov
inc
mov
pushf
mov
push
dec
lods
mov
daa
lahf
fs
add
sub
int3
mov
push
mov
dec
sub
clc
mov
iret
arpl
mov
stos
adc
pop
add
jmp
stos
or
loop
dec
nop
sub
mov
or
adc
loope
cmc
fs
insl
iret
leave
pushf
add
sarb
inc
in
fsubl
gs
loopne
push
dec
cltd
push
mov
cld
xor
cmp
fs
cs
mov
mov
push
into
add
xor
cmp
mov
fcoml
xor
or
ss
push
xchg
out
popa
and
inc
adc
mov
les
mov
out
push
push
mov
cmc
shrl
dec
fistpl
std
dec
mov
adc
nop
movsl
xor
and
popf
pop
mov
xchg
dec
test
lock
movsb
aaa
fwait
pop
nop
sbb
xor
std
mov
mov
insb
dec
cs
je
add
out
lods
stc
inc
test
mov
mov
mov
jae
adc
test
mov
sahf
mov
rcrb
cmpsl
xor
mov
or
dec
addb
or
test
mov
loope
mov
push
movsl
lret
jp
mov
mov
out
sti
out
lock
fnstsw
xor
adc
lret
test
or
bswap
arpl
nop
and
cld
js
iret
mov
xor
dec
add
cli
push
mov
mov
in
test
lods
sub
push
sub
jnp
sub
cmp
call
adc
lahf
ss
lds
inc
push
sbb
add
arpl
les
enter
lods
fsts
add
mov
test
cld
mov
in
push
faddl
loope
int
shl
test
adc
jp
ljmp
xchg
or
fbld
xor
leave
adc
mov
inc
dec
jae
aam
and
fcmove
nop
into
adc
mov
leave
cli
into
push
xor
push
cmpsb
fiaddl
cmp
gs
cmp
test
scas
or
idivl
stos
inc
jmp
sti
stc
mov
xchg
jmp
je
pusha
in
and
cmc
std
jmp
fldenv
pushf
mov
enter
fwait
movsb
fdivrp
mov
sub
ret
loope
sbb
fwait
jb
and
dec
mov
inc
sbb
rorb
mov
jb
ror
mov
negb
scas
inc
jecxz
push
loopne
scas
or
mov
add
lcall
mov
xchg
cmp
in
push
inc
pop
xchg
test
mov
fimuls
dec
or
loope
push
repz
mov
in
cmpsl
cld
in
sbb
adc
sarl
mov
pop
sahf
sbb
or
test
and
idivb
out
rorb
jae
aas
fwait
stos
xlat
push
push
insb
ror
push
into
push
and
scas
xor
jo
fdivrl
jne
in
adc
or
rolb
js
adc
pusha
lds
xchg
fcom
sub
xor
enter
push
movsb
inc
xchg
je
or
in
insl
sub
aad
push
aam
les
pop
add
imul
inc
dec
dec
and
repz
pop
flds
cmpsl
push
cmp
cmc
test
dec
sub
das
je
js
push
pop
rorl
cli
and
out
or
ljmp
mov
jo
js
add
adc
cmp
gs
mov
push
iret
xchg
fsubs
mov
cmp
push
loop
xorl
loope
out
jb
mov
xchg
imul
fidivs
xor
rcll
or
jno
call
dec
jb
xchg
xor
fstpt
cltd
cmc
sub
fstpl
cld
cmp
inc
dec
fs
or
scas
jge
stos
test
mov
mov
xchg
in
jmp
aad
out
or
or
push
mov
and
jns
cli
mov
dec
fdivrs
jo
stos
or
mov
icebp
dec
lret
push
repz
jg
push
insl
mov
mov
mov
jge
das
test
jg
jge
xchg
fcoml
add
mov
outsb
clc
int
test
xchg
in
mov
dec
movsl
xchg
push
out
inc
sub
and
adc
or
dec
sahf
in
mov
cmp
imul
xor
pcmpeqb
imul
iret
scas
adc
mov
cmpsl
sahf
sub
sbb
jae
insl
inc
lea
lock
sub
roll
lea
inc
and
lods
jo
movsl
lods
adc
xchg
jnp
data16
mov
pop
outsl
outsl
pop
dec
pushf
fwait
scas
test
cmpsb
cwtl
jno
pop
enter
movsl
jns
push
dec
pop
add
nop
xchg
push
cltd
lock
lcall
mov
fldt
div
addr16
sbb
repz
xor
lret
inc
dec
and
out
dec
mov
xchg
xlat
adc
jns
ds
mov
cld
test
sub
cltd
stos
sbb
popf
gs
mov
sbbb
add
mov
cmpsl
fisttpll
mov
xchg
pop
repz
aas
sbb
sbb
pushf
aas
outsb
pushf
mov
mov
or
and
pop
enter
je
in
mov
lcall
subb
jns
stos
xchg
jb
push
int
xchg
and
daa
sahf
fnstenv
pop
js
cltd
lret
and
mov
stos
arpl
adc
pop
mov
jl
dec
icebp
fneni(8087
lret
mov
mov
cld
mov
and
es
cmc
stc
fwait
add
push
jg
inc
xor
dec
outsl
mov
and
hlt
xchg
push
inc
dec
cmp
loope
jl
or
scas
call
jnp
or
or
jp
lahf
push
outsl
dec
or
ret
aas
iret
insl
xchg
sti
daa
fsubrp
mov
jns
pop
inc
ds
mov
orb
fcmovnu
pop
sti
add
mov
jno
mov
hlt
add
mov
add
add
into
mov
int3
sbb
bound
push
xchg
fistps
leave
jg
fs
cmp
outsb
je
xchg
loope
add
aas
and
mov
mov
es
cs
inc
out
jmp
sub
jge
int
jecxz
out
cmp
popa
add
dec
mov
inc
inc
loop
imul
clc
fcoml
imul
imul
pushf
ds
jp
loop
dec
xor
enter
inc
adc
inc
mov
in
mov
push
xchg
mov
push
dec
or
js
fisttpl
insb
test
mov
hlt
push
add
pop
rcrl
xchg
cmp
and
mov
fistps
sbb
out
cmp
push
dec
das
xor
pushf
fwait
jle
jecxz
icebp
adc
cmpsl
addr16
or
jae
imul
xor
mov
push
sbb
fwait
sub
lds
rep
cmp
imul
cltd
hlt
sbb
sbb
or
into
std
shll
mov
mov
out
iret
xchg
inc
pop
mov
dec
xor
xchg
xor
jg
bound
dec
xor
aaa
insb
xor
or
xchg
mov
test
sub
fcoml
outsl
jle
and
mov
jg
mov
cmc
or
push
inc
pop
xor
imul
xor
ljmp
test
pop
into
inc
adc
jns
jnp
push
arpl
pop
dec
and
ds
or
mov
mov
dec
sbbl
cmp
js
and
mov
cmp
mov
mov
nop
aaa
loop
mov
xchg
loope
mov
ljmp
dec
cmp
push
add
out
mov
jno
push
hlt
in
cli
pop
dec
jns
and
jg
inc
push
and
jge
lcall
aad
out
adc
adc
or
cmp
xor
xor
imul
add
cmc
out
inc
pop
les
cmp
out
push
jmp
ret
fnstcw
lods
cmp
mov
test
xchg
add
imul
ljmp
in
xchg
loopne
imul
ljmp
or
xchg
arpl
aam
push
jne
sarl
mov
out
mov
mov
outsl
push
and
sub
out
sub
ja
pop
adc
push
cs
push
inc
test
inc
xor
fsts
pop
subl
insb
pop
test
or
inc
xchg
int
xchg
mov
ret
sub
repnz
push
and
std
leave
xchg
gs
gs
inc
scas
imul
or
mov
adc
lret
or
lret
sub
scas
repz
sub
bnd
add
aad
xchg
push
xor
pusha
addr16
mov
jl
xor
dec
mov
sbb
pop
iret
xchg
popf
adc
cmp
adc
int
out
sbb
out
lret
ljmp
je
mov
mov
mov
int3
add
pop
in
xchg
cmpl
sub
shr
xlat
xor
mov
lret
lods
shll
dec
jle
cmp
sbb
insb
cmpsl
loopne
mov
mov
repz
repnz
mov
lods
and
pop
cmc
pop
out
sahf
outsb
jnp
push
jae
popf
pushf
ja
ret
mov
cmc
xchg
fisttpl
push
or
push
mov
mov
or
lret
hlt
pop
fwait
add
pop
mov
cmpsb
scas
mov
imul
xchg
stc
loopne
repnz
icebp
push
stc
add
movsl
jb
aad
xchg
nop
fwait
repnz
sbb
jbe
mov
jmp
cmpsl
fnstcw
and
and
lods
aad
pusha
pop
fucomi
mov
xchg
jb
inc
cmpsb
and
adc
mov
cmp
jecxz
mov
sbb
sbb
aam
jnp
test
jno
mov
jecxz
ret
cmp
loop
cmpsl
movups
aaa
imul
cmpl
fdivr
in
jmp
negb
sti
mov
xchg
pop
mov
sbb
js
in
clc
inc
jg
xchg
das
sarb
into
lds
dec
adc
dec
xchg
xchg
inc
dec
movsl
sahf
sub
rcl
fs
jl
aas
mov
sbb
pop
jo
sarl
mov
pop
ret
mov
push
aad
and
fsubrs
jg
daa
dec
out
mov
xlat
inc
ret
pop
cli
lahf
add
fsub
outsl
addr16
data16
repz
out
out
enter
pop
cmp
mov
xlat
test
lods
mov
push
jp
loopne
xchg
dec
fadds
push
mov
fdivrs
xchg
mov
xor
shrl
mov
push
mov
xor
fbld
cmp
cld
cmp
push
push
fnop
das
lret
inc
lea
cmp
cmp
and
sbb
les
jae
adc
mov
jno
lods
mov
mov
or
adc
push
hlt
push
hlt
jmp
pop
mov
inc
jns
leave
imul
add
mov
repnz
xchg
fidivl
mov
fdivrl
xchg
and
mov
sub
data16
push
jg
add
xchg
les
xor
xor
fidivs
push
movsb
test
rclb
mov
push
jae
sbb
mov
sub
jge
xchg
push
fwait
inc
popf
dec
hlt
add
cmp
inc
jmp
pusha
insb
out
pop
xchg
cmpsl
mov
test
adc
lcall
sahf
mov
mov
inc
ficompl
pop
int3
sbb
mov
xor
ljmp
insl
push
lret
lret
scas
push
orl
loop
dec
insb
in
adc
decl
dec
xchg
inc
cmpsb
xor
jns
mov
xlat
subl
out
mov
inc
scas
sahf
ljmp
xchg
pop
gs
sub
daa
cltd
sahf
cmp
pop
in
dec
sahf
push
add
mov
and
neg
mov
xor
pop
xor
mov
lods
aas
ret
sub
mov
pusha
sub
aas
adc
jnp
enter
mov
mov
xor
scas
int
and
xor
arpl
push
je
and
or
jno
or
repz
and
push
in
insl
sub
mov
pop
xchg
adc
shrl
mov
orl
nop
dec
and
xchg
test
push
or
cmpsb
xor
pushf
push
popf
sti
xlat
cli
jo
xor
idivl
fdivs
and
mov
mov
mov
add
push
jns
in
pop
cmpsb
mov
and
leave
test
outsb
jns
inc
mov
jae
clc
and
scas
push
sbb
jge
lret
and
push
jge
stos
leave
xlat
sub
jae
inc
outsb
mov
mov
popa
mov
sahf
arpl
sbbb
and
fidivs
cmp
addr16
xor
push
pop
addl
enter
outsl
sub
mov
and
in
jg
fisubrl
test
mov
xchg
imul
push
mov
mov
nop
jnp
cmp
lret
ss
scas
jbe
ljmp
pop
ljmp
lods
xor
outsb
out
andl
or
cli
xchg
and
rol
in
xchg
fidivrs
mov
push
inc
cmp
lock
xor
xor
mov
adc
ds
jge
in
add
outsl
jno
pushf
inc
out
jo
stos
les
mov
test
pushf
inc
test
jle
scas
push
stc
ftst
ja
adc
mov
fldl
scas
fwait
add
sbb
pop
mov
pop
addr16
jb
sub
xchg
inc
loop
hlt
sub
push
sahf
mov
jnp
or
mov
xor
jge
jmp
test
aaa
cmp
dec
sbb
push
cmp
bound
pusha
lock
fwait
mov
fbstp
insl
jge
sub
iret
out
xchg
mov
aaa
test
out
jno
adc
lds
call
pop
adc
mov
jg
call
icebp
test
push
outsb
loope
pusha
jp
out
mov
dec
pop
mov
cltd
sub
enter
xchg
rcrb
loopne
int
push
loope
jb
add
and
adc
push
cmp
inc
ror
les
mov
and
add
flds
push
outsb
cmp
neg
ret
test
pop
icebp
mov
sar
ret
ljmp
loopne
pop
pause
cwtl
sub
fildl
jg
ret
scas
int3
push
js
mov
mov
dec
push
les
testb
roll
pop
push
cmp
iret
lret
sub
sbbl
clc
jno
mov
stos
nop
lods
aas
insl
rclb
in
stc
cs
push
adc
int
jmp
sub
movsb
out
pop
adc
xchg
and
jns
fwait
jb
ss
push
lcall
push
mov
cmc
jnp
cmp
lods
out
add
or
jne
lea
sbb
cld
mov
mov
stos
cld
ret
or
out
scas
bound
mov
arpl
fisubrs
lret
je
pusha
or
sbb
xlat
popa
inc
or
fcmovbe
iret
jp
daa
lcall
dec
or
push
insl
fs
pop
cmc
loope
fcomp
rorb
inc
pop
xchg
mov
xchg
sbb
rolb
je
mov
je
int
ljmp
call
mov
push
inc
xor
sti
or
mov
jecxz
jno
or
cmpsl
call
je
adc
scas
dec
mov
scas
sub
dec
jmp
dec
rorb
jns
and
add
mov
xlat
cmp
inc
mov
aaa
cmpsl
xor
adc
or
sbb
jmp
dec
fdivl
push
cli
and
mov
rolb
test
cwtl
mov
insl
pop
gs
in
sub
sbb
push
repnz
pop
cmp
push
xor
mov
scas
dec
fcmovnbe
std
or
jp
lret
mov
mov
imul
push
addb
shrl
aas
add
xor
dec
jg
pop
addr16
rorl
mov
std
xor
inc
mov
orb
popa
dec
sbb
sub
adcl
int3
dec
inc
mov
dec
in
int
adc
fwait
xchg
js
hlt
cli
out
test
lahf
lods
imul
int
addr16
pop
mov
outsb
or
push
pushf
add
inc
mov
jg
xor
dec
mov
jg
hlt
add
in
push
push
aad
das
shlb
lea
mov
mov
dec
fwait
sbb
xchg
cmp
cmc
into
jge
or
jne
test
adc
mov
xchg
hlt
js
xchg
mov
loope
mov
jl
push
sub
out
loopne
sbb
sbb
add
fsubr
lcall
div
stos
xchg
pop
inc
mov
mov
outsb
ror
aad
rcr
xchg
mov
or
or
test
mov
mov
and
rorl
mov
es
adc
wbinvd
xchg
add
sbb
lcall
adc
cmpb
fisubrl
fbld
imul
mov
push
or
movsl
fnstsw
sbb
ds
inc
mov
popw
shrl
adc
inc
sbb
mov
pop
test
out
insb
int
aaa
mov
je
push
sbb
mov
mov
lahf
filds
ret
pop
xchg
cli
stc
mov
or
dec
pop
arpl
fadds
mov
lahf
in
dec
movsb
negb
xchg
sub
xor
shll
sbb
lods
aas
icebp
cmp
xchg
test
pop
inc
adc
push
mov
and
mov
mov
movsl
mov
das
stos
shll
adc
adc
or
or
and
sbb
popl
jnp
stc
cmp
cmc
push
pop
insb
les
push
pop
cmp
test
lods
push
sahf
jae
popl
lock
sahf
dec
cmp
lods
xchg
adc
popa
cmp
pop
add
lcall
xchg
ficoms
sbb
adc
rorb
mov
fisubs
fadds
push
enter
dec
shll
adc
mov
cmc
into
inc
insl
add
xor
cmp
movsl
pop
pushf
cmpsb
das
adc
daa
mov
dec
and
ret
sub
aam
cmp
mov
mov
out
xor
fwait
cmpsb
mov
jns
addb
fstp
stc
fwait
jp
fsubs
adc
add
mov
ss
push
mov
test
cmp
xor
es
int
jae
adc
mov
xor
pusha
mov
loopne
jge
xchg
xchg
add
sbb
sub
jae
out
cltd
iret
cmp
fdiv
sub
aaa
clc
mov
cld
hlt
sbb
mov
sbb
inc
daa
push
jae
adc
xor
jle
xor
pushf
arpl
push
in
in
bound
sub
orl
inc
cld
repnz
scas
mov
add
scas
xlat
pop
sbb
pop
cli
scas
jne
jp
lret
xor
into
mov
or
jbe
pop
jle
mov
dec
enter
or
pop
fnstcw
mov
push
mov
pushf
mov
xchg
sub
pminsw
sbb
inc
aad
push
or
movsl
push
push
das
push
mov
imul
fidivl
or
test
in
xchg
sub
cltd
sbb
xor
dec
dec
das
ja
out
in
xchg
ljmp
inc
jp
push
cmpsl
cmpsb
and
jmp
xchg
or
and
js
inc
mov
fstl
push
push
sub
repnz
sbb
fwait
in
sbb
jne
test
add
pop
dec
adc
fwait
lock
inc
stos
xchg
mov
inc
ret
aaa
cmp
add
xor
mov
pushl
mov
xchg
dec
ja
mov
or
iret
xchg
jecxz
sub
dec
shlb
push
mov
dec
add
dec
sub
call
push
pop
and
pushf
dec
xor
jo
lds
sahf
lcall
ficomps
sub
sbbl
dec
ficomps
lret
jbe
mov
cli
add
jnp
lahf
xorl
out
in
lods
lea
daa
test
push
mov
and
out
rcr
mov
xor
aad
and
and
clc
xor
dec
les
xchg
movsb
add
scas
sub
ret
lods
mov
int3
subb
ljmp
loopne
pop
std
outsl
les
out
popa
push
inc
jb
cmc
cs
mov
adc
mov
cld
ja
insl
mov
cmp
fs
mov
xor
popf
push
arpl
es
push
in
xor
or
mov
cmp
sahf
clc
adc
lcall
dec
mov
mov
lods
dec
cwtl
outsl
inc
fimuls
fbld
pop
push
mov
ret
stos
int3
jno
call
fcomps
mov
dec
mov
dec
push
je
ret
push
stc
ljmp
pop
mov
or
mov
sahf
out
adc
ret
inc
lods
mov
loope
mov
jge
stc
mov
add
cmp
pop
lds
push
and
fisubs
aaa
sub
addl
push
sbb
xlat
lds
mov
lahf
xchg
mov
push
sahf
clc
jne
sub
or
pop
mov
xor
cmp
push
add
jns
xchg
and
mov
orl
rorb
xor
dec
and
into
cmovo
xor
pop
dec
dec
add
popa
or
mov
in
arpl
sbb
inc
jp
ret
aad
mov
add
mov
in
jae
push
xchg
test
das
mov
loop
xchg
xor
cmp
mov
xchg
or
dec
dec
mov
xor
ljmp
xor
in
and
xchg
ss
fdivrl
fcomp
ljmp
add
pop
or
pop
loope
in
icebp
dec
mov
adc
xchg
xor
add
dec
mov
pop
jno
push
stos
jbe
out
jl
xor
arpl
dec
cmc
cmpb
jns
in
push
dec
mov
das
in
adc
pop
nop
sarb
xchg
and
ljmp
les
inc
sbb
repnz
cli
cmp
sbb
mov
add
or
inc
jg
aam
shrl
iret
dec
cmp
jmp
stc
sbb
ds
dec
ret
adc
inc
push
and
hlt
lock
notl
fs
in
xchg
and
xorb
mov
xor
clc
add
jecxz
movsb
sub
orl
adc
jge
or
push
stos
xor
pop
adc
and
in
cmp
cmpsb
data16
fs
test
test
cmp
pop
xchg
jae
dec
mov
pop
cli
std
jns
xchg
loop
push
insl
sub
daa
push
or
push
pop
inc
push
pop
add
jecxz
aas
mov
les
enter
dec
shll
pop
jmp
divb
mov
sbb
adc
lock
mov
xchg
jg
addr16
jno
out
mov
mov
pop
sub
adc
enter
cs
lret
into
nop
mov
daa
and
mov
and
loop
or
lods
sub
lret
dec
mov
dec
outsb
mov
push
adc
sbb
push
mov
dec
cmp
pushf
paddusw
push
push
mov
fldcw
vpandn
fildl
mov
nop
ljmp
xchg
ss
jl
incl
mov
xchg
inc
sarb
pop
sbb
aad
xchg
es
jl
sbb
ja
mov
cmpsb
loope
lock
cmp
fsubrp
dec
push
in
push
rcrb
adc
sbb
insl
mov
mov
mov
mov
movsb
and
jp
inc
cmpsb
dec
jns
sub
cmp
xchg
icebp
mov
outsb
push
hlt
repz
jg
test
int3
xchg
mov
or
xor
add
xchg
imul
js
push
fistpl
inc
ffree
es
adc
sbb
out
fnstenv
lahf
lret
pop
in
les
jbe
cmpl
xor
mov
mov
mov
sbb
sbb
arpl
test
adc
ret
jae
jle
inc
in
jl
outsl
shlb
adc
xor
aas
or
xlat
enter
rcll
push
jnp
ror
inc
movsl
adc
das
mov
mov
pushf
mov
xchg
shr
pop
push
jl
jecxz
mov
test
sub
mov
mov
jb
xlat
mov
in
rol
xor
adc
clc
fwait
add
add
xor
and
dec
xlat
add
mov
adc
enter
sub
mov
inc
idivl
xchg
push
cmp
sub
iret
divb
arpl
jnp
pushf
fstps
arpl
sti
fs
idiv
cmp
pop
xor
pop
xor
in
sub
lods
cwtl
jge
rcr
mov
stos
lods
mov
push
dec
add
dec
pusha
out
arpl
scas
jo
mov
pop
sub
insb
repz
mov
jnp
in
xor
lcall
ret
test
movb
xor
sub
or
add
cmp
inc
xchg
adc
jb
jbe
loope
inc
test
stc
push
lcall
dec
sub
imul
popf
or
stos
lcall
fildl
xchg
cmp
xlat
sub
test
push
test
gs
mov
cmp
jb
pop
inc
lock
sub
gs
xor
jp
mov
pop
xor
xchg
lods
and
and
aad
fstps
mov
into
adc
mov
xor
arpl
enter
xchg
pop
push
and
insl
popf
mov
movsl
mov
popa
scas
mov
jp
lcall
jg
std
aam
jno
popa
push
push
clc
xor
dec
fadds
jmp
push
or
jecxz
cmc
push
insl
cmc
fdivr
push
fdiv
outsl
add
popa
fisubrs
pop
ss
xor
mov
enter
inc
mov
xor
mov
mul
out
cs
mov
xchg
out
adc
cmp
int3
mov
jecxz
sar
rol
mov
inc
adc
scas
dec
and
pop
ss
mov
int
aas
sahf
aaa
pop
data16
testb
sub
jecxz
movl
aas
jns
in
inc
push
jae
cld
jo
mov
push
mov
pop
cmp
das
out
add
sub
in
inc
clc
pop
dec
push
jge
lahf
dec
ljmp
xchg
sbb
or
mov
int
push
mov
add
sub
jbe
clc
adc
jns
lods
xchg
jge
call
jg
jae
push
mov
outsb
xchg
adc
iret
call
int
cmp
repz
insl
add
xor
pushf
adc
add
mov
inc
cs
pusha
loop
dec
push
loope
test
jne
aas
std
add
pop
pop
cld
adc
cmp
rclb
fsub
mov
add
call
in
sahf
fwait
lods
cmp
daa
mov
ret
test
inc
xchg
sub
xchg
adc
mov
adc
adc
xorl
ds
fcmovne
fcomi
in
popf
test
xchg
jae
push
mov
pop
lods
iret
push
in
pop
stos
sub
test
mov
xchg
outsb
movsb
xor
jp
push
sub
in
stos
lret
aas
test
xchg
cli
imul
mov
mov
xlat
sbbb
inc
repz
int
adc
adc
lahf
xchg
jns
dec
mov
inc
das
pop
pop
xor
gs
inc
pop
mov
fisubrs
imul
dec
jno
ljmp
es
xchg
popa
mov
call
pop
sbb
mov
mov
cmpsb
fisttpll
scas
sub
cmc
lods
pop
xchg
mov
int3
mov
pop
int3
cmp
movsb
jb
push
js
adc
aas
cmp
cmp
prefetchw
xlat
jno
in
mov
sub
rclb
pmulhw
push
iret
jle
aaa
fisubrs
js
xchg
adc
xor
jo
inc
add
test
jno
cmpsb
faddl
dec
pop
sahf
in
jl
push
push
inc
adc
subl
sbb
mov
push
divb
iret
or
sbb
ja
insl
popa
jl
xchg
cmp
xor
add
xchg
dec
andl
inc
aas
pop
shlb
mov
inc
mov
ficoml
mov
movsl
ss
enter
dec
xchg
cwtl
cli
in
into
mov
out
and
xor
imul
sbb
loopne
xchg
and
jbe
mov
movsl
mov
mov
mov
mov
test
adc
and
cltd
in
sbb
stos
mov
mov
push
stos
fbld
out
jmp
cmpsl
mov
arpl
xor
popf
popf
push
ret
jg
mov
rcll
xchg
inc
or
sub
adc
lcall
inc
in
outsb
mov
cwtl
inc
jb
add
push
lods
loopne
gs
push
sahf
popf
aas
loopne
mov
push
lret
mov
mov
or
mov
adc
jb
dec
pop
mov
out
mov
aas
push
jl
lods
adc
and
adc
repz
pusha
out
mov
and
into
add
adc
push
int
in
pop
mov
lods
xlat
or
mov
ret
sbb
imul
aad
mov
inc
cmp
icebp
jle
mov
push
loop
dec
insb
stos
push
pop
rorb
jbe
in
sbb
lcall
ret
stos
inc
jge
into
adc
stos
and
in
and
int
loop
mov
sub
enter
jae
adc
cmp
xchg
sti
out
aad
push
cld
arpl
shll
mov
in
xchg
push
mov
es
pop
in
dec
pop
aaa
mov
dec
movsl
lret
gs
add
stc
inc
and
aaa
insb
outsl
mov
lods
loopne
fsubrl
and
jae
sbb
or
push
inc
sub
movsl
dec
mov
adc
in
scas
push
sub
daa
dec
pusha
out
inc
fs
outsl
cmpsl
shll
lds
push
aad
daa
mov
arpl
sahf
loope
push
ret
lret
je
push
dec
or
and
stos
sahf
out
imul
out
int
jns
insb
xchg
jns
jae
sbb
rolb
sub
out
push
dec
ljmp
add
gs
jae
fstpt
add
ja
push
xor
mov
outsl
mov
adc
jge
jg
aaa
adc
fisubs
test
pop
scas
pop
orl
imul
push
ljmp
jne
sbb
ret
mov
aad
test
push
aam
pushl
xlat
sub
decl
jmp
arpl
fnstcw
shll
jbe
push
xchg
dec
add
jge
lret
fcmovu
xchg
roll
mov
inc
cltd
fwait
in
push
dec
je
pushf
adc
sbb
adc
sbb
aas
stc
pusha
xchg
shl
or
inc
lahf
xor
negl
mov
mov
push
movsb
jb
aas
or
rcrl
outsb
mov
out
pop
in
push
xorl
popf
jge
pop
in
pop
dec
mov
mov
sahf
call
push
aad
rorl
ret
dec
mov
mov
sbbb
fsubp
mov
stos
inc
sahf
cmc
dec
in
push
test
fxch
and
sti
fldenv
fcoml
inc
stc
cmp
cld
xor
out
mov
dec
in
call
shll
stos
fisubs
xchg
leave
push
push
adc
jg
das
mov
adc
sbb
in
lret
inc
sbb
mov
lret
clc
jo
xrelease
xchg
sub
dec
shll
jne
jge
xchg
int
sub
sarl
and
push
fidivl
sub
inc
hlt
int3
out
add
lock
not
rorl
je
cmp
inc
jge
push
cmc
lret
lods
imul
fistps
sbb
lea
test
sbb
sbb
and
cmp
xchg
stos
das
mov
arpl
push
out
xorl
data16
scas
test
sbb
xchg
iret
sahf
outsb
dec
cmp
fdivrl
jne
mov
iret
flds
enter
pop
testl
and
dec
mov
aam
lret
das
insb
push
fadd
mov
xlat
sub
imul
push
mov
xor
movsb
insl
rcll
nop
loopne
pop
insl
repz
out
icebp
loop
shll
push
pop
idivl
scas
test
xchg
mov
jmp
in
and
push
testb
jmp
adcl
push
iret
xor
pop
and
incb
aas
lret
sbbb
inc
mov
xlat
jmp
mov
adcb
hlt
fdivrl
cmp
fidivrl
inc
or
lds
and
adc
dec
mov
popf
jae
dec
pop
pop
cld
lods
pop
dec
sbb
cld
cwtl
les
test
rclb
mov
imull
adc
mov
mov
pop
in
stc
les
jmp
test
dec
xor
jl
fnstcw
les
lret
add
addr16
arpl
lret
imul
lea
cmpsb
pop
cmpsb
ds
cmc
sbb
je
insl
ljmp
lret
adc
sbbb
jle
stc
sti
pop
insb
cmc
pushf
add
or
xor
xorb
in
repnz
mov
leave
daa
ret
sub
sbb
mov
pop
inc
xchg
pop
mov
cmp
in
sub
and
inc
nop
pop
and
sti
imul
popl
js
xor
cli
dec
xchg
mov
sbb
mov
icebp
inc
in
pop
ficoms
test
jb
les
adc
clts
filds
push
sbb
clc
cmp
xor
fsubrl
inc
stos
inc
in
jo
mull
dec
and
xchg
aas
call
mov
mov
in
adc
jae
dec
adc
pop
call
mov
cmp
pop
lcall
nop
aam
mov
mov
mov
dec
enter
adc
sub
pop
int
sti
sbb
loop
in
push
fistps
inc
xchg
pop
cmp
ljmp
add
mov
popl
sub
js
mov
inc
pop
jbe
lcall
cmp
icebp
jmp
mov
fstps
mov
test
shll
dec
mov
out
loop
gs
les
lock
jl
sar
cmp
popa
and
jno
decl
sbb
xchg
ret
jne
or
push
lahf
repz
cwtl
xchg
out
lret
cmpsl
aas
notb
cmp
sub
cwtl
mov
push
in
push
pop
xchg
jo
adc
dec
xor
xchg
xchg
jp
pop
das
cmp
xchg
push
xchg
loop
aaa
jne
inc
lret
jbe
aad
scas
jle
dec
in
mov
push
inc
push
xlat
loop
sbb
sbb
bnd
xor
sbb
dec
jmp
leave
sbb
pop
repnz
sub
jge
pop
leave
stos
push
jo
ljmp
sahf
xor
daa
cmpsb
mov
mov
popl
pop
dec
pop
sar
sarl
out
mov
push
mov
mul
push
lods
outsb
mov
leave
dec
stc
out
mov
insb
shll
icebp
inc
dec
xchg
mov
mov
call
lods
fists
enter
jae
cmp
jne
outsb
jmp
rorl
push
out
repz
inc
sbb
adc
ficomps
mov
ret
aaa
cmp
cmc
mov
pop
out
leave
ja
jb
loopne
lahf
sub
je
and
or
sbb
cmp
cmc
fldl
sbb
push
mov
test
sti
dec
rol
ja
xchg
imul
stc
mov
sub
xlat
mov
sbb
xchg
fsubrs
sub
mov
and
sub
test
cltd
xor
js
fwait
mov
xor
jge
out
scas
es
xchg
loopne
jbe
xchg
int3
hlt
ds
in
icebp
rcrb
jp
cmp
cmp
lahf
popf
hlt
rorb
cmpsb
sub
cwtl
mov
push
xor
inc
test
das
sbb
mov
xchg
mov
xchg
shll
mov
xor
repz
pop
mov
pop
dec
cs
imul
in
movsb
push
pop
loopne
mov
daa
ficompl
lahf
outsl
inc
add
aad
sub
repnz
jp
pop
jecxz
jo
ja
mov
mov
insl
pop
insb
xchg
rcl
mov
movsl
dec
cmpsb
mov
popf
shr
fcompl
cltd
cmp
push
xor
mov
popa
mov
repz
xlat
cmp
inc
sbb
mov
cli
xchg
push
pop
push
cmpsb
jmp
dec
in
jns
imul
stc
lods
inc
cmpsb
push
push
xchg
mov
movsb
pop
cmpsb
iret
jmp
out
sar
or
mov
push
cli
cmpsb
jmp
daa
inc
std
and
cmpsl
dec
xlat
mov
adc
std
pop
int3
xor
lds
dec
xor
push
pop
cli
fdivs
pop
fstpl
mov
frstpm(287
loope
mov
add
ljmp
cmpsb
fisubl
out
cmp
pop
lahf
ds
and
cmp
mov
xor
mov
daa
fsubs
pop
iret
aam
shlb
in
and
cs
popa
pop
stc
mov
push
xchg
sbb
push
xchg
xchg
lret
pop
arpl
xchg
test
mov
jb
sar
outsb
inc
mov
imul
andb
loope
adc
pop
sub
dec
in
je
add
push
xchg
pop
mov
mov
and
mov
fwait
imul
lea
cmc
pop
in
cmp
scas
and
sbb
outsb
pop
mov
dec
mov
aaa
sub
sub
adc
push
or
cmp
repnz
leave
cmc
fistpl
or
push
hlt
jbe
popa
pop
add
or
and
sti
fsubr
jbe
mov
fwait
push
push
orl
adc
pushf
decl
jmp
inc
adc
dec
popf
mov
mov
daa
movsl
cmpsl
fwait
adc
gs
ficoms
mov
jns
int
cmp
xor
cmp
loopne
fwait
or
adcb
xchg
hlt
mov
inc
cltd
cld
lret
fbstp
loope
stos
xor
sbb
mov
jnp
adc
lret
and
pop
mov
subb
fs
mov
and
test
in
lret
sbb
aad
lret
mov
mov
jmp
sub
pop
mov
add
js
jge
pusha
imul
inc
xchg
adc
fmull
xchg
mov
mov
mov
in
pop
jge
bound
loope
jp
dec
adc
cltd
xor
mov
and
imull
adc
jnp
jge
mov
hlt
in
daa
jle
push
imul
ljmp
dec
ds
mov
sbb
xlat
xlat
pop
mov
ss
add
outsl
or
sbb
push
je
adc
xchg
sbb
pop
in
fwait
imul
push
jo
data16
sub
inc
gs
mov
ret
jno
dec
add
jge
scas
sub
ret
xchg
pushf
lea
ret
sbb
imul
mov
sub
cwtl
addr16
ret
cli
cs
push
and
mov
in
pusha
data16
jb
jl
test
lret
jo
mov
fs
lock
and
sbb
push
daa
dec
mov
xor
jmp
cmc
inc
das
sahf
cld
push
andl
pop
cmp
cmpsb
cmp
xor
adc
sub
rorl
ljmp
mov
daa
inc
cs
sub
xchg
pop
sti
push
icebp
cmp
jge
popa
cli
cmpb
mov
lea
je
fldt
sahf
js
repnz
xor
test
fcompp
lret
sub
popa
push
daa
movsb
add
js
popa
pop
and
and
scas
mov
jl
jp
into
ficomps
push
shlb
sbb
push
cli
insl
imul
ss
lock
or
movsb
into
adc
add
jbe
pop
repz
xchg
jp
xchg
sti
lret
cld
into
sbb
adc
ljmp
popa
iret
clc
out
cmp
ja
icebp
out
xchg
sub
adc
dec
movsl
lret
jp
loope
movsl
xchg
cmpl
fcomps
add
sti
pop
and
cmpsl
pop
dec
loop
shlb
enter
push
addr16
scas
jnp
push
pop
add
insb
lock
jns
push
ja
dec
jb
mov
sbb
push
test
enter
lret
addr16
imul
ds
dec
mov
icebp
jle
test
mov
add
popf
movsl
inc
pop
push
add
dec
inc
sarl
int
lods
xchg
add
mov
add
popf
leave
xchg
lea
sar
mov
lods
testb
ds
in
xchg
hlt
xchg
mov
dec
lcall
and
push
lret
cmp
std
xchg
jp
or
sub
sbb
sub
mov
sbb
pop
pop
mov
push
sbb
sti
lea
add
push
sub
movsb
aaa
lret
aas
movsl
and
xor
rorl
adc
jl
adc
dec
xor
cs
repz
mov
xlat
fwait
call
cli
push
out
pop
jecxz
out
pop
xor
fmul
mov
xor
and
cs
pop
lods
shl
cli
mov
and
sbbb
mov
lret
or
in
pop
pop
imul
mov
cmp
jne
jbe
lods
data16
addr16
js
popf
push
mov
mov
ret
push
xor
mov
xor
inc
pop
sbbl
xor
in
call
inc
cmp
xchg
xchg
ds
mov
orl
dec
xchg
cmp
les
push
dec
sbb
cmp
ror
lahf
push
pushf
lahf
mov
dec
lahf
pop
adc
mov
addb
jmp
push
test
lret
and
and
cmpsl
dec
adc
lea
imulb
jnp
orb
nop
mov
lods
and
les
sbb
or
ficoml
sbb
lahf
dec
arpl
jmp
xchg
jae
add
lock
inc
dec
bound
in
scas
jae
hlt
ret
mov
jo
push
punpckhdq
leave
push
js
xchg
out
adc
xor
and
sub
pusha
les
sub
divl
cmp
jnp
sahf
inc
movsl
pop
lret
or
mov
xlat
xor
dec
push
cltd
repz
sbb
sbb
sti
scas
xchg
stos
sub
sbb
ja
xor
lods
mov
sbb
es
adc
jle
cmp
jo
ret
mov
xor
pusha
ja
sub
nop
push
rcll
addl
jle
lods
movsb
into
sub
cmp
in
int3
daa
les
ja
stos
mov
pop
mov
xchg
mov
insl
hlt
movb
ret
add
mov
into
jg
popa
or
pop
mov
cmp
in
mov
sub
adc
lahf
test
mov
or
xor
xchg
push
ret
call
jmp
mov
outsb
xchg
insb
xchg
inc
xor
sbb
popa
into
scas
out
mov
rolb
dec
repnz
gs
pop
scas
loopne
add
sarl
pop
xor
aas
add
inc
xchg
sub
flds
cli
outsb
insl
inc
inc
xor
lahf
fwait
inc
lods
dec
cwtl
imul
sub
bound
insb
dec
int
popa
push
sub
adc
xor
gs
jb
xchg
push
jge
add
mov
inc
xor
pop
lods
out
pop
pop
in
test
lea
stc
lods
out
jo
inc
sti
jmp
daa
push
lea
popf
jns
sbb
mov
adc
fs
movsl
push
mov
enter
adc
xlat
mov
pop
dec
pop
mov
in
pusha
imull
adcb
jo
xchg
mov
add
stc
outsb
mov
hlt
or
mov
sarb
dec
repz
inc
gs
and
in
xorl
repz
in
pop
mov
sti
scas
in
je
clc
idiv
rcr
inc
and
and
bound
pop
inc
xchg
push
andb
xchg
xor
lds
jp
scas
add
movsb
enter
mov
inc
mov
lods
mov
or
adc
push
lds
out
scas
in
xchg
xor
fistpll
pop
adc
cmp
cmpsb
bound
pop
adcb
add
cmp
pop
test
int
test
in
arpl
jl
loop
inc
mov
hlt
dec
inc
or
dec
call
sbb
or
cld
mov
mov
push
push
jg
in
lea
push
outsl
scas
xchg
pop
mov
or
mov
icebp
add
pushf
adc
jnp
pop
das
cmc
dec
xchg
andb
pop
mov
xlat
push
xor
xchg
notl
orl
mov
inc
dec
movsb
sbb
adcl
cwtl
fadd
xchg
mov
aam
and
cltd
repnz
mov
adc
adc
cld
sarb
clc
jnp
stos
lret
lret
push
fcoml
test
mov
and
pushf
push
push
sub
fs
cmc
sub
lret
or
xor
jo
xor
or
and
imul
loope
popf
and
adc
je
sub
or
xor
js
fs
jp
jns
aam
out
ds
daa
or
push
std
jge
mov
pop
add
and
cmp
aas
scas
fs
mov
negb
ljmp
popf
inc
jle
lods
stc
mov
out
mov
adc
jl
cmp
scas
pushf
lret
sti
xchg
aam
hlt
cmp
pop
stc
cltd
aaa
in
lgs
stc
lods
xchg
lods
adc
jne
jae
jg
fidivs
pushf
cltd
gs
mov
add
xor
pop
sbb
imul
jbe
icebp
mov
push
rcrl
mov
aas
and
cwtl
dec
cwtl
rcr
mov
and
sub
cli
sub
sbb
test
or
fldenv
outsl
in
pop
lods
pop
push
cmp
jb
out
jo
lahf
movsb
js
jmp
cmp
xchg
mov
cld
sbb
scas
nop
xchg
xor
jb
insb
ds
aad
push
sub
push
mov
nop
or
fldcw
xor
movsb
mov
sbb
fcoms
in
ja
popl
inc
scas
fwait
xor
stos
loop
inc
dec
mov
imul
in
mulb
adc
mov
insl
loope
dec
lahf
push
les
pop
push
push
jl
out
jge
repz
ja
lahf
xchg
dec
imul
adc
mov
das
pop
jns
xchg
icebp
and
push
mov
dec
sub
fists
ljmp
in
xchg
jle
ss
cmp
mov
mov
stc
movsl
dec
ds
cld
mov
fsubrl
fsts
mov
add
sub
lods
dec
sub
push
sbb
mov
pushw
push
enter
stos
cmc
mov
out
cmpsb
popa
dec
in
push
and
imul
jge
mov
jp
xchg
mov
and
xor
cmpsb
sub
add
push
stc
inc
fildll
icebp
es
neg
fstpt
fcmovu
icebp
inc
ja
mov
jne
sub
xchg
inc
cmp
inc
inc
xorl
cmp
xor
loopne
pushf
in
mov
ret
pushf
dec
dec
and
sahf
mov
adc
fdivr
xchg
push
pop
push
aad
inc
cli
loopne
xchg
and
mov
mov
mov
push
jecxz
inc
inc
ret
pusha
jg
into
mov
add
mov
lea
std
arpl
mov
fimuls
mov
stc
sbb
xor
fstpl
notl
stos
das
leave
mov
out
pop
fcompl
inc
jecxz
jg
aad
push
xor
es
fstps
jg
cmp
cmp
mov
lock
inc
adc
inc
xor
push
enter
pop
cwtl
jle
fldl
xor
cs
js
cmc
cmp
cmp
lcall
mov
xchg
loope
add
sbb
mov
add
shl
mov
loop
adcl
xlat
push
inc
flds
or
sbb
mov
jae
push
movsl
std
push
cmp
ret
movsl
out
mov
loopne
pop
fxch
les
shr
add
mov
mov
leave
mov
push
movsl
xor
mov
into
adc
cs
aam
inc
add
jno
aas
jp
push
stos
scas
push
sub
lret
out
dec
sub
insb
jmp
rolb
aas
jle
xchg
push
dec
pusha
fucomip
add
das
shlb
repz
imul
xchg
xchg
lret
cmp
rclb
je
mov
bnd
push
test
cs
push
lock
pop
rcrl
sub
xchg
lahf
lret
sub
pop
cmpsl
sarl
pop
aad
pop
jecxz
adc
fidivrs
sub
mov
xchg
fsubrl
xor
aas
cs
mov
outsl
mov
notb
fistl
fnstsw
push
push
add
fs
pop
fwait
xor
xchg
add
xchg
ss
stos
arpl
mov
push
icebp
sahf
loop
clc
mov
ficoms
adc
stos
xchg
mov
mov
xor
xchg
scas
push
inc
inc
jg
jg
inc
fldpi
mov
ljmp
in
adc
aad
aaa
jbe
push
sub
mov
push
test
idivl
dec
iret
mov
mov
mov
orb
sahf
pop
xor
jmp
sbb
in
xor
cmp
movl
mov
sbb
add
jl
data16
cmp
arpl
adc
aas
or
and
or
dec
jle
loop
ret
sub
mov
pop
lods
mov
fidivrs
cmpsl
cmp
mov
addr16
fildll
dec
ja
push
insb
lret
xchg
jg
cmp
mov
dec
cltd
scas
pop
sbb
popa
test
mov
fadd
ret
push
es
push
pop
ret
int3
mov
je
dec
pop
push
dec
jmp
daa
pop
or
cmp
daa
outsl
in
mov
or
fwait
cmp
mov
lcall
cmpsb
mov
pop
scas
mov
mov
sti
frstor
xlat
mov
sbb
push
pop
jle
cltd
mov
dec
dec
sub
out
jae
or
lcall
in
in
dec
fbstp
sub
push
test
push
test
xchg
test
push
inc
ljmp
leave
sti
mov
xchg
mov
shll
and
xchg
shl
scas
js
sub
addr16
scas
icebp
sbb
xchg
pop
ret
adc
das
and
test
xor
cli
or
jecxz
add
in
out
stos
cmp
roll
movsl
xlat
push
frstor
and
lret
movsl
xor
sbb
mov
or
adc
loope
bound
mov
cmp
fmul
rcr
ret
sahf
ret
jmp
clc
pop
divb
mov
add
leave
mov
mov
inc
sti
cmc
or
fldenv
push
test
subb
lods
sahf
mov
mov
push
les
sbb
or
fmuls
push
cmp
sahf
inc
adc
faddl
fstl
mov
bound
mov
ja
lock
aas
movsb
in
adc
sub
in
icebp
mov
mov
rolb
mov
cmc
dec
xchg
or
sbb
mov
add
pop
pop
mov
ss
add
pop
pushf
mov
xor
or
sub
fnstsw
hlt
ja
sahf
in
aas
mov
sub
paddw
flds
xchg
push
test
inc
xorl
aaa
test
jge
std
mov
in
cld
push
and
lcall
imul
dec
pop
sub
in
aam
mov
mov
rcl
cmpsb
repnz
xor
out
jnp
mov
pushf
mov
je
jg
mov
call
pmuludq
and
cmc
adc
or
xor
dec
pop
int3
mov
lret
jno
add
dec
inc
inc
mov
push
mov
inc
jne
int3
les
mov
xlat
push
incb
mov
xchg
clc
mov
lret
fimull
mov
inc
gs
ret
mov
cmp
lret
jp
pop
jp
out
push
fs
mulb
rcrb
cli
or
ret
and
in
mov
arpl
inc
add
dec
adc
aam
mov
pop
sub
incb
xchg
xor
dec
jmp
leave
sahf
ljmp
data16
mov
push
aam
sbb
sub
leave
out
jne
cltd
mov
cld
mov
add
add
xchg
or
sub
out
out
mov
sub
out
inc
add
mov
test
mov
jnp
loope
sbb
mov
and
adc
sbbb
push
into
call
xchg
cld
in
pop
jge
pop
enter
data16
inc
inc
cmp
addr16
in
mov
xchg
dec
mov
and
jnp
das
xchg
mov
adc
cmp
mov
fsubs
stos
mov
push
cmp
fildl
call
push
stc
das
mov
push
push
add
inc
fcompl
pop
push
lds
test
push
push
pop
repnz
mov
jns
outsl
arpl
push
je
int3
push
pusha
dec
push
jl
add
pop
push
shlb
subl
sbb
mov
ds
adcl
pop
testb
imul
push
xor
adc
stc
cli
fiaddl
pop
add
cmc
and
cmp
mov
xchg
enter
cmp
jns
mov
ljmp
mov
and
xchg
es
fidivrs
jl
scas
inc
sbb
shl
loop
jnp
test
sub
lret
push
sub
mov
xor
inc
je
sub
inc
cmp
in
bound
jp
xlat
mov
xchg
sub
insb
xchg
bound
xchg
xchg
and
inc
mov
mov
rcr
jecxz
mov
fsubrl
xchg
or
cmpsb
lret
inc
dec
repz
fisubrl
xor
cli
lods
stc
scas
adc
pop
push
jle
pop
or
push
call
push
xchg
sub
dec
pushf
clc
lods
jg
flds
pop
mov
and
cmp
mov
mov
sub
mov
daa
fidivl
in
lds
mov
jmp
lcall
into
cli
xor
or
mov
cmp
int3
and
mov
cmp
inc
mov
outsl
push
or
pop
xchg
incb
into
fcomip
stc
idiv
testb
pop
adc
inc
cwtl
popf
loop
cmp
push
lea
add
adc
cmp
jp
cmp
sub
jl
xor
or
cld
mov
mov
cmpb
inc
or
inc
leave
pop
leave
cld
shr
lds
sub
int3
push
in
cmp
outsb
in
les
adc
cwtl
xchg
mov
ljmp
sbb
shrl
cmp
cmc
push
movsl
push
push
dec
stc
jp
fcmovnu
and
fadds
push
pop
out
dec
push
setns
push
data16
movsb
shr
inc
fiadds
jns
mov
cltd
adc
mov
adc
sbb
ja
xchg
jne
jo
icebp
out
dec
jne
pushf
jb
repnz
enter
sub
ds
or
movsb
cmc
int3
adc
outsb
inc
dec
push
test
push
vpunpcklwd
movsb
cmp
ror
or
cmp
das
xor
stc
cltd
fmull
shlb
mov
mov
scas
mov
pop
imul
xchg
clc
xor
fwait
mov
dec
arpl
mov
fistl
sti
iret
cmp
adc
mov
add
aas
test
push
sbb
mov
out
rclb
addr16
js
in
xchg
test
pop
xlat
gs
hlt
xchg
repnz
int3
sbb
rclb
cmp
lea
cwtl
xor
pop
push
xchg
mov
lods
ret
pop
push
test
in
iret
mov
sbb
aad
je
pop
xchg
nop
outsl
push
imul
mov
test
arpl
mov
repnz
test
pop
mov
out
add
adc
ss
push
lds
mov
mov
xchg
pop
and
mov
adc
dec
out
je
adc
cmpsb
jecxz
lcall
or
push
adc
out
mov
cs
loop
int
and
lea
leave
roll
pushf
mov
inc
jge
add
xchg
iret
xorb
subl
mov
pop
outsb
das
and
mov
dec
loopne
pop
out
fidivs
pushf
das
adc
loopne
push
sub
fldenv
cld
fs
add
lods
add
adc
outsb
dec
lds
cmpsl
in
xlat
push
xchg
dec
cwtl
mov
ds
mov
std
or
cmc
mov
sbb
ret
inc
mov
fcompl
adc
mov
iret
mov
xchg
xchg
ja
cs
fimuls
out
and
mov
mov
push
or
and
add
add
out
adc
mov
xor
sbb
ss
shll
idiv
iret
dec
xchg
sti
jle
gs
out
int3
loope
cmp
or
push
jno
mov
sub
cmp
sub
repnz
mov
mov
cmovb
shlb
jbe
test
mov
repnz
sbb
lock
cmp
mov
mov
adc
adc
outsb
cld
mov
dec
cmpsb
pop
int
lret
pop
jmp
lods
pushf
mov
frstor
fisttps
std
mov
and
lea
jge
mov
pop
in
pop
test
mov
dec
add
xchg
or
insb
mov
push
dec
sub
adc
push
jp
xor
bnd
movsl
sub
push
popf
mov
add
jnp
sbb
mov
sti
sahf
fwait
dec
popf
aaa
stc
das
test
aaa
enter
lock
mov
mull
ja
inc
pop
mov
out
xchg
nop
cli
imul
sbbb
add
scas
mov
inc
ljmp
movsb
test
mov
lret
in
xor
pop
clc
sub
sarl
aas
mov
mov
in
xchg
fwait
popa
test
fbld
lds
xchg
or
in
pop
cmp
jns
mov
add
push
bnd
pushf
sahf
stos
xchg
int
sub
leave
popa
dec
out
pop
out
jb
or
and
sbb
sub
iret
push
xlat
push
push
mov
adc
arpl
and
pop
sbb
cmp
insl
cmpsb
pop
jne
mov
xchg
mov
cmc
test
xchg
mov
cmp
fwait
push
scas
mov
or
cmpsl
fildll
push
into
scas
mov
xchg
nop
loope
mov
xchg
and
pop
sbb
push
adc
push
xor
fdivp
mov
fists
or
aam
jae
adc
popf
cmp
test
fidivl
je
cmp
cmp
mov
fcomps
jg
sub
cli
adc
call
mov
sahf
sub
jmp
ja
mov
jbe
sub
sahf
mov
push
sbb
mulb
fwait
arpl
cmpsb
stos
movsb
pop
outsb
test
cmp
outsb
jmp
cld
insb
cmp
mov
dec
ds
bound
jg
sub
mov
dec
std
mov
sub
fistpll
xchg
test
movsb
icebp
xor
push
adc
cmpsb
cli
orb
dec
rcll
cwtl
stc
cltd
or
pop
adc
aaa
out
fdivrs
sti
sub
out
jo
adc
xor
pop
shll
jl
fdivr
push
aas
dec
push
scas
addr16
cld
jbe
int
jp
test
loop
sbb
test
xchg
cmc
inc
inc
jo,pt
mov
pop
lea
out
fnstsw
inc
or
mov
imulb
xor
mov
sbb
rcrb
inc
cmpsl
ja
rcrl
xorl
sub
ja
andb
jge
popa
pop
jp
sub
mov
scas
ljmp
jmp
test
gs
in
sbb
lods
int
xchg
xchg
mov
mov
imul
jge
clc
mov
cmpl
daa
sbb
cmc
fucom
sbb
call
or
lock
adc
add
lret
push
mov
test
pop
bound
jne
pop
sub
ret
fwait
jo
out
add
sub
ja
push
pop
in
js
add
andb
mov
aas
insb
cltd
adc
jl
adc
lock
nop
jo
jg
xor
lcall
call
stos
sti
outsb
fstpt
fistpll
test
mov
outsb
inc
mov
dec
mov
pop
ja
sub
ljmp
cmc
mov
mov
pop
outsl
sti
and
mov
sub
push
jae
movsl
inc
ja
outsl
loope
pop
loope
sbb
push
pop
cli
fstps
fbstp
mov
or
push
push
test
push
cmp
inc
sahf
xor
fidivs
cld
inc
dec
shl
sbb
jo
adc
nop
push
push
insb
das
push
outsb
pop
push
adc
dec
lahf
jb
dec
dec
popa
pcmpeqd
or
call
mov
out
bound
xlat
sub
jp
cs
mov
add
cmp
mov
mov
pop
inc
fmull
cmpsb
fildll
mov
out
lds
fs
lock
leave
and
fcomps
imul
rcr
add
push
test
push
cld
jnp
rol
xchg
shrl
inc
mov
push
inc
out
pop
iret
flds
sahf
mov
mov
and
loopne
sbb
fwait
test
sub
aas
lret
mov
lods
push
mov
cmp
or
jb
lock
gs
jbe
lcall
or
push
push
ds
mov
in
inc
lock
mov
push
ret
or
stos
or
and
repz
sbb
les
movl
jo
js
mov
dec
lea
imul
mov
popf
push
add
sti
sbb
mov
mov
jo
cld
outsl
stos
fwait
jnp
shlb
and
orl
popa
mov
xchg
add
fsubr
jne
repz
repz
mov
ja
adc
dec
imulb
inc
shll
xor
imul
cmp
sbb
xchg
ja
ret
cmp
jmp
push
dec
dec
xchg
push
in
jp
mov
inc
data16
rorl
pop
out
das
jb
test
ja
inc
dec
test
js
call
jmp
cmp
imul
push
cmp
sub
testb
sbb
pop
xor
inc
and
or
add
sbb
cwtl
arpl
add
mov
in
lcall
mov
int3
fstl
push
aas
fmulp
push
popa
push
mov
cld
aas
mov
push
loope
jp
mov
addr16
push
stos
mov
mov
adc
test
rcrb
pop
daa
mov
mov
adc
jb
adc
das
jle
jle
fcmovu
out
jge
negb
sub
xchg
mov
in
mov
call
shlb
jb
lahf
adc
jge
addl
out
pushw
pop
out
pop
pop
mov
movsl
imul
add
adc
pop
popf
js
dec
cmp
dec
xor
mulb
sbb
daa
inc
and
cmp
xchg
mov
ja
push
adc
sub
aad
mov
mov
lock
xor
xor
clc
jbe
test
out
das
xchg
inc
mov
push
insb
jl
addr16
jg
pop
mov
stc
dec
xchg
jns
sub
dec
cmp
mov
xchg
push
fldt
sbb
mov
hlt
cmpsl
mov
mov
ja
mov
push
dec
ret
jb
mov
sbb
cmp
mov
cwtl
cli
mov
and
jo
inc
enter
sbb
pop
add
or
jg
push
sbb
ret
subl
jmp
or
pusha
in
scas
xor
pop
daa
adc
cs
fcomp
xchg
mov
jns
lret
nop
dec
hlt
fucomip
xlat
hlt
sbb
fldenv
push
mov
inc
aaa
lcall
jae
push
mov
mov
dec
sbb
mov
icebp
jb
sub
mov
jbe
nop
jno
xchg
hlt
mov
ror
or
mov
imull
loopne
lods
iret
lahf
xchg
and
pop
xchg
nop
or
repz
push
out
std
test
fstpl
jp
push
xor
push
lods
ss
aas
lods
inc
in
jae
dec
scas
mov
rcrb
lds
mov
aad
cmp
xor
scas
jmp
int3
or
ret
mov
sbbb
jp
push
cmp
imul
sub
xchg
movb
insb
push
cmp
mov
mov
cld
mov
dec
mov
fwait
les
add
int
ljmp
hlt
ret
pushf
stos
add
loope
fstl
mov
inc
stc
cmp
xchg
leave
cmp
icebp
outsb
add
notb
sub
dec
mov
xor
idivb
in
in
lods
andb
inc
push
and
push
jl
sub
or
pop
daa
sub
jecxz
add
or
fcmovnb
scas
dec
fdivs
push
xchg
mov
popf
xor
jno
fisubrl
mov
mov
adc
and
cmp
dec
xor
inc
jmp
xchg
arpl
cmpl
scas
push
xchg
addl
repnz
cwtl
inc
cld
pop
call
sub
xchg
add
jmp
mov
clc
iret
jne
push
pop
test
inc
mov
jnp
sarl
into
or
xchg
cmp
sarl
les
ja
lock
or
adc
shll
cmpsl
cmp
adc
sbb
xchg
out
xchg
movb
push
and
fcoml
cmp
out
shlb
jle
dec
fldcw
lods
js
sub
movsl
adc
push
push
repz
cmp
das
or
and
pop
jg
xor
scas
repnz
fdivrl
mov
mov
js
mov
mov
ja
jmp
adc
pop
sbb
hlt
jnp
popa
and
mov
cltd
jbe
or
cld
lods
aaa
repnz
sub
and
das
jb
dec
xchg
fsubs
lahf
std
pop
cli
sub
fnstsw
ljmp
mov
test
cmp
jle
loope
dec
pop
rorl
xor
xor
into
mov
mov
jnp
cmp
scas
or
lcall
gs
stc
sub
aam
stc
mov
add
push
out
scas
cmp
js
and
xchg
cmp
pop
add
mov
sub
ds
shll
stc
push
cltd
jns
adc
mov
sub
loop
pop
mov
cmp
push
mov
jae
pop
and
mov
leavew
adcl
inc
adc
sbb
jb
mov
iret
out
pop
adc
fistps
push
mov
xor
les
xchg
fldt
dec
adc
sub
hlt
mov
pop
mov
xchg
xlat
aas
add
add
test
mov
xor
lea
inc
sahf
cmpxchg
push
mov
out
or
adcl
inc
and
fcomip
xor
sub
call
cmpsl
xlat
imul
lcall
add
inc
nop
arpl
inc
ret
mov
pop
sti
cmp
jp
jne
dec
mov
call
jnp
icebp
mov
pop
cmp
imul
mov
insb
loopne
adc
inc
mov
es
popl
in
add
andl
fldl
sbb
sbb
fnstcw
fcomps
mov
fists
setl
jno
dec
test
cld
in
add
ljmp
mov
xchg
pop
jne
sbb
test
scas
dec
in
xorl
cmp
jmp
movsl
jg
jae
push
clc
and
adc
sub
mov
sub
insl
mov
or
mov
ret
xchg
jbe
out
xchg
mov
mov
int3
mov
sbb
cld
addr16
pushf
xlat
cmp
divl
adc
mov
add
or
bound
orl
mov
test
inc
inc
adc
in
jbe
in
fdivr
mov
xchg
leave
aad
into
fisubrs
bnd
mov
jnp
movsl
or
add
sbb
ljmp
popa
test
imul
repz
sub
jp
lret
lcall
cmp
sbb
xchg
sub
mov
or
fs
out
paddq
hlt
mov
add
pushf
mov
jno
cmp
mov
loop
jae
leave
mov
adc
repnz
sub
ljmp
imul
pusha
sahf
xchg
andl
dec
dec
pop
jo
cmp
jb
pop
mov
scas
pop
or
sub
sbb
loope
loope
pop
xchg
add
pop
jno
push
dec
xchg
daa
sti
xor
jle
insl
mov
cmpsl
sbb
data16
mov
push
xchg
in
xchg
mov
inc
sbb
jb
jg
icebp
idivl
adc
outsl
rclb
pop
pop
stc
das
inc
push
mov
inc
xchg
scas
adc
mov
pop
push
push
cmpb
add
xor
loope
imul
pop
lock
ljmp
fwait
cwtl
mov
mov
daa
mov
sub
out
pop
push
inc
imul
mov
es
dec
repz
xor
stos
mov
int
jns
dec
sub
push
out
roll
lret
fdivrp
mov
adc
dec
fisttps
js
rcrl
cmc
inc
pusha
das
push
dec
push
mov
out
sbb
jmp
outsb
inc
test
inc
or
cmp
imul
test
xchg
rcrb
or
push
cmp
xchg
dec
sbb
xlat
fisubs
inc
mov
popf
push
icebp
ds
or
mov
xchg
mov
pop
mov
call
xchg
fs
in
lods
xchg
add
push
adc
ss
xabort
jmp
xor
mov
stc
inc
dec
clc
or
js
push
or
mov
insl
and
filds
jne
pop
dec
sahf
mov
int3
inc
push
scas
and
sbb
repnz
sbb
fmull
iret
jle
cmc
adc
push
jge
jmp
stc
jnp
cmpl
push
inc
jo
sbb
decb
jmp
mov
inc
fnstcw
lret
and
adc
rcrb
cmp
inc
mov
cmpsl
fs
xor
and
pop
xor
xchg
in
push
fwait
test
jnp
inc
inc
cmp
dec
hlt
int
ffreep
add
dec
pop
jg
out
push
shrb
mov
out
sub
out
test
je
jb
inc
sub
jmp
into
lret
loop
xchg
jl
in
push
lds
in
cmpsl
fdivr
jp
sub
xchg
int3
mov
mov
insl
xchg
xchg
les
loope
data16
lods
sbb
pushf
cmp
inc
inc
fwait
iret
imul
push
loope
iret
and
and
lcall
pop
push
cld
shll
mov
int3
cmpsb
pop
pop
xlat
jle
outsb
pop
das
xchg
pusha
lods
mov
stos
mov
sti
lret
sub
push
jbe
push
mov
loope
and
cltd
mov
push
sbb
shl
je
add
mov
jae
in
shll
sbb
adc
push
std
mov
shrb
mov
xchg
or
mov
mov
in
jno
adc
or
jl
push
adc
mov
out
push
jns
and
cli
push
sbbb
sbb
inc
outsl
cmp
mov
or
jl
lock
xor
popf
mov
adc
jne
loope
push
ret
pop
loopne
hlt
jp
out
cmpsb
inc
jge
jle
data16
addr16
adc
testl
aad
xchg
inc
sub
add
lcall
gs
outsb
xlat
sti
dec
sti
jbe
mov
add
int3
es
gs
aaa
cmp
imul
call
out
loope
scas
mov
mov
mov
popa
imul
lcall
icebp
jg
pop
lcall
insl
out
xor
inc
push
sahf
pop
add
sbb
leave
jge
add
jle
lods
leave
out
aas
test
cmc
adc
sbb
mov
ss
aad
cs
add
repz
fcoml
adc
lds
test
xchg
jecxz
mov
xchg
cmp
cmpsl
leave
jmp
scas
sub
inc
je
inc
adc
lods
cltd
inc
jns
aas
stos
in
jg
adc
je
in
les
sub
popf
sub
outsb
mov
sarb
std
js
movsl
xor
scas
sti
jae
lods
jnp
sbb
xchg
fldt
sub
add
inc
push
add
enter
xchg
jg
in
dec
push
int3
arpl
int
inc
pushf
fldl
ficoml
xor
mov
mov
in
pop
or
dec
or
jle
mov
or
add
fmul
ret
idivl
and
mov
sahf
ds
lea
rorl
in
aas
insl
gs
add
sub
shlb
adc
xlat
cmp
dec
xchg
sub
mov
push
adc
add
jle
hlt
inc
sbb
xor
das
movsb
adc
and
jge
fsts
fsubrl
icebp
ficoml
add
in
cmp
ss
dec
jmp
lret
sub
mov
xchg
sti
repnz
jle
pop
add
int
into
mov
call
test
pusha
xchg
in
dec
push
push
push
xlat
nop
nop
add
lea
sub
push
mov
mov
mov
out
sub
fstl
add
sbb
and
jle
stos
push
lret
cmc
push
pusha
ss
add
sbb
and
jmp
jb
or
adc
js
pop
nop
gs
negl
mov
adcl
imull
lcall
popa
es
sub
jmp
jbe
insl
movsb
add
sub
int3
test
pop
inc
jmp
push
ljmp
loopne
ret
flds
xor
pushf
cmc
lret
stc
addr16
cld
push
sbb
jge
adc
std
and
adc
sub
fwait
or
sub
inc
adc
fisttpll
jle
jmp
leave
lcall
sub
pushl
lret
xchg
or
jl
mov
jbe
xor
out
mov
clc
stos
shll
mov
cwtl
adc
mov
pushf
popf
sub
push
nop
sbb
in
aas
mov
pop
cmp
add
xchg
std
pop
stos
jns
lock
xlat
pop
xchg
dec
mov
cmp
mov
pop
push
pop
call
js
pop
inc
lock
rcll
fsubrl
jl
rol
sarb
pop
dec
adc
fnstsw
xorl
cld
adc
pop
js
mov
pushf
leave
sbb
mov
mov
dec
and
add
mov
inc
xchg
ret
mov
xchg
mov
pop
js
add
popf
jle
mov
jmp
mov
push
bound
adc
inc
cs
leave
pop
lds
adc
cld
xor
pop
add
mov
pop
xchg
push
jmp
mov
mov
sbb
jg
cmp
sbb
filds
push
fwait
xor
pop
xor
cmpsb
or
mov
sti
mov
in
or
shrl
out
adc
xchg
mov
jp
jne
push
subb
inc
sub
xchg
in
push
jp
push
pop
fwait
pop
xor
repz
imul
nop
and
pushf
sbb
mov
aas
jmp
divps
jl
sub
enter
lods
jmp
into
into
sbb
xchg
mov
aad
neg
dec
insb
outsl
loope
mov
mull
mov
imul
xchg
adc
cmpsb
lock
mov
jecxz
lret
fwait
and
ret
ds
in
mov
mov
sbb
aad
mov
pop
add
sub
iret
xchg
test
mov
daa
jp
mov
inc
out
faddl
iret
repz
scas
repnz
mov
adc
in
mov
movsl
in
movsl
lods
jae
ret
repz
pop
into
jne
clc
subl
pushf
mov
movsl
inc
lods
mov
lcall
loope
lahf
dec
test
call
mov
test
jo
mov
arpl
test
das
jge
dec
cltd
push
lods
inc
mov
cmpb
and
orl
push
int
lods
jl
or
fwait
pop
ret
dec
sub
inc
in
adcb
out
jmp
dec
stos
sahf
out
xchg
ljmp
push
mov
push
push
pusha
test
push
xlat
sti
mov
dec
jnp
hlt
divl
outsb
sbb
outsl
call
pop
dec
icebp
ja
cmpsl
xor
and
pushf
pushf
lock
arpl
repz
iret
xor
xchg
xor
xor
push
push
fistpll
pushf
mov
xlat
cwtl
fwait
ret
addb
cmp
lock
ljmp
mov
scas
mov
dec
or
repz
jmp
mov
pop
iret
dec
mov
adc
ja
jae
fidivs
dec
in
adc
notl
mov
sbb
push
push
adc
imul
cmp
divb
jae
lcall
cltd
mov
popa
inc
mov
lret
adc
adc
dec
cmp
fdivr
repz
dec
ja
xchg
adc
adcb
aas
ret
inc
and
dec
dec
and
jmp
or
loope
in
outsl
ja
sti
pop
pop
mov
in
add
mov
and
sub
adc
idiv
in
lahf
mov
out
cmp
pop
in
ljmpw
hlt
push
outsb
pcmpeqw
lahf
pop
and
lret
out
lds
ret
or
inc
sbb
and
adc
cmp
loop
jge
and
inc
xchg
pop
lret
sbb
lea
lcall
js
shr
jp
daa
add
das
jg
xchg
cli
pushf
clc
ja
xchg
pop
cmc
or
cmp
pop
mov
in
rcrb
inc
sti
adc
inc
mov
add
testl
fwait
jl
mov
shll
mov
push
dec
or
add
insb
sahf
cmp
and
mov
mov
popf
inc
scas
sahf
mov
fcmovb
xchg
iret
imul
adc
adc
leave
cli
jbe
pop
push
cld
inc
int
leave
cmp
test
stc
js
jne
scas
mov
lret
jae
loope
inc
loope
inc
jae
dec
xchg
lods
mov
adc
mov
xchg
sbb
pop
xchg
shlb
mov
mov
or
mov
cmpsl
jg
push
and
xchg
pop
mov
xchg
mov
mov
lods
mov
add
mov
sbb
jo
fs
nop
mov
add
xor
jmp
nop
fdivrl
outsb
lds
call
lahf
outsb
add
adc
add
mov
mov
jmp
movsl
xor
fcmovnb
pop
lcall
adc
sub
outsb
stos
cld
jge
ret
inc
das
xor
idivb
mov
add
xchg
das
sub
mov
mov
enter
mov
adc
jle
mov
xchg
stc
push
cwtl
lea
dec
cld
bound
cs
pop
dec
adc
xor
gs
inc
inc
stos
stos
xchg
add
mov
orb
cli
outsl
cli
push
push
sahf
jp
push
xchg
dec
mov
pop
dec
fcompl
lods
ljmp
das
pushf
jnp
imul
add
xor
mov
jae
mov
shrl
sbbl
fimull
out
mov
and
inc
out
push
filds
dec
push
dec
sbb
andl
cmp
jno
lods
std
outsb
push
fldt
test
fwait
add
sbb
nop
nop
std
xchg
je
repz
in
lock
in
std
adc
mov
mov
nop
mov
fstl
movsb
sbb
mov
test
js
movsb
mov
mov
xchg
fcmovbe
add
xchg
xchg
add
fcmove
stc
xor
or
das
rclb
negb
mov
adcb
push
cwtl
xchg
mov
rol
push
insb
popf
sbb
and
test
and
push
mov
mov
clts
scas
xchg
cs
jmp
popa
rcrb
lcall
mov
les
xor
add
and
xor
mov
jg
mov
cmp
lcall
inc
cmc
callw
pop
mov
js
aaa
mov
mov
pop
mov
inc
and
mov
fsts
adc
mov
push
inc
cmpb
mov
aas
mov
sbb
ds
rcl
idivl
stc
std
pushl
jl
xchg
addr16
xchg
insl
jecxz
pop
scas
jno
js
xchg
dec
dec
pop
dec
cmpsl
jmp
adc
repnz
sub
imul
in
inc
pushf
jmp
int
fbld
es
xchg
and
loopne
mov
insb
sbb
push
loopne
sti
aaa
out
mov
int
mov
fs
jb
aaa
ds
stos
ret
xor
cmp
repz
out
mov
push
testl
cwtl
add
xchg
icebp
bound
mov
repz
mov
jo
pop
jns
arpl
cmp
lret
not
jae
testl
sbb
cmp
or
inc
ljmp
xchg
xchg
sub
stc
sarb
roll
fcmovnbe
cmp
ds
outsb
icebp
or
bound
and
sub
lds
dec
xchg
dec
or
push
das
aam
inc
sahf
inc
iret
call
test
dec
xchg
dec
mov
xchg
pop
in
mov
xchg
in
sub
adc
mov
mov
xor
sbb
sbb
xor
gs
fsub
icebp
jp
push
out
sbb
int3
push
mov
push
or
cmpsb
pop
cmp
mov
sbb
nop
or
xchg
popf
dec
mov
xchg
jp
test
rcr
jns
dec
lock
add
es
push
cmp
cmpsl
aas
sahf
cmovl
push
fdivrl
repnz
mov
insb
int
out
fnsave
cmp
neg
lods
daa
sarb
pusha
ljmp
dec
enter
jno
mov
cwtl
bnd
mov
mov
popl
ljmp
mov
fistpl
aaa
mov
cmp
or
mov
jb
dec
push
jl
call
adc
rcrb
cmpsl
cltd
or
push
push
xchg
bound
mov
cmpsb
or
pop
call
movsl
push
insb
ret
pop
sahf
repz
cmp
sti
scas
jae
imul
ss
push
mov
repz
pop
outsl
out
arpl
ss
jmp
aad
pop
sbb
push
enter
push
pop
les
sub
mov
jl
sub
add
lock
add
adc
dec
jmp
loop
imul
dec
add
not
out
lret
out
xchg
leave
out
stc
jbe
push
icebp
mov
sbb
sub
aad
iretw
sbb
mov
cld
clc
fisttpll
mov
int
imul
pop
add
ret
ret
push
sub
bound
vpmacsww
xor
icebp
mov
icebp
mov
fiaddl
add
fnstsw
test
adc
cmova
les
sub
xchg
fmull
xlat
fistpll
xchg
mov
or
jo
cmp
push
jae
inc
out
and
cld
and
xor
cwtl
in
mov
push
mov
sub
pushl
lea
fisubrl
push
adc
js
mov
lods
or
leave
ja
in
jbe
pop
xor
sub
sbb
xor
fsub
push
xor
mov
xchg
jge
imulb
gs
scas
dec
loop
mov
inc
inc
jmp
mov
enter
xor
inc
xor
stc
dec
clc
rep
pop
mov
addb
fs
loope
mov
sub
clc
pop
cmp
or
sbb
mov
mov
lods
popf
mov
pop
or
test
lret
loopne
jle
ljmp
push
or
mov
cli
xchg
dec
sbb
jb
push
leave
sbb
and
sub
mov
jns
int3
add
clc
jge
cmp
xchg
cmp
pop
mov
mov
cmp
push
xor
mov
pop
cs
jbe
push
lods
jmp
incl
jp
mov
push
adc
sbb
mov
mov
insb
pop
mov
ds
sbb
mov
cltd
pop
in
jmp
pop
rorl
cli
push
pop
jp
or
cmpsl
adcb
xchg
repz
cmpsl
fists
pop
lfs
loope
jmp
jae
jmp
stos
inc
scas
out
mov
ds
bound
add
in
and
test
popf
enter
das
pop
adc
mov
fidivrl
xor
mov
ljmp
js
aad
cltd
orb
das
hlt
into
outsl
jbe
aaa
rolb
ja
jb
push
push
pop
movsb
in
dec
push
dec
outsb
out
mov
test
stc
inc
popf
int
dec
mov
push
in
push
fs
xchg
call
cmp
mov
in
mov
add
push
push
aas
cli
xchg
cmp
dec
enter
and
fwait
xchg
lock
or
ja
repnz
xchg
mov
and
ja
fwait
cmc
ret
pop
xor
push
or
mov
rcrl
std
pop
out
fcomps
insl
push
mov
mov
adc
fsubr
xor
outsl
inc
mov
ja
je
cltd
aaa
xor
daa
hlt
aad
push
xor
lret
ret
orb
lods
mov
and
test
add
in
int
fldl2e
nop
jmp
js
orb
mov
push
cmpsb
mov
pop
std
mov
nop
cltd
sub
sub
dec
mov
fstl
pop
loop
jb
jge
or
dec
mov
jge
fwait
inc
mov
dec
out
mov
movsl
cltd
call
xor
leave
mov
and
aad
cmp
adc
data16
cld
ficoml
pusha
xchg
jne
fistpl
fsubs
ljmp
popf
push
lock
lock
cmc
mov
data16
cwtl
jl
mov
push
jne
cmp
aaa
sbb
jmp
and
loopne
loopne
fs
gs
pushf
shrl
insb
xchg
cmp
in
mov
lds
mov
cmc
shl
mov
jmp
xlat
cwtl
push
cwtl
inc
pop
pop
cmp
addr16
inc
hlt
ret
jns
shll
and
fsubs
jle
cs
fwait
sub
cmc
push
lods
pop
jecxz
aad
xchg
push
ja
hlt
or
dec
js
ret
adcb
mov
outsb
sbb
mov
mov
mov
dec
sbb
cmc
ficomps
pop
jmp
xchg
xor
sbb
add
mov
test
or
and
fdivrs
shlb
jmp
xchg
jne
aad
divb
jg
sbb
and
fs
mov
cli
mov
test
bound
inc
dec
pop
adc
mov
mov
sub
xchg
stc
scas
mov
mov
sub
addr16
jnp
jae
fdivrp
jl
jne
jp
nop
cld
sub
sbb
adc
popf
push
inc
daa
push
scas
inc
or
leave
ja
ds
int3
mov
sbb
inc
xor
into
std
dec
scas
fdiv
mov
adc
test
arpl
push
sub
setle
mov
and
push
mov
dec
movsl
sub
out
xchg
cmp
bound
xor
push
sbb
cmp
inc
fnstcw
ja
pop
dec
mov
sarl
je
pop
fidivrs
arpl
call
fcomps
and
push
outsb
pop
adc
enter
mov
xor
push
lcall
frstor
mov
push
in
adc
out
pop
rolb
xchg
shr
fcoms
mov
pop
xor
mov
enter
dec
shrl
lods
gs
cwtl
or
pop
or
outsl
insb
mov
fldcw
stos
arpl
mulb
int3
in
icebp
cmp
inc
fcoml
ds
subl
mov
cmpsl
mov
sbb
push
dec
lret
jns
loop
mov
inc
push
pushf
xchg
and
xor
pop
das
decl
xchg
mov
cmp
pop
or
les
stc
xlat
hlt
cmp
sbb
jle
pusha
hlt
jno
bound
addb
xlat
push
test
aas
push
cmpsb
fisttpll
loop
or
push
jno
fisubs
aad
push
lret
mov
imul
jno
arpl
xchg
gs
sub
xchg
inc
push
jmp
out
jl
push
shrl
movsl
bound
ret
inc
mov
shrl
loop
lds
mov
out
or
cmpsb
idiv
cmc
lcall
jge
lcall
int
lret
push
jl
rorb
mov
or
jle
repnz
mov
icebp
push
dec
stos
lret
lods
aad
jp
dec
std
push
das
daa
and
push
aad
adc
xchg
jno
lds
in
loopne
xor
ret
add
mov
stos
vmaxss
scas
lahf
daa
and
jns
ljmp
out
cs
jge
stc
nop
lcall
mov
sti
jle
jbe
mov
data16
mov
jl
daa
adc
or
lret
jg
lds
shrl
hlt
into
fcmovnb
push
jae
jne
movsb
into
dec
sbb
pop
imul
add
ss
ret
das
pushf
stos
push
fcompl
outsb
fisubrl
fists
insb
scas
aad
fiaddl
cmp
fdivrs
pop
pop
dec
push
pop
adc
mov
ffree
loope
out
adc
stc
cmp
jne
sbb
push
lods
cmovne
jns
mov
stc
and
daa
test
jge
fiadds
inc
add
xorb
or
lcall
cli
mov
lods
ret
lcall
sub
inc
shll
mov
cmp
lret
pop
and
and
and
jecxz
cwtl
cmpl
fwait
cmpsl
stc
pop
cmp
ja
test
mov
xchg
sbb
mov
pop
adc
or
aad
inc
cmp
jb
dec
dec
fisubs
movsl
add
and
dec
stos
pusha
push
or
lcall
pop
or
dec
push
iret
movsb
test
fcompl
imul
gs
pop
aaa
push
inc
pop
fstpt
adc
incl
ljmp
cli
xchg
pushf
sub
push
xchg
mov
fmuls
ss
cwtl
sbb
sbb
arpl
stc
shll
cmp
incb
bound
mov
push
loope
aas
push
mov
mov
loope
add
jp
jecxz
out
cli
aas
push
push
dec
aaa
cld
pop
int3
bound
adc
hlt
sahf
or
fwait
xchg
out
fcoml
maxps
push
leave
int3
scas
mov
jl
add
loopne
inc
pop
inc
or
das
push
lds
jl
jmp
add
xchg
jne
inc
mov
call
cld
sti
movsl
jns
mov
jno
dec
push
pop
jnp
mov
jo
test
movsb
inc
sbb
inc
xor
jne
pop
push
fsubp
mov
es
cmp
mov
fisubl
cli
mov
es
mov
movsl
orb
dec
push
jle
fcomps
push
out
dec
xchg
adc
rclb
stc
loop
jg
and
or
xor
out
or
pop
lea
fisttps
mov
pop
imul
pop
push
shlb
fmull
mov
je
xor
lcall
cli
ret
insb
inc
sbb
shrl
rcr
xor
lahf
das
and
jecxz
dec
mov
loopne
adc
sub
push
aas
and
cmp
mov
jle
repnz
push
aaa
add
mov
jns
testl
rclb
cli
lcall
shrb
pop
outsl
xchg
pop
imul
outsb
push
out
movl
xchg
pop
es
and
and
jae
lods
arpl
int3
shl
outsb
add
dec
xor
rcl
mov
pop
xlat
fcoms
adc
fistpll
les
out
lcall
sub
sbb
xchg
jmp
jo
mov
lock
or
cmp
leave
fisttps
push
outsb
fsubp
mov
gs
rcrb
orl
push
mov
je
movsb
insl
scas
mov
cmpxchg
jne
js
std
lds
add
cmp
icebp
sbb
out
pop
or
outsl
fimuls
repz
sbb
xor
pop
dec
mov
int3
xchg
or
jne
icebp
cmpsb
ror
xchg
jb
sbb
ja
cli
shl
out
insl
stc
dec
inc
loop
ljmp
adc
sbb
in
ljmp
nop
into
in
push
jl
rorb
mov
sub
jg
loop
push
add
rcrb
aas
dec
lcall
popf
stos
ja
sbb
jmp
lock
jl
in
mov
jge
push
mov
in
aaa
imul
and
int3
or
xchg
sbb
pop
dec
repnz
movsl
xorl
fidivs
test
pop
lret
popf
cs
cmpsb
sbb
subl
mov
cmp
fiaddl
jnp
inc
sahf
inc
sbb
mov
lods
dec
xchg
jbe,pt
jle
mov
cmp
jns
aaa
dec
jle
aaa
test
push
pop
or
cmpsb
data16
inc
mov
cmpl
push
mov
call
shll
jle
jge
icebp
fiaddl
popf
xchg
pusha
cmp
das
pusha
pop
pushf
pushf
mov
mov
test
cli
jno
lret
aaa
add
leave
mov
imul
cmp
xchg
xor
mov
in
insb
hlt
pop
jae
imul
std
test
orb
jnp
adc
fucomi
in
pop
adc
or
push
stos
lods
or
ret
or
dec
arpl
movb
jae
test
or
sbb
jmp
jp
jg
push
ret
dec
or
mov
in
pushf
lods
dec
xchg
ds
jecxz
mull
icebp
jns
adc
or
inc
jmp
daa
add
hlt
pop
imul
out
or
out
mov
push
jp
cs
xor
inc
das
pushl
fs
add
jl
mov
pop
popf
data16
push
mov
out
iret
in
hlt
adc
mov
pop
dec
dec
push
mov
push
fimull
jp
and
popf
fildl
xchg
fisubs
out
mov
std
sbb
mov
inc
es
ja
int3
cli
out
rclw
es
bound
daa
iret
cmpsb
push
jp
test
ss
lahf
push
mov
test
mov
jns
aad
cwtl
cmp
adc
push
xor
xor
jb
movsb
mov
repnz
int3
inc
cld
mov
pusha
push
add
sahf
fdivrs
xchg
mov
fisttps
dec
repz
out
fdiv
popf
jmp
or
jae
jns
aad
and
cwtl
outsb
test
stc
stos
mov
lea
mov
adc
rorb
xor
popf
cmp
ja
flds
pushf
cmpsb
imul
mov
ret
sub
sub
xor
cltd
jbe
das
sbb
lods
push
pop
arpl
aad
xchg
popf
cmp
mov
adc
nop
inc
arpl
jle
shl
dec
pop
fstl
outsb
movsl
into
test
flds
in
mov
mov
push
sar
sti
js
inc
cmp
xor
dec
hlt
or
sahf
in
mov
stc
push
adc
ljmp
or
and
add
jg
sbb
repz
insb
pop
push
xchg
test
xchg
into
and
arpl
cs
xor
mov
push
bound
sub
fs
inc
mov
pop
and
dec
sbb
lret
das
dec
fs
mov
mov
dec
daa
sbb
push
rcrl
aas
popf
je
mov
push
les
mov
push
lea
sub
mov
push
jmp
arpl
xchg
inc
mov
repz
aad
sub
cld
mov
pop
inc
cmp
mov
push
sbb
add
pop
cs
divl
imul
jae
lods
mov
bound
add
mov
fdivr
or
bswap
push
push
jmp
dec
xorl
lea
insl
jb
ja
mov
ja
repnz
xlat
mov
inc
fcoml
rorl
push
push
push
cltd
xor
idivl
mov
stos
movsl
mov
push
or
xchg
mov
sqrtps
bound
fstpt
push
xor
les
mov
movsb
lahf
stos
lret
enter
inc
mov
mov
mov
icebp
inc
sub
mov
push
stos
pop
sbb
cmp
leave
dec
sub
and
lahf
rcrb
mov
outsl
icebp
hlt
mov
ret
sbb
xchg
mov
lea
enter
inc
mov
push
xchg
iret
into
jecxz
out
xor
imul
cltd
add
mov
test
ljmp
mov
pop
cmp
ret
fmuls
push
aad
push
lods
std
mov
xor
neg
pop
mov
push
or
jge
xchg
xor
pop
and
loopne
lds
das
jecxz
cmpsl
aad
cmp
xchg
sub
and
push
icebp
jne
fstp
push
inc
not
ja
inc
repnz
fwait
popf
push
sbb
andl
es
sahf
inc
sub
mov
testb
pop
push
sub
jno
sbb
pop
adc
mov
push
adcl
pusha
and
cmp
xor
dec
insl
loopne
adc
inc
pop
xor
dec
adcl
stc
push
xchg
es
jge
scas
push
mov
add
fisttps
sbb
jns
jge
aam
sbb
mov
repnz
mov
fs
add
or
mov
insl
jbe
aad
jmp
outsb
mov
mov
push
sub
jecxz
xchg
cmc
and
sbb
pop
dec
mov
add
nop
push
push
mov
fstps
push
test
pop
jmp
push
sti
jmp
dec
push
push
dec
adc
icebp
adc
es
orb
lret
sub
mov
jns
aas
lea
sub
lea
sbb
xchg
lods
int
clc
loopne
dec
mov
js
mov
jo
adc
mov
and
cltd
mov
mov
xchg
sub
inc
xchg
or
loopne
mov
cmp
add
mov
movsb
jg
es
or
dec
divb
jg
in
ljmp
inc
jp
push
insl
and
and
gs
jae
pop
and
in
dec
pop
loopne
cld
push
jl
clc
push
jmp
out
pop
add
sbb
pop
sub
sub
jo
adc
ss
outsl
leave
inc
bound
rcl
repz
cmpl
push
and
js
sub
ljmp
pop
outsl
dec
fsubrs
push
int
cmc
insl
fdivs
mov
ja
push
data16
notb
pop
lock
imul
test
pushf
arpl
sub
push
icebp
jbe
jbe
xchg
pusha
movsl
adc
lret
mov
jg
mov
mov
bound
push
dec
nop
sub
repnz
pushf
imul
add
and
aaa
sbb
mov
push
mov
push
and
or
sub
in
mov
sbb
fs
pop
js
sbb
mov
push
fdivrl
jno
scas
xor
aam
xchg
in
jmp
mov
pop
movsl
adc
adc
add
les
mov
dec
pusha
mov
outsb
fcompl
cmp
insl
or
scas
pop
sahf
enter
push
test
push
jge
cmp
push
sub
cmp
pop
call
pop
mov
imul
rolb
shlb
cmpsb
xchg
jae
cmpsb
test
lahf
or
xchg
sub
stc
ret
gs
adc
clc
insl
enter
cmc
rorb
xchg
inc
pop
lods
push
sub
int
add
js
xor
shlb
sub
and
bound
pop
movsb
push
scas
int
cmp
sarb
xor
inc
gs
adc
in
clc
les
mov
jne
mov
adc
add
insb
cs
mov
cmp
xor
ja
xchg
sub
mov
imulb
pop
imul
shlb
lcall
add
jl
xlat
xchg
enter
aaa
inc
pop
mov
loop
clc
mulb
adc
push
push
int3
pop
xor
inc
mov
mov
movsb
out
jle
mov
xor
xor
mov
pop
sub
jl
push
inc
add
setae
in
call
jge
insl
mov
ds
cwtl
add
dec
or
mov
daa
cmpb
aam
lahf
mov
ss
ror
pop
cmpsl
push
push
hlt
pop
sub
shll
or
jle
inc
outsb
lahf
data16
inc
mov
lcall
jb
fcmovnu
cmp
es
xchg
mov
jmp
mov
hlt
hlt
lahf
out
cmp
int
mulb
adc
mov
cmp
repnz
mov
into
movsb
fs
or
bound
int3
stc
mov
lea
fmul
ja
adc
and
xchg
int
fsub
jl
cmp
sbb
xchg
and
repnz
xchg
jne
jb
rorl
push
ret
jmp
mov
xchg
stos
xor
mov
outsb
into
jecxz
popf
mov
push
pop
stos
or
dec
mov
cmp
aaa
movsb
jle
aam
mov
sub
mov
cmp
ret
insb
ret
inc
out
scas
ret
cli
cmp
imul
xchg
cltd
mov
adcl
insb
arpl
out
or
cwtl
jne
cmpsb
xchg
cmpsb
jmp
sahf
test
add
xor
in
jmp
out
add
mov
in
sahf
pop
cmp
sbb
nop
out
lea
xorl
sbb
test
jno
push
jl
mov
aad
out
sbb
fbstp
popf
mov
icebp
cmc
mov
in
and
outsb
or
xor
ret
lahf
mov
stos
cmp
jge
fcoms
jp
and
adc
bound
pop
lcall
out
aad
xor
pminsw
jno
popa
inc
or
fldl
pop
gs
roll
aam
mov
test
popf
inc
mov
sub
insl
adc
mov
lock
aad
mov
stos
frstor
repz
pop
cmp
cmc
notb
ret
movsl
lret
iret
in
or
mov
call
sbb
cltd
iret
cmp
inc
out
mov
add
jno
push
lds
dec
pop
insl
and
xchg
out
cltd
int
stos
add
stos
and
mov
aas
pop
test
insl
jo
mov
dec
nop
bound
jg
push
xchg
fincstp
jb
pop
jnp
jecxz
cmp
cmpb
ja
in
mov
jg
pop
es
dec
jmp
lret
push
dec
pop
cltd
icebp
lahf
or
jecxz
ss
rcll
push
stos
mov
lret
inc
sbb
idivb
loope
inc
les
dec
or
dec
ss
cmp
test
xchg
insb
xor
out
push
cmc
imul
movsb
cwtl
das
std
pop
pop
inc
cs
mov
sub
mov
pop
xchg
aad
into
xchg
pop
cld
sub
dec
jge
loope
push
shrl
sbb
add
in
add
ja
push
cmp
popaw
mov
sub
push
movsb
inc
popf
out
dec
stos
adc
xchg
aad
xor
mov
lret
lock
outsb
xchg
out
decb
lret
pushl
sarb
push
xchg
insb
pop
xchg
jns
test
add
cli
cmp
adc
lret
lods
mov
mov
xor
fsincos
and
xchg
jne
jle
int
and
cmp
mov
xor
sbb
add
push
gs
push
pusha
sub
stos
sub
cli
lahf
xor
pop
jo
in
mov
test
dec
ljmp
jo
insl
xchg
inc
push
call
call
into
les
push
test
ret
loope
stc
mov
nop
out
clc
or
loop
inc
mov
dec
dec
mov
cwtl
dec
gs
and
jecxz
xchg
cwtl
and
popa
ljmp
xchg
mov
in
mov
xchg
and
ljmp
mov
add
icebp
jp
pop
insl
fldt
ljmp
movsb
jecxz
lcall
pop
pushf
inc
mov
mov
ljmp
or
imul
cltd
fwait
mov
dec
pop
popa
pop
dec
ja
xchg
sahf
fbld
and
jp
add
outsl
or
je
ret
push
icebp
adc
cld
and
ljmp
mov
dec
cmp
and
adc
mov
xchg
and
sti
sbb
mov
xchg
xchg
in
mov
xchg
dec
out
xchg
aam
movsb
out
mov
jp
icebp
rcrb
lds
outsl
cmp
scas
push
push
shll
outsl
cwtl
fnstenv
mov
adc
or
mov
int3
jg
outsb
xorl
bound
loop
shl
xor
testb
sbb
fsubs
imul
xor
clc
sub
call
dec
scas
xchg
cmpsl
xchg
loopne
mov
shrb
movmskps
lds
sub
pop
cmp
pop
push
daa
adc
loope
dec
mov
fsubr
inc
sbb
mov
jo
movsb
and
xchg
ret
stos
addb
or
mov
fisubrl
je
mov
and
imul
push
rcl
mov
xchg
xor
ret
movsl
inc
add
dec
shll
pop
sahf
je
mov
mov
and
jl
push
subl
sbbb
push
pop
dec
repz
push
push
orl
ja
iret
in
mov
outsl
jl
mov
rclb
jge
sbb
sub
aas
push
sbb
lret
push
xlat
xchg
add
xor
lret
lret
or
ffreep
fidivrs
popf
ror
mov
mov
clc
or
cmc
clc
movsb
rol
add
fldl
test
test
mov
lods
aas
test
xchg
mov
xorb
sbb
dec
xchg
sub
jb
out
mov
mov
mov
lret
neg
xor
stc
test
cmpsl
lret
mov
inc
je
adc
popf
xor
add
and
xor
imulb
lods
ja
lahf
sub
xchg
cli
into
icebp
je
mov
push
mov
jmp
imul
sbb
cmpsb
lock
sarb
in
je
outsl
sbb
adc
inc
mov
adc
dec
test
cmp
sbb
cltd
adc
icebp
cli
fs
rcll
outsb
xchg
cmpsl
xor
push
push
dec
push
add
adc
ljmp
sub
outsl
adc
loopne
cmp
push
mov
repnz
popa
loope
xchg
mov
mov
test
je
pusha
inc
sbb
and
iret
stc
add
mov
stos
inc
fimuls
inc
and
cltd
add
push
jae
cmp
pop
pushf
xchg
adc
xchg
sub
mov
cli
int3
xchg
adc
push
adc
call
sub
mov
fs
mov
and
push
xchg
and
imul
mov
or
and
sbb
xchg
push
jno
pop
imulb
pop
mov
sub
mov
rorl
xchg
daa
cs
xchg
call
pop
mov
ret
in
test
cmp
inc
dec
gs
sub
jnp
sti
cmpsb
cli
or
or
int3
cpuid
add
movsb
jp
nop
cmp
repz
pop
ror
sbb
adc
cmp
mov
inc
scas
icebp
cld
movsl
or
pop
sub
gs
jp
mov
pop
fcomip
jl
inc
inc
lahf
add
mov
mov
inc
js
sbb
out
imulb
jp
push
pop
sbb
sahf
lods
jo
call
insl
cltd
add
add
incb
fsub
mov
fwait
push
insb
and
sti
pop
fsubrl
xchg
js
jg
aaa
arpl
jne
dec
jmp
iret
stos
push
dec
lret
lret
mov
dec
pop
cmp
bound
cli
shl
and
test
ficomps
sahf
ret
sub
outsb
cltd
jae
scas
dec
dec
pop
std
push
jge
repnz
jmp
pusha
add
add
push
push
and
pusha
sub
push
loope
pop
ja
mov
push
mov
movsb
or
addl
and
out
mov
insb
sbb
out
lock
inc
inc
inc
xchg
lcall
notb
xchg
mov
ficomps
dec
sbb
sub
push
push
flds
mov
push
stos
fidivrs
mov
decb
int
imul
shlb
ret
xchg
hlt
mov
movsb
in
adc
pop
or
pop
lahf
lock
cmc
pop
popf
add
outsl
popa
inc
popf
out
push
mov
push
adc
test
arpl
pop
repz
test
mov
ror
xor
jp,pn
jae
add
rclb
nop
jae
enter
mov
scas
je
sub
rolb
js
insb
inc
fsubrl
mov
and
jecxz
xchg
push
ds
mov
push
jmp
out
mov
or
ficoml
pop
cltd
popf
adc
dec
ljmp
jns
or
rcrl
ficoms
fsubr
lret
mov
mov
xchg
pop
mov
cwtl
out
test
mov
mov
dec
out
cld
lea
dec
dec
addl
add
fwait
sbb
aad
sub
mov
popf
dec
cmpsl
fsubp
test
mov
lret
mov
daa
cltd
lds
xchg
xlat
imul
lock
loopne
out
inc
mov
jge
jb
int3
fmuls
pop
adc
inc
test
rol
sub
jns
jno
cmp
lods
aaa
out
mov
mov
inc
lret
lds
fs
das
dec
cltd
add
xor
out
cmpsb
outsl
jae
js
pop
insl
pusha
bound
dec
in
mov
push
out
ret
mov
cmp
inc
bound
les
shll
pushf
cmp
jp
hlt
cs
push
jmp
repz
push
mov
xchg
mov
inc
and
insb
rcrb
or
popa
stos
pop
jo
push
mov
popa
jl
scas
orl
pushf
testb
inc
mov
adc
sbb
ss
repz
pop
dec
mov
dec
pop
push
outsl
xor
les
xchg
dec
inc
mov
xchg
push
out
jno
sub
bound
mov
pop
fsub
lahf
repz
cs
xor
shll
fst
mov
std
arpl
shll
bound
je
pop
dec
mov
inc
test
pop
jo
xchg
mov
je
popa
mov
mov
movsl
loop
nop
fsubrl
cmp
xchg
adc
pusha
inc
fildll
jecxz
sub
jge
js
int
adc
sbb
dec
sbb
stos
test
mov
shlb
push
xchg
js
sub
cld
in
mov
pop
scas
mov
jle
mov
cmp
lret
jnp
lock
add
cmpsb
testl
insb
pop
push
sar
fildll
pop
adc
data16
jecxz
adc
push
mov
loopne
sub
push
stc
and
aad
xchg
sti
orb
repnz
push
jmp
dec
nop
xor
test
cmp
push
cmp
jmp
push
push
lea
jno
scas
movb
es
insb
jmp
add
cmp
and
mov
cmpsl
insb
sbb
rcrl
or
jbe
js
mov
into
fscale
xlat
cmp
dec
jp
lcall
jns
out
jb
mov
and
lret
xor
js
ffreep
xchg
xchg
in
mov
pop
sub
and
or
lds
mov
mov
bound
shr
fsubs
add
fs
int3
leave
xchg
mov
mov
icebp
stc
aaa
out
mov
xlat
mov
push
jp
xchg
pushf
jecxz
mov
xchg
jmp
test
lods
lcall
mov
inc
pop
test
aaa
cmp
cmpb
out
sub
lret
pop
arpl
add
adc
fdivs
push
inc
sub
pop
fcompl
imul
xchg
mov
aaa
xlat
lret
sbb
dec
jnp
xor
fidivrl
sbb
lret
in
popf
repnz
loop
sbb
pop
lret
xchg
xchg
rclb
sub
xlat
dec
and
sub
lcall
ja
cltd
jae
xchg
mov
fcompl
mov
call
das
lret
push
fildll
push
in
sub
sub
cltd
add
fnstcw
sti
mov
es
in
mov
test
push
xlat
dec
adc
push
and
dec
xor
xor
and
sbbl
testl
or
mov
movsl
or
stc
sub
push
stos
pop
lahf
popf
ds
cmc
mov
cli
pop
dec
mov
mov
rcll
xlat
xchg
rcll
inc
mov
cmp
sub
ljmp
imul
mov
inc
dec
dec
add
pushf
test
adc
lcall
mov
nop
cmp
jge
pop
mov
fisubl
and
loope
jecxz
mov
xor
in
stc
int
push
inc
jae
imulb
cld
push
fldcw
push
or
xadd
lods
jnp
jae
popa
ja
and
fwait
je
pop
ljmp
in
cmpsb
jbe
jae,pn
add
scas
imul
aam
movsb
pop
cmpb
sub
insl
ds
xchg
xor
mov
push
inc
pop
in
sub
movsb
test
lcall
arpl
pop
sub
imul
jnp
xchg
and
adc
insl
decb
and
pop
lds
jbe
mov
out
push
cmp
pop
pop
fwait
in
test
icebp
push
test
mov
mov
push
ljmp
jae
test
shrl
jge
std
imul
inc
jb
movsb
or
jns
lds
faddl
mov
dec
enter
mov
xor
dec
call
fisubs
mov
xchg
jp
int3
lea
iret
cmp
clc
imul
jg
jp
call
mov
dec
pop
dec
inc
mov
lahf
arpl
cmp
out
scas
cmp
stos
inc
clc
xor
sbb
pop
cmpl
adc
adc
mov
cmp
cltd
inc
stos
test
mov
xor
pop
loopne
jg
or
and
loop
stc
push
out
jae
testb
lds
shrl
std
shl
mov
pop
mov
fwait
popf
outsl
xor
repz
push
shr
scas
and
add
in
lds
shlb
cmc
es
cmc
mov
sbb
dec
mov
test
shll
outsl
test
roll
cmc
in
xchg
jge
dec
scas
mov
mov
les
jns
and
jmp
loope
and
sahf
dec
lret
jb
cmp
loop
adc
dec
jno
and
cmp
or
and
sbb
sub
mov
jns
orl
add
cmp
test
daa
das
inc
sub
dec
mov
mov
pop
es
sarl
arpl
aaa
push
push
stc
mov
inc
mov
push
in
inc
and
adc
shl
js
divl
add
stc
mov
dec
addr16
push
les
mov
cmpsl
xchg
jo
bound
xor
pop
sub
mov
jge
shrl
outsl
add
sahf
bound
inc
lods
jecxz
mov
xor
inc
adc
dec
xchg
test
ffreep
mov
sahf
movsl
icebp
sahf
clc
jae
mov
leave
ljmp
pop
xchg
movsl
sahf
inc
out
jp
adc
jp
mov
repz
pop
mov
dec
mov
xor
in
inc
jae
aam
pop
cwtl
gs
stc
jns
adc
imul
jl
dec
or
outsl
popa
stc
loop
jbe
daa
or
insl
shlb
pop
mov
adc
add
jne
popf
notb
mov
mov
scas
scas
repz
pusha
fdiv
pop
or
cmc
ret
std
and
ret
inc
xor
inc
adc
push
cmp
arpl
push
pop
push
xor
loope
movsl
into
or
into
daa
push
sbb
xchg
sub
xchg
pop
push
add
int
test
xor
mov
dec
jae
mov
and
shlb
scas
lock
movsl
mov
sub
jb
xchg
sbb
jo
sub
fs
aad
rcrl
in
pop
dec
les
cmp
jmp
rclb
cmpb
cmp
mov
iret
xor
mov
int
xor
cld
jo
mov
push
lods
pop
in
imul
lods
push
nop
xchg
leave
movsl
mov
test
inc
notb
inc
xor
icebp
pop
hlt
or
mov
or
mov
xlat
imul
addb
rorb
jae
push
mov
lods
gs
scas
mov
and
jle
out
or
insl
push
stos
in
sub
push
ja
leave
ljmp
enter
std
inc
push
xchg
jmp
scas
aas
cmpsl
push
addr16
out
loope
shlb
ret
popf
cmp
mov
adcl
mov
fsubrp
jb
add
push
in
int
scas
leave
dec
popw
sub
add
shrb
fdivrs
popf
movsb
stc
sbb
scas
js
inc
pop
and
and
icebp
xchg
adc
mov
dec
cmp
shll
mov
aas
sbbb
pop
jnp
jle
lea
call
jb
addb
int3
stc
jno
out
and
pop
fldl2e
cmp
sub
aas
loop
and
jp
dec
adc
inc
in
ds
add
jbe
jg
mov
mov
lret
leave
push
push
lock
mov
jp
out
jbe
cmp
xor
jecxz
mov
aad
fsub
dec
cmpsl
adc
inc
ret
mov
sub
in
or
jno
js
out
sub
pop
movsl
push
mov
movsb
ret
dec
jno
push
std
in
into
dec
cmpsl
jne
xchg
mov
sub
aas
jecxz
sbb
mov
sub
inc
pop
cmc
arpl
cmp
ja
dec
xor
mov
mov
movsl
fsubr
mov
jp
xor
xor
dec
lcall
insb
mov
xlat
xor
jl
mov
fs
inc
inc
jle
inc
xor
sarl
stos
cmc
ja
jmp
xchg
add
scas
pop
popa
xchg
lret
jle
and
dec
call
push
push
ljmp
ds
gs
popa
rorl
das
ja
jle
incb
das
mov
dec
cmp
imul
push
pop
pop
and
jmp
mov
add
adc
fcomi
sbb
mov
lcall
sarl
or
mov
cmc
pop
sbb
loopne
clc
jl
aad
add
xchg
pop
pop
popf
cld
adc
adc
outsl
lea
ret
addr16
dec
data16
and
dec
fwait
pop
adc
aaa
or
shll
sbb
inc
mov
and
icebp
out
nop
rclb
test
repnz
outsl
lcall
aaa
lcall
lock
scas
jmp
and
lahf
out
cwtl
mov
mov
pop
sub
test
pusha
mov
mov
xor
mov
jae
decb
jno
out
pop
les
in
sbb
mov
inc
cmc
adc
jmp
dec
cld
aas
mov
push
mov
fnstcw
loopne
daa
cmp
gs
loopne
or
push
movsl
pop
aas
push
and
andb
mov
lock
mov
enter
movsb
pusha
adc
fwait
fwait
xchg
andb
fidivrs
push
pop
insb
rcr
mov
jle
iret
fidivrl
in
and
leave
pop
dec
jns
sbb
ja
pop
ja
scas
dec
pop
rcll
hlt
xor
mov
outsl
lods
lock
xor
pusha
loope,pn
adc
enter
or
jp
xchg
jg
enter
outsl
aas
inc
test
lds
fcomps
lods
test
pusha
outsb
mov
pop
xchg
sarl
sub
ficoms
fstp
daa
addr16
cmp
sbb
stos
mov
test
fists
rcrl
addr16
xor
xchg
mov
or
mov
jle
mov
xor
in
push
mov
mov
pop
and
jle
jecxz
mov
xchg
stc
leave
and
or
mov
mov
fimuls
add
sar
sarl
aaa
mov
es
and
rcll
lcall
cmp
add
cwtl
xlat
popa
movl
sub
mov
jb
and
stos
ds
iret
sbb
inc
sub
sbb
imul
jae
jecxz
pop
pop
sti
insl
pop
mov
ljmp
cmc
xor
fcmovb
jne
jl
jle
jb
repz
lcall
mov
lds
cmp
lods
jecxz
jb
shl
or
cmp
mov
ds
ror
mov
mov
jns
or
cmpsl
cs
rorb
and
xor
mov
test
sbb
popa
push
dec
sbb
dec
push
ds
imul
cli
push
cmp
push
cli
in
push
std
addr16
stos
test
inc
sbb
ret
jl
ss
rorl
jns
dec
mov
and
cwtl
adc
cwtl
sbb
cmp
fcomi
stc
jae
lods
jp
jge
inc
inc
cltd
pop
and
sub
test
mov
push
sbb
sti
or
add
std
pop
sub
loope
xchg
xchg
test
int
pusha
mov
push
pop
mov
int
cmc
lock
sahf
lret
test
pop
mov
into
inc
js
dec
repz
cmp
inc
and
mov
or
sub
mov
imul
push
sahf
dec
mov
ret
out
addb
add
push
cmp
sub
sbb
mov
scas
jle
dec
ljmp
mov
xor
dec
jbe
adcl
leave
lahf
out
jae
pop
jecxz
icebp
vpmacsww
fcmovnu
sub
sub
ror
sti
sub
sbb
cltd
xor
pop
xchg
mov
cmpsb
or
rclb
fadds
xchg
push
daa
lret
pushl
push
or
fidivrs
add
or
xchg
call
cmp
lock
scas
jns
inc
out
and
stos
adc
int3
sarb
pop
pusha
ficoml
pushf
ficomps
test
inc
or
mov
pop
fsubr
pop
sub
xchg
test
add
loope
and
dec
idiv
and
enter
pop
pop
std
jecxz
push
jle
pop
cmp
adc
pop
pop
int3
decb
push
pop
in
fistl
and
shrl
sar
lods
and
mov
xchg
sbb
aas
into
sarb
cld
rolb
jmp
ja
adc
xchg
push
push
and
outsb
mov
mov
sahf
imul
mov
lret
out
cmp
mov
xor
shrl
add
dec
dec
daa
inc
xor
jp
rorl
mov
popf
les
push
mov
pop
or
and
cwtl
outsb
movsl
sbb
jp
lock
fs
add
push
fistpl
in
ss
xor
fnstcw
xchg
testb
insb
mov
scas
mov
shrl
or
cli
jnp
cmp
daa
inc
inc
ds
xchg
sahf
xor
jnp
ror
std
inc
push
push
insl
ret
xchg
push
push
cmp
aas
xor
aas
xchg
lret
int
das
mov
jns
cmpsl
mov
ljmp
fisubrl
jg
sti
add
push
jg
fs
cli
dec
inc
lock
repz
jecxz
xor
ja
lods
popa
mov
xlat
outsb
mov
iret
push
cmpsl
pop
xor
mov
dec
sub
mov
fbld
in
fdivl
notw
sti
in
xchg
lods
in
pop
fucomi
cmp
or
xlat
enter
popf
cs
arpl
pop
pop
mov
movzwl
push
cmp
add
out
hlt
pop
add
lea
pushf
jb
iret
mov
popf
lret
pop
mov
sub
into
xchg
roll
adc
gs
cmp
cmpsb
cmp
fs
mov
xor
push
or
dec
or
mov
cmpsb
cmpl
repnz
push
jno
pop
lahf
sbb
pop
fistps
fsubp
js
stos
xor
pop
test
mov
mov
fcomip
fbstp
push
shlb
subb
dec
pop
dec
bound
jge
das
pushf
into
cmp
jbe
stos
sub
out
inc
cmp
push
adc
clc
jmp
pop
jo
add
test
lea
mov
and
dec
jns
mov
shll
jecxz
mov
pop
pushf
cmpsl
push
lods
daa
lahf
jecxz
adc
stc
mov
xchg
add
dec
pop
out
out
fcoml
dec
and
movsb
inc
insl
popf
lret
sbb
mov
mov
cmp
push
stc
stos
mov
lods
fstl
fistpl
xlat
sub
and
add
cmpsb
mov
and
pop
pop
mov
mov
enter
xchg
mov
gs
jg
cmc
out
push
cmp
out
mov
stos
mov
mov
arpl
xorl
movl
sub
sub
and
cmp
cmp
mov
sub
jb
sub
lahf
sub
sti
in
subb
repnz
mov
insl
and
inc
or
or
mov
dec
lcall
or
call
cmp
inc
out
cltd
imul
jno
jbe
pop
ja
sbb
leave
inc
imull
xor
cmp
mov
es
adc
outsb
ljmp
shlb
ds
or
adc
addr16
mov
sbb
gs
cmp
sub
dec
nop
dec
adc
jl
cmc
dec
insl
dec
movsb
and
cmp
sub
dec
sub
dec
loope
data16
loop
jae
inc
pop
aas
xor
ret
sub
popf
ds
inc
fildl
jb
inc
jmp
fdivr
sbb
dec
inc
les
cs
lods
mov
xorl
addl
inc
movsl
dec
or
addr16
push
call
dec
loop
sub
ret
into
or
hlt
negb
mov
sub
lods
sbb
lcall
popf
or
add
pop
ret
and
push
lock
fisubrl
fildl
sub
push
adc
xchg
sbb
sti
aad
cmpsb
rol
out
orb
imul
sub
inc
insb
imul
movsb
addr16
xchg
es
clc
jp,pt
lods
addr16
add
push
je
cmp
push
insb
sbb
mov
cmp
in
ja
push
dec
dec
jge
cmpsl
sub
fisttps
cmc
loop
pop
cld
mov
push
push
outsb
mov
clc
cli
and
pop
das
push
push
xchg
push
mov
fistpl
push
mov
mov
dec
add
push
cmpsl
leave
es
xor
ds
xchg
in
pop
jns
mov
inc
stc
fldenv
sbb
lcall
mov
sahf
mov
push
rorl
lds
orl
imul
test
and
xchg
dec
cmp
ljmp
icebp
adc
icebp
lret
enter
adc
cmpsl
fwait
aad
pushf
aaa
mov
add
in
pop
idivb
and
xor
adc
leave
xchg
cwtl
inc
insl
or
aam
inc
sub
cmp
mov
sub
push
xor
rorl
lahf
pop
test
pop
jb
inc
out
pop
outsb
mov
imul
insl
out
das
sub
test
divl
pop
sbb
test
add
add
jp
and
jecxz
push
cli
xchg
mov
dec
ret
sbb
adc
pop
and
int
in
jbe
inc
jge
adc
cmc
push
dec
mov
push
into
popa
jp
cwtl
add
imul
cmp
or
out
pop
cli
es
push
je
dec
call
mov
bound
sbb
adc
clc
pop
mov
ret
cmp
outsb
cmp
fisttps
js
bound
and
dec
push
shl
into
and
cmc
ljmp
add
add
xchg
ss
jnp
push
dec
pop
enter
adc
aad
sbb
cli
push
nop
popf
inc
sti
jmp
dec
icebp
or
out
dec
cmp
cmpl
stc
cmp
sbb
mov
iret
sbb
jo
popf
dec
aas
xchg
jle
sbb
or
fistps
jg
mov
mov
iret
adc
add
mov
ret
pop
jo
jae
cmpsb
inc
lods
fisttps
jmp
inc
iret
mov
jmp
aaa
out
clc
jnp
fnstsw
and
xchg
jge
mov
push
jle
jp
pop
push
and
orl
and
push
hlt
and
mov
and
outsl
cmc
rol
call
sbb
jge
rcrl
xchg
jl
jg
aam
addr16
pop
movsb
xchg
xchg
mov
sbb
mov
or
jecxz
iret
pop
je
fs
into
mov
xchg
inc
sbb
popf
dec
xchg
insl
addr16
mov
aas
inc
lret
pop
dec
mov
jnp
inc
enter
sbb
sub
and
mov
out
mov
cmp
popf
aas
xchg
push
sarb
fsubr
mov
mov
lret
pop
push
sbb
sub
pop
cmpsl
push
stos
hlt
daa
test
jmp
les
add
int3
cmpsl
cmp
xchg
outsl
adc
xor
sbb
xchg
jg
jg
and
and
rcrl
mov
pop
aad
xchg
inc
mov
add
or
cwtl
clc
loope
mov
scas
test
inc
fs
cmp
imul
popa
lds
dec
orb
sub
pop
popf
sbbl
aam
inc
addr16
aaa
push
dec
add
imul
je
dec
ret
mov
cmp
pushf
lea
out
dec
mov
out
insl
aas
std
push
xchg
nop
stc
into
mov
loop
dec
mov
xor
pop
dec
or
mov
addl
mov
or
push
ss
mov
or
fxch
xlat
or
bound
mov
mov
fnstcw
jb
bound
nop
ljmp
pop
arpl
out
aad
mov
dec
cs
fcmovnbe
mov
sub
cmp
add
addr16
cmp
cld
jbe
insb
mov
addr16
inc
cltd
mov
jne
sub
cld
sbb
ljmp
xlat
sbb
pusha
nop
dec
call
sub
outsl
stc
inc
mov
loopne
fwait
in
data16
xor
xor
iret
mov
push
loope
cwtl
or
mov
or
repz
mov
xchg
xchg
cli
cwtl
sbb
cltd
insb
test
into
cmp
mov
sti
cmp
imul
adc
cmp
xlat
aaa
ret
gs
hlt
cmc
movsl
mov
in
push
jmp
adc
jmp
or
or
xacquire
xchg
mov
lock
out
mov
jbe
or
int3
xor
sbb
rcrb
shll
inc
in
pop
or
mov
xor
xchg
in
jp
mov
sub
test
data16
sbb
pop
fwait
or
adc
movsb
arpl
push
jle
dec
fdivrs
hlt
cmp
in
inc
push
jne
cmpsb
test
inc
adc
mov
lea
push
sub
sbb
mov
in
adc
push
jae
jecxz
out
jecxz
loopne
mov
cmpsl
fiaddl
into
push
inc
xor
rcll
and
in
xor
aad
sub
mov
loop
and
outsb
iret
xor
mov
jae
sub
div
iret
inc
imul
pop
pop
andl
xchg
push
jmp
pusha
shlb
repnz
popa
stos
pop
stc
or
pushf
or
lret
push
leave
shll
xadd
sbb
movsb
and
fistpll
nop
ficomps
jge
add
ja
sarl
mov
fstps
les
sbb
and
cli
into
inc
fdivp
pop
xor
jge
mov
cld
aas
inc
negb
sbb
cmp
xchg
jne
loope
xor
jle
inc
inc
out
mov
cmpsl
xlat
jb
xor
inc
aaa
and
xchg
jle
in
sub
cs
push
dec
mov
pop
mov
jg
int
dec
jnp
repnz
mov
scas
mov
jg
xchg
mov
mov
and
mov
or
push
push
xchg
ss
cli
stos
jmp
mov
aas
and
cli
cmp
loope
in
cli
dec
aad
rclb
xor
sarl
cmp
xorb
push
mov
sti
loop,pn
das
inc
lods
xor
jmp
cmp
dec
movsl
xchg
fisubl
inc
sub
sbb
ds
lds
mov
and
stos
rorb
sahf
add
lret
adc
and
insl
mov
pop
mov
gs
xchg
push
lock
jb
sbb
xchg
jmp
test
push
pop
sbb
jnp
loopne
xorb
xchg
daa
test
data16
idiv
insb
cmp
iret
mov
dec
cmpsb
clc
gs
in
jge
jmp
xchg
mov
sub
or
pop
sub
fsubrl
pop
mov
or
arpl
jnp
je
sbb
bnd
add
lahf
mov
add
inc
incl
xchg
idivl
add
dec
cltd
sub
in
xchg
aam
xchg
or
fs
jnp
xchg
or
xor
pop
scas
push
int
pop
push
imul
dec
jle
mov
jmp
sub
sub
sbb
out
insb
or
in
divl
jp
out
sub
add
imul
fiaddl
xor
outsb
adc
scas
dec
insl
loopne
hlt
push
cmc
dec
test
mov
in
loope
fidivrs
scas
cmpsb
or
insb
les
aaa
mov
cld
loope
inc
fbstp
jp
stos
nop
xor
cmp
ret
jbe
mov
mov
mov
lret
div
daa
movsl
nop
pop
data16
mov
pop
sbb
jle
hlt
mov
lock
fs
leave
xlat
pusha
pusha
scas
inc
cmpsl
mov
lret
inc
mov
addr16
sbb
pop
sub
or
inc
cmp
out
insl
packsswb
pop
jp
cmpsl
packssdw
push
inc
mov
ss
scas
cmc
inc
mov
lock
sub
fcmovnu
addl
dec
in
xor
nop
and
rol
inc
xchg
add
and
dec
call
int
pushl
dec
push
and
cmp
inc
jecxz
sbb
mov
ret
sarb
fistps
adc
mov
cmc
lahf
sbb
pop
jae
aam
mov
clc
lea
push
push
lret
ljmp
xchg
sbb
rorl
into
add
mov
in
movsl
sbb
iret
mov
not
subb
and
loope,pn
dec
int
xchg
xchg
sub
fsubl
mov
lahf
sbb
push
jmp
jmp
xacquire
push
clc
ss
clc
mov
loop
fldl
cmc
cmpsb
lcall
ds
pop
pop
sahf
mov
dec
inc
push
in
in
lds
sub
pop
or
js
lock
ds
cmpsl
cmpsb
test
mov
lahf
mov
add
fildll
push
and
into
ja
dec
pop
ret
xchg
outsl
rcrl
imul
mov
jne
push
sbb
sub
mov
cwtl
js
loop
mov
mov
mov
ja
push
push
std
push
adc
adc
add
push
mov
cwtl
into
mov
sub
sub
inc
negl
rol
cmp
subl
test
hlt
xchg
and
es
stc
mov
dec
sbb
js
outsb
movsl
je
shll
sar
and
sub
lret
enter
sub
mov
pop
je
pop
cmpsl
insb
sbb
and
and
jnp
inc
inc
mov
movsb
pop
push
adc
xor
or
loope
sub
test
dec
xchg
mov
repnz
add
cmc
ljmp
shll
stos
loop
push
out
or
ja
sub
push
jo
out
sti
lcall
ja
fs
cmc
jb
decl
sarb
scas
ja
xlat
mov
idiv
clc
fwait
addb
add
cmp
mov
js
loop
sbb
lods
pop
fdivp
sbb
mov
sub
dec
mov
jae
je
or
xchg
icebp
inc
inc
dec
sar
xchg
filds
call
out
add
jmp
and
in
add
lahf
loopne
lods
cwtl
addl
jp
dec
jb
mov
clc
es
enter
pusha
gs
inc
fstpl
rcl
je
stc
sbb
int3
cmp
pop
fcom
adc
push
das
jl
aas
pop
ljmp
and
mov
mov
jp
outsl
xor
cmp
sub
jno
and
pmulhuw
xchg
popa
sub
sub
cltd
pop
xor
insl
jns
iret
insb
push
mov
es
and
add
sbb
mov
and
mov
hlt
out
push
mov
push
scas
fldenv
aas
shrl
loopne
jnp
hlt
adc
pop
cltd
jecxz
mov
adc
in
popa
movsb
ja
test
push
mov
adc
in
jge
in
ljmp
add
in
clc
mov
loop
sbb
xchg
aas
imul
fsubr
sub
inc
mov
aad
jno
fstpl
jns
pop
bound
mov
pop
in
jmp
pop
dec
popf
inc
adc
enter
leave
mov
das
dec
adc
out
sbb
adc
stos
pop
cld
sub
popa
in
lods
jb
or
lea
jns
mov
pop
jb
sbb
mov
inc
adc
jle
testb
imul
adc
pop
mov
mov
sbb
jnp
and
mov
xor
jle
cltd
repnz
fucomip
fdivrs
sub
cmp
dec
aad
int3
in
dec
push
dec
mov
push
mov
pop
xor
xor
out
iret
pop
fwait
out
lods
push
imul
jge
pop
sub
scas
test
andb
sub
push
testb
loope
sti
and
sub
xlat
decl
xor
in
enter
cmp
lods
scas
repz
adc
or
mov
fildl
fwait
lea
int
adc
jnp
test
mov
mov
cli
repz
ja
imul
xor
mov
xchg
test
fs
xchg
test
rclb
imul
outsl
js
int
xchg
es
sbb
loop
int
loop
xchg
mov
mov
imulb
mov
lock
xchg
jge
js
dec
out
fwait
insl
imul
jns
imull
in
dec
pushf
xchg
fwait
xchg
loope
repnz
xorb
shld
push
cmp
das
mov
loop
dec
dec
stos
push
aaa
add
out
ret
ffree
subl
je
mov
mov
outsb
dec
jnp
popa
scas
int
xchg
pop
cmc
add
sub
das
mov
add
push
fstpt
inc
sub
shrl
xchg
or
or
daa
ds
test
or
rclb
sbb
mov
imul
ret
icebp
repnz
dec
push
dec
push
and
fs
test
mov
repz
cmc
push
pop
xor
fmull
imul
sub
sub
mov
cmp
add
ja
push
idivl
aaa
lret
add
push
stc
and
ret
mov
pushf
sub
mov
es
ds
mov
lods
xor
mov
stos
push
mov
mov
cmp
jo
sub
xchg
stos
push
mov
fnstcw
inc
sbb
jne
popa
dec
lahf
out
pop
test
stc
push
test
test
pop
and
inc
xor
or
xchg
sbb
jno
mov
jle
jbe
ret
fs
and
push
pmulhuw
pop
aam
in
xor
add
lods
sub
popa
xor
xor
and
movsbl
aam
lock
stc
add
test
pop
sbb
adc
inc
add
bound
les
pop
in
pushf
bound
sar
in
inc
inc
stc
xchg
in
fdivrs
fistpll
movsb
cmp
mov
pop
xchg
cmp
cs
sub
mov
mov
scas
rcr
repz
jne
stc
cmpsl
xorb
pop
or
rep
jb
mov
xchg
test
in
test
ljmp
push
lds
push
sub
sub
outsb
popf
bound
in
test
pop
and
xchg
mov
sbb
push
test
mov
hlt
mov
scas
inc
mov
in
sub
das
fcmove
test
movl
or
push
mov
loope
movsb
mov
aam
jne
sbb
jmp
cmc
repz
dec
mov
loop
hlt
cmp
imul
dec
cmpsb
dec
push
or
in
mov
cwtd
je
jmp
loope
sbbl
ds
mov
mov
and
mov
fwait
lods
pop
lock
out
or
fwait
lret
dec
fcomip
jle
fildll
mov
and
and
jns
test
adc
lock
pop
lds
mov
popa
out
ja
insb
cmp
mov
push
sub
mov
aad
lahf
inc
sub
int
and
scas
push
add
stc
add
xchg
test
dec
cltd
les
jb
loope
loope
cmp
aad
cli
pushf
out
and
mov
call
insb
lea
fs
int3
lea
fs
add
ljmp
push
mov
pop
xor
dec
call
mov
and
repz
cs
mov
rcl
sar
daa
in
call
fsubrl
xchg
js
and
outsl
imul
pop
xor
notl
aas
dec
addr16
dec
jns
push
aad
rcll
mov
inc
adc
mulb
sti
mov
adc
add
xchg
sti
or
cmp
outsl
sub
pop
cwtl
or
add
sarl
xor
enter
add
inc
mov
das
xor
jecxz
push
mov
xchg
fisttpll
jns
mov
xchg
lds
inc
imul
out
mov
jg
push
push
hlt
sbb
test
das
push
and
push
in
xchg
in
dec
sbb
fcmove
add
popf
push
adcl
xchg
mov
mov
lea
inc
and
fs
fmul
sbb
adc
mov
add
dec
push
sub
xor
shlb
sub
mov
mov
fs
cmp
in
lahf
fs
fs
sahf
rorl
fcompl
jae
dec
mov
fisubrl
sahf
je
mov
movsl
stos
cmp
lods
or
outsb
mov
cmp
out
insl
jmp
and
lock
xchg
add
add
push
mov
icebp
sub
jg
popa
jnp
or
inc
cmc
lret
pop
jp
fdivs
loop
inc
and
ja
imul
and
fstpl
sub
mov
pop
mov
pushf
movsl
push
in
notl
adc
divb
pop
lahf
loopne
sbb
decb
testl
rorb
xor
rcrb
add
jo
sub
adc
popf
cmp
jg
adc
mov
js
push
and
sub
jecxz
fwait
and
add
lock
mov
push
mov
lds
and
into
faddp
js
cmp
push
jmp
push
dec
cmp
xor
pop
dec
ja
cmc
sar
pop
je
mov
jl
bound
xor
out
std
lea
int
in
jl
inc
jbe
add
sbb
and
ljmp
or
mov
add
bound
mov
mov
or
adc
inc
int3
negl
xchg
gs
inc
lahf
fcmovnb
stos
daa
mov
arpl
pusha
push
rorl
scas
outsb
jno
pop
flds
in
lcall
out
xchg
jl
push
rorb
pop
mov
repz
cmp
gs
enter
jecxz
jae
mov
insl
inc
cs
and
pop
sets
jle
mov
sbb
sbb
test
jns
out
lods
out
in
or
mov
pop
mov
and
jbe
push
lcall
inc
lods
and
xchg
imul
ds
xchg
cmp
ja
adc
mov
push
mov
sti
xorl
mov
xchg
fwait
stos
in
inc
ret
mov
aad
push
mov
mov
inc
scas
push
and
cmc
into
cmp
sahf
shrb
pop
xchg
sub
cld
sbb
jns
leave
jae
enter
adc
cli
imul
pusha
ret
stos
pusha
nop
out
jne
leave
pop
mov
xchg
pop
in
push
addb
mov
add
lret
xor
jb
push
out
and
xchg
dec
cmp
dec
dec
push
lcall
push
rcrl
jnp
es
xor
out
std
imul
pop
cmp
adc
fiaddl
dec
inc
lret
in
mov
pop
aam
mov
mov
inc
lock
addb
pop
pop
mov
sub
pop
cmp
rcr
inc
push
negb
mov
pop
jle
pop
shll
loop
push
dec
imul
pop
push
xor
push
enter
push
pop
xchg
hlt
in
cmpsb
jecxz
stos
aam
push
push
clc
jle
out
xor
lret
add
xor
mov
pusha
dec
shl
mov
lret
in
fldt
int
add
adc
xor
aad
sti
mov
mul
xor
push
push
fsub
nop
or
out
ja
imul
fsubrp
xor
aam
lods
and
xchg
fstps
jne
lret
jp
les
jmp
movsl
cld
mov
std
mov
xor
sbb
pop
in
addr16
fcomp
push
pinsrw
cmpsb
int
add
push
adc
xchg
icebp
adc
jb
test
fdivrl
lock
xlat
gs
andb
mov
imul
ret
push
xor
xchg
sub
adc
fisttps
fnstcw
lret
jnp
out
jne
insl
insl
mov
ss
call
pop
enter
cmpsl
cltd
xchg
jb
xor
mov
add
sub
loope
push
dec
and
xchg
fildll
stos
cli
das
ljmp
dec
mov
mov
push
ficomps
outsb
outsb
jnp
mov
fnstcw
fucomi
ds
push
mov
and
sub
xlat
or
or
push
scas
cwtl
sbb
and
in
enter
add
out
xchg
inc
outsb
popa
cmpsl
in
pop
mov
pop
xchg
sub
cld
scas
pop
dec
cmpsl
pop
adc
test
inc
sub
pop
lahf
mov
fcmovu
cmp
mulb
out
idivl
pop
mov
loope
jae
push
jnp
push
outsb
pop
adc
leave
pop
pop
gs
pushf
aas
loopne
fnsave
dec
stos
fcmovne
test
push
imul
sbbl
and
jbe
std
or
mov
insl
push
mov
jbe
cmp
push
jmp
xchg
lds
mul
mov
imul
std
jnp
insl
in
pop
imul
mov
cmpsl
cmp
xchg
fidivrl
and
mov
sbb
cmp
lret
push
push
mov
xchg
cmp
cmp
out
out
xchg
daa
shll
loop
xor
jp
ljmp
xor
adc
movsb
sbb
fwait
xor
xor
inc
cmp
std
xor
insl
xchg
pushf
repnz
adc
inc
movups
mov
fnstcw
loopne
xor
mov
mov
xor
notb
int
int3
and
jg
sbb
mov
call
loope
xor
xchg
cmp
outsb
pop
mov
inc
ja
cmp
insl
inc
mov
in
sbb
lea
popf
push
scas
repz
movsb
cwtl
rolb
lret
inc
popf
cmp
rorb
popf
inc
shl
xchg
pop
mov
jne
push
mov
sub
mov
sbb
mulb
cwtl
std
push
insb
ss
and
pop
add
jl
pop
pop
call
fiaddl
or
jg
add
sbb
dec
inc
xchg
lcall
les
mov
sbb
adcb
push
push
aaa
clc
lret
mov
jnp
mov
xchg
xchg
fwait
pop
jg
xchg
lahf
lcall
cmp
inc
test
jmp
aas
insl
nop
cwtl
popl
lds
out
xlat
pop
adc
lcall
or
rcl
adc
mov
dec
xor
cmpsb
lods
adc
cmp
dec
sub
push
mov
icebp
push
push
pop
test
dec
dec
jl
xchg
mov
cli
aad
outsb
in
test
out
jecxz
mov
jbe
cmp
xchg
push
imul
adc
push
loop
hlt
inc
inc
aam
adc
and
stos
addb
jo
psubsb
fdivrl
xchg
and
adc
xchg
dec
gs
aas
jge
cmp
pop
daa
pop
xchg
mov
int
or
imul
in
sub
out
inc
jnp
pop
add
movsl
jp
fidivl
cld
div
rclb
xchg
mov
jp
xchg
sahf
stc
push
jo
sub
testb
lret
fisubl
cmp
sbb
add
loopne
sti
in
out
sub
cmpsb
cs
jecxz
xchg
pop
push
xchg
out
fstl
divb
cmp
jmp
std
jnp
jl
adc
aas
pusha
andl
and
mov
lahf
cmc
fldcw
or
xchg
inc
call
pop
inc
pop
dec
out
sbb
inc
pop
imul
js
fs
lret
arpl
push
std
lahf
cld
daa
out
dec
je
jg
mov
add
out
cwtl
mov
cmp
mov
test
push
rolb
inc
push
sbb
in
outsb
into
mov
mov
popa
outsl
in
rcll
sub
add
scas
jns
cmp
pop
inc
inc
inc
adc
push
xor
daa
mov
xchg
in
xchg
or
fisttpl
sahf
sbb
or
pop
fldenv
lcall
data16
outsl
pop
leave
mov
insb
data16
or
ret
stc
inc
add
es
test
mov
lret
mov
pop
or
or
lods
xchg
push
ret
jbe
mul
jne
frstor
add
jle
test
push
or
jge
imul
push
jge
cltd
js
call
mov
pop
jg
mov
sahf
xchg
cmc
fst
or
dec
jno
pop
xchg
lods
fiadds
mov
out
mov
mov
testl
jmp
jb
xchg
dec
xlat
push
shr
mov
loop
mov
and
pushf
hlt
fidivrs
mov
notb
ret
icebp
hlt
pop
xchg
jecxz
mov
mov
arpl
jg
clc
ret
imul
lcall
and
call
aam
stc
push
mov
xchg
push
lods
add
dec
mov
inc
ljmp
dec
test
xchg
push
out
aad
scas
dec
push
push
mov
test
sub
mov
cld
or
into
fidivl
jge
jns
fwait
bound
sub
mov
jle
add
out
lcall
roll
loopne
sar
rcl
or
bound
lret
inc
ret
xchg
shll
lret
bound
dec
or
daa
in
outsb
or
gs
mov
xorb
pop
mov
push
sub
adc
sar
cltd
cmp
cmc
mov
xor
imul
xchg
push
mov
xor
mov
fmull
shl
lahf
cmp
push
bound
lretw
decb
cwtl
scas
jae
test
inc
cmp
mov
test
push
lea
push
negl
xchg
cltd
jp
mov
xchg
push
dec
push
fucomi
mov
and
popf
lods
js
fcoml
lret
hlt
int3
mov
xchg
fcoms
in
popl
xchg
aam
jns
push
cmpsl
push
jnp
mov
xor
lret
mov
ret
sbb
jmp
cli
nop
mov
jnp
adc
cmp
push
movsl
ret
add
repz
cli
xchg
mov
xor
icebp
mov
cmp
shrl
rcrl
and
ss
std
movsl
das
xchg
mov
ds
shll
inc
xchg
xchg
out
inc
push
push
lods
sub
in
pop
popa
xlat
imul
inc
push
cmp
inc
push
inc
daa
clc
jbe
ret
push
fidivl
clc
ds
imul
sub
repz
lea
out
jg
sti
mov
addr16
pop
fcmove
pop
imul
cmp
scas
iret
jnp
in
bnd
fnstcw
lcall
into
popf
stos
imul
lcall
or
xor
mov
pusha
and
mov
int3
xor
mov
aaa
fstl
fs
test
push
test
xchg
push
cli
pop
jne
popl
sbb
test
jmp
sub
cmpsl
sub
and
pop
rcll
je
test
xchg
out
adc
enter
adc
mov
cmp
int
sub
dec
call
insl
fcmovbe
xor
jg
pop
jmp
fldt
rorb
ja
daa
sbb
pushf
loope
gs
ret
sarl
repz
testl
inc
cmpsl
cli
jmp
sub
mov
nop
xchg
push
mov
pop
fwait
mov
loopne
testb
mov
insb
cld
and
sbb
sbb
mov
inc
xchg
sbb
dec
jg
cmp
sub
and
into
insl
xor
into
lret
dec
or
jg
mov
gs
into
minps
mov
sub
inc
push
sahf
push
jbe
outsl
stos
in
std
sbb
enter
fimuls
xor
cmp
xor
add
es
in
inc
out
fimull
fstpl
mov
sbb
aad
lods
push
and
nop
push
cmp
pop
fs
icebp
fidivrl
cltd
inc
int3
outsl
sbb
mov
jp
inc
shll
pop
adc
mov
jo
mov
les
insl
dec
xor
out
in
and
popa
mov
repnz
fmulp
into
std
insl
inc
push
mov
aad
loope
xlat
xor
int
adc
push
in
fadd
mov
fwait
dec
add
mov
test
xchg
cli
nop
jle
ret
pop
push
ds
inc
decb
movsb
xlat
jbe
cld
sbb
mov
xchg
jb
inc
cmp
mov
mov
pop
xchg
leave
in
sbbb
inc
out
aaa
sub
xchg
fstl
lds
lret
dec
pop
shrb
xor
sub
movsb
mov
insb
mov
daa
icebp
or
push
mov
xchg
out
test
pop
and
pop
ljmp
mov
lcall
sahf
lods
and
or
push
pop
ds
nop
xchg
fnstcw
xor
and
push
and
dec
in
xchg
mov
sbb
mov
add
add
sbb
fcomps
dec
outsl
mov
push
out
out
push
aad
shl
hlt
int
and
jbe
push
mov
iret
fdivrl
jg
mov
fcoml
jle
mov
test
jmp
pop
das
icebp
mov
inc
ret
cmc
xor
mov
fwait
cmp
mov
or
cwtl
sub
and
jae
jp
dec
mov
data16
iret
adc
pcmpgtb
iret
ja
cld
sti
loop
mull
shlb
cld
lods
out
mov
sarl
or
pop
dec
loope
ficomps
jl
test
sbb
lret
repz
out
sbb
test
addr16
das
cmp
int3
stos
mov
out
inc
sbb
lret
in
in
in
icebp
xchg
rolb
jns
sbb
test
mov
and
mov
mov
lret
lahf
push
jl
imul
es
and
repnz
add
sahf
fwait
es
mov
cmc
insb
daa
mov
add
leave
repnz
push
test
test
xchg
sub
ljmp
ret
push
pop
test
sahf
movaps
jo
sub
sbb
dec
hlt
xchg
mul
data16
mov
std
rcll
aaa
dec
xor
xor
and
mov
outsb
mov
lret
pop
cs
inc
mov
jmp
pop
stc
xor
lock
loopne
sbb
mov
ljmp
stos
repz
in
stos
adc
cmpsl
hlt
add
pop
or
lea
fisttps
setb
xchg
pop
sarl
out
xor
sbb
cmp
cmc
or
out
data16
sub
add
jp
add
jb
add
jne
popf
aad
movb
mov
lahf
ret
lods
pop
dec
daa
dec
adc
xor
mov
repnz
leave
imul
dec
shl
dec
inc
in
pop
mov
divb
into
icebp
push
push
pop
ret
repnz
jns
dec
in
lods
hlt
idivb
ds
and
pop
jg
mov
mov
pop
jae
push
rclb
das
mov
adc
sbb
fisubs
in
sub
push
dec
dec
lcall
xchg
les
cmc
xchg
inc
pop
cli
xchg
push
sub
subl
loope
fs
lods
pop
push
adc
xchg
mov
je
bound
es
enter
xor
loop
inc
mov
fnstsw
sbbl
mov
insl
jge
es
xchg
push
ret
subl
shlb
inc
call
orl
out
ficoms
push
popa
dec
jle
shl
push
cmp
push
cmp
int
mov
lea
sbb
ljmp
sahf
lcall
cs
lods
or
mov
push
repz
inc
sbb
cmp
into
sbb
or
leave
mov
rorl
test
insb
inc
or
and
mov
mov
xchg
add
jle
arpl
push
push
push
mov
shll
fnstenv
movsb
ret
xchg
cmp
in
xchg
int3
ret
movsl
ljmp
out
cmc
inc
mov
and
mov
rclb
sbb
mov
mov
xchg
in
mov
sbb
sti
inc
xor
jno
ds
sbb
scas
int3
roll
and
or
mov
add
dec
xchg
aad
cmp
mov
xchg
dec
cmp
cmp
jne
adc
push
ljmp
lahf
jne
push
mov
jle
aaa
daa
outsl
das
adc
icebp
xchg
and
popf
add
pushf
dec
mov
mov
adc
int
pop
sbbb
xchg
sbb
imul
sub
cmp
or
adc
xchg
jno
mov
cs
sbb
call
sub
test
pushf
and
cmp
ds
sbb
stc
dec
xor
je
mov
ss
cmp
jns
fidivrs
gs
lahf
pop
popa
pop
pop
jb
rcrl
lea
jns
sub
cmp
test
sub
stos
sbb
sub
dec
pop
rcrl
pop
mov
std
ret
and
adc
fnsave
stos
ljmp
or
mov
enter
ljmp
cmp
popa
jo
xchg
pushf
in
stos
lret
cmp
jbe
cmp
push
stc
adc
fs
loope
mov
mov
xchg
pop
pop
into
movsl
mov
pushf
cli
ret
aaa
push
pop
ja
outsl
jnp
loope
test
cmpsl
ja
mov
inc
xor
cltd
pop
es
subb
data16
ss
sub
sub
and
cmpsb
xor
in
mov
jp
mov
shll
and
jae
sbbl
or
subl
fwait
mov
sub
inc
out
mov
push
gs
mov
shll
dec
in
xchg
fstpl
shlb
push
sub
movl
xchg
sti
jnp
jecxz
decw
mov
and
and
inc
inc
inc
sbb
sbbl
xor
dec
inc
xor
cld
test
inc
xor
jns
xchg
push
pop
add
xor
cmp
mov
mov
movsl
stos
es
sub
or
push
and
scas
adcb
hlt
ds
lock
inc
push
xchg
or
shll
aas
mov
mov
push
out
ljmp
mov
fsubs
inc
je
dec
pop
les
repz
out
and
pop
jns
push
xchg
mov
rclb
lahf
in
or
or
mov
push
ja
mov
mov
mov
pop
mov
mov
or
and
sub
js
in
xor
dec
lods
push
jno
test
das
jle
loopne
cmp
dec
lock
or
arpl
or
xchg
xchg
fs
cmp
push
gs
test
in
les
into
lcall
std
fcomi
jecxz
dec
js
iret
ljmp
mov
jnp
push
xchg
sub
repz
out
bound
daa
jno
inc
pop
or
adc
fs
pushf
cli
je
hlt
xlat
lret
cmpsb
sub
mov
adc
sbb
mov
or
mov
xor
adcb
pop
pushf
iret
xchg
rorb
inc
mov
addb
nop
pop
push
testl
movsl
aaa
xchg
adc
mov
leavew
and
jmp
movsb
cld
fwait
mov
pop
out
xchg
xor
movb
mov
mov
dec
sahf
sbb
ret
push
xor
xchg
cmpl
mov
mov
es
mov
xor
sub
call
pop
push
jns
cmp
stos
dec
xor
cmpsl
and
sbb
adc
hlt
cmp
cli
dec
mov
push
push
or
xor
mov
xor
pop
in
cld
fwait
pop
cmpsb
les
push
push
mov
icebp
shl
inc
mov
cmpsl
cmp
or
arpl
popf
je
shlb
rol
hlt
ret
jmp
xchg
imul
pusha
sub
cld
jg
xor
fwait
lahf
movhlps
int3
int3
mov
dec
push
sbb
ljmp
dec
shlb
jnp
fisttpll
arpl
aas
pusha
in
push
loop
xor
loope
jne
inc
sbb
mov
fucom
ds
and
xor
loopne
fs
cwtl
xor
push
cmp
pop
pushf
pop
sbb
scas
sub
shrl
xchg
aad
dec
lds
xor
imul
int
push
add
jp
mull
popf
push
or
ffree
ds
ljmp
mov
and
mov
pop
in
push
pop
gs
mov
test
leave
inc
pop
bound
xchg
js
pop
cmp
sbb
pushf
jl
scas
faddl
mov
call
mov
icebp
hlt
aam
fsubs
addr16
jnp
sbb
loopne
fs
xor
mov
inc
jge
por
adcb
dec
pop
sub
dec
lahf
outsb
dec
cmp
xor
xchg
popa
test
pusha
nop
push
and
xor
sbb
inc
icebp
sbb
in
mov
fildll
and
sub
jbe
pop
dec
add
xchg
jp
and
adc
sbb
scas
mov
jbe
stos
jns
in
dec
sbb
or
lcall
loopne
js
mov
leave
mov
dec
shll
rolb
mov
inc
mov
sub
xor
or
lcall
push
push
insl
jb
push
cli
sub
dec
mov
inc
or
lret
xchg
fimuls
loop
push
pusha
ret
cmp
push
mov
adc
cmc
cmpsl
xchg
sub
mov
dec
cli
xor
mov
cmc
into
rorl
push
ficomps
fadd
pop
mov
dec
sarb
sub
fsubrl
jb
sub
adc
push
insl
xchg
jmp
subl
add
push
push
xor
and
inc
cmp
jp
adc
movl
ja
adc
fsubl
add
and
ljmp
fbld
jnp
mov
and
pop
mov
inc
jae
xor
xchg
idiv
and
push
in
aas
out
addr16
sarb
sahf
rol
lods
stos
lea
mov
ss
mov
adc
push
test
mov
pop
lods
dec
sub
or
xchg
push
int3
fimuls
inc
xor
cmpsb
xlat
and
testb
insb
loopne
dec
add
inc
cld
fsubrs
int
sbb
dec
int
fnstsw
fidivrl
or
orb
cmp
gs
jo
jb
adc
cmc
cmp
mov
mov
xchg
sarl
pop
push
enter
sub
pushf
repz
and
inc
and
movsb
adc
stc
push
arpl
cmpsb
mov
fistl
and
pop
mov
jnp
jb
sub
xchg
jb
out
shl
pop
imul
mov
ss
shl
jb
fcom
aad
loope
sti
pop
add
fildll
adc
fldcw
sbb
addr16
out
mov
xchg
push
adc
pop
jo
call
add
iret
ja
pop
ret
or
or
or
test
push
pop
mov
xchg
jge
xor
js
push
fwait
xor
lret
and
mov
fstps
std
cmpsb
arpl
or
adc
sbb
inc
pop
cs
and
push
xorb
push
push
cli
mov
mov
fisubs
repz
add
mov
cmp
and
in
iret
xchg
xchg
pop
pusha
mov
cmc
fisttpl
imul
or
xchg
out
mov
lods
push
add
gs
adc
mov
mov
mov
test
outsl
je
cmpsl
test
iret
xchg
jne
jbe
lcall
mov
sbb
sbb
xor
cmp
movsb
cmp
cltd
insb
out
jl
roll
sti
xor
jbe
rorb
xchg
and
cmp
jecxz
add
cmp
sbb
lds
jl
jmp
cmp
mov
ss
jge
pop
sbb
mov
or
js
jno,pt
mov
jl
aam
sub
inc
rol
and
stos
jl
push
orb
jmp
xor
adc
xchg
sub
out
vpunpcklqdq
sbb
outsb
test
cmpsl
pop
cmpsl
adc
add
add
mov
mov
stos
daa
mov
loop
rclb
dec
rol
push
into
repz
scas
adc
add
sub
sahf
aad
mov
cmp
aaa
and
hlt
aam
movb
sub
imul
cmp
pop
sub
push
mov
lret
lahf
xchg
mov
movsb
repz
inc
shrb
push
cwtl
fdivrl
lahf
pop
test
mov
xchg
scas
adc
les
insb
into
xor
xlat
out
pop
fwait
aam
xor
dec
lret
xor
mov
xor
push
jge
pop
jle
sub
dec
xlat
movsb
pop
ljmp
sub
jg
dec
call
push
lea
sbbl
fimuls
in
adc
mov
push
adc
clc
popa
mull
mov
xchg
jl
outsb
jecxz
and
push
pop
push
cmpsb
add
movsb
cmpsl
scas
stos
jae
add
fistps
sbb
xchg
cs
pop
ss
push
xchg
xchg
jmp
push
movsl
scas
sbb
jle
nop
imulb
mov
fisubl
xchg
sbb
xor
inc
in
imul
fs
mov
lods
loopne
lret
jmp
pop
dec
fdivs
scas
call
or
test
icebp
in
lcall
fistpll
inc
dec
std
push
dec
shlb
cwtd
in
enter
mov
lea
mov
outsl
and
repz
add
and
mov
jle
cmp
jl
aaa
out
insl
ljmp
mov
nop
pop
ds
push
movsl
imul
inc
shrl
pop
add
mov
mov
jae
negb
sub
fldcw
pop
and
mov
fldl
mov
inc
nop
fistpll
insl
mov
pop
push
negl
js
movsl
push
jb
addr16
xor
inc
ret
jae
push
fs
movsl
arpl
pop
add
mov
fisubrs
inc
lds
push
push
push
pop
shrb
pop
push
adc
cld
dec
xchg
adc
movsl
adc
loope
iret
lds
sti
push
das
das
inc
sbb
xor
ret
mov
xor
mov
lods
jl
notl
sbb
fs
xorl
pop
adc
lahf
mov
mulb
in
add
lcall
cs
mov
jno
mov
jle
jbe
push
mov
mov
dec
mov
lret
inc
cmpsl
mov
jb
sti
leave
aas
lcall
xor
bndstx
outsl
pop
addr16
repz
int
pop
jne
mov
js
jo
mov
int
xor
sbb
pop
mov
pop
aas
fmulp
lahf
jmp
dec
ja
fwait
pop
xchg
stc
push
in
xchg
add
mov
mov
jno
pop
jo
inc
repz
inc
add
or
inc
in
dec
push
repz
notb
push
addr16
pushl
fwait
mov
insl
xor
jl
stos
mov
cmc
cs
push
je
sti
pop
add
cmp
add
push
sbb
addl
mov
je
push
clc
outsl
cmp
or
repz
cmp
out
stos
xchg
rclb
loop
ret
scas
sub
adc
aam
dec
push
lods
mov
js
dec
adc
dec
cmpl
sub
and
enter
aaa
ljmp
call
xor
sub
scas
xor
fucomp
lahf
jo
imul
xlat
xchg
jle
mov
pop
xchg
dec
popa
pusha
je
iret
dec
mov
jge
cmc
cmp
push
sbb
jns
jns
fldcw
ret
mov
pop
fwait
mov
inc
es
xor
xor
aaa
call
or
xchg
mov
cmc
or
sub
mov
pop
je
pop
out
push
outsb
addr16
inc
jecxz
pop
pop
lret
fidivl
cld
pop
xchg
jnp
jno
cvtps2pi
cli
pop
cmp
mov
pushf
sbb
popf
or
mov
cmp
sub
pop
in
lret
out
addr16
add
xlat
or
pop
repz
pop
mov
sbb
ret
xlat
jg
sti
sbb
addr16
xchg
mov
mov
jno
daa
dec
sub
or
dec
mov
mov
or
pop
ja
xlat
xor
push
inc
mov
lock
inc
cmpsb
adc
out
rorb
or
push
lds
mov
mov
fwait
inc
sbb
out
gs
sbb
out
mov
les
dec
outsl
mov
inc
jbe
xchg
mov
test
xor
inc
pop
mov
popf
xchg
mov
jp
js
addr16
divb
push
les
leave
imul
pusha
data16
jno
jmp
lahf
jnp
jne
ficoms
repz
out
dec
scas
push
inc
xorb
push
and
bound
sbb
fistl
sub
mov
mov
popf
jae
mov
mov
mov
scas
iret
in
add
adc
popl
jmp
lret
arpl
mov
cwtl
out
jns
mov
jns
mov
jp
sbb
mov
rolb
mov
add
idivl
jge
inc
sbb
aaa
xchg
xchg
fcomps
iret
sub
das
nop
roll
out
icebp
xchg
scas
mov
cmp
fisttpll
jmp
fisubrl
dec
cltd
cmp
xchg
icebp
pop
orl
data16
mov
sbb
out
sbb
loope
imul
nop
test
sub
lret
dec
mov
aas
xor
xchg
cli
push
fninit
in
ds
jmp
add
pop
xor
loope
xor
insb
mov
cmpsb
add
stos
loope
sub
pop
push
popa
inc
idivb
call
add
nop
xchg
push
bound
pusha
jl
and
mov
mov
fcompl
pop
mov
inc
dec
pop
roll
subl
mov
sbb
sub
int3
shlb
mov
xchg
call
and
xor
movsb
cmpsl
lcall
sub
xor
je
pushf
enter
pop
dec
aad
movsb
das
xor
mov
movsb
xor
add
in
sbb
push
push
jno
xchg
fcmovnu
and
xchg
sbb
pop
aaa
inc
dec
xchg
jl
loopne
repnz
mov
adc
sub
testl
inc
adc
std
xchg
jmp
aad
xchg
pop
mov
push
je
dec
push
sub
inc
sbb
adc
and
shlb
mov
scas
mov
fwait
ljmp
stc
jp
data16
mov
mov
sbb
and
sub
mov
and
outsl
dec
out
dec
dec
mull
jnp
sbb
notb
in
lea
inc
xor
ja
jge
xchg
mov
xor
cmp
mov
and
lret
fidivrs
repnz
stos
push
pop
lahf
fsubrs
imul
adc
dec
loop
cmp
sti
push
cwtl
and
insb
cmp
xchg
adc
ss
test
ret
cmp
test
mov
cmpl
dec
outsb
lahf
out
jb
push
adc
push
ret
out
xchg
sub
pop
push
sub
ret
and
call
mov
insb
jae
faddp
dec
xor
lock
and
cmp
jg
ret
lret
jbe
mov
in
repz
push
leave
faddp
and
ljmp
sbb
dec
xchg
rcr
rclb
xchg
xor
aam
xchg
dec
mov
push
dec
jge
ret
outsl
arpl
jno
xchg
test
jbe
pop
imulb
pop
adc
push
mov
jp
push
inc
shrb
mov
rorb
xchg
jns
mov
xchg
scas
shlb
cmc
xchg
or
dec
push
das
cld
dec
lds
cmc
les
and
and
popa
and
fldenv
clc
pushf
mov
loope
adc
ret
stos
mov
xchg
scas
and
bound
loop
mov
xor
push
cmp
push
out
ljmp
popf
cmp
cmpsl
xchg
add
das
adc
pusha
cwtl
test
lahf
pusha
xchg
jno
inc
imul
cmp
add
pop
rcrl
outsl
incl
repz
cwtl
repz
add
jecxz,pt
jne
add
js
out
dec
and
mov
sbb
mov
xor
mul
pop
sub
push
cmp
popaw
stos
cmpl
mov
or
mov
cmc
cmc
incb
jo
mov
inc
frstor
andb
inc
fldt
jns
addr16
jge
repnz
push
push
fwait
mov
xchg
int
xchg
pop
enter
rcll
pop
cwtl
or
sti
cmpsb
jl
mov
pop
jl
fwait
mov
enter
pusha
mov
pop
clc
ja
lds
sbb
sbb
xchg
mov
lods
adc
dec
xlat
xor
fwait
cmc
pusha
adc
sti
cmp
fwait
inc
pusha
cmc
xor
sbb
lds
xchg
mov
fnstenv
pusha
pop
pop
sub
imul
mov
sahf
and
mov
push
in
lea
out
mov
mov
lea
push
rcll
cmp
aad
xor
fisttps
mov
sbb
dec
test
fidivs
dec
mov
nop
lock
out
daa
jg
push
xchg
and
dec
fwait
test
movsb
sbb
push
je
repz
outsb
enter
lret
mov
mov
inc
push
inc
test
mov
cmp
ficomps
mov
test
lret
push
nop
sub
mov
jae
push
inc
lock
adc
xchg
mov
pop
dec
mov
mov
fnsave
clc
repnz
mov
xor
dec
bound
iret
xor
out
in
mov
pop
mov
mov
sti
cwtl
popa
aad
mov
cmp
dec
insl
push
bound
lret
xor
lods
adc
mov
push
inc
dec
popf
sti
ljmp
jecxz
push
shlb
or
cmp
inc
jecxz
hlt
xor
inc
flds
and
sub
pop
das
icebp
cwtl
jbe
sti
xchg
fbstp
pop
popf
mov
repnz
inc
fpatan
clc
jne
adc
ja
jbe
xchg
lods
mov
addr16
xchg
xchg
ja
push
add
push
pop
dec
lods
rep
hlt
inc
lds
sbb
push
push
dec
stos
dec
and
jne
sbb
pusha
sahf
mov
pop
popf
inc
ss
subl
push
jmp
add
mov
rcll
sahf
ds
imul
clc
xchg
inc
inc
dec
lahf
stc
mov
xor
ds
ljmp
repz
fists
scas
imul
orl
mov
addb
mov
lds
xchg
in
fistpll
xlat
push
daa
adc
test
add
pop
mov
data16
out
jae
xor
out
add
sbb
jge
fisttps
mov
mov
xchg
mov
mov
add
xor
push
xor
push
ret
xchg
sub
mov
sub
and
and
pop
sbb
repz
cmc
sub
test
hlt
mov
push
test
loopne
ficoms
imul
lcall
fnstsw
test
jle
movsl
and
sub
in
insl
es
sub
ret
imul
scas
cmp
mov
in
mov
mov
cmpsl
in
aam
mov
mov
mov
push
xchg
sub
repnz
loope
dec
dec
inc
clc
data16
inc
push
or
push
dec
out
test
lcall
std
cmp
xor
pushl
cld
mov
shlb
insl
cltd
scas
cmpsb
lock
jbe
pop
rcll
push
call
cmp
shrb
bound
ja
push
popf
shl
jl
mov
sub
addr16
mov
pop
cs
idivl
pop
iret
repnz
mov
std
je
popf
cmpsl
adc
lcall
sub
repnz
out
cmc
fidivl
push
bound
out
leave
jge
mov
test
push
cmp
or
sbb
sbb
fwait
pop
lret
dec
pop
aaa
shrb
pop
push
cmp
sbb
inc
adc
fisubrs
pop
xor
mov
xor
inc
mov
pushf
and
mov
adc
fsubp
lahf
rcll
fdivp
inc
sub
cltd
push
mov
cmc
insl
rorl
sub
int
outsb
stc
test
nop
sbb
insb
inc
icebp
inc
movsb
jmp
push
jl
xchg
inc
jae
xchg
lock
inc
stc
cmp
mov
dec
gs
jle
inc
repz
push
cmp
rcl
dec
adc
and
and
push
insl
sub
adc
add
cwtl
data16
dec
push
xchg
add
xor
notb
fldt
lea
loope
divb
push
pop
pushf
dec
fdivs
loope
scas
jle
fsubr
js
pushf
xchg
push
shl
jo
fcoml
repz
sub
std
fimuls
pop
xor
mov
pop
pop
jns
jecxz
daa
lahf
int3
andb
les
test
push
fnstenv
adc
xchg
loop
sarl
adc
imul
aaa
js
test
mov
inc
cmp
movsb
fbld
call
xor
jmp
in
out
dec
xchg
loope
push
inc
jecxz
sbb
jns
mov
imulb
stc
xchg
mov
pop
inc
xchg
cmp
push
or
andl
popa
fsubl
cmpl
stc
fsubs
aad
xor
add
imul
mov
cmpsl
out
fsubrl
jp
shl
nop
scas
lcall
mov
sub
test
adcb
std
fs
inc
fisubs
or
loope
push
lods
cmp
je
pop
xchg
leave
sbb
in
nop
mov
mov
shr
mov
insl
sub
add
fdivs
jle
xlat
mov
sub
gs
adc
jle
or
addr16
insb
cmpl
xchg
lret
xchg
lods
lock
inc
movsb
orl
jb
xchg
imul
out
cmp
fwait
sub
lcall
stos
fimull
xor
mov
dec
cmp
mov
mov
cmpsl
shll
mov
ljmp
push
shll
or
cld
sub
dec
in
mov
stos
jb
cld
add
lods
push
popa
xchg
mov
mov
ja
xor
sub
or
rol
lds
lds
in
xchg
mulb
stc
pop
rcrl
andb
and
cmpsb
jp
xchg
cmp
mov
scas
popa
insb
aas
cltd
push
nop
adc
xor
je
ficompl
mov
in
out
xchg
aam
fisubs
fcoms
insb
out
out
pop
pop
sti
jg
mov
and
fucomip
xlat
dec
pushf
xor
mov
bound
push
enter
fbld
sub
imul
jge
mov
dec
xor
ficoms
addr16
xchg
add
jle
ljmp
pop
dec
ret
dec
adc
xor
aas
inc
insb
sub
hlt
outsb
das
arpl
cltd
es
push
negl
rorl
cmpsl
xchg
test
mov
mov
pop
inc
push
add
cmp
es
lret
ss
mov
mov
loope
jmp
xchg
add
adc
ja
popa
sbb
dec
mov
lods
out
in
jp
int3
stos
jnp
popf
dec
xchg
dec
inc
mov
lock
dec
jnp
adc
outsl
pop
push
fcoml
push
push
push
fldenv
mov
sarl
xchg
xor
jp
mov
sbb
shl
enter
lcall
xor
fiadds
gs
inc
pop
aad
or
dec
cmpsl
sbb
out
ja
sbbl
push
pusha
adc
add
xchg
mov
test
jg
sbb
dec
cwtl
jne
mov
jmp
pop
fcmovnb
inc
or
test
push
cwtl
cmc
cmpsl
jne
sub
xor
xor
inc
loope
out
cmp
fcomps
lret
lods
and
xchg
sbb
and
in
mov
jae
clc
imul
and
push
cmp
pop
xor
lcall
mov
xchg
insb
xchg
or
xchg
scas
mov
push
add
inc
jbe
out
rcrb
push
incl
inc
jecxz
cmpsl
shll
mov
pusha
adc
pop
lds
mov
mov
mov
jge
movl
insb
mov
mov
call
mov
cwtl
fidivl
and
xor
clc
iret
add
and
mov
adc
stc
psrlw
hlt
adcb
imul
dec
lret
punpcklwd
inc
rcrb
mov
outsb
shld
das
into
bound
dec
outsb
and
adc
jge
je
hlt
popa
frstor
and
lds
jg
cmp
dec
aas
jp
call
test
imul
cmp
orl
cmc
push
cs
jmp
gs
sbb
push
ljmp
sbb
cmpsb
rcrb
iret
ret
sub
mov
ficoml
out
lods
sahf
hlt
fstps
or
mov
movl
scas
xor
andb
jl
lahf
cld
sbb
outsl
and
and
adc
adc
icebp
mov
sbb
and
fcmovbe
pop
test
cmpsl
xchg
enter
xchg
or
mov
ja
mov
cli
jae
and
adc
mov
jmp
push
sub
into
call
add
ja
pop
aaa
mov
das
pop
repnz
mov
push
les
arpl
mov
push
leave
mov
ds
lods
pop
fldt
mov
orb
mov
jno
fldl
dec
mov
out
xorl
pop
cmc
pop
cmc
cmp
push
fsts
mov
jecxz
pop
xchg
hlt
fldcw
sub
clc
negl
jbe
cmp
pop
int3
jo
add
lret
mov
sub
rcrl
arpl
mov
mull
in
aaa
ret
lea
jb
mov
mov
int
in
ret
xorb
movsl
mov
push
or
aas
dec
push
out
fadds
mov
mov
pop
sarb
pop
fnstsw
pop
or
ljmp
addr16
in
push
cmp
jb
cld
les
test
xor
push
sub
xchg
ror
loop
sbb
jge
pop
pop
je
mov
leave
add
mov
cmp
lret
push
cld
not
aaa
enter
mov
pop
cwtl
dec
adc
es
lcall
push
push
cmp
xor
sarl
inc
pop
aas
scas
imul
inc
mov
sub
pop
adc
scas
sbb
addr16
pop
sub
out
fs
cltd
sub
out
push
and
in
push
dec
push
push
and
call
arpl
pop
jae
mov
outsl
sahf
shll
fisttpll
movsb
data16
int3
pop
jl
jns
aam
ljmp
cmp
or
xor
loope
outsl
fisubrs
mov
in
and
std
inc
xor
mov
and
aad
sbb
into
sub
mov
or
cmc
mov
insl
scas
pop
add
sub
cli
pop
inc
cmp
mov
push
mov
add
cs
lock
cwtl
ret
xor
pop
loope
leave
mov
pop
xlat
dec
test
test
pop
add
cmp
and
xlat
adc
outsb
xchg
aad
sub
or
mov
imul
add
fadds
and
sub
xor
adcl
loopne
or
mov
jmp
mov
mov
jp
mov
xor
mov
ret
jae
dec
sti
mov
jbe
and
fwait
xchg
jl
data16
add
cmp
fwait
cmp
xor
aas
lret
push
sti
fnstsw
xor
incl
cmp
sub
adc
or
sub
mov
jae
call
cmc
mov
pushf
aad
or
nop
sti
sub
in
ret
adcl
mov
or
pop
sbb
push
das
repnz
imul
fsub
xchg
push
dec
push
adc
push
cmc
rcrl
add
mov
push
xchg
movsb
dec
mov
mov
lahf
cvtps2pd
sub
push
ds
int3
dec
sbb
sub
insb
jecxz
fiaddl
add
cmc
daa
fistpll
xor
cmp
sbb
fcomip
out
pop
mulb
adc
pushf
pusha
add
test
lret
push
out
rclb
dec
mov
jl
hlt
shl
enter
sub
fwait
cmp
es
cmpsl
out
imul
out
imul
out
out
pop
jae
push
pop
jo
int
push
pop
shrl
fstl
cld
outsl
pushf
or
adc
mov
jg
jns
mov
cwtl
orl
cs
mov
aaa
xchg
lea
sbb
inc
xchg
push
sub
fimuls
xlat
sbb
xchg
repnz
mov
adc
movsb
jno
nop
mov
push
movsl
fcoms
into
aas
fdivrp
adc
movsb
mov
mov
mull
push
dec
shlb
push
loopne
and
addr16
div
or
stc
iret
jo
mov
mov
push
mov
fstpl
sti
lahf
inc
xor
sti
aaa
cmpsl
fbstp
std
cmp
subl
loopne
mov
mov
mov
lea
jg
jp
icebp
xlat
ss
cmpsb
adc
les
out
push
push
fwait
test
mov
bound
mov
or
jo
lock
pop
cmp
adc
std
mov
jae
dec
sbb
cmp
jae
insl
pop
mov
sub
inc
dec
and
jecxz
sti
arpl
inc
xchg
ret
mov
lcall
sahf
ret
xor
fdivrl
jle
xchg
cld
cmp
movsb
fimuls
xchg
call
dec
arpl
mov
mov
sbb
push
cmpsl
mov
mov
push
das
xor
xor
cltd
pushf
mov
loop
push
jbe
pop
popa
rcl
data16
dec
push
push
mov
push
mov
jo
mov
test
pusha
cmpsl
dec
adc
std
fimull
in
stos
push
bswap
int3
push
in
sti
scas
lock
pushf
jno
push
lret
jp
cmp
and
jge
inc
popf
sub
fwait
out
lock
fists
aas
mov
addb
sti
push
pusha
cmpsl
lret
mov
sar
sub
sti
shr
aam
lods
pop
fldcw
bound
lahf
and
jecxz
inc
xchg
lock
insb
fcompp
fidivrl
inc
push
xor
cmp
aam
mov
push
xchg
out
ret
inc
jmp
imul
sbb
or
outsl
xlat
adc
popf
loope
mov
adc
sbb
inc
or
pop
aam
push
ljmp
sahf
push
cmp
js
iret
add
cld
inc
in
mov
lock
fwait
push
mov
push
add
mov
fisttpll
jmp
push
cmpsl
les
ret
sub
push
sub
adc
fldcw
data16
scas
mov
scas
ds
lods
mov
jge
mov
dec
mov
jbe
push
hlt
ret
popa
jne
push
in
add
scas
pop
int3
ds
xor
sbb
into
std
out
mov
clc
pop
ret
dec
ret
test
mov
rcll
stc
xor
push
mov
mov
xor
pop
mov
xlat
fdivs
jo
lret
add
movsl
xchg
inc
fldl
mov
bound
in
mov
jle
jge
std
and
jbe
fadds
sbb
mov
das
call
push
popa
push
mov
je
adc
scas
aas
jle
xchg
leave
movsl
dec
fsubrl
sbb
aaa
in
or
jnp
imul
cmpsb
push
nop
sub
sbb
repz
adc
inc
icebp
add
sbb
mov
fisubrl
pop
mov
mov
je
xor
clc
ljmpw
sahf
push
inc
add
cmpsb
jne
in
test
jmp
fbstp
cltd
fists
mov
xor
xor
fistpl
pop
popf
sub
dec
les
dec
fdivl
and
inc
movsb
int3
fdivrs
orb
and
xchg
cli
hlt
stc
dec
addr16
adc
mov
lahf
push
out
mov
cld
out
cld
dec
fwait
mov
sub
fistpll
mov
push
in
mov
lahf
imul
mov
ss
mov
sbb
jno
data16
pop
leave
jg
fs
or
ds
lcall
xor
bnd
pop
dec
je
arpl
adc
call
and
dec
push
lret
rolb
mov
icebp
mov
jle
dec
ret
rdtsc
sub
adc
insb
ds
xor
mov
shrl
xchg
sub
jl
jns
fisttpl
xorb
lds
in
rol
mov
sti
js
jbe
inc
ljmp
or
xor
sub
add
and
mov
mov
pop
mov
out
mov
inc
lcall
sub
or
outsl
inc
sahf
and
test
pop
std
sub
nop
shl
sub
or
mov
mov
sarb
push
fdivrl
inc
insl
and
scas
pop
pop
dec
outsl
cli
lock
mov
ror
xor
jp
addr16
lods
adc
or
popa
jmp
jl
fcomip
push
or
nop
lahf
fistps
and
jne
sbb
fisttpll
push
into
push
iret
loop
xor
or
push
push
inc
jecxz
std
jmp
cmpsl
mov
repnz
hlt
dec
jl
lods
inc
icebp
lea
adc
flds
push
add
in
sub
inc
ja
cmp
scas
dec
stc
sarl
loope
leave
out
xchg
sbb
rolb
or
int3
test
add
cmp
popa
and
mov
jbe
jo
roll
cmp
loope
movsb
push
add
call
or
mov
mov
inc
push
gs
pop
std
sahf
fscale
test
std
push
push
in
xlat
cmpsl
xor
pop
add
and
data16
xchg
mov
inc
stos
xor
push
jns
and
in
jmp
leave
add
fisubs
movsl
jns
fisubl
scas
std
sbb
mov
add
jo
inc
pop
pushaw
mov
jnp
dec
loopne
pop
nop
ss
or
hlt
push
xor
and
iret
push
sbb
cmp
sarl
int3
mov
jle
aaa
iret
cld
and
cmpsl
in
adc
fnstcw
adc
inc
cld
shr
or
call
es
pop
scas
mov
sbb
cmp
lahf
loopne
and
arpl
sbb
push
mov
jge
je
dec
aas
sbb
push
nop
mov
mov
sbb
dec
fisttpll
ss
js
stos
sbb
push
add
mov
fstpl
xchg
jp
aad
fisttpll
jle
cmpsl
or
pop
out
jno
repnz
mov
js
mov
jle
ja
insl
sbb
mov
add
xor
sbb
or
or
xor
lods
mov
stc
int
fwait
stos
lods
leave
inc
lock
into
adc
xor
sbb
fdivrs
mov
push
xchg
enter
or
sarb
pop
bound
jb
iret
adc
cltd
cmp
les
repz
push
testb
test
aad
in
lret
inc
push
push
mov
cltd
jns
add
cld
jne
push
cltd
mov
pushf
mov
repz
insl
mov
push
das
scas
xchg
add
hlt
cld
adc
scas
cmp
jmp
push
aad
sub
push
adc
mov
in
jecxz
jnp
xchg
xchg
push
mov
pop
int
push
inc
repz
mov
sub
and
sbb
into
and
and
nop
cltd
sbb
testb
cmp
arpl
pop
cmp
clc
pop
add
mov
xchg
sti
rcl
add
gs
pop
pop
bswap
in
adc
add
out
mov
lods
push
out
adc
fisubrl
enter
or
test
xchg
push
hlt
and
or
jecxz
out
xchg
ljmp
sbb
loope
inc
dec
adc
mov
bound
insl
mov
push
sub
mov
rep
pop
dec
insl
push
pop
clc
repnz
fiadds
insl
push
cltd
dec
or
jns
jmp
lods
ljmp
sub
js
divl
lahf
pop
sub
jns
lods
out
xor
aad
xchg
lret
test
mov
add
mov
movsb
pop
rolb
std
jns
repz
daa
aam
lahf
leave
inc
negb
sbb
mov
call
mov
xchg
in
lahf
dec
mov
add
adc
test
inc
std
cs
inc
mov
mov
sbb
fisubrl
stos
inc
enter
add
add
call
sbb
xchg
xchg
add
jp
test
imull
and
jp
xchg
es
pop
outsl
sti
in
pop
xor
fwait
int3
mov
xor
add
clc
lods
bound
inc
fisubs
cli
insl
push
adc
xchg
push
call
mov
or
mov
fistps
jg
adc
ret
cmp
cmp
clc
hlt
je
xchg
dec
mov
pop
xchg
ret
dec
or
ss
pop
movsl
mov
and
popa
mov
loope
cmp
mov
fwait
xchg
jl
stos
inc
push
shlb
movsl
xchg
cltd
in
ss
inc
push
aam
clc
push
pop
push
aad
shll
ds
rcrb
mov
scas
lods
push
sti
ret
jbe
dec
sub
idiv
push
dec
push
push
jle
mov
jecxz
push
dec
sub
icebp
mov
cmp
ja
call
sub
inc
inc
cli
jbe
incb
pop
pop
outsb
mov
and
and
dec
jne
popa
pop
imul
je
lds
xchg
add
inc
push
stc
inc
and
dec
fbstp
dec
loopne
ret
xchg
inc
xchg
fstps
out
stos
pushf
icebp
cmp
xchg
lahf
iret
ds
mov
dec
sbb
pop
and
sbb
imul
cltd
pusha
xchg
out
sub
adc
inc
int3
cmp
push
pushf
xchg
jmp
aas
pop
cmp
rcll
xchg
lea
rorb
mov
jg
sbb
mov
xchg
sbb
and
sbb
daa
jmp
data16
fnstenv
mov
mov
out
lods
sub
jo
xchg
cli
and
dec
dec
roll
cwtl
ret
data16
adc
lock
push
loopne
pop
repz
test
xlat
cmpsl
dec
imul
sbb
popa
sbb
cmp
out
sbb
cmp
xchg
adc
push
jecxz
add
or
cmp
inc
sar
fcomi
push
pop
loop
mov
jnp
add
push
outsb
gs
aad
frstor
push
cltd
adc
bound
ja
decb
pusha
add
jmp
stos
cmpsb
ss
insb
stos
push
dec
aam
scas
inc
push
jle
and
xor
sti
mov
pop
fsubl
adc
out
mov
je
push
test
lcall
pop
add
xchg
inc
cmp
outsb
or
pop
or
test
rolb
xchg
into
and
push
jecxz
lahf
sbb
mov
ss
mov
jl
xor
out
out
imul
fs
xor
jecxz
and
test
bound
les
ret
into
jbe
push
and
dec
mov
rcr
xchg
imul
sub
jp
adc
fs
jno
test
insl
sbb
cmp
imul
hlt
inc
cmp
frstor
notb
and
subb
repnz
dec
mov
inc
xor
sub
gs
pop
sub
jo
testb
push
mov
int3
or
cmp
cwtl
lods
xorl
mov
sub
fmuls
inc
adc
inc
je
fucom
aam
cmp
arpl
arpl
mov
data16
movsl
lcall
mov
jne
enter
xor
xchg
dec
sar
and
dec
popa
add
dec
ffreep
mov
xchg
or
mov
jb
adc
jno
cmc
mov
jp
mov
adc
roll
aas
mov
push
push
addl
lds
dec
mov
sub
sahf
inc
mov
repz
jle
dec
fcom
fnsave
repnz
hlt
mov
les
mov
daa
jae
add
push
xchg
in
jne
jp
sub
lds
dec
mov
jp
cmc
das
mov
cmpsl
sub
sbb
test
mov
dec
movsl
enter
cmpsb
inc
leave
jbe
data16
or
fmulp
adc
lods
dec
xor
fcoms
popf
cmpsb
jg
mov
pop
mov
test
inc
into
sbb
mov
xor
fidivrs
or
fstl
lea
inc
cld
add
idivb
ret
ja
int3
xchg
lods
rcrb
out
jbe
pop
in
sub
mov
lahf
imul
push
lret
aam
xor
jae
xchg
sbb
pop
ja
gs
jg
cltd
movsb
mull
mov
xlat
ss
add
jmp
mov
shl
negb
and
push
mov
into
adc
cltd
fwait
xchg
inc
outsl
cld
ljmp
pop
cmc
popa
out
pusha
in
fsin
ljmp
jg
mov
inc
xor
aam
adc
xorb
mov
popf
mov
ljmp
xchg
jae
or
adc
add
lcall
icebp
fbstp
mov
mov
adc
mov
daa
jae
inc
movsb
xor
jbe
push
xchg
xchg
adc
or
das
std
enter
inc
push
push
sub
xchg
xor
push
cli
mov
adc
mov
xor
or
add
mov
idivb
xchg
push
stos
mov
addr16
repz
xchg
out
xchg
mov
lret
mov
enter
xchg
add
jb
test
and
inc
jb
mov
push
mov
jbe
dec
movl
sbb
xlat
fdivs
scas
push
lods
add
sub
lods
push
lods
push
rcrl
adc
mov
jmp
and
mov
xor
sbb
sub
xchg
divl
test
jl
push
rorl
idivl
daa
sub
cmc
insb
xchg
mov
int
lock
dec
inc
mov
iret
push
imul
stc
pop
fcmovb
arpl
bound
adc
push
xorb
lea
outsb
aad
loope
inc
xlat
cmp
loop
aas
cmpsb
add
add
jecxz
lods
mov
rcrb
outsb
adc
sub
fcoms
mov
mov
cmp
divb
mov
icebp
push
mov
pop
adc
jne
pop
jb
repz
pop
sub
xchg
lcall
mov
jp
cmpsl
pushf
mov
insb
es
and
push
rclb
add
push
and
xchg
dec
nop
enter
sbb
mov
mov
jnp
sub
push
arpl
seto
sahf
jmp
push
add
pop
mov
inc
out
ret
out
cmpsl
in
push
mov
push
sub
in
inc
cmp
lea
mov
pop
pop
lahf
aam
lea
test
pop
lds
rcrl
push
int
mov
int3
xchg
imulb
xor
sbb
stc
fdivs
rclb
shl
mov
add
nop
xlat
test
arpl
clc
adc
adcl
lods
inc
cld
dec
jp
in
or
popa
sbb
outsb
int
movb
mov
data16
popa
jne
pop
jge
mov
cmc
pop
fldt
pop
pop
cs
dec
sahf
mov
mov
adc
or
mov
js
jmp
stc
in
mov
retw
sbb
dec
push
jge
mov
push
icebp
or
xchg
jecxz
test
inc
rorb
jb
push
ret
sub
push
inc
aas
mov
lods
xlat
mov
clc
repz
loopne
xor
arpl
pop
lods
pop
push
pop
cmp
cli
sahf
stos
int
mov
cmpsl
xchg
mov
mov
mov
andb
mov
push
movsl
cmp
add
push
and
push
inc
lds
add
aad
push
in
scas
or
pushf
jnp
dec
add
in
xor
mov
sti
mov
shrl
sub
xor
add
push
loop
mov
mov
scas
lds
mov
fisttps
mov
jns
lcall
jnp
mov
idivl
sub
pop
rclb
lods
sub
and
rclb
out
push
inc
cmp
inc
sahf
aad
int
sub
bound
imul
or
sub
out
es
lahf
arpl
push
xchg
xor
mov
mov
sti
jl
cwtl
notl
jnp
bound
or
xchg
lds
testb
popf
jle
xor
pop
xchg
xor
popa
mov
add
push
mov
in
or
fsubrl
fs
sub
adc
jmp
or
in
repnz
jbe
add
sbb
insb
pop
pop
inc
andb
outsl
xor
fdiv
ss
cld
cli
dec
mov
jbe
dec
add
scas
sbb
fld
cmp
sbb
lret
dec
push
jae
aas
dec
xor
sbb
sahf
push
mov
imul
and
dec
leave
enter
outsb
push
jl
aam
fisubs
cmp
pop
xchg
jecxz
enter
add
adc
dec
inc
sub
mov
or
xchg
loope
xchg
mov
adc
ds
add
push
push
insb
fnstcw
cmpb
pop
fs
jae
fld
test
jp
cmc
lret
jno
shlb
sbb
mov
cmp
lret
in
jmp
popf
outsl
mov
mov
xchg
and
pop
sub
flds
arpl
mov
out
sbb
movsb
fs
fldenv
mov
xchg
test
or
adc
mov
ret
cmp
jmp
add
dec
sbb
push
ret
push
xor
fadd
push
scas
adc
cs
push
test
jno
ds
repnz
sub
push
lfs
xchg
cvtps2pi
mov
xchg
das
jecxz
fs
xchg
stos
nop
mov
popa
aaa
test
dec
xchg
sub
mov
shll
push
lods
pop
sbb
out
cwtl
jo
cmp
lahf
push
shlb
dec
xor
cld
mov
mov
outsb
stos
negl
stos
andl
cmpsb
pop
cmp
inc
arpl
imul
lcall
mov
sub
mov
inc
pop
jg
push
fimuls
lods
mov
fs
loop
pusha
cmc
daa
divl
inc
call
add
jb
dec
sarl
jp
fld
aaa
push
xor
mov
ficomps
sar
mov
cmp
xchg
clc
cmp
or
fildll
cltd
aad
shlb
jmp
scas
jno
push
cmp
jle
adc
inc
add
mov
or
fmuls
test
mov
mov
cmp
repnz
imul
adc
sub
les
cmpsb
lcall
jmp
xor
mov
mov
mov
sbb
ret
jo
mov
popf
inc
cmp
das
sbb
push
aad
cs
adcl
push
jmp
aas
xor
pop
adc
aaa
dec
pop
fcmovne
dec
push
mov
and
mov
lret
pop
lcall
pop
insb
sti
or
inc
out
jb
jle
das
jmp
inc
adc
mov
aam
push
out
xchg
jecxz
jns
ljmp
shrl
les
icebp
xchg
or
data16
adc
adc
pop
push
push
adc
mov
inc
jns
nop
lahf
dec
lretw
movsb
add
mov
sbb
dec
clc
out
mov
outsl
xor
mov
sub
in
sahf
adc
call
es
es
jp
xor
sub
jns
cs
mov
or
ds
leave
mov
and
push
push
movsl
cmc
sbb
dec
pop
loop
inc
jne
push
cwtl
pushf
xor
xchg
and
jge
ds
fcmove
fnsave
mov
out
testl
push
shll
cmc
lcall
sub
pop
insb
adcb
sbb
push
iret
pand
nop
lret
out
inc
mov
xor
or
inc
addr16
cmpsb
mov
repz
mov
mov
sub
add
sti
sbbb
adc
xor
xchg
ds
xor
sti
cwtl
cmp
mov
mull
pusha
xor
cmpsb
jb
lret
dec
dec
mov
add
mov
xchg
add
ds
mov
in
cmc
inc
fwait
sub
cmpsb
sbb
jnp
mov
xor
push
mov
jne
fcompl
lcall
jl
sub
xchg
mov
insl
fstps
pop
xchg
pop
std
jb
mov
add
xchg
sub
mov
dec
popf
fdivs
push
rorl
into
or
test
mov
lret
xchg
pop
imul
or
sbb
xor
enter
pop
test
mov
mov
ss
pop
nop
or
sbb
add
nop
roll
enter
mov
mov
jb
sbb
js
lods
cmpsb
mov
xor
mov
fldl
pop
sub
xchg
icebp
lcall
push
gs
arpl
cmp
dec
bnd
test
sahf
aas
clc
and
xor
dec
fists
stos
add
xchg
adc
fnsave
sub
push
xchg
or
ret
movsl
add
push
xchg
inc
or
scas
cmp
outsl
repz
mov
sahf
divb
mov
gs
fwait
out
cmpsl
jb
sahf
xlat
nopl
inc
lock
mov
or
mov
lds
xor
cmpsl
inc
push
dec
mov
mov
in
je
pop
fcmove
pusha
push
jae
dec
cli
sub
mov
es
push
mov
pop
sbbl
push
js
mov
push
rcrl
xor
stc
mov
add
cld
mov
cwtl
xor
imull
dec
dec
cmp
dec
stc
scas
push
aam
in
ja
xor
hlt
scas
xchg
cmp
xor
fbld
or
aad
pop
sub
cmpsb
out
sub
fsubs
adc
adc
sbb
dec
cmc
adc
cs
idivb
xchg
jl
add
push
inc
ret
js
imul
sub
sarl
cmp
fcom
xchg
pop
orb
fpatan
cmpsb
test
outsl
push
sub
shl
jmpw
xchg
lock
adc
dec
insb
inc
rcll
or
pop
and
imul
cmp
xchg
aad
xor
scas
rorl
les
cld
rcll
ret
mov
cmpsl
test
dec
xchg
test
mov
into
loope
and
jmp
shrl
cmp
push
lea
adc
and
movsb
fsubs
enter
adc
ds
xor
push
sbb
mov
pop
addr16
cmp
out
imul
push
and
pop
fdivrs
roll
pop
in
pop
dec
insl
dec
rorl
sbb
jle
ljmp
adc
repnz
daa
js
jp
xor
int3
adc
pushf
sub
insb
in
and
mov
and
loope
jl
jno
mov
sub
mov
push
fisubl
gs
rcl
jne
div
push
push
jbe
pop
std
lods
sti
push
push
mov
outsl
std
adc
or
ret
lahf
sbb
pop
out
loopne
test
and
shll
xchg
popf
push
repz
rorl
cltd
sarb
sbb
mov
sti
sar
addr16
jno
add
popf
addb
ja
aam
inc
mov
push
add
cmpsl
enter
in
mov
divb
pop
adcl
pop
das
sub
xchg
shlb
and
in
jns
out
std
outsb
flds
into
out
loope
movsb
push
sbb
push
rcrl
mov
out
int
and
jb
mov
mov
xor
cltd
lds
lock
orb
push
loopne
lret
jle
repnz
jmp
mov
inc
out
sbb
push
icebp
lods
ret
mov
adc
inc
pop
xorl
pop
subl
int
cmp
pop
test
les
int
call
push
inc
dec
call
inc
out
call
call
cmp
jmp
jbe
pop
mov
shll
or
jb
pop
add
mov
lods
scas
xor
cld
enter
popa
ffree
inc
lds
call
or
es
sti
pusha
roll
push
pop
xor
movsl
push
fsubl
daa
pxor
push
and
pop
dec
mov
or
outsl
pushf
pushf
or
clc
xor
inc
cmpsl
push
add
outsl
movsb
inc
gs
mov
addr16
inc
push
clc
test
lods
ja
push
lret
ret
jo
or
aas
pop
ret
sub
cld
cmpsb
out
pminsw
loop
sti
icebp
aad
inc
push
or
jecxz
fcoms
js
mov
mov
add
jg
cwtl
or
mov
pop
dec
adc
or
mov
jecxz
xchg
cs
jne
sti
subl
jbe
aaa
idiv
stos
adc
test
fs
push
mov
pop
add
in
mov
lret
add
jnp
daa
pop
mov
mov
pop
dec
scas
xor
cmp
cmp
mov
rcl
test
dec
idivb
xlat
lods
bound
pop
push
adc
jb
pusha
push
iret
popa
loopne
ret
and
sub
cld
mov
jp
xor
popf
popf
push
xor
outsb
insb
or
sbb
mov
mov
pushf
loop
mov
lcall
fs
pop
pop
idivl
clc
mov
mov
push
jnp
cld
out
movsl
lret
subb
push
inc
cwtl
xor
add
lds
into
push
test
pop
test
stos
cmovae
xor
adc
inc
dec
cwtl
fcmove
les
lret
test
outsb
in
push
imul
pusha
and
ror
cli
sub
push
cmp
cmp
fldt
sub
fldenv
push
mov
mov
sbb
mov
test
xor
shlb
rclb
xor
push
lds
inc
orl
pop
mov
sbb
and
pop
or
jb
add
dec
nop
icebp
in
mov
adc
jb
xor
jl
sub
mov
cmp
out
rorl
imul
fbld
adc
xchg
adc
in
int3
xlat
push
push
jl
dec
cmp
aad
dec
test
repz
lds
stos
pop
dec
xlat
cs
pop
dec
hlt
cmp
mov
jl
push
rdpmc
push
mov
jge
movsb
and
dec
add
xchg
in
cwtl
scas
test
aam
dec
shll
aam
mov
popa
in
cmpl
push
cmpl
xor
rol
loopne
ljmp
inc
into
outsb
add
add
and
adc
mov
shll
mov
fisubs
xchg
insl
subb
xor
lock
xchg
add
dec
dec
movsb
cs
icebp
imul
lcall
test
push
loope
and
fsubrl
jns
je
and
pop
jae
jp
mov
mov
in
bound
and
ret
push
aam
mov
sbb
jg
repz
jbe
movb
ss
test
xchg
loopne
sub
stos
test
mov
and
movsl
push
dec
fdivs
arpl
movsb
pop
mov
mov
xor
push
popf
lea
jnp
aas
push
ret
pop
stos
add
call
fistps
jno
dec
int
mov
sub
leave
mov
sbb
sti
add
inc
out
mov
mov
test
icebp
frstor
push
inc
push
xor
mov
loop
and
inc
loop
lods
mov
jbe
cmpsl
lcall
test
inc
std
inc
jns
and
push
jns
iret
dec
pop
std
icebp
mov
pop
xchg
xor
pop
pop
lret
inc
inc
adc
pop
dec
inc
xor
mov
mov
and
dec
loop
xchg
add
jmp
and
fwait
jg
int3
pop
cmp
jp
jnp
sbb
and
cmp
imul
inc
sub
movsl
sbb
popw
inc
xor
iret
pop
ljmp
out
lcall
mov
dec
push
push
loop
mov
push
rorw
fsubrs
mov
and
xor
jbe
test
in
lock
movsl
lock
insb
lods
mov
push
shrl
xor
insb
sub
or
push
aam
add
ljmp
paddsw
fists
ss
out
arpl
pusha
dec
mov
adc
ljmp
js
testl
cmp
fnsave
rclb
add
xchg
inc
mov
outsl
dec
mov
ljmp
xchg
inc
jecxz
test
jmp
jmp
xor
dec
dec
jmp
fisttpll
out
dec
jg
adc
push
mov
dec
inc
mov
movsl
les
fiadds
xchg
jmp
and
add
pop
nop
aad
xor
dec
jo
add
outsl
xchg
shlb
test
pop
jbe
popf
adc
iret
dec
shrl
dec
popw
xchg
lock
addr16
dec
jae
repz
mov
push
fwait
test
leave
add
push
shrl
inc
loopne,pn
std
inc
adc
cmc
ret
xor
pop
add
pushf
into
lea
insl
cmp
pop
jle
jb
outsb
test
sbb
call
push
iret
les
cs
xor
inc
imull
icebp
fisttpll
dec
inc
int
out
fildl
pop
mov
sbb
scas
daa
inc
js
repz
cltd
cld
scas
lods
mov
popa
in
or
xchg
lret
call
stc
inc
xlat
xchg
pop
lahf
jmp
xchg
ret
sbb
jns
cmp
loop
jb
push
sbb
lret
fcoml
nop
clc
imul
cld
dec
xor
cmp
scas
inc
popf
sbb
pushf
gs
outsl
sbb
sub
rcr
imul
dec
lods
fmull
out
inc
in
add
xchg
cmc
fdiv
mov
fucom
ljmp
in
nop
and
rcll
sar
adc
stos
adc
xor
pop
lock
push
ja
pop
sti
rorb
sub
cmp
or
dec
mov
xchg
jbe
int
jbe
aaa
lea
out
rcll
mov
enter
pop
cmp
sub
lcall
pushf
sbb
shrl
xor
lcall
cmp
jbe
in
loope
dec
insb
mov
lret
frstor
mov
out
and
test
sahf
sar
sti
mov
movsb
dec
mov
push
jne
orb
push
jb
push
cmpsb
add
mov
addl
lahf
mov
out
push
rcrb
xor
decb
jp
sbb
and
insl
mov
rorl
pusha
jne
insb
hlt
lock
and
pop
cltd
or
lcall
mov
fs
or
inc
or
daa
xlat
xorb
pusha
aam
jecxz
jne
lds
mov
loope
shlb
pop
adc
shrb
mov
stc
fnstcw
pop
xchg
loopne
mov
out
push
in
lock
fimull
mov
and
rclb
dec
add
or
push
nop
out
mov
xor
xor
push
into
stc
sbb
outsl
mov
into
sbb
insb
mov
xor
dec
arpl
leave
jp
or
pop
out
push
jle
pop
jecxz
mov
inc
mov
faddp
jns,pt
cmp
subl
mov
pop
sbb
cwtl
stos
cmp
push
xor
pop
adc
jne
psadbw
push
ljmp
push
aas
lret
cld
loop
adc
js
xor
adc
xor
mov
in
inc
adc
ss
adcb
xor
cs
std
adc
pop
ja
push
or
cmp
dec
mov
jmp
add
mov
and
es
adc
mov
push
jmp
out
jl
dec
mov
push
loopne
jnp
not
cmpsb
cli
or
jns
xor
jae
xor
push
fistpl
in
push
and
addr16
mov
inc
mov
push
cmp
arpl
negl
imul
push
lea
bnd
and
lret
flds
ss
lea
push
mov
jp
and
push
popf
mov
bnd
popf
pop
jp
pusha
cmp
sbb
mov
pop
push
pop
sub
and
inc
sub
test
cmpsl
repnz
pop
sub
lret
mov
shlb
cmpsb
nop
jbe
fldl2e
mov
lock
negl
cmp
jmp
lret
fisubrl
push
jmp
dec
ret
pop
movsb
test
xchg
fisttpll
insl
add
jmp
lret
loope
adc
pop
aam
into
lret
fisubrl
push
shl
jecxz
xlat
inc
dec
dec
fisttpll
dec
mov
xchg
and
stc
xchg
setae
pop
push
loopne
push
ret
mov
jge
sbb
mov
push
mov
cltd
pop
push
mov
lock
nop
inc
inc
les
push
ds
sbb
loopne
pop
popa
sbb
mov
jp
ss
lret
add
arpl
mov
hlt
frstor
mov
lret
aaa
or
ds
fcoml
insb
mov
sub
hlt
out
cli
iret
mov
mov
mov
xor
lcall
add
jns
jnp
pop
insl
xor
sub
jo
addr16
cwtl
jecxz
jl
xchg
pop
jne
aam
and
test
movsl
in
mov
or
cmp
loop
pop
dec
dec
mov
pop
or
sti
mov
outsb
in
fdiv
mov
pop
sbb
add
add
xor
xchg
test
cs
call
mov
xor
les
ret
inc
cs
push
dec
add
lret
mov
jge
cmp
fstps
arpl
jge
fdivs
addr16
lahf
cmpb
insb
jle
cld
mov
lock
add
mov
sub
and
stos
call
add
push
mov
daa
cmc
pop
mov
mov
mov
test
mov
les
adc
mov
dec
mov
imul
and
adc
jp
pop
pop
or
xchg
push
test
or
mov
popf
loope
bound
dec
test
dec
push
cmp
leave
dec
jae
inc
stc
inc
push
imul
pusha
pop
or
jno
or
mov
dec
pop
dec
repz
sub
faddp
jb
aad
sub
jno
frstor
out
push
orl
stc
das
jle
inc
in
push
push
jnp,pn
pop
fbstp
jmp
inc
cmc
push
ja
adc
mov
xor
push
lret
mov
dec
xchg
fadds
in
jae
into
dec
lds
and
and
dec
outsl
dec
pop
xchg
sbb
mov
test
mov
add
dec
inc
inc
pop
rcrl
push
jae
lahf
pop
aas
jge
repnz
jne
or
sbb
jge
lret
mov
xchg
sbb
cmc
in
ja
mov
adc
mov
imul
repz
add
mov
dec
dec
popa
aad
mov
cmpsb
aad
mov
and
jo
call
dec
in
shrl
adc
push
and
daa
in
push
dec
sbb
mov
or
jo
ret
ret
cmp
std
pavgb
adc
ds
outsl
inc
adc
pushf
inc
mov
jecxz
sub
pop
and
cltd
in
and
stos
popa
adc
inc
shll
lock
ret
xchg
inc
jg
adc
leave
ret
and
hlt
pop
jbe
call
ret
jmp
sbb
and
int
cmp
pop
ret
jmp
lods
push
jecxz
scas
jns
xor
or
test
mov
cmp
in
cmc
xor
adc
adc
int
inc
aas
and
pop
arpl
pop
adc
rcl
xchg
out
cmp
stos
push
and
sub
mov
pushf
loope
mov
or
ror
add
mov
pusha
fs
add
mov
ds
sbb
call
lret
in
sbb
lret
sub
xchg
pop
mov
sbb
mov
cmp
das
shll
push
jecxz
lret
daa
stos
sahf
sub
in
add
lock
out
pop
and
jg
xor
lea
aad
popa
pop
es
cmp
int3
inc
cld
les
or
xchg
shll
pop
mov
leave
lods
dec
mov
push
mov
sub
test
cltd
sub
jecxz
adc
or
sbb
xor
shlb
xchg
ds
mov
push
movsl
jnp
nop
movsl
movsb
push
int3
push
loope
push
stc
mov
push
or
dec
hlt
jne
mov
pop
mov
addr16
jbe
add
iret
fsubrs
les
push
icebp
loope
ljmp
push
lea
orl
enter
and
push
add
mov
dec
pop
cvtdq2ps
cli
cmc
push
inc
adc
rol
inc
mov
cwtl
movsl
ret
cmc
cmc
or
fldl
jp
mov
cmpsl
xor
cmp
push
test
xchg
out
jns
push
cmpsl
push
test
stos
inc
pusha
mov
cmp
push
cmc
pop
stos
fadds
test
fadds
inc
sbb
les
push
cli
jo
pop
insl
xor
test
out
fcomps
adc
lcall
loope
mov
into
idiv
pop
mov
enter
xchg
xor
ja
test
scas
je
xor
push
dec
pop
jns
jl
fisttps
cmp
sahf
js
xor
push
clc
mov
mov
sarl
negl
rcrl
stos
cld
fnstcw
mov
mov
dec
push
imul
add
sbb
cmp
int3
ret
jbe
sbb
cltd
mov
mov
lods
addb
mov
testl
es
pushf
pushf
cs
xchg
push
sbb
stos
sbb
fsub
flds
mov
adc
fsubs
aam
insb
fldt
add
jo
cmpsl
cmpsl
push
insb
xchg
cli
repnz
xchg
fbstp
or
mov
pop
lods
add
add
xchg
nop
rcl
in
rclb
movsb
add
mov
dec
pop
inc
push
imul
cmp
popl
mov
sbb
mov
xchg
pop
je
dec
int
dec
xor
mov
pop
sti
push
push
dec
shl
jno
cli
mov
cmp
add
stos
cmp
sarl
ficomps
sub
xchg
stos
mov
das
mov
iret
jb
cmp
sub
xchg
loopne
push
movsb
into
popf
inc
lods
and
into
xchg
inc
nop
push
xchg
pop
mov
pop
scas
push
sub
loopne
jge
lds
pop
adc
call
or
ret
filds
jl
out
inc
mov
sub
movsb
add
xor
icebp
aaa
push
negl
xchg
adc
lahf
xchg
repnz
cmp
and
jl
sub
sub
sub
clc
subl
pop
pop
mov
mov
in
sbb
cmp
arpl
adc
inc
mov
dec
push
add
inc
notb
adc
cmp
inc
cmpsb
adc
aad
lock
scas
icebp
cli
popa
ss
mov
decl
mov
aaa
fs
cmp
mov
jnp
jmp
jge
sub
adc
jmp
jns
adc
popf
movsl
aad
inc
fs
adc
pop
int3
into
mov
in
outsb
in
fcmovb
popf
mov
rorb
out
inc
sti
xchg
dec
and
bound
or
stos
int3
imul
push
cli
loope
push
insl
nop
cmc
cmp
mov
iret
mov
insl
mov
movsl
sbb
in
jmp
in
jne
int3
cs
inc
jmp
andl
xchg
test
add
dec
add
xchg
push
and
add
mov
xchg
ljmp
aaa
fwait
into
es
adc
adc
cmc
xchg
jae
jbe
jmp
mov
pushf
or
mov
fsub
xor
cmpsl
jl
xor
pop
add
test
loope
xlat
push
push
inc
test
push
xchg
ficoml
std
je
incl
mov
inc
test
xchg
xchg
rcrb
dec
jo
popf
mov
inc
fisttpl
repz
pop
subb
js
int
pop
sub
mov
jns
mov
and
ja
cmp
lret
shrb
jbe
scas
pusha
lds
jns
mov
sub
push
scas
jmp
aad
adc
sbbl
into
std
mov
repnz
push
or
add
cli
out
xchg
cltd
cltd
jo
mov
push
cmpl
fdivrs
and
inc
jno
adc
pop
ljmp
icebp
out
sub
cld
idivl
mov
fcmovnbe
repnz
fistps
mov
dec
push
jle
fmull
daa
sub
cmp
movsl
loope
pushf
dec
jbe
and
pop
in
into
xchg
shll
cmp
ja
jno
xchg
mov
out
lret
push
aam
sbb
adc
psubusw
jnp
inc
jb
xchg
into
cmp
scas
or
jg
out
outsb
imul
push
in
das
jbe
nop
daa
stos
ds
std
ja
pop
xor
xchg
aas
sub
insl
test
sub
add
scas
or
lods
inc
xchg
jg
dec
daa
fs
enter
jp
and
xor
add
cmp
aam
push
push
loope
ficompl
mov
pop
mov
rcl
inc
adc
sbb
scas
scas
inc
inc
mov
push
mov
pusha
jne
cmp
jl
cltd
stc
test
push
test
mov
push
fldl
out
sub
sbb
jg
movsl
aam
cmc
adc
out
push
ret
xor
enter
dec
pop
cld
pop
and
cmp
mov
jecxz
jle
adc
fiadds
in
pop
xchg
jns
xor
mov
inc
adc
xor
andl
insl
cmpsl
aas
dec
mov
in
in
jecxz
scas
add
mov
cmpsb
push
and
sbb
cmpsb
aas
fldenv
and
das
out
mov
cmp
ss
test
lcall
or
mov
imul
inc
imul
xchg
pushf
and
movsl
mov
dec
out
out
xor
loop
repnz
sbb
pop
and
fidivl
cmp
mov
xchg
adc
push
andb
sub
lea
adc
dec
ljmp
popa
loop
mov
cmp
pop
dec
or
sub
in
les
sbb
push
inc
pushl
mov
lock
pushf
lret
add
aaa
jnp
sti
stc
adc
xchg
xchg
loope
hlt
fs
fcoml
test
aas
push
xchg
mov
out
cltd
and
xor
popf
or
test
pop
outsb
shrl
jbe
lock
push
ret
fdivl
sarb
cmpsb
stc
mov
jle
iret
sbbb
push
fldt
clc
mov
and
cmpsb
jl
xor
insb
outsb
outsl
push
stc
and
and
out
or
mov
push
adc
fstl
hlt
inc
repnz
cli
mov
ret
or
lcall
cs
mov
mov
xor
or
add
lods
push
ss
add
fnstcw
mov
es
pusha
mov
mov
mov
ds
cmp
fs
mov
cli
push
and
sub
jae
stc
or
dec
xlat
pop
or
loop
mov
divl
adc
dec
out
lock
mov
daa
insb
call
ss
mov
loopne
cmp
iret
mov
mov
cmp
cmp
arpl
push
dec
and
xchg
ja
cmpsl
pop
fcompl
lret
jl
enter
add
shl
aad
addr16
xor
mov
es
or
insl
lds
rcll
cmp
cmpsb
dec
mov
mov
add
dec
das
sub
xchg
push
adc
scas
cld
dec
aad
shlb
xchg
cmp
pop
adc
jg
insl
ret
imul
cmp
jecxz
push
in
jp
cmpsb
cmc
pop
jno
imul
mov
sbb
loopne
mov
arpl
or
sti
add
xchg
cmc
in
ljmp
jb
movsl
jo
push
inc
popf
fwait
ds
stos
mov
test
xchg
daa
xor
movsl
out
insl
orb
push
sbb
jp
sub
lcall
push
and
mov
and
fnsave
xor
imul
mov
insl
add
arpl
nop
dec
testb
insb
inc
popa
sub
push
daa
add
in
in
ja
lret
icebp
ljmp
mov
adc
fildl
adc
and
shr
pop
jle
pop
jmp
mov
pop
shlb
push
mov
in
mov
or
adc
pop
dec
sarb
dec
lock
clc
jecxz
fnstsw
aas
sbb
add
loop
mov
aas
rep
jge
add
outsl
xchg
cmp
stos
mov
fists
pop
cmp
jl
or
push
aad
es
lahf
jmp
adc
xor
jmp
fcompl
xlat
mov
mul
mov
and
pop
cmp
cld
mov
dec
xor
cmp
xlat
mov
sahf
loop
int
inc
in
lret
push
leave
imul
addr16
or
insb
mov
jmp
pop
jbe
das
call
sub
jno
push
scas
int3
cmpsl
push
mov
cwtl
out
ficompl
loope
jg
or
push
xchg
xor
or
ret
loop
add
pop
out
xor
mov
clc
pop
or
jmp
fadd
lods
test
dec
les
xchg
xor
incl
int
pop
clc
push
repz
ret
sti
pop
insl
pop
call
or
std
and
out
dec
hlt
test
int
push
lahf
xor
shll
data16
xchg
push
aad
ret
add
fldpi
push
push
jle
clc
rol
push
sbb
inc
pop
inc
adc
adc
lret
daa
scas
push
int
xor
sub
outsb
and
pushf
call
lods
sub
les
lods
lret
pop
data16
les
fmull
mov
arpl
aaa
add
leave
inc
inc
stos
stos
shll
shll
lods
ja
jno
add
cmp
aas
or
arpl
cs
loop
shrl
mov
in
cs
add
mov
mov
fldl
jbe
popf
mov
cmp
in
xchg
lds
xchg
leave
fs
mov
test
mov
mov
jno
popf
jmp
jmp
xchg
jb
xchg
push
mov
sbb
ror
je
xor
xlat
leave
adc
out
test
leave
out
leave
lret
or
sti
fimuls
mov
lret
sub
cmp
lea
pusha
jl
pop
enter
movsl
xor
cmp
inc
pop
fmulp
mov
mov
fnstcw
mov
dec
sbb
clc
dec
cmp
jmp
pop
loope
mov
xor
jl
push
jns
or
rorl
ss
pop
lock
add
iret
or
push
jge
js
mov
jmp
js
push
xchg
stos
mov
dec
mov
xchg
push
jb
xchg
mov
fcmovnb
xor
cli
mov
mov
fdivrp
shrb
mov
mulb
mov
pop
in
add
push
out
dec
mov
std
push
ljmp
mov
leave
dec
or
push
dec
imul
lahf
mov
idiv
fidivrl
or
pop
xchg
aaa
mov
mov
xor
insl
ds
lcall
and
outsb
ja
mov
aaa
dec
in
xchg
mov
and
mov
cmp
ja
xor
mov
rorb
test
lods
xchg
pop
mov
sub
mov
test
mov
push
pop
cbtw
or
mov
jge
ret
xchg
adc
push
in
imul
jmp
dec
pop
mov
vmread
mov
shl
scas
jae
cmc
lret
inc
jecxz
aad
lock
out
add
push
pop
and
add
push
into
rol
xor
test
fistpl
leave
lahf
cld
cli
mov
sbb
mov
mov
adcl
or
push
inc
mov
cli
lods
cmc
mov
iret
addr16
mov
in
repnz
pop
mull
xchg
xchg
push
fisubl
xor
mov
fdivr
iret
es
push
fnstsw
cmp
adc
call
dec
lcall
cld
out
fisubl
xchg
cmp
inc
dec
mov
stos
ja
in
loop
xchg
icebp
mov
int3
std
testl
or
dec
cmpsl
mov
ret
popf
repz
cmpsb
push
xor
mov
sbb
xchg
pushf
add
jp
loopne
ljmp
adc
jge
inc
fsubs
sahf
or
sub
pop
inc
vmovq
jo
clc
iret
xchg
mov
mov
mov
fldcw
rcl
enter
jmp
addr16
in
xor
mov
sub
hlt
mov
insb
push
dec
imul
add
stc
clc
xlat
push
ficoml
and
push
sub
dec
jg
stc
es
mov
xchg
enter
js
mov
push
rolb
push
jns
lods
cwtl
mov
pop
ret
ja
idivl
aam
mov
lahf
dec
dec
movsl
ret
out
mov
mov
push
xor
inc
repz
sub
fimuls
xor
aam
cmp
outsl
sub
in
mov
gs
inc
mov
stos
scas
mov
addps
pop
adc
movsb
int3
fists
icebp
ret
jno
sbb
test
adc
call
sub
xor
aaa
fistl
ret
lock
cs
adc
fs
jae
pop
dec
data16
fidivl
cmp
mov
jmp
aad
cwtl
rcpps
pop
mov
imul
mov
sarb
and
call
pushf
sbb
jmp
cmpl
nop
lods
pop
cmc
add
mov
push
leave
test
pop
cmc
lret
mov
sbb
mov
stc
xchg
mov
adc
jl
inc
in
pushf
cmp
loopne
xlat
mov
dec
leave
inc
loopne
mov
aas
xchg
in
sbb
fstpl
dec
fldcw
jnp
sub
adc
xchg
call
sub
or
mov
out
in
cwtl
push
daa
mov
pop
nop
mov
js
xor
aas
pop
cmp
dec
rep
js
aam
xor
mov
or
test
in
inc
les
fwait
jle
ds
or
dec
pop
test
lret
scas
sbb
xchg
mov
jge
js
fadds
or
lret
mov
mov
xor
pushf
scas
pop
ss
movsb
or
lods
mov
mov
sti
or
call
dec
repz
jno
nop
pop
shll
mov
in
pop
fcmovnb
stc
dec
xchg
and
mov
sbb
movsl
pop
pop
add
call
cs
ss
pop
pop
xchg
mov
aas
iret
mov
and
int3
out
mov
cld
push
push
or
dec
pop
pop
fxch
clc
xor
fcomps
stos
movsl
mov
push
xor
test
aad
mov
jle
fstpt
lods
pop
add
das
sahf
sahf
jns
enter
call
fldenv
xchg
push
lret
adc
or
add
imul
fidivl
pop
es
js
popa
pop
out
cltd
add
mov
pushf
xchg
cmp
mov
loop
scas
imul
mov
ljmp
int
sub
jbe
test
mov
and
mov
sbb
adc
cld
jecxz
loope
adc
test
cmp
pop
sbb
daa
lock
shrl
cwtl
add
fisubrl
inc
pop
mov
sub
loop
push
fbld
test
xorl
mov
push
or
lcall
ret
in
mov
clc
outsb
cmp
stc
lcall
sub
faddp
xor
stos
jl
fsubs
outsl
insl
roll
push
and
mov
mov
jo
sub
inc
loope
jo
mov
loopne
shlb
cmpsl
sti
incl
fstpl
cld
icebp
js
mov
addr16
mov
in
and
dec
lea
adc
repz
div
cmc
cmp
push
xor
pop
or
and
jle
mov
xor
inc
mov
aad
jge
adc
sbb
pushf
int
call
test
mov
stos
inc
xchg
fsubs
popa
xchg
dec
bound
imull
les
adc
gs
sti
mov
xchg
or
adcb
loopne
out
insb
pop
mov
xchg
enter
mov
femms
xchg
dec
fs
popa
dec
xorb
insl
dec
lods
and
pop
sti
xchg
pop
mov
push
xor
fwait
out
cld
mov
pushf
test
ja
mov
lds
pop
popf
xor
stc
xchg
gs
push
sub
mov
xchg
inc
lret
ret
pusha
pusha
imul
fwait
bound
adc
cmpsb
adc
lods
dec
es
sti
mov
repnz
mov
add
xor
xor
pop
cmp
or
jecxz
dec
dec
int
push
sti
fadds
push
hlt
lret
or
cmp
dec
pushf
nop
fcomip
decb
mov
xchg
pusha
jge
mov
add
movsl
jge
outsl
into
outsb
dec
stos
inc
scas
int3
inc
push
cltd
xor
cli
data16
ret
sti
outsb
lods
mul
es
or
push
mov
stos
xchg
fldcw
xor
das
xchg
ja
pop
dec
loop
insl
in
aas
or
dec
cmp
adc
fsub
sub
es
sbb
or
popf
or
ds
push
pop
push
ljmp
xchg
xchg
loopne
mov
fcomp
mov
pop
dec
test
sbb
orl
adc
enter
test
dec
adc
jg
fisubrs
and
dec
xchg
out
jg
dec
mov
add
jae
lea
mov
jns
sti
stos
xor
jne
nop
jbe
push
mov
sti
pushf
outsb
sub
xor
jbe
xchg
jl
jo
nop
das
cmpsb
lea
test
fimull
inc
mov
aas
iret
jnp
pop
push
cmpb
cli
sbb
movsb
mov
inc
adc
les
ss
mov
add
cwtl
cmpsb
movsb
cmp
jns
or
xchg
popa
and
dec
jae
lret
jp
mov
std
loope
xchg
orl
out
xorb
test
addr16
pop
lea
xchg
fstl
and
add
in
xor
fcomps
add
xor
jno
cmp
pusha
std
std
imul
mov
in
jp
push
mov
jb
lock
mov
jle
lock
adc
mov
out
fnsave
mov
mov
in
adc
dec
movsl
add
arpl
or
shll
add
in
inc
fldcw
jno
out
int
xchg
repnz
je
and
bound
jp
sti
mov
pop
in
aam
pusha
or
shlb
mov
xchg
ja
pop
in
daa
sbb
mov
iret
cmpsl
xchg
orb
cmp
mov
mov
call
mov
mov
ret
cmp
inc
cmp
inc
or
clc
dec
mov
fisubs
mov
cs
out
xchg
mov
scas
mov
jnp
mov
mov
loope
or
pop
sub
inc
mov
aam
dec
adc
inc
ja
dec
cmp
mov
test
movsb
sbb
cwtl
mov
mov
loopne
fsubrs
into
adc
add
mov
sub
jmp
pushl
cmp
jns
xchg
mov
push
addr16
int
fs
sarl
cmpsl
fmulp
les
adc
cmp
ljmp
adc
hlt
adc
jo
xor
mov
data16
add
jp
sub
jbe
push
aaa
mov
mov
cmpsl
js
andl
push
cmp
in
xchg
adc
push
mov
out
xchg
lret
lods
ret
fildll
incl
dec
cwtl
rorl
ljmp
cli
mov
fdivrs
rcll
mov
jb
xchg
adc
pop
out
xor
pop
cmc
and
sbb
mov
lea
out
icebp
daa
cmp
dec
mov
adc
hlt
lahf
dec
cwtl
mov
imul
cld
xchg
adc
inc
push
dec
aad
jb
scas
fists
sbb
subb
fwait
cmp
fidivrl
pop
sahf
or
cmpsl
jecxz
add
pop
cmpsb
imul
mov
nop
xchg
jb
cltd
jmp
push
jge
shrl
inc
aaa
push
iret
ds
and
fisubrl
pop
sub
addr16
js
fnstenv
lcall
jno
push
jp
dec
nop
andb
jno
lret
stos
es
pop
xchg
test
ds
and
mov
fnstenv
test
add
std
or
sahf
pop
jnp
fnstsw
clc
mov
orb
pop
fistl
mov
push
xchg
incl
fimull
cmp
jno
cli
jns
stos
dec
stos
dec
cli
mov
push
cmp
in
sbb
or
ja
pop
in
movsl
mov
icebp
mov
and
xchg
ljmp
or
das
adc
xchg
fldcw
stos
rcll
and
add
icebp
lods
push
addl
jno
movsb
data16
dec
inc
testb
add
push
decl
dec
icebp
xchg
xchg
jg
pop
lods
adc
add
xor
xchg
call
jb
insb
or
xchg
ja
jo
inc
insl
ret
sub
lret
out
cltd
xor
add
daa
cmovns
push
jae
jns
or
jmp
cld
outsl
or
fstpt
sti
int
ficomps
jp
dec
and
adc
lods
fbld
push
jnp
push
in
daa
out
icebp
pushf
mov
rcr
add
mov
test
dec
pop
mov
loop
xchg
cmp
ror
int
lea
lret
enter
cmp
mov
inc
call
nop
mov
jmp
mov
in
mov
pop
sub
cmp
xor
xor
sti
je
sub
pop
sub
pop
mulb
mov
int
imul
out
shrb
sub
sti
js
repz
cmp
push
jns
test
pop
mov
cs
and
sub
je
add
push
imul
test
xorl
loop
sbb
scas
aad
loopne
out
popl
push
sbb
cltd
xchg
jle
mov
or
outsb
out
cltd
arpl
dec
les
ja
mov
fisubl
test
int
jns
cmpsl
stos
inc
cmp
imul
in
shlb
pop
lret
inc
push
add
ret
pop
inc
lock
xchg
into
cmpsb
data16
out
fs
gs
int
xchg
mov
js
xor
aaa
adc
iret
iret
mov
stc
repz
jne
or
sbb
ja
jno
jle
inc
pushl
xor
lods
mov
les
shll
mov
adc
pop
push
arpl
out
pop
stc
inc
aas
dec
mov
outsl
movsb
hlt
push
jmp
push
cmp
cmp
dec
mov
xor
xor
xor
add
sub
push
push
cmpsl
cltd
jle,pt
movsl
sbb
dec
jno
fxch
cwtl
inc
test
hlt
mov
out
jbe
fidivl
test
nop
mov
xchg
std
fneni(8087
inc
dec
jl
cmpsb
mov
or
fadd
and
push
cwtl
imul
inc
aas
push
cmp
add
std
push
icebp
dec
clc
aaa
dec
jns
pop
call
or
sbb
adc
dec
fsub
sub
xor
cmp
push
cwtl
mov
or
leave
sbb
xchg
divl
push
shlb
cmp
aad
lods
xor
push
pusha
clc
mov
data16
xchg
aas
int
leave
imull
ss
dec
add
mov
outsl
mov
sub
sub
jle
dec
popl
adc
adc
outsb
fdiv
int
xor
and
add
and
pop
enter
add
mov
inc
sub
fs
iret
mov
lahf
xchg
pop
sub
inc
scas
xchg
test
xchg
inc
pushf
mov
int
cli
cmc
sub
sub
push
pusha
int
lock
jp
cmp
fmuls
dec
out
mov
cld
jbe
add
jo
mov
in
ja
dec
insb
addb
dec
addr16
xchg
lds
ret
push
pop
xchg
int3
ret
sets
sarl
adc
jno
mov
mov
mov
sbb
nop
lret
cmp
sub
mov
xchg
xor
cmp
jge
add
mov
dec
div
mov
mov
aad
push
cwtl
inc
push
lret
test
jmp
jl
iret
mov
fdivrs
insb
mov
stos
sar
dec
mov
push
icebp
ret
add
sahf
aam
pop
popf
sub
xor
cmpsb
mov
sbb
scas
push
pop
adc
cmpsl
imul
jp
je
bound
inc
or
lahf
sub
and
cs
xor
xchg
rcl
stos
movsb
add
sub
mov
xor
cmpsb
lock
push
xor
mov
stc
cwtl
movsl
jg
mov
hlt
sub
add
data16
dec
sbb
push
jp
aad
loope
aad
rclb
push
imul
sbb
sbb
xchg
mov
ror
sti
adc
push
jns
mov
cmp
inc
out
out
inc
inc
negl
inc
sub
xor
out
imul
dec
cmp
mov
scas
push
push
jae
sub
or
lahf
or
dec
addr16
xor
inc
inc
movsb
xchg
hlt
xor
xchg
popf
and
cmp
subl
pop
push
cmp
add
lahf
push
sbbb
push
xor
test
sbb
out
xor
adc
mov
repnz
inc
and
iret
cwtl
sbb
in
add
add
or
fs
jmp
out
loope
jno
imul
mov
adc
movsb
movsl
movsb
or
add
jo
pusha
dec
dec
push
out
or
or
jae
push
into
jbe
jne
stos
mull
push
iret
out
int
jbe
in
clc
jmp
xlat
iret
jg
nop
cmp
jae
in
cld
addr16
mov
add
mov
xlat
lods
ds
sub
loop
adcb
rcll
pop
insb
xchg
xchg
dec
sub
add
lret
inc
loop
mov
daa
mov
pop
pop
movsl
pop
add
pop
push
cli
ljmp
int
movsb
cmp
jmp
cltd
mov
jecxz
xorl
je
icebp
cld
sti
jno
movsl
insb
roll
cmp
iret
ret
xchg
rcl
imul
pop
scas
xchg
pop
stos
jno
addl
pop
mov
into
pop
pop
lods
ja
push
adc
cmp
dec
scas
mov
movsl
jp
jle
add
add
cmc
lret
sub
mov
adc
cmp
out
ret
sub
dec
mov
cmp
pop
inc
pop
out
cs
test
lcall
or
jl
cs
jmp
pop
clc
jg
mov
imul
mov
push
inc
cmp
push
pusha
sti
repz
movsl
ds
cmc
imul
cli
push
push
and
mov
push
push
mov
push
outsl
mov
jbe
in
clc
inc
es
xchg
inc
xchg
add
divb
int
push
adc
in
pop
call
arpl
pop
pop
aam
sub
sbb
loopne
mov
stc
fildl
dec
mov
dec
push
iret
and
jbe
aam
push
push
ja
sbb
cld
cwtl
inc
pop
mov
addr16
je
ljmp
shrb
cltd
mov
lea
push
dec
and
adc
lds
lods
cmpsb
aam
into
adc
jnp
xchg
jno
je
push
outsb
add
add
add
test
dec
into
xorl
in
gs
repnz
adc
es
aaa
pop
or
xchg
cld
mov
mov
scas
stos
jmp
test
cld
jne
clc
sbb
imul
mov
xor
or
cmp
dec
js
inc
ljmp
jle
pop
xchg
dec
int
jae
sar
add
push
movsb
call
xchg
and
xchg
sbb
mov
or
cmpsl
sbb
and
sti
inc
movsb
movsl
call
stos
mov
jmp
ss
jmp
enter
cld
mov
jae
mov
xor
cmp
fmuls
add
dec
sti
das
xchg
mov
adc
es
mov
rolb
stos
in
jle
inc
stos
jmp
mov
add
add
rorl
adc
inc
in
mov
mov
loopne
xchg
jae
aaa
mov
push
push
bound
sub
in
pop
dec
sti
sti
and
dec
std
or
fwait
in
and
rorb
push
lahf
sbbl
xor
scas
pop
add
notl
dec
pop
cmp
or
inc
into
in
dec
shl
push
enter
movsl
or
or
and
clc
rclb
dec
cli
adc
lock
push
lcall
stc
test
ja
dec
jle
add
sbb
inc
ds
insb
pop
or
or
mov
and
sarl
jge
ror
pusha
jge
add
adc
mov
dec
pop
mov
out
test
adc
dec
add
cs
faddl
int3
jecxz
adc
cld
sbb
cwtl
into
mov
les
sbb
add
cmp
cwtl
mov
out
sbb
dec
mov
mov
mov
popa
and
sbb
jl
les
les
pop
jns
add
popf
pop
cmp
ss
dec
loop
mov
repz
hlt
adc
sub
dec
mov
cmp
mov
xchg
inc
ds
xchg
jmp
mov
lahf
xchg
push
std
adc
and
out
and
jge
add
mov
fxch
ljmp
mov
jne
mov
sbb
cmc
xchg
out
mov
dec
jns
aas
mov
cmp
lcall
daa
cmpsb
out
mov
jnp
or
ror
lock
aam
jnp
push
xor
or
dec
scas
pop
adcl
leave
sub
jg
dec
add
call
xlat
dec
in
adc
dec
aad
xor
cld
aas
mov
xchg
pop
fwait
xchg
daa
jne
push
cmc
shrl
dec
inc
mov
xchg
mov
jae
js
mov
je
mov
mov
ficomps
sahf
popa
xor
dec
aaa
rcll
mov
xchg
inc
call
push
fwait
cmp
loope
dec
mov
pop
psllw
sti
push
mov
aaa
scas
sti
rcrb
fwait
cld
xchg
adc
notb
test
xchg
jle
lret
fimuls
cs
mov
mov
jb
mov
pop
inc
pop
test
cmp
scas
arpl
ficomps
stos
test
jne
fdivl
cmp
idivb
jge
cli
es
mov
adc
mov
outsl
and
pusha
pop
sub
and
mov
mov
and
fistpll
stos
jecxz
inc
cmp
push
jg
sbb
mov
cmp
adc
dec
sbb
fdivs
xchg
inc
test
and
out
sbb
decb
adc
dec
stc
mov
push
test
in
sub
xor
mov
push
xchg
jbe
cwtl
mov
loop
sti
jae
cmp
add
ljmp
ficomps
xor
adc
mulb
push
iret
leave
sbb
movsb
loop
sarb
into
mov
sbb
push
mov
sbb
and
movsl
mov
outsb
out
test
dec
cli
mov
push
sub
inc
adc
jo
test
paddb
lret
shll
mov
lret
scas
es
cli
sbb
out
xor
dec
icebp
sar
mov
xor
pop
jae
popa
jbe
jl
pop
push
out
cvttps2pi
or
mov
ss
cmp
jne
mov
push
cs
out
and
dec
adc
jmp
and
dec
pop
fidivs
xchg
add
imul
mov
scas
scas
adc
clc
ficompl
mov
fiadds
ret
jl
xchg
add
imul
dec
xor
xlat
mov
add
in
push
aad
mov
cmp
pop
lock
sub
addr16
adc
xchg
mov
cmpl
out
movsl
jno
mov
ret
idivb
arpl
mov
leave
andb
cmp
mov
aad
adc
mov
add
test
dec
jp
and
sahf
aaa
fcmovnbe
and
pop
push
imul
sti
mov
test
fnstcw
jmp
mov
imul
and
int3
xlat
push
mov
fmul
imull
mov
dec
xor
jns
scas
fwait
push
push
aad
jmp
out
in
push
sbb
stos
pop
cld
iret
mov
push
cmpsl
sub
fmull
mov
sub
and
mov
aad
push
sarl
adc
sub
dec
jmp
repz
fs
jnp
dec
bound
adc
jno
hlt
pop
sub
pop
jg
mov
jmp
jo
jno
sub
ret
les
ret
pushf
mov
dec
jns
jne
or
imul
iret
add
mov
pop
pop
cmp
or
in
jmp
sbb
pop
xchg
cmpsb
popa
mov
adc
sub
push
shlb
add
mov
push
pop
and
les
popa
add
loope
out
cltd
aas
enter
sarl
dec
ss
jl
pushf
mov
xchg
mov
xchg
or
cmc
fstps
push
idivb
cmp
xchg
push
add
pusha
cmc
dec
mov
adc
cmp
jle
gs
push
fistpll
jns
clc
test
fsubs
xor
mov
scas
test
sub
leave
dec
mov
jle
inc
daa
cwtl
lds
daa
int
cmp
and
cmp
inc
jo
pop
jne
fs
cmpxchg
xor
mov
lea
cmp
shl
in
mov
sub
add
jns
rep
outsb
cmc
stc
jmp
xor
gs
xchg
xchg
dec
loopne
inc
loopne
and
loopne
adcl
scas
add
cmp
shll
add
repz
jne
and
sub
sub
lds
rorl
inc
add
xor
out
shlb
and
mov
lods
dec
or
mov
add
or
sbb
push
push
xor
stos
xor
mov
clc
push
clc
shlb
pop
xchg
cwtl
lock
jne
mov
mov
pushf
push
adc
fbstp
sbb
add
xlat
stos
and
xor
sbb
pop
dec
xchg
adc
outsl
xchg
xor
mov
std
sub
data16
adc
int
shrl
add
movzbl
fistps
stc
lahf
call
jnp
ljmp
out
sbb
inc
mov
stos
mov
shrb
push
mov
not
or
jecxz
aas
pop
ja
xor
mov
into
xor
inc
in
add
xor
cmovge
jno
mov
pop
repnz
imul
sarl
jle
xor
sbb
inc
push
pop
aas
ljmp
adc
ret
pop
mov
std
icebp
insb
bound
pop
lods
push
mov
leave
inc
mov
fstl
fildll
dec
push
mov
or
cmp
not
push
add
cmp
or
xchg
inc
dec
rolb
xchg
and
out
out
jae
lea
push
xor
mov
mov
cli
enter
sub
test
mov
fsubrp
mov
ss
inc
sbb
push
jns
test
aam
lods
sbb
outsl
addr16
jmp
inc
test
negl
leave
dec
pop
xchg
dec
or
or
test
sbb
in
dec
push
lods
push
sbb
inc
dec
loope
pusha
sub
test
pop
aad
popa
dec
lahf
mov
imul
mov
inc
push
hlt
or
fisubrs
mov
push
fucomi
sbb
xchg
push
jecxz
or
dec
stos
es
sahf
lcall
xor
sbb
mov
inc
andb
fbld
cmpb
pop
cmp
movsl
and
cmpsb
push
xchg
cmpsl
or
les
mov
cmp
loope
jecxz
mov
jnp
lods
mov
mov
xchg
cli
pop
setns
das
nop
sbb
xor
or
popa
rcrl
rorb
cmp
in
cmp
jno
xor
int3
inc
leave
cmp
sti
pop
aad
lret
and
sub
mov
test
addr16
daa
ds
or
and
ret
sti
dec
jecxz
fbstp
popf
pop
and
mov
push
in
mov
mov
adc
xchg
push
inc
xor
push
sub
jmp
push
or
mov
les
mov
sbb
aam
adc
stos
cmp
out
mov
xor
mov
sbb
mov
add
mov
ret
sbb
xchg
cmp
ja
cmp
or
scas
and
sbb
jo
jp
rcrl
insl
or
pop
add
mov
and
out
or
hlt
pushf
adc
mov
jo
jb
push
inc
add
mov
popf
rolb
sbb
push
das
daa
jbe
inc
add
icebp
adc
lret
and
hlt
mov
rclb
sbb
dec
push
mov
lods
cltd
mov
int3
pop
push
mov
dec
and
or
xor
mov
shll
sahf
adc
int3
sub
shll
mov
sbb
sbbb
push
jl
test
jno
cmpb
cltd
and
pushf
movsb
and
bswap
mov
xchg
mov
xchg
das
mov
xchg
pop
pop
lret
popa
pushf
test
jge
in
cs
dec
out
stos
push
xchg
out
dec
push
sub
loope
jb
dec
lahf
inc
fbld
mov
xchg
ja
dec
jno
mov
or
dec
loop
sub
cmp
xchg
mov
jne
test
sbb
test
mov
push
xchg
into
sbb
pop
insl
xchg
mov
and
sarb
je
jae
and
mov
add
sbb
mov
dec
ljmp
in
mov
repz
xor
imul
pushf
jmp
repz
inc
imul
pushf
arpl
or
xchg
scas
insb
pop
add
or
test
les
push
mov
fcmovnbe
pop
mov
pop
cmpsb
sub
adc
mov
sahf
fwait
arpl
add
es
push
cmp
xchg
in
stos
pop
sub
inc
sub
mov
sub
shlb
pop
je
xchg
xchg
xor
sub
out
addb
push
sub
inc
pop
subl
add
loopne,pn
xchg
or
fstpl
mov
notl
insb
push
mov
push
dec
lret
push
cmp
cmp
fcoml
push
nop
stos
aas
testl
jg
shlb
xor
lea
pop
out
jge
out
lea
fists
sbb
jns
cmp
aas
fsubrl
inc
xor
jl
ja
rdtsc
shrl
sti
sti
mov
movsb
xchg
sbb
jns
mov
and
xor
cli
mov
push
push
into
aam
dec
sub
inc
fmull
in
mov
mov
in
movsb
imul
xor
enter
dec
lahf
add
pop
into
sub
xor
jnp
test
ds
mov
jg
xor
mov
das
xchg
cs
call
xor
push
cmp
std
and
loope
sub
pop
mov
or
ds
cmc
sbb
adc
mov
insl
outsb
and
push
push
dec
mov
lahf
rcrb
adc
push
rclb
xor
xchg
cmpsb
insb
xor
dec
push
xor
pop
fnstcw
xchg
mov
bound
mov
rcrl
aad
arpl
fnstcw
mov
fsubl
insl
jecxz
xorb
cmp
test
push
sbb
stos
dec
andl
sub
push
xchg
in
push
pop
jecxz
insb
fs
insb
loopne
rorl
fsubr
sbb
cmp
lcall
inc
aas
filds
add
cs
movsl
jbe
adc
cli
fwait
xchg
fidivrs
xlat
sbb
movsb
fildll
xchg
jbe
orl
enter
outsl
repz
stos
rep
pusha
and
and
cmp
cwtl
sub
push
daa
sbb
sbb
jbe
jecxz
mov
or
sub
add
mov
cmp
adc
dec
or
pop
sub
ret
das
add
mov
xor
outsl
xchg
add
arpl
lret
push
mov
stc
leave
mov
sbb
push
insb
subb
rclb
dec
adc
inc
mov
sbb
pop
ret
shrb
mov
stos
dec
jmp
xchg
xchg
loop
testl
stos
push
dec
ds
in
and
add
out
ljmp
fildl
inc
leave
fadds
inc
pop
mov
insl
out
jnp
std
call
xchg
test
sbb
jnp
push
ret
xor
jge
inc
je
adc
mov
xchg
aad
dec
cwtl
popa
lahf
stos
ljmp
lods
jg
push
faddl
push
jo
inc
cld
cmp
push
xor
mov
adc
roll
sub
outsl
ss
push
and
fcomp
lret
out
sub
mov
and
je
push
pop
mov
jbe
in
add
sahf
sbb
xchg
test
inc
adc
out
xor
add
sub
jbe
add
pop
jp
mov
push
les
das
adc
fstps
test
out
pop
sbb
jno
loopne
adc
mul
or
push
adc
insl
scas
xlat
or
fcoml
sub
inc
push
ficoml
pusha
std
mov
das
aam
nop
xchg
cmpsl
int3
mov
cltd
fwait
mov
fisubrl
push
adc
mov
aad
fldt
push
rcrl
lods
stos
enter
mov
mov
cmpsl
shrl
jae
adc
adc
test
rorb
call
aaa
mov
sub
push
fisubrs
fisubl
jns
scas
mov
cmc
pushf
sarb
movsb
sbb
shl
dec
push
sbb
mov
or
repz
lea
push
es
dec
jmp
imul
pusha
sti
push
in
addr16
cmp
lock
push
pop
jb
mov
xchg
in
fcmovb
xor
lret
cmp
pop
xchg
mov
xor
xor
jg
mov
lret
adc
gs
inc
iret
mov
mov
jne
lods
out
lret
loop
and
fdivr
xorl
jg
test
les
mov
push
shll
push
daa
adc
je
pop
arpl
movsb
inc
jae
rorl
cmp
mov
mov
add
pop
imulb
stos
ret
out
pop
inc
xchg
fistpll
sub
inc
call
jb
jb
mov
std
dec
stc
fst
pop
cmpsl
lea
inc
enter
jmp
xor
xchg
in
lret
mov
idivl
xchg
dec
roll
mov
cwtl
je
dec
ret
xor
fadds
aam
sub
xlat
cmp
das
iret
ss
mul
adc
pop
adc
jb
loopne
aad
push
dec
inc
adc
add
lock
adc
insl
in
xchg
fsubr
jnp
xchg
pop
sub
xchg
or
insb
les
jmp
lret
mov
mov
or
cmp
sahf
adc
addl
adc
cmpsl
lcall
popf
mov
inc
in
in
or
jae
loope
loop
imul
mov
pop
and
mov
push
out
stos
pop
stos
fildll
cltd
cmp
dec
and
imul
imul
sub
mov
mov
es
sub
xchg
lods
mov
nop
sub
insl
mov
xchg
fstpt
imul
mov
inc
loop
mov
inc
repnz
xchg
cmc
jo
dec
dec
xlat
aam
add
adc
pop
shlb
add
jnp
cltd
frstor
insb
loopne
mov
mov
push
sbbl
push
cmp
pop
mov
pop
jns
adc
inc
stc
scas
and
es
and
pop
mov
mov
mov
inc
test
inc
arpl
lods
testb
and
mov
xchg
push
mov
dec
xchg
fdivrs
mov
jns
dec
gs
add
pusha
cmpsb
mov
mov
outsl
mov
cmp
sub
or
and
jnp
inc
imulb
jp
ja
sub
adc
and
jnp
jo
mov
test
test
imul
pop
pushf
inc
rorb
jne
nop
pop
stc
mov
ret
shll
ret
xchg
in
in
inc
shlb
mov
test
cmp
pop
jbe
dec
sub
xor
into
mov
mov
ljmp
aad
in
clc
xor
mov
xlat
adc
sbb
int3
lods
divb
jb
adc
adc
enter
mov
dec
test
loop
aam
lea
mov
xchg
movsb
fdivl
insb
jb
pop
stos
idivb
xchg
js
stc
stos
push
sub
push
xor
scas
test
jnp
sub
hlt
scas
sbb
aad
sub
mov
mov
je
sbb
xchg
iret
aas
inc
aas
xor
ret
mov
push
out
lods
cwtl
test
xor
ret
dec
lcall
jge
and
mov
jmp
js
faddl
movsb
lret
inc
xchg
lret
inc
jo
nop
cmp
jae
adc
sti
fstp
inc
leave
hlt
jbe
mov
into
subl
inc
mov
push
jg
data16
mov
xor
dec
jmp
sbb
inc
fldl
xor
cmp
pop
clc
std
xor
mov
cmpsl
mov
ljmp
xchg
xchg
inc
outsl
xor
mov
inc
pop
outsb
push
in
cmp
ja
fs
mov
negl
mov
in
mov
in
test
mov
jo
pop
mov
lds
mov
sbb
mov
jmp
mov
xchg
jle
stos
minps
bound
pusha
lret
dec
mov
mov
mov
fcmovbe
rcrl
repnz
xchg
stos
mov
xor
inc
pop
hlt
sbb
pop
xor
mov
movsl
inc
xor
xchg
mov
pop
fidivrl
flds
sbb
or
out
pop
mov
sarl
mov
lods
cmp
test
mov
sub
mov
outsb
mov
push
xchg
les
jbe
xor
mov
xchg
push
test
ficoml
lahf
and
jns
lock
out
xchg
push
ret
xor
xchg
js
fcomip
cmp
cmp
arpl
pop
mov
test
out
loopne,pt
xlat
and
mov
pop
hlt
pushf
aas
cmp
push
aaa
aam
clc
push
or
push
in
xor
fnsetpm(287
sub
cwtl
push
jno
and
adc
mov
sar
ds
push
fwait
xchg
push
or
sub
jge
cmp
in
arpl
xor
cltd
rclb
rolb
cmp
lret
faddl
mov
dec
in
xchg
push
popa
mov
out
mov
dec
les
xchg
xor
in
xor
in
fcmovnb
push
fstl
dec
mov
mov
mov
inc
xchg
stc
xchg
lcall
cmc
pop
sbb
jg
xchg
cmp
mov
lcall
fists
das
test
sbb
shlb
mov
cmpl
cld
mov
fisttpll
imul
jmp
mov
cli
fnsave
divl
pop
das
and
or
gs
mov
ja
int3
repnz
push
icebp
call
mov
les
not
int3
jno
adc
jb
sbb
inc
pop
jae
shlb
shl
mov
test
int
call
test
push
clc
sbb
sub
aaa
loopne
scas
xchg
sbb
xchg
sbb
cs
aas
out
mov
xchg
fisubrs
aam
repz
lcall
test
fwait
push
xchg
mov
or
int
pushf
push
fisubrl
sub
or
and
je
ss
sub
mov
push
movsb
mov
shlb
xor
mov
adc
add
xor
and
cmpsl
rcll
loope
aaa
fdiv
jbe
and
mov
dec
mov
or
into
pop
shl
or
and
lret
cwtl
lods
cmp
shll
cmp
out
int
mov
inc
mov
xchg
data16
test
icebp
cmp
xor
fnstcw
popa
pop
js
popf
nop
pop
notl
mov
outsl
push
mov
ja
lods
in
fsub
repz
sbb
mov
xchg
adc
push
comiss
hlt
xor
js
lods
cmpsb
aad
in
int
mov
repz
pushf
addr16
jmp
int
push
xor
adc
and
and
movsb
adc
shlb
mov
push
rolb
mull
cmp
fidivs
inc
int3
mov
test
cmc
stos
or
push
cltd
xorl
mov
pop
imul
cli
cs
repz
ret
xor
jno
iret
lock
pop
rcr
push
or
push
shl
and
jns
call
les
aam
ficoms
sbb
xchg
aam
xchg
mov
cmp
inc
lret
mov
sbb
lcall
data16
fldcw
add
aas
insb
fsubrs
pop
fstl
push
roll
fiaddl
loop
and
pop
psubusw
push
stos
mov
das
adc
mov
lds
jg
xchg
mov
loopne
adc
mov
add
or
repz
stos
movsl
iret
stos
push
clc
mov
call
mov
mov
lcall
jge
xor
sub
mov
mov
aad
jge
or
jne
ljmp
push
jnp
das
xchg
push
push
cmp
sbb
call
mov
inc
shrb
divl
out
fdivr
mov
rorb
es
xchg
out
push
filds
adc
pop
test
xor
xchg
in
pop
inc
nop
aad
gs
cmp
incl
lock
xchg
adc
ficompl
dec
xchg
aas
mov
jno
xchg
xchg
add
xchg
or
push
and
xor
cmp
daa
mov
mov
pusha
loop
rorl
xchg
or
cld
fistpll
adc
hlt
mov
test
sub
test
ds
mov
and
std
mov
xchg
cmp
std
add
and
cmp
xchg
sbb
clc
divb
pop
and
dec
dec
aaa
out
cwtl
xchg
pop
adc
and
cmp
in
pop
aas
cli
sti
push
orl
aaa
mov
lock
cltd
mov
dec
add
or
call
inc
rcrl
loope
pop
inc
lahf
adc
jb
push
clc
js
lea
jmp
das
xor
push
and
mulb
inc
push
pop
pop
mov
addr16
jmp
fisubrl
or
pushf
mov
push
push
xchg
push
mov
xor
jge
dec
mov
mov
sbb
and
inc
mov
bound
ss
lcall
mov
jle
rolb
mov
icebp
pop
pmulhuw
ret
cmp
ret
lret
sub
out
rcrl
mov
hlt
jne
xchg
sbb
mov
jnp
sub
bound
inc
or
es
mov
push
test
js
mov
loopne
mov
mov
or
cmpsb
add
cmp
shrl
mov
arpl
lcall
jo
hlt
sub
stos
inc
mov
and
pop
push
xor
out
movb
push
mov
mov
inc
inc
push
clc
fs
pushf
add
movsb
gs
arpl
bound
lea
dec
pop
push
jns
push
ja
mov
test
and
ds
push
pop
lret
fldl
dec
xchg
lcall
aas
mov
iret
xlat
jle
push
push
scas
mov
jno
ljmp
repz
decl
out
lock
or
jno
lret
sarb
mov
in
sbb
dec
imul
mov
cmp
pusha
je
das
out
xchg
jmp
lret
push
pop
inc
push
or
stos
xchg
in
sub
test
outsb
mov
xchg
insb
cs
lods
jge
jg
in
fdiv
ja
ds
mov
sbb
data16
daa
cwtl
int
and
mov
add
imul
rorb
bound
inc
aam
mov
sub
out
sahf
iret
jo
outsl
lock
add
mov
hlt
cmp
fmuls
lods
mov
ret
stos
jmp
cmp
pop
lcall
push
sub
dec
or
and
in
jo
popf
pop
dec
stos
out
in
test
dec
aaa
lret
sub
jbe
lea
gs
xor
mov
cli
xchg
and
imul
testl
cmc
sti
mov
jmp
loope
mov
test
xor
inc
inc
sbb
sub
adc
sub
mov
fisubrl
and
out
sub
icebp
adc
dec
icebp
es
nop
push
add
mov
mov
mov
inc
das
mov
in
loopne
add
ljmp
inc
loopne
inc
ja
push
sub
add
and
incb
and
mov
sbb
out
mov
push
call
mov
movsl
shr
xor
sbb
jg
and
iret
aam
dec
add
lods
arpl
rorl
xor
inc
stos
ljmp
lcall
out
sbb
jnp
aas
popa
call
dec
add
mov
imul
cli
xor
mov
lahf
cmc
mov
jge
std
jbe
adc
push
xchg
lods
sub
aad
sub
shll
lock
in
xor
xor
das
xor
mov
scas
je
add
pop
push
xchg
mov
fstpt
sbb
mov
cmpsb
jecxz
lcall
scas
fidivrl
add
push
es
test
sub
jns
cmp
stos
test
enter
add
in
push
add
add
arpl
push
pushf
cmp
add
mov
iret
arpl
lea
dec
inc
cmc
and
cli
push
sub
movsb
aaa
mov
push
shrb
addl
mov
test
cld
sarb
xchg
insb
mov
or
xchg
cmpsb
jl
rorl
lret
imul
pop
add
mov
pop
stos
cmp
into
or
std
cs
mov
xchg
in
jae
scas
rclb
pop
lret
mulb
adc
xchg
loopne
in
adc
jmp
into
xor
mov
andl
cmpsl
push
fildll
inc
fsub
test
sub
popf
jnp
cmp
out
imul
sahf
scas
fsubp
cltd
fistl
adc
sub
sbb
inc
insb
adc
fcmovnu
xchg
inc
cmp
sub
add
push
sti
repnz
xchg
rcrl
stos
xchg
cmp
stc
dec
lods
inc
xchg
out
cmp
inc
cltd
leave
push
xchg
mov
repz
sbb
fmull
lret
and
in
movsb
xchg
inc
or
mov
dec
mov
mov
sarb
clc
adc
sbb
cmpsl
push
mov
out
addl
push
lock
jg
pop
mov
xor
cmp
pop
mov
jmp
loope
jmp
push
inc
jae
xchg
inc
dec
popf
fisubl
pop
xorb
jbe
and
popf
xchg
sbbl
jb
jb
or
sbb
fcmovu
hlt
jg
imul
inc
xchg
xchg
jp
adc
sub
pop
addr16
lea
mov
pop
pop
push
jae
testb
mov
xor
repz
adcl
inc
js
fldt
inc
push
adc
fstpl
jbe
loope
push
dec
adc
xor
iret
loop
call
mov
ja
jno
jne
push
filds
adc
arpl
mov
mov
pop
daa
daa
xchg
sahf
sub
popf
adc
loopw
mov
push
xor
ljmp
adc
pop
mov
inc
aam
sub
adc
paddd
rcl
inc
mov
mov
cs
mov
push
ja
mov
mov
add
mov
outsl
fisttps
dec
fisubrs
or
sub
mov
and
sti
stc
cmp
fsubrp
test
pop
jne
cmp
int
dec
jne
add
inc
lret
iret
popf
and
in
fadd
push
dec
cli
out
in
mov
sbb
xchg
inc
jmp
shl
xor
icebp
push
push
cmc
cmpsb
inc
hlt
mov
fstpl
lods
or
out
xchg
sub
mov
pushf
inc
dec
test
mov
mov
cltd
rcrb
scas
test
mov
mov
jl
clc
fwait
and
test
clc
jle
cwtl
xchg
xorb
out
scas
out
aam
movsb
mov
cltd
mov
sub
popf
sbb
hlt
mov
xor
fsub
xchg
or
xchg
lret
dec
out
cli
testb
xchg
xchg
fdivrs
das
push
push
ljmp
dec
cld
stos
pushw
jp
xchg
mov
and
mov
fsubrl
mov
and
mov
mov
aas
push
mov
dec
sbbb
jb
testb
dec
out
pop
jbe
insl
int3
imul
fbstp
dec
sbb
dec
fsubrl
adc
mov
jl
xchg
xchg
fiadds
test
out
out
jno
cmp
imul
testb
lcall
shl
rcl
ljmp
and
mov
and
test
xor
pop
push
jbe
jno
xorb
mov
testl
lcall
popf
loop
inc
adc
jp
adc
clc
jo
pop
cli
cli
inc
test
or
ror
and
inc
arpl
xor
cmpsl
push
stc
ljmp
jg
jns
sub
ja
xor
inc
inc
push
jge
idiv
pop
addl
jmp
ss
jge
fbld
sbb
xchg
jg
xlat
jmp
pop
mov
cld
sahf
push
jbe
and
add
popf
dec
jecxz
loope
inc
push
test
test
sbb
xor
into
iret
arpl
iret
mov
test
mov
add
out
mov
repnz
push
inc
es
inc
xor
mov
out
out
in
push
pop
mov
xchg
lea
push
out
jmp
pop
mov
testl
inc
data16
and
rolb
movsl
fucomp
lock
push
aam
in
pop
jae
mov
xchg
mov
int3
push
pop
push
jecxz
fstps
dec
sbb
out
lock
xchg
stos
cmp
repnz
call
rorb
or
sbb
cmp
xchg
adc
pop
mov
jle,pt
inc
push
dec
mov
pushf
lods
inc
pop
ret
ljmp
je
mov
addl
fdivrl
mov
js
push
or
sbb
cmc
xor
add
xchg
add
ss
sti
loope
or
sub
cld
cmp
pop
xorl
mov
rolb
enter
mov
mulb
insl
ss
in
neg
jp
xor
mov
dec
rcrl
mov
cld
out
icebp
pop
jle
popa
xchg
push
xor
ljmp
pop
mov
aas
orb
sbb
insb
arpl
pop
sti
xchg
add
mov
add
cltd
aad
int3
mov
sub
pop
daa
sub
rorb
sbb
sbb
repz
xchg
xchg
les
inc
mov
sbb
hlt
aad
and
inc
add
mov
ficoml
jne
jno
es
lds
insb
movsl
outsl
add
mov
or
loop
mov
std
cmp
mov
jmp
gs
cli
subb
mov
movsb
into
mov
lea
out
shlb
outsb
clc
adc
jnp
and
jbe
jp
push
add
inc
mov
push
int
dec
push
scas
pop
jne
jno
fistps
test
enter
pop
repnz
outsb
xor
adc
adc
push
lods
fisubrs
pminub
into
pop
adc
and
dec
mov
rorl
loope
arpl
out
int
push
cmp
push
sbb
jg
repnz
insb
lock
inc
push
fisttpl
cwtl
pusha
pop
add
ja
cwtl
sbb
xor
icebp
cmp
ret
imul
xchg
push
lods
addb
mov
add
mov
mov
pushf
sub
mov
pcmpgtd
ss
jl
sub
push
pop
xchg
rorb
mov
jbe
js
scas
mov
pop
mov
and
cmp
sub
and
insl
fs
push
pop
dec
pop
les
xchg
imul
push
sahf
push
cmc
xor
sub
or
nop
cmp
cmp
pop
dec
subl
jecxz
pushf
mov
stos
fs
or
lods
sbbl
xchg
inc
aaa
or
dec
and
xor
clc
pushf
dec
shrl
mov
adc
adc
nop
leave
cmc
xchg
outsl
pop
push
js
or
push
cmpsb
xchg
movsl
test
mov
cs
xchg
dec
aaa
and
mov
jae
dec
cwtl
inc
cld
aaa
pop
xor
inc
and
iret
sarl
jp
add
into
push
sbb
in
push
repz
fdivrl
xchg
hlt
and
mov
mov
in
or
je
bound
fcomps
xchg
cmpb
xor
jmp
mov
lahf
into
or
mov
xchg
pop
sbb
mov
stos
mov
xchg
adc
xor
out
jle
cmp
jno
in
ret
mov
dec
fmuls
lock
shr
mov
lcall
mov
sbb
push
ss
jl
out
push
mov
les
into
mov
push
dec
mov
mull
movsb
xchg
sub
mov
mov
jno
mov
sbb
ss
idivb
sub
xchg
dec
sub
fnstcw
sbbl
xchg
add
es
and
mov
pop
outsl
fs
inc
push
sub
jo
or
and
or
into
ds
orl
enter
jg
xor
inc
cmp
fidivrl
adc
lods
xor
out
xchg
jbe
popf
into
hlt
inc
faddp
lcall
push
rcll
nop
enter
stos
and
insl
dec
cmc
sti
push
nop
vcvttss2si
xchg
inc
add
orb
mov
movsb
xchg
pop
jo
dec
dec
jle
mull
outsl
shlb
sbbb
dec
ror
pop
add
xchg
jo
push
sbb
stc
cmovae
ret
mov
ret
test
pop
imul
mov
pop
hlt
lds
shlb
repz
mov
dec
insb
xor
add
inc
pop
cmp
and
fildll
jg,pn
jno
movb
xchg
iret
insl
aad
test
inc
xlat
cmpb
ret
inc
xchg
test
add
add
jge
imul
cld
push
cld
cmp
push
cmp
pusha
cmp
aaa
gs
psrlw
test
xchg
ret
sahf
push
lret
xchg
inc
cmp
leave
ss
jns
inc
sub
add
adc
and
xchg
add
sbb
js
outsb
mov
adc
mov
orb
outsb
in
mov
push
arpl
stos
add
call
ljmp
push
ret
pop
jnp
sub
push
test
push
fsub
jae
add
int3
pop
cmpl
xor
shlb
es
movsb
push
jae
inc
and
fwait
clc
sub
das
inc
cs
sti
or
mov
push
dec
gs
mov
jp
adc
dec
xchg
insb
cmpsb
das
out
mov
popf
fsubrs
xchg
xchg
stos
test
pop
das
push
and
jb
cmp
xor
mov
clc
aam
pop
dec
sbb
inc
call
pusha
xchg
xchg
or
cli
xchg
shl
cli
push
cmpsl
and
movsl
int3
mov
cwtl
in
dec
pop
daa
in
jp
xor
mov
mov
or
jmp
xchg
sbb
fimull
and
mov
shlb
mov
sbb
cld
inc
jg
aad
mov
dec
popf
mov
adc
dec
lahf
mov
xor
inc
pop
cmp
jbe
fwait
sti
mov
push
push
push
into
out
mov
mov
jg
jb
adcl
push
mov
sub
cmp
test
sub
ret
dec
ds
test
jbe
jecxz
inc
jmp
cmp
jnp
xor
and
push
jle
inc
stos
xchg
outsb
mov
int
add
sub
adc
adc
xor
divl
out
cmp
xchg
and
stc
dec
jg
jg
enter
push
mov
dec
mov
lods
js
test
jae
dec
inc
lds
ficoms
movsl
lea
mov
mov
add
mov
aad
lds
inc
cmpsb
jne
sbb
jns
inc
imul
xchg
pop
arpl
and
mov
ss
and
imul
ficoml
push
sub
hlt
cmp
in
mov
imul
pop
repnz
inc
out
movsb
mov
incl
pushf
mov
add
add
xchg
hlt
pop
or
push
rcrb
mov
and
adc
and
cmpsl
add
mov
icebp
ja
push
push
xor
fucom
jno
jecxz
sbbb
daa
idivb
leave
or
std
jbe
sub
mov
add
add
mov
sub
jge
cmp
incl
call
repnz
ficoml
movsl
pop
sti
mov
test
push
inc
push
into
shlb
and
sbb
and
out
or
loope
jne
imul
aaa
and
adc
push
ret
add
and
clc
mov
lds
std
adc
adc
adc
fimuls
and
sbb
fbstp
xchg
lea
outsl
mov
sbb
scas
shrl
add
int3
fstpt
or
loopne
mov
in
imul
shl
push
std
cld
cmp
bound
or
or
aad
fistpl
fprem1
arpl
pop
xchg
sbb
shlb
jge
js
sub
jg
jo
cli
jle
outsb
rolb
jmp
inc
jo
mov
mov
mov
cli
xor
and
push
inc
faddl
jg
inc
subl
jno
shrl
adc
xchg
fstl
cmp
enter
test
icebp
hlt
sbb
movsl
scas
jmp
dec
inc
les
jns
sub
push
cmp
jmp
sub
xchg
mov
add
add
repnz
push
jecxz
adc
fistpl
xchg
cmp
push
cmp
adc
mov
cli
sbb
jg
sbb
ljmp
add
or
int3
iret
test
mov
push
xor
shrb
jnp
jno
mov
and
push
jo
cmc
xor
sub
es
test
jge
add
and
mov
inc
lahf
push
xchg
or
xchg
xchg
cmp
sub
iret
leave
mov
lea
lahf
hlt
dec
je
fisttps
jl
iret
dec
xor
pop
fwait
mov
mov
outsl
fisubl
jge
aaa
mov
mov
mov
add
inc
call
pop
xlat
mov
sbb
popf
add
mov
mov
movsl
lea
aas
dec
out
and
inc
inc
fdivl
pop
push
movl
mov
lds
scas
sbb
mov
leave
loope
add
jle
shr
sarb
jle
popf
xor
int
aam
icebp
inc
std
fisttpl
ror
aas
jmp
rcr
mov
cmp
aaa
aad
fs
out
movsb
mov
std
xor
mov
xor
stc
and
sub
loop
movsl
scas
call
fldenv
loopne
and
inc
inc
add
sub
xchg
pop
imul
push
xor
rcr
lret
inc
sbb
add
mov
cs
mov
sbb
iret
cmp
and
inc
cmc
sbb
inc
cli
push
fmull
imul
sbb
fnstcw
cmpsl
add
imul
mov
push
gs
sti
sub
test
in
or
enter
xchg
repnz
mov
popa
popaw
leave
fsubrp
mov
std
cmpsl
stc
dec
mov
jae
ret
jbe
fwait
lret
pusha
jp
shrl
ja
mov
cmp
mov
push
jge
cmp
das
icebp
push
sub
pop
sub
shrb
mov
mov
mov
push
arpl
insl
test
insb
notl
sti
mov
ret
inc
xor
or
lret
jl
aaa
add
addl
inc
xchg
insb
ss
pop
jo
ljmp
aam
stos
rolb
xorb
add
or
cltd
or
clc
stos
push
out
sarl
leave
cmpsb
shlb
mov
mov
sbb
movsb
xor
adcb
mov
ljmp
fdivs
jp
cli
jecxz
sbb
jle
fistl
movsb
sub
adcb
aaa
test
lods
pop
jecxz
ljmp
fimuls
loope
pop
pop
pushf
call
and
jl
adcl
movsb
sbb
dec
aaa
add
inc
insb
mov
ss
hlt
daa
ret
dec
cmpsl
outsb
xor
sub
inc
xor
in
adc
faddp
leave
std
sbb
scas
shlb
dec
inc
jo
cld
mov
dec
push
cld
arpl
ret
cld
mov
imul
out
mov
movsb
jge
or
ja
mov
addr16
push
and
inc
sbb
mov
and
stos
inc
adc
push
cmpsb
pop
xchg
cmp
fdivrl
mov
sub
mov
and
popl
bound
xor
jb
fbstp
shlb
stc
inc
lahf
and
xor
and
ds
adc
lock
or
adc
and
insl
cmp
or
jg
repz
arpl
xor
xchg
stos
add
dec
sbb
sbb
in
push
divb
icebp
sbb
or
adc
into
cmp
lds
cmpsl
xor
dec
xor
data16
loopne
cwtl
les
push
subb
inc
scas
adc
gs
mov
ljmp
mov
xchg
or
sub
push
jb
mov
inc
push
insl
cmp
or
xchg
out
dec
mulb
dec
dec
lcall
mov
fcoml
fisubs
mov
test
inc
bound
add
sti
stos
addr16
xor
out
xchg
xchg
add
jle
das
dec
jno
jne
cmpsb
push
push
adc
mov
aas
push
stos
mov
cmp
divl
outsl
jne
negb
rcll
out
in
jle
inc
clc
out
inc
mov
or
jno
loopne
dec
insb
lret
push
ret
push
dec
bnd
aam
push
bound
pop
pop
jge,pt
mov
push
xchg
int3
add
mov
mov
insb
add
lret
std
cmpsl
cs
or
or
mov
xchg
push
das
xchg
inc
lahf
lcall
xlat
mov
shlb
sub
push
jge
xor
inc
jne
mov
mov
push
inc
mov
pop
cmpsb
outsl
jge
or
mov
sub
lods
mov
xchg
fstpt
enter
daa
cli
sub
and
xor
in
xor
ja
rcll
jo
adc
ja
leave
test
aam
pushf
repz
addb
fisttpll
dec
ficoml
inc
jle
mov
sub
xor
repnz
imul
hlt
in
pop
mov
sbb
sahf
ret
or
add
xor
mov
mov
js
mov
fs
stc
adcb
out
outsl
or
cs
lock
jl
jnp
sbb
call
mov
mov
call
jno
push
ret
js
xchg
push
adc
or
inc
push
or
mov
movsl
leave
jp
push
adc
test
ret
lret
fdivl
push
sarl
xchg
cmp
and
out
fisttpll
lea
out
test
outsl
sub
jo
cmp
ret
mov
lods
inc
mov
ss
lock
xchg
stos
movsb
pusha
xchg
pop
xchg
cmp
and
xor
insl
fcmovnb
inc
cld
jl
xor
fsts
ret
mov
push
movsl
mov
pop
adcl
cmp
insb
fcmovnbe
push
push
lock
incb
sbb
dec
inc
push
gs
stos
mov
pop
jno
jg
out
addr16
pop
or
nop
data16
fnsave
movsl
outsb
ret
std
jne
pop
xchg
mov
jg
mov
xchg
into
shll
push
mov
or
ljmp
fcmovne
sbb
orb
adc
pop
aaa
jo
addr16
std
ja
or
mov
cld
ret
mov
mov
sbb
inc
pop
test
nop
sub
xchg
sbb
mov
fnsave
ret
or
xor
andnps
mov
cli
fsubrl
arpl
clc
ja
rcrb
mov
push
jo
mov
hlt
rolb
aad
push
jg
or
test
xchg
imul
iret
lods
cli
notl
pop
outsb
mov
std
scas
mov
or
into
or
or
lcall
sahf
popf
mov
jle
push
inc
sbb
cwtl
js
insl
sbb
jne
mov
pop
mov
or
add
inc
cmp
mov
js
inc
pop
xchg
adc
shll
adc
or
bound
mov
fwait
pop
repnz
sbb
mov
int
mov
fldenv
and
in
mov
icebp
scas
push
adc
sti
pop
fisttpll
mov
mov
push
jge
jns
pop
sbb
mov
push
ljmp
mov
pusha
mov
mov
lcall
cmc
repnz
and
test
inc
push
aad
and
cld
in
enter
aad
sti
lea
out
cmp
mov
cmp
push
call
addr16
rcll
lods
and
pop
mov
xchg
cmp
lret
sbb
inc
push
aam
test
insl
sti
imul
inc
into
arpl
add
mov
gs
loop
inc
pop
push
stc
jecxz
icebp
test
cli
in
mov
sti
sahf
or
leave
int
dec
jne
add
in
push
xchg
int
sbb
jle
in
test
inc
pop
fcomps
sub
inc
dec
sub
repz
mov
stos
xor
xchg
dec
aaa
adc
jle
cmpsl
sub
adc
movsb
push
cmpsl
mov
pop
std
test
loopne
mov
dec
pmuludq
mov
xchg
je
aas
jns
outsb
pop
addr16
push
pusha
iret
mov
push
out
sbb
das
push
sub
sbbl
rorl
outsl
cmpsb
repnz
rol
pushf
lret
jl
push
pop
sub
cmp
in
inc
lds
es
fs
dec
mov
adc
inc
inc
lods
or
mov
das
icebp
inc
ret
sar
fisubrs
mov
mov
mov
xchg
push
mov
mov
imul
inc
push
jae
loop
iret
cmpsb
dec
mov
es
fs
sbb
sahf
xchg
inc
pop
fisttpl
movb
sbb
and
cmp
test
cs
dec
fsubrp
mov
cmp
or
mov
shlb
add
cmpl
mov
sbb
out
xchg
stos
in
div
dec
es
negb
cmp
outsl
mov
push
push
jl
fildl
xlat
into
pop
cltd
xchg
fisubrs
sar
or
andb
add
mov
xor
adc
leave
xchg
jp
in
xor
or
shlb
dec
rorl
pop
lea
out
pop
stc
cwtl
mov
add
arpl
mov
dec
sar
incb
adc
inc
inc
cltd
fwait
lahf
or
mov
and
xchg
inc
jp
addr16
mov
leave
xchg
jb
leave
popa
pop
pop
enter
cwtl
fisubs
push
adc
loope
lcall
clc
out
ljmp
add
out
jmp
inc
and
mov
dec
cmc
jecxz
xor
dec
cmpsb
add
movsl
outsl
adcl
cmp
in
movsl
pop
xor
jns
stos
lods
xlat
cmp
mov
lea
repnz
mov
push
in
xchg
xor
inc
mov
nop
int
sbb
jg
and
pop
push
jle
mov
push
push
lcall
mov
or
cli
mov
dec
ja
cmp
dec
into
cmp
lods
xor
mov
pop
mov
mov
lea
lahf
mov
pop
jo
and
push
adc
sbb
dec
std
movsl
lods
aad
sub
xor
push
mov
mov
push
arpl
movsl
movsb
pop
repz
jb
mov
lds
fldl
movsb
push
xchg
mov
pop
cmpsb
aam
repz
insb
lret
inc
and
sub
imul
jbe
inc
scas
add
jle
dec
mov
xchg
jmp
bound
push
cs
lds
adc
sub
jb
cmp
fs
dec
out
out
pushf
push
sbb
bound
jns
sub
xchg
stc
inc
push
gs
js
adc
stos
xchg
add
les
cmpsl
arpl
rol
js
in
clc
sbb
iret
sbb
orl
out
pop
dec
lret
push
addr16
jo
dec
pop
push
testb
loopne
push
hlt
arpl
push
pop
cmp
jbe
sbb
arpl
cwtl
sub
imul
or
shrl
xor
mov
test
out
shrb
mov
es
loop
es
dec
add
pop
sti
jne
pop
jno
int3
popa
addr16
hlt
nop
clc
lret
aad
ret
xchg
mov
jp
jne
andl
jl
and
mov
xchg
push
ret
ljmp
sbb
dec
push
cmp
divb
pop
or
out
dec
jno
xchg
and
outsb
inc
inc
jns
std
cmp
pop
cmp
push
inc
pusha
lret
or
jae
out
dec
aas
push
pop
inc
hlt
jmp
and
sahf
fldt
push
lods
and
insl
cmp
jns
xlat
inc
ret
mov
fnstsw
bound
mov
jbe
fsts
jmp
sub
adc
icebp
adc
addr16
pop
add
mov
out
push
xor
sarl
adcl
stos
aam
sub
sub
sahf
adc
popf
cmp
cmp
and
push
dec
fst
jae
stc
pop
jmp
movsb
mov
in
jmp
inc
xlat
test
dec
dec
push
jno
mov
frstor
and
or
dec
mov
test
negb
scas
jns
xor
jle
xor
rorl
loop
stos
clc
pop
or
aas
out
les
xchg
pop
dec
mov
cmp
xor
xchg
xchg
cmc
adc
in
pop
push
push
pop
xchg
call
fnsave
or
jecxz
and
cmpsl
xchg
div
lods
movsb
mov
aas
iret
mov
outsl
mov
sbbl
pushf
inc
stos
xchg
xor
xor
xor
mov
or
out
movsb
loope
mull
ds
jecxz
inc
into
fdivl
xchg
sbbb
in
pop
adc
push
stc
jp
jp
popa
rclb
call
test
ret
adc
test
adc
pop
mov
mov
lods
dec
xchg
insb
fcomps
and
xor
stc
push
daa
add
jl
scas
jle
push
in
xor
and
mov
mov
cltd
xor
loope
sub
xor
les
add
enter
push
jl
cwtl
mov
daa
sar
lds
js
lods
or
enter
test
dec
jecxz
inc
mov
mov
ret
push
sti
adc
jl
rep
push
mov
mov
test
fisttps
cmp
loopne
sbb
or
mov
mov
divl
or
jns
repz
shll
scas
lock
lret
std
fists
mov
add
lahf
mov
cmp
mov
iret
dec
mov
and
jmp
pop
sahf
sbb
cmp
inc
mov
lret
clc
cs
add
xorl
fidivrs
imul
fidivrl
mov
aaa
or
fwait
xor
subl
dec
sub
addr16
cmc
mov
and
jg
sub
aas
pushf
sub
inc
mov
mov
cmp
shrl
inc
xchg
call
mov
mov
push
pop
sbb
sbb
rolb
or
mov
add
mov
mov
daa
adc
inc
jp
jae
movb
and
scas
cmp
clc
cmp
stos
mov
andb
or
and
cmp
in
xbegin
jae
mov
cmp
push
xor
adc
stos
aaa
jne
enter
std
jp
jo
dec
stc
pop
mov
call
cmp
xlat
push
aad
rcrb
xchg
mov
call
cmpb
add
add
sub
mov
nop
mov
sysret
jb
sub
add
dec
hlt
mov
mov
and
out
sbb
popf
rcll
mov
fisttpll
fisttpll
dec
xchg
int3
xchg
leave
jb
mov
rorb
dec
jb
leave
out
dec
sub
cli
mov
pop
adc
lds
jecxz
outsb
xchg
cmpsb
fildll
call
adc
sti
scas
ret
mov
xor
push
inc
out
dec
aam
jae
std
mov
ss
fs
push
add
inc
in
rorl
insb
pop
ficoms
std
xchg
adc
mov
fwait
and
sarb
push
adc
sub
or
in
mov
loopne
shrb
jmp
jmp
and
pop
cmp
mov
mov
fistps
test
sbb
fimuls
lcall
dec
push
pop
in
jns
cmp
lock
iret
in
nop
cmp
xor
mov
and
jg
setnp
fcoms
sbb
les
push
xchg
and
out
sub
sbb
ss
js
jns
jno
dec
sbb
lahf
pop
dec
insl
into
xlat
leave
stos
mov
mov
loope
or
movsb
test
mov
inc
imull
mov
arpl
mov
inc
pop
rcr
insb
jbe
ss
nop
add
mov
repnz
fmull
add
adc
jge
pusha
cld
push
jp
cmp
or
mov
xchg
pop
mov
dec
ret
fwait
pop
mov
fcmovnbe
ret
cmpsb
fnstenv
mov
or
push
mov
push
pop
jb
in
xor
repz
dec
ja
inc
mov
jno
lea
bound
adc
imul
cmp
insb
fdivrs
inc
and
push
pop
fs
int
aad
xchg
mov
add
dec
xor
mov
dec
mov
fiaddl
cmp
jb
pop
pop
test
leave
lret
fdivr
lods
pop
mov
mov
and
imul
add
aaa
pop
jp
inc
sbb
insb
dec
dec
out
dec
jle
insb
daa
aas
sbb
cmp
mov
repz
or
rolb
and
jne
out
inc
ficomps
mov
push
jnp
or
mov
inc
pop
add
cmpl
pop
aas
mov
in
test
mov
lds
xchg
mov
int
leave
int
mov
sbb
push
mov
push
movsw
es
mov
adc
push
mov
lods
pop
xchg
xchg
inc
stos
jp
dec
lods
lods
push
in
mov
push
push
lds
mov
add
sti
sub
jb
sbb
in
push
insb
aam
and
ja
jge
lret
test
mov
xor
fldenv
or
mov
pop
pop
cld
imulb
jae
jg
or
aaa
xor
mov
lods
adcb
das
mov
call
jp
pop
adc
push
nop
pop
pop
popf
sbb
shlb
fs
or
and
push
std
or
sbb
jnp
cltd
imulb
pop
pop
movsl
xchg
add
xor
and
inc
jmp
mov
cmpl
test
fiadds
mov
pop
jae
fildll
out
pop
lods
cmp
dec
lds
push
jp
cmp
aas
pop
popa
cwtl
out
adc
push
cmc
mov
xor
sub
push
xrelease
add
xchg
js
lea
sarb
xor
stc
push
mov
out
jmp
inc
repnz
fcmove
imul
cmp
cmpsb
or
les
lods
sub
bound
out
pop
mov
or
xor
lahf
das
sar
bound
xor
pop
dec
arpl
aaa
and
mov
and
pop
sbb
cmc
mov
push
mov
fisubrl
shl
arpl
shlb
mov
testb
ficomps
enter
ds
sti
addr16
mov
inc
dec
ror
aas
leave
cld
xor
je
aas
inc
sbb
in
loope
jp
orl
repnz
addr16
add
jnp
inc
cmp
out
movb
and
pusha
pushf
xor
xor
pop
mov
push
ret
sub
in
push
sbb
fisttpl
adc
cs
cmpsl
and
loope
addr16
lret
mov
mov
push
sub
push
ja
dec
into
mov
inc
mov
adc
test
mov
js
mov
or
lret
jnp
push
movsb
std
les
and
add
add
ds
roll
jne
mov
fsubrp
jge
sub
jge
je
inc
sarb
jmp
jne
stos
mov
imull
fadds
mov
mov
fistpl
adc
aad
cli
aad
xchg
xor
sbb
xchg
sub
push
sbb
nop
cmp
test
mov
pusha
push
popf
or
fsubrl
push
test
fsts
push
into
jnp
in
popa
repnz
dec
movsl
xor
pop
cmpb
jle
sub
hlt
sub
inc
xchg
nop
mov
bound
sbb
mov
push
enter
xor
cmp
jae
mov
cmpsl
xlat
push
dec
mov
out
jg
push
fisubs
lcall
and
ds
jno
bound
sbb
or
in
std
adc
fs
inc
aad
lods
adc
cltd
data16
les
rclb
rclb
push
jle
sahf
mov
outsb
or
inc
insl
mov
mov
jg
xchg
or
call
in
push
or
adc
xor
mov
into
jg
mov
in
inc
pop
notl
mull
icebp
xchg
xchg
mov
add
cmp
dec
ret
jb
add
shrl
mov
xor
test
nop
pusha
xor
push
mov
lahf
jle
mov
ror
aam
cwtl
std
dec
cltd
mov
jo
iret
shll
outsl
jmp
aad
push
les
sub
mov
ror
mov
sub
mov
aam
sbb
je
fisubl
in
insl
loopne
jge
inc
or
sbb
int3
jnp
test
pop
ss
sbb
arpl
pop
inc
call
push
cmp
cmp
out
xchg
scas
rclb
xor
or
mov
xchg
test
stc
iret
jo
aas
mov
pop
js
adc
repz
es
mov
clc
xchg
mov
sbb
and
into
add
jns
pop
mov
clc
xchg
xchg
pop
push
idiv
stos
xor
mov
xchg
cmp
push
dec
jmp
lods
sbb
pop
repz
nop
mov
sub
stos
je
mov
jmp
scas
dec
stc
dec
xchg
push
das
ret
aas
fdivrl
xor
gs
dec
pop
test
mov
and
xchg
adc
enter
jns
scas
inc
cwtl
nop
xlat
inc
mov
mov
les
hlt
pop
sbb
xchg
daa
push
mov
cld
or
sub
leave
xchg
pop
mov
rol
and
push
leave
stc
dec
pop
ljmp
sbb
pop
pop
sub
jecxz
sub
dec
aas
mov
mov
adc
jno
out
and
mov
lods
lret
sbb
mov
lret
or
xchg
decb
loop
sbb
rcrb
push
incl
aaa
cmpsb
sbb
sub
jae
fldcw
xchg
pushl
gs
mov
scas
and
push
push
add
adc
push
cltd
fimull
loop
xor
fimuls
pop
pop
lock
xor
and
jg
arpl
jno
cmp
cwtl
inc
push
and
push
cmp
inc
inc
mov
xlat
add
cmp
inc
xchg
xlat
xchg
div
dec
sbbl
inc
sbb
rcrb
nop
mov
or
xchg
fs
aad
fdivrl
dec
andb
adc
xchg
xchg
mov
or
fsubrs
jge
aam
jle
mov
pop
dec
lods
repnz
fs
fmuls
popf
or
inc
jle
add
xorl
dec
in
push
inc
adc
add
mov
notb
sbb
mov
shll
inc
cwtl
dec
cmp
fistpl
mov
mov
xchg
xchg
pop
sti
jns
sub
or
push
enter
stos
and
movsl
jno
xor
jp
in
jp
push
fidivs
imul
cmp
daa
sub
or
outsl
and
cmp
stos
mov
std
test
mov
lods
mov
lds
xor
outsb
or
lret
add
cmp
mov
add
dec
pop
fadds
cmc
and
xchg
mov
and
in
xchg
jp
adc
sub
and
je
cmp
add
xchg
lahf
mov
cli
ja
mov
aas
pop
shr
pop
jecxz
out
fistps
test
mov
jl
gs
and
mov
cmp
mov
in
mov
or
roll
xchg
nop
adc
dec
xor
sub
int
fisttpll
mov
test
scas
cmp
pop
or
sbb
testb
xchg
and
scas
push
sbb
or
mov
jno
je
jmp
jg
jge
pop
imul
ficoms
js
xor
ds
jle
adc
test
jmp
xchg
int
mov
jmp
lock
mov
jmp
inc
mov
push
mov
sbbl
cmp
negl
xchg
adc
sub
mov
cmp
arpl
divl
aam
mov
popa
cmp
outsl
testl
addr16
sbb
pop
xchg
lret
outsb
mov
jl
mov
mov
xchg
rcrl
jge
inc
insb
and
dec
sub
lahf
jecxz
loopne
movsl
ret
dec
pop
inc
pop
jo
cmp
roll
inc
mov
movsl
addr16
push
mov
stos
cltd
and
pop
mov
sub
mov
cmc
sub
sbb
icebp
lahf
jns,pn
lret
out
push
scas
lahf
xchg
cmp
xchg
fnstcw
sar
add
sbb
mov
sbb
pop
xor
or
int
jae
push
das
jae
pop
fisttpl
xor
int3
push
jo
or
lods
jecxz
or
arpl
push
or
pshufw
stc
ljmp
and
clc
stc
nop
and
mov
mul
inc
cmpsl
imul
mov
out
dec
cmp
xor
in
dec
push
lret
mov
in
loopne
cmp
pop
popf
sub
pop
cwtl
fs
lcall
das
sbb
pop
roll
pop
pop
dec
mov
mov
push
mov
data16
insl
push
loop
imul
ret
jns
int
pop
lahf
scas
les
outsl
pop
ror
out
clc
jno
imul
in
adc
jle
xchg
cmp
and
pop
add
in
fdivs
lcall
xchg
stc
mov
mov
pop
jmp
mov
pop
pop
insl
cmp
outsl
mov
mov
sar
test
cmpsl
cmp
bound
pop
sbb
pop
fstpt
repnz
mov
stc
sub
push
lcall
aad
sub
pop
loop
xorb
mov
fwait
ljmp
push
lods
mov
data16
sarb
mov
sti
lods
inc
cmc
gs
add
int3
jle
dec
mov
test
loop
shrb
dec
pop
dec
xchg
xor
notl
jge
bound
setb
add
adc
inc
jle
shl
jae
cmp
pop
pop
adc
pop
bound
popa
push
insb
jb
lods
adc
movsl
arpl
push
push
pop
imul
jnp
xchg
inc
loopne
mov
mov
push
pop
cwtl
pusha
inc
jecxz
ljmpw
cmp
sub
out
sub
add
xchg
cmpb
out
inc
jecxz
adc
mov
pop
sub
repnz
js
xchg
lock
sub
lds
shll
out
shll
pop
jl
xor
ret
cmc
sub
loope
mov
mov
mov
fstpt
xchg
shlb
scas
repnz
mov
ret
negl
inc
mov
adc
dec
pop
gs
aam
out
mov
xlat
dec
inc
test
ss
fdivrs
push
pushl
xchg
dec
push
push
ja
xchg
stos
ret
jmp
sbb
xchg
sahf
add
je
in
jmp
push
ljmp
cbtw
mulb
pop
jmp
call
inc
cmp
mov
xchg
jge
cmp
xchg
imul
jmp
xchg
pop
ret
fisubrs
jmp
int3
repz
push
sbb
or
aaa
int3
dec
fildll
repnz
sti
mov
repnz
outsl
pop
sbb
fisttpll
xor
sub
sub
fadds
sub
fldcw
popa
ja
rcr
jmp
mov
mulb
pop
xchg
leave
sub
pop
aas
cmp
xor
dec
sub
dec
mov
push
out
fs
mov
icebp
jmp
jae
iret
outsl
sti
jmp
xchg
add
cli
sbb
adc
call
push
pop
lcall
jg
cmp
or
jmp
imul
std
mov
or
out
ja
mov
inc
je
nop
repnz
in
in
add
sbb
mov
push
or
inc
lods
repnz
pop
push
add
andb
ret
mov
inc
jle
jns
das
jno
testb
inc
rclb
call
ret
jns
adc
dec
or
shll
arpl
push
lret
mul
jmp
pop
adc
jge,pt
sbb
bound
stos
mov
mov
push
xchg
rcl
stc
sarb
imul
js
push
xchg
cmp
cmp
inc
mov
iret
push
test
ret
call
dec
inc
xor
push
mov
mov
ds
cs
in
dec
jae
jp
mov
push
mov
xchg
pop
popf
pop
add
push
mov
jl
inc
or
popf
cmp
dec
icebp
addr16
stc
add
test
add
jne
jnp
in
xchg
dec
cmp
daa
imul
mov
scas
adc
les
addl
stos
inc
arpl
xchg
outsl
jp
insl
pop
loop
sub
sarb
pushf
jne
jle
xor
add
add
add
sub
je
jnp
ds
cmp
and
push
or
out
jae
or
mov
mov
mov
vphaddubq
sub
dec
rcr
out
mulb
popa
leave
repz
sar
pop
ja
pusha
jb
fsubl
je
xorl
push
and
scas
popf
daa
and
sar
adc
in
cmp
test
orl
fbstp
cld
test
ret
int
ss
cmp
testl
pop
xchg
xorb
xlat
mov
cmp
negl
pop
jp
std
cmp
lret
shll
adc
nop
mov
cmpsb
push
bound
gs
in
shlb
loop
shl
les
xchg
arpl
ds
movsl
testb
cmp
loopne
inc
shrl
pop
movsl
movsb
mov
leave
aam
fidivrs
xchg
ret
hlt
movsb
pop
sbbl
add
and
mov
outsl
inc
xlat
cmp
pushf
add
cmp
mov
jmp
popf
mov
fwait
inc
push
and
std
jg
mov
int
mov
repz
jnp
push
push
mov
pop
sbb
xor
cmpsb
xchg
mov
mov
inc
aas
lret
outsl
bound
mov
and
mov
jno
and
mov
xor
push
inc
xchg
dec
mov
xchg
aam
aas
cmpl
iret
insb
inc
cltd
pop
dec
push
mov
popa
push
movsl
inc
jb
dec
repz
or
cmpsl
xor
rorl
notl
idivb
in
or
iret
cmc
fsubs
ja
xor
clc
nop
inc
cmp
push
pop
jo
or
stos
push
adc
push
and
mov
addr16
sahf
jmp
enter
ss
mov
leave
dec
or
jecxz
cmp
pushf
cld
call
out
movsb
pusha
and
mov
pusha
jge
fisttpll
movsb
data16
in
outsl
arpl
lret
pop
jne
es
loop
repnz
push
xor
jnp
mov
shrb
stos
pop
mov
jb
jae
push
out
sub
fwait
sbb
mov
sarb
data16
or
inc
xchg
popa
lea
mov
int3
jg
fsub
mov
xchg
stos
sbb
rcll
into
les
lods
ss
xchg
inc
int3
dec
pop
sbb
adc
inc
or
pop
inc
pop
cmp
cmp
push
xchg
out
mov
ds
jge
movsl
sub
jecxz
aam
sar
cld
xor
pop
popf
xchg
insb
es
push
test
adc
in
pop
in
fisubl
dec
cmpsl
lss
int3
jns
or
and
xchg
sarl
add
jns
test
mov
sbb
test
or
push
aad
push
xchg
adc
into
dec
jo
xchg
jecxz
and
or
sarl
xchg
inc
sbb
and
les
or
and
pop
in
add
into
mov
jb
imull
push
daa
lcall
roll
sub
cltd
repz
mov
insl
xchg
jbe
cmp
pushf
add
icebp
jle
push
addr16
sahf
aas
jno
cmp
ja
lods
and
mov
jne
xchg
aaa
xor
or
sub
orb
pop
movsb
lahf
jno
fiadds
hlt
jo
iret
push
icebp
mov
aaa
and
aaa
mov
les
dec
psrlq
push
aas
cmp
jo
call
adc
movsl
lock
lds
fdivrl
lods
int3
out
addb
xlat
dec
popa
les
test
hlt
sub
mov
xorb
subb
jbe
into
adc
inc
insl
inc
call
add
pop
gs
sub
dec
mov
inc
fwait
orb
movsl
ja
scas
lret
push
inc
scas
sbb
fdivl
test
rcrb
jo
fwait
mov
and
pop
cmp
lds
idiv
subl
cmc
out
addr16
aaa
adc
cmp
pop
mov
pop
and
mov
push
xor
jle
ss
push
sahf
dec
inc
fdivs
out
adc
repz
in
nop
jg
jmp
std
sahf
pop
push
xor
cmpsb
cmp
pop
pop
es
fidivrs
jnp
sbb
pop
mov
fbstp
leave
fists
mov
lret
out
push
push
movsl
pop
add
jle
add
cmc
push
repz
lahf
pop
mov
sbb
movsl
dec
hlt
xchg
push
pop
adc
jge
fcomi
mov
pop
popa
mov
pop
jne
ljmp
pop
push
add
iret
pop
xor
sbb
dec
lahf
sbb
xor
sti
imul
pop
xchg
and
inc
repz
inc
mov
pop
xchg
mov
pop
xchg
out
fmul
push
rcrl
and
popa
sbb
or
addr16
add
lock
mov
movsb
mov
inc
inc
fisttpll
push
add
sub
popa
push
sbb
cmp
dec
mov
sahf
add
sbb
cmpsl
aam
cmp
jecxz
mov
and
cmp
jp
jno
add
out
pop
and
icebp
daa
sbb
or
inc
fwait
clc
inc
xchg
clc
push
jnp
add
add
push
lea
stos
lods
mov
pop
xor
or
xchg
mov
into
push
aas
enter
out
mov
and
adcl
mov
outsb
lock
xchg
in
push
or
flds
mov
stos
rcrb
push
jmp
out
cmp
fsubs
pop
stos
add
lcall
scas
stc
sbb
inc
cld
cmpsl
in
mov
ja
dec
and
pop
icebp
lock
add
mov
stc
les
ljmp
add
or
xchg
pusha
sbbl
and
lea
xchg
call
xor
jbe
push
sbb
outsl
dec
sbb
int
mov
lods
sbbb
cmp
add
xor
dec
mov
jmp
inc
push
and
iret
inc
push
jmp
gs
in
or
mov
stos
xor
mov
xor
adc
shl
fsub
scas
lods
mov
adc
test
adc
cmp
push
xor
jge
pop
rorl
push
sbb
fcompl
mov
rcll
sub
fbld
enter
sub
in
and
sbb
out
dec
mov
sub
xchg
les
lahf
cltd
ret
inc
inc
aas
sbb
sub
dec
clc
leave
sub
stc
cmp
movsb
push
repz
js
dec
out
fildll
lods
sbb
inc
nop
cmp
popa
xchg
mov
gs
movsl
mov
cltd
fmulp
lahf
or
or
test
sbb
mov
adc
fimull
adc
fs
andl
and
sub
or
xor
movsl
and
mov
inc
test
mov
xor
addr16
xorb
inc
mov
test
stos
insl
mov
or
insb
loope
push
dec
in
add
loop
andl
pop
lahf
cltd
in
lea
mov
lret
stos
cmp
dec
xor
xor
js
adc
mov
jno
insl
add
and
stos
fstpl
sahf
dec
loopne
out
dec
testb
std
add
nop
call
adc
roll
adc
pop
mov
cwtl
scas
scas
jecxz
xor
lea
mov
stos
jnp
xor
ds
sub
js
enter
iret
loopne
negb
dec
leave
xchg
sbb
iret
clc
jmp
js
push
mov
mov
mov
or
xchg
dec
idivl
xor
sbb
sar
movsb
sub
mov
sahf
cmpsl
and
call
adc
into
xchg
movsl
scas
adc
movsb
daa
mov
out
repz
nop
push
fcmove
stos
dec
xchg
dec
mov
cmp
js
mov
xor
jns
push
sub
loope
orb
movsl
leave
push
jecxz
jmp
inc
in
adc
jno
dec
jnp,pn
mov
das
inc
sub
cmp
scas
call
cmp
cwtl
dec
aas
repz
dec
sahf
add
bswap
inc
nop
mov
jmp
mov
ficomps
add
sbb
fwait
mov
sbb
pop
xor
ret
sahf
sub
aas
mov
inc
shr
sbb
cmp
cmpsb
xor
pop
and
repz
test
lds
sbb
jnp
lods
scas
mov
clc
add
push
fisubl
xlat
sub
xchg
shlb
dec
leave
dec
loop
mov
or
lret
bsr
mov
cmp
sti
xlat
cmp
mov
inc
jnp
fnstenv
lods
pop
push
leave
das
xor
mov
or
lds
inc
dec
adc
pop
xchg
fwait
push
jb
movq
pop
fimull
jp
mov
pop
push
enter
push
push
mov
sbb
push
adc
int3
cmpb
test
clc
notb
cmp
cmp
out
push
dec
dec
es
sbb
inc
loop
int
mov
and
mov
iret
insb
dec
inc
cmp
dec
jecxz
ss
lret
dec
loope
orl
movsl
scas
pop
xor
divb
mov
loope
and
ja
rcl
dec
fbstp
push
mov
push
push
sub
icebp
sub
rclb
or
jns
or
fstl
mov
mov
cmp
das
mov
das
stos
pop
pop
mov
movsb
inc
punpcklbw
jb
jp
fisubrl
jmp
xchg
cltd
loop
cmp
jmp
mov
xor
test
inc
iret
mov
arpl
arpl
ljmp
fsubrl
lods
outsb
xchg
into
lcall
cs
add
dec
hlt
push
jg
pop
inc
icebp
xchg
inc
xlat
mov
stc
cmpsl
mov
dec
outsb
push
iret
mov
sbb
push
xchg
pop
xchg
push
push
xor
dec
mov
add
and
and
cli
xchg
pop
and
int3
and
pop
cmp
cmp
push
mov
push
cmp
es
clc
jbe
add
testl
adc
cmpsl
xor
sub
cmpsb
stc
jb
movsl
adc
push
cmp
jnp
lds
aam
adc
std
bound
sbb
ljmp
sahf
loope
push
repz
adc
adc
les
add
push
aam
aam
push
sub
adc
mov
es
add
dec
pop
pusha
outsb
aaa
pop
in
push
xchg
inc
jg
or
add
arpl
hlt
pop
pop
cmp
pop
stos
loope
clc
outsl
xor
scas
adc
pop
pop
sti
fdiv
sbb
adc
inc
inc
cli
lods
loope
jbe
sub
mov
mov
jp
dec
sub
sub
das
hlt
dec
dec
insl
test
xor
mov
inc
sub
push
sti
mov
xchg
gs
out
scas
adc
sbb
add
add
mov
fs
sti
les
bnd
inc
in
mov
das
sbb
mov
insl
in
notl
aaa
inc
or
popf
adc
repz
std
mov
jb
pop
fimull
adc
negl
int
fmulp
movsb
fstpt
insb
cmp
push
aaa
dec
inc
adc
insb
or
pop
in
xor
insb
mov
loopne
gs
bswap
jecxz
add
dec
shl
lcall
mov
es
mov
imul
fiadds
mov
or
mov
aaa
lods
jns
mov
into
pop
jg
inc
mov
cmpsl
ds
in
cmp
lods
xchg
adc
fdivrs
sub
sbb
mov
imul
clc
out
insl
fsubrp
fwait
sub
imul
dec
xchg
enter
cld
adc
leave
pop
jae
mov
xchg
and
fcmovbe
jmp
push
jmp
mov
pop
rorl
push
aaa
loopne
fwait
push
jecxz
add
pusha
hlt
lahf
cmpsl
daa
push
das
or
fiadds
add
je
call
dec
push
mov
jecxz
cwtl
mov
not
cld
fstpl
scas
cmp
test
dec
push
movsb
push
jne
push
insl
js
pop
stos
push
std
out
ja
mov
test
fdivl
xor
les
mov
test
cmp
mov
pop
sub
sbb
sub
test
cld
das
sub
inc
jg
sbbb
adc
and
aaa
movsl
std
stos
pop
fistpll
std
cli
push
cltd
and
js
pop
mov
je
dec
fnstenv
lret
iret
enter
jae
orl
fld
push
add
jns
push
add
pop
rcll
loope
add
pop
cmp
icebp
in
push
mov
dec
out
adc
lcall
scas
cwtl
cmp
nop
and
sub
jne
dec
jle
rclb
or
add
adc
sbb
xor
jle
push
xchg
push
loopne
rorl
sbb
or
and
pop
inc
xor
shll
mov
and
es
aad
inc
mov
jno
fwait
into
lods
and
mov
mov
jnp
push
adc
jmp
add
repz
jge
push
add
pop
popa
das
inc
xchg
xchg
adc
outsb
testl
pop
shl
add
psubsw
jecxz
jl
jne
dec
sbb
cmpsl
mov
dec
mov
cmp
es
pusha
leave
lahf
nop
clc
push
jmp
sbb
jnp
mov
xlat
sbbb
aad
mov
sti
inc
mov
inc
and
mov
mov
inc
cmpsl
sub
jns
scas
out
sar
xchg
fs
dec
repz
xor
subb
xor
in
jns
jecxz
adc
repz
xchg
into
push
xor
std
popf
outsb
adc
ret
xor
sub
inc
push
dec
mov
and
xor
sub
out
xor
in
jg
lods
inc
or
icebp
push
in
cli
sub
sub
xchg
lods
sbb
inc
mov
outsb
hlt
lock
fs
xchg
leave
test
jp
fcmove
xchg
rcrl
and
cmc
mov
mov
sub
lahf
xchg
mov
leave
jle
pushf
pop
dec
mov
pushf
out
xchg
cmp
out
ja
outsb
imul
cmpsl
ja
xchg
adc
test
mov
in
fcmovbe
add
add
in
mov
repnz
cmp
mov
lcall
push
and
add
add
inc
inc
mov
sub
or
or
in
and
int3
lret
movsb
mov
sub
adc
xchg
mov
mov
push
clc
out
mov
push
or
fcos
addr16
adc
lahf
mov
fdivrs
stc
inc
sbb
cld
sub
test
call
test
or
rcr
jae
mov
es
es
or
jecxz
sarl
and
sbb
pop
sub
push
sub
and
stc
mov
pop
cmp
test
xchg
fstpl
repz
pop
jmp
lret
hlt
aas
cmpps
cmp
jns
cmp
roll
and
mov
and
call
inc
cmc
mov
enter
push
rorl
addr16
add
adc
add
testb
subb
xchg
imul
loope
hlt
sub
arpl
sbb
fisubl
add
adc
jo
ss
icebp
iret
sub
leave
adc
push
mov
dec
push
mov
sbb
stc
shll
push
outsl
data16
jmp
cmp
push
mov
outsb
push
pop
pusha
nop
add
push
mov
xchg
lds
inc
data16
in
inc
in
int
and
fidivrl
add
xor
shlb
sub
inc
icebp
or
out
cs
lea
loop
cmp
psubsb
push
lods
jo
in
aaa
push
lock
lret
icebp
xchg
das
fs
in
rcrl
pop
push
sbb
add
push
out
adcl
cmp
lretw
cmpsl
xor
aaa
scas
cmc
mov
adc
loop
fisttps
mov
jmp
into
and
pushw
jne
sbb
outsl
xchg
addr16
ja
call
xor
and
jne
dec
cwtl
adc
ljmp
out
pop
sti
mov
xchg
adc
cld
sub
shll
cld
rclb
outsb
mov
jae
pop
and
sarl
jb
lret
rolb
cli
das
mov
aaa
loopne
pop
mov
aam
adc
xor
adc
movsb
cmp
mov
mov
mov
ljmp
jns
mov
push
push
xchg
jecxz
das
outsl
stos
shll
xor
cmpsb
stos
jo,pn
xchg
lock
push
push
adc
aaa
add
cmpsl
cmpsb
inc
push
sbb
out
outsb
scas
jns
loope,pt
xchg
pop
mov
icebp
jne
dec
xor
scas
jno
mov
fnstcw
pop
out
mov
mov
out
add
jno
mov
cmpsb
repz
dec
sahf
xchg
mov
mov
or
ret
pushf
cmpsb
loope
adc
cmp
stos
sub
add
fwait
adc
mov
cs
xchg
xor
sub
fcoms
add
and
rolb
les
cmpsb
hlt
fistpll
push
fwait
lret
sbb
pop
cmp
mov
lds
push
mov
adc
sbb
shll
cmp
jecxz
imul
or
lcall
test
imul
adc
mov
or
mov
xchg
adc
jb
cmp
jecxz
ret
jl
dec
cmp
mov
js
and
mov
pop
aaa
lcall
addl
pop
pop
sbb
icebp
and
movsl
je
sbb
mov
sub
shl
int
out
or
cmpsb
inc
pushf
int3
xlat
mov
daa
int
imul
push
fimull
xorl
and
mov
das
xchg
xchg
jmp
stos
cmpl
ds
flds
mov
ficomps
jns
std
clc
mov
sub
mov
imul
outsb
dec
ja
xchg
ret
imul
mov
mov
test
adc
push
xlat
and
loop
imul
mov
notb
ss
or
lea
jo
int3
jbe
cwtl
ss
add
ret
movsl
les
mov
jnp
jmp
adc
mov
int3
or
sub
push
dec
add
mov
popf
arpl
lods
xchg
add
dec
pop
bound
ret
xor
sbb
scas
xchg
or
and
inc
push
fisubs
sub
out
mov
adc
pop
pushf
cld
enter
out
lea
stc
adc
addr16
mov
jmp
cmp
stos
stc
fs
sbb
es
icebp
ja
stos
shr
sub
mov
insl
call
addr16
fidivrs
stos
inc
mov
in
inc
cmc
je
jmp
lds
repz
lcall
sbb
out
out
xchg
cwtl
test
gs
movl
push
mov
xchg
jns
lahf
fnstcw
mov
outsb
xchg
stos
je
or
xor
xor
test
loop
or
adc
mov
inc
enter
jecxz
push
int
scas
call
dec
add
sub
or
dec
ror
push
gs
out
and
push
xlat
or
imul
icebp
lahf
shr
fisttps
fwait
cmp
inc
or
add
lcall
xchg
or
jb
xor
mov
lods
push
lods
stos
nop
push
mov
arpl
shrb
dec
test
out
cmc
push
clc
jae
adc
dec
pop
addr16
fcompl
fwait
outsl
pop
xchg
xchg
out
cmpsl
sub
cmp
adc
adc
popa
cmp
loopne
addb
test
mov
outsb
mov
inc
and
iret
sbb
xchg
pusha
popa
cmpsb
lret
and
and
pop
leave
aam
fildl
sahf
cmp
xchg
push
popf
lea
mov
sbb
sbb
xchg
xchg
fdivr
lea
lcall
data16
jmp
or
or
scas
mov
cmp
add
jnp
or
mov
popf
test
push
les
sbb
loop
sbb
cmpsb
inc
loopne
fisttps
aas
cmp
sbb
enter
fwait
mov
repnz
mov
mov
mov
shrl
notb
jp
xchg
mov
ret
xor
adcb
imul
mov
icebp
pusha
jg
out
mov
popf
clc
sub
mov
xor
cmp
fnsave
or
pop
insl
lods
lahf
xor
pop
mov
stc
xor
gs
pop
or
fsub
mov
jno
mov
pop
cs
sbb
shl
lret
or
pusha
adcb
into
inc
cmpsb
pop
fwait
cmp
repz
xchg
dec
jae
notl
clc
dec
addr16
mov
mov
sub
je
xchg
or
push
xchg
dec
push
or
dec
add
nop
popf
out
repnz
popa
fsubrp
inc
ss
cwtl
jge
movsl
xchg
outsb
sbb
movsb
inc
add
sbb
cmp
add
in
dec
dec
mov
add
cmpsb
xor
mov
testl
lea
iret
push
sub
pop
mov
popf
xchg
pop
lods
ljmp
cmc
test
dec
cmp
mov
pmaxsw
scas
mov
icebp
cmp
in
inc
fs
sbb
shrb
mov
dec
sti
add
loope
dec
cmpsb
jge
mov
clc
push
pop
or
arpl
push
lds
dec
add
xchg
adc
adc
nop
pop
rcl
loope
and
and
movsl
std
sub
lods
jl
push
adc
stos
cmp
mov
fwait
jne
sbb
jbe
div
ficomps
fdivs
or
dec
test
jl
movsl
rclb
or
jl
cmpsl
fwait
insb
cmp
add
nop
sahf
sub
xchg
sub
movhps
push
xor
pop
sub
mov
gs
outsb
sti
pop
subb
mov
das
shl
mov
stos
xchg
into
ljmp
int3
movsb
mov
test
shlb
repnz
test
dec
mov
xor
aad
loop
cmp
enter
lret
cld
cmpsl
jl
sbb
push
fs
add
jo
mov
repnz
jl
icebp
push
pop
inc
hlt
sub
push
in
pop
add
pop
push
xchg
inc
cmp
in
loope
ret
test
jl
outsb
pushf
mov
mov
loopne
push
adc
lea
lret
hlt
mov
mov
jle
adc
cmp
push
xchg
xchg
and
decl
and
sbb
adc
mov
jae
out
sub
enter
push
inc
aas
lods
mov
lods
jg
jl
aas
data16
or
jno
popa
xlat
mov
adc
sub
call
test
movsl
loopne
lea
mov
sub
out
pop
scas
adc
sahf
call
daa
inc
loope
in
adc
cmp
aad
lock
bound
xchg
lods
pop
sarb
mov
loopne,pn
cmp
call
aam
mov
add
mov
xchg
mov
fildll
xor
aaa
xor
lods
loop
nop
sbb
jo
mov
xor
push
mov
mov
push
dec
sub
imul
roll
cs
insb
adc
jb
lret
add
ficoml
stos
sbb
outsl
xchg
xchg
and
fnstsw
daa
sub
xchg
push
push
push
cltd
jle,pn
sub
jo
repz
jno,pt
mov
lcall
sarl
cmp
xor
fstp
push
push
cmc
mov
pushf
test
into
outsb
test
inc
add
ret
push
cmp
or
bt
cmpsb
das
cltd
xchg
xor
enter
enter
xchg
les
mov
mov
shll
and
in
or
jmp
jge
pop
pop
xlat
and
mov
push
mov
adc
cmp
adc
inc
sarb
nop
je
es
mov
mov
int3
in
jne
subl
adc
pop
ljmp
fcomip
sbb
addl
push
adc
sub
xor
fdiv
or
mov
pop
xchg
ret
cmp
mov
cli
pop
fildl
or
and
xchg
sbb
push
shl
test
cld
data16
repnz
arpl
lahf
pusha
xor
cli
bound
and
pop
fstl
xchg
lds
loop
dec
incl
rcrb
out
test
or
pop
push
pop
loopne
sub
test
mov
cmpsb
cli
aad
arpl
repz
add
int3
and
aad
rcrl
std
dec
call
push
pop
jge
xchg
cmp
int
mov
mov
cli
cmp
sti
mov
push
mov
pop
ficomps
cmp
fisubs
sbb
sub
push
shrl
aas
sbb
movsl
xchg
mov
loope
inc
int3
fldenv
je
jbe
testb
jl
repz
mov
repnz
mov
scas
mov
pushf
xchg
je
lret
jns
or
dec
mov
dec
push
ss
imul
mov
loopne
cli
pop
jp
inc
int
mov
pop
lret
cmp
movl
sub
push
jmp
pop
or
loopne
insl
insb
sahf
sbb
andb
jmp
inc
add
pop
arpl
cwtl
int3
mov
in
mov
fcompl
pop
jo
daa
adc
aas
inc
fnsave
dec
and
adc
pop
in
imul
add
fimuls
scas
lcall
sub
or
xchg
xchg
cltd
push
mov
in
es
dec
lock
cli
mov
leave
cmp
mov
cld
dec
fcompl
push
push
aaa
mov
repz
scas
dec
jl
clc
insb
cmp
aaa
adc
mov
push
pop
hlt
pop
xchg
pop
rorl
subl
sbb
jle
fcoml
push
mov
xchg
pop
fucomi
xchg
and
ja
and
pushf
lock
push
out
mov
pop
frstor
enter
test
jg
mov
and
enter
push
dec
imul
cmp
inc
fistpl
into
xchg
scas
mov
jle
int
inc
in
fdivrs
sub
int3
int
adc
clc
ljmp
xor
rorb
pop
mov
jno
fdivrp
inc
push
data16
js
push
cmp
sub
jmp
sti
ljmp
cmp
je
jno
and
mov
or
mov
fistpl
cmc
inc
adc
mov
std
jmp
dec
mov
dec
movsb
stc
lods
imul
jno
jecxz
es
sbb
xchg
xor
aam
xor
dec
les
in
lret
nop
push
aas
sub
inc
sub
aas
or
stos
cmpsb
jne
or
lret
or
ret
fisubrs
push
rclb
xchg
lcall
aam
pop
iret
loop
int
inc
mov
subb
jle
add
lahf
sbb
jmp
or
neg
adc
stc
scas
xchg
cmp
pop
bound
mov
adc
ret
jecxz
pop
dec
inc
test
sbbb
jbe
xchg
xor
mov
mov
loope
jg
xor
cmp
cmpsl
adc
fsts
nop
push
jle
shrl
lret
sti
push
xchg
or
gs
scas
shll
mov
pop
push
xchg
pop
sarb
mov
sub
cmpsb
sub
push
fdivrl
pusha
pop
fists
add
xor
mov
jns
mov
and
dec
ja
jno
shld
sbb
xor
mov
mov
xchg
sbb
lret
test
je
pusha
fsub
push
fdiv
mov
xchg
inc
inc
xchg
and
shll
adc
sbb
pushf
idivb
out
insb
mov
push
stc
pop
outsb
push
sbb
inc
int
test
mov
data16
loope
test
or
inc
mov
cmp
dec
ds
pop
adc
add
mov
push
lahf
pop
sub
mov
mov
sub
sbb
adc
xor
out
mov
mov
push
test
loope
int3
les
in
sbb
mov
test
cmp
xchg
hlt
jl
or
sbb
cmpsl
mov
fstl
jns
mov
add
sbb
loopne
sub
in
dec
lcall
jnp
mov
add
imul
dec
push
jne
add
mov
and
push
test
jl
sbb
push
nop
imul
or
cmpsl
and
and
adc
adc
sbb
push
fmuls
ret
add
int
lds
sahf
cmp
xlat
pop
mov
out
xchg
or
push
pop
jae
inc
ja
test
daa
fwait
lahf
add
out
and
mov
inc
xchg
cmp
loop
mov
js
and
push
repnz
pop
sub
mov
jg
mov
fs
add
outsb
lret
int3
in
bound
movsl
fsubrs
das
negb
mov
popa
add
sbb
jo
jl
leave
ljmp
loop
push
mov
mov
divb
jl
mov
insl
addr16
es
mov
jmp
out
insb
inc
lea
lock
dec
aam
mov
aad
fsubl
cs
lods
or
push
push
inc
mov
leave
mov
lret
fstps
add
mov
mov
pop
inc
test
pop
push
in
jp
popf
sarb
fs
imulb
cmpsb
mov
cmp
imul
lret
out
aad
sbb
adc
sbb
pushf
call
fnsave
out
mov
push
mov
fsub
addr16
das
mov
clc
stos
mov
aas
iret
sub
mov
xchg
ss
cmp
xchg
loopne
cmp
jl
ljmp
jecxz
push
popf
lods
in
insb
xchg
test
dec
mov
shl
push
and
or
cmpsl
addl
imul
aad
inc
dec
or
cmp
shll
icebp
enter
jge
and
or
imul
mov
jg
scas
sbb
or
mov
mov
jp
jmp
sub
stc
push
pop
xchg
cmp
mov
adc
lock
outsb
fs
dec
cltd
pop
movsb
fistpl
lcall
fsts
xchg
loopne
mov
lods
aad
pushl
cmp
or
outsl
stos
mov
sbb
adc
xchg
push
push
xchg
fisubs
jl
daa
fwait
adc
adc
sbb
cltd
sub
loope
inc
jle
sub
test
mov
movsl
mov
in
and
and
cmp
int
pop
shll
or
xchg
xor
out
iret
dec
pop
pushf
loop
add
pop
xor
lahf
jb
fidivrl
adcl
cmp
xlat
inc
push
gs
scas
mov
es
sarl
add
orl
fs
jno
rcll
cwtl
lea
pop
sub
mov
dec
outsl
repnz
sub
pop
or
call
push
cmp
or
jo
fldt
dec
in
popa
fisttpll
out
hlt
mov
jge
ss
adc
xor
mov
add
mov
jbe
dec
arpl
fists
xchg
jb
cwtl
ljmp
pop
push
jg
add
mov
lret
test
xchg
cmp
mov
add
adc
push
cmp
or
ss
jmp
scas
fcomps
lahf
ficomps
push
xchg
ret
push
cli
inc
shll
jmp
fucom
cltd
cmp
xor
dec
sahf
repz
inc
dec
or
int3
ljmp
xchg
and
sahf
stc
test
cwtl
testb
lock
lret
xor
inc
test
gs
sub
adcl
inc
jne
jno
iret
push
xchg
enter
jb
jmp
test
mov
roll
insl
jbe
pop
dec
jge
add
subl
jbe
icebp
inc
popa
test
xor
mov
xchg
lretw
mov
scas
loop
jmp
js
inc
adc
cmpsl
xlat
sub
cmpsb
or
stos
pop
adc
cmp
inc
inc
xlat
sbb
bound
repnz
lea
xor
lock
jge
insl
cmp
mov
out
lret
repnz
test
xchg
call
daa
js
jnp
mov
sub
inc
xor
fwait
sbb
push
push
sbbb
jmp
or
pop
sbb
xor
imull
pop
inc
push
inc
xor
test
and
test
enter
mov
call
cmp
andl
cmc
out
and
std
push
js
add
adc
dec
aam
add
mov
jns
adc
loopne
add
into
test
sub
dec
mov
sub
aam
mov
xchg
sarl
mov
out
ljmp
xchg
in
pop
mov
jg
in
sti
aam
push
pop
mov
cmp
inc
mov
das
jle
addr16
pop
lret
mov
inc
xchg
scas
inc
push
aad
lock
outsb
je
lret
pop
push
sbb
std
in
daa
jp
xchg
ljmp
xchg
mov
mov
in
fstl
push
loope
xrelease
repz
out
stos
sub
dec
pop
push
mov
test
inc
pop
sbb
xchg
xor
adc
idivb
das
fdivl
push
jge
push
pop
out
std
fcmove
icebp
pop
or
mov
fdivrs
jmp
nop
data16
inc
jns
inc
test
jb
test
mov
push
xor
jns
daa
adc
into
add
fisttps
lret
cmpsl
scas
fsubr
adcl
xchg
mov
icebp
js
cmp
push
arpl
dec
aam
pop
lea
fs
pop
repz
mov
mov
xor
pop
pop
fcoms
dec
jnp
mov
add
loope
ds
scas
movsl
jo
push
jnp
and
cmpb
stc
xchg
aaa
aad
add
in
push
pop
pop
inc
int3
lds
leave
pop
push
jmp
fdivrs
ret
shlb
negl
pushf
hlt
add
mov
imul
out
sbb
popf
sub
test
loopne
push
jle
mulb
iret
pusha
sub
jae
and
pop
aad
data16
testl
and
inc
mov
cld
insl
jno
out
cld
adc
xor
push
adcb
jb
push
lea
mov
jecxz
test
xor
fisttps
mov
fwait
sbb
xchg
insb
cld
adc
adc
imul
mov
dec
inc
inc
sbb
scas
xor
sbb
sub
divl
insb
stos
add
adc
fstl
xchg
out
loop
out
test
dec
xchg
push
ljmp
aaa
push
inc
nop
mov
dec
cmp
loope
mov
sbb
in
mov
aad
mov
jb
scas
cmp
stc
xlat
adc
out
xor
iret
sub
shlb
test
cmpsl
cmp
add
mov
int3
or
sub
add
cmpsl
outsl
mov
push
ds
fdivrl
fnsetpm(287
mov
inc
sub
ret
fs
nop
outsl
ja
idivl
or
mov
or
idivb
ror
jp
inc
mov
fsubrs
cmp
inc
or
sti
loope
iret
imul
sbb
mov
les
loop
jnp
repnz
ja
lods
pop
repnz
adc
mov
sti
pop
fbstp
out
daa
leave
add
insl
fnstenv
push
ret
test
jae
xchg
lods
movsl
ja
dec
ror
mov
leave
aam
mov
pop
or
sub
mov
mov
sub
f2xm1
outsb
scas
mov
les
into
push
bound
shl
mov
xor
inc
sub
cmp
and
and
repz
add
sub
jo
push
mov
jp
je
fdivs
in
xchg
jno
push
movsb
add
jg
jmp
es
popf
aas
xor
mov
add
pop
inc
int
iret
daa
mov
and
movlps
jbe
xor
cmp
jbe
inc
mov
xor
cli
jg
and
mov
xlat
sbb
pop
ja
inc
fcmovu
cmp
sarb
jns
and
aaa
add
cmpsb
inc
popf
sar
xor
aaa
shl
xchg
ret
notl
rcrl
clc
aad
ret
arpl
div
sub
and
bnd
xor
sbb
mov
std
sub
out
cmpsb
inc
je
inc
or
rol
mov
push
cwtl
ss
xchg
push
int
hlt
adc
scas
lret
add
xor
cmp
jbe
and
pop
scas
adc
popf
popf
std
lea
mov
sbb
xor
movsb
out
cld
stc
fistps
mov
lds
cmp
xchg
pop
je
iret
test
adc
sahf
add
sub
dec
movsb
jmp
mov
out
pop
pop
lret
xchg
sbb
ret
int
std
icebp
imul
push
call
dec
sub
bound
mov
loop
andb
adc
adc
mov
push
addr16
ja
xor
dec
add
pop
nop
adc
dec
push
test
xor
dec
adc
jb
lds
iret
icebp
sub
int
mov
pusha
jne
xchg
dec
mov
mov
int
sub
adc
mov
pusha
xchg
outsb
aaa
es
mov
cmp
imul
fwait
jnp
xchg
push
sbb
outsb
sahf
mov
ja
sbb
aam
pop
mov
mov
jns
aad
cs
xor
xlat
lret
jmp
aad
clc
fwait
adcl
int3
push
insl
pop
jg
pushl
mov
sub
jp
xlat
jmp
inc
cwtl
and
mov
test
xchg
mov
outsl
xchg
pop
out
jb
rolb
and
dec
push
leave
es
sbb
std
loope
cs
addr16
jge
xchg
lds
cmc
fucom
das
mov
pop
mov
movsl
loopne
nop
jnp
out
cmp
xor
mov
adc
push
sahf
dec
insl
mov
mov
scas
cs
repnz
hlt
push
mov
mov
or
in
and
aaa
adc
add
adc
stos
fwait
cmpsb
mov
pop
nop
jg
sarl
pusha
push
sub
push
sub
or
scas
xchg
dec
stos
add
lcall
scas
movsb
xchg
xchg
sbb
aas
ret
shrb
sbb
add
leave
push
adc
lea
leave
ja
data16
shll
test
iret
jl
jae
scas
insl
loop
in
push
negl
or
push
pop
mov
xor
xchg
push
lret
aas
outsl
mov
mov
sar
int3
sbb
les
fwait
sbbl
ljmp
outsw
outsl
jecxz
nop
mov
pop
in
lahf
ret
mov
jae
dec
xchg
cmpsl
movsb
and
imul
add
imul
mov
or
aam
mov
inc
jle
xor
pop
js
xor
push
jne
xor
je
loopne
push
jb
inc
adc
movsb
test
mov
mov
movl
fidivrs
outsl
pop
mov
lea
ja
repnz
sbb
out
jl
xor
xchg
jge
enter
mov
lods
push
scas
scas
push
and
or
xor
inc
mov
out
jbe
xor
pop
imulb
mov
mov
fimull
dec
and
add
jb
pop
pop
xor
mov
sbb
shll
dec
out
xor
rorl
insb
daa
or
mov
jo
sub
xor
in
pop
mov
pop
divl
cmc
test
mov
fstpt
xchg
sbb
push
out
push
daa
mov
jbe
or
mov
push
arpl
ja
mov
lock
push
pop
pop
or
shrl
sub
jne
loopne
jns
cli
inc
dec
cmpsb
stos
jl
cmpsb
clc
insl
pop
fisttpl
lret
pop
aaa
jmp
mov
jae
outsl
cmpsl
bnd
std
sub
subl
adc
enter
dec
addr16
pop
jg
and
or
adc
pop
int3
shlb
aam
fcmovnb
and
imulb
rorb
test
cmp
xchg
sahf
clc
rorl
lahf
xor
and
inc
out
arpl
ss
mov
xchg
pop
inc
mov
clc
mov
aaa
dec
fwait
adc
outsl
ds
insb
aad
lret
lea
and
mov
dec
sarb
push
or
mov
push
ret
stc
lock
aad
add
push
xor
loope
jge
sub
loop
rorl
xor
jmp
jnp
add
faddl
jle
jge
pop
or
mov
xchg
js
dec
data16
iret
mov
insb
cmp
jo
mov
nop
dec
mov
clc
neg
or
shll
lods
sbb
pop
fstl
add
incb
dec
push
jne
adc
mov
jmp
push
or
mulb
push
dec
inc
ret
pusha
xor
lret
outsb
scas
mov
sti
outsb
stos
call
lods
xchg
and
cli
push
in
and
mov
sub
jmp
cmpsb
pop
das
lods
loop
xor
dec
arpl
xor
mov
adc
jg
cmp
or
cmpsb
insb
insl
fwait
addb
mulb
insl
sub
push
les
mov
lret
mov
cmp
test
iret
pop
mov
push
je
adc
mov
popa
rcrl
mov
cltd
pop
lret
adc
xchg
xor
insl
test
aas
fwait
movsb
push
xor
dec
ja
fwait
sbb
xchg
mov
scas
daa
add
adc
in
scas
jae
add
pop
or
or
jo
pop
pop
rcrb
xlat
pop
jns
mov
add
in
sbb
outsl
iret
sub
sbb
and
xor
cmp
les
cmp
mov
lcall
adc
or
mov
jge
stos
mov
adc
mov
push
jle
adc
call
pop
pop
xchg
out
je
or
add
sbb
push
dec
mov
aaa
xor
gs
or
cwtl
cmpsb
fstps
mov
les
out
shrl
es
push
xchg
cltd
popl
lea
decl
test
mov
ret
sub
loop
jnp
jecxz
cwtl
xchg
jecxz
cltd
pop
mov
inc
jbe
sbbb
movsl
lret
fidivrl
mov
xor
or
sub
push
jl
cwtl
stos
cmp
rolb
or
mov
sbb
rorb
out
jmp
mov
in
or
lods
sbb
rclb
rolb
sub
in
add
xchg
xor
ja
cmpsb
jo
fsubrs
data16
mov
xlat
out
add
ljmp
add
dec
push
push
xchg
lock
xor
and
lea
sbb
dec
es
lock
push
icebp
sbb
add
and
test
pop
sub
cli
mov
lret
ss
in
aam
imul
fsub
enter
push
nop
mov
lods
test
icebp
shrd
ds
pop
pop
and
sub
push
test
lahf
data16
jbe
jmp
xchg
xor
fmuls
popf
mov
mov
outsl
sbb
lea
dec
call
out
test
jbe
andl
push
and
xlat
adc
mov
bound
inc
or
inc
jne
je
cli
jmp
or
aad
xchg
xchg
in
xor
push
insb
int
shrb
xchg
enter
bound
jb
dec
sahf
out
adc
mov
fisttps
lret
mov
add
fcompl
jae
ja
mov
mov
loope
mov
into
data16
dec
in
mov
cmp
test
aas
xor
mov
les
or
sub
addps
out
nop
push
cmp
jmp
stos
dec
repz
das
mov
push
cmp
ds
and
mov
repz
mov
out
sbb
push
addr16
lahf
cmc
cltd
pop
sub
pop
dec
sbb
mull
outsl
sbb
pop
enter
popf
iret
out
stos
leave
xchg
test
movsl
mov
xchg
gs
test
sbb
pop
cmp
lods
mov
mov
daa
test
popa
ljmp
xor
jae
mov
and
push
or
dec
xor
sub
test
in
repz
or
loop
in
mov
jge
sub
xchg
imul
out
and
mov
mov
or
lods
clc
cmp
loope
dec
sbb
mov
lds
or
subw
push
aam
sbb
xchg
lret
mov
testl
dec
pusha
sbb
push
push
test
xchg
stos
jg
sarb
rcrl
push
jae
popf
adc
cmc
add
fdivp
mov
jns
cmp
cmp
imul
and
cmpl
inc
into
dec
or
inc
dec
jmp
pop
sbb
fimuls
orb
cmp
in
or
jle
push
insl
sbb
enter
mov
test
push
and
push
arpl
outsl
insl
ss
fsubl
xor
sahf
cmp
cmpsb
dec
jp
jae
nop
stos
mov
xlat
mov
push
or
or
jmp
xchg
js
enter
mov
aam
cmc
outsl
pop
scas
inc
leave
cmc
negb
or
add
adc
mov
mov
rol
pop
dec
mov
inc
sub
test
jmp
dec
mov
push
test
mov
out
jo
adc
ljmp
in
not
mov
adc
cld
in
jg
sbb
in
shlb
mov
scas
cltd
fdivrl
stos
ror
jmp
in
jns
push
imulb
pop
mov
js
add
xor
mov
mov
test
enter
inc
test
fstpl
or
hlt
xchg
aaa
pop
out
mov
bound
hlt
pop
xchg
clc
and
aaa
adc
xor
jbe
sub
movsl
ss
mov
push
push
push
inc
xchg
mov
sti
test
mov
adc
in
ret
outsl
icebp
in
les
insb
sbb
pop
mov
mov
test
jb
sbb
pop
lods
popf
xor
mov
adc
fdivrl
jmp
pop
sbb
hlt
movsl
std
jp
lock
push
sub
jge
gs
push
or
fmulp
cltd
lcall
inc
in
xchg
inc
xchg
push
notb
orl
sahf
test
mov
rcrb
outsb
pop
loopne
mov
mov
mov
insb
push
ja
ret
and
scas
out
test
xchg
inc
je
repnz
loop
lret
pop
sbb
xlat
js
mov
inc
push
pop
clc
sub
imul
push
dec
outsl
es
mov
mov
and
jmp
mov
cmp
pop
cs
fisubrs
out
stos
fsubr
cmpsl
sahf
and
imul
xchg
pop
inc
std
xchg
je
jp
jo
dec
cmpsb
std
aam
mov
push
cmp
lock
mov
icebp
mov
or
addl
sahf
ret
test
aad
hlt
subb
je
sahf
adc
adc
xor
clc
arpl
jb
aaa
add
jle
mov
leave
sti
and
out
dec
dec
mov
das
push
lock
ficompl
cmp
fcmovnb
push
lahf
out
lret
ret
int
adc
fsubs
mov
daa
mov
jl
jno
inc
mov
mov
mov
hlt
jno
rorb
cli
les
jb
aaa
push
ret
clc
lahf
push
push
cwtl
pop
inc
sbb
loop
imul
ret
inc
mov
ljmp
popa
fldl
jmp
xor
xchg
cmpsb
scas
ss
cwtl
jmp
in
inc
or
je,pt
loop
pop
roll
sbb
jmp
ret
mov
mov
pop
pop
scas
int3
fstpl
mov
jne
into
add
jg
clc
xlat
and
pushl
outsb
push
or
add
jge
daa
adc
add
sahf
sti
sarl
ret
ja
out
mov
std
sub
mov
cmpsb
hlt
add
repz
sub
mov
adc
in
xchg
das
add
cmp
xchg
adc
lock
push
test
test
ja
rorl
pusha
mov
cld
das
call
inc
inc
pop
cld
movsb
cmpsb
ret
dec
xchg
inc
lods
rcl
xor
repz
xchg
cld
and
sarl
cmpsb
int
jp
cmp
xchg
rcll
outsl
mov
bound
xor
jne
push
cmp
insb
cmp
push
inc
sub
xor
xor
popf
and
xchg
rcll
jp
or
jb
mov
outsl
popf
in
ret
insb
cmp
and
xor
daa
pop
adc
mov
mov
cmp
mov
adc
lds
cmp
push
pop
imul
test
sub
pop
mov
loope
mov
sub
push
adc
jle
xor
nop
mov
or
pop
jae
mov
or
add
lcall
mov
int
das
xor
push
das
std
or
mov
aam
dec
stc
sbb
inc
pop
and
addr16
je
push
push
iret
add
ficompl
jns
js
clc
mov
add
dec
test
add
sbb
repz
jo
mov
subl
jae
hlt
mov
les
insl
out
and
sbb
sahf
nop
aam
call
sbb
das
xor
inc
aas
dec
lods
mov
dec
mov
out
cmpb
xchg
inc
popa
cmp
mov
ret
mov
push
jge
push
xor
out
fdivl
int3
cmp
sbb
mov
fadd
inc
sub
cmpsb
or
mov
inc
fwait
scas
in
pop
push
mov
or
enter
mov
add
sub
sbb
xchg
lret
in
cmp
pop
fadds
dec
push
ret
in
popa
pushf
cmp
sahf
fcoml
xchg
das
xor
xor
mov
mov
out
inc
push
pushf
fdiv
mov
cmc
xchg
jge
or
lahf
pop
push
repz
or
test
lahf
mov
mov
add
gs
fucomi
cmp
in
addr16
shlb
enter
cmp
jne
dec
addr16
das
out
mov
scas
sysexit
movsl
rcr
imul
mov
mov
jb
call
mov
ret
xchg
sub
enter
pushf
leave
xchg
mov
lret
and
jmp
and
pushf
mov
jb
jne
hlt
xor
fsub
or
sub
rcr
push
inc
jae
mov
fistps
popa
jne
mov
pop
cmpb
je
xor
ds
bound
add
or
loopne
cmpl
xchg
mov
or
xchg
mov
clc
ljmp
test
lret
dec
adc
imul
addr16
stos
or
ja
and
repz
into
jmp
shl
mov
mov
pushf
lret
mov
out
pop
in
jno
es
inc
add
imul
insb
push
xor
daa
test
xor
adc
addr16
test
sbb
pushf
inc
inc
jnp
xchg
sub
sub
add
dec
jb
arpl
insl
hlt
test
lods
sub
jg
scas
ffree
js
mov
mov
xchg
xchg
repnz
jo
jge
inc
sbb
test
jle
pop
sbb
xchg
inc
push
cltd
shl
add
xchg
or
test
addr16
lea
sti
mov
cmpsb
imulb
jmp
movsb
inc
jge
jns
ficomps
loop
shll
ret
aam
and
enter
mov
cltd
shr
mov
pop
shr
test
mov
mov
jo
and
mov
ja
mov
pop
push
or
lret
dec
ret
xor
movb
xor
das
mov
mov
ficoms
fidivl
iret
cmc
das
jno
mov
mov
idivb
sub
int
and
pop
inc
mov
add
adc
dec
adc
lret
rcrb
stc
push
insl
fldl
pop
mov
pop
neg
dec
cmp
in
jg
js
lods
xchg
jl
ljmp
sti
jmp
sbb
aam
sti
cs
add
mov
pusha
lods
push
mov
xor
pop
scas
int
out
pop
ss
push
push
in
adc
pop
gs
or
fistpll
mov
and
jae
mov
mov
sbb
add
insb
jne
mov
mov
test
xchg
fwait
jae
outsl
jno
std
lea
adc
mov
cmp
iret
mov
xchg
movsbl
sbb
adc
inc
add
leave
jmp
out
mov
add
add
clc
jp
fwait
scas
sbb
xor
pop
push
flds
insb
aad
out
dec
jmp
mov
inc
mov
in
into
add
insb
loop
xchg
mov
dec
lahf
or
outsl
in
rcrb
rcr
jmp
stos
adc
push
xor
mov
imul
pop
test
ret
xchg
dec
fildll
inc
fbld
mov
add
adc
add
in
lea
stos
mov
pop
jb
shrl
into
hlt
pop
jle
jp
orb
push
adc
fisubs
lods
or
dec
roll
mov
leave
std
xor
sahf
leave
mov
test
xor
stos
rorl
es
add
arpl
xchg
xchg
cmc
sbb
push
push
icebp
mov
push
cmpsb
sahf
adc
loop
loope
stc
sub
adc
es
or
cwtl
lcall
adc
data16
mov
push
cmp
aaa
call
push
iret
scas
out
adc
jbe
cmp
imul
dec
fmuls
pushf
out
xor
pop
cmp
outsb
adc
aas
or
je
mov
ffree
dec
sbbl
fwait
negb
repz
cli
sbb
mov
subb
add
js
xchg
call
jg
int3
int
inc
or
pop
lods
ficompl
mov
imul
call
aas
je
sub
cmp
mov
sbb
mov
iret
out
or
jnp
inc
in
hlt
jb
mov
das
notl
jmp
imul
imul
lods
mov
cli
pop
push
dec
int
or
daa
jp
cmc
dec
pop
adcl
in
and
push
and
sbb
xchg
mov
pop
call
in
adc
mov
mov
dec
jmp
out
jle
adc
sub
in
xchg
stos
nop
loop
inc
xchg
and
mov
or
jne
gs
fs
fs
je
into
add
in
aas
ljmp
scas
inc
lcall
inc
popf
jp
or
das
xor
data16
fistl
loope
jecxz
lods
out
dec
pop
xchg
ljmp
dec
sarl
imul
pop
jae
pop
fiadds
jne
addb
push
sar
or
xchg
adc
mov
cmpsl
lret
pop
sbb
fstp
mov
mov
adc
jne
push
call
shll
lods
loopne
scas
outsb
sbb
and
add
jmp
outsl
lret
sub
push
imul
pop
sti
jbe
push
xchg
orb
lods
xor
sahf
mov
adc
xor
and
rclb
cwtl
ljmp
jg
push
insb
xchg
push
ss
add
hlt
sahf
mov
mov
aad
xor
push
inc
leave
sbb
xchg
daa
jns
aas
cmp
lret
loopne
jbe
leave
inc
push
dec
or
or
daa
adc
xchg
xor
xor
mov
insl
sti
sti
rcrb
loopne
lcall
mov
lahf
nop
icebp
mov
adc
xlat
stos
out
sar
pusha
sbb
lcall
in
cmp
icebp
mov
leave
sub
xchg
out
ficoms
dec
mov
cmpps
cld
les
xchg
sbb
mov
lods
push
lods
inc
add
pop
fs
les
pop
cmp
fsts
lret
jbe
in
pop
jno
cmp
sbb
xlat
clc
mov
mov
add
xchg
sub
imul
sbb
adc
shll
icebp
rclb
das
aas
mov
rorl
mov
aas
and
sbb
push
stos
push
mov
jno
push
dec
lcall
pop
dec
fsubl
adc
mov
stos
and
faddl
ljmp
leave
pop
test
and
cmp
daa
aaa
push
popf
sub
neg
les
cli
cmp
sub
nop
xchg
push
cmp
mov
mov
or
arpl
adc
stos
sarb
mov
gs
mov
mov
adc
icebp
xor
faddp
cltd
xor
lret
inc
inc
push
inc
lods
call
and
out
mov
mov
adc
test
bound
imul
sti
mov
mov
xor
sbbb
loop
adc
fmuls
xchg
call
adc
insl
xchg
outsl
pop
mov
in
xor
sahf
lods
mov
lcall
ret
and
pushf
pusha
inc
dec
cmp
mov
or
pavgw
mov
mov
sbb
pop
push
push
jno,pn
push
pop
cld
mov
mov
fildl
out
xor
jl
cltd
or
mov
addr16
sbb
icebp
adc
xor
inc
mov
les
stos
push
das
fists
stos
jecxz
shll
jae
jmp
clc
add
lahf
jnp
std
sub
adc
sbb
repz
push
negl
fistps
xor
call
cltd
sub
or
add
arpl
or
lret
push
out
ljmp
addr16
jno
sbb
aas
mov
cmp
and
mov
pop
pushf
jne
stc
dec
das
push
in
or
popf
fs
jb
xor
ja
jecxz
mov
shl
mov
stos
cmp
outsl
rolb
aad
iret
or
cmpsb
sahf
enter
and
clc
mov
push
push
notb
arpl
cwtl
les
dec
inc
jl
push
xor
test
add
mov
xchg
sbb
mov
andl
sbbb
lods
test
inc
add
fcmovne
clc
test
sbb
mov
pop
insl
pop
pop
inc
frstor
cmpsl
jbe
out
sbbl
or
add
loop
mov
push
mov
arpl
xor
in
iret
dec
pop
pop
adc
fsubrs
xchg
lock
jnp
inc
insl
inc
lahf
xlat
int3
jne
inc
push
pop
lret
cmp
outsb
cld
movsl
loope
xchg
ss
mov
or
and
xor
jmp
cwtl
add
mov
xchg
add
arpl
mov
push
inc
push
dec
lahf
sbb
push
loope
or
jecxz
pop
dec
sbb
mov
lret
dec
cmp
popf
mov
add
jo
data16
and
fcmove
fistps
es
adc
hlt
push
pop
pop
int
aas
pop
lcall
dec
xchg
cmp
adc
dec
push
inc
movsb
sub
and
lods
push
into
mov
mov
jno
mov
pop
rorl
test
xchg
call
or
xchg
daa
mov
add
pop
stc
push
mov
out
out
fdivl
mov
outsb
ljmp
jg
mov
pushf
sbb
inc
into
mov
cmpsb
pop
cmpsl
adc
sub
sbb
cmp
popf
or
push
pop
addr16
inc
out
sar
inc
iret
dec
repnz
test
jbe
inc
cmpsl
jg
pop
int
stos
add
mov
aas
jo
das
cmp
dec
or
ds
fdivs
lock
adc
xchg
xor
xor
call
mov
xchg
fs
pop
dec
pop
dec
xchg
insb
mov
dec
cli
decl
dec
xor
mov
mov
and
pop
insb
lret
addr16
push
mov
sti
sahf
adc
mov
push
pop
xchg
testl
jne
dec
pop
xlat
pop
stc
dec
lods
in
mov
pop
mov
jl
fnstsw
rcll
addb
shll
int3
pop
mov
gs
das
pop
gs
mov
adc
popf
js
fs
inc
xchg
daa
push
stos
lret
adc
cmp
in
out
sbb
jle
push
icebp
das
cmpsl
scas
stos
std
scas
xchg
pop
dec
out
mov
aam
fldenv
cmc
orb
cmpsb
xchg
mov
or
jmp
adc
push
inc
push
mov
sub
push
push
inc
repz
mov
das
dec
xchg
fisubl
mov
jns
xor
cmpsb
push
push
inc
gs
jns
stc
cmp
cmpsl
std
adcb
daa
out
js
aad
call
jl
or
in
pop
lcall
fiaddl
xor
insl
adc
pop
pop
js
iret
pusha
hlt
fstps
mov
adc
sahf
mov
rcll
mov
aaa
add
push
aad
adc
mov
sub
test
mov
int3
xor
pop
cmpsl
sbb
push
add
lcall
mov
mov
push
fisubl
jo
mov
pop
adc
std
pop
inc
dec
rcrb
cmp
adc
vmwrite
imul
xchg
je
out
sub
dec
aad
xchg
dec
stos
adc
pop
call
push
cmp
mov
sbbb
lods
gs
mov
movsl
mov
pusha
data16
dec
add
cmp
out
or
mov
movsb
adc
and
stos
lea
std
dec
insb
push
aaa
jge
mov
cmp
sahf
fndisi(8087
xchg
adc
out
lret
sarb
loop
mov
fstl
lods
test
adc
ljmp
xchg
in
bound
scas
push
push
sbb
mov
fstpl
pop
adc
dec
in
cmp
js
pop
call
xchg
inc
cmp
mov
and
sbb
ds
jp
loopne
or
mov
xor
fstpl
inc
leave
outsl
and
ja
dec
es
xchg
cmc
dec
mov
add
out
hlt
scas
in
push
test
lahf
push
cld
jle
pop
cmp
sub
movsb
mov
inc
or
gs
mov
cmp
inc
pop
dec
add
test
add
gs
or
fistl
jno
daa
sub
daa
dec
iret
in
add
xor
cmp
es
xchg
push
dec
dec
repz
inc
xchg
pop
or
jo
inc
shl
and
in
aas
pop
iret
fucomi
sub
inc
dec
loop
cld
push
mov
int
xchg
or
inc
mov
rorb
xor
push
mov
fistpl
and
scas
sub
mov
dec
shrl
fwait
and
lahf
ss
lea
outsl
das
arpl
sbb
mov
push
push
mov
or
arpl
dec
jl
mov
pop
shl
push
xor
jp
xor
fists
imul
mov
in
ret
xchg
mov
fs
je
stos
das
pop
sahf
pop
popa
dec
sub
jnp
xchg
mov
xchg
pop
inc
ja
inc
jnp
rorl
and
fmull
ljmp
mov
mov
out
lcall
pop
call
test
sub
dec
lds
pop
and
sub
push
pop
and
repnz
aam
ds
ds
lds
jnp
dec
push
bound
pop
dec
push
ds
or
jb
out
mov
mov
paddusb
inc
std
jne
js
sub
adcl
filds
hlt
mov
xchg
ss
mov
outsb
lret
dec
xchg
ds
mov
pop
outsb
out
jg
movsb
mov
mov
shl
xchg
iret
mov
pop
xchg
in
inc
out
test
cmp
jae
push
ret
mov
mov
int
lret
mov
bound
xchg
pop
es
icebp
insb
je
stc
jnp
mov
dec
jno
jbe
and
pop
push
mov
sub
mov
fstps
mov
cmpsb
xchg
lret
es
out
push
loopne
or
sbb
adc
lods
sbb
push
pusha
jnp
mov
xchg
xchg
data16
cmp
lcall
push
pop
mov
xchg
or
stos
fs
daa
int3
adc
addl
lods
mov
jle
dec
cmp
test
out
or
dec
mov
xor
sti
xor
xor
bound
pop
push
mov
pop
out
lds
cld
pop
sub
lcall
mov
enter
sub
xchg
sub
lcall
mov
sbb
cmpsb
sbb
xor
bound
jo
imul
jno
mov
addb
into
push
cmc
jle
in
push
xchg
divl
outsl
stos
int
sub
pop
and
sbb
shlb
push
insl
pop
out
cmp
fdivrl
push
xchg
js
call
dec
in
push
mov
aaa
jle
sbb
inc
jl
scas
jb
sbb
mov
pushf
mov
lcall
scas
jle
pop
inc
push
cmpsb
jl
movsb
test
daa
mov
imul
pop
int
inc
ss
cwtl
add
jg
jp
rorb
in
in
icebp
cwtl
stc
andb
daa
movsl
mov
pop
cmpsb
pop
pop
or
xor
dec
mov
sbbb
mov
push
push
insb
divl
int3
call
inc
lret
sub
cmp
mov
in
add
xor
dec
ret
xchg
cmp
jge
jle
push
aas
inc
outsb
pop
stc
data16
xor
cmpl
xchg
xor
adc
mov
jge
leave
in
cli
aam
lret
cmp
pop
lret
out
jg
bound
sbbl
push
xlat
dec
jg
inc
nop
push
mov
inc
mov
sbb
sahf
push
ret
fstl
fwait
repnz
inc
sti
les
push
hlt
xchg
loope
adc
fs
fsubl
cmpl
push
add
lods
daa
mov
sbb
mov
dec
ja
iret
mov
add
imul
dec
repnz
sub
pusha
insl
jo
mov
sub
jg
mov
test
sub
ja
cwtl
clc
das
roll
in
mov
mov
xchg
das
outsl
jp
mov
jnp
push
cmpsl
inc
mov
pop
add
mov
out
sbb
ja
jmp
out
ret
fldenv
push
jnp
orl
ljmp
mov
int3
pusha
cltd
adc
sbb
data16
xor
inc
cpuid
mov
movsb
ss
jo
mov
sti
loopne
or
daa
push
std
push
les
adc
insl
in
adc
clc
mov
ss
mov
mov
hlt
dec
daa
pusha
sub
pop
dec
push
pop
lahf
in
or
iret
inc
test
pop
nop
xor
fildll
les
mov
out
popf
jmp
int
push
sahf
adc
fistpll
add
sub
stos
bound
cwtl
mov
inc
xchg
xor
dec
lcall
or
cmpsb
pop
aam
dec
inc
test
xchg
cmpsl
jns
mov
push
mov
sub
mov
divl
movsb
lret
sub
fdivl
sbbl
ljmp
fcomp
or
and
stos
pop
sbb
inc
jmp
sub
jge
mov
dec
mov
sbb
lock
vcomiss
icebp
dec
cwtl
mov
mov
cwtl
push
in
cld
dec
bound
iret
cmp
dec
xor
dec
jns
sbb
dec
rcrl
lods
movsb
sub
lds
cs
les
insb
fsubrs
stc
fsubs
mov
jge
loop
push
sbb
fcmovne
fcmovu
xchg
orl
aaa
push
lret
mov
fistl
cwtl
negl
add
push
addr16
lret
repnz
insl
xor
in
xor
push
enter
xorl
incb
cmpsl
pusha
inc
push
xlat
add
pop
add
enter
sbb
pop
jno
inc
js
mov
push
clc
sbb
lahf
repnz
adc
push
mov
push
and
mov
stos
add
stc
mov
mov
jns
add
mov
into
mov
pop
or
mov
test
fwait
cmc
xchg
icebp
mov
pop
ds
pop
cmp
jmp
sti
cwtl
lock
lret
sbb
andl
shl
fcomps
es
pop
add
out
ss
push
loop
neg
cmp
out
mov
imul
mov
leave
test
daa
push
xor
ja
stos
jmp
or
ret
mov
lcall
sbb
and
fstpl
out
int3
popf
in
dec
call
test
popf
push
subl
test
xchg
push
sub
cmp
idivl
lock
push
aam
or
inc
inc
scas
inc
iret
cmp
cli
inc
stc
pusha
dec
dec
je
dec
test
pop
xchg
dec
adc
xor
shrb
fcmovu
inc
es
xchg
lock
out
push
popl
jns
test
and
sbb
mov
ja
lret
sub
rol
mov
mov
inc
adc
in
mov
pop
push
dec
dec
mov
inc
mov
loopne
mov
sub
jnp
test
testl
cmp
faddp
imul
jbe
push
dec
pushf
xchg
ret
jle
adc
push
xor
mov
xor
xor
repnz
xor
fdivs
bound
mov
movsb
popa
sub
mov
subl
icebp
in
notl
mov
sub
hlt
mov
scas
aad
ljmp
pushf
repnz
icebp
and
xor
into
daa
jno
outsb
fwait
cmpsb
adc
fidivs
mov
aaa
ret
xchg
sbb
push
push
in
push
int3
stos
jo
nop
lock
rol
push
jbe
mov
cmp
dec
mov
sahf
jnp
sub
fmull
pop
cmc
pop
dec
test
xchg
xor
adc
stos
mov
jmp
pop
stos
mov
cltd
add
xor
sbb
sub
ret
in
shr
dec
insb
add
push
addr16
jno
int
clc
jb
and
ds
sar
inc
xchg
adc
gs
sbb
int
dec
mov
mov
pop
in
test
xor
add
add
inc
inc
inc
inc
out
jnp
hlt
jp
mov
mov
mov
jb
or
dec
lods
inc
loop
das
jb
loop
inc
mov
icebp
push
inc
movl
jno
insb
insb
pushf
adc
sti
es
mov
fstpt
insb
into
dec
inc
bswap
push
mov
popa
adc
mov
push
dec
repnz
repz
dec
and
fstp
jmp
jb
or
sbb
loopne
imul
out
test
arpl
fsubrl
ss
stos
xor
aam
mov
ja
addb
pusha
int3
inc
fwait
lcall
lea
cmp
lahf
pop
daa
out
mov
sbb
std
jb
insl
fists
dec
jns
shrl
mov
enter
dec
mov
lea
or
and
dec
jmp
xchg
bswap
repnz
add
sub
sub
out
adc
xchg
xor
mov
cwtl
imul
insl
orb
imul
test
orl
fmull
addb
repnz
pop
jnp
aam
lret
sti
sub
mov
cld
and
and
jns
clc
int3
adc
jecxz
push
dec
mov
je
xchg
outsb
lret
xchg
mov
out
insb
rcl
inc
ret
sbb
xor
push
shll
and
jbe
stos
call
mov
into
push
loopne
in
cmpsb
test
inc
xchg
and
push
cmp
push
sub
jp
push
jp
imul
ds
mov
mov
pushf
dec
mov
xchg
inc
imul
mov
sti
or
cs
adc
rorb
loope
out
jecxz
in
imull
fisubs
jae
jl
data16
sub
dec
push
sub
lds
int3
cmp
adc
jle
icebp
mov
adc
pop
sbb
fistpl
dec
js
lcall
push
sbb
fidivrl
adc
cwtl
mov
sti
aam
out
pop
addl
push
xchg
daa
daa
pop
dec
data16
inc
mov
xchg
js
mov
or
ja
in
ljmp
fcmovne
push
hlt
mov
push
mov
test
test
in
test
jns
mov
mov
sub
mov
inc
int3
inc
test
jmp
cli
and
lahf
mov
ja
mov
add
adcl
cmp
add
or
fstl
test
nop
insl
push
call
les
jmp
fs
cmp
add
mov
mov
cmp
sbb
pop
xor
int3
inc
call
jle
leave
mov
jp
outsb
xlat
push
and
stos
lahf
inc
into
or
xchg
push
gs
ficoms
sbb
xor
call
mov
mov
and
mov
lret
mov
lea
or
mov
jnp
and
inc
movsl
dec
and
cmc
mov
and
movsl
cmc
aas
or
pop
clc
scas
xchg
push
insb
push
inc
sbb
push
dec
iret
push
sbb
mov
mov
fdiv
inc
clc
pop
adc
push
or
fs
ljmp
iret
shr
lcall
fxch
rcll
lea
in
inc
lea
mov
xor
fwait
and
femms
sub
bound
sub
inc
dec
adc
and
mov
fldl
mov
imul
pop
push
pop
es
mov
dec
mov
jle
mov
fcomi
adc
fld
addr16
imul
lahf
xor
std
rorl
xchg
push
push
lahf
xor
dec
push
into
cmp
imul
nop
add
jns
mov
repnz
mov
cld
iret
shrl
mov
in
enter
insl
mov
fists
fists
jo
lcall
push
xchg
insl
sub
addr16
xchg
xchg
int
shll
mov
insb
sbb
lds
loope
inc
mov
loop
add
lcall
test
push
dec
mov
pop
ljmp
arpl
sti
pop
leave
aam
jb
and
rclb
sbb
mov
sub
aam
cmp
jmp
outsl
imul
cmp
mov
mov
in
mov
jno
jg
xchg
lds
dec
popa
loopne
leave
pop
hlt
push
fadd
cmp
add
adc
imul
jp
pusha
cmc
int
pop
scas
fwait
xchg
xchg
ret
das
sub
jl
fwait
mov
inc
inc
lock
adc
adc
cmp
cmpb
les
sbb
dec
int3
outsl
std
js
pop
into
mov
sub
or
add
ret
lahf
movsb
jne
xchg
push
cmp
cmp
lret
scas
sub
test
std
dec
mov
enter
testl
leave
fmul
push
jmp
out
rcl
jo
iret
cld
fdivl
rcr
lret
cmp
inc
inc
and
xchg
cld
nop
cli
fldt
mov
and
jl
testl
xchg
insl
jo
fwait
loopne
jle
push
sbb
fcoml
xor
repz
mov
jg
rorl
sti
push
mov
in
ja
push
adc
jp
stc
and
add
ret
imul
dec
pop
and
push
dec
scas
lock
mov
push
push
ret
xchg
xor
inc
xor
cmpl
leave
mov
scas
int
dec
insl
dec
mov
outsb
push
aad
je
mov
fdivrp
push
ljmp
icebp
push
lcall
outsl
push
lods
pop
sbb
dec
jge
xchg
or
pop
xor
mov
dec
add
aad
mov
insl
mov
mov
xchg
in
add
bound
lret
sub
add
jbe
push
rcrl
rol
gs
dec
fwait
arpl
ret
int3
cltd
aas
sub
lods
pushl
mov
ljmp
lock
inc
pop
mov
mov
mov
xchg
lea
dec
je
mov
xor
pop
cld
lret
fidivrs
or
sbb
push
sub
mov
mov
out
call
jmp
scas
ds
and
int3
adc
push
enter
xor
sbb
insb
fistps
aam
out
cmp
or
mov
and
mov
movsl
and
cs
lea
xchg
popa
cltd
xchg
enter
xor
mov
add
xor
xchg
je
xchg
repnz
stc
cmp
test
clc
and
mov
js
or
and
inc
clc
inc
mov
test
mov
xlat
nop
inc
cltd
gs
push
cmc
pop
add
movsb
xchg
push
les
addr16
mov
dec
pop
sbb
mov
lcall
fs
in
xor
nop
in
cmp
push
dec
call
xor
dec
js
xor
mov
mov
and
push
leave
and
push
cwtl
push
test
imul
in
adc
test
cmp
push
iret
in
adcb
mov
hlt
mov
bnd
xor
xchg
sbb
mov
mov
pop
or
sbbl
in
int
hlt
dec
or
gs
mov
jmp
js
pop
out
jl
xor
xchg
xor
dec
out
dec
lahf
xor
in
push
in
mov
xlat
sahf
sub
out
push
js
mov
xor
and
xor
popf
cmp
adc
xchg
or
inc
sub
inc
ja
sbb
cmpsb
pop
out
mov
fdiv
adc
bound
lods
cmc
inc
or
fbstp
pop
jmp
mov
mov
in
mov
shrl
mov
repz
les
daa
sbb
pushf
and
mov
pop
pop
pop
mov
mov
stos
pop
in
fwait
xor
push
adc
dec
int
das
push
mov
mov
mov
arpl
fstps
pop
fimuls
loope
sub
daa
js
outsb
dec
dec
add
sti
pop
pop
fdivl
pop
mov
mov
pop
sahf
mov
pop
std
pop
aas
in
add
mov
cmp
sbb
clc
push
mov
cltd
mov
clc
scas
mov
pushf
pop
push
adc
add
ficompl
mov
push
push
ljmp
lahf
xor
mov
xchg
ss
scas
js
bound
cmp
dec
pushl
inc
push
jge
jmp
cmp
mov
mov
je
sbb
sub
mov
nop
jle
sub
rcrb
ret
popf
dec
push
adc
xchg
or
push
fcmovne
je
daa
ret
in
out
inc
hlt
dec
iret
outsb
imul
jg
sbb
dec
shll
jle
jnp
add
movb
in
jg
sbb
push
aam
enter
aas
or
inc
clc
call
jns
repz
jg
xor
adc
pop
nop
data16
outsb
sbb
cltd
mov
xor
push
adc
and
and
repnz
hlt
jle
sbb
pop
ja
out
xchg
pop
xchg
testl
xchg
xchg
dec
aaa
out
les
cmp
push
fwait
pushf
cmp
xchg
ljmp
cwtl
fcmovne
into
in
mov
mov
hlt
arpl
dec
push
jecxz
jge
lret
je
inc
fmuls
insb
lret
mov
inc
das
es
sbb
ret
iret
adc
mov
push
or
inc
sub
sbb
les
cltd
push
mov
sub
jp
jge
mov
sbb
adc
pop
addr16
mov
push
cmp
xchg
mov
lcall
lret
sub
lahf
or
enter
add
xchg
adc
shrl
test
jns
out
xor
clc
dec
sahf
insl
mov
xchg
jbe
dec
pushf
std
cmpsb
insl
mov
or
fisubs
addr16
dec
test
iret
fstps
daa
inc
int
add
sarl
ret
push
ret
sub
outsb
mov
mov
mov
adc
les
pop
adc
faddp
cmp
iret
iret
fnclex
divl
mov
or
jge
jg
xor
sbb
and
lret
sbbb
out
stos
cmp
mov
stos
shl
les
enter
punpcklwd
insb
sbb
je
nop
sub
jmp
or
push
xchg
dec
dec
dec
orl
fs
inc
pop
push
adc
cld
xchg
subb
and
jecxz
or
sub
jo
in
stc
imul
jp
pop
outsb
or
or
push
pushf
test
dec
shll
andl
push
orb
cmp
dec
xchg
sub
outsl
sbb
mov
das
idivl
mov
dec
sti
pop
mov
fisttpl
xor
aad
dec
dec
sbb
push
loop
test
dec
clc
push
ret
pushf
outsl
out
fnstenv
lock
outsb
push
xchg
jecxz
dec
push
jo
xor
loop
xchg
aam
lock
and
repz
xchg
pop
adc
and
leave
and
iret
adc
sub
mov
pop
lea
int3
fnstcw
push
arpl
xor
lcall
sub
mov
call
mov
sub
fidivrs
and
pushf
and
cli
aaa
popa
xor
inc
jg
xchg
dec
fildl
mov
push
push
pusha
jmp
jb,pt
xchg
vmovupd
dec
inc
jl
push
dec
push
ljmp
fwait
lds
mov
leave
test
enter
icebp
lods
cmp
movsl
fcmovu
mov
push
mov
push
dec
insb
inc
inc
jnp
mov
cmc
in
cmp
jae
fists
sub
push
push
loopne
negl
xor
out
xchg
inc
lret
xchg
push
lods
out
xor
mov
pop
out
mov
loope
xor
data16
push
roll
ret
sbb
insb
jns
and
hlt
jns
mov
movl
sbb
cmpsb
dec
sub
ret
and
xor
jne
mov
dec
lods
enter
das
xlat
movsb
push
dec
rcrb
pop
fst
mov
negl
add
movsb
into
stos
sbb
nop
out
outsl
dec
fwait
mov
aad
jle
aas
in
je
mov
mov
arpl
sub
jp
or
mulb
mov
adc
in
pop
cld
sub
push
aam
scas
daa
nop
fists
inc
push
nop
jg
lcall
loopne
pop
pusha
mov
jns
sarl
movsl
xor
push
cmp
xor
xchg
movsb
inc
notl
idivl
push
xor
sbb
adc
ss
test
sub
mov
mov
push
addb
in
data16
pop
mov
push
inc
stc
ret
inc
mov
add
jg
mov
mov
mov
nop
mov
adc
cltd
es
call
pop
daa
out
cltd
ret
aad
scas
pop
jl
push
push
addr16
lock
fwait
sbb
push
aad
inc
xchg
loop
push
bound
adc
sti
sarl
cld
dec
dec
and
fsts
mov
mov
test
push
mov
and
cs
inc
out
fistpll
clc
sbb
insb
mov
fst
add
jbe
xor
loope
add
lret
adc
pop
lods
jo
xchg
mov
xchg
hlt
sub
xlat
fidivrs
repz
in
xchg
mov
scas
out
jb
loop
fstpt
xor
pop
ret
pop
das
xor
mov
aas
iret
cltd
out
dec
fwait
in
push
pop
jle
idivl
or
mov
fcoml
pop
lahf
and
repz
stos
out
add
daa
stos
jb
push
sub
jns
xor
rorb
push
jmp
popa
jge
lock
fbld
sahf
jp
cmp
add
sarb
push
dec
shl
inc
push
ja
mov
jb
push
mov
ficomps
mov
jno
scas
sti
pop
cwtl
out
or
test
ret
out
movl
lret
loope
cmp
cmp
decb
divb
rcl
andb
sub
mov
jmp
pop
loop
push
outsl
imull
xor
divl
ss
test
shlb
repz
les
insl
push
xlat
cli
xchg
fsubl
mov
lods
mov
insb
lret
mov
mov
ret
ljmp
shll
mov
push
mov
clc
fcmovnb
aas
jno
loop
daa
xorl
sbb
popa
sub
and
mov
add
mov
in
push
je
xchg
jg
jge
add
jno
mov
inc
scas
aad
call
add
sub
mov
jl
pushf
xchg
push
popf
mov
nop
add
loopne
fnstcw
mov
add
xlat
insb
dec
xor
pusha
cli
je
dec
pop
jmp
dec
int
xor
xchg
push
decb
movsb
pop
pop
push
gs
cld
cmpb
jmp
outsl
gs
or
push
cmpsb
mov
idivb
dec
pop
rorb
sbb
add
mov
mov
mul
gs
cmc
lds
cmp
rcrl
cmpsl
cs
pop
out
aas
cmp
pop
mov
sub
aas
xchg
movsb
call
jnp
out
mov
jp
lcall
or
dec
lea
adc
jmp
insb
fdivl
bound
stos
push
bound
cmp
popa
cli
std
sub
loopne
mov
fistl
and
out
xor
inc
fnstenv
scas
scas
ficoml
cmp
cmp
adc
es
and
xchg
inc
int3
dec
scas
fwait
lds
scas
sarl
adc
int3
es
mov
cmp
rcrl
fs
sub
mov
adc
sahf
push
dec
mov
std
ret
xor
outsl
cs
test
call
adc
mov
jne
sub
lock
sub
movsb
std
fisubrs
je
cmp
lock
push
xor
xor
loope
pop
das
in
or
imul
inc
add
add
jbe
das
mov
push
inc
adc
aad
sbb
inc
stos
insl
lods
dec
bound
dec
outsb
je
or
push
mov
jae
sbb
sub
pushl
adc
lods
icebp
ljmp
jp
aam
xchg
xor
jecxz
jp
sbb
cmp
pop
or
and
es
mov
dec
cmpsb
and
outsb
sahf
fstl
pop
bound
iret
mov
int3
push
fdivrp
or
stc
cld
out
lock
fcoml
mov
test
test
jle
xorl
sbb
dec
xor
push
pop
iret
cmpsl
mov
lcall
mov
push
pop
dec
outsb
and
repnz
outsb
xor
pop
pusha
mov
cli
mov
xchg
scas
repnz
test
rolb
clc
cmp
imul
inc
inc
xor
push
test
cmpsl
sbb
andl
xchg
xchg
repnz
mov
pop
add
jmp
enter
enter
divb
sub
fs
icebp
cltd
call
or
das
jnp
es
daa
mov
mov
jo
mov
in
hlt
jle
stos
pop
test
dec
sbb
push
or
pop
call
in
mov
push
fldlg2
xchg
int
inc
bound
ret
jecxz
jbe
push
jecxz
in
pop
loopne
push
xchg
push
inc
out
ret
cmc
adc
cmpsl
enter
cli
jle
cld
adc
lock
repz
pop
xor
fwait
loop
push
jecxz
sub
das
fs
jne
fistps
bound
movsl
push
xchg
pop
push
mov
adc
pop
jge
xchg
jmp
lcall
stos
or
mov
fisttps
ss
pop
js
push
xor
mov
stos
in
in
ret
scas
jmp
push
rorb
mov
and
jnp
lods
mov
adc
call
push
outsb
xchg
test
call
std
adc
cld
in
push
push
sbb
dec
cmp
xlat
sbb
mov
push
mov
jo
pop
pop
sbb
dec
movsb
sub
bound
ret
xchg
mov
enter
xchg
test
mov
xlat
pop
iret
add
or
pop
dec
ljmp
int
repnz
cwtl
dec
mov
cmp
cmp
mov
dec
jns
fnstcw
pop
dec
inc
in
push
xchg
mov
sub
cmpb
hlt
sbb
fisttps
xor
fldt
inc
cld
add
neg
sbb
xor
test
mov
pusha
int
cmp
test
rcrb
sti
rcl
jnp
pop
push
les
inc
in
add
lret
xchg
xchg
sbb
mov
mov
cli
mov
jp
scas
dec
cmp
cmp
test
out
shll
mov
sub
add
insb
jns
notl
adc
cmp
sbb
mov
arpl
sub
xchg
jb
sti
xchg
adcb
push
mov
inc
pop
imul
pop
fwait
lods
mov
pop
sub
jg
test
jo
inc
daa
or
rcrl
fadd
mov
sbb
bound
mov
pop
pop
imul
jecxz
xlat
int
sub
jecxz
sub
mov
popf
dec
pop
sbb
xor
filds
sar
imull
and
xor
jns
test
mov
stos
rcrl
in
fldcw
mov
enter
ljmp
mov
jo
mov
mov
mov
push
test
jns
xchg
adc
pop
push
lret
les
and
mov
sub
loop
or
repz
fnstcw
lret
stos
mov
mov
test
test
pop
lahf
inc
jne
push
xor
sbb
xor
je
sub
jmp
imul
int
das
mov
mov
mov
sbb
stos
aad
les
das
mov
int3
sub
adc
mov
lcall
stos
sbb
test
negl
mov
lods
xor
mov
aas
push
xor
cmpsb
push
mov
lea
pop
ja
mov
mov
or
jp
inc
mov
ucomiss
mov
dec
cmp
dec
jmp
sub
jbe
pop
movsb
daa
or
testb
je
push
scas
adc
out
clc
dec
rcrl
ss
dec
sahf
cld
ja
adc
adc
popf
sub
dec
clc
ret
ret
scas
dec
adc
inc
cmp
clc
fwait
xor
adc
jo
lds
cmc
xor
jmp
into
mov
roll
push
jg
loope
icebp
outsb
inc
popf
mov
jno
andl
cmpsl
xorb
sbb
iret
orl
adc
lret
or
imul
mov
hlt
dec
and
fcoms
add
inc
and
jno
or
sbb
adc
dec
ret
dec
aad
lcall
loop
pushl
add
push
jle
sbb
pop
dec
andb
mov
xchg
orb
fmuls
cs
ss
xchg
jb
mov
scas
inc
js
jnp
in
jb
out
lods
sub
push
lahf
fwait
ss
dec
cli
loopne
xor
hlt
es
into
lock
leave
loope
repnz
and
pop
fsubrl
lret
cmpsb
js
xchg
mov
scas
mov
adc
adc
scas
sbb
popf
cmp
mov
cmovbe
repnz
ja
leave
jnp
data16
jmp
cmp
insb
add
push
mov
mov
push
inc
repz
ljmp
inc
cld
lock
leave
ficoms
mov
lods
pop
mov
push
test
fisttps
xchg
jbe
ror
lods
subb
sbb
in
mov
sbb
and
outsb
insb
cld
repnz
mov
arpl
in
jae
out
rcrb
insl
push
mov
enter
inc
cmp
add
popa
push
jmp
es
shr
pop
pusha
sub
popa
pushf
mov
sbb
sbb
lret
push
pop
or
pop
into
jmp
sub
clc
xor
jge
mov
insb
enter
das
cmp
icebp
adc
bound
jnp
lods
xchg
adc
sbb
add
data16
add
inc
stos
and
xor
sub
nop
pop
dec
sub
jp
sub
aas
push
push
icebp
sahf
mov
in
adc
adc
jnp
xchg
push
sbb
or
mov
insl
sbbl
inc
mov
fisubrs
xchg
aam
insb
repz
cmp
mov
int3
mov
loope
mov
test
jge
adc
out
imull
push
mov
push
stos
shll
mov
pushf
jmp
les
sub
xchg
cmp
xor
mov
popf
or
push
xor
adc
jg
cld
test
jae
dec
mov
push
jg
xor
es
ljmp
outsl
pop
ret
out
test
add
sti
push
push
lcall
cmp
or
hlt
lcall
adc
xor
ret
pop
add
push
sub
int
mov
dec
or
das
popf
jmp
mov
imul
xchg
int3
mov
fwait
ret
xchg
test
mov
xchg
and
xor
jo
test
aad
inc
and
mov
aam
clc
push
icebp
push
lods
pushf
addr16
cmp
xchg
jge
movsb
arpl
imul
mov
movsl
aaa
lret
jl
mov
mov
pop
push
pusha
movsl
in
fldcw
pop
mov
in
ds
dec
nop
incb
sbb
shl
mov
sub
cltd
rolb
sti
pushf
mov
fidivs
sahf
mov
jne
insl
fsub
rolb
sbb
jecxz
lcall
ljmp
subl
jle
push
bnd
dec
test
mov
dec
dec
in
jle
jge
lret
sub
or
mov
repnz
push
outsb
xor
test
cmp
jl
jnp
lea
aas
mov
lods
ljmp
fldcw
fbstp
aam
je
outsb
cltd
cmp
mov
out
push
roll
mov
sbbl
mov
sahf
dec
mov
mov
imul
cmc
rcll
and
insb
or
cs
dec
addl
loop
push
inc
aas
xchg
or
out
sbb
repz
mov
iret
add
push
test
push
pop
jg
xor
cmp
and
cmp
adc
inc
pop
jb
add
fucom
xchg
inc
or
push
notb
push
lods
adc
aad
inc
push
jbe
lea
cli
clc
das
jecxz
xor
gs
cmp
fsubl
cmp
jge
inc
inc
sub
into
aaa
add
data16
fiaddl
mov
es
xchg
or
cld
sub
insl
arpl
rcrb
notl
sbb
ljmp
xchg
out
sarb
test
lds
push
ja
inc
sub
dec
jmp
pop
cmp
data16
cwtl
cltd
push
xchg
jle
out
stc
das
arpl
xchg
imul
bnd
lock
inc
mov
leave
jae
test
stos
mov
jbe
pop
cmp
sbb
clc
mulb
xorl
xor
roll
mov
push
jle
inc
out
lret
add
js
xchg
pop
lret
ret
cld
sub
shrb
je
hlt
ret
lea
fcmovbe
push
int3
dec
jo
bound
int
jp
or
xchg
jle
pop
loopne
mov
inc
out
pop
pop
push
add
sarb
dec
sub
outsb
movsb
mov
dec
outsl
pop
notb
clc
adc
jg
sbb
imull
add
loopne
std
loope
pop
fmull
test
adc
mov
jmp
rcl
aam
popa
imul
jno
adc
mov
jae,pn
aas
xlat
sub
lahf
icebp
mov
fsts
pop
loope
gs
jecxz
cmc
ficoml
ljmp
sub
out
push
ret
rolb
es
xor
sub
les
bound
pop
mov
and
or
cmpsb
sbb
push
mov
arpl
and
pop
daa
aas
or
or
jb
and
test
mov
in
aam
sub
popa
mov
mov
lret
es
es
out
adc
popf
xor
pop
mov
cmp
sti
cs
inc
jbe
jp
sbb
xchg
or
and
inc
lcall
rcl
mov
inc
popa
sbb
aaa
lods
dec
bound
xor
movsl
notl
aam
pop
incl
roll
sbb
add
mov
xchg
mov
ss
loopne
fdecstp
pop
pop
xor
sbb
outsb
popa
test
leave
sbb
hlt
arpl
mov
cltd
bound
leave
fcmovu
xchg
divl
inc
enter
ret
xor
sarl
repnz
mov
clc
jmp
fldcw
xchg
pushf
mov
dec
mov
out
popa
mov
jbe
inc
cli
insl
aam
cwtl
sub
push
mov
mov
pop
push
sbb
mov
test
daa
mov
mov
es
sub
scas
pop
mov
xchg
loopne
ficoml
in
jnp
inc
mov
dec
out
test
pusha
xchg
or
or
pextrw
sub
adc
movsb
daa
mov
stc
inc
sub
xchg
fisttpll
mov
push
add
dec
cltd
inc
data16
inc
stc
mov
xchg
sub
loop
lret
or
xor
fidivl
jae
das
sti
jl
fmuls
je
push
sub
mov
clc
icebp
ror
mov
aaa
dec
lcall
jecxz
out
fsts
cwtl
jbe
jo
repnz
sub
pop
xchg
and
mov
inc
out
cmp
pusha
ds
jg
int3
cmp
loop
es
dec
mov
mov
test
movsl
xchg
dec
cmp
pop
add
cmc
lret
mov
xor
int3
pop
pop
nop
jp
cmp
pop
sub
push
push
mov
sub
cwtl
ror
adc
rorb
or
push
cmc
sub
fisubrs
adc
ss
push
mov
mov
push
lret
cmp
ja
push
dec
in
in
cmp
mov
dec
inc
lahf
dec
in
cwtl
mov
clc
call
pushf
insb
loopne
or
inc
inc
jns
lds
push
stos
xchg
fcoml
or
xlat
cmp
xchg
lods
cwtl
jge
sub
push
decl
pop
push
push
fldl
inc
and
lods
loop
int
push
push
cmp
mov
jb
fsubl
sub
out
xchg
inc
fwait
aas
jle
inc
cli
ds
pop
outsl
lahf
enter
bound
xlat
xchg
jge
mov
repz
stc
sbb
add
add
stos
sbb
push
adc
cmpl
fcomps
pusha
jmp
and
add
push
or
add
fimull
roll
cmpsl
cmp
xor
adc
ljmp
sbb
inc
pop
jns
out
call
add
and
fistpll
push
xchg
and
popf
movsb
js
push
jg
sbb
cmp
add
mov
sti
adc
mov
setl
mov
ret
push
divb
push
mov
inc
cmpsl
fidivs
sub
jnp
jl
push
xchg
or
fcom
nop
inc
dec
mov
push
pop
xor
das
cmpsl
shll
aas
or
xorl
xor
mov
sbb
das
std
mov
jo
ror
add
sbb
in
repnz
inc
lret
sbb
and
xchg
pop
mov
xchg
jne
and
loopne
mov
xor
add
rcll
jle
push
pusha
adc
jle
lds
bound
out
inc
cmp
mov
mov
mov
cmc
xchg
fadds
lods
dec
inc
fwait
sub
push
xchg
fistl
jmp
and
push
std
sbb
shl
icebp
dec
lds
into
push
cmp
rcr
icebp
stc
repnz
pop
mov
pop
sar
out
les
sti
rorb
hlt
call
and
dec
daa
sub
scas
sub
je
shrb
daa
movsb
push
fucomip
in
inc
sti
int
in
lahf
sti
cmpsl
xor
sub
or
fwait
or
mov
mov
fnsave
jnp
xchg
les
fnstcw
out
lahf
and
xchg
stos
cmc
int3
dec
sbb
sbb
cwtl
add
mov
xchg
ds
cmc
lret
outsb
jne
push
and
lahf
adc
push
jne
pop
xchg
lods
sbb
adc
negl
popa
out
jmp
push
daa
and
cs
nop
not
pop
adc
jmp
cmp
sbb
test
mov
xor
inc
or
push
push
js
pop
imul
sbbl
cwtl
rorl
or
dec
fstl
dec
mov
jge
daa
rolb
jne
inc
cltd
pop
lret
pop
dec
out
mov
hlt
and
fs
jl
callw
arpl
xor
popf
mov
dec
mov
sbbb
lcall
aad
fbld
add
pop
jae
fiaddl
inc
xor
je
inc
jb
push
and
imul
out
jae
push
mov
and
cs
mov
roll
or
shrl
int3
arpl
xchg
addr16
push
out
lods
lds
cmpsb
call
dec
data16
in
lahf
jp
mov
or
fs
scas
in
or
repz
mov
jecxz
std
pushf
test
mov
scas
pop
xorl
xor
mov
cmp
cmpsl
mov
cmp
fistpl
push
cmp
inc
or
dec
outsl
cmp
xchg
jg
adc
mov
ret
inc
sub
in
fistpl
pop
aam
cld
mov
adc
stos
into
push
push
cmp
mov
fs
inc
push
sub
or
out
mov
add
shlb
inc
mov
dec
inc
lahf
shll
pop
stos
andl
aaa
cli
loope
jae
ja
fcomp
dec
cmpb
movsl
add
mov
jp
mov
cmpsl
in
arpl
add
test
outsb
das
pop
mov
pop
inc
dec
push
arpl
cwtl
lcall
add
popf
pop
lods
cmpsb
xlat
lret
pop
sbb
outsl
mov
jno
orl
xor
add
ds
and
out
cltd
sbb
fcmovnu
aad
push
repz
dec
out
and
call
shll
pushf
mov
pushf
cmp
test
cwtl
dec
xchg
mov
out
adcb
std
rclb
ljmp
roll
push
loopne
mov
dec
xchg
dec
mov
aam
dec
mov
inc
loopne
daa
sbb
pop
in
push
pop
xlat
sbb
fdivr
cmp
jnp
sahf
or
fstpl
pop
mov
sub
xlat
cmp
cmp
arpl
pop
cmp
in
sub
les
pop
inc
lret
xlat
scas
sar
popf
lcall
cmp
imul
rorl
daa
lock
lds
notb
sahf
adc
xor
or
dec
cmp
cltd
mov
out
or
mov
dec
lea
insb
mov
inc
mov
xchg
lds
push
mov
or
inc
sbb
cmp
mov
fiaddl
cld
xchg
fdivl
out
adc
xor
jmp
int
jne
aas
mov
mov
mov
push
stos
sub
sbb
aam
js
xchg
inc
aad
xchg
mov
cld
xchg
dec
enter
pop
cmp
pushf
aad
lcall
inc
pop
jae
std
jne
pop
int3
int3
xor
sub
loopne
adc
shlb
shlb
jo
mov
lods
xchg
lods
inc
push
fwait
xchg
xor
lods
push
les
pusha
into
fsubrl
stos
in
incl
pop
in
cld
std
mov
mov
rorb
mov
notl
and
sbb
jne
mov
pop
movsb
aam
enter
pop
and
mov
push
sahf
pop
xlat
xchg
mov
imull
stc
mov
xchg
int
jb
pop
dec
add
cs
sbb
dec
pop
mov
movsb
jae
jmp
mov
or
sub
cmp
and
jno
cmp
mov
cwtl
or
adc
call
dec
xchg
test
pop
mov
mov
shlb
mov
xchg
sbb
push
test
push
repnz
mov
je
xor
add
xor
sahf
jge
xchg
sarb
and
inc
stos
shlb
xor
inc
xor
aas
add
mov
fbld
push
sti
and
movsb
sbb
xor
mov
roll
sbb
jne
push
mov
test
mov
cwtl
push
xchg
cmp
sub
xchg
xchg
or
jg
pop
mov
std
test
mov
orl
sub
jo
push
pop
orb
mov
movsb
sub
lock
data16
jecxz
or
pop
add
aad
and
push
mov
push
lock
fimuls
jmp
mov
repnz
mov
cmp
jae
imul
mov
mov
cmp
mov
xlat
rcr
insb
mov
or
mov
ds
sbb
sarb
clc
or
lahf
push
out
andb
adc
stc
jne
repz
cmp
sub
arpl
std
adc
icebp
in
xor
sbb
pop
jns
popa
adc
pop
das
push
or
outsl
mov
jne
add
sarl
dec
hlt
jb
stos
fwait
jl
pop
adc
jmp
xor
cwtl
cmp
push
adc
or
dec
jae
jne
jg
aas
das
sti
mov
cld
popa
dec
xor
shlb
outsb
out
push
mov
cltd
dec
xchg
mov
jns
adc
shl
out
sub
cmp
mov
inc
cmpsb
aaa
aad
aam
mov
pop
fcompl
xchg
lea
cwtl
in
fisubrs
inc
inc
lds
sbb
dec
outsb
test
xor
out
and
call
fcmovne
sub
lods
pusha
adc
ljmp
rorb
mov
jl
add
ss
jmp
xchg
jmp
iret
lret
jb
fdivl
test
out
mov
push
in
xchg
mov
icebp
insb
lahf
inc
mov
pop
mov
mov
push
xor
out
cmp
in
lds
gs
and
push
in
jns
xlat
pop
or
out
or
sbb
in
mov
scas
data16
pop
int3
stc
movb
imul
jb
sbbl
sbb
je
outsl
sar
push
ret
mov
fisubs
pop
mov
ss
idivb
jmp
mov
les
pop
cwtl
jbe
in
sbb
ljmp
xchg
or
or
mov
mov
repnz
bnd
xor
gs
in
movsb
hlt
adc
mov
in
mov
xadd
sbb
ret
outsl
popl
xlat
xchg
push
mov
add
cs
ret
pushf
sub
add
fiaddl
mov
fwait
or
gs
pop
aad
xchg
pusha
push
in
sbb
push
xor
mov
mov
inc
cli
sti
lods
xchg
popa
mov
adc
or
push
mov
mov
paddusw
cmpsl
add
dec
dec
cmpl
push
dec
mov
jns
pop
xor
scas
adc
ds
pop
mov
mov
xor
imulb
mov
push
xlat
jno
inc
xchg
shrb
xor
loop
out
nop
call
inc
daa
sahf
jl
jg
data16
test
cmc
roll
jns
popa
rclb
in
movsl
jmp
jmp
leave
and
pop
push
cmpsl
jmp
lcall
int
inc
xchg
in
sti
xchg
jb
mov
add
cmp
mov
lea
mov
mov
and
testb
add
push
dec
jl
gs
loopne
iret
add
mov
repnz
or
test
or
test
pop
mov
loop
cmp
outsb
out
xchg
inc
mov
fnstenv
subl
fstpt
jg
clc
scas
sbb
outsl
test
cli
lahf
fisubrl
sbb
sub
push
fisubrl
pop
pop
pop
mov
loopne
das
sub
aam
mov
mov
inc
xor
imul
sub
loopne
fnstenv
add
subb
adc
lcall
xor
ficomps
cmp
movsl
clc
mov
test
fmul
pop
imul
inc
sbb
and
cmpsl
mov
ret
ljmp
adcl
add
or
fists
pop
daa
outsl
stc
scas
out
das
pop
xchg
daa
xor
cld
dec
mov
sti
popf
fsub
fcmovnbe
mov
and
in
cmpsl
push
pop
dec
mov
out
jmp
addr16
xchg
mov
loope
cli
lcall
mov
push
repz
fistl
cwtl
jle
arpl
dec
xchg
subl
push
mov
cld
mov
fisubrs
jl
cmp
fwait
xchg
dec
push
data16
jb
mov
mov
push
stc
loope
mov
jmp
cmp
xor
insl
inc
mov
jns
iret
pop
movsl
outsb
xchg
jns
sbb
cmc
repz
add
lods
rorb
jne
std
into
dec
mulb
stos
push
scas
cmp
stos
decb
ret
adc
sbb
mov
ss
andl
jnp
fldenv
mov
in
out
lods
andl
test
cmpsl
mov
rcrl
cmp
dec
dec
pusha
test
pop
sbb
in
fistpl
mov
push
pop
orl
rorb
test
cmpsl
sahf
push
or
das
outsb
mov
cwtl
and
data16
mov
xorb
leave
jle
scas
pop
push
icebp
fisubs
mov
stos
dec
mov
push
sbb
mov
cmp
subl
inc
add
add
mov
sbb
or
and
lock
mov
lcall
mov
rcrb
xchg
sbb
clc
inc
ds
add
lret
loopne
dec
xor
push
sub
cmp
test
mov
inc
jge
jno
cmp
je
ljmp
fisttpl
adc
mov
xchg
mov
aaa
lock
fs
imul
mov
mov
mov
testl
nop
xor
jg
lea
mov
dec
push
xchg
push
cld
cltd
loope
cmpsb
dec
rcrl
dec
outsb
stos
pop
das
cmp
hlt
pushf
pop
or
push
lcall
add
ljmp
jle
pop
sub
and
xchg
mov
popa
ljmp
mov
xchg
fsubl
inc
mov
push
mov
subb
popf
jo,pt
jae
ds
mov
jecxz
sbb
xchg
cmpsl
test
test
iret
xchg
lret
fistps
stos
test
testl
nop
add
cmpsl
dec
push
xlat
sub
lahf
inc
cmovns
out
adc
sti
push
push
jns
leave
in
inc
add
outsb
mov
repz
sbb
imul
pop
or
fwait
aad
shl
mov
jbe
mov
push
jle
jno
repz
mov
mov
cmp
dec
mov
shll
ljmp
inc
cwtl
data16
cli
cmp
add
sarl
pop
lcall
out
pop
push
pop
pop
adc
mov
or
push
mov
add
fdivrl
aas
mov
add
lock
lcall
ja
cmp
lahf
outsb
pop
or
fists
into
cmp
jae
mov
pop
push
add
shrb
push
fcompl
jmp
cvttps2pi
mov
adc
aam
jl
jbe
mov
pop
lds
push
xor
sub
cwtl
testl
hlt
xchg
xor
lret
mov
rep
cmp
dec
dec
mov
cmp
imull
icebp
arpl
pushl
add
jae
xor
or
lds
clc
stc
in
lcall
ja
push
jno
mov
xchg
insb
clc
gs
cmp
mov
mov
xchg
adc
pop
cwtl
or
jmp
mov
adc
mov
out
pop
addr16
cmpsb
lock
mov
popa
xchg
xlat
cmpsl
mov
cmp
add
inc
ret
sub
repnz
cwtl
enter
fisttpl
mov
icebp
in
aam
lret
or
jge
jno
push
in
xor
in
leave
fbstp
inc
pop
jae
in
das
imul
jle
mov
push
pushl
je
dec
adc
loop
insl
pop
test
mov
in
in
jb
add
popa
lret
cmpsb
in
inc
jge
out
jo
jo
sub
xchg
dec
pushf
cvtps2pd
xor
cwtl
insb
inc
scas
cs
or
cmp
inc
jns
movsb
enter
xor
inc
adc
inc
notl
pop
mov
fsubs
jns
mov
aas
lock
fdivp
mov
sbb
fbstp
gs
push
nop
fwait
in
lock
fistps
cmp
add
cmp
mov
es
xchg
add
mov
imul
xlat
push
adc
int3
shll
ja
push
xchg
cltd
add
dec
stos
cmp
push
ror
stos
jno
inc
movb
cmp
mov
pop
push
popa
dec
jp
out
scas
sysret
adcl
xor
iret
loop
out
jmp
mov
mov
pop
rol
lcall
sbb
call
rclb
xor
into
mov
jne
neg
sbb
divl
aas
add
stc
in
cmp
fcoms
es
inc
sub
lds
aam
out
xchg
cwtl
pop
adc
iret
mov
mov
cli
ds
cwtl
add
fcmovu
paddusb
xchg
jns
cmp
popf
pop
mov
sub
and
and
add
nop
jnp
pusha
xchg
sbb
sbb
mov
into
mov
iret
test
xor
imulb
dec
jp
out
dec
adc
jle
mov
inc
imul
test
fadd
inc
fwait
xchg
enter
pop
ss
mov
pop
call
jae
inc
cmp
bound
xchg
pop
shlb
lret
jae
out
xchg
inc
lock
ss
cmp
and
add
mov
fsts
add
add
sbbl
pop
and
fildll
pop
dec
hlt
cmp
mov
mov
inc
test
out
inc
in
xchg
cld
or
rcll
out
xchg
iret
dec
sti
test
dec
fadd
cld
mov
push
ljmp
fstl
mov
shrl
pusha
cs
std
mov
jle
fucompp
sbb
or
and
std
test
jmp
out
sub
mov
lds
mov
ucomiss
ss
inc
movsb
add
dec
inc
and
mov
sbb
sbb
lds
cmp
pop
sarl
clc
pop
lea
push
ret
or
clc
repnz
mov
mov
out
xlat
sub
sbb
jb
adc
shl
sbb
ret
adc
or
cmp
cmp
mov
shll
jecxz
mov
or
movsl
or
lahf
sbb
imull
or
mov
push
pop
xor
in
adc
mov
adc
cwtl
inc
mov
dec
outsb
xor
fimuls
add
faddl
fcomip
or
call
xchg
mov
inc
jg
push
mov
xor
jp
or
push
leave
pop
fwait
cmp
and
or
cmp
jae
movsl
mov
repz
sahf
mov
in
dec
push
test
loop
mov
divb
gs
add
mov
fisubrl
fstps
xchg
cld
jg
sti
mov
xchg
fxch
insl
addl
movsl
xor
out
pop
rcl
rorb
or
and
pop
xor
lahf
fistl
call
mov
aas
add
mov
cld
xchg
scas
pushf
call
in
lods
xchg
cmp
sbb
ds
xor
xor
icebp
out
lret
fwait
int
ror
clc
test
jno
jg
and
xchg
dec
daa
xor
xchg
jmp
shl
inc
jbe
shrb
cmpb
adc
jmp
dec
jmp
out
daa
pusha
enter
mov
lret
push
jl
cmp
dec
xor
cmp
pushw
sarl
dec
cmp
jge
aas
lock
mov
sbb
push
aas
imul
mov
xchg
int
sbb
sub
in
mov
jle
and
and
dec
ljmp
add
fidivrs
mov
push
xchg
add
push
push
sbb
ja
sub
sti
movsb
pop
mov
adc
mov
js
outsb
jne
in
xlat
fldt
add
pushf
addr16
mov
imul
pop
stos
lea
or
out
outsb
popa
push
push
mov
movsb
mov
pop
inc
push
xor
test
add
push
xchg
lahf
or
add
mov
mov
out
push
rcrl
stos
mov
lahf
mov
pop
push
lahf
int
pop
jb
js
cmc
jae
int3
mov
out
ss
push
movsb
and
sbb
imul
sub
sbb
test
outsb
cmc
lahf
sahf
leave
pop
and
int
mov
cwtl
fwait
sub
mov
mov
inc
ds
push
inc
and
xor
xorl
ss
nop
xor
xor
test
cli
xchg
stc
dec
aad
loope
jge
push
mov
pop
push
daa
cwtl
or
std
inc
frstor
arpl
das
sbb
mov
add
xor
out
lods
es
mov
bound
push
dec
or
mov
mov
aas
push
sbb
cmpsl
push
xor
icebp
arpl
dec
lahf
adc
movsb
lods
sti
sub
popf
mov
rcll
fistl
in
xchg
test
cmp
fcmovb
sbb
mov
fs
sub
in
sub
fcmovb
xchg
mov
add
push
mov
add
mov
and
sbb
mov
popa
adc
lea
test
inc
dec
pavgb
ljmp
xor
hlt
sub
mov
cmp
or
mov
xor
dec
test
fs
fisttpl
push
icebp
add
xchg
xor
cmpsl
cmpsb
insb
rcll
sub
xchg
pop
pop
cwtl
leave
pop
lea
in
mov
xlat
dec
mulb
daa
cltd
in
loopne,pn
outsb
aad
aam
push
nop
mov
or
fs
ss
in
push
inc
mov
mov
push
frstor
les
xchg
fisubl
rolb
aaa
add
test
xchg
xchg
adc
outsb
mov
cmpsb
dec
adc
mov
push
fistl
xor
jns
or
je
jb
cmp
inc
pop
loopne
iret
mov
push
gs
and
jb
cmpsl
mov
lods
lahf
dec
rorl
aas
cmp
mov
into
fadds
mov
mov
cmp
xchg
divl
mov
into
scas
mov
lahf
and
scas
sbb
addr16
fisubrs
mov
dec
insb
mov
clc
fistps
popf
mov
fists
fwait
mov
push
xorl
add
adc
mov
imul
outsb
sbb
popf
jl
outsl
pop
sbb
mov
les
mov
sub
outsl
ret
dec
cli
repnz
icebp
xchg
cmp
leave
xor
jne
ret
js
movsl
lock
aas
pop
mov
rorb
mov
sbb
cmp
lea
dec
out
and
mov
fstpt
mov
pop
ljmp
push
jmp
inc
fsub
stos
lds
mov
jp
mov
nop
mov
sti
cld
mov
xchg
xor
sbb
inc
and
adc
jmp
xchg
sub
out
insl
rolb
mov
int3
scas
imul
test
mov
sti
in
outsl
stos
mov
addl
push
fwait
mov
es
push
dec
cmp
out
cmp
push
xor
push
int
loopne
cli
dec
xor
inc
jmp
adc
ja
mov
mov
into
lret
scas
push
mov
bound
popa
stos
add
and
flds
add
mov
popa
cmp
sub
movsb
addr16
shr
sub
shrl
insl
push
adc
in
enter
out
ss
popa
out
mov
jno
cmpl
xor
dec
das
bound
xchg
xchg
test
mov
inc
jecxz
repnz
jl
insb
int3
add
cltd
push
push
dec
addr16
into
mov
fdiv
rcll
cmp
xor
add
adc
lds
jo
jge
or
rclb
dec
std
shl
and
sub
xchg
fsubrl
add
cmpsl
cmpsl
ja
jg
pop
push
hlt
sbb
xchg
loope
or
xor
push
aam
div
and
mov
jns
sbb
cmp
loope
inc
adc
inc
mov
dec
pop
jle
inc
loopne
dec
testl
sub
loopne
cmp
adc
cmpsl
sbb
std
dec
inc
nop
es
ret
mov
adc
add
jbe
inc
outsl
sub
jp
mov
jmp
pop
mov
mov
das
addl
test
mov
cmc
mov
cmc
cmpsl
ds
or
das
dec
xor
sub
push
scas
pop
pop
lcall
mov
dec
lcall
mov
xchg
lock
scas
and
stos
cwtl
push
jb
push
dec
push
aam
jmp
pop
frstor
orl
xchg
and
stos
fdivl
mov
and
xchg
aas
inc
mov
mov
and
ja
lret
dec
pop
aaa
xor
pop
push
loop
cltd
adc
or
sub
adc
mov
enter
jl
push
cmp
fcmovnb
scas
mov
out
jcxz
lea
insl
push
xor
out
adc
adc
mov
fsubrl
outsl
lock
jg
inc
lahf
jg
and
inc
push
ret
mov
push
inc
sub
arpl
xchg
push
stos
rcll
xchg
loope
inc
lods
mov
ds
sbb
gs
mov
or
jp
pop
and
es
addr16
jno
dec
shrb
add
mov
pop
sti
pop
aad
sbb
sbb
test
daa
loope
es
xlat
fnstenv
roll
add
cmpb
jae
mov
xchg
add
aad
inc
jp
push
fucomip
rolb
push
push
inc
adcl
cmp
mov
data16
stos
daa
pop
popf
sbb
xchg
fcoml
cmp
push
jnp
cmc
inc
icebp
lcall
aaa
inc
xor
mov
in
pop
ret
test
xor
pusha
add
pop
mov
xor
mov
jns
dec
cs
pop
out
cmp
lahf
sbb
jg
mov
stc
sub
xorl
mov
shll
cmp
cmp
jno
inc
add
popa
cmpsb
pop
add
dec
les
imul
cmp
sub
aaa
imul
push
mov
jne
jg
addr16
lods
lods
pop
imul
dec
cs
scas
icebp
or
repz
mov
push
mov
aas
jae
mov
in
mov
adcl
xor
dec
fsubl
jp
and
and
pushf
sbb
hlt
dec
clc
les
pop
jle
xor
in
adc
push
icebp
jb
cs
mov
add
or
addr16
dec
adc
add
push
cmp
sarb
cli
insl
xor
mov
imul
jecxz
je
popl
mov
inc
xchg
imul
loopne
fmull
insb
push
push
jns
pop
sub
xchg
bound
mov
es
sar
repnz
cs
push
out
sub
pop
push
jle
fsubp
scas
mull
xor
mov
ljmp
adc
adc
or
in
inc
mov
inc
roll
add
stos
xchg
push
sub
add
mov
int
jbe
enter
xor
push
out
lock
cmc
or
jle
nop
dec
fcmovu
shlb
je
pop
mov
iret
sbb
adc
xor
stos
pop
sbb
mov
out
mov
adc
negl
adc
fs
punpckldq
or
sbb
sti
loopne
or
fwait
mov
dec
push
lret
adc
dec
jmp
aas
sbb
pop
movsb
stos
mov
scas
mov
xor
cs
jb
add
pushf
cld
sub
inc
and
lock
cmp
inc
jnp
imul
aaa
xchg
and
mov
shrb
sub
push
pop
xor
xchg
dec
mov
jo
xor
push
xchg
cmpb
or
sti
outsl
test
xor
mov
iret
mov
cs
pop
leave
movsl
ljmp
push
test
jecxz
cmp
fwait
int3
sub
dec
imulb
adc
pop
scas
jl
adc
jnp
xor
and
data16
xor
movsl
fadd
shr
jl
mov
jne
clc
dec
clc
out
inc
xor
outsb
push
adc
push
inc
mov
cmpsb
fwait
push
test
pop
and
jge
mov
orb
ficomps
jno
iret
icebp
cmp
sbb
xchg
push
inc
sbb
pop
push
inc
push
and
mov
hlt
mov
stos
dec
mov
mov
out
fisubrs
in
inc
ud0
xlat
pop
lret
ret
mov
je
sub
xchg
jno
data16
rcrl
xor
test
shl
and
mov
rep
ja
cltd
cli
insb
dec
xor
enter
les
int3
mov
inc
pusha
add
jmp
cltd
ficoml
outsl
imul
loopne
jp
pop
jmp
mov
aaa
or
add
xchg
sub
repz
cltd
mov
jp
mov
jns
mov
xchg
mov
jns
mov
and
mov
out
cmp
mov
daa
add
dec
dec
hlt
jo
xchg
jmp
subb
cmp
push
int3
or
dec
xor
dec
mov
mov
pop
pop
cli
sbb
dec
test
data16
mov
pop
and
repnz
mov
fildll
pop
mov
fistpll
imul
aaa
push
fildll
mov
fistpl
push
loope
mov
movsb
scas
mov
add
sub
ljmp
daa
ss
lods
push
sti
scas
mov
pushf
ret
in
inc
adc
out
psraw
mov
mov
pop
cmp
pushf
cmp
add
and
mov
mov
fldt
mov
das
inc
adc
sbb
adc
das
dec
push
inc
loop
js
cmpsb
js
jne
add
jne
sub
adc
xchg
movsb
jmp
dec
lahf
je
loope
aas
cli
addr16
out
and
pop
sbbl
pop
icebp
mov
xchg
mov
ficompl
push
xchg
ret
sbb
movb
movl
movsb
ss
sbb
inc
fwait
in
in
dec
call
mov
outsl
cmpsb
aad
mov
popf
ret
mov
lods
fsubr
jae
dec
addl
inc
adcb
cs
stos
sbb
push
xchg
movsb
in
mov
xchg
rorb
int3
adcb
mov
imul
add
fs
xor
nop
jp
dec
test
in
jbe
pop
scas
int3
cmp
sbb
xchg
mov
xchg
push
mov
mov
lret
rsqrtps
push
fcompl
out
dec
jns
and
shll
push
xchg
lret
jbe
add
push
push
xlat
or
pop
mov
inc
and
lret
das
jae
sbb
dec
pop
pop
js
push
cmp
adc
shrl
addr16
push
cwtl
dec
loope
cmp
adc
xorb
jmp
pop
sub
sub
adc
out
loope
lahf
inc
scas
fcomps
jno
mov
dec
iret
cltd
stc
arpl
or
sbb
hlt
jae
out
mov
int3
clc
mov
movsl
js
ljmp
mov
pop
inc
push
jno
sbb
loop,pn
out
mov
data16
sbb
gs
shll
fsubrs
in
cmp
movsl
pop
aaa
fdivrs
mov
sub
dec
je
jnp
pusha
cmp
add
call
pop
aas
or
shlb
movb
cmp
cmc
fwait
outsb
insl
dec
mov
shl
dec
inc
mov
outsb
mov
cld
jg
mov
btsl
test
or
lret
jle,pn
addr16
gs
or
aaa
or
mov
jmp
scas
xchg
rol
mov
leave
in
mov
gs
shlb
xchg
lcall
and
repz
mov
sbb
les
ficompl
shrl
das
mov
pop
ja
xchg
stos
bound
mov
es
push
mov
sub
mov
in
mov
add
daa
jecxz
out
jecxz
clc
pushf
outsl
mov
jns
addl
lock
mov
xchg
bound
sahf
stos
iret
lds
gs
lock
loop
xchg
push
ss
pushf
and
adc
pop
and
push
dec
mov
sbb
and
test
fwait
pushf
xchg
mov
inc
cmp
sbb
movsb
pop
push
push
jp
mov
scas
pop
cltd
inc
and
aad
repz
push
jg
loopne
sahf
imull
ret
push
add
outsb
xor
mov
sahf
add
lea
shrl
scas
lea
jle
fisubl
inc
mov
ret
lods
into
movsb
out
lret
cmpsb
movsl
mov
xor
jge
pop
jg
adc
mov
bound
lea
in
lock
in
pop
xlat
xchg
add
push
scas
popf
daa
scas
aad
inc
push
loopne
hlt
mov
push
sub
aaa
dec
cmpb
inc
and
stos
inc
push
js
jbe
dec
dec
rorb
fisttps
test
xchg
mov
repnz
inc
ficoml
ret
mov
xor
sbb
imul
pop
mov
xchg
mov
mov
cwtl
dec
mov
mov
aaa
dec
rol
cmp
rolb
cmp
mov
stos
fndisi(8087
mov
add
das
leave
shlb
pop
or
inc
fwait
mov
dec
xor
cmp
mulb
das
clc
mov
or
push
or
fmuls
adc
clc
dec
cwtl
push
cltd
mov
aas
popf
addl
jmp
inc
sub
fildll
cmp
orl
adc
sbb
and
das
mov
pushf
add
inc
pop
pop
cmpl
xor
in
mov
adc
imul
cmp
mov
mov
fs
sbb
scas
push
es
push
dec
push
in
cmp
in
in
scas
push
jbe
sub
dec
xchg
orl
cmp
lock
mov
dec
xchg
fldt
cmp
imul
cmpsb
pushf
bound
push
or
sbb
mov
iret
mov
adc
jle
ds
repz
mov
dec
xchg
mov
imul
xor
xor
out
ljmp
test
fisubs
sbb
test
add
jecxz
mov
jmp
out
idivl
fldz
pop
test
jb
add
fistpl
jg
lret
fsts
jl
lods
inc
daa
jge
and
orb
jbe
or
and
jg
push
jo
and
icebp
cmpsl
insb
int3
xor
xor
fimull
jno
dec
mov
leave
adc
dec
jae
mov
clc
inc
cli
shrl
loope
or
xchg
xor
divl
or
je
dec
mov
dec
int
inc
jl
mov
cwtl
sti
mov
ret
leave
outsl
pop
ja
cmp
sub
sub
loopne
xor
cmp
pop
push
mul
push
push
mov
or
push
call
jl
mov
xchg
in
adc
sub
jns
and
xchg
jbe
into
jge
mov
ss
icebp
sbb
inc
cld
rorb
dec
pop
jecxz
pop
mov
mov
lret
and
gs
jmp
mov
xchg
sub
nop
sub
in
jecxz
jle
and
cmc
mov
mov
leave
jge
add
and
adc
es
xor
cltd
pusha
dec
sub
push
ja
outsb
or
pushf
or
lds
iret
inc
adc
fisttpl
or
mov
mov
pop
and
mov
jmp
cmpb
lcall
or
stos
das
add
fisubl
mov
mov
stos
sbb
pop
pop
addr16
sub
ret
or
add
int
in
rorb
or
test
mov
mov
or
and
arpl
jb
mov
xchg
or
inc
testl
pop
sub
cmp
jmp
cltd
adc
push
shl
sub
xlat
sti
mov
fdivrs
and
adc
repz
adc
enter
dec
fdivl
sbb
inc
pop
xchg
dec
adc
or
mov
xor
add
xchg
int
pop
in
nop
xor
push
ja
iret
jns
jg
mov
cmp
xor
inc
hlt
and
rorb
jge
pushf
stc
pop
aas
sbb
test
cmp
add
nop
push
repz
adc
clc
sbb
mov
jns
gs
stos
xor
sbb
mov
pop
fcomps
push
jecxz
push
insl
fldl
cmc
je
adc
jns
mov
lcall
movsl
das
loopne
push
xchg
dec
imul
cwtl
icebp
jge
addl
inc
sub
ss
mov
fisttpll
dec
fimull
or
jb
xchg
lahf
mov
test
xchg
sbb
mov
dec
push
jnp
sub
shrb
sti
fidivrs
push
inc
dec
imul
lods
lret
mov
cmpsb
movsl
ret
int
loope
lahf
rorb
or
push
lods
sbb
out
mov
cmp
xchg
out
mov
aas
xchg
ficomps
icebp
jne
sbb
xchg
or
mov
rcll
or
shrb
or
jl
loopne
test
repnz
stos
fimuls
xchg
xor
cwtl
repnz
mov
in
test
jno
out
mov
ret
rorl
cld
frstor
dec
lret
cmp
adc
ret
jmp
inc
in
pop
jne
aam
sub
add
les
lock
and
out
push
add
rcr
push
in
mov
add
cmc
pop
inc
inc
arpl
inc
sarl
xchg
in
xchg
inc
jle
outsb
sbb
imul
pop
in
pushf
mov
dec
or
mov
and
inc
xlat
or
push
adc
outsl
sti
push
test
std
add
adc
inc
pop
push
arpl
add
push
fwait
divb
movsl
adcl
cwtl
out
jns
xlat
cmp
dec
push
loop
mov
jmp
pop
and
aaa
sahf
xlat
in
jmp
push
daa
and
push
lods
adc
rcrl
sbb
ds
lret
mov
popa
movb
jge
ljmp
mov
and
ja
jno
mov
test
aam
mov
jmp
out
gs
ljmp
sbb
adc
fs
mov
pop
aas
sbb
push
mov
fwait
scas
loop
xchg
jne
stos
push
cmp
test
dec
jbe
jmp
lock
andb
inc
mov
add
icebp
incb
push
adc
and
mov
cwtl
mov
popa
bound
push
lcall
popa
inc
push
cmpsb
sub
mov
sub
dec
mov
rol
cli
cmp
aam
pop
dec
xchg
fisubl
movb
sub
jmp
fwait
sbb
loop
and
pop
sub
lahf
xor
adc
insb
out
pop
sti
add
dec
sti
dec
out
clc
sbb
mov
stos
jecxz
das
xor
loop
jmp
cmpl
ss
adc
adc
mov
cli
mov
mov
mov
icebp
xor
dec
scas
xor
cld
and
mov
lret
fdecstp
lret
repz
xor
sub
out
repnz
testl
andb
sbb
jns
negl
mov
adc
imul
repz
sub
and
fiadds
loopne
movsl
dec
jnp
and
aas
cmovbe
cmp
int3
xchg
dec
ds
mov
jnp
mov
jecxz
mov
add
dec
fisttpll
les
and
cld
stc
add
xchg
and
rcrl
cld
lcall
sub
push
adc
xor
mov
cmp
xchg
xchg
insb
pop
adcl
and
mov
in
scas
pusha
push
or
dec
mov
shll
add
mov
repnz
adc
imul
jnp
dec
add
pop
ret
shl
fbstp
sbb
xchg
add
lods
mov
lahf
push
fcoml
fstps
test
dec
testb
fsubs
int3
subb
dec
jge
xor
scas
dec
xchg
cwtl
pop
out
mov
dec
xchg
cmp
iret
jns
in
dec
imull
das
iret
out
lods
sahf
inc
xor
sub
push
fsubrl
pop
lahf
or
cmp
sbb
fldt
addr16
xor
xchg
jg
dec
lods
out
scas
dec
jge
call
jle
xchg
xor
push
popf
pop
daa
mov
icebp
out
inc
fs
dec
loop
cli
insl
outsb
push
pop
push
repnz
xor
mulb
xchg
sbb
xchg
pushf
mov
cld
cld
pop
xchg
dec
mov
jg
inc
pop
pop
pop
iret
pop
mov
xorl
js
and
add
popf
idiv
lret
add
jae
popf
mov
rclb
push
pusha
add
fsubrs
sub
stos
pop
add
mov
notl
in
fmuls
lret
dec
inc
mov
outsb
cmp
push
mov
jbe
aad
inc
and
xlat
cltd
fidivl
push
inc
sub
push
adc
loope
inc
mov
jg
loopne
fwait
lcall
inc
imul
loope
stos
ds
push
in
jb
mov
ljmp
iret
mov
jge
sub
add
jl
mov
lret
push
je
cmpsb
lods
adc
adc
jl
mov
imul
push
rolb
lret
int
pop
xchg
push
xchg
dec
inc
cmp
shlb
dec
inc
add
fs
test
adc
fcomps
scas
mov
clc
in
mov
out
push
test
mov
pop
aad
insl
push
mov
ret
and
dec
inc
jp
mov
int3
mov
rorb
iret
pop
inc
cld
xchg
fisubs
dec
into
mov
inc
and
mov
pop
sbb
jp
std
mov
leave
in
lret
sbb
aas
xchg
add
add
push
lods
lds
cmp
das
aam
or
js
dec
call
push
incl
xchg
cmp
or
rcrl
subb
dec
in
in
jo
xchg
fists
dec
loope
cld
in
mov
dec
inc
insl
jle
sub
mov
out
jo
int3
and
pusha
sub
pop
jns
fbld
pop
push
es
aad
cs
mov
aam
xlat
push
jl
testb
fistpl
dec
ja
and
mov
aas
dec
pop
das
inc
lock
fdivl
mov
cmp
fdivs
inc
sahf
scas
mov
add
dec
ffree
pop
mov
dec
loope
push
rorb
push
or
sub
ret
push
mov
add
pop
dec
popa
xchg
push
sub
sahf
sahf
mov
and
fistpl
ret
cmp
je
cli
lret
xchg
cmc
adc
pushf
es
out
popa
in
cmp
mov
shrl
push
or
mov
jg
mov
pop
out
addl
out
je
sub
in
pop
dec
cmpsl
dec
and
into
xor
jns
xchg
inc
subl
inc
or
ret
pop
mov
cmc
jge
jmp
ret
testl
sub
imul
dec
stos
int3
jae
fiadds
dec
cmp
rolb
pop
repnz
push
inc
sarl
sub
or
pop
daa
push
jae
in
cltd
imul
in
leave
push
mov
fcmovne
and
mov
dec
add
in
es
xor
dec
inc
xchg
lds
adc
and
sub
iret
xor
jae
jne
testb
pop
and
jl
sbbl
jge
push
test
jmp
adc
and
std
pop
pop
test
push
lcall
fstps
mulb
leave
out
shrl
loope
sbb
xchg
movsb
jmp
cli
mov
das
xchg
adc
mull
testl
sahf
inc
inc
bound
add
dec
or
in
mov
test
inc
sub
lods
pop
inc
fmul
or
mov
lret
cmp
dec
mov
int3
cmovns
dec
out
mov
shlb
jae
test
in
popf
cmp
test
dec
in
in
and
iret
sbb
pop
xor
xchg
adc
pop
add
cmp
mov
das
nop
ja
js
repnz
pop
or
mov
mov
sahf
or
fs
mov
call
cmp
and
inc
cmp
iret
xor
outsl
in
inc
sbb
dec
mov
xorl
out
movsl
ja
sbb
push
lds
dec
dec
out
outsb
repnz
loop
or
fcmovnb
std
sbb
pop
inc
scas
shlb
sub
clc
mov
insb
fsubp
lahf
das
faddp
cli
add
icebp
inc
xor
sbb
orb
sti
push
gs
cs
ja
sahf
pop
push
adc
mov
push
das
mov
loop
aas
fucomip
int
cmp
pusha
stos
sub
addr16
pop
xchg
inc
inc
sarb
loopne
repz
cs
mov
stc
imul
pop
jne
fdivrl
mov
scas
cmpsl
je
sbb
and
imul
mov
jge
xchg
jle
jp
jge
inc
or
pushf
sbb
sar
mov
adcb
dec
mov
sbb
add
cwtl
adc
pushf
xchg
cmp
cmpsl
sbb
xor
adc
sub
push
scas
outsl
insl
rol
sbb
mov
xchg
cmp
fisttpll
mov
lods
sbb
jge
mov
cltd
xchg
ds
mov
punpcklwd
and
jge
mov
in
test
aad
jnp
jmp
rol
pop
and
mov
lcall
cld
jns
adc
fisttpl
or
or
jae
mov
or
mov
scas
jmp
mov
lahf
jle
idiv
mov
mov
popa
mov
lcall
repnz
addr16
push
repz
shrl
inc
cmp
stos
icebp
mov
sti
adc
mov
enter
in
fs
or
call
imul
mov
std
add
mov
xor
sbb
icebp
movsl
sarl
rolb
testl
popf
cmc
outsb
jmp
xor
jb
aas
pushf
cmpsb
xchg
jl
fsubrs
loopne
ja
mov
push
dec
jb
test
pushf
popa
dec
or
test
subl
jmp
ss
sahf
out
or
add
fnstcw
pop
sub
xor
ljmp
adc
mulb
es
loopne
insb
mov
mov
fstpt
dec
pop
sbb
sti
xchg
loop
cmp
jo
ficompl
adc
cs
pop
popf
addr16
or
xchg
cmpsl
std
outsb
sbb
adc
hlt
call
and
mov
mov
sbb
jb
push
insb
ret
dec
out
mov
mov
dec
and
pop
and
adc
test
push
inc
in
repnz
pop
pop
rcr
pusha
xor
stc
inc
sub
push
addr16
pop
jae
repz
pop
sub
lret
in
sbb
or
jle
xchg
add
mov
pop
or
das
xchg
pop
pop
or
add
pop
inc
ret
sbb
sti
cmc
jno
ljmp
lahf
sub
leave
cmp
mov
shl
or
dec
cmp
mov
in
xchg
xor
mov
pop
repnz
dec
shlb
mov
jo
inc
and
ja
mov
testb
imul
sbb
es
mov
test
sbb
loope
push
mov
lret
scas
je
dec
idivb
dec
andb
sti
loop
ss
fs
dec
aaa
cs
jnp
jnp
cwtl
dec
das
shl
cs
mov
jbe
call
scas
inc
std
jbe
pusha
imul
jle
jg
xchg
xor
repz
or
push
repnz
sbb
test
or
out
jge
jns
test
dec
xorb
mov
call
and
aad
out
mov
fs
inc
adc
pop
and
aam
mov
sub
dec
outsb
xlat
xlat
cmpsl
rcll
sbb
icebp
imul
in
xchg
pop
mov
push
push
stos
pushf
cwtl
les
jp
sub
jp
js
dec
or
pop
rep
pop
out
repz
test
cld
jnp
les
ljmp
xchg
mov
or
cltd
and
or
cmpsl
cli
jo
mov
mov
stc
pushf
in
mov
xor
popa
jle
popf
adc
jle
adcl
inc
imul
out
dec
mov
lods
and
pop
cmpsl
sbb
sbb
movsl
and
cs
pop
sub
fwait
push
sub
cmp
adc
repz
jne
mov
and
jb
adc
xchg
out
mov
pop
fldt
add
jo
xchg
cmp
cmp
inc
inc
sti
xor
mov
pand
pop
dec
nop
test
shlb
dec
test
adc
hlt
and
jns
xor
push
mov
jecxz
mov
out
pushl
iret
stos
mov
gs
mov
incl
leave
push
stc
rcl
inc
cmpsl
dec
sti
aad
sub
mov
xchg
das
add
test
addl
adc
inc
das
int
sbb
filds
mov
mov
inc
dec
sub
ja
fisttps
add
stc
imul
xor
loop
xchg
pop
enter
pop
pop
movsb
lahf
ror
rcrl
push
test
xchg
fists
inc
adc
lods
push
jns
mov
int3
int3
inc
rclb
mov
fdivr
test
sub
ss
xchg
jae
dec
jge
adc
inc
mov
in
loopne
dec
aaa
mov
repz
pusha
and
sub
data16
xchg
push
in
cwtl
mov
sub
push
cmpsl
push
sbb
jo
adc
and
jecxz
add
sti
sub
mov
clc
mov
mov
xchg
xorl
and
add
std
enter
in
mov
fdivs
stc
or
xor
xor
mov
push
shrb
pushf
jns
in
ja
ja
cmp
sub
mov
int
mov
mov
push
jne
or
mov
adc
mov
cmp
and
pop
pop
xchg
xor
fnstsw
stos
stos
lret
mov
pop
mov
sub
andl
lcall
xchg
pop
adc
fs
arpl
cmp
je
mov
xchg
ss
pop
jg
lock
scas
xchg
cmp
xchg
adc
scas
lods
std
lods
jp
xchg
outsl
test
push
movsb
sbb
push
push
sbb
lret
xor
dec
mov
pop
ljmp
std
and
inc
outsb
setl
rcr
add
pop
test
lahf
cmp
cmc
fwait
call
shl
mov
inc
xchg
std
mov
js
xchg
loope
fistpl
jl
orl
lods
pop
xchg
enter
inc
scas
xchg
xor
scas
ljmp
sbb
inc
xor
arpl
and
jnp
jo
xchg
mov
pushf
repz
push
adc
into
popa
testb
and
enter
das
rcrb
jmp
fnstcw
mov
jno
mov
lods
mov
jbe
mov
in
dec
in
lcall
mov
mov
daa
scas
jns
test
mov
stos
jmp
lds
call
dec
js
enter
adc
test
dec
jecxz
ljmp
fsubrl
jbe
inc
movl
and
int3
out
lahf
pushf
lea
jns
popa
leave
lahf
or
cmp
xor
xchg
cmp
fcompl
int3
cmp
xchg
fucomp
mov
push
sarl
flds
fistl
jp
add
cmp
and
cli
xor
test
movsl
cmp
loop
push
sbb
imul
sub
loop
push
push
lea
ret
and
pushf
inc
cmp
jg
or
or
mov
cld
inc
dec
pop
and
ret
push
add
xchg
addl
movsb
lds
jmp
or
push
ffreep
inc
and
fdivs
daa
flds
fbstp
icebp
dec
cmp
bound
repz
insb
jb
sti
sbb
cld
push
fidivs
jb
mov
add
add
inc
loopne
jmp
push
loopnew
cmp
and
not
stos
test
adc
dec
pop
push
lcall
sbb
aam
cs
adc
sbb
loope
je
pushf
and
jne
xchg
sub
adc
rcr
mov
sbb
inc
mov
in
pusha
jns
xchg
xchg
and
xchg
mov
pop
push
sbb
cmp
mov
aad
mov
inc
into
cmp
or
enter
mov
aas
imul
fnsave
jnp
stc
sahf
sahf
mov
call
push
in
xchg
and
sub
scas
nop
or
pop
sbb
in
insl
fldcw
xor
or
loope
pop
push
scas
pop
sub
mov
les
mov
fistl
mov
in
inc
xor
jbe
jo
out
xchg
repz
cmp
pusha
in
pop
push
lcall
jl
enter
inc
inc
lea
mov
enter
lods
leave
jge
mov
cmp
dec
scas
pop
pop
outsb
in
inc
movsl
or
and
mov
stc
repz
jmp
or
pop
int3
lret
pop
or
inc
stos
xor
mov
jbe
jmp
test
notb
push
jmp
and
stos
mov
dec
jp
and
dec
ss
movsl
not
jns
pop
out
xchg
imul
movsb
mov
cmpl
scas
fsubr
out
sarb
rcr
pop
mov
cwtl
ds
push
xchg
test
and
and
push
pop
fildl
mov
sub
and
mov
test
pop
adc
push
sub
sub
out
xor
lea
pusha
sbbl
push
pop
negb
cs
mov
adc
or
xchg
pop
movsb
sbb
repnz
nop
out
sub
mov
jg
push
cmp
push
fcmove
sahf
std
jne
js
popf
mov
ret
dec
js
or
jae
pop
dec
mov
inc
mov
test
fldt
or
sub
cld
cmp
cltd
ljmp
fdivr
je
fwait
inc
out
jb
dec
mov
mov
das
ret
mov
pop
pusha
push
cltd
ds
dec
xchg
stos
push
and
lods
inc
cmc
sub
pop
out
daa
xchg
cmpsb
jno,pn
jmp
mov
inc
out
in
sbb
outsl
or
jle
incb
adc
adc
mov
sub
imul
jbe
adc
mov
imul
ror
pop
jl
lods
sub
aam
lods
mov
jns
cmc
lds
and
mov
inc
adc
in
testl
push
rcrb
mov
push
roll
imul
dec
sti
sub
mov
ljmp
jl
int3
sub
pop
into
inc
enter
sbbb
xchg
pushf
xlat
push
push
cmpsb
test
inc
in
ss
fisubs
loopew
mov
jp
adc
and
cmp
popf
sbbb
xor
sub
push
in
mov
fdivrl
insb
sbb
and
mov
xchg
fs
dec
or
sub
pusha
lds
or
xor
dec
lea
sarl
call
mov
fcoml
push
inc
adc
dec
pop
mov
lahf
lret
shl
les
inc
addr16
and
repz
out
xchg
mov
jl
fwait
xchg
jns
insb
push
repnz
push
mov
push
mov
iret
and
xor
xchg
aad
cltd
cmpsb
inc
in
xchg
cs
mov
push
xchg
aam
xorl
jo
inc
push
scas
dec
xchg
stc
out
jle
lock
loopne
and
jp
shlb
inc
insl
adcb
ja
and
add
ret
pushf
push
mov
in
sub
mov
jae
push
rcrb
cmp
lods
popa
rorb
xchg
outsb
mov
fidivrl
out
pop
and
scas
dec
pop
ds
jle
inc
lret
adc
adc
popf
push
loope
sub
aaa
or
imul
jp
adc
adc
sti
jge
std
iret
xor
dec
mov
lea
icebp
leave
repnz
movsl
sbb
fdivrl
dec
lcall
mov
int3
or
xchg
adc
adc
inc
adc
inc
xor
mov
dec
insl
push
aas
sub
jnp
test
call
jns
cmp
cmp
outsb
fdivrp
xchg
adc
mov
in
ficoms
sbb
call
add
dec
sub
ret
add
cmp
fisttpll
data16
outsb
iret
cmp
gs
pushf
and
mov
pop
push
or
test
inc
aas
into
dec
fadd
mov
mov
cld
push
adc
adc
rorl
sbb
jecxz
or
loopne
mov
cmc
cmpsl
mov
lcall
ljmp
inc
mov
mov
pushf
into
xchg
std
test
dec
pusha
xorb
clc
dec
aaa
push
or
adc
cmp
jmp
lds
lahf
in
xchg
lret
xchg
jge
cmp
mov
fstl
push
mov
mov
sub
sbb
cs
push
repz
outsb
rcl
pop
into
push
rcl
out
test
out
xor
jmp
in
mov
sub
outsl
pop
sti
push
push
push
jmp
insb
int3
add
add
lret
push
or
add
or
cmp
pop
addl
fisttpll
add
ja
xor
sarb
push
jnp
jg
or
and
inc
daa
jb
daa
aas
orb
dec
mov
push
out
mov
or
addr16
je
leave
pop
movsb
mov
jno
mov
mov
popl
push
xchg
jno
sub
fsubs
mov
xlat
imul
cwtl
inc
jg
jp,pt
mov
out
ret
andl
jb
aad
push
stos
jp
cli
aad
ret
ret
or
push
xchg
jp
adc
hlt
sbb
and
outsb
lds
pop
or
pop
mov
or
pop
addl
mov
pop
jecxz
nop
sbb
loopne
cmp
clc
dec
inc
mov
pop
ficoml
push
jo
into
mov
xchg
cmp
jle
call
movsl
addb
dec
sbb
mov
fucomip
div
mov
daa
dec
pop
add
out
push
push
mov
in
incb
in
cmpsb
dec
mov
xlat
mov
xor
push
mov
rcrb
int
das
push
push
sbb
stos
mov
mov
jmp
inc
inc
jmp
dec
add
cs
mov
jecxz
scas
mov
int
and
stc
stos
mov
jl
pop
dec
cmp
rclb
cltd
sbb
jbe
jecxz
in
loope
push
jl
addr16
ja
stos
cmp
negb
xor
push
xlat
mov
sti
and
hlt
sub
sbb
divb
dec
xor
sti
roll
in
sub
jg
nop
mov
pop
ret
push
fwait
mov
or
jp
sti
and
dec
sbb
pop
sbb
outsb
cs
sub
cmc
adc
fldt
imul
out
mov
dec
mov
jns
jno
stos
mov
push
xor
fucom
loopne
mov
or
sbb
ljmp
push
sbb
cmpsb
adcl
cmp
stos
inc
xor
push
ret
jbe
jecxz
call
leave
ds
sbb
lods
sbb
sub
sbb
xchg
mov
imul
mov
or
cmp
jle
and
dec
jl
mov
outsl
mov
lock
ja
loop
xchg
push
push
jmp
lcall
push
xor
movsb
mov
xchg
stos
mov
xchg
ds
or
mov
nop
outsb
jp
sbb
xchg
cmc
ss
sbb
or
push
push
mov
jp
xorl
xchg
xor
insb
or
rorb
push
fdivrs
daa
jae
fwait
out
push
std
test
arpl
or
outsl
out
xor
adc
ds
sbb
cli
cmp
imulb
xor
loope
cli
jmp
mov
fistps
out
es
xchg
insb
xor
movsl
sbb
adc
inc
cwtl
in
shll
stos
loope
pop
fcom
mov
sub
lahf
in
push
add
mov
push
mov
pop
popa
or
jns
shrb
xchg
sbb
push
sub
push
push
xor
imul
test
cmp
push
and
arpl
test
dec
inc
aam
shlb
xchg
vpsrlq
adc
xor
out
iret
jmp
dec
lock
sbb
push
sbb
cmpsl
mov
loop
mov
sub
pop
inc
aam
pop
int
push
xor
mov
addr16
cmp
pop
imul
out
push
mov
inc
adc
testb
shlb
shll
sub
pop
cmp
imulb
jb
int
sub
dec
insl
shr
dec
dec
dec
hlt
shrl
fwait
lods
sarb
jle,pt
add
and
out
es
hlt
fs
dec
lcall
sbb
in
mov
into
xchg
inc
mov
pop
jbe
mov
mov
sti
push
outsl
sub
push
mov
jle
ds
shld
dec
data16
mov
xor
push
jp
cli
arpl
dec
sub
jg
sbb
imul
mov
hlt
iret
testl
loop
inc
push
inc
loopne
add
xchg
and
pusha
dec
repnz
aaa
andl
sub
aas
neg
fcompl
scas
pop
push
xchg
sahf
sbb
lret
inc
sbb
pop
loope
xor
jae
lods
jbe
inc
sahf
lock
sti
enter
jae
out
xor
lods
lahf
jle
and
mov
faddl
or
hlt
mov
repz
bound
pop
cmp
outsl
xchg
push
iret
xchg
adc
fidivl
sub
das
rcrl
mov
arpl
inc
push
pop
sahf
int
fs
add
or
add
pop
stos
mov
cmp
sti
in
jle
xchg
add
xchg
mov
js
add
test
dec
mov
int3
leave
test
stos
out
shlb
ljmp
mov
arpl
adc
mov
push
call
shl
imul
lock
mov
pop
jp
cmp
test
test
push
aas
loop
movsl
or
test
movsb
jne
repz
clc
pop
sbb
pushf
push
adc
dec
fisttps
fwait
repz
scas
ds
cli
ret
dec
ja
in
mov
popa
insb
mov
out
xchg
sti
test
gs
fcmove
out
xor
icebp
mov
pop
or
or
das
scas
xchg
sbb
pop
dec
into
jno
sub
daa
lahf
repnz
xchg
jecxz
add
ja
push
add
and
adc
pop
lea
jle
and
xor
dec
and
rorl
and
repz
shll
icebp
mov
push
test
loop
push
int3
push
jb
xchg
mov
out
sub
xchg
pop
xchg
inc
sub
scas
cmp
into
mov
enter
mov
movsl
add
test
imul
sub
lahf
dec
les
fidivrs
xor
pop
mov
movsl
test
outsl
push
jl
add
stos
mov
pop
out
jnp
pop
jno
arpl
jno
mov
or
or
mov
mov
inc
sahf
xor
movb
ret
mov
push
pop
lock
andl
cmp
sub
int
pop
fs
pop
add
sbb
aam
scas
lods
adc
pop
sub
pop
sahf
mov
or
mov
mov
leave
shll
les
shl
faddp
js
fimuls
mov
fistps
jge
sub
adc
test
sub
sub
pop
dec
mov
add
push
jnp
dec
mov
scas
add
jo
lods
mov
sub
jl
fidivrl
add
decl
inc
jecxz
adc
fwait
mov
mov
jo
je
out
divb
mov
sbb
cwtl
dec
je
sub
addb
rcrl
jp
je
test
arpl
add
dec
mov
xor
lcall
addr16
push
daa
sbb
es
call
inc
and
lret
cmpl
ja
cli
loope
jb
jmp
pop
fisttpl
pusha
ret
movsb
jp
addr16
lods
jp
daa
pop
std
pusha
or
push
stc
enter
sub
sbb
data16
dec
mov
cmc
addb
stos
sub
jp
movsl
dec
inc
mov
adc
out
testb
shlb
inc
repnz
inc
and
leave
sbb
aad
or
mov
cmp
jb
dec
xchg
mov
outsl
fcomip
push
add
xlat
adc
adc
cmp
sub
in
test
cmpsl
scas
xchg
mov
or
push
fcomi
pushf
xlat
cmp
jae
dec
mov
adc
into
loop
sbb
xchg
out
dec
xchg
fwait
cs
push
jge
repz
push
lret
fbld
and
inc
dec
lret
mov
sub
enter
imul
mov
cmc
data16
xorb
popa
sarl
shr
lods
repnz
orb
xchg
into
and
mov
enter
mov
stos
mov
vminpd
movsb
xchg
test
std
test
or
lcall
rcrl
adcb
scas
or
jb
and
subb
lods
insb
enter
sahf
fs
adc
mov
add
add
mov
dec
jg
pop
jp
mulb
in
pop
imulb
mov
pop
push
nop
and
and
shlb
cwtl
mov
call
sub
pop
pop
leave
dec
sti
mov
pop
adc
dec
rclb
mov
pop
push
xchg
stos
xor
push
mov
or
mov
imul
ljmp
cltd
lds
js
mov
and
ja
into
jns
int
push
cmp
shl
xchg
out
push
push
push
cli
xor
inc
xchg
fstps
imul
flds
addb
orb
pop
xlat
ret
xchg
aas
mov
push
lret
pop
rorl
fcompl
mov
sbb
mov
lods
mov
cmp
adc
jg
dec
xchg
shl
rol
pop
notl
or
and
inc
pop
lock
imulb
jns
mov
inc
jnp
lods
adc
pop
mov
in
dec
scas
aam
or
loop
adc
neg
mov
fbstp
pop
mov
stc
and
in
xorl
js
add
sub
mov
adc
out
push
mov
and
fwait
mov
lds
xor
mov
cli
movsl
rol
aas
testl
push
cmp
jmp
fldcw
icebp
fwait
mov
aas
sarl
mov
jl
jp
stos
stc
sbb
testl
lea
sub
dec
mov
push
sbb
jl
mov
sub
sti
sbbb
jns
cmp
test
or
mov
leave
je
in
inc
push
lret
popa
decb
mov
xor
mov
popa
sub
arpl
cs
mov
mov
add
insb
scas
addl
xchg
movsl
leave
out
and
jnp
psubsb
push
mov
repnz
ret
cwtl
pop
jne
mov
lods
push
js
mov
xchg
scas
fidivl
ret
loope
push
lock
dec
nop
push
rorl
mov
test
fucomp
clc
out
and
call
jg
xchg
divl
cmp
gs
imul
or
push
cmp
sbb
or
xlat
or
out
cmp
fisubs
sub
dec
aam
dec
or
inc
imul
ret
mov
leave
in
cmpsb
and
xchg
pop
and
int
cwtl
scas
cli
aaa
or
dec
mov
cmp
jp
or
jno
dec
sbb
sub
xor
jae
cld
mov
stc
mov
jecxz
in
addr16
pop
lahf
into
push
push
mov
jbe
mov
push
inc
and
je
add
mov
hlt
sub
xchg
movb
sub
fsubp
adc
mov
xor
rcll
test
pusha
mov
xchg
mov
pop
cmp
ljmp
rcl
arpl
push
inc
ljmp
gs
or
rcl
push
and
iret
gs
inc
cmc
dec
sbb
push
push
js
rcrl
in
pop
dec
xlat
push
mov
sbb
mov
cmpsb
pusha
inc
xchg
in
into
lock
std
push
scas
sbb
or
mov
in
ja
sahf
mov
xchg
cwtl
sbb
test
insl
ret
jno,pt
aad
sub
add
repnz
and
pop
dec
movsl
lahf
push
inc
es
outsb
js
jns
push
popf
xorb
orl
sub
leave
subb
shrb
dec
lahf
push
sbb
add
push
lds
iret
inc
fidivrs
aad
movsl
fcoml
xor
pop
add
ja
add
test
adc
lret
bound
or
subb
sub
outsl
jl
pop
cmp
pop
add
cmp
sti
lret
fcoms
mov
call
pop
scas
rcrl
cmp
inc
fbld
pop
pop
jge
mov
iret
lods
aaa
mov
pusha
lea
xor
pop
push
scas
aas
adc
outsb
es
jno
fistpll
pop
insb
scas
cmpsb
pop
sti
movsl
sub
fisubrs
or
cmpsl
inc
add
push
jl
sub
aam
shll
testb
inc
fisubs
dec
cmp
gs
dec
int
insl
repz
or
out
stos
xchg
sub
repz
mov
fisubrl
je
aad
mov
aas
adc
js
arpl
cmp
into
push
lea
bound
sti
add
inc
xchg
adc
bound
arpl
xchg
adc
inc
scas
push
push
add
pop
xor
mov
pop
cmpsb
in
push
add
mov
inc
pop
lock
mov
das
pop
arpl
divl
cli
dec
loopne
out
mov
cltd
and
shlb
leave
mov
rorb
xchg
xor
inc
jo
aas
jl
dec
xor
lods
pop
sarl
cmpsl
xchg
ror
ficompl
scas
cmp
pop
sti
inc
add
inc
mov
dec
pop
pop
scas
ja
pop
das
int
push
dec
mov
xchg
lret
leave
repnz
xor
pop
call
cli
in
bswap
or
push
mov
jnp
shl
hlt
jae
sti
push
fidivrs
stos
outsb
and
mov
sbb
cmp
int3
mov
xchg
or
ds
dec
fsubr
aas
ljmp
pop
aam
stc
ret
or
dec
push
movsbl
mov
ror
out
cmp
sahf
faddl
fucom
or
mov
push
push
sub
cmp
pop
pop
xchg
push
out
mov
cmc
mov
sub
dec
cmp
or
lds
push
out
and
pop
or
lds
xor
mov
ljmp
aam
pop
into
and
std
mov
mov
inc
sub
mov
mov
dec
xlat
mov
add
outsb
lahf
mov
mov
insb
bound
movsb
pop
fcompl
and
xlat
clc
adc
int
xlat
add
popa
leave
inc
xchg
icebp
nop
mov
push
or
fdivr
hlt
xchg
aaa
add
push
roll
in
xor
mov
mov
jo
or
sbb
xchg
imul
mov
adc
cwtl
xchg
add
cmp
jns
xchg
lahf
mov
mov
pop
push
aas
in
push
xchg
nop
pop
adc
ret
jno
insb
in
mov
mov
and
pop
lret
fstpt
loope
dec
sbb
push
mov
push
repnz
add
roll
repnz
std
adc
in
nop
mov
shl
pop
mov
mov
fcmovne
sub
lret
pop
mov
add
xchg
cld
cmp
xchg
adc
aad
stos
xchg
and
ret
ret
scas
fstpt
pop
mov
xchg
jbe
popf
dec
fwait
mov
mov
fwait
call
lock
lods
addr16
xor
adc
jl
in
add
in
pop
sub
mov
xor
and
inc
shrl
jbe
cli
xchg
push
addr16
jae
sub
jns
adcl
xlat
cs
cmpsl
daa
jg
fisubrl
xchg
aad
xchg
movsb
mov
push
test
outsl
std
fisubrs
insl
mov
cmp
adc
cwtl
lret
imull
and
xor
and
cmp
stos
loope
gs
cmpb
mov
mov
push
mov
dec
outsb
xor
les
adc
mov
lock
pop
inc
int
lcall
mov
lret
sbb
pop
inc
cwtl
mov
js
inc
int3
shlb
pushf
subl
jecxz
xor
ret
dec
pop
cmp
adc
lock
cld
ss
mov
mov
filds
sbb
jo
and
jae
xor
mov
decb
or
jecxz
jns
into
sbb
stc
mov
gs
andl
jne
into
pop
clc
dec
push
dec
push
cld
incb
popa
aad
imul
repnz
ja
push
jg
ret
push
dec
sbb
mov
loopne
pusha
jmp
push
mov
mov
add
dec
stos
inc
sbb
divl
and
fsubs
jge
cs
stc
mov
push
in
lea
sub
dec
mulb
repz
add
lcall
fimull
sub
cmpb
and
jl
inc
mov
mov
push
icebp
pop
jbe
sub
xor
lret
out
rcl
lods
inc
push
shrb
es
mov
pop
bndldx
jle
or
cmc
and
hlt
pop
enter
cmp
fs
imul
ja
push
xchg
rorl
fstps
mov
ret
rcrb
fsubrs
jecxz
xchg
pop
cmpl
cmc
rorl
push
xchg
pop
ret
hlt
sub
repnz
xchg
xchg
add
jnp
fs
jle
mov
cmp
loop
ljmp
xchg
addr16
push
imul
rorl
int
iret
pop
bound
fwait
loope
sbb
push
insb
dec
outsl
mov
in
sbbl
call
out
jae
popa
mov
repz
jp
mov
lock
push
cmp
xlat
ja
xchg
xchg
ret
jmp
push
xor
xor
enter
in
pop
add
sub
cmp
gs
pop
jg
ret
int3
sub
pushf
cmpsb
cld
out
cmpsb
cmp
adc
adc
loopne
or
mov
adc
popa
jne
and
and
pop
je
add
mov
loopne
and
test
mov
inc
lods
pop
add
pop
leave
jg
es
mov
or
xchg
fistl
in
movsb
inc
dec
xchg
outsb
push
test
cmp
pop
push
cmp
scas
mov
punpckhdq
xchg
das
int3
or
test
sub
mov
and
inc
call
push
popf
stos
push
sbb
add
xchg
cmp
xor
xchg
cmp
cmp
stos
dec
dec
mov
xchg
shrl
inc
shr
adc
push
xchg
xchg
jmp
or
push
mov
adc
and
sub
iret
pop
mov
popa
push
jbe
pop
stc
jb
cmp
add
outsl
orb
sub
mov
adc
insb
pop
out
dec
jbe
cmpl
fdivrs
pop
dec
sub
aad
inc
mov
xchg
sbb
into
movsl
sbb
out
cs
dec
mov
ss
sub
mov
mov
pop
and
push
sub
xchg
jno
pop
cwtl
enter
xchg
xorl
js
sti
mov
and
ret
mov
aad
fs
xor
jne
inc
nop
stc
clc
push
in
jmp
pop
jmp
jge
dec
jl
aad
mov
push
lods
fisttps
sbb
sbb
mov
stos
pop
mov
pop
cmp
outsb
jmp
aaa
lahf
stos
in
sub
or
mov
fiaddl
jmp
mov
mov
mov
clc
jnp
insb
enter
fsubrs
inc
lods
sbb
push
mov
or
push
icebp
cmpsl
push
mov
out
jne
rol
and
cltd
add
outsl
jb
and
mov
dec
lret
rolb
rcll
pop
mov
mov
les
mov
loope
inc
xchg
push
in
lret
add
xor
pop
cld
ljmp
xchg
bound
test
inc
sbb
and
out
lret
fisttpll
ret
cmovne
fcmovb
xlat
mov
xlat
and
xor
inc
fs
int
out
or
add
enter
mov
xlat
push
jnp
pushf
dec
clc
mov
xchg
mov
xchg
loope,pn
ja
mov
leave
mov
scas
mov
movsb
nop
jle
faddl
aad
push
rcrl
adc
jbe
mov
repz
shrb
push
mov
xor
inc
inc
inc
mov
pop
jge
fsubl
pop
lea
sahf
in
mov
sbb
and
sub
add
push
in
or
stos
scas
scas
pop
ret
call
repnz
add
jp
mov
or
sbb
sbb
dec
mov
xor
pop
les
enter
test
fwait
lret
test
mov
push
andb
hlt
stos
mov
jmp
daa
mov
sahf
sub
xchg
leave
in
iret
add
mov
das
test
add
mov
xorb
mov
push
jae
sbb
movsb
pop
in
outsl
adcl
or
cli
movl
sahf
inc
aad
in
lret
pop
iret
mov
pop
sbb
mov
xchg
addl
mov
jle
lock
ja
adc
out
mov
xor
fildll
lods
and
xchg
xchg
das
mov
fwait
out
xchg
and
std
mov
jp
mov
jmp
xor
ljmp
and
rclb
and
fidivs
jne
fsubl
sub
inc
in
test
jae
xor
and
jbe
imul
add
enter
and
cmp
rcrl
sub
pop
inc
in
ret
je
xchg
cwtl
fmuls
rolb
mov
movsl
jge
and
addr16
fsubp
mov
dec
loop
gs
arpl
out
cmp
cmp
stos
test
js
xchg
fildll
movsl
xchg
or
cmc
stos
inc
cs
imul
sbb
mov
sub
ja
mov
push
repnz
xchg
imul
and
add
xchg
inc
lcall
lods
ja
dec
inc
cmp
jmp
pop
nop
pminub
shrb
nop
sbb
cmpsl
addb
js
inc
std
cmp
inc
pop
addl
fstp
adc
fs
adc
push
inc
jg
adc
mov
mov
dec
inc
xchg
daa
mov
fcmovnu
mov
push
pop
dec
fldt
sub
fnstenv
lods
repz
mull
mov
into
lret
out
shrl
xchg
mov
int
or
xchg
inc
dec
mov
ds
in
mov
out
jecxz
out
ss
loop
jnp
push
cmp
cltd
test
scas
and
ret
in
in
sbb
xchg
pop
dec
aaa
fsubrl
hlt
add
loopne
sahf
mov
cs
jo
adc
mov
loopne
add
arpl
pop
sub
add
out
test
dec
mov
outsl
fstp
outsb
divl
std
push
push
sub
loopne
ja
cli
pop
js
mov
mov
jmp
cmp
lahf
pop
icebp
mov
inc
in
or
add
outsb
repz
or
mov
int3
jne
push
cs
xlat
shrb
and
ret
clc
test
rolb
xor
add
inc
fmull
pusha
hlt
pop
andl
cmp
cwtl
sbb
push
pop
sbb
inc
loopne
pop
insl
dec
in
ds
fcmovnu
jp
jp
lods
call
xor
pop
dec
out
ror
int3
and
addr16
adc
add
add
imul
std
mov
jbe
or
push
push
aas
jns
or
lret
sar
cmp
push
jmp
push
bound
lods
cmp
xchg
jg
fisubs
call
adc
hlt
dec
pushf
or
inc
inc
push
pop
xchg
mov
cld
xchg
adc
out
jge
aaa
rcr
ds
sbb
cltd
pushf
mov
mov
xlat
mov
roll
pop
orb
addr16
jg
dec
adc
jecxz
imul
xor
nop
cmp
lret
aas
pop
clc
sub
inc
out
jno
mov
add
rclb
std
iret
orb
into
je
push
sbb
aad
push
loop
adc
cltd
in
mov
hlt
push
and
rep
scas
cltd
jns
sbb
xor
xchg
outsl
push
dec
jecxz
sbb
adc
in
mov
fstps
pop
fwait
in
mov
icebp
aad
xchg
mov
pusha
sti
xchg
adc
add
popf
stos
adcl
es
insb
jae
lds
outsb
cmpsl
inc
or
stc
mov
outsb
int
fldt
mov
out
filds
xchg
inc
insb
mov
outsl
pop
imul
mul
aas
in
das
daa
sub
push
xor
ljmp
sahf
dec
std
dec
insb
push
sbb
inc
insl
pop
lahf
icebp
cmp
arpl
in
loope
in
xchg
jno
xor
ljmp
scas
dec
clc
mov
or
sbb
add
ja
stos
fstps
inc
popf
adc
mov
ljmp
mov
out
cmp
dec
mov
push
xchg
adc
jmp
cs
ja
xchg
mov
mov
cmc
adc
push
in
outsl
scas
enter
sti
inc
mov
mov
or
sahf
icebp
cmp
dec
pop
lock
xchg
add
sbb
sub
jge
cmp
insl
push
andl
xor
das
shlb
mov
xchg
ss
fmul
push
push
rorl
loope
data16
xchg
es
xor
jecxz
movsb
lcall
out
xchg
adc
jae
adc
push
das
push
test
lret
gs
dec
mov
xchg
xor
je
or
mov
pop
mov
mov
xchg
adc
in
push
movsl
mov
scas
sti
inc
icebp
pop
add
jmp
gs
aaa
sbb
adc
loopne
xchg
decl
or
not
pop
cmc
mov
leave
inc
lret
xor
movsb
pushf
mov
ds
dec
sub
bound
shrl
sbb
pop
fwait
in
jmp
sbb
xchg
cld
or
outsb
movsb
hlt
fwait
std
inc
std
cmpsb
in
jbe
daa
lods
lretw
call
shll
xchg
pop
cmp
les
xchg
das
pop
bound
xchg
arpl
jp
pop
sti
sub
sub
mov
cmp
pop
cs
and
mov
std
xor
push
or
pushf
or
mov
sbb
setl
mov
jae
and
xchg
add
push
or
fmul
pop
cltd
bound
inc
dec
cld
idivb
push
lea
addr16
push
and
js
sti
adc
lock
adc
fdivrs
cmp
scas
std
xchg
mov
mov
les
mull
mov
cmp
push
out
cmp
pop
sub
aam
outsl
inc
test
stos
jb
mov
in
cmc
sbb
jmp
out
stc
imul
pop
or
loopne
sub
inc
pop
mov
fmull
and
insb
mov
and
xchg
arpl
fdiv
mov
pop
aam
rcrl
imul
imul
push
ja
rorl
mov
pop
mov
mov
icebp
add
xchg
repnz
adc
cmp
hlt
inc
push
xchg
cmp
jp
xor
dec
xlat
fwait
add
hlt
cs
pop
xchg
cld
xchg
xchg
popa
sbb
pop
dec
jns
lock
js
ja
mov
xor
jle
pop
js
sbb
ja
pushf
repz
mov
mov
mov
inc
fidivrs
ds
lret
insb
adc
pushf
icebp
jno
in
pusha
rolb
adc
xchg
sti
stc
cmp
mov
in
int3
xchg
loopne
test
fsubs
jge
adc
dec
jmp
je
dec
popf
push
ljmp
or
or
dec
repnz
sbb
inc
dec
shlb
arpl
aas
icebp
aaa
xchg
pop
movsb
xchg
mov
popa
or
mov
push
xchg
fucomp
int3
sbb
mov
test
mov
mov
pusha
fwait
aad
or
or
outsb
mov
cmpsl
iret
data16
ficoms
cs
jmp
lret
fisttpl
jmp
into
loop
mov
inc
xor
addl
cli
mov
js
mov
pop
push
in
in
or
mov
xorl
add
sub
xchg
out
hlt
and
xchg
mov
loop
add
arpl
cli
sub
or
mov
outsb
fnstenv
cmp
pop
pop
jo
hlt
xchg
inc
dec
insl
cli
push
in
lea
mov
fstpl
cmp
iret
les
mov
xchg
fistpll
xor
insb
pop
clc
inc
pop
xor
cld
cmpsb
lret
cmp
dec
mov
jns
lahf
outsb
ja
dec
gs
test
xchg
xor
aas
xchg
cmpsl
and
hlt
popa
mov
loop
out
sub
addb
fbstp
pop
mov
stc
sbb
xor
add
sub
sbb
inc
fmulp
push
push
in
leave
or
je
push
push
pop
cmp
nop
xchg
push
nop
push
adc
sbb
testb
mov
adc
mov
sti
sbbb
dec
inc
loope
aas
lock
in
iret
imul
sti
sti
inc
jecxz
ret
inc
aaa
sti
cmp
xchg
pushl
pop
jb
subl
mov
adc
sbb
mov
adc
subl
mov
je
rcl
shl
jbe
mov
pop
push
test
fisttpl
push
loope
mov
test
inc
dec
aas
or
inc
xor
pusha
pop
inc
aas
sub
movsl
mov
push
scas
pop
inc
adc
les
adc
pushf
xchg
lret
sbb
and
sbb
sahf
jbe
adc
insl
dec
mov
mov
sub
jge
hlt
fwait
fwait
xor
mov
int
adc
stos
imul
in
xchg
dec
pusha
sbb
ja
jle
sub
xchg
or
dec
push
xor
mov
pop
shlb
ja
in
inc
arpl
loope
movsl
xchg
inc
jmp
insl
cmp
daa
pop
repnz
and
jle
xchg
and
sti
rcrl
xor
cmp
mov
lods
xchg
cmp
or
fisubrl
shl
lahf
into
vmread
mov
in
mov
in
or
cmp
scas
lea
cmc
push
stc
stc
mov
loop
cs
xchg
inc
aaa
or
fdivrl
fldcw
jbe
push
sub
lock
dec
and
or
inc
fs
pop
lcall
int3
xchg
xorl
aad
sbb
subb
mov
mov
imul
or
push
push
inc
push
mov
push
xchg
out
jns
les
cmp
psrlq
xchg
sub
sub
add
dec
sahf
inc
xor
xchg
test
add
sub
lds
ret
xlat
sarb
addb
enter
adc
pop
jae
out
and
push
pusha
jg
add
cmp
out
mov
sbb
or
adc
push
popa
lods
ja
push
stc
mov
xchg
and
push
mov
ja
fsubr
in
icebp
fldenv
pop
inc
sti
cwtl
in
add
sbb
cli
xchg
js
push
pop
sti
mov
xchg
fcoml
lret
jne
rcrl
fsubs
hlt
sub
push
xchg
aam
sub
mov
xchg
je
fidivl
inc
sub
ret
sarb
int
dec
mov
bound
mov
mov
mov
adcl
arpl
xchg
xchg
je
aas
loope
sub
js
pop
int
mov
lea
imul
inc
insb
paddsb
pop
xchg
dec
inc
and
jb
cmpsl
imul
arpl
adc
mov
inc
sub
adc
pop
sbb
repz
xor
inc
pop
fsubrs
or
lods
psadbw
lret
dec
push
clc
cli
jle
jmp
inc
sub
push
insl
cld
mov
jne
inc
mov
xchg
lahf
inc
xor
lret
pop
pop
dec
or
subl
test
mov
pmaxsw
fs
cs
int3
jbe
cld
jno
add
push
xlat
stc
jns
loopne
sub
scas
loopne
hlt
movsl
inc
enter
stc
js
inc
cmpsl
data16
mov
hlt
call
push
dec
loopne
push
adc
pop
cli
cmc
mov
dec
mov
sbb
dec
test
sbb
ds
push
data16
mov
into
push
push
cli
xlat
inc
jmp
cmc
les
cmp
push
shlb
and
lahf
push
add
xor
cmp
ds
icebp
xor
out
sub
mov
adc
imul
and
cltd
cmpb
mov
mov
push
cmp
adc
sbb
jg
add
jecxz
into
js
jnp
pop
rorl
mov
cmp
in
inc
inc
mov
outsl
mov
sarb
cltd
pop
popf
mov
push
dec
push
jge
rclb
call
and
shl
push
push
xchg
insl
into
das
sbb
mov
cmc
fxch
fadd
hlt
mov
push
push
repz
fistl
fs
jecxz
insw
adc
insb
fidivl
sub
pushf
in
sbb
addr16
idivb
or
xchg
movsb
adc
cmpb
popf
add
jmp
dec
or
push
sub
mov
shlb
iret
test
fiadds
sti
lods
xorl
pop
mov
mov
cwtl
mov
iret
mov
mov
ds
inc
adc
out
xor
push
nop
mov
nop
inc
inc
rorb
sub
fs
sbb
mov
push
sub
cmpb
xlat
lahf
loope
out
leave
xchg
jbe
pop
imul
pop
mov
sbb
inc
addr16
dec
mov
cld
xchg
or
fldl
pop
pop
daa
jp
insl
test
xchg
fsubs
subb
pop
cmpsl
push
cmp
or
int
xor
sbb
and
or
pop
lods
ds
cmp
loopew
adc
mov
orb
sarb
dec
cld
enter
jb
inc
jbe
add
in
fcompl
fistpll
fcom
cld
loope
test
insl
test
shlb
fnstenv
mov
sbb
mov
jns
and
fsts
mov
repnz
imulb
cvtps2pi
or
xor
push
ret
pop
arpl
mov
pop
xchg
and
adcl
js
mov
mov
push
sbb
pop
cmp
push
call
or
testl
je
in
cli
dec
jno
push
outsb
jge
addl
push
mov
imul
insb
adcl
dec
nop
pop
loopne
hlt
dec
jne
testb
mov
aas
sahf
test
push
jnp
fidivrs
daa
add
xor
test
cmpl
add
mov
inc
or
bound
stos
cmp
sub
xchg
and
mov
pushf
pop
call
repz
xlat
sti
push
push
mov
mov
gs
jae
mov
arpl
adc
rcrb
bound
filds
nop
leave
std
adc
daa
nop
std
cli
xor
fdivrs
fisubrl
push
test
sbb
add
rcl
inc
lods
mov
pop
jmp
inc
pop
sub
and
inc
pop
mov
xor
sub
dec
popf
es
mov
xchg
icebp
push
loopne
mov
pop
adc
loope
xchg
scas
xor
mov
in
mulb
mov
inc
mov
jns
and
xor
sbb
push
je
xchg
mov
notb
push
xchg
dec
insb
push
lcall
pop
xor
xchg
outsl
cmp
repz
frstor
fwait
mov
push
mov
cmpsl
cli
sub
sbb
xchg
icebp
or
shll
jae
inc
jo
sbb
outsb
and
xor
icebp
sub
loope
ret
sub
js
imul
and
jg
xor
iret
xor
cmp
pop
sub
cld
cmp
sbb
sub
jle
rcrb
movsb
test
mov
sbbb
sub
jns
fsubrp
or
xchg
cmc
mov
mov
cwtl
push
movsl
mov
mov
sbb
push
lods
jo
pop
in
push
js
mov
insb
pop
dec
sbb
fstpt
push
xor
mov
call
lea
dec
push
lds
pop
mov
shrl
jae
pop
iret
ja
adc
out
inc
icebp
jno
scas
xchg
pop
pop
inc
mov
mov
in
lcall
fwait
jne
idiv
imull
dec
add
dec
dec
adc
int3
inc
test
hlt
cmpsl
aam
sbb
mov
les
loop
jp
adc
cli
dec
and
or
stos
jg
sahf
pop
fidivrl
mov
mov
dec
insb
int
or
gs
fistps
popa
push
jp
or
pop
jb
or
dec
repnz
jle
cmpsb
and
ss
or
xor
inc
mov
sbb
fsts
inc
pushf
or
movsb
stos
add
stos
repnz
out
add
test
mov
add
xor
dec
gs
stos
cmpsl
and
daa
jmp
sub
int
lcall
jmp
add
and
fildll
xor
mov
push
lahf
in
rcrl
pushf
outsb
iret
and
mov
sbb
imul
movsb
jno
fistps
adc
je
incl
add
aad
jge
jmp
ds
cmpsl
lods
les
cmp
in
pop
ljmp
cld
mov
jle
mov
inc
bound
mov
stos
pop
stos
mov
mov
lret
sub
inc
and
icebp
pushf
outsl
mov
xchg
movb
in
push
dec
int
test
imul
cwtl
xor
fldt
insb
mov
fdivrp
shll
cwtl
iretw
push
fidivs
in
aas
js
push
mov
inc
dec
prefetch
into
clc
dec
cwtl
pop
into
xlat
test
filds
push
lahf
xor
test
mov
push
sbb
jne
mov
imul
jbe
mov
ljmp
jle,pt
shl
loop
inc
ret
clc
fwait
arpl
jmp
dec
iret
push
js
aam
add
lods
int
mov
outsb
shlb
gs
negl
sub
dec
jmp
inc
mov
push
fnstcw
lods
dec
jo
fcompl
xlat
mov
icebp
xchg
repnz
mov
pop
sar
mov
je
fldt
bound
jecxz
fcomp
fwait
pop
dec
push
mov
jae
mov
aad
sub
in
jp
lods
mov
mov
out
das
insl
daa
and
out
mov
pusha
imul
into
mov
jbe
xor
pop
inc
sub
cltd
lcall
xor
mov
cld
sub
sahf
and
fistps
mov
push
mov
arpl
sub
insb
jne
pop
sub
pop
or
cmp
mov
jge
sti
mov
rorb
sbb
popa
lahf
leave
push
or
into
cmc
xorl
popf
movsl
push
loop
nop
divb
mov
mov
cmp
test
push
jnp
frstor
adc
mov
jecxz
call
adc
xchg
jge
inc
jb
cmp
xor
rclb
push
cmp
pop
int3
push
and
cmp
out
jns
test
push
shrl
push
jne
insl
je
pop
push
mov
and
jno
xorb
pushl
call
lret
data16
add
shll
add
jl
pop
mov
sbb
sub
xchg
cwtl
mov
stos
out
jnp
mov
cwtl
jb
outsl
movsl
push
test
cld
imul
jge
pop
jb
jb
iret
mov
rcr
cld
loopne
imul
jp
pushf
dec
xchg
adc
mov
bound
scas
sbb
pop
in
roll
pop
adc
cmp
icebp
xchg
jp
xchg
int
std
xchg
pop
fildll
jns
inc
pusha
and
mov
aam
mov
into
add
imul
xor
cli
mov
mov
test
lods
mov
push
mov
notl
call
jb
enter
aad
clc
push
cmp
mov
xchg
sub
sti
lds
push
xor
mov
fcomps
mov
aaa
jg
inc
and
stc
int3
dec
fwait
xchg
loope
xchg
sahf
adc
mov
pop
int
in
lahf
call
and
fdiv
mov
sbb
add
push
subl
pusha
dec
call
cmp
ja
cmp
xchg
int
sbb
mov
fmulp
xchg
scas
imul
xor
loopne
pop
fldt
sbb
push
ljmp
jne
popf
movsl
xor
test
xor
enter
xor
popa
inc
mov
mov
or
cmp
push
jne
loop
cli
cmpsb
sub
dec
push
addb
mov
push
fs
jge
sbbb
xchg
addr16
jno
cld
btc
das
adc
dec
add
das
jbe
push
inc
nop
jns
inc
mov
fucomip
int3
dec
jo
mov
adc
xchg
out
mov
jns
ss
pushf
cmp
pop
out
insl
inc
mov
test
dec
sub
das
inc
mov
mov
cli
aad
cmp
xor
lahf
int3
call
push
jb
push
xlat
ljmp
xchg
ret
sub
xor
popa
addr16
out
adc
mov
hlt
or
lret
mov
pop
xchg
xor
jecxz
jecxz
lahf
dec
and
lods
cmp
pop
sub
sub
clc
ret
mov
sub
cmpb
xorl
mov
xchg
sti
popf
movsl
jno
xchg
shll
inc
jnp
lret
cwtl
or
pop
dec
jecxz
add
je
out
mov
pop
mov
mov
jmp
iret
scas
jae
out
mov
outsl
adc
pop
fs
negl
std
mov
add
add
rclb
movsl
mov
cltd
jp
cmc
jne
fstpt
mov
inc
inc
push
sub
mov
mov
dec
jbe
fdivr
daa
das
sbb
pusha
mov
mov
sbb
in
cld
jae
mov
mov
dec
outsl
mov
fs
sbb
leave
add
imul
xlat
rclb
cmpsl
and
cmp
fadd
faddl
jge
jle
pop
add
shl
test
or
lret
std
out
mov
dec
jge
mov
or
cmc
lret
add
addr16
ret
mov
imul
sbb
sbb
mov
add
sub
push
inc
pop
fisubl
xlat
out
xchg
loop
xor
jne
sub
insb
sbb
adc
fildll
pop
lahf
fst
add
repz
push
xor
jns
inc
jbe
movsl
enter
stos
ret
cmp
dec
mov
outsb
nop
stos
es
push
adc
in
push
fsubs
cmp
mov
jne
sbb
cmc
in
cmc
cmp
jmp
sbb
ja
cld
xchg
int
mov
jbe
rorl
add
cmpsl
sahf
sub
mov
and
lock
lock
shl
adc
or
mov
inc
dec
dec
xchg
iret
sbb
aaa
mov
sti
aaa
inc
cmpsb
and
xchg
dec
push
insl
xor
mov
movlps
jnp
insl
xor
aas
rorl
sub
mov
mov
add
or
das
push
jne
shrb
push
pusha
scas
pushf
inc
cmp
cs
out
push
push
call
sti
cmpl
int3
push
int3
mov
or
ljmp
out
jae
adc
stos
scas
les
mov
cmpsb
sub
and
add
sub
test
lahf
and
jno
sbb
lret
cmpsb
aam
test
mov
jecxz
roll
inc
imul
and
ret
mov
adc
test
aaa
fs
mov
das
fwait
sarl
mov
cmp
clc
dec
mov
test
dec
sub
ds
pop
dec
imul
push
fwait
jbe
xchg
or
shlb
xchg
jae
and
jo
fs
outsl
mov
and
xor
dec
fstpt
jnp
push
sti
je
in
dec
test
fst
add
mov
iret
in
push
mov
mov
fistpl
cli
jmp
int3
lods
loop
cmp
nop
cs
dec
push
mov
or
sub
adc
xor
and
int
cmpsb
data16
cs
mov
inc
push
imul
lea
repz
int3
arpl
insb
repz
out
pop
ss
daa
and
mov
push
jo
into
int
stos
cmp
xor
inc
push
lods
push
dec
jg
das
into
call
daa
or
push
inc
cmp
out
arpl
xchg
std
int3
sub
notb
sbb
dec
js
mov
loope
and
mov
das
out
sub
pop
sub
cltd
mov
clc
sbb
jmp
in
mov
jecxz
dec
and
cmpsl
pop
jg,pn
scas
icebp
cmp
sub
inc
scas
pop
sub
rorb
inc
movsl
jno
ja
xchg
popf
test
insl
in
outsl
dec
dec
js
fadd
sbb
lret
in
je
stos
popf
pop
mov
dec
mov
lds
repz
push
or
out
cwtl
dec
cmp
pop
cs
cmpsb
push
ljmp
aas
or
shl
out
loopne
pop
add
out
xor
in
lods
inc
insb
lock
pushf
dec
dec
in
fsubr
pop
pop
pushf
leave
fwait
negb
iret
inc
aaa
loope
les
bound
and
ds
dec
test
sub
js
outsb
cmp
add
xor
fnstenv
call
and
mov
mov
ret
push
out
shrb
lods
fwait
arpl
push
into
sub
push
test
and
mov
out
mov
adc
push
std
adc
mov
push
sub
pop
dec
loope
iret
repnz
push
cmp
xchg
adc
mov
sub
push
mov
mov
cmpsb
fimull
mov
int
mov
cmp
xchg
sub
mov
rorb
sahf
inc
outsl
sub
out
cld
sub
or
in
dec
addl
notl
stc
xchg
pushf
xor
push
mov
add
movsl
mov
jno
push
jecxz
scas
fwait
sbb
ret
aaa
dec
addr16
in
neg
stos
pusha
std
fcoms
jnp
stc
sub
fwait
idivl
repz
xchg
pop
call
adc
in
js
outsb
pop
push
jmp
mov
or
stos
je
dec
push
mulb
adc
pop
icebp
ret
aaa
lret
lods
inc
mov
pop
popa
inc
and
push
or
fwait
cmc
call
adc
bnd
dec
jp
ljmp
je
add
inc
mov
stc
mov
je
dec
ret
pop
aaa
jg
or
sub
jnp
int3
or
push
aaa
cmpb
mov
lret
mov
or
add
cld
ficompl
and
sub
jnp
cmpsl
fsubrl
mov
out
jb
pand
jmp
mov
push
inc
push
mov
in
out
mov
lret
fsubr
dec
pushf
mov
pop
mov
fstpl
xchg
cmp
mov
mov
leave
data16
lret
arpl
jmp
push
sbb
jmp
cld
aaa
mov
lret
add
dec
pushf
mov
adc
jno
jg
mov
in
repz
pop
push
pop
stos
or
popf
cmp
and
lds
cld
dec
in
ja
push
nop
pop
xor
sub
hlt
cmpsl
pusha
sbb
adc
dec
cmp
scas
lods
lret
les
ret
mov
push
inc
dec
jmp
cmp
dec
xor
test
icebp
sbb
faddl
adc
addr16
sub
sbb
adc
add
mov
jmp
mov
push
add
mov
testb
mov
adc
dec
fwait
sub
mov
and
cmp
cmp
es
movsb
cmp
push
iret
push
push
add
iret
xor
and
or
dec
bound
push
movsl
jo
and
stos
sub
sbb
lods
test
xchg
or
adc
movsl
sbb
jp
out
pop
repz
mov
and
js
pop
sbb
inc
sbbb
popf
jp
ret
outsb
adc
repnz
or
adc
cmpps
adc
arpl
mov
frstor
aaa
ljmp
aam
cmp
add
popf
sbb
bnd
mov
pop
inc
icebp
inc
call
ja
mov
ljmp
addr16
xor
adc
fstl
popf
bound
or
jecxz
inc
popa
sub
aaa
xor
aas
sbb
test
fdivrs
jmp
adc
add
cltd
repz
xlat
push
into
and
mov
ja
shlb
pop
lret
dec
jb
aaa
push
xchg
jl
dec
xor
xorl
lahf
insl
and
in
sbb
mov
std
fists
fdivrl
js
leave
test
aad
out
and
jne
outsl
mov
adc
push
cmpb
mov
jge
je
jnp
cmpsl
pop
notb
movsb
sbb
push
pop
aaa
fbld
adc
cld
jp
test
ds
mov
sbb
xchg
or
adc
or
movsb
xor
dec
and
mov
mov
fcompl
outsl
sbb
call
dec
inc
xlat
addb
push
out
enter
push
lds
mov
int
adc
ja
cld
insl
pop
cmpb
mov
jp
mov
push
in
or
mov
and
mov
xchg
shl
stos
jns
mov
std
pop
mov
cmc
or
mov
lea
sbb
imul
div
daa
or
popa
lahf
mov
sbb
fsubrl
push
pop
xchg
adc
pop
mov
jns
popa
les
cmp
insl
or
andl
pop
shrl
xchg
cmpsb
inc
fldenv
sub
movsb
lods
sbb
or
pusha
mov
pop
xor
add
popa
mov
lods
cltd
fmuls
pop
sti
push
lods
adc
bound
xchg
cltd
xchg
notl
push
loop
mov
fneni(8087
jp
sbb
mov
mov
into
sbb
mov
scas
bound
pop
repnz
pop
imul
pop
sar
mov
pop
mov
lret
and
testb
pop
and
out
jmp
fcomps
xchg
data16
push
add
mov
xor
leave
mov
icebp
lock
ss
gs
xor
mov
adc
jb
inc
jne
fnstcw
in
fdivr
xor
pop
xchg
jo
fsts
loope
fdivrp
icebp
popf
mov
sub
popf
jge
cmp
push
stc
jg
loope
loop
stc
inc
sbb
aaa
cmpsb
dec
pusha
dec
cltd
lcall
lea
or
enter
test
movsl
mov
dec
mov
or
push
shrl
scas
adc
adc
or
lcall
inc
dec
xor
xchg
mov
andl
xchg
dec
push
hlt
iret
into
adc
push
das
popf
outsb
or
and
lods
cmpsl
mov
stos
xchg
ljmp
xchg
push
ss
mov
mov
pushf
or
pop
arpl
ret
and
push
cli
mov
cmp
mov
outsb
mov
dec
push
shrl
lea
add
ret
out
int
dec
xor
lret
jge
push
adc
das
adc
in
push
dec
testb
testb
test
lret
outsl
int
out
roll
inc
arpl
mov
stos
inc
ljmp
sbb
and
in
push
sub
shrl
mov
fisubrs
rcll
and
lret
adc
std
fiadds
sarl
scas
and
mov
adc
hlt
push
jp
pop
mov
adc
inc
jnp
out
push
dec
cmp
lret
jge
icebp
pusha
cli
popf
mov
insl
cwtl
sub
lret
xchg
push
jae
cli
jge
push
das
mov
sub
jle
add
mov
cmpsl
cmp
push
arpl
add
nop
test
scas
leave
xchg
sbb
mov
out
inc
addl
pop
leave
jl
notb
and
popf
cmp
push
push
testb
aas
mov
int3
pop
push
cmc
lret
dec
ljmp
cmpsb
mov
xor
pop
es
jo
imul
inc
loopne
cmp
mov
mov
mov
outsb
les
jns
sub
clc
int3
ss
mov
sbb
mov
xor
sbb
adc
dec
aam
push
or
call
xor
pslld
mov
sahf
push
mov
mov
jae
icebp
pop
pop
jge
popa
push
int
adc
gs
fwait
pop
jge
or
xor
jae
mov
dec
mov
push
mov
addb
ret
add
data16
lret
or
add
ret
mov
jnp
ds
pop
xor
imul
ret
mov
push
inc
add
aam
addr16
dec
stos
repz
fwait
cmp
ljmp
lds
push
ret
lret
xor
sub
leave
and
mov
dec
shlb
ret
ret
negl
movsb
shll
ficoml
iret
adc
lcall
push
inc
hlt
rclb
cmp
scas
sahf
std
les
add
call
jmp
push
and
adc
jecxz
ds
lahf
aas
imul
mov
xchg
push
cmpl
mov
pop
adc
mov
xor
dec
add
pop
gs
xchg
loopne
inc
jg
mov
jne
lock
adc
push
sub
out
xor
outsl
movsl
and
loope
cmp
xchg
scas
insl
fcoml
sti
sub
cmp
xchg
pop
and
dec
sbb
xchg
mov
nop
lret
addr16
dec
je
adc
ret
mov
aaa
addb
sbb
sub
sub
xchg
xchg
mov
xchg
or
push
insl
pop
and
sbbl
or
imul
jg
xorl
int
dec
dec
shr
repz
push
inc
and
bound
lret
xor
inc
or
ret
out
cmpxchg
adc
mov
in
sarb
iret
mov
and
call
jae
arpl
add
daa
leave
hlt
clc
repz
shrb
pop
pop
push
popl
test
cs
shlb
dec
stos
mov
xor
mov
test
pusha
testb
pop
push
imul
pop
int3
int
xchg
repz
js
cmp
call
fdivr
clc
mov
cmc
ss
or
add
pop
push
jno
xor
jo
gs
or
push
out
dec
cmp
test
adc
scas
pusha
in
js
shl
mov
xchg
sahf
mov
adc
add
pop
cmp
pop
stos
sahf
pop
cs
ret
aad
inc
sbb
ds
ljmp
into
xchg
scas
int
lods
ljmp
lcall
cltd
stc
add
jl
es
push
xor
cmpsb
cmp
cmp
xchg
lret
pusha
and
push
shll
and
pop
add
scas
cmpsl
inc
movl
pop
xor
jae
stos
adc
pop
cmp
xlat
inc
pusha
cmpsl
call
fdivrs
push
jnp
inc
je
inc
and
vpunpcklwd
push
jno
dec
mov
cmpsb
mov
ljmp
mov
cmc
mov
mov
test
mov
sbb
sahf
ficomps
and
sbb
stc
mov
mov
jne
faddl
xchg
aas
xchg
cmp
sbb
fstps
sbb
jp
jge
mov
nop
cmp
icebp
loopne
lods
push
mov
xchg
int3
scas
out
mov
notl
iret
or
mov
aad
cmpsb
inc
mov
in
scas
cmp
lcall
adc
roll
dec
fldt
and
push
test
in
mov
mov
mov
cmp
nop
insl
push
pandn
xchg
out
jb
movsl
js
shlb
inc
mov
popa
clc
ja
inc
fwait
popf
in
jbe
xor
repz
push
shlb
mov
shlb
push
dec
in
in
int3
xor
adc
pop
adc
cmc
lods
inc
or
out
sbb
xchg
pop
cmp
fdivp
js
pop
cld
xor
outsb
mov
jg
cmp
stos
loop
lret
test
jl
pop
mov
push
sbb
mov
ret
pushf
arpl
xlat
jp
popa
xor
push
lret
or
xchg
push
or
jns
jo
cmp
cmp
jge
popf
cmp
sbb
scas
in
dec
adc
daa
mov
add
and
xchg
adc
mov
mov
in
dec
mov
jne
dec
mov
cs
fdiv
das
adc
add
loope
ja
lahf
dec
pop
aad
jno
mov
mov
aad
aam
popa
xchg
and
push
mov
inc
mov
xor
sarl
inc
frstor
mov
sub
mov
fstpt
mov
shll
add
xchg
rep
mov
cmp
jne
push
xchg
dec
sbb
xor
pop
fsubs
std
mov
add
dec
test
or
cs
and
xchg
in
mov
inc
pop
mov
test
sub
imull
sbb
add
cmc
push
push
pop
push
mov
xorl
xchg
cmp
sub
fwait
jno
arpl
jp
testb
enter
incb
out
add
or
out
orb
dec
cmp
sbb
addl
dec
adc
inc
ja
inc
sbb
pop
pop
adc
jo
rcl
and
jbe
out
out
xor
xor
xor
xchg
testl
cmp
dec
jecxz
cmp
ds
std
inc
push
cmp
sbb
or
pop
mov
adc
cwtl
adc
pop
cld
pushf
push
mov
lock
fadds
data16
in
lock
adcl
xlat
repz
lahf
mov
dec
cmc
rorl
xchg
pop
fcmovnb
ss
fisubs
dec
fisubrs
sbb
adc
jmp
pushf
inc
sub
gs
jl
lock
gs
in
lcall
pop
insl
mov
test
out
pop
or
pop
int
js
mov
in
add
mov
call
pop
jmp
jecxz
mov
sub
hlt
imul
adc
xchg
loopne
xlat
roll
je
ret
ljmp
fisubs
sbb
aas
sbb
ror
mov
test
loop
shr
push
ficomps
popf
xchg
sbb
and
jno
dec
or
jbe
xor
cwtl
dec
xor
inc
test
pop
test
jp
out
cwtl
mov
bound
jg
daa
movl
pop
and
test
pop
les
mov
scas
sub
or
dec
jns
in
or
sbb
ja
inc
dec
xor
mov
xchg
pop
mov
jmp
fmul
stc
xor
push
cmp
inc
mov
and
xor
stos
stos
movsb
into
out
cli
int3
stos
mov
push
pop
xchg
pop
and
push
out
dec
or
pop
xlat
add
lahf
xor
adc
ret
std
or
out
xchg
mov
jo
and
out
cmp
add
scas
outsb
ja
pop
mov
push
cmpl
std
pop
mov
mov
cwtl
test
dec
inc
mov
xchg
fsubs
sti
adc
scas
js
mov
add
push
mov
in
fadd
mov
mov
imul
daa
xchg
mov
sbb
jno
inc
shrl
cmpsl
jecxz
sbb
push
sub
lock
xor
inc
sbb
out
ljmp
fistl
dec
std
insb
popf
in
fs
insb
fstps
fisubs
sbb
test
scas
test
adc
out
ret
mov
ss
aaa
mulb
mov
jmp
mov
enter
mov
lahf
adc
dec
dec
pushf
arpl
mov
test
leave
bound
sar
shr
cmc
cli
rol
xlat
mov
inc
inc
cld
addr16
sub
jmp
adc
orl
movsb
clc
mov
jle
add
call
ret
lahf
fdivrs
dec
lcall
push
cld
negb
jge
xchg
jb
cmc
ljmp
imul
xchg
pop
stc
push
outsb
xchg
mov
sub
leave
mov
fs
shlb
mov
out
ret
lea
push
mov
xchg
mov
or
inc
jge
ljmp
mov
movsl
testl
cmp
ja
jo
adc
ss
leave
stos
adc
imul
adc
fisubrl
ja
ja
jo
hlt
in
cwtl
pushf
sub
mov
cs
xchg
fstpl
adc
int3
std
std
and
jle
or
lds
sub
pushf
mov
popa
mov
sub
jp
sbb
sbb
dec
jb
insb
stos
insb
fimull
add
orb
add
jmp
movl
idivb
mulb
xchg
pusha
mov
mov
xor
adc
jl
test
or
sub
jo
fiaddl
aad
adc
mov
or
push
lds
call
adc
sahf
xor
sbb
xchg
mov
jmp
lea
sti
xchg
fisubs
cs
outsl
bound
add
sbb
pop
test
cld
push
fdivr
dec
pop
fldl
int3
xchg
cmpsb
push
stc
ret
loopne
xchg
clc
pop
in
jmp
mov
xchg
int
sti
and
sbb
mov
test
test
icebp
lods
lods
or
xchg
sub
in
jecxz
gs
push
mov
pop
ljmp
mov
cmp
pop
sbb
ss
es
jns
pop
mov
pop
fildll
fwait
int
cmp
cmc
movsb
outsl
cmp
jns
pop
test
insb
push
mov
inc
sub
arpl
jmp
sub
sbb
fdiv
xchg
insl
push
jg
rcrb
in
lds
call
dec
jle
aad
xchg
shll
popa
mov
mov
sahf
and
and
movsl
jno
jb
ret
addr16
add
inc
mov
das
out
sub
fistps
dec
outsl
dec
pop
mov
loopne
pop
jno
gs
jmp
leave
cli
dec
jl
mov
pop
cld
jnp
lahf
push
js
sbb
ror
cli
rcr
imul
das
dec
in
and
sbb
add
scas
imul
jmp
lock
jg
xchg
push
lds
dec
jg
jno
jbe
xchg
hlt
pop
sub
cmpsl
sbb
pop
push
inc
or
push
fsts
stos
pop
mov
flds
loopne
adc
jno
adc
cli
sarb
mov
in
addr16
mov
leave
or
dec
mov
lret
aas
cmpsb
out
lea
inc
xor
add
adc
fildll
jbe
pop
adc
sti
pop
cmp
cmp
arpl
push
mov
into
push
jp
cmp
sti
push
cld
pop
nop
in
loopne
dec
xchg
arpl
dec
mov
in
loop
and
shrl
rclb
jmp
xor
jnp
mov
pushf
xchg
or
pop
cld
les
cmpsb
inc
jns
test
jbe
and
mov
xchg
dec
dec
pop
adc
enter
mov
push
sar
pop
adc
rcl
mov
push
data16
cmp
add
jns
arpl
fidivl
jo
clc
insb
rclb
lret
les
sbb
push
lret
mov
cmp
popl
rorb
gs
fbstp
sub
pop
sbb
movsb
mov
adc
and
jne
lcall
mov
aam
push
sarb
or
xchg
xchg
pop
pop
out
bound
nop
cmp
stc
out
mov
out
add
lds
test
bound
decl
lods
mov
fcmovnu
adc
or
lods
fwait
aam
mov
std
add
pop
push
movsb
arpl
add
inc
loop
ds
ljmp
loopne
imul
push
sbb
inc
cmp
cmc
jg
jp
dec
nop
loope
mov
inc
rcrb
push
into
movb
dec
enter
xchg
adc
push
fcmovne
ja
or
push
or
ficomps
or
cwtl
imul
cmpsb
pusha
push
mov
and
xor
push
cs
nop
scas
rcll
push
and
xor
xor
inc
test
in
das
dec
inc
clc
cltd
inc
pop
lods
pop
mov
ret
push
xor
jl
jp
lret
enter
sub
push
in
shrb
jp
xchg
arpl
adc
inc
sbb
xor
sub
cltd
jmp
mov
push
repnz
pop
subb
push
ja
xchg
dec
and
insl
jmp
lods
xchg
test
pop
sub
movl
mov
in
pushf
mov
std
push
lds
into
dec
out
lds
imul
scas
cmp
push
ljmp
xchg
sub
inc
imul
push
xchg
push
jo
sarl
mov
cmp
int
in
cltd
ret
ficoml
mov
movb
arpl
xchg
jb
pop
in
sbb
iret
lret
xchg
shll
addr16
jmp
fcmove
icebp
mov
sbb
mov
adc
xchg
lret
dec
lcall
hlt
xchg
dec
mov
call
imul
jno
cmc
xchg
pop
inc
jo
xorl
mov
out
cltd
push
jns
add
cmp
xchg
jb
icebp
out
jp
and
xchg
dec
cli
xchg
inc
dec
xchg
inc
dec
aad
mov
mov
jne
or
fidivs
leave
out
mov
xchg
lea
mov
sbbl
loop
adc
idivb
cltd
js
out
cs
add
clc
fbld
stos
cs
rcrl
jl
int
inc
arpl
xchg
inc
xor
aaa
push
mov
icebp
cmp
pop
cmp
mov
cli
dec
scas
and
mov
imul
mov
in
and
sbb
push
icebp
shl
into
cld
cltd
adc
pop
rcll
cli
sbbl
adcb
insb
and
outsl
jne
push
int
cmp
cs
xchg
inc
dec
mov
fldl
jp
cmc
test
mov
sub
scas
in
mov
je
xchg
seta
cwtl
ret
add
mov
pop
jl,pt
fisttpl
fwait
jg
mov
adc
push
data16
sti
imul
inc
cmp
push
fistpll
iret
xchg
xor
rcrl
leave
dec
or
decb
and
das
fxam
test
aas
mov
shlb
and
lea
daa
push
ja,pn
lret
or
data16
mov
cmpsl
dec
pop
iret
dec
pop
sub
mov
arpl
mov
dec
or
andl
lods
int3
pop
outsl
std
inc
mov
cmp
pop
les
mov
add
lds
js
mov
mov
mov
mov
scas
add
push
xor
movsl
out
mov
add
dec
jge
dec
cmp
mov
dec
jmp
outsl
fnstenv
pop
push
add
leave
jmp
aad
inc
adc
lds
xchg
pop
cs
mov
out
inc
dec
gs
inc
fiadds
lock
aaa
jmp
fdivrs
mov
cmp
mov
imul
pop
push
and
outsl
fldcw
out
sbb
aas
mov
dec
mov
or
enter
test
in
inc
arpl
insl
jns
mov
cmp
mov
mov
mov
mov
rcrl
sbb
xchg
pop
mov
jbe
sbb
jmpw
lahf
pushf
add
fwait
and
adc
test
add
xor
out
sub
les
xlat
pop
in
movsl
das
cmp
xchg
and
lahf
push
xchg
push
cli
push
push
mov
insb
call
mov
adc
jo
mov
imul
sub
dec
lock
int
cli
pusha
repz
mov
dec
test
test
fwait
push
jge
dec
gs
enter
xor
push
bound
repnz
loope
aam
mov
js
scas
int3
or
inc
lret
lcall
out
jp
jo
mov
xchg
push
mov
nop
es
adc
pop
outsb
jns
dec
jne
xchg
push
pop
add
adc
scas
xor
out
cmpsl
adc
sub
pop
or
dec
and
xor
mov
fiadds
sti
sbb
jbe
mov
in
sub
dec
hlt
aad
adc
xchg
mov
xor
loop
jne
mov
fldenv
lods
aam
call
adcl
orb
lret
xchg
jle
stos
imul
jae
mov
jno
das
div
dec
scas
test
cld
mov
or
jg
pop
mov
cmpsl
icebp
scas
inc
lods
xor
stos
test
movsb
and
push
aas
push
xchg
adc
rcrl
into
sbb
push
mov
or
jge
xor
push
mov
gs
xor
dec
push
mov
lods
xchg
js
mov
mov
loopne
push
lahf
data16
push
ficoms
ss
mov
das
das
xchg
js
aad
mov
and
xchg
sub
sahf
call
cmp
mov
jecxz
mov
jecxz
int
dec
or
nop
adcl
push
mov
sub
sub
filds
inc
shlb
xor
adcb
xor
inc
jp
xchg
mov
add
mov
jecxz
jbe
out
mov
xor
arpl
dec
fstl
lcall
cmp
ds
fwait
dec
ljmp
mov
lds
mov
or
cmc
daa
out
mov
lea
jle
cld
pop
add
fbld
out
ljmp
hlt
mov
shll
or
aad
sub
xor
add
mov
es
insl
push
mov
xor
sub
cmp
mov
addr16
xchg
push
gs
adc
xchg
loop
pop
cs
aas
pop
pop
repnz
dec
scas
xchg
sahf
push
pop
dec
imul
mov
stos
xlat
iret
hlt
pushf
lcall
js
push
push
rorb
inc
test
push
cmp
fimull
scas
icebp
jp
mov
clc
push
xor
stos
jl
lsl
mov
subl
je
in
cmp
call
sahf
inc
mov
ss
jbe
lock
outsl
mov
mov
imul
lret
roll
aaa
jl
repnz
lods
xchg
je
mov
fstl
mov
bound
sub
mov
inc
sbb
or
stc
and
stc
xchg
sbb
sbb
aaa
mov
add
punpckhdq
mov
ds
dec
loop
scas
popa
repz
sbb
cs
cmp
xor
aaa
sbb
mov
nop
pop
lret
sub
sub
xchg
add
adc
mov
jle
jns
dec
adc
stos
pop
or
sub
xchg
gs
repnz
stos
not
shrb
out
fdivrs
and
fildll
lea
shlb
in
adc
rorl
shlb
sub
rol
push
inc
out
push
push
mull
xlat
loopne
std
cmp
dec
sub
adc
cmp
xor
inc
sub
xchg
sbb
mov
mov
aas
sub
cmp
jge
in
in
adc
pop
cmc
outsb
inc
mov
ja
xor
fsincos
int3
sarl
cmc
pusha
ret
sub
lock
stc
jae
push
push
jns
adc
add
aas
mov
pop
stc
outsl
in
pop
sbb
cmp
push
add
mov
pop
inc
mov
daa
insl
inc
cmp
adc
mov
test
sbb
mov
pop
lret
arpl
cmpl
dec
lods
adc
ret
mov
sbb
pop
xlat
xchg
popf
pop
sub
cmp
iret
mov
add
ss
or
dec
scas
dec
push
mov
dec
dec
insb
xchg
repz
cmc
fistl
in
push
sbb
js
push
adc
and
je
lods
in
cmpl
sub
or
inc
in
xor
jecxz
in
push
repnz
pop
jno
pop
jmp
mov
scas
lds
mov
mov
sbb
mov
leave
out
add
andl
out
mov
dec
test
and
pop
imul
pop
and
arpl
jmp
ret
push
dec
mov
dec
adc
loope
sub
iret
outsb
shr
lcall
aas
stos
imul
in
push
sti
adc
sub
adc
pop
xor
cmp
lock
push
xchg
mov
mov
mov
fildll
push
jp
add
cltd
arpl
test
cli
aas
and
mov
mov
aas
jns
and
mov
mov
jg
fdivrl
outsl
push
cltd
mov
das
cmpsl
jns
push
aad
sbb
cmc
sahf
pop
pushf
push
outsl
cli
scas
inc
ficompl
push
imul
rcl
into
jmp
pop
or
enter
insl
mov
lods
fstl
int3
push
leave
addr16
xchg
or
sub
jle
sbb
data16
aam
out
cli
add
inc
cmp
cmpsb
std
lret
enter
sbb
ss
sbb
loope
push
mull
sahf
pop
stos
jae
mov
inc
pop
push
stos
or
sub
inc
or
pop
pop
sbb
js
and
jno
xchg
jge
mov
adc
push
mov
pushf
cmpb
cld
jno
and
xor
xrelease
pop
call
jg
mov
jecxz
repz
pop
outsl
popa
jge
xor
les
decl
inc
jbe
jl
xor
test
inc
xlat
mov
out
mov
popa
movsb
fdivl
shl
fdivr
dec
out
add
cmp
adc
outsb
push
shl
lret
call
xchg
cmp
mov
xor
xlat
rorb
pop
ret
sbb
or
nop
ret
es
mov
lods
inc
sbb
mov
sti
sarb
ror
mov
fidivrs
jg
sarb
cmp
mov
adc
mov
mov
add
sub
aaa
pop
sarb
nop
es
cld
add
sub
sub
cmp
jg
loope
ja
cmp
jmp
loopne
scas
lods
lahf
lret
push
aam
pop
test
dec
ret
and
push
stos
add
mov
imul
cmp
mov
adc
push
jns
rorb
cwtl
sub
or
mov
or
popf
arpl
int3
inc
inc
icebp
aas
jmp
and
pushf
mov
pushf
jmp
jno
or
sub
mov
dec
push
sbb
sub
mov
repz
jae
sbb
fnstenv
scas
push
ja
mov
cmp
xor
pop
aad
in
xchg
mov
sbb
pop
or
sub
test
and
adc
and
repz
add
rorl
out
and
jb
popa
ds
cmpsl
inc
push
pop
add
lret
xchg
inc
in
mov
lret
dec
ror
out
insl
orb
sahf
cmp
addb
imul
lock
push
movsl
sahf
leave
std
leave
fiaddl
out
fcomip
xor
stos
ret
adc
orl
and
add
scas
xor
adc
jg
test
jne
push
lret
xor
pop
mov
mov
dec
xchg
stc
rolb
jnp
ljmp
adc
mov
je
and
adc
cs
loop
push
test
pushf
gs
scas
movsl
sarb
in
sti
stos
shlb
aam
and
popa
pop
pop
in
pop
insb
mov
insl
rclb
xchg
xor
leave
sbb
addr16
xchg
aam
inc
xor
mov
incb
stc
push
dec
adc
jnp
int
stc
add
orl
inc
bnd
inc
pusha
cmp
sub
adc
cmp
sti
aam
xchg
repnz
iret
push
add
push
daa
lds
imul
jb
aad
inc
mov
adc
lret
outsl
mov
add
ret
loopne
hlt
sub
test
test
mov
fildl
lcall
jno
out
scas
mov
add
fistps
xor
jbe,pt
push
xlat
xor
jb
mov
dec
dec
sub
lock
pop
adc
pop
loope
mov
fildll
negb
negl
out
mov
jno
sbb
mov
lret
ffreep
test
pop
push
shll
iret
adc
jns
je
rcrl
xlat
push
dec
xchg
jnp
cmc
dec
mov
mov
dec
push
aas
xchg
sub
int
lret
sub
or
mov
loopne
rorl
cmp
clc
popa
mov
pop
and
stos
jo
xor
cmpl
aad
pop
cld
enter
mov
movsb
pop
outsb
add
loope
mov
cmp
adc
cmp
adc
ret
or
add
jb
xchg
jmp
jl
mov
fstp
lds
insb
in
xchg
jae
insl
cwtl
lcall
jb
mov
mov
and
loopne
rcr
xor
pop
loope
loope
or
stos
lods
mov
es
xor
icebp
inc
cltd
fnsave
pushf
bound
mov
imul
mov
mov
bnd
adc
jge
adc
sub
xor
push
xchg
aaa
fnstsw
or
xor
test
jle
cli
inc
out
repnz
ss
in
fisubrs
jmp
ret
cmpb
shll
fwait
pop
jo
cmpsl
jno
inc
lods
jbe
xchg
outsb
mov
and
rcll
mov
incb
cwtl
sarl
pusha
push
mov
xchg
adc
jmp
xchg
loope
inc
xor
mov
fdiv
jle
andps
mov
jne
clc
dec
test
scas
fsubrs
push
dec
mov
cmp
andl
out
xorb
movsb
xor
mov
inc
clc
xchg
xor
jg
jmp
fists
and
ret
adc
and
lret
imul
lcall
cmc
nop
pop
test
dec
mov
fstl
and
xlat
rclb
imul
sbb
cmp
xchg
ds
add
push
js
lock
jl
cmc
mov
addb
ret
int3
das
adc
xor
or
xor
mov
dec
add
push
out
mov
iret
addr16
cli
add
lock
rorl
pop
lcall
xor
add
pushf
sbb
imul
jb
mov
loop
sbb
lock
adc
int
and
sub
mov
mov
xor
mov
and
les
call
inc
aad
jp
add
pop
cli
pushf
ret
sbb
scas
sahf
xchg
xor
test
jl,pt
std
adc
push
lahf
scas
jnp
dec
fstpt
sbb
mov
and
in
xchg
scas
xchg
lods
fcmovnb
jecxz
and
sbb
push
rolb
inc
jecxz
test
lods
lea
lea
sub
xchg
pop
je
push
fwait
pop
in
aaa
aam
addr16
and
aas
repz
dec
out
leave
ret
addr16
inc
dec
fistl
inc
je
cli
mov
call
xchg
sbb
shr
and
and
popf
mov
lods
cmpl
cmc
sbb
xor
mov
dec
and
ds
or
jb
sbb
sbb
pop
mov
mov
jmp
adc
jbe
into
mov
int
mov
fwait
out
lcall
pop
jae
inc
dec
mov
jns
ljmp
xchg
arpl
lea
pop
inc
out
mov
outsb
jge
rcl
mov
rclb
aad
and
ret
cli
cmc
loop
pop
inc
call
push
inc
adc
xor
lds
add
push
and
mov
mov
sbb
inc
addr16
inc
xchg
out
sub
push
inc
repnz
mov
shl
inc
bound
sbb
icebp
sbb
sbb
filds
das
cmp
sub
fistpll
mov
sarl
sbb
inc
cmpl
ss
daa
pushf
lahf
andb
pop
in
aam
ljmp
aam
dec
push
and
xor
sbb
sbb
test
adc
push
test
lahf
inc
je
or
lea
lock
or
popa
push
cmp
fildl
sbb
movsl
mov
mov
in
mov
xor
jno
aam
test
les
jg
sbb
adcb
and
cli
mov
add
cmpb
adc
cmp
sbb
pop
push
push
sbb
mov
push
xchg
or
jno
dec
mov
jo
inc
add
sbb
ret
into
xchg
in
out
mov
daa
imul
fstl
pop
adc
addr16
or
sub
cltd
pop
inc
jnp
mov
sub
insb
ficoms
dec
ds
xor
setge
adcl
push
or
stos
aam
ret
lds
shlb
add
pop
dec
repz
sti
and
dec
pop
fldt
sub
push
and
lods
shrl
pop
mov
in
jecxz
and
stc
adc
adc
and
insb
jo
dec
adc
stos
jp
mov
xchg
lods
pop
mov
jge
out
subl
rcrl
xchg
loopne
out
or
xchg
ja
xchg
mov
sub
fstl
inc
sbb
call
lock
je
mov
in
aad
fsubl
in
sbb
insb
cmp
cmp
push
cld
add
mov
mov
push
in
addb
inc
or
fstps
fisubl
aaa
mov
add
nop
jmp
sbb
fs
pop
or
sbb
xchg
or
fnstcw
xor
icebp
arpl
push
ds
sub
sbb
adc
mov
xchg
adc
sub
adc
jnp
idivl
push
lds
fistl
mov
jl
xchg
mov
xor
jecxz
pop
mov
fdivr
push
in
aam
mov
lods
lcall
and
jle
popf
add
mov
jl
inc
mov
jecxz
push
jg
inc
and
nop
fstl
dec
xor
mov
pop
sub
std
cmpsb
xchg
movsl
sbb
mov
lcall
mov
mov
clc
sbb
dec
arpl
sub
sbb
dec
cli
adc
inc
sbb
dec
sar
decb
cmpsb
mov
sbb
imul
mov
fmul
sub
mov
sub
cmp
cs
js
xchg
cltd
movsl
or
lret
nop
dec
ss
pop
out
inc
fcmovnu
int3
imul
xchg
out
ja
push
dec
decl
mov
ret
mov
jle
inc
clc
mov
pop
ljmp
lods
and
or
repnz
add
pop
lahf
mov
mov
bound
pusha
into
inc
mov
add
add
jno
insl
sub
push
xchg
adc
movsl
ss
loop
push
dec
cwtl
out
adc
stos
mov
scas
mov
adc
testb
loopne
mov
arpl
mov
mov
sub
jecxz
push
in
repz
dec
adc
mov
movsl
jl
dec
inc
add
push
mov
mov
mov
orb
je
sbb
jecxz
mov
mov
and
int
mov
mov
movsl
loop
popa
mov
mov
lahf
pop
imul
pop
mov
dec
loop
sahf
sbb
das
cmc
std
addr16
fsubp
xchg
sbb
lods
mov
add
push
mov
jnp
inc
push
outsl
jae
cmp
fisubrl
cmpsl
out
test
xchg
mov
bound
repz
mov
int3
enter
mov
mov
jo
mov
in
mov
jns
icebp
jb
aas
popf
into
dec
sub
cmp
xor
add
push
loop
cmp
cld
mov
outsb
std
adc
iret
cmp
imul
sbb
dec
xor
test
cmp
push
pushf
and
xchg
xor
insb
icebp
xchg
pop
dec
mov
das
push
xchg
xchg
xchg
pop
divb
bound
divl
repz
push
pop
fwait
lret
pop
pop
sti
sub
push
push
orl
sub
shrb
dec
cmp
pop
aas
push
mov
sbb
adcl
jns
sarl
mov
sti
cmp
rcll
cmp
jbe
pop
mulb
jmp
lock
js
lahf
mov
xor
cld
push
imul
push
mov
popf
cmp
mov
push
in
test
insl
incb
cmpl
icebp
push
adcl
aam
arpl
pop
lret
xlat
insl
sub
add
xor
loopew
sbb
popa
add
mov
add
aad
mov
pop
dec
xchg
stc
shrl
cmp
cs
jmp
movsl
mov
pop
adc
mov
mov
sahf
mov
cmp
push
inc
aas
mov
test
xor
aaa
ret
sub
imul
imul
xchg
stc
xor
pop
pop
sar
mov
sub
jo
xchg
das
or
movsb
insb
mov
inc
xor
bound
xor
mov
sbb
dec
popf
faddl
add
aad
int
pop
or
inc
nop
and
test
adc
pop
lret
dec
push
imul
pop
inc
sbb
push
subb
jmp
mov
lret
int
fcompl
popf
leave
fstpl
int3
lahf
repnz
xchg
daa
jb
daa
jb
daa
fcoml
leave
in
ljmp
jno
fs
push
imul
nop
imul
push
inc
icebp
push
mov
sbb
stos
or
push
loopne
out
inc
push
aam
lret
lods
jns
xchg
add
fwait
lea
fs
xchg
add
daa
push
std
adc
jo
dec
arpl
stc
push
xlat
jg
loope
aad
std
and
cmp
and
inc
or
pop
xchg
xor
pop
jnp
inc
jne
mov
cmpsb
cmp
js
xchg
push
add
dec
movsl
adcl
add
mov
clc
jns
cmp
xchg
fsubrs
div
push
mov
and
inc
leave
add
ret
bnd
push
xchg
mov
jo
int
pusha
sbb
int
jg
or
test
lods
aaa
fiaddl
xor
adc
push
sub
cmp
in
dec
scas
or
fbld
push
sbb
sbb
mov
pushf
adc
pusha
xchg
inc
xor
jns
jae
dec
jb
dec
lods
out
into
andl
test
xchg
push
out
popf
hlt
cwtl
push
sub
cwtl
or
in
inc
add
add
lcall
testl
les
jle
dec
add
repnz
jg
daa
fwait
movsb
leave
popa
jbe
stc
icebp
std
push
xchg
ret
aas
out
jo
xor
js
data16
and
and
cld
loopne
cltd
insb
jecxz
stc
icebp
aad
or
pop
xor
repnz
push
mov
andb
loop
stc
fcmovu
sub
fdivs
shl
cli
mov
pop
mov
inc
dec
int
add
mov
out
mov
xor
or
notl
cmp
andl
in
repnz
test
in
adc
jnp
adc
adc
jno
mov
cmp
in
sub
out
call
cmc
pop
enter
mov
add
das
jecxz
push
dec
ret
push
xchg
push
xor
das
and
addr16
out
mov
lea
cmp
or
mov
or
mov
mov
and
out
sbb
sbb
xchg
xlat
jae
test
mov
add
cmp
xorl
xor
mov
jmp
xlat
clc
push
ljmp
data16
insb
lock
xchg
and
cmp
add
sbb
in
cmp
ds
scas
in
jle
pop
push
mov
sti
aad
or
daa
fnstsw
insb
shlb
fdivrs
jnp
jns
stos
fnstcw
outsb
push
rcrb
xchg
pop
test
nop
ficoms
push
outsl
fiaddl
pop
push
loop
sbb
pop
mov
ss
xchg
pop
mov
iret
jb
dec
mov
mov
fildl
popa
mov
scas
into
push
mov
bound
sub
push
decb
jle
ds
or
adc
mov
sub
add
xchg
add
xchg
fists
divl
sahf
or
dec
mov
std
pop
lahf
test
add
mov
ss
inc
sti
or
loopne
dec
movsb
adc
stc
xor
mov
mov
push
xchg
lret
and
or
or
push
lret
add
and
jae
hlt
pop
stc
test
push
and
pop
pop
xchg
in
xor
iret
sub
js
sarl
xor
adc
add
cmpsl
ljmp
mov
mov
nop
jecxz
jne
dec
xor
mov
lods
add
in
mov
fiaddl
and
push
xor
leave
and
iret
outsb
cmp
add
fyl2xp1
sbb
xchg
and
popaw
pop
outsl
xchg
icebp
jecxz
xor
aaa
cltd
xorb
mov
sub
jae
xchg
jnp
aas
jo
jne
aas
and
dec
dec
fdivrp
out
sbb
imul
cltd
fisttps
pop
sbb
pop
stos
sub
xchg
mov
loope
xchg
jae
and
xchg
add
repz
jge
andb
mov
je
sub
or
cld
jle
jle
mov
lea
dec
mov
push
and
inc
jecxz
dec
shlb
inc
stos
xor
xor
pop
hlt
xchg
rorb
loope
cmp
mov
pop
insl
sarl
or
hlt
inc
in
jnp
fs
push
insl
sub
jmp
in
inc
insl
and
jnp
sub
rorb
or
dec
enter
fs
jb
stos
stos
imul
pushf
movsb
cli
addr16
stc
cld
sub
push
jno
jecxz
loopne
cs
adc
adcb
loop
push
ljmp
jg
xchg
xchg
dec
fdivr
push
popa
iret
repz
in
xor
cltd
jne
pop
jbe
xor
push
out
inc
push
cmpsb
cmp
and
mov
cmp
jno
sbb
adc
dec
mov
jne
inc
aas
out
cmp
inc
cli
ljmp
jl
pop
insb
cmp
idivl
jb
mov
jl
add
sub
rclb
dec
roll
add
and
sbb
add
pop
pop
data16
and
lock
mov
add
xchg
test
add
jmp
shl
sub
adc
fs
xchg
fnstcw
inc
sub
push
cltd
int
push
cmpsl
sbb
or
dec
sub
and
xchg
insl
lods
icebp
in
pop
xchg
pop
lret
mov
fmulp
cmp
push
xchg
ret
rclb
push
mov
ja
dec
stos
movsl
jo
cmpsl
mov
push
sub
or
push
push
outsl
dec
sahf
cmp
ret
mov
or
mov
fs
sub
jecxz
add
ja
xchg
in
push
out
pushf
jle
push
xchg
dec
hlt
jg
xchg
pop
addr16
mov
stos
mov
out
push
popf
dec
pusha
add
gs
cmpl
scas
or
imul
nop
xor
out
dec
inc
push
add
cli
pop
mov
into
inc
ss
repnz
stc
stos
or
mov
push
jo
mov
lods
mov
bound
jecxz
decl
cmpsl
dec
xor
sbb
xor
dec
adc
jmp
fidivrl
repnz
mov
mov
movsb
pop
pop
lret
dec
ljmp
cmpsb
in
push
pop
jecxz
cmp
or
mov
test
aad
add
loope
adc
ss
jae
xchg
push
mov
inc
cmc
xor
xor
daa
mov
icebp
pop
ficoml
fwait
xor
cmc
loopne
sbb
push
into
xor
xor
orl
mov
bound
sub
lcall
arpl
outsb
add
rclb
gs
dec
dec
mov
lods
mov
or
cmc
cmp
jmp
scas
push
push
xchg
pop
mov
xor
std
stc
int3
push
xchg
jle
hlt
dec
mov
in
jle
shl
xor
lods
cmp
mov
test
and
lock
sub
and
inc
movsb
xchg
mov
pop
add
fidivrl
sti
aad
xor
cmovo
movsl
cmp
adc
pop
ja
jge
xchg
cli
aaa
movsb
int3
dec
mov
push
jne
mov
pop
fldt
test
lods
scas
insb
or
rclb
mov
cld
pushf
data16
mov
sahf
cld
mov
jmp
mov
fisubrl
sahf
xor
sbb
sti
jle
mov
js
xor
enter
and
loop
push
cmp
push
stos
sub
mov
jmp
cwtl
je
rcl
or
cltd
ds
clc
push
push
insl
bound
ds
dec
jp
iret
hlt
out
outsb
outsb
push
mov
clc
mov
lret
xchg
ja
je
std
sbb
mov
xchg
or
in
shrl
add
stos
int
int
icebp
and
and
xor
lods
aad
and
xor
test
ja
outsl
bound
roll
pop
sub
fisubl
repz
das
add
cmc
out
movsb
stc
ljmp
adc
jns
xor
and
mov
mov
add
imul
add
jno
push
inc
mov
xchg
dec
bound
sub
mov
imul
divb
fwait
jno
pop
shl
mov
sbb
dec
clc
cli
pop
mov
jb
daa
jg
cs
pop
xchg
repnz
or
in
jmp
shl
ljmp
add
ret
jmp
pop
dec
push
pop
gs
out
popf
movsb
in
testl
es
fwait
dec
sub
movsl
sti
outsl
sub
fistps
imulb
lahf
xchg
jg
fisubrs
push
das
sbb
fidivl
sub
das
push
push
add
aam
push
jmp
dec
mov
lds
sub
sub
ror
sbb
pop
xor
ss
xor
xchg
out
outsb
stos
stc
pop
dec
int3
repz
add
clc
lret
inc
add
cmp
xchg
lea
cwtl
sbb
in
xlat
ds
xlat
hlt
pop
pop
mov
negl
or
xchg
fsubrs
jecxz
rcr
mov
outsl
test
popa
pushf
mov
mov
jne
mov
out
daa
jo
mov
xchg
lods
outsl
stc
adc
dec
push
loope
push
add
and
jg
pop
call
divl
or
xor
mov
xlat
mov
xchg
popf
xchg
xchg
sahf
lea
mov
test
lock
inc
pop
xchg
sub
inc
cmp
sub
dec
lea
or
cmpsl
xchg
test
mov
add
and
push
xchg
lock
mov
inc
cmp
pop
inc
mov
scas
cmp
xor
ljmp
scas
dec
mov
lock
test
js
int3
fstl
dec
adc
cmp
xorl
push
lds
mov
aas
mov
fldl
outsl
divl
mov
xor
cmp
jo
cmp
pop
roll
mov
popf
sub
cmc
push
add
mov
pop
xorb
push
pop
ror
mov
mov
insb
hlt
mov
lods
mov
pop
adc
and
pop
call
push
pushf
mov
sbb
jae
std
mov
and
mov
fistpll
pop
test
rcl
or
cmp
mov
and
inc
aad
jg
data16
jecxz
add
jmp
xchg
aas
cmp
bound
jns
push
lods
pop
add
mov
xor
sub
stos
mov
push
out
push
aaa
fildl
mov
cmpsb
push
ja
cmp
ret
push
aad
sub
in
cltd
pop
xchg
dec
pop
test
mov
movsl
pop
pop
roll
and
mov
rcrb
push
lock
mov
adc
add
ds
xchg
rorb
cmpsl
push
pop
cmp
aaa
rcll
iret
mov
and
clc
mov
rorb
out
mov
dec
and
inc
popf
fs
imul
push
xchg
sbbb
xchg
xor
mov
cs
lcall
clc
adc
mov
dec
or
sub
mov
pop
sub
subb
ds
loope
rolb
sub
add
hlt
fsubrs
pop
mov
out
sub
and
bound
stc
gs
mov
in
jae
jg
ja
dec
pop
iret
cmp
test
lret
dec
pop
in
sarl
dec
es
imul
clts
clc
shlb
cltd
cmpsl
add
cmp
hlt
jle
pop
div
and
jg
adcb
cmp
xchg
out
and
or
push
mov
ljmp
jmp
sti
mov
enter
testb
popf
leave
pop
test
inc
into
dec
jg
xchg
fiadds
nop
sbb
cmpsl
mov
lock
cmpsl
movsw
daa
test
mov
aad
mov
xchg
lret
cmp
pop
jp
mov
idivb
mov
mov
out
xchg
ss
cmp
jmp
shlb
push
jno
xchg
mov
shl
vpaddsw
leave
mov
sbb
jmp
in
push
dec
in
fmull
mov
mov
mov
add
in
or
jne
ret
adc
fisubrl
cld
imul
arpl
cmp
ja,pt
popf
test
adc
mov
cli
or
ja
popa
out
sub
fabs
cmpsb
mov
jg
push
sub
rcrb
cmpsl
sub
scas
pop
int3
mov
dec
fs
lret
mov
mov
inc
xor
xchg
into
pop
mov
mov
pushf
mov
sub
and
les
push
inc
and
bound
test
push
sbb
jp
lods
ds
pop
icebp
xchg
pop
mov
sub
fs
pop
xchg
push
add
loop
mov
ss
xor
sub
xchg
or
or
jg
push
push
scas
jg
out
push
test
lcall
dec
out
in
ja
xchg
lock
sub
cmp
inc
popf
inc
xor
je
nop
dec
fwait
cld
sub
or
xchg
test
jbe
adc
sbb
js
cmp
enter
mov
jp
push
in
and
mov
test
movl
jne
fwait
push
lret
sub
enter
loop
lea
arpl
jle
xor
out
das
mov
jne
push
cmp
out
mov
add
dec
into
push
xor
fdiv
loope
in
decl
push
xchg
cmpxchg
mov
jo
or
outsb
mov
stos
xchg
jp
loopne
lret
pop
test
jmp
mov
filds
out
bound
jbe
cmp
fimuls
sarb
ljmp
mov
addr16
or
sub
shll
inc
xlat
lock
cmp
xchg
jecxz
cmpsl
out
lods
clc
das
test
mov
cmp
aaa
in
cmp
stos
rcrl
outsl
add
cmp
out
dec
hlt
push
scas
sahf
and
jnp
xor
loop
in
pop
mov
gs
xchg
dec
xchg
dec
andb
insb
insl
lahf
lahf
or
std
in
xor
in
ds
mov
aaa
mull
addb
imul
mov
or
add
ror
aad
repnz
adc
push
movsl
xchg
add
add
mov
adc
int3
repnz
rorl
cmp
ret
sub
xor
cmp
sbb
push
fisttps
cli
or
and
cmp
daa
push
cmp
pop
push
mov
pop
mov
sbb
push
ss
add
leave
pop
add
pop
idivb
and
notb
xor
mov
test
sbb
xorb
cmp
bound
je
sahf
rolb
mov
xor
aas
mov
in
mov
clc
lods
imul
test
arpl
ljmp
xor
jno
sbb
pop
or
movsl
cmp
leave
pop
repz
or
adc
jecxz
add
push
enter
lret
fisubl
jbe
jae
aaa
inc
mov
pxor
dec
cwtl
movsl
pushf
in
int3
test
pop
shlb
adc
repz
ljmp
adc
adc
and
mov
cmp
test
dec
sub
sbb
aaa
negb
mov
scas
push
push
xchg
and
mov
gs
push
push
pop
push
pushw
dec
imul
xchg
add
test
add
push
push
cld
aaa
hlt
add
clc
stos
lret
mov
aam
push
fsts
dec
icebp
out
ret
test
pop
mov
mov
jg
cli
arpl
mov
jne
pop
arpl
fistpl
out
test
scas
sub
sub
test
sbb
sahf
sub
pop
roll
fstpl
mov
and
lock
jecxz
push
jno
inc
xchg
adcb
push
aam
lret
inc
gs
in
aas
cmc
mov
mov
jo
aad
or
pop
sub
add
mov
js
popf
in
test
aaa
push
in
outsl
addr16
cmc
or
cmp
nop
mov
cmpsb
xlat
scas
arpl
cmp
leave
pusha
bound
cmp
cmp
dec
add
inc
mov
inc
jg
int
sbb
mov
or
mov
repz
pop
iret
pop
stc
sub
fwait
scas
pop
mov
out
adc
jge
sub
mov
push
sbb
push
test
cmp
sbb
cmp
imul
pop
and
or
scas
in
stos
clc
cli
mov
add
mov
in
xor
icebp
call
or
fadd
xchg
ljmp
and
push
bnd
mov
fstpt
push
adc
mov
inc
leave
in
js
mov
mov
ljmp
lods
sub
mov
loop
sbb
fidivrl
rorb
adc
and
outsb
rol
mov
int3
ds
or
stos
pop
lock
idiv
sub
or
push
fwait
adc
test
rcr
shll
jno
ds
fimuls
lea
rorl
lods
mov
subb
cs
lret
repz
cmp
xchg
pop
add
add
ret
in
push
inc
cltd
mov
popf
movsl
inc
imul
xor
fisttps
xchg
lahf
xchg
sub
inc
xor
xlat
cwtl
mov
push
jns
aad
sbb
jmp
mov
lret
les
jl
call
add
shl
xchg
setl
shll
jg
insl
adc
pop
adc
pop
add
cli
xchg
mov
jle
popa
pop
dec
jnp
lock
ret
xor
aas
insb
jl
leave
xchg
ljmp
mov
popf
sbb
rol
mov
push
fs
push
imul
pop
call
mov
sub
ret
cmc
push
xor
mov
in
fadds
out
inc
les
iret
pop
insl
jns
ret
xlat
fldl
mov
das
shrl
ds
add
push
pop
pusha
scas
negl
std
popa
pop
out
sbb
fstpl
out
fmuls
xchg
dec
pop
jl
mov
into
inc
dec
pop
mov
and
fsubl
dec
ret
into
pop
mov
stos
ljmp
add
pusha
cmp
jbe
outsl
pop
cmp
mov
dec
fisubl
add
push
xor
jmp
arpl
pop
mov
push
adc
dec
pusha
sbb
mov
inc
adc
push
repz
pop
mov
sub
dec
divl
cwtl
clc
sbb
movsb
lds
jae
test
push
movb
jae
out
loopne
jp
sarl
xor
clc
arpl
popa
mov
lock
fs
mov
or
lods
jl
and
hlt
in
mov
mulb
pushf
jg
nop
jle
push
push
sub
test
cmp
mov
xchg
ds
out
cmp
inc
addr16
cmpsl
xchg
jbe
mov
mov
popa
into
test
insb
popf
stos
sbb
mov
in
adcl
in
ffree
pop
pop
fldenv
jp
lahf
insb
push
scas
loopne
sahf
repz
mov
pop
divb
pusha
pushf
sub
shl
les
das
sahf
mov
cmp
mov
add
dec
test
xchg
outsl
inc
jo
rol
jns
outsb
cmpsb
loop
fnstcw
mov
mov
push
xchg
push
add
es
int3
icebp
hlt
negl
push
lahf
lock
rol
inc
cmp
inc
sub
pop
pop
icebp
data16
fsts
push
pushf
mov
dec
movsb
cli
mov
clc
lods
les
push
fbld
jo
outsb
jnp
aaa
jg
xchg
jo
or
inc
sub
jno
cmp
test
out
repz
sbbl
aaa
bound
sti
popf
add
popf
cmp
mov
pop
mov
sbb
mov
dec
sub
jae
push
push
xchg
in
lods
leave
lahf
sahf
loop
inc
fwait
and
mov
loope
insb
scas
sti
loop
lret
push
loope
loope
movsl
push
lcall
lret
rolb
push
sub
fidivs
jmp
ljmp
mov
sahf
fwait
cmpsl
fiadds
jns
jno
pop
stos
fidivl
push
flds
pop
sub
push
mov
icebp
in
jnp
mov
scas
leave
inc
movsl
testl
push
lds
xchg
mov
stos
dec
test
xchg
call
aas
or
jne
pop
data16
ret
rcrl
lock
mov
aad
insb
imul
int
jp
push
js
pop
mov
mov
out
pop
xlat
outsl
lods
xchg
loopne
mov
sbb
fsubs
inc
inc
bound
push
icebp
inc
cmp
xchg
or
loope
push
repz
mov
xor
in
fcomip
cld
xchg
pop
out
fldcw
mov
mov
sbb
jne
les
cmpsb
scas
cltd
mov
cmp
sbb
dec
leave
mov
test
arpl
jae
jmp
dec
outsl
fstpl
test
jns
cmp
out
clc
shlw
daa
in
mov
int3
mov
xor
jecxz
jae
mov
pop
sbb
addr16
int3
adc
jge
push
bnd
xchg
mov
jg
cmp
pop
testl
test
ja
jo
or
mov
push
cmp
cmc
xchg
mov
pop
cld
insl
push
inc
jge
mov
xchg
ljmp
push
sbbl
es
add
pop
inc
cmc
or
les
cltd
stc
jnp
rclb
stos
shl
sub
jg
mov
xor
inc
ja
inc
xor
mov
push
enter
loop
cmp
cmc
es
push
out
sbb
js
dec
in
in
xchg
push
test
push
pop
dec
sahf
es
and
int
arpl
push
lods
cmp
outsl
jo
jbe
repz
jp
pop
mov
popa
cltd
add
sbb
leave
adc
fiadds
out
jle
mov
jg
imul
push
mov
cs
das
lahf
loopne
cmpsl
sbb
mov
fidivrs
or
mov
nop
or
pop
lret
push
out
out
push
cmpsb
fidivrl
xor
lcall
data16
xchg
cmp
push
and
mov
fdiv
dec
mov
push
push
dec
push
mul
popa
cld
cmp
mov
push
lret
push
ja
cmpsl
repnz
inc
loope
aad
push
sti
push
cltd
pop
test
inc
dec
or
xor
sti
sar
cmpsb
xor
jbe
mov
adc
dec
stos
push
lret
pop
cmp
mov
lret
pop
stos
push
ret
adc
jb
cmp
mov
in
and
add
repnz
imul
mov
repnz
jg
sbb
imul
xor
lods
orb
fs
bound
lea
gs
dec
mov
push
popf
cmp
mov
xchg
pop
xor
or
inc
scas
je
xor
cmp
cmpsl
push
cmp
out
adc
mov
out
and
pop
xor
jbe
fdivl
inc
dec
outsb
icebp
jge
mov
std
adc
and
cltd
and
aam
enter
mov
loopne
test
jnp
xchg
aam
aas
push
scas
sub
inc
bound
sbb
and
dec
dec
sbb
ficompl
rcl
mov
lret
sbb
push
sub
ss
push
lods
outsl
lret
daa
or
int
cltd
xchg
scas
call
mov
insl
outsl
in
movsl
ja
jns
mov
dec
fmull
in
cwtl
cwtl
fiaddl
outsb
xlat
push
mov
push
adc
dec
jge
and
dec
add
push
push
fistl
sub
dec
inc
addr16
pop
bound
mov
push
aas
sahf
and
loope
adc
aad
add
out
inc
ds
mov
pop
and
mov
js
cmpsb
mov
loop
les
mov
test
push
fst
jns
xchg
clc
sub
call
mov
fmulp
shlb
push
out
loopne
dec
adc
insb
ret
mov
mov
movsl
aaa
sahf
inc
out
sbb
lea
lock
call
repz
loopne
push
shrl
dec
add
rcrb
lcall
out
das
jl
cmp
out
jns
jbe
xchg
xor
push
lea
mov
xchg
push
pop
cli
shll
clc
xchg
push
xchg
fisubs
adc
jns
out
pushf
or
inc
sti
pop
mov
lods
pop
rcll
lahf
mov
iret
adc
mov
sub
ja
mov
repz
inc
cld
mov
mov
enter
sti
les
js
sub
es
mov
rol
xor
inc
and
fs
or
hlt
sbb
sbbb
insb
and
mov
cli
sbb
cmp
arpl
cmp
clc
jp
and
xor
jns
xlat
js
stos
add
mov
aam
xchg
jg
add
lock
mov
out
ret
mov
repnz
mov
inc
mov
mov
jno
pop
mov
xchg
or
je
roll
lds
sti
mov
imul
sub
call
push
push
xchg
mov
dec
dec
dec
inc
or
push
mov
push
das
sbb
push
leave
scas
or
jmp
xor
call
lea
cmpsb
sub
or
inc
jne
mov
nop
sbb
push
pop
sarl
mov
fimuls
xor
dec
outsb
inc
mov
push
or
or
call
sub
cli
pusha
repz
outsb
push
hlt
das
sub
push
mov
mov
out
sub
mov
inc
int3
mov
aam
imul
pusha
addb
mov
ss
stc
or
cmpsb
mov
hlt
in
into
sub
icebp
cmpsl
es
jno
cld
adc
ret
mov
jo
mov
in
fwait
jns
mov
in
lahf
das
outsb
rolb
xchg
jle
movsb
dec
scas
mov
pop
mov
lret
aaa
mov
inc
in
fidivrl
pop
pop
nop
push
and
mov
sbb
nop
push
and
inc
dec
xchg
adc
dec
sahf
jnp
cmp
mov
data16
cs
cmpsb
scas
xor
int
or
xor
fsubrs
pop
loop
xchg
xchg
mov
notl
nop
pop
lret
sbb
sarb
fcompl
lret
popf
push
sub
stc
cwtl
aaa
or
icebp
pop
adc
mov
in
dec
pop
sub
fadds
sub
xchg
jb
sub
imul
sbb
mov
mov
inc
push
test
int3
sub
test
and
lret
test
mov
jecxz
jb
pusha
xor
pop
inc
pop
cs
ret
gs
sub
loope
jnp
fistl
jge
in
scas
cmp
insl
fistpl
int3
fisubl
cld
jl
les
in
jp
push
out
pop
fnstcw
scas
inc
sub
ja
aaa
cltd
push
sub
cmp
jmp
mov
xlat
pop
lods
test
push
sahf
xor
fptan
push
rorl
inc
sub
adc
or
out
in
add
out
cld
sub
jb
push
jb
arpl
gs
adc
ja
push
xchg
ret
sub
xchg
pushf
out
pop
out
aam
lods
mov
mov
fisubs
jne
push
push
jne
jne
cmp
mov
inc
pop
nop
jge
add
test
sub
sub
sub
in
fsubrp
cmp
sbb
dec
mov
xchg
adc
sahf
dec
pushf
out
mov
inc
xor
mov
sahf
push
jns
xorl
adcl
test
mov
fists
fdivl
lods
test
jecxz
pushf
mov
movsl
cli
fwait
subl
mov
xchg
adc
fidivrs
fbld
cmpsl
lcall
or
sbb
jge
lock
psllq
call
adc
adc
test
xchg
push
lret
mov
push
dec
add
add
xchg
and
sahf
xor
out
pop
dec
pop
adc
mov
pop
out
cs
sub
lcall
data16
adc
pop
outsb
cmp
push
ret
adc
or
sub
mov
dec
xchg
sbb
sbb
add
lahf
es
ja
int3
push
imul
imul
mov
and
push
fs
jmp
jo
add
add
mov
add
add
push
cmpl
push
or
add
xorb
add
shr
pop
adc
add
imulb
jns
loope
ret
aas
dec
push
jo
pushf
xor
pop
in
cltd
lcall
pop
xchg
xor
xchg
outsb
jo
out
cld
fs
pop
cmc
xchg
cli
call
sub
mov
dec
or
push
out
testb
lahf
cmp
pusha
mov
pop
mov
sbb
xor
fiadds
jmp
jl
popf
xlat
scas
pop
rcrl
dec
jg
mov
ljmp
sarb
out
and
mov
aam
inc
or
mov
stc
loop
push
jg
outsl
in
imul
xchg
scas
jno
inc
xchg
mov
mov
cmc
loopne
bswap
mov
xor
lcall
push
push
into
flds
test
pop
in
dec
jb
jo
adc
cmpsl
adc
and
xchg
cmp
xchg
mov
add
icebp
loopne
jp
mov
push
ljmp
in
daa
and
cmpsl
js
mov
xchg
aas
or
push
test
loop
xchg
das
jecxz
shlb
xor
imul
scas
mov
call
lock
sub
repz
push
push
add
add
andb
jg
push
jp
jmp
mov
cmc
adc
inc
xchg
in
inc
jmp
add
sub
mov
scas
xor
out
dec
or
hlt
fcoml
add
pop
out
repz
mov
mov
adc
test
jns
adc
mov
jmp
jg
push
xchg
repnz
mov
push
icebp
fsubl
mov
mov
pop
cld
insb
dec
ret
rcrl
dec
pop
into
mov
jp
xchg
mov
cmc
mov
sahf
data16
lock
test
pop
mov
sahf
aaa
bound
pop
push
loope
emms
mov
cmpsb
pop
inc
dec
dec
lea
pop
aaa
sbb
cltd
or
sarb
mov
sbb
ficomps
push
pop
push
mov
jp
mov
mov
mov
call
pop
stc
insl
sbb
and
mov
scas
test
shrl
enter
jb
mov
mov
dec
pop
cld
lods
adcb
push
hlt
add
out
cmpsl
mov
and
pop
stos
sub
scas
popf
adc
out
mov
adc
movsl
and
xchg
fildll
mov
xchg
fbstp
cmpsb
lcall
pop
clc
jle
psubb
sar
pop
test
pushf
das
nop
stos
stos
dec
xor
mov
movsb
inc
adc
scas
loope
enter
jne
scas
mov
sub
out
and
cmp
dec
adc
pushf
shl
ret
ficoms
mov
je
jbe
push
lcall
adc
mov
and
adc
ds
mov
repnz
cmc
repz
or
jno
sahf
pop
cmp
xchg
cltd
jle
shrb
dec
push
xchg
imull
in
shr
imul
popf
mov
xchg
jne
mov
mov
mov
push
cmp
stos
cmpsb
jnp
adc
cmp
mov
mov
adc
jg
xchg
inc
ret
lret
addr16
mov
sbb
test
jmp
xchg
insl
mov
mov
pushw
lods
jnp
int3
xor
repz
repz
jne
sar
jge
ljmp
mov
aam
push
adc
jmp
std
inc
loope
xor
addr16
mov
xlat
jl
scas
jae
arpl
xchg
stos
sub
push
xchg
ret
mov
outsl
mov
call
daa
out
movsl
shl
dec
cmp
jb
xor
inc
xor
cmp
pop
in
sub
sub
shrl
sbb
into
mov
push
adc
fiadds
arpl
adc
in
pop
pop
int3
mov
ljmp
pop
sets
out
mov
inc
add
iret
add
sub
mov
imul
or
pop
dec
cmp
sti
jbe
ss
scas
mov
lds
negl
push
cmp
adc
push
add
pop
lret
hlt
rorb
mov
xchg
call
or
and
lret
mov
jnp
movsl
addr16
clc
cmp
cmpsb
lock
lds
in
icebp
ljmp
call
cld
and
fstpt
out
cmc
inc
push
fsubrs
inc
mov
jmp
pop
pop
adc
out
lods
add
xor
dec
mov
inc
add
test
add
push
test
mov
ljmp
inc
out
out
fbld
push
adc
push
jle
test
pop
mov
lea
xlat
fistpll
imul
mov
xchg
mov
fcmovbe
loope
mov
fwait
xor
adc
sub
in
cli
push
jo
in
xor
push
mov
cs
xchg
cwtl
jge
in
sub
push
lods
in
iret
xchg
std
mov
adc
and
fisttps
pop
adc
out
mov
push
xchg
pop
jecxz
dec
mov
pop
xchg
pop
jnp
ss
add
xchg
mov
inc
jp
mov
jmp
mov
xchg
out
inc
sbb
scas
lea
ss
sbbb
inc
xchg
sbb
in
ret
dec
in
call
inc
mov
sbb
pop
icebp
xchg
out
jmp
call
sub
movsb
push
iret
cmpsl
sbb
jb
and
sbb
xor
or
fdivr
jl
fwait
stos
mov
sbb
inc
or
push
ret
addb
scas
aas
xor
mov
into
fbstp
leave
mov
lcall
jns
dec
aaa
dec
cmp
aaa
dec
inc
into
jle
fs
daa
jns
cwtl
ja
test
repz
pop
cmpl
mov
xchg
lods
fdivrs
adc
jne
lahf
dec
js
jno
or
mov
jmp
outsb
or
rcll
inc
jbe
or
subb
lods
add
arpl
mov
mov
in
inc
js
fisubl
cmp
ss
int3
mov
pop
adc
pushf
xchg
fimull
mov
std
insb
cmp
incl
xorl
sbb
add
gs
jbe
dec
push
sbb
cwtl
repnz
leave
cmp
movsl
imul
sub
or
enter
mov
jmp
ret
cli
aam
mov
stos
mov
sbb
xchg
lea
out
xchg
fs
movsb
sub
push
dec
jno
outsb
cmpsl
xchg
and
sub
icebp
pop
shll
xchg
mov
pop
addr16
mov
aaa
out
into
push
nop
jnp
fimuls
xchg
add
shl
fcoml
daa
cwtl
nop
push
jne
aad
mov
sub
jmp
jno
adc
cld
rcl
ja
cmp
mov
int3
aam
mov
fmulp
es
jnp
out
add
pop
sbb
push
into
test
or
les
popf
or
insb
lret
shl
sub
mov
xlat
mov
insl
arpl
xor
jp
inc
movsb
fimull
sbb
shll
insb
lahf
leave
sub
fnsetpm(287
jecxz
lods
mov
insl
push
push
push
daa
inc
fldenv
xchg
les
adc
fidivrs
pushf
das
jge
and
inc
movsb
pop
outsb
xchg
sub
jbe
lret
inc
shll
sub
pop
mov
pop
fwait
push
notl
push
push
sahf
cmp
daa
test
out
sti
rorl
sarl
lock
jne
push
test
xchg
rcll
aas
mov
es
arpl
repnz
sub
stc
fistpll
and
xlat
scas
pop
test
test
xchg
push
dec
test
lods
xchg
xor
pop
pop
xchg
sbb
jmp
and
dec
push
cmpsl
out
lods
pop
sbb
xchg
xor
or
imull
jbe
xchg
lds
xchg
sbb
jg
data16
pop
inc
pop
xor
repz
and
out
mov
in
jg
mov
sbb
imul
pop
adc
insl
and
jnp
icebp
dec
jecxz
mov
cmpsl
call
or
imul
xchg
pop
cmp
dec
inc
push
or
dec
or
hlt
lds
cmpsl
pop
xchg
xor
push
or
in
mov
les
cli
fbld
xchg
arpl
es
insl
adc
mov
push
or
ljmp
and
lock
jno,pn
call
bound
lahf
jle
test
pop
push
popa
enter
jbe
fsubrl
cmpsb
rorl
jecxz
imulb
pop
mov
mov
pop
cwtl
xchg
test
mov
and
fs
jg
add
ja
js
loope
cmp
mov
and
divl
loope
sbb
jbe
push
into
sbb
mov
inc
xchg
inc
jp
outsl
and
or
mov
pusha
cwtl
jns
push
ljmp
xchg
adc
pop
or
stos
dec
jmp
in
sub
popf
mov
jl
mov
mov
mov
out
mov
inc
orb
jmp
int3
loop
xor
mov
xchg
sbb
pop
push
or
scas
call
loop
adc
fcmovnu
jae
clc
bound
jg
adc
cmp
imul
mov
in
pop
in
mov
xor
hlt
rorl
enter
cli
pop
cmp
mov
notb
xchg
pop
adc
aaa
push
orl
test
pop
jmp
push
pop
sahf
mov
mov
inc
mov
mov
cmp
sarb
and
in
std
shlb
leave
hlt
imul
icebp
fwait
jns
adc
push
mov
xchg
sbb
inc
push
mov
push
jno
jno
pusha
stc
push
dec
pop
push
imul
dec
dec
pop
outsl
dec
pop
add
int3
fidivrs
movsb
movsb
push
cwtl
bnd
iret
xchg
jl
jns
nop
out
call
into
pushf
sbb
xchg
stos
jmp
lahf
push
sti
adc
cwtl
aad
push
sahf
popa
out
add
shlb
pop
jne
sub
mov
mov
and
adc
cld
daa
push
int
push
daa
dec
mov
inc
jb
es
test
mov
idivl
add
cltd
xchg
mov
mov
xor
lahf
mov
orl
enter
jbe
ficoml
and
loopne
or
xor
dec
mov
insl
jmp
mov
fs
mov
outsl
test
cwtl
out
lods
dec
leave
dec
insb
dec
je
leave
stc
pop
mov
cltd
mov
adc
add
mov
icebp
shll
sbb
daa
dec
lods
movsb
or
dec
push
test
dec
mov
lret
cmpsl
adc
sahf
dec
xchg
mov
add
and
lret
or
ror
fsubl
stos
and
and
jo
mov
mov
jne
inc
pop
fstl
dec
out
jecxz
jle
add
mov
aad
jns
mov
push
mov
mov
and
push
dec
xchg
xlat
idiv
cwtl
nop
mov
add
aad
in
lahf
push
push
shlb
sahf
adc
subl
mov
ret
xchg
cmp
mov
add
mov
pusha
mov
mov
push
xor
andb
shr
arpl
inc
sahf
lret
shl
mov
sub
fmuls
jae
xor
inc
cmc
aas
mov
imul
cmp
xor
mov
mov
cld
lods
or
pop
imul
inc
mov
inc
arpl
ror
and
shlb
and
push
scas
mov
or
xor
mov
mov
cld
mov
movsl
pop
shrl
mov
cmpsl
fdivl
adcl
mov
dec
jge
mov
xor
loope
cld
xchg
lret
ljmp
jb
std
cmpsb
rcl
mov
mov
pop
iret
push
mov
in
add
or
adc
dec
dec
andb
adc
cmp
mov
mov
xchg
jne
xchg
cmc
sub
mov
adc
rorb
test
fisttps
in
popl
dec
lods
dec
sub
xor
push
inc
lahf
push
insb
pop
adc
lcall
loop
jns
or
dec
test
sub
jns
movsl
xor
rclb
cwtl
aad
lods
loope
mov
or
daa
dec
mov
jb
push
pop
icebp
ja
outsb
jle
xchg
sti
pop
xchg
mov
in
sti
fst
mov
xchg
sahf
fsubr
add
stos
scas
sarl
mov
enter
int
icebp
insb
pop
push
mov
jg
xchg
out
filds
in
cmp
subl
sbb
pop
aam
push
mov
push
repnz
xchg
fmuls
dec
sbbl
dec
fisttps
cli
sbb
pop
push
enter
mov
cwtl
and
rcll
pop
and
sbb
cmp
cli
fnstcw
testb
push
add
xchg
test
xchg
andl
jns
shl
xchg
cwtl
mov
add
cld
pop
test
mov
sub
or
lods
enter
test
repnz
jae
sub
ret
jge
jne
sbb
adc
or
scas
stos
int
fwait
pop
sub
pop
jae
stos
cmp
sbb
repz
jge
push
mov
adc
iret
and
sub
jle
mov
and
cmp
je
mov
ja
cmp
cs
int3
test
xchg
jmp
bound
enter
inc
mov
add
adc
ljmp
js
sbb
in
sub
dec
mov
pusha
mov
inc
and
add
mov
add
icebp
xor
cmp
popf
imul
je
movsl
je
hlt
mov
scas
out
dec
outsb
fisttpl
subl
lock
cmp
mov
mov
cs
sub
ljmp
aaa
and
sbb
fcmovnb
pop
mov
and
mov
push
outsb
or
dec
push
and
inc
scas
clc
adc
adc
jo
dec
mov
scas
mov
push
les
dec
pop
daa
movsl
imul
inc
fcompl
inc
xchg
sahf
sti
push
cli
fwait
or
mov
in
dec
gs
shl
or
push
or
cmp
scas
popa
sarb
inc
ficomps
adc
rcrl
sbb
xorb
dec
shlb
test
cmp
leave
mov
push
hlt
popa
jmp
mov
aaa
sub
cltd
insb
shrl
mov
mov
dec
ljmp
das
stos
and
mov
and
xchg
icebp
data16
gs
dec
fcmovb
pop
mov
xorl
mov
adc
shll
clc
push
and
inc
les
jo
mov
push
sbb
cmp
ds
push
pop
mov
push
add
int
mov
fbld
repnz
or
lods
test
jne
sbb
cmpsb
add
push
scas
mov
out
inc
push
aas
incl
cli
adc
std
outsl
lods
cmc
xchg
stos
mov
mov
gs
cmp
fsub
inc
scas
notrack
ss
decb
repnz
dec
in
lret
jae
orl
adc
adc
dec
in
out
fcoms
shlb
and
repz
jo
sbb
jnp
roll
inc
je
sub
push
rclb
fsubrs
add
stos
stc
shr
cmpb
mov
int3
stos
adc
daa
call
repz
imulb
leave
hlt
clc
cld
outsl
jl
push
cmp
jno
cmp
jb
push
mov
mov
pushf
leave
std
test
push
repz
pop
or
xchg
fldenv
pop
xlat
mov
mov
jae
cmp
lret
add
fbld
shl
in
fwait
sub
insl
add
jb
cli
xor
sbb
sub
mov
cmp
cs
xor
ljmp
aas
jo
xor
mov
clc
outsb
and
cmpsl
in
xor
pop
mov
inc
lcall
push
mov
cmpsb
xor
fbstp
mov
jns
jge
fs
mov
cmpsb
clc
ljmp
cli
mov
jns
mov
iret
add
dec
int
mov
push
mov
xor
idivl
mov
fs
sub
inc
fsubrs
and
decb
dec
dec
jecxz
xchg
mov
pop
xor
pop
sarl
add
rcrb
fs
in
jns
pop
fistps
pop
push
jecxz
icebp
add
call
lcall
rorl
sub
mov
call
and
sub
and
dec
out
std
dec
or
xor
pop
shl
inc
outsl
dec
out
inc
roll
lods
jecxz
xchg
loop
pop
mov
xchg
insb
xchg
stos
jle
in
sbb
lods
stc
jmp
add
xchg
cli
lcall
push
ds
repnz
call
cmp
sbb
jle
hlt
mov
fsubr
aad
enter
push
cli
cld
lock
out
sar
dec
xchg
jg
jecxz
mov
in
pop
outsb
cmp
jg
xchg
into
lea
fisttps
fs
imul
sub
pop
mov
mov
ret
pusha
mov
andb
imul
dec
into
in
mov
pcmpeqw
dec
lcall
sbb
movaps
aad
mov
push
pop
mov
xor
pop
inc
lahf
clc
xor
adc
dec
or
jmp
pop
ret
add
sahf
add
addr16
das
shlb
push
mov
add
fidivrs
mov
lock
sbb
xor
pop
cmp
jle
sub
fwait
mov
fidivrs
out
xor
and
lods
adcb
dec
in
pop
pusha
mov
sbb
rolb
xor
sbb
stc
and
cmp
out
mov
jge
jecxz
in
inc
jnp
dec
divl
xor
add
addr16
popf
xor
mov
ss
xlat
int3
push
mov
mov
jae
mov
sub
test
adc
xchg
push
sub
xor
fcomps
pushf
popf
or
mov
cmp
cmpsb
mov
mov
fildll
icebp
lods
mov
sti
add
cmp
jle
push
in
sahf
mov
pop
sub
sub
das
jp
repz
fs
fwait
push
xchg
pop
mov
add
sub
lret
push
lock
andb
cmp
ljmp
adc
cld
mov
ds
sbb
decb
subw
xchg
fcoms
cld
ret
or
pop
je
jp
jg
out
hlt
xchg
fsubl
test
orb
ficoms
xor
xor
subl
aad
out
pushf
jbe
cmp
mov
fistps
xor
adc
lods
mov
pop
popa
test
cmp
dec
das
sub
cld
ret
daa
repnz
mov
and
popa
cld
push
iret
jp
pop
pop
and
lret
mov
ja
inc
inc
jecxz
mov
jecxz
and
mov
inc
in
mov
lods
clc
lret
into
and
vandps
dec
and
sbb
roll
mov
mov
xchg
mov
das
inc
dec
mov
loopne
fstpl
or
iret
in
orl
clc
daa
mov
js
dec
xchg
imul
pop
push
push
pusha
xor
jecxz
mov
cmpsl
mov
xchg
mov
xchg
xor
xchg
mov
dec
fwait
pushf
lock
sbb
leave
mov
cwtl
dec
sti
data16
psubd
sbb
iret
pop
fisttps
dec
sub
and
mov
jl
sub
loope
or
aaa
hlt
sarb
std
fwait
mov
scas
sbb
cltd
or
xchg
cmp
aad
stos
fwait
aam
ret
loop
jne
leave
sahf
dec
or
test
in
fwait
stc
push
icebp
adc
in
sub
push
pop
shrb
jg
movsl
adc
mov
mov
dec
xor
inc
pop
cmc
loop
stc
hlt
sbb
arpl
and
or
pop
cmpsl
pop
in
divl
dec
rcl
jne
repz
xchg
movsb
out
iret
lods
lods
movsb
mov
xor
mov
lock
aam
cmpsl
pushf
popf
xor
ret
imul
pop
ja
shrb
mov
push
sbbb
das
in
jg
fbld
lea
int
push
pop
movsb
lcall
mov
fidivl
inc
ljmp
popf
mov
push
test
xor
fmul
jns
jno
stos
rcll
sub
popa
sbb
jp
fnstcw
xchg
subps
adc
adc
cmp
mov
int
push
sti
in
fs
call
clc
push
rcrb
jae
xchg
sbb
cwtl
jmp
pop
jmp
cmpsl
in
mov
mov
fs
dec
sbb
mov
jp
jnp
pusha
push
loope
stos
pop
mov
mov
mov
ds
push
test
cmpsb
or
inc
adc
insl
out
sahf
sbb
add
pop
out
pop
popa
inc
push
xchg
jns
sub
and
adc
push
shrb
mov
pop
mov
int
aaa
or
lahf
inc
ds
xor
or
sahf
jb
ss
insl
mov
in
decb
jl
popa
xchg
and
in
fnstsw
cld
repnz
sub
lock
inc
add
loop
rcrb
leave
cmp
fcoms
loopne
adc
cmc
jle
xor
stc
jl
jg
push
prefetcht0
enter
scas
scas
xchg
fdivp
in
cs
inc
dec
cmp
mov
lcall
cmc
sub
lods
sub
mov
clc
cmp
shl
out
or
or
cmpsb
ret
mov
aas
lods
pop
rolb
push
jbe
adc
mov
fdivrs
test
and
xchg
jbe
sbb
in
mov
push
pop
outsl
jbe
sbb
mov
daa
push
or
movsl
mov
add
imul
mov
in
enter
push
or
xor
cmp
push
sub
fsubrl
mov
lret
js
test
icebp
div
pop
push
pop
mov
movsl
movsl
ret
xlat
mov
sbb
push
outsb
leave
fmulp
js
add
lret
xchg
imul
jp
leave
popf
cmp
out
xchg
rorb
subb
xlat
and
std
mov
mov
mov
test
sbb
pop
and
fcoms
testb
imul
adc
ja
in
jge
mov
push
dec
push
fistpll
fimuls
jns
push
push
push
stos
fcoml
cmpsl
mov
insl
inc
add
adc
out
into
adc
sbb
sahf
sbb
insb
xchg
mov
sub
enter
scas
xor
lret
xchg
outsb
xchg
sub
inc
int3
leave
cmp
dec
add
adc
xchg
adc
fcmovne
jae
push
mov
sub
xchg
ds
bound
je
cmp
mov
xchg
fadds
jge
and
or
dec
mov
jno
subl
pop
imul
inc
jmp
bound
sahf
or
rorl
rclb
xlat
dec
dec
adc
fcmovnu
jmp
lea
cmp
mov
cwtl
adc
fmuls
sub
pop
xorl
mov
test
jp
lcall
cli
icebp
pushl
dec
xchg
mov
ror
mov
pushf
pushf
dec
movsb
adc
or
mov
dec
sub
dec
cmc
outsb
aas
movsb
mov
dec
mov
jo
dec
sti
rcrl
push
push
sbb
lahf
call
jne
in
test
adc
into
push
push
hlt
mov
jno
adc
icebp
jl
mov
in
jp
ds
ja
les
emms
push
or
mov
insl
in
int3
mov
ss
mov
push
pop
sub
dec
inc
cmp
jne
sbb
sub
jno
or
cli
cmp
dec
mov
fs
jp
hlt
leave
repnz
sub
mov
jmp
aam
sbb
sbb
or
adc
fdivp
adc
out
pop
jbe
jl
and
into
aam
pop
jo
outsl
mov
mov
and
mov
mov
jno
xchg
mov
mov
adc
adc
iret
sbb
lahf
jo
cmpsl
dec
sbb
or
test
dec
mov
inc
xchg
mov
jl
out
mov
and
loope
imul
xchg
decl
loope
push
mov
cs
mov
movsl
ret
pop
inc
fcmovnb
push
push
mov
mov
insb
popf
or
adc
mov
loope
rolb
enter
mov
xor
or
lahf
mov
xor
adc
mov
inc
add
add
leave
cmc
divl
pop
push
imul
mov
mov
push
test
adc
and
mov
test
les
adc
pop
mov
mov
test
xor
sbb
jbe
sti
xor
mov
mov
cld
mov
cli
mov
aam
les
dec
aaa
int3
push
aam
jns
loopne
add
out
bound
xchg
neg
lods
sbb
dec
clc
jbe
jbe
addl
nop
cmc
out
aas
movsb
test
and
mov
and
aaa
outsl
pop
mov
mov
neg
xor
int3
aad
cmpsb
xchg
fistl
cmpsb
in
jnp
test
xor
jmp
adc
bound
rclb
loopne
mov
shll
xchg
mov
int
mov
sub
sub
inc
ret
xlat
lahf
add
mov
stos
int
hlt
push
jae
push
pop
sarl
imul
das
and
fwait
out
int3
rol
int
mov
xchg
cmp
pop
push
pop
xor
jns
xor
fwait
xor
rclb
jno
push
pop
xchg
pop
cli
filds
stos
xor
mov
add
or
jae
loopne
push
add
adcb
pop
in
jno
dec
daa
das
cmpsb
xchg
jae
mov
dec
fistpll
sbb
imul
sahf
pop
sti
test
xchg
inc
or
imull
or
jns
pushw
jb
flds
mov
addl
je
cmpsb
in
lcall
sbb
dec
fucomp
cwtl
mov
insl
sbb
sbb
jle
jle
lahf
push
pop
mov
jb
arpl
cli
daa
shll
xor
xlat
mov
in
imulb
mov
cmp
mov
leave
jo
adc
sbb
push
ss
jecxz
int3
lods
fwait
gs
je
in
stc
gs
data16
mov
out
sub
adc
fcoml
jmp
jne
test
pop
aaa
scas
mov
cmpsb
jnp
pop
insb
clc
iret
pop
mov
mov
add
pop
lods
or
mov
xchg
xor
insb
lock
xor
out
addr16
sahf
or
inc
dec
add
mov
repz
or
adcb
int
js
test
into
in
xchg
mov
je
rorb
lahf
pusha
or
mov
mov
inc
push
jnp
cmpsl
daa
ja
cmc
push
or
mov
xor
bound
push
lea
adc
mov
jmp
mov
test
testb
pop
xchg
cmc
or
mov
int
lock
movsl
out
pusha
mov
xchg
and
fsub
jns
cs
cs
mov
xchg
jg
bound
mov
movsb
icebp
popf
mov
lods
jae
push
iret
xor
pop
xor
std
out
mov
push
lret
cmp
mov
iret
bound
shrb
push
cmp
adc
jb
in
popf
mov
mov
jg
push
xor
mov
dec
stc
lcall
and
sbb
mov
xor
add
aaa
gs
fmull
sbb
adc
cmp
ss
repnz
fsubrl
mov
mov
gs
mov
cmp
adc
mov
mov
lcall
fs
and
fnsave
mov
test
cmp
xor
nop
cld
mov
mov
mov
jb
or
les
jle
sti
es
add
ror
stos
sbb
mov
or
push
std
sbb
addl
xchg
xor
inc
cli
dec
cmp
pop
mov
mov
loope
push
push
mov
shrl
aaa
stos
fnstenv
sbb
mov
add
xor
xchg
test
adc
loopne
nop
jne
shrl
sub
movsl
scas
std
add
in
mov
sbb
add
loopne
adc
sbb
jne
xchg
cmpsl
lcall
repz
sbb
jle
xor
xor
jne
icebp
lahf
jp
iret
cld
xor
pop
xchg
sti
loop
int3
rcr
fiadds
gs
call
dec
dec
aas
call
shrb
test
jmp
enter
std
and
inc
sub
cs
or
jmp
xchg
jbe
push
scas
out
push
lods
sbb
sub
pop
ja
lret
cmpw
dec
jmp
mov
int3
out
lret
dec
adc
xor
out
stc
adc
in
ret
fsubrs
imul
enter
and
lds
fsubrs
aam
cltd
ret
mov
jmp
sarb
sahf
push
shlb
mov
notl
xchg
mov
jns
xchg
push
mov
mov
enter
movups
xchg
enter
push
jmp
jle
stos
rcrl
mov
pusha
jl
jmp
add
pop
popf
pop
jbe
and
jb
inc
sub
cmp
jl
sbb
add
push
dec
jo
sub
rclb
rcll
sbb
je
fcomps
subl
clc
leave
dec
in
data16
test
imul
cmp
in
ret
mov
cmp
cmpsl
mov
test
and
shlb
and
jmp
pop
mov
jle
andb
imul
and
xor
sub
in
add
les
mov
js
fists
nop
inc
inc
push
in
xchg
insl
shl
jb
daa
lock
pop
in
test
jb
sbb
cmp
in
mov
fwait
movsb
outsb
jnp
push
fcomi
pop
push
sub
mov
dec
jl
in
and
int
adc
repnz
mov
push
les
es
mov
inc
lret
xor
insb
and
mov
mov
inc
sub
int3
jg
jp
cmp
ja
iret
hlt
mov
pop
add
pop
je
enter
pop
dec
cmp
lcall
mov
in
push
or
xchg
cmp
insl
cmovae
mov
sbb
mov
push
or
jae
xchg
xor
ja
cltd
out
mov
ljmp
stc
fxch
scas
shlb
mov
aam
enter
xlat
pop
test
push
jl
ret
adc
or
lret
imul
subb
and
pop
pusha
mov
aas
mov
stos
addl
clc
mov
gs
jg
pop
icebp
mov
gs
xchg
test
inc
cltd
lret
imull
jns
jl
stc
je
lcall
add
cmp
dec
jne
in
and
push
dec
js
add
xor
push
cld
aam
insb
rep
mov
add
fildl
cmp
push
imul
daa
sbb
rcr
rcl
out
jb
inc
pusha
mov
push
xchg
dec
sar
push
imul
dec
cs
lods
fstpl
imulb
sbb
xlat
jae
pop
es
xor
pop
mov
repnz
mov
or
loope
lcall
jno
fisubs
push
iret
jmp
mov
movsb
push
mov
lret
shll
xchg
add
jae
push
jle
mov
dec
mov
leave
jns
decb
jae
sbb
fsubrl
pop
dec
mov
jno
adc
and
subb
sbb
sub
mov
iret
aas
mov
jle
movsl
lret
or
xorl
inc
xor
pop
xor
fwait
leave
cmp
mov
test
out
repz
arpl
cli
lret
sbb
add
mov
mov
xor
movsb
jbe
cmc
jmp
imul
xchg
jge
mov
push
adc
cs
rcr
dec
mov
sub
popf
jmp
aad
shll
dec
aam
and
test
data16
rorb
fistpl
ret
shrb
and
fldcw
mov
test
popa
mov
xor
jnp
loopne
jp
test
cltd
xchg
lret
movsb
cli
push
stos
into
pop
adc
sbb
inc
divb
add
pop
xorb
mov
pop
sbb
stc
adc
movsb
adc
insl
inc
cli
adc
lea
movsb
movsl
fwait
cmp
cli
shrl
in
and
dec
fisubl
dec
ljmp
in
inc
mov
ljmp
addr16
insb
push
stc
push
add
lds
mov
out
xchg
jbe
cmp
sbb
adc
aaa
in
or
icebp
sarl
pop
pop
mov
mov
and
cs
or
movsl
xor
add
dec
push
icebp
divb
nop
test
dec
shll
in
clc
push
or
scas
pop
nop
loope
xor
outsb
mov
pshufw
push
loopne
pop
pop
ja
push
jne
je
jmp
jmp
popa
mov
scas
lds
push
stos
ljmp
dec
mov
dec
mov
cmp
and
push
push
push
faddl
ret
pop
cli
lahf
ds
popf
jmp
ljmp
xchg
and
or
push
cmp
push
push
mov
inc
lahf
sbb
stos
cmpsl
mov
and
imul
popf
aam
imul
xchg
cld
dec
fdivs
sub
in
filds
aaa
and
or
out
lret
cmpsb
inc
loope
and
bound
mov
xchg
mov
into
movsb
out
push
cmc
dec
aaa
popa
ret
mov
int3
daa
push
push
push
xchg
and
fwait
mov
adc
enter
mov
test
int3
sti
cli
icebp
jmp
cmpsl
arpl
sbb
loopne
ficoml
in
cmp
xor
stos
mov
in
out
rcrl
mov
inc
clc
outsb
mov
testl
jl
stos
ret
sbb
lods
aam
fstpt
pop
jne
movsb
jecxz
nop
add
in
pop
stc
out
and
jg
les
jae
je
cmpsb
in
inc
xchg
cmp
add
das
fwait
xchg
rcll
and
push
xchg
or
adc
xorb
lahf
data16
out
fwait
jnp
jmp
std
ljmp
arpl
js
cmc
mov
push
jge
inc
or
inc
mov
bound
lods
ss
in
das
lcall
mov
mov
out
xchg
fsubrp
movsb
in
mov
xor
gs
jns
std
jge
sub
test
fxch
push
or
pop
pop
cltd
and
outsb
insb
aad
pusha
into
stos
loope
cli
dec
fstl
mov
aaa
in
lcall
outsl
adc
out
mov
ficoms
ds
sub
or
pop
icebp
or
cmp
cs
in
imul
out
loop
dec
xor
jle
lods
or
mov
aaa
loope
scas
in
cmp
popf
pop
mov
push
xchg
lds
not
add
das
addl
out
addr16
adc
jb
add
aam
je
xlat
sbb
sub
bound
xor
mov
in
cmc
movsb
mov
mov
sub
out
sarl
cmp
jp
mov
movsl
mov
mov
jle
adc
xchg
in
ljmp
adc
fldt
xchg
and
pop
in
aam
sub
out
and
pop
in
or
inc
pop
adc
and
cmp
mov
mov
mov
test
out
rorb
mov
sahf
jne
lods
jmp
shlb
dec
repnz
out
movsl
adc
ds
jmp
mov
jbe
fcmovnbe
mov
icebp
fidivl
insl
jns
scas
testl
xor
mov
xor
leave
lods
push
imul
in
stos
jb
xchg
call
xlat
mov
sub
inc
aad
sub
rcrl
addr16
push
and
bound
fidivrs
cltd
stc
push
add
sub
push
loope
jle
add
push
gs
testl
adc
xchg
xchg
dec
std
mov
sub
cmpsl
in
adc
mov
aam
outsb
lods
pop
dec
lods
insb
xor
mov
clc
das
stc
jmp
mov
gs
or
movsl
sub
pop
mov
xchg
inc
push
outsb
cmp
cltd
icebp
dec
jne
pushf
aas
ret
sub
and
xchg
out
ficomps
sti
aad
inc
jb
sbb
fidivs
fistpl
mov
mov
ret
mov
adc
hlt
adc
mov
jns
push
or
stos
lock
mov
jno
mov
xchg
lret
fwait
and
add
push
test
and
rclb
cmp
shll
push
xchg
mov
mov
out
mov
cmpsb
filds
push
cmp
push
pop
repnz
lahf
inc
inc
cmp
cmovnp
stos
ljmp
gs
push
pop
inc
cld
adc
into
jb
nop
fwait
pop
cmp
mov
mulb
loope
mov
dec
xor
stc
xorb
leave
mov
das
and
pop
push
mov
pop
aad
mov
int
call
orl
mov
into
sbbl
push
std
push
and
arpl
jp
inc
nop
xchg
mov
outsb
sub
sbb
inc
incl
mov
xchg
sbb
jmp
shl
clc
stos
movsl
addr16
xor
stos
jmp
aam
out
lds
cmc
and
pop
lea
add
push
pop
orl
xor
fadds
push
fadds
dec
mov
icebp
cmc
outsl
mov
test
mov
enter
inc
cmpsl
sahf
mov
cmp
sbb
mov
mov
das
das
cmpsb
sub
xchg
adc
sub
fdivs
dec
in
pusha
out
lds
mov
imul
cmc
jmp
leave
mov
scas
sub
lret
adc
push
dec
add
das
aad
inc
ret
cli
fs
lods
test
cld
loopne
inc
jb
and
xchg
adc
cmp
cmp
add
or
rolb
push
jmp
popl
les
jl
inc
subl
jl
pusha
dec
cs
cmp
jp
jmp
xchg
add
jo
imul
mov
insl
dec
out
outsb
les
push
xor
jne
ja
xchg
xchg
xchg
cld
das
dec
jns
cmp
mov
cmp
fnstenv
and
jp
inc
imul
add
dec
lock
stos
aad
not
iret
push
cld
fsubrl
fildll
xor
jne
sti
xor
adc
sbb
pushl
js
mov
push
inc
xchg
jae
scas
xor
pop
ficomps
cmp
sbb
mov
mov
iret
clc
in
push
xchg
xchg
outsl
aam
repnz
in
sbb
mov
xchg
add
fmuls
xchg
adc
daa
jg
fabs
cmp
pop
xor
mov
je
inc
mov
int3
in
mov
fisubs
loope
cld
lahf
mov
jecxz
mov
fwait
adc
pop
in
inc
call
xchg
mov
cmp
ja
ret
fsubrs
jbe
xor
mov
and
pop
pop
in
lods
ja
inc
mov
das
push
fldz
push
icebp
lret
or
ss
out
stc
mov
cmp
ret
repz
loope
jnp
fsubs
es
jmp
orl
and
mov
pop
xor
inc
aas
sub
dec
pop
fs
test
movsb
sub
les
jmp
insb
aas
cmp
ficoms
mov
js
cmp
lock
and
inc
cwtl
push
and
scas
pop
fucomi
stos
push
xor
test
mov
and
lret
data16
test
or
sbb
dec
sub
xchg
xor
sbb
xchg
arpl
call
jbe
jp
out
mov
cmp
mov
pop
and
mov
push
subb
icebp
mov
fcoms
jbe,pt
frstor
dec
ret
frstpm(287
jmp
jbe
pusha
jb
mov
fiaddl
xor
andl
aas
jbe
and
mov
es
jno
fsubs
pushf
outsl
sbb
inc
mov
push
add
dec
jge
pop
ret
lods
rcll
mov
testl
adc
adc
sub
icebp
stc
mov
paddb
inc
into
mov
jb
cmc
dec
xor
mov
add
mov
out
in
mov
std
xchg
es
sub
enter
fstpl
in
dec
fwait
adc
pop
test
icebp
dec
pop
cli
push
mov
push
jle
ds
loopne
jnp
aad
lock
addr16
iret
test
int3
xlat
insb
sub
push
dec
in
cmp
test
inc
pop
lea
das
add
mov
fildll
call
inc
shlb
std
fisubrl
sarb
jne
mov
cmpl
iret
outsb
insl
lret
stos
sub
movsb
xchg
jbe
add
scas
mov
aaa
pusha
xor
add
int
cld
pop
outsl
lds
mov
rcrb
shll
mov
shl
loop
inc
pop
pop
lea
sbb
cmp
call
aad
cmp
push
aad
aam
jae
insb
dec
out
rclb
jnp
cli
pop
mov
and
psraw
pop
dec
sub
push
sub
or
fmul
mulb
repz
fld
sub
fbstp
inc
int3
xor
adc
or
movsb
ja
mov
sahf
mov
das
in
ljmp
ljmp
ja
xchg
xor
mov
sti
lods
in
xorl
out
outsb
mov
mov
jno
cld
jge
sti
add
lea
pusha
cmp
loopne
xchg
push
sbb
orl
cmp
int3
xor
ret
xchg
mov
ret
repz
adc
shll
roll
push
adcl
pusha
cmp
mov
faddl
fsubr
mov
aas
or
pop
lahf
xor
xchg
call
mov
sub
xchg
or
fidivrl
dec
sahf
stos
add
mov
hlt
cmc
je
es
cmpsl
jge,pn
mov
mov
movsl
xor
jp
insl
lods
mov
mov
pop
jle
push
mov
ds
fstps
fs
or
mov
mov
cmp
push
mov
test
addr16
pop
loope
xor
xlat
and
jg
jnp
and
mov
mov
mov
mov
xor
aam
jo
cmp
dec
enter
add
adc
or
adc
xchg
add
sti
out
pop
fs
mov
cmp
push
jns
ss
sbb
mov
leave
mov
sub
dec
sub
iret
pcmpgtw
aad
fcoms
pop
das
pop
test
sbb
xchg
sub
lcall
fcmovu
movsb
push
add
adc
inc
fcmovbe
js
aas
in
iret
pop
cmpsl
pop
cwtl
cmc
lahf
push
mov
testl
mov
inc
fwait
mov
cmpsb
adc
jo
sub
cmp
and
nop
xor
leave
adc
aaa
or
sub
lock
add
push
jle
push
sbb
dec
cmpsl
pop
addl
insl
sub
mov
push
xchg
cmp
inc
mov
and
hlt
cmp
xchg
jecxz
pop
insl
mov
mov
mov
or
xchg
dec
xor
out
pop
test
testl
repz
lods
negb
js
stc
xchg
data16
fimull
dec
popa
fs
lock
mov
call
mov
push
add
mov
xchg
push
fwait
hlt
xchg
fstpt
xchg
jle
xor
dec
pop
popa
inc
cmp
andb
mov
cli
adc
sbb
or
cltd
aam
mov
jecxz
cmp
mov
lret
push
lea
pop
sub
cmpsl
in
clc
call
sub
js
pop
ja
inc
out
adc
mov
xchg
or
js
imul
bound
xchg
xchg
enter
insb
sbb
dec
gs
out
push
dec
mov
jbe
dec
stc
dec
jb
movq
cmpsl
pop
out
lea
ds
std
les
add
xchg
jno
popf
pop
xor
loop
mov
fwait
sbb
dec
imul
addl
sub
fldt
or
and
mov
lds
outsb
leave
mov
ja
imul
ljmp
repnz
jle
dec
icebp
jb
pop
and
mov
mov
xchg
xchg
ficoml
or
jnp
ret
negb
cld
orps
cmp
dec
cld
cltd
cld
sahf
cmp
fiaddl
add
loopne
push
inc
das
jecxz
sub
lcall
mov
std
xor
dec
cltd
fdiv
cld
sub
inc
outsb
or
mov
cmp
mov
pop
call
ja
stc
js
ljmp
loope
mov
imul
pop
dec
std
push
cmp
gs
cmpsl
pop
pop
lds
or
dec
sbb
dec
gs
dec
in
mov
and
movsl
jecxz
adcb
add
pop
xor
sbb
mov
dec
aas
fcoml
mov
das
rcll
inc
jge
sbb
nop
fdivl
xchg
loop
and
sbbb
dec
pop
lds
fstl
pop
ja
int
rclb
mov
ror
cmc
mov
dec
popa
mov
mov
pushf
in
mov
jecxz
jns
mov
pop
inc
inc
push
pop
dec
mov
shl
mov
mov
dec
xchg
jo
iret
push
mov
jmp
jnp
enter
dec
and
loopne
jno
mov
push
lcall
push
mov
das
movsb
cwtl
mov
movsl
xor
mov
mov
sub
dec
test
xchg
icebp
sub
inc
leave
push
iret
roll
jecxz
sub
cmpsl
jecxz
in
scas
fsubrs
cmc
sub
sarb
notl
mov
jbe
in
mov
add
movsl
faddl
loop
cmpsb
mov
ja
dec
ret
subl
add
sarb
ret
popa
nop
pop
ljmp
mov
icebp
in
jge
aam
xor
mov
rcll
addr16
cmp
shll
sub
int3
and
daa
cmp
cmp
imul
push
ret
cs
fstpl
xlat
add
pop
ret
cmp
cmp
xor
outsl
inc
dec
mov
adc
test
cmpl
and
stc
or
xchg
xor
sub
lret
jns
jae
push
mov
push
jecxz
push
rorl
sti
adc
xchg
hlt
mov
dec
data16
data16
pop
jp
es
es
adc
mov
push
cmp
push
rcrl
jl
fdivs
ret
and
shlb
mov
out
ret
jns
mov
jne
or
gs
mov
test
jmp
sub
movsl
push
test
sub
or
pop
test
lret
mov
inc
add
mov
xor
std
sub
aaa
jecxz
les
imul
jmp
hlt
sbb
mov
xor
outsl
or
mov
inc
outsb
mov
movsl
mov
fwait
popa
cmpsb
and
lds
jne
push
popa
movsl
xchg
mov
outsl
pop
into
gs
cltd
jg
loopne
push
inc
cmp
mov
sbb
sti
mov
idiv
jb
mov
nop
loop
jae
jns,pt
bswap
bound
mov
or
jge
out
dec
loop
mov
or
aam
jl
data16
out
loop
cmp
or
fs
jg
sub
movsl
pop
fwait
nop
sti
int
mov
leave
sub
sub
xor
sub
pop
pop
dec
jle
pop
or
jno
fisubs
lahf
ficoms
push
fists
popa
subl
mov
das
xchg
or
sub
sbb
or
sub
pop
adc
cwtl
repz
cmp
std
inc
cmpl
pop
out
lds
aad
cs
mov
inc
xchg
sub
out
movsb
mov
jns
adc
mov
mov
ljmp
lret
add
adc
jmp
xchg
repz
adc
push
pop
lret
in
loopne
fisubrl
popa
mov
outsl
xchg
dec
xlat
mov
mov
dec
lret
and
ffreep
sbb
sub
xchg
cmp
mov
cmc
add
in
arpl
je
nop
mov
loopne
or
dec
cwtl
in
ret
jb
jb
notb
cmp
rorb
push
add
xchg
ja
jb
mov
lcall
mov
dec
addr16
andl
mov
loopne
dec
and
negl
hlt
mov
mov
adc
loopne
data16
pushl
loopne
push
imul
imul
mov
loope
scas
mov
mov
nop
dec
dec
cmp
sbbb
repz
cmp
dec
adc
aad
dec
inc
sub
jae
or
scas
add
jg
out
adc
pop
push
int3
mov
movsb
lret
pusha
push
mov
daa
sti
sahf
dec
pop
jne
mov
sub
js
jbe
mov
sub
cmp
push
in
stos
inc
jge
leave
adc
xor
adc
jne
sbb
loopne
popa
sti
incb
mov
fcmovnu
or
fpatan
lds
mov
mov
out
xor
sub
mov
lcall
arpl
mov
xor
pop
cmp
xchg
fprem
gs
xorb
push
daa
pusha
fwait
xchg
and
or
fistl
rcll
cmc
dec
mov
repnz
sub
mov
shrl
js
fidivs
dec
fldl
shl
mov
outsl
into
pop
repnz
mov
pusha
xchg
shrl
xor
sub
fistps
or
mov
mov
stos
cmc
cmp
xor
xor
loopne
sbb
jo
and
ljmp
push
cmpsb
dec
les
js
add
fsubr
stos
in
mov
and
subl
in
push
sarb
inc
inc
cltd
popa
pop
jo
sub
shll
cmp
lret
loope
cmp
cs
call
adcb
mov
add
scas
pop
inc
pusha
addb
push
inc
push
dec
jne
fildl
push
ljmp
pop
jae
fistps
jle
xor
lcall
push
mov
mov
fptan
jo
jbe
add
in
stos
cli
cmp
jnp
test
sub
pop
mov
nop
cmp
fnsave
xchg
rcrl
imul
pop
pop
int
mov
push
dec
dec
imul
sbb
inc
or
push
fimull
jae
sbbl
mov
mov
jl
cmp
and
xchg
mov
ljmp
mov
adc
jecxz
outsb
or
mov
repnz
add
cwtl
inc
aas
lahf
cmp
insl
scas
std
mov
cld
mov
inc
lret
push
ds
pusha
enter
xchg
jl
out
gs
pop
dec
daa
imul
adc
mov
enter
sbb
testl
pop
push
jno
hlt
jnp
pop
lret
leave
hlt
les
mov
fstl
adc
mov
hlt
int
fsubrl
dec
sbb
jnp
sub
fldl
mov
push
insb
mov
cltd
push
fcomp
fsubs
orl
sbb
ror
pop
ljmp
xchg
cmp
dec
inc
lds
test
push
add
lahf
jl
sti
pop
jns
mov
aaa
mov
mov
sti
xor
jp
test
stos
adc
inc
adc
push
dec
in
jl
lods
aam
test
lcall
int3
cltd
or
fmul
or
adc
lods
int
add
popf
lahf
xor
jge
cwtl
pop
pop
mov
lahf
idivl
add
dec
rorb
mov
pop
dec
ljmp
out
mov
jecxz
xchg
in
and
dec
stos
call
cwtl
sti
xor
icebp
xchg
aas
outsb
fstps
mov
cmp
movsb
icebp
push
addl
pop
das
pop
fistps
mov
inc
jp
pusha
or
repnz
icebp
enter
fs
xor
hlt
xor
and
fidivrs
xchg
xor
sub
js
push
stos
mov
mov
fsubrs
pop
inc
test
call
sbb
popf
jle
lcall
push
xchg
push
pop
mov
push
scas
call
push
add
sbb
ficoml
mov
pop
sub
and
sbb
adc
ds
mov
add
push
cmpsl
lea
pop
and
and
cmp
xchg
adc
mov
cli
lret
sbb
cmp
jle
arpl
outsb
mov
cmp
xor
in
clc
mov
scas
fmull
mov
add
xchg
inc
jns
bound
mov
les
int3
mov
test
adc
icebp
stos
or
shrl
loop
clc
mov
mov
loopne,pn
push
pop
cmpb
out
inc
adc
leave
fsub
xor
imul
jb
in
negl
mov
out
lret
fwait
testb
fwait
mov
pop
rorb
movsb
sbb
cmpsb
and
shll
mov
lods
mov
insb
lds
popf
mov
dec
gs
push
outsl
movsl
jb
mov
xor
gs
popa
imul
inc
jnp
int
sub
dec
stos
mov
in
aam
mov
pop
out
shll
loop
scas
push
inc
adc
fistpll
mov
lds
movsb
cmpsl
jo
jae
or
cltd
movsl
adc
mov
xlat
imul
mov
jmp
lret
scas
inc
js
scas
into
mov
in
fidivs
das
pop
hlt
inc
mov
stos
xchg
cmpl
and
pop
loop
cmpsb
sub
mov
dec
sbb
cmp
mov
sbb
sub
popa
xor
or
cmpsl
cmpsb
rcrb
adc
fcmovb
pop
into
xchg
dec
inc
jp
sahf
mov
mov
pop
repnz
divb
sub
push
and
cld
xor
mov
dec
xchg
sub
jbe
mov
or
icebp
pop
sub
ret
xchg
imul
bound
rorl
mov
inc
cmp
lahf
cld
cmpl
insl
into
andl
sarb
fstpt
scas
adc
pop
pop
mov
mov
sub
push
jb
fucom
repz
push
sti
bound
pop
cmpb
test
test
lods
cld
fnsave
decl
insl
dec
inc
je
out
data16
inc
cmp
or
xor
jle
or
dec
pop
mov
mov
mov
sti
xchg
xchg
cmp
mov
push
rcll
cmp
pop
mov
jmp
enter
push
jg
push
jl
xchg
pop
push
shl
add
int3
mov
dec
in
jo
out
dec
mov
xchg
in
stos
xchg
jnp
mov
sub
push
loopne
out
into
xchg
mov
xchg
sbb
mov
cmp
enter
in
vpand
cmp
fsin
or
jae
scas
repz
mov
add
cvtps2pi
and
gs
loope
sar
fwait
aaa
aaa
xor
cmpsb
mov
sub
inc
loopne
into
add
mov
add
jl
inc
sub
scas
and
ror
fbstp
sti
jg
aaa
xor
and
pushf
adc
and
out
and
scas
push
cmpsb
sbb
fnstcw
and
gs
in
nop
mov
xor
inc
pop
push
cmp
push
mov
sub
jae
pop
jnp
pop
adc
ljmp
cli
sub
repnz
sub
test
mov
add
aaa
out
sub
add
lcall
aas
xchg
cs
rclb
ja
jle
or
dec
push
add
pop
mov
dec
iret
inc
push
cmp
rorl
mov
fisubl
int3
shlb
push
cmp
xlat
gs
jle
cmp
stos
not
jnp
push
aaa
mov
fimuls
pop
sbb
or
shlb
push
xlat
insl
push
mov
mov
or
adc
ds
mov
in
dec
pop
nop
stos
jmp
cmp
jp
add
orl
gs
stc
sbb
stos
cltd
sbb
add
in
or
ja
ja
add
sub
mov
or
ficoml
adc
inc
sbb
addb
je
pop
es
xor
ja
push
fidivrl
cli
jnp
dec
cmpsl
int
or
xor
dec
inc
inc
loope
pop
shr
hlt
jecxz
and
and
out
xor
in
mov
xor
mov
popf
push
push
sbb
or
test
inc
in
sahf
lret
pushf
xchg
in
ret
ret
mov
dec
in
aaa
add
sub
mov
imul
insl
int
sbb
add
je
cmpb
push
sbbb
adc
shll
dec
mov
ret
pop
pop
inc
xchg
test
into
mov
imul
dec
popa
jno
sub
rep
movsb
pop
inc
addr16
mov
fsub
cli
into
jnp
sub
cli
rclb
adc
xchg
subl
jle
ljmp
stc
hlt
jns
jl
lods
mov
adc
in
xor
lock
mov
xor
pop
sbb
int3
xchg
xchg
nop
mov
fwait
adc
sub
test
mov
test
call
jb
arpl
insb
inc
mov
shl
mov
xchg
sub
test
adc
pop
push
inc
sbb
push
mov
cmp
adc
scas
and
add
sbb
or
mov
arpl
jle
iret
cmc
inc
cwtl
add
cmp
aad
outsb
push
test
lret
jb
xchg
push
mov
adc
loop
out
lock
lock
push
loopne
jle
push
repz
or
data16
xchg
push
divl
add
mov
xor
dec
push
cmp
push
and
push
pushf
inc
cmp
pop
shlb
xchg
sub
insl
mov
mov
dec
xor
into
ret
push
inc
push
enter
daa
int
xlat
xchg
out
nop
ret
movsl
lahf
stos
jns
loopne
mov
or
fbstp
sub
dec
call
movsb
push
fmull
lret
pop
mov
adc
xchg
cmp
fisttpl
fidivl
mov
lret
jle
or
out
cmp
jmp
pop
add
imul
push
push
mov
jb
pushf
mov
ss
mov
hlt
pop
dec
sub
inc
xor
inc
mov
xor
aaa
lods
scas
add
adc
testb
addr16
pushf
cmp
jae
stos
xor
sti
xor
repnz
xchg
push
ret
jo
das
xchg
and
pop
mov
cltd
lahf
mov
xor
pop
mov
gs
je
sbb
jae
imul
aas
inc
ds
and
addr16
jle
test
jne
xlat
dec
cwtl
cmp
xor
pop
test
orl
xor
mov
mov
cld
mov
sahf
jnp
sub
jge
push
pop
sub
sub
dec
jp
idivl
adc
mov
fistl
fcmovnbe
loop
mov
mov
jmp
sub
jp
sub
or
clc
cwtl
insb
stos
rolb
test
mov
gs
mov
xchg
jle
call
fcmovnu
jae
stc
sbb
repz
push
jecxz
mov
lds
cmp
push
ljmp
inc
pushf
sub
jnp
insb
out
jp
mov
or
xor
cmp
pop
and
or
jmp
mov
mov
rcrl
lret
pop
mov
sub
mov
sub
pop
inc
pop
lods
inc
stos
hlt
bound
dec
cmpsb
jbe
mov
lods
lock
aaa
jmp
push
addr16
inc
xchg
outsb
pop
cwtl
fisubrl
inc
popa
inc
das
and
test
xchg
adc
mov
popl
outsl
int3
mov
out
enter
and
mov
sbb
aam
shlb
in
pop
dec
push
dec
push
in
cmp
inc
lcall
add
lcall
scas
push
mov
call
imul
jo
sub
or
pop
jge
clc
and
aam
andb
test
xchg
xchg
ffreep
call
lret
stos
cmp
jnp
or
cmp
xor
jp
mov
inc
mov
shr
mov
mov
sub
or
push
in
sbb
idivb
rcrl
push
lret
shl
xchg
dec
in
sub
loope
repz
cld
movsb
hlt
push
and
cmpsb
cld
mov
cmp
xlat
enter
xor
pop
mov
lcall
dec
adc
push
pop
and
jmp
jbe
lahf
lods
push
xchg
call
and
movsb
int3
push
mov
aad
int
insl
mov
int
adc
mov
test
mov
movsl
outsb
xor
scas
sbb
mov
rol
incl
subl
repnz
inc
jns
int3
fs
fstl
jle
call
inc
movsl
imul
xchg
movsl
pushf
movsl
jae
cmp
addr16
or
push
leave
xor
scas
mov
pop
mov
inc
in
std
pop
add
fidivl
xor
pop
sbb
filds
adc
call
leave
ret
mov
mov
cli
sar
stc
mov
inc
sub
lahf
push
bound
adc
adcb
lods
xor
data16
pop
sub
or
lods
es
shll
imul
pop
lods
or
movsw
cwtl
or
out
jae
gs
fs
outsb
popf
bound
push
mov
mov
xchg
lods
fs
xor
jo
icebp
xchg
pop
negl
mov
gs
add
cmp
mov
and
loop
pop
and
jno
ret
adc
insl
in
clc
sub
jmp
mov
inc
cmp
rorl
pop
cmp
mov
mov
iret
add
in
inc
jnp
sbb
and
and
lcall
pop
clc
subb
lea
test
or
pop
push
mov
sti
jno
cmp
add
inc
icebp
cmc
orl
dec
mov
pusha
lahf
jmp
push
loop
or
xor
inc
popa
stos
xchg
lret
xor
loopne
popf
loop
pop
lds
std
mov
fiadds
dec
sub
adc
push
push
test
or
shrb
js
dec
inc
add
and
dec
inc
gs
fnsave
movsl
mov
mov
out
lret
addr16
jmp
pop
ds
sahf
mov
mov
gs
int3
jl
fildll
daa
loop
adc
xchg
jl
mov
outsb
fnstcw
addr16
ret
aaa
shll
lahf
in
mov
mov
call
cmp
outsb
notl
pop
stos
jecxz
adc
imul
nop
movsl
xor
jb
ljmpw
push
ds
lahf
xchg
out
xlat
lods
sub
dec
mov
xchg
xchg
inc
push
push
pop
xor
out
sbb
shll
mov
pop
mov
or
dec
repz
loop
mov
cli
sub
pop
fsubl
push
in
lret
mov
sbb
shl
dec
sbb
jl
cmp
in
or
aaa
fistl
dec
daa
mov
mov
push
sbb
and
fdivrp
fwait
scas
std
hlt
or
jp
frstor
sub
add
stos
int3
ja
enter
std
mov
cmpsb
call
stos
out
rorb
sub
push
mov
cmp
add
mov
xorl
dec
sub
fmul
es
cmpsb
das
lock
sbb
and
in
sub
jb
pop
jl
or
movsl
sub
and
mov
sbb
pushf
in
in
mov
inc
mov
dec
ja
in
std
push
xchg
dec
daa
mov
jge
push
out
jl
inc
in
arpl
jo
or
mov
sub
scas
stc
push
pushl
xchg
stos
insl
test
sti
outsl
jnp
in
mov
xchg
cltd
xor
lock
movsb
xor
dec
mov
mov
pop
dec
ss
pop
stc
sub
aaa
lock
dec
outsb
and
out
dec
outsl
and
cwtl
jb
fld
lcall
pop
or
test
xchg
shll
and
inc
movsb
jno
add
ss
fisttps
add
pop
push
pop
and
arpl
xchg
inc
aas
sbb
mov
pop
shlb
cmp
pop
add
xchg
xor
pop
and
lret
xchg
pop
xor
cmp
cli
shlw
int3
mov
js
mov
mov
push
movsl
bound
leave
stc
mov
mov
fbstp
out
aaa
mov
pop
hlt
cli
mov
cwtl
ljmp
movsl
or
xchg
mov
into
rcr
push
or
adc
xchg
stos
cli
dec
mov
or
sub
in
ss
jmp
dec
mov
sub
psubusb
lret
xchg
ljmp
fimull
jmp
leave
ret
insb
aaa
adc
fs
das
mov
jp
adc
fldt
iret
push
mov
xchg
lds
fs
in
imul
push
stc
scas
xchg
imul
inc
xchg
mov
cmc
js
and
andl
mov
cmp
cwtl
sbb
jecxz
add
fnstsw
push
jns
nop
leave
movsl
cmp
sub
cmc
loop
daa
lret
stos
mov
sarl
mov
sub
je
movsb
mov
pop
mov
jp
out
out
xor
fisttpll
lret
mov
aad
sahf
pop
and
xchg
stos
jl
insl
dec
ret
inc
xchg
repnz
in
loope
cld
sti
aad
imul
fisttpl
xchg
daa
adc
in
xor
inc
sbb
ja
bound
inc
into
loope
movsl
insb
js
int
lods
jg
jl
adc
jb
test
es
hlt
repz
loope
add
pop
inc
scas
insb
outsl
xchg
repz
sti
mov
insl
loope
imul
cmc
push
icebp
ds
shl
sub
and
stos
les
cmp
fnstsw
push
sti
insl
ret
int
push
add
sbb
xor
aas
fidivrl
and
sbbl
push
and
loopne
cwtl
mov
testb
fisubrl
loopne
dec
push
outsl
push
mov
mov
or
ds
out
hlt
push
arpl
lcall
in
mov
out
mov
push
test
aad
pushf
repnz
pop
or
mov
cmpsl
cmp
pop
mov
fistps
xchg
fwait
outsl
lods
ret
cmp
iret
scas
data16
daa
dec
int3
xchg
imul
rclb
and
fcompl
pushw
daa
inc
bswap
adc
pop
cmp
cld
inc
outsb
push
add
bound
int3
sbbl
sarw
clc
das
fisubrl
xchg
dec
ja
jmp
xlat
xchg
je
sbb
inc
lcall
into
gs
scas
sbb
sbb
add
xchg
test
or
jl
and
sbb
rcrb
rcr
push
test
mov
lret
gs
shr
adc
xchg
gs
jns
arpl
jnp
adcb
mov
adc
fildl
aad
fistpll
mov
mov
in
lret
movsl
or
pop
inc
fmull
sbb
xor
leave
xchg
lea
in
xor
mov
xor
mov
jmp
mov
mov
insl
jns
push
mov
fs
adc
mov
xchg
enter
outsb
dec
sbb
mov
addl
sbb
push
sub
add
data16
cmpsb
cli
mov
sub
cmc
pop
push
neg
or
pop
stc
aam
sub
bound
jae
lcall
or
pop
popa
jecxz
mov
push
xchg
stos
adc
and
test
or
push
adc
in
adc
rolb
insb
lret
or
jo
jae
stc
mov
xor
test
sarl
movsb
mov
movsl
hlt
rcr
aas
push
scas
adc
leave
mov
repz
popa
xchg
push
into
jg
add
sub
jmp
out
std
pop
dec
loopne
xchg
rcrl
and
mov
sub
ss
mov
mov
sbb
insl
pop
jmp
inc
mov
dec
leave
lahf
sbb
in
pop
mov
mov
leave
xor
negb
ficoms
shrb
enter
sbb
call
pop
in
arpl
scas
and
aaa
sbb
and
das
out
movl
sub
mov
scas
adc
aas
inc
or
mov
add
push
lds
jmp
hlt
push
ss
inc
test
inc
negb
lock
pop
xlat
aad
jbe
sbb
sbb
es
cmp
sti
les
adc
dec
xor
pop
pop
mov
push
insb
cmp
arpl
jno
lcall
out
add
test
mov
jno
xchg
add
sbb
bound
mov
pop
push
mov
xchg
imul
sahf
dec
mov
pop
ret
iret
test
pop
xorl
dec
cmp
addl
dec
call
clc
sub
fwait
push
xor
jb
xchg
add
dec
std
lods
scas
inc
adc
jmp
popf
inc
xchg
pop
call
insl
pop
lret
xor
add
orl
dec
lcall
cmp
dec
lods
lods
pop
mov
dec
in
jmp
and
fs
or
repz
shrl
push
inc
ret
arpl
ja
test
stos
shrl
mov
mov
fcompl
ljmp
insb
call
xchg
inc
imul
xchg
xor
fxtract
leave
and
xchg
stos
lret
lea
mov
xor
mov
test
jnp,pn
jmp
jecxz
adc
shlb
add
in
dec
out
add
and
lods
add
lahf
xchg
xor
int3
aas
les
push
mov
mov
xchg
fcompl
test
sub
jbe
pop
popa
scas
dec
int
lods
push
sub
jp
pop
aad
push
mov
dec
push
loopne
ja
sub
ret
les
inc
outsl
jno
ficompl
push
add
and
mov
xor
mov
dec
call
loope
sti
push
fdivr
mov
mov
and
ljmp
popf
pop
test
lret
out
xchg
jo
insb
mov
cmp
int3
repnz
pop
sub
imul
pop
cmp
add
xor
hlt
push
push
outsl
fsubr
les
pop
stos
out
out
xor
into
xor
pop
inc
ja
mov
push
or
push
test
fs
fidivl
push
outsl
or
mov
ja
push
mov
xor
test
shll
cmp
cltd
clc
ja
dec
leave
in
xchg
sub
mov
addl
rclb
xchg
pop
popf
dec
fisubl
pop
loope
cltd
add
xchg
xor
daa
ds
stc
push
lods
push
aaa
inc
stos
int
cmpsl
push
repnz
or
push
cmp
inc
data16
xchg
sarb
xor
jmp
dec
fdivr
lods
popa
and
push
push
lcall
jno
pop
sbb
inc
pop
and
dec
test
inc
mov
push
stc
in
or
mov
and
jns
jmp
or
jle
pushf
cmp
cwtl
sahf
mov
aaa
enter
repz
cwtl
outsb
pop
loop
mov
mov
out
mov
incl
std
fiaddl
pop
imul
imul
enter
mov
cmc
out
add
mov
mov
shr
aad
in
es
mov
dec
push
fs
add
je
std
idiv
jnp
test
xchg
push
bound
test
idivl
mov
imull
xchg
decl
dec
aas
iret
out
enter
inc
inc
pop
pop
inc
add
mov
ja
xchg
repnz
jle
ret
xchg
mov
adc
in
fsubrl
xchg
jle
jmp
pop
insl
xor
xor
cmp
fnstenv
or
jnp
in
dec
adc
fs
and
js
lods
stc
push
sbb
mov
ljmp
inc
bound
push
sub
outsb
jmp
pop
sub
jae
jno
mov
out
mov
xor
sbb
push
xor
mov
outsb
push
out
dec
or
test
cli
or
cld
cs
push
push
inc
paddsw
inc
stos
je
push
push
cmp
into
sbb
ds
je
mov
fnstenv
aaa
inc
adcl
jb
imul
push
xchg
movsb
or
jl
xor
or
xchg
mov
cli
arpl
orb
jno
push
leave
push
gs
mov
mov
push
roll
sbb
jg
repnz
pop
stos
mov
pop
mov
push
in
or
pop
mov
sti
cmpsl
lock
inc
in
outsb
inc
test
andl
fwait
imul
lretw
stos
push
bound
aad
push
lods
mov
stos
push
xchg
push
pop
push
sbbl
mov
xor
xchg
pusha
ficomps
scas
dec
and
leave
lds
stos
add
xchg
ss
inc
mov
cmp
mov
add
repz
outsb
mov
mov
rcrl
push
out
jp
dec
mov
fnstcw
pop
and
push
jmp
call
popf
push
mov
insb
repnz
aam
movsb
lret
and
pop
inc
in
dec
sbb
sbb
or
xchg
test
sbb
xor
or
jne
mov
aad
in
cltd
or
out
sub
out
pop
in
sub
std
aad
mov
mov
cld
dec
sub
stc
inc
cmp
jne
xorl
cmp
fistpl
ficompl
or
shl
jno
jae
xchg
xchg
lahf
outsl
test
and
daa
add
loope
out
jmp
gs
adc
shl
sub
ljmp
sahf
mov
mov
repz
mov
mov
cmpsl
insb
enter
xor
incl
test
sbb
je
insb
mov
jb
hlt
ret
inc
das
popf
mov
insl
xchg
std
xlat
in
dec
or
into
outsl
fwait
loopne,pt
push
rcrl
mov
sti
xor
fs
jle
add
jb
scas
add
pushf
pop
loop
mov
push
ds
sub
je
jb
add
sub
mov
or
push
jbe
clc
sub
test
loopne
fisubrl
xor
outsb
mov
xor
fucom
cmpsb
and
cmp
test
jg
in
jecxz
movsb
pop
cmp
ljmp
mov
jecxz
cmp
cs
jne
and
aas
insl
mov
out
imull
adc
movups
pusha
mov
lahf
sbb
hlt
mov
scas
xor
sub
pop
jle
sub
jg
pop
pop
jmp
push
pop
jne
jb
xor
mov
pop
insb
test
jge
push
sahf
dec
lret
lret
pop
test
or
adc
repz
push
test
insl
adc
out
es
xchg
push
hlt
jnp
fwait
sub
jne
stos
jmp
mov
movsb
imul
imul
cld
mov
mov
push
push
ljmp
and
test
insb
adc
mov
subl
push
jmp
repz
adc
lea
test
addb
jge
sub
push
pop
fimuls
and
outsl
imul
pusha
das
in
idivb
fdivrp
sub
xor
mov
xchg
add
movsb
jl
shll
adc
mov
je
mov
int
xchg
repnz
aad
out
mov
mov
stc
xor
mov
je
scas
xchg
test
rcl
enter
add
mov
ja
hlt
fmul
insl
shlb
dec
data16
lock
cmp
jo
pop
cltd
mov
fistpl
fdivrl
mov
sbb
daa
jae
rorl
cmp
dec
lahf
dec
ds
cmp
int
mov
repnz
lods
movsb
sti
stos
xchg
jns
pop
je
xor
scas
xchg
into
lods
mov
cmp
lea
rorl
loope
or
fbld
outsb
aad
xor
sub
dec
inc
mov
and
cmp
aas
xchg
decb
push
xchg
pop
bound
mov
push
sbb
adc
or
out
shlb
cmp
and
xrelease
int3
xor
pop
mov
je
sub
daa
test
rclb
jne
lahf
cmp
sub
push
cld
xor
inc
mov
cli
mov
pop
out
rolb
xchg
loope
outsl
push
xchg
push
lret
jne
in
adc
cmp
ds
stos
stc
movsb
pop
pop
in
push
aam
ret
xchg
stos
into
add
mov
jns
xlat
shrb
int
or
les
or
gs
iret
shll
dec
sbb
loopne
lods
aaa
stos
jmp
sub
cmc
xchg
jnp
push
test
or
arpl
xor
mov
or
mov
jnp
ljmp
pop
sti
mov
cmpsb
mov
sub
mov
lods
mov
les
cltd
inc
mov
or
push
push
call
pop
cmp
into
jno
stos
jne
mov
arpl
push
mov
cltd
xlat
mov
lea
dec
sarl
sbb
adc
xchg
in
sbb
loope
call
mov
jmp
loopne
jp
or
jmp
jge
inc
sahf
loopne
xchg
lods
cmpsb
hlt
mov
int
rcr
loopne
mov
or
std
out
cmp
fcomps
fwait
xchg
popa
cld
rorb
daa
aas
mov
or
popa
sbb
cmp
xchg
stos
ss
insl
sbb
push
cmp
mov
push
lret
inc
jno
inc
cmp
mov
jp
mov
cs
loopne
pushf
sub
dec
out
lret
inc
dec
jbe
das
push
call
mul
stos
push
roll
pop
mov
mov
mov
fimuls
lock
insb
lret
mov
into
fs
mov
sub
sbb
ljmp
inc
fwait
in
inc
lods
in
mov
std
lods
clc
int
jl
jnp
fmull
mov
pusha
dec
imul
loope
jno
push
dec
sbb
sti
push
dec
incb
jbe,pt
stc
ret
imul
xchg
movsl
mov
mov
xchg
mov
cmp
scas
sub
jo
jne
sahf
les
push
cmpl
mov
cmpsl
mov
push
mov
mov
outsb
in
fbld
lahf
popfw
scas
fwait
add
negb
out
sbb
sub
mov
inc
ljmp
popa
lahf
repnz
dec
cmp
add
pop
flds
int3
mov
shlb
movsb
and
out
add
mov
test
dec
adc
orl
es
adc
das
call
add
insl
push
sbb
pop
xchg
xor
lret
shrb
and
xchg
mov
or
jb
mov
xchg
cmc
sub
dec
icebp
ss
outsl
xor
imul
fsubl
aam
sbb
in
push
mov
dec
jne
data16
jg
jbe
leave
jge
mov
xlat
insb
imull
mov
ds
jbe
xorl
je
leave
mov
ds
ljmp
imul
icebp
jns
mov
inc
in
fwait
pop
adc
add
push
insb
mov
push
xchg
add
or
scas
mov
push
add
divb
mov
fisubs
loope
addb
jno
mov
mov
sti
leave
loope
add
pop
pusha
fidivrs
cmp
fwait
in
cmovns
popf
fidivl
mov
jae
cmp
mov
jo
jno
adc
addr16
pop
cld
pop
sbb
rorl
xchg
sub
stos
ds
pop
aaa
and
xor
jp
xchg
dec
mov
mov
cwtl
cmp
cmp
ud2
int
jnp
or
jb
push
stos
pusha
movsl
sub
xchg
popf
pop
xor
fwait
fs
push
daa
jne
ja
add
inc
rorl
les
push
lds
xor
mov
in
jo
arpl
outsl
lods
and
push
mov
inc
or
iret
sub
dec
cmp
lods
push
outsb
sub
inc
add
push
in
fwait
in
and
scas
in
pop
ret
add
mov
pop
out
divl
aaa
pop
xor
jmp
rorb
ret
xchg
in
and
push
movsl
add
das
imul
sbb
fdivrs
cmp
ljmp
and
mov
xor
mov
int
xchg
inc
push
sbb
test
repz
xchg
sti
mov
jge
fstpl
verr
cli
jl
sarl
lds
loop
sti
pop
pushf
xlat
cmpsl
sar
ss
xor
ds
shll
repnz
push
mov
mov
cmp
out
insl
cli
lds
cmp
xor
ja
cmp
je
inc
fs
adc
or
into
add
inc
fstpl
cmp
pop
pop
data16
test
aas
js
mov
andb
mov
xor
add
pop
adc
cld
rorl
xor
push
movsbl
mov
aas
icebp
lods
std
adc
hlt
jo
mov
sbb
out
xchg
and
test
ja
fsubl
mov
xor
cltd
push
dec
mov
sbb
call
hlt
or
outsb
sbb
mov
inc
daa
mov
fsubl
popa
mov
xchg
addr16
and
ret
pop
jmp
xor
frstor
xchg
pushf
rcll
stc
mov
gs
call
and
sub
in
iret
sbbl
fsts
pushf
aas
shll
or
mov
dec
sub
push
mov
shr
sti
sti
add
rcl
mov
out
and
mov
mov
int3
test
aas
dec
xchg
push
nop
aam
jl
scas
cs
loope
xor
inc
iret
push
gs
loope
stos
loopne
insl
dec
sub
fs
aaa
push
shll
jne
sbb
ret
loopne
dec
xor
popf
frstor
jge
ss
jnp
pop
mov
pop
push
jno
ret
jg
mov
and
xchg
loope
stc
fldt
push
mov
sub
pop
or
sub
sub
mov
shlb
push
inc
repnz
xchg
lcall
test
roll
call
jb
mov
bound
dec
push
mov
xchg
popf
mov
cs
in
jp
mov
roll
ja
das
jp
xlat
out
mov
and
mov
xchg
aaa
inc
mov
addr16
adc
pop
jne
lcall
and
in
jge
lock
cli
mov
bound
pusha
xchg
dec
insl
pop
mov
iret
js
in
movsb
dec
push
je
pop
xchg
scas
sbb
cltd
push
sub
cltd
add
inc
clc
cmpsl
xchg
jmp
jp
and
loop
das
pop
or
sbb
xor
mov
mov
mov
mov
shl
mov
xchg
xchg
adc
sub
mov
shl
dec
rorl
mov
lock
lret
in
test
test
mov
mov
lret
fwait
int3
dec
sahf
movsl
cmpsl
or
cli
xchg
jg
pop
dec
into
popl
imul
xor
or
push
cltd
data16
inc
pop
lds
int3
lcall
outsb
ret
nop
xor
add
lret
push
sbb
jae
pushf
or
adc
popf
push
sub
cmp
mov
bound
rclb
jne
repnz
aam
test
xrelease
xlat
xchg
js
push
xor
and
nop
or
jbe
inc
cmp
lea
mov
inc
xchg
mov
loop
sbb
pop
decl
add
adcb
inc
nop
jge
inc
push
and
lret
sbb
pop
ror
repz
sub
stos
movsb
push
add
mov
mov
repnz
int
in
and
jecxz
and
ret
mov
mov
andnps
push
dec
out
mov
sbb
daa
cmp
sbb
hlt
push
lds
sub
stos
xor
xor
fldl
fs
dec
mov
cmpsl
and
lret
cwtl
mov
lahf
out
out
es
andb
enter
stos
sub
jae,pt
shll
sub
cmp
add
loop
xor
jp
add
xchg
leave
leave
inc
push
xor
xchg
inc
lds
mov
dec
pop
stos
andb
repnz
add
add
dec
out
out
in
inc
add
inc
lret
mov
dec
add
add
test
mov
adcl
cmp
dec
add
ret
or
ss
xchg
or
out
imul
es
lds
ret
addr16
or
fwait
es
enter
pop
jg
xor
cmpsb
enter
sub
add
and
add
jae
jnp
fnstsw
xor
insl
or
test
xor
xlat
or
pop
jo
push
ds
or
stc
inc
loopne
xchg
dec
mov
and
test
loopne
lcall
sub
pop
xor
outsl
movsl
daa
dec
sbb
mov
aaa
lret
in
and
rclb
lods
or
cmp
lods
push
dec
mov
dec
sbb
push
sbb
cmpsl
mov
push
lds
mull
mov
and
testl
and
out
addr16
gs
faddl
mov
ret
push
fs
jne
dec
push
jge
sbb
mov
pop
ret
xchg
cli
lods
pop
popa
lret
sti
adc
in
sbb
fs
fwait
cltd
jbe,pn
sbb
jo
fdivrp
data16
xor
cmp
je
lahf
mov
test
or
ja
cmp
lret
xor
sbb
cmp
dec
mov
cmp
into
scas
or
jge
pusha
stos
cmp
push
pop
in
das
jae
dec
mov
push
push
cwtl
mov
movsb
sub
outsl
int3
cwtl
mov
rolb
jno
sub
lock
mov
lods
mov
lret
sbb
push
lret
push
je
icebp
scas
dec
jmp
mov
cwtl
stc
incl
in
lcall
lret
jae
fistpll
decb
mov
dec
clc
xchg
add
dec
xor
sbb
clc
shrb
sub
xor
fdivl
out
pop
mov
repz
or
pushf
dec
and
je
into
xor
jne,pt
sub
push
mul
jg,pt
mov
and
and
sub
fcmovbe
lea
dec
jg
in
add
or
mov
clc
into
int3
lods
lock
add
pop
lcall
aaa
daa
push
aas
fdivrl
testb
dec
movsw
inc
rolb
lods
ffree
or
mov
outsb
push
mov
or
aaa
hlt
push
push
cmp
inc
xlat
and
mov
lcall
inc
loope
pusha
icebp
ljmp
outsl
add
mov
ja
pop
test
insb
call
push
daa
stc
test
sti
and
sbb
in
mov
add
test
cld
lahf
push
insb
sbb
mov
jmp
rcrb
pop
test
ret
sti
or
ja
pusha
ret
pop
cmp
xchg
pop
addr16
push
sbb
int
jno
or
rorb
aas
mov
fstps
loope
ds
lea
out
rorb
stc
ret
in
add
out
cmp
enter
shrb
cwtl
test
out
pop
fistps
in
ror
outsb
lods
lods
mov
push
lahf
cmp
cmp
test
push
divb
ret
cmp
sbb
push
loopne
inc
lea
bound
into
jo
ja
cmc
hlt
call
xchg
mov
pop
leave
xchg
sti
jbe
negl
leave
mov
fwait
push
cmc
fiaddl
cmp
cli
dec
fwait
dec
push
jg
test
adc
sahf
rcrl
mov
lods
into
movb
ret
push
jle,pn
mov
test
ret
pop
pop
inc
icebp
bound
vfmsubaddpd
int
sarb
popa
push
outsl
mov
or
loopne
cmpsb
lds
xchg
cmp
loopne
lret
or
shll
lret
stos
clc
and
shlb
push
mov
ret
fidivs
rorb
cs
xor
test
in
ret
and
mov
jns
insl
mov
lock
dec
pop
adc
faddp
mov
xchg
xchg
pusha
leave
dec
std
sbb
inc
dec
out
dec
jle
lods
inc
test
rcrb
test
add
pop
push
outsl
je
imul
adc
sbb
and
les
ljmp
fwait
and
jns
idivb
pop
imul
pop
xchg
or
sub
push
and
sti
push
loopne
addl
test
clc
cmp
xor
sub
jl
xchg
mov
mov
pop
pop
mov
dec
mov
dec
ret
aam
xor
int3
int
ss
inc
shll
sub
cs
and
lcall
mov
imul
aam
int
adc
fwait
mull
push
stc
loopne
jge
mov
pop
cld
in
ljmp
das
pop
mov
in
orl
addr16
jl
adc
ds
das
popa
sub
test
sti
popf
pop
or
mov
and
adc
inc
xlat
in
inc
bts
or
incl
bound
push
push
insl
pop
lahf
mov
daa
test
das
data16
pop
inc
cmp
pop
mov
sub
sti
popf
jo
es
cmp
insl
mov
imulb
jmp
lods
aad
pop
mov
nop
xchg
idivb
inc
sbb
mov
imul
pcmpeqd
mov
std
das
cltd
mov
ret
or
jl
xor
inc
aas
and
cmc
mov
inc
addr16
int3
xchg
aam
iret
push
sbb
pop
in
adc
hlt
insl
mov
mov
xchg
int3
xor
inc
icebp
and
cmp
stc
mov
insb
daa
adc
add
push
mov
xchg
dec
jle
mov
dec
mov
mov
icebp
insb
dec
out
andb
pop
push
mov
jb
test
subl
in
pop
and
jnp
mov
imul
inc
jns
mov
movsl
cmpsb
int3
je
fnstcw
les
xor
pop
dec
icebp
jecxz
ficomps
imul
sbb
clc
push
add
jne
mov
test
dec
sarl
hlt
mov
ror
jbe
push
xor
jp
daa
cmp
stc
mov
int3
or
jno
dec
gs
dec
push
call
shl
mov
inc
fmuls
dec
jle
into
imul
xchg
int
xor
stos
jmp
pop
sarb
imul
pop
loope
in
xchg
nop
or
cmp
in
or
mov
out
daa
cld
push
nop
ja
icebp
push
xor
test
ret
pop
mov
fsubrp
jne
test
fisttpll
in
rolb
testl
cmp
js
dec
sbb
add
jecxz
dec
sbb
or
and
jp
testb
inc
fsubl
xorl
ret
out
sbb
cmpsl
cs
or
inc
and
mov
pop
mov
xchg
enter
adcl
pop
nop
arpl
pop
ret
repz
add
jo
ret
push
popa
subl
lods
add
fs
imul
pop
inc
int
movsw
mov
imul
sarb
add
xor
push
adc
insl
pusha
mov
call
mov
mov
dec
inc
lret
rorl
push
cltd
xchg
xor
jb
lahf
and
xchg
sbb
mov
mov
sbb
leave
inc
data16
pop
pop
out
mov
xlat
cwtl
cmp
mov
aas
xchg
pop
xchg
fdivs
jp
mov
js
sub
dec
ret
mov
jne
adcl
hlt
dec
fnstsw
sub
or
mov
cmc
test
imul
jp
jno
aaa
cmp
jae
xchg
inc
mov
fmulp
int3
sbb
cwtl
adc
xor
faddl
call
pop
lea
test
jno
fs
push
sbb
shlb
pop
add
in
mov
cmp
mov
js
loope
jne
pop
jo
ljmp
pop
inc
stos
sahf
push
idivb
fcomps
sar
add
rcrl
pop
lods
xor
bound
lock
lret
repz
lret
mov
lea
test
push
aaa
mov
cmpsb
jecxz
aaa
movsl
jg
inc
mov
xchg
xor
mov
idiv
mov
dec
cmpsl
jno
out
push
das
ja
sub
or
andb
mov
dec
cltd
mov
adc
fists
xchg
or
cmp
mov
shll
lds
scas
sub
jp
fstpt
or
repz
popa
and
test
push
cmp
xor
in
jno
fadd
test
sbb
inc
jl
dec
inc
sub
dec
outsl
inc
fsubrs
or
mov
sbb
popf
loopne
stos
shrl
mov
push
rcll
jb
lods
push
shl
ljmp
cmp
xor
scas
inc
push
shll
leave
add
add
rcll
mov
test
enter
ffreep
sbb
rolb
data16
inc
and
scas
mov
fwait
dec
lods
bound
dec
push
filds
cwtl
mov
xor
sub
dec
pop
cltd
jg
sbb
in
mov
cmp
push
data16
ja
xchg
dec
mov
movsb
mov
dec
mov
xchg
mov
push
add
or
les
imul
push
mov
or
xor
push
add
cmpsl
mov
lea
fdivr
fmul
cli
pop
in
daa
sub
lahf
push
cmp
test
enter
lcall
fwait
orl
dec
cmp
shr
in
imul
movsb
dec
lcall
mov
jecxz
ret
inc
push
mov
inc
fcoml
outsl
cmp
loop
jle
aam
mov
xchg
call
push
leave
push
add
outsl
and
dec
stos
xor
ret
mov
loopne
xor
xor
inc
mov
pop
add
mov
xchg
ss
jno
cmp
arpl
mov
xchg
xchg
into
hlt
cmpsb
in
pop
jo
or
cs
pushf
out
xlat
push
cs
adcl
ljmp
popf
neg
cmpsb
popa
imul
mov
push
jp
addr16
pop
jg
cs
adcb
dec
mov
xor
idivb
inc
fisttps
xchg
jle
popa
mov
mov
lds
mov
push
clc
cmpsb
int
mov
dec
inc
orl
nop
lahf
jns
popf
fistps
pop
in
pusha
add
cmp
unpcklps
mov
mov
push
pop
adc
mov
ljmp
or
rcl
shll
ret
addr16
mov
in
leave
mov
push
ret
aas
mov
adc
add
or
lea
ja
push
mov
mov
or
mov
je
xor
mov
sbb
dec
jae
push
aam
out
dec
xchg
int
lret
scas
adc
ret
in
pop
loop
cmp
aas
mov
xchg
add
lock
ljmp
adc
mov
lock
adc
sar
fldt
xor
shrl
adc
and
add
mov
push
iret
pop
jp
movsb
mov
push
jno
xlat
nop
pop
fistpl
mov
rorl
mov
cmp
fldt
cmp
popf
mov
jo
and
mov
sbb
cld
int3
add
ds
cld
lcall
test
fildll
out
mov
mov
addr16
aaa
fistps
adc
in
outsl
push
leave
or
adcl
push
xchg
out
dec
les
pop
ficomps
loop
repnz
or
icebp
sbb
xor
out
popa
cmp
xor
aaa
mov
adc
cli
int3
imul
nop
sti
sbb
sbb
test
push
popa
clc
ja
dec
mov
xor
fistl
incl
sarb
mov
pop
cwtl
mov
rclb
and
mov
iret
in
ljmp
xor
shlb
fstp
sbb
inc
or
fistpll
orl
inc
cli
pop
add
mulb
jle
push
jbe
insb
sbb
or
mov
xchg
cmp
cltd
xor
sbb
xor
and
sbb
sarb
pop
pop
test
jno
iret
aad
mov
mov
cmp
cli
std
ljmp
rclb
or
ffreep
xchg
in
imul
push
daa
xor
inc
push
add
addr16
push
gs
mov
sub
aas
test
out
pop
lea
int
bnd
xchg
in
movl
and
mov
cwtl
dec
xor
test
mov
sar
les
imul
mov
mov
sbb
dec
out
repz
mov
je
orb
and
mov
clc
out
pop
push
test
jne
or
std
repz
pop
push
sbb
pop
xchg
rcl
mov
jg
and
aad
dec
push
fcom
cmp
lods
cld
scas
iret
sar
sbb
movsl
imul
push
int
xchg
mov
cmc
sahf
mov
push
cmp
xchg
pop
scas
sbb
xchg
push
push
mov
pop
xchg
mov
jns
lcall
and
mov
adc
xchg
inc
repnz
ret
in
and
or
iret
inc
dec
cmp
icebp
sbb
mov
mov
bound
cmp
xchg
xor
mov
sub
popf
in
test
xchg
mov
ja
ret
aaa
scas
out
sbb
jecxz
cmpsb
jmp
dec
jge
cmpsl
mov
pop
shll
sub
xchg
add
shr
inc
inc
sub
push
pop
sbbl
fistpll
mov
xor
xorb
and
mov
inc
pop
or
data16
xchg
sbb
shlb
add
dec
lea
xchg
scas
scas
push
push
call
adc
mov
out
test
push
fiaddl
inc
mov
fcmovne
cmp
mov
scas
mov
pop
mov
jmp
adc
cld
adc
pop
dec
call
sbb
jb
ficoms
in
pop
outsb
wbinvd
rorl
push
xchg
adc
push
pop
mov
xor
mov
xchg
jge
pop
icebp
xchg
stos
push
movsl
mov
cmp
push
cvtps2pd
stos
fucom
pop
pop
sub
lret
cmpsb
lds
adc
rcrb
loop
add
add
gs
cli
cmc
mov
xor
xor
xor
xlat
mov
or
hlt
ja
gs
or
out
pop
ljmp
xlat
pushf
pop
in
in
outsl
jge
xor
js
cmp
dec
mov
push
mov
cmp
mov
fdivp
and
ss
sbb
jb
enter
pop
mov
xchg
shl
xchg
pshufw
notb
int3
lods
and
lret
aad
cmp
daa
mov
sbb
sbb
add
jnp
andl
fldcw
in
shld
pop
fadds
push
cmp
mov
pop
aad
or
mov
shll
rcr
mov
sahf
xor
lret
xor
dec
stos
xchg
aaa
push
push
lret
pop
call
push
jecxz
ljmp
cmp
push
mov
loope
outsb
ret
jge
arpl
sbb
lea
adc
sbb
inc
sub
rcr
dec
dec
cmp
scas
cld
jl
les
xlat
stos
pop
mov
in
faddl
cmp
mov
cli
sti
push
mov
scas
scas
push
sbb
jmp
add
sub
pop
lret
andl
cmp
xchg
push
negl
jbe
pop
mov
icebp
or
popa
sub
sbbb
pop
push
fmulp
aad
pop
pop
push
adc
mov
adc
dec
sahf
jnp
cs
add
leave
cs
pop
ljmp
add
nop
clc
sub
enter
mov
and
cmp
sbb
stc
xchg
movsb
les
jns
add
and
mov
and
inc
daa
or
mov
loopne
jne
enter
bound
jl
fisttps
jne
dec
mov
xor
fadds
add
stos
ss
mov
add
ja
push
push
test
aas
sahf
mov
aam
or
cwtl
lds
cmpsb
sub
fbstp
fimuls
movsb
mov
push
lods
inc
loopne
mov
insl
push
adc
fimull
popf
sbb
add
jbe
push
cmpl
in
xchg
enter
adc
pop
pop
std
pushf
cli
cmpsl
push
test
xlat
mov
push
gs
inc
movsb
and
inc
daa
xchg
hlt
push
and
andl
sbb
and
push
movsb
dec
dec
jg
xor
clc
fdiv
push
pushl
outsl
cmp
jne
ficoms
inc
and
into
sti
lods
and
push
icebp
xor
mov
scas
loop
adc
push
pop
xchg
repz
sar
mov
flds
xor
ficompl
clc
aaa
loopne
cmp
mov
cmp
out
pop
daa
out
cli
pop
daa
sbb
hlt
hlt
push
enter
nop
int
inc
rorl
mov
mov
lods
or
nop
cwtl
stos
xchg
ffreep
in
into
subb
out
xchg
fs
into
aam
pop
sub
dec
mov
inc
inc
dec
xor
mov
mov
bound
hlt
pop
rcrl
xchg
xchg
push
xchg
aad
inc
push
or
sbb
fistl
lahf
int
push
pop
cmp
mov
mov
jns
push
sahf
pop
lahf
mov
mov
in
pop
cmp
push
jb
sar
rcrl
jb
jnp
push
sbb
inc
daa
inc
repnz
js
or
push
inc
mov
or
pop
push
out
movb
inc
test
in
adc
in
test
roll
ja
dec
sbb
xchg
inc
sub
lret
int3
push
adc
inc
leave
into
jl
pop
in
cmp
fs
das
mov
inc
mov
pop
xchg
cs
out
test
outsl
jnp
test
sub
out
mov
or
fwait
cs
pop
push
mov
aam
negb
inc
aam
mov
daa
push
in
xor
sti
insl
dec
pop
sub
xchg
and
adc
mov
lcall
add
shrb
lock
add
and
push
addb
loope
xor
into
arpl
pop
ljmp
call
jmp
and
dec
xor
in
pop
ljmp
mov
sub
inc
xchg
mov
add
xor
enter
pop
test
adc
adc
and
andl
pop
call
movsl
js
fnsave
adc
ja
xchg
pop
in
sub
fldenv
into
xchg
pop
sbb
mov
jmp
pop
inc
leave
jmp
push
sarl
mov
cmpsl
repnz
xor
mull
pop
je
dec
jg
lds
jg
xchg
push
sub
rolb
push
jne
bound
mov
repnz
xor
repnz
mov
repnz
inc
jns
addr16
or
push
jge
sahf
outsl
das
lods
cmp
mov
aas
fstpl
lods
sbb
xor
repnz
data16
pop
cmpsb
xchg
pop
mov
xor
jae
push
push
jge
and
sar
arpl
xor
xchg
add
cmp
ljmp
pop
pop
insb
movsl
cld
cmc
lcall
xchg
lret
ljmp
je
sub
aam
cli
or
test
and
adc
jno
outsl
cmp
shrb
sub
pop
mov
jle
in
push
js
sbb
cmc
mov
imul
mov
push
push
aas
fsubs
daa
add
and
popa
mov
pop
mov
cmc
in
fs
loop
mov
add
lea
out
mov
cmp
popf
rcrb
xor
fistpl
sub
stos
adc
idiv
jnp
sbb
mov
push
jbe
dec
inc
or
xlat
in
test
pushf
in
mov
gs
lods
imul
dec
sbb
nop
sti
inc
xchg
clc
rcl
jae
cmpsl
push
xor
repz
xchg
or
adc
and
cwtl
jae
std
xchg
movsb
jne
movaps
out
mov
sbb
int
and
inc
add
xor
mov
pop
or
mov
mov
cltd
or
sbb
divb
sbb
lahf
imul
push
push
movsb
stos
sti
mov
popf
cwtl
sbbb
mov
pop
push
out
dec
mov
fimull
enter
sarl
fdivrl
fnstcw
enter
notl
and
jbe
add
in
lret
push
inc
jle
fwait
mov
mov
xchg
adc
pop
pop
push
cltd
pop
mov
xchg
cmc
adc
out
cwtl
mov
dec
xor
lds
pop
stos
inc
fs
inc
data16
jle
jmp
outsb
dec
movsb
add
jge
jp
xchg
cwtl
test
shrl
jecxz
sbb
ja
lahf
ret
fdivrs
push
fwait
pop
test
xchg
cmpsb
in
and
mov
sahf
adc
pop
lods
lea
cmpsl
and
into
jle
cwtl
lods
jle
outsl
stos
cmp
pop
in
jno
test
sbb
andl
sub
add
pop
addr16
mov
cmc
mov
in
mov
enter
arpl
ret
imul
aam
jp
fstps
push
testb
mov
xchg
jns
cltd
jnp
sbb
rcr
mov
xchg
jno
xor
xor
push
sahf
dec
jl
sbb
cmp
pusha
sbb
fnstenv
mov
cs
sbb
scas
and
inc
popa
xor
shl
aas
lahf
call
pop
je
mov
jg
cld
rorb
cmpsb
xlat
cmpsl
gs
int3
fs
out
pop
int3
outsl
pop
lods
cmp
mov
scas
fisubrs
rcrb
and
jg
mov
arpl
dec
mov
dec
xchg
sub
das
fs
cmpsb
mov
or
divb
sbb
js
jmp
xor
addl
ret
cmp
loopne
ret
sub
gs
fnstenv
mov
push
rcll
das
mov
adc
sub
movsb
lods
pop
sbb
mov
dec
call
and
dec
clc
bnd
outsb
mov
scas
fwait
call
push
cltd
pushl
test
in
cs
test
adc
or
lret
pop
or
daa
mov
aas
inc
aam
pop
stc
leave
cli
mov
lret
cld
inc
enter
pop
jmp
mov
adc
aad
ja
xor
or
in
rclb
pushf
cmp
pop
xchg
hlt
je
ret
xorl
jmp
or
xor
inc
jb
jo
cs
repnz
outsb
push
sub
mov
out
dec
mull
or
add
adc
adc
adc
les
mov
jecxz
mov
nop
jle
ret
dec
test
pop
mov
mov
or
push
idivb
and
rcr
xor
push
frstor
lock
mov
mov
sub
xchg
outsb
jge
xchg
jmp
or
xchg
push
pop
ret
sbb
scas
adc
or
sti
and
hlt
lret
in
adc
pop
stos
jne
xor
fnsaves
in
jns
pop
aaa
fimull
add
jp
cmp
adc
cli
inc
inc
inc
fs
xchg
mov
std
jno
out
icebp
rcrl
addb
aam
repz
mov
mov
faddl
sub
jl
int
xchg
push
pop
sbb
dec
cmpsb
xchg
lods
inc
imul
mov
scas
push
jno
dec
xor
mov
xchg
jno
mov
xchg
mov
mov
push
adc
data16
mov
imul
outsb
mov
lcall
dec
push
jnp
mov
mov
subb
mov
out
lret
inc
int
ss
stos
pop
push
adc
push
and
jl
mov
adc
rcr
popa
push
cmp
mov
test
repnz
popf
stc
arpl
mov
mov
pop
cltd
arpl
scas
inc
cmpsl
int
cmpsl
mov
ret
adc
pushf
sub
frstor
mov
out
pop
lret
xor
xor
mov
cwtl
xor
push
jbe
loop
sti
or
sub
ds
movsl
repnz
daa
js
dec
mov
aas
xchg
mov
mov
es
scas
fdivl
es
daa
push
push
icebp
pop
mov
cmpsb
fistl
in
xor
cmp
outsb
cmp
or
dec
imul
icebp
dec
fucomip
loopne
in
std
mov
cmpsb
dec
outsb
xor
and
insb
insb
jns
inc
jo
cmp
neg
jge
xchg
jle
adc
int3
or
pop
inc
mov
mov
cmp
ljmp
pop
push
dec
jbe
dec
dec
push
adc
xchg
outsb
negb
and
xchg
and
xchg
ja
pop
ret
jmp
cmp
jg
mov
in
sahf
mov
shll
add
or
movsb
cli
fsubl
sub
adc
push
lods
xchg
xchg
adcb
test
xchg
fmuls
pop
sahf
pusha
push
outsb
xchg
loop
lock
push
sub
jmp
add
scas
insl
aam
xchg
pop
jo
shlb
cmpsb
lds
arpl
leave
adc
cmp
jp
adc
push
inc
push
nop
ss
loop
jg
out
inc
into
mov
out
inc
cmpsl
in
adc
movl
or
sbb
scas
adc
ds
sbb
mov
imul
cmpsl
add
pop
aaa
lahf
mov
xchg
cmp
je
into
dec
inc
in
mov
sbb
dec
pusha
je
xchg
xchg
in
jle
xchg
loope
sub
stc
lret
and
push
xlat
stos
sub
add
lock
in
fs
daa
shrb
out
pop
scas
sbb
notb
push
push
out
dec
mov
pop
inc
das
insb
pop
lods
aam
fwait
lock
jne
sbb
imul
dec
cmpsl
ss
sub
sbb
cmc
test
sbb
mov
cmp
and
and
sti
enter
adc
fdivrp
pop
addr16
insb
push
imul
or
fnstcw
cltd
adcl
ljmp
faddl
jbe
pop
inc
xor
jbe
mov
addr16
ret
mov
jo
add
jp
idivb
mov
loopne
iret
mov
mov
pop
push
push
push
js
and
adc
add
dec
lods
jnp
mov
push
mov
dec
in
iret
cmp
and
icebp
cmp
test
mov
xchg
jle
pop
inc
loop
xorl
lods
jne
mov
sahf
fildl
divl
add
mov
in
inc
inc
jae
pop
addr16
adc
push
addr16
bound
and
mov
adc
xchg
xchg
mov
adc
cli
fwait
mov
rorb
sbb
sub
cld
sub
cmp
push
lock
mov
testb
mov
push
aaa
insl
mov
mul
rorl
dec
adc
jecxz
je
aam
push
mov
sub
lods
pop
mov
pop
mov
shrb
hlt
push
rclb
xchg
fsubl
int
xchg
sbb
aam
loope
jmp
fidivrs
xchg
pop
pop
bound
mov
es
mov
mov
iret
add
ja
insl
add
dec
pop
mov
scas
xchg
fsubs
cmp
testb
fadds
xor
pop
sbb
mov
lret
dec
cli
sub
lea
pop
push
cmc
push
pop
and
pop
mov
repnz
xor
rorl
movsl
aad
cmp
sbb
testl
scas
daa
stos
cli
dec
jl
fcomi
fisttpll
mov
pop
pop
dec
scas
and
les
jmp
mov
inc
ds
cmpsb
hlt
pop
jae
sbb
pop
call
add
scas
iret
or
out
int3
sti
mov
sub
xchg
insb
movsl
dec
adcb
mov
xchg
jne
sbb
lods
xor
fldl
enter
mov
inc
insb
movsl
inc
pop
fxch
in
push
adc
icebp
add
inc
and
adc
inc
movlps
add
nop
mov
or
in
in
mov
xor
sbb
jae,pn
pop
dec
cmpsb
mov
insb
and
mov
aad
push
xor
out
or
imul
mov
inc
les
cmpsl
mov
test
movsb
scas
inc
cmp
fistpl
adcb
pop
in
imulb
into
sub
dec
faddl
rcrb
inc
enter
inc
adc
sbb
ja
or
xchg
ja
adcb
add
addb
pop
jne
mov
decl
cmpsl
int
sahf
shlb
jno
jno
dec
mov
jae
punpcklwd
addr16
and
mov
std
dec
pop
xchg
dec
adcl
ljmp
mov
ret
mov
cmp
and
and
inc
jle
and
inc
sub
xchg
out
scas
in
pushf
imulb
and
subl
nop
dec
ljmp
scas
dec
mov
sahf
fidivl
lods
lret
mov
adc
dec
daa
fiaddl
xor
cmp
cld
int
mov
xchg
aam
xor
xchg
fildll
adc
jo
sub
cmp
cmpsb
pop
aaa
mov
fisubl
inc
shlb
gs
xchg
mov
add
sbb
cmc
mov
imul
sbb
movsb
mov
popf
xchg
into
cmp
cmpl
dec
mov
adc
pop
jo
fisubrs
addr16
or
inc
jno
shll
cwtl
dec
add
push
mov
orl
sahf
jl
sbb
sti
sub
dec
hlt
lock
jb
adc
mov
mov
xchg
popa
sbb
jno
mov
jnp
xor
fadd
int
es
inc
fstps
bound
mov
lahf
dec
mov
in
imul
mov
lods
fnstenv
add
pop
mov
cltd
aaa
xlat
mov
cmp
jno
cli
inc
mov
cmp
data16
or
or
sub
std
pushf
imul
bt
jge
mov
in
lea
push
xor
push
and
add
mov
jmp
shr
mov
sbb
cmp
dec
ljmp
jecxz
add
ss
fnstsw
subl
dec
lds
cmc
rcr
sti
lods
subb
inc
es
lcall
and
mov
sub
enter
adc
jns
popf
fdivrs
mov
mov
stos
mov
lret
fucom
lea
fimull
leave
cmp
push
hlt
and
mov
idivb
pop
adc
jbe
mov
es
repnz
mov
add
push
push
pushw
pop
xchg
jmp
jle
xor
push
addb
push
mov
xor
in
cmpsl
stos
sbb
addl
shlb
imul
pop
push
jg
pop
daa
dec
push
sub
mov
jbe
stos
aas
sbb
fdivr
dec
jg
out
sub
out
and
jae
sbb
cmp
dec
ret
mov
mov
sub
cmp
jmp
dec
jae
stos
mov
hlt
loope
dec
aad
andps
jl
xchg
push
fs
add
cwtl
dec
or
pop
pop
sbb
lret
or
adc
ja
mov
mov
fwait
push
dec
mov
and
mov
js
jne
cli
mov
idivl
lret
pop
sarl
daa
cmpsl
rcr
and
pop
push
mov
hlt
xchg
sbb
sbb
xor
xlat
fldl
sti
movsb
mov
sub
xorb
js
fnstsw
cmp
icebp
imul
out
lret
movl
out
mov
lds
and
mov
enter
int3
mov
fnsave
in
lods
push
roll
and
call
cmp
in
sub
inc
cmp
jbe
out
sbb
pop
xchg
out
xchg
push
test
repnz
xchg
push
cmp
pop
sahf
out
and
in
es
inc
sub
sbb
push
lcall
into
stos
xchg
fistpll
pushf
lea
xchg
sub
sbb
or
mov
and
sbb
lock
cmc
push
subb
std
sub
rol
adc
xor
sbb
fsincos
cmp
bound
rcr
and
or
or
push
sub
movsl
fstl
xchg
mov
mov
daa
or
test
xchg
adc
jmp
in
call
and
ja
dec
and
xchg
sbb
mov
aam
imul
shlb
mov
adc
cmc
pop
rcrb
mov
push
and
mov
cmpsl
adc
pop
das
or
cli
ja
mov
nop
cld
or
mov
xchg
xor
insb
movsb
lods
sbb
sbb
repz
or
fmull
push
outsb
insl
jno
push
andl
cmpsb
lods
mov
and
std
jbe
insl
push
lock
jne
xchg
nop
push
pop
add
loope
out
cli
leave
sub
mov
mov
mov
mov
jmp
adc
xchg
push
testl
xor
mov
sti
int3
fisttps
add
fiaddl
push
out
mov
xlat
lahf
or
push
mov
stos
insb
jp
cs
bound
push
inc
popl
shlb
mov
mov
jno
mov
xor
jge
fdivs
sub
loopne
mov
or
sub
mov
xchg
ret
outsb
js
push
xor
sub
fmull
xchg
iret
aam
jns
inc
insb
sahf
mov
adcb
adc
mov
roll
stos
ja
repnz
sub
add
add
out
test
je
insl
or
sub
ljmp
jge
dec
pop
xor
mov
movsl
pop
fistl
aad
les
pop
dec
jmp
and
into
mov
mov
imul
lds
rolb
jg
jl
roll
std
or
cmp
pop
jae
mov
add
push
fwait
jns
inc
es
mov
in
push
mov
fucomip
fdivs
ret
adc
pusha
nop
push
lahf
mov
cmp
and
lock
cmp
ficoms
mul
gs
ja
es
dec
std
aad
jo
lret
js
jp
mov
in
and
rcrl
clc
jnp
pushf
out
ds
pop
movsb
movsl
insb
rorl
insl
or
pop
pop
adc
pop
push
jmp
jnp
jb
inc
mov
dec
jnp
sub
gs
inc
out
and
jp
inc
enter
sub
sbb
mov
pop
rol
push
lea
add
and
mov
int
sbbl
and
out
leave
out
mov
leave
pop
pop
subl
outsl
rolb
push
inc
push
sti
or
push
jo
fdivl
in
and
imul
sahf
sub
pop
xchg
inc
divb
int
loop
hlt
push
sbb
sub
mov
fisttps
int
pop
sarl
shll
cmc
imul
test
mov
daa
les
popa
aad
imul
mov
shrl
xor
mov
es
sahf
test
mov
pop
sub
mov
sbb
jnp
hlt
mov
xor
cld
push
dec
mov
loope
or
inc
dec
and
adc
pop
cmpsl
sub
fwait
pop
andl
loop
repnz
repz
cltd
add
pushf
or
cld
out
sahf
data16
or
stos
and
add
mov
repnz
sahf
ret
jecxz
aas
sti
sub
pop
daa
in
gs
addr16
xor
mov
adc
shlb
js
flds
sbb
mov
cmpsb
pmulhw
and
sbb
insl
mov
fldt
dec
jnp
shrl
cltd
shlb
fnsave
lods
insb
aaa
adc
xchg
dec
and
pop
imul
mov
xlat
fs
inc
in
inc
addr16
pop
out
lock
leave
lret
and
and
xchg
mov
cmp
bound
jbe
pop
popf
fwait
inc
sbb
xor
fsubr
pop
daa
imul
sbb
adc
bsf
dec
sbb
jmp
jp
pop
fcoml
push
insl
dec
cmp
fistps
gs
xchg
sub
outsl
cld
push
cmp
dec
sbb
push
pushl
inc
cwtl
jne
jg
jecxz
lahf
fnstcw
add
mov
mov
and
jo
mov
in
sub
pop
sub
xor
add
cmpsl
sbb
xlat
ret
rorl
dec
xchg
stos
mov
xchg
mov
roll
rolb
pushf
mov
sub
sub
in
clc
xchg
jp
aam
or
pop
loope
mov
xor
mov
jno
dec
xchg
scas
cmp
xchg
adc
pop
and
std
xor
mov
mov
sbb
push
dec
arpl
sti
xchg
int3
push
push
or
rclb
dec
bound
mov
mov
inc
shll
mov
cmpsl
in
sub
dec
sub
xor
outsb
mov
daa
lea
lock
cmpsb
setl
sahf
mov
lods
pop
das
xchg
pop
fucomi
push
xchg
adc
or
cwtl
inc
add
or
ret
fidivrl
or
js
cmpsb
cmp
shll
test
or
xchg
cmc
jb
cld
adc
push
pop
adc
lods
mov
sahf
imulb
and
add
mov
push
cmp
testl
and
sub
test
ret
pop
inc
call
push
cmp
pop
fstps
jp
fistps
je
xchg
mov
insb
push
aam
jbe
mov
je
and
movsb
inc
adc
cmpsb
dec
lea
sti
pushf
xor
add
push
push
inc
dec
in
std
rcl
inc
iret
mov
fstl
cmp
cmp
or
scas
insl
add
xor
sarb
jno
mov
push
push
xchg
sbb
lock
test
sub
mov
and
sti
xor
ljmp
pop
lods
stos
out
adcb
cmc
int
cltd
xchg
mov
cmp
mov
loopne
fidivrl
cmc
mov
sub
data16
rcrl
insb
dec
pop
mov
mov
icebp
stc
stos
pop
test
movsl
pop
pop
ret
dec
xchg
sti
sub
pop
andb
mov
outsb
ret
xor
shlb
adc
outsl
fisttps
shrb
inc
cwtl
dec
pushf
xchg
add
push
xor
inc
imul
lea
push
inc
push
cmpsb
pop
lahf
icebp
or
mov
jp
dec
into
test
mov
inc
cmc
mov
adc
jnp
stos
sti
pop
scas
scas
cld
into
pop
push
cmpb
loope
sbb
or
cmp
loope
jl
push
mov
into
and
jl
pop
lcall
pop
ja
mov
test
sub
mulb
xchg
int
cmp
les
pop
sub
ja
leave
mov
add
pop
push
and
clc
dec
lea
inc
dec
jno
mov
cmp
jne
out
pushl
push
sbb
sub
sub
jns
xor
xchg
lret
sub
pop
pop
enter
xor
daa
and
pop
sti
clc
mov
add
dec
pop
pop
data16
jmp
sti
shl
shrb
addl
xchg
mov
test
and
lods
and
pop
mov
arpl
mov
repnz
fsubl
sti
insb
mov
inc
loop
lock
mov
push
out
mov
and
sub
fstps
or
movsb
sbb
fcmove
out
jns
mov
fists
outsl
ja
stos
pop
xchg
out
addr16
push
ds
or
fstps
lock
pop
rolb
pop
imul
call
cmpsl
pop
jne
imul
lods
arpl
and
mov
mov
das
adc
mov
cmp
mov
hlt
out
mov
icebp
bound
xchg
loopne
add
jno
cmp
fwait
pop
cmp
add
pop
ret
in
xorl
add
popa
jbe
mov
add
scas
enter
shlb
or
idivb
push
mov
dec
push
in
out
or
rcrb
rcrl
push
pop
dec
add
sahf
fdivl
loopne
sbb
in
mov
inc
push
hlt
lea
jbe
adc
fmuls
sbb
sbb
std
adc
fwait
push
dec
in
jnp
pushf
outsb
push
adc
testl
daa
cli
or
push
clc
mov
mull
fldl
jne
test
jne
push
jecxz
cli
push
ret
adc
and
ret
mov
mov
rcll
or
xchg
xlat
out
inc
inc
push
jp
push
movsb
jb
push
into
aad
or
mov
jecxz
add
cmp
fstps
fstl
mov
jnp
sarb
sbb
and
mov
pop
aad
outsb
jle
lea
stos
xor
cmp
push
std
stc
cmp
push
pop
inc
shlb
nop
dec
fdiv
xor
gs
mov
cmp
test
push
jg
fimuls
jmp
fisubrl
pop
sub
fs
sbb
mov
pop
insb
sbb
test
mov
xchg
arpl
mov
fcompl
mov
aad
dec
sbb
push
fs
leave
in
filds
pop
jp
jecxz
mov
int3
stc
test
insb
xchg
arpl
pop
jbe
out
adcl
imulb
or
fadd
lea
in
cmpsl
xchg
dec
mov
inc
pop
mov
sbbb
jecxz
push
push
aaa
sti
cwtl
sub
sbb
pop
and
and
cmpsb
push
mov
xchg
xchg
and
sbb
cmp
loop
dec
xor
je
mov
inc
subl
je
push
pop
xor
aam
nop
xor
es
int3
cmp
jae
data16
test
loop
mov
hlt
stc
adc
xchg
and
test
test
add
das
pushf
cmpsb
xchg
inc
inc
sbb
push
mov
or
push
mov
lret
mov
movsb
push
test
ja
enter
outsl
push
or
lret
push
jge
lods
daa
xchg
arpl
js
adc
cmp
shrl
or
inc
or
outsl
gs
sub
push
add
xchg
daa
push
rorl
cmp
mov
dec
movsb
test
cmpb
jp
pop
rcll
mov
inc
iret
in
xchg
or
loopne
out
lds
in
inc
xor
push
mov
insb
pop
outsb
es
je
mov
cmpsl
pop
jnp
in
push
and
fsubs
aad
cmp
lea
xchg
lods
cmp
xchg
imul
cmp
in
or
xchg
imul
lret
jae
push
outsb
test
daa
insl
in
jae
adc
test
jp
sarl
push
push
das
adc
xchg
lods
adc
bound
mov
pop
roll
iret
icebp
dec
fildl
mov
clc
pop
and
imull
push
add
mov
test
mov
in
scas
push
mov
mov
xlat
push
mov
mov
ja
push
iret
mov
rorl
jo
mov
insb
ss
nop
xchg
add
mov
pop
enter
movl
fwait
adc
loop
push
cmpsb
outsb
clc
sbb
pusha
mov
sahf
jle
imul
leave
leave
loop
and
addl
push
push
jno
mov
popf
es
popa
inc
movsb
mov
add
scas
or
adc
dec
cwtl
dec
lahf
mov
stos
and
mov
fwait
mov
xor
sbb
pop
stos
xor
mov
xchg
xor
imul
fidivs
pop
fnstenv
ja
repz
addr16
pop
stc
sub
xor
imul
nop
jmp
test
mov
fwait
adc
stc
in
pop
andb
stc
fcoms
dec
pop
and
cmc
adc
in
cmp
adc
inc
jle
and
arpl
mov
ja
add
push
stc
pop
fdivrs
sub
mov
adc
mov
pop
jle
xor
mov
pusha
add
repnz
repz
pop
call
sub
pop
notb
out
repnz
cs
push
notl
ljmp
or
dec
mov
into
pop
pop
adcb
mov
add
insb
dec
inc
lock
push
lods
movsl
addr16
test
cli
call
out
scas
and
vhsubpd
and
loope
pslld
lret
das
test
sbb
jg
push
xor
aam
std
pop
roll
popa
pop
cwtl
iret
mov
mov
pop
mul
fiadds
pusha
out
imul
gs
sti
cld
dec
sub
ja
cmp
pop
data16
inc
andl
inc
jle
jae
and
shlb
es
les
leave
add
lods
jg
negl
lods
out
dec
xchg
mov
les
nop
sarb
xor
outsw
xor
xor
jae
test
mov
cmp
aam
pop
das
popa
filds
cmp
add
popa
into
ret
imul
orb
sub
jge
pop
scas
inc
call
pop
xchg
push
cmp
rcll
inc
enter
int3
mov
lahf
sbb
mov
cld
mov
xchg
leave
out
ja
inc
nop
pop
js
shlb
xchg
cli
lds
in
stos
outsb
and
insl
fs
xchg
mov
jle
scas
xchg
jmp
mov
pop
insl
arpl
pop
cmp
cmp
scas
in
inc
lcall
mov
xchg
jle
insl
xchg
add
ror
fcoml
mov
jecxz
jns
ss
adc
jp
shlb
dec
lcall
repz
aaa
pop
lea
xor
mov
dec
mov
ss
inc
jb
mov
push
push
inc
xor
inc
rclb
inc
xchg
push
mov
push
into
inc
adc
dec
rclb
dec
xchg
pop
addr16
das
mov
lea
cli
les
stos
inc
xchg
sub
pop
inc
xor
in
and
lret
jnp
ss
jno
in
push
sbb
dec
lea
cmc
xchg
sti
mov
or
dec
ljmp
xor
cli
inc
ret
xor
js
lcall
mov
test
popa
push
or
call
push
jbe
sahf
inc
seto
xlat
and
jl
in
iret
clc
cmp
rorl
pop
loop
test
sbb
sbb
pop
push
and
or
cmp
sub
sbb
pop
imul
push
inc
sub
in
dec
jle
scas
cmp
into
fisttpll
test
dec
sbb
jno
mov
mov
in
cmc
mov
clc
cmp
mov
mov
adc
lods
inc
dec
pusha
ljmp
std
mov
mov
aaa
sbb
adcl
test
dec
lods
repnz
or
sarb
jb
sub
in
aas
pushf
outsb
cwtl
ret
mov
sub
inc
fdivl
xchg
mov
jg
sbb
aaa
cmc
sub
pop
adc
bound
cmpsl
add
enter
nop
mov
adc
enter
int
or
aad
lds
mov
les
sti
loope
mov
scas
xchg
ja
out
inc
pop
int3
or
in
mov
push
pop
and
mov
popa
fpatan
inc
mov
mov
mov
fisubrs
adc
mov
mov
jmp
aas
leave
popf
shr
adc
out
push
mov
jno
dec
jmp
cmpsl
aaa
lret
in
lds
arpl
jg
icebp
sarl
mov
rolb
loopne
imul
or
mov
ret
jecxz
push
jg
jp
shl
inc
mov
lret
mov
fists
jp
push
push
dec
pop
push
mov
addr16
inc
rorl
mov
repz
fimuls
adc
jb
sarb
lock
and
lock
mov
aad
jg
pop
pop
rorl
sti
popa
sbb
outsb
dec
and
loope
push
idivb
xor
stc
cmp
sarl
push
ljmpw
test
sbb
mov
ret
sub
out
gs
cltd
lcall
shlb
mov
or
in
xchg
iret
xor
mov
scas
cmpsb
aas
into
test
mov
mov
cmpsb
cmpsb
cltd
xor
sbb
cmc
xlat
inc
add
stc
bound
fcoms
and
test
leave
cmp
repnz
dec
inc
sbb
add
mov
mov
xorb
jno
repnz
in
sti
orl
testl
in
sbb
in
jns
nop
mov
xor
pop
inc
jl
and
gs
mov
cmp
je
lahf
cmp
mov
dec
dec
int
ret
add
icebp
addr16
sbb
bound
mov
ss
fisubs
leave
push
pop
pop
or
out
mov
xchg
sti
pop
mov
or
push
shlb
push
mov
mov
ret
adc
dec
push
fcompl
mov
mov
scas
pushf
sbb
cmc
and
mov
sti
jle
jecxz
pop
popa
mov
repz
fdivs
mov
and
stc
addb
insl
ds
mov
jb
push
movsb
jp
mov
ret
lcall
or
mov
and
repnz
add
jmp
sbb
add
clc
lock
jge
and
mov
push
lds
in
jmp
mov
bnd
in
jle
pop
mov
in
mov
das
call
cmp
fcomp
xor
shl
mov
sahf
les
stos
arpl
add
mov
adc
mov
movsl
inc
dec
call
imul
pop
movsb
jge
cmc
jns
enter
xor
sbb
fwait
popf
js
sbb
aaa
or
lahf
sbb
cmpsl
ds
mov
icebp
jge
inc
add
push
testb
jbe
add
int3
mov
push
mov
jae
popw
call
pop
mov
aas
and
rcrl
sbb
sub
loopne
leave
fs
push
push
xor
fcoms
sbb
sub
mov
mov
cwtl
mov
pop
outsb
cld
or
out
inc
loopne,pt
xchg
mov
lock
lods
jnp
push
push
and
into
sub
mov
jbe
stos
scas
out
mov
add
cmp
mov
mov
mov
dec
mov
dec
ucomiss
das
pushf
loope
aaa
jecxz
ror
lret
cmp
inc
notl
dec
insb
cmpb
cmp
movsl
shl
mov
pop
and
mov
imul
xorl
sbb
xor
sbb
sahf
lds
mov
ja
aam
xchg
je
sub
lcall
jecxz
loope
cmpsl
cli
sahf
in
repz
daa
mov
mov
jge
pop
sbb
les
cmp
xchg
pop
dec
loope
inc
imul
pop
cmp
out
add
pop
in
or
pop
js
inc
inc
mov
loope
loop
mov
test
dec
jno
out
mull
out
sbb
out
sub
ret
mov
out
inc
call
shlb
roll
int3
inc
stc
adc
ss
int
std
mov
jns
xchg
dec
adc
cmc
stc
xlat
xchg
pop
test
mov
lods
nop
jp
cmp
jnp
mov
test
movsb
data16
icebp
ret
sub
or
sub
pop
jo
fistl
movsb
lock
pop
sbb
fs
dec
movsl
sti
enter
dec
rcll
in
ficoml
push
pop
enter
imulb
adc
mov
adc
addr16
int
adc
aad
lret
fdivrp
push
or
bound
negb
movsl
mov
imul
fucomip
add
pusha
dec
fildl
mov
insb
ffree
outsb
mov
in
scas
push
ret
mov
lock
lds
outsb
in
out
mov
lahf
mov
mov
dec
push
dec
cmp
adc
jne
xchg
dec
sbb
jg
xchg
pushf
xchg
std
fstpl
push
lret
aaa
lock
loope
negb
push
arpl
inc
ljmp
mov
ja
xchg
aaa
js
cli
cltd
mov
bound
cmp
popa
hlt
gs
jnp
test
jge
movsb
sub
xchg
int3
cmp
jmp
add
imul
std
sub
mov
ret
pop
in
in
inc
cmc
testl
mov
xorl
push
jge
mov
xor
aaa
mov
sarb
test
bound
push
sbb
insl
stc
adc
test
or
int3
dec
pop
and
cmp
adcl
mov
insl
repz
loope
sub
dec
notb
inc
xchg
outsl
mov
bound
in
addr16
scas
mov
addr16
fcmovnb
movsl
xor
mov
push
fimull
jnp
cmp
ret
cmp
out
dec
cld
fwait
sbb
jo
das
pop
fs
xchg
sub
fs
shll
fincstp
and
pusha
sub
or
mov
sahf
sahf
or
bound
ret
in
mov
and
dec
sahf
dec
psrlw
lcall
jecxz
cmp
xchg
jmp
fistl
lcall
inc
sbb
mov
popa
out
mov
and
mov
and
mov
dec
add
pop
sbb
addr16
movl
int
lods
ljmp
jns
sbb
mov
daa
and
xchg
pop
inc
pushf
push
mov
push
out
popa
loope
adc
or
mov
out
jo
push
cltd
ret
mov
leave
pop
pop
bound
push
or
xchg
lods
mov
push
movsb
adc
jo
or
cmc
xchg
dec
sbb
inc
fmuls
and
cmp
and
push
pop
fdivl
dec
mov
rcr
xchg
ljmp
scas
bound
jne
dec
lods
cmpsl
scas
jbe
dec
addl
mov
cmovo
adc
test
push
pop
je
pop
lds
xor
daa
je
test
and
aaa
xchg
pop
stos
pop
faddl
cmpl
dec
test
pop
adc
mov
mov
cmp
repz
add
lock
jmp
scas
jl
icebp
add
sti
push
mov
add
and
pop
add
xor
xchg
insl
das
pusha
cmpsb
fldt
sub
sub
cld
in
insb
xchg
jne
sbb
sub
mov
stc
loopne
fsubl
mov
test
aas
fldcw
dec
push
lret
lock
mov
adc
mov
xchg
loope
xchg
mov
pop
adc
or
mov
jp
pushf
in
and
mov
icebp
pop
mov
daa
cmpsl
daa
cmpb
out
inc
push
cmp
fs
ljmp
adc
out
push
fwait
gs
ret
loop
lods
xor
pop
iret
loop
idivb
and
lret
mov
test
loopne
jnp
mov
daa
inc
or
cmp
fisubrs
push
fs
loopne
pop
pop
les
clc
push
mov
or
in
in
enter
dec
fucomi
pop
mov
jne
adc
adc
cmp
mov
sub
cld
pop
lahf
ret
insb
xor
and
dec
loope
or
cmp
in
orb
dec
je
rorl
mov
pusha
movsl
xchg
imul
cli
push
cmp
daa
lret
stc
bound
outsl
mov
xor
xor
testl
lcall
sbbl
pop
fwait
lret
jae
in
adc
add
outsl
dec
sbb
sbb
cli
in
xchg
out
cmp
addr16
cmpsl
data16
test
mov
das
jl
std
aad
sbb
rcl
xor
mov
repnz
icebp
pop
mov
add
push
push
xor
pop
mov
adc
mov
xor
mov
loop
clc
rorl
xor
aad
push
in
sarb
push
add
aaa
jbe
es
or
jns
fistps
dec
sub
or
mov
cmp
and
cmp
andl
jns
insb
and
loopne
xor
jge
xor
push
dec
movl
mov
imul
lds
xchg
jnp
cmp
ja
xchg
gs
sub
push
loopne
sbb
inc
inc
jbe
loope
mov
or
pop
inc
dec
xchg
dec
pop
test
fsub
mov
mov
enter
or
outsb
xchg
and
add
dec
push
je
push
hlt
loopne
jl
pushf
xor
jle
or
and
push
das
cmp
mov
insb
add
add
dec
cltd
fisttpll
hlt
lret
in
jno
lds
xor
mov
dec
sar
sahf
arpl
ss
push
jp
adc
fucomi
ja
iret
add
rcrb
out
cli
mov
xchg
hlt
lea
mov
mov
jmp
cmc
sbb
aam
hlt
fwait
push
in
fiadds
sbb
mov
jl
adc
jmp
test
add
pop
out
xrelease
lods
bound
jp
mov
test
das
pop
xor
push
push
cmp
js
stc
and
mov
sub
xchg
mov
popa
jno
add
and
lds
add
mov
sub
cwtl
push
xchg
ss
lock
add
stc
cmp
aad
cwtl
fiadds
mov
loopne
jno
pop
push
incb
fimuls
dec
rolb
add
sbb
rol
fst
mov
mov
movsl
mov
or
sub
xchg
add
dec
cmp
add
sahf
loopne
loopne
add
sbb
shl
pop
imul
inc
dec
mov
sbb
jg
and
mov
ljmp
lahf
pop
cs
or
mov
dec
stc
ret
iret
int3
fldl
fsubrs
xor
add
nop
jo
fsubrl
or
hlt
mov
lds
out
ret
mov
sbb
add
xor
xchg
cmpsb
dec
inc
jmp
jge
add
daa
adc
stc
jo
fiadds
jb
xchg
pop
cmp
adc
add
je
jns
pop
xchg
sub
adc
out
loope
mov
ja
cwtl
and
mov
jo
xor
mov
in
pop
and
mov
ret
jns
adcb
fmul
dec
aas
stos
enter
stos
or
pop
les
push
repnz
mov
in
adcb
inc
sbb
stc
decl
inc
or
adc
mov
mov
pushl
fldz
lret
add
push
frstor
mov
mov
mov
mov
xchg
cmp
cs
aam
or
in
aam
es
add
add
in
ss
mov
sbb
and
cmp
popa
sub
pop
xchg
rcrb
mov
push
inc
daa
push
mov
inc
cwtl
xor
jecxz
leave
loope
mov
call
cmp
mov
aad
add
js
and
lahf
scas
jle
call
dec
push
xchg
pop
mov
or
fwait
and
xor
mov
dec
cmp
mov
gs
mov
cmp
popf
gs
push
dec
call
mov
jno
mov
hlt
dec
movsl
sti
cmp
test
ficompl
aad
int
lahf
xchg
xchg
sub
fnsave
jge
cmp
jb
or
aad
fdivrs
inc
lods
jae
lock
fimuls
jp
pop
rcll
ss
jl
sub
loop
js
jecxz
fdivs
push
iret
pusha
fwait
mov
lea
xchg
jns
scas
xchg
ljmp
div
xor
cmp
mov
lret
pop
stos
sti
outsb
jge
add
cs
xor
xchg
repz
and
adcb
cmp
shr
data16
into
stos
loop
adc
out
xor
inc
inc
pop
popa
sbb
mov
jp
sub
stos
je
hlt
push
addr16
mull
dec
mov
hlt
loop,pn
gs
inc
dec
push
jle
inc
jecxz
bound
or
into
dec
test
xor
enter
cmp
add
pusha
cmp
xchg
xorl
inc
movsb
jnp
push
inc
aam
jbe
xchg
sub
and
aad
icebp
popf
stos
xor
sti
adc
cli
lcall
ljmp
mov
jle
mov
cs
loopne
add
das
cmpsb
out
xor
add
sub
stos
dec
push
mov
mov
cmp
cwtl
mov
jmp
lock
dec
xor
jne
sub
mov
mov
int
int
mov
stos
xor
fdivp
add
test
out
cmpsb
add
mov
mov
lock
mov
fwait
test
mov
adc
xchg
and
icebp
push
adc
in
push
cmp
pop
imul
or
mov
mov
in
movaps
xchg
test
sub
pcmpgtd
jb
sub
dec
lods
sbb
std
adc
sbb
je
pop
mov
push
cmp
sbb
sbb
jge
mov
movsl
sahf
mov
cs
pop
add
nop
loop
adc
cmpsl
or
movl
or
aam
mov
cmp
lcall
jle
popa
lret
xchg
mov
test
out
jns
jle
movsl
mov
mov
inc
mov
out
dec
xor
push
mov
out
das
mov
xchg
mov
add
ljmp
jmp
in
imul
lret
aad
roll
lds
mov
lret
ffreep
or
dec
fwait
gs
sahf
sar
add
addb
lods
fldlg2
lret
jne
xchg
cmpsl
xchg
std
decb
ja
repnz
insb
sub
mov
pop
xchg
cmp
decl
repz
fadd
and
into
sti
push
add
dec
ret
movsl
inc
or
push
xchg
mov
pop
fnstcw
or
mov
jno
mov
sbbl
lock
ret
mov
pushf
ret
pop
mov
push
add
push
cwtl
xor
mov
jp
xchg
and
sub
ret
fidivrs
inc
out
lret
scas
call
jno
ja
sub
pop
mov
je
rolb
mov
insl
rorl
xchg
or
xor
lcall
mov
sub
sub
pop
popa
mov
insb
cmc
mov
icebp
jnp
jno
push
enter
enter
xchg
and
shll
jno
stc
cmp
movsl
push
sbb
cltd
gs
shrb
loopne
mov
leave
pusha
nop
loope
push
sub
cli
test
gs
xor
in
push
push
xchg
mov
dec
mov
push
push
dec
sti
mov
jne
lahf
enter
lcall
mov
cli
adc
pop
push
adc
mov
test
mov
xor
and
repz
xchg
paddusw
mov
out
addr16
mov
xchg
repz
ss
sti
pop
lds
dec
pop
xchg
jmp
jecxz
sbb
xchg
clc
push
xor
adc
jmp
ret
test
xchg
data16
aad
dec
cmp
jle
fucomi
mov
je
lahf
shll
cmpsb
out
jle
xor
cmc
sbb
jno
jnp
xchg
repz
xchg
lea
sbb
sti
pop
or
pop
inc
mov
movsl
and
xor
jle
xlat
mov
cld
sub
mov
push
ds
mov
ljmp
inc
push
mov
xchg
cmp
out
notl
sub
lea
mov
ja
xor
mov
dec
lret
loop
vpand
pop
les
jmp
lods
pop
mov
loopne
jne
into
dec
bound
leave
mov
sahf
or
jb
mov
jmp
jae
sarl
cwtl
push
sbb
sti
mov
jne
divl
ret
cmp
repz
fidivrl
ret
and
lock
subb
mov
mov
mov
adc
pop
push
test
js
movsb
cltd
lea
inc
in
sbb
lahf
lock
nop
cmpsb
cmp
movsb
or
mov
push
out
add
jp
jbe
leave
inc
imul
shlb
jmp
addr16
xchg
aaa
aaa
aas
ljmp
sbb
test
clc
mov
sahf
daa
ror
mov
sbb
adc
sbb
jmp
and
jg
sub
jbe
adc
dec
dec
rorb
fsubl
test
loop
mov
adc
aad
sbb
mov
or
popa
dec
icebp
in
jns
jns
insb
cld
pop
shll
cld
les
jns
push
pusha
pop
inc
loopne
sbb
flds
test
mov
cmp
rclb
loope
inc
cmp
test
popa
int3
pop
adc
mov
add
dec
jmp
cwtl
pop
mov
xchg
cmp
fwait
test
mov
xchg
stos
fidivl
jno
punpckldq
mov
jmp
mov
cmp
pop
in
rolb
dec
and
xchg
test
fs
mov
pop
popf
hlt
or
movsb
push
fisubl
rep
push
lods
repnz
lods
xor
xor
in
pop
pop
mov
aas
xor
mov
cld
aas
cmp
cmp
jne
push
mov
push
aam
lcall
jnp
cmp
xchg
adc
fwait
lahf
pop
or
push
repz
inc
mov
nop
fwait
lds
xchg
ljmp
out
pop
xor
pop
lahf
es
movsb
bound
aad
mov
jl
or
sbb
fwait
lods
add
clc
jbe
jecxz
mov
mov
stc
imul
xor
xchg
add
int
frstor
pop
clc
and
cmp
std
or
cmp
je
ds
push
sub
dec
ret
jbe
cs
jae
or
iret
push
test
mov
mov
mov
bound
lahf
jae
test
test
movsb
mov
dec
dec
push
loop
sub
movb
jmp
insl
sub
inc
mov
jl
mov
into
in
adc
scas
xor
adc
cld
lret
rclb
or
movsb
leave
pop
push
xchg
push
repnz
mov
ret
outsb
call
std
or
jp
cmpb
push
scas
shll
out
mov
mov
push
movsl
fmul
or
ljmp
call
mov
das
cmp
and
shrl
mov
inc
stos
mov
add
jae
mov
dec
test
push
jl
lret
mov
addr16
cmp
shll
into
xor
jmp
aaa
sub
add
jne
out
jno
int3
push
push
sahf
mov
cmc
ror
fildll
cmp
push
mov
sub
repnz
pushf
mov
or
adc
sti
int
das
jno
mov
popf
sbb
inc
mov
xlat
sbb
shll
movsb
and
adc
xchg
adcb
or
les
inc
out
imul
cmc
xor
xchg
dec
dec
fldl
rorb
or
mov
and
enter
cli
dec
push
cmc
call
out
dec
mov
mov
xchg
adc
popf
add
dec
mov
fs
fwait
push
xchg
lret
je
inc
jg
push
ficomps
std
mov
dec
incl
popf
mov
xor
daa
pusha
cltd
adc
in
in
pop
dec
sbb
mov
cs
clc
lds
and
call
sbb
sub
jmp
in
mov
aaa
stc
mov
sarl
push
pop
cli
cmp
pop
outsb
dec
rol
push
jmp
in
xchg
dec
push
dec
cmpps
mov
dec
xor
inc
and
imul
in
pop
add
js
mov
mov
pusha
out
mov
scas
stc
jp
pushf
xchg
aaa
and
jns
lods
jl
inc
sub
jle
dec
xor
pusha
sub
data16
les
jecxz
mov
jnp
mov
pop
rcrl
and
rcr
push
pmaxub
pop
and
lret
or
mov
xchg
loopne
cmpsb
in
lea
mov
push
idiv
push
mov
push
fwait
jmp
xchg
not
popa
std
pusha
imul
add
test
es
and
icebp
inc
adc
lods
scas
lcall
cmp
adc
mov
sub
mov
aam
cli
ss
mov
nop
sub
xor
mov
repz
outsb
fwait
adc
push
inc
add
add
test
mov
sbbb
iret
adc
cmpb
leave
in
fsubr
fiadds
popa
jno
or
mov
stc
lret
bnd
xor
sub
mov
scas
ds
sbb
test
ficoms
jbe
lcall
mov
scas
loope
mov
mov
lret
dec
sbb
hlt
and
stos
test
mov
test
mov
hlt
outsl
dec
push
dec
or
mov
and
push
mov
jg
pop
lea
sub
mov
movsb
mov
push
adc
mov
mov
jle
sbb
mov
das
es
jno
xchg
aam
sub
cmp
or
mov
outsl
sub
sbb
and
cmp
jecxz
repnz
int
ljmp
flds
inc
jae
push
add
shrl
mov
sbb
lea
leave
dec
loop
fmulp
add
xor
sbbb
rcll
inc
sbbb
xchg
push
shrl
mov
lret
rcr
mov
jmp
sub
jbe
sahf
or
push
jbe
orl
cmp
sub
sar
xorb
jo
sahf
sub
fnsave
add
or
fs
xlat
pop
mov
loope
ds
adc
cmp
shll
inc
loopne
cmp
push
inc
or
and
push
and
popa
test
inc
cli
lods
pop
adc
push
hlt
ficoms
in
and
frstor
scas
das
mov
xchg
movsl
in
orb
jnp
mov
outsb
mov
movsl
mulb
scas
js
hlt
or
pop
lea
mov
cld
and
push
mov
add
sub
mov
xchg
sbb
in
mov
or
arpl
mov
ss
pop
sub
sbb
and
out
repz
test
jno
ret
cwtl
fs
lret
or
fcomp
xor
pop
shlb
mov
arpl
mov
fs
mov
aaa
xor
jno
ret
cmp
sub
xorb
sahf
dec
sub
add
mov
or
mov
mov
pop
into
push
stos
pop
in
mov
add
pop
pop
xchg
and
xor
pop
outsb
imul
lcall
in
shlb
lock
mov
jle
shrl
mov
xchg
cmpsb
pop
into
outsl
out
fxch
inc
fwait
lcall
push
fsubrs
jg
push
jbe
hlt
into
jb
and
cmc
lcall
jne
rcll
mov
push
mov
add
xor
adc
inc
out
cmp
pop
add
subl
out
add
js
jns
sub
mov
xor
subl
mov
scas
or
les
sahf
test
pop
push
lret
movsb
inc
push
sub
loop
insl
mulb
aas
inc
push
jge
shl
insl
xor
loop
jecxz
lods
inc
test
xor
dec
jo
mov
lods
call
shl
lea
cmp
sub
and
das
mov
pop
sbb
rorl
mov
push
leave
xchg
xchg
pop
mov
fs
adc
pop
call
mov
ds
sub
xchg
jp
clc
adcl
or
jecxz
mov
pushf
jle
pop
stos
and
lret
mov
push
aam
popf
sbb
ljmp
mov
in
les
adc
jo
push
lods
lcall
xchg
iret
outsb
data16
std
mov
add
sub
pop
push
dec
insb
das
push
nop
lock
push
xchg
rcr
cmpsb
pusha
xlat
mov
inc
std
add
dec
arpl
shll
xor
aam
test
leave
pop
popa
movsb
and
or
pushf
mov
lods
xor
fisttpll
push
dec
cmp
rcrb
push
push
mov
xor
rcr
sbb
xchg
cmpsb
cs
or
jp
xor
insl
stos
and
sbb
inc
out
add
or
mov
aam
inc
aaa
in
movsb
dec
push
jl
popa
aam
adc
adc
sbb
lret
fidivs
mov
jp
mov
mov
leave
jnp
lahf
dec
xor
aam
pop
mov
push
xchg
pop
cmp
cmp
sbb
and
fs
jge
cmp
test
sbb
xchg
sbb
and
mov
mov
and
dec
push
adc
fldt
dec
pop
das
outsb
jnp
push
call
insl
xor
sarb
jl
out
test
ret
inc
push
adc
into
sarb
xor
ljmp
xchg
cld
jns
rcrl
cmpsb
push
imul
out
fldt
ret
fmuls
in
es
jmp
std
xlat
in
sub
pop
adc
ja
mov
lds
push
and
in
fbstp
push
fists
mov
dec
or
stc
or
dec
pop
xchg
xchg
int3
dec
pop
pop
daa
pop
insl
add
loopne
rolb
stos
movsl
bound
lahf
pop
insb
insl
mov
arpl
js
aas
push
daa
sbb
arpl
aad
movsl
fdivp
outsb
int3
arpl
pusha
mov
mov
movsl
push
xchg
pop
int3
sbb
pop
sbb
cmp
jne
mov
push
push
push
mov
or
xor
enter
dec
cmp
repnz
loope
xorb
push
push
adc
mov
pop
jp
mov
addr16
ljmp
or
std
fnsave
js
xchg
loope
bnd
mov
cmp
jns
dec
pushf
mov
push
push
lahf
add
aaa
mov
push
adc
xchg
shrd
cwtl
cmp
rcl
decb
pop
aam
push
std
cltd
rcll
xchg
cld
lods
stos
cmp
mov
jle
pop
cmp
xor
mov
jbe
iret
adcb
inc
test
lahf
dec
out
adc
add
lods
mov
mov
push
add
es
roll
data16
xor
xor
fnsave
adc
push
mov
fldcw
add
xchg
icebp
call
out
rcrl
mov
or
pop
iret
scas
fucomip
jb
add
mov
lahf
xchg
js
enter
mov
aad
sahf
and
movsb
cld
add
and
aas
arpl
or
pop
push
lcall
mov
pusha
lods
orl
mov
or
fnsave
aas
lcall
mov
jecxz
xchg
jmp
push
or
stos
mov
mov
into
push
jge
shr
sbb
mov
mov
and
xor
scas
loop
cltd
jp
sbb
lret
in
negb
insb
loopne
jle
xlat
bound
push
add
sahf
insl
cmp
or
js
cmc
imul
and
in
mov
divl
jbe
xorb
pushf
addl
and
inc
das
sti
nop
stc
mov
or
fdivrs
cwtl
push
push
jnp
cwtl
adc
pop
clc
movsl
add
lahf
pop
test
loopne
mov
mov
loop
cmp
popa
xor
mov
inc
mov
imul
mov
jbe
and
mov
imul
into
les
daa
xchg
sub
inc
popf
xchg
mov
test
pop
mov
sub
sbb
sti
xchg
pop
es
dec
loope
adc
xchg
cmp
or
push
es
jle
ss
mov
shlb
popa
xchg
js
cmc
popl
ret
xor
adc
sub
sar
in
and
fistpll
arpl
jle
pop
xor
cmp
adc
mov
gs
iret
lea
shr
jo
xor
imul
cmp
pop
xor
cmpl
stos
in
xchg
imul
ja
jne
ja
pop
xchg
inc
out
mov
jl
decb
dec
rcrl
or
xchg
lcall
inc
mov
push
js
ret
or
test
sbb
adc
into
inc
in
sub
inc
mov
out
mov
mov
mov
lahf
test
iret
xchg
aaa
and
add
call
xorl
leave
push
mov
adc
fsubs
mov
mov
pop
fucomp
in
call
xor
test
pushf
xor
data16
xchg
mov
cmp
lods
sub
aas
insl
in
sahf
sbb
in
cmp
sbb
scas
mov
cmp
mov
pop
or
or
fidivrs
inc
idivl
xchg
repz
add
lret
ror
mov
jno
in
jge
mov
xchg
rorl
filds
dec
rcll
sbb
mov
data16
sbb
stc
fsubrs
xchg
mov
in
js
and
and
into
sbb
add
adc
pushf
pop
cmpsb
and
lret
inc
jmp
inc
adc
cltd
mov
mov
jge
movsl
addr16
inc
out
lahf
adc
sbb
dec
inc
mov
inc
nop
xchg
arpl
xor
push
dec
mov
cmovbe
pop
inc
mov
test
int
scas
lret
cmpsb
push
imul
ret
push
fcomps
mov
cli
or
in
std
sbb
mov
insl
divl
jp
popf
pop
out
push
aaa
adc
push
fs
jge
stc
movl
jno
cwtl
pop
xor
wrmsr
in
jecxz
imul
mov
mov
fcmovu
adc
xchg
mov
shlb
sbb
sahf
inc
pop
jbe
cltd
lret
test
mov
dec
mov
in
add
js
pop
pop
pop
fisubrs
in
cld
inc
roll
xor
xor
ss
out
test
xlat
xor
orb
sbb
cmp
rclb
fimuls
pop
outsb
out
xor
sbb
inc
jnp
mov
pop
cmp
cltd
jp
mov
cld
fdivrs
xchg
jg
pop
jo
je
fucomp
ljmp
fidivs
add
lock
cmpsb
es
jge
cmp
mov
mov
cmc
push
inc
test
push
call
orl
cmpb
pushf
xchg
fnstsw
sbb
shr
mov
in
mov
cmp
rcl
fs
or
mov
jl
xchg
cmc
loope
fsub
inc
mov
repz
inc
inc
sahf
mov
fcomip
ja
dec
clc
sbb
and
jl
rcl
mov
push
jno
jmp
xlat
xor
mov
jae
popf
sub
movsl
or
in
xor
aad
inc
mov
sub
mov
cmpsl
and
clc
push
negb
sbb
xor
outsl
dec
dec
aas
test
sti
ficoms
in
adc
xchg
cmp
mov
and
and
push
addl
stos
jmp
mov
or
jae
imul
jecxz
dec
xor
test
rorl
pop
cmc
lds
xchg
pop
push
mov
pop
pop
or
int3
pop
hlt
dec
xlat
insl
mov
hlt
sub
cmp
call
mov
mov
fcompl
mov
and
or
into
lock
notl
pop
repnz
adc
adc
scas
xor
sbbl
fdivs
in
and
mov
jae
fucomi
cwtl
dec
cmpsb
enter
addr16
shll
or
ja
pushf
fdivrl
movsb
test
add
lds
mov
push
mov
cli
shr
fiaddl
stos
cld
adc
push
sub
dec
rcrb
call
pop
dec
pop
call
jge
insb
jb
mov
and
mov
push
or
mov
rolb
sbb
jo
mov
cmpsb
mov
mov
mov
xor
dec
aaa
mov
add
push
clc
outsl
faddl
xlat
hlt
outsl
out
mov
xchg
mov
aas
jbe
decl
jnp
fimull
dec
xchg
mov
mov
test
push
mov
or
mov
lods
mov
popa
dec
pop
rcr
scas
loop
xor
repnz
leave
jae
scas
and
fdivl
sarb
lahf
push
sbb
inc
mov
mov
jle
inc
cwtl
xchg
add
mov
xchg
inc
aas
jl
js
cwtl
xchg
ret
int3
fists
cmp
subb
stos
mov
cmpsl
lods
cmp
adc
sbb
mov
and
pop
jle
pop
xor
xchg
cwtl
adc
mov
dec
in
and
in
xorl
push
mov
lret
test
dec
pop
arpl
data16
xor
dec
in
sahf
mov
test
jl
jo
mov
push
stos
nop
xchg
xchg
jno
jae
mov
scas
pop
subb
mov
sub
cs
inc
xchg
pop
pop
iret
lock
cmc
inc
mov
cmp
fisubl
test
pop
fldl
dec
in
mov
pop
outsb
cmc
and
ja
lods
sarl
popa
dec
scas
fidivrl
or
bound
testb
jno
les
mov
daa
vmovaps
in
xor
mov
pusha
repnz
xor
fstp
int
jo
lret
mov
add
je
sbb
movsl
pop
cwtl
mov
ss
inc
jns
and
and
pop
add
shrb
and
add
or
and
dec
mov
xchg
lds
scas
aas
out
in
mov
sub
mov
xchg
out
adc
dec
mov
cwtl
or
mov
xchg
rolb
cmp
gs
adc
mov
rclb
pusha
stos
inc
out
outsb
pop
lea
jmp
push
pop
dec
popf
nop
in
test
pushf
daa
data16
scas
scas
push
cmp
sbb
and
ds
cmpsb
mov
sub
cmp
testb
roll
iret
imul
ds
shll
in
push
xchg
jecxz
push
lea
jle
pushf
push
fistl
cmpsb
lahf
aaa
xor
adc
mull
ljmp
cli
or
xor
cmp
movsl
push
loope
push
add
jmp
sbb
leave
cmc
jns
mov
pop
bound
jns
adc
and
mov
push
ja
push
mov
cmp
mov
loopne
stos
dec
xchg
adc
push
loop
adc
mov
movsb
mov
sub
js
aad
rcr
scas
adc
int
imul
xor
dec
loope
inc
test
repz
jno
sbb
scas
pop
inc
adc
jnp
inc
sub
mov
ja
sbbl
lock
cmc
mov
cmc
add
into
fs
dec
xchg
ds
scas
bound
adc
cmp
sbb
into
scas
add
jp
test
scas
pop
push
mov
jp
adc
leave
or
adc
scas
ss
pop
mov
push
scas
fldt
data16
aad
dec
ret
push
fisubrl
cmp
mov
sahf
xor
lcall
enter
test
inc
arpl
shrl
data16
pushf
pop
ret
sbb
inc
ss
mov
inc
xchg
sbb
jg
test
inc
sbb
xchg
hlt
jns
cmpl
jo
jecxz
outsb
adc
mov
mov
lods
sub
and
dec
cmpsb
mov
cwtl
insb
rclb
and
iret
mov
lods
filds
mov
mov
lds
adc
loopne
push
jg
push
xor
fnstsw
add
mov
int
lock
fisttpll
testb
daa
cmpsb
pop
lahf
or
adc
push
pop
sahf
pop
dec
jae
mov
fimull
jge
aaa
subl
pop
inc
popa
mov
scas
test
jp
inc
cmpl
mov
ds
xchg
pop
lock
jns
jp
mov
push
lock
jne
push
pop
push
rorb
push
lds
xchg
xchg
leave
test
jo
ja
fidivs
movsb
sti
movsb
insl
test
xchg
add
cmp
sub
lret
lret
mov
gs
fcmove
adc
lods
int3
leave
aaa
in
xchg
sub
in
aam
mov
filds
fstpl
in
add
mov
shll
inc
sub
into
test
pushl
pop
loope
dec
sub
mov
pop
mov
add
rclb
stos
add
sahf
or
xlat
in
push
outsl
jo
ficomps
add
cmp
pop
fiaddl
sub
inc
xchg
loopne
mov
inc
lcall
stos
xchg
es
icebp
add
lahf
lahf
int
cmp
pop
data16
fadds
std
xlat
or
sub
jae
xor
repz
and
icebp
inc
and
mov
xor
test
sub
cmc
into
xchg
inc
addr16
or
aad
aaa
ds
dec
lods
mov
pop
stos
cmp
add
xchg
jne
and
mov
xlat
les
mov
shll
pushf
mov
jmp
sbb
sbb
xchg
ret
xchg
cwtl
lahf
clc
xchg
test
cmp
lods
outsb
jg
lds
je
lcall
je
imul
jp
xor
inc
pop
xlat
push
pop
popl
xchg
inc
cwtl
dec
pop
jle
xchg
fiaddl
out
xchg
mov
stos
fnstcw
rorl
or
cmp
pushf
inc
repnz
mov
xchg
sub
scas
mov
mov
or
cmpsl
lds
out
sbbb
loope
ret
inc
repnz
mov
outsb
in
ja
rcr
stos
pop
in
xor
fsincos
xchg
aam
xchg
and
call
add
psubb
mov
xchg
into
pop
int3
or
sarb
jnp
in
repz
js,pt
incb
add
add
rolb
add
push
inc
fsubrl
and
ja
jns
test
or
addl
pop
dec
adc
mov
xchg
movsb
push
ret
mov
cmp
inc
inc
inc
pop
repz
mov
cmpsl
mov
sbb
popa
jno
addr16
subl
fldt
out
mov
dec
jnp
jae
mov
pushf
xchg
jge
sbb
ja
loop
mov
hlt
addl
xchg
jl
pop
jecxz
filds
jns
hlt
push
xor
adc
sarl
mov
aam
call
sbb
adc
push
inc
out
push
mov
call
xchg
sub
fistps
cmpsb
xchg
iret
mov
dec
and
mov
dec
cmp
jbe
jb,pt
leave
inc
pushf
sbb
pop
ds
dec
inc
mov
pop
mov
test
andb
pop
mov
cmc
sub
lea
mov
mov
sub
fucom
jb
mov
pop
ds
scas
cmp
loopne
enter
cli
call
push
jae
mov
imul
adc
jbe
xlat
stos
inc
or
aad
mov
lcall
cmp
movl
in
cmp
in
jnp
inc
dec
mov
push
dec
add
mov
jmp
jns
jbe
inc
push
or
imul
push
sbb
push
data16
pushf
push
dec
jnp
lods
push
and
cmpsl
test
jp
mov
fstp
test
fnstsw
dec
xchg
xchg
lock
sahf
out
jae
inc
sbb
jne
xor
xor
loopne
adc
jmp
ucomiss
inc
mov
xchg
push
xchg
mov
mov
fdivr
test
out
arpl
sub
popf
test
xchg
gs
dec
scas
or
je
ret
rclb
jbe
out
jp
mov
lods
lret
adc
pop
aam
xlat
sahf
mov
in
rclb
imul
jnp
pop
pop
xor
adc
cmpsb
ficoms
nop
and
sub
mov
dec
out
pop
addr16
out
scas
mov
pop
or
add
or
dec
clc
les
pop
leave
test
pop
and
adc
sub
adc
adc
mov
xchg
jns
jno
icebp
outsb
iret
sti
out
ret
cli
mov
in
in
outsb
outsb
inc
pop
pop
push
fs
inc
xor
pop
dec
mov
jns
and
ljmp
xor
sbb
add
fs
out
sub
cmp
jno
jbe
lret
cmp
cmpsl
es
inc
test
mov
ret
adc
adc
stos
dec
jbe
push
stc
test
xchg
stos
out
test
push
data16
repz
push
sahf
lods
std
mov
and
inc
cmpsl
fcoms
cli
adc
xchg
sbb
sar
push
mov
inc
pop
sub
sbb
sbbl
je
mov
mov
subb
jae
in
in
in
fwait
push
mov
add
ror
mov
addr16
push
fwait
push
cmpl
mov
jge
push
scas
out
push
sarb
pop
in
and
xchg
pushf
lret
adc
push
jecxz
mov
cwtl
adc
cmp
fidivs
movsl
mov
adc
fidivs
and
jb
dec
push
fsubrl
adc
stc
stos
or
int
stos
repz
ljmp
sub
or
xchg
sub
xor
fwait
push
xor
pop
iret
inc
mulb
leave
pop
mov
add
inc
loopne
imul
cltd
or
pusha
xchg
push
es
lcall
bound
fnstsw
loop
fwait
test
movb
aaa
mov
pop
sub
pop
mov
dec
adc
lea
mov
les
dec
inc
push
sbb
out
add
mov
pop
aaa
cmp
mov
hlt
fwait
aaa
pop
pop
xchg
jbe
insl
lock
data16
sub
push
cli
jae
mov
jb
rcrl
addl
xor
pop
insl
push
mov
cmp
loope
stc
mov
cmp
mov
pop
ss
add
stos
pop
shrb
gs
mov
sub
and
inc
pop
addb
pushf
sub
sub
or
jno,pt
lods
xchg
mov
mov
cmpl
out
aaa
aad
leave
shrl
data16
hlt
lret
insb
jnp
mov
mov
xchg
leave
in
mov
sub
push
push
lock
cmp
nop
punpcklbw
jmp
mov
mov
nop
ss
or
add
mov
mov
loop
sarb
sti
ret
xlat
push
filds
inc
dec
std
jnp
arpl
stos
pop
in
aas
int3
icebp
mov
pusha
shlb
fisubs
loop
mov
or
popa
sbbb
inc
inc
sub
cmp
sbb
mov
xor
xlat
jne
push
push
jns
jecxz
adc
cmp
sahf
jae
repz
rcrl
out
xchg
inc
mov
movsl
jae
lock
jg
cs
and
pop
xor
subb
cmp
iret
aaa
mov
dec
mov
lea
ds
js
lods
iret
ss
imulb
push
andb
sbb
cmp
pop
inc
push
mov
aas
loope
int3
mov
pop
mov
test
stos
test
outsb
xchg
ds
or
or
rol
mov
loop
outsl
mov
jb
xchg
pop
testl
insb
jbe
inc
mov
lcall
dec
xor
mov
aaa
xor
popf
lods
jle
xor
inc
mov
mov
and
shrl
cs
add
test
negb
cmp
sbb
notb
sub
push
or
sbb
add
fstps
cmp
mov
adc
pop
in
or
cmp
insl
sahf
adc
popa
icebp
xchg
sbb
das
adcl
xchg
addr16
cltd
and
sahf
xchg
aas
inc
and
lret
sti
sbb
addb
cmp
mov
xchg
push
jge
aad
and
lock
scas
pop
push
jge
cwtl
insb
scas
jo
xor
cmpsb
into
lods
call
out
xchg
mov
cmpsl
adc
fldcw
add
outsl
mov
or
pop
dec
pop
cmp
icebp
inc
es
lds
ljmp
push
fwait
xor
push
imul
ja
or
stc
cmpsl
push
cwtl
mov
mov
mov
bound
repnz
or
movsb
mov
dec
jb
push
divb
ljmp
push
dec
cmpsl
aaa
mov
xor
push
data16
push
jbe
mov
cltd
outsl
sub
outsb
mov
pop
negb
dec
cmc
push
push
mov
iret
call
sbb
mov
popf
fwait
jle
cmpsl
sbb
arpl
xchg
inc
ljmp
pop
inc
movsb
add
das
in
shlb
addr16
mov
push
push
clc
push
fcmovnbe
jbe
cld
and
arpl
loop
mov
mov
repz
imul
lret
xor
sub
cs
xlat
aaa
adc
xor
aas
or
pop
shrl
xchg
imul
fisubl
lock
or
pop
add
call
ljmp
fadds
and
fdivrp
test
jle
out
push
jmp
jo
outsl
loopne,pt
and
inc
out
mov
cmp
out
push
stos
imul
inc
in
dec
push
je
xor
jecxz,pt
inc
sub
xchg
icebp
js
push
mov
mov
or
lret
mov
inc
negl
push
push
mov
mov
das
in
sbb
gs
mov
and
jl
sti
cmp
stos
adc
xlat
mov
jmp
inc
lods
sbb
pop
aam
jnp
fwait
sbb
mov
inc
pop
in
cltd
xor
nop
jle
mov
lahf
les
jmp
pop
cmpsl
stos
frstor
mov
sub
outsl
sbb
loopne
and
pop
xor
jp
cmpsl
outsb
sbb
mov
repnz
insb
xchg
add
sub
jb
sub
add
xchg
sarb
cmp
arpl
lods
xor
test
cmp
idivl
mov
lds
cli
sahf
mov
stc
sbbl
sti
neg
repnz
push
push
inc
push
ds
dec
inc
pop
cltd
push
inc
push
pushf
insb
leave
ret
push
inc
in
cmp
mov
out
xor
ja
inc
mov
hlt
pusha
push
stos
adc
add
adc
shl
enter
imul
in
scas
inc
xchg
or
push
jnp
cmpsl
sub
or
cmp
je
div
lret
mov
or
pop
add
sti
aad
mov
mov
dec
rolb
bound
xor
ffree
mov
repz
inc
int3
imul
xor
xchg
test
sub
or
jne
mov
aas
mov
push
fnstenv
or
add
cwtl
mov
pop
sti
xor
jns
mov
stc
add
ret
cmc
out
dec
insb
inc
cmpsl
mov
ljmp
mov
jns
ss
stos
test
jne
add
jb
push
es
lods
mov
xchg
scas
sbb
cmp
std
pop
pop
mov
repz
push
int3
jge
and
popf
or
mov
lock
idiv
lret
push
nop
outsl
adc
and
pusha
xlat
ficomps
lcall
add
jne
xlat
or
mov
lock
fstl
adc
cwtl
mov
dec
pop
xor
stos
xchg
mov
sbb
loope
mov
push
jl
call
rolb
push
scas
push
inc
imulb
lahf
test
loope
pop
push
and
jmp
fadds
adc
push
aam
cmp
fisttpl
xorps
cli
and
jne
int3
stc
xchg
mov
mov
jo
loopne
dec
adc
sbb
cltd
push
in
jo
outsb
sub
adc
inc
push
movsl
gs
fcoms
int
dec
xchg
std
mov
add
ret
or
clc
and
out
lock
mov
rcr
mov
xchg
sub
ljmp
lahf
sub
pop
lcall
gs
sahf
sbbl
aam
xlat
sbb
pop
dec
frstor
aaa
je
outsl
sti
js
cmp
jecxz
xchg
js
sub
nop
push
clc
jmp
xchg
jno
jo
stc
mov
cmp
add
lock
pop
xchg
jne
xchg
rol
mov
sub
rorl
test
cli
mov
xor
xchg
xchg
gs
xchg
fs
int3
fnstsw
insl
dec
movsl
lea
jbe
xchg
mov
adc
cli
sub
pop
cmc
adc
les
mov
jae
push
lea
sbb
pop
out
enter
jbe
std
push
stos
minps
sub
xor
rol
cwtl
sub
cmp
jmp
es
mov
mov
clc
hlt
mov
xlat
int
dec
insb
out
mov
mov
jecxz
sbbb
sbb
ljmp
xor
add
roll
inc
or
fiadds
cmp
xor
add
inc
mov
stos
add
dec
lods
in
f2xm1
push
test
imul
imul
into
and
or
daa
and
clc
xchg
fidivrl
sbbb
jae
inc
mov
pop
mov
movl
xchg
ja
lret
cmpsl
clc
inc
mov
rcl
xchg
outsb
enter
fptan
imul
je
sbb
adc
mov
imul
mov
mov
xor
sarb
add
jp
push
iret
push
xchg
cs
push
stos
movsl
push
cli
je
xchg
icebp
mov
xchg
xchg
xchg
inc
cwtl
sub
jbe
add
dec
mov
mov
push
mov
xchg
stc
mov
arpl
fs
mov
roll
pop
nop
hlt
popf
cmp
adcl
add
xor
das
sub
aaa
movsb
sbb
imul
pop
nop
push
pop
ss
arpl
ret
and
mov
mov
popa
das
adc
decl
icebp
shl
and
jg,pn
lock
das
inc
mov
pop
in
pop
hlt
rcll
pop
jb
pusha
clc
pop
adc
test
push
ja
femms
je
dec
aad
pop
cs
sub
sbb
mov
adc
mov
ret
cmp
mov
mov
mov
inc
lock
mov
call
jae
and
or
pop
lcall
into
xchg
lret
inc
lock
pop
out
ljmp
add
into
and
outsl
icebp
jecxz
jnp
push
out
es
inc
insl
popf
test
adc
mov
xor
nop
mov
cli
ds
jmp
enter
cld
ret
or
out
repz
xchg
punpckhdq
inc
mov
pushf
popf
outsl
pop
insl
xchg
cmp
dec
pop
mov
fcomi
lret
clc
lock
pop
inc
repnz
fdiv
std
ret
xchg
mov
stos
mov
test
sub
mov
jg
rclb
popf
cmpsl
push
xchg
pop
imul
pusha
sub
xchg
add
stc
add
xchg
ret
cmp
lret
sub
mov
notl
or
aad
icebp
adc
jge
push
call
decb
xchg
dec
pushf
xchg
push
lret
mov
mov
mov
lods
repnz
testl
scas
mov
enter
imul
mov
movsb
loopne
push
aam
adc
cmp
sbb
inc
sub
cli
pop
mov
sahf
fstp
or
lods
add
mov
stos
test
bsr
bound
lods
mov
pop
cmp
ja
imul
adc
dec
imul
loop
out
ss
adc
inc
mov
std
xor
jne
mov
loop
into
shrl
xor
push
xchg
sbb
pop
sbb
leave
pop
xor
pop
xchg
xchg
and
jp
ret
movsl
mov
inc
sti
xchg
mov
and
mov
pop
int
cs
mov
out
xorb
jae
iret
int
push
fisttpll
sub
inc
jns
mov
and
int
in
shl
jb
cmp
lods
adc
sbb
dec
mov
ds
hlt
lret
out
pop
lret
dec
and
xor
ret
jmp
or
or
dec
push
int3
cmp
jmp
or
adc
adc
sti
pmullw
inc
jmp
test
lcall
jge
pop
popf
mov
mov
test
mov
mov
shlb
sub
rcrb
inc
shrl
jo
call
push
ljmp
insb
test
cs
jmp
sub
or
sub
mov
int
rclb
mov
dec
pop
jns
outsl
idiv
sahf
xchg
jo
mov
jg
cltd
out
adc
or
xchg
jnp
mov
mov
xor
add
iret
xchg
pop
mov
imul
pop
movsl
push
mov
jl
mov
jnp
cmpsb
or
repnz
jnp
rcll
mov
and
mov
int
mov
cmpsb
push
push
add
jle
nop
or
pop
add
pusha
aaa
mov
and
xlat
imul
mov
lds
imul
popa
jmp
pop
xchg
popa
pop
jp
sub
cli
cmp
cmpsb
push
sub
push
and
push
pop
in
das
sbb
inc
mov
adc
push
sbb
movl
sarl
addl
dec
sub
add
and
stos
push
sbb
out
xor
outsb
jecxz
xchg
pop
pop
pop
push
sub
rolb
jg
in
lds
lea
cs
stos
stos
mov
adc
mov
into
es
add
xchg
daa
ror
inc
and
pop
lret
mov
push
cmpsb
test
fldcw
cld
sub
adc
adc
push
push
jg
ja
sti
mov
mov
in
inc
and
and
jl
jo
cmpsl
jecxz
push
ja
popa
push
movsl
mov
aas
fnsave
mov
and
add
jbe
in
xchg
pop
and
mov
xchg
stc
dec
cwtl
pop
xchg
cli
push
jg
cmp
jns
push
cmp
ficomps
mov
shrl
ret
dec
daa
cmp
sbb
fisttpl
inc
or
and
xor
dec
mov
inc
sbb
pop
jae
xchg
and
loope
inc
sbb
sbb
jbe
lods
arpl
or
push
arpl
xor
mov
out
outsl
jbe
and
mov
fimull
stos
push
pop
and
into
dec
std
loopne
jmp
push
xor
ja
pop
xchg
lods
dec
mov
mov
icebp
sub
lcall
lods
movsl
int3
les
idivl
and
test
into
in
es
jmp
and
les
xor
test
or
push
pusha
ret
sbb
inc
outsb
out
push
inc
mov
lds
and
and
addl
outsl
sti
fwait
dec
inc
mov
je
xchg
sar
dec
movsb
imul
sub
fst
push
dec
mov
adc
loop
inc
fwait
jne
mov
and
xor
pop
push
inc
sub
mov
test
mov
sub
pusha
cwtl
pop
scas
cli
rol
ds
adc
sahf
xchg
and
jne
or
andb
dec
push
adc
mov
fisubs
pushl
test
test
mov
bound
test
xor
out
je
push
testb
pop
dec
add
push
insb
stc
and
test
adc
xor
iret
cmpsb
js
orb
adc
shlb
shlb
std
pushf
call
jecxz
pop
pop
pop
xor
sahf
add
into
ja
mov
dec
out
imul
loope
mov
push
jecxz
in
pop
shrl
jecxz
xor
push
sub
jge
xor
popa
loop
jns
lret
mov
lahf
test
ret
pop
push
mov
lds
adc
in
mov
mul
ret
fisubrl
pop
out
xor
roll
data16
jbe
add
jmp
das
push
xor
dec
repz
push
adc
mov
jmp
or
jb
xchg
xchg
jns
xchg
cwtl
ljmp
mov
push
das
insl
push
mov
inc
pop
and
dec
inc
outsb
cmp
mov
lret
scas
je
std
jmp
cmp
cli
jbe
jmp
pop
mov
dec
stos
mov
stc
push
pushf
ret
jnp
jmp
jo
jbe
sub
js
pop
sub
pop
push
insb
cmp
adc
aam
stos
dec
bound
stos
jb
ss
dec
add
lods
movsl
lds
push
cmp
mov
imul
jno
nop
dec
ficompl
sahf
sahf
jg
and
in
in
mov
pop
into
mov
sarl
out
push
int3
mov
loop
in
lret
in
sbb
add
push
push
lock
aad
jbe
cwtl
imul
leave
sub
mov
adcb
cmc
fsubrs
in
jmp
ret
xchg
dec
dec
mov
mov
stc
ret
aam
jecxz
jnp
xchg
mov
mov
insb
push
xor
mov
mov
sbb
sti
mov
add
pushf
cmc
mov
push
sub
pop
adc
movsb
xor
mov
cmp
or
pop
adc
lds
xor
call
add
aam
push
lret
movsb
mov
adc
lods
lcall
mov
push
xchg
fldenv
int
mov
xchg
cmp
test
ja
pop
mov
dec
repz
loope
addl
addr16
jmp
in
sahf
push
aam
cltd
jp
std
and
adc
sbb
sbb
outsb
push
adc
mov
pop
leave
xchg
out
inc
and
mov
shlb
cmp
std
out
or
stc
add
dec
fndisi(8087
push
jge
lods
push
movsl
and
sub
jnp
hlt
adc
int
mov
les
daa
test
mov
popa
sbb
sbb
das
xchg
imul
cmc
mov
jecxz
jo
subl
call
popf
outsb
lds
cmp
mov
cmpsb
push
cmp
lret
jmp
jl
out
mov
mov
stc
push
push
stc
xchg
cmp
ret
dec
xlat
inc
orl
clc
pop
insl
sub
mull
lock
mov
ret
cmpsb
fcoms
test
pusha
pop
or
push
out
mov
push
popw
or
jns
jae
pop
adc
pop
das
sbb
cltd
fidivrl
sti
add
xchg
les
jecxz
cmp
nop
cmp
xchg
das
out
dec
mov
insb
fwait
imul
push
add
fwait
add
lret
ret
std
mov
lods
enter
mov
jno
fisttps
out
jp
inc
inc
out
stos
icebp
mov
push
in
fadds
xchg
outsl
aad
sub
ds
aaa
or
xor
aaa
or
push
mov
inc
xchg
jns
int3
pop
test
push
js
faddl
mov
test
xor
insb
cwtl
xor
dec
test
scas
pop
gs
mov
rol
fldenv
jecxz
adc
cli
and
aad
mov
dec
movsb
cmpsb
xor
pop
push
call
mov
jmp
aas
push
lcall
jl
inc
mov
push
jnp
sub
test
xchg
mov
inc
repz
dec
and
adc
inc
pop
dec
xchg
gs
jl
inc
out
pop
push
or
shl
in
xor
lcall
adc
sub
mov
mov
aaa
cmpsl
decb
and
adc
mov
pop
xor
mov
mov
scas
jmp
mov
ja
mov
popf
push
addb
pop
in
sbb
inc
fsubs
jmp
movsl
outsb
mov
arpl
dec
mov
inc
les
xchg
inc
repz
push
fwait
adc
or
repz
xor
shll
jae
les
je
sbb
negb
mov
xchg
push
sbb
jb
sub
fdiv
dec
jecxz
and
push
in
mov
jle
mov
aas
xor
mov
cmp
mov
cmpsl
mov
in
inc
add
cmpsb
and
add
mov
adc
add
mov
movsb
mov
jbe
push
mov
loope
fst
mov
add
and
jae
or
rorb
sbb
pop
dec
bound
fsts
imul
add
push
cmpsl
push
enter
lcall
mov
shll
adc
fsub
cmp
mov
stc
sbb
loope
mov
scas
sub
loope
popa
xorb
or
icebp
call
mov
stc
xor
dec
mov
int
mov
lret
sahf
std
hlt
mov
gs
or
push
imul
fldt
stos
jbe
cld
push
xlat
sbb
clc
movsb
push
ja
jle
std
mov
xlat
mov
mov
and
movsl
mov
sbb
mov
push
das
mov
imul
jecxz
rorl
pop
inc
inc
mov
adc
mov
out
into
sub
leave
jmp
jmp
dec
xor
repz
hlt
sti
das
xchg
popf
cli
mov
pop
and
xchg
cmp
fistl
dec
pop
sub
inc
lds
insl
popa
loop
lds
cmp
mov
fwait
les
inc
ret
mov
hlt
jb
shlb
dec
nop
xor
pop
adc
lods
push
xor
in
and
sub
rcrl
xchg
or
push
aam
fwait
mov
or
in
pusha
dec
out
inc
out
dec
lahf
mov
lea
out
rcrb
jbe
call
jl
orb
pop
negl
pop
jo
cmp
jge
jb
inc
arpl
into
push
cld
dec
mov
jae
pop
cmpsb
test
pushf
ljmp
in
xchg
pop
xchg
fimull
in
add
dec
inc
jecxz
push
jp
xorl
insl
shlb
xchg
jne
sub
repnz
lret
lcall
out
sbb
loop
add
mov
out
jo
lods
lods
xorb
sbb
ds
pop
in
mov
lods
mov
xor
stos
in
inc
xor
cmpsb
mov
ja
mov
inc
mov
cmp
sbb
adc
jmp
shlb
dec
jmp
in
xchg
lods
xchg
loope
mov
rorb
xchg
pusha
cli
or
pop
scas
jae
jae
sahf
push
inc
adc
mov
fistl
ja
idivb
and
incb
push
repz
popf
push
jmp
sbb
aas
sbb
dec
inc
int
pop
mov
cli
jae
leave
cmp
jmp
or
or
lea
mov
out
dec
lea
push
jge
mov
xchg
mov
jae
pop
iret
imul
loope
jb
cltd
push
or
loop
lods
shl
in
mov
mov
xchg
mov
lods
pop
mov
inc
dec
ja
xor
push
mov
je
cltd
xor
adc
popf
int3
or
call
push
hlt
daa
imul
xchg
lret
or
dec
out
adc
mov
lea
inc
test
repnz
aam
int
push
gs
fidivrs
aam
repz
and
std
in
mov
push
pop
fiaddl
enter
int
sbb
icebp
in
jb
xchg
or
pop
xchg
sub
dec
inc
jl
popf
mov
fstps
cmc
aas
repz
mov
inc
cmp
scas
jnp
pushf
fwait
mov
jb
shlb
adc
pop
xchg
jecxz
dec
js
sbb
inc
repnz
mov
das
js
fnstcw
adc
mov
in
pushf
data16
arpl
and
lcall
cmp
arpl
aad
adc
and
pop
pop
scas
fisubrs
xchg
data16
mov
push
xchg
cmp
add
mov
inc
out
dec
mov
mov
shll
mov
mov
add
iret
adc
push
icebp
xchg
cmp
shrb
xchg
xor
mov
popa
ret
lcall
xor
rcll
icebp
je
mov
cs
sarb
daa
mov
mov
pop
dec
pop
jle
push
cmpsl
testl
adc
iret
in
pop
sahf
xchg
and
xchg
push
cmc
mov
orb
je
pop
push
popf
popl
xchg
lea
rclb
push
push
das
insb
add
xchg
ds
loope
out
in
or
popf
test
push
xor
mov
jbe
das
or
cmp
push
mov
mov
stos
stos
sub
stc
jmp
outsb
sub
sbb
inc
mov
dec
pop
sub
subb
aas
je
jnp
push
push
repz
sahf
pop
test
mov
mov
xchg
jmp
insb
ljmp
sbb
push
jnp
scas
dec
sub
cli
mov
jbe
int
mov
dec
shr
arpl
or
out
mov
and
cs
test
aaa
jg
pop
iret
icebp
pop
in
mov
ret
fxch
test
sub
or
cmp
sub
sarl
pop
pop
imul
cmpsl
jecxz
jnp
or
stos
mov
nop
push
mov
mov
loop
and
pop
scas
sti
mov
call
sbb
cmp
out
ss
movsl
lcall
movsl
pop
sbb
and
lods
aam
out
test
cld
adc
or
into
mov
xchg
insb
mov
pop
sarl
lret
sbb
repz
mov
enter
jb
fnsave
fcom
popf
insb
dec
sbb
or
cmp
mov
push
es
addr16
call
jmp
push
popa
std
xchg
mov
adc
sbb
inc
inc
push
lods
lret
test
insb
cld
or
test
cwtl
push
xchg
jbe
pop
xchg
lahf
or
in
xlat
inc
lods
mov
dec
mov
or
adc
lret
fistps
lcall
pop
and
inc
cld
mov
add
adc
clc
fs
pop
dec
faddl
sbbb
fstps
adc
dec
pop
or
push
mov
jb
add
lods
or
lock
shrl
push
andl
ja
and
jmp
push
pop
lcall
xchg
in
xchg
rclb
aam
xor
dec
mov
and
out
add
jb
dec
jnp
jg
dec
insl
push
xor
pop
fsubs
insb
repnz
xor
lcall
push
stc
fcompl
add
insl
repnz
sbb
push
cmpsl
lds
sbb
pop
xchg
jns
pusha
mov
or
mov
dec
or
imul
je
sub
ds
cmp
jecxz
and
cmp
out
lods
push
add
subl
in
jo
shll
nop
push
mov
sbb
push
jl
adc
jg
cmp
subb
mov
jne
lret
and
les
mov
adc
bound
je
dec
adc
lret
lea
mov
add
xchg
or
and
clc
sbb
push
clc
fwait
push
lock
arpl
xchg
push
outsb
or
sbb
in
pusha
mov
xor
sbb
imul
sahf
xor
dec
shlb
stc
popf
mov
out
inc
es
xchg
jecxz
cltd
rorl
filds
jno
add
adc
sbb
sti
pop
or
pop
xor
dec
repz
sti
cmp
push
lds
mov
xor
lock
mov
mov
mov
jo
xchg
ficoms
jmp
shll
jmp
push
insb
adc
out
sti
test
mov
cld
mov
das
push
mov
mov
or
test
mov
test
push
or
orb
cmp
adc
inc
cwtl
sbb
sti
mov
sub
inc
out
popa
mov
stc
mov
cmp
push
xchg
nop
jne
les
jg
mov
cmp
sub
stos
shrb
mov
mov
das
test
jae
loope
loop
jne
mov
mov
mov
jecxz
das
lods
mov
pop
xchg
mov
aad
fstpt
pop
pop
movsb
rcl
jg
mov
add
faddp
and
adc
mov
int
shrl
push
adc
push
out
das
lds
sahf
mov
cli
jno
hlt
aas
push
lret
push
js
mov
cli
jbe
jne
outsb
rcll
mov
sbb
xchg
dec
out
cwtl
and
pop
arpl
pop
pop
je
sub
aaa
cmp
push
mov
mov
mov
jge
cmc
jbe
xchg
jnp
gs
adc
xchg
movsb
into
shrb
dec
push
lea
pop
shlb
lods
out
sub
and
add
adc
xlat
mov
inc
pushf
jnp
call
push
sbb
and
pop
mov
fists
cmp
xchg
xchg
jge
daa
xchg
movsb
xchg
sub
shlb
mov
jge
mov
clc
test
mov
mov
popf
or
mov
sbb
decb
fcoml
mov
incl
mov
leave
adc
and
sub
and
mov
in
loop
jnp
pop
mov
or
adcl
adc
fwait
shll
and
js
repnz
xchg
jno
sub
mov
ljmp
in
add
mov
pop
jle
arpl
or
rcrb
or
lock
std
ficomps
push
idivb
sub
int3
roll
or
xchg
dec
pop
xchg
call
test
inc
mov
mov
xor
sbb
or
sub
lods
test
mov
lahf
daa
lock
mov
lods
out
mov
dec
cltd
dec
icebp
int3
repz
cmpsl
scas
outsb
rcll
out
ss
or
pop
pop
sub
lret
mov
and
out
push
mov
or
pop
shlb
mov
in
xchg
xchg
pop
push
xor
push
add
adcb
stc
mov
pop
adc
out
sti
nop
adc
cld
jo
std
inc
sub
stc
pop
clc
sarb
push
adc
fistps
fdivrs
mov
lds
cmpb
push
cli
jg
fnstcw
mov
pushf
jo
rolb
lcall
cmc
mov
mov
lcall
ljmp
fistps
pop
and
and
push
enter
inc
cmp
jle
jne
cmpsb
mov
daa
leave
ret
pushf
dec
sbb
adc
mov
jg
push
jmp
sub
mov
movsl
cmp
sbbb
stc
mov
clc
imul
pop
xor
loopne
scas
dec
xchg
mov
adc
arpl
mov
call
shll
imul
jg
push
mov
test
loop
stos
pop
sbb
cmp
dec
movsl
xchg
ja
cmpb
mov
lods
push
sahf
push
int3
cmpsb
lret
repnz
jl
je
xchg
cltd
pop
insb
outsb
sub
testb
adc
jnp
fimuls
hlt
in
inc
pop
out
xchg
ljmp
cld
push
push
cli
xor
js
dec
pop
lods
and
pusha
test
cmp
gs
test
into
sbb
sbb
sti
xorb
xchg
mov
xor
cmpb
inc
sub
adc
dec
nop
out
mov
add
lea
push
mov
pop
cmpsb
inc
pushf
les
mov
xchg
adc
fldt
pop
inc
imul
xlat
mov
jae
sbb
js
stc
cmpsl
and
mov
movsb
push
inc
addr16
mov
loop
adcl
jmp
sbb
cmp
andl
outsb
sbb
loopne
aad
push
sbb
sti
or
shlb
push
mov
notb
mov
mov
mov
dec
repnz
leave
mov
stc
aas
rcrl
in
dec
xor
repnz
fdivrl
scas
ljmp
lods
sub
sub
mov
push
push
mov
sub
sarl
bound
or
arpl
enter
add
scas
cmpsl
cmc
mulb
xchg
jecxz
pop
in
push
and
fwait
call
aad
mov
or
cmp
std
mov
sbb
jecxz
xchg
jmp
clc
mov
scas
xchg
dec
dec
rcr
out
mov
mov
cmp
sub
jle
addr16
jns
inc
pop
mov
aam
leave
std
pop
incl
enter
rolb
jmp
sub
pop
lret
cltd
iret
push
scas
test
iret
lret
pushf
lret
cs
arpl
xor
jnp,pt
mov
cmpsl
stos
pop
dec
cmp
sbb
push
sub
scas
dec
and
mov
jbe
jge
or
xor
loop
imul
sub
xchg
push
call
jl
fsubl
lcall
or
cli
hlt
or
pop
sahf
ret
xor
sub
xchg
jnp
xchg
cltd
pop
movsb
ret
leave
pop
ds
lret
cmp
sub
std
sti
xor
std
xorl
hlt
push
add
loop
mov
dec
xchg
sbb
push
push
stos
xchg
inc
xor
or
pop
push
aam
shlb
gs
lcall
or
dec
adcb
out
in
push
sub
pop
sti
adc
xor
pop
into
jmp
icebp
jno
dec
pop
pop
jbe
pop
mov
aas
push
decb
in
cwtl
and
out
je
push
pop
mov
sbb
dec
jno
cmp
in
movsl
adc
pop
jnp
cltd
mov
outsl
aad
cli
push
test
mov
mov
sub
imul
push
inc
sbb
bound
push
mov
cmp
inc
ret
mov
push
mov
into
shll
jmp
inc
sti
fdivrl
push
sarl
in
mulb
stos
jp
scas
jecxz
dec
xchg
repz
ja
pop
cmp
sarb
dec
sbb
jno
out
lock
mov
ds
dec
sub
mov
inc
mov
andl
or
cli
cmp
cwtl
ja
push
jae
popf
and
push
and
jb
sti
aad
lret
and
xor
sti
data16
pop
inc
mul
ret
data16
xor
mov
popa
lds
jb
stos
dec
push
xchg
pop
jg
dec
imul
lret
mov
nop
mov
fwait
add
icebp
push
mov
xorb
cld
pop
pusha
popl
cmpsl
int
scas
popa
ja
dec
movb
sbb
inc
div
fcoms
fnstenv
inc
sub
enter
and
lret
xor
mov
mov
xlat
fmull
xor
flds
sbbl
pop
cli
mov
xor
in
mov
add
movsb
cld
cltd
je
idivb
xlat
jp
pop
test
push
es
mov
and
das
fisubrl
sbb
adc
sub
mov
inc
insl
jae
scas
sbb
ficompl
sub
stc
jmp
ljmp
lcall
fimuls
test
mov
fisttpll
jp
jge
and
adcl
negl
leave
out
adc
scas
cmp
popf
ss
push
ljmp
arpl
sbb
adc
jp
push
outsl
add
in
rcrl
cltd
jge
mov
test
jp
aad
popl
cli
fildll
dec
push
adc
lods
outsl
pop
test
sbb
jmp
pop
aaa
add
push
call
fimuls
jl
or
enter
lret
shll
inc
rorb
outsl
sub
add
leave
jae
sbb
xchg
mov
xor
sub
aad
jecxz
scas
and
jno
les
stos
jae
lods
lahf
mov
pop
hlt
push
mov
adc
sti
mov
mov
ss
mov
mov
mov
dec
push
clc
pop
pop
adc
ljmp
mov
or
adc
add
jne
xchg
sbb
mov
push
fistpll
sti
push
push
test
cmpsl
xor
mov
insb
adc
repnz
fsub
jl
and
stos
notl
iret
fcoml
cld
dec
or
lret
movsl
xchg
cmpb
add
ret
jmp
lds
xchg
sbb
subl
mov
add
adc
and
lods
sbb
hlt
push
fmull
jle
leave
lcall
xchg
mov
jg
mov
lods
lcall
fs
dec
stos
inc
lret
fnstsw
cmc
inc
dec
xchg
lock
mov
aad
jge,pn
xor
stos
cmp
or
jns
push
in
inc
cwtl
or
mov
cmp
test
xchg
adc
inc
les
add
cmp
and
mov
jle
mov
loope
pop
cwtl
mov
mov
fs
cli
jno,pn
sub
sbb
loop
jmp
push
sahf
test
rcrb
fmul
sub
push
jne
loopne
mov
ja
fdivrp
sbb
ret
adc
cli
adc
add
sti
mov
xor
push
sub
movsb
xchg
sub
das
mov
repz
popa
cld
aas
enter
xor
sbb
repz
leave
test
out
fldt
out
cmp
dec
cwtl
mov
inc
pusha
xchg
jmp
adc
add
xchg
sahf
sahf
push
loope
cmp
push
pop
repz
out
insb
jecxz
in
cmc
inc
sbb
push
pop
xchg
jne
stc
imul
lret
pushf
jbe
push
push
mov
xlat
fsubrs
mov
push
movsl
decl
adc
push
movsb
xor
sub
adc
xchg
test
je
fadds
mov
fwait
jecxz
jmp
les
and
push
into
sub
xchg
inc
adc
cmp
inc
xchg
sub
mov
pop
mov
cmpsb
in
mov
leave
clc
je
jo
fisubs
jno
jge
cli
in
shl
loope
das
jl
movsb
aad
sbb
dec
push
fwait
data16
outsb
jb
jle
leave
sub
frstor
mov
roll
call
scas
jle
jns
jne
mov
std
push
aam
sub
fisubs
xchg
std
sub
xor
fimull
mov
inc
add
rcll
and
lds
mov
or
mov
lret
stos
xlat
jnp
mov
std
pop
adc
pop
decl
fnstcw
and
mov
lock
push
dec
add
jl
lcall
mov
stos
mov
push
gs
testb
ficoml
mov
pop
sub
cmp
popa
sub
cmpxchg
mov
xchg
mov
add
xchg
sub
jge
lock
sbb
mov
xor
ficomps
jb
cmp
sbb
cmp
aas
and
xchg
cmpl
or
not
inc
cmp
addb
cmp
std
mov
lcall
cltd
dec
and
sbb
scas
ret
xlat
sti
test
icebp
add
cwtl
mov
push
push
mov
imul
cmc
push
sub
dec
aaa
add
sbb
loop
jno
aaa
out
mov
int
sbb
mov
add
shlb
jmp
sbb
inc
movsb
sbb
loop
icebp
xor
mov
sub
repz
testb
mov
mov
or
out
dec
jecxz
xchg
adc
sub
dec
pop
xchg
divl
bound
test
adc
jl
out
mov
and
sub
pushfw
mov
dec
hlt
aas
roll
andb
and
adc
lret
and
dec
jae
adc
push
js
mov
bound
mov
inc
push
and
dec
ret
cltd
les
sub
cmp
addr16
or
out
mov
pop
jl
ds
push
and
jl
fdivl
lods
inc
jo
out
aam
push
test
rcrl
rorb
inc
mov
enter
sub
xchg
out
mov
mov
mov
inc
xchg
inc
pusha
xor
inc
jl
xchg
push
pop
push
inc
or
inc
test
clc
xchg
es
lods
inc
fistpl
cmp
in
stos
repz
pop
jge
dec
dec
imul
insl
mov
jmp
pusha
cmp
or
inc
pop
lcall
sarl
mov
clc
mov
rcll
les
xchg
les
in
rcll
push
je
fucomip
and
out
sub
jns
push
sub
hlt
test
mov
sti
test
add
adc
xchg
cmpl
push
int3
je
mov
xchg
mov
test
out
and
in
mov
dec
add
pusha
in
xor
pop
mov
sub
popa
js
mov
movl
in
setp
sbb
pop
je,pt
scas
cmc
in
cmp
stos
inc
and
add
sub
addb
rolb
mov
sbb
pop
scas
sub
and
int
popa
fisubrs
jbe
sub
push
sub
ss
repnz
rolb
mov
lea
and
mov
xchg
jo
pusha
pushf
dec
lcall
das
adc
mov
push
sbb
cmp
out
sub
jge
and
imul
add
mov
popa
mov
test
shlb
je
repz
pop
lods
call
icebp
mov
cmp
in
movsl
clc
outsl
xchg
test
mov
out
xchg
lahf
nop
test
out
adc
mov
xor
mov
es
adcb
xlat
inc
sbb
pop
jnp
pop
push
and
mov
xor
jne
and
or
testb
lret
dec
jns
sub
out
pop
push
cltd
push
mov
inc
repnz
sbb
adc
scas
jecxz
push
lods
lret
jge
loope
insb
cmp
movsb
scas
cmp
int3
mov
cmpb
aad
fcomip
das
xchg
iret
mov
insl
sbb
sub
data16
xor
std
mov
scas
fisubrl
xlat
jmp
add
imull
push
and
xchg
sbb
pusha
lahf
out
mov
enter
jp
mov
lock
or
std
out
or
das
aas
stos
xchg
inc
les
mov
mov
mov
xor
sub
cmp
jnp
inc
xchg
test
in
sub
inc
pop
fists
mov
movsb
test
jbe
mov
cltd
cmpb
sbb
push
orb
in
hlt
out
int3
jl
xchg
inc
push
scas
mov
pop
ss
loope
mov
pushfw
pushl
push
std
divl
pop
or
je
push
std
jp
pop
push
loope
ljmp
add
fcmovb
int3
int
or
mov
add
or
aas
xor
jmp
loope
jge
cmp
push
mov
fldenv
inc
jecxz
pop
out
jecxz
aas
nop
enter
jl
mov
cmpsl
das
inc
sbb
stos
cmpl
outsl
lock
jno
pop
pop
xchg
sbb
dec
xchg
sub
pop
mov
jnp
push
mov
movsl
mulb
adc
xor
add
aad
shrb
rcrl
cwtl
hlt
mov
push
jae
add
ljmp
pop
mov
jo
add
or
jge
inc
pop
xor
xchg
or
jecxz
adc
push
dec
and
int
in
out
push
out
cmp
mov
in
repz
pop
sub
cli
imul
adc
xchg
xor
dec
mov
fisubs
lcall
jo
add
inc
out
nop
mov
test
scas
adc
push
fisttps
iret
lret
fisubs
ljmp
shrb
cmp
in
push
sti
je
mov
mov
stos
mov
aad
imul
pusha
mov
rclb
adc
xor
js
roll
fidivrl
out
push
fisttps
stos
call
jl
sub
jbe
xchg
das
jp
outsb
xchg
inc
jb
mov
sbb
sub
push
inc
ljmp
sbb
icebp
dec
das
cs
popf
mov
pop
jecxz
dec
xor
sarl
mov
mov
lret
jmp
orb
fldl2t
push
hlt
dec
sub
test
pop
xchg
mov
lahf
jl
xchg
mov
insb
divb
js
das
cmc
mov
jp
mov
lock
pop
jne
xchg
mov
mov
cmpl
push
shr
push
or
cld
cmp
push
xor
dec
outsb
or
int
repz
arpl
pop
dec
xchg
fdivrs
jg
ljmp
hlt
pop
inc
cltd
rorb
into
add
in
int
or
js
ret
push
dec
mov
inc
icebp
lcall
jmp
aaa
dec
in
add
mov
cwtl
fs
mov
fwait
iret
pop
scas
int
mov
movsl
dec
and
inc
inc
int3
ret
mov
mov
pushf
lods
clc
xchg
out
pop
xor
fiaddl
fsubrl
sbb
and
fistps
sub
ret
pop
outsb
movsb
mov
leave
shlb
xor
cmp
and
pop
inc
mov
inc
mov
mov
cmp
pmulhw
pop
jmp
fstpt
cltd
dec
cld
jecxz
push
adc
inc
xor
aas
cwtl
pop
outsl
and
aas
insb
mov
outsl
jnp
negl
dec
inc
xor
sub
dec
cwtl
mov
jo
mov
mov
fisubrl
sbb
push
pushf
ja
rcll
adc
lahf
xor
aas
int
mov
sbb
lret
ja
cld
inc
mov
xor
gs
ds
adc
xchg
cmpsb
in
cmpsl
loop
sbb
aaa
jb
in
sti
xor
sarb
sub
pop
push
pop
jle
incb
dec
outsb
xchg
mov
pop
repnz
xor
aaa
pop
bound
pop
jo
and
add
ljmp
movsb
cmp
jne
imul
mov
fnstenv
sarb
pop
cmpsb
mov
test
mov
pop
mov
sbb
pop
movb
xchg
rcrl
push
js
xor
daa
lcall
stos
fwait
test
mov
mov
sub
popf
cmp
test
data16
lahf
mov
mov
mov
in
mov
inc
pop
pop
imul
xlat
cmp
jnp
call
imul
mov
sub
testb
clc
fwait
popa
mov
inc
pop
mov
or
je
shl
cltd
dec
std
repnz
out
xor
movsl
xchg
xor
outsb
sbb
push
cltd
or
sbb
cwtl
xor
mov
roll
adc
jns
push
mov
mov
pop
cs
push
inc
mov
loopne
imul
pop
das
inc
add
call
out
lret
rclb
xor
dec
adc
push
lret
lahf
mov
pop
sbb
iret
xchg
sahf
outsl
repz
ret
out
stc
or
andl
rol
push
adc
ret
inc
mov
lods
mov
pop
test
or
cmp
insl
fsubl
cld
sbb
andb
cmp
outsb
adc
xchg
and
data16
cmc
sbb
idiv
orb
outsl
bound
cwtl
mov
mov
push
testl
mov
pusha
repz
rol
cs
ret
scas
sbb
repnz
adc
sbb
jg
jecxz
push
adc
jge
mov
push
inc
pop
movsb
stos
ss
mov
xchg
xor
cld
repnz
hlt
arpl
scas
jmp
orb
loope
out
add
imull
imul
push
fsts
pop
dec
pop
in
pop
stos
call
push
hlt
sub
jo
aaa
xor
aaa
repnz
dec
or
add
iret
jo
lcall
jb
adc
and
mov
out
outsl
fsub
push
pop
movsl
rolb
xor
sbb
call
xor
push
jne
and
and
adc
outsl
imul
xor
adc
mov
jge
sbb
int3
scas
dec
jo
cli
xor
aaa
dec
jge
int3
add
pop
mov
cmpsl
lret
or
pop
jne
jg
data16
pop
push
movsl
jl
sbb
call
fadd
popf
pop
and
push
sbb
cmpsl
std
or
mov
sub
clc
inc
iret
add
xchg
stos
sbb
imul
je
mov
movsl
push
pop
cmp
jb
popf
inc
fs
nop
dec
push
psllw
popf
mov
push
fnsave
mov
cwtl
daa
cmp
je
sbb
dec
dec
push
inc
out
jge
sub
jne
jmp
mov
mov
mov
int3
mov
popa
daa
movsl
aaa
fdivrl
enter
or
push
pop
ljmp
mov
int
jge
add
mov
cmp
add
subl
cwtl
pop
das
ja
xor
push
iret
push
mov
add
fidivs
and
sub
pop
jns
scas
arpl
das
pop
in
cmp
outsl
jb
loope
lret
das
inc
mov
clc
cmpsb
cmpsl
stos
sarb
in
sub
mov
pushf
pop
dec
in
daa
andb
cli
push
or
jg
data16
sub
dec
divl
fnstcw
mov
out
jb
movsl
push
rolb
jle
pop
pop
popa
mov
dec
or
in
jp
lcall
xchg
inc
fcmovnbe
aas
jge
mov
idivb
test
adc
inc
jae
int3
mov
dec
popa
shlb
push
pop
xchg
nop
mov
cmp
dec
std
stos
dec
das
fldt
push
aaa
test
lcall
xor
sub
pop
out
rcl
pop
sahf
dec
and
mov
cmp
adc
outsb
add
test
mov
or
xor
xchg
ret
push
ja
sarb
sub
mov
mov
dec
adc
aam
or
pop
dec
and
jge
scas
shrb
shll
pop
sub
data16
cwtl
xchg
add
lret
inc
ds
mov
shlb
loopne
fs
inc
xchg
pop
lds
and
insl
add
mov
mov
or
in
sbb
jge
shlb
das
adc
nop
test
jne
and
rolb
pop
insb
bound
xor
xchg
je
or
pop
shll
lea
sub
add
dec
mov
mov
and
jp
jle
out
out
sti
fstpt
icebp
mov
addr16
call
sarb
jne
xchg
mov
mov
cmpsl
stc
aad
aaa
in
fdivrs
xchg
mov
int
and
lret
out
add
or
push
test
lret
xorl
or
jg
bound
xor
push
or
adc
mov
imul
ljmp
sbb
dec
inc
arpl
insb
xchg
hlt
cs
aas
ljmp
pop
repnz
popf
mov
adc
push
cmc
std
mov
fsubp
mov
fwait
in
mov
push
xchg
mov
data16
adc
out
jl
sbb
aad
inc
and
imul
addr16
dec
xor
filds
outsl
mov
or
aaa
incl
mov
add
mov
pop
jae
sub
insl
jge
dec
mov
mov
dec
insb
stos
repz
aam
sub
push
mov
sbb
pop
cmpsb
out
push
sbb
dec
lahf
fistpl
lea
pop
lcall
sbbb
jno
test
enter
dec
shlb
adc
pop
jecxz
dec
jmp
jl
pop
xchg
in
ja
sub
call
lods
cmp
xor
imul
enter
movsb
icebp
lock
ret
popf
cmp
jbe
and
jge
movsl
negl
outsl
fprem1
enter
loopne
sarl
js
pop
xchg
mov
loope
out
jno
push
and
out
std
shll
sub
cmpsl
push
enter
xchg
or
fbstp
push
jo
adc
inc
mov
jnp
bound
repz
popf
push
ja
cmp
cli
push
mov
dec
xchg
sbb
jmp
mov
call
sub
jp
xchg
inc
pop
aas
sbb
inc
faddl
in
add
push
into
stos
je
cltd
sarl
add
rol
xorl
push
fldl2t
fndisi(8087
les
mov
in
cmpsl
fstpl
and
and
es
mov
jbe
addr16
shrb
add
shl
ja
and
clc
or
add
out
outsw
ret
dec
add
jbe
mov
outsb
dec
push
rcll
jmp
mov
xchg
jg
in
call
dec
push
repnz
push
inc
jne
xchg
jns
push
push
mov
mov
out
sub
hlt
jae
loopne
and
cltd
inc
test
aad
iret
xchg
add
adc
repz
pop
cld
mov
cmp
sbb
dec
or
xorb
icebp
xchg
outsb
leave
mov
cld
lods
rcrl
ss
jb
mov
adc
into
stc
xchg
cmp
out
fsubl
lock
out
cwtl
mov
xchg
std
ds
mov
push
push
jecxz
int3
or
or
pushf
js
pop
xor
jp
in
add
cmc
add
in
xchg
add
aaa
lock
and
bound
add
or
xor
adc
cmp
in
dec
and
scas
mov
sub
xchg
jnp
addr16
inc
popa
mov
push
rcrl
lds
mov
repnz
fdivl
aad
leave
sub
pop
in
das
inc
js
fldt
mov
clc
mov
mov
sbb
add
push
push
in
notl
int3
mov
lahf
or
adc
or
cmp
jns
sub
std
outsb
mov
mov
test
neg
test
mov
hlt
inc
mov
push
or
dec
loop
xchg
jp
jmp
or
mov
rcrb
mov
mov
xor
sbb
lea
jmp
jae
xlat
and
ja
xchg
jae
push
xlat
jmp
dec
addr16
sahf
xor
cs
jne
cltd
or
arpl
fcomp
add
bound
test
ror
mov
xlat
call
in
fcmove
push
xchg
add
je
lods
bound
xor
add
loop
jne
jae
jne
sahf
cmp
add
pop
push
push
jo
add
lcall
mov
mov
clc
lret
loope
sahf
into
loope
fs
inc
les
fisubl
jecxz
inc
lret
xor
jp
and
adc
scas
mov
fs
xlat
aad
cwtl
inc
cli
fidivrs
dec
faddl
addb
flds
leave
adc
cmp
sbb
inc
sub
nop
sub
mov
push
rcl
push
mov
inc
sub
or
ss
mov
es
mov
sbb
fistpl
fsubrs
fsubrs
fsubrs
loopne
gs
jg
and
icebp
dec
add
dec
aad
cmp
ljmp
mov
fadd
adc
pop
jae
push
rol
push
push
je
dec
sahf
adc
mov
mov
jae
ret
mov
dec
cmpsl
jne
mov
mov
test
pop
je
sub
arpl
jno
movswl
cmp
addr16
into
mov
lahf
inc
and
xchg
roll
popa
jge
lcall
cmc
pop
sbb
push
mov
push
jg
cltd
mov
push
imul
enter
cmpsl
pusha
pop
pop
fwait
arpl
push
js
call
sub
repnz
xchg
movswl
jnp
hlt
mov
das
leave
int
lret
sub
lods
inc
lea
fsubp
mov
rorl
shrb
mov
or
lcall
fwait
testb
negb
add
scas
adc
int3
xor
xor
inc
shrl
xchg
dec
xchg
fwait
outsl
leave
pop
sub
or
stos
insl
aas
lea
sbb
lcall
cmp
push
scas
pop
ret
xlat
aam
dec
push
stc
aas
cmp
stos
out
dec
shlb
jns
adc
jno
push
in
xchg
adc
leavew
pop
pop
shr
push
mov
push
aad
add
enter
cmp
add
sbb
sub
jbe
jge
jle
pop
jbe
pushf
mov
bound
mov
cltd
pop
and
mov
push
jbe
jo
xchg
jno
jno
sbb
stos
and
mov
lods
xchg
int3
ret
popf
mov
mov
hlt
dec
call
push
push
sub
insb
add
lea
jb
inc
push
push
cmp
test
pusha
or
inc
outsl
mov
dec
out
stos
pop
xor
xor
lcall
addr16
pop
sbb
cmp
rcrb
fsubr
leave
ror
cli
sbb
cmp
sahf
shll
arpl
push
hlt
pop
fmuls
and
subb
pushf
cmova
cmp
pop
ss
sbb
xchg
jl
sub
and
scas
mov
jg
lret
outsl
pop
ja
arpl
outsl
in
adc
and
push
mov
rcrl
sbbb
int
push
or
pop
adcb
daa
lock
xor
push
sbb
cld
int
lea
icebp
cmp
xchg
call
adc
cmc
xor
mov
outsl
sub
xor
push
cmpsl
dec
scas
sub
pop
orb
or
jo
or
add
sub
lcall
pop
imul
ret
xchg
movsb
jecxz
or
cmp
lods
mov
push
fcoml
add
cmpsb
ret
dec
xchg
inc
scas
rol
xchg
ja
les
push
or
sbb
fldl2t
inc
and
arpl
xor
cwtl
rcrl
jmp
cmp
mov
push
cmp
ds
clc
ja
rolb
andb
outsb
mov
mov
pop
sbb
sbb
dec
add
orb
fwait
cmc
pop
pop
cmpsb
repnz
dec
mov
cmpsb
stos
cmp
inc
sub
ja
mov
dec
mov
fisubrl
mov
or
cmp
insl
mov
insl
and
xchg
sbbl
push
insb
loope
xchg
jo
lods
shll
scas
jnp
mov
das
mov
pop
daa
dec
dec
jns
out
ficoml
jecxz
fistl
int3
orb
push
ljmp
xchg
jns
xchg
xchg
scas
pop
mov
inc
xor
push
popa
and
popa
leave
jg
and
mov
adc
xor
rcll
mov
ja
xor
mov
mov
ficoml
fisttpll
xor
in
mov
dec
sahf
adc
push
stos
push
sub
push
pop
lock
or
mov
inc
mov
lock
mov
scas
ss
aad
push
push
jno
pop
loope
inc
jae
out
jmp
int
ss
and
dec
iret
xchg
xor
jecxz
bound
leave
jle
lret
add
in
cmp
lods
shlb
in
popf
push
cmpsl
gs
dec
mov
test
fmul
mov
lcall
cmp
xchg
cwtl
pop
xchg
xchg
xchg
stc
leave
mov
pop
sub
bound
pop
adc
out
insb
mov
inc
mov
mov
pop
fldln2
stos
xlat
inc
xchg
scas
pop
js
das
lock
mov
cs
mov
xor
inc
aad
sub
cmp
sbb
out
adc
imul
int
cmpsb
sbb
bound
and
xlat
push
test
cwtl
jmp
add
in
clc
lret
mov
jae
ficomps
pop
insb
add
push
mov
mov
pushf
cmp
dec
pop
mov
loope
and
mov
mov
in
cmpl
loop
jo
xor
mov
and
xor
pop
bound
leave
mov
loopne
andl
lcall
push
divl
sbb
push
push
daa
cld
idivl
in
mov
sahf
mov
pop
inc
inc
push
adc
adc
imul
xor
xor
aad
imul
mov
cmp
ja
push
fcom
sbbb
pop
lea
inc
push
xor
and
lahf
pop
outsb
dec
jle
movsl
sbb
adc
loope
iretw
mov
aas
push
fidivrl
loope
test
lret
and
or
ja
or
movsb
popf
push
loopne
sbb
adc
mov
pop
mov
cmpb
lcall
cwtl
lds
gs
pop
in
mov
jmp
add
in
xchg
pop
mov
mov
mov
and
call
mov
aad
xor
fs
fdivs
xchg
leave
loopne
mov
inc
or
mov
es
in
nop
sub
and
mov
xor
aas
lret
pop
jg
inc
jecxz
clc
jb
jne
inc
dec
sub
cld
aaa
mov
out
loope
lcall
mov
and
push
mov
outsb
ss
inc
jp
xchg
das
push
sub
xchg
dec
mov
iret
adc
jg
adc
mov
jge
ret
int3
nop
cmpsb
fwait
ret
adc
add
std
mov
xchg
pop
adc
mov
pop
cmc
add
stos
jmp
fstps
pop
push
cmp
mov
xor
cmp
sti
inc
aaa
xchg
and
ret
sbb
pop
and
mov
daa
jnp
out
jne
popf
sub
xchg
pop
sahf
push
stc
sbb
lods
mov
notb
fildll
std
jl
push
pop
jge
cmpsl
into
sahf
mov
lret
mov
push
mov
les
lds
push
add
jecxz
xchg
data16
dec
dec
mov
pusha
cmp
xchg
fcoml
dec
jle
pop
mov
cmpl
mov
sub
jbe
or
scas
loope
and
mov
mov
cs
mov
cmp
mov
jmp
bound
pushf
mov
and
bnd
nop
test
xor
incb
fildl
push
adc
cmp
sbb
not
mov
mov
dec
jbe
add
mov
xchg
or
jmp
sub
sub
mov
das
imul
ret
cwtl
lods
jp
cmpsl
fdivrl
scas
xor
loop
jno
or
mov
hlt
shlb
add
sbb
inc
mov
test
scas
or
jbe
jb
test
mov
rcll
ror
pop
mov
jg
pop
decl
sbb
imull
sub
fidivrs
mov
mov
push
fisubs
lods
or
out
and
cmp
pop
push
out
add
aam
xorb
bound
insb
add
xchg
out
adc
aad
mov
lret
jmp
fld
into
push
and
mov
ds
movsl
or
jg
pop
outsb
add
mov
mov
inc
pop
lahf
fwait
and
adc
sub
jp
out
gs
inc
popa
xchg
push
out
loopne
out
fadds
subb
and
scas
shrb
int3
icebp
or
test
mov
cld
cmp
seto
jne
mov
inc
sbb
push
cmp
xchg
lcall
lahf
mov
and
lock
xchg
lds
std
test
xchg
test
jg
adc
jmp
jns
movsb
mov
and
push
xor
fs
enter
iret
aas
std
mov
push
mov
mov
scas
call
add
ljmp
ljmp
mov
enter
loop
sbb
push
push
pop
clc
push
outsl
pop
pop
int3
movsl
shl
in
enter
popa
out
xlat
adc
jne
and
inc
mov
cmc
xlat
jbe
jmp
sahf
aas
fwait
cmpsb
cmp
idivb
ss
push
out
pop
push
notl
or
pop
inc
out
imul
sbb
scas
xor
jnp
push
add
andb
arpl
and
nop
ja
mov
ja
fcmove
pop
push
nop
mov
cltd
sub
jp
mov
movsl
in
jmp
or
andb
dec
cmp
cmp
mov
sti
xchg
lds
xchg
call
out
repz
sub
inc
adc
cmp
test
dec
inc
pop
sub
lcall
sub
cld
cwtl
cmpsb
aad
ljmp
and
pop
sbb
das
pop
jne
mov
push
dec
int
loope
fidivs
jae
xchg
mov
inc
out
ds
mov
sub
cli
and
or
adc
mov
jne
aam
call
cltd
sub
sub
imul
sbb
fdiv
cmp
jne
mov
cmp
or
imul
movsl
jecxz
mov
leave
fmuls
rcrl
jae
scas
lock
sarl
pop
cmp
les
loop
mov
mov
xor
cli
dec
iret
ja
dec
jae
sbb
arpl
js
je
lret
aas
adc
in
inc
pusha
or
xchg
stc
xor
pop
sub
jl
add
xchg
jns
pop
mov
mov
pop
data16
addr16
andl
idivb
dec
push
push
mov
mov
cltd
xor
fldt
add
in
dec
push
cli
push
mov
sub
cwtl
mov
rcl
std
pop
dec
movsb
jle
int3
mov
daa
sbb
rcr
jle
cmpsl
lret
popa
or
add
or
popf
jge
xor
repz
iret
push
pop
inc
fnsave
cmp
lds
enter
inc
sarb
and
imul
stos
mov
pushf
leave
mov
shrb
lods
dec
cs
push
or
mov
push
pop
xchg
sub
loope
jnp
push
popf
adc
xchg
add
mov
lds
aad
das
xchg
sub
jle
mov
xor
je
je
pop
sbb
adc
push
das
mov
cmpsb
adc
repnz
test
sub
xchg
mov
lds
inc
xor
mov
xchg
hlt
scas
mov
mov
xor
jp
lret
cmp
repz
pop
xchg
rolb
lds
mov
jnp
push
jg
fwait
pop
dec
enter
adcb
mov
jmp
jmp
sub
int3
cmpsl
fwait
or
es
inc
das
arpl
mov
inc
loop
pop
iret
jb
out
mov
out
inc
lods
repz
jmp
sbb
in
push
lds
push
push
cmpsb
sub
mov
cmp
subl
mov
sbb
push
fistps
mov
je
mov
hlt
mov
and
push
pop
sbb
fbld
mov
ret
add
js
and
insb
dec
ja
xorl
and
and
cld
stc
dec
loope
pop
lret
sub
out
mov
popf
xor
xchg
jno
movsb
mov
hlt
andb
cmp
add
scas
xor
das
pop
loop
inc
hlt
and
ret
sub
sbb
in
dec
popl
inc
shrl
loop
mov
shlb
jle
dec
jp
stos
out
inc
adc
in
cmp
pop
out
repnz
adc
fisubrs
rclb
inc
out
push
inc
cmc
shlb
stc
fs
into
xor
push
popf
or
add
shrl
scas
mov
mov
inc
xor
adc
sub
or
sbb
fidivs
lods
jg
xchg
and
jg
mov
add
inc
jmp
fs
fs
cmp
in
or
jecxz
xor
mov
iret
mov
sbb
adc
call
mov
pop
jle
test
lods
movsl
divl
sbb
imulb
jecxz
jns
jge
dec
ds
adc
mov
aad
leave
ja
jb
nop
imul
je
and
imul
adc
xchg
or
cmp
out
xchg
jmp
sbb
mov
arpl
add
jmp
and
lea
inc
sbb
mov
aaa
pop
sub
pop
inc
sbb
daa
sub
mov
pop
ja
jns
jnp
in
push
and
lods
mov
ficoms
fistps
arpl
mov
sbb
add
fs
pop
ret
movsb
or
fsubrp
dec
cmp
loope
shll
lods
shrl
mov
jnp
cmp
lods
pushf
aas
decb
jmp
push
jg
inc
or
mov
lock
movsl
stc
push
push
or
inc
jecxz
outsl
mov
cmp
inc
dec
push
addr16
imul
outsl
xchg
in
jge
xlat
or
pop
insb
pop
pop
jb
aad
push
ljmp
and
scas
push
shl
pushf
dec
xchg
int
imul
pop
mov
lds
mov
xorb
dec
mov
mov
int3
dec
and
es
cld
adc
sbb
int3
addr16
mov
mov
movsb
mov
push
inc
or
je
ud1
push
shlb
je
or
and
xchg
cmpsl
mov
pop
in
imul
shlb
cli
dec
push
lods
xchg
jge
adc
add
out
mov
cmp
sub
mov
dec
mov
enter
mov
mov
inc
jg
lcall
jne
out
ja
push
cli
xchg
xchg
cwtl
or
jg
push
adc
daa
mov
pop
jp
jge
addb
mov
sbb
sahf
std
repz
in
insl
repnz
sti
arpl
sti
ja
cmc
mov
aam
sbb
shrl
and
or
cmp
scas
hlt
int3
insl
mov
nop
add
push
mov
nop
out
cmc
bound
mov
inc
jne
call
sbb
jge
enter
cmpsl
iret
repnz
lahf
cs
pop
xchg
push
add
sbbb
jo
cmp
cmp
pop
nop
jp,pt
jmp
sbb
jge
cmp
fbstp
mov
cs
push
push
jmp
cmp
and
scas
adc
xchg
pop
jbe
pop
data16
ljmp
int3
dec
sub
push
xchg
movsb
dec
mov
fldcw
orps
in
xchg
punpcklwd
imul
std
jg
mov
repz
xchg
or
test
incl
inc
ja
arpl
mov
rorl
inc
or
sbb
iret
scas
mov
and
pop
mov
aas
out
xchg
push
fbld
dec
test
xlat
lcall
pusha
xor
mov
js
es
ftst
bound
aad
gs
jns
fstpl
pop
sbb
mov
aaa
pop
fs
xchg
shlb
jo
pop
push
mov
pushf
sub
lods
jns
int3
or
mov
lret
cli
test
mov
and
mov
cmp
test
in
mov
icebp
or
fwait
test
cltd
jns
mov
xor
inc
adc
and
adc
cli
and
shlb
mov
in
fldenv
dec
loopne
sbb
push
rcll
call
mov
or
leave
in
adcb
xchg
int
mov
push
inc
mov
adc
out
adc
adc
ljmp
fdivp
pusha
into
dec
js
cmp
cld
cmp
das
push
xor
add
mov
or
sub
mov
jnp
in
sub
fsubr
fidivs
push
jno
cwtl
sbb
add
popf
fnstsw
movsb
cmpsl
push
sarb
jo
pop
mov
dec
pop
mov
mov
xlat
daa
inc
mov
push
arpl
insl
mov
cmp
clc
dec
sub
mov
pop
and
fstpt
mov
std
hlt
inc
cs
je
mov
sbb
lock
sub
fucom
out
mov
xor
aam
push
cmpsl
dec
or
push
cs
repnz
movsl
sbb
push
xlat
incl
cmpsl
jnp
cmc
gs
fldt
cltd
jge
lea
imul
mov
loopne
rorb
or
pop
mov
insl
xchg
int
xchg
divb
test
mov
sub
cmpsl
lock
call
sbb
ds
imul
mov
push
repnz
sub
mov
fbstp
mov
dec
sub
mov
insw
inc
out
hlt
fidivs
lret
adc
adc
in
adc
sub
cs
fstl
mov
jle
dec
jnp
jmp
stos
xor
and
mov
mov
arpl
pop
rclb
loopne
inc
call
lret
inc
and
jns
mov
icebp
sub
push
sub
lcall
stos
mov
xchg
adc
mov
jle
mov
ljmp
enter
inc
fildll
cmp
mov
dec
mov
sbb
int
add
and
mov
movsb
pop
fildll
loopne
mov
push
adc
test
jg
mov
shrl
in
sti
cmp
cmp
or
jg
rol
add
or
or
mov
sub
sub
cmp
jno
mov
inc
sbb
mov
js
push
or
mov
mov
xor
xchg
adc
in
jmp
arpl
fildll
ficoms
cli
lret
loop
xchg
or
inc
jne
sbb
inc
rcl
jb
insb
hlt
push
mov
outsl
pop
shlb
sub
jns
sti
jmp
dec
insb
outsb
xlat
cmp
shl
jge
fisubl
sub
sbb
xchg
stos
sub
push
dec
push
cmpb
rcl
mov
sbb
and
jecxz
test
inc
cmpsl
xchg
cmpsb
jecxz
es
adc
sbb
out
fs
sahf
xchg
int3
mov
mov
xchg
out
xchg
cmp
add
or
subb
and
add
mov
ljmp
add
inc
jp
pop
push
cmp
aaa
rcr
cmp
xchg
push
sub
cmp
ficompl
daa
inc
push
pop
in
mulb
inc
mov
test
inc
inc
adc
push
pop
clc
mov
out
pop
in
jp
push
adc
shlb
mov
cs
mov
mov
out
popa
adc
fdiv
xchg
mov
subl
pusha
into
mov
cmp
inc
fucomi
sbb
out
shrb
push
and
scas
rcrb
mov
sbb
inc
int3
pop
scas
outsl
repnz
jl
pop
pushf
cmc
sub
push
std
mov
lret
mov
cmp
sbb
push
cmp
bound
push
add
ljmp
mov
mov
jl
std
test
outsb
xor
xor
mov
jecxz
pop
pusha
repz
call
mov
dec
int
xor
enter
nop
push
xor
fs
push
cmp
inc
sub
sbb
cld
mov
push
pop
inc
lcall
mov
cld
jo
mov
fisttpll
inc
pop
adc
adc
daa
dec
mov
sbbl
cmp
push
inc
push
or
in
sbb
aad
dec
in
add
xchg
cmpb
fcompl
lahf
inc
push
movsb
cwtl
mov
rcr
cltd
cltd
dec
ja
cmpsl
shl
cmc
mov
cmpsl
inc
mov
cmp
mov
jecxz
movsb
mov
pop
dec
sub
dec
imul
pop
es
add
xor
adc
add
popa
lds
mov
stos
scas
andl
xchg
loop
insb
aam
push
mov
ljmp
push
and
jg
arpl
lods
or
inc
orb
out
insb
aam
jp
ja
mov
mov
sub
in
imulb
push
rcl
sbb
mov
xor
cmpl
in
push
int
pop
sub
gs
mov
or
mov
adc
icebp
jle
in
push
sar
lock
adc
jg
mov
lds
and
cmpsb
push
stos
icebp
add
xchg
push
repnz
pop
repz
mov
jb
imul
popf
jno
test
jno
mov
cmp
pop
cwtl
mov
stos
test
in
push
jo
xor
loope
repnz
out
pushf
and
das
lret
add
pushf
test
in
mov
adc
fdivr
sub
push
xchg
sbb
xchg
or
lahf
push
push
mov
loop
repz
jge
add
push
mov
lods
xchg
lea
out
sbb
jge
fcomps
nop
cmpsb
insl
cld
test
repnz
xchg
adc
push
push
lret
cmc
inc
xor
ret
repz
sbb
arpl
xchg
lret
in
sbb
jno,pn
dec
xchg
in
in
stc
sbb
adc
jbe
rcrl
cwtl
pop
cwtl
add
js
mov
xchg
xchg
out
sub
xor
add
outsb
mov
rcll
dec
and
lock
xor
xor
mov
mov
clc
or
fisubrs
dec
shrl
push
test
std
or
or
sbb
lret
repnz
ja
cwtl
jp
dec
testl
inc
mov
push
or
cltd
imul
notb
dec
xchg
ret
cltd
in
xor
sub
lods
out
xor
inc
inc
lock
and
sbb
mov
xchg
aam
or
push
push
mov
jns
icebp
push
inc
xlat
dec
cs
out
addr16
int3
jae
repnz
or
push
dec
add
jno
das
outsl
test
fcomps
fisubl
mov
fwait
push
stos
mov
xchg
das
and
add
icebp
unpckhps
and
mov
jns
movsb
clc
adc
cltd
cmp
mov
mov
lret
pop
lock
cmp
scas
pop
and
out
pop
sbb
xor
mov
sub
sbb
push
arpl
aam
jmp
push
mov
hlt
sbb
sbb
clc
xchg
jmp
jno
adc
test
dec
daa
and
push
in
xchg
xchg
int3
push
arpl
jb
js
cmp
and
enter
mov
and
je
cmp
fcmovu
movntq
out
roll
in
push
lahf
lds
mov
call
bnd
pinsrw
sub
mov
rcrl
adc
gs
out
xor
fisttps
iret
add
and
xchg
addr16
inc
xchg
and
popa
cmovl
rcrl
mov
aaa
or
push
insl
lods
sbbb
popf
or
sub
fisubs
ds
cmp
fwait
aas
icebp
mov
xchg
lret
outsb
in
mov
fisttps
xchg
stos
int
dec
notb
inc
fs
mov
je
mov
push
cmp
das
sbb
or
xor
jge
mov
lret
lret
clc
push
and
xor
xchg
stc
pop
inc
test
mov
ficomps
cmp
icebp
and
xchg
int
je
aad
das
sbb
mov
mov
or
cmc
mov
shll
xchg
das
iret
push
popa
cmc
test
sti
pop
add
sub
mov
inc
sub
adc
jae
idivl
sub
test
cli
xchg
ret
aas
jbe
sbb
and
dec
loop
xchg
ret
into
scas
jmp
sub
mov
add
aas
jnp
arpl
mov
leave
into
push
das
std
sbb
push
rol
dec
push
push
xor
aaa
cmp
das
push
enter
lock
daa
xchg
jne
push
lods
mov
push
subb
or
xor
or
jl
jge
sbb
les
ret
sub
aad
fs
push
inc
cwtl
int
aam
inc
gs
inc
test
mov
pop
arpl
mov
jge
jmp
jl
xchg
inc
jb
divb
mov
push
sub
cltd
sbb
push
sub
outsb
into
fdivp
push
inc
sti
dec
jbe
mov
inc
nop
sti
cmp
out
and
sub
in
jne
sbb
ret
loopne
and
dec
daa
in
sub
xlat
test
lahf
loop
lahf
sbb
daa
mov
mov
xchg
jge
test
idivb
js
push
xchg
pop
mov
enter
push
test
lea
outsb
jne
push
out
or
cld
xchg
bound
aas
add
push
pop
scas
inc
mov
push
mov
fwait
lahf
shlb
add
pop
in
xor
aam
cmpsb
arpl
sbb
mov
es
jp,pt
xchg
sub
jbe
fs
icebp
clc
xor
mov
mov
sbb
mov
pop
sbb
mov
scas
fcompl
icebp
iret
inc
std
dec
idivb
add
and
js
jl
test
adc
fists
mov
fists
sbb
out
add
push
and
add
test
add
xor
popa
push
movl
xchg
jp
aad
xchg
shr
sub
in
pop
es
out
push
add
cli
testl
mov
mov
mov
mulb
enter
jg
add
cmp
push
xor
pop
cmp
addr16
icebp
andl
rclb
stc
loopne
addl
jne
push
es
mov
jo
fs
rcll
cmp
jne
pshufw
insl
movb
mov
xor
jne
pop
fldenv
jne
and
mov
es
iret
pop
lret
jg
outsl
fcoms
cwtl
add
dec
inc
xchg
xor
pop
adc
movsl
sbb
cmp
repnz
push
aas
orl
test
stos
lcall
insb
jl
into
xchg
xchg
aad
xchg
mov
in
ss
or
outsl
aam
ficoms
pop
jno
xlat
push
xchg
cmp
prefetch
or
xchg
cmp
cmp
and
aad
cmpsl
mov
testb
jb
jo
xor
clc
hlt
dec
ljmp
pop
stc
lret
xchg
pop
xchg
cli
int
lcall
pusha
in
mov
jnp
dec
cld
lock
cmpsb
sub
and
push
out
pop
call
fs
lods
pop
xchg
pop
shrb
daa
int3
in
sti
leave
inc
rcrl
add
in
xor
jb
movsb
stos
gs
mov
sbb
int3
xlat
mov
nop
jg
mov
pop
mov
add
xchg
adc
jbe
sbb
ja
aaa
out
lods
push
push
or
xor
inc
dec
js
or
and
adc
cmpsb
adc
inc
fistl
mov
push
push
xor
movsb
arpl
push
dec
and
scas
xchg
cli
ja
add
pop
insb
lret
jno
test
rorb
jl
inc
cli
sub
mov
and
or
out
mov
dec
push
adc
scas
out
push
mov
arpl
in
lea
add
cmp
push
repz
adc
stos
addr16
leave
and
jb
ret
clc
push
popf
ljmp
movsl
scas
jp
mov
dec
outsb
jnp
mov
mov
xor
sub
andl
aaa
dec
or
cs
pop
xchg
push
push
ret
add
cmp
stc
lock
xor
outsl
out
int3
scas
dec
push
or
mov
mov
nopl
adc
sbb
pop
inc
pop
pop
push
arpl
mov
pop
ds
jge
inc
into
loope
or
out
out
clc
fs
xchg
xchg
notl
push
inc
gs
gs
movsb
jecxz
mov
lret
fcmove
jp
subl
shll
aad
fnstcw
push
out
loope
iret
cmp
fisubl
sub
je
mov
shll
and
mov
xor
add
pop
push
xor
adcb
out
imul
hlt
or
ja
cmp
sbb
pusha
push
and
std
in
out
cmp
mov
xor
mov
xchg
xchg
dec
ret
daa
mov
cltd
out
inc
add
lock
jns
pushf
lock
inc
mov
sbb
movsl
jae,pt
xor
or
push
jmp
arpl
fstpl
ds
ja
arpl
mov
es
push
sub
ret
xchg
pop
rorl
jb
pop
cmp
sbb
dec
dec
and
enter
lahf
ljmp
mov
int
sbbl
repz
mov
pop
loop
pop
inc
gs
push
push
sub
les
sti
addb
mov
jb
popl
pushf
xlat
sbb
das
push
hlt
icebp
mov
sub
cmp
mov
cld
popf
inc
cmp
inc
out
cmp
shll
fstpl
or
mov
popf
pop
popf
pop
cmp
mov
je
insl
jnp
inc
push
xor
jle
dec
scas
stc
pop
mov
dec
dec
stc
or
into
lea
stos
rcrl
lret
test
out
popa
andb
dec
dec
inc
add
andb
inc
mov
loope
push
lea
xlat
sub
insl
dec
mov
rorb
dec
lods
dec
sbb
iret
fadd
adc
xor
lods
lods
inc
jno
jecxz
aaa
xor
add
push
xorl
icebp
mov
outsl
lret
fdivrl
pushf
addb
in
jo
push
adc
cmpsb
cmp
pop
in
pop
divb
inc
cmp
mov
mov
jg
jns
fistpl
mov
and
test
xchg
icebp
pop
or
push
insl
sbb
roll
cltd
aad
inc
and
in
push
lret
jne
xor
ja
clc
adc
pop
adc
push
cmp
xlat
mov
mov
call
lods
rorb
adc
ror
mov
cs
jmp
bound
paddb
sub
cli
std
inc
adc
push
movsl
push
ficoml
or
lods
packsswb
inc
ds
rcl
jae
xchg
icebp
xchg
lods
pop
movsl
xor
rcr
mov
fnstsw
jae
jl
xchg
movsb
ljmp
or
es
das
jl
aad
inc
cwtl
xchg
push
cmp
xor
jae
arpl
jb
jle
mov
xchg
pop
arpl
imul
dec
sbb
add
dec
addr16
decb
daa
push
dec
mov
fwait
sahf
dec
and
test
scas
pop
jae
in
data16
push
daa
add
dec
out
dec
repnz
out
fs
rorb
bound
hlt
cli
or
pop
cli
dec
cmpsl
jbe
hlt
fcmovnbe
insl
movsl
sub
ljmp
xchg
jp
movsb
inc
sti
add
mov
rorl
xchg
mov
loopne
scas
out
jno
mov
pop
jge
pop
shl
jbe
loop
sub
mov
add
adc
daa
mov
add
dec
js
mov
js
sbb
inc
shrl
jae
loope
mov
enter
cld
aas
fcom
mov
sti
sub
xchg
arpl
ljmp
dec
int
es
and
outsl
mov
and
std
sub
cld
out
cld
xor
es
mov
divb
xor
sahf
pop
mov
adc
in
pop
mov
or
jg
inc
pop
stos
add
stos
dec
or
lock
sub
lret
lods
lea
xor
cmp
and
xor
xor
sbb
or
sar
test
adc
mov
jne
dec
dec
dec
cld
or
mov
fdivp
add
dec
leave
outsb
hlt
lcall
inc
pop
or
and
mov
in
cwtl
fdivs
ror
aas
push
out
scas
lcall
mov
sbb
inc
call
mov
push
popa
mov
and
mov
inc
stc
xor
push
push
stc
xor
pop
sarb
stos
mov
xchg
insl
pusha
adc
mov
inc
rcrb
rolb
jmp
fsubrl
push
inc
add
pop
into
test
dec
mov
fsubrs
sbb
cmpsl
ret
inc
cmc
sbb
scas
xchg
mov
popa
popf
in
mov
jl
jns
and
cmc
loopne
test
orb
sub
shl
mov
cmc
out
fs
shl
mov
push
push
cli
daa
aas
mov
cltd
out
pop
push
sbb
fs
sub
add
movsl
ret
fnstsw
mov
pop
add
or
into
ret
mov
add
hlt
mov
adc
dec
mov
jge
aam
fimull
cli
pop
sbb
sub
dec
push
out
in
sti
mov
scas
add
fs
mov
cmc
mov
cmp
mov
or
mull
adc
in
xor
mov
push
ret
arpl
imul
inc
mov
insl
mov
nop
push
jg
mov
stc
scas
out
nop
jge
mov
or
push
add
call
inc
lea
gs
inc
imul
xor
into
outsb
jnp
jns
jp
stos
push
js
add
jns
dec
dec
int
cmpsl
shll
jg
mov
dec
mov
in
push
sar
mov
les
sub
mov
daa
test
dec
mov
cmp
mov
lret
lahf
int
lret
adc
aaa
cmp
adc
xchg
cltd
jg
pop
jp
cmpsb
inc
sub
jle
or
dec
cmp
cmpsl
movsl
xor
fwait
jae
decb
into
into
loope
arpl
cltd
pop
mov
push
repnz
dec
and
adc
rol
lods
pop
cmpsb
jae
call
jmp
adc
xlat
out
ss
inc
mov
pop
orl
fists
sub
dec
dec
sbb
je
mov
test
bound
or
mov
jnp
jle
inc
inc
rcrl
movsb
outsl
das
shlb
adc
adc
pop
aaa
cmp
out
pop
inc
sub
sbb
lea
pop
and
mov
cmp
sti
lahf
push
inc
push
push
dec
leave
mov
jl
sbb
shll
imul
js
and
inc
addr16
scas
cwtl
popa
xor
or
sbb
and
cmpsl
dec
shl
loope
pop
outsl
shl
mov
lods
adc
sbb
or
outsb
ror
fstps
jae
int3
sbb
cmp
stc
repz
push
xchg
pop
iret
iret
cmp
pop
jp
jecxz
pop
nop
mov
imulb
sti
jnp
xchg
pop
xlat
lea
inc
mov
mov
stc
xchg
or
or
out
lock
lea
mov
sbb
aaa
sbb
shlb
mov
mov
pop
push
vpaddsw
lds
or
movsb
fwait
push
sti
jle
shrl
incb
push
lret
add
into
aad
cld
mov
xor
clc
mov
enter
push
add
lret
sub
call
std
mov
sub
pushf
loope
xchg
rclb
and
ja
push
cmpsl
loope
push
into
sub
or
subl
into
popf
ds
add
and
push
xor
jnp
mov
outsl
in
scas
or
sub
into
sti
icebp
inc
lret
sbb
movsb
pop
pop
lock
jb
and
push
mov
lret
add
cmp
xchg
mov
ficomps
fldl2t
stc
nop
cmp
fstpl
pop
shrb
popa
jo
shll
mov
pop
outsb
fnstcw
sub
cmp
ds
mov
jle
ret
mov
popa
hlt
das
mov
dec
fldcw
int3
jns
jge
sti
cltd
inc
addr16
int
cmp
test
pop
nop
sarl
in
les
aam
insl
xor
das
and
jg
outsb
cltd
or
cmp
add
out
jae
adc
loop
pop
out
mov
mov
scas
push
test
adc
and
aam
movsb
std
or
mov
in
jg
jbe
scas
push
into
jb
mov
mov
in
push
mov
dec
daa
imul
add
and
mov
insb
xorl
imull
mov
ficompl
std
imul
push
add
and
jno
jb
ret
cld
xchg
fildl
lds
es
pop
std
ret
pop
lret
xchg
mov
push
push
sbb
sbb
jecxz
sub
dec
adc
int3
pop
cmpsl
dec
and
sub
es
jmp
dec
add
sti
addr16
out
popa
test
mov
test
add
cmp
inc
or
push
xlat
lahf
inc
inc
cmp
inc
jle
dec
fs
leave
inc
imul
dec
and
in
push
xchg
mov
out
std
dec
and
fnstcw
add
and
jae
mov
out
jbe
rcrb
lahf
add
fisubs
jmp
pop
pop
sahf
fisttps
vpshaw
push
cmc
inc
cmp
jl
movsl
sub
shr
jp
mov
and
pop
popa
mov
js
mov
mov
rorl
fldenv
clc
or
test
pop
and
xchg
sub
out
out
ja
dec
mov
mov
pop
inc
js
movsl
mov
or
dec
dec
cmp
xor
mov
in
sub
insl
pop
test
in
push
stc
movsl
and
jg
cli
dec
popa
mov
popf
inc
and
xor
dec
xchg
mov
lahf
scas
push
sbb
cs
and
jl
sub
xchg
jp
adc
ljmp
lea
addr16
inc
mov
push
cmp
and
and
fldcw
fcoms
ds
aas
enter
adc
push
adc
loope
adc
lods
jbe
mov
xor
pusha
mov
pop
nop
loopne
sub
nop
in
mov
bound
inc
gs
jb
shrl
jecxz
enter
push
loop
out
adc
and
pop
jo
pop
fidivrs
pop
test
mov
inc
in
mov
add
jmp
cmc
icebp
psadbw
leave
xchg
dec
sbb
enter
fdivrl
add
insl
stos
jbe
fcoml
clc
std
xor
sbb
jle
frstpm(287
inc
lods
sub
dec
fmull
push
cld
jp
mov
nop
xchg
loope
ljmp
mov
pop
repnz
loopne
inc
xlat
gs
sub
xchg
xchg
imulb
loop
pop
cmp
rclb
lock
jno
push
mov
out
mov
shrb
rol
icebp
sub
dec
jo
push
arpl
cld
jb
scas
lds
pop
jnp
shlb
nop
dec
repnz
or
jne
sub
iret
clc
or
cs
out
jb
stos
cltd
aaa
test
loopne
aaa
lret
pop
fwait
sub
and
inc
icebp
lret
add
inc
mov
cltd
mov
lret
out
out
mov
jne
mov
loope
pop
in
aad
stos
lock
jo
insl
sbb
mov
add
jb
add
negl
fldt
roll
andb
sub
push
or
dec
pop
lods
pushf
lea
nop
loopne
push
jmp
push
lret
push
mov
ss
mov
jmp
test
sti
or
dec
clc
xor
dec
mov
sahf
mov
jno
pop
sahf
in
inc
dec
cs
fwait
sbb
fdivrs
sti
sub
xchg
enter
cmp
dec
pop
stc
inc
adc
pop
outsb
add
popa
mov
rorl
jns
nop
xchg
jne
stc
pop
sub
insb
shrb
out
fimull
cmpb
loop
sub
decl
adc
jns
mov
test
gs
arpl
xchg
mov
adc
inc
or
cmpsb
into
xchg
jge
lcall
les
dec
pop
aam
cld
out
push
arpl
jno
in
out
mov
leave
dec
das
cld
jp
sti
xor
pop
arpl
call
aaa
fiadds
adc
lods
and
repnz
test
sub
ret
dec
sub
mov
popf
adc
sbb
and
mov
inc
push
mov
hlt
int3
sbb
test
out
icebp
pop
mov
and
out
xor
inc
fidivs
mov
xchg
mov
cmp
js
fsubl
fsts
rcl
sbb
mov
jb
ljmp
les
sbb
iret
pop
sbb
xor
or
rcrb
jmp
daa
add
fbld
cltd
adc
jecxz
jecxz
cltd
shrl
lahf
subl
pop
test
rolb
std
mov
stos
mov
add
ret
mov
hlt
xor
jp
sbb
cltd
lahf
xchg
sbb
xor
xchg
xchg
sub
pushf
or
out
rcll
stos
and
jl
sbb
pusha
sbb
imul
or
fisttpl
ds
lret
aad
push
xchg
aas
hlt
daa
repnz
call
inc
mov
repz
xchg
ficompl
clc
sahf
mov
cmp
and
mov
xor
stos
imul
test
dec
lret
test
add
outsb
mov
pop
xor
dec
pusha
and
stc
pop
incb
pop
inc
push
dec
jae
sti
imul
and
jp
mov
dec
loopne
es
addl
lods
jecxz
jns,pn
into
add
and
sub
xlat
hlt
mull
xchg
sub
or
sub
notl
out
push
sub
inc
icebp
and
outsb
test
lahf
mov
clc
insl
mov
loopne
xor
adc
sbb
movsb
and
dec
adc
aas
or
mov
mov
jl
mov
loopne
pop
pop
xchg
xor
sbb
dec
fnclex
mov
pusha
pop
or
imul
lods
mov
push
sti
fisubrs
scas
sbb
sbb
mov
insl
pop
stos
cmp
jge
push
mov
outsl
pop
push
outsl
push
push
pop
mov
adc
sbb
mov
or
gs
jno
adc
inc
cmp
leave
mov
aas
shrb
add
add
xor
dec
mov
ret
aaa
iret
out
or
add
fstps
mov
ss
mov
rcr
das
push
lods
or
mov
adc
scas
add
jecxz
ds
out
jb
xor
push
lret
push
jmp
xchg
inc
and
getsec
add
subb
mov
xor
mov
nopl
sub
ss
xor
mov
icebp
jnp
and
jl
pusha
inc
aaa
add
inc
in
lahf
jo
addr16
xchg
mov
and
cmp
mov
sbb
test
and
ret
mov
cmp
or
pusha
cmc
and
je
pushf
sub
jo
fsts
call
out
mov
and
ret
cs
out
push
adc
cmp
fldl
jecxz
jo
data16
aaa
pop
pop
cld
xor
out
cmp
out
or
inc
enter
pop
jmp
add
mov
push
push
pushl
ret
push
insb
fldl
jmp
cmpsl
cmpl
inc
in
sbb
icebp
jbe
inc
sbb
ljmp
in
mov
add
add
lahf
cmp
pop
sti
mov
jno
mov
add
mov
cmpb
mov
aad
mov
das
aaa
es
xor
dec
mov
and
cmp
dec
out
mov
sahf
cmpsb
pop
imul
imul
xchg
jle
add
insl
repz
jg
cld
shr
and
mov
movl
push
pop
ret
lret
mov
pop
lret
leave
xchg
inc
cld
lret
stos
fyl2x
adc
pop
fsubr
mov
or
pusha
sti
rcrl
repnz
xchg
repz
dec
pop
shlb
fadds
jmp
bound
in
int
scas
mov
mov
icebp
imul
jmp
pop
inc
and
mov
sub
inc
inc
lea
mov
mov
fs
mov
in
adc
push
lods
mov
ja
and
xlat
pop
ret
stos
fbld
add
pop
pop
sahf
int3
jecxz
and
cmpsl
fwait
dec
mov
cmpsb
push
in
out
sub
jbe
enter
jge
mov
repz
insb
hlt
iret
dec
mov
and
js
xchg
stos
mov
cmpl
notb
int3
inc
dec
out
jmp
sub
mov
scas
fistpll
or
jmp
xchg
jmp
mov
xor
push
je
pop
jae
pop
ret
mov
dec
adc
clc
jge
mov
mov
mov
insl
mov
inc
inc
xor
push
lods
dec
cwtl
testl
cmp
fnsave
push
sbb
fwait
pop
bound
cmpsl
lret
dec
dec
inc
dec
insl
rclb
jmp
lret
and
les
push
cld
dec
das
mov
cmp
add
mov
fmuls
jb
movsl
out
sub
and
mov
jo
hlt
lcall
inc
inc
or
addr16
push
bound
jl
jle
in
pop
sub
js
adc
leave
jl
pop
xor
jmp
adc
pop
mov
push
test
fists
xlat
cmp
pop
sbb
das
add
push
xchg
hlt
xchg
fnstcw
mov
sbb
out
and
cmp
inc
add
ds
push
push
xor
in
movsb
cmp
mov
jecxz
lahf
cmp
add
push
xchg
dec
sub
filds
shll
or
and
and
inc
rorl
mov
or
adc
test
adc
mov
mov
andl
xor
repnz
pop
sbb
cmc
jle
mov
xlat
andb
inc
dec
jbe
jmp
test
dec
sbb
xchg
mov
sbb
inc
repz
mov
mov
movsb
push
cmp
lahf
fwait
arpl
cmpsl
repnz
and
into
test
cmpsb
das
jecxz
in
enter
inc
cmp
in
add
mov
sbb
aaa
lcall
inc
sbb
jae
sbb
shr
clc
into
cmpsl
adc
cmp
lds
inc
call
cmpsb
icebp
fiaddl
sarl
lods
add
mov
cmp
repnz
mov
nop
je
cli
xor
push
arpl
out
nop
lds
inc
cmp
sar
aad
sbb
mov
and
inc
cmc
outsl
std
push
adc
and
cmp
push
popf
sbb
cmp
jmp
mov
mov
repnz
sub
inc
push
jge
in
mov
and
jmp
aaa
shl
sub
dec
push
ret
sub
pop
mov
jp
loop
jmp
dec
ret
int3
fsubrs
movzwl
lds
push
dec
mov
mov
mov
lods
xchg
rcll
push
cmp
mov
dec
adc
push
fcomi
xorb
and
ja
stos
cmpsb
inc
aaa
idivl
cltd
dec
enter
aam
push
ja
lods
lret
push
out
add
sub
fbstp
push
mov
lods
xor
sbb
out
and
sbb
jge
cmp
ljmp
jo
test
cs
outsb
aas
pusha
outsl
fldenv
xor
or
das
enter
jb
lods
js
sub
les
stos
dec
insb
adc
outsl
dec
push
lret
repz
inc
xor
in
mov
or
adc
aad
or
xor
nop
inc
insb
or
xchg
push
adc
xchg
shlb
arpl
out
out
xor
in
pop
std
cmpsb
xchg
mov
xor
push
pop
hlt
je
icebp
mov
pop
jle
repz
ljmp
push
push
test
ja
in
sub
cmpsb
sar
fnsave
xor
jnp
add
emms
cltd
in
adc
mov
or
jb
xchg
nop
jg
sahf
sbb
push
mov
or
bound
int
test
pop
pop
xchg
in
sub
pop
mov
jecxz
idivb
dec
cmp
jb
dec
orb
sub
rcll
dec
cmp
push
idivb
int3
sti
sbb
and
ret
ds
in
cmp
xchg
shr
loope
nop
mov
movsl
das
lock
inc
popa
in
mov
xchg
cmc
call
sbb
lcall
cmp
jle
cmp
mov
imul
mov
neg
pushf
inc
faddl
hlt
sbb
subl
adc
pop
lcall
sbb
rol
xlat
jns
mov
sub
pop
and
jno
mov
std
stos
int
push
pushf
jbe
frstor
loopne
lret
fwait
xlat
into
call
pop
ror
push
xchg
lods
xchg
jae
jmp
aam
inc
mov
sub
out
rcr
in
xchg
xchg
push
sub
xor
dec
dec
push
push
orl
enter
mov
scas
std
cmpsb
repnz
leave
shrb
sub
cmp
ss
int
xchg
inc
ret
cmp
xor
icebp
icebp
cmp
pusha
xlat
test
test
dec
sub
notl
sbb
cmp
jp
pop
mov
lods
sbb
xchg
dec
in
xchg
lds
sbb
mov
lods
mov
and
jge
lea
lret
dec
push
and
pop
popf
std
hlt
aad
xchg
stos
pop
xor
in
adc
mov
adc
pushf
dec
xchg
push
lods
loopew
sbb
mov
cmp
stos
adc
dec
loop
lods
or
dec
push
mov
aas
mov
lds
sahf
and
rcrl
jbe
je,pn
add
cmpsb
test
and
rcl
adc
loopne
lods
xchg
inc
gs
adc
adc
insl
setno
sbb
xchg
in
stc
pop
cmc
lods
dec
adc
aaa
xchg
leave
add
pop
lea
dec
ljmp
cmp
sbb
push
jecxz
fcomps
insb
mov
jnp
push
jbe
js
add
pop
nop
cld
dec
xlat
hlt
loope
sub
fwait
xchg
test
xchg
adc
ss
arpl
xor
xchg
imul
push
das
call
mov
sub
pop
not
and
fdivrs
sub
lods
sub
or
loope
mov
cli
adc
leave
lods
gs
icebp
dec
mov
imul
mov
pop
pop
push
jne
inc
add
xchg
lcall
mov
inc
add
xchg
pop
insb
ds
lock
ret
sti
push
fcomps
xchg
fildl
push
push
jmp
nop
jle
cmp
inc
enter
loope
inc
jnp
pop
dec
push
mov
lcall
pop
sahf
aam
in
les
fmuls
xchg
notb
add
push
xor
shll
es
jbe
mov
mov
sarl
adc
dec
or
sbb
inc
fmull
gs
shrl
xor
insb
sbb
pushf
mov
xchg
aas
test
sbb
pop
in
push
les
sub
push
dec
in
icebp
out
pushf
aam
je
int3
inc
mov
and
cli
xor
dec
ret
lods
inc
mov
in
xchg
push
das
jns
sbb
lret
jbe
adc
add
xorl
incb
fs
jnp
in
mov
mov
rcll
or
inc
sbb
mov
mov
addl
push
push
les
insb
push
cmp
jb
outsl
data16
dec
sbb
push
rol
push
sub
sub
mov
in
sub
mov
inc
sub
fimuls
outsb
fadds
xor
jb
jg
les
sbb
clc
arpl
test
scas
pop
fidivl
leave
mov
sbb
and
and
sti
test
ljmp
cmpsb
adc
fisubrl
je
sti
pop
jg
cld
push
stos
xchg
ja
jnp
cmp
and
test
cmp
insb
imul
inc
mov
cmp
out
movsl
pop
cmp
xchg
push
stos
or
xlat
pop
mov
adc
shlb
cmp
dec
mov
adc
xor
int3
cmc
scas
add
adc
mov
pop
les
insb
fisubrs
ljmp
loop
sub
sub
push
xchg
leave
out
and
fwait
in
xchg
cmp
popf
or
outsl
repz
mov
into
scas
stos
xor
mov
addl
loope
inc
mov
repz
sbb
int
xchg
aas
outsl
add
addr16
pop
pushf
hlt
mov
ret
cmp
and
mov
and
sub
dec
sub
jbe
js
mov
xchg
and
sti
adc
test
cmp
mov
jecxz
mov
pop
cmpsb
sti
popf
mov
in
jg
xchg
daa
loop
stos
shrb
test
pop
scas
mov
mov
cli
outsb
dec
jl
bound
sbb
mov
sub
popf
xor
cltd
adcl
lcall
fbstp
pop
cmp
xor
daa
adc
push
mov
jae
mov
cmp
add
inc
call
outsb
lret
stc
xor
and
imul
sub
das
ficoms
dec
xorl
xor
lahf
mov
cld
fidivrl
xchg
push
adc
lods
filds
rorl
fildl
testb
or
cmpsb
outsb
sub
ret
jbe
outsl
pop
xlat
sub
pop
leave
cmp
sub
mov
aam
inc
pop
rclb
mov
mov
aam
pop
lds
adc
fbld
xchg
cmp
xchg
cmp
fs
sbb
jno
ret
lret
adc
jnp
pop
or
in
insb
sbb
mov
pop
push
outsb
pop
pop
mov
in
push
movsl
in
ja
jae
aam
mov
pop
std
pop
pop
dec
xlat
jne
pop
mov
adc
repnz
jp
negl
jbe
repz
cld
ds
jno
lret
sub
or
clc
xchg
arpl
stos
xchg
outsl
jg
and
or
sub
dec
das
ljmp
dec
iret
pop
xor
fistps
dec
mov
lahf
push
clc
cmpsl
push
ffree
push
lcall
daa
cmp
mov
lcall
jno
test
push
jl
pushf
clc
push
mov
jo
daa
icebp
jl
xchg
pushf
sarl
inc
aas
inc
pop
xor
inc
clc
imul
xor
jl
in
js
ret
sbb
mov
dec
cmp
sahf
sbb
mov
leave
loopne
sbb
ljmp
pusha
push
mov
lahf
cmpsl
in
popa
shrb
xor
lds
fwait
push
cmpsl
cmp
xchg
jge
mov
mov
mov
add
lahf
sub
add
xor
pop
push
push
shll
add
lsl
mov
lock
loop
es
mov
mov
lods
mov
dec
cwtl
ret
mov
shll
sub
loop
mov
dec
outsb
pushf
outsb
sub
pop
push
shll
sub
add
lds
mov
popa
sahf
cmpsl
adc
mov
xlat
in
out
repnz
jle
int3
jnp
inc
push
push
cmpsl
xchg
scas
mov
jbe
xchg
movsb
divb
fs
icebp
jb
sub
cmpsb
dec
cmp
cmp
in
mov
dec
cld
stos
xor
xchg
das
jp
dec
or
enter
cwtl
fdivrs
xchg
push
ds
sbb
mov
push
add
dec
imul
sub
icebp
fs
ret
mov
mov
adc
imul
iret
dec
jl
xchg
push
lret
xor
into
xlat
mov
or
fdivrs
repz
sub
sbbb
and
jae
subl
popa
fimull
dec
dec
and
push
pusha
or
add
scas
lret
lods
test
jmp
shlb
gs
les
or
sti
sub
mov
xchg
dec
dec
jl
push
roll
jmp
outsb
sbb
arpl
lret
ffreep
cli
sub
shl
mov
pop
pop
andb
cmp
inc
movsb
shll
aas
pop
movsb
lods
mov
sbb
pop
mov
cmp
fs
or
jl
lock
in
inc
loope
mov
popf
mulb
fs
xchg
xchg
and
outsb
sub
adc
and
pop
xchg
jne
sub
pop
add
sbb
xchg
dec
inc
add
lret
jne
lock
mov
cltd
fidivl
xchg
loope
cmp
sub
pop
dec
leave
cltd
insl
shlb
jecxz
sbb
les
cmpsl
inc
mov
pop
divl
inc
add
jl
inc
xorb
popa
aam
pusha
ja
push
cmp
adc
mov
mov
or
in
mulb
push
inc
mov
jmp
daa
cmp
cmp
adc
xlat
and
hlt
loope
xorb
icebp
mov
cmp
inc
lea
jecxz
jl
xchg
xchg
das
push
mov
and
mov
xchg
push
out
lcall
sbb
sub
aad
or
push
ss
add
push
push
xor
nop
push
inc
ret
ja
and
mov
xchg
adc
xor
push
mov
and
add
movsl
or
dec
xchg
call
cmp
adc
xor
jle
xor
roll
push
mov
push
in
daa
sub
dec
sbb
sahf
pushf
idivl
xor
pop
xchg
inc
loop
testb
stos
sbb
loope
jne
push
and
fmull
sub
or
fisttpll
mov
test
sub
or
test
mov
push
mov
push
ficoml
mov
dec
rorl
mov
xchg
mov
push
and
lock
add
pusha
cmp
jl
jo
nop
and
stos
dec
fists
jge
push
or
jp
inc
out
aad
inc
mov
and
repz
add
xchg
pop
cmc
loope
adc
les
jmp
daa
out
imul
jmp
xlat
inc
arpl
inc
xchg
sub
inc
jbe
ret
pop
add
fwait
adc
in
dec
into
mov
and
fists
and
jb
push
fcmovnbe
hlt
test
jle
pop
mov
mov
add
sbb
push
lds
dec
dec
xchg
xchg
scas
pushf
adc
aas
cld
bnd
xlat
sbb
sbb
stos
jae
xor
repz
inc
fiaddl
jl
std
and
mov
jnp
mov
sbb
push
mov
lcall
and
jmp
fsubs
and
movsl
popa
sub
fwait
dec
xchg
lods
cmp
sub
in
or
xchg
adc
cli
pop
and
arpl
mov
daa
sti
imul
pop
mov
mov
mov
ja
or
pop
adc
adc
or
imul
das
inc
add
cs
pop
and
fisubrs
shl
test
int
data16
xchg
sub
adc
frstor
xor
add
fsubrs
and
shlb
dec
rcr
lret
adc
ds
sbb
mov
or
mov
push
fdivp
or
add
pop
sbb
shll
jae
mov
adc
push
adc
push
cmpsl
ret
mov
loop
loopne
mov
push
inc
cmp
ret
jbe
dec
jno
mov
cmp
stc
dec
jno
cld
cmp
inc
or
inc
loopne
mov
fisttpll
arpl
iret
call
mov
loopne
lcall
sub
mov
ficoml
jge
pop
inc
and
leave
enter
sub
jecxz
xchg
sahf
dec
sub
or
in
fldz
jg
or
cmc
clc
or
or
xchg
xor
fstpt
mov
mov
out
ljmp
adc
push
cmpb
in
bound
clc
mov
popf
pop
lods
jecxz
shll
leave
inc
ret
or
stos
jmp
sbb
movsb
pand
mov
mov
addl
mov
sbb
pop
test
cmp
int3
ljmp
mov
cld
or
pop
jns
sbb
test
xchg
jg
cmp
rcrb
push
ds
lret
popa
and
std
sub
mov
mov
sub
fisttps
das
out
popa
jp
sub
mov
lret
repz
sub
dec
stos
call
pop
and
xor
in
aam
mov
inc
jne
cmp
mov
cmpsb
aaa
add
xor
outsl
sub
or
sahf
xor
fistpl
daa
jne
imulb
fnstsw
pop
mov
pop
sbb
pushf
adc
call
mov
call
dec
dec
mov
mov
inc
aad
jecxz
xor
xchg
jmp
dec
xor
lcall
inc
dec
test
pop
or
data16
fdivrl
xchg
call
outsl
xchg
test
nop
test
mov
outsl
call
mov
inc
or
icebp
sbb
enter
cmp
out
cmp
nop
inc
push
js
into
jno
daa
push
dec
mov
add
scas
outsb
xor
and
into
rcrb
gs
mov
jl
sbb
mov
pop
jecxz,pt
fbld
jp
pop
push
pop
and
into
pop
pusha
or
fcompl
add
lds
shl
addl
dec
mov
nop
iret
adc
fmulp
jnp
fdivrp
jle
mov
push
dec
add
jg
dec
and
ret
les
sub
pop
ds
ret
enter
push
push
jecxz
enter
sbb
mov
ljmp
push
pushf
xchg
cmpsb
enter
mov
incl
aaa
mov
push
das
pushf
cmp
adc
movsb
in
aam
inc
sbb
outsl
rcrl
rorl
cmp
stos
add
jb
outsl
push
testb
pop
hlt
bound
inc
and
jnp
fwait
sbb
lock
push
icebp
adc
data16
sub
push
mov
jns
xchg
mov
stc
cmp
pusha
jbe
pop
test
lret
pusha
dec
mov
cmp
jge
pop
dec
add
repz
andl
shrb
aas
mov
bound
shll
dec
insb
cwtl
gs
push
out
push
popf
cmp
lds
push
scas
inc
hlt
cmc
or
mov
adc
aad
push
into
ljmp
xor
or
mov
popa
sti
xchg
inc
fcompl
pop
lcall
dec
lret
jb
ret
push
jle
pop
xor
inc
scas
push
mov
inc
adc
ds
sub
push
arpl
sar
sub
and
pop
xor
imulb
push
repnz
fwait
popf
push
jge
push
lods
shl
inc
cmpsb
rol
jp
mov
push
bts
jmp
ja
pop
mov
bound
aas
cs
cltd
loope
xchg
insl
fisubs
bound
push
add
sbb
push
pop
mov
shlb
std
jl
mov
pop
sbb
cltd
aaa
pop
adc
ljmp
iret
and
sub
jno
pop
pop
cmp
ljmp
addr16
mov
mov
xor
imul
dec
call
imul
or
mov
add
sbb
dec
inc
and
mov
and
nop
inc
fisubrs
roll
mov
mov
repz
int3
and
lock
stos
enter
push
ud2
int
xchg
mov
push
and
outsb
into
push
jmp
xor
pop
std
movsb
sahf
testl
out
test
inc
mov
stc
or
push
int3
jp
inc
inc
imul
xchg
cwtl
xor
aad
pop
je
shr
fnstenv
mov
inc
cmp
hlt
jnp
dec
lret
clc
inc
in
incl
mov
in
aad
clc
fmuls
imul
cmp
in
xor
adc
lods
popa
imul
jle
das
pop
inc
loopne
cmp
jmp
nop
movsl
std
jne
sub
jp
pop
rclb
xchg
repz
push
xchg
or
je
movsl
cli
jmp
push
xor
and
stos
cmp
jne
adc
xor
mov
test
pop
add
lcall
xor
mov
leave
out
mov
push
mov
pop
xor
add
push
sub
ds
mov
mov
imul
call
xor
mov
sbb
mov
frstor
ja
mov
loop
pop
cld
pop
pop
popf
cmpsl
popf
aam
xchg
lods
push
jnp
xchg
cmpsb
stos
inc
pop
and
cmp
inc
sbb
scas
cmp
lcall
fucomi
shl
fwait
cs
add
loopne
mov
out
loop
mov
mov
jb
or
stos
lock
cmp
adc
idivl
test
das
push
sahf
xchg
or
jno
psubd
icebp
fcomp
sub
leave
repz
pusha
jnp
scas
lock
and
xchg
push
jp
cld
mov
in
iret
icebp
cmp
mov
mov
and
cmpsl
sbb
iret
out
xchg
xchg
andb
inc
dec
sbb
dec
movsb
mov
xchg
subl
repnz
xlat
loopne
test
mov
imul
pop
mov
repz
pop
insl
fistps
in
pop
adc
outsb
pop
lods
inc
mov
and
vpcmpeqd
mov
and
push
aaa
jae
mov
in
sbb
pop
repz
jg
icebp
lock
notb
addl
daa
int
insb
mov
jge
test
sti
mov
insl
mov
scas
add
enter
push
stos
scas
ficompl
icebp
adc
cltd
cmpsl
mov
sub
scas
pop
ret
push
data16
mov
cmpsl
pushf
dec
pop
loope
repz
andl
mov
fsubl
lods
ja,pn
cmc
and
hlt
cmpsl
jno
lcall
mov
inc
adc
add
popf
mov
mov
pop
adc
test
outsl
pushf
cmp
getsec
stc
adc
mov
mov
cmc
mov
jo
mov
or
or
xchg
scas
push
fildl
sub
mov
and
pushf
mov
jge
xchg
xor
dec
and
jb
jge
loope
aas
gs
cwtl
fisubrs
jnp
jg
int3
ja
mov
mov
aad
mov
leave
loopne
fucomip
loope
scas
jmp
jnp
mov
ds
insl
int
cmp
call
mov
pop
nop
call
pop
adc
ljmp
sbb
sbb
dec
out
scas
in
mov
data16
fs
rolb
or
in
shr
data16
jg
mov
mov
dec
inc
mov
adc
add
mov
lret
into
jns
lock
ljmp
or
sub
ds
popf
pop
outsb
push
push
mov
and
cmpsl
shll
pop
shrb
in
sbb
mov
std
imul
movsb
pop
sub
and
xchg
rol
dec
imul
lds
cwtl
xor
mov
mov
xor
loopne
lea
clc
jmp
cwtl
cli
push
bound
lret
cs
idivl
xchg
aad
aas
jmp
pop
clc
mov
enter
test
aad
in
or
xchg
iret
outsb
imul
jle
daa
inc
xchg
dec
jno
or
mov
push
inc
mov
pop
sub
out
imul
shrb
adc
mov
ljmp
xchg
sub
mov
rorb
ljmp
inc
pop
fmuls
push
outsb
ljmp
xchg
jns
xchg
xchg
int3
imul
insb
jns
stos
jge,pn
ljmp
cld
stc
aad
push
add
hlt
int3
pushf
loope
test
jmp
cmpb
andb
jns
rorb
mov
std
mov
mov
push
push
cwtl
rclb
push
scas
fwait
aad
mov
dec
jmp
gs
out
jmp
xor
cmp
xor
outsb
and
or
mov
push
cmp
test
mov
mov
and
pop
push
adc
repnz
cltd
stos
mov
mov
ret
lods
arpl
insl
sbb
push
or
sbb
sbb
lret
dec
xchg
xlat
andl
and
out
pop
into
popf
lock
jl
xchg
add
sbb
and
clc
sbb
cmp
mov
dec
lret
incl
xchg
mov
push
sub
dec
mov
push
mov
xor
adc
xorl
enter
push
test
cmp
test
push
inc
clc
mov
fmull
std
dec
jecxz
lret
inc
jge
clc
loop
dec
cmp
sbb
inc
jl
pop
iret
add
ret
out
jl
sbb
std
xor
jae
inc
adc
cmp
dec
test
add
leavew
fdivrl
mov
adc
mov
sub
pop
add
inc
lods
sbb
dec
lret
scas
pushf
sbb
and
es
data16
sbb
es
pop
data16
push
mov
lcall
or
pop
inc
repnz
xor
mov
jecxz
ret
mov
jecxz
pusha
dec
imul
xlat
and
das
inc
mov
rcr
cmp
cmc
and
jbe
adc
shll
sti
xor
and
push
cs
fildll
clc
cli
test
inc
push
out
jle
inc
cld
iret
inc
sbb
les
hlt
das
cmp
iret
ret
nop
jbe
dec
js
fwait
lret
addr16
imul
xor
daa
push
mov
sbb
orl
lods
xchg
jb
cmpsb
nop
mov
mov
imull
dec
addr16
xchg
mov
dec
daa
dec
xchg
adc
rcrb
xchg
cli
pop
lods
bound
jl
mov
mov
push
jg
or
jno
or
jno
or
sub
inc
les
inc
jmp
mov
adc
push
add
leave
cmc
sub
pop
jl
sub
jno
dec
test
dec
push
sbb
xchg
daa
and
and
pop
iret
leave
sub
inc
outsl
iret
and
in
dec
jl
xchg
jns
mov
rorl
adc
mov
push
adc
lods
fisubs
ret
les
jo
jmp
pop
lods
pop
cmpsb
popa
cmc
mov
lcall
cmp
aam
test
ljmp
xor
mov
sbb
adc
lahf
int3
std
mov
fildll
sub
dec
call
test
mov
repnz
adc
outsl
stos
repnz
xor
add
xorb
inc
decl
mov
push
or
ret
repnz
mov
jne,pt
mov
jne
ljmp
arpl
sti
hlt
sub
mov
mov
jmp
push
sahf
mov
push
adc
ljmp
dec
cmc
xchg
push
sbb
lods
std
arpl
push
in
pop
pop
cmp
daa
mov
js
inc
push
push
daa
pop
xor
or
stos
dec
scas
inc
dec
stos
mov
push
ljmp
aad
adc
dec
loope,pn
pop
mov
shlb
xchg
pop
adc
shll
cmp
xchg
adc
sbb
inc
mov
inc
bound
fadd
cmc
push
adc
mov
cld
pop
push
movsl
dec
sti
test
ss
jl,pt
aam
inc
push
mov
sub
xor
sub
push
aam
xorb
or
insl
stos
and
sub
aam
cmpsl
mov
pop
xchg
test
or
mov
roll
test
mov
cmp
int
ljmp
push
arpl
in
imul
jp
lcall
pop
fbstp
adc
lods
addr16
testb
adc
push
sbb
clc
fdivrs
daa
sub
mov
mov
ljmp
out
je
push
or
jle
adc
xchg
out
mov
mov
ja
cld
inc
xchg
popa
sub
mov
and
adc
adc
mov
or
dec
imul
push
lcall
jge
lret
test
mov
outsb
pop
sub
pushf
scas
lret
pop
dec
iret
repnz
sbb
mov
xchg
jno
pop
jb
cmp
lret
dec
mov
mov
mov
jns
mov
enter
adc
inc
pop
scas
sub
fstl
insb
shlb
icebp
fwait
fwait
mov
mov
mov
xlat
int3
add
and
movsb
jmp
cmc
lods
inc
scas
sbb
sbb
push
les
outsb
jl
lret
add
push
mov
xlat
and
sbb
pop
in
xor
pop
out
shlb
test
cmpsb
gs
cltd
pop
repz
je
fsubrs
daa
fstpt
aas
sti
fdivrp
in
jp
pop
xchg
les
xchg
push
jnp
sbb
icebp
inc
and
push
pop
fstps
sbb
mov
lds
push
fsubs
cmp
jp
mov
and
mov
test
scas
sbb
fwait
aam
sub
jle
and
push
inc
loop
add
mov
cmp
pop
scas
mov
jno
adcb
mov
pop
fwait
stc
pop
ret
xorl
and
cmp
fimuls
push
jno
xchg
inc
push
stos
cmp
cmp
aam
popa
adc
xorl
enter
inc
jmp
xchg
iret
mov
imul
mov
faddl
adc
add
push
daa
imul
sti
inc
inc
insl
xlat
pushl
movsl
xorb
iret
scas
add
pop
mov
cmc
out
xor
jmp
cmp
push
sbb
push
dec
mov
or
or
adc
push
mov
xchg
or
xlat
push
and
repz
movsb
mov
leave
inc
arpl
pop
out
sbb
push
jecxz
add
daa
inc
or
pop
out
ds
adc
jecxz
sarl
mov
or
cwtl
rclb
mov
std
pop
pop
xchg
jp
loope
repz
sub
push
fisttpl
aas
ja
imull
cmp
fcmovnb
mov
jae
mov
in
or
jbe
xchg
jle
mov
or
mov
popf
sub
cmpsb
jae
iret
insl
cmpsl
repnz
shrl
test
fistps
in
pop
jle
jecxz
dec
aas
sarb
call
sub
cld
repz
jge
push
sarl
sahf
stos
outsb
in
mov
mov
fcmovbe
add
dec
and
pop
jg
lea
in
scas
add
movsl
cmp
ja
js
xchg
leave
or
data16
cmp
mov
cmpsb
xor
jnp
xor
clc
mov
sti
cli
add
lret
mov
fistps
sbb
mov
sahf
cmovb
dec
adc
lods
mov
mov
dec
fidivs
jne
andb
imul
sub
mov
cmc
aam
sbb
imul
ret
stc
loopne
jp
adc
cmc
jecxz
int
or
jmp
lods
mov
dec
divl
out
push
lret
jbe
push
shll
push
fcmovnu
mov
xchg
jecxz
stc
jmp
pop
fwait
and
stc
ja
fcmovnbe
sarb
nop
lock
into
dec
adc
cs
jnp
test
mov
xor
xor
mov
mov
add
xor
mov
push
xchg
cmp
imul
jp
mov
push
rorl
ljmp
rol
mov
add
fldcw
cli
and
call
pop
xchg
aad
std
insb
outsb
mov
push
add
sub
outsb
jns
mov
fs
sti
jg
push
leave
imul
in
sub
xor
sbb
aam
sarb
push
push
fmuls
pop
out
xor
pop
inc
xchg
gs
mov
jbe
cmp
imul
mov
jns
adc
and
shlb
adc
mov
bnd
testb
fcoms
xchg
stc
jo
call
jne
pop
rolb
dec
lds
dec
hlt
jl
es
mov
inc
jns
out
fwait
aam
ds
hlt
mov
scas
mov
aaa
pop
sub
repz
push
and
and
lret
in
pop
jne
adc
adc
cmp
pop
xchg
lret
xor
stos
jecxz
lods
loop
and
xchg
or
cmp
mov
lret
movsl
dec
push
pop
negl
das
addr16
mov
aam
inc
jae
punpcklbw
lds
xor
js
dec
enter
movb
sub
push
movsb
sahf
loop
bound
btc
and
std
lret
mov
rcl
sub
sub
or
into
jo
scas
fsubs
xorl
or
les
xlat
fsub
adc
pop
dec
aad
shll
stos
sbbl
mov
je
mov
je
pop
jecxz
push
into
lahf
lods
ret
imulb
ss
movsl
xlat
cld
lea
xchg
iret
push
cmp
cmpsl
push
push
daa
loop
push
xor
dec
inc
outsb
xchg
mov
xor
sub
jnp
push
inc
fsubrl
sahf
sbb
lahf
negl
jo
add
xor
cmp
daa
out
cmpsl
nop
mov
xchg
repnz
les
xchg
xor
mov
cmp
xchg
sbb
add
pushf
outsl
cld
jmp
xor
push
sub
aad
lea
xlat
rcrl
in
add
push
xchg
sbb
popa
out
aad
sub
dec
mov
mov
mov
pop
mov
lock
mov
inc
add
mov
mov
jne
enter
inc
dec
int
cmc
xchg
adc
jmp
clc
movsb
out
fbld
cmp
popa
dec
divb
ds
out
cltd
push
cltd
shll
xor
inc
sub
inc
cmp
daa
jecxz
js
pop
cltd
jle
iret
lds
mov
sbb
xchg
inc
inc
inc
in
scas
pop
or
sbb
mov
adc
sbb
cli
push
testl
and
xchg
cli
cmp
icebp
dec
lahf
dec
dec
cltd
inc
out
mov
test
loopne
es
adc
inc
push
and
mov
xchg
subl
es
and
xchg
lcall
movsl
idivb
and
loope
xchg
cmp
xchg
rcrl
mov
mov
jo
push
movsl
adc
dec
mov
ss
loop
dec
sbb
icebp
and
and
push
loope
add
mov
mov
mov
ljmp
sbb
mov
clc
xchg
dec
xchg
jns
pushf
pop
cmc
dec
mov
or
push
add
xor
out
xchg
test
xchg
cs
jle
cmp
dec
mov
fwait
or
fdivr
mov
insl
imul
test
jl
fiaddl
mov
out
test
aaa
push
out
roll
or
mov
ret
test
daa
inc
and
or
inc
std
lds
stos
iret
mov
mov
enter
add
les
rolb
rolb
fidivrs
and
pusha
add
pop
dec
jnp
jle
add
out
mov
out
in
xor
sub
adc
fldenv
push
leave
dec
sbb
cmp
sbb
scas
and
or
adc
sub
mov
mov
mov
jl
js
jae
xchg
and
xor
pop
jae
insl
dec
pop
jno
lock
or
xlat
fisubrl
scas
and
test
xor
mov
stc
std
inc
and
adc
cmc
in
mov
add
stos
cli
cmp
pushf
inc
test
lods
stos
xchg
lds
ss
andb
mov
fmull
cmp
rcrb
mov
outsl
divb
les
and
js
mov
jle
stc
testl
enter
les
sbb
jnp
sub
xchg
jae
fdivs
xchg
cwtl
or
dec
out
in
lods
fucomi
dec
xchg
dec
aas
or
cmp
bound
cmp
jnp
mov
jbe
cmp
pop
jne
push
and
mov
cmpsl
mov
lods
popl
out
dec
adc
leave
sub
rorb
int
push
pop
dec
jb
test
cltd
push
aaa
fsubl
rcll
lods
inc
sbb
out
mov
xchg
out
inc
dec
fsubs
mov
in
fs
push
aad
ds
mov
cmpsl
mov
test
lock
push
shr
pop
push
lret
mov
icebp
dec
push
jo
rcll
xchg
js
mov
xor
daa
xor
popf
adc
iret
mov
mov
xor
fsubl
loopne
divl
mov
cld
pop
fwait
sbb
xor
ret
inc
lds
mov
lret
in
das
stos
bound
and
mov
xchg
movsl
pop
sarl
add
stc
dec
in
mov
xchg
dec
cmp
out
mov
push
pop
pop
xor
push
add
pop
jl
mov
jmp
stos
pop
arpl
pop
fcom
dec
push
jle
iret
jge,pt
fistps
fisttpll
repz
lret
shlb
fistps
jmp
mov
clc
push
popa
cmpsb
adc
shl
jg
jge
sbb
imul
subl
fs
nop
mov
push
adc
add
xchg
inc
and
std
add
xor
mov
outsl
push
xchg
lea
addr16
data16
cmp
cltd
push
sar
or
das
rcl
lds
push
stos
dec
mov
pop
pop
loope
pand
lods
stos
xor
adc
push
fwait
push
cmp
sub
pop
cmp
daa
pop
jp
xor
fistpll
scas
pop
add
scas
aad
imul
dec
mov
jl
xor
loopne
aam
mov
popa
psubd
je
mov
cld
loop
pop
lahf
cltd
lcall
mov
fidivrl
std
mov
xor
pop
cwtl
push
hlt
mov
add
cs
sahf
fimull
inc
ljmp
push
stc
mov
punpckhdq
and
arpl
jns
lret
xlat
jle
push
je
out
dec
push
dec
push
cli
int3
fnsave
push
sbb
dec
je
lds
ret
dec
cmp
push
or
jle
push
xchg
es
xchg
push
stc
lock
jmp
iret
xor
out
daa
ja
inc
es
cmp
and
cld
adc
mov
push
jb
jl
shll
test
inc
je
cmp
mov
imul
outsl
mov
ret
int
shrd
daa
ret
dec
xchg
cmp
fildl
xor
iret
push
stos
push
sub
xchg
lds
mov
jne
jns
or
push
data16
iret
outsb
mov
fdivs
cld
inc
cmp
out
adc
or
outsb
or
scas
enter
in
adc
imul
fwait
dec
iret
push
jb
outsl
nop
xor
dec
daa
lret
loope
and
cwtl
pop
cmc
adc
mov
leave
lcall
andb
lds
les
in
outsb
in
sub
inc
jge
repz
fwait
xchg
loope
int
std
lahf
cmpl
lret
adc
daa
test
fdivs
clc
pop
xor
cmpsb
fdivr
loop
nop
in
cltd
lret
adc
addr16
pop
adc
jp
lock
lea
fwait
jge
sub
mov
push
loop
xor
xor
xchg
pop
stc
push
lock
sarl
mov
divb
pop
mov
jae
test
stc
jmp
mov
scas
call
cmp
mov
andb
les
lcall
ss
push
call
mov
cmp
addl
lcall
mov
sub
into
jecxz
inc
jae
sbb
cmp
mov
fs
xchg
add
inc
xor
iret
and
push
cli
push
dec
in
sbb
adc
adcl
xchg
jle
lret
sub
pop
jmp
dec
imul
xchg
lret
popf
inc
and
dec
sahf
or
sbb
dec
mov
push
jge
stc
xchg
mov
dec
es
enter
aam
arpl
clc
push
fisubl
out
adc
jmp
gs
addr16
xor
dec
sbb
clc
shrb
scas
dec
mov
xchg
xchg
insl
pop
dec
pop
lods
cltd
loopne
decb
lcall
stos
or
shl
inc
fildll
lahf
pop
inc
in
cmc
mov
push
adc
jae
mov
pop
adc
sti
push
cmp
cmp
mov
sbb
arpl
and
adc
mov
cmpsl
push
add
and
cmp
xchg
icebp
roll
ret
js
je
cli
push
stos
ja
test
repnz
jo
dec
pop
insl
push
adc
lret
sub
inc
fidivrs
push
xor
cmp
push
and
mov
dec
jae
lret
jbe
iret
push
fnstsw
xchg
enter
mov
sub
dec
mov
inc
sbb
in
std
add
lret
addr16
sub
fsub
xlat
repz
addr16
ss
pop
bound
push
ficomps
rorb
inc
push
and
xor
lods
xchg
subl
clc
cmp
cmp
dec
sub
int
sbb
movsb
cs
int3
in
es
pop
push
mov
popf
cmc
cld
mov
and
dec
jecxz,pt
imul
mov
aam
xor
xor
and
inc
inc
pop
sarb
sbb
cli
fdiv
xor
cmpsb
pop
psrad
shll
cmc
aad
cs
push
roll
stos
jp
inc
mov
adcb
dec
lea
xor
imul
mov
jnp
les
iret
add
jecxz
sbb
add
push
and
dec
call
jne
add
icebp
lret
push
aaa
add
pop
push
ja
inc
inc
orb
popa
pop
mov
mov
pop
mov
enter
add
cmc
mov
inc
adc
rcll
gs
in
and
addr16
dec
jbe
ss
repz
jns
mov
insb
insb
int
in
insb
iret
cli
out
mov
repz
mov
mov
jmp
or
adc
out
jnp
lods
dec
movsb
into
xchg
bound
out
xchg
clc
mov
aaa
stc
and
lahf
xchg
mov
mov
rorl
jmp
cmp
jae
mov
mov
or
push
adcl
jno
jmp
xor
mov
pop
mov
mov
pop
xchg
sub
push
mov
dec
and
scas
xor
sub
enter
pop
popa
int
mov
or
push
mov
cli
mov
add
xchg
fcoml
or
loop
cmp
xor
lahf
cmp
insl
scas
popf
sub
adc
sbb
jo
stos
adc
int3
call
adc
aaa
out
mov
mov
adc
pop
scas
aaa
cli
inc
std
sub
push
ja
incb
or
jecxz
rclb
jl
test
cmpsb
sub
cmpsl
inc
mov
hlt
sarb
or
outsb
js
adc
xor
pop
sub
fsubr
scas
clc
inc
in
cs
pop
cltd
dec
push
pop
bound
jns
pop
repnz
out
in
pop
lret
leave
mov
es
fwait
add
push
repz
and
adc
clc
adc
mov
xchg
pop
sbb
or
pop
out
cmp
sbb
outsl
push
mov
shll
cltd
aad
out
sub
mov
adcb
xor
lret
push
adc
mov
outsl
inc
or
xor
push
push
loope
ss
mov
or
push
push
mov
adc
hlt
add
addr16
out
shll
jnp
adc
inc
imul
in
fistps
cmc
push
jb
adc
std
data16
pop
xor
jne
and
jnp
mov
and
loope
pop
mov
sub
add
fisttpll
push
inc
jp
xchg
sub
add
scas
and
imul
jmp
aam
and
fidivl
sahf
mov
xor
enter
xor
test
icebp
cmp
andl
imul
decl
scas
and
push
mov
dec
adc
popf
jge
inc
sbb
cmp
gs
xchg
cmp
data16
mov
sarl
ret
aaa
outsl
mov
sti
lock
mov
adc
arpl
stos
mov
ret
sbb
mov
and
call
mov
iret
jns
xor
xor
mov
das
mov
mov
jns
in
jb
mov
mov
stos
mov
ss
incb
xchg
sbb
and
jno
loop
dec
fldt
imul
mov
in
jae
jg
scas
mov
in
mov
dec
shlb
push
fisubrs
xor
mov
lods
mov
repz
aaa
sub
into
jge
mov
stos
adc
cmc
mov
fs
lahf
or
cld
sub
fmuls
testb
jg
in
pop
mov
rcl
sbbb
movsl
add
lcall
aad
es
test
push
adc
and
pop
or
sbb
rclb
adc
orl
clc
or
mov
jg
push
pop
mov
cld
clc
call
pop
das
xchg
xor
call
sbb
xor
push
and
pushf
sub
mov
mov
pop
mov
inc
inc
jbe
or
push
and
push
and
add
jge
jge
adc
imul
push
jnp
mov
push
sub
or
rorb
or
sahf
ret
xor
arpl
subl
int3
and
dec
jp
int
ja
cld
dec
ss
sub
mov
push
sub
ss
jp
pop
jmp
inc
sbb
imul
cmp
ds
scas
je
or
mov
ffreep
inc
clc
inc
xor
es
add
js
test
js
sub
ss
stc
sub
jo
incb
mov
out
push
inc
add
mov
imul
jecxz
lahf
add
and
mov
not
das
jbe
or
adc
in
mov
aad
insl
in
sarl
aas
repnz
scas
cmc
and
push
add
pop
aaa
add
mov
enter
add
jg
js
dec
cmp
clc
arpl
add
mov
test
sti
xlat
pop
sbb
jbe
stos
sbb
xchg
cmpl
icebp
dec
outsb
cmp
aam
outsb
add
mov
test
jo
xchg
jne
icebp
addr16
dec
shlb
xchg
xchg
cmp
mov
xchg
or
mov
and
fnstcw
sbb
cwtl
ja
in
pop
pop
sbb
mov
mov
fsub
sbb
pop
sub
cltd
lahf
jbe
mov
or
add
adc
sub
xor
lods
pop
stos
into
in
cltd
push
cmpsl
and
movsb
stos
mov
inc
int
xor
dec
mov
mov
pop
sbb
push
pop
mov
xchg
lahf
lret
xchg
fimull
adc
insl
out
stc
cmp
out
xlat
imul
and
add
and
nop
imul
and
fnstcw
xor
daa
mov
jge
or
adc
scas
mov
jae
cwtl
lds
call
xlat
in
js
mov
lret
inc
popa
out
sbb
cmp
push
pop
push
cmp
cmp
pop
test
into
sbb
xchg
gs
outsb
les
shlb
pop
sub
pop
and
mov
lcall
mov
daa
mov
repz
sbb
out
into
data16
push
movsb
push
in
xor
xchg
fisttpl
push
test
pusha
js
sub
xchg
jb
shlb
add
loope
fidivl
and
adc
leave
cmpsb
movsl
cmp
hlt
and
pusha
mov
adc
cmpsb
push
adc
jae,pn
cli
ss
mov
out
and
movsl
adc
mov
notb
inc
les
adc
push
mov
push
in
cli
xchg
jb
xor
shll
fs
and
bound
outsb
arpl
lock
or
mov
adcb
push
or
lret
and
sbb
adc
inc
out
cmp
push
mov
sub
ret
jb
out
js
mov
push
in
dec
dec
jg
in
mov
mov
push
sub
pop
lret
push
movsb
pusha
xchg
movsl
and
sbb
loop,pn
iret
xor
iret
mov
sbb
sbb
cmc
sbb
or
fwait
xchg
push
push
sysret
push
sbb
pop
rcll
mov
pusha
repz
xchg
dec
mov
mov
cmc
shll
push
pop
jae
sbb
ljmp
sub
addr16
dec
enter
out
and
adc
aas
sub
outsb
xchg
cmp
test
push
test
stc
add
jno
ficoml
push
inc
lret
push
sbb
cwtl
movsl
sbb
push
lcall
jnp
cmp
mov
aam
mov
sbb
lea
adc
lods
cmp
icebp
pop
es
push
pop
xlat
mov
repnz
les
das
notl
pop
dec
clc
jecxz
loop
lcall
cltd
pop
add
inc
shl
cmpsl
or
inc
and
mov
shlb
je
mov
dec
mov
sti
jl
lahf
lret
mov
inc
loopne
outsl
inc
mov
mov
sub
push
stos
mov
scas
inc
mov
push
dec
daa
fwait
mov
es
sbb
rcrb
push
add
loop
jl
cltd
aas
daa
or
jl
mov
icebp
pop
call
icebp
pop
lcall
or
inc
ds
sub
or
xchg
cld
stos
inc
xchg
das
push
pop
mov
inc
xor
ja
mov
sahf
cmpsl
decl
mov
out
xlat
out
faddl
shrl
mov
in
mov
das
xchg
and
adc
and
mov
inc
jno
xchg
lods
push
stos
movsl
xor
mov
rcrb
xchg
sbb
jecxz
push
push
int
sub
sbb
mov
cmp
xchg
lret
aam
and
push
rcrb
cmpsl
xorb
insl
popf
rclb
sbb
out
jne
push
inc
pop
rorb
mov
jae
cmc
inc
insl
movsb
out
lock
sbb
xchg
sub
and
jae
jecxz
andl
sub
dec
fcomi
in
pop
roll
fs
loop
popf
pop
iret
cmp
mov
jl
inc
lock
adc
lea
addr16
add
lea
mov
ds
sbb
movsl
fadds
in
xor
xor
cmp
or
cmp
repz
push
repnz
adc
mov
js
sub
xlat
into
outsl
mov
push
out
fabs
leave
shlb
lods
js
inc
out
out
out
cmp
sti
dec
xchg
cmpsb
pop
sbb
push
pop
sahf
push
xor
stos
lds
cmp
outsl
dec
adc
mov
out
mov
jmp
dec
rcll
and
add
fisubrl
pop
and
jg
jbe
xchg
jl
sahf
xchg
movsl
add
mov
add
in
out
xchg
nop
idiv
xor
fists
pushf
leave
addr16
sarl
mov
jmp
jae
jl
inc
loopne
out
aam
push
stc
clc
es
adc
jl
jnp
mov
add
popw
or
lahf
scas
into
xor
movsb
cltd
in
daa
inc
jl
stos
nop
push
fwait
jle
out
sub
mov
cmp
mov
jae
jmp
xchg
mov
rcrb
mov
inc
pop
xchg
dec
adc
mov
and
xor
fistps
jl
cmp
dec
test
cmp
stc
xor
mov
and
xchg
mov
dec
inc
lret
xor
mov
sbb
jne
sub
mov
mov
jl
xchg
xorl
lods
mov
cmpsl
aad
loop
jp
daa
into
div
test
aam
into
mov
fidivl
je
sub
out
mov
sbb
in
aad
popa
push
scas
and
js
cmp
int
cmc
fcoms
or
call
mov
add
jb
cmp
neg
or
sbb
subb
into
mov
add
cmp
out
push
clc
std
loopne
loope
jl
mov
out
push
or
out
shll
std
dec
sub
dec
hlt
xchg
scas
jae
mov
fstpl
cmp
push
gs
fcompl
jno
scas
sub
jb
gs
add
sub
jno
gs
push
sarl
aas
dec
inc
push
xchg
jl
dec
push
stos
out
lods
ret
inc
add
cli
pop
out
push
mov
in
outsb
xchg
adc
lcall
xor
sbb
xchg
and
jns
xchg
or
rcll
push
lods
sub
cld
pop
pushf
pop
lea
jb
mov
movsl
test
iret
xchg
jg
je
xchg
mov
xor
sbb
pop
xor
mov
cmp
jae
fwait
mov
lds
iret
ds
xchg
std
lret
xchg
mov
adc
stos
jg
xor
pop
cmpb
cmp
aaa
xor
stos
out
sub
lret
movsl
pop
loope
shll
leave
pshufw
lret
dec
push
loop
mov
pop
mov
sbb
popf
xchg
int
lcall
sub
adc
outsl
xchg
in
incl
lret
adc
mov
or
push
mov
loope
data16
test
fbld
jnp
stos
js
retw
xchg
and
mov
sub
pusha
fsubp
int3
sub
out
cmpsl
adc
lea
repz
jnp
cmpsl
dec
inc
arpl
inc
repnz
sbb
mov
pop
aam
sbb
mov
or
pop
fldlg2
popa
test
fnstsw
outsl
adc
in
adc
jecxz
xchg
jp
push
lret
aad
adc
aas
data16
mov
out
push
popf
int
jnp
push
or
jns
sarb
jb
jnp
cmpsb
push
cmpsb
or
hlt
push
out
out
inc
clc
testl
jns
js
xchg
stos
and
imull
fists
je
inc
push
imul
lock
std
enter
out
lods
outsl
test
and
fists
cmp
jl
or
cmp
jmp
and
mov
push
sub
imull
cmp
push
mov
icebp
xchg
push
int3
cwtl
das
fists
and
fs
aas
imul
in
mov
cmpsl
incb
mov
xchg
test
or
sub
pop
out
jl
cmp
pop
jae
xorb
pop
xor
cld
and
and
push
pusha
icebp
jge
std
sub
jge
lods
push
pop
mov
add
add
push
je
leave
push
mov
outsb
xchg
outsl
xor
aad
mov
jle
mov
stc
mov
dec
inc
push
sbb
mov
pop
test
out
pop
mov
lods
add
cli
mov
bound
std
sbb
dec
cli
lods
mov
jcxz
inc
dec
test
cs
and
cmp
xor
cld
jnp
insl
adc
or
adc
xchg
lods
rorb
sbb
mov
push
cs
test
repnz
fcompl
insl
mov
into
out
sbb
fs
out
vmwrite
faddl
pop
ficoml
jp
daa
xor
xchg
andl
fisttps
inc
pop
ret
cmp
mov
movsl
jge
je
enter
dec
test
movnti
cs
call
cmp
test
push
jmp
dec
aam
imul
sub
iret
jmp
fneni(8087
sbb
lods
cmp
nop
or
xchg
inc
ds
mov
ret
push
lahf
mov
mov
xor
jp
mov
xor
idivl
bound
inc
addr16
mov
pop
data16
push
xchg
sbb
dec
stos
push
xchg
mov
hlt
mov
push
mov
fdivs
inc
andb
mov
sbb
xchg
fistps
lds
ljmp
aam
test
adc
iret
or
testb
push
imul
adc
mov
sub
ljmp
and
addr16
movsb
jns
sbb
pop
sub
imull
adc
mov
ret
add
jno
loopne
lret
gs
pop
push
cmp
arpl
xor
dec
mov
das
dec
mov
adc
vpsraw
bound
sbb
pop
pop
ljmp
xor
xchg
push
cmpsb
cld
outsb
mul
pop
adc
punpckhdq
dec
insb
xlat
jo
pop
xchg
out
mov
int
jmp
xor
or
jno
sahf
jl
and
adc
cmp
fstpl
jno
sarb
xor
add
test
cld
lret
insb
imul
fwait
xorl
or
xchg
mov
shlb
repz
xlat
pop
stos
sbb
pop
aas
call
stos
mov
and
nop
push
push
shl
ljmp
loope
fs
movsb
cmp
gs
pop
scas
gs
inc
jle
insb
rcrb
and
fcomi
pop
mov
data16
inc
xchg
sbb
fsub
sti
sub
jns
mov
or
xchg
sti
outsb
inc
jecxz
adc
ja
xchg
dec
std
or
test
scas
jge
inc
and
nop
mov
cld
outsl
sti
jns
dec
jb
sbbl
imul
xchg
inc
jle
les
mov
das
out
push
inc
or
push
mov
sti
sbb
sbb
pop
imul
and
mov
pop
sub
xchg
sbb
push
pop
in
mov
cmpsl
fdecstp
jae
fisttpll
sbb
lds
rol
adc
movsl
push
or
icebp
loope
sarl
scas
fucomi
mov
jle
pop
out
mov
setp
pop
imul
mulb
out
sbb
sti
lods
dec
mov
fbstp
push
jae
pusha
js
les
cmpsb
xchg
pop
jns
mov
sahf
out
in
test
in
fs
aam
repnz
cmovno
cmp
sbb
notl
mov
cwtl
loope
pop
dec
inc
addr16
sub
lret
sahf
inc
push
xchg
pop
fldcw
sub
movsb
rorl
idivl
hlt
fcmovb
push
dec
pop
push
out
fcomp
sbb
or
lods
push
mov
pushf
adc
sub
xchg
lret
push
lret
xor
aaa
shrl
pop
and
dec
loopne
push
xor
xchg
xchg
mov
aas
pop
jnp
test
ja
rcrb
stc
pop
idivl
cmp
pop
adc
imul
xchg
inc
popa
cmp
mov
mov
cmpl
pop
xlat
cmp
cld
or
aaa
out
sbb
fisubrl
es
sahf
dec
and
imul
jae
pop
jl
outsb
leave
data16
insb
pusha
pop
xor
pop
loope
test
loopne
call
andb
xlat
pop
insb
popa
ljmp
lret
scas
push
mov
or
inc
mov
ror
jne
fistps
mov
sub
pop
sub
scas
mov
dec
daa
cmp
jge
mov
pop
mov
je
cmp
fistl
js
sub
add
pushf
sbb
dec
loop
mov
and
sbb
jl
mov
and
sub
std
rol
dec
xchg
push
mov
leave
jne
cli
mov
das
push
loopne
add
inc
aaa
shlb
push
mov
and
imul
cmp
mov
jns
inc
push
mov
and
or
lds
xor
test
ret
sbb
jecxz
int
xchg
push
mov
daa
roll
into
push
push
pop
xor
lods
adc
ffreep
push
fdivrp
divl
lcall
adc
add
push
or
or
push
jne
jnp
adc
aas
pop
jg
mov
stos
icebp
sub
gs
mov
daa
mov
mov
popa
adc
icebp
xchg
pcmpgtd
and
or
sub
and
fisubs
sub
movsb
faddl
sub
inc
sbb
sbb
pop
add
frstor
xor
popa
add
mov
test
ret
pop
mov
lock
enter
arpl
out
pusha
rclb
aaa
push
sub
add
inc
adc
add
xchg
xchg
push
push
add
inc
mov
outsl
add
push
dec
inc
mov
cmp
push
insl
push
mov
pop
dec
outsb
pop
push
outsb
xor
dec
push
sub
aam
mov
sahf
int3
sub
das
lahf
sub
jno
xchg
je
popf
pop
repz
push
aaa
xchg
out
cmp
stos
push
daa
lret
xchg
pusha
out
mull
xor
cmc
out
pop
sub
bswap
mov
jecxz
adc
add
mov
lods
mov
inc
jno
mov
cmp
inc
sbb
xchg
xchg
jge
add
add
pop
dec
pop
jge
push
xchg
ret
push
cmp
cmpsl
sub
mov
cmovbe
aam
in
push
mov
sahf
test
cli
pop
mov
das
xchg
icebp
loopne
xor
fucomi
cmc
iret
scas
pop
jbe
lods
cmp
lahf
dec
jbe
out
jl
pop
cwtl
mov
sbb
jmp
mulb
adc
mov
das
dec
enter
add
jle
in
das
lods
adc
mov
loop
or
jecxz
gs
pop
push
rclb
push
xchg
iret
out
in
sti
sub
xchg
fistpll
fadds
inc
add
aas
in
movsl
xchg
sbb
sbb
push
test
jb
mov
scas
push
repz
bound
mov
repz
mov
or
jne
ss
into
sub
js
insb
bound
pop
xchg
sti
sbb
xor
loopne
adc
push
sahf
lea
popa
adc
cld
in
dec
addl
cld
ss
jl
leave
jnp
into
leave
daa
rcr
mov
aas
add
sbb
loop
lods
sbb
fs
jns
jbe
sbbb
divb
pop
push
pop
jne
and
nop
out
lds
ljmp
stc
sbb
mov
jo
insl
arpl
mov
mov
sub
inc
cmp
fdivl
test
int3
sbb
pop
mov
jae
ss
mov
int
dec
fwait
jp
lahf
aas
pop
outsb
shl
cmc
jmp
xchg
lds
fildll
movsl
ret
fadd
mov
imul
movsl
in
fsubrs
adc
inc
insl
or
or
lock
mov
jl
adc
rorb
rcll
addr16
mov
lcall
jo
mov
iret
dec
cmp
xchg
dec
and
dec
fneni(8087
mov
add
stos
loop
and
mov
leave
in
rcll
fdivrl
sbb
cwtl
sbb
sub
add
adc
imul
push
repz
hlt
movsb
push
mov
mov
pop
sub
out
jmp
andb
imul
inc
in
data16
in
and
cltd
xchg
imul
sub
aas
cli
sbbl
out
into
jnp
aas
and
push
popa
icebp
mov
lea
sbb
jge
xchg
push
clc
pop
mov
adc
xor
dec
insb
adc
enter
mov
loopne
aas
xchg
adc
add
movsb
xorb
jg
push
mov
shll
into
aad
cwtl
xchg
loopne
cmp
xchg
mov
hlt
cmc
fsubrs
movsb
test
pop
stos
push
hlt
loop
push
xchg
mov
sarb
cmp
pop
ret
add
out
sub
jno
add
clc
pop
not
lret
std
in
or
lret
cs
jmp
mov
pop
lods
js
sbb
loop
dec
mov
push
jge
cmp
cmpl
push
cmp
in
cmp
mov
hlt
scas
daa
jnp
xchg
add
jbe
xor
mov
loop
stc
js
popf
lahf
xor
sar
lahf
icebp
test
or
jae
bnd
jo
jp
ds
jnp
xchg
shrl
push
xor
jmp
push
dec
test
mov
cld
sbb
adc
adc
pop
push
pop
loop
xor
mov
in
andl
xchg
cmpsl
mov
fnsave
divb
adc
cmp
lcall
and
insb
jge
arpl
pop
insl
xchg
decb
rolb
mov
in
aas
ja
hlt
imul
int3
mov
aad
lret
mov
mov
mov
test
jns
lahf
call
sbb
rcll
aam
sahf
xchg
int
and
adc
pushf
rcrb
and
sarb
inc
sub
add
xchg
dec
out
push
sbb
shlb
xchg
mull
and
lods
mov
fwait
and
push
sub
loope
xor
cmpsb
mov
inc
inc
shlb
test
jno
mov
hlt
xchg
iret
push
stos
push
cmp
push
bound
int3
pop
xor
stos
mov
and
in
xchg
fdivl
cmp
add
popf
inc
cmp
scas
jo
sub
out
scas
movb
mov
xor
in
cmc
pusha
les
cmc
jg
imul
pop
mov
negb
rcl
inc
mov
sti
jnp
dec
in
dec
xlat
inc
push
dec
rorb
mov
pop
dec
inc
lock
cmpsl
fsubr
loopne
sbb
movsb
cmpsb
cmpsb
popf
dec
mov
lds
inc
add
mov
adc
sub
xchg
int3
add
jns
cli
cmp
sbb
lds
xchg
loop
mov
jge
dec
fcompl
mov
loopne,pt
xor
mov
xlat
mov
outsl
int
cwtl
in
jl
mov
dec
ss
mov
mov
test
fs
jno
testl
in
add
adc
cmpsl
dec
in
es
insl
sub
mov
fs
imul
mov
adc
dec
int3
lods
aad
jo,pn
outsl
inc
dec
neg
ja
xorl
rcrl
int
jne
inc
fwait
sti
test
lcall
pcmpgtd
lock
jl
in
jl
cwtl
jo
scas
outsb
dec
negl
jp
mov
adc
dec
outsb
ljmp
lcall
jg
cmp
test
addr16
push
imulb
mov
into
insl
push
cli
cmp
test
popl
push
push
mov
jp
mov
aam
jmp
rclb
lahf
cmp
push
dec
mov
mov
jle
iret
stos
cmova
and
xchg
xor
mov
adc
pop
jg
gs
aas
adc
jnp
push
jnp
dec
shrl
and
add
mov
stc
or
rcrb
dec
jg
inc
call
sbb
lret
arpl
xor
test
ljmp
xchg
fisubrs
cmpsl
adc
clc
mov
aaa
test
pop
mov
mov
inc
jmp
xchg
or
jg
lret
jg
arpl
testl
inc
movsl
pop
pop
fwait
cwtl
aas
in
sbb
ret
pop
popa
add
mov
jle
or
aad
aad
sub
dec
inc
cmpsl
arpl
fmull
scas
sahf
xchg
dec
lea
bound
outsb
dec
sbb
lds
jns
adc
stos
sbb
pop
sbb
cwtl
in
popf
jge
fcom
insl
mov
pop
aas
fs
xlat
ret
pop
adc
mov
fcoml
jp
stc
xor
sbb
arpl
cmp
mov
and
ficompl
push
cmp
popf
mov
cmp
lods
jl
mov
imul
xchg
repz
dec
shll
dec
out
mov
pusha
dec
xchg
jge
rclb
inc
mov
aaa
mov
adc
fsubrl
and
mov
jg
ret
les
scas
sahf
je
stos
cmpsb
jno
add
inc
nop
pop
lods
or
adc
pop
fidivrl
aas
movsl
sbb
insb
push
int
fwait
es
dec
push
mov
movsl
mov
pop
loop
xor
sub
in
dec
dec
mov
rclb
xchg
std
mov
sbb
mov
out
mov
jmp
mov
rol
outsb
sbb
cmp
xor
pop
xor
inc
in
xor
mov
xlat
and
add
and
es
sbb
adc
add
test
add
std
shll
dec
inc
leave
mov
pusha
push
and
and
sub
cwtl
pop
out
enter
mov
push
int3
inc
ja,pt
fwait
nop
fsts
jle
xchg
jb
mov
mov
and
pop
cmpsl
xor
ret
mov
in
or
lds
push
and
pop
add
mov
sbb
ret
mov
loop
push
inc
nop
jmp
into
mov
sub
xor
data16
pop
jecxz
sub
sbbb
pop
mov
inc
cmp
pop
pop
mov
or
mov
cmp
and
cld
hlt
int
aad
jg
xchg
sbb
and
inc
cmp
lret
ljmp
and
mov
mov
das
not
add
inc
xor
xchg
mov
inc
pop
mov
mov
and
cmp
cmp
imul
ret
cs
mov
cltd
add
mov
fists
shl
ds
dec
int
sub
test
or
sub
cmp
ret
or
mov
xor
or
sub
inc
adc
fidivs
outsl
fbld
pop
call
idiv
or
stc
arpl
repnz
sub
add
mov
dec
adc
adc
add
xor
dec
aaa
loope
pusha
sbb
fcomi
inc
dec
push
dec
in
loopne
add
imulb
xor
jb
loop
fs
bound
xchg
add
mov
movsl
xchg
movsb
movsb
cwtl
mov
mov
jo,pn
jl
xor
scas
or
cmpsb
push
cmc
or
dec
pop
addr16
or
lock
push
sbb
push
pop
mov
jb
aam
cmp
ljmp
xchg
gs
xor
outsl
imul
int
xchg
push
icebp
dec
sbb
ficomps
lods
adc
popf
sub
sub
mov
cmpsl
jo
add
or
pusha
iret
jg
push
push
push
mov
add
add
xor
push
aaa
and
sub
lods
nop
lods
push
push
idivl
xchg
push
les
pop
sbb
sub
sbb
jae
cmp
cmpsl
out
ja
out
clc
daa
mov
pop
add
je
mov
ds
xchg
lock
sti
cli
nop
cli
cmp
push
dec
push
repz
cmp
repnz
add
dec
xor
pop
cs
cmp
outsb
rolb
mov
ljmp
cs
mov
dec
and
push
xchg
shlb
cmpsl
xor
xor
add
inc
loopne
out
aas
fwait
mov
jl
sahf
flds
pop
cmp
out
mov
push
mov
mov
sti
pushf
hlt
flds
push
fadds
lcall
or
cmp
mov
notl
mov
movsl
dec
les
pushf
shll
mov
xor
adc
rcrl
and
outsl
pop
fadds
xchg
shrb
push
xchg
jbe
dec
add
ret
adc
ret
stos
jbe
sub
and
jp
push
add
stos
xor
sbb
incl
mov
frndint
jo
mov
push
push
daa
loop
push
shrl
pop
xor
jnp
insl
out
mov
xchg
out
rolb
loope
stos
pop
jmp
std
add
pushf
push
cs
sub
and
xchg
push
cmp
mov
test
std
ret
faddl
lds
into
aas
out
pop
add
rcrl
pusha
lods
xchg
mov
pop
adc
dec
psubusb
lret
test
out
mov
mov
jno
push
xchg
and
mov
cmc
inc
in
push
stos
das
push
xchg
nop
dec
inc
movsl
stos
cmp
jnp
and
jbe
dec
mov
idivl
push
push
test
push
andl
flds
pop
push
mov
daa
push
fwait
clc
cmc
xchg
test
inc
adc
xor
fists
xchg
fs
dec
mov
cld
out
push
repnz
mov
mov
inc
mov
arpl
addr16
addr16
sar
sub
jnp
xor
dec
mov
sbb
mov
cmpb
mov
or
jne
mov
pop
fcmovne
mov
loopne
push
jg
ljmp
in
and
push
das
lret
mov
jo
repz
outsb
cmc
ss
fisttpl
addr16
push
jmp
add
mov
fisubrs
in
jns
cwtl
push
pop
fisubs
pushf
popf
sbb
lcall
mov
cltd
cli
sub
fcmovu
int3
cmp
xor
inc
mov
clc
and
jle
mov
daa
into
mov
cmpsl
repnz
mov
and
jge
pop
das
stos
test
je
and
xchg
inc
les
adc
icebp
jne
add
xor
sahf
in
mov
or
lcall
std
mov
xor
lods
jl
cmp
xlat
mov
xor
pop
mov
dec
add
rol
adc
lock
cmp
push
clc
popa
lock
xor
xlat
pop
icebp
test
dec
iret
and
out
jl
ret
stc
cmp
or
push
xor
mov
cs
stos
cmp
dec
insl
xchg
rclb
fwait
insb
jle
repnz
out
in
shr
sbb
xchg
hlt
sub
xchg
adc
cmpsl
push
and
mov
das
or
clc
fwait
icebp
imul
xchg
dec
sbb
in
aam
loope
mov
rcll
mov
test
xchg
push
lods
rcrb
in
loop
or
test
mov
mov
add
scas
pop
ds
fbld
mov
dec
fldenv
popa
iret
mov
sub
jmp
iret
inc
cltd
push
push
dec
sbb
jp
or
jns
pop
adc
pop
fisubrl
or
mov
mov
xor
movsl
fnstsw
xlat
test
daa
ja
or
aaa
mov
or
jp
adc
lds
cmc
xchg
jno
xchg
xchg
pop
jle
mov
notl
sbb
pusha
pop
mov
imul
pop
xor
ja
cmp
popa
pop
pop
push
cmp
push
es
leave
mov
loop
out
fwait
imul
pusha
xchg
or
push
adc
fidivs
repz
fmull
flds
add
xor
sub
adc
push
mov
push
ja
xor
sarb
xlat
push
add
insb
int3
xchg
pop
lahf
mov
adc
iret
sbb
push
lds
std
mov
pop
divl
mov
cli
outsl
mov
nop
pop
stc
sbb
aas
daa
in
xor
int3
inc
in
sbb
fucom
push
add
sbb
sti
sub
pop
mov
mov
mov
cmp
pop
out
mov
ss
add
dec
pop
sub
push
out
sar
jmp
jg
mov
js
adc
push
cmpsl
or
jnp
cs
pop
sahf
and
mov
iret
jno
or
test
xor
popa
test
add
popa
jns
stc
mov
xor
rcll
cmp
in
loope
mov
mov
sub
dec
loopne
push
xchg
jns
loope
push
push
cmpsl
pop
lahf
push
xor
nop
ficomps
test
fdiv
pop
jo
push
mov
fstpt
sti
jmp
and
sub
push
lahf
mov
aad
rclb
jno
test
in
mov
xchg
sbb
sbb
ret
daa
add
dec
mov
mov
lret
dec
jmp
jns
test
mov
popa
add
dec
sub
out
lcall
insb
push
je
pop
outsl
adc
enter
cmpsl
xor
lret
xchg
dec
in
sti
fadds
adc
and
xor
andb
shrb
fsubrs
cmp
lock
adc
ljmp
aad
in
and
mov
sbb
sbb
pop
repz
inc
jae
cmpsb
jnp
test
xor
scas
cmp
inc
xor
gs
add
sbb
dec
mov
jns
loop
aad
cmp
test
aas
enter
shlb
pop
mov
mov
inc
in
scas
ror
jno
out
scas
sbb
adc
xchg
popf
adc
subb
jmp
cmp
lods
adc
sti
mov
xor
inc
jno
dec
mov
mov
enter
popf
movhps
mov
mov
cld
push
sbb
stos
aaa
dec
int
movb
incl
test
outsl
iret
mov
out
and
push
xor
sbb
pushf
cld
cmp
gs
xor
mov
lods
add
sbb
aas
xchg
sbb
insl
inc
insb
mov
mov
cmp
scas
mov
mov
xchg
and
xor
xchg
aam
sahf
or
lods
sub
xchg
subb
push
mov
xor
enter
int
push
lea
lahf
aam
mov
icebp
ja
jmp
mull
rorl
mov
sub
loopne
mov
mov
in
adc
add
mov
fstpl
xchg
sub
adc
xchg
inc
scas
cwtl
rcrl
in
mov
push
sarb
hlt
fcmovnu
lea
icebp
ja
test
push
popa
and
or
mov
cmpsb
lds
cmpsb
iret
in
pop
lahf
push
push
pop
lahf
xchg
mov
icebp
les
repz
movsl
les
test
push
faddl
and
fistps
aam
pop
push
rcrb
js
xor
jne
faddp
dec
call
ret
lret
bnd
jle
sti
sahf
outsl
sbb
sbb
sbb
jae
inc
and
and
cwtl
jns
jo
xchg
cltd
mov
mov
mov
aas
and
dec
cmpsl
mov
mov
xor
movsb
inc
jle
push
dec
sub
push
call
gs
pushf
insb
pop
leave
jb
filds
int3
jmp
clc
nop
jns
add
adc
decl
mov
or
mov
jo
aaa
mov
xchg
daa
pop
cmpsl
jae
decb
dec
jle
jae
rcrb
push
xchg
sbb
mov
jmp
fstpt
xor
sbb
imul
and
jge
pop
jbe
xlat
adc
and
pop
mov
aaa
inc
pop
xor
fcomip
rclb
adc
cmp
cltd
cmp
arpl
jmp
aas
mov
dec
loope
loopne
cld
dec
icebp
fildl
mov
mov
into
nop
in
in
cmp
cmp
mov
and
iret
loope
sahf
sbb
sbb
sbb
sbb
out
dec
psubsb
xchg
xor
inc
roll
lods
stos
stos
xchg
fs
shrl
push
pop
inc
out
or
shll
loope
fildll
xor
adc
int
pushl
fstpl
add
sbb
aam
mov
inc
jecxz
test
repz
jl
mov
ljmp
mov
fiaddl
mov
stc
xchg
and
xor
jbe
fists
and
add
dec
insl
and
insb
fiadds
cmc
imul
sbb
int
pop
fiaddl
out
jp
and
cmpsl
in
or
cmp
jl
mov
sbb
mov
mov
pop
sub
inc
pop
and
cmp
push
xchg
mov
pop
leave
dec
rcl
cmp
cmp
repnz
lds
jnp
xor
adc
or
mov
pop
sub
movsl
pop
sub
int
dec
aaa
xchg
aaa
je
ret
mov
mov
mov
pop
lods
insl
mov
packssdw
lret
repz
imul
or
sub
mov
incb
cmpsb
sbb
out
push
test
pop
leave
les
cmpsb
in
in
in
aaa
add
or
cs
xchg
loop
sub
out
cmp
sbb
push
sti
fnstsw
mov
sti
cld
ds
mov
mov
int
cs
cmpsb
loope
lods
mov
mov
and
das
sbb
test
sbb
cmp
add
movsl
insl
mov
pop
lods
push
sarl
jge
in
popa
push
stos
out
cmp
sbb
test
add
pusha
or
and
push
jae
xchg
test
mov
inc
iret
mov
adc
popf
push
mov
daa
ret
inc
xchg
nop
and
jns
and
mov
mov
insl
addr16
lods
jl
push
shll
sarb
js
xchg
cs
loopnew
aas
cmpsl
and
cmp
jbe
movsb
enter
cld
in
jb
dec
add
cltd
insb
enter
mov
adc
test
sub
inc
imul
inc
xor
inc
ljmp
pop
pop
insl
sbb
xor
inc
outsb
std
ret
push
ss
pop
inc
xor
ljmp
cmp
sub
xlat
pop
and
loop
cli
testl
iret
dec
pop
rcrb
pop
jmp
and
xlat
xchg
ficoml
lea
fxch
or
xchg
leave
decl
out
hlt
popf
push
jg
jne
xor
mov
pop
jb
push
cmpsb
lret
fldcw
mov
fistpl
fs
push
jns
mov
call
cmp
xchg
pop
neg
cmpsl
cmpb
dec
ret
dec
and
xchg
sub
sub
dec
loopne
out
pop
sbb
jnp
mov
inc
lret
add
push
cmp
dec
mov
in
fwait
loop
inc
cmpsl
inc
push
push
das
pop
mov
andb
cmp
movsl
lea
sbb
or
lahf
scas
sbb
sbb
xor
inc
adc
add
scas
lret
jecxz
xchg
movsl
pop
cmp
stos
leave
adc
cld
sahf
dec
addl
jl
sti
out
xchg
pop
data16
and
fisubs
inc
dec
push
pop
int3
push
sbb
arpl
das
mull
or
jne
push
jno
sub
stc
dec
push
and
jnp
outsl
xlat
mov
icebp
mov
lea
add
ljmp
movsb
cmp
cmc
lea
dec
jb
sub
cmp
std
pop
popf
adc
pusha
in
cltd
movl
adc
rorb
pop
mov
sahf
inc
lods
sbb
fiadds
adc
jge
adc
sub
rclb
sahf
out
bound
dec
dec
lods
push
les
xlat
arpl
push
adc
addr16
xor
imul
push
cld
cltd
lcall
cltd
repz
ja
mov
push
inc
sahf
repnz
lds
sbb
cmc
jae
fistpll
fwait
pushf
push
mov
imul
pop
sbb
cmp
outsl
shl
jge
sub
dec
jno
stc
test
pushf
mov
cwtl
sub
lock
mov
dec
int3
xchg
sarb
scas
pop
mov
adc
jp
lret
imul
inc
xchg
add
mov
fwait
adc
ds
cmp
jle
and
adc
int
mov
jns
pop
paddq
arpl
sub
inc
lock
data16
clc
sub
in
sub
pop
hlt
mov
in
mov
icebp
jbe
js
rolb
xor
fsubrl
or
push
or
pusha
pop
lret
movsl
xchg
repz
pushf
adc
std
pusha
jp
out
movsb
out
lret
aaa
and
xor
iret
sbb
iret
rep
xor
inc
aas
xor
fs
stos
jnp
int3
sti
jg
cmp
orb
mov
jge
pusha
call
xor
fbstp
pop
push
mov
cld
je
adc
nop
push
stc
sbbl
jge
fiaddl
int
in
dec
testl
addr16
test
mov
inc
imul
mov
cmp
xchg
sbb
mov
imul
jae
shlb
fldenv
out
dec
out
jne
jo
adc
mov
stos
cs
in
sub
movsl
and
cmp
lret
test
ret
dec
outsb
sub
cmp
pop
imul
insb
push
mov
push
test
cwtl
pop
cmp
dec
xchg
aaa
hlt
mov
mov
sub
cmp
pop
sub
inc
pop
or
xchg
lahf
or
cmp
imul
lds
pop
test
sahf
ret
adc
repz
ffreep
push
jo
mov
cs
lock
dec
out
jns
mov
mov
mov
xchg
movsl
mov
add
mov
jo
jg
cmp
stos
mov
gs
sub
cld
jl
sbb
int3
popf
or
mov
jge
mov
pusha
add
and
mov
push
mul
shrl
roll
pop
xchg
jns
sbb
lret
pop
cmp
cmp
fmull
fstl
test
stos
test
shl
dec
jae
sbb
cs
pop
inc
cmpsl
xchg
aaa
xlat
xor
cmpsb
stos
cmc
pop
pop
movsl
mov
insb
xchg
push
and
xchg
jg
xchg
mov
dec
add
jge
xchg
xchg
push
inc
ja
cltd
cmpsl
mov
leave
pop
loopne
fwait
pop
mov
call
push
imulb
in
adc
aam
dec
xor
sbb
xchg
jne
adc
out
ds
pop
or
out
push
cli
jge
bound
inc
sti
lcall
iret
jo
adc
or
push
sbb
jbe
data16
xlat
dec
push
mov
repz
adc
scas
loopne
cmp
adc
jg
xchg
aam
and
adc
xchg
sub
pushf
jae
imul
or
dec
add
inc
aas
js
add
cmp
sub
adc
pop
push
sub
faddl
jns
fst
mov
mov
cmp
cmpsl
mov
lock
cmc
pop
push
cmp
loopne
aad
mov
lods
mov
ja
rcl
mov
jmp
mov
xor
enter
cmc
pop
or
inc
sub
lret
es
dec
in
mulb
add
push
mov
loopne
ret
stos
addr16
dec
inc
out
jno
dec
mov
add
rcrl
mov
fdivr
fs
fnstcw
inc
mov
repnz
add
sahf
test
les
in
xchg
fxch
mov
xchg
push
imul
and
inc
in
or
addr16
dec
in
out
jg
arpl
cmp
pop
bound
lea
inc
hlt
and
int
pop
out
pop
add
adc
in
fs
fiadds
push
xor
leave
xchg
mov
cmp
sub
loop
pop
pop
bnd
push
shll
cmpsb
cli
jns
enter
ffree
mov
sbb
push
jns
aaa
jnp
or
inc
popf
sbb
xor
neg
cmc
dec
mul
scas
push
pop
mov
cmp
and
cmp
stc
inc
repnz
xor
repz
imul
pushf
push
je
pop
mov
enter
dec
mov
cli
sbb
div
testl
cld
ret
adc
jl
aas
sub
mov
data16
sarl
movb
xor
sbb
pop
mov
dec
arpl
jg
das
aam
add
push
mov
or
adc
or
pop
adc
sbb
stos
jp
stc
or
pop
adc
dec
fcompl
cmpsb
lahf
shll
xchg
test
jp
mov
stos
into
jg
out
and
xchg
jbe
mov
int3
dec
dec
adc
in
cs
inc
sti
aam
mov
or
outsb
out
cs
jnp
popa
fs
xchg
pop
pop
dec
sarl
mov
pop
sub
pop
mov
push
popa
and
outsl
into
pop
add
push
adc
lret
and
ss
dec
adc
mulb
mov
inc
repz
or
shr
into
pop
mov
mov
notb
lock
cmpsb
and
leave
js
iret
in
mov
dec
pop
jbe
xchg
nop
aam
jecxz
loope
dec
ljmp
cltd
adc
cmp
xor
xor
push
divl
xchg
inc
sbb
imul
sbb
cmpsl
ret
jno
fidivrs
xchg
rcll
or
jl
push
inc
rcll
std
into
sbb
xor
fcomps
lods
jne
pop
adc
dec
inc
inc
inc
cltd
jbe
cmpsb
mov
mov
scas
jb
and
mov
xchg
pop
adc
out
mov
lcall
rorb
icebp
int3
fidivl
push
in
lcall
popf
dec
rolb
shlb
jmp
push
std
stos
jno
pop
popa
or
jns
lahf
adc
sahf
and
inc
add
out
xchg
subb
adc
repz
inc
out
lods
sub
repnz
sub
hlt
lret
int3
cmp
pop
lret
iret
insl
hlt
stc
pop
pop
inc
mov
mov
dec
div
pop
shll
pop
xchg
jle
pop
das
or
stos
mov
fsts
xchg
bnd
int
aam
addr16
lret
cmp
cmp
fistpll
jle
xor
jg
push
mov
jb
int
pop
add
mov
bound
mov
loopne
pop
popf
xchg
in
repz
pop
cltd
jne
sub
dec
in
shlb
test
popf
mov
in
pop
clc
or
repz
leave
in
dec
hlt
dec
insl
sbb
mov
mov
add
ror
scas
adc
sbb
aam
jb
sub
addr16
xchg
fsubrl
cli
inc
das
xchg
adcl
push
fwait
in
cmpsb
dec
pop
push
cmp
xchg
shrb
sbbb
jb
daa
imull
jecxz
push
push
sbb
sub
pop
add
cmp
mov
push
adc
sub
out
mov
lea
cwtl
mov
test
enter
sub
shll
mov
xlat
xchg
cmp
add
ss
add
sahf
jno
jo
std
fstl
mov
cs
out
dec
aas
imul
daa
arpl
js
mov
shlb
adc
rclb
repnz
fsub
sbb
cmp
adc
aas
js
mov
movsb
dec
scas
repnz
icebp
icebp
pop
sbb
rolb
outsb
mov
popa
cli
scas
incb
pop
sub
jmp
es
repnz
dec
or
push
test
jne
jne
imul
andl
into
stos
dec
jnp
sub
sti
push
jmp
jmp
xor
mov
lods
ljmp
mov
sub
leave
popf
lahf
pop
cmp
push
mov
sbb
loop
xchg
pop
xor
arpl
ljmp
loopne
mov
mov
jno
push
cli
aam
fstpt
mov
jg,pn
testb
adc
dec
dec
in
fisubl
aad
out
add
rcl
out
rorb
jg
ret
std
test
dec
jnp
stc
rorb
fwait
and
dec
cwtl
je
adc
fdivrl
cwtl
xchg
inc
pop
test
jecxz
add
xor
sub
fcmove
repz
je
sub
adc
ljmp
fwait
in
add
imul
or
ljmp
add
mov
fidivrs
mov
cmp
pop
mov
repnz
fstpl
cld
idivl
bound
fs
shrl
jae
fdivp
pop
dec
int3
sbb
stos
mov
pop
test
mov
push
pinsrw
cltd
loope
jmp
sbb
mov
imul
out
lret
iret
sbb
jne
cmc
inc
push
xor
cmp
or
lods
lea
imul
adcl
xor
inc
das
outsb
xor
int3
push
cs
lds
test
mov
mov
jg
mov
mov
stc
jne
mov
xor
xor
inc
push
adc
xor
test
inc
in
and
dec
cmpsb
icebp
dec
cmp
or
inc
aas
cmp
xchg
cmp
jae
adc
jae
aas
bound
jne
int
dec
fucomp
sub
sub
ret
leave
add
dec
dec
xchg
pushl
aam
sbb
and
mov
cmc
lds
push
addr16
fdivr
mov
mov
and
ljmp
insb
daa
mov
cmpsb
add
in
cmpsl
cmp
xor
inc
ljmp
xlat
dec
dec
sub
jmp
jle
fisttpll
in
test
shrl
pop
cmp
jecxz
xchg
int
cltd
inc
bound
add
or
xchg
fdivrs
bound
xlat
xor
xchg
add
ss
mov
xchg
hlt
sti
loope
push
in
cmp
test
xlat
fsub
test
push
out
cmpsl
mov
mov
mov
sub
call
jl
roll
insb
out
pop
orb
outsl
push
push
movsb
mov
mov
loope
ficoml
cmp
test
mov
cwtl
sahf
xor
dec
sti
mov
rcr
stc
xor
loop
enter
mov
sahf
jecxz
test
enter
inc
in
je
fnstenv
js
cltd
inc
call
adc
dec
or
loope
cs
sbb
sbb
mov
mov
stos
sub
dec
lods
xchg
dec
stos
jge
push
jns
pusha
mov
push
fcoms
mov
cmp
jno
mov
ss
stos
data16
mov
outsl
test
lods
sti
cmp
cmpsb
push
inc
pusha
push
xchg
std
movsb
and
push
cmp
bound
jp
adc
mov
movsb
loop
dec
lahf
inc
mov
dec
push
xor
push
add
mov
push
inc
test
mov
cli
push
jecxz
add
das
mov
dec
in
mull
fcmovnu
and
fnstenv
and
mov
mov
sub
mov
loopne
js
in
int
add
jno
cmpsb
lret
call
mov
int
pop
lcall
outsb
jns
and
sub
enter
and
repz
push
adc
insb
inc
inc
sbb
nop
jae
mul
xchg
jecxz
dec
lock
xchg
pop
mov
jae
and
aad
insb
xchg
imul
xchg
fisttpll
and
sub
or
leave
push
inc
leave
imul
cmc
push
pop
xchg
inc
flds
sub
pop
shl
xchg
decl
xchg
or
jnp
jg
mov
in
adc
mov
cs
or
or
mov
and
data16
int
dec
cmpsl
push
cs
in
cld
mov
jle
fists
nop
lea
adc
dec
nop
loop
mov
pop
inc
pushf
and
imul
mov
scas
addr16
mov
call
in
das
scas
sarl
in
loop
adc
sub
lret
repnz
inc
jmp
enter
cmp
shrb
arpl
sub
repnz
pop
push
jecxz
and
pop
icebp
int
into
or
or
or
movsl
jp
dec
je
push
sub
xor
push
ja
add
out
das
idivl
imul
pop
dec
iret
mov
add
mov
mov
and
stc
lahf
inc
ljmp
je
add
pop
add
jge
and
jbe
sbbb
in
sar
pop
add
mov
adc
fisubrl
mov
call
mov
dec
push
out
push
mov
cmpsb
xchg
iret
push
jecxz
and
adc
shl
dec
test
ss
mov
cli
inc
jmp
out
loopne
mov
lahf
push
or
mul
sub
sub
ja
xor
lret
sub
push
xor
loope
mov
lds
push
aad
cld
pop
dec
mov
mov
mov
in
adc
dec
or
popf
mov
ficoml
push
sbb
add
jnp
out
sub
aam
mov
cmpsl
dec
in
dec
loop
inc
push
xchg
xlat
or
xor
int
push
mov
cld
jmp
outsl
out
pop
dec
popf
ss
push
dec
sahf
xchg
sbb
cs
aam
outsl
pop
arpl
pop
idiv
sti
push
xchg
xchg
repz
mov
xchg
das
in
mov
shr
imul
int3
fwait
xchg
dec
inc
rcrb
push
fstl
icebp
in
jb
push
sub
cmpsb
xor
mov
add
ljmp
xchg
mov
jmp
sub
shlb
dec
pop
sub
lret
jne
xchg
icebp
or
push
cmc
mov
jne
pop
pop
mov
aad
fnstcw
test
or
jg
fsubl
or
jg
sbb
push
sub
js
push
int3
jo
pop
cwtl
je
mov
and
add
push
pop
popa
jmp
or
push
jg
test
popa
insb
outsb
aas
loopne
mov
mov
cmp
push
dec
and
sbb
and
ret
repnz
ret
xchg
test
pop
ja
push
mov
mov
push
int
adc
imulb
mov
sub
in
pusha
inc
mov
in
mov
imul
fstps
stc
aaa
jecxz
lahf
jo
outsl
push
push
mov
movsl
inc
clc
xchg
and
dec
jb
or
jl
test
or
and
in
cmpl
adc
pop
imulb
jb
inc
dec
fstpt
xor
hlt
jp
pushf
cmp
cmp
stc
repnz
fwait
push
xchg
jle
nop
jb
insl
mov
sub
and
out
insl
mov
and
outsb
addb
cld
jo
add
fsubrl
ljmp
dec
and
std
xlat
testb
sahf
pop
mov
jno
mov
fcoml
lret
lds
std
cli
cmpsl
bound
dec
push
shll
mov
jno
mov
test
inc
shlb
dec
pop
fwait
lret
jns
scas
popf
xor
xchg
repnz
icebp
and
mov
adc
xor
in
mov
subb
push
push
mov
pushf
enter
mov
add
insl
int3
in
jecxz
loop
pusha
push
fidivrs
fwait
jge
mov
fs
xor
mov
mov
loop
or
pop
ret
cmp
cmpsb
clc
rorl
push
xlat
jb
xchg
push
ret
push
rcrb
shl
jp
es
cwtl
mov
mov
pop
jl
sbb
add
scas
aad
pop
mov
outsb
pop
and
dec
cmpsl
ljmp
xor
dec
lret
jmp
leave
enter
mov
and
sbb
rcr
mov
cmp
cltd
stos
test
or
ljmp
jge
dec
in
mov
js
mul
lret
scas
cmp
mov
push
xlat
test
mov
mov
in
or
movsl
cmp
mull
sub
push
jmp
or
mov
sub
movsb
mov
int3
fcomps
push
loope
dec
add
fwait
mov
movsb
dec
dec
jnp
and
ficompl
stos
xor
or
cmp
lcall
clc
rcrb
mov
loope
cmpb
roll
pop
push
iret
sub
push
mov
xchg
cltd
pop
ss
movsb
adc
lea
mov
mov
sbb
stos
aas
xchg
lahf
out
rcrb
in
and
cmpsb
movsb
push
jl
int
test
push
ret
push
mov
adc
les
fs
aad
into
ja
cmp
and
call
xchg
and
cmp
sub
mov
aad
xlat
pop
push
mov
or
test
cs
vmaxss
jbe
hlt
adc
push
adc
or
xor
stos
test
jbe
fiadds
pop
movsb
and
mov
inc
and
int
cmpsb
mov
aas
mov
and
push
xor
push
outsl
cmp
push
jae
push
bound
ja
jbe
jmp
add
add
inc
inc
enter
shrl
jo
jnp
sub
loop
cs
adc
and
cmpsb
bound
xchg
imul
xor
adc
cmp
pop
mov
adc
scas
jae
lahf
cmc
repz
sbb
test
iret
std
sbb
fwait
sbb
iret
jbe
fnstenv
ss
arpl
jae
mov
in
cli
addr16
and
jo
cmp
xchg
inc
fsubrs
mov
popf
push
push
add
lock
andb
jae
and
jns
dec
lahf
add
jbe
add
jnp
lcall
jno
mov
repnz
repnz
push
repnz
popf
mov
jne
out
inc
pushf
ljmp
cmp
int3
lods
out
sti
mov
out
mov
mov
pop
mov
mov
testb
jae
mov
adc
movsb
leave
adc
inc
jne
xor
stc
push
iret
sbb
int3
scas
mov
jne
jno
mov
outsl
int3
andb
or
xchg
ret
pop
cmp
imulb
jno
in
adc
push
icebp
jns
iret
adc
add
push
xchg
pop
and
arpl
push
push
dec
aam
loop
push
pop
or
or
sub
daa
push
jg
lea
fs
rep
das
rcrl
mov
push
cld
notb
mov
cwtl
inc
pop
in
and
fiaddl
xchg
mov
leave
stos
pop
sbb
push
imul
mov
fst
pop
ret
jns
in
mov
mov
push
mov
int3
lret
push
dec
pop
jb
sbb
js
sarl
rcl
and
xor
cmp
notb
into
mov
call
and
push
test
jne
jb
mov
lret
pusha
std
subb
fucomip
mov
inc
or
popl
or
jl
xor
notl
mov
rcr
push
insb
fistps
lock
aaa
adc
mov
pop
sbb
sub
mov
or
lahf
adc
mov
adcb
pop
mov
aaa
cmp
dec
dec
xchg
push
lods
inc
pop
mov
insb
xchg
std
hlt
int
mov
add
xor
stc
sbb
and
insl
xchg
into
jl
xchg
fcoml
fimull
fcom
stos
sbb
jl
inc
mov
out
adc
mov
ret
dec
test
xor
mov
xchg
mov
xlat
push
sbb
sbb
or
pop
push
fwait
xor
add
inc
cpuid
imul
dec
lret
hlt
push
lahf
xchg
mov
sub
jecxz
mov
mov
imul
sub
xor
jb
icebp
mov
or
cmp
aas
mov
cmp
std
mul
and
lret
loop
lods
ja
stos
lea
in
les
movsb
mov
mov
je
mov
cmpsl
fldl
mov
xor
sub
xchg
pop
sbb
fcoms
add
movsl
push
js
fdivrp
sti
mov
dec
pop
jmp
orb
push
mov
movsb
cmp
loope
cltd
lret
leave
out
jb
loope
into
xchg
outsl
shll
mov
pushf
sti
in
repz
sub
cmp
fiadds
pop
pushf
shrb
mov
cmp
mov
imul
cmpsb
pop
mov
push
inc
add
outsb
inc
mov
loop
cmp
mov
imull
lsl
push
ljmp
insl
push
cltd
or
cmpsb
add
cmp
sub
xor
push
lods
in
scas
ficompl
xorb
dec
ja
and
cmp
in
sbb
sti
cwtl
dec
lret
sbb
push
dec
in
inc
pop
icebp
xchg
and
push
insl
scas
cmp
and
insb
xorb
pop
imul
jnp
stos
push
sub
xor
pop
xor
loope
pop
adc
lcall
int3
fists
lock
popf
mov
lea
adc
jmp
jbe
jmp
outsl
sbb
sub
in
dec
adc
and
mov
xchg
gs
dec
or
adc
mov
dec
hlt
and
xor
push
movsb
xor
add
mulb
push
out
cmpl
in
in
jno
jbe
or
dec
lock
lret
pop
push
sbbl
icebp
test
popa
push
popf
jl
jle
daa
cwtl
les
mov
sub
daa
lds
jo
int3
das
fsts
cmp
cmp
push
xchg
pusha
test
xchg
mov
or
sbb
jne
xor
inc
negl
dec
dec
out
or
out
cmp
addl
es
test
add
scas
shrl
es
cmp
sub
popa
insb
fldenv
shrl
mov
movsb
ret
in
adc
insb
fstl
addr16
push
andl
pop
or
aas
add
push
push
pop
xor
jecxz
movb
test
lock
jp
addr16
inc
enter
hlt
lcall
push
add
pop
mov
dec
addr16
xchg
imul
stos
push
sbb
popa
pop
xor
pop
pop
cmp
subl
cmp
sub
or
call
or
jge
adc
test
adc
and
mov
inc
fdivl
xchg
leave
pop
mov
sarb
push
inc
push
sti
int3
xor
cmp
aas
popa
fisubrl
mov
out
mov
add
jns
ffreep
inc
and
shr
push
xchg
loop
cmp
cli
add
fs
or
push
vpsubusw
push
mov
mov
inc
lret
aam
mov
out
outsl
and
loop
dec
out
pop
jbe
out
pop
push
outsb
div
jge
pop
or
mov
iret
push
cmp
push
mov
cmc
outsl
pop
pop
ss
mov
inc
jns
in
pop
repz
xchg
outsb
jnp
test
mov
loopne
xor
loop
jns
adc
sbb
cmp
fs
and
insl
arpl
push
mov
rcrb
pop
push
mov
or
mov
js
lock
ficoml
popa
jb
clc
addr16
stc
shr
notb
flds
mov
test
sahf
push
mov
mov
jl
mov
or
shlb
pop
mov
mov
adc
pop
adc
fisttpl
flds
int
mov
lods
data16
cmpsb
loop
xor
inc
insb
xchg
lret
int
pop
ds
jno
in
orb
cmp
fsts
xor
fs
sbbl
adc
mov
in
out
inc
mov
mov
lods
jg
jae
repnz
pop
pop
out
addr16
lock
mov
mov
mov
add
iret
xchg
add
nop
mov
lds
push
xor
cli
popa
xor
mov
xor
lahf
flds
mov
adc
or
mov
mov
push
imul
jns
outsb
mov
push
cwtl
jl
pop
jbe
cmp
cld
push
fwait
inc
movsb
nop
repz
icebp
mov
loopne
jne
or
fcompl
mov
adc
ficoms
push
insl
jecxz
sbb
les
mov
test
mov
xor
mov
or
lea
cltd
add
xor
imul
lret
lcall
mov
ljmp
rclb
sub
fcoms
or
mov
leave
outsl
pusha
jno
fstl
lret
push
in
cmp
push
ret
or
jl
test
dec
loope
fidivrl
iret
push
pusha
outsl
cmp
neg
paddd
stos
fstpt
popa
sub
lret
stos
jmp
outsl
sbb
xchg
mov
and
insb
ficoml
mov
sub
imul
inc
pushf
mov
mov
sub
std
lcall
mov
loopne
cmpsl
iret
xchg
hlt
call
adc
pop
sahf
mov
es
sbb
insl
daa
scas
loope
sub
pop
sarb
in
movsb
movsb
lock
aaa
xchg
jno
ret
cmc
pop
xchg
jge
mov
dec
testb
fcomip
jne
icebp
and
add
fadd
icebp
adc
pushf
roll
out
jo
pop
cmc
lcall
fs
pop
cmpsl
mov
sti
addr16
ja
ret
sbb
jne
lretw
ljmp
in
clc
and
lret
xchg
pop
rcl
mov
iret
loopne
leave
faddl
mov
insb
push
mov
xor
fsubl
mov
outsl
push
inc
fs
push
jae
iret
ret
das
popf
mov
push
pusha
pop
aas
dec
sti
or
push
lcall
dec
insl
pop
xchg
and
dec
sub
lock
gs
leave
inc
in
cmpb
sti
rcl
stc
ficomps
pop
cmp
insl
lock
adc
dec
push
faddp
loopne
push
mov
push
and
gs
fildll
sbbb
xor
cld
outsb
stos
stos
les
mov
pop
outsl
pushf
mov
xchg
xchg
icebp
aad
xor
dec
repnz
adc
inc
mov
pushf
adc
cmp
sti
sbb
testl
lods
cld
int3
push
jecxz
and
push
push
loopne
pop
mov
ficompl
push
jnp
add
add
or
hlt
jecxz
std
out
mov
mov
ret
pop
movsb
aaa
pop
inc
movsl
in
jne
jbe
sub
xchg
xchg
scas
push
gs
mov
std
jns
inc
shlb
pop
insl
mov
or
fmuls
xor
adc
jns
es
jno
fcompl
inc
into
jne
mov
xchg
or
ds
jmp
and
adc
jmp
in
out
dec
jp
aad
mov
push
cmp
ljmp
sbb
add
flds
testl
insl
mov
or
mov
mov
dec
sub
xchg
out
pop
inc
lahf
push
cltd
xor
testl
lods
sub
jbe
stc
outsb
inc
adc
ljmp
jp
xchg
addr16
lds
cmp
push
sarb
mov
rcrb
loope
stos
in
in
incl
inc
xchg
ljmp
iret
pusha
mov
xchg
xchg
call
iret
xchg
lret
out
xchg
icebp
pop
aaa
sub
addr16
loope
cwtl
jno
adc
push
xor
rcl
jne
js
test
aad
xor
dec
xor
push
fidivs
xor
out
inc
test
movsl
sbb
scas
into
push
call
push
mov
fcmovb
jl
das
add
mov
mov
jmp
add
sub
xchg
xor
fldcw
iret
mov
pushf
jo
push
dec
add
push
sti
lock
ds
into
cmp
out
aad
xor
xchg
sub
cmpsl
mov
mov
mov
fsubrl
or
mov
pop
mov
movsl
jno
jno
outsl
adc
cmpsb
fdivrl
push
lods
or
into
jmp
lock
sahf
jae
pop
shrb
call
sub
jnp
cltd
faddl
ljmp
pop
stos
sti
adc
fidivs
mov
mov
push
xchg
jp
daa
inc
imul
jae
pushf
sub
movsb
into
shrl
adc
icebp
out
arpl
in
xchg
pusha
and
fildll
mov
out
aam
jnp
pop
sub
movsl
pop
mov
jecxz
stos
jge
add
cld
cmp
adc
mov
hlt
sbb
orl
mov
stos
enter
dec
imul
sbb
shl
push
mov
lret
sbb
cmp
or
ret
iret
xor
test
or
outsl
xor
jno
repz
dec
pop
aad
ficompl
int
xchg
shl
and
add
inc
call
fists
rolb
cs
xchg
shll
sub
shrb
leave
cltd
imul
push
pop
jbe
pop
in
mov
cwtl
stos
out
pop
mov
inc
mov
mov
jp
xchg
test
cmp
push
std
jp
in
adc
mov
adc
out
pop
xor
into
jae
xor
test
outsb
push
aad
mov
cmc
das
adc
xadd
into
iret
hlt
int
leave
imul
loope
loope
movsl
pop
push
std
rcrl
jns
cmp
mov
jo
fisttpl
aas
cmp
dec
sub
adc
pop
lods
js
cmp
or
jmp
rcrb
push
push
add
jae
mov
push
dec
or
pop
movl
cmp
xor
sub
and
fnstsw
addr16
fcmovne
add
lcall
std
lret
cmp
inc
and
sbb
xchg
and
pop
fmull
pop
xchg
rcrl
xchg
push
pop
adc
mov
sbb
xor
mov
sbb
pop
lea
add
mov
notb
jb
sbb
loop
popf
dec
mov
pop
std
loop
lods
jne
hlt
fdivrl
cs
and
enter
js
lds
aas
mov
jl
mov
scas
sub
mov
dec
cld
add
or
xchg
shll
mov
in
loope
insl
and
int3
push
sbb
and
shll
mov
sbb
xchg
int
jle
mov
lahf
jns
cmp
testl
lahf
in
js
inc
out
jmp
aam
lret
inc
rcll
xor
cmc
leave
out
shl
outsb
mov
shlb
pop
and
leave
mov
roll
daa
ljmp
icebp
cmp
sarl
aas
jbe
xchg
stos
cmp
fst
into
cmp
dec
inc
aaa
jecxz
dec
cmpsb
cltd
xor
mov
cltd
jb
cmc
sti
ret
adc
pop
sbb
movsb
push
lahf
outsb
xlat
cmp
add
push
aam
mov
xchg
sti
ja
cmpsb
inc
rcl
mov
movsb
jnp
cmc
aam
push
lds
mov
push
stc
mov
mov
fwait
sbb
push
cs
bound
sarb
jno
in
sti
xchg
add
lret
xchg
sub
pop
and
xchg
inc
and
shl
fstps
pushf
inc
sbb
iret
cmp
xor
iret
jbe
jnp
loopne
cmp
call
push
sarb
into
lret
push
push
cs
push
add
xchg
test
xchg
xor
and
cmp
scas
push
out
daa
inc
push
xchg
sahf
clc
mov
or
and
xor
bound
jg
dec
xchg
repz
xor
xlat
movsb
je
inc
jg
push
mov
into
popa
jge
push
ficoml
mov
adc
xor
outsl
xlat
in
repnz
cli
in
rcrl
pop
push
js
or
ret
lds
movsb
lahf
shrl
push
jns
mov
fcomps
cli
call
lds
scas
inc
push
push
ljmp
jg
mov
mov
mov
aam
ljmp
imul
or
paddw
rorb
adc
aam
repnz
lret
pop
aas
and
shlb
mov
mov
test
xchg
in
push
fstps
cmp
xchg
lret
jle
insl
sub
out
mov
xchg
pop
lods
call
inc
and
out
push
ret
mov
xor
clc
loopne
sub
orl
insl
mov
mov
cmpsl
iret
push
cmp
push
pop
popl
and
stos
mov
push
inc
and
xchg
push
clc
cwtl
pop
push
xchg
mov
es
call
int3
shll
movsl
jp
in
pop
in
mov
lods
or
pushf
insb
movsl
fisttps
jnp
test
jbe
inc
sbb
lea
jp
popf
or
mov
cmpsl
pop
mov
cmp
into
cmp
call
stos
or
fwait
xchg
data16
icebp
push
mov
les
rorl
shrl
sub
cmp
xchg
arpl
cmp
dec
xchg
cs
xchg
test
push
ret
pop
rolb
inc
rep
inc
cltd
int3
and
repnz
cld
js
pop
cltd
xlat
dec
sbb
outsb
mov
dec
cmp
lret
lds
xchg
or
loopne,pt
mov
iret
jne
and
and
mov
std
loopne
inc
sbb
xor
pop
sahf
and
in
adc
mov
imul
and
stos
jg
aam
sub
xorl
pop
jmp
xchg
movsl
fcomps
pop
icebp
pop
pop
ljmp
std
subl
pop
lods
test
fcompl
or
or
sub
jns
xor
xchg
pop
lds
leave
add
add
mov
push
xchg
cmp
pusha
stos
in
jge
mov
ljmp
add
push
sahf
mov
sub
lds
fiaddl
xchg
stos
ljmp
sbb
xchg
enter
fisttpll
shll
lds
jns
push
mov
popf
test
es
dec
pop
mov
sub
xor
push
popl
popa
orl
adc
inc
fadds
mov
idivl
leave
fsubr
mov
xchg
fwait
push
xchg
mov
into
cmpsb
pop
ja
push
daa
mov
xor
fwait
lock
mov
dec
nop
sub
mov
popa
xchg
pop
xchg
mov
insl
js
mov
rcll
dec
data16
rcrb
mov
inc
insb
adc
xor
movsb
lret
mov
mov
push
or
in
pop
shrb
sbb
shl
cmpsb
fldt
dec
push
xor
into
mov
fwait
xchg
and
scas
jne
ds
les
adc
stos
dec
sub
sti
lret
aam
out
or
ret
xchg
mov
insl
xchg
jns
inc
mov
pop
bound
ret
cmpsl
mov
cmc
fwait
sbb
sbb
test
or
clc
inc
pop
sbb
jnp
lret
leave
jmp
jb
sbb
pusha
and
mov
cmp
leave
addr16
lret
fyl2xp1
ds
enter
in
add
ljmp
test
add
push
fwait
out
xchg
jmp
int
fxch
dec
in
mov
sbb
clc
xchg
push
and
mov
lods
jecxz
test
pop
xchg
movb
pop
nop
jmp
dec
fistpll
lods
mov
addr16
push
xor
xor
ret
xor
lods
and
lret
inc
add
adc
mov
inc
push
xchg
add
sub
into
rcl
addb
push
sub
icebp
xchg
rcrb
cmpsl
jmp
sub
outsb
idivb
or
outsb
inc
push
xchg
jle
push
psubsb
lods
jne
pusha
incb
xor
inc
arpl
clc
test
dec
clc
insb
and
pop
imul
outsl
sbb
sub
jbe
outsl
jl
xor
dec
mov
pop
iret
repz
dec
rorb
jg
stc
xor
es
xchg
and
and
enter
xor
xchg
push
push
sbb
jp
mov
insb
outsl
adc
cmpsl
jecxz
xor
lock
xor
push
aam
xchg
cwtl
pop
cmc
xchg
test
into
cmp
mov
in
sete
jecxz
ljmp
outsb
es
or
mov
fistpll
sbb
lods
cmp
mov
test
jecxz
inc
cli
cmp
into
dec
mov
in
dec
inc
xor
mov
mov
sub
cmpsl
dec
dec
adc
pop
cwtl
arpl
fdivl
jmp
mov
xor
out
add
arpl
repnz
es
popf
mov
push
out
or
cmpsl
pop
jb
jecxz
inc
not
pushf
repz
xor
repnz
lds
or
jl
xor
shl
lods
mov
dec
xchg
xchg
xchg
fists
addr16
outsb
movsb
data16
push
dec
emms
add
fs
push
mov
out
lods
add
vpshad
xor
inc
xor
arpl
xor
idivb
xchg
jae
sbb
gs
inc
fdivs
daa
data16
cwtl
rorb
sbb
dec
jb
mov
jo
mov
sub
loop
adc
lods
xchg
call
movl
leave
pushf
call
aad
test
iret
bound
les
jecxz
pop
fisubrs
loope
aas
mov
mov
jp
mov
or
test
or
xor
jl
pop
cmp
xchg
fwait
pushf
dec
mov
pop
ret
sbb
cltd
in
cltd
out
iret
xchg
sbb
inc
lea
sbb
fwait
xchg
out
pop
imull
inc
xchg
push
iret
xor
stc
dec
fdivrs
in
loop
mov
adc
mov
daa
dec
in
lret
lea
stc
push
mov
add
imulb
imul
lock
movl
negl
pop
cmp
cmp
out
loop,pt
xchg
movl
dec
cmp
jg
leave
sbb
pop
pop
push
mov
sub
or
cmp
inc
add
jne
jo
fwait
mov
mulb
popf
mov
mov
out
jne
aas
push
lods
mov
mov
scas
inc
lret
mov
fistps
mov
rorl
xor
jmp
mov
not
cmc
mov
add
add
dec
sub
and
sbb
cmp
aad
negl
pop
or
mov
sahf
sbb
repnz
jb
jo
iret
mov
jnp
inc
in
pop
inc
or
jmp
pop
xchg
addr16
pop
shll
push
jne
cli
lock
or
inc
mov
loop
cmc
xor
xorl
pop
data16
xor
pop
xor
xchg
rcrl
or
sub
mov
push
pop
dec
cmp
loope
stos
rclb
imul
add
push
pop
sti
or
sahf
cmp
push
rcr
or
inc
push
lock
popa
push
push
cmp
enter
push
inc
sbb
cli
ds
xlat
in
sub
add
cmp
loop
mov
lcall
push
fistl
xor
test
fs
push
mov
leave
add
mov
inc
adc
sub
mov
in
mov
sbb
or
cld
fdiv
add
and
dec
outsl
repz
lcall
inc
gs
int
lcall
imul
pop
inc
mov
mov
fnstcw
xchg
ret
adc
rcrb
sub
pushf
cld
stc
inc
push
mov
outsl
lods
sub
xchg
mov
ficoms
lds
lret
gs
add
dec
ror
dec
cli
lcall
loopne
and
xor
fisubl
cmp
dec
adcb
xor
xor
dec
imul
das
test
xor
inc
sti
xor
imul
clc
jno
pop
test
and
sub
into
add
sbb
xor
adc
fidivrs
sbb
clc
push
aas
imull
jae
sub
cld
sbbb
mov
xor
stc
and
nop
xchg
mov
hlt
mov
in
push
sub
dec
lcall
and
xor
mov
dec
mov
sarl
pop
lock
lea
fcomip
aas
xor
popf
jl
lahf
push
out
jmp
shrb
pop
bound
dec
pop
insb
xor
shll
jne
loope
rcrb
mov
sbb
cmp
cmpsb
pusha
and
clc
mov
outsl
push
mov
dec
pop
out
call
icebp
xchg
inc
mov
out
cmp
fimuls
mov
popf
hlt
ja
cltd
stos
pop
pop
int3
sbb
fmull
das
lcall
icebp
jmp
ret
ret
adc
and
and
out
fdivs
xchg
fdivs
jl
bound
sbb
pop
xchg
mov
sub
lock
xor
rclb
inc
movsb
xor
gs
jg
pop
sub
jge
in
ret
lea
push
sub
or
xor
adc
enter
add
jnp
or
push
push
js
push
mov
icebp
xchg
testl
fcomp
push
mov
rcr
add
push
adc
imul
cmpsb
dec
mov
subl
jp
xor
mov
in
xchg
add
inc
xchg
outsb
into
pop
push
cmc
cmpsb
xor
in
mov
loopne
and
insb
mov
arpl
push
mov
mov
cmc
and
or
mov
pop
icebp
lcall
push
mov
and
push
fsts
dec
and
lea
xchg
cmpsl
mov
movsl
ss
inc
xor
scas
lret
push
dec
push
mov
rcrl
pop
popf
mov
mov
out
data16
cmpb
sbb
aam
and
aas
mov
iret
mov
jecxz
stos
adc
mov
ds
push
test
lods
clc
push
lds
dec
jge
mov
insb
repnz
xchg
in
hlt
adc
into
fsts
cwtl
lret
jp
adc
test
in
flds
fldcw
mov
popf
pop
insl
xor
xchg
xor
lret
lcall
xor
loopne
enter
shll
adc
hlt
mov
es
sbb
pop
inc
push
aam
andb
jae
jp
bound
arpl
push
test
mov
push
in
mov
loope
push
pusha
inc
sbb
jae
add
bound
cmp
inc
cmc
pushf
lds
dec
jb
cmpsb
stc
movsl
test
cmc
das
mov
inc
mov
out
xor
pop
xlat
add
pop
push
push
test
je
inc
pushf
inc
leave
xor
mov
into
xchg
stos
ja
or
stc
fisubrs
sbb
out
jns
dec
mov
and
repz
lcall
jle
xor
adc
push
arpl
inc
jecxz
dec
mov
dec
ficompl
outsl
xchg
in
divl
mov
cmp
roll
andb
js
pop
test
ljmp
jmp
lret
in
lods
sbb
sub
arpl
bound
mov
sbb
xor
decb
arpl
imul
push
jo
ret
and
ljmp
inc
sub
in
push
and
jae
adc
adc
add
push
mov
jae
flds
pop
jno
push
jo
or
push
div
icebp
push
xchg
aam
mov
cli
cld
lds
icebp
les
out
mov
nop
xor
jo
add
pop
xchg
mov
pop
mov
or
inc
mov
xor
loope
loop
scas
pop
sbb
push
pop
repnz
and
add
inc
push
xor
cwtl
nop
sub
add
dec
xchg
nop
rcll
lret
push
xor
jae
cld
cld
mov
xorl
inc
cmp
jae
in
jg
mov
xor
ja
lods
jge
push
fldcw
mov
push
mov
lds
ret
adc
mov
mov
inc
pop
ficoml
cli
mov
lcall
enter
and
pushf
jge
movb
cmp
shr
jnp
fidivs
add
fmull
clc
lahf
fwait
pop
test
call
or
lcall
push
push
das
lods
ljmp
push
call
cmp
lods
sub
jg
pop
pop
mov
in
cmp
adc
iret
cmpl
fidivl
xor
xchg
nop
test
mov
dec
in
mov
dec
mov
inc
push
xchg
nop
in
test
out
and
cmpsb
mov
mov
adc
repz
mov
or
mov
mov
xor
ja
fs
dec
xchg
sbb
or
or
lods
sbb
mov
nop
push
stc
dec
cmp
adc
adc
cltd
movsb
mov
pusha
mov
dec
xchg
push
cld
lahf
xchg
push
xor
pusha
xor
shrl
popa
sub
aam
mov
mov
adc
repz
ss
sbb
pop
call
jmp
lcall
lret
jnp
dec
shrb
out
scas
sbb
into
cmp
sahf
enter
dec
movsl
scas
xchg
das
fadds
out
push
mov
xchg
std
js
add
shl
insw
insb
pushf
rorl
push
sbb
mov
andl
push
sbb
jo
and
loope
xchg
dec
jo
jge
xchg
in
dec
and
add
out
in
icebp
shrl
and
cmp
push
xchg
cltd
icebp
fimull
daa
sub
aad
cmpsl
js
xorl
jnp
faddl
int3
jno
arpl
xor
push
pop
popf
out
or
ja
xlat
xchg
sub
mov
pop
inc
mov
ljmp
mov
pop
les
sbb
imul
pop
push
fstpt
lahf
iret
mov
pop
push
mov
hlt
dec
fnstsw
add
xchg
stc
sub
ss
ja
mov
in
in
sbb
push
xlat
repz
add
xor
fs
inc
idivb
inc
lods
xor
pusha
lahf
test
popa
scas
out
fnsave
std
adc
jecxz
out
stos
jecxz
outsl
cmpsb
mov
mov
pusha
cwtl
int
mov
sub
out
sub
cs
sti
push
cltd
adc
adcb
dec
loop
hlt
mov
mov
cmp
call
mov
daa
and
mov
inc
cmc
sbb
sbb
aad
xchg
insl
shll
jne
inc
lods
iret
stos
dec
rolb
xchg
jge
rcrl
jne
in
test
pop
sar
or
or
jae
inc
and
jb
sbb
cld
xchg
sbb
sub
lret
pop
mov
es
push
mov
arpl
inc
push
lods
or
fidivs
loope
sti
dec
xchg
shrb
sub
cmp
fildl
cmp
adcl
and
mov
nop
int
sbb
adc
cmp
lea
bound
or
inc
xchg
push
mov
fisttps
mov
sub
adc
test
fdivrl
add
cmp
or
fs
cmc
sbbb
jmp
push
pop
mov
lret
faddl
or
in
sarb
inc
pop
inc
push
or
fildll
pushf
adc
stc
mov
fld
sbb
rorl
insb
fwait
aas
idivb
jg
test
jecxz
xchg
xlat
ffreep
mov
aad
sub
insb
fsub
ljmp
dec
in
insb
jp
push
xchg
cmp
or
lock
mov
sahf
addr16
inc
mov
jae
or
cmpl
mov
sub
repnz
es
jnp
jle
cmp
aas
mov
shll
jns
into
mov
or
fcomps
pop
pop
ret
dec
xchg
cmpsb
mov
push
in
push
push
sahf
mov
insb
out
ret
jnp
sahf
cmpsl
jae
insb
scas
push
aaa
loop
jae
test
inc
cmp
pop
xchg
lds
adc
int3
hlt
loope
scas
aam
outsb
pop
and
std
fsub
das
js
pop
insb
xchg
arpl
rcll
je
and
cli
js
lahf
lcall
or
cld
mov
fwait
fcmovnb
cmp
inc
out
lret
dec
icebp
sbb
xchg
adc
imul
push
mov
inc
cmp
jle
xor
or
sbb
ror
pop
pop
sub
cmp
rolb
sbb
fwait
repnz
xchg
rorb
mov
out
negl
jne
or
insb
add
fdiv
insl
dec
add
xor
jne
pop
sub
jbe
daa
cmp
out
aam
mov
pop
push
in
sbb
adc
roll
data16
fisttpl
mov
mov
js
sti
iret
call
int
sub
ja
ss
fnstsw
popf
out
addr16
fistps
rclb
movsb
mov
test
mov
lret
xchg
add
mov
push
sub
mov
lods
adc
imul
les
jnp
sbb
dec
jp
ja
mov
mov
stos
cli
sub
xor
cmp
push
add
sbb
fwait
dec
iret
shll
mov
mov
aad
jb
or
mov
and
test
repz
into
and
and
push
xchg
out
inc
mov
data16
xchg
push
ret
cmp
mov
out
lock
arpl
addr16
jne
or
cli
adc
add
in
fstl
pop
pushf
gs
std
hlt
or
xchg
push
movsl
pop
pop
movsl
xor
xchg
nop
sti
xchg
xchg
test
nop
push
mov
imul
inc
and
dec
loope
or
popf
sub
cltd
clc
negl
mov
pop
idivb
cltd
fidivrs
outsl
jno
push
cli
cltd
ret
mov
imul
or
arpl
aas
adc
push
mov
out
or
outsb
repnz
mov
or
mov
insl
rolb
push
xchg
sub
enter
stc
test
faddl
lret
fcmovnbe
pop
xchg
mov
cmpsl
fwait
mov
mov
pop
or
xchg
mov
leave
cwtl
hlt
jge
subl
jecxz
xor
push
fbstp
xchg
sbb
shlb
idivb
sahf
mov
or
popf
xor
mov
dec
push
in
adc
decl
out
test
movsl
cmp
push
add
hlt
and
aas
add
mov
push
add
jg
lret
pop
jge
jecxz
scas
adc
addr16
mov
in
xor
sub
les
movsl
imul
push
xor
leave
mov
jno
leave
and
cmp
pop
mov
in
icebp
sbb
into
push
xchg
cltd
dec
and
movsl
test
push
sub
jecxz
sub
addb
repnz
popa
fmull
movsb
dec
in
sahf
lea
sbb
lods
das
stos
cmp
sbb
jle
ss
shlb
pop
popa
or
jbe
jl
sub
in
add
nop
xchg
test
and
adc
in
aam
in
mov
adc
sbb
mov
cmp
jno
lock
push
push
fwait
push
loop
xor
das
pop
cld
cmp
mov
cmp
icebp
dec
scas
pushf
add
jl
jne
mov
mov
lret
shll
mov
jns
das
sbb
mov
cs
hlt
inc
push
repz
mov
scas
in
dec
xchg
push
pop
in
jmp
or
xor
fsin
popa
or
std
aad
sub
mov
or
mov
add
rcrl
xchg
test
and
sahf
fistpl
orl
adc
shlb
dec
fs
sti
fildll
mov
imul
jae
jge
mov
sub
loope
pop
scas
mov
ficoml
cltd
push
cmp
or
cs
iret
sti
idivl
cmp
in
ret
mov
les
fsub
push
into
fcomip
inc
je
xchg
hlt
ficoms
int3
and
add
cmpsb
cld
je
psllw
cmpsl
shl
fdivrp
dec
xor
dec
sbb
into
jne
xorl
pop
adc
and
sarl
in
mov
inc
aas
iret
sub
movsb
inc
cmp
mov
xchg
scas
jp
iret
shlb
loop
inc
clc
dec
mov
out
test
xor
lock
xchg
dec
push
xor
sub
iret
imul
push
movsb
shlb
cvtps2pd
xor
mov
xchg
jmp
scas
cld
lahf
jge
jnp
movsl
gs
xor
out
outsl
mov
xchg
fidivrl
ja
aaa
test
enter
sbb
pop
cmp
jecxz
mov
sti
test
xchg
sub
mov
xor
fucom
in
cmp
adc
aad
or
mov
sub
cmpsb
add
jno
dec
rclb
call
push
in
push
jbe
loope
push
daa
adc
stc
push
scas
imul
jle
sbb
mov
or
xchg
mov
xchg
test
adc
pop
adc
ja
clc
adc
mov
jae
and
pop
mov
jae
imul
sbb
cmp
cmp
jno
dec
out
jnp
das
fstsw
jae
int
ret
sti
xchg
aad
adc
prefetch
or
out
mov
outsb
cmp
mov
outsl
arpl
and
icebp
cli
sub
inc
xchg
mov
dec
lds
sbb
cmpsl
mov
sub
mov
in
in
loopne
mov
push
cmovo
pop
ret
scas
fwait
and
sahf
pushf
movsb
mov
cwtl
out
popa
out
mov
jmp
loop
fisttpl
dec
adc
cs
arpl
fstpl
mov
jle
jmp
sbb
and
mov
cmc
cmovbe
rcrb
dec
sbb
cmp
out
mov
xor
dec
mov
fistl
mov
fldenv
test
add
addb
adcl
jnp
jae
sahf
mov
das
sbb
scas
mov
mov
jb
mov
rcrl
ss
or
and
jno
into
dec
loope
aam
out
js
inc
xor
les
aaa
xchg
insb
jle
push
or
outsb
jg
daa
aas
imul
or
icebp
pusha
insb
data16
xchg
adc
lret
mov
test
xchg
mov
push
stc
mov
mov
add
in
aad
into
mov
pop
adc
and
jne
flds
pushf
rorl
les
test
sarb
jno
xlat
lret
sbb
xor
or
call
stc
push
push
mov
fwait
jp
jo
clc
dec
inc
jne
inc
mov
dec
mov
int3
imul
sbb
xchg
in
push
daa
add
or
push
mov
adc
decl
js
stc
icebp
cmp
dec
and
mov
sbbb
inc
push
pop
test
xchg
fs
pop
jecxz
testl
orl
call
push
mov
cmpsb
ljmp
int3
or
cmc
inc
jno
test
jg
pop
pop
mov
sbb
imul
aad
inc
jl
mov
push
xor
add
mov
fmull
sbb
pop
cmp
sbb
js
movsb
push
xor
stos
sub
dec
sub
inc
cmpsl
pop
fimuls
mov
dec
lods
sbb
mov
into
mov
lret
lds
sub
rdmsr
call
adc
mov
test
adc
out
mov
jns
popf
add
ss
scas
mov
pop
shlb
mov
pop
mov
and
and
jns
adc
lcall
cmpsl
sbb
enter
add
and
jnp
jae
leave
loop
xchg
loop
gs
shrl
cmp
insl
jno
push
xchg
push
stos
out
mov
int3
insl
add
add
aad
push
cltd
push
popf
push
lock
pushf
and
adc
aas
jg
sbb
mov
mov
push
lcall
pop
mov
push
add
jl
pushf
push
int3
ja
dec
aaa
movsl
jae
std
call
push
xchg
add
jo
iret
push
add
jle
aaa
cmp
push
push
dec
xor
out
pop
test
mov
addb
inc
sub
mov
loopne
jl
std
cmp
cmp
repnz
pop
push
xchg
push
insl
adc
pop
and
aam
dec
lds
loop
movsl
pop
inc
int3
outsl
cs
dec
loop
in
pop
xchg
test
cmc
testb
arpl
fisubs
xchg
xor
loope,pn
fstpt
dec
insl
adc
sub
fcomp
mov
pop
sub
in
dec
shrl
cmpsb
mov
aaa
mov
call
mov
pop
xchg
jb
xor
mov
mov
stc
add
lds
push
das
push
adc
in
mov
mov
xchg
repz
outsb
pop
or
pop
lret
lahf
or
lret
lods
out
lock
push
push
mov
or
add
out
fdivs
mov
int
mov
imul
add
adc
jo
cld
test
aad
mov
test
and
push
xorl
pop
call
xor
and
mov
lahf
mov
pcmpeqd
push
in
inc
scas
jns
jae
push
add
sbb
cmpsb
sahf
leave
xchg
mov
xor
push
adc
mov
xor
jne
fldpi
xchg
xor
out
aad
pop
cmp
dec
lar
sti
dec
mov
imul
std
sub
push
sub
cli
mov
sub
inc
adc
adc
inc
mov
adc
pushf
add
and
or
pop
pusha
popa
mov
push
es
xor
push
addr16
pop
xor
adcl
clc
push
pop
in
pop
sti
nop
pop
inc
dec
push
nop
mov
or
data16
clc
xor
loope
testb
movsb
icebp
lcall
imul
incl
push
test
mov
insb
pop
clc
mov
xor
int
or
mov
fistps
fwait
hlt
subl
sahf
aam
pop
mov
repz
inc
adc
jp
inc
mov
cmpsl
lret
in
cvtpi2ps
push
pop
adc
xlat
call
pop
inc
sub
xchg
ror
add
push
sub
js
shll
inc
push
test
icebp
ja
push
fistps
pop
and
call
xchg
clc
mov
jo
stos
popf
pop
sbb
mov
push
push
jle
mov
ja
cmp
mov
add
mov
lahf
out
cmpsb
push
mov
pushf
push
aam
cmp
sub
loope
xor
jecxz
cmp
lods
mov
out
popa
xor
jp
xchg
stos
sbb
adc
ret
pop
je
out
mov
inc
cmp
jnp
mov
insl
in
test
sbb
jp
mov
nop
cld
inc
mov
rorb
fiaddl
pop
jg
cmpsl
xchg
adc
push
xor
and
jge
ret
mov
bound
test
add
inc
jmp
mov
adc
push
mov
mov
idivb
mov
int3
je
fcompl
push
pop
push
dec
fsubrl
xchg
movsb
adc
iret
cli
test
stc
arpl
enter
push
sub
mov
xchg
jle
mov
fwait
pusha
adc
add
pushf
scas
sub
push
fnstenv
mov
in
inc
or
js
xchg
xor
bound
fwait
popf
jno
xchg
mov
cs
mov
repz
cwtl
rclb
or
sbb
mov
lret
cmpl
cmp
jmp
lret
jle
push
xor
test
arpl
sbb
and
jle
and
cmc
adc
out
push
inc
arpl
dec
cmp
loope
xchg
ret
popf
popa
add
push
adc
dec
addb
and
imul
sub
fxch
pop
loope
and
loope
inc
jo
xchg
jecxz
and
faddl
push
scas
or
decl
jno
mov
sbb
inc
push
rcll
idivb
mov
sbb
mov
gs
mulb
bound
test
cmp
stc
push
movsl
pop
mov
sti
mov
bound
xor
add
lds
mov
not
fsubrl
pop
cmp
pusha
jb
pop
mov
mov
loop
fidivs
cmp
fwait
xor
repnz
cld
xchg
loope
fcmovu
sub
fistl
mov
or
cmp
mov
cmc
jp
les
loop
bound
das
clc
sbb
xchg
std
call
jbe
mov
sub
cli
xor
jg
pusha
push
jo
sbb
fnstsw
add
pusha
cwtl
rcrb
xor
in
or
jnp
gs
adc
lods
dec
sub
xchg
mov
sbb
pop
cmp
lods
lock
out
sbb
enter
les
cmp
pop
test
loopne
cmp
add
add
jecxz
mov
mov
pushf
repnz
lahf
cld
movsb
aad
rcll
pop
test
xchg
pop
push
sub
mov
lcall
pop
lret
test
mov
ss
push
mov
mov
outsl
and
mov
xchg
ret
dec
xchg
jb
movsb
cmp
jg
fnstenv
pop
sar
rolb
pop
and
pop
inc
aaa
add
push
inc
dec
stc
or
lahf
or
mov
ss
pop
fisubrl
out
stos
xchg
ds
mov
xorb
cwtl
fidivrs
xchg
cmp
iret
sub
push
push
imul
xor
inc
mov
cs
inc
std
push
fdivrs
into
xchg
aam
push
and
push
ljmp
scas
cmc
push
and
jle
mov
lods
pop
lahf
sbb
adc
xchg
fmull
xor
adcl
jecxz
jle
leave
outsb
jno
mov
icebp
ja
ret
fldt
jbe
mov
xor
jle
lods
ds
pushf
xor
lods
sbb
in
jne
jae
clc
dec
cmp
iret
scas
mov
test
ljmp
sbb
lahf
shll
popa
adc
jne
in
or
inc
icebp
scas
xchg
add
sub
sub
sarb
mov
xchg
or
push
int
call
pop
insl
inc
push
push
pusha
push
sub
outsl
jl
mov
push
mov
mov
ja
sbb
hlt
mov
lods
mov
fistps
lock
add
xchg
jmp
mov
sarl
les
jns
and
mov
add
cmp
push
cmp
jmp
cmp
sub
dec
xor
xchg
popl
sarb
fldt
add
inc
adc
mov
pop
inc
ja
add
add
outsb
fadds
mov
ss
push
mov
mov
jecxz
jbe
daa
adc
call
mov
std
fwait
js
ja
adc
push
movsb
shll
jae
sub
in
lcall
mov
ret
cwtl
subb
mov
cmpl
lock
rclb
push
stos
cmp
xchg
fisubs
xchg
lret
pushfw
outsl
adc
push
iret
pop
faddl
xchg
jae
cmp
popa
lret
mov
dec
sbbb
and
jmp
cmpsb
or
jne
and
stos
xor
add
cmpsb
jp
test
lahf
stc
rcr
mov
and
ret
adc
jp
call
or
popa
push
std
in
push
or
mov
xchg
add
in
hlt
lea
sub
xor
mov
out
xchg
in
fnstcw
sub
sti
cmc
fstpl
loope
push
imul
cltd
mov
mov
bound
push
in
ds
mov
repnz
or
mov
and
push
repnz
mov
iret
iret
jle
or
xor
call
sub
es
adc
push
insl
add
pop
adc
insl
sahf
fs
mov
pop
andl
lahf
sbb
sub
out
cmp
cmp
pop
jg
adc
popf
inc
andnps
mov
cvtps2pd
dec
test
rclb
ds
popf
xor
mov
rolb
lret
pop
ljmp
out
dec
test
mov
enter
mov
cmp
dec
pop
mov
rorl
imul
divb
cmpsb
or
xor
sub
push
movsl
dec
int
in
sub
sti
out
ss
test
xor
push
cli
inc
sub
mov
adc
out
push
mov
fadds
lret
xor
xchg
mov
and
mov
loopne
cmp
arpl
les
cmpsb
mov
leave
repnz
shll
hlt
stc
sbb
jecxz
cmp
lret
les
xchg
repz
sti
imul
mov
sti
inc
hlt
test
and
pushf
cs
jp
icebp
cmpsl
mov
es
insb
into
pop
lock
xor
nop
in
outsl
add
ds
stos
fldt
pop
scas
ds
xor
jbe
add
xlat
mov
cltd
in
jbe
shrl
push
js
fwait
ds
dec
dec
das
inc
testb
mov
rcll
std
jl
addr16
repz
xor
lods
movsl
test
mov
push
xchg
jge
in
jl
push
imul
out
lock
outsl
pop
les
mov
xor
dec
fidivl
dec
xchg
pop
out
push
jp
lahf
ja
popf
adc
sub
pop
shrb
arpl
dec
cli
push
pop
fsubr
idivl
xchg
cmc
sbb
fwait
repz
cmp
dec
push
sub
push
pop
jbe
std
mov
pop
insl
jnp
fsubs
test
mov
push
push
pop
scas
dec
test
shrb
fisubrl
push
scas
das
sub
das
inc
push
lods
daa
push
sarl
call
adc
test
fmull
dec
mov
xor
inc
mov
in
jmp
push
and
add
cmc
xchg
fs
fs
mov
jmp
ds
std
mov
out
push
cmp
jae
sub
mov
jge
or
or
pop
out
sub
outsl
popa
fnstenv
cmp
xor
scas
leave
icebp
bound
mov
mov
bound
insb
jbe
hlt
iret
push
cmp
je
arpl
push
jnp
in
or
push
hlt
mov
decl
push
jb
lock
mov
or
xor
jmp
jns
fsave
jl
push
push
cmpsb
xchg
cmpsb
cld
jecxz
add
icebp
xor
clc
adc
fmuls
jnp
imulb
xchg
add
divl
sbb
test
pop
jge
mov
inc
lahf
insl
rcrb
je
pop
das
fdivrs
cmp
jp
cmpsl
negl
out
and
popa
adc
cmc
mov
dec
cltd
lahf
into
jl
xor
mov
test
sub
nop
cwtl
mov
aad
std
pop
lds
mov
inc
sahf
mov
dec
in
mov
cmpl
popl
into
imul
cmp
and
and
lods
stc
sub
lods
mov
cmp
dec
sbb
dec
and
cmpsb
jno
xor
adc
dec
fidivl
and
lahf
xchg
fucom
mov
inc
fmul
dec
add
pop
nop
outsb
xchg
sbb
push
jp
and
adc
sub
das
jle
xor
int3
fst
xor
mov
sub
inc
lret
popa
push
jle
push
xchg
mov
rsm
sub
andl
jecxz
je
mov
fwait
push
call
ds
leave
sbb
jp
sub
push
inc
and
pop
cltd
add
shrl
fstp
data16
popa
cmp
jae
adc
addl
push
sub
xor
and
outsb
lds
sub
cmc
in
lods
push
pop
fdivl
outsl
jno
movsb
imul
sub
xchg
pop
sub
jo
xor
arpl
cmp
cmp
lcall
outsl
fbstp
jae
lods
repnz
test
or
xchg
push
adc
cs
bnd
dec
xchg
es
add
aaa
xor
mov
stc
push
gs
imul
jnp
bound
out
inc
xor
mov
sbb
pop
dec
cld
sbb
fistpll
lret
jg
inc
push
push
jbe
dec
call
cltd
push
movsl
addr16
shll
sarb
movsl
in
loope
jecxz
arpl
inc
xchg
leave
gs
sub
pop
aam
les
pop
fsubrs
xchg
dec
test
xchg
dec
jne
mov
sub
xchg
call
pop
pop
push
cmc
std
fdivs
jecxz
or
aad
rcll
pop
and
ficomps
xchg
mov
int3
pop
das
cwtl
cmc
xchg
outsl
push
sahf
fldenv
mov
aad
popa
sahf
iret
jne
push
xchg
stos
mov
mov
mov
inc
rorl
outsb
mov
push
and
dec
loope
cld
popf
stc
cmc
jl
std
js
xchg
pop
jecxz
jecxz
push
ret
in
dec
cmp
mov
adc
fldt
ja
stc
andb
pop
mov
mov
aad
cli
xchg
push
sbb
mov
ret
loope
dec
mov
fsub
jnp
mov
movsb
jecxz
sbb
mov
int
xor
decb
lods
incb
mov
scas
les
pop
xchg
push
add
jecxz
push
mov
push
movsl
mov
stc
pop
incb
mov
enter
push
pop
xchg
lock
push
sub
adc
scas
fs
push
in
lods
inc
pop
mov
out
stos
orl
push
lods
loop
xchg
insb
insb
jge
jecxz
dec
loope
ret
pop
mov
rorb
testb
mov
arpl
stc
xchg
cmc
std
loope
push
andb
sbb
xchg
push
cmpsl
movsb
sub
jb
cmpsb
lds
out
cmp
data16
mov
divb
mov
push
xor
rcrl
test
cmpsl
ror
popf
sahf
test
push
sbb
dec
fstp
mov
and
push
inc
or
cmp
test
mov
xor
mov
js
subb
idiv
dec
je
pop
xchg
xchg
mov
sbb
lods
js
inc
aad
sbb
add
push
fisttpll
inc
imul
mov
scas
popa
xor
dec
ret
push
movsl
pop
mov
pop
into
mov
pop
jae
inc
imul
sub
pop
inc
lods
movsl
in
fstl
mov
movsl
clc
mov
mov
xchg
sub
cmp
enter
jp
imul
ljmp
rcrl
jne
mov
xchg
and
ss
jge
loope
cli
adc
xor
arpl
shll
jmp
in
sbb
aaa
nop
xchg
cld
mov
cmp
xor
xchg
repnz
std
pop
push
inc
mov
enter
imul
in
lock
orb
jnp
push
repnz
aam
inc
fwait
mov
push
or
sbb
sti
cli
in
sub
mov
pop
sahf
fdivrs
mov
xor
lcall
mov
movsb
jl
push
xchg
sbb
out
jnp
mov
daa
xchg
mov
cmp
jne
les
jg
mov
cwtl
negb
out
mov
xchg
jne
iret
pop
sbb
lcall
popf
sbb
shl
cmp
dec
mov
mov
mov
outsb
leave
dec
adc
repnz
int
sub
mov
jne
leave
les
in
scas
pusha
mov
xchg
fidivrs
aas
dec
sub
rclb
lds
cmp
mov
adc
aaa
into
fistpl
in
scas
lea
pop
loopne
jg
and
pop
xchg
or
rclb
add
cmp
mov
out
cwtl
mov
or
adc
jmp
lret
scas
xchg
in
and
imul
jns
dec
sti
outsb
sarb
paddusw
mov
cltd
mov
stos
dec
stos
push
inc
daa
adc
mov
push
fisubl
fcomps
scas
xchg
push
pop
cld
ja
sbb
aad
pop
and
jg
cmp
mov
jnp
fisubrs
das
jl
dec
mov
addr16
push
pop
xchg
push
push
das
clc
movsb
sbb
mov
test
add
dec
fs
add
adc
fbld
mov
adc
sub
ljmp
pop
call
fiadds
shrb
test
jl
xor
daa
loope
sub
inc
sub
aad
xchg
jp
pop
cmp
push
mov
cli
push
or
fdivs
out
nop
lcall
or
xor
call
cmpsb
jns
mov
sbb
and
cmp
es
lods
jmp
adc
adc
ss
ja
test
outsb
pushf
pop
dec
aam
popa
or
jns
jp
cmp
rorl
fistps
cmc
mov
cmpsl
hlt
loopne
or
adc
jno
mov
xorb
and
cmp
dec
out
cmpsl
sub
fildll
sbbb
xchg
das
and
test
or
and
and
xorb
xchg
test
fs
test
push
pop
push
aas
arpl
jp
ret
lret
xchg
int
pusha
mov
jg
inc
dec
sysret
mov
mov
clc
loope
cmp
ret
dec
cld
push
mov
lret
dec
push
push
inc
iret
or
leave
jno
cmpl
insb
jae
bound
and
stc
cmp
mov
pop
imul
dec
pop
xor
lods
or
cmp
arpl
mov
xchg
filds
mov
aam
fcmove
jmp
outsl
and
shl
and
lods
mov
rolb
adc
ss
add
loop
jnp
sbb
hlt
shlb
outsl
mov
jne
arpl
int3
dec
xchg
addb
negl
or
mov
mov
insb
mov
fxch
aad
sahf
repz
sahf
fadds
and
pop
dec
xlat
sbb
cli
mov
leave
jbe
mov
movsb
mov
push
es
jo
clc
push
andb
cmp
fmuls
mov
test
pushf
mov
cmpsl
enter
pop
pushf
cmpsb
push
and
mov
push
mov
and
out
or
sahf
call
push
push
add
dec
mov
stc
mov
cli
movsl
das
sub
addb
aaa
sbb
es
xchg
mov
sbb
mov
xor
lock
loop
inc
add
rclb
imul
jbe
mov
mov
or
xchg
mov
lcall
jmp
and
sbb
call
xchg
pop
aam
shl
test
ss
mov
sti
andb
xchg
add
cwtl
push
pcmpeqb
js
push
push
aas
ja
outsl
call
pop
fisubrl
mov
ret
rcrw
jns
leave
sub
mov
jns
in
jmp
repz
jge
cld
adc
lock
push
mov
mov
mov
inc
mov
or
sbb
int
adc
jl
xorl
jae
mov
mov
testb
mov
insb
leave
gs
pop
mov
sbb
bound
inc
lahf
bswap
cmp
fisttps
adc
mov
pop
xchg
adc
sahf
outsb
xchg
dec
rcrl
cmp
mov
pop
cmpsl
mov
das
outsl
sahf
repnz
imul
dec
lock
inc
jnp
sbb
fstp
es
or
movsb
mov
repnz
ja
push
neg
jg
inc
push
xor
adc
or
popf
popa
and
xchg
imul
mov
mov
inc
pop
addl
adc
sub
inc
or
add
inc
xlat
sti
push
jle
sarl
scas
mov
pop
mov
jnp
pop
sahf
movsb
int
imull
xor
push
insl
pop
xor
push
xor
add
push
xor
lods
adc
mov
ja
cmp
or
pop
sub
inc
or
out
out
in
xchg
addl
or
mov
sarl
incl
sbb
out
add
repz
movsl
rcl
call
xchg
mov
clc
sti
xacquire
outsb
jp
nop
jg
sbb
sub
add
mov
adc
mov
out
mov
jge
xchg
jg
loopne
pusha
loope
jle
sbb
outsb
jge
pop
ret
dec
xchg
sub
js
push
pop
mov
bound
cmp
push
lea
jecxz
xor
ljmp
xchg
pop
cmp
pop
movsl
sbbl
orl
dec
lea
mov
lcall
outsl
lret
fdivs
je
add
pop
jo
xor
mov
out
shl
inc
jb
xorb
aas
jmp
pusha
data16
cli
loopne
and
jb
movsl
pop
nop
push
xchg
mov
into
lods
mov
data16
popf
mov
ja
xchg
nop
scas
leave
pop
es
fcoms
mov
xchg
xchg
sbb
ja
and
pop
stc
imul
push
jl
mov
iret
dec
add
push
mov
sub
push
cmp
adc
cmp
loopne
sbb
mov
jmp
add
add
sub
xchg
cmp
fldcw
stc
pop
cmp
mov
inc
inc
ja
dec
gs
sub
mov
inc
mov
mov
cmp
rorl
sar
dec
xor
inc
jne
repnz
dec
hlt
movb
mov
test
movsl
push
pop
push
ljmp
pop
sub
or
out
xchg
cmp
inc
adc
dec
in
fwait
sub
xchg
mov
fldl
inc
sub
notl
xor
cmp
jne
popa
sub
jle
push
jl
or
bound
mov
inc
inc
pop
fwait
gs
mov
cli
outsl
xchg
lock
imul
mov
add
push
lret
in
mov
shrb
das
cmp
pop
cmc
lds
mov
lret
pop
arpl
inc
mov
mov
jg
movsb
pop
movsb
pop
jns
enter
sub
adc
xchg
repnz
das
cmpb
sti
jmp
dec
pop
lea
cmp
outsl
scas
and
sub
cmp
int3
mov
dec
stc
outsl
or
js
fnstcw
xor
xor
gs
lret
pop
mov
push
cmp
pop
out
adc
test
mov
jmp
pop
xor
adc
outsl
ds
sub
mov
cmp
push
sbb
dec
cmp
jo
cmpsb
cmpsl
mov
adc
mov
leave
mov
hlt
push
or
dec
in
out
or
nop
out
xchg
subl
pop
fs
mov
ret
push
lret
mov
push
addr16
cld
das
cmp
mov
dec
ret
testb
lahf
fimull
xchg
fsubrs
dec
clc
lock
cmp
inc
adc
sub
add
inc
aas
push
mov
addr16
not
setge
inc
cmp
fidivl
xor
cmpsb
mov
sbb
push
xchg
push
stos
add
adc
pushf
mov
arpl
push
pop
push
cmp
les
inc
rclb
mov
mov
cpuid
rclb
hlt
sbb
and
addr16
pop
test
ret
aaa
push
mov
addb
push
ret
sbb
mul
mov
or
rorb
fsubs
fildll
dec
or
sbb
inc
iret
ljmp
repnz
lds
mov
push
int
sub
int3
or
push
data16
test
sti
int3
imul
scas
lods
inc
jecxz
testl
fnstenv
js
in
mov
iret
ss
not
mov
mov
mov
out
or
lock
mov
sbb
shlb
dec
testl
push
add
and
xor
repz
mov
mov
add
pop
mov
nop
or
pop
add
or
dec
or
jge
int3
mov
movb
movsl
cltd
or
jle
nop
insl
ror
cmp
pushf
dec
and
filds
bound
int
inc
cmp
fcomi
rolb
or
mov
pop
sbb
pop
fs
sbb
sub
cmp
xchg
xchg
insl
stos
jg
mov
rcrb
int3
ret
cmp
repnz
test
dec
idiv
or
pusha
fdivl
mov
aaa
stos
inc
fisubl
int
mov
cmpsb
sbb
sub
jp
fstps
in
mov
adc
shr
sub
jp
loop
rorb
sbb
mov
mov
neg
fisubs
fwait
insb
add
bound
imul
or
in
fidivrl
stos
adc
hlt
inc
cltd
cmp
jg
inc
mov
loope
sub
sub
enter
add
loopne
in
ljmp
out
out
cmp
pop
imul
lods
cmp
rcrb
pop
loopne
ret
imull
dec
je
jmp
into
or
xchg
shrl
cld
out
aam
in
fs
cltd
subb
aas
mov
lret
add
ja
sbb
xor
insb
dec
fidivrs
xchg
mov
fs
aaa
shr
or
das
jl
jecxz
mov
repz
dec
push
fs
push
rcrb
shlb
outsl
add
decb
mov
mov
sbb
add
push
pushf
sti
xchg
and
mov
xor
in
ret
fnstenv
or
stc
xor
pop
sbbb
or
push
insl
scas
and
mov
mov
pusha
jl
mov
in
push
movsb
lods
cmp
inc
lock
and
dec
dec
arpl
rclb
xchg
adc
mov
gs
xor
cmc
dec
add
orb
or
jmp
adc
sbb
loope
cld
xchg
pop
xchg
pop
cwtl
js
loop
jae
push
movsb
add
and
loop
out
xor
jnp
dec
mov
xor
faddl
jbe
cmp
adc
stc
xor
imull
or
push
stos
scas
dec
inc
call
xchg
dec
cmp
enter
jg
add
lods
loope
ljmp
leave
fnstenv
push
ret
dec
cmpsl
repnz
pop
and
lds
nop
mov
and
jmp
loope
leave
jne
jne
jnp
xlat
das
cmp
frstor
push
in
or
lods
adc
xor
mov
lret
shrl
fisttpll
push
outsl
xor
mov
std
jne
insl
adc
xor
add
popf
imul
sbb
sahf
dec
push
jno
xchg
mov
jecxz
cld
repz
rolb
sub
inc
std
adc
and
cmpsb
xchg
cs
mov
in
rcll
pop
inc
imulb
add
jbe
sbb
mov
sti
hlt
jo
sahf
mov
out
dec
notl
bound
leave
das
imul
gs
adc
mov
mov
jbe
iret
ss
dec
and
aas
mov
mov
fsubl
mov
pop
cmp
xchg
daa
cld
inc
out
jbe
ja
into
enter
mov
add
sarl
dec
lea
inc
fdiv
inc
dec
pop
jno,pt
xchg
adc
lods
sbb
add
adc
in
sbb
xchg
sti
xor
push
js
popa
mov
test
jne
inc
cmp
call
cld
inc
scas
int3
cs
cmp
pop
popf
mov
push
lahf
stos
sbb
roll
out
test
xchg
push
loopne
rclb
xor
pop
and
ror
cmp
and
mov
adc
push
jg
mov
jb
inc
fists
je
cltd
or
push
fs
sbb
ret
aas
pop
ja
data16
add
loope
les
sahf
cli
orl
arpl
mov
push
insw
lds
nop
outsb
sbb
imul
nop
add
pushf
cmp
sub
fidivs
adc
je
mov
repz
and
mov
cmp
negb
xor
arpl
lods
xchg
fdivr
mov
repz
mov
or
lea
pop
xchg
in
add
iret
pushf
jmp
dec
mov
xor
js
out
stc
clc
stc
lods
aad
fcomip
or
sub
sti
mov
cmp
in
jo
and
mov
adc
fidivrs
sbb
jnp
lcall
testl
rorb
popa
and
pushf
test
movsl
arpl
ret
xchg
xchg
and
xchg
pop
in
sbb
test
xlat
cmpsl
addr16
xor
xchg
arpl
scas
xor
fldenv
aam
mov
bound
mov
xchg
mov
mov
jmp
ja
nop
jae
add
jne
or
lods
movsl
inc
es
xor
movsb
add
push
sub
rcll
pushf
cmc
jge
xor
mov
les
xchg
scas
pop
std
test
jmp
cwtl
sub
cmpsl
lea
ret
add
shr
leave
push
pop
imul
movsl
push
sgdtl
dec
jns
lods
dec
imul
out
mov
push
xor
scas
stc
xchg
mov
mov
sti
fnstenv
or
cmpsl
mov
mov
mov
mov
cmp
roll
lahf
sbb
stos
pushl
mov
inc
bound
xor
jb
pushl
push
mov
in
jb
or
inc
push
or
in
imul
test
shll
cld
aad
insb
jmp
mov
rcrb
sbb
clc
xchg
push
mov
dec
es
fadds
shlb
adc
jle
jne
dec
xchg
push
mov
rcrb
stos
int
dec
insl
std
ds
scas
mov
mov
in
inc
push
cmp
push
mov
pop
sahf
aam
xchg
fmull
test
pop
imul
iret
jmp
addl
push
xlat
adc
stos
int
pop
nop
cmc
adc
pop
jle
mov
dec
clc
push
ljmp
popf
and
test
js
dec
xor
xor
xchg
out
cmp
inc
ret
jbe
int3
lret
aad
in
mov
mov
jecxz
out
imul
stos
cltd
rclb
js
cmpsb
dec
mov
jl
push
inc
bound
dec
adc
inc
mov
jecxz
push
jno
stos
dec
mov
fsubrs
dec
stos
stos
push
sub
add
mov
jl
jae
xchg
in
and
inc
insl
iret
pop
inc
xchg
pusha
fiadds
cmc
dec
int3
pushf
mov
push
fs
xchg
rcrb
sub
stos
cld
lds
pusha
add
cmp
faddp
sub
cld
testb
sbb
arpl
lods
aad
leave
mov
sti
mov
adc
lods
add
mov
addr16
or
jle
mov
mov
sbb
cwtl
jb
rcl
jo
out
sbb
pop
movsb
mov
sub
shr
rcrb
mov
divb
jo
std
xor
cld
xor
pop
push
mul
jle
dec
ljmp
or
out
gs
insl
cld
push
aaa
xor
lahf
and
push
and
out
je
ss
inc
sub
ret
pop
in
jae
mov
bound
out
arpl
gs
lret
lahf
adc
mov
mov
mov
mov
xor
idiv
push
pop
push
filds
lret
xchg
cmpsl
xor
cmp
mov
mov
dec
std
pop
out
jo
push
lret
rclb
sbb
jmp
in
cld
jp
jno
jb
call
int3
leave
call
pop
sub
ja
cmpl
mov
push
add
sub
xchg
lods
dec
jno
and
stos
xchg
pop
mov
lock
lret
aas
test
mov
mov
outsl
or
aas
stos
iret
mov
push
test
lds
lret
inc
mov
repnz
mov
push
out
adc
das
out
mov
sbb
sti
mov
jae
fdiv
fxch
sub
aam
dec
bound
xchg
xchg
cmp
mov
xchg
daa
sbb
dec
rcrb
cld
sbb
test
hlt
jae
lods
and
adc
mov
clc
lea
cli
or
in
out
cs
roll
in
movl
push
push
sbb
movsb
add
sub
cmpsb
std
in
hlt
lock
in
inc
lret
mov
pop
sub
mov
sbb
std
mov
pop
mov
jmp
into
clc
fnstsw
xchg
mov
cmp
jl
pusha
in
lret
loope
mov
mov
jb
inc
push
sahf
pop
mov
loope
stos
les
js
mov
aaa
jns
in
addr16
mov
mov
adc
cmp
ret
cmpb
and
mov
adc
sub
add
and
jg
lret
fistps
imul
shll
sbb
mov
push
mov
fmul
adc
push
insl
inc
loop
xchg
icebp
insl
jecxz
mov
mov
sti
lret
inc
mov
inc
arpl
sarb
add
sub
jg
dec
es
mov
push
adc
inc
xor
mov
or
cltd
ret
mov
scas
jbe
jl
icebp
dec
sbb
sbb
sahf
loopne
out
xchg
push
es
xor
add
adc
sbb
mov
jl
pop
mov
mov
stos
into
mov
fldl
xchg
and
add
in
out
sub
cmp
lock
std
leave
add
jns
jl
mov
add
jo
mov
jns
popf
jno
aam
aam
aam
fbld
out
fwait
jo
scas
dec
jmp
push
clc
imul
push
jbe
jl
lret
xor
lret
mov
aam
fadds
pop
ja
cmp
jg
popf
sahf
dec
mov
mulb
xor
outsb
sarb
into
mov
int
sub
cmpsl
mov
xchg
dec
xor
mov
aam
mov
shr
cwtl
mov
pop
loope
leave
inc
mov
jmp
dec
cmpsb
sub
xchg
mov
hlt
out
mov
inc
add
xchg
xchg
and
loop
lods
mov
push
repz
cmpsl
outsl
out
push
cmpsl
shl
dec
ret
add
mov
cmp
out
into
dec
add
lcall
sub
pop
inc
dec
in
push
es
cmp
cli
dec
idivl
jne
cwtl
inc
enter
pop
mov
cltd
ret
mov
mov
fidivrs
jno
xlat
push
cld
lcall
scas
xchg
mov
loop
inc
dec
sub
cmp
push
in
jnp
lcall
pop
mov
jo
push
insl
push
fiadds
xchg
jns
pop
pop
jl
pushf
jb
nop
adc
test
aaa
jecxz
mov
iret
adcb
lret
pop
adc
je
pop
fistl
or
stos
push
lds
pop
mov
int3
cli
xlat
add
cmpsl
cs
mov
sbb
inc
jb
ret
in
pop
test
pop
div
nop
leave
sub
test
pop
cmp
in
and
add
scas
sti
stos
fbld
jge
dec
aam
imul
pushf
mov
leave
out
out
adc
mov
mov
mov
dec
les
lea
inc
mov
cs
ret
std
loop
icebp
push
mov
in
int
leave
mov
lock
ds
mov
pop
xchg
in
mov
stos
hlt
into
ret
xor
adc
pop
test
sbb
push
push
lods
push
sbb
frstor
push
stos
idivl
scas
push
scas
cmp
push
stos
xor
inc
dec
push
ficompl
jmp
dec
insl
mov
inc
sub
test
xchg
divl
mov
imul
dec
push
adc
xor
in
fimuls
and
int
ret
jg
ljmp
enter
xchg
shll
lods
sub
lds
ret
aam
in
outsb
add
lds
xor
aaa
in
sarb
add
test
xchg
fmull
iret
call
jl
xchg
mov
xchg
pop
push
or
jg
mov
mov
lods
xchg
frstor
hlt
popl
xchg
loopne
mov
leave
sbb
xorb
cmpsb
adc
aad
pop
scas
outsl
cmp
xchg
adc
xor
mov
and
jbe
lahf
mov
das
and
cltd
push
xor
int
in
stos
inc
xor
mov
sub
mov
adc
sub
dec
jmp
test
sahf
out
mov
fprem
xchg
sbb
je
out
repz
and
push
cltd
sbb
in
rorb
sbb
xlat
cs
push
xchg
rorb
pop
sahf
sub
hlt
xchg
mov
mov
dec
add
loope
aad
imul
inc
ret
sub
clc
sahf
push
dec
mov
testb
cmp
pop
loop
and
ret
add
pop
push
imul
xchg
and
sub
or
mov
jne
lds
lock
jbe
jno
push
adc
pop
lret
sahf
rcr
loope
fwait
aaa
ljmp
or
stos
dec
jns
loopne
inc
mov
out
pop
lret
jle
jns
in
popf
int3
ja
sbb
xchg
jl
notb
lds
shrb
xor
iret
pop
call
add
adc
test
testl
jae
adc
xchg
outsb
cli
push
cld
cmp
sub
aam
mov
mov
pop
pop
and
mov
dec
push
xorl
lcall
out
sahf
cmp
ljmp
cmp
adc
cmp
or
push
mov
test
xor
mov
fdivrl
stos
push
mov
adc
imul
xchg
js
inc
in
mov
stc
into
cli
push
sbb
dec
lods
and
cmp
repnz
adc
or
jmp
jnp
test
bound
jp
sahf
xor
lds
ret
push
sbb
adc
shr
push
dec
xchg
xchg
es
ror
es
dec
insl
outsb
mov
pop
test
pop
mov
scas
sbb
add
push
and
pop
aam
out
fisubl
insb
cmp
pop
mov
pop
loope
pop
rolb
xorb
xor
and
push
addl
jl
cwtl
fiadds
push
data16
push
int
or
rolb
mov
xor
cltd
xchg
sbb
xchg
popa
jg
xor
fsubrl
cwtl
dec
cmpsb
push
lock
daa
push
push
out
mov
xorl
dec
ja
lahf
in
sub
mov
add
in
cltd
scas
pop
inc
rcll
stc
push
out
push
adc
adc
jnp
and
jnp
out
push
leave
incl
lock
data16
lahf
push
jns
cmp
ja
aas
add
stos
jp
cmp
pop
inc
into
movl
mov
popf
push
scas
insb
mov
push
xchg
ljmp
aam
repnz
loopne
aaa
cmc
or
cli
cmp
mov
notl
xchg
mov
sub
cmpsb
sub
jae
loope
out
jge
or
xor
adc
movsb
fimuls
xchg
and
insl
mov
aam
fisubrl
and
xor
fcoms
cltd
push
add
insl
in
nop
jne
push
jmp
fistpl
dec
lods
inc
popf
dec
into
jnp
mov
inc
push
out
sub
inc
cmp
aam
repz
shll
addr16
lods
adc
out
testb
jo
fs
aam
add
fdivrl
icebp
cld
jg
cmp
mov
sub
push
movsb
xchg
xor
sub
cmpsb
jge
int3
stos
pushf
lds
iret
and
inc
xlat
pop
loopne
lods
dec
aam
shl
outsl
popf
pop
hlt
mov
dec
xlat
xor
xor
jbe
add
out
shrl
enter
jno
sarb
jae
pop
test
jbe
ss
jecxz
ret
fsubp
dec
fstl
add
push
mov
inc
jae
or
push
outsb
push
xchg
adc
push
jg
adc
jbe
in
lds
sub
mov
outsl
pop
icebp
daa
shll
cmp
jnp
fs
loope
sti
xchg
mov
test
pop
cmc
lahf
xor
fimull
mov
jp
sub
xor
jae
dec
fwait
push
xchg
sahf
ficompl
clc
add
enter
icebp
loopne
icebp
lret
cmp
ja
loope
xchg
jp
loopne
ss
adc
xor
sub
neg
enter
rclb
into
jmp
cmp
cmp
les
popa
cmc
repz
cmpsb
icebp
stc
sub
push
dec
push
in
test
sar
data16
and
or
ficoms
out
push
or
pop
sbb
xor
push
stos
repz
xchg
clc
fwait
ss
das
aad
pusha
pop
mov
push
ja
jne
or
aas
daa
mov
into
jns
lock
mov
xchg
push
mov
scas
mov
xlat
int3
xchg
pop
ds
push
icebp
pop
fwait
sub
scas
cmpsb
pop
scas
sbbl
jnp
jmp
lret
mov
mov
xor
dec
ja
cli
push
les
mov
roll
fadds
push
lods
sub
lret
out
pop
icebp
mov
sub
mov
pop
stc
xchg
inc
cmp
rcll
push
xor
xchg
cmp
aas
mov
dec
adc
stos
add
pushf
fcmovnbe
shr
cmp
inc
mov
lods
pop
loopne
sub
push
mov
cs
sbb
lock
gs
insl
loopne
jbe
inc
push
out
rorb
xchg
xor
jae
dec
sub
lock
push
popf
or
scas
cltd
movsl
pop
loop
adc
sub
aam
inc
xlat
iret
xchg
outsb
js
add
clc
sbb
push
fsub
clc
int
cmp
mov
aad
fcmovnbe
fisttps
pop
sti
and
inc
xor
push
push
stc
pop
into
cmp
mov
or
mov
je
add
add
mov
stc
xorb
jae
mov
mov
mov
cs
fsubrp
ja
outsb
inc
iret
xlat
out
or
mov
outsl
sbb
popa
lea
cwtl
mov
dec
push
cmpsb
fsubl
rol
in
ljmp
xchg
mov
out
inc
addr16
lret
rcrl
lahf
inc
and
add
mov
or
rclb
push
movsb
push
out
jge
scas
sub
rorl
fstp
imul
stos
sub
mov
movsb
lea
ja
movsl
or
out
xchg
xor
and
fs
addr16
in
pop
dec
bound
push
add
inc
lods
mov
mull
fistpl
std
scas
cmp
cwtl
incb
mov
pushf
or
pop
cs
repz
cli
push
outsl
fnstcw
sub
lods
ss
mov
mov
cs
out
sbb
sub
jae
push
out
lret
mov
stos
or
aaa
inc
jo
mov
call
lods
cmp
aam
ss
leave
jb
test
stc
xor
cld
shrb
xor
sbb
f2xm1
pushf
test
and
push
push
mov
cmp
jb
and
repz
mov
mov
cmp
movsl
mov
outsb
cmp
or
sahf
shlb
mov
xchg
mov
sahf
add
mov
cwtl
pop
sbb
outsl
push
std
jb
sarl
mov
dec
pop
cmp
test
cmp
pop
lods
fucomi
mov
popf
add
ja
sub
lods
ror
mov
push
rcrb
pushf
aam
bnd
inc
enter
aam
jg
lds
mov
adc
xor
ret
sbb
sti
sub
push
in
lds
pop
cmp
popf
and
inc
faddp
inc
jb
jle
dec
clc
shlb
jno
cmp
mov
jo
out
mov
subb
sarb
nop
jnp
xchg
hlt
xor
data16
mov
pop
and
loope
ja
lea
mov
xchg
outsb
es
mov
xchg
subl
iret
jle
fistpl
je
dec
aam
mov
inc
stos
push
cs
pop
mov
or
adc
lods
int
sub
sbb
ds
mov
sub
cmp
xchg
aas
pop
xlat
mov
iret
sti
mov
mov
rcrb
mov
mov
in
movsl
mov
push
shll
xor
pop
jecxz
adc
inc
insb
sub
sub
push
cmpsl
insl
out
push
mov
dec
mov
sub
sbbl
xlat
adc
add
dec
mov
jg
hlt
sub
aam
aam
push
sbb
fbstp
insl
lret
inc
adc
fistpl
fwait
pop
mov
movsb
or
faddl
pop
gs
mov
dec
sbb
gs
and
repz
xorb
testb
in
lahf
ja
mov
mov
and
jle
add
xor
and
xchg
rclb
sbb
add
lds
test
push
mov
lcall
jmp
push
dec
xchg
or
jge
bound
stos
mov
nop
mov
popa
mov
imul
fsts
inc
xor
fcmovbe
and
lock
mov
jp
cmc
shrl
cmp
mov
repnz
cltd
scas
jg
push
filds
lahf
or
push
pop
scas
cmp
movsl
sbb
in
rcrb
es
adc
stos
testl
mov
mov
not
shll
or
and
and
and
andl
ret
sub
insl
into
je
outsl
ss
mov
mov
inc
mov
movsb
fnstenv
xor
bswap
lret
mov
mov
test
out
imul
scas
push
fildl
aas
popa
mov
xchg
or
mov
push
jle
mov
jns
test
adc
stc
lret
es
mov
and
aaa
loope
pop
mov
adc
fildl
xchg
mov
outsb
daa
fsubrs
jmp
jbe
bound
mov
dec
fistpl
fidivl
jl
xlat
sahf
ljmp
loopne
adc
imul
jne
inc
call
out
fs
sti
scas
cmp
ret
sub
or
xchg
push
ret
add
lcall
cmc
loopne
pop
dec
or
jl
push
dec
out
fs
push
xchg
ljmp
faddl
dec
jg
call
mov
je
les
in
mov
mov
xor
cmp
jg
dec
mov
out
jo
pop
push
adc
cwtl
xchg
insb
mov
imul
stc
mov
lcall
mov
icebp
mov
dec
or
mov
js
fucomp
sub
add
push
aad
aad
fmul
lcall
jno
inc
pop
mov
jno
pop
mov
lods
fucom
fldl
xor
jge
cmp
iret
mov
dec
push
pop
lock
jge
les
repz
stos
ljmp
cmp
outsl
mov
jns
clc
gs
sub
or
ljmp
popa
into
fldenv
fidivl
inc
pop
adc
clc
and
testb
rclb
outsl
mov
adc
out
aas
xchg
mov
cld
pop
mov
dec
add
or
outsl
jo
adc
scas
sar
or
call
adc
aaa
in
decl
filds
out
movsb
fstl
pop
push
xor
iret
sbb
jo
das
dec
mov
jnp
aam
bound
sub
ds
popa
xchg
mov
rcl
filds
and
pop
test
sbb
test
inc
adc
test
daa
add
outsb
cmc
stc
dec
out
mov
jl
std
push
add
inc
sbb
mov
mov
mov
fnstsw
shrl
xor
clc
shrl
data16
sub
popf
sbb
inc
and
int
imul
outsb
das
and
pop
imul
or
cmc
push
or
xchg
push
aaa
rolb
jno
push
icebp
fsubrl
setae
repz
or
ss
jle
lahf
pop
jns
jmp
pushf
xchg
sbb
add
mov
fsubl
inc
mov
xchg
pop
xor
inc
lods
push
ds
xchg
push
fidivl
scas
scas
mov
pop
cmp
xchg
jmp
cld
lea
xchg
or
add
filds
ja
push
test
or
shlb
add
push
add
test
push
or
jg
insb
cmp
leave
jge
cs
mov
mov
ss
imul
mov
jg
add
xchg
mov
jle
sbb
leave
popf
imul
sbb
movsb
stos
jp
jmp
fwait
dec
js
int
pop
int
mov
mov
pop
imul
sbb
add
mov
int
adc
std
aad
xor
enter
ret
mov
in
dec
testb
aaa
inc
mov
adc
jle
sub
dec
cld
faddl
mov
iret
adc
inc
adc
xor
add
mov
int
inc
cli
dec
jo
movsb
ret
fldenv
or
inc
pushf
mov
jle
popa
mov
fwait
ljmp
add
and
addr16
xor
pop
or
pop
mov
loop
cmpsb
rclb
scas
int
jnp
aaa
subl
ficoml
aas
ss
out
scas
ss
cmpb
aad
and
jae
pushf
insb
into
es
jmp
and
push
sbb
xor
loope
xchg
xchg
adc
push
popf
clc
jmp
cs
repz
ja
adc
jecxz
imul
insb
fcompl
clc
sub
adc
fmull
jne
cmc
jp
ja
adc
add
std
xchg
loopne
mov
dec
ret
dec
sti
subb
movsb
pop
js
aam
jecxz
xchg
inc
mov
sub
testl
stc
ds
jnp
aad
adc
lcall
adc
movsb
cmp
in
es
adc
leave
cmp
mov
scas
xor
hlt
mov
mov
and
or
mull
xchg
mov
inc
or
fnsave
daa
jns
pop
mov
mov
push
loop
xor
out
mov
cmp
dec
mov
lods
sbb
sahf
xchg
call
scas
xchg
in
shrl
xchg
pop
mov
ljmpw
xor
push
shlb
xchg
arpl
nop
mov
dec
lods
rcrb
loop
fldl
push
fldenv
ret
pop
mov
imul
call
bound
pop
nop
lcall
lcall
adc
stos
cmp
sbb
pop
popf
lods
clc
mov
pop
or
test
push
mov
daa
pop
push
lds
xor
jmp
dec
pushf
cmc
popa
les
in
and
pop
test
arpl
xor
cmp
fsubs
stos
push
idivl
mov
iret
nop
imul
fldt
sub
in
cld
into
cmc
or
in
push
sub
lods
sar
push
jnp
dec
xchg
fucomp
and
add
adc
stos
dec
jae
out
dec
movsl
jno
mov
stos
jb
out
and
mov
cld
ss
in
nop
insl
dec
xchg
shll
jns
sbb
cmc
mov
fistps
rcrl
push
mov
sub
mov
mov
jmp
dec
lcall
lcall
pop
mov
inc
repnz
mov
xor
ret
fldt
lret
pop
stc
ret
out
adc
dec
dec
std
mov
xchg
jb
mov
aam
pop
mov
shr
add
or
loopne
dec
jb
aad
cmp
sbb
in
loop
mov
push
lock
jno
call
push
cmp
into
mov
mov
scas
and
add
mov
movsb
pop
inc
rol
dec
pop
mov
repz
dec
xor
dec
mov
and
stos
bound
negl
fwait
outsl
notl
adc
cld
and
dec
sub
loop
mov
mov
jne
jp
daa
jmp
add
out
mov
jnp
loop
xchg
in
repz
cmp
mov
hlt
arpl
call
scas
stc
jae
jns
mov
or
fwait
daa
repnz
mov
mov
out
xchg
cmp
xor
cld
dec
mov
stc
jae
mov
sub
movsb
cmpl
dec
mov
sbb
jg
xchg
mov
mov
mov
adc
in
add
aad
test
add
lret
mov
inc
pusha
fistpl
cmp
ret
pop
mov
inc
pop
jecxz
jecxz
pop
stos
push
inc
jb
and
in
rclw
leave
push
lods
lcall
pop
ljmp
xor
cmpsb
jg
pusha
nop
sbb
pusha
cmp
mov
dec
cld
dec
jle
out
sub
dec
les
jmp
sub
lock
add
mov
in
push
insl
lds
sub
in
fdivs
inc
xchg
sbb
daa
adc
sub
adc
xor
faddl
cmp
lods
fs
nop
out
fnstsw
je
dec
aam
mov
fisubl
in
lods
outsl
mov
cltd
loopne
test
pop
or
sbb
insb
sub
push
adc
mov
jnp
xor
inc
in
or
loop
adc
mov
jns
xchg
or
test
jge
adc
aaa
in
add
sbb
ss
add
xchg
inc
jl
ss
sti
mov
dec
aad
mov
enter
xchg
into
lods
push
cwtl
imul
push
jb
imul
lret
mov
xchg
idiv
xchg
lods
mov
in
jb
fistps
sarl
mov
xlat
sbb
xchg
insl
dec
adc
push
pop
in
daa
cmc
rolb
dec
jbe
jb
push
test
data16
outsl
insb
loopne
xchg
push
sbb
sti
jns
mov
mov
inc
insb
mov
jmp
repnz
aaa
fmull
mov
iret
cmpsl
cwtl
pop
mov
imul
lds
mov
pop
shlb
jo
sbb
sub
pop
xchg
xchg
dec
jecxz
xchg
push
loopne
xchg
cmp
das
aas
in
xchg
mov
movsb
xchg
lcall
or
xor
ljmp
les
and
call
or
jmp
dec
icebp
fistpll
mov
or
fists
ficoml
scas
in
jbe
xchg
lods
vunpcklps
adc
and
and
in
push
aad
sbb
mov
add
sub
and
sbb
fs
movsb
lret
mov
adc
xchg
jne
sbb
sbb
repnz
jmp
aaa
pop
es
inc
pop
negb
pushf
cmp
push
mov
jge
int
mov
sub
sar
lret
les
dec
push
insb
cmp
test
or
lahf
cmp
fdivr
mov
jl
and
sub
mov
or
mov
mov
mov
sbb
or
mov
int
fstpl
icebp
push
xchg
inc
test
or
leave
dec
fcomps
cmc
jb
xchg
fldcw
sti
push
xchg
jnp
sbb
sub
inc
dec
cmp
lds
pop
sub
lock
out
shr
jmp
cld
movsb
jg
sub
mov
jno
jmp
test
jnp
cmp
rclb
lret
mov
sbb
lods
xchg
jb
push
sub
repnz
dec
xchg
cmp
pop
cmpxchg
repz
cmp
lods
shrb
and
into
mov
cli
jbe
pop
push
enter
jmp
push
sub
xchg
mov
push
leave
insl
lock
mov
call
fsubl
dec
sub
fs
xchg
imul
adc
jns
pop
cld
out
std
jbe
xchg
nop
cmp
jmp
fimull
xor
xchg
add
lret
mov
push
repz
sbb
adc
sub
jmp
mov
push
xor
inc
scas
mov
push
sub
lcall
adc
pop
lock
inc
mov
jnp
adc
dec
dec
outsb
dec
sar
aas
sub
push
hlt
lahf
adc
cmp
fcmovbe
fs
xor
push
lock
add
aad
pop
mov
mov
sbb
int3
incb
sub
sbb
pop
cmovnp
inc
addr16
js
mov
dec
int
pop
loop
pop
sti
push
mov
mov
cmpsl
movsb
iret
lcall
adc
xchg
cmp
push
sub
lds
icebp
in
xchg
pop
ret
mov
jo
mov
push
xchg
gs
mov
or
cmp
sbb
inc
addl
sub
inc
aas
in
mov
rolb
sub
cli
xchg
lea
lret
xorl
push
dec
xor
outsb
push
lcall
movsb
cmp
xor
nop
in
and
mov
sbb
rol
pop
pop
repnz
scas
arpl
mov
ret
push
les
int
orl
insb
dec
in
out
inc
sub
ret
adc
popf
mov
daa
lahf
sbb
fcomps
mov
lret
sub
xchg
jb
pop
jbe
push
adc
sub
sub
mov
jge
jecxz
jbe
nop
pop
jle
loop
jle
aas
lds
aam
jb
nop
lods
lret
insl
ror
icebp
jne
lret
loopne
mov
gs
push
daa
jns
das
pushf
pop
jae
pop
out
jp
cmp
dec
mov
pop
scas
mov
mov
mov
movsb
xrelease
pop
int3
xchg
orl
push
or
or
adc
push
pop
pop
movsl
jae
arpl
mov
pop
and
jmp
rcrl
pop
lock
bound
in
lods
ret
outsb
pop
mov
lods
dec
ret
fsubrs
inc
lock
lock
in
fisttpl
pop
pop
mov
adc
or
jmp
inc
out
loope,pt
lea
add
dec
cld
cmp
inc
mov
jle
daa
je
in
fnstenv
jae
xor
arpl
pop
dec
pusha
pop
cmc
mov
push
lahf
cmp
jns,pn
jge
ret
cmp
sub
push
xchg
sub
push
test
xchg
jnp
sub
gs
jmp
jecxz
movsb
loope
je
jns
sub
jbe
sub
fnstenv
push
out
aas
outsl
mov
push
in
or
mov
fs
enter
jne
lock
xchg
and
sub
daa
popf
inc
pushf
pop
xchg
jp
aaa
shr
xchg
cltd
in
popf
jbe
xor
fdiv
or
lock
mov
adc
xchg
pop
fidivrs
iret
mov
aaa
mov
out
pop
adc
xchg
sti
jecxz
pop
or
pop
ret
cmp
aad
pusha
mov
push
test
pop
inc
xchg
xchg
je
mov
sti
call
dec
in
mov
push
subl
out
int
pushf
mov
sahf
inc
cli
shll
ss
test
pop
icebp
xor
push
pushf
mov
icebp
sub
fldt
lret
out
out
push
pop
popf
or
adc
das
cmp
sbb
in
pop
lcall
scas
test
fstl
mov
pop
cs
mov
mov
mov
mov
movsb
outsl
into
and
cmc
aad
and
mov
lahf
mov
out
lods
xor
adc
jl
cmc
das
imul
cmc
jmp
mov
mov
cltd
pusha
dec
mov
fs
test
into
cmp
cmp
clc
insb
xchg
out
stc
jnp
aas
mov
inc
mov
aas
pop
call
dec
daa
and
lds
sarl
std
jo
mov
leave
cmp
jns
icebp
dec
or
fwait
push
fwait
pushf
jb
icebp
sub
js
xchg
and
outsb
in
jg
testl
ret
sbb
jo
dec
out
and
sti
xor
xor
jecxz
pop
out
cmp
fidivl
xchg
push
mov
mov
adc
test
dec
mov
xor
mov
and
mov
sahf
mov
jne
ss
sbb
jg
mov
pusha
daa
shll
mov
adc
lds
dec
aaa
add
xor
fmuls
cwtl
ret
scas
lock
push
mov
sbb
dec
jb
adc
mov
orb
insb
mov
xchg
enter
mov
scas
cwtl
in
jbe
inc
jle
inc
pop
mov
mov
test
xor
hlt
sbb
pop
sbbl
sub
jns
mov
test
daa
icebp
xor
pop
jecxz
xabort
shll
jp
test
movsb
iret
in
lahf
arpl
lahf
popa
mov
je
leave
ljmp
insb
scas
and
idivl
mov
dec
je
dec
cld
adc
out
lret
inc
ret
inc
test
arpl
push
sbb
ljmp
mov
lds
dec
mov
xor
inc
and
adc
arpl
rolb
xor
sub
into
sahf
mov
add
imul
jmp
shl
cld
js
aam
mov
add
cltd
jle
mov
jl
xor
jp
inc
movsb
loope
push
or
lock
cmp
add
pop
jns
ja
in
xlat
push
jl
pop
scas
decl
sbb
cmc
adc
inc
push
xor
mov
addb
addl
in
popf
add
lret
pop
add
jle
ja
push
test
shrl
xchg
xchg
pop
xchg
or
clc
insl
aaa
sub
xor
sahf
in
xor
sti
push
lds
sti
inc
test
lcall
negl
and
pop
cmp
shlb
jns
mov
push
xchg
mov
cmpsl
xor
jp
mov
xchg
ss
inc
or
in
xor
add
jmp
dec
arpl
add
leave
jo
mov
push
into
test
mov
or
dec
jo
out
data16
adc
mov
fcomps
xchg
divb
jle
jns
popa
out
adc
cmp
sarb
in
cmpsb
sti
sub
enter
mov
sbb
shl
jg
dec
cmpsl
scas
dec
or
and
mov
jg
sbb
mov
add
repnz
inc
vpshufd
pop
ret
xchg
scas
or
push
fimull
mov
pusha
lret
jne
dec
int
push
daa
icebp
or
mov
lret
push
sub
add
adcb
loope
push
mov
int3
test
popf
pop
push
push
mov
incl
xor
lcall
jp
push
outsb
ss
lret
aad
mov
shlb
test
dec
jns
jge
push
scas
push
scas
fsubr
add
out
lds
fs
sbb
and
mov
mov
test
test
mov
mov
ljmp
pop
inc
je
std
mov
loope
pop
mov
imul
in
mov
sub
popa
adc
enter
int3
dec
mov
sbbb
sti
lods
pop
xchg
and
add
mov
aam
lds
xor
jmp
jno
ror
or
lds
xchg
cmp
or
and
and
lds
aas
jg
jae
sub
stos
jns
call
fdiv
repz
jbe
rcll
cmp
stos
xchg
xlat
xchg
arpl
ss
jnp
jnp
daa
mov
aas
sarb
or
shlb
out
aaa
jmp
popf
into
test
loopne
mov
push
icebp
ja
push
addb
cs
cmpl
or
pushf
imul
dec
adc
inc
push
fmuls
push
cli
mov
sbb
inc
pop
xchg
or
dec
aaa
mov
test
or
add
cmp
test
dec
xor
enter
mov
call
in
adc
cmp
out
xchg
and
pop
jnp
fwait
mov
pop
scas
push
filds
cld
in
dec
stos
xchg
into
inc
ss
mov
mov
adc
push
fwait
ljmp
jl
shrl
dec
cld
fwait
in
pop
xchg
or
ja
scas
loope
jmp
sub
call
push
mov
ss
jb
loop
out
and
add
mov
imul
xchg
loope,pn
adcb
pop
pop
sub
xchg
mov
outsb
mov
shll
rcrb
inc
jge
int
sbb
es
inc
dec
ds
int
mov
push
frndint
stos
mov
icebp
mov
es
inc
and
divb
pop
fdivl
lods
lods
cltd
aad
xor
aaa
imul
dec
mov
push
and
push
repnz
stc
aam
adcb
in
and
mov
iret
or
push
push
sbb
xor
pop
jmp
out
mov
notb
cmp
push
sbb
adc
pop
inc
arpl
in
movsl
je
ja
dec
push
mov
cmp
mov
insb
lods
dec
inc
or
imul
pop
xchg
fiaddl
xor
add
mov
stos
sbb
xor
clc
mov
test
jb
mov
and
adc
int
adc
pop
rcr
push
dec
mov
sub
add
orl
ss
jne
xchg
and
pop
aad
cs
cwtl
jmp
fwait
sahf
and
jmp
jno
popa
into
out
es
push
or
repnz
fistpl
cwtl
push
sahf
sbb
adc
jns
fisttpll
fwait
push
jmp
sti
sbb
push
nop
ret
dec
mov
leave
adcl
mov
mov
enter
cmp
imul
sbb
cmpsb
xchg
stc
pop
cmpsl
mov
test
add
arpl
test
mov
inc
jge
cmp
leave
mov
pop
mov
jae
inc
pop
insb
cmpb
lcall
in
xor
xchg
cmpsl
inc
push
leave
and
cmc
mov
dec
shr
jae
rolb
ljmp
iret
mov
popa
gs
dec
inc
xor
scas
scas
inc
mov
dec
mov
fsubl
sahf
push
adc
popf
sti
or
std
mov
xor
sub
cmp
mov
push
aam
mov
daa
dec
out
ljmp
xchg
dec
movsl
cmp
add
xor
sbb
aas
shl
iret
mov
loopne
push
sub
xchg
and
pop
adc
out
add
cmpsl
cli
sub
cmp
add
inc
dec
inc
add
dec
xor
xor
shll
inc
cmp
jmp
mov
push
orb
and
mov
out
fcomps
fsub
xor
imul
int3
aam
sbb
push
movsb
lahf
jle
loopne
test
cmc
leave
cmp
aas
sub
fisubs
dec
mov
jp
ret
dec
ja
into
js
mov
mov
jecxz
cmp
popa
cmp
shlb
jle
ja
xchg
dec
cs
add
mov
and
inc
addr16
dec
add
or
jge
cs
rorb
jb
lret
enter
out
imul
ja
adc
jg
addl
adc
or
test
pop
pop
push
stos
inc
mov
jmp
outsb
dec
pop
xor
fs
xor
popa
inc
dec
jmp
sti
mov
mov
fs
inc
cmp
mov
icebp
inc
add
popa
scas
cltd
das
inc
negl
imul
adc
pushf
je
cs
mov
imul
dec
dec
aaa
pop
into
cmc
pop
mov
and
ror
hlt
out
inc
arpl
sub
sar
fs
in
sbb
out
pop
cmp
add
idivb
add
cmp
push
popa
mov
add
popl
mov
js
out
out
pop
lret
push
cli
cmp
sbb
mov
stos
fs
lock
outsb
adc
mulb
hlt
cltd
adc
cld
dec
lahf
testb
cmp
int
mov
out
ds
std
ds
xchg
jo
mov
test
leave
fisubl
push
add
jb
js
dec
hlt
repz
clc
mov
mov
loopne
sbb
mov
dec
and
jae
cmp
mov
aam
push
out
aaa
xchg
sub
loopne
jecxz
arpl
es
jo
xchg
cwtl
or
loop
or
mov
xchg
jle
inc
mov
stos
in
rorl
add
sub
push
add
lds
push
lret
test
dec
xchg
pop
lcall
sbb
js
std
pop
gs
dec
and
repnz
and
addl
aas
and
dec
sub
fistps
cmp
push
mov
leave
mov
or
jmp
and
je
xor
insl
xchg
mov
enter
add
imul
aaa
or
mov
insb
shrl
push
lret
cmc
test
enter
or
fnsave
or
dec
insl
mov
xchg
out
mov
test
adc
dec
or
rcl
mov
mov
push
dec
aad
mov
jnp
sub
jmp
cli
jg
cwtl
bound
shll
and
jmp
mov
scas
jns
es
xchg
and
leave
mov
sub
bound
pop
adc
cmp
mov
test
dec
enter
jmp
cltd
hlt
pusha
inc
cltd
stc
mov
sub
xor
cmp
dec
lea
test
push
pop
jl
add
cmc
hlt
aam
push
xchg
push
ja
push
ss
mov
das
rol
repz
jae
cmc
ret
fstp
xchg
jge
jmp
jge
popa
fcomps
pop
outsb
test
ud2
cmpb
mov
nop
sti
mov
sahf
aas
les
push
sub
mov
xchg
dec
test
test
aas
arpl
add
dec
add
movsl
push
pop
jge
xor
rcr
jge,pt
jns
adc
data16
and
xchg
and
je
fisttpll
test
push
insb
or
mov
out
xchg
push
lock
sbb
pusha
pop
mov
shll
inc
out
incb
pop
stos
mov
mov
add
mov
mov
inc
jnp
cmp
jecxz
sbb
cmp
sub
xlat
sbb
mov
ljmp
clc
push
pop
test
into
xor
cmp
fcmovnu
push
mov
and
xchg
mov
lret
stos
mov
outsb
or
pusha
jbe
mov
fdivl
and
jl
int3
shlb
int3
enter
push
xor
and
sub
imul
xchg
mov
and
les
jno
rcrb
cmp
mov
shrl
mov
pop
popf
nop
xlat
push
jo
cltd
fildl
dec
insb
mov
bound
out
jg
sbb
imul
test
mov
movsb
clc
mov
sub
imul
icebp
stos
push
and
icebp
data16
pop
fs
adc
dec
insb
shrl
inc
push
out
inc
pop
adc
repnz
push
inc
or
fwait
shll
push
mov
jg
jp
adc
imulb
mov
stos
dec
jno
ret
and
xchg
aaa
enter
sbb
and
insb
push
mov
aas
fcompl
lds
add
add
cmp
enter
sbb
add
pop
pop
mov
add
pop
or
ss
xor
es
js
lcall
ds
leave
dec
mov
stos
lock
pop
mov
mov
adc
mov
cmp
jne
ja
pop
mov
divb
mov
icebp
scas
stos
cmpsl
mov
int3
into
bnd
add
pop
cmp
sbb
fcmovbe
dec
xchg
cmpsl
sbb
ds
inc
adc
mov
sbb
mov
xchg
cmp
lock
fistps
clc
dec
cwtl
or
jae
dec
pop
stos
mov
xchg
das
or
repz
or
mov
sahf
mov
sbb
fcmove
sarb
loop
scas
adcb
in
hlt
jb
lods
sub
popa
xor
sub
inc
enter
ds
lcall
ret
rep
popl
add
imul
rcr
test
adc
subb
arpl
mov
lret
adc
dec
inc
negl
pop
out
fstl
or
sub
fwait
mov
out
test
push
pop
jae
iret
insl
inc
add
hlt
test
daa
inc
xchg
jl
sub
decl
mov
push
dec
or
pop
ja
sub
push
push
addr16
roll
inc
into
je
in
sub
sbb
mov
imul
fdivrs
push
das
cmp
jno
popf
sbb
jg
outsb
pop
mov
rcr
or
pop
mov
xchg
fimuls
ljmp
cmpsb
mov
jp
lock
test
mov
int
add
jl
jo
cmp
aam
mov
and
fnstenv
dec
imull
lea
mov
rol
sbb
dec
cmp
xchg
repz
lcall
inc
xchg
ja
cmp
in
icebp
push
pusha
mov
sbb
iret
inc
pop
jne
dec
int
xchg
sub
loope
xlat
es
sub
dec
fs
mov
xchg
jb
cwtl
dec
insl
pop
sub
xchg
adc
or
out
mov
ds
leave
pop
push
outsl
shrb
out
add
sbb
loopne
stos
inc
inc
jecxz
push
rcrb
enter
add
ret
push
aad
xor
or
cld
mov
les
or
call
inc
pushf
sbb
sbbl
in
push
scas
insl
mov
jge
dec
xchg
mov
rcll
js
fdivs
jg
iret
mov
xor
fbstp
repz
dec
adc
mov
dec
shlb
cwtl
fstps
lahf
data16
repz
cmc
push
or
or
out
pop
push
or
outsl
adc
pop
pop
adc
mov
iret
jge
add
mov
xchg
lcall
sbb
cmc
hlt
pushf
fcoms
cli
dec
in
pop
xchg
mov
popf
daa
xchg
xor
icebp
repnz
test
pop
push
adc
sbb
test
addr16
idivl
cld
int
sub
lods
mov
hlt
mov
pop
sub
mov
insb
push
rsqrtps
ret
ds
aad
xchg
sub
dec
cmp
jg
dec
scas
mov
outsl
pop
sub
xor
jns
push
sub
cmp
lret
ja
enter
fidivl
fimull
dec
xorb
int
sub
push
incb
outsb
movsl
sarl
mov
rol
jno
scas
inc
sub
sub
pop
icebp
sbb
in
out
or
loope
leave
mov
sbb
test
pusha
aaa
cltd
imul
push
xlat
push
repnz
cmpsb
clc
fwait
sbb
cwtl
jecxz
cwtl
ret
mov
cmpsl
pop
push
pop
push
pushf
inc
or
test
pop
push
adc
mov
xchg
aad
xor
inc
leave
sbb
push
shll
mov
loope
sub
sub
cmc
add
hlt
popa
repnz
mov
mov
je
lea
adc
fistps
cmp
gs
xor
pushf
out
adc
fcoml
lahf
pop
pusha
add
aam
int3
xchg
shrl
dec
and
sub
out
sub
rol
mov
xchg
aad
faddl
addr16
in
xchg
loop
adc
add
data16
icebp
jle
cmp
sbbl
sti
cmp
rol
out
pop
sub
test
jne
lcall
jg
cwtl
sub
gs
pop
or
int3
or
mov
xchg
inc
pop
sbb
enter
ret
jg
test
aam
lds
cmp
in
stc
dec
loope
jecxz
outsb
and
and
loope
out
fstps
adc
ret
push
cwtl
dec
xchg
fs
shll
jl
and
mov
addr16
jno
and
sbb
jns
es
negl
pop
mov
cmp
pop
xchg
adc
jbe
loope
mov
push
popf
pop
cwtl
sub
fildl
stos
test
ss
jle
or
loope
inc
out
ds
rcrl
popa
lds
pop
clc
test
roll
push
ljmp
les
mov
imul
cmp
mov
xchg
stc
pop
dec
test
mov
jp
dec
fnstcw
sub
addl
mov
je
jbe
mov
jge
sbbb
pop
mov
enter
lret
ljmp
jmp
or
lret
scas
xor
add
and
scas
or
popa
inc
test
inc
test
shr
mov
sahf
sub
and
pop
jle,pn
jmp
shlb
sbb
leave
and
mov
sub
movsl
arpl
jnp
xchg
mov
mov
outsl
cltd
mov
dec
aad
ja
aad
cmc
cwtl
pop
push
mov
adc
shrb
mov
xlat
and
push
mov
cmp
inc
xchg
and
lcall
jle
enter
scas
ficoms
mov
imul
imul
out
cmc
xchg
inc
push
sub
out
jnp
pop
or
push
cmp
xchg
test
pop
dec
jmp
movsb
jns
ljmp
mov
mov
out
push
mov
cltd
or
cmp
dec
cmp
jg
or
push
fs
fidivl
mov
loopne
cmovs
fldt
ficoml
add
pop
jae
lret
inc
jle
insb
pop
inc
repnz
add
jno
jmp
imul
jl
adc
pop
adc
test
cli
insb
or
divb
ficomps
cltd
sub
decl
push
incb
pmulhw
lea
xchg
mov
mov
or
shrl
nop
xchg
add
inc
ss
and
test
fisubrl
mov
ja
inc
jecxz
sbb
xlat
subl
into
fsubr
ret
out
es
push
cmp
ret
call
out
push
jge
cmc
movsb
int
jp
je
lods
dec
pop
icebp
xchg
shr
mov
mov
mov
jle
out
jmp
mov
inc
add
mov
dec
fstpl
mov
lret
dec
outsl
into
mov
aas
outsl
jae
jecxz
xlat
mov
jnp
jno
xor
dec
cld
sbb
shl
leave
in
enter
hlt
pop
fwait
mov
lds
rclb
in
xchg
insb
std
mov
stos
cmpsl
add
ljmp
fists
aaa
out
fildl
cmp
jo
leave
out
cmp
stos
bound
gs
call
pop
push
cmpsb
jbe
fstpt
push
lods
clc
fwait
mov
sub
pop
adc
push
adc
mov
mov
out
lret
push
adc
and
xchg
sub
inc
xor
clc
cltd
jecxz
dec
or
sbb
int
in
mull
xor
addr16
cmp
int
mov
pushf
ljmp
mov
pop
mov
out
std
or
hlt
shr
cmp
ja
and
sub
sub
xor
push
mov
xchg
arpl
mov
push
movsl
inc
cmp
out
stos
mov
mov
xorl
insl
loopne
dec
fsts
psubusb
push
test
lock
xor
xchg
adcl
or
pop
test
mov
nop
jns
cmc
and
and
lods
pop
leave
notb
push
jge
inc
fistpl
rolb
xor
dec
int3
sub
and
repz
dec
testl
movsb
cmp
insl
lret
add
das
mov
inc
fwait
mov
clc
mov
es
pop
jb
pop
and
outsb
filds
or
cmpsl
mov
stc
int
or
push
imul
mov
aaa
ret
add
addb
xchg
repz
push
mov
xlat
aaa
lds
aaa
loop
sbb
cltd
mov
sbb
xchg
push
sbb
pusha
mov
mov
imul
xor
popf
fidivl
jb
stos
js
ret
inc
inc
sub
push
cmp
add
sbb
xor
lcall
aaa
dec
mov
insl
iret
cmpsl
xchg
inc
push
add
lcall
jne
lds
sub
out
jbe
nop
push
pop
out
testl
inc
cwtl
mov
fwait
pop
shlb
loope
lods
mov
mov
fcmovu
push
jb
adc
cs
lret
xchg
add
or
inc
shll
xchg
outsl
test
jle
icebp
adc
lret
jne
repz
mov
int
pop
xchg
mov
es
cmp
sbb
js
mov
outsb
clc
mov
mov
insl
fisubrs
std
insb
pusha
mov
or
push
inc
inc
hlt
cmp
dec
clc
cmp
jecxz
xorl
sbb
sbb
add
dec
lods
mov
fiaddl
bound
faddl
dec
xor
push
std
int
adc
sub
and
divl
sbb
pop
xor
pop
add
sub
loopne
sbb
sub
cmpsl
insb
mov
mov
loop
or
out
sbb
mov
mov
sub
add
in
jae
xor
jmp
fsubrl
fcoml
jb
adc
sub
mov
jne
or
xlat
mov
fnstsw
fwait
mov
mov
xor
cmp
enter
adc
sbb
mov
mov
leave
dec
sub
xor
mov
adc
out
pop
jle
fwait
scas
insb
jmp
xor
gs
xchg
setae
out
nop
jg
shlb
lahf
and
sahf
lcall
in
cmp
rcl
mov
and
jp
idivb
push
mov
pop
sub
mov
ss
xor
pop
scas
jg
movsb
sub
xor
jb
ret
aam
jge
and
hlt
pop
mov
enter
xor
sbb
std
stos
aam
call
shll
sub
mov
pop
sbb
scas
inc
insl
iret
sbb
sbb
notb
insl
lock
stos
aam
jae
jbe
js
dec
xor
loope
int
sbb
xchg
xlat
sub
sub
sbb
push
in
out
imul
into
arpl
ret
xchg
cmp
leave
loope
inc
xchg
call
mov
push
jmp
mov
in
out
cli
mov
ja
xchg
mov
pop
icebp
data16
adc
xchg
fisubrl
ds
iret
jp
jge
push
xchg
mov
sbb
pusha
repz
in
adc
xchg
sbb
push
pop
dec
jmp
loope
aam
js
aaa
mov
pop
aam
mov
mov
adc
and
adc
xorl
loopne
or
lret
and
jp
cmp
cs
mov
js
mov
test
in
test
xchg
push
jl
or
lret
push
cld
adc
hlt
mov
addr16
cltd
mov
pop
push
and
mov
xchg
lods
sub
ss
jl
mov
xchg
xchg
shlb
subb
movzbl
fildll
push
les
pop
shlb
xchg
cmc
jp
dec
rcrb
jl
ret
insl
mov
repnz
arpl
jbe
loop
mov
movsl
hlt
call
imul
repz
rol
imul
loopne
mov
insb
test
stc
jmp
mov
jns
sti
test
loope
xor
in
popa
out
mov
std
into
stos
and
lret
dec
arpl
and
add
stos
adc
loop
nop
roll
loop
xchg
imul
insb
pushl
mov
mov
jp
insb
loope
cmp
outsl
jg
xchg
xchg
lods
stos
dec
pushl
mov
ljmp
dec
bound
jne
inc
cwtl
loop
negb
in
lcall
mov
sub
das
pop
out
inc
xchg
inc
cmpsb
push
push
cmp
mov
inc
push
add
clc
dec
cli
dec
xor
add
mov
jecxz
mov
mov
add
xchg
shrb
push
loope
mov
add
insb
jmp
sbb
out
leave
sahf
xor
push
hlt
lock
dec
xchg
mov
pop
jge
adc
cmp
aas
lret
or
inc
jge
jnp
pop
push
scas
mov
and
pop
push
and
and
inc
dec
add
mov
xor
inc
repz
pushf
in
loopne
out
clc
js
ljmp
dec
cmp
sti
call
repnz
push
test
pop
fmul
pusha
and
jb
int3
mov
decb
pop
mov
fimull
inc
mov
lds
lret
shrb
xor
adc
mov
inc
pop
jge
sub
mov
fmull
jnp
imul
pop
pop
cltd
push
cwtl
ficoml
pop
mov
adc
sbb
into
call
xchg
iret
cmp
sbb
sbb
pop
arpl
arpl
rorl
mov
jbe
movb
mov
enter
jmp
idivb
or
psadbw
pop
out
insb
add
xchg
sub
in
inc
cmp
fldenv
mov
xchg
jecxz
xchg
mov
int
dec
out
roll
push
lahf
in
mov
aam
adc
xor
imul
mov
fs
hlt
sti
lock
xor
xchg
hlt
nop
mov
or
sbb
test
push
nop
fwait
lods
mov
xor
ljmp
daa
jo
pop
stos
push
mov
shrb
dec
iret
arpl
aas
jae
sub
cmpsb
xchg
push
mov
jle
mov
movsl
push
int3
jo
fcmove
add
jecxz
out
cmp
push
and
inc
pop
loop
mov
mov
andl
fadd
ljmp
mov
sbb
jns
sarb
adc
cmp
xchg
xchg
mov
mov
xchg
gs
stc
cli
stc
cli
sti
jns
pop
ret
and
insl
in
pop
xlat
dec
loopne
push
enter
mov
nop
ljmp
movsl
sbb
dec
scas
jl
into
xor
mov
fdivrs
mov
jne
fnstenv
adc
or
pusha
loop
pusha
lcall
xor
cmp
jnp
ljmp
sub
push
push
fwait
jo
lcall
mov
incb
int3
cltd
lret
gs
arpl
leave
sbb
push
leave
mov
fldl
divb
fisubs
ret
call
xchg
push
jp
inc
scas
in
cmp
sub
pop
add
xlat
insl
dec
scas
inc
lock
mov
outsl
leave
xchg
ss
movaps
out
push
mov
outsl
push
cmp
pop
dec
jne
orl
mov
imul
mov
fstps
clc
mov
xchg
testl
lret
outsl
out
inc
movsb
shlb
sbb
mov
jo
mov
xlat
fsub
sub
add
loope
dec
xchg
add
adc
fs
lret
idivl
clc
dec
leave
xchg
sub
xchg
mov
jns
xlat
cmc
es
js
add
inc
mov
cli
push
jle
sbb
sub
shl
push
dec
jne
sbb
jl
adc
inc
and
loop
or
mov
inc
popf
pop
dec
add
xchg
adc
mov
push
leave
sub
xlat
add
or
scas
mov
mov
jl
push
sub
scas
inc
mov
mov
pop
jg
in
inc
push
inc
inc
sub
jb
cmp
pop
sbb
push
mov
aad
mov
stc
inc
or
jo
mov
rcll
mov
ret
nop
dec
mov
adc
ret
sbbb
cmpxchg8b
push
out
cmp
daa
xor
inc
xchg
loop
sbb
push
mov
ret
subl
sbbb
loope
jecxz
jmp
aas
or
js
mov
cmpsl
sub
call
leave
xor
pop
mov
hlt
jp
mov
call
ret
insl
imul
jge
jecxz
hlt
or
inc
cmpsl
sub
shr
mov
jae
jae
stc
dec
add
sub
repnz
push
testl
add
pop
pushfw
push
lret
lods
push
or
test
adc
bound
mov
push
neg
fcmovb
push
jle
fwait
dec
add
into
pop
pop
jb
aad
popf
sub
in
push
out
or
rcll
and
movsl
icebp
out
mov
sub
xchg
or
sbb
mov
test
je
repnz
push
dec
or
pop
pop
pop
popl
dec
push
addr16
mov
gs
and
fidivs
pop
sbb
icebp
dec
jb
mov
dec
mov
stos
repnz
out
cld
sub
push
sub
add
in
xchg
lods
cmp
stc
lret
shrl
sbb
cs
push
xchg
xchg
leave
mov
nop
fxch
mov
test
sbb
mov
test
pop
push
mov
sub
jmp
fldl
cmp
adc
or
pop
and
cmpsl
movsl
sbb
mov
imul
sti
mov
mov
shlb
jne
aam
test
insb
jle
push
xor
mov
gs
jl
xor
dec
mov
adc
fistpll
xchg
jle
adc
int3
mov
mov
sarb
xor
pushf
dec
mov
cmp
idivb
push
test
daa
add
jnp
xchg
mov
or
addr16
out
pop
push
fistps
jne
or
in
dec
xchg
adc
push
sbb
stos
enter
pop
jl
cmp
mov
roll
jle
push
int
add
cs
add
xor
jbe
jbe
out
mov
inc
out
aas
or
mov
mov
mov
les
adc
jp
cs
mov
jne
add
out
js
sti
arpl
push
test
mov
jmp
outsl
sbb
sbb
cwtl
xchg
jo
add
rolb
imul
sbb
lock
sub
in
pop
outsl
jo
pop
rolb
add
sarb
mov
xor
or
and
xchg
mov
mov
mov
pop
ss
dec
pop
inc
les
dec
cmp
pop
xchg
stc
out
sbb
or
leave
mov
add
mov
lcall
shr
out
xchg
pop
int3
or
and
lret
fstpl
xchg
jo
pop
mov
lret
mov
cli
cs
or
leave
dec
fmuls
pop
lret
cvtps2pd
sbb
adc
sbb
inc
push
add
loope
mov
jle
cli
ss
pop
mov
sarb
scas
dec
jo
stos
leave
loope
mov
cmpsl
adc
lods
adc
push
push
mov
add
in
mov
test
out
out
jg
pop
sbb
cli
dec
cs
arpl
add
pop
mov
cmp
sbb
jle
aas
shlb
aad
cmc
push
pusha
shlb
xchg
ss
ret
popa
insl
clc
subb
mov
xchg
scas
dec
jne
pop
jae
xor
hlt
jb
push
std
push
dec
movsl
or
lahf
cli
daa
mov
jle
aas
mov
fimull
cli
add
mov
mov
pop
mov
sbb
mov
sub
aad
mov
mov
rcr
xchg
jae
jbe
imul
pushf
pusha
sbb
or
push
inc
stc
jmp
pop
mov
out
dec
ds
xor
repnz
stc
rcrl
lahf
push
out
mov
imul
ljmp
mov
lods
xchg
sarl
xchg
fdivp
push
xchg
lret
dec
fnstenv
jle
push
scas
or
popf
inc
in
jnp
inc
int
stc
mov
movsl
daa
in
pop
repnz
sbb
and
pop
dec
xor
jmp
push
xlat
rolb
fbstp
stc
enter
or
mov
js
mov
add
bound
addr16
ret
shlb
nop
jns
sub
repz
cltd
and
out
mov
xchg
sub
mov
dec
pop
leave
lods
jp
jl
xchg
shll
adc
pusha
push
or
cld
test
cltd
outsl
xor
xor
mov
jmp
mov
movsb
adc
xor
out
pushf
push
imul
dec
dec
mov
jge
fisubrl
in
push
or
inc
lods
xor
movsl
ljmp
arpl
sbb
arpl
sub
cmpsb
out
dec
inc
jo
icebp
andb
xchg
mov
add
jle
and
ds
dec
dec
fcomi
addb
pop
mov
adc
jp
jno
fnsave
loope
cmpsb
lret
in
lret
push
mov
movsb
mov
mov
xchg
mov
movsb
inc
or
mov
fsubrs
enter
movsl
xchg
xchg
sti
jecxz
jae
iret
pop
sbb
xlat
mov
sbb
std
mov
rsqrtps
iret
adc
das
dec
adc
jo
ljmp
pop
xchg
inc
shll
adc
pop
push
lahf
jecxz
push
xchg
add
xchg
pop
sub
loop
and
or
mov
xchg
lahf
mov
daa
sub
pop
popf
pop
int3
data16
mov
push
addr16
dec
pop
fcomip
ficomps
aad
jbe
cwtl
sub
in
sbb
xorl
jbe
daa
les
mov
inc
aam
das
sub
cmp
cmp
xchg
or
enter
dec
push
lret
sub
pop
cmc
cmp
xchg
xchg
or
test
mov
lret
push
imul
pop
cmp
popf
sbb
lods
add
sub
xchg
aas
int
mov
mov
filds
inc
jmp
call
stos
adc
insl
and
fs
jle
xor
jnp
sbb
mov
adc
sbb
jne
or
inc
out
pop
sbb
inc
lahf
xchg
fcomps
fwait
mov
jge
stos
fwait
cmpsl
into
cwtl
stos
sbb
je
lahf
loopne
cltd
imul
es
adc
scas
ds
push
push
and
cli
mov
or
adc
cmc
adcl
dec
sbb
push
mov
jle
xor
cltd
push
and
sbb
xchg
out
adc
mov
pavgw
ja
dec
fldcw
or
xchg
jae
rcrl
pop
or
int3
mov
xor
jnp
inc
hlt
xlat
adc
pop
pushf
jge
push
out
pop
fsts
pop
imul
dec
push
in
out
sub
fcomi
out
adc
daa
jmp
and
jecxz
mov
pop
popa
xchg
iret
cmpsb
push
pop
and
cmp
xchg
lds
rcr
aam
out
push
adc
push
gs
mov
xchg
stc
in
in
and
and
shrl
loopne
mov
sbb
sub
cmp
mov
cmp
jbe
and
xchg
push
pop
test
in
aad
xchg
xor
out
sub
scas
jnp
jl
add
rcrl
dec
jbe
sbb
mov
push
insl
jl
out
popf
mov
mov
loop,pn
in
lret
inc
sub
mov
xor
adc
lcall
test
or
inc
incb
sub
mov
fwait
push
or
ja
dec
aam
test
ficoml
mov
stos
bound
sub
adc
xchg
push
mov
daa
jbe
cmp
or
dec
in
mov
adc
mov
sbb
cmc
mov
lea
sub
adc
add
test
popl
inc
pcmpeqb
insb
outsl
sti
cld
xor
cmp
and
loop
rorl
jbe
xor
jmp
inc
scas
scas
mov
jmp
xor
jp
je
push
mull
xor
mov
adc
mov
mov
stos
xor
aas
xchg
cmpl
lret
test
sbbl
cltd
cmp
xor
daa
sbb
inc
xchg
push
push
dec
lods
add
fisttpl
cmpsl
jl
sbb
jo
arpl
mov
cli
inc
mov
int
sti
rdmsr
or
in
cmp
mov
xchg
mov
jl
aaa
jo
sbb
cmc
add
xchg
cmp
jg
rcrl
insl
test
push
jp
in
int
je
cmp
fsincos
pop
outsl
ret
sbb
popa
inc
or
lods
popa
jno
test
pop
mov
pop
mov
mov
test
cmp
movsb
es
pop
mov
jl
push
nop
mov
jns
rorb
cltd
arpl
jae
sub
or
lcall
pop
or
fcoml
ja
mov
outsl
xor
jmp
xor
pop
ret
shl
push
or
cmpsl
rolb
std
mov
xor
jge
ja
jmp
mov
sar
js
dec
pushf
out
shll
adc
mov
ljmp
out
jp
into
lret
sahf
lods
xor
xchg
pushf
fwait
pop
or
jnp
scas
inc
cmp
pop
js
mov
movd
scas
adcb
repnz
cmp
jmp
cmc
push
sti
push
mov
adc
xlat
test
test
jno
loope
lret
jbe
jge
xchg
popf
cld
loopne
add
cmp
adc
scas
out
xorl
xor
insb
sti
iret
push
jo
mov
push
lcallw
sti
scas
jg
in
jne
mov
rclb
xchg
mov
outsl
pop
mov
sbbl
int
cmp
mov
or
pop
sbb
nop
mov
xchg
loop
sub
mov
jbe
popa
in
and
xchg
push
push
loope
push
in
fwait
mov
popf
adc
popf
test
add
xchg
inc
dec
jge
imul
jl
pop
cmp
mov
mov
jne
lcall
adc
mov
jg
in
adc
inc
adc
or
xchg
sbb
pop
dec
daa
pop
inc
jns
mov
mov
pop
popl
divl
inc
xchg
aaa
xchg
xchg
andb
into
aas
stos
roll
mov
aaa
inc
ja
cwtl
sbb
fdivrl
enter
cmp
fs
icebp
stc
aaa
dec
mov
inc
mov
pop
xchg
xchg
pushf
stos
out
adc
push
sbb
mov
xchg
sbb
sahf
inc
pop
movsl
call
insb
lea
ss
adc
fidivs
icebp
push
mov
bound
fst
sbb
ror
and
leave
shl
push
scas
fidivrs
xchg
in
jmp
out
popa
test
fs
fldenv
ror
rorb
sbb
sub
cmpsb
and
cwtl
in
fcomp
add
dec
mov
sbb
mov
mov
or
xorl
ds
xchg
mov
and
jl
idivb
iret
or
and
and
fadds
mov
das
and
lcall
test
stos
and
test
repz
jecxz
stc
mov
sub
pop
out
stos
mov
jae
adcl
dec
fnsave
xchg
sub
shlb
mov
les
add
jno
movsl
in
ljmp
cmp
loop
or
outsl
mov
enter
xlat
setl
mov
mov
rorl
xchg
in
cmp
xchg
xchg
loopne
xchg
xor
jge
or
test
js
shll
xchg
adc
in
xor
push
push
mov
iret
rcrb
mov
inc
enter
arpl
pop
stc
pop
pop
cmpsb
fdivl
pop
mov
sbb
push
inc
icebp
repz
xor
jo
push
jp
ret
jl
jnp
nop
inc
xchg
lods
jne
mov
sub
in
adc
inc
data16
pop
movsb
movsl
cmc
push
in
cld
stc
lret
jbe
jl
pop
pop
and
ja
mov
aaa
fbstp
aad
repz
outsl
les
leave
popf
lahf
inc
lds
repz
cmp
je
mov
fnstcw
iret
test
mov
add
sub
daa
repz
mov
push
mov
mov
aas
inc
rclb
dec
cmp
jo
dec
jae
repz
mov
cwtl
jecxz
shll
cmp
jae
mov
mov
pop
dec
pop
lret
int3
adc
scas
push
adc
xorl
jbe
push
mov
dec
aad
es
ds
out
sti
cmpsl
xor
mov
jecxz
dec
movsb
scas
int3
imulb
es
popf
jl
pushl
idivl
dec
sub
inc
xchg
and
cmpsb
cld
fmull
addr16
lods
mov
ds
shll
xor
faddl
push
ds
sbb
mov
pop
addb
mov
imul
repnz
push
dec
mov
clc
push
or
sbb
inc
jle
jmp
imulb
push
sub
in
sbb
sbb
cmp
lods
inc
pop
mov
mov
popa
adc
xlat
adc
dec
jbe
int3
in
mov
rorb
leave
test
shll
je
repnz
push
ret
stos
js
cltd
jne,pn
hlt
movsb
sub
std
xchg
sbb
test
or
push
jbe
scas
idivb
hlt
mov
iret
shlb
stc
incl
mov
adc
add
sarb
jp
mov
aas
or
pop
lock
push
insl
arpl
inc
fldlg2
inc
cmp
ret
push
in
leave
jecxz
push
mov
adc
xorb
or
fwait
xor
push
jns
push
fiadds
and
dec
add
push
mov
popf
les
fimull
add
stc
cmp
adcl
sarb
push
lds
xor
mov
jo
xchg
rorl
xor
es
cmp
out
jbe
xor
sbb
xor
shlb
in
dec
call
jb
push
and
ficoml
aas
insl
adc
shll
rcll
jge
clc
outsb
mulb
add
dec
sub
mov
and
insb
mov
out
cmp
adc
es
mov
aam
mov
lods
inc
mov
leave
pushf
ljmp
stos
aaa
int3
lods
ds
out
leave
sbb
jp
cmp
xor
push
pop
jge
aaa
pushf
outsl
lcall
mov
pop
mov
fcmovbe
push
fdiv
fsub
inc
int3
jmp
jbe
pop
and
gs
imul
sbb
aas
mov
call
and
jnp
pop
rorb
fstl
or
sti
fadds
cmp
mov
dec
divl
pushfw
lret
insl
ficomps
push
shrb
test
notb
inc
add
xchg
add
mov
cli
sbb
xchg
lods
inc
mov
iret
pop
or
lock
mov
xchg
mov
outsb
lcall
fs
pop
pushl
icebp
out
fwait
or
sub
adc
jne
iret
pushf
jae
mov
pushf
aaa
jne
xchg
pop
bound
and
outsl
jbe
sbb
xchg
sbb
adc
mov
or
repnz
jge
test
sub
sarb
outsb
sub
cwtl
inc
xlat
pmaddwd
test
xchg
pop
adc
mov
xchg
cmc
mov
dec
or
faddp
bswap
loop
xor
fs
pushf
cltd
xorl
stos
and
popf
mov
mov
ljmp
mov
fimull
js
fwait
mov
je
mov
aaa
mov
inc
repz
jecxz
aam
sub
test
and
fwait
aaa
sbb
and
jae
add
pop
adc
jge
jecxz
icebp
or
and
ds
nop
cmp
dec
outsb
rol
ret
add
clc
call
lock
cmp
add
mov
decb
push
mov
pop
repz
roll
mov
stos
addr16
mov
arpl
insb
mov
mov
test
cmpsl
loopne
ffreep
jnp
movsl
mov
aad
and
sub
jecxz
cmp
jecxz
pop
decb
movb
fstpt
sbb
xchg
jmp
cmp
pop
add
or
jp
push
inc
shlb
repz
ret
xchg
pop
sbb
xor
fldt
inc
cmp
mov
sbb
js
rcrl
icebp
aam
shrl
dec
ret
data16
addr16
daa
jns
dec
cmp
inc
hlt
loopne
inc
out
int
aad
fs
mov
and
mov
dec
xchg
sub
cmp
adcl
scas
push
sub
jl
mov
int3
mov
cmc
pop
dec
add
repz
pushl
sub
loope
mov
pop
test
dec
or
xchg
sbb
xor
arpl
and
pusha
mov
dec
jle
dec
pushw
sbb
pop
mov
lock
sub
repz
sbb
mov
mov
loop
icebp
xor
xchg
fisubs
inc
jmp
out
jle
xchg
mov
mov
mov
call
adc
or
insl
ja
insb
repnz
add
push
cmp
jns
mov
aas
sahf
arpl
lcall
fisubs
imul
adc
ljmp
lds
xor
insl
dec
lds
xchg
adc
ljmp
icebp
pop
push
push
psllq
adc
and
je
xor
dec
sub
add
loope
insw
andl
gs
inc
xchg
sbb
adc
imul
in
testl
enter
sbb
leave
rclb
xchg
sbb
xor
es
lret
xor
nop
in
inc
dec
mov
mov
jns
sbb
imulb
push
lea
mov
mov
cmpsb
int
push
pop
testb
push
xchg
xchg
mov
sub
jecxz
andnps
pop
popf
addr16
int3
insb
cmp
lods
mov
xchg
ss
je
sahf
inc
inc
fmul
pop
in
idiv
lret
mov
insb
jg
sub
and
shlb
mov
jbe
pop
add
or
out
test
fbstp
jl
push
icebp
sbb
or
cli
cmp
jge
pop
pop
sti
sbb
dec
push
mov
out
mov
dec
sub
and
inc
imul
pop
test
sbb
xor
bound
dec
lret
cmc
hlt
test
mov
add
js
imul
mov
mov
aas
push
rcr
inc
aam
mov
mov
ss
cmp
dec
data16
cmovbe
mov
jno
add
mov
das
or
ret
fadd
jnp
scas
imul
xchg
out
sahf
jns
aam
dec
pusha
insl
scas
xchg
lock
clc
adc
adc
sub
push
insl
adc
cs
icebp
xchg
jo
lea
mov
loop
mul
lret
xor
cmp
and
push
cmpsb
fwait
arpl
push
lret
inc
scas
push
sbb
in
fstp
out
sbb
icebp
mov
adc
mov
sti
mov
xor
mov
cmpsl
mov
addr16
ljmp
add
xor
dec
stos
push
sbb
dec
cld
arpl
pop
stc
inc
cmp
das
cmp
adc
imul
xchg
cmpl
push
lahf
jp
add
sbb
push
and
cmp
bound
adc
xor
in
push
mov
pop
lahf
push
pop
int3
cmp
xor
pop
jg
fwait
les
dec
xchg
test
add
xor
fwait
cmp
jmp
mov
in
out
mov
movsl
fildll
mov
je
fcmovnu
pop
sub
push
rorb
mov
xlat
test
add
inc
icebp
add
psubusb
push
xlat
test
sbb
inc
or
sub
jl
xor
ret
bnd
cmp
xchg
notl
dec
mov
xchg
cs
and
add
je
jo
mov
or
dec
sbb
sub
jns
push
inc
cmp
testb
push
xchg
out
jge
addb
out
aad
dec
dec
jb
pop
stos
ljmp
sub
mov
repnz
idivl
test
or
clc
cmc
mov
jp
es
ja
out
lret
lahf
and
sub
and
enter
jg
es
loopne
loopne
lret
mov
aad
adc
mov
vminps
and
sub
shrl
mov
jp
mov
pusha
mov
jle
repz
or
ds
popf
pop
int
fxch
test
insb
repz
mull
in
scas
jmp
mov
push
and
cmp
mov
cmp
das
and
adc
loope
and
jmp
aaa
sbb
and
mov
jns
or
loopne
adc
fucomp
pop
roll
and
pop
jo
enter
rorl
aam
and
out
imul
cmp
lods
lods
sub
adc
cmp
sahf
or
jge
scas
xchg
xchg
inc
stos
cmp
rcrb
rcll
stc
test
push
in
jae
test
out
dec
push
rclb
dec
push
aam
pop
xchg
mov
inc
jns
fiaddl
insb
mov
dec
leave
cmc
xchg
jb
rorl
in
sbb
cs
sub
mov
into
movsb
repnz
movsl
mov
dec
pop
aas
lods
ret
iret
inc
adc
fwait
adc
push
mov
jb
popl
lods
inc
fwait
movsb
imul
jg
xor
xor
addr16
addr16
sub
xor
data16
add
mov
or
xor
pop
inc
les
lret
rorb
sbb
adcb
pop
ret
mov
pop
push
arpl
ja
fisubs
jne
xor
hlt
or
pop
aas
int3
pop
shlb
sub
sbb
and
into
lahf
push
dec
sahf
sarb
ret
insb
adc
xchg
hlt
and
fisttps
cs
and
add
cmc
in
dec
jl
fdivs
add
xchg
mov
cmp
jo
cmp
xchg
mov
cltd
adc
jne
mov
ds
and
loop
inc
add
xor
jns
pushf
stos
loopne
mov
cwtl
jp
jb
call
adcl
or
xchg
pop
cmc
aad
and
push
cmp
cltd
pop
hlt
popl
push
sbb
xchg
flds
xor
lcall
stos
mov
mov
cwtl
dec
or
cs
push
add
sub
push
fprem
mov
xchg
daa
xor
imul
outsb
or
shl
leave
jo
cs
cmpsl
fldz
sbbb
xchg
out
inc
movsl
rcrl
mov
mov
out
mov
dec
add
daa
test
jbe
and
pushf
imul
adc
dec
mull
aas
or
ficomps
push
dec
inc
cmp
insl
cwtl
faddl
xchg
sub
and
xchg
mov
dec
out
int
mov
mov
mov
mov
dec
shlb
or
dec
shlb
xor
fwait
mov
je
js
jl
push
push
add
pop
jecxz
push
jnp
ljmp
push
in
xchg
pop
out
mov
push
add
mov
mov
cmp
mov
rcrb
loopne
adc
testb
xor
fiaddl
push
fldl
je
inc
push
pop
clc
leave
mulb
fisubs
jne
jle
mov
cmpb
jg
cli
mov
xor
dec
cmp
sbb
mov
mov
mov
les
outsb
lret
xor
xchg
stos
push
insb
dec
and
fnstenv
pop
and
inc
lahf
in
rcrl
cmpsl
or
lcall
lock
add
arpl
mov
mov
arpl
in
pop
lcall
pop
xor
test
stc
adc
ja
or
mov
xor
and
and
cmc
jae
inc
mov
mov
xchg
add
xchg
cmp
pop
nop
iret
movsb
jns
jne
in
mov
push
adc
mov
sub
jecxz
and
repz
clc
add
mov
jg
les
icebp
jbe
push
sub
jbe
mov
fwait
out
aam
pusha
xor
or
jp
dec
add
ja
daa
stos
mov
ret
jne
xor
pop
repnz
ljmp
xor
jae
imul
pop
sub
dec
sbb
test
in
jns
insb
lret
or
and
xor
aas
xchg
nop
lea
push
mov
sahf
repnz
test
jg
mov
pop
out
adc
xor
sub
cmp
mov
push
dec
mov
fisubrs
and
push
and
stos
push
aaa
jmp
fists
sbb
fistps
mov
sub
adc
jne
test
pop
jmp
outsl
jb
push
pop
mov
pop
push
ss
or
shl
and
mov
inc
fadds
mov
imul
inc
cmpsb
xor
mov
cmpsb
dec
sbbl
dec
orb
pushf
pop
mov
out
sub
test
xchg
xchg
mov
loope
pop
popf
mov
daa
xorl
in
insb
pop
stc
imul
shll
pop
jecxz
xchg
lahf
fmul
cli
mov
push
test
push
lcall
cli
and
jge
xchg
imul
mov
pushf
out
cmpb
pop
inc
push
push
push
imul
or
mov
jb
ret
push
in
jg
mov
add
in
loope
ss
xor
es
mov
or
sub
sahf
and
nop
je
pop
inc
pusha
popa
pop
push
jb
ja
dec
mov
mov
cltd
add
lea
fwait
adc
jb
ljmp
push
scas
fsubrs
insb
lds
inc
test
lcall
mov
iret
dec
mov
jne
fdivrl
fistps
leave
xchg
iret
decb
scas
cmp
push
jae
mov
pop
es
test
adc
cmp
mov
arpl
loopne
mov
push
ss
pop
xchg
jp
clc
cmp
lahf
inc
mov
stos
push
fildl
fsts
adc
lods
ret
lahf
ljmp
inc
ja
adc
test
or
inc
lret
aaa
lock
inc
push
rcl
movsb
push
cs
push
mov
push
dec
jb
sbb
mov
pusha
scas
jge
push
lock
pop
mov
fwait
sub
push
dec
inc
jp
test
adc
lea
inc
or
shrl
xchg
ret
sbb
push
sub
stc
mov
aam
or
cmp
push
mov
pushw
sbb
lea
fidivs
pusha
pop
push
mov
push
lock
cmp
pusha
pop
jg
mov
sub
mov
fildl
mov
sti
int
popa
sub
pushf
cmpl
cs
push
adc
xchg
and
loopne
dec
incl
mov
adc
fwait
mov
xchg
popf
divb
mov
inc
sbb
test
inc
jae
push
aas
fdivrl
lahf
and
cmp
mov
cwtl
inc
mov
add
les
repz
pusha
mov
aad
cmp
das
dec
movsb
jo
push
loop
stc
sti
aaa
out
lds
incl
cmpsb
sbb
iret
xlat
stos
mov
test
sbb
xchg
test
pushf
test
popa
pop
into
mov
out
lret
fidivrs
push
mov
jmp
mov
sbb
or
rorl
and
push
inc
adc
push
push
notb
mov
and
js
mov
xchg
sbb
ret
js
push
mov
pushf
cmpsl
xchg
negb
sub
negb
sbb
and
and
fsts
and
int3
icebp
fisubrs
fiaddl
mov
in
inc
inc
dec
popf
dec
cltd
pushf
xchg
stos
sbbb
rcl
jl
int3
jbe
je
mov
mov
out
or
ss
les
sbb
add
inc
xchg
xor
xchg
into
icebp
xchg
lahf
cmc
loopne
ficoms
mov
adc
scas
add
out
sahf
test
mov
xor
std
ret
xor
push
out
enter
les
jns
test
gs
movsb
inc
int
insb
mov
add
cwtl
sub
int
dec
cmp
push
mov
xchg
or
clc
cli
insl
xchg
loope
lods
out
adc
and
lods
inc
xchg
push
pusha
dec
fcompl
jmp
jo
dec
insb
mov
loopne
and
lret
loopne
gs
push
cld
inc
in
loop
and
or
push
mov
mov
repnz
sub
jmp
dec
rcll
pushf
movsl
loopne
and
push
ljmp
jge
xchg
popa
sub
add
or
and
mov
pop
ret
add
cltd
and
jg
jne
or
jmp
dec
loopne
mov
dec
lods
mov
jle
mov
cltd
sbb
std
push
shl
add
pop
cmc
shrl
test
mov
fldt
pop
cwtl
xchg
std
in
add
les
jno
lret
call
jb
dec
or
and
cmp
adc
fisttpll
lcall
andb
mov
pop
leave
sub
stos
xchg
stc
push
dec
clc
push
mov
ja
ljmp
jp
testb
ljmp
xor
or
xchg
out
cmp
and
push
and
scas
fwait
dec
inc
sti
sbb
inc
in
inc
ss
sbb
out
push
outsb
jg
add
xchg
std
inc
mov
fidivl
mov
add
nop
pop
and
movb
in
into
nop
addr16
sbb
sbb
mov
ljmp
pop
cld
out
mov
pushf
jnp
sbb
test
or
les
and
pop
sub
scas
mov
repnz
ljmp
insl
sbb
or
and
fnsave
push
add
xchg
inc
mov
xchg
pop
mov
stos
lock
jle
in
sbb
testl
push
jle
loop
xor
sub
lcall
ret
pop
divb
add
push
add
sub
xchg
test
imul
shrb
push
lret
es
mov
pop
inc
push
dec
mov
repz
jmp
sub
mov
mov
jmp
push
sqrtps
daa
sbb
xchg
imul
test
xchg
insl
mov
lcall
push
lcall
lret
andb
push
push
add
enter
aaa
inc
repnz
ja
push
enter
jle
fnstsw
lods
jae
out
sbb
mov
xchg
push
imulb
mov
mov
ret
stc
sub
rcll
scas
or
fwait
fs
enter
push
xchg
bts
in
pop
into
leave
cmp
dec
and
pop
xchg
addr16
ja
sub
adc
rcrl
test
jb
xchg
jbe
bound
mov
jmp
negb
inc
es
jg
divl
das
roll
adc
push
add
xor
insb
inc
sbb
ss
sbb
ljmp
adc
mov
nop
or
sub
shlb
sti
pop
dec
out
es
push
mov
into
outsb
and
iret
mov
mov
dec
add
mov
mov
pop
cmp
repz
sbb
xchg
sub
call
add
inc
mov
std
repz
fistps
stos
pop
lahf
inc
cltd
pop
aaa
xchg
adc
mov
push
nop
mov
sbb
sub
xor
out
sti
jns
int3
scas
add
mov
rorb
js
pop
sub
ljmp
subl
jns
xchg
cltd
and
mov
notb
sub
dec
jl
and
cmp
and
sbb
lods
push
js
test
dec
outsl
insl
and
add
mov
subl
inc
dec
mov
xor
int
or
loopne
add
shlb
aad
cli
stos
fisubl
push
in
push
push
add
pop
adc
mov
dec
cmp
pop
add
sbb
push
test
lret
test
out
mov
mov
sub
or
push
popa
loope
push
xlat
mov
clc
cld
xor
cli
rcl
loop
mov
xchg
and
sbb
pushf
in
rorl
xchg
sub
scas
push
fldl
aaa
mov
mov
ror
mov
aaa
or
jbe
jecxz,pt
mov
ficoml
adc
xchg
iret
orb
xorl
jae
sahf
cwtl
cltd
pop
adc
loopne
dec
jns
push
aas
pop
nop
out
mov
mov
push
xor
push
mov
ret
xchg
pop
repz
inc
leave
jns
sbb
fstl
or
faddl
int
mov
push
pop
mov
ja,pt
imul
mov
sub
adc
std
and
stc
leave
jbe
sbb
mov
xchg
out
push
stc
sahf
mov
mov
inc
lret
mov
inc
ja
cs
in
lcall
ret
jp
bound
adc
hlt
xor
push
dec
dec
addr16
rcrl
out
fisubrs
or
fistl
ds
cld
test
push
push
xchg
and
add
fldt
popf
mov
xchg
faddl
ret
das
push
xorl
xor
sbb
sub
mov
jle
dec
jmp
ljmp
inc
cwtl
jnp
pop
adc
call
or
fisubrs
bound
dec
insb
mov
lock
pop
js
jae
lcall
or
addr16
lods
sahf
push
shll
xchg
push
xor
xchg
inc
test
rcll
addb
mov
ret
dec
addr16
rol
and
jbe
nop
xchg
lods
sbb
mov
out
lahf
and
sarl
xchg
push
mov
lret
pop
inc
xchg
mov
insl
out
push
add
push
fs
xchg
int
dec
inc
adc
sub
sbb
inc
aas
add
inc
int3
pop
cmovp
lock
in
and
adcb
or
js
cmp
sbb
imul
rcrl
dec
jp
jl
sub
or
inc
lret
and
and
cld
sbb
loopne
push
push
clc
mov
daa
xor
or
ss
xchg
movsl
and
mov
orl
dec
jo
incb
jae
popf
push
fidivrl
pop
in
add
insl
sbb
shr
push
dec
sub
xor
mov
xchg
mov
ja
jns
and
push
mov
add
aad
mov
idivl
jae
dec
add
pop
shrb
pusha
push
cmp
xchg
jmp
and
jp
sti
jge
mov
mov
dec
cli
jp
cmp
lods
xchg
pop
mov
cmp
in
mov
pushf
inc
push
jb
xor
loopne
add
outsb
ret
leave
mov
jbe
sbb
test
mov
js
mov
xlat
and
sti
push
mov
add
jmp
dec
stos
lahf
outsb
adc
push
adc
cmc
popf
dec
in
adc
les
pop
inc
mov
dec
dec
mov
pusha
dec
test
out
test
inc
and
int3
push
add
cmovb
mov
dec
adc
jne
cmp
call
jge
call
in
push
into
jo
fdivrl
jnp
jnp
in
add
stos
fimull
pop
lods
add
outsl
pop
testl
idivb
call
js
fistps
ljmp
mov
adc
push
jg
sahf
or
cmpsb
xchg
xchg
dec
icebp
add
mov
ja
stc
scas
rcll
cmp
sarl
pop
sub
dec
sbb
cmp
and
test
stos
jns
fdivrl
aam
cltd
inc
insl
or
and
mov
ret
fbstp
sub
test
push
push
lret
pop
jnp
flds
push
nop
sbb
inc
decb
dec
dec
outsb
mov
dec
lds
pop
mov
push
push
push
outsb
pop
xchg
shrb
fcompl
push
push
lods
xchg
repnz
adc
push
lret
pop
push
cmc
mov
out
sbb
out
in
mov
mov
push
cli
outsl
sbb
mov
in
cmp
add
out
fisubs
fwait
pop
stos
dec
bound
dec
jne
scas
pop
ljmp
sub
push
pop
mov
cmp
js
inc
sbb
adc
std
mov
xor
cmpl
pop
inc
arpl
sbb
or
xchg
jnp
cmpsb
dec
or
and
je
aaa
inc
push
aas
insl
out
notl
jnp
jno
mov
sub
fdivrp
mov
push
adc
aaa
cmp
fnstcw
jne
test
outsb
dec
add
jl
imul
and
gs
inc
cmp
inc
mov
arpl
int3
out
push
rcrl
jge
bound
aad
add
sbb
inc
gs
dec
fcoml
dec
int
inc
add
lret
jecxz
mov
mov
pop
dec
pushf
jl
call
push
xchg
xchg
aaa
or
sub
in
mull
dec
inc
je
sbb
xchg
icebp
adc
ret
pop
test
jge
adc
stos
inc
add
push
imul
les
cmp
inc
adc
lods
push
out
fwait
outsb
pop
hlt
in
mov
lret
pop
add
shl
jmp
dec
push
xor
leave
cmp
loope
mov
add
sbb
cmp
fisubl
outsb
fstpt
loop
pusha
lea
stc
sbb
adc
xor
fadds
insb
cmc
xchg
test
lods
shlb
movsb
rolb
ja
in
xchg
bound
in
loope
and
repnz
cmp
mov
out
xchg
inc
imul
hlt
and
lds
lock
js
push
jb
in
mov
push
jae
mov
cmpsb
add
and
cmpl
and
pop
rorl
mov
sbb
stos
pop
and
loope
jb
stos
fsubp
add
test
jle
xchg
fistpl
push
xor
aas
stos
lret
sub
out
addr16
pop
mov
mov
stc
rolb
out
jb
xchg
xchg
mov
jl
jb
jo
adc
imull
fisubs
int3
or
or
jns
cmpsb
xchg
mov
loop
mov
inc
sub
dec
pop
xchg
iret
sub
jp
xor
popfw
cli
insb
mov
xor
out
xchg
jl
dec
jnp
mov
cltd
stos
or
sub
fwait
cmp
int3
cmpsb
mov
xchg
jge
and
hlt
mov
and
nop
jb
dec
je
and
jg
jl
push
popa
lea
ret
or
jae
sbb
cmp
outsl
aad
cmp
out
sbb
bound
cwtl
jmp
add
repz
adc
jg
stos
sbb
add
pop
mov
pop
mov
in
sbb
xchg
sti
mov
lea
ja,pn
cli
inc
or
push
push
ds
scas
xor
inc
fcom
fs
or
imul
fimull
movsb
insl
cwtl
lahf
dec
das
data16
cmp
pop
jbe
xchg
push
mov
stos
fsubr
pop
aam
lret
gs
push
xor
sub
mov
push
arpl
adc
cmp
push
leave
xor
push
js
outsl
insb
or
sti
cmp
aas
aad
push
test
xchg
iret
cmpsl
mov
fildll
outsl
sbb
out
xchg
mov
in
mov
push
insb
cli
fidivs
pop
or
adc
leave
popf
cmp
ret
cmp
cmpb
je
xor
fst
jle
into
mov
out
movb
inc
mov
hlt
or
pop
cwtl
fldcw
sbbb
push
enter
jge
es
roll
push
dec
dec
fwait
lds
loop
rcl
jnp
jne
or
movsl
flds
push
enter
add
pop
push
es
fisttpll
ja
iret
add
lret
fs
jle
lcall
cwtl
cli
test
pop
int3
jl
dec
sbb
jno
adc
hlt
jl
icebp
movsb
cltd
sqrtps
sbb
aas
fisttpl
sbb
mov
aaa
aad
inc
outsl
pop
movsb
sbb
push
lahf
jp
lock
cltd
out
or
xor
sbb
mov
cmp
ss
ljmp
sbb
bound
das
addl
add
aad
sub
or
lahf
jecxz
jmp
adc
mov
scas
jb
fcompl
inc
ds
adc
push
iret
sbb
mov
dec
cmp
je
lret
jbe
dec
or
xchg
popf
or
std
or
fwait
jle
adc
das
xor
mov
es
dec
mov
ret
sub
jl
pop
into
je
pop
repnz
or
push
cmpl
cmp
cmp
fnsave
mov
adc
lret
mov
jecxz
push
mov
out
cmp
rorl
push
lods
imul
cmc
pop
test
jl
mov
push
jmp
imull
out
fdivrl
dec
cmp
pop
add
pop
popa
mov
in
divl
jbe
dec
xchg
clc
js
pusha
lds
jmp
pop
mov
cmp
fs
jae
fwait
dec
arpl
xor
and
mov
loop
add
xor
cmp
into
xchg
mov
neg
dec
mov
mov
and
shll
stc
fcmovb
mov
push
mov
mov
add
repz
jae
inc
pop
das
insl
lret
mov
xchg
popa
dec
popa
cltd
mov
mov
or
push
add
int3
sub
lea
sub
sbb
imul
stos
jle
mov
insl
pop
iret
adc
sub
pop
aad
sub
jmp
hlt
inc
cwtl
sub
cli
mov
lret
mov
xchg
push
lods
sahf
jge
mov
rcl
pop
mov
pop
loope
push
mov
into
repnz
in
fwait
pop
adc
jge
adc
lock
lret
mov
fwait
div
jp
xchg
adc
enter
sti
and
das
jno
mov
pop
sti
sbb
add
clc
inc
cmp
jne
cmpsl
mov
and
cs
cli
ret
in
ret
jb
mov
mov
dec
out
ja
pop
jbe
pop
push
mov
adc
ret
mov
pop
add
jle
mov
iret
mov
dec
mov
xor
imul
idiv
pop
or
bnd
adcb
jge
ret
imul
lea
fs
lcall
mov
dec
pop
sub
xchg
leave
dec
fndisi(8087
and
cltd
mov
std
fsubrl
jle
jg
lret
mov
aad
call
sarb
es
je
adc
icebp
pop
mov
mov
jns
pop
in
loopne
clc
je
negb
das
fsubp
out
mov
cmpsb
jns
cmp
dec
sub
xchg
iret
in
in
dec
mov
in
jae
jne
jge
pop
mov
aam
add
sub
aam
mov
je
push
xor
sbb
cmp
push
xor
test
pop
mov
xor
sub
inc
insb
sbb
add
and
adc
loope
es
data16
std
cwtl
push
mov
dec
int
push
sti
push
inc
shll
icebp
out
inc
mov
jge
push
cmp
popa
fimull
mov
test
out
es
ja
jmp
pop
cmc
out
xor
lcall
pushf
pop
push
cmp
cmpsl
xchg
jo
mov
cwtl
mov
xor
imul
movsb
fwait
and
pop
in
aaa
lea
jle
xorb
dec
fdivr
dec
in
in
in
into
sub
dec
ja
dec
les
shrb
out
jg
fdivrs
pop
sbbb
jg,pn
pop
xchg
adc
mov
test
lods
push
ret
aas
fwait
clc
xchg
into
dec
shll
lcall
adc
cmp
aad
lahf
xchg
rclb
adc
jmp
push
or
shlb
pop
subl
jns
fmuls
ljmp
js
ffree
popf
movsb
lods
int3
sahf
mov
cwtl
fs
sub
std
or
insl
push
int3
pop
jae
lret
push
or
stos
mov
xchg
cmp
aam
sbb
hlt
mov
sbb
or
out
xchg
jg
xorb
stos
incb
insb
and
aad
dec
lret
add
das
dec
cld
dec
mov
int3
fisubrl
int
mov
shrl
fimuls
cmp
mov
int3
fadds
daa
mov
dec
in
jo
push
cwtl
lahf
xchg
pop
cmp
aaa
jp
jo
push
xor
lock
xor
ret
or
sub
xor
out
out
adc
xchg
lahf
and
mov
ret
xchg
mov
mov
test
mov
mov
std
out
shlb
mov
aad
adc
sbb
xor
fstpt
sahf
cs
cwtl
mov
and
in
shll
sub
cmpsl
jmp
fidivrs
xchg
pop
cmp
in
aam
in
enter
or
inc
dec
outsb
lret
pusha
fwait
pop
cmpsl
mov
loopne
xor
das
mov
call
mov
pop
repz
andb
and
fldt
pop
test
mov
arpl
sbb
adc
ret
icebp
into
cmpl
aas
outsb
movsb
loop
jle
push
out
movsb
cld
loopne
sub
mov
and
or
stos
and
adc
inc
popf
or
xor
jle
mov
push
in
push
mov
rolb
mov
cmp
popa
push
icebp
lret
xchg
aaa
push
mov
sub
out
pop
aaa
scas
jns
dec
mov
insb
lock
shll
insb
cmp
mov
nop
cltd
mov
lahf
mov
lret
out
insb
sarl
lea
lods
in
cmpsl
sar
fcomps
adc
out
push
inc
fwait
call
xchg
sti
fdivs
scas
jp
aas
cmp
jne
push
pop
mov
jl
add
insl
lret
movl
add
add
ror
pop
bound
testl
call
sub
cli
cmp
mov
fwait
decb
int
push
lahf
mov
lods
sbb
pop
and
cmc
testl
test
sbbl
test
cli
call
and
mov
and
xchg
sarb
or
in
xchg
push
arpl
fcoml
pop
jmp
cmpsl
nop
and
and
lret
and
mov
xor
and
ds
xor
mov
clc
dec
je
sub
les
in
ss
hlt
aam
sub
mov
repnz
in
pop
aaa
or
ss
ja
mov
repz
scas
lcall
and
out
orb
xchg
mov
mov
adc
mov
ja
pop
mov
jl
jmp
lods
push
add
mov
and
mov
sub
pop
pop
popa
or
push
lea
and
fistl
xlat
push
cli
in
and
mov
dec
add
jp
add
pop
dec
cli
cmp
pop
and
inc
ficoml
inc
fisubrl
xchg
inc
inc
mov
jo
pop
dec
adc
orl
jae
mov
shr
fisubrl
xor
iret
dec
jns
jbe
pop
xchg
pusha
pop
and
cmp
loopne
pop
pusha
xchg
dec
bound
aaa
test
xchg
aam
mov
jg
jecxz
mov
ja
cmpsb
lret
push
ret
mov
das
push
std
mov
inc
sub
push
push
in
jl
fisubrl
sbb
or
sub
cmp
xchg
adc
pushf
es
dec
outsl
cmp
dec
lods
push
insb
dec
lods
out
cmc
fadds
add
xlat
in
lret
xchg
mov
fsubs
lret
popf
pop
jnp
mov
daa
fs
fstl
cltd
cmpsb
fisttpll
and
push
addr16
add
arpl
dec
mov
xor
inc
test
sub
push
jle
popf
cmp
clc
popf
adc
bound
sub
sub
mov
pop
jno
das
push
jge
imul
sahf
mov
nop
adc
stos
mov
xlat
and
or
ret
enter
or
js
mov
or
xchg
repnz
xchg
mov
scas
cmp
std
cmpsl
dec
das
cmp
push
js
shlb
adc
pusha
ss
and
fdiv
clc
xlat
cmpsb
insl
ret
loopne
std
data16
xor
cmp
pushl
stos
cmp
pop
inc
shr
inc
and
outsb
push
or
pop
rorl
mov
movsl
loop
jae
jg
hlt
aas
loopne
xor
pop
daa
es
sub
pop
cmp
lcall
mov
popf
stc
and
pop
jne
xchg
or
dec
fsts
sete
xor
clc
or
push
pusha
rorl
jmp
mov
ret
mov
scas
fadds
jbe
test
lahf
jo
adc
or
icebp
lods
pop
rcl
and
pop
sub
cmp
mov
outsl
icebp
add
flds
and
mov
cmpsb
fmuls
push
div
in
daa
sbbl
cmc
scas
daa
cmp
xor
lret
cld
sbb
push
test
clc
lret
dec
pusha
mov
cmp
add
insb
push
inc
or
mov
inc
push
pop
stc
push
jmp
rcr
mov
sbb
pushf
cmp
sub
fisttpl
aas
mov
fs
int
out
insl
jg
cmp
addb
subl
and
stos
mov
test
int
push
data16
mov
mov
sbb
mov
xchg
sub
xchg
dec
sbb
sbb
xor
add
mov
divb
daa
push
testl
mov
mov
sbb
insb
pushl
loopne
cmp
cmp
sub
xor
pop
push
mov
pop
jb
jns
xchg
push
pop
js
out
jbe
insl
imul
inc
push
push
or
lahf
scas
jmp
push
mov
xchg
leave
mov
idivb
pop
mov
popa
mov
je
sti
in
hlt
dec
adcb
push
outsl
es
out
aad
fcompl
pop
cmp
in
pop
rcll
out
push
and
outsl
aam
lock
cmp
stos
sti
scas
aas
pop
hlt
and
ficomps
cmp
outsl
jle
mov
sbbb
fwait
lea
sub
jnp
loope
shrl
cmp
lods
insl
js
movb
out
cmp
and
dec
jnp
lea
sarl
bound
movsb
popf
mov
jle
push
pop
xlat
clc
cmpsl
xchg
out
cmc
pushw
into
add
sbb
or
orl
int
pop
cwtl
lea
jae
push
rclb
xchg
gs
stos
inc
dec
cmp
lcall
fsub
repz
lcall
imul
loop
sub
mov
mov
add
loope
aad
xchg
xchg
mov
rcr
jo
and
sub
sub
lods
cmp
xchg
xchg
dec
inc
pop
sbbl
rcrb
fimull
enter
xchg
jg
xor
inc
cmp
xchg
test
repnz
push
inc
push
fs
or
cmp
jecxz
out
mov
mov
ss
inc
je
cwtl
push
jbe
into
ljmp
sbb
and
loope
inc
aas
ljmp
adc
popa
lods
mov
sub
sbb
xchg
scas
cmp
xadd
pusha
mov
rorb
fdiv
mov
cmp
mov
lcall
test
inc
sbb
cmpsb
push
push
mov
sbb
push
adc
sbb
sub
dec
adc
push
lods
icebp
lods
cmp
mov
cmp
xchg
addr16
or
in
mov
lods
enter
add
loop
test
inc
xchg
insb
xchg
jge
mov
mov
dec
mov
popa
mov
jge
jb
bswap
aaa
and
mov
mov
jmp
mov
sbb
or
xchg
cvttps2pi
dec
and
leave
xchg
lock
dec
testb
pop
insl
test
sub
push
xchg
rorl
pop
sub
mov
adcb
mov
cmp
mov
movsl
aam
out
imul
cmpsl
imul
es
push
test
jns
adc
jl
pushl
ret
or
sub
dec
push
jnp
push
xchg
sub
ss
sbb
and
mov
cld
loop
adc
lods
xor
or
jecxz
jg
maxps
fcomi
std
mov
loop
out
sbb
pop
ds
mov
cmp
loope
movsl
ret
adc
sbb
push
pop
jns
aas
mov
or
ret
ja
adc
nop
jge
jecxz
cmp
jg
mov
ja
stc
ret
das
inc
out
xlat
in
lods
in
cmp
adc
cmp
lahf
test
xchg
testb
mov
xchg
push
and
movsl
push
pushf
pop
lock
push
sbb
cmp
mov
fdivrs
addr16
decl
inc
jno
movsb
aad
add
jne
adc
test
mov
stc
jmp
das
stos
addr16
xor
loop
cmp
sbb
punpckhbw
fistps
int
cmpsl
and
es
inc
and
int
lock
in
out
push
js
jg
je
pop
mov
mov
add
jp
inc
call
mov
pop
cld
pop
sti
mov
pop
sar
les
jo
insb
repz
mov
adcl
cli
es
push
mov
mov
jno
cli
nop
repz
call
mov
idivb
sahf
sbb
mov
ret
lahf
dec
xchg
sbb
jae
add
lds
adc
jmp
aad
mov
mov
test
imul
xor
pop
cmpsb
loope
daa
jmp
xor
mov
sub
jnp
lcall
xchg
pop
loope
fsubr
in
cmp
sarl
pop
jmp
push
mov
push
ret
outsl
xor
or
popf
xchg
repnz
inc
ret
and
imul
daa
jg
inc
cmpsl
lds
andb
or
pop
sbb
ret
mov
aaa
fxch
mov
add
inc
xchg
adc
inc
fcmovnu
mov
mov
pop
adc
cli
lea
xchg
js
mov
jnp
mov
inc
stos
repnz
inc
inc
jns
fistps
jmp
inc
mov
int
sbb
sub
xor
mov
enter
cmpsb
jae
mov
int3
into
add
mov
in
into
out
pop
cmp
pushw
test
sarl
outsb
xor
fiaddl
mov
repnz
sub
lret
mov
loopne
inc
clc
xchg
test
popf
dec
clc
daa
call
or
data16
scas
jecxz
loopne
out
std
loop
cmp
fisubl
pop
mov
push
xchg
pop
fs
outsl
scas
inc
sbb
imul
sbb
adc
lea
and
imul
inc
repnz
pop
outsl
cmpsl
out
sbb
lret
jo
mov
ret
jle
cmp
sub
pop
sbb
xorb
repz
lds
mov
sbb
inc
push
pop
pop
insl
mov
loope
adc
mov
fistpl
es
jmp
movsl
jbe
sub
jae
pop
dec
int3
aas
add
jmp
cli
jmp
fisttpll
jbe
lcall
adc
ds
icebp
mov
outsl
in
mov
in
jp
mov
ds
xchg
pop
iret
decl
xor
xor
and
enter
or
int3
and
mov
xchg
idivl
or
shll
mov
stos
cld
add
cmc
popa
fucom
stos
repz
push
cld
jbe
push
jae
nop
add
jnp
inc
push
push
stc
xchg
adc
lods
dec
in
xchg
scas
test
mov
jb
js
cmp
cltd
pushf
xor
cli
pop
jbe
mov
movsl
mov
out
dec
lods
cld
inc
jecxz
jge
int
shrl
dec
push
adc
xor
pop
sub
inc
gs
outsl
ffree
call
jmp
popa
mov
sbb
add
jbe
lret
lods
pusha
test
das
push
fs
test
xor
std
mov
daa
fisubrs
das
js
shlb
jmp
mov
into
xchg
xor
movsl
sbb
pop
mov
dec
dec
xchg
cmpsb
out
fimuls
stos
outsb
std
push
xchg
lret
enter
push
cmp
rcr
mov
adc
lea
js
dec
into
mov
fiadds
sub
cmp
cmp
sbb
add
fsubs
xchg
rolb
mov
xchg
push
je
fs
aas
cmp
loopne
cmp
subps
or
add
imul
mov
push
inc
ss
aam
imul
arpl
rolb
test
mov
testb
mov
mov
mov
xor
lret
cmc
add
jb
sbb
jb
xchg
movsl
into
xchg
iret
mov
aam
sbb
mov
push
pop
fimull
mov
sub
lcall
xchg
fidivrl
mov
movsl
data16
sbb
jp
push
lock
maskmovq
testl
xchg
lret
mov
fnstsw
lret
ss
pusha
into
insl
pop
jbe
lods
scas
push
adc
pushw
fists
imul
and
jne
cmp
idivb
adc
mov
je
sti
mov
pop
imul
cltd
push
cli
lcall
sbb
es
sub
dec
jge
sbb
rclb
aas
mov
xor
lock
out
jae
sub
inc
sti
xchg
mov
ficoms
outsl
dec
adc
pop
push
subb
sub
gs
aaa
out
sbb
push
dec
movl
dec
sahf
lds
in
outsb
sbb
pushf
and
xchg
or
push
jle
mov
xor
pusha
ja
pop
jmp
adc
and
pop
xchg
and
xchg
imul
and
icebp
add
xor
lahf
fwait
mov
xchg
sahf
cs
ljmp
jmp
cs
sahf
pop
test
clc
push
lcall
push
add
mov
cmp
pop
icebp
add
xchg
inc
push
cs
cwtl
push
fsubs
ljmp
repz
adc
inc
and
xchg
jg
adc
pop
jbe
cmp
aad
adc
mov
orb
insb
dec
dec
pop
add
insl
lret
rcll
in
sub
shll
cs
cli
mov
xor
rcrl
popa
mov
repz
outsl
in
lock
dec
sbb
push
jae
sub
adc
jb
pop
loop
push
push
lret
mov
inc
add
aam
jo
ja
int
repnz
sub
push
mov
in
shrl
shlb
sbb
hlt
dec
dec
inc
xor
cmpsb
ss
popf
jl
lds
movb
in
jno
shl
mov
aaa
std
push
cmp
pop
dec
adc
pop
js
je
or
in
sub
lcall
jmp
pushf
mov
mov
je
jecxz
or
dec
aas
and
aam
rolb
mov
pushf
pop
or
outsb
lret
frstor
xor
mov
scas
leave
push
or
mov
push
pop
and
es
sbb
pop
insl
mov
les
push
in
lock
fildll
mov
lods
jg
jl
xor
sbb
lret
pop
movsb
movsb
xor
pushf
xchg
aad
pop
cmp
push
pop
loope
jb
or
adc
jnp
inc
sarb
xchg
hlt
dec
filds
mov
inc
and
pop
jae
xchg
das
xchg
outsl
lods
fldt
dec
push
xor
cli
das
mov
sbb
cltd
xorb
cmp
mov
dec
cmp
movsb
fsts
sbb
aad
xchg
push
mov
testl
lock
mov
xlat
aad
in
adc
mov
xchg
pop
fisubs
mov
adc
std
push
inc
adc
xchg
sub
cmp
fists
cmp
shlb
mov
mov
fstpl
stos
adc
push
xchg
push
insl
xchg
pop
xor
inc
mov
push
push
ja
js
mov
adc
rcrl
jbe
test
lods
mov
mov
pop
insb
ficoms
out
je
add
add
data16
mov
inc
jo
inc
adc
in
out
and
cmpsb
das
addr16
push
jnp
jmp
jmp
and
outsb
pop
fnstcw
sahf
ss
dec
mov
dec
out
pop
jle
fs
std
hlt
push
je
adc
movsl
aad
sbb
daa
push
mov
dec
cwtl
loope
push
scas
inc
and
add
lds
daa
fnstcw
mov
test
pop
mov
jnp
and
jecxz
pop
ss
jmp
pusha
mov
inc
xor
push
add
jae,pt
les
sarl
add
ja
inc
pop
sub
pop
mov
in
jg
filds
jg
push
lret
mov
sarb
test
mov
loope
push
mov
divb
and
push
inc
and
pop
repz
cmc
ret
cmpsl
cwtl
sub
push
imul
pop
popa
xor
push
test
jmp
mov
dec
mov
sbb
leave
lds
or
cs
stos
jae
mov
mov
sub
dec
inc
insl
inc
or
and
mov
mov
dec
lret
js
jg
xor
fidivl
xor
inc
sahf
test
stc
adcl
cmp
adc
jo
lods
dec
push
hlt
outsl
and
pop
in
lods
xchg
mov
les
sbb
ljmp
cmc
imul
gs
mov
mov
fwait
shrl
pop
lahf
add
push
dec
es
mov
xor
xchg
push
mov
mov
lds
stos
insb
dec
or
mov
pop
mov
adc
sbb
adc
in
pushf
adc
mov
imul
test
loopne
adc
dec
mov
xor
pusha
lret
jns
add
inc
dec
jbe
sub
cmp
jecxz
js
stos
xor
aas
xchg
pop
in
cmp
cmp
mov
insb
mov
rolb
pmullw
adc
addr16
mov
cmp
ja
cmc
nop
int3
inc
les
leave
cmp
sub
inc
inc
inc
ljmp
pop
inc
test
and
dec
in
mov
push
jmp
imul
mov
in
inc
out
add
cmc
cs
push
dec
inc
mov
test
and
push
sahf
mov
dec
fwait
push
aam
pop
xor
pop
nop
dec
lret
jmp
iret
loopne
xchg
adc
inc
mov
mov
xor
cmp
je
mov
adc
or
stos
loopne
ljmp
repnz
push
cs
fsub
mov
out
sbb
rcll
push
imul
data16
insb
xchg
xlat
jno
mov
inc
mov
mov
jno
out
and
xor
outsb
sbb
movsb
and
fidivl
xlat
cmp
lock
scas
push
mov
mov
stos
cmp
frstor
dec
cmc
fcoms
jns
inc
fistpll
mov
jge
xchg
stc
shlb
rolb
leave
repz
inc
daa
out
sub
ja
es
iret
es
inc
addr16
test
push
ss
push
in
nop
pop
adc
push
dec
add
mov
pop
lcall
jae
jge
push
adc
xchg
stc
dec
dec
dec
cli
mull
data16
mov
lods
xchg
aaa
pop
and
mov
xlat
mov
rcl
or
ljmp
ficomps
mov
mov
int
in
sbb
jb
mov
repnz
inc
mov
movsb
xlat
ret
in
sub
mov
mov
push
sub
and
jbe
shlb
jle
mov
mov
fmul
jb
cmp
or
cltd
fdivl
inc
cld
fimuls
shl
cmp
xchg
add
pop
fistpll
lods
les
je
mov
enter
lahf
lods
push
pop
xor
test
lcall
hlt
mov
test
ret
sub
aad
mov
push
das
cltd
ss
test
push
into
fnstenv
inc
and
jbe
adc
mov
mov
dec
dec
nop
shll
dec
aaa
insb
lcall
rcrb
test
xchg
loope
jmp
pop
push
add
adc
inc
ret
adc
push
jl
lea
push
lods
int
mov
test
sahf
xchg
leave
mov
cli
lods
out
fdivp
nop
add
stc
jge
jle
xchg
adcl
test
dec
fisttpll
in
fwait
push
lcall
test
or
push
scas
icebp
rcrb
jne
shl
or
fstp
shlb
in
jg
mov
dec
adc
inc
pop
xchg
add
xchg
mov
daa
dec
scas
cmp
xchg
sbb
push
inc
sub
mov
enter
dec
and
sbb
add
pusha
out
imul
or
adc
in
xchg
out
loope
and
xor
sub
xlat
sub
aad
test
negb
sub
fnstsw
jo
fisttpl
pop
dec
jle
cmp
popa
ljmp
push
scas
loopne
mov
and
add
mov
movsl
stc
out
dec
roll
pushf
xor
pop
mov
shrl
push
dec
cli
cwtl
lods
jb
inc
adc
cltd
mov
test
pushf
sbb
stc
and
insl
push
mov
fisttpl
ds
sub
jo
add
loope
addr16
sub
cmpsb
xchg
sbb
sarb
repnz
iret
jnp
outsl
test
aaa
push
dec
add
pop
stc
jne
inc
mov
pop
xchg
push
dec
sub
push
lods
stc
and
arpl
int3
push
fs
lcall
adc
mov
mov
ficomps
jbe
test
mov
cltd
fsubrs
push
sbb
mov
inc
xor
movsl
andl
loopne
xchg
pop
ret
add
nop
cmp
imul
and
ret
pop
cmp
je
sahf
xor
adc
pop
fistl
dec
dec
mov
xor
push
scas
movsl
mov
adc
push
iret
test
daa
add
jl
adc
jecxz
rcr
inc
lret
xlat
or
std
clc
rclb
cmp
sub
test
fmull
push
jmp
xlat
xchg
jmp
or
dec
scas
clc
movsl
out
jmp
push
dec
sbb
mov
dec
adcl
std
push
xchg
out
scas
jecxz
jp
and
jns
je
xor
loop
sub
loop
in
cmpsl
xchg
jnp
push
insl
mov
jne
or
sarb
jp
mov
xor
negb
in
repz
in
xchg
cmp
loope
nop
sbb
cmp
pop
add
stos
shlb
aad
outsb
mov
rcll
cmp
pop
fs
cld
lods
lcall
lret
icebp
dec
xchg
clc
push
int
sti
mov
dec
sub
jnp
pop
subb
push
addr16
jecxz
mov
sbb
pop
insb
icebp
push
subb
in
mov
mov
adc
or
mov
test
sub
mov
dec
push
xlat
dec
stc
scas
arpl
push
jno
lock
pushf
icebp
inc
pop
mov
and
add
pop
scas
movsb
xor
sti
inc
jns
mov
mov
push
inc
inc
addr16
ja
dec
fimuls
aaa
xorl
sbb
clc
insb
cmc
enter
push
pop
jnp
in
ja
sub
icebp
lds
jns
push
cmp
pop
sub
mov
inc
mov
rcll
stos
leave
jne
mov
js
ret
jl
jl
push
sub
enter
ret
std
push
pop
cmp
fsubrl
or
jge
mov
mov
ds
cmpsl
loope
xorb
bound
mov
cmc
sub
dec
sub
xchg
lock
stos
test
rcll
inc
rcrl
mov
add
pop
xor
mov
fcmovnu
pop
xchg
aas
jno
add
fisttpl
mov
movsl
bound
das
movsl
insb
dec
testl
mov
es
loop
movsl
cmp
repnz
scas
fadds
lahf
and
cli
pop
adc
sahf
inc
and
mov
mov
arpl
sbb
add
incl
and
push
and
xchg
fwait
pop
adc
mov
mov
in
inc
shld
clc
ja
std
xlat
in
in
imul
mov
cmp
xchg
stc
aas
imul
pop
push
test
jecxz
cltd
mov
inc
jns
orl
in
outsb
addr16
xchg
xorb
shll
push
fnsave
pop
fidivs
daa
out
cwtl
adc
aad
ds
mov
add
xor
jb
in
call
lahf
xor
int
dec
insb
push
cmp
outsl
inc
lret
add
andl
cld
outsl
mov
push
cmp
jne
test
or
scas
xor
js
aad
in
js
jge
and
adc
iret
cmpsb
inc
sbb
out
mov
dec
jo
int
adc
lahf
mov
in
inc
scas
fadds
ret
out
test
dec
in
in
ds
mov
lcall
repnz
ret
lods
leave
les
lret
xchg
sub
sbb
ja
mov
sahf
cmp
cmp
outsl
mov
fcoms
enter
or
orb
call
mov
aam
fwait
and
cmp
lea
pop
adc
mov
jp
fildl
pop
dec
jne
xchg
pop
jle
ss
mov
notl
fs
xor
cli
hlt
xchg
jne
jg
sub
lods
ja
push
push
dec
xchg
aam
shrl
repz
pop
imulb
arpl
pop
cmp
pushf
xchg
fwait
shlb
roll
mov
or
outsb
lea
dec
pop
lods
jbe
sbb
jmp
pop
aad
rclb
jecxz
sub
test
and
sub
repnz
push
cmpsl
pop
lcall
lods
pop
fcomi
je
into
fidivl
xor
aad
push
out
je
xchg
je
adc
ljmp
add
adc
jns
jge
lea
jl
call
decl
mov
ja
ja
inc
ret
shr
sub
test
pop
into
mov
ja
clc
in
lea
scas
mov
pusha
scas
add
mov
ficomps
push
test
sbb
sub
stc
add
sbbb
out
or
fstl
lds
add
fstpl
adc
and
mov
rorb
mov
or
in
push
fwait
jecxz
dec
negl
lcall
insb
and
adc
repnz
imul
test
into
xchg
aas
dec
mov
mov
pop
les
jecxz
call
lcall
cmp
xor
adc
outsb
in
or
clc
in
test
test
jbe
inc
dec
mov
lret
cmp
sub
fiaddl
imulb
movq
mov
lahf
push
xlat
xor
das
in
cmp
fucomp
xor
cs
pop
rcrl
push
pop
aaa
out
dec
lret
jo
pop
push
fdivs
push
out
loop
xchg
jns
sbb
lock
movsb
mov
dec
add
ds
pop
mov
sbb
push
jecxz
push
bound
or
add
or
mov
sbb
icebp
cmp
mov
ret
jle
and
adc
gs
mov
jmp
push
stc
fcomi
fistl
pop
dec
dec
cmc
push
mov
xchg
in
xchg
and
rcrb
stos
gs
movsb
scas
mov
pop
or
mov
inc
sbb
cmp
mov
adc
ljmp
push
in
mov
test
mov
dec
jle
ja
jge
cli
subl
fnstcw
pop
mov
mov
mov
jb
jnp
mov
loopne
gs
xlat
fildl
or
inc
test
test
and
mov
aas
adc
sbb
mov
sub
mov
lds
mov
das
stos
dec
push
mov
sub
out
or
sbb
or
pop
std
add
shrb
adc
lods
andl
into
pop
xchg
in
push
and
or
leave
mov
mov
push
pop
in
ds
test
loop
test
xor
cmpsl
leave
jnp
bound
mov
xor
mov
shl
ja
repz
inc
xor
out
cmpsb
mov
imul
or
xlat
jne
lods
stos
xor
or
mov
add
mov
xor
xlat
push
jecxz
daa
sbb
loopne
ss
jg
mov
js
stos
andb
scas
dec
xlat
imull
outsb
xchg
xor
pop
adc
xchg
dec
mov
aad
lock
push
shrb
dec
push
or
add
sub
cmp
aam
mov
xchg
cmpsb
cwtl
jle
pop
inc
arpl
pop
outsl
sbb
aaa
and
mov
in
lock
imul
nop
push
add
jp
mov
sti
hlt
push
cld
mov
push
pusha
popf
lret
inc
nop
push
dec
outsl
and
jb
sbb
mov
andb
xchg
nop
cmpsb
dec
lcall
xchg
insb
fwait
add
xor
or
inc
jnp
lods
xlat
ljmp
popa
dec
fsubrl
push
and
adc
or
sarb
xlat
outsb
aam
jg
loop
mov
sub
add
out
test
imul
leave
cmpsb
jnp
int
xor
in
mov
pusha
das
outsb
loopne
mov
fwait
adc
lods
dec
negb
inc
sti
or
ljmp
shll
pop
mov
les
sub
or
stos
ljmp
jp
orb
sbb
mov
dec
sub
scas
popa
shr
push
jecxz
imul
faddl
ficompl
ljmp
divb
xor
int3
add
jle
sbbl
xor
lahf
jg
adc
jmp
aad
stc
mov
aad
adcb
popf
lahf
or
mov
jmp
xor
mov
or
pop
push
test
pop
outsb
mov
add
xor
fbstp
out
mov
mov
mov
inc
mov
rcl
sbb
inc
push
out
sub
scas
and
sarb
cmpsl
fucomp
popl
nop
int
call
or
adc
xchg
out
ss
inc
or
mov
and
xor
or
fmull
stc
and
addr16
jne
addb
cli
push
in
mov
add
pavgb
jnp
fdivrl
icebp
scas
das
insl
mov
lods
mov
rorb
pop
repz
std
xchg
int3
xor
fnstcw
ss
adc
pushf
int
and
cld
fnsave
negl
loope
and
mov
fcmovne
inc
sbb
fnsave
xchg
call
adc
movups
outsb
mov
push
in
cltd
mov
adc
mov
or
aad
fs
xor
xchg
sub
daa
push
les
mov
fbld
repnz
cld
pop
mov
ss
fidivl
xchg
popf
inc
loop
jae
mov
enter
jp
push
pop
test
lods
pop
pop
xchg
outsl
lea
movsb
mov
cmp
and
jb
adc
test
mov
xor
test
or
in
shrl
xchg
xchg
xchg
je
jg
movsb
cmpsl
call
sub
or
pop
pop
dec
cmc
scas
jge
adc
fists
sbb
mov
daa
sub
push
jmp
pop
imul
mov
sti
xchg
and
xchg
jecxz
inc
shl
xor
test
ja
dec
lods
xorb
out
mov
xchg
mov
int
jbe
jecxz
push
scas
lcall
sbb
cmp
addr16
sarb
or
fdivrs
pop
into
push
dec
nop
orl
mov
xchg
and
add
lahf
and
jnp
mov
add
int
aad
into
scas
cli
push
pop
mov
adc
or
aam
xchg
cld
das
mov
mov
cltd
sub
fdivs
jp
lcall
push
imul
sbbl
mov
in
add
out
call
push
pop
jae
mov
dec
mov
stc
pushf
ffreep
test
xorl
ljmp
nop
pop
xchg
push
inc
setge
push
out
add
or
ljmp
mov
aas
aad
lahf
mov
shlb
jl
int
push
movsl
cmpsb
cmc
lock
pop
mov
jg
push
or
in
or
stos
pop
cltd
dec
mov
out
adc
mov
push
mov
adc
jb
bound
das
pop
and
fldenv
sbb
push
shll
push
inc
daa
enter
lret
jo
in
loope
mov
xchg
xlat
or
jb
hlt
mov
movsl
sahf
jb
outsl
sahf
inc
mov
ficoms
or
ja
jmp
jns
mov
cli
xor
mov
scas
sbb
stos
pop
mov
cmpsl
sarl
loop
jae
xor
mov
lea
int3
in
push
fst
mov
jl
sub
aaa
stc
outsb
mov
repz
jbe
cltd
popa
adc
jl
fnstenv
lret
repnz
mov
bound
adc
repnz
decl
xchg
sub
lret
daa
out
pusha
or
lds
shrb
movsb
nop
sbb
inc
xchg
inc
stos
movsl
add
mov
cmc
lret
lods
mov
mov
rclb
mov
or
ficomps
test
fildll
pop
inc
lds
mov
movb
sbb
mov
aam
repz
and
and
fwait
add
imul
xor
mov
cwtl
cmp
adc
mov
add
pop
push
aad
mov
xchg
xor
in
jbe
mov
sub
jbe
and
imul
or
ljmp
xor
add
nop
mov
repz
and
xchg
and
lods
loope
rcrl
jle
mov
std
loopne
jnp
ss
mov
jg
data16
int3
syscall
or
insb
lock
sar
mov
xchg
bound
imul
dec
add
sar
jbe
in
jbe
xchg
or
subl
or
or
add
addr16
mov
mov
or
push
jle
pop
push
jp
int3
push
mov
in
lds
out
xchg
icebp
nop
fisttpll
mov
sub
rolb
out
enter
xchg
add
and
adcb
dec
dec
and
or
fs
push
and
sbbb
andl
enter
clc
repz
call
sub
pop
mov
jl
xor
ret
mov
imull
jns
outsl
movsl
sbb
mov
dec
ss
ja
dec
add
or
stc
jge
push
loopne
cmp
xchg
xchg
sete
icebp
xorl
jp
mov
shl
jae
int3
sarb
xchg
scas
ja
push
je
mov
cmc
cwtl
repz
push
fnstsw
inc
addr16
push
lods
and
adc
sub
adc
xor
test
jmp
adc
jne
push
repz
pop
sub
mov
movsl
push
in
scas
xor
data16
mov
fstl
mov
out
out
ja
and
jle
push
in
lods
fs
xchg
movsl
pop
out
call
pop
popa
call
mov
cmc
xchg
mov
outsl
cmp
into
mov
idivl
xor
sahf
hlt
adc
add
gs
outsl
sub
pop
push
arpl
out
ret
adcb
iret
push
pop
aaa
and
add
mov
jns
dec
xchg
mov
jbe
push
cmp
outsb
or
std
xchg
enter
sti
movsb
xor
movsb
push
pop
scas
mov
and
pop
imul
fisubs
mov
iret
jb
inc
ljmp
fwait
aas
jge
int3
in
in
fs
push
add
int3
pop
cmc
les
xchg
rcl
outsl
push
outsb
call
aaa
jp
xchg
push
scas
xchg
sub
sbb
xchg
adc
pop
mov
shrl
lods
sub
dec
rorl
mov
jb
push
jecxz
scas
add
mov
iret
jns
shrb
inc
jbe
rcrl
sub
iret
mov
jno
in
inc
mov
or
cmc
inc
lret
sub
jmp
mov
mov
shr
dec
mov
mov
ljmp
fld
test
and
sub
xchg
outsl
xchg
dec
ds
insb
push
sbb
movsb
add
icebp
lret
mov
fcmovne
mov
or
xor
pop
or
mov
mov
enter
lds
jl
js
insl
test
pop
enter
lock
push
mov
sub
std
cmp
lock
jmp
mov
ds
daa
frstor
mov
push
fcmove
inc
cwtl
or
sbb
sub
out
sti
lcall
aaa
pop
bound
push
pop
mov
mov
sub
push
push
popa
loop
dec
sub
and
push
or
loop
sub
fcmove
or
xor
jae
adc
clc
and
es
subb
mov
insb
mov
dec
xchg
repz
sbb
xchg
hlt
add
mov
ja
adc
mov
scas
push
xchg
loope
movsb
cmp
lods
pop
repnz
push
movsb
xor
pop
popa
xchg
xor
sub
popf
xlat
aad
es
cmp
divl
mov
leave
mov
aad
out
fisubrs
dec
xor
xor
xchg
add
pmovmskb
aad
sbb
inc
std
push
sbb
pusha
mov
mov
daa
scas
inc
xor
sarl
ds
fcompl
lods
cmp
push
insb
mov
clc
push
loopne
out
jbe
ficoms
dec
jo
data16
int3
mov
fwait
adc
int3
out
sbb
rolb
and
and
cmc
or
mov
pushf
jne
add
mov
xchg
push
jo
into
call
cmovp
ret
jmp
adc
cmp
xchg
mov
ljmp
sub
adc
cmc
ficoms
jo
jp
aaa
jbe,pt
push
pop
or
or
mov
jmp
in
popa
cmp
jmp
mov
cmpsl
inc
repz
jg
lcall
pop
loop
lahf
outsl
mov
xor
jne
and
adc
loopne
lahf
mov
cli
stos
push
jne
jge
push
jl
mov
or
jecxz
in
aam
dec
or
or
xor
pop
inc
inc
imul
pop
pop
fchs
xchg
inc
add
mov
leave
jns
mul
lds
out
cmp
setns
push
icebp
ljmp
inc
cmp
lahf
das
push
ljmp
jne
clc
pop
cmp
fists
sbb
in
add
xchg
xor
pop
mov
inc
mov
inc
dec
dec
test
std
sbb
rolb
jecxz
leave
popf
pop
clc
jge
pop
pushf
mov
cmpb
mov
cmp
pushf
adc
mov
pop
pop
or
cmpsw
cmp
test
lcall
adc
int3
mov
mov
adc
sub
inc
push
movb
bound
pushf
lahf
cmpsb
sbb
xchg
jmp
jmp
adc
mov
jmp
icebp
aad
insb
add
mov
xor
sbb
mov
mov
dec
data16
adc
repz
inc
xchg
mov
outsl
inc
dec
sub
fldt
aaa
push
addr16
mov
mov
and
jmp
cmp
enter
add
cmp
mov
lahf
ljmp
mov
icebp
adc
push
jns
jae
push
mov
stc
inc
rorl
cmp
sub
or
aad
out
jns
xor
ja
jge
ja
into
mov
sbb
add
adc
or
and
xchg
rcrl
push
fimuls
jp
scas
xlat
pop
ss
fucomip
mov
xchg
fcoml
jmp
cwtl
push
cmc
outsl
sub
aad
aas
pop
push
xlat
mov
pop
loop
mov
movsb
jp
or
popf
or
leave
jge
aam
je
sub
dec
lret
mov
test
sarb
in
stos
cmp
leave
call
fwait
leave
call
rcpps
arpl
inc
repnz
or
fcmovbe
sub
mov
dec
mov
in
add
leave
cmp
sbb
cwtl
aaa
add
sbb
imul
leavew
dec
pop
dec
sbb
aad
mov
fistpl
dec
movsb
fisttps
clc
xor
sub
or
fadd
fidivrl
push
mov
repz
into
sbb
and
sbb
in
insb
inc
xor
loope
mov
adc
fldcw
sbb
mov
fsubrl
mov
jbe
xor
addr16
add
xchg
pusha
imul
cmpsb
stc
scas
std
test
mov
test
inc
cwtl
pushf
dec
pop
pusha
jg
mov
into
outsl
ss
mov
fcomps
test
fldenv
mov
xchg
rorb
imul
fdivrl
jnp
sahf
hlt
sub
mov
loope
leave
mov
inc
lret
jo
sahf
jecxz
pop
in
les
mov
testl
testb
idiv
push
inc
dec
push
frstor
subb
cmp
in
pop
out
xchg
out
inc
enter
adc
xchg
jmp
int
xor
in
xor
jno
add
cmpsl
lods
jns
in
gs
xchg
mov
rorl
out
popf
xchg
inc
mov
ljmp
popf
rcll
in
int
cmp
insl
in
jo
pop
scas
inc
jne
mov
mov
lock
rcr
pop
insl
in
push
hlt
ss
cmp
sbb
ja
lcall
rol
shlb
loope
jbe
aaa
mov
xor
stc
mov
add
test
movsb
outsb
sbb
ret
enter
mov
aad
add
cmp
pop
imul
negb
insl
out
mov
aam
xchg
loopne
cmp
pop
fsub
push
xchg
pop
test
pop
cmp
je
insb
mov
inc
cli
shrl
ss
xlat
daa
or
pop
pop
sub
test
xor
inc
ss
jle
push
in
adc
push
out
jbe
xchg
shl
push
sbb
xchg
sub
lea
movsb
cmpsb
sbb
cmp
xchg
xchg
aas
rcrl
pop
sarb
imulb
add
ss
cmp
add
jae
aaa
add
push
cli
pop
ret
popf
insl
sub
or
bound
movsl
jnp
sbbb
nop
ljmp
push
lahf
jmp
mov
inc
cmpsl
aaa
sahf
mov
dec
cli
sub
mov
loop
inc
xchg
imul
mov
in
scas
je
pop
pusha
or
notb
jns
js
push
pop
fisubs
lret
scas
in
add
test
adc
out
or
fs
pop
ret
xor
dec
cmp
or
or
out
les
ds
sbb
pop
jbe
testl
mov
sub
dec
stos
jg
mov
in
pop
push
fiaddl
mov
das
sbb
push
scas
gs
dec
out
das
push
jp
add
mov
stc
ret
clc
loopne
add
inc
adc
mov
and
out
aad
add
cmp
inc
pusha
and
std
js
mov
sub
aam
scas
or
or
popa
lods
cwtl
cs
dec
loop
pop
add
xor
jae
das
jle
jnp
dec
mov
push
push
sti
icebp
jo
mov
andl
cli
mov
iret
cmp
dec
repz
insb
pop
mov
dec
stc
fimuls
jbe
mov
cmp
imul
mull
popf
scas
outsb
jbe
inc
and
lods
or
push
lock
andl
dec
das
aam
enter
xor
pop
ds
test
mov
add
addr16
rol
jo
mov
aad
xabort
call
das
mov
sbb
not
testb
arpl
aas
sbb
dec
pop
faddl
pop
repz
ret
sub
in
scas
fwait
pop
ss
fimull
push
fcomi
lods
mov
mov
shlb
jp
cwtl
fwait
jne
xchg
push
out
repz
mov
leave
movsl
mov
pop
pushf
daa
inc
mov
jns
mov
or
sbb
in
and
dec
dec
mov
lods
mov
ljmp
fildll
dec
push
je
jbe
and
mov
fidivrl
psubq
or
dec
push
int3
mov
jle
pop
push
mov
mov
cmp
mov
and
ds
and
and
stos
sahf
sbb
stc
push
aam
mov
sub
push
ds
ljmp
test
cwtl
pop
mov
imul
out
sub
testb
dec
mov
mov
mov
push
jmp
cmp
xor
pop
push
dec
into
sbb
ds
inc
call
popl
mov
cmp
int
pop
stos
test
cmp
aaa
jmp
addr16
and
loope
xchg
test
mov
dec
inc
sahf
inc
xor
pop
pop
or
mov
pushf
ja
or
mov
push
pop
cltd
dec
cmp
pop
mov
into
stc
dec
cmp
int
sbb
in
ficompl
push
inc
jge
push
ss
dec
pop
sbb
or
mov
jg
loopne
xor
mov
and
pop
add
add
mov
add
imul
pop
js
jg
or
lcall
xor
mov
xor
mov
lea
sbb
pop
xor
mov
mov
mov
add
in
mov
fildl
iret
les
bound
imul
or
adc
and
push
outsb
cvtpi2ps
jg
fwait
ja
mov
cmpsl
or
push
pop
mov
pop
mov
imul
std
adc
rcrb
cmp
je
pop
pop
imul
pushl
and
mov
ss
rorb
loope
call
outsb
sub
xor
dec
lods
jne
inc
iret
sbb
test
aam
mov
dec
pop
dec
in
shll
inc
and
mov
inc
and
cmpsl
iret
adc
mov
sbb
or
inc
xor
sbb
inc
addr16
xchg
sbb
scas
jnp
push
dec
hlt
pop
sub
inc
sub
test
and
test
xor
hlt
xchg
imul
mov
mov
std
pop
outsw
inc
mov
in
dec
es
out
xchg
into
daa
fst
ja
daa
cltd
rdpmc
icebp
jl
push
sub
out
sbb
cmp
iret
adc
clc
cmp
sbb
push
adc
xor
mov
push
dec
iret
stos
fsubr
enter
mov
xchg
fs
or
mov
jne
lcall
push
out
jo
lret
add
add
loopne
pop
add
or
xlat
lahf
aas
loop
mov
hlt
les
xor
movsl
push
adc
scas
lods
shrl
jno
ss
xchg
test
jnp
pop
add
dec
cmp
ljmp
and
push
sbb
aad
jge
lea
stc
jb
iret
add
aas
subl
addr16
ds
xor
fnstcw
call
loopne
in
cmp
mov
jnp
xor
inc
xor
and
pop
inc
hlt
mov
cltd
adc
mov
leave
sahf
cmp
stos
iret
or
pop
sti
mov
add
imul
jb
push
ret
cli
pop
cmpsl
push
or
add
and
int3
lcall
int
mov
pushf
bnd
push
sbb
test
add
add
push
pop
imul
adc
bnd
jle
sbb
inc
mov
dec
test
ficomps
inc
pop
imul
arpl
push
push
push
fwait
adc
xorb
ficomps
aaa
subl
stos
nop
sub
mov
hlt
dec
jecxz
scas
mov
scas
sub
loopne
sub
movsl
leave
data16
in
mov
mov
push
cld
test
jae
cmp
xchg
pop
xor
scas
add
in
ud1
sbb
xchg
mov
repz
sub
mov
popf
mov
jo
sarl
cltd
pop
int
jmp
das
mov
xor
addr16
mov
jbe
jns
mov
dec
stos
lahf
and
mov
lods
pop
xor
push
in
mov
ss
fsubr
mov
fstps
adc
dec
test
and
dec
jns
sbb
cld
or
mov
hlt
jne
cmp
add
mov
stos
ss
xor
mov
hlt
std
les
xchg
or
mov
xchg
fisubrl
lds
in
xor
idivb
ja
jmp
sar
incb
dec
insb
popf
and
pop
fisubrs
bound
jmp
mov
jle
xchg
pop
cmp
out
int3
lret
rolb
pop
xchg
movsb
in
shr
cmp
or
lahf
push
adc
in
mov
aas
mov
jg
mov
adc
inc
and
out
jle
jne
sub
xchg
aad
es
dec
test
cli
jle
shl
lahf
lea
push
or
inc
mov
mov
clc
xchg
lahf
push
movsb
lret
popf
dec
xchg
imul
jnp
xor
sti
data16
testb
inc
dec
loopne
jp
bound
fs
adc
leave
xchg
nop
mov
mov
pushf
mov
mov
fcoms
shlb
inc
fwait
pop
mov
int
lcall
aad
aas
sbb
cmpsl
ss
movl
pop
xchg
mov
push
daa
in
xor
test
inc
jle
mov
divl
adc
out
leave
shlb
rcll
and
xor
fdivs
jge
cmp
out
jae
jge
fldenv
sub
add
cmc
mov
cs
out
or
jo
pop
jp
mov
fs
push
ds
sub
into
je
shrb
lahf
lods
outsb
ret
add
sbb
dec
pop
xchg
loop
daa
jge
movsb
xor
out
jns
out
cmp
je
in
jmp
inc
sahf
and
jae,pn
sbb
out
push
or
dec
ss
jnp
cmpsl
adc
rcr
mov
bound
data16
mov
push
popf
jae
lret
mov
daa
cmp
ja
jge
sbb
cld
lahf
mov
out
ja
pusha
and
ja
dec
movsb
test
popa
xor
jmp
jmp
push
in
popf
int
sarb
ficompl
dec
out
pop
test
ret
pop
xchg
in
mov
nopl
mov
jb
xchg
mov
mov
mov
leave
xchg
stos
mov
shlb
repz
imul
xchg
xchg
movsb
sbb
sub
jle
sub
test
mov
je
ficompl
pop
lret
or
dec
jmp
shll
divb
sub
inc
lea
int3
daa
iret
xchg
rol
adc
in
push
xchg
mulb
add
lcall
cwtl
std
mov
outsb
xchg
ficompl
mov
cwtl
test
mov
loopne
cmp
jns
push
mov
xor
ja
push
sub
enter
das
inc
insb
sub
cli
xor
or
ljmp
iret
out
lock
test
shlb
and
xchg
mov
pop
sti
pop
orb
jle
dec
das
and
mov
call
jnp
cld
pop
scas
pop
sub
popa
mov
push
fadd
in
cmp
lods
jge
iret
jo
mov
std
rorl
dec
pop
dec
mov
scas
insb
mov
mov
mov
popf
sub
sbb
xchg
sti
cwtl
dec
mov
adc
nop
or
cmp
pop
sub
daa
jno
rcrl
xchg
cmpsl
dec
mov
shlb
pop
rorb
lret
cmp
pop
int3
xchg
mov
xchg
dec
out
out
lret
clc
ss
es
repz
dec
fstl
jbe
lret
in
mov
mov
mov
push
jne
inc
mov
fnsave
push
divb
add
hlt
xchg
push
fnsave
inc
fiadds
test
jecxz
push
sbb
cli
fsubr
aas
sarb
rcrl
pop
mov
and
xchg
sarb
stos
or
pop
cmp
cmpsl
cmp
inc
inc
mov
mov
fs
mov
push
out
jmp
fdivl
push
fldt
pop
pop
inc
sarl
xor
fs
xlat
repnz
loope
push
jbe
inc
aas
addr16
das
pop
and
push
push
inc
add
imul
dec
jo
sub
and
test
pop
xchg
mov
push
out
pop
rorl
pop
mov
in
js
imul
jno
leave
out
push
faddl
mov
scas
ds
cwtl
cmp
and
stos
cmpsl
imul
adc
mov
adc
movsb
xchg
ja
faddp
mov
mov
int
push
xor
xorl
inc
scas
dec
cmp
movsl
cld
pop
and
int
jmp
or
sub
adc
xor
loopne
int3
pop
xchg
lret
push
pop
ja
mov
dec
xchg
xchg
fs
sbb
xor
adc
xchg
sub
cmp
mov
mov
sbb
pop
enter
scas
ret
sbbl
xor
or
mov
pop
repz
out
jnp
repnz
inc
push
xor
mov
jnp
push
xchg
inc
aad
cmp
popa
aam
pusha
adcb
mov
hlt
ds
and
fdivrs
fs
shlb
sbb
outsl
and
inc
sub
and
sbb
xchg
and
mov
sbb
ret
cs
scas
fwait
add
jbe
mov
movsl
fcompl
and
cltd
inc
mov
jl
pop
cltd
pop
lret
std
insb
cmp
repnz
sub
add
hlt
mov
cwtl
clc
inc
adc
dec
mov
lods
or
insl
movsl
loope
push
mov
xchg
bound
add
into
mov
xor
push
out
inc
xchg
out
cli
xchg
lods
jns
xor
lods
sbb
cmp
xor
xor
push
fimull
sbb
andb
mov
adc
pop
cmp
mov
insb
iret
int3
jmp
clc
push
bound
arpl
sbb
fsubrs
out
mov
adc
mov
push
sbb
jbe
jae
dec
dec
test
inc
stc
or
sub
add
add
ja
clc
das
sub
lock
mov
push
jp
xor
das
sub
xor
out
es
daa
add
inc
push
mov
in
push
mov
call
mov
xchg
inc
mov
es
int3
xorb
dec
mov
pusha
jecxz
add
nop
into
inc
cmp
dec
xor
jnp
mov
sbb
pop
inc
test
insb
testl
dec
pop
imul
sub
leave
lock
test
imul
mov
out
leave
sub
xor
clc
push
lcall
outsb
push
mulb
mov
or
dec
mov
cli
outsl
mov
addr16
jmp
xchg
loope
pop
je
cmpb
ret
das
adc
inc
mov
cmp
mov
and
jge
repnz
aas
mov
cltd
mov
imul
pushf
rcrb
frstor
and
jle
mov
xchg
add
mov
pop
leave
mov
test
aas
add
imul
repz
inc
jno
jl
iret
sbb
lods
enter
scas
dec
push
nop
pop
outsl
mov
add
imul
sub
pop
rcrl
pushf
enter
les
std
inc
loop
inc
icebp
movsb
and
mov
mov
jle
inc
dec
mov
pop
imul
sbb
jmp
xchg
dec
cmpsb
cmp
push
pop
sbb
out
faddl
dec
lret
mov
mov
adc
rorb
addr16
sbb
cmpsb
fadds
adc
xor
ja
lods
xor
mov
and
mov
sub
cmpsl
sahf
into
lods
push
cmpsb
fisttps
push
inc
push
adc
push
js
and
mov
inc
sub
xor
lods
sahf
and
pop
sbb
dec
fcmovb
les
cmpsl
mov
cmp
fistps
push
jge
popf
push
jb
pop
xor
stos
jnp
mov
repnz
jns
or
mov
dec
dec
dec
aas
xor
xlat
rcll
cmpsb
push
cwtl
sub
das
sarl
mov
out
push
rcrl
cs
jg
xchg
lods
mov
pusha
and
xchg
sbb
xchg
inc
jg
push
adc
push
leave
sub
incb
ret
sub
mov
xorl
leave
jp
jl
imulb
decb
adc
add
data16
sahf
andl
pop
pop
into
out
into
cmpsb
pop
xor
clc
jl
pop
popa
loopne
inc
jecxz
movsb
gs
rcrl
sub
test
ret
xor
push
insl
mov
fistpll
cmpsl
fs
test
hlt
cmpsl
mov
aas
inc
jns
nop
fs
fmuls
sub
mov
testb
rcl
stos
pusha
and
sbbb
mov
mov
testl
mov
sbb
xchg
xchg
mov
ljmp
and
enter
ja
dec
xchg
js
imul
mov
aam
xor
inc
mov
das
lods
inc
jl
sub
loop
aad
fbstp
xchg
mov
cmp
cwtl
leave
jl
loope
imul
orb
or
dec
in
jns
xor
xorl
jae
cmp
xor
bound
cmp
jp
xchg
mov
rolb
pop
sbb
jno
sub
int
xlat
push
mov
xor
dec
mov
das
inc
xchg
out
mov
aas
cwtl
pop
adc
aam
xchg
or
mov
aas
add
and
popf
mov
sub
fsubrs
sbb
lahf
rolb
insl
xor
stos
ja
leave
repnz
cwtl
inc
imul
jne
std
adc
cmc
rorb
pop
fs
cmp
cli
test
add
mov
orl
or
andl
sub
lcall
popf
xor
jne
in
push
int
jbe
and
call
adc
mov
dec
jp
cltd
push
stos
iret
popf
sbb
jnp,pn
vpmacswd
lcall
test
idivb
jle
cmpsl
mov
lods
es
xor
ret
rol
lods
adc
popa
repz
les
or
push
cmp
sbb
jb
push
sbbl
push
push
pop
cmpsl
loopne
push
inc
lahf
mov
pop
dec
int3
xorb
arpl
nop
or
in
cmp
fs
push
or
jge
add
enter
loop
fstps
cmp
das
mov
inc
xor
sbb
iret
sub
cmp
popa
int
ret
cmpsb
pop
mov
cmp
ret
add
mov
jbe
pop
jo
popf
mov
push
out
call
pusha
xor
lret
jns
mov
and
mov
into
cwtl
enter
jle
lods
js
leave
xchg
lods
stos
add
roll
pop
xchg
int
dec
adc
sbb
stc
in
lret
pop
and
mov
iret
lret
lcall
adc
mov
xor
xor
insb
push
inc
dec
adc
push
or
jno
sub
jg
mov
pop
xor
stc
sbb
shlb
aas
cld
push
xor
dec
xchg
lret
in
sub
out
adc
iret
test
or
mov
mov
inc
xchg
dec
test
fisttps
nop
fdivl
mov
inc
pusha
test
jno
shrb
out
insb
and
insl
jl
xor
jg
adc
out
mov
stos
fildll
xchg
or
lds
gs
xchg
xchg
sbbb
dec
mov
sti
sub
pop
lahf
int
jle
xor
loop
cltd
adc
push
and
shl
into
hlt
hlt
jmp
jae
sbb
mov
sti
push
jl
aam
movsl
dec
pushf
lds
cmp
mov
test
jge
js
cwtl
push
mov
cmpb
pop
call
fildl
push
cmp
mov
lahf
mov
jno
sub
mov
jle
jmp
mov
aaa
mov
xchg
notl
in
push
jle
sbb
dec
and
addl
dec
and
sub
je
in
fadds
loopne
andb
pop
fstps
lods
sub
aaa
mov
jne
or
push
pop
and
mov
xchg
test
and
pop
or
pop
jo
pushf
push
adc
mov
mov
cmp
mov
jg
dec
sarl
ds
lcall
sti
pop
cld
das
cmc
lods
aad
sbb
int3
test
pushf
xorl
mov
xor
imul
loope
inc
adc
ss
gs
jo
insb
sahf
mov
cld
jo
je
ljmp
dec
ret
sbb
insb
adc
scas
ret
inc
out
inc
ret
xchg
bound
insl
cmc
dec
cmp
add
dec
lahf
mov
in
push
jg
push
sub
pop
pop
stc
xlat
lahf
dec
out
cli
subb
aaa
popa
in
ret
cwtl
fs
adc
or
es
lret
ret
xchg
sarb
inc
xchg
dec
mov
lods
lahf
pop
jmp
mov
xchg
mov
pop
or
lods
jmp
or
sbb
inc
nop
sbb
add
xor
int3
rolb
mov
mov
mov
inc
out
int
pop
xchg
lret
jecxz
call
inc
mov
xor
insl
xchg
repnz
jnp
mov
ss
jg
cli
add
pop
pop
addr16
pushf
aas
push
repz
sub
repnz
xchg
pop
jge
xchg
addb
and
jae
push
or
fdivrp
mov
and
push
sub
pop
repz
in
xchg
adc
push
ja
xor
jecxz
jg
int3
or
leave
push
sub
loope
int3
or
inc
mov
pop
gs
mov
rcrb
mov
pop
jno
fisubrl
add
loope
imulb
fnstsw
push
pop
cltd
pop
or
sub
cmp
sbb
mov
push
and
out
movsb
pop
xchg
add
dec
insl
int3
outsl
inc
sub
pusha
jnp
mov
pusha
loopne
fiaddl
insl
push
pop
cmpl
push
addl
mov
arpl
pop
insl
inc
mov
das
mov
dec
push
cwtl
ss
fimull
ja
sbb
mov
leave
inc
arpl
pop
fs
inc
mov
ss
stc
sbb
sbb
enter
xchg
les
ret
mov
js
xor
xor
jg
sub
xor
ret
inc
pushf
es
aad
jle
xor
in
mov
and
mov
clc
xor
xchg
out
enter
lock
sbb
mul
mov
cmc
inc
shr
cmp
sbb
les
scas
push
sbb
popa
into
mov
pop
addr16
sbb
sti
in
aas
sbb
cld
cmp
inc
in
pop
loope
pop
jecxz
sti
aad
das
and
popa
scas
push
inc
mov
add
andb
xchg
out
pushl
mov
pop
and
mov
sub
sahf
adc
sub
push
les
add
xor
mov
push
out
push
scas
sbb
jo
push
fcmovnbe
jecxz
pop
pushf
sub
xchg
sbb
mov
cmp
or
ret
dec
adc
cs
cld
and
sbb
mov
jb
mov
cltd
mov
into
dec
mov
sti
rorb
sub
lahf
inc
pusha
sub
inc
mov
jns
xchg
mov
xchg
sti
lcall
mov
mov
iret
aam
mov
ret
jnp
dec
xor
inc
daa
ljmp
rcll
xchg
fmull
or
push
out
cwtl
lahf
fsubl
cmc
lahf
adc
jle
pop
stc
dec
int3
xchg
inc
and
out
lods
enter
jae
sub
push
pop
pop
es
xor
lret
je
loop
add
pop
push
push
jo
push
outsb
mov
test
shlb
xor
leave
add
inc
fisttpll
xor
adc
mov
mov
test
mov
or
popl
lret
lods
aaa
sahf
stos
das
aas
rcrl
repnz
sbb
sti
aam
outsb
push
mov
jmp
jmp
pop
idivb
sarb
in
pop
and
push
les
arpl
roll
cmpsb
fmul
dec
sub
int3
test
add
popf
stos
lret
mov
scas
pusha
inc
jb
addr16
or
add
sub
sbb
mov
pop
xchg
pop
push
dec
movsb
adc
lods
pop
push
cmc
xchg
pushf
cmpsl
mov
sub
cmovb
or
mov
mov
out
xchg
hlt
xchg
lahf
sarl
adc
push
fisubrs
ss
fwait
stos
repnz
sbb
push
cmp
aam
hlt
mov
push
dec
xor
ss
fsubl
insb
or
mov
mov
cmpsb
pop
xor
push
test
jecxz
rcr
sbb
out
cmp
gs
push
in
stos
cmpsb
xor
sub
js
push
andl
hlt
fldz
sbb
cmpsl
in
leave
pop
lahf
sub
dec
out
cmc
sbb
and
loope
inc
jno
add
push
xor
cmc
jl
clc
movsb
mov
lods
cli
pop
pop
shrb
push
adc
and
inc
jl
add
aas
lods
cmp
rorl
cmp
xchg
push
lods
bnd
scas
or
push
xchg
sub
aam
daa
mov
inc
lods
ss
shll
fwait
rsqrtps
mov
mov
leave
js
push
in
ret
xor
or
sbb
int
clc
push
pop
cltd
or
stc
or
nop
incb
cmpsb
mov
dec
fstps
xchg
in
jp
jg
rclb
out
push
lret
leave
or
push
inc
cmp
mov
pop
push
js
popa
dec
mov
or
inc
and
cmpsb
add
pusha
mov
sub
dec
sbbl
or
or
push
adc
mov
popf
jmp
sbb
jae
xor
push
imul
pop
pop
fld
outsb
push
jle
mov
out
mov
lcall
jbe
jae
xchg
lcall
xchg
push
ljmp
scas
xchg
hlt
cmp
dec
out
stos
loope
mov
sarb
mov
fisttpl
addr16
lea
push
mov
test
xor
push
mov
jge
loop
jo
inc
sahf
test
mov
inc
lock
cs
adc
ss
out
mov
cmp
pushf
mov
movsl
xor
sub
insb
ror
xor
cmp
xchg
jns
test
fs
xchg
fdivl
test
dec
icebp
js
cmp
lods
cmp
fisttps
xchg
cld
mov
std
xchg
cmp
test
or
push
hlt
shrl
pop
cmp
mov
int3
mov
repnz
movsl
movsl
shr
cmpsb
xchg
bsf
sub
jbe
cmp
outsl
shrb
test
ljmp
mov
mov
out
sub
jl
aas
inc
gs
mov
mov
push
gs
insb
dec
mov
je
or
clc
mov
sub
je
push
or
add
pop
out
push
scas
ret
call
jns
ss
stos
dec
mov
cmp
or
pop
stos
pop
or
and
imul
pop
add
mov
mov
sbb
mov
and
test
seta
or
push
push
sub
jmp
ss
outsl
rcl
dec
xchg
jne
jnp
pusha
in
and
pushf
je
lahf
test
push
sub
xor
popf
push
push
call
dec
adc
cli
sub
dec
scas
cwtl
es
inc
jle
inc
and
and
test
push
iret
cmc
lcall
xchg
insb
divl
imul
in
xor
sub
cmp
frstor
shll
fstps
stos
mov
icebp
bound
push
dec
fwait
push
pop
mov
sbbl
push
call
dec
xchg
fisttpl
xchg
inc
xchg
lret
jmp
xchg
mov
in
adc
rcrb
popf
and
pop
out
sub
js
push
cmp
daa
mov
inc
lcall
dec
add
inc
and
pop
loop
adcb
add
sti
scas
mov
jg
mov
sahf
mov
cli
stos
lret
lret
xor
mov
or
fiaddl
pop
push
cmp
stc
sti
pop
add
fidivrl
lock
cltd
mov
inc
int3
push
add
push
dec
jbe
xchg
lods
popa
inc
jne
test
mov
jmp
and
call
cs
inc
jle
push
testb
lods
add
xchg
orl
rcrb
cmpsl
inc
lret
xchg
xchg
movsl
pop
test
mov
xchg
sti
test
repz
add
bound
out
xor
daa
mov
loop
test
mov
or
push
push
pop
imul
xor
cs
dec
mov
push
aaa
insb
cmp
mov
sti
daa
test
ljmp
or
stos
scas
dec
jo
pop
je
jne
xchg
mov
or
out
mov
jle
mov
and
cmpl
fisubs
dec
xchg
out
and
jge
aam
fadd
add
mov
fnstcw
sub
out
cmp
and
inc
lods
dec
cld
ljmp
push
jo
or
jle
cli
in
push
dec
lret
push
in
or
aad
ljmp
scas
sbb
nop
dec
sbb
lods
ret
and
lret
scas
or
lahf
popa
ss
aam
xor
add
sbb
movsb
repnz
scas
cmp
jb
inc
imul
shlb
jno
repz
xchg
pop
and
dec
cmpsl
and
repz
pushf
adcb
test
inc
push
jge
or
inc
stos
xchg
xchg
mov
xor
pop
sbb
cmc
ret
fs
jle
push
stos
je
pop
iret
and
inc
sub
test
scas
push
xchg
icebp
movsb
sub
das
inc
jne
push
lret
add
xor
lcall
mov
popw
push
xchg
imul
push
sub
pop
fiaddl
insl
xor
clc
xlat
add
testl
int
or
or
mov
test
mov
push
xor
movsb
mov
sbb
loop
addr16
xchg
fsub
jle
push
mov
dec
xchg
hlt
sub
dec
push
ret
loop
js
pop
jecxz
popf
or
add
ja
jno
push
and
jp
mov
outsb
cmp
cmp
mov
loop
hlt
sahf
mov
outsl
push
notl
pop
mov
sbb
mov
inc
pop
push
inc
cmp
je
ss
in
mov
dec
and
or
jg
add
inc
fistpll
dec
lock
les
sahf
sbb
inc
mov
cmp
jno
inc
mov
hlt
testl
daa
mov
add
aaa
int3
and
xchg
sarb
cmp
pop
add
and
gs
jnp
jp
mov
cmp
movsb
cmp
mov
dec
mov
out
cli
pop
sti
test
or
outsb
fisubrl
jp
cmp
rcrb
fsubrl
push
aad
iret
xchg
scas
test
das
mov
cmp
sbb
rolb
test
dec
xor
push
inc
ficoms
shufps
add
xchg
xor
sarl
cwtl
sbb
and
fisttps
mov
dec
fucom
popf
in
mov
push
ret
iret
jae
pop
xor
aaa
inc
adc
cmc
jmp
mov
ja
pop
js
iret
jnp
xor
jns
fcomps
fucomip
cmc
dec
adc
lcall
mov
in
mov
ret
stos
movsb
pop
jbe
xchg
sbb
test
xor
push
cwtl
scas
cld
imul
adc
cmp
cmc
jb
dec
test
mov
push
pop
mov
pop
adc
mov
and
xor
leave
or
push
jne
xchg
cmp
xor
stos
sbb
sbb
jo
scas
cwtl
xor
mov
cmc
lea
test
out
fimuls
in
sti
dec
and
and
jg
mov
fs
aas
inc
jae
or
cmc
jns
dec
pop
xlat
xor
jbe
loopne
shl
jnp
int3
xchg
pop
ds
mov
xchg
or
test
or
xchg
test
sub
adcl
mov
sub
mov
inc
mov
jae
jg
lock
or
cmpl
xchg
mov
enter
push
stc
je
xor
in
and
mov
mov
inc
int3
pusha
fisubrs
pop
data16
push
cmp
jmp
pusha
sub
xor
pop
ds
lahf
es
mov
movsl
inc
outsb
test
or
outsl
push
js
push
sbb
pushf
pop
mov
mov
or
jecxz
mov
mov
inc
push
adc
add
adc
mov
je
outsb
inc
xchg
int3
pop
imul
dec
cltd
aaa
dec
mov
xor
sarb
inc
rcll
push
sbb
aaa
sbb
aam
mov
add
das
and
dec
enter
xchg
and
pop
ss
shll
ret
jge
push
or
cmp
loop
stc
repnz
mov
bound
ja
mov
push
aas
adc
or
pop
testb
jge
push
dec
add
adc
and
jo
jbe
jmp
ret
jp
push
mov
xor
dec
sub
lret
push
aas
inc
xchg
cltd
xor
xor
test
dec
ss
scas
mov
fiaddl
call
mov
or
or
mov
adc
jmp
jb
fwait
mov
das
adc
sbb
dec
std
lahf
push
imul
and
stos
add
sub
and
push
mov
in
add
adc
mov
out
aaa
aam
and
clc
xchg
fidivl
jle
mov
mov
mov
mov
daa
fs
or
xlat
and
movsb
stc
int3
jns
inc
inc
cmp
imul
xorl
lret
adc
sub
out
push
ds
inc
jl
cmp
adc
enter
push
incl
in
ljmp
out
jecxz
mov
sub
in
dec
repnz
and
lods
fsubrl
icebp
lock
mov
andl
push
sub
fsubl
push
mov
sub
popa
cmp
cli
cmp
pushf
es
adc
lret
push
jae
inc
push
jg
inc
outsl
fsubl
es
and
adc
lahf
lock
scas
adc
mov
cltd
outsb
int3
push
dec
aas
movsl
dec
rol
loopne
pop
scas
cmp
mov
fwait
mov
ss
outsl
repz
pop
push
adc
mov
sub
mov
mov
insb
adc
pop
repz
pusha
push
dec
xor
cltd
fcompl
das
clc
aas
inc
pop
lcall
cwtl
pop
and
int
mov
and
dec
jecxz
sti
jle
or
fwait
or
loope
or
add
lds
fiadds
icebp
add
jg
push
mov
scas
mov
fcomps
popf
out
xchg
pop
pop
push
dec
call
andb
cmpsb
mov
in
push
cmpsl
or
bound
int3
mov
xor
int3
bound
fs
das
jecxz
int3
mov
xor
repz
pop
and
inc
aaa
iret
fistpl
imul
cmp
sbb
fsubrs
das
inc
in
mov
jmp
mov
out
cmpsl
dec
sub
add
movaps
adc
in
movsl
enter
stc
xor
subb
inc
test
enter
sbb
in
adc
sbb
mov
jae
jb
cmp
iret
testl
lds
inc
sbb
pop
mov
or
aas
scas
jl
and
dec
leave
xchg
ds
or
lret
insl
shrl
sbb
lods
ss
sub
lea
adc
in
jmp
mov
cmpb
lods
or
scas
loope
cli
ret
sahf
adc
or
push
enter
fs
shr
hlt
es
stos
int
push
push
sub
in
fwait
push
inc
and
ret
sub
imul
inc
and
les
mov
lds
insb
sahf
imul
xor
sbbl
in
inc
xor
add
inc
cmp
pop
sbb
out
ljmp
shll
pop
adc
cmpsb
jp
sbb
pop
pop
xor
xor
sub
jp
sub
sub
out
push
mov
xchg
lret
jae
xchg
mov
xchg
das
cltd
repnz
ss
mov
dec
jns
jl
in
adc
scas
push
mov
mov
enter
cmp
lock
ficompl
inc
das
cmp
lret
das
scas
mov
dec
mov
sbb
out
movsb
pop
in
xchg
into
in
int
sub
jg
adc
cmp
jns
add
cmpsb
add
mov
pop
orl
lcall
out
jp
fwait
push
xor
jno
movsb
fldenv
mov
jbe
roll
jb
popf
inc
xor
xchg
mov
add
cmp
push
jmp
sbb
xor
xchg
jecxz
inc
and
push
je
sahf
lods
sbb
movsb
cld
xor
jge
mov
icebp
arpl
pop
adc
push
and
test
xor
inc
idivb
pop
dec
sbb
and
xchg
fwait
xchg
add
enter
pop
loope,pt
dec
popf
xchg
fdivrs
loopne
mov
movsl
cwtl
movsb
es
dec
jnp
lods
add
xchg
data16
aam
push
repnz
fcomps
jbe
inc
inc
push
fwait
test
sbbb
mov
mov
subb
mov
sub
cmp
daa
add
or
cmp
sbbl
pop
jae
pop
sbb
xchg
lcall
clc
popa
sahf
ds
vfnmsubps
sahf
jb
pop
insb
cmc
jp
push
adcl
ret
aam
faddp
std
cmp
loop
mov
cmp
push
xchg
mov
pop
xchg
dec
stc
xlat
in
and
and
repz
cltd
mov
ljmp
inc
arpl
dec
mov
imul
xor
rclb
inc
mov
mov
ror
das
xor
xchg
nop
mov
call
iret
imul
mov
xor
cmp
inc
pop
fcomps
stos
jl
or
and
mov
inc
xchg
in
popf
cmp
lret
mov
mov
cmp
xchg
jmp
pop
fcomip
dec
movsb
adc
or
adc
test
cmp
insl
add
loop
push
pop
jb
je
daa
adc
sbb
iret
add
push
addl
addr16
repnz
lret
push
push
push
jo
sahf
sub
and
sbb
insb
push
popf
ja
inc
cmp
dec
inc
jbe
test
pop
inc
mov
sbbb
mov
imul
push
fmuls
xor
bound
call
xor
aaa
pop
nop
cld
stc
fs
jno
dec
jecxz
push
rorl
imul
addr16
pop
adc
sbb
push
pop
xor
or
mov
stc
je
gs
das
cltd
ret
inc
popf
cmpsl
push
jecxz
sahf
not
pop
cmp
popf
cmpsl
rorl
push
int3
xor
das
xchg
outsb
out
cmpsl
sti
xorl
in
adc
and
out
pop
mov
sub
insl
and
sbb
aas
sub
mov
scas
fidivl
jle
jp
es
scas
sti
rorl
dec
aaa
push
out
cltd
jg
aam
xchg
aad
pop
scas
sub
repz
sbb
aaa
pop
push
addb
pop
js
push
mov
or
push
repnz
jl
mov
dec
cmpsl
icebp
in
or
into
aam
daa
mov
xchg
push
les
add
pop
pop
xchg
aam
fsubrs
jl
clc
in
fisttps
cmp
mov
push
push
or
fs
std
shll
into
dec
pop
das
jne
push
aam
fcmovnu
pop
jns
imul
in
call
dec
push
xor
xor
insb
add
jge
jp
je
add
xor
inc
js,pn
sbb
nop
fimull
jg
nop
inc
popa
dec
stos
lret
pop
outsl
frstor
call
mov
pop
ds
add
int
rorb
add
push
push
mov
iret
adc
adc
jo
ljmp
shlb
shlb
mov
fdivrl
adc
mov
cld
xchg
ja
or
sbb
test
fdivrl
cltd
fldcw
adcb
es
mov
pop
sbb
insb
cmpsl
cld
lods
push
popa
ljmp
andb
and
mov
orb
lods
push
iretw
vcmppd
lods
test
pushf
sahf
inc
fidivs
mov
push
imul
jo
inc
mov
adcl
jp
jg
pushf
fildll
std
sbb
std
loop
dec
xor
mov
dec
cmpsl
cld
stos
xor
add
lock
fimull
test
pop
pop
ss
pop
dec
and
std
mov
jns
psllq
lret
push
mov
shr
dec
mov
add
fistpll
xchg
xchg
xchg
push
imul
iret
ljmp
into
cwtl
ljmp
stc
jmp
mov
dec
mov
call
enter
movsb
les
push
push
stos
aad
and
imul
icebp
pop
movsl
adc
shr
lcall
and
lcall
mov
sbb
sbb
dec
jae
xor
stc
aaa
jb
mov
les
push
das
out
gs
imul
pavgw
stos
test
mov
loop
popa
call
decb
jge
pop
pusha
bound
cmp
or
lret
add
push
pop
mov
push
mov
daa
mov
popa
lods
xchg
out
dec
xchg
inc
out
loopne,pt
test
xor
push
outsl
pusha
dec
ja
cmp
push
int
into
inc
xchg
cmpl
or
sbb
insb
xor
add
icebp
mov
cmp
cld
sbbb
sub
shll
loopne
fistps
mov
arpl
jmp
xor
xor
push
mov
adcb
aad
mov
lods
cwtl
int
mov
dec
js
mov
add
lds
mov
lock
test
add
xor
and
mov
sbb
stos
repnz
push
je
int3
mov
fsubrs
movsb
je
pop
inc
add
fwait
daa
xor
arpl
adc
mov
jle
and
or
rorl
sub
inc
xor
sub
scas
adc
fimuls
mov
mov
jbe
inc
sti
rorb
insl
sbb
insl
shl
imul
inc
mov
xchg
mov
push
mov
or
out
out
arpl
outsb
out
cmpsb
imul
push
fcomps
loopne
mov
cmp
sbb
dec
loope
sub
jae
inc
jp
or
cmpsl
pop
xchg
mov
push
xor
lock
addr16
inc
sub
js
push
es
insl
jo
enter
mov
mov
and
inc
xchg
cmpsb
xchg
mov
movsl
sub
mov
pop
or
pop
inc
int
dec
popa
pop
or
inc
inc
ret
mov
add
movsb
shlb
xor
arpl
cltd
out
sub
mov
mov
fwait
in
xchg
pushf
shll
jmp
fcomi
adc
inc
movl
jle
popl
dec
addl
push
xchg
jns
adc
jo
jbe
add
out
add
mov
dec
ja
jae
rorl
testl
pop
pusha
jl
test
or
jmp
mov
or
bound
shll
adc
mov
pop
add
xchg
sarl
cwtd
sahf
testl
add
jp
test
mov
insb
aaa
mov
movb
inc
sti
addr16
xchg
call
fstps
push
stos
inc
xchg
add
mov
pop
add
ret
push
nop
enter
dec
xchg
lret
ja
sub
cmp
fiadds
push
sub
in
xor
mov
outsl
fisubs
arpl
dec
gs
adc
mull
divb
sbb
pop
aas
fsubl
mov
cmp
add
aam
jne
dec
es
fldt
fisubs
fldl
cmp
insl
cs
orl
mov
mov
mov
packsswb
aad
nop
add
test
mov
mov
jbe
imul
mov
sub
int
mov
dec
mov
mov
adc
sahf
mov
sbb
adc
cltd
jge
dec
cmc
xchg
pop
mov
fistpll
sbb
lcall
push
push
and
xchg
cli
int3
xlat
add
jle
stos
rcrb
jp
in
out
cmp
adc
xor
test
repnz
rorl
outsw
inc
xchg
add
adc
push
stos
std
fmul
add
pop
repnz
jl
jbe
add
cli
fcomps
and
fisttpll
dec
xlat
and
in
mov
faddl
shlb
mov
out
push
stc
jae
mov
jmp
movsb
stc
ss
loop
jb
shll
dec
or
jg
sub
xor
dec
and
lahf
xor
daa
mov
aaa
scas
push
das
sbb
out
pop
xchg
and
sahf
fstl
mov
cmpsb
xor
les
leave
inc
xor
movsb
mov
std
mov
ret
lds
push
test
outsl
aad
push
and
dec
popf
mov
jbe
std
push
mov
mov
daa
cmp
push
xor
in
push
aaa
xchg
iret
mov
xchg
shl
adcb
push
je
cmp
setl
mov
jae
sub
es
mov
sbb
jge
cltd
mov
in
push
scas
daa
cmp
sub
dec
mov
inc
xchg
dec
inc
cmp
hlt
repnz
add
adc
cmp
cmpsb
pop
pop
add
gs
out
xor
pop
sbb
or
subb
push
mov
addr16
dec
rolb
jbe
fs
cwtl
lea
pop
out
jl
in
xor
jne
xor
rolb
or
adc
xchg
repnz
mov
or
stos
mov
in
jae
lods
jo
xor
icebp
cmp
pop
fcom
xor
xchg
test
dec
inc
jo
xchg
jnp
rorl
data16
sub
jae
push
shll
arpl
dec
sub
inc
aas
inc
xchg
cmp
into
mov
mov
push
sub
mov
addr16
cld
dec
xorb
jmp
push
int3
mov
stos
lcall
add
inc
jne
aam
dec
pop
push
jge
mov
xchg
dec
lcall
divl
sar
fimull
cmp
push
xlat
sbb
adc
mov
inc
add
xchg
das
or
jne
mov
fwait
xchg
mov
dec
jnp
adc
sbb
sar
lcall
insl
fwait
jbe
mov
ret
imul
jg
fldl2t
scas
jl
std
xchg
cmp
imul
ljmp
iret
ss
add
push
sbb
ljmp
out
mov
sbb
divl
testl
xchg
sbb
xchg
int
das
rcll
xor
fwait
jno
pop
jbe
scas
mov
lds
cmpsb
cmp
adc
xor
subl
or
mov
push
fcmove
jecxz
adc
andl
push
jge
daa
movsb
and
repz
lods
sub
adc
jbe
or
inc
cmp
call
xchg
das
enter
dec
lret
push
pop
xor
dec
imul
arpl
adc
jnp
push
into
xchg
clc
jb
mov
cmp
cmpb
aas
in
jae
push
imul
push
push
leave
ljmp
xor
inc
push
adc
mov
loopne
fistl
dec
sub
dec
push
cmp
sub
adc
repnz
xor
outsb
out
or
subb
rcl
das
push
mov
mov
movsb
jno
cmp
or
lods
pop
dec
jno
adc
adc
mov
pop
mov
mov
je
pop
xchg
out
jecxz
outsb
ljmp
ficompl
aam
cmp
sti
jp
in
loopne
xchg
add
mov
push
inc
mov
and
cli
fs
test
dec
cmp
mov
push
dec
lods
sbb
scas
outsl
adc
push
add
xchg
lods
mov
sbb
cmp
das
ds
inc
and
jmp
push
sti
or
loope
out
jns
popf
lods
shrb
jge
fcmovu
out
mov
out
sti
jae
sub
test
filds
lret
arpl
pop
cmp
test
cmc
popf
stos
mov
add
test
pop
add
into
and
jle
in
les
decl
or
sbb
lock
mov
jne
lahf
mov
fimull
push
push
in
sub
int
in
xchg
sbbl
sahf
sub
and
repz
ret
dec
jns
cmp
and
jmp
xor
and
pop
sti
dec
leave
test
addr16
fucomp
sbb
pop
aaa
jns
pop
daa
sub
inc
xor
cmpsb
pop
shll
dec
mov
sub
stos
push
fnsave
inc
cmp
in
mov
scas
mov
push
cmp
int
stos
dec
dec
mull
in
add
fdivr
cmp
cmp
pushf
xor
mov
xor
test
loopne
inc
inc
ffreep
lds
push
icebp
leave
pop
push
fs
or
mov
push
sub
mov
popa
mov
inc
lret
cmc
xchg
mov
loope
add
lret
cli
mov
mov
jle
xchg
cmp
adc
mov
xchg
out
leave
iret
mov
jl
and
iret
sub
push
fiaddl
cmp
pop
jmp
mov
repnz
fists
pusha
movsb
push
fistpl
aam
mov
movsb
sub
repz
test
pop
push
pop
fwait
push
call
xchg
pop
ret
jp
imull
mov
pop
daa
and
mov
dec
pop
sbb
addr16
es
addl
jae
lea
xor
push
pop
cld
pusha
inc
cmpsl
cwtl
aad
adc
jne
inc
mov
xchg
and
pushf
mov
popa
js
repz
test
mov
inc
fmul
adc
adc
iret
mov
repz
lahf
adc
nop
in
pop
mov
test
add
mov
mov
inc
xor
fucomip
lods
mov
push
out
cmpsl
arpl
int3
dec
push
push
clc
insl
lret
insl
ret
pop
mov
xor
popf
adc
pop
mov
mov
das
xchg
pop
dec
pushf
push
loop
pushf
xchg
push
push
mov
fsubrp
push
mov
shl
fsubs
out
and
stos
fcoms
mov
enter
dec
clc
sub
es
ds
cmp
push
insl
push
sbb
jle
lods
ljmp
out
mov
push
jge
sbb
or
jae
sbb
aad
push
inc
mov
das
inc
xor
dec
jae
add
jl
adc
mov
xchg
sarb
xor
clc
mov
test
mov
jb
cld
adc
xchg
mov
sarb
rcl
jae
inc
cmc
adcb
fdivr
cmp
or
pusha
inc
dec
push
insl
out
and
aad
or
mov
fldt
jnp
aas
in
mov
out
mov
jns
xchg
jg
mov
fcmovu
cli
sub
ja
push
dec
sbb
subb
loopw
mov
movsb
sbbb
mov
iret
mov
dec
push
rcl
js
xchg
xor
sbb
mov
fs
and
jecxz
and
pop
push
xchg
fildll
and
call
add
repnz
int3
sbb
fs
loope
nop
pushf
jl
setb
aas
and
stos
add
dec
stos
adcb
mov
xlat
in
cmc
push
jg
js
mov
adc
test
pop
loope
movsl
in
jbe
adc
cwtl
jecxz
pop
jmp
in
pop
scas
inc
cmpl
js
push
jmp
clc
loopne
or
cmp
cmp
outsl
pusha
xor
mov
jno
add
pop
jge
pop
mov
data16
dec
aam
sti
fmuls
add
out
iret
sbb
sub
lea
xor
or
inc
jbe
jns
sbb
scas
push
repz
xor
pop
leave
jb
pushf
sar
repnz
std
ror
push
jl
outsl
push
into
push
push
mov
cmc
lret
mov
repnz
test
pop
jp
jns
sbb
shr
mov
clc
jmp
push
call
inc
fcomps
and
jg
mov
mov
add
sahf
ficoms
inc
cmpsl
cs
fcoms
xor
mov
or
push
popa
in
pop
fisubs
push
test
nop
rolb
mov
jne
jno
adc
sbb
xchg
push
daa
in
and
stos
xor
test
test
cmp
bound
out
xchg
xor
je
inc
js
ficomps
cltd
ja
cmc
mov
stos
cs
sub
sub
jb
call
daa
out
and
insb
pop
mov
xchg
cmp
sbb
xchg
out
push
push
inc
mov
das
jmp
mov
loopne
popf
sbbb
mov
nop
repz
shlb
or
mov
cwtl
and
mov
loopne
js
ffreep
jbe
arpl
out
lods
aad
push
jno
push
repz
out
push
add
sbb
rclb
addr16
in
movsb
imul
mov
lock
sub
rol
xor
jge
idiv
mov
js
add
mov
adc
data16
fwait
test
dec
mov
popa
push
pop
vmovss
sub
scas
and
push
pop
push
ljmp
add
inc
cltd
adc
mov
lock
shlb
cltd
xchg
sub
pop
mov
subb
pop
mov
mov
out
pop
mov
and
ds
xchg
mov
inc
push
inc
adc
sub
push
inc
jp
sub
faddl
mov
xor
push
insb
add
jle
or
and
aad
xorl
xchg
clc
add
and
add
add
cltd
ss
popf
adc
lods
xchg
push
popf
cld
scas
adcl
ds
add
loopne
add
dec
sbb
adc
data16
xchg
mov
mov
loope
popf
dec
or
and
out
cli
mov
ljmp
cltd
dec
test
sub
cmpsb
outsl
mov
mov
dec
mov
jnp
es
pushf
and
int
pop
std
mov
sarl
pusha
dec
pop
fndisi(8087
push
xchg
rsm
jg
repnz
adc
push
ret
cli
cltd
fisubrl
add
call
or
cmc
or
loope
vmread
jno
std
lcall
pop
je
push
jae
push
loope
ret
push
cli
fbld
jo
jbe
push
xor
sbb
add
jae
xchg
add
roll
pushf
add
pop
or
add
bound
inc
and
add
inc
add
fwait
popa
and
push
xchg
cmp
ret
pop
pop
xchg
push
sub
divb
jno
pop
xchg
sub
arpl
mov
pop
mov
pop
pop
in
mov
mov
scas
jmp
jp
and
jle
sar
rclb
iret
and
fisttpl
add
jge
stc
int3
in
imul
cld
xorb
xor
cmpsl
gs
cli
pop
mov
clc
push
dec
cld
sub
cs
push
fldt
test
shr
jb
mov
xchg
mov
mov
out
adc
jne
imul
mov
loopne
scas
dec
push
test
cmp
sub
mov
in
xor
cs
aad
xor
out
mov
or
inc
sub
int3
ss
loopne
jo
xlat
paddusw
cli
sub
inc
mov
pop
repnz
pop
data16
xchg
pushf
insl
cmp
jb
stc
add
mov
cmp
adc
in
daa
addr16
mov
das
dec
decl
mov
push
xchg
jg
je
cmp
ret
in
pop
out
movsl
pop
in
sub
push
sbb
mov
jl
mov
mov
std
cmp
push
jmp
test
push
pop
cs
sbb
sub
dec
jecxz
mov
xchg
outsl
dec
dec
sub
add
inc
je
add
jg
testl
add
jno
add
and
int
xor
movsl
fwait
pop
push
inc
add
idivl
lret
inc
pmaddwd
rolb
ljmp
add
adc
mov
dec
je
cwtl
mov
dec
cmp
jg
pop
das
push
xorl
sarb
inc
cmp
xor
insl
popa
xlat
push
or
xchg
lret
cmp
mov
int
adc
push
mov
push
dec
cmp
pop
in
inc
adc
in
xchg
xchg
in
xor
aaa
iret
gs
imull
cmp
gs
aas
loope
gs
mov
lods
dec
jl
xchg
mov
lds
sbb
adc
and
jb
cmp
subb
cmp
dec
les
ffreep
xorb
mov
xchg
jb
jae
add
pop
sub
shrb
adc
popa
lcall
mov
xor
and
test
imul
imul
outsb
mov
add
push
jns
call
push
pop
mov
xchg
add
add
aam
dec
jecxz
and
mov
sbb
push
data16
notl
nop
push
adc
push
mov
xchg
pop
mov
test
hlt
icebp
subb
jge
mov
idivl
push
repnz
inc
pop
scas
iret
das
dec
xchg
sub
aaa
add
data16
and
leave
rcll
sbb
add
pop
incl
repz
scas
or
jb
mov
into
mov
xor
jg
imul
sub
imull
xchg
mov
xor
push
loop
mov
cmovg
mov
popa
or
pop
jecxz
fcoms
hlt
in
xor
sti
cmp
int3
sahf
push
push
add
lods
sbb
nop
adc
push
mov
add
popf
int
adc
jecxz
and
aas
or
jns
cld
rolb
add
xor
jg
or
add
inc
mov
or
or
sub
sbb
scas
pop
repz
mov
aas
xor
movsb
add
adc
dec
or
andb
push
sub
rorb
stos
stos
jg
mov
scas
ss
idivb
in
and
fwait
pop
cmp
xchg
sti
fs
int3
adc
sub
dec
bound
data16
fsubrl
pop
xor
shrb
das
jae
xchg
pop
addl
mov
imul
sbb
jecxz
push
pop
and
push
cmp
xor
pop
adc
mov
add
cmc
xor
fincstp
xlat
lods
push
adc
fucomp
ficomps
sbb
mov
movsl
fiadds
add
push
out
cwtl
iret
in
pop
push
into
in
xorb
scas
enter
cmp
sbb
push
sub
in
sbb
mov
dec
jb
stos
dec
into
pushw
jmp
adc
cmpsb
cmpsb
aaa
add
dec
pop
mov
icebp
imul
mov
mov
clc
add
or
leave
jp
cmp
add
and
jo
pop
inc
adc
popa
pop
into
out
push
std
or
lcall
or
xchg
pop
lds
shrl
xchg
aaa
psubd
imul
out
enter
dec
test
xchg
fdivp
or
inc
push
fwait
pushf
out
inc
adc
movsb
mov
dec
divl
or
dec
sbb
andb
sub
dec
inc
xor
and
dec
cli
rcr
out
ja
test
jl
mov
lea
jns
adc
push
jp
scas
pop
inc
pop
mov
add
mov
jge
pusha
fidivrs
dec
mov
aam
mov
jmp
cli
mov
mov
mov
out
mov
shll
dec
cmp
adc
add
push
mov
sti
icebp
xchg
inc
sbb
out
inc
call
enter
push
adc
sti
icebp
sbbl
fdivrs
imull
sub
test
mov
test
inc
xor
jecxz
lcall
test
lcall
xchg
call
add
adc
cmp
out
call
mov
cmp
sti
and
pop
mov
mov
sbb
out
mov
jo
leave
inc
fs
jne
inc
popa
pop
mov
ret
sarb
mov
cs
shr
divb
ret
xchg
or
mov
push
or
cmp
inc
enter
pop
out
pop
ds
and
dec
fwait
cmp
sub
fldln2
into
or
std
rclb
and
repnz
es
mov
shlb
fwait
and
xor
mov
jb
out
lock
int
xor
mov
insl
jle
xor
shll
pop
clc
inc
faddl
shll
adc
adc
int
jb
jae
ret
xor
xchg
jmp
sbb
mov
aas
cmp
test
mov
adc
aas
mov
sbb
dec
or
bound
inc
add
adc
xor
jmp
adc
inc
xchg
sub
fdivrp
fcom
sub
lahf
ret
or
sar
jae
pop
hlt
nop
push
xor
or
pop
jmp
pop
pop
pop
mov
sbb
movsb
and
push
sub
icebp
orb
add
sub
sub
cwtl
negl
cmpxchg
mov
xchg
jb
stc
jns
xchg
sbb
into
or
jns
push
mov
dec
aas
outsl
mov
ret
popa
repnz
hlt
jecxz
sti
xchg
outsl
pop
adc
imul
sub
test
out
movaps
aas
aaa
dec
inc
dec
sub
xlat
jb
jl
imul
fsub
xor
jbe
movsl
push
loopne
loope
pusha
cmp
and
pop
repnz
fucomi
in
pop
lcall
cld
fs
mov
pop
iret
cmp
cmp
je
pshufw
xchg
mov
repnz
lock
dec
mov
jno
mov
push
pop
jns
jnp
cmpsb
enter
mov
jnp
loop
push
iret
dec
sbb
icebp
mov
or
ljmp
push
gs
jno
sbb
sub
lock
ja
cpuid
cld
sbb
out
jl
mov
stos
xchg
out
inc
jns
fnstenv
sarl
xchg
mov
int
or
loope
or
orb
sbb
pop
data16
jg
dec
push
dec
rol
jns
lea
and
and
and
lods
cmp
pop
mov
mov
repz
daa
xchg
jnp
ss
lret
in
fcoml
int3
mov
sbb
or
adc
cmc
mov
sahf
leave
jg
stos
data16
jmp
subb
inc
into
xchg
addr16
mov
insb
jne
lds
xchg
pop
xor
jmp
insl
fstl
imul
pop
dec
out
inc
mov
cmp
xor
lahf
mov
pushf
cmp
lea
and
push
xchg
mov
nop/reserved
mov
sbb
bound
cltd
jp
orb
add
in
ljmp
es
loope
fnsave
icebp
add
rclb
sahf
imul
pop
adc
popa
push
sti
xlat
out
and
arpl
jnp
jecxz,pn
or
sub
cmpsb
push
lods
fwait
stc
out
xor
push
dec
xchg
out
mov
pop
fistpl
aaa
out
arpl
icebp
ja
lods
jge
test
inc
pop
fmul
inc
cmp
add
cmp
jl
insl
stos
popf
dec
jo
sub
cmp
push
mov
inc
and
aad
mov
repz
pop
aad
sub
mov
adc
das
mov
scas
jne
aas
loopne
cmp
pop
cltd
and
jae
mov
adc
xchg
ds
movzwl
in
push
mov
xlat
lcall
mov
mov
out
in
mov
into
xchg
xchg
dec
pop
xchg
jo
add
jg
outsb
lret
fwait
xchg
testb
cs
lahf
mov
test
imul
mov
dec
mov
ficoml
pushf
les
mov
cmp
imul
cmp
cmp
loop
jp
sub
notb
cmp
aad
xchg
inc
add
jg
sbb
aad
js
cmp
shl
test
outsb
decb
jns
mov
mov
loope
jb
xor
test
movsb
push
cmp
loopne
lock
cmp
xor
ret
mov
jmp
xor
pusha
mov
mov
addr16
out
inc
inc
std
dec
dec
sahf
mov
mov
jp
xchg
fwait
xor
xor
dec
or
xor
mov
shlb
dec
or
add
jp
gs
cmpl
jae
jl
dec
fs
popf
lods
push
xor
loope
sbb
negl
jbe
push
insl
sbb
mov
push
pop
vsubss
mov
lahf
inc
aas
xchg
clc
push
jg
clc
sahf
out
movsl
sarb
flds
imul
lret
xor
xchg
pop
int
out
or
in
lret
orl
cli
stos
push
xor
mov
mov
leave
movups
push
or
push
hlt
xchg
enter
icebp
pusha
shr
cmp
icebp
or
cmp
sbb
pop
subb
repnz
movb
and
adcb
pop
mov
arpl
push
jmp
adc
mov
adc
scas
aad
add
iret
cmpsl
into
mov
lcall
inc
push
out
enter
fwait
sub
xchg
cli
stc
mov
xor
in
aam
pop
outsb
sub
scas
pop
jae
dec
lcall
or
adc
push
int
sbb
shll
lahf
js
and
fmull
add
jl
je
popa
out
cmp
nop
repz
xchg
sub
pop
les
fidivs
dec
les
jge
and
pop
fwait
mov
xor
sbb
lret
sar
push
loop
mov
addr16
and
and
lea
or
inc
sbb
pusha
out
daa
addr16
xchg
inc
and
js
lods
and
adc
jmp
into
and
scas
pop
sub
and
pop
outsl
xor
pusha
dec
cwtl
sub
push
std
and
jge
push
test
inc
incb
iret
push
ss
xchg
ja
mov
dec
int3
arpl
mov
fs
inc
imul
jg
pushf
test
or
mov
and
rclb
insb
repnz
add
jp
mov
repnz
les
popa
xor
sub
jns
cltd
aad
rcrl
test
cmp
adc
fstpt
and
inc
inc
push
das
notb
iret
jp
or
jecxz
inc
stc
inc
rcrl
mov
inc
sti
sbb
mov
mov
jbe
mov
fdivs
imul
dec
cmp
adc
loopne
outsb
loopne
repnz
outsb
scas
int3
das
jns
sbb
pop
shrl
push
xor
sub
jmp
test
xchg
ljmp
and
jno
pop
out
movsb
sbb
adc
lret
cmp
or
mov
les
into
push
rcll
sti
std
out
and
cmp
stc
dec
outsl
nop
cmp
cmpsl
adc
pop
sbbb
pushf
cmp
daa
jg
lea
mov
shrb
cmp
shl
call
adc
int
pop
es
jnp
cwtl
imul
call
adc
dec
xor
sub
imul
subl
sbb
test
test
mov
dec
test
inc
insl
dec
iret
and
jne
mov
stc
jmp
mov
mov
jne
jl
loope
xor
jae
or
xchg
mov
fdiv
jecxz
mov
push
mov
add
cmp
dec
mov
int3
adc
mov
into
ret
dec
jmp
addr16
int3
loopne
dec
fisubs
leave
xlat
xchg
jo
xchg
lahf
repnz
pop
xchg
push
gs
dec
and
data16
mov
out
shlb
es
shll
cmp
in
cmp
cwtl
fsubr
jecxz
sti
outsb
jecxz
pop
push
mov
sbb
add
dec
pusha
out
mov
jl
in
fbld
movsl
pop
adc
and
stos
sbb
jl
dec
sbb
mov
andb
cs
mov
popa
hlt
jge
mov
mov
mov
mov
xlat
mov
cltd
xchg
mov
out
push
outsb
in
xchg
or
jb
adc
sbb
adc
lods
hlt
mov
ds
sub
je
cmp
mov
shrl
cmp
fucomp
sahf
jns
fsts
out
push
aad
add
pop
mov
xor
cli
scas
negl
leave
in
pop
in
push
jns
lret
sbb
outsl
data16
test
xchg
push
cmp
cltd
rol
sub
fiadds
outsb
mov
sbb
scas
loope
pop
fdivl
pop
movsl
inc
into
jecxz
std
in
sti
fwait
stos
shlb
mov
int
xchg
scas
pop
mov
addl
fdivs
imul
xor
sub
scas
pop
and
mov
mov
add
jle
andl
and
pop
daa
xor
xorb
insl
dec
lret
call
lret
xchg
popf
repnz
movsl
xor
std
test
lea
ja
inc
jmp
inc
pop
pusha
or
fdivrs
bound
and
in
mov
push
mov
adcl
fstps
int3
aam
dec
xchg
clc
jge
mov
xchg
mov
fs
or
push
inc
mov
shrl
xchg
cmp
sub
pop
and
push
loop
mov
jecxz
xor
stos
js
mov
or
jmp
and
push
sub
jns
adc
xlat
mov
jl
ds
ret
fcomi
aas
das
outsb
addr16
insb
ljmp
pop
stos
adc
jmp
je
xchg
data16
insl
loopne
fs
and
in
pop
dec
or
ss
add
movsl
or
or
ret
in
rcrl
inc
xchg
ss
jmp
popf
ret
push
imul
test
cld
mov
ficoml
mov
xor
sub
cmpsb
xchg
ljmp
shlb
mov
xchg
in
mov
f2xm1
mov
adc
pop
insl
in
das
out
or
daa
sub
cmc
nop
popf
ja
xor
fsts
mov
mov
mov
inc
lods
and
cmc
js
xor
mov
movsl
cmp
movsl
sub
cmp
je
and
xchg
mov
fprem
push
js
sbb
mov
mov
cld
sub
gs
push
lahf
sbb
xor
cmp
cmp
mov
cltd
mov
aas
cmp
in
mov
ljmp
fwait
and
insb
or
ret
pop
push
repz
lods
ds
shll
clc
mov
cli
psllq
dec
sbb
lock
pop
cs
in
out
out
inc
popf
mov
scas
daa
push
jmp
dec
push
sti
jle
mov
lea
testb
neg
mov
sbb
mov
sahf
cltd
or
lods
and
ffreep
inc
sub
push
sbb
idiv
dec
xchg
sbb
or
mov
push
dec
mov
and
loopne
or
jle
fdivrp
lods
mov
lret
xchg
lcall
mov
push
push
inc
xor
cmp
xor
push
data16
lods
hlt
cmpsl
mov
pusha
cmp
lock
mov
in
push
push
test
cmp
push
jecxz
lods
mov
ja
or
std
xchg
xchg
sub
pop
in
and
sahf
hlt
pop
mov
lods
cli
out
xchg
adcl
cmp
into
pop
test
xorb
push
std
adc
sti
lods
push
adc
mov
xlat
and
cmp
dec
fstps
or
inc
push
push
scas
pop
test
push
imul
lret
sub
popa
imul
mov
or
jmp
jae
mov
xchg
addr16
mov
inc
pop
pusha
call
push
jae
outsl
test
add
jecxz
outsb
pushf
cmpsb
push
adc
fadd
add
shl
outsl
imul
push
pop
aas
pop
ret
cmp
sbb
ret
pcmpeqb
fisttps
mov
outsb
lahf
or
and
mov
es
mov
xchg
sub
cmp
xorl
mov
sub
adc
in
int3
in
mov
aam
call
gs
pop
add
ja
aam
ret
in
cmp
mov
push
mov
rcll
jecxz
jae
lahf
mov
loope
psubusw
pop
cmp
cmpsl
lahf
jns
and
mov
jnp
or
pop
xchg
mov
push
cli
das
aas
dec
push
adc
outsl
jmp
and
add
rolb
lcall
mov
std
outsl
cli
push
test
pop
or
out
ret
push
and
mov
popf
cmpsl
aad
aaa
jle
mov
sub
aad
push
mov
mov
sti
out
push
in
mov
pop
pushf
jb
mov
pop
dec
adc
fisttpll
bnd
push
dec
xor
loope
sbb
rcrl
std
lock
xchg
cmp
xchg
loop
xor
sbb
xor
jmp
insl
mov
daa
cmpsb
aas
or
stos
scas
loop
lahf
xchg
rclb
pop
test
icebp
aam
xor
nop
sti
fnstenv
jno
push
lahf
push
xor
mov
and
jb
mov
mov
or
pop
cmpsl
inc
cmpsb
pop
cmp
in
sbb
push
in
ss
xor
fstl
mov
jp
pop
cmp
xchg
fwait
xchg
imul
jno
and
sub
xor
mov
add
adc
xchg
jns
ficompl
sbb
test
int3
subb
fstps
hlt
repz
sbb
adc
movsl
out
pop
sarl
rcrl
push
iret
push
sub
xor
pop
jecxz
loopne
rcrl
adc
dec
push
fisubl
sbb
pop
cmp
scas
shll
movb
into
sub
lret
pop
xchg
in
sti
enter
adc
aas
and
mov
repnz
mov
aaa
adc
mov
jae
xchg
mov
loopne
pushf
es
xlat
jo
fidivl
or
sti
or
xchg
jb
shrb
movsl
xchg
pop
mov
int
inc
imul
ror
jbe
dec
fcmovne
inc
mov
shr
int3
ljmp
xchg
fsubrl
cmpsb
and
mov
jge
lcall
fldl
cwtl
int
gs
pop
inc
inc
jmp
ds
mov
testl
pop
mov
or
mov
inc
dec
into
shrl
movb
mov
xor
es
mov
fstl
scas
arpl
pusha
scas
sub
rcrl
pop
pop
jmp
repnz
cwtl
jnp
sbb
xchg
inc
pop
dec
adc
aas
cld
test
loopne
lret
push
dec
or
ja
hlt
inc
and
inc
ja
out
cltd
sbb
in
or
sbb
clc
int3
imul
adc
add
mov
ss
sub
push
mov
and
test
xchg
mov
mov
mov
mov
pop
xor
cwtl
fstps
pop
push
xor
cmp
repnz
lahf
mov
in
imul
add
mov
or
rorb
les
lahf
pop
or
jb
insl
xchg
cmp
inc
push
or
jmp
push
push
sbb
xchg
popf
sub
hlt
jmp
icebp
mov
add
sub
adc
push
inc
fnsetpm(287
js
jg
ss
lcall
mov
mov
pop
in
mov
jns
jo
repz
fwait
push
ret
adc
jno
rcll
ss
or
adc
mov
or
cmp
sub
push
outsb
jp
jle
pop
ret
push
fistl
mov
cmp
loop
lcall
repz
xchg
popa
push
lock
pop
push
pop
sbb
jb
loopne
shll
fcomps
test
jbe
xor
inc
loopne
cmp
mov
mov
sbb
sbb
outsl
sbb
out
mov
insl
adc
int3
or
in
imul
sbb
sub
lods
fisttps
shrb
rcll
jge
xchg
lahf
out
xchg
dec
pop
adc
cmc
aam
xorl
and
pop
pop
je
or
xchg
test
add
mov
and
out
xor
cmp
mov
inc
push
jmp
inc
or
push
xlat
sarb
ret
pop
pop
and
xor
fadds
cli
mov
in
into
leave
aas
daa
mov
popf
push
lods
in
into
and
dec
out
adc
mov
xor
or
push
ljmp
sbb
inc
popf
das
int3
mov
test
repz
scas
push
das
ret
je
stos
cmp
push
sbb
lds
sti
or
inc
xchg
lea
int
push
pop
sub
dec
add
adc
xor
or
fisubrl
sub
push
jmp
mov
pop
mov
push
or
xchg
add
push
addb
in
aam
fstpt
mov
cmp
lea
cmc
sbb
js
cwtl
in
aad
mov
xor
add
addl
xorps
movsl
ljmp
mulb
aas
mov
cmpsb
gs
pop
lret
iret
jne
ds
cwtl
xor
sbb
test
xor
data16
scas
or
jae
push
push
push
imul
dec
outsl
mov
test
ljmp
mov
sbb
popa
lahf
mov
pushf
sub
lret
or
fidivrs
loopne
adc
jne
cmp
and
xchg
div
std
lcall
adcb
mov
ffree
repz
lret
adc
pop
ljmp
mov
mov
xlat
add
jl
or
mov
jge
int3
xor
mov
dec
jne
jmp
jecxz
add
jl
mov
push
mov
fdivs
lea
inc
fstps
sub
iret
inc
add
or
xchg
or
mov
or
push
jp
call
pushf
cld
jo
push
or
or
mov
mov
adc
dec
sub
insb
mov
sub
outsb
mov
jp
mov
fs
add
mov
pop
xchg
and
jmp
and
sub
shlb
fsubrp
ds
test
pop
jo
jo
enter
mov
in
jmp
mov
jmp
fsts
or
ja
loope
xchg
test
pop
mov
jle
xchg
in
jne
addr16
jmp
mov
movups
xchg
cmp
outsb
and
divl
lret
stos
fsub
cltd
cmc
pop
jno
dec
mov
or
mov
in
dec
jp
movsb
arpl
insb
out
fcompl
sahf
dec
xor
dec
fildll
pop
push
dec
cmpsb
xchg
mov
data16
sub
mov
gs
rolb
mov
test
data16
push
adc
loop
cwtl
mov
dec
push
stos
cmpsb
push
sbb
mov
jp
pop
jb
mov
mov
sub
or
imul
scas
pushf
hlt
shll
imul
hlt
cld
inc
sarb
push
mov
subl
arpl
movsb
adc
rcr
in
or
or
jmp
and
sub
js
jmp
daa
push
loop,pt
sbb
addl
notb
mov
sbb
pop
jnp
nop
mov
popa
in
mov
clc
aad
scas
jmp
sbb
sub
aas
sbb
lahf
das
das
out
xor
add
push
push
push
fimuls
mov
push
repz
sbb
jl
mov
int3
orl
addr16
and
sub
push
or
cmp
rcrb
sub
outsl
mov
push
pop
mov
mov
stos
cld
adc
add
push
and
lock
cmp
and
out
lret
repz
pop
repz
repnz
jp
mov
and
scas
dec
or
mov
jns
jl
jnp
mov
cld
adc
in
push
int3
in
lods
and
pusha
cmpsb
je
stos
es
pop
frstor
hlt
popf
lret
xchg
sbb
int
ret
shll
or
pop
sbb
gs
fwait
imul
dec
push
xchg
cli
lret
adc
cld
cmp
xchg
loopne
jge
out
adc
fmull
cmp
push
sub
or
add
mov
lea
push
sbb
int3
rcr
shl
xlat
mov
lods
push
inc
shll
xor
jno
mov
cmp
movsb
push
mov
loopne
mov
inc
sbb
xor
fisubl
lock
fs
ret
adcb
cltd
es
dec
or
jge
fstps
xor
inc
mov
xor
or
adc
cmp
jecxz
cmp
mov
aaa
push
test
pushf
sub
fidivrs
xchg
xor
into
daa
jnp
enter
insb
pop
outsl
mov
inc
cmp
dec
add
jnp
scas
pop
rorb
pop
push
sub
inc
mov
pop
stc
jmp
data16
mov
jge
shll
jl
fimull
jl
divl
in
xchg
push
push
out
cli
push
jbe
sbb
loope
pop
ja
pusha
lret
mov
pusha
push
push
das
jb
sbb
adc
push
les
add
jecxz
xchg
pusha
pop
cmp
repnz
rcrb
xchg
and
push
jp
in
aad
adc
fwait
cmc
adc
dec
daa
add
call
ret
aad
mov
int
and
push
shlb
xchg
cmpsl
arpl
js
mov
or
mov
mov
xchg
int3
mov
cmp
xor
or
ret
push
pop
test
sub
mull
jecxz
xor
ret
pop
jg
and
mov
xchg
dec
fldenv
mov
fldenv
int
inc
bound
bound
adc
inc
xchg
fs
sti
cld
xor
xor
imul
ss
pop
dec
adc
out
insb
or
xor
sub
lcall
sbb
add
pusha
iret
add
das
fxch
cltd
xchg
xchg
arpl
cmp
sbb
cli
push
testb
out
jmp
ja
push
jno
sbb
cltd
mov
lea
ds
mov
or
lret
mov
add
pop
insb
lds
repnz
pop
aaa
adc
push
pusha
test
sub
and
xorb
test
add
pop
in
iret
xchg
outsl
mov
pop
push
loopne
pop
lds
pusha
mov
rclb
sbb
repz
pop
scas
outsb
push
aam
sub
adc
add
sbb
repnz
data16
or
neg
int3
aad
inc
sub
and
mov
in
xlat
aad
mov
icebp
fnsave
xor
lret
mov
mov
inc
mov
std
mov
ret
in
fwait
cmp
pop
sub
test
add
repnz
sub
inc
int
fdivl
push
jmp
mov
xchg
jp
popf
pop
adc
or
jae
pusha
fnsave
xchg
push
dec
ja
rorl
push
jae
xchg
fwait
lret
icebp
ret
cmpsl
ret
fildll
sub
jae
int
push
jecxz
add
sbb
jns
push
xlat
sub
ret
dec
add
xlat
or
icebp
dec
xchg
outsb
and
ja
shll
lcall
jnp
inc
xor
dec
xchg
fdivrs
mov
add
sbb
lock
pop
mov
pop
add
inc
fsubs
test
das
push
hlt
lds
add
sbb
fsub
xchg
addr16
adc
cmpb
loopne
addr16
sbb
fstpl
jo
cmp
fnstenv
iretw
in
sahf
idiv
and
mov
adc
out
mov
jnp
and
sbb
mov
push
fcmove
and
cmp
inc
add
subb
push
dec
pop
mov
in
dec
pop
push
mov
adc
fsubs
adc
psllq
ds
clc
jno
add
jp
imull
push
sub
sub
movsl
pusha
outsl
push
iret
cmc
pop
lea
mov
jbe
sbb
fbld
mov
test
cs
bound
jns
and
int3
pushf
lret
cld
jp
arpl
filds
cmpsb
sub
jbe
sbb
inc
ror
lret
jb
mov
out
fstpl
dec
stos
mov
sub
xchg
fwait
clc
movsb
pop
pop
push
push
sarl
icebp
mov
lock
sarl
clc
call
mov
mov
sbb
xor
xchg
inc
xchg
test
and
and
or
xchg
pop
jne
xchg
fwait
in
js
out
jle
xor
dec
test
aas
or
out
sbb
repz
rclb
outsl
pop
lea
pop
pop
dec
js
mov
pop
cmp
mov
subl
sahf
cmp
inc
sti
enter
cmp
mov
into
mov
xchg
fcomi
push
into
push
lahf
jecxz
js
popf
adc
jbe
enter
push
mov
push
jle
test
fcomps
aam
leave
or
stc
jae
mov
xchg
loope
cmc
jno
test
push
out
push
fstpt
hlt
scas
ror
jl
fnstsw
lret
pop
dec
addr16
push
stc
inc
xchg
sbb
rorl
jge
or
stos
cs
imull
pop
lock
icebp
fidivl
call
dec
sbb
xchg
out
jmp
xlat
mov
mov
enter
dec
jne
ds
push
xor
rcl
insl
adc
or
jmp
rcrl
repz
loopne
dec
pop
std
pop
in
add
mov
shrl
fisubrl
icebp
fists
test
xchg
imul
aaa
xor
aad
ljmp
cmp
and
mov
es
pop
mov
out
lret
cmp
dec
push
jo
jae
pushf
call
fs
push
jg
mov
aad
das
dec
lahf
push
stos
or
test
mov
mov
addr16
mov
insl
cmp
shrl
int3
aas
mov
lahf
cwtl
std
test
dec
or
dec
and
int3
dec
xor
stos
xchg
xchg
cmpsl
and
test
nop
repz
loope
dec
mov
lock
push
repz
inc
rcll
mov
cs
outsb
inc
lret
jb
in
fbld
fistpll
out
mov
sbb
jno
sbb
xlat
ret
das
cmpsl
xchg
mov
jbe
imul
sub
mov
sub
jl
cmp
outsl
or
nop
cs
add
mov
in
in
out
xchg
das
mov
pop
sub
push
scas
nop
jmp
jge
jno
jp
idiv
mov
aam
add
push
nop
mov
cmpsl
sbb
aas
cmpl
pusha
and
mov
stos
xchg
pop
jnp
fs
cld
popw
dec
and
adc
mov
push
lock
jmp
int3
pop
inc
loop
repnz
hlt
push
shll
icebp
stc
push
jecxz
sbb
shlb
lret
arpl
pop
je
insb
pop
jl
test
mov
xchg
fwait
add
mov
push
add
xor
in
inc
je
mov
test
cs
mov
mov
fildl
pop
and
repz
repnz
inc
es
out
stos
pop
icebp
jnp
or
cltd
mov
pop
scas
iret
popa
push
mov
mov
pusha
call
or
xchg
inc
hlt
or
adc
push
in
shlb
stos
dec
fidivl
imul
je
mov
dec
sub
je
aas
sub
pushf
into
push
and
fmull
pushf
pop
cli
js
ret
lods
and
pop
or
mov
add
lcall
xchg
pop
fwait
stos
cmpsl
rcll
xor
pop
in
arpl
repnz
test
aad
ret
mov
adc
add
fwait
adcb
pop
fnsave
mov
and
lds
add
push
sbb
mov
pop
bound
mov
sbb
cmp
pop
adcb
call
add
mov
fbld
xor
xchg
fcomps
in
repz
adc
mov
push
pop
jbe
inc
hlt
and
test
lods
sub
adc
lds
fsubs
sub
jo
mov
fisubrs
push
pop
xchg
push
lahf
dec
dec
mov
clc
jno
orb
push
lods
fdivrl
icebp
pop
jle
cmpsb
mov
test
sarl
push
sbb
sbb
imul
push
cli
xchg
ds
xor
outsl
dec
jp
push
xchg
stos
adc
imul
mov
popf
cmp
or
les
jg
jmp
repnz
cld
adcb
and
push
push
aas
sub
in
sub
ja
imul
cmc
cmc
loop
test
dec
xchg
inc
push
jns
mov
xor
js
pusha
mov
cmp
jge
testb
fisubs
jnp
frstor
bound
in
xchg
and
mov
push
bound
xor
cmp
imul
enter
fsubs
lret
pop
adc
scas
mov
push
jge
insb
inc
pop
andl
in
push
insl
call
mov
jle
jno
sahf
or
push
test
test
pop
jno
mov
mov
xor
xacquire
shl
jmp
jnp
pop
mov
int
repz
imul
lret
mov
mov
outsl
xor
sub
lock
dec
adc
lods
push
mov
fstl
jbe
sbb
xor
adc
fldt
xchg
inc
inc
mov
xchg
jnp
test
movsb
dec
mov
pop
fnstenv
sub
inc
jns
sahf
les
mov
adc
ret
xchg
add
jmp
and
inc
leave
ret
ljmp
clc
and
mov
pop
dec
inc
aas
clc
stc
or
inc
out
sarb
inc
jnp
arpl
push
sbb
fiadds
into
test
add
mov
sahf
hlt
mov
test
int
fdivr
cld
dec
sub
fstps
jmp
xor
lods
xchg
stc
rcr
inc
jge
das
add
add
ficoml
jge
pushf
fidivrs
jg
dec
mov
inc
mov
jl
iret
int3
scas
out
xor
pop
arpl
sbb
fmull
xchg
shr
outsb
outsb
ljmp
add
in
mov
movsl
pop
imul
push
std
and
adc
imul
push
xchg
call
stos
movsl
orb
or
xchg
lods
inc
xchg
dec
sar
es
jle
shlb
inc
out
sahf
mov
xor
ss
pop
dec
rcll
adc
outsb
pop
mov
or
jmp
outsb
es
dec
inc
fwait
adc
and
cmc
fcoms
xchg
fstl
xchg
divl
lret
dec
rol
push
arpl
pop
arpl
push
mov
stos
cmpsl
and
jne
lahf
imul
mov
rclb
inc
fldenv
push
and
iret
push
cmp
jnp
xlat
jae
mov
pop
int3
add
sub
enter
loope
call
xchg
scas
clc
int3
je
mov
pop
or
in
jecxz
cmpsb
pusha
inc
xor
pop
dec
bound
mov
in
cmp
mov
inc
les
je
in
sub
js
adc
jbe
aam
ja
cs
lret
sahf
and
test
nop
mov
adc
adc
nop
cmpl
push
mov
leave
insl
test
push
test
jmp
mov
pop
add
fisubrl
jae
inc
add
xchg
imul
inc
rdtsc
mov
mov
and
or
outsl
sbb
notl
sqrtps
or
int3
int
enter
ja,pn
insb
mov
sbb
test
add
call
in
test
push
sbb
fsubrl
adc
aam
popf
push
adc
pusha
xchg
mov
sti
outsb
jp
out
xchg
sbb
fstpl
scas
mov
cmp
jmp
mov
andb
dec
jge
or
pop
mov
or
pop
jns
xchg
mov
loop
or
shrl
xchg
sub
jb
push
lret
iret
push
pop
lods
mov
or
inc
xchg
push
mov
pop
push
in
in
xchg
sbb
test
fsubl
ljmp
cmc
xchg
jecxz
mov
gs
mov
fdivrl
rolb
mov
out
push
lods
mov
pminsw
inc
sub
imul
stc
xor
sub
push
dec
xor
xchg
in
xchg
fwait
negb
ljmp
mov
popf
jns
insb
hlt
cmp
subl
sbbb
dec
xchg
movsl
mov
fsubl
daa
xor
inc
das
mov
iret
mov
cmp
hlt
lahf
xor
sub
sbb
cli
adc
push
testl
aas
ret
imul
inc
push
pop
dec
xchg
insl
mov
adcb
mov
mov
pop
cmp
jp
xor
fwait
ss
in
callw
sbb
fsubs
dec
and
inc
pop
sub
dec
xlat
out
sbb
clc
jmp
or
enter
mov
jns
mov
adc
fwait
fwait
inc
daa
loop
loop
xor
icebp
xchg
mull
ja
or
adc
ss
int3
jns
popf
sbb
pop
mov
push
and
repnz
fdivp
sub
mov
sub
mov
xchg
mov
iret
int
xchg
hlt
pop
cli
sub
push
cmp
addb
push
cld
movsl
push
or
aaa
or
jne
jne
in
js
add
sub
inc
mov
add
inc
push
add
enter
sub
push
je
aam
mov
mov
or
arpl
cmp
mov
xchg
jle
fs
xchg
out
sar
adc
std
mov
mov
mov
push
inc
lahf
sbbl
add
jb
xchg
jle
aaa
insb
lret
dec
ds
cltd
cwtl
push
fistpl
mov
cmp
addb
fnsave
mov
inc
adc
aad
dec
adc
jae
inc
or
popf
xchg
dec
into
enter
jg
int
xchg
mov
mov
andl
xchg
inc
or
jns
push
inc
js
push
xor
pop
or
push
loop
sub
mov
xor
add
inc
xchg
or
ss
icebp
stos
pushf
cmp
push
xchg
pop
inc
stc
push
fstps
push
mov
pop
scas
push
mov
and
dec
lods
ds
push
ss
lret
fs
sbb
outsb
outsl
sbb
pop
fistl
and
jecxz
roll
ljmp
xor
jnp,pn
inc
mov
in
pop
push
adc
mov
fstps
jnp
push
mov
xchg
jno
jmp
shrb
xchg
adc
and
mov
mov
or
or
xor
sbb
mov
insb
mov
jp
dec
cmp
lods
cs
jge
add
out
dec
fsub
cmovae
dec
dec
fisubl
pop
ret
xor
jo
stos
clc
mov
jp
fwait
mov
insb
or
jl
scas
sub
cmp
outsb
pop
add
das
mov
and
lcall
roll
xlat
stos
xor
cli
in
xchg
and
cmc
mov
fisubrs
jno
out
and
imul
jnp
in
sbb
loope
push
cmp
stos
pop
push
mov
dec
jae
add
dec
insb
shl
test
iret
or
mov
movsl
inc
stos
pop
and
mov
inc
stos
mov
loop
sbb
pop
adc
jp
gs
xchg
mov
arpl
jmp
adc
mov
das
pusha
test
fs
enter
inc
jne
push
mov
ljmp
inc
mov
out
add
fadds
je
xchg
push
mov
jo
loopne
mov
jg
sbb
xchg
pop
in
adc
push
push
xchg
insb
fmulp
aam
jb
int3
or
sub
ffreep
movq
mov
in
xchg
out
adcb
adc
mov
dec
mov
sbb
pop
arpl
mov
mov
sub
sub
push
imul
and
inc
loop
inc
mov
pop
jecxz
mov
cmp
mov
fdiv
hlt
in
cmp
xor
xorl
sub
mov
cwtl
pop
jmp
mov
cmc
fnsave
insl
mov
mov
sub
adc
jmp
xchg
adc
and
mov
jg
scas
xor
cwtl
in
adc
xchg
addr16
repnz
in
push
sub
or
or
gs
mov
dec
es
insl
cld
adc
push
mov
out
movsl
cmp
addl
sub
rolb
jmp
xchg
xchg
dec
sar
cmc
cli
aas
cmp
cli
int
filds
leave
inc
std
outsl
into
xchg
xor
rcrb
loopne
or
shl
mov
ret
push
out
aam
outsl
fadds
cli
std
push
js
negb
js
call
mov
jmp
pop
enter
mov
dec
jb
stos
int3
adc
mov
xor
xchg
jnp
hlt
jl
inc
sub
iret
jno
mov
mov
adc
jge
repz
and
xorl
push
push
movsl
movsb
std
or
pop
repnz
ficompl
filds
aas
pop
out
jnp
mov
mov
les
xor
inc
sub
pop
inc
push
inc
sub
scas
inc
cltd
and
add
sbb
test
in
jbe
rorl
and
mov
loopne
jno
fnsave
adc
jno
out
jno
pop
mov
sbb
loopne
in
xor
repnz
mov
mov
iret
xor
into
pushl
movsb
cwtl
xchg
imul
hlt
aas
je
fidivl
pop
adcl
into
xorb
testl
inc
pop
sub
mov
add
xchg
gs
sub
dec
push
repz
in
xchg
rcrl
and
mov
dec
xchg
rcr
ror
add
out
data16
les
xor
adc
sub
arpl
or
fcmovbe
add
out
ficomps
pop
cmp
pop
mov
mov
mov
adc
lea
mov
jae
movl
dec
adc
jno
fdivrs
jno
jmp
push
pop
lahf
bound
sub
ljmp
push
inc
add
pop
pop
push
mov
and
inc
pop
cmp
mov
cs
stos
xor
icebp
fdivr
sub
out
or
rorl
add
jbe
jmp
sub
dec
mov
sbbl
mov
fcmovnbe
fsubp
xchg
aaa
lret
push
shlb
std
or
repz
cmpsl
inc
xor
test
jle
xor
imul
lds
in
outsb
mov
insb
xor
gs
lock
hlt
mov
out
cmp
mov
or
cmp
lock
add
lods
insb
std
nop
sahf
adc
out
jne
mov
mov
push
push
lea
scas
fimuls
push
test
inc
lock
les
gs
sub
dec
insb
test
mov
mov
push
pop
fiaddl
cmpsb
mov
jg
lds
pusha
stos
inc
insl
cmpsb
mov
call
lret
lds
or
xchg
mov
shl
adc
lods
fidivl
cmp
and
pop
cmc
fisubrl
jmp
cmpsb
cmp
cmp
xor
popa
xor
adc
rcll
push
repz
mov
mov
lret
loope
jge
test
and
push
fnstsw
mov
add
pop
loopne
inc
mov
das
mov
sbb
xorb
jo
hlt
push
imul
cmp
inc
leave
aad
in
lret
dec
xchg
dec
and
ss
add
pop
addb
and
push
out
sub
pushf
loope
jnp
jb
icebp
xchg
dec
ret
push
sub
jnp
jp
jae
lods
lret
mov
and
cmp
nop
sahf
lea
mov
dec
jo
mov
popf
shll
jns
cmc
sub
jnp
testb
mov
cld
lret
cmp
std
sub
loopne
and
sub
pop
call
loop
pop
adc
pushf
dec
xchg
cs
or
mov
or
dec
jg
negl
mov
sbb
dec
mov
and
cmp
and
enter
lret
movsl
push
mov
sti
incl
fs
lods
push
loopne
jae
push
push
nop
dec
add
movsl
mov
sbb
lcall
push
lds
sbb
lods
lahf
insb
mov
gs
lcall
fwait
mov
lea
bound
cmp
daa
mov
rolb
jnp
int3
inc
or
mov
pop
cs
ss
repnz
aaa
dec
mov
mov
imul
xor
jne
or
lds
or
mov
into
gs
repz
or
push
sub
cs
out
push
xor
cli
ret
mov
or
inc
jge
mov
cmp
jns
lea
mov
pop
or
in
mov
loopne
mov
cmp
shr
xchg
add
loopne
jecxz
xor
fstpt
mov
sub
cs
cmp
aas
push
shll
adc
ja
lods
or
jns
mov
adc
dec
repnz
push
jae
mov
cmc
fdivrs
aam
push
xchg
data16
outsb
pop
nop
call
or
mov
cmp
mov
cmc
add
xor
pusha
stc
stc
push
repz
mov
pop
inc
mov
lods
out
test
sti
push
les
sub
mov
mov
add
loopne
pop
stos
adc
mov
mov
mov
lcall
mov
data16
test
in
jno
push
or
mov
add
neg
xabort
inc
push
dec
push
lcall
inc
outsb
cs
xchg
sub
stos
or
ja
jp
lods
lahf
sub
loopne
push
ds
pop
lods
loopne
sbb
xorb
xor
xor
jne
dec
aad
test
cmp
in
sti
je
push
sub
mov
ljmp
lock
lahf
pop
inc
jo
out
cs
gs
mov
data16
scas
repz
xchg
insl
mov
lock
inc
fisttps
pop
xchg
filds
dec
daa
and
clc
xchg
xchg
sub
sub
jl
insb
sbb
pop
mov
iret
push
pop
dec
xor
rolb
xor
outsl
ss
push
arpl
fs
arpl
push
cwtl
pop
rclb
loopne
sahf
cmp
mov
add
push
or
jb
jmp
mov
lret
test
mov
lock
adc
mov
pushf
test
dec
pop
arpl
xor
sub
out
arpl
dec
dec
fs
push
jno
add
repnz
adc
roll
lock
out
out
dec
in
push
gs
sub
or
cli
cmpb
cmc
sbb
mov
jo
add
push
mov
push
mov
imul
popf
inc
jle
and
bound
roll
in
pushf
add
mov
aad
xchg
mov
inc
mov
cld
addr16
add
or
lds
cmp
jp
aad
jp
mov
aad
xchg
inc
add
cmp
lcall
ds
inc
jb
sbb
cli
mov
dec
lds
subb
test
fsub
enter
fistpl
data16
mov
loopne
inc
fdivr
pop
scas
cmp
xchg
insb
xor
push
jo
scas
pop
sbb
stos
movsb
or
fldt
mov
loopne
inc
mov
fmull
adc
dec
or
insl
mov
movsl
mov
xchg
popa
jl
rclb
into
pop
popa
cwtl
push
aad
or
jne
imul
inc
test
jl
lock
lret
jmp
sub
inc
cltd
aad
dec
xchg
stos
mov
icebp
out
mov
cli
outsb
inc
scas
pop
adc
addb
mov
jne
cmp
pop
mov
je
sbb
out
icebp
int
mov
jns
xchg
lds
cmpsb
jo
push
jns
mov
cltd
dec
push
pop
pusha
push
adc
or
sbbl
and
sub
xor
jbe
lods
pop
test
into
fnstsw
push
adc
jmp
iret
insl
sbb
cmp
dec
xchg
and
add
aas
stos
mov
mov
fistps
sub
pop
clc
sub
pop
cld
pop
in
mov
insl
mov
mov
and
in
xorl
test
int3
es
cmpsb
aam
scas
daa
shr
mov
lahf
and
shrl
xchg
xchg
ror
jo
shlb
addr16
repz
lea
shll
xor
mov
adc
push
pop
mov
jle
fdivrs
lock
les
mov
in
mov
mov
pushf
inc
sbb
cli
mov
fnstenv
cmp
adc
iret
pop
pop
hlt
mov
jae
shlb
loopne
mov
movsb
pop
jmp
in
sub
test
jbe
lahf
arpl
xchg
push
cli
push
mov
insb
iret
cmp
outsl
mov
mov
movsb
lret
sbb
pop
pop
dec
lret
sub
or
ffree
and
adc
out
and
shlb
pop
loop
mov
ret
fldcw
dec
cmp
repnz
push
xchg
jb
sti
mov
sub
mov
add
addr16
in
je
sbb
adc
mov
cmp
mov
movsl
push
sbb
push
push
jae
dec
mov
lods
popl
push
icebp
sbb
adc
cltd
lds
cs
daa
arpl
jbe
in
push
leave
pop
or
mov
pop
or
ss
push
cld
pop
xor
outsl
jge
fstp
xor
aad
push
and
mov
ds
jnp
ss
mov
loopne
mov
sbb
pop
jp
mov
xlat
dec
int3
mov
sub
xchg
mov
sbb
mov
pop
add
mov
popa
shlb
aas
sub
pop
rcll
into
mov
bound
mov
or
inc
das
mov
fiaddl
inc
jne
dec
out
aas
out
call
ljmp
add
push
sbb
test
jb
pop
jno
jg
adc
ret
cmp
cld
mov
int3
inc
outsb
adc
sub
push
add
inc
dec
push
mov
mov
push
es
aas
adc
push
cmp
or
adc
sahf
lock
test
rcr
mov
popa
push
sti
ds
imul
js
ss
add
and
jge
jge
mov
daa
es
and
loope
rolb
popf
cmp
sbb
sbb
sub
mov
mov
dec
sti
sbb
push
sahf
lret
sbb
add
in
inc
adc
xor
popf
popf
divl
and
adc
ljmp
gs
cmp
inc
adc
or
mov
rclb
jle
mov
daa
or
imul
jge
and
xor
subl
mov
adc
std
fstpl
xchg
icebp
xor
cli
jno
cmpxchg
in
clc
xor
xchg
lds
in
push
rcrb
mov
nop
dec
fbld
mov
sbb
push
cmp
jl
pop
push
repz
mov
adc
fimull
aam
or
cmp
sbb
jecxz
clc
xchg
xlat
pushf
sub
inc
push
enter
iret
xchg
movsb
pop
int3
enter
test
daa
cmp
stos
nop
cwtl
aaa
adc
leave
or
sbbl
cltd
add
imul
fwait
push
movsl
lods
sti
cltd
roll
inc
mov
jp
test
jns
push
lahf
pop
mov
out
dec
fucomi
dec
stos
lret
xchg
pop
cmp
sub
int3
push
fadds
daa
mov
xchg
in
ds
jbe
lret
pop
and
rcl
pop
pop
push
xor
rcll
ja
push
push
sbb
dec
sub
inc
loop
hlt
insb
mov
add
data16
pop
dec
out
inc
repz
xchg
notb
insl
mov
cmp
cld
sbb
pop
pushf
cmp
xor
or
ljmp
jl
sti
sub
dec
outsl
nopl
int
sti
sbb
scas
jbe
pop
pop
inc
push
addr16
sti
andb
and
mov
and
sub
insb
push
clc
xlat
dec
lock
sub
add
testl
xor
iret
jmp
mov
lds
xchg
jge
sbb
bound
mov
enter
lods
jbe
lock
fbld
lahf
hlt
or
imul
pop
inc
repnz
dec
lahf
jbe
arpl
sbb
cs
int
test
mov
sub
push
mov
shrb
xchg
inc
dec
into
in
adc
subl
nop
cmp
repnz
cld
rorl
cmp
test
idiv
jbe
jp
mov
out
cs
out
jp
into
shr
rcrl
aam
or
sahf
js
ja
out
xchg
xor
inc
push
pop
sbb
jl
in
lahf
xchg
clc
test
jl
insl
mov
insl
cmpsb
mov
jge
mov
push
shll
dec
xor
data16
pop
cmpsb
mov
or
mov
in
cmp
jmp
push
sbb
out
cld
int
xchg
insb
pop
mov
cld
in
pop
loopne
stos
inc
subl
xor
aaa
xchg
push
and
mov
jg
out
push
add
or
andl
jns
repnz
in
mov
repnz
sbb
mov
repnz
lret
push
mov
cmp
or
cltd
sbb
jnp
xor
mov
popl
outsb
shr
dec
cmpsl
loopne
popa
xchg
push
sub
mov
mov
and
data16
pop
std
ucomiss
cmp
add
imul
adc
hlt
cmp
mov
add
add
jnp
sbb
xor
push
cs
popf
inc
fcoml
add
xchg
mov
imulb
xchg
add
cmp
mov
enter
sti
add
js
pop
dec
jge
mov
inc
bound
xor
cli
sbb
inc
stos
xchg
loopne
push
pop
arpl
mov
sti
add
int
pand
jo
test
inc
cmp
add
or
cmp
mov
fisttpll
fsts
xchg
jle
push
sub
jge
inc
lods
sub
push
adc
test
xchg
lock
aam
movsb
mov
aam
fld
ja
je
in
and
rclb
xor
jo
movsl
mov
xchg
lret
aam
out
and
sar
movsl
ret
or
repz
aas
les
jb
out
loopne
push
add
jl
int3
movsl
into
jp
shrb
sub
popf
or
roll
xor
jge
mov
mov
in
imul
push
mov
push
add
mov
push
and
popf
cli
mov
scas
adc
jns
adc
arpl
pushf
lods
mov
jb
dec
adc
ja
adc
or
pushf
aam
cmpsl
xorb
stos
mull
stos
sub
mov
xor
add
xchg
mov
inc
adc
sahf
arpl
fwait
out
push
sub
pop
cmp
fisttpl
stos
adc
sahf
popf
mov
xchg
or
jo
jbe
ds
jne
cli
xchg
lret
loope
leave
fldt
push
mov
in
repnz
cwtl
pusha
mov
popf
out
cmp
fsub
adc
add
or
mov
sub
outsb
mov
andl
cwtl
mov
jecxz
jo
in
hlt
pop
inc
sub
push
push
pop
call
aaa
popa
xor
jno
or
jo
imul
ror
dec
adc
lods
loop
dec
mov
out
icebp
mov
sbb
mov
popl
and
inc
fistpll
ret
cs
jl
mov
stos
sahf
cmp
mov
cld
push
sub
pop
fldt
adc
movb
jp
cmc
and
adcb
lret
xor
scas
les
or
inc
sub
sbb
cmpsb
call
mov
lret
lahf
call
mov
cmp
jmp
outsl
add
add
out
stos
xchg
xor
icebp
pop
test
pop
scas
and
arpl
xor
dec
lret
xchg
xchg
addb
xchg
lds
and
and
jnp
mov
adc
idivb
jl
mov
xor
sahf
sbb
iret
mov
fstpl
cltd
mov
iret
std
xchg
arpl
pop
insb
jae
jnp
mov
sbb
mov
cmpsb
out
sbb
pop
and
pop
jle
lahf
and
xchg
fwait
mov
lahf
pop
mov
jae
pop
inc
adc
mov
jbe
sub
std
push
ja
es
sti
daa
cmp
pop
cwtl
pushf
cmp
mov
ljmp
xor
es
mov
xchg
xchg
int
enter
sub
loopne
movl
cmp
pop
es
and
jge
dec
pop
jo
add
xor
mov
xchg
stos
mov
fucomip
pop
pop
lahf
in
xor
dec
and
fistpll
aaa
push
adc
sbb
mov
xor
test
sbb
jl
out
rclb
out
dec
loopne
insb
ret
mov
ficoms
shll
mov
jge
jecxz
movsb
sti
xchg
inc
jnp
mov
clc
cmp
xchg
lods
sahf
test
pushf
jb
or
cltd
rcrl
jecxz
jge
movntps
imul
dec
pushl
das
leave
loope
cmp
cmp
sahf
enter
sub
mov
jns
and
iret
sub
addr16
or
mov
and
and
shlb
ja
lea
ret
mov
mov
iret
cwtl
jne
test
fsub
jne
mov
cmpsb
ljmp
stc
lcall
mov
and
pop
cmp
into
mov
daa
jno
mov
push
xchg
insb
push
int3
sarl
xchg
xchg
stos
and
sahf
push
xor
vcomiss
sbb
inc
mov
dec
dec
xchg
rcr
add
imul
addr16
imul
loope
cmpsb
testb
or
fs
cmc
pop
aad
gs
data16
mov
push
mov
and
insl
dec
jmp
push
xlat
scas
and
cmpxchg
or
and
pusha
test
dec
lock
pop
les
movsl
lods
xchg
cmp
ret
sub
scas
std
and
fsubrl
test
push
out
mov
dec
shl
xchg
xor
ror
ss
call
std
push
sbb
sbb
rdtsc
lcall
fucomi
rolb
xchg
test
sbb
cli
dec
les
imul
mov
cmpsl
mov
pusha
sbb
inc
aam
pushf
jp
sbb
mov
jns
outsl
mov
xchg
fwait
pop
lret
rorb
add
cwtl
das
les
ss
mov
orl
aam
pop
sbb
push
hlt
aaa
jne
not
aas
das
inc
sti
je
leave
inc
ret
adc
mov
adc
pop
jp
xchg
scas
dec
xor
ret
adcl
rorl
adc
mov
xchg
push
int3
outsl
iret
or
std
dec
mov
sbb
sbb
cmpl
sub
popl
scas
std
inc
js
jnp
cmp
pop
cmpsl
cmp
inc
sub
adc
or
cwtl
aaa
rcll
aaa
pop
cmp
lahf
int3
sbb
pop
cmc
inc
sbb
dec
adc
fstl
mov
add
mov
jno
sub
jbe
es
mov
and
mov
pushf
mov
fisubs
mov
scas
jnp
mov
cld
xor
insl
cmp
jns
add
xor
push
mov
sti
daa
idivl
xor
cmp
cmp
popa
jl
inc
jmp
mov
xor
or
dec
push
push
cmp
out
mov
test
xchg
int3
and
add
cwtl
inc
pop
pop
push
sahf
mov
call
mov
add
xor
cmpsb
xchg
push
push
mov
ffree
sub
jl
add
js
mov
lret
jne
jg
jne
pop
dec
push
jmp
test
jge
lahf
lock
inc
xchg
xchg
xchg
mov
xor
mov
das
imul
add
clc
cwtl
daa
enter
mov
or
mov
xchg
xchg
nop
mov
add
cmpsb
inc
idiv
aaa
loopne
mov
push
out
cmp
mov
ficoms
notb
popa
cmp
or
xchg
shlb
jmp
bound
test
lock
test
mov
imul
pop
sbb
mov
ret
xchg
xor
mov
jge
shlb
enter
outsb
pop
dec
lahf
cltd
xor
mov
sti
dec
leave
sub
jo
fsubs
cmp
sub
andl
inc
or
mov
int3
testl
adc
outsb
sbb
mov
pop
dec
dec
movl
mov
xchg
mov
ficoms
les
push
mov
gs
and
pop
negb
lret
and
insl
ja
je
imul
pop
mov
mov
mov
xor
xlat
cmp
sub
mov
es
add
pop
inc
cli
mov
sub
out
cwtl
dec
mov
add
loope
jle
add
mov
js
aad
in
inc
dec
fld
push
jns
inc
out
mov
lds
dec
arpl
push
outsb
or
push
inc
fidivrs
fsubr
push
cmp
xchg
out
notb
push
xor
imul
pop
in
pop
out
sahf
sbb
jle
rorl
movsl
push
jae
fwait
pop
dec
mov
icebp
mov
mov
jp
dec
mov
push
hlt
pusha
sub
call
scas
imul
push
clc
sbb
dec
jae
xchg
mov
clc
xor
popf
sub
mov
or
adc
and
andb
xor
sti
mov
mov
cmp
sbb
push
fisubrl
xchg
imul
dec
sahf
ljmp
test
pusha
jne
mov
fsts
add
das
stos
xor
das
mov
xchg
stc
inc
mov
jmp
insb
adc
jecxz
jmp
cmpsb
test
pop
data16
inc
cmp
lods
fsubrs
xchg
shlb
pop
mov
lret
mov
jne
shlb
ljmp
jae
or
cmp
test
mov
jecxz
dec
sarb
stc
push
pop
mov
xor
mov
fbstp
popf
jp
adc
adc
call
jae
mov
mov
ret
mov
cmp
fisttpll
lock
push
and
inc
cmpsl
je
pop
lahf
movsl
push
mov
xchg
jl
fcoml
sub
mov
lods
dec
iret
es
cmp
cmp
dec
mov
cltd
mov
jbe
addr16
mov
mov
adc
pushf
sub
and
push
push
adc
int
dec
adc
test
push
or
scas
rclb
pushf
adc
loopne
xor
arpl
fcoml
pop
jp
push
sub
xchg
dec
aas
scas
daa
pop
pop
imul
adc
add
cmp
fsubl
mov
adc
jge
adc
sub
push
stos
iret
pop
popf
les
mov
out
arpl
leave
fildll
adc
test
xchg
sub
test
popf
pop
cmp
lock
sbb
add
or
cli
mov
rcr
sbb
aaa
loope
sbb
xor
add
cwtl
pop
jne
int
sub
rorl
mov
jae
xchg
aad
fsub
add
nop
movsl
test
pop
cmp
xchg
fcoml
pop
pop
testl
mov
sub
mov
outsl
sti
adc
mov
fimull
xchg
insb
fisttpl
jp
aad
movsb
pop
loop
push
xor
mov
cmp
sbb
cmpl
mov
or
inc
ss
or
into
jp
mov
jns
jo
incb
out
bound
xor
jl
sub
and
and
bound
or
ret
gs
mov
mov
fiaddl
mov
and
dec
rolb
and
popa
or
mov
cmp
cld
fcomps
loop
xor
cmp
sub
jns
insl
add
sbb
test
outsb
or
rclb
push
pop
mov
jecxz
std
jp
sbbl
or
xlat
lret
push
das
mov
nop
jno
cmp
int3
dec
xor
clc
push
add
adc
into
mov
std
mov
rclb
cmp
lcall
inc
fwait
hlt
dec
pop
fiaddl
pop
mov
sbb
leave
inc
jne
pop
push
inc
stos
addb
and
outsb
push
loopne
fucomi
adc
xor
scas
pushf
pushf
in
shl
xlat
push
shll
enter
cmc
dec
xchg
popa
and
stc
arpl
mov
adc
repnz
lods
xchg
sub
jno
xchg
jl
fnsave
out
mov
fmuls
popa
push
mov
lock
push
add
inc
inc
scas
addr16
inc
cltd
cmp
inc
mov
cmp
push
add
popf
push
xchg
mov
in
jg
ret
fs
call
push
jmp
xchg
inc
rolb
rcll
xor
std
cmp
insb
and
insb
popa
sbbl
into
cwtl
inc
bound
lret
loope
pusha
push
cli
movsb
sub
cwtl
xchg
xor
cmp
xorb
outsb
xchg
mov
pusha
fnstsw
aam
push
xlat
jbe
lods
imul
sbb
mov
jnp
sub
das
mov
nop
fwait
mov
lcall
shl
inc
repnz
and
fcomi
inc
push
mov
adc
leave
mov
push
sbb
out
sbb
std
pushf
xchg
sbb
stos
ret
inc
jmp
mov
sub
cmp
xchg
push
pop
repz
push
mov
push
xchg
movsb
inc
fs
ss
xor
xor
mov
ja
mov
cmpl
xchg
rorl
scas
xchg
rcll
xor
mov
xor
gs
xchg
sub
movsb
cs
pusha
pushf
dec
mov
add
fnsave
push
mov
jb
add
jmp
jg
loop
add
mov
xchg
and
xor
pop
dec
repnz
fstps
pushf
jae
popf
imull
pop
fwait
cmp
lret
test
aam
jbe
lods
arpl
inc
or
rolb
cld
adc
out
push
test
enter
adc
or
pop
mov
mov
mov
and
in
pop
pop
lcall
xchg
cmpsl
dec
andb
gs
fsubrl
lds
ja
cs
movsb
iret
and
xchg
push
jbe
sahf
pop
sub
enter
push
push
or
test
cltd
mov
lret
or
ret
call
or
enter
add
das
in
xchg
dec
popa
mov
imul
pop
jno
fidivrs
bound
lock
xchg
out
fnstenv
ss
mov
adc
emms
aam
outsl
mov
out
icebp
aaa
dec
pop
rcl
xchg
stos
mov
lcall
xor
lods
xchg
fnsave
add
call
in
xor
cmc
push
movsl
push
test
mov
jno
jae
jecxz
stos
jge
mov
sub
xlat
dec
adc
aas
jns
in
mov
mov
xor
cmp
dec
mov
fld
adc
jnp
fs
jno
fldenv
cmp
std
mov
cwtl
xor
jl
cmp
mov
movsl
dec
xchg
lret
xorb
popf
pop
fistps
rorb
imul
mov
inc
repz
rcr
stos
jmp
sub
out
out
fldcw
cmpsb
ds
in
sarb
repz
nop
loop
jns
clc
xlat
sbb
push
and
jg
or
test
xchg
fisttps
cmp
fisubs
jmp
lods
lods
sbb
ror
push
ds
js
jbe
fildl
out
std
movsb
adc
jns
xor
sti
xchg
ss
mov
mov
jae
mov
sub
lret
jb
fld
imul
mov
popa
or
test
lods
movsb
mov
dec
into
imul
movsb
lds
pop
mov
sbb
scas
or
es
jle
dec
filds
add
adc
mov
pop
test
mov
lea
in
mov
repz
int3
mov
cmp
push
add
jb
push
iret
out
dec
aaa
sbb
xor
dec
outsb
and
mov
add
xchg
inc
inc
fwait
dec
dec
add
adc
mov
xchg
adc
dec
sub
dec
mov
mov
inc
cmp
add
pop
stos
cwtl
fldt
mov
in
mov
push
and
cs
jnp
jp
aaa
cmp
or
imul
add
cmp
jmp
and
es
ds
mov
cmp
lret
xor
inc
fcmovnu
aad
dec
neg
adc
inc
pushf
dec
cmp
test
dec
or
jns
cmp
adc
mov
hlt
mov
cld
pop
mov
and
jge
push
xchg
arpl
sbb
pop
fdivr
mov
ret
lret
jae
jne
push
into
or
inc
cmp
fwait
rep
mov
xorb
xor
andb
movl
stos
test
divl
insb
fwait
dec
cmp
sti
sbb
addr16
in
mov
in
pop
jne
pushf
outsl
pop
sahf
scas
std
pop
enter
and
push
mov
pop
adc
les
jbe
xlat
bswap
lea
negl
inc
lcall
scas
scas
loope
mov
push
call
ljmp
dec
pop
push
mov
les
jle
mov
sti
movsb
xchg
pop
dec
mov
cmp
mov
dec
fiaddl
stos
adc
stos
fnsetpm(287
dec
dec
xor
xor
ds
sub
ror
jae
or
je
mov
lea
sbb
gs
sbb
jmp
aas
pop
rol
cld
add
mov
inc
aad
lock
fildll
xor
bound
dec
cmp
adc
mov
pushf
mov
testl
fistpl
cmp
add
popa
ficoms
out
xchg
inc
imul
cmp
add
out
or
xlat
mov
adc
out
pop
cwtl
repz
push
and
scas
mov
push
les
sar
aas
stc
into
ret
aam
sti
cmc
dec
mov
inc
ret
iret
xor
subl
mov
pop
nop
mov
push
pop
inc
and
lods
pop
addr16
ljmp
sbb
mov
cld
es
or
push
pop
adc
gs
add
outsl
out
pusha
repnz
je
imul
mov
das
out
mov
cld
shl
lds
fninit
mov
jecxz
pop
jb
idivl
jne
push
mov
enter
mov
enter
xor
loopne
roll
test
push
pop
or
imul
setae
mov
and
and
dec
push
sbb
scas
push
adc
mov
mov
inc
sub
xor
xchg
lahf
outsl
sub
xchg
pop
mov
cmp
mov
rolb
mov
int3
mov
sbb
out
push
push
hlt
fidivrs
pop
jmp
fs
dec
cltd
out
mov
and
ficomps
cld
sbb
xchg
test
xor
fisttpl
fistps
push
sbb
or
push
cld
and
sub
cld
out
js
outsb
repz
pop
inc
ljmp
jge
fnstenv
insb
out
sbb
icebp
fimull
xor
lret
pusha
sub
and
and
mov
fadd
stos
mov
xor
sub
sbb
pop
jbe
mov
outsl
cwtl
pop
push
jle
mov
out
mov
add
mov
mov
pop
sahf
cld
dec
incb
or
xchg
cld
mov
jle
adc
idivl
outsb
push
xor
insb
cmpsb
dec
loope
rorb
add
pop
jo
je
jo
xchg
jbe
or
push
lods
push
push
popa
dec
negl
inc
sub
xlat
xchg
push
outsl
lahf
xor
xorl
push
lds
je
sub
cmpsl
les
lret
jbe
in
mov
fidivl
js
lea
fidivrl
sti
push
js
mov
mov
sbb
sub
rclb
adc
loop
or
loopne
lcall
hlt
hlt
mov
scas
lods
sub
out
loop
out
push
subb
sbb
adc
cmp
je
cmpsb
fwait
cmpsl
pop
iret
ds
mov
jnp
xchg
sbb
push
scas
cmpsb
mov
movsb
mov
cli
lret
lds
push
add
xchg
popf
jg
xor
sub
and
movsb
rcr
je
stos
cmp
mov
in
sub
les
mov
dec
les
cmp
ljmp
cmp
mov
ljmp
jge
lds
xchg
push
hlt
lods
mov
out
sti
pop
outsb
pushf
data16
insl
sahf
add
jnp
stc
repnz
sub
cmp
mov
pop
lahf
fnstcw
ljmp
sbb
mov
ffreep
mov
out
add
fcmovnbe
mov
inc
xor
adc
push
cmp
adc
add
pop
inc
xchg
adcl
nop
add
xchg
orl
movsl
out
push
adc
inc
mov
repz
lcall
hlt
push
mov
ret
pushf
insb
push
dec
inc
ret
push
dec
cli
aad
adc
es
pop
repnz
cmp
nop
sbb
test
jnp
sub
or
sbb
fldcw
push
je
pushf
sub
push
out
pop
rol
xchg
ret
inc
inc
xchg
pop
and
mov
cmpb
cli
jecxz
loope
movsb
loopne
lcall
dec
call
outsb
jbe
lods
fdivl
orb
mov
inc
jae
cmpsb
mov
inc
aam
movb
adc
stos
movsb
dec
in
add
int
jne
pop
cmp
sahf
pop
adc
jg
jl
mov
ret
orl
and
add
out
nop
mov
cmp
pop
dec
adc
fwait
cltd
imul
loop
fdivrl
pusha
mov
mov
xchg
xor
jecxz
lret
sahf
cltd
xchg
lock
subb
push
cli
mov
cwtl
nop
mov
jae
dec
adc
xchg
pop
mov
stc
outsl
loop
ja
mov
call
cld
test
push
je
insl
dec
dec
fbstp
js
loope
iret
mov
sahf
adc
or
push
add
sbb
mov
mov
pop
jecxz
mov
fwait
pop
sbb
pop
fildl
ud1
ljmp
lods
xchg
cmp
inc
icebp
das
sbb
arpl
push
fnstsw
fidivl
pop
or
movsl
mov
arpl
jmp
push
out
arpl
and
stc
mov
testl
jb
dec
hlt
mov
and
dec
clc
ja
jo
loope
ss
inc
movsb
mov
mov
mov
mov
dec
rclb
jge
popa
nop
adc
or
xchg
lret
bound
call
inc
xchg
inc
adc
aam
pop
cmp
cwtl
sub
iret
in
jge
fdivrl
sbb
xchg
inc
in
mov
fdivl
mov
sbb
decl
addb
push
mov
pushl
fdiv
cwtl
dec
stos
cmp
mov
out
int
push
incl
mov
push
sbb
iret
out
orb
adc
inc
add
and
mov
or
cld
in
mov
dec
xchg
outsl
loopne
add
dec
jecxz
cmp
lahf
cmp
scas
jne
in
mov
or
lock
loop
adc
cltd
push
pop
xchg
cmp
lret
imul
fs
jg
aam
imul
or
xchg
pushf
movsl
fimull
xor
imul
jmp
outsl
push
mov
inc
xchg
xchg
xlat
xchg
cli
ds
push
push
xchg
push
xchg
or
mov
cmpsl
in
test
in
cmp
xchg
add
enter
mov
mov
cld
pop
dec
aas
push
add
mov
mov
adc
inc
jecxz
addb
mov
out
mov
dec
int3
popf
das
enter
mov
or
mov
jg
inc
xor
ja
xchg
mov
scas
cwtl
sbb
push
repz
xlat
mov
rolb
add
into
jo
addr16
mov
sub
icebp
push
jae
xlat
adc
bnd
aaa
adc
scas
pop
and
mov
andb
fldl
xlat
xor
push
in
in
out
pusha
loop
fwait
inc
mov
dec
js
sbb
icebp
mov
ret
fidivrs
shrb
arpl
mov
popf
pop
sbb
push
out
mov
int3
mov
mov
pop
lea
adc
inc
repnz
push
scas
mov
lods
and
in
in
shll
andl
jle
fcmove
leave
jge
out
dec
pusha
dec
xchg
int3
js
pop
out
mov
es
xorl
out
adc
sbb
cmc
jno
sub
insb
pop
std
cmpb
and
mov
cld
je
and
add
push
test
push
mov
sbb
lock
ret
outsl
mov
cmp
movq
lods
daa
adc
aaa
mov
fisubl
cmp
nop
jp
sub
or
adc
dec
jle
outsl
jge
int
cltd
adc
mov
mov
mov
outsb
pop
and
adc
xchg
cmpl
mov
mov
lahf
xor
sarb
mov
pop
cmp
fistpl
and
xchg
pop
jne
dec
sbb
out
mov
scas
fiadds
mov
mov
shlb
outsl
mov
in
out
pop
mov
inc
imul
movsb
xchg
xchg
inc
and
leave
xorl
lock
jnp
cmp
inc
dec
mov
or
insl
xlat
adc
sahf
mov
idivl
jnp
pop
xor
je,pn
popf
sahf
dec
ret
inc
xchg
and
adc
arpl
mov
lock
fs
xor
test
aaa
mov
xor
ja
push
ret
push
es
scas
inc
adc
fdivl
add
scas
movsl
fwait
loope
xor
push
int
mov
lcall
jle
les
pop
insb
push
lahf
rcr
cmp
ror
jge
pushf
add
outsb
pop
pop
mov
push
sbb
cmpsb
icebp
ljmp
sub
and
lds
fcomi
and
paddd
and
inc
mov
sbb
stos
clc
sub
enter
sub
sub
js
orb
adc
iret
jno
pushf
mov
outsb
sarb
sbb
sub
xor
xchg
repz
dec
movsl
aam
jnp
stos
mov
lods
push
inc
in
or
dec
shrb
ret
sub
push
and
rcrb
push
stos
insb
lds
inc
inc
stos
mov
mov
pusha
mov
sbbl
popa
xchg
mov
inc
pusha
and
jbe
in
loopne
test
cmp
xor
jnp
sbb
add
xchg
or
cmp
and
sbb
dec
cli
mov
sbb
vpsllw
fucomi
jle
sbb
or
mov
xor
mov
test
add
shl
push
adc
in
adc
ljmp
out
inc
add
xor
loop
cmp
adc
ljmp
push
push
push
loop
jge
rcl
xlat
enter
xchg
mov
sahf
testb
ljmp
movsl
push
cltd
lea
movsb
shrb
or
xchg
dec
cmp
inc
sbb
out
push
in
ret
stos
jl
into
xchg
lds
mov
lcall
fldt
xor
xchg
pushw
mov
imul
ja
push
xrelease
int
ljmp
sahf
inc
dec
mov
scas
mov
das
adcl
cmc
dec
and
fwait
adc
in
pop
mov
dec
mov
sbb
stc
mov
mov
inc
jo
xlat
and
in
pop
jae
in
pop
jmp
cmp
loop
iret
sti
xchg
cli
add
inc
pop
cmpsl
push
out
dec
sub
loop
dec
pop
nop
mov
xchg
add
addl
ds
cs
mov
and
and
add
lahf
fsubs
mov
pop
dec
jmp
cltd
sub
fnstenv
fildll
cmp
lds
enter
jne
pop
dec
adc
movsl
icebp
push
mov
test
xchg
inc
push
rcll
adc
cld
in
push
add
push
outsb
mov
jne
pop
and
mov
inc
jecxz
add
addr16
or
rcrb
shl
in
imul
or
xor
shlb
sahf
or
xchg
adc
push
ljmp
test
cltd
inc
dec
sub
out
sub
xor
xchg
scas
les
dec
xor
mov
subl
fidivs
lfs
xor
cmp
cmp
inc
out
inc
popa
push
mov
jnp
fmulp
mov
dec
in
es
xchg
mov
add
adc
or
sbb
mov
pushf
cmp
mov
repz
outsb
jp
mov
and
sub
add
add
pop
ror
dec
mov
mov
mov
mov
out
jle
insl
pop
sbb
cmp
shll
mov
mov
stos
lcall
push
push
jecxz
fsubrl
stos
mov
or
lret
dec
nop
mov
icebp
jo
outsl
xchg
and
scas
mov
cmc
loope
push
pop
dec
xchg
xor
mov
sbb
addl
fistps
push
pop
pushf
xor
xor
arpl
inc
movsl
mov
xchg
lods
push
or
inc
cmp
aam
push
inc
ds
lds
xchg
push
add
lds
das
cld
mov
notl
je
adc
ret
push
push
mov
int3
mov
fsubrl
pop
xchg
cmc
fisttpll
jb
xchg
jle
scas
mov
mov
and
cmp
add
stc
dec
xor
pop
aad
subl
sarl
fdivr
cli
fisubs
cs
mov
jg
pusha
aad
out
push
test
fmuls
dec
push
popf
or
ret
or
pop
cs
fldl
mov
insl
cmp
lahf
xor
mull
test
in
iret
popa
inc
cmp
xchg
lret
out
adc
sub
pop
add
push
push
stos
dec
inc
cmp
mov
and
sub
jo
and
sbb
aas
stc
and
sub
mov
sbb
push
ds
inc
aam
cmp
movsb
sbb
cmp
aad
outsb
cmpsl
scas
sub
mov
jb
mov
sahf
test
shlb
pop
inc
xchg
iret
pop
pop
and
fidivrl
out
imul
lock
out
dec
or
push
pop
jbe
ret
fildll
or
hlt
cmovs
in
pop
xorb
add
lods
adc
int
or
outsb
iret
jp
aas
imul
stos
sbb
ja
stos
jnp
call
aam
jno
addr16
mov
pop
dec
mov
in
sub
test
xor
andb
mov
dec
pop
lcall
xchg
imul
push
push
pop
jb
inc
shl
xchg
push
mov
and
add
enter
adc
addb
fwait
out
jb
insb
mov
cmp
ret
add
add
imul
fdivl
pop
ds
leave
gs
sub
int3
aad
mov
mov
xor
sub
cli
mov
and
ficoml
or
shlb
adc
push
ja
inc
aam
mov
xor
test
push
push
outsl
das
push
dec
mov
jp
fistl
hlt
add
test
test
mov
jae
jle
cmp
mov
iret
push
jg
sti
or
jge
push
movsb
jno
cmp
je
inc
adc
out
xor
inc
jmp
xlat
shl
push
and
stc
and
loop
fisttpl
adc
outsb
popa
jo
outsl
pop
lock
sub
and
xor
sbb
mov
jmp
or
out
add
push
lds
rcr
stc
adc
and
movsb
enter
sub
push
aaa
sub
fwait
sbb
add
ss
je
fidivs
mov
arpl
test
lret
loopne
mov
out
inc
pop
rcll
mov
movsb
test
mov
lods
ret
icebp
das
mov
pushf
cmp
sbb
iret
and
add
ret
push
xchg
add
orl
push
stc
enter
sub
dec
mov
sbb
btsl
cld
imul
mov
hlt
jecxz
sub
imul
int3
dec
add
fdiv
pusha
test
data16
out
popa
adc
mov
mov
ror
mov
cltd
insl
cmp
jg
cmp
scas
dec
insl
cmp
ret
andl
sub
inc
lds
pop
shl
into
mov
dec
pop
pop
mov
into
mov
les
lods
divb
jmp
jl
test
jge
pop
sbb
mov
cmpb
xchg
inc
decl
aaa
or
movb
cmp
jo
les
test
adc
outsl
mov
and
outsl
repz
xlat
lcall
jb
in
inc
test
jmp
xchg
lds
es
adc
add
stos
call
movsb
inc
es
mov
or
or
adc
mov
inc
imul
xor
sbb
stc
or
jge
dec
xor
aad
cmp
sahf
fxch
push
jbe
fs
sub
in
dec
popf
scas
xchg
sub
popf
in
imul
std
sahf
cmp
pushf
scas
cmp
xor
pop
xchg
jns
pop
out
repnz
push
xor
icebp
imul
adc
in
cmp
mov
push
test
fcmovu
mov
sbb
leave
jge
mov
pop
jge
jge
cmp
xchg
iret
rorb
fstl
js
jno
push
sub
out
enter
cmp
mov
jmp
sbb
loop
dec
lret
jle
stc
sbb
xchg
cmc
jne
inc
adc
xor
ffreep
xchg
imul
inc
rorb
pop
out
sub
lock
xor
cmp
or
jmp
mov
mov
inc
dec
lods
push
jae
out
xor
sub
scas
mov
push
addr16
arpl
xlat
imull
fdivrs
sbb
lea
pop
clc
movsl
jp
inc
or
dec
rorl
mov
xchg
push
into
cmc
and
iret
inc
cmp
out
fwait
test
icebp
xchg
jno
aas
inc
xchg
test
lcall
inc
or
repnz
insl
ja
mov
add
movsl
or
add
dec
sub
cs
add
sub
and
sub
iret
std
and
fistpl
in
scas
arpl
mov
sbb
pushf
repnz
mov
push
nop
pop
push
mov
filds
cmp
cli
or
arpl
mov
inc
shll
cltd
rcrl
in
mov
mov
jmp
pop
rclb
adc
adc
mov
mov
dec
insb
mov
lcall
std
push
jne
push
sub
xchg
push
pop
aaa
jmp
aas
pop
orb
fwait
std
dec
movsl
adc
sub
cs
mov
add
mov
and
ret
adc
insl
xor
mov
cltd
rclb
mov
cmp
pushf
test
ss
lret
scas
add
aad
mov
dec
or
shlb
jb
sub
dec
arpl
into
jno
sub
mov
fldt
lods
test
mov
jne
pop
cmp
push
mov
and
jo
scas
jecxz
push
imul
push
xchg
fiaddl
jns
dec
inc
lahf
sbb
pushf
inc
negb
sub
loop
push
enter
repnz
push
pop
sub
fstps
leave
arpl
loope
inc
dec
sahf
bnd
cmpsl
add
xor
dec
push
adc
and
sbb
pop
fucomip
movsl
sahf
mov
xchg
sbb
js
mov
ja
adc
stos
mov
rorb
test
fcmovne
pop
sbb
mov
movsb
ja
and
push
pusha
aas
test
push
jbe
insb
push
cmc
mov
mov
xor
add
jecxz
mov
fidivs
adc
movsl
test
addb
sbb
sbb
xchg
stos
enter
jp
inc
cmpsb
fisubrl
cmp
and
inc
jecxz
cmpsb
push
add
sub
jb
or
sbb
mov
jecxz
fadds
lahf
imul
mov
mov
mov
adc
lds
adc
jge
push
cwtl
jo
adc
jmp
mov
fidivrl
push
dec
adc
fs
sub
mov
sbb
addr16
roll
shlb
fstps
push
xchg
jl
push
ret
mov
xchg
inc
cmp
ja
fiadds
pop
pop
push
lret
jmp
push
in
push
lock
insl
sub
repnz
sub
inc
and
inc
xchg
xchg
sbb
out
push
xor
popa
subb
out
cmp
pop
push
fwait
imul
frstor
xchg
test
xorb
mov
mov
lods
sub
dec
xorl
mov
pop
mov
je
lcall
jne
fnstsw
sahf
in
dec
ss
rsm
cmp
push
rclb
in
pop
cmp
mov
pop
mov
and
or
sbb
repz
mov
or
sub
push
js
and
movsb
inc
mov
pop
sub
imul
mov
xor
pop
and
fnstsw
repz
push
mov
mov
push
xor
dec
pop
jge
push
mov
clc
jl
in
loope
pop
fisubl
lods
sbb
mov
insl
mov
hlt
mov
popa
jmp
jns
pop
xchg
sbb
inc
xorl
popa
cmp
cmpsl
insl
lea
sub
push
jge
rolb
stc
mov
ja
icebp
push
cmp
mov
and
jbe
cmpsl
mov
iret
pop
scas
bound
mov
stos
inc
push
xchg
int
call
ds
adc
fisttps
add
jne
sub
rolb
jo
jge
xlat
dec
push
idivl
add
shlb
adc
mov
fbstp
mul
lock
xchg
sbbb
adc
or
push
inc
sarb
outsb
cmc
fsts
or
iret
xchg
decb
js
scas
xchg
stos
fwait
mov
mov
add
push
pop
cmp
sarl
das
in
ret
add
cli
jmp
cmpsb
inc
bound
adc
inc
outsl
cwtl
or
push
test
inc
cmp
sub
xor
inc
xorb
jno
lret
xchg
xchg
jbe
jge
adc
push
pop
cmpsb
test
xor
daa
loope
call
orb
add
outsl
sub
xchg
jge
jmp
dec
push
into
xchg
stos
out
and
dec
adc
or
add
cmp
inc
mov
pushf
mov
and
jecxz
dec
inc
popf
xchg
nop
inc
dec
jbe
inc
shll
lcall
sbb
mov
arpl
cmpsl
out
or
call
and
mov
dec
ljmp
and
ja
jno
popf
xor
in
mov
int
or
mov
aaa
inc
jno
aam
ja
dec
lods
les
mov
rcl
sbbb
mov
stos
sbb
pop
adc
adc
and
iret
and
movsl
roll
cltd
cwtl
jle
mov
or
push
test
es
shll
lahf
outsb
std
sbb
imull
insb
jbe
loopne
mov
outsl
cwtl
xorl
shll
rorl
scas
das
or
adc
and
outsl
sbb
in
or
shlb
mov
jg
xor
scas
fadds
aam
xor
sbb
aas
dec
cs
pop
jne
leave
int3
inc
in
mov
mov
movb
stos
dec
les
fs
cs
dec
push
cmp
lds
jnp
jno
xlat
jns
inc
cltd
mov
inc
sarl
mov
dec
dec
cmc
xor
cmpb
scas
add
cmp
pop
push
add
icebp
mov
notl
mov
std
pop
mov
push
in
mov
fldl
ret
mov
stos
mov
das
outsb
data16
fimull
mov
dec
pop
rclb
xchg
shll
adc
repnz
pop
pop
into
in
std
xchg
pop
enter
jb
jne
xrelease
sub
mov
filds
pushf
cmpsl
add
dec
imul
or
inc
jno
push
pop
lret
mov
pop
iret
jl
sub
xchg
ret
jl
jecxz
lahf
frstor
cs
adc
aas
test
sahf
sbb
mov
in
pop
scas
je
ljmp
ret
mov
aad
outsb
enter
or
sub
loop
gs
sbb
in
fs
mov
and
pop
jns
imul
test
bound
fistpl
loope
cmp
inc
sbb
idiv
daa
or
outsl
mov
jo
push
mov
dec
dec
pop
rorb
cmc
cmp
loopne
das
inc
mov
jge
or
push
mulb
jmp
mov
cmpsl
subb
dec
out
mov
dec
scas
mov
xchg
add
test
sbb
and
xor
xchg
xor
sbb
sbb
add
cwtl
sbb
imull
cli
xor
leave
pop
mov
js
sub
fildl
adcl
xchg
in
pop
push
aad
xchg
shrb
nop
or
xor
dec
sbb
in
loope
in
sbb
loope
mov
dec
cmpsl
xor
pop
dec
lods
jno
outsb
cli
stc
push
mov
mov
movsb
push
divl
int3
sbb
xchg
or
mov
mov
jle
and
mov
shrl
out
jae
xchg
add
lahf
mul
mov
jg
dec
sub
lret
sahf
pop
push
aam
xchg
jno
pop
xor
jne
fcomps
int3
imul
outsb
and
sbb
or
mov
lahf
daa
in
pop
jmp
into
or
mov
jl
add
jp
repz
je
out
insl
jb
mulb
ret
jl
jb
daa
adc
mov
cmp
leave
pushf
pusha
iret
push
adc
scas
jbe
dec
mov
int
insb
push
push
xor
pop
and
cli
adc
sub
or
ljmp
test
loop
outsl
in
push
push
outsb
mov
xor
push
rorl
je
stc
or
outsl
push
jg
adc
jo
cmp
push
cld
jns
add
sbb
sub
enter
mov
mov
enter
popf
xchg
push
fisubs
mov
repz
mov
aad
cmp
fcompl
push
das
sub
adc
adc
and
mov
adc
push
pop
repz
lret
jmp
jb
push
adc
lcall
pop
cmpsb
out
imul
adc
dec
jmp
push
popf
inc
push
push
les
mov
jae
inc
cmpsl
data16
mov
leave
pop
sbb
lods
jne
mov
hlt
mov
mov
jno
sbb
int
xchg
or
lcall
lds
repnz
insl
aas
cmp
scas
cmp
fucomp
arpl
test
jo
dec
inc
push
ljmp
sub
or
and
test
out
mov
add
mov
lahf
decl
rolb
dec
mov
fcmovu
sub
sbbl
jbe
pushf
imul
in
mov
or
adc
jmp
cmp
lahf
jnp
mov
jno
dec
inc
pop
jb
sub
es
mov
js
out
pop
aad
mov
push
push
in
adc
nop
fldt
push
sbb
xor
xor
cld
jns
pop
int3
gs
or
mov
ljmp
notb
mov
push
and
xchg
fs
testb
movsb
dec
rorb
mov
mov
fstpl
sbb
cmp
movhps
mov
dec
mov
repz
and
adc
jecxz
mov
test
or
neg
rol
sub
add
mov
mov
jb
adc
xor
adc
push
test
and
gs
or
cmp
lea
xor
test
in
mov
insb
ret
std
jp
aas
sub
inc
jae
test
adc
scas
mov
rcrb
stc
mov
sub
inc
scas
stos
call
idivl
xor
add
mov
xchg
sti
aaa
jg
loopne
and
xchg
popa
cmp
sbb
pop
sbb
lock
xchg
shlb
jno
jbe
sub
lds
and
std
mov
xlat
iret
push
cmc
push
sbb
cmp
cmp
outsb
test
in
jae
aas
mov
cld
outsb
sub
test
or
push
jbe
lods
cwtl
movsl
add
adc
sbb
cmp
imul
mov
sbb
test
mov
fisttpll
dec
scas
les
idivl
mov
lret
shll
dec
cmp
aaa
adc
mov
lock
loopne
mov
int
adc
je
in
gs
sbb
push
sbb
or
lods
jecxz
loope
scas
in
test
mov
imul
fistpll
xchg
pop
cld
pop
std
fisubrs
pop
xor
out
aam
jmp
jle
cmpsb
sub
cmpsb
jge
into
mov
adc
mov
cltd
xor
and
jnp
pop
sub
jecxz
mov
xor
loopne
icebp
pop
xchg
inc
movsl
cmp
dec
call
cmp
imul
shrb
enter
push
xor
sub
xchg
pop
subl
movb
mov
flds
pop
adc
mov
int
lret
push
test
fldt
cmp
xchg
out
sti
inc
lods
clc
dec
add
inc
sbb
ja
lds
or
cltd
cltd
sbb
outsb
jle
leave
sahf
testb
push
xlat
cmp
fdivr
adc
push
push
adcb
outsb
mov
pop
cmp
lcall
mov
xlat
cmp
sbb
push
rcrb
fisubrs
dec
inc
mov
xor
loop
shlb
stos
ss
jno
loopne
cmc
mov
hlt
arpl
and
inc
gs
push
sti
fdivp
mov
pop
lock
pop
dec
adcl
cmp
outsl
sti
mov
jmp
xor
jge
dec
or
or
jae
call
or
xchg
pop
cli
dec
xor
inc
aas
jb
les
inc
xchg
pushf
jge
int3
or
nop
jae
push
stc
xchg
lock
sub
mov
or
pop
ja
test
push
mov
fisttps
lcall
cwtl
mov
jne
add
aas
test
push
repz
mov
dec
adc
cmp
mov
mov
jl
mov
into
push
mov
orb
leave
je
ror
pop
test
sar
repz
lahf
inc
shrl
enter
mov
test
jae
sub
adc
bound
jo
sti
cmc
lock
pop
or
fstps
jne
push
jb
jge
gs
or
inc
dec
enter
jge
and
and
xchg
push
addr16
in
jnp
xor
icebp
xchg
imul
test
popa
dec
or
shrb
imul
or
sbb
imull
stos
jg
cmp
in
mov
push
push
dec
jns
cmp
std
cwtl
jae
push
cltd
mov
fbld
ds
lret
jecxz
aas
pop
icebp
mov
fstpt
inc
repz
mov
mov
cmp
out
data16
jmp
mov
test
push
fstpl
iret
fmull
stc
sub
aad
subb
shl
jge
fwait
cmovp
int3
ljmp
enter
loop
mov
dec
jbe
and
movsl
sbb
ficomps
or
sub
test
aam
aad
int
jbe
sahf
sahf
inc
lods
out
cmp
adc
cmp
mov
mov
pop
fdivl
mov
cmp
push
cmpsb
in
into
sbb
in
dec
scas
adc
xchg
xor
fldpi
sbb
and
xchg
outsb
ficompl
fcmovbe
xor
scas
lods
mov
push
xchg
mov
add
pop
mov
dec
fsubrs
mov
stos
ja
or
scas
dec
push
mov
shrl
out
xchg
stos
push
or
xchg
mov
sub
enter
out
mov
pop
pop
push
lret
dec
scas
xor
inc
mov
aad
push
fdivrs
inc
scas
aad
dec
cmc
in
or
push
cmpsb
jp
pop
adcb
test
idivl
aaa
mov
inc
inc
movsl
push
xchg
cli
mov
jecxz
mov
adc
xchg
pop
xor
aaa
add
ret
movd
movsb
aas
dec
jmp
dec
fisubrs
mov
shl
adc
lods
call
outsb
and
lcall
aaa
xchg
and
cmp
mov
mov
and
push
inc
fiaddl
lret
into
es
jg
dec
xor
sub
test
or
popa
adc
in
ds
movsb
push
push
mov
and
repnz
insl
mull
cwtl
and
add
push
mov
insl
sbb
cmp
xchg
sbb
in
push
les
xchg
and
adc
les
mov
punpckhwd
lock
out
bound
aam
mov
mov
fisubrl
ret
jge
cmc
dec
cmp
push
lahf
cmp
jns
mov
aaa
pushf
add
adc
mov
xor
cwtl
mov
mov
xchg
mov
xor
dec
test
jmp
sahf
add
jb
lea
adc
fstpt
pusha
enter
xchg
arpl
in
push
cmp
fdivs
fstp
call
xchg
pop
push
je
lret
mov
pop
add
aaa
push
jmp
jl
or
in
and
leave
xor
scas
cs
push
or
add
or
lods
loope
icebp
mov
fld
dec
loop
outsl
pop
xchg
pop
xchg
rclb
pusha
pop
shlb
xchg
out
jmp
fimull
and
shrl
cmc
out
iret
xchg
fdivl
stc
fwait
dec
cltd
ror
out
bound
xchg
inc
fucom
fsts
mov
inc
pop
dec
clc
ret
adc
lret
mov
iret
es
mov
iret
andl
mov
xor
aaa
jmp
std
jbe
sbbb
push
jb
push
pop
test
enter
inc
jmp
xor
dec
inc
push
pusha
mov
cld
mov
pushf
dec
cmc
inc
pop
cmpsl
mov
adc
in
loop
fsubs
into
and
movsl
push
lahf
pop
jno
mov
stos
mov
call
cwtl
outsb
aaa
push
xchg
stc
xor
push
mov
adc
cmp
jg
fildll
fsubrs
lcall
inc
jmp
inc
rcr
cmc
sub
or
ret
fst
fldl
mov
scas
jle
xor
xchg
lret
pop
lds
movsl
jg
popf
or
int3
cld
jno
xor
dec
cmp
rcl
pop
push
add
insl
ficomps
dec
or
ja
lret
xchg
insl
mov
aas
dec
push
cld
or
sbb
test
pop
mov
or
lock
into
fidivrs
push
mov
sti
jbe
lret
mov
frstor
xor
adc
sub
sbbl
push
rcll
mov
stos
mov
repz
rorl
loopne
jb
add
jg
cld
cli
fs
or
popf
sub
jmp
aam
jno
xchg
push
cltd
mov
negl
cmp
lret
out
cmp
inc
mov
mov
jmp
mov
add
push
or
sti
jne
xor
shlb
popa
or
mov
adc
add
fwait
or
jbe
adc
leave
lret
xchg
ret
mov
push
roll
test
adc
rcr
xchg
push
mov
inc
cmp
or
sahf
lcall
add
xchg
adc
sub
test
mulb
cmp
test
push
mov
inc
mov
cmp
adc
push
nop
pop
stos
push
cmp
ja
or
popf
inc
jg
aaa
lds
jno
stos
xchg
push
fwait
jl
or
repz
lods
push
das
shlb
mov
mov
mov
scas
mov
push
inc
andl
je
lcall
pop
stc
push
mov
sbb
xor
mov
and
or
xor
push
lock
cmp
sbb
mov
sub
sti
sbb
leave
inc
jno
or
mul
imulb
xchg
mov
ret
dec
mov
loopne
or
mov
inc
inc
sub
test
inc
mov
pop
adc
fnstcw
and
adc
dec
jg
dec
pop
enter
pop
jno
mov
bnd
daa
repnz
and
mov
sub
in
lret
je
lds
shll
push
or
fisttpll
xor
lods
fldenv
in
outsl
jge
or
stos
pop
cli
test
or
sub
mov
jecxz
xor
aam
scas
jbe
shlb
mov
outsb
mov
and
ja
fwait
add
jmp
mov
lahf
pop
pop
shll
mov
hlt
jae
jmp
call
jge
mov
movsl
movl
popf
push
or
dec
jmp
std
adc
iret
addr16
out
pop
jecxz
jmp
mov
push
cwtl
incl
pop
push
lods
mov
or
or
xor
int
mov
sub
test
inc
push
cs
cmp
mov
in
cmp
push
test
pop
dec
pop
push
lcall
and
es
push
dec
scas
icebp
and
cmp
push
push
into
adc
sti
jnp
iret
loopne
jb
mov
jbe
aas
in
sub
push
xchg
cmpsl
jno
cld
push
sar
and
clc
sub
xor
popa
addr16
pop
jb
and
insl
repnz
rorb
test
nop
pop
aam
loope
nop
inc
push
mov
rcrb
out
popf
or
stc
in
add
add
inc
std
out
pop
and
mov
cltd
jl
cmp
repz
icebp
pop
int
jp
adc
lods
or
fwait
cmp
hlt
sbb
outsb
std
movsl
ds
lahf
popa
sbb
ret
xchg
push
pop
xchg
lds
sbb
dec
inc
sbbb
inc
aam
fadds
stos
mov
adc
repz
repz
inc
mov
ss
mov
mov
cmp
cmp
js
imul
jbe
in
mov
inc
pop
jns
cltd
imul
dec
imul
incl
sub
shrl
adc
cltd
inc
add
in
test
jmp
in
fisttpll
movsl
jmp
outsl
aaa
cmp
inc
pop
jg
jne
lock
push
push
inc
nop
pop
push
jle
push
mov
icebp
aaa
push
xor
adc
mov
popa
mov
ret
test
mov
cmpsl
test
movsb
push
lds
or
aam
add
cmc
shl
bound
lock
push
inc
ja
mov
lret
icebp
mov
cmp
mov
push
or
dec
clc
test
clc
test
xor
push
cld
jg
xorb
sbbl
call
and
jle
ss
push
repz
dec
sbb
cmc
mov
xor
rolb
pop
sbb
and
adc
adc
jns
ret
testb
adc
push
adc
inc
xchg
jp
mov
ja
das
mov
inc
es
mov
ds
js
cmp
addr16
lods
sbb
push
push
and
xchg
dec
faddp
cmp
mov
iret
inc
jecxz
in
fcmovnb
xchg
inc
push
push
lea
push
movb
sbb
fs
mov
xor
inc
or
sti
mov
clc
lock
or
cli
add
and
andl
xchg
fimuls
scas
scas
cmp
stc
push
mov
push
movsl
test
lea
jno
sbb
mov
arpl
fists
dec
les
xor
fdivrl
int
cmpsl
arpl
mov
sbb
and
pop
inc
icebp
sbbl
bound
in
xchg
pop
rcll
in
arpl
mov
test
pop
add
jo
sub
mov
xchg
mov
xor
aaa
inc
push
dec
cmpsb
mov
push
ss
sbb
sbb
mov
js
cmp
lock
repnz
and
jne
sarb
or
or
sbb
cmp
sub
arpl
fwait
ret
push
out
dec
or
mov
mov
cltd
mov
mov
mull
xchg
leave
lods
jb
movsb
mov
jnp
pop
jp
enter
jecxz
mov
ficomps
cmpsb
add
mov
pop
push
lods
aaa
push
pushf
mov
fnsave
movsb
out
jp
jecxz
pop
xchg
testl
in
lcall
add
and
cmpsl
inc
stos
mov
mov
and
sahf
divl
ljmp
mull
or
arpl
sahf
imul
sub
inc
icebp
insb
pop
cli
jle
gs
arpl
imul
sub
sbb
jbe
sbb
push
lcall
add
cmpsb
jmp
aam
add
mov
mov
cld
adc
ljmp
pusha
imulb
out
call
pop
in
add
in
in
jp
arpl
call
jne
push
mov
pop
xlat
loope
std
lret
push
fsubs
add
inc
sbb
imul
mov
add
jmp
cmc
movsl
mov
xorb
int3
inc
mov
sub
iret
bndldx
shrb
mov
push
jnp
sbb
andl
repz
sarl
push
sub
sar
jl
popf
addr16
inc
out
cmpsl
sbb
roll
out
and
or
negl
mov
adc
sub
push
and
mov
or
sbb
dec
and
hlt
fistl
push
add
flds
jo
push
jnp
xchg
mov
fnsave
out
aam
cld
or
add
and
shlb
cmpsl
push
fcmovb
or
pop
dec
add
xchg
push
lock
xchg
cs
rcrl
sti
or
xchg
xlat
sub
ss
pop
dec
ja
in
pop
mov
out
dec
dec
adcb
rorb
jmp
pop
push
ljmp
or
jae
hlt
stos
jo
inc
sahf
and
mov
cmp
out
mov
nop
dec
jle
dec
inc
jne
jnp
fidivs
stc
mov
leave
js
push
fs
je
xlat
push
divb
fcomps
inc
das
iret
fistps
bound
ss
hlt
fisubrs
scas
jg
mov
fbstp
or
ds
addr16
fnsave
mov
fiadds
sbb
push
sub
aad
sub
js
xorb
mov
scas
push
es
movb
cmp
or
mov
pop
xor
cmpsl
cmpsb
add
ftst
and
dec
js
adc
sub
and
outsb
xor
mov
imul
call
push
mov
xchg
push
arpl
sub
xor
imull
data16
xchg
mov
jae
incl
xchg
xchg
hlt
pop
dec
div
mov
jne
and
fldl
ss
sub
inc
jp
inc
jle
push
inc
xchg
sub
mov
pop
les
daa
pop
sub
jnp
xor
jp
cmp
sub
mov
shll
xor
imul
js
call
dec
leave
dec
sub
dec
mov
add
dec
jp
data16
sub
mov
cmpsb
sub
cmp
mov
scas
sbb
mov
das
out
test
test
sub
pop
cmp
inc
inc
jmp
test
mov
stos
inc
imul
lahf
or
outsb
sbbl
imul
mov
push
dec
fisubs
push
or
out
mov
aad
dec
addr16
cmp
dec
push
push
pop
addl
pop
subb
or
std
aaa
sbb
pop
jae
xor
xchg
popa
pop
inc
cmp
outsl
dec
push
pop
push
mov
fstl
inc
movsw
pop
xchg
lea
sub
adcl
bound
mov
or
mov
inc
repz
mov
push
mov
xor
and
cli
insb
pop
popf
xchg
movl
push
inc
cmpsl
inc
fcoms
sbb
repz
jmp
mov
mov
mov
sti
cmpsl
dec
test
adc
ljmp
jecxz
arpl
jecxz
shlb
aad
stc
fdiv
mov
rorb
jns
decb
mov
in
add
stc
dec
adc
leave
pop
stos
sub
pop
jne
xor
pop
push
xlat
add
mov
sbb
outsb
fiaddl
cmp
lret
icebp
xchg
cmpsb
stc
mov
arpl
arpl
lds
adc
repnz
rcrl
mov
popf
lret
mov
pop
mov
xor
dec
pop
cmp
push
mov
daa
arpl
pop
and
dec
cmpsb
lods
and
test
insl
scas
imul
mov
lcall
mov
xchg
popf
shl
out
outsb
sbb
insl
and
xchg
push
out
test
nop
xor
xor
mov
lods
pusha
mov
sbb
movsb
in
push
sbb
pop
mov
and
add
subb
ja
sub
cmp
stc
sahf
insb
mov
lcall
xor
int3
cmp
xchg
pop
fbstp
sub
xchg
pop
insb
jge
aad
and
ja
pop
cltd
xor
cmp
mov
outsl
or
es
fstl
icebp
imull
sti
push
test
repz
sti
adc
and
test
lahf
xorb
scas
dec
outsl
lret
pop
pop
add
jge
rol
mov
mov
mov
fcoms
fsqrt
jns
sub
jle
in
and
cmc
ss
jmp
clc
in
inc
insb
xor
add
mov
outsb
ja
je
shrb
lcall
pop
add
mov
mov
outsl
push
dec
dec
int
jne
aas
fistl
cmp
push
or
mov
inc
cmp
or
lahf
in
pop
push
sbb
jle
push
adc
mov
inc
push
add
cmp
push
fistl
jg
daa
xlat
call
jmp
sahf
sbb
out
dec
xchg
faddl
sbb
add
add
or
add
dec
xor
mov
add
push
testl
jb
add
addb
mov
shl
dec
push
movsb
lock
dec
imul
sarl
out
outsb
xchg
sarl
decl
les
cmp
add
pushf
inc
lcall
dec
mov
xor
fdivrs
mov
add
lods
or
sti
rorl
jecxz
push
xchg
popa
mov
add
mov
pushf
inc
lret
sub
scas
push
fldt
outsl
mov
aaa
jo
enter
enter
pop
inc
mov
adc
scas
xchg
sub
popl
mov
add
mov
push
gs
mov
outsl
or
out
fstpl
out
adc
mov
add
lea
xor
jbe
inc
jmp
int3
dec
mov
mov
cmp
add
and
inc
les
out
sub
pusha
mov
push
mov
mov
sub
repnz
psubusw
push
inc
arpl
sub
push
and
in
or
push
js
jl
push
jbe
jb
fdivr
add
push
and
mov
bound
iret
mov
jae
aam
mov
outsl
xchg
dec
cmp
fldt
xchg
fwait
ja
push
popf
xchg
lret
roll
orb
pop
mov
jns
xchg
pop
movsb
outsb
cli
pop
mov
mov
mov
cmpsl
das
xchg
mov
aad
or
inc
xor
mov
fwait
mov
jp
and
orb
das
insl
jb
test
mov
es
sbb
push
cmpsb
das
push
pop
lods
clc
jge
cmc
sbb
stos
nop
jle
in
sub
or
mov
cmp
jne
inc
or
push
imul
iret
sub
hlt
cmc
xchg
jb
or
fildl
out
aam
rorb
popa
jmp
mov
pop
cli
jg
aas
scas
addr16
out
cmp
insb
add
fwait
pop
inc
rcll
out
mov
test
inc
cmp
repz
imul
adc
mov
sbb
pop
mov
int3
mov
push
mov
and
or
rclb
inc
pop
adc
clc
das
jns
imul
clc
mov
adc
cltd
mov
sbb
and
lods
dec
adc
add
fwait
pop
push
lcall
or
lock
bound
imul
sbb
push
insb
sub
xchg
les
xchg
into
cmp
mov
mov
stos
push
adc
dec
fistl
les
inc
inc
push
mov
aaa
mov
mov
xor
inc
mov
sbb
adc
dec
rclb
stos
sbb
in
popf
mov
fdiv
pop
das
xor
dec
fnstenv
movsl
not
pop
mov
les
fucomp
lods
sbb
add
out
mov
ret
mov
cmp
repnz
ds
jno
lret
push
cmpsl
cmp
iret
jecxz
cmpsb
or
mov
jl
xchg
mov
mov
shrb
push
mov
or
fisubrl
mov
jnp
adc
iret
dec
lods
orb
mov
xlat
mov
in
sbb
dec
mov
dec
xchg
push
popf
stos
iret
stos
leave
shlb
cltd
jg
adc
in
mov
xorl
dec
jecxz
shll
shl
fdivrs
lods
jecxz
movsl
mov
dec
lcall
mov
xlat
mov
or
dec
lcall
fisubrs
cmp
arpl
rclb
push
xchg
sub
add
cmc
es
stos
inc
jne
pop
mov
push
jne
ds
pop
loop
loopne
pop
imul
fsubrl
jge
aaa
gs
cs
mov
out
lea
push
stc
insb
repz
repnz
jle
and
and
out
jle
sar
movswl
movsb
and
sbbb
mov
mov
xor
lods
cmpb
out
data16
cwtl
pop
lcall
cmp
dec
push
idivb
loopne
cs
pusha
loop
jle
repz
mov
pop
mov
nop
mov
ret
aam
gs
jns
xor
lods
sub
inc
and
inc
call
enter
push
mov
fimuls
cmpsl
sbb
jp
cmp
cld
push
lea
call
xor
fcmovnu
cmp
fdivrs
loop
lods
or
and
aad
sti
and
mov
ret
ljmp
addr16
sub
cltd
icebp
pop
scas
mov
pop
arpl
and
test
repnz
add
mov
in
pop
cld
xchg
pop
decb
arpl
cs
std
aas
clc
in
mov
xlat
sarl
mov
jle
jmp
les
dec
movsb
rorb
bound
sbb
xor
and
std
subl
hlt
adc
fists
or
push
add
add
jecxz
sbb
je
jl
jno
aam
pop
test
aaa
jg
mov
pop
push
push
stc
jg
mov
loop
lock
int
divl
push
jae
sub
xchg
mov
and
shlb
push
mov
adc
lods
mov
push
xor
cmp
lds
add
and
push
pop
xor
imul
cmpsb
xchg
add
push
xchg
push
and
rcll
mov
subb
sbb
pop
cmp
addr16
insb
aas
test
dec
lods
hlt
in
and
int
lcall
das
lock
insl
sub
cmp
mov
ja
inc
sbb
pop
push
out
lock
sahf
and
stos
cmpsb
or
shlb
int3
enter
lods
jne
or
cltd
mov
mov
das
notb
push
dec
int3
jbe
iret
mov
xor
push
xor
ljmp
aas
jns
bound
nop
inc
mov
jmp
shlb
push
gs
sub
inc
std
stos
sub
rcr
aas
out
sbb
pusha
imul
adc
inc
cmp
je
inc
sahf
cltd
inc
or
stos
loop
jb
jp
pavgw
xchg
jp
sar
int3
fs
jmp
jp
mov
sub
xor
test
enter
pop
es
das
dec
cmpsb
mov
sub
dec
sbb
inc
shll
outsb
sbb
push
dec
dec
shll
int
loop
stos
mov
rcl
push
ffreep
loope
inc
fsubs
push
jb
jns
sbb
adc
pop
ljmp
push
xchg
or
push
mov
sahf
orb
xor
jne
cmc
out
xor
xor
fs
out
sbb
cmpsb
stos
dec
cltd
push
push
adc
jnp
flds
fsubs
fsubrl
fstpl
and
pop
adc
fistl
push
aaa
mov
nop
adc
lret
cltd
sbbl
cwtl
nop
stos
mov
es
insl
popf
cltd
rsqrtps
ret
dec
dec
test
sub
rcrb
pusha
das
orb
xchg
jecxz
das
or
add
clc
xor
or
sahf
sbb
mov
dec
clc
in
stc
jge
sahf
cmp
mov
sti
pop
pop
ret
stos
xchg
ret
mov
xchg
mov
push
inc
dec
les
stos
pop
fucom
popa
out
leave
lret
push
nop
mov
push
hlt
out
or
xor
fsubr
sub
mov
dec
lea
lret
aad
xor
pop
inc
cmp
sub
es
push
mov
dec
mov
inc
dec
dec
cmp
or
push
aam
or
faddl
lods
aad
repz
xchg
push
mov
ret
into
jns
imul
daa
adc
repz
imul
in
addr16
idiv
and
jae
add
std
push
popf
add
decl
jge
out
xchg
or
aas
ljmp
sbb
dec
dec
mov
jg
mov
stc
inc
cmpsb
les
mov
into
or
outsl
repnz
arpl
ss
sbb
xor
add
mov
popa
arpl
negb
mov
je
in
lock
inc
dec
sti
mov
fs
rcr
pop
sbb
jae
dec
lahf
mov
rcll
add
daa
in
out
mov
push
stos
mov
out
loop
push
push
pop
cmpsl
scas
dec
fisubl
adc
jnp
dec
push
lods
mov
cmpl
popa
or
ja
loop
sbb
nop
xor
push
lds
pop
pop
push
in
and
orl
fdivr
mov
or
cmp
icebp
or
loopne
insb
sub
jmp
pop
pop
xchg
js
out
cmp
pop
sbb
pop
movsl
sbb
pop
adc
fwait
sub
fldt
popf
inc
test
js
cmp
std
mov
in
adc
add
or
adc
loopne
mov
repz
mov
adc
jmp
movsl
insl
mov
pop
push
mov
pusha
dec
mov
or
inc
imulb
test
ja
adc
mov
mov
sub
mov
and
stos
into
movlps
push
xor
xchg
and
push
rep
jle
jae
mov
lahf
push
cmp
lret
push
lods
or
jb
lcall
mov
in
or
test
pop
sbb
mov
je
mov
lcall
gs
rorb
repz
fnstenv
test
adc
xor
fstl
jns
xchg
xchg
jnp
jp
scas
sbb
out
ja
and
mov
popa
out
sbb
add
and
add
dec
push
aas
xchg
dec
push
cmp
repz
sti
loope
clc
sub
call
es
mov
jae
add
mov
cs
adc
push
jne
loope
pop
aas
push
add
sbb
es
pop
fwait
mov
out
int
aam
shr
stc
inc
fsubp
ljmp
lcall
je
aaa
dec
loopne
xor
and
or
mov
es
dec
jbe
sub
push
cmpsl
fmull
sbb
mov
cmpsl
inc
pop
sub
pop
lods
fcmovnu
mov
bound
scas
mov
pop
daa
aam
jae
xchg
ret
in
cmp
mov
inc
adc
and
add
xchg
or
mov
cmp
or
pop
xor
sub
pop
cwtl
or
xor
lcall
xor
cwtl
sti
add
and
enter
mov
xor
or
push
pop
ss
imul
rorl
stos
idivl
push
pop
and
mov
xchg
ja
or
fcoms
pop
mov
sarl
push
jne
mov
pop
jmp
add
test
lds
xchg
repz
add
and
adc
dec
in
lahf
and
out
sbb
push
js
dec
fistl
in
pop
jo
dec
ja
fbstp
mov
enter
push
push
or
cmp
inc
enter
or
mov
popa
add
cmp
call
cld
test
and
leave
mov
inc
sahf
iret
popf
popa
iret
inc
xchg
push
movsl
ret
cmp
mov
push
roll
cmpsl
lods
mov
and
sahf
cs
pop
dec
mov
jecxz
scas
cli
outsl
or
daa
mov
gs
and
into
mov
push
cmp
movsb
mov
or
and
push
imulb
stos
xchg
push
add
test
mov
aam
sub
mov
ja
pop
out
xor
mov
aam
iret
xorl
fs
shll
jl
inc
push
jno
push
sub
cmp
pop
daa
jnp
cli
pop
aad
ret
je
mov
sbb
sub
dec
xchg
pop
sub
pop
cld
das
jo
aas
insb
cli
mov
inc
lcall
pop
push
pop
popa
push
jmp
ret
fisttpl
add
xor
aas
xor
xor
cmpsl
es
and
sbb
fstl
jnp
sbb
mov
pop
scas
inc
mov
lods
sub
cld
or
sub
outsb
out
cmp
inc
add
xchg
pop
das
leave
cmc
movsl
fimuls
fisttpl
jbe
stos
pop
xchg
cmp
dec
mov
jmp
jae
cmp
pop
in
jle
aaa
mov
sbb
push
into
inc
stc
push
lea
jne
push
insb
loope
cwtl
mov
stos
ret
add
mov
and
mulb
outsl
cmp
les
xor
cld
xchg
dec
nop
cmpb
aaa
push
and
sub
lods
dec
jno
adc
mov
lahf
cwtl
movsb
out
jne
dec
js
sub
inc
or
add
mov
mov
pop
sub
aam
mov
sti
lods
sbb
ret
pop
pop
cli
jne
std
push
data16
xor
or
fs
sub
fld1
rcrb
mov
dec
jmp
xorb
mov
and
xchg
adc
dec
pop
xchg
mov
lods
shrl
movsl
mov
mov
mov
insl
sbbb
test
std
mov
adc
inc
inc
jbe
imul
movsb
stc
fiaddl
mov
pop
std
pushl
fsub
pop
fildl
pop
sub
mov
or
loop
lods
dec
out
pushf
mov
jl
mov
and
movsb
movaps
inc
mov
aaa
mov
push
jb
out
roll
jmp
push
mov
fists
mov
lret
ljmp
and
push
out
dec
push
push
aam
sbb
icebp
pusha
lods
or
mov
in
divb
aam
push
icebp
pop
notl
fwait
and
shlb
xchg
cmp
mov
fs
jbe
jle
sbb
xor
sbb
inc
pop
std
jae
xor
les
inc
sbb
out
mov
fldcw
inc
outsl
outsb
insl
pop
cmp
xchg
sub
jo
cwtl
outsl
orl
mov
lds
xchg
cmp
test
sub
inc
fsubrl
ja
rcl
add
insl
mov
sub
pop
and
cltd
sbb
fucomi
arpl
aad
add
push
je
arpl
lret
ss
mov
jns
jmp
imul
arpl
inc
xchg
inc
push
adc
in
scas
fwait
stos
sub
fwait
pop
jecxz
hlt
push
testl
or
pop
fs
rol
cmpsl
mov
bound
dec
mov
lods
jmp
xor
jl
jle
push
aad
jle
stos
cmp
jg
test
xchg
push
xchg
int
mov
ljmp
jl
and
fwait
cltd
pop
ljmp
sbb
xor
lods
inc
push
cmpsl
mov
mov
mov
mov
push
xchg
aas
xchg
sbb
cmp
aad
xchg
or
fldenv
jmp
ljmp
sbb
jmp
sbb
xor
mov
jmp
xor
xchg
sarb
mov
cmp
ficoml
push
sarl
imul
mov
test
dec
ss
lcall
mov
mov
mov
push
loopne
icebp
inc
pop
insb
maskmovq
imull
push
push
negb
push
push
mov
adc
push
movb
in
and
bound
mov
sahf
add
push
arpl
cmp
xor
shll
fisttpll
hlt
add
and
xchg
lret
xor
sub
insb
cli
not
and
pushf
push
lock
sub
mov
cltd
pop
int3
imul
into
inc
scas
jae
xchg
pop
das
and
mov
xor
push
mov
adc
test
loopne
cltd
cmp
dec
loop
test
mov
add
scas
sahf
cli
inc
mov
mov
pop
jae
push
sub
mov
cmc
gs
push
mov
or
stos
icebp
mov
cmp
cmp
mov
stc
jl
pop
pop
das
aam
xlat
lock
sub
sahf
iret
sahf
and
fldenv
jnp
push
dec
repz
pop
jle
dec
data16
in
out
xor
add
lret
jnp
mov
arpl
sbb
icebp
sub
jns
shll
das
cmc
mov
mov
das
mov
xchg
inc
jb
pusha
aaa
jne
fidivl
push
mov
and
das
jge
or
add
rolb
pusha
adc
iret
es
add
or
sub
jl,pt
push
mov
int
sub
dec
xchg
pop
shlb
jp
and
jnp
sbb
sti
xor
mov
flds
adc
sar
mov
sub
mov
inc
and
jmp
call
inc
mov
add
movsl
jge
mov
into
xor
loop
dec
cmp
mov
xor
sub
push
dec
ja
xchg
mov
jcxz
jo
outsl
pop
and
out
pop
cmpsl
mov
ret
mov
js
push
cld
lret
cmp
popf
mov
ficoml
pop
leave
xor
mov
lods
dec
ss
es
insb
popf
icebp
in
xchg
fisubrl
pop
loop
in
hlt
movsb
mov
aad
data16
pop
jge
mov
mov
out
aas
stos
dec
add
add
subl
dec
out
fwait
jmp
jne
int3
pop
mov
add
cmp
ret
xor
addl
testl
imul
xchg
dec
inc
cmp
scas
pop
insl
xchg
mov
xor
mov
push
jecxz
add
outsb
jb
jmp
xchg
sub
loope
out
pop
fsqrt
sahf
jnp
or
das
fwait
sarb
inc
jnp
stc
dec
in
jecxz
dec
mov
inc
sbb
push
sahf
cmc
inc
add
lea
cmpsb
mov
aam
in
cmp
rolb
leave
xchg
add
or
push
das
in
jp
dec
mov
push
xchg
xchg
nop
pop
sub
jmp
mov
mov
dec
pop
push
mov
test
ljmp
jno
and
in
add
pop
xor
or
pop
mov
out
xor
pushf
js
pop
aad
maskmovq
idivl
jg
stc
pushl
loope
push
jp
sbbl
sbb
jp
cmp
add
xlat
push
ret
lods
out
dec
adc
jmp
sub
cmpsb
rcll
add
dec
sub
out
lahf
mov
cwtl
jbe
movsl
mov
jmp
jo
pop
sahf
arpl
mov
pop
aaa
inc
sbb
dec
test
adc
inc
popf
push
cmp
inc
sti
mov
dec
shrb
fsubs
loopne
inc
aad
jmp
fstpt
faddl
mov
jae
sahf
add
cli
inc
ret
mov
mov
rcrl
push
leave
mov
fisubl
call
sub
int3
sub
lret
fwait
cmpsb
fwait
mov
mov
pop
ret
mov
xchg
fisubs
xchg
dec
hlt
xchg
mov
xchg
mov
aaa
aam
jo
mov
lret
je
or
test
ja
xorb
bound
in
mov
jle
hlt
int3
cmp
pop
loopne
lock
jp
jne
dec
dec
and
sti
das
sub
or
sub
test
imul
inc
jbe
mov
inc
andl
fnstcw
lods
jle
iret
mov
lret
aam
fs
adc
add
cs
inc
jmp
xchg
enter
es
add
mov
lret
inc
std
insb
inc
push
pop
hlt
jnp
cmpsl
in
aam
lret
xchg
int3
mov
leave
or
bound
and
sbb
fdivrl
repz
mov
dec
enter
mov
cmpsb
xchg
out
xchg
stos
out
sub
lock
mov
push
mov
popa
jp
mov
fwait
xchg
std
push
xchg
aas
lret
adc
xor
mov
cltd
sbb
push
jnp
cs
dec
imul
loop
jb
xchg
ret
cmc
loopne
clc
out
cmp
push
xchg
outsl
addr16
int
mov
in
adc
dec
ds
enter
lock
pop
mov
push
sahf
push
jle
das
mov
sbb
pop
ret
mov
ret
adc
lahf
nop
pop
jp
roll
sbbl
movsl
stos
push
cmp
cmc
rcll
xchg
inc
and
xor
push
movsb
mov
jge
sarl
dec
xor
jbe
inc
cld
lock
lea
popa
das
loope
ljmp
cmc
jno
push
mov
pop
shll
aas
in
and
pusha
cmpsb
xor
das
out
sbbl
imul
fdiv
fdivrl
aas
mov
sbb
add
cmpsb
jp
xor
jne
mov
pop
xchg
and
xor
hlt
cld
push
cwtl
aaa
pop
stos
aas
divl
jo
in
insb
imul
push
inc
cmc
sub
pop
sbb
add
aam
sarl
mov
addb
icebp
sub
lahf
call
in
jns
rolb
in
dec
ja
pop
out
std
arpl
sbb
shr
dec
movsl
jl
dec
sub
fdivs
aas
dec
sbb
jp
mov
dec
cmpsb
std
push
in
jb
xor
jp
test
or
lret
and
xchg
daa
sbb
aaa
lret
out
les
mov
xor
outsl
mov
adc
test
or
mov
inc
pop
pop
imul
adc
mov
mov
data16
sbb
add
lahf
rclb
xor
mov
sbb
ret
adc
mov
enter
mov
sbb
sahf
into
push
xchg
push
sti
cmpsb
xor
test
pop
jo
negl
insl
outsl
inc
in
js
add
adc
and
push
das
movsb
and
enter
test
cld
sbb
lods
scas
test
jno,pn
pop
sbb
sbbl
daa
jo
mov
arpl
xor
inc
int3
scas
notb
das
sbb
bt
jmp
or
cmp
scas
pop
push
and
xchg
cmpsb
es
push
mov
fisttpl
cltd
mov
jbe
adc
mov
pusha
adc
cld
cmc
jmp
add
mov
mov
movsl
cmpsb
icebp
mov
jmp
dec
popf
lods
dec
and
aas
stos
lcall
out
sti
adc
xchg
sbbb
bound
and
xor
pop
sbb
pop
out
dec
xchg
pop
jb
aas
aam
and
loop
dec
shrl
arpl
imul
testb
jmp
or
adc
into
psllw
outsl
shlb
adc
xchg
in
jecxz
pause
and
sti
aaa
outsl
xchg
lahf
js
and
jl
mov
lods
jnp
ja
jmp
out
dec
out
fucomip
jno
mov
cwtl
jl
or
sbb
xor
and
lods
js
inc
rcrl
out
jbe
cs
mov
incb
mov
in
or
pop
std
xor
xor
add
xor
pop
int3
out
pop
je
xchg
sbb
fadd
ds
in
stos
xchg
icebp
push
inc
pop
loop
jbe
call
movsl
test
dec
add
push
sub
gs
adc
inc
shrb
dec
xlat
push
xor
add
jbe
imul
or
out
stc
adc
pushf
jb
clc
adcl
mov
cmpsb
jmp
jmp
es
cld
adc
js
scas
xchg
nop
fld1
lock
xchg
and
push
mov
loope
adc
cmp
mov
into
das
push
mov
es
clc
push
adc
gs
outsl
xchg
sub
in
arpl
sarb
das
push
fsubp
std
in
inc
ss
data16
mov
shl
lods
adc
out
push
push
test
sub
dec
adcl
jge
orb
cld
xchg
filds
xchg
adc
ljmp
cli
loope,pt
scas
push
cmpsl
out
cmp
mov
sbb
into
and
jne
rolb
xchg
xchg
xchg
add
test
test
pop
sahf
lcall
mov
mov
xchg
mov
jns
addb
xchg
test
mov
mov
clc
bound
fwait
mov
push
lock
out
jmp
mov
lods
iret
pop
mov
fnstenv
sub
imull
roll
inc
jp
scas
fcoms
sub
pop
pusha
xorl
cltd
push
jbe
test
gs
mov
xchg
std
cmp
movsb
enter
out
imul
into
popa
inc
or
cs
adc
add
in
fidivs
jno
ss
insl
int
xchg
jle
mov
lea
and
fdivl
faddp
out
mov
sub
es
fidivrl
adc
mov
mov
inc
inc
pop
repnz
std
inc
cmpb
icebp
sub
mov
addr16
jne
pop
push
add
sbb
add
sbb
lret
imul
xor
repz
sub
ret
lahf
sub
sbb
arpl
sbbl
cmpl
mov
movsb
cmc
int
xor
mov
cmp
mov
fstps
dec
add
mov
mov
xchg
popf
mov
xchg
out
pop
sub
int3
mov
mov
xchg
cmc
lods
jle
sbbb
pushf
cmc
jnp
inc
cld
shrl
inc
js
adc
jmp
fldln2
push
sub
cltd
dec
jno
xor
mov
mov
mov
cltd
jle
pop
cmpsb
sbb
shl
repz
cmp
addr16
cmp
repz
push
dec
stos
cld
and
sub
fldenv
lods
fistl
nop
sub
pushf
push
insb
ret
incb
sahf
cmp
mov
adc
inc
jnp
add
rol
cltd
add
cmpsl
add
cmp
inc
mov
jae
sar
ficomps
rolb
pop
hlt
stos
imul
sbb
icebp
xchg
jp
dec
fiaddl
mov
adc
dec
stos
neg
adc
fs
mov
popa
enter
loop
fstpl
ss
std
fistpl
cltd
dec
arpl
adc
inc
push
xchg
icebp
ret
xor
push
jl
ljmp
xchg
std
xchg
pop
and
mov
and
push
das
je
add
inc
ror
jns
push
mov
pop
inc
rcl
insb
nop
addr16
in
xchg
push
fs
adc
or
repz
adc
pop
loope
pop
pusha
xor
fwait
rolb
movsl
xor
sub
bound
push
hlt
mov
hlt
aas
fs
mov
mov
js
jge
push
jne
in
in
cltd
mov
imul
aaa
lods
popa
mov
fistpl
ss
popf
popa
jmp
mov
hlt
add
ds
sbb
mov
mov
into
out
inc
or
rcrb
cmp
les
out
mov
dec
adc
sub
push
sahf
sub
push
fwait
gs
sti
cltd
lea
and
mov
mov
push
sbb
xchg
out
mov
mov
mov
xlat
mov
and
sub
xlat
stos
fcmovu
or
mov
push
dec
sub
dec
and
sarl
test
in
jle
rorb
jns
lcall
mov
sbbl
rcrb
ret
adc
dec
gs
pop
pop
jae
dec
imul
jmp
mov
or
mov
add
mov
rorl
pop
adcb
dec
dec
pop
cmp
dec
lret
fcomi
mov
push
cmpl
stos
inc
sub
jp
cvtpi2ps
push
clc
xor
les
or
ret
pop
fwait
sysret
les
push
xchg
test
mov
aas
fildll
jp
xor
sbbb
jno
ss
in
sub
cltd
imul
lahf
ficompl
mov
cmp
les
aas
pop
push
pop
into
pop
xor
mov
fwait
mov
push
loopne
rolb
test
mul
sti
out
push
insb
out
pop
test
shl
data16
fmuls
jo
scas
mov
rcrb
xchg
lods
leave
mov
rorl
dec
iret
shll
mov
sbb
push
push
frstor
and
sub
mov
adc
loope
ss
jne
punpckhbw
je
jbe
sub
pop
adc
adc
and
in
sbb
fstpl
scas
mov
enter
dec
aam
or
xlat
clc
std
mov
movsb
push
dec
movsb
inc
xchg
aad
adc
cmc
daa
fwait
inc
std
sub
aas
lods
lea
nop
dec
or
add
sub
add
sub
mov
pop
wbinvd
data16
sub
mov
lcall
pop
int
ficoms
daa
push
jne
enter
rcll
mov
xchg
mov
scas
xchg
add
inc
jmp
cmp
daa
xor
pop
daa
dec
cld
ja
xor
repz
sti
aaa
jns
xchg
cld
fdivs
xchg
shrb
insl
jbe
in
clc
addb
jae
fs
insb
fdivrl
imul
xor
pop
mull
into
iret
sbb
xor
popa
aas
mov
pop
decb
cs
sti
out
repz
xorl
xor
popa
push
mov
cmp
mov
pop
adc
xchg
push
std
sbb
sbb
shl
leave
mov
inc
insb
or
add
cmc
es
xor
sbb
rcll
test
jp
sarl
jp
inc
sbb
ja
xor
dec
aad
mov
loopne
pop
xor
sti
dec
xchg
pop
jne
or
add
imul
push
test
xchg
call
cld
mov
hlt
adc
sub
addr16
pop
mov
testl
sbb
ret
add
ljmp
or
push
pop
inc
xchg
mov
adc
inc
cmp
sbb
pop
xchg
add
jnp
dec
jb
sbb
mov
push
push
pop
les
rorb
sti
rcr
lods
mov
int
data16
stos
lret
ljmp
leave
cld
sbb
lock
xchg
shlb
mov
xchg
out
ja
xchg
add
dec
add
cmp
hlt
push
sub
ja
icebp
add
or
test
inc
or
call
sub
jnp
mov
dec
mov
ret
sub
xchg
jb
mov
and
dec
das
into
sbb
iret
mov
arpl
jge
in
iret
push
out
nop
mov
data16
xchg
lods
mov
mov
decl
xor
aad
sahf
icebp
repz
jno
fnstenv
xchg
jmp
loop
add
mov
dec
xor
out
mov
gs
lahf
rorl
xor
stc
mov
jno
sti
mov
stos
test
icebp
in
mov
pop
sub
xchg
cmp
leave
in
push
mov
xchg
push
fsqrt
and
xor
cmpsl
bound
popa
test
inc
mov
cmp
mov
cmpsb
mov
leave
pop
mov
adcl
xor
dec
add
pop
js
rcrb
call
clc
ror
adc
popf
scas
or
jne
adc
sub
rcll
movsl
stc
int3
sbb
sbb
sub
sbb
test
repz
std
inc
mov
xlat
scas
shlb
stc
push
push
inc
dec
arpl
jns
outsb
lds
ss
shll
orb
or
imul
jp
jbe
xchg
call
jmp
cli
in
loop
out
push
cmp
stos
jnp
cmp
adc
mov
movsl
stos
das
sbb
pushf
add
mov
clc
push
gs
mov
pop
or
pop
jg
test
xchg
out
adc
inc
and
int
sahf
lock
rcrl
insb
sub
sti
and
mov
popa
outsl
lcall
adc
push
in
lahf
fsin
mov
ss
pop
push
cwtl
mov
loop
sub
or
jle
sti
and
mov
add
pop
les
xor
mov
jge
cmovb
jns
dec
hlt
add
jo
jbe
push
push
cmpsl
mov
mov
pop
cwtl
add
ljmp
cltd
push
mov
imul
fisttpll
loop
jle
sti
jmp
in
push
nop
outsb
incb
popf
in
js
test
mov
pushf
fisubl
ss
in
adcl
pop
iret
movsb
or
hlt
dec
mov
scas
mov
sarb
es
lods
clc
in
cs
mov
or
lahf
les
pop
dec
and
push
mov
add
cltd
jbe
mov
negb
mul
std
mov
imul
mov
push
dec
dec
mov
ficoms
fucom
sbb
cmp
push
jo
xor
jg
movsb
jno
mov
push
pop
fucomi
popa
sar
cmc
dec
inc
rorb
sbb
cmp
orb
sbb
cmpsl
aam
shlb
out
js
push
pop
test
xor
clc
into
cmpsl
add
push
enter
xor
push
jge,pn
push
mov
mov
testb
jnp
sbb
mov
xchg
mov
mov
jns
ror
repz
add
push
mov
test
xchg
nop
add
data16
cmc
push
mov
shr
fs
lahf
inc
mov
ljmp
mov
addr16
ret
rolb
lahf
outsb
cwtl
sahf
aaa
and
clc
mov
push
outsl
xchg
int
addr16
jp
in
pop
scas
sbb
dec
loope
in
movsb
xor
test
mov
call
sub
and
js
in
cmp
arpl
mov
push
jge
push
stos
vpcmpgtb
fmull
push
add
rolb
dec
cli
sub
mov
mov
sbb
and
in
xor
fdiv
mov
rcrl
xor
push
setbe
shlb
adc
cmp
mov
adc
xlat
pop
subb
ret
fcmove
lcall
leave
cmc
jns
adc
mov
jecxz
adc
sbb
lret
xor
fwait
pushf
insb
pop
lahf
test
jg
sbb
arpl
cwtl
fs
fisubrl
inc
xchg
arpl
push
out
push
jne
xchg
gs
mov
cli
push
xlat
cmp
sbb
mov
sub
stos
pop
jg
clc
sbb
mov
xchg
sahf
or
lods
dec
int3
mov
clc
shll
fnsave
scas
es
mov
inc
cli
pop
mov
push
push
lock
cmp
jns
outsb
fisttpl
inc
xor
and
stos
test
pushf
frstor
pop
jb
imul
mov
loopne
jno
mov
loop
out
xchg
mov
mov
pop
add
cmp
cmp
fs
int
mov
pop
out
adcl
pop
push
cmp
leave
enter
mov
or
xchg
xchg
pop
enter
je
dec
repz
jge
dec
loope
dec
mov
xchg
in
or
cmp
push
pop
sub
enter
xchg
idivl
ljmp
jb
cs
jge
and
inc
dec
out
fidivrl
in
repz
sbb
push
rol
jae
inc
cmp
clc
mov
push
lods
decl
pusha
and
fwait
jg
or
jg
cmpsb
xchg
xor
scas
lret
in
in
dec
xor
scas
cmp
pop
movsl
or
cmpsl
dec
sub
fs
sarl
xchg
pop
movsb
jle
jg
stos
flds
push
cmpsl
cmp
arpl
cmp
mov
fstpl
sbb
mov
ljmp
and
aaa
xor
jb
fidivs
mov
mov
fs
ret
into
movups
enter
mov
subl
sbb
shrb
in
testb
mov
leave
adc
loopne
mov
sarb
jnp
into
push
xchg
or
mov
lock
mov
inc
fnstenv
ljmp
push
aaa
daa
mov
fcmovu
push
and
jmp
nop
adc
in
push
int3
sbbb
fdecstp
pop
push
and
fisubrs
cmp
sahf
xchg
sub
cs
pop
inc
xor
cmp
jge
sub
pop
ljmp
hlt
push
mov
aam
mov
in
inc
test
pop
movsl
fistpl
mov
lar
mov
sbb
data16
add
sbbl
and
adc
in
fiaddl
mov
gs
testb
mov
add
push
pop
jecxz
mulb
leave
outsb
scas
imull
mov
jbe
sbb
mov
ret
jl
sub
aaa
sbb
scas
inc
std
fistpl
movsb
in
divb
das
pop
or
mov
xchg
dec
jle
mov
fdivs
pop
enter
hlt
dec
xor
mov
add
int3
push
cmc
testl
adc
inc
fs
lcall
cmpsl
xor
xchg
popf
dec
addr16
movsl
testb
stos
outsl
adc
cmp
cwtl
stos
mov
mov
mov
inc
mov
sarb
stos
shrb
in
mov
adc
out
popa
orl
dec
movsl
pop
jmp
cltd
rorb
sbb
mov
xchg
es
out
js
mov
js
push
mov
aad
mov
sbb
dec
add
inc
xorb
mov
add
les
mov
push
das
loope
daa
iret
lock
arpl
xor
pop
stos
pusha
leave
ret
mov
fs
inc
popf
xchg
stc
dec
dec
mov
out
lahf
ret
sbb
int
mov
pop
call
in
insl
int
iret
enter
mov
aad
inc
fcmove
add
mov
int3
jne
adc
iret
or
loopne
jecxz
jbe
test
or
aaa
push
test
into
jp
clc
shll
xchg
int
movsb
mov
popf
sarl
rorb
mov
mov
pop
push
xchg
rcrb
popf
cmpsb
lcall
stos
outsl
mov
mov
inc
xor
mov
enter
stos
dec
and
push
push
mov
sbb
adc
jmp
mov
in
or
or
xor
pop
ret
dec
dec
fneni(8087
ljmp
mov
data16
sub
js
pushf
gs
pusha
movb
add
shl
cmp
cmpsb
adc
jae
popa
fsub
clc
test
sti
and
and
cld
inc
aam
jmp
xchg
or
push
jbe
jge
cmp
add
call
mov
xlat
push
cmp
mov
sub
dec
xor
sahf
push
jb
or
test
inc
add
popa
pop
clc
test
mov
xchg
out
cmp
iret
out
xor
or
mov
push
jne
sarl
xor
lret
fstpl
jb
and
fwait
dec
cmpsb
das
inc
jnp
movsl
mov
aad
xchg
dec
jp
jnp
adc
ljmp
pop
mov
call
adc
push
jbe
sahf
rclb
xchg
xchg
scas
movsb
call
jle
sbb
jp
mov
add
jno
mov
imul
pop
test
sbb
and
cwtl
mov
jae
xlat
add
dec
push
or
inc
lahf
add
jle
cli
or
mov
les
in
aam
in
cltd
je
out
push
stc
pushf
cmpsl
add
loope
fnstcw
out
xchg
pop
rcll
ja
filds
icebp
ret
js
push
xor
decb
mov
sub
pop
push
sub
daa
dec
idivl
adc
int3
call
icebp
and
ror
fidivrl
iret
in
xorb
push
sbbb
xor
mov
mov
xor
mov
mov
sbb
fldenv
aad
xchg
es
movsl
aam
inc
xchg
xchg
mov
int3
cmp
or
loop
cmp
sub
gs
mov
mov
insl
stos
push
jp
dec
adc
stc
pop
sub
notb
mov
dec
push
add
xor
sbb
push
lret
in
jno
or
andb
mov
aas
push
daa
push
adc
clc
mov
testb
mov
scas
filds
jne
xor
fcmovnb
jp
sub
cltd
jl
dec
icebp
jmp
adc
lret
repnz
fnstenv
mov
sub
daa
mov
ss
enter
in
adc
mov
lock
int
out
gs
test
sbb
push
sbb
lods
mov
sbb
mov
popf
xor
out
dec
mov
stos
jbe
sarb
out
out
xchg
cmp
push
icebp
mov
shll
push
stc
ret
pop
stc
sbb
mov
jge
cltd
sbb
add
push
mov
test
fsts
xchg
lock
pop
sbb
jo
add
and
cmp
pushf
mov
push
pop
jmp
pop
frstor
and
pop
or
lret
sbb
push
je
fwait
and
and
pop
cmp
stc
xor
test
and
cld
test
sbb
test
testb
out
pop
cmp
imul
sub
ljmp
and
sbb
jmp
inc
sub
and
jns
mov
lcall
pop
addr16
xchg
sbbb
push
dec
arpl
pop
enter
roll
sub
in
jmp
sbb
or
cmpl
fbstp
into
enter
mov
dec
or
cmp
cs
fmuls
xor
jle
xchg
fistpll
icebp
sar
outsl
sub
scas
add
cli
xlat
ds
rcr
adc
imul
xor
fwait
popf
jp
mov
invd
mov
cmp
xchg
xchg
adc
and
stos
add
jnp
pop
dec
push
scas
or
dec
aas
mov
jmp
fbstp
fsubl
inc
in
addr16
fwait
adc
xor
dec
mov
cli
cmp
dec
adc
sub
and
in
jmp
lahf
or
push
aad
stos
cwtl
mov
mov
je
push
jg
cs
pop
inc
cltd
inc
rorb
movb
insb
mov
mov
sahf
loop
arpl
cmpsl
loop
push
xor
pop
push
ss
nop
jno
pusha
mov
jle
add
ffreep
scas
inc
je
add
jno
mov
pop
cmc
add
cmp
arpl
xacquire
jl
lods
sbb
cmp
xchg
in
into
test
dec
fistl
mov
mov
mov
sbb
pop
inc
add
lea
insl
inc
rclb
push
mov
test
sbb
daa
inc
xchg
les
ret
inc
ret
jae
mov
mov
ret
lea
sub
add
add
vaesenclast
xchg
test
add
test
jo
in
addb
add
push
fwait
xor
sub
repz
adc
cwtl
in
or
cmp
mov
repz
mov
in
sub
jmp
push
sub
psraw
cli
imul
pop
jmp
dec
pop
jg
mov
sub
add
mov
add
mov
out
je
push
pop
pop
xchg
and
xchg
jg
pop
bswap
push
sarb
and
xchg
xchg
sbb
sub
mov
xchg
add
loop
inc
or
enter
sarb
out
aad
pop
sahf
mov
inc
mov
inc
rol
repz
mov
fmuls
mov
mov
push
bound
mov
mov
fcoml
cmpsl
lods
cmp
loop
inc
push
jae
push
maxps
mov
jno
sub
sahf
clc
cmpsb
mov
int3
call
aad
push
int
movsl
jle
sbb
divl
sub
fsubrs
mov
pop
shr
push
lcall
push
pop
std
and
adc
inc
sahf
sub
inc
xchg
or
sbb
pop
mov
pop
mov
mov
sbb
dec
loopne
lret
scas
mov
mov
arpl
shl
loop
cmc
mov
inc
clc
ljmp
pop
pop
shll
int3
daa
lcall
pop
sub
in
out
inc
ret
push
imul
jne
push
dec
fists
jmp
inc
inc
xchg
test
inc
xor
shlb
cmp
fwait
cmp
push
xor
jge
in
loop
aam
mov
fs
cmp
and
sub
mov
imul
inc
pop
lds
add
adc
pop
xor
imul
ret
std
mov
mov
mov
cmpsl
jmp
out
xchg
enter
rorb
fiaddl
cmp
mov
xor
fsub
pop
bound
divb
adc
hlt
adc
pop
cmp
xchg
or
fdivrs
xchg
mov
inc
rol
adc
data16
bound
movb
push
mov
jmp
push
loop
insb
dec
add
rorb
cs
xchg
test
into
in
cwtl
out
dec
xchg
jge
test
sbb
jne
xchg
cltd
adc
dec
mov
xor
mov
xchg
jne
dec
xor
mov
jp
mov
sbb
mov
push
call
xchg
or
outsl
mov
xchg
adc
test
cli
insl
mov
imul
sub
adc
jp
lret
pop
push
addr16
jae
pop
shlb
adc
pushl
sbb
mov
insb
or
jmp
out
fcmovne
iret
pop
ljmp
xor
ds
lahf
xchg
ljmp
inc
out
sbb
jp
data16
push
add
sbb
and
frstor
xor
enter
mov
inc
sub
push
mov
push
xor
fs
pusha
aas
mov
aad
scas
loop
dec
lcall
out
fmulp
test
lret
pop
sbb
push
pop
insl
pop
jl
lods
or
ret
xorb
cmp
aam
inc
add
mov
fisubrl
enter
adc
push
add
es
arpl
mov
jnp
inc
adc
cwtl
dec
das
imul
cmp
jg
or
out
xchg
scas
mov
dec
movsl
jnp
jne
les
sbb
xor
xchg
sub
jmp
xor
push
fisttps
dec
xchg
sbbl
sub
out
adc
cli
mov
icebp
outsl
sub
mov
imull
or
lods
pop
ret
dec
pop
ja
cmp
test
pop
pusha
push
mov
out
push
mov
fwait
test
push
xor
mov
hlt
shrl
xor
jo
xor
cli
popf
cmp
out
xor
ret
fisubrl
jp
mov
inc
mov
jo
ja
mov
mov
in
call
jno
sbb
arpl
sbb
and
and
out
imulb
test
and
adc
sbb
outsb
in
dec
dec
movsl
cmp
sbbl
sar
mov
ficomps
pushf
mov
mov
xchg
je
mov
xlat
inc
pop
pop
push
xor
hlt
cmp
jno
movsl
je
cmp
mov
inc
mov
incb
jae
bound
outsb
cmpsb
jb
push
adc
adc
jnp
add
fwait
arpl
xor
call
pop
hlt
fisubrl
mov
jl
sbb
xor
cli
or
push
jae
scas
out
ja
push
fs
inc
sahf
and
pop
jmp
mov
adc
mov
stc
push
int3
fnsave
push
xchg
xchg
loopne
sub
fcompl
inc
ds
inc
repnz
imul
adc
inc
imul
leave
scas
mov
jno
dec
dec
pop
mov
cmpsb
mov
outsl
xchg
mov
inc
stos
insl
push
in
lret
outsb
jmp
cmp
cmpsb
pop
scas
scas
and
pop
and
inc
mov
incb
cmp
fs
mov
stc
xchg
jae
sub
lcall
adc
push
sub
mov
aad
movsl
test
add
dec
jae
cli
cld
pop
add
push
jne
xchg
push
sti
aad
js,pn
ja
or
cmp
js
sub
jecxz
das
js
loopne
cmp
push
cmp
lret
ror
int3
jne
or
js
pop
cltd
lret
pop
cmp
pop
xlat
push
pop
fidivl
mov
mov
dec
cs
loopne
and
fldt
or
pop
fbld
fisubrs
pushf
addb
lcall
mov
lcall
cltd
inc
js
aaa
in
iretw
lods
enter
insb
dec
in
clc
add
out
mov
ja
push
inc
leave
mov
js
inc
test
cmp
sub
pop
sbb
sbb
jmp
pop
pop
test
mov
pop
out
fsts
sub
mov
xlat
adc
test
pop
push
rcrb
test
ljmp
xor
les
popa
add
sub
cli
xchg
adc
jle
mov
mov
ret
aad
and
lea
ljmp
lret
ja
es
xchg
and
mov
fcoml
cmp
repz
mov
jge
js
push
ret
add
out
orl
cmpsl
adc
notl
cmpsl
xchg
es
xchg
shll
jecxz
lret
adc
cmp
iret
jg
ret
jno
mov
push
mov
xchg
cmp
push
fistpl
dec
cld
sub
and
imul
cmc
fidivrs
cs
fwait
leave
fildl
dec
in
and
cmp
mov
fisubs
addr16
xlat
mov
mov
cmp
pop
mov
ljmp
cmpsb
inc
inc
xor
aas
aaa
or
fisttpl
mov
mov
jne
cmp
out
mov
xchg
adc
mov
inc
dec
mov
lahf
int
adc
fcmovnbe
mov
pop
jge
fadds
mov
aad
push
mov
jo
mov
lret
xor
xor
jp
hlt
stc
ja
inc
jge
lcall
and
sub
mov
fisubrs
das
inc
mov
add
aam
in
lds
mov
dec
sub
push
pop
jb
adc
or
bound
xor
jno
clc
repnz
xor
aad
loop
hlt
jne
push
mov
xchg
xchg
mov
cs
lahf
adc
in
int3
mov
mov
sbb
xchg
or
shl
mov
dec
mov
cmp
or
sbb
sub
repnz
mov
dec
mov
std
sbb
fstps
pop
fcoml
repnz
xchg
addl
fdivrs
fs
dec
sbb
add
outsb
xor
jbe
push
sbbl
adc
and
aas
and
hlt
frstor
and
mov
imul
mov
adc
xchg
push
testb
and
push
mov
mov
jae
pop
push
dec
lret
shrl
fcmovb
les
mov
jge
adc
dec
push
inc
adc
sub
or
mov
enter
scas
sub
or
pop
pop
in
data16
push
mov
ds
pop
jae
push
and
movsb
xchg
push
mov
push
xchg
mov
add
push
xchg
inc
mov
xor
pushf
scas
push
ljmp
add
jns
loope
scas
out
adc
popa
adc
push
pop
push
push
sub
mov
jb
sub
push
push
cmp
into
and
sti
dec
scas
add
pop
loopne
fdivrl
out
loope
cmpsl
je
inc
test
lods
sub
mov
test
mov
repnz
sub
jecxz
fdiv
xor
pop
adc
in
xor
xchg
std
cmc
cmp
xchg
push
push
jo
pop
mov
call
fisubrs
mov
or
lds
roll
test
jg
cmp
ficompl
mov
mov
lea
inc
lret
orb
xchg
fisubl
js
int
sub
jmp
data16
mov
inc
test
jge
imul
js
xchg
sti
sbb
aas
movsl
dec
jmp
movsb
lods
xor
pop
xor
incb
xor
mov
mov
outsl
cmp
dec
xor
ljmp
jne
or
xor
mov
test
push
and
nop
add
mov
sub
icebp
test
push
cmpsl
sub
rclb
neg
repnz
lret
lret
mov
int3
inc
jne
mov
add
inc
mov
sbb
scas
push
push
dec
sti
sbb
test
dec
mov
out
imul
xor
repnz
test
adc
adc
mov
in
loop
pop
cmp
fdivrp
loopne
xchg
xor
sti
adc
cmpb
inc
cld
test
pop
repz
movsb
imul
pop
icebp
inc
aam
sub
mov
xor
xor
outsb
mov
test
fcos
inc
xor
int
jge
std
jnp
fsts
shlb
xor
sbb
sbb
dec
xchg
mov
out
and
jle
push
fs
in
dec
in
mov
cmp
lods
sub
pop
jae
stos
xchg
mov
ss
sbb
daa
mov
aad
bound
pop
push
xchg
xchg
jg
cmp
fs
xchg
cmp
pop
shl
mov
and
adc
mov
idivb
fsubs
int
cs
aam
ret
jo
xchg
lea
shlb
sbb
push
aas
inc
or
mov
in
je
call
push
loop
inc
xorl
pop
push
cmp
int3
pop
add
mov
mov
ds
jno
stc
add
dec
adc
dec
and
imull
repz
mov
popf
adc
cmpsl
mov
mov
lcall
scas
pop
dec
out
fbld
xchg
pop
enter
add
shrl
sbb
ljmp
loopne
inc
lahf
mov
xor
sub
xchg
outsb
dec
lds
inc
inc
xor
test
xor
jb
scas
xchg
int
cld
out
pop
dec
ljmp
inc
lds
in
push
hlt
and
movsl
jne
dec
push
jae
iret
mov
jle
dec
test
adc
sbb
jmp
test
push
pop
in
mov
jo
mov
cmp
xchg
adc
xor
xchg
jp
jo
push
cmp
mov
scas
inc
or
repnz
sbb
notb
lret
ss
fwait
enter
push
clc
adc
inc
andb
loop
js
fistpll
inc
push
adc
loope
mov
std
outsl
out
mov
sub
jg
push
into
push
cmp
cmp
data16
jno
dec
push
pop
sub
and
test
lea
sub
sub
inc
stos
add
inc
gs
loopne
addr16
call
sub
inc
insl
outsb
and
or
mov
push
js
sub
in
call
aam
add
jp
xchg
jns
lock
jne
lahf
out
fiaddl
jle
fsubl
aas
loop
mov
inc
sbb
mov
jb
ret
mov
ljmp
sbb
add
xorl
add
leave
repnz
call
pushf
cli
jnp
xlat
and
jmp
in
lret
push
cmpb
sarb
sarl
into
push
outsb
imul
sub
ret
dec
icebp
fists
dec
inc
popa
add
or
pop
mov
jnp
push
push
outsl
je
push
ret
add
pop
std
test
ja
jb
xor
sbb
xor
or
insl
popa
sub
push
arpl
xlat
in
jbe
add
mov
dec
pop
dec
or
popf
mov
stos
sahf
std
mov
fidivs
pushf
inc
inc
sbb
push
lea
lods
pop
cmpsb
test
add
mov
adcb
jmp
xor
mov
adc
imul
push
dec
loope
into
cmp
gs
int3
mov
nop
mov
or
adc
lret
jmp
inc
mov
std
jp
mov
sub
test
jno
jne
jp
frstor
lods
inc
mov
or
push
cmp
inc
xor
cwtl
jo
sbb
cmp
leave
repnz
mov
stc
inc
jae
cmpsb
fisttpll
test
cmp
jge
dec
mov
stos
popa
xlat
lods
push
in
mov
jge
mov
enter
adcl
mov
fcompl
int3
movsb
aaa
jns
imul
shlb
imul
shl
xchg
jnp
push
inc
loopne
dec
js
push
enter
ret
pop
loope
xor
dec
jno
cs
push
fcoms
je
ret
int3
jecxz
leave
mov
iret
push
inc
dec
in
out
fmull
sbb
jns
in
add
std
lret
mov
pop
mov
test
sahf
hlt
xchg
jb
and
dec
fs
pop
in
lret
add
push
sub
xor
mov
mov
cmp
xor
jg
fstpl
and
mov
and
int
push
push
int3
xchg
xchg
in
jecxz
pop
les
int3
clc
sahf
push
mov
lcall
fistps
jmp
enter
aad
je
push
xor
and
fldenv
sbb
cmp
iret
push
pop
les
pop
mov
cld
fstpt
lahf
cltd
shll
aas
and
xchg
xorl
outsb
repnz
sbb
jo
jle
leave
or
or
push
mov
and
repnz
pop
cwtl
push
sub
popa
repz
loop
mov
inc
fidivs
push
push
adc
and
int3
mov
mov
bound
call
in
cmp
fstl
rcrb
fmull
push
cmp
scas
cs
lods
out
lods
dec
pushw
mov
pop
lods
pop
movsl
in
sbb
insb
fwait
stc
je
push
in
cmpsl
mov
in
mov
push
jmp
lahf
iret
aam
mov
cmp
shll
scas
mov
mov
sub
daa
cmpsl
pop
fistl
mov
pushf
push
jne
nop
data16
lea
fbld
push
jno
mov
out
add
dec
test
add
push
movsl
sti
inc
xlat
negl
inc
add
lcall
insl
mov
adcb
mov
divb
sbbl
subb
jg
outsl
nop
push
and
outsb
lods
cmpsb
jno
iret
test
xchg
aam
insl
mov
ja
ds
mov
push
or
mov
test
enter
jnp
rcrl
push
xchg
add
rorl
dec
test
pop
std
xlat
movsb
int
inc
lahf
and
jbe
adc
test
sbb
sbb
pop
or
add
push
mov
xchg
jge
lock
out
sub
outsl
add
jne
imul
xchg
stos
or
lea
adc
js
div
push
cmc
jg
sub
pop
ds
push
add
sti
mov
mov
cmp
and
sub
clc
jb
xorb
test
mov
shll
rclb
inc
pusha
jae
adc
cmp
cmpsb
cld
mov
inc
adc
mov
cmpsb
cmp
adc
sub
push
xchg
fs
jmp
dec
jb
or
jmp
add
inc
pop
xor
leave
pusha
pushf
and
inc
jno
xor
pusha
jae
orb
mov
sub
aad
or
dec
and
mov
sbb
movsb
jns
lea
jo
ret
gs
out
stos
lods
mov
cmp
aaa
or
xchg
xlat
dec
jle
or
rcrb
cmp
xchg
mov
mov
push
mov
dec
dec
dec
scas
dec
or
imul
std
mov
mov
xchg
outsb
inc
sub
shrb
andb
or
push
mov
addr16
pushf
mov
testb
adc
push
sub
pop
lods
pop
lds
xchg
mov
leave
inc
add
jp
pusha
xchg
sbb
cmpsl
or
dec
sub
gs
fldt
mov
jg
or
sbb
push
sub
adc
imul
mov
stc
and
rcrb
aaa
pushf
gs
dec
adc
xchg
mov
adc
outsl
add
pop
xchg
xorb
repz
scas
shlb
xchg
adc
dec
xchg
cmpsb
fisubl
xchg
cmp
pop
cwtl
mov
mov
sbb
sub
loop
jo
xor
mov
cwtl
mov
mov
test
fldenv
mov
lods
fistps
pop
and
fwait
inc
xor
testl
mov
inc
xlat
mov
xchg
in
ret
das
repz
in
xchg
mov
lock
dec
xchg
pop
imul
or
lea
jb
cmpsl
mov
push
push
pop
mov
mov
add
movsl
xor
push
hlt
and
mov
xlat
outsl
push
jmp
stos
cwtl
pop
jne
jp
sub
cwtl
lret
adc
mov
stos
add
outsb
js
and
nop
fistps
loopne
loope
popa
xor
lds
mov
pop
loope
fwait
jo
outsb
xchg
xchg
rolb
shr
pop
orb
sub
nop
push
cmp
test
pusha
int
js
test
pop
xor
mov
js
xchg
adc
xchg
mov
out
movsb
mov
mov
cmp
sbb
into
mov
pushf
lahf
mov
mul
lret
push
mov
xor
bound
outsb
mov
jmp
les
xor
sti
pop
mov
add
inc
xchg
pop
leave
mov
sbb
xchg
addl
outsb
in
insl
outsl
mov
adc
popf
sub
call
cmp
bound
cld
push
push
les
into
xchg
add
inc
in
push
cmp
ljmp
xor
inc
fsubrs
and
or
xchg
icebp
fdiv
dec
pop
jb
loopne
lods
std
xor
dec
mov
adc
mov
sub
out
xchg
mov
icebp
mov
ret
push
jle
push
and
dec
inc
aas
add
and
add
ret
sarb
aaa
adc
or
fdivr
pop
aaa
and
js
inc
clc
int3
jb
cmpsb
push
lods
fsubrs
xor
lret
in
jb
jmp
push
xor
cmp
lcall
cmp
pop
loop
adc
or
out
xchg
mov
sahf
cmc
sbb
ljmp
sub
adc
push
cvtps2pi
int
dec
lea
mov
push
mov
dec
faddl
add
add
rcl
add
sub
mov
jp
int3
pop
mov
pop
add
hlt
cltd
je
fldenv
mov
lods
push
lds
pop
popa
and
xor
call
add
add
xor
data16
int3
loop
jecxz
fcomp
out
or
data16
mov
jnp
arpl
fwait
pop
mov
jg
and
dec
popa
jns
lods
shlb
fcmovb
loope
push
test
mov
cltd
push
sbb
inc
dec
aam
lcall
mov
insl
sub
iret
push
or
mov
lods
pop
push
add
mov
shll
pop
sub
pop
cmp
mov
lret
outsl
adc
mov
mov
adc
mov
sbb
sub
jmp
aaa
mov
and
stos
das
mov
jecxz
and
popf
and
xchg
es
subl
jb
loop
xor
outsl
add
jge
and
sub
push
dec
in
iret
leave
adc
sahf
stc
adc
mov
insl
mov
inc
push
lcall
mov
fsubrl
and
in
adc
bound
and
out
fsubl
out
iret
test
inc
aaa
hlt
jl
imul
xor
cmp
mov
xor
or
idiv
jno
inc
jno
out
push
adc
xor
adc
mov
sbb
or
stos
subl
xchg
jns
scas
scas
aas
xor
lds
cvtpi2ps
push
adc
insl
jp
cmpsl
ss
rcrb
xchg
or
mov
mov
daa
or
push
mov
mov
adc
cmpsl
loope
addr16
push
or
movsl
mov
and
in
adc
xor
ljmp
data16
enter
aaa
js
cmp
in
sub
gs
cltd
mov
and
mov
mov
or
and
xor
gs
dec
inc
mov
fs
addr16
mov
mov
push
bound
bound
xor
in
push
jo
aas
sub
ja
in
mov
enter
pop
mov
fldt
loop
sub
fcompl
icebp
mov
insl
add
mov
pop
loopne
aad
adc
mov
pop
imul
mov
jmp
test
fwait
test
or
adc
add
mov
xchg
and
mov
pop
cmpsb
test
loopne
adc
xor
pop
cmc
adc
mov
lds
mov
jp
out
loope
mov
cmp
mov
jae
enter
sub
mov
xchg
xor
arpl
push
hlt
fstl
mov
push
cmp
mov
mov
mov
jecxz
clc
cmp
fistpll
repnz
fsts
mov
jge
push
sub
clc
pop
inc
sbb
stc
and
pushf
mov
in
rcll
mov
cmp
inc
push
ss
or
adcl
bound
icebp
add
pop
subb
les
ljmp
in
jl
and
addr16
or
pop
dec
add
inc
popf
jp
jno
xchg
loope
in
das
aaa
adcb
repnz
sub
popa
mov
jae
testb
leave
dec
das
pop
cmpsb
lea
notl
adc
cmp
aad
adc
repz
hlt
rclb
xchg
subb
notl
int3
cmp
sbb
push
push
cmp
sbb
mov
mov
xor
mov
add
inc
mov
pushf
hlt
xchg
imul
mov
jb
adc
test
xchg
or
sbb
pop
or
mov
out
jl
pop
arpl
test
notl
and
push
out
cmp
aas
jl
call
movb
imul
daa
sti
das
xchg
mov
sub
jmp
scas
imul
pop
adc
xchg
xchg
mov
jnp
mov
jnp
aas
xor
test
sahf
icebp
pop
shr
je
cmc
shr
shrb
push
add
stos
mov
add
shll
mov
jnp
and
xchg
mov
dec
jnp
dec
mov
stos
mov
jl
push
fwait
jbe
loope
std
sub
fildl
mov
cmp
jmp
jl
xorl
adc
mov
add
dec
dec
fwait
pop
sbb
gs
jecxz
out
push
xchg
iret
lds
popf
in
push
jmp
dec
cmpsl
pushf
mov
jle
repz
xchg
and
in
adc
dec
repnz
clts
jb
lcall
scas
sub
sub
lea
lret
mov
mov
pop
xchg
dec
push
xor
xchg
cmpsl
icebp
cs
jmp
pop
add
pop
push
pop
jnp
jnp
xor
mov
ret
inc
roll
add
jno
test
inc
dec
adc
cmc
mov
ret
dec
sbb
mov
lods
stos
mov
cmp
jle
xchg
outsb
rolb
sarl
lods
inc
jo
fcmovnu
sahf
mov
mov
fsubrs
jmp
lcall
xor
jecxz
pop
movsl
or
sahf
mov
stos
test
xor
lods
jo
outsb
ss
fdivrs
push
xor
popf
mov
fisttps
orb
sub
lret
pop
shll
sub
pop
xchg
lds
pusha
inc
cmpl
out
push
rcll
nop
sub
mov
mov
andb
and
add
push
loopne
movsb
dec
xchg
popf
outsb
lret
stc
mov
imul
notl
push
mov
push
xchg
xor
inc
mov
leave
pop
xor
mov
jp
out
mov
and
mov
sbb
add
loop
jge
out
rol
bound
sub
clc
xchg
mov
je
sahf
imul
out
jns
dec
cmp
fwait
cs
push
pop
push
xor
dec
add
xor
shl
in
pop
sub
out
sbb
and
je
sub
inc
mov
dec
movsl
jle
sbb
or
or
aaa
andl
xchg
inc
ret
loopne
jecxz
popf
sbb
shl
and
or
stc
mov
adc
mov
jmp
dec
vcmpps
out
jmp
fcomps
mov
xor
mov
adc
outsb
in
pushw
movsb
into
jb
stos
outsl
cmpsl
pop
mov
xor
sahf
popf
jg
or
test
std
fnsave
xchg
repz
adc
adc
jne
pop
mov
push
aas
push
cmp
gs
inc
divl
jb
test
cmp
xchg
cmp
addr16
cmp
stc
adc
fwait
into
xchg
add
lods
clc
mov
orl
cmp
sbb
in
fsubl
xchg
fbld
xorb
fimuls
mov
or
or
lcall
fwait
jb
xor
lret
imulb
push
jne
das
dec
test
cmpsb
adc
adc
pop
aad
cmp
dec
mov
inc
cmp
shll
nop
popf
aam
adc
in
fs
mov
popl
mov
sub
ret
jbe
pop
inc
scas
mov
leave
push
insb
xchg
mov
cmp
pop
test
sub
call
in
push
and
lahf
imul
xlat
daa
gs
out
lods
shll
cli
pop
jecxz
cmp
mov
and
lcall
rolb
dec
or
xchg
xchg
mov
stc
xchg
mov
or
test
lock
pop
lret
push
dec
scas
pop
inc
cmp
gs
push
mov
ret
jge
xor
lret
sahf
and
xchg
push
mov
push
shr
aad
lret
hlt
cmp
add
test
or
cltd
xchg
test
mov
adc
jo
call
pusha
pop
dec
scas
lock
shlb
out
cmpsb
jo
mov
sarl
add
imul
mov
dec
daa
push
ja
push
sar
imul
add
sbb
rolb
idivb
mov
fistpl
in
sub
lret
scas
mov
inc
ret
fnclex
repz
iret
std
inc
sub
sbb
mov
enter
adc
mov
xor
cmpsb
dec
jp
sub
repz
sbb
mov
adc
adc
stos
ret
jge
pop
dec
mov
fidivl
cmp
xchg
imul
add
mov
rorl
sbb
enter
mov
in
cmp
xor
loop
sub
cmpsl
mov
sub
lods
cmp
into
mov
lock
or
mov
mov
xchg
jecxz
scas
sub
std
stc
jae
xor
or
imul
xchg
ljmp
je
mov
mov
imul
cmp
inc
stos
fldenv
xchg
aaa
sub
cmp
popa
push
or
adc
pop
mov
inc
or
xor
jecxz
orl
sub
xchg
sbb
shll
mov
mov
pop
lret
sub
jecxz
pop
cmpsb
mov
mov
mov
adc
fs
rcll
xor
fstpl
adc
jg
add
testl
xor
imul
repz
xchg
mov
mov
stos
push
mov
enter
cmp
rcrl
sub
lods
ljmp
into
lds
sbb
mov
jecxz
mov
mov
mov
add
sbb
cmp
add
jo
dec
mov
sbb
mov
cli
testl
pop
popf
repz
adc
push
loop
mov
sbb
das
dec
bound
mov
clc
addr16
xor
cmpsb
jo
add
pop
or
rcll
lock
test
cmp
sub
mov
sub
ss
test
dec
and
mov
daa
test
mov
cmp
jmp
cmpsl
pop
iret
aas
jge
test
and
arpl
push
outsl
mov
sbb
cs
pop
insb
pop
bound
lods
xchg
into
pop
in
pop
std
mov
pop
adc
pusha
xor
push
cli
push
pop
idiv
cld
lods
enter
mov
jp
pop
leave
lods
adc
or
mov
xor
rcrl
push
ffree
mov
mov
std
testb
cmc
loopne
cmpsb
mov
rorl
inc
adc
sub
addb
mov
addr16
sbb
fstpt
jp
iret
sarl
and
dec
js
jae
add
stc
inc
call
add
test
mov
ljmp
sbb
mov
in
dec
and
movsl
rorl
ret
and
adc
xor
bound
cmp
mov
jge
jl
cld
loop
repz
or
cmpl
jp
pop
jbe
xlat
pop
inc
dec
dec
mov
icebp
sub
inc
int
xor
add
ljmp
stos
and
push
push
cmc
inc
insl
jae
mov
lcall
dec
cltd
ret
mov
inc
fwait
in
dec
xor
adc
stos
shrb
jge
enter
and
sbb
stc
fld
in
inc
shrb
les
in
aaa
sti
movsl
jno
cmp
lock
push
mov
add
jle
mov
and
les
je
jb
test
stc
int3
xchg
int
dec
mov
fdivs
sbb
lods
fs
xchg
and
push
enter
mov
jns
cmp
fdivr
push
ret
mov
popa
rorl
addl
jne
sbb
roll
std
or
test
push
dec
cltd
lahf
and
cmp
fmul
sub
ror
testb
mov
cs
cmp
lods
cltd
xchg
sbb
inc
xchg
jp
mov
and
das
hlt
push
adc
aad
xchg
dec
pop
aam
jno
es
mov
movsb
sbb
popa
es
mov
inc
fidivrs
lcall
xchg
mov
out
inc
fnsave
lds
ret
jno
mov
bound
cmp
hlt
push
aas
mov
imul
or
test
cmp
cmpsb
xchg
scas
jmp
jae
mov
push
loop
jb
mov
mov
leave
cmpsb
fwait
data16
cwtl
inc
cmp
inc
out
aam
jo
xor
pop
ret
pop
scas
andb
int
in
mov
xor
dec
xchg
push
cld
ret
or
jne
bound
mov
test
dec
into
cmp
ja
pop
mov
cmp
mov
xor
cmpb
flds
and
in
mov
or
cmp
mov
sbb
xchg
mov
and
adc
inc
adc
xorl
lock
dec
in
iret
loop
leave
push
sub
jb
jns
fdivrl
xor
pushf
mov
jmp
iret
ret
lret
daa
mov
cmpb
repnz
and
test
out
jg
xor
test
clc
push
sbb
sub
loopne
push
dec
xchg
out
pop
xchg
push
xchg
sbb
push
shlb
in
ja
dec
cmpsl
bound
rcr
nop
mov
adc
sub
and
xor
lcall
mov
sti
xchg
mov
cmpsb
packssdw
incl
iret
mov
push
jnp
mov
shrl
and
insb
and
cmpsl
mov
jns
leave
ljmp
cwtl
cli
out
dec
dec
int
frstor
push
loope
ljmp
adc
into
push
xchg
icebp
jge
xor
dec
mov
fidivrs
out
push
ja
inc
push
int
outsl
cmpsl
sbb
rep
shr
stos
jno
outsl
int3
mov
stos
stos
adc
mov
cli
and
xchg
hlt
sub
and
enter
cmp
pop
bnd
ds
sti
mov
pop
push
sub
jns
ret
icebp
cmc
sub
mov
adc
cmpsb
stos
fsubl
pop
jp
jne
inc
repz
sti
mov
in
jmp
sahf
filds
out
aad
xchg
and
test
pop
push
mov
adc
dec
popa
or
sub
fcomp
lods
pop
cmp
sub
rolb
out
mov
inc
aas
mov
ret
pop
int
mov
lret
loop
outsb
xor
push
xchg
pop
sbb
mov
imul
mov
push
repnz
test
sbb
sti
sbb
movl
lcall
js
jge
cmpsb
shl
jmp
cmp
mov
cwtl
xor
stos
jns
and
roll
push
xchg
cld
mov
out
gs
or
jge
xchg
mov
cmpsb
repnz
iret
adc
imul
cmp
sub
adcb
push
push
popa
pop
inc
aam
mov
sti
fldenv
push
push
mov
mov
or
int3
mov
jo
out
loop
aas
mov
sub
cld
xchg
xor
cs
and
clc
in
cmpb
ficoml
aaa
mov
mov
mov
stc
popf
test
mov
call
shrb
bswap
pop
sbb
dec
stos
fs
jp
push
cmp
aaa
sbb
pop
idivb
dec
fwait
stc
cmpsl
jns
sahf
lahf
and
jp
jmp
jle
stos
pop
dec
mov
popa
cmp
sub
outsb
jae
mov
cwtl
movsl
mov
cmp
cltd
test
push
adc
mov
rcrb
ss
jge
mov
jle
or
xchg
cmp
mov
in
jns
mov
jecxz
cmc
aad
clc
lret
mov
prefetcht1
jle
pop
mov
fwait
rcrl
lcall
mov
adc
sbb
cmp
sub
push
repnz
fstps
push
pop
andb
ss
insb
adc
push
bnd
les
cmpl
out
shlb
call
js
stc
jae
jo
sahf
dec
pop
ficoms
and
and
mov
mov
mov
cmp
faddl
fisubl
leave
mov
mov
es
ret
lcall
jo
adc
daa
xor
push
aaa
dec
dec
scas
xor
mov
bound
jo
lock
cli
aas
jle
mov
test
inc
fistpll
shlb
hlt
mov
pop
ja
mov
push
add
ret
pop
loop
out
xchg
inc
insl
lods
jae
push
dec
je
push
mov
dec
pop
adc
add
into
sbb
add
mov
mov
xchg
push
fldt
imul
mov
or
mov
lret
mov
jmp
inc
sub
jnp
mov
arpl
sub
adc
mov
jg
cs
aaa
ds
inc
repz
das
test
call
lahf
mov
into
xor
mov
jne
stos
int
jl
fadd
adc
cltd
out
adc
movsl
cmp
xor
sub
incl
push
mov
lock
cmp
out
xchg
cmp
mov
sub
push
pushf
lahf
jle
push
sti
fwait
int
daa
dec
in
fs
adc
push
rorb
cmp
lret
xchg
cmp
push
test
push
jle
xchg
mov
shlb
cmp
add
loopne
cwtl
pop
stos
and
testb
xchg
rorb
pop
in
dec
push
inc
inc
mov
push
cwtl
ret
cs
xor
jno
cmp
sti
add
dec
xor
lret
xchg
pop
jne
enter
jb
pop
xchg
inc
ja
jmp
jnp
mov
adc
add
mov
mov
jno
sbb
cltd
das
in
push
ret
rorl
adc
ret
cmp
cli
mov
jmp
mov
push
ret
repnz
cmpxchg
adc
test
inc
mov
mov
stos
aas
movsb
sub
imul
push
lods
sub
inc
and
stc
adc
mov
sub
insb
fidivl
inc
out
in
push
sahf
scas
and
icebp
jmp
addb
sbb
pop
outsl
scas
push
push
movsl
cmp
cmp
cmp
je
inc
mov
and
or
jb
xchg
mull
loop
and
pop
mov
lock
cmp
sub
xor
leave
push
add
icebp
mov
loop
fs
cmc
outsb
mov
in
add
aaa
cwtl
xor
or
movsb
lahf
push
sbb
es
andb
sbb
mov
sub
nop
jp
xlat
inc
int3
mov
pop
stos
xchg
jp
pushl
jmp
das
dec
dec
sub
mov
sub
scas
cmp
jo
lea
bound
jecxz
test
ja
out
jg
push
push
dec
push
jle
daa
push
outsb
int3
leave
dec
jg
into
pop
in
stc
call
xchg
dec
and
mov
jo
imul
repnz
stos
sarl
xchg
inc
cmp
in
lahf
pop
push
orb
stos
out
inc
adc
and
ja
or
mov
pop
in
je
pusha
inc
xchg
or
xlat
mov
mov
or
sti
iret
out
bound
stos
and
or
xchg
ds
pop
les
pop
mov
cmc
pop
mov
push
jl
aaa
test
xor
inc
or
mov
mov
lahf
jl
arpl
aam
jp
xor
loop
pop
iret
cld
inc
pushf
mov
jo
mov
cmpsl
out
fisttpl
sub
fs
iret
ret
ret
imul
add
out
idivb
cmpsl
add
adc
les
inc
fiaddl
cmp
ljmp
ss
and
insl
sarl
mov
fwait
mov
call
loop
lahf
enter
shr
pop
inc
fidivrs
ret
mov
cmpsb
jle
in
andl
sub
adc
dec
sbb
lock
or
cwtl
daa
mov
imul
dec
add
lods
cmc
pop
test
mov
pop
lods
arpl
xor
cmp
mov
push
stos
in
push
pop
and
mov
sbb
int
scas
cwtl
in
cmp
aas
sbb
push
cld
xor
push
lahf
xor
cmpsl
adc
add
adc
sbb
mov
mov
scas
xor
xchg
movsb
insb
add
lods
enter
push
clc
lret
sbb
adc
sti
ret
stc
or
sub
mov
xchg
clc
pop
es
jmp
push
and
push
pop
sbb
or
jnp
jb
out
rorl
sbb
adc
fs
ret
insb
hlt
push
aas
fcomp
clc
loopne
xchg
mov
xor
xor
call
xchg
jp
insl
popa
les
pop
negl
cmp
inc
cmovp
cmpsb
pop
mov
push
inc
gs
jns
mov
adc
shrl
cmpsb
cmp
imul
pop
mov
popf
xor
add
mov
mov
inc
mov
ffreep
jne
mul
call
repz
insb
es
idiv
push
xor
movsb
jno
adc
std
cli
add
addl
repnz
jmp
add
fld1
xchg
jecxz
adc
dec
and
out
pop
pop
pop
pop
or
pop
mov
xchg
popf
sti
shll
jo
pop
cmc
xchg
xor
lea
aam
loop
repz
test
test
adc
cmc
es
sarb
fcomps
cmp
cmpsl
push
sub
cs
pusha
loopne
shrb
xor
adc
sar
adc
inc
jmp
leave
imul
int3
mov
addb
sub
popa
addr16
les
xchg
into
test
bswap
lea
les
push
push
fmulp
les
push
shl
lret
push
pop
and
sub
mov
jge
push
jbe
fstpt
inc
ds
sub
cmp
pop
fstpt
jae
out
push
or
mov
mov
fldenv
int3
out
mov
pushf
jge
sub
movsb
or
cld
movsb
mov
dec
sub
push
mov
or
into
add
scas
addb
add
ret
iret
pop
insb
or
xor
adc
mov
inc
jb
inc
pushf
push
sub
test
test
imul
xchg
mov
jbe
inc
test
rcll
pop
and
pop
sbb
and
jp
push
jb
and
insb
cltd
adc
mov
das
int3
mov
pop
clc
outsl
les
adc
pop
cld
fs
jne
lahf
inc
ss
dec
xchg
pop
fsubr
loopne
cmp
test
cmp
adc
lret
sub
or
sbb
pop
mov
fdiv
jne
shl
aas
stos
mov
and
es
or
xchg
xchg
stos
jae
orb
lahf
sbb
rorl
int3
in
pop
lahf
xchg
sbb
lods
adcl
mov
sahf
scas
or
test
mov
in
jmp
xchg
sub
icebp
ret
inc
adc
ja
jmp
sub
bound
movsb
ja
jl
pop
dec
pop
data16
mov
pop
mov
icebp
cli
jecxz
mov
in
or
cmp
xchg
cmp
or
into
loop
leave
into
xchg
pop
pop
repz
dec
cmpsb
inc
aad
adc
add
and
std
push
add
ljmp
js
enter
mov
insb
mov
addr16
jmp
sarl
mov
adc
inc
out
enter
push
stos
push
jno
scas
xchg
iret
jle
pusha
ficoms
aaa
fs
and
xchg
js
push
sbb
xor
stos
xor
test
mov
xchg
mov
out
pop
test
adc
and
adc
test
push
dec
outsl
jno
pop
mov
movsb
jns
fs
and
dec
dec
js
aam
sub
push
repz
xchg
and
in
adc
and
pop
je
les
and
rorl
sub
and
sub
xchg
xchg
lret
cmpsl
icebp
shl
push
in
aad
xchg
or
ja
inc
inc
sbb
lods
mov
test
and
mov
xor
inc
cs
clc
adc
push
rcrl
mov
loop
lds
hlt
lods
cmp
jb
icebp
cli
fsubrl
jle
shll
jb
cli
ss
jae
out
xchg
int3
mov
mov
es
mov
push
ljmp
movsl
data16
pop
lret
popf
pop
adc
ljmp
insb
sub
fsubs
add
push
call
mov
das
jg
push
shl
testl
xchg
insb
cmp
and
add
push
js
mov
jle
lret
jmp
mov
mov
jno
add
bound
adc
dec
fcompl
push
mov
inc
mov
inc
aas
jns
ret
bound
fsubr
sbb
dec
mov
mov
pop
push
icebp
mov
mov
cmpsb
imul
cltd
push
rol
xchg
inc
jns
cld
xchg
inc
fistpl
mov
or
pushf
add
cmp
push
das
push
in
out
xchg
mov
sub
fwait
or
mov
mov
mov
jne
xor
lahf
jno
xor
loope
dec
mov
outsb
iret
lcall
enter
pop
inc
pop
mov
add
xor
je
faddl
dec
shrb
cmp
lret
fstpl
xor
lods
movsb
push
jl
jo
mov
adc
and
in
mov
mov
cmpsl
adc
push
rol
cli
cld
call
jg
iret
or
imul
cwtl
sub
push
jnp
mov
inc
shrb
test
mov
mov
add
ds
mov
icebp
faddl
push
sbb
int
aad
sub
push
adcl
adc
insl
pop
xor
pop
mov
lods
add
xchg
nop
call
cmp
rcr
sbb
sahf
xchg
loope
fcomi
mov
data16
outsb
cmpsb
in
pop
ja
or
int
cltd
add
mov
cmp
inc
mov
sahf
lea
xchg
or
inc
dec
mov
vinserti32x8
out
xor
std
push
lock
sub
into
call
addb
cmp
or
repz
add
stc
jge
mov
fsubrl
sbb
mov
mov
pop
or
inc
xchg
cmp
leave
pop
adc
mov
and
cli
in
or
cld
int3
stos
fdivl
mov
loope
jg
or
mov
mov
jle
and
jmp
and
cmp
cwtl
and
shrl
cld
das
xor
pop
jge
dec
sarl
sti
xor
mov
or
je
sbb
lahf
lock
call
inc
fnstenv
dec
mov
pop
adc
cmpsb
call
dec
lret
popf
push
jnp
scas
cmpl
in
addr16
xor
add
js
adc
sar
aad
sbb
or
sbb
enter
jg
popa
cmp
ja
sbbb
iret
fistpl
pop
jo
es
add
je
push
jge
divb
xchg
pusha
xchg
stos
nop
fisttpll
mov
pop
pop
test
sbb
push
dec
sub
pop
iret
inc
lea
lods
rcrb
or
push
iret
cmp
mov
in
mov
fldcw
scas
xchg
iret
rorl
dec
iret
outsl
in
jo
mov
jle
xchg
les
xchg
je
lret
test
dec
sahf
subb
mov
xor
cmp
cmc
nop
pop
mov
jge
xlat
mov
lahf
lret
neg
cmp
xor
out
jl
mov
in
inc
mov
lcall
in
addr16
outsl
nop
xor
loope
shr
fdivrp
rolb
and
dec
bound
test
mov
push
cmp
xchg
mov
adc
mov
dec
xchg
mov
ret
add
or
add
xchg
mov
out
pop
cld
repz
xor
imul
loopne
cld
std
mov
cmovg
and
sbb
add
lds
adc
add
and
lds
rcrb
outsl
ds
popf
mov
test
imul
ret
inc
sbb
cmp
sti
cmp
divl
add
mov
pop
mov
mov
mov
jl
jb
in
xor
dec
repnz
shl
pop
insl
xorb
mov
sar
push
fsubs
or
cmp
push
stc
xchg
push
and
ja
arpl
int3
inc
cmp
xor
jle
subb
push
sub
test
xchg
cmpsb
loope
leave
jns
push
iret
les
clc
es
inc
lea
divb
and
push
sti
dec
sub
neg
adc
or
cmpsl
cmpsb
mov
fcmovu
xchg
cltd
lcall
aam
fsts
scas
jo
add
mov
movb
xchg
cmp
int3
fwait
jmp
adcl
or
ret
test
decb
pop
sbb
mov
jge
lods
mov
inc
push
and
ss
push
out
mov
jecxz
mov
cmp
loopne
frstor
mov
mov
popf
xchg
jne
jno
cmc
rcr
pop
bound
lcall
push
popl
dec
aam
jbe
adc
dec
and
jb
mov
repnz
js
ror
jb
mov
out
sub
cmp
sub
popa
mov
pop
cmc
push
inc
lret
xor
jns
add
cmp
ficoml
out
data16
cld
lea
int3
or
and
add
push
orb
or
sub
and
orb
adc
nop
cmpb
loopne
jns
mov
mov
rorl
das
mov
lock
pop
add
xor
ret
andb
lcall
dec
pop
lahf
out
shrl
and
jb
cmp
in
mov
or
clc
dec
and
adc
fdivrl
jo
pop
push
sub
xchg
inc
dec
popa
add
cwtl
sbb
and
addr16
push
mov
ja
dec
subb
mov
jge
xchg
mov
mov
xchg
push
jp
cmp
xor
pop
mov
sbb
xor
gs
xor
lods
inc
dec
les
mov
pop
lret
sbb
xchg
bound
pusha
jo
loope
jo
iret
dec
jmp
inc
call
stc
add
pop
popf
adc
mov
mov
sub
cmp
loop
roll
cmpl
push
xor
in
lock
adc
imul
sub
or
sbb
push
cmpsb
adc
stc
outsl
lret
mov
adc
scas
adc
or
std
dec
xor
xor
cmpsb
ret
ret
inc
xor
push
test
pop
mov
xchg
outsl
in
jb
add
mov
sahf
fpatan
adc
test
mul
mov
mov
add
lcall
test
fst
cwtl
sbb
outsl
pop
jmp
xchg
adc
shrl
push
cmp
jo
ja
mov
push
je
aad
lahf
js
iret
mov
push
add
or
cmpb
jecxz
popa
das
pusha
or
lods
mov
xchg
lea
jbe
sbb
mov
cmpb
sub
and
and
rcll
fstps
add
in
mov
pop
jbe
pop
int
xchg
dec
sbb
outsl
cmpsb
jae
xor
push
rolb
repnz
pop
pusha
push
fidivrl
and
clc
jp
pop
inc
sub
fwait
add
pop
sub
rcrl
or
dec
inc
insl
and
push
add
cli
popf
or
clc
push
pop
jns
sbb
sub
out
xchg
loope
clc
das
push
fstpt
push
xchg
arpl
movsb
xchg
fwait
pop
lods
fcmove
pop
adc
inc
or
lret
mov
jo
hlt
leave
iret
push
mov
scas
or
adc
pop
test
repz
ret
or
xor
mov
xchg
test
pop
mov
sarl
xchg
mov
imulb
mov
mov
inc
sub
movsb
xchg
mov
loopne
pop
in
cli
popa
cmpsl
loopne
push
adc
arpl
insb
aas
lcall
cmc
call
jp
pushl
jae
cmp
push
fwait
jp
jne
jmp
sbb
testl
mov
and
fistps
inc
jbe
mov
or
pop
xor
sbb
clc
aas
loope
or
cmpsl
fisttpl
jl
mov
ljmp
jp
mov
mov
aad
adc
and
push
aas
push
jbe
fists
loope
fs
jne
js
pop
xchg
pushf
repnz
insl
mov
std
xchg
push
push
sub
jno
mov
dec
sarb
mov
jl
dec
push
cmp
mov
adc
pop
aaa
xchg
in
mov
inc
cmpl
lret
pop
test
movzwl
gs
sbb
sti
rcl
adc
jg
mov
das
out
in
jnp
add
icebp
rdmsr
mov
push
sbbb
jae
pop
lcall
adcl
fwait
and
lea
loope
stc
xlat
xchg
fwait
and
out
repnz
mov
and
popa
and
andb
sub
push
lret
sub
mov
mov
cmp
rcll
mov
in
fcomps
dec
push
stc
mov
shrl
mov
ja
mov
inc
fsubs
lds
and
pop
div
dec
out
mov
ret
shll
nop
ds
add
jecxz
jecxz
imul
lret
xor
std
jnp
dec
mov
in
loope
add
das
out
inc
jo
xchg
mov
and
movntps
jno
inc
in
mov
outsb
out
imul
les
imul
out
pop
decl
lds
mov
push
shl
jmp
jns
jl
mov
xchg
sub
xchg
mov
mov
popf
push
mov
xchg
mov
inc
les
pop
leave
mov
inc
pusha
adc
add
loope
idiv
mov
fsubs
fistps
packsswb
dec
mov
addr16
test
or
cmp
test
orl
out
sbb
rorb
xlat
lahf
dec
push
out
data16
pop
out
mov
call
adc
sahf
cmp
cmp
add
add
jne
or
adc
imul
insl
or
aam
cmp
jmp
out
jns
xchg
jb
fisubs
test
sbb
rolb
imul
sub
jl
fs
fs
ss
mov
push
mov
je
sub
cmpsb
stos
mov
mov
push
outsb
xchg
jl
ret
out
icebp
xchg
push
out
mov
mov
test
pop
mov
sbb
insl
aam
fcoms
push
test
repnz
jbe
movsl
lcall
mov
push
xor
adc
fstpt
cmpsl
movsb
jb
jbe
mov
mov
inc
insb
mov
insl
cmp
pop
cmp
ret
rcl
lcall
add
mov
sub
jns
xchg
pushf
mov
inc
sub
adc
inc
ret
mov
loope
leave
push
inc
ljmp
mov
out
rcl
pop
into
mov
repz
movsb
mov
insl
sbb
cld
mov
subb
jae
iret
lcall
or
jge
movsb
in
dec
pop
scas
pop
rolb
sbb
sahf
xor
pop
ss
xor
mov
add
or
ret
mov
call
mov
movsl
stos
popa
mov
stos
or
pop
nop
loope
shr
mov
inc
call
int
iret
cltd
pop
adc
test
jb
cmpsl
push
inc
jbe
gs
cli
jb
jo
and
push
ror
xchg
out
lods
sub
push
in
inc
xor
leave
dec
and
pusha
or
nop
adc
inc
or
data16
insb
outsb
xchg
enter
push
xlat
gs
adc
dec
add
movzwl
pop
popa
sub
divb
gs
and
mov
das
cmc
nop
pop
je
adc
lock
sbb
push
dec
inc
ja
repnz
ss
shlb
outsl
pop
mov
bound
and
dec
daa
xchg
dec
cld
push
push
stos
ds
loop
js
add
dec
loope
cmp
out
std
pop
sub
jns
adc
in
inc
cmp
xor
or
lock
dec
xchg
sbb
jne
jmp
mov
pop
mov
test
fcomps
xor
ds
push
pop
repnz
test
xchg
repz
jbe
xchg
js
dec
mov
inc
adc
xchg
and
pop
cli
outsb
addr16
cmp
push
sub
inc
movsl
and
xchg
pop
cmp
pusha
pushf
inc
pop
cmp
cli
jp
jecxz
lds
xchg
pop
push
mov
test
or
mov
inc
aaa
dec
stc
push
mov
adc
pop
push
mov
sbb
xor
and
ret
add
in
sbb
push
not
in
lahf
dec
cmp
jge
jb
sbb
mov
dec
mov
cld
movsb
icebp
sbb
mov
sti
out
or
xor
imulb
or
rcrl
pop
or
cwtl
sub
lods
add
sbb
adc
pop
xlat
in
sub
loopne
sub
divb
outsl
mov
out
pop
das
xchg
pop
cli
ds
dec
add
popf
stc
in
imul
dec
in
pusha
mov
push
sti
pop
inc
addr16
lret
xorb
movsb
pop
inc
mov
push
xchg
mov
xor
stos
fucom
enter
xor
push
aaa
fisttpl
roll
xchg
xor
and
shll
enter
lods
sub
pop
lcall
pop
fmul
lahf
popf
shll
int3
jns
inc
jl
sti
sbb
jo
pop
gs
loopne
arpl
mov
lret
pop
cmp
out
std
pop
jns
xchg
jns
pop
call
ret
popl
inc
lods
ret
popa
dec
mov
fiadds
mov
aam
xchg
inc
in
cltd
icebp
lret
jns
test
imul
cs
and
testl
mov
cmp
push
in
divl
mov
or
mov
in
pop
cmpsb
arpl
jno
mov
jp
mov
mov
xchg
out
ret
lock
ret
jo,pn
bound
push
or
popf
fisubl
jmp
sahf
repz
adc
cltd
cld
inc
es
push
daa
nop
in
add
inc
inc
rcrl
push
fstp
jo
and
aam
xor
rcll
jmp
fxch
dec
sbb
adc
andl
int3
mov
xchg
cs
inc
mov
pushw
adc
ja
xor
imul
dec
xchg
inc
inc
mov
out
push
pop
push
lahf
loope
add
xlat
pop
pop
and
lods
xchg
dec
daa
mov
xor
shrl
mov
popf
mov
outsl
mov
cmp
mov
and
imul
sti
int
and
jp
jno
negl
and
jns
repnz
test
jno
sub
push
in
fwait
arpl
xchg
push
sbb
cmp
daa
xchg
dec
std
add
jle
int3
jnp
lret
sub
or
jae
test
loope
mov
cmpsl
push
sar
popa
pop
xchg
mov
pop
cmp
mov
stos
fstpt
mov
sbb
loope
mov
or
loope
lods
pushf
cmp
and
or
ja
outsb
shll
arpl
cmp
in
cwtl
lahf
and
out
out
mov
iret
pop
inc
jbe
lds
jne
mov
divl
popf
sbb
into
inc
sub
xor
add
xchg
loope
adc
jb
mov
lahf
jo
sub
xor
jl
lcall
push
outsl
sub
fs
dec
popf
push
mov
mov
cmpxchg
xor
movsl
push
mov
stos
jp
rcrb
dec
cs
mov
ret
sub
xchg
ja
mov
mov
sbb
mov
mov
and
call
cmc
lods
fcompp
mov
outsb
inc
lcall
out
push
cld
mov
push
fstpl
jb
arpl
imul
push
data16
cmp
incb
mov
filds
push
add
shr
xchg
not
lods
pushf
ja
sbb
outsl
outsl
pop
xchg
int3
loope
push
ret
scas
imul
inc
mov
and
xor
sbb
push
jmp
jmp
inc
inc
popf
jecxz
sbb
stc
sbb
insb
imul
jne
or
mov
leave
mov
cmp
imul
in
jecxz
pop
mov
test
stos
cmp
leave
iret
mov
scas
xchg
push
popf
push
daa
loop
inc
ljmp
xchg
pavgb
in
stos
cld
sub
testl
or
inc
mov
pop
nop
pop
jae
and
mov
or
adc
jae
je
jmp
mov
cwtl
xchg
sub
mov
rolb
out
lods
push
leave
out
push
push
pop
cmp
or
jge
pop
cwtl
icebp
in
or
in
loope
into
mov
xor
cmpsl
imul
cmp
xchg
pusha
mov
je
leave
mov
aas
sbb
test
mov
and
rorl
cmc
jbe
aaa
cmpsl
push
jnp
jae
dec
xor
pusha
xor
cmp
pop
xor
in
adc
lret
pushf
test
pop
movsb
push
pmaxub
leave
aam
lds
push
dec
dec
and
xchg
mov
xchg
aas
mov
cmp
movsb
call
pop
daa
ret
jmp
inc
fwait
scas
jl
and
xchg
loop
push
inc
lds
je
movsb
push
mov
and
push
mov
dec
fistpl
add
cli
aaa
mov
xlat
ret
fsts
test
jmp
inc
fdivrs
xchg
inc
out
das
es
push
fcoml
jecxz
icebp
int
cld
jnp
dec
push
shr
mov
pop
js
enter
scas
lret
leave
mov
adc
xchg
dec
sahf
mov
inc
push
push
jg
mov
stc
pop
xor
cli
inc
inc
sarb
outsl
insl
jp
push
inc
movsl
mov
fbld
inc
inc
cmp
test
xorl
icebp
sbb
out
dec
pop
sub
mov
fildll
cmp
jae
mov
mov
or
dec
fisubl
rclb
popf
fnsave
lcall
addr16
or
mov
shlb
mov
stc
int3
cltd
mov
adc
adc
mov
mov
inc
xchg
int
mov
mov
out
mov
int
cs
jl
imul
cld
addr16
push
xchg
sbb
or
pop
sti
xchg
test
jmp
cld
jae
fld
sub
pop
jb
push
fwait
adc
mov
sahf
mov
dec
jno
sbb
popa
sub
arpl
adc
insl
push
loopne
xchg
jns
and
cmpsb
jle
mov
push
pop
inc
sub
jb
xor
xor
hlt
and
push
daa
jmp
fdivs
enter
lock
rcrb
inc
xor
shl
cli
jp
jne
arpl
xor
bound
add
shll
call
xor
shll
jnp
jns
andb
fcompl
mov
and
push
push
fcompl
fisubs
jnp
adc
stc
add
jbe
jae
lods
mulb
pop
xchg
push
xchg
jle
dec
jp
movsl
mov
movsl
daa
xchg
cmc
dec
push
mov
add
sub
cmpsb
adc
push
push
adcb
rclb
xor
xchg
sub
call
push
xor
fs
push
sbb
xorl
addl
mov
push
je
les
sti
int3
rorb
hlt
aad
cmp
add
loopne
lret
add
add
test
sub
xor
push
adc
inc
outsl
stc
xor
mov
xor
pop
ret
xchg
ss
scas
std
mov
aad
nop
test
mov
add
cld
aas
je
jbe
in
les
xchg
dec
out
jg,pn
aas
mov
mov
jns
lret
inc
aas
jo
jmp
lds
jne
icebp
pushl
fsubl
sti
xor
cwtl
ja
jg
leave
sbb
arpl
cltd
fidivs
popf
mov
adc
pop
js
pop
and
popf
cmpsl
mov
sub
add
es
ja
fsub
leave
sbb
inc
aad
test
out
aad
adc
out
shlb
cmpsb
and
jg
repz
xor
imul
pop
xchg
cmp
or
xor
push
fs
lahf
hlt
xchg
inc
lret
hlt
aad
es
stos
xor
mov
pushf
xchg
sub
xchg
das
jecxz
adc
loope
add
clc
cmp
push
mov
mov
cmpsl
out
push
xor
stos
mov
bound
push
push
js
dec
arpl
loopne
jnp
sub
mov
cmp
cli
faddl
cmp
std
nop
pushf
lods
sarb
insb
inc
inc
and
xchg
jge
stc
fsubrp
cli
xchg
fbstp
cmp
jno
insb
xchg
adc
push
xor
lock
clc
test
and
out
or
sub
cmpsb
push
ret
add
sub
imul
out
pop
mov
out
out
sbb
adc
inc
lds
mov
mov
fisubrs
aas
pusha
ffreep
cmpsb
es
test
lahf
cli
shrb
scas
sbb
mov
pusha
dec
jbe
jnp
jne
out
mov
negl
inc
filds
push
je
xor
clc
in
in
mov
mov
sti
sbb
and
push
sahf
or
ss
out
lock
gs
outsb
sbb
lods
rcl
push
push
cmp
jmp
inc
arpl
jbe
jnp
dec
pop
jno
jg
mov
shl
arpl
js
inc
xlat
in
push
and
std
mov
pop
push
mov
lds
out
jge
push
aaa
dec
xchg
dec
jecxz
frstor
mov
cs
cwtl
mov
add
xor
and
hlt
sub
das
out
movsl
cmc
dec
std
clc
or
xchg
scas
xchg
stos
lret
cltd
and
cmpsl
loope
adc
jns
dec
cmp
stos
imul
and
cmp
mov
mov
or
xchg
mov
clc
pop
ret
jo
and
sub
mov
rorl
out
mov
xchg
jmp
fnstcw
cwtl
xchg
subb
addl
fisttpl
mov
sar
or
imul
lds
mov
dec
and
mov
adc
mov
xchg
xor
adc
sahf
inc
xchg
repz
aas
shrl
icebp
xchg
mov
push
outsb
cld
rol
sbb
cmp
mov
adc
loopne
fbld
stc
loope
shlb
es
add
fs
lcall
dec
adc
xlat
movsb
std
stos
adc
js
dec
fnstenv
loope
test
hlt
movsl
into
in
or
stos
lret
dec
jmp
sbb
movsb
scas
inc
dec
push
and
lods
xor
fisttps
scas
add
dec
movl
push
mov
adc
inc
aas
inc
and
xchg
and
out
xor
sub
sub
ret
lods
inc
aad
rcll
loop
leave
adc
data16
insb
pmaxub
mov
and
xchg
mov
aas
jmp
jnp
and
or
add
jnp
jne
arpl
mov
shlb
mov
pop
dec
jl
jp
or
stc
imul
bound
and
sub
jecxz
mov
pusha
fistps
iret
xor
cmp
mov
pop
into
aad
jns
je
ffreep
les
mov
cmp
call
cmpsl
dec
pop
clc
inc
lahf
mov
or
ja
popa
lahf
mov
repz
xchg
sbb
dec
pop
in
sbb
loop
or
aad
cs
mov
fisubrl
das
pop
push
into
jbe
stc
test
push
adc
fmuls
movsb
add
or
jecxz
or
push
push
xchg
movsl
stos
cltd
jo
repnz
mov
sbb
inc
push
mov
nop
fsubl
cmp
pop
dec
dec
mov
das
push
cld
scas
lret
mulb
test
and
in
sub
inc
pusha
repz
add
push
dec
xor
sub
gs
icebp
sbb
sub
push
and
pop
fs
and
mov
lahf
or
gs
sub
add
mov
mov
push
sub
popa
loope
adc
popa
cmp
loope
ror
and
xchg
and
aas
mov
cmp
mov
xchg
fdivrs
jo
and
cmpsb
pop
mov
in
mov
rcrb
lods
pop
pop
lahf
dec
push
mov
pmullw
jno
sub
cwtl
xor
cld
cmc
aaa
fidivs
cmp
mov
add
mov
sub
sub
and
adc
push
xchg
lret
cld
imul
mov
inc
into
test
lock
cmc
lret
xor
jmp
dec
fidivs
xor
fcmovnu
xchg
cmp
adc
add
cld
xlat
cmp
xchg
xchg
loop
outsb
xchg
loopne
or
mov
cmpsb
fisttpl
mov
sahf
mov
sahf
jp
adc
lret
adc
out
pop
mov
imul
mov
cmpsb
movsb
lcall
dec
popa
out
cmp
push
or
sarb
xor
lods
dec
das
add
inc
push
cltd
cs
leave
jbe
les
cmp
stos
jne
in
xchg
in
dec
mov
sbb
inc
sarl
adc
es
lcall
add
inc
js
jmp
sbb
ret
test
or
xchg
mov
sbb
cmp
inc
jno
lds
xor
pop
lea
dec
jbe
cltd
or
sbb
in
adc
sub
mov
insb
dec
aas
mov
les
or
cmp
push
in
xchg
and
loope
mov
jp
mov
sti
js
mov
mov
add
jge
dec
stos
mov
push
mov
cmp
cltd
add
sahf
jge
jp
dec
adc
shll
mov
ret
fistpl
loop
push
movsb
mov
xchg
push
cmp
mov
pop
and
stc
lcall
mov
fcmovbe
mov
sarl
or
jnp
jne
inc
push
sub
jg
call
xor
and
sbb
fcmove
rolb
adc
scas
push
int3
fsubrl
repz
loope
or
mov
ds
stc
inc
lock
rcr
loop
mov
pop
js
jmp
cld
mov
call
lods
inc
jl
arpl
es
adc
out
je
mov
xlat
sub
dec
cs
ficomps
std
mov
or
fsub
sbb
jecxz
aas
jmp
ficompl
outsl
ljmp
psrlw
inc
call
test
ficoml
aas
pop
outsb
movsl
xchg
sub
dec
jg
pop
or
mov
sub
inc
lret
ja
lds
bound
mov
adc
mov
mov
dec
lcall
decl
jbe
or
movsb
out
sti
cltd
add
or
repnz
fsubrs
xor
cwtl
xchg
data16
daa
popl
aam
push
stos
push
dec
dec
pop
cmpsb
js
adcb
in
pop
xchg
not
ds
pop
pushl
mov
push
or
in
cli
mov
jl
gs
roll
cmp
daa
out
cmp
xchg
and
arpl
loopne
mov
inc
leave
pop
cpuid
jne
in
cli
jecxz
jae
and
sti
or
mov
inc
pop
out
rcrb
jle
mov
enter
mov
pop
inc
popf
inc
or
inc
xor
stc
push
push
fnstsw
xor
fs
jno
or
pop
mov
mov
mov
pushf
push
inc
aam
in
ficompl
push
xor
pop
cltd
clc
negb
imul
cld
xor
es
in
push
sub
cmpsl
pop
jp
add
xor
or
nop
cmp
dec
repz
aam
and
out
mov
nop
inc
incl
push
mov
call
pop
add
test
cmc
cld
sti
imul
mov
pop
scas
fbld
pop
sub
outsb
inc
xor
ret
sbb
adc
lds
jnp
mov
iret
dec
test
mov
mov
mov
movl
inc
adcb
add
push
mov
jge
xor
in
jmp
or
fidivl
mov
adc
bound
andl
jbe
repz
in
out
mov
dec
sub
mov
jae
lahf
sti
xchg
and
jns
ds
shrb
or
call
jecxz
in
inc
dec
cmp
pop
xchg
push
jno
dec
popf
add
xchg
push
cmp
add
pop
orl
jl
or
outsb
push
sti
adcl
repz
add
dec
divb
mov
mov
out
test
stc
jmp
out
xchg
xchg
xor
clc
lcall
fwait
add
inc
repz
sub
adc
inc
test
ret
lds
inc
enter
mov
call
mov
lcall
scas
iret
psubq
fsts
imul
ficoms
ss
inc
and
inc
pusha
shrl
xlat
pop
adc
mov
xor
inc
imul
push
jge
sub
dec
sbb
jg
push
or
fs
fdivrp
or
xor
push
adc
xor
mov
es
push
sbb
xor
sub
push
fdiv
jecxz
inc
mov
ret
testb
repnz
and
dec
add
cld
loop
add
inc
cmp
xchg
add
cwtl
xchg
xchg
imull
cli
das
xor
dec
test
js
enter
xchg
inc
imul
inc
sbb
test
sbb
or
imul
xor
es
jle
cmc
jmp
mov
cmpsl
ljmp
pop
jo
sub
in
inc
jno
sbb
in
dec
mov
inc
sbb
cmp
mov
pop
dec
popf
imulb
out
lds
adc
ja
je,pn
cwtl
add
mov
inc
pop
call
mov
mov
bound
dec
xlat
loop
out
cmp
dec
mov
jae
mov
mov
iret
push
adc
cmp
data16
jb
insb
popf
in
xchg
ss
and
insb
add
jo
rclb
lds
sbb
or
xchg
cmc
pop
or
push
movsb
cli
leave
out
cmovs
das
or
and
fcmove
aam
sar
mov
fucomip
or
int3
pop
fldcw
scas
loop
repnz
lea
sub
lods
mov
data16
jo
movsb
pop
ret
movsb
add
cwtl
ljmp
add
adc
cmpsb
add
or
xchg
cmp
adc
out
decb
jns
ds
fisubrl
das
fcmovbe
inc
sbb
pop
test
adc
sarb
mov
testl
mov
nop
dec
xor
mov
xor
cli
dec
pop
mov
cmp
popf
adc
push
shll
loop
mov
or
push
outsb
pusha
push
xchg
mov
lock
aam
ss
insl
fcoms
popf
insl
mov
mov
and
jg
mov
jno
mov
rcrb
add
inc
testb
stos
push
out
scas
ss
pop
sub
test
popf
pop
sarb
jno
das
aam
jns
dec
adc
inc
mov
mov
cmpsb
fdivrl
jns
loope
cli
and
xor
into
cli
int
scas
mov
push
lds
jns
pop
push
xchg
pop
xor
xor
loopne
cmp
pop
outsl
out
cmc
and
mov
not
push
pop
push
and
or
lock
xchg
xor
test
movsb
inc
fiaddl
aaa
fnop
mov
push
in
push
in
dec
xor
ja
jns
lds
push
mov
inc
and
cmp
sub
scas
pusha
pop
lock
mov
dec
cmc
xorl
scas
test
mov
lcall
dec
jl
mov
cmp
add
xorl
add
int3
js
bound
movsb
mov
inc
aad
sub
ret
push
test
mov
mov
sub
cld
fidivrs
jmp
jne
fdivs
mov
mov
mov
fdivrl
xchg
sti
dec
ret
or
jmp
sub
ffree
sahf
jp
das
inc
xchg
jnp
call
cmp
mov
sub
je
add
jp
pushf
or
jl
pop
lcall
xchg
loop
add
shrb
ljmp
popa
insb
push
push
and
jl
in
jl
mov
ljmp
mov
xor
dec
mov
mov
xlat
cwtl
lcall
mov
out
inc
mov
nop
rcrl
mov
stos
and
sbb
mov
xchg
arpl
adc
cmp
nop
mov
aad
cmp
cmp
int
inc
stos
or
add
pop
fbstp
lods
adc
jbe
leave
andl
sti
nop
pop
aaa
imul
iret
push
into
xchg
push
aaa
stos
int3
test
stc
fbstp
mov
stos
and
sti
jb
cltd
dec
imul
mov
xlat
stos
ret
xor
jg
xor
cmpl
cmp
jmp
jno
and
xor
mov
faddl
lcall
or
call
mov
cmp
inc
scas
dec
push
les
adc
jecxz
cltd
jmp
mov
or
cwtl
push
push
popa
cmp
mull
out
test
icebp
xor
pop
lock
aaa
sti
mov
sarl
f2xm1
insb
lock
insl
sbb
jge
push
or
cmp
lock
negb
xchg
cli
in
leave
mov
icebp
jne
jne
mov
cmp
or
lods
scas
leave
outsl
js
movsl
xchg
mov
adc
xor
sub
mov
lock
jl
xor
adc
sub
push
icebp
add
mov
sub
cmpl
push
mov
mov
mov
cmp
es
pop
and
int
addr16
xor
jb
push
cld
fsubrs
dec
scas
int
pop
and
insb
lcall
cli
sbb
dec
loopne
pusha
mov
popa
push
lret
or
call
fsqrt
scas
cli
xchg
push
ljmp
notl
jmp
mov
pop
pop
dec
xor
jne
xor
sahf
jb
cmp
cmp
jae
sarb
add
aam
ds
sahf
aam
inc
mov
rcl
sbb
push
imul
or
fisubrs
addr16
pop
xchg
sbb
add
add
subl
or
jp
lret
pop
sub
dec
dec
pop
cmp
and
pop
mov
test
mov
cmp
ds
lahf
filds
dec
or
icebp
pop
rol
out
xorb
fdiv
out
sbb
dec
movsb
shl
std
std
fcoml
inc
dec
rcl
idiv
sbb
ret
out
adc
cmp
aas
dec
fsubl
adc
test
int
ds
dec
das
mov
fcomps
mov
xchg
aam
insl
ja
xchg
mov
int3
sub
jbe
sar
sbb
movsl
shlb
pop
xor
push
sub
sarl
and
xor
inc
mov
popa
icebp
inc
adc
jge
push
arpl
xor
cld
push
fistpll
fistpll
mull
xchg
inc
cwtl
inc
fisttps
jecxz
or
imul
lret
es
push
cmp
pop
sbb
cmp
mov
cmpsl
loopne
inc
xchg
out
or
aam
int3
push
loop
iret
xor
xchg
mov
and
movsb
xchg
fbld
sub
shlb
into
es
adc
sarl
fwait
lods
test
jo
enter
sti
fisubrs
leave
inc
repz
int3
jb
pop
mov
jbe
lock
xchg
repnz
mov
inc
pop
fmuls
cli
sahf
mov
cmp
rclb
mov
inc
imul
call
xchg
sub
scas
jae
inc
xchg
test
push
lods
mov
or
push
test
test
mov
arpl
test
jne
aad
out
mov
pusha
pop
and
inc
ret
pop
pop
repz
gs
out
fbstp
leave
sahf
and
das
mov
bound
xchg
stc
mov
insl
test
xor
insl
xchg
push
and
stos
in
cmp
mov
test
out
addr16
in
repnz
dec
cmpsb
or
das
jle
adc
ficoms
pop
pusha
repnz
push
enter
xor
orl
sub
mov
stos
scas
out
ds
or
scas
sub
roll
push
xchg
gs
inc
daa
je
lret
mov
mov
icebp
daa
jbe
icebp
dec
fnstcw
stos
mov
enter
arpl
es
dec
lret
movsb
add
sub
adc
xchg
mov
andb
out
sbb
mov
mov
push
jno
mov
dec
dec
push
test
xor
pop
xchg
jge
sub
fistl
pop
jmp
insb
aas
inc
popa
movsb
pop
dec
mov
sub
jmp
sbb
lods
sub
fistl
mov
fisubrs
add
push
pushf
sbb
std
add
sti
mov
ret
clc
pop
push
cwtl
and
fs
rorl
push
mov
rolb
fwait
push
loope
cmp
bound
xchg
inc
gs
test
out
pop
inc
cmp
jb
jmp
jb
xor
mov
sbb
mov
and
inc
xor
jmp
int3
mov
fldcw
and
push
test
lds
hlt
sti
xor
roll
dec
addr16
xor
movsb
adc
call
add
stc
jecxz
bound
lods
je
inc
dec
adc
movsb
cmpsb
rcrl
cmp
sbb
jg
int
ds
xchg
add
aaa
xor
xor
mov
addr16
jp
xlat
rol
inc
rclb
dec
aam
pop
sbb
inc
imul
xor
pop
or
jno
test
ret
push
sti
mov
pop
daa
in
and
loopne
pop
push
or
push
ret
inc
jo
cmp
leave
xor
clc
xlat
rol
fbstp
push
lock
orl
outsl
add
adc
hlt
ss
subl
dec
xor
cmpsl
mov
mov
rcr
sub
loopne
sbb
sub
and
sbb
enter
testl
in
mov
popf
sarl
fstl
test
leave
push
stc
adc
je
enter
inc
mov
or
xor
or
jl
popa
sub
rorl
das
pop
pusha
lock
in
lods
lods
xor
pop
mov
les
mov
popa
adc
iret
fsubs
inc
out
movsb
ret
inc
daa
sbb
jns
addb
movsl
mov
icebp
pop
lea
in
jp
int
shl
lret
sub
push
shrb
iret
in
sbb
mov
push
push
inc
lahf
mov
sbb
mov
sahf
outsb
xor
pop
xchg
mov
mov
movsb
mov
addr16
test
jno
xchg
dec
js
out
mov
lea
in
xchg
movb
mov
jns
adc
sahf
mov
xor
cmp
pop
cmp
aad
bound
ds
lahf
push
sub
sbb
lea
incb
sbb
sahf
ret
jl
sub
pop
sub
or
scas
jmp
mov
xor
sbb
add
sub
ljmp
sbb
dec
movsl
or
mov
cmp
pop
loop
push
sub
mov
fistpll
jns
jb
lahf
mov
adc
xchg
aas
pop
ja
mov
xor
cs
push
add
out
and
stos
inc
mov
jp
mulb
mov
jno
inc
std
or
pushf
iret
xchg
les
and
sarb
imul
insl
and
dec
adc
sbb
add
ficomps
lcall
mov
xchg
adc
fmuls
mov
int
jns
ficoml
pop
lds
loopne
jo
loop
fimull
pop
lret
fadds
ja
int
stc
fdiv
fildll
xchg
pop
inc
stos
add
xchg
mov
and
cmp
mov
mov
adc
jl
jmp
xor
xor
movsl
and
pop
shll
insb
adc
xor
aaa
subb
mov
pop
lahf
arpl
jnp
mov
dec
mov
mov
pop
add
push
jl
test
movsl
mov
xor
movsb
call
jecxz
pop
test
mov
popa
jge
dec
cmpsb
mov
fs
ficoms
insb
sub
jle
shll
cmc
scas
mov
fwait
lret
or
ja
outsb
shrb
dec
xor
shlb
or
rcll
pop
lahf
xchg
dec
push
ret
or
xchg
push
mov
popa
jp
popa
jb
mov
insl
dec
fcmovnu
cmp
dec
sub
mov
mov
jge
add
jp
mov
sbbb
les
xchg
cmpsl
negb
dec
loopne
sub
call
pop
shl
adc
add
popf
lds
push
xchg
and
push
cmpsl
add
fidivrl
pop
std
jmp
std
lods
out
xchg
inc
adc
shll
fidivl
fadd
sbb
test
or
jb
sub
lods
test
jnp
add
mov
cmp
mov
das
outsb
sahf
sbb
les
cld
and
mov
sbb
mov
cld
sbb
push
cmp
or
push
jmp
push
je
pop
mov
stc
insb
sbb
frstor
je
out
sahf
and
mov
shll
fildll
fidivrs
mov
sub
and
push
cmp
xchg
lods
hlt
pop
in
jmp
dec
mov
mulb
dec
xor
int
pop
xchg
and
xor
mov
mov
in
data16
add
push
arpl
mov
jmp
pusha
sahf
imul
in
test
pop
call
ja
es
inc
sbb
jg
cmp
mov
push
add
pusha
add
gs
push
mov
lea
insb
jmp
testl
in
call
and
lret
add
mov
sbb
sbb
insl
mov
fisubs
xchg
fsts
push
lods
inc
call
or
mov
inc
sbb
xchg
jmp
pushf
ja
rcrb
in
dec
sbb
adc
push
mov
sbb
int
cmp
sbb
repz
dec
and
push
xchg
mov
sub
dec
xor
xor
jae
pop
push
cld
ret
cmpl
into
push
scas
and
xchg
clc
stc
cmp
inc
pop
mov
arpl
adc
fwait
sub
movsb
insb
fsubrs
out
or
call
mov
sub
mov
xor
jp
xlat
shll
test
mov
sub
popa
ficompl
leave
lods
ljmp
mov
xchg
mov
lock
fcoms
aaa
lods
or
movsb
mov
inc
rolb
sub
cmp
stos
push
add
jb
xchg
xchg
aad
cmp
or
mov
icebp
les
fcomps
addl
insl
dec
pop
loope
in
bound
xchg
inc
mov
mov
fldl
insb
pop
mov
int3
xchg
cs
enter
xchg
lret
stc
aas
out
pushf
aas
jo
mov
push
dec
or
les
sbb
mov
jne
les
xor
lods
sub
insl
pop
ret
dec
getsec
mov
inc
mov
gs
mov
lret
mov
outsb
mov
ret
and
or
sbb
sbb
subb
repz
push
fstl
sub
or
pop
outsl
sti
xchg
sub
out
push
mov
rclb
subl
cld
pop
xlat
adc
fsubl
out
mov
mov
mov
into
mov
xchg
push
cltd
and
in
ss
sbb
ret
adc
fidivrl
insb
or
jbe
imul
sbbb
mov
cmpsl
xlat
scas
aas
sbb
adc
mov
frstor
add
and
sarb
jbe
lret
std
cmp
cli
mov
mov
cld
jb
xchg
dec
stos
dec
mov
inc
adc
mov
in
nop
addr16
mov
mov
std
mov
sub
jge
jmp
and
daa
notl
test
sub
adc
pop
xor
inc
enter
loop
data16
xchg
cwtl
xor
fptan
popf
cmc
cmovs
mov
dec
out
fldenv
loop
loopne
data16
cs
add
ds
out
sbb
add
lcall
ret
mov
fisttpl
lods
mov
popf
orl
adc
mov
ret
jge
push
lea
cmp
cmpsb
jae
lea
jae
in
mov
push
inc
xchg
xchg
aad
fcmovne
xor
push
sbb
mov
jns
cmpsb
and
xchg
cmp
xchg
mov
inc
add
aaa
mov
and
cmp
and
imull
or
dec
mov
test
xor
addr16
out
roll
push
in
data16
stc
pop
movsl
xchg
ret
dec
jb
jge
push
fimuls
xor
ret
sub
push
jl
sbb
lahf
cmpsb
jmp
cmp
inc
lret
scas
mov
or
sbbb
inc
cmp
sub
pop
les
push
cmp
jbe
div
xchg
jno
or
iret
fistps
lahf
push
fdivr
dec
into
lret
dec
cmp
xorb
add
inc
lret
mov
cmp
inc
jp
adc
insb
mov
sub
ret
jbe
push
mov
pop
sti
mov
sahf
and
aam
jp
dec
addr16
fs
call
push
mov
iret
aad
pop
outsb
movsb
insb
test
arpl
jo
add
push
aas
xor
repz
push
add
leave
inc
ljmp
mov
add
data16
mov
pop
xchg
into
jge
mov
push
lods
pop
cmpsb
xchg
mov
xchg
sbb
cmp
mov
into
xchg
dec
sbb
imul
jecxz,pt
push
test
mov
in
xrelease
pop
mov
sbb
fdivrs
pop
push
dec
mov
fmulp
out
je
fs
repnz
sti
rcl
std
pop
and
lods
jl
inc
dec
int3
push
inc
repz
add
pushf
mov
cli
mov
out
push
cmp
and
rolb
xor
adc
cli
mov
dec
mov
jge
jg
sub
mov
mov
cmpl
scas
xchg
inc
aad
push
dec
or
loope
in
push
mov
xor
hlt
loope
outsb
nop
aaa
mov
xor
outsl
jns
push
cmp
or
jb
push
xor
xchg
popa
into
aas
pop
dec
xor
inc
inc
setp
stc
cmpsb
pop
ljmp
fwait
aaa
jb
mov
lahf
jb
addr16
testb
das
leave
xchg
mov
xchg
mov
inc
into
scas
leave
xor
mov
xchg
pop
or
cmpb
aam
cmpsl
fildl
dec
mov
mov
ds
ret
rcrl
push
loopne
inc
gs
pushf
dec
jne
subl
push
or
mov
mov
inc
loopne
es
cmp
sarb
ja
shll
xor
fdivrs
repnz
jp
adc
jl
ret
push
or
xor
pop
mov
dec
ret
test
cwtl
xor
and
xlat
les
cmpsb
lahf
mov
shrl
in
shlb
add
and
loop
stc
xchg
add
loopne
lahf
data16
inc
jnp
xchg
cs
mov
pop
xor
test
dec
push
push
and
jg
mov
inc
mov
movsb
add
call
or
jle
sub
sub
lds
stc
push
sbb
jne
lcall
push
inc
sbb
das
inc
inc
pop
xchg
and
je
cmp
mov
insb
in
fwait
and
movsl
popa
and
clc
loope
or
xor
and
mov
mov
dec
ret
mov
pop
pop
jbe
inc
push
jb
mov
xor
pushf
and
popa
pop
mov
std
mov
idivb
pop
push
cwtl
xchg
cld
test
sbb
sbb
outsb
sahf
dec
sbb
xchg
mov
loop
rorb
ljmp
sbb
and
pop
mov
lock
xchg
je
mov
enter
call
std
aas
fldenv
clc
leave
cmp
xor
lock
cld
inc
adc
in
stc
inc
mov
adc
xchg
pushf
or
jl
push
stos
leave
in
lds
sbb
das
int3
pop
std
and
sbb
mov
in
test
xchg
fs
fsubl
cmpsl
cmp
in
inc
and
push
mov
inc
sar
mov
xor
cmp
out
jmp
sbb
or
movsl
mov
cmpsb
sub
xchg
test
ret
ja
out
push
dec
xchg
mov
ljmp
push
cmp
lods
arpl
lahf
push
test
ret
mov
lods
fs
loop
and
dec
adc
aaa
pop
xchg
push
jmp
add
push
sub
jecxz
cltd
cmp
pop
arpl
pushf
int3
fs
sarb
les
addr16
int
ss
push
std
pop
jecxz
loope
ret
cli
inc
sub
jl
mov
jp
push
mov
jle
pop
shll
adc
push
pop
test
fsts
nop
sar
add
pop
cmp
sub
sub
jle
stc
mov
pop
dec
add
cmc
inc
mov
fwait
test
lods
dec
mul
rcr
sti
and
xchg
mov
cmpsl
test
pop
mov
or
test
mov
mov
xor
adc
cmp
fucom
ss
xor
xchg
gs
pop
sarb
xchg
test
sub
sbb
cmp
cmc
and
add
js
ss
mov
push
iret
jge
fnstsw
loop
cli
popf
cmpsl
in
cld
int3
xor
cmp
sbb
mov
pop
sbb
scas
call
inc
rorb
gs
mov
dec
int
out
fists
push
dec
push
addr16
out
addb
push
subb
test
loop
xor
mov
scas
rcll
iret
xorb
xchg
stc
adcb
fwait
xchg
mov
mov
shll
inc
loop
aam
das
xchg
pop
adc
shlb
xor
fdivr
xchg
push
jmp
loop
test
mov
arpl
mov
insb
scas
jp
jns
sar
inc
mov
xchg
jae
in
xchg
push
push
push
jecxz
sbb
cmp
jmp
adc
aaa
nop
xchg
cmpsb
insb
fwait
test
lds
stos
je
pop
pusha
xchg
sub
and
push
jns
pop
sbb
popa
add
xor
shll
dec
in
pop
sbb
stc
repz
jnp
mov
push
xchg
jecxz
fcomps
mov
adc
or
sahf
pop
xchg
addr16
cmpsl
mov
sub
or
cmp
popl
sub
push
repnz
cmp
adc
xchg
shrl
lock
pop
sbb
add
dec
dec
jmp
push
or
int
hlt
sbb
pushf
gs
xchg
test
fcompl
or
sub
adc
push
lcall
movnti
rep
rcrl
sahf
cwtl
push
out
push
dec
js
pop
pusha
mov
xchg
xor
fbstp
js
and
pop
ret
stos
out
push
inc
adc
mov
pop
jecxz
or
fstpt
xchg
addr16
xchg
mov
sub
pop
mov
cmp
adc
inc
xor
cmpsl
in
pop
aaa
cmp
bnd
daa
lcall
xchg
sbb
orb
lret
aas
shll
mov
xor
pop
mov
pop
or
push
popa
shll
dec
xlat
lcall
lods
jnp
mov
adc
jl
mov
lret
aam
mov
or
dec
xor
psubusw
out
jnp
xor
sub
shlb
mov
sub
cltd
les
nop
movsl
scas
mov
out
sahf
mov
rorb
pop
push
adc
cmp
pop
mov
mov
adc
fisubl
imul
jmp
testb
loope
stos
pusha
xlat
fiaddl
xchg
test
mov
fs
or
out
sbbl
sbb
pop
mov
push
ret
sub
jp
sbb
fsubrs
lret
mov
enter
cmp
and
inc
push
mov
stc
xlat
test
pop
repnz
xor
ss
sbb
adc
es
jne
test
rcll
cld
push
pop
mov
inc
in
cltd
mov
pop
out
clc
test
sub
fnstsw
jne
stos
call
scas
push
pop
and
jb
lea
or
insl
imul
sbb
test
mov
ret
jge
ja
sub
mov
test
xchg
stos
lds
dec
jne
xor
mov
mov
clc
push
pop
repz
cmp
ret
out
inc
in
insl
outsl
negl
repnz
ret
xor
lock
fisubrl
out
add
dec
cmp
mov
sahf
and
repnz
cwtl
push
push
cmpsb
push
jo
xor
sbbb
fucom
mov
xchg
adc
bound
rcrb
jg
cmp
ficompl
jg
cmpsb
fidivl
iret
adc
leave
ret
into
shl
mov
ss
dec
pop
mov
in
daa
adc
outsb
pop
lret
cmpsl
mov
das
sbb
mov
out
fbld
cmp
jbe
fisubl
xor
mov
jo
cmpsl
cmpsl
das
dec
in
adc
imul
lret
sti
cmp
dec
ds
data16
sbb
push
jae
rclb
mov
lods
lods
cmovno
cmp
cs
cs
mov
adc
jnp
pop
es
lea
add
adc
inc
pop
push
repz
pop
insb
movl
pop
cmpsb
jge
pop
mov
fmuls
bound
jl
mov
push
aas
stos
mov
icebp
xchg
lea
inc
cmp
sbb
jmp
jmp
fildll
sbb
ficomps
dec
jae
and
cmp
xor
cmpsb
push
js
sbb
in
faddp
aaa
mov
pop
shl
test
repz
cmpsb
pop
jp
pop
push
add
add
fnstcw
sub
popf
mov
popa
mov
push
adc
iret
or
gs
xor
daa
adc
mov
add
orb
cmp
sbb
mov
inc
shlb
mov
sbb
xor
pop
addr16
jle
and
mov
dec
jle
pop
pop
lea
cwtl
jp
mov
xchg
add
mov
pop
push
shll
mov
add
andb
jl
enter
enter
cmp
mov
les
inc
dec
pop
push
sbb
or
out
je
cmpsl
sbb
ss
mov
xchg
nop
fwait
jecxz
add
pop
addr16
rol
ds
cmp
mov
jne
jno
in
inc
adc
mov
icebp
jae
dec
xchg
out
outsl
mov
imul
sbb
ja
mov
cmpsl
ljmpw
jnp
dec
sbb
mov
out
jp
inc
mov
arpl
ds
stc
mov
data16
xor
jmp
push
pop
cmp
in
je
add
testb
xor
test
scas
mov
scas
pop
cmp
vpmaxub
lcall
stos
rolb
je
leave
fnstsw
or
adc
das
pusha
lods
movsl
cs
mov
jle
pop
daa
adc
out
jb
lods
pop
mov
pop
xor
scas
jns
in
push
jns
cmpsl
or
xorl
sub
loopne
xchg
or
cmp
insl
adc
sub
incl
cmp
fiaddl
fs
lahf
adc
xorb
cs
fnsave
adc
in
xor
push
insb
fidivrs
frstor
cmp
cmp
sbb
rep
lret
dec
jg
lret
into
mov
push
xor
pushf
cmp
xchg
leave
in
dec
movsb
nop
or
mov
shlb
shlb
bound
lock
push
insb
insl
das
in
push
andl
inc
pop
cmpsb
mull
insl
jmp
jp
inc
fnstsw
cs
cmp
jne
adc
mov
pop
ja
lret
cmpsb
sub
mov
pop
ficoms
outsl
xor
ds
xchg
bound
out
push
jbe
pushf
aaa
or
pop
clc
in
mov
xchg
lods
cmc
movl
dec
add
and
insb
bound
lret
aam
stc
hlt
lods
add
lcall
inc
pop
xor
lcall
dec
push
sbb
das
lods
jo
cld
shll
mov
lods
cmp
adc
arpl
clc
lahf
pop
xchg
cmpsl
or
jno
enter
cltd
push
pop
fwait
leave
popf
icebp
sbb
icebp
jle
cmpsb
stos
and
pop
pop
cmc
lret
ds
es
stc
and
or
enter
mov
outsb
test
out
inc
nop
mov
in
gs
out
dec
push
or
mov
sub
cmpsb
jae
pop
push
sub
shrl
test
rol
data16
cmpl
arpl
jns
inc
shl
mov
les
xchg
pop
lods
in
test
mov
pop
and
dec
into
and
insl
fldt
sti
hlt
ds
and
hlt
loopne
mov
stos
mov
jb
scas
sbb
dec
cmp
or
mov
sahf
jns
rolb
aad
repz
int3
out
fldt
jmp
ja
push
enter
mov
dec
fdivr
jl
and
js
notb
lahf
dec
movsb
sub
bsr
mov
and
insb
aam
jno
inc
movsl
push
lods
or
jbe
mov
inc
add
jle
add
cmp
cmp
dec
add
jo
push
int3
js
mov
push
mov
sbb
mov
je
and
sub
mov
loope
xchg
loopne
fdivrl
add
inc
xchg
into
js
push
xchg
int3
nop
ss
mov
xor
out
adc
insb
rcl
test
shr
pmuludq
lock
pushf
insb
icebp
push
loop
popa
jb
mov
test
sbb
or
push
mov
xlat
imul
jo
push
fs
dec
mov
test
or
out
mov
icebp
sbb
mov
push
ds
mov
sbb
mov
sub
push
test
sbb
fcmovb
sbb
mov
pop
push
shrb
pusha
bound
mov
sub
cmpsb
push
hlt
cmp
push
mov
repnz
xchg
inc
inc
js
imul
scas
out
xor
idivb
into
mov
dec
dec
iret
jno
add
inc
push
jp
stc
cli
sub
in
mov
inc
mov
aas
enter
adc
pop
mov
insl
sub
neg
push
cld
stos
jmp
and
outsb
fidivrs
and
add
std
loopne
pop
push
xchg
pop
mov
add
mov
in
add
in
into
hlt
mov
xchg
cmp
arpl
add
xchg
sahf
dec
arpl
cmp
lahf
ja
ss
xor
xor
lds
ja
movsl
mov
mov
mov
fidivrl
fimuls
roll
jno
cwtl
dec
je
jmp
jl
or
inc
aam
outsb
movsb
pop
rorb
addr16
gs
sub
jno
notl
hlt
and
lods
loop
data16
dec
push
xor
xor
loopne
pusha
add
xchg
jp
fs
scas
adc
pop
mov
xchg
fdivr
lret
int
lock
jp
vcvtss2sd
xor
cld
jg
push
or
jae
or
sub
imul
outsb
incl
or
push
pop
push
sbb
push
or
pusha
pop
mov
mov
jmp
mov
pop
jne
lahf
test
cltd
adc
je
testl
cmp
sbb
fildll
andl
lea
in
add
mov
mov
add
dec
add
sbb
in
xchg
cmp
aad
lahf
xchg
sarb
iret
fdivs
mov
sub
or
fisttps
inc
ja
js
shl
cmp
out
xchg
pop
fs
or
mov
sbb
adcl
pop
push
dec
adc
mov
pop
mov
or
ss
popa
mov
pushf
mov
jg
add
leave
test
loop
bound
cmp
mov
jle
fdivrl
push
and
cwtl
jge
aad
icebp
out
shlb
aad
push
rclb
stos
and
dec
nop
std
mov
dec
rorl
lahf
lahf
dec
inc
hlt
inc
or
sbb
sbb
push
cltd
jg
sbb
stc
push
mov
push
pop
xchg
gs
sub
loope
push
das
test
sub
pop
rclb
leave
pop
or
into
aam
aas
pusha
dec
lea
dec
imul
mov
cmovs
aaa
lret
jg
inc
mov
sbb
pop
stos
in
lahf
pop
fnstenv
sub
push
fadds
shll
mov
pop
mov
popf
hlt
and
jle
mov
xor
repz
cmp
int
cwtl
push
fxch
in
stos
out
or
lods
mov
inc
pop
pop
jo
cmc
fs
sub
shll
in
call
push
stos
sub
add
fadds
aam
mov
out
and
mov
negl
mov
xchg
jle
or
jo
cmp
ja
add
clc
inc
pop
jns
pop
sub
xchg
pop
pop
lds
mov
sbb
cvtps2pd
mov
cmp
in
es
mov
jecxz
scas
andl
add
repnz
pop
in
and
sub
test
jmp
int
mov
in
inc
push
call
bound
jp
mov
out
xchg
pop
insl
or
mov
jle
dec
mov
mov
sbb
mov
xchg
mov
in
popf
mov
xor
insl
movl
dec
in
xor
fcom
jb
ljmp
lods
inc
jecxz
add
add
aaa
loopne
in
out
stos
pop
mov
jbe
icebp
lahf
jno
jo
das
jmp
sarl
cmc
out
frstor
imul
xchg
pop
out
inc
or
jle
jno
push
loopne
js
js
fdivrs
xor
cld
shll
sub
cmp
imul
leave
aam
enter
sbb
push
js
out
xchg
cs
stc
jnp
fdivrl
mov
fstp
mov
idivl
push
jg
cmc
inc
dec
push
sub
out
or
mov
in
out
jbe
lds
jnp
sbb
inc
not
and
ss
fmuls
mov
pop
sarb
repnz
jbe
in
cs
add
xchg
mov
add
cmp
cmp
sbb
jo
mov
dec
cmp
mov
mov
adc
sub
out
pusha
add
inc
ja
xor
mov
cmp
cmp
rcr
cs
mov
dec
imul
loopne
push
sbb
clc
sbbb
sti
cld
xchg
pop
in
push
ja
add
mov
fwait
jb
inc
mov
lods
jmp
mov
jbe
gs
je
nop
cmp
out
inc
bound
jo
xor
addr16
or
sub
mov
add
das
sbbb
mov
mov
pop
dec
xor
sub
mov
sub
mov
jp
and
jge
mov
andl
cmpsb
aad
jno
cmp
mov
negb
fsubrs
mov
lock
adc
ja
inc
pop
ret
pop
jge
mov
popf
ss
into
dec
lods
imul
mov
mov
shrl
loopne
adc
inc
mov
dec
idiv
mov
cmpsb
pop
xor
jmp
push
leave
add
jge
xchg
ljmp
jmp
pop
into
aad
cmc
push
roll
shr
and
pushf
or
dec
xor
inc
into
mov
fs
mov
pushw
icebp
icebp
adc
lock
or
mov
mov
cmp
pop
cmp
pop
mov
pop
mov
lcall
sub
insb
push
bound
popa
mov
mov
scas
cwtl
cmp
pop
out
ret
jae
push
loop
lock
int
cmp
into
or
test
fwait
adc
decl
inc
adc
dec
cmc
add
cmc
add
sub
bound
push
pop
fs
cmpb
fisubl
repnz
dec
dec
dec
pop
add
inc
cli
leave
xchg
std
adc
cmc
loope
jne
leave
sbb
in
lods
movsb
push
sbb
stos
dec
sub
adc
xchg
out
insb
add
sbb
add
testb
mov
or
jp
dec
cmpsl
std
jb
xor
cmp
jno
sub
mov
dec
jmp
movb
push
xchg
aam
dec
jns
xchg
mov
data16
mov
or
and
clc
movsl
fstpl
ja
cmpsb
xchg
test
dec
ljmp
cmp
or
test
pop
nop
fstps
pusha
jle
in
or
popa
ja
pop
jne
sub
loop
jge
enter
adcb
pop
mov
cmp
cwtl
push
fidivrs
rcrl
mov
xchg
cmp
dec
mov
mov
shll
in
sub
mov
gs
pop
jae
and
or
jg
iret
pop
mov
sub
out
das
scas
das
das
repnz
div
adcb
dec
stc
out
dec
sub
shll
ljmp
scas
orl
or
test
mov
inc
out
cmp
cmpsb
gs
je
scas
inc
repnz
pop
add
sbb
setg
xlat
sahf
cmc
in
es
xor
xchg
div
mov
cmp
into
pop
jb
dec
pop
mov
js
leave
push
jle
push
out
push
shrl
cmp
dec
lea
sarl
mov
jl
adc
cld
sbb
jle
out
and
mov
and
aaa
outsl
ret
mov
push
cmpsl
dec
sbb
ror
jge
jb
push
insb
xchg
and
dec
fistpll
mov
mov
xor
out
push
ret
aas
scas
data16
mov
call
inc
scas
push
cwtl
int3
and
scas
scas
push
push
sub
push
mov
mov
lea
and
xchg
inc
pop
xchg
les
jb
mov
dec
repnz
xchg
les
add
fidivrl
in
sub
push
lods
fwait
and
rcl
pop
orb
icebp
pop
bound
xor
jo
push
mov
cli
out
inc
enter
cmp
and
adc
ds
lcall
imul
pop
ja
xchg
cli
xchg
in
mov
xlat
xor
push
dec
cld
inc
xor
adc
push
jle
pushf
repz
jl
mov
dec
out
pop
xlat
cld
out
push
and
mov
nop
scas
bound
pop
mulb
pop
pusha
mov
test
pushf
outsb
xlat
xchg
dec
imul
imulw
add
adc
pop
sbb
dec
lret
addr16
jbe
inc
jl
push
cld
xchg
mov
ja
xchg
or
dec
jbe
es
mov
jbe
test
jle
mull
arpl
and
sub
movsb
mov
push
sarb
or
push
jbe
stos
jbe
mov
fsubrl
fs
out
mov
enter
jns
xchg
clc
test
int
hlt
mov
dec
xchg
or
inc
pop
sub
jb
rcll
push
dec
xchg
jne
xor
jge
out
push
jbe
ds
push
and
mov
movsl
popf
add
andb
inc
daa
dec
dec
repz
pop
int3
outsl
adc
into
jo
jg
cltd
outsl
mov
jbe
cmpsb
jp
cltd
lahf
mov
inc
lret
adc
jmp
emms
ficoml
pop
leave
out
in
sbb
xor
adc
es
xchg
enter
sbb
cmp
inc
xor
clc
xor
sbb
xor
lods
dec
push
sbbb
push
jp
xor
xor
movnti
repz
adc
inc
jmp
and
pop
push
xchg
stc
adc
mov
mov
lret
or
aad
ja
fstps
mov
jmp
xlat
push
add
inc
roll
xor
ss
cmpsb
mov
rcll
and
out
mov
pop
pop
ret
adc
add
add
or
jno
nop
cmp
cltd
pop
out
push
icebp
repz
inc
or
mov
pusha
loopne
divl
lock
repz
pop
xchg
jnp
or
sub
pop
fisubl
push
xor
in
cmpsl
daa
dec
sub
fiadds
sbb
stc
xchg
loopne
shll
xorb
je
out
jecxz
imul
inc
test
lds
out
push
shll
test
insl
cmp
pop
xor
pop
or
sub
jne
test
cltd
mov
je
imul
push
cmpsb
or
in
mov
pop
mov
add
cmp
loopne
or
mov
pop
bswap
ss
pop
loopne
mov
ja
mov
sti
cmp
mov
mov
rol
lret
jne
and
adc
jecxz
dec
into
fbld
jmp
inc
fs
in
sbb
mov
pop
push
mov
test
mov
mov
in
adc
jl
adc
dec
push
mov
inc
ret
mov
add
in
pop
test
fdivs
scas
cwtl
cltd
cmp
mov
ljmp
in
dec
cli
lahf
adcb
sbb
testl
dec
out
cmp
insb
mov
dec
xor
cmpsl
and
popf
lret
and
cmp
in
xchg
loopne
mov
int3
inc
stos
xlat
stos
call
mov
popf
push
cmp
or
pushf
dec
incl
jae
xchg
enter
ds
inc
shll
arpl
mov
pop
aas
xchg
mov
and
pop
cmpsl
mov
pop
inc
rcrl
mov
outsb
or
mov
sub
fstl
xor
pop
icebp
scas
adcl
popf
jne
ds
invd
test
and
in
or
and
lea
push
add
sub
incb
flds
xchg
dec
pcmpeqb
inc
mov
outsb
enter
test
mov
mov
jmp
push
fidivl
sub
jae
lea
jmp
xchg
imul
sbb
jl
fcompl
xor
jecxz
inc
adc
inc
and
cli
mov
imul
cs
add
daa
xor
rolb
fistpll
ret
dec
js
jle
leave
aaa
cmpsb
fsubl
mov
xlat
ds
jmp
jno
in
mov
cmc
xor
lret
movsl
lahf
es
in
push
lods
cmp
push
lods
and
xlat
xor
fs
decl
push
push
rorl
jle
neg
out
dec
or
cmp
lcall
pop
leave
imull
lea
push
fldcw
shll
jge
inc
jg
xchg
nop
push
xchg
movsl
sbb
loop
dec
cmpsb
int
addr16
rol
mov
xlat
out
mov
dec
mov
lahf
mov
push
mov
nop
sbbl
jbe
mov
adc
lret
lahf
xchg
icebp
lods
lret
push
scas
and
jne
pop
push
rol
xchg
imul
rcrl
inc
push
repz
hlt
mov
stc
cwtl
jno
outsl
pop
or
and
in
enter
outsl
stos
ljmp
lret
hlt
jp
out
cltd
xor
cs
or
pop
lahf
ss
bound
fwait
pop
lock
jo
pop
push
loope
dec
shll
pop
dec
dec
out
and
daa
dec
or
jmp
mov
xchg
enter
int
leave
clc
push
andb
add
cmp
stos
xchg
xchg
test
jle
push
fs
repz
pop
xor
sub
rcl
sbb
insl
sub
sub
jl
inc
out
rcl
jae
inc
ljmp
cmp
and
jp
out
sahf
subl
sarb
jmp
xor
sbb
rcrb
cmp
int
sub
add
rolb
cmc
xor
and
mov
mov
enter
loope
dec
jns
sub
movsb
sub
and
out
sub
stos
mov
mov
push
jbe
pop
popf
mov
aaa
ds
mov
sbb
ds
lock
mov
push
mov
xchg
jmp
lods
push
inc
clc
or
push
repnz
icebp
sub
lahf
cmp
rorl
in
push
inc
mov
frstor
jb
mov
and
mov
fsubp
lds
push
les
cmp
inc
pop
into
loope
sti
sbb
sbb
mov
mov
mov
inc
jbe
and
push
fprem
sub
inc
sti
sub
push
hlt
pop
pop
stos
aam
int
push
js
push
lods
loope
jb
loopne
int
sbb
push
insb
jle
sbb
jno
je
aas
dec
cltd
push
ljmp
stc
lret
outsl
add
xor
cld
rcrl
in
dec
jb
mov
pop
fst
mov
push
xor
in
ljmp
lret
fildll
movsl
mov
mov
into
loopne
fwait
cmp
lret
outsl
inc
jle
mov
cltd
arpl
out
mov
lods
popa
xchg
cmpsb
jnp
push
enter
sbb
push
adc
lret
insl
pop
bound
and
stos
test
or
dec
xor
int3
pop
cs
adc
pop
lcall
lret
mov
out
mov
xchg
jp
decl
dec
data16
leave
mov
xchg
in
imul
jecxz
insl
rcl
or
pushl
out
or
mov
loopne
add
ss
iret
cltd
imul
repnz
lds
pop
lret
push
lock
cmc
mov
adc
sub
stc
sbbb
sbb
shrl
int3
adc
popf
and
pop
xlat
fiaddl
lea
insb
pop
mov
sbb
push
mov
jecxz
decl
pop
xchg
cmp
inc
clc
jge
push
int
jg
out
or
mov
adc
inc
jae
dec
imul
xor
xchg
push
loop
aaa
out
or
fs
sub
pop
cmp
bound
dec
xchg
dec
into
add
mov
jmp
cltd
cli
pop
push
data16
pop
int
ret
mov
sarl
enter
mov
cmpsb
sahf
and
lea
xchg
cld
aam
imul
cmp
adc
mov
xorl
jg
pop
dec
cmpsl
call
pushf
mov
and
popa
dec
cs
dec
xor
xchg
and
xchg
push
xchg
mov
roll
addr16
pop
movsl
fwait
mov
sub
out
mov
imul
add
sub
adc
or
out
sub
out
outsb
jg
sbb
hlt
jg
jmp
std
xchg
xchg
js
dec
js
xchg
push
vmread
es
pop
subb
and
addl
repz
xor
inc
lea
cmp
adc
xchg
or
mov
xchg
insb
dec
rol
jb
xor
or
or
adc
js
dec
or
sub
jp
jb
add
out
je
mov
push
negl
push
sub
lcall
ss
add
dec
rcl
loop
js
loope
dec
cwtl
xchg
mov
add
pop
iret
xor
arpl
out
lahf
repz
dec
xchg
cmp
dec
dec
xchg
mov
iret
mov
inc
sub
or
ret
fucomip
les
dec
jnp
push
sahf
mov
mov
adc
iret
adc
aam
pop
sahf
mov
xchg
std
jo
sahf
push
mov
mov
outsb
sti
out
and
out
loopne
insl
pop
int3
fiaddl
xlat
rcrl
mov
jl
pop
xchg
nop
xchg
lret
pushf
push
cmp
inc
cmp
test
inc
loopne
orl
shrl
shll
dec
es
movsb
xor
mov
aas
aaa
fcoms
sahf
ret
cmp
les
adc
pop
xchg
jo
dec
pop
je
jle
dec
clc
jbe
push
add
hlt
out
rcr
push
inc
add
ja
and
mov
in
dec
cs
sub
aad
mov
mov
xor
push
in
push
aam
sbb
push
inc
push
mov
cltd
es
pop
xor
cmp
orb
cmc
lcall
call
sub
rorb
ljmp
and
daa
scas
test
shlb
jge
nop
ss
cmp
fucom
inc
int
cli
cmc
xlat
mov
mov
xor
push
sbb
inc
rorb
pop
jns
dec
mov
rolb
sbb
pop
sub
dec
adc
mov
sbb
cmp
xor
fcompl
mov
nop
mov
inc
jmp
jg
push
push
fstpl
sbb
mov
ja
outsb
mov
xlat
jo
lods
subl
jbe
xor
arpl
pop
pusha
pop
dec
mov
add
or
jl
xchg
pop
xor
fiadds
aaa
pop
lock
outsb
outsb
pop
aad
mov
ret
jge
jb
cmpsb
fsubl
lcall
shll
push
imul
int3
call
and
mov
push
fsubp
dec
mov
cmc
aaa
lock
int3
mov
and
xchg
jp
scas
pop
adc
dec
cld
push
movsl
xchg
jmp
sbb
pause
adc
cmp
xchg
rorl
pusha
cmp
ss
add
sahf
or
add
out
ficoms
xor
sarb
movsb
xor
or
pop
pop
xchg
xlat
mov
and
pop
or
pop
xchg
out
jnp
cmpsb
xchg
adc
mov
dec
adc
push
xor
cmpb
mov
xor
mov
xor
in
lea
aam
in
xlat
jp
mov
inc
inc
or
add
icebp
les
inc
mov
into
inc
negb
mul
insb
call
mul
gs
ds
jmp
mov
imul
cs
xor
sub
fucomip
outsl
inc
lret
loop
sbb
and
xchg
mov
daa
push
ja
mov
inc
loope
ds
out
or
icebp
mov
hlt
lea
out
and
mov
pop
mov
out
pop
inc
aas
ja
lods
lahf
lods
add
mov
sbb
inc
or
fbstp
or
insb
jno
push
pop
jo
adc
mov
inc
dec
push
sbb
sub
int3
mov
pop
popf
imul
push
es
sarl
hlt
icebp
jp
ss
mov
ja
pop
push
mov
mov
add
outsl
mov
hlt
mov
mov
xor
pop
mov
mov
mov
mov
gs
inc
sbb
and
push
jbe
rcll
testl
call
lret
push
and
xor
and
sbb
or
inc
push
clc
push
ret
repz
add
or
ss
push
adc
fiaddl
clc
fildl
and
push
mov
fbstp
mov
call
rcrl
movsb
xchg
sub
xor
xchg
lods
fldcw
and
mov
jae
add
adcb
xor
jecxz
push
subb
sub
push
lods
push
push
cmp
ja
fsubrs
clc
insl
push
sbb
aaa
cld
mov
dec
xchg
fwait
cmp
mov
or
out
gs
pop
stos
xor
dec
daa
pop
repnz
pop
rep
xor
lret
mov
hlt
mov
imul
adc
xchg
and
jp
movl
mov
lcall
push
jmp
sbb
fstl
push
mov
cmp
lahf
in
into
mov
mov
mov
or
and
loop
pop
cmpsb
shrl
ficompl
add
inc
nop
scas
movsl
mov
mov
or
mov
push
int
mov
incb
lods
inc
repnz
pop
shll
add
mov
movsb
add
fists
xchg
xchg
cmp
sbb
mov
aam
insb
dec
pop
sbb
loopne
aad
insl
mov
cs
pusha
stos
popf
push
mov
out
movsl
sahf
jmp
stc
cwtl
lock
pop
ds
mov
sbb
adc
or
lcall
xchg
mov
adc
sub
mov
or
xchg
andb
sub
cmpsl
movsl
je
sbb
mov
data16
int3
fisubrs
mov
cmp
incl
pop
push
jbe
and
rcr
rcrb
inc
mov
adc
into
scas
mov
xor
jecxz
xchg
jge
mov
aaa
jle
imull
loope
mov
push
fdiv
cmpsl
xchg
stos
push
outsl
cmp
aam
adc
push
ja
sub
or
xchg
inc
xor
aam
jl
pusha
jge
or
push
and
shlb
pop
ret
mov
pop
pop
and
inc
shlb
adc
in
mov
push
jecxz
test
lods
push
iret
jnp
jo
jecxz
sub
cmp
add
and
adc
out
clc
sub
lods
dec
lret
jae
push
repz
mov
sbb
adc
cwtl
cltd
jge
pop
popf
cltd
cmp
sbb
jp
pop
pop
aam
xchg
or
inc
jno
jb
fstps
mov
jbe
repz
popa
pop
mov
xor
sarl
push
mov
movsb
popf
out
push
mov
add
mov
xor
pop
cmpsl
loopne
out
add
fsubrs
mov
or
sar
inc
mov
das
sti
adc
pop
fnstenv
mov
roll
jns
sub
cld
std
dec
sub
sub
jmp
out
jne
mov
les
mov
sbb
dec
data16
mov
movsl
xor
pop
sbb
or
push
ficomps
pop
or
faddl
fcmove
push
testb
nop
out
xchg
arpl
pop
jge
subl
mov
nop
out
xor
push
sbb
fidivrs
and
push
xchg
mov
push
imul
ret
insl
out
or
stc
cmp
cmpsl
add
sbb
outsb
dec
xchg
sbb
cmp
inc
rorl
jo
js
fwait
cwtl
xor
cld
inc
pop
lret
sbb
inc
pop
out
sar
cltd
jae
push
inc
fs
ss
mov
push
negb
jo
or
jno
or
pop
lds
add
out
or
mov
test
stos
test
out
push
xor
es
mov
mov
clc
jmp
paddusw
inc
dec
test
mov
inc
mov
fwait
mov
pop
jmp
je
add
xor
fidivrl
adc
pop
popa
pusha
sub
inc
stos
into
fucomp
sarb
imul
in
daa
sahf
push
aad
xor
push
inc
jae
into
xor
jecxz
inc
push
es
push
push
cmpsb
lods
sahf
test
ret
push
enter
xor
cs
cli
adc
aad
out
dec
push
and
sub
mov
push
pop
mov
mov
inc
sbb
ja
in
add
inc
iret
sub
loop
dec
xor
outsl
mov
inc
test
pushf
imul
and
xor
in
mov
sti
add
pop
addr16
in
mov
fcmove
and
xchg
jmp
jns
popf
and
test
mov
pop
dec
adc
stos
lds
scas
push
into
movsl
adc
jg
shll
shrb
add
mov
push
movsl
mov
add
or
ds
cmp
les
pop
out
xchg
movsl
mov
loope
into
cli
cmp
push
and
outsb
pusha
adc
into
xchg
outsl
mov
xchg
dec
pop
xor
pop
arpl
mov
stos
pop
or
lods
outsb
mull
cmp
dec
out
mov
jp
adc
sbb
mov
int
and
scas
dec
popa
in
mov
lahf
or
push
call
ljmp
cmp
push
xchg
mov
sub
fidivrl
lods
iret
sti
aaa
pop
dec
ret
nop
mov
adc
xchg
dec
or
stos
mov
lret
pop
cmpsl
xlat
stc
xchg
outsb
call
les
jno
cmp
xchg
daa
leave
addr16
sbb
aad
aam
idivb
cmp
aaa
fisubrl
sub
adc
call
pop
jmp
push
cld
aas
sbb
mov
adc
pusha
jp
mov
insb
cli
repnz
dec
jae
in
jp
jae,pt
stos
das
aas
sbbl
jp
fiaddl
loope
fdivrs
rolb
sbb
js
scas
ror
movsl
push
push
mov
mov
mov
add
mov
mov
andl
test
insl
lock
xchg
movsb
rorl
dec
je
imul
fistpll
fdivrs
cmp
scas
lods
mov
bound
mov
mov
mov
lea
popa
inc
rorb
cmp
fildl
sbb
decl
sbb
sarb
movsl
dec
dec
or
or
jmp
inc
dec
movsb
jl
push
pushf
dec
dec
adc
out
je
mov
rorb
cs
push
add
add
adc
sahf
mov
mov
jecxz
or
pop
bound
push
imul
ds
push
or
adc
mov
sbb
push
xchg
lret
adc
jmp
popa
mov
pushf
sub
dec
inc
into
jnp
and
aas
inc
jae
adc
xchg
je
push
mov
test
fcmovu
lret
lock
jb
mov
in
cmpsl
or
sub
cmp
xchg
xchg
enter
mov
pop
ficompl
bnd
shl
mov
fimuls
and
xor
xor
jae
imul
mov
dec
pushf
clc
jg
in
cs
fidivrs
or
add
sahf
call
and
hlt
xlat
loopne
jecxz
in
es
popa
movsb
xor
mov
aas
js
icebp
leave
sub
out
hlt
push
daa
pusha
push
dec
loop
cmp
pop
jbe
cmp
pop
push
lret
pop
sub
mov
mov
dec
jno
push
sub
xchg
xchg
pushfw
movsb
sub
pop
or
aad
scas
sub
adc
xlat
outsb
out
sti
jg
jg
adc
cmp
shrl
sbb
int3
sbb
pop
out
rolb
daa
mov
add
sarl
pop
jno
jns
cltd
repz
and
and
adc
cmpsb
rcrb
andl
stos
pop
pop
imul
dec
int
lods
push
push
push
xor
cld
jne
dec
out
mov
orb
dec
das
dec
xchg
lock
mov
scas
pushf
mov
in
ds
jle
push
int3
xor
inc
adcl
push
cmpsb
sub
scas
lret
sbb
fimull
mov
mov
pusha
push
test
push
mov
clc
adc
jne
add
shr
pop
arpl
add
xor
and
je
jno
xchg
add
js
shll
es
cwtl
and
pop
push
lods
adc
pushf
or
add
or
imul
subb
test
es
outsl
mov
add
cld
loop
add
mov
sarl
dec
ret
xchg
rol
sbb
xor
xor
sbb
dec
outsb
dec
nop
cwtl
dec
inc
mov
out
sti
sub
std
stos
icebp
and
rolb
popf
cmp
stos
ljmp
je
mov
nop
fidivl
push
sbb
popa
fdivs
sbb
and
inc
jg
stc
arpl
inc
mov
fcmovnbe
testb
aad
pop
pusha
xchg
adc
in
fnstcw
leave
and
lock
mov
leave
movsb
gs
pop
push
mov
sub
jp
nop
aas
idivb
ja
std
out
inc
gs
sub
pop
push
push
xchg
or
call
push
cmp
adcl
or
mul
arpl
sti
repnz
or
pop
xlat
vandps
sbb
pusha
ret
jne
sub
aaa
or
mov
leave
mov
repnz
jbe
bound
out
xchg
mov
rcll
int3
movsb
ljmp
xlat
test
jmp
hlt
fwait
jle
mov
mov
cmc
mov
int
mov
pcmpeqw
leave
jnp
ja
cmp
push
pop
push
shr
into
hlt
push
fidivrs
sub
dec
add
add
inc
mov
xorb
insb
pop
xor
testb
jb
add
sbb
stos
fiaddl
lods
sbb
adc
jmp
adc
or
roll
mov
jp
mov
mov
inc
adc
divb
pop
pop
xorl
in
push
push
ficoml
jp
push
inc
in
sub
lea
and
push
es
pop
test
icebp
pop
inc
dec
call
sub
sti
ljmp
out
push
movsl
rclb
xchg
js
sub
lret
fsubrs
adc
adc
pop
xchg
and
jl
shrl
rcll
bound
mov
jno
ljmp
sbb
xchg
add
mov
repnz
insb
cltd
je
ret
pop
mov
ss
aas
pushf
stc
lret
jb
aas
repz
xor
xor
mov
inc
lret
fdivs
mov
mov
gs
mov
andb
push
std
mov
sbb
mov
test
sbb
or
xlat
mov
out
lea
push
popa
push
cmp
push
ficompl
cld
lea
cmp
ret
adc
mov
lock
out
xchg
pop
inc
push
inc
das
inc
cld
clc
sar
cld
jb
add
into
sbb
jo
sub
jno
or
mov
and
lods
cltd
negb
and
lds
jp
dec
xchg
jle
rcrb
add
pop
mov
mov
push
adc
dec
push
incb
mov
mov
xchg
dec
push
sub
not
xor
fcoml
icebp
cli
sbb
lcall
daa
push
popa
shrl
push
pop
lds
dec
xorl
push
xchg
adc
stos
out
or
xchg
repnz
add
out
gs
jnp
dec
cwtl
inc
pop
gs
and
ja
xchg
mov
out
test
iret
mov
jns
clc
mov
cmp
sti
shrb
inc
xor
das
in
in
push
pop
push
adc
mov
push
out
jle
scas
pop
push
or
scas
fcmovu
sub
push
mov
int3
xor
arpl
enter
jbe
inc
mov
in
insl
xchg
dec
jg
jecxz
lahf
in
mov
mov
adcb
orl
pop
imul
fbstp
cmpsl
out
inc
pop
enter
addr16
loopne
and
xor
movl
scas
bound
push
pop
push
dec
sahf
adc
push
shufps
push
or
bound
cmp
and
int3
mov
jmp
stos
xor
pusha
xchg
outsb
mov
lds
xor
xor
cmc
sahf
int
cmpsb
mov
push
imul
clc
mov
ss
mov
push
inc
lcall
sub
arpl
jecxz
arpl
test
insl
lcall
leave
data16
add
stos
inc
mov
adc
call
in
insl
mov
bound
push
jne
inc
cs
icebp
adc
or
push
pop
dec
hlt
pop
pop
clc
sahf
sbb
mov
stos
xlat
pop
push
sbb
outsb
cwtl
mov
jge
mov
fnstsw
iret
ret
nop
lods
or
fistps
mov
dec
fisttpl
and
add
aas
aaa
pop
sub
jae
sub
xchg
xchg
je
mov
es
pop
sbb
pop
rorl
fwait
jb
ja
xor
out
lods
imul
arpl
mov
mov
mov
xchg
cmp
in
push
push
leave
mov
xchg
out
inc
sahf
cltd
pushf
mov
mov
orl
cmp
addb
or
push
adc
stos
push
lea
push
pop
lds
and
mov
xchg
out
sbb
out
add
adc
xor
hlt
mov
ficomps
shl
or
ret
push
mov
std
jmp
rcr
stc
or
test
dec
jl
jbe
aaa
daa
xchg
jmp
jecxz
in
lahf
xchg
fxtract
jecxz
scas
push
adcb
mov
sbb
rcrl
insl
fstpt
lods
clc
or
insl
fnstenv
clc
scas
mov
push
or
or
addr16
stos
push
nop
jmp
push
mov
mov
lods
mov
es
pop
rolb
xor
movsb
daa
and
lcall
outsl
mov
lcall
ss
aas
sub
sbb
xlat
mov
sti
sub
fidivl
jg
xchg
sti
insl
and
sub
insl
jo
leave
mov
rcrb
in
cmp
mov
cmpsb
cs
sbb
pop
or
dec
xchg
fiadds
cmp
hlt
mov
dec
enter
lahf
fcompl
rcl
adc
ret
lcall
pushf
jo
in
mov
lcall
stos
out
int3
sbb
pop
imul
jns
xor
xor
inc
inc
lahf
aad
adc
add
and
repz
and
jmp
inc
ret
jae
adc
imul
frstor
xchg
cmpsl
mov
aam
sahf
sub
sub
xchg
popf
outsb
test
in
cmp
push
mov
cmp
hlt
jae
popf
xor
mov
outsl
out
and
adc
lcall
jo
movsb
push
fsubr
adc
push
and
dec
adc
outsb
cld
std
inc
divl
mov
sbb
out
outsl
or
cmc
mov
out
pop
sub
loop
mov
inc
lods
loope
mov
dec
fisttps
aad
adc
lret
fidivl
dec
lods
sub
aad
xchg
mov
jecxz
pop
sti
lods
out
mov
and
cmp
imul
pop
stos
mov
mov
mov
inc
xchg
mov
dec
lods
or
and
shl
mov
dec
lcall
push
jb
xchg
pop
sub
lcall
adc
sub
sbb
sbb
xor
dec
xchg
repz
and
cmp
sub
add
cmp
hlt
sbb
sub
std
fwait
and
cli
es
mov
inc
pushw
clc
and
into
pusha
add
mov
roll
mov
sub
fwait
mov
jg
dec
cmpsb
inc
pop
in
ret
enter
lahf
testb
ljmp
inc
lcall
pop
pop
mov
dec
and
mov
adc
test
cmp
jmp
popf
pop
jle
xor
addb
les
sub
add
jnp
add
jne
in
enter
dec
sub
std
jmp
mov
sahf
or
flds
adc
pop
dec
mov
daa
dec
pusha
push
jmp
cs
div
imul
es
sahf
daa
jae
mov
lea
jecxz
adc
movsb
leave
loope
sub
fbld
loope
ret
es
push
cmp
mov
int3
add
xchg
ja
pop
out
push
out
sbb
xchg
outsl
sub
out
aam
sbb
jp
sbb
and
inc
push
push
lret
cwtl
xor
inc
inc
test
xchg
inc
mov
xchg
and
xchg
push
push
data16
xchg
mov
sub
int
jl
test
out
mov
andl
add
mov
add
and
stos
adc
or
lea
fisubrl
insl
sub
lret
xchg
ljmp
aad
outsb
fisubl
cltd
ds
cmpsl
lret
out
jl
cs
xchg
and
xor
je
cmp
push
shll
mov
call
rorb
dec
roll
inc
incb
inc
into
hlt
pusha
lea
cs
ret
cmp
mov
ret
out
jb
movsl
xor
testb
cmc
xchg
pop
dec
in
rcrb
jge
cmp
iret
and
jge
cld
iret
out
or
pop
fsubr
iret
jo
mov
jp
or
xor
iret
add
mov
sub
inc
repz
movl
cmp
das
outsb
xchg
and
adc
mov
or
orl
fcomi
pop
sbbl
and
roll
mov
jbe
lret
and
fs
or
pop
movsl
jge
mov
mov
dec
imul
xchg
adc
aaa
push
dec
arpl
cwtl
mov
test
lahf
les
xchg
xor
push
inc
mov
jg
pop
pusha
dec
and
adc
jae
or
push
sub
mov
and
jo
clc
clc
xchg
push
cmp
push
or
icebp
mov
mov
ljmp
add
std
mov
loope
jne
push
test
push
adc
daa
adc
nop
cmpsl
pop
out
ja
psubb
and
xlat
popf
mov
sti
ds
push
dec
insl
and
into
aaa
lret
dec
dec
daa
lds
sbb
lret
sub
testl
cmpsb
arpl
or
mov
shl
jmp
mov
lcall
mov
repnz
xchg
adc
sub
aad
out
test
and
outsb
cmp
or
jbe
jno
mov
fisttpl
mov
stos
jno
int3
mov
in
sub
fistpll
or
jb
add
xor
or
lret
cmpsl
sbb
pop
push
add
call
mov
cli
jae
fldl
sbb
mov
jno
imul
fsubs
pusha
in
cmp
xchg
pop
mov
or
movsl
pushf
cmpsl
andl
pusha
sti
ret
cwtl
pop
iret
jl
scas
push
and
fstpt
or
iret
jae
pushf
jg
dec
insb
cmp
mov
add
mov
jno
xor
cmpsl
scas
jb
xor
sti
and
mov
xchg
add
sbb
cmp
repnz
jmp
cwtl
and
pop
mov
cld
movsl
mov
outsb
fwait
dec
xlat
xchg
mov
push
scas
adc
xchg
js
dec
mov
or
xor
js
adc
je
ss
and
xchg
jo
shl
push
jne
jae
sarl
ja
jns
out
mov
mov
mov
inc
lods
push
mulb
pmuludq
lock
fstl
xor
je
divb
fsubr
mov
fnstsw
in
inc
leave
push
dec
fwait
push
adc
mov
jne
adc
pop
out
add
mov
testb
xor
fidivrs
shlb
js
inc
subl
jmp
and
xchg
xlat
push
cld
js
or
repz
leave
lock
xor
icebp
add
push
xchg
hlt
jle
xlat
inc
aas
inc
and
test
add
xor
imul
jmp
push
daa
pop
mov
add
xor
inc
jb
inc
aaa
xchg
lock
dec
lods
adcb
call
pop
stc
aas
daa
ds
emms
xor
lret
popf
vpsraw
dec
popf
negb
outsb
into
aam
les
xor
pop
push
into
cvtps2pi
arpl
lea
js
stos
xor
mov
enter
mov
fmul
subb
fnstenv
push
lea
jo
cltd
jl
and
jnp
mov
call
mov
jle
or
add
addr16
cwtl
repnz
lcall
loopne
test
and
sub
imul
popf
test
lea
icebp
out
lret
lret
in
imul
mov
aad
adc
xchg
push
pop
push
dec
ljmp
es
mov
loope
pushf
bound
fwait
xchg
mov
popl
mov
push
pushf
imul
push
dec
pop
into
divb
les
push
xor
adc
or
in
sub
adc
dec
mov
in
inc
fmull
cltd
push
outsb
lahf
jnp
and
push
xor
dec
test
pop
das
mov
std
adcl
pop
aaa
push
xchg
xor
or
xchg
or
arpl
xchg
in
je
test
mov
leave
icebp
inc
test
xchg
mov
push
sbb
sub
stos
nop
les
out
cli
das
clc
cmovo
sti
push
xor
into
lret
loop
jno
jmp
fistpll
negb
inc
repz
and
sarl
add
jmp
cmpsb
cmp
jg
pop
inc
test
arpl
mov
mov
rorl
cwtl
dec
jns
cli
rorb
or
rcll
mov
in
stos
mov
mov
std
clc
pop
cmp
push
add
fistl
xlat
add
push
pushf
xchg
lods
enter
and
cmp
xor
jnp
xchg
mov
adc
jmp
shl
push
pop
dec
jecxz
jle
push
inc
dec
aad
andl
ds
mov
dec
dec
push
js
fsts
inc
xlat
or
into
mov
insl
mov
add
in
insl
sti
repz
push
rcrl
mov
and
dec
icebp
cmp
pop
push
cmp
mov
getsec
mov
xchg
mov
sbb
out
loop
push
sahf
insl
popl
dec
add
movsl
jg
mov
xor
push
repz
pop
jbe
clc
xor
in
pop
xlat
xor
arpl
lea
mov
iret
jb
cmp
xlat
fs
sbb
sahf
push
dec
mov
xchg
push
inc
jb
orl
inc
imul
push
data16
hlt
pop
sub
mov
mov
mov
fidivrs
and
mov
mov
pop
push
stc
sti
pop
adc
xchg
lret
loope
sub
mov
jl
imul
xor
mov
imul
lock
bound
fcmovnu
imul
into
dec
xchg
jg
popf
mov
inc
fildll
mov
mov
pop
xchg
xchg
leave
mov
mov
addr16
xchg
out
ljmp
fucomp
xor
push
stc
filds
mov
add
outsb
cmpl
arpl
and
sub
sbb
and
pop
add
fmul
pop
es
cmp
sub
movsl
test
rorl
les
stc
push
cmc
jns
negl
lds
pop
dec
imul
fdivrl
fistpl
rorl
loope
subb
mov
int
outsb
add
jb
inc
mov
out
loop
int3
pop
jbe
dec
jb
mov
jne
enter
pop
je
mov
rcrb
xor
jns
pop
mov
mov
jne
mov
rolb
lea
js
inc
pop
lods
stos
out
loop
hlt
test
push
push
adc
cmp
add
fwait
inc
cli
je
inc
stos
std
sub
inc
daa
mov
icebp
inc
popa
int
clc
jge
sti
xor
test
lods
jnp
es
dec
stos
dec
into
xor
fmul
adc
adc
cmp
lahf
or
mov
lock
decb
add
daa
jae
in
xlat
pop
mov
inc
in
rclb
cmpsl
mov
mov
sub
and
imul
mov
or
pop
jb
pop
pop
cmpsl
jno
adc
mov
jp
int3
loope
push
insb
mov
sub
aad
mov
stos
mov
push
out
push
divl
push
loop
daa
popa
push
ret
stos
and
mov
or
ret
cmc
cmp
xchg
dec
mov
jno
adc
pushf
pop
add
ja
clc
xchg
bound
mov
loopne
loop
lods
into
test
jmp
bndstx
and
jg
xchg
pop
addl
aaa
lods
clc
call
pop
dec
xor
icebp
inc
mov
repnz
mov
inc
rol
ret
cmp
out
mov
pop
subb
mov
in
sti
addr16
xchg
mov
or
add
scas
fdivrl
push
cmp
sub
push
push
leave
mov
fs
jecxz
cltd
lea
xor
fistl
jne
xlat
mov
dec
loopne
das
cmc
mov
test
mov
nop
and
xchg
iret
mov
mov
adc
es
pop
pop
mov
xlat
or
mov
dec
ljmp
push
scas
rcrl
loope
ljmp
mov
shll
inc
lret
icebp
rcrl
cmp
aad
pusha
lods
dec
out
inc
xchg
push
movsb
es
inc
sbb
sub
pop
sbb
mov
in
mov
xor
push
jb
mov
ret
pop
nop
add
dec
and
jg
mov
not
sbb
and
adc
mov
mov
xchg
sarl
xchg
jnp
stos
loopw
dec
push
gs
cmp
or
ljmp
jg
mov
dec
jnp
push
aam
cmp
dec
pop
jmp
ss
shrl
cmp
addb
mov
fiaddl
daa
mov
pop
mov
push
jp
stos
insb
inc
jbe
xor
add
and
xor
xor
out
mov
loop
lcall
aas
add
jmp
xchg
pushf
cmp
iret
daa
mov
pop
pop
leave
fsubrl
pop
out
xor
inc
ja
repnz
test
adc
mov
xor
add
mov
mov
fstps
mov
mov
orb
fwait
lea
mov
out
loope
jmp
ds
fidivs
sub
xchg
xchg
adc
aad
lea
in
in
cli
addr16
xlat
in
jnp
push
push
push
stos
mulb
jmp
lcall
test
mov
or
jbe
int
sbb
sahf
jl
mov
je
fildll
lock
fmuls
cmpsb
in
enter
sbb
cmp
mov
inc
lret
add
xchg
jmp
pop
flds
mov
sbb
dec
dec
fistps
int3
sbb
mov
xchg
or
dec
xchg
inc
orb
dec
xor
ss
decb
sub
cmc
cmpsl
and
jbe
jbe
mov
and
inc
mov
mov
gs
mov
repz
and
daa
jae
test
lock
adc
inc
out
inc
stos
popa
movsb
jge
cs
out
popf
pop
pop
push
dec
stos
into
pop
dec
outsb
lcall
or
popf
int
ret
test
in
inc
dec
loopne
iret
inc
pop
push
leave
into
xchg
xor
call
mov
jmp
adc
jg
lret
pushf
mov
hlt
push
out
lahf
shll
and
mov
jge
push
mov
cld
mov
cmp
cld
nop
mov
mov
mov
mov
or
sti
fmull
das
mov
mov
into
mov
dec
test
adc
data16
mov
pop
cld
xchg
mov
and
test
jle
bound
mov
jbe
add
sbb
lret
testl
push
jecxz
jno
xor
fmul
xchg
mov
ftst
cltd
setne
les
js
divb
and
aam
cli
cltd
js
mov
and
stos
or
inc
loope
cmp
inc
je
jns
sbbl
mov
pop
popa
xchg
dec
xor
je
xor
mov
or
test
jno
stc
mov
out
es
pop
adc
pop
inc
imul
in
mov
cmp
cmp
or
mov
data16
cmpsl
mov
xchg
adc
add
adc
xor
jb
sub
frstor
addb
lods
lret
add
add
sbb
clc
out
xchg
mov
stos
and
push
movsl
inc
cmp
movsl
out
cld
add
xchg
jg
cmp
ret
je
push
dec
ds
cltd
arpl
mov
incl
mov
jae
inc
fldenv
cmp
into
test
clc
jp
xor
cwtl
data16
test
roll
xor
add
scas
pop
mov
sbb
sub
mov
in
and
nop
shll
mov
lret
jmp
les
imull
xor
add
and
shll
fsubrl
pop
aas
dec
inc
clc
shlb
fildl
xor
inc
lahf
idivb
or
or
loop
cmp
adc
fwait
mov
incb
fwait
iret
mov
pop
negl
test
push
out
cmpsl
push
push
scas
xor
xor
xor
push
push
rol
lcall
sub
jle
mov
fwait
inc
andnps
scas
sub
xchg
xorb
pushf
mov
sbb
aas
lahf
pushf
and
test
lods
popf
jo
jle
imul
addb
fucomi
mov
mov
subl
test
fiaddl
mov
ficoms
cli
into
or
adc
int3
xor
cwtl
leave
test
test
sti
and
aam
cld
pushl
xor
sub
popf
sar
cmp
in
les
xor
push
jmp
pop
daa
xchg
aas
and
test
mov
adc
push
pop
cmp
mov
shll
cmp
pop
outsl
pop
test
push
cmp
fisubrs
cmp
in
mov
mov
icebp
bound
mov
in
cltd
bound
and
test
sbb
lahf
push
daa
jae
xchg
lods
push
sbb
sub
ret
leave
into
fidivrs
sti
sbbl
jns
add
test
mov
leave
je
fldt
jl
ja
sbb
lret
lret
sbb
stos
in
jae
sub
adc
icebp
sub
lods
or
dec
cmpb
push
cmp
in
mov
dec
mov
insl
push
cld
idiv
inc
ljmp
xor
filds
adc
pop
nop
jne
sarw
cmpsb
ror
adc
lods
sahf
int3
dec
xchg
in
fcoml
and
sub
daa
cmpl
popa
xchg
push
mov
jo
dec
cmp
xor
movsl
cmp
xor
mov
mov
sti
ljmp
aas
push
sbb
push
cmpsl
cs
jp
insl
mov
call
fisubrs
and
stos
jbe
int
lea
jl
sub
adc
push
xchg
or
sub
shll
push
cwtl
xchg
lea
shrl
or
fisttps
mov
inc
adc
mov
xor
xchg
inc
mov
in
cli
pminsw
call
sbb
lods
add
mov
in
mov
js
mov
adc
push
int3
sbb
ljmp
cltd
sbb
cli
fdivrl
push
movsb
mov
jnp
mov
js
in
pop
add
cmp
addl
std
aaa
push
andb
sbb
negl
fsubl
iret
cltd
mov
cmp
mov
enter
out
lods
mov
dec
ret
fstpt
mov
pop
xchg
mov
sti
jmp
cmp
push
mov
dec
in
mov
ret
call
nop
stc
cmp
mov
cmp
ljmp
and
es
ret
cmp
jl
sub
or
dec
shll
movsb
push
fmuls
mov
cwtl
shlb
xchg
fildll
std
lods
int
or
mov
ret
mov
push
jno
sub
cwtl
stos
ret
inc
int3
pop
mov
xor
adc
test
sub
or
in
lcall
pop
adc
adc
stos
inc
xchg
orl
mov
pop
jmp
shll
divl
pop
add
out
jne
fcoms
and
jne
xor
stc
push
mov
jb
xor
test
int3
das
mov
in
jmp
std
inc
push
mov
ljmp
fldl
and
xlat
pop
sarl
push
test
movb
out
pushf
add
mov
call
mov
jb
lret
divl
cltd
clc
sarl
cli
xor
inc
cmc
sub
int3
mov
fldenv
fs
pop
popf
data16
pop
test
inc
ret
add
jne
test
scas
in
mov
xchg
sub
and
mov
test
or
daa
add
adc
inc
sarl
lahf
inc
es
jecxz
fsub
out
inc
push
andl
dec
mov
scas
fistps
adc
or
push
xor
dec
daa
js
xchg
stos
sbbb
fisubl
and
addb
andb
cmp
lods
cmp
pop
outsb
fistl
test
and
pop
push
mov
push
shl
sub
fildll
cli
pop
aaa
sub
ljmp
mov
jns
and
mov
test
sbb
sbb
jecxz
into
xchg
les
add
aaa
pop
loope
xor
mov
xor
fstl
shlb
mov
dec
jmp
mov
cmp
pop
fcmovb
mov
push
xchg
push
scas
dec
sub
lret
sub
mov
cmp
push
nop
rcrl
jb
pop
cmp
mov
or
push
and
xor
add
fisttps
dec
xor
mov
dec
adc
and
out
sbb
int3
mov
mov
pop
push
icebp
lds
sti
mov
pop
int
icebp
lret
mov
addl
repnz
pop
push
mov
int
cs
pop
je
push
jmp
icebp
bound
mov
mov
loop
or
fisubl
jge
mov
and
call
clc
loopne
xchg
ret
mov
lahf
dec
inc
repz
bound
xor
sub
call
lods
loop
test
pop
push
push
push
shll
add
mov
shrb
cmp
or
jae
inc
jne
lcall
fdivs
ss
sbb
jae
fcmovbe
imul
jp
xor
dec
dec
loope
pop
mov
mov
sbb
aam
mov
mov
push
out
pop
and
push
orl
mov
lods
in
imul
sub
cmp
mov
xor
out
mov
xchg
outsl
add
into
push
jge
repz
movsl
insb
mov
mov
stos
and
outsl
xchg
std
insl
imul
or
push
add
aad
mov
push
or
push
jne
out
enter
aaa
adc
mov
pusha
ret
ss
jmp
adc
xlat
scas
lret
cmc
push
stos
jno
hlt
mov
sbb
faddl
sti
dec
inc
pushl
imull
sarb
push
fiadds
ffree
push
hlt
out
fwait
stos
enter
inc
rcrl
xchg
test
xlat
mov
dec
lds
cmp
dec
cltd
pop
fcomps
or
repnz
popf
lock
add
mov
cmp
pop
rcrl
jle
popf
rolb
arpl
icebp
sbb
sbb
stos
in
add
pop
xchg
dec
and
sub
loope
lods
arpl
adcb
mov
inc
pop
sti
int
and
cmp
sub
inc
add
icebp
lcall
adc
jne
test
shrl
dec
call
mov
sbb
mov
stos
add
out
sbb
mov
sub
mov
lock
pusha
out
stos
inc
aaa
cli
aas
test
xor
jmp
out
fs
jae
xchg
jmp
adc
mov
mov
bt
mov
mov
mov
push
data16
pop
cs
les
sbb
jg
in
mov
mov
jo
or
cmpsl
mov
les
cs
mov
rclb
xchg
inc
xor
and
sub
and
or
mov
and
das
test
psubusb
mov
mov
mov
dec
inc
mov
pusha
cmc
jno
sbb
pop
xchg
dec
sub
in
jbe
mov
sbb
lcall
stc
lcall
shrl
cmpsb
sub
ret
test
mov
mov
sbbl
fcmovb
clc
movsl
xchg
sbb
mov
imul
dec
jmp
pusha
outsb
pop
dec
stos
cmp
jmp
sbb
mov
mov
dec
enter
fdivr
push
xchg
or
inc
es
mov
jnp
add
mov
push
sbb
std
and
dec
lahf
mov
adc
xchg
mov
mov
push
add
inc
dec
mov
cmp
pop
movsb
push
loop
out
nop
cld
fsubl
out
or
push
sub
addr16
lods
pop
sub
xchg
shr
adc
out
mov
imul
mov
push
out
sbb
cmovno
lahf
fisubl
add
or
jne
out
bound
mov
add
mov
mov
jns
int3
loop
pushf
int
mov
mov
imul
inc
lret
jle
clc
ja
into
mov
pop
or
inc
xlat
lcall
pop
lret
and
int3
je
mov
xor
push
xchg
repz
shlb
and
nop
scas
mov
mov
fisubrs
pop
js
sbb
mov
into
cmp
cli
popa
not
negb
and
pop
loope
mov
pop
cmp
sbb
pop
adc
dec
mov
ret
lods
bound
adc
je
xchg
inc
mov
fldcw
xor
lea
xchg
daa
lods
jg
lret
cmpsb
in
cmp
cltd
sbb
bound
xor
pop
psubw
lods
pop
push
mov
arpl
fisubs
test
add
lods
data16
xchg
popf
es
push
sbb
out
inc
shrl
or
insb
cmp
jo
loope
fcmovne
aaa
out
dec
push
popa
xchg
out
cmp
mov
or
and
push
hlt
ja
adc
pusha
stos
sbb
mov
pop
or
xor
xchg
jg
mov
arpl
scas
push
pop
sbb
dec
ret
test
ret
mov
ficomps
lock
pushf
cmp
jmp
fcoml
in
sub
orl
bound
jg
xor
xor
test
sarb
jne
and
cmc
insl
and
fs
rorb
int
out
test
addl
repz
sub
aam
adc
leave
lds
lea
adc
and
inc
fwait
xchg
sbb
push
pop
and
mov
xor
scas
mov
add
jmp
mov
lods
pop
mov
lret
movsl
call
ret
sub
out
lods
out
hlt
das
pushf
mov
clc
fs
adc
inc
mov
dec
jae
repnz
cltd
mov
das
ds
mov
jle
inc
lahf
sbb
mov
test
out
fidivrl
dec
and
fldenv
in
loope
cmp
fs
faddl
mov
sbb
les
cs
xlat
std
cli
jb
xchg
dec
jnp
jle
mov
inc
pop
je
add
sbb
test
out
in
dec
in
push
in
xor
mov
cmp
ljmp
dec
icebp
sub
popa
sbb
and
sub
into
xchg
jo
pop
add
scas
bnd
inc
xchg
pop
lock
add
push
icebp
add
cmp
outsb
lods
or
fdivrs
sub
xchg
ss
adcb
in
stos
pop
ret
inc
lcall
push
xchg
cvttps2pi
imul
stc
xchg
scas
sbb
dec
push
or
loopne
repnz
in
loopne
ss
inc
popf
jl
mov
jmp
xor
enter
rcl
and
negb
pop
mov
ret
push
inc
lret
sbb
frstor
inc
jp
sub
negl
jae
gs
out
les
movsb
cmp
clc
lret
mov
xor
xorl
add
cld
mov
sar
push
repz
jmp
pop
lahf
inc
shl
roll
scas
data16
and
jns
scas
inc
push
cmp
xchg
mov
test
movsb
lret
aam
mov
data16
in
dec
shrl
call
arpl
xlat
and
and
and
daa
fstpl
mov
mov
lods
jo
mov
push
insb
pop
jb
sub
imul
jmp
inc
out
sbb
cs
jge
int3
mov
inc
cmp
mov
mov
adc
stos
insl
outsl
add
ds
jnp
nop
icebp
ret
cmpsl
jbe
or
cli
dec
call
xchg
inc
pop
int
adc
mov
cwtl
sahf
mov
fcmovb
push
adc
scas
icebp
repnz
sub
ljmp
dec
push
cltd
cmp
pushf
int3
shr
bnd
xchg
in
push
cmp
mov
outsb
mov
rcrb
sbb
jmp
ret
mov
add
pop
ret
fsubl
jbe
or
sbb
pop
mov
cmpsl
jno
or
push
add
std
movsl
cmc
and
mov
or
mov
pop
or
int3
cmp
leave
clc
rcl
fdivr
add
mov
out
xor
shr
sbb
jb
in
cmp
push
movsb
sahf
mov
sahf
fdivr
enter
mov
cld
xchg
mov
stos
xor
lods
addl
addl
xor
sbb
cmp
xor
je
test
pop
insl
adc
mov
jb
add
lock
lcall
stc
popa
fs
push
jb
mov
scas
hlt
es
je
gs
fsincos
xor
repnz
lret
sub
addr16
call
aaa
decl
push
cmp
and
jb
sub
dec
jg
cmc
dec
pop
imul
xor
sub
int3
outsl
mov
pushf
in
mov
sub
add
mov
cltd
xor
sbb
stos
mov
mov
xor
ljmp
or
das
push
shrw
loope
test
xlat
dec
test
imul
popa
dec
into
jmp
pop
jbe
adc
subl
ja
mov
loopne
cmp
scas
cmp
sbb
leave
nop
iret
jecxz
or
adc
jmp
cmpb
fcoms
hlt
test
rorl
rcrb
adc
sbb
dec
pushf
jb
aas
adc
push
lret
test
jns
cmp
and
push
cmpsb
popa
jmp
je
pop
int
lret
fildl
inc
xchg
or
push
lea
addb
dec
bound
fmul
cmpsb
sbb
outsl
nop
add
sub
test
mov
jg
or
mov
mov
mov
xchg
pop
inc
mov
fwait
lock
mov
mov
bound
popa
out
or
testb
iret
inc
scas
xchg
inc
mov
lods
andl
lods
cmpsb
xor
or
out
push
jmp
ljmp
inc
fnsave
mov
shrl
cli
stos
mov
ljmp
cmp
add
ss
aad
pop
cs
dec
lcall
mov
fbstp
jbe
dec
dec
xor
test
sub
lock
rcrb
mov
ja
sbb
xchg
and
mov
aas
iret
notl
xchg
pop
jne
inc
cmp
mov
xchg
cli
nop
jns
add
pop
lret
xor
sub
loopne
fwait
mov
adc
les
inc
sub
push
xchg
test
pop
adc
enter
mov
xor
inc
std
cmp
jno
rcrb
std
es
adc
jg
cmovnp
inc
inc
jo
push
arpl
das
mov
cmpsl
out
jns
adc
mov
sub
push
xchg
cmp
adc
stos
mov
xor
daa
stos
adc
ljmp
pop
cmpsb
sub
jp
ret
into
push
cmpsb
mov
jle
loopne
stc
lods
into
ljmp
icebp
sub
ja
icebp
lock
popf
push
xchg
lods
jo
int
sub
xor
mov
xlat
incl
pushf
into
loop
dec
xchg
pop
sbb
shrb
lods
fcoml
into
xor
dec
lock
fidivrs
out
sbb
jmp
lods
jmp
pop
les
sbb
fidivs
cltd
insl
popf
ljmp
adc
or
cmp
lahf
jle
jmp
leave
fmulp
mulb
adc
lret
sub
les
adc
dec
mov
fisubrl
inc
faddl
mov
pusha
mov
jb
lods
push
lea
jmp
add
test
enter
shll
das
push
lods
xor
sub
stos
jb
cmp
out
and
out
fwait
stos
loop
mov
xchg
pop
push
cld
adc
push
pop
jo
sub
jns
push
std
stos
mov
les
and
jle
push
xchg
sti
inc
jne
lods
imul
and
xchg
mov
popf
push
imul
std
push
js
gs
pop
cwtl
dec
and
call
fbld
jl
lock
pusha
pop
lods
xor
sub
insb
fucomp
lods
jl
push
jo
sub
add
incl
lret
lahf
push
mov
outsb
fisttpll
lcall
in
cmpsl
repz
cmp
push
xor
loop
aam
cmp
stos
cmp
push
in
xlat
and
jp
shl
mov
jecxz
xchg
jns
ret
loope
data16
mov
mov
mov
test
fstl
popa
aad
jbe
insl
lcall
or
into
cmp
or
fbstp
sub
push
push
ja
mov
imul
sub
notb
pop
or
cld
mov
je
inc
fwait
and
add
adc
add
mov
jns
and
les
sarl
lret
repnz
icebp
adc
call
push
out
loope
xor
mov
inc
dec
arpl
test
mov
mov
jmp
mov
xchg
jmp
fstpl
mov
push
gs
mov
addr16
sub
lods
stc
lea
push
in
cwtl
ja
in
inc
mov
dec
sub
push
push
cmpsl
pop
scas
popf
add
repnz
adc
in
lcall
dec
sbb
xchg
or
and
xor
dec
outsl
inc
loope
push
xor
into
aaa
movsb
fwait
sahf
sbb
adc
xor
insl
jge
pushf
jne
fwait
pop
in
repnz
rcrb
neg
sbb
cmpsl
sarb
aaa
stos
mov
or
fwait
insb
inc
and
fstpl
out
xchg
stos
mov
xchg
aas
xchg
arpl
mov
xor
xchg
call
mov
outsl
daa
adc
punpcklwd
mov
popf
add
adc
outsb
add
or
dec
inc
test
or
jns
clc
push
or
xchg
sbb
or
jg
outsl
pop
sub
shlb
jne
and
inc
mov
xchg
push
ja
jo
mov
fmulp
aam
jne
mov
insb
cmc
jo
mov
inc
test
ss
push
jns
movsl
outsl
dec
cltd
push
movsb
ljmp
and
dec
jnp
xor
test
cltd
lock
out
or
inc
ss
push
nop
and
and
adc
xchg
xor
sub
in
inc
dec
subl
out
int
es
sbb
int3
hlt
add
in
pop
ljmp
das
dec
cltd
push
or
and
rclb
cmpsb
aaa
xchg
cld
shll
fcmovnbe
stos
jecxz
pop
cmp
aaa
cltd
js
stc
test
xchg
cld
lcall
jmp
xor
das
dec
test
mov
in
inc
icebp
insl
addr16
roll
inc
jne
xlat
inc
xlat
bound
sbb
leave
jo
int3
andb
nop
nop
ret
addb
int
jge
inc
addr16
ds
pusha
pop
cs
subl
lahf
lretw
jb
hlt
cli
push
mov
adc
pop
xchg
stos
or
xor
mov
mov
push
popf
jne
jo
aad
push
push
dec
orl
dec
pop
inc
push
nop
xchg
fdivrp
mov
jb
pop
sbb
ficoml
pop
fimuls
fdivrs
cmpsl
jb
dec
mov
popa
sub
xchg
mov
out
xchg
or
add
ret
jbe
jecxz
or
lock
je
and
mov
push
adc
pusha
scas
xchg
xor
jbe
adc
jne
dec
lds
sbb
mov
out
mov
cli
jne
cli
cmp
aas
lret
sub
dec
sbbl
fdivrl
dec
loope
jae
rorl
ss
orl
outsw
aam
pop
add
xchg
lock
scas
mov
fsubs
cld
fistpll
cmp
loope
mov
stos
call
in
jne
push
movsl
pop
xchg
or
mov
mov
add
insb
and
pop
add
hlt
rcrl
jmp
adc
aas
xchg
call
xlat
cs
jae
int3
repz
notb
aam
mov
rorb
cmp
push
mov
cmp
sub
xchg
in
cmp
fsts
lahf
fbstp
or
dec
dec
cld
aad
xchg
pop
push
jbe
pop
lfs
lahf
cmp
scas
push
add
pop
lods
scas
bound
enter
add
sbb
lcall
sub
ret
cs
mov
aas
popa
mov
push
jns
cmp
xor
movsl
and
ss
insb
in
adc
push
jmp
push
cmp
and
inc
loopne
push
push
fnstsw
mov
mov
das
dec
aam
lock
mov
push
je
push
out
fildl
xchg
cmpsl
mov
jmp
sbbl
ja
sub
arpl
sti
mov
sub
int3
enter
scas
gs
cmc
jo
ret
rorl
into
movsb
sbb
pusha
insb
lret
pop
stc
aaa
adc
setne
add
out
orb
xchg
inc
testb
or
ljmp
addr16
cmp
fnstenv
and
movsl
cwtl
lock
shrb
pop
repz
fcompl
push
push
andl
jmp
and
mov
ja
into
jno
xor
ss
fistps
cwtl
jno
lcall
es
scas
sti
pop
mov
icebp
leave
popf
loope
pop
inc
pop
das
scas
or
shrb
fisubl
xor
or
ret
stc
xchg
jne
push
inc
clc
popf
test
clc
jnp
lods
repnz
pop
pusha
sub
daa
loopne
dec
push
inc
mov
cli
push
call
push
pop
or
in
add
imul
stc
clc
push
mov
in
addr16
inc
or
out
and
call
lcall
addr16
fldt
pop
pop
cmc
jo
ret
pushf
in
cwtl
jp
sbb
mov
popf
push
inc
lds
in
pop
cmp
sbb
xchg
and
inc
imull
lret
mov
cmpsb
and
gs
shll
add
adc
sbb
mov
out
testb
lods
ss
in
mulb
xor
fisttpll
lret
xchg
lods
jne
add
pop
jbe
jge
jb
lahf
ret
mull
js
popf
in
popa
pop
inc
or
insb
push
adc
mov
xlat
add
pop
push
pop
cmpl
jle
lods
test
mov
cmp
test
jae
inc
mov
and
dec
scas
icebp
outsl
fwait
inc
fs
shlb
mov
ds
mov
mov
sub
int
pop
push
leave
xchg
fdivl
stos
push
adcl
lea
adc
mov
scas
mov
testb
jne
mov
lds
mov
cmp
mov
pop
in
aad
dec
movsl
push
dec
inc
fwait
or
mov
inc
cmc
pop
lahf
loop
add
pop
and
push
fs
mov
out
out
push
mov
dec
jmp
mov
adc
das
scas
xchg
jmp
leave
or
test
add
shlb
cli
cmpsl
outsl
sub
out
or
stos
push
imul
sbb
mov
or
stos
lea
jp
mov
or
jnp
jne
jns
push
cmp
adc
aam
sub
mov
mov
js
ja
pop
lahf
push
cmpsl
or
add
add
mov
test
aam
add
scas
mov
inc
lea
nop
fsubrl
fcom
add
es
or
fsubs
push
mov
mul
aad
negb
jne
cltd
dec
push
sub
xorl
andl
outsb
loop
pop
jne
push
ljmp
cmp
inc
lock
js
sub
lods
pop
xchg
pop
fdivl
mov
cmp
ds
loop
jno
inc
loop
imul
mov
out
out
xchg
es
cmpl
pop
idivl
cmp
subl
in
out
shlb
xchg
inc
aas
sub
pop
ds
cmp
xlat
inc
jge
push
andl
insb
movsl
addr16
push
sbb
nop
aas
inc
or
sub
loopne
adc
fadds
imulb
mov
imul
into
outsl
jge
movsl
cmp
call
jae
pop
mov
pop
adc
xchg
dec
mov
ficompl
les
add
lret
lahf
sub
imul
cmp
loope
add
aaa
mov
sbb
pop
psrlw
out
fsubl
xchg
or
or
ljmp
mov
jg
aam
adc
sub
pop
xchg
nop
xchg
lods
lods
bound
lret
sub
jle
incl
mov
jecxz
hlt
inc
mov
fsubrs
mov
rcrb
mov
and
or
imul
cmc
sub
sub
sub
pop
sub
hlt
test
sahf
xchg
ficoml
imul
or
cmp
mov
mov
jo
sbb
mov
sbb
data16
mov
mov
xor
and
xor
mov
or
dec
add
mov
lods
movsl
dec
push
movsb
cmc
in
outsb
xchg
sarb
jbe
test
mov
out
and
jae
push
ret
leave
jo
mov
lea
out
aas
enter
push
jp
mov
sbb
dec
inc
or
arpl
mov
xor
or
or
lods
movsl
mov
sbb
cmpsb
imulb
ja
jecxz
dec
mov
ja
inc
or
cmc
jg
loop
aad
jecxz
dec
mov
jl
js
std
cmpsl
xchg
lock
dec
pop
xor
lcall
inc
insl
add
push
or
nop
int3
out
jb
jmp
stc
xchg
jmp
mov
jmp
dec
js
filds
and
roll
jbe
jle
fst
imul
pop
adc
fwait
ds
jecxz
leave
cs
fsubr
cli
mov
vrsqrtss
andb
adc
in
jnp
rcrb
lds
sub
xchg
push
xchg
scas
xorl
ret
xlat
sti
out
add
icebp
aaa
nop
mov
pop
imul
into
stos
sbb
dec
arpl
jno
xor
rolb
mov
jne
faddp
sub
mov
mov
out
xor
sarb
cmpsb
call
xchg
fnstenv
aaa
imul
out
cs
pop
movsl
mov
jg
cmp
pop
imull
xchg
jge
cltd
shll
fidivs
into
adc
fildl
ret
adc
lret
jmp
fisttpl
ret
cltd
sbb
in
and
pop
jns
add
sub
test
cli
out
mov
add
or
mov
push
mov
sbb
inc
xchg
iret
pop
test
or
inc
cmc
shl
pop
push
dec
inc
movsb
popa
inc
push
xchg
dec
jae
test
lea
push
xrelease
fwait
popa
adc
mov
bnd
push
stos
aam
movsb
mov
pop
mov
adc
stos
pop
cmpsl
imul
xor
inc
data16
sbb
es
fwait
jmp
mov
leave
test
xchg
sbb
mov
scas
dec
inc
mov
cmc
shlb
pop
add
mov
div
divl
pop
fiaddl
push
mov
jge
out
bound
cmp
outsl
orb
xchg
xor
pop
cmp
hlt
lea
mov
push
pop
push
pop
inc
or
andl
xchg
leave
push
scas
and
and
pop
gs
movsb
shl
inc
insl
add
daa
std
pushf
and
out
arpl
jg
leave
dec
pop
insl
xchg
ds
filds
and
jb
sub
cltd
shrl
mov
jecxz
shl
jmp
cwtl
sarb
cmp
mov
and
adc
cmp
imulb
aam
lods
mov
mov
jmp
push
scas
sub
and
cld
jo
mov
adc
and
popf
or
hlt
adc
lods
sbb
cmp
xchg
pop
mov
jae
mov
adc
cltd
lock
xor
iret
dec
jmp
pop
fnstcw
stos
jb
mov
loope
add
int
sbb
gs
and
lods
xor
mov
jmp
sbb
jmp
jg
fdivs
loope
pushf
xor
jnp
inc
mov
adc
xchg
and
mov
add
aad
test
pop
dec
fists
cmpl
loop
loopne
and
insb
icebp
hlt
cmp
ret
ror
popa
jo
dec
sub
and
aad
pop
cltd
jno
aaa
test
adc
cmpsb
imul
popf
xchg
inc
add
jmp
inc
mov
insl
lcall
add
nop
sub
sti
movsb
adc
fwait
cmp
push
testl
out
fdivl
mov
or
imul
ja
push
ljmp
adc
ficompl
ret
mov
fcmovu
ja
scas
lahf
inc
push
xchg
ds
mov
cmpsl
jne
mov
repnz
fs
and
inc
test
inc
ret
int
jo
xchg
mov
popa
pop
cmp
out
and
adc
dec
aam
mov
outsl
push
movsl
repnz
mov
lcall
mov
and
cmc
fstpt
orl
push
pusha
cli
pop
loop
pop
xchg
lcall
fwait
bts
scas
add
std
pop
roll
dec
adcb
shrd
sub
push
pop
push
pop
mov
cmp
jmp
xchg
add
jp
mov
pushf
stc
cmp
test
mov
clc
aam
xchg
and
inc
mov
jae
jge
rorl
mov
dec
cmc
add
dec
ljmp
inc
push
xchg
or
leave
clc
in
imul
jno
shlb
insl
push
and
das
dec
or
insb
imull
ljmp
mov
xor
out
vunpckhps
movsb
xchg
andb
xchg
jmp
lods
test
lea
inc
in
pop
negb
clc
xor
adc
shlb
and
pop
xchg
les
insl
leave
mov
daa
nop
sbb
mov
adc
adc
repz
pop
rcrl
pusha
jae
pop
iret
push
or
push
cmpsb
int3
sub
enter
lahf
aas
sbb
in
jg
aad
orb
sti
repz
xor
xor
adc
jmp
xchg
sub
ljmp
adc
ljmp
outsl
xchg
pop
into
sahf
shlb
adc
enter
xor
aas
aaa
mov
add
xchg
loope
punpckhbw
mov
imul
mov
or
dec
xor
jle
stos
add
fistpl
ret
dec
scas
and
mov
inc
fildll
ds
mov
mov
pop
xchg
xor
sub
inc
mov
lret
adc
movsb
aam
icebp
outsl
adc
push
je
xchg
je
cmp
xchg
stc
repz
dec
repnz
cmp
pop
imul
loope
jno
scas
lea
rol
xchg
lret
add
and
jg
push
enter
mov
sub
and
ror
daa
lods
imul
bound
sahf
dec
pop
ror
pop
fistl
pop
and
jecxz
sub
sub
xchg
cmp
stc
arpl
dec
push
pop
mov
xchg
or
iret
push
test
mov
out
mov
fcmovb
std
push
xlat
sub
xchg
or
scas
daa
ret
inc
or
sbb
mov
notl
fsubrp
inc
jmp
sbb
scas
iret
insl
xchg
mov
jge
scas
subl
xor
outsb
in
hlt
in
mov
insl
scas
leave
jb
push
in
addr16
pop
xor
outsb
pop
sbbl
das
test
insb
cs
or
inc
fst
sub
dec
mov
inc
dec
sub
enter
mov
imul
pop
push
test
outsl
xchg
mov
dec
sahf
repnz
iret
xchg
push
pop
xchg
xchg
mov
hlt
push
jg
pop
loop
repz
mov
mov
mov
mov
stc
dec
jecxz
data16
push
scas
les
sbb
std
adcb
push
pop
test
lea
std
lods
fmul
xchg
pop
mov
sti
push
xchg
lcall
clc
rcl
dec
cmc
jo
dec
sbb
pop
mov
mov
and
pop
push
lds
xchg
fistpl
pop
mov
adc
lds
jg
push
push
fsubrs
mov
adc
or
lret
xor
lock
xrelease
inc
sti
rorl
testb
xchg
test
mov
dec
mov
jo
adc
nop
lock
in
xorb
cmp
shrl
int3
mov
fstpl
std
add
bound
imul
lahf
bound
loop
rclb
fimull
sub
outsl
or
sub
call
xchg
loop
mov
dec
gs
inc
les
mulb
jle
mov
sbb
dec
repz
aas
loop
cmp
movsl
mov
dec
jmp
aas
imul
cmp
iret
addr16
mov
mov
ljmp
mov
movsl
mov
in
jmp
cltd
sarb
stos
test
pop
cli
pusha
loope
fcoms
jne
sahf
es
pop
xor
je
cld
sbb
fdivl
mov
test
js
fimuls
dec
xor
imul
cmpb
sub
xchg
dec
cmp
aaa
xchg
fcoml
sbb
shrl
jnp
or
lods
fdiv
lret
mov
fninit
xchg
sub
pop
fbstp
jnp
bound
aaa
fistpl
mov
pushf
lods
ret
pop
enter
out
push
mov
xor
in
xchg
dec
push
xchg
aas
cmpsl
jbe
lods
add
sbb
sahf
or
push
mov
mov
gs
cmp
pushf
shlb
mov
int
lock
mov
aad
clc
or
dec
cmpsb
jo
pop
testl
fdiv
lcall
enter
dec
push
call
jno
xchg
push
rcll
fisttpl
test
adc
fidivrs
scas
loop
mov
insl
and
jp
fmull
cmp
dec
movsl
xor
xchg
addb
pop
hlt
lea
pop
mov
mov
adcl
ja
jno
sbb
call
push
sub
mov
sub
dec
and
shlb
ret
mov
pop
into
mov
mov
dec
fsubrl
push
mov
and
xor
adc
js
push
push
sub
shrl
sbb
jo
push
fstpl
jmp
ljmp
cltd
or
jp
jg
out
jmpw
test
sbb
fcomps
jl
lret
inc
cld
jne
cmp
flds
nop
mov
imul
aas
in
stos
movl
jne
insb
testl
pop
or
in
jle
pop
rcrl
push
add
and
xchg
xor
into
and
cmpsl
sub
or
jne
ret
pop
fmulp
idivb
adc
add
movsl
adc
cmp
cmp
inc
mov
mov
icebp
xor
add
adc
xor
into
inc
test
lods
jmp
inc
subb
push
or
jmp
xor
dec
inc
stc
or
mov
push
add
sub
pop
lahf
adcl
rcll
sub
xchg
mov
cmc
fimull
rorl
or
call
das
mov
inc
into
mov
test
mov
aas
fnsave
subb
cmp
lods
cmp
addl
insb
arpl
xchg
mov
sbb
sbb
aam
idivb
sub
xchg
xchg
dec
lret
dec
stos
int
mov
jbe
adc
cmp
in
and
sbb
xor
mov
inc
adc
pop
fdivr
add
lcall
scas
push
mov
dec
or
arpl
orl
ds
mov
filds
cmp
je
aas
add
jp
push
xor
jo
and
mov
sub
idivl
mov
mov
andb
nop
pop
jp
sub
out
push
xor
cmp
sti
mov
imul
icebp
xchg
pop
es
out
cmp
in
sbb
mov
inc
mov
popa
sub
pushf
and
xor
and
in
cmc
icebp
incl
xor
aad
test
push
pusha
popf
push
insl
std
hlt
shll
fildll
adc
xchg
das
mov
xor
and
push
test
xor
jmp
add
xchg
xchg
loope
loope
lret
jb
sbb
mov
dec
lahf
or
pop
sub
iret
call
call
test
pop
jmp
mov
mov
ljmp
and
xchg
ud2
xchg
add
in
inc
data16
stos
insb
push
jecxz
jns
fcoms
sub
pop
jne
in
cmc
and
shlb
xor
inc
gs
inc
insl
pop
jmp
repz
out
les
lret
mov
pusha
xchg
jp
cmp
xor
sub
sbb
test
aam
and
push
jae
sbb
outsb
dec
push
outsl
lock
fisubrl
insl
dec
and
cmp
imul
mov
dec
push
pop
shrl
and
cli
mov
cmp
mov
jg
out
push
push
leave
sar
sub
in
js
in
push
arpl
mov
repz
movsl
adc
xor
xchg
ja
aas
push
xor
test
push
imul
loop
fcoml
test
inc
enter
adc
lahf
shll
sbb
sahf
arpl
daa
aaa
lea
je
push
cmp
inc
pop
and
call
cmpsb
inc
xor
shrl
in
daa
mov
mov
adc
nop
icebp
mov
jp
test
or
mov
xchg
in
pop
and
fsubrl
scas
sub
push
and
std
mov
mov
push
sub
cmp
xchg
jne
scas
sub
sbb
movsl
movsl
push
inc
fdivl
in
adc
sbb
lcall
inc
jmp
mov
mov
psubb
daa
cmp
xor
adc
shrb
mov
jne
xor
mov
lret
lahf
adc
push
aas
dec
add
xor
pop
xchg
adc
sub
int3
mov
stos
lock
mov
pop
into
lret
jmp
clc
adc
pop
xchg
xchg
notb
inc
dec
mov
mov
mov
cmpsw
test
xor
out
xchg
add
testl
test
xchg
insb
xor
push
push
cmpsb
outsb
scas
decl
push
cmp
cmpsl
popa
inc
dec
rcll
std
insb
arpl
pushl
sbb
jecxz
imul
lcall
xchg
dec
mov
push
movsb
in
iret
cmpsb
cmc
xlat
mov
sbb
iret
bound
test
pushf
js
out
pop
jl
adc
popf
push
jnp
mov
adc
out
or
rclb
adc
xor
in
mov
sahf
fsubrs
sub
inc
adc
adc
push
pop
sbb
test
pop
cmp
cmp
pushf
mov
jmp
fs
xchg
adc
mov
adc
xor
mov
pop
mov
mov
or
es
xchg
and
and
enter
lods
stos
outsb
and
jno
scas
loopne
xchg
mov
jmp
in
xchg
clc
mov
les
movsb
push
cld
xor
hlt
jp
pop
sub
ds
xchg
int
sbb
orb
mov
cmp
mov
into
pop
jne
into
sbb
outsl
inc
dec
in
mul
repz
rclb
push
ss
ds
xchg
xlat
leave
arpl
mov
int3
mov
sbb
cmpsl
push
std
inc
jecxz
xorl
das
xchg
dec
mov
popa
add
cmpsl
sbb
xchg
stos
pop
push
dec
jne
push
pop
jp
rol
test
mov
ljmp
jle
adc
sti
xchg
insl
push
addr16
cwtl
ds
fistpl
xchg
in
mov
xchg
xor
jmp
aas
xchg
cs
jns
inc
xor
push
mov
add
arpl
movsl
pop
xchg
jle
sbb
jge
subb
lret
mov
arpl
inc
cmp
mov
or
into
push
mov
mov
call
notl
push
mov
dec
fsub
cwtl
out
and
test
imul
inc
mov
mov
cld
jecxz
aas
mov
pusha
cmp
clc
in
jmp
repnz
hlt
sti
lods
test
jae
xor
fstpl
xchg
ds
push
or
xor
sbb
cmp
pop
cmpsb
lcall
dec
call
lret
jl
ja
xor
xchg
mov
in
xchg
xor
int3
mov
ljmp
xchg
mov
jp
repz
pop
and
lahf
pop
xchg
gs
jge
cmp
inc
clc
xchg
cwtl
ret
xor
rcrb
jle
out
bound
outsb
shll
cmp
lcall
sarl
cmpsb
clc
mov
sahf
xchg
or
mov
stos
mov
popl
add
shll
jp
and
rcrl
push
sub
mov
mov
data16
xor
pop
ss
test
or
jg
scas
int3
mov
push
aam
enter
bound
mov
jge
pop
aam
mov
into
sarb
in
fmulp
mov
adc
push
sti
repz
in
pop
into
mov
inc
lret
adc
cltd
mov
in
fs
orl
mov
dec
cli
dec
xchg
lcall
int
dec
cwtl
aad
into
fucomi
in
jnp
enter
inc
dec
mov
sub
jp
pop
mov
mov
sub
mov
sbb
cmp
mov
xor
lcall
or
stos
mov
into
inc
mov
fs
lcall
in
fistpll
cmpsl
pop
fistps
shlb
mov
cli
in
out
lods
or
inc
add
jb
inc
pop
bound
sbb
ss
mov
pop
or
fisubs
stc
push
mov
mov
mov
jb
mov
mov
fwait
fwait
cmp
les
stc
or
cwtl
enter
sub
or
repz
aaa
out
sbb
imul
popa
pop
int
pop
sub
add
xchg
imul
sub
mov
fnstsw
jno
bound
sbb
push
add
ss
mov
or
jae
mov
mov
jle
stos
or
cwtl
pushf
cs
lret
xchg
mov
push
lcall
insl
mov
dec
stos
repnz
lcall
push
lret
aad
cmp
mov
or
in
cmp
aam
inc
scas
cmpsl
push
inc
jae
ss
and
arpl
mov
push
fidivrl
lods
pop
cld
or
insb
cmpsb
stc
rolb
cltd
xor
mov
dec
cmpsb
loope
pop
cmc
pop
pop
fldt
ljmp
packsswb
mov
das
pop
cltd
inc
push
lock
xlat
movsl
call
mov
mulb
arpl
inc
xchg
or
mov
movsb
movsl
dec
add
mov
mov
jae
push
xchg
lds
adcb
xor
je
outsb
push
and
enter
lds
jg
ficomps
sti
and
xchg
mov
mov
outsl
leave
xchg
push
jmp
sub
xchg
movsb
repz
aam
aas
or
ret
daa
pop
jb
add
rcrb
pop
push
pop
loopne
mov
std
es
jne
dec
shl
in
pop
imul
sbb
dec
fwait
and
xchg
jecxz
fldenv
jno
ljmp
mov
or
cmp
and
sahf
lcall
push
imul
aam
cmp
loopne
test
mov
mov
dec
stc
test
pop
dec
mov
fdivp
lcall
test
das
dec
add
fdivrs
outsb
xor
mov
out
hlt
pop
push
add
mov
ficoms
jbe
adc
or
fidivrs
add
loope
fsub
punpckldq
lret
movsl
adc
fsubrl
cmp
pop
addb
adc
xor
mov
ljmp
testb
repnz
xorb
ret
ror
cmp
aas
inc
dec
dec
addr16
push
xor
mov
fwait
sbb
push
add
es
adc
jb
stc
xchg
lods
dec
shrl
push
push
xchg
loop
testl
inc
xchg
inc
mov
dec
scas
jge
pop
lcall
test
dec
or
repz
inc
popf
or
add
fsub
ret
stos
aad
insl
cmpsb
jecxz
ljmp
xor
icebp
sbbb
mov
adc
js
movl
push
aas
scas
dec
push
push
mov
loop
push
lahf
inc
loope
push
inc
loope
add
cmp
push
insb
jp
loopne
xor
sub
or
jno
ja
enter
stc
mov
and
fstpt
dec
inc
loopne
in
insl
mov
lret
dec
sub
dec
mov
dec
jecxz
push
adc
jnp
shrl
push
mov
pop
sbb
or
and
out
cmp
and
fsub
mov
inc
xor
xchg
mov
pop
or
loope
mov
xchg
rcl
jb
or
and
stc
or
sub
mov
shlb
jno
aam
ja
adc
stos
xor
orb
fimuls
xchg
in
out
push
aad
cmpsl
lahf
sub
fld
pop
inc
hlt
pop
stc
out
insl
lea
xor
xchg
mov
xchg
popf
pop
adcb
push
cmp
lds
fwait
lcall
sub
mov
sbb
jb
sub
stos
mov
sbb
nop
movsb
lods
cwtl
jnp
or
jecxz
addr16
xlat
call
dec
jno
cmc
sub
rcl
xor
loop
loope
pop
insb
or
mov
pop
dec
pop
mov
mov
mov
lds
lret
lret
clc
test
icebp
push
out
data16
jnp
bound
adc
jg
test
jl
scas
js
aaa
lock
dec
in
sbb
outsl
jle
iret
or
inc
inc
out
fildll
sub
mov
xor
push
xlat
outsl
fdivl
inc
int3
in
lds
cli
js
data16
dec
push
and
or
inc
xlat
das
cmpsl
mov
pushf
or
jae
dec
jl
loope
dec
lret
adc
popl
push
lcall
outsl
inc
mov
push
pop
jno
jge
rorb
jb
popa
sbb
stos
mov
test
popa
movsl
push
scas
jbe
aaa
jmp
insb
rol
add
test
add
cmpl
rcr
pop
cmp
add
push
call
add
mov
mov
xor
push
pushf
adc
daa
notb
insl
lcall
jo
loopne
ret
daa
add
aas
mov
sub
movsl
jb
shlb
lods
mov
lret
cld
and
psubd
std
jmp
das
cltd
arpl
out
icebp
fisttps
jg
jae
fwait
das
fldcw
xchg
jmp
int3
sbb
jge
hlt
xchg
insb
jb
lret
inc
ds
add
lcall
sbb
or
pop
jg
stos
rorb
mul
fcoml
mov
mov
or
push
sahf
cwtl
pop
cld
adc
pop
leave
adc
fcoms
lret
sub
pushf
stos
mov
das
add
inc
inc
or
dec
xchg
jo
gs
add
mov
mov
insb
popf
xor
add
xchg
push
or
dec
push
push
jne
fidivrs
adc
xchg
aam
jb
add
incb
enter
xor
jno
adc
daa
ds
jmp
or
in
push
hlt
les
cltd
outsb
rcr
and
push
and
push
fnsave
dec
pop
inc
jl
add
mov
insb
jns
cli
mov
out
ficomps
push
setg
cmp
bnd
iret
dec
je
enter
sarl
cli
lea
adc
jle
dec
jmp
mov
popa
shll
fisttpll
icebp
shrb
lcall
sti
adcl
push
movsb
sahf
inc
in
cli
sar
add
shlb
mov
inc
jb
push
insb
fadds
sbb
test
repnz
jnp
pop
je
mov
xchg
ret
cmovs
mov
hlt
out
sbb
mov
mov
or
pop
push
in
ljmp
dec
xlat
or
mov
call
xchg
subl
mov
and
rcll
xchg
mov
outsl
call
push
mov
and
xchg
pop
call
std
xlat
aaa
sub
sti
mov
adc
gs
out
lds
inc
fcoms
lea
mov
scas
out
jmp
jae
lds
sub
sbb
outsb
in
push
popa
push
cmp
and
lods
js
insb
hlt
sbb
cmp
xchg
ljmp
clc
sub
fsubrs
jae
shrb
inc
jmp
iret
into
stos
lods
jle
push
cmp
cmp
ljmp
fcmovbe
addr16
mov
pop
or
jns
dec
mov
in
sub
cld
pop
dec
lea
jae
loope
out
clc
fwait
jmp
inc
pop
enter
test
and
or
push
lods
dec
cltd
push
dec
ret
scas
inc
add
pop
or
cltd
lods
gs
mov
mov
aam
xlat
xor
test
sbb
pushf
mov
in
pushf
xchg
cltd
cmp
std
mov
scas
repnz
outsb
insb
sbb
shrb
or
sub
pop
jbe
pop
test
test
xor
xchg
jle
sbb
je
sub
aam
xchg
push
fidivrl
jae
push
push
mov
outsl
outsb
jb
out
imulb
pop
bound
popf
jno
cmp
loopew
fsubrs
mov
leave
sar
ds
cld
pushf
shld
fmull
test
stos
ds
sbb
stc
or
inc
jno
adc
ds
outsb
repnz
in
insl
jecxz
outsl
mov
hlt
push
cmc
fldenv
mov
fdivr
add
cmpsb
aam
scas
jb
xor
pop
dec
sbb
cs
mov
stos
fsubs
lcall
addl
jb
sbb
ja
testb
add
inc
dec
ja
jmp
jne
cmpsb
lcall
ja
fdivrs
push
test
mov
mov
adc
loop
sub
and
mov
inc
sbb
lods
pop
pop
dec
lods
icebp
or
fldcw
xor
push
mov
or
and
add
xchg
pop
inc
sahf
jne
lds
inc
lods
adc
push
mov
dec
jb
mov
dec
out
mov
imul
add
outsb
test
push
xor
and
sub
nop
pop
push
int3
adc
push
fistpll
sbb
loop
in
mov
sbb
mov
les
jl
andb
je
sub
xchg
inc
mov
test
aad
add
repnz
mov
inc
icebp
insb
xor
shlb
test
ficompl
outsb
leave
add
push
enter
adc
pusha
fwait
dec
sbb
imul
aad
rcll
gs
inc
sbb
mov
inc
pop
orb
add
cmpsl
jne
mov
xchg
lock
addl
in
mov
sub
xor
nop
inc
ret
outsb
xor
jbe
inc
repnz
cmp
inc
mov
stos
popf
jbe
and
insb
push
add
jns
shl
mov
mov
imul
insb
mov
dec
add
outsl
sub
dec
and
sub
sbb
pop
fdivp
iret
pushf
les
dec
jbe
mov
jecxz
push
mov
pop
je
shr
mov
and
sti
fdivs
sub
push
imulb
jecxz
or
jo
rclb
testl
jno
pop
popf
jmp
dec
movsb
adc
rcrl
rclb
jp
dec
sbb
fwait
sbbb
aaa
jp
mov
dec
out
mov
je
fisubs
pop
xor
daa
test
add
stos
mov
pop
mov
mov
sub
imul
xor
scas
cmpsb
pop
popf
jge
pop
mov
fwait
hlt
xchg
and
rorb
cld
jp
xchg
jg
and
imul
cmp
jno
lock
es
das
adc
jns
dec
clc
push
movsl
pop
aaa
xchg
jb
dec
inc
fdivrl
mov
mov
adc
cmp
fidivrs
pop
dec
xchg
lods
nop
sbbb
jp
in
daa
jno
iret
les
nop/reserved
push
pop
and
sbb
add
mov
fildl
out
push
hlt
xchg
lahf
mov
outsb
ds
add
inc
inc
stos
xlat
out
sub
lea
mov
ljmp
sbb
xchg
idiv
movsl
mov
dec
adc
xor
cmpsl
mov
popl
pause
push
idiv
inc
inc
lea
or
cmp
jmp
xor
je
xchg
jb
lods
rorl
mov
lods
jge
push
jnp
inc
mov
lea
or
adc
xchg
xor
das
jns
push
and
or
mov
gs
xchg
inc
xlat
mov
cltd
rorb
loop
and
xchg
test
cltd
pushf
push
aaa
mov
push
sbb
cli
inc
push
or
mov
xchg
sub
inc
je
lahf
into
aas
cmpsb
mov
rclb
jbe
imul
ljmp
and
inc
or
cld
in
mov
aam
mov
rcrb
xorl
test
cs
add
subl
pop
ja
cwtl
pop
pop
leave
orl
dec
jmp
cs
hlt
rolw
push
mov
dec
loop
ror
arpl
mov
imul
push
push
mov
cmp
ds
into
adc
cmpsb
push
pop
movsl
pop
or
mov
pop
mov
movsb
dec
je
imulb
idivb
mov
dec
cmpsb
adc
cmp
sbb
leave
rcr
arpl
test
hlt
mov
push
pop
or
scas
xor
sbb
mov
inc
mov
movsl
sahf
dec
out
out
nop
mov
clc
cmp
mov
xchg
dec
enter
mov
mov
add
frstor
inc
out
das
mov
stos
fistps
out
jno
popa
sbb
xchg
outsb
xor
std
aam
add
sbb
mov
sti
and
dec
xor
iret
mov
sti
std
jl
cmp
mov
pusha
or
je
nop
call
js
xor
repz
sub
sbb
mov
mov
movsb
xor
inc
and
push
xor
movb
cwtl
xlat
in
adc
push
imul
cmpsl
add
aad
or
xchg
dec
mov
iret
jl
rorl
mov
sti
xor
xlat
xor
mov
adc
out
lcall
xchg
out
cmp
or
bound
inc
pop
movsb
rcrl
jno
out
ljmp
xor
mov
mov
in
in
in
mov
mov
xor
inc
subl
mov
stos
jg
ror
pop
outsl
lret
in
xchg
subb
cld
inc
in
jb,pn
adc
out
jmp
mov
mov
jle
cli
ja
cmp
pop
jg
cmp
mov
fldcw
in
dec
daa
fmuls
lods
mov
sub
mov
outsb
jnp
push
fildll
popa
mov
jns
test
xchg
mov
sub
mov
ja
in
cs
sub
std
jbe
lret
inc
dec
mov
pop
test
jno
mov
in
outsl
push
std
ret
and
sub
and
movsb
mov
cmpsl
es
lahf
lods
fidivrl
xchg
nop
mov
mov
cmp
and
and
pop
ds
mov
mov
sbb
and
fwait
jnp
mov
jp
xchg
pop
mov
pusha
sub
lea
xor
rcl
enter
push
loop
push
mov
push
pop
and
mov
aam
or
pop
popa
cmp
repz
dec
xchg
jecxz
in
int3
pushf
sbb
inc
and
mov
test
mov
mov
mov
inc
cmp
cmpsl
add
dec
dec
dec
ljmp
dec
std
fs
ret
test
in
pop
int
sbb
insb
lea
orb
pop
das
dec
add
xchg
insb
inc
inc
or
mov
jb
push
sub
mov
cltd
mov
sub
iret
adc
icebp
mov
repz
rclb
sub
push
out
imul
or
dec
lret
or
cld
dec
daa
in
aas
pop
fcom
pop
aaa
add
push
mov
adc
mov
push
pop
std
dec
and
sub
aam
jl
add
in
jle
mov
adc
nop
pop
rcl
dec
and
mov
test
in
test
leave
adc
push
push
dec
mov
sbb
das
out
sbb
push
jno
add
mov
fiaddl
imul
dec
popa
push
int
push
push
jle
cmpsl
fwait
dec
jg
ss
int3
add
dec
cli
aam
pop
pop
xchg
in
stos
aaa
mov
icebp
sbb
test
pop
pop
or
inc
and
inc
hlt
dec
fmul
xor
jmp
bound
fcmovnbe
add
inc
pop
ss
mull
clc
movsl
pushf
inc
cmpl
adc
add
mov
xor
lock
lods
jnp
sub
int3
cld
dec
or
dec
xor
ficomps
test
mov
add
jns
push
cmp
lods
mov
push
rol
jp
mov
pop
push
inc
rcrb
lock
sub
lcall
push
aaa
xlat
bound
sbb
cmp
rcrb
mov
cmp
fs
sub
stos
xchg
les
xor
pop
pop
jmp
mov
cli
lret
and
pop
iret
mov
adc
pop
xlat
stc
aas
lahf
jmp
std
mov
ss
ljmp
cmpsb
je
popa
push
adc
xchg
mov
push
movsl
fsubr
lea
stos
pusha
xchg
or
lcall
leave
sub
pop
adc
dec
inc
lret
xor
inc
push
push
pop
lahf
in
in
nop
cmp
mov
outsl
test
cwtl
adc
dec
enter
lods
cmp
es
adc
fwait
ret
cmp
popf
cmp
mov
push
int
pop
sub
jnp
enter
add
push
cmpl
jns
sbbl
lock
pop
dec
nop
int
test
in
push
dec
fsts
mov
jl
bound
push
adc
adc
cwtl
cmc
movnti
push
out
jns
inc
sbb
in
xlat
bound
dec
cmp
adc
mov
aad
mov
adc
mov
arpl
dec
jno
movsl
sarb
fcomps
in
xor
outsl
notl
pop
cmc
mov
jge
lahf
es
adc
sub
mov
popa
mov
push
cmp
xchg
loop
jmp
or
fldcw
sbb
push
jle
in
ret
insl
test
lock
pop
les
lds
scas
cltd
shl
jmp
mov
xchg
push
loope
add
pop
xchg
mov
jecxz
or
call
push
insl
ja
mov
fnstsw
in
lods
xchg
cld
adc
fidivrs
and
jno
mov
sbb
mov
jns
jmp
enter
icebp
inc
mov
xor
popf
rorl
mov
lret
pop
sahf
loopne
movsb
aam
and
mov
pop
jns
ljmp
dec
inc
data16
cmp
addr16
out
mov
data16
add
aam
add
sbb
sti
icebp
mov
stos
outsb
mov
add
cmp
ret
loope
pop
pop
cmp
into
ret
push
xor
mov
inc
icebp
jnp
mov
inc
out
test
mov
xchg
push
scas
push
pop
into
adc
and
xchg
jae
sbb
inc
push
out
out
movsb
cld
fsubl
out
dec
fiaddl
jb
shl
in
scas
jle
cmc
outsl
shrl
popa
pop
xor
xorb
outsl
adc
pushf
dec
sub
xor
push
xchg
mov
ret
jae
pushf
inc
in
add
pop
xor
and
es
add
out
pop
mov
in
dec
mov
fists
fwait
jl
clc
ss
orb
test
pop
jecxz
fidivrl
push
fwait
btr
lods
jno
xlat
mov
shlb
inc
or
mov
mov
inc
xchg
das
ljmp
out
and
push
lcall
sbb
push
shrb
pusha
xor
inc
stos
jmp
pop
jecxz
xor
bound
pop
cld
dec
push
loope
xchg
mov
dec
call
es
inc
cmp
loop
jmp
mov
lret
xor
lcall
sbb
iret
push
lret
sbb
add
add
out
dec
cltd
out
test
inc
push
repz
fs
add
scas
pusha
and
cmp
fidivrs
mov
lahf
rorl
aas
cs
mov
cwtl
fadd
jmp
das
lcall
jp
sub
jbe
mov
add
pop
lea
aaa
lds
add
shll
aad
xor
js
sbb
and
dec
sub
sbb
push
insb
sbb
jecxz
fists
shrl
mov
inc
mov
pop
adc
dec
mov
mov
xchg
test
push
sub
jne
push
mov
jo
jg
aam
inc
daa
in
sub
pop
cmpb
icebp
or
or
pushl
or
into
daa
jl
out
or
pusha
outsb
xor
pusha
iret
aad
pop
add
testb
addb
xchg
pop
jg
bnd
int3
and
jnp
les
lcall
fidivs
lods
jl
imul
jle
ret
jp
mov
mov
xor
adc
call
add
movsb
sbb
pop
mov
jl
adc
lock
loopne
data16
cmp
and
stos
stos
push
lods
jb
fwait
je
std
mov
test
jl
jae
mov
cltd
test
ss
ds
cmp
and
popl
mov
fwait
add
or
jns
mov
sub
push
inc
cmp
xlat
mov
pop
inc
cmp
imul
adc
out
sub
es
in
imul
xor
adc
fmulp
fdiv
sbb
xor
gs
outsl
xlat
out
xor
iret
loope
adc
sub
out
xor
jne
inc
scas
or
push
cmpsl
push
adc
push
outsb
inc
push
sub
scas
dec
test
fwait
ds
sub
test
leave
jae
mull
mov
ds
jae
cwtl
out
or
mov
sub
push
push
hlt
jbe
mov
and
inc
and
add
fstl
push
sbb
fisubs
in
inc
push
outsl
push
sub
cmc
dec
adc
and
xchg
or
adc
lods
sbb
lcall
cwtd
int
inc
out
ss
fistps
or
cmp
mov
sti
xor
or
out
sbb
nop
daa
mov
daa
jge
or
xchg
push
mov
cmc
push
jne
mov
rcr
mov
sub
lret
std
cmc
jl
clc
into
mov
pop
adc
lods
xchg
mov
jecxz
sub
jnp
jo
arpl
add
gs
pop
scas
scas
jb
inc
xchg
xor
enter
dec
pop
shll
sub
inc
fisttpl
in
ljmp
in
loop
ret
adc
pusha
jmp
ror
addr16
syscall
xor
ljmp
push
jmp
idivl
scas
fucompp
les
sbb
sti
cmc
decl
aaa
cmpsl
adc
xchg
loopne
sarb
incl
push
test
xor
shl
sbb
and
enter
aam
in
pop
pushf
nop
rcll
ret
fwait
pop
or
scas
dec
push
test
outsb
insb
push
fidivs
push
adc
cld
clc
fsts
mov
lahf
test
lock
pusha
jecxz
test
gs
jmp
and
adc
inc
aaa
and
aaa
mov
lret
daa
mov
xchg
push
xor
xor
clc
repz
cwtl
jae
in
jle
imul
out
aam
roll
repnz
xor
mov
aam
xchg
in
sbb
cmp
xor
mov
movsl
fwait
data16
push
adc
iret
fcom
outsl
ljmp
lock
mov
add
jno
push
call
push
inc
fimull
loop
sbb
jmp
andl
jnp
cs
sbb
dec
int
sub
jae,pn
inc
and
add
push
xor
jae
dec
ja
xchg
jne
jo
into
dec
lock
dec
jmp
mov
cltd
adcb
and
mov
andl
inc
push
jne
add
ret
lea
in
in
adc
xor
xor
mov
inc
sub
lahf
xor
or
ret
mov
jmp
or
rclb
pop
sub
xor
cmp
aad
ss
sub
mov
sbb
flds
push
or
inc
xchg
loope
jp
loopne
mov
lods
popa
xor
lahf
jns
shlb
outsb
movsl
jg
or
jbe
mov
loopne
sub
and
sbb
mov
cmc
sub
lods
mov
lcall
das
mov
mov
movsl
rcl
stos
mov
ret
cmc
lcall
fdivp
jne
mov
iret
into
aas
inc
aas
xchg
sahf
stos
xchg
inc
fwait
das
push
pop
xor
xchg
call
jp
lods
subb
out
call
test
lea
sub
and
fucomi
mov
cmpsl
shll
insb
dec
repnz
push
int
adc
nop
xchg
out
addb
outsb
cmpl
addb
sbb
mov
or
aas
cwtl
ss
mov
ret
cmp
and
pop
adc
in
push
jecxz
jmp
sbb
mov
popa
lcall
mov
nop
push
add
and
pop
or
pop
sbb
aaa
aad
sbb
leave
mov
test
les
nop
rorl
aaa
test
into
cmp
jmp
mov
fistpl
sbb
in
push
sub
lock
lret
pop
inc
iret
xchg
iret
fdivrl
mov
mov
mov
mov
and
ss
notl
ss
ja
cmc
pusha
cs
fucomp
mov
pop
push
xlat
ret
adc
push
stos
and
and
mov
bound
mov
fwait
sti
addb
fidivrl
push
js
out
ss
mov
loop
out
loop
out
mov
test
xchg
dec
js
loopne
and
push
or
pop
bound
lock
cli
and
fchs
inc
push
sbb
mov
mov
pop
inc
inc
adc
or
xchg
mov
sub
inc
or
lahf
mov
rcl
pop
sub
pop
cmp
leave
push
fisubl
ret
and
or
push
inc
in
xchg
je
test
xchg
mov
sysexit
adc
push
push
cmp
mov
les
pop
sbb
push
in
daa
xor
aad
mov
jb
lcall
dec
insb
mov
aaa
or
sbb
or
mov
outsb
clc
jmp
cmp
xchg
ja
sub
cmp
xor
bound
push
cmpsl
jp
cmp
int3
dec
cli
mov
out
cltd
mov
je
inc
xchg
sub
imul
push
cwtl
push
sbb
sub
sbb
push
or
push
out
mov
popf
pop
push
inc
push
andb
test
and
mov
fstl
pop
stc
and
mov
adc
mov
sbbl
stos
xchg
insb
nop
push
or
lcall
and
mov
jae
sub
out
sti
push
fisttpll
jae
out
fidivrs
adc
cmpsb
and
xchg
cmp
xor
and
pcmpgtd
xchg
rorb
xchg
or
divb
jb
jae
or
ret
cmpsb
test
gs
mov
lret
mov
and
mov
fsubl
cwtl
xchg
xor
out
xor
jnp
push
hlt
jge
sub
dec
in
lds
mov
mov
adc
movsb
setbe
cld
sbb
in
outsl
sub
fistpll
sbb
imul
xchg
scas
pop
xlat
jmp
lds
cli
shrl
ja
mov
pop
sub
movsb
inc
push
gs
dec
jne
sub
mov
mov
mov
sbb
mov
add
xorb
push
fadd
mov
stc
outsl
fimull
push
mov
dec
test
sbbb
push
es
int3
bnd
cmp
lret
jno
inc
xchg
jl
ficomps
mov
rol
xchg
pop
add
das
mov
pop
into
pop
mov
and
sub
ja
adc
pop
pop
out
cmpsl
mov
inc
jbe
xchg
insl
into
pop
adcl
add
xor
or
cmp
es
adc
and
jge
cld
out
fld1
loope
aad
call
cwtl
orl
mov
hlt
or
xchg
push
cmpb
fimull
sahf
cmpsb
int
xor
loop
push
call
or
mov
jp
fcomps
je
mov
mov
lahf
fisttps
dec
int3
mov
cmp
xor
mov
sahf
jns
aam
fwait
dec
fwait
sahf
mov
dec
mov
or
pop
pop
aaa
xor
mov
sbb
call
daa
xchg
push
inc
mov
dec
test
mov
lret
aas
xchg
imul
jge
out
mov
or
hlt
sahf
shrb
subl
es
lcall
fists
cmp
fildl
leave
repnz
repz
xchg
fadds
aaa
jl
sar
xor
addr16
sbb
dec
cmp
inc
dec
in
or
ss
mov
push
dec
jl
adc
jae
add
fistps
dec
mov
movsl
cs
cmc
movsb
cmpsb
mov
cli
dec
lret
adc
sbb
in
mov
in
fsts
rcll
dec
addr16
dec
fs
mov
dec
orb
and
das
cmp
shll
rorl
scas
data16
lea
inc
push
gs
pop
xor
test
pop
cmp
daa
lcall
ja
push
popf
ret
pop
mov
lahf
mov
jnp
imul
and
xchg
out
inc
loop,pn
movsb
push
xchg
add
mov
and
xchg
imul
push
pushf
push
and
test
mov
aas
adc
mov
ror
insl
sbb
mov
xor
push
xchg
or
mov
xchg
cmc
add
test
dec
lahf
mov
cmp
in
sub
xor
inc
sub
or
iret
jmp
push
pop
ds
cmp
sbb
shll
xchg
int3
test
cmp
adc
push
loope
sub
adc
leave
mov
add
push
jb
ffree
das
adc
loop
jecxz
das
dec
in
bound
cmp
shll
inc
adc
sarl
or
out
ss
movsb
or
sub
or
add
in
push
lods
scas
sub
lret
aam
xchg
out
stos
fadd
sub
bound
jmp
les
cltd
xchg
rcrl
pop
and
fistps
enter
fwait
outsb
xchg
mov
cli
or
mov
cmp
add
pushf
loope
add
jmp
dec
aas
icebp
rcrb
inc
cmc
shr
mull
jge
fsqrt
push
add
aam
mov
dec
jb
jbe
test
adc
mov
sbbl
inc
loopne
mov
and
inc
add
mov
mov
fcoms
stc
out
mov
data16
lods
lret
dec
jle
seta
mov
ret
iret
jns
sub
mov
mov
xor
out
or
gs
jle
bound
cmp
js
cwtl
and
cmp
aaa
outsb
mul
in
repnz
imul
daa
daa
fstl
fwait
call
push
sub
movsb
cmpl
mov
xor
mov
cli
mov
push
dec
insb
je
mov
adc
aam
pop
pop
sbb
mov
clc
enter
lret
sub
dec
mov
ret
xchg
sbb
imul
addr16
mov
fbstp
test
mov
sub
or
mov
add
mov
xor
xchg
fdivr
pop
push
insb
imulb
fld
or
cmp
repnz
sub
mov
vxorps
fnop
dec
mov
mov
pop
jo
ss
lcall
test
stc
stos
lahf
imul
jmp
push
daa
cmp
frstor
or
inc
sub
ret
addl
cmp
loopne
rolb
push
icebp
sbb
outsb
pop
aaa
dec
jmp
test
insl
pop
cld
movsl
mov
cmpl
xlat
inc
xchg
popl
loope
stos
outsb
and
aam
sbb
call
push
sub
imulb
fildl
pop
outsb
or
dec
in
jle
mov
loopne
movsl
dec
mov
cli
out
push
roll
lods
or
lret
scas
dec
lods
loop
mov
cmp
test
nopl
gs
fistpl
inc
inc
pop
xor
mov
mov
sub
inc
jns
adc
icebp
inc
mov
cli
imul
or
notl
scas
int
mov
inc
cmp
mov
jl
in
aas
mov
loopne
or
xchg
adc
push
int3
es
mov
bound
mov
das
cmp
dec
cmp
shl
test
pop
or
sbb
push
push
jo
cmp
arpl
jns
popl
aas
cmp
pop
aad
mov
mov
sub
sti
incb
popf
and
cld
sbbl
jg
orb
fcmove
jg
add
mov
enter
data16
ljmp
mov
aam
cwtl
js
lods
dec
cwtl
insl
add
lea
adc
mov
cmp
cld
sbb
push
dec
test
jp
lods
jno
movsl
cmp
mov
cwtl
dec
in
in
inc
push
fs
negl
lods
cwtl
mov
mov
idiv
adc
es
pop
sub
stos
mov
stos
mov
outsb
xor
icebp
stos
loop
add
inc
xchg
jbe
or
lods
sbb
dec
xchg
add
cmpsl
and
push
sti
lret
fbld
call
popa
incl
inc
dec
jae
or
jl
xlat
fs
ja
outsl
cld
repz
cmp
mov
in
jp
fwait
xor
scas
lds
xchg
inc
mov
jle
mov
pop
in
dec
jg
lcall
or
lret
jg
sbb
mov
xchg
fs
pop
in
push
cmp
std
and
std
aaa
lods
or
push
dec
push
adc
sti
mov
sbb
aam
andl
add
and
in
push
dec
pop
pop
jecxz
mov
jecxz
inc
inc
js
pop
jge
ficoms
aaa
add
xor
push
sti
loopne
mov
inc
jb
rcrb
scas
jb
arpl
xor
out
test
sub
les
sbbb
lock
sbb
push
sti
mov
cs
mov
ret
setbe
loope
pop
mov
dec
sub
mov
sbbl
push
adc
mov
cmpl
test
pop
shrl
jo
cmc
bound
xor
inc
inc
jmp
repnz
adc
adcb
xchg
push
mov
fwait
push
clc
dec
inc
xor
aad
outsl
dec
jb
subb
push
cmc
sti
lods
xor
pop
inc
fists
leave
pop
into
inc
mov
fisubrl
add
cltd
mov
fsubs
cmp
xchg
pushf
daa
adc
cmp
sarl
in
mov
lock
es
enter
lret
sub
jae
sbb
outsb
or
inc
adcb
dec
push
pop
test
cld
sbb
arpl
das
fstpt
xchg
hlt
sub
or
inc
lret
mov
cmp
sbb
jae
add
mov
cmp
lahf
xorl
pop
call
adc
hlt
jmp
dec
mov
lahf
push
inc
dec
popf
stc
sbb
in
push
sub
xchg
out
sub
and
arpl
mov
pop
mov
mov
fmulp
in
pop
xchg
out
movsl
sbb
push
xchg
sbb
in
pop
call
jnp
jge
cmpsl
mov
bound
cmp
cmpsb
btr
lods
jmp
ss
test
inc
jbe
push
jle
cwtl
inc
popf
dec
scas
push
int3
movsl
call
pop
fmull
sbb
sbb
push
cmp
sbb
aad
xchg
push
push
call
rorb
pop
divb
rorb
dec
sub
mov
mov
fsubrl
ds
nop
into
aas
cmc
pop
add
jge
es
nop
call
jo
cli
cltd
aad
sub
or
pop
sbb
imul
sub
jo
xor
lahf
xchg
xor
js
in
cld
jp
dec
jb
sarb
push
scas
leave
inc
push
lcall
sar
pusha
inc
je
add
mov
jge
loopne
insl
and
mov
hlt
and
cmp
mov
inc
adc
daa
mov
daa
mov
orl
inc
push
dec
fcoms
scas
mov
cmc
cmp
daa
jbe
cli
cli
scas
pop
adcl
jns
xlat
jmp
or
out
xchg
negb
sub
mov
sbb
shlb
or
sub
out
int
and
lods
adc
mov
js
inc
jge
std
div
ss
xlat
mov
lds
xchg
jo
sub
aad
into
stos
xor
aad
jne
fimuls
je
inc
mov
xchg
cld
cmp
lods
ds
movsb
pop
dec
int3
inc
std
ljmp
jo
pop
cmp
cmc
pusha
mov
jo
inc
aaa
insb
fneni(8087
cmpsb
and
xchg
lds
sbb
inc
aam
testl
jl
push
push
add
or
jecxz
inc
sbb
pop
dec
push
inc
mov
gs
pop
js
cmpsl
movsb
test
sbb
je
mov
add
push
popf
xchg
pop
jne
pop
movsb
sbb
adc
movsb
adc
xor
fcmovnbe
jl
scas
xor
adcb
fnstcw
fwait
jne
add
sub
ss
dec
mov
dec
sbb
add
adc
imul
cmp
fxch
ljmp
add
ds
scas
pop
mov
mov
fistpl
imul
xor
je
sub
call
pop
out
std
jo
fistpll
insl
mov
mov
cs
or
call
sbb
imul
repz
mov
adc
outsl
mov
out
add
or
and
fistl
cmp
imull
repz
mov
lea
out
push
pop
xor
cld
and
xchg
stos
jo
dec
das
lock
xchg
repnz
sbb
imul
scas
mov
in
fidivl
dec
cmp
sbb
jns
je
xor
jbe
frstor
mov
addr16
jle
jmp
fwait
sbb
lods
add
lock
push
aad
jp
fsubrs
inc
pop
lahf
dec
adc
adc
dec
lock
push
mov
js
in
xchg
stos
shll
outsl
outsb
int
sub
dec
sbb
pop
adc
outsb
xorb
int3
push
vpsubusw
out
pop
xchg
loope
add
and
arpl
sti
push
xor
nop
shrb
xchg
sub
mov
add
adc
and
scas
and
cmp
jae
cld
mov
shl
xchg
sub
push
pop
ret
jae
mov
out
pop
sahf
dec
xchg
adc
pusha
test
pusha
jle
adc
xchg
pop
mov
int3
cli
dec
test
xchg
pop
jmp
loope
cmp
mov
xchg
mov
mov
mov
cld
xchg
dec
xor
push
shl
insl
gs
inc
test
mov
leave
pop
jnp
hlt
test
mov
filds
cmpsb
jle
pop
ret
add
mov
mov
push
push
sub
jecxz
fwait
sbb
xchg
repz
fildll
jle
mov
mov
push
adc
xor
sub
sub
test
jge
addb
mov
dec
jmp
and
mov
outsb
das
add
push
in
jne
mov
outsl
push
fisubrs
jp
xorb
std
xor
adc
cmp
mov
pop
mov
xchg
xor
cmc
adcl
int3
enter
aad
xor
out
mov
dec
pop
xor
das
mov
cmp
stos
aaa
mov
movsl
ds
xchg
in
clc
sub
add
and
mov
enter
push
aaa
sub
mov
jbe
hlt
jno
push
loopne
enter
inc
mov
out
fstl
jmp
sub
sarb
or
xchg
insl
and
mov
pop
mov
mov
inc
jb
mov
in
lahf
cmp
fnstenv
sarb
ficompl
inc
fimull
loope
adc
cmp
pop
bound
pop
daa
add
xchg
cld
mov
pusha
dec
cli
pop
mov
enter
sbb
adc
add
sbb
sbb
leave
fwait
je
add
push
pop
subb
sbb
popa
inc
sub
mov
adc
cltd
xchg
fs
xchg
test
cmp
arpl
fistpl
push
addb
nop
jbe
sbb
inc
pushl
scas
outsl
jmp
inc
fs
daa
adc
aam
das
lahf
into
std
dec
mov
and
vpaddusw
add
cmp
or
fistpll
jbe
das
loopne
fidivl
outsb
testb
scas
jp
push
add
iret
mov
mov
std
push
mov
push
sahf
cs
push
or
sbb
push
adc
dec
repz
mov
aaa
fimull
push
and
xchg
mov
cmp
popa
adc
inc
push
dec
arpl
dec
enter
arpl
pop
in
ja
jbe
out
jecxz
fwait
aam
jge
adc
xchg
xor
popa
sbb
mov
iret
sub
sub
jmp
mov
stos
pop
jecxz
mov
out
mov
mov
cmp
push
leave
cltd
xchg
mov
orb
sti
pop
xor
lret
jle
lret
ds
movsb
lods
cmp
shll
xchg
lods
mov
mov
jo
mov
adcl
les
add
xlat
arpl
dec
inc
xchg
imulb
jp
or
and
jb
cld
dec
add
add
and
ror
pop
andl
pop
mov
les
mov
mov
adc
mov
lret
push
mov
push
cmp
push
dec
sti
ss
xor
cmpsl
incb
popf
movsb
shrb
in
out
out
adc
aas
and
inc
inc
sahf
nop
mulb
loop
pop
imul
imul
lea
ss
fs
jae
lods
repz
popf
and
sub
dec
cmp
fidivs
push
loopne
jbe
outsl
cmp
int3
stc
adc
xor
mov
mov
dec
pop
xchg
push
popl
stos
adc
xor
lret
xor
ljmp
jg
scas
or
or
jge
mov
divb
xchg
les
popl
cmp
fmuls
adc
and
sbb
mov
fs
ss
lret
call
dec
mov
sub
loop
pop
loopne
lahf
mov
mov
cmp
call
mov
inc
std
jmp
dec
cmp
or
test
lret
xchg
jl
adc
inc
xor
pop
ret
js
mov
xchg
push
pushf
js
dec
bnd
xchg
imul
bound
push
insl
pushf
inc
pop
jp
test
iret
jnp
dec
test
rcll
and
mov
daa
lahf
aas
cmp
jo
push
mov
stos
in
jno
and
dec
adc
int3
lret
xchg
enter
jge
and
adc
inc
cli
fmull
inc
neg
bound
mov
sbb
mov
pop
out
dec
and
push
and
xlat
pop
leave
pop
enter
ljmp
adc
xchg
sti
add
mov
data16
cwtl
sub
xchg
mov
xchg
icebp
inc
fisubl
lret
push
jae
mov
imul
not
xchg
pop
jno
mov
and
or
dec
lcall
notl
mov
stos
dec
aam
subl
inc
mov
mov
sti
ja
inc
and
cs
xchg
push
ja
aam
cmp
jb
pop
movsl
fldt
or
mov
jp
lret
jns
fmull
xchg
add
mov
ret
enter
xchg
mov
pop
out
jne
jne
scas
pop
fwait
pop
adc
rorl
sarl
std
das
jnp
cmp
incl
add
pushf
or
or
xorb
loopne
movsb
jns
xlat
mov
aaa
jge
sahf
cs
lds
add
enter
pop
mov
addr16
int
push
mov
push
stos
inc
jge
jae
dec
lcall
pop
ret
hlt
inc
mov
jl
pop
aas
inc
mov
imul
adc
repz
in
adc
lds
movsb
sub
leave
gs
add
add
lods
push
jp
ja
fisubl
sub
jl
or
ljmp
rclb
icebp
incl
sub
cld
xchg
dec
push
lds
int3
adc
stos
or
stos
popa
sub
imul
jl
adc
rclb
lret
jle
jns
repz
add
lret
and
jmp
mov
mov
out
pop
pop
fadd
int
dec
cmpsl
les
pop
cmc
pop
out
out
mov
bound
loopne
enter
sbb
sbb
push
xchg
cmp
mov
jne
push
cmpsb
insb
in
insb
push
mov
lret
std
enter
mov
push
push
lods
or
addb
mov
call
insl
sahf
int3
gs
decb
scas
sub
test
outsl
lret
cmp
shr
xor
cmp
andb
std
xchg
push
add
dec
imul
push
in
sbb
flds
mov
outsb
scas
jb
lret
push
xchg
adc
xlat
sbb
data16
mov
filds
adc
loopne
inc
scas
fistps
es
enter
cli
or
mov
mov
gs
data16
cmp
push
xchg
sbb
stos
push
imul
into
push
sar
adc
pop
rorb
inc
mov
push
dec
mov
scas
fs
xor
insl
in
dec
add
add
cltd
loope
sbb
mov
mov
sbb
push
push
mov
adc
ficoml
fists
xchg
js
xor
cmc
xchg
adc
ds
lahf
daa
mov
mov
cli
mov
push
scas
mov
lea
test
rorb
jge
or
fwait
pop
mov
into
pop
pop
pop
hlt
sbb
call
out
std
ja
xchg
xchg
daa
lods
fwait
das
xchg
sbb
andb
rcll
mov
cmp
jl
or
repnz
add
test
mov
movsb
dec
fadds
pop
jns
mov
jb
mov
mov
pop
mov
xchg
into
inc
or
outsb
xchg
test
jp
or
mov
dec
sti
mov
shlb
clc
sahf
sbb
adc
cmpsb
xchg
pop
cltd
mov
pop
loop
mov
add
adc
push
mov
add
subb
outsl
icebp
adc
jl
icebp
pop
or
or
xchg
ljmp
mov
in
mov
lea
and
adc
stc
mov
jns
clc
out
fucomip
mov
pop
shl
lret
xor
repz
xorb
or
stos
mov
inc
mov
mov
or
inc
add
dec
inc
ficoml
in
mov
xor
out
pop
out
dec
xchg
xchg
add
adc
mov
push
adc
fisubl
mov
fsts
popf
push
inc
lock
jbe
lcall
jb
jl
adc
and
out
xchg
in
ret
ljmp
pop
jns
imul
stc
stos
fwait
sahf
sub
mov
or
jl
pushl
dec
mov
je
dec
loope
add
mov
int
xchg
inc
mov
mov
mov
int
dec
loope
lds
mov
aaa
sarb
jae
sub
jge
fsub
imul
add
not
pop
out
insl
out
mov
loope
sahf
rclb
pushf
inc
cmp
stos
gs
subl
cwtl
push
shlb
out
iret
out
fistps
in
test
add
shlb
push
into
mov
fcompl
cwtl
sarb
iret
dec
jl
adc
lahf
rclb
dec
and
hlt
sti
jne
cld
dec
dec
cmp
pop
inc
push
sti
inc
jno
dec
adc
adc
out
cmp
ljmp
fs
mov
jo
xor
sub
imul
sub
add
shl
xor
jne
pop
jns
popa
mov
mov
add
fwait
xchg
jl
sbb
lcall
dec
jb
or
and
fxch
lds
cmp
mov
xchg
fs
sbb
sbb
push
out
fistl
adc
jbe
fcoms
xchg
lea
into
jb
jne
je
mov
push
push
int3
inc
out
in
repnz
dec
es
pushf
jne
jns
cmc
mov
or
pop
arpl
bound
mov
dec
and
iret
lods
push
sbb
mov
cmpsb
cs
add
in
sub
xor
fisttps
pop
jnp
subb
xchg
ljmp
push
popl
xchg
mul
icebp
push
xor
sbb
jno
cltd
xchg
out
cmpsb
pop
stos
pop
leave
aas
push
imul
fistpll
add
xchg
mov
daa
xchg
and
push
dec
cmp
shrl
in
sbb
mov
pop
push
insl
jno
sti
js
les
add
jo
dec
and
push
loope
fstpt
ffreep
xchg
jb
pop
repnz
pop
popf
icebp
repz
int3
mov
cmc
das
sub
xlat
jge
jp
add
in
mov
ds
sbbl
mov
ss
stc
movsb
cmp
into
sub
leave
loop
call
mov
fs
mov
push
pusha
sub
js
ret
jne
adc
sub
fs
int3
cmp
mov
sbb
inc
cmp
xor
mov
inc
adc
push
mov
je
xacquire
test
xchg
and
adcb
mov
mov
das
js
vcvtpd2psy
push
popf
fstpl
mov
jmp
or
and
push
in
fnsave
test
xchg
mov
fcmovnbe
xor
push
jno
jns
xchg
mov
aam
pusha
inc
adc
inc
lret
mov
jae
sbb
jb
jb
inc
mov
sub
adc
sub
inc
mov
pop
sub
flds
clc
in
jg
or
mov
fs
jmp
cld
lods
xchg
add
mov
adc
pop
inc
xchg
iret
push
insl
mov
mov
jno
fs
xlat
fldt
pusha
xor
dec
ja
iret
cmpsb
popa
pop
ds
cmp
sub
imul
mov
add
jns
mov
repnz
rcrb
lret
std
je
pop
pop
repnz
hlt
cwtl
imul
mov
add
fisubl
dec
orb
jae
sub
and
mov
fsubs
jae
dec
jmp
cli
insl
aaa
fdivrl
loop
mov
push
xchg
sarb
ja
sub
sub
xchg
test
xor
iret
bound
movsl
subl
addb
mov
inc
clc
stc
inc
test
jp
pop
mov
cmp
shlb
adc
adc
lods
jl
push
push
ljmp
popf
fucomp
pop
adc
cmp
xor
aam
xchg
pop
ret
ljmp
xchg
add
fwait
xchg
pop
fs
lods
imul
xchg
mov
push
add
cmpl
mov
dec
es
inc
rorb
fcoms
cltd
jbe
sbb
stos
mov
mov
movsl
sahf
jp
sub
bound
mov
and
jecxz
das
divb
leave
daa
bound
push
or
xchg
and
std
sub
ja
loopne
arpl
shlb
dec
or
push
xchg
or
pop
add
repnz
cwtl
or
int3
adc
popf
imul
and
cld
mul
cmp
stos
inc
pop
fwait
xor
sti
mov
mov
mov
ljmp
data16
mov
push
ljmp
aaa
add
out
pop
rorb
in
jl
pop
cmp
lret
int
sbb
fadd
inc
or
inc
rolb
das
and
fiadds
ja
aam
movsb
stc
sbb
outsb
setb
cltd
jno
or
sbbb
jno
insl
cmp
aad
mov
pop
cmp
jnp
stos
pop
pop
ss
jg
movsb
jb
leave
into
mov
fs
mov
xchg
jp
mov
lods
cmp
dec
pop
inc
jae
cmpsl
lock
xchg
into
push
icebp
xchg
leave
ljmp
bound
inc
aaa
test
fldcw
sbb
xchg
cmp
notb
fidivrs
sbbb
jg
addl
movsl
shlb
push
mov
aas
pop
pop
cmp
jl
jle
cmpl
add
enter
push
jl
jmp
sub
xlat
jne
cli
divl
sti
pop
sub
adc
in
insl
scas
imul
push
fnstcw
jno
stc
pop
cltd
movsb
pop
inc
hlt
popa
js
sti
and
xor
loop
sbb
pop
mov
nop
lahf
clc
cmpsl
fisttps
or
mov
push
mov
ja
cltd
std
rcrb
pop
pop
and
pop
mov
push
sub
mov
jb
stc
cs
sub
sbbb
xor
fstpl
ja
xchg
xchg
rcrb
test
imul
cmc
in
sti
pcmpeqb
lret
rcrl
pop
mov
incb
push
jbe
inc
xchg
je
dec
sbb
stos
mov
sub
fidivs
fsubrl
ss
cmpsl
jl
sbb
pop
fwait
lods
or
in
or
jl
mov
jmp
mov
and
testl
test
sub
sbb
xchg
mov
jge
cld
lods
cltd
std
and
jl
pop
and
mov
daa
aad
jne
sub
cmp
dec
test
int
pop
cli
xchg
sahf
sbb
xor
test
aaa
dec
xchg
cmp
push
out
test
ss
stc
mov
hlt
and
mov
push
popa
jne
jno
or
subl
ljmp
xor
bnd
jne
jne
repnz
data16
sub
and
jle
add
repnz
cld
xor
cld
or
sti
add
ficomps
jle
pop
js
push
push
lahf
mov
test
or
mov
push
les
setle
inc
push
fisttps
dec
sub
cmpsb
jne
sub
xor
ficoml
sbb
mov
push
xlat
rolb
pop
jp
negl
aam
push
lods
xchg
lret
or
dec
xchg
lcall
cld
mov
inc
sub
mov
and
sarl
fdivl
aam
add
and
and
xchg
mov
inc
jl
pusha
scas
push
ds
xchg
cmp
sub
mov
xrelease
cli
js
lods
cltd
stos
nop
adc
mov
fsubp
hlt
fwait
pop
inc
fldenv
cmp
mov
jge
test
fcomps
mov
xor
mov
ja
pop
in
push
jno
ds
popa
mulb
add
push
and
pop
das
mov
mov
shlb
mov
pop
in
dec
scas
or
int3
enter
test
pop
pop
xchg
or
mov
ret
mov
fwait
xchg
aad
mov
or
dec
add
int
and
push
add
icebp
jp
aam
movsl
ljmp
inc
jp
fsubr
addr16
scas
mov
pop
or
jg
lock
cmpsb
push
stos
mov
lahf
push
adc
lods
les
mov
xchg
mov
push
aad
inc
push
or
call
pop
inc
pop
ds
ja
jo
mov
cltd
mov
icebp
mov
stos
pop
lock
outsl
sbb
cmpsl
adc
cwtl
in
sarl
int3
repz
push
lods
divb
dec
aam
jge
shrb
gs
pop
xor
xchg
pop
dec
push
data16
int
cmpsb
outsl
mov
sub
repz
jnp
stos
ficoms
cli
scas
outsb
jo
lret
sub
dec
mov
push
pushf
dec
push
lret
push
push
add
pushf
cld
jg
int
rolb
mov
mov
mov
fwait
dec
hlt
loope
mov
sbb
and
pop
dec
test
mov
cmc
hlt
inc
orb
inc
lds
arpl
xchg
repz
orb
test
sbb
adc
cmpsb
cmpsb
xchg
dec
cltd
icebp
jge
mov
loopne
pushf
mov
xchg
sbb
dec
adc
lods
sti
push
and
or
leave
jecxz
mov
mov
xor
addr16
xor
rclb
cmp
sub
inc
cmc
xchg
fistpll
jle
popf
sbb
fsubr
pop
ss
xor
xor
xchg
inc
jecxz
gs
inc
cs
ja
or
jecxz
sub
fldl
inc
fsubr
test
pop
push
cmpsl
pop
or
data16
rcll
cmp
jmp
adc
sub
lret
stos
ret
js
cmp
inc
daa
dec
rorb
push
in
fbld
jns
xorl
std
adc
add
addr16
pop
adc
inc
pop
imul
pop
jb
mov
sahf
mov
push
sbb
leave
mov
cmp
xchg
daa
je
fisttpl
daa
dec
adc
repz
or
mov
xor
aaa
pop
subl
and
dec
inc
push
cmpsl
out
jg
push
dec
mov
or
mov
xchg
adc
and
mov
arpl
fnstenv
lret
jnp
out
loop
gs
add
pop
cmpb
xor
std
ror
jp
insl
and
sahf
or
pop
cli
mov
das
mov
les
jmp
in
xchg
sub
jl
xchg
fildll
movsb
ja
or
jne
je
outsl
int
insl
or
divb
rorb
jnp
add
jge
test
push
xor
cli
test
or
fstpt
jl
mov
out
pop
cmpsb
add
pop
mov
push
cli
les
adc
in
dec
pop
push
xchg
push
add
loop
inc
push
andb
pusha
rclb
cmp
subl
cltd
jnp
scas
xchg
and
add
jmp
outsb
mov
pop
jge
inc
cli
inc
push
mov
pushf
fdivs
push
jne
in
mov
inc
shlb
aam
test
aam
inc
imul
push
sti
cmc
pop
push
push
pop
mov
int3
push
or
fiaddl
rcrl
lret
xchg
leave
fs
cwtl
xor
gs
inc
aam
mov
or
test
xor
push
repz
fnstsw
xchg
lock
mov
push
adc
mov
mov
jp
cmp
enter
lds
mov
xchg
mov
inc
cld
cmp
sbb
cwtl
xor
or
jg
lods
les
out
test
icebp
xchg
fwait
ds
mov
stc
iret
stos
sub
idivl
jp
adc
lea
sarl
into
inc
bswap
mov
insl
aaa
shrb
out
out
fs
jge
int
das
xor
ficoms
mov
ret
arpl
hlt
jne
iret
std
sub
das
fwait
dec
push
rol
inc
mov
xor
mov
hlt
pop
fldt
sti
ret
jmp
jnp
sub
xchg
or
orl
clc
fsubl
sub
outsb
js
sbb
xlat
in
das
pop
pop
xor
pop
je
jmp
inc
movsb
mov
loopne
adc
inc
insb
jl
or
sti
jmp
mov
mov
nop
insl
test
mov
xor
lret
ret
sti
adc
das
call
xlat
cltd
add
mov
out
cmp
popa
push
std
xchg
jge
dec
fisubl
push
cwtl
mov
icebp
xor
test
xor
xor
mov
subb
ret
mov
shl
mov
sarl
inc
aaa
pop
add
xchg
add
out
es
popa
mov
xor
xor
xor
inc
dec
fs
mov
add
mov
and
cmp
cmpsb
and
fldl
xchg
add
lods
pop
inc
into
test
sbb
mov
rclb
fldl
lock
jl
jp
mov
stos
dec
mov
sti
in
lock
jl
xor
or
pop
sub
inc
into
frndint
or
stos
or
xchg
and
xchg
pop
add
cs
fmull
and
dec
stos
fs
imul
arpl
pop
sbb
add
push
popa
adc
test
add
aad
xchg
ljmp
cmp
xchg
inc
xor
adc
push
inc
comiss
fsubr
mov
repnz
xor
xor
xor
mov
mov
jge
cmpsl
ss
cmc
movsb
xlat
sub
jge
scas
aas
jns
jecxz
cmc
mov
rclb
loop
jnp
pop
insb
into
xchg
mov
push
dec
std
into
pop
out
pop
dec
mov
xor
jmp
push
dec
imul
lret
aas
repz
xchg
push
pop
out
jb
sbb
or
mov
ljmp
add
in
or
inc
shll
imulb
lea
dec
aad
outsb
into
jmp
jle
pop
fmuls
iret
push
in
jb
adcb
pusha
push
aam
bound
jne,pn
outsb
xlat
jnp
xchg
cwtl
aas
add
scas
ss
cwtl
and
mov
sub
push
dec
push
mov
lret
adc
sbb
mov
mov
rcrb
js
test
cmp
iret
sahf
mov
cmp
sub
xchg
out
in
test
outsb
imul
cmp
cld
inc
inc
stos
dec
cmp
mov
arpl
cmp
into
outsb
jno
test
call
mov
jmp
mov
repz
sbb
cltd
stos
clc
pop
or
xor
mov
cmp
push
push
rcrb
cwtl
out
dec
add
pop
fs
int
fs
addr16
or
fmull
es
mov
xor
jb
mov
mov
popf
jae
mov
popa
leave
or
or
fcoml
jns
adc
sbb
or
cmpsl
iret
mov
ss
pushl
mov
iret
add
adcl
repz
push
mov
push
mov
ret
insb
mov
inc
not
jns
add
test
gs
push
cmp
stos
dec
dec
inc
jmp
jle
test
pushf
or
hlt
pushf
inc
mov
bound
dec
lods
mov
xor
decl
sbb
jae
sbb
fimuls
scas
jp
ss
jb
loope
pop
jl
jo
mov
jno
dec
cmp
outsb
daa
mov
lret
xchg
xlat
mov
push
xchg
cli
stc
mov
mov
sub
fstpl
incl
add
hlt
xchg
jmp
cld
jae
xor
push
push
mov
jo
adc
push
add
enter
dec
sbb
dec
imul
xor
stc
test
pop
jno
jb
sbb
int3
aas
out
inc
sbb
mov
mov
sti
lea
lahf
aas
cli
pop
and
ffreep
mov
ljmp
iret
jae
dec
pop
pop
outsl
push
xorb
shrl
and
mov
ds
loop
and
in
pop
mov
push
mov
fwait
jnp
jno
in
xor
sti
repnz
sbb
stos
mov
insl
push
mov
jnp
loope
inc
mov
ds
inc
andb
fnstsw
sub
jnp
in
mov
out
mov
push
jg
cmpsl
pop
jl
add
jb
mov
movsl
adc
push
sbb
repnz
bound
sbbb
jne
ret
sti
mov
test
cmpsb
push
orl
sub
lock
dec
test
repnz
or
jae
push
test
jne
dec
pop
pusha
loop
mov
mov
cmc
das
inc
fs
lret
fdivs
inc
sarb
divps
or
pop
fstps
leave
cwtl
inc
je
pop
ret
test
adc
popf
jns
mov
test
out
shll
cs
jmp
in
jle
aad
and
iret
insl
ret
mov
shll
js
jmp
push
out
cmp
lret
repz
clc
jg
test
pop
lcall
inc
mov
stos
xorb
jp
js
rcr
push
icebp
xchg
xor
or
jl
mov
pusha
lock
adc
mov
jmp
mov
dec
mov
out
inc
mov
movsl
inc
cmc
xor
enter
adc
jecxz
dec
xchg
cmp
mov
and
enter
mov
repz
subl
mov
aad
fiadds
add
clc
cmp
jo
mov
ss
orl
movsl
add
stos
xor
mov
mov
inc
out
xchg
sbb
stc
int
push
mov
bound
imul
add
push
mov
lea
push
loop
aas
mov
rcrb
sbb
push
jmp
push
jo
mov
mov
mov
mov
out
sbb
aas
cmp
dec
out
popa
addl
jg
lcall
push
fisubrs
loop
pop
cmpsl
push
mov
pusha
xchg
pusha
das
dec
movsb
outsl
cmp
sbb
jmp
mov
imul
sti
inc
mov
xchg
call
jge
jg
aad
ds
mul
clc
movsl
das
adc
xchg
rorl
xchg
or
cld
push
ds
fcompl
movb
adc
mov
fwait
and
cmpsb
cmc
nop
add
xor
dec
jne
jns
mov
movsl
lock
int
cmc
sub
rcrb
pop
loop
int
xchg
iret
pop
test
xor
add
fstpl
gs
pop
pusha
xchg
test
aaa
sahf
hlt
imull
pop
sub
stos
ret
int
incb
cmp
cmpb
mov
jne
aam
mov
loop
mov
iret
xor
cmp
cmp
mov
jns
in
insl
jp
cmp
mov
pop
push
inc
mov
bswap
mov
cmp
mov
push
jg
je
inc
xor
out
lret
xchg
xchg
push
add
inc
sbb
lods
insl
nop
sub
inc
daa
enter
into
stos
rcl
jle
addr16
insl
push
loopne
dec
popf
shlb
sbb
mov
fdivrs
ds
sti
pop
loope
roll
inc
cmp
std
repnz
jmp
imul
rcrl
les
jg
insl
insb
mov
mov
bound
ljmp
rcl
pop
lock
enter
das
lret
in
out
lret
inc
inc
push
lods
cmp
rcr
xchg
push
ljmp
inc
in
aas
add
xchg
fs
adc
dec
cmp
test
sbbb
call
mov
inc
sub
pop
cmp
push
lea
fistpll
sbb
dec
fsubrl
call
insb
cmp
rcll
adc
jae
mov
jno
lods
mov
mov
xchg
aas
add
dec
inc
or
mov
pop
inc
cmp
sub
mov
scas
xchg
iret
push
inc
sbb
add
dec
iret
jnp
xchg
mov
jg
sahf
test
cmp
imul
test
mov
stos
jnp
jp
orb
lds
mov
lret
daa
sbb
daa
mov
pop
jne
sbb
hlt
and
mov
mov
xor
mov
iret
movsl
mov
inc
pop
stc
dec
ror
loop
ds
add
mov
mov
cmp
test
test
pop
inc
sarl
rorb
mov
xor
icebp
addr16
rcrl
adc
adc
jl
xchg
popa
ret
cs
in
or
leave
xor
das
cmpsl
or
jns
pop
out
xchg
lock
stos
ljmp
ficoms
dec
pop
adc
xcrypt-ctr
cmpsl
pop
fwait
mov
aam
rcr
jo
imul
cmpsl
sbb
mov
clc
and
ja
or
jg
lock
cmc
nop
sub
sub
pushf
sub
xor
movsl
dec
adc
cld
sbb
ja
int3
mov
jg
inc
sbb
mov
xor
addr16
dec
popa
testl
gs
ljmp
lret
out
pop
jnp
mov
cmp
int3
jns
or
and
jg
inc
imul
mov
lock
jmp
xchg
xor
fildll
pop
loope
ja
inc
lods
mov
arpl
idivb
sbb
cwtl
ja
inc
lcall
pop
sahf
mov
es
push
mov
loop
jg
ljmp
test
dec
adc
xchg
adc
jne
xchg
xchg
or
sbb
fimull
mov
and
mov
out
loopne
or
lret
test
dec
xor
jo
cmc
xor
jb
hlt
stc
xor
sub
lret
ds
mov
and
je
add
or
pop
rolb
enter
lds
sbb
or
sub
lds
movsb
xchg
iret
iret
test
inc
mov
ret
xor
lds
mov
mov
fdivrp
add
dec
test
push
or
lods
mov
xor
mov
fstl
cmpl
imul
jmp
in
fmulp
add
std
ljmp
into
filds
mov
cmpsl
scas
nop
idivl
pop
aad
addr16
jmp
lahf
adc
jo
mov
pop
in
xor
test
fwait
sbbb
and
aas
pop
adc
cmpsl
xor
push
xor
or
jb
pop
call
stos
lock
jmp
in
xchg
addl
mov
repz
mov
mov
test
mov
push
sub
add
push
xor
js
mov
cmpsl
push
les
cmp
jecxz
ds
jmp
xchg
in
andb
lea
test
mov
daa
daa
jne
test
shrl
aam
dec
sahf
or
fwait
jno
jecxz
jge
fs
or
test
mov
rcrl
sbb
mov
cltd
call
and
xchg
sarl
cs
or
sub
bound
fstp
shll
aaa
add
cltd
xchg
ds
lcall
push
in
lods
sbb
ret
mov
or
mov
ret
xchg
shlb
cmp
jae
gs
imul
adc
xchg
jo
cs
les
mov
loop
mov
iret
mov
mov
mov
sub
jno
and
inc
sbb
cmpsl
ret
stc
ljmp
pop
xchg
push
and
and
cld
dec
jmp
and
stos
fistpl
cmp
and
push
add
sbb
fnsave
jg
jb
idivb
pop
jno
jo
cmp
ud1
test
bound
iret
inc
jns
cmpsb
sbb
jb
int
sbb
sbb
dec
in
sub
mov
fwait
outsl
fldcw
and
rclb
push
cmpsl
ret
leave
lahf
pop
sub
xor
push
into
and
mov
lret
lret
mov
imulb
je
xchg
wbinvd
into
or
cwtl
xchg
ss
in
jns
inc
push
dec
push
rorb
sti
pop
nop
sbb
jmp
outsb
or
pop
sti
push
mov
xchg
rsm
sbb
jae
rcr
xchg
pop
pop
mov
cmp
or
jecxz
fsubrl
xchg
cmpsb
xchg
mov
je
in
loop
pushf
popf
fisubs
xchg
pop
and
mov
movsl
mov
jl
stc
pop
jge
cmp
add
mov
in
jge
jmp
pop
add
mov
lret
cs
inc
lcall
sar
pop
pop
push
pop
push
mov
dec
jge
popf
cmp
insb
lahf
pop
lret
scas
mov
stc
mov
dec
int
iret
imul
movb
negb
or
add
icebp
in
and
andl
cmc
lcall
push
sub
bound
out
push
repz
dec
adc
test
jg
cmp
rorl
std
jbe
jge
ret
std
sti
test
dec
fldt
mov
push
pop
in
gs
popa
sub
and
push
pop
or
inc
das
fwait
sti
dec
fwait
xchg
out
xchg
cltd
adc
scas
in
cld
cs
push
mov
cmp
testb
cli
jne
in
test
inc
add
dec
jns
add
jmp
imul
aaa
mov
addl
movsb
stos
xlat
orb
inc
xor
inc
cmp
add
lret
or
add
jo
inc
je
ret
fisubrl
fs
ds
push
jnp
aad
stc
pop
sahf
mov
je
inc
or
or
lret
ret
stc
and
lret
inc
leave
xor
cwtl
push
push
pop
lcall
push
mov
ljmp
inc
push
fidivl
clc
and
push
adc
out
pop
fistps
rol
lock
mov
dec
pop
scas
xchg
cmc
inc
mov
es
and
out
stos
mov
outsb
mov
inc
enter
insl
movsb
pop
xchg
mov
cli
jne
mov
pop
andb
mov
shll
nop
jp
jb
test
xchg
icebp
mov
shlb
sbb
cmp
xchg
dec
lret
xchg
imul
sbb
pop
lcall
jecxz
shll
pusha
int3
inc
inc
fmulp
sub
jge
in
and
scas
dec
vpsubd
rorb
stos
call
aad
ja
insb
xchg
mov
and
in
pop
pop
shl
xchg
push
mov
leave
mov
inc
hlt
bound
inc
cli
sbb
ja
scas
arpl
outsl
adc
ds
mov
push
mov
jb
ja
mov
jbe
jge
fcompl
sub
dec
stos
movb
jo
mov
inc
test
jmp
jge
insl
push
aad
ds
cmp
std
inc
pop
jle
push
jmp
in
cmp
shll
jmp
outsb
insl
ljmp
push
xor
gs
sti
xor
mov
fnstenv
fmull
push
mov
mov
mov
arpl
jnp
xchg
push
xchg
stc
negl
fnstsw
jecxz
inc
mov
xor
cmp
mov
pop
subb
xor
mov
out
pop
out
sbb
jmp
dec
jb
xchg
xor
ret
mov
pop
cmp
loope
pop
mov
pop
data16
test
push
xchg
imul
xchg
sahf
and
inc
xor
sub
xchg
mov
cli
stc
outsl
test
into
sub
jno
iret
orb
iret
out
das
push
push
add
jns
cmp
pop
aam
mov
sub
inc
sub
jg
xchg
jge
clc
and
fwait
mov
sbb
aaa
lock
cmp
jg
jmp
enter
jne
mov
sub
mov
jbe
aam
test
rcrl
xchg
push
fwait
mov
mov
pop
jmp
add
push
rcrb
or
lcall
jne
jge,pt
or
das
push
rclb
data16
outsl
sub
fsubrl
pop
cmp
sbb
jg
adc
std
mov
sbb
insl
mov
pop
lds
mov
sbb
lods
adcb
add
inc
xchg
sti
dec
jp
push
mov
mov
sub
jb
je
lock
jb
sub
add
sub
daa
repnz
repnz
push
subl
push
outsl
into
dec
icebp
lds
lahf
call
add
mov
movsb
add
pop
stos
sub
or
loop
pop
movsb
dec
loopne
and
das
pop
inc
add
das
jp
add
and
or
lods
adc
mov
hlt
lcall
cld
repnz
dec
inc
mov
dec
mov
sahf
cmp
rcl
imul
cmp
jg
aas
pop
fsubp
jnp
and
pop
mov
cmp
xchg
test
xchg
icebp
lret
mov
mov
je
pop
faddl
js
sub
mov
movsl
imul
es
daa
leave
out
and
mov
add
lock
push
out
jmp
add
es
cmp
ja
ss
mov
aas
sub
inc
pusha
mull
inc
lea
inc
addr16
push
stc
xor
imul
xor
adc
test
shr
data16
insl
rolb
sub
xchg
aas
scas
into
std
lahf
adc
push
xchg
mov
imul
adc
daa
pop
aaa
xchg
or
dec
jmp
push
inc
mov
sbb
xchg
js
sub
jp
lock
out
lds
inc
fdivr
jp
cmp
mov
inc
lret
or
dec
dec
inc
cltd
mov
pop
mov
xor
insl
cmp
das
in
fs
shl
xor
fdivl
movl
leave
in
sbbb
mov
pop
jle
int
jb
push
insb
fcmovu
xchg
mov
clc
push
jo
decb
mov
mov
cmp
jmp
mov
repnz
lods
jo
addr16
in
adc
sahf
or
mov
mov
fldenv
std
arpl
or
jmp
daa
push
jge
scas
pop
mov
lret
movsl
mov
mov
repnz
in
ret
jl
jbe
outsb
lret
jmp
and
push
mov
adc
add
sar
aam
addr16
mov
inc
pushf
in
push
cmp
pop
movsl
or
xchg
adc
test
stos
and
mov
shr
sub
xchg
xchg
mov
rol
stc
cld
dec
dec
fldl
jp
mov
mov
push
dec
jmp
xor
lods
pop
sbb
jge
lock
xchg
sbb
sbb
mov
out
repz
jp
mov
mov
xchg
repnz
out
or
xor
sub
inc
movsb
cwtl
rcrl
jmp
aaa
mov
push
mov
in
imul
movsb
pop
fdivl
adc
inc
std
mull
mov
loope
cltd
add
loope
dec
stos
pop
sbb
lret
inc
cmpsb
mov
clc
test
push
outsl
mov
cltd
and
cmp
adc
popa
aaa
jmp
sti
setne
aaa
cmp
sbb
xor
out
loop
dec
xchg
push
icebp
aad
aaa
sub
jp
les
xchg
lahf
or
push
xlat
pop
in
sub
and
add
int
testl
and
in
shl
and
pop
sahf
ret
xchg
ror
push
adc
mov
sbb
adc
dec
and
xchg
or
cmp
stc
jg
dec
jge
fmull
shl
mov
jmp
mov
jge
push
ds
enter
iret
ja
and
mov
xchg
inc
negl
xchg
test
scas
pop
mov
xchg
shlb
hlt
jp
aaa
mov
repz
scas
lret
push
aad
cltd
es
jle
lea
sbb
frstor
inc
add
int
inc
shlb
je
xchg
or
push
cmp
mov
in
sub
mov
test
xor
jl
sbb
shl
adc
pop
dec
ret
into
pop
sar
rcrl
lahf
sbb
push
ret
cmp
jle
int3
pop
outsb
mov
scas
aam
cmp
cld
mov
sbb
mov
jmp
stos
xchg
out
sahf
xchg
lret
cmp
shlb
lret
daa
out
and
fscale
ljmp
mov
ja
imul
adc
adc
mov
dec
ds
aam
dec
sub
popa
hlt
sbb
mov
adc
in
push
jmp
lock
xchg
or
jbe
lock
repz
xlat
dec
jmp
or
cmp
pop
shlb
cmp
jnp
js,pn
hlt
dec
sti
lcall
jge
mov
adc
ljmp
cmpsb
gs
ret
push
adc
push
mov
and
es
inc
jp
lret
xchg
cmc
xor
imul
ret
mov
fnstenv
mov
out
out
pop
std
int
gs
fs
cmp
stc
jp
outsl
loop
rcrl
ja
mov
mov
ret
adc
adc
mov
ja
adc
fcoms
add
dec
fxtract
mov
cmp
lret
lcall
dec
aaa
jmp
or
test
mov
repnz
push
leave
adc
mov
loopne
cmc
dec
std
dec
or
jle
sti
pusha
lock
stc
hlt
cwtl
xor
push
xchg
inc
xchg
imul
or
mov
ljmp
or
pushf
add
pop
mov
push
push
decb
or
ret
outsb
addr16
mov
lods
sbb
xchg
add
leave
pop
pop
pop
dec
or
lret
ficompl
mov
or
mov
jge
pop
inc
jmp
cmp
sbb
popa
stos
inc
pop
jecxz
ljmp
lcall
leave
mov
push
sub
in
lcall
shl
mov
arpl
sahf
lods
mov
rolb
jmp
inc
insb
int3
lds
jo
fwait
daa
sub
popa
push
mov
adc
sub
jbe
rcl
push
in
test
add
cmp
cmp
je
cltd
lock
dec
add
push
test
mov
sub
es
and
cmp
into
clc
test
in
loope
push
rorb
sahf
add
jg
and
stos
mov
mov
pusha
lods
adc
adc
xchg
outsl
fs
cwtl
cmp
leave
push
fnstcw
test
insl
add
ror
nop
fucomip
ljmp
nop
mov
int
les
arpl
pusha
mov
cltd
rclb
push
sahf
sbb
test
scas
sbb
jg
fadd
cmp
lods
mov
ret
push
stos
pop
clc
lahf
fstps
popa
or
insl
push
and
icebp
xor
popf
pop
cmp
outsl
jo
mov
cmpsb
xchg
fisubl
inc
ret
inc
shr
mov
add
shl
movsl
cltd
enter
inc
loope
cmp
out
shlb
adc
testb
and
out
fcmovnb
testb
arpl
dec
mov
and
lahf
mov
imul
mov
and
aas
rcrb
sbb
sti
cmpsl
add
outsl
arpl
mov
daa
cmc
fidivs
push
fildll
jp
ficoml
jl
add
test
lcall
iret
pop
push
jge
lret
push
rol
mov
xchg
fisttpll
aas
jmp
push
clc
dec
mov
xlat
daa
sar
test
pushf
cmpsb
pusha
aad
shrl
stc
xor
fucom
arpl
xchg
inc
sbb
int3
insb
imul
leave
push
addr16
mov
or
lret
and
or
fnsave
xor
movsl
inc
clc
inc
lret
mov
pop
xchg
popa
ss
adc
fmuls
movsl
adc
out
rcll
sbb
jae
hlt
sahf
shrb
cmp
into
test
jle
mov
mov
cmp
enter
in
arpl
data16
add
adc
mov
insb
std
cltd
pusha
rcll
arpl
mov
clc
pop
sarl
xchg
in
popf
mov
xchg
into
adc
cmpsl
sahf
pop
sti
mov
sub
sbb
pop
pop
and
in
pushf
mov
dec
lock
cld
outsb
jle
out
mov
hlt
mov
or
gs
dec
test
in
cmp
repz
adc
fs
pop
cli
and
aaa
stc
test
push
cmp
xor
jecxz
pop
in
mov
jg
ret
ljmp
iret
dec
or
sbb
sbb
add
dec
divb
stos
shlb
int3
pop
or
mov
cmp
enter
cmp
imul
mov
dec
cltd
xor
mov
jb
jle
in
push
adc
cmp
pop
js
fidivrs
adc
faddl
xor
int
jo
mov
mov
js
push
das
mov
icebp
rorl
pop
push
inc
bound
inc
cmp
mov
mov
add
fiaddl
pushf
pop
scas
jae
and
js
dec
sti
push
inc
cltd
lret
insb
adc
js
dec
iret
inc
test
adcl
stc
mov
sbb
dec
je
push
rorl
mov
pop
outsl
xlat
lods
adc
xor
mov
test
push
sarl
fneni(8087
xor
mov
mov
jge
aaa
xor
and
jne
inc
js
stos
pop
sub
loopne
cmp
xor
push
pop
mov
dec
sti
or
fisubl
jl
gs
nop
lcall
outsb
aam
repnz
bound
loope
xor
in
sbb
adc
inc
icebp
mov
cmc
and
in
test
icebp
test
decb
and
test
fs
outsl
and
cmp
cmp
fsts
jmp
mov
imul
and
in
cmp
adc
movl
lods
movsl
or
pop
xchg
ret
jae
std
add
mov
psrld
faddl
test
pop
push
lds
repnz
imul
cwtl
cwtl
mov
or
sti
outsb
lcall
in
mov
adc
dec
mov
outsl
icebp
in
repnz
mov
jne
mov
sarl
in
mov
inc
sub
jbe
pusha
mov
cwtl
int
and
mov
imul
cmp
fsubl
xor
insl
pop
pusha
adc
mov
jl
rcrl
in
in
mov
mov
fcomps
popa
divl
push
dec
roll
jl
cmp
xchg
pushl
test
adc
pop
aaa
or
mov
arpl
mov
xchg
adc
dec
mov
pop
pop
insl
xor
stc
jnp
subl
push
mov
test
and
in
test
clc
lock
mov
add
fwait
cli
sub
xchg
pop
pop
into
dec
nop
mov
push
fbld
loopne
icebp
imul
mov
aaa
pushf
aas
cld
fistps
jmp
push
cmp
idiv
mov
lds
pop
aaa
jns
add
in
jg
cltd
rcll
xor
cmp
dec
test
cld
xchg
scas
sahf
ljmp
push
jnp
or
push
outsb
imul
in
shll
sbb
fistps
jns
hlt
js
cmp
pop
dec
loopew
cmp
sbb
mov
add
iret
xchg
adc
ja
lods
aam
jle
imul
dec
xchg
mov
stc
bound
sti
mov
push
jp
lahf
and
out
test
dec
jle
mov
mov
inc
outsb
insb
push
sbb
push
movsb
xlat
and
and
lods
outsl
loop
out
mov
test
mov
lret
cmpsb
and
orb
sbb
mov
lret
call
je
aaa
mov
mov
mov
inc
out
scas
add
xor
push
bound
inc
stos
push
pop
leave
and
stos
lret
bound
cmp
out
sbb
jecxz
xchg
dec
mov
lret
rolb
pop
movsl
sub
jb
inc
out
dec
xor
nop
mov
cli
xchg
cld
sti
test
stc
pop
and
movsb
dec
push
flds
xchg
repnz
ror
add
shll
outsl
push
dec
mov
js
add
ja
outsb
mov
fisubrl
and
fs
aad
cmp
leave
jecxz
xchg
and
js
scas
mov
lret
jmp
dec
test
insl
out
lret
loop
sti
dec
lret
cmc
icebp
xchg
insl
fcmovnbe
jae
repz
ss
xor
add
pop
adc
inc
inc
push
ret
push
push
in
fistl
mul
pop
lea
jl
dec
clc
dec
adcb
jp
jg
adc
rcr
jnp
stos
sbb
jge
lahf
cmc
cmp
in
xchg
cltd
scas
or
mov
cmp
sbb
dec
repz
jns
push
mov
and
fs
or
lods
push
pminsw
ss
int3
lret
mov
dec
in
lods
xor
bound
cs
insb
pop
or
das
cmp
xchg
out
sbb
push
mov
xor
gs
imul
insl
mov
out
test
adc
stos
sub
pop
mov
fwait
dec
jmp
adc
test
mov
notb
fcmovnb
in
jle
mov
lods
xor
insl
pop
cmp
pop
lahf
sub
adc
fsubrs
cs
jg
daa
ljmp
lahf
fdivr
pop
mov
xor
xchg
push
sub
mov
repz
les
fdivs
push
dec
pushf
mov
mull
cmp
int
adc
xchg
lock
sbb
xlat
mov
stc
mov
sub
mov
int3
sub
mov
push
test
lods
cmp
mov
sub
xchg
stos
or
cmp
rolb
and
stos
pop
outsl
scas
xlat
fwait
sbb
or
ljmp
test
iret
xorl
fstl
sub
fcoml
mov
dec
mov
enter
xlat
pop
ret
es
ja
seto
out
push
fwait
into
out
sub
ss
mov
inc
xlat
in
sbb
adc
addl
rorb
scas
jmp
adc
outsl
out
sbb
jo
mov
mov
repz
notb
dec
push
mov
jp
out
out
push
pushf
sub
bound
mov
mov
jne
lock
in
mov
shrb
mov
fistpl
test
pop
loope
fdivrs
sub
jg
sub
scas
adc
dec
leave
mov
hlt
insb
rol
repnz
rolb
lods
sub
insb
and
in
mov
lds
js
cs
into
cs
jns
cmp
enter
bound
clc
jae
jg
aad
xchg
dec
mov
mov
popa
xchg
test
jb,pn
dec
pop
fs
dec
dec
adc
popf
adc
bound
pop
in
pop
push
inc
ret
test
ja
jl
and
adc
xchg
int
movsl
push
daa
fnclex
adc
fcmove
inc
push
imulb
mov
lds
dec
jp
mov
mov
jne
and
jns
jnp
sbb
jle
sbb
lret
aad
mov
scas
in
mov
sub
roll
int
pop
stos
mov
das
pop
test
mov
cmp
jle
add
and
pop
jl
inc
cmp
adc
nop
pop
push
sbb
xchg
jp
out
mov
stos
iret
xlat
adc
xor
cmpsl
lret
and
mov
stos
fimull
sub
cmp
cli
cmpsl
mov
xlat
addr16
mov
in
out
cmp
mov
das
out
mov
sbb
cmp
jecxz
sahf
mov
outsl
push
sbb
insb
mov
cmp
pop
add
lock
push
sbb
inc
cmpsl
inc
adc
inc
mov
lret
les
inc
popf
add
and
aam
xlat
mov
test
in
imul
add
add
lods
cmp
ja
or
shll
pushl
xchg
mov
andb
xchg
inc
mov
xor
jno
jnp
leave
in
add
negb
adcb
call
mov
ret
test
dec
mov
insl
pop
xchg
mov
push
scas
and
stos
push
imul
stc
rorb
mov
imulb
mov
jl
ja
sub
leave
jne
ret
lret
shl
stos
in
js
lods
mov
dec
xchg
inc
sbb
ljmp
pop
pop
mov
push
cmpsb
pop
fmuls
mov
mov
cmpsb
out
mov
in
push
adc
jmp
sbb
lret
fucom
mov
fabs
leave
xor
xor
sti
scas
ja
or
xchg
push
pop
negl
lahf
lods
lret
adc
jb
jecxz
and
jo
bound
xchg
mov
lcall
mov
ret
or
stos
pop
jle
adc
jne
inc
mov
xchg
jge
cmpsl
loop
fildll
xchg
adc
jbe
out
push
and
addr16
adc
aam
int3
inc
sub
cmc
xchg
imul
cmpsb
lret
aad
call
lds
jmp
jmp
adc
repnz
scas
push
mov
xchg
jecxz
je
inc
adc
mov
mov
scas
mov
adc
and
xchg
adc
imul
adc
push
jno
mov
dec
loop
gs
xor
sub
ljmp
mov
fwait
scas
push
popf
sti
push
jle
loop
in
daa
std
lods
sbb
jecxz
adc
xchg
or
je
lock
push
std
mov
inc
repnz
pop
icebp
sbbb
iret
aas
movsl
lret
cs
add
cmp
xchg
xchg
lcall
xchg
inc
jnp
xchg
cmc
sbb
sub
inc
adc
or
jnp
jle
repnz
mov
push
cwtl
push
fwait
jno
test
dec
pop
scas
adc
movsb
popf
sbb
add
arpl
adcl
fisttpll
cmpb
jns
add
aaa
movsl
mov
sub
fistl
clc
or
ja
dec
std
mov
test
mov
pop
loope
sub
pop
cmp
stos
outsl
pop
movsb
mov
out
jge
cmp
das
cli
sub
fucomi
add
pop
cmp
mov
mov
cmp
lods
xchg
push
mov
lret
in
pop
or
push
inc
stc
mov
pop
push
arpl
sub
lea
inc
testb
inc
inc
mov
dec
sbb
fsubr
dec
and
ljmp
je
push
fistl
mov
mov
add
jecxz
sub
push
jle
sti
xor
lret
push
cmp
pop
loopne
dec
inc
jns
sahf
scas
scas
test
mov
lret
popf
push
scas
adc
lock
pop
jge
xor
icebp
push
clc
pop
loop
mov
daa
rcll
outsb
xchg
cmp
pop
scas
in
mov
xchg
popa
es
sbb
rolb
scas
mov
dec
adc
gs
fwait
lods
js
push
sahf
movsl
push
jns
pop
popf
roll
outsb
cli
push
lcall
fnstenv
shrb
insl
sbb
push
iret
sbb
mov
fwait
xor
insb
shlb
sub
jp
fcom
in
dec
test
loop
fs
mov
ljmp
popf
ret
adc
cmp
std
cltd
sahf
inc
std
dec
call
nop
cwtl
xor
mov
dec
jg
push
jne
nop
sbb
mov
mov
fwait
pop
outsb
dec
xlat
out
xchg
adc
inc
andb
pusha
aas
mov
push
and
dec
outsb
mov
and
mov
cmpb
jnp
int
cmpl
sbb
bound
sub
scas
and
push
sub
and
pop
cld
jo
sbb
cmc
js
add
into
fisubs
fisubl
push
sbb
inc
xchg
in
pop
sub
jmp
lods
jl
jmp
dec
xor
jno
dec
sbbb
std
into
xchg
or
sbb
out
jbe
or
push
sub
lock
in
aam
and
addr16
adc
outsb
repnz
fisttps
adc
in
shlb
outsl
stos
cli
dec
cmp
push
fstpt
pop
jmp
dec
cmp
jmp
stc
std
add
cmc
das
push
out
rep
xchg
aaa
pusha
dec
cmp
ret
mov
inc
mov
push
addr16
ljmp
inc
add
scas
push
fdivp
ficomps
lds
mov
sub
jle
pop
sti
leave
cmpsb
lods
arpl
jl
je
pop
cmpsb
fwait
aas
pop
xchg
push
mov
ss
fiadds
mov
add
pop
fwait
aad
push
hlt
lods
rcr
incb
dec
or
stc
mov
xor
jo
inc
ret
loopne
fwait
popa
sbb
dec
xlat
int
data16
ret
mov
lahf
lret
or
aad
scas
fsubp
arpl
icebp
mov
addr16
arpl
pusha
adc
test
and
dec
add
repz
outsb
xchg
jne
cs
sbb
push
add
cmpsb
stos
and
pop
js
loope
aas
push
stos
cmpsl
outsb
push
xor
add
mov
pop
aam
outsl
daa
jge
sbb
jmp
adc
xor
xor
std
jge
pusha
scas
aad
sub
mov
daa
cmp
filds
jae
in
imul
dec
mov
fstpt
scas
fcomps
lahf
jmp
cmp
movsb
mov
dec
jae
arpl
dec
mov
xchg
pop
js
push
xchg
push
cmp
cwtl
mov
cmc
jmp
icebp
sbb
lahf
mov
pop
movsl
cmpsb
sub
sub
loop
out
mov
fwait
pop
inc
cmp
push
mov
aas
cmp
ds
and
in
adc
std
outsl
imul
add
dec
jmp
sbb
mov
in
outsl
or
cmp
lret
loope
cwtl
inc
xorb
in
dec
sub
xchg
add
xchg
imul
cmpsl
mov
inc
mov
xchg
insl
nop
jb
and
repnz
add
add
add
aam
test
cmp
mov
xor
aam
dec
dec
out
sahf
movsl
dec
clc
adc
sub
in
lcall
or
arpl
mov
xchg
mov
mov
or
rolb
sahf
scas
lea
shl
stc
lock
jne
cmp
lcall
sub
adc
lahf
sbb
mov
pop
stos
int
arpl
gs
add
dec
lcall
or
outsl
stos
xchg
jge
sbb
jle
repnz
stos
negl
outsb
hlt
ret
jne
ret
lds
mov
dec
insb
mov
push
mov
rcrb
sub
xor
and
arpl
stos
icebp
rol
sbb
push
push
lret
mov
pop
and
xor
stc
pop
adcl
mov
lea
out
push
push
sbb
pop
movsb
xchg
stos
test
push
mov
push
jne
xchg
rolb
mov
int
mov
ds
fwait
out
xor
inc
lods
sahf
add
hlt
pop
cmp
sub
xchg
test
test
mov
xchg
cmp
sti
add
arpl
sbb
into
imul
fwait
adc
aas
and
lret
cs
adc
xchg
jg
scas
jne
stc
insl
jo
mov
lods
cmpsb
movnti
dec
mov
ljmp
add
repz
push
inc
mov
jle
and
xchg
lea
add
in
xor
je
fwait
mov
in
cmpsl
shlb
sbb
mov
mov
outsl
and
push
add
leave
adc
dec
jle
aaa
sub
test
add
push
dec
jmp
nop
std
shrb
push
ja
add
bound
inc
dec
pop
pop
hlt
and
jl
sti
jg
cmp
xor
xchg
rcrb
hlt
cmp
lahf
jg
inc
jns
sti
mov
in
and
cmpsb
cld
repz
hlt
outsb
add
insb
stc
dec
cmpsb
adc
jle
xchg
xchg
mov
int
inc
je
imul
shr
push
cmpsl
loop
jecxz
or
xchg
push
cli
inc
mov
sub
dec
cld
mov
mov
je
lea
pop
xchg
mov
out
ljmp
add
inc
outsb
loopne
cltd
jo
jle
jae
dec
or
leave
divl
lret
mov
pop
xchg
fcoms
clc
je
call
hlt
out
lahf
stc
xor
sbb
sub
adc
idivb
push
imul
push
pop
call
fidivrl
xchg
ja
repnz
je
les
enter
cmp
cwtl
lcall
cli
enter
mov
in
add
mov
inc
sub
adc
or
inc
lea
xor
pop
push
pop
mov
test
inc
mov
inc
out
adc
cmc
stos
call
mov
jno
arpl
mov
pusha
gs
bound
mov
push
push
cmc
lds
imul
ret
aas
int3
xchg
dec
cmpb
dec
mov
dec
push
enter
mov
inc
jg
int3
stc
fdivr
add
mov
into
jl
movsl
scas
clc
imul
jle
popf
or
mov
scas
pop
mov
pop
xor
subb
pop
inc
jb
pop
pop
push
in
fwait
pop
mov
add
sub
jo
icebp
jmp
int
cmp
iret
out
lods
inc
cli
or
rcll
cs
mov
jns
cmpsb
test
lods
stos
jo
mov
jbe
cmpsb
fsin
sub
inc
ret
mov
xchg
jno
mov
xchg
push
push
jb
mov
cmp
mov
dec
std
sub
mov
scas
fnstsw
pop
sarl
aam
jbe
nop
rolb
jbe
ss
jmp
or
scas
jle
in
out
gs
arpl
cmp
ja
stc
pop
bound
lods
lret
fcmovu
cmpsl
inc
pop
and
cli
aas
js
mov
es
lret
lds
sbb
test
sbb
push
sub
std
loope
mov
inc
cmpsb
mov
aam
cmc
xchg
sahf
xor
jge
sbb
mov
lret
iret
mov
push
xchg
in
xlat
xor
jmp
movsl
inc
xchg
xchg
push
clc
imul
adc
pop
and
mov
fldenv
repnz
test
or
mov
adc
push
xor
and
cwtl
dec
mov
in
mov
ds
push
prefetch
or
cmp
adc
xor
mov
xor
hlt
sub
pop
int3
in
or
adc
pop
mov
sub
or
shrb
dec
stos
mov
fstp
sbbb
out
lods
jo
imul
adc
inc
les
out
jl
das
sahf
dec
int
dec
sbb
pop
adcb
mov
and
lret
pop
je
lret
enter
in
or
jge
jl
lods
test
dec
push
out
push
ret
cmpsl
jbe
int
sub
inc
or
ljmp
rcll
push
push
sbb
fs
push
ljmp
movb
mov
cmpsl
pushf
stos
mov
popa
sahf
dec
jae
lds
jbe
inc
out
and
out
sbb
les
dec
cwtl
sub
ljmp
mov
adcl
xchg
pop
adc
divl
je
fcompl
mov
fxch
pop
xor
mov
fs
xchg
int
sbb
push
pop
jl
mov
jb
xor
or
rcrb
add
jl
or
arpl
sub
pusha
hlt
cmp
jae
js
mov
mov
cld
in
inc
repz
jp
add
mov
push
lahf
adc
jecxz
mov
jbe
push
sbb
xchg
jge
mov
es
inc
ja
sbb
js
pop
out
shrl
jecxz
mov
and
mov
sub
jne
pop
fwait
push
hlt
or
push
iret
fsubs
cmp
cmpsl
gs
xchg
jge
rclb
jge
sub
cmp
lea
mov
aaa
add
fnstenv
sbb
cmp
in
gs
gs
xchg
test
fcomip
sub
test
sbbb
mov
aas
xchg
pop
fst
sub
mov
fwait
xchg
ja
jno
add
and
jnp
cmp
xchg
jns
adcl
mov
les
adc
sti
jecxz
dec
adc
dec
jnp
cld
mov
inc
cmp
or
ret
out
xchg
icebp
movsl
cwtl
cmpsl
icebp
jnp
xor
jle
jae
fnstsw
pop
cmpb
xor
mov
cmc
scas
int3
add
mov
push
add
and
xchg
push
sbb
mov
add
arpl
dec
lock
fdiv
std
int3
jl
inc
rcrl
or
jnp
jmp
int3
ret
cmp
mov
lods
push
cmpb
pop
sub
iret
std
out
mov
imul
inc
add
sbb
pop
test
notb
sar
hlt
cmp
nop
sbb
mov
cwtl
aad
test
pop
cltd
mov
adcb
sahf
out
fiadds
lods
pop
outsl
call
in
sub
sub
pusha
enter
sbb
pop
or
cmpsb
xlat
fs
ja
push
nop
rcrl
out
loopne
in
int3
xchg
xchg
jnp
cmpsl
aaa
subl
call
clc
mov
jnp
scas
prefetchnta
psraw
mov
push
mov
add
xor
mov
out
lcall
sub
add
lds
or
cmc
mov
xchg
es
jp
out
gs
xor
jb
testl
iret
leave
push
pop
mov
jns
jg
imul
mov
fmull
push
xchg
mov
outsb
orb
push
dec
movsb
xchg
lods
dec
pop
jnp
icebp
pushl
mov
push
xlat
mov
dec
icebp
pop
nop
out
inc
ljmp
pop
inc
mov
push
icebp
or
inc
inc
int3
or
lds
std
add
jne
push
adc
cmp
xchg
mov
push
insb
loope
add
bound
insb
xchg
imul
mov
fistpll
clc
daa
push
adc
imul
subl
xchg
pop
dec
pusha
in
and
bound
or
inc
mov
add
inc
into
js
arpl
cld
adc
imul
pop
sahf
inc
and
inc
outsb
mov
xchg
out
repnz
mov
std
jns
outsb
pushf
movsb
icebp
mov
cltd
movsl
inc
lds
mov
pop
push
jns
outsb
adc
fsubrs
or
adc
mov
test
bound
or
lahf
sahf
lods
or
sbb
mov
test
push
outsb
xor
sahf
adc
imull
lret
test
adcl
add
lahf
sub
ret
dec
ret
inc
mov
mov
popf
js
or
inc
dec
mov
lea
lods
add
into
dec
dec
mov
jno
push
sbb
add
or
mov
dec
push
dec
fisubrs
out
sbbb
xchg
iret
inc
icebp
xchg
inc
and
pop
push
call
push
sbbl
xor
or
outsb
fsub
in
sub
test
xchg
lret
ljmp
adc
popa
lods
pop
sub
out
pop
test
mov
inc
scas
mov
mov
mov
xchg
popf
pop
add
push
outsl
adc
lcall
xlat
sub
add
xor
ja,pt
bound
in
ds
push
sahf
sbb
ret
pushf
lea
push
pop
xchg
jl
out
rcrl
pop
or
jge
ss
mov
data16
addr16
lods
lds
cmp
adc
test
xchg
int3
je
in
scas
or
je
int
nop
jmp
gs
lock
push
cmp
pop
cmpsb
xchg
cs
push
test
mov
xor
push
pop
lods
cs
cmpsb
sub
lcall
dec
fdivrs
mov
nop
lock
mov
imul
loop
mov
xchg
repnz
pusha
neg
sbb
fcmove
xchg
mov
scas
xor
loopne
jae
xorl
movsl
mov
cmpsb
leave
rol
out
mov
adc
loopne
jo
sti
and
std
in
loop
fstpt
fstpt
mov
enter
inc
outsb
push
rorl
mov
sub
lds
cwtl
fdiv
iret
dec
inc
outsl
cli
push
iret
fidivs
dec
sbb
dec
dec
movsb
jns
xchg
sbb
cmp
mov
icebp
pop
imul
shll
mov
cmp
out
cwtl
imul
stos
inc
addb
rcrl
xchg
or
mov
lock
mov
xchg
push
dec
outsl
mov
jmp
xlat
cltd
shl
push
jg
pusha
fcmovnu
movsl
jb
lret
push
or
push
insl
mov
and
xor
xor
leave
add
and
push
jl
jae
sbb
test
mov
mov
or
fimull
or
adc
sahf
aas
addb
mul
in
mov
xchg
outsb
loopne
jmp
ja
mov
push
ja
add
and
lock
cmpsb
jmp
pop
fidivrl
xor
mov
sbbl
pop
enter
jne
push
sbbb
add
icebp
sbb
imul
inc
jle
adc
xor
fmull
jno
in
xchg
xchg
into
clc
clc
dec
test
aaa
das
xchg
mov
stc
xor
mov
jl
mov
inc
or
sbb
insl
cmp
aam
test
jns
adc
jns
jl
pop
mov
cmp
inc
rcll
inc
sub
inc
sahf
cld
add
cwtl
jmp
imul
push
hlt
pop
leave
and
das
enter
mov
mov
cmp
xorb
lret
rorb
fnsave
cmp
jae
add
jg
hlt
push
inc
or
popf
add
iret
es
jns
and
mov
add
addb
and
adc
rcl
xor
cmp
push
out
jmp
add
movsb
add
mov
fstp
add
mov
fdivl
sub
insl
sahf
pop
out
into
or
push
jge
data16
push
xchg
addr16
xor
pop
ja
adc
jg
sti
icebp
and
mov
xlat
mov
mov
ret
clc
inc
lds
sbb
jne
gs
add
mov
das
fsts
add
bound
pop
aas
lret
mov
adc
cltd
xor
or
xor
pop
push
test
mov
lahf
and
mov
sbb
cld
cld
xchg
mov
adc
int3
pushl
and
mov
push
jge
aad
bound
dec
mov
adc
cmp
xor
aad
ficomps
lret
test
nop
adc
cmc
jbe
pop
push
pop
xchg
jo
push
or
mov
ret
xchg
prefetch
jecxz
jae
cmp
jb
add
dec
ss
insl
push
inc
dec
mov
dec
xchg
into
or
jno
lods
ret
das
jae
jp
inc
push
outsl
sub
ret
push
js
jl
xchg
adc
repz
mov
xchg
icebp
test
popa
outsb
push
jb
and
inc
jmp
adc
xchg
cmp
fwait
pop
push
shl
call
popl
inc
dec
pop
pop
imul
adc
test
movsl
mov
mov
rcrl
xchg
fsub
dec
dec
outsb
inc
mov
inc
push
addl
fisubs
jmp
lahf
lds
test
inc
iret
rolb
js
inc
cmp
test
jge
lahf
out
pop
xchg
insb
repnz
mov
in
adc
sbb
pop
cltd
inc
push
sub
sub
xor
cmp
cmp
sub
outsl
popf
xor
xchg
cmp
jo
mov
cmp
xor
add
popa
cmp
sub
jecxz
inc
or
ds
insl
add
lds
xchg
mov
and
push
dec
jb
lcall
xchg
mov
ret
mov
xchg
repnz
dec
push
mov
adc
flds
mov
cltd
jno
and
jo
lods
xchg
sub
mov
dec
popf
jmp
stos
test
mov
repnz
xchg
push
out
dec
and
sub
into
mov
das
pop
dec
repnz
cltd
lahf
mov
jbe
stos
scas
inc
or
dec
mov
push
addl
idivl
inc
adc
cld
sti
les
pusha
lods
mov
mov
fdivrl
or
push
rcll
jp
repnz
cmpsl
js
cmp
jmp
mov
jmp
enter
push
pop
jle
dec
in
test
je
aas
std
jp
xor
mov
out
pop
lcall
cltd
push
fwait
ret
mov
and
es
pop
inc
pop
insl
stos
mov
inc
cmp
jmp
lock
fwait
sbb
sbb
xchg
out
xchg
in
stos
in
dec
xor
lahf
addr16
sub
fs
xor
addb
or
aam
dec
mov
ror
mov
xor
imulb
jp
cmpsb
daa
jo
inc
aam
adc
add
mov
pop
fcmovnbe
rolb
push
adc
inc
inc
pop
loop
lret
cld
xchg
mov
imul
movl
lods
mov
sub
sarl
filds
xchg
mov
popa
in
inc
xor
cmp
sti
movsl
divl
test
adc
ds
js
push
cmc
or
test
lods
shll
ja
aas
and
test
xchg
inc
hlt
lret
sbb
and
out
ret
ret
das
repnz
stos
push
iret
pop
aaa
push
xlat
dec
mov
test
sbb
lea
dec
test
int3
mov
xlat
mov
outsl
hlt
out
xor
adc
mov
mov
cmp
scas
gs
cmp
outsb
lods
pop
fs
mov
xchg
pushf
push
xchg
and
jl
sahf
popf
int
cmp
pop
loope
cmp
jnp
je
int3
fdivl
cwtl
std
lcall
shlb
rcrl
mov
mov
or
popf
movsb
lds
add
cmp
in
pop
loop
sub
icebp
push
dec
shll
cmpl
inc
lods
fxam
add
enter
lret
dec
imul
sahf
cwtl
bound
fcomip
aad
push
and
xchg
lcall
es
xor
out
mov
and
push
sub
stos
sbb
jmp
push
lea
or
mov
scas
xchg
fnsetpm(287
dec
mov
stc
in
movsb
popf
outsl
stos
xchg
and
repz
inc
mov
popf
fidivrl
or
and
jl
daa
cmp
dec
jp
cmp
jg
fs
daa
dec
dec
das
inc
dec
and
decb
xor
stos
sbb
dec
push
mov
arpl
push
fcoms
mov
cmc
sub
cmp
popa
mov
fwait
sbb
shll
sbb
std
rcr
push
mov
dec
and
lods
mov
jg
or
inc
adc
inc
fdivrs
mov
xor
adc
test
xchg
in
call
and
ret
mov
clc
stos
iret
outsl
cli
pop
mov
dec
cmc
mov
cmp
neg
push
adc
repnz
jl
iret
mov
xor
in
inc
push
push
sub
gs
fldl
imulb
sbb
pop
es
adc
push
stos
lret
jge
push
sahf
add
fisubs
inc
out
testl
addl
mov
xchg
push
pop
test
jne
out
das
push
pop
lods
mov
inc
dec
push
fidivl
icebp
enter
dec
push
jns
or
and
mov
repnz
mov
popf
outsl
pop
ret
int
test
sub
jg
mov
jae
push
daa
insb
fdivs
push
sub
aad
aaa
dec
and
movsb
iret
mov
icebp
or
sbb
adc
fistps
mov
cmpsl
sub
cmp
dec
xchg
aam
ret
add
cwtl
jg
jb
notl
push
mov
das
push
hlt
cwtl
shl
shrl
xor
and
jb
fildl
test
cmp
in
inc
cmp
lea
mov
pop
ds
icebp
xchg
popa
mov
adc
pop
hlt
xchg
repz
push
inc
jae
gs
adc
insb
jg
dec
movsl
test
aam
sub
in
stc
xor
leave
scas
stos
bound
jmp
fldenv
mov
mov
rol
stos
xlat
sbb
loope
cmpsb
lcall
ret
lods
and
pop
movsl
xorb
jbe
push
mov
pop
xchg
and
bound
mov
das
fldcw
les
repnz
adc
jo
cmp
sub
adc
mov
sbb
test
fs
sub
adc
aaa
inc
fmuls
xchg
add
dec
mov
ja
sub
mov
movmskps
mov
lret
mov
out
sysexit
xor
adc
shl
ret
mov
adc
xchg
mov
das
out
sarb
sub
js
stc
rorl
je
xchg
cs
and
sbb
loopne
lret
sub
jae
ljmp
incl
out
mov
cvtps2pi
add
fisttpll
mov
lret
test
lods
daa
or
in
inc
mov
fdivs
and
inc
inc
sub
imul
in
imul
xchg
push
adc
psrld
mov
mov
add
aaa
pusha
and
push
pop
insl
cwtl
repnz
out
sbb
mov
jns
pop
mov
jmp
and
cmp
das
push
repnz
pop
xchg
push
pop
adc
sub
aas
aas
and
jne
int
pop
jge
cwtl
pop
dec
insl
fbstp
adc
lods
push
popl
shll
shll
pop
test
inc
movsl
push
xchg
daa
jp
rclb
add
inc
js
les
mov
jmp
jge
mov
or
outsl
jo
jl
mov
les
clc
inc
insl
sub
aad
sbb
movsl
sbb
xchg
or
mov
imul
idiv
adc
in
iret
psubusw
fwait
pushf
jg
mov
lret
insl
setp
popa
dec
lods
xchg
xchg
js
shll
test
adc
cmp
fwait
cwtl
cwtl
fisttpl
pop
cld
and
pop
clc
lock
and
addl
and
sbb
roll
test
lret
add
sub
sub
and
out
je
fildl
jae
sub
push
popa
negl
pop
int3
movl
lcall
lods
shl
cmp
call
push
fs
cltd
lods
out
stc
sbb
cmpsl
cli
stos
mov
push
cli
inc
nop
lret
and
mov
imul
or
fisttps
stos
jle
cmp
gs
xorl
pop
adc
nop
insb
ljmp
and
loopne
jge
aam
fidivrs
inc
adc
dec
daa
and
mov
mov
out
adc
xchg
mov
jns
inc
rorb
xchg
stc
cmp
cmp
add
movsb
inc
adc
adc
mov
dec
or
imul
leave
imul
enter
jecxz
outsl
lea
aam
jmp
xchg
scas
pop
or
inc
adc
lret
mov
xor
dec
loopne
ficomps
fwait
stc
and
dec
inc
and
sbb
cmpsl
out
insl
sub
lcall
ret
cmpsl
xor
xchg
jbe
rolb
es
pop
cmp
in
iret
and
sbb
push
mov
push
sub
cmp
xor
int3
shlb
rclb
pop
icebp
xorl
inc
xchg
add
nop
test
addr16
push
hlt
in
cli
jle
decl
fidivrl
sbb
rolb
repnz
pop
jae
and
push
cmp
mov
jmp
cmp
loop
mov
lock
xor
aam
shrl
stos
aaa
xorb
sbb
imul
shl
insl
sbb
cmp
jmp
push
xor
fwait
enter
jne
or
leave
sub
cmp
out
out
xlat
push
fcom
xchg
mov
push
gs
xchg
imul
push
and
or
out
test
dec
hlt
mov
adc
xchg
cmp
pop
mov
dec
sarb
subb
jge
jmp
mov
addl
xor
lcall
enter
clc
inc
aaa
insl
add
popf
aaa
cmp
push
das
test
push
aad
outsb
lret
push
clc
packuswb
push
inc
adc
mov
ret
fwait
push
stos
addr16
test
outsw
adc
xor
rcrl
sbb
push
cmp
push
push
jb
xchg
mov
adc
ljmp
add
inc
mov
sub
and
mov
mov
out
cmp
stc
jg
stos
jo
xor
js
push
insb
repz
sub
arpl
repz
inc
repnz
bound
js
dec
mov
std
sbb
pop
divb
xchg
pop
or
sbb
test
loop
icebp
push
loopne
jmp
dec
adc
lret
dec
incb
mov
out
sbb
mov
aad
sti
jg
add
mov
sub
aaa
and
fimull
in
sahf
xorl
xlat
sub
fwait
into
mov
mov
push
inc
pop
jae
cmc
push
test
pop
arpl
gs
gs
sub
js
arpl
adc
and
adc
cmp
add
pop
adc
pop
mov
bound
sbb
mov
rcl
fstpl
xor
incb
int3
cmc
cmpsb
sub
jns
lds
jb
in
adc
and
repz
sub
mov
inc
stos
and
mov
jle
es
push
in
add
je
push
js
jp
add
jmp
cwtl
xchg
fists
jo
push
hlt
mov
mov
mov
cmp
xor
pop
adc
pop
mov
dec
fcmovu
cltd
lock
cld
dec
outsl
adc
mov
lock
jmp
or
add
pop
imul
push
ss
mov
mov
push
mov
bound
jns
fbstp
or
mov
xchg
xchg
add
push
out
xor
lret
inc
or
cmp
dec
xor
xor
fwait
push
mov
push
dec
pop
add
xor
sbb
push
movsb
push
shr
mov
cmp
aas
in
imul
or
js
data16
inc
push
imul
cmc
fisubl
push
inc
ljmp
pop
xchg
jne
sar
jle
push
fcmovbe
arpl
shll
inc
sub
xchg
mov
ss
loop
push
sti
mulb
cmpsb
cmp
cmpsl
mov
cmp
add
mov
sbb
cmp
dec
cmp
jp
dec
int
outsb
dec
negl
stos
push
mov
add
sbb
jne
lret
fwait
push
mov
pushf
inc
icebp
mov
std
test
jp
inc
loope
mov
push
out
stos
adc
or
mov
mov
es
test
xchg
pop
fidivrs
xchg
sahf
jge
push
jb
adc
das
mov
nop
outsb
pop
aam
push
mov
ljmp
pop
and
lcall
cltd
xor
rcll
cmp
xchg
cmp
outsb
ljmp
mov
inc
sub
imul
jecxz
lahf
xor
shlb
jnp
in
xchg
and
mov
xor
sub
dec
mov
mov
add
pop
xchg
cmp
shrb
xchg
scas
xchg
into
sbb
pop
dec
jb
inc
cs
das
xchg
mov
mov
jb
dec
insl
notl
imul
inc
sti
dec
push
push
xor
clc
cmpsb
aad
shlb
ja
push
fbld
xchg
adc
jmp
rcrb
mov
dec
movd
ljmp
popa
shlb
shlb
sub
scas
and
add
pop
ret
inc
push
icebp
loope
pop
das
sbb
jnp
mov
sub
js
and
sbb
mov
cltd
xor
jae
jp
mov
mov
mov
loopne
icebp
add
leave
orb
jo
in
imul
cmpsb
mov
and
push
sbb
jne
das
fbld
ljmp
hlt
in
sbb
pop
sub
ss
imul
push
adcl
cs
sbb
xchg
mov
cmp
test
jbe
add
outsb
stos
addb
mov
xchg
jmp
pusha
jge
adc
xchg
xchg
mov
adc
mov
stos
pop
fdivrp
push
loop
mov
mov
aaa
cmpsl
cmpb
pop
sub
mov
inc
jae
fstpl
mov
out
ljmp
xor
lock
mov
or
ja
insl
mov
push
pop
jne
add
dec
mov
mov
pop
adc
push
add
adc
into
wbinvd
cmp
loopne
ret
inc
mov
push
jl
lock
test
inc
cld
stos
test
insb
sub
bts
mov
jae
xchg
mov
in
shll
or
mov
fistl
sbb
mov
imul
pop
gs
ljmp
lods
xor
gs
inc
jae
push
into
in
hlt
je
cld
out
push
sub
and
ret
popf
pop
mov
movsb
dec
push
lsl
cmp
out
js
sbb
mov
mov
cmpsl
enter
push
inc
xchg
mov
mov
adc
inc
idiv
jae
push
pop
dec
pop
scas
and
dec
inc
dec
mov
iret
adc
lock
xchg
outsl
mov
xchg
ljmp
and
fld
inc
fcomps
inc
stos
xchg
daa
adc
or
sbb
lods
hlt
out
pop
mov
in
dec
mov
push
mov
sub
rolb
lret
cmp
std
jnp
dec
aad
enter
inc
xchg
pop
push
xchg
sbb
outsl
test
or
sub
insb
xlat
sar
adc
fmulp
out
push
dec
or
jnp
push
fldl
xchg
xor
sub
fnsave
aaa
pop
nop
fwait
mov
daa
mov
sub
lea
jne
add
sbb
loope
sarl
cmp
ret
adc
in
lret
mov
lea
add
mov
inc
and
adc
dec
xchg
cmpsb
pop
sbb
stos
cmpsb
out
jae
cli
ja
call
addr16
sub
daa
push
aaa
sub
iret
adc
cwtl
push
and
xor
pop
les
jno
cmp
les
xchg
in
lret
inc
fistpl
ret
je
dec
out
movmskps
add
sti
cli
cmp
shl
push
scas
pop
lret
jmp
xor
inc
push
dec
sbb
pop
pop
enter
mov
loope
xlat
int
test
cmc
scas
xor
push
cmp
sti
pop
insl
popf
sub
iret
mov
mov
icebp
push
std
cmp
lock
pop
outsl
ficoms
lods
test
mov
pop
imul
movsl
jp
fisubrs
bound
rol
aaa
inc
popw
jp
pop
subb
ret
ss
call
add
lcall
push
ja
js
ljmp
inc
ss
nop
mov
cmp
mov
mov
stos
les
pop
cmp
ret
stos
lock
mov
or
cmp
sbb
mov
pop
sbb
and
divb
pop
jle
xchg
fsub
add
mov
sub
dec
lahf
into
divl
lret
jg
adc
push
cmc
mov
popa
push
dec
das
xor
lods
mov
ror
inc
pop
or
jb
push
adc
adc
mov
jns
pop
dec
push
fst
xor
or
or
or
xor
insb
lock
bound
jecxz
dec
adc
add
orb
pop
and
xchg
xchg
or
sub
pop
rcrb
das
sbb
add
jmp
hlt
nop
xor
jo
negl
sub
ljmp
in
int
roll
flds
pop
mov
jg
xchg
icebp
or
mov
mov
push
push
inc
cpuid
push
adc
lods
cmpsb
cld
subl
dec
mov
sahf
jge
movsb
aad
sarl
sbb
lds
loop
xchg
in
jg
cmp
xlat
es
out
scas
xchg
jb
inc
dec
mov
sbb
mov
adc
jecxz
and
into
out
es
cmp
jnp
or
inc
lock
cmp
lret
add
mov
and
in
imul
pop
adc
sub
jecxz
cli
sub
outsb
gs
add
setb
fs
sbb
pop
les
sbb
jnp
and
sti
jnp
jle
test
jl
jl
inc
or
scas
xchg
mov
pop
jb
mov
insb
aad
xor
mov
pop
mov
notl
xchg
and
aad
fchs
stos
sbb
mov
out
mov
je
adc
push
cltd
faddl
wbinvd
cmp
test
cli
fdivrl
mov
fnstcw
ret
adcb
sub
pop
data16
lods
insb
pop
jge
lret
icebp
ja
test
imul
push
adc
cmc
mov
cmpsb
pusha
addr16
or
in
mov
lds
add
stos
xorl
repz
arpl
push
in
and
into
stos
out
fcmovnu
jp
in
mov
xlat
mov
pop
mov
push
fstp
dec
repz
fcoml
add
sahf
iret
mov
sub
or
inc
and
ret
data16
ds
fcoms
mov
push
sbb
mov
push
mull
in
jbe
ds
mov
xor
idivb
xlat
sub
mov
xchg
lods
dec
mov
push
scas
and
jnp
pop
nop
lods
pop
mulb
dec
mov
js
mov
fwait
into
fs
pop
xor
jp
xchg
loopne
mov
pop
inc
data16
or
mov
mov
dec
push
xchg
push
loope
cmpsl
or
push
aas
push
test
mov
mov
dec
negl
out
shlb
mov
mov
popa
mov
adc
lahf
mov
popf
iret
xchg
and
and
loope
aad
and
xorb
orl
inc
xchg
mov
sub
mov
cmpsl
and
push
inc
mov
xor
push
fadds
sbbb
mov
mov
popa
in
cltd
push
xchg
pusha
push
test
add
loopne
sub
sub
mov
and
xchg
xor
jle
js
cmp
push
push
test
pop
fdivrl
out
fadd
lret
test
dec
dec
into
aam
dec
loop
cmp
imul
dec
cmp
mov
hlt
lods
xchg
into
fmulp
xchg
ljmp
inc
popa
adcb
stos
mov
fbstp
mov
or
jp
outsl
cmpsb
mov
add
cmpsl
fs
out
mov
lcall
adc
rcl
in
jmp
xchg
mov
adc
stos
sub
xchg
or
out
loope
sbb
jae
aad
cmc
cltd
cmc
pop
sub
cli
cmp
fistl
data16
push
xor
out
xor
shlb
ds
pop
cmp
les
sub
pop
cltd
outsl
mov
sub
mov
pushl
and
xor
adcb
fwait
das
dec
std
pop
dec
push
push
xchg
pop
jb
pop
gs
xor
aam
jno
push
scas
std
iret
jle
mov
push
and
cmc
je
subb
push
sbb
xor
adc
lahf
imul
dec
push
sbbb
nop
je
out
clc
rcrb
cmpsb
xchg
iret
sbbb
int
mov
nop
lahf
out
fdivs
xchg
loop
cmpsl
push
xor
in
out
xor
in
add
lds
ret
jge
stos
mov
or
fwait
adc
jbe
lahf
xchg
sbb
je
push
jns
xchg
pusha
fcmovu
inc
pop
sahf
dec
or
mov
movsl
pop
add
xor
push
xlat
xchg
loope
loopne
notl
adc
repz
out
movsl
cmp
cmp
ljmp
jmp
and
jmp
std
dec
or
into
xchg
idivb
and
or
xor
loope
insb
pop
cmp
sbbl
jne
xchg
xchg
or
in
inc
outsb
fimuls
dec
enter
cs
loopne
rcll
mov
fsubrl
xchg
rorb
adc
mov
mov
push
lret
mov
hlt
adc
cld
cmp
stos
sbb
jb
jecxz
mov
std
push
or
jp
and
scas
sub
xor
les
sarb
sub
push
bound
inc
inc
cmpsl
loope
addr16
pop
ss
inc
loop
mov
test
insb
inc
pop
mov
das
lret
rcrb
push
ret
repz
or
jl
mov
mov
sahf
cmpsl
or
shrb
or
push
sbb
jge
inc
jp
inc
inc
loop
and
xchg
xor
or
mov
jl
xchg
sbb
ljmp
mov
sub
out
mov
push
into
mov
hlt
stc
xor
add
xchg
or
add
dec
jg
mov
rcll
scas
xchg
sub
mov
scas
cmp
xchg
mov
into
push
scas
mov
push
mov
lods
iret
mov
mov
fcoml
mov
xor
xchg
cmc
iret
popf
adcb
push
sbb
adc
outsl
ss
push
mov
leave
adc
sbb
cs
stc
fwait
cmp
int
lcall
or
xor
mov
sti
in
pop
sbb
add
mull
lcall
in
xor
data16
imul
pop
adc
pop
mov
pop
adc
out
or
inc
mov
mov
stos
cmpsb
stos
mov
jle
sub
pop
mov
pop
inc
sub
push
dec
sub
or
repnz
cmc
jp
or
push
dec
divl
cmp
cmpl
add
repnz
pushf
sub
push
adc
popa
sarl
jno
jae
jle
mov
or
decb
mov
rcpps
push
ret
pop
out
and
scas
les
cmc
dec
jne
orb
dec
xlat
cmp
cmp
xor
adc
xor
out
fcmovnb
cli
jge
imul
xor
int
cmovne
inc
loopne
sbb
sahf
gs
shl
cmpsb
inc
mov
and
shrl
lahf
std
ja
int3
mov
ja
fbld
inc
mov
xchg
ret
repnz
shll
mov
fistps
mov
test
sbb
scas
ss
imul
cmovge
enter
icebp
xlat
push
inc
adc
out
popa
adcl
fadd
out
cli
cmp
and
sti
lret
xchg
mov
aaa
sarb
dec
or
daa
cmp
pop
aam
jge
xor
dec
add
scas
in
mov
aas
cmp
add
mov
jle
xchg
in
es
xchg
fwait
mov
dec
movsb
or
xchg
fldenv
inc
aas
in
and
dec
lods
jno
and
cmp
arpl
inc
or
sbb
loope
addr16
mov
cmp
cmp
loop
pop
jnp
imul
out
pop
push
inc
mov
pop
cmc
dec
inc
pop
jp
pop
push
push
mov
inc
inc
pop
popa
xchg
xchg
mov
add
xchg
arpl
dec
leave
frstor
cmp
loop
xor
popa
fs
aaa
pop
gs
insb
mov
addr16
fs
fisubl
cltd
jp
clc
xchg
es
mov
iret
xstore-rng
cmpsl
and
iret
and
jecxz
cmpsb
xor
xchg
pmuludq
jnp
dec
mov
cmp
xchg
cmp
sub
xchg
sub
jle
push
dec
stc
inc
xor
nop
jp
repz
test
pop
call
dec
clc
loope
enter
pop
xor
sub
sarl
mov
leave
xchg
aad
aam
repz
es
test
sub
adc
stc
add
cmp
movsb
adc
jbe
orb
push
rorb
mov
mov
or
inc
add
lds
in
mov
sbb
lds
pop
cmp
test
lcall
fists
repnz
push
test
out
lock
ret
and
pusha
lods
faddl
pop
jp
std
inc
outsb
dec
fwait
leave
jp
sub
pop
adc
stos
cmp
fwait
loopne
dec
adc
dec
pop
and
jbe
push
push
sahf
loopne
bound
xor
xchg
addb
stc
nop
pop
jmp
sub
in
mov
inc
sub
lret
jb
scas
xchg
subl
dec
lds
lods
mov
xchg
pop
rcrl
movsb
ret
dec
add
push
or
xor
stos
sahf
pop
je
in
lahf
xchg
int3
xor
fcmovnb
xchg
mov
hlt
adc
adc
in
outsl
in
push
push
iret
cmp
xchg
ficoms
cmc
int3
dec
dec
lcall
bound
ja
pop
inc
pop
xchg
pop
lods
shufps
mov
repnz
mov
mov
xor
int3
sub
icebp
in
sbb
inc
fcoms
call
bound
adc
xchg
fstpt
or
in
test
push
sub
cmp
push
xchg
loope
xchg
lret
jmp
sti
push
add
addr16
mov
leave
pushf
gs
loop
aad
mov
stos
scas
js
packuswb
cld
into
push
jge
rcr
or
mov
mov
push
add
fs
mov
les
cmp
and
add
cs
add
sub
lcall
mov
arpl
cmp
mov
pushf
dec
push
les
ficoml
ret
test
push
jl
adc
sub
stos
sbb
jp
movsb
rorb
xor
pop
pop
lock
mov
mov
mov
jl
pop
cmp
test
jb
popa
hlt
pop
in
out
int
adc
lds
mov
dec
loop
stc
lea
dec
fldenv
xor
cltd
pop
mov
sbb
ret
je
and
cs
inc
sub
js
pop
stos
test
shll
in
fidivrs
into
loop
add
mov
mov
stos
and
mov
in
jecxz
mov
xchg
sub
xchg
sti
add
mov
xor
imul
and
sti
mov
sub
and
mov
lock
flds
stos
mov
jae
cmc
addr16
jl
andb
mov
sahf
cmpsl
std
sub
popa
mov
xchg
jl
add
arpl
mov
out
push
cmp
inc
adc
ret
test
into
and
dec
mov
aaa
push
jbe
in
aad
jo
sub
jmp
sub
pop
jbe
movsb
pop
test
cmp
mov
scas
inc
clc
inc
fnsave
mov
inc
pop
int
sbb
mov
cwtl
cmpsb
inc
std
and
cwtl
pop
sub
insb
stc
nop
jmp
jmp
add
mov
add
cwtl
fsts
jmp
lahf
push
xor
sbb
add
mov
divb
lret
or
mov
stc
loope
aad
cmp
mov
aas
jno
inc
loopne
jl
sub
sarb
xchg
out
push
cld
inc
lcall
inc
dec
icebp
xor
and
cwtl
inc
mov
cmp
in
mov
daa
loop
into
cmp
jge
testl
fisttpl
jmp
xchg
sub
sub
insb
or
cmp
and
sbb
jl
xchg
jg
inc
int3
sub
push
cmp
and
push
imul
jb
adc
out
mov
or
fptan
mov
inc
xor
push
outsl
push
push
outsl
cmp
rorb
xchg
mov
push
fisubrl
rcrb
inc
aaa
mov
cwtl
call
add
clc
mov
cmp
jmp
mov
les
push
adc
cld
adc
sbb
popa
mov
clc
leave
cld
jo
test
aad
xor
arpl
and
lock
xchg
inc
shlb
sti
pop
push
int3
pusha
out
ficoml
loope
push
cld
fptan
mov
and
nop
test
lret
pop
inc
loopne
inc
dec
pop
ss
or
shrb
xchg
add
hlt
ret
mov
xchg
psrlq
repz
ds
mov
cs
xchg
mov
jp
and
aas
popf
dec
out
test
int3
xchg
dec
pop
mov
or
arpl
pop
xor
movsl
jno
jle
pop
mov
outsl
test
in
cmp
sbb
test
mov
adcb
ss
mov
pusha
sbb
seta
lock
loop
dec
push
test
arpl
xlat
push
jno
cmpsb
ds
aaa
ja,pn
addr16
in
add
push
fsubrl
xchg
xor
jne
lcall
xchg
dec
jl
int
pop
out
jle
iret
out
xrelease
inc
lcall
int3
and
mov
pop
cmpsb
aad
sub
and
add
daa
stos
lahf
pop
in
int
or
ret
imul
and
lds
lahf
sbb
aam
mov
in
test
fmuls
aam
addr16
les
aad
pushf
lret
repz
inc
jg
mov
xlat
out
jp
mov
clc
mov
ret
adc
and
adc
dec
sbb
xchg
xchg
adc
out
mov
sub
aad
inc
sbb
cmp
cltd
fstl
sub
push
data16
enter
adc
mov
jmp
lods
pop
or
push
movsb
xor
int
fs
jp
sub
mov
mov
xchg
cmpsl
mov
sarb
bound
insl
aaa
xor
jns
fnstsw
pop
enter
mov
adcl
imul
pop
xor
dec
das
insl
xor
adc
std
rorb
cmp
adc
and
cld
loopne
push
pop
mov
lea
jno
xor
inc
dec
jp
inc
repnz
push
pop
push
lcall
pop
pop
adc
stc
push
mov
rep
call
adc
add
xor
js
mov
pop
mov
push
lea
stc
adc
xor
dec
jmp
push
jmp
jecxz
fildl
xor
cmp
pop
cmp
gs
xchg
clc
mov
mov
xchg
mov
xor
in
aad
outsb
cltd
inc
xor
cmp
mov
test
inc
cli
scas
in
sbb
add
cld
push
insl
mov
loope
js
int3
and
mov
and
test
mov
xor
jmp
test
andb
jmp
inc
shrb
cmp
lcall
movsb
jmp
xchg
ret
adc
jne
pop
push
imul
fwait
lds
add
jp
insl
out
je
test
repz
mov
pop
dec
xor
xchg
sub
xchg
fdivrl
push
idivb
lret
lcall
jmp
scas
loop
adc
mov
jae
sbb
fs
inc
sti
scas
add
cs
decl
add
push
mov
icebp
jnp
js
add
pop
enter
inc
rorb
mov
xchg
das
jl
and
mov
pop
lock
loopne
or
cmp
out
mov
arpl
pop
mov
jnp
pop
inc
psubw
xor
fists
jae
mov
mov
jb
fisttpll
lods
cmp
adc
xchg
sti
xchg
inc
or
orl
mov
outsb
xor
cmpsl
sbb
popf
rcrl
pop
mov
enter
sbb
fcmove
popf
shlb
out
push
nop
pop
dec
popf
jno
sub
xchg
jge
lret
insb
loope
jb
jns
sbb
mov
pop
cltd
xchg
sub
inc
shl
dec
xchg
out
sbb
rep
orl
xchg
mov
dec
xor
xor
mov
jmp
sarb
test
lahf
gs
addr16
mov
negl
mov
jb
les
out
jle
push
outsl
mov
in
adc
mov
cmp
sbb
in
daa
test
int3
xchg
sub
test
xor
mov
inc
shll
jno
out
into
lret
out
arpl
dec
adc
les
scas
stos
xor
pop
ljmp
gs
orl
mov
mov
xchg
pop
aas
popf
addr16
xchg
dec
jnp
clc
sub
test
insl
stos
cmp
movsl
pop
adcb
mov
jg
cmp
push
jmp
and
lret
jle
lock
es
imul
or
push
pushf
xor
dec
add
test
or
neg
cwtl
icebp
and
test
fnstenv
aad
xchg
inc
sub
outsl
mov
and
or
and
stos
add
mov
popa
push
daa
cmc
data16
add
sbb
stos
dec
test
cld
jns
pcmpeqb
sub
dec
sub
sub
jle
das
das
jno
sbb
push
iret
cmp
push
mov
or
insl
xchg
imul
add
in
fdivl
sub
and
cld
push
cmp
pop
enter
push
ret
xchg
in
push
push
xchg
cltd
decl
sub
repnz
into
fldt
xor
jno
repz
inc
notl
mov
sarb
inc
cmp
js
mov
add
sbb
aam
sbb
int3
ja
les
in
xor
cmpsl
jb,pn
inc
mov
leave
repnz
das
inc
loop
leave
sti
xor
popa
jle
mov
lods
ljmp
mov
xchg
arpl
cmp
inc
pop
shll
sbb
iret
lret
cmp
lahf
or
mov
hlt
orl
dec
mov
push
sub
imul
mov
les
jmp
xlat
ja
fsubrl
mov
inc
imul
mov
cwtl
mov
jbe
push
dec
int
adc
jae
loopne
or
aaa
xchg
sub
jns
mov
pop
les
and
add
cwtl
stc
fadd
sarb
fstp
stos
je
push
popf
pop
loopne
pop
inc
push
sub
enter
cmp
jl
xchg
pop
mov
jb
and
push
lods
dec
outsl
pop
test
arpl
mov
mov
inc
fsubr
out
ret
jnp
cmp
scas
mov
xor
jne
push
inc
xor
call
das
hlt
int
pop
flds
stos
sub
xor
adc
inc
rol
cmp
scas
add
or
dec
dec
push
sbb
insb
in
cmpl
or
sti
cld
cld
xchg
loope
push
cmc
and
cltd
cltd
cmpsb
mov
adc
leave
je
fsubrs
lods
inc
ja
xor
xchg
dec
pop
mov
mov
outsb
and
cs
and
xchg
inc
enter
stos
ror
movsb
lds
adc
jp
push
addr16
xchg
dec
adc
xchg
mov
insl
or
out
mov
mov
daa
inc
inc
and
mov
xor
aas
jl
in
pop
jg
gs
test
sbb
stc
sbb
cmp
push
push
hlt
iret
call
fsubs
jns
xor
jb
add
jle
mov
xchg
sub
or
jg
xor
jmp
les
fcomi
mov
xchg
lods
rcr
test
jle
mov
into
and
out
xlat
test
je
loope
jp
push
icebp
mov
repz
jp
mov
shl
inc
mov
push
jnp
repz
dec
sbb
cmp
mov
xor
inc
pop
cltd
jg
mov
fsub
int
enter
adc
es
mov
out
push
arpl
enter
cmpsb
mov
dec
out
imul
push
mov
je
cli
cmp
fnstenv
adc
and
dec
push
in
dec
rcrb
out
daa
add
in
daa
aad
jge
push
rclb
ss
fmull
sub
pusha
jns
inc
push
pop
rorb
pop
inc
int
clc
data16
mov
xor
xor
xor
cltd
repz
cmp
sbbb
test
ja
lds
ds
adc
cmp
outsl
xlat
xor
sub
push
xor
daa
xorl
add
outsl
mov
jp
jbe
cmp
or
xchg
mov
adc
xor
mov
xchg
enter
enter
in
shrl
inc
imul
orb
add
add
pop
scas
ret
mov
sbb
addr16
lea
dec
in
movsl
ret
jl
imul
sub
add
fdivrs
test
mov
ret
add
or
test
sub
push
into
sahf
mov
xchg
mov
or
shll
sbb
push
in
inc
cli
movsb
and
mov
scas
cltd
sub
adc
jmp
adc
ret
jmp
lret
push
push
mov
inc
mov
lods
jno
int3
into
jle
push
jae
test
xor
fwait
out
aas
hlt
test
sub
or
xchg
xchg
arpl
iret
lods
cmpsl
ret
xchg
sbb
pop
imul
jge
or
mov
enterw
aaa
jl
je
push
xor
pop
outsl
addr16
dec
jle
or
dec
cltd
adc
jle
enter
push
or
xor
xor
subl
rcr
sar
addr16
and
mov
fwait
rcll
int
mov
sbbl
fwait
and
mull
jnp
fcoms
stc
stos
loopne
out
pop
xor
add
jnp
mov
subl
mov
movsb
xchg
cmp
call
std
aaa
shl
les
push
in
imul
jns
cli
fistpll
js
xor
enter
mov
or
or
jecxz
mov
mov
mov
cmp
add
repnz
out
daa
sahf
push
cmovbe
add
jmp
mov
adc
fdivrs
jge
lret
push
pop
cwtl
xor
xor
xchg
inc
stos
movb
stos
xchg
scas
mov
mov
adc
aam
fildll
or
add
xor
inc
xor
shl
cld
movsl
das
sub
jge
in
das
test
mov
or
mov
cltd
clc
and
or
xchg
and
mov
ret
lret
xchg
ds
mov
sbb
sahf
out
repnz
xor
mov
and
mov
and
push
cmp
or
mov
bound
jns
loopne
jg
push
fucomp
adc
jl
xchg
sti
adc
cmp
xlat
xlat
out
add
push
cmp
movsb
mov
add
mov
dec
cli
sbb
or
movsl
or
ficomps
and
mov
add
mov
in
cwtl
jp
jmp
add
pop
rcr
cltd
push
mov
cmp
sbb
les
push
jmp
or
xchg
lods
or
data16
push
inc
popa
mov
test
xchg
mov
aas
mov
out
xor
sub
jnp
adc
xchg
inc
mov
test
into
and
pop
fimull
adc
or
bound
pop
mov
inc
aad
into
jnp
inc
sub
addb
sti
and
jle
in
sub
js
jno
ljmp
nop
loop
or
adc
sbb
nop
and
cld
mov
jl
ja
cwtl
jge
mov
xchg
imul
dec
xchg
js
pop
mov
shlb
sahf
clc
or
movsb
xchg
add
xchg
loop
rcrb
dec
repnz
cmp
dec
aad
or
into
adc
mov
sub
mov
lock
jge
dec
lcall
cmp
mov
scas
sub
cmp
pop
and
stos
cmpsl
insl
and
xor
imul
jl
dec
pushf
movsl
icebp
xor
add
xlat
rcrb
dec
fld
insb
mov
cmp
lcall
cwtl
andl
jecxz
push
jno
test
data16
push
cmp
xchg
mov
ret
enter
gs
out
pushl
shr
rol
mov
adc
fdivs
jp
mov
ds
dec
ret
arpl
xor
cli
pop
xchg
dec
es
imul
and
lret
outsb
add
gs
fisubrs
add
shl
mov
jmp
xchg
lea
sarl
std
leave
sbb
clc
out
and
scas
or
push
sub
mov
xor
cmp
fmull
xchg
add
push
addr16
pushf
jb
pusha
outsb
adc
lods
sub
popf
movsb
aas
push
sahf
jle
pop
adc
and
jle
sbb
daa
mov
and
sbb
cmp
xchg
subl
pop
cli
ja
mov
repnz
movsb
mov
adc
pop
mov
jp
add
sbb
sti
inc
fstl
jae
mov
mov
push
subl
push
sub
inc
rclb
push
imul
popf
xchg
pop
xchg
mov
xor
push
pop
jge
mov
mov
xor
sbb
cmpsb
fistpll
ret
in
stc
push
sahf
mov
movsl
sub
mov
push
mov
cmp
and
jb
iret
pop
push
lcall
dec
inc
mov
mov
stos
xor
cld
in
jb
or
fisubrs
cmp
xor
mov
dec
aas
adcb
popf
and
inc
stos
mov
cltd
add
rclb
repz
loopne
int
sbb
mov
arpl
orl
sub
sub
insb
rolb
and
stos
add
rorl
dec
aas
sbb
cmc
mov
lock
dec
add
xorb
sbb
rcrl
pop
sub
mov
xchg
insb
xrelease
jno
inc
outsb
jb
push
je
lahf
loope
dec
fnstsw
ret
sar
ds
adc
or
stos
cld
mov
mov
loopne
push
iret
xlat
xchg
inc
icebp
cmp
jb
and
mov
mov
hlt
dec
insb
push
pushf
clc
mov
popf
cmp
shrb
sbb
mov
pop
mov
movsbl
negb
xor
subl
leave
cli
push
adc
xor
test
call
movsl
icebp
clc
dec
cmp
adc
jmp
test
mov
out
push
lods
and
mov
inc
movsb
std
call
out
xorl
mov
iret
decb
mov
push
xchg
hlt
daa
mov
adc
jne
pop
mov
in
mov
xchg
insb
xchg
lea
mov
push
ret
sub
xor
xchg
fidivrl
shlb
stos
sbb
dec
pop
cmc
faddl
aas
inc
lea
lret
int3
or
fiadds
sbb
filds
mov
add
pop
xchg
jecxz
shll
xchg
mov
ljmp
sub
pop
mov
sti
in
jle
sub
xchg
xlat
mov
fidivrs
pop
out
xchg
add
xchg
inc
ja
jae
inc
in
push
cltd
mov
nop
stos
xor
xchg
bnd
loopne
push
push
adc
xchg
les
repnz
mov
aas
aad
out
add
cwtl
pop
cmp
jecxz
xlat
inc
add
fnop
cmp
xor
push
roll
mov
mov
lahf
jmp
jecxz
cmc
ss
stc
adc
xchg
or
fucomi
int3
cmp
mov
pop
repz
out
in
mov
pop
inc
mov
in
xchg
inc
cmc
add
pop
cmc
andl
fidivrs
push
jo
mov
mov
addr16
aad
pop
or
cmp
repz
or
jno
pushf
mov
pop
jae
call
add
mov
rcl
stos
ret
loop
cmp
xor
sub
mov
les
lahf
push
inc
ror
cmpsl
jle
addr16
cmp
and
in
popf
shlb
jb
leave
repnz
sbb
movsl
lods
mov
push
fs
jns
cmpsl
icebp
iret
test
pop
out
nop
call
and
ficompl
psubusb
cmp
adc
push
fists
ja
cmp
fwait
ret
fs
cmpsb
shlb
add
add
xchg
xlat
push
stos
cli
cmc
adc
inc
and
xchg
sbb
adc
cmp
mov
iret
mov
out
dec
jb
dec
aad
daa
sbb
bound
mov
adc
or
inc
imul
sbb
push
mov
xlat
sub
mov
std
in
roll
outsl
lds
add
lods
sbb
push
xor
xchg
or
fmuls
jecxz
sahf
lods
push
fwait
inc
aaa
scas
gs
shll
fwait
push
es
inc
jbe
sahf
int3
jmp
iret
add
insl
jns
cmpsb
in
lret
scas
idivl
mov
mov
out
lahf
mov
sub
push
push
add
aaa
neg
pop
jb
cli
dec
xchg
xchg
xchg
or
fists
ret
ja
mov
mov
pushf
dec
mov
adc
and
jae
decb
stos
jns
pop
stos
imull
mov
xchg
mov
repz
sbb
addr16
mov
mov
jge
stc
push
mov
cmp
add
jns
dec
jl
inc
je
sub
lcall
inc
cmc
out
repnz
jge
cmp
out
mov
mov
stos
jae
outsb
testl
sub
test
jbe
fsubrl
mov
sbb
sub
xchg
cmpsb
fs
pop
cmc
into
add
leave
fdiv
pop
cmc
and
add
cmp
out
test
mov
stos
jmp
popf
insl
xchg
mov
push
inc
pop
icebp
push
and
jecxz
jae
cs
gs
ja
out
iret
shrb
xchg
xchg
sbb
outsl
sbb
mov
repz
mov
xchg
pushf
sub
pop
lahf
repnz
xor
movsl
nop
xchg
mov
adc
imul
xchg
or
push
mov
inc
lahf
cmpsl
lahf
pop
scas
cmp
in
inc
rorb
or
jne
rcrl
push
dec
xlat
scas
or
cmp
imul
das
jg
sahf
add
sbb
ret
lcall
hlt
lods
push
mov
mov
adc
mov
xor
cli
ret
dec
xor
jb
xlat
sbb
jl
sbb
jnp
cltd
cmp
pop
mov
sbb
outsl
fists
mov
outsl
mov
ds
pop
in
out
jmp
mov
sbb
xlat
add
pop
mov
xchg
das
fcoms
arpl
mov
mov
dec
sahf
push
push
ds
add
mov
xchg
dec
cmp
adcl
sbb
jmp
dec
test
icebp
dec
std
jecxz
popf
push
mov
dec
or
mov
or
mov
sbb
aam
xor
xchg
cmp
xor
in
xchg
enter
roll
push
jg
mov
sbb
mov
jp
in
jecxz
pop
jge
out
fdiv
ret
rcrl
test
ja
sbb
cmp
push
stc
and
sahf
mov
jp
jle
lahf
mov
sbb
notb
sbb
jne
jl
add
cld
mov
out
rclb
lods
sub
jb
pop
insb
sub
inc
scas
outsl
dec
pusha
dec
movsl
popa
js
lods
stos
push
lea
adc
jl
iret
fld
lock
adc
mov
fcoml
jecxz
fwait
jge
mov
pop
push
jno
inc
xchg
inc
test
jbe
sti
or
inc
push
mov
xlat
ret
mov
and
or
push
push
or
cmp
mov
cmc
add
clc
or
out
jns
mov
mov
jg
inc
sub
add
pop
jbe
lahf
sbb
push
cmpsl
push
cmp
ljmp
repz
pop
cmpsl
jg
mov
mov
and
add
jg
jno
lods
pushf
fisttps
imulb
dec
fwait
loop
mov
in
adc
xor
jne
add
push
push
ret
cmp
out
sub
xchg
and
inc
addr16
enter
xlat
pop
sub
cld
fisttps
iret
and
push
mov
stc
fsubs
out
pop
push
stos
sub
or
pop
mov
cmpsl
sbb
jne
imul
dec
ja
sub
push
sbb
mov
mov
lods
mov
out
lcall
or
hlt
lret
jns
mov
dec
pop
mov
in
inc
ljmp
jmp
dec
jmp
rcrl
mov
pop
test
mov
dec
adc
leave
add
jge
pop
out
dec
aaa
cmp
sbb
outsl
mov
pop
xchg
pop
dec
xor
xor
mov
inc
pop
or
and
jo
cmp
or
ja
mov
sbb
mov
dec
mov
push
sub
jl
pop
add
sub
ss
mov
frstor
inc
hlt
ja
rol
xchg
imul
inc
mov
adcb
push
inc
aaa
xchg
cmpsb
dec
or
xor
cli
mov
rcll
xchg
lock
gs
sti
pop
call
das
mov
sti
lret
jo
repnz
mov
jae
loop
or
pop
cmp
mov
iret
dec
cmpsb
jg
pop
loop
cmpsb
mov
ret
out
in
jo
stos
aas
pushf
push
push
push
jecxz
je
jle
popf
xchg
scas
in
or
xorl
aam
fistpll
sbbb
js
xor
xor
js
dec
aaa
rcr
sbb
cmp
popf
push
xor
aad
insb
sbb
std
pop
mov
leave
push
jg
xor
cmpsl
dec
clc
jae
pusha
cmpsl
and
inc
mov
dec
mov
loope
negb
cmp
inc
int
xchg
sub
sti
add
leave
inc
pusha
dec
and
loopne
sub
push
imul
xchg
inc
shll
int
cld
daa
pop
lahf
insb
pop
push
lods
xlat
scas
mov
pop
stos
subb
jl
iret
mov
adc
pop
pop
mov
dec
mov
cmpb
mov
pop
std
jge
xor
std
xchg
stc
das
xor
dec
in
sub
out
jl
cld
inc
scas
xor
dec
pop
cmp
and
mov
aaa
aad
and
push
mov
xchg
repz
loopne
jle
push
and
sbb
mov
js
lret
js
into
and
mov
sbb
push
add
and
movsl
jno
jl
adc
lock
sti
inc
call
cmpb
mov
cmp
push
outsl
sbb
or
fisttpl
mov
inc
pop
mov
mov
mov
sub
pop
bound
sarl
mov
daa
fistpll
xchg
lahf
and
pop
jle
dec
shll
push
movsb
out
or
pop
push
or
lock
wbinvd
popf
mov
test
mov
gs
flds
cli
sar
mov
jmp
int3
xchg
or
adc
xchg
pop
mov
ja
adc
jp
int3
jl
mov
inc
xor
sub
add
mov
idivl
jl
sub
jg
stos
mov
dec
cltd
inc
test
outsb
mov
shr
imul
enter
mov
daa
stos
lahf
iret
jne
out
mov
adc
dec
or
dec
test
add
cmp
decb
out
jge
rdpmc
pop
es
cmp
in
mov
test
fistpl
push
or
lcall
and
adc
push
cmp
lds
xchg
pop
sub
mov
lods
iret
and
lods
mov
dec
sbb
orl
pop
mov
sub
jno
xchg
mov
xacquire
repnz
dec
mov
inc
sbb
adc
sbb
or
xchg
xchg
faddl
mov
mov
movsb
pop
movsl
push
jns
enter
pop
dec
xchg
jmp
xor
sub
adc
sub
jecxz
out
xor
in
push
imul
les
add
mov
sub
mov
shl
roll
push
aas
jecxz
leave
and
addr16
xchg
xor
mov
jle
repz
lahf
sub
push
std
imul
sub
dec
lods
add
call
pop
pop
inc
dec
fiaddl
in
les
in
jnp
ret
outsb
aad
mov
jae
jle
outsl
icebp
cmp
dec
call
push
cmc
imul
pop
call
jnp
pop
wrmsr
and
cwtl
dec
sbb
jp
orl
inc
mov
in
push
push
fs
jge
jbe
mov
testl
notb
add
shrb
sbbl
xchg
arpl
xchg
inc
xor
es
xchg
divb
jae
scas
push
js
push
inc
aam
sbb
pcmpgtb
pop
dec
add
bound
lret
cmp
in
mov
pop
jmp
xor
mov
dec
adc
dec
fcoml
movsl
cwtl
dec
ss
mov
xchg
sarb
push
mov
push
pop
repz
fisubrl
shll
dec
and
add
out
dec
sbb
std
inc
mov
stos
pop
fcomi
mov
nop
ja
sbb
aam
inc
outsl
mov
bswap
imul
jg
in
or
jne
dec
iret
mov
dec
xchg
push
inc
and
in
push
cwtl
push
jl
jne
outsl
popa
add
in
cwtl
dec
fsubr
jmp
mov
sub
or
mov
adc
push
cs
adcl
in
hlt
and
push
loop
enter
cmp
fs
into
cltd
arpl
mov
xor
pop
xor
pop
jb
lahf
cwtl
cli
call
lods
in
sub
ds
dec
test
js
push
dec
adcl
jecxz
out
out
popa
stc
out
xchg
adc
cli
jg
imul
jne
addl
sub
mov
sbb
popf
movsb
push
xor
shlb
nop
rclb
aas
ss
push
clc
mov
mov
xor
das
out
jns
inc
fcoml
inc
fdiv
mov
fsubl
decl
mov
test
mov
or
sub
push
lds
sub
shll
jp
ds
out
mov
mov
sbb
adc
jmp
push
dec
xchg
inc
mov
iret
pop
ss
lds
sbb
inc
lcall
ss
and
shll
arpl
dec
sahf
xlat
mov
dec
or
xchg
push
ficompl
and
out
inc
scas
mov
xchg
or
or
sub
int
test
dec
cmp
sbb
lods
xor
mov
pop
cs
cmc
xchg
cmp
imul
or
mov
js
pusha
cmpsb
cmp
push
or
xchg
jg
sub
push
pushf
mov
pop
cmp
pop
stc
dec
shlb
icebp
pop
test
cmpsl
popf
outsl
stc
jge
cmp
cmpsb
out
fisttpll
sub
nop
xor
mov
dec
push
es
lods
je
mov
sub
mov
movsl
insb
in
and
or
cli
stos
or
pusha
into
xor
add
jo
imul
adc
out
xchg
aaa
dec
or
mov
adc
jecxz
ja
sbb
xchg
negb
imul
fsubrp
mov
inc
push
aaa
mov
mov
inc
outsl
mov
push
jae
xchg
leave
adc
test
adc
cmp
test
call
add
pop
xchg
andb
jns
lods
dec
add
jne
addb
scas
cld
add
sbb
lock
in
and
movsl
mov
dec
and
mov
test
mov
mov
addr16
pextrw
mov
std
fistpl
into
subb
inc
push
and
leave
dec
adc
push
inc
add
sub
cmpl
push
mov
or
jne
sbb
aad
cmpsl
fnstenv
push
pop
fdiv
pushf
stos
mov
fisubl
pushf
stos
jb
fwait
call
iret
icebp
test
in
or
fsts
jmp
stc
pop
idivb
popf
adc
dec
cmp
mov
mov
fisttpll
test
push
lock
mov
sub
lods
xor
scas
cmpsb
adc
dec
dec
add
jl
add
sub
adc
in
dec
popa
mov
scas
outsl
push
sbb
fwait
inc
cli
stos
xchg
xlat
pop
ret
mov
decl
sti
and
addr16
pop
xchg
fbld
ja
sti
cmp
cmp
fs
dec
pusha
sub
cltd
or
mov
addl
xor
sub
pop
pop
pop
and
pop
sbb
sub
xor
rorl
fidivl
ret
test
in
cmc
jmp
push
aas
cwtl
jnp
cld
es
dec
test
lcall
loope
jns
test
lret
cmp
dec
pop
in
sbb
stos
arpl
mov
jb
mov
or
call
jb,pt
call
aaa
lea
call
mov
jns
mov
adc
jae
stos
inc
jne
push
jecxz
test
mulb
or
pop
jbe
test
mov
xchg
and
data16
sti
aaa
mov
sub
inc
inc
scas
ja
repz
jnp
imul
dec
jmp
bound
jo
and
lock
adc
mov
out
mov
jmpw
lock
lcall
xor
push
pop
fnstsw
jne
repnz
pushf
sbb
dec
js
xchg
hlt
pop
push
nop
mov
movsb
lcall
xchg
imul
push
xchg
es
mov
mov
out
pop
inc
fbstp
negl
mov
fsubl
ljmp
jge
push
cmp
add
xor
xchg
and
cmpsb
lds
jbe
lcall
cli
sub
jecxz
push
adc
dec
in
inc
adc
pop
sbb
leave
xchg
mov
lods
imul
les
pop
in
or
pop
mov
mov
mov
pop
mov
jmp
mov
ret
push
insb
scas
popa
in
dec
xchg
sbb
int
xchg
mov
imul
push
mov
lret
lcall
jnp
jle
aaa
cs
lcall
pop
or
insb
pushf
push
out
test
out
mov
push
lods
adcl
mov
or
inc
insl
sub
in
xchg
jmp
sub
mov
mov
ja
mov
jb
ljmp
or
mov
in
into
lret
adc
sub
mov
push
xor
shrb
xor
cmp
lcall
sahf
mov
pop
cmp
xchg
cld
pushf
test
or
fldt
dec
mov
cli
sbb
iret
or
ror
xor
push
inc
movsl
scas
dec
push
sti
lret
sarb
push
repz
hlt
ljmp
mov
jnp
inc
mov
or
adc
dec
nop
cli
jg
les
sbb
xchg
mov
mov
xchg
mov
pop
adc
add
inc
push
cmp
rcl
mov
in
xchg
dec
popa
sbb
test
pop
xchg
pop
scas
push
pop
xchg
scas
jns
jae
aad
gs
jb
mov
loope
push
jg
and
sub
xor
fistps
push
jmp
xchg
push
sbb
gs
lcall
mov
sub
mov
cmp
add
out
loope
fnsave
and
lret
mov
sub
ficoms
and
stc
sarb
jmp
push
jns
aad
xlat
push
xchg
pop
jmp
or
mov
sub
cmp
inc
sbb
push
jge
shr
mov
lods
push
push
cmp
loope
or
dec
push
test
mov
movsb
shl
test
inc
rcr
lahf
popf
scas
add
ds
int3
ljmp
and
fsubl
testl
dec
cmpb
fisubs
arpl
loop
mov
push
mov
pop
in
jbe
sub
negl
out
xor
into
or
xchg
inc
sbb
add
jmp
push
mov
cmpsl
stos
shl
out
clc
fstl
fidivrs
and
xchg
out
repz
mov
stos
std
mov
cmp
popa
sbb
cmp
hlt
add
jno
jle
hlt
mov
xchg
inc
out
out
shrl
jl
push
lret
cltd
jle
fisttpll
fildl
jno
adc
je
mul
push
jmp
inc
int
shll
lcall
js
cmpl
adcl
fadd
call
stos
sub
mov
inc
out
je
aam
vmread
je
adc
sbbb
ja
and
mov
push
push
cltd
sbb
jnp
cmpsl
loopne
rcll
jne
mov
subl
push
imul
cmp
mov
and
arpl
xor
fsubl
add
mov
push
lret
pop
jge
cmp
shl
adc
imul
stos
sub
popf
std
and
dec
call
test
testl
mov
dec
fwait
aas
cmpsl
rol
data16
loop
insl
das
sub
inc
shl
dec
cli
inc
inc
adc
jge
sbb
cld
out
fstpl
jp
or
sbb
iret
lods
iret
roll
mov
cmp
aaa
rorl
loop
rol
sbb
cmc
mov
push
mov
inc
out
add
push
add
push
inc
mov
add
out
xchg
jbe
mov
pop
ja
xor
add
out
xchg
test
ja
fsubrl
xchg
pop
data16
popf
loopne
mov
xchg
sarl
fucom
popf
loopne
in
dec
lcall
data16
icebp
fstps
sbb
jg
cmpb
shlb
mov
test
inc
push
mov
xlat
sbb
xchg
cmp
xchg
repnz
ss
add
cmp
jge
movsl
fs
xor
jecxz
ja
testl
mov
or
add
adc
scas
push
repz
cmp
xchg
or
subb
mov
jl
clc
test
fwait
enter
sub
and
sti
fstps
fiaddl
cmc
test
gs
mov
repz
rcll
pop
ljmp
pushf
loopne
aam
outsl
pop
and
push
loopne
or
shl
daa
popf
pop
xchg
test
pushf
data16
push
adc
iret
lret
in
dec
or
test
test
push
pusha
arpl
push
add
rorb
rcrb
adc
mov
sbb
sbb
jb
mov
push
dec
xchg
add
cmpsb
push
xchg
lret
in
or
int
jnp
out
xor
push
fidivs
adc
ja
push
mov
xchg
cmpsb
hlt
pop
fucomip
sbb
or
jge
mov
jmp
xor
sub
pusha
test
inc
lret
inc
xor
add
jns
out
mov
lods
std
mov
cwtl
mov
sgdtl
push
lret
mov
fldln2
dec
cwtl
fucomp
adc
mov
out
repz
test
outsb
mov
and
fdivr
cs
xchg
mov
sbb
or
xchg
mov
xchg
cmp
test
fbstp
aas
cmpl
popf
adc
insl
test
xchg
out
pop
inc
push
mov
cmp
xlat
dec
aad
call
lret
insl
xchg
cmp
xor
jne
sub
xchg
lods
stos
cmp
mov
xchg
jnp
jg
daa
ljmp
imul
jo
ja
or
pop
and
daa
repnz
mov
sbb
loop
arpl
adc
iret
dec
aad
lahf
lcall
sbb
lcall
xchg
mov
divl
pop
xchg
inc
jne
jmp
mov
jmp
enter
cmp
das
inc
outsb
xor
jg
pop
addr16
test
ffree
ljmp
shl
std
rcrb
dec
iret
add
sub
aad
cmp
insl
adc
inc
lahf
lret
inc
xor
cmp
fisubrl
pusha
add
xchg
loope
ret
mov
mov
mov
outsb
call
xchg
ja
mov
jb
xorl
and
push
aaa
or
mov
push
mov
xlat
fmul
adc
xchg
cmp
out
dec
aaa
ss
mov
sub
jnp
mov
imul
sbb
and
addb
gs
jmp
outsb
sahf
xchg
adc
adc
or
add
lcall
xchg
dec
scas
jo
add
mov
fisttpll
jne
std
jnp
xchg
jne
inc
aaa
jle
roll
xchg
xlat
cmp
cmp
ret
outsb
mov
cld
sub
shll
out
repnz
jb
sub
jmp
outsb
lret
into
out
cwtl
test
jo
cmp
in
fistps
lds
ficomps
mov
fbld
fbld
pop
mov
pusha
lcall
adc
sbb
sbb
mov
sub
mov
sahf
js
xor
pop
outsl
and
jae
hlt
adc
xchg
std
pop
hlt
sahf
cmc
sti
sbb
addr16
cmp
loopne
sub
jp
shll
sub
testl
xor
push
rcl
jae
xchg
sarl
sbb
enter
popf
mov
jg
xor
jecxz
mov
xchg
dec
mov
mov
jp
jb
dec
out
cmpsb
cmp
xchg
loope
imul
or
mov
xlat
xor
inc
dec
test
cs
scas
sbb
or
pop
shrl
out
leave
js
xchg
aam
fsts
cli
fdivp
xchg
xchg
arpl
push
imul
xor
ds
lock
xor
pop
jge
xor
inc
sbb
add
jmp
sbb
fstps
in
adc
add
push
cmp
lods
push
or
xor
inc
lcall
sbb
jg
add
lret
cmp
leave
jg
push
push
mov
rol
sub
fucomip
pop
les
xchg
shrl
int
into
pop
dec
mov
dec
and
inc
mov
dec
daa
nop
fnstcw
cmp
mov
in
push
or
addr16
inc
mov
test
lock
nop
inc
cli
inc
arpl
test
pop
pop
cmp
add
lds
mov
pop
rolb
xchg
in
push
cli
dec
int3
test
jmp
sbb
jge
outsb
lods
mov
dec
push
jae
mov
push
pop
setnp
mov
lahf
mov
push
mov
and
push
popa
test
xor
popf
mov
pop
push
popa
push
mov
jbe
jae
xor
mov
aad
pop
sbb
add
lahf
mov
fsubp
xor
test
arpl
sti
mov
adc
imul
or
and
rcrl
shl
or
xor
jb
fstp
and
pop
jge
pop
ret
push
mov
mov
add
sbb
inc
adc
lock
push
iret
js
in
insb
jne
pushf
sub
and
mov
in
sbb
mov
push
ret
imul
jne
cltd
mov
loope
push
adc
das
adc
shlb
dec
and
mov
rolb
jg
nop
adc
xlat
test
call
pop
sbb
dec
into
xchg
dec
push
mov
jle
xor
inc
push
icebp
outsb
gs
xlat
sbb
lcall
imulb
shl
inc
ficoms
sbb
pop
mov
notb
push
testb
xchg
stc
jp
xor
inc
lahf
mov
mov
cmp
aad
jge
pop
leave
mov
dec
and
adc
pop
xor
sub
addl
push
pop
push
out
xchg
out
mov
in
cmp
addr16
adc
push
xor
inc
icebp
xor
mov
je
fsub
inc
pop
adcl
xorb
and
push
out
mov
sub
jo
or
test
adc
filds
mov
les
or
mov
inc
sbbb
pushf
mov
xchg
mov
negl
xor
sbb
fstpl
negl
add
decb
mov
nop
clc
sbb
dec
mov
xor
xchg
mov
aas
inc
mov
dec
test
push
adc
fnsave
cmc
idivb
into
xchg
imul
mov
iret
pop
mov
push
mov
push
and
cmpsl
aam
in
xchg
mov
dec
rclb
mov
cmp
mov
shrd
xlat
pop
dec
insl
add
lods
scas
jle
add
test
in
adc
gs
mov
fldt
jno
insl
mov
stos
in
sahf
sub
cmc
jb
loopne
aas
movsb
mov
and
into
inc
pusha
push
ljmp
es
xorl
sbb
test
lea
xlat
cli
push
je
and
aad
or
push
out
rclb
mov
or
fcomps
cmp
out
mov
adc
sbb
add
mov
fcomp
cmp
jg
mov
xchg
movsl
xchg
call
in
xchg
jnp
clc
test
mov
fs
lods
out
and
or
sahf
rcrb
sarl
mov
ret
idivb
add
js
aad
or
cs
orb
pop
sub
daa
cmp
subb
dec
xor
mov
dec
dec
inc
xor
push
rcll
adc
fldt
push
imul
add
fiadds
or
xchg
sbb
push
adc
dec
andl
push
loopne
je
jo
js
movsb
dec
int
ljmp
int3
push
bound
enter
push
hlt
mov
cmc
loope
mov
in
jbe
jp
ret
lds
jo
shufps
pop
lahf
mov
sub
jle
arpl
xor
repnz
and
movsb
xchg
out
test
adc
daa
sti
push
loopne
lret
jg
insb
sub
cmpsb
jl
rcr
lods
shlb
aam
mov
dec
je
rcl
mov
orl
cmp
and
sub
popf
ds
loopne
cltd
pusha
jbe
jo
stos
xchg
pop
das
stos
pop
adc
jmp
in
xor
lea
insl
sbb
pop
xchg
mov
ret
ret
jmp
std
lea
jne
fdivs
inc
fisttpl
adc
sarl
hlt
sbb
std
mov
daa
fidivl
cmpsl
mov
dec
fcoml
movsb
inc
push
pusha
cmp
les
lods
mov
jae
xor
mov
daa
jle
inc
dec
aaa
leave
test
or
daa
ja
aam
xchg
imul
cwtl
push
jns
mov
dec
cmc
and
push
sbb
dec
jbe
or
mov
mov
mov
insb
in
ja
pop
rcr
push
imul
mov
mov
mov
jno
movsw
dec
jae
cld
pop
xchg
arpl
pop
fdivrp
cmp
xchg
cltd
std
add
lcall
xchg
inc
jecxz
pop
jb
dec
test
jne
mov
jl
repnz
aaa
es
repz
popa
push
adc
push
jo
or
and
lods
jge
add
dec
bound
rcr
stos
sbb
xlat
std
mov
loope
push
dec
or
iret
int
xor
sub
pushf
gs
mov
fisubrl
insb
add
sahf
fyl2xp1
push
repnz
cmp
or
cmp
addr16
mov
insb
stos
inc
cli
jecxz
pop
sub
aaa
push
jmp
pop
adc
sub
cmp
ljmp
scas
in
sbb
aad
in
adc
fdivrs
cmp
or
fst
movsb
mov
shl
xchg
fnstenv
sub
pushf
add
mov
xchg
in
push
es
push
insl
sbb
or
pushf
sbb
test
and
lods
or
mov
rcrb
movsb
mov
aas
test
cmpsb
push
nop
add
test
lahf
imul
testb
daa
push
jae
and
in
pushf
lahf
fwait
cwtd
jnp
mov
inc
sbb
jae
rorl
mov
dec
idiv
loope
and
inc
xchg
loope
xchg
mov
jp
ja
xlat
push
mov
sbb
cmp
iret
sbb
outsb
sahf
mov
into
mov
loop
push
lret
adc
add
push
mov
xor
stos
daa
sbb
jb
shl
jecxz
mov
adc
push
mov
cmpsb
enter
in
mov
test
aaa
int
adc
jnp
iret
or
push
mov
lods
in
and
stos
pop
xor
inc
orl
dec
cltd
or
int
mov
mov
ja
xchg
jbe
push
mov
fcos
xor
addl
movsb
mov
ljmp
out
adc
leave
cmc
mov
lea
jle
lahf
shlb
notb
sbb
enter
sbb
dec
int3
leave
push
sub
push
jne
or
iret
jge
mov
negb
xchg
shlb
xlat
sbbb
inc
inc
and
fcmovnu
ja
shr
jmp
cli
jae
sub
xor
pop
mov
dec
loope
push
fildl
inc
rcrl
push
lahf
cmpsb
addl
mov
movsb
test
jne
lret
decb
sub
popa
lock
fcomps
fcomp
imul
test
pushf
clc
adc
aaa
inc
mov
imul
inc
jns
jbe
adc
jnp
pop
negb
xchg
and
ds
aas
xlat
hlt
mov
jbe
mov
pusha
jo
mov
lods
pop
cmpb
or
dec
loope
xlat
xchg
jne
jno
pop
imul
pop
stos
notl
testl
sahf
dec
flds
sub
jp
idivl
sbb
jecxz
clc
add
bound
test
inc
bound
xchg
pop
hlt
dec
lcall
push
xor
dec
lds
xchg
mov
ret
out
pop
addr16
mov
mov
clc
ret
cmp
adc
push
dec
mov
pusha
inc
imul
inc
loop
pop
adc
es
and
cwtl
cmc
pushf
jmp
in
loop
jne
adc
lcall
dec
aam
cli
inc
lods
push
aaa
je
testb
push
jbe
aaa
popa
inc
lds
dec
push
mov
inc
adc
in
cltd
stos
inc
mov
lahf
dec
xchg
outsb
scas
push
gs
cmpb
loopne
pop
mov
cmp
push
jns
insl
orl
test
sub
lcall
or
inc
push
dec
pop
ss
mov
mov
lcall
dec
ja
mov
add
xor
stos
mov
pusha
xchg
push
jno
mov
sarl
cmpsl
inc
lahf
inc
mull
xchg
jae
mov
pop
inc
and
movb
and
adc
cmp
and
xchg
push
test
lret
mov
jg
push
jnp
adc
pushf
dec
pusha
ret
adc
xor
adc
leave
dec
push
call
push
shl
movsl
jnp
mov
xor
aas
ret
push
inc
loop
icebp
inc
mov
and
push
cmp
mov
cmp
mov
nop
jo
xchg
pop
mov
xlat
arpl
sti
arpl
in
or
dec
andl
mov
repnz
pop
stos
pop
cmp
or
nop
andb
arpl
in
aaa
cwtl
push
sbb
sbb
xchg
mov
and
push
enter
jbe
pop
cwtl
push
xor
fcompl
aas
cmp
mov
insl
cwtl
clc
pop
pop
push
jge
sub
cli
inc
shll
sbb
out
cmp
jo
cld
dec
sub
mov
jmp
fwait
daa
jp
jle
cmpsb
and
pop
pop
divl
jb
sbb
jle
addr16
push
notb
ficompl
movsl
scas
pop
push
ret
imul
push
and
fnsave
pop
add
cld
mov
sub
inc
subl
xchg
pop
clc
mov
movsl
dec
mov
aaa
pop
push
sub
pop
push
pop
lods
cld
and
out
sbbb
lods
sbb
push
loopne
cmpsl
xor
call
cmp
lock
cmpsl
fistpl
push
cmp
loop
ror
push
ja
pop
inc
pop
add
dec
test
push
ds
fisubl
movsb
inc
push
insl
fnsave
lcall
out
fs
or
inc
xlat
push
pop
cmp
sbb
popf
dec
xor
fadds
fldcw
mov
push
aam
push
mov
loope
fwait
add
insl
es
stos
xchg
mov
push
cltd
and
add
enter
add
sub
dec
pusha
pop
pop
inc
mov
cmc
dec
and
mov
cmp
dec
js
dec
cs
and
data16
jnp
in
loopne
daa
cmp
cmpsl
jge
imul
mov
imul
test
gs
scas
cmpsb
lret
mov
pop
out
jb
dec
jmp
mov
repnz
daa
jmp
into
dec
push
or
lock
and
xchg
aaa
dec
push
pusha
lds
or
arpl
and
add
ds
testb
pop
mov
add
es
scas
pandn
cmp
fidivrs
push
fsubs
fistpll
fwait
and
mov
jge
xchg
sbb
imul
arpl
idiv
push
popf
push
or
iret
cmp
shll
jns
fs
test
and
xor
out
dec
loope
mov
or
std
xlat
adc
popf
mov
es
popa
inc
mov
xor
sti
pop
dec
insb
cli
incb
inc
in
pop
mov
stc
jg
lds
cld
stc
jg
push
int3
cmp
pop
sbb
jmp
xor
aam
mov
movsl
cltd
leave
pop
add
lahf
mov
stc
push
sbb
jbe
xor
lods
push
fnstcw
push
fidivrl
repz
xchg
mov
xchg
cmp
sti
mov
mov
mov
test
adc
jbe
ss
ljmp
mov
push
mov
cmc
mov
int3
arpl
icebp
cmc
test
inc
jb
sbb
in
jmp
or
lcall
cmpb
es
cs
lods
rcrb
popa
pop
mov
fs
das
sub
mov
xchg
dec
fbld
pop
dec
sub
sub
hlt
and
lret
inc
les
popf
mul
pop
inc
xor
pop
jecxz
loop
das
fidivs
jl
jmp
sbb
outsl
mov
inc
push
xor
dec
iret
jne
ffreep
pop
adc
pop
and
aaa
in
push
dec
ret
mov
and
mov
lea
push
add
or
div
divb
enter
es
fcompl
stos
add
sbb
pop
int
pop
adc
andb
insl
and
or
fdivrl
out
and
jg
js
incb
sbb
jo
jge
push
adc
cmp
or
xor
imulb
mov
cld
test
lea
mov
xchg
scas
aas
fstl
mov
out
dec
ss
shll
shl
js
or
mov
mov
sub
sbb
adc
shl
imul
jnp
xor
pop
push
imul
lds
int3
pop
clc
rcr
push
mov
push
lds
insb
xchg
or
push
fistl
dec
cltd
xchg
fsubl
pop
jmp
sub
rcrl
nop
iret
in
out
arpl
les
fiaddl
push
sbb
in
ds
int
inc
sbb
fbstp
imul
push
mov
test
cld
sbb
xchg
sub
mov
push
into
cmpsb
pop
stos
xlat
cltd
cltd
jecxz
xor
xchg
sub
jnp
cmp
push
push
and
in
es
imul
pop
stos
jnp
in
test
dec
pop
cli
pop
mov
and
pop
js
pop
mov
imul
imulb
popf
xor
lds
scas
in
mov
shlb
push
sti
adc
inc
jo
inc
lcall
push
test
pop
std
iret
je
mov
mov
and
rolb
xor
daa
aad
iret
and
rorb
daa
jle
int
mov
fwait
lods
nop
xlat
and
and
or
dec
adc
popf
fmull
mov
and
iret
mov
jp
dec
sahf
pop
jmp
lds
jns
cmpsb
xchg
jecxz
cmp
cli
lahf
dec
mov
jo
pop
pop
add
lahf
loope
adc
pop
mov
fmul
mov
and
mov
add
add
in
insb
dec
sbb
stc
push
pop
shll
sub
fwait
shr
lods
jg
popf
push
push
fbld
aaa
cmpsb
sub
sub
lock
cmp
and
aam
mov
ficomps
je
push
cmp
push
and
ficompl
notb
xchg
mov
dec
push
shl
stc
lea
mov
push
xor
jg
xchg
rclb
roll
inc
or
push
scas
lea
fisubrs
cs
lods
fstl
lret
mov
cli
or
test
jg
sub
mov
push
movsb
out
and
aaa
xchg
roll
xor
pop
popf
adc
dec
lds
adc
sti
aas
out
push
sub
pop
mov
pop
cmp
mov
cmp
out
fdivs
mov
sbb
or
mov
addb
negl
pop
add
rcll
fildll
inc
repnz
jbe
lock
test
iret
pop
adc
mov
aas
mov
fcom
in
icebp
repnz
sahf
push
push
inc
sbbb
inc
out
aam
out
pop
xchg
movsl
movsl
repz
adc
sub
and
test
lds
test
add
imul
or
sbbl
push
xchg
jge
jnp
jmp
adc
andb
loop
dec
pop
jg
xchg
and
fisttps
sbb
stos
inc
loop
jb
xchg
mulb
test
xchg
imul
cltd
mov
ja
insb
aad
mov
adc
icebp
add
xchg
in
lret
es
cmc
loope
jp
and
mov
stc
jnp
icebp
mov
iret
jecxz
xchg
and
je
sahf
sub
cmpsb
xor
mov
fistpl
push
das
call
push
sbb
lcall
hlt
std
jno
movsl
xchg
int
cld
pusha
loopne
pusha
mov
cmp
int3
sub
ja
out
dec
pop
les
movl
lahf
mov
mov
xchg
jecxz
jo
push
data16
outsl
insl
lds
inc
adc
sub
jg
mov
sub
dec
adcl
lds
xchg
cmp
xor
push
jmp
sbb
cmp
icebp
fwait
iret
mov
and
fnstsw
daa
sbb
jbe
mov
adc
cwtl
fmuls
add
adc
movsl
sbb
mov
bound
dec
movsl
test
push
push
sub
ret
lcall
sub
ret
mov
cli
inc
xchg
inc
cmp
push
sub
jmp
cmp
out
mov
jmp
jg
loop
and
mov
insl
add
ret
push
jp
lsl
jns
cmp
mov
and
cmp
cmpsl
mov
xchg
cmpsl
jnp
jl
shlb
mov
adc
dec
and
sub
in
enter
mov
xor
ret
or
cltd
dec
xor
xlat
scas
movsl
mov
jle
add
scas
sub
and
push
iret
scas
pop
jns
mov
inc
sbb
mov
dec
sub
dec
mov
pop
in
xor
cli
and
fs
mov
rcrl
rorl
into
lock
push
or
lock
shll
shrb
and
xor
cmpb
jnp
mov
jnp
insl
addr16
pop
inc
add
and
cmp
insb
adc
xchg
lret
jae
loope
mov
call
pop
stos
std
lcall
xchg
pop
inc
mov
das
adc
or
fistps
mov
pushf
sub
pusha
xchg
inc
mov
imul
mov
dec
iret
sub
add
xchg
mov
and
fsubl
shrl
add
dec
dec
mov
repz
push
xchg
lods
jle
cli
pop
push
je
movsl
bound
daa
pop
and
imul
mov
test
and
stos
mov
movsl
add
inc
jmp
rcrb
mov
xchg
adc
fists
push
rorl
adc
das
fcoms
repz
pop
sti
bound
cs
faddl
jp
nop
testb
jg
mov
ret
sub
nop
imul
pop
fwait
add
xlat
sahf
cmp
push
jnp
iret
pop
jnp
popa
mov
jne
aam
movsl
ficompl
scas
fwait
mov
pusha
xor
out
adc
xchg
pop
mov
jge
xchg
or
rol
or
pusha
js
ret
mov
cmp
outsl
xchg
or
push
sbb
xor
out
mov
subb
xchg
mov
xchg
ljmp
out
daa
aaa
sub
cmp
testb
xchg
rep
add
mov
lcall
cmp
into
mov
pusha
and
cmp
and
jp
scas
add
cs
data16
pop
pop
aam
jg
imul
mov
jbe
out
dec
mov
enter
xor
shlb
add
gs
shl
pop
inc
int
mov
sbb
ficoml
sub
imul
mov
fidivrs
dec
mov
mov
lods
push
pop
xchg
and
cmp
cmp
mov
rcrl
loope
cli
shlb
inc
dec
mov
out
out
xchg
add
inc
pop
xchg
sub
loopne
mov
enter
xor
repnz
movsb
jbe
cwtl
inc
or
scas
jo
in
add
cmp
inc
ja
sti
ror
jg
add
mov
or
sub
insl
jnp
int
mov
das
test
rcll
cmpb
cs
pop
insb
mov
fisubrl
fwait
scas
insl
lods
mov
fimuls
insb
sub
cmp
out
mov
push
movsl
mull
mov
jnp
addr16
bound
push
cld
cmpsb
sub
ficoms
leave
stos
loope
xchg
sub
popa
or
clc
adc
pop
lds
pop
sbb
imul
lock
sahf
aad
push
cli
adc
jns
out
adc
outsl
dec
jbe
xlat
mov
fsubr
add
out
xor
daa
mov
inc
push
and
lods
aad
xlat
xor
inc
push
cwtl
push
pop
xlat
sbb
movl
push
mov
in
xchg
push
scas
scas
loop
call
arpl
add
jg
or
lds
xor
sbb
pop
shrl
xchg
jnp
out
push
cmp
pop
fdivrl
mov
mov
mov
lea
push
pop
mov
cmc
inc
lods
scas
dec
dec
cmpsl
lods
adc
ja
pop
pop
lcall
dec
sbb
pop
mov
cmp
in
fdivrs
xor
ds
icebp
mov
fiadds
inc
xchg
ret
repz
xchg
add
std
push
dec
push
fmuls
mov
pop
in
and
test
out
push
jl
dec
ret
mov
lcall
cli
es
ds
xchg
cltd
lcall
ret
dec
xchg
pop
sub
lea
test
cmp
sbbl
mov
fldenv
shll
call
repz
lea
push
mov
mov
fldcw
dec
dec
divb
push
icebp
lret
mov
cmp
mov
iret
lock
adc
dec
mov
cmpsb
xor
sub
lret
pmulhw
jmp
roll
inc
imul
out
dec
push
mov
pusha
push
sub
inc
into
popf
stos
pop
decb
lret
push
out
ret
mov
sti
loope
sbb
add
jp
jmp
xchg
in
pusha
test
inc
mov
loopne
dec
adc
inc
cmp
mov
je
cltd
jmp
jno
xor
xchg
imul
pop
pop
cltd
jns
imul
pop
sbb
in
jno
mov
sbb
stos
das
lock
mov
inc
jb
adc
aaa
std
xchg
xorl
mov
and
pop
sbb
mov
jg
aas
xor
lcall
jns
pusha
rcll
add
repz
repz
mov
shrl
adc
es
adc
dec
mov
pop
shlb
cmp
mov
iret
pop
mull
mov
in
ficomps
in
out
and
addr16
test
mov
cmc
lods
fnstsw
fsub
mov
gs
dec
adcl
pop
and
cmp
sub
mov
xor
sub
stos
stc
push
push
sub
mov
cmp
dec
loopne
push
xor
add
cmc
push
inc
frstor
test
mov
push
inc
jns
or
jp
cwtl
stos
or
cmp
cmpsb
or
sahf
xchg
xchg
xchg
cmp
test
jbe
dec
cwtl
jecxz
pop
mov
pop
outsb
jmp
popf
mov
pop
loop
jp
leave
fidivrl
data16
sbbb
aad
popf
xchg
insb
cmp
adc
sbb
mov
add
lods
sbb
add
test
shll
xor
cli
sarb
sub
and
jne
add
add
in
lea
xorb
nop
test
movsl
std
imul
inc
mov
jmp
in
out
stos
cmpsb
loope
shlb
outsb
sbb
insl
enter
add
push
sbb
mov
xor
inc
and
lods
popa
mov
mov
cmp
les
and
jnp
into
lods
stos
sub
int3
jns
imul
subl
lods
adc
in
xchg
out
pop
fdivrs
nop
imul
hlt
xchg
lock
movsl
fdivp
fildll
mov
dec
push
ja
nop
ret
xchg
out
mov
xchg
icebp
js
stc
je
and
pop
adc
cmp
sbb
mov
movsl
cmpsb
and
cs
sub
rol
out
mov
aas
and
fbld
hlt
jne
sbb
dec
call
outsl
and
fmull
pop
leave
out
fs
sub
scas
sbb
pop
cmpsl
ljmp
popa
dec
inc
fiadds
fadd
xor
cmp
sti
dec
push
pop
or
jnp
aas
dec
or
out
lea
xor
lret
mov
mov
cs
outsl
out
adc
adc
sar
mov
cld
call
mov
insb
xorb
mov
jnp
jp,pn
icebp
sbb
js
pop
into
faddl
mov
jl
push
fs
sub
sub
xchg
sbb
bound
mov
push
sub
sbb
in
dec
push
cmp
out
add
scas
fadd
mov
cmp
sbb
push
stos
xor
inc
xchg
fdivrp
pop
cmpsl
outsb
popf
cld
gs
cmp
adc
ss
data16
xor
mov
push
shll
test
into
adcb
dec
stc
lret
out
pop
out
cwtl
xchg
sub
int
inc
repnz
cs
call
jbe
sub
fcmovnbe
rcl
xchg
es
sub
mov
adc
jmp
ret
pop
add
add
add
lcall
scas
pop
cmp
jmp
pop
jp
sti
push
push
pop
and
scas
sysenter
sbb
push
test
mov
clc
inc
fwait
leave
ds
add
pushf
mov
inc
cmpsb
jge
pop
mov
mov
pop
mov
push
int3
repnz
imul
push
mov
xor
pushf
jle
loop
scas
cwtl
out
rcr
popf
insl
dec
shl
fs
fnstenv
xor
xor
mov
dec
cmpsb
pop
mov
mov
pop
movsb
push
dec
push
mov
xchg
sbb
xchg
pop
scas
dec
loope
pushf
fiaddl
mov
pusha
popa
inc
lret
or
pop
push
pop
call
sub
popa
push
dec
aam
adc
or
rcrl
add
sahf
inc
test
add
push
aad
mov
push
push
fisubrl
pushf
andl
dec
cli
inc
lea
add
lods
rcr
out
mov
sahf
inc
cmp
clc
mov
incl
mov
mov
jl
outsl
mov
mov
mov
mov
clc
pusha
pop
push
shl
pop
lret
and
ret
and
mov
xchg
into
and
sbb
jno
cwtl
mov
test
push
push
jl
jle
jnp
xlat
aad
lret
cld
jae
mov
mov
stos
xchg
enter
mov
sub
inc
xor
mov
push
jmp
push
add
pop
addr16
fmuls
cmpsb
movsb
lods
shll
push
lods
add
andb
out
in
lea
adc
ja
mov
into
cwtl
outsl
repnz
xor
sahf
ss
addr16
scas
call
gs
dec
fisttpl
sbb
rolb
xorl
notb
jle
data16
mov
loopne
out
mov
mov
mov
decl
add
sub
add
icebp
jnp
test
test
and
jb
pusha
add
xchg
and
sub
movsb
add
out
mov
adc
mov
lods
into
xchg
out
jg
fwait
cmp
mov
lcall
cmp
std
and
aas
fistps
sti
pop
xor
jne
or
sbb
pop
testb
push
data16
jb
inc
ja
pop
ret
pop
mov
cwtl
mov
xchg
and
push
and
dec
popa
or
jnp
jae
jb
fstps
jg
icebp
aad
xchg
fs
pop
daa
mov
loopne
daa
mov
inc
shll
and
pusha
jge
leave
mov
mov
mov
push
rcrb
xchg
fisubrs
add
outsl
push
mov
dec
jl
sbb
out
mov
idiv
mov
ss
pop
xor
mov
shrl
mov
pop
cmpsl
seta
jmp
inc
fcoml
shlb
and
adc
stos
jmp
add
cmp
repnz
imul
sbb
sbb
dec
mov
enter
push
testb
inc
pop
inc
adc
xchg
outsl
mov
xor
mov
xorl
loopne
mov
sbb
mov
daa
jp
cld
jl
cmc
bound
pop
add
out
leave
std
ja
sub
fabs
repnz
dec
pop
pop
test
out
jg
arpl
and
xor
call
jp
mov
sub
scas
dec
adc
out
hlt
mov
icebp
pop
cmp
lea
fsubl
cmp
mov
sbb
xor
movsb
loopne
int3
inc
xchg
cwtl
mov
lcall
or
xchg
adc
mov
mov
lcall
pop
ret
sub
into
cmc
dec
aaa
aas
cwtl
std
pop
adcl
jmp
iret
mov
hlt
int3
dec
cs
leave
insl
aas
sbb
mov
stc
mov
xor
cmp
jecxz
mov
dec
mov
cli
aas
int3
arpl
inc
aaa
in
xor
out
mov
ret
loopne
pop
mov
addb
mov
jle
cmp
fwait
mov
lret
sub
stos
cwtl
scas
repz
sbb
or
cld
outsb
xchg
mov
pop
les
sub
mov
mov
dec
cltd
mov
ret
pop
jns
popa
loopne
outsl
mov
mov
jle
out
cmpsl
into
adc
lcall
outsl
xor
popa
adc
dec
and
out
setle
mov
jnp
xor
loopne
push
mov
inc
sub
inc
or
loopne
adc
mull
and
sbb
jp
lock
out
push
add
sbb
add
ljmp
xor
es
popa
imul
sub
cmp
cmp
mov
and
mov
aaa
xlat
fmulp
andl
inc
mov
and
jns
fcoml
xchg
cmpsb
std
lock
cmpsl
jl
cmpsl
sub
mov
repz
adc
ret
ficomps
test
pusha
cmpsb
clc
adc
rolb
pop
cli
mov
cmp
dec
and
and
mov
out
icebp
sbb
sti
adc
mov
into
pop
aaa
or
sbb
dec
push
push
outsb
hlt
and
xchg
push
shll
dec
cld
adc
jg
stos
aad
movhps
mov
xor
xchg
push
jp
jge
adc
mov
adc
shlb
seto
test
inc
repz
test
es
dec
pop
jae
mov
repnz
pop
inc
push
in
fmul
push
mov
test
pop
testb
fs
scas
outsb
std
enter
rorl
bound
scas
imul
or
fimull
out
es
cmpsb
and
push
cmp
stos
pop
mov
mov
fmull
shl
je
fs
push
sahf
xlat
push
push
pop
fsubrp
mov
adc
lds
inc
fsubl
pop
push
faddl
adc
gs
movl
mov
mov
mov
cmp
je
inc
repz
add
dec
outsl
repnz
inc
push
fcmovne
sbb
cltd
lahf
es
cwtl
xlat
fs
outsb
pop
jmp
shrb
dec
xchg
push
call
test
pusha
std
inc
dec
ret
outsb
pop
xor
cmp
push
sub
mov
lcall
shll
xor
js
cli
mov
clc
jecxz
adc
mov
jge
fstps
inc
dec
cmpsl
cltd
popa
pop
adc
pop
test
pop
imul
xchg
adc
scas
mov
insl
jl
and
test
loopne
cli
scas
mov
fcmovu
mov
sub
je
xchg
lahf
sbb
jg
cld
cmp
mov
mov
mov
scas
call
fs
mov
mov
aad
pop
ficoms
out
xor
xchg
pop
push
pop
cltd
lea
push
cwtl
xchg
in
adc
jp
ret
lods
imul
movsl
cmpsl
ja
mov
lds
sub
nop
scas
push
xor
xchg
stos
cld
mov
add
test
fnstsw
es
sbb
cmp
inc
lds
test
push
xor
ljmp
xchg
in
orl
jae
mov
cmp
aad
icebp
sti
sbb
lret
inc
adc
and
and
addl
gs
mulb
pushf
insl
push
subb
scas
sbb
mov
outsb
xor
xlat
fiaddl
sub
f2xm1
data16
mov
pop
adcb
clc
clc
jmp
sub
imulb
stos
add
out
mov
pop
ret
push
js
mov
push
pop
push
cld
xor
lds
arpl
jl
xor
push
lret
xchg
out
sbb
push
pop
cmp
test
stos
ljmp
mov
mov
aas
adc
push
pop
fwait
adc
rcrl
int3
je
push
push
and
and
mov
push
mov
dec
nop
in
je
ret
xor
mov
rolb
insb
fisubrs
das
jae
mov
out
xor
xor
push
out
dec
test
jns
add
iret
mov
jge
cli
pop
fdivs
movsb
fdiv
adc
mov
push
outsl
mov
xchg
dec
popf
rorl
xor
jb
mov
ljmp
stc
add
mov
add
lret
mov
inc
xacquire
mov
pop
test
cmpsl
jle
add
xchg
test
aas
fmuls
in
outsl
jae
xchg
mov
adc
cmp
jae
sbb
xor
add
sbbb
out
or
jae
xor
idivl
mov
sbb
mov
popf
xor
loop
fcomps
xchg
cmpsb
js
sbb
push
mov
pop
shrb
pop
dec
and
mov
in
or
mov
ja
cmc
scas
xor
mov
add
int3
orb
lahf
ss
pop
stos
pushf
adc
sarb
addr16
lea
cmpb
in
and
mov
fstl
push
mov
jp
push
sub
lods
jb
cld
and
jnp
xchg
mov
shrb
mov
call
lret
pushf
dec
sahf
addr16
cmp
xor
jmp
inc
ficoms
mov
mov
lcall
pop
cmovp
jmp
lret
jo
pusha
sysret
xchg
xchg
pop
out
sub
neg
addr16
cmp
outsl
xor
or
mov
dec
pop
movsb
jno
in
adc
roll
imul
and
or
scas
sub
cmp
repz
push
icebp
mov
jl
stos
jle
mov
popl
dec
mov
es
std
inc
pop
xor
jno
mov
popl
mov
pusha
inc
sub
sbb
leave
jmp
outsb
pop
push
mov
jne
adc
pop
sahf
loope
mov
jge
shlb
shr
dec
fwait
in
xor
mov
and
xlat
sti
lock
sub
rcrb
mov
pop
cmp
divb
cmpsb
adc
cld
ljmp
jbe
cli
icebp
jno
mov
call
push
push
and
das
lods
mov
shlb
pop
imul
mov
mov
jp
aad
add
iret
gs
fistps
jg
scas
mov
stos
jns
cmpl
out
loop
sub
sbb
aam
xor
loope
mov
fs
pop
int
and
fwait
mov
mov
mov
out
jnp
mov
push
cli
inc
push
scas
repz
add
lahf
and
dec
xor
jl
adc
sbb
sbb
into
fcmovu
mov
das
fisttpl
or
daa
lcall
decb
cmpsb
cmpsl
cmpb
sbb
and
mov
stos
inc
sti
sub
pop
sub
emms
mov
adc
dec
jae
mov
imul
repz
stos
jb
xchg
adc
push
push
outsl
xchg
sub
sti
jbe
mov
pop
sbb
fnsave
hlt
mov
mov
aad
insl
sub
outsl
inc
dec
dec
test
cmp
push
movsl
sub
or
addr16
fiadds
shrl
repnz
out
push
repz
sahf
mov
loop
jp
int3
xchg
movsb
push
xchg
jmp
push
sarl
popa
bound
lods
inc
ljmp
mov
xor
iret
cs
dec
mov
lea
ss
ljmp
icebp
aas
cwtl
fs
addr16
addb
rcrb
add
mov
adc
test
mov
ja
bound
pop
xchg
stos
cli
div
jno
lods
jns
idiv
test
pop
outsb
hlt
lock
mov
xlat
pop
mov
lods
jno
std
dec
lods
test
test
arpl
fsubrl
popa
insb
inc
add
sbb
cmp
lahf
adc
xchg
jb
ja
jno
mov
cmpsl
aas
lret
jb
jge
daa
mov
xorb
xchg
xor
cmc
movsb
mov
add
ficompl
mov
jnp
jo
cmpsl
ret
mov
aas
in
push
push
out
out
mov
mov
scas
jmp
jb
out
rcrb
outsl
cmp
push
je
add
pop
add
pop
jb
jbe
cmp
repz
rorl
sbb
shr
pop
cwtl
movsl
add
dec
inc
add
call
adc
push
xchg
cltd
pop
fldenv
pop
push
xor
mov
sub
jae
push
mov
leave
mov
dec
test
or
mov
ret
fidivs
adc
mov
sarl
xchg
xlat
arpl
cmp
xchg
rclb
inc
jmp
mov
mov
xchg
mov
jns
call
dec
push
cmp
in
enter
xor
les
clc
push
cld
pop
je
ret
sub
jne
out
cmp
dec
leave
nop
sbb
in
xor
push
jecxz
in
jmp
mov
bnd
lea
mov
repnz
and
cwtl
mov
mov
push
test
ja
jp
xor
imul
push
xor
in
into
aas
xchg
shr
xchg
cmp
push
je
cmpsb
jns
mul
out
adc
jne
and
xor
mov
and
xchg
pop
ds
bound
scas
fidivrl
pop
jo
and
stos
fimuls
ficomps
sahf
jp
pop
movsb
sub
sbb
lock
into
out
or
sub
pop
jo
rcl
sub
leave
mov
and
out
mov
push
xlat
jns
and
cli
dec
xchg
pusha
test
icebp
jl
cmp
cmp
std
sub
push
adc
mov
mov
iret
shlb
xor
cmpb
fwait
mov
mov
mov
sar
insb
pop
push
into
mov
jge
inc
shll
pop
sbb
lock
sub
sarb
out
lds
push
ret
xlat
arpl
and
push
xchg
push
ret
mov
in
mov
and
push
cs
push
and
push
dec
jno
addl
or
mov
cli
lcall
push
iret
mov
sub
mov
aad
xor
divl
push
add
test
stc
xchg
out
nop
mov
sub
imul
ljmp
fsubl
sub
repnz
adc
stc
pusha
xchg
in
xchg
mov
push
push
jnp
call
aas
mov
jmp
sar
mov
mov
add
pop
leave
mov
out
jb
sbb
mov
leave
push
mov
int
push
icebp
push
push
jbe
ret
ljmp
dec
dec
jo
notb
or
push
fmull
adc
repnz
mov
mov
test
ljmp
sbb
xchg
xchg
inc
jmp
inc
push
sub
mov
push
movsb
pusha
push
dec
lret
in
ljmp
outsl
add
add
out
out
je
insb
adcl
jns
jns
aas
sub
ret
sahf
scas
ret
jmp
cmpsl
lods
arpl
cmpsl
mov
out
sub
mov
repnz
fwait
adc
jae
sbb
insl
neg
push
mov
or
xchg
ss
lods
not
inc
vprotw
hlt
add
fdivl
pusha
je
mov
lcall
in
movsl
out
jnp
xor
sub
ret
test
hlt
js
add
mov
ja
sub
mov
mov
pop
mov
mov
ss
or
jnp
mov
mov
rcrb
pop
push
mov
subb
jp
mov
es
in
add
shlb
loop
jb
loop
sti
pop
ja
jmp
xor
xchg
pop
lret
lock
rclb
mov
push
mov
or
andl
cmpsb
lods
call
mov
adc
pop
xchg
xchg
xchg
or
inc
loop
adc
pop
leave
and
dec
or
and
fmul
mov
xor
xchg
push
adc
fdivl
rcr
shl
ja
mov
movsb
fsub
push
cmpsb
jg
xchg
cltd
das
out
pop
dec
jl
frstor
xor
push
pushl
dec
setg
mov
dec
xor
imulb
xchg
inc
loope
movsb
int3
add
pop
and
pop
iret
mov
mov
mov
out
je
cltd
mov
mov
mull
imull
arpl
popf
cmp
and
lea
loope
pop
push
fisttpll
jns
jno
mov
stos
dec
jns
xorb
pop
dec
shrb
or
cmpsl
aad
fnstsw
push
add
add
in
dec
mov
cmp
cwtl
into
sarb
mov
rorl
push
ja
mov
data16
lock
or
xchg
pop
mov
cmp
xor
jecxz
sbb
daa
jno
shrb
xchg
test
cmp
inc
lcall
jg
pop
in
jae
dec
and
stc
mov
outsl
int
cmc
movsl
adc
pop
ret
and
sub
pop
or
call
push
popf
mov
enter
popa
cmp
pop
mov
addl
insl
cmp
sub
fwait
pop
push
shl
mov
scas
ja
sbb
outsl
xor
pmaxub
int3
cmc
test
dec
dec
popl
sbb
test
popa
iret
sahf
jg
mov
shlb
pop
insl
or
mov
pop
test
std
lret
xchg
jmp
dec
lods
mov
mov
mov
rorl
pop
push
xchg
mov
insl
and
cmp
mov
push
cmp
out
inc
hlt
cmpl
xor
inc
pop
jns
cmp
xchg
lods
pop
pusha
xchg
insl
inc
xchg
xor
lcall
aaa
clc
xor
nop
lock
icebp
dec
mov
jb
enter
ljmp
inc
pop
jge
push
sbb
sbb
cmpb
testb
jae
cld
and
xor
push
push
or
pop
bound
cmc
mov
adc
or
jmp
sbb
andb
cmpsb
aam
pop
popf
addr16
into
jb
sub
pop
xchg
scas
jnp
mov
mov
sahf
xor
call
loop
outsb
dec
xchg
dec
mov
rcll
scas
mov
cltd
fistl
sbb
or
aaa
aad
xor
sbb
push
or
subl
ss
testb
int
roll
adc
mov
lret
aam
adc
push
xor
jne
mov
ret
lods
xchg
rcrl
shlb
push
jp
mov
pop
cmpsl
icebp
leave
dec
cli
lcall
out
hlt
jg
lcall
movsb
shrb
add
pop
inc
push
ror
sub
jae
jbe
repnz
lods
push
loopne
pushf
mov
jnp
ret
mov
cmp
mov
xlat
js
movsl
sbb
and
repnz
int
daa
xor
xchg
and
jmp
sbb
lods
adcb
or
ds
or
mov
and
test
pushf
and
cltd
pop
mov
mov
xchg
cmpl
pop
fisubrs
push
mov
ss
test
or
xchg
sti
shlb
testl
mov
fdivl
cmpsl
add
ffreep
push
or
sbb
jecxz
inc
mov
je
sarl
hlt
push
aaa
xor
imul
cmp
push
jmp
ds
dec
imul
in
out
mov
addr16
loop
push
mov
jae
mov
push
jae
jmp
cwtl
jmp
arpl
addr16
std
sahf
jnp
je
out
add
push
jne
lock
inc
mulps
enter
xor
jle
pop
xlat
mov
or
andb
jno
mov
adc
dec
adc
push
outsl
hlt
cld
jbe
arpl
scas
xor
jmp
dec
dec
mov
push
xor
les
cmp
divb
pop
rcr
jo
mov
pusha
lret
or
leave
fistpl
jge
pop
cwtl
xor
cmp
pop
mov
stos
popa
gs
ds
jmp
jnp
mov
out
int
das
cltd
mov
mov
add
inc
pop
stc
mov
and
clc
loope
test
popa
xchg
pushf
out
filds
jae
mov
aas
cmpsl
cmp
dec
mov
insb
int3
push
inc
test
push
or
xchg
sbb
push
pop
inc
popl
test
xchg
jb
inc
mov
gs
das
push
andl
iret
mov
std
fistpl
adc
loopne
or
out
push
push
stos
add
les
push
push
sbb
adc
mov
loopne
fistpll
and
sbb
jnp
not
and
out
xor
out
jae
inc
or
adc
je
ret
or
sbb
ret
aad
sub
xor
jo
jne
test
sahf
ret
adcl
hlt
das
in
xor
jl
pop
sbb
adc
js
sbb
mov
dec
test
pcmpgtb
dec
dec
addb
xor
or
mov
add
daa
jnp
out
mov
aad
lret
dec
std
in
outsl
add
pop
out
xchg
xchg
xor
stc
add
jmp
mov
daa
fists
enter
cmpsb
loope
in
fstpt
xor
mov
xchg
dec
in
jb
xor
ret
push
cs
adc
lcall
jnp
jbe
cmp
std
aam
pop
repz
mov
loop
pop
cmpsb
es
or
pop
icebp
dec
pop
incl
pushf
add
add
push
into
cmp
xor
adc
aam
lock
dec
pop
shlb
add
shl
int
adc
mov
repz
sbb
shrb
int
decb
popa
dec
push
inc
push
mov
xor
pop
pop
ret
mov
stos
out
or
movsl
lods
cwtl
fs
shll
fisubs
sub
mull
pop
out
or
out
movsb
sbb
add
xor
pop
rcrl
dec
aas
mov
arpl
push
lds
cli
out
je
sahf
lahf
or
lods
test
stos
adc
loop
mov
cli
fisubrl
bound
and
pop
jl
pop
jnp
imul
arpl
shr
bound
int3
jle
lahf
mov
dec
adcl
inc
arpl
les
aam
dec
shll
bound
fwait
pushf
fs
lret
lcall
inc
adc
mov
ljmp
inc
in
push
test
or
xchg
stos
lret
xorb
test
loopne
pop
inc
pop
es
jo
lods
nop
roll
call
inc
pop
cld
das
mov
in
and
sarl
push
mov
test
ret
inc
popf
test
mov
stos
add
inc
xor
adc
test
xchg
mov
fcompl
lahf
xlat
sbb
mov
pop
xorl
sbb
add
push
push
pop
mov
js
stos
fdivs
fldt
repnz
jg
lahf
cmp
dec
out
ds
sbb
ss
inc
add
cmp
pop
lds
cwtl
repnz
and
lods
in
sbb
mulb
dec
mov
cld
push
gs
fnstsw
lods
aaa
fisubs
xchg
xchg
test
testl
fs
or
or
mov
aam
adc
cmp
loopne
into
jns
xchg
es
push
lods
out
jp
adcb
paddd
fwait
xchg
inc
scas
inc
xor
stos
xchg
sbb
ja,pn
lcall
xchg
push
mov
jne
bnd
push
lret
ljmp
add
sahf
icebp
mov
cltd
jg
jecxz
loope
xchg
mov
sbb
add
jle
xlat
xchg
jmp
xchg
js
add
in
jns
cld
push
or
out
adc
lock
jns
fwait
lret
in
aaa
sub
inc
cmpsl
cwtl
xor
std
loope
inc
push
sbb
stos
lcallw
jns
test
pop
or
bound
sbbl
jne
sub
xchg
inc
call
sbb
dec
xchg
xor
mov
pxor
pop
push
pop
test
shll
out
mov
mov
cmp
cmc
mov
mov
je
jg
cmp
push
repnz
int
inc
ficomps
push
cmpsl
cmp
lds
jb
rol
test
lds
testb
mov
cmpsl
out
outsl
loop
addr16
popf
push
call
out
cltd
cmpsb
cmp
sbb
or
jg
lahf
xchg
or
int3
lahf
push
notl
xchg
inc
scas
sub
jbe
mov
negb
mov
and
das
xchg
fwait
adc
dec
cmp
pop
outsl
push
out
fldt
sbb
ja
shrl
mov
push
xor
fimull
imul
test
push
or
push
jnp
mov
mov
jae
push
or
enter
loop
and
pop
lds
lcall
cmpsl
jl
push
icebp
nop
add
push
decl
mov
ret
mov
insl
mov
mov
mov
adc
inc
and
pop
mov
cmpl
jb
data16
leave
add
cmc
cs
movsb
mov
adc
ja
sub
push
clc
pop
jae
jne
sbb
mov
les
or
sbbb
mov
adc
sbb
pop
fdivp
in
lods
in
lods
outsl
lods
mov
cmp
ja
sbb
pop
push
std
addr16
dec
or
and
or
ss
xor
test
dec
cmc
push
push
sub
xchg
push
lods
push
ljmp
scas
mov
jmp
xor
adc
push
stos
arpl
inc
pop
jp
dec
adc
mov
xchg
add
dec
mov
add
faddl
enter
hlt
sub
enter
cmpsl
or
jp
stos
adc
cmpsb
jp
inc
mov
inc
adc
jmp
int3
add
ljmp
dec
imul
data16
xchg
shrb
sbb
inc
mov
insl
sbbb
stc
xchg
nop
mov
leave
shrb
imul
push
adc
inc
dec
mov
cld
jge
rolb
outsl
les
jg
sti
les
xor
insb
je
lods
mov
in
sub
cld
add
aas
push
or
jg
stos
shl
xor
stos
and
shll
popf
int3
jne
pop
xchg
cmp
pop
mov
cltd
lret
popl
mov
push
std
pop
mov
xchg
shlb
dec
pop
daa
inc
lahf
adc
enter
in
pop
dec
popl
mov
dec
stos
push
push
mov
stos
push
push
mov
and
xchg
mov
sbb
jg
xchg
add
jo
dec
and
into
jmp
xchg
loop
sarb
xchg
leave
loop
sbb
fs
sbb
lock
mov
rcr
add
dec
mov
mov
imul
sub
fcmovne
mov
fcoms
jge
mov
pop
notb
cli
movsl
sub
or
pop
add
in
push
lahf
inc
mov
cmpsb
lahf
push
cmp
movsb
sub
lea
in
cld
sbb
lret
lcall
and
mov
push
mov
xlat
jg
add
jns
jbe
jmp
insl
sub
lock
mov
pop
out
and
mov
outsl
aas
cli
out
icebp
sbb
xor
jbe
jge
ret
pop
or
mov
push
push
push
fmull
imul
fiadds
mov
arpl
mov
sub
aaa
adc
aam
lret
sub
es
fists
lds
loopne
inc
aas
jno
adc
pop
pushf
dec
cmp
cmpsl
cmc
movsl
ret
mov
mov
mov
ret
xchg
ljmp
jg
ror
mov
movsl
xchg
pusha
inc
xchg
nop
xorb
push
stos
cmp
sub
clc
loopne
mov
addb
and
bound
dec
ficomps
add
lret
inc
jo
sbb
movnti
jno
int
mov
add
cli
das
add
out
mov
mov
lock
cmp
push
push
sbb
cmp
pop
and
pop
or
div
outsb
fwait
pop
mov
xchg
mov
jo
ja
sub
push
or
cld
cltd
stos
arpl
lock
out
push
dec
jbe
inc
pop
mov
dec
mov
nop
lock
std
sub
insb
dec
or
xlat
sti
cmp
or
pop
mov
adcb
push
inc
inc
pushf
fs
push
dec
add
idivb
imul
in
sbb
cmc
mov
imul
int3
fnsave
pop
mov
inc
mov
ljmp
or
push
xchg
adc
mov
pop
test
mov
and
pop
rorb
loopne
dec
leave
not
out
mov
add
jp
std
pop
lret
dec
inc
or
cld
aam
pop
aas
movsl
rolb
jo
add
push
or
inc
stc
popf
push
arpl
sbb
jbe
int3
ds
sub
dec
insb
cmpsl
stos
scas
test
cli
mov
sbb
les
fcmovu
push
sbb
imul
in
cli
sub
popa
xchg
mov
jns
mov
add
mov
inc
dec
lret
psubb
es
push
out
push
lods
inc
or
xchg
fwait
outsl
lcall
jae
mov
push
inc
push
pop
pusha
fnstsw
out
outsl
mov
dec
mov
jmp
ret
add
mov
xor
inc
cmp
and
mov
in
sub
lds
fwait
nop
pop
std
dec
sahf
les
icebp
test
sahf
out
mov
addr16
sbbb
jmp
jmp
xor
cwtl
test
jmp
push
ret
out
xor
pop
aas
pop
mov
test
inc
loope
xchg
stos
cwtl
js
leave
sub
mov
ds
pop
pop
int
aam
or
jbe
flds
xor
push
jns
mov
add
push
and
lret
pop
adc
insb
clc
mov
push
mov
push
iret
xor
sub
inc
pop
testl
shlb
jg
push
mov
adc
lret
shll
cwtl
sub
inc
mov
inc
inc
lds
add
aam
mov
mov
add
sbb
lcall
mov
in
out
icebp
ds
xor
in
cmp
dec
xor
inc
out
rcrl
mov
outsl
xor
loop
adc
sbb
inc
cmc
dec
popa
sbb
aas
pop
dec
jl
mov
push
add
je
cmp
mov
movsb
cmc
cmp
cmp
xchg
lods
repnz
in
ss
mov
fisubrl
adc
ja
loopnew
xor
ja
cmp
orl
push
popa
out
inc
xchg
shrl
insb
mov
mov
dec
aas
push
addr16
mov
mov
imul
adc
mov
ficompl
push
mov
cmc
in
dec
sbbl
inc
mov
clc
dec
dec
mov
cmpl
dec
and
shlb
outsb
push
mov
repz
je
mov
dec
fcmovnb
push
pop
sbb
shrl
adc
sbb
jle
jg
pop
cwtl
or
push
xchg
mov
gs
xor
xlat
scas
cmc
sub
in
ss
lea
cmc
mov
xchg
daa
push
push
sub
cmp
int
fdivrl
xor
lea
inc
sub
jb
mov
ds
pop
out
push
cmp
inc
lods
sbb
pop
imul
mov
adc
add
jbe
sbb
xchg
dec
scas
mov
ja
jno
push
lahf
mov
leave
xlat
popa
pushaw
arpl
paddw
cld
inc
outsl
fldenv
xlat
or
add
jmp
or
push
movsl
sbb
mov
adc
sbb
add
pop
out
pop
in
pop
bound
dec
pop
insl
sahf
push
inc
ret
lods
cmp
out
scas
in
inc
leave
cld
cmp
int
pop
mov
data16
fmuls
daa
xor
insb
and
mov
mov
scas
jb
cmp
adcl
sbbb
lock
mov
lahf
dec
cmp
in
xchg
push
cmc
xor
lret
test
daa
sti
sub
xchg
les
xchg
or
xor
stc
out
std
xchg
xor
lcall
lret
push
sub
mov
insb
push
fldt
lods
sub
jmp
fwait
mov
ljmp
add
daa
fcompl
mov
std
sbb
jno
cmp
push
int3
mov
mov
aas
lcall
mov
xor
fidivrl
sbb
sub
cwtl
sbb
call
push
pop
and
or
dec
dec
inc
xchg
rcrb
cmp
bound
movsl
rorl
xor
sahf
inc
push
cmpb
imul
adc
int3
pushf
adc
dec
pop
gs
aaa
dec
sub
rcl
pop
cmpsl
inc
insl
or
mov
sub
test
jb
mov
inc
inc
pop
insl
out
das
cmp
repz
xchg
icebp
icebp
ret
cmp
and
pop
loope
pop
ja
stos
int
sti
aam
call
cltd
flds
dec
push
cld
test
mov
jns
sar
mov
pusha
and
pop
jno
and
cwtl
std
mov
sbb
pop
and
gs
mov
out
push
add
aad
sbb
gs
mov
xor
hlt
gs
inc
cmp
lea
xchg
cli
push
out
jae
testl
sarb
sbb
jecxz
dec
xchg
fimuls
mov
xor
fsubrs
in
mov
mov
scas
out
push
xchg
cltd
nop
scas
in
std
pop
sub
lcall
lcall
cmp
mov
sarb
push
bound
mov
iret
mov
xchg
loope
cwtl
repz
repz
mov
cmp
pop
push
adc
and
jbe
xorl
shll
test
lea
jns
mov
push
jecxz
es
out
and
pop
out
or
fildll
ror
xor
adc
das
sub
test
jge
pushf
and
lds
inc
call
adc
mov
and
incl
faddl
lods
mov
shll
dec
stos
jmp
ficompl
cmp
jbe
bound
or
fldenv
movsb
mov
cmp
push
es
mov
nop
out
cltd
push
sbb
jecxz
dec
cmp
push
fmull
lret
inc
cmc
cmp
jb
add
inc
and
jne
sti
push
dec
and
cmp
sahf
adc
mov
in
aaa
notl
pop
ja
inc
lcall
fwait
mov
mov
dec
inc
jne
dec
es
das
fs
cmpsb
sub
dec
pop
in
dec
jo
add
mov
inc
sub
jmp
cmp
js
mov
cmp
dec
lods
adc
pop
inc
push
testb
or
add
xlat
xor
push
jg
lret
fistl
or
inc
icebp
mov
jnp
xor
jecxz
push
inc
xchg
sub
leave
xchg
mov
push
inc
inc
jg
test
popf
outsl
push
inc
aas
sbb
push
enter
repnz
bswap
or
stc
pop
ljmp
rcrb
pop
out
sub
push
cmc
or
ret
inc
jnp
mov
mov
imul
cmp
subl
stos
xchg
aad
outsb
ret
pop
add
mov
mov
xlat
int
sub
shrl
into
dec
cmp
jb
arpl
sub
les
xchg
or
and
inc
add
jl
popf
ljmp
pushf
mov
sub
fidivrl
jno
mov
out
mov
and
cmp
lods
cmpsl
dec
or
call
xlat
loop
inc
pop
out
out
push
outsb
hlt
xchg
orb
lret
inc
fcmovu
inc
in
stos
cwtl
xchg
lret
mov
jp
repnz
sbb
jo
pop
and
jbe
mov
inc
movsb
push
mov
imul
out
mov
or
xchg
pop
xor
sub
fwait
int
scas
dec
fcmovbe
into
je
mov
in
scas
mov
ds
out
cmc
pop
les
ljmp
mov
push
mov
mov
lahf
push
xchg
push
fisttpl
sti
inc
mov
push
int
mov
stos
mov
lds
add
testl
gs
pushf
in
jno
addr16
adc
pusha
cli
rol
pusha
mov
xchg
repz
mov
or
push
cld
or
jb
loopne
gs
mov
sub
mov
cmp
cmpb
and
andb
inc
mov
cmpsb
sub
rcll
rcll
or
subb
adc
loopne,pn
cld
push
jo
ss
fcomp
fwait
xor
insb
repz
int3
fnstenv
ss
mov
iret
fsubrp
fwait
jge
cld
and
idivb
out
inc
dec
pop
mov
stc
movsb
jmp
cld
pop
cltd
adc
test
cmc
xor
lcall
push
les
jns
push
nop
mov
dec
cli
pop
bound
lea
dec
jecxz
sbb
and
cmc
roll
rorb
lea
dec
lds
and
jae
xchg
aaa
xor
and
or
cmp
and
shlb
in
imul
int
out
or
cmc
push
popf
sub
and
jmp
cmp
push
popa
sahf
mov
inc
adc
loope
js
lds
bound
shl
push
fistpll
cmc
repz
lods
cltd
push
ds
push
outsb
out
stos
rol
add
clc
lods
fdivrp
imul
scas
jns
fucomp
jl
pop
into
outsl
loope
mov
lods
insl
sbbb
fildll
faddp
jl
into
into
dec
and
xchg
cli
cmp
jle
jge
test
pop
mov
add
ds
cmp
mov
mov
xor
repnz
sub
cltd
clc
mov
loope
idivb
dec
fdivl
js
pushf
pop
in
mov
push
fs
or
push
inc
mov
dec
in
ds
pop
fidivrl
xor
out
clc
push
mov
pushf
daa
out
xor
jge
mov
push
push
lret
das
add
insl
rcrb
cmp
jmp
xchg
sub
xchg
sbb
nop
sarl
nop
movsb
test
jnp
arpl
aam
aam
dec
lahf
fdivl
testb
dec
mov
sub
mov
fwait
push
es
push
mov
jnp
in
lds
inc
addr16
dec
add
iret
push
dec
push
pop
out
inc
into
dec
sbb
test
pop
aaa
je
js
jg
dec
jmp
mov
mov
pop
out
ds
mov
xlat
sahf
inc
add
sbb
or
jecxz
xor
inc
pop
jl
out
js
lret
cmp
jp
pop
sub
les
mov
jbe
xor
xchg
xchg
push
imul
sub
scas
cli
lods
xchg
shrb
inc
and
movsb
mov
cmp
aad
shl
mov
movsl
movsl
pop
nop
in
pop
test
clc
lret
out
inc
sbb
scas
push
mov
lds
adc
dec
push
lods
test
dec
pop
repnz
fisubrl
jns
call
addr16
jns
cmp
outsl
pusha
popf
jae
xor
aas
xlat
scas
lods
inc
cmp
mov
and
neg
outsb
jno
jmp
mov
fs
nop
mov
cmp
pusha
pop
icebp
mov
test
popf
iret
or
pop
aad
dec
idivl
dec
mov
cwtl
jl
mov
sbb
cmc
xchg
sbb
bound
lret
jl
sbb
xor
aam
ja
xorl
sub
andl
outsb
xchg
out
mov
mov
adc
into
rclb
inc
pop
sbb
aas
or
cmp
push
add
and
cld
xchg
pushf
adc
bound
jg
mov
jle
dec
imul
dec
repz
cmp
push
jg
mov
push
out
adc
sbb
popa
je
in
adc
jne
sub
cli
pop
mov
sub
les
call
shll
jmp
mov
imul
mov
and
jb
xor
data16
xchg
aam
ss
rcll
adc
enter
repnz
push
adc
aaa
or
lret
loope
arpl
add
clc
sahf
add
int
test
cmpsl
stos
add
and
je,pt
pop
leave
fists
pop
mov
cs
xchg
mov
lds
push
lds
jmp
and
imul
popa
int
jb
pop
hlt
and
dec
push
mov
inc
stos
loopne
jns
rorl
fincstp
out
testb
push
mov
jp
bound
mov
jp
scas
inc
fisttpl
cltd
fs
daa
ss
fistps
daa
int3
shrb
sub
and
mov
inc
mov
dec
popf
lds
jmp
bound
cmovns
movl
dec
xchg
popf
repz
jge
mov
hlt
adc
es
pop
sbb
push
jmp
fidivrl
push
stos
pop
das
in
add
pop
sbb
lock
hlt
jmp
shll
int3
inc
pop
xor
jae
in
icebp
jmp
sub
insb
shlb
xchg
sbb
push
adc
imul
enter
sti
mov
adc
cmpb
js
mov
insl
cmp
fidivrs
push
adc
imul
xchg
mov
enter
js
cltd
push
mov
xor
es
shl
jns
lock
dec
dec
sbb
ja
sub
mov
adc
stos
int3
adc
jo
xor
xlat
sub
add
sbb
and
dec
cmc
jo
dec
mov
and
mov
dec
ss
int
in
bound
clc
ficomps
or
jecxz
and
loop
sub
jb
add
cmpl
repz
decb
pop
xlat
fistpl
inc
sbb
inc
daa
dec
dec
mov
gs
popf
repz
and
jb
cmpsl
mov
adc
inc
in
push
mov
dec
or
add
popa
xor
mov
jne
sub
in
fldenv
push
sub
or
inc
stc
cli
xchg
mov
ds
mov
push
mov
cmp
cmp
insl
aam
icebp
pop
sahf
mov
mov
setns
push
xor
mov
lahf
fmull
xchg
movsb
sbb
orl
inc
test
cs
sub
pop
int
and
daa
pop
cwtl
mov
inc
movsl
mov
pop
mulb
mov
mov
dec
jmp
nop
and
repz
cmpsl
mov
gs
imul
sub
add
ret
pop
faddl
lea
movsb
mov
xchg
pushl
add
push
aas
mov
add
imul
roll
jmp
push
stos
mov
adc
dec
inc
cli
loope,pn
mov
inc
std
jmp
rcrb
mov
jbe
adc
push
push
dec
add
jp
pusha
mov
cltd
sbb
push
inc
daa
lds
pop
dec
outsb
xchg
jmp
outsl
aam
clc
mov
lret
push
rcrb
pushf
sbb
out
add
xor
sbb
inc
push
xlat
mov
jg
and
fbld
add
sarb
pop
dec
xor
cltd
cli
ds
mov
dec
and
cmp
jns
fucomp
add
pushl
out
mov
cli
outsl
test
and
js
jg
sub
test
scas
js
jb
mov
jp
pop
lock
lods
jp
push
xchg
xchg
das
mov
sub
lcall
xor
inc
jnp
popf
fsubp
xor
fisubrs
and
dec
jge
dec
xor
mov
mov
or
adc
mov
ret
mov
jns
mov
shlb
sub
xor
sarb
xor
pop
pop
scas
xor
sar
mov
mov
dec
sbbb
imul
sti
repz
add
outsb
mov
and
ss
sub
mov
loopne
cmp
cmp
out
cwtl
sbb
icebp
inc
mov
je
jp
adc
test
xor
mov
adc
fdivrl
fld
cwtl
mov
int3
lods
sub
mov
out
cli
xor
fbld
xchg
addr16
movb
xor
rcrb
bound
xchg
lea
enter
mulb
stos
xorb
jg
fcomps
jl
or
or
test
dec
push
imulb
hlt
push
jb
aas
in
fists
stc
mov
hlt
dec
test
cltd
adc
js
lahf
cld
mov
pushf
sbb
xchg
xorb
scas
adc
lret
sub
je
loope
iret
fisubs
pop
loope
icebp
cmpl
pop
mov
mov
out
mov
arpl
jge
xor
rcll
movsb
sbb
push
push
sbb
cld
sub
fwait
std
pop
mov
cwtl
adc
shll
scas
push
jl
das
pop
stos
and
jg
xor
sbb
mov
mov
inc
pushf
xchg
mov
xor
lahf
popf
sub
imul
jg
mov
push
jns
xor
cmp
sbb
neg
add
adc
lock
jg
iret
xor
or
repnz
popa
loope
xor
sub
mov
adc
mov
jo
out
push
xchg
jae
sub
aad
popa
dec
imul
mov
pusha
das
daa
and
fidivrs
sbb
mov
sbbl
sarb
pop
cmpsb
or
das
in
mov
jmp
int
jo
cmc
out
pop
inc
mov
pop
fdivp
repnz
je
pop
xchg
scas
repnz
inc
mov
xor
test
pusha
push
adc
sbb
scas
imul
enter
lret
jl
pop
pop
add
rolb
mov
mov
in
mov
repnz
scas
ja
and
test
or
xor
xlat
or
add
pop
leave
push
cmpsb
ss
cmc
cwtl
inc
sub
push
sub
mov
dec
inc
pop
out
inc
push
mov
xchg
jb
mov
adc
int
pop
lods
inc
test
push
pop
cmpsb
jo
adc
jl
fwait
mov
cli
xlat
push
dec
nop
cmc
mov
dec
sub
dec
shlb
mov
cli
mov
or
mov
sbb
jae
daa
xor
cld
jne
sbb
rcr
outsl
in
hlt
fwait
int3
jno
out
out
pop
imul
stos
adc
mov
aad
mov
sub
inc
mov
pop
aas
data16
nop
imul
sbb
mov
cltd
pushf
ret
stos
cmp
mov
mov
adc
fdiv
cmpsb
push
jle
int3
xchg
int
ja
iret
push
push
and
leave
cli
and
daa
iret
hlt
mov
fwait
mov
mov
sbb
xor
mov
cmp
jb
xorb
and
cmp
faddl
mov
dec
adc
ret
push
pop
mov
add
adc
addb
rclb
mov
sub
test
lret
pop
out
xor
dec
mov
lret
jb
dec
leave
mov
mov
cmp
push
mov
lock
jnp
jge
and
pop
es
movsb
mov
test
cwtl
cmp
mov
rorb
and
and
mov
cmp
dec
add
cmp
cmp
jle
xchg
bound
or
xchg
lds
lods
loop
push
std
xor
add
xlat
pop
push
mov
nop
mov
sub
in
lcall
inc
push
adc
outsl
add
xor
ret
shrl
inc
dec
mov
stos
adc
jns
pushf
scas
push
dec
push
xor
push
inc
pop
mov
leave
movsl
out
enter
mov
cmp
test
loop
imul
or
and
sub
into
mov
jge
daa
sahf
je
sbb
std
icebp
lock
or
mov
pop
sbb
add
cmp
fildll
test
cmc
sbb
sbb
daa
es
push
fdivl
pop
mov
mov
jns
jne
xchg
mov
fildll
mov
xlat
insb
lahf
ss
popf
sarb
sbb
cmc
dec
inc
cmc
inc
ficoms
jl
fwait
mov
mov
jmp
and
xchg
adc
add
xchg
xchg
call
adc
sahf
inc
sbb
lea
xor
xchg
mov
mov
out
push
or
or
pop
sbb
fmulp
or
scas
cmp
cmp
shlb
sbb
mov
stos
div
cmp
arpl
mov
jne
mov
inc
mov
push
xchg
fwait
ss
sub
out
jle
scas
inc
inc
aad
push
and
pop
fs
or
fxch
sbb
jne
outsb
inc
inc
jo
lea
mov
mov
stos
sbb
xchg
pusha
fisubl
loopne
sbb
xorl
hlt
aaa
sub
fstps
in
push
arpl
dec
or
insl
test
mov
shlb
xchg
dec
arpl
dec
push
imul
mov
push
repz
sbb
xlat
test
mov
lahf
push
lods
push
loop
adc
adc
and
ljmp
push
ds
je
arpl
sbb
jb
setp
xor
leave
jp
mov
fs
pop
cmpsb
sub
mov
cmp
sub
movsl
gs
fcoml
inc
shlb
sahf
shll
dec
xor
jge
cmp
cs
hlt
jae
mov
imul
jecxz
lock
sub
repnz
add
lds
imulb
pop
ret
sub
add
xchg
or
mov
cmpsb
xchg
or
les
cmp
mov
dec
dec
movsl
cmp
add
int
clc
cwtl
push
pop
xor
xchg
xchg
jmp
gs
out
in
test
aad
mov
mov
jle
cmp
in
fidivrs
roll
xlat
xor
ficoms
xor
and
and
test
dec
pop
inc
aad
test
test
cmpsl
clc
xchg
xlat
sti
xchg
xor
outsl
jge
mov
and
sar
sbbb
in
pop
out
out
insl
inc
int
out
test
fbstp
add
cwtl
notb
jecxz
push
mov
mov
insl
cmpb
xchg
repz
js
ss
imul
loope
mov
sahf
jg
jb
fidivs
mov
dec
jl
cmp
push
sbb
loop
lods
movsb
dec
mov
lret
gs
fnstsw
jg
mov
pop
xchg
inc
push
push
test
int
adc
lock
ds
dec
inc
div
mov
loopne
mov
adc
mov
sti
or
sub
jge
mov
mov
scas
jg
in
mov
sbb
jp
push
fnstcw
jg
adc
loopne
popf
dec
cs
gs
jne
push
and
jmp
push
lcall
sarl
outsl
ja
cmp
dec
repz
fdivrl
pop
xor
pop
pop
jno
xchg
inc
dec
fwait
sub
jbe
cmp
sub
js
push
pop
or
sub
mov
adcl
packsswb
add
addb
cmp
stos
lret
cs
mov
pop
cmp
icebp
xlat
idivb
xchg
sbb
mov
push
push
ficomps
push
or
out
inc
lcall
or
je
add
int
into
jg
xor
lcall
les
mov
add
and
push
cmp
mov
add
ljmp
adc
inc
mov
insl
dec
btr
sub
xchg
add
ljmp
and
and
xchg
dec
add
imul
dec
sti
fisubs
xor
push
fwait
jb
and
mov
scas
mov
call
lods
cmp
sar
ljmp
out
std
pop
sbb
or
loopne
pusha
or
push
inc
adc
sahf
push
outsb
imul
add
lret
les
incl
sub
adc
inc
imul
inc
dec
mov
inc
scas
jge
insb
repnz
pop
mov
jmp
pop
test
cli
mov
push
daa
sbb
inc
fwait
and
jmp
push
dec
out
jge
adc
and
add
fdivr
test
ljmp
into
repnz
fbld
push
xchg
jno
or
in
cmpsl
push
jns
mov
pop
enter
and
out
mov
inc
in
mov
jns
mov
in
inc
xor
shr
sbb
fstps
ret
sti
imul
inc
lods
jne
cs
dec
xchg
clc
or
nop
out
mov
xchg
in
and
arpl
in
dec
lcall
ds
and
movsl
inc
and
mov
add
xchg
dec
sti
adc
sbb
cmpb
popa
or
popf
xchg
ret
sub
sbb
and
iret
outsb
jo
call
test
xor
cmp
jmp
out
sahf
push
add
bound
xor
adc
pop
mov
cmp
xchg
sbb
cwtl
outsl
push
outsb
jg
or
mov
mov
out
pop
lock
lret
das
xchg
push
mov
fsubrl
push
gs
jg
into
pop
inc
loope
arpl
adc
scas
mov
fiaddl
aas
xchg
jg
or
pop
sbb
xchg
inc
inc
pusha
repnz
mov
jge
cwtl
loopne
out
and
jo
mov
icebp
sub
push
es
mov
push
fsubs
sbb
std
sbb
cltd
test
ret
mov
xor
xchg
sbb
popa
mov
lea
les
hlt
mov
jg
ret
and
and
loop
jge
cmpsl
xchg
adc
cmpsl
mov
push
scas
out
xchg
scas
aam
sub
mov
flds
fstpt
iret
pop
mov
in
pop
cmp
cli
mov
and
mov
dec
ljmp
push
mov
mov
pop
call
push
arpl
pushf
mov
push
dec
xor
dec
sub
lods
sbb
pop
cmpb
cmp
xor
fadds
fistpll
push
adc
repz
out
add
movsb
mov
dec
stos
xchg
outsl
push
inc
scas
jb
repz
push
dec
push
push
adc
test
mov
loop
xchg
pop
mov
add
call
shrl
movsb
insb
mov
mov
stos
out
call
mov
fidivs
in
movsb
test
int
shrl
lahf
subb
mov
add
mov
pusha
add
sbb
das
es
xchg
jo
js
gs
fbld
popf
sub
jecxz
xorl
xlat
mov
sbb
push
add
gs
outsl
int
into
iret
rorb
sbb
sub
fsubp
lret
pop
in
lahf
or
sbb
inc
loope
sbbb
stc
stc
sbb
fidivrs
je
sub
pop
mov
sub
loop
out
jo
out
inc
push
and
int
jno
sbb
rcll
push
popa
xlat
std
gs
xchg
add
mov
cmpsb
mov
push
xor
mov
cmp
pop
popf
ds
adc
jbe
inc
pop
pop
mov
mov
ret
pop
sti
push
dec
mov
jne
mov
or
cld
and
lcall
xchg
dec
fs
adc
testb
xor
push
fiadds
add
add
jns
and
jecxz
ljmp
nop
lret
pop
jle
stc
fsubs
jno
divl
pop
adcb
lcall
jb
mov
shrb
xchg
daa
lahf
lock
xor
jl
jg
aam
lret
jp
push
mov
fmuls
mov
cmp
adc
rcrb
in
mov
cs
dec
cld
lret
jbe
xor
loop
inc
pop
and
fstpl
jbe
dec
add
add
cmp
cld
in
lock
push
push
pop
xor
rol
sar
pushf
shrb
mov
adc
popf
or
ss
sbb
cmpsl
adc
xchg
mov
mov
fneni(8087
pop
stc
not
lock
dec
xchg
adc
iret
push
fsubrp
out
pop
in
loopne
dec
adc
ja
inc
adc
das
rorl
outsl
movsl
cld
dec
push
sahf
push
push
into
in
pop
inc
inc
outsl
andb
add
std
mov
mov
lods
jl
movsb
jo
std
dec
popf
clc
mov
fwait
pusha
xchg
cs
ljmp
insl
xor
shlb
mov
lahf
dec
fucomp
push
lock
mov
dec
popf
sbb
dec
rclb
sbb
imul
sbb
sub
xchg
call
dec
jecxz
push
out
mov
das
mov
mov
jle
push
push
stos
int3
jb
mov
mulb
push
sbb
outsb
push
xor
es
into
xchg
pop
add
sahf
into
adc
sti
add
mov
push
pop
push
out
jne
cli
mov
jae
mov
bnd
outsl
dec
ret
ficomps
adc
mov
hlt
adc
rol
jle
dec
jnp
lock
or
jns
mov
stos
push
imul
jle
jbe
jno
iret
mov
rol
ja
cmp
and
push
xlat
pop
adc
mov
aaa
in
dec
popf
cltd
mov
fs
es
mov
cmp
or
jae
outsl
push
pop
std
repz
jl
cld
mov
add
mov
les
inc
test
cli
mov
dec
aam
push
pop
cmc
xor
fsubr
cli
jb
nop
repnz
xor
xchg
test
iret
outsl
fldl2t
daa
jne
mov
pop
dec
jecxz
out
aam
lock
cmp
push
xchg
sub
xor
in
cmp
stos
xchg
mov
and
or
lcall
stc
or
loope
sbbb
mov
adc
mov
xchg
jg
in
pop
ret
inc
insl
add
push
movsb
jl
xor
push
xlat
push
sarb
insb
ja
jg
dec
adc
jg
xchg
push
std
in
js
sbb
popa
int
cmc
mov
fmuls
mov
jmp
in
push
cli
push
add
jbe
and
rol
adc
pop
push
xor
xchg
popf
adc
shll
fmull
cmp
jne
pop
xchg
pop
cld
add
stc
aas
jns
jp
pop
cmpsl
out
xchg
push
int
imul
jb
pop
bound
jmp
das
mov
add
mov
cmc
arpl
std
jo
pop
mov
loope
lods
fiaddl
inc
sub
ror
mov
in
and
add
dec
push
fstpt
fildl
and
xor
mov
lcall
shr
mov
xchg
push
ss
bound
sbb
add
cli
rcl
aam
mov
lods
test
into
in
out
push
xlat
sbb
mov
std
ret
mov
mov
cmpsl
notl
mov
jnp
shll
in
lods
add
or
xor
fsubl
scas
jne
mov
insb
dec
cltd
stos
rep
pusha
adc
mov
cmp
addr16
or
je
insl
cwtl
mov
stc
sahf
mov
ficomps
lea
js
roll
cmpsl
and
jne
inc
pusha
pop
lods
arpl
scas
push
fcmove
popfw
ret
pusha
add
jmp
loope
xlat
sub
sbb
and
out
loopne
or
cwtl
and
in
test
movsl
dec
mov
cs
or
dec
movsl
jno
xor
sbb
getsec
je
sub
pop
mov
jl
mov
idiv
fcmovnbe
mov
call
bound
or
pop
es
test
stc
push
arpl
cld
nop
test
or
push
es
shlb
push
jg
sti
std
cmp
imul
iret
xor
gs
pop
inc
mov
mov
cld
cli
mov
ds
jb
dec
jb
into
xchg
int
icebp
inc
and
mov
iret
ljmp
xchg
lret
sub
loope
mov
lret
out
jp
cltd
jp
in
mul
mov
mov
jmp
jno
lock
in
sub
inc
ffree
xchg
mov
xchg
outsb
fisttpl
xor
push
testb
lods
out
inc
ss
sub
xchg
in
repz
adc
mov
sbb
ljmp
mov
add
iret
mov
pusha
int
into
loope
aas
xchg
adc
imul
mov
mov
insl
test
or
rol
idivl
lret
lds
sbb
pop
in
cmp
shlb
pop
aad
sub
test
call
repz
repz
fsubs
dec
out
xlat
aaa
mov
gs
sub
scas
cmpsl
outsb
enter
push
adc
andb
mov
int3
pop
ds
xor
cs
cmpsl
ret
pop
add
in
jge
jmp
add
xchg
mov
xchg
inc
jge
push
xor
mov
outsl
dec
xchg
loop
jle
jmp
shll
dec
sbb
aas
cltd
mov
mov
in
movb
jmp
in
in
mov
fisubl
mov
test
jl
leave
loop
js
inc
cltd
das
enter
arpl
imulb
out
test
cs
push
fs
loope
xor
out
lcall
xor
mov
push
inc
push
ja
nop
cltd
mov
notb
and
xor
pop
sub
cmpsb
cmc
or
cmp
imul
out
mov
mov
ljmp
xchg
icebp
data16
add
sahf
out
stos
jae
scas
movsl
cmp
inc
xor
movsb
inc
inc
pop
je
adcb
mov
ss
mov
jl
inc
scas
movsl
bound
int3
ds
mov
pop
adc
add
mov
lret
dec
mov
xor
sbb
js
bound
jne
data16
fs
lret
inc
adc
nop
ret
mov
into
insl
add
adc
inc
fisubs
sub
jl
jl
shll
dec
das
or
push
sarl
fildll
lea
call
jle
sahf
dec
adc
cmpsl
mov
pop
loopne
add
pushf
jo
pusha
mov
repz
jno
clc
adc
fdivr
cmp
jl
pop
xor
mov
inc
sbb
clc
push
and
jmp
shll
call
cmp
inc
stos
outsl
into
aad
dec
pop
add
mov
lahf
std
loopne
loope
cli
push
dec
xchg
push
sbb
fadd
xchg
push
jmp
lcall
pop
repz
outsb
mov
adc
pop
cmpsb
jmp
or
fs
ret
fldt
movsl
stos
mov
lcall
mov
cmpb
jns
jl
cltd
push
cmpb
adc
loope
pop
repnz
mov
in
push
clc
jmp
sbb
loop
divl
cmpsb
and
sub
movsl
std
inc
sub
loop
ret
fstp
inc
xor
adc
lret
sbb
adc
and
fcomps
flds
push
fcoms
inc
repnz
aaa
jecxz
mov
push
sub
in
jb
xor
inc
fwait
adcb
xchg
rcll
js
xor
stos
pop
adc
fdivrp
inc
xor
or
js
push
dec
mov
push
ja
in
and
mov
mov
dec
iret
icebp
add
fisttpll
orb
out
scas
popa
bound
sahf
jo
aaa
in
iret
dec
sub
sub
adc
jnp
xlat
push
pop
test
add
ss
cmc
insl
or
sub
psrlw
xor
push
testl
ficompl
pop
jl
jl
iret
push
sti
fcomp
push
into
cmp
pop
jnp
add
aam
jl
add
sub
shll
xorb
add
or
or
inc
shll
fdivrl
js
adc
fldenv
pop
xor
xor
sbb
dec
push
mov
xchg
cmpsl
mov
sbb
je
shlb
fcomps
dec
push
mov
push
decl
call
lods
or
push
ret
xor
aas
call
dec
push
mov
xchg
ficoms
xor
jg
or
push
pushf
repz
js
stos
adcl
call
aam
icebp
stos
mov
mov
add
jnp
loope
in
mov
xchg
movsl
jne
sahf
jbe
call
sub
xchg
sbb
sub
shlb
inc
or
adc
mov
fsubrs
mov
out
shll
pop
cwtl
jp
mov
popf
bound
sbb
add
or
jns
imul
iret
pop
jle
jbe
lahf
dec
sbb
hlt
or
mov
mov
addl
mov
loope
cmpsb
pop
fidivl
sbb
dec
stc
mov
cmpl
subl
push
fs
xchg
les
es
jbe
sub
mov
dec
inc
aam
lds
stc
pop
loope
lcall
mov
ror
in
push
xchg
in
dec
xor
xchg
in
icebp
stc
cmp
xchg
sub
insl
mov
lods
mov
cmpsl
adcb
adc
ja
adc
cmp
jno
rorb
jmp
pop
cs
jnp
lcall
rcrb
jmp
shl
add
daa
mov
sbb
loop
lret
pop
test
enter
ds
andb
stos
push
push
rcrb
leave
jno
in
and
or
xchg
cmp
push
in
inc
xchg
lea
dec
jb
and
inc
push
push
test
outsl
inc
jmp
out
mov
inc
mov
jnp
jl
ds
sti
adc
into
lods
push
dec
jb
xor
addr16
out
mov
pop
cltd
bound
cmpsb
fbstp
daa
out
lods
bound
mov
lcall
mov
rorl
or
cmpsb
pop
sbb
mov
arpl
and
add
ret
add
ficoms
repnz
add
dec
add
or
aas
jbe
jne
inc
rorl
cmp
mov
mov
pop
mov
aas
xor
pop
inc
leave
scas
or
sbb
push
xor
cs
jge
loopne
pop
inc
jae
in
push
mov
sbb
fdivr
leave
jecxz
enter
mov
rcrb
in
nopl
mov
mov
adc
fwait
les
jns
dec
in
lods
or
in
or
in
jb
add
lret
jno
push
cmp
cmpsb
cmp
dec
test
in
movsl
inc
pop
jns
ret
fdivrs
and
scas
sub
cmp
cmpb
pop
push
mov
insl
push
mov
int
frstor
clc
loop
hlt
push
hlt
test
sbb
ret
scas
jns
push
daa
fisttpll
dec
add
es
or
pop
out
imul
mov
add
cmp
fisubs
clc
fdivrl
jne
xchg
fidivrl
call
cmp
movsb
insb
and
inc
push
rclb
push
pop
fistl
pop
xchg
int
sbb
fmuls
iret
ja
stos
or
iret
xor
pop
pop
pusha
iret
mov
ja
popa
jle
or
pusha
outsb
lret
mov
sub
call
add
stos
jg
adcl
pop
inc
insb
lret
mov
mov
jge
sahf
adc
xchg
lahf
xor
sub
jmp
add
lret
push
das
ja
or
adc
popa
or
push
xchg
shlb
pop
jb
mov
das
mov
dec
addr16
inc
arpl
cmp
sbbl
imul
pusha
jmp
arpl
jmp
repz
arpl
adc
push
nop
loope
mov
mov
in
std
cwtl
push
xor
les
dec
scas
cmp
jo
mov
add
jns
sbb
pop
fistps
repnz
sbb
clc
rcl
jns
outsb
xor
ret
mov
in
fldcw
xchg
or
push
int
fwait
xchg
negb
inc
dec
jne
cmp
leave
jnp
lock
xor
pushf
dec
xchg
lahf
imul
gs
fidivl
inc
ss
mov
mov
rorb
fisttpl
mov
mov
xor
cmp
add
popa
push
or
cwtl
pop
fcoml
sti
mov
out
inc
sub
jae
sahf
xor
jb
mov
jmp
xchg
adc
pop
ret
inc
jecxz
mov
rolb
lret
push
or
hlt
es
jge
mov
imul
in
ja
test
mov
js
popf
mov
pop
rcll
out
jmp
xchg
mov
ds
push
mov
inc
xlat
jle
call
cmp
mov
push
cli
mov
push
jae
sahf
ret
jae
mov
mov
inc
and
adc
icebp
jbe
add
insl
push
push
xor
mov
sarl
jnp
out
adc
sarb
jge
lcall
lret
jnp
push
hlt
lods
icebp
cmpsl
sub
cmp
push
xor
jge
fs
pop
popa
sbb
mov
shlb
mov
fwait
jb
sbb
imulb
and
jo
push
sbb
cmp
inc
adc
stos
scas
pop
mov
cmc
inc
pop
jne
es
pop
cli
lahf
mov
adc
cli
ja
pop
stc
repz
daa
xchg
pop
lahf
xor
xchg
add
fadd
pop
sub
pop
sahf
lock
inc
adc
scas
scas
sahf
sbb
shrl
in
addl
clc
and
dec
movsb
repz
pushf
out
cs
fwait
ja
xchg
dec
and
pop
loope
test
aad
mov
out
sbb
data16
in
adc
ret
into
adc
imul
repnz
stos
mov
pushf
fcoml
mov
mov
call
xchg
sbb
cmp
insb
cmpsl
xchg
inc
in
js
dec
and
add
mov
jb
mov
xor
lds
cmpsb
aas
add
outsb
ret
stos
fiadds
dec
adc
sub
lods
scas
int
cmp
mov
add
xchg
and
and
jp
mov
lea
jne
jns
loop
push
sahf
pop
dec
lods
adc
pop
push
scas
mov
cmp
cmpb
mov
rorb
xchg
ja
das
or
out
xchg
inc
pop
jmp
mov
out
jne
push
sub
ret
negb
rclb
ljmp
mov
dec
in
jmp
add
dec
in
cmp
adc
jae
loop
jg
sub
mov
cmp
pop
ss
mov
cmc
mov
fmuls
pop
stos
mov
cmc
push
sub
outsl
pop
lcall
scas
pop
xchg
sbb
pop
mov
aad
jg
jb
jp
xchg
push
enter
rorl
sub
and
mov
aad
pop
inc
xor
lahf
mov
push
roll
adcb
repnz
xorb
fildl
es
and
mov
insb
push
inc
out
pop
jmp
cmc
push
out
cmp
push
mov
pop
xor
push
dec
in
cld
or
mov
and
fsubl
and
lret
jl
adc
fstl
insb
out
rol
cmp
js
mov
sahf
jle
pop
xchg
mov
ret
ljmp
shrl
pop
movsl
leave
pop
repnz
cmc
int
dec
xchg
jo
insb
or
mov
pop
pop
scas
mov
push
lds
mov
add
jle
loop
cmp
ret
cltd
push
idivl
mov
mov
out
xor
in
sub
mov
imul
repz
cmp
enter
lret
nop
mov
sbb
jbe
push
movsl
fnsave
filds
mov
int
sub
mov
inc
xchg
in
sbb
xor
mov
jp
fildl
test
dec
push
fldt
cmp
out
sub
aad
popf
dec
outsl
addr16
xor
pop
fisubrs
pop
or
and
mov
dec
call
mov
mov
or
mov
stos
test
push
fwait
push
dec
add
andb
cmpb
inc
adc
imul
in
das
mov
repz
xor
fisubrs
mov
loop
out
rorl
jmp
movsl
mov
lods
inc
rclb
repnz
mov
cmc
cmp
mov
adc
inc
repnz
add
xor
mov
roll
pop
gs
mov
scas
mov
ja
add
add
pop
sub
out
out
shr
add
mov
cmp
in
jb
push
in
mov
dec
cmp
ret
cmp
cmpsl
in
es
sbbb
out
or
sti
dec
imul
hlt
stc
shrl
mov
cltd
cmpsl
cmc
out
cld
and
add
aad
jp
pop
add
mov
clc
xchg
push
jae
add
lock
jae
pop
outsl
xor
adc
aaa
pop
lcall
hlt
and
lea
push
cmpsb
mov
xchg
stc
dec
dec
fs
cmp
outsl
xor
push
lods
jo
adc
sahf
cmp
push
pop
push
icebp
lahf
xchg
test
ds
xlat
mov
loope
cmpsb
popf
push
in
jmp
cmpsb
pushf
hlt
sub
fs
mov
icebp
loopne
mov
imul
rcrl
add
sub
nop
pop
pusha
ja
adc
sbb
scas
inc
lret
iret
out
in
jb
jne
xchg
add
sbb
bound
lods
lret
bound
sbb
loope
mov
mov
push
in
mov
jne
push
pop
mov
adc
add
sub
imull
out
jl
shr
sbb
cmp
xor
lcall
es
int3
mov
popf
push
movsl
in
aaa
negb
adc
lret
and
sbb
push
xor
int3
mov
and
xlat
scas
addr16
push
stos
lret
pop
in
leave
iret
popa
inc
js
int3
cli
xchg
repz
push
in
mov
push
mov
cld
jg,pn
jl
pushw
orl
jno
add
aaa
rcll
xchg
mov
xor
add
shr
pop
sub
and
aad
insb
fchs
shlb
lahf
jg
jnp,pt
dec
xor
jge
hlt
stos
pop
sub
or
mov
lret
insb
outsb
push
pop
addr16
pop
js
jecxz
in
mov
cmp
jmp
xor
daa
pop
inc
pop
sub
popf
push
mov
sub
or
adc
mov
lretw
js
cli
cmc
xor
dec
push
mov
cmp
sbb
push
sti
xchg
nop
out
xchg
fcomps
int
ljmp
lahf
sub
out
add
fiadds
out
push
xor
in
test
out
iret
mov
insl
push
outsb
push
lcall
ret
sub
aas
or
mov
outsl
cs
push
daa
insb
sahf
cmc
jl
insb
mov
scas
mov
mov
xlat
repz
sahf
ret
fsubl
mov
mov
mov
sbb
in
pop
mov
add
and
cmp
xorb
mov
addr16
xchg
sub
mov
call
enter
jbe
jge
mov
andb
jmp
imul
mov
xor
shlb
ds
icebp
jle
lock
pushf
inc
push
fistps
mov
outsl
jl
idivb
pop
jb
xor
movsl
dec
mov
lcall
sub
jp
out
mov
lods
inc
imulb
dec
sarl
enter
xor
shlb
lea
stos
sbb
ret
cmp
and
jge
inc
sub
lock
mov
mov
xorl
mov
xor
push
sub
test
in
pushf
mov
push
mov
iret
rdmsr
sub
add
and
xor
inc
in
aas
xlat
pop
lds
adc
mov
in
popa
movsb
aad
xor
scas
xchg
dec
adc
outsb
enter
out
in
cmp
jne
aam
inc
rorb
out
inc
jmp
mov
dec
inc
or
push
lock
jl
cmp
or
inc
sbb
loopne
iret
stc
dec
dec
fadds
incb
inc
push
push
fcoms
cmp
cmp
push
inc
lods
cmp
imul
scas
ja
mov
xchg
pop
push
push
jp
push
or
test
lcall
jl
adc
xor
mov
lods
push
sub
leave
mov
aaa
imul
out
in
stos
test
daa
push
mov
lahf
xchg
mov
fsubr
cmp
mov
and
push
add
adc
leave
cwtl
mov
das
stc
dec
lahf
scas
jp
adc
fs
dec
scas
lods
stos
stos
mov
in
pop
xlat
bound
and
andl
ret
sti
nop
mov
xor
xchg
mov
sbb
pop
cltd
cmp
and
add
dec
mov
inc
adc
lea
push
mov
aaa
sbb
xchg
stc
lock
lahf
jnp
dec
fwait
fwait
jbe
movsl
add
dec
dec
pusha
dec
sub
lcall
adc
lret
push
sti
test
nop
push
jge
enter
out
jle
sahf
cmp
jecxz
fidivrl
and
inc
dec
dec
dec
rol
loop
push
lock
inc
xor
inc
int3
ljmp
aas
stos
ret
push
and
sti
repz
clc
xchg
mov
xchg
push
push
cltd
faddl
nop
inc
mov
sub
aaa
add
leave
mov
jb
fwait
pop
nop
pop
xchg
or
shll
mov
lret
test
clc
mov
test
pop
aaa
adc
mov
jns
mov
mov
loopne
push
test
xchg
push
repz
js
lods
pop
cmp
scas
pop
ret
lret
fiaddl
sub
cmp
pop
outsl
aas
jg
pop
push
mov
add
lods
push
icebp
push
mov
xchg
cld
sbb
ficomps
sub
aad
fs
es
andb
inc
int3
lret
mov
subl
mov
pop
icebp
dec
xchg
or
imul
mov
xchg
aad
jmp
or
loop
push
cld
loop
iret
inc
push
inc
data16
data16
ret
and
dec
rcl
mov
xchg
rolb
xlat
dec
fs
dec
mov
sub
gs
loope
ret
lods
push
pop
dec
pushf
pop
hlt
lret
cmp
mov
clc
loopne
sub
cld
mov
fwait
mov
outsb
lcall
xor
popa
rorl
jb
mov
in
xor
xlat
adc
push
sub
mov
mov
aam
repnz
jmp
mov
out
loop
xor
adc
or
inc
in
xor
jmp
js
sub
sub
inc
in
stos
imul
sbb
mov
jle
les
inc
add
fs
addb
mov
aam
std
mov
repz
in
bound
mov
pop
mov
dec
mov
xchg
aaa
in
inc
stos
jp
add
inc
adc
imul
or
xchg
adc
push
jecxz
inc
icebp
out
jne
jbe
loop
js
stos
clc
jg
push
inc
shll
test
lds
xchg
add
xchg
inc
sarb
arpl
cmp
popa
mov
adc
inc
mov
jbe
je
mov
push
fimull
out
cmp
mov
fstps
xchg
inc
mov
stos
xor
and
sbb
repz
dec
mov
sarl
dec
push
xchg
mov
iret
pop
cld
sar
mov
sbb
call
stc
xor
jmp
mov
aaa
adc
sarb
lret
xchg
mov
dec
mov
rcrl
mov
jae
fstl
mov
mov
outsl
mov
dec
fistpl
in
mov
mov
cli
cltd
int
jge
ret
icebp
dec
mov
aaa
stos
sti
or
jne
scas
lret
repnz
adc
pmuludq
lock
sub
cmp
mov
in
dec
xchg
aad
jb
mov
adc
in
add
mov
jns
ds
inc
clc
outsl
lock
lahf
test
in
ds
in
cmpsl
and
scas
es
and
mov
dec
mov
push
or
es
imul
loope
xchg
fcmovb
lea
sti
sub
je
enter
imul
sub
mov
repz
or
xchg
stos
sbb
and
push
icebp
js
pushf
in
ret
mov
adc
push
xchg
mov
pop
subl
jle
sbb
loop
sbb
mov
call
cmp
mov
imul
xor
sub
cmpsb
stos
int
push
pop
jnp
add
orb
mov
cmp
xlat
adc
leave
xchg
js
jns
fsubr
sub
push
lods
call
imul
lds
mov
or
ljmp
test
cmp
pushf
loopne
dec
jge
mov
test
outsb
add
mov
and
dec
jmp
iret
popa
rolb
pop
lret
les
std
sub
push
test
lods
stc
in
xchg
fcoms
or
orl
dec
add
sub
or
lahf
xchg
lods
mov
mov
adc
mov
push
and
lar
sub
mov
mov
xor
push
sbb
cmp
and
xchg
mov
cmp
xchg
icebp
push
stos
jp
pop
sub
xor
aam
in
jns
std
xor
or
adc
cmpsb
sub
push
andb
xchg
sahf
popa
test
xor
sbb
bound
movsb
or
xchg
xor
sbb
jo
pop
mov
mov
idiv
adc
mov
adc
xchg
sbb
lods
add
dec
inc
and
sti
ds
pop
or
in
gs
and
dec
ljmp
mov
pop
enter
enter
icebp
out
clc
xor
jne
mov
dec
sbb
and
fildll
jl
jae
mov
enter
add
cld
cltd
leave
scas
fldenv
imul
xor
je
gs
dec
call
lods
daa
bound
icebp
out
or
sub
jl
jnp
xlat
jg
inc
lds
lods
cmp
or
push
vpshufd
sbb
adc
xlat
test
inc
sbb
pop
xor
push
jnp
movsb
mov
mov
rcrb
lcall
cltd
pop
stc
mov
mov
lods
xchg
in
xor
sarb
add
fiaddl
dec
pop
xchg
inc
add
jl
jne
push
orb
test
outsl
sbb
scas
cmp
repnz
push
sub
test
outsl
ss
mov
sub
push
ljmp
fwait
adc
mov
das
and
mov
jnp
pop
fwait
cld
or
add
mov
mov
xor
dec
sar
stos
xchg
adc
inc
jl
jmp
ss
nop
gs
test
or
rorb
icebp
movsb
xor
cld
int
xor
push
repnz
dec
mov
mov
xchg
lock
xor
lcall
pop
pop
pop
mov
adc
ret
cmp
sbb
ficompl
cmp
or
or
into
sahf
pop
dec
test
adc
pop
test
inc
sar
js
ja
jb
lahf
popa
subl
push
cwtl
shlb
mov
xchg
icebp
scas
leave
or
aad
jp
jg
rep
inc
mov
jb
fldenv
mov
lds
add
fisubrl
sti
sub
dec
push
sbb
mov
xor
adc
fidivs
in
int3
xor
lret
subl
sub
add
mov
and
inc
fadd
mov
hlt
imul
out
ja
clc
xchg
mov
mov
sub
iret
mov
and
jae
fsubr
xor
mov
cmp
clc
push
andb
enter
sbb
in
insb
sti
pop
les
je
adc
sbb
js
add
jg
outsl
out
push
sti
mov
loop
sub
pop
stos
mov
mov
leave
push
mov
xchg
sar
xchg
xchg
mov
pop
cmp
stos
push
fsubl
jo
aam
push
and
and
xchg
xor
inc
xlat
in
icebp
mov
dec
sbb
jecxz
and
xchg
loop
mov
adc
arpl
arpl
and
mov
sub
cmpb
push
fs
jb
cmpsb
sti
aad
pop
sti
push
shlb
pop
fldenv
fcompp
jg
mov
mov
mov
sbb
xor
icebp
jns
mov
pop
stos
mov
sbb
js
pop
cs
flds
inc
mov
mov
fwait
outsb
into
in
shll
xor
je
popa
dec
dec
stc
add
jp
je
mov
dec
pop
aad
and
lea
in
ret
test
jge
sbb
adc
pop
pop
in
cmp
outsb
inc
dec
adc
sub
aad
fwait
les
cmc
xlat
fld
jmp
lods
mov
jne
stos
out
jno
mov
push
jnp
lds
adc
std
mov
inc
movsl
sbb
mov
push
insl
sarl
test
sahf
mov
push
mov
cmc
xchg
test
decl
daa
sbb
or
lds
loop
clc
lods
mov
jl
push
xchg
mov
dec
scas
data16
or
adc
or
mov
aam
jle
mov
out
test
xor
icebp
pop
pusha
dec
pop
push
inc
cmpsb
fsubp
cmc
cli
fistps
inc
lods
cwtl
mov
inc
dec
jb
push
mov
shlb
cwtl
sub
or
jns
xchg
fnstenvs
cmpsb
mov
data16
mov
sub
push
repnz
test
pop
subb
mov
or
lahf
shrb
stc
push
sbb
pop
mulb
inc
lods
mov
or
or
movsb
fistl
ret
dec
or
push
push
std
enter
pop
ret
iret
jns
fwait
and
cmp
or
lret
cs
pop
loop
pushf
mov
roll
addr16
mov
dec
clc
call
ret
mov
leave
inc
lret
test
call
jle
shll
in
out
das
xor
clc
push
or
fmull
data16
popa
adc
icebp
outsb
popf
xor
fs
sbb
jo
jb
fidivrs
call
jg
jmp
fs
incl
cmp
shlb
sbb
pop
inc
rclb
mov
in
insl
mov
leave
mov
add
jns
fwait
lahf
add
dec
icebp
mov
pop
lods
jne
int3
mov
jno
ret
add
fistl
jge
rorb
fistl
into
cmpb
mov
shlb
mov
mov
sub
sub
ja
dec
cmp
xchg
xchg
popf
insb
dec
pop
push
dec
dec
or
jmp
sub
jl
sub
test
mov
sub
imul
int
mov
adc
jmp
sbb
sub
loopne
repz
cmp
mov
xchg
aas
pop
xchg
pop
out
cs
imull
xor
dec
jnp
ds
movsb
push
push
lret
mov
sahf
cltd
cmp
jl
cmpsl
cmpsb
addl
adc
jle
sbb
push
push
sbb
or
es
cmp
mull
cmp
or
lods
stc
sbb
mov
pop
sbb
lock
repz
xchg
enter
mov
inc
in
sbbl
jg
out
cmpsb
dec
ds
dec
bound
lock
es
fdivs
xchg
push
mov
insl
stos
sar
xchg
outsb
and
dec
dec
xor
jb
push
cli
stos
fwait
sub
sti
out
mov
sub
in
mov
lds
adc
in
enter
lahf
fnstenv
push
or
pop
mov
int
test
mov
and
inc
pop
sub
add
je
adc
push
pop
inc
adc
es
xchg
cmp
popf
gs
push
ds
push
xchg
in
insl
cmp
and
clc
and
lcall
mov
dec
xchg
inc
sbb
mov
xchg
fcomps
cmp
pop
xor
leave
xchg
or
lret
cmpsl
sbb
ficoml
xchg
in
sbb
mov
dec
in
jnp
pop
call
pop
mov
mov
cmpl
lahf
xchg
mov
inc
dec
sbbb
shl
cmpl
in
xchg
mov
imulb
jl
out
mov
mov
adc
or
or
jno
int
lock
pop
les
mov
mov
loope
stc
shll
test
in
outsl
lcall
sbb
in
fimuls
in
enter
mov
ret
jns
or
mov
pop
cltd
lcall
sub
enter
mov
nop
iret
xlat
lcall
stos
insb
dec
xor
in
xchg
add
jecxz
stos
mov
daa
arpl
mov
test
cmp
pop
add
roll
jl
out
repz
pop
sub
shll
mov
outsb
fimuls
push
loopne
fs
inc
adc
sbb
inc
loope
mov
dec
cmpsl
add
in
mov
arpl
jo
mov
sub
out
or
mov
scas
stc
inc
mov
fs
sub
xchg
gs
sub
stc
xor
clc
enter
xchg
xchg
mov
push
mov
mov
push
fistl
jbe
popa
pop
dec
and
fmull
lods
test
pop
or
ret
stc
sbb
mov
lret
mov
add
aaa
inc
int3
push
jne
repnz
call
pop
gs
xor
nop
enter
mov
jae
stos
insb
push
cmp
mov
inc
sub
sub
outsb
aas
push
aam
mov
push
mov
or
aad
daa
popf
das
jp
aas
pop
sbb
push
outsb
xchg
fs
lret
dec
out
sbb
jns
mov
add
fwait
dec
popa
nop
xor
jg
sbb
scas
cs
test
push
sbb
jmp
jns
pop
mov
cmp
push
cmp
sahf
jbe
in
inc
negl
data16
fildl
push
mov
xchg
ficoms
push
adc
xor
push
subl
dec
dec
jb
sub
popf
out
sbb
mov
scas
inc
mov
jae
pop
popf
or
and
xchg
rcl
loopne
fnstcw
out
dec
push
push
movsb
pop
rol
leave
test
add
push
addr16
cmp
nop
aas
shrb
jo
mov
loope
sbb
push
call
cmp
lds
dec
lret
push
pop
loopne
xchg
scas
pop
ret
mov
fs
lret
mov
push
repz
mov
int3
mov
cmp
jl
and
mov
jne
test
test
xor
outsl
jecxz
mov
int
test
jnp
cld
mov
push
sti
jge
cmp
mov
bound
cmp
fiadds
insb
fists
xor
js
mov
mov
lahf
scas
aas
adc
jmp
push
xchg
push
or
out
add
mov
lods
and
push
insb
lods
bound
out
mov
mov
mov
push
lods
pop
std
lret
cld
orl
lret
das
and
pop
mov
out
xor
push
mov
rclb
scas
cmp
pop
xor
fld
ja
hlt
out
xchg
sbb
mov
jno
int3
insb
pusha
jo
out
pop
sbb
les
pop
outsb
cmc
fimull
lcall
pusha
xor
imul
xor
ret
outsl
adc
insb
cli
ljmp
jl
sub
fsubrl
and
dec
je
mov
or
into
fs
rorb
daa
inc
pop
test
adc
hlt
dec
or
mov
pop
int3
bound
arpl
inc
mov
mov
xchg
mov
cmp
lea
mov
enter
xchg
push
sub
scas
rorb
mov
sub
ret
into
push
pusha
scas
fldenv
mov
popl
and
pop
xor
inc
mov
mov
dec
test
sbb
and
ss
aam
out
add
cmp
mov
pushf
test
xorl
and
inc
push
jbe
mov
mov
out
mov
pop
inc
test
hlt
cmpsb
es
jle
mov
xchg
cmp
sbb
cmpb
xchg
mul
pop
and
xchg
or
dec
or
inc
fldl
bound
aad
lcall
sbb
loope
lods
jecxz
insb
dec
jno
inc
fldpi
mov
daa
cmp
lea
clc
js
outsl
pop
sahf
ficomps
jg
lcall
out
ss
scas
fsubrl
dec
sbb
ret
add
outsl
dec
mov
icebp
mov
cltd
je
outsb
lahf
lock
sub
xor
push
xor
fcomps
push
dec
cmp
cmc
push
int
jl
mov
and
fsubl
mov
jge
nop
and
fidivl
inc
adc
xchg
mov
clc
adc
xor
test
iret
add
movsb
cmpsb
pop
mov
push
ficoml
psubq
les
testl
dec
addl
ss
dec
ljmp
push
push
ret
pop
pusha
mov
jge
mov
mov
and
jb
rcll
jmp
xor
mov
mov
mov
mov
sub
xchg
adc
adc
mov
adc
aas
es
jmp
fdivrp
rcl
inc
fistpll
add
jnp
mov
push
movsb
xor
fwait
xchg
enter
fdiv
lea
mov
jmp
mov
jg
inc
adcl
gs
adc
mov
adc
mov
mov
mov
mov
insl
sti
xor
in
push
xchg
inc
push
pop
loopne
popa
mov
push
mov
mov
push
mov
pop
ret
mov
fistps
pop
aad
mov
and
aad
add
subl
push
repz
shlb
xchg
mov
adc
pop
mov
xor
adc
sub
in
mov
push
pop
rcrb
nop
mov
hlt
push
and
inc
out
js
sub
jl
bnd
push
out
into
mov
popf
mov
data16
and
mov
sbb
mov
add
lods
inc
adc
adc
xchg
cmp
mov
cld
lods
pop
sbb
lea
jne
and
dec
imul
nop
jb
hlt
in
bound
cmp
rorl
dec
and
mulb
lds
lods
sub
inc
cmp
cld
mov
dec
push
repnz
xchg
inc
jae
inc
fdivr
xor
sbb
xchg
addr16
std
xchg
out
imul
test
mov
mov
pop
lods
dec
pop
into
leave
or
dec
and
insl
icebp
lahf
dec
mov
das
inc
aaa
push
ss
hlt
addr16
out
fimull
bound
shlb
sub
add
dec
fdivrs
ljmp
test
fidivs
fnstcw
jp
jecxz
loope
pop
into
xchg
adc
inc
add
faddl
lea
xlat
xor
cmc
pusha
test
xor
loop
push
sbb
xchg
jnp
in
in
scas
push
inc
lcall
xchg
sarb
sub
mov
repnz
les
pushf
mov
push
jge
sub
pop
stc
in
xchg
movsl
jle
imul
pop
jnp
gs
pusha
pushw
dec
xor
mov
add
ss
push
lret
xlat
lods
mov
push
lods
mov
cmp
push
shr
sbb
repnz
sbb
fdivrl
pop
xchg
popa
push
pop
xlat
aaa
sbb
push
xor
xchg
shr
jns
dec
fisttpll
sub
icebp
les
mov
jg
loope
insb
insb
or
mov
xor
xor
mov
movsb
cwtl
ja
imul
jl
test
xor
mov
adc
cmp
inc
in
jl
xchg
dec
sbb
sarb
popa
xor
aad
mov
dec
or
sbb
mov
and
icebp
mov
push
pop
or
dec
loop
dec
pop
filds
push
inc
push
pushf
pop
jns
pushf
outsl
stos
mov
sub
mov
adc
imul
lret
dec
lcall
jnp
addr16
mov
fwait
mov
int
cmp
inc
add
cmp
cmc
and
stos
sub
dec
xchg
xchg
subl
inc
add
arpl
jmp
adc
push
pushf
and
jg
lods
adc
mov
out
pusha
imul
int3
ret
pop
adc
into
fmulp
mov
fiaddl
xchg
sbb
test
outsl
scas
push
pop
cmpsl
cs
int
inc
xchg
cmp
test
pop
mov
inc
adc
lahf
mov
xchg
jmp
sub
test
cmp
out
sub
jecxz
ds
and
push
insb
rolb
xchg
sbb
xchg
ss
addl
call
dec
das
or
cmc
and
push
xor
mov
test
jecxz
in
sti
popa
xchg
xchg
lods
ljmp
jge
jns
and
lahf
repnz
lret
lods
out
cld
fnstsw
scas
pop
pusha
ret
dec
pop
or
jge
in
fildll
mov
filds
push
dec
jle
jb
mov
fiaddl
je
mov
adc
mov
mov
repnz
cmpsb
movsb
push
mov
lods
popa
lret
lret
sub
mov
jecxz
jg
icebp
jmp
in
push
loope
popa
cmpsl
mov
fsubp
sub
fiaddl
and
sbb
or
pop
inc
pop
stos
mov
cmp
jbe
mov
imul
rorl
fcoms
shrl
js
xor
fisubs
sti
std
js
xchg
xor
daa
xor
das
or
movb
ja
inc
pop
imul
cmp
aas
es
sbb
int3
in
inc
cmp
adc
aas
ds
mov
mov
aas
cmp
js
add
mov
pushf
dec
cmpsb
sub
mov
mov
and
pop
jb
sbb
popa
dec
pop
shl
adc
mov
imul
das
pop
xchg
xor
jge
addr16
dec
and
xor
in
mov
xor
sbb
cmp
sub
jp
icebp
test
fs
push
push
lret
mov
dec
and
js
sub
loop
pushf
push
pop
mov
insb
lods
fs
fs
add
and
les
or
test
xor
lods
and
repnz
js
cmpsb
pusha
mov
test
out
inc
dec
nop
cmp
xchg
dec
inc
mov
xchg
orb
jge
jnp
add
sbb
bnd
mov
sbb
and
pop
mov
testb
repnz
outsl
bound
xchg
inc
jp
jb
cltd
xchg
testl
mov
sbb
push
or
sub
in
cmpb
das
and
call
mov
leave
shlb
pop
jge
mov
xchg
pop
repnz
imul
movsb
imul
int
lds
sti
loope
mov
out
pop
stc
sbb
je
loop
fwait
mov
test
cmp
sub
daa
jecxz
and
sarb
and
dec
ret
scas
outsl
xor
fs
sbb
fidivrs
ljmp
sub
or
jnp
aad
dec
lods
sub
sbb
into
cli
lock
lret
lret
pop
or
data16
sti
test
popf
int3
bound
lds
mov
sahf
push
cmpl
mov
cmpsb
dec
mov
mov
mov
adc
jnp
pop
sbb
in
mov
daa
enter
jo
inc
mov
jb
add
sahf
add
sarb
xchg
push
and
push
aam
je
cltd
sub
sub
cltd
aam
cld
subb
mov
adc
push
gs
ret
sti
jno
in
icebp
add
mov
fs
js
jle
lods
and
mov
jmp
stos
pop
sub
test
mov
mov
nop
outsb
mov
sub
sarl
nop
inc
rcll
adc
pushf
mov
mov
push
nop
mov
add
inc
lods
lock
loope
pop
flds
shl
mov
mov
fbld
scas
jg
mov
xchg
adc
cltd
sidtl
loopne
mov
mov
or
mov
inc
fcompl
imulb
or
cmpb
hlt
cmp
add
xchg
out
in
movsl
add
lcall
and
aaa
mov
add
inc
into
cmp
test
lock
movsl
sbb
xlat
cmp
push
imulb
iret
daa
arpl
pop
push
xchg
cmpsl
sbb
pop
sti
loop
inc
and
lods
ds
test
sti
cwtl
daa
adc
loopne
mov
mov
jle
push
mov
mov
fs
add
cmp
or
sahf
fistl
scas
fcmovu
cmp
jne
pusha
imul
daa
pop
pusha
imul
cltd
imul
iret
cmp
cmc
pop
in
push
fisubl
xchg
mov
data16
aad
or
xor
sbb
cli
imul
dec
sub
and
push
or
inc
dec
xchg
scas
adc
inc
mov
inc
in
cwtl
jle
jbe
inc
xor
pusha
mov
push
ja
incl
pop
aad
mov
add
lock
out
loop
mov
pop
inc
xchg
ficompl
mov
mov
push
movhps
popf
mov
lret
scas
or
ffreep
gs
xor
xchg
sub
sub
xor
cmp
int3
xchg
out
imul
stos
push
pop
stc
jnp
loop
in
xor
test
xor
les
imul
pop
push
or
fldl
xor
ds
movsb
inc
in
xchg
ljmp
rclb
dec
sbb
inc
aad
mov
out
sub
inc
pop
cmp
mov
out
pop
sbb
sbb
in
rcrb
sub
inc
pushf
js
jmp
fldcw
enter
ret
inc
dec
repnz
lea
xor
mov
xchg
dec
inc
scas
jl
repnz
cmpsb
sbb
jnp
scas
mov
jbe
jecxz
pop
out
ljmp
sbb
int3
std
fsubrs
fistl
push
cli
mov
leave
jo
sub
lcall
rcrb
pusha
int3
xor
out
mov
jmp
ret
dec
in
mull
movsl
mov
stc
rsm
nop
cmc
cmpsb
mov
ds
cltd
sub
stc
lret
push
gs
xchg
loopne
out
loop
ljmp
das
sbb
in
data16
nop
xor
fsubp
adc
mov
scas
pop
xchg
push
jb
out
pop
mov
add
add
jb
movsb
scas
or
xchg
sahf
stos
jmp
inc
in
pop
adc
or
jge
add
sub
jmp
cmpsb
aam
sbb
loop
sbb
aam
push
lcall
xor
shlb
loopne
out
sub
push
cmp
cltd
arpl
dec
push
aaa
mov
jl
iret
pop
mov
int3
stos
xchg
lret
and
sub
xor
ds
jne
ds
dec
je
inc
imul
lods
outsl
int
ficompl
call
push
cmp
clc
retw
iret
aam
out
mov
jle
dec
cmpsl
jl
in
push
jmp
mov
lcall
adc
inc
call
pop
scas
mov
pop
jl
cmp
es
xchg
fldcw
fnstcw
cmpsb
push
sar
addb
jne
scas
test
push
aaa
and
ret
ss
les
mov
outsb
lds
xchg
aam
inc
out
test
movsb
sbb
in
mov
mov
mov
out
in
lods
daa
inc
mov
outsl
jb
xor
xchg
mov
loopne
xor
inc
mov
les
aas
xor
mov
xor
sbb
and
movsb
pop
mov
ficompl
movsl
fwait
push
mov
mov
shl
jecxz
ds
lahf
icebp
mov
enter
xlat
jle
mov
push
xor
add
add
jb
xchg
cmp
in
push
inc
shll
nop
and
cmp
call
in
xlat
aas
xchg
and
xchg
fisubs
testl
pop
pushl
fnstenv
mov
pop
leave
test
xchg
dec
not
pop
push
loop
sbb
push
outsl
stc
divl
inc
insb
fstps
sbb
int
jb
ds
ja
inc
xor
and
mov
cmp
sub
pop
inc
aam
stos
int3
xchg
sahf
xchg
mulb
bound
call
les
mov
sbb
stos
jno
rol
mov
shll
xor
mov
sub
inc
fs
inc
sub
xchg
jge
movsl
or
stc
out
popf
cltd
or
out
outsb
cmp
sub
lock
mov
mov
pushf
add
xchg
cli
mov
push
xchg
aam
adc
mov
inc
jl
pop
int
repnz
add
fistl
and
push
test
or
push
xchg
add
jne
and
sub
pop
mov
cmp
into
mov
mov
out
mov
mov
hlt
mov
dec
jecxz
arpl
popf
loop
aaa
mov
sbb
or
jne
jge
aam
cmpsb
les
xor
out
stos
in
push
bound
xor
jl
inc
jl
out
push
insb
fadds
push
xchg
mov
pop
jo
sti
inc
fnstcw
push
iret
es
inc
push
cmp
push
add
lcall
dec
jno
or
dec
cmpsl
pop
ret
jle,pt
inc
ds
fs
imul
adc
cmpsb
xor
xor
subl
mov
push
sti
mov
mov
xchg
inc
in
je
dec
scas
pop
shl
movhps
inc
shlb
popa
daa
jnp
int
cmp
neg
shr
ss
mov
pop
mov
pop
aam
sub
dec
add
fmul
or
jne
cmpsl
ficomps
and
cmp
xor
xor
int3
and
repnz
ds
icebp
adc
mov
iret
cmp
jle
jnp
insb
pop
sbb
dec
xor
sbbb
adc
ret
repz
mov
addr16
mov
gs
mov
add
xchg
loope
mov
jmp
mov
dec
cmp
mov
ret
out
push
xor
inc
rcrb
outsb
push
rcrl
mov
int3
push
mov
lods
jge
repz
daa
lods
inc
orl
addb
jbe
adc
orb
test
test
xchg
cmp
push
sbb
stos
or
jmp
dec
inc
loopne
push
lret
add
sub
sub
nop
lods
dec
inc
cld
sahf
icebp
gs
flds
hlt
adc
mov
inc
mov
loop
pop
xchg
mov
add
pop
imul
mov
mov
xor
and
cld
insb
mov
addr16
aad
mov
xchg
pop
sbbl
subl
push
jb
ds
repz
aam
mov
jp
cmp
outsl
lds
mov
insb
iret
dec
inc
jnp
and
out
pop
sbb
push
xchg
and
jmp
in
dec
jl
leave
loope
das
jnp
popf
leave
cmp
pusha
mov
rol
xchg
lds
cmp
fcompl
cmc
pop
pop
scas
mov
cld
daa
call
and
and
add
cmp
jns
ds
loope
cmp
aaa
scas
pop
sub
shrl
mov
push
jmp
int
fisubl
idiv
inc
xchg
pop
lea
jmp
push
in
ds
pop
and
jae
sub
sub
jne
jae
mov
mov
stos
in
mov
cs
inc
inc
gs
bound
xor
sbb
pop
cmpl
xor
sub
sbb
ljmp
test
xchg
jle
nop
mov
scas
ds
sub
lods
inc
push
pop
pop
sub
out
mov
fsubp
out
fstps
sahf
shll
xchg
cmpsl
xor
scas
pop
in
scas
push
movsb
mov
cmp
sub
shl
mov
test
repz
cwtl
push
cld
xchg
adc
cmc
rclb
popf
ljmp
xor
dec
test
pop
rolb
push
outsl
stos
sub
addr16
or
das
pop
insb
pop
inc
xchg
xchg
insb
mov
clc
popf
shlb
out
fcompl
push
stos
push
stos
lahf
mov
mov
push
lods
fistpll
mov
pop
mov
cmp
fbstp
mov
jl
adc
lret
dec
push
icebp
jno
pop
adc
jno
or
sub
add
in
dec
in
ret
les
shll
dec
push
rcll
push
and
jo
mov
inc
xor
xchg
jge
pop
addr16
lret
jp
aaa
jle
ret
arpl
mov
adcl
cmc
cmp
ror
sbb
insb
fstps
cmp
gs
aas
jp
repz
pop
add
xchg
call
push
mov
fdivl
fwait
call
add
ja
loopne
pop
mov
mov
in
pop
cwtl
enter
lret
jge
xchg
pop
call
add
sbb
dec
pop
aaa
or
dec
sub
push
and
add
in
icebp
mov
popf
lret
cmc
int
test
dec
adc
outsl
enter
lret
sub
adc
adc
cmp
push
aaa
lods
repz
sar
cwtl
xchg
mov
imul
lret
dec
ljmp
aaa
popf
cmpsl
push
call
lock
dec
or
mov
push
out
pop
mov
loopne
vmovdqa
call
je
cli
cmp
mov
mov
adc
jb
cmp
push
xchg
push
in
sub
inc
jecxz
pop
mov
in
daa
jecxz
push
jecxz
mov
sub
fs
pop
or
mov
into
pop
in
in
cmc
repnz
jle
and
jge
and
leave
xchg
dec
sbb
adc
mov
push
fs
cltd
mov
out
cs
xchg
and
jns
push
movsl
xlat
xlat
loope
jmp
xchg
dec
ja
sbbb
subb
nop
inc
pop
and
daa
hlt
pop
jae
adc
sbb
fistl
movsl
pop
cli
or
mov
sahf
jnp
mov
scas
dec
jnp
and
inc
dec
mov
mov
sbb
mov
mov
fmuls
aaa
mov
fisubs
lods
repnz
jl
jae
jns
sbb
in
orb
xchg
ret
stos
cmp
push
push
jg
and
xchg
push
mov
bnd
sbb
lds
sarl
or
xor
nop
fdivs
push
xor
pop
shlw
adc
mov
sub
mov
sbb
mov
imul
lods
out
dec
mov
jecxz
out
lret
test
std
jge
jge
cmpsb
jecxz
out
movsl
add
mov
add
addb
lcall
insl
andb
mov
pop
aad
dec
sbb
pop
mov
cld
sub
aas
xchg
dec
aas
pop
fwait
imul
pop
jnp,pn
test
or
nop
notb
int
xor
jb
arpl
mov
repnz
ficompl
sub
gs
lahf
loopne
mov
lret
pop
jne
bound
push
mov
or
lock
xchg
cmpsb
clc
lcall
adc
lods
push
das
outsl
sbb
mov
mov
int3
inc
pop
popa
jne
and
xor
lcall
aad
in
push
cmp
adc
insb
movsl
pop
std
add
and
add
or
mov
adcl
jb
out
jae
aas
mov
insb
ret
lods
scas
adc
leave
jns
push
sbb
add
mov
leave
ds
ficoml
lods
es
sub
and
imul
repz
in
notl
mov
loope
inc
out
in
out
and
int
addr16
fst
popf
jae
insl
mov
xor
arpl
aas
push
jge
cmpsl
and
test
nop
adc
outsl
or
jns
push
mov
mov
cmp
mov
dec
lahf
aas
mov
sahf
xchg
icebp
test
add
dec
andb
mov
aaa
lret
sub
imul
inc
and
add
es
jb
push
sbb
fcoms
cmpsb
inc
mov
das
xor
sbb
cli
dec
jmp
popa
adcl
and
mov
xor
int
and
sbb
cmp
fisttps
mov
movzwl
pushf
xchg
mov
jns
in
mov
push
xlat
in
cmp
sub
nop
jp
and
test
out
adc
push
iret
insb
fistps
sbb
sub
mov
das
mov
insl
inc
add
xchg
lret
adc
mov
pop
or
cmp
and
std
addr16
aad
fistpll
sbb
xchg
int3
scas
ja
imul
xchg
inc
fistpl
cld
mov
add
rcrl
jp
push
push
jmp
dec
cmp
or
xchg
aam
mov
dec
cmp
gs
add
dec
pop
ja
andl
je
dec
or
jmp
dec
je
mov
xchg
dec
mov
sbb
int3
cld
shlb
push
jmp
inc
push
sub
or
lret
sarb
push
mov
imul
jbe
in
test
leave
loop
int
mov
out
fnsave
push
mov
daa
leave
mov
jae
test
sbb
push
fucomi
rcl
xchg
jle
cs
les
inc
call
cmp
repnz
push
ret
xchg
or
js
add
icebp
repnz
add
es
xchg
lret
dec
pop
call
mov
out
dec
mov
ds
iret
pop
mov
mov
jmp
mov
and
test
inc
push
pop
les
push
jg
lock
mov
das
lahf
pop
and
jo
inc
pushf
jle
aas
fdivl
fcomps
adc
fisubrs
fnsave
and
scas
mov
pusha
lds
aam
cmc
push
cmp
ret
sti
lods
sub
or
push
popf
test
adc
pop
cmp
xor
push
ljmp
xchg
adc
popa
pop
lea
xchg
scas
push
add
repz
mov
add
pop
mov
hlt
mov
iret
stos
ud1
nop
cmpsb
xchg
push
xchg
or
aam
pop
xor
cmpsl
fldl
xchg
add
leave
push
lcall
cmpb
cmpsl
inc
mov
test
aas
pop
or
mov
test
dec
cmc
bsr
cmc
add
js
dec
movsb
sub
mov
ljmp
mov
sbb
popf
or
dec
and
fld
repnz
aad
pop
rcll
dec
push
mov
ficoms
pop
adc
aam
icebp
pop
sub
gs
add
ljmp
loop
lahf
jo
fstp
or
mov
int
or
dec
repnz
in
test
sub
dec
pop
stos
cltd
fincstp
stos
in
pop
xchg
jae
add
test
mov
push
les
bound
adc
ror
loope
sub
mov
testb
mov
jl
xor
cmp
inc
xchg
imul
xchg
mov
jno
push
push
add
shll
ljmp
xchg
mov
jg
and
xor
loopne
xlat
xchg
or
popf
out
cmp
fistps
imull
pop
cs
lret
adc
hlt
sbb
sbb
mov
lods
mov
pop
fcom
adc
mov
xchg
fsts
out
or
shrl
stc
mov
xlat
daa
sub
mov
subb
or
dec
mov
lods
mov
inc
xor
jge
sub
in
inc
scas
es
jne
dec
repz
into
inc
xor
cmp
imul
or
xchg
pushf
out
js
push
insl
ret
sub
xchg
loop
sahf
ja,pn
out
fildl
mov
mov
pop
add
lds
add
xor
xor
push
mov
add
xchg
add
sub
dec
push
xchg
dec
fadd
xchg
in
mov
push
sbb
cmp
dec
js
sbb
out
lcall
mov
push
push
mov
arpl
push
aam
sub
movsb
mov
adc
or
mov
cmpsb
cltd
push
test
cs
les
mov
mov
sbb
lea
cld
push
in
dec
jge
mov
xchg
jbe
mov
iret
lea
adc
cmp
stos
jno
xchg
xchg
and
dec
and
repnz
adcb
mov
push
notl
outsb
cmpsb
adc
and
mov
ja
mov
mov
jecxz
cmp
hlt
mov
jae
jge
in
lea
std
in
pop
pop
adc
scas
scas
xor
cld
sub
push
add
push
mov
fiaddl
sbb
stos
lret
mulb
cld
cmp
stos
addb
fidivrl
int
sarl
out
push
adc
push
in
mov
stos
add
das
test
rolb
enter
andl
leave
cmc
loop
xchg
cmp
stos
loop
jg
fdivrs
dec
dec
xchg
xor
ja
stos
scas
rcrl
mov
xchg
inc
gs
imul
pop
imul
sbb
pop
pop
cli
fsubl
scas
imul
mov
repnz
mov
ds
out
push
addr16
jp
fs
pop
mov
sbbl
icebp
mov
inc
aas
xchg
cmp
enter
push
push
push
and
das
pop
or
push
sub
ljmp
mov
ss
dec
push
data16
cmpsl
fsubs
xor
in
pop
cs
xor
test
loopne
mov
mov
nop
sbb
jp
inc
inc
mov
movsb
mov
sub
add
xlat
dec
cmpsl
std
dec
xchg
ja
loopne
jo
shll
or
lret
shrl
mov
add
xchg
jne
shlb
cmc
test
nop
nop
lahf
add
pop
rcrb
adc
xor
jecxz
fiaddl
mov
leave
fimuls
xchg
mov
sti
jmp
idivb
sbb
push
out
pop
ret
sub
pop
popf
cmc
cs
or
lret
mov
pushf
movsl
test
mov
pop
in
cwtl
ss
pop
call
mov
rcll
ljmp
mov
xchg
mov
lods
xchg
pop
sbb
add
xchg
scas
int
jg
pop
xor
sub
inc
loope
fimull
mov
push
call
bnd
mov
popa
mov
lret
push
adc
mov
mov
mov
addr16
sbb
inc
dec
and
out
cmc
pop
sbb
and
adc
fistpl
jbe
repnz
xor
orb
inc
xor
lea
sbb
std
mov
cli
jle
stos
dec
and
ret
xchg
mov
in
mov
int
push
inc
xlat
sbb
mov
sbb
mov
jae
aaa
and
pop
xchg
outsb
mov
test
fistl
add
push
scas
outsl
jg,pn
push
mov
add
scas
or
or
adc
pop
in
stos
nop
dec
pushf
mov
sub
push
adc
aas
scas
fdivr
scas
test
sbbl
sub
stos
or
arpl
repz
dec
in
out
or
xchg
jle
dec
fsubl
mov
jno
negb
lahf
lret
cltd
clc
xor
pop
xchg
dec
xlat
or
hlt
inc
and
and
sbb
inc
adcl
push
popa
cmp
aaa
js
jp
inc
fs
dec
xchg
sub
cs
idivl
xchg
pusha
fwait
cmp
mov
cmp
push
ds
int3
cmc
fs
les
add
pop
mov
add
sub
cwtl
fs
sub
mov
push
push
dec
icebp
out
les
ja
call
shrl
xchg
jns
cmpsl
dec
mov
fbld
aas
testl
scas
mov
xchg
pusha
xchg
je
cmp
rcl
and
push
xor
fwait
or
iret
inc
mov
dec
jg
dec
insb
jge
out
or
mov
xchg
adc
outsl
jmp
nop
std
popl
push
mov
mov
jnp
movsb
outsl
jmp
jecxz
jge
aas
scas
xchg
lods
pop
sar
cmpl
jbe
gs
jmp
mov
add
dec
and
in
cmp
xchg
lods
out
into
rol
in
xchg
and
cmp
adc
jo
sarb
push
push
rorl
jg
lcall
xchg
outsl
jbe
fs
cmp
test
xorl
mov
out
in
lods
inc
or
sbb
push
sbb
jmp
mov
clc
rclb
inc
sahf
sub
sbb
cli
loop
sbb
pop
adc
mov
or
xor
or
popf
cmc
mov
sarl
mov
stc
sti
aam
sub
xchg
xchg
add
sub
lods
push
jge
jle
dec
leave
loope
inc
dec
add
into
xor
std
xor
sti
and
mov
adc
loope
iret
mov
sbb
inc
mov
lea
kmovb
push
xor
sar
jp
sub
sub
jns
or
mov
fwait
into
push
into
and
jbe
add
push
mov
inc
jmp
xchg
cs
loop
mov
scas
icebp
into
mov
leave
test
push
or
pop
jge
negb
test
cmp
out
cmp
xor
test
mov
pop
outsl
pop
iret
pop
loopne
dec
cmc
xchg
ud2
sbb
adc
mov
outsl
and
cmp
push
cmovbe
and
lods
pop
arpl
adc
lcall
xchg
jle
fsubp
dec
sti
dec
js
icebp
pop
in
out
cmp
je
push
imul
adc
and
sub
mov
cs
fwait
jno
or
xchg
pop
jl
xor
xlat
sub
adc
lock
sbb
and
or
xchg
jecxz
int
sub
in
insl
pop
sbb
mov
insl
pusha
sarb
mov
mov
movsb
movsl
lods
clc
xchg
xchg
stc
adc
dec
pop
or
jbe
mov
mov
cmpsb
imul
and
push
pop
lock
dec
bound
cmp
mov
fldcw
mov
out
cmp
dec
sbb
jg
int3
cmp
push
jne
js
sbb
insb
mov
sti
pop
push
movsb
pop
mov
out
fmull
jp
lahf
test
adc
jecxz
sub
inc
test
inc
lods
insl
not
push
push
shrl
mov
jecxz
and
decw
into
mov
repz
cmpsl
sbb
mov
icebp
fmul
js
dec
mov
fwait
mov
push
cs
js
outsb
sbb
push
or
cld
lcall
jnp
sbb
jbe
mov
add
jecxz
mov
scas
mov
mov
pop
dec
cmpsb
mov
lods
mov
mov
test
sub
ds
pop
in
push
mulb
int
cli
loop,pt
aad
cmp
addr16
xchg
lret
adc
icebp
add
add
loopne
inc
push
arpl
pop
stos
sahf
rcll
pop
jnp
sub
rcrl
ret
add
mov
pop
icebp
mov
aas
sti
stos
xor
cmpsb
lret
sarb
pop
pushf
pop
arpl
mov
cmp
pop
insl
es
addr16
xor
dec
ja
test
or
fcomp
scas
data16
xchg
pop
out
ljmp
push
mov
push
push
xchg
jb
int
movsb
and
fwait
ljmp
adc
cmc
aaa
sbb
sbb
inc
jp
sahf
jnp
flds
inc
and
aaa
gs
lret
pop
in
stc
mov
fistpll
or
movlhps
inc
xchg
or
lea
ljmp
inc
cmpsb
repnz
mov
gs
lahf
cmpsb
pop
jecxz
sub
nop
mov
inc
shl
test
mov
mov
mov
mov
subb
inc
inc
jl
push
mov
insb
enter
pusha
add
pushf
cmp
mov
or
popf
insl
fwait
mov
and
sbb
xor
xchg
rorb
inc
insb
push
sar
mov
mov
loop
es
pop
xor
aas
inc
or
sub
les
and
cld
add
jle
test
pop
xor
mov
push
nop
dec
dec
xlat
add
sbb
outsb
ds
xchg
mov
ljmp
es
mov
out
mov
push
push
inc
ljmp
add
mov
mulb
sti
es
outsb
cmp
int
cltd
cmp
push
and
mov
cmpsb
xchg
mov
inc
and
inc
test
fidivrl
cmpsl
mov
enter
push
ljmp
xor
pop
xchg
inc
pop
idivb
pop
inc
test
lea
mov
rolb
dec
or
jbe
nop
sti
jne
adc
fstpl
pop
push
and
add
push
or
jp
and
data16
in
fisubs
cmp
dec
and
cmp
pop
loop
std
dec
sub
or
xchg
iret
inc
fmulp
inc
mov
divb
aas
inc
lret
in
ret
mov
xchg
jmp
in
in
andb
adc
mov
fstpl
dec
imul
pop
arpl
inc
lods
inc
inc
jp
pop
inc
or
out
outsl
es
jle
jmp
ja
sbb
push
adc
enter
stos
pop
xor
loopne
pop
inc
scas
jne
lock
aam
getsec
inc
incl
shrb
sbb
cmp
xchg
mov
jmp
imul
fstpt
mov
adc
cli
xchg
xor
or
stc
or
cmpsl
mov
pop
sbb
outsl
inc
push
lds
mov
mov
loop
or
adc
sbbb
hlt
xchg
insl
in
test
xlat
loop
rolb
push
jno
mov
bnd
popf
push
pop
add
or
and
sub
in
adc
dec
adc
dec
pop
lret
cwtl
psubw
jecxz
mov
pop
int3
iret
mov
push
pop
stos
fadds
outsl
gs
pop
sub
xchg
jl
dec
push
sub
xchg
shrb
dec
push
dec
mov
stc
xchg
imull
dec
jo
fwait
inc
icebp
enter
mov
push
lods
or
jae
pop
adc
mov
sbb
gs
mov
test
or
mov
popf
add
push
and
imull
xlat
test
add
or
mov
sub
pop
push
subb
mov
ds
mov
outsl
lea
popa
imul
test
mov
xchg
loop
and
jl
mov
out
adc
mov
cltd
shl
cmp
outsb
xchg
je
clc
mov
fs
adc
mov
test
imul
lahf
fucomi
lret
shl
mov
xchg
pop
imul
xchg
bound
stos
lock
data16
xor
into
push
adc
jge
push
rcll
std
or
ret
decl
aaa
cmp
cmp
insb
fwait
btc
int3
mov
cmpl
out
orl
lret
test
mov
popa
inc
pop
cmpsl
jo
ss
mov
jno
testl
dec
sbb
inc
jnp
dec
jnp
xor
mov
adc
cmp
cmp
clc
push
ds
and
sahf
dec
xor
fsub
jmp
stos
mov
xchg
fsubr
ror
test
or
sti
das
or
or
out
cli
pusha
mulb
mov
push
nop
jecxz
in
shl
pushf
mov
mov
xchg
jbe
cltd
adc
lds
mull
mov
rcr
sti
btc
pusha
out
xor
pop
sbb
push
ret
jecxz
xlat
mov
scas
mov
inc
dec
aaa
out
popa
call
mov
out
jns
lock
cmpsl
lahf
push
popf
sbbb
repz
dec
cli
mov
ret
stos
adc
cmp
xchg
ret
retw
dec
popf
std
stos
mov
or
dec
xor
add
test
cmp
xchg
sbb
mov
addr16
cmp
insb
xor
push
ja
test
in
sub
aad
sarb
jge
loope
pop
mov
or
lods
mov
and
bound
sar
mov
cmpl
and
adc
loopne
popf
mov
or
scas
and
inc
mov
xchg
call
mov
insl
adcl
mull
imulb
jno
xchg
ret
add
adc
aas
fwait
jbe
jge
jno
xchg
subb
sti
cld
fs
adc
xchg
sarl
das
and
iret
dec
pop
popa
addr16
in
call
pop
lret
mov
cs
cmpb
popf
push
jno
hlt
lock
aad
sub
scas
aad
push
sub
push
xor
dec
push
leave
movsb
inc
mov
mov
fdivrl
mov
xlat
sbb
sub
dec
jl
sub
nop
into
mov
xlat
xchg
adc
or
jge
lret
adc
fldl
call
mov
rcrl
or
loop
mov
rcl
orl
lods
lock
add
sbb
daa
mov
cmc
bound
or
and
out
push
popf
jo
xlat
jbe
dec
les
pslld
dec
push
push
add
cmp
out
out
adc
mov
iret
xor
and
push
mov
ja
out
xor
mov
mov
stc
and
jo
insb
cmc
fmul
adc
mov
fsts
mov
xor
add
fdivrs
push
call
mov
mov
aam
lret
pop
test
insl
imull
or
adc
cli
addl
xchg
repnz
cmp
or
jle
inc
loope
cli
pusha
pop
out
sbb
rolb
dec
sbb
or
insl
mov
lds
and
inc
mov
jne
jg
pop
movsl
push
insl
dec
ret
push
aad
mov
or
pop
xchg
stc
jmp
subl
mov
inc
xchg
or
cmp
daa
xchg
dec
sbb
fcmovnu
jmp
fimuls
stc
pop
cmp
movsb
sarl
fimull
loop
les
hlt
into
hlt
sub
bound
xor
push
xor
stos
loop
pop
push
int3
in
inc
jmp
pop
test
in
leave
ss
or
call
lods
sub
xor
ljmp
sahf
aaa
dec
loopne
jg
mov
inc
int
shlb
mov
test
sbbl
jle
inc
into
ja
push
icebp
mov
mov
mov
icebp
test
mov
loope
cmp
jno
add
sub
lods
mov
push
mov
sbb
cwtl
adc
ljmp
push
and
nop
cmp
jl
pop
and
jne
andl
in
jb
les
dec
mov
inc
push
test
mov
xor
jmp
je
xchg
push
ret
push
cmp
mov
js
es
mov
dec
jns
sub
jo
sub
add
push
push
fwait
out
mov
insb
daa
jb
loop
sbb
cmp
shlb
adc
movsb
adc
sahf
xchg
insb
subl
xchg
lds
jecxz
negb
shl
xchg
call
cmpsl
pop
bnd
ret
cs
xchg
cwtl
mov
lds
cmp
xor
hlt
jp
adc
in
jno
enter
dec
std
pop
fisttps
repz
fs
out
lods
push
ljmp
push
aam
push
fsts
jle
pop
add
test
std
jne
mov
sbb
inc
outsl
out
jno
pop
sbb
data16
ds
inc
sub
dec
xchg
ret
jmp
xor
push
leave
add
xchg
test
push
mov
inc
aaa
loope
pop
bound
ss
fisubl
std
adc
or
xchg
gs
cmpsb
repnz
fnstsw
out
loopne
fstps
xchg
jg
ss
jne
ss
jae
adc
aas
shll
jp
test
std
hlt
cwtl
dec
insb
aad
test
iret
push
arpl
es
lock
lds
push
pop
or
jb
pop
and
jp
and
sti
mov
fimull
mov
xchg
aad
jae
sbb
addr16
daa
push
adc
jle
fs
dec
scas
or
add
out
mov
xor
cmp
ret
aam
scas
sub
or
ljmp
sbb
rclb
pop
or
jmp
dec
int
repz
ja
mov
sub
xchg
icebp
and
data16
sub
sahf
mov
adc
xchg
xor
fildll
xchg
mov
sarb
mov
xchg
movsl
repz
dec
cs
fildll
mov
pop
cmc
enter
fdivl
popf
xlat
or
inc
lods
stos
dec
mov
dec
lahf
pop
stos
and
stos
fiaddl
jge
xorb
dec
adc
adcl
mov
xchg
popf
fsubrs
pusha
frstor
enter
cmp
pop
fisubrs
sbb
mov
dec
adc
ds
mov
loope,pt
pop
aas
dec
sub
push
cmp
jg
adc
sarb
push
cmp
outsb
out
repz
ja
inc
push
inc
leave
and
cmp
bnd
cwtl
cmp
add
adcb
or
pushf
push
outsb
or
mov
and
mov
jmp
call
lret
fimuls
enter
out
in
push
adc
mov
push
pop
daa
jge
sub
int
clc
repnz
in
insb
sbb
mov
int
cmp
xchg
push
sub
xchg
shlb
rcll
sub
mov
insl
stos
inc
inc
push
popf
adc
and
bound
nop
aad
mov
icebp
xor
mov
das
add
mov
mov
add
cltd
mov
pop
sub
test
ds
sub
sub
pushf
scas
repz
sbb
incl
lahf
push
push
movl
inc
mov
push
mov
pop
pop
aam
jae
cmp
das
mov
mov
outsl
inc
pop
stos
xor
arpl
adc
mov
iret
insb
xor
xor
mov
xor
xor
and
fucomp
or
xchg
arpl
lret
or
xchg
push
dec
scas
adc
ficoml
loop
test
cmp
dec
push
cmc
jg
dec
mov
lods
jge
add
iret
and
rcll
rorl
sub
jns
cs
in
test
push
push
xchg
cmpb
mov
xchg
testl
sbb
dec
cmpsb
and
ss
daa
sar
sub
lret
sub
popf
popa
xchg
sahf
xchg
ja
stc
and
ljmp
add
push
xchg
push
push
sub
pop
insl
cs
xchg
sbb
dec
rorb
pushl
loope
lahf
push
ja
sbb
shrl
cmp
sbb
sbb
xchg
daa
sbb
aam
jns
shlb
lcall
jle
cltd
scas
push
aas
insb
xchg
sbb
lds
mov
movsb
shl
push
dec
inc
scas
incl
dec
in
xchg
and
jbe
icebp
loop
adc
push
pop
jle
in
fisubrl
popf
sub
gs
aam
std
sahf
arpl
xor
inc
xor
out
in
dec
jne
jl
rorl
mov
jo
xor
arpl
sbb
push
or
mov
ret
stos
jecxz
sahf
inc
sarl
cmp
les
mov
xor
popa
lea
sbb
rolb
hlt
sbb
ret
shll
cmp
pop
fs
mov
inc
mov
sbb
push
mov
lret
mov
in
cld
xor
orb
sub
sbbl
stc
mov
pop
int3
mov
rcll
cmp
popf
clc
test
mov
jge
mov
int
pop
pushf
adc
xchg
dec
dec
lahf
scas
or
push
arpl
mov
adc
mov
mov
and
jns
push
xchg
jo
push
stos
mov
jmp
movsb
loopne
cli
pop
sahf
ljmp
xchg
in
out
dec
repz
pusha
jno
lea
push
jle
push
daa
pushf
sub
ljmp
dec
jo
das
pop
shrb
stos
cmp
jl
sahf
ds
outsl
jno
and
xor
dec
pop
cli
xchg
dec
ret
stc
repnz
pop
repnz
push
testb
xor
insl
jle
mov
insb
sahf
or
sub
out
jbe
adc
mov
int
xlat
cmp
jmp
arpl
fnstenv
xor
mov
jmp
push
or
loope,pn
cmp
add
dec
aas
xchg
push
subl
data16
fsubrl
inc
push
gs
push
adc
mov
mov
out
test
subl
sbb
pop
jo
insl
shll
in
idivb
and
cld
dec
jle
adc
enter
push
mov
leave
cwtl
add
or
idivl
icebp
sub
push
fsubrl
sbb
pusha
mov
mov
sub
dec
and
mov
xchg
pop
add
shll
fiadds
sub
mov
sarb
dec
xor
pushw
ds
subb
orb
clc
jnp
movsl
test
pop
cs
test
sarl
xor
xchg
negl
js
xchg
inc
cs
add
push
cltd
mov
mov
mov
pop
sub
int3
rdmsr
popa
loopne
les
mov
outsb
lea
sbb
fdivrp
dec
pop
or
rclb
popf
cs
mov
ret
sub
sub
push
mov
pop
pop
xchg
imul
fimull
sahf
adc
out
pop
in
icebp
mov
scas
cld
dec
daa
pusha
push
rclb
add
aam
dec
push
gs
rclb
jne
or
pop
adc
or
dec
popf
pushf
push
sub
bswap
jg
aaa
loope
leave
fwait
cmp
insb
dec
arpl
sub
dec
sub
jle
cmc
out
add
dec
adc
xchg
and
test
mov
pop
sub
inc
push
popa
xchg
data16
test
lods
mov
mov
sub
in
pop
inc
xor
insb
rcrl
mov
and
pushf
mov
cmp
dec
mov
dec
ds
movsb
pop
loop
sub
cli
scas
fldl
iret
mov
fnstcw
dec
cmp
push
jnp
cmp
sub
fists
cmp
mov
xchg
shl
pop
mov
call
ja
je
mov
aas
inc
sub
xchg
insb
jmp
into
movsl
push
int
mov
push
cmp
pop
jns
jo
les
aas
jmp
mov
xor
dec
lock
inc
leave
pusha
mov
jne
das
lods
adc
fcmovnu
cwtl
push
mov
movsl
add
push
fdivrl
lret
rcrl
roll
data16
mov
mov
outsl
cld
jb
stc
incl
adc
xor
dec
cld
mov
jg
xor
das
adc
add
outsl
mov
add
lock
test
mov
inc
dec
dec
inc
test
dec
fisubl
idiv
xchg
sahf
mov
sahf
sbb
add
jnp
pop
shll
orb
push
xor
xor
mov
mull
icebp
pop
mov
outsl
sahf
leave
xchg
call
jb
loop
sub
sarl
pop
or
add
bnd
xor
push
call
call
lcall
cs
xor
lock
cltd
out
mov
xchg
test
cmp
mov
xchg
jmp
out
pop
cltd
loopne
cld
movb
adc
int3
shlb
pop
test
sbbb
pop
rcr
data16
mov
das
sbb
xchg
sbb
sub
push
jns
sti
xor
xchg
scas
jno
mov
icebp
pmaxsw
je
sub
adc
nop
imul
rcl
and
fisttpl
jle
shl
mov
in
and
and
popf
pop
nop
cmp
adc
movsb
inc
scas
enter
lea
mov
pop
push
lock
out
sarl
hlt
xor
nop
cmp
jge
fbld
lret
jecxz
sub
pushf
int3
mov
loope
insl
xchg
sarl
loop
cmc
pop
jecxz
add
das
test
xor
jmp
mov
dec
dec
into
bound
cli
mov
lret
push
xadd
clc
jle
add
sti
pushf
push
cs
fisubrs
popf
gs
lcall
jnp
fcompl
pop
or
push
jo
jmp
rcl
push
push
test
movsb
jne
rcr
mov
hlt
into
outsl
xor
mov
in
xor
sub
leave
outsl
adc
inc
pop
mov
daa
testb
add
mov
sbb
imul
sbb
jnp
push
mov
and
loopne
addr16
pop
pop
jg
mov
add
ret
lret
mov
popf
mov
scas
xor
mov
push
push
into
sub
test
ljmp
push
repnz
mov
inc
cmp
push
cmp
lahf
jge
loopne
mov
movsl
icebp
fnsave
outsb
xchg
mov
jo
int
rcrl
hlt
inc
cmp
stc
jns
mov
inc
imul
cwtl
fsts
push
dec
lahf
xlat
aam
inc
sbb
in
pop
mov
lret
cmp
sti
xor
outsb
sub
pushf
mov
xor
push
add
or
packssdw
lods
int
das
xor
cmp
rorl
pop
adc
inc
push
pop
das
cmpsl
mov
jge
dec
jmp
xor
mov
cmp
lds
or
xorl
ret
dec
push
out
sub
pop
jg
lret
dec
mov
dec
xor
das
jmp
cs
pop
cs
clc
fsts
or
xor
sub
mov
push
shll
lods
leave
mov
xchg
iret
jle
and
popa
rep
inc
adcb
sbb
cmp
int3
mov
pop
mov
adc
into
cmc
cmc
loope
push
stos
sbb
aaa
outsl
jbe
scas
in
dec
mov
dec
push
fidivs
jl
pop
sub
push
stos
fs
and
push
nop
cld
test
jb
xchg
stc
push
mov
cmpsb
mov
stc
lret
push
in
aam
cli
push
movsl
dec
dec
int3
pop
push
mov
rclb
sub
dec
mov
push
dec
das
fnstcw
js
orl
out
lret
movsl
or
sbb
sbb
mov
mov
jnp
jns
cli
je
cmpl
xchg
rol
adc
pop
mov
jnp
mov
add
mov
adc
les
mov
dec
movsl
js
orl
adc
inc
jg
push
lret
mov
sbb
push
dec
in
rcll
sub
nop
icebp
iret
rcrb
add
loop
pop
divl
ss
push
push
xchg
subl
push
cs
and
gs
mov
mov
jle
dec
fsubp
mov
insb
and
insl
jnp
push
pop
xor
cwtl
mov
add
scas
dec
movsb
nop
icebp
in
daa
mov
in
lret
mov
lds
in
es
xchg
sbb
lods
iret
lcall
pusha
xchg
add
lock
mov
adc
stc
ret
push
ss
ljmp
popf
dec
mov
pusha
jp
mov
aaa
movsl
xorb
adc
mov
jnp
push
scas
pusha
mov
cmp
xchg
xchg
add
cmp
lahf
or
dec
nop
adc
rcrl
push
sub
mov
lods
gs
outsb
mulb
cmp
sub
jns
sub
into
xor
jmp
mov
pop
pop
push
fists
xchg
leave
sahf
sbb
add
test
add
lret
repnz
push
mov
xchg
inc
cmpsl
hlt
mov
or
xchg
aas
into
inc
inc
popf
arpl
or
push
add
stc
fcoml
popa
jno
mov
aaa
mov
jno
divb
pop
and
pop
jno
or
popa
xchg
dec
ret
jl
xabort
mov
cmp
jo
imul
mov
in
jae
or
jp
push
popa
in
hlt
not
cmpsb
dec
add
mov
xchg
pop
inc
mov
mov
mov
shrl
stc
xchg
test
leave
shll
xor
shrl
sahf
or
cmp
fdivrp
sub
out
insl
inc
add
loop
sahf
loopne
out
fnsave
test
cld
add
mov
inc
fsubs
pop
in
jmp
lret
dec
mov
sub
ljmp
jle
jno
jge
add
xchg
cmp
and
mov
lahf
mov
rclb
in
pop
rcrl
mov
in
test
cmp
or
push
scas
movsb
cmp
and
stos
pop
cmp
int
aas
and
dec
cmc
cmp
cwtl
sub
movsb
pushf
loope
sbb
inc
scas
in
data16
popf
int
fmuls
ss
sub
mov
lods
cltd
and
push
loope
ror
lahf
add
jno
xchg
cmp
popf
in
aas
dec
xchg
add
data16
mov
xchg
inc
int
popf
imul
in
ret
aad
insb
flds
enter
push
sbb
scas
inc
xlat
scas
wrmsr
movd
pop
xchg
jge
mov
jle
cmp
xchg
mov
jmp
cmp
jae
dec
scas
insl
and
mov
imul
dec
lock
and
or
mov
mov
push
in
mov
fisttpl
subl
jmp
lock
push
adc
dec
push
cmp
and
add
ja
add
inc
inc
inc
push
lcall
cmpl
jmp
shll
fcompl
sub
inc
ja
ja
addr16
or
in
test
int
push
pop
sub
ret
xor
mov
sti
dec
sbb
out
int
cld
pop
fdivp
dec
or
cmc
dec
test
adc
cmp
add
mov
outsl
in
movsl
ds
or
add
ja
test
xor
movsb
fmuls
or
inc
lret
movsl
inc
pop
rorl
xchg
mov
loope
into
or
mov
sub
aas
jmp
loope
mov
cmc
jp
fldl
jge
cmpsl
aad
mov
mov
outsb
sub
movsl
xor
lret
sub
jmp
cmc
mull
push
ror
shr
mov
push
outsl
mov
xchg
lret
jp
xlat
loope
sbb
les
push
es
dec
inc
scas
aas
arpl
mov
in
bound
add
jle
rcrl
out
loop
or
xor
out
shlb
nop
xor
bound
mull
andb
cmp
in
int3
fbld
insl
xchg
daa
mov
push
popa
outsb
inc
sbb
inc
std
arpl
jle
inc
leave
dec
lahf
mov
push
imul
repnz
daa
push
push
push
bound
nop
push
xor
ret
flds
jnp
xor
mov
cmova
or
and
iret
rorl
mov
mul
movsb
stc
popl
insl
xor
scas
ficompl
pop
or
dec
mov
fcmovu
out
outsb
push
cmp
push
test
adc
jns
loop
jae
movsb
scas
loop
cmp
inc
mov
fsubs
imul
mov
mov
sub
pop
sahf
and
inc
popa
xchg
in
data16
dec
lret
adcl
cvttps2pi
fwait
cwtl
push
aad
les
pop
fldenv
cmp
ljmp
rcrl
jnp
test
push
mov
mov
ds
inc
popa
cs
pop
cmpsb
int
xchg
mov
in
mov
and
or
cmp
add
out
pop
inc
add
sub
xor
pop
sti
jb
and
cmp
jg
push
mov
or
lods
inc
add
dec
add
xchg
dec
pop
adc
mov
daa
push
mov
pop
adc
inc
rcl
sbb
xlat
dec
jle
subl
lahf
clc
inc
inc
icebp
out
push
cwtl
xchg
sti
into
pop
xchg
xchg
add
mov
or
adc
data16
cmp
scas
mov
jno
mov
out
dec
data16
lods
rolb
orb
mov
xchg
loopne
cs
inc
mov
cwtl
pop
idivb
ljmp
pop
mov
lahf
inc
sbb
mov
ficompl
xchg
mov
enter
inc
mov
jbe
jo
pop
rcr
sub
mov
outsb
pop
dec
xchg
and
mov
dec
sub
testl
movsl
mov
scas
and
pop
jecxz
add
cwtl
repnz
xchg
mov
insb
sbb
add
and
mov
stc
and
lret
or
cmp
dec
in
jge
cmp
mov
in
mov
and
push
je
out
icebp
decl
push
add
sbb
imulb
fs
xlat
faddp
cwtl
xchg
and
jp
adc
push
push
push
cli
add
rcrb
pop
cwtl
xchg
adc
jo
scas
dec
pop
sbb
test
pushl
iret
cmp
and
iret
fldcw
data16
cmp
mov
or
xor
mov
iret
mov
inc
dec
sub
sbb
ss
pusha
jmp
xor
jmp
or
or
repz
jp
push
mov
xchg
clc
fisubrs
fistpll
jbe
lret
aad
mov
sbb
repz
and
and
fs
jbe
rcll
lahf
mov
pop
aaa
mov
or
add
mov
xchg
xchg
in
pop
rolb
pextrw
xor
stc
in
sarb
adc
push
add
mov
cmp
in
xchg
xchg
sbb
fistps
stos
mov
or
jge
or
pop
inc
les
sti
adc
fwait
xchg
lods
mov
add
add
cmpsl
jge
xchg
repz
leave
jae
mov
iret
xchg
xor
sub
sahf
inc
jae
pop
sub
inc
cmp
dec
adc
sar
daa
into
es
or
aaa
jo
add
jle
sub
sbbb
pop
rcr
mov
and
dec
scas
icebp
or
pop
xchg
sbb
jnp
jg
test
mov
inc
fadd
sbb
mov
dec
inc
cwtl
adc
xor
adc
stc
int3
mov
aam
das
lret
in
icebp
loopne
aad
out
cmp
add
sub
cmpsb
adc
push
frstpm(287
cs
out
xchg
ja
cltd
sbb
jnp
jle
cmpb
inc
stc
scas
es
aad
or
sbb
mov
inc
fdivrl
test
lahf
rorl
test
cmp
je
mov
gs
jp
add
out
pushf
icebp
pop
bound
jl
add
jl
xchg
xor
jp
imulb
inc
leave
mov
lds
mov
fnstenv
xchg
sbb
in
aad
and
out
or
cli
xchg
cmp
into
lret
pop
and
aaa
add
xchg
fwait
mov
lds
repnz
mov
jg
and
jae
or
fwait
mov
fmulp
mov
fadds
mov
leave
cmc
push
shl
movsl
int3
enter
push
mov
lcall
jg
mov
insb
dec
lret
mov
inc
inc
mov
adc
adc
testb
adc
mov
iret
shlb
popa
dec
mov
cmp
lret
call
cmp
or
xchg
ja
cwtl
push
xchg
lock
mov
mov
fs
jns
sti
adc
clc
aas
enter
xchg
lcall
adc
cmp
pop
mov
pop
arpl
sbb
dec
scas
pop
loope
mov
shll
sbb
ficomps
rcrb
xor
leave
lock
sub
mov
pop
adc
mov
push
shlb
in
cmp
cmp
inc
pop
cs
ljmp
sti
or
sub
or
lahf
mov
arpl
or
dec
mov
sbb
jp
mov
mov
arpl
sbb
xor
jl
fmuls
or
cmpsl
mov
cmp
push
ljmp
fsubp
mov
xchg
dec
lods
add
xchg
lds
cmpsl
leave
mov
es
int
push
ficomps
add
daa
jl
addr16
ljmp
iret
xor
jne
add
pusha
jl
in
or
push
push
cltd
mov
and
test
xchg
adc
cmp
dec
movsb
fsubs
jmp
dec
imul
inc
movl
call
xor
dec
imul
xchg
sub
pop
jb
inc
ret
addr16
jno
into
sbb
ss
sbb
fmuls
xor
out
xor
dec
daa
cmp
ret
test
add
inc
pop
lods
cmpsb
push
pop
or
push
xchg
loopne
push
out
and
xor
or
mov
test
xor
cmpsl
fstp
dec
int3
cs
ror
ljmp
push
mov
xor
out
pop
cmp
test
cmp
sti
mov
shlb
pmulhw
fisubrl
call
into
adc
ficomps
add
xor
add
add
dec
sub
ljmp
sub
sbb
push
into
rcrb
out
sti
sub
mov
push
rcl
mov
jno
imul
xor
rcr
lcall
rcrl
xchg
cltd
loopne
loopne
jp
and
add
stos
sbb
mov
xchg
test
ja
jecxz
mov
scas
mov
jbe
mov
loop
push
dec
lods
push
mov
mov
rclb
das
xchg
in
add
out
or
push
in
pop
pushf
xor
jno
cld
in
sub
in
outsl
sbb
insb
out
lret
repnz
scas
loope
mov
das
fprem
lret
lds
cli
aaa
sub
test
lahf
and
clc
push
cmp
mov
shlb
push
inc
push
fdivs
rcr
sbb
jne
jp
push
loope
xchg
gs
mov
mov
mov
push
sub
pop
cs
cmp
mov
jae
scas
hlt
adc
dec
in
pop
out
mov
xchg
idivl
ds
pop
mov
insb
pop
hlt
push
ja
popa
lea
cltd
out
jge
add
lock
inc
out
pop
xchg
in
push
imull
or
inc
xchg
fwait
add
cmpsl
lods
inc
repz
std
popf
dec
pop
std
lock
mov
dec
sbb
add
push
lcall
sbb
popa
mov
or
mov
and
hlt
xor
xchg
jae
lcall
hlt
sbb
push
cmp
js
jg
aam
add
jns
mov
cmp
in
push
movsb
lea
or
or
test
icebp
sub
push
fsincos
pop
push
fildll
sub
xchg
or
ficomps
cmc
in
leave
inc
mov
mov
pop
in
test
push
lret
stc
xor
dec
ljmp
idivb
and
sbb
xor
push
je
inc
add
out
jnp
inc
jmp
rorl
sarb
fstpl
fxtract
mov
pop
xor
out
lret
mov
clc
int
movsb
cmp
fidivrs
mov
daa
in
jb
pop
cmp
xchg
cmp
xchg
fwait
push
test
and
cmp
loop
pop
pop
push
xchg
push
cmpsl
jbe
nop
push
out
mov
in
cmp
cld
in
leave
in
pop
shll
call
sbb
mov
push
jp
ss
pop
int3
inc
bound
pushf
mov
test
scas
mov
aam
rcrl
mov
xor
push
jne
lock
and
lds
dec
xchg
sub
cmp
jge
lcall
cs
in
and
inc
pop
sbb
mov
mov
push
mov
mov
les
adc
xchg
insl
fistpll
cmc
outsl
std
test
mov
mov
xor
sub
aaa
mov
fwait
leave
js
jg
insl
jne
sub
inc
sbb
or
push
pop
call
add
xor
pusha
scas
sbb
cmp
sub
push
xchg
sar
xchg
out
in
fisubl
jge
push
mov
inc
mov
scas
ja
push
bsf
addb
pop
rol
movsb
fwait
jbe
mov
and
sbb
cmp
std
add
dec
roll
leave
dec
dec
sub
pop
mov
adc
stos
ljmp
inc
xchg
test
mov
mov
mov
cmp
jl
movsb
mov
cmpsb
dec
jne
or
outsb
xor
insl
adc
inc
or
aaa
mov
cld
mov
insl
arpl
xchg
inc
pusha
cmp
dec
push
push
cmp
daa
and
test
bound
fs
lods
lods
sub
data16
lock
test
mov
mov
add
and
inc
dec
xchg
cmp
and
add
adc
stos
pop
outsl
jp
cmpb
dec
jg
icebp
aad
stos
std
test
mov
add
out
lock
ret
pop
mov
sti
ret
inc
shll
push
lret
outsl
add
mov
leave
lcall
daa
fisttpl
inc
pusha
imul
jb
push
ljmp
out
cmp
imul
mov
jne
fcmovu
sub
jne
vpaddq
push
mov
cmpsl
enter
jp
add
fsubs
inc
aas
out
hlt
ss
add
in
pop
aaa
es
xor
and
adc
daa
das
dec
push
xchg
dec
sbb
mov
xchg
call
lret
pop
lods
adc
sub
mov
dec
pop
hlt
sbbl
fbld
dec
inc
ja
ljmp
in
imul
daa
mov
pslld
les
pop
xchg
cld
or
sbb
aas
or
das
enter
lahf
out
xlat
das
cltd
mov
lods
test
push
xchg
ljmp
push
lea
or
lcall
xchg
mov
loopne
pop
popf
loop
hlt
test
inc
pop
or
dec
or
adc
xchg
mov
jle
leave
mov
out
shlb
test
cltd
loopne
into
adc
sbb
adc
mov
cmpsb
jbe
or
rcrb
mov
dec
je
rcrl
xchg
mov
jo
aas
divb
mov
xor
and
pop
sahf
shrb
mov
fwait
mov
push
jl
or
and
jecxz
and
test
sbb
xchg
mov
push
lahf
shll
rorb
imul
imul
push
add
jmp
aam
aaa
cs
fcmovnbe
fdiv
pop
cmp
pop
or
les
pop
scas
pop
pop
jo
sbb
inc
seto
sahf
ja
jae
jecxz
dec
cwtl
les
pushf
imul
push
jns
ja
cmpsb
test
aas
push
rolb
in
sahf
and
lods
lock
cmp
pop
pop
mov
loopne
addr16
shlb
xor
fsubr
dec
out
jge
jecxz
ret
pop
popf
aaa
dec
jge
xchg
pop
stc
cmp
jg
shrl
sahf
test
lods
fucomi
xchg
loope
cmpsb
mov
dec
pop
pop
push
push
test
add
ret
lock
loopne
cmpsb
pusha
xchg
mov
fistps
push
insb
out
mov
pop
push
adc
cmpsl
scas
pop
inc
outsb
cmc
lret
lret
fcmovu
gs
out
and
leave
pushl
out
sbb
add
lea
lret
or
mov
mov
and
mov
aas
push
mov
daa
mov
int
test
ss
fadds
sbb
aas
loope
inc
mov
imul
lea
push
mov
adc
outsl
push
mov
lret
js
out
add
jbe
and
xorl
pop
mov
mov
pop
pusha
pop
loopne
pop
pop
repnz
dec
and
stos
mov
cmp
testl
lcall
sub
xor
push
out
xchg
cmpsl
stos
ret
add
adc
mov
xchg
cltd
call
xchg
or
shll
xor
in
jmp
ret
out
or
dec
or
mov
xor
jb
sub
inc
jb
mov
fsubs
push
lock
fnstcw
and
cld
shrb
sbbb
pusha
mov
jl
fisubrl
enter
mov
neg
in
shl
xchg
jle
out
les
cmp
push
dec
imul
cmp
into
xor
je
repnz
sahf
inc
mov
push
inc
hlt
cwtl
cmc
xor
shrl
bound
xchg
sbb
pop
dec
push
mov
cmp
sbb
adc
fsub
xchg
mov
sub
fistpl
out
cltd
adc
xor
mov
hlt
push
jae
lds
mov
fstps
cmp
and
adc
decb
pop
enter
dec
cmp
mov
pushf
xor
mov
push
push
bound
cmp
adcb
in
outsb
push
or
das
rclb
dec
xor
lods
push
fwait
jp
sbb
aas
mull
pop
ret
inc
iret
jb
dec
fidivrl
mov
into
add
cltd
loop
mov
dec
push
lea
out
push
int3
dec
mov
fisubrl
push
mov
ret
xor
pusha
mov
les
cmp
call
xor
jne
lock
inc
aas
data16
mov
jecxz
je
jo
std
mov
arpl
insl
cmp
ficoms
jl
aam
jmp
sarb
or
scas
sub
lods
xor
nop
movb
mov
ret
xchg
mov
sbb
outsb
mov
adc
ss
mov
clc
loop
push
iret
xchg
test
daa
popa
inc
push
xchg
xor
test
ss
leave
test
jns
repnz
or
push
mov
test
loop
inc
xchg
rolb
int
cltd
or
dec
sahf
jno
sbb
mov
cmp
add
adc
gs
test
xor
and
mov
xlat
xlat
pop
lea
je
add
add
jmp
hlt
das
mov
add
bound
jl
lcall
aaa
xor
test
mov
and
notb
xor
pop
gs
insl
aas
and
mov
mov
ret
jb
dec
js
inc
or
dec
add
mov
dec
mov
repz
hlt
adc
and
aaa
flds
stc
stos
stc
loop
jecxz
xlat
pop
cmp
stc
out
gs
cmp
fcmovne
mov
pop
orl
mov
sbb
scas
inc
sbb
xlat
jne
decb
rcr
lret
gs
sub
mov
inc
rcrb
cs
push
push
insl
mov
adc
addr16
in
das
xchg
push
mov
aaa
repnz
cmpsl
xlat
xor
mov
loope
test
jmp
push
lahf
aas
popa
out
subl
mov
lcall
add
mov
push
xor
and
test
fstps
lahf
ret
inc
push
stos
xchg
pop
push
fstps
fmuls
cmp
es
ds
dec
cmp
andl
xor
cmp
roll
movsl
pop
ds
fs
or
cmp
stc
add
inc
or
and
fldl
adcl
push
push
xorb
in
push
into
jge
adc
adc
push
cmp
cmp
sub
clc
test
jno
adc
mov
out
imul
inc
addr16
adc
cmp
jns
mov
mov
dec
int3
fwait
sbb
movsl
mov
xchg
test
jmp
in
mov
cmpsl
push
mov
add
sbb
stc
popa
cmc
gs
repz
cs
mov
scas
test
xor
jne
incl
dec
sub
mov
mov
push
repnz
or
mov
and
mov
arpl
cs
test
lret
ret
movsl
fcoms
stc
xchg
pop
inc
mov
lahf
fdivr
ja
icebp
dec
leave
mov
add
xchg
push
ljmp
sub
xchg
shlb
sti
or
dec
mov
out
pop
push
mov
inc
or
pop
sbb
xor
int3
roll
mov
cli
xor
push
or
insl
sbb
jle
jae
sbb
outsb
nop
sub
loopne
xor
xorb
pop
cmpsl
popa
pop
push
clc
ret
ficoml
mov
fbld
out
cmp
lahf
loop
jmp
in
push
jnp
sahf
repz
mov
xor
int
xor
in
mov
fidivrl
daa
pusha
enter
add
adc
gs
xor
stos
shrb
push
push
inc
outsb
cmp
mov
adc
pop
cmp
hlt
popa
ss
jb
int
roll
imul
call
repnz
andb
xor
in
test
ret
mov
jmp
in
sub
into
xchg
pop
jb
rol
gs
mov
sub
stos
sarl
lcall
je
xchg
sbb
aad
fdivl
loop
sbb
add
arpl
rolb
sub
movsl
ror
data16
cli
push
test
dec
sbb
xor
mov
stos
inc
mov
xchg
mov
jnp
mov
pop
call
and
cmp
add
sahf
movsl
mov
divl
icebp
cmpsb
aaa
out
sbb
mov
lcall
bound
hlt
xchg
ret
addr16
scas
sub
jns
or
movsl
das
mov
or
aas
popf
sbb
lret
xchg
add
frstpm(287
adcb
mov
movups
scas
lea
les
insl
sub
sub
mov
sub
das
fxch
sbb
and
fs
push
mov
pop
ficoms
pop
cmpsb
mov
ja
pop
and
or
push
jnp
test
mov
xor
in
mov
pop
out
test
les
pop
cmpsl
call
mov
jne
out
cmpsl
inc
rcrb
stos
add
add
cmc
add
and
xor
jnp
pop
dec
enter
int3
cmp
or
aas
pop
ds
stos
sub
or
mov
mov
neg
leave
sti
and
sar
repz
addr16
push
push
int3
leave
outsl
jp
jne
mov
jbe
js
adc
sahf
dec
int
dec
dec
insl
test
mov
les
loope
repnz
cmp
es
jmp
fwait
jmp
xor
or
adc
jp
push
arpl
inc
das
lds
rcl
inc
mov
jmp
negl
shlb
cs
xchg
lods
pop
out
imul
fs
div
push
dec
cltd
jg
outsl
ret
aam
xor
and
mov
cmp
xor
mov
imul
ss
mov
scas
ss
and
out
cli
pop
pop
in
jmp
push
sub
setl
dec
cmp
and
les
sbb
fs
in
mov
push
sbb
lods
outsl
movl
pop
dec
pop
imul
push
push
jl
dec
mov
flds
and
lods
ret
sarb
out
test
fcmovnbe
out
lret
pop
mov
pop
push
xchg
xchg
xchg
je,pt
sbb
add
arpl
int
sbb
icebp
fistpl
pop
mov
adc
add
cmp
pop
mov
inc
mov
cmpsl
dec
mov
or
push
sbb
push
push
cmp
jge
jecxz
out
fcomps
sub
clc
insb
jmp
or
movsl
mov
fmuls
mov
xlat
push
fucomp
push
xchg
ja
loope
pop
push
dec
add
mov
and
or
jl
adc
mov
mov
sbb
in
sub
adc
test
pop
xchg
mov
int3
or
fbstp
test
jo
mov
loop
ret
xchg
lret
pop
icebp
aam
iret
or
add
cwtl
std
mov
push
aaa
enter
notb
repz
sbb
fs
pop
mov
push
lahf
mov
outsl
fimuls
adc
xchg
out
incl
mov
imul
pop
hlt
icebp
pop
pop
lods
xchg
repz
call
shr
stos
mov
dec
ret
push
sbb
stc
pop
and
push
mov
lret
xchg
push
jle
shlb
jle
test
test
dec
xchg
dec
cli
sbb
testb
inc
aam
rclb
and
fcom
jmp
mov
inc
imul
ja
sbb
xchg
repz
xorb
mov
fbstp
sbb
sbb
mov
lea
les
in
xor
loope
inc
mov
bound
push
push
repz
adc
cwtl
dec
pusha
in
jae
sar
push
and
xchg
jns
icebp
popa
cmp
xor
or
pop
pop
scas
inc
inc
xor
cmpl
pop
sahf
and
icebp
sub
rorl
xchg
inc
push
insl
mov
lahf
lds
ret
fcoms
cmp
lock
sbb
out
mov
xchg
orl
int
bound
or
rcll
cld
xchg
jno
xchg
sub
jns
shll
fs
sub
adc
lods
dec
data16
jecxz
mov
fnstcw
sub
aaa
hlt
jne
shlb
stos
and
dec
sbb
xor
pop
jo
cmp
call
int3
lods
mov
shrl
rcl
push
mov
in
xchg
rorl
es
daa
leave
jg
sbb
pop
icebp
in
or
mov
push
shl
imul
bound
jns
dec
inc
fnstcw
loopne
dec
out
aad
sub
sbb
mull
lahf
pop
mov
pop
jb
call
pop
dec
and
je
cmpsb
call
sbb
rorb
xor
fadds
inc
out
mov
adc
sbb
insb
push
mov
and
pop
ret
sti
dec
mov
adc
insl
fbld
cmpsb
adc
clc
minps
xor
sbb
pusha
pushl
mov
out
push
inc
aad
repz
movsb
xor
fnsetpm(287
jnp
dec
iret
cltd
or
pop
scas
test
jnp
psubb
movsb
add
nop
lahf
clc
dec
jge
int3
out
loope
sahf
aaa
icebp
loope
mov
lret
or
push
inc
jae
push
rcr
push
mov
push
mov
push
xchg
mov
jbe
sbb
rolb
push
xor
mov
xchg
sbb
add
orb
pusha
shl
gs
cmpsb
xchg
inc
mov
enter
jne
sahf
and
cwtl
out
aam
scas
jecxz
jns
ds
test
pop
adc
js
je
dec
dec
cwtl
or
mov
sbb
dec
mov
arpl
test
fimuls
and
imul
and
insl
jl
ss
push
dec
iret
push
cmp
loop
cs
xbegin
ret
dec
mov
xchg
in
mov
push
sbb
push
mov
push
repz
imull
ret
fldcw
es
mov
sbb
sahf
test
stc
mov
out
in
nop
addr16
fldl2e
out
push
and
movsl
movsb
and
lahf
or
inc
mov
fwait
into
lret
dec
mov
or
inc
aaa
and
ficomps
lret
xor
and
inc
or
add
shrb
adc
aaa
mov
ret
sbb
and
pop
ficomps
das
pusha
into
pop
sub
movsb
mov
rolb
imul
es
lods
add
mov
add
cmp
or
jb
in
adc
jb
push
and
cmp
mov
lock
ret
out
mov
out
loope
je
pop
mov
jae
imull
sub
or
push
inc
sbb
cld
lahf
fs
into
cmp
daa
cmp
insl
xor
lds
test
popl
mov
jb
pushf
and
adc
pop
hlt
mov
jo
jnp
inc
xor
bound
or
pop
sub
dec
inc
mov
adc
push
mov
mov
ret
xor
and
dec
jle
outsl
test
push
xchg
fldl
jns
jmp
in
fstpt
push
cmpb
test
aam
adc
mov
daa
sahf
push
lret
jns
cmpsl
push
xchg
mov
fimull
push
lret
jne
lret
dec
cmpsl
dec
mov
nop
shl
shl
mov
mov
mov
add
roll
pop
fcmovbe
test
push
xchg
scas
or
ja
cmp
mov
push
and
push
jge
fdivrl
pop
into
iret
pushf
pop
inc
arpl
mov
mov
push
mov
adc
or
fs
xor
inc
shlb
mov
inc
xchg
scas
dec
sahf
leave
test
stos
or
lret
lret
inc
movsl
xor
jmp
enter
push
out
push
inc
aad
jge
std
xor
shl
push
lea
sub
imul
or
lcall
pop
adc
inc
dec
pop
mov
fdivrs
inc
enter
fdivrs
inc
mov
jne
push
cltd
stc
test
cmp
rorl
mov
in
movsl
xor
outsb
dec
lret
push
or
pop
jb
sub
cmc
push
icebp
jp
adc
stos
test
mov
sbb
test
sub
int
jl
and
iret
scas
push
mov
movsb
lods
lret
aas
xchg
sbb
ss
data16
ss
sub
adc
push
ficoms
mov
sti
lret
repnz
xor
and
jbe
sarb
adc
jnp
cmp
rcll
aam
nop
out
int
ret
adc
dec
adc
and
cmc
xor
dec
aaa
pop
call
push
call
sti
mov
ret
movw
jecxz
lods
push
adc
dec
mov
xchg
lahf
xchg
xchg
sub
psubsw
sub
dec
icebp
mov
fucomip
mov
icebp
sub
movsb
fndisi(8087
mov
ficompl
jns
add
jle
push
cmpsb
dec
inc
mov
dec
and
mov
add
cs
cmp
mov
push
mov
ja
dec
loopne
mov
fxch
inc
mov
fldt
xchg
xchg
in
or
dec
mov
inc
repnz
adc
jne
xchg
add
xchg
orb
stos
sub
add
sub
filds
hlt
ret
test
dec
mov
inc
mov
pop
stos
mov
and
and
fistpll
pop
push
and
mov
imul
dec
fstp
repnz
enter
ret
insb
push
jb
js
mov
fwait
cmp
pop
jb
add
gs
jge
lret
or
cmc
mov
xchg
insl
mov
or
mov
inc
mov
fistps
jmp
lahf
ds
pop
dec
jge
cmc
andb
xor
inc
fcmove
jmp
loop
adc
xchg
sbb
fsubs
jae
scas
dec
push
popa
sbb
icebp
push
add
mov
adcb
mov
scas
sub
inc
ret
orb
rcll
sub
adc
push
scas
jns
sub
movsb
mov
int
or
mov
inc
das
rclb
mov
sub
je
les
pushf
in
pop
mov
mov
sub
pop
sub
enter
sbb
addl
adc
popf
fisttpl
xorl
scas
mov
scas
aam
adc
mov
jns
and
mov
adc
jb
icebp
lcall
xor
pop
inc
ds
pop
cmpsl
lods
adc
dec
sbb
mov
inc
pop
rcrl
dec
cs
cmp
pop
jp
xorl
repnz
in
or
xor
aaa
adc
int
arpl
adc
clc
jno
ds
cmp
shll
int3
xor
in
cli
mov
imul
dec
or
mov
or
imul
pop
push
repnz
pop
ljmp
lcall
sahf
xchg
jmp
mov
imul
cmp
jl
daa
push
mov
dec
inc
fsubs
clc
jl
subb
xor
fwait
dec
push
orl
sarb
loopne
inc
mov
cld
dec
mov
iret
xchg
sti
int3
repnz
imul
lret
xchg
imul
sub
xor
andb
mov
loopne
stc
pop
cmp
popa
jl
jle
fwait
adc
out
jae
and
imul
or
je
and
setg
test
repnz
rcl
mov
loope
cmp
push
pop
sbb
clc
push
cmp
xchg
mov
test
sbb
xchg
jmp
and
pop
mov
mov
mov
mov
and
mov
jne
stc
pop
xlat
mov
insl
lret
xor
mov
loopne
loope
test
int3
push
bound
loope
dec
inc
js
out
loope
insl
in
dec
pop
out
outsl
je
mov
and
imul
fldl2t
imul
loope
mov
push
mov
push
test
xlat
inc
dec
or
inc
inc
mov
fwait
es
dec
les
ja
xchg
pop
mov
mov
scas
xchg
and
cld
movsl
xor
push
xlat
xrelease
dec
dec
inc
cmp
jae
mov
data16
in
out
gs
jmp
push
add
add
push
adc
pop
lret
xor
push
cmp
or
int3
pusha
or
lods
fs
mov
lods
popa
sbb
pop
addr16
xorb
popa
or
jecxz
xchg
arpl
fsubrs
into
ja
sub
add
sarl
in
xchg
shll
mov
add
jmp
ss
mov
cmpsl
mov
into
pop
outsb
and
add
jb
cmp
push
sub
sub
clc
mov
fucomi
jl
sbbb
jl
fdivrs
cmc
xchg
mov
lods
sbb
xchg
push
jbe
mov
and
popaw
movsl
fstp
mov
or
mov
ss
lcall
inc
in
jg
dec
in
mov
aas
and
dec
loopne
stos
lahf
outsb
adc
lcall
or
imul
aad
cli
insl
cli
jl
xor
fstpt
xchg
test
jmp
scas
fidivrl
ret
inc
in
mov
mov
shrb
adc
sbb
inc
pop
fdiv
and
in
sbb
lock
inc
cwtl
pop
js
push
adc
xor
sti
pop
pop
aad
dec
mov
add
sti
inc
sarb
and
push
jno
cmp
or
lcall
cmp
f2xm1
cli
xor
icebp
fdivs
jle
xchg
outsl
das
cmc
scas
adc
aas
sub
dec
cs
and
and
cwtl
or
pop
icebp
mov
in
scas
addl
pushf
stos
push
lds
mov
hlt
test
adc
mov
xchg
imulb
insl
xchg
jle
lea
jae
dec
mov
mov
jmp
imul
cmp
cmc
es
test
aas
in
lock
mov
inc
lods
ret
push
push
jns
daa
jge
jmp
fcoml
inc
roll
sahf
ds
sub
add
lea
mov
adc
test
bswap
mov
ret
inc
out
dec
frstor
mov
dec
push
jmp
sbb
push
dec
cwtl
inc
pop
xchg
pop
jp
aas
cs
adc
mov
lock
mov
addr16
loop
aaa
dec
dec
int
lods
xor
cmc
xor
xor
jno
stc
jg
mov
nop
lock
in
xor
mov
pop
push
testl
pop
in
add
call
fs
int
stos
mov
addps
hlt
ret
sti
rorb
aad
mov
fbstp
outsb
ret
jecxz
cwtl
xchg
mov
repz
lcall
inc
adc
aad
js
xchg
stc
mov
lret
loope
pop
fdivrp
test
test
push
stos
bound
sahf
shrb
adc
xchg
lock
into
scas
add
std
jecxz
icebp
ret
and
shlb
in
pop
imul
addr16
in
xchg
cmc
divb
adc
mov
ss
fistps
bound
inc
lret
mov
mov
lahf
push
add
mov
stc
xchg
fdiv
addr16
and
sub
inc
push
imul
cmc
adc
sub
pmuludq
out
sub
sub
sub
jbe
jne
sub
js
mov
ret
nop
bound
stos
xchg
add
dec
out
mov
sbb
jg
fldt
cld
add
and
dec
daa
leave
pop
into
lret
in
jge
jle
add
cmc
fscale
and
push
mov
cmp
enter
unpckhps
in
xchg
icebp
xor
mov
adc
push
mulb
icebp
loop
adc
lds
dec
fidivrl
dec
ficoms
dec
push
inc
movmskps
jmp
pop
test
xor
jnp
bound
xchg
push
hlt
ss
cmpsl
js
mov
cmc
fcmovb
lds
sub
inc
jge
mov
cld
int
jle
add
in
aas
ss
adc
sub
popa
rolb
ss
pushf
bound
add
or
iret
loope
jo
mov
ljmp
inc
neg
xor
mov
xchg
decb
rcr
push
xchg
lock
std
gs
scas
add
xchg
xchg
mov
sub
mov
int
xor
inc
dec
mov
sub
pop
movsb
pop
mov
sub
call
adc
push
loopne
cmovne
scas
fsts
or
cld
xchg
inc
pop
fbld
pop
pop
mov
or
loope
in
add
in
loopne
xor
shlb
mov
mov
or
out
outsb
call
cmpsl
aaa
adc
jmp
lret
insl
sti
addl
jb,pn
jp
ret
xchg
sbb
and
lcall
insl
xchg
aas
sti
jmp
leave
jne
mov
lcall
repnz
cmpsl
aas
cmpsb
xor
fwait
pop
xor
cmp
or
fdivs
call
lret
xor
sbb
cmp
in
inc
repz
xlat
fcom
popf
xchg
mov
push
xchg
aam
mov
sub
mov
add
stos
fdivl
stos
xor
xchg
xchg
mov
dec
inc
mov
adc
in
push
adc
ja
out
xor
add
lahf
add
inc
mov
xchg
or
testb
ret
and
mov
in
shl
push
mov
js
fcompl
mov
hlt
xor
add
adc
aaa
test
fnsave
fimuls
mov
in
pusha
push
mov
les
and
push
fs
lcall
stos
pop
repz
jo
arpl
pushl
movsl
xor
adc
in
xor
or
ss
hlt
adc
in
scas
or
jmp
inc
adc
mov
mov
sti
cmp
fmul
push
jb
mov
xorb
pop
clc
mov
stos
ljmp
add
sbbl
data16
mov
mov
or
pusha
and
or
rolb
out
lcall
popl
xor
jecxz
mov
mov
sbb
out
stc
inc
lods
xchg
test
insl
test
or
inc
insb
fsubrs
lret
pop
test
push
sbb
sbb
and
cmpsl
adc
nop
out
jecxz
and
imul
aaa
jmp
sbb
call
jo
or
or
push
imulb
out
dec
dec
xorb
inc
int
stos
rcrb
mov
stc
pop
mov
clc
dec
pop
cmpl
xlat
and
data16
sub
xchg
ud0
cmp
test
daa
fnsave
repz
jl
and
into
clc
repnz
aam
movsl
out
xchg
fnstenv
into
sub
leave
jnp
dec
sub
sub
xchg
pop
hlt
mov
popf
or
loopne
xchg
mov
movsl
pop
jb
cltd
push
jae
pop
out
test
mov
je
lea
mov
into
loopne
repnz
mov
fnclex
arpl
scas
cld
punpckhwd
jg
xchg
xor
sti
test
xor
add
mov
add
jnp
rolb
ja
and
jle
push
cmpsb
xor
cs
mov
mov
gs
pop
xlat
outsb
xor
add
icebp
mov
mov
jl
fstps
add
lcall
clc
add
out
repz
in
aas
push
insl
sbb
mov
mov
lcall
mov
jg
xor
fs
fnstcw
push
insb
lods
adc
or
es
inc
jbe
ficoml
sub
sub
cs
sar
xchg
mov
aaa
in
or
imul
pop
inc
incl
fld
push
jb
outsb
add
mov
imul
wrmsr
cmp
mov
mov
cld
popw
push
cmp
lret
int3
xchg
and
xchg
pop
outsb
ret
fcmove
xorb
jg
nop
mov
fbld
in
pop
cmp
and
jne
push
iret
fcomps
push
push
lret
sbb
rcll
or
mov
shl
cmp
push
and
pop
ret
pushfw
adc
loope
mov
inc
cmpsl
mov
imul
dec
lea
gs
and
pop
mov
sbb
mov
sti
mov
and
pop
popa
addr16
out
cmc
and
mov
inc
jg
out
jle
call
gs
xor
cltd
push
jge
out
add
pop
sahf
in
lods
xchg
negb
ret
sbb
adc
pop
adc
scas
loope
repz
xchg
decb
mov
xlat
push
loope
and
add
popa
mov
test
fdivrp
mov
adc
jns
jl
inc
sub
sti
cwtl
insl
lods
sbb
and
inc
dec
push
add
repnz
dec
into
in
gs
add
pop
sub
repz
push
xchg
mov
jp
lock
and
fstps
stos
mov
or
ficompl
lret
push
push
inc
push
pop
shll
lahf
pop
faddl
je
jl
push
push
pop
repnz
push
push
sbb
lahf
jns
in
push
pop
pop
mov
lea
xor
xchg
dec
pusha
clc
das
fcmovnb
ds
mov
xchg
or
mov
mov
repz
rorl
mov
cwtl
jp
cmp
dec
aad
int
ja
pop
leave
jmp
cltd
cwtl
pop
int
dec
mov
aam
dec
cmpsb
cmp
js
ret
test
dec
inc
xor
fwait
daa
sti
sbb
lcall
xor
xchg
fidivrl
icebp
xchg
inc
xorl
mov
idivb
int3
pusha
or
xchg
mov
insb
push
mov
cmpsl
in
sub
hlt
xor
stc
mov
or
fldl
xlat
mov
push
sub
cmp
adc
cmpsl
ss
iret
push
mov
mov
mov
inc
add
les
shll
mov
inc
jb
insl
mov
add
bound
fcoml
sahf
sub
cmp
or
jle
pop
cltd
nop
in
rcr
popf
das
shr
fldenv
fdivrs
push
fs
push
xor
aaa
sub
pop
adc
ret
mov
inc
jno
push
dec
add
dec
push
hlt
cltd
jns
jbe
push
mov
ljmp
sbbb
lds
and
clc
scas
pushf
and
lods
test
jmp
xchg
push
jne
scas
sbb
mov
mov
out
jge
out
ret
out
fdivrs
loope
repz
pop
or
ret
sub
mov
pushf
push
xor
mov
pop
and
pop
sbb
psubd
cltd
mov
fwait
sbb
or
test
ret
in
loope
es
ret
cmc
icebp
jecxz
mov
repnz
popf
cwtl
test
dec
jecxz,pn
sahf
sbb
cmp
add
clc
dec
hlt
xchg
jp
pop
mov
pop
dec
add
mov
adc
cmpsb
dec
lcall
mov
es
aaa
sub
imul
dec
adc
sbb
stos
inc
loop
mov
daa
or
cltd
pop
imul
xchg
cmp
mov
mov
or
cmp
and
cli
in
clc
mov
loopne
pop
es
insb
mov
dec
out
leave
push
in
fldcw
xchg
adc
fisubrs
aas
repz
das
gs
jp
add
in
xor
sub
inc
mov
mov
imul
test
xchg
lds
xchg
mov
pushf
jmp
mov
add
xchg
lea
mov
push
lods
sbb
dec
sbb
mov
mov
insl
mov
mov
fsubrl
lea
mov
xor
sbb
inc
xor
mov
add
cmp
mov
fwait
or
mov
cs
je
mov
mov
cmpsl
or
or
add
icebp
cld
jecxz,pn
sarl
pop
inc
popa
clc
das
sub
imul
lret
jle
das
int
leave
sbb
jp
ret
xor
sub
jae
icebp
mov
add
fistpl
andl
dec
push
push
cmp
adc
pop
test
push
movsb
pop
jmp
cld
sub
pop
mov
enter
or
inc
adc
mov
mov
push
adc
test
popa
push
cmp
pop
mov
mul
sub
rorl
xchg
popa
leave
aad
js
pop
dec
sahf
loop
mull
outsb
dec
fstpl
dec
jmp
xchg
cmp
ficompl
loop
mov
ljmp
mov
imul
pop
jecxz
xchg
clc
xchg
daa
mov
std
cmpl
sbb
arpl
add
sub
mov
lock
bound
xor
pop
rcr
xor
jecxz
or
loopne
pop
aam
repz
jbe
and
addr16
leave
mov
rcl
xchg
in
sub
iret
lretw
ljmp
pushf
popf
push
push
xor
mov
jmp
adc
dec
pop
push
inc
es
xchg
cmp
gs
mov
xlat
push
out
mov
sbb
ds
fwait
cltd
push
aad
sub
ljmp
pop
flds
pop
cmp
insb
int3
int3
jle
jmp
mov
testl
leave
jne
xchg
fucom
mov
lock
lock
adc
lret
inc
sbb
mov
int
cli
cmc
pop
lcall
dec
pop
aas
mov
fiaddl
add
xchg
sbb
movsb
je
jb
adc
or
aad
xor
cmp
insb
fists
inc
mov
sbbl
test
lods
mov
sub
jmp
xchg
pop
cmp
and
sar
mov
in
sahf
or
dec
insb
sub
in
ret
cmp
lret
xchg
test
push
jg
inc
aad
imulb
stos
cmp
or
fiadds
sbb
sub
mov
nop
sar
cmpsl
sub
mov
data16
mov
repz
js
jecxz
xchg
xor
mov
add
int3
xchg
and
imul
xor
aas
jno
xchg
int
pop
in
adc
sub
mov
jmp
cmp
ja
inc
lret
movsl
imul
lahf
add
pop
pop
inc
fiadds
adc
aaa
push
xor
lahf
adc
push
test
ret
mov
jnp
jnp
pop
xor
dec
dec
xor
xor
mov
pop
int
int
mov
mov
insb
jmp
push
jmp
es
mov
into
arpl
in
int
pop
xor
std
out
jno
sub
lea
xor
ficomps
and
add
out
stc
pop
lret
or
addr16
lods
in
jno
shr
fwait
fs
enter
dec
shrl
xchg
cmp
cmp
mull
fdiv
aam
pop
shlb
or
daa
jno
dec
add
sbb
fisubrl
mov
fiaddl
jne
imul
mov
jno
dec
gs
repz
es
and
cli
inc
dec
xor
or
hlt
dec
jae
popa
daa
int
or
jno
mull
pop
test
xchg
lods
int3
clc
mov
pop
popl
push
pop
mov
addr16
sahf
xlat
inc
xchg
xorb
ret
xchg
and
mov
cmpsb
ja
ja
push
clc
arpl
hlt
cmp
sti
dec
adc
aaa
inc
shll
lods
ret
out
add
aaa
movsb
push
dec
dec
inc
pushf
mov
xchg
dec
loope
sub
pusha
xchg
in
jecxz
bound
popa
pusha
lea
ds
jmp
stos
inc
fisubl
adc
aaa
xchg
out
in
stos
gs
push
ljmp
clc
loope
mov
fdivrl
repnz
push
mov
add
imul
pop
pop
test
and
jecxz
pop
les
mov
xchg
push
arpl
mov
mov
in
enter
arpl
dec
mov
sbb
cmp
xchg
and
mov
movsl
call
push
arpl
fmull
xor
and
lahf
lods
mov
jle
jl
dec
popf
cmp
mov
lea
clc
in
fldl
test
push
xor
mov
jle
cmp
sar
rclb
icebp
xor
aad
mov
std
clc
cmc
imul
push
mov
or
bound
fsubr
rcl
push
adc
movl
in
popf
and
jge
or
and
adc
push
sub
test
insl
dec
iret
cld
mov
ret
and
push
lahf
sbb
mov
cmpsb
adc
mov
in
push
mov
push
jnp
and
xchg
mov
mov
pushf
fsubl
push
in
pop
sub
das
xchg
sbb
out
xor
ja
mov
mov
icebp
in
enter
and
std
les
fcmovbe
xor
add
ds
shrl
dec
mov
sbbl
cmp
cmp
jnp
jo
or
push
and
dec
jp
orb
jne
inc
cmpsb
pop
inc
fcompl
lods
inc
pop
ret
or
cli
mov
repz
ds
adc
xor
push
subl
jle
xor
add
and
out
pop
stos
add
cmp
rorl
gs
mov
add
hlt
jle
stos
in
jno
das
mov
je
or
and
inc
inc
pop
xchg
ja
notl
or
xor
xor
aas
jmp
xchg
je
dec
jne
cld
sbb
mov
out
xor
jle
movsl
ds
xchg
push
mov
lret
mov
lahf
outsl
and
fisttps
nop
dec
jmp
lock
jge
popaw
xor
add
pop
pop
dec
xchg
outsl
clc
iret
aas
loope
aam
dec
mov
adc
out
in
sub
jbe
daa
adc
imul
xor
sub
xchg
inc
test
outsb
pop
dec
mov
inc
movsb
pop
andb
xor
mov
sub
push
xchg
push
push
aad
adc
pop
in
repnz
pop
push
movsb
aad
xchg
sub
and
movsl
cltd
add
xchg
loope
jl
mov
mov
jecxz
dec
outsl
push
jl
out
jne
cmp
jge,pn
iret
jmp
xor
bound
pop
aad
mov
jnp
pushf
or
inc
push
dec
push
in
push
jecxz
test
or
bound
mov
xlat
jg
lock
negb
mov
inc
iret
jl
or
ret
sub
subl
mov
ja
scas
sub
bound
jb
enter
lock
add
mov
pushf
sbb
inc
push
push
push
mov
outsl
loope
or
sub
cli
adc
xlat
xor
or
mov
dec
sbbl
fwait
cmp
ret
fadds
xor
ljmp
cmpsb
insl
pop
or
sub
out
jns
out
jo
adc
jnp
jle
mov
je
lret
sti
push
mov
dec
out
fnsave
cli
pop
mov
daa
adc
jnp
sub
stos
loope
jge
sar
cmpsb
lods
mov
xor
mov
pop
imul
sub
pop
fdivrs
sub
cmpsl
and
jle
pop
mov
jl
xchg
sahf
arpl
mov
sbb
ds
stc
lea
sahf
or
addr16
das
jb
mov
aaa
sub
cmc
sub
insl
ficomps
pop
adc
sub
js
cmp
mov
xchg
in
jbe
dec
imul
int
es
dec
mov
jle
fisubrl
and
mov
inc
dec
adc
xor
push
aad
test
lahf
dec
repnz
push
xor
jne
push
sbb
repnz
subb
insl
mov
adc
filds
out
loope
and
dec
lock
xchg
mov
dec
xchg
out
cmp
inc
mov
sub
mov
push
mov
push
xchg
pop
sbb
sbb
rcrb
movsb
inc
clc
inc
mov
mov
jbe
pop
pusha
cmpsl
sub
pop
xchg
push
mov
fildll
loope
arpl
cmp
inc
into
test
push
mov
jae
add
cmp
movsb
cmp
mov
jb
mov
mov
jne
or
sub
movsl
sbb
push
ds
aad
inc
jg
xchg
jmp
outsl
pop
loop
adc
inc
inc
cs
cwtd
into
xor
push
add
hlt
adc
inc
sarb
mov
and
pop
sub
lret
lds
mov
popa
sbb
insl
aam
je
dec
aaa
fisttpll
inc
jp
shlb
pop
pop
fbld
adc
fists
ja
sbbb
fnstcw
in
jns
cli
and
sub
aam
mov
or
jbe
gs
mov
jbe
mov
test
cwtl
push
or
addr16
insl
aas
push
add
test
hlt
xor
loopne
popf
and
adc
add
sbb
shl
dec
mov
ret
inc
sti
jg
test
xor
loope
jo
push
negl
aad
cs
sbb
and
ret
mov
cmp
rorb
pop
xchg
imul
stos
cmp
xor
xor
and
fsubr
add
mov
mov
lods
add
aam
data16
loopne
daa
imul
leave
ret
mov
or
arpl
jge
flds
sti
push
stc
add
lods
sub
mov
mov
xchg
fsubrl
xchg
aam
out
sub
loop
shll
fidivs
push
pop
mov
mov
test
add
icebp
inc
je
popa
repnz
sbbb
jge
lods
dec
lock
pop
inc
je
xchg
sahf
adc
cli
sub
stc
test
and
mov
adc
fmull
push
dec
popf
adc
cs
pop
mulb
mov
test
push
inc
shll
mov
push
aam
movsb
push
jne
subb
shlb
iret
xchg
mov
cwtl
fnstsw
sbb
scas
xchg
mov
add
cld
lret
out
jg
mov
inc
and
add
fwait
mov
push
mov
xchg
pop
ja
push
pushf
movsl
jge
dec
cltd
fldt
adc
and
insl
fs
xor
jle
dec
xchg
dec
xchg
mov
mov
in
adc
mov
jno
jp
pop
jl
pop
add
xor
xchg
pop
aas
insb
push
cmpsb
mov
into
in
lds
fldl
and
sbb
stos
and
fs
lcall
mov
mov
test
shll
cmpb
jecxz
icebp
lock
jg
or
test
pop
sbb
in
mov
or
mov
jmp
xchg
stos
adc
sub
push
in
mul
cmp
jge
lcall
notl
out
in
mov
add
sub
and
cmp
daa
xor
cmp
lds
or
cmp
out
ret
add
cli
dec
push
pop
and
add
or
and
jae
cmp
ss
mov
jns
xchg
pop
mov
les
popa
dec
fnstcw
xchg
mov
jge
add
push
lods
add
pop
jne
add
push
cmp
sbb
cmp
sbb
cmp
fistpll
pop
ja
imul
dec
push
popf
xorb
adc
sbb
jo
adc
das
out
cld
je
into
xchg
and
decl
push
push
fcomip
into
cmpsl
fadd
nop
mov
push
test
pop
push
lods
xor
in
das
and
mov
test
xchg
add
xchg
shlb
pusha
mov
lds
sbb
ss
jns
inc
fcmovnbe
sub
or
movsl
mov
fsubl
sbb
insb
xlat
mov
cmp
rcl
loop
jnp
je
mov
sar
cmp
lods
cmpsb
std
dec
addb
in
xlat
mov
lret
push
xchg
xor
jne
cmp
dec
aam
dec
outsl
xchg
sub
ja
popa
mov
mov
mov
cltd
fisubrl
jle
into
imul
into
inc
js
outsb
mov
lods
cli
or
mov
fidivrl
inc
sarl
dec
inc
test
pushf
and
leave
into
fwait
repz
mull
mov
xor
jge
divl
and
push
mov
es
pop
syscall
rorl
add
push
xor
test
pop
sub
jae
fbstp
sbb
mov
in
outsl
aad
std
xchg
lea
or
cs
out
pop
inc
cmpsb
arpl
lea
mov
insl
xor
or
in
pushf
into
pushf
pusha
inc
sub
add
and
fcoml
jp
nop
stos
lods
test
add
jmp
lret
js
and
aam
or
push
popa
xchg
testl
sbb
push
sbb
loop
mov
xchg
jb
stos
add
adc
lret
cmpsb
in
imul
jnp
sbb
jns
adc
jge
inc
xchg
or
cmp
daa
inc
jp
mov
cmp
subl
xchg
sahf
cld
mov
xchg
mov
jnp
test
push
jmp
xlat
inc
int3
in
push
dec
pop
insb
jbe
out
or
addr16
lods
cmp
mov
mov
sbb
repz
mov
mov
xor
jle
dec
insl
cmp
mov
out
ret
push
lret
cmp
jb
xchg
and
cwtl
loope
jnp
imul
sti
xlat
jg
xchg
sub
test
leave
scas
fsub
std
in
in
addr16
lock
jne
jo
in
add
aaa
push
xchg
rcll
mov
scas
and
jbe
fists
ret
jbe
mov
gs
and
bound
jno
xchg
add
xor
les
fxam
movsb
sub
push
sti
inc
jae
enter
xchg
sub
cltd
lahf
jo
inc
pop
cmp
les
xor
js
cld
mov
sbb
cmp
hlt
add
xchg
push
xchg
sti
mov
sbb
mov
cs
scas
cmp
and
ss
cli
inc
xchg
lret
lret
or
int
call
dec
insb
ljmp
sbb
or
fisttpll
shrl
les
popa
in
addr16
out
xchg
mov
nop
adc
stc
in
ljmp
aas
mov
out
ss
adc
mov
ljmp
push
mov
jl
gs
movsb
out
mov
jae
bound
lea
adc
aad
push
pop
cmp
xor
outsl
clc
push
mov
out
test
pusha
fidivs
das
shlb
cmp
mov
pop
lods
cld
xlat
imul
cld
in
bswap
sti
fcoml
mov
iret
cwtl
aas
into
into
ja
aas
hlt
icebp
repz
inc
xor
xchg
mov
fs
pop
and
out
pop
nop
ret
mov
repz
mov
andb
movsl
cmp
mov
daa
mov
sub
test
dec
aad
and
stc
dec
cld
std
insl
mov
loope
mov
ds
jp
shll
adc
sub
inc
inc
iret
out
notl
adc
jno
sub
pop
jo
orl
mov
lcall
cwtl
sbb
cmp
pop
fdivrs
xor
outsb
xor
jge
into
or
mov
pushl
test
nop
outsb
movsb
adc
std
xor
sub
into
jp
enter
outsl
push
lahf
int3
and
or
cli
push
xchg
mov
jne
pop
mov
rorb
orb
mov
les
mov
pop
sbb
sahf
leave
orl
aas
pop
ficoms
cmp
jns
push
fdiv
data16
xchg
std
add
adc
testb
testl
pusha
lods
movsb
test
push
loopne,pn
lahf
fdivrp
aam
fisttps
mov
dec
adc
dec
repz
or
cmp
std
jl
icebp
push
and
popf
dec
cli
and
sbb
mov
adc
sub
stos
out
icebp
lock
xchg
sub
icebp
xor
jl
es
pop
lds
hlt
add
xor
pop
mov
mov
inc
ljmp
cmp
cmp
jp
and
add
mul
hlt
dec
dec
cmp
test
xchg
imul
repz
aaa
stos
mov
adc
shrb
test
cld
mov
pop
in
ljmp
cs
mov
mov
aam
push
imul
repnz
das
data16
roll
jmp
push
daa
fdivl
loope
cmp
je
xchg
les
jmp
lods
icebp
outsl
cmp
mov
xor
stc
arpl
mov
cmc
ss
scas
push
ret
inc
repz
push
addr16
inc
inc
imul
jnp
mov
xchg
inc
push
in
xchg
push
pop
fstpt
lods
and
cmc
stos
lods
insl
mov
push
dec
dec
fidivrs
ret
cmp
sub
cmp
push
xchg
and
nop
cltd
lcall
jnp
xor
sub
pop
pushf
mov
inc
mov
cli
adc
and
mov
inc
shrl
jo
adc
ja
jno
outsl
jl
inc
sbb
xor
adc
xchg
push
mov
mov
push
add
imul
cmc
in
xchg
jnp
lds
call
inc
loopne
pop
dec
push
jecxz
push
add
inc
jecxz
fldcw
outsl
mov
les
sbb
sub
xor
mov
pusha
push
dec
jns
jb
les
mov
repz
mov
test
sti
pop
shlb
imul
fs
outsl
xor
push
div
push
xor
mov
aaa
arpl
stc
jo
in
jmp
or
lahf
pop
scas
in
sbb
push
pop
lret
addr16
xor
outsl
push
ret
mov
pusha
push
outsl
sahf
loope
ret
cmc
sbb
jno
scas
mov
add
mov
lret
dec
pop
pop
gs
xchg
dec
and
xchg
enter
push
xor
dec
sbb
divl
push
es
out
mov
lahf
inc
mov
cmpsl
es
es
pop
inc
dec
cmp
mov
pop
shl
cwtl
jp
mov
enter
push
stos
ret
outsl
dec
fsubp
pop
and
cs
pusha
sbb
gs
and
mov
imul
ret
fdivrl
repz
movsl
sub
cli
jge
fdivl
add
ficompl
pop
mov
addr16
rcll
mov
orb
sarb
shr
pop
mov
xchg
cwtl
xchg
mov
dec
pop
sub
ljmp
and
lahf
cli
shlb
dec
aaa
mov
daa
jmp
sbb
iret
icebp
dec
nop
xchg
out
push
in
inc
test
cwtl
ss
pop
test
fcomip
lods
mov
mov
ja
bnd
pop
std
in
pop
jl
stos
dec
add
mov
repnz
in
sbb
lds
mov
adc
pop
push
jbe
call
out
movsb
xchg
inc
shll
xlat
sahf
test
mov
mov
sub
sub
popa
sahf
adc
or
mov
stos
movsb
mov
jecxz
mov
push
mov
mov
fdivl
call
cmc
mov
aam
mov
add
out
mov
stc
stos
pop
mov
clc
jle
bound
or
push
push
insb
dec
and
inc
ja
cld
loope
shrb
jmp
adc
sarl
into
hlt
jle
jb
cmp
and
lock
jbe
fwait
and
push
daa
addr16
jnp
pop
sti
jbe
fld
inc
movb
outsl
rcrl
dec
out
fcompl
inc
jbe
jl
inc
cmp
inc
mov
sbb
xchg
loope
lock
inc
xchg
inc
mov
inc
pop
ja
pop
adc
inc
mov
sub
rorb
pop
data16
iret
ds
int
popf
mov
lcall
xchg
lods
hlt
testl
add
iret
in
push
xor
fimuls
adc
cmp
aas
cs
xor
ljmp
mov
das
test
orl
xor
and
add
inc
jge
xor
lahf
daa
cmp
push
mov
adc
cmp
xchg
addr16
outsl
inc
ficoml
and
mov
sbb
pop
cmpsb
lock
int
pop
daa
mov
dec
les
adc
mov
sub
int
push
cmp
lret
loope
inc
mov
imul
stc
ret
stos
or
data16
and
xor
adc
sbb
int3
sbb
js
add
adc
pop
jmp
scas
stc
jecxz
push
movsb
push
jae
push
xchg
jmp
adc
lods
or
cmp
cmp
xchg
daa
push
mov
out
in
sbb
pop
sub
sbb
pop
mov
es
xchg
xor
rcr
mov
outsb
adc
aam
jns
mov
mov
les
je
adc
cmpsl
mov
mov
rdmsr
mov
ret
xor
xchg
cwtl
out
ds
xchg
aad
ret
mov
adc
jae
fstpt
iret
inc
jb
sbbb
jecxz
sarl
xor
test
sbb
shll
outsb
and
mov
push
in
sub
mov
dec
test
push
jle
jno
das
fsincos
into
adc
rcl
es
push
mov
dec
jmp
push
sub
ss
ret
inc
fildll
and
mov
sbbl
mov
das
ret
and
xchg
cmp
mov
or
mov
mov
inc
les
outsl
mov
sbb
add
je
dec
fwait
test
add
repz
loopne
mov
int
adc
movsl
inc
daa
jp
outsb
fsubrl
mov
inc
pop
mov
cmp
pushf
fists
xor
adc
sbb
in
sbb
lock
mov
add
push
rolb
mov
and
adc
mov
cmpl
nop
push
std
testb
sub
cmp
arpl
xchg
jno
jnp
add
add
pop
mov
adc
xchg
adcl
sub
dec
insl
sbb
test
jo
push
xor
push
mov
in
push
inc
fstpt
push
insl
dec
mov
dec
test
sub
adc
dec
and
jle
add
ss
jle
push
cmp
xchg
and
sub
std
mov
mov
cmc
orb
push
repz
leave
jge
jae
push
pop
sbb
cmp
push
jb
xchg
jbe
jno
jle
adc
push
test
jns
or
pushf
cmp
fstps
hlt
mov
sahf
insl
repnz
cmc
incl
cltd
insb
outsb
lods
jmp
out
iret
or
enter
repnz
inc
fsubrs
sahf
sbb
hlt
lea
out
mov
dec
clc
xchg
mov
out
cs
mov
arpl
and
or
popl
lds
and
out
insl
ljmp
mov
fsubs
loop
lcall
inc
and
dec
pop
imul
pop
pop
mov
dec
insl
jns
sbb
pop
mov
mov
sub
or
sarb
nop
test
add
dec
mov
lods
dec
jp
push
orb
mov
test
mov
popa
shll
mov
data16
lds
cmp
push
data16
loop
mov
and
nop
cmp
shrb
xchg
aad
or
into
xor
cwtl
mov
mov
lret
pop
repnz
cmc
fdivrl
leave
cs
int
into
leave
ds
jg
pop
sub
iret
leave
sbbb
imul
test
fdivs
adc
dec
out
add
loopne
sub
shl
xor
cmc
stc
lods
sbb
mov
call
xchg
shr
nop
add
fs
cmp
stos
fdivs
jo
stc
mov
dec
in
rolb
out
cld
aam
out
out
pop
mov
and
mov
subb
insb
idivb
mov
xor
sbb
int
xor
dec
mov
mov
ret
sub
ficomps
lea
add
enter
xor
mov
movb
cmpsb
addb
ffreep
push
rol
jb
movsb
sbb
cmp
push
ljmp
outsb
stos
xchg
push
movsb
jmp
mov
xchg
push
cltd
push
jae
sti
ja
sahf
add
xor
mov
mov
ljmp
enter
out
sbb
cwtl
fsubs
mov
cmpsl
fisttpl
sbb
ljmp
outsl
lds
sbb
push
push
pop
xor
mov
sbb
lcall
notb
ljmp
cmc
adc
and
cmc
inc
int
mov
pusha
in
adc
xchg
pop
std
ja
push
jb
inc
cwtl
scas
mov
lock
icebp
dec
xor
push
sahf
sub
add
lret
lret
jne
push
mov
mov
inc
and
iret
and
jae
iret
pop
repz
pop
loope
mov
fst
rcr
jo
clc
loop
int
movups
cwtl
ret
add
push
push
xor
inc
sbb
pushf
inc
ss
or
jge
test
adc
mov
shll
push
lcall
incl
sub
testl
lds
jbe
xlat
rolb
or
fwait
pop
adc
push
sbb
mov
arpl
repnz
mov
sub
or
dec
insl
imul
insb
pop
adc
je
cmp
add
sbb
sub
leave
nop
popf
fsts
out
fildl
xchg
cmpsl
lea
addl
sar
jnp
les
push
movsl
mov
mov
bound
mov
orl
xorb
and
dec
mov
push
out
lock
dec
pop
sub
push
cmp
test
pop
pushf
rolb
repz
pop
stos
sti
pusha
sbb
xchg
fs
jnp
aam
lea
sub
icebp
push
stc
enter
addr16
sti
faddl
mov
add
popf
push
sub
mov
insl
notb
fcomps
mov
clc
push
push
xchg
xchg
insl
mov
mov
divb
xchg
pop
lahf
out
dec
fildl
test
rcr
sub
add
mov
jl
movb
or
mov
shl
sar
add
imul
xchg
cmp
xor
jmp
push
fcmovnb
shl
sarb
subb
push
lods
cmp
sbb
inc
int3
lret
mov
xchg
push
add
jl
into
xchg
jg
xchg
mov
cmp
sub
and
pop
pop
int
dec
dec
and
mov
fimull
roll
cmp
push
imul
mov
push
fidivl
fldenv
adc
das
dec
or
lods
sub
mov
jo
incb
daa
out
ret
scas
outsl
popa
sti
inc
inc
cltd
aaa
in
shl
std
xchg
and
aas
jp
cli
mov
dec
iret
aam
inc
jb
stos
adc
cmp
and
xor
mov
fsubrl
push
or
pop
push
mov
cmpsl
fistl
mov
fisubs
cmpsb
pop
outsl
fcoms
into
insb
push
movsl
in
mov
jns
int3
cwtl
ljmp
xor
lret
jo
jnp
push
jb
inc
sbb
cmc
sbb
jmp
lret
scas
js
in
lds
jnp
stos
sub
pusha
nop
mov
in
orb
mov
into
cmpsl
sbb
jae
xchg
inc
mov
sub
outsl
outsl
sub
cwtl
sbb
mov
adc
stos
ret
add
lds
inc
orl
clc
pushf
insl
lcall
jnp
loope
in
cmp
in
lcall
sub
lahf
push
lods
mov
pop
jno
je
aaa
xchg
pop
int3
xchg
dec
jl
inc
nop
cli
xchg
shrl
mov
sub
lret
std
add
lret
jae
fisttps
mov
add
inc
adc
xor
repz
jmp
outsl
and
lea
ljmp
inc
scas
sbb
imul
cmp
mulb
jp
aam
pushf
leave
test
sahf
test
rcll
xchg
pusha
cmp
mov
cld
lea
int
shll
inc
push
add
and
adc
mov
call
fmul
fdivp
inc
das
je
cld
sub
gs
or
dec
lret
sahf
fucomi
jae
rcl
dec
mov
xchg
sbb
loope
mov
loope
mov
insb
jno
sbb
adc
mov
mov
sbb
popa
mov
daa
sbb
mov
sbb
lahf
ds
repnz
and
mov
jp
push
cltd
jns
push
push
jl
xor
negl
hlt
sub
push
ss
dec
push
inc
inc
icebp
xor
imul
fwait
aas
mov
cmp
pop
nop
out
int
icebp
inc
lret
mov
pop
xlat
cmpsl
rcll
lahf
idivl
out
je
ja
fisttps
inc
or
add
out
pop
out
iret
mov
cmp
dec
ds
std
stc
ds
inc
push
dec
jp
cmp
mov
cli
jge
mov
adc
mov
call
cmp
sbb
sub
rolb
cmpsl
stos
neg
pop
xchg
es
push
adc
jbe
das
lcall
or
movsb
jl
inc
mov
adc
adc
int
jecxz
popa
add
andb
shlb
bound
adc
adc
je
push
jnp
movsl
mov
mov
or
jae
mov
pop
and
scas
inc
push
std
lds
loop
jo
data16
pop
xchg
out
fwait
aad
clc
je
xorb
cli
aad
xchg
jecxz
sbb
jno
in
jno
add
fs
fucomip
stc
iret
xchg
xchg
bound
enter
cmp
push
fnstsw
jae
movsl
adc
scas
dec
mov
test
jp
jb
add
lds
fisubrs
dec
addr16
test
pop
lret
cld
fucomip
imul
mov
cmc
fcoml
xchg
xchg
mov
cld
int
cmp
mov
push
inc
sub
add
fildl
pop
mov
adc
cmc
or
ljmp
sbb
clc
pop
add
xor
jl
lds
add
or
or
pusha
xsavec
cmp
mov
fbstp
sbb
or
or
stos
sub
add
rcrb
pop
mov
aaa
shlb
sbb
push
hlt
push
nop
cmp
push
call
or
jo
in
mov
sbb
shlb
in
pushl
ss
scas
jle
testl
popa
popl
pop
mov
or
enter
inc
les
sbb
add
cmp
mov
adc
fldl
orl
cmp
inc
repnz
loope
enter
loope
or
pop
xor
and
shrl
adc
lock
decb
iret
repnz
repnz
xchg
std
push
dec
aaa
mov
jmp
and
mov
js
call
je
sbb
pop
flds
enter
sub
sarb
add
sbbl
std
cmp
pusha
lock
dec
jle
rolb
xchg
and
pop
movb
adcl
movsb
pop
or
push
mov
inc
test
pusha
adc
addb
pop
rolb
dec
and
clc
or
cli
add
add
and
and
adc
or
addb
jbe
andl
and
xchg
and
adc
rorb
test
add
xor
es
dec
mov
or
inc
andb
mov
pop
out
lock
mov
call
mov
fbld
loope
std
jae
or
ds
pop
jns
pop
cmp
sahf
mov
aas
mov
int3
iret
jle
dec
lcall
push
mov
xchg
jbe
hlt
lahf
repnz
xor
addb
test
decl
pop
std
mov
loopne
adc
sti
mov
xchg
aas
mov
sbb
push
dec
jg
lahf
inc
push
imul
hlt
jle
fwait
cli
les
std
addr16
jge
add
xchg
xchg
pusha
adc
push
sarb
outsl
call
movsl
inc
lock
call
aas
hlt
lahf
xchg
pop
cmc
test
outsl
sti
xor
and
sub
sbb
setp
loopne
sbb
xor
cld
or
xorb
lds
mov
or
fistpll
dec
pop
mov
inc
mov
pop
incl
add
cmp
lret
dec
sbb
jle
data16
jo
cli
ret
mov
xchg
adc
loopne
push
adc
mov
nop
jg
cmp
pushf
adc
testb
or
cmp
test
fs
mov
jb
cli
movsb
mov
push
jg
out
mov
mov
push
test
pushf
popf
cmc
or
outsl
stos
inc
sti
notb
push
out
aam
std
mull
jg
call
sti
in
xchg
push
jle
fsubr
ror
cmp
cmp
fstp
lods
repz
lret
mov
stos
out
jns
ljmp
mov
daa
jbe
cld
adc
cmp
negb
jge
idivl
stc
pushf
daa
cli
xchg
call
inc
orb
cmp
push
xlat
jg
inc
cld
out
imul
xor
jnp
jb
xlat
idivb
dec
imul
adc
addb
pop
mov
mov
mov
xor
mov
fwait
shl
lcall
mov
and
in
inc
ret
adc
sub
lea
int
daa
test
inc
xchg
lcall
and
mov
sbb
mov
dec
loop
mov
inc
sbb
call
xorl
gs
arpl
xor
in
pop
scas
test
or
mov
push
daa
out
dec
mov
das
inc
adc
push
xor
xlat
and
int
orb
xchg
push
pop
mov
inc
aas
aad
sbb
jae
or
or
push
add
lahf
in
mov
jae
dec
xor
clc
pusha
xchg
push
adc
pop
and
in
call
movsl
out
adc
dec
fwait
sahf
es
sub
xchg
div
imul
pop
movb
out
sbb
push
jmp
js
popa
es
xor
jle
dec
and
inc
mov
xchg
cmp
daa
loop
fistpll
jns
test
jns
and
inc
pop
or
or
or
inc
icebp
and
adc
adc
inc
test
cmp
inc
xor
fidivrl
shlb
sahf
jnp
enter
jmp
push
sbbl
pop
and
fnstsw
xor
xor
sbb
in
ret
add
icebp
inc
jb
and
or
mov
cmp
or
push
mov
mov
sub
les
ret
pop
loope
ficomps
jle
xchg
xchg
cli
addb
cmpsb
aas
lods
idiv
xchg
mov
xor
jl
xchg
xchg
nop
out
in
shrl
hlt
add
mov
adc
test
in
adc
scas
imul
cmpsl
lea
stos
pop
mov
into
and
inc
and
ja
daa
xchg
loope
dec
test
mov
inc
ret
test
cmp
sbbb
dec
and
cmp
pop
sub
cs
das
jg
mov
xlat
ret
fstpl
test
fndisi(8087
insb
xadd
js
adc
add
and
rcrl
sub
push
adc
int
sub
push
ss
ja
mov
or
gs
push
xor
or
push
mov
arpl
adc
mov
dec
jno
popf
stos
popa
rcrb
xchg
test
insl
sub
fcoml
push
das
mov
inc
cmc
mov
lods
movsl
lret
lret
mov
xchg
and
xor
add
and
mov
test
mov
jp
xchg
pop
or
xchg
add
and
lods
cmpb
sbb
mov
lret
sbb
push
or
mov
in
mov
adc
insb
xchg
fistps
add
pusha
xchg
xchg
jge
std
pop
jb
jge
push
sbb
ret
xchg
and
insl
lret
into
and
mov
sub
es
jmp
loopne
mov
es
nop
imul
mov
xchg
shlb
addr16
dec
xchg
sbb
fidivs
mov
ja
pop
sbbl
out
fisttpl
sbbl
hlt
add
mul
pop
or
sub
jb
mov
sub
dec
test
push
rorb
leave
jne
ficoms
incb
xchg
in
popf
out
mov
jbe
mov
addr16
fwait
mov
out
mov
xchg
jne
das
addr16
adc
popa
lret
std
xchg
mov
popl
and
js
dec
insb
ljmp
pop
mov
in
lds
adc
cld
mov
out
insb
or
xor
sbbb
arpl
push
push
mov
lahf
sub
rcrb
mov
push
push
or
inc
dec
push
pushf
mov
dec
fsubr
and
inc
leave
out
cmp
xlat
adc
xor
out
movsb
or
mov
sbb
cmpsb
orb
pop
adc
xchg
in
pop
sub
aad
cmp
jo
inc
daa
dec
pop
inc
pop
mov
mov
pop
not
mov
outsl
sub
fdivrs
mov
xchg
mov
xor
mov
inc
addr16
xchg
lahf
test
outsl
inc
or
cmp
adc
pusha
in
jnp
jnp
pushf
daa
pushf
add
jle
pop
mov
push
jbe
test
sub
outsl
cmp
subb
jae
sbb
xor
adc
and
clc
jge
les
mov
loopne
mov
jecxz
sbb
adc
test
push
pop
daa
mov
and
pop
loopne
je
mov
cmpsb
pop
inc
popf
adc
or
out
test
pushf
mov
pop
test
dec
loope
jg,pn
or
cmp
pop
cltd
jne
cmp
sub
xchg
xchg
movsl
nop
aas
rorb
jl
fnstcw
or
adc
adc
lods
push
mov
data16
sbb
popa
dec
mov
loopne
repnz
sti
call
in
or
mov
nop
mov
pop
xchg
js
adcl
xbegin
test
fadd
bound
pop
push
mov
je
mov
push
iret
popf
and
fdivl
inc
mov
loope
add
lds
push
xor
push
shrl
mov
das
gs
xchg
je
add
cltd
arpl
mov
test
fwait
inc
push
pop
cwtl
les
mov
ja
fdivp
jnp
push
loop
xor
or
out
inc
jo
lods
sub
push
or
cmp
mov
das
mov
mov
or
cmp
loope
ret
shrb
shr
mov
lds
mov
aas
xchg
test
and
cs
fidivrs
pop
xor
push
inc
ds
pop
lock
icebp
sbb
cmp
mov
inc
jmp
pop
sub
mov
add
pusha
pop
xchg
fs
xchg
inc
icebp
xchg
mov
dec
or
mov
mov
sahf
ret
sbb
and
mov
pop
sbb
or
xchg
movsb
push
lock
cmp
bound
xchg
pop
xchg
test
pushf
mov
mov
mov
and
jb
incl
lahf
jo
cmp
movsl
ret
shll
arpl
sbb
inc
cmp
mov
fisttps
pop
jns
imul
cmp
stc
and
sbb
xchg
cli
bnd
xchg
add
push
inc
mov
rcr
fidivrs
xchg
inc
adc
adc
pop
cmpsl
push
cmp
dec
divl
push
mov
xor
xchg
mov
call
inc
adc
and
sub
mov
sub
mov
jecxz
icebp
mov
push
cmp
inc
in
cmp
les
and
idivl
push
cmpsl
jmp
loop
pop
andb
pop
mov
leave
in
or
fs
jns
dec
push
ret
cmovno
int
shll
insb
out
cltd
add
sub
es
push
push
repz
imul
jne
pusha
mov
mov
lahf
xor
pop
lods
movsl
sub
jo
xor
add
ja
mov
mov
dec
jp
xor
pop
pop
mov
xor
push
mov
lods
push
fildll
xchg
out
sbb
xchg
clc
mov
mov
fsubl
fs
gs
sub
mov
cli
dec
out
bswap
push
xchg
fisubl
cmp
add
mov
int3
outsl
pop
not
jns
and
or
testl
lret
aad
xchg
scas
mov
sti
push
std
mov
sub
insb
pop
movsb
inc
in
fcoms
icebp
or
das
adc
fbstp
xchg
inc
andl
clc
lret
pushf
lahf
in
push
movsl
pop
test
movsl
fstpl
das
and
pop
ret
pushf
ds
jb
jl
dec
jp
sub
test
pop
jecxz
xor
outsb
xchg
clc
testb
push
push
leave
pop
sub
sub
iret
xor
pop
pop
pop
cld
mov
ja
xor
push
mov
push
rolb
ficomps
pop
lahf
pop
cmp
lock
sbb
xchg
and
lret
shlb
push
into
sbb
xor
fmul
mov
pop
push
or
sbb
dec
push
pop
divb
icebp
in
dec
sub
pop
mov
ja
mov
inc
dec
xor
mov
mov
jge
outsl
rcrl
mov
fdivrl
outsb
ss
ficoml
loopne
bound
dec
xor
or
mov
test
das
outsl
js
int
jle
sahf
mov
imul
pop
jle,pn
mov
push
in
sbb
or
popf
push
nop
loope
jo
dec
xchg
data16
or
jno
jae
scas
movsb
pushf
loopne
outsl
push
idivl
mov
imul
xchg
or
add
mov
in
shrl
sahf
jne
test
xchg
pop
inc
fsubl
mov
mov
xor
lret
loope
xor
push
pop
jle
push
xor
lret
movsl
movsb
inc
push
dec
mov
mov
ljmp
mov
mov
jb
xchg
jp
fiadds
mov
and
mov
add
pop
xchg
jl
subl
loope
adc
xchg
lods
leave
das
push
adc
rcr
popa
jecxz
xlat
int3
jecxz
mov
out
sub
lcall
lahf
xchg
xchg
out
sub
aam
sbb
xchg
or
dec
hlt
movsl
jns
mov
ds
gs
scas
push
xchg
push
lret
fistpll
test
mov
inc
push
int
jb
lahf
and
pop
jl
filds
mov
movsb
scas
cmp
adc
mov
push
stos
mov
lea
xor
pop
push
arpl
push
xchg
lret
sub
mov
mov
xchg
ljmp
xchg
sahf
jmp
lods
inc
cmpsl
and
nop
ljmp
loopne
jp
rcll
sub
insl
push
cwtl
scas
sbb
pop
mov
sbb
xlat
dec
push
adc
aaa
ret
inc
stos
inc
mov
mov
mov
aam
pop
push
fsubrl
sub
lods
int3
rcrl
mov
je
out
fisubrs
out
imul
roll
push
inc
jmp
shl
test
xlat
stos
push
mov
jo
xchg
outsl
sbbl
ucomiss
arpl
dec
aam
sub
cmp
add
or
jne
in
mov
cwtl
pop
and
loop
scas
cltd
lods
test
jnp
xchg
pusha
push
daa
nop
jge
and
pop
cltd
or
fisttpll
mov
cwtl
popf
mov
out
mov
imul
imul
loopne
mov
add
cltd
icebp
pop
lret
xchg
idivl
or
sbb
mov
std
je
sbb
lds
sahf
icebp
out
xchg
lea
adc
adc
xchg
imulb
jl
push
mov
push
rcrl
insl
mov
fisttpl
sti
adc
xchg
push
aam
stos
lret
js
mov
xor
and
ret
inc
scas
add
add
gs
fisttpll
cltd
or
cmp
xchg
rcll
fisttpll
in
mov
sbb
or
pushf
outsb
jb
push
cmpsb
aaa
and
or
and
pop
or
sbb
push
mov
leave
pop
lock
popf
shlb
xchg
xchg
adc
test
push
dec
ret
xchg
data16
popa
mov
fildl
into
pop
add
adc
sbb
out
arpl
and
in
sbb
sub
das
lods
dec
and
mov
or
es
js
jo
mov
or
push
sub
jae
lret
out
clc
push
cmpsl
dec
add
xor
sti
loopne
xchg
pushf
fwait
inc
ret
shll
gs
or
mov
divl
jge
cld
into
mov
xor
push
dec
stos
aas
subb
fdivl
xor
ds
push
push
cmpsl
dec
imul
jno
xchg
inc
test
cs
and
js
in
mov
push
insl
add
jge
int3
ss
mov
jp
push
add
loopne
lret
xor
lds
sub
stos
gs
xchg
push
aad
bsf
adc
jp
sbb
ss
lods
imul
fnstenv
aaa
xchg
mov
aam
xchg
les
out
pop
call
into
repnz
enter
and
inc
lahf
pop
jmp
dec
cmpsb
leave
dec
adcl
sti
test
adc
sbb
or
inc
mov
push
loop
mov
add
jae
jl
xchg
pusha
jno
push
jnp
xchg
push
inc
fildl
mov
pop
dec
inc
pop
pop
dec
aas
xchg
xchg
pop
pusha
mov
shll
dec
lcall
arpl
push
push
pop
mov
hlt
mov
pop
int3
pop
or
cs
mov
jp
jge
or
filds
xor
xchg
add
rcrl
push
mov
cs
aam
aam
xchg
adc
or
cmp
les
imul
pop
icebp
xchg
std
xor
sub
pop
jbe
lret
mov
imulb
pop
test
mov
add
out
jno
out
je
pop
push
xchg
cmp
sbb
mov
pop
addr16
mov
sbb
rol
dec
pop
addr16
xor
dec
mov
frstor
mov
lds
xchg
aaa
mov
icebp
dec
popa
in
aas
and
inc
xor
into
push
popa
fmuls
lods
xchg
pushf
jbe
shrb
and
fimuls
ret
xchg
lea
adc
or
adc
test
sub
decb
fcoml
mov
out
or
xchg
iret
dec
ss
sub
inc
xchg
adc
out
dec
cli
or
xchg
cmpsb
sti
movsl
lcall
inc
rclb
mov
adc
adcb
lret
cmpl
or
or
test
sub
xchg
mov
pop
jecxz
in
aaa
dec
pop
cwtl
ffreep
dec
nop
inc
idivl
movsl
mov
test
mov
outsl
dec
cltd
jecxz
iret
push
enter
add
mov
fidivrl
inc
mov
xchg
mov
sub
jo
ficomps
or
aaa
pushf
into
sbb
xor
push
dec
icebp
int
mov
movsb
mov
jge
xchg
adc
xor
push
xlat
sbb
push
nop
xchg
dec
out
loope
loope
pop
movsl
ds
movsl
dec
fwait
popf
jnp
mov
scas
xchg
sbb
inc
sub
and
xchg
rcll
cmp
or
stc
sub
decl
jnp
sub
pop
dec
in
shrb
orb
fiadds
gs
lret
xchg
xchg
movsb
pop
or
or
or
clc
xor
faddl
loope
fisttps
int
outsb
movsl
sbb
jns
shll
cwtl
movsl
mov
mov
mov
loope
xor
push
insb
xchg
pop
sbb
add
push
push
fwait
imul
aas
dec
rcr
mov
mov
dec
mov
mov
pop
clc
test
adcl
push
repz
lods
mov
cmpsl
push
push
in
fs
out
cmpsl
mov
cmp
inc
push
jge
add
mov
js
lea
pop
mov
xchg
mov
jno
push
sub
and
add
inc
mov
fs
aaa
dec
xchg
mov
imul
mov
or
cwtl
ror
and
cltd
mov
jne
sub
insl
inc
stos
cmc
and
inc
repnz
es
sub
ret
inc
adc
repz
arpl
lods
mov
jmp
cwtl
inc
sub
mov
jne
pop
xlat
dec
bnd
out
add
sbb
mov
push
jge
mov
inc
pop
pushf
in
adc
std
arpl
aam
outsl
push
ss
movsl
dec
sub
cmp
outsb
iret
push
mov
in
or
iret
sbb
je
loop
mov
mov
jl
and
adc
test
pop
enter
push
sbb
xchg
das
lods
out
scas
lret
mov
xor
int3
or
push
std
jge
scas
inc
jle
sbb
mov
sub
in
cmp
loop
rorb
push
dec
sbbl
xchg
insb
inc
jns
mov
mov
or
das
mov
mov
es
int3
xchg
outsb
dec
pusha
inc
fiaddl
pop
rorl
into
or
scas
mov
iret
in
cmpsl
xchg
or
jbe
addr16
mov
cmp
cmp
jl
nop
adc
push
mov
in
aam
idiv
shl
dec
dec
dec
jle
mov
fistps
flds
pop
push
cmpl
aad
aas
sub
dec
mov
out
ret
lock
xchg
jne
inc
cmp
xlat
cwtl
jb
xchg
pop
cli
and
add
inc
dec
xor
or
std
sub
cmp
lret
jle
mov
dec
out
pushf
hlt
lds
push
xor
add
gs
push
add
sub
pop
adc
jne
sbb
js
arpl
ret
sbbb
lds
pop
xchg
outsb
sbbb
scas
mov
adc
inc
aas
push
ret
loop
pop
xchg
push
outsl
mov
sarb
push
add
xchg
mov
stos
movb
fwait
sub
mov
fsub
push
mov
pusha
popa
dec
and
xchg
push
shrb
xchg
in
mov
ret
sti
test
stos
out
and
addr16
dec
repnz
and
repz
fwait
out
movl
test
ror
jg
ss
pop
cltd
cmp
out
push
pop
xchg
dec
xchg
or
in
outsb
mov
sbb
aas
xchg
jae
fldcw
scas
inc
es
xor
adc
inc
hlt
cld
xchg
in
lock
ret
popa
or
cmp
pop
inc
sti
notb
or
jecxz
cmpsb
insl
dec
sub
mov
mov
imul
jbe
mov
sbbl
jno
int3
xchg
cli
lods
push
shlb
enter
arpl
lret
mov
mov
fsubrl
outsl
fisttps
mov
jo
push
es
jp
xchg
outsb
cmp
out
rclb
lds
testb
cmpsb
dec
cmc
push
pop
xlat
mov
in
lret
sub
jnp
adc
jge
repnz
sti
out
xchg
or
lods
xor
xchg
faddl
loop
adc
dec
add
stos
rcrb
push
fwait
wrmsr
and
mov
pop
pushf
and
sbb
rolb
out
leave
adc
jne
xor
in
iret
repz
fdivl
push
pop
cmp
in
dec
dec
mov
mov
xchg
jge
lcall
sbb
xchg
adc
xor
repz
leave
jl
mov
pop
nop
cmp
jmp
pop
dec
jg
jne
stos
mov
ljmp
cs
popf
push
jb
jnp
out
pop
test
mov
lcall
pop
jnp
jae
adc
inc
and
cmc
cmc
pop
repz
lahf
mov
sub
pop
dec
cwtl
outsl
sbb
mov
push
pop
fcmovbe
push
sbb
pop
push
int
bound
das
jno
mov
xchg
stos
pop
or
jne
pusha
loop
test
dec
inc
and
cmc
inc
rcrb
cs
cld
ficoms
push
jmp
bound
inc
out
cmp
pop
aas
sub
aad
sub
sub
outsl
test
mov
mov
movsl
dec
mov
mov
xor
insl
fs
push
popf
inc
sbb
add
mov
jne
cwtl
ljmp
push
mov
mov
lret
xchg
sbb
jb
pop
lcall
loope
mov
push
pusha
inc
sahf
inc
je
mov
or
lods
stc
out
lret
or
jmp
test
out
push
dec
je
sbb
mov
xor
push
dec
sub
iret
dec
mov
popf
mov
sbb
pop
cwtl
xchg
dec
dec
cld
inc
fisubs
iret
shll
sub
mov
scas
das
sub
mov
enter
sahf
testb
jo
cmc
rcrb
sahf
cltd
and
aaa
push
add
loop
gs
sub
lahf
jne
cmp
jns
aaa
sahf
fmul
xor
cltd
rolb
bound
jae
or
leave
add
adc
aaa
cmpsb
xchg
jl
movsl
xlat
pusha
mov
xor
mov
rcl
push
scas
dec
or
lods
test
jl
xor
add
sub
ja
nop
movsl
loop
add
out
rolb
or
dec
je
xchg
js
push
lret
mov
mov
enter
lods
adc
insb
mov
mov
pop
int
in
cmp
pusha
add
enter
mov
xchg
loope
mov
aas
lcall
fimull
neg
mov
mov
sub
mov
mov
pop
inc
and
push
icebp
cwtl
mov
je
rorl
jo
das
jno
sub
or
or
mov
pop
push
push
sbb
inc
lea
iret
fisubrs
adc
xchg
push
adc
test
mov
aam
in
xchg
push
mov
inc
jmp
ret
lea
orb
cmp
fdivrl
repnz
mov
hlt
sub
xor
notl
leave
pop
mov
std
jns
cmp
mov
cmpsl
mov
mov
adc
sub
jle
sub
adc
bound
test
sub
ljmp
jmp
lods
stc
push
gs
mov
ja
or
pushf
insb
jns
inc
mov
push
test
and
jnp
loope
jae
movsl
jne
mov
stc
icebp
sub
sbb
push
xor
sbb
sub
sub
fstps
xor
filds
jne
popf
mov
dec
ja
adc
fwait
pop
es
mov
jle
mov
shrb
jmp
adc
jno
cwtl
pop
pop
subb
xlat
lea
pop
and
adc
jle
out
cmpsl
inc
dec
jne
pop
ds
add
and
mov
push
nop
xchg
mov
mov
push
jne
fwait
bound
ret
arpl
fidivrl
adc
cli
in
pop
leave
push
xchg
xor
xor
push
sub
aam
movsl
xor
mov
loopne
jecxz
gs
aam
fstpl
xor
sub
sub
jns
insl
or
stos
icebp
xor
insb
mov
test
jo
fisubs
repz
scas
mov
cmp
aad
inc
sbb
je
popf
dec
test
mov
iret
ret
adc
jge
je
in
mov
sbb
push
xchg
and
or
int
sbb
gs
cmp
xor
enter
xorb
jp
jle
hlt
pop
addr16
sbb
push
xchg
and
fisttpll
mov
push
divb
xlat
shlb
fdivl
mov
jne
cmc
fstps
insl
bnd
cmp
sbb
hlt
insb
ljmp
cli
ss
into
inc
outsl
or
push
mov
dec
fnstenv
sub
or
pop
cmp
lret
cwtl
loopne
jns
fxch
sbb
orb
aas
add
lods
lea
xchg
push
push
mov
movsl
loop
push
or
lahf
mov
loope
mov
pop
and
out
xchg
adc
fsts
nop
iret
scas
xor
jno
mov
adc
sbb
pop
adc
flds
and
call
cmpsb
nop
xor
mov
pop
mov
inc
and
dec
mov
add
cmp
sbb
jne
jae
adc
ss
std
sub
bound
ds
pusha
xchg
mov
ss
xchg
je
pop
es
pushf
dec
inc
adc
mov
movsb
ds
add
mov
popf
or
decb
rep
adc
mov
imul
fdivrl
scas
xlat
mov
dec
mov
imull
inc
mov
and
stos
hlt
cmp
outsb
insb
pop
jne
jmp
stos
cmpsb
xchg
jmp
jno
out
mov
inc
popf
in
jp
and
inc
jl
pop
jecxz
std
data16
loop
fdivl
sti
int3
mov
cmp
inc
pop
aad
jge
cltd
loop
cltd
int
push
ljmp
cmpsb
sahf
push
fwait
jp
ret
xchg
ret
mov
jle
push
dec
jle
jge
frstor
inc
and
imul
enter
mov
sub
mov
cmpsb
or
push
add
or
in
mov
xchg
in
cmpl
mov
stc
mov
pop
ljmp
addl
popa
mov
xchg
xchg
seta
repz
shr
adc
lcall
aam
mov
cli
inc
in
ret
pop
add
pop
pop
mov
das
jns
push
adc
xchg
test
mov
adc
adc
mov
inc
sbb
daa
jnp
jecxz
xlat
imul
xor
mov
in
xor
lret
mov
in
jbe
iret
inc
movsl
adc
test
xchg
ljmp
adc
jmp
test
fstl
pop
subb
outsl
xchg
push
and
xchg
cmpsb
nop
mov
aam
icebp
divl
cmp
push
sub
shlb
adc
lcall
mov
lcall
jmp
in
loop
inc
xor
and
and
xchg
jb
jl
and
mov
loop
icebp
cmp
scas
mov
lret
shlb
cmc
xchg
les
idivl
cmc
pop
cs
lcall
ss
popa
sarb
mov
xor
test
faddl
pop
mov
scas
out
out
inc
mov
mov
xchg
dec
xchg
jns
sbb
int3
pop
dec
lods
sbb
and
popf
mov
loopne
adc
mov
or
nop
mov
aas
jb
out
sub
test
sbb
dec
xchg
btc
cmpsl
mov
sbb
imul
jmp
data16
scas
xchg
out
dec
hlt
xchg
sub
mov
push
iret
and
mov
pushf
xor
loope
lds
scas
or
aam
dec
cmp
leave
out
shr
jp
nop
dec
mov
aam
or
push
daa
repz
lods
movsb
imul
mov
fisttpll
outsb
add
dec
add
ljmp
adc
xor
lock
cli
mov
or
insb
sar
lahf
stos
movsb
cmp
popa
add
xor
ret
pushf
in
add
je
or
sti
imul
inc
scas
adc
sub
sahf
ret
int
push
mov
inc
push
push
inc
frstor
xchg
jmp
dec
adc
out
jle
inc
lods
testb
jo
icebp
int3
sbb
dec
xchg
xchg
mov
imul
lods
mov
bound
and
cmp
and
hlt
or
sahf
sub
icebp
pop
adc
mov
fwait
and
or
sbb
repz
inc
cmp
add
inc
inc
scas
icebp
gs
add
sbb
dec
cmp
je
test
push
pop
push
js
sub
arpl
sbb
jmp
push
cld
scas
cmpsb
fcoml
sub
push
sub
xor
iret
int3
subb
push
ss
inc
fs
fadds
aam
mulb
dec
popa
jecxz
nop
mov
dec
shll
add
arpl
mov
mov
inc
adc
in
jmp
outsb
bound
das
repnz
or
lahf
inc
xchg
bound
xchg
roll
fwait
clc
fistl
in
xchg
fcomps
test
xor
ret
inc
dec
push
mov
loop
dec
and
sti
cs
icebp
pop
push
adc
cmp
lock
or
jg
ror
pop
fstpl
pop
pop
daa
mov
mov
adc
cmp
fwait
xor
cmp
jg
into
enter
mov
lds
or
outsl
insb
pop
fwait
popf
xchg
jae
xchg
lods
fcoml
lock
pop
adc
push
jle
xchg
shr
mov
pop
jg
push
jb
pop
shll
sub
rorl
add
pop
xor
xchg
dec
fisubs
xchg
rcr
lcall
or
ja
stos
and
cmp
stos
std
dec
add
mov
pop
pop
out
seto
xor
mov
lret
dec
pop
and
xchg
push
pop
jno
cltd
push
sbb
ret
lods
pop
jo
push
push
pop
sub
sub
or
into
inc
pop
int3
das
das
mov
mov
arpl
pop
aas
loop
fdivrl
mov
dec
popa
in
je
xor
adc
cmp
and
cmp
mov
push
adc
inc
call
add
xchg
mov
mov
loop
cs
repz
cmc
pop
fnsave
hlt
dec
ret
or
push
inc
or
stc
inc
cmp
js
es
mov
sbb
mov
mov
add
loop
xchg
aas
dec
mov
xchg
fldcw
ds
jno
or
fsubrl
jp
mov
or
gs
incb
jns
inc
pop
xor
movsb
jg
xor
call
dec
lock
and
or
xor
cwtl
adc
repz
mov
adc
sub
xchg
pop
xchg
jbe
std
hlt
sub
mov
mov
add
scas
cmp
ds
mov
pop
or
mov
lods
mov
das
cmp
popa
out
jo
jecxz
sbb
mov
lcall
lahf
mov
dec
jle
push
lock
or
pop
and
js
repz
insb
les
inc
and
and
setnp
jae
aas
insb
mov
out
int3
mov
repz
and
dec
loope
pop
jb
mov
mov
sarb
jb
xchg
mov
add
std
push
jno
pop
std
cs
in
fwait
mov
rcrb
adcb
cmp
dec
addb
pop
hlt
jg
leave
in
push
js
test
gs
aam
jnp
ljmp
dec
cmpsb
push
adc
out
sub
adc
outsb
pop
cmc
cltd
mov
sbb
push
push
xor
mov
and
xor
ja
imul
fsubl
lock
inc
mov
mov
jns
push
sbb
inc
es
andb
clts
xchg
pusha
inc
loope
pushf
sbb
stos
outsb
jmp
lcall
fcomps
ljmp
add
add
cmp
andl
dec
push
jo
lret
clc
jns
out
jle
test
pop
jnp
aaa
jnp
jne
sarb
out
dec
mov
sub
cltd
xchg
sub
and
gs
pop
in
sub
hlt
cmp
loope
stos
popa
aad
mov
cmp
out
xor
or
mov
mov
jne
cmp
lret
sbb
sahf
dec
xor
rcrl
dec
jb
mov
cmp
loop
dec
lret
mov
idivb
sahf
mov
repz
addb
sub
dec
sub
sub
out
jb
es
mov
inc
mov
mov
fdivrl
xor
enter
sub
int
repz
loop
adcl
mov
sbb
push
push
out
bound
fcoml
dec
xchg
ret
mov
pop
inc
pushl
adc
in
jmp
inc
je
lret
mov
dec
lret
les
xor
negl
jae
ret
inc
leave
xorb
push
xor
ret
out
mov
cmp
inc
push
dec
imull
loopne
mov
xor
sbbl
movsb
dec
std
push
idivb
dec
xchg
xor
dec
scas
jne
stos
stc
sbb
addb
add
out
out
out
out
out
out
fsubs
fstp
frstor
out
out
in
adc
mov
addr16
mov
gs
ret
mov
cmp
xor
pop
sub
or
into
fldcw
test
dec
xchg
fidivrl
push
dec
roll
repnz
mov
fmul
ret
push
inc
jge
ljmp
lds
lds
test
push
pop
aaa
mov
jecxz
lock
sub
adc
mov
pop
mov
test
add
insb
fs
out
push
inc
stos
mov
mov
nop
mov
nop
or
in
push
sarb
adc
addr16
jl
bound
dec
add
adc
arpl
fisubrl
in
and
repz
dec
xchg
cwtl
pop
mov
cmp
push
int3
mov
xorb
in
mov
testl
test
je
pop
dec
cmpsl
ja
lods
sub
sbb
cmpsb
out
and
sbb
loop
adc
mov
xor
inc
lret
jne
ss
pop
arpl
scas
jle
loope
add
pop
in
lret
jnp
jp
daa
add
jbe
ljmp
sub
fcomps
insl
mov
push
jle
daa
int
adc
test
arpl
mov
in
test
imul
fbstp
mul
dec
push
loope
push
scas
adc
mov
push
cli
add
push
je
inc
fcmovnu
sbb
or
mov
xlat
jbe
pushl
rorl
sub
cmovp
jnp
mov
dec
test
clc
dec
inc
sti
hlt
ds
in
clc
mov
sbb
aaa
cmp
out
fistps
inc
mov
sub
test
xchg
lret
inc
test
xor
sbb
xor
inc
in
test
jecxz
push
insl
dec
stos
outsb
push
mov
add
pop
clc
jns
cmp
fildl
dec
outsb
jbe
lret
cli
sub
push
ds
dec
orb
dec
pop
push
pop
imull
dec
in
or
inc
mov
clc
les
or
loop
jne
jne
xchg
sub
cli
ret
mov
movsl
mov
ja
arpl
inc
mov
mov
arpl
jnp
das
mov
adc
xchg
in
sub
add
push
xchg
adc
sub
icebp
ja
popa
jb
enter
arpl
push
movsl
popf
cmp
xchg
mov
inc
call
add
xchg
imul
stos
into
shll
sub
enter
xor
mov
push
inc
xor
cmpl
mov
push
int
sahf
aas
sub
push
mov
test
lods
fldt
ljmp
push
push
dec
pop
test
cld
pushf
outsl
out
pop
add
cs
sbb
jge
push
sbb
or
sbb
xchg
jg
push
xlat
cli
sub
dec
cli
std
aas
neg
cmp
outsb
lret
jle
xor
shll
mov
mov
shrb
lock
inc
insl
loopne
into
ds
icebp
add
mov
int
adc
mov
mov
adc
orb
mov
les
ljmp
arpl
dec
cs
push
lret
cmpsl
call
imul
out
ljmp
not
pop
add
pop
xchg
aad
xlat
mov
sbb
xchg
push
xor
jle
hlt
cld
leave
sub
adc
cmp
pop
rolb
aad
mov
xchg
xchg
lahf
or
push
insl
add
adc
jp
inc
rcrb
push
out
cmpsl
cmp
pop
loop
arpl
scas
sbb
cmp
cmp
or
sub
push
stos
cmpsb
and
push
cltd
push
cmp
xchg
hlt
test
sbb
mov
mov
mov
loopne
es
out
jb
or
cmp
or
bound
aas
sub
mulb
ljmp
sarl
ficoms
movsb
add
rcrb
adc
fisubrs
ljmp
das
pop
int
lods
dec
test
je
out
jno
rorl
sahf
std
mov
fwait
jbe
dec
inc
aaa
scas
repz
sbb
incb
cli
lock
sahf
rorb
shlb
aaa
loop
inc
into
out
inc
adc
pop
insb
cmc
mov
xchg
ficompl
cwtl
notl
and
mov
pushf
outsb
and
icebp
and
adc
shld
mov
pop
lds
mov
movsb
sub
mov
iret
shrb
push
mov
push
add
int3
xchg
push
sbbb
adc
cmp
and
mov
jmp
in
jne
les
cmp
dec
sbbb
gs
hlt
fcomps
push
jecxz
mov
in
push
test
xlat
sub
cmp
ja
mul
dec
movl
imul
icebp
test
jge
fsubs
leave
mov
push
imul
jmp
nop
fdivrs
push
ss
inc
sub
das
mov
cmp
push
stos
cwtl
hlt
mov
out
jns
dec
out
aaa
aas
push
iret
sbb
scas
jg
shll
cli
push
loop
cld
adc
push
stos
sub
lock
mov
call
loope
inc
mov
pop
fwait
cmpsb
repnz
push
out
arpl
scas
js
clc
stos
sahf
cmpl
ret
push
xor
je
and
sub
inc
out
jge
xchg
and
sbb
ret
push
xlat
imul
fcompl
inc
inc
xor
pop
and
pop
and
je
test
cwtl
jp
lret
dec
shr
js
mov
pop
sbb
stos
cwtl
repz
jl
xor
mov
ficoms
xchg
clc
mov
vucomisd
fwait
jl
pop
stc
ficompl
test
cmp
loopne
cmpsl
pushf
xchg
hlt
lods
sbb
pop
shl
jge
mov
cs
adc
sti
add
fdivs
inc
sub
xor
sbbb
pop
jl
xor
inc
movsb
jno
push
inc
scas
adc
test
gs
ret
shrb
and
add
mov
inc
into
nop
int3
sbb
cmpsb
jmp
test
lds
popa
adc
sub
sbb
xchg
sbb
xchg
push
loop
mov
push
je
sub
jne
mov
negb
and
jne
inc
xor
lea
repz
out
xchg
xchg
adc
cmpsb
push
xchg
das
mov
rorb
scas
lods
dec
adcl
in
repnz
push
push
mov
test
scas
js
shrl
dec
jne
or
lret
dec
mov
pushf
cld
jge
pop
ret
in
sbb
lods
push
xchg
gs
inc
test
xlat
push
mov
mov
aam
lds
int
cmpl
adcl
mov
cmp
ds
sub
aad
fsubr
jmp
incl
mov
or
jp
push
popf
lock
dec
loope
xchg
fcoms
in
mov
xor
push
push
adc
cmpsl
and
dec
mov
sbb
adc
inc
in
mov
add
xlat
inc
cmpsl
inc
xchg
js
fwait
sub
add
inc
daa
aas
sub
adcl
xor
aad
mov
nop
mov
dec
mov
std
and
loopne
mov
mov
mov
insl
idiv
cmp
lret
aaa
sub
shll
in
mov
sti
push
cltd
sub
push
in
cmp
push
dec
mov
and
mov
hlt
movsl
push
add
into
mov
shrl
sbb
sub
movsb
xchg
imul
lea
nop
fcmovnu
pusha
out
and
loope
hlt
add
scas
scas
xorl
xchg
jo
push
and
and
pop
in
pop
ficoml
mov
mov
mov
test
stc
movsb
xchg
mov
lods
jb
mov
addr16
xor
mov
jecxz
and
std
call
cltd
xlat
and
cltd
inc
hlt
jl
mov
iret
jmp
insl
bound
lods
fwait
xchg
cltd
int
mov
mov
es
and
test
movsb
stos
cmp
fsub
push
xchg
imul
pusha
push
aas
loopne
add
loope
xchg
in
cmp
lea
add
notb
fdivrp
popa
jle
adc
mov
stos
push
pop
jge
lret
movsb
jecxz
lods
imul
push
sbb
scas
jae
out
mov
lds
inc
inc
mov
pop
inc
mov
out
adc
dec
pop
nop
sarl
jae
imul
push
dec
orb
or
cmp
sub
fnsave
mov
scas
xor
push
mov
jae
cmpsb
jo
sarl
dec
popf
adc
in
cmpsl
cmp
cltd
mov
mov
jl
mov
sbb
push
loop
mov
into
cmpb
xor
movsl
cmpsl
sub
mov
movsl
xchg
push
sub
lds
cltd
aam
imul
sbb
dec
jle
adc
cmp
clc
dec
jno
mov
mov
cld
fs
xchg
jne
movl
les
xor
mov
and
fucom
sbb
jbe
xor
mov
mov
inc
jae
mov
lcall
push
or
scas
and
in
aam
jne
push
fsts
inc
mov
test
mov
lcall
clc
xor
lret
add
int3
enter
mov
fcomps
or
xchg
dec
jo
add
ss
dec
jmp
out
jne
push
movsl
inc
pop
and
in
das
jle
fildl
daa
pop
outsb
sbb
or
or
jae
shl
jae
push
stos
imul
lahf
sub
repnz
sub
test
pop
into
mov
inc
adc
stos
imul
addl
mov
out
xchg
cwtl
add
and
sahf
shll
add
jne
ret
rorb
testb
add
loopne
fucom
mov
mov
leave
xlat
lods
movsb
ss
cmp
inc
mov
rclb
sub
aad
cmp
sahf
mov
push
mov
rol
pusha
dec
pop
adc
push
movsb
fmul
jle
shrl
ljmp
jno
stc
mov
lds
leave
icebp
jl
inc
ss
jcxz
mov
test
es
adc
adc
lahf
es
adc
stc
je
sbb
ds
sbb
stos
jmp
mov
call
push
inc
in
lahf
mov
jecxz
arpl
pop
lock
into
sbb
mov
scas
sti
sub
in
jle
call
data16
out
pop
jge
xor
pop
dec
xchg
push
mov
or
dec
cmp
loope
cmpl
adc
xor
cltd
jns
lods
jge
scas
xchg
shl
add
rcl
inc
and
cmpsb
or
jg
jnp
lods
adc
fmuls
and
xchg
or
mov
movsl
mov
rcr
pop
aam
clc
pop
cmp
jp
fsubr
nop
xchg
and
cltd
ja
mov
int3
sub
enter
and
push
push
pop
adc
mov
or
fcompl
sub
inc
sbb
daa
or
cmp
xor
shlb
jmp
mov
fwait
dec
movsl
inc
sahf
xor
mov
or
out
jne
dec
push
xor
mov
es
ret
push
popf
fisttps
xchg
ds
and
push
pop
xchg
sbbb
leave
xchg
sbb
scas
dec
sbb
lds
mov
push
outsb
pop
adc
dec
test
aad
das
mov
dec
ss
xchg
pusha
inc
jbe
mov
pop
lahf
mov
fists
or
fistps
outsb
cmp
push
xlat
scas
and
xor
mov
sub
xor
mov
fisttpll
hlt
lods
sbb
xor
shlb
add
sub
in
pop
and
mov
mov
inc
push
sbb
imul
jne
add
enter
loopne
iret
imul
fisubs
mov
divb
cmc
add
arpl
add
and
jp
sub
js
notl
sbb
dec
xchg
ja
out
shrl
lcall
int
sbb
scas
cmp
mov
subb
mov
pop
scas
setno
mov
add
mov
cs
cmc
mov
icebp
out
xor
and
push
test
jmp
lds
push
cli
mov
adc
jnp
test
andl
dec
hlt
nop
or
xchg
push
daa
cmp
add
int3
rcl
bound
jns
jl
dec
loopne
jns
xchg
adc
mov
ss
xor
fadds
in
icebp
inc
jp
adc
movsl
mov
lcall
pop
int
out
and
mov
and
cmpsb
or
jp
cs
je
aam
addb
lock
sub
adc
jl
jno
fsubp
dec
or
mov
adc
clc
cmp
xor
xor
rcrl
incl
add
nop
ret
sti
adc
arpl
sbb
adc
mov
push
es
ja
lods
pop
in
mov
cmp
cmc
je
and
lret
popf
sarl
inc
xchg
scas
push
js
mov
xchg
sbb
loope
adc
popf
xorb
mov
fwait
stos
cmpsb
xchg
lret
ret
gs
mov
leave
dec
push
mov
scas
sar
sti
sbb
xor
lds
cmp
mov
jp
loop
jbe
adc
lret
or
jnp
cmpsb
dec
clc
push
inc
les
fsubr
mov
jecxz
xchg
aaa
les
cmp
ror
push
jns
xchg
scas
popa
mov
and
lret
lahf
fwait
cwtl
mov
adc
mov
pushf
mov
into
xchg
mov
sbb
mov
js
xor
push
xor
pop
inc
fldl
adc
or
or
pusha
adc
push
jp
push
inc
or
popa
mov
adc
mov
scas
xor
mov
sub
cwtl
xchg
fsubr
inc
mov
stc
sbb
xor
cmp
shrb
clc
sub
sti
jle
dec
ficoml
and
fmull
push
das
or
rcl
mov
rclb
and
push
leave
insb
jno
hlt
imul
imul
scas
xor
xor
and
dec
xchg
add
out
scas
mov
ljmp
xchg
fwait
imul
dec
fisubrs
cmp
or
xchg
xchg
dec
inc
mov
mov
fwait
dec
xacquire
fldt
lea
adc
sbb
xchg
fsubrs
nop
dec
jnp
dec
fsubrs
pop
dec
pop
clc
mov
loopne
stos
aas
pop
cvtdq2ps
mov
lret
jbe
cld
cmpsb
xchg
mov
xor
and
sahf
bound
ljmp
add
lea
xor
pusha
lods
pushf
or
inc
dec
scas
lods
icebp
lret
negb
xchg
pop
repz
cli
dec
insb
mov
cltd
or
add
dec
xchg
repz
movsl
in
and
stos
subl
pop
adc
inc
sbb
sub
cmp
push
lods
mov
mov
fldcw
xlat
out
shrl
bound
mov
sti
jl
add
and
std
loopne
jno
ret
dec
shrb
adc
xchg
xor
mov
mov
test
lds
push
out
sbb
push
insb
fsubrs
add
push
push
pop
pop
push
cmp
sub
rclb
xchg
loop
adc
rclb
or
out
push
out
jns
jl
xor
adc
ja
pushf
popl
loop
in
xor
push
jecxz
xchg
pop
fcom
xchg
icebp
sahf
sub
and
xchg
sub
aaa
mov
mov
push
cmp
or
jnp
outsl
sar
pop
inc
scas
ret
xchg
jbe
mov
xchg
mov
dec
mov
fwait
or
pop
cmp
insl
dec
lods
and
sbb
sbbb
enter
pusha
adc
mov
test
xor
cmp
xor
lods
inc
adc
int3
dec
and
mov
jge
push
xchg
rcll
and
mov
and
jno
std
jbe
pop
stc
inc
test
xchg
push
jns
cwtl
sbb
lea
mov
sbb
push
mov
leave
mov
xchg
ds
push
shlb
jle
orl
mov
je
push
push
popf
xor
push
mov
push
xchg
jno
xorl
dec
push
pusha
jmp
or
push
mov
dec
push
jmp
mov
in
push
addb
adc
subl
pop
cltd
cmpsb
push
mov
pop
mov
and
or
pushf
sub
mov
lock
add
cmp
or
loope
in
sbb
inc
mov
loop
adc
cmp
sub
mov
negb
sbb
cli
dec
sahf
mov
lods
ficomps
scas
xchg
sbb
add
cmp
cld
js
jnp
and
pop
push
jmp
daa
hlt
js
push
mov
cwtl
mov
and
add
fnstsw
inc
dec
data16
stos
xchg
cmp
jmp
sbb
shlb
inc
sub
mov
jbe
xlat
lret
loope
push
xchg
arpl
jnp
call
sub
inc
dec
in
movsl
sahf
lret
dec
movsb
in
cmp
test
dec
jne
ret
lea
adc
testb
js
and
or
mov
sar
fcomip
mov
jne
adc
cwtl
add
mov
jns
sbb
dec
xor
add
sbb
dec
nop
lret
push
roll
mov
insb
cmp
sbb
dec
and
loop
jle
imul
in
sub
dec
or
jl
lahf
mov
clc
aad
out
sarl
data16
inc
outsl
or
add
aad
out
and
push
cmp
pop
lret
daa
mov
mov
pop
test
mov
hlt
sub
cmpl
loop
inc
adc
shl
orl
ja
mov
xor
mov
push
xlat
int
xchg
mov
call
movb
sub
mov
pop
repnz
pop
cmp
cmp
mov
cwtl
insl
jbe
pop
push
adc
push
jmp
fbstp
and
xchg
jge
loopne
out
out
push
js
mov
sbb
mov
pop
fmull
test
subl
inc
mov
push
call
cmp
pop
cmpsl
pop
loopne
test
xchg
js
mov
pop
and
hlt
add
ret
mov
jp
push
pushf
mov
shl
ljmp
lahf
push
cmpsl
fistps
dec
dec
or
ljmp
push
mov
pushf
stos
push
and
sar
sub
ret
aas
enter
insl
inc
xchg
jo
popf
scas
xchg
ja
mov
push
pop
push
inc
jnp
int3
mov
cmp
pop
movsl
cmpl
in
mulb
xadd
jb
pop
jp
xchg
ret
jle
inc
test
mov
out
popa
xchg
or
mov
daa
xor
sbb
cli
lods
je
pop
loop
or
jle
mov
push
es
pushf
push
lods
test
movsb
fildll
fldcw
faddl
dec
rcrl
and
xchg
rorl
push
sti
xor
sahf
pushf
ja
hlt
or
cmp
outsl
jno
std
pushf
loopne
dec
lcall
inc
add
in
jp
inc
push
lock
push
inc
ljmp
test
cwtl
sti
negb
stos
jbe
and
push
lcall
mov
and
mov
mov
stos
pop
sti
out
sti
mov
sub
jbe
xor
movsl
adc
hlt
sub
xchg
pusha
inc
arpl
popa
sub
xor
xor
lahf
jp
pushf
or
shlb
mov
out
xchg
or
cmpsl
fwait
std
lea
dec
mov
test
fwait
dec
leave
test
pop
adc
and
iret
mov
cmp
push
dec
pop
shll
movsl
mov
dec
cmc
sub
mov
inc
negb
enter
inc
xor
pop
jae
lea
jge
jns
rol
push
sub
cmp
adc
mov
shrl
jne
es
scas
arpl
push
sub
idivl
sbb
fsubl
cld
repnz
dec
std
ljmp
sbb
imul
icebp
in
add
xor
xchg
pop
push
out
sar
mov
mov
mov
or
jg
repnz
ljmp
cmp
pop
test
insb
fiadds
jnp
and
test
xchg
or
mov
pop
insb
les
lcall
cmp
mov
das
mov
xlat
push
inc
xchg
pop
mov
push
sub
mov
inc
sbb
sub
xchg
loop
mov
cmp
cld
cli
adc
ret
je
mov
mov
daa
pop
lods
aam
mov
xchg
mov
mov
in
or
push
xorl
jnp
dec
in
fildl
int3
icebp
repnz
cli
or
and
jecxz
arpl
outsb
mov
pop
ret
push
dec
ljmp
push
nop
push
ds
stc
adc
sbb
add
lds
adc
call
inc
repz
out
iret
pop
pop
push
sbb
inc
iret
xchg
mov
cmp
sbb
sbb
mov
cwtl
pop
test
cmp
dec
xchg
push
sarl
pop
xor
pop
mov
out
iret
sbb
pop
jae
adc
mov
add
or
jmp
push
es
ficoml
lret
jns
add
sub
faddl
or
xor
les
jp
cmpl
mov
ja
mov
adc
sub
inc
push
mov
cli
aaa
imull
enter
dec
lcall
sub
aaa
stos
cli
xor
scas
cmp
xor
jge
xchg
sub
lods
movsl
sub
and
es
outsl
jb
popf
movsl
rorb
and
xchg
xchg
push
stc
cmpb
fistps
pop
add
cmp
or
lods
cmc
in
xor
mov
addr16
dec
addb
popf
nop
jo
sub
jne
cmp
and
push
push
outsl
ret
jmp
and
push
negl
mov
stc
dec
add
movsl
ja
mov
xor
cmp
call
xchg
sbb
and
pop
jecxz
adc
cmp
daa
and
xor
imul
stos
jmp
scas
or
cmpsl
rep
aas
idivl
add
jb
cmp
iret
sbb
test
mov
ficomps
push
mov
dec
jbe
sub
cltd
popf
fdivs
cmp
adc
scas
clc
mov
leave
int3
lods
and
es
sbb
add
loope
xchg
test
inc
push
mov
ret
mov
jge
mov
pop
inc
push
orb
enter
adc
sbb
mov
dec
cmp
pop
jnp
push
movsl
sbb
mov
popa
pop
dec
loopne
fs
addb
adc
pop
cwtl
lock
adc
mov
fisttpll
mov
mov
aad
fidivrl
rorl
adc
or
insb
add
xchg
mov
add
lock
jns
pusha
repnz
sahf
mov
loope
jae
ret
adc
vpackuswb
add
and
sub
inc
jo
dec
and
jle
sub
inc
push
pop
mov
jbe
jle
cmp
addr16
jle
lahf
sbb
lea
cmp
and
fldl
pop
push
out
ret
adc
push
cmp
mov
stc
std
add
and
dec
data16
mov
cmp
in
pop
adc
mov
lcall
loope
and
shll
jne
test
inc
xchg
mov
or
dec
xor
gs
cmc
pop
push
leave
mov
not
in
sahf
adc
cmpsl
pop
sub
das
adc
xchg
movsb
in
out
push
mov
and
movsb
cli
mov
and
mov
pop
adc
sub
mov
jmp
fistpl
xor
xchg
mov
insb
pop
cld
in
call
push
and
fdivs
cli
pop
mov
cmpsl
aam
mov
les
push
pop
push
je
movsb
out
fstl
add
adc
lret
add
push
lds
es
gs
cmp
shl
add
addr16
loopne
repnz
clc
adc
mov
sub
in
inc
stos
sbbb
faddp
mov
add
xchg
pop
xchg
and
mov
ja
je
or
nop
les
jp
fdivs
push
fldt
jle,pt
call
and
pop
adc
rcll
mov
testl
and
loopne
lahf
mov
push
adc
add
lcall
jne
jnp
adc
push
js
or
lods
sbb
into
scas
xchg
lods
and
mov
inc
dec
jle
pop
xchg
xchg
lods
in
pop
es
push
or
add
lret
repnz
push
add
push
and
jle
int3
in
adc
dec
jno
icebp
jge
xorb
cmp
mov
cmpsb
outsb
fstpl
inc
mov
push
arpl
sub
xchg
arpl
push
pop
icebp
lds
es
arpl
pop
cmp
imul
je
in
sub
ds
in
stos
or
mov
popa
jecxz
call
cmp
push
cmp
loop
lcall
push
sub
pop
sub
dec
fs
inc
and
sbb
pop
cwtl
subb
sub
cmp
xchg
inc
jl
pop
or
sub
mov
inc
cmp
mov
mov
les
add
push
jmp
notl
enter
inc
adc
stos
xorb
aad
xchg
pop
cmpsl
push
sbb
mov
outsb
mov
add
xchg
jg
lock
push
rol
aad
inc
or
daa
dec
adc
pop
dec
sarl
and
call
test
outsl
mov
fs
adc
fidivl
push
xor
push
les
xchg
cmp
lea
gs
sub
add
push
shlb
sub
scas
rorl
les
cmp
mov
jmp
out
cmp
xchg
roll
adc
mov
jns
and
xchg
lret
or
mov
sub
lret
sbb
imul
negl
pusha
mov
or
dec
pop
pop
loop
push
sahf
mov
pushf
mov
pushf
xor
iret
fs
lods
add
out
cli
cmpsl
dec
cs
mov
pop
sarb
jno
mov
shr
or
sbb
xchg
inc
mov
fwait
sahf
or
repnz
cwtl
mov
push
movsl
in
inc
cmp
mov
cld
cltd
push
test
shl
fs
push
mov
stos
jns
inc
sbb
ret
arpl
lcall
hlt
faddl
mov
fistpll
inc
imul
jns
sbb
mov
add
stos
jge
mov
out
cmp
inc
push
insl
and
xchg
fbld
mov
jmp
shrl
test
int3
aad
inc
or
push
out
insl
mov
lods
sbb
jns
fwait
or
mov
cmp
mov
sbb
popf
mov
push
or
movsb
pop
in
jp
lret
or
aas
push
jp
fisttpl
push
out
xchg
aad
sub
dec
jecxz
or
push
lret
cwtl
or
outsb
push
clc
xchg
sub
shll
inc
inc
mov
pop
adc
sub
std
add
jl
mov
insb
mov
push
outsb
or
sahf
push
das
add
fnstsw
mov
adc
iret
daa
or
pop
inc
adc
out
and
and
pusha
inc
xor
inc
call
cmp
jo
dec
sbb
stc
adc
mov
insl
movsb
stc
cli
fbstp
leave
adc
jae
pop
push
xor
into
arpl
lock
loop
subb
orb
push
loop
stos
mov
imul
aad
xor
jp
popf
lds
adc
gs
adc
push
dec
xchg
leave
das
in
mov
mull
push
ljmp
cmpsl
mov
adc
jo
jecxz
jne
cwtl
movsl
mov
xchg
mov
hlt
mov
enter
jle
cld
test
xchg
addl
jge
inc
dec
adcl
sbb
je
mov
cwtl
test
mov
dec
xchg
les
sbb
push
sub
mov
jbe
es
leave
cmp
shl
aam
popa
fbstp
addw
add
jbe
rcrb
mov
push
pop
gs
ffreep
push
lods
inc
stc
inc
mov
sarl
aaa
aam
jge
insl
leave
repz
aas
into
sub
mov
or
out
fcompl
fisttpl
les
push
xchg
mov
ljmp
inc
cmp
out
loop
adc
inc
ljmp
std
aas
in
cli
movups
mov
int
xchg
pusha
push
fcoms
in
jne
and
dec
fwait
int3
pop
inc
push
fsubs
mov
leave
cmp
mov
push
pop
shll
std
jo
cmc
push
popl
insb
push
add
inc
insb
mov
xchg
jo
ret
call
ret
loope
loopne
mov
das
push
dec
xlat
inc
dec
les
push
pop
ficoms
or
sbb
cltd
movsb
push
mov
flds
aam
movb
or
or
pusha
xchg
and
xor
sbb
push
jnp
stc
push
fisttpll
es
por
cmc
dec
or
or
repnz
pop
sbb
mov
inc
lahf
iret
add
lds
clc
mov
xor
cld
push
jp
int3
cmp
cmc
lret
jae
and
xor
aaa
stc
test
nop
dec
pop
sbb
sub
mov
mov
addl
jg
or
push
jno
aas
and
addr16
sbbb
push
imul
repnz
and
test
scas
add
pop
leave
jae
test
ret
pop
sahf
rorl
cld
lods
inc
dec
inc
mov
test
cwtl
mov
nop
hlt
sub
dec
rcrb
outsl
movsl
mov
icebp
add
mov
mov
outsl
fucomip
xor
push
mov
jnp
mov
arpl
pop
jb
roll
xchg
sub
in
pop
mov
jp
comiss
xchg
cmpb
or
sub
xchg
push
push
jge
mov
mov
outsl
push
inc
jnp
mov
inc
mov
mov
and
addr16
mov
ss
adc
or
mov
lds
jge
mov
pop
jl
push
enter
hlt
jge
cmovno
xor
hlt
xchg
hlt
push
lcall
aad
adc
pop
call
or
mov
hlt
inc
idivb
mov
mov
stos
mov
mov
sbb
mov
jp
xchg
push
cwtl
ljmp
mov
cmp
iret
jnp
dec
jne
repnz
mov
jns
lock
testb
cltd
and
sbb
add
out
or
sub
test
cmp
pop
cli
dec
add
cmp
mov
aad
sti
dec
xor
sbb
data16
imul
push
fwait
fwait
ds
sarb
imul
es
cmpsl
push
mov
shr
pop
mov
movsb
pusha
mov
or
popf
aad
mov
in
lret
popa
xchg
pop
sti
mov
mov
popf
cmp
aas
mov
mov
push
imulb
jg
inc
sub
xchg
das
std
inc
xchg
test
ret
mov
push
mov
xor
sub
jp
xchg
bnd
cmp
idivl
mov
es
jmp
adc
jle
aam
scas
rolb
inc
add
div
or
or
jl
or
aad
jecxz
ret
int3
aam
dec
add
cmp
mov
cmp
mov
mov
push
mov
in
stc
inc
out
std
ljmp
ja
mov
xchg
out
push
pop
fidivrl
faddl
out
fcoml
lods
inc
jnp
out
subl
andl
in
repz
out
adc
xor
loope
popf
sbb
xor
cli
sub
ljmp
in
aaa
mov
gs
or
shlb
js
mov
sub
insb
pop
insb
aas
les
dec
xor
ljmp
xor
pop
cltd
and
jne
pop
sub
pop
nop
pusha
jb
loope
adc
mov
or
mov
mov
mov
adc
test
and
ret
or
sub
imul
xchg
push
inc
mov
push
jp
sub
in
push
mov
jae
jle
testb
ret
dec
loop
mov
add
rorb
push
mov
mov
fstp
fstp
enter
adc
xor
ja
or
iret
jg
lahf
pop
pop
jo
cmp
fwait
fs
sub
jb
insb
sub
mov
ss
shlb
or
ljmp
mov
jbe
push
pop
push
in
and
mov
jg
test
mov
std
test
fdivl
loop
test
lahf
xchg
mov
mov
or
fsubp
mov
jg
movsb
in
mov
dec
jns
sub
test
loopne
dec
lock
call
loope
jl
andl
pop
lods
inc
or
dec
movsl
dec
in
testb
or
sahf
cmp
jae
add
bound
daa
imull
pop
sbb
pushf
pop
jmp
and
push
leave
sbb
dec
or
pop
mov
add
or
insl
inc
push
test
popf
fisubl
shlb
inc
or
adc
dec
pushf
and
jno
repz
int3
push
cmp
lret
ljmpw
les
xchg
xchg
lds
adc
repnz
inc
imul
repnz
das
int
or
faddp
shl
jo
push
or
dec
or
jbe
aad
adc
sub
xor
mov
add
in
repz
xor
imul
dec
push
lods
dec
mov
loope
hlt
jle
sub
in
sub
sub
add
mov
mov
jo
xchg
int
bound
lcall
icebp
shll
cmc
inc
xchg
adc
lods
jmp
notl
cmp
dec
mov
or
bound
scas
adc
stos
pop
pop
orl
ret
sub
cmp
cmp
in
mov
cmp
inc
frstor
adc
xor
mov
je
sub
pop
xchg
pop
repnz
cli
ret
lods
xor
cmp
int3
insb
jne
out
cmp
jbe
std
gs
lret
test
inc
cmp
pop
nop
xor
nop
mov
jmp
dec
outsb
dec
cs
stos
out
push
jle
mov
out
mov
int
cmpsb
mov
adc
sbb
sbb
dec
push
add
inc
push
scas
xchg
rcl
lahf
dec
sub
cld
divb
bound
rcrb
lret
fistpll
loope
ds
cmpsl
lcall
je
xor
sarb
xchg
sub
mov
sbb
xor
sbb
adc
mov
clc
or
and
fsubrs
daa
iret
dec
sahf
and
scas
jge
xchg
pop
fwait
scas
mov
sbb
sbb
push
sub
cmpsb
mov
mov
outsb
adc
notb
push
gs
adc
popf
ficomps
mov
push
pusha
mov
lods
test
adc
out
mov
daa
out
cld
bound
jl
jmp
mov
xor
inc
mov
call
jne
mov
xor
fsubs
dec
ss
jecxz
adc
jbe
cmp
lret
cmp
pop
les
mov
mov
sub
aam
int
xchg
aas
mov
xchg
pop
pop
pop
pop
ror
mov
fstpt
in
mov
adc
arpl
push
push
pop
testb
aad
bound
sar
je
jp
nop
test
xor
lahf
and
out
xor
test
out
negb
jl
stc
mov
jecxz
out
xchg
addb
mov
mov
sti
push
mov
scas
repnz
jo
cmp
sti
adc
stos
out
fs
inc
in
int
push
xchg
xchg
push
fsub
jnp
mov
dec
xchg
arpl
and
or
repz
xchg
inc
and
or
aaa
pop
xadd
popf
mov
in
cmp
popa
jge
xchg
cmpsl
gs
or
mov
mov
mov
in
pop
adc
test
cmpsl
mov
decl
rcrl
cmpsb
sbb
add
sub
pop
xor
mov
mov
lcall
add
mov
xor
lods
out
imulb
adc
shll
insb
mov
mov
add
loopne
mov
cmp
cmpsb
insb
loop
les
dec
pop
cmpsl
add
lret
negl
mov
xchg
push
ror
arpl
mov
aas
push
repnz
lret
fimull
jmp
hlt
push
loopne
push
sbb
stos
icebp
sub
aad
sbbb
jp
push
sub
out
pop
push
push
cltd
xchg
jo
sti
dec
inc
mov
xor
ja
scas
mov
jbe
xchg
es
mov
cmp
js
mov
jl
jle
lahf
push
jo
imul
adc
inc
les
fwait
jecxz
and
pop
push
xchg
mov
dec
or
in
lock
mov
and
sub
rcll
aad
push
repnz
lock
push
cltd
iret
xlat
jmp
jnp
lds
mov
addr16
cli
cwtl
pop
loopne
inc
push
mov
std
icebp
mov
aas
imul
xchg
roll
sti
inc
out
filds
mov
int
jae
mov
cmp
mov
shll
ja
fsubs
fcoms
mov
dec
dec
dec
dec
adc
popf
loope
adcb
imul
gs
pushf
scas
dec
xchg
lret
cmp
jo
or
or
jbe
push
std
xchg
xlat
push
cmp
pop
daa
sbb
fdivl
neg
or
movsl
out
jbe
push
and
jecxz
aaa
ja
push
or
fs
jnp
adc
mov
add
popf
or
sti
lcall
out
add
dec
aad
xchg
add
or
push
mov
cld
jg
std
lret
je
ja
jne
scas
cmpsb
sub
cmp
add
fsubs
cmp
outsb
ds
pop
test
xchg
cmpsb
mov
ss
mov
jo
mov
cli
xor
sub
repnz
test
dec
loope
cmpsb
das
mov
pop
push
lahf
ja
mov
inc
mov
sub
push
jo
jmp
jns
dec
dec
loopne
push
outsb
rclb
xchg
sbb
dec
rcrb
cmpsb
repz
aam
xor
jg
jno
inc
and
insb
adc
fidivs
dec
xchg
cs
fisttpll
notl
sub
mov
sub
leave
mov
sbb
xchg
cmp
and
jge
and
enter
mov
push
push
cmp
jae
pop
inc
dec
jns
push
pushf
adc
mov
in
mov
xor
mov
sbb
mov
cli
std
mov
jbe
cmp
ror
mulb
add
fsubs
fisttpl
lods
into
out
fwait
cmp
test
inc
fcos
jns
sub
pop
js
hlt
mov
adc
mov
andb
or
or
enter
jecxz
sub
mov
cmp
js
push
pushf
push
mov
push
inc
cmp
jo
fbld
mov
out
cmp
adc
and
inc
pop
or
testb
or
mov
pop
push
pop
pop
lock
rol
adc
scas
xchg
in
pushf
sub
jne
lods
jbe
cwtl
sbbb
and
inc
movsl
pminub
mov
sub
daa
and
mov
lock
sub
imul
lret
sbb
fcompl
inc
xchg
cmp
mov
adc
out
test
das
nop
push
mov
sub
rcrl
sbb
setge
jb
mov
fwait
shrb
ljmp
sub
mov
mov
pop
cmp
and
ret
das
ja
icebp
cmc
incl
jne
dec
jns
popf
aas
out
xor
fs
loope
mov
mov
test
xchg
xchg
mov
popf
bound
add
dec
jne
idivb
jno
mov
or
repnz
fsts
mov
ds
push
or
int
mov
arpl
sbb
cld
out
repz
idiv
int
aaa
lock
or
jge
idivb
addr16
ficomps
test
arpl
mov
pop
call
lods
xor
cmp
jb
jno
cmc
pop
mov
and
pop
push
testb
adc
adc
xor
fmuls
ret
lock
fidivrs
mov
or
jecxz
add
mov
mov
xchg
insl
dec
stos
fldt
outsl
in
pop
xlat
pop
push
xor
mov
addr16
aaa
mov
fcompl
push
aad
sbb
mov
in
scas
sbb
sub
call
popa
xchg
jg
test
sbb
enter
jg
les
sub
jb
add
cli
cmp
pushf
add
test
insb
shrb
mov
cmpsb
enter
xchg
push
jb
and
xor
mov
scas
sti
sub
shll
inc
pop
sub
fcomps
mov
add
sahf
push
jbe
int
lret
repnz
or
fwait
mov
xor
mov
jns
xor
mov
cmpb
fdiv
dec
mov
mov
push
fidivrs
jb
gs
or
jnp
mov
mov
add
or
ja
and
push
mov
xchg
lcall
sub
ds
cmp
jecxz
dec
mov
cmc
sbb
or
add
rolb
sarl
or
test
xchg
adc
jl
rep
mov
js
mov
aaa
mov
pop
es
and
push
addr16
mov
inc
call
mov
xchg
pop
mov
mov
in
ljmp
cld
inc
or
dec
sbb
gs
loopne
cltd
in
and
cmp
add
lock
mov
jns
lea
xlat
jb
mov
js
adc
inc
push
mov
std
hlt
mov
ds
out
sub
cmp
or
xor
js
int
int3
or
ja
cltd
loopne
fimuls
ret
pop
mov
mov
loop
je
jns
cmpl
insl
sbb
mov
adcl
vrsqrtss
cs
lods
ret
out
mov
jl
dec
sub
and
aas
add
pop
cmpsl
fisttps
jecxz
les
xchg
shr
daa
aam
in
jns
sub
lcall
js
ret
imul
mov
cmp
xchg
inc
push
jne
outsb
jl
stos
inc
out
pop
cwtl
les
or
inc
cmp
cwtl
call
add
jmp
xcrypt-ofb
cmpsl
sub
mov
xor
rcrl
sbb
outsl
add
stc
mov
mov
adc
lret
mov
out
pop
mov
js
dec
in
scas
mov
cwtl
test
movsl
jg
lods
inc
sub
adc
rcr
int
inc
pop
sub
adc
je
pop
or
xchg
xor
inc
jbe
fsubrl
jp
pusha
repz
jno
rorl
test
pop
adc
add
sub
mov
mov
and
fstpt
xor
hlt
xor
je
test
stc
aad
jl
cs
and
mov
sub
in
lahf
js
add
sub
lahf
sub
xor
cmp
data16
mov
cli
loop
stos
insl
pop
iret
addl
add
xchg
pop
ret
fstpl
mov
inc
cltd
cmp
outsl
push
mull
dec
in
in
ljmp
push
mov
loopne
lock
mov
adc
lahf
xor
mov
mov
sbb
or
inc
adc
jb
out
icebp
fnstsw
scas
mov
mov
adc
arpl
mov
movsl
or
sbb
inc
das
shrl
fdivl
mov
add
or
adc
sbb
arpl
add
mov
cmpsb
aaa
mov
cwtl
popf
lret
inc
dec
enter
popf
sub
mov
add
mov
fcomps
xchg
adcb
out
ret
push
outsl
sub
push
and
in
pop
aad
jle
mov
adc
bound
int
repnz
imul
in
enter
cmp
arpl
and
call
and
push
pusha
push
adc
jo
ss
inc
lock
sbb
inc
or
lcall
jecxz
jne
loope
adc
cmp
pop
and
leave
dec
mov
jmp
insb
add
leave
imul
cltd
inc
lret
xchg
int
inc
jg
lret
add
xor
push
leave
push
mov
sahf
icebp
mov
push
adc
je
scas
mov
ret
and
je
outsl
jns
mov
in
adc
fstl
and
dec
push
in
test
aam
jmp
loope
push
fsubp
mov
das
adc
cmp
xchg
mov
cmp
dec
out
or
mov
xor
cmp
out
pop
mov
xchg
ret
cmc
mov
dec
lcall
call
dec
or
fisttpll
jo
ret
push
adc
sbb
cmp
cmp
std
clc
mov
push
pop
and
shlb
pop
adc
xchg
sub
pop
cs
mov
into
xor
stos
cmp
aas
jg
cltd
arpl
in
mov
subb
les
jmp
or
or
xchg
mov
xlat
pop
loopne
fistpll
mov
stos
dec
sbb
adc
push
xlat
or
mov
ja
mulb
ja
xchg
jno
xchg
in
cmp
notb
cmp
and
mov
pushf
daa
inc
pop
xlat
repz
jmp
and
cmp
xor
jbe
jmp
jle
ss
out
add
icebp
repnz
adc
test
pop
mov
adc
aas
mov
fisttpll
push
add
insb
cmc
push
and
sbb
pop
jnp
xchg
or
mov
jecxz
add
rcll
push
movsl
nop
fs
push
push
pop
push
test
into
mov
sbb
jmp
loopne
pextrw
pop
fwait
push
xchg
notl
addb
insb
rcrl
mov
pop
inc
aas
in
pop
add
jg
cld
movsb
test
mov
mov
imul
dec
jo
xor
fs
mov
adc
jo
cmp
add
mov
lahf
push
popfw
insb
int3
leave
test
xchg
pusha
jne
aaa
xor
mov
shrl
enter
repnz
pop
add
jbe
sub
inc
icebp
pusha
xchg
mov
pusha
roll
gs
xor
pop
icebp
jns
aas
pop
mov
or
fwait
inc
or
cmpsl
out
dec
outsb
fcoms
inc
or
jnp
dec
or
orb
aaa
lahf
out
sub
outsl
faddp
inc
mov
mov
lret
cld
bnd
or
test
xchg
jne
add
int3
aad
jg
xlat
add
add
adc
push
cmp
lds
icebp
repz
mov
jns
pop
and
ja,pn
cmp
push
cli
out
xchg
pop
push
ljmp
jb
arpl
push
push
dec
out
add
repz
rcrb
cli
cmp
xor
xor
adc
fisttpll
scas
cmp
das
sahf
out
push
push
add
jmp
push
fisttpll
pop
xchg
add
and
nop
mov
dec
mov
xchg
push
jnp
clc
call
les
rol
std
es
loop
lret
cmpsb
std
sub
dec
dec
inc
push
popa
faddl
fsubr
aaa
mov
int3
clc
pop
mov
jb
loopnew
fs
or
mov
jne
out
jo
pop
dec
mov
jmp
fldcw
xor
pusha
mov
jle
lahf
ds
clc
lock
pop
insl
movsl
mov
xor
adcl
idivb
sub
inc
sbb
pop
or
dec
or
adc
and
int
xchg
es
xchg
iret
lret
imul
push
mov
test
cmpsl
call
adc
cld
jns
or
mov
out
addb
ljmp
mov
std
xlat
enter
lods
pop
pop
fisubrl
inc
faddl
mov
fidivrl
jecxz
push
add
imul
addb
ss
test
push
jl
add
adc
sub
sbb
ficompl
lahf
fisttpll
mov
cmp
ds
cmpsl
aaa
or
nop
lods
andb
in
cmp
rcrl
imul
sbb
jbe
mov
out
movsb
out
sub
cmpsb
jnp
out
inc
out
and
mov
mov
ja
js
mov
rcrb
sub
and
dec
push
sahf
stos
outsb
cwtl
mov
xchg
rcll
je
push
xor
ss
inc
dec
loope
add
jp
in
lods
es
mov
iret
pop
test
push
icebp
adc
mov
add
iret
adc
stos
adc
push
xlat
pop
inc
cld
dec
push
rcl
mov
or
cmp
ss
adc
mov
popa
mov
jmp
out
inc
in
xchg
mov
dec
push
mov
ret
inc
cmp
lcall
xchg
ss
jp
mov
sti
jmp
popf
cmovge
stos
inc
pop
popa
lods
ficoml
or
cwtl
or
cmp
and
pop
sti
and
cmp
jo
inc
xlat
bound
cmc
or
add
aad
pop
das
sbb
dec
outsb
pop
sub
dec
mov
adc
sbb
xchg
sub
mov
push
mov
iret
add
cmc
sti
xchg
adc
mov
push
out
pop
xchg
or
sbb
mov
daa
sub
jns
mov
or
jbe
cmp
xor
jno
insb
jo
lret
shll
inc
nop
loope
pushf
jmp
push
push
aaa
fwait
or
cmp
mov
lods
and
xchg
test
mov
xchg
xchg
jmp
xchg
xchg
inc
sub
xlat
jp
cmp
adc
sbb
lcall
cmpsb
adc
jge
fldcw
push
fildll
pop
mov
clc
xor
xor
xchg
mov
sub
or
mov
jae
jne
ja
sar
pop
mov
push
sub
mov
sub
mov
aas
outsl
fistpll
xor
xchg
inc
loope
sub
mov
push
sti
or
pop
add
sub
push
in
jb
add
sbb
subl
fwait
or
ret
ds
sub
adc
jb
sahf
fldt
movsb
popf
les
ja
adc
adc
or
out
fldt
lahf
pop
mov
das
outsl
pop
rclb
ss
ss
mov
push
pushf
or
inc
hlt
jmp
add
jbe
pushf
movsb
inc
dec
adc
jnp
xchg
push
dec
and
out
cwtl
add
out
imul
push
cmpsb
pushf
movsb
jne
outsl
and
dec
imul
push
xorl
or
mov
addps
movsb
mov
push
or
sti
inc
jecxz
test
cwtl
je
push
jg
dec
push
jmp
mov
mov
or
js
push
cmpsl
lret
dec
outsl
sti
int3
test
rolb
scas
cmp
xchg
mov
mov
shll
push
sub
xchg
adc
xchg
mov
xor
lcall
xchg
mov
fs
ljmp
cmpsb
mov
pop
sub
pop
adc
fldenv
pop
nop
pop
sub
ja
jno
jmp
subb
jmp
adc
sub
inc
fisubrs
push
pop
cmp
push
pop
and
out
test
push
adc
movsb
cmc
ds
mov
loope
lea
mov
mov
add
push
sub
dec
mov
pop
sbb
mov
sub
inc
fs
out
dec
shr
jb
pop
cmp
and
enter
cmc
jbe
push
iret
insl
int
push
and
scas
rcrl
test
push
xchg
cmp
mov
out
cmp
xor
pop
mov
push
xlat
mov
or
ret
loop
js
sbb
push
enter
jae
xchg
sti
jle
test
push
insl
cltd
cmp
rolb
mov
add
cltd
pop
and
cld
or
sub
les
sbb
das
std
ficompl
outsl
cmpsl
sub
movsb
pop
dec
outsl
pmuludq
iret
sahf
aaa
repnz
insl
pop
rcrb
dec
stos
test
mov
mov
sub
pop
mov
cmpb
xor
faddl
lods
xor
cmp
add
mov
daa
lahf
outsl
mov
mov
scas
frstor
pop
and
test
rorb
sbb
gs
xchg
ror
cmp
jo
popa
push
ret
fcmovbe
dec
mov
jle
cmp
test
std
hlt
xchg
ret
iret
in
fs
fstps
test
fiaddl
sub
pop
loopne
cmp
dec
sub
in
repnz
inc
sbbl
in
sar
inc
and
mov
lea
sahf
cmc
aaa
stos
xchg
pop
xor
lahf
sub
pushf
cltd
mov
xchg
test
sbb
test
hlt
cmp
ds
shlb
push
cmp
dec
xor
lods
xlat
std
mov
pop
dec
icebp
mov
outsb
aad
dec
or
xchg
mov
les
or
cmc
cld
jns
repnz
pop
das
bound
jne
mov
sub
xchg
xchg
stos
push
addr16
test
mov
jmp
imul
test
mov
sub
popa
sub
mov
push
stos
movsl
xor
jmp
and
aaa
std
fwait
dec
ret
jg
mov
sbb
psubb
mov
mov
mov
xchg
test
je
pop
test
in
pop
push
mov
lods
pop
mov
jle
scas
pop
push
mov
faddp
push
sbb
das
stos
mov
mov
pop
fwait
sub
jp
mov
dec
pop
test
hlt
push
std
mov
sub
mov
dec
lds
std
sarl
push
insb
dec
xor
dec
xor
xor
aam
push
push
and
xchg
aas
sarl
adc
shll
mov
fnstcw
xor
lret
xchg
out
into
adc
out
shlb
mov
es
daa
rcrb
jno
inc
xorb
sbb
jle
bound
imul
es
scas
test
out
xchg
xor
subl
lea
bound
cltd
dec
push
mov
clc
push
clc
push
lcall
jb
cmpsb
fildll
sub
xchg
cmp
es
push
mov
cwtl
jp
xor
sbb
jnp
mov
out
pusha
xlat
scas
ljmp
cmp
mov
add
aam
or
jecxz
fwait
sbb
adc
mov
xlat
push
mov
mov
mov
and
popf
jno
push
inc
sbb
lret
or
jnp
jle
cmpsl
fistl
pop
dec
inc
cmc
outsl
push
mov
aas
mov
jl
lret
lahf
xor
or
iret
xor
pop
outsl
decl
les
sub
lcall
push
push
jne
cmp
shll
and
inc
out
out
retw
rep
push
pop
andl
xor
lds
xchg
jmp
xchg
xchg
cmp
push
inc
popa
int3
repnz
daa
mov
xchg
push
sbb
movsl
jae
imul
cltd
add
pop
fadds
add
inc
out
cmpsb
aad
xchg
cwtl
addr16
iret
es
mov
and
fcoms
mov
push
xchg
mov
sub
out
aad
sub
jae
mov
xchg
lret
lret
adc
lret
adc
push
in
lcall
cli
fisttps
das
in
adc
leave
push
mov
popfw
push
in
cmc
in
pop
push
test
sbb
mov
mov
and
repz
mov
incl
sbb
repnz
xchg
add
xlat
cwtl
shll
xchg
sbb
and
aaa
das
pop
icebp
cmc
lock
test
retw
xchg
fcoms
fbld
out
in
je
pop
mov
shl
mov
adc
jge
gs
ja
xor
push
loope
fcoms
jnp
lds
inc
movl
mov
fcomps
push
cmp
lret
divb
fwait
scas
sbb
sbb
movsl
out
shr
gs
movsl
mov
xor
push
xchg
cmp
mov
mov
enter
imul
cmpsl
sub
les
jl
in
mov
xchg
lahf
pop
sub
and
fdivs
lahf
daa
jae
std
push
jl
and
sub
xor
insl
popa
movsb
fisttpll
loope
fisubrl
mov
lea
pop
fsub
xchg
push
aaa
int3
imul
not
mov
or
sbb
and
imul
je
adc
xchg
stos
fdiv
enter
ret
shrb
mov
hlt
lret
daa
jno
sub
add
mov
mov
fwait
loop
repz
fsubr
out
ret
jge
pop
mul
pushf
mov
sti
add
mov
orl
nop
xor
jo
xchg
les
pusha
sbb
sarl
repnz
imul
jge
push
or
xchg
sub
push
cmp
cmp
sub
push
push
xchg
lret
add
pushf
cwtl
scas
sti
jbe
mov
pop
xchg
icebp
stc
jle
xchg
test
mov
or
cld
call
pop
rcr
imul
ljmp
sbb
pusha
mov
xchg
jno
outsl
jb
xchg
das
jp
xor
sbb
shlb
mov
and
adc
xchg
fdivrs
mov
stos
maxps
sub
dec
jle
push
xor
dec
pop
call
shl
push
push
mov
sbb
testb
int3
std
packssdw
outsb
mov
pushf
dec
adc
pop
das
mov
sbb
shrl
push
push
cmpsb
push
mov
loopne
mul
in
out
push
cmp
divl
imul
in
shlb
inc
ja
loopne
add
xor
mov
ret
cmp
fcompl
fdivp
jb
pop
xor
jo
xchg
and
sub
push
push
cmp
cmpsb
pop
test
or
testl
mov
nopl
or
in
adc
xchg
stc
xor
fmul
into
loopne
lret
mov
mov
cmp
in
mov
mov
or
mov
cmp
test
movsb
in
dec
mov
fwait
and
xor
cmc
xchg
or
xor
jl
daa
ret
mov
daa
mov
fadd
in
mov
push
jbe
pop
fisttpll
leave
sbbb
sbb
sub
nop
adc
stos
mov
gs
stc
xor
js
push
faddl
xchg
stc
pop
add
dec
pop
sub
mov
pop
jo
mov
cs
or
rcr
dec
repnz
push
pop
xor
mov
push
push
mov
ljmpw
movsb
repz
sbb
push
roll
jns
mov
pop
add
nop
popa
add
out
subl
sub
xor
xchg
fmuls
pop
aad
fst
call
jmp
sbb
push
cmp
movsl
inc
addl
hlt
nop
data16
pop
mov
inc
rol
lea
mov
cmc
xchg
hlt
and
aam
call
pop
int
in
fwait
pop
into
adc
dec
xchg
xchg
lahf
ficoml
icebp
add
das
lahf
shrl
jmp
cmpsb
mov
mov
insb
and
push
sti
int
shll
mov
testl
add
sbb
repz
shll
adc
jo
repz
xor
mov
ret
add
mov
movsb
test
lcall
push
and
fcos
test
sbb
loop
xchg
pop
sbb
loop
ljmp
add
adc
fdiv
pop
loope
dec
inc
mov
cmp
sbbl
adcl
gs
adc
popa
test
dec
mov
pusha
andb
cmp
jle
aas
and
ret
js
aad
cmc
push
jge
jge
insl
pushf
xor
cmc
ss
xor
and
imul
data16
fisttpll
lret
and
mov
xor
add
sti
add
out
or
std
add
sarl
and
push
pop
xor
jle
lahf
sub
mov
xor
call
in
fistpll
inc
out
loope
nop
sahf
repnz
jne
sub
movsl
push
fmul
mov
imul
xchg
int
cld
lret
dec
xchg
int
xor
xor
ret
cli
xor
jns
cmp
pop
lds
das
inc
mov
and
xchg
repz
mov
out
das
xlat
cmp
xchg
rcl
adc
push
popa
xchg
inc
scas
mov
mov
cmp
add
js
cmp
inc
stos
push
ret
inc
sub
repz
cli
fildll
inc
ret
push
pop
jns
fcomps
fstps
popa
mov
dec
jg
mov
cmc
call
fnstsw
movsl
fistl
out
xchg
enter
les
int
movsl
jecxz
notl
loope
or
xor
mov
xchg
lahf
inc
push
scas
mov
shll
mov
pop
and
aad
cmp
inc
pop
movsl
nop
mov
ficoms
and
pop
xlat
mov
pop
dec
mov
adc
out
in
inc
stos
jns
cmp
or
leave
sarl
push
sub
push
mov
sbb
mov
out
das
les
mov
in
negl
enter
pop
mov
dec
imul
dec
lret
das
leave
mov
mov
into
jo
cltd
inc
xchg
sbb
xchg
out
adc
lcall
inc
jb
data16
cmp
call
sbb
inc
push
sbb
pusha
fadds
icebp
outsl
mov
pop
add
xlat
fwait
push
and
incb
movsl
dec
gs
es
mov
or
xchg
jg
std
sub
and
or
lret
and
push
repz
loope
sub
add
sbb
mov
mov
test
push
les
insb
lods
stos
push
test
pop
js
in
arpl
add
cmp
rol
jmp
push
fcompl
iret
pop
frndint
lret
sbb
mov
inc
jmp
jne
mov
push
xor
mov
inc
or
sub
mov
add
lods
mov
sub
pop
lahf
sub
xor
sti
fnstenv
sub
out
jne
xchg
mov
mov
jno
and
fiadds
jle
and
mov
pop
inc
jnp
test
jmp
stos
xchg
jle
or
cmp
mov
mov
loopne
movl
mov
out
clc
lea
sbb
aam
out
lahf
jne
loope
xor
pop
mov
shll
pop
add
or
and
mov
sarl
xor
or
mov
in
fsubs
ja
lds
ljmp
rcll
xchg
jecxz
mov
mov
pop
pusha
subb
or
push
add
imulb
cwtl
cmp
mov
icebp
out
xor
add
sbb
cmp
pop
scas
je
clc
test
sbb
repz
xchg
mov
fldenv
pop
fsubrp
dec
or
add
and
call
cmpsl
adc
stc
lcall
rcl
jle
or
roll
push
xor
nop
gs
push
add
shrl
push
das
leave
add
scas
shrb
test
xor
aaa
repnz
popa
cmpsl
sbb
mov
push
mov
fdivrl
jne
push
clc
mov
xchg
xor
jbe
jp
arpl
ficoms
js
add
ror
loop
xchg
test
pop
lods
repz
dec
mov
jne,pt
test
jae
ficoms
mov
sahf
std
outsb
dec
test
dec
arpl
mov
xchg
sbb
inc
fs
mov
dec
ret
mov
sub
push
ds
jp
into
leave
jge
mov
cmp
pop
dec
mov
adc
xchg
and
shlb
pop
xor
dec
nop
addl
pop
pushf
cmpsb
cs
bound
cmp
test
jle
xlat
mov
mov
pop
xchg
and
xor
js
insb
xor
or
cli
mov
sbb
movsb
jg
mulb
pushf
and
lcall
negl
in
rorl
inc
fdivrs
in
in
inc
mov
cwtl
mov
enter
mov
push
pop
in
inc
pop
xor
repnz
sub
arpl
ret
lock
or
inc
adc
cld
xchg
lret
jp
clc
inc
jnp
adc
push
test
pop
xchg
fldt
fsubs
cmp
out
loop
mov
xchg
jecxz
push
jnp
jo
push
pop
fdivp
push
adc
stos
or
lret
cmpl
in
je
sub
fs
rorl
jns
add
insl
loope
or
pushf
push
lahf
jg
out
sub
sbb
stc
out
mov
int3
ljmp
adcb
push
mov
sub
in
iret
cwtl
sbb
insl
cmp
and
in
call
jg
sub
add
sahf
cmp
lods
incl
loop
insb
lods
insb
xor
dec
ljmp
cmc
aam
sub
mov
sub
popa
repnz
dec
outsb
scas
cmp
imul
sbb
test
jmp
sti
dec
push
inc
add
fadd
dec
adc
imul
cmp
jecxz
test
sbb
test
xchg
push
pop
xchg
pusha
push
mov
jle
jp
cli
in
cmp
fdivs
pop
pop
clc
mov
jae
hlt
xor
sbb
std
gs
cmpsl
cwtl
inc
mov
sub
jno
into
or
out
sahf
mov
adc
xor
cmp
into
mov
push
add
mov
or
ja
loope
test
cs
mov
call
add
inc
sub
push
sub
ljmp
std
jmp
xchg
jae
cmp
adc
dec
ds
mov
fwait
seta
arpl
cmpsb
ficoms
stos
scas
mov
sub
inc
pop
jl
push
mov
call
inc
push
lret
sub
add
outsb
out
xchg
mov
mov
mov
sub
mov
insb
hlt
or
out
mov
stos
icebp
push
test
outsb
push
pop
jno
std
ds
or
push
out
xor
ret
sbb
movsb
lock
jae
mov
mov
push
cltd
mov
out
adc
jae
in
jecxz
jecxz
add
inc
gs
add
or
pop
imulb
outsb
loopne
movsb
xor
sti
and
pop
scas
stos
xor
pop
fisttps
cli
mov
inc
and
cmp
xchg
inc
push
ffree
hlt
out
mov
sbb
mov
daa
push
xchg
cmp
or
push
pop
arpl
fidivl
in
scas
int3
test
xchg
or
lods
adc
mov
les
cmc
mov
inc
divl
sbb
rolb
add
cmp
or
mov
push
dec
or
test
scas
xor
addr16
mov
imul
mov
shrb
xchg
jge
lods
dec
mov
sbb
sti
sbb
push
dec
lea
push
fisubl
int3
inc
lcall
andl
sub
adc
ljmp
or
pop
aad
fwait
mov
mov
lret
fmuls
and
lock
fs
xchg
icebp
sub
mov
fimull
fstpt
out
pop
mov
xchg
fdivrs
xor
push
int3
mov
cmc
clc
pop
or
sbb
rorl
pusha
push
push
mov
push
jmp
arpl
ss
fdivl
ljmp
leave
imull
jp
or
data16
adc
cmp
hlt
push
daa
les
lds
aad
addr16
icebp
nop
add
adc
add
pop
adc
push
pushf
testl
icebp
push
sub
xchg
mov
add
jp
sbb
shrb
imul
jmp
loop
mov
dec
inc
dec
or
pop
nop
xor
fldenv
xor
popf
sahf
push
mov
sub
aas
xchg
sbb
mov
int
mov
add
test
mov
cmp
hlt
aas
jb
cmp
sbb
pushf
push
jne
shlb
pop
repnz
bound
and
pop
jne
lods
sti
add
mov
ror
dec
pop
inc
repz
ss
jmp
js
mov
bound
and
add
popf
es
mov
mov
xchg
push
dec
jecxz
arpl
imul
outsl
call
jle
sub
mov
icebp
add
cs
mov
aas
in
fdivrl
cmp
cwtl
insl
inc
out
sti
cmpsl
fs
in
lahf
inc
lret
pop
mov
loop
xor
clc
aaa
pop
scas
in
rcrb
cmp
movsl
call
adc
test
hlt
jae
add
out
rdmsr
mov
and
pop
movsb
jnp
mov
xlat
pushf
repnz
jno
dec
sub
movsl
lcall
xor
in
mov
xorl
jbe
sub
dec
sahf
pusha
out
xorl
mov
ficomps
filds
inc
into
arpl
dec
outsb
ret
in
testb
push
or
aam
int
adcb
mov
jns
pop
je
ljmp
mov
mov
push
pop
aam
sbb
xor
adc
xor
aam
fcmove
sbb
xor
jp
adc
xlat
test
jo
inc
mov
add
lods
incb
cwtl
push
loopne
insl
pop
jecxz
testb
imul
push
fwait
sub
mov
xor
xor
cmp
in
sub
mov
dec
test
cld
cmp
pop
sbb
bound
push
jl
sarb
add
adc
sbb
dec
mov
push
ret
dec
insl
or
sahf
loop
adc
mov
dec
das
jmp
sub
mov
dec
lea
jne
out
adc
mov
xchg
loope
data16
shlb
jne
xchg
lret
popa
je
push
fldcw
push
cmp
cmp
xor
push
lock
jno
mov
xlat
lods
lods
ret
pop
mov
cld
jbe
jp
cmp
rclb
lea
ret
jge
adc
ret
out
and
sub
popa
in
nop
loop
mov
pop
mov
stos
lock
jle
pop
aas
les
sub
pop
jnp
cld
adc
cmp
dec
ja
xorb
loopne
stos
popf
mov
jg
addb
pushf
dec
movsl
cmpsl
mov
in
mov
outsb
or
dec
jmp
out
and
test
jnp
mov
inc
add
mov
jle
xor
iret
fnstcw
leave
sub
fists
ret
jp
ret
cmp
popf
jmp
pop
enter
mov
cmp
stos
mov
cli
sbb
pop
out
xchg
cmpsl
xchg
sub
fdivl
sbb
sarl
fldt
les
push
test
and
adc
dec
inc
filds
xchg
lret
in
jns
dec
in
decb
add
mov
cmp
sbb
adc
xchg
inc
adc
les
test
ja
pop
aas
inc
mov
or
mov
pop
jle
push
mov
in
repnz
test
sub
or
mov
sahf
gs
adc
xchg
rcrb
or
jge
sahf
and
movsl
call
outsb
jp
mov
mov
mov
test
pushf
fcomps
movsb
insb
xor
mov
lahf
inc
loope
xor
aaa
nop
and
fnstenv
pop
cmp
push
mov
enter
fidivrl
scas
xor
pop
and
stc
stc
xor
pop
fdivp
call
mov
push
dec
in
push
pop
aas
pop
add
clc
and
xchg
ja
cs
lret
add
sub
sub
test
add
fnsave
gs
jne
jmp
dec
orl
push
jp
add
mov
and
dec
fsubr
fidivl
movlps
mov
cmpsl
jl
cmc
jl
aad
ret
sbb
mov
dec
adc
int3
sarl
cmpl
pushf
pop
mov
js
xor
insb
jmp
arpl
pop
aas
ror
das
inc
mov
fs
mov
sub
or
repz
rol
sub
cmp
push
cmp
mov
mov
sbb
in
push
sbb
fwait
cmc
in
movl
stc
bound
out
push
inc
jnp
pop
popf
mov
xchg
add
add
dec
xchg
or
add
push
add
aaa
add
adc
add
jge
jge
push
adc
add
aaa
aad
push
xlat
or
inc
aad
inc
adc
add
or
hlt
inc
inc
inc
add
inc
push
jnp
add
pop
cmp
xchg
push
in
scas
mov
sbb
ja
gs
movsl
mov
xor
jae
xchg
cmp
inc
push
pop
lret
xor
lea
idiv
icebp
repnz
pop
lret
xchg
cwtl
out
cmp
mov
mov
mov
shll
mov
loope
test
orl
xlat
les
push
repz
into
lea
je
push
loopne
cmp
jl
cs
mov
ds
ret
mov
les
adc
mov
cwtl
jne
mov
imul
movsl
push
jecxz
imul
enter
iret
pop
jle
push
stc
lcall
sub
fsts
hlt
cmpsb
stos
sti
out
mov
into
stos
push
fnsave
cmp
imul
push
or
cltd
scas
add
cld
int3
mov
add
repz
icebp
xor
cltd
das
sub
inc
inc
jne
popa
shll
jae
jmp
mov
ja
xchg
test
xor
movsl
in
out
push
in
dec
incl
mov
xchg
out
pop
les
cmp
out
stos
cltd
jp
cmp
cmpsl
imul
out
push
push
push
mov
stos
adc
fs
fisubs
lcall
jne
idivb
add
inc
inc
cli
or
jl
mov
pusha
mov
jnp
xchg
repz
test
das
ss
xchg
cmp
sbb
pushf
aad
cmp
inc
push
jbe
xchg
js
cs
mov
push
push
jae
insb
jbe
lock
in
lea
popf
xlat
data16
es
fcmovnb
or
mov
cld
jbe
insb
jno
inc
inc
imul
cmpsl
das
repz
jg
inc
push
cli
aas
decl
pop
sar
add
cmp
sbb
push
dec
jo
jne
pop
outsl
adc
in
inc
mov
fadd
sub
lahf
jno
movsl
mov
loope
mov
loope
scas
in
pop
ret
lcall
pop
std
lret
inc
xchg
popf
adc
push
fldt
out
inc
ds
enter
ja
push
cmpsb
jmp
lret
mov
leave
pop
out
sbb
iret
fsub
lahf
jae
mov
into
in
xchg
ss
mov
aas
lret
enter
fs
dec
cmp
dec
out
lret
cmp
pop
ficoms
mov
out
lcall
rolb
mov
rcr
cli
cld
lahf
dec
jg
sub
std
and
rcr
jge
ds
sub
outsl
pop
cld
dec
sub
stos
cli
cmc
xchg
cld
imul
and
imull
lret
movsl
jle
mov
sub
pop
mov
test
pop
cmp
cmp
dec
mov
xchg
adc
mov
in
mov
int3
and
bnd
or
pop
aaa
out
fwait
int3
push
pushf
mov
test
mov
cmp
insl
popa
xor
jg
inc
std
subb
call
lret
sub
cli
jg
outsb
cmc
icebp
jg
inc
adc
clc
pop
inc
call
mov
cwtl
xor
cli
xor
mov
add
xchg
arpl
jecxz
sti
movsb
dec
add
loop
jo
jb
jg
pop
in
insl
mov
pop
mov
mov
xchg
dec
xchg
push
pushf
or
jl
adc
cmp
jl
pushf
das
ret
or
cltd
cltd
out
and
icebp
in
jb,pt
movsl
js
cmpsb
scas
push
cmp
outsl
rcll
mov
push
xor
add
pop
scas
adc
daa
imul
sahf
or
push
jp
pushf
stos
icebp
dec
mov
push
andb
movsl
stos
sbb
leave
xchg
out
mov
push
call
in
dec
frstor
shr
scas
xchg
test
lods
mov
lods
sub
jns
or
addr16
ret
cmp
test
mov
add
push
sbb
mov
lods
data16
mov
dec
pop
je
lds
shlb
mov
inc
fs
in
push
cmp
xchg
stos
ret
dec
xchg
aad
pusha
fs
cmp
dec
pop
jnp,pt
jge
sarb
int3
mov
dec
std
leave
int
sub
bound
jno
jae
mov
push
adc
pop
xchg
dec
ss
shll
lahf
xchg
push
xchg
sbb
mov
popa
enter
pop
les
or
sbb
es
xor
movsb
xchg
test
push
inc
pushf
xchg
int3
mov
mov
cmpsl
lahf
sub
jg
mov
dec
jno
sub
stos
push
in
mov
in
lods
inc
lock
pop
sbb
clc
lock
mov
scas
mov
rcrl
lea
std
adc
jno
and
cs
cltd
pop
add
rcll
dec
shlb
sti
shr
sti
and
stos
std
sarl
ja
inc
fldcw
loopne
stc
out
push
out
mov
fsubs
jp
js
fdivs
jae
fisubrl
add
out
push
sub
cmc
xchg
cmpsl
ss
mov
rcll
loop
dec
push
jae
ffree
jns
popf
pop
dec
push
das
rcrl
aam
aad
shll
adc
push
subl
pop
xchg
sub
lret
mov
jg
inc
out
test
lret
arpl
les
jp
xchg
adc
dec
push
xorl
shll
jg
cmpsl
sbb
jno
push
repz
test
add
cld
movsb
inc
sub
ja
rcl
ret
push
jp
push
mov
push
stos
xorl
and
dec
push
out
cmp
pop
pop
sbbb
jns
push
out
sbb
outsl
jge
jle
test
es
push
jmp
dec
int3
jp
andb
scas
cmp
sbb
lret
jo
int
ret
iret
enter
out
jg
in
rorl
icebp
pop
stos
add
jp
jmp
sarl
cmp
and
insl
outsb
cmpsb
mov
aas
out
push
bound
xchg
cmc
pop
addr16
mov
shlb
test
xchg
pushf
inc
pushf
test
insl
sbb
sub
ss
mov
ds
cmp
jmp
sti
in
mov
cltd
aad
push
inc
push
gs
jbe
or
xchg
loop
cld
and
dec
inc
movsl
ja
test
jecxz
dec
call
ror
out
mov
addr16
iret
test
test
sub
inc
mov
out
gs
xor
jle
int3
mov
gs
pop
dec
insl
xchg
fdiv
sbb
gs
test
negl
pop
xor
in
cmp
out
pop
sti
mov
adc
out
ds
cmp
push
xor
cmp
mov
aas
dec
mov
xchg
cmpsb
pushl
lahf
mov
js
jae
dec
and
addr16
cmp
jb
fwait
out
or
ss
fists
dec
mov
ja
xchg
dec
les
outsb
ret
lcall
dec
leave
scas
fwait
cwtl
faddp
and
loop
or
sbb
test
cmp
jl
mov
mov
out
jle
push
pop
jl
mov
loopne
daa
test
daa
sub
sbb
jmp
imul
pop
add
mov
inc
repnz
and
loope
jnp
ja
mull
arpl
pop
mov
mov
je
in
shrb
sbb
sbb
push
add
push
gs
imul
sarl
inc
jns
dec
out
out
fisubrs
divl
scas
adc
mov
push
int
loope
mov
pop
push
movsl
fucomp
mov
jecxz
dec
fwait
in
lahf
imul
pop
ret
jp
frstor
iret
xor
stos
insl
and
and
jmp
mov
cs
push
pushf
jge
push
cmpsl
scas
jbe
stc
inc
loope
ret
addr16
push
addr16
sbb
fwait
add
cwtl
cli
fstp
xchg
daa
jnp
lods
xchg
mov
mov
xchg
enter
mov
pop
in
out
pop
sub
push
dec
hlt
in
daa
test
clc
xlat
aad
inc
aas
out
mov
fsubp
lods
mov
jne
addr16
cmp
lret
loopne
cmpsb
cmp
push
ja
cmp
adc
pop
jecxz
cmc
add
push
fsub
jbe
rol
sarl
inc
jmp
push
pop
inc
into
int3
mov
push
fcomp
dec
or
push
jno
dec
vmptrst
push
mov
mov
int3
lret
loop
cmp
jl
loop
iret
lcall
dec
in
rcrb
mov
mov
lret
xchg
inc
jne
mov
les
mov
jl
pop
jns
xor
out
mov
leave
fistpl
imul
push
fcom
cmp
sub
lret
dec
dec
imul
pop
add
div
bound
and
out
inc
movsl
pop
xor
test
stc
xor
xchg
sbb
sbb
xor
mov
adc
fisubl
xchg
xor
iret
pushf
fnstsw
xchg
jns
inc
dec
out
bound
fdivp
jae
pop
dec
outsb
cmp
daa
or
loopne
icebp
lret
loop
ja
jo
movsl
aam
push
push
js
js
fisubrs
out
dec
scas
idivl
int
imull
test
add
xchg
add
cmp
xor
pop
lods
addl
inc
xchg
mov
adc
adc
push
daa
imul
leave
iret
shr
xor
shll
je
push
pop
lahf
int
inc
xor
fdivrs
dec
cmp
and
sbbl
inc
xchg
dec
adc
xchg
push
mov
hlt
stc
scas
xlat
pop
negw
repnz
xchg
out
xor
jae
test
inc
xor
cpuid
pusha
dec
sbb
iret
xchg
pop
mov
adc
push
mov
imul
jp
and
cld
jle
enter
add
cs
repz
adc
jb
into
pop
jmp
shrl
jno
push
iret
push
pop
mov
cli
lea
inc
dec
and
xchg
mov
das
xchg
into
iret
shrb
in
dec
push
test
int3
loop
repz
cld
and
push
imul
daa
cmp
cmpsb
loop
shll
inc
aam
fdivrl
push
jle
popa
dec
jb
insb
sub
pop
add
jns
shll
cmpsl
les
pop
cmp
inc
mov
sub
add
fimuls
cmp
dec
sbb
pushf
jecxz
hlt
xlat
push
mov
sub
push
arpl
pop
int3
dec
aam
inc
and
subb
push
adc
push
xchg
and
fsubs
lret
lahf
push
sub
mov
mov
stos
mov
imulb
jbe
xor
rcr
jbe
fidivrl
cmpsl
jl
incl
test
subl
xor
adc
lret
mov
inc
mov
jmp
jg
sub
je
add
mov
in
xchg
sahf
inc
dec
xchg
mov
xor
lea
mov
cmp
cmpsb
push
inc
loope
sub
cmc
mov
bound
jnp
outsb
cld
sbb
iret
jl
add
xchg
ljmp
sub
push
les
pop
es
lret
vucomiss
bound
pop
lahf
push
mov
inc
push
jp
mov
mov
idiv
xor
jae
fldcw
or
mov
jno
cmpsl
fistl
cmp
mov
std
mov
outsb
mov
fiadds
imulb
inc
dec
sub
and
jge
cwtl
lock
jg
fstp
dec
cmp
xor
xor
sahf
pop
test
push
repz
fcmovnb
dec
mov
ret
and
adc
mov
and
pop
int
or
push
push
loopne
inc
pop
jb
je
les
jg
pop
out
out
sub
hlt
out
mov
daa
push
cmc
insb
jb
pop
insl
sti
push
push
pop
dec
jmp
push
adc
mov
int3
popa
push
mov
sti
cld
jp
pop
dec
dec
movb
cli
sub
mov
jp
jecxz
fidivrl
and
inc
aaa
mov
loop
mov
xor
and
iret
shll
mov
ficoml
lds
ss
arpl
rorl
je
dec
int3
test
test
call
pop
push
jb
cmp
mov
push
adc
mov
push
popa
sub
arpl
xchg
mov
addr16
std
cmp
sbb
adc
pop
cmp
mov
das
mov
in
pop
shrl
ret
push
mov
insl
adc
mov
cmp
lods
aaa
sbb
pushf
test
ret
jno
addr16
push
jg
lods
cmp
popa
mov
jp
inc
mov
aad
mov
dec
mov
ret
push
je
mov
and
pop
push
xor
pop
xor
std
test
mov
inc
pop
lcall
inc
or
mov
xor
test
mov
cmp
mov
je
push
sti
mov
ss
subb
sbb
fadd
je
and
mov
sub
sti
iret
in
gs
and
fsubrl
push
add
pushf
mov
stc
out
pop
xchg
stc
mov
loopne
addr16
push
dec
mov
lea
mov
and
fisttps
psubq
mov
adcb
insb
dec
and
push
or
push
sub
scas
lcall
lret
sbb
sbb
fists
cmp
shl
sbb
aas
cli
xor
fisubrl
cmpsl
dec
loopne
xchg
rcrb
jno
dec
dec
insl
jae
add
sub
imul
add
and
push
jp
lcall
pop
cmp
xchg
pop
adc
mov
mov
push
push
icebp
pop
mov
fimull
mov
jg
iret
xchg
push
ljmp
les
sub
xchg
dec
jne
add
xor
xchg
lods
int3
push
sub
mov
fidivs
and
cli
dec
and
cwtl
call
push
icebp
or
fcoms
rclb
adc
imul
and
nop
out
push
cmp
cs
pushf
pushf
call
jmp
ljmp
push
mov
mov
cmp
scas
in
push
jmp
pushf
outsb
push
jge
pushf
ljmp
stos
jecxz
add
inc
sarl
cmc
add
mov
leave
xlat
je
jecxz
push
pop
jge
movsl
int3
cmp
addr16
inc
pop
dec
hlt
and
clc
mov
mov
pop
jno
dec
xchg
add
je
lea
cwtl
fsubp
push
pusha
out
push
jl
cmp
aam
loopne
ja
in
sbb
repz
not
add
cli
sarl
mov
jb
scas
lret
addr16
cmpsl
scas
xchg
insb
xchg
fcoms
cmpsb
xchg
idivb
ds
stos
pop
mov
inc
insb
push
inc
push
insl
clc
fildl
sub
xor
sub
andl
push
shll
jmp
loope
jmp
lods
stc
orb
and
xor
cmc
je
push
xchg
movsb
cmp
add
pop
cmp
in
fdivs
push
and
ds
sahf
scas
sbb
cli
xor
pop
mov
aas
jg
push
cs
jecxz
cmp
rcrb
mov
sbb
mov
dec
mov
dec
xchg
add
ficoml
mov
in
xor
mov
adc
sahf
xchg
mov
fs
inc
insb
pop
daa
shlb
les
push
pop
lret
repnz
pushl
mov
xor
sub
enter
jp
loop
pusha
adc
rep
jle
xchg
test
push
cmp
lret
adc
mov
outsb
xchg
push
leave
push
and
jb
lret
imul
sub
imul
pop
cmc
cmpsb
xchg
test
cmp
icebp
xor
out
push
repnz
dec
push
and
and
jmp
cmp
popf
dec
fidivrl
xchg
pop
dec
outsl
shll
cmpsb
in
test
mov
mov
lret
adcl
data16
call
add
jno
push
popa
outsl
jecxz
adc
movsb
and
push
mov
into
jg
movsl
xchg
cmpsl
cmp
in
pop
xor
mov
cli
fsubs
fsubl
divl
mov
fmull
mov
and
inc
clc
roll
mov
movsb
ds
push
pop
jnp
int3
or
inc
sub
jnp
inc
add
enter
loope
lds
lahf
mov
xchg
sbb
das
sub
out
add
add
sbb
mov
add
push
add
push
mov
testl
sub
popa
sbb
pop
mov
std
push
cld
pop
mov
daa
sbb
pop
jl
jmp
jnp
inc
push
int3
add
ja
push
fwait
adcl
adc
adc
jl
jb
imul
pusha
push
mov
adc
lret
imul
cmp
std
ljmp
pop
sub
popa
cmp
xor
cli
xor
bound
xchg
jle
aaa
mov
mov
and
inc
test
push
push
fsts
pop
fbstp
aaa
pop
movsb
mov
push
xchg
pusha
pop
outsb
addl
mov
test
mov
and
in
imul
dec
aad
lea
lahf
aaa
add
fcmovnu
andl
mov
insl
push
orb
jecxz
nop
pop
pushf
add
addr16
shlb
enter
xchg
or
loop
mov
jecxz
outsb
popa
inc
stos
and
ljmp
cmp
lret
cli
std
lock
adc
sti
mov
cmp
mov
sub
jo
movl
bnd
call
les
mov
sbb
loop
cmc
data16
int3
leave
pop
mov
mov
or
sbb
ret
loopne
ffree
add
lds
jne
pop
xchg
add
insl
inc
fcmove
ss
xor
out
sbb
insb
pavgb
push
mov
in
outsb
fildll
push
mov
dec
jne
adc
addb
push
inc
scas
xlat
xchg
in
lds
bnd
and
lock
sub
ljmp
dec
outsb
jecxz
rcr
loope
pop
pushf
adc
out
addr16
test
xchg
jle
dec
mov
rorb
xchg
dec
into
xchg
cmpsb
shl
loope
cli
mov
test
pop
mov
mov
sti
fmul
ret
mov
bound
lcall
rcll
out
inc
inc
push
cmc
std
push
xchg
adc
mov
xchg
fildll
insl
jmp
test
mov
pusha
add
shll
fistpll
pusha
cmp
adc
enter
fbstp
fnsave
or
insb
loopne
arpl
ds
lret
xchg
xchg
call
xchg
leave
cmp
mov
inc
out
adc
outsb
fcoms
out
sub
test
jle
and
je
cli
inc
xchg
xor
test
sbb
outsl
dec
jbe
push
mov
sbbb
or
sarb
sbb
sub
neg
int3
out
mov
aas
lahf
loope
push
lds
mov
push
fwait
sub
ror
in
jmp
out
dec
add
loop
jne
popf
shlb
push
call
iret
outsb
or
nop
movsl
sbb
aad
push
fidivs
hlt
push
lret
sahf
xchg
pop
outsl
xlat
xchg
pop
test
pop
and
andb
inc
enter
cmp
scas
ret
sarl
out
push
rorl
ja
add
ss
xor
mov
shrl
xchg
fwait
mov
dec
push
mov
lods
jae
mov
add
jmp
and
jecxz
sbb
rclb
dec
inc
and
and
cmp
rclb
cmc
js
cmp
sbb
lods
mov
je
xchg
ljmp
cmp
sbb
xchg
out
sub
sub
mov
loope
xor
jge
jo
push
push
push
shlb
pop
je
push
cmp
push
inc
dec
cmp
xchg
rdtsc
push
push
je
in
imul
jg
movsl
cmp
pop
inc
mov
fs
xor
jle
idivl
dec
jbe
in
cltd
adc
jo
sbb
rcll
and
in
add
loopne
ljmp
mov
xor
mov
inc
or
adc
rcrb
out
push
adc
sbb
inc
cmc
movsl
pop
lock
xchg
shll
enter
dec
cmp
sti
bound
push
das
adc
lcall
movswl
mov
lea
push
js
xchg
sbb
xchg
aad
leave
inc
fistpl
and
loopne
jg
and
jnp
push
dec
push
ss
xchg
cmpb
xor
les
push
aaa
jbe
jge
pop
mov
xor
pop
mov
jle
or
sti
insl
call
mov
fildll
lods
inc
out
aad
mov
add
outsb
cmp
cmc
fisubrl
lcall
sbb
xchg
or
jo
aad
jle
ja
mov
mov
sbb
pop
test
stc
das
aaa
jae
or
shrl
loop
mov
leave
mov
jb
adc
sti
mov
jne
lods
sub
jge
movsb
aas
or
and
adc
xchg
in
ficompl
aaa
lods
or
cmp
loopne
jns
es
inc
cmp
pop
test
fisttpl
pop
ret
fsubp
mov
mov
cmp
fisubl
aam
scas
fidivrl
adc
pop
mov
mov
in
clc
push
xor
mov
loop
pop
xchg
jae
inc
pop
stos
sbb
push
orl
shlb
add
sahf
gs
bnd
jb
inc
arpl
scas
lea
xor
push
rol
fstpt
lea
sub
pop
ja
imul
ljmp
out
xor
popa
push
scas
or
adc
pop
enter
mov
lock
jg
mov
popf
dec
js
or
aam
aam
inc
sarb
repz
xchg
out
in
cmp
mov
adc
dec
adc
scas
arpl
daa
mov
dec
lods
jle
add
outsl
lcall
addr16
mov
fildll
xchg
out
xchg
test
lahf
mov
and
es
adc
or
dec
push
jle
jp
mov
mov
push
xchg
test
leave
fstpt
add
cmp
jns
xchg
stos
or
lods
mov
and
jne
enter
imul
or
and
cmp
rolb
jp
cmp
jle
pop
xchg
notb
adc
xchg
outsl
dec
dec
loop
and
iret
aad
fldcw
fs
and
mov
test
push
sub
cli
mov
aas
pop
frstor
pop
dec
lea
sbb
js
mov
daa
mov
aam
in
out
cs
pop
aad
mov
mov
add
dec
adc
dec
loope
mov
pop
sti
mov
mov
out
nop
arpl
cltd
add
orb
and
aam
inc
lock
mov
inc
mov
mov
loopne
and
add
mov
negl
outsb
cmp
insl
jbe
stc
scas
sub
in
push
loop
outsl
repz
bound
pop
mov
jns
ror
add
imull
outsl
dec
sbb
inc
inc
test
jecxz
xor
out
data16
arpl
pop
and
imul
jge
call
pop
shrb
pop
inc
pcmpgtb
daa
aad
mov
xchg
add
mov
jecxz
mov
mov
mov
dec
xorb
lret
xchg
clc
movsl
mov
lds
mov
mov
mov
or
fdivrp
test
sbbb
fistps
icebp
mov
sbbl
fs
dec
scas
icebp
outsl
push
and
mov
fsubl
dec
mov
fbstp
mov
mov
and
subb
out
dec
test
ja
or
cmp
fwait
xor
sub
adc
movsl
sub
mov
icebp
inc
inc
gs
addr16
aas
addr16
je
and
jns
dec
les
mov
xchg
sbb
adc
loope
repz
fisttps
addr16
sbbl
out
insl
sbb
lea
jmp
mov
dec
sub
popa
dec
pop
sub
in
shl
cmpsl
jae
mov
pop
lds
xor
lea
call
cltd
or
sbb
and
add
pop
push
sarb
pop
cmp
aam
arpl
scas
and
imul
jbe
fldl
pop
inc
sbb
clc
xor
cmp
fmuls
add
das
xchg
scas
imul
ret
pop
pop
popa
cmpsl
pop
push
and
jnp
fst
fbld
fstpt
fcompl
jbe
js
push
sbb
aad
cmp
mov
mov
cld
jle
lret
jle
jae
jmp
fstpt
xor
xor
jl
mov
stos
and
test
sub
xor
loopne
in
and
xor
lret
push
ja
les
mov
test
test
inc
ja
mov
cmp
push
push
cld
test
push
pusha
lea
repnz
rorl
adc
rcrl
lods
pushf
nop
dec
or
mov
sbb
inc
mov
sbb
mov
call
sub
push
hlt
enter
in
mov
mov
imul
stos
addr16
mulps
out
sub
jge
movsl
test
test
and
sbb
mov
sub
xchg
jno
stos
leave
shll
jl
add
xor
jnp
mov
jecxz
pop
or
out
jmp
mov
push
testb
mov
mov
mov
sbb
test
das
or
jae
mov
dec
cmp
lea
push
dec
sub
outsl
and
push
inc
jge
sub
add
jae
xchg
outsl
out
cmp
mov
push
adc
lret
leave
jp,pt
pushf
dec
aam
repnz
cmp
jne
sub
add
mov
ss
sti
cmp
inc
stos
pop
arpl
cmp
push
or
mov
pop
outsb
jmp
popa
fisubrs
movsb
iret
cmpsl
mov
cmp
pop
ja
inc
test
iret
dec
cwtl
and
cmp
xchg
mov
pushf
test
jae
into
fwait
out
add
sbbl
out
sahf
push
push
pop
mov
xchg
push
scas
cmp
sahf
mov
nop
sbb
or
pop
cmc
outsl
fcoml
or
dec
lods
adc
ficomps
addr16
sbb
adc
fsubrl
push
push
lods
mov
lret
daa
test
cmp
lahf
outsb
push
clc
idivl
adc
add
and
imul
insl
mov
mov
in
ss
movsl
inc
inc
pop
popa
fdivrp
movsb
sbb
andb
out
int
fs
out
xor
arpl
enter
add
sbb
subl
mov
jae
js
cmp
jmp
push
jge
adc
adc
sti
out
lds
mov
sbb
ja
xchg
xchg
and
imul
jae
stos
pop
scas
xchg
mov
sbb
push
rorl
dec
fidivs
jo
int
jb
inc
push
jns
fsubl
pop
adc
inc
mov
mov
fcmovnbe
cmp
mov
adc
push
insb
repz
xchg
shll
dec
mov
push
insb
sub
fsubrl
fcmovb
xchg
lods
jb
push
fisubrl
sbb
sub
sub
leave
jb
loop
or
loope
sub
xor
lock
inc
mov
hlt
out
fstpt
cmc
es
fcompl
sbb
repz
lret
sub
add
and
mov
or
mov
dec
pusha
in
pop
mov
sbb
imul
fcomp
jo
repnz
ret
mov
fstl
and
test
es
cmpsl
sbb
aas
add
insb
mov
xor
aad
lret
or
inc
mov
lods
sbbb
data16
mov
mov
mov
popf
fucomp
dec
mov
lahf
lods
adc
call
pop
mov
shll
mov
scas
fucomp
int3
mov
inc
rcr
pop
adc
popa
mov
xlat
xchg
icebp
mov
pop
pusha
mov
jl
das
xlat
jg
popa
aam
or
and
mov
bound
xchg
mov
subl
adc
cld
mov
shll
fmull
sub
xor
cmp
mov
adc
jb
mov
add
xor
cmc
push
dec
mov
popw
test
sbb
lret
frstor
mov
cmpsb
add
lcall
jnp
mov
jle
loop
jo
sahf
dec
pop
and
sahf
fcomi
imul
sbb
loopne
sahf
add
dec
cmp
imul
fsubrs
pop
in
push
jmp
subb
rcll
cmp
popf
ret
mov
ja
pop
sbb
push
xchg
sbb
cmpsl
and
dec
cmp
cli
rol
jnp
dec
nop
push
or
push
inc
mov
sub
mov
cvttps2pi
adc
or
int
addr16
cwtl
pop
repnz
or
sub
mov
mov
shl
pop
dec
add
cmp
jo
xchg
mov
cli
fcompl
jmp
lea
mulps
pop
ret
jae
mov
sbb
mov
xor
insl
scas
adc
sub
jns
lahf
test
adc
cmp
imul
mov
out
icebp
push
pop
push
jns
push
mov
test
iret
test
mov
mov
push
jl
mov
inc
mov
ja
cmp
adc
pop
sbb
or
aad
mov
adc
inc
lahf
add
or
ss
mov
data16
cwtl
daa
lahf
cmp
mov
cmc
mov
add
cmpb
loopne
xchg
jb
xchg
or
mov
subb
add
mov
mov
mov
and
clc
cmpsl
aam
rcr
cmc
mov
jmp
outsl
mov
jae
jne
xchg
adc
test
rol
fldt
jp
nopl
repz
sub
mov
adc
hlt
xor
jo
rol
insb
lock
jge
sarb
mov
imul
cmp
mov
clc
pop
pop
push
cmc
cld
fdivr
xlat
jbe
add
jl
adc
ss
xchg
shlb
btl
aad
jnp,pt
je
shl
jp
sbb
sbb
jnp
add
cmpsb
js
adc
shrl
outsl
xor
or
sub
lret
lret
repnz
and
dec
imul
sbb
les
push
push
mov
lcall
xlat
jmp
push
or
jno
fs
std
dec
sti
ret
mul
xor
jle
mov
ljmp
mov
lock
iret
jbe
fstpl
pusha
jo
mulb
or
jne
push
in
push
sti
les
sbb
leave
scas
test
mov
pushf
scas
pand
ljmp
xor
xchg
push
pop
das
jns
cmp
loope
sub
pushf
push
in
dec
xchg
adc
adc
scas
sbb
jns
mov
or
xchg
dec
xor
outsl
sub
pop
cli
mov
mov
push
xor
add
sti
imul
xchg
iret
push
imul
mov
clc
sbb
sub
pop
in
xor
mov
lret
enter
and
sbb
sub
jge
shlb
add
jmp
xchg
mov
hlt
push
pop
pop
cmp
xor
ret
scas
loopne
fcoml
nop
adc
movsl
jg
or
lds
sbb
xor
xchg
or
mov
test
sbb
add
mov
dec
pop
enter
mov
push
inc
sub
mov
add
jb
push
sbb
cmp
lea
push
incl
xchg
inc
inc
mov
xchg
mov
test
cwtl
out
js
add
push
mov
outsl
test
mov
clc
xchg
ret
pop
add
faddp
ja
sbb
daa
sub
imul
pop
loope
fwait
push
jbe
mov
jb
mov
and
jmp
push
insl
cmpsl
dec
add
push
add
cmp
adc
fcmovbe
adc
out
fucomip
and
cmp
ljmp
push
jmp
xchg
and
push
ret
mov
pop
or
stc
xor
insl
adc
push
in
mov
pop
test
std
out
clc
xchg
jl
mov
lods
in
jmp
test
sub
sub
jge
or
push
mov
push
sub
lea
dec
cmp
push
std
call
idiv
xchg
mov
sub
mov
jge
mov
sub
cmp
sahf
ja
adc
mov
sub
sub
adc
fsubrl
xchg
xor
xor
outsb
fisubs
add
scas
mov
arpl
les
inc
data16
jns
add
imul
add
testl
xlat
jbe
out
test
jl
jb
pushl
jnp
pushf
adc
das
xchg
sub
imul
xchg
out
push
mov
push
or
add
sub
lcall
and
inc
jo
jns
sbb
sbb
cld
and
nop
lock
sbb
push
inc
mov
rorb
or
pop
arpl
repnz
dec
push
fbstp
jno
flds
inc
in
cmp
ds
cmp
mov
arpl
clc
push
push
pushf
rorl
dec
mov
cli
mov
inc
imul
push
cmp
and
das
xchg
add
sub
xabort
je
into
dec
push
jmp
mov
in
rclb
inc
popf
pop
and
hlt
dec
dec
mov
or
push
inc
pop
out
xor
or
inc
push
inc
repz
enter
nop
mov
add
test
add
pop
hlt
es
and
push
aad
push
iret
fcomp
int
test
pop
fbstp
add
xchg
lcall
ret
push
add
in
mov
xor
xchg
movb
fimull
inc
jl
fcomps
or
xor
mov
bound
jg
pop
fsubr
sbb
and
lea
push
imul
xorb
sub
mov
mov
shll
push
add
push
lret
test
sbb
fmul
aad
adc
stos
pop
stos
jb
fwait
popa
out
jno
jge
and
jg
cmc
push
sub
mov
outsl
clc
outsb
je
inc
and
mov
jp
es
pop
xchg
int3
sub
mov
loopne
stc
sbb
dec
push
pop
addl
sti
and
jg
mov
add
add
cmp
stos
mov
es
loope
push
pop
cmp
mov
add
mov
fwait
lahf
or
adc
rol
aam
inc
cmpsb
add
shrb
leave
and
test
inc
clc
sub
jmp
xchg
arpl
aam
jbe
hlt
cmpsl
jmp
mov
repz
iret
cmp
in
mov
subb
imul
jecxz
xchg
ss
ret
lahf
adc
fimull
stos
aam
pushf
repz
cmpb
pop
fnstsw
ret
cli
lahf
xor
das
mov
in
fistpll
push
lock
sbb
add
testb
sub
xor
insb
aad
dec
pushf
out
bound
ret
outsl
push
out
mov
push
jge
and
jmp
clc
mov
movsl
ficoms
add
push
insl
test
cmp
cmp
mov
fists
cmp
xchg
jge
loopne
mov
clc
xchg
adc
sub
and
movsl
mov
fcmovne
or
repz
pop
arpl
xor
push
xor
or
jns
cmc
fs
fdivr
or
cmp
mov
mov
sbb
shll
sub
test
xor
sub
push
addr16
mov
ljmp
adc
enter
jnp
jl
in
or
xor
and
mov
jge
movsb
ljmp
inc
jno
pop
lods
push
mov
movsb
outsb
push
aam
push
lds
inc
in
into
pop
mov
xchg
imulb
sub
add
sbb
in
shll
inc
loop
js
mov
out
ret
mov
pop
pop
mov
ficompl
arpl
sub
xchg
xor
in
js
adc
in
and
push
lahf
sbb
leave
lea
xchg
lods
fsubrl
fsts
mov
ds
cwtl
or
or
cmp
mov
push
jl
int
and
push
push
dec
rcl
cltd
loopne
mov
fdivl
fwait
push
dec
xchg
dec
lcall
mov
cmc
jmp
push
xchg
int3
leave
int3
dec
out
cmp
pushf
movsl
aad
arpl
int
and
loop
clc
cmpsl
ds
lea
inc
int3
cmp
push
test
sbb
cld
jae
add
iret
out
adc
ret
aad
addl
imul
xor
scas
inc
cltd
cmc
std
jo
dec
mov
out
mov
hlt
sub
insl
mov
jne
aaa
rcrl
aas
test
jmp
loop
ja
push
add
sti
mov
adc
ss
jnp
xchg
push
inc
rcrl
fwait
pushf
out
inc
jecxz
dec
add
cltd
fstpl
mov
sbb
xchg
mov
add
jg
ja
inc
fwait
dec
xchg
adc
xorl
or
sbb
push
mov
orl
push
jo
pop
fistpl
pusha
lods
das
push
dec
sbb
int
js
icebp
jle
sub
add
mov
dec
xchg
cmp
cmp
test
in
in
imul
mov
jmp
mov
add
es
jnp
push
dec
sarl
ja
push
sahf
mov
xor
stc
pop
addr16
adc
mov
adc
add
loopne
jge
jge
cwtl
sete
bound
int3
jb
pop
or
mov
pop
inc
sub
sbb
mov
inc
jmp
jne
dec
push
jl
fiadds
dec
mov
psrlq
xchg
in
mov
add
leave
cli
imul
mov
int
mov
pop
and
les
mov
mov
push
inc
mov
push
push
inc
imul
sub
outsl
jecxz
inc
pop
mov
mov
or
push
adc
and
out
lahf
jbe
enterw
lahf
xchg
mov
scas
inc
in
jmp
jmp
movsb
jns
mov
lods
ret
in
out
xchg
nop
pop
lds
imul
call
dec
mov
je
ret
iret
pusha
xchg
je
js
push
and
inc
cmpb
xor
inc
hlt
cld
call
jge
ljmp
ljmp
in
add
mov
or
cmp
sarl
push
neg
dec
adc
dec
subl
sahf
lcall
pop
mov
test
out
dec
xchg
pop
hlt
push
cmp
lahf
xchg
inc
cli
cld
push
popf
lcall
rclb
xchg
sbb
xor
adc
xchg
bound
mov
lret
lahf
int3
mov
pushf
push
fdivs
jp
jae
test
test
fwait
lea
dec
cs
lret
mov
repz
push
out
or
fnsave
daa
cli
push
jo
repz
loopne
mov
lods
sub
xchg
cld
add
inc
xchg
push
mov
mov
sub
cs
aad
inc
dec
sub
loopne
cmpsl
mov
dec
dec
mov
sqrtps
jne
repz
cltd
out
lret
xchg
jle
xchg
push
stos
incl
dec
cli
daa
mov
shll
inc
push
ja
push
ljmp
fsubr
inc
std
jmp
inc
add
call
mov
pushf
or
insl
ret
jg
shlb
movsl
xor
xchg
xchg
and
xchg
fcomip
shrl
and
sub
mov
fldl
aam
dec
dec
dec
sahf
push
mov
out
and
cmpsb
outsl
add
pop
mov
inc
repz
sbb
repnz
dec
popa
rcr
lock
sbb
jmp
ret
fdivrp
xor
jg
out
fsts
fcom
lea
in
sub
mov
or
sbb
pop
sbb
mov
arpl
pop
iret
pop
mov
fisttpll
fs
adc
mov
dec
imul
rclb
sub
add
in
dec
scas
insb
push
xor
fs
xor
and
int
mov
xor
sub
cld
jmp
xor
dec
insl
jnp
aas
test
xchg
mov
inc
mov
fcoms
pop
fists
in
outsl
dec
fbstp
xor
dec
pushf
mov
and
add
fidivrs
adc
es
push
lahf
in
popa
mov
cld
or
inc
lret
push
mov
lods
dec
jbe
xchg
insl
shll
cli
dec
scas
or
test
outsl
jp
jne
mov
daa
jl
ds
push
dec
jle
inc
jecxz
fisttpll
and
pop
jbe
sahf
divb
add
xor
aaa
push
loope
imul
into
dec
sbb
push
insl
stos
mov
xchg
out
mov
pop
jb
ljmp
das
cli
sbb
movsb
fdivr
xchg
jne
scas
test
sub
add
adc
mov
loope
or
mov
mov
fsts
mov
mov
orl
mov
pop
push
les
push
addb
xchg
aam
sbb
sbb
cmpl
xchg
push
enter
jmp
sbb
repz
add
push
pop
inc
and
in
add
into
mov
mov
testb
push
sub
jl
xor
and
xor
cmpsb
push
cmp
fbld
sub
and
add
iret
repz
les
mov
in
cld
pop
push
cmp
cmp
scas
aaa
jmp
push
sbb
cmp
sarb
sbb
xchg
call
jno
sub
cmpsb
out
push
out
pop
sbb
push
jo
dec
lods
mov
push
and
xchg
repnz
gs
jecxz
sahf
push
sub
adc
pop
pop
inc
xlat
sub
push
jp
push
movsl
jns
outsl
into
jbe
add
pop
jo
pop
pop
das
inc
imul
adc
xchg
sub
clc
shrb
cltd
movsl
notl
jl
pusha
push
inc
shlb
inc
xlat
jb
xor
mov
sub
xchg
cltd
dec
sub
dec
add
add
fsts
xchg
dec
sbb
jmp
scas
add
fistps
in
aad
fs
inc
mov
icebp
imul
enter
jg
outsb
or
cs
je
out
loopne
dec
rcrb
push
clc
jecxz
mov
cmp
clc
push
lods
mull
sarb
nop
into
pop
add
adc
mov
jp
xchg
xchg
pop
mov
xchg
enter
imul
add
adc
femms
xchg
loopne
fwait
mov
addr16
ljmp
mov
sarb
xchg
or
in
scas
bound
pop
fstl
fmull
push
in
push
lods
push
loope
sti
cwtl
mov
mov
sub
lret
shr
aas
mov
cs
outsl
into
sub
xor
insl
cmpsl
lods
push
in
xlat
xchg
imul
mov
mov
cmp
pushf
sbb
push
add
cld
sbb
gs
jns
jl
mov
mov
test
pop
add
sbb
sbb
lret
pop
sbbb
pop
int3
or
mov
imul
or
pop
pop
sub
adc
xchg
insb
xchg
into
or
in
dec
sub
jo
leave
dec
cld
add
ficomps
out
or
mov
sbb
mov
sbb
or
xor
je
addr16
arpl
rclb
fwait
out
dec
push
pusha
adc
popf
sbb
xor
das
fwait
ret
or
or
xchg
jg
bound
int
cmp
jnp
aas
cmp
mov
jno
cltd
pminsw
mov
cwtl
and
jle
icebp
lcall
cmpsb
mov
xchg
xchg
xchg
pop
cld
decb
inc
push
cld
stos
nop
daa
pop
pop
les
insb
inc
lock
cmpsl
pop
and
mov
mov
dec
xchg
xchg
aad
sbb
js
dec
repnz
into
push
mov
js
inc
jne
dec
mov
sub
cli
fwait
cmp
icebp
mov
sbb
xchg
push
repz
and
add
mov
mov
mov
sub
or
inc
ret
gs
push
add
mov
pop
and
inc
repnz
imul
sub
pop
jo
mov
js
sbb
dec
nop
mov
push
dec
out
dec
xchg
mov
jb
cld
movsl
pop
in
out
outsb
movsl
leave
mov
inc
lods
arpl
push
test
fldt
fdivs
inc
lods
sub
jb
mov
xlat
mov
mov
repz
mov
pop
dec
jae
push
lretw
jns
ja
lret
fdivrl
and
push
and
mov
push
push
movl
cmpb
jp
dec
dec
xchg
adcb
mov
mov
jp
out
outsb
xor
mov
jae
lret
or
push
imul
lock
out
or
aam
push
fistpll
scas
push
inc
outsl
mov
fstpl
sbb
sub
in
mov
dec
mov
std
adc
and
pop
mov
movsb
jge
dec
pop
xchg
notb
ds
fisttpl
push
xor
and
std
clc
aaa
dec
mov
cltd
ficompl
movsl
cmp
mov
idivl
push
stos
and
mov
jle
inc
in
hlt
lea
sub
imul
in
movsl
mov
mov
aam
mov
push
xchg
iret
scas
cmp
and
loope
shll
adc
loop
leave
test
movq
inc
aam
inc
sub
arpl
inc
jo
out
std
cs
push
sbb
mov
es
dec
sub
xchg
jb
pop
int
xchg
testl
ret
mov
pop
jmp
loop
lods
xchg
mov
faddl
adc
or
pop
and
lods
cmp
ret
mov
push
and
pop
call
pop
push
ret
cmp
push
fxch
insl
jmp
cmp
popa
out
jo
aaa
and
xchg
stc
mov
xchg
add
mov
jge
adc
aaa
push
data16
jge
stos
int
inc
push
and
stos
fldt
xchg
scas
shll
xor
inc
out
lahf
fmul
mov
jl
push
xchg
fisttps
mov
pop
mov
mov
mov
push
jle
or
or
jecxz
xchg
push
jle,pt
insl
ret
pop
and
out
in
sti
loope
repz
pop
pmaddwd
jmp
mov
jae
add
rorb
imul
daa
scas
dec
mov
inc
mov
dec
cwtl
pavgw
cmp
cli
or
push
ljmp
loop
adc
imull
xor
gs
push
fistpll
inc
movsb
sbb
fnsave
pusha
sbb
mov
enter
add
mov
pop
cld
lret
mov
int3
cltd
pop
push
sbb
push
mov
scas
dec
lea
xlat
xlat
subl
lock
pop
push
push
mov
dec
imul
xorl
testl
mov
push
repnz
cmpsb
cmc
or
testb
ljmp
xchg
pop
iret
mov
push
mov
xor
loop
jb
mov
pop
sbb
sub
adc
repz
dec
pusha
push
xor
pop
sub
int
xchg
sbb
mov
mov
pop
inc
jle
fs
fwait
sbb
add
mov
mov
in
dec
push
dec
jbe
xchg
xchg
imul
pop
imul
insb
jg
js
negl
push
cltd
sbb
push
pop
mov
test
and
dec
pop
cmp
dec
lret
out
gs
imul
dec
mov
pop
inc
dec
or
in
mov
push
push
sub
insb
icebp
stos
in
sub
fs
out
mov
popf
ljmp
out
add
stos
adc
in
aam
cmpl
or
push
mov
mov
xchg
nop
push
arpl
pusha
ljmp
inc
jns
cmp
inc
inc
pop
cmc
inc
adc
xor
dec
pop
aad
jg
sbb
jecxz,pt
inc
bound
push
mov
mov
les
mov
pop
pop
add
push
cmpsb
xchg
or
pop
and
jns
subl
xchg
movsb
das
aad
pop
push
mov
sbb
sub
adc
fnstcw
loope
fdivl
mov
pop
mov
pop
pop
lahf
mov
jle
mov
aam
mov
mov
mov
sbb
dec
movb
xchg
bnd
inc
lcall
sahf
jns
or
xor
stos
dec
cmp
fs
or
fwait
xchg
dec
adc
cli
imulb
icebp
rcrl
xchg
mov
cs
add
es
testb
xor
iret
lea
sbb
xor
pop
fsubs
sbb
pop
push
js
xchg
or
loop
sbb
dec
mov
stc
dec
pop
aam
inc
test
popa
dec
cmp
mov
roll
and
mov
imul
lcall
clc
dec
inc
mov
rorb
mov
add
lods
xor
stc
mov
mov
cld
xchg
or
icebp
aas
mov
stc
scas
xor
js
out
xchg
cwtl
xor
xorps
adc
mov
inc
pop
cmp
pop
iret
int
dec
inc
jae
push
pop
dec
call
repnz
push
les
lcall
sbb
adc
testb
sarb
rcrb
lds
push
xlat
movsl
xchg
fidivrs
pop
lea
cmp
lcall
ja
cmp
dec
loope
or
rorl
insb
ljmp
setnp
nop
sub
lea
inc
or
dec
inc
insl
mov
lcall
sbb
adc
cmpsb
sbb
test
push
mov
cld
inc
shl
inc
and
mov
pop
mov
sub
sahf
cmp
xchg
push
popa
sarl
push
ja
pop
shl
ljmp
sub
insb
sub
es
imul
mov
addb
rclb
imul
or
cmpb
and
fstps
xorb
mov
push
pop
fdivl
add
out
pop
pop
dec
popl
jl
dec
std
lret
rolb
pop
adc
icebp
mov
jno
fcmovbe
cmc
add
inc
add
loop
cmp
sbb
jns
inc
push
sahf
mov
out
jns
and
push
xor
rclb
add
or
out
and
in
stos
rorb
sti
out
and
pop
push
es
push
add
in
pop
inc
out
in
sbb
dec
cwtl
or
clc
xchg
xchg
cmp
mov
mov
nop
adc
dec
inc
imul
cli
push
aam
and
je
repnz
mov
ficompl
iret
loope
adc
add
pop
ror
out
push
or
cwtl
sub
mov
push
push
xlat
mov
push
dec
fucomi
adc
popf
mov
pop
cmpsl
cmc
rclb
xchg
xor
sti
fiadds
mov
and
push
cmp
push
sub
into
outsl
pop
dec
jp
or
call
lcall
inc
sub
sub
into
or
ds
sub
dec
pusha
test
loopne
mov
stos
rolb
fldl
imul
in
mov
enter
add
add
xchg
sub
sub
inc
sbb
leave
and
stos
mov
xchg
sbb
pop
ror
pop
and
pop
loop
nop
push
nop
psubsb
arpl
in
add
rol
inc
inc
dec
daa
sub
negb
test
pop
xor
mov
push
sub
jns
mov
mov
cwtl
icebp
stos
ffreep
jne
sbb
mov
and
add
pop
psubw
sarl
fstpl
imul
int3
out
scas
pusha
rorl
pop
aaa
cwtl
mov
fadd
shlb
pop
fcmovb
xor
cmp
ds
cmp
fcompl
mov
aas
and
add
or
sub
imul
scas
xchg
push
mov
add
sbb
mov
mov
nop
xor
mov
sub
aam
cwtl
pop
mov
in
xchg
bnd
inc
out
int
xor
mov
mov
jnp
stc
or
push
and
mov
xchg
adc
pop
xor
jle
mov
ret
pop
inc
aam
dec
aam
and
push
repnz
jnp
daa
dec
push
movsl
out
movsl
insl
ss
dec
mov
add
sbb
fsubrl
shlb
xor
sahf
cmp
jp
popf
les
test
mov
sahf
xor
aam
dec
xor
push
or
int
into
jg
cmp
adc
je
scas
imul
push
fcoml
int3
jmp
jno
loopne
jno
add
xchg
stc
es
sbb
std
xchg
jl
addl
outsl
movsb
mov
ja
sub
sbb
std
jae
inc
in
cmp
mov
mov
mov
mov
mov
faddl
mov
daa
or
add
push
pop
lret
push
add
jp
ljmp
mov
in
xchg
out
or
dec
sbb
mov
fs
pop
out
pusha
xor
xchg
pusha
mulps
mov
fidivs
test
mov
mov
sub
les
mov
inc
popa
scas
sbb
lret
pop
adc
cltd
ljmp
adc
cmp
cmp
xchg
mov
push
mov
lods
push
ss
push
mov
xor
add
add
mov
movsb
jle
mov
adc
out
sub
daa
mov
dec
int3
push
int3
cwtl
pusha
call
or
test
call
and
push
divb
sub
adc
stos
xchg
imul
mov
jbe
daa
sub
adc
push
mov
aas
ucomiss
mov
out
dec
push
incb
out
jmp
test
aam
fbld
jae
mov
cmp
loop
dec
xchg
sub
insl
repnz
sbb
push
jmp
push
insl
sub
jno
sub
mov
mov
sub
shrl
adc
jmp
cmpsl
cltd
xchg
fdivs
lods
adc
mov
add
dec
lret
sbb
jge
jl
cltd
fucom
out
icebp
or
jo
ficompl
and
adc
sarb
mov
es
mov
and
cmpsb
rcrl
xchg
dec
xchg
mov
clc
rcl
daa
pop
leave
aas
cmp
movsl
fnstenv
ja
pop
add
push
stc
push
bound
add
xor
dec
push
lahf
add
sbb
cmp
xchg
arpl
push
sti
repz
fucomi
in
outsb
mov
mov
mov
xlat
std
sub
jl
ljmp
imul
subl
fimuls
lods
shrl
sysenter
das
jp
in
xchg
sbb
pop
mov
jle
dec
scas
jo
mov
sub
lahf
jmp
test
cmp
inc
xor
out
std
xor
ja
mov
mov
push
jp
scas
pusha
cmc
iret
sbb
scas
loop
adc
into
add
and
clc
or
cmpl
clc
pop
arpl
sub
adc
aad
jle
sbb
sub
dec
scas
test
inc
ja
push
nop
mov
les
test
imul
inc
mov
pcmpgtb
xchg
sti
push
push
pop
in
pop
es
sub
aad
lret
push
int3
loop
xor
in
or
cmp
add
sbbl
cld
fimuls
iret
idivb
xchg
dec
push
mov
lock
mov
ja
insl
rcrb
movsl
orb
pusha
xor
lahf
mov
aaa
into
out
pop
xor
pop
pop
mov
cmp
xor
popa
loop
xor
cwtl
cmp
sub
push
mov
leave
adc
pop
stos
xchg
shl
sub
popf
sbb
lcall
sbb
pop
push
sbb
push
andb
icebp
ds
sahf
scas
out
xchg
push
xchg
mov
popf
stc
push
ret
mov
xchg
aaa
and
inc
jae
cmp
push
sbb
icebp
cltd
imul
pop
rolb
pop
xor
ja
push
cmpsl
ljmp
or
xchg
mov
cs
dec
jl
imul
sti
loopne
divl
sbb
mov
adc
adc
lds
orl
fidivl
xor
fistps
sbb
sub
add
lods
mov
ja
inc
jb
cli
faddl
jecxz
push
push
jge
jmp
xchg
mov
das
dec
in
cld
repnz
sub
sbb
sub
mov
repz
mov
pcmpeqw
andl
mov
mov
fstpt
lds
sub
ret
ljmp
pop
cmpsb
push
add
mov
imul
sahf
sbb
jmp
jno
push
adc
pop
push
jno
dec
pop
fldcw
mov
adc
mov
mov
je
inc
or
aam
add
push
clc
ret
pop
or
sub
jb
movl
std
call
inc
movsb
xchg
repz
or
daa
pop
jg
dec
xchg
cmp
mov
fbstp
cmc
popf
sub
dec
es
adc
sti
pusha
adc
mov
stc
inc
scas
sbb
mov
xchg
dec
or
fmuls
addr16
and
lret
xor
shlb
sarb
idivb
sub
pop
xor
xchg
sbb
xchg
aam
jb
insl
sti
xchg
cmc
and
notl
jp
sub
cmp
push
lods
adc
pop
pop
popf
add
test
std
pop
mov
push
pop
or
fdivrl
loopne
push
pop
fcmovnbe
adc
inc
add
and
std
push
fwait
subl
sbb
insb
cmpsl
xor
or
rorb
cmp
and
jle
inc
or
in
addr16
pop
fldl
mov
enter
mov
xlat
rcl
push
push
cmp
aam
imulb
loopne
and
std
jecxz
mov
or
addb
out
ret
xor
push
cltd
jecxz
push
add
push
mov
pushf
mov
fists
xor
popf
push
lods
jecxz
loopne
scas
inc
pop
pop
int
and
std
mov
mov
pop
jmp
mov
rcrl
jge
adc
mov
jo
or
and
fstpt
movsb
popa
xchg
or
mov
adc
push
cli
cmp
sbb
aaa
and
ret
mov
arpl
int
fdivrs
lret
mov
fistpll
pop
movsb
out
sub
jno
xchg
shl
ja
mov
push
in
and
inc
jecxz
stc
cmp
pop
test
push
cmp
mov
imul
mov
dec
adc
clc
cmpsl
je
and
xlat
fdivrp
aam
adc
sub
push
push
or
jle
scas
inc
mov
popl
lret
mov
ficoms
fadd
sub
adc
popa
test
jnp
push
insb
mov
jp
out
mov
push
shl
jle
jo
lret
sahf
jge
mov
or
jbe
out
ret
ljmp
mov
addb
rorl
clc
fstl
in
jo
enter
and
fptan
addr16
roll
inc
out
and
mov
xor
cmp
inc
push
xchg
insl
or
decl
dec
inc
jecxz
sbb
pop
sub
sbb
mov
sub
pusha
sub
hlt
mov
mov
test
cmp
mov
cmp
in
daa
nop
out
mov
cmp
test
xchg
test
or
outsb
ss
ds
call
jb
outsb
push
test
mov
bound
sbb
sub
sbbl
pop
pop
adc
ret
scas
stos
leave
inc
insb
mov
sub
rol
call
sbb
stos
adc
mov
scas
mov
cmp
add
dec
inc
mov
ficompl
enter
iret
pusha
scas
pop
in
fldenv
mov
sbb
sub
pop
push
sub
repz
sub
push
sar
mov
xchg
pop
push
pop
in
fs
scas
mov
scas
in
pop
xchg
cwtl
sub
lds
cmp
stc
ds
sub
push
mov
inc
outsb
xchg
and
imul
cli
add
and
mov
xchg
imulb
enter
sarl
fs
push
dec
push
xchg
rorl
inc
jle
pop
dec
jg
adc
daa
mov
shll
cmp
mov
jo
or
cltd
stc
mov
or
pusha
scas
inc
fst
pop
cli
pop
xor
xchg
std
loope
pop
xlat
stos
loopne
adc
cmpsl
jae
jne
sbb
cmp
xchg
push
icebp
dec
push
xchg
iret
cmp
daa
cmp
test
shlb
push
push
push
rclb
cwtl
mov
xchg
sub
dec
jb
mov
fcoms
idiv
cmp
stos
or
cmp
adc
bnd
add
pop
and
xor
scas
jae
fucomi
xchg
outsl
icebp
sub
int3
mov
shrl
das
andb
add
push
cmpsb
xchg
ljmp
sbb
mov
pop
rol
es
ds
leave
jno
aas
in
dec
mov
jno
push
sbb
data16
ljmp
xchg
push
push
jnp
or
xchg
test
cmp
add
jbe
add
mov
nop
movsb
jo
hlt
aad
loopne
mov
push
rcll
push
ja
and
push
bound
lret
shrb
push
pop
push
call
scas
loop
cmp
mull
jle
mov
mov
mov
fstp
enter
fwait
jecxz
fcompl
cmpsb
inc
mov
push
daa
cltd
int3
into
cmc
xor
sbb
ljmp
movsb
fadd
mov
pop
jb
mov
mov
cwtl
ljmp
loop
out
imul
sbb
jo
addr16
ja
ljmp
mov
ds
ret
dec
push
mov
mov
xchg
adc
push
mov
rclb
decb
and
push
nop
add
or
das
mov
and
bound
popf
jmp
test
in
inc
add
sbbl
jb
jno
and
jg
enter
gs
sub
or
sbb
xor
adc
dec
test
push
bound
cmpsb
mov
stos
adc
out
sbb
adc
xchg
cmpsl
and
outsb
mov
iret
dec
not
js
jmp
sub
in
mov
ja
lahf
inc
lods
push
dec
hlt
jmp
nop
pop
aas
push
dec
jns
dec
mov
iret
clc
xchg
sub
push
add
into
jmp
pop
nop
xchg
mov
push
add
pop
and
sub
sub
adc
sti
inc
dec
mov
mov
add
inc
xor
jmp
fsubrl
push
notb
add
ror
ljmp
add
packssdw
lret
sub
add
jo
sahf
gs
dec
or
aam
and
hlt
aaa
mov
idivb
cli
pop
or
add
mov
xchg
int3
into
push
xchg
sti
in
inc
pop
or
pop
loope
cmp
pop
jo
xor
push
inc
xor
push
mov
mov
mov
push
gs
lcall
aaa
cmp
cltd
push
in
dec
call
dec
repz
add
push
imul
aad
lods
sbbl
push
ret
in
add
jb
daa
in
push
push
pop
rolb
outsl
sarl
data16
cmpb
popf
dec
mov
enter
fisubrs
ja
out
shl
out
cld
and
fisubrl
mov
add
ja
outsb
sbb
shrb
mov
ret
stos
call
nop
xchg
add
orl
popa
mov
in
test
ljmp
in
jbe
jge
idiv
push
mov
lods
and
jb
pop
mov
and
bound
scas
loop
cmp
insl
jle
sbb
lcall
mov
xchg
add
and
adc
push
jnp
pop
adc
ret
outsl
add
icebp
cld
shlb
push
into
or
add
sub
lds
sub
fwait
xor
xchg
mov
mov
pop
repnz
fwait
out
in
xor
sarb
enter
xor
loop
cmp
in
lret
cmp
pop
int
jae
adc
sub
jmp
cltd
and
jg
pop
mov
cmc
xor
pushf
cmp
fs
lds
mov
in
sub
jp
aam
push
inc
jl
dec
sbbl
insl
negl
inc
adc
cld
inc
mov
push
lock
outsl
jg
add
sub
xor
xor
jmp
push
jl
pop
sub
and
dec
test
cs
and
pushf
addr16
push
add
inc
and
fs
mov
out
enter
sub
jnp
push
mov
lahf
push
adc
repnz
inc
fcom
cmp
and
cmpsl
and
cmp
mov
sbb
pop
cmpsl
jb
mov
cltd
das
test
icebp
lahf
or
movb
shrl
push
je
cmpsb
out
and
lea
add
pusha
cmp
push
and
cld
js
add
cmc
fdivl
push
repnz
mov
push
sub
mov
das
stc
loopne
test
int
fcompl
push
clc
xchg
jmp
js
icebp
or
jno
cmovge
loope
inc
bswap
lea
mov
fs
je
mov
add
mov
loope
mov
inc
andl
outsb
or
aaa
pop
pop
pop
outsb
mov
mov
adc
push
sbb
pop
bnd
out
aad
imul
repz
subb
out
es
pop
push
dec
lea
rcl
and
mov
inc
iret
popa
pop
push
out
sbb
pop
cmp
xchg
mov
push
lcall
ret
jl
lret
sahf
sub
call
sti
out
mov
negb
outsl
pop
mov
mov
arpl
lret
mov
lock
mov
or
xchg
or
push
push
mov
movsb
push
adc
int3
pop
mov
ret
mov
ret
jae
inc
jg
mov
andl
pop
jge
xor
clc
outsl
cmp
add
adc
sub
insl
xor
mov
testb
pop
mov
stos
xchg
sbb
and
shr
xor
jae
dec
daa
add
cmpl
mov
daa
stc
icebp
mov
or
sbb
lcall
inc
pop
and
stos
mulb
fdivrl
jne
or
pop
rol
sbb
js
dec
jp
jb
imul
jle
mov
xor
movsl
int3
mov
dec
sub
aam
rclb
jae
xchg
push
rolb
into
cmp
fistpll
cwtl
jmp
mov
adc
lcall
or
mov
inc
push
xorl
or
inc
inc
rcl
dec
fld
es
insl
psubd
subl
sbb
inc
stos
loope
or
mov
mov
gs
andb
and
jmp
popf
adc
jge
add
loope
cltd
out
pop
into
shrl
in
jmp
lahf
mov
pop
cmp
shl
shll
jg
and
xchg
pop
hlt
cmp
insb
lock
or
pop
loopne
push
xchg
test
popa
adc
repz
sbb
mov
adc
cli
ds
mov
in
incb
pushf
pusha
test
jmp
lret
out
mov
push
lea
xchg
add
or
sahf
cltd
xor
mov
loop
mov
mov
xor
pop
clc
add
jmp
ljmp
sahf
orps
adc
mov
fidivs
cs
mov
mov
xor
push
jge
into
jo
pop
mov
mov
or
aad
sbb
inc
and
fadd
ror
xchg
pop
and
xor
jle
cmp
pop
testl
push
loopne
push
inc
popa
inc
inc
xor
bound
sbb
jg
push
inc
jnp
clc
push
addr16
cmp
cmp
lret
xor
pop
pusha
orl
cmp
mov
mov
jnp
cmpsl
scas
movsb
cltd
dec
pop
pop
and
ret
xor
adc
inc
fnstsw
aas
xchg
mov
out
cmpsb
xchg
add
sub
das
mov
jmp
and
sbb
lods
lds
push
jb
scas
mov
icebp
rorb
pop
push
xor
into
in
js
xchg
cmp
add
test
add
push
mov
cmp
jl
loope
xchg
popf
pop
mov
es
clc
sub
ud1
mul
push
mov
or
push
mov
lahf
fmul
inc
pop
jb
mov
imulb
xor
call
scas
and
out
std
lcall
pop
test
daa
push
aaa
or
insl
push
repz
gs
xlat
mov
int
pop
or
iret
leave
jnp
out
pop
mov
pop
cmpsb
jmp
repnz
add
loop
ja
es
add
xchg
out
shlb
mov
pop
call
aam
movsb
pop
xchg
or
leave
mov
xor
add
dec
ret
jle
out
dec
pop
sbb
mov
loope
andl
nop
mov
pop
mov
dec
jl
testb
clc
orl
cmp
pop
insb
jg
adc
sub
mov
cmpsb
cli
imul
inc
aam
xchg
into
enter
outsb
mov
cmp
sub
xor
dec
sbb
cmp
insb
dec
push
call
adc
mov
fsubrl
cmpsl
xchg
mov
pop
loop
fs
scas
cmc
aam
iret
repnz
cwtl
xchg
cmp
jp
enter
lock
pushl
pusha
ror
sub
dec
pop
repz
xchg
paddq
and
sbb
push
and
pop
jbe
rcr
sub
push
cmp
mov
adc
shll
fcmovb
mov
pusha
movsb
nop
jl
push
sahf
xchg
aas
popf
ljmp
scas
flds
add
ljmp
js
mov
sbb
xchg
stos
aas
fists
mov
jno
mov
aad
inc
xchg
fimuls
ljmp
mov
sbb
push
into
cli
mov
aas
call
ja
add
add
sub
or
cmc
ds
int
push
jns
cltd
aad
mov
adc
or
pop
mov
dec
sub
xchg
std
adcb
mov
and
inc
jo
insb
testl
fsubp
jg
cmp
loope
fldz
sbb
pop
xchg
fs
divb
inc
inc
seta
ret
in
hlt
movsl
out
es
ret
jecxz
push
pop
mov
out
and
jmp
imul
inc
inc
push
mov
out
jnp
cmp
fsts
sahf
stc
push
aaa
push
cld
imul
mov
enter
xchg
and
adc
push
adc
jbe
test
jmp
pop
or
cld
pop
out
dec
test
inc
aad
xchg
enter
sbb
fdivs
outsb
cltd
xchg
xor
xor
nop
loopne
shll
xchg
inc
push
repz
cmp
lods
fiaddl
mov
or
pop
frstor
aas
ret
cltd
xchg
jns
ficompl
and
jns
push
jle
rorb
adc
and
sub
fwait
popf
rcr
sub
das
mov
mov
test
jns
fstpt
sub
xchg
push
nop
cli
call
sti
test
push
xchg
or
aas
xchg
out
push
fdivl
push
shrl
lahf
dec
add
and
sub
inc
push
arpl
test
outsb
ja
mov
out
fistl
pop
inc
outsl
in
mov
dec
pop
add
cmp
xchg
jl,pn
dec
hlt
pop
aas
sti
cmp
fwait
xorl
and
out
addb
xor
shll
jecxz
jp
push
fs
pushf
pusha
inc
mov
mov
in
mov
imull
or
cmp
pushf
xchg
out
mov
sub
fnsave
lret
pop
jae
push
inc
in
dec
mov
and
cmp
arpl
mov
mov
ja
iret
data16
mov
xchg
int3
sahf
hlt
pop
hlt
outsl
mov
inc
clc
stos
add
je
inc
inc
int3
aaa
sub
adc
aas
rolb
in
or
pop
push
cld
pushf
add
arpl
icebp
in
aad
movsb
lods
ret
lods
pop
das
in
je
call
in
shll
lcall
sub
mov
xor
adc
adc
pxor
je
push
xor
les
push
and
ljmp
ja
iret
fwait
pop
cmpb
jg
xchg
aas
add
movsl
jnp
out
lock
jns
push
or
xchg
rclb
sub
imul
pop
cli
mov
incb
add
leave
pop
push
mov
es
jne
push
adc
std
es
gs
xchg
das
xor
jno
mov
jae
sarb
int
dec
adc
push
inc
push
mov
dec
pop
aad
stos
dec
in
scas
mov
daa
rcll
push
mov
loopne
gs
in
pop
pop
call
call
mov
into
scas
cld
ds
loope
mov
jae
mov
jg
cmpsb
cld
aaa
test
mov
mov
lea
jb
or
xor
xchg
lds
icebp
mov
test
add
loop
pop
cwtl
push
insl
in
fstpt
out
mov
leave
adc
mov
lret
popa
fdivrs
sub
push
incb
pop
ljmp
scas
ret
out
scas
push
xor
adc
sti
pop
lret
pop
mov
pop
lret
cli
sub
mov
adc
pop
das
stos
inc
mov
push
sub
mov
das
in
aaa
xor
inc
inc
fcmovne
add
rep
sahf
jne
loop
push
sub
or
inc
rcrl
clc
push
popf
cs
dec
jl
adc
mov
or
std
jb
fildll
inc
push
adc
jbe
adc
cli
ds
inc
add
addr16
fidivrs
pop
cmpsl
scas
sbb
enter
dec
test
and
jmp
dec
cwtl
pop
rorb
jbe
or
mov
mov
adc
jnp
xchg
lea
push
or
sub
xor
push
or
push
shrl
jno
push
divl
mov
or
ror
fdivrp
in
adc
mov
mov
stos
fs
out
pusha
stos
cwtl
mov
inc
inc
mov
push
dec
cmp
sbb
mov
ja
hlt
push
out
mov
cmp
iret
xor
lods
dec
ja
mov
movsb
xor
shrb
jb
popa
cmpsb
cmp
sahf
int3
sar
inc
pop
cmp
push
xor
imull
jp
std
pushf
dec
xor
push
xor
adc
dec
std
pushf
std
fwait
addb
inc
fcompl
adc
leave
fistpll
dec
insb
ss
fsts
xchg
adc
adc
rcr
jmp
sbb
in
jno
jecxz
cmp
cmp
xchg
pushf
cwtl
loope
add
jecxz
adc
clc
xchg
mov
mov
mov
xchg
out
js
sbb
das
les
sub
repnz
jl
js
in
insl
adc
xor
sbbb
push
lods
cmp
push
push
aaa
outsl
aaa
cwtl
test
dec
fnsave
xor
pop
mov
mov
pop
imul
mov
pop
loope
adc
repnz
out
dec
add
xchg
cs
mov
sbb
stc
jle
rcrl
mov
push
sahf
sub
fwait
mov
hlt
inc
lea
hlt
and
jp
sub
insb
jbe
mov
mov
pop
push
dec
cmp
sarl
pop
jle
lds
aaa
mov
jmp
daa
jb
sbb
push
push
cmp
stos
pop
push
add
aad
sahf
insb
or
repz
dec
std
iret
loop
dec
adc
pop
cmp
mov
andl
or
jno
cmp
ss
fwait
add
mov
repnz
sahf
insb
mov
cmp
mov
xchg
lds
xor
stc
ret
lret
clc
in
xchg
es
roll
fimull
out
pusha
sbb
pop
call
pop
and
mov
call
out
es
dec
cmp
pop
mov
cmp
out
pop
insl
cwtl
test
fisubs
or
enter
mov
enter
jae
pop
sbb
mov
mov
jle
lcall
xor
in
fdiv
xor
add
adc
xor
and
test
pop
dec
jnp
int3
and
popf
xchg
and
imul
scas
pop
sub
out
push
adc
notb
insb
jb
jle
cmpsb
stc
mov
nop
hlt
das
push
test
mov
sbb
xor
int3
addl
jns
lods
xor
fstl
xor
int3
out
cwtl
fbld
imul
fidivrl
in
js
mov
jge
sti
jge
aam
int3
mov
shrb
adc
sbb
outsb
xchg
sbb
sti
mov
js
mov
pop
inc
jo
sbb
aad
dec
jne
sbb
ja
jns
push
call
lock
pop
rorl
jmp
aad
xor
cmp
sbb
jmp
daa
fldcw
imul
mov
adc
or
ror
add
sub
add
xor
in
sbbb
sub
add
shlb
pop
pop
cmp
mov
shl
fwait
imulb
pusha
inc
popa
jns
and
cmp
mov
jge
in
mov
pop
adc
xchg
mov
xchg
pop
js
out
cmp
pop
ljmp
jmp
sbb
sbb
xchg
enter
adc
pop
dec
lea
daa
inc
jns,pn
sbb
lock
shl
jae
inc
int3
inc
inc
movsb
mov
decb
lea
and
loope
add
lds
sarb
jo
inc
fs
ljmp
jmp
dec
dec
pop
stc
mov
inc
jns
or
sbb
xchg
sbb
pop
cmpl
iret
cmpsb
leave
test
out
push
and
mov
pop
popa
hlt
xor
or
xor
dec
out
mov
enter
andl
xor
jns
test
adc
sub
hlt
jne
ja
cld
in
sub
rorl
mov
push
in
push
daa
aas
dec
pop
lcall
int3
mov
ljmp
mov
out
test
inc
mov
das
ljmp
int3
xor
out
jne
mov
cltd
push
rcll
jp
jo
daa
inc
fnstsw
fwait
ret
push
call
adc
in
jle
push
and
cld
ret
ja
mov
jbe
xchg
sub
repz
test
enter
repz
ret
dec
cmp
push
and
push
enter
or
add
and
jno
xchg
cwtl
add
into
pop
lds
jmp
fnstcw
loope
out
les
lock
out
ljmp
jge
fsubl
mov
mov
shrl
dec
cs
sub
or
movsl
rorl
into
ss
mov
xchg
jge
adc
mov
xchg
mov
jp
push
jo
push
xchg
pop
mov
adc
cmp
movsl
mov
push
fsub
ja
insb
xor
rorb
adcl
pop
mov
jmp
pop
xor
jo
push
outsl
and
in
cmp
cmpsl
insl
push
xlat
shlb
mov
lret
fbld
push
xor
sub
es
pop
push
shl
jbe
or
pop
outsb
test
add
in
mov
adc
inc
mov
lahf
arpl
jge
aam
out
jl
mov
adcb
dec
jecxz
popf
cmp
in
ficompl
sub
lahf
mov
push
xchg
mov
add
aam
sbb
aam
xchg
xchg
jge
lret
das
xchg
dec
lcall
pop
push
out
inc
lcall
add
push
add
sbb
inc
outsb
push
ja
push
and
sbb
jp
cmp
inc
mov
fld
add
mov
cli
jle
enter
mov
sub
mov
sarl
sub
pop
enter
jo
xor
jmp
test
gs
pop
in
inc
sbb
fxch
scas
test
pop
or
imul
sbbl
roll
lds
ss
sbb
sarl
dec
cld
jbe
push
imulb
repz
test
xor
call
mov
les
or
pop
xchg
pusha
pop
sti
std
inc
mov
out
ret
insb
mov
mov
gs
aas
sbb
outsb
pop
jecxz
aad
jbe
out
rolb
sub
push
jl
ds
fs
ret
pop
dec
mov
add
adc
or
sub
aam
lods
xchg
insb
mov
enter
cmp
or
jne
or
mov
rcr
inc
or
clc
ja
lods
nop
pop
sahf
decb
cmc
pop
jle
sbb
sub
call
addr16
rcl
push
xorb
dec
sbb
jge
aad
mov
inc
cmc
or
movsl
adc
hlt
xchg
repz
inc
in
popa
dec
lret
es
lahf
sub
mov
mov
daa
mov
daa
inc
xchg
push
notl
mov
fisttpll
cld
add
int
or
pop
mov
jb
push
jecxz
loop
push
aam
xchg
xchg
popf
push
push
gs
adc
xor
lahf
stc
lahf
filds
sbb
sti
out
outsb
add
in
icebp
mov
ss
fwait
lcall
dec
jp
pop
jbe
xchg
div
fbstp
in
pop
loope
mov
xchg
lahf
out
int
and
or
mov
mov
xor
call
mov
ds
push
jl
xor
jb
insl
jle
lds
mov
inc
pop
sbb
jle
sbb
add
xor
jmp
lods
es
cmpsl
dec
jnp
dec
add
xchg
daa
pop
sub
es
adc
enter
fucomi
movsb
inc
in
cmp
cmpsl
or
andl
adc
or
sub
push
mov
nop
lret
les
das
dec
jo
dec
cmp
sub
ljmp
sub
out
cmpsl
lods
jne
loope
test
jmp
jl
pop
jb
mov
inc
sbb
cmp
mov
push
add
sub
mov
inc
insb
aaa
xchg
adc
push
cmp
out
test
jmp
sbb
sar
lods
mov
mull
mov
cli
fsts
push
roll
pop
adc
pop
sarl
in
xor
cmp
mov
add
jp
jnp
jae
pop
mov
and
mov
shlb
mov
cmpsl
ror
test
sub
or
push
pushf
scas
pushf
andl
inc
shlb
cmp
pop
loopne
ret
or
inc
pop
int3
jl
ficoml
push
mov
pop
add
pusha
mov
in
addl
test
shrl
push
xchg
lahf
mov
jg
scas
pop
outsb
inc
pop
ja
aas
fcmove
and
pop
outsb
js
sbb
aaa
lcall
mov
repnz
mov
mov
lods
lds
sub
out
dec
fdivr
stos
mov
inc
rolb
adc
pop
inc
es
pop
adc
movb
lea
in
mov
mov
and
call
xchg
cld
cli
jae
add
pop
or
lock
ja
mov
out
out
push
xchg
pop
mov
pop
mov
or
inc
cmc
xorb
dec
fdivl
int3
jb
xchg
jnp
xor
pushf
es
aam
push
sub
in
stos
inc
and
insl
vpaddb
loopne
int
ret
xchg
jmp
shrl
mov
shll
add
jns
pop
lea
jle
or
fwait
or
loop
das
idivb
faddp
sub
xor
cltd
add
ss
daa
lret
mov
dec
fnstcw
ja
sub
lcall
mov
jo
leave
aam
fldt
push
subb
or
dec
sub
subb
add
jge
xchg
pop
push
mov
inc
add
js
in
cmpsl
lahf
sarb
outsb
mov
sbb
addb
iret
xchg
cmp
stc
pop
cmp
inc
xchg
adc
rcrl
mov
inc
in
arpl
jo
fldcw
jbe
push
repz
inc
mov
jge
sub
aaa
iret
scas
dec
mov
inc
inc
sub
dec
cmpsb
xchg
lods
sbb
push
adc
outsb
ds
push
cmp
testl
cmc
push
test
inc
repnz
pop
sub
cmp
mov
xchg
mov
cmc
call
or
int3
cwtl
cmp
jecxz
dec
jno
pop
adc
sbb
cltd
les
stc
inc
cmp
ja
sub
cmp
mov
sysexit
cmp
clc
adc
pop
xchg
lret
std
js
cmp
xor
imul
cmp
mov
cmc
imul
add
pop
cs
or
aam
sbb
dec
cmp
mov
xor
and
jge
adc
push
xchg
pop
mov
icebp
sub
mov
pop
inc
pop
and
daa
mov
loop
push
fimuls
pop
aam
cmpsw
push
or
imul
inc
or
cmp
in
iret
and
or
pop
rcl
adc
push
push
imul
les
inc
lds
add
mov
jo
cmpsb
add
xor
test
icebp
inc
out
pop
xor
in
fiaddl
add
mov
out
dec
fcmove
sbb
scas
mov
rol
in
loope
imul
ljmp
mov
adc
sti
push
dec
xlat
rolb
mov
les
pusha
insb
jle
sbb
or
repz
movsb
jp
add
test
mov
sub
in
leave
xchg
and
popf
repnz
in
pop
jle
sub
rorl
add
push
pop
push
rcl
loope
cmpsl
imul
fcomps
jle
mov
jp
mov
inc
mov
rcr
test
pop
cmpsb
jb
cmp
pop
testb
cmp
pop
clc
add
jne
imulb
mov
notl
adc
out
lret
push
sub
lret
push
xchg
testl
push
xor
test
rorb
pop
inc
jl
jl,pn
fwait
mov
fdivr
gs
mov
ljmp
fadds
ljmp
movsl
movsb
or
sub
daa
out
ljmp
push
test
clc
loop
push
dec
into
xchg
inc
iret
je
sub
lcall
and
mov
push
cmpb
xchg
je
ret
sub
xor
pop
sar
adc
cmp
cmpl
mov
loop
fwait
mov
sbb
and
jno
lret
mov
hlt
loope
fmuls
out
inc
mov
inc
xor
ds
scas
aad
push
pushf
es
mov
pop
lcall
fistl
lods
ljmp
push
ror
pop
rcr
xor
jmp
jp
pop
je
scas
int3
cmpsl
imul
mov
cld
inc
cmp
mov
sub
outsb
mov
sbb
xor
sub
dec
mov
pushf
cmp
std
pop
shll
lcall
xlat
sbb
pop
ret
xor
cmp
sub
cltd
iret
aaa
adc
pushf
sbb
pop
lret
mov
test
popa
jbe
pusha
fwait
adc
test
dec
fiaddl
cwtl
out
xor
pop
insb
fnstcw
stos
xchg
mov
fdivrp
jg
daa
xor
adc
mov
leave
fisubrl
rorb
das
addr16
movups
out
idivl
ja
sub
jle
mov
dec
ficoms
xor
jno
sub
sbb
push
jae
aad
ret
scas
lods
cmp
rol
clc
jbe
jecxz
or
stc
push
sbb
dec
bound
cmp
sysret
mov
scas
push
nop
loope
lahf
sub
xor
pop
mov
call
lock
dec
adc
stc
xchg
cmp
jle
xor
fimull
shr
inc
jo
aam
jmp
and
shl
cli
test
ja
dec
pop
and
scas
sbb
mov
adc
int3
fnstenv
push
daa
xor
fidivrl
into
xchg
jp
dec
inc
xchg
std
cltd
sarb
mov
jmp
mov
fucomp
movsb
cmpsl
sbbb
dec
dec
xchg
out
cmp
inc
xchg
lock
jg
jno
xor
mov
mov
rclb
aas
push
xor
stos
fsubrs
pop
dec
push
or
iret
mov
stos
ss
inc
lret
pop
hlt
leave
dec
mov
xchg
sbbl
hlt
test
add
sub
add
subb
lret
cmp
cmp
int
mov
xor
movsl
notb
inc
fidivs
aaa
add
add
ficoms
vunpckhps
lret
xchg
pop
data16
mov
inc
and
popf
aad
mov
sub
dec
sbb
idivb
test
fwait
int
push
aas
mov
insl
es
pop
push
add
movsb
testl
sbb
cmp
dec
in
xchg
fdivrl
je
xchg
pop
and
arpl
and
push
loop
lds
sub
xchg
fmuls
lret
rclb
mov
cs
outsl
mov
in
rcrb
mov
and
sarl
or
lock
divl
mov
mov
fmulp
inc
inc
sub
lret
push
pop
lret
jmp
insl
sub
fcoml
lret
or
push
adc
idivb
inc
sub
shr
lcall
push
in
imulb
push
sbb
xchg
pop
xor
sub
cmp
fs
clc
fldenv
movsb
inc
test
nop
or
xchg
mov
les
pop
xlat
dec
movsb
adc
xchg
stos
fldl
fsubrp
les
jp
mov
ds
imul
or
ficoml
jo
mov
jns
jl
sub
mov
adc
sbb
hlt
loope
pop
aaa
js
stc
sbb
inc
inc
es
xor
std
adc
fistl
mov
adc
clc
imul
in
stc
or
sub
adc
in
imul
sbb
dec
les
add
and
insl
lods
adc
fsubs
jne
stos
inc
mov
jmp
imulb
jge
xchg
into
in
cmc
xor
sbb
pop
xor
fidivl
in
ja
das
ret
sbb
call
add
push
xchg
push
dec
in
scas
jbe
iret
pop
sbb
adc
int
hlt
push
and
out
xchg
mov
xor
std
sti
inc
mov
or
fdivl
mov
in
in
mov
mov
jb
out
out
add
rorb
inc
mov
sbb
mov
subl
push
jecxz
jge
roll
mov
test
nop
sub
rolb
xchg
dec
xor
or
movsl
xchg
mov
xchg
xor
les
xor
scas
sbb
inc
mov
cmp
aaa
cmpsb
mov
mov
mov
loope
sbb
daa
xchg
sub
shrb
mov
out
adc
pop
aaa
frstor
add
fmull
mov
jo
addr16
out
movsb
sahf
push
and
daa
push
push
imul
xchg
clc
clc
int
adc
add
push
leave
pop
mov
dec
clc
fidivrs
mov
imul
out
ss
adc
mov
popf
loop
inc
lret
xor
dec
stos
loopne
lock
pop
add
sbb
sbb
in
outsl
jmp
filds
aas
xor
rcll
cmpsb
fbld
mov
call
add
movsb
inc
add
outsb
loop
out
shlb
xor
push
cmc
adc
dec
jb
je
push
icebp
inc
sti
xor
ja
push
jg
dec
in
mov
cld
mov
dec
cli
add
pop
xor
pop
in
dec
movsl
cmc
push
gs
mov
cmp
mov
mov
mov
das
pop
push
popa
push
loope
adc
inc
add
movsb
aam
icebp
addl
cmp
mov
and
ds
mov
push
push
cmp
test
outsl
mov
lock
rol
dec
xor
push
sbbb
adc
js
outsl
adc
mov
stos
add
and
jmp
sti
call
into
sbb
es
add
outsb
xor
sub
xchg
sbb
scas
cmc
lahf
cmpsb
loop
pop
out
movsb
gs
testb
adc
outsl
ljmp
mov
pop
int3
in
cmc
sub
dec
incl
xorl
ds
inc
clc
sub
out
jns
test
icebp
cmpsl
ds
cmp
cmp
jmp
lods
insl
inc
jno
push
jl
mov
jne
fnstcw
movsl
cs
das
negl
pop
mov
test
das
insl
in
int3
mov
popl
xchg
movsl
aad
cld
insl
lahf
add
jg
rcrl
out
jns
or
push
cltd
jl
outsl
cmp
es
xchg
out
repnz
inc
inc
sbb
cmp
scas
mov
arpl
jb
dec
negl
pop
cmp
jno
out
sbbb
inc
push
cmp
xchg
push
sbb
xor
out
xor
xchg
das
stos
movsl
fcmovb
mov
mov
test
bound
aas
inc
fimull
add
adc
out
sbb
push
rclb
lret
xchg
cmp
std
push
repz
xchg
cmp
inc
scas
in
add
nop
jg
fadd
lods
jmp
shl
arpl
pop
sub
or
xchg
in
xor
xor
xor
insl
aas
push
adc
iret
xchg
xor
lret
xchg
movsl
mov
dec
cmpl
stos
jbe
icebp
jne
or
fucom
aas
cmc
xchg
ds
push
shlb
out
push
xchg
inc
call
stos
rcrl
jp
pop
sbb
je
outsb
jmp
push
xchg
data16
or
les
test
cmp
cltd
sub
lcall
into
push
mov
leave
ret
xchg
inc
ja
or
enter
sbb
fildll
xor
mov
jns
cmpsl
pop
scas
inc
push
xor
gs
test
test
enter
cs
aad
dec
xchg
sbb
lea
push
jmp
xchg
icebp
push
cs
pop
jne
scas
std
xor
dec
add
mov
out
stos
jne
lods
stos
cmp
mov
testb
rorb
pop
jge
xchg
push
mov
fiaddl
movsb
push
mov
insb
js
or
aam
enter
outsb
jmp
push
pop
jns
cmp
mov
stos
and
pop
push
mov
push
divb
mov
and
fmul
mov
fmull
repnz
mov
mov
mov
cld
cmpsb
xor
andl
and
in
ss
loopne
movl
jb
popf
or
pop
push
lcall
sbb
mov
jns
shll
mov
dec
jb
in
lods
out
out
cs
inc
hlt
sub
fsubs
jg
adc
in
jns
pop
lcall
xor
mov
std
pop
jo
push
mov
dec
push
lea
sbbl
test
xor
push
xchg
or
sub
xor
cli
stos
xchg
push
mov
pop
pop
not
xchg
jg
cmp
sub
pop
int3
aaa
mov
mov
sti
pusha
outsl
jb
aaa
cmpsl
mov
daa
subb
jb
xchg
cmpsl
inc
ss
test
mov
push
dec
xor
xor
pop
mov
xor
stc
push
dec
sbb
pop
imul
sbb
dec
or
sbb
mov
sub
fbld
stos
dec
add
popf
and
test
cld
dec
mov
push
jmp
mov
idivl
jg
cmpsb
or
dec
jbe
mov
sbb
cmpb
cmp
cmp
xchg
pop
inc
adc
push
shll
out
lcall
push
mov
mov
repz
mov
inc
ds
jg
mov
std
les
in
ja
or
jns
dec
fildll
scas
xchg
dec
mov
jl
push
xchg
mov
cmp
scas
mov
cmp
sbb
inc
add
sub
push
push
rcr
dec
adc
jb
cwtl
ret
xchg
pusha
out
mov
fldl
lods
int3
fnsetpm(287
dec
add
in
or
sbb
pop
mov
push
dec
push
lea
jb
shrb
mov
fsubrp
dec
cmp
cmp
mov
cmp
add
sbb
jmp
leave
inc
ficompl
mov
icebp
mov
dec
inc
nop
pop
jecxz
repz
cwtl
subb
divl
sahf
mov
ja
imul
adc
out
inc
mov
mov
jnp
adc
call
push
sbb
dec
test
ss
loopne
clc
cmp
sbb
sbb
fcmovnu
into
sub
or
cmp
insb
sbb
popf
sbb
and
into
rorb
inc
repz
add
sub
repz
cmpsb
sbb
das
cmp
cmpb
xchg
mov
pop
or
aas
xor
call
sbb
jbe
jns
call
sub
roll
daa
xor
cwtl
ljmp
cmp
sub
out
jmp
sarl
jle
cmpsb
ret
adc
lret
fld
mov
popf
into
xor
mov
fwait
clc
addr16
inc
inc
or
test
stc
adc
xchg
cmp
mov
jnp
adc
nop
inc
les
movsl
das
jecxz
adc
fisttps
sub
mov
into
dec
push
inc
xor
push
out
inc
les
and
add
test
movsl
cmc
int
inc
adcl
mov
shrb
sahf
or
sahf
stos
sbb
jge
inc
cmc
mov
mov
clc
enter
outsl
add
add
xor
add
mov
shll
je
lcall
jp
pop
push
push
fbstp
jg
and
cmp
mov
push
push
testb
adc
pop
cmp
cmp
out
mov
add
in
adc
mov
cld
or
cmp
out
add
sub
and
insb
cmp
in
xorl
push
push
adc
add
mov
and
repz
mov
xchg
or
pushf
pop
xchg
mov
mov
shll
cmp
dec
insb
mov
fcmovu
dec
cmp
mov
and
cmc
out
dec
scas
dec
xor
mov
sub
in
mov
xor
xchg
sbb
cmp
pop
mov
std
in
mov
inc
mov
and
fmulp
sbb
sbb
mov
add
ljmp
arpl
ljmp
es
push
in
cmp
enter
mov
add
rcrb
mov
mov
dec
fdivr
mov
mov
sub
mov
mov
mov
incl
or
out
mov
dec
or
pusha
test
les
outsl
jns
call
std
loopne
pop
aam
push
sbb
loopne
dec
loop
bnd
cmp
aam
ret
add
adc
in
fstpt
int
xchg
lcall
fcmove
sbb
movsb
aaa
and
sbb
inc
cmc
adc
add
lds
movsl
out
mov
lea
cmpsl
shll
addb
pop
popa
test
lds
jno
jno
mov
incb
xchg
xchg
movsl
jmp
add
scas
ja
loop
lock
ja
shl
stc
inc
xchg
jo
insb
jl
dec
sbb
xchg
orb
sahf
repnz
sbb
movsl
add
push
cmpb
inc
dec
movsl
icebp
jge
pop
pop
jne
push
aaa
sbb
gs
push
int3
pop
or
sbb
lret
mov
add
das
ss
mov
mov
dec
mov
ljmp
gs
outsl
imul
jo
das
mov
xchg
in
outsl
imul
sahf
xchg
jnp
aad
mov
sub
mov
fisubs
test
psrad
stc
push
xchg
adc
hlt
adc
jne
dec
inc
stc
movsl
xchg
jo
std
jmp
in
int3
arpl
jnp
or
push
dec
mov
es
mov
pop
xor
cmpb
push
cli
pop
test
nop
stc
movsb
lods
xchg
cli
popl
or
insb
xchg
mulb
jge
adc
outsb
icebp
add
fldcw
pushf
inc
test
cmp
sbb
pop
aaa
inc
xor
and
jp
into
xor
popa
test
sub
aam
jl
sbb
mov
jle
out
mov
xchg
pop
inc
lea
call
test
adc
stos
rcll
mov
mov
imul
xchg
sub
repz
mov
nop
xor
push
xor
pop
insb
arpl
lods
fisubs
call
mov
dec
pop
shlb
sbb
cmc
insl
pop
and
fisubrs
das
inc
outsb
call
push
push
rolb
shrb
fildll
adc
jl
fstp
adc
mov
das
popa
jns
inc
push
movsl
aam
in
mov
sahf
mov
mov
cltd
cld
lret
xchg
inc
sbb
mov
add
mov
pushf
mov
xchg
mov
sar
pusha
cmp
leave
sbb
inc
das
pop
dec
jmp
movsb
sbb
jo
sub
adc
imul
clc
lret
and
ss
or
mov
dec
imul
aam
pop
enter
mov
mov
daa
lahf
outsb
rcrb
aaa
pusha
neg
addl
push
pop
xchg
movsb
jmp
jmp
sub
shrl
mov
bound
sub
lods
cmpl
ss
cmp
std
in
and
rorl
ds
stos
add
cld
icebp
mov
jnp
jo
inc
aas
incl
cmp
in
dec
notl
mov
ss
ficomps
mov
jne
popf
out
jb
mov
xlat
sbb
jne
incb
add
cmp
sbb
cmpsl
scas
adc
mov
scas
jne
lret
imul
push
popa
mov
into
out
and
dec
mov
fisttps
enter
movsb
dec
shll
fdivrl
cmp
rcrb
mov
aad
fmuls
shll
cmp
je
rcr
mull
fcmovnu
jo
flds
xorb
out
insb
jb
xor
imul
cli
bound
add
pop
mov
cmp
jnp
js
mov
mov
adc
xchg
inc
sub
xchg
and
push
mov
mov
pop
xor
orb
xor
lock
mov
stos
inc
in
adc
hlt
sbb
test
int
mov
std
push
xor
adc
cbtw
mov
or
psadbw
dec
loope
jp
xchg
xchg
shrl
sub
sbb
jb
add
dec
cmp
mov
mov
mov
pop
jo
sbb
xlat
dec
add
mov
sbb
sbbb
add
push
aad
les
cmpsb
test
sahf
dec
aad
pop
push
dec
or
hlt
addr16
sahf
lock
out
sahf
and
jae
fbstp
cmc
dec
jb
cld
loope
jo
cmp
adc
xchg
test
movsb
cmpsl
pop
inc
pop
pushf
inc
cmp
in
dec
pop
in
cwtl
pop
or
dec
arpl
adc
cmp
push
xor
dec
shll
jns
rclb
sbb
cmpb
daa
sub
push
jg
inc
lods
cli
loop
or
fwait
out
loopne
into
push
test
aam
lret
push
in
mov
add
out
cmp
repnz
adc
dec
push
sbb
xchg
enter
imul
movsb
cwtl
push
jmp
jp
movsl
int3
mov
adc
push
pop
add
cmpsb
jge
pushf
out
pop
subl
xchg
imul
lret
in
lds
in
push
add
push
rcrb
push
imul
sti
pushf
sahf
ds
xor
test
mov
jmp
pop
cli
or
shrl
sub
daa
jo
mov
ja
call
test
push
test
mov
mov
sub
xor
and
pop
or
cwtl
pop
lods
fdivl
shll
pop
popa
jmp
imul
int3
push
rorb
out
adc
push
pusha
pop
stc
cmp
js
roll
dec
outsl
xchg
je
testl
repnz
or
mov
sbb
sti
aas
mov
icebp
iret
or
and
mov
add
adc
and
stos
pusha
stos
pop
mov
stos
and
xchg
fwait
add
ss
push
loop
and
lret
xchg
fisubl
out
subb
push
repnz
xchg
iret
adc
aam
add
in
orl
xchg
jae
out
jb
std
mov
push
cmp
pop
cmp
xchg
div
loopne
mov
test
jno
push
push
shll
aaa
rcll
push
xor
sbb
lods
pop
jne
xchg
cld
and
xchg
adc
roll
std
adc
pop
das
mov
xor
adc
jp
pop
mov
fimuls
mov
pop
add
xor
adc
xorl
xchg
cmc
pop
sbb
add
sbb
test
sbb
xor
leave
repz
or
mov
insb
push
push
pop
mov
cmpsb
dec
stos
pop
sub
das
outsl
and
lret
sbbb
popf
jp
jle
mov
aam
rol
outsb
mov
mov
out
push
scas
stc
test
loop
xchg
fldt
mov
mov
xor
je
jnp
mov
jno
jae
lods
dec
push
stc
icebp
rcrb
inc
and
jg
lock
test
cli
int3
loope
xchg
fyl2x
and
xor
push
lods
cmp
jg
adc
scas
aad
sti
pop
popa
cs
and
repnz
adc
mov
add
bound
fwait
int
mov
into
popf
push
adc
xchg
push
in
jp
testl
fisubrs
sti
xchg
nop
sub
jmp
and
daa
aaa
aam
inc
fstp
add
sbb
xchg
rcll
sub
push
adc
add
aam
popa
push
xor
sub
adc
into
movsl
mov
or
xchg
lds
lret
rorl
inc
push
adc
jp
mov
repz
into
insb
popf
sub
insb
out
mov
cmp
out
inc
jg
out
insb
insb
mov
lret
mov
lret
mov
jg
or
cli
mov
in
lods
xor
push
jecxz
les
jle
loopne
jp
sub
push
and
imul
push
test
inc
dec
jb
cmp
mov
and
cs
data16
and
leave
imul
mov
mov
mov
out
mov
imul
stos
dec
rcl
jb
dec
mov
aas
shl
pop
ds
lea
insb
or
pop
lods
sub
push
cmpsl
and
bound
sub
sbb
ret
xchg
sub
dec
push
shl
out
lret
mov
add
cmp
mov
enter
sbb
add
xchg
dec
stos
jg
movsb
cmp
ja
pop
xor
arpl
push
sbb
mov
fld
lock
adc
popf
dec
aad
or
mov
cwtl
lret
lcall
es
jbe
and
cmpsb
in
inc
add
clc
and
leave
ds
pop
cmc
repnz
pop
pusha
inc
test
jno
shlb
ret
inc
je
fsubr
popf
mov
sub
popa
mov
jno
cmpsb
dec
xor
lret
or
cmp
mov
das
packsswb
aaa
fxch
cli
pop
mov
pusha
lds
push
in
out
jle
mov
nop
cli
int3
and
adc
xlat
xchg
in
out
mov
sbb
in
cmc
sub
in
arpl
xchg
ret
data16
cmp
mov
movsb
cwtl
clc
in
ss
push
insb
jg
lret
xchg
subl
or
cmp
add
jp
int
jle,pt
dec
addl
sahf
gs
mov
daa
scas
xchg
mov
dec
pop
dec
mov
xchg
outsl
enter
cmpsl
pop
roll
pop
fnsave
aam
pop
jns
aam
aas
pop
inc
jo
js
and
leave
push
push
mov
xlat
ljmp
clzero
fwait
cld
jae
sbb
mov
in
mov
jnp
scas
mov
jp
loope
sub
mov
cli
mov
xchg
sti
jo
fcmove
rclb
mov
rcr
out
mov
fbld
push
push
sbb
xor
out
mov
push
jo
hlt
mov
sbb
adc
aaa
xchg
mov
stos
shr
add
adc
mov
cmc
push
call
je
sti
mov
push
mov
cwtl
ljmp
fs
jl
lods
cltd
sub
xor
dec
mov
int3
mov
lea
addr16
gs
jmp
dec
sahf
mov
mov
xchg
fprem1
mov
iret
add
lock
das
push
fwait
enter
out
pushf
add
int
and
std
xchg
dec
cmp
cmovg
xor
dec
xor
cmp
mov
jnp
xor
fbld
aaa
imul
or
mov
cmpsl
jb
inc
subb
sbb
xchg
stc
mov
inc
dec
lods
je
pop
mov
outsl
jo
std
decb
push
dec
movsb
xor
out
sbb
sbb
bound
sub
or
xchg
popf
mov
jecxz
xchg
xor
test
ljmp
mov
sub
lea
call
mov
stc
push
mov
cli
dec
in
gs
jmp
vpaddq
loope
repz
jmp
sbb
test
add
aad
sbb
mov
pop
sub
fcmovnbe
outsb
aas
lret
or
add
cmp
push
fistps
int3
lcall
pop
push
xor
mulb
sahf
xor
repnz
xchg
mov
mov
mov
rcr
mull
inc
pop
mov
movsl
mov
xor
pop
leave
mov
in
or
mov
in
fst
jg
xor
adc
jmp
cli
xor
sub
pop
jo
das
test
dec
mov
sub
mov
inc
popa
sbb
cld
dec
inc
push
add
push
out
fldcw
das
xchg
xor
or
jmp
xor
int3
movsb
scas
in
and
aaa
stc
test
pushf
inc
mov
jp
mov
cmpsl
or
sti
lar
fwait
inc
pop
or
mov
cmp
loope
mov
inc
jne
fiadds
cmpsl
mov
xorb
and
fistpll
mov
gs
aas
cmp
mov
dec
mov
adc
mov
in
jg
cli
mov
test
push
add
divl
leave
scas
cmp
cs
testl
push
test
lcall
cmp
movsb
push
addr16
xchg
jp
orl
out
outsb
cmpsb
dec
movsb
cli
pushf
xchg
dec
mov
push
int
jns
mov
into
cmp
arpl
adc
dec
loope
nop
xorb
pop
jb
push
js
push
and
stos
cmovbe
jl
das
jne
cltd
mov
shlb
adc
lea
cmp
adc
jg
cmp
cmpl
mov
adc
addr16
mov
mov
xor
inc
sbb
mov
jb
out
out
shl
inc
mov
fsubl
xchg
ret
cmp
push
stos
sub
sub
in
mov
int
cmp
dec
dec
cld
lcall
jae
or
sbb
pop
decb
push
adc
fucomip
fbld
xchg
fisttpll
cltd
aad
push
and
shlb
fdivrl
call
mov
push
or
adc
mov
push
push
xchg
call
cld
and
and
pop
popf
cmpsl
addr16
icebp
or
mov
out
inc
inc
mov
cmp
xchg
cmp
mov
iret
mov
sbb
jno
mov
enter
and
xor
xchg
pop
cmp
xor
xor
lock
fdivrp
fstpt
lcall
xchg
inc
mov
cltd
int3
push
negb
and
mov
pop
mov
mov
insb
cmp
mov
jl
xchg
push
lret
pop
icebp
inc
out
jb
cmpsl
les
js
add
inc
pop
fsubp
jb
sub
pushf
adc
xor
popa
outsb
dec
add
lcall
pop
mov
xor
icebp
xor
sahf
andb
ret
pop
push
cli
mov
push
imul
cld
movsl
aaa
push
pop
cli
les
jecxz
pusha
dec
inc
test
mov
outsl
pop
loop
test
push
out
jnp
jns
outsl
and
sbb
push
sub
dec
outsb
sub
add
dec
fchs
mov
push
leave
pusha
inc
in
fdivrs
mov
cld
pusha
inc
xchg
in
std
adc
jecxz
sub
jge
icebp
dec
mov
push
push
adc
int
aad
iret
jg
out
pop
xorl
scas
xchg
sti
into
out
jne
xlat
dec
repz
xchg
sahf
xchg
mov
mov
xchg
pop
popa
mov
push
push
pusha
mov
cmpsl
stc
jmp
push
insl
cmpsb
mov
xor
insl
inc
aas
jb
inc
sub
cli
dec
cmp
cmpb
push
bound
sahf
pusha
js
sti
adc
fistpll
into
fdivp
outsb
mov
arpl
popa
pop
clc
rorl
icebp
out
dec
jge
shl
or
jb
jg
pop
mov
pop
test
arpl
sub
jnp
fisttpll
aaa
pop
fs
sahf
pop
stos
jne
aad
dec
add
or
push
loop
sub
cld
xchg
mov
int3
sbb
lcall
loope
ljmp
js
jmp
cltd
ss
cltd
push
and
nop
add
stos
or
loope
lret
repnz
orb
or
repnz
and
mov
repz
pop
in
gs
scas
xor
mov
mov
loopne
xor
push
cli
jb
mov
push
cwtl
je
stos
lahf
stc
stos
jo
xorb
test
int
xchg
sbb
adc
push
jbe
repz
mov
in
cltd
push
jmp
sbb
dec
jae
cmp
or
scas
inc
lcall
popa
sbb
scas
mul
iret
stos
add
outsl
leave
int3
lahf
rorb
push
test
test
btr
sub
adc
int
push
cltd
and
mov
mov
addr16
dec
push
sbb
pop
adc
fimull
push
xchg
jecxz
add
or
jae
add
pusha
lcall
rorl
adcl
movsb
gs
das
mov
enter
enter
mov
pop
xchg
clc
ret
push
sbb
inc
mov
je
sbb
xchg
mov
mov
xor
cmp
inc
xchg
push
stos
in
roll
cwtl
ficoms
fadd
jbe
mov
leave
pop
scas
push
cwtl
js
add
mov
dec
test
or
test
push
jmp
adc
adcl
shrl
cmp
das
dec
mov
aas
cmovp
mov
jno
lods
lret
fsubrl
jbe
icebp
lock
or
mov
stos
jbe
pushf
pop
cmp
xchg
aam
daa
filds
xor
pop
add
std
xchg
orb
andb
push
jo
pop
leave
and
push
cmp
std
fwait
repnz
pop
jl
xchg
sbb
shl
stos
mov
mov
test
outsb
clc
call
lret
pop
sub
shl
arpl
mov
and
cmc
les
or
xchg
ja
xchg
jle
adcl
lds
inc
in
jge
fistpl
stos
cmp
jbe
fxch
sbb
nop
dec
jmp
pop
sahf
ficoml
scas
adc
mov
lret
lods
out
aas
mov
push
lahf
call
popf
pop
jnp
cmpsb
gs
mov
mov
add
stos
popa
in
cwtl
lret
fwait
mov
push
popf
aas
cmp
fisttpl
mov
mov
shl
lret
xchg
push
addr16
les
gs
jbe
daa
push
sti
ja
cmpsl
sti
addr16
push
jae
ds
pop
into
mov
mov
mov
scas
inc
adc
sub
jno
xorb
lea
pusha
jb
xchg
arpl
ja
rol
mov
xchg
sti
jns
lahf
jns
cmp
lahf
add
bswap
fstpl
xor
or
or
lds
adc
or
cmc
mov
pop
std
and
jnp
cmp
or
pop
mov
fnsave
and
loopne
ja
mov
sub
les
jae
mov
mov
cltd
xchg
adc
lock
xorl
sbb
and
xchg
adc
cmp
in
sbb
pusha
add
lahf
iret
icebp
cld
mov
cmp
out
adc
xor
pop
inc
incl
mov
data16
stos
xchg
ss
add
loop
test
xor
dec
sub
fstl
dec
aaa
addr16
stc
inc
daa
imul
testw
aad
jp
inc
popa
rorl
lods
scas
sbbl
dec
loope
inc
push
sub
mov
int
inc
clc
xchg
fs
fiadds
stc
cmc
jnp
push
mov
nopl
mov
repz
sarl
cmp
fldl
xchg
int
dec
jmp
and
adc
scas
inc
adc
gs
int
faddl
mov
test
dec
popf
and
dec
dec
jmp
add
popf
sub
xchg
leave
imul
dec
mov
dec
xchg
dec
pop
repnz
xor
iret
mov
mov
aas
jl
mov
push
fs
stc
push
cmp
adc
mov
push
fwait
mov
mov
out
test
jns
mov
sub
dec
mov
int
push
xchg
and
pslld
lods
aas
adc
loope
ja
push
fists
jecxz
movsl
jae
fstpt
lds
or
sub
dec
mov
jb
xchg
cltd
test
mov
rorl
lcall
addl
fildl
movsb
sub
mov
out
inc
mov
jns
es
dec
mov
push
mov
xchg
ljmp
std
int3
imul
frstor
enter
xchg
loope
or
inc
shl
push
xor
cli
pop
pop
xchg
out
aam
jb
xor
idiv
sarb
je
rcrl
test
es
out
xor
xor
repnz
std
mov
adc
pushf
fcom
or
ret
lods
jp
pop
fucomp
and
imul
lcall
cmc
fadds
lcall
into
mov
outsl
into
xor
xor
cmpsl
loop
jecxz,pn
or
rcll
loope
push
fistl
pop
call
add
fnstcw
aas
sub
mov
ss
jns
adc
xchg
fadd
aas
fdivs
mov
aad
push
sbbl
int3
fwait
or
sub
mov
jno
dec
shlb
mov
push
push
ret
lahf
mov
xchg
sub
cwtl
std
dec
mov
mov
inc
cmp
hlt
or
sahf
lods
addb
xor
cmc
stos
sbb
outsl
insb
dec
loopne
int3
jns
mov
pop
mov
repnz
stos
shlb
and
gs
mov
mov
push
nop
movsl
jae
add
mov
fistpll
add
cmp
jns
pop
jl
fdivs
and
pushf
test
xchg
and
xor
and
jle
in
shlb
out
ret
cmp
push
mov
push
sahf
lock
insb
cld
lret
popf
fsincos
jbe
mov
leave
pop
ss
jge
in
inc
mov
ja
xchg
adc
add
jge
mov
addr16
lds
dec
mov
fistpll
int3
jns
testb
test
jo
push
cmp
mov
jl
mov
sbbl
movsl
pop
les
adc
mov
pop
in
cmp
inc
cmc
sub
scas
test
imul
pop
jae
jno
cmpsl
aaa
jne
icebp
push
sti
xor
enter
mov
add
into
ret
xor
cli
jb
mov
mov
jl
inc
pushl
stos
push
jmp
jge
js
mov
xor
test
ret
or
in
push
adc
bound
pop
imul
push
xor
fwait
xchg
sub
cmpsb
mov
inc
fidivrs
jmp
mov
mov
mov
or
pop
cltd
aam
inc
das
mov
ss
mov
andl
je
mov
shlb
jae
dec
push
mov
jmp
fists
pop
daa
incb
dec
fnsave
pop
pop
ja
sub
sti
sub
push
or
xorl
mov
lret
jl
repz
cmp
mov
andb
push
ss
jnp
xlat
or
pop
outsb
orb
rcr
fisubrl
bound
aas
pop
orb
data16
pop
cmp
push
sbb
mov
or
loope
push
test
inc
nop
mov
sub
jnp
xor
or
mov
xchg
push
jmp
dec
inc
bound
lds
push
std
pusha
jo
aam
inc
pop
or
lods
lret
in
jno
cmovp
cwtl
cmp
daa
cwtl
xchg
pop
int
mov
push
pop
and
lea
stc
xchg
imul
xchg
and
cmp
push
cmc
mull
mov
xor
cwtl
idivb
add
rcrb
jae
clc
and
cld
in
dec
insb
insb
xor
and
insb
and
stos
sbb
subb
cmp
ret
jno
cmp
ljmp
addl
clc
mov
push
arpl
mov
rcrb
or
ss
arpl
jg
mov
push
sub
loop
pusha
movsb
out
outsl
inc
jg
sbb
shl
lods
jmp
lahf
repz
cs
repnz
out
mov
or
push
or
mov
fsts
dec
mov
imul
xchg
cmp
scas
xor
test
and
bnd
mov
push
iret
xchg
out
arpl
nop
xor
loopne
fsts
rcrl
inc
push
je
out
pop
movsl
xchg
dec
jmp
or
jl
rcll
decl
xor
pop
push
mov
mov
mov
pop
jmp
stos
inc
out
loopne
rolb
js
cmpb
shlb
add
test
mov
add
mov
cmp
mov
mov
push
es
add
mov
test
sub
shl
cld
fs
lcall
mov
and
mov
jnp
pop
and
inc
std
add
mov
sub
repnz
sbb
outsl
mov
adc
cmp
and
xchg
or
jmp
jl
pushf
leave
sub
mov
enter
dec
jb
aas
xchg
es
inc
jg
bound
inc
shr
jb
call
push
and
lock
and
out
loope
pusha
xor
in
push
adc
leave
mov
shrl
nop
in
cmpsb
or
icebp
pop
adc
sub
loopne
push
sub
and
and
loopne
cmc
mov
cmp
rolb
or
push
pop
push
or
pusha
jmp
sbb
fsubrs
adc
arpl
pop
cvtps2pi
stos
sbb
push
push
lods
int3
cmp
das
test
push
outsb
or
mov
ss
jae
outsl
jle
or
pop
test
sub
pop
xchg
fnstcw
push
int
int
push
clc
mov
out
cli
int
jle
sbb
push
pop
cmp
mov
incl
cmp
and
jmp
ljmp
and
mov
test
loopne
call
ljmp
add
repz
xchg
jnp
inc
sbb
paddusw
cwtl
or
pusha
cmpsb
jmp
mov
popaw
mov
arpl
cltd
mov
imul
leave
loopne
push
or
push
xor
out
and
jp
dec
dec
sub
popa
cwtl
or
push
pop
scas
mov
shl
imul
lret
xchg
std
mov
mov
xchg
pop
or
add
xor
shrl
stos
lods
or
sbb
xor
stc
jne
mov
mov
fwait
lcall
xchg
push
shlb
inc
dec
shll
sub
pop
adc
jbe
js
cld
sbbb
inc
popf
inc
xor
jno
out
jb
adc
fwait
std
push
cld
sbb
inc
xor
dec
adc
outsb
xor
xor
test
movsb
outsb
jb
add
lret
lods
jmp
addr16
cs
mov
jns
icebp
mov
push
js
insl
pop
mov
inc
pushf
xor
fistl
ret
inc
cltd
jg
dec
mov
addr16
jg
adc
scas
stc
test
mov
movl
push
shll
jb
int3
inc
scas
dec
les
sbb
xlat
les
pop
addr16
cmp
push
lods
cmp
inc
inc
adc
jle
xor
fadds
jmp
out
fwait
lret
or
jae
aas
xchg
test
sub
inc
xchg
sbb
sub
jp
shlb
push
in
mov
jo
and
xchg
xor
xchg
jge
daa
xchg
movb
shrl
jge
icebp
jmp
xchg
jl
cmp
sarb
ja
push
rcll
sti
push
inc
or
cmp
xchg
cmpsl
jg
lret
jl
dec
je
push
dec
paddusw
scas
or
mov
aas
mov
aad
inc
xor
test
inc
ret
sbb
aad
movsb
les
lock
mov
sbb
push
push
stc
xor
xor
outsb
mov
sub
cmp
dec
push
shlb
mov
lods
add
pop
fsubs
fsub
fsubs
shrl
shld
pop
dec
rcrb
mov
pop
adc
test
jg
and
mov
out
shlb
ret
inc
je
loop
xchg
inc
movsl
cmp
xchg
pop
mov
int3
dec
pop
repnz
push
inc
inc
mov
movsb
push
mov
aaa
sahf
adc
ja
xchg
add
sub
movswl
aaa
jmp
sbb
shlb
mov
jb
mov
aad
or
sbb
aas
jnp
insl
lcall
mov
cmpsl
adc
ficoml
stos
and
cld
mov
xlat
shl
fldt
xchg
jmp
int
jno
das
out
mov
enter
ret
adc
loopne
mov
sahf
cs
or
pop
sub
mov
add
fcomi
faddl
sti
fldt
pop
into
mov
rclb
cld
in
movsb
xor
orl
mov
xchg
or
xor
sbb
xchg
dec
clc
arpl
mov
inc
rolb
dec
jmp
inc
lahf
gs
pop
out
mov
xor
dec
mov
mov
cmc
mov
mov
mov
test
xchg
dec
rolb
jbe
pop
pop
test
dec
clc
cmc
cmp
mov
fsubr
or
test
repz
clc
mov
aam
push
rolb
add
mov
out
cltd
xchg
ret
xchg
imul
adc
pop
mov
xor
testl
pop
jne
fisubrs
pushl
jmp
mov
pop
xchg
test
or
mov
inc
xor
add
jne
push
test
adc
fstpt
in
dec
aaa
or
subl
inc
aaa
daa
mov
cltd
mov
mov
xchg
outsb
inc
push
push
cmp
xchg
sti
cltd
add
jns
aas
shlb
push
mov
sbb
mov
imul
test
pushf
fcmovu
lahf
orl
inc
mov
aam
pop
pop
arpl
loop
out
add
adc
leave
or
ss
pushl
push
movsb
pop
insl
iret
je
adc
push
jb
mov
pusha
lods
jb
jmp
add
push
push
mov
mov
mov
mov
mov
cmp
inc
add
scas
add
fmuls
lods
dec
lahf
aad
push
inc
xchg
addr16
pop
inc
push
or
aas
ss
fstps
leave
cltd
aas
xchg
mov
out
hlt
movsl
rol
xchg
fidivrl
ss
dec
scas
add
es
cltd
aad
mov
pop
push
aas
adc
out
fdivl
std
xor
mov
xor
adc
pop
and
lcall
mov
cmp
hlt
mov
clc
inc
into
in
movsb
in
js
xor
negb
repz
cmp
and
fistps
sbb
xor
aas
add
mov
adc
ljmp
adc
jp
fcmovnbe
inc
adc
add
xchg
push
mov
mov
and
mov
arpl
out
js
cmp
lock
sub
jp
xor
mov
loope
das
push
xchg
jbe
and
dec
ss
mov
stos
inc
sbb
add
cmpsl
sub
mov
rcll
mov
movsb
scas
adc
and
cmp
imul
call
call
pop
scas
das
push
aam
add
mov
push
push
jge
pop
adc
notl
dec
dec
inc
pop
pop
arpl
inc
mov
push
and
pushf
dec
sub
out
push
bound
dec
add
jl
adc
push
in
test
dec
nop
pop
dec
stos
or
add
inc
xor
cltd
cs
sbb
out
adc
pop
inc
push
cmc
ret
mov
jp
inc
cmp
cmp
outsl
jne
xchg
shr
cmpsl
notl
aas
jp
aaa
inc
mov
mov
test
push
into
or
ret
fwait
pop
daa
in
mov
xchg
dec
mov
mov
or
sub
xor
add
cwtl
mov
fwait
repz
add
ss
xor
cmp
cltd
cmpsl
cmp
scas
add
mov
mov
push
mov
pop
mov
mov
lcall
ffreep
dec
mov
lcall
xchg
popa
cwtl
sbb
enter
sub
mov
or
rorb
sub
adc
daa
idivb
cmpsb
dec
les
pop
jge
jno
mov
scas
dec
mov
mov
mov
aad
mov
dec
or
loop
imul
pusha
cmpsb
lret
in
mov
mov
lods
jns
jge
insl
jecxz
push
aas
addr16
repnz
popf
mov
outsl
adc
fldlg2
loop
add
xlat
mov
icebp
add
pop
aad
xorb
in
lds
outsb
icebp
out
aaa
call
incb
mov
sahf
xlat
inc
add
add
sub
lahf
out
popa
aam
out
jecxz
aaa
mov
shlb
xchg
nop
imull
out
or
shrl
clc
popa
cmpl
add
mov
loopne
cli
push
shlb
jbe
pop
cmpsb
add
jnp
addr16
xorl
pop
pop
sar
les
ret
mov
mov
sub
sbb
jo
movl
jmp
xchg
insl
inc
fadds
ret
out
add
ljmp
data16
stos
jns
mov
ja
loop
xor
or
mov
push
xchg
pusha
das
mov
cltd
subl
xorb
push
dec
jmp
xchg
es
jl
sbb
lahf
pushf
test
hlt
push
and
imul
fists
test
xchg
fcmovnbe
into
pop
fxam
mov
out
scas
cmpsb
iret
and
mov
mov
jne
push
pop
dec
call
pop
ret
or
lds
jns
xor
mov
sbb
sbb
sub
mov
push
stc
push
popa
push
fdivrl
stos
repz
cmp
inc
sub
out
cmp
lods
dec
jae
pop
int3
dec
aam
roll
mov
outsb
jp
bound
loope
fsub
lods
add
leave
clc
cmp
cmpsl
mov
mov
outsl
out
cmc
js
xor
lods
rcr
popa
cmp
mov
aas
mov
jne
xchg
pop
int
dec
mov
pop
xchg
out
shlb
dec
rcrl
stc
cld
xchg
push
inc
mov
dec
lret
push
hlt
mov
aam
movsl
setp
jno
mov
push
pop
stos
test
out
sti
sbb
lds
mov
aas
out
inc
inc
cli
adc
dec
sahf
insl
dec
fs
fists
in
dec
hlt
push
jge
mov
pop
insl
xor
pop
insl
cld
stos
jmp
or
gs
jmp
xchg
adc
jbe
scas
addl
imul
sbb
dec
daa
push
mull
inc
mov
lods
scas
dec
mov
aas
fwait
popf
xor
cmp
xchg
imul
jnp
cmp
lds
sbb
inc
mov
js
repnz
roll
cmp
jp
clc
cmp
fistl
mov
roll
xchg
xor
js
test
mov
sbb
lahf
in
pop
mov
sti
in
cmp
or
enter
movsb
and
pop
mov
push
insl
int
rcll
inc
icebp
mov
mov
xor
rcl
bound
sahf
stos
dec
fwait
mov
aad
xor
aaa
xchg
or
and
cld
sub
or
mov
test
adc
test
cmp
add
daa
aaa
cmp
add
movsb
jl
or
daa
push
ds
js
shl
add
mov
arpl
adc
das
pop
iret
aas
fstp
jmp
xchg
sbb
and
flds
mov
das
imulb
cltd
jecxz
repz
repnz
cmp
lret
cmc
pop
mov
xor
movsb
push
ds
icebp
in
lret
adc
aam
push
arpl
out
inc
jge
adc
stos
adc
sub
cmp
dec
cmpsl
cmpsl
mov
mov
rolb
int3
outsl
fldl
jmp
sub
sbb
xchg
stos
dec
lcall
push
fsubrs
sub
and
inc
push
enter
dec
aas
imulb
adc
getsec
jmp
outsb
jge
movsl
ja
repz
push
dec
repz
push
leave
xor
hlt
sti
jb
repnz
pop
inc
fucomp
std
inc
and
add
ja
inc
imul
fwait
addb
lock
jmp
mov
inc
jo
fildl
cmp
lods
inc
shlb
or
jecxz
and
dec
es
loop
fldl
cmp
inc
sub
cmpl
jno
cmpsb
add
cmpsl
movsb
das
clc
xor
and
sbb
outsl
loop
xchg
outsl
add
mov
dec
fildll
sub
imul
push
movsl
testb
es
add
jnp
imul
cmp
mov
aaa
into
sub
sub
fstl
mov
and
adc
adc
lret
out
rcr
xor
pop
shll
lods
push
dec
inc
repz
stos
jle
cmp
pop
scas
cmp
add
aaa
jge
call
jle
push
pop
inc
idiv
xor
and
sub
imul
jns
mull
sahf
pop
dec
pop
icebp
aaa
andl
jae
pop
outsl
or
fwait
lods
cmp
imul
lcall
cwtl
adc
adc
push
pop
fistps
lahf
push
xchg
aam
movsb
ljmp
jl
test
movsl
jl
clc
shlb
aam
notb
iret
fists
rol
dec
or
pop
and
lock
jne
popa
test
mov
test
jno
out
push
test
subb
daa
cmpsb
scas
repnz
or
inc
shl
sub
add
dec
movsl
xchg
lret
sbb
notb
cmpsb
push
sarl
mov
cld
std
add
sti
or
pop
mov
sbb
lods
lods
dec
fcoml
je
aas
shl
out
jle
adc
mov
pop
push
xchg
pop
push
mov
in
sbbl
push
fmul
fcmovnu
adc
ljmp
push
mov
testl
fcomi
out
inc
rclb
addb
nop
repnz
addr16
jo
mov
enter
adcb
xchg
int
cmp
dec
mov
aam
xor
push
push
call
lcall
subl
and
xor
clc
repz
ds
rorl
mov
cs
in
cmp
lret
jne
mov
clc
mov
mov
cmpsl
out
js
lret
xor
jg
cmp
jge
jle
inc
and
push
cmpsb
mov
loopne
aas
sbb
add
pop
adc
inc
xchg
add
sbb
fdivr
popf
int
pusha
mov
push
mov
lods
push
test
adc
xor
push
imul
jl
mov
cmpsl
stos
adc
test
shll
xor
repz
xchg
ret
fcomp
pop
ficoml
and
push
dec
out
test
mov
leave
lock
imulb
pop
rcl
rcrb
jbe
add
cmp
bound
xchg
enter
inc
mov
mov
imul
testl
fwait
shl
sbb
stos
and
sub
add
mov
jo
gs
pop
fiaddl
std
jmp
mov
adc
stc
arpl
xor
test
outsb
hlt
xchg
cmp
fwait
lahf
loopne
insb
mov
jge
sub
jg
insl
inc
dec
test
cmp
sbb
jnp
inc
jl
or
pop
cwtl
sub
adc
popf
lods
inc
int3
sahf
adc
or
decl
xchg
ds
fisttpll
add
cmc
sbb
push
aam
jge
mov
sub
jbe
push
cmc
jb
ret
sbbb
adc
nop
iret
dec
sti
out
sub
xor
mov
ljmp
adc
leave
in
mov
jne
leave
mov
ss
test
stos
mov
jno
fcoml
fwait
repnz
loope
push
loop
or
in
push
fldl
mov
fsubl
fs
in
leave
or
ljmp
lret
jle
inc
js
inc
xor
mov
xchg
xor
inc
adc
andb
es
mov
imul
push
pop
mov
mov
dec
pop
sub
test
test
ret
repz
xchg
fs
pop
outsl
and
pop
dec
cmp
push
mov
or
jge
lahf
mov
inc
loope
int
inc
cmpl
sub
dec
xor
lock
dec
ja
mov
or
jmp
jae
nop
aad
sti
out
adc
dec
pop
cld
and
movsb
dec
mul
ss
pop
dec
sub
pop
dec
filds
sbb
sbb
aas
lcall
test
dec
xor
in
lock
xor
lock
aaa
je
js
in
mov
imul
sbb
mov
push
cmp
mov
mov
push
clc
int3
adc
insb
mov
out
popa
sub
sub
pop
dec
jecxz
push
push
mov
inc
hlt
stos
add
aam
sbb
lds
dec
add
dec
scas
sub
dec
xchg
rolb
gs
fisubrl
nop
cli
pop
das
cmp
sub
sahf
pop
les
mov
cs
sbb
add
fxch
xchg
sbb
jb
test
jg
mov
test
jp
adc
loop
das
xchg
cmp
lahf
mov
add
pop
dec
push
mov
push
inc
xor
lret
adc
test
into
outsl
xor
jg
clc
dec
inc
xchg
jecxz
dec
std
loop
popa
xor
mov
std
sbb
lock
repz
xchg
call
push
scas
aam
fadd
and
ret
lahf
mov
cmpsb
aas
hlt
jecxz
cmp
lds
insb
inc
mov
call
cs
mov
and
sub
push
pop
jns
leave
fs
pop
xor
sub
addr16
push
pop
pop
jmp
fstl
push
lds
mov
arpl
pop
ss
jecxz
mov
pop
bound
and
jmp
and
daa
pop
jae
jmp
dec
jno
mov
inc
add
xchg
sbb
or
or
rcrl
ficoms
ss
inc
pop
aam
xor
mov
test
dec
or
xchg
xor
mov
pop
push
jge
xor
jnp
add
mov
pop
mov
imul
mov
lods
xchg
scas
push
pop
lea
js
fwait
xor
outsl
push
negl
int
sbb
or
xor
xor
fsubrs
insb
cmp
pusha
dec
test
jne
sub
and
fcomps
inc
fiadds
dec
sbb
out
mov
lea
add
and
cmp
out
shr
rcll
inc
outsb
movsl
adc
or
xor
pop
filds
jno
ja
in
mov
dec
in
add
inc
xor
sbb
loope
sahf
btc
push
cmpsl
cmp
stc
out
pop
jge
in
mov
js
stos
inc
lock
sub
mov
movsl
jmp
push
cmp
push
shr
jge
jae
test
mov
mov
je
pop
ljmp
mov
and
movsb
enter
adc
arpl
pop
xchg
test
in
les
fldt
add
xchg
cmp
shll
xlat
rcll
jns
sub
daa
stos
lods
lock
jp
push
pop
test
inc
fstpl
and
pop
loopnew
pop
and
push
ja
and
xchg
mov
mov
cli
lods
or
or
pop
mov
data16
bound
inc
aad
into
dec
int3
stos
daa
cli
add
dec
pop
into
pop
mov
pushf
das
lods
cmp
stos
mov
ss
punpckhwd
pop
dec
dec
ljmp
pop
dec
pop
adc
movsb
push
xor
dec
and
xlat
dec
add
fidivrs
test
loopne
rcll
sbb
into
or
jno
push
ds
or
adc
stos
cmp
std
and
in
mov
add
add
popf
add
jns
ret
push
fistps
mov
xor
cmpsl
aas
mov
push
div
adc
inc
mov
push
mov
jo
ret
test
add
fisubrl
jbe
mov
jge
imul
test
or
inc
mov
clc
xor
testb
cld
jp
pop
sub
sub
inc
inc
movsb
mov
jo
not
in
frstor
ljmp
hlt
cs
dec
sub
leave
aad
push
repz
xchg
stos
rcrb
sub
ljmp
add
inc
jmp
pop
pop
or
jmp
pop
mov
in
loop
adc
loope
pop
push
rcll
xchg
mov
jge
lods
into
sbb
sbb
into
inc
enter
mov
push
mov
cmp
fistpl
sbb
call
or
sub
cmp
mov
jns
or
push
xor
xlat
mov
dec
and
cltd
xchg
imull
cmp
lods
xchg
daa
les
pop
adc
cmc
dec
shl
insb
popf
pushf
or
mov
aaa
sub
mov
pop
and
out
jecxz
mov
adc
cmp
jno
mov
and
shl
add
xchg
pop
enter
jne
fisubrl
gs
jo
mov
cli
std
mov
mov
lcall
dec
rcll
pop
pop
mov
loopne
jmp
imul
xor
xor
and
adc
dec
rep
pop
cmpsl
scas
mov
loopne
aaa
dec
sub
sub
sbb
or
mov
jmp
jb
ds
pavgw
js
adc
jge
and
pop
pop
imul
cmc
xor
cltd
pop
sub
shl
jge
dec
pop
jnp
or
cli
sub
mov
arpl
daa
xor
adc
sbb
cmp
jmp
xlat
mov
xor
inc
stos
daa
int3
push
jecxz
pop
pop
popf
xlat
and
xchg
addr16
adc
lahf
pop
dec
jge
push
mov
push
or
mov
lds
pop
popf
adc
push
out
pushf
adc
mov
dec
sub
sbb
das
mov
xor
cmp
push
push
dec
cld
lcall
pop
in
shll
jge
inc
ds
xchg
xchg
push
sub
mov
sub
mov
adc
cmc
mov
lret
xchg
roll
push
scas
xchg
mov
inc
int
and
std
adc
ljmp
jae
or
fists
sbb
in
dec
insb
insb
fildl
jbe
mov
icebp
mov
cmpsb
xor
es
pop
bound
mov
sub
cmc
test
orl
dec
or
push
pop
add
cmp
arpl
lods
xchg
fistpll
jp
ljmp
cltd
lcall
and
std
sub
iret
fsts
out
cmp
data16
pusha
push
jle
into
lret
call
jnp
dec
es
inc
pop
clc
cmp
rcll
mov
gs
mov
inc
push
sbb
psubd
pusha
cwtl
test
or
mov
popf
sub
add
out
and
xor
pop
lcall
cltd
xor
leave
xor
xchg
int
sub
int
push
fistl
xor
movsb
movsb
ds
out
adc
jbe
leave
pop
sbb
and
shll
dec
add
stos
imul
fwait
mov
int
insb
pop
outsl
xor
xchg
xchg
rcrb
mov
mov
push
outsl
and
dec
mov
push
je
imul
imul
andb
push
or
sahf
jg
pushf
jg
adc
dec
call
stos
lcall
mov
repnz
lods
cwtl
rcrb
int3
sub
dec
adc
cltd
xchg
mov
out
dec
cld
mov
std
lcall
repnz
data16
mov
xchg
cli
std
cmp
pop
pop
out
ret
add
inc
pop
shrb
push
xchg
sub
xchg
jb
mov
repnz
xlat
test
loopne
jg
out
mov
add
cs
push
pusha
jbe
enter
pusha
fisttps
pop
imul
pushf
mov
enter
xchg
fs
add
sbb
in
hlt
lcall
adc
js
cmp
sbb
mov
xchg
das
xchg
stos
fbstp
sbb
lods
fisubl
push
or
xchg
out
hlt
adc
aad
leave
mov
add
mov
cmp
popf
inc
push
lds
push
or
les
jne
nop
xor
mov
int
or
repnz
mov
push
sub
jge
add
push
pop
dec
mov
scas
pop
inc
and
loopne
dec
xchg
push
sysexit
mov
xor
push
rorl
adc
push
sub
insb
sti
ret
dec
movsl
ja
xchg
xchg
cmp
imulb
mov
js
js
cwtl
arpl
add
push
fs
sub
push
push
mov
sbb
jmp
arpl
jnp
mov
sub
cmp
cmp
ss
popf
iret
test
cmp
aaa
mov
add
jo
xor
orb
rorl
mov
in
sbb
cmp
and
adc
dec
stos
xor
lds
test
cmp
popf
addr16
adc
bound
add
mov
xlat
add
sbb
mov
push
lret
mov
add
xlat
pushl
insb
mov
std
in
insl
xchg
fcmovu
jnp,pt
idivl
adc
repnz
repnz
mov
sbb
fnsave
push
mov
inc
imul
je
push
in
divl
fcomps
mov
xchg
adc
loope
mov
mov
jno
add
xor
and
lods
pop
out
inc
push
cltd
sub
jecxz
popa
scas
sub
fbstp
xchg
imul
cmpsb
lahf
cld
leave
test
or
dec
dec
push
jo
lret
jb
mov
scas
push
arpl
dec
fwait
test
pop
mov
in
mov
inc
bound
dec
xchg
mov
cli
aas
xor
jle
push
sbb
xchg
inc
lods
out
iret
outsl
xor
insb
mov
sar
and
das
and
ja
clc
inc
repz
aaa
sub
arpl
in
mov
cltd
iret
or
xor
out
push
icebp
in
inc
add
cmpsl
mov
leave
popa
xor
movsb
arpl
cmp
loopne
xor
lret
andl
ret
es
sbb
les
sub
dec
adc
dec
insb
xorl
and
jbe
inc
sbb
add
imul
adc
dec
in
or
push
mov
xor
jae
cld
push
stc
filds
mov
js
popa
sub
add
or
in
and
std
lret
xor
or
sahf
in
bound
dec
dec
iret
xor
icebp
fstps
or
and
out
jmp
mov
stos
stos
call
and
imul
out
sbb
lods
arpl
pop
add
dec
fdivrs
adc
arpl
add
and
mov
push
sti
pop
mov
lret
mov
adcl
addr16
arpl
jmp
int
movsb
push
cwtl
jle
js
xchg
dec
jg
movsb
mov
loop
in
sbb
push
incl
adc
mov
mov
lahf
negl
imul
cld
icebp
pop
push
outsb
xor
cmp
pop
mov
mov
jno,pt
test
enter
push
jne
mov
sbb
roll
push
push
mull
data16
loopne
jns
mov
lds
imul
gs
in
xor
addl
adc
xor
mov
out
pop
iret
inc
icebp
mov
sbb
icebp
pop
ret
rcrb
jno
stos
sbb
push
clc
fstl
fnstsw
std
dec
repz
stos
out
xor
rclb
cli
fdivrs
sahf
xchg
inc
ja
mov
pop
lods
jnp
int
and
pop
jmp
testl
jns
outsl
sti
mov
sti
push
movsb
data16
lds
jecxz
lds
fldl2t
fcoms
xchg
in
mov
dec
push
dec
adc
ja
scas
data16
pop
pop
stos
or
xchg
cmp
inc
scas
dec
mov
adc
lcall
out
and
imul
inc
cwtl
inc
dec
outsl
les
les
adc
out
std
cmp
mov
push
rcrl
je
dec
cmp
xchg
jl
sub
sub
out
xchg
jb
jbe
ss
daa
mov
aam
jecxz
jbe
outsl
gs
aad
std
repz
js
cld
int
xchg
or
ret
pop
xchg
jl
and
xor
js
and
je
call
in
add
push
push
adc
pop
in
lock
test
mov
add
push
das
cld
cmp
adc
mov
adc
jns
in
cltd
outsl
test
mov
ss
cltd
je
adc
mov
mov
jl
mov
cli
lods
lret
jno
inc
fimuls
mov
mov
aaa
aaa
pusha
and
jnp
fstps
mov
jno
inc
pop
es
push
gs
ret
stc
xor
sub
xorl
andl
call
pop
sub
adc
xchg
lcall
mov
loopne
sub
std
idivb
daa
push
sahf
cmp
popf
mov
mov
into
inc
aam
in
xchg
shrb
xchg
sub
sbb
mov
and
dec
and
mov
cmp
adc
or
sub
mov
sub
sub
fs
fnstsw
jno
jo
test
sbb
lcall
pop
cmp
mov
cmp
icebp
in
dec
les
aaa
jne
sub
into
mov
inc
xchg
dec
imul
addr16
in
daa
hlt
pop
in
fadds
testb
shlb
fdivrs
mov
xor
jnp
add
out
popa
dec
lds
outsl
adc
adc
sbbb
arpl
repz
sub
push
mov
loope
cli
fidivl
pop
mov
sti
lods
mov
adc
rcll
mov
incb
imul
mov
and
lret
ficomps
loopne
fisttps
or
sbb
loop
mov
es
pop
dec
int
mov
inc
stc
or
pop
outsb
pop
dec
jp
jle
test
ja
cmc
pop
dec
pop
or
bnd
sub
push
xchg
sahf
sar
loopne
rcrb
jl
jnp
icebp
adc
sar
pop
imul
test
loope,pn
xchg
sub
mov
pop
mov
out
sar
int3
xchg
divb
sbb
mov
cld
push
jmp
pop
icebp
out
inc
xor
sbb
in
test
mov
add
shr
fs
mov
into
mov
test
cmp
push
sbb
dec
scas
lahf
mov
dec
dec
and
push
add
mov
inc
stc
mov
imul
aad
sti
or
fdivl
je
lock
adc
add
les
push
jecxz
leave
push
je
push
dec
xor
xor
mov
imul
mov
jmp
outsb
aaa
and
cmpsl
iret
out
dec
adc
cmpsl
shll
push
into
jnp
out
pop
scas
mov
aad
push
movsb
clc
add
daa
in
nop
lret
push
mov
inc
add
fdivrl
fstl
ret
mov
ret
mov
cmc
pop
sub
jnp
test
shlb
xor
mov
cld
cmp
push
mov
dec
sbb
sub
pop
in
pmaddwd
cltd
pop
pop
lcall
repz
xchg
pop
fsubs
xchg
sub
repnz
fs
hlt
sbb
mov
sub
jg
sub
js
shlb
js
cmc
sub
xchg
push
dec
test
inc
lcall
sbb
xor
dec
lds
xchg
sub
cs
sub
or
dec
jns
or
lcall
add
mov
lods
repz
xchg
mov
xchg
stc
lcall
pop
inc
fs
mov
inc
xchg
jnp
lods
loop
lea
andl
xor
test
int
push
movsl
fcmovb
testl
xchg
cld
popf
aam
dec
mov
or
call
cmp
ss
jl
shll
out
sub
loop
xor
movsl
jns
pop
ret
sahf
and
add
jmp
js
xchg
outsl
outsl
xor
xor
lea
jbe
out
sub
sub
xor
adc
cli
and
push
xchg
jl
pop
test
aas
xchg
aam
lret
jno
jns
clc
dec
arpl
pusha
sbb
shll
push
test
test
out
adc
and
inc
mov
insb
add
mov
ja
neg
xor
xchg
insb
fadd
stos
xor
cmp
inc
xchg
inc
ret
pop
lds
inc
adc
xlat
movsb
xchg
fwait
ror
sub
xor
cmp
and
cmp
or
repz
xchg
pop
pop
and
mov
inc
jb
incl
cmp
loope
popf
xchg
mov
jbe
mov
xchg
add
jecxz
rorb
lret
cmp
roll
pop
jnp
mov
xor
sahf
mov
icebp
cmc
mov
mov
jnp
jmp
out
inc
mov
cmpsl
jecxz
ret
sub
jo
adc
je
push
dec
ret
imul
sbb
scas
mov
fcomps
pop
mov
mov
cmp
dec
mov
in
sub
cs
xchg
push
xchg
push
bnd
jge
gs
pusha
repnz
and
and
mov
jecxz
out
icebp
bound
pop
bound
push
sub
loope
mov
push
mov
lcall
leave
add
jb
jp
push
lret
inc
pop
or
jae
mov
rol
xchg
stos
xchg
fs
xor
movsb
dec
push
dec
mov
loopew
loopne
lcall
ds
sbb
mov
mov
pop
cmp
adc
cmp
call
outsb
push
das
push
sahf
rorl
fwait
mov
loop
jmp
dec
cmpsb
sbb
imul
gs
cmp
xchg
xor
je
dec
jg
and
in
mov
jns
dec
mov
iret
dec
cmp
les
cld
rcrb
jecxz
xor
mov
push
pop
sub
adc
xlat
push
push
hlt
lods
xor
mov
popf
in
add
add
or
insl
neg
sub
out
outsl
jae
insb
push
lods
inc
insb
fwait
mov
or
jle
inc
mov
scas
cmp
jae
jp
sbbb
cld
or
adc
add
or
jnp
ds
cmpsb
fs
stc
in
mov
lods
call
inc
mov
movsl
enter
cmpsl
fwait
lds
fadd
aam
jecxz
mov
loop
cmp
loop
push
popa
jge
jnp,pn
inc
mov
dec
sub
sbb
xchg
js
add
jle
inc
xlat
stos
in
jno
decb
mov
dec
push
stc
bound
bound
add
pop
rorl
arpl
fcmovnbe
add
push
inc
movsb
mov
aas
and
add
mov
xchg
stc
cs
pop
mov
testl
xchg
call
cwtl
inc
inc
xchg
xchg
imul
dec
outsl
dec
xchg
add
lock
inc
mov
cltd
bound
int3
lret
fmull
push
addl
pop
mov
int
pop
testl
testb
inc
mov
pop
testb
cwtl
pop
cs
pop
sarl
leave
orl
mov
aaa
pop
rorb
xchg
aam
jbe
les
popf
and
test
jbe
push
jnp
rolb
fstl
cmp
jg
sti
jge
cwtl
lea
out
movsl
in
mov
pop
imul
cwtl
outsl
mov
jb
fdivrl
pushf
pusha
inc
lods
pop
jmp
dec
mov
insb
jle
ret
dec
pop
imul
arpl
push
cmp
dec
adc
cmpsb
pop
jo
or
sub
rorb
test
loop
add
and
movsb
inc
lahf
lods
adc
mov
add
push
fiaddl
push
dec
in
sub
mov
pop
jecxz
pop
sub
lret
fwait
jmp
out
sti
sub
push
das
sub
dec
cwtl
sahf
int3
dec
sti
push
mov
pop
dec
ret
cwtl
xchg
inc
out
outsb
mov
mov
dec
mov
and
xor
pop
mov
addr16
stos
daa
push
in
mov
pop
dec
inc
out
js
mov
push
in
test
scas
fwait
js
stos
mov
sub
pop
loope
hlt
dec
les
fsubrl
mov
fsubl
je
push
mov
fdivs
mov
pop
pop
aam
stc
pop
imul
xor
mov
test
roll
js
jns
loop
or
repnz
sbb
aam
jno
out
xchg
add
mov
movsl
add
repnz
or
ljmp
or
aam
clc
xchg
idivl
call
xor
add
iret
jae
hlt
push
adc
popa
jae
adc
inc
jmp
push
xchg
jmp
cmp
mov
test
add
xor
dec
inc
xchg
xchg
xor
addb
push
fwait
lods
cmp
addr16
xor
sahf
and
sahf
and
xchg
mov
popf
adc
lds
repnz
push
mov
orb
jns
push
sub
xchg
andb
int
cmpsb
xor
ds
and
enter
adc
jbe
pop
nop
sbb
aad
loop
xchg
imul
scas
dec
pop
iret
mov
sahf
mov
cld
cmp
pop
inc
or
mov
lock
adc
jbe
aas
pushf
sub
push
js
mov
cmp
std
mov
ljmpw
fdivrs
add
addl
mov
push
test
test
jbe
mov
or
cmp
push
cmp
ffreep
rclb
inc
subb
cmpsl
arpl
lahf
mov
loop
lahf
je
xchg
std
pop
cld
stos
aas
xchg
repz
push
nop
out
sbb
add
xor
mov
arpl
outsb
daa
add
int3
mov
into
hlt
sbb
aas
and
fisubrs
mov
aas
aam
into
sub
add
hlt
cmp
mov
adc
xor
outsl
mov
dec
imul
les
out
xlat
fmull
mov
cmp
adc
mov
dec
popf
andl
lods
inc
add
xor
mov
stos
cmp
mov
in
iret
lret
outsl
stos
jne
xor
push
rolb
out
dec
push
dec
jge
fs
scas
mov
out
add
adc
scas
imul
push
rol
leave
clc
adc
into
pop
ret
push
mov
jl
mov
adc
scas
push
mov
test
or
cmpsl
dec
imul
ss
xchg
push
push
adc
mov
es
out
mov
xchg
mov
jg
push
enter
add
sbb
lcall
mov
leave
test
xchg
sahf
ret
dec
mov
dec
popa
pcmpeqw
adc
lret
mov
mov
js
inc
cmp
pop
mov
push
xor
imulb
mov
push
filds
jb
mov
cmpsl
clc
or
push
and
stos
push
fnstenv
adc
pop
mov
rep
shlb
xor
in
xor
sub
jl
fwait
pop
test
gs
pusha
js
sahf
ljmp
fnstsw
xor
jae
jb
cmp
mov
data16
std
insl
lods
pop
lcall
push
insl
cltd
out
mov
mov
in
cmp
mov
xor
add
and
ss
pusha
outsb
jmp
out
xchg
mul
xor
add
cmp
jp
xchg
xlat
movnti
or
mov
cmp
nop
insb
adc
sarl
xor
push
cmc
and
sub
mov
outsb
push
and
iret
sbb
pop
aam
jg
or
adc
jge
or
add
adcl
outsl
sub
dec
pop
punpckhbw
dec
fwait
adcb
das
out
and
pop
mov
clc
loop
pop
test
aaa
outsb
aas
adc
popf
filds
push
cmpsl
xor
hlt
rcrl
add
mov
repz
repz
add
shrl
xchg
loope
notb
mov
lods
or
test
and
push
add
out
jb
or
stos
inc
test
mov
inc
add
push
into
outsl
fnsave
icebp
or
jo
stc
int3
and
mov
push
mov
call
aam
pop
inc
jl
mov
adc
xor
pop
out
xchg
cmp
xchg
or
xlat
in
iret
cmp
jbe
xorb
jnp
mov
sub
dec
lcall
mov
xchg
pop
mov
push
enter
dec
mov
cmp
cmc
call
mov
mov
xchg
xchg
pop
loopne
fiadds
push
out
cmc
and
xchg
fistpl
sbb
nop
xchg
sarl
out
out
cmp
ja
icebp
scas
xor
mov
push
dec
lcall
push
js
stos
popa
clc
cmpsb
int
dec
fistpl
clc
and
clc
xchg
shll
mov
rclb
xchg
lods
nop
inc
icebp
sub
mov
dec
jne
sbb
add
xor
cwtl
mov
or
xchg
je
in
mov
into
andb
scas
and
dec
adc
mov
loop
fs
xchg
cld
mov
sub
test
push
mov
fdivrl
aam
inc
das
lods
lahf
aas
mov
shll
movsl
bound
push
outsb
xor
daa
push
fs
loop
in
addr16
in
jns
aam
std
or
jecxz
popf
adc
xchg
and
sbb
in
or
push
dec
add
cmp
sub
aad
cmpsl
push
xor
je
and
sar
jmp
fidivrs
fwait
stos
push
rolb
out
scas
push
les
and
add
stos
mov
scas
mov
or
cld
movsl
daa
lock
and
lods
dec
jne
insl
mov
loope
aad
jl
insl
lods
or
jne
xchg
pusha
mov
mov
mov
popa
mov
mov
bound
xchg
sbb
adc
cmp
jne
or
lea
sbb
rcrb
inc
add
push
jnp
lea
jae
jno
xor
mov
fisttpl
aam
outsl
mov
fcompl
pop
test
mov
loope
addb
pop
adc
mov
and
or
push
adc
sti
mov
cmp
outsl
push
xchg
ja
cmp
cwtl
push
push
nop
insb
xor
pop
sbb
mov
pop
mov
aad
rcll
jecxz
in
cmpsb
or
jno
adc
push
xchg
xchg
pop
call
mov
je
inc
stos
mov
push
test
ljmp
and
stc
in
push
mov
cld
jecxz
jns
ja
stos
fldl2t
es
dec
inc
mov
mov
xchg
push
mov
cld
call
jne
xchg
ret
pop
enter
push
in
mov
mov
negb
xor
fsubrs
sub
jo
push
ficoms
and
sub
stc
testl
ret
jge
mov
or
dec
out
cmp
cwtl
stc
xchg
push
add
sbb
jg
ror
jg
daa
inc
mov
mov
cmc
add
xor
mov
cmpsb
aad
bound
cmp
shrb
dec
dec
test
cmp
ret
xor
fstps
addb
flds
pop
inc
jle
insb
jmp
add
gs
mov
repz
cltd
xchg
lret
push
dec
stos
mov
mov
ds
scas
cmp
movsl
addr16
mov
push
lahf
daa
sti
ret
shlb
adc
mov
inc
fucom
fwait
lahf
lods
fwait
inc
jbe
cmpsl
add
push
push
mov
pop
or
loop
mov
fadd
pop
mov
addb
popf
cmp
sbb
stos
sub
xlat
xlat
cwtl
jg
xlat
jnp
in
mov
push
gs
pop
aam
pop
add
xchg
push
mov
dec
or
and
data16
ret
aaa
sbb
das
mov
mov
sub
xchg
in
cmp
jae
jp
xchg
or
or
test
jge
leave
xor
outsl
adc
stos
out
xchg
aam
or
lret
cld
push
add
fsubrl
cwtl
out
pop
enter
imul
push
gs
cmp
stos
sbb
dec
gs
data16
add
fmuls
ljmp
sub
mov
add
mov
jp
mov
mov
popf
in
fmuls
mov
stc
cmp
jle
loop
xchg
pop
mov
inc
mov
int
push
pop
test
push
xchg
xor
jp
leave
mov
stc
push
sbb
pop
sbb
sbb
aad
sub
xchg
mov
xlat
pop
add
shl
fldl
add
jae
scas
repnz
bound
test
lret
cmpsb
cmp
lahf
push
cmpsl
mov
lds
xchg
push
stc
addr16
pushf
lahf
mov
mov
sbb
les
pop
std
fsubs
mov
in
cmpsl
jmp
fildl
pusha
cwtl
mov
or
xchg
rorl
sbb
andl
push
xchg
sub
ss
add
lods
jnp
insl
sub
jmp
add
fdivrl
daa
mov
fcomp
iret
loopne
dec
mov
mov
mov
jmp
sbb
iret
mov
xor
xor
sarb
cmpsl
mov
aaa
mov
mov
push
outsb
or
lret
jo
shrl
cmp
popa
push
dec
rclb
cmp
pop
push
mov
push
lcall
movsl
into
cltd
pop
mov
aas
adc
cs
imul
pop
movsl
movsl
out
cwtl
and
cmpsb
inc
arpl
out
sbb
or
pop
dec
mov
hlt
mov
xlat
lods
push
aam
loopne
call
xchg
lret
loop
add
cld
aaa
sub
jae
jno
add
mov
pop
aad
push
ret
sub
loop
mov
xor
mov
gs
dec
out
or
fpatan
jle
and
dec
add
std
lcall
jg
daa
rclb
bound
stos
fwait
test
mov
xchg
shl
aas
int3
or
stos
dec
daa
jge
icebp
mov
repnz
aaa
cmc
adc
sub
sub
fidivs
outsb
mov
bound
mov
mov
push
insl
xor
sub
rol
andps
adc
ss
mov
mov
sarl
pop
movsb
add
in
shl
cld
adc
or
add
imul
test
xchg
insb
jp
test
mov
mov
mov
clc
mov
cmpb
jb,pt
mov
xchg
push
leave
xchg
pop
cmp
stos
fisttps
xchg
jns
cmp
or
add
fcompl
lahf
jg
mov
inc
xchg
fsub
scas
psubb
stos
cmp
xchg
cld
or
push
scas
adc
loope
jle
dec
add
xor
xor
les
into
lret
sub
push
sbb
push
fwait
jp
jl
jbe,pt
sub
and
mov
faddp
mov
repz
ljmp
lods
lds
cld
movsl
xor
in
call
jb
or
xlat
pop
and
cld
test
cmpl
lcall
sbb
ret
push
or
inc
sti
push
push
jmp
jno
mov
js
js
jmp
sub
pop
mulb
mov
popf
jl
cltd
push
adc
icebp
inc
insb
xchg
in
lods
push
aam
and
shrb
fisubrs
push
iret
ss
adc
sahf
sbb
std
mov
add
cltd
jl
sub
cmp
and
int3
addl
test
shrl
inc
jge
xchg
popf
add
cld
xor
into
enter
les
push
pop
xor
fmull
xchg
add
sub
stos
lret
sub
jge
sbb
jecxz
jmp
dec
in
test
sub
xchg
outsb
sbb
jae
add
idiv
inc
add
out
sub
dec
or
into
mov
dec
cmp
xor
jne
mov
push
push
fcompl
or
jae
jo
fildl
lahf
mov
pushf
or
or
jae
ret
iret
pop
xchg
icebp
cmp
cmpsb
fsubl
mov
push
fs
insb
dec
out
orb
lret
sbb
imul
std
stos
icebp
outsl
aad
pop
push
mov
movsb
mov
or
mov
cmp
jb
sbb
xor
cmpsb
sub
loope
jns
nop
shll
call
jne
jno
xor
mov
lock
movsl
mov
stos
mov
pusha
mov
cld
inc
ret
ret
jge
jecxz
mov
mulb
xor
sub
and
mov
incb
fs
aaa
loopne
jne
and
mov
fs
sbb
xor
xor
js
iret
push
repz
aam
in
imul
fistpl
rol
mov
out
sbb
sub
cmc
xor
xchg
and
pop
push
adc
fwait
xor
clc
pop
or
pushf
xchg
insb
lahf
loope
adc
repz
xor
inc
jmp
sub
cs
cmpl
test
out
pusha
xor
push
and
jge
xchg
mov
mov
call
jns
sbbb
jae
and
movsl
popa
rcrl
dec
jecxz
pop
inc
loope
adc
mov
sarl
cmpsb
and
enter
in
icebp
fstp
in
test
arpl
xor
or
adc
push
mov
repnz
js
scas
sub
inc
int3
mov
popf
data16
mov
push
cmpsb
repz
daa
push
fnsetpm(287
movsb
add
fidivrs
fmulp
adc
out
lahf
push
bound
or
lock
pop
mov
fmull
pusha
ret
fcompl
jne
and
sbb
sarl
pop
fwait
mov
xchg
dec
cmp
jne
insb
adc
jmp
push
mov
sahf
loop
cli
adcl
scas
dec
sbb
push
scas
mov
pop
leave
in
movsb
std
jmp
push
mov
sub
adc
mov
es
push
cmc
add
add
lret
jmp
inc
fidivl
pusha
data16
les
sti
std
movsb
jge
adc
add
adc
pop
stos
leave
and
xchg
jge
mov
scas
or
mov
test
ret
je
mov
jo
cmp
jns
gs
cmpsb
ficomps
and
pusha
cmc
adc
add
push
xor
xor
dec
dec
aad
test
mov
pop
neg
ret
scas
and
scas
jbe
es
rclb
adc
ret
aas
jl
xchg
xor
push
xchg
sbb
scas
fsubp
mov
aam
push
adc
dec
outsl
sbb
mov
dec
or
dec
mov
cwtl
xchg
in
sub
ret
outsl
out
xlat
sahf
sbb
mov
pop
xchg
sti
shlb
sarl
dec
and
sbb
adc
mov
in
lea
pop
dec
imulb
ds
lds
and
adc
scas
pop
aam
mov
imulb
icebp
loope
outsb
lods
inc
pushf
cs
aaa
jb
lea
loopne
cld
jge
jmp
in
xor
shll
lahf
movntq
sbb
test
inc
lods
jae
inc
fimuls
out
dec
add
push
sti
mov
iret
ret
adc
outsl
mov
push
push
cmc
pop
sub
insb
pop
hlt
aas
int3
jns
sub
mov
cmp
dec
mov
je
stos
or
sub
jmp
arpl
lods
ja,pt
mov
lods
jmp
ja
push
cmpsb
imull
in
orb
cmp
ret
cmp
mov
or
fildl
mov
inc
sarb
push
inc
or
insb
clc
stos
popa
pushf
aaa
xor
cmpsb
mov
xor
mov
ja
out
std
lcall
sub
or
or
scas
sub
ret
or
inc
dec
mov
sub
push
fsub
xor
lret
mov
movsl
std
and
sub
cmpb
cmp
hlt
push
sub
push
ss
scas
or
pop
jae
insb
sbb
mov
mov
daa
fdiv
mov
mov
push
std
mov
jp
hlt
sub
adc
sahf
add
jno
mov
add
pop
add
aas
fidivrs
mov
out
fmuls
add
lods
xor
inc
xchg
add
dec
sahf
inc
enter
lods
inc
mov
adc
and
divb
adcl
xchg
jmp
arpl
fs
xlat
jno
mov
outsl
push
lahf
cli
sub
mov
cmc
dec
iret
lret
stos
ret
mov
sub
xchg
adc
jecxz
sbb
push
dec
pop
insb
scas
sbb
dec
xor
push
shll
jmp
mov
pushf
jne
mulb
cwtl
int3
pop
add
hlt
mov
jno
mov
test
and
mov
jg
test
cmp
and
repnz
add
int
push
nop
dec
int
repz
negl
icebp
rorl
pop
sub
or
es
cmp
or
push
and
add
shrb
sahf
sub
jnp
rcll
filds
jb
repnz
push
shrl
pop
movsl
mov
bound
inc
iret
cmp
sub
repz
sbb
scas
int
incl
mov
mov
adc
jb
clc
shll
lock
and
xchg
test
jb
or
pop
aam
stc
push
lret
js
cmp
dec
adc
gs
mov
clc
add
lods
or
xor
push
mov
divl
push
dec
adc
dec
roll
daa
das
je
lods
mov
out
mov
xchg
mov
addb
cmp
aas
data16
pop
or
fidivl
cmp
fmull
jbe
mov
ds
and
outsb
sbb
in
sbb
ljmpw
stos
mov
stos
jae
call
mov
sub
in
mov
inc
shll
idivb
out
adc
mulb
movsl
fbstp
jnp
ficomps
jno
mov
mov
dec
xor
cltd
mov
mov
inc
mov
arpl
call
adc
bound
add
pusha
insl
mov
dec
xlat
mov
push
fnsave
std
test
cmp
jae
sub
call
shrl
lret
mov
jns
mov
push
cmc
xchg
push
sti
push
cld
dec
jl
add
icebp
rcll
jno
out
mov
out
and
mov
std
mov
call
add
xchg
pop
dec
pop
test
pop
movsl
mov
cmpsl
and
pop
adc
add
fildl
mov
jb
push
add
mov
mov
filds
test
jnp
popl
ud0
jno
mov
or
je
xchg
mov
daa
push
pop
mov
push
mov
jmp
test
nop
sti
push
cwtl
jge
cwtl
sub
je
sub
mov
imul
shrb
jae
cmp
test
inc
pcmpgtd
orl
leave
std
mov
sbb
jne
cmp
xchg
mov
ficomps
dec
outsl
int
iret
fbld
mov
mov
inc
shrb
jno
jmp
mov
ret
xor
pop
mov
sub
inc
jecxz
cmc
jae
stc
loop
xchg
aaa
mov
inc
fisttpl
icebp
nop
mov
push
dec
pusha
jl
fstpt
pop
shrl
inc
aas
mov
es
xor
adc
lds
cmp
and
int3
mov
dec
in
push
adc
mov
cmp
insl
cs
fcoms
std
mov
inc
out
and
jge
jne
stc
adc
mov
mov
int3
xchg
cmc
icebp
adc
adc
cwtl
jmp
icebp
repz
fsubl
int
in
stos
add
hlt
xchg
ret
sub
js
fmuls
cmp
lcall
adc
aam
fisttps
sbb
shlb
ficoms
mov
addl
mov
cwtl
fwait
mov
dec
xor
divl
pop
imul
imul
lret
xor
or
dec
ja
and
mov
and
ljmp
dec
sub
push
pop
add
movsl
sahf
popa
mov
shrb
into
int3
or
fmull
and
push
clc
fcmovnbe
call
inc
inc
push
mov
out
cwtl
dec
sbb
loopne
push
add
inc
xchg
dec
das
enter
std
mov
add
dec
inc
stos
xorl
gs
or
fs
dec
push
cmpsb
test
aas
in
xor
add
rcr
push
and
xor
mov
add
pop
push
xor
push
pop
popf
xchg
pop
fstpl
pop
pop
inc
jo
xlat
in
lods
insl
inc
in
cwtl
sbb
xchg
push
pop
pushf
in
in
or
pop
daa
mov
add
lahf
test
dec
gs
mov
mov
mov
xchg
enter
mov
lcall
push
insb
into
in
fists
insl
xor
fdivrs
jmp
xor
leave
jmp
pop
cs
or
movsb
xorl
dec
pop
sub
dec
add
in
push
mov
jo
mov
jbe
pop
inc
dec
movsb
popf
xor
in
cmp
push
dec
jmp
test
iret
fisubrl
call
aam
pop
aam
and
mov
pop
pop
mov
mov
and
mov
xlat
sbb
jp
in
call
insl
inc
mov
or
xchg
jne
push
xchg
insb
loop
lahf
fwait
push
cmp
cltd
loop
shrl
mov
cld
or
push
sub
or
movsl
push
ja
mov
test
pop
loopne
xor
outsb
and
sti
jb
jne
mov
ret
jnp
fcoms
js
lret
aam
icebp
pushf
push
push
add
jecxz
mov
add
xchg
cmp
mov
popa
in
outsl
cmp
das
mov
pop
add
sub
push
out
push
inc
ljmp
and
jle
sbb
inc
in
sub
xchg
aad
imul
mov
lahf
mov
inc
adc
movsb
sbb
jmp
shll
sahf
enter
or
les
push
loop
push
fsts
cli
xchg
fcmovu
out
movsl
popa
add
pop
daa
xor
cld
pop
push
xor
imul
arpl
push
outsl
das
add
xchg
out
push
fcomps
xchg
mov
fcoms
push
lock
scas
sbb
and
mov
out
sbb
mov
pop
mov
adc
loop
hlt
mov
jmp
jns
leave
scas
repnz
push
scas
ljmp
push
cld
sbbl
mov
inc
mov
xadd
in
push
addr16
add
xor
add
mov
dec
mov
lcall
int
inc
cmpsl
mov
inc
pop
or
sub
imul
in
mov
fstpl
inc
xchg
data16
push
adcb
cmp
dec
dec
movsl
xor
adc
sub
pop
add
xor
jo
lods
sahf
jne
movsb
scas
repz
xchg
xchg
jp
hlt
add
xor
roll
cmpsb
je
mov
xchg
mov
pop
pop
ja
push
pslld
xor
cmp
pop
jg
in
sahf
jmp
mov
movsb
ds
clc
push
ret
add
mov
sub
popa
add
scas
cmp
and
fs
cmpl
outsl
push
xchg
add
add
hlt
loopne
negl
stos
push
sub
adcb
insb
loopne
dec
mov
stos
mov
cmp
xor
mov
lods
xchg
pop
sub
xchg
call
sub
pop
and
stc
es
fisttpl
push
push
aam
xchg
insl
fsubl
pop
scas
lods
jns
cmpxchg
xchg
int3
mov
sbb
stos
ljmp
cwtl
or
insl
in
test
fimull
mov
out
imul
mov
add
pop
jp
pxor
popa
pushf
push
dec
je
mov
div
pop
inc
arpl
imul
inc
adc
mov
ljmp
pop
es
mov
jl
xchg
rolb
call
or
dec
dec
ds
movsl
cmp
inc
pushf
notb
fcomps
fnsave
bound
js
push
std
sub
pusha
mov
push
inc
inc
jp
pop
xchg
and
or
xchg
cmp
sub
lret
enter
or
rcl
pushf
jge
mov
sub
insl
jo
inc
push
cwtl
in
inc
mov
add
test
mov
mov
dec
pop
and
fiadds
outsb
jmp
lock
das
int3
cmpsl
push
dec
dec
in
add
test
or
and
lahf
addr16
push
push
xor
dec
test
movsl
push
pop
into
nop
mov
xor
les
push
clc
pop
loop
xchg
daa
push
pop
scas
jne
lods
enter
dec
int
mov
dec
cwtl
jbe
add
jg
xor
push
push
mov
fsubrs
xor
sub
or
stos
lds
sub
pop
aam
mov
jecxz
out
loope
cmp
add
add
loope
sbb
sub
inc
repnz
ljmp
xchg
out
out
mov
and
and
cmp
int
daa
adc
in
mov
insb
jnp
and
ret
cmc
ds
mov
lret
or
icebp
adc
cmpsb
pop
pop
mov
cmpsl
lret
pop
sti
imul
mov
jg
lret
divl
mov
sbb
icebp
sbb
bound
add
mov
std
sbb
xchg
pusha
push
test
int3
push
loope
dec
imul
fstpt
jae
addl
push
cmp
mov
int
add
out
and
mov
sbb
fs
mov
pushf
fadd
cwtl
stc
pop
sub
rcrb
pop
xchg
adc
imul
lock
sahf
popa
cli
pop
repnz
mov
pusha
adc
xchg
pushf
sbb
xor
dec
cltd
test
mov
shl
xorb
cmp
mov
ficomps
cs
cmp
mov
add
xchg
sbb
jp
dec
push
jl
rolb
js
ss
xor
mov
imul
les
cs
out
mov
cmc
fdivs
cmp
pushf
dec
ret
mov
aaa
jae
jmp
sti
lods
cmpb
test
pop
iret
mov
jg
mov
xchg
sti
cmp
xchg
jbe
mov
into
pop
out
sbb
sub
cmp
fxch
out
xlat
int3
cmp
icebp
xchg
pusha
cwtl
mov
cld
nop
sbb
lods
hlt
mulb
movsb
int3
jb
loopne
cmp
jno
int
pop
xchg
loop
nop
lock
insl
mov
pop
adc
ds
or
sub
mov
lret
sub
adc
adc
pop
fsubr
push
lds
mov
xchg
mov
mov
pop
pushf
mov
ljmp
hlt
jne
or
mov
mov
jmp
mov
cli
mov
cwtl
sbb
out
mov
rclb
test
bound
out
xor
pushf
in
bound
push
xchg
inc
sbb
add
adc
flds
std
cmc
int
loopne
mov
ja
mov
mov
bound
outsl
aaa
popa
subb
sbb
sbb
mov
xchg
shll
cmp
out
mov
js
std
repnz
jp
aad
adc
fistps
jg
into
cmp
add
cltd
ds
andl
das
mov
cmp
loop
pop
fs
into
jb
jmp
hlt
add
int3
call
ret
inc
aam
cmpsb
adc
adc
cmp
adc
xchg
fists
jg
jg
mov
ja
inc
ud0
cwtl
out
sub
andb
jecxz
test
sbb
mov
inc
cmova
inc
xchg
mov
js
dec
shlb
mov
dec
rorl
daa
movsl
in
push
sti
outsl
mov
mov
icebp
sub
push
stos
add
call
in
inc
mov
mov
mov
push
dec
mov
push
and
sub
mov
in
repnz
push
xor
repnz
sbb
ss
push
mov
mov
dec
hlt
jno
jo
dec
push
pop
and
movsl
jp
jb
mov
out
adc
cs
sub
in
movsb
test
imul
mov
jecxz
mull
cli
lret
push
sbb
inc
xchg
inc
cmpb
add
sbb
pop
mov
out
movsb
sti
lods
add
mov
out
lods
pop
jg
pushf
dec
shrl
sub
mov
push
repnz
and
add
mov
xchg
mov
pop
test
xchg
dec
mov
mov
sub
nop
pop
mov
xchg
push
inc
outsl
jge
push
or
sbb
addr16
enter
sbb
pop
outsb
insb
sarl
aam
and
mov
testb
add
inc
in
pop
sti
loope
adc
inc
adc
adc
js
call
sub
ficoms
andb
faddp
in
out
int
mov
in
xchg
fidivs
loop
fdivs
sti
jge
add
and
movsl
cmpsb
ljmp
pop
lcall
pop
xor
add
and
push
jne
pop
popa
jmp
iret
call
dec
mov
mov
aas
pop
jle
pop
fisubs
adc
inc
scas
mov
pop
shrb
daa
mov
out
cli
add
ret
lret
jmp
xchg
scas
mov
mov
pop
out
dec
notl
nop
fcmove
es
push
cmp
add
sti
inc
movsb
jecxz
jle
les
jne
jnp
iret
bound
pop
loopne
arpl
xchg
adc
cmp
pop
adc
int
adc
fprem1
subb
adc
dec
or
cmp
fimuls
into
stos
cld
inc
mov
mov
xchg
lret
sub
push
dec
jno
out
inc
rcll
inc
mov
push
shl
xor
mov
js
xor
xor
pop
sarl
xorl
cmc
fsubr
add
jo
add
cmp
dec
rcrl
rcrl
repz
xor
xchg
push
stos
pop
xchg
fst
cmpsl
lcall
sub
enter
insl
cltd
sub
add
push
arpl
fyl2x
sub
adc
icebp
jmp
jo
add
add
shlb
inc
add
lods
cwtl
xchg
inc
outsl
jnp
push
rorl
les
insl
or
add
bound
xchg
and
mov
xor
inc
icebp
sbb
pop
mov
jmp
fisubrs
jmp
lahf
incl
push
or
pop
jae
ds
pushf
jmp
cmp
pop
popf
push
stc
jae
fnstsw
bound
xlat
jle
mov
pop
fcmovbe
leave
mov
ret
nop
xor
cmpsl
cltd
test
xor
js
push
pop
sub
jl
cmp
bound
pop
repz
iret
shl
jl
cmc
daa
in
add
movsl
leave
fwait
cld
fidivrs
ss
es
push
lods
es
faddl
outsl
ss
in
out
call
push
sbb
rclb
cmp
dec
cmpsb
jg
cltd
inc
adc
icebp
popa
jbe
cmp
mov
leave
push
ret
adcl
popa
jns
aad
mov
das
or
jae
cmp
outsl
repz
cmp
out
mov
cmp
fldl2t
cld
sbb
xchg
jae
inc
xor
adc
jecxz
cli
mov
leave
jg
sub
popa
sahf
cwtl
inc
xchg
sbb
sub
mov
dec
ret
mov
xchg
out
testb
call
cmc
sbb
sub
add
xchg
ret
jmp
dec
push
pop
scas
test
les
sub
nop
pop
cmp
jecxz
lock
dec
ficoml
das
sbb
inc
inc
xlat
out
sahf
jg
dec
sub
push
or
mov
jecxz
xor
sub
sub
xchg
jns
jle
into
gs
mov
fbstp
cmc
dec
push
bnd
and
repz
dec
push
push
add
sbb
lea
jnp
adc
xor
mov
inc
adc
fwait
in
xor
cmp
daa
lds
mov
and
mov
jo
andb
int
sub
mov
sbb
mov
push
dec
sbb
scas
sbb
dec
popf
fcmovnb
popa
mov
mov
pop
pop
mov
xlat
pop
int
sahf
aaa
addr16
fdivp
aam
pop
in
popa
loopne
inc
fsts
leave
or
add
pop
cmp
and
inc
testl
mov
xchg
testb
jecxz
out
or
adc
inc
out
mov
adc
test
cltd
xchg
daa
call
mov
mov
dec
inc
loop
or
jns
scas
sbb
pop
jbe
addr16
dec
xchg
dec
in
dec
push
adc
ljmp
pop
ficomps
clc
je
dec
out
adc
fadd
enter
push
add
vpperm
mov
aad
push
cltd
lods
aam
xor
mov
sarb
mov
sbb
popf
push
cwtl
into
adc
push
mov
insl
xor
mov
mov
mov
dec
sbb
mov
mov
dec
push
loop
cwtl
sbb
lods
ss
stos
xchg
loop
cmp
mov
mov
jo
cld
lds
adc
jge
mov
test
scas
jbe
ja
mov
ret
jno
lods
mov
jge
repnz
jle
push
or
push
aam
shr
test
mov
mov
repnz
jne
add
mov
popa
jg
mov
mov
mov
hlt
mov
fstpl
mov
adc
data16
push
mov
xchg
fidivl
xchg
out
inc
cmp
lcall
fadds
xor
and
inc
mov
jns
mov
sbb
call
push
pop
jmp
pop
in
sbb
stos
mov
push
cmp
repz
sub
sub
xchg
aas
pop
shrb
shll
xchg
and
push
lahf
push
jmp
sub
cmp
loope
pop
dec
pop
mov
bound
loop
fimull
or
and
scas
or
mov
push
fnsave
int
js
shrl
gs
mov
out
cwtl
imull
mov
bound
mov
inc
push
or
xor
mov
push
xchg
scas
stc
push
gs
mov
jnp
dec
out
inc
cmp
push
cld
es
lods
insl
sbb
loope
inc
adc
idivl
les
fisubs
stos
insb
push
sub
into
mov
xchg
and
dec
je
xchg
hlt
in
lret
sbb
fldl
imul
dec
shl
lods
push
mov
jle
and
sbb
insb
and
and
jmp
pop
push
cld
mov
mov
mov
daa
or
jno
lods
sbb
add
inc
mov
add
xor
sbb
enter
enter
xchg
arpl
fucom
inc
lea
subb
aam
fnsave
mov
jns
pop
mov
subl
bnd
sub
mov
sub
jp
ret
sub
sub
jnp
inc
cltd
pop
sbb
cli
les
jnp
pop
enter
mov
nop
fs
orb
into
imul
and
sti
rcrb
inc
cs
das
cmp
int3
cmp
and
in
mov
and
out
and
sarl
jae
mov
ljmp
adc
sbb
rolb
clc
in
add
scas
adc
std
enter
fwait
sub
mov
pop
or
jns
arpl
je
clc
in
sbb
pop
or
sahf
jb
insb
push
scas
mov
sub
movb
pop
lret
add
mov
mov
pop
cmp
or
pusha
test
neg
stc
jmp
shll
dec
xor
ljmp
sub
ds
hlt
sbb
jle
dec
movsl
arpl
ds
xorb
or
pop
negb
ds
sbb
adc
addr16
ss
es
add
xchg
aaa
pop
dec
xchg
dec
test
je
dec
pop
fwait
dec
cmp
sarl
out
mov
das
inc
cld
data16
add
int
int3
lahf
pusha
lods
mov
ja
xchg
pushf
mov
loope
insb
pop
push
sub
das
fcmovnu
jo
inc
test
in
shrb
xchg
out
mov
aam
dec
in
addr16
sbb
dec
ja
aas
push
hlt
in
test
jb
or
int3
push
xchg
sarl
aam
mov
add
int
adc
orb
cmpsl
rcrl
fstpt
cmpsb
mov
xchg
cmpsb
test
xlat
sar
add
add
sub
mov
jne
jo
lahf
pop
xlat
push
fsubp
mov
adc
pusha
xor
xchg
lret
mov
xchg
clc
lods
fcomip
jp,pn
test
outsb
mov
mov
outsb
jg
jns
mov
adc
clc
loope
cwtl
mov
dec
mov
std
mov
dec
leave
pop
ljmp
mov
inc
clc
sbb
adc
pop
daa
movsl
xorl
pusha
std
pop
repnz
sbb
cli
mov
lahf
fsubrl
xchg
pop
push
xchg
imul
mov
test
out
ret
mov
xor
ds
pop
jae
fcmovbe
dec
mov
pushl
add
cmp
out
out
or
mov
cmp
push
jne
std
lods
push
jp
clc
sbb
mov
test
outsl
cli
clc
loope
inc
stc
cli
out
push
dec
mov
imul
enter
insl
pop
jl
xchg
or
test
xor
mov
aam
pop
out
mov
lahf
orb
jmp
xor
mov
mov
out
adc
jg
xor
or
and
sub
insl
adc
xlat
mov
rorb
in
fildl
xor
dec
mov
mov
push
icebp
das
push
ret
pop
adc
xor
mov
adc
mov
sub
setl
push
je
loope
xor
mov
std
inc
cmpsb
xchg
and
and
mov
sub
decb
into
hlt
ljmp
movb
mov
test
cld
std
cmpsb
nop
addb
mul
jmp
or
xchg
jg
enter
jno
sub
jg
les
inc
pop
xchg
das
iret
adc
mov
add
and
mov
fdivr
inc
popa
ret
cmpsb
scas
inc
outsl
pushf
stc
data16
mov
push
adc
push
inc
loopne
sub
mov
daa
push
lock
or
lds
sarl
shlb
fs
jmp
stc
xchg
pop
jnp
imul
imull
add
xchg
pop
sub
mov
cmc
aaa
loop
cmp
imul
inc
pop
pop
test
mov
in
lahf
pop
inc
mov
dec
fistpll
jp
lret
es
pop
jl
dec
inc
dec
imul
jle
push
jle
aad
jecxz
lret
idivl
adc
inc
sub
sar
fstpl
xchg
xor
sub
jae
gs
mov
sub
iret
dec
lods
ljmp
xor
pop
ret
icebp
cld
aas
shlb
inc
psubsb
xchg
mov
cwtl
sub
shll
lahf
xor
xor
movb
out
popa
movsb
rcll
fcom
xchg
jb
std
andb
mov
fld
push
xchg
mov
add
sbb
cwtl
movsb
ret
popa
out
cltd
xor
xchg
fstps
push
sbb
mov
stos
ret
or
cmc
sbb
mov
or
jbe
jbe
mov
dec
sub
sti
aaa
push
cmp
xchg
mov
pop
dec
mov
stos
adc
jl
pusha
js
aas
out
pop
shr
pushf
idivb
stos
sbb
lea
mov
dec
stos
shrl
out
pop
repnz
mov
xchg
push
shrb
lcall
cs
int3
xor
fiaddl
fucomp
pop
add
iret
sub
insl
jmp
inc
ja
loope
icebp
stos
or
and
fdecstp
cmc
hlt
les
cli
fwait
into
fistpll
lds
ficompl
inc
je
push
mov
fiaddl
dec
hlt
ret
mov
popa
leave
pop
minps
lock
add
add
push
xor
inc
int
inc
push
dec
push
or
test
cmpsl
fs
add
fadd
cwtl
dec
xchg
pop
inc
scas
jne
xchg
lret
test
sbb
dec
pop
jb
cmp
add
xor
mov
xchg
inc
gs
cmc
sub
push
fnsave
mov
jo
rcrb
mov
inc
fidivrs
push
mov
ja
jb
sbb
mov
stos
fstpt
pop
cltd
jmp
mov
inc
and
sti
mov
clc
ja
mov
dec
add
ds
fstpl
push
ss
in
stos
rep
roll
mov
pop
sub
cmpsl
push
xor
pop
lcall
sbb
test
fsubl
cmpsb
mov
shl
paddq
jns
aaa
add
repz
cmc
add
arpl
mov
cmpsb
jecxz
xchg
ja
shr
pop
fisubs
test
loop
scas
cmpsl
pop
loopne
cmp
andb
adc
repz
cmp
aaa
mov
mov
lret
pop
push
aam
adc
adc
and
loop
iret
jmp
mov
leave
push
xchg
xchg
lea
lret
loop
imul
mov
xchg
sarl
add
mov
lods
loope
or
ret
sbbb
jbe
std
and
sti
add
insl
sub
or
scas
int
in
iret
je
xchg
jns
shrb
jmp
pop
mov
int
pop
sahf
xchg
xlat
outsb
std
sbb
arpl
leave
xchg
movmskps
test
sub
in
lods
xchg
xor
push
std
push
xor
jnp
and
cmc
and
inc
out
stc
cli
int3
mov
cmp
in
xchg
mov
sbb
push
rolb
mov
dec
push
pop
pop
movsl
xchg
jg
push
cmp
arpl
dec
and
push
inc
xor
fwait
mov
and
sub
pop
mov
sbb
aam
cwtl
std
loop
add
or
jg
fildll
imul
pop
mov
jge
outsb
mull
shlb
pop
ss
add
lret
xor
xorl
lods
adc
pop
scas
lock
out
dec
mov
or
sbb
cmp
mov
push
sbb
mov
insb
sahf
addr16
aas
add
inc
clc
mov
in
adc
insl
gs
nop
sahf
stc
sub
cmpsl
jb
xchg
outsb
popa
dec
xor
pop
mov
shll
pushf
out
push
jns
fwait
mov
push
inc
sub
mov
pop
ss
push
fld
shl
and
pop
sti
test
pusha
xor
sub
ss
pop
push
cmpsb
mov
jl
push
lret
out
jne
push
mov
shrl
jmp
daa
nop
in
push
fmul
mov
loope
dec
pusha
push
mov
aad
dec
fldenv
scas
lcall
jnp
imulb
call
ljmp
aad
jbe
sub
cmp
cmp
fistl
mov
rcrl
or
inc
repz
jne
xchg
inc
movsb
out
mov
mov
call
sti
push
push
and
xchg
mov
dec
jo
fucom
sbb
call
mov
lea
subl
mov
sbb
and
addr16
dec
jge
fmul
pop
movsl
sti
push
in
xchg
lds
pop
jo
push
xchg
mov
cmpsb
jns
test
sbb
aam
imull
call
shr
call
dec
cmc
mov
xchg
popf
insl
pop
mov
mov
dec
shlb
cwtl
xchg
push
gs
cmp
cli
dec
sbb
insb
sbb
ret
pop
mov
es
in
or
movsb
rcrl
sbb
xchg
push
mov
outsb
xlat
mov
mov
ret
add
jb
icebp
ds
push
add
or
sub
adc
xor
jp
vpunpcklwd
inc
pop
cmp
leave
and
push
lret
jne
mov
cs
jbe,pt
lea
xchg
mov
adc
pop
out
jmp
int3
mov
or
pop
push
lcall
or
iret
mov
push
push
test
fdiv
xor
mov
arpl
aam
jp,pt
jle
sub
mov
adc
jno
and
jl
stos
adc
insl
mov
hlt
rcrl
inc
xor
add
into
jo
mov
lods
add
pop
out
mov
lahf
movsb
xchg
pop
adc
and
in
mov
mov
inc
adc
fwait
push
fwait
mov
jno
pop
xchg
fcmovb
dec
roll
adc
aam
pop
mov
push
jmp
fdivl
testb
pop
push
mov
adc
jae
clc
ss
stc
lds
repz
lea
push
jl
jo
es
les
push
jnp
scas
push
mov
xor
roll
int3
jnp
jecxz
jb
das
jp
dec
push
mov
xor
cmp
pushf
dec
mov
add
incb
stos
jne
and
push
mov
push
cs
mov
test
add
es
pop
dec
es
sbb
and
int
inc
ret
out
stc
andb
test
inc
xor
and
mov
push
jne
insb
xchg
cld
mov
sahf
ficoml
mov
mov
movsb
xor
cmp
push
add
std
fmuls
mov
sarl
mov
mov
test
in
adc
push
out
adc
mov
xor
scas
mov
imul
mov
arpl
idivl
pop
pop
pop
mov
pop
test
xchg
add
scas
jp
inc
add
and
and
and
and
push
test
pushf
outsb
and
lcall
push
fucomip
mov
test
mov
cli
add
cmpsl
lds
mov
jmp
dec
cmp
dec
cwtl
sub
or
cs
enter
fsubs
test
adc
xchg
pop
cmpsb
fld
ss
lods
test
xchg
arpl
les
cmp
jno
pop
repz
fiadds
add
loop
addb
mov
cmp
fsubl
push
push
ljmp
scas
pop
xor
and
mov
add
es
pop
in
pop
mov
jmpw
pusha
xor
jmp
int3
arpl
lahf
add
test
xor
mov
jle
mov
mov
adc
sub
mov
repnz
mov
orl
or
sti
inc
les
pop
sbb
inc
mov
ljmp
movsl
mov
push
and
outsb
or
jns
enter
test
sbb
xchg
cmp
jae
insl
movsb
in
and
ja
adc
scas
std
mov
ds
mov
push
mov
std
pop
and
add
sbb
dec
dec
jbe
imul
inc
cmp
aaa
pop
aaa
push
dec
cli
in
mov
push
insb
fsubl
outsb
cmc
mov
mov
mov
xorb
xchg
subl
cmp
mov
sbb
xor
xor
or
adc
cmp
andb
cli
repnz
mov
lret
jb
mov
mov
and
sub
arpl
in
test
mov
push
rcl
lret
jmp
jmp
popa
shlb
cmp
or
jno
cli
cmc
xor
sar
mov
enter
xor
cwtl
icebp
push
fiaddl
inc
xchg
jo
outsb
roll
repnz
mov
mov
jge
jle
cwtl
lea
out
stos
dec
jp
scas
inc
iret
fdivrl
sbb
lahf
adc
push
mov
mov
xchg
cmp
pushl
push
das
and
outsl
nop
loope
adc
lretw
inc
shr
dec
adc
or
mov
mov
pop
mov
int
and
shl
dec
sub
testb
ja
fsubl
fs
fimull
mov
cld
xor
mov
sbb
pop
pop
cmpl
loope
mov
mov
push
or
jnp
push
add
mov
xorl
add
xor
cmp
xor
test
xchg
mov
pop
mov
dec
xor
lret
push
or
icebp
int3
pop
in
sbb
mov
in
nop
lret
jg
mov
xchg
test
shrl
push
xchg
std
cmp
cmp
insl
ds
lcall
and
add
cli
mulb
and
sbb
rolb
mov
mov
and
mov
pop
xchg
fisubs
enter
js
mov
push
jbe
seta
shr
lods
outsb
ja
add
pop
push
push
or
sbb
xchg
sub
mov
mov
frstor
mov
jne
sbb
aas
cltd
xchg
pop
lcall
mov
xchg
mov
in
push
inc
xchg
in
sbb
mov
mov
scas
fadds
add
inc
das
lds
xor
push
jo
xchg
cwtl
enter
xor
jo
mov
cmc
jg
ja
lahf
jae
and
sub
jp
mov
stos
mov
push
jo
in
mov
jbe
into
mov
scas
add
push
js
out
sti
jne
xchg
jle
cmp
adc
mov
push
dec
pop
js
and
aaa
push
ficoml
fxch
dec
popf
xor
cmp
push
inc
arpl
icebp
repz
imul
cmp
mov
pusha
sbb
xchg
mov
stos
outsl
inc
orl
jb
push
aaa
outsl
push
and
fbld
lods
dec
decl
pop
inc
pop
outsb
xorb
mov
sub
data16
out
scas
movsb
sarb
and
movsl
and
mov
add
aad
jge
dec
arpl
stos
out
cld
push
push
sub
sbb
jle
push
pop
pop
mov
mov
dec
cwtl
cmp
fwait
xor
add
sbb
mov
loopne
jg
cmp
push
or
test
ret
adc
fsubrs
scas
cwtl
jae
mov
pop
aaa
push
das
daa
sbb
dec
into
imul
dec
jnp
out
jb
xor
lret
je
loopne
pop
out
pusha
push
push
pop
jle
lods
in
sub
push
mov
push
popf
xorl
nop
cmp
in
ret
sbb
push
sub
add
xchg
cmp
inc
cmp
call
adc
inc
add
pop
ljmp
pop
jae
inc
out
ss
jmp
negb
sbb
push
or
movsb
in
cmc
xchg
icebp
mov
pop
xlat
fimuls
sub
jnp
cmp
sub
jnp
cmp
sub
xor
fistpl
iret
jnp
xor
test
lods
adc
sub
jo
mov
inc
sub
fnstsw
cltd
clc
xor
or
outsb
call
cmp
mov
imul
in
fbld
xor
pop
movsb
dec
xchg
outsb
stc
push
xor
aaa
mov
xor
gs
jl
popf
push
dec
adc
sub
add
sbb
ljmp
xor
dec
in
xchg
in
ds
cmp
mov
cmpsb
sbb
mov
jle
add
add
insb
leave
into
mov
xor
push
push
pop
fdivrl
mov
cmpsl
bound
add
jae
cs
lcall
or
je
outsl
ret
pop
imul
iret
insl
outsb
insl
dec
mov
adcl
jmp
hlt
adc
sub
push
ds
lret
testl
test
addr16
jo
inc
outsb
or
test
xchg
andps
push
sub
mov
pop
push
mov
mov
addr16
loopne
pop
enter
mov
out
mov
call
addr16
inc
shrl
push
jecxz
xor
or
ss
cmpb
fwait
mov
fdivr
sbb
ja
xor
fadds
iret
dec
xchg
sahf
jne
jmp
cmp
push
rol
jo
push
cmp
lods
enter
push
sbb
adc
ret
xchg
xchg
or
xchg
int
shll
mov
jo
add
test
inc
inc
stos
add
lock
popf
cmc
pop
mov
push
in
xor
push
enter
mov
sahf
cmpsl
mov
and
leave
push
or
jno
jno
iret
sub
mov
jecxz
sahf
ds
mov
pop
stc
sub
cmp
inc
outsb
arpl
add
shll
sub
lret
in
stos
imulb
js
jecxz
xor
pop
jle,pn
iret
scas
popl
lret
icebp
iret
sbb
pop
mov
mov
add
sub
push
shl
testl
add
dec
cli
test
in
fs
mov
cmc
mov
xchg
jae
enter
sahf
mov
lea
loop
push
in
lock
lahf
mov
aaa
cwtl
mov
mov
bound
or
mov
dec
fwait
sub
sbb
scas
add
lock
mov
scas
xchg
lret
mov
dec
sub
push
negl
fstl
cmp
aas
jecxz
fs
xorb
aam
in
and
shrl
jmp
sbb
scas
inc
stos
xchg
out
mov
jge
push
jl
dec
inc
das
test
inc
sbb
out
pusha
mov
nop
pop
mov
addr16
mov
fwait
aad
in
jns
mov
test
add
cmpsl
jle
xchg
sti
shl
push
xor
mov
js
cmp
pusha
xor
jne
mov
mov
dec
xchg
jbe
movsb
sahf
inc
jno
xchg
loope
pop
mov
jg
hlt
pop
rolb
fmuls
jo
mov
gs
jp
popf
leave
popa
sbb
or
cmp
jg
aad
and
in
jae
fs
mov
pop
sbb
xor
jnp
aad
lea
mov
pop
icebp
mov
jo
push
mov
adc
popa
xchg
add
push
test
das
jne
in
xor
xchg
jne
insb
lahf
jle
cmpsb
test
push
push
push
ret
scas
add
push
xrstor
xchg
xchg
ss
pop
cmpsl
mov
or
stos
sbb
jns
and
sbb
mov
cltd
jae
add
das
out
inc
jl
push
pop
fsubs
ljmp
jmp
sub
stos
mov
and
pusha
xor
fs
dec
jmp
or
into
test
inc
pop
xchg
adc
mov
xchg
fistps
mov
xchg
and
sub
shll
pop
cmp
fisubrs
adc
push
sti
inc
call
inc
sub
in
fucomip
mov
bound
daa
mov
push
cwtl
in
sbb
xor
mov
mov
nop
adc
jbe
lret
dec
test
inc
push
dec
sbb
sbb
fmulp
lahf
inc
mov
push
pop
ret
adc
dec
inc
mov
mov
xor
popf
xorb
sbbb
scas
cmp
push
mov
mov
pop
icebp
inc
ja,pn
in
adc
imul
out
call
in
push
movsb
out
or
bound
adc
jge
outsb
scas
int
push
xchg
add
xchg
test
rclb
or
frstor
jge
mov
fwait
test
lret
xor
xlat
dec
arpl
ret
sbb
mov
mov
push
push
ret
adc
mov
xchg
jg
movsb
or
clc
xchg
sbb
xchg
in
aas
loope
out
mov
lods
jbe
push
lea
push
addr16
movb
add
in
mov
mov
and
pop
inc
pop
out
push
adc
add
xor
fsubrl
rcl
sub
into
cmp
mov
lods
les
push
mov
repz
inc
sbb
or
sbb
jnp
xchg
in
pop
bound
cli
and
or
sub
cmp
xor
ja
mov
mov
jbe
pop
mov
cmp
loope
pop
imul
and
jb
or
sub
push
jg
in
xor
sbb
mov
mov
getsec
fstpt
adc
std
mov
imul
fsts
pop
repnz
dec
fists
lahf
inc
ret
jge
aad
dec
das
dec
and
jo
clc
jge
jne
push
cmp
sbb
addr16
xchg
leave
ljmp
in
int3
mov
pop
fstpt
sti
rcrl
insb
js
imul
inc
or
push
or
lods
sbb
or
or
mov
mov
and
mov
adc
add
enter
aam
mov
int
cmpsb
dec
lcall
push
mov
pop
addr16
mov
out
inc
xchg
xchg
fs
lock
outsb
bnd
dec
outsb
fstpl
ljmp
push
and
incl
cmpsb
lds
jne
mov
fcomi
xchg
movsb
mov
sub
and
mov
ret
dec
mov
into
cltd
sub
mov
cli
push
int
mov
xchg
shll
sar
idivb
mov
test
imul
movsb
or
repnz
out
movzwl
xchg
adc
jmp
stc
out
pop
pop
test
adc
test
cmp
add
mov
loop
bound
inc
and
in
outsl
imul
test
insl
aas
and
loopne
mov
sbb
sub
cli
rorb
push
sub
cmp
add
test
xor
loop
add
mov
loop
cmp
xor
sub
sbb
ljmp
push
insb
sub
add
dec
cmpsl
push
test
jl
cmpl
scas
jecxz
bound
add
pop
jg
ss
push
mov
adc
pop
iret
push
jmp
hlt
sti
dec
jg
jge
sti
stos
sub
ficoms
out
pop
add
fwait
cmp
or
xor
scas
mov
push
add
test
cli
enter
lods
aad
shlb
sbb
adc
mov
xchg
sub
xchg
mov
push
adc
ficoms
sbb
jb
jo
lcall
jg
mov
fmuls
push
lret
int3
sub
leave
push
mov
mov
add
xchg
pop
stc
add
inc
imul
fisubl
out
pop
cwtl
enter
adc
loopne
sarb
xchg
mov
push
inc
inc
push
mulb
and
mov
inc
adc
aad
shlb
or
xchg
test
das
mov
mov
cmovl
push
ljmp
push
sbb
xchg
lahf
dec
push
orb
enter
cwtl
add
jmp
movsb
push
icebp
gs
lods
dec
pushf
inc
sub
test
sub
inc
mov
jecxz
pushf
lods
xchg
mull
aam
cmp
dec
xor
mov
leave
mov
loope
repnz
aad
in
and
mov
mov
jae
pop
xchg
cld
push
andl
xchg
mov
stos
sbb
adc
shrl
mov
fcomp
adc
push
mov
lds
pop
into
loope
or
jg
inc
rcll
xor
aaa
mov
in
inc
ss
or
pop
mov
subb
pop
jno
adc
lret
mov
lret
xchg
cmpsl
sbb
out
imul
and
cmpsl
mov
test
stc
fldcw
or
pop
scas
outsb
dec
cmpsl
push
mov
xor
das
jl
addb
mov
cmp
out
movsb
jp
sbb
adc
sti
cs
jg
lret
xchg
aaa
popl
in
ret
mov
jle
inc
jns
add
je
push
imul
shlb
dec
loop
mov
nop
rcrb
mov
cld
xor
orl
lahf
pushf
cmc
scas
dec
sti
xchg
adc
aad
and
ljmp
scas
xchg
leave
and
call
cmp
insl
mov
dec
aas
push
shlb
pop
dec
imul
sbb
xchg
std
mov
stos
mov
dec
sub
imul
pusha
into
clc
mov
mov
xor
std
mov
leave
lods
sub
mov
push
cmc
lret
leavew
test
out
rorb
movd
and
pusha
push
subb
cld
aas
lahf
mov
stos
imul
xchg
pop
sub
and
stos
stc
imul
adc
idivl
xchg
imul
dec
push
fsubl
pop
xor
fsubrs
pop
xchg
adc
cmp
repz
mov
movsb
adc
mov
mov
addr16
sub
insl
and
xchg
shrb
pop
idiv
and
xor
lahf
test
xchg
lahf
cmp
xor
outsb
adc
ret
rolb
dec
insb
std
test
inc
mov
scas
test
int3
mov
sub
sbb
call
ja
add
cmpsb
xchg
arpl
add
ds
xchg
jo
loope
cli
pop
dec
mov
das
mov
je
cmp
xor
cmp
int
lea
sbb
sub
insb
jecxz
out
popl
add
or
sub
sbb
jb
in
mov
add
lret
cmp
test
inc
js
mov
leave
mov
or
pop
cmp
into
sub
fcmovne
aam
mov
inc
push
or
sbb
pop
pop
pop
mov
pop
scas
adc
bound
mov
sti
dec
lods
xchg
cmpsb
iret
enter
rcrb
stc
outsb
xchg
mul
cltd
mov
push
sarl
sbb
or
movsb
loopne
cmp
cmp
sbb
mov
fld
dec
inc
push
in
push
jmp
cmp
inc
call
stos
adcb
cmp
or
js
jecxz
cld
push
fidivrl
mov
std
fisttps
test
adc
aad
inc
les
adc
ja
repz
pop
and
enter
in
aaa
pushf
dec
adc
mov
lcall
inc
lcall
divb
shll
test
outsl
and
xor
inc
js
dec
stos
inc
sarl
jo
ficoms
incb
pop
iret
xor
fs
test
and
push
push
mov
sarl
cwtl
out
or
or
mov
leave
xchg
and
int
hlt
addr16
neg
adc
push
addb
lea
mov
arpl
xchg
int3
pushl
mov
push
sub
pop
jnp
push
test
fistl
inc
and
inc
lcall
dec
lret
ffreep
or
xchg
dec
lcall
loope
and
or
pusha
sub
cld
sub
mov
jo
pop
push
jecxz
push
int3
xchg
ljmp
enter
or
lcall
adc
iret
push
jae
sar
dec
test
inc
repz
or
and
pop
dec
xor
inc
push
hlt
sub
mov
dec
lods
dec
cs
jmp
push
push
mov
mov
cmp
orl
movsb
push
std
or
test
lcall
imul
push
or
iret
fsubrl
xchg
jno
xchg
or
sbb
cmp
out
dec
pop
dec
sbb
lahf
xor
mov
js,pn
mov
fcmovne
cmc
call
loopne
pop
jo
jmp
mov
icebp
out
fists
loop
cmp
test
rorb
clc
xor
in
test
mov
out
fnsetpm(287
les
daa
leave
ret
jnp
push
stc
popf
pop
and
insb
dec
sbb
icebp
xor
pop
sub
into
or
sbb
and
pusha
mov
fdivrl
call
mov
out
mov
xor
xchg
imul
or
mov
mov
sbb
sti
cmpsb
fwait
int
mov
lcall
rcll
testb
cwtl
cmc
jle
adc
sti
lcall
xlat
cld
push
stos
mov
in
mov
cmp
data16
pusha
xchg
out
xor
pop
shlb
push
cmc
ret
jnp
cld
dec
mov
mov
cmp
scas
bound
dec
push
sti
adc
loop
ljmp
pop
ljmp
std
push
add
cmc
add
test
ss
sahf
jns
mov
iret
subl
xchg
and
stc
xchg
mov
int3
out
fistps
sbb
ficompl
push
lahf
sub
pmaxsw
imul
push
jl
loopne
xchg
popa
sub
add
aad
out
daa
and
insb
xchg
mov
dec
xor
jno
sbb
xor
imul
nop
test
test
stos
ljmp
xchg
xor
fildl
pop
cmp
or
jle
sbb
or
inc
jns
mov
mov
sub
insb
or
ret
adc
cmp
fs
ret
xor
sbbl
popa
mov
push
dec
inc
popa
imul
pop
ja
sbb
push
sbb
or
mov
cli
nop
sbb
cmpb
cmp
pop
pop
leave
xlat
std
addr16
jp
frstor
mov
or
pop
stos
jns
cwtl
push
es
sbb
fstpt
sbbl
xor
out
push
fnsave
das
mov
rcll
js
nop
scas
adc
cli
fsubrl
cmpsb
jo
loopne
adc
mov
mov
in
mov
into
jns
jecxz
daa
lods
loopne
sub
add
lock
push
xchg
repz
mov
mov
gs
sbb
push
xor
fistpl
iret
out
and
cwtl
jno
sub
enter
add
sub
cmp
cmp
ljmp
dec
sbb
and
out
sarb
add
xchg
adc
in
callw
ret
jo
or
fidivs
sub
xchg
movsl
dec
ja
cwtl
fldcw
xchg
aaa
xchg
push
test
xchg
dec
pop
dec
movsl
cmp
mov
xchg
sub
xchg
jne
rolb
in
pop
pop
sbb
or
inc
pop
into
mov
cmp
out
and
cmp
jne
jnp
cld
jg
outsb
in
jbe
ja
jl
enter
les
pop
cmp
sub
addr16
mov
mov
xor
fstpt
mov
or
rclb
cmpsl
adc
test
pop
loope
mov
push
and
scas
js
mov
mov
iret
data16
jp
outsb
cwtl
mov
adc
stc
ljmp
into
push
mov
data16
push
cld
mov
insb
jl
insl
ret
movl
sub
mov
sbb
mov
adc
out
fcompl
xchg
add
fisttpl
mov
pop
mov
out
in
add
jmp
cmp
inc
cmpsl
cmp
sub
inc
rcrb
xor
dec
call
inc
fwait
out
pop
in
fmulp
lods
repnz
out
cwtl
into
dec
and
rcrl
lock
sbb
pop
and
dec
fidivrs
lods
ljmp
and
inc
adc
movsl
inc
adc
in
xor
shrb
sbb
pop
or
icebp
and
cmpsb
stc
mov
cltd
xchg
lret
pop
mov
sub
mov
mov
jecxz
dec
daa
lret
pushf
or
xor
push
xchg
loop
sub
notb
pop
div
pop
loop
xchg
fisubl
rcll
jne
lahf
push
mov
sbb
or
js
pop
shrb
dec
std
mov
jbe
push
xchg
mov
jmp
repnz
sbb
push
mov
aad
adc
sti
lea
fisubrl
repnz
add
je
xor
and
inc
clc
mov
cltd
sbb
in
inc
andl
xchg
lods
shll
ss
pusha
inc
inc
stos
mov
popa
jne
xor
imul
movsb
xchg
xchg
ss
mov
mov
and
push
pushf
ljmp
shl
call
out
out
js
mov
movsb
xchg
xchg
sbbl
xor
add
push
call
push
cmc
ds
aaa
push
int
jl
mov
daa
imul
mov
scas
sub
pop
int3
mov
imul
jle
dec
or
sub
mov
add
ja
lret
xchg
xchg
push
js
mov
xchg
adc
movsb
aas
xor
cmp
push
in
enter
xchg
dec
xchg
pop
xor
or
or
ficomps
orl
and
addr16
sbb
jle
iret
jb
push
mov
lods
pop
pop
mov
push
xor
ret
jg
fisttpl
pop
mov
mov
lcall
popf
sub
in
jge
inc
pusha
inc
daa
add
imul
push
loope
xchg
xchg
test
scas
ret
lods
xchg
mov
mov
jge
pop
testl
mov
mov
scas
aas
mov
jbe
sbb
repnz
ljmp
xor
and
push
adc
out
stos
mov
pop
or
mov
xor
in
cmp
repz
pop
adc
inc
push
ffree
mov
test
sbb
bound
cmpl
xchg
outsl
dec
inc
cmp
mov
dec
inc
adc
js
sbb
je
or
xchg
fists
dec
pop
cmpsb
pop
push
imul
xchg
out
subb
scas
les
xor
fcom
outsl
push
ficoml
inc
mov
mov
gs
pop
xchg
nop
push
test
jae
sub
mov
es
jns
xchg
jp
andb
fildl
xchg
pushf
mov
loope
or
out
pop
fsubs
jmp
pop
push
out
adc
outsb
pushf
loop
sti
mov
inc
jns
rcrb
scas
jnp
mov
adc
addr16
data16
and
enter
jge
fwait
lods
mov
mov
or
mov
fbld
sub
clc
jns
mov
into
dec
test
push
loopne
ret
rcrb
test
sbb
and
aam
or
cmp
xor
fldenv
repz
andb
jno
ret
mov
push
fildll
sbb
orb
fidivl
mov
mov
jle
lret
adc
lahf
loopne
push
pop
sbb
jp
je
test
push
add
stc
sahf
or
nop
sarb
aas
or
gs
shll
ret
lahf
xchg
in
mov
int3
shlb
in
pop
mov
enter
nop
xchg
sbb
inc
pop
aam
xor
mov
mov
xchg
jmp
lcall
xlat
imul
adc
xchg
mov
lea
dec
mov
loope
mov
sub
fisttpll
movsb
pop
loopne
pop
cmp
test
jge
and
mov
sbb
inc
addr16
push
fwait
rorl
mov
push
loope
daa
cltd
loope
jp
jp
mov
ror
push
jnp
or
jb
data16
lret
nop
dec
ja
loopne
lcall
jb
adc
sbb
jno
sahf
fs
xlat
ret
or
ja
or
adc
or
repnz
add
bound
inc
add
push
fdivrs
mov
arpl
jg
mov
out
mov
popa
mov
and
insb
mov
xchg
fsubrp
idiv
cltd
enter
loopne
mov
xchg
adc
jb
pop
push
stc
fsts
mov
gs
mov
pop
lds
mov
push
adc
mov
hlt
dec
inc
and
adc
cmp
fbstp
and
movsb
loop
stc
call
cmp
es
and
fs
jg
and
add
jne
and
sub
pop
popf
in
add
mov
pop
pusha
dec
jp
lea
arpl
mov
insb
scas
inc
sahf
js
lods
repnz
push
les
not
fcomp
pushf
pop
push
push
sbb
movsb
out
addb
mov
in
aad
es
ret
inc
shll
inc
aam
and
mov
jl
shrb
adc
xchg
add
mov
adc
add
roll
lret
xchg
in
in
pop
mov
stos
cmp
xchg
and
js
jmp
ficomps
dec
mov
mov
sahf
push
adc
es
lcall
imul
mov
jb
xor
jmp
int
repnz
or
mov
cltd
cmpsl
push
lret
xor
sbb
lds
insl
jecxz
fcos
js
cmp
or
jno
pop
aad
pop
sub
sahf
clc
jns
push
jle
out
aas
push
das
mov
test
cltd
mov
ret
cld
xor
int3
add
mov
or
xor
xor
aam
jl
out
jne
push
aam
movsl
sub
mov
call
ret
jecxz
test
aaa
enter
push
xchg
orl
aam
cmpsb
or
popa
jecxz
add
fldt
adc
dec
fsts
nop
daa
mov
outsb
dec
adc
adc
cmp
cmp
js
inc
into
cmp
add
addr16
jnp
imul
rcl
hlt
jns
pop
arpl
in
test
or
cmc
daa
mov
orb
cmpsb
test
cwtl
fidivs
cmp
lods
imul
jb
adc
pop
jno
jg
fcomps
mov
cmpl
and
push
pop
jg
aas
sbb
pop
mov
sbb
push
mov
inc
daa
sbb
and
and
paddusb
sbb
xchg
aas
mov
loopne
cmp
out
test
pop
push
cltd
or
xchg
pushf
dec
lock
lea
repz
jno
mov
insb
out
dec
inc
sahf
pop
test
and
call
xor
sbb
adc
int
test
add
outsb
push
fldt
mov
pop
push
sub
push
clc
mov
out
subl
fincstp
movl
jmp
or
jbe
out
out
mov
jae
test
xor
lods
loop
sarb
shll
adc
ds
insl
add
xchg
jmp
je
sahf
mov
faddl
mov
jnp
imulb
mov
cmp
or
xchg
idivl
int
dec
mov
mov
fisubl
icebp
loop
and
cmp
lods
sub
mov
adc
imul
in
sbb
cmp
dec
je
adc
xor
cwtl
jle
dec
inc
xchg
adc
js
jmp
dec
mov
push
sub
inc
xchg
cmpsb
je
fnstcw
mov
cmpsb
scas
jp
sub
mov
in
mov
dec
mov
stos
push
pop
das
fwait
lods
cmp
dec
adc
das
push
mov
or
mov
clc
inc
idivl
mov
stos
test
mov
jge
push
std
xchg
test
inc
loop
cmp
es
adc
push
cmp
xlat
movsb
inc
xchg
add
pop
in
daa
xchg
dec
inc
in
roll
fs
pop
adc
add
or
mov
adc
xchg
sbb
and
mov
lea
cwtl
xor
add
test
push
mov
xchg
sub
dec
loopne
dec
jo
cli
hlt
or
fmuls
jno
xor
mov
cmp
imul
sub
test
and
ljmp
test
xchg
jnp
xor
ficoml
leave
inc
test
test
mov
mov
mov
jg
pop
fs
icebp
je
lea
call
arpl
adc
repz
push
add
rcl
and
push
popa
jg
jecxz
mov
adc
addr16
cmp
enter
lret
insl
jp
jns
cwtl
push
dec
mov
sbb
jp
out
mov
movsl
stc
mov
push
or
mov
pop
sarl
or
push
adcb
xor
imul
inc
lods
inc
jge
dec
ljmp
popf
fcomp
sub
mov
mov
pushf
cmp
lcall
adc
pop
lahf
and
ss
imul
loope
or
cmc
xchg
jne
add
fidivrl
xchg
xlat
mov
xchg
mov
addb
loopne
fldl2t
test
adc
jb
adc
cmp
iret
ret
dec
cmp
mov
xchg
dec
fldl
xor
cmp
xchg
adc
stos
xchg
je
push
in
push
in
mov
shlb
fimuls
outsl
cmpsl
jb
insl
jo
pushf
es
mov
push
add
jns
std
xor
xor
jbe
jb
xor
sub
jns
mov
dec
lock
leave
pushf
data16
sbb
ljmp
xor
das
adc
dec
or
and
mov
mov
sub
rol
pop
icebp
jg
ficoms
sbb
push
outsl
xlat
xchg
adc
cbtw
pop
pop
sbb
mov
mov
mov
adc
xchg
push
mov
vcvtps2pd
jp
adc
bound
xchg
loopne
int3
mov
mov
scas
mov
iret
scas
push
xchg
mov
pop
lret
mov
adc
add
mov
std
and
shrb
dec
jp
clc
ss
mov
ss
sub
jp
mov
mov
mov
insl
ret
mov
scas
lahf
mov
pop
push
dec
push
imul
xchg
aas
xchg
jns
mov
mov
es
fdivr
or
cmp
xchg
daa
fidivs
out
in
ret
lret
gs
fidivrs
jo
dec
mov
add
int
dec
mov
fcmovbe
gs
popf
daa
push
mov
aad
pusha
xor
ret
adc
jp
or
mov
xor
or
repz
xor
xchg
jno
mov
cli
mov
into
scas
add
js
mov
sarl
sub
cmpsb
gs
mov
and
jae
icebp
pop
add
or
subb
in
jge
fbstp
icebp
lods
sbb
sahf
ret
insb
fisubl
test
jl
call
stos
das
rcl
loope
mov
fimuls
xchg
and
ror
mov
inc
out
js
xchg
mov
aaa
nop
add
jg
push
inc
out
les
imulb
sbb
pop
sbb
jnp
es
rcll
mov
mov
inc
cs
lcall
xchg
adc
dec
cmpb
in
sbb
jg
pop
pusha
ret
xor
adc
icebp
sub
movsl
imul
int
pop
mov
test
cld
dec
sbb
das
mov
scas
mov
inc
mov
mov
mov
add
lods
mov
inc
pop
idivb
insl
sub
mov
cltd
jo
test
xor
aam
fnstsw
add
xchg
cmpsb
xchg
dec
mov
adc
mov
pop
xchg
dec
sub
adc
inc
into
and
lods
push
test
lds
in
xchg
out
stos
xchg
fdiv
xor
or
and
lods
mov
outsl
fildl
xor
stos
jbe
dec
sbb
xor
mov
xor
mov
sbb
outsl
cwtl
sbb
or
shlb
aad
stos
or
into
adc
sti
adc
mov
xor
stos
dec
mov
xor
sbb
movsb
jnp
xchg
sub
sahf
mov
mov
ffreep
push
or
stos
mov
adc
and
ja
mov
dec
enter
mov
xchg
xor
pop
iret
lret
and
adc
mov
popf
or
pop
push
pop
test
cwtl
or
call
lea
test
pop
enterw
xor
add
pop
cmp
xor
sbb
mov
leave
xor
cmpsl
push
sub
out
mov
enter
jmp
cmp
shrl
loopne
into
clc
cmpsb
mov
js
cmpsl
sbb
xor
ss
adc
push
jle
js
mov
jbe
push
xchg
inc
sbb
les
fisttpl
jge
mov
cli
ja
sahf
pop
xchg
jg
out
leave
xchg
xchg
mov
pop
cmp
push
xchg
pop
mov
inc
jbe
cmp
lahf
mov
and
jge
jecxz
pop
imul
shlb
xchg
pop
xor
or
xor
mov
sub
jp
sbb
fiaddl
xor
inc
enter
xchg
dec
jne
in
mov
and
mov
scas
orb
loop,pn
lods
lret
fists
xchg
mov
rclb
rdpmc
aam
pop
in
subb
push
inc
adcl
xchg
pusha
mov
inc
push
std
mov
aaa
sub
mov
xor
sub
ret
and
in
sbb
pop
hlt
nop
insl
jnp
dec
call
mov
in
mov
jmp
ret
mov
xchg
mov
push
ret
jo
jg
xchg
push
fists
and
jle
mov
and
jmp
xor
jnp
cwtl
mov
hlt
xor
mov
xor
dec
push
push
outsb
jge
jmp
das
lahf
xchg
aam
clc
hlt
loop
jne
lods
mov
sarl
dec
inc
mov
xchg
out
sub
xchg
stc
mov
mov
insl
mov
rcl
mov
push
shll
push
push
jo
jmp
or
sbb
aam
cli
xor
std
aaa
fwait
lahf
mov
mov
sub
popf
ja
mov
sub
xchg
pop
jp
out
aas
cltd
xchg
inc
dec
add
lds
in
mov
push
jecxz
pop
hlt
es
and
scas
mov
xor
mov
sbb
stos
jl
pop
pop
jb
pop
loopne
shll
mov
cli
or
fmuls
gs
sub
cmpsb
pop
pushf
in
push
je
inc
or
push
adc
mov
testl
fimull
xor
scas
push
sub
xchg
cld
ss
call
popa
mov
ficompl
lds
popf
stos
add
add
pop
test
push
or
es
or
sahf
ficomps
xchg
xor
lock
push
mov
jbe
pop
xor
mov
loop
sbb
fistpll
pop
and
mov
inc
pop
push
enter
shll
lret
mov
mov
repnz
jmp
mov
aam
push
imul
xor
inc
inc
imul
lds
std
mov
jb
mov
push
mov
ror
push
xlat
push
stos
mov
ljmp
lods
sbb
jne
loope
mov
add
clc
icebp
mov
in
mov
aaa
lods
sbb
lret
adc
ds
out
cmp
mov
out
fcomp
pop
out
mov
xchg
enter
cmc
outsl
or
shr
xor
into
inc
lea
xchg
xchg
xor
xchg
mov
popa
fcomps
cltd
ja
jae
xchg
scas
subb
cwtl
jne
aad
jbe
and
jae
arpl
adc
mov
ds
repnz
fidivs
lcall
lret
lcall
movsl
adc
int
les
ljmp
pop
cmpsl
aam
mov
lret
sbbb
jnp
loopne
jns
jg
hlt
or
arpl
cmp
popf
ja
mov
fmulp
push
sarl
push
xor
cli
imul
repnz
push
int3
fs
and
sbb
or
xor
mov
cmp
jne
insb
push
fld
int
js
inc
outsl
test
sbb
sub
fimull
cmp
xor
xchg
and
push
and
cmpsb
cli
inc
mov
mov
ja
jns
and
bound
icebp
sub
xor
cmp
or
int
dec
cmp
mov
xchg
rcll
bound
or
pop
mov
mov
xchg
fidivs
adc
cmpb
jne
cltd
mov
jl
xor
addb
mov
gs
fnsave
xor
xchg
inc
xor
xchg
icebp
inc
mov
push
or
pop
test
test
sbb
or
pop
or
iret
or
jnp
lds
mov
adc
cwtl
and
pop
repnz
inc
mov
lods
xchg
sahf
pop
aam
sahf
data16
ret
dec
je
push
add
mov
push
mov
cmp
cwtl
pop
setl
les
int3
push
rcr
xlat
xor
mov
dec
fcoms
mov
cs
pop
stos
ja
pop
ret
sbb
ss
mov
into
into
pop
jg
stos
nop
lcall
sbb
and
inc
inc
stos
xchg
cmp
lcall
popf
int3
sbb
loope
lods
enter
adc
lret
cmp
push
mov
adc
mov
inc
fnstenv
pop
outsb
imul
negb
xchg
insl
mov
bt
inc
jne
sub
test
movsb
je
cld
inc
shrb
nop
sub
cmc
xor
mov
adc
lret
lods
fadd
dec
test
push
cmpsb
cmpb
scas
xor
std
inc
scas
add
or
fiadds
dec
jno
insl
lahf
ret
mov
jne
pop
jo
lret
pop
add
fs
imul
jp
aad
movsb
mov
je
cmc
xchg
mov
ret
loopne
cli
sbb
test
pop
sbb
test
mov
add
add
dec
xor
pop
cmpsb
and
les
xlat
fcomps
cli
movsb
out
or
mov
adc
addl
rol
add
mov
data16
icebp
jnp
dec
mov
insb
push
sub
push
jo
mov
fldcw
icebp
inc
push
push
dec
sub
fisubrl
add
or
dec
push
inc
lods
mov
add
fmuls
movsl
leave
dec
mov
int3
lods
stc
int3
fimuls
dec
jge
sub
aam
push
mov
pop
push
stos
jno
arpl
js
and
shrl
jb
mov
cmp
ret
dec
rcr
xchg
and
popf
pop
or
dec
arpl
push
lahf
pop
bound
in
xlat
or
dec
pop
icebp
movl
pop
insb
pushf
ja
xchg
jnp
test
sbb
xorl
mov
xor
dec
movl
adc
mov
mov
test
cmp
addr16
sub
lret
cmp
and
adc
pop
xor
dec
stos
or
dec
sahf
push
lock
cmp
dec
mov
or
outsl
icebp
int
fsubrl
xchg
adc
xor
fdivs
sub
cmp
ja
out
push
push
jecxz
push
pop
scas
loope
adc
push
outsl
mov
loop
pop
test
push
add
xor
mov
ljmp
lods
ret
pusha
jns
je
inc
enter
push
adc
jle
jecxz
mov
add
mov
push
push
fdivs
push
stos
addr16
cmp
cmpsb
mov
mov
or
arpl
call
sbb
fdivs
sbb
and
mov
js
mov
add
in
jmp
xor
cmp
mov
les
out
push
adc
imul
hlt
sbb
dec
push
mov
lods
xorb
jne
outsb
cmc
loop
aam
xor
xchg
fsubs
dec
cltd
cld
or
pop
pop
inc
jnp
push
test
sub
add
ss
lret
stc
add
xor
gs
pavgw
dec
ret
mov
dec
shr
popa
jmp
sbb
aad
fiadds
cmc
inc
addr16
loop
pop
dec
xchg
add
inc
ss
jne
mov
and
data16
push
fnstsw
mov
rcll
insl
pop
and
cmpsb
pop
cld
in
fstp
je
pand
sti
sub
jbe
fstpt
jp
ret
outsb
dec
fs
xlat
xchg
dec
cmp
mov
inc
pop
add
push
lock
rcl
dec
loopne
fs
hlt
pushf
clc
xchg
xchg
push
mov
sbb
das
out
scas
in
imul
enter
xor
xchg
xchg
call
stos
dec
jnp
aaa
loopne
push
inc
out
pop
lcall
stos
jl
inc
test
int3
pushf
lret
push
push
or
outsb
sub
inc
ret
lock
cmc
mov
jae
ja
and
and
pop
enter
cmp
data16
xchg
arpl
jbe
in
xlat
fldcw
lea
js
jne
xor
sbb
push
xlat
js
inc
add
outsb
pop
call
outsl
xrelease
mov
scas
mov
dec
pop
ret
sub
inc
mov
je
dec
cmpsb
sub
pop
andb
xor
cmp
out
cli
push
test
int3
rcrl
and
sbb
xchg
arpl
pop
in
xor
aad
xchg
mov
leave
inc
mov
fildl
mov
popf
cmp
adc
pop
jae
xchg
push
shrb
sub
mov
and
std
mov
pop
add
or
lods
xchg
cmpsl
shlb
or
mov
out
add
dec
decw
test
lea
and
add
or
mov
xor
xchg
mov
pop
data16
fisubs
imul
xor
cmp
mov
shrb
jne
jecxz
mov
xor
cltd
popf
cmp
sahf
sti
dec
lea
jnp
cmpb
xor
inc
bnd
xchg
inc
popf
test
shrb
pop
loopne
or
scas
pushf
popf
push
xchg
jns
pop
lods
xchg
push
cld
test
sub
iret
subl
dec
addb
adc
adc
scas
mov
iret
dec
pop
das
scas
jns
clc
sahf
xor
or
lcall
mov
inc
xlat
inc
ret
jns
nop
push
xlat
and
hlt
adc
int
pop
cmp
cmp
add
cmp
mov
loope
or
mov
sarl
xchg
aas
cmpsb
sub
xchg
scas
sub
fwait
jns
stos
inc
mov
cli
sub
imull
rcll
cmp
pop
in
adc
mulps
movsb
adc
jl
xlat
in
int
popf
cltd
mov
sbb
and
ds
rcll
xchg
cli
mov
mov
mov
mov
push
mov
adc
or
fidivs
in
mov
shr
inc
test
xchg
inc
push
lahf
jmp
xor
sbb
xchg
push
hlt
shlb
jbe
jmp
push
je
pop
bound
in
test
mov
rcll
sub
xchg
push
jge
and
dec
pop
mov
sbb
mov
scas
jnp
divl
popl
push
dec
stos
aas
int
add
fisubrl
lds
sahf
adc
xorl
push
jmp
and
fisubrs
push
lret
push
mov
jo
adc
addr16
hlt
aad
out
pushf
xor
mov
outsl
cwtl
jo
out
out
push
xchg
and
rcrl
xchg
jne
cmp
jge
lret
fisubl
pop
sbb
adc
inc
imul
and
dec
xor
cli
lds
jecxz
rol
stos
mov
pop
mov
es
mov
push
lret
adc
dec
ss
push
push
dec
push
inc
dec
inc
pop
repnz
mov
adc
adc
insl
and
pusha
mov
pop
lahf
xor
push
lock
fistl
mov
xor
and
lock
repz
imul
xchg
pop
push
aam
stos
jbe
sbb
je
adc
repnz
xor
lea
aas
jnp
cmp
iret
pop
popa
or
xor
cmp
jno
pop
repz
fbld
scas
mov
xchg
insb
aam
adc
lods
mov
xor
ljmp
test
adc
cmp
clc
xlat
fcomi
cld
jg
inc
mov
fildl
sbb
dec
in
scas
xor
imul
cmp
xchg
xchg
jbe
jo
and
outsb
fdivrp
cs
mov
lret
xchg
add
mov
lods
imul
in
popf
cmp
test
mov
pop
adc
jg
mov
enter
mov
sti
xor
inc
shufps
lcall
mov
sbb
out
popf
jb
jb
out
sahf
cld
xor
les
mov
pop
test
mov
push
leave
sbb
insl
cmc
aam
outsb
jp
addr16
xor
add
es
add
push
adc
mov
fsubs
jge
arpl
mov
jne
into
pop
fistl
add
and
cmc
stos
movsl
std
sbb
mov
inc
rcrb
xor
scas
push
mov
mov
mov
dec
dec
xor
inc
jp
push
fcoml
roll
adc
hlt
dec
sub
xorb
cmpsl
lods
xchg
mov
aas
call
xor
int3
dec
add
add
dec
pusha
orl
rorb
sbb
pop
cmp
adc
out
loopne
rorb
pop
popa
push
lds
pop
sbb
sbb
loopne
fdivrs
xor
push
pop
int3
lock
pop
pop
sub
dec
rcrb
ds
cmp
or
shlb
push
inc
mov
xchg
out
push
sub
pop
add
adc
sub
add
and
lods
aad
sbb
push
call
xor
js
sbb
inc
jne
xorl
xlat
daa
cmpsb
mov
jns
inc
ja
fimull
fisubl
sbb
add
or
cwtl
das
in
or
insb
addl
mov
xchg
mov
pushf
aas
xchg
and
scas
int
les
mov
mov
divb
ds
negb
xor
jg
mov
push
adc
movsl
gs
push
add
xchg
imul
mov
and
pop
jbe
ss
push
sub
lret
inc
jp
lds
cwtl
push
aaa
xchg
lret
pop
pop
daa
cwtl
mov
cs
aam
add
loope
mov
test
scas
in
ds
sbb
inc
imulb
sbb
scas
mov
jecxz
pop
inc
cmpsl
scas
dec
add
pop
sti
sub
arpl
fisttpl
cmc
and
out
inc
subb
cmp
repnz
fistl
pop
cmp
adc
lcall
movsl
add
xchg
pop
jno
jnp
inc
mov
imull
and
cmc
mulb
mov
cmc
jno
cmp
xchg
mov
dec
pusha
inc
mov
out
jge
aad
jno
lods
mov
iret
ret
scas
and
loopne
jae
sub
jge
insb
test
push
lds
mov
lods
aaa
in
mov
mov
int
cmc
push
out
cld
xor
test
xor
test
pop
out
xchg
xchg
movsb
and
mov
xchg
mov
xor
es
rorb
sbb
pop
arpl
pop
push
inc
pop
pushl
scas
push
sub
ret
or
mov
mov
jp
scas
mov
pop
jae
shll
lods
les
movzwl
cvtps2pi
ret
push
inc
test
fdivr
imul
ja
and
adc
aas
push
pop
cmp
cmp
cmp
add
mull
jle
xchg
pop
cli
leave
pop
mov
pop
and
add
cmp
and
lea
sbb
jbe
pop
test
and
inc
mov
jnp
pop
xor
mov
adc
lret
jmp
iret
mov
push
dec
pop
inc
roll
aas
jb
shlb
cmp
sbb
push
lods
scas
sar
pop
add
in
stc
in
gs
xchg
mov
dec
aas
mov
shrb
pop
shll
movsl
adc
jae
fldt
imul
mov
jmp
sub
lahf
jne
push
lock
psubw
and
and
pop
movsl
push
shrl
lods
dec
lods
shlb
fwait
cld
les
inc
inc
or
inc
sbb
pop
push
cmpsl
lahf
repz
cmpsb
or
in
jl
fstpl
jmp
xchg
ret
and
jmp
cmpsl
inc
or
loopne
push
fstl
in
pop
cwtl
add
mov
ja
ss
imul
inc
cmp
and
or
jecxz
int
mov
mov
mov
insl
mov
negl
ret
sbb
fmuls
subps
pop
push
xor
xchg
repnz
mov
test
daa
jle
fwait
cmc
in
jae
push
fidivl
xlat
mov
inc
addl
test
push
mov
clc
and
mov
imull
int3
hlt
jle
dec
pushf
push
daa
jno
sub
fs
mov
cld
fsubr
addr16
fwait
bnd
xchg
or
std
sbb
push
shrl
adc
add
sbb
ja
inc
xchg
lret
mov
mov
inc
inc
jno
fidivs
xchg
inc
stos
cmc
dec
or
les
sub
mov
mov
pop
sbb
rcrl
pop
sub
pop
idivb
push
jo
sarb
clc
pop
xor
repnz
mov
mull
adc
adcb
lcall
test
pop
dec
mov
out
xor
mov
sbbb
out
xchg
jp
pop
xchg
jns
stos
push
jb
sahf
adc
pop
out
mull
mov
mov
sub
fs
das
dec
adc
mov
jb
sub
pop
push
mov
movsl
cli
cmp
adc
nop
cmp
sub
lods
inc
int
rol
ljmp
mov
fstpl
lods
fsubrs
stos
dec
jmp
in
scas
xchg
frndint
int
push
test
and
pop
cli
ss
fisubs
scas
es
inc
gs
jns
mov
inc
jae
fsts
in
mov
sbb
push
int3
filds
pop
jne
ficoml
mov
xchg
stos
movsl
cmp
pushf
jnp
adc
jecxz
dec
push
ret
cmp
dec
shl
xchg
sub
pop
jl
sarl
insb
dec
cmp
mov
int3
inc
inc
popf
and
jne
inc
pop
cmpsb
xchg
xchg
lret
negl
cld
sbb
sbb
stc
imul
add
ficoml
sub
sub
jbe
fdivs
cmp
pop
nop
inc
mov
ja
adc
sbb
imul
jb
les
scas
pop
xchg
or
adc
push
lea
xchg
fwait
outsb
mov
sbb
scas
ljmp
pop
cmp
push
andb
imull
pusha
sub
fs
dec
aaa
dec
xchg
repz
cmpsb
xor
inc
divb
shr
ljmp
xor
mov
xlat
mov
cmc
les
or
xor
pop
mov
sub
test
movsl
mov
lods
inc
add
jg
insl
leave
and
ret
test
mov
mov
jp
xchg
in
dec
scas
sbb
cmc
push
dec
jg
iret
inc
inc
cld
scas
leave
dec
stos
test
adc
xor
adc
shl
test
jb
pop
aam
add
leave
repnz
cmp
imul
data16
xchg
push
mov
jb
sbb
inc
push
pushf
cmpsb
cmp
jnp
jnp
shrl
das
out
aas
mov
mov
icebp
cmc
loopne
pop
sbb
dec
sbb
and
sub
movsl
fstpl
pop
mov
xchg
fisubrs
and
push
pop
or
xchg
pop
scas
sbb
popa
mov
push
or
cmp
add
mov
scas
jo
in
aad
xchg
pop
cltd
lret
popa
in
icebp
mov
or
addr16
and
jns
inc
fsub
arpl
sti
aas
mov
enter
or
inc
imul
add
ljmp
fcompp
stc
cli
mov
sbb
add
jae
sbb
cwtl
or
or
add
pop
xchg
xchg
aaa
sbb
xlat
movntq
cmp
repz
adc
dec
inc
inc
pop
sar
sub
push
pop
pop
rorl
jno
pop
fs
pop
and
ds
xlat
addl
xchg
mov
dec
fwait
jns
xchg
out
and
inc
imul
and
fstl
pop
rcrl
clc
xchg
push
dec
dec
fs
fldcw
pop
and
sub
xor
int
fs
jg
imul
les
cmp
push
xchg
movsl
xor
ljmp
xor
test
in
stos
ja
int3
jg
shrb
lock
push
ss
pop
hlt
shr
and
and
sub
into
mov
fs
jp
xchg
fcom
push
mov
push
outsb
xchg
add
xchg
jle
xchg
nop
add
push
xor
fldl
mov
jl
mov
pop
jno
mov
inc
orb
sub
ja
mov
in
jne
cmp
movsl
scas
jns
js
jecxz
es
aam
jle
jns
loope
push
push
pop
mov
pop
cmc
test
mov
adc
cli
cmp
mov
fisubl
or
data16
mov
add
data16
jns
das
sub
outsb
pop
pop
rorl
adc
outsb
mov
xor
mov
aad
xor
xchg
inc
adc
pop
push
ret
cmpsl
in
dec
xor
mov
test
xchg
push
test
outsl
xor
imul
cmp
dec
push
subb
fdivrp
push
jp
fs
xchg
ja
data16
xchg
inc
xchg
xlat
popa
ja
fsubrl
adc
pop
jge
inc
loop
ret
push
js
jl
cmpsb
cwtl
sahf
cld
xchg
fs
outsb
rclb
cmp
add
pop
out
in
scas
mov
cmp
movsb
push
cmc
pop
xor
adc
fs
imul
fistl
push
nop
inc
inc
lcall
loopne
js
ss
mov
or
bound
inc
imul
and
sbb
xor
push
pop
dec
repz
xchg
push
in
jne
int3
fcoml
sbb
decl
mov
mov
mov
pop
and
jecxz
sti
jae
dec
movsl
shr
pop
pop
cwtl
into
mov
inc
pop
filds
push
ret
aas
xor
xchg
pop
sub
push
mov
aas
fcompl
in
imul
scas
ljmp
and
leave
fiadds
rorb
jae
inc
sub
dec
mov
loope
jns
mov
in
jmpw
jnp
fcomp
roll
ret
cmp
jae
jo
sbb
fwait
adc
mov
inc
dec
and
mov
ret
push
negl
outsl
push
arpl
jg
push
cmc
movsl
sti
push
outsb
xchg
sub
sub
push
iret
jbe
or
sbb
add
mov
fwait
mov
ret
or
mov
out
lret
outsl
lods
xor
xchg
adc
ret
mov
das
out
mov
pop
push
in
in
les
clc
dec
pop
adc
push
inc
cmc
adc
dec
sbb
data16
pop
sub
pop
push
xchg
enter
ja
pop
xchg
aad
cld
stos
arpl
int3
in
loope
mov
sub
lret
ljmp
xchg
cmpsl
cmp
sub
cmp
pop
or
pop
fsts
mov
inc
imul
adc
push
pop
lahf
sub
cmp
or
ret
es
sbb
es
push
xor
ficoml
ret
movsb
ret
sti
repnz
add
mov
jno
test
fsubrs
xchg
fwait
ljmp
rcr
mov
in
in
das
aam
xchg
pop
hlt
pop
sub
sbb
add
cmpsl
mov
jl
xchg
xor
fiadds
fistpl
into
mov
aaa
cmp
aaa
jg
jnp
shrl
test
mov
pop
jmp
mov
fstp
jg
leave
lret
lret
push
mov
push
inc
lret
xchg
pop
xchg
shll
dec
sbb
orl
jmp
out
lods
push
mov
xlat
inc
pop
addl
lret
sbb
or
inc
xor
lret
pop
jp
xor
sub
scas
dec
aas
lret
mov
mov
stos
mov
push
cmc
or
pop
fmull
xor
addr16
adc
ss
pushf
pop
loope
adc
adc
xchg
aas
push
and
push
into
cmp
fdivrs
mov
cmp
inc
mov
push
mov
shrb
in
jne
dec
bound
stc
inc
into
adc
mov
icebp
pop
sarl
push
adc
jnp
and
add
xchg
xchg
cmpsl
test
iret
xlat
cltd
ret
jo
pop
push
cmp
ljmp
sub
stos
ljmp
mov
mov
lahf
fsubs
xorb
jp
add
and
and
fst
sub
cmp
jb
aaa
mov
mov
inc
cs
mov
paddsw
loopne
test
dec
inc
mov
or
pop
dec
inc
xorl
insb
jle
repnz
sub
movl
cld
sahf
pop
inc
sub
cmpsl
add
dec
xchg
cli
dec
push
and
daa
push
stos
xchg
xor
push
xor
ja
and
adc
push
test
fcomi
loope
psllw
cmp
push
and
ja
aas
punpcklbw
jmp
loopne
sarb
gs
xlat
mov
andb
sbb
mov
sub
dec
pop
in
sbbb
and
add
insl
push
xchg
jmp
test
repz
aas
push
dec
and
mov
loopne
imul
data16
and
mov
fcomp
leave
test
fcomps
inc
scas
jp
inc
sbb
cmp
repz
leave
xor
pushf
mov
cltd
fildl
dec
pop
fcompl
fwait
test
mov
xchg
cmp
sbb
mov
shll
pusha
xor
mov
test
xor
mov
dec
and
inc
mov
xchg
mov
sbb
nop
adc
iret
mov
inc
popf
xchg
movsl
jecxz
imul
fldt
nop
mov
mov
xchg
fcoms
enter
xchg
cld
cli
push
xchg
sbb
addb
popf
notb
pop
lret
das
fs
sti
ss
push
dec
cmc
xor
sbb
fwait
lret
xchg
inc
std
and
cltd
and
imul
sub
test
push
loope
xchg
xor
cmc
sbb
daa
push
daa
mov
push
jne
shl
lret
cmp
or
pop
mov
lcall
add
ja
lret
test
jo
fdivl
sub
out
mov
adc
mov
adc
sbb
aad
pop
call
out
mov
rcll
mov
andl
jecxz
xchg
xor
out
out
mov
pop
ret
ja
jle
or
int3
out
scas
push
in
mov
pushf
hlt
sti
test
jp
out
inc
nop
addr16
push
sahf
mov
dec
ljmp
jecxz
shr
mov
repz
dec
and
popa
pop
pop
xchg
rcl
clc
rcr
push
push
or
jmp
movsb
push
mov
ss
pusha
pop
xor
pop
in
pop
movntq
out
cmp
rcrl
loopne
push
cwtl
lret
push
mov
push
out
arpl
inc
aas
aam
int3
mov
mov
testl
cmpsb
lret
icebp
dec
aad
pop
test
cltd
ret
stc
dec
inc
cwtl
pop
lret
or
nop
push
and
es
jno
cld
loopne
mov
aas
addr16
out
add
push
pop
int3
mov
fcoms
sub
push
in
xchg
bound
out
stc
loop
and
sarl
in
and
pop
mov
mov
adc
and
cli
dec
pop
nop
mov
pop
mov
shlb
rcrb
mov
lods
shlb
push
pop
pop
or
jp
mov
pop
sub
adc
loopne
out
call
cld
add
push
adcl
lcall
loopne
jbe
sbb
pop
mov
pop
and
cmpsb
push
scas
lret
sbb
int3
jle
movsb
aam
and
adc
iret
popf
mov
xchg
pop
jle
xlat
popf
sbb
mov
cli
cmp
push
jp
scas
es
xor
imul
add
in
fxch
imul
inc
xchg
pop
inc
adc
sbb
enter
inc
pop
sub
lret
and
stos
xor
cs
adc
pop
push
stos
mov
cmp
cmp
mov
ds
fimuls
add
add
adc
gs
xor
lret
sbb
cs
dec
ffreep
pop
xchg
movsl
in
xor
cwtl
fsubl
pop
not
and
xchg
mov
cmp
addr16
fidivrl
and
rcrl
loopne
shrl
divl
aad
xchg
push
pop
inc
dec
jmp
mov
jbe
mov
leave
mov
addl
std
xchg
jne
in
ret
or
out
jno
sub
test
shll
xchg
xor
jbe
das
mov
mov
push
pop
mov
jmp
movsb
test
cmc
mov
adc
mov
cmpsl
pop
jmp
lahf
push
not
or
js
push
adc
sub
ljmp
leave
xor
lds
std
dec
ret
shlb
loopne
lods
adc
ret
adc
jp
enter
loope
push
enter
sti
adc
popf
mov
mov
pop
sub
js
int
mov
out
sti
imull
mov
or
push
adc
or
out
jmp
push
pop
shl
into
xlat
push
sub
outsl
pop
pop
ret
or
mov
sub
jb
jmp
jecxz
lea
jb
mov
cmp
imul
pop
pop
jle
pop
div
or
add
mov
nop
scas
xchg
push
jbe
stos
add
idiv
lret
inc
lea
enter
testl
inc
movsl
imul
jge
mov
loop
pop
out
adc
push
ja
sbb
mov
sbb
jl
sub
xchg
and
testl
fcomps
outsl
push
xor
xor
cmp
xchg
adc
xchg
xor
setb
repnz
pop
inc
repnz
insl
sbb
out
into
shlb
ds
scas
shll
mov
fcomps
jmp
inc
pop
test
fldcw
dec
and
jl
jmp
add
cmp
dec
mov
xchg
popa
lea
mov
and
sar
fsts
mov
pushf
mov
xchg
cmpsb
fnstsw
pop
data16
sarb
fmuls
js
int
or
add
ret
or
ret
rcrb
sub
stos
adc
adc
imul
outsb
lret
cmc
imul
push
jae
dec
stos
lds
xor
dec
mov
jmp
mov
and
jge
adc
loope
flds
jae
fcom
iret
jp
insb
jno
pop
sahf
fnstcw
mov
push
lods
push
mov
or
fsubrl
subb
scas
rorl
fistps
push
clc
fwait
repz
mov
iret
xor
orl
jecxz
leave
push
lret
cmp
push
sbb
dec
data16
ja
xadd
push
cmp
dec
inc
adc
hlt
out
adc
xchg
fildll
ds
outsl
sub
dec
cmpsl
xor
lcall
out
mov
or
push
mov
imul
sub
frstor
ds
fidivrs
int
dec
in
dec
xlat
sbb
addb
add
lret
xchg
jmp
cmc
aaa
xlat
mov
jno
test
loopne
or
inc
jp
jg
in
arpl
sub
das
push
insl
dec
mov
outsb
in
das
add
aam
sub
shrl
cmc
inc
jne
jns
idiv
pop
jne
xchg
xchg
mov
or
inc
pushf
jmp
jo
pop
cmp
mov
call
sub
jecxz
rorb
movsb
add
sub
mov
cs
inc
and
iret
pop
push
dec
fldl
mov
out
adc
or
daa
push
jmp
xchg
or
loope
imul
xor
les
adc
dec
ficoms
or
add
loopne
mov
inc
adc
cmp
mov
daa
xor
mov
enter
mov
lods
ret
fiaddl
flds
popf
push
mov
xor
rcrb
jecxz
outsl
call
inc
mov
sti
jle
or
pop
adc
dec
ljmp
push
xchg
test
bound
inc
or
rcll
jnp
mov
add
cmp
pushf
ja
sbb
add
testl
and
jge
testb
mov
aad
sbb
xor
mov
aam
sar
sbb
aam
loope
je
scas
in
addr16
dec
push
inc
movsb
loope
test
or
add
and
movsl
pop
in
icebp
int3
add
push
xchg
cmp
popf
dec
adc
repz
in
sbb
cmp
push
or
mov
fdivl
repnz
or
inc
inc
outsl
test
outsl
scas
dec
fucom
dec
xor
xor
mov
in
adc
fisubs
or
filds
fimuls
cli
adc
xchg
lcall
repz
sti
mov
mov
loope
inc
jo
scas
scas
in
jns
mov
mov
xchg
dec
cld
je
xchg
pop
mov
gs
or
andl
cmc
pop
ljmp
mov
test
mov
sbb
sbb
sub
in
cmp
outsb
push
sbb
xor
inc
ret
cmp
ljmp
mov
call
or
jge
sub
hlt
cmc
mov
imul
xor
fdivr
jb
lds
jp
lret
loopne
fsts
sub
or
pop
dec
sbb
mov
mov
lret
lea
cmp
dec
test
inc
cmp
cmp
mov
mov
out
and
mov
xor
pop
lock
xchg
subb
icebp
loopne
test
add
add
add
push
orb
or
inc
xor
sub
call
adc
bound
insb
lods
inc
pusha
mov
push
or
fstps
lock
mov
mov
mov
shr
mov
or
dec
jmp
inc
lock
std
es
sub
mov
repz
ds
hlt
out
xor
lods
adc
inc
test
cmp
inc
lcall
insl
cmp
lret
aad
adc
mov
shll
std
enter
sub
dec
or
or
xor
call
mov
jl
inc
popf
mov
xor
shlb
mov
jl
test
dec
push
lods
pop
lea
lock
movsl
ret
dec
rclb
sar
rcr
mov
out
scas
imul
aam
ljmp
inc
cmp
cmp
mov
cld
sub
sub
cmp
lds
repnz
xor
fwait
sarl
js
repz
in
in
into
pop
push
xchg
outsl
jecxz
jne
sub
and
push
subb
repnz
rolb
adc
shlb
bound
and
scas
je
mov
pop
adc
dec
sub
or
cwtl
test
cmp
fidivrl
mov
or
icebp
aam
pop
ja
int3
cmp
jg
xlat
jg
jns
daa
adc
mov
mov
jno
adc
jge
clc
movsl
push
push
lret
inc
xor
and
into
shll
push
lcall
in
push
sarb
fbld
iret
in
js
or
jmp
inc
out
aad
pop
or
dec
jb
cmc
andl
inc
cmp
lods
shll
sti
lds
xor
inc
jne
mov
inc
jg
in
mov
jp
pop
cltd
push
je
fcomps
test
push
sbb
inc
imul
inc
hlt
add
xchg
aam
fmulp
jg
and
gs
cmp
dec
cmpb
lahf
test
xor
sti
adcb
loopne
scas
insb
dec
xor
mov
scas
and
fiadds
cmp
sbb
add
mov
mov
push
or
lret
scas
mov
stos
fsubr
mov
dec
or
arpl
idivb
dec
xor
aaa
xor
std
out
jp
dec
pop
das
mov
addb
ss
and
inc
rcrb
loope
inc
mov
xor
add
sbb
rorl
lods
and
xchg
sti
sbb
cmpsl
movsl
cli
mov
pop
stos
jmp
mov
jae
mov
out
out
jmp
sbb
sub
adc
ja
and
inc
lds
pop
xlat
sbb
test
out
inc
data16
mov
nop
subl
dec
test
and
xchg
jmp
jmp
pusha
subl
push
out
and
shll
scas
inc
jp
jmp
filds
xor
adc
and
icebp
push
pop
popf
jmp
add
jge
push
stos
mov
shrb
mov
push
lds
sbbb
add
mov
fnstenv
mov
lret
add
mov
jno
dec
mov
push
pushf
inc
ljmp
sti
ds
aaa
addr16
mov
sti
adc
and
test
out
sbb
mov
jmp
and
fidivrl
mov
or
xor
push
pop
cs
dec
dec
pop
fisttpl
jbe
loopne
bound
cmc
fdivrl
fdivs
pop
mov
mov
or
cmp
insl
mov
add
insb
push
and
push
and
pop
flds
outsb
xor
pop
jge
mov
cmp
sti
xor
sahf
push
adc
add
or
push
sub
faddl
dec
cmp
test
arpl
out
mov
lret
rcrb
in
dec
ret
mov
dec
push
outsb
sti
sub
insb
mov
mov
pop
rcrb
sbb
das
inc
call
mov
pop
mov
mov
int3
aaa
pop
pushf
fbld
andl
xchg
data16
xchg
movsl
pushaw
sub
xchg
addr16
mov
mov
pusha
int3
paddq
sub
pushf
insl
xor
push
imul
into
mov
jge
cwtd
dec
cmc
orb
inc
mov
sbb
lret
arpl
les
das
xor
push
jge
add
xchg
and
lock
jne
adc
mov
ret
jbe
push
or
lea
jae
inc
or
aaa
inc
fisubrl
in
scas
cmpsb
scas
ljmp
push
xchg
dec
in
cmp
cmp
lods
and
xor
dec
lods
jl
jge
ljmp
dec
bound
dec
fcompl
sbb
sub
out
in
imul
ss
sbb
scas
loope
arpl
add
push
repnz
mov
ja
lcall
inc
cwtl
out
or
scas
jg
mov
pop
pop
out
sbb
adc
pop
pop
popf
xor
dec
arpl
inc
cmc
mov
push
push
jl
out
adc
pusha
xor
sti
idivb
in
cltd
mov
or
jp
sti
lea
pusha
scas
or
ds
movsb
pop
xor
scas
push
xchg
adc
sti
mov
test
fsubrs
xlat
jl
mov
jnp
scas
lock
xchg
cmp
test
sbb
cmp
lea
xchg
in
jg
add
test
lods
sbb
and
lahf
xorb
push
mov
ffree
ss
jmp
popa
xchg
int3
fadds
repz
insb
jne
add
mov
test
jl
cwtl
cmpsb
lock
add
and
nop
mov
pop
cmpsl
sbb
out
loop
das
cltd
mov
xor
fwait
jns
es
adc
sub
push
js
jge
pop
sub
cmp
pop
fbld
pushf
inc
push
cmp
jle
cmpsb
sahf
in
push
fldcw
push
scas
or
cmpsb
rcrb
mov
cmp
add
arpl
je
jne
pop
sub
in
cmp
test
and
ror
add
pop
jge
js
aaa
mov
loop
fsubp
loope
nop
xlat
mov
or
je
cmc
daa
insb
sbb
xor
adc
jg
sub
mov
or
lods
pop
pop
jmp
out
incl
xchg
psrld
jne
dec
inc
mov
jp
fimull
cmp
pop
cmp
or
mov
dec
fs
sub
pushl
cmp
test
inc
in
and
out
gs
or
insb
sahf
frndint
out
stc
outsl
cmp
adc
push
cmp
addr16
andb
mov
pusha
jae
mov
fsubs
pop
adc
pop
jno
iret
cmp
push
jg
inc
std
adc
dec
sbb
xchg
add
inc
inc
adc
test
mov
inc
pop
pop
enter
test
pop
pusha
mov
sub
mov
pusha
adc
in
into
xchg
pop
pushf
popa
inc
in
pop
pop
rcr
jge
mov
arpl
mov
scas
mov
sbb
daa
xchg
call
jo
push
sub
pop
push
push
mov
dec
pop
imul
pop
test
mov
es
and
add
scas
lahf
stc
dec
sahf
add
mov
leave
mov
xchg
aad
jns
and
push
adc
mov
cld
pop
xor
hlt
sbb
push
cmp
pop
std
scas
pop
pop
ljmp
mov
outsb
das
ret
push
sbb
das
addr16
mov
jp
jmp
mov
push
sti
mov
shl
out
push
fs
cmpsb
push
scas
jle,pn
adcb
sti
push
mov
xor
aad
dec
addb
add
jno
adc
mov
mull
or
push
ljmp
bound
xor
pop
sub
xchg
adc
or
jg
mov
idivb
xchg
aad
and
push
adc
push
sub
and
xchg
popf
das
or
add
ds
jb
clc
test
out
xchg
mov
mov
mov
or
shl
sub
insb
push
push
add
gs
and
pop
mov
adc
pop
lret
pop
outsb
xchg
sbb
dec
adc
xor
mov
enter
or
bound
and
inc
in
pushf
adc
or
pop
and
outsb
sbb
add
adc
xchg
mov
push
pop
pop
sub
in
push
sbb
jg
into
sbb
push
inc
inc
mov
out
add
test
xchg
and
rolb
xchg
mov
push
inc
nop
cmpsb
fisttpl
push
cmp
or
icebp
pop
arpl
sub
xor
outsl
clc
adc
adc
pop
pop
lods
std
cld
mov
pop
sbb
mov
clc
test
or
sub
leave
fildll
jl
adc
pop
or
xchg
outsl
gs
loop
jb
mov
jbe
inc
icebp
es
iret
xor
fildll
and
addr16
pop
jecxz
mov
add
scas
push
mov
and
push
xorl
xchg
push
out
and
data16
mov
fwait
adc
cld
test
mov
aam
xchg
inc
rcrb
dec
xchg
mov
sarb
fstpt
leave
inc
cmc
mov
xchg
mov
fistl
ret
adc
push
xchg
dec
cmc
cwtl
mov
mov
data16
adc
cmp
out
dec
lahf
stos
sarb
out
push
push
inc
push
sbb
ljmp
sbb
adc
jge
mov
aad
jbe
dec
das
push
mov
and
xor
nop
mov
hlt
test
loop
xchg
xor
stos
scas
jnp
mov
mov
jnp
pop
jno
cmp
jl
fldcw
mov
cli
jge
gs
inc
pop
adc
push
dec
in
and
mov
cmpsl
aad
int
and
mov
push
xor
lods
xchg
hlt
aad
lods
cs
cwtl
push
sahf
js
mov
sub
lds
cmp
and
jns
std
lods
outsl
jb
adc
bound
and
addl
mov
xchg
mov
add
mov
sbb
mov
sub
outsl
dec
push
push
fldt
cmp
bound
lods
in
into
aam
fiadds
leave
mov
jmp
scas
popf
cmp
iret
dec
mov
cli
notl
and
sbb
mov
mov
mov
cld
pusha
mov
loopne
sbb
aaa
out
jb
lea
shrl
and
aas
or
test
addr16
shl
rcr
mov
iret
push
add
cmp
mov
sub
std
stc
std
mov
popa
pop
or
in
mov
mov
mov
in
xchg
fwait
push
jo
cmp
inc
cmpsb
mov
mov
adc
in
xchg
xor
xchg
xor
outsb
xchg
cltd
and
stos
xchg
out
pop
lcall
jns
pop
xor
aaa
push
jo
rcl
and
inc
jmp
mov
pop
lods
dec
fstpt
ror
ret
push
inc
test
inc
jno
scas
es
xchg
sbb
xorb
iret
enter
sbb
jno
and
js
push
insl
or
sbb
dec
mov
xchg
pop
sub
movsl
daa
mov
jne
lret
lods
or
enter
sub
mov
js
cld
test
jae
aas
and
addr16
addl
cmc
push
push
dec
addr16
lcall
in
lods
add
inc
push
std
mov
pushf
mov
add
jb
and
pop
shll
stos
push
or
mov
cltd
xchg
fnstcw
mov
out
cmp
or
fwait
add
dec
insb
dec
push
stos
in
xchg
movl
data16
sbbb
xor
cmp
and
push
cmpl
repnz
mov
leave
insl
out
push
inc
cmc
xchg
je
mov
sub
in
sbbl
out
out
rolb
mov
sbb
out
inc
adc
pop
or
lds
icebp
test
lds
ret
inc
incb
sub
lock
xor
lret
and
repnz
arpl
or
daa
jge
js
and
mov
push
divb
insl
dec
aaa
xchg
adc
cmp
mov
push
sbb
xor
sbb
js
insb
pushf
scas
dec
imul
push
je
mov
mov
lds
push
mov
mov
push
push
jl
xor
cmp
jge
dec
jl
bound
dec
mov
mov
inc
jp
dec
or
jb
cmp
aas
adc
in
loopne
adc
je
mov
data16
cltd
fiadds
mov
and
mov
push
mov
in
scas
fdivl
and
out
push
cmp
int3
mov
mov
das
inc
movsb
aam
mov
mov
xchg
jle
cmc
cltd
cld
imul
nop
or
out
ljmp
jecxz
repz
xor
lock
jne
cmp
sub
mov
negl
pop
pop
pop
xchg
test
mov
outsb
aaa
jecxz
and
xchg
ds
adc
lret
xchg
cmp
push
sub
popa
adc
notl
inc
dec
fwait
daa
lods
bound
push
mov
pop
inc
inc
imul
aas
popa
adc
push
dec
dec
xchg
adc
and
sbb
clc
xchg
ds
imul
sbb
add
shl
out
xchg
aam
mov
push
out
imul
rcrl
fdiv
test
int
fldt
sahf
inc
aam
xor
addr16
ds
sub
repnz
cltd
shl
mov
xchg
inc
int
mov
sbb
je
or
or
xor
cwtl
out
fidivl
fwait
push
ljmp
jmp
int3
mov
pushf
cmc
jo
jbe
pop
mov
es
movsl
in
test
movsb
cmp
dec
iret
jbe
mov
jle
outsb
cmp
mov
jb
lods
dec
lods
jbe
decb
inc
push
cmp
out
xchg
cltd
lock
in
xchg
imul
outsb
xlat
lahf
loope
cmp
popf
aas
stc
ljmp
xor
std
fistpll
push
inc
sub
sbb
jb
inc
out
gs
lock
push
cltd
in
or
mov
stos
imul
sub
ja
pop
lods
jo
push
adc
jge
sub
jne
aad
sbb
into
dec
leave
rcl
xor
sub
in
and
imul
xchg
jnp
xlat
sub
dec
and
popf
xchg
fdivrp
mov
or
jecxz
shrb
jae,pt
adc
adc
mov
sub
adc
push
out
icebp
cmp
outsl
adc
xchg
ljmp
fcompp
lret
adc
sub
sbb
mov
ja
or
cwtl
loope
test
cmp
mov
orb
jmp
adc
cltd
dec
test
in
imul
cwtl
fmulp
cli
sbb
stc
mov
ljmp
aam
out
lock
orl
shr
rolb
inc
jne
cmpsb
lods
cli
iret
cli
scas
or
mov
sub
cs
dec
je
mov
lods
jge
aaa
movsb
sbb
hlt
pop
bound
push
adc
inc
cmpb
pop
filds
mov
adc
mov
cmp
sbb
push
push
movl
xchg
sub
lock
mov
daa
mov
or
sbb
mov
aam
mov
shll
jg
or
fmul
mov
iret
pop
jnp
xor
or
adc
loop
dec
ror
push
sbb
xchg
fstl
and
lret
jo
int
lcall
mov
mov
or
test
pushf
subb
lea
std
cmpsl
add
insb
xchg
push
dec
inc
iretw
movaps
or
int3
lods
das
insb
data16
mov
jg
aas
adc
das
scas
lods
and
dec
pop
and
lds
cmpsl
add
movsl
sub
cmp
xor
pop
les
jge
push
jne
cmpsb
out
es
repz
pop
xor
cwtl
clc
mov
outsl
cmpsb
sbbb
inc
ds
xchg
pop
push
push
or
loop
mov
cmp
repz
jno
jae
mov
cmpsb
dec
push
pop
jg
rcrl
scas
cmp
push
xor
add
roll
ret
lret
inc
rcl
pop
shl
pop
dec
decb
repz
jb
outsb
pop
dec
or
mov
mov
repz
fimuls
sbb
pop
xchg
int
mov
pop
sahf
xchg
dec
nop
cmp
jno
mov
shl
std
ds
loope
in
and
popf
xlat
cmpsl
test
xsavec
inc
andb
jecxz
push
xor
or
push
imul
out
test
push
or
orb
jp
js
ret
jb
fisubs
mov
stc
stc
push
fxsave
cmp
fdivrl
insl
lds
mov
fs
pop
fisubrs
addb
idivl
dec
jecxz
mov
std
sti
pop
mov
es
push
into
sbb
dec
pop
mov
pop
mov
inc
orl
sub
movsl
xchg
sbb
out
in
call
in
push
addr16
fcmove
mov
xchg
lock
pushf
dec
scas
ret
bound
or
in
jge
and
popa
push
lods
popf
jb
popf
mov
dec
test
pop
mov
mov
fcoms
mov
sbbb
stos
leave
repnz
inc
mov
push
sub
outsl
je
push
pop
int
pusha
push
ds
cld
sub
into
cmp
push
xchg
jp
and
sbb
lods
push
jno
and
sbb
mov
xorl
adc
jno
stos
adc
daa
mov
sub
clc
cmp
dec
test
dec
sbb
dec
pop
xor
das
ret
out
stos
jbe
mov
jae
inc
dec
cwtl
out
shll
adc
sbb
mov
dec
xchg
xlat
cmp
imul
imul
cld
dec
lcall
push
push
loop
add
mov
jne
pop
sbbl
mov
outsl
sarl
neg
push
outsl
xchg
in
ret
pushf
push
xor
in
sub
sub
lret
pusha
or
mov
cmc
cwtl
sahf
jae
das
popa
xor
and
mov
mov
scas
cmc
sub
mov
mov
sbb
sarb
movsb
sub
push
adc
aam
incb
cmp
and
es
push
insb
xor
movsl
mov
adc
scas
outsb
dec
movsl
add
push
jo
pushf
repz
jo
mov
ffreep
loop
ret
adc
icebp
lret
test
lods
pushf
push
dec
decb
sub
and
jb
mov
pushf
lcall
push
aad
mov
aas
adc
pop
cld
add
test
xor
mov
push
cli
jne
dec
fadds
mov
aad
mov
or
and
fsts
mov
lods
and
out
movsb
and
popf
jne
cmp
mov
jl
shll
out
inc
in
aam
aam
sub
and
push
shrb
fistps
or
mov
adc
add
sub
xlat
imul
mov
mov
pop
lcall
pop
inc
cwtl
inc
mov
mov
addr16
es
or
xlat
pop
cmp
rcrb
call
in
outsl
jle
dec
test
movsb
ja
push
mov
std
push
or
push
mov
adc
fsubrs
mov
mov
lods
repz
adc
add
mov
daa
lods
push
pop
adc
add
mov
inc
xchg
inc
lods
clc
hlt
stos
pop
fnclex
movsl
sti
mov
pop
cmp
clc
xor
add
movsl
jns
and
sarb
arpl
rcr
sbb
mov
test
push
cmpsb
clc
neg
ljmp
stc
or
packuswb
jbe
in
vshufps
dec
mov
outsb
std
insl
fwait
je
cmpsb
xchg
jge
cmpsb
and
dec
xor
mov
out
sarl
mov
popa
ret
jmp
testb
clc
xor
enter
and
mov
jg
mov
hlt
xor
loopne
and
in
mov
in
xor
xchg
xchg
sbb
sahf
pop
add
out
pop
xchg
jp
cli
sbb
inc
popf
dec
mov
jb
push
hlt
loopne
in
mov
mov
out
sub
test
fsubs
shl
pop
pop
sub
xchg
push
pop
add
sub
push
aas
mov
cwtl
jb
pop
jecxz
mov
xchg
pop
add
faddl
imulb
dec
aam
xchg
pop
imul
push
inc
dec
cmpb
and
sbb
push
cld
repz
icebp
lods
hlt
lods
test
bound
negl
cmp
cmp
push
cwtl
lods
and
cmpsl
xchg
push
or
xchg
imul
test
imul
jno
push
std
inc
jbe
movsb
popa
btr
pusha
mov
lds
pushf
mov
mov
jmp
inc
hlt
cmp
xchg
sbbl
dec
or
adc
jbe
lret
mov
out
sub
sbb
jae
xchg
jl
sbb
cwtl
ja
sub
bound
pop
mov
sub
popa
pop
sti
inc
outsb
fwait
push
mov
outsb
add
push
jbe
pushf
mov
inc
and
mov
pop
and
sub
sub
inc
push
xchg
dec
jmp
leave
mov
pop
pop
jbe
in
mov
adc
xchg
sarl
ds
dec
das
stc
js
jo
jp
inc
mov
int3
xor
xor
jne
stos
pop
mov
rcrb
divl
jb
jno
rorb
ljmp
pop
adc
inc
test
popa
push
jns
mov
xor
repz
or
push
test
hlt
mov
mov
das
dec
test
lods
cmp
insb
push
imul
adc
mov
sti
inc
push
pop
bound
loop
pop
mov
pop
test
xchg
pop
je
fmuls
adc
daa
call
jns
mov
aaa
insb
aaa
mov
sarl
movsl
mov
or
xchg
inc
fnstenv
xor
hlt
cld
divb
out
shrl
popf
sub
pop
xor
lcall
mov
pop
out
stos
cs
aam
xor
sub
mov
mov
jae
insb
jb
fwait
js
imull
imul
mov
je
mov
xchg
inc
mull
dec
dec
loopne
add
lods
xchg
stos
xor
xchg
shr
and
push
or
imul
lea
xchg
dec
mov
popf
movsl
sub
pop
aaa
jecxz
pop
jb
test
add
or
adc
jno
mov
test
test
mov
mov
pusha
xor
inc
in
mov
jo
and
dec
and
xchg
add
dec
movsl
shrl
pop
cmp
bound
dec
arpl
sbb
jne
jb
xchg
test
sbb
push
jbe
stos
notl
mov
into
shrl
push
push
push
in
loopne
cmp
pop
data16
push
int
nop
repz
pop
out
mov
les
lock
stc
cli
mov
jno
das
ficoml
les
jg
add
mov
push
add
je
movsl
mov
xchg
faddl
dec
dec
push
pop
dec
ljmp
in
popf
ficoml
add
or
mov
ds
sbb
cmp
out
scas
mov
ja
pop
adc
sub
fidivs
ficoml
mov
lahf
add
imull
ret
pop
insl
add
xchg
jnp
adc
test
pushf
ds
cwtl
mov
lea
mov
pop
jmp
test
sub
hlt
outsl
mov
pop
incb
addr16
xor
xlat
sub
pop
divl
ficoms
lods
adc
pop
jp
xor
arpl
movsl
mov
bound
adc
and
xchg
test
or
push
int
xchg
popf
push
dec
fistpll
jge
mov
fcmovnbe
aas
js,pn
sub
dec
orb
sbb
in
int
or
cmpsb
lret
jmp
sti
popf
insl
mov
mov
sbb
fistps
jns
dec
mov
push
jecxz
jae
data16
popf
out
and
pushf
aam
adc
fbstp
xchg
dec
or
pop
mov
icebp
cmpb
loop
mov
movsb
inc
orb
fiaddl
clc
sub
insb
aas
jl
aaa
mov
cli
fisubrl
jecxz
rclb
push
xchg
cmpsb
pop
cmp
inc
pop
int3
push
scas
loop
cmp
or
sbb
add
arpl
mov
hlt
ret
mov
aam
cwtl
mov
mov
xchg
mov
sbb
in
push
xchg
adc
gs
cmp
sub
jae
insl
sub
jbe
cmpsl
lea
push
mov
fs
sbb
push
test
hlt
imul
add
cmc
cmp
xchg
push
mov
rolb
inc
insb
and
adc
xchg
jl
out
fisttpll
jno
and
fsubl
push
xchg
sbb
add
imulb
lds
mov
rcll
mov
gs
sti
into
mov
enter
lock
mov
sahf
push
adc
sbb
push
inc
fisubrl
rcrb
shll
jbe
jmp
roll
pop
outsb
pop
and
sbb
pop
loop
mov
in
jbe
mov
arpl
mov
pop
pop
xor
xor
insb
cmc
or
xor
mov
sarb
mov
push
lea
js
sbb
pushf
loop
cs
sbb
and
or
mov
jecxz
out
insl
inc
cmpsb
push
sbb
mov
in
cli
or
inc
test
add
rcl
fsts
test
pop
cmp
mov
add
pop
mov
cmpb
jo
cmc
jb
rol
push
add
push
loopne
xor
into
cmp
sub
inc
xor
mov
outsl
cli
inc
pop
mov
xchg
iret
inc
jnp
jg
ss
outsb
pop
faddl
mov
js
dec
mov
shrb
enter
adc
sub
pop
hlt
cmp
mov
mulb
arpl
jo
in
cmp
mov
lret
or
out
sbb
sub
mov
add
mov
mov
ja
mov
popf
cmc
cmpsl
data16
ja
mov
push
mov
add
lea
stc
enter
xor
mov
outsl
ljmp
jno
jo
imul
add
dec
andl
les
cmp
jmp
fistps
pop
inc
xlat
push
lods
cli
xor
add
xchg
pop
cmp
pop
arpl
xchg
js
cltd
dec
jecxz
mov
daa
cmp
std
push
ljmp
xorl
jmp
adcl
insl
cmp
movsl
or
lods
push
or
fmull
xchg
push
adc
push
sbb
mov
sub
inc
iret
add
push
in
stos
xchg
mov
bound
stos
rorb
outsl
push
sub
cmp
data16
inc
inc
pop
fbld
in
pushf
xor
or
imul
push
inc
mov
mov
push
or
adc
xchg
pushf
pop
xchg
or
loopne
mov
ja
bound
xor
jge
xor
out
fs
lods
push
sbb
mov
xor
xor
and
outsl
mov
jbe
lock
enter
int3
pop
jb
push
or
out
jae
jg
mov
insb
inc
ret
push
or
add
and
and
dec
push
push
call
in
mov
jne
xor
lret
pop
push
outsl
jne
sub
call
sbb
pop
int
mov
sbb
xchg
insl
push
cmp
bound
fcomps
pop
sub
test
pop
popf
cltd
cltd
das
push
xor
stos
xlat
outsl
out
mov
pop
je
xchg
bnd
and
inc
mov
aas
mov
or
fs
pop
cmpsl
pop
aaa
mov
mov
xchg
add
test
jle
dec
sar
pop
adc
fisubl
push
imul
xchg
ss
insl
pop
fdiv
jno
shlb
dec
sti
xor
mov
pop
movsl
sbb
jl
stc
xchg
out
or
int3
mov
mov
mov
mov
mov
lock
pop
jne
notb
sarl
clc
inc
jmp
fdivr
in
mov
pop
and
sti
adc
xor
mov
pop
call
repnz
add
dec
xor
test
mull
out
fisubrl
sub
mov
jp
repz
jle
mov
hlt
aas
cli
in
jge
rorb
rep
xor
sahf
pop
stc
outsl
cmpsb
xchg
ret
cmp
icebp
push
stos
mov
xchg
xchg
xlat
scas
pusha
inc
test
fs
test
adc
out
sarb
push
dec
in
or
sahf
in
mov
add
dec
jo
xchg
mov
sub
add
pop
mov
jle
hlt
cmp
jle
add
out
mov
cmpsb
inc
jg
xor
out
int
adc
and
lret
mov
xor
and
mov
mov
and
fstps
push
sub
push
and
cmp
lret
jmp
xchg
add
lods
xor
mov
jno
enter
lds
cli
mov
cmp
sub
mov
int3
loope
dec
in
hlt
cmp
pop
sbb
jo
inc
cmp
loop
sub
push
add
jbe
jg
bound
mov
cwtl
xchg
xchg
jmp
sub
mov
stos
aam
mov
cs
push
mov
movb
mov
jl
idiv
mov
cmp
fwait
and
ret
mov
mov
repnz
ljmp
and
cmp
xor
es
test
test
pop
mov
es
cmp
pop
cwtl
ds
push
cmpsb
dec
jae
adc
loopne
dec
sub
pop
jl
mov
pop
fadd
mov
rcrl
outsl
enter
dec
xchg
insl
enter
ljmp
fdivrl
lods
push
mov
pop
popa
xchg
push
out
and
sbb
inc
xor
mov
pop
ja
dec
aam
mov
jae
int
pop
lods
dec
inc
lods
lret
icebp
xchg
or
jle
push
out
sub
stos
or
fadds
cmp
pop
clc
xor
mov
daa
loope
nop
jne
add
jg
int
sarb
cmpsb
cmp
lret
push
adc
stos
test
sub
mov
cmp
jg
pop
aam
lret
inc
push
jecxz
aaa
call
xchg
cmp
mov
ljmp
or
jno
mov
fistpll
call
xchg
sti
jl
cmp
lahf
push
mov
cmp
nop
repnz
xor
adc
push
lret
fdivl
pop
bound
mov
hlt
pop
xchg
cmp
pop
je
in
jmp
shll
lret
jl
mov
mov
xor
push
testb
clc
dec
pop
ret
add
add
negb
dec
dec
xchg
cld
idivl
sbb
add
jbe
jnp
cmc
lock
les
sub
leave
mov
mov
jnp
gs
dec
mov
jle
aaa
enter
aas
jmp
mov
std
and
in
mov
dec
cmp
sub
xchg
sahf
xor
ss
insb
dec
pop
mov
jge
loope
jl
ret
inc
xor
mov
mov
stos
mov
inc
pop
mov
pop
repz
jbe
cmp
repz
in
pop
je
sti
pop
movsl
cmpsb
jl
les
jge
mov
mov
out
mov
mov
addr16
out
mov
insb
pop
insb
fstpt
mov
and
insb
lret
les
or
sbb
mov
sub
gs
jno
aas
sarl
aas
jmp
add
or
xchg
xchg
ds
pop
xor
sbb
pop
jge
inc
mov
or
aad
daa
gs
rorl
mov
sub
pop
xchg
or
add
mov
arpl
mov
frstor
leave
mov
cmpsb
cltd
adc
pushf
mov
pop
sub
int3
or
scas
sub
loop
and
cmp
pop
sub
push
movsb
data16
hlt
icebp
ds
das
or
xlat
sahf
pop
sub
test
scas
xchg
and
jmp
jp
push
dec
push
adc
popa
popa
lret
mov
outsl
sub
mov
enter
test
cld
xlat
jg
ds
push
fwait
clc
fistpl
imul
cmp
pop
js
stc
or
stos
sbb
mov
add
inc
insb
clc
das
jns
jnp
mov
test
pop
mov
das
jb
xorl
xor
enter
mov
in
cmpsb
out
jnp
xor
jbe
enter
mov
xchg
xchg
inc
mov
push
fildl
negb
mov
jno
sbb
sub
inc
xor
outsb
and
push
pop
hlt
dec
xchg
push
arpl
pusha
xor
cmp
ja
mov
cld
int
and
in
lods
scas
mov
inc
out
xchg
add
dec
mulb
cltd
mov
lcall
rcr
add
addl
negl
call
mov
repnz
bnd
test
push
je
add
mov
insb
jmp
pop
jge
sbb
sbb
iret
add
dec
dec
mov
outsb
mov
mov
mov
out
insb
push
mov
pop
ss
pop
sbb
sub
ffreep
jb
or
jns
xor
inc
nop
xchg
jno
daa
cltd
lock
cmp
pop
rolb
xchg
pop
sbb
adcl
sub
mov
inc
jo
mov
andb
loop
fwait
pushf
insl
cmc
add
sub
xor
cmp
popa
mov
pop
xor
and
jmp
xchg
movsb
fistl
imul
xchg
inc
or
enter
push
xor
mov
aas
out
clc
divb
add
iret
dec
cli
test
mov
mov
gs
sarl
rolb
fisubrs
out
or
stc
popa
or
adc
or
jns
or
lret
cmp
cmp
dec
mov
adc
lods
sub
push
mov
test
in
aad
jns
outsl
adc
dec
dec
mov
testb
push
lret
ror
and
lret
daa
inc
icebp
out
mov
push
fisubrl
or
fbld
testl
mov
push
add
push
lcall
pop
add
ss
out
adc
loope
popf
dec
jno
hlt
xor
inc
jnp
pop
mov
cmp
rorl
lods
enter
adc
push
aam
pop
xchg
xchg
repnz
loopne
mov
in
loop
sti
sbb
add
aam
adc
insl
mov
add
ljmp
add
push
repz
hlt
outsb
mov
sub
ljmp
mov
sbb
stc
xchg
inc
mov
cld
repz
push
mov
pop
mov
cmpsl
iret
sbb
sub
push
int
imul
cmp
or
addr16
fs
shrb
bound
sbb
stc
dec
insl
ljmp
scas
cmp
push
push
jno
loope
xor
push
clc
xor
push
sti
push
insb
sub
lods
lods
pop
cmp
add
sub
testb
jbe
imul
xchg
mov
jns,pn
mov
pop
cmpsl
sbb
adc
test
xchg
movq
dec
clc
mov
inc
insl
cmp
shl
fprem
cwtl
call
inc
inc
cmp
mov
cmp
icebp
push
inc
cmpsb
in
rcll
lds
addr16
je
icebp
loop
cwtl
inc
xchg
pusha
loope
jne
out
dec
cli
int
mov
jae
scas
repnz
ret
movsb
je
pop
mov
jo
push
jge
pop
pop
test
xchg
nop
xlat
int
cmp
mov
sbb
adc
inc
push
pop
loopne
inc
mov
xor
lret
xchg
xchg
ret
loop
xchg
xlat
sub
pop
inc
or
mov
subl
adc
outsl
pop
iret
xchg
pop
imul
cwtl
xchg
fisubrs
add
mov
xchg
inc
push
sub
arpl
or
jo
movsl
iret
mov
aam
inc
xchg
shr
jmp
cmp
addr16
mov
out
sahf
js
in
and
cld
stos
mov
pop
mov
dec
js
imull
or
or
in
mov
pop
dec
ljmp
inc
int
adc
or
sbb
push
sbb
mov
dec
fsts
inc
jecxz
or
jbe
ret
add
outsl
push
mov
imul
repnz
movsb
ljmp
sub
jp
sub
lock
push
dec
jae
pop
aaa
xchg
jo
lods
pop
and
jne
leave
std
imul
xchg
add
stos
gs
jns
shr
push
loop
insl
sub
jle
and
imulb
mov
js
les
mov
inc
int
lds
lock
jae
lods
into
xchg
hlt
pop
push
or
imul
xor
mul
int
ja
lods
mov
mov
pop
stos
loope
int3
mov
repz
js
js
cwtl
jp
xchg
out
pushl
sub
divb
mov
cs
stos
mov
fcmove
hlt
mov
or
gs
inc
pop
rcl
adc
mov
or
adc
in
cmp
es
into
jno
pop
test
int
mov
popf
mov
lret
inc
mov
sub
fisttpll
cmp
xor
jmp
fidivrl
lret
lcall
aam
rol
inc
imul
fadd
adcb
xchg
lds
pop
icebp
mov
fs
pop
daa
jno
mov
push
insl
add
rorl
mov
mov
std
movsb
aas
xchg
xchg
bound
repnz
adc
leave
adc
push
xchg
ja
mov
leave
aad
mov
mov
and
push
imul
outsb
pop
pop
movb
scas
jno
jns
or
cs
push
inc
in
scas
movsb
fdivrs
or
add
pushf
or
inc
pop
pop
mov
pop
xor
loope
les
or
repnz
sbb
or
inc
or
insl
andl
int3
jmp
repnz
hlt
jnp
sbb
dec
int
lret
xor
stos
leave
scas
fidivs
mov
ljmp
cmp
dec
dec
xor
addl
iret
inc
ljmp
add
fwait
mov
negb
sbb
aas
adc
jmp
jge
add
repnz
push
dec
mov
inc
imul
cmp
dec
pop
arpl
push
fsts
shll
cmp
xchg
lret
sub
mov
xchg
dec
rcl
mov
aaa
mov
sbb
movsb
pop
sub
sub
mov
pop
mov
dec
insb
call
scas
push
arpl
stos
out
pop
dec
fwait
stos
xchg
movsl
mov
mov
pushf
sub
jp
dec
xchg
pop
out
inc
dec
dec
pop
add
or
jl
or
test
adc
sbb
push
mov
push
pusha
pop
sub
adc
aad
mov
xor
xor
sub
lods
inc
imul
jp
inc
add
pop
mov
mov
lea
or
xor
pop
xchg
lods
pop
jne
clc
or
enter
push
sahf
cltd
push
pop
push
rolb
xor
pop
dec
jmp
and
jbe
mov
xor
ljmp
and
cs
pushf
dec
add
lea
lret
jecxz
xchg
cli
jno
pop
fistl
or
jo
dec
jmp
insl
push
push
movsl
mov
adc
adcl
xchg
popf
sub
inc
js
push
push
fsubs
test
pop
scas
xor
and
jg
cmp
and
sbb
orl
xchg
xor
mov
pop
jbe
in
sarb
or
lea
out
enter
outsl
pop
sbb
test
jo
ret
mov
mov
cli
xchg
inc
mov
cs
jb
mov
xor
ret
push
dec
pop
rolb
fstl
xor
cmc
pop
nop
cld
mov
movsl
sub
mov
cs
mov
mov
or
inc
repz
push
xchg
sub
sahf
aaa
sub
shll
xor
inc
shll
out
into
or
test
mov
cli
cli
dec
adc
cmpsb
out
hlt
mov
cmpsl
aas
push
popf
add
fimull
xchg
mov
jae
push
incb
and
push
and
jecxz
repnz
je
es
pop
lcall
push
mov
fwait
adc
xor
movsl
inc
je
or
mov
out
aam
test
add
out
andb
fildl
cmp
test
inc
insl
ljmp
mov
ret
sub
mov
popa
mov
popa
push
andl
mov
aaa
pcmpgtd
nop
stos
shlb
enter
insb
loop
ss
cli
lret
fisubrl
es
icebp
cmp
orb
adcb
add
xchg
je
movb
int3
mov
pop
ret
fsubs
hlt
mov
and
in
or
subb
and
call
jbe
insb
iret
add
mov
ss
sti
mov
sbb
mov
movl
out
iret
mov
push
pop
xchg
ja
scas
jae
paddw
jge
jbe
inc
cmp
js
out
mov
pop
adc
dec
imul
in
pop
testl
fwait
sbb
iret
pop
adcb
add
rcll
and
pop
cmp
xlat
xchg
or
mov
xor
repz
test
rcrl
add
sbb
inc
imul
mov
cwtl
mov
lahf
stos
push
rcrl
jl
adc
cmpb
es
or
in
fadd
repz
stc
js
mov
in
out
inc
cltd
out
mov
loop
xor
mov
cmp
inc
int
cmpsb
xchg
in
lds
jns
jae
fidivrs
insb
cmc
mov
sbb
adc
mov
rclb
add
or
test
sarb
popf
icebp
add
ret
cmp
pop
pushf
out
sbb
test
pop
push
dec
sub
pop
scas
scas
stos
sti
pop
rcrb
icebp
inc
push
aas
xchg
jno
cmpsb
inc
lcall
pusha
loope
push
pop
sub
push
cmp
add
pop
add
movsl
insl
pusha
pop
xacquire
jmp
scas
or
push
mov
jbe
xlat
imul
test
fidivrl
pop
sub
movsl
mov
outsl
mov
sub
push
lcall
xchg
sar
mov
mov
es
int3
lds
xlat
cmp
pushf
pop
nop
bound
push
loop
and
or
cmp
in
dec
mov
xchg
adc
in
xor
nop
clc
push
daa
or
dec
xor
mov
push
xchg
in
jb
imull
orl
dec
sub
out
rcll
mov
xor
mov
in
adc
xor
dec
ret
sti
fidivs
jge
in
or
cmp
es
in
dec
iret
mov
mov
cmpsb
fs
lret
jns
lds
ja
mov
xlat
and
sbb
adc
fs
addr16
mov
outsb
adc
xor
pop
ja
and
xchg
testb
push
lea
push
lea
imul
sub
add
andl
dec
lods
int3
shr
or
das
jecxz
jg
lds
fwait
xchg
adc
stc
mov
cmp
sti
mov
stos
inc
inc
movsl
jmp
xchg
inc
dec
sub
loope
leave
xchg
adc
iret
mov
push
enter
jl
loope
dec
mov
sbbb
outsl
sub
fdivr
cli
sbb
xor
adc
iret
push
push
leave
cld
or
adc
mov
and
and
xchg
jle
sbb
mov
jbe
jle
scas
popa
movsb
pop
ja
mov
dec
pop
push
addr16
mov
rol
scas
sbb
aaa
mov
das
clc
fisubrl
sar
sub
jge
jle
jb
popf
lcall
scas
dec
out
fstp
jbe
popa
fcmovnu
das
imul
xchg
jno
dec
add
mov
adc
push
and
pop
movsl
mov
addr16
and
jnp
pop
roll
lock
ret
lds
loope
push
fs
lods
mov
aaa
adc
pop
dec
out
pop
pop
aam
mov
and
int3
addb
cmc
aaa
scas
popf
xchg
sub
in
shlb
pop
cli
and
lods
or
mov
xor
and
inc
sub
sbb
ret
nop
xchg
xor
arpl
cld
lock
push
jp
je
ja
xlat
xchg
aaa
pop
push
jnp
mov
mov
jp
inc
leave
sbb
or
or
imul
mov
add
push
cmc
mov
int
sbb
and
pop
lret
cmp
scas
rcr
xchg
mov
push
add
inc
mov
cmp
pusha
je
and
rcr
xchg
lcall
movsl
inc
loope
or
scas
adc
imul
aad
std
adc
cltd
jne
sub
les
fisubrs
cmp
mov
mov
dec
dec
out
dec
icebp
dec
jl
cwtl
xor
cld
int
xchg
sbb
mov
or
dec
xchg
je
or
mov
mov
scas
cli
mov
aam
xchg
notb
lea
jns
push
or
add
int
cmpsl
mov
mov
adc
out
es
or
sbb
inc
je
and
jae
push
cmpsb
dec
adc
add
loopne
add
mov
mov
fnsave
scas
xchg
lods
mov
fs
inc
or
lahf
pop
aas
mov
push
or
pop
mov
sub
pushf
xchg
push
rcll
stos
cmpsb
jmp
addb
mov
add
xor
sub
mov
lea
call
jp
mov
arpl
loop
xor
cmc
jnp
sbb
mov
lock
cmp
or
popa
rcrb
xor
ja
sub
mov
and
mov
in
addr16
addb
jno
pop
sub
into
mov
add
or
dec
shr
mov
mov
orl
mov
or
frstor
ret
call
arpl
sar
dec
bound
sbb
sarl
dec
gs
pusha
xchg
fdivl
ss
mov
nop
mov
cld
icebp
sub
arpl
out
fstpt
sub
mov
and
popa
in
jnp
push
adcl
flds
pop
cmp
hlt
test
int
push
pusha
jo
psrad
ja
and
sbb
mov
jecxz
sbb
adc
aam
cs
ret
aas
stos
xchg
subb
xor
or
jo
cld
jae
pop
flds
dec
ficoms
gs
mov
jle
addr16
nop
aaa
fwait
loopne
sahf
addr16
adc
push
mov
in
scas
jnp
and
sbb
or
sbb
add
mov
cmp
sti
cmpsb
mov
out
ja
sbb
test
or
jns
sub
jne
popf
int3
icebp
push
push
daa
mov
cmpsl
es
dec
adc
cli
adc
cld
push
fildll
call
rcll
aas
lcall
adc
ljmp
int3
xchg
shlb
mov
pop
sub
aad
mov
aam
sahf
pop
lret
fsubl
cli
dec
inc
mov
push
jnp
test
test
ror
sub
lea
add
bound
insl
scas
inc
ljmp
std
sub
cmc
ljmp
jo
sahf
js
adc
and
sub
test
sub
adc
push
push
and
mov
jnp
imul
test
cmp
push
push
jmp
aaa
lock
jl
sub
mov
mov
popa
stos
push
insb
sub
cmp
push
imul
sbb
popf
test
sbb
ret
sarl
dec
das
xchg
cwtl
stc
lret
push
loop
call
je
shlb
setp
test
outsb
sub
popa
nop
mov
cmp
cmp
pop
add
adc
outsl
xor
int
jmp
push
rorl
hlt
cwtl
sti
out
pop
mov
cmp
ret
sub
mov
lods
xchg
popf
leave
xlat
cltd
push
mov
out
xchg
cmp
adc
jne
cmp
mov
jl
mov
lods
ja
imul
fnsave
jge
insb
pusha
pop
js
dec
cmp
jnp
push
lret
lcall
xor
es
cmpsb
inc
outsb
call
add
cmpsb
push
dec
jmp
mov
mov
add
xchg
je
mov
insl
imull
sub
testb
dec
cmpsb
add
and
lods
ljmp
iret
cmp
jae
mov
and
pop
cmp
add
adc
pop
and
mov
shlb
inc
addr16
mov
sbb
test
icebp
aaa
add
and
sbb
add
hlt
pcmpgtd
fmull
insb
jb
mov
sbb
iret
or
ja
jmp
stc
sub
mov
sahf
mov
aam
pusha
lods
outsl
imulb
or
clc
push
pop
stc
adc
mov
popf
sarl
dec
lret
sahf
fwait
cmp
sub
jge
xor
xchg
cli
in
data16
sbb
loope
sub
lods
xchg
in
push
push
mov
lea
shlb
mov
mov
out
mov
cmpsl
jne
data16
pop
mov
push
push
push
push
sbb
sahf
insl
mov
pop
aam
fcmovu
xor
imul
je
adc
mov
mov
repz
add
dec
and
xor
repz
mov
out
je
ss
sbb
mov
mov
aaa
inc
jmp
xchg
mov
icebp
imul
out
shr
aam
push
xor
add
sbb
in
xor
mov
inc
pop
out
inc
loop
adc
xchg
out
rclb
jg,pt
push
movb
adc
dec
in
cmc
and
push
mov
orl
iret
aad
fisubrs
jne
add
push
call
push
adc
imul
fsubrs
mov
adcl
das
jno
imul
cli
push
inc
mov
mov
clc
mov
cmc
mov
loope
pop
dec
adc
lock
push
add
imul
mov
js
imul
movsl
mov
adc
cmp
cmp
push
cmp
mov
or
cmp
fldl
in
daa
pop
sbb
seto
xor
or
shll
add
icebp
rclb
pmaxsw
cld
subl
sub
movsl
pop
arpl
pop
test
dec
in
mov
cmpsb
xchg
push
ss
adc
mov
icebp
and
pop
add
sar
fstpt
rdmsr
xor
call
in
mov
aas
and
scas
rorl
in
shll
xlat
pop
pop
imul
test
xor
fistl
pop
dec
jbe
movsb
push
mov
pop
cld
movsl
roll
or
sbb
jge
push
xchg
insb
cmc
fidivrl
cmc
lock
ret
daa
add
mov
sti
lahf
les
jle
repnz
adc
int
cmpsl
pop
cld
clc
mov
xchg
sub
jl
adc
jp
inc
jo
add
cmp
mov
lods
and
pop
jo
data16
loope
dec
lock
jno
mov
lahf
or
push
and
loop
sub
je
add
divb
xlat
not
adc
fimull
and
fsubl
rcl
jecxz
jmp
mov
jo
mov
outsl
out
push
jno
jns
lret
les
push
hlt
sbb
push
lock
in
mov
adc
cltd
xor
lahf
out
mov
loop
inc
and
imul
stos
daa
push
popa
or
mov
imull
mov
adc
mov
daa
cld
pop
xchg
mov
gs
add
fists
int3
insb
xor
push
jge
or
pop
mov
push
ficoms
push
out
ss
xchg
or
jl
popa
mov
lods
and
xchg
lahf
lcall
cli
enter
xchg
clc
mov
subb
mov
cli
mov
cmp
mov
stc
sub
sbb
push
push
pusha
cmp
imull
cli
dec
popa
and
daa
push
pop
pusha
into
cmc
push
icebp
call
ds
aam
and
sub
mov
sub
mov
mov
adc
sbb
data16
lea
mov
je
sub
jne
into
xor
adc
pop
cmp
aad
fidivl
pushf
ret
dec
pop
std
jl
mov
out
mov
xor
mov
in
std
leave
outsl
lds
cld
loope
int
mov
jl
mov
rcr
sbb
push
aas
adc
mov
inc
das
aaa
stos
movb
and
adc
loop
popf
mov
insb
dec
jbe
push
ljmp
push
xchg
test
cs
push
xchg
sub
popf
pushf
icebp
inc
or
flds
int
int
iret
dec
pop
imul
loopne
into
sbb
pop
mov
es
mov
push
cmp
sahf
jae
sbb
movsb
cmp
adc
inc
push
roll
pop
sub
icebp
push
ret
sbb
lock
int3
pop
lods
cltd
cld
cmp
sahf
cld
mov
cmpsl
repnz
fiadds
popa
lods
pop
shrb
movsl
sbb
loopne
loope
sti
iret
inc
pop
test
mov
mov
test
xchg
hlt
movsl
movsl
inc
cmp
in
push
jl
xchg
aaa
mov
push
idivl
xor
sub
mov
add
add
clc
jp
stos
dec
icebp
adc
xor
pop
mov
push
fxch
pusha
ror
stos
push
das
test
int3
movsl
lret
and
jbe
xor
adc
in
shlb
enter
shlb
repnz
xor
outsb
and
xor
mov
inc
cs
jl
out
push
xor
push
push
cltd
jnp
lcall
sar
cmp
insl
repnz
add
out
push
sbb
in
test
movsl
les
push
daa
rolb
out
xor
xchg
leave
pop
repnz
ret
sbb
and
jecxz
insb
mov
cld
enter
fistpl
mov
imul
mov
insl
adc
push
cmp
inc
test
xlat
pop
loop
lret
push
out
inc
movsb
mov
in
add
pop
add
sbb
pop
cli
sub
bnd
xchg
inc
stc
push
out
jo
jns
inc
nop
loope
xor
or
sahf
xchg
push
fwait
out
sub
mov
bound
or
push
or
subb
push
sub
jmp
mov
dec
ja
je
ret
cli
dec
dec
imul
mov
stc
adc
shll
lea
test
jle
mov
enter
jge
test
ja
ja
mov
mov
lahf
mov
xor
xchg
inc
mov
ss
inc
jp
mov
dec
sub
or
mov
lahf
das
mov
push
pop
add
cmp
clc
jnp
test
push
inc
faddl
out
xor
leave
pop
xchg
cmp
mov
push
iret
dec
jmp
inc
iret
in
lods
push
lret
fwait
pop
iret
dec
xchg
cmpsb
std
cmc
xorl
and
int3
lret
inc
or
xor
jne
mov
out
test
xchg
out
xchg
mov
cltd
lods
scas
xchg
mov
jb
scas
sub
icebp
inc
inc
insl
xchg
xchg
sbb
test
movsb
ficoms
xchg
sarb
mov
sub
push
push
xchg
mov
pop
push
out
push
in
orb
pop
pop
push
mov
ror
lret
cmp
insl
push
adc
std
and
lret
jne
jno
and
xchg
xor
loop
mov
sbb
mov
mov
push
and
cmp
je
rcrl
repnz
test
add
clc
sar
ljmp
push
xchg
push
test
pusha
sub
stos
jp
push
push
xor
xlat
sbb
sub
lret
cmp
adc
arpl
in
mov
cmpl
in
jg
and
stos
pop
loopne
cmp
and
cmp
xchg
xchg
popa
jl
xlat
inc
movsl
mov
iret
pop
mov
div
jmp
in
or
cmpsb
mov
push
inc
and
outsb
in
push
adc
dec
add
mov
xor
movsb
out
sbb
or
push
sub
ja
int
mov
jmp
stc
add
push
addr16
lret
push
lods
pop
jg
xchg
sahf
int
fs
int
stos
fsts
subb
mov
jmp
jmp
inc
fnstenv
xor
jmp
sub
dec
jg
iret
or
or
outsb
xchg
or
inc
push
movsb
je
and
mov
jnp
pop
stos
test
sahf
push
and
lods
adc
in
dec
add
push
ret
xor
and
and
shll
icebp
cmpsb
shr
xor
imul
cltd
cmpsb
jl
fs
mov
into
stos
sbb
rcrl
lcall
hlt
jge
cmc
ret
ds
test
aam
aas
xor
lods
outsl
int3
adc
mov
and
jmp
jne
and
and
push
inc
and
fistpll
mov
push
ret
ds
cs
shl
sbb
cld
jle
shr
push
xchg
insl
pushf
call
dec
inc
cmp
stc
stc
xchg
sbb
out
and
mov
mov
leave
jmp
iret
out
das
mov
sub
push
loop
lret
fmuls
fisttps
jae
xor
cs
popf
ror
add
mov
mov
fisttpll
out
mov
test
cmp
jnp
mov
or
roll
test
push
xor
xchg
jl,pt
push
out
and
in
sbb
fnsave
pop
jnp
or
arpl
sub
adc
or
jne
fimull
pop
xchg
xor
or
or
sbb
aad
mov
mov
lds
lds
pop
out
mov
or
dec
in
test
mov
fstl
cmpsb
inc
loop
mov
pop
xchg
inc
or
std
jg
xchg
pop
mov
fistpl
adc
je
mov
fisttpl
insl
test
jle
daa
je
mov
mov
jmp
push
pop
shrb
add
daa
dec
out
mov
pop
xlat
cmc
xchg
in
sbb
addr16
mov
int
xor
cmp
cmpsl
ja
es
sbb
xchg
adc
outsb
sti
cltd
popa
mov
jmp
shlb
xor
pop
mov
mov
iret
test
cmc
in
jle
mov
sbb
popa
mov
add
adc
pop
dec
lods
inc
jmp
cld
add
inc
mov
in
mov
xlat
adc
addr16
dec
add
adc
addr16
in
adc
icebp
pop
ja
imul
push
aas
jae
mov
aad
stc
fistpl
enter
xchg
dec
imul
test
inc
cmpsl
lahf
xor
pop
jecxz
loop
int
cltd
mov
test
jbe
sub
dec
fmul
jo
sbb
push
adc
sub
xlat
dec
push
xor
inc
xor
lods
inc
jmp
jp
nop
push
adc
fcmovb
aas
test
cwtl
sbbb
aas
rcl
sahf
ss
xor
push
cmp
push
jno
jae
sti
fisubrs
xor
xor
movsb
xor
popl
cmp
mov
push
add
lahf
jl
xor
jns
stc
enter
pop
sbb
sbb
cmp
stc
aas
repz
aam
fisttps
sub
push
daa
aaa
or
jmp
aad
jae
addr16
xor
sbb
fstp
sub
ffreep
stc
mov
mov
mov
es
mov
jp
jmp
pop
shl
fdivl
dec
xlat
mov
stos
and
mov
bnd
push
jmp
push
test
movsl
cmp
or
mov
pop
mov
call
mov
sub
outsb
addl
scas
ss
stos
ficompl
in
dec
hlt
cmp
pop
fs
adc
jnp
and
inc
mov
inc
test
pop
rorl
repz
in
stos
jge
mov
mov
inc
xchg
sbb
push
mov
fwait
xchg
adc
and
add
mov
inc
outsl
ret
lret
divb
mov
cmp
iret
sbb
push
adc
xor
cmpl
loope
aaa
push
xlat
jge
cmp
stc
jp
jp
ret
xorl
jns
mov
in
jne
dec
ret
ds
adc
int
inc
insl
negl
pop
xlat
orl
mov
inc
adc
cmpsl
xchg
xor
rclb
negb
push
fnstenv
movsb
mov
sti
outsb
loopne
or
sbb
push
sahf
mov
inc
test
push
stos
mov
rcrb
and
sbbb
loop
pushf
lock
orl
stc
mov
dec
dec
sbb
xchg
repz
or
and
adc
leave
sub
ret
jnp
dec
mov
out
xor
xchg
cmc
push
negl
rcrl
nop
in
out
mov
loopne
ja
daa
mov
inc
lock
inc
or
xchg
adc
jmp
mov
aas
test
xor
cmc
mov
pop
or
jp
xlat
mov
jnp
rcll
xor
lret
and
pop
je
pusha
and
xchg
pop
pop
pop
out
add
jl
push
inc
js
push
mov
xor
std
mov
add
push
or
push
push
cmpsb
icebp
adc
ss
dec
test
xchg
pop
pushf
loopne
out
or
mov
jle
push
mov
scas
mov
repnz
jno
sete
dec
inc
add
pop
lcall
enter
push
cs
mov
and
or
int
bound
idiv
aaa
jne
in
and
lret
add
repnz
xchg
bnd
mov
mov
jg
rcrb
int3
loopne
dec
lods
dec
out
cmp
js
out
push
mov
jl
pop
mov
or
pop
sti
xchg
add
out
enter
les
xchg
loopne
bound
sbb
into
into
movsb
and
in
xchg
mov
mov
mov
sbb
test
pop
inc
inc
jbe
xchg
mov
and
stos
jbe
clc
insb
out
jb
jmp
jno
fildll
jae
mov
push
xor
push
cmp
fisubs
mov
xor
jo
push
mov
or
mov
sub
xchg
mull
loop
xchg
insb
push
dec
add
jl
push
imul
jo
mov
shr
dec
xor
call
loope
push
push
inc
loop
mov
dec
cmpsb
xchg
fxtract
or
lcall
aad
xchg
mov
enter
xchg
insl
sbb
mov
adc
loope
js
adc
lock
movsb
lods
sbb
or
mov
fcmovbe
adc
out
mov
pop
mov
and
push
pop
mov
cmp
cmpsl
sub
push
jge
xchg
and
add
scas
jg
ret
cltd
add
outsb
mov
xor
bswap
ror
js,pt
cmp
jg
pop
cld
test
aaa
lret
add
or
push
daa
dec
or
mov
subl
sbb
mov
es
out
and
mov
adc
call
xor
pop
fxtract
sti
mov
cmp
lock
cmp
sub
jge
and
cmpsl
mov
sar
inc
movntps
inc
gs
adc
stos
lahf
xor
sub
jp
and
mov
add
ljmp
insl
cmpsl
pop
or
jecxz
movsb
addr16
mov
and
push
cmp
or
mov
adc
lahf
inc
pop
aam
mov
push
push
mov
fst
sub
pop
add
sub
adc
mov
pop
int
adc
int
repnz
xor
push
cli
cmpsb
cmp
fwait
icebp
and
adc
or
js
mulb
aaa
pop
outsl
mov
mov
mov
lods
dec
fistl
adcl
in
fildll
outsb
scas
fld
mov
test
gs
adc
mov
adc
dec
call
jmp
ja
jae
cltd
test
xchg
push
inc
cmp
movsl
pop
jmp
cmc
ljmp
jmp
movsb
je
out
jo
adc
xchg
and
scas
mov
adc
addr16
jp
ljmp
xchg
mov
popa
push
repz
inc
push
push
xor
loop
icebp
cmpl
mov
xor
mov
cmp
jle
cwtl
cli
cmpsl
jmp
imul
sbb
dec
mov
ss
cmc
mov
cld
inc
mov
xchg
adc
jno
lcall
push
sti
push
xor
mov
push
sub
add
arpl
push
pusha
jbe
insl
lret
add
movsl
jnp
shrl
mov
aad
xchg
in
stos
push
mov
sub
popa
fs
dec
stos
pop
outsb
pop
loope
jae
and
insl
loopne
imul
sub
xor
aas
add
mov
arpl
mov
push
mov
mov
cmpsl
mov
push
adc
xor
push
rclb
dec
test
cmp
test
lods
or
outsb
frstor
mov
xchg
scas
jno
adc
inc
push
shlb
jecxz
adc
fidivrl
repz
enter
loop
jmp
mov
xchg
lods
nop
fs
test
jb
cmp
pop
repz
jecxz
jle
cmp
adc
xchg
xchg
sub
mov
loop
adc
loopne
and
mov
fstps
je
ds
or
cmc
repz
sub
add
jae
mov
cmpsb
sub
sti
mov
jmp
in
in
mov
sbb
stc
inc
hlt
ret
and
lock
loop
push
xchg
add
pop
mov
mov
or
lds
inc
pop
into
sbb
inc
xchg
mov
pop
shll
xchg
mov
lods
fwait
xor
jne
popf
jl
aad
xchg
fs
xchg
fs
aas
mov
jo
sahf
mov
jae
jl
scas
pushf
pop
loop
adc
mov
loop
mov
aad
cli
inc
loopne
push
fsts
mov
fstpt
ret
xchg
xor
lret
or
pop
loop
js
out
jge
pop
inc
cld
jae
adc
xor
imul
xchg
movsb
cmc
pop
fldcw
dec
pop
sarl
pop
mov
jl
in
jno
inc
mov
iret
stos
into
pop
aad
data16
mov
mov
or
sbb
fisubrs
adc
sub
lret
jl
adc
pop
fdivrs
cmc
sbb
ds
dec
dec
mov
notl
dec
pop
mov
jb
sub
pop
hlt
aas
lret
insb
push
scas
push
add
in
jno
pop
xor
sarb
fisttpll
rolb
sub
adc
fistl
fbld
cld
mov
inc
mov
mov
dec
inc
out
mov
adc
in
enter
pop
enter
pop
xchg
mov
int3
lock
fdivr
mov
sbb
xchg
adc
xchg
cwtl
pop
mov
sub
les
fs
dec
je
sbb
int3
bound
push
xor
mov
outsb
into
or
jl
xchg
xchg
aaa
ret
rolb
test
sbb
inc
push
dec
xlat
lds
lahf
fistpll
pop
xor
into
cmp
xor
mov
push
cltd
shll
leave
iret
push
jns
lods
push
shrl
pop
or
fcompl
jmp
xchg
mov
stc
stos
fnstsw
sbb
xchg
sub
jg
fcoms
dec
sbb
pushf
xchg
push
aam
jl
add
fwait
jae
or
je
mov
cs
rcrl
or
mov
in
dec
inc
inc
pop
sub
inc
jns
or
ss
std
sub
insb
push
mov
push
nop
sbb
adc
out
mov
out
adc
nop
pop
jb
in
mov
repnz
dec
inc
popa
rclb
jo
int
outsb
mov
push
xchg
xchg
add
clc
pop
sbb
mov
xchg
sti
faddp
mov
cmp
hlt
pop
pop
pop
xchg
int
xor
sub
sub
gs
pop
inc
sub
xor
iret
jmp
and
lock
cmc
lock
cli
or
push
icebp
lahf
fcoml
movsb
lods
xchg
adc
xor
mov
dec
and
dec
out
inc
sub
bound
lcall
sbb
sub
insb
in
lock
xlat
or
test
cmovs
xchg
cmp
pushf
fwait
mov
into
lea
cmp
xchg
cs
data16
addr16
mov
cld
mov
xchg
sbb
sbb
and
inc
out
nop
roll
or
mov
push
sub
sbb
mov
add
xchg
inc
adc
pop
fidivrl
negb
jg
pop
dec
mov
dec
orb
push
xchg
cli
cs
je
gs
loope
push
mov
adc
cmp
sub
xchg
jge
les
call
out
mull
cmp
pop
dec
pop
push
jae
mov
lea
pop
and
mov
repz
popl
cmpsb
les
jo
cmp
inc
adc
ljmp
mov
add
and
or
inc
insl
pop
jno
sahf
les
or
test
pop
inc
push
popf
push
pop
jb
std
sbb
in
stc
cmp
lock
adc
mov
cmp
cmpsb
popa
jg
fdivrl
lret
xor
aam
or
aam
inc
mov
popf
lock
outsl
pop
pop
or
out
push
scas
mov
ds
shlb
insl
pusha
or
lea
add
mov
orl
pusha
rcrl
pop
mov
fisttps
outsb
jg
xor
shll
cmpsl
and
imul
jl
jmp
es
popf
lods
pop
add
mov
mov
add
in
fs
cmp
call
mov
cmpsl
idivl
adc
in
stc
mov
sahf
repz
inc
lock
shl
addl
add
repnz
mov
out
test
pop
inc
jae
push
adc
add
adc
test
cmp
and
lds
xlat
sahf
test
xchg
jmp
jecxz
jle
fs
pop
pop
dec
xchg
cmc
xor
mov
xchg
fs
cwtl
fisttps
andb
jge
pop
mov
scas
hlt
sbb
daa
cmp
leave
arpl
push
out
arpl
dec
xor
sub
dec
es
rcr
mov
xchg
out
pushf
fs
push
aaa
and
jp
sti
roll
add
mov
inc
mov
cmp
clc
scas
movsb
and
fidivrl
pop
cmp
sub
pop
jns
or
push
jp
pop
in
cmp
xor
inc
out
out
arpl
push
lods
sbb
idivl
into
sub
outsb
mov
add
xchg
dec
mov
out
sub
inc
push
cmp
out
sbb
aas
mov
scas
nop
and
push
movsb
scas
sub
ffree
cmp
or
add
add
mov
insl
insb
xor
mov
ret
mov
and
mov
xchg
xchg
lret
testb
lea
mov
jae
sub
mov
add
outsl
outsl
insl
xchg
jns
push
adc
sub
in
push
mov
cltd
insl
jge
fmul
cmp
adc
repz
leave
cmp
cmp
movsl
push
adc
jge
movsl
ret
mov
sbb
rol
or
and
sbb
jge
push
cmp
repz
lea
sti
xor
out
or
pusha
fistpll
stos
pop
dec
sub
sbb
fiadds
pop
addr16
test
mov
mov
daa
pop
jno
dec
and
aas
leave
movsb
jne
xor
jns
test
pop
sub
fbstp
xor
pop
jno
jo
xchg
cwtl
mov
mov
stc
cmp
jmp
inc
mov
in
jns
jb
inc
xchg
push
add
enter
test
test
or
test
ja
adc
jp
push
cli
or
pop
adcl
sbb
pop
jnp
data16
jl
je
xor
jno
push
sbb
ret
mov
push
aas
pop
adc
pop
icebp
pop
fdiv
sub
xchg
mov
mov
imul
push
sbb
inc
pop
fbld
stos
xchg
push
les
fld1
in
movsb
adc
fnstsw
pop
jge
dec
fninit
mov
icebp
inc
insl
jo
fwait
push
mov
or
mov
jae
stos
popa
pusha
cmpsl
fstps
jg
out
sub
stos
imul
add
test
in
xorb
adc
push
push
testb
les
aam
test
cmpl
out
sub
outsb
aad
push
mov
and
int
out
cmp
stc
pop
push
fs
cwtl
aaa
pop
cmp
lods
sbb
pushf
xchg
add
add
fistpl
je
jmp
sub
dec
ss
fildll
lahf
test
iret
and
dec
pop
pop
in
shr
test
dec
adc
push
stc
repnz
je
xchg
add
cmp
cmc
push
jno
aad
test
dec
cld
imul
jno
mov
mov
sti
pop
in
pop
dec
mov
cmc
xchg
ror
or
scas
ja
adc
dec
mov
aas
faddl
jae
hlt
ret
pop
in
out
rcrl
inc
adcl
shrl
lds
divl
push
rep
mov
sbb
push
mov
cmp
sbb
lods
jb
sbb
mov
cs
aas
pushf
xorb
subl
or
shll
mov
lret
jo
stos
push
outsb
sbb
lcall
imul
and
sbb
fs
cld
movsb
test
inc
in
pop
popa
subl
xor
mov
les
add
push
dec
xchg
insb
iret
push
push
pop
mov
ds
add
enter
shlb
scas
loopne
jne
mov
mov
mov
inc
out
fmull
pop
mov
jne
push
inc
sbb
es
jo
in
call
bound
stos
jno
mov
xchg
inc
call
ljmp
lods
sahf
pop
fidivrs
sbb
fcmovne
dec
cltd
pop
cmp
sbb
rcrb
jno
nop
sbb
pop
enter
inc
jl
das
rcr
mov
shll
fs
mov
jl
in
lret
mov
out
sub
fisubrs
pushf
mov
xchg
add
out
mov
mov
mov
xchg
es
gs
stos
cmp
mov
ljmp
xchg
fwait
leave
fcoml
in
fnsave
cltd
inc
out
repz
sub
std
pop
out
jmp
sbb
add
leave
gs
cmp
inc
js
mov
pop
mov
mov
jno
int3
ret
push
inc
nop
dec
inc
mov
adc
dec
push
add
enter
push
arpl
cmp
andb
mov
adc
or
jo
pushf
adc
repz
movaps
xchg
in
inc
mov
or
stos
loope
mov
cld
sbb
mov
jno
xchg
scas
aad
test
test
fbld
gs
xor
enter
lods
ja
sbb
sub
dec
pushf
add
int3
bound
mov
ret
adc
cmp
fwait
xor
fsubp
xchg
sub
ror
aam
pusha
stos
stc
inc
aad
ds
test
mov
jmp
lods
mov
hlt
pop
nop
adc
mov
jge
mov
inc
fs
cmc
nop
std
loop
inc
scas
negl
adc
pop
xor
std
mov
jle
mov
dec
mov
mov
xor
insl
pop
add
sub
sub
arpl
frstor
xor
pop
lods
imul
fistps
popa
sub
sbb
mov
push
aas
inc
sbb
mov
and
and
lahf
clc
mov
out
nop
sahf
xchg
add
sbb
mov
push
and
pop
outsb
testb
lods
fcmovne
mov
arpl
or
pushf
pop
xor
xchg
push
shl
xchg
divl
ja
xorl
push
add
pushf
jg
push
jne
lahf
push
xchg
repz
xor
nop
ss
cmpsl
dec
out
sbb
adc
ret
sub
cmpsl
cmc
jne
lods
mov
shrl
sub
xorb
jae
sbb
outsl
sub
xchg
fidivl
mov
jg
into
pushf
addr16
lret
push
leave
jmp
lea
popa
xchg
into
stos
xor
addr16
xor
push
sar
pop
ds
push
push
in
sti
jb
test
push
pop
insb
sub
sbb
push
sub
push
mov
stos
test
dec
xchg
out
enter
inc
adc
xor
aam
lds
push
aaa
sub
jecxz
cmc
jns
adc
ret
cltd
cmp
cmpl
sub
out
rolb
icebp
cmp
dec
hlt
js
push
sub
insl
sub
enter
mov
and
push
mov
adc
int3
dec
jae
cmp
rolb
jo
fstp
fucomi
sahf
imul
fdivs
test
popa
shlb
or
and
int
mov
xor
scas
mov
cltd
testl
hlt
and
sti
dec
ficoms
out
sub
xchg
or
das
or
leave
stc
pushf
lret
mov
mov
lea
add
xchg
push
in
sbb
iret
mov
pop
cwtl
jle
mov
mov
pop
mov
cmp
adc
js
js
jno
dec
ljmp
pop
popf
shll
aas
xchg
pop
pop
popl
xchg
sti
test
fcmovnbe
jmp
push
fwait
ljmp
aam
sbb
imul
xchg
sub
cmpb
pop
lock
lahf
repnz
loop
mov
xor
fiadds
mov
adc
dec
push
das
movsb
loop
push
lods
cmc
fwait
ss
cmc
dec
mov
mov
arpl
sbb
ljmp
jnp
aam
push
pop
scas
xor
repz
mov
or
in
add
addr16
lahf
xlat
cmpsl
sbb
add
dec
mov
sbb
jae
xchg
je
dec
hlt
movsl
mov
pop
test
jb
pop
xor
ljmp
outsb
mov
cmp
xacquire
jle
test
adc
adc
and
cwtl
nop
in
mov
ss
fnstcw
sbb
fidivs
cwtl
mov
xor
andb
xor
mov
and
lea
mov
test
movsl
int
out
cmc
stos
cmp
loopne
xchg
cltd
jmp
shr
cmpsl
sbb
add
xchg
ret
and
pop
mul
jae
lret
xchg
ljmp
int3
shlb
in
pop
inc
push
jo
sub
and
inc
scas
jg
ljmp
aas
sub
enter
stos
leave
or
dec
push
mov
adc
inc
ss
pop
inc
sahf
rolb
and
out
adc
jge
jnp
inc
pop
cmovl
mov
leave
xor
rolb
xchg
push
sarl
leave
aas
jns
je
xchg
imulb
jne
cmp
cmp
cmp
fnstcw
imul
fcompl
jno
add
ja
add
xchg
adc
jmp
lcall
arpl
cmp
push
cwtl
xor
stc
popf
cmpb
jecxz
lahf
sub
out
fstpt
cmc
les
adc
scas
lret
adc
jmp
stos
mov
push
lret
xor
test
sub
out
push
std
rol
je
addr16
testb
enter
cli
lods
stos
xor
dec
int
pop
int
xor
fwait
inc
add
fmull
fsubs
popa
and
pop
pop
push
push
clc
xor
jae
in
sbb
mov
fnsave
push
lds
xchg
xchg
stos
jle
inc
fs
jp
and
bnd
in
sahf
popf
and
scas
repnz
sub
pop
add
aaa
sti
sub
sbb
pushf
xor
int
or
xchg
sbb
lahf
jnp
es
mov
mov
movl
mov
fcomps
ficoms
pop
daa
and
enter
push
push
xchg
inc
das
leave
push
pushf
cmpsb
add
sahf
lret
inc
and
int3
mov
push
xchg
lret
inc
xlat
repz
mov
or
clc
pusha
and
clc
push
mov
push
push
xchg
push
or
rcrl
pop
adc
ret
imul
adc
sbb
mov
mov
lcall
aaa
sub
and
inc
xchg
test
sahf
mov
das
imul
shll
sub
mov
lods
pusha
test
xchg
sbb
js
jl
shlb
mov
cltd
push
fildl
pop
iret
imul
mov
and
outsl
test
sbb
nop
fucomp
rcrb
out
and
js
inc
inc
mov
push
adc
sub
pop
mov
xor
lods
cmpsl
lock
inc
je
movsb
xor
mov
push
insl
leave
sbbl
in
push
pop
sbb
xchg
jecxz
lahf
xor
jae
lods
push
clc
mov
cs
mov
pop
mov
test
lds
dec
test
mov
sbb
mov
stos
daa
mov
inc
or
xchg
xor
push
jo
adc
push
lods
inc
dec
dec
mov
lock
inc
push
pusha
pop
ss
popf
sbb
les
xlat
or
orl
sub
movsl
cmp
push
or
add
xchg
push
sub
out
push
stos
mov
xchg
rcll
xor
or
add
add
pop
rcll
push
inc
loope
arpl
or
pusha
nop
inc
push
xchg
mov
mov
or
or
adcb
dec
push
push
and
push
mov
xchg
add
lret
nop
or
xchg
jg
lea
fcomp
jmp
inc
faddl
out
imul
push
insb
std
ret
es
sti
loopne,pt
jmp
sbb
mov
lahf
jnp
pop
pop
repnz
cmp
sbb
sub
dec
aas
and
lods
lods
mov
addr16
adc
in
inc
je
mov
in
dec
sub
mov
in
jge
into
in
out
mov
jnp
pop
mov
mov
xor
lods
sahf
sub
lret
push
stc
aaa
jo
inc
push
mov
mov
arpl
mov
ret
negb
sar
push
daa
stc
mov
adc
mov
pop
aaa
cmp
xchg
push
out
dec
and
icebp
pop
and
repnz
fninit
fidivl
repnz
xchg
fwait
movb
arpl
scas
ja
jg
and
sbb
int3
xchg
out
mov
fs
scas
adc
push
push
mov
fisttps
sbb
leave
rcrl
cmpsl
sub
arpl
or
nop
mov
or
xor
sbbb
dec
or
shr
aaa
mov
inc
sbb
or
fsubrs
cmp
jmp
fwait
add
outsl
pop
add
cmp
push
and
mov
sbb
lods
std
test
inc
std
lods
sub
cmp
cmp
cmp
and
pop
fwait
mov
sti
mov
dec
divl
cmc
push
sub
mov
add
pop
xchg
xorb
sarl
call
pop
sarl
rorb
movsl
call
jo
and
fidivrs
call
pop
mov
test
and
out
filds
test
xchg
rcrl
add
outsb
adcb
mov
movb
pushl
add
lea
pop
call
jp
inc
mov
into
push
jmp
int3
cmp
jae
cmpsl
outsl
sarl
mov
sbb
in
sbb
cltd
sbb
mov
dec
inc
pop
push
lcall
mov
mov
dec
pop
das
cmp
ficomps
cwtl
xchg
out
movsb
inc
inc
xor
iret
pop
add
dec
dec
fwait
mov
inc
jo
lods
xchg
sbb
mov
out
repz
dec
fidivrs
jnp
sbb
notl
cld
test
mov
fists
loopne
xchg
adc
pop
test
test
call
shl
or
xor
fsts
ljmp
jle
pop
fstpl
lret
outsb
xchg
repz
and
jle
mov
jge
pop
sub
sub
inc
mov
addr16
outsl
ss
dec
mov
shr
sbb
nop
cmc
das
int
mov
cli
jnp
or
daa
rcrb
pop
jbe
push
popl
push
pop
sarb
lcall
fisubs
xchg
push
mov
dec
aas
jns
pop
inc
ljmp
pushf
adc
xchg
sbb
and
xor
movsb
push
loopne
fists
mov
and
repnz
mov
jmp
fs
mov
adc
imul
ss
test
rcrb
ror
inc
test
cmp
mov
dec
lret
aas
push
lods
jae
sti
lods
cmpsb
rcrb
mov
mov
push
hlt
mov
nop
les
mov
insl
gs
mov
or
in
push
dec
insl
and
les
pop
aad
push
push
lods
add
out
lds
add
inc
or
cs
jecxz
mov
jmp
pop
out
or
jle
mov
and
jne
or
mov
dec
jo
shlb
mov
jge
jbe
bnd
fsts
imul
adc
lds
insl
stos
cwtl
mov
jle
mov
es
lods
or
fisubs
mov
out
mov
pop
mov
mov
inc
ja
mov
inc
sbb
lret
pop
and
dec
scas
scas
lock
es
add
fisubs
or
mov
sbb
insb
inc
push
adc
inc
aas
out
sbb
pop
mov
pop
ljmp
adc
xor
xor
pop
pop
sub
mov
ds
ljmp
mov
mov
loopne
aaa
inc
add
jne
xor
jecxz
xor
insl
jnp
jno
push
and
push
cmp
jmp
lret
inc
xchg
mov
jp
ret
gs
mul
int
push
cmpsb
mov
outsb
mov
xchg
clc
cmp
data16
adc
fbld
clc
ds
lods
shll
shrl
lcall
push
fdiv
test
lods
call
in
scas
mov
xchg
mov
shlb
loopne
mov
pop
pop
pop
int3
sub
xchg
in
or
cwtl
jmp
fstpl
and
jecxz
sbb
dec
stc
sub
cs
cmp
jg
pop
xor
cmc
cmpl
jecxz
ficompl
add
add
xchg
imul
dec
test
jnp
xchg
pop
lock
add
int
dec
stos
out
mov
subl
out
pusha
addl
daa
inc
sub
jge
test
out
xchg
mov
outsl
ret
jno
daa
notl
fsubr
subb
mov
mov
roll
cmpsb
aas
shlb
test
jecxz
jl
in
jb
movsb
test
jns
es
fcom
std
pusha
push
inc
sub
hlt
out
out
jne
fdivrl
adc
or
cld
dec
adc
repz
in
icebp
pop
push
lret
jge
xchg
sub
cmp
mov
hlt
cmp
mov
push
in
cmpsb
lret
xchg
and
adc
xor
mov
push
jge
adc
mov
sahf
ss
xor
xlat
data16
pop
repnz
mov
loope
out
nop
call
sub
push
cmpl
movsb
cmp
xor
insl
fstpl
push
or
lock
dec
pop
lods
jno
xchg
mov
mov
loope,pt
jne
imul
mov
stos
mov
mov
mov
andb
daa
inc
pop
hlt
or
add
jns
cli
pop
lea
ds
ret
int
or
inc
inc
push
out
mov
fs
sti
ljmp
push
cmpl
dec
nop
cli
pop
test
rorl
aas
adc
mov
sar
pusha
hlt
sbb
pop
jmp
inc
sbb
jno
xchg
sbbb
leave
je
cmp
jo
inc
mov
test
mov
lcall
cmp
mov
cli
insl
add
loop
lea
pop
ja
push
sbb
loopne
jns
sbb
and
lret
call
leave
jg
fcmovu
arpl
pushf
fdivrs
pop
andb
mov
pop
add
mov
pop
sub
stc
push
in
push
rol
pop
mov
sub
mov
lcall
shll
icebp
push
leave
jmp
pop
inc
jno
jmp
gs
xchg
cmp
sarb
arpl
mov
push
sub
sbb
lea
or
dec
push
mov
fisubrs
xor
ret
bound
in
jnp
in
test
and
stos
ret
in
push
test
jecxz
aas
aam
shlb
fstl
adc
sahf
ljmp
jg
jnp
cmp
inc
push
out
pop
mov
mov
dec
arpl
xchg
adc
insb
bound
jg
pop
jae
into
scas
xor
xor
adc
shll
mov
push
pop
bound
mov
inc
pop
push
mov
add
add
add
push
into
into
mov
stos
sub
mov
out
test
or
adc
stos
mov
into
lret
cmp
inc
cmpsb
push
push
arpl
and
out
test
and
outsb
cmp
lcall
test
push
add
inc
push
fwait
or
lret
sbb
insl
xchg
pop
adc
xchg
mov
imul
add
cmp
repz
push
sbbb
xchg
test
iret
inc
cmpsl
mov
dec
add
cmp
iret
jge
mov
or
addr16
pop
push
jecxz
ljmp
movsb
outsb
ret
xor
movsl
push
fistpl
fadd
mov
outsl
shrb
out
dec
xor
dec
cltd
xchg
cltd
dec
and
mov
jecxz
push
pushf
ja
dec
cmp
xorl
das
inc
jne
jne
fstp
test
minps
push
arpl
cld
stos
loop
lock
jl
iret
push
lcall
push
rcll
xchg
aam
imul
mov
dec
jbe
gs
jo
pop
add
or
xchg
jnp
xchg
mov
pop
mov
pop
sub
and
dec
inc
lods
sub
or
or
push
mov
jecxz
xchg
fdivl
cmpsb
fildl
jnp
push
adc
cmp
mov
aaa
repnz
sbb
add
das
mov
in
cmp
int3
bound
insb
pop
scas
pushf
sti
je
jmp
pop
push
jmp
test
lds
out
mov
inc
or
sbb
icebp
fs
cmp
push
fcoms
pop
mov
fwait
mov
sub
imull
ret
push
dec
inc
fsts
xor
adc
xchg
jb
or
cmp
add
imul
into
lods
jo
mov
xor
aad
fadds
push
jns
arpl
mov
shl
hlt
cmp
dec
jle
sahf
in
shll
xor
mov
stos
or
enter
lock
sbb
scas
shl
mov
xchg
enter
repz
and
nop
mov
fidivl
scas
push
sub
inc
or
inc
std
push
mov
adc
pop
adc
loopne
jne
xchg
movsl
mov
sbb
and
inc
cmp
insl
mov
addb
inc
jne
mov
loop
push
mov
in
jmp
or
stc
mov
rclb
aaa
rcrl
ret
mov
hlt
pop
mov
mov
lock
jno
pop
js
lods
insl
mov
push
xor
movsl
sbbl
daa
mov
sti
mov
filds
add
rolb
jmp
jge
mov
jge
dec
fwait
jb
adc
sbb
xlat
push
jae
and
les
leave
add
iret
fnstcw
test
aaa
loop
jmp
xlat
inc
dec
fisttps
mov
jp
push
cmc
ja
popa
inc
cmp
xor
xor
mov
mov
pop
dec
or
std
push
cmovbe
add
cs
push
sub
mov
inc
dec
scas
jae
mov
in
lret
inc
jmp
mov
aad
cmp
jns
pop
push
pushaw
cmc
frstor
push
mov
dec
dec
pop
cmpsb
iret
mov
add
leave
out
fwait
jg
loope
add
lds
sub
out
lea
mov
inc
adc
mov
dec
jo
imul
mov
insl
aad
bound
pop
shrl
movsb
sarl
stc
out
fmul
negb
jg
jge
pop
xchg
xor
mov
das
test
mov
mov
xlat
sub
popa
add
sarb
push
mov
or
xchg
lods
iret
cld
mov
or
xchg
bound
inc
sbb
hlt
mov
and
les
and
pop
jecxz
add
ror
mov
movsb
shrb
jns
inc
sbb
ja
sbb
inc
mov
int
in
xor
or
xlat
iret
inc
jb
inc
fadds
pusha
or
js
sbb
push
inc
jbe
aam
push
sbb
xchg
or
mov
jbe
ja
adc
out
sbb
loop
mov
sti
cmp
sbb
jb
sbb
and
or
lds
xchg
pop
rorl
rorb
xchg
js
clc
pop
out
inc
cmp
adc
ss
sarb
jl
cmp
jl
sub
jo
andl
push
call
pusha
ret
mull
inc
inc
or
mov
stc
push
aad
add
stc
aas
push
popf
jecxz
gs
pop
cwtl
popf
jp
loopne
or
dec
imul
and
xchg
cmpsb
outsl
stos
call
xchg
push
lret
mov
and
pop
dec
cmpsb
cmpsl
lahf
adc
roll
mov
cld
fisttps
imul
stos
adcb
dec
mov
push
movsb
bound
jbe
loop
pop
mov
jnp
test
push
adc
push
into
inc
add
jbe
ret
xchg
mov
cmp
shll
push
pushf
repz
mov
stc
and
aaa
rep
add
pop
fwait
cli
lcall
mov
fildll
test
aaa
je
pop
xchg
sbb
sbb
mov
imul
push
adc
pop
fcoml
sarb
xchg
pop
scas
bound
loopne
fwait
shll
jp
cmp
insl
in
pop
das
insl
leave
mov
dec
fdivrl
push
cmp
and
push
daa
mov
insl
icebp
add
gs
lret
inc
dec
mov
daa
fwait
in
pop
mov
imul
pop
inc
loope
mov
jb
and
add
decb
jge
lock
nop
xchg
int3
sahf
inc
imul
sbb
lock
cmp
ficomps
int3
xor
std
pop
xchg
andb
push
idivb
sbb
in
push
arpl
mov
xchg
sbb
xor
roll
aad
test
pusha
dec
mov
fnstsw
scas
fcmovnb
or
adc
mov
sahf
aaa
jmp
xchg
cld
lcall
out
mov
push
mov
jno
in
frstor
insl
jg
xor
pop
mov
pop
jl
pop
cmpsl
aad
inc
outsb
loopne
mov
icebp
iret
cmc
clc
adc
insl
mov
push
or
push
xchg
mov
inc
test
cmp
int
xor
jno
aas
imul
sub
inc
jnp
or
fisubrl
lahf
cmp
ljmp
cmp
mov
push
sahf
fsub
jno
pop
out
lcall
call
inc
test
outsl
clc
lret
cs
mul
pop
out
xorb
adc
mov
in
jno
jp
dec
cmp
mov
test
inc
das
pushf
xchg
fwait
mov
in
cwtl
adc
push
pop
dec
xchg
sarl
outsl
adc
add
add
popa
jne
addl
fstpt
cwtl
fwait
jge
lods
add
push
xor
xor
pop
mov
push
cmc
call
call
mov
stos
test
mov
jno
push
pop
ret
jmp
jns
and
add
test
ret
inc
push
lcall
fsubs
dec
jmp
jne
andl
xchg
adcb
sbb
xor
in
shl
add
mov
cltd
xor
arpl
dec
pusha
xchg
negb
cmpb
mov
push
inc
jl
shll
sti
and
mov
dec
push
jle
jns
int
je
stc
cmp
cli
ret
sbbb
jle
repz
sub
mov
jp
add
lock
fisubs
adcl
gs
jo
movsb
popa
push
add
pusha
fwait
xlat
mov
sub
xchg
inc
cmp
out
push
je
sti
xor
jge
or
inc
inc
dec
inc
xor
cmp
cli
iret
dec
test
jmp
lock
cld
xchg
adc
xchg
mov
push
push
jo
xor
das
scas
test
inc
mov
adc
add
sbb
ss
popa
sbb
xor
dec
test
int
add
adc
xchg
rolb
pusha
adc
ljmp
adc
in
adc
scas
subl
iret
fcmovb
fdivr
mov
inc
cmp
cmp
mov
push
mov
push
sbb
popf
orb
icebp
xchg
jmp
movsl
rorl
add
jle
jb
pop
fs
cwtl
cs
mov
cmc
sbb
xorl
mov
mov
add
jo
sub
aam
ds
cwtl
hlt
ds
sbb
cmpsl
dec
std
fwait
out
mov
fists
xor
inc
push
xchg
fists
in
dec
sar
pop
jb
mov
icebp
fdivp
fnstsw
mov
mov
aam
add
arpl
arpl
add
je
mov
or
push
push
rorl
fwait
ss
hlt
cli
je
in
cmp
shrl
scas
mov
pop
mov
repz
jno
pusha
xor
pop
outsb
or
std
jecxz
dec
outsl
lods
fwait
mov
xor
sub
out
inc
in
mov
cli
jbe
adc
sub
jmp
or
jb
xor
xchg
adc
dec
mov
in
push
jmp
or
mov
xchg
rcl
int
xor
mov
fisttpll
xor
incb
sti
xchg
push
dec
sub
icebp
insl
stos
adc
dec
mov
aaa
mov
loop
cmc
push
pop
loopne
dec
jb
test
popf
fs
or
das
xor
lods
xlat
bound
in
insb
in
enter
mov
dec
mov
aam
xchg
xor
pushl
in
cmp
mov
repz
gs
es
add
or
lahf
adc
je
push
mov
push
dec
cld
stos
xchg
shlb
dec
sub
ficompl
or
ss
xor
in
adc
push
daa
inc
movsl
shlb
xchg
mov
mov
dec
out
xchg
repz
leave
dec
jmp
shrl
movsb
jmp
in
test
inc
es
and
jnp
rol
stc
icebp
lds
out
ret
mov
xor
cld
in
rorb
xchg
cmpsl
ret
mov
lret
xchg
imul
dec
call
out
testb
push
mov
cmpsl
or
cmp
roll
shl
shrl
clc
aam
ss
mov
mov
ror
or
repz
sbb
mov
lcall
scas
cmp
pop
jbe
int
xchg
cmp
mov
andl
sub
cmp
jecxz
push
ss
arpl
xchg
shrb
add
cltd
pop
cmp
cmp
and
xor
iret
fisttpl
or
or
daa
and
test
jmp
insb
xchg
mov
sub
cmc
dec
sub
sbb
fwait
xchg
cmc
std
jnp
shll
mov
adc
adc
ret
mov
inc
in
jb
mov
push
dec
cmp
mov
sbb
call
out
imul
or
mov
dec
push
xchg
lret
sub
imul
add
roll
dec
popa
jg
int3
push
and
iret
adc
cmp
cltd
lds
sbb
push
adc
bound
and
shr
add
dec
xor
cld
inc
xchg
hlt
push
xlat
jge
inc
add
push
xchg
and
fs
dec
adc
push
xchg
cmp
ss
insl
ss
test
mov
stc
add
push
adc
sbb
push
call
mov
push
aaa
cwtl
lahf
ljmp
arpl
bound
pop
mov
aaa
or
sbb
pop
in
and
lret
xchg
cmp
fucomp
je
shll
or
arpl
or
dec
fldcw
ds
jnp
fildll
sbb
test
call
mov
or
push
add
cmpsb
not
mov
jns
out
gs
inc
push
cmc
add
mov
or
nop
mov
xchg
mov
lahf
sbb
es
cmp
sahf
sub
stos
out
out
and
pop
clc
dec
ja
sub
stc
add
insl
mov
add
cmpsb
jmp
sub
pop
xlat
push
xor
push
mov
jp
cmp
in
ret
sarl
sbb
cltd
sub
xchg
mov
sub
and
test
scas
insb
mov
popa
movsb
push
mov
mov
ja
test
aas
mov
arpl
sub
pop
pusha
mov
push
cld
movswl
sti
push
lahf
xchg
scas
pop
cld
mov
xchg
loopne
subb
test
sbbb
test
lea
mov
xchg
gs
popf
push
sbb
int
or
adc
nop
cmc
bound
cltd
cmp
movsb
adc
lcall
sti
aad
shld
sahf
sbb
xchg
lret
jnp
setp
jle
outsb
cmp
adc
push
cmp
jle
icebp
xchg
xor
xor
jp
adc
cltd
push
and
jmp
test
mov
sub
mov
xor
mov
ffreep
jl
cld
insl
ret
adc
mov
pop
insb
sbb
loope
subps
sti
cmp
mov
xchg
adc
mov
mov
jp
aaa
and
sahf
into
sub
sbb
pusha
dec
mov
jl,pn
or
cli
ss
loope
outsb
pop
push
jns
mov
in
shrl
mov
xchg
mov
push
loop
gs
fbstp
jecxz
jae
jmp
dec
push
lea
outsb
xor
xor
fidivs
adc
sbb
clc
lock
les
out
popa
mov
addb
ret
or
or
orb
mov
jb
inc
add
loop
test
nop
roll
xchg
or
mov
dec
push
or
cmp
shr
lods
inc
shl
mov
mov
mov
pop
mov
mov
fs
repz
cmp
jg
icebp
hlt
in
ljmp
push
pop
sarl
test
pushf
scas
add
fld1
out
cmp
jnp
xor
mov
shll
jge
mov
lock
sbb
stos
icebp
cmp
mov
push
adcb
fwait
and
mov
xor
push
push
jl
es
and
xor
js
ss
ret
xorl
daa
jo
push
cs
jp
jae
dec
cmpl
jmp
int
push
sbb
sbb
loope
push
add
mov
adc
nop
int
adc
jl
icebp
jbe
call
in
pop
pop
mov
shl
out
addr16
mov
insb
add
jmp
pop
jge
mov
sarl
mov
iret
push
push
lods
sbb
out
sbb
test
lcall
or
cmpsb
adc
sti
sbb
push
test
mov
out
push
sub
repz
mov
or
dec
pushf
test
in
sub
mov
inc
mov
inc
jns
outsl
popf
or
jo
out
inc
or
push
push
add
jmp
nop
sbb
adc
mov
xlat
mov
lahf
sti
cwtl
sub
cmp
push
xchg
or
lcall
orb
lds
mov
cmpsb
ds
jmp
inc
loope
pushf
nop
popa
cmp
ljmp
popf
pop
push
sbb
loopne
arpl
jmp
test
jg
pop
push
fiaddl
lds
xor
cld
mov
fadds
mov
xchg
idiv
lock
fists
fwait
dec
popa
testl
loope
and
push
in
xor
popa
sti
push
xchg
add
xor
mov
xor
jle
push
push
pusha
or
test
inc
mov
cmp
outsl
adc
cmpsl
sub
mov
out
imul
push
or
gs
jmp
inc
inc
cld
leave
sar
call
cmp
mov
out
pop
sbb
popf
xchg
pop
add
test
shl
pop
popa
and
cmp
pop
mov
inc
mov
enter
mov
xor
mov
xchg
sbb
xchg
mov
mov
ficoms
sbb
sbb
cli
push
and
sbb
dec
in
aam
xchg
dec
sub
mov
pop
popf
sbb
add
divl
ret
mov
push
push
or
loope
shrl
jg
mov
sbb
sbb
cld
jbe
jbe
lahf
jmp
test
push
rcll
sub
out
jmp
sbb
and
mov
enter
xchg
test
cltd
sti
xchg
sbb
lds
rcl
bound
adc
pop
icebp
or
insb
mov
inc
aad
outsb
pusha
mov
pushf
je
xor
iret
jp
jge
push
and
roll
cmpsb
fistps
mov
mov
daa
inc
adc
jo
inc
mov
xor
mov
mov
xor
clc
xchg
stos
mov
xchg
scas
daa
sahf
push
outsb
insl
xchg
push
out
daa
push
dec
ljmp
flds
adc
sbb
cmp
push
push
loopne
shlb
lret
inc
inc
mov
xor
and
mov
mov
xchg
test
iret
ja
les
addr16
push
in
sub
sbb
aas
mov
or
xor
sarl
mov
outsl
xchg
bound
mov
xchg
mov
adc
add
stc
roll
sub
jno
xchg
test
jmp
pop
in
movsl
in
jle
leave
mov
push
mov
call
xchg
popf
xchg
enter
cmp
ja
mov
add
push
xchg
mov
mov
xchg
mov
or
jo
xlat
call
sub
in
push
ljmp
adc
dec
icebp
pop
add
lcall
push
popf
sub
xchg
sbb
outsb
jl
cmp
jmp
cmp
ds
fnstenv
and
xor
and
pop
into
xchg
out
cmp
scas
bound
repnz
xchg
shll
into
push
mov
or
movsl
outsl
imul
mov
cs
and
les
add
sbb
mov
int
cmp
pop
jae
sbb
inc
or
clc
inc
in
cmp
dec
sti
mov
pop
mov
in
loopne
xchg
jns
inc
jmp
addr16
imulb
xchg
test
jp
jmp
mov
mov
xchg
xchg
fdivrs
adc
ds
inc
je
cmp
stos
xchg
data16
aad
stos
jg
es
cmpsb
xchg
testb
dec
pop
loope
dec
fidivrl
and
lds
leave
std
sub
xor
out
push
and
sub
cmp
aaa
jne
dec
stos
out
lods
movsb
lods
pop
cmc
xchg
psrld
popf
sub
jl
push
or
decb
inc
sub
shl
aad
ljmp
into
mov
push
mov
dec
xor
pop
pop
in
jb
jle
pusha
ret
cltd
fdivl
ja
dec
loopne
jecxz
add
sub
xchg
aad
mov
aas
mov
popf
xchg
std
fsub
mov
clc
inc
add
push
in
repnz
cli
ljmp
aad
aaa
mov
int3
dec
hlt
mov
addr16
cmp
cwtl
sbb
xchg
sbb
lods
jl
fsubl
jmp
or
leave
jecxz
js
cmp
pop
ror
pop
add
movsb
adc
fisubl
cmp
lcall
pushf
popa
ret
pushf
lea
aas
dec
and
int
ret
xchg
cmp
outsl
or
cmp
int
test
decl
out
test
or
cmp
mov
js
cmp
xor
daa
dec
adc
jl
mov
cmp
add
adc
jo
sbb
scas
daa
jnp
cwtl
ja
sti
out
bound
lods
mov
and
mov
or
cmp
clc
jnp
sbb
stc
outsb
dec
mov
jb
sbb
and
fsubr
push
movsl
push
in
xor
adc
xlat
dec
hlt
mov
imul
mov
les
rol
cmpsl
pop
ds
jmp
ja
sub
or
mov
fstpt
lea
and
pop
js
sub
pop
dec
push
loop
test
pop
add
sbb
fwait
outsb
push
int3
inc
push
rcll
sahf
daa
pop
mov
mov
popa
jae
lock
fbld
sti
dec
fs
rsm
jnp
movsl
scas
loope
jp
dec
imul
ror
or
xlat
mov
cmp
aad
inc
mov
rcr
les
push
mov
inc
fcoms
shll
movsb
jg
mov
sbb
mov
mov
and
jmp
popf
cmp
mov
mov
fmulp
and
jle
adc
jg
push
adc
sbb
jae
push
lahf
inc
shl
test
divb
cmp
call
mov
scas
sahf
test
cli
loop
daa
sub
sub
xor
cmp
adc
les
add
push
cmp
sbb
pop
sarb
fidivrs
push
mov
mov
push
xchg
lds
mov
pop
mov
xor
mov
adc
ret
sbb
enterw
test
sub
mov
pusha
fstps
ret
add
call
adc
dec
mov
mov
adc
mov
loope
iret
ret
in
jle
add
and
leave
xor
pop
outsb
dec
pop
int3
inc
xchg
ja
sti
mov
test
outsb
scas
xchg
mov
push
mov
xchg
push
jb
cmp
or
or
adc
jae
cmp
jecxz
xchg
push
pop
std
lods
stc
enter
in
sub
xchg
or
sub
push
outsl
pop
pop
xorl
mov
mov
mov
cmp
xor
xlat
lods
xor
xor
xchg
and
push
nop
stos
popa
sbb
pop
rclb
push
ret
sbb
sub
into
and
out
lods
adc
iret
aam
pushf
adc
jno
inc
jp
xchg
inc
loope
mov
inc
sub
dec
cmp
push
ljmp
jmp
rcll
sub
frstor
popf
out
dec
jbe
xor
mov
cli
xchg
rclb
dec
cmc
movsl
pop
loop
jl
in
push
negb
int
or
push
push
repnz
push
adc
mov
adc
in
pop
iret
adc
testl
outsl
and
jp
add
cld
push
enter
push
xlat
push
fnop
mov
mov
jno
pushf
daa
xor
dec
test
imul
in
xor
movl
add
add
pop
les
cmp
adc
lds
hlt
pusha
cmc
inc
pop
fisttpll
mov
xor
or
cltd
or
lds
xchg
push
mov
mov
repz
push
sbb
mov
and
inc
pop
fimuls
and
sarb
inc
sahf
fimuls
pop
jno
rorb
sub
out
rol
adc
push
inc
lret
fsubs
ret
and
pop
mov
inc
push
cli
sbb
add
jge
xchg
pop
dec
faddl
add
xor
fsts
jnp
and
stc
fucomp
daa
jg
push
jl
repz
sbb
xchg
out
ds
dec
adc
data16
lcall
fidivl
xor
mov
mov
mov
mov
xchg
pop
hlt
sti
scas
outsb
dec
imul
inc
rcrl
mov
lahf
shl
sub
sar
test
daa
fidivl
adc
in
cmpsl
cld
divb
fld
loopne
ljmp
les
cwtl
xchg
cltd
pop
pop
cmp
movl
and
cwtl
sub
inc
movsl
jle
imul
mov
data16
push
sarl
repz
fwait
mov
pop
dec
pop
iret
mov
pop
sbbl
imul
xor
out
jnp
mov
and
push
add
cmp
xchg
call
cmp
pop
and
movb
xor
outsl
pop
aaa
jnp
lea
ret
lds
cwtl
adc
mov
in
and
pop
sbb
fdivl
mov
sarb
icebp
sbb
mov
and
pusha
sbb
and
clc
call
jg
pop
xchg
aaa
int3
mov
mov
lea
shlb
enter
mov
cli
jge
and
test
mov
xchg
hlt
cld
in
outsl
ljmp
mov
dec
mov
out
shl
lods
cmp
mov
addr16
xchg
mov
aaa
jnp
push
pop
rorl
jnp
nop
add
orl
mov
cmp
cmpsb
mov
out
lods
pop
repz
push
push
cmc
push
xchg
adc
fiadds
fimuls
popf
int3
cmp
popa
jae
push
mov
stc
rcr
pop
js
insb
test
sub
leave
shrb
das
mov
jl
adc
cli
mov
xor
mov
cli
sub
push
pop
push
fisubl
and
scas
adc
pop
or
lahf
sub
jmp
jo
mov
fsubs
out
cld
sti
mov
xlat
sbbl
add
loop
gs
cld
add
not
inc
dec
add
cmp
sub
cld
push
icebp
fldt
arpl
dec
jno
xchg
mov
push
bswap
int3
stc
clc
sub
cli
xchg
shll
jb
jl
enter
int
mov
orl
scas
push
push
mov
sti
into
mov
iret
imul
js
rcr
mov
mov
or
mov
shl
lds
cmp
jg
imul
or
scas
imul
adc
or
xor
js
pop
cmpb
int
pushf
fsubs
or
sbb
hlt
movsb
lret
in
pop
add
push
ret
scas
mov
outsl
xchg
xor
fmulp
push
push
adc
cmp
inc
inc
leave
mov
mov
xor
sbbb
pusha
les
lcall
xor
cmp
outsb
cmpb
pop
ficoms
cmpsb
pusha
xchg
push
lds
mov
js
fbstp
iret
or
pushl
cmpsl
inc
xlat
ljmp
pop
arpl
and
pop
jge
lea
adcl
scas
ja
movaps
xchg
rorb
and
push
xor
daa
push
pop
push
dec
mov
inc
shlb
aam
insl
test
xchg
jp
cmpsl
pop
push
jae
stos
xchg
pusha
sub
in
jne
cmp
cmpsb
mov
mov
into
sub
push
sub
jb
aad
sub
and
mov
ror
repnz
popa
jg,pt
sbb
insl
pop
or
les
cmp
xor
adc
xchg
fmuls
fs
pop
call
adc
imul
sbb
jg
out
icebp
jo
frstor
popl
je
and
rcrl
push
shlb
hlt
pushf
push
sbb
sub
mov
push
imul
inc
shr
pop
retw
push
mov
mov
and
jnp
xchg
pop
popf
sub
adc
and
clc
mov
popf
insb
xchg
mov
aam
sub
jae
mov
je
push
xchg
or
mov
jmp
scas
push
jmp
or
and
mov
and
rorl
in
shll
push
sahf
cs
and
dec
popf
stos
jp
faddp
lret
loope
xor
divl
div
ds
fbstp
out
inc
cmpsl
pextrw
jle
fldlg2
icebp
sbb
testb
scas
cli
mov
out
cli
and
mov
popf
outsl
adc
xlat
popf
xlat
lret
outsb
je
sbbl
out
xchg
shlb
dec
mov
dec
adc
dec
or
mov
in
pop
xchg
pop
sub
std
dec
and
scas
in
pop
int
add
xchg
fiaddl
push
stc
cld
xchg
sbb
lret
dec
fs
fldenv
ljmp
hlt
std
je
xor
mov
pop
and
or
in
sub
sub
das
add
cs
jbe
pop
lods
rol
lock
and
gs
sbb
lods
adc
shlb
dec
mov
lahf
or
xchg
push
pushf
mov
and
stos
stos
mov
push
jno
ds
call
mov
hlt
xor
test
mov
xor
shrl
enter
leave
cld
ja
mov
lret
test
or
cmp
xchg
mov
cmp
js
mull
push
mov
sti
cld
jbe
gs
lahf
pop
cmc
mov
jb
test
lods
dec
daa
imul
inc
loopne
arpl
ret
insb
mov
xor
cmp
int3
add
out
outsl
loop
adc
leave
test
loope
adc
popa
xchg
fstl
jmp
mov
daa
sub
xchg
jns
out
xchg
mov
ret
fs
mov
pop
push
and
sbb
or
mov
mov
call
dec
test
add
daa
fdivr
in
mov
jae
call
in
push
mov
cld
xlat
adc
fistps
push
push
pop
aaa
in
mov
push
add
xor
fwait
xchg
jg
xchg
sarb
xchg
mov
cmpl
in
jmp
or
idivb
aad
mov
jns
lret
loop
mov
loopne
xor
add
stos
mov
mov
jae
loopne
mov
test
pushf
mov
daa
dec
jmp
fistps
iret
sub
mov
test
xchg
in
xchg
lock
pop
adc
enter
out
adc
scas
mov
push
fisubrs
xchg
xor
push
or
repz
mov
mov
repnz
push
je
addr16
movsb
cltd
pop
cmpsb
movsl
bound
fcompl
jbe
pop
mov
jo
stos
pop
xchg
cmp
data16
mov
out
and
xlat
and
or
push
push
jge
dec
loop
imulb
push
les
mov
out
add
jge
xor
inc
sahf
xchg
or
enter
inc
shrl
pop
mov
mov
aas
insb
fsubrs
add
and
inc
fsubs
dec
scas
lock
cmp
test
mov
ss
in
adc
fldt
fadds
loopne
shrb
cmp
ja
adc
mov
rclb
mov
push
xor
push
ficoml
rclb
out
flds
ljmp
out
addb
fdivr
cmpsb
insl
in
ficoml
pushf
pop
fcmovnu
pop
jno
je
add
shrl
pop
inc
pop
push
inc
xchg
aad
sbb
shrl
add
aas
cmpsb
notb
cmp
les
xor
jnp
vpslld
rcl
and
pop
ret
hlt
ret
aam
xor
rorl
push
adc
sbb
icebp
sub
cli
or
lcall
out
pushf
cmpsl
out
push
xlat
cmp
ds
push
nop
into
jge
ss
sbb
pop
lods
sbb
lcall
pusha
mov
inc
js
shlb
cmp
jnp
and
fs
xor
jecxz
dec
xchg
or
mov
movsb
dec
cld
faddl
sub
pop
cwtl
es
ror
push
nop
pop
pop
adc
int3
add
jmp
mov
lods
test
cmpsb
int
jmp
sub
movsb
repnz
jecxz
jg
cmp
push
pop
out
hlt
repz
xor
test
cmp
add
gs
dec
and
icebp
js
add
jge
xor
movsl
or
ficompl
into
iret
jns
xor
fwait
mov
movsl
sahf
pop
or
je
jns
mov
cwtl
in
loopne
add
shll
movmskps
ss
mov
cli
mov
aas
sarb
xchg
adc
enter
push
sbb
inc
leave
scas
pop
adc
xchg
jg
mov
and
dec
push
repnz
stos
xor
and
jno
insb
mov
lds
fstpt
mov
icebp
rorl
or
xor
cmc
lahf
lgs
push
ljmp
sbb
call
cmp
mov
push
leave
outsb
lret
imul
div
out
add
sub
test
mov
lcall
push
mov
add
daa
push
repz
les
test
mov
xchg
add
stos
push
pop
xchg
xchg
enter
and
aaa
jg
dec
test
test
cmp
push
shrl
xchg
shrl
push
cmp
mov
out
xchg
gs
inc
cmpb
inc
inc
xor
jae
pusha
call
xor
cwtl
ret
ds
xchg
jb
mov
push
stc
repz
hlt
loopne
jecxz
pusha
test
out
xor
pop
push
scas
cli
shll
pop
popf
dec
cmp
mov
mov
ljmp
jno
sub
mov
jmp
into
pop
xchg
icebp
orl
dec
in
fidivrl
mov
xor
fnstsw
aaa
jne
les
push
pop
xor
ret
idivb
nop
movsb
mov
rcrb
xchg
lock
sbb
jno
loope
inc
jne
daa
mov
jge
pop
cltd
mov
xor
lock
nop
jmp
adc
xchg
or
pop
in
mov
sub
xorb
in
inc
xor
cmp
adc
or
jae
repz
push
cmp
in
dec
mov
adc
aam
test
ja
iret
push
mov
out
pop
ret
stos
xor
inc
pop
push
cmp
cs
dec
pop
add
nop
cmp
jmp
repz
mov
movsl
pop
sub
ljmp
pushf
cmp
xor
xchg
and
outsb
popf
pop
cld
jne
aam
das
jno
xchg
iret
jmp
dec
imul
cmc
dec
iret
mov
hlt
mov
inc
jp
push
dec
push
pop
or
xor
insb
insb
push
push
adc
and
addb
fnstsw
shr
mov
loop
fstpl
lods
mov
scas
mov
loope
adc
loopne
push
sbb
adc
cmp
and
cmpsb
js
pop
test
push
sub
or
lret
xor
and
sub
mov
sbb
jns
dec
and
daa
ss
popf
fnstcw
loopne
lock
clc
fs
int
gs
mov
out
jne
mov
out
in
js
fscale
int
cmp
mul
cmp
leave
mov
pushf
pop
jg
repnz
xchg
xchg
jo
xchg
add
leave
and
stos
jg
dec
jp
enter
or
popf
sub
jle
mov
push
push
in
lock
movsb
lods
jnp
pop
xor
test
lahf
push
mov
imul
dec
pop
rolb
xor
adc
lret
mov
dec
mov
orb
cli
push
into
pop
arpl
lcall
mov
sbb
and
sbbb
filds
dec
sbb
jo
out
add
push
jg
test
mov
das
add
mov
sbb
ret
or
imulb
mov
sbb
mov
lods
mov
mov
fiaddl
xor
jbe
xor
insl
push
push
cmpsb
push
testb
popf
fidivs
inc
lcall
out
cmp
iret
sahf
xchg
imul
stos
adc
inc
loop
mov
scas
popf
lds
into
js
cmp
cmp
cmpsl
out
xchg
sti
testl
or
loopne
in
dec
test
dec
lock
aad
mov
mov
arpl
dec
jecxz
add
pushf
lds
cmp
mov
dec
push
mov
repz
repnz
xchg
ficomps
inc
mov
aas
pop
dec
or
push
inc
push
cwtl
aad
iret
imul
jg
icebp
cmpsb
jl
sbb
addr16
fcoml
sub
jg
fsts
push
sbb
vcvtps2dq
in
fisubs
dec
in
inc
ret
sbb
fdivl
mov
push
and
mov
adc
arpl
sub
inc
das
adc
insl
cmp
bound
xlat
nop
call
test
mov
fists
or
gs
stos
sbb
xor
outsl
xchg
jo
pop
dec
call
xchg
jne
pop
add
jmp
inc
loopne
inc
mov
mov
sbb
and
fisubrs
jecxz
jle
outsl
mov
jns
xchg
sbb
aam
insl
es
sti
push
mov
in
mov
pop
aad
test
test
dec
mov
jne
lock
icebp
aad
push
test
sbb
insl
xchg
cmpl
sti
dec
ret
leave
insb
shl
push
inc
mov
daa
imul
scas
jb
inc
into
xor
adc
push
push
push
out
imul
inc
xchg
lcall
movsl
enter
je
enter
leave
shlb
mov
pop
sub
das
cmp
cld
cmp
sbb
test
fiadds
inc
inc
fldt
in
mov
cwtl
out
ja
adc
shrl
outsl
dec
inc
jl
imul
jp
out
lds
dec
out
jnp
mov
clc
enter
cmpsb
pop
dec
jnp
std
xchg
inc
add
jmp
sub
addr16
sub
ljmp
inc
bound
sbb
push
push
add
lret
fld
push
or
push
loope
in
flds
pop
fmulp
mov
in
push
aas
and
adc
daa
imul
dec
xchg
and
jae
push
fbld
in
xor
jle
std
jmp
xchg
jno
adc
frstor
call
scas
cmp
sub
pop
clc
imul
jle
and
pusha
cld
sbb
outsb
lods
xor
iret
mov
push
pop
aad
fs
push
pusha
pop
pop
jmp
add
scas
mov
add
push
fdivs
jg
xorl
arpl
testb
dec
cs
mul
jo
pop
xchg
dec
insl
push
pop
pop
xlat
mov
lods
inc
shrb
pop
push
ljmp
mov
push
into
jne
incl
and
adc
aad
jb
xchg
popa
in
test
fisttps
fnstsw
mov
sti
orb
cltd
pop
dec
out
cmp
test
insb
pop
orl
jbe
and
push
scas
in
sarb
cmp
popw
xchg
cmpsb
ret
fists
cli
test
inc
sub
mov
sub
xchg
lahf
ret
mov
mov
cmpb
in
shlb
cmpsb
jb
lret
and
cld
cmp
test
mov
cld
je
mov
push
mov
mov
add
inc
aam
dec
mov
add
ja
and
outsb
push
dec
cmpsb
ret
test
out
mov
mov
inc
rcr
jae
test
pop
cmp
loope
std
lcall
or
ja
ljmp
imul
fimuls
xor
cmp
mov
leave
imull
and
cli
orl
scas
popf
enter
push
lock
adc
imul
sbb
jle
fs
cmp
sub
and
jmp
mov
sub
mov
push
dec
std
nopl
ljmp
iret
mov
cmp
aaa
or
scas
push
into
add
sti
or
jg
xchg
insb
mov
imul
daa
outsl
or
aas
cvtps2pi
inc
stc
clc
loopne
and
inc
fnstsw
cmp
ljmp
aas
inc
jmp
push
inc
inc
push
cli
or
in
ds
std
add
enter
shll
int
test
repz
mov
or
push
dec
sbb
mov
lahf
lods
mov
xor
sub
in
and
dec
pop
fnsave
add
fbstp
or
mov
int3
dec
jo
sbb
mov
hlt
mov
push
push
jge
sbb
inc
stos
fs
mov
push
jg
in
inc
inc
imul
pushf
xchg
arpl
cmpsb
xor
sbb
fs
jp
test
bound
stos
jae
dec
dec
fdivl
sub
mov
push
inc
adcl
dec
pop
cmpsb
jge
push
push
inc
es
pop
ja
mov
clc
mov
pop
push
addl
xchg
jmp
addb
divl
xchg
mov
filds
rol
adc
sbb
arpl
in
push
hlt
cltd
xorb
xor
dec
push
mov
mov
sar
xchg
das
sarl
or
fwait
xor
mov
hlt
arpl
or
push
sub
sbb
xchg
add
adc
mov
movb
sub
movb
mov
xchg
jbe
lds
push
mov
in
sbb
jp
cmp
imul
add
xchg
push
and
sbb
jp
out
or
out
arpl
mov
mov
outsl
or
adcl
inc
jge
int3
jno
add
addl
dec
push
fcompl
and
inc
lret
cltd
xchg
mov
cmp
mov
mov
or
lock
jnp
je
scas
dec
xchg
lods
adc
xchg
ljmp
ss
mov
fs
lods
stos
fxch
inc
jo
out
push
add
lret
out
mov
xor
and
xor
loop
mov
imul
les
sbb
xchg
fdivrl
inc
adc
in
sbb
aad
stc
mov
sti
fidivrs
lahf
cltd
ss
aas
mov
add
push
loope
rclb
push
xor
outsb
lds
push
mov
in
out
jb
sub
in
pop
pop
push
push
mov
movsl
jmp
sbb
shlb
xchg
addr16
jl
jp
psraw
leave
cmp
insb
scas
in
mov
movl
out
loop
mov
xchg
in
sub
adc
cli
test
xchg
pop
push
jns
les
mov
fmuls
das
pop
fsubl
negl
rcr
and
push
push
mov
pop
xor
add
test
lret
or
ret
cmp
push
stos
jae
xor
mov
jnp
cmp
dec
ret
icebp
ja
or
rcrl
and
es
inc
mov
sbb
jnp
stos
mov
in
incb
aaa
insb
dec
out
sbb
dec
dec
jno
fs
jmp
mov
inc
sub
mov
mov
pop
adc
cmp
xchg
roll
xor
adc
mov
pop
enter
popf
fnstsw
arpl
pushf
fldcw
cmpsb
arpl
ja
mov
fstpt
rol
cwtl
inc
inc
jl
nop
in
jge
sbb
sbb
test
int
rcl
pop
inc
imul
scas
sub
adc
mov
sbb
cmp
test
aam
imul
pushf
lcall
cmpsl
in
int
cmp
cmp
sub
add
mov
inc
xchg
flds
test
sti
lret
sub
lock
sub
test
test
in
push
jae
push
cmp
je
pop
iret
push
cmp
imul
push
mov
push
adc
mov
test
or
in
loope
push
fisubs
push
pop
cwtl
adc
ss
scas
int
sti
stos
sbb
and
or
jl
sub
dec
pop
cli
xchg
push
sbb
mov
mov
fidivrs
xchg
mov
jns
push
xchg
add
int
or
xchg
inc
push
push
aaa
inc
xor
in
fs
sub
mov
imul
cmp
xor
inc
fwait
divb
mov
cmp
popf
scas
repnz
push
inc
je
loope
inc
add
mov
pop
sbb
jbe
ffreep
xchg
mov
lret
add
cmp
hlt
jmp
adc
dec
loope
ja
add
mov
call
xor
xchg
lret
add
pop
popf
push
or
sbb
mov
add
ljmp
mov
inc
cmpb
push
dec
push
pop
sbb
std
sbb
sbb
jno
xor
test
ljmp
in
aas
cmp
jne
pop
cmp
cmp
mov
cld
imul
outsb
movsl
shrb
lahf
jae
clc
or
dec
adc
and
pushf
adc
inc
std
in
aaa
push
mov
test
lahf
test
mov
add
je
pop
fistpll
mov
fsubl
ret
and
stc
test
lods
mov
mov
adc
adc
andb
loopne
js
mov
stos
or
adc
dec
fcom
push
ss
mov
push
push
cmp
mov
lahf
adc
pop
mov
adc
insb
out
lret
add
cs
lcall
cmp
hlt
dec
pop
add
push
inc
sbb
ret
mov
adc
dec
xchg
mov
mov
adc
cmpsl
into
xor
add
mov
popa
sub
repnz
lahf
pop
or
dec
test
aad
xchg
mov
add
mov
add
addr16
lcall
and
daa
xchg
dec
xchg
xor
popa
lret
mov
ds
movsb
imul
outsb
test
pop
and
imul
cs
mov
mov
add
scas
xchg
add
test
sti
xchg
lods
insl
ret
xchg
jb
push
lahf
jb
mov
mul
ss
cltd
mov
xchg
and
push
movsb
add
sbb
jns
dec
shr
pop
ror
or
mov
gs
push
mov
je
xchg
mov
xchg
loopne
adc
ds
lahf
xor
stos
roll
ficoms
or
les
clc
outsl
dec
pop
test
cmp
out
mov
mov
and
data16
push
sbb
inc
xchg
addl
jmp
in
sbb
inc
sub
add
mov
lods
hlt
or
sub
repz
mov
jb
test
pop
add
cmp
jno
loope
imull
push
push
or
fstpt
negl
mov
lcall
mov
scas
xchg
add
sub
clc
outsl
mov
mov
cli
mov
mov
mov
cmpsl
or
into
lret
andb
mov
jg
int
pop
inc
lock
sbb
daa
stos
jo
into
test
mov
test
jae
add
cld
push
enter
insl
mov
mov
imul
icebp
stos
sub
push
int
mov
pusha
pop
mov
icebp
lret
sub
movsl
scas
gs
jae
mov
ljmp
dec
cmovg
mov
callw
adc
lret
pushf
ret
inc
insl
ljmp
addl
out
mov
mov
daa
fcoms
inc
jae
cmpb
pop
mov
or
sub
shl
jae
hlt
cmc
jb
mov
push
fdivs
push
inc
cltd
cmp
cmp
lahf
cmp
cld
sti
sub
out
adc
xor
test
and
shll
mov
mov
mov
pop
dec
sub
ds
mov
adc
jg
adc
popf
push
std
mov
clc
test
sbb
jae
enter
ss
ja
xchg
aam
jle
jge
ljmp
jecxz
jae
aaa
test
sar
inc
mov
lcall
or
fisttps
in
xor
lahf
inc
std
test
out
inc
and
or
jg
lret
sub
test
pop
mov
add
push
fucom
add
add
fucomi
clc
push
cmp
sti
test
pop
adcl
cmc
in
mov
insl
leave
push
int
repz
push
push
loopne
add
adc
mov
jge
push
or
jns
mov
ret
sub
pusha
jne
jg
add
sub
divb
pop
ljmp
roll
dec
je
sbb
mov
idivb
xchg
push
sti
clc
mov
adc
push
mov
lea
shl
iret
xchg
into
or
cmpsl
int
mov
mov
test
dec
xlat
ljmp
icebp
pop
out
lock
lods
adcl
rolb
into
enter
shr
out
cmp
aaa
imull
insb
mov
add
xor
lret
int3
into
pop
mov
or
xlat
jmp
lods
insb
cmc
dec
push
adc
scas
push
cmpsl
gs
xor
jmp
cmpsl
xchg
sbb
xorl
hlt
out
out
ljmp
fimuls
aas
inc
aam
and
dec
xchg
xor
arpl
iret
jecxz
fsubp
movsb
daa
dec
mov
cmp
les
int3
js
mov
mov
movsb
aas
xchg
push
test
sbb
pop
jmp
jmp
xor
and
in
or
push
inc
jp
or
dec
inc
sbbl
adc
dec
and
and
xchg
xlat
pop
fmul
fsubrl
xchg
push
jb
mov
bswap
in
xchg
mov
loop
sahf
mov
sbb
ret
add
mov
cmpsl
jmp
je
mov
inc
adc
xor
repz
xchg
scas
inc
arpl
xchg
movsb
inc
cmp
jbe
sti
lods
xlat
inc
inc
retw
or
jno
or
in
test
orb
add
push
popf
orb
mov
xchg
push
adc
mov
mov
fwait
jb
leave
dec
mov
lahf
jp
mov
nop
fs
inc
adc
xor
mov
repz
and
lods
push
mov
xor
popa
dec
jbe
xchg
push
adc
pop
aad
xchg
adc
inc
jl
mov
and
lock
aas
xor
pop
out
mov
cmc
xor
arpl
movsb
inc
jae
shlb
loop
aaa
lahf
stc
repz
mov
inc
subl
mov
pop
pop
inc
and
sub
aaa
adc
shlb
mov
pop
stos
and
add
add
lods
gs
adc
repz
mov
jae
pop
add
xchg
pop
pop
movsl
push
aaa
dec
jge
orl
pop
xchg
jg
adc
int
mov
inc
subl
in
or
movsl
sti
add
repnz
fisttps
insb
mov
jno
inc
xor
jp
das
loopne
out
pop
and
dec
mov
fucomi
push
into
sub
inc
into
loope
xor
int
sti
loope
pop
cmc
and
sbb
sti
cwtl
aad
pop
adc
add
push
shlb
dec
imul
and
clc
mov
dec
arpl
mov
xor
stos
out
dec
adc
push
add
inc
mov
inc
sub
dec
lds
pop
in
ss
mov
or
jle
leavew
test
test
or
out
push
and
pop
test
add
in
fwait
mov
xor
mov
loop
mov
fbstp
adc
stc
push
sub
mov
pop
sub
jbe
mov
ret
adc
inc
mov
int3
add
xchg
cmp
mov
mov
dec
cmp
inc
loop
outsl
stos
not
gs
fildll
dec
xor
sub
fstl
pop
lret
cmc
mov
xchg
push
or
mov
outsb
adc
sahf
fwait
jnp
movsl
mov
pop
xchg
in
pop
lcall
push
lahf
xor
xchg
jno
jnp
ds
jle
paddsw
jnp
cmp
bnd
movb
xor
test
mov
std
data16
and
arpl
loop
notl
leave
cmp
add
jne
mov
or
cli
scas
ret
pop
out
mov
sarl
lahf
xchg
in
fcmove
mov
push
mov
std
sahf
pop
push
rol
cmp
ficompl
push
dec
aam
cwtl
ja
cld
jne
fcoms
lret
iret
leave
fnstsw
and
clc
fnstcw
sub
insb
jne
lret
dec
imul
xor
xor
inc
stc
pop
jmp
add
jle
shrl
fildll
xor
ljmp
sbb
sub
in
inc
jb
sub
sub
test
or
fs
js
movsb
fwait
out
cld
repnz
mov
dec
and
inc
roll
cmp
sbb
lds
mov
adcb
hlt
je
cmp
cmpsb
xor
insl
repnz
sbb
addr16
jp
adc
ds
jge
inc
stos
jbe
xchg
mov
or
shl
and
shll
cmpsl
mov
addr16
push
sub
push
xchg
in
sub
fwait
pop
jle
or
pop
inc
mov
jmp
aaa
mov
mov
mov
sbb
mov
add
lods
lods
pusha
or
cs
mov
in
add
jbe
or
outsb
out
sti
sbb
pop
clc
arpl
out
mov
mov
mov
rcll
repnz
cmp
stos
mov
push
test
and
adc
imul
shrb
cwtl
mov
fwait
cmp
jnp
std
cmpsl
pop
jbe
jnp
mov
gs
add
jb
push
push
jge
negl
enter
inc
mov
xchg
pop
dec
pop
popa
mov
dec
add
outsb
push
cmpsl
shlb
push
or
idiv
sbb
ds
out
mov
xchg
pop
hlt
orb
fstpt
movsb
cli
cltd
outsl
roll
lahf
adc
sbb
imul
xchg
ss
ds
aaa
dec
andb
imul
lea
bound
jns
adc
ljmp
mov
lret
sbb
mov
out
loope
sbb
fadds
in
jo
adc
inc
jae
sti
sbb
xchg
shrl
adc
test
iret
pop
mov
mov
movsb
sbb
inc
push
push
inc
adc
ja
in
bound
push
sub
loop
or
mov
out
xor
test
ret
mov
and
jmp
mov
pop
mov
pop
iret
push
xor
jo
nop
sub
fldt
or
jl
cli
inc
push
add
fiaddl
mov
cld
mov
or
jecxz
aas
gs
mov
shr
adc
bound
inc
lock
fcmovu
push
mov
sub
xchg
mov
add
rolb
jno
and
call
sti
stos
test
fmuls
leave
loop
fisubs
add
ret
adc
pop
sbb
pop
adc
out
cmpsb
mov
dec
cli
add
nop
stos
and
push
imul
jns
xchg
pop
cmp
andl
push
dec
stos
cmp
push
jbe
int
push
cmp
out
push
out
dec
fstl
fidivrs
or
mov
adc
push
mov
push
cmp
mov
iret
rol
mov
sub
mov
dec
dec
das
and
xor
aad
dec
jp
imul
loop
je,pt
nop
mov
xor
mov
dec
rcr
or
into
inc
jae
pop
inc
xor
fs
andl
lods
mov
push
ret
adc
lock
jae
aam
xor
sub
mov
mov
mov
arpl
cvtps2pi
cmpl
stos
add
xchg
xchg
xor
sub
mov
fbstp
inc
fimuls
dec
insl
mov
pop
popf
inc
mov
jo
cs
popf
imul
xlat
pop
sbb
lds
shrl
loop
push
ja
dec
dec
fstpt
call
add
test
xchg
jo
or
pop
adc
rcll
xor
and
jmp
loope
or
pusha
gs
test
mov
int3
fwait
add
jno
dec
subl
cli
pop
lret
std
mov
mov
repnz
arpl
frndint
es
push
aas
sbb
sub
out
aaa
into
sarb
and
lock
push
or
dec
dec
add
lret
or
inc
sbb
inc
aas
cmp
jmp
mov
jmp
imul
cwtl
outsb
sub
into
xchg
popa
cmc
cmp
mov
fdivr
cwtl
push
pop
mov
insb
mov
pop
loopne
aam
jo
mov
clc
insb
mov
ret
stos
test
ret
cmpsl
fs
pop
push
or
pop
scas
rcll
dec
ljmp
ds
in
or
and
push
nop
xchg
cmp
mov
cli
jl
clc
fs
xorl
clc
mov
sub
out
fwait
xlat
in
jns
xorl
xor
fsubrs
jne
add
or
sub
inc
mov
push
jne
les
sarb
ds
cld
mov
cmp
cmp
adc
xlat
jnp
int
adc
stc
push
pop
rorl
sbb
or
or
sub
mov
test
push
sub
jle
std
inc
mov
ficompl
or
stos
ss
dec
xchg
xchg
fsts
loopne
stos
sub
repz
dec
in
cmc
ja
sbb
fstps
mov
jae
lds
jns
lea
sub
inc
mov
arpl
das
mov
jle
xchg
xchg
rorl
mov
hlt
subb
inc
pop
retw
cmpsb
test
jecxz
push
repz
xor
lret
ds
ret
lock
fmull
js
mov
mov
fdivs
add
cmp
daa
xor
xor
mov
imul
pop
lahf
ja
dec
jb
mov
lcall
imul
arpl
push
push
sahf
rorl
incb
xlat
fidivs
into
jne
shr
lea
xor
add
pop
nop
pop
and
or
sarb
sbb
test
xchg
inc
repz
out
ja
dec
aam
nop
pop
cld
fidivs
push
sbbl
fists
dec
mov
pop
add
data16
std
jb
aad
add
lcall
dec
repz
pop
inc
outsb
ja
lret
mov
je
mov
fwait
sti
jns
je
lea
mov
pop
jmp
push
stc
adc
xor
mov
push
or
cmpsb
ret
std
push
es
and
jmp
ficomps
mov
and
pushf
dec
je
mov
mov
out
or
les
fcompl
pop
add
aad
arpl
jl
stos
cmp
lcall
or
mov
dec
imul
dec
mov
mov
xchg
jns
mov
xor
fildll
dec
jle
xor
in
imul
mov
insl
movl
fsts
push
jo
push
jmp
jecxz
add
add
mov
and
lds
les
sub
push
leave
es
xor
jnp
cli
and
jmp
push
dec
negb
inc
inc
pop
fs
add
xchg
jg
outsb
mov
cmpl
clc
lcall
ljmp
notb
test
xchg
inc
sbb
and
xlat
sti
pop
js
sbb
sbb
jo
adc
xchg
pop
add
daa
mov
call
imull
loop
mov
mov
repnz
ja
xor
loope
push
ds
mov
sub
rorb
push
call
sbb
pop
mov
lret
cmp
or
push
pop
mov
xor
sahf
hlt
mov
jne
sub
insl
mov
test
dec
test
inc
xlat
clc
ljmp
xchg
pop
cmp
pusha
add
out
sarl
shll
inc
mov
adc
ss
sti
lea
mov
lcall
jnp
jbe
inc
sbb
pop
iret
ficomps
jle
icebp
lret
jno
aam
gs
shlb
jg
out
mov
xor
mov
add
scas
out
nop
adc
xor
cmp
aas
mov
std
cmp
into
pop
aaa
das
cld
cmp
in
sbb
subl
test
sub
test
lahf
add
xchg
push
testb
les
into
pop
enter
sub
sbb
xchg
mov
cltd
sti
test
add
xlat
stos
mov
or
push
push
mov
cmpsb
test
icebp
add
sub
jmp
mov
jae
sbb
or
out
adc
jge
cmp
pop
mov
addr16
in
lods
fnsave
or
sub
pop
scas
or
push
pop
dec
mov
pop
adc
ds
adc
push
nop
pop
gs
sbb
inc
mov
cli
cmp
pop
push
repnz
call
ror
pop
icebp
push
ficompl
rorl
lock
or
cmp
push
lahf
rcll
mov
jmp
and
xor
mov
ds
pop
xor
add
pop
call
sub
sbb
mov
push
mov
mov
mov
daa
mov
fs
bound
pushf
mov
mov
addr16
jne
cltd
outsl
jl
jb
insl
hlt
xchg
push
jo
das
push
icebp
int3
jns
adc
dec
xchg
sub
inc
cmp
int
pop
mov
sbb
aad
xor
lret
mov
mov
test
dec
clc
jnp
stos
xchg
inc
popf
mov
imul
test
outsb
movsl
xchg
add
sbb
or
jnp
lret
xchg
jecxz
and
inc
aad
xor
add
dec
fcoms
fsubrs
imul
aad
cmpsl
xchg
jecxz
dec
out
fadd
push
pop
sub
ds
cmp
sub
sbb
jmp
mov
in
mov
push
fcmovu
lcall
testl
insl
cld
stos
lret
popa
jbe
xor
insb
testb
cmp
js
mov
hlt
rolb
xchg
test
xchg
sti
shlb
push
int
fmuls
and
add
fcom
sbb
andl
push
adcl
lods
dec
jns
dec
scas
lret
arpl
cwtl
stc
pop
sbb
push
push
push
jns
xor
inc
xor
test
popl
add
ss
pop
xchg
push
aad
fs
cmpl
orl
push
or
ja
loop
or
pop
fsubrs
xchg
add
leave
jb
sbb
push
or
dec
cwtl
pop
dec
shrb
aaa
rcl
dec
int3
jg
shrb
push
jbe
jle
fstpt
daa
xor
sahf
out
sub
sbbb
call
xorb
fldl
loop
frstor
sbbl
popf
mov
lods
cli
dec
lds
mov
mov
push
mov
fdivrs
jle
xchg
lret
test
das
sahf
add
lods
stc
push
sub
rol
loop
cmp
inc
add
pusha
sbb
cltd
fdiv
jmp
pop
dec
jno
call
pop
repz
insb
enter
add
stos
sti
addr16
je
cmp
adc
push
fwait
inc
iret
jae
add
push
int
cld
loop
mov
js
xchg
xchg
lock
sti
rcrb
dec
jmp
jnp
loope
inc
je
add
jp
xor
into
ljmp
jecxz
js
jne
mov
cmp
movsl
addb
shlb
xchg
testb
sub
repnz
dec
popf
and
adc
or
xor
lods
inc
ja
mov
mov
repz
jge
mov
in
push
sbb
add
lds
inc
shlb
repz
cwtl
push
in
fwait
cmc
orb
dec
add
jno
inc
iret
or
cmpsb
pop
push
xchg
test
and
insb
pop
int
xchg
sbb
mov
pop
fistl
fisttpl
je
lret
and
mov
jecxz
ss
add
or
dec
outsb
cmp
roll
jle
cmc
or
cwtl
mov
mov
movsb
cmp
ss
popa
or
sub
xchg
data16
nop
gs
jle
and
sub
jge
out
in
stc
cmp
ret
cmp
xor
push
xor
cmp
cmp
pop
xchg
jns
jge
jne
cmp
mov
xor
xchg
outsb
cli
test
sahf
xchg
es
inc
add
scas
or
adc
mov
lret
aam
bound
stc
pop
xchg
je
mov
enter
pop
sahf
loopne
mov
nop
movsb
xchg
std
and
out
pop
jne
xchg
and
stos
and
fcmovb
mov
mov
addr16
mov
mov
repz
test
and
mov
mov
aad
data16
int
dec
cmp
xchg
std
mov
jmp
ret
inc
sub
mov
int
jnp
jge
sbb
sub
or
sarb
daa
test
inc
leave
enter
mov
repz
push
jae
xchg
int
push
or
mov
push
adc
shr
int
leave
inc
std
push
divl
xor
add
shr
mov
mov
pop
cltd
mov
jecxz
scas
fbstp
xchg
inc
loop
jp
mov
shll
ds
lahf
pop
lea
mov
lea
loopne
sbb
jne
jns
aaa
jns
inc
mov
adc
push
mov
das
push
push
add
cmp
mov
adc
mov
and
icebp
nop
jmp
add
out
add
je
xor
or
pop
in
adc
xchg
jecxz
notl
in
mov
das
enter
xchg
aaa
fisubrs
push
call
xor
dec
fildl
xor
push
lcall
cmc
out
ret
cmp
jae
pop
cmc
add
add
xor
cmp
fbstp
test
jge
rcrb
ret
test
jne
push
test
insl
out
shr
add
xchg
push
shl
sub
sbb
enter
and
sahf
scas
add
test
inc
jbe
mov
shlb
push
aas
cs
popf
cwtl
lcall
divl
sub
adc
xor
cmp
inc
outsb
insb
sbb
stc
sti
out
push
push
push
jle
xchg
mov
test
mov
lret
div
stc
mov
call
jl
push
adc
sbb
lcall
sub
in
sub
push
push
sub
fistps
repnz
rclb
mov
popa
int
idiv
push
incb
mov
cmp
cmpb
xor
sbb
and
cmp
cmp
aaa
jno
mov
ds
lods
mov
testl
mov
hlt
mov
inc
ljmp
push
push
push
pop
and
pop
mov
pop
add
bnd
add
loop
fnstsw
les
outsl
xor
pop
insb
aaa
clc
aas
sbb
out
ret
fdivl
aas
aaa
push
pushf
dec
mov
mov
or
sbb
faddp
dec
clc
cwtl
je
sti
push
pop
sub
xchg
mov
sub
push
std
adc
add
sbb
ljmp
ret
je
std
mov
push
jecxz
pop
lcall
jg
lock
call
push
adc
mov
add
lods
inc
add
cmpsl
jns
xor
bound
sbbl
out
pop
fsubrl
mov
jg
mov
add
popf
push
data16
xchg
mov
or
or
adc
cwtl
popf
inc
xchg
in
lret
cmpsb
push
pop
mov
out
aam
popl
into
pop
cmp
sub
xchg
push
nop
ficoml
hlt
stos
jbe
movsl
mov
sub
subb
jg
test
xchg
add
cmp
fldcw
cmp
cmpl
mov
add
rclb
rorl
insb
pop
pop
xchg
adc
gs
outsb
insb
dec
test
incl
push
jns
iret
mov
cli
sub
cmpl
movhps
mov
in
repz
jns
jae
out
fucomi
dec
scas
cmp
rolb
das
dec
fxch
mov
or
cmp
jl
push
xor
cmp
jne
sahf
mov
aaa
imul
xor
jo,pt
test
dec
dec
inc
sbb
ret
repnz
lahf
sub
pop
cmp
imul
sbb
ss
scas
jnp
js
mov
addr16
or
test
push
shlb
jp
repz
push
cmc
jno
movsl
in
sbbb
call
aaa
cli
jmp
add
mov
xchg
mov
xchg
lock
in
bound
xlat
push
bswap
cli
outsl
jns
cmpsl
sbb
bound
repz
pop
xor
sbb
int
js
dec
add
mov
jns
push
jns
cmp
lahf
sbb
push
lret
mov
mov
mov
sbb
add
adc
and
in
fxch
sbb
mov
dec
outsb
adc
iret
inc
mov
lods
xlat
cli
inc
or
fnstsw
jg
orb
cmpsl
xchg
xchg
xchg
push
lods
sub
mov
arpl
pop
jmp
ret
arpl
sbb
dec
aas
xlat
xchg
pop
out
sbb
add
in
jnp
adc
cmp
mov
pop
mov
cmp
or
fucomp
push
push
jge
rol
ss
sbb
push
call
ss
adcl
dec
ficoml
inc
enter
js
or
mov
movsb
sbb
lock
sbb
inc
jg
add
or
ret
sahf
inc
imul
sub
out
pop
jb
cmp
push
pop
mov
xchg
xchg
push
mov
loopne
lret
xor
mov
xchg
xor
test
arpl
sub
adc
mov
mov
fimull
pop
mov
movsl
sub
sbb
jle
inc
or
dec
aad
mov
addr16
mov
xchg
lret
sbb
enter
cmpsl
nop
loope
mov
movsb
stos
lret
cmpsl
jge
int
fwait
aaa
leave
cwtl
jle
call
mov
in
push
je
gs
rcrl
mov
out
je
popa
stos
jmp
imul
push
in
dec
jno
push
pop
clc
jmp
push
mov
and
dec
push
xchg
add
pop
mov
int3
fwait
lcall
jo
add
mov
jp
sbb
pop
mov
fwait
cmp
xchg
push
mov
dec
hlt
fs
cs
sbb
sub
jp
pushf
push
adc
jno
insb
insb
mov
rcrl
adc
clc
imul
fildl
test
ficompl
xchg
mov
and
in
ss
mov
jnp
push
mov
and
inc
loope
negb
lret
testl
sub
sbb
jge
mov
incl
scas
js
repnz
into
test
sub
stos
pop
push
or
cmp
push
sarl
cli
call
mov
xchg
push
push
add
ss
dec
clc
aas
mov
sub
popf
imul
inc
out
stos
inc
jg
iret
cld
loopne
insb
dec
lock
jo
push
jne
jbe
je
test
out
repnz
mov
push
sahf
xchg
pop
hlt
xchg
xchg
dec
push
pop
loope
sti
es
testb
insl
sahf
xchg
push
adc
hlt
shl
pop
aam
cmp
fisttps
fstps
scas
ss
xor
xor
xchg
mov
and
sarl
mov
adcl
push
or
cld
push
aam
add
pop
fcompl
push
test
jns
in
pop
or
mov
jg
out
sar
cmp
jo
sbb
rsqrtps
daa
andnps
adc
das
mov
mov
adc
or
sti
cmp
fdivl
stos
rcrl
pop
incb
fsubs
jne
pop
insl
mov
testl
add
sub
lahf
jecxz
cmp
out
xor
jb
imul
push
inc
mov
mov
popa
jno
adc
pop
pop
jo
movb
pop
sub
aaa
movsb
inc
jne
adc
pop
mov
mov
clc
mov
inc
mov
lds
xor
lea
mov
inc
jmp
mov
stc
inc
cltd
mov
xlat
xor
cmp
aad
call
dec
xor
jne
push
add
cmp
or
pop
cltd
imul
lea
lahf
pushf
test
inc
or
add
push
fstps
xchg
mov
clts
xlat
sbb
sbb
je
jbe
adc
inc
stos
mov
push
in
dec
dec
out
fistpll
fdivrs
outsl
mov
pop
roll
sub
popf
adc
or
dec
nop
jge
pushf
daa
and
mov
addr16
rol
sbbl
xor
add
adc
xlat
dec
cmpsl
std
mov
lods
das
lods
pop
ror
out
jecxz
cmc
pop
nop
push
jp
xor
push
dec
adc
mov
xchg
cmp
jb
sar
leave
or
filds
add
subl
jl
sub
out
cwtl
lods
je
pushf
jnp
cmc
fadd
and
xchg
loope
lods
mov
je
jno
repnz
dec
jmp
xchg
pop
xor
pushf
fstps
push
testl
mov
pop
mov
scas
sub
sub
fiaddl
mov
jb
pusha
adc
push
lret
add
dec
cmp
mov
in
push
fcomi
mov
dec
es
cmp
cwtl
adc
mov
push
cmp
push
and
insl
icebp
jmp
sbb
aad
pop
ret
rorb
dec
jl
mov
movsl
jl
push
lock
bound
and
outsl
jno
add
aaa
pop
lret
in
call
roll
xchg
lods
add
mov
xchg
adc
in
mov
jg
sbb
pop
repz
add
xchg
test
pop
fimuls
hlt
or
stos
jp
cld
xchg
or
out
stc
jmp
xor
shlb
jl
sbb
dec
fadd
movsb
mov
inc
test
adcb
push
add
dec
inc
dec
pop
mov
addr16
cmp
cmpsb
mov
in
fnstsw
add
pop
sbbl
dec
pop
pop
lcall
std
add
pop
out
inc
loopne
sbb
push
xchg
inc
mov
clc
js
enter
pop
out
xor
int3
rcll
xlat
pop
lds
out
xorl
fdiv
je
push
insb
fucomip
stc
fwait
or
sbb
jns
stos
dec
stos
sub
lods
add
jo
mov
clc
imul
jno
and
lea
shll
jmp
pop
sub
shl
xchg
das
or
movsl
outsb
test
aad
xchg
lahf
jmp
pop
mov
jmp
cwtl
in
in
loopne
dec
jno
aas
ret
mov
aad
repnz
fsubr
hlt
jl
imul
daa
popf
fsub
lock
rcrb
pop
icebp
loop
das
and
imull
jb
or
jo
or
neg
jecxz
xlat
in
lea
pop
add
fucomip
data16
mov
outsl
sub
mov
popa
xor
in
aam
jo
or
cmp
adc
ret
popf
fmul
paddusb
mull
daa
xchg
lods
ret
lret
and
cmc
jecxz
jno
fs
or
pop
push
cmp
add
add
pop
dec
sbb
inc
xor
es
int
pusha
mov
nop
xchg
nop
or
pop
int3
push
loopne
adc
pop
and
xlat
xchg
je
daa
mov
lahf
std
aas
cli
cmp
shlb
jmp
mov
jmp
idiv
or
pop
hlt
dec
push
icebp
fidivrs
adc
sti
pop
adc
xor
imul
xchg
sbb
adc
paddb
xor
fisttpll
idivl
jecxz
in
mov
xchg
sbb
mov
insb
inc
jge
and
adcl
dec
push
inc
and
insl
mov
xchg
int3
aam
adc
lret
in
and
sub
jb
test
xor
cmp
add
pop
out
scas
enter
stos
addr16
ret
mov
or
mov
test
aaa
sbb
xor
in
or
dec
fstl
loope
test
aaa
ja
in
inc
pop
xor
jns
xor
jl
loope
les
insl
jb
out
add
mov
jl
push
lcall
aas
pop
js
mov
pushf
testl
cmc
and
enter
fildll
shl
xchg
sub
mov
div
std
add
dec
inc
arpl
arpl
mov
pop
andl
add
data16
mov
adc
and
lret
or
cmp
out
push
cmp
push
jae
addr16
mov
das
dec
inc
test
pop
arpl
repz
imul
insb
sub
mov
arpl
sub
mov
add
mov
shll
hlt
cmp
leave
xchg
loopw
dec
scas
repz
push
or
and
stos
aad
call
mov
jae
dec
lock
jmp
dec
popf
mov
cmp
fwait
xchg
push
jge
lcall
xor
out
iret
shrb
mov
sbb
xor
add
and
pushw
push
popa
sub
and
test
bound
popa
sbb
icebp
add
mov
sub
sub
bound
xchg
jg
sarl
add
out
sub
mov
lock
sub
ret
mov
ja
dec
cmpsb
jbe
fidivrl
cld
stos
mov
insb
hlt
bound
sbb
loopne
nop
cmp
fldenv
xacquire
pop
jnp
in
mov
lods
loope
repz
dec
cmc
mov
daa
ret
adc
call
lea
lcall
pop
sub
cmp
add
mov
pop
or
ret
popa
stos
push
adc
cmc
and
movsl
xchg
dec
inc
test
lods
sub
mov
mov
or
ss
rorb
xchg
test
add
inc
jb
into
jo
jae
pop
push
xchg
xor
lcall
lea
mov
jmp
xchg
popf
cs
outsl
jbe
adc
xchg
std
and
aad
pushf
xor
enter
pop
xorb
stc
roll
sub
sbb
loopne
in
ljmp
xchg
jecxz
fidivs
dec
jo
jae
in
repnz
loopne
insl
mov
cmp
sub
pop
push
lcall
icebp
lock
adc
scas
or
xchg
jmp
inc
mov
lods
les
and
pushf
cld
mov
addb
add
lahf
xchg
pop
fnstcw
ret
adc
add
xor
sbb
leave
shl
mov
add
pop
jnp
inc
clc
adc
xchg
jb
pop
aam
push
adcl
mov
and
sbb
stc
add
in
or
enter
push
xor
repz
ret
out
dec
sub
ljmp
mov
leave
pop
push
fnstcw
mov
sbb
call
test
lret
aaa
test
mov
fildl
mov
test
iret
or
sbb
cmp
mov
js
push
outsb
in
push
jb
push
arpl
aaa
fsts
jnp
insb
cmc
add
and
xchg
out
outsl
jo
xchg
sbb
outsb
xchg
xor
mov
cmp
dec
push
xor
in
flds
sub
mov
xchg
out
insb
fisttpl
cmp
clc
out
xchg
mov
jb
insb
mov
push
ret
jae
lcall
shl
dec
cmp
std
lock
out
stc
popf
mov
cmp
icebp
data16
sub
lcall
sbb
test
xlat
cmc
cld
shrb
mov
mov
mov
in
outsb
popa
sub
dec
or
xor
frstor
int
popa
jle
repnz
inc
jo
adc
pop
stos
cmp
je
jbe
test
push
psrlq
xorl
aad
inc
daa
cwtl
push
sub
icebp
or
iret
cmp
and
testl
sarl
cwtl
jecxz
pop
lret
push
xor
pushl
sti
lods
xchg
mov
mov
mov
fsubr
dec
lcall
in
inc
push
shr
and
mov
mov
push
movl
cs
sub
xchg
sub
sub
sub
fdivs
push
inc
pop
inc
fsub
inc
sbb
fs
lea
jbe
sbb
das
dec
movsl
popa
xor
fs
cmpsb
xchg
mov
xor
pop
rclb
mov
mov
push
xchg
sbb
jo
jl
xchg
call
xchg
hlt
push
push
jecxz
push
mov
lods
mov
cmc
xchg
imull
outsb
decl
insl
jecxz
daa
cli
sbbl
jle
je
xor
sbb
stc
out
pop
test
ds
push
pop
sbb
jecxz
adc
jl
sti
lgs
out
lea
test
dec
mov
es
jmp
loopne
iret
add
fwait
mov
add
ljmp
jmp
sti
lret
popa
enter
mov
jno
ljmp
jle
push
shl
popa
jg
sub
cmp
add
mov
scas
cmp
out
sub
lret
icebp
pop
or
xor
imul
mov
js
popa
inc
jb
cmp
test
push
ja
jb
movsl
sahf
cld
pop
lds
std
cmc
dec
lods
das
xor
ret
mov
rclb
inc
dec
insl
divl
mov
xchg
push
cld
ljmp
je
cmp
sbb
pop
and
outsl
lock
testl
fcmovb
nop
jp
insl
mov
add
stos
xchg
jg
or
or
push
nop
jo
cmp
insl
pop
arpl
push
lods
mov
mov
jp
jle
test
rcl
mov
ret
jns
sub
ja
shlb
dec
cmpb
iret
and
mov
mov
ficoms
cwtl
outsl
idivl
mov
pushf
jecxz
out
and
imul
or
negl
jecxz
dec
hlt
push
xor
inc
sub
and
or
xchg
cwtl
aad
sub
jp
fldt
sub
mov
inc
pop
icebp
mov
mov
mov
sti
push
xor
stos
sar
lahf
popa
rorb
mov
add
inc
mov
lret
aas
push
aaa
and
adc
jg
std
push
push
and
testb
pop
addr16
mov
lock
std
push
ljmp
sub
adc
xchg
cld
mov
mov
mov
pop
mov
pop
push
pop
shll
dec
xorb
pop
dec
call
loope
mov
xchg
sarl
fcomip
dec
and
xchg
dec
mov
out
stos
xchg
push
and
sub
into
scas
orb
inc
repnz
into
xor
daa
xor
jl
sbb
pop
lahf
hlt
dec
popf
push
adc
out
test
jno
cli
outsl
cmc
xchg
pop
fisubrs
mov
mov
das
push
xor
push
push
aaa
xor
lret
dec
push
sbb
mov
fistl
xchg
out
mov
cmp
inc
push
cmp
push
call
scas
mov
and
test
or
jmp
imull
inc
pop
int3
in
ljmp
dec
sub
into
sti
mov
jae
xor
adcb
rol
jb
sbb
mulb
mov
outsl
gs
adc
imul
sub
sarl
jp
stos
push
pop
sbb
daa
mov
not
out
or
xor
push
outsb
popf
insb
lahf
inc
in
aas
test
aas
mov
sti
js
loope
out
fwait
iret
popa
xor
push
mov
jnp
mov
mov
xchg
jne
mov
adc
arpl
loopne
mov
inc
dec
jae
add
shrl
cmp
icebp
xor
cli
lods
sub
cmp
es
mov
and
push
icebp
xchg
es
push
jmp
sub
je
scas
les
leave
or
push
ss
hlt
dec
xchg
pop
lret
punpcklwd
or
push
les
push
fldt
add
jnp
xchg
cmp
cmc
jne
pop
loope
dec
cmp
mov
ret
outsl
xor
add
lods
arpl
jge
daa
out
scas
mov
xchg
cmp
push
mov
mov
xchg
adc
pop
movsl
dec
xor
sub
sbb
imul
sahf
test
adc
xchg
mov
repnz
sub
clc
pusha
jmp
pop
and
fsubs
mov
test
idivb
mov
mov
mov
inc
aaa
mov
in
jae
test
push
insb
adc
add
sbb
incl
mov
inc
dec
in
dec
test
data16
lods
fmull
rcr
xchg
xor
pop
push
push
fwait
mov
inc
stos
sbb
or
dec
ret
psrlq
lahf
fisttpl
fmull
andb
shrb
push
mov
loopne
push
arpl
loop
mov
nop
jns
pop
outsb
ljmp
mov
aad
or
add
and
fbstp
sub
inc
pop
mov
movsl
sahf
imul
jmp
pop
mov
adc
ret
or
inc
jb
add
test
pop
popf
ficoms
xor
cmp
repz
int3
test
mov
jg
daa
int
divb
lock
sbb
sub
iret
addb
enter
cmc
adc
dec
mov
lods
jmp
pop
xchg
pop
stos
xchg
pop
fistl
jo
sbb
jo
jp
and
out
cmp
in
out
jecxz
clc
fwait
cli
sub
add
and
jmp
push
in
cmp
inc
sub
mov
subb
insl
hlt
dec
xchg
jae
sub
adcl
in
call
test
mov
pop
adc
mov
push
movsb
pop
jnp
mov
pop
pop
out
dec
ds
rclb
ja
test
sbb
mov
mov
mov
or
dec
not
xchg
stc
test
std
pusha
js
push
xor
adc
loope
pop
mov
push
pop
hlt
cmp
out
lcall
inc
mov
dec
movsl
fcom
daa
jg
imul
add
scas
or
and
pop
mov
mov
iret
aam
cmpsb
mov
push
sub
push
lods
mov
nop
push
or
or
push
and
push
jle
mov
ret
mov
call
mov
adc
xor
fimuls
sbb
push
pop
sub
jecxz
xor
dec
mov
cs
pop
lods
into
add
dec
and
test
popa
mov
pop
cmpsl
sahf
sub
jns
mov
or
movsb
ss
dec
imul
rorl
fsubr
cmpsb
into
push
pushf
mov
jae
rcll
mov
jg
loopne
fwait
jo
jnp
pop
mov
cli
push
fs
mov
and
or
test
in
call
adc
adc
dec
mov
lods
cs
lea
pop
push
ret
cltd
popf
inc
aad
push
ds
sbbl
xor
cmp
pop
sbb
shlb
push
mov
lods
test
add
xchg
fs
loop
xorb
and
iret
mov
es
cmpb
fs
mov
nop
mov
rcrb
adc
dec
sub
xchg
out
jae
aaa
jle
decb
push
fnstcw
into
repnz
gs
jnp
in
mov
aaa
lock
mov
das
mov
push
xor
pop
ja
daa
push
mov
fs
jne
jl
push
push
cld
xchg
call
push
daa
js
add
jbe
mov
add
adc
push
sub
test
mov
dec
push
mov
fiadds
jl,pn
fwait
ljmp
jmp
stos
push
sub
fwait
sub
jle
xor
mov
jb
mov
aam
fs
fcmovb
inc
cmp
negb
or
add
jle
jnp
mov
cwtl
sbb
ja
cmc
jmp
enter
inc
mov
lock
pusha
cmp
add
mov
aam
cmp
pop
adc
cmpsl
lret
stos
jo,pt
or
orl
pushf
jge
push
aad
in
add
adc
mov
mov
xor
and
movsb
fidivrl
lock
push
sahf
int3
fwait
enter
mov
ds
mov
loope
sti
call
rorb
or
test
xchg
or
jp
rcll
shrb
data16
pop
cltd
or
mov
cmpsb
ficoms
std
sti
int
movsb
add
and
cli
test
daa
out
pop
push
xchg
daa
pop
jbe
mov
push
loop
pop
lahf
sub
fnstcw
mov
les
repnz
or
out
mov
test
popf
lods
aad
xchg
jmp
popf
adc
cltd
mov
cmp
test
sub
lea
push
int
pusha
nop
or
adc
repz
xor
push
fwait
popf
dec
std
movsl
data16
enter
lcall
pop
sbb
dec
cmp
pop
outsl
xchg
push
lcall
lahf
cltd
add
fsubs
cli
aad
hlt
mov
dec
loopne
cli
sub
jp
inc
sahf
cmpsl
ja
rcrl
je
fsubl
jp
pop
adc
lods
in
xchg
pop
pop
iret
mov
lret
dec
sub
jp
or
jmp
push
in
push
or
insl
sub
lods
leave
arpl
or
push
das
mov
jne
jmp
nop
jle
pop
adc
das
movsb
mov
shrb
test
inc
aad
and
xor
mov
stos
insb
imul
adc
in
outsl
mov
gs
popa
nop
enter
cmp
mov
fst
xchg
push
add
int3
popf
jne
shr
dec
leave
out
decb
fidivs
in
pop
jne
icebp
out
sub
xchg
xchg
aas
pushf
in
ss
cli
imul
and
cs
mov
mov
jb
sbb
je
mov
dec
jge
or
pop
sub
pusha
into
scas
adc
cmp
mov
iret
mov
mov
add
jo
int
push
mov
pop
sbb
in
lea
loopne
xchg
mov
cwtl
add
push
mov
push
mov
sahf
jns
sbb
dec
cmpsb
and
mov
cmp
aam
or
mov
iret
inc
lock
dec
xor
push
jne
pop
repnz
pop
inc
mov
icebp
enter
adc
mov
ss
pusha
pop
mov
in
or
mov
fs
lret
stos
icebp
fistl
xchg
gs
fs
cltd
mov
addr16
push
sub
jo
arpl
cmp
inc
fsubl
push
add
shl
mov
pop
mov
fwait
pop
in
or
bnd
idivl
shl
adc
jo
or
je
insl
addr16
dec
dec
mov
mov
inc
fs
or
int
mov
jl
faddl
jne
sub
xchg
mov
push
cs
popa
fs
rcll
xor
das
mov
inc
sbb
and
loope
movsl
in
mov
mov
dec
or
test
ja
lea
push
mov
fidivrl
shlb
cmpb
repz
clc
xor
push
mov
sub
testl
sub
fwait
mov
call
cmpsl
push
add
xor
inc
jecxz
xor
data16
push
ret
mov
add
jmp
inc
push
jp
jmp
fdiv
mov
jmp
shlb
addl
int
gs
faddl
in
in
outsl
sbbb
xlat
push
inc
loop
mov
loopne
cmp
push
or
loope
mov
push
push
jne
jne
or
adc
fidivl
in
ret
int
test
xor
dec
mov
arpl
jp
into
sti
xor
pop
adc
jmp
mul
jne
lods
cltd
addr16
loope
jp
lea
xchg
lock
adc
push
inc
fdivs
out
add
or
inc
jae
pusha
mov
ja
mov
repz
jb
scas
in
sub
fwait
cmc
lret
test
testl
adc
adc
sub
jnp
push
ja
scas
neg
popf
sub
pop
pop
jbe
repz
les
cli
add
fidivl
jnp
dec
mov
cmp
push
ds
mov
or
and
int3
mov
adc
mov
subl
cltd
lock
shll
jmp
and
xor
lcall
stc
pusha
mov
mov
xchg
pop
push
pop
arpl
xchg
xor
xor
cld
stos
push
cmp
and
adc
data16
adcl
addb
loop
inc
orb
iret
cmpsl
and
test
out
mov
ret
fstl
fildl
cmp
lret
push
mov
roll
lret
lret
cld
mov
das
cwtl
jns
neg
xchg
ret
je
cmp
cmp
mov
test
mov
push
outsl
sbb
mov
negb
xor
mov
pushf
push
enter
cmp
iret
lret
imul
inc
jle
sbb
adcl
iret
loop
sub
popf
mov
outsl
shlb
call
jp
call
and
jmp
test
stos
in
xorb
sbb
push
push
or
pop
mov
ja
xchg
addr16
fldenv
test
sbb
les
mov
in
call
pop
mov
sbb
push
lods
repz
inc
insb
xor
rcrl
sbb
jle
sub
decl
mov
jno
fwait
aaa
stos
movsb
movsb
or
sub
sbb
mov
negb
xor
push
dec
in
stc
sbb
dec
cmp
repz
cmpsl
jp
ret
mov
outsb
fldt
jl
stos
repz
int3
push
test
sbb
mov
fwait
fs
mov
loopne
or
out
push
push
xor
push
fnstsw
rolb
xor
aad
popf
movsl
adc
dec
adc
and
lahf
sub
push
jle,pn
mov
repnz
mov
inc
or
push
dec
xchg
jecxz
mov
aas
add
and
jno
push
sub
popf
in
ds
movsb
out
arpl
dec
add
jbe
aaa
jl
jle
push
test
adc
sub
dec
adc
out
mov
mov
bound
cmp
push
out
stc
pop
sub
xor
mov
fisttps
addb
push
rorb
jae
lock
les
xor
dec
nop
popa
sub
stos
push
sub
jnp
movsb
adc
and
mov
and
loop
pop
mov
addl
cmpsb
out
sahf
push
out
cld
jle
cmpsb
int3
loop
jns
pop
ficoms
mov
pop
ljmp
jge
lods
mov
lods
inc
cmp
ja
call
xor
push
decl
in
lock
push
add
daa
mul
push
xchg
nop
mov
push
pop
addr16
lds
dec
jl
push
xchg
lds
xchg
aaa
push
dec
push
stc
mov
shl
pcmpgtd
xlat
cmc
cmpsl
rorl
mov
mov
hlt
lahf
dec
in
outsl
mov
out
ret
inc
fs
mov
xor
pop
adc
xchg
push
arpl
shll
insb
testl
orb
inc
fnstsw
inc
xchg
nop
jb
insl
mov
jg
mov
hlt
sti
mov
xchg
das
inc
jno
lods
cld
shrb
adc
aaa
inc
daa
jnp
aam
mov
aas
les
arpl
sbb
adc
cmp
mov
stc
pop
xchg
xchg
adc
sub
jmp
fwait
mov
test
and
lahf
outsb
insl
add
cmpsl
dec
out
decl
mov
sub
ret
dec
rorl
aaa
cmp
mov
out
imul
jnp
scas
pop
mov
les
sbb
xlat
hlt
dec
dec
lods
in
add
rclb
lret
iret
inc
aam
lock
mov
in
leave
jnp
lods
int
xchg
aad
scas
insl
push
mov
sbb
ljmp
add
jno
dec
add
jb
fcoms
mov
dec
pop
sarl
in
mov
push
dec
shr
and
jne
ret
ljmp
cmp
sub
mov
movl
cmp
notl
adc
cs
or
dec
pop
daa
jne
lock
dec
or
enter
mov
inc
mov
stos
addb
shll
jg
pusha
push
inc
insb
nop
pop
jg
cmpsl
sbb
bound
sub
fdivr
ljmp
jg
cmp
jae
adc
gs
lods
mov
rolb
mov
insb
loopne
add
push
xor
cmp
and
pop
cmpsl
xchg
inc
enter
xor
addr16
and
ss
mov
push
pop
ss
test
inc
inc
mov
sahf
inc
insl
bound
push
xor
fwait
sarl
jge
push
xor
add
bound
cmpl
and
ret
scas
sbb
dec
mov
imul
lods
fidivl
adc
ret
das
mov
mov
xchg
lret
xchg
pop
scas
add
mov
cmp
push
out
mov
rcrb
or
fidivrl
jbe
mov
notb
ret
jnp
mov
loope
sbb
xlat
dec
push
in
cmp
cmp
xchg
adc
mov
stos
data16
js
jne
mov
push
xchg
es
sbb
fsubs
aad
adc
push
xlat
mov
mov
enter
js
push
mov
lods
test
sbb
xor
mov
jae
adc
insb
xor
jmp
int3
pop
and
hlt
lret
dec
and
notb
xor
cmpsb
movsl
pop
imul
pop
outsl
jmp
mov
cmp
or
and
fdivs
jb
mov
and
add
dec
pop
xor
mov
mov
lds
jne
sub
out
or
rorl
stos
pusha
mov
lea
lock
add
fidivs
inc
loop
sahf
mov
sbb
sbb
fdiv
cltd
sbb
cmp
mov
push
ss
xor
or
push
push
jns
adc
test
dec
sbb
movsl
enter
punpckhbw
insl
mov
in
jge
clc
iret
repz
mov
rol
sub
scas
inc
lock
xchg
int
push
mov
scas
lahf
lods
sbb
sbb
pusha
imul
and
test
je
push
xchg
popf
mov
mov
jle
xchg
dec
xchg
push
and
imul
sub
gs
cld
jno
loopne
xchg
scas
or
ficoms
in
bound
dec
add
jne
leave
sahf
leave
dec
xchg
mov
inc
repz
add
scas
cwtl
fcomps
ret
inc
rcll
lahf
sbb
cmpsl
mov
lahf
pop
aad
loope
cmpsb
cmp
push
xor
push
fsubr
push
leave
jns
pop
lds
push
pop
cmc
hlt
movsb
and
popa
lahf
leave
jno
ret
sub
divb
int
repnz
pop
arpl
xchg
push
pop
sar
jg
imul
fimull
inc
jle
fs
mov
lahf
fs
xor
push
mov
jae
fildl
xchg
mov
pop
pop
shr
mov
fcmovbe
push
pushf
stos
imull
aam
or
icebp
imul
addr16
mov
lock
cmp
aam
data16
lea
mov
dec
ds
les
xor
fldt
mul
sub
notl
clc
into
xchg
add
sahf
aad
pop
and
dec
mov
lcall
dec
jbe
xor
lahf
lret
push
mov
cmpsb
push
je
jns
aaa
mov
mov
mov
sbb
xor
jb
mov
cmp
inc
mov
inc
jmp
scas
cwtl
and
js
mov
or
cmp
mov
adc
jl
inc
mov
mov
icebp
movsl
in
loopne
sub
sbb
movsb
inc
test
pushf
mov
jo
fnstcw
fs
add
sbb
sub
xchg
rcr
sbb
cmpsb
fistpl
out
mov
insl
sbb
sub
push
rcrl
jp
push
lea
mov
lods
jecxz
mov
data16
cmp
mov
pop
push
clc
ja
push
push
pop
imul
pop
jmp
sub
flds
fs
rcll
pusha
mov
fiadds
mov
sbb
stos
sti
inc
lods
ljmp
int
call
xor
mov
bound
in
jno
sub
lods
lret
pop
lcall
jle
mov
scas
sub
jp
pop
movb
inc
cmp
test
pop
cli
je
lret
leave
jnp
sbb
cmp
bound
mov
add
xchg
push
inc
add
fildll
mov
xor
cwtl
xchg
test
sub
lret
sti
sub
nop
out
jno
jl
xlat
dec
sbb
dec
ficomps
and
addr16
test
ljmp
jb
mov
cmp
mov
xchg
ret
ror
clc
pop
jl
flds
das
mov
ficompl
mov
xchg
fwait
inc
or
shr
push
push
pushf
pop
ret
inc
mov
jg
mov
and
adc
mov
iret
push
xchg
xchg
leave
xchg
mov
pop
test
popf
adc
jmp
push
mov
jbe
rorb
sarb
mov
mov
mov
pop
mov
int3
cmp
jg
push
pop
cmp
xchg
fstps
push
sahf
cmpsb
divl
mov
or
xor
mov
inc
jl
fldcw
sti
test
pop
xor
inc
repz
pop
sub
leave
aaa
loop
or
daa
inc
xor
xor
adc
stc
ss
ss
movsl
jecxz
lds
cli
iret
mov
dec
mov
adc
cmp
xor
dec
mov
mov
mov
jnp
inc
xor
cltd
push
out
mov
shl
xor
dec
popa
loop
test
fldl2t
jbe
pop
ret
pop
fisttpll
inc
insl
cld
inc
es
adc
clc
cmp
sub
cmp
lsl
stos
negb
pop
andb
xor
xchg
mov
movsl
rcrb
mov
add
xchg
jg
sub
jne
jmp
push
jle
xor
icebp
sub
fisubrl
pop
xor
mov
sbb
out
mov
dec
push
movsb
outsb
add
int
notl
push
lret
xchg
lret
dec
sbb
sti
repz
test
or
ja
imul
sub
push
push
adc
insl
jle
addr16
addr16
and
mov
mov
and
jle
xlat
out
mov
cmc
xchg
sbb
test
sbb
dec
fsubrp
xor
imul
mov
fidivl
cmpsb
aaa
data16
mov
mov
pop
fstpl
xor
jo
leave
jo
and
loop
test
fcoms
hlt
dec
push
lods
pushf
push
stc
or
repnz
jbe
sahf
outsb
mov
and
push
lcall
lods
aaa
push
jp
pusha
cmpsl
push
xchg
mov
jae
xchg
dec
call
les
push
mov
js
xor
lds
sbb
lret
sbb
mov
pop
inc
xchg
add
mov
push
test
aad
lds
fldcw
dec
nop
inc
imulb
and
sar
clc
xchg
add
mov
in
cli
outsl
stos
pop
fsubrs
sahf
js
xor
std
enter
rcrb
and
add
pop
jge
nop
dec
std
mov
xlat
imul
dec
xor
int
out
sbb
fucomi
mov
mov
ficompl
cmpsl
and
xchg
xchg
add
fsts
dec
rcr
fimuls
inc
jmp
adc
lahf
in
std
test
mov
xchg
sbb
iret
in
add
xchg
ja
jbe
mov
push
or
int
mov
lods
jmp
ret
push
xorb
sbb
das
cmpsl
fistpll
lret
mov
lds
jecxz
jmp
outsb
add
test
jns
rcrl
movsl
stos
decl
dec
push
mov
xchg
xchg
sbb
inc
mov
call
idivl
std
mov
int
decl
xor
int
out
xchg
cmp
or
repz
dec
lret
icebp
jns
fdivs
clc
cmpsb
shll
sub
or
filds
or
lock
lret
lods
stos
jbe
in
jecxz
and
in
outsl
imul
push
sbb
mov
hlt
lods
cwtl
movsl
jno
daa
ret
in
sti
sarb
loopne
orb
inc
xchg
cmp
sub
repz
inc
sbb
push
pop
pop
mov
jne
xor
pop
mov
addr16
pushf
lcall
mov
das
xchg
jmp
inc
sbb
jnp
movsb
stos
in
mov
mov
lcall
add
loope
inc
sbb
xchg
sub
cmpsl
add
xchg
xor
mov
xchg
mov
aaa
out
mov
push
mov
jb
or
xor
inc
fs
dec
dec
loope
sbb
lea
adc
call
je
sbb
imul
xchg
or
fstpt
faddl
pop
stos
loopne
pop
mov
and
lahf
test
cmp
cmp
cmc
sub
fistl
out
decl
pop
or
add
scas
adc
std
and
push
icebp
xor
incb
shlb
dec
je
lret
mov
cmc
mov
imul
jno
inc
mov
mov
int
bound
mov
dec
and
xlat
or
adc
mov
mov
imul
jnp
mov
xlat
aaa
inc
hlt
jle
dec
mov
push
mov
clc
std
int3
outsl
cld
imul
fwait
xchg
aad
lcall
mov
shll
adc
pushf
movsb
mov
out
or
lret
loop
mov
pop
shrb
data16
cmpsb
lods
pop
movsb
cmp
icebp
dec
and
mov
and
sbb
aaa
pop
add
inc
mov
fdivrl
or
sub
outsl
add
repnz
mov
sub
andb
xor
sub
inc
cld
fwait
add
rcl
lcall
push
mov
pop
shll
cmpsb
in
jl
sbb
rol
fwait
mov
stc
adcl
movsb
pusha
lret
add
lret
mov
adc
cld
xor
fwait
dec
les
push
push
xchg
out
cmc
ja
stos
js
xchg
shlb
pusha
jge
fidivl
mov
test
in
lods
sarb
sbb
mov
imul
cmpsb
imul
and
and
xor
jns
cmc
ds
mov
cmp
sbb
xlat
test
clc
repz
mov
movsl
mov
cmp
inc
pushf
movsl
dec
and
testl
pop
aas
xlat
cmp
xor
push
push
mov
stos
mov
pop
insb
scas
jb
lahf
sub
cmpsb
sbb
fisubs
push
jns
or
xchg
lret
push
ljmp
cmpsb
movsb
clc
in
int3
dec
shr
push
mov
fnstenv
xor
orb
jne
cmp
mov
and
and
mov
in
mov
cltd
test
dec
mov
sub
or
shlb
cmp
jmp
adc
push
mov
pop
xchg
mov
lds
mov
mov
and
mov
pop
dec
or
sti
enter
arpl
adc
ja
inc
xor
cmpsl
mov
xor
mov
pushf
sahf
mov
cmc
jl
mov
inc
lret
or
add
mov
cmp
invd
xor
test
lcall
xchg
or
ds
js
movsb
sbb
out
or
lock
aam
mov
popl
stos
imul
jle
jge
movsl
scas
xor
pop
inc
cs
fdivrs
in
daa
popa
mov
fimuls
xchg
xor
pop
adc
dec
mov
adc
cmp
scas
add
or
jmp
jecxz
mov
cli
cmp
out
pop
dec
fs
pop
xor
pop
mov
shll
or
sbb
loope
int3
pop
arpl
cmp
jge,pt
fistps
fadds
shl
in
movl
and
lcall
test
les
fcmovu
and
ret
gs
mov
iret
adc
incl
jp
fistps
sub
dec
rcr
jl
mov
and
mov
sub
repnz
in
pushw
sti
cmpsb
jbe
test
adcb
in
mov
mov
push
ret
sbb
cwtl
ficoms
jb
orl
mov
repnz
mov
and
xor
mov
push
jo
es
ficomps
mov
mov
lds
hlt
scas
inc
mov
je
or
mov
sub
lret
sbb
addr16
and
mov
mov
shll
sub
push
add
leave
loope
add
int
push
pop
add
sbb
fwait
or
cmp
mov
stc
rcrl
jp
or
jge
mov
loope
call
mov
clc
xchg
cmp
xor
jns
lods
hlt
sub
test
das
xchg
dec
mov
mov
into
js
jmp
mov
data16
sahf
test
out
and
mov
call
and
jo
xor
andb
cld
mov
hlt
sti
jb
and
gs
mov
sub
xchg
adc
aaa
mov
fsubp
pop
jb
lock
and
mov
mov
imul
xchg
mov
fisubs
faddp
xor
testl
sti
and
sbb
mov
sbb
pop
leave
imul
sahf
pop
jo
in
sub
les
jle
js
ds
test
push
dec
xor
xchg
dec
mov
push
cmc
inc
mov
test
aad
ficompl
sahf
sub
gs
adc
in
sbb
adc
pop
int
les
push
scas
repnz
jl
call
lods
xchg
sub
mov
sbb
mov
aam
lods
xor
out
pop
hlt
push
aaa
push
repnz
adc
mov
xchg
jp
bound
jb
bound
shl
jg
push
clc
inc
sub
and
and
aad
or
rolb
pop
mov
add
xor
mov
repz
stos
mov
jno
mov
stos
ljmp
sahf
adc
movlps
mov
sbb
lcall
out
push
jo
fstps
insb
cmc
lods
pop
addr16
dec
lret
inc
decl
or
mov
test
ja
hlt
dec
cltd
mov
adc
fmul
jp
mov
cld
mov
mov
sarl
sti
mov
in
push
or
iret
mov
or
hlt
daa
mov
int
adc
adc
cmp
icebp
cwtl
fbld
inc
pop
fs
jo
mov
ret
jle
int3
pop
sbb
mov
sti
xchg
or
addr16
cli
sbb
std
lret
cmp
push
cmc
xchg
pop
push
inc
xor
sub
push
lret
imul
test
in
lods
outsl
sub
clc
add
aam
add
dec
cmp
and
in
movsl
iret
cmp
dec
mov
xchg
mov
inc
push
jl
pop
sub
xor
mov
pop
ljmp
cltd
popf
idivb
fwait
xor
ret
fwait
dec
pop
movl
icebp
mov
cli
int
ret
arpl
xchg
ds
dec
fidivrl
xor
xchg
aas
lret
inc
cwtl
inc
pop
xchg
xchg
jno
pop
fcmovu
mov
sbb
jge
or
inc
cs
out
mov
imul
xor
xor
and
fldcw
adc
pop
push
or
loopne
pop
pop
imul
mov
int3
sub
outsl
cmpb
std
or
frstor
add
xchg
add
popa
movsl
mov
mov
jp
mov
test
pop
dec
imul
jnp
push
addr16
xchg
cmpb
push
jbe
mov
adc
pop
sub
mov
cltd
ljmp
pop
mov
and
mov
mov
icebp
push
repz
mov
lcall
movsb
insl
cmpsb
cmpsb
repnz
out
test
adcb
mov
ds
push
jne
cmp
push
mov
sub
icebp
sbb
pop
sub
loop
scas
xchg
push
push
or
dec
aaa
int3
cmc
xchg
mov
xlat
fists
popa
inc
or
jno
cli
aam
mov
jg
mov
inc
addb
fstpl
pop
loope
add
sbb
daa
push
stos
and
scas
sarl
nop
push
mov
push
mov
lret
out
add
mov
pop
sub
out
in
gs
shlb
bound
xlat
and
aaa
mov
jecxz
xor
cmp
push
dec
into
cmc
std
pop
lods
xor
mov
hlt
mov
mov
pushf
icebp
scas
mov
test
aam
xor
mov
test
cli
xlat
sub
adc
push
pop
jmp
dec
sbbl
or
push
inc
fldl
xchg
ficomps
xchg
in
outsl
test
mov
cld
aas
lcall
push
mov
aaa
cmc
xchg
mov
out
or
push
push
inc
inc
fldenv
ret
js
lock
mov
mov
sbb
push
jecxz
pop
mov
aad
outsl
sti
jl
add
mov
cmp
dec
stc
pop
push
std
add
sbb
inc
push
ret
out
mov
dec
stos
sti
sahf
jbe
popl
loop
aam
xor
stc
dec
jge
pop
fadds
add
sub
xchg
mov
int3
dec
aas
je
xor
xor
pop
cmp
and
popf
in
pop
out
jno
add
xlat
add
pop
fmuls
pop
out
stc
movsl
loope
out
dec
aas
inc
jmp
sbbb
sbbb
mov
loope
pop
pop
imul
imul
add
sbb
sub
in
and
pop
push
addl
and
xchg
push
test
mulb
adc
in
push
push
jo
sti
sbb
xor
mov
fnsave
jnp
mov
jo
and
mov
jae
mov
push
mov
stos
sti
pop
inc
mov
xchg
mov
repnz
dec
sub
sub
scas
stc
xor
xchg
pop
loop
jg
add
lods
mov
cmp
cmpsb
testb
adc
repnz
pop
shll
mov
mov
les
jmp
les
jl
lcall
adc
aam
ja
and
xchg
movsl
enter
aad
mov
loopne
movsb
mov
test
fdivrs
lock
shl
jne
cli
les
mov
in
xchg
into
mov
dec
xor
dec
cs
shl
lret
jbe
cld
pop
notb
icebp
xchg
inc
call
ja
insb
lods
sub
in
inc
sbb
sahf
push
loopne
cmp
push
and
aas
jmp
inc
xchg
jecxz
outsb
push
ficompl
int
rorl
add
add
ds
popf
sti
dec
jae
jae
pop
xchg
dec
xchg
prefetchwt1
or
sub
xchg
xor
mov
or
arpl
data16
js
or
stos
sbb
movsb
mov
movzbl
mov
test
in
sbb
lods
inc
sbbl
xor
adc
jo
imul
mov
jg
cs
das
sbb
lret
pushf
jl
das
insl
mov
fsubl
loope
adc
leave
push
gs
pop
daa
inc
cli
lahf
inc
dec
mov
inc
faddl
mov
leave
mov
je
fs
testl
aaa
jns
or
pop
and
mov
fisttps
xor
push
mov
push
popf
inc
out
push
sub
inc
sbb
ljmp
inc
iret
lahf
sbb
xor
pop
push
mov
lcall
js
arpl
out
push
subl
push
jg
sub
cld
cmpsl
jmp
mov
iret
adc
mov
fucomip
mov
sbb
jecxz
testb
ficoml
mov
fs
fwait
movb
pushf
faddl
and
rcrb
sbb
jae
test
cld
dec
sbb
add
add
test
loopne
inc
adc
pop
or
adc
inc
enter
or
sbb
push
adc
xchg
add
mov
gs
pop
mull
sarl
fcoml
dec
mov
or
int3
fstps
lea
lods
mov
into
cmp
fcomip
mov
rorb
iret
mov
out
andl
hlt
push
push
jnp
into
adc
insb
xchg
call
pop
pop
xchg
cmpsb
jp
andl
rcrb
rorl
es
out
sbb
lods
xor
cld
mov
push
das
dec
jmp
and
xor
mov
xchg
jle
inc
notb
xchg
cwtl
jl
call
adc
mov
int3
shlb
scas
incl
data16
mulb
sub
and
xor
pop
bound
jmp
mov
and
add
aas
out
out
cwtl
lahf
dec
jmp
roll
outsb
push
pop
sbb
lcall
cmp
add
addr16
cmp
iret
mov
and
loope
xor
sbb
dec
repz
mov
stos
sub
stos
sub
cwtl
push
hlt
popa
add
sbb
fsts
mov
pop
call
lret
cld
push
or
jo
in
clc
dec
and
cmp
scas
xchg
lods
push
es
mov
movsl
frstor
ds
sbb
mov
hlt
xchg
sarb
arpl
pusha
test
xor
fstps
inc
sbb
inc
xchg
fwait
dec
inc
andl
add
lock
jmp
xchg
fs
cld
mov
mov
loopne
test
hlt
jle
jbe
gs
jmp
aad
mov
inc
mov
loopne
addb
jle
addr16
mov
imul
iret
push
imul
mov
or
cwtl
dec
lahf
jmp
mov
jns
push
insb
jnp
jae
and
sbb
and
fldcw
sahf
out
push
sub
sbb
cmpl
shrb
push
fisttps
jb
out
or
push
mov
mov
in
mov
jo
cmpsl
cld
sahf
jb
push
dec
xlat
cmp
mov
mov
rcll
xchg
pop
scas
insl
push
lea
es
cwtl
add
dec
add
mov
ret
xchg
cmp
adc
aam
and
mov
sbb
bnd
dec
push
pop
fmull
or
xor
xadd
or
pop
or
aam
lret
loopne
aaa
xchg
fdivrp
sub
mov
xchg
jb
sub
aas
jl
mov
fwait
sbb
push
dec
mov
fisubrs
insb
repnz
cwtl
sbb
hlt
jle
leave
push
mov
mov
push
shl
cmp
ret
mov
mov
clts
xchg
ret
icebp
scas
pop
push
je
pop
aas
jg
inc
jg
pop
clc
int
add
xchg
pop
lcall
dec
xor
inc
jge
push
sbb
fbld
xchg
xchg
mov
dec
mov
sbb
int
pop
les
incb
je
pop
mov
mov
popf
cmp
push
aad
int3
mov
inc
in
lea
or
mov
in
in
pusha
fstpt
lcall
and
mov
xchg
ss
loopne
es
or
inc
and
dec
test
shll
or
dec
xchg
daa
leave
dec
pop
out
cmpsb
xchg
pop
push
jl
lods
and
sbb
jne
dec
adc
pop
cltd
arpl
push
fcomps
shr
scas
push
call
repnz
push
or
sti
aad
ljmp
xorb
les
int3
hlt
stos
hlt
xchg
push
aad
jno
mov
scas
jo
punpcklwd
pop
xchg
pop
pop
filds
cmp
mov
adc
ret
or
sbb
scas
push
push
fwait
movb
or
mov
xor
lds
or
sarb
sbb
dec
iret
mov
sbb
mov
dec
jne
fmuls
cmp
sbb
addr16
lods
inc
jnp
das
data16
stc
fs
mov
mov
pop
mov
jg
xchg
sahf
xor
repnz
sub
fwait
dec
mov
cmc
aas
in
jae
cltd
es
pop
push
cmp
adc
mov
mov
js
out
pop
addr16
ffree
pop
std
nop
jmp
test
push
aaa
out
aad
test
movb
cwtl
xor
shrl
fwait
mov
xchg
xchg
stos
cltd
aam
inc
push
out
and
movsl
sub
lds
cwtl
sub
loopne
in
ljmp
xor
lahf
pop
xor
xlat
mov
push
xchg
pop
movsb
leave
fildl
shrl
dec
test
in
adc
push
stc
push
xor
call
popa
fidivrs
add
sub
bound
mov
cltd
push
inc
lahf
sbb
push
subl
stc
shll
adc
cmpsb
jmp
xchg
lods
cli
xchg
test
out
ss
cli
add
mov
xor
sub
mov
mov
inc
dec
xor
rolb
dec
jp
es
leave
jecxz
add
push
pusha
push
cs
jmp
daa
mov
inc
pop
test
in
xor
add
xor
inc
xchg
cmp
dec
xor
xchg
add
mov
pop
adc
pop
jns
cmpsb
fisubs
jne
mov
jp
hlt
mov
mov
add
fimull
aaa
sahf
adc
mov
xor
xchg
xchg
movsl
cmp
jb
lea
in
pop
pusha
int
scas
sbb
mov
js
je
mov
inc
sub
fcmovne
push
es
pop
push
sub
shlb
fxch
jnp
adc
pop
in
jno
xor
mov
movsl
mov
in
push
in
cltd
mov
mov
push
pop
adc
jp
xchg
add
sbb
mov
sub
shl
pop
push
lea
and
inc
xchg
mov
iret
fnstsw
pop
sahf
popa
aaa
dec
dec
in
mov
fcompl
sbb
and
mov
push
xor
xchg
cmp
cmpsb
insl
fcmovne
scas
pop
outsl
fcoml
xlat
popf
icebp
in
in
int3
orb
popf
stc
cmpl
cltd
sar
sbb
mov
or
mov
cli
mov
cmpsb
fcompl
sub
rclb
jbe
shlb
lret
xlat
pop
adc
xchg
jnp
cmp
or
repnz
outsl
cmp
xor
add
push
pushf
ja
repnz
xchg
lock
xor
dec
es
add
jnp
jnp
pop
movhlps
fwait
dec
mov
insb
and
mov
loopne
fwait
cmp
jge
lret
jmp
add
sbb
arpl
adc
test
inc
lret
adc
ret
or
jno
lock
sarb
xor
sub
loopne
push
imul
mov
test
insb
or
fisubl
jno
es
dec
xchg
insb
push
dec
aaa
pop
inc
adc
ljmp
xchg
and
cmp
jmp
test
push
mov
xor
repnz
jle
mov
fs
jno
push
hlt
cmp
xchg
push
and
xchg
inc
fs
insb
std
aad
in
adc
cmpsb
push
adc
in
ret
add
nop
pop
jg
aas
andl
sub
and
clc
jo
mov
mov
ror
addr16
xlat
pop
mov
cmpsb
mov
sti
dec
pop
ja
pop
daa
mov
hlt
dec
enter
es
popa
cld
out
cltd
mov
pop
popf
and
cmp
push
lret
ret
int3
adc
pop
loope
fldenv
in
jl
cmpsb
movsb
jo
fnstcw
mov
add
fisttpll
rorl
sbb
jns
jg
cmp
mov
or
sbb
sub
mov
data16
cmc
ss
cs
aaa
xor
mov
fwait
xor
pop
cli
mov
imul
cmpsb
andb
out
sub
ret
xor
push
mov
cli
shr
lcall
xchg
pushf
insl
fidivrs
or
inc
dec
shrl
ficoms
pop
cmp
or
adc
adc
in
mov
mov
dec
adc
lods
dec
add
scas
scas
test
enter
cmp
fisubs
mov
cmp
mov
cmp
inc
addr16
push
mov
mov
mov
loopne
cs
popf
sub
ffreep
pop
xchg
lahf
mov
jl
out
dec
mov
xchg
jmp
bnd
lock
sbb
or
outsl
lods
mov
cmp
and
test
dec
ss
addr16
xchg
push
lcall
hlt
dec
jmp
sbb
out
sub
ljmp
or
adc
mov
clc
mov
cmpsl
pop
lds
addr16
mov
sub
inc
mov
stos
xor
addr16
or
cmp
mov
sbb
sbb
mov
addr16
adc
pop
out
fwait
push
pop
jae
or
jge
aam
sub
inc
jp
lods
fstl
aam
shlb
add
push
xchg
adc
movsl
or
jmp
cmp
jge
mov
cmp
out
shll
loop
mov
jnp
mov
int3
inc
fistpl
adc
push
int3
jge
inc
andl
repz
clts
adc
pop
jp
lcall
test
pop
adc
mov
or
pop
imul
push
mov
jns
jo
dec
popf
aam
inc
mov
lcall
movsl
sub
mov
xchg
insl
cmpsb
ja
pop
xchg
push
popf
xchg
lea
jne
push
add
sti
push
add
or
mov
cmc
add
and
movsb
rorl
sbb
adcl
xor
pop
cmpsb
inc
leave
mov
push
mov
jo
inc
xorb
loopne
js
pop
aaa
push
pop
adc
mov
cltd
sbb
out
cmp
inc
xchg
maskmovq
testl
add
mov
sub
pop
cmp
or
jge
and
in
lret
fs
data16
push
jnp
sbb
or
jae
iret
jbe
les
loop
bnd
in
cmpsl
xrelease
add
mov
and
out
stos
mov
outsb
cmpsl
dec
push
andb
cmc
cli
daa
mov
stos
lret
adc
jmp
push
outsl
inc
in
popf
and
adc
sbb
jge
inc
loop
lret
cltd
mov
out
fbld
popf
mov
insb
jge
and
hlt
sbb
push
xchg
inc
and
jle
outsb
add
jbe
cltd
not
inc
repnz
repz
sub
cltd
xorps
inc
mov
push
rolb
enter
sbb
rol
fdivr
lock
enter
sbb
fisttpl
sbb
xor
and
pop
xchg
iret
add
or
add
rcrl
das
imul
mov
mov
and
cmp
add
out
insl
les
cmpsb
add
fninit
inc
pop
test
inc
add
ja
scas
lret
stos
cmp
or
and
xchg
cltd
push
mov
xor
popf
jp
inc
inc
incl
cld
outsl
scas
in
sbb
pop
mov
imul
lods
inc
ffree
in
outsb
popa
and
out
sbb
arpl
loop
push
cmpsl
sub
cltd
lcall
xor
push
mov
mov
rorb
mov
ljmp
push
insl
int3
push
inc
xor
or
xchg
clc
pop
sarl
jnp
dec
mov
ss
pop
fcmovnu
loope
pop
cmpsb
jae
push
cltd
nop
jp
imulb
jp
icebp
daa
ds
rclb
gs
adc
div
mov
push
fldenv
jge
sbb
ja
shrl
mov
sbb
jae
jg
je
insb
push
movsl
out
lret
icebp
test
xlat
xchg
sub
aad
jbe
pop
mov
xchg
fs
stc
and
mov
inc
sub
dec
test
ss
test
mov
dec
adc
add
sbb
mov
fisubl
aaa
rorl
das
add
add
inc
xchg
xor
jmp
popa
ret
xor
jp
fisubs
clc
xchg
jb
shr
ret
cmp
jno
cs
mov
stos
mov
popa
mov
push
inc
cli
cmp
pop
pop
jl
add
sub
cs
std
xor
mov
fs
mov
jp
mov
aam
pop
cmp
fwait
test
sbb
cmp
cld
xchg
stos
daa
pop
out
scas
daa
inc
pushf
mov
idiv
cmpsb
lods
fsubrl
fsubr
mov
cld
mov
aaa
pop
cmp
icebp
sbb
sahf
mov
movsl
sub
lods
ljmp
push
pop
jg
mov
xor
mov
cmpl
and
xchg
testb
xor
or
sub
xchg
repz
add
movsl
icebp
add
jb
jbe
xor
cld
ss
jl
jno
mov
sbb
in
dec
or
mov
push
cmc
das
call
jb
nop
das
rcr
inc
cs
pusha
sbb
icebp
jns
xchg
push
or
dec
inc
cmpsl
int3
jne
std
mov
aaa
scas
mov
xchg
out
mov
pop
dec
pop
loope
repnz
xchg
sbb
hlt
push
jbe
sbb
mov
jg
int
addl
loopne
out
repz
dec
das
and
pop
sbb
sub
pusha
lret
imul
ret
test
dec
xor
and
lret
sbb
gs
imulb
pushf
testb
push
pop
push
aas
lret
mov
xchg
mov
ss
ret
cmpsl
sbb
add
flds
or
imul
lcall
fsubrp
clc
pop
adc
lret
cwtl
cmc
jecxz
mov
daa
faddl
sbb
pop
mov
xor
dec
sti
xchg
cwtl
push
mov
adc
add
repnz
fs
lret
fbstp
mov
out
xor
imul
popf
in
push
mov
cmp
movsb
jno
add
mov
mov
or
enter
pop
push
mov
lret
adc
cwtl
fs
mov
cmp
mov
jle
bound
xor
in
xchg
xor
xor
xchg
sub
xchg
pop
push
adc
push
or
in
mov
jp
aad
aaa
xor
outsb
iret
jmp
xor
pusha
jae
lods
fxch
pop
mov
imul
or
jbe
mov
stc
mov
lret
mov
xchg
inc
dec
inc
mov
popf
sub
mov
rolb
insl
in
mov
in
or
ss
lret
xor
mov
lods
xchg
dec
std
aad
jno
xor
jmp
add
insl
lret
cmp
gs
fnsave
dec
xorb
lret
adc
pop
adc
pop
push
pop
jbe
lods
xchg
jge
out
xchg
push
leave
jnp
and
andb
fistps
inc
mov
test
mov
popf
iret
sbb
xchg
out
lcall
lock
adc
fwait
xchg
sbb
clc
jbe
out
rclb
push
and
lret
mov
jg
aad
dec
in
sub
insb
je
inc
inc
sbb
push
mov
lods
enter
xor
stos
cs
xor
lcall
lahf
mulb
dec
or
mov
jmp
dec
mov
xchg
jp
out
jae
xchg
mov
call
xlat
pusha
lret
mov
movsl
or
loopne
push
scas
inc
xchg
mov
add
pushf
imul
pop
xchg
clc
popf
adc
jnp
mov
aad
cmc
dec
in
repz
inc
sahf
push
scas
les
pop
sub
pusha
movsb
jo
les
aam
mov
mov
arpl
aad
cli
inc
and
mov
push
mov
data16
ret
sub
cmp
repnz
lea
js
movsl
mov
push
dec
jmp
lea
jle
repz
inc
pop
mov
cmp
and
mov
nop
cmp
inc
add
dec
int
push
push
inc
les
bound
lock
and
cmc
ds
lock
inc
mov
scas
cld
mov
ss
or
xor
xor
jo
jp
or
gs
adc
jb
mov
jo,pt
or
push
ds
fdivrl
push
jnp
insb
mov
xchg
ret
pop
nop
cmp
nop
cmpsb
push
jle
cmp
mov
js
dec
push
movl
sbbl
lods
test
pusha
ss
bound
sbb
out
lods
and
mov
mov
sbb
and
mov
jno
leave
inc
sarl
rolb
shlb
mov
into
mov
cmc
testl
sbb
jo
sbb
aaa
mov
mov
or
insb
push
dec
mov
addr16
ljmp
imul
das
stc
sub
adc
and
pushf
mov
subl
out
aad
aas
inc
mov
test
fcoms
pop
add
shrl
subb
sub
fldcw
add
leave
jg
cltd
repz
adc
sbb
ror
idivb
ret
lcall
stos
std
sub
sbb
inc
cmp
enter
xor
and
sub
cmp
xchg
push
mov
sub
cmp
out
mov
dec
adc
insb
inc
sbb
repnz
jmp
dec
cmpsb
push
cmp
sbb
sub
and
jp
mov
jo
pop
mov
dec
nop
push
scas
fimuls
mov
int3
jb
cmp
push
inc
mov
cmp
loop
outsb
inc
test
cmp
test
push
pop
cmc
repz
dec
loopne
xchg
inc
addr16
xor
pop
inc
adc
int3
imul
xchg
sbb
iret
cmpsb
sarl
ljmp
push
subb
xor
cmpsb
and
pushl
xchg
sbb
mov
mov
std
push
xchg
jnp
pop
or
inc
rol
mov
out
mov
sysexit
rcll
fistps
adc
ffree
xchg
push
jmp
or
cmpsl
ljmp
iret
cwtl
push
push
or
and
push
cmp
sub
fadd
mov
and
pop
cmp
pop
pop
data16
in
popf
pop
pop
stc
sbb
adc
movsb
jnp
add
int3
jnp
and
jno
lock
dec
sbb
xchg
push
adc
push
dec
xchg
or
ret
cmpsb
je
fwait
das
aaa
mov
adc
adc
sbb
sub
or
cmp
jno
fcomip
ud1
test
jb
push
cli
fmuls
stc
stc
fadds
int3
or
add
ret
mov
or
and
xor
inc
add
xchg
pop
push
push
jb
jecxz
xor
dec
pop
scas
and
sub
lea
clc
mov
das
or
xor
gs
fs
sub
cmp
mov
lods
insb
jo
cmp
adc
nop
hlt
sub
out
mov
fiadds
movsb
mov
mov
pop
lock
mov
xchg
jns
inc
int
scas
cld
and
icebp
mov
sahf
inc
stos
popf
dec
fwait
lret
mov
out
push
sub
out
pop
sub
mov
mov
mov
ret
repnz
lcall
add
fidivrl
daa
fidivs
pop
pusha
cmp
jno
xchg
and
shll
popa
inc
inc
push
lret
and
xchg
mov
lcall
std
push
in
scas
cmpl
into
xor
xchg
lock
sarb
push
orl
mov
adc
mov
mov
cltd
and
xchg
scas
pop
fucomip
mov
add
adc
xlat
shrb
int3
popa
pop
mov
mov
dec
mov
iret
andl
fwait
loopne
hlt
jge
xchg
dec
push
push
mov
push
rclb
leave
add
xchg
dec
loope
add
jle
mov
cmp
xchg
cmp
das
inc
mov
mov
mov
pop
inc
push
shll
sub
lock
in
incl
adc
testl
test
xchg
jg
rol
test
mov
jne
mov
xor
and
das
test
pop
jge
movsb
mov
push
jg
lahf
imulb
shll
push
xchg
dec
hlt
jp
push
divb
push
popa
adc
mov
pop
inc
clc
xor
andb
out
movl
inc
iret
inc
xchg
rcrb
mov
mov
sbb
cmpsl
push
add
or
dec
sbb
leave
mov
xchg
in
mov
in
push
jl
out
push
sbb
pushf
imul
orl
or
je
aam
push
inc
imull
mov
bound
lret
into
dec
scas
add
cmp
push
or
in
rclb
xchg
mov
xchg
jmp
lods
sbb
outsl
and
mov
lods
xor
in
int3
idivl
out
mov
jge
xchg
imul
fidivl
rcr
pop
and
mov
or
lcall
jae
push
or
les
imul
leave
cld
stos
decl
sub
mov
xor
jge
mov
inc
mov
cmp
adc
out
adc
or
adc
mov
fnstenv
out
adc
mov
inc
inc
fdivl
negb
sbb
rclb
adc
nop
insb
adc
cltd
dec
clc
add
cmc
pop
mov
xchg
out
pop
xor
cmp
lret
cmp
or
fsts
ret
fisubrs
push
dec
mov
rorb
jno
shll
xor
testl
adc
jno
mov
sub
mov
or
outsb
aam
js
xor
add
sti
jle
adc
cltd
fldl
lret
icebp
mov
rcr
stos
fwait
mov
cmp
jb
cmp
sbb
outsb
xchg
pop
jns
stc
sarb
jge
mov
jbe
jl
ljmp
adc
test
dec
sub
sub
xor
sahf
dec
leave
mov
xor
sbb
sarb
xlat
leave
pop
push
std
jg
adc
das
shr
push
mov
fs
aad
ficomps
mov
shll
roll
pop
lahf
lahf
adc
out
mov
push
pop
ja
xchg
lea
and
insl
dec
arpl
xor
movsb
shl
mov
clc
int
cmpl
dec
insl
orb
jo
fs
sbb
mov
cmpsb
ljmp
call
loope
adc
stos
xchg
movsb
xor
pop
mov
jno
mov
cltd
lret
add
dec
out
and
scas
fsave
and
imul
ds
int3
cmp
divb
xor
sub
loop
and
mov
pop
pop
xchg
pop
jle
jo
xor
sti
sbb
lcall
inc
dec
loopne
js
nop
dec
outsb
cmpsl
mov
iret
sub
ljmp
sti
mov
xchg
aaa
outsb
pop
mov
adc
sub
ljmp
xchg
out
pop
cmp
stos
out
mov
dec
pop
sbb
mov
dec
rol
dec
xchg
mov
test
shll
pushf
xchg
mov
cltd
lahf
dec
in
and
push
in
sub
dec
mov
popa
lods
mov
test
aam
fsts
jns
adc
sbbb
bound
jmp
push
fisttpl
jb
mov
dec
pop
mov
mov
jp
js
adc
xor
aas
outsb
push
jecxz
push
out
xchg
es
mov
adc
sbb
inc
cmp
adc
imul
outsl
repnz
xlat
inc
push
sub
test
mov
popf
mov
ret
sub
jle
int
xor
stos
das
xor
dec
jno
xor
fwait
mov
out
daa
xor
mov
xor
sub
jbe
inc
stos
mov
push
test
movsl
inc
lea
pop
push
lock
cmp
sbb
insl
mov
aas
jmp
mov
pop
stos
imul
pusha
push
ds
cmp
and
wbinvd
testb
jb
mov
scas
mov
in
dec
shlw
or
fbstp
xchg
pop
fisttpll
mov
aaa
les
popl
jb
cmp
jb
pop
jg
js
lods
mov
fst
aad
daa
lds
and
fdivr
cltd
inc
rolb
andl
adc
aaa
xor
repz
loopne
jbe
lock
or
mov
dec
cmpl
xor
push
out
cmp
js
mov
push
ret
jae
cmpsb
lea
test
js
dec
out
or
stos
iret
test
js
call
imul
jmp
ret
dec
mov
mov
mov
jae
scas
call
jg
add
flds
inc
cmp
sbb
ds
dec
cmpsb
sbb
out
mov
dec
mov
test
into
outsb
shll
mov
pop
jnp
xor
fidivl
xchg
pop
sub
push
insb
das
out
das
inc
mov
push
xchg
shlb
out
pop
faddl
sbb
push
loopne
adc
sarb
xchg
icebp
cmp
add
dec
cmp
inc
mov
pop
or
adc
jo
daa
in
push
adc
dec
aaa
ret
push
sarb
jne
pop
movsb
adc
add
inc
add
shll
cmp
mov
ds
xor
mull
jo
pusha
scas
les
lock
stos
std
mov
ret
aaa
or
lods
or
jl
push
inc
shlb
jle
mov
mov
jge
aas
sysenter
xor
jne
add
dec
insb
nop
sbb
sbb
dec
sbb
nop
sub
dec
cmpsb
inc
xchg
xchg
cmpsb
mov
inc
dec
mov
push
in
ret
jmp
lcall
cmp
int
into
cmp
sub
cmpsl
cmp
addr16
sub
lcall
lret
paddsw
shlb
jnp
push
dec
addr16
shrb
adc
insb
lea
jmp
popf
outsl
out
jle
adc
xor
inc
pop
shlb
out
rcr
cld
ret
icebp
cmp
push
push
inc
insl
int3
push
daa
rolb
fsub
out
xchg
roll
imul
out
fiadds
pusha
sbb
cmp
jp
out
lcall
loop
pusha
fcomip
lret
cmp
je
dec
mov
aas
inc
sbb
xor
stos
adc
sbb
clc
loopne
push
add
popa
aas
jp
jae
jbe
xchg
ja
sub
insl
je
fcomps
in
outsl
mov
dec
jp
insl
popf
pop
xor
arpl
and
xor
scas
sbb
and
lahf
pop
sbb
push
push
jae
data16
push
loop
jle
xchg
dec
pop
sub
lea
lock
sti
jmp
xchg
push
pop
loope
imul
add
test
adc
rcrb
fwait
stos
sti
and
xlat
int
mov
push
add
test
scas
mov
add
mov
loopne
in
or
cmpsb
std
jb
xchg
adc
pop
ja
int
ret
xchg
fisubrl
mov
js
or
mov
aaa
xchg
int
jo
bound
add
clc
mov
xchg
sahf
fs
fwait
xchg
inc
push
scas
xchg
or
push
dec
movl
jne
insb
and
ljmp
ljmp
jns
mov
xchg
enter
fsubp
and
add
jecxz
movsl
sarl
hlt
dec
repz
adc
dec
rolb
jge
rclb
mov
not
divb
dec
adc
push
jp
inc
or
pusha
ret
loop
xlat
mov
jb
lea
je
adc
mov
movsl
sti
andl
dec
lock
lret
ljmp
es
xchg
sub
or
xchg
pop
add
push
mov
nop
sub
add
mov
fidivl
jo
imul
mov
pop
sub
pop
insb
add
fsubr
mov
bound
pop
scas
xor
je
fbstp
inc
add
nop
mov
push
shrl
dec
cli
movsb
loop
inc
cmp
pop
sub
xchg
fbstp
out
bound
xchg
sub
push
jae
adc
in
in
into
xchg
sarl
das
add
jne
lcall
mov
js
scas
jmp
and
push
icebp
mov
repz
mov
xor
add
mov
push
dec
or
mov
aas
xchg
dec
lret
gs
mov
test
mov
dec
pop
outsb
mov
mov
mov
rcll
push
adcl
add
notl
sbb
sbb
test
aaa
cmp
dec
sub
push
sbb
mov
lods
cs
arpl
push
stos
sbb
in
mov
sahf
enter
clc
mov
xor
lds
lods
loop
jbe
int
lock
push
ret
mov
xor
jg
loopne
jne
packssdw
mov
es
sbb
mov
xor
mov
xchg
repnz
jl
outsl
push
xchg
fnstsw
inc
mov
jl
xor
mov
mov
cmpl
dec
enter
aad
lods
pop
or
fdivrl
enter
xor
js
aaa
les
dec
cmp
in
inc
jmp
aas
jmp
dec
xor
xchg
lea
sbb
dec
inc
add
ljmp
xor
pop
sub
mov
or
call
popa
mov
xor
insb
lret
out
fimull
cld
orl
aad
sbb
nop
cld
cli
pop
inc
jle
imul
cmpsb
jne
xchg
dec
sub
adc
arpl
mov
push
jo
add
test
insb
jp
enter
sub
mov
or
lock
std
lahf
fs
mov
and
push
or
in
scas
in
dec
xor
jae
addb
arpl
insl
and
out
adcb
mov
mov
fildl
ss
aam
cmpsb
pop
add
mov
sbb
aam
pusha
mov
popf
mov
jle
cmp
pop
cli
aas
fisttps
push
test
jno
mov
mov
imul
and
push
outsb
push
loop
dec
push
jnp
pushf
stos
roll
pushf
dec
xor
jl
inc
adc
and
stc
in
inc
ja
sub
add
mov
mov
mov
pop
sub
test
negb
and
adc
int3
scas
dec
in
adc
sahf
xchg
mov
fdiv
jmp
fstl
popf
jnp,pn
inc
sar
sub
mov
stc
test
push
push
es
cmp
mov
fimull
into
hlt
sub
dec
cltd
aam
adc
push
insl
sbb
je
in
test
pop
repnz
cmp
insb
cmpsb
test
push
jp
pmaxub
mov
cmp
divl
cmpsb
andb
mov
fists
icebp
outsl
shlb
out
ret
arpl
sbb
decl
xchg
jae
loopne
js
rcll
sbbl
sbb
inc
sbb
sub
sbb
sub
dec
hlt
pop
cli
enter
inc
add
xorb
xor
push
dec
data16
out
add
and
fmull
shlb
sub
mov
ss
repnz
test
jbe
pop
add
gs
mov
jbe
xor
cwtl
and
js
or
or
push
fwait
mov
xchg
jns
addr16
sub
int3
dec
scas
aad
aad
pop
es
and
pop
sti
add
lods
sbb
das
mov
mov
mov
or
push
mov
and
aaa
mov
add
push
adc
sahf
dec
cmpsl
out
test
jnp
jge
add
out
jp
jl
push
jg
dec
cs
mov
sbb
inc
jge
xchg
test
filds
orb
lods
xchg
cmpsb
test
pop
and
pop
push
sub
mov
and
ss
adc
adc
pop
add
in
shll
xchg
cmpsl
fwait
and
addb
insb
mov
mov
jbe
cs
adcl
or
jnp
sub
in
xor
sti
xchg
xor
cmc
je
out
xchg
popa
call
scas
icebp
or
out
test
mov
push
icebp
inc
xor
aaa
fucomp
lret
popa
stc
xlat
mov
adc
fcmovnb
pop
pop
mov
repnz
xchg
data16
jne
jnp
ds
push
mov
or
scas
push
jnp
cmpl
xchg
enter
aas
lds
cmpsb
movl
jmp
leave
popa
push
sub
push
xchg
out
test
lods
mov
push
lret
lahf
adc
int3
jne
adc
sahf
fcoms
leave
mov
rcll
fucomp
popa
sub
scas
xchg
insl
iret
jne
orl
cmp
scas
lods
les
lds
out
fstps
outsb
das
cmpsl
mulb
mov
js
sbb
lcall
subb
ja
ficompl
cmp
sbb
mov
popf
cmpsb
fs
ds
jge
lret
dec
pop
adc
loopne
test
or
inc
inc
xchg
jo
ds
or
dec
lahf
loope
iret
jne
aad
push
stc
rclb
xchg
scas
out
inc
int3
jecxz
mov
fnsave
add
pop
jne
mov
js
lret
push
cmp
push
adcb
or
ret
repz
ret
loope
rcrb
stos
mov
dec
and
fs
dec
je
and
movsl
and
or
jmp
lcall
xchg
dec
push
cmpsl
fsubs
fldt
dec
imul
out
in
lret
hlt
or
mov
lret
imul
lahf
add
icebp
stos
ja
xlat
push
mov
sti
bnd
cmp
js
sub
jge
xorl
mov
mov
enter
mulb
mov
push
mov
cmp
xchg
mov
sbb
lcall
btc
jno
add
mov
aam
xchg
inc
imul
jae
popa
mov
flds
adc
push
dec
ja
mov
rolb
mov
fidivl
nop
jne
insl
xchg
icebp
insl
pop
jp
xlat
cmp
fsubs
das
out
or
std
mov
jg
and
imul
or
ret
out
or
or
cwtl
dec
mov
js
cmpsb
idivb
dec
mov
in
fisttps
inc
mov
and
jge
movb
xor
pop
stos
or
cwtl
outsl
fdivs
aas
dec
add
xchg
ds
xchg
mov
fucom
insb
mov
and
jne
outsb
ret
pop
xor
rorb
or
fstl
fadd
out
xchg
scas
jnp
out
shr
icebp
in
stc
cmp
xor
rep
pop
push
jns
inc
out
outsl
sbb
into
es
insb
arpl
jge
xchg
jne
add
adcb
lods
jp
dec
sub
or
dec
mov
rcll
sbb
push
mov
fidivrs
pop
mov
stc
jbe
mov
and
sbb
sti
ds
add
jle
push
into
xchg
lods
sahf
inc
inc
dec
js
aaa
cmp
dec
jmp
insb
adc
movsl
fwait
inc
push
jae
out
out
push
jne
fbld
inc
sub
push
sbb
jno
in
push
gs
pop
notl
scas
sbb
es
mov
inc
cltd
pop
fucom
xchg
jae
xchg
out
mov
imul
xchg
adc
jnp
jno
sbb
cld
addb
mov
pop
pop
xlat
push
push
popa
sti
popf
les
pop
jg
push
dec
lea
xchg
roll
nop
std
mov
mov
push
pop
push
mov
gs
inc
pop
mov
mov
lret
fildl
in
stos
dec
scas
push
push
dec
mov
cmp
mov
daa
sbb
dec
or
int3
or
mov
push
dec
daa
in
adcb
mov
in
cwtl
scas
cmpsl
stc
and
adc
ret
mov
xor
add
push
adc
rolb
jne
lea
stos
popf
adc
mov
insl
lret
ja
adc
inc
leave
arpl
fndisi(8087
out
shll
lods
fdiv
cmc
cmp
xchg
jnp
decl
mov
push
sbb
cmc
lock
sub
pop
hlt
loopne
lcall
aas
lods
and
xchg
clc
fnstsw
jnp
pop
pop
shll
push
aas
mov
mov
out
lods
adc
mov
out
movsb
call
jle
sbb
push
or
leave
cmp
cli
pop
or
fadds
jg
xor
shll
fcoms
mov
lcall
sub
mov
push
nop
daa
dec
idivl
add
outsb
sbb
and
jno
sbb
sbb
cwtl
jmp
add
enter
fsubp
jmp
rclb
iret
loop
roll
pusha
mov
ror
xchg
mov
ds
cmp
iret
movsl
cld
xchg
push
imul
xor
add
imul
add
les
fcom
push
enter
push
popf
out
jmp
xchg
pusha
or
loop
fimuls
mov
pop
jmp
add
mov
data16
pusha
cmpsb
xchg
xor
dec
ss
mov
aaa
jnp
cli
xor
push
mov
xor
pusha
push
jbe
adc
sub
push
push
add
pop
pop
adc
inc
lea
lock
xchg
cs
lock
loop
es
inc
and
push
ret
push
jmp
lcall
pop
scas
add
cmpsl
push
adc
jnp
test
mov
sub
imul
sahf
enter
ret
cli
rorl
outsb
mov
and
in
insl
sahf
pop
xlat
sub
mov
pop
lods
stos
adc
dec
fisubl
testb
and
add
jns
dec
sti
adc
jp
inc
shlb
imul
into
in
xor
repz
and
fdivrl
dec
loope
int3
repnz
mov
add
orb
cmc
pop
xchg
jo
cmp
stos
dec
cmp
aaa
sbb
sbb
xchg
push
nop
xchg
jmp
lret
dec
mov
mov
fildl
jbe
cmp
fiadds
arpl
rcr
mov
inc
aam
xlat
rcrl
sub
in
mov
in
loop
pusha
cmp
inc
fsubl
push
gs
jo
idiv
cld
int3
push
lock
sbb
fldenv
rcll
cmp
fcoml
mov
mov
rorb
bound
jb
cmpl
ret
iret
rolb
pop
mov
mov
jno
mov
mov
in
loop
js
fsub
shl
jae
sbb
sub
movsl
jge
mov
mov
jb
and
stos
push
xchg
pcmpeqd
and
inc
mov
add
jnp
flds
lods
mov
or
or
adc
loopne
lret
je
outsb
mov
in
int
fucomi
inc
inc
mov
lret
jno
jns
loope
lods
jle
bound
sahf
pop
aam
xchg
std
dec
push
lahf
sbb
sti
rorb
dec
pop
pop
inc
fs
jo
lret
xchg
mov
cmp
jae
in
or
adc
ljmp
cmp
es
ja
arpl
pop
jmp
sbb
mov
sbb
and
jbe
push
sbb
mov
push
std
loop
mov
cmpl
push
ret
or
subl
mov
jecxz
push
xor
insl
rol
test
fstps
imul
test
mov
mov
leave
add
andb
inc
jg
mov
sub
aaa
ffreep
mov
in
adc
rolb
push
push
cmp
dec
fcmovnbe
sti
addr16
test
add
xor
dec
repz
pop
test
negl
daa
lods
lods
or
and
subb
sub
push
jno
jp
mov
dec
in
lods
or
inc
jns
xor
cmp
shl
ret
es
into
and
xor
xor
dec
mov
es
pop
xchg
in
xchg
dec
dec
out
mov
push
out
jbe
shlb
fdivs
in
pop
das
ss
push
sti
cmpsb
jo
in
fnstcw
or
jne
sbb
mov
scas
mov
mov
fsubl
adc
out
xor
or
insl
mov
mov
pop
and
jge
dec
push
xchg
and
cmpsl
out
stos
out
dec
arpl
and
je
pop
adc
stc
aad
inc
rcr
jecxz
push
jb
int3
pop
mov
xor
das
dec
fldt
lret
paddw
test
out
inc
enter
repz
or
pop
adc
setns
push
mov
xchg
adc
loop
push
mov
xchg
iret
cmpsl
fcoml
fldl
mov
add
aas
and
and
jle
or
pop
pusha
les
add
and
mov
xor
fs
cmp
int
ss
shlb
cld
icebp
xchg
das
jge
loope
iret
cmp
cmpsl
out
adc
jnp
xor
jno
ja
add
jns
dec
inc
outsl
lds
jns
or
mov
inc
mov
mov
jno
ret
mov
cmp
test
lcall
push
int3
pop
inc
cmp
sub
sbb
mov
pop
sub
insb
pop
daa
pop
mov
mov
fstpl
iret
cmp
and
push
imul
mov
push
mov
add
add
push
scas
xchg
pop
lret
lds
das
mov
mov
es
out
push
movsl
cwtl
pop
push
popa
xchg
cwtl
inc
enter
dec
inc
addr16
cmp
insb
jmp
mov
arpl
insb
test
mov
insl
notl
out
cli
jo
in
jge
cld
fmul
xchg
sbb
xchg
fnstcw
pop
mov
fptan
lods
and
lds
jg
push
sti
jae
pop
dec
fwait
test
mov
lea
cltd
jl
repnz
lea
inc
and
pop
mov
iret
and
ljmp
mov
xchg
jnp
subb
dec
mov
xchg
dec
aam
pop
outsl
or
test
mov
mov
cmpsb
inc
mov
xchg
inc
cmp
sbb
iret
sub
lea
add
sarl
je
sahf
in
pop
out
and
je
dec
mov
addr16
mov
jl
inc
mov
pop
out
adc
push
les
xchg
scas
movsb
int
shrl
xor
insl
arpl
movsb
ja
daa
cmp
or
in
sbb
jae
jo
push
inc
in
cli
cmc
cmc
shll
push
xchg
dec
jp
outsl
lret
lods
dec
movsl
scas
out
pop
fistpl
jnp
sbb
sarl
ja
mov
int
lahf
pop
adc
cli
dec
pushf
pop
add
sub
insb
jno
andl
daa
adc
mov
scas
outsl
mov
scas
cmc
aas
ret
adc
mov
daa
inc
aam
and
insb
or
in
mov
outsb
pushf
push
lods
inc
dec
add
aaa
fs
leave
movsl
ss
bound
pusha
lahf
mov
loope
int
cwtl
test
out
hlt
adc
test
rclb
insb
outsl
push
pop
mov
dec
mov
pop
es
pop
mov
out
js
mov
or
push
xor
leave
out
push
dec
fs
inc
add
movsb
inc
push
mov
insb
cmpsl
mov
insb
sbb
and
bound
into
in
arpl
clc
fcmovu
ja
cmp
cli
call
pop
xchg
faddl
int3
addb
stos
aam
sbb
sbb
imul
stos
int
dec
jno
leave
out
inc
dec
cs
fisubl
sbb
mov
xchg
mov
bswap
inc
aas
fbstp
mov
decl
inc
xchg
outsl
mov
lods
cltd
test
bound
pop
mov
and
mov
shl
cmp
out
add
adc
sbb
enter
sti
js
mov
jae
push
movsb
inc
adc
or
gs
jle
xchg
xchg
pop
lods
rcrb
or
mov
in
xlat
cli
int3
pop
adc
popa
sbb
cmp
fadd
mov
addr16
adc
icebp
pop
ret
xor
lcall
xor
ds
popf
push
push
sub
xor
sub
inc
lods
rolb
in
jnp
adc
and
adc
push
scas
xchg
inc
push
mov
lods
rclb
cmp
mov
scas
fidivrl
js
test
pop
push
outsb
mov
jns
rcr
push
adc
inc
push
pop
lcall
inc
enter
mov
mov
sub
insb
jge
inc
cld
dec
into
inc
pop
ret
or
mov
cltd
pushf
jno
mov
or
pusha
sbb
mov
out
rcr
pop
jmp
test
fdivl
outsl
push
nop
test
cmp
mov
mov
sahf
mov
and
push
fmul
lahf
lods
icebp
mov
xchg
lds
lret
out
je
rol
cmp
sbb
xchg
fisubrs
pop
mov
xlat
mov
sbb
and
mov
lea
loop
push
push
xor
es
cmpsb
cli
push
jns
cmpl
xchg
loopne
test
xchg
aam
pop
aaa
mov
push
insl
daa
pushf
imul
jae
jo
popa
ret
and
jo
jg
shl
pop
jno
dec
or
out
out
jno
pop
or
int
out
adc
xchg
sbb
and
in
xchg
shrb
mov
add
jne
test
int3
mov
xlat
mov
dec
shlb
lods
in
into
flds
int
cld
jbe
sub
repnz
dec
scas
dec
or
sbb
xchg
out
adc
cs
jge
xor
push
je
mov
lods
xor
aas
push
adc
push
jae
jae
test
rcrb
add
push
sahf
sub
push
daa
fistl
jp
aam
push
cmp
lret
int3
cs
push
imul
pusha
mov
push
fcompl
test
fisubrs
dec
push
imul
fwait
es
fildl
xchg
jae
xchg
mov
xor
xor
mov
dec
or
stc
in
ljmp
xor
cmp
sbb
test
jbe
jae
push
xchg
dec
mov
and
aam
mov
lods
adc
popa
cmp
cmp
cmp
sbb
dec
mov
std
mov
pop
cmpsb
mov
push
sub
mov
mov
out
lock
cmp
mov
lds
mov
sbb
push
jbe
movsl
test
jge
rcrl
adc
adcl
push
sbb
scas
xchg
xchg
and
popa
push
cmp
cs
xchg
pop
bound
in
test
cmpsb
dec
jg
push
loope
clc
repnz
sbb
pusha
out
xchg
lea
cmp
test
mov
mov
aam
inc
inc
and
push
cmc
arpl
and
mov
xor
push
cwtl
out
add
add
mov
pop
push
gs
into
and
dec
bound
out
xor
dec
je
push
mov
jne
xchg
outsb
cmp
push
cmp
pop
mov
or
jp
mov
push
sub
int
and
jmp
push
mov
xchg
call
arpl
in
faddl
jne
sub
lods
dec
adc
lea
in
std
incl
xchg
lods
jp
cmp
pop
pop
dec
jecxz
insl
rolb
mov
lcall
push
adc
pushf
push
dec
ret
das
jne
sub
call
sbb
leave
mov
or
xchg
and
lods
and
push
pusha
mov
cmpsl
jae
mov
dec
addr16
int
and
mov
lds
jns
outsb
hlt
xor
shrb
dec
push
pop
adc
outsb
push
popf
imul
rolb
pop
sarb
xchg
mov
cmp
gs
fisubrs
push
fisubrs
in
sbb
push
out
test
push
ljmp
mov
or
adc
mov
sbb
dec
fiaddl
loopne
sbb
stos
cmp
sub
arpl
cmp
sub
scas
fimuls
xor
ficoml
test
shlb
xchg
adc
lea
sub
pop
jns
mov
jmp
add
ja
cs
pop
cmp
jp
lcall
inc
and
dec
cld
jns
popa
xor
push
das
mov
dec
jmp
dec
mov
inc
test
arpl
cli
fisubrs
cs
mov
jg
nop/reserved
je
cmc
jne
stos
pop
push
scas
fs
leave
add
in
leave
mov
test
aad
mov
cmp
mov
pusha
jns
or
data16
sahf
std
xor
jbe
insl
aam
jns
xchg
das
jg
inc
jb
jbe
pop
mov
and
pop
and
mov
xlat
mov
jle
cmp
test
mov
jno
addr16
xor
and
xor
lcall
push
pop
pusha
sti
aaa
mov
adc
inc
jbe
lds
pusha
inc
clc
cmp
loop
movsl
jl
ja
sbb
pop
ds
loop
pop
jo
xor
mov
dec
test
mov
mov
pop
pushf
xor
xor
mov
imul
in
aaa
sub
out
das
test
pushf
mov
lods
dec
jae
jl
lock
mov
adc
ds
push
add
xchg
jo
mov
fsts
aam
pop
movsb
rcll
adc
sub
jp
cmpl
xchg
stos
push
adc
push
adc
int3
xchg
pop
push
sub
sub
into
test
and
sub
stos
push
fmull
aaa
sbbb
fwait
mov
movsl
xchg
decl
scas
jecxz
mov
dec
insl
test
dec
sarl
loopne
mov
icebp
mov
jae
ss
mov
repz
jecxz
dec
and
and
jmp
mov
xor
movsl
dec
out
lea
jecxz
sbb
imul
xchg
subl
loopne
dec
push
sbb
cwtl
xchg
popa
mov
stos
cmc
push
sbb
mov
shlb
fildll
in
jb
mov
push
and
pop
sbb
pop
adcb
add
lods
xchg
push
in
es
aaa
lcall
lahf
lcall
aad
cmpsl
jae
dec
rorl
aam
loope
mov
ret
push
sbb
fstpt
mov
mov
xor
xchg
push
sti
repnz
fists
imul
out
pop
in
pop
cmpsb
cli
dec
mov
xchg
jge
mov
sti
add
push
and
jl
bound
xor
inc
mov
psubw
jmp
push
ret
dec
xor
push
addb
lock
add
lahf
xchg
inc
imul
in
sub
cltd
popaw
test
sbb
jmp
lcall
roll
push
push
test
daa
test
outsb
jae
cmpsl
jmp
lods
std
nop
imul
rcrb
and
dec
and
fistl
adc
add
mov
scas
cmp
std
mov
insl
insb
and
jae
sbb
inc
dec
daa
add
jbe
mov
pop
inc
lret
inc
jmp
les
loop
adc
jo,pt
mov
jg
mov
push
iret
les
add
add
sti
xchg
pop
push
ror
cmp
jne
push
jb
mov
sti
xor
mov
push
pop
xchg
mov
stc
sti
mov
sbb
mov
xchg
pop
icebp
push
adc
jp
mov
mov
rolb
mov
xchg
xchg
ret
pop
shrb
sbb
jp
inc
and
mov
jge
lea
pop
inc
insl
and
push
pop
ljmp
inc
stos
je
out
cmp
inc
inc
in
decb
imul
mov
sub
jmp
mov
jg
xor
inc
inc
rcr
stc
imul
xor
xchg
sub
leave
sbb
sbb
or
insb
xor
test
jns
mov
imul
loopne
jns
sbb
ds
or
cwtl
lds
mov
inc
push
std
lods
xchg
fcmove
and
stos
shrb
jne
sbb
inc
mov
jo
or
enter
pop
cld
sahf
push
fwait
pop
mov
mov
stc
and
adc
xor
in
dec
lods
jmp
xrstor
mov
nop
icebp
xor
je
or
lods
jmp
add
imulb
lods
pusha
aad
rorl
aas
pop
mov
dec
mov
jbe
sbb
jmp
in
sub
insb
jge
push
gs
fcmovnb
xchg
push
outsb
mov
add
loopne
adc
fnstsw
fmuls
fidivl
mov
sub
aaa
pop
cmc
mov
xlat
fcmovne
inc
inc
push
push
test
push
iret
xchg
imul
jbe
int
push
and
pop
adc
call
je
mov
lahf
ud0
jg
mov
pop
mov
mull
sub
pop
leave
lret
push
jae
cs
mov
cli
jbe
or
sbb
sub
xor
jns
sub
pushf
aad
fsub
xchg
sub
push
xchg
pop
xor
inc
mov
sub
hlt
push
jp
sub
shlb
sub
shl
cmpsl
jge
mov
es
xor
into
andb
dec
loope
mov
cmpl
xchg
pop
test
shrb
dec
outsb
xor
test
inc
in
xchg
fdivl
xor
cmp
mov
sahf
jae
dec
add
imul
push
inc
rcrl
pop
popf
addl
dec
repz
push
jge
inc
mov
or
fsubs
cli
pop
test
movsl
and
sahf
mov
dec
mov
enter
cmc
sub
push
adc
cltd
xchg
pop
pushf
fbstp
pop
addr16
not
fxch
xor
jne
mov
lcall
outsl
enter
and
sub
or
repz
insb
ljmp
mov
inc
fisttps
inc
dec
dec
in
cs
inc
mov
jb
mov
inc
sbb
cmc
mov
clc
mov
dec
dec
lds
lock
jecxz
data16
push
mov
mov
popf
xor
inc
fidivs
jbe
xchg
fadds
sub
jno
mov
push
ds
popa
mov
jmp
mov
stc
daa
stos
mov
mov
es
bound
inc
outsl
inc
dec
push
xlat
push
sbb
mov
fnstsw
sub
mov
pop
jne
lret
or
push
mov
mov
stos
test
or
fdivr
dec
dec
dec
sbb
dec
test
mov
xor
dec
mov
icebp
xlat
jg
mov
mov
imul
in
jne
push
in
cmp
mov
push
out
push
xchg
gs
lods
lret
lock
loope
test
sub
push
movsb
lock
fisubs
and
popf
cmpsb
mov
jg,pn
inc
pop
int
data16
pop
jnp
push
push
das
jno
mov
scas
add
jne
adcl
mov
push
push
imul
add
mov
sub
and
or
cwtl
adc
mov
xchg
fistl
mov
adc
xlat
xchg
hlt
xor
pop
or
mov
pop
cmp
adc
jl
fcoms
fnsave
in
les
push
and
jle
push
cltd
test
movsb
push
sub
mov
push
pop
mov
divl
pop
cmp
enter
call
jbe
push
sbb
jecxz
repz
adc
dec
popa
mov
inc
int3
rorb
cltd
dec
mov
movsl
into
out
dec
xchg
adc
xor
and
in
loope
lods
fidivrl
jns
add
lods
pop
ret
push
xor
sahf
fnstsw
iret
dec
lcall
pop
jmp
or
in
es
adc
das
fadd
pushf
out
repnz
push
ret
push
imul
inc
dec
cwtl
ret
and
lcall
push
nop
fldt
mov
inc
sti
xchg
and
sub
mov
shrb
adc
icebp
dec
stos
rcrb
mov
sub
and
cmpsl
push
into
inc
pop
sub
lock
jl
test
xchg
popa
jb
subb
mov
adc
movsl
push
dec
sub
imul
cmpsl
xchg
sbb
loope
mov
sar
repnz
and
xor
cwtl
outsl
cmp
xchg
lahf
mov
xchg
mov
xchg
pop
enter
in
jns
out
mov
popa
in
mov
pop
call
xor
shrb
clc
inc
mov
test
ret
xchg
mov
adc
addr16
push
or
cmc
add
or
dec
fucomi
es
rcrb
fcoml
in
in
jbe
jmp
add
dec
cmp
roll
push
jbe
dec
je
mov
dec
movsl
mov
aas
mov
mov
aas
pop
cli
xchg
push
lods
mov
lahf
jge
dec
mov
xchg
ret
jns
mulb
dec
cmp
push
push
and
out
and
sub
subl
mov
outsl
in
jb
mov
decb
jns
outsl
movsl
leave
adc
adcl
jmp
bound
repz
in
or
push
push
mov
xor
xor
push
test
cli
sti
subb
jmp
out
add
sbb
jb
sbb
pusha
mov
xlat
push
jb
sub
repz
arpl
fs
int3
cmc
mov
mov
ret
xchg
fstps
mov
rol
jle
pop
or
cli
pop
xor
jge
add
sahf
mov
jle
jbe
shrb
fwait
mov
lret
jne
mov
push
aam
push
inc
das
xchg
popa
or
jg
scas
idivl
cli
sbb
outsb
mov
adc
arpl
stos
cmp
stos
jmp
push
adc
and
dec
adc
aas
sbb
out
mov
dec
pop
orl
int3
push
in
pusha
cli
ret
stc
stos
fs
insb
jg
xchg
push
test
adc
sbb
xor
icebp
pop
ret
or
mov
or
xchg
enter
sbb
mov
lret
jo
xlat
jo
addr16
push
or
movl
cmp
sbb
js
or
ss
cwtl
mov
jge
shlb
add
mov
mov
cld
dec
jle
push
pop
xchg
scas
sbb
dec
push
or
sub
ud2
stc
sub
xchg
inc
inc
cs
scas
popa
adc
lods
pushf
movsb
daa
xchg
ret
jge
mov
and
addr16
dec
push
xchg
jno
add
adc
outsl
sbb
mov
mov
mov
call
in
add
sub
frstor
pop
negl
test
sub
cmp
sub
movsl
arpl
push
stc
clc
rclb
in
sub
xor
mov
lods
loop
data16
xchg
push
pop
les
pop
inc
mov
inc
ja
mov
repnz
call
push
movsb
push
call
adc
jmp
xchg
push
aas
cmpsl
jnp
sbb
aam
lock
xchg
xchg
ja
jns
out
fadd
or
int
xchg
data16
jg
lods
mov
js
pusha
sbb
or
sbb
mov
mov
repnz
or
das
out
jo
mov
mov
sub
mov
cmpsl
leave
pop
push
mov
mov
xchg
mov
test
loopne
mov
pop
neg
dec
cmp
push
test
sub
cli
inc
adc
xlat
divl
lods
xchg
jecxz
lret
jnp
mov
inc
add
mov
jo
inc
lock
mov
mov
fists
pop
ds
and
jo
push
fiadds
loopne
pop
jecxz
cltd
xor
mov
mov
sub
add
insl
data16
and
fnsave
pop
cmp
xchg
fcoml
fwait
add
imul
push
pop
mov
insb
push
icebp
sbbb
mov
sti
sub
in
stos
fbld
in
mov
mov
subl
dec
cltd
xor
add
cmp
adc
mov
add
mov
mov
xor
and
push
push
enter
mov
popf
repnz
jmp
int
jno
out
icebp
mov
insl
movsb
jnp
sbbb
jae
outsl
outsb
xor
jns
jg
fstpl
and
inc
jo
ds
imull
add
sub
repz
mov
dec
aad
into
ret
inc
mov
or
dec
fists
push
nop
data16
out
xchg
dec
clc
test
mov
push
add
shll
call
xor
mov
shrb
mov
fwait
rolb
pop
pop
mov
xchg
fistpll
lock
jle
pop
shl
fcoms
xchg
mov
adc
sbb
ja
cwtl
cmp
jno
test
iret
xchg
out
rolb
sub
push
pushf
jmp
xchg
cltd
in
idivl
sub
cltd
test
ficompl
out
cli
dec
sbb
jp
in
aad
aas
mov
lds
mov
hlt
mov
cmp
mov
push
push
cmp
and
jmp
or
fidivrl
mov
and
mov
mov
adc
out
jp
and
mov
cmp
adc
inc
push
iret
jmp
fsubs
jns
cwtl
fistl
sbbb
pop
daa
jbe
xchg
aas
jp
pop
rclb
pop
add
xchg
int3
mov
test
mov
shrb
dec
ret
fisubrs
outsl
pop
lret
out
jp
std
mov
cwtl
jnp
xor
or
into
daa
dec
push
shl
and
jl
push
mov
push
mov
test
stos
mov
dec
jns
outsl
lahf
lcall
cmp
mov
gs
pop
test
mov
inc
jbe
fldenv
cmp
fwait
lods
fcompl
inc
addr16
and
jle
rclb
sbb
loopne
cwtl
bound
cmp
and
imul
sti
loop
scas
sti
shl
aad
dec
repnz
imull
cltd
cmp
ds
dec
mov
addb
pop
adc
outsb
mov
sbb
mov
adc
jnp
fsubrl
out
cmp
in
movl
leave
jne
adc
push
sub
mov
dec
and
out
cwtl
fstps
ljmp
popf
jmp
and
sti
sahf
dec
mov
and
sub
cs
pop
cmp
out
cmp
sbb
fwait
clc
nop
out
jno
and
and
test
iret
int
loop
jns
incb
into
stos
dec
xor
mov
add
call
jbe
lods
daa
loope
xor
cmp
je
and
push
cld
push
xorb
mov
dec
inc
lcall
sbb
push
push
mov
notl
fimuls
mov
idivb
ds
jno
push
shll
insl
cltd
or
pop
mov
das
and
les
leave
stc
or
sbb
pop
mov
add
cmp
add
hlt
cs
adc
mov
or
rclb
adc
mov
gs
jns
xor
insb
and
pop
std
icebp
jecxz
inc
fiaddl
sahf
jecxz
and
les
inc
pop
shrb
dec
test
add
pop
fisttpl
sbb
dec
mov
xchg
xlat
ds
outsl
jns
pop
mov
cwtl
cli
sub
fidivl
inc
xor
stc
out
shlb
pushf
adc
test
ficomps
jecxz
mov
idivl
jne
fwait
xlat
sbb
push
aas
xor
clc
or
jbe
iret
popf
mov
sub
sbb
fsubrl
lahf
lret
mov
adc
pop
sub
sub
sbb
insb
imul
push
mov
and
push
dec
lret
xchg
adc
mov
jle
add
outsl
xchg
imul
jle
adc
push
sahf
movsb
mov
test
arpl
subb
push
mov
adc
je
xchg
sbb
arpl
test
adc
mov
dec
pop
mov
fcoml
aam
xor
add
imul
int3
arpl
pop
mov
ljmp
les
inc
cmpsl
cli
cmp
lret
and
pop
fs
pop
out
hlt
outsl
cmp
mov
inc
hlt
inc
scas
dec
test
mov
jne
loopne
jl
xor
or
adc
or
cli
mov
jl
loope
inc
sbbb
std
adc
rcl
push
lods
jbe
mov
xor
dec
call
ljmp
rcll
inc
sti
xor
inc
sub
sub
lock
mov
pusha
or
inc
push
mov
out
or
mov
lahf
pop
shr
xchg
loopne
addb
or
shl
sahf
cmpxchg
dec
test
dec
jecxz
out
ud1
nop
stc
and
push
cmc
leave
mov
xchg
dec
and
or
out
pop
iret
mov
ds
in
vdivss
pop
xlat
roll
out
mov
filds
out
aam
addr16
push
and
mov
cli
cld
fdivrl
pop
push
cmp
pop
cmpsl
jae
jmp
loopne
push
sub
cmp
lahf
lret
inc
fcoml
adc
ret
cmpsb
hlt
cld
add
scas
adc
jmp
lret
push
jge
inc
popa
xlat
add
inc
mov
mov
pop
xchg
sahf
mov
add
xor
cltd
popf
add
dec
rcrb
pop
setns
pop
mov
dec
ret
in
mov
les
or
and
imul
push
pop
push
frstor
stos
aaa
or
jbe
mov
jmp
fcompl
rolb
aaa
repnz
lods
mov
lcall
insb
daa
adc
or
pop
add
dec
das
pop
jnp
and
insl
dec
sub
sub
xlat
rorl
aad
insb
scas
mov
xchg
mov
push
lds
or
mov
test
mov
and
fildl
lods
sbb
xor
mov
out
xchg
or
cld
add
rorl
push
pop
pop
add
adc
mov
daa
adc
jmp
add
aam
add
mov
movsl
cmc
fildl
adc
movsb
das
ret
sub
mov
mov
inc
jns
jge
push
sbb
dec
push
fisttpl
cmp
xchg
inc
aam
frstor
mov
lret
lret
inc
dec
imul
add
mov
and
cwtl
cli
mov
mov
jg
add
js
or
sub
push
lret
aas
jle
test
mov
adc
sub
addr16
lret
idiv
loopne
imul
inc
std
cwtl
pop
mov
cld
outsl
mov
roll
gs
lds
mov
sub
sbb
inc
cmp
aas
inc
aaa
xor
outsb
xchg
cmp
push
in
push
fcmovnbe
cmpsl
mov
dec
xchg
mov
push
ret
stos
xchg
int
pusha
xor
jg
in
pop
jl
bound
cli
pop
xrelease
popa
xchg
jb
cs
xorb
pcmpgtw
xchg
adc
inc
pop
rorl
adc
fildl
imull
out
dec
loop
pop
scas
jmp
pop
inc
mov
cmpsl
pop
pop
sub
sbb
jo
and
addl
jbe
xor
mov
adc
test
and
roll
je
push
push
in
fwait
div
fsubs
mov
imulb
shl
inc
push
imul
lods
loope
push
sub
sbbl
call
push
fldl
int
push
or
mov
dec
aas
popa
in
in
sbb
insb
and
negl
mov
xor
sub
jne
xorb
leave
in
or
test
add
jg
repz
dec
je
sub
mov
pand
jno
mov
adc
mov
xor
out
call
or
fwait
in
psubd
push
adc
sbb
outsb
and
sahf
adc
bswap
lods
stos
adc
int3
mov
mov
pop
clc
push
sbb
enter
push
add
adc
xchg
adc
mov
mov
push
inc
imul
test
dec
dec
sub
sub
dec
test
clc
iret
or
xorl
enter
stc
xor
shlb
ss
test
jle
sub
lahf
leave
mov
mov
daa
cmpsl
mov
xchg
add
jp
mov
or
rcrl
dec
jp
sub
das
mov
fidivrs
jle
jnp
mov
and
hlt
xchg
xchg
stc
lahf
les
shlb
loopne
pop
dec
add
xchg
pop
in
or
rolb
idivl
in
js
jge
repnz
mov
inc
cmc
mov
inc
sub
in
ficoms
sub
xchg
xchg
xlat
jl
test
xchg
in
enter
jp
out
mov
rorb
loopne,pt
adc
imul
push
xchg
xorb
lea
jle
adc
scas
xchg
scas
dec
outsl
shll
lret
loope
pop
enter
ret
jecxz
push
testl
mull
in
hlt
lahf
mov
xor
aam
sub
and
jl
mov
push
sbb
xchg
jmp
jb
arpl
cmp
inc
mov
into
add
aaa
idivb
iret
xchg
sbb
insl
test
ss
lods
mov
mov
ret
sahf
sub
dec
add
outsl
mov
fistl
and
jg
and
and
sbbl
test
scas
sub
imul
ret
sub
sti
push
cmpsl
cmp
pop
clc
das
dec
nop
mov
ja
pop
add
xor
js
arpl
pop
pop
cmp
lcall
push
imul
scas
loop
jbe
rclb
jnp
add
or
and
mov
addr16
ret
sub
cmc
scas
adc
cmp
scas
js
aaa
push
insb
push
mov
cltd
add
mov
aam
test
mov
mov
orb
nop
daa
lods
adc
cmp
jno
adc
arpl
sbb
iret
push
adcb
xchg
mov
scas
push
js
out
or
inc
adc
ret
jns
inc
nop
lret
mov
xchg
xchg
in
jp
pop
int
or
mov
sbb
roll
je
push
cmp
js
adc
out
jl
pop
stos
data16
cmc
repz
lods
sub
ret
aam
sbb
lock
or
xor
inc
andnps
test
pop
stc
push
mov
push
add
pop
adc
adc
jge
movsl
hlt
orl
adc
call
mov
adc
mov
jp
es
dec
adc
xchg
push
fcmovbe
pop
and
add
mov
xor
addr16
xor
andl
xchg
ds
cwtl
and
mov
sbb
cld
das
scas
sbb
iret
or
push
arpl
or
pop
es
add
adc
cmpsb
mov
mov
ret
xor
pop
inc
mov
frstor
mov
inc
inc
mov
dec
call
xor
xor
jno
xchg
shlb
test
mov
mov
les
mov
shr
or
dec
cmp
and
push
enter
pusha
dec
sbb
mov
sub
insl
enter
sarl
inc
aaa
dec
repz
cld
jl
xchg
xor
mov
fdivrs
or
ret
jns
std
test
adc
pusha
in
repnz
roll
popa
rorl
int3
popa
into
pop
fldl
mov
aas
ds
mov
dec
inc
dec
pop
rcrb
mov
and
pop
jle
and
dec
fildl
cmp
jmp
lock
lods
mov
aaa
mov
hlt
int
sbb
les
ljmp
stos
aas
adcb
push
scas
xchg
xor
xor
loope
outsl
mov
mov
cmp
test
sub
aas
faddp
sub
mov
jae
aam
lret
std
notb
cmp
repnz
xchg
js
pop
repnz
stos
pop
fsubp
lods
push
xchg
mov
push
push
ret
fdivp
jmp
bound
push
xchg
outsb
out
shld
popf
sbb
in
pop
mov
sbb
xchg
dec
aad
push
push
push
lahf
rcrl
out
add
mov
pop
in
jne
loop
loope
sbb
stos
in
rol
cmpsl
fisttps
xchg
mov
adc
testb
call
shrb
out
les
pushf
push
lods
mov
ret
add
xor
clc
ja
adc
out
cmp
rorl
mov
push
subb
stc
adc
pop
mov
mov
roll
push
arpl
cmpsl
or
fwait
mov
or
cmp
adc
rolb
out
mov
cmc
mov
add
or
adc
imul
push
bndstx
sahf
or
dec
roll
jae
ficompl
and
xor
cmpb
jnp
sub
nopl
stos
and
add
or
out
and
icebp
inc
fimuls
push
sar
adc
pop
insb
sub
xchg
out
adc
pop
jb
mov
mov
cli
and
dec
mov
mov
jle
divb
inc
dec
mov
jecxz
xchg
add
dec
cs
inc
mov
fwait
lret
je
bound
xor
addb
shrb
cli
inc
pop
fisttps
and
jno
push
outsl
xor
push
jg
pop
into
and
xchg
push
sti
call
dec
mov
cmp
lea
sub
cld
ljmp
jo
sbb
into
call
fimuls
sbb
aad
je
cmp
pop
ss
cmc
mov
ret
mov
xlat
push
jmp
cmpsb
sbb
jg
jecxz
leave
and
lods
pusha
dec
jo
lods
shlb
shl
into
insb
push
sbb
popa
mov
insl
int3
inc
jbe
orb
add
jnp
pop
fisttpl
sub
les
mov
mov
ja
jl
add
add
ljmp
sahf
rcrb
mov
andb
pop
mov
or
outsl
aad
loope
jo
scas
xchg
sahf
stc
pop
lahf
fcomps
mov
scas
mov
mov
stos
and
xchg
cmpsl
xor
jmp
mov
lret
xchg
fidivs
out
add
or
mov
lds
rol
dec
loopne
mov
mov
es
aas
push
add
and
mov
push
xchg
jg
pop
cmp
inc
push
out
mov
test
sub
inc
fucomp
inc
lods
xchg
sbb
or
es
jp
cmp
loopne
iret
inc
inc
mov
cmp
icebp
xor
clc
mov
push
out
test
scas
jle
sbb
ret
inc
jp
pop
xor
inc
out
pop
xchg
insb
aad
cmpxchg
and
or
loopne
dec
push
push
leave
pop
sub
fisttps
notb
movsl
data16
sub
and
sub
insl
sbb
xchg
imul
cmp
dec
ret
idivb
pusha
sar
pop
dec
add
sti
movsb
inc
cs
les
repnz
jmp
sbb
leave
test
cmp
popa
mov
push
jns
js
sahf
ds
push
cwtl
outsb
enter
adc
lahf
push
mov
and
fmuls
xchg
ficomps
and
fsubs
or
sbb
add
inc
aam
mov
mov
pushf
jno
cmp
xchg
push
daa
mov
xchg
cmp
and
jo
pop
pop
dec
sub
roll
dec
jp
jg
mov
xchg
mov
icebp
cltd
inc
fldcw
cwtl
mov
aad
lea
mov
dec
fsubl
nop
push
inc
scas
ficompl
int
dec
jp
jnp
bound
rclb
repz
add
jae
cli
xor
sbb
mov
popf
ret
dec
xchg
lds
hlt
icebp
sqrtps
inc
repz
xor
lret
sbb
and
ucomiss
dec
adcl
dec
xor
jecxz
mov
dec
pop
in
es
gs
jae
fstpl
movsl
add
sbb
shr
adc
movsb
inc
popa
gs
outsb
subl
lret
fcompl
ds
out
xchg
and
mov
leave
lret
lods
repz
jp
and
pop
js
push
sbb
data16
aas
jne
jns
pop
dec
or
into
repz
mov
lret
add
xor
xchg
mov
pop
cmc
enter
stos
aaa
scas
popa
add
js
nop
loopne
ja
pop
cmp
jg
jp
and
mov
xchg
fcmovnbe
scas
les
lret
andb
mov
dec
push
repnz
frstor
adc
xlat
repnz
or
lds
out
or
shll
xchg
aaa
out
dec
xchg
mulb
rcrb
insl
aad
inc
inc
imull
add
sub
sub
sub
and
pop
jns
inc
sub
xchg
xor
addr16
sbb
xchg
sbb
int3
xchg
mov
in
xor
hlt
push
jno
pusha
mov
icebp
test
rorl
int3
cmp
les
mov
push
ds
mov
shlb
cld
xchg
sbb
pop
stos
into
pusha
cmp
or
fmuls
sbb
push
mov
aaa
hlt
cmpb
popf
scas
adc
xor
xor
les
mov
cmp
test
push
test
add
ljmp
jne
push
adc
call
mov
popf
clc
lea
int3
xchg
repz
inc
adc
add
and
nop
cwtl
aaa
sub
mov
mov
xor
call
sbbl
inc
rol
bound
xor
mov
cmc
lret
mov
aad
lods
jbe
pop
push
mov
dec
sub
jecxz
fs
add
xchg
or
and
sub
test
and
hlt
aad
mov
loop,pn
sahf
jnp
in
lods
daa
iret
pop
sbb
mov
jl
roll
insb
test
ja
addr16
inc
scas
ss
in
movsb
in
inc
xor
loop
dec
xchg
popf
pop
ja
adc
cli
cli
and
lret
cmp
jo
adc
adc
or
call
lock
add
shll
aam
cld
sub
dec
jae
hlt
sub
and
pop
sbb
lock
pop
les
sub
xor
shrb
movsl
cmc
add
push
nop
dec
adc
fsubl
data16
sub
push
popa
mov
shl
cwtl
cld
mov
std
xchg
pop
pop
push
sub
sysret
adc
adc
jle
cmc
fiaddl
idiv
pusha
mov
cwtl
mov
mov
std
pop
cmp
xor
loope
pop
push
jl
mov
cmp
jae
sub
pusha
xor
inc
pop
shrb
dec
lahf
and
jne
fiaddl
cld
loopne
cmp
fstps
daa
out
aaa
cmp
shlb
mov
sti
lret
faddl
xchg
mov
xor
cwtl
push
fs
push
leave
or
jge
add
push
std
jnp
push
pop
mov
pusha
fistpll
insb
inc
shlb
mov
sbb
sbb
inc
xor
jae
inc
jno
xor
dec
mull
int3
mov
lcall
mov
loop
int3
push
mov
inc
idivb
sbb
rcr
test
mov
jle
outsb
push
rolb
stos
mov
out
js
sbb
iret
aam
jle
or
call
cmp
or
shlb
out
cmpsb
jmp
lods
pop
adc
dec
mov
cmp
mov
test
scas
mov
in
pop
push
enter
repnz
out
adc
sbb
push
orb
xchg
stc
sub
out
xor
les
cmpsl
rcrl
jg
adc
faddl
pop
mov
sarl
and
adc
xlat
mov
cmp
gs
pop
or
rcll
xchg
jno
stc
leave
pusha
iret
sahf
sub
fsub
pusha
outsb
cmp
push
lret
cs
aas
cmpsb
dec
es
pusha
jns
or
in
test
cld
rcl
sub
pop
js
shlb
fincstp
add
add
mov
es
push
aam
mov
ret
fildl
mov
inc
lret
call
push
cmp
sub
push
cmpsb
mov
mov
out
bound
jnp
in
in
mov
out
add
add
cmp
shrb
jbe
or
push
outsb
pop
dec
pop
fstl
outsb
cmpsl
mov
inc
sarb
ret
xor
sbb
jle
sub
cmc
mov
sbb
xor
loope
je
insl
mov
jne
push
add
dec
test
fisttpll
jb
xchg
mov
mov
nop
push
pop
or
fisttpll
push
jecxz
sub
arpl
pop
insl
ss
stos
push
daa
push
imul
mov
lcall
cmp
enter
xor
push
add
jns
xchg
adc
dec
mov
dec
loop
mov
xchg
insl
in
xor
mov
dec
or
test
mov
add
jle
pop
push
cs
dec
or
push
outsl
les
fcmovnu
mov
cli
cmp
xchg
loop
ss
mov
jnp
push
or
insl
loop
subb
aad
lods
cmovle
mov
stc
and
xor
xorb
inc
in
push
lock
in
in
dec
lock
mov
sub
ljmp
dec
jle
add
push
sub
dec
or
in
mov
xchg
add
sahf
in
into
push
or
xchg
jb
inc
and
add
loop
out
lret
mov
test
lcall
in
pop
jns
daa
nop
lahf
idiv
aad
xchg
arpl
inc
sbb
roll
sub
hlt
jo
xlat
xor
cli
gs
xchg
push
sbb
add
aaa
adc
mov
scas
add
mov
dec
aaa
cmpsl
std
mov
adc
mov
rcll
fstl
pop
cmp
insl
lea
outsl
pop
lret
hlt
out
inc
repnz
jp
add
cmp
sub
pushf
movsl
dec
mov
idivb
cmp
mov
in
sub
out
push
mov
imul
xchg
mov
movsl
cmp
sub
in
test
loopne
in
or
pop
mov
gs
xor
cmpb
fs
cmpsb
pop
cld
aam
pop
add
sub
mov
mov
jnp
sbb
test
lock
mov
je
mov
mov
fadds
xor
sarb
daa
in
iret
push
xorb
push
cmp
mov
insl
cwtl
cmp
loope
lods
je
enter
jg
les
and
or
out
ret
and
popa
mov
outsl
mov
bound
mov
imul
mov
mov
out
cltd
sarl
cmp
cmp
out
or
mov
call
loope
inc
cmpb
pop
jae
je
js
fnstsw
out
call
loope
sti
cli
xchg
pop
and
add
jmp
test
mov
push
sarb
cmp
in
xlat
clc
jle
jmp
pop
js
jnp
sbb
mov
add
inc
vpacksswb
sub
mov
sub
dec
ss
sahf
mov
dec
and
add
xchg
in
bound
jecxz
into
lcall
xchg
or
sbb
flds
mov
xchg
fdivs
das
mov
mov
and
rol
cld
arpl
cmpsl
xchg
mov
jl
xchg
mov
jle
ja
pop
out
aad
insl
sti
lcall
rcpps
in
mov
or
lahf
in
or
mov
mov
mov
and
test
cmp
add
pop
in
fcompl
or
in
pop
adc
xchg
sbb
push
pop
pop
imul
jecxz
cmc
stos
jno
and
lret
aam
ficoml
push
xlat
pop
pop
lods
xor
inc
xchg
push
add
fbstp
jbe
outsb
fs
fs
jne
dec
mov
push
insl
shrl
push
jno
pop
subb
sbb
test
leave
mov
sbb
addb
mov
pop
cli
xor
mov
mov
mov
fildl
xchg
push
jae
stos
xchg
jne,pt
aad
mov
cmp
out
mov
cmpsl
ss
mov
fdivrs
inc
push
jle
push
nop
mov
cmpsl
jne
insl
test
andl
leave
dec
cli
push
inc
fiadds
shrl
cmpsl
dec
jg
xor
xor
or
enter
inc
push
int3
xchg
fs
stos
int
ljmp
mov
imul
pop
and
cmp
push
aad
pop
lock
jnp
test
pushf
mov
push
arpl
arpl
lcall
dec
cmpsb
sub
mov
lret
mov
fmull
loopne
aam
sbb
jb
and
xor
mov
xchg
subl
add
cmpl
push
and
pop
fs
lcall
sbb
in
out
and
incb
sarl
add
jo
fisubrl
in
daa
mov
inc
ret
lea
insl
frstor
gs
rcll
movsl
push
cmp
inc
addb
bound
adc
sub
sub
jns
jecxz
sbb
mov
mov
pop
jno
fsubs
sub
mov
test
push
cmp
sbb
xor
movsb
push
jns
mov
mov
mov
lds
roll
loope
pop
mov
add
insb
test
jbe
add
jl
cmp
divl
sub
xor
cs
lock
and
flds
lods
lea
aas
sbb
mov
mov
mov
pop
inc
xchg
mov
jl
push
push
xchg
push
in
xchg
dec
add
mov
ljmp
mov
fsub
sbb
cltd
xor
xchg
negl
dec
mov
mov
lcall
xchg
mov
cli
mov
test
fsubrl
lret
into
xchg
cmp
cmpsb
mov
push
data16
nop
test
mov
popf
aas
cli
xchg
mov
mov
pop
inc
scas
imul
jo
and
gs
or
enter
imul
sahf
push
jbe
mov
lcall
cli
sub
xchg
push
pusha
int3
mov
fidivrl
loop
inc
add
shlb
rorb
xor
pop
pop
mov
test
push
ljmp
and
dec
loop
mov
data16
repnz
sbb
repz
repz
test
mov
fbld
jg
add
sbb
pop
push
out
ret
xchg
scas
pop
lods
rcrb
out
cmpsl
ficoms
stos
cmp
pop
xor
call
insl
xchg
mov
inc
aaa
mov
push
in
xchg
and
out
xor
add
dec
mov
pop
cmp
pop
outsl
pusha
dec
pop
mov
xor
rolb
leave
repz
fwait
out
inc
mov
xor
push
test
sbbb
sub
lcall
pop
mov
loopne
push
pop
movsb
sub
in
mov
popa
cltd
int3
sbb
sub
jp
movb
cld
or
add
push
rcrb
imul
mov
adc
fildll
dec
add
lahf
pushf
adc
push
pop
in
popa
mov
jns
lcall
filds
js
adc
fs
pusha
sbb
lea
fidivrs
xchg
mov
cwtl
int3
popa
ret
popl
xor
adc
push
shr
dec
data16
jns
mov
and
pop
cmpsl
jp
icebp
insb
fcomps
aaa
or
je
movl
sub
fildll
sarl
cmpsl
push
stc
jb
nop
xchg
or
ja
testb
dec
pop
daa
mov
push
ja
push
inc
je
push
push
lcall
mov
out
notl
jo
rorb
sbb
push
sti
push
stos
jne
addr16
and
xor
or
sarb
mov
and
fidivl
xchg
jmp
cs
test
insb
std
and
pop
adc
sub
aas
mov
js
imul
dec
loope
mov
xchg
and
jecxz
mov
inc
outsb
loope
pop
adc
adc
xor
and
call
ret
mov
jb
fisttpll
jnp
cmpl
inc
ja
xor
add
adc
dec
pop
mov
sbb
push
xchg
arpl
int
push
daa
pushf
mov
rcr
mov
adc
pushl
jg
les
adc
xchg
xchg
xchg
dec
push
mov
mov
xor
cmpsb
sbb
fcmovne
push
mov
mov
in
cld
add
xchg
and
stos
ret
loope
ret
sbb
jl
les
icebp
lods
jno
mov
dec
and
in
jb
ffreep
cmc
pop
mov
pusha
add
jg
mov
push
xor
data16
mov
xchg
outsb
xlat
push
stos
aam
mov
jl
mov
stos
mov
mov
and
pop
xchg
mov
inc
jnp
arpl
dec
cmp
leave
mov
int
shll
sub
rorb
subl
lcall
insb
push
and
scas
sub
mov
movzwl
dec
adc
jg
push
aaa
jg
out
test
sti
int
push
in
imul
notl
dec
and
das
pop
xchg
cmpsb
xor
roll
mov
sub
pushfw
fdivs
cmp
hlt
push
mov
cmp
lcall
daa
out
mov
sub
dec
push
outsl
test
leave
lret
or
cmp
mov
ret
jmp
cmpsb
dec
fstpt
push
lcall
inc
push
imul
imul
mov
jne
pop
rcl
sub
jge
pop
cmc
xor
push
xchg
mov
mov
call
shlb
jg
jb
inc
int3
dec
pop
xor
outsl
scas
fxch
cltd
sub
movb
loopne
jae
dec
inc
dec
out
jnp
inc
ret
adc
fs
mov
popl
enter
popf
daa
add
mov
std
or
imul
jnp
and
lds
lcall
dec
std
sbb
mov
data16
cmp
sahf
popa
pop
pcmpeqw
xchg
cmp
or
jno
pop
sar
and
jae
int
stos
fwait
mov
aaa
push
enter
imulb
cmc
adc
test
pop
inc
lock
mov
and
imul
scas
cli
leave
and
lods
aad
or
fwait
lock
pusha
jp
adc
mov
lret
mov
sub
inc
int3
mov
or
std
or
and
fwait
push
mov
adc
add
mov
sar
dec
add
out
cmp
ja
xchg
adc
ljmp
pop
xchg
insb
sbb
cmp
and
movsb
scas
xor
clc
inc
data16
ss
cli
repnz
pop
and
jne
mov
or
std
mov
stos
mov
jns
cmpl
xchg
stc
mov
push
dec
jbe
cs
xor
insb
jge
xchg
cmp
push
pop
xor
cmp
je
and
mov
jge
xchg
pop
daa
imul
pusha
or
xchg
iret
inc
sbb
mov
lea
sbb
sbb
cmp
incl
push
add
pop
mov
pop
adc
xchg
pop
push
push
lock
jg
fadds
xor
xlat
fs
test
sbbb
push
mov
out
xorl
shll
arpl
stos
dec
push
arpl
addl
imulb
divb
aaa
cmpsl
jp
jecxz
ffreep
cltd
lahf
xor
mov
sbb
ja
movsl
cmp
adc
jns
xchg
dec
sbb
cltd
dec
xchg
movsb
les
or
jmp
dec
fs
cmp
es
inc
xchg
inc
test
psubw
sub
mov
cmovge
or
imul
jecxz
in
ss
xor
in
inc
out
sub
daa
mov
adc
js
dec
sbb
daa
pop
sbb
fstps
scas
ss
fldenv
sub
pop
sbb
pusha
cmpsb
inc
mov
jbe
pop
adc
mov
mov
sbb
pop
jecxz
push
mov
add
xchg
and
pushf
inc
in
movsb
icebp
inc
cmp
and
cmp
lock
or
push
test
insb
mov
mov
je
adc
inc
pop
pop
mov
pusha
cmp
xchg
sbb
out
xor
je
mov
add
jbe
jg
into
ja
jb
into
mov
jne
sub
loopne
call
pop
and
cld
mov
sub
das
fdivrs
mov
rcrb
dec
pop
popf
xlat
xchg
mov
push
clc
iret
rorb
insl
xchg
push
in
movsl
sbb
out
push
dec
xchg
pop
mov
enter
loop
cmp
push
mov
pop
call
stos
in
aaa
inc
loop
das
sahf
xchg
mov
call
rcr
add
xor
xor
xchg
cmpsl
lods
add
xchg
out
add
in
mov
xchg
jl
dec
push
inc
push
adc
sti
js
push
insb
outsl
pop
popl
pop
insl
bound
cmp
test
sbbb
mov
or
adc
es
xor
aad
jmp
push
sbb
jne
outsl
ljmp
jnp
pop
out
popf
xchg
ja
cmp
aam
jg
pop
push
faddl
xor
mov
and
repz
shlb
stos
mov
mov
or
cmp
dec
movsb
loopne
lret
lahf
mov
cmp
stos
mov
sar
test
aam
xchg
pop
call
arpl
xor
repnz
addr16
fstpl
into
add
mov
enter
stc
xchg
fidivl
or
stc
xlat
mov
inc
int
add
add
sub
pushf
enter
add
cvtps2pi
adc
or
in
inc
push
je
sbb
jbe
adc
jno
test
mov
xchg
push
sti
jne
or
lods
aam
cmpsb
mov
outsl
xor
and
or
cwtl
js
mov
push
insb
adc
popf
sub
dec
or
add
aad
sub
sub
jo
xor
lret
dec
lcall
int
adc
xchg
out
adc
and
xor
xor
push
scas
push
cmpl
les
push
xchg
sub
xchg
out
mov
xchg
test
pop
adc
push
aas
and
cli
fs
sahf
nop
push
inc
imulb
xchg
add
ss
ds
adc
pop
loopne
test
and
adcb
xor
mov
ficompl
mov
mov
sub
jge
test
mov
out
mov
enter
out
int3
dec
or
sbb
mov
cwtl
movsb
movsb
enter
adc
sbb
imul
rcrb
loopne
pop
xchg
adc
out
xchg
movsl
cmp
fstl
xor
repz
xchg
int3
push
sahf
pop
dec
add
aad
xchg
sbb
test
or
movsl
inc
and
xchg
pop
lds
dec
jle
mov
adc
jne
test
push
cs
nop
push
das
enter
cmp
cwtl
pop
fidivrs
pop
mov
lods
jno
das
sub
push
jle
inc
jp
test
testb
cwtl
jle
sub
arpl
xchg
xor
sbb
sbb
sub
leave
lret
pop
jmp
rolb
stos
adc
jb
dec
jmp
mov
or
rcrl
andl
jmp
xor
cmp
fs
add
loope
pop
outsb
jp
lods
inc
out
mov
inc
adc
mov
and
sti
pop
mov
mov
cltd
fiadds
mov
push
leave
aaa
cmp
dec
imull
fst
mov
loopne
sti
fidivl
insl
repnz
js
aam
mov
test
repz
sub
neg
cmp
and
add
xlat
test
push
stos
cmp
push
ja
lods
pop
loopne
lds
data16
pop
stos
xor
sub
enter
sub
in
rorb
inc
pop
pop
mov
or
cwtl
xor
in
and
jmp
dec
daa
xchg
icebp
xor
push
xchg
jo
sub
pop
insb
xchg
lds
jbe
loopne
mov
mov
addl
test
movsl
stos
jno
movb
enter
sbb
lahf
sahf
nop
nop
mov
outsl
xchg
xlat
out
stos
add
cmp
roll
stos
push
pop
insb
mov
jmp
xor
mov
aad
mov
ret
lahf
cwtl
fldcw
jo
inc
aas
rcll
cmpsl
xchg
mov
leave
mov
aaa
add
addr16
imulb
mov
lcall
fistpl
into
add
std
insb
addr16
pop
add
repz
xchg
jnp
movsb
push
xor
fnsave
shl
roll
enter
sub
icebp
jo
xchg
cmp
subb
insl
xor
push
push
and
movsl
push
sbbb
std
push
cs
mov
adc
cmp
pop
push
loop
mov
xchg
out
xor
mulps
not
sbb
jae
stos
addl
sahf
lods
cmp
xor
loope
or
call
rep
dec
xchg
mov
jecxz
sub
mov
pusha
into
out
sub
push
cwtl
jg
cmpsl
cmp
xchg
mov
pop
push
stos
mov
in
inc
popa
inc
aaa
push
scas
test
sbb
sub
sub
mov
pusha
fbstp
int3
daa
push
sub
mov
pop
and
pop
pop
cmp
imul
leave
stos
nopl
xor
repnz
test
push
mov
loope
jo
dec
mov
out
or
cmpl
in
pop
fimull
and
push
xor
ja
pop
aad
loope
inc
fs
andb
jl
je
aas
cmpsl
mov
ss
enter
call
sub
xor
ret
mov
add
iret
in
push
mov
shrl
xor
jmp
cmp
pop
dec
shll
push
push
pop
jno
sarb
adcb
int3
ret
outsl
ljmp
lds
sub
mov
sti
sub
push
dec
adc
popf
inc
testb
idivb
mov
aam
cmc
pop
stos
ficompl
jns
clc
or
cltd
aam
push
out
outsb
lods
ja
dec
mov
sub
jb
mov
inc
mov
adc
aas
inc
cmp
std
pop
sahf
jns
push
cmp
insb
shl
pop
cld
sbb
mov
out
mov
dec
cmp
mov
shlb
xchg
jmp
and
xchg
or
xchg
subl
xorl
jg
xchg
adc
cltd
nop
hlt
adc
ficompl
and
xchg
std
and
das
mov
cmp
insl
adc
pop
or
movsl
push
jl
inc
lret
sub
xor
adc
mov
jb
addr16
lret
xor
je
push
cmp
dec
bound
xor
in
mov
and
pop
dec
xor
cmp
pop
and
inc
and
jle
lea
fisttps
scas
mov
mov
mov
stc
rcll
mov
mov
mov
push
ja
push
add
inc
imul
mov
xchg
cmp
fldl
div
inc
lods
sahf
aad
or
pop
in
in
jno
jge
aad
xchg
movsl
ror
dec
push
mov
sub
pop
sbb
adc
das
xorl
bound
pop
sub
jp
in
cmp
add
pushf
jnp
out
test
pusha
mov
inc
cmc
pushf
shll
scas
gs
test
lock
ljmp
sbb
push
pop
rcl
sbb
mov
pop
and
leave
outsb
nop
sbb
jmp
pop
xor
aad
sub
out
push
pop
sub
pop
movsl
cmp
fcmovnb
into
int3
aam
dec
daa
es
sub
adc
das
sub
push
repz
add
sbb
cld
cmpsb
add
lahf
xchg
sti
adc
sub
sub
dec
cli
jnp
aam
mov
in
jge
stos
sti
pop
enter
insl
cmpsl
rcrl
loop
je
or
aam
ret
cltd
sbbb
cmp
sti
pushf
mov
adc
out
and
icebp
cs
pop
test
jbe
adc
push
aad
adc
lret
push
test
negl
xor
jbe
and
lret
mov
sbb
xchg
inc
mov
lods
sub
xor
mov
out
and
into
test
dec
repnz
xor
sbb
pop
push
iret
cli
orb
repz
popa
bound
cmp
mov
mov
mov
lods
adc
inc
gs
pop
in
sbb
orb
jmp
mov
mov
sub
mov
jmp
dec
adc
lea
mov
test
lock
in
cmp
data16
test
adc
idivl
add
sarb
and
jbe
jno
add
sub
lahf
inc
scas
mov
xchg
cmp
push
scas
and
push
sahf
xchg
in
mov
sbb
cmpb
push
fstps
push
lock
jle
push
mov
aam
hlt
or
pop
cmpsb
push
jmp
sub
cmpsb
daa
push
in
xchg
es
aas
cmp
sbb
push
loop
sub
mov
and
test
je
or
pushf
cmp
cli
test
jbe
adc
int
rorl
jecxz
adc
popf
popf
lar
daa
xor
in
sahf
imul
sub
test
xchg
pop
out
xchg
xor
enter
push
scas
ljmp
hlt
ss
and
mov
ds
loope
roll
aam
jge
in
enter
inc
and
ret
in
cli
sarl
insl
stos
dec
in
jl
movsl
mov
mov
enter
jp
mov
pop
testl
lds
dec
ja
push
jno
loop
add
aad
stos
cmp
pushf
daa
adc
xor
aas
enter
out
jecxz
movsb
stos
pushf
fwait
cmc
cmp
and
aad
cmp
mov
dec
scas
mov
sub
mov
add
jl
pop
mov
mov
stc
shr
out
sbb
mov
sub
mov
call
xchg
aaa
popf
and
sub
fcmovne
push
imul
push
xlat
insb
idivl
fildll
or
shl
stos
sub
adc
ds
ljmp
call
dec
mov
jecxz
ds
hlt
fistps
pop
mov
cmpsl
popf
pop
inc
jle
cmp
dec
jmp
aaa
mov
ljmp
jg
repnz
jb
xchg
pop
jae
and
xor
andl
xor
xor
mov
add
cld
push
cli
or
xor
pop
sbb
mov
mov
rolb
out
into
call
pop
mov
das
mov
insb
jg
mov
push
ja
mov
flds
adc
aam
cmpsb
mov
fstpt
push
inc
iret
xor
mov
sarl
mov
push
test
out
and
cmp
movsb
fdivrp
fsubr
or
push
mov
loop
inc
adcl
sub
cmp
add
sti
in
xor
cmpps
jecxz
mov
rolb
dec
mov
push
inc
scas
inc
lea
daa
es
in
sub
pop
cmp
and
aam
fwait
in
fwait
xor
imul
jae
popa
jmp
out
into
xchg
pushf
sbb
insb
loopne
cmp
cmc
les
ss
jbe
cmpsb
jg
jne
shlb
xchg
fst
lods
cmp
scas
inc
fwait
jb
in
fwait
jp
das
jnp
sub
test
mov
fidivrs
push
xchg
bound
pop
lret
mov
lahf
insl
arpl
push
cmpsl
arpl
adc
push
add
jle
das
loopne
lea
sub
lcall
mov
push
cmpsl
shrl
icebp
sbb
int3
xor
and
clc
push
inc
ret
stos
and
hlt
xor
jns
xchg
sub
mov
and
scas
push
sbb
mov
ret
sarl
cmpl
cmp
das
in
call
inc
mov
dec
or
add
stos
rcrb
leave
lahf
jg
lods
arpl
sbb
ja
xlat
jae
mov
scas
idivl
rorl
in
popa
pop
aad
rorl
aas
dec
int3
repz
cld
add
or
adc
pop
test
or
add
add
mov
out
mov
xchg
jmp
pop
sbb
fwait
or
cmpsb
ja
loope
enter
adc
lret
sub
or
stc
clc
mov
inc
jne
mov
aaa
mov
sarl
jl
xchg
shl
ret
out
adc
pmovmskb
cmp
dec
lret
push
cmp
jle
mov
es
js
insl
push
sbb
or
add
and
mov
dec
xchg
or
out
mov
fildll
adcl
out
cwtl
or
sbb
out
adc
cmp
or
add
pushf
mov
xor
sti
cmp
adc
mov
mov
mov
mov
cwtl
icebp
gs
fildl
ss
out
xchg
jno
leave
mov
int3
and
adc
test
cmp
push
mov
sar
mov
icebp
or
add
push
push
add
js
jnp
cmp
lods
lds
mov
idiv
or
test
aaa
and
sbb
addps
stos
pop
test
inc
jnp
push
lcall
jno
aaa
loopne
sub
sti
decl
mov
mov
jnp
insb
mov
add
pop
dec
xchg
cmpsb
sbb
lret
xchg
nop
lods
inc
cld
popa
sahf
dec
pop
scas
sar
jg
push
jmp
divl
rolb
aam
les
ja
and
jno
test
xor
int
fs
les
add
into
jae
sub
push
das
push
rclb
dec
fimull
push
cltd
ficompl
pop
pop
push
and
adc
pusha
adc
popf
sti
mov
sarl
and
or
mov
jp
arpl
xor
lock
into
jecxz
jo
idivl
les
dec
fmulp
clc
ret
push
arpl
arpl
movsl
hlt
repnz
sbb
push
sti
insb
sub
pop
test
pop
fbld
xor
repnz
shlb
mov
mov
stos
insb
mov
cmpsb
lock
and
sti
dec
sub
xor
pop
cmpsb
out
inc
fimull
fcompl
jp
rorl
mov
ja
test
loopne
fsubl
outsb
cwtl
notl
or
sbb
cld
jl
mov
jnp
or
gs
mov
jb
xorb
adc
into
xor
xor
jo
or
out
inc
out
push
lret
dec
cltd
jbe
sbbl
sbb
mov
xor
sub
pop
push
int3
test
movsl
dec
push
xchg
sbb
pop
outsb
xchg
dec
scas
adc
mov
enter
xor
fcmovnbe
mov
cmp
jae
sbb
les
ljmp
lods
in
daa
adc
aad
dec
adc
sbbl
lock
cwtl
nop
in
xchg
daa
fwait
dec
push
js
movsl
or
sub
or
xchg
inc
mull
inc
outsb
adc
push
dec
or
push
lahf
pop
or
dec
nop
fdivrs
dec
inc
testl
xchg
jns
in
mov
push
xor
mov
jo
test
outsb
popa
jo
dec
mov
jnp
hlt
mov
mov
rep
icebp
or
push
and
sbb
shrb
cmp
leave
lock
push
ret
popf
or
out
cmp
and
int
scas
cmpl
add
inc
mov
scas
push
jb
repnz
je
dec
inc
ret
rol
push
xchg
push
inc
mov
dec
and
xchg
shll
inc
sti
and
sub
dec
testb
sub
fmul
std
mov
inc
comiss
xchg
dec
aad
adc
sbb
sbb
lods
lds
adc
movsl
fadds
loopne
inc
and
enter
pop
scas
je
movsb
int3
scas
lods
dec
sbb
add
fs
cld
aas
mov
pop
repz
or
enter
jne
sub
les
aaa
mov
sbb
xlat
call
adc
call
out
jg
pop
ret
jp
out
pushf
lds
push
or
jns
xchg
testl
xor
cmpsb
inc
outsl
adc
lret
roll
in
mov
in
gs
fwait
or
test
pushf
enter
sub
inc
lahf
dec
test
call
mov
fisubrs
inc
add
orb
jnp
cwtl
fstps
xlat
sbb
dec
mov
in
jns
in
xchg
cmp
bound
or
pop
ss
mov
and
xor
jg
jno
adc
lods
lret
dec
in
mov
dec
cmpsl
sar
lea
mov
cs
dec
add
pop
out
stos
jne
and
cmp
add
push
ficoml
fidivs
call
mov
mov
popa
lcall
cmp
out
push
lret
or
addb
fisubs
ret
loope
mov
jno
sti
add
das
mov
in
nop
clc
push
mov
sbb
repnz
std
sahf
adc
out
shlb
outsb
daa
pop
sahf
xchg
inc
fcomps
sbb
xchg
cmp
mov
shlb
jmp
add
fsubs
or
and
xchg
addr16
push
dec
or
dec
jb
push
push
jns
jb
and
xchg
outsl
jmp
aaa
pop
nopl
or
jbe
sub
stc
lds
dec
pop
aas
out
add
lods
inc
and
popa
mov
mov
std
stos
cmc
xchg
cmp
adc
cmp
repz
xchg
pop
mov
lods
cmp
loop
mov
call
adc
mov
ror
xchg
movsb
aaa
int3
mov
int3
nop
scas
push
add
pop
add
movsb
lock
icebp
and
cmc
test
and
sub
mov
loope
lcall
call
fdiv
pushw
pop
adc
pop
fisubs
shrb
pop
jecxz
out
cmpb
add
stos
rcl
mov
das
mov
adcb
out
inc
sti
jnp
loopne
jns
es
jns
fs
bound
test
pop
int
scas
hlt
jae
out
xchg
nopl
movsb
mov
lock
hlt
lock
sub
adc
ja
push
in
insl
inc
inc
mov
dec
push
lret
xchg
mov
cmp
insl
xchg
loop
test
and
push
movsl
stc
fdiv
fdivrl
or
clc
add
stos
mov
jo,pt
push
lcall
es
inc
popl
ret
adc
js
mov
out
mov
das
popf
sub
fcoml
mov
aaa
addb
add
push
lods
cmpsl
push
subb
repnz
cmpsl
mov
frstpm(287
mov
scas
mov
arpl
xor
inc
dec
mov
js
push
xor
fdivrl
push
pop
jmp
mov
pop
add
loope
mov
lcall
hlt
jne
jnp
test
mov
cmp
mov
rcrb
jns
lea
cmp
mov
movsl
popl
mov
int3
mov
xchg
fst
js
lds
cli
jl
sbb
je
std
sub
dec
stos
mov
loope
jge
fwait
stos
movsb
in
je
in
add
fildll
pop
jge
adc
mov
add
lcall
push
shrl
xchg
mov
xor
and
adc
cltd
daa
mov
pop
adc
stos
pusha
adc
mov
adc
rcll
in
lret
push
jb
std
clc
scas
popa
fnstsw
pop
fldcw
outsb
jnp
mov
loope
icebp
out
cmpsb
rcrb
bound
popl
inc
mov
add
mov
mulb
loop
jb
xchg
incb
push
add
pop
div
add
iret
aam
cli
ret
jecxz
cltd
cmp
xchg
dec
jecxz
and
stc
pushf
imul
gs
inc
pop
cmp
mov
popf
in
lret
sahf
aaa
push
je
jmp
and
jmp
cltd
sub
movsb
lret
jae
test
les
xchg
xchg
negl
jns
fwait
pop
jo
pusha
jge
push
ss
insb
data16
push
jo
fistpll
ja
arpl
mov
add
adcb
icebp
and
stos
movsl
iret
fcomps
jmp
ret
and
lahf
rcll
cmp
mov
dec
or
or
mov
orl
in
das
dec
mov
xchg
xchg
idiv
test
out
pop
ret
mov
or
sub
pop
imul
and
hlt
test
push
stos
xor
mov
mov
mov
popf
stc
cltd
cmp
loopne
xor
add
push
adc
outsl
jne
and
shll
aas
cmpsl
jbe
jb
and
xor
mov
push
pushf
es
jns
cmc
cmp
sbb
fld
xlat
das
pop
cmpsb
ljmp
mov
inc
jae
stc
fs
mov
sarb
xor
ret
mov
loope
clc
int
outsl
adc
jae
mov
aad
lods
dec
aam
sbb
fidivrl
int
pop
jnp
adc
adc
xchg
sbbl
in
mov
mov
mov
jmp
rclb
inc
add
cmc
jmp
push
push
lock
and
out
inc
sub
adc
mov
and
inc
call
or
pop
out
cs
int3
pop
push
je
fisttpll
xor
adc
pop
and
jb
mov
xchg
mov
lock
bound
mov
cld
xchg
nop
cmp
and
push
ja
repz
lcall
xor
std
in
adcl
je
je
push
popa
mov
push
aaa
pop
jge
push
rcrl
imul
mov
icebp
jp
out
in
mov
cltd
jg
mov
and
insb
mov
dec
out
xor
xchg
push
jmp
jg
daa
js
gs
inc
rol
scas
mov
cli
push
mov
sar
push
test
pop
stos
push
ss
push
mov
or
dec
pusha
sbb
ret
xor
or
fwait
sub
mov
scas
test
enter
add
jge
jge
cmp
rorb
sub
icebp
sub
sbb
mov
addr16
mov
icebp
cs
loopne
sbb
je
cmp
int
bound
gs
adcb
xchg
inc
cmp
cs
sub
stc
mov
mov
cli
stos
fs
shlb
out
and
movsl
mov
cld
jp
enter
mov
iret
addb
cs
mov
clc
das
pushf
stos
lods
daa
int3
xchg
mov
fnstsw
inc
notl
mov
rcll
mov
out
mov
mov
dec
fstpl
stos
and
sub
out
sub
mov
frstor
jae
or
shll
lock
mov
mov
inc
push
repnz
test
dec
xchg
push
sbb
mov
movsl
out
shrl
dec
sub
fstps
ret
rcll
aas
shlb
out
int3
test
ret
xchg
push
negl
and
clc
push
loope
nop
adc
mov
enter
call
jae
sbb
orb
sti
jl
outsl
dec
inc
mov
jmp
rcrl
jl
cmp
loope
jl
inc
js
testb
jl
into
int3
out
loopne
pop
push
sub
inc
xor
jg
cmp
mov
mov
or
nop
pushf
movsl
fnstcw
push
xor
mov
scas
adc
inc
clc
add
lea
dec
or
mov
rorl
popa
ds
lret
adc
and
cltd
inc
push
adcl
xlat
jecxz
fwait
data16
dec
jno
xor
js
mov
xorl
and
stos
ljmp
mov
call
repnz
je
adc
subps
lahf
cwtl
fwait
push
cmp
rcrl
and
int3
sahf
mov
xor
mov
clc
sarl
push
cmp
jecxz
inc
ja
mov
and
movsb
cld
dec
mov
jns
cmp
in
cld
lods
push
xor
jnp
daa
shrl
adc
movsl
push
lahf
popf
fisubs
sbb
lret
and
fsubl
or
cwtl
pop
dec
mov
bound
mov
adcl
mov
and
sub
in
pop
mov
sub
add
fisubrl
cld
mov
jmp
aad
add
out
dec
and
jbe
and
cmp
push
leave
mov
xor
setne
jb
jae
nop
inc
xor
sub
jo
fbld
adc
add
ret
jmp
insb
sub
push
or
mov
xor
add
fst
pop
sahf
arpl
js
cld
mov
jp
popa
cmp
fistps
dec
xchg
or
lods
push
pop
cmp
and
dec
ret
ds
xchg
jno
test
mov
shl
cmp
inc
in
mov
pop
mov
movsb
inc
xor
out
lret
pusha
sti
jno
sub
pop
xchg
ja
mov
xor
or
xchg
pusha
mov
fldl
enter
iret
jmp
adc
xchg
stc
rorl
cmp
xchg
lret
stos
lret
test
rcrl
scas
sub
jl
int
adc
scas
push
enter
sub
fcoms
lods
lods
repz
ja
les
mov
or
insb
adc
stos
or
xlat
hlt
rorl
test
mov
loop
dec
imul
test
adc
and
or
push
or
sahf
outsl
mov
xchg
les
iret
push
sbb
sbb
flds
or
aam
pop
mov
in
aaa
insb
adc
fs
cmp
xor
mov
add
sub
lds
xchg
mov
iret
movsb
scas
sarb
xchg
mov
pop
addr16
cs
sbb
push
fistpll
mov
addr16
rclb
cmp
jb
inc
jns
xor
pop
xchg
adc
xor
cmc
mov
push
fs
hlt
sbb
mov
idivl
shl
test
out
xchg
pop
les
and
add
hlt
pop
cli
xor
outsl
pop
mov
lock
js
cmpsl
ret
sub
notl
cmp
stc
cmpb
dec
adc
push
in
in
shll
mov
inc
popa
lret
inc
xor
clc
cmp
lret
roll
scas
stc
rclb
fldl
cld
xlat
cmpsb
cmc
xchg
push
push
adc
pop
add
push
adc
bnd
rorb
inc
adc
jl
dec
mov
add
in
pop
push
test
cli
repnz
in
push
or
and
inc
mov
loope
sbb
outsl
sbb
jnp
sbb
sub
mov
cwtl
shl
mov
pop
aad
stos
movsl
inc
cmc
push
adc
add
dec
in
or
and
dec
repz
ja
loope
lret
fisubrs
stos
pop
test
pop
loope
pop
lret
push
add
das
mov
sbb
fidivs
xor
lret
jle
rcr
xor
aam
cmp
xchg
out
fisubrl
scas
mov
mov
sbb
jae
into
or
push
mov
xchg
int
fists
mov
mov
mull
lea
mov
arpl
jecxz
sbb
daa
push
adc
sub
das
xchg
sbb
jmp
stos
fildl
sub
fcompl
pop
cmp
pop
cmpsb
mov
mov
cmp
sub
add
test
cmpl
inc
loop
mov
pop
je
mov
cld
or
movsb
bound
pop
mov
call
dec
fcmove
adc
scas
xchg
daa
test
inc
fcomps
cltd
add
pop
rolb
add
mov
in
filds
hlt
mov
inc
add
ljmp
inc
sarb
hlt
sub
insb
cmp
xchg
jmp
add
jg
aam
jmp
fbstp
cltd
daa
hlt
mov
mov
push
xchg
outsb
jae
xchg
pop
jl
sub
sbb
aad
and
lea
push
and
movl
sbbl
mov
jp
push
ljmp
negl
or
push
daa
mov
xchg
push
cltd
mov
sahf
push
rolb
jns
lahf
lds
xchg
or
sub
movsb
mov
insb
ss
rclb
dec
les
or
insl
add
lcall
cmp
mov
lds
jnp
mov
mov
imul
push
xchg
inc
adc
xchg
lea
jmp
jle
fcoml
push
pop
mov
mov
add
sub
inc
mov
sub
or
inc
out
aas
ss
pop
lahf
cmovae
add
outsl
dec
out
inc
sbb
into
mov
jb
xchg
ror
sub
imul
rcll
push
sub
add
pop
and
fsubl
sbb
js
dec
xchg
mov
int
aad
xor
adc
xor
stos
shlb
loop
nop
pop
jns
test
rcrb
cld
inc
lahf
xor
mov
cmp
decb
mov
xor
or
push
mov
insb
mov
add
and
rcr
sbb
pop
cmp
int3
aad
dec
jmp
jp
mov
sub
dec
aam
fsubl
hlt
jle
insb
xchg
mov
shll
fsubl
mov
dec
mov
nop
xor
loopne
scas
sub
inc
jg
jno
je
dec
daa
cli
mov
lds
mov
inc
xor
ss
jl
in
jne
jb
and
cli
popa
xor
cmp
cmp
push
rorb
stc
out
xlat
push
pop
faddl
pushf
pop
scas
sub
out
xorb
ss
js
aaa
aaa
jb
cltd
dec
lods
lock
dec
bswap
insl
xchg
xchg
in
in
iret
xchg
scas
jg
insb
and
xchg
out
xor
inc
adc
pushf
cmp
aad
pop
outsb
cmp
or
inc
jg
sbb
leave
cmp
push
inc
scas
xchg
push
and
ret
das
loopne
cmpsb
fs
add
lret
add
in
xchg
roll
push
shlb
stos
pop
loopne
cmpsl
pop
leave
call
aaa
mov
sub
cmp
jb
cmp
mov
mov
test
fs
cld
xor
aas
inc
xchg
test
mov
mov
adc
in
dec
mov
repnz
xchg
add
mov
add
xor
cmpsl
xchg
fmuls
leave
stos
sbb
jmp
scas
testl
ja
loopne
fldl
movsl
add
jmp
out
sbb
stos
or
adc
call
adc
jno
lret
mov
adc
pop
and
mov
std
loop
or
icebp
outsl
fimuls
and
push
jnp
sbb
ja
xchg
stos
ss
add
and
push
push
fsts
mov
fsubl
shrb
cmp
rcrb
fucom
imul
sbb
js
repnz
les
cltd
hlt
call
addb
add
push
jae
pop
lret
popa
push
and
jns
mov
in
sbb
outsl
jnp
test
sub
sub
inc
jno
out
add
add
ret
rclb
pop
jmp
aas
je
jmp
jmp
and
iret
sti
mov
xlat
out
or
adc
negb
addb
fucomip
in
jae
dec
jl
loope
jne
dec
sarl
mov
lea
nop
inc
lds
repz
insb
pop
sbb
and
pop
imul
std
imul
daa
xchg
mov
repnz
mov
mov
lock
bound
fdivrs
push
xor
sub
ds
loope
test
mov
es
lods
lods
testl
xor
sbb
cmp
bound
lock
ja
pop
clc
adc
sub
fisubs
or
lods
outsl
int3
sbb
leave
stc
inc
jmp
jg
jecxz
lds
std
cs
and
dec
jg
xor
sbbl
xchg
jbe
in
negl
repz
mov
mov
or
insb
adc
xor
and
mov
fwait
xchg
pop
dec
inc
test
add
sub
nop
inc
loope
sub
sub
inc
dec
mov
mov
dec
mov
xor
sub
int3
into
es
mov
xor
sti
xor
jp
fcoms
xlat
mov
rol
jge
das
mov
jns
fdivrl
mov
aam
mov
movsb
pushf
mov
int
push
jb
int
cmp
pop
stos
fcmovnb
jl
add
int
in
fdivp
jl
rcrb
push
scas
inc
sbb
adc
pop
lods
ror
push
test
cmp
push
icebp
sub
sete
ss
int
fst
loopne
push
push
jle
mov
dec
es
loop
ret
cli
sub
sti
inc
inc
dec
cmp
push
bound
lret
xchg
push
cmp
mov
mov
push
pop
jns
pop
jmp
imul
ljmp
inc
xchg
pop
mov
mov
jb
push
stc
pop
cmpsl
pop
pop
idivb
xor
loopne
ret
mov
jb
rcl
adc
hlt
mov
sbb
mov
mov
fwait
inc
subb
das
in
imul
add
mov
inc
inc
mov
mov
mov
cmp
jmp
repz
cmp
ficoms
outsl
outsl
jge
enter
jb
mov
icebp
mov
pop
mov
jno
ret
xchg
aaa
es
lods
pop
pop
adcl
pusha
inc
pop
sbb
clc
fnop
or
mov
lock
pop
arpl
jb
sub
pop
push
or
or
sub
loop
xchg
pusha
add
and
repz
ficompl
dec
mov
and
sbb
dec
cmp
orl
ficomps
call
mov
inc
add
jno
add
mov
in
dec
xor
or
xor
cmp
pop
insb
mov
cmpsl
dec
jl
cmc
out
xor
ret
stos
lea
jb
cmc
or
and
inc
mov
test
push
scas
mov
cld
outsl
enter
cmpsb
adc
sbb
lods
popf
jnp
sarl
mov
sub
jg
and
aaa
and
mov
mov
jbe
push
popf
mov
insl
push
clc
pop
into
cmc
lds
shlb
push
pop
popa
jg
testb
sarb
mov
push
cmp
fwait
push
or
cmp
into
ds
cmp
pusha
cld
imul
or
jae
inc
push
loope
cmpsb
or
dec
in
jge
mov
or
loopne
mov
pop
jl
mov
icebp
pop
stos
mov
adc
sub
inc
ret
test
mov
push
mov
cmp
sub
xchg
rcll
mov
sbb
mov
repnz
rsm
cmc
inc
xor
hlt
and
bound
inc
bound
outsb
dec
sbb
cmp
pop
or
shll
js
inc
xor
sub
aas
repz
adc
push
mov
outsl
push
or
mov
cs
mov
cmp
or
es
pop
inc
mov
pop
lret
adc
jns
xchg
movb
lock
adc
das
dec
call
mov
mov
in
popa
cmp
xor
cs
inc
pop
sub
pop
ficoml
cmpsb
inc
jbe
std
scas
loop
cli
lock
push
out
push
rorl
and
dec
dec
adc
dec
scas
inc
jbe
cmp
jo
xor
xchg
rep
xor
cwtl
pop
pop
scas
sub
push
sbb
xlat
push
insb
and
test
stc
imul
or
out
in
fwait
mov
addl
rorb
jo
add
mov
mov
dec
push
sti
jg
les
divb
shlb
fmuls
loop
sub
sub
gs
xchg
icebp
xor
leave
pop
lods
jge
cmp
mov
pop
mov
daa
cmpsl
or
push
and
jp
loop
and
aam
sbb
nop
sub
outsl
popf
xchg
aad
inc
sbbl
in
mov
lcall
pushf
mov
xor
enter
mov
jge
stos
sbb
fisubl
xchg
cmc
xor
and
cmp
xchg
jecxz
call
sub
pop
lods
adc
out
bound
cwtl
lds
sub
mov
or
xchg
aaa
pop
in
pusha
mov
clc
faddl
xor
mov
jmp
pop
jmp
cmp
js
mov
push
test
xchg
mov
nop
shlb
and
push
dec
sar
shrl
popf
iret
in
nop
dec
std
inc
push
scas
sub
lea
shll
dec
js
xchg
outsb
jle
test
jmp
loope
fnstenv
mov
xor
in
sub
gs
xchg
iret
xchg
dec
push
inc
lds
mov
imul
mov
movsl
xor
sbb
jne
fsubr
or
ja
lods
mov
out
dec
cld
jle
xor
mov
movsb
or
lret
add
stos
call
sub
xchg
sbbb
mov
vmread
ds
sti
dec
xchg
xor
push
inc
adc
add
mov
dec
enter
rorb
xor
cmp
pop
mov
jnp
loopne
repz
sarb
ss
or
hlt
sub
jo
fst
xor
push
xchg
xchg
pushf
popf
jae
or
and
lcall
push
xlat
sbb
cmp
cmc
cmp
mov
addl
push
roll
mov
push
xchg
xor
dec
pop
sbb
mov
or
mov
popa
aaa
add
repz
jb
aaa
mov
out
popa
loop
fistps
mov
and
jecxz
pop
lret
adc
rcll
dec
jbe
push
or
mov
ds
pop
sub
sub
insb
adc
or
add
pusha
mov
das
sahf
scas
jg
cmp
sbb
xchg
cmp
fs
mov
ds
jge
repz
pop
cmp
es
or
adc
lret
lcall
sbb
pop
xchg
and
push
pop
mov
out
push
push
and
adcl
arpl
scas
jp
mov
xorl
outsl
mov
addr16
in
std
inc
and
rcrl
jmp
andl
xor
sub
aas
in
fldcw
jnp
fs
jnp
nop
call
lret
in
arpl
mov
movsl
inc
xchg
push
or
xchg
mov
repz
add
xchg
jb
jge
les
lret
enter
lods
and
mov
fisubrs
outsl
add
jnp
cltd
lds
stos
in
aam
mov
fs
mov
enter
fists
daa
dec
pop
sub
leave
inc
insl
cs
daa
out
jne
jle
outsb
scas
mov
pop
cmp
lcall
xlat
clc
pop
dec
jns
aam
jb
int
mov
adc
sbb
mov
adc
imul
sti
push
sahf
ss
push
ljmp
xchg
mov
in
repnz
sarl
aad
or
inc
pop
ret
inc
sub
adc
fldenv
stos
xchg
lcall
xchg
lret
and
add
xor
push
xchg
rcrl
xchg
jle
jne
and
test
scas
mov
fisubs
push
lock
lods
xchg
xor
popf
sub
gs
inc
les
data16
mov
mov
xor
jno
mov
xor
jnp
fidivl
popf
mov
arpl
inc
cld
not
adc
jb
arpl
pop
jecxz
xchg
jmp
dec
test
sar
mov
inc
jb
jae
push
data16
std
lods
inc
mov
sbb
loopne
lea
mul
das
test
xchg
inc
dec
mov
cmp
pop
movsb
aad
inc
mov
or
jecxz
fdivl
dec
mov
call
cmpsl
push
cmp
push
add
int
mov
xchg
push
inc
sub
test
ror
rorb
cmp
mov
jns
push
aas
dec
adc
xor
add
insb
dec
int3
and
shlb
shlb
aam
or
stc
or
jge
mov
and
mov
mov
cmp
movsb
inc
dec
xorl
cs
ror
jb
jl
or
mov
jnp
jge
jne
fistpl
mov
lahf
fbld
jge
dec
bound
xchg
jp
ffree
jle
leave
mov
mov
mov
daa
stos
fsubl
mov
mov
mov
and
lds
shr
pushf
push
xchg
and
mov
jae
pop
add
sbb
and
pop
ljmp
cs
pop
aad
mov
push
inc
pop
mov
imul
imul
fisttps
insl
jmp
leave
mov
cld
pop
inc
xchg
or
jl
xchg
xchg
cmp
jl
sbb
adc
lock
mov
in
outsb
dec
cmp
shll
xor
push
and
insb
push
insb
xor
scas
and
out
cmp
mov
movsl
and
movsl
jecxz
push
mov
inc
inc
mov
lret
mov
repz
js
and
inc
jmp
jecxz
cmp
sahf
pop
and
inc
mov
pop
push
pusha
or
fsubl
and
sub
test
jns
mov
push
int
jp
pop
int3
dec
xor
inc
sti
jl
negb
in
dec
imul
pop
mov
ds
add
mov
push
movsl
push
inc
xchg
stc
enter
xchg
xchg
inc
push
sub
aas
push
sub
fdivrp
sbbb
cld
mov
into
push
adc
inc
adc
int
sub
add
jecxz
ds
sbb
test
mov
mov
std
jl
arpl
and
das
sbb
jae
adc
xchg
leave
nop
adc
adc
cltd
cli
nop
imul
popa
lock
hlt
int
pop
or
in
lret
jns
add
mov
out
push
repnz
push
mov
std
jp
push
mov
mov
loop
les
adc
push
dec
ljmp
cmpsl
mov
lahf
andl
sub
push
mov
frstor
daa
mov
xchg
jns
add
and
insb
push
mov
aas
sbb
jmp
cmp
push
in
lret
jmp
js
ffree
sahf
lods
and
int
ja
aad
gs
rep
dec
repnz
mov
lea
xchg
or
jnp
sub
jmp
jo
cmp
push
test
sub
testl
jmp
lock
xchg
fcoms
pop
stos
nop
int3
lcall
push
dec
sahf
sub
mov
push
sar
mov
xchg
xchg
sub
aaa
xchg
mov
adc
mov
mov
hlt
aam
cmp
sar
lcall
test
mov
pop
inc
pop
inc
push
sub
cmpsl
cmp
or
out
test
lcall
jbe
push
aad
push
cmp
lock
aad
aaa
rcll
pop
mov
xor
push
inc
cmp
jbe
pop
mov
xor
dec
repnz
movsl
out
push
jbe
fs
stc
or
std
dec
add
mov
call
movsl
xchg
movsl
bound
int
pop
lock
adc
mov
pop
push
ss
push
xchg
xor
je
dec
out
push
mov
sbb
out
xor
ljmp
cmp
sub
jns
or
jl
rcll
outsl
mov
xor
out
dec
stc
test
scas
arpl
mov
aam
test
aaa
cmc
test
push
xchg
call
and
xchg
pop
in
aad
sub
ss
adcl
pusha
sub
sbb
or
cmp
xchg
or
fs
fisttpll
loope
jp
jp
mov
dec
sub
je
test
adc
sub
lds
ss
xlat
mov
sbb
iret
js
flds
ret
xchg
xchg
mov
mov
ljmp
cli
pusha
pop
add
mov
add
out
lods
shlb
pop
mov
xchg
movsb
pop
mov
adc
sbb
cmp
pop
xchg
xor
cmp
mov
out
jmp
int3
cmp
xchg
das
rcl
sub
or
movsb
adc
scas
outsb
scas
mov
in
aam
addr16
inc
and
dec
sub
jnp
dec
pop
xchg
movsl
loopne
lret
inc
jge
mov
outsb
out
or
or
jne
mov
xchg
int
les
out
rorb
mov
negb
hlt
notl
mov
in
push
pop
mov
aad
dec
mov
push
push
xchg
stos
xor
ds
lods
mov
xor
addr16
jb
jae
xlat
xchg
adc
sti
pusha
inc
bound
hlt
ss
out
pop
xor
js
mov
das
ds
mov
sub
pushf
and
mov
pop
addr16
outsb
mov
and
shr
fiaddl
mov
stos
imul
lds
sahf
fldl
lods
cwtl
outsb
add
xchg
sub
and
xlat
pop
mov
or
scas
cwtl
insl
jae
out
ja
in
sbb
scas
int
dec
call
pop
cld
cwtl
xchg
push
xchg
addr16
ljmp
out
mov
cwtl
iret
jle
dec
mov
rcl
test
push
mov
sti
shll
insb
test
and
xorl
jae
sbb
sarl
pop
test
jnp
ljmp
cmovb
mov
xor
push
lret
lds
jno
xchg
mov
xchg
test
test
sub
jle
cld
and
mov
push
ret
cld
dec
adc
jl
mov
cmpsl
repz
xchg
mov
dec
je
enter
mov
cmp
dec
mov
dec
pop
in
ja
in
jns
repz
mov
ficoms
jo
es
jne
push
jecxz
push
outsb
cmc
fs
cmp
rcll
jle
fcmovb
or
fnstcw
dec
jle
sbb
in
sbb
out
push
dec
push
shrl
cmp
insl
add
mov
fs
or
pop
sub
mov
cmpsl
or
and
out
adc
fnstcw
scas
movsb
movsb
xchg
movb
pop
jbe
clc
test
shrb
out
pop
xor
adc
sbb
dec
cld
mov
lods
out
adc
jb
sub
repz
mov
push
scas
in
and
jl
xor
cmc
popf
adc
cli
jo
dec
mov
jge
lock
lock
lahf
sub
iret
jne
sub
dec
leave
movl
push
sbb
shrb
fsubrs
or
lea
cmpsb
adc
or
ja
cmp
pop
or
jmp
mov
jns
imul
or
xor
adc
mov
rolb
lret
js
je
jns
cli
loopne
and
xchg
jb
test
sar
addr16
cmp
mov
mov
sbb
leave
jle
inc
fildll
fnstenv
dec
mov
lods
scas
push
cs
adc
cmc
mov
hlt
adc
or
sub
push
loopne
jecxz
sub
pop
sahf
movsl
js
aaa
adc
std
dec
dec
jmp
movsb
xor
mov
bndstx
mov
arpl
cmpsl
dec
out
imul
daa
or
and
movsl
sub
ret
pushf
sahf
mov
ja
or
push
loope
pop
dec
int
notl
add
mov
dec
sbb
dec
push
shlb
adc
je
data16
or
jecxz
pop
add
pop
outsl
dec
jp
inc
xchg
pop
outsl
pop
and
and
out
aam
inc
jno
nop
repz
pop
insl
xchg
dec
out
rclb
js
aam
andl
fisubrl
pop
sbb
mov
cmpsl
dec
ret
ss
inc
jg
mov
jmp
fadds
xchg
mov
xchg
popa
adcb
aam
jg
cmp
xchg
or
jle
adc
mov
xor
inc
xlat
add
push
cwtl
fnstenv
adcb
mov
js
sbb
mov
int
and
pop
push
in
mov
jne
lret
mov
inc
loop
test
adc
sti
fs
push
jb
sub
pop
out
jp
js
insl
movsl
in
movl
jnp
faddl
xchg
mov
rorb
xor
and
test
lahf
add
call
mov
js
mov
push
lea
or
loope
scas
or
call
pop
dec
pop
notb
addr16
xor
jno
jl
leave
mov
sub
sbb
dec
fidivrs
push
mov
jno
jnp
dec
daa
arpl
mov
cs
in
dec
push
or
dec
cltd
movsl
jne
seta
popa
gs
rorb
outsb
fmuls
push
and
add
lods
imul
dec
cld
sbb
loop,pn
pushf
adc
add
addl
pushf
cld
lcall
xchg
fisttpl
arpl
arpl
cwtl
jns
dec
dec
jno
or
js
xor
jge
mov
and
dec
sbb
test
lds
mov
mov
xor
sahf
mov
mov
in
pushf
xor
sbb
mov
jecxz
and
in
jg
add
je
inc
int
inc
or
cmpsl
jge
push
sub
outsb
mov
loop
adc
pop
je
pushf
mov
mov
int3
sar
add
das
mov
push
repnz
call
in
cmp
cld
lock
call
jmp
out
outsb
sub
push
test
dec
xchg
ficompl
and
or
mov
out
mov
in
jle
adc
fimull
adc
out
jne
adc
push
js
ljmp
push
sahf
mov
fwait
ja
cmp
imul
aam
lods
mov
mov
dec
sub
adc
xor
or
test
adc
loope
dec
jnp
or
ss
add
pop
in
add
or
jb
inc
add
mov
push
dec
incb
xlat
in
stos
loop
xchg
jecxz
imul
jno
nop
loop
and
repz
cli
and
sti
loop
push
sti
cld
jl
lret
stos
jge
fstpt
data16
xor
and
mov
mov
xchg
or
loope
dec
das
cmpsl
jge
lret
xor
or
std
mov
scas
jno
push
test
jg
xor
xchg
cmp
xchg
adc
cmp
ja,pn
push
jns
xor
sub
enter
xchg
lock
cli
sbb
mov
nop
sahf
push
in
daa
add
dec
dec
or
push
dec
xor
mov
outsl
sub
idiv
jne
pop
add
and
sbb
mov
mov
sti
push
sbb
sbbl
pop
enter
stos
je
adc
push
imul
dec
sub
adc
inc
cld
inc
mov
adc
roll
pop
clc
addr16
push
push
ret
aam
mov
ss
add
xor
enter
js
jno
cld
xchg
in
aas
mov
test
xchg
pop
sahf
pop
outsb
fwait
sbb
push
icebp
and
cmp
push
xor
lods
repz
push
or
sti
mov
rcl
loop
popa
push
add
das
pop
push
mov
stos
mov
andl
push
test
stos
mov
pop
lret
mov
pop
pop
pop
lock
pop
pop
sbb
add
and
ret
lods
jae
fmuls
and
call
push
rorl
add
loopne
mov
fisttpll
iret
cmp
push
rcrb
movsb
and
mov
out
cli
sbb
jp
jns
xor
xchg
lahf
ss
lods
in
mov
pop
jno
xchg
iret
clc
aaa
pop
sub
mov
scas
sti
hlt
jp
cltd
xor
or
mov
into
pop
cmp
and
or
std
and
push
jns
mov
push
inc
cmpsb
mov
add
out
cli
xchg
cmpsb
jo
repnz
imul
jb
inc
mov
pusha
jmp
jl
sbb
out
lods
push
popl
ret
and
sub
in
pusha
insl
push
xor
sub
in
loopne
hlt
mov
mov
test
push
insl
inc
hlt
mov
dec
addr16
push
cli
pop
mov
sub
push
into
addr16
rcrb
mov
mov
cmpsl
jp
dec
xchg
shll
pusha
shl
lret
lea
cmc
xorb
call
pop
adc
scas
imul
stos
xchg
jnp
cmp
mov
and
inc
arpl
outsb
inc
adc
movsl
xor
inc
sbb
sbb
aam
aaa
mov
ret
test
in
or
pop
sti
icebp
sbb
jle
fdivrs
sti
cltd
test
pop
xchg
mov
lods
negb
fcompl
int3
xlat
xchg
mov
fsubs
fistpl
std
in
ret
aam
push
and
add
cmp
inc
jb
cld
fisttpl
outsl
in
ds
in
push
adc
pop
shll
mov
sbb
popl
in
or
pop
dec
fstl
mov
mov
jno,pn
call
scas
out
repnz
sub
je
cmp
fsub
xor
test
cld
int
repz
aam
jnp
out
lret
dec
xchg
xor
push
mov
popa
mov
mov
mov
pop
lcall
inc
mov
scas
addr16
adc
mov
pusha
dec
dec
fnsave
mov
scas
pop
mov
jge
jns
aam
or
jnp
clc
shl
cmc
popf
in
push
push
jns
sub
lea
xchg
or
dec
jnp
xor
mov
mov
dec
xchg
xchg
aaa
into
jmp
or
inc
sub
repnz
cmpsl
cltd
inc
daa
test
dec
das
jg
jbe
scas
mov
mov
lret
and
fwait
test
inc
pop
cmp
loope
xor
pushf
int
into
or
insb
mov
pop
sarb
push
mov
mov
xchg
jae
inc
daa
leave
mov
xor
inc
push
add
hlt
in
mov
jne
jg
loope
scas
bsf
or
es
cwtl
das
iret
push
stos
adc
out
ret
mov
ret
xchg
push
dec
mov
jae
scas
push
loop
mov
pop
push
jg
adc
adc
pushf
les
xor
dec
shl
jae
mov
lock
je
mov
mov
stc
xorb
sbb
dec
int3
or
mov
mov
adc
jno
sub
data16
inc
jne
cwtl
test
fs
fwait
imul
xor
mov
inc
push
cltd
loope
insl
sbb
stos
in
xlat
js
adc
in
xchg
push
mov
sbb
mov
out
popf
or
loope
add
sbb
sub
nop
mov
push
cmp
push
mov
add
stos
jmp
jmp
push
mov
cltd
cmp
cltd
fucom
aas
mov
pop
loop
int
stc
adcl
mov
out
add
lods
xchg
pop
push
pop
and
ret
cwtl
test
dec
js
pop
mov
jns
movsl
pushl
mov
xor
mov
movsl
and
mov
mov
mov
pop
push
sbb
or
lods
inc
mov
arpl
packuswb
jp
jo
pop
or
std
inc
mov
or
push
mov
mov
cld
sub
jbe
repnz
stos
ss
pop
imul
test
pop
dec
ljmp
ret
jmp
inc
hlt
or
fs
add
rcr
orl
cld
roll
hlt
out
pusha
and
into
cmp
ss
out
mov
or
jmp
fcomi
jne
rcll
addl
xor
xchg
push
loop
xor
and
shlb
mov
addr16
or
fstpt
inc
mov
mov
mov
jecxz
xchg
movsb
loop
jb
fstl
jae
pop
push
dec
jne
and
sti
add
iret
ljmp
adc
aas
add
jnp
mov
inc
pushf
pop
loop
or
data16
add
dec
xor
sub
or
push
fwait
pop
ds
out
scas
jno
inc
inc
cmpsl
adc
aaa
pushf
sti
adc
popf
aas
movsl
push
xchg
jp
push
jp
pusha
shr
lret
dec
add
adc
jle
negb
hlt
jns
add
ret
ret
inc
fbld
sub
jno
test
in
adc
jns
mov
movsb
xor
and
aaa
pushf
out
loope
jmp
add
cli
insl
in
push
and
push
push
in
in
mov
xor
aaa
xchg
in
cmp
aad
inc
jae
into
pop
out
lods
push
xchg
cmpsl
mov
in
fildl
xchg
xchg
mov
std
jmp
adc
mov
scas
lret
cwtl
call
sahf
pop
int
andl
fiadds
pop
ja
xor
and
mov
int3
ret
or
xchg
dec
movsl
subl
adc
inc
add
loopne
mov
mov
in
pop
xor
add
mov
cmpsl
xchg
mov
adc
pop
in
and
mov
and
loopne
pop
jl
stos
xchg
shrl
xchg
fwait
js
dec
cmp
stc
jo
inc
std
sbb
sahf
pop
jne
movzbl
xchg
fidivrl
movsb
mov
cmp
or
add
or
push
test
lods
mov
mov
pop
inc
arpl
fs
mov
jp
pop
popf
cmp
sbb
and
call
ja
das
mov
call
xchg
xor
cmp
call
fidivrs
and
sub
daa
mov
cwtl
inc
jle
adc
lahf
sub
or
cwtl
jno
std
nop
push
iret
inc
mov
movsl
dec
dec
xchg
cmp
adc
inc
daa
pop
std
xchg
lahf
cmpsl
jno
push
add
inc
stos
insb
hlt
clc
ss
fwait
js
inc
lret
push
in
adc
rol
fnstenv
jge
and
adc
xlat
negl
xor
pop
push
or
mov
in
lea
movsb
sub
adc
cltd
sub
jle
dec
adc
fists
mov
dec
dec
icebp
cltd
cmp
push
xchg
ror
pop
mov
adc
mov
inc
inc
jmp
idivb
inc
and
xor
and
call
inc
cmp
xor
pop
mov
or
jmp
arpl
imul
push
iret
dec
xor
out
popf
mov
pop
fisubs
je
out
mov
mov
js
outsl
pop
cmpsl
jbe
loopne
jae
add
mov
or
loope
mov
jae
mov
mov
in
inc
data16
into
mov
and
dec
or
xor
push
inc
enter
or
sbb
cmp
rorb
push
imul
gs
mov
dec
rorb
sub
jb
add
sbb
push
imul
repnz
loop
cwtl
mov
xor
lret
and
movsb
mov
inc
and
mov
mov
or
int3
out
inc
push
fldt
and
clc
xor
sahf
pop
repz
xor
adc
popa
push
enter
xchg
inc
ret
jle
jae
stos
cmp
popa
push
mov
mov
push
fldt
orl
push
es
adc
fiadds
push
push
jp
inc
lret
cmp
out
lret
dec
ds
sahf
mov
fdivrs
xor
push
in
in
cld
mov
test
popa
aam
fldt
fiadds
xchg
rol
int3
mov
shrl
adc
and
sub
pop
xchg
xor
popa
sbb
inc
inc
int3
xchg
mov
out
xchg
icebp
mov
push
xor
mov
daa
movsb
inc
push
std
aas
mov
aas
test
faddl
mov
out
mov
pop
xchg
scas
rorl
jno
inc
inc
fldcw
sub
insb
jle
mov
cmp
std
jno
aas
dec
mov
lds
add
and
out
jns
and
sbb
jmp
sbb
cmp
inc
mov
mov
cld
gs
es
cmp
push
cltd
jp
add
mov
mov
inc
jno
clc
inc
mov
shrb
lods
mov
mov
mov
lret
aaa
or
iret
mov
jne
push
stos
jns
pushf
sar
xor
sbb
popf
push
adc
test
in
fstpl
dec
std
push
cld
cmc
xor
scas
sbb
xor
fsubrs
xchg
fsubrl
jl
cmp
mov
mov
or
enter
sbb
inc
sbb
enter
ret
out
shll
cmc
and
aas
add
fstps
lds
jnp
xor
inc
jns
push
mov
push
dec
stc
mulb
cmp
das
cmp
cmp
cmp
mov
sub
mov
fcomps
adc
add
xchg
stos
jb
insb
push
jmp
mov
jne
lods
sub
or
pop
negl
jo
ja
cmp
sti
sub
mov
scas
bound
lcall
call
mov
aaa
ret
mov
jno
jnp
sbb
arpl
scas
fwait
scas
jne
fisubl
mov
cmp
nop
jg
pslld
fs
add
mov
sbb
cltd
jl
jnp
dec
push
sti
fwait
bound
rol
sub
and
lock
add
push
push
push
pop
jae
stc
sub
xchg
mov
cmpsl
stos
std
sbb
push
sub
mov
adc
or
rol
cmpl
jecxz
push
sub
push
inc
popf
aad
inc
lret
dec
mov
pop
bnd
aas
or
fdivrs
xor
adc
mov
push
rcr
in
lret
dec
sub
or
mov
imul
inc
or
mov
cmp
mov
sbb
out
mov
and
mov
shll
loop
fsts
arpl
push
data16
fcoml
inc
xchg
mov
cmp
pop
sub
outsl
xor
mov
dec
inc
cmp
or
scas
mov
insl
lcall
cmp
push
int3
push
jl
leave
mov
aad
pop
sub
jmp
std
adc
cmp
xor
movsl
into
icebp
push
outsl
out
or
fs
dec
stos
jno
xor
lret
fcoms
push
xor
jne
test
daa
testb
inc
fisttps
and
and
test
loopne
cmp
or
xor
arpl
pop
jge
and
popf
pop
xor
push
lods
xor
ret
inc
cs
inc
rcr
and
call
and
arpl
out
outsb
divl
stos
cld
mov
xchg
adc
add
leave
jp
loopne
dec
sti
and
jae
or
ss
es
jns
xor
stos
xchg
mov
mov
aas
outsb
sub
aad
pop
loopne
movsl
push
jle
hlt
xchg
stc
add
inc
and
adc
sti
mov
xchg
cmc
les
jle
fisttps
sub
iret
dec
jle
add
insb
lds
adc
movsb
xchg
jecxz
xchg
aas
mov
pop
shrb
clc
dec
jl
fst
hlt
mov
bnd
xlat
nop
les
or
mov
xor
xor
jb
lret
or
jae
jb
loope
cmp
out
cmc
push
mov
lahf
in
out
pop
pop
pop
sbb
adc
ja
xor
pop
lahf
jbe
push
fwait
pop
insl
sbb
inc
data16
dec
jle
testb
mov
and
int3
cmp
cmpsl
pop
jns
call
cmp
rcrb
inc
fisttps
mov
js
cmp
in
in
cmpsl
fs
cmp
loope
dec
or
push
cmp
dec
xor
adc
mov
in
negl
daa
jecxz
and
fstps
mov
outsl
push
xor
cld
push
jns
mov
xor
insb
add
shrb
pushf
adc
and
mov
pop
repnz
adc
or
shll
out
mov
push
int3
adc
fistpll
imul
test
shr
jmp
cmovl
cmp
jo
test
pushf
and
outsl
mov
jecxz
add
push
pop
out
push
std
fdivr
ja
adc
jecxz
mov
mov
jo
imulb
mov
mov
clc
inc
add
sub
iret
push
xchg
dec
imul
mov
es
cmp
mull
out
lahf
jnp
mov
inc
push
scas
stos
and
adc
sti
addr16
or
cwtl
pop
in
aas
loop
es
hlt
aas
mov
cmp
in
pop
push
jge
sbb
mov
int
mov
data16
lahf
bound
sbb
xchg
clc
sbb
cmc
or
fwait
rcrl
subb
idiv
jbe
mov
popa
add
push
mov
call
push
in
fdivr
aaa
push
cmpb
cld
stc
inc
ror
mov
aas
jae
lods
test
outsl
xor
or
adc
cmp
cmp
pop
sbb
pop
mov
shll
pop
pop
xor
mov
mov
in
test
ja
in
or
cs
fildl
push
aas
fdivrs
add
rclb
out
mov
sub
adc
or
or
lods
aaa
adc
stos
das
rcll
cmp
clc
jne
fwait
add
sub
clc
dec
jl
dec
jne
std
mov
lds
or
pop
das
pop
stos
insb
scas
sbb
mov
mov
mov
adc
pop
fldt
mov
xor
sti
aam
and
mov
and
int
jmp
or
cs
xchg
and
and
out
sbb
stc
xchg
dec
popa
or
dec
xor
xor
fmull
loop
mov
lret
pop
sub
mov
fwait
push
cltd
js
paddw
pusha
outsl
ljmp
inc
jbe
shld
adc
cmp
stos
or
mov
or
inc
ja
fidivs
pop
jb
aad
lahf
inc
scas
testb
pop
and
push
xor
cmpsb
dec
mov
test
jmp
repz
jge
sbb
sarb
mov
jbe
jae
sbb
int
or
imul
stos
sar
fwait
int
cli
jl
pop
scas
outsb
inc
sbb
gs
mov
jne
mov
adc
xorl
stos
fs
lret
cmp
pop
stc
cmp
xor
cmp
das
adc
lcall
mov
xchg
lock
and
repnz
mov
imul
das
inc
adc
jle
jne
cs
lods
das
jo
xor
not
lcall
dec
fnstsw
pop
roll
test
sarb
jnp
pusha
mov
vmwrite
jmp
or
or
push
cs
call
pop
test
out
sti
jge
das
mov
data16
jb
pop
mov
pop
fs
jle
jmp
icebp
ss
sub
mov
cmp
mov
inc
mov
fiaddl
inc
or
daa
xchg
xor
ljmp
xchg
adc
jg
cld
dec
andb
popw
aad
xchg
xor
cmp
push
movsb
push
jl
outsb
and
out
mov
lea
mov
or
movsb
lea
enter
mov
orl
aaa
mov
push
mov
push
sbb
cmc
cmp
jmp
or
add
scas
cld
pop
mov
sub
pop
fistps
js
adc
push
out
fisubs
add
push
nop
jl
xor
jg
mov
clc
stos
loop
divb
cmovne
test
push
inc
push
les
cmp
jge
mov
in
scas
xchg
push
icebp
xor
lahf
push
popf
push
scas
in
push
add
jne
inc
in
pop
repz
insl
cmp
pop
in
cmp
movsl
pop
dec
push
push
in
cld
mov
and
lret
mov
push
jl
sub
mov
mov
loope
sahf
xchg
pop
dec
es
dec
mov
adc
jge
pop
fcoms
pushf
mov
xchg
sbb
push
mov
scas
or
pop
ud2
xor
hlt
out
lcall
ljmp
out
cmp
pop
mov
or
cld
jae
sub
mov
adc
stc
movsb
pop
aam
sbb
in
outsl
and
fucomp
popa
xchg
loop
and
sar
shl
mov
ret
inc
stos
in
in
rcll
cmpsb
decb
mov
movl
adc
xor
pop
stos
rcr
mov
xor
dec
or
iret
ds
movsl
push
sbb
push
pop
fs
cmp
xor
cmp
popf
lea
inc
cmp
sub
aas
or
fdivl
aam
jb
mov
push
int3
int3
test
stc
sahf
push
das
xor
movb
insb
mov
imul
rorl
sub
pushf
mov
jbe
mov
rol
adc
daa
xchg
xor
icebp
stc
das
dec
cmp
mov
arpl
xor
out
cwtl
loope
adc
pop
insl
push
mov
inc
cltd
xchg
push
hlt
and
sbb
lods
out
shrb
cmp
pop
push
cmc
jnp
sbb
out
aaa
jmp
out
mov
cmpsl
loopw
movsb
dec
in
adc
adc
inc
call
fsubr
cmp
popf
in
jo
add
pop
xorl
mov
push
fwait
lds
add
cmp
out
or
add
push
imul
sti
dec
aaa
push
add
fadds
dec
nop
xadd
cmp
incb
inc
or
xor
in
lea
arpl
mov
adc
jne
cmp
jb
mov
outsl
xchg
and
out
push
push
ja
push
cmpsl
dec
jle
rcrb
dec
mov
xchg
push
es
lret
xchg
fsubs
xchg
sub
and
sbb
and
clc
cmp
jbe
loope
ficomps
jne
in
inc
mov
sub
out
adc
je
testb
or
dec
dec
adc
lock
loopne
rcrl
push
das
and
into
lahf
sub
add
dec
xchg
or
lds
xor
add
aas
mov
mov
ljmp
movsb
ret
jecxz
inc
loop
sbb
iret
cmpsb
adc
adc
mov
loope
sub
add
dec
push
push
jle
inc
and
scas
hlt
stc
mov
adc
daa
dec
je
sub
aaa
arpl
stc
sbb
movb
shrl
das
xchg
xchg
sar
dec
rorl
das
mov
xchg
and
mov
jecxz
lods
ds
sbb
jb
mov
aam
cmp
mov
jmp
xlat
inc
andl
imul
xlat
stos
popf
jmp
lcall
aad
jge
pop
sub
mov
adc
lock
xchg
cmp
call
lcall
movsb
and
pop
or
cmpsb
fnsave
inc
or
and
lods
cmp
sbb
xorl
shl
sbb
fwait
cmp
xor
xchg
sbb
xchg
jne
mov
rclb
subb
cmp
jmp
sub
cmp
or
mov
lea
jle
out
xchg
ja
sbb
es
xchg
pushf
daa
aad
xchg
mov
sbb
xor
dec
add
add
add
cmp
jnp
loope
movsb
inc
jmp
rcll
test
xor
xor
or
inc
add
xchg
inc
add
cmp
orb
cmp
arpl
fidivrl
lea
ss
fldz
inc
and
fnstcw
push
lock
or
adc
pop
or
fcomps
imul
and
stos
fnsave
xor
lock
pushf
jne
pandn
jns
add
lahf
dec
das
mov
mov
jmp
pop
repz
popf
loopne
push
cmp
call
stos
ret
pop
ds
vpackssdw
fs
daa
aaa
cmp
push
cmp
aad
daa
sbb
mov
in
clc
sub
adc
aas
clc
outsb
inc
or
lret
xor
test
lock
cmp
pop
adcb
out
movsb
movsl
mov
xor
mov
out
stos
or
sub
stc
adc
xchg
lcall
leave
fadd
lahf
xchg
add
cmp
push
xlat
and
xorb
sbb
xchg
mov
into
cs
movsb
aad
cmc
dec
incl
jbe
push
inc
fsubrs
roll
mov
shll
mov
lods
add
or
push
pop
lar
sub
mov
jns
fadd
outsl
mov
lds
stos
nop
cmp
stc
cmp
push
cmpsb
fldln2
xor
and
rcrb
movsb
insl
repnz
mov
add
jle
orb
mov
add
imul
cmp
das
jp
mov
ja
insb
in
inc
aas
pop
js
test
lea
lret
mov
dec
lea
and
lods
loope
je
inc
stos
arpl
ds
add
aas
pop
mov
jb
xchg
sbb
mov
jae
mov
rcl
jo
cmc
pop
ret
or
sub
adc
inc
hlt
dec
ds
fnsave
ret
sub
mov
inc
push
add
jl
sub
shl
pmovmskb
xor
aam
test
in
out
pop
movl
mov
not
std
lea
sbb
bound
cmp
mov
imul
test
dec
jl
xlat
cmp
mov
call
negb
sub
and
lods
adc
xor
cmp
aas
push
cli
dec
and
xchg
mov
sbb
cmc
bound
pushf
push
mov
mov
addr16
clc
and
in
jp
incl
outsb
cmp
mov
je
das
cwtl
xchg
in
jb
jg
mov
inc
lds
out
clc
sbb
adc
add
mov
rclb
test
push
xchg
pusha
comiss
popf
dec
popa
inc
andb
mov
sub
push
pop
enter
mov
enter
mov
sbb
cmpsl
repz
add
insl
xlat
adc
das
sub
jo
mov
pop
ljmp
sub
imul
stos
fs
cwtl
cmpl
pop
andl
cmp
jnp
mov
scas
mov
xchg
inc
pop
call
mov
imul
sub
mov
pop
push
fs
push
jb
mov
push
movsl
dec
hlt
dec
testb
popa
dec
inc
idivl
jb
xchg
xchg
push
rclb
xor
movsl
xor
jge
mov
leave
inc
xchg
add
and
push
jmp
jmp
mov
xchg
and
mov
xor
lret
out
pop
jecxz
ljmp
je
sbb
adc
jmp
jo
xor
jp
mov
outsb
hlt
es
call
cwtl
dec
pop
arpl
loop
fstpt
mov
stos
std
call
out
lock
cmc
cmp
and
inc
addl
add
testb
pop
jb
negb
pusha
mov
popf
daa
aaa
jnp
xchg
or
xchg
es
das
add
jno
dec
jl
test
sbb
add
daa
addl
lock
inc
fsubrl
gs
sub
mov
jl
insl
dec
or
jne
lret
inc
enter
push
mov
jmp
cli
scas
lods
out
xchg
fs
loop
push
lods
negl
sbb
das
out
loop
stc
adc
sub
inc
lock
mov
xor
ja
adc
lret
loop
fstpt
add
in
push
adc
inc
dec
push
adcl
xchg
mov
inc
mov
les
add
add
outsb
test
jp
subb
insb
dec
enter
xchg
push
mov
inc
outsl
shrb
xchg
lret
aaa
sbb
dec
ja
pop
insl
push
add
movsb
push
in
mov
and
mov
sbb
fdivs
repnz
aam
shrl
xchg
cmp
push
sub
imul
fcmovnb
fs
fcompl
push
std
dec
sbb
inc
loop
addl
push
mov
stos
push
mov
rcrl
fisttps
ja
frstor
push
inc
mov
daa
ficoml
xor
daa
ja
call
dec
jmp
pop
dec
lods
repnz
dec
lods
add
mov
imulb
fs
fisttpll
sbb
ficomps
outsl
sub
ljmp
mov
mov
movsl
push
dec
cmpsl
mov
pop
fildll
out
mov
dec
pushf
sub
sbb
jecxz
dec
add
inc
pop
or
pop
pop
push
test
jne
pop
mov
push
xchg
and
jb
stos
add
xchg
push
out
xlat
in
push
push
or
add
lods
dec
lock
pushf
cs
inc
mov
inc
adc
inc
cmpl
aaa
leave
mov
cwtl
jbe
cli
mov
js
push
int3
scas
das
loope
dec
dec
sbb
es
xchg
test
mov
and
fists
push
into
mov
sbb
add
lcall
dec
fs
mov
inc
and
out
mov
call
lds
sti
shll
loop
ds
daa
sub
cmp
leave
icebp
sbb
jp
sub
add
stc
xchg
test
jge
mull
adc
int3
dec
lret
xchg
dec
cmp
je
jp
shlb
in
ljmp
adc
lods
sbb
subb
adc
push
in
and
jle
xor
cmp
mov
jb
scas
movsb
mov
inc
jns
fists
mov
movsl
test
hlt
out
cmp
insl
shlb
ds
sbb
insl
mov
vmovaps
pop
stc
jecxz
in
inc
ja
cld
cmpb
cmc
sub
lods
out
aam
adc
pop
pop
adc
mov
insb
xor
sbbb
std
iret
pop
xchg
add
xchg
movsl
jbe
sub
into
idivl
jbe
jge
cmpsl
push
outsl
mov
pop
mov
fiaddl
pop
jp
adc
push
scas
push
add
sub
lahf
mov
imulb
and
mov
inc
xor
pushaw
mov
in
add
imul
mov
xchg
popf
lret
mov
sub
outsb
lea
dec
divb
adcb
push
loope
popf
push
sbb
jl
push
das
mov
rorb
inc
fcompl
adc
push
dec
and
dec
mov
pop
add
add
push
mov
xor
aas
sub
add
mov
dec
jl
out
xor
mov
cwtl
add
call
mov
aaa
fcmovnb
movsb
xchg
ljmp
or
rorb
dec
add
adc
fidivrs
nop
inc
mov
jmp
xor
adc
add
mov
in
xchg
cmpl
and
cmp
iret
pushf
das
sub
add
cli
xor
and
ret
idiv
pusha
ss
sti
lods
cmp
push
add
and
cmp
mov
pop
mov
repz
mov
adc
repz
scas
mov
lret
push
scas
andb
mov
shrl
push
sti
push
xchg
test
lret
xlat
out
icebp
jmp
xor
pusha
dec
add
push
cs
sbb
leave
xchg
sti
push
push
shrb
and
pop
mov
add
or
imul
mov
pop
xor
sarb
nop
addr16
lock
js
push
scas
cmp
cmpb
adc
xchg
add
shrb
lret
pop
movsb
mov
or
in
mov
pop
shll
pop
gs
ret
pop
stos
or
dec
icebp
mov
pop
dec
and
mov
cld
inc
jne
add
adc
add
pop
xlat
and
out
fisubs
jne
inc
xor
cli
jns
lds
cmp
out
jns
xchg
fadds
and
jns
xchg
addr16
sbb
mov
ret
add
iret
stos
and
outsl
lds
inc
push
sub
ljmp
and
xor
xor
ds
push
in
jnp
fwait
dec
rclb
inc
inc
fnstcw
adc
imul
ds
popf
iret
int
or
add
push
jns
mov
inc
inc
jecxz
aas
sbb
xchg
adc
mov
sbb
add
stos
stc
cli
mov
jp
dec
mov
pop
sub
adc
je
sbb
pop
push
mov
faddl
xchg
sbb
mov
in
xcrypt-ctr
cmpsl
sbb
ja
cltd
push
sub
inc
lock
repnz
jl
pop
mov
inc
sbb
stc
lock
dec
mov
ror
popf
data16
fwait
xchg
hlt
or
ret
sbb
flds
mov
push
std
in
test
call
xor
mov
sub
add
mov
outsl
and
adc
rcr
mov
pop
mov
mov
jns
pushf
mov
pop
jl
lods
leave
movl
out
cwtl
cmpsl
cli
xchg
int
mov
mov
frstor
inc
or
xchg
adc
popf
mov
ljmp
jl
call
jmp
cmpsb
mov
rorl
sub
andl
icebp
je
and
out
jb
xor
cs
addr16
jae
sub
sbb
jnp
imul
push
out
bound
nop
maskmovq
negl
rorl
push
hlt
jo
ljmp
inc
jb
shll
out
pop
aaa
cs
mov
cmp
add
cmpsb
mov
jno
shrl
shr
in
inc
data16
or
jne
mov
xor
dec
sub
xor
mov
xor
out
sub
hlt
repz
arpl
cli
loope
pop
mov
es
pop
test
movsb
or
lds
pop
adc
cmp
xor
push
out
stos
and
push
xchg
push
xchg
aas
into
push
mov
add
ret
mov
mov
clc
xchg
lret
loopne
xorb
add
subl
fsubrs
ret
pop
jns
mov
inc
mov
cmp
jmp
subb
cld
sbbl
js
loope
aam
int
sarl
sahf
jnp
sub
mov
cmpsl
jg
das
out
push
push
sub
xchg
cmp
jae
sarl
mov
repz
mov
dec
cmpsl
test
sub
arpl
inc
int3
mov
jg
faddp
inc
pop
pop
mov
mov
insl
ljmp
jbe
mov
insl
out
inc
and
scas
mov
jno
jmp
in
sub
leave
cli
test
sti
push
sti
test
out
aas
addb
xor
jne
roll
cs
jge
gs
adc
popf
rorb
pop
push
icebp
push
push
pop
rorb
sarb
pusha
ds
pop
scas
adc
decb
fs
sub
fldl
and
xlat
cmp
and
cld
or
cld
pop
les
or
adc
fxch
cld
push
loope
cmp
sahf
mov
dec
test
movsl
ja
cmpb
mov
cmp
mov
xor
dec
inc
icebp
enter
jmp
adc
mov
xchg
jae
and
inc
cltd
sbb
call
xchg
bound
inc
out
or
jge
lods
dec
sub
ret
rcrb
in
or
xor
dec
mov
mov
push
popa
out
gs
and
ja
ret
jl
and
or
or
xor
ljmp
lcall
push
jl
stos
fcomps
popf
movsl
data16
pop
lock
xchg
stc
mov
xchg
insl
sbb
aaa
pop
sub
mov
xchg
imul
cwtl
loopne
sbb
test
jge
cmp
and
add
push
push
outsb
out
and
aas
js
lret
mov
sbb
inc
cmp
aaa
or
and
int
nop
cmp
push
ret
adc
fmuls
mov
jnp
push
ret
or
popa
mov
insl
out
icebp
jbe
gs
int3
gs
push
addl
push
cmp
clc
ret
mov
fadds
out
sub
stos
mov
mov
fs
pusha
cld
scas
or
jo
push
test
mov
cmp
dec
or
repnz
sbb
xchg
mov
orb
andb
dec
push
push
std
or
push
shll
inc
in
aad
ljmp
xorb
enter
jae
or
jg
jb
cltd
sarb
cmp
data16
test
ljmp
or
lret
fcomp
jge
lret
imul
iret
mov
mov
shl
jge
cmp
test
push
loope
or
pop
mov
push
je
jl
mov
lods
imul
je
or
ret
imul
adc
xchg
inc
scas
lds
jge
fwait
pop
mov
orl
xchg
int3
lcall
mov
inc
and
jno
pop
jae
lods
push
or
loopne
hlt
addl
popa
cmp
hlt
inc
xchg
inc
mov
pushf
mov
js
mov
xchg
aas
inc
cmp
outsb
cmpsl
adc
std
xlat
jo
sbb
xchg
cs
xchg
pop
loope
mov
movsl
inc
lret
xor
cli
push
inc
pushf
scas
cmp
pop
jecxz
inc
out
cld
sub
pushf
test
aam
rcrl
not
cmp
and
cwtl
shlb
push
cld
test
mov
and
lcall
pop
incl
std
pop
jp
jmp
mov
sbb
rcrb
inc
push
sub
jne
test
dec
fsubrp
popf
or
xlat
out
adcl
std
xchg
and
call
in
inc
mov
popa
mov
pusha
inc
pop
stos
loop
or
or
push
mov
push
push
and
insl
xchg
inc
rol
mov
cmpsl
roll
jecxz
push
addr16
lds
or
cli
daa
movsb
or
mov
fsubs
sbb
icebp
mov
xlat
push
pushf
cmp
les
mov
jmp
stc
inc
lahf
or
cmpsl
ss
mov
or
add
mov
dec
adc
mov
lea
jne
adc
jge
imul
sub
int3
icebp
sbb
and
mov
cli
adc
lods
jo
cmp
leave
or
gs
in
mov
or
pop
lods
ds
fadd
xor
xchg
in
outsb
out
adcl
pop
in
lds
mov
pop
xchg
cwtl
scas
sbb
cmp
adc
movsb
cltd
cmp
je
ror
mov
mov
or
dec
add
aam
in
sbb
dec
push
loop
lahf
fstpt
sti
leave
fnstenv
and
ljmp
mov
loopne
outsb
jnp
insl
aas
in
inc
bound
roll
outsl
pop
fcoml
adc
mov
cmc
pushf
and
xor
mul
ret
loope
mov
flds
cmc
sbb
jno
mov
cltd
jno
in
sub
call
outsl
daa
and
lock
mov
sub
test
push
inc
dec
test
push
test
rolb
test
mov
cltd
inc
push
fisubl
mov
andb
push
and
stc
push
lret
lahf
popa
push
enter
dec
imul
mull
fadd
ss
sbb
mov
ljmp
stc
aad
pop
pop
and
les
lock
xchg
cmp
xor
in
outsb
push
jbe
push
insb
jmp
cwtl
push
push
push
adc
aas
icebp
fmuls
and
inc
sub
out
enter
fisttps
aam
test
insl
sbb
loop
adc
mov
in
pop
inc
sub
popa
push
sbb
xchg
cmpsl
jecxz
sub
lret
addr16
imul
ret
pushf
pop
or
adc
xchg
sbb
push
lds
pop
movzbl
mov
ret
outsl
lahf
add
ss
mov
stos
xlat
stos
out
cwtl
cwtl
xor
xchg
push
mov
or
cmp
and
inc
pop
aad
add
jns
pop
imul
jno
add
xor
icebp
xor
mov
adc
mov
aas
pop
movsb
xor
dec
fsubr
push
mov
inc
test
jno
pop
cltd
cmc
cli
mov
and
pop
xor
decl
outsb
or
sahf
imul
xor
xor
add
mov
mov
insl
xor
xor
in
stos
icebp
xor
pop
sub
add
out
fcomps
stos
sub
fnstenv
pop
mov
add
bound
sbb
add
lret
into
push
dec
mov
mov
add
ret
aaa
lea
sub
add
pop
jge
mov
xor
xchg
xchg
repz
adc
add
inc
fidivl
mov
jo
inc
aam
dec
mov
sbb
adc
pop
pop
imul
xchg
ret
cmp
jmp
aam
dec
fidivrs
mov
outsb
mov
sbb
fs
jne
add
outsl
gs
push
mov
adc
inc
mov
cmp
out
add
adc
pop
add
jp
and
and
push
pop
adc
mov
ljmp
cmpl
es
not
icebp
out
lcall
jg
sub
xchg
lods
push
idivb
mov
add
sbb
push
out
mov
adc
mov
sub
xor
lcall
add
inc
push
dec
push
das
dec
fdivs
pop
addr16
iret
fbstp
scas
inc
inc
imul
aas
or
mov
adc
shrb
or
sub
cmc
mov
and
call
pop
rolb
jp
push
hlt
lea
stos
dec
cmpsb
mov
sub
pop
es
insb
jg
cmc
mov
or
jmp
cmp
lock
int3
mov
lock
mov
rorb
xlat
mov
jnp
enter
dec
add
xchg
mov
pop
cld
sbb
or
cmp
jl
gs
xor
in
pop
sub
popf
shrb
pusha
imul
in
fldcw
hlt
mov
mov
xchg
les
push
ret
cs
incl
icebp
in
cs
pop
jno
adc
data16
pop
shlb
pop
mov
xlat
mov
lret
xchg
fnsave
out
enter
sti
test
test
pop
sub
cmp
stos
ds
adc
aad
lds
js
mov
lea
sti
shr
sbbb
pop
fisubrl
icebp
jo
int3
in
subl
jo
fucomi
shll
add
jecxz
adc
adc
subb
sahf
xchg
repnz
ds
sub
shll
popa
mov
sbb
add
sti
push
stos
and
addr16
xchg
test
dec
sbb
imul
mov
pop
subb
insl
pop
imul
mov
pop
pop
or
inc
pop
loope
and
inc
add
mov
cmp
mov
mov
push
leave
mov
out
arpl
push
jecxz
cmp
aaa
mov
stos
mov
push
jnp
lock
and
xchg
push
in
adc
lods
xorb
and
or
mov
repz
in
int3
in
das
mov
pusha
sbb
or
jmp
inc
pop
xor
lods
add
arpl
mov
jae
add
jns
not
sarb
add
int
std
mov
xor
bound
push
cld
mov
sahf
jbe
jp
bswap
mov
sahf
mov
repz
mov
pushf
jno
jg
fidivrl
add
mov
or
pop
sbb
cmp
adc
or
nop
leave
dec
sub
mov
inc
jo
insl
xlat
dec
jmp
out
or
cmp
lds
and
mov
mov
jb
movsl
bts
jns
in
push
loop
imul
repz
jecxz
faddl
lock
xchg
out
loop
fstl
sub
xchg
ljmp
js
fldl2e
cmp
outsb
sbb
roll
or
js
sbb
pop
add
stc
aam
mov
pop
push
push
cmc
mov
cmp
xchg
xchg
into
pop
mov
imul
sbb
jp
xchg
push
shrl
jo
lret
pop
and
and
into
fldcw
inc
sbb
mov
push
and
adc
fwait
testb
jnp
loope
mov
pusha
add
mov
fstps
andl
ja
jmp
scas
outsb
pop
pop
xor
out
sub
test
and
out
push
fwait
pop
ficompl
stc
sub
mov
sbb
dec
sbb
mov
subl
adc
test
push
mov
aam
loop
lods
mov
js
or
hlt
cmp
in
sub
fmulp
cmp
xor
stc
pop
mov
xor
adc
mov
int
mov
dec
fwait
insl
jle
das
mov
lret
cmp
bound
mov
testb
sbb
pop
mov
and
mov
sti
sbb
adc
sbb
neg
repz
lret
mov
das
xchg
sbbb
xor
xor
mov
lds
jmp
outsb
int3
adc
aam
inc
mov
pop
repz
movsb
adc
movq
mov
addr16
ja
add
ret
pushf
ds
test
fbld
or
mov
repnz
sahf
and
cld
push
sbb
popf
jl
mov
jle
adc
mov
sbb
add
lcall
jle
lahf
mov
cmpsl
scas
jecxz
sbb
repnz
mov
fadd
lcall
cmpsl
pop
iret
add
sbb
sbb
fisubrl
push
and
addw
pop
dec
pop
mov
sbbb
add
sub
les
jl
mov
sahf
dec
out
push
orb
xlat
dec
xchg
mov
jmp
imul
insb
mov
subb
and
popf
push
fscale
adc
mov
ja
and
rcr
jne
stos
adcb
dec
lods
cltd
mov
daa
jo
mov
mov
rdtsc
aas
mov
incl
xchg
lahf
mul
daa
mov
addr16
or
xor
gs
jg
orl
xor
sub
cmp
enter
in
daa
jnp
movsbl
addr16
pop
mov
and
push
push
outsl
mov
das
mov
in
cs
loopne
xchg
and
jecxz
adc
adc
add
pushw
or
shrb
and
inc
inc
cmp
test
mov
and
xchg
push
xor
addb
hlt
dec
arpl
outsb
mov
add
lods
mov
testl
pop
cs
repnz
push
adc
and
aad
push
aam
sbb
shll
sbb
in
aad
jmp
ds
rorb
dec
ss
in
arpl
pop
arpl
adc
arpl
mov
push
add
mov
ja
test
mov
sub
mov
xchg
jmp
cltd
xor
pop
and
sbb
mov
filds
xor
xchg
xor
mov
into
test
push
jge
sti
lahf
dec
sbb
ds
mov
imull
cmp
lahf
out
push
jp
roll
jecxz
sub
pop
rorl
jbe
daa
out
loop
test
xchg
add
pop
inc
jbe
aas
pop
jle
pop
xchg
mov
cwtl
cli
enter
hlt
cmp
and
xchg
dec
enter
fisubl
jge
ss
dec
push
popf
out
cmpsb
sahf
sub
lock
adc
xchg
mov
nop
shll
adcl
push
cmp
outsb
xor
loopne
lret
mov
mov
dec
lods
mov
clc
or
fiaddl
mov
add
adc
and
xchg
dec
sahf
dec
or
bound
data16
arpl
repnz
mov
push
out
jo
shr
jo
popa
adc
pop
push
sbb
jg
lods
cli
lahf
ret
adc
jbe
mov
lods
bound
mov
ja
and
add
pop
adc
inc
fstpl
testb
mov
mov
scas
mov
movsl
leave
inc
inc
mov
or
cmpsl
jns
leave
fucomip
pop
inc
pop
xchg
sti
fdivl
xchg
adc
or
cmp
sbb
xchg
dec
xorl
jl
mov
stos
aad
xor
add
mov
push
mov
notl
sub
fmull
pop
cmpsl
roll
xor
ror
jno
mov
lea
push
xor
mov
add
clc
imulb
out
or
push
in
push
jns
inc
mov
cmp
push
sbb
rcrb
push
repz
shl
lea
xchg
pop
dec
sti
push
xchg
or
sbb
in
loop
outsl
inc
sbb
adc
scas
clc
hlt
int
jae
pushf
mov
pusha
fs
fistpl
out
mov
inc
push
fisubs
and
mov
pop
dec
push
sub
sub
jnp
cltd
pop
iret
sti
sub
out
fimull
data16
mov
push
push
adc
and
mov
mov
notl
jp
mov
pop
xor
pop
lods
mov
outsb
pop
aad
add
pop
icebp
mov
xor
fidivrs
lods
aaa
mov
push
sbb
lea
dec
lock
lahf
icebp
and
sbb
lock
fcos
dec
cmp
scas
inc
and
push
hlt
xchg
jb
outsb
or
sahf
jne
cmp
negl
das
xor
xchg
stc
out
mov
add
sbb
pop
xchg
mov
cwtl
cmc
jecxz
adc
scas
sub
adc
dec
dec
sbb
cmc
cmc
lahf
xor
ljmp
sub
cmp
out
push
pusha
adc
div
mov
je
loope
xchg
ljmp
lea
add
icebp
ds
cmc
jp
mov
cmp
sar
mov
add
jne
xchg
dec
jp
xorb
cmc
fiadds
mov
daa
arpl
jb
inc
stos
inc
and
mov
std
cmp
add
cmp
inc
and
mov
scas
fdivrs
mov
int3
lods
jo
test
in
adc
xchg
ljmp
std
mov
push
into
mov
cmpb
push
adc
sbb
dec
scas
xchg
mov
or
xchg
fidivrs
clc
daa
into
mov
lods
out
lea
push
mov
movsb
addl
lods
jno
inc
or
jecxz
mov
cli
xchg
outsb
add
iret
insb
repz
jb
or
insb
in
mov
jo
dec
and
movsb
mov
xor
je
fimuls
push
cltd
push
pop
mov
jno
imul
sub
xchg
pop
pusha
mov
mov
test
xchg
addr16
add
push
sti
sti
cmp
shlb
movsl
or
adc
dec
xor
insb
xlat
jg
or
jp
push
lds
fidivl
cmpsl
fnstsw
xor
mov
cmp
pop
jne
fldpi
test
mov
jle
dec
fldcw
and
in
mov
adcl
aad
jmp
jecxz
std
pop
inc
cmpl
mov
out
out
test
sub
add
lret
ss
or
test
cmp
xchg
cli
adc
lcall
xor
lret
add
mov
mov
sbbl
aas
mov
imul
and
test
dec
dec
push
rcrl
and
push
adc
sub
mov
js
or
push
add
sahf
pop
jo
inc
pop
pop
out
aad
in
cmpsl
pop
into
stos
sub
in
push
out
xchg
in
das
jns
sub
out
and
ja
push
and
aam
addb
xor
sarb
movsb
and
cmp
mov
lret
inc
fwait
jb
push
in
jle
push
cwtl
gs
inc
imul
iret
hlt
inc
and
ret
fldcw
mov
xor
mov
imul
mov
mov
loop
add
sbb
fildll
inc
inc
pop
jge
jbe
dec
adc
pop
xor
and
xorl
mov
je
sub
fstpt
mov
std
pushf
add
repnz
xchg
leave
ret
outsl
inc
imul
mov
fbstp
fisubrl
les
rclb
aam
inc
fcom
lods
xchg
sbbl
cmp
xor
sbb
out
fimuls
lds
dec
iret
add
dec
cltd
scas
lock
out
jnp
jmp
ljmp
jne
xchg
fucomi
push
jle
add
test
cmp
imull
ja
jns
xlat
cmc
ja
push
or
cmpsb
inc
scas
es
orl
mov
ljmp
jp
inc
mov
jmp
ret
subb
mov
orb
insb
bound
sub
int
cs
mov
jnp
adc
out
dec
sbb
stos
rorl
pop
or
data16
cmc
subb
mov
sub
push
punpcklbw
leave
jbe
cli
pop
cmp
pop
dec
lock
jmp
pop
int3
cmp
jo
xchg
mov
mov
pushf
sub
xchg
jmp
lock
jmp
xor
xadd
cmp
test
mov
test
xchg
incl
jp
mov
inc
popf
and
mov
jnp
mov
jle
push
aam
push
jle
mov
call
lods
push
xor
sbb
imul
sub
imul
sarb
es
jl
cli
or
into
aas
nop
mov
jecxz
sbb
movsb
loop
adc
test
cmpsl
xchg
xchg
cs
cltd
test
sbb
dec
loop
jno
xor
mov
xchg
inc
popa
pop
notb
insl
xchg
cwtl
dec
testl
lds
mov
xlat
int
mov
insb
adc
sti
and
dec
sbbl
fbstp
jle
hlt
hlt
outsl
jbe
adc
fisttps
xor
fcmovbe
adc
les
lods
mov
pop
shlb
pop
ds
inc
add
push
xor
adc
mov
jge
inc
sub
or
in
inc
or
mov
pop
out
je
mov
sub
cmp
xchg
mov
adcl
insl
or
addr16
cmpsl
mov
or
sub
pop
popf
jns
dec
and
mov
lea
ds
outsl
jbe
lock
in
stos
xor
clc
insb
leave
es
into
int
lods
loop
or
lock
test
stc
loop
data16
sbb
in
jmp
xor
das
decl
int3
push
push
jns
pop
xor
test
lods
mov
mov
push
pop
daa
insb
ja
jge
lahf
dec
or
shll
add
movsb
pop
mov
ljmp
dec
pop
jmp
in
aad
jbe
ret
pop
and
and
test
jb
loope
sbb
cmp
mov
inc
xor
jnp
xchg
jnp
and
loopne
sub
mov
mov
insb
cmpsb
mov
pushf
leave
add
mov
js
push
xchg
ds
xchg
mov
lods
add
outsb
or
mov
push
out
test
xlat
add
mov
fdivl
push
rclb
mov
mov
and
jle
sbb
sub
fdivrl
iret
inc
aam
aas
aad
ds
andb
rolb
addb
mov
xlat
lock
fbstp
dec
enter
adc
sarl
push
mov
iret
addr16
cmpsl
sub
outsb
or
adc
cmp
nop
test
jno
fwait
mov
sbb
fs
shl
mov
mov
adc
sbb
in
push
xlat
xor
push
push
or
inc
data16
mov
mov
ret
fdivrs
pop
push
std
or
adc
jge
into
mov
enter
loope
scas
jg
or
pop
xchg
fnstcw
in
lods
sub
or
lea
mov
cmp
pop
ss
cltd
pop
ss
ljmp
repz
and
sbb
jne
sbb
adc
lcall
dec
xchg
lahf
fwait
repz
cmp
add
sar
dec
push
pushf
jmp
jns
repz
mov
xor
fidivrl
and
dec
sbb
scas
xchg
cld
int
sub
sti
dec
ljmp
jg
mov
cld
lahf
mov
jnp
dec
outsl
add
inc
adc
xchg
lock
and
jb
jb
test
stos
pop
mov
popa
jne
jno
push
add
lahf
nop
jnp
xor
loop
imul
cmp
ret
aad
aaa
add
pop
lock
push
jne
fst
sbb
mov
mov
mov
add
addr16
cmpb
sub
xor
push
daa
out
dec
das
or
idiv
mov
jle
dec
jecxz
xlat
imul
inc
sahf
imul
fstp
fcoms
scas
loop
mov
dec
cmc
and
gs
xor
out
cmpsl
xlat
cmc
repnz
ret
fidivl
aad
jo
cmc
pusha
scas
pop
ret
xor
pusha
mov
mov
and
outsl
es
inc
or
mov
testb
xchg
mov
cli
sub
lahf
leave
in
mov
in
lret
sub
ljmp
lods
cmp
iret
stc
lods
xchg
lret
xor
xchg
stc
movsl
pushf
and
jg
add
pop
xchg
outsl
xchg
int
mov
inc
sub
add
push
and
fs
in
or
lds
add
mov
loop
mov
hlt
test
sub
sbb
fbld
pop
lcall
dec
loop
or
sub
in
leave
push
mov
mov
cli
push
mov
repnz
mov
sub
dec
sub
push
sub
sub
lcall
scas
push
add
sahf
pop
popa
or
stc
loop
aaa
nop
sbb
ffree
mov
clc
cmp
add
push
jo
jo
ljmp
dec
idivl
xchg
andl
cmp
jecxz
sti
ljmp
jb
test
test
xchg
fwait
sarb
arpl
mov
sbb
ds
pushf
out
xor
mov
inc
out
xor
pop
es
cmp
aam
add
push
movsl
sub
aad
mul
dec
add
mov
cli
inc
and
ficompl
into
jns
mov
mov
daa
lods
xchg
and
xchg
mov
jnp
add
cmp
rcr
sahf
movsl
dec
and
lods
mov
jl
push
xchg
push
int3
dec
incl
add
lods
rcr
dec
out
inc
adc
and
fiaddl
jnp
sahf
ljmp
ret
jae
pop
jge
fsubrs
jecxz
or
xchg
dec
inc
jb,pt
insl
mov
pop
sbb
sub
add
xchg
addr16
add
cmpsl
xchg
arpl
pop
stc
in
in
loopne
jp
rcr
or
repnz
xor
cli
scas
dec
sbb
mov
dec
out
inc
mov
cmp
jb
push
cmpsl
sbb
lea
movsb
xchg
sbbl
rolb
sub
add
pop
das
pop
mov
push
popw
lahf
push
or
mov
dec
pusha
cmpsl
sub
addl
adc
mov
cmpb
sub
jg
movsb
pop
cmp
in
aas
fcompl
test
mov
mov
xor
mov
lret
faddl
jno
loope
cmp
pushf
cld
lret
push
mov
dec
push
in
in
fsubl
cmp
enter
aam
fnstcw
push
pop
in
add
xchg
lret
rorb
or
dec
pop
rcrl
mov
xor
mov
out
inc
push
mov
test
sbb
out
mov
les
mov
call
mov
imul
idivl
adc
lock
push
inc
fs
pop
in
and
movsl
inc
mov
into
mov
addr16
shlb
rol
lea
xchg
cmpsb
sbb
mov
push
cmp
mov
inc
and
insb
xchg
out
pop
daa
jmp
popa
mov
aas
bound
xchg
aaa
push
mov
jmp
jne
cmp
dec
or
and
lahf
fs
int3
sub
cmpsb
xchg
out
into
sbb
sbb
add
jl
cmp
rorb
xchg
or
add
fmuls
loop
iret
mov
push
jl
ret
data16
mov
adc
cld
shll
mov
or
fstpt
ret
lahf
jp
or
push
movsb
xchg
push
icebp
aaa
pop
jbe
outsl
rolb
sub
jb
add
sbb
jecxz
je
ljmp
adc
mov
cmp
ljmp
xchg
pop
push
cwtl
je
fwait
ds
inc
sbb
arpl
push
int3
imul
jb
movzwl
orb
sbb
mov
mov
in
pop
int3
hlt
mov
test
les
sbb
mov
xlat
stc
jp
flds
pop
gs
cld
inc
sbb
adc
push
push
in
mov
sbb
test
cmpsl
hlt
call
jae
ds
jno
xchg
lea
rorl
outsb
mov
sahf
and
mov
mulb
enter
jns
dec
fnstcw
and
mov
movsl
mov
dec
cmpsl
mov
dec
xor
cld
jbe
adc
arpl
in
and
sti
jg
repz
or
mov
cmpsl
outsb
mov
fsubs
xchg
xor
pop
pop
pop
add
lcall
stos
push
or
jecxz
push
jl
push
mov
cmp
or
jae
out
inc
mov
push
sti
mov
push
movsb
bound
mov
popa
sbb
adc
lods
out
sarb
cmc
das
sub
ss
pop
inc
test
xor
fldcw
mov
xchg
out
shl
jmp
outsl
xor
and
js
repz
in
clc
xchg
jns
dec
jne
inc
orb
cmpsb
das
call
dec
test
mov
jmp
adc
mov
stc
jno
rorl
inc
pop
cwtl
out
or
rcrl
push
rorl
push
pushf
stc
scas
push
pop
out
ljmp
rcl
push
xchg
pop
add
sti
addr16
enter
test
out
enter
out
push
xchg
add
push
inc
push
xchg
out
fs
stos
mov
sarl
dec
into
int
and
mov
jle
sub
push
inc
pop
push
sbb
jae
inc
idivl
mov
loope
ror
shll
bound
rorb
mov
mov
inc
inc
aas
sti
cmpl
cld
jecxz
ret
ret
cmp
add
test
push
push
movsb
shll
push
imul
mov
and
popf
xchg
movsb
nopl
pop
aaa
cmpl
out
sbb
pop
or
aam
jo
push
sbb
fistpll
and
adc
jne
filds
or
mov
cwtl
jns
iret
sahf
jae
hlt
adc
sub
clc
and
mov
mov
jmp
jmp
mov
mov
call
aas
xchg
sbb
xchg
jo
andb
mov
xchg
dec
jle
jnp
xor
outsl
sahf
stos
sarb
mov
xchg
xchg
ljmp
dec
arpl
aad
or
mov
jmp
punpcklwd
or
fs
ss
mov
ljmp
fmuls
jg
adc
push
pop
sub
push
rorb
pop
sub
imul
xchg
nop
int3
pop
scas
ret
rolb
mov
push
mov
aas
xchg
lahf
inc
mov
mov
adc
cmp
sbb
dec
inc
cmpsl
ja
lods
and
xor
lea
push
cli
jl
jmp
jo
add
out
push
nop
xchg
xchg
dec
sbb
adc
inc
adc
movsb
push
push
adc
xchg
imul
inc
push
divl
xchg
cmp
testl
sbb
aaa
ret
aaa
cmpsl
divb
call
cltd
iret
out
mov
out
cld
xor
lock
cmpsb
decl
mov
inc
adc
test
pop
into
dec
dec
mov
cmp
inc
jge
sbb
dec
iret
jno
test
cli
add
inc
js
in
adc
in
mov
push
pop
add
pop
mov
nop
jbe
push
inc
addl
mov
dec
xchg
push
jns
sbbl
cli
sub
fmuls
das
out
pop
jge
cmp
cld
outsw
dec
or
daa
or
movl
mov
and
lahf
push
adc
pop
cs
loopne
fmuls
pop
and
fsubrp
stos
test
loope
cwtl
pop
xchg
outsl
icebp
cmp
or
popf
pop
lds
ss
je
adc
xor
adc
mov
mov
aam
adc
jge
shlb
js
jb
mov
cld
add
mov
ds
clc
sbb
dec
add
inc
jp
insb
lcall
cmp
inc
mov
das
enter
add
ja
xor
push
mov
jnp
sub
jg
or
or
ss
clc
insl
cltd
int
fwait
jge
outsl
repz
jp
decb
adc
dec
flds
cmp
imul
repnz
mov
lahf
icebp
mov
sub
fstps
mov
sarb
xrelease
in
lret
pop
push
xlat
pop
enter
out
ret
jecxz
jbe
scas
loope
cmpb
push
xor
inc
cmpsl
add
test
dec
pop
daa
push
and
dec
popl
shrb
lret
mov
cmp
scas
mov
lahf
inc
sarb
inc
es
mov
lea
adc
mov
lret
cmp
jmp
data16
add
xor
fcompl
sti
and
scas
fwait
lahf
or
mov
shl
std
mov
mov
and
dec
ret
mov
dec
lahf
inc
mov
pop
call
rol
mov
fsts
sbb
fmuls
mov
addr16
pop
shrb
and
mov
push
dec
int
clc
push
insl
rcll
xchg
sti
push
pop
or
stos
repnz
enter
fdivrp
adc
ljmp
paddsb
or
pop
aaa
cmp
out
mov
adc
xchg
ljmp
sub
add
pop
xchg
sbb
test
je
movsl
and
and
xchg
cmp
cwtl
jmp
nop
sbb
add
mov
push
loope
popl
out
jge,pt
ret
nop
out
sti
xchg
or
lock
daa
or
sub
fiadds
jge
inc
fistps
and
into
push
outsl
in
add
iret
sub
xor
frstor
or
aam
cmp
in
and
pop
pop
sub
pop
cmp
mov
les
xchg
jae
pop
test
lds
and
pop
test
imul
in
mov
mov
orl
mov
mov
jp
jne
sbb
imul
cmp
cmp
mov
push
nop
and
fpatan
pop
jge
rolb
pop
mov
adc
rcrb
inc
sbb
xchg
aam
cmc
fidivrs
cmp
inc
jmp
into
jecxz
js
shr
jle
pushf
cmpsl
pop
push
ja
add
aam
dec
aad
or
orb
scas
das
movsb
adc
in
jge
sti
mov
icebp
xchg
jne
out
sbb
xchg
outsl
lock
ss
adc
mov
imul
xchg
in
inc
or
cs
sub
mov
gs
aad
sub
xchg
sbb
pop
xlat
imul
xchg
lahf
outsb
pop
insb
popf
add
and
adc
jg
push
pop
out
sbb
sbb
popa
sahf
jae
push
or
fsts
sbb
arpl
sbb
out
lcall
mov
and
pop
fcom
in
cmpb
jne
xor
aad
add
cmc
bound
pop
cld
xor
lcall
fcmovb
sub
in
arpl
xor
push
sub
inc
ret
nop
shrb
pop
mov
mov
add
mov
xor
add
push
fs
mov
push
sub
pop
add
or
pop
movsb
int
nop
ss
cmc
adc
pop
shll
dec
ja
xchg
imul
repz
sbb
mov
xchg
dec
mov
jl
add
and
adc
push
lcall
mov
fwait
sbb
jp
push
cltd
int
arpl
pop
bound
fs
mov
xchg
test
popf
test
mov
dec
mov
nop
add
add
ret
inc
fnstsw
sbb
dec
push
pop
or
sbb
je
jecxz
xchg
mov
lods
fldenv
mov
pushf
outsb
push
add
and
pop
and
lahf
jle
jge
out
lds
add
lock
popf
pushf
aam
mov
lock
cwtl
cmp
add
jns
nop
js
mov
inc
fcoms
cmp
pop
add
std
mov
pop
jae
mov
add
add
out
das
mov
imul
dec
cwtl
cmc
push
xor
xor
fdivrs
mov
jge
dec
and
push
mov
out
loop
sbb
not
inc
xchg
aas
stos
jbe
adc
dec
movsb
mov
mov
movsb
xchg
aad
mov
popl
loopne
ss
mov
push
or
out
out
lahf
add
out
outsl
pop
sbb
mov
or
or
jnp
pop
cmp
cld
dec
and
jns
in
lds
pop
clc
or
push
push
push
inc
sbb
push
orb
in
pop
bound
lret
cli
rcrl
leave
sahf
cmp
mov
icebp
in
rorl
nop
mov
mov
sarb
fstp
pop
or
in
idivl
mov
pop
adc
sub
xchg
jo
jns
or
adc
jl
sub
into
stos
out
or
push
cwtl
outsb
sbb
pop
xchg
ljmp
dec
sbb
out
out
inc
jl
into
mov
pop
iret
leave
cli
inc
push
mov
jbe
add
minps
or
and
pop
int
add
int
lsl
sbb
rol
mov
stos
aad
sti
fwait
sahf
rorb
les
aaa
push
jne
enter
cmc
mov
cwtl
mov
pop
in
adc
jno
push
sahf
pop
xchg
fstl
leave
sti
xor
popa
sbb
and
aas
jmp
cmp
clc
adc
adc
push
mov
cwtl
scas
inc
jae
and
insl
mov
fs
aaa
imul
rorb
shrl
push
pop
aas
xorw
or
dec
dec
aam
dec
push
inc
cmp
cmc
rolb
push
and
cmp
push
ljmp
sub
movsl
mov
movsb
add
xchg
fimull
call
add
or
cmpsl
call
cmc
inc
data16
fbld
pop
jle
loopne
mov
xchg
daa
fmull
arpl
divb
mov
fcom
jge
or
jns
cmp
jno
in
cmpsl
pusha
mov
out
std
sbb
daa
das
jg
adc
lret
in
test
ja
dec
popf
lret
jbe
pop
xor
out
xlat
movb
push
pop
into
lret
adc
and
and
orl
std
pop
mov
fldenv
pop
mov
movsb
jg
daa
int3
cmp
mov
push
scas
pop
cltd
xchg
cwtl
out
cmp
ret
pop
outsb
xchg
cmp
fimuls
and
xchg
subb
int
push
repz
xchg
stc
stos
xor
push
add
mov
fdivr
fcoms
mov
push
or
cltd
or
pushf
mov
cmp
push
or
divb
aas
neg
in
ficoml
xlat
sti
nop
cwtl
push
mov
test
xor
add
jle
mov
es
cmp
jg
push
cli
sar
push
cmp
cmp
aad
popa
ljmp
dec
or
das
fstp
jg
push
repz
ret
push
xchg
imul
in
test
mov
imul
dec
mov
popf
mov
jge
lcall
mov
inc
popa
imul
add
pop
mov
sub
sbb
scas
ret
outsl
xor
cs
pop
lcall
mov
ret
push
sbb
pop
inc
loopne
js
fdivrs
bound
rcll
shlb
pop
adc
xchg
xor
jmp
clc
xor
xchg
aad
push
pusha
ja
pop
popf
adc
and
mov
fucomip
mov
arpl
add
pop
fsub
in
daa
lahf
adc
adc
lcall
xchg
sub
cs
inc
xor
push
in
mov
inc
rcrb
pop
dec
aas
rolb
xchg
cmp
add
dec
or
xchg
test
je
jg
pop
lahf
subb
sbb
mov
add
fstpl
pop
inc
out
xor
jo
adc
ret
arpl
inc
movsb
imul
push
je
mov
add
jo
jae
jb
fwait
orl
lret
mov
sti
inc
scas
jp
out
lret
pop
rolb
dec
mov
or
lods
jns
ja
mov
sbb
es
xchg
push
add
xchg
imul
fs
and
jb
fistpl
mov
jno
rcrl
mov
loopne
xor
hlt
push
mov
mulb
lcall
adcb
mov
shlb
jne
mov
lret
fists
daa
mov
adc
hlt
rcrl
out
jecxz
dec
cli
hlt
inc
push
inc
inc
lods
or
into
movsb
mov
jle
out
arpl
inc
ret
imul
or
pop
jp
adc
loop
iret
out
add
jecxz
dec
and
test
xchg
rolb
push
dec
sbb
rcr
mov
lods
clc
jo
and
cmp
test
push
ds
jmp
xor
mov
fistl
add
cmp
push
aaa
ljmp
lock
mov
out
lret
lret
scas
mov
lock
mov
xchg
add
jg
fwait
mov
jo
and
cmpsb
xor
cmpsl
xor
dec
fstp
daa
hlt
fwait
adc
jl
sub
push
out
mov
inc
sub
int3
ret
mov
or
rclb
cli
movsb
and
push
push
out
mov
insb
loope
aas
imul
push
pop
sub
mov
shrl
or
movsb
dec
adc
cmp
lcall
mov
in
data16
shlb
push
dec
jecxz
adc
mov
pusha
sbb
into
or
lock
sbbl
in
test
mov
sub
fcmovnb
je
or
push
jge
out
and
sbb
inc
xchg
ja
in
mov
pop
fadds
add
cli
xchg
push
imul
ret
sarl
inc
mov
inc
stc
jbe
sub
sarl
loopne
stc
mov
inc
cld
dec
enter
add
xchg
fsubrl
add
or
xchg
insl
dec
push
mov
xor
mov
fwait
inc
pop
inc
pop
sub
lock
lcall
sbb
fnstsw
push
testl
mov
jle
mov
test
fsts
mov
jp
aam
gs
gs
mov
push
mov
lea
push
fisttps
mov
cmpsb
and
and
sarb
into
fyl2xp1
or
decl
cmp
xor
or
jne
pop
nop
les
and
lds
scas
testb
xor
test
test
inc
inc
mov
das
lock
cmpsl
out
bound
or
push
andl
cmp
pusha
sub
adc
insl
test
jbe
scas
dec
inc
mov
std
jecxz
xor
dec
add
cmc
push
ds
push
dec
cmpsl
stos
sub
jmp
pop
push
mov
mov
int3
pop
ljmp
stos
in
jmp
sbb
cmp
pop
cltd
mov
int
sub
outsl
dec
sub
inc
xchg
iret
add
pop
push
sub
adc
outsl
jmp
lahf
mov
and
inc
sub
sub
pop
cmp
in
cmp
cmp
jmp
fnsave
push
test
xor
push
repz
xlat
insb
lea
xchg
out
nop
loop
jg
cwtl
movsb
sarb
aam
jge
xchg
jg
mov
shrb
add
data16
mov
and
push
les
push
jge
js
mov
leave
das
add
add
pop
sti
mov
cmp
mov
xchg
popa
mov
mov
xor
cld
xchg
add
sub
popf
out
das
push
mov
testl
jecxz
ficompl
add
sbb
cmpb
arpl
decl
xchg
sbb
cmp
in
adc
daa
fwait
mov
mov
push
jae
inc
cmpsl
adc
mov
in
sbb
in
sbb
sub
xchg
mov
shrb
inc
cmp
jns
lahf
jbe
adc
push
out
sar
adc
inc
jge
inc
dec
jp
mov
inc
inc
sub
sbb
pop
mov
jnp
call
sub
push
add
xchg
adc
mov
dec
mov
not
adc
jmp
call
data16
mov
or
test
xor
int
lds
or
fcomi
xor
enter
pop
loope
xchg
pusha
in
or
je
loop
in
sub
mov
int3
jecxz
out
in
cmpb
adcb
clc
or
pop
mov
loope
and
or
mov
mov
movsb
out
shlb
sub
je
cld
pop
ret
cmp
cmp
pop
std
cmp
sbb
inc
fsubrl
test
adc
lods
xchg
or
insb
and
lods
out
fwait
mov
push
roll
fistl
mov
fistpll
inc
sbb
sahf
fdivrl
pushf
mov
movb
or
pushf
sbb
les
jecxz
mov
leave
pop
cmp
add
mov
adc
mov
push
mov
popa
lcall
xor
add
pop
pop
inc
dec
cmc
push
pop
mov
xor
push
stc
dec
pop
div
xchg
mov
pop
xchg
lret
mov
stos
fcompl
mov
sbb
outsb
cmp
push
xchg
cltd
jg
das
pop
in
arpl
mov
and
int3
mov
lea
mov
cs
sub
ss
cmovae
push
sbb
leave
and
inc
cmove
fisubl
sbb
stos
aas
xchg
loope
xchg
jle
xchg
iret
cmpsb
mov
adc
jb
jns
fildl
not
sbb
into
jae
nop
aad
pop
xchg
push
int3
push
xorl
xor
pop
sbb
mov
push
adc
lock
mov
std
dec
dec
pop
test
fwait
sbb
sub
fidivrl
in
inc
jns
jp
jecxz
push
push
mov
cmp
ja
mov
sbb
mov
mov
ret
xchg
push
ss
mov
mov
mov
cmp
inc
dec
inc
and
fsubr
iret
pop
jnp
and
mov
stc
faddp
mov
mov
jbe
jmp
cmp
pusha
add
mov
loop
subl
pop
mov
or
pop
fbstp
xchg
jge
dec
fisubrl
cmp
lds
hlt
push
jecxz
xor
push
or
jo
push
mov
andl
fs
mov
jns
cmpb
cmp
addr16
dec
ja
daa
pop
scas
mov
mov
js
mov
mov
mov
mov
or
or
sbbl
movsb
or
mov
outsl
test
xchg
inc
rcl
sbb
das
lods
mov
pushf
inc
subb
mov
dec
sbb
out
cmp
popf
or
fbld
lahf
sub
pop
pop
pushf
loope
imul
iret
xchg
cmpsl
inc
sub
push
xchg
mov
sbb
das
adc
push
iret
sbb
jmp
adc
adc
jne
leave
movsb
add
lods
push
adc
adcl
mov
mov
shlb
aam
mov
shrl
pop
hlt
dec
cld
xchg
clc
mov
or
push
push
sub
mov
test
mov
add
mov
out
dec
subl
les
lret
push
jnp
or
mov
int3
add
jle
lahf
push
xchg
loopne
mov
jo
inc
cmp
aas
dec
xor
xchg
push
xchg
push
jg
repz
fsubrl
cmp
sbb
aam
xchg
cs
xlat
out
leave
cmpb
insb
adc
inc
xor
add
stos
mov
and
dec
push
push
pushf
or
lret
test
movsb
inc
cmpsl
lret
lcall
and
popa
and
in
mov
hlt
mov
cmp
push
dec
cmp
stos
cwtl
test
mov
ffree
adc
xor
adc
inc
scas
xor
outsl
lcall
cmp
push
mov
ja
sub
stos
dec
filds
or
jmp
push
in
insb
dec
mov
and
or
lahf
jnp
aad
adc
push
test
addr16
into
shl
and
mov
mov
push
lahf
call
or
xchg
cmp
outsb
and
and
movsb
xor
pop
xor
es
cmp
and
fwait
xor
loope
pop
xchg
clc
jmp
iret
jne
push
or
in
movsb
fwait
lcall
lods
xchg
jbe
add
out
rclb
dec
jmp
pop
lcall
cltd
and
or
adc
outsb
add
mov
data16
xchg
jecxz
dec
cmpsl
inc
push
jl
test
lret
add
ret
orl
pand
daa
addb
pop
out
pop
inc
xchg
sub
mov
and
data16
push
sub
sahf
into
xchg
pop
dec
jp
jecxz
std
jmp
xchg
adc
jg
push
mov
cs
lret
hlt
cltd
ss
fiadds
mov
ret
aaa
aam
cmp
jg
jp
clc
insb
ss
pusha
and
xchg
jne
jge
push
aas
and
xchg
je
dec
jmp
lret
adc
xchg
in
push
enter
scas
xchg
or
sbb
sub
jae
fstps
cmp
daa
xchg
gs
mov
out
rcrl
mov
mov
in
bts
push
pop
imul
pop
lcall
cwtl
sahf
imul
stos
sub
cmpb
ja
pop
adc
adc
adc
push
pushf
adc
push
push
xorb
adc
inc
pop
mov
and
jns
pmulhw
mov
xor
jb
cmpl
leave
imul
jno
ss
xchg
out
sbb
aam
cmpsl
lods
fs
jo
jae
push
cmc
mov
daa
mov
xchg
pop
out
push
mov
pop
movsb
pop
lea
iret
ud1
mov
cmp
mov
push
ret
dec
and
aam
pop
loope
mov
adc
adc
mov
sar
in
xchg
sbb
test
inc
jmp
repnz
test
addl
jae
add
into
rclb
or
adc
xor
mov
lcall
sar
jp
rol
add
lods
das
inc
inc
cmpb
mov
aaa
sub
xchg
sarl
aam
jg
lcall
cs
insl
iret
es
repz
mov
pop
clc
mov
cmp
insb
outsl
movsb
hlt
mov
mov
scas
jge
dec
push
add
loop
mov
mov
mov
pop
fidivl
imul
or
inc
pushf
add
fdivl
fldt
in
xor
xor
adc
mov
inc
add
xlat
jle
xchg
jg
outsl
push
dec
push
arpl
mov
jle
movsb
and
mov
or
mov
or
inc
outsl
dec
adc
mov
dec
jne
popf
pop
mov
mov
dec
gs
rorl
ret
mov
adc
mov
lock
cmpsl
test
add
cmp
pop
adc
mulb
lock
in
mov
in
sti
xor
jge
xor
pop
jl
ficompl
jg
mov
loopne
mov
ret
test
cmpsb
sti
push
sub
outsl
cmp
mov
inc
push
movsl
aaa
popf
jae
and
fiaddl
pop
cs
inc
fadd
xchg
jge
xor
cmpl
arpl
inc
pop
in
dec
loop
adc
xchg
inc
scas
into
lock
dec
or
and
cmp
jg
subl
mov
xor
cmpsb
ret
xchg
jl
dec
mov
inc
jmp
cli
outsl
pop
test
shlb
in
out
inc
and
cmp
mov
movsl
nop
ret
outsl
add
add
lock
sbb
aaa
imull
mov
sbb
aaa
subl
xor
jmp
or
sbb
jp
mov
stos
lret
pop
or
xchg
pop
sahf
movsb
test
mov
inc
sub
adc
cmp
lret
shrl
lods
cmpl
or
and
sub
add
ljmp
sbb
xchg
outsb
and
lods
scas
push
mov
xchg
sbb
lahf
insb
mov
xchg
xor
decb
sub
pop
jnp
jmp
push
pop
test
pop
adc
mov
loop
das
int
test
sub
xchg
rcl
mov
cltd
add
jne
imul
jecxz
push
flds
mov
xchg
data16
dec
ret
sbb
clc
mov
mov
test
loope
adc
ljmp
xor
cmp
stc
cmp
add
sub
frstor
cmpsb
sub
ret
jbe
jmp
cmp
sbbb
pop
add
or
rcl
mov
dec
sbb
xor
adc
es
dec
mov
and
sbb
dec
cli
lcall
adc
lea
fstpl
mov
add
faddp
jne
stos
test
stos
scas
ficoml
add
lods
mov
jne
mov
inc
mov
stos
lods
pop
imull
or
stos
out
pop
add
sbb
and
data16
or
movsb
lret
lods
test
movsl
sub
lock
xchg
insb
popf
pop
sub
sub
inc
pop
pop
ljmp
push
iret
jge
popl
xchg
js
cmp
sub
jns
or
adc
push
adc
push
xor
dec
sbb
jne
pop
test
cmpsl
pop
cmp
jno
dec
sahf
stos
ficoml
add
mov
mov
and
ret
inc
sbb
push
ljmp
dec
jmp
mov
lock
mov
add
aas
inc
int
inc
mov
jnp
fimull
pop
outsb
xchg
ljmp
test
scas
lahf
mov
pushf
mov
ds
shlb
andl
inc
mov
int
loop
cs
in
mov
mov
loopne
inc
imul
sti
xor
outsb
sbb
add
lret
pop
xchg
inc
dec
mov
sbb
in
xchg
std
loope
xchg
cltd
cltd
sbb
mov
push
mov
mov
inc
in
sbb
sub
int3
xchg
ret
cmp
mov
inc
or
inc
jb
aad
jno
push
jg
mov
out
dec
and
inc
mov
insb
mov
or
nop
aad
push
jg
mov
cmp
push
push
mov
imul
aam
mov
iret
push
lock
and
cli
test
lods
imul
add
lds
mov
repz
push
daa
int
shrb
adcl
adc
loop
mov
ret
dec
lds
xor
mov
pop
cmpsl
es
xchg
call
push
pop
inc
inc
jnp
mov
ja
ss
xor
imul
aas
adc
gs
push
js
lret
std
xor
cli
adc
push
mov
sub
das
adc
or
scas
or
or
pop
bound
rcrl
imul
or
jmp
inc
loope
fs
dec
jp
test
call
rclb
push
push
mov
es
cmp
adc
rcll
xor
adc
imul
jns
roll
adc
in
sarb
mul
adc
imul
and
cmp
mov
pop
cmp
in
and
inc
roll
cmc
sar
fsubrl
imul
mov
jo
add
mov
inc
sub
jmp
push
int3
pusha
mov
push
imul
jo
inc
stc
loop,pt
xchg
into
inc
fs
mov
sbb
xor
mov
mov
mov
cmp
push
inc
je
xor
enter
popa
in
loopne
push
pop
stc
inc
jge
jp
dec
pusha
addr16
insl
pop
add
pop
jp
cltd
out
fwait
jl
insb
das
inc
xchg
push
jne
sti
mov
xor
fimull
fnstcw
adc
mov
insl
clc
mov
mov
push
stc
in
pop
fs
mov
imul
jnp
call
sbb
in
outsb
jbe,pn
sub
mov
jns
sbb
sub
cmp
mov
stc
push
pusha
aaa
sbb
mov
pop
mov
xor
jp
or
icebp
in
lock
mov
enter
imul
divl
xlat
cld
cmpsl
sarl
mov
cmp
mov
shrb
xchg
movl
movsl
mov
loop
lods
gs
lods
sub
mov
pusha
test
stos
je
test
lds
lahf
ret
stos
movsb
jp
sarl
fldt
aas
stos
mov
call
aaa
adc
cmp
icebp
scas
dec
les
jg
out
mov
jbe
leave
in
shr
imul
jmp
cmpsb
add
jns
js
pop
push
cld
xlat
mov
std
jl
and
or
pop
add
fidivrs
sub
loop
inc
ffree
sub
push
xor
fnstcw
loopne
pop
mov
jno
inc
mov
divb
cmc
fadds
inc
pusha
ret
movsb
xor
jbe
pop
push
aad
in
pop
sbb
mov
jg
sbb
fnstsw
push
rcrb
inc
fidivrl
sub
sub
adc
in
arpl
imul
test
imul
xchg
push
dec
rolb
mov
dec
cmp
push
inc
std
adc
mov
nop
test
gs
inc
inc
loope
ret
pop
icebp
mov
sub
loop
das
or
sub
call
pop
insb
bound
xchg
sub
loope
mov
jge
call
xchg
mov
insb
jge
pop
mov
sar
lea
in
jmp
inc
sub
push
xorb
xor
aaa
les
push
pop
push
sbb
ret
mov
out
scas
inc
adc
inc
sarb
xchg
out
mov
push
jmp
int3
sbb
push
dec
mov
jnp
dec
hlt
test
sbb
push
dec
adc
add
and
mov
xchg
js
pop
dec
call
dec
popf
and
jp
mov
lods
das
ljmpw
dec
bound
test
sub
sarb
dec
jmp
mov
dec
jp
add
jbe,pt
jle
lret
mov
cmp
mov
iret
imul
fdivr
mov
into
lods
pop
push
repnz
mov
sysexit
sti
lea
mov
adc
push
mov
mov
lock
jns
sub
push
cmp
or
outsb
add
push
shl
add
dec
xchg
push
pop
and
mov
push
or
out
insb
mov
js
sahf
cmc
cmpsb
sbb
repnz
sbb
sti
negb
sbb
sbb
outsb
or
faddl
push
and
outsl
mov
mov
inc
out
cmpsb
pop
icebp
pusha
or
rcrb
mov
jns
and
js
scas
das
rcrb
aam
mov
out
inc
icebp
nop
cmpsl
xchg
xor
inc
test
xchg
daa
pminub
inc
outsb
push
shll
gs
adc
push
inc
xor
inc
or
aas
testb
xor
les
dec
lods
inc
mov
sti
js
in
dec
inc
mov
mov
daa
xchg
stos
mov
push
xchg
or
mov
pop
movsb
cmp
test
mov
sub
data16
subb
aaa
popl
movsl
scas
add
adc
notl
or
orl
sbb
fdivs
out
aad
insb
iret
adc
pop
in
and
fdivl
in
das
loop
or
push
xlat
pushf
mov
inc
mov
test
or
movsb
dec
pop
inc
push
in
and
pushf
mov
cmp
aas
repz
vmovlps
mov
xchg
push
stos
adcl
dec
jp
mov
cmpsl
jle
stos
call
and
mov
xor
loope
ret
loopne
inc
sbb
mov
cwtl
push
imulb
data16
out
push
inc
inc
testl
mov
jnp
ret
adc
in
jnp
insl
xchg
and
cwtl
sub
fpatan
decb
lock
mov
jmp
in
repnz
lock
xchg
ja
push
push
daa
mov
add
and
in
mov
mov
add
or
jl
inc
sub
jbe
cmp
adc
mov
mov
shrl
xlat
loopne
insb
add
pushf
mov
mov
pushf
cmpsl
jg
in
in
adc
adc
loope
mov
fisttpl
in
je
clc
leave
cld
adc
mov
mov
sub
out
lahf
das
dec
popf
mov
lahf
stos
jb
imulb
fadd
insl
insb
inc
fmull
rcrl
inc
push
mov
or
mov
dec
push
jp
sahf
jecxz
mov
jno
call
cmp
sub
pushf
lret
cltd
inc
je
dec
fs
and
mov
mov
das
fs
lock
lods
add
lret
mov
lret
xchg
adc
inc
cmp
sub
lods
push
out
mov
or
leave
rolb
stc
imul
push
xchg
xchg
pushf
pop
cld
mov
clc
inc
push
imul
mov
mov
shlb
fucomi
and
das
clc
jp
dec
pusha
mov
es
in
inc
push
dec
lods
pop
mov
clc
lcall
push
mov
scas
push
arpl
xor
pop
add
aas
push
push
cltd
subl
inc
push
add
or
aas
xchg
and
lods
jle
sub
dec
adc
adc
ss
andl
add
ret
jmp
push
xchg
pop
mov
dec
mov
in
loopne
add
mov
inc
or
popa
adcb
scas
je
and
mov
sbb
rol
scas
cmpsb
sbb
or
add
outsb
xor
pop
fucomi
dec
rcll
imul
lret
out
sub
inc
jmp
sub
data16
mov
lahf
movsl
cmp
insl
adc
out
push
popa
jno
mov
xchg
enter
sub
dec
sbb
out
mov
fsts
sbb
sbb
aas
push
pop
sbb
dec
push
add
xchg
push
mov
lcall
aaa
arpl
adc
add
mov
sahf
mov
es
mov
jae
ljmp
lahf
movsl
roll
test
icebp
and
hlt
mov
push
sti
jg
xchg
insb
out
je
ficompl
stc
fdivrs
xchg
cmpsb
cwtl
divb
notb
jne
icebp
jns
xchg
sar
jp
and
and
in
inc
aas
gs
imul
push
addr16
into
xchg
inc
cmp
loope
and
or
mov
inc
bound
jnp
push
adc
sbb
add
bound
push
inc
movsl
and
ret
out
loop
test
jg
mov
sbb
jp
sbb
scas
and
pop
int3
bswap
addr16
fcmovbe
sbb
jae
or
xchg
decb
inc
cwtl
popf
shr
add
dec
mov
pop
mov
add
jno
in
xchg
fwait
imul
mov
jb
lcall
mov
aad
dec
adc
inc
jb
mov
jb
or
jg
jle
std
sbb
jae
mov
int3
es
adc
and
pop
lds
in
jmp
push
imul
add
jge
andb
sub
pushf
cld
or
xchg
jnp
imul
arpl
fsub
out
sbb
not
xorb
loope
push
mov
dec
inc
cld
pop
or
cltd
call
icebp
pop
mov
mov
arpl
bnd
mov
pusha
jbe
sbb
mov
inc
gs
test
xchg
xchg
mov
or
popa
xor
xchg
in
dec
sbb
les
pop
testl
mov
xchg
shlb
mov
and
pop
jge
popf
cmp
es
jo
xchg
les
push
pusha
cmpsl
mov
and
call
cmp
ffree
lea
outsl
stos
mov
pop
inc
lcall
xor
and
popf
aam
stos
sub
cmpsl
ljmp
rclb
or
pop
mov
sti
sub
shrb
lcall
js
inc
pop
push
mov
jo
mov
loopne
sbb
pop
out
jl
jp
imul
icebp
ljmp
pop
lds
or
stos
push
stc
mov
enter
pop
out
aad
mov
and
out
lret
or
adc
scas
jp
repnz
jne
push
es
jns
push
dec
js
test
xchg
clc
orb
outsl
xor
jbe
or
out
cmpsb
repnz
inc
sbb
insl
stos
jbe
lods
out
sarb
dec
cltd
movsl
pop
push
insl
sub
cld
cmp
mov
mov
sub
popf
jecxz
inc
mov
mov
out
dec
pop
imul
xchg
push
das
pushf
fildl
popf
ret
or
inc
push
and
xchg
enter
pop
lahf
cmpb
adc
rcll
lret
jnp
cmp
jg
and
icebp
outsl
jge
cwtl
dec
pop
pop
jns
push
jno
cmpsb
inc
mov
movsl
ja
cmc
sti
cmp
aad
sbb
mov
push
xchg
mov
clc
out
jecxz
decl
pop
sti
aaa
cld
dec
fcomps
out
inc
pop
mov
cli
dec
sbb
inc
scas
popa
pop
orb
jle
lret
push
movlps
icebp
in
xchg
pop
pop
icebp
cwtl
movsl
mov
leave
adc
hlt
in
imul
test
jmp
dec
cmp
xchg
push
push
bound
imul
lock
push
addr16
dec
jbe
pop
inc
xchg
insb
call
or
es
nop
test
push
xchg
lret
fcoml
std
cmpsl
shll
lret
jl
dec
mov
jae
pop
in
jge
and
cmp
subl
aad
push
mov
cs
and
pop
adc
add
push
pop
xchg
or
cmp
adc
xor
fsubs
mov
add
lock
movb
dec
xor
add
dec
adc
stc
iret
ja
cmpsl
mov
sub
pop
adc
adc
loope
push
movl
mov
and
ljmp
dec
sub
jmp
rcrl
dec
getsec
push
fildl
mov
jmp
push
xor
mov
shlb
mov
test
dec
push
jmp
rorb
bound
aad
mov
idivl
jmp
outsb
dec
das
jnp
lea
pcmpgtd
xor
stos
lret
repz
mov
repz
cs
pop
test
sub
xchg
adc
fistps
mov
and
test
mov
mov
aam
pop
int3
adc
xor
xor
popf
in
popa
jge
filds
mov
cmc
ljmp
call
jle
xchg
xchg
pop
movsb
aas
sbb
mov
popl
enter
rorl
lods
enter
or
sub
push
push
xchg
sbb
jb
inc
cmp
das
fisubs
lods
test
in
adcl
std
xor
xor
mov
xchg
in
inc
fcomi
and
testb
cmp
mov
mov
or
pop
jmp
lahf
xor
call
scas
mov
enter
pop
add
adc
rclb
mov
dec
aas
or
daa
in
leave
pop
fisttpll
pop
lret
push
iret
daa
push
lock
call
mov
jo
xor
sbb
shlb
int3
xchg
dec
and
mov
hlt
sub
pop
jp
dec
mov
leave
lret
dec
sahf
loopne
push
gs
mov
pop
add
mov
icebp
or
pop
daa
jg
push
pop
sbbl
mov
in
lret
sbb
cmp
fstl
dec
pop
dec
mov
xlat
loope
jg
outsb
mov
cmpsl
adc
arpl
push
add
inc
jb
and
js
mov
push
in
add
mov
push
pop
fcoml
mov
xlat
push
inc
stc
xchg
jns
adc
idiv
popf
gs
push
mov
loope
xchg
xor
mov
jle
pop
addr16
test
stos
call
in
movl
cmp
cli
and
mov
fwait
lcall
mov
stc
mov
test
and
sub
sbb
sbb
addr16
ficomps
test
lahf
inc
jb,pn
dec
sbb
cld
jne
lahf
or
pop
mov
ficompl
add
and
jnp
loope
imul
cmp
mov
xor
arpl
fstps
lret
rcr
pop
xor
dec
jp
mov
xor
sbb
add
dec
inc
sbb
or
aam
mov
jo
adc
pop
adc
sub
or
mov
xor
dec
and
into
jo
cmp
push
push
cltd
xchg
inc
jle
lods
test
and
xchg
cltd
jl
imul
leave
int
cmp
dec
daa
push
and
xchg
mov
loop
push
xor
or
xchg
sub
sbb
jle
test
xor
mov
ss
fcoms
pop
push
pusha
pop
stos
mov
mov
or
sub
fistpll
in
lret
jecxz
or
dec
jmp
outsb
cmp
fwait
xchg
pushf
loope
scas
hlt
movl
int
lret
jno
or
or
jno
push
mov
mov
ja
or
nop
inc
xchg
sbb
lock
sub
mov
fistl
cmc
cmpsl
inc
pop
pop
repz
push
aad
pop
sub
push
iret
call
andb
adc
popa
sbb
std
jns
repz
inc
pop
nopl
clc
lea
push
leave
ds
hlt
pop
test
adc
adc
mov
icebp
pop
ds
jo
std
fsub
call
aas
movsl
outsb
push
sub
xor
xchg
inc
jl
outsl
shrb
sub
sbb
mov
int
add
mulb
imul
or
add
dec
cmp
sbb
sbb
shll
inc
rorb
and
std
inc
mov
shlb
popa
je
out
mov
pop
pop
jmp
adc
inc
xchg
hlt
sbbb
outsl
xor
jno
sbb
stc
es
xchg
xchg
inc
fdivl
lret
das
repnz
arpl
testl
test
push
jbe
and
sub
aam
in
movsb
adc
faddl
dec
test
fcmovnb
xchg
out
repz
scas
iret
leave
andb
jo
pop
inc
adcl
loop
popf
add
rcll
sarb
stos
rclb
mov
mov
inc
mov
jge
fildll
and
nop
test
gs
and
cmp
stos
xor
mov
jp
int3
sub
adc
jns
jl
pop
inc
adc
sti
mov
or
bound
cli
outsl
shl
push
scas
sbb
mov
fisttpl
in
inc
bound
mov
loop
aad
scas
sbb
stos
sub
adc
aas
call
pusha
addb
ja
add
sub
int3
xchg
adc
inc
jo
sbb
and
mov
xchg
out
xchg
add
test
andb
mov
xor
jbe
sahf
jb
add
insb
mull
add
mov
testl
jmp
fnsave
int
xchg
addr16
and
and
iret
jecxz
daa
ds
fildl
lea
fs
pop
mov
les
in
pushf
cmp
push
shlb
jg
mov
fs
push
aas
repnz
mov
fiaddl
adc
adc
fistl
mov
cmp
mov
in
xchg
sub
lock
mov
test
jae
insb
pop
jnp
int
jg
inc
data16
xlat
daa
ds
lods
test
adc
out
xchg
or
xor
bound
lods
test
in
movups
mov
xchg
fcoms
push
mov
inc
ret
jne
out
add
sbb
mov
popa
add
test
sub
in
js
lret
jl
out
mov
outsb
add
sar
and
and
sub
cs
sub
mov
push
pop
lret
sarb
add
xor
lods
xor
pop
nop
sbb
or
push
add
das
popl
cmp
mov
gs
test
push
and
ss
mov
cmpsl
imul
ror
sarb
mov
fisttpll
mov
mov
lret
xchg
fmuls
iret
int
or
rcl
and
adcl
sub
and
je
rolw
push
in
adc
outsb
cmp
jp,pn
fnstenv
or
stos
fidivrl
adcb
push
xchg
shlb
leave
hlt
jecxz
ljmp
xchg
int
xchg
jg
into
jae
fsubrl
adc
sub
and
or
out
sbb
cmp
mov
insb
push
leave
imul
loop
xchg
add
mov
jl
subl
jl
movsb
and
imul
or
mov
mov
adc
or
add
push
ret
cltd
cld
shll
pusha
out
push
sbb
arpl
mov
inc
add
je
push
jno
in
pop
mov
sub
fnstenv
mov
in
sub
addb
aaa
lods
add
xchg
pop
mov
mov
jge
cmp
push
inc
sbb
sub
jle
sbb
jl
pusha
decb
xchg
sbb
jne
es
mov
jns
add
mov
add
xor
in
xchg
sub
dec
pop
and
cmp
fbstp
inc
jecxz
in
xor
adc
test
cltd
lods
negb
iret
aad
jae
pusha
ss
int3
aad
mov
mov
fcoml
cmpsl
mov
lahf
xor
sbb
push
fistl
pop
pop
mov
fldcw
add
xor
mov
or
popa
xchg
or
mov
aad
sbb
and
popa
xor
nop
ja,pt
push
push
jle
setp
push
cli
lahf
sbb
sub
or
lock
fbld
push
in
mov
sahf
mov
or
leave
mov
pop
fs
dec
mov
mov
mov
jnp
rcrl
in
in
addr16
pop
stc
inc
into
int3
sub
clc
aad
xorl
inc
cs
pop
lock
mov
int3
out
gs
and
fs
out
jge
pop
enter
fcmovbe
aaa
mov
insb
xlat
cmpsb
in
jnp
mov
fdivrs
dec
aam
fs
addb
sbb
hlt
mov
lcall
pop
imul
xchg
outsb
filds
jne
pop
shlb
ret
fsubrs
es
aad
cmp
push
push
das
add
fisttpll
push
gs
sub
cld
push
iret
daa
insl
pop
ja
jbe
roll
inc
cmp
int3
sbb
jb
mov
cmp
std
mov
hlt
cmpb
and
sub
jbe
cmpsl
cli
xchg
scas
movb
lods
imul
call
das
fs
add
jnp
call
imul
or
dec
fistl
in
mov
fdiv
test
adc
mov
ss
mov
jae
or
pop
mov
lahf
repz
add
aas
xchg
push
mov
mov
mov
fs
pop
ss
mov
xor
xor
andb
lret
scas
xor
mov
int3
jbe
cs
imul
add
jbe
jns
inc
aaa
push
call
gs
outsl
incl
mov
jle
das
imul
inc
bound
lcall
jecxz
inc
push
das
popa
inc
xchg
pop
jns
pop
das
leave
lock
lods
pop
push
cli
jne
mov
or
iret
push
dec
jge
mov
adc
into
and
lret
lods
sahf
pop
cltd
into
pushf
rcrb
jge
ret
arpl
imul
xor
xor
dec
and
int3
mov
fmull
sbb
mov
sbbb
mov
iret
enter
aaa
add
jb
das
jns
fwait
stc
mov
std
dec
adc
push
call
cwtl
daa
xchg
outsb
jp
aas
fwait
out
cs
nop
int3
xchg
xlat
mov
add
imul
or
imul
inc
mov
aaa
dec
scas
jmp
mov
push
sbb
outsl
dec
xor
in
xchg
mov
enter
lret
outsl
fs
scas
mov
cmc
stc
push
lods
sbbl
popa
fisubrs
adc
mov
lds
jecxz
mov
test
jne
adc
push
std
dec
jge
addl
mov
push
sahf
repz
sub
cld
cs
dec
addr16
pop
scas
cwtl
das
push
repz
and
push
mov
mov
ret
imul
subb
dec
jl
lret
lods
mov
jle
dec
lock
adc
out
mov
rorb
cmpsl
or
es
jle
and
jg
outsl
mull
sbb
mov
imul
inc
jmp
fwait
out
sub
leave
pop
pop
mov
int
mov
iret
adc
idivb
lds
mov
push
fsub
sbb
mov
loop
bound
aad
cmp
mov
in
xorl
scas
fistpl
or
mov
pop
jbe
idiv
or
xor
mov
xchg
repnz
mov
xchg
sbb
cmc
xchg
adc
pop
xor
mov
xchg
addl
adc
xchg
xchg
jno
mov
cltd
sbb
xchg
mov
inc
xchg
test
daa
or
mov
iret
xor
mov
mov
push
int3
lds
loop
pop
fcmovb
xor
and
push
jns
mov
cmp
jno
push
out
and
cwtl
pop
jne
jne
xor
lea
adc
push
orl
pop
sbb
mov
out
pop
fwait
inc
fcoml
arpl
mov
jno
into
sub
call
movsb
out
test
cmp
in
adc
sub
arpl
jnp
add
fsts
push
push
push
cmc
fsts
add
popa
pop
ja
push
cmp
aaa
inc
stc
fisubs
dec
repnz
hlt
and
add
xlat
cmp
pop
cmp
lcall
xor
jb
pop
mov
scas
mov
push
hlt
es
test
adc
ss
cs
jp
jecxz
push
movb
jp
inc
rcr
nop
inc
aad
mov
push
sub
sbb
js
and
addl
cmp
out
cltd
cmp
dec
and
sbbl
pusha
xor
insb
jmp
std
add
jmp
adc
cmp
sub
mov
das
xor
mov
or
imul
movsl
idivl
aas
ret
push
pop
cld
xor
xchg
mov
jmp
push
inc
xor
into
movsb
dec
cmpsl
mov
or
dec
cwtl
sbb
mov
adc
mov
shrl
out
sub
xchg
add
and
inc
sar
pop
xlat
xchg
sub
cltd
in
mov
mov
loope
mov
aam
push
and
cltd
inc
ret
dec
jns
iret
xchg
popf
fadd
imul
or
lret
xor
mov
jb
mov
popa
push
fbld
add
repz
cmp
or
cmpsb
test
pop
push
sub
es
pop
in
fidivrl
shlb
sub
shll
in
add
shl
dec
xchg
insb
lret
cs
mov
xchg
fwait
dec
mov
movsl
xor
mov
sti
and
jmp
and
xor
dec
cli
add
shll
push
mov
cs
fcomps
dec
movsl
fnstsw
fists
aaa
mov
ljmp
inc
js
fwait
popa
jle
js
jmp
nop
popf
and
nop
mov
inc
scas
adc
xchg
aam
mov
loope
scas
enter
test
push
and
aas
mov
mov
lock
sbb
out
orb
mov
mov
xor
push
lret
sub
lahf
adc
orb
andb
imulb
cmp
ret
jnp
jae
xor
mov
popf
test
clc
pop
pop
mov
addr16
inc
stos
cmpsw
gs
out
adc
shr
ret
jnp
aad
push
mov
xchg
cld
js
sub
push
in
js
sub
mov
mov
pop
mov
cmp
jns
add
add
ret
popw
push
stc
dec
out
test
sbb
pop
or
movsl
stc
pop
dec
arpl
in
das
nop
jecxz
xchg
dec
mov
aad
or
xchg
pop
outsb
jp
xchg
dec
repnz
and
les
mov
and
sub
imul
push
roll
xor
imul
sub
pop
jp
xor
push
enter
inc
call
and
dec
xor
mov
pop
or
and
mov
add
cli
test
push
cmp
scas
movsb
mov
jno
and
aam
mov
fistps
sbb
bound
adc
out
addr16
insb
movl
jg
xchg
ds
add
xorb
mov
sbbl
xor
push
clc
adc
out
inc
dec
jge
dec
and
xchg
dec
fwait
xchg
jle
pusha
or
mov
sbb
pop
pop
ljmp
insb
popf
loope
sub
in
or
nop
pop
dec
dec
sti
es
sbb
loope
mov
sub
mov
dec
insb
ss
repnz
loope
xor
mov
cmp
aad
mov
jb,pt
mov
and
mov
arpl
lcall
frstor
and
aad
scas
push
mov
inc
mov
dec
ja
out
push
xchg
cmpsl
cld
addl
fstl
popa
mov
pop
xchg
add
dec
sub
inc
frstor
mov
push
aas
mov
fs
ret
jo
mov
sar
jb
adcl
sbb
cmovno
pop
lds
push
ficoml
mov
ja
int3
lahf
fsubl
xor
pushf
aad
sti
sub
ds
aad
ret
out
dec
rdtsc
jno
adcl
cli
jo
ret
mov
into
mov
sahf
push
jl
add
and
jl
movsl
fisubs
cmp
jge
lret
jg
xchg
dec
push
popa
mov
mov
test
xchg
data16
shr
addb
add
repz
popf
stos
jge
and
int
and
cli
cli
dec
dec
loope
cmpsb
mov
divl
sbb
adc
or
mov
rorl
dec
push
lret
lret
mov
ja
xorl
and
movsb
icebp
addr16
jns
aad
aaa
repz
outsb
icebp
es
xor
repz
bound
movsb
jp
inc
push
xor
sbb
push
fwait
sub
add
dec
aas
mov
xor
cltd
fstl
aad
js
daa
jg
mov
in
icebp
mov
shll
movsl
xchg
std
out
les
addl
aas
call
bound
pusha
push
repz
jne
cwtl
sbb
adc
popf
data16
popf
and
lret
xor
lods
cmpsb
inc
adc
rcr
mov
inc
pop
pop
daa
fdiv
shl
movq
or
push
sbb
push
xlat
or
in
jno
icebp
fnsave
imul
inc
mov
ja
dec
inc
test
lret
mov
movsl
cmp
rcl
inc
movsl
cs
repnz
inc
cs
mov
mov
cli
mov
loopne
inc
push
cmpsl
dec
lods
and
movsb
nop
sub
fs
xor
fcmovb
lods
adc
addr16
pop
js
dec
in
xchg
pop
insl
mov
inc
stc
fsubs
in
nop
or
push
fs
fisubl
jp
mov
into
adc
pop
fwait
mov
repnz
sbb
pushf
out
pop
nop
dec
test
xchg
inc
xor
enter
push
aaa
fwait
jmp
aas
mov
mov
subb
mov
fildl
mov
hlt
dec
insl
inc
dec
add
push
ja
dec
mov
fmuls
outsl
cwtl
idivl
xor
aad
or
loope
cld
arpl
push
insl
mov
ret
loope
daa
and
and
in
lods
adc
icebp
in
je
inc
inc
lahf
lods
or
adc
jl
iret
rorb
xchg
out
out
or
sti
iret
inc
clc
push
jns
mov
ja
in
xor
or
negl
es
js
mov
adc
mov
push
add
or
mov
jl
out
push
fistps
arpl
sbb
ja
cli
pop
aam
fsubrs
push
int
lods
cltd
adc
icebp
lods
jne
mov
push
fwait
test
rol
repz
jl
out
add
mov
lcall
loop
cli
cmp
pop
lods
dec
fwait
add
mov
pop
add
loope
xchg
push
ds
xchg
cmp
out
pushf
add
out
inc
xchg
jbe
ret
shlb
lods
lret
jno
xchg
gs
sbb
and
mov
add
add
jb
sub
xchg
repz
ss
pusha
xchg
clc
add
movsl
push
nop
scas
jge
aaa
scas
push
jnp
je
xchg
movsl
push
out
mov
aad
aas
in
adc
sub
xchg
cltd
icebp
ror
out
jle
fbld
lret
sbb
and
pop
cld
adc
test
call
sbb
sbb
add
mov
pushf
pop
nop
dec
push
sub
add
ljmp
cmp
adc
pop
inc
call
bound
sti
xlat
cwtl
adc
inc
xor
cwtl
jmp
aam
pop
es
call
lcall
jae
sub
mov
jne
aas
hlt
xor
flds
lea
sahf
fdivrs
imul
popa
push
lret
xchg
dec
cmc
inc
sar
lcall
mov
shlb
mov
mov
imull
jle
dec
sub
or
clc
mov
jno
dec
inc
cltd
imul
dec
cltd
lahf
mov
outsb
mov
push
out
sahf
out
dec
loopne
sahf
jbe
pusha
jmp
cmp
scas
add
push
sbb
test
cmp
push
dec
mov
jae
loope
imul
inc
outsb
mov
or
push
mov
in
stc
jp
sbb
scas
push
paddb
sbb
xchg
sbb
pop
cld
add
xchg
sbb
ljmp
lds
add
out
dec
xor
jne
dec
lret
jle
ret
std
int3
lret
sbb
dec
fsubs
jge
push
push
xchg
cmp
lea
js
jno
idiv
jl
int
cmp
xor
pop
cmpsb
cmpl
in
push
or
lods
sbb
and
fs
mov
movsl
sbb
push
xchg
out
push
call
xchg
enter
insb
test
push
loop
das
outsb
inc
ds
stos
or
or
dec
adc
lcall
or
loop
mov
aas
and
loope
out
aas
or
mov
mov
and
lods
sbb
mov
sub
add
ljmp
lcall
and
loope
jecxz
mov
push
xchg
dec
jne
or
bound
sub
pop
inc
pop
leave
xchg
or
dec
and
js
mov
jno
leave
ds
push
or
ds
push
aas
push
dec
loop
and
sub
fcomps
push
aaa
ja
loope
mov
popf
leave
shl
std
dec
loop
push
cmpb
and
sub
xchg
mov
xor
jecxz
test
lods
mov
leave
sbb
push
mov
aas
cmp
mov
sub
mov
data16
mov
jnp
xchg
dec
fisttpll
pop
add
pop
or
test
cmp
cmp
jl
cmp
adc
jae
xchg
cmpsb
sbb
fsubs
fmuls
js
or
in
out
sbb
popa
aam
leave
inc
scas
xchg
mov
jns,pt
and
js
pusha
stc
add
pop
mov
and
mov
mov
lahf
addr16
dec
cwtl
add
stos
gs
pushf
mov
shll
lea
add
sub
nop
icebp
pop
or
in
je
dec
stos
xor
lds
leave
sbb
out
xchg
mov
popa
repnz
sbb
cltd
cmp
loope
mov
cmc
sbb
arpl
fldcw
stos
dec
sbb
xor
mov
inc
cwtl
dec
mulb
dec
les
imull
add
jge
cmp
jecxz
divl
test
add
xor
xor
sub
test
jecxz
ret
aaa
jne
fwait
inc
lcall
inc
icebp
dec
cld
in
ds
or
lahf
test
adc
sub
aam
inc
lret
ret
mov
shl
ret
std
xchg
pop
sbb
cmp
jmp
pop
add
loop
add
xor
mov
aad
cmpsb
addr16
aaa
sub
mov
xchg
cmp
pop
mov
mov
xchg
dec
orl
repnz
sub
popf
adc
dec
sbb
mov
lret
dec
repnz
and
insb
mov
nop
and
out
cs
push
ja
or
outsl
sub
iret
mov
stos
es
sbbl
jle
notl
adc
xor
add
pop
mov
jp
stos
int
xchg
inc
pop
cmp
test
ret
loopne
arpl
mov
out
xor
rcr
stos
mov
cwtl
mov
inc
xchg
mov
daa
cmc
les
mov
push
add
or
xor
sbbb
popa
decb
jae
rcrb
adc
sub
mov
cmc
or
sbb
fwait
mov
adc
clc
mov
jmp
insb
push
jno
lret
push
inc
xchg
push
sub
fistpll
mov
adc
popa
hlt
inc
inc
and
fiaddl
jnp
test
adc
lea
dec
mov
dec
sbb
xlat
lea
outsb
jae
pop
mov
daa
rclb
xorl
and
arpl
test
loope
xchg
scas
subb
inc
dec
enter
fucomi
in
add
jg
jmp
int
push
outsl
cwtl
mov
xor
gs
mov
xchg
jns
push
xlat
ja
sar
xor
dec
jae
movsb
push
push
or
jo
jmp
testb
xor
lods
mov
or
xchg
rorb
mov
jbe
ds
ja
pop
jno
sbb
stos
jge
jae
inc
aad
jns
mov
imul
push
sbb
movsl
mov
add
inc
loop
stc
cmpsb
sub
adc
pop
mov
mov
sub
aas
das
imul
dec
cwtl
sbb
add
lods
fstl
mov
shrl
xchg
ss
gs
jbe
int
jmp
scas
jne
pop
fldenv
fiaddl
inc
inc
repz
test
and
cmp
jg
loopne
mov
scas
pop
or
cmp
into
sbb
push
shlb
ljmp
sar
cmp
sub
dec
jns
jmp
dec
bnd
cmp
imul
mov
int
xchg
mov
xlat
pop
xor
dec
dec
out
ficomps
pop
jns
fsubl
mov
popa
outsb
or
dec
shl
rorb
inc
mov
out
mov
xor
iret
inc
add
ja
push
fists
inc
repnz
imul
sti
xlat
cld
push
outsb
rolb
test
mov
out
sbb
mov
jbe
inc
sub
rcrb
adc
push
dec
sbb
cld
aam
ja
dec
jb
and
lock
daa
add
and
xchg
push
pop
mov
or
inc
pop
clc
xor
dec
dec
cmpsl
adc
pop
pop
sub
lahf
stc
push
fisttps
loope
rol
stos
mov
sbb
scas
fldt
cli
jecxz
sti
xchg
scas
xchg
mov
repnz
pop
lea
jae
push
pop
movsb
or
jbe
movsl
dec
scas
push
call
inc
mov
mulb
dec
jb
inc
clc
mov
inc
adc
movl
int
or
lock
pop
jae
cmpsb
bound
leave
es
dec
cmp
and
imul
inc
pop
fs
cmc
push
mov
or
xchg
fildl
gs
loope
outsl
mov
cmp
in
fwait
leave
and
jle
cmpsl
push
insb
cld
mov
xor
leave
shrb
loope
divb
cmpsl
inc
pop
sub
mov
xchg
mov
sarb
mov
cmp
nop
jg
dec
insl
mov
push
mov
adc
fisttpll
loopne
repnz
and
and
mov
and
xlat
gs
adc
pop
dec
fidivrs
mov
dec
jge
push
cmp
jns
sub
sbb
adcb
int3
ret
sbb
sub
xor
in
mov
fbld
mov
pop
inc
jns
out
and
lret
push
mov
mov
xor
push
mov
mov
or
mov
rcr
mov
xlat
call
inc
or
jp
mov
inc
cmp
cmp
pushf
shl
daa
xchg
push
pop
sbbb
mov
push
outsl
dec
adc
adc
and
nop
fs
and
pop
in
mov
jecxz
fstpl
cltd
push
ss
inc
sub
pop
cli
jnp
mov
gs
mov
dec
les
lods
push
xor
addl
xor
xchg
lea
pop
dec
stos
bound
dec
adc
lods
pop
mov
pushf
mov
sub
imul
test
rcl
test
xor
vpackuswb
push
test
xchg
mov
ss
lods
inc
mov
pop
or
jns
add
test
push
jge
and
mov
jg
sub
lods
sbb
lret
push
cmp
pop
int
gs
push
inc
fs
xor
cmp
dec
xchg
lods
mov
xchg
pop
push
xor
adc
sahf
popa
leave
hlt
jbe
cmp
jmp
je
ja
fidivrs
lock
enter
arpl
iret
lock
push
push
mov
jo
movsl
addr16
fcompl
shrb
mov
mov
pop
imulb
or
bound
lret
js
push
and
adc
shll
push
xchg
dec
pop
add
cmpsb
rorl
das
imul
cmp
lret
mov
pop
imul
js
cli
daa
mov
dec
orl
pusha
mov
mov
add
lret
xchg
lret
xchg
mov
imul
push
loope
pop
sbb
jne
sub
or
aas
cmp
lods
or
cmpsb
int
insl
aas
jbe
pop
pop
adc
pop
mov
enter
aad
mov
cmp
rolb
pop
mov
repnz
subb
add
divb
xor
dec
or
lahf
ljmp
fnstsw
adc
push
pop
lea
push
mov
sbb
mov
and
ret
cmp
mov
mov
sub
xor
out
xchg
push
mov
xchg
pop
pop
cmpl
lcall
lods
cld
push
inc
mov
stos
dec
mov
cmp
xchg
int3
rcll
push
movsb
sbb
adc
or
int
aas
mov
sbb
dec
movsl
inc
imul
outsb
sub
dec
shlb
dec
mov
lods
lods
test
gs
aam
loope
test
jle
adc
xchg
sbb
pushf
mov
addb
notb
outsb
push
pop
hlt
pop
loopne
fs
stc
push
ret
jle
cmp
insl
mov
push
rclb
jg
cld
popa
ljmp
leave
mov
jl
icebp
pop
dec
incl
mov
sti
cmp
or
test
adc
fmull
pop
test
push
pop
iret
loop
and
xchg
cmp
jo
pop
int
add
out
adc
loopne
inc
mov
mov
sub
out
cwtl
mov
dec
pop
cmp
clc
pop
push
and
test
jl
out
sti
repnz
or
push
subl
cmp
xchg
mov
pop
in
and
adc
int3
in
aam
iret
mov
test
sbb
and
mov
imull
jp
sbb
pop
arpl
test
in
addr16
sbb
jbe
data16
jne
rcr
sub
or
or
xchg
or
mov
or
fsubl
lea
pop
lahf
xchg
sarl
xchg
push
in
pop
or
jge
xchg
andb
xchg
shll
mov
sbb
movsl
ds
or
mov
push
test
add
clc
or
dec
rcll
xchg
std
xor
sbb
mov
mul
lahf
or
fs
sub
je
inc
lods
andb
call
cmp
push
or
inc
mov
jmp
iret
mov
add
pop
xor
jnp
fstpl
pop
sahf
cmp
imul
pusha
aas
cmp
jl
ds
mov
push
mov
push
movsl
jo
jge
test
jl
push
int
pop
sbb
ja
sarl
fs
insb
daa
daa
fistpll
loope
jge
out
out
mov
gs
jmp
fsubrp
daa
inc
or
mov
push
inc
mov
lds
and
or
pushf
mov
push
mov
push
push
insb
mov
lret
je
rolb
test
pop
or
jecxz
cmp
fwait
mov
test
mov
pop
pop
daa
int
sbb
test
cmp
mov
fs
cmp
fwait
lock
popa
popf
jae
addr16
lahf
push
adc
iret
xchg
adc
ljmp
pop
cld
sbb
jnp
cltd
cmp
and
xchg
insb
cld
js
and
mov
loope
mov
adc
pop
decl
sbb
mov
popf
rolb
dec
dec
add
mov
and
daa
loopne
cwtl
jne
bound
push
jge
mov
push
fldenv
std
sub
aas
or
scas
aad
js
mov
cli
lret
xor
roll
movsb
es
jg
xchg
cmpsl
sub
inc
push
sbb
aam
sbb
test
sbb
jo
push
arpl
cmpsb
pusha
pop
mov
jge
loopne
jecxz
or
push
and
jo
orl
std
fwait
test
mov
and
dec
cltd
push
pop
jge
mov
mov
cmp
jo
mov
pop
sub
cmpsb
xor
popa
ss
sub
mov
ds
js
js
ljmp
bound
pop
sbb
aam
bound
jne
xchg
cmp
mov
dec
into
aaa
imul
aas
mov
sbb
fstl
idiv
std
add
xchg
das
push
out
xor
ret
mov
addr16
lahf
incl
icebp
sbb
imul
iret
aas
aad
sar
mov
fwait
bound
sti
addr16
shrb
mov
mov
pop
push
loop
js
xor
leave
sbb
lret
cwtl
cmpsb
and
mov
dec
mov
sub
sbb
movsb
inc
pop
add
rcll
pop
jb
and
imul
or
fildl
shlb
scas
sbb
test
cwtl
gs
repz
cmp
sub
pop
mov
pop
pop
scas
rolb
mov
test
mov
push
sub
pushf
fildl
adc
mov
aam
fmuls
or
xlat
mov
mov
bnd
iret
insb
pop
mov
dec
imul
fidivrs
jmp
xor
add
jmp
lods
xor
ss
or
jno
mov
sub
and
stos
out
in
sub
sub
adc
jmp
ret
pop
out
in
sub
out
push
in
call
shll
pushf
mov
xor
adc
cltd
cmp
jge
and
stc
mov
and
sti
sti
movsl
push
mov
jge
js
dec
push
xchg
iret
les
or
outsl
mov
cmp
into
int
adcb
gs
xlat
add
ja
icebp
adc
adc
jmp
imul
cltd
mov
add
xchg
xor
sub
cmpsl
test
or
and
repz
movsb
lcall
in
mov
cli
in
js
arpl
ds
fisubrs
xchg
or
leave
xor
dec
stos
fsts
por
pop
jle
adc
adc
or
or
out
fisttps
ja
test
das
pop
in
sbb
inc
jmp
arpl
xorb
ljmp
cltd
arpl
ljmp
mov
mov
mov
sbb
fcmovu
int
fisttps
jb
daa
xor
xchg
in
add
test
and
cmp
mov
lret
in
xor
dec
test
pop
mov
enter
add
fcoms
cmp
jmp
sbb
cmpsl
lret
out
inc
mov
cwtl
sbb
jp
test
mov
inc
or
dec
pop
add
hlt
gs
popf
call
std
out
push
js
cwtl
aad
insl
inc
inc
loope
movsl
xchg
add
xchg
inc
into
lahf
in
lock
mov
jl
jae
test
adc
imul
call
rorb
pop
jle
test
jnp
mov
xchg
inc
xchg
or
pop
adc
loop
cmp
dec
fidivl
cmp
idiv
push
mov
add
push
mov
mov
dec
rorl
cwtl
idivb
popa
mov
or
cmp
cmpsl
cmpsl
mov
clc
mov
arpl
lret
sti
test
pop
mov
mov
sbb
imul
aam
fimuls
leave
ja
int
icebp
call
rclb
arpl
imul
cmp
addr16
mov
lahf
int3
mov
ret
pop
dec
shll
cltd
dec
popa
lock
push
out
xchg
movsb
push
int3
and
push
iret
xor
test
xor
push
aas
inc
jae
xchg
mov
fiaddl
into
fcomps
loopne
mov
cmp
test
sti
loop
push
or
adc
out
idivl
add
jle
adc
xchg
jae
push
jae
sub
sti
jnp
push
jp
icebp
xchg
dec
and
jns
mov
mov
cmp
pop
mov
stos
push
mov
push
pop
xor
xchg
in
rorb
jbe
imul
aas
or
aaa
inc
ljmp
rcr
mov
mov
shlb
adc
lcall
ror
aaa
sti
aas
in
add
stc
insl
jnp
ds
fdivp
jmp
in
in
dec
scas
pop
lds
ja
lret
sub
stos
dec
insl
inc
fists
jae
sbb
add
xor
pusha
in
aas
lret
pop
aam
sarb
xchg
js
pop
push
cmp
push
xor
std
jl
cmpsl
cs
mov
inc
pushf
push
fistpl
jle
dec
xlat
jp
test
or
cli
inc
outsl
xchg
out
sbb
es
mov
cs
fwait
test
pop
ficoms
inc
addl
lret
inc
inc
in
push
jg
or
sar
ja
ret
scas
push
pop
sub
mov
pop
sub
rcll
mov
fstp
repz
data16
sahf
sahf
mov
cli
sbb
or
int
push
idivl
mov
xchg
adc
jno
rcll
ds
mov
jecxz
mov
fildll
bound
add
mov
int3
test
std
cmp
push
call
popf
xor
pop
jle
sti
fs
or
shrl
pop
js
dec
mov
inc
dec
xchg
ficoml
pushf
repz
sti
repz
in
push
push
inc
cmpb
cmp
push
mov
mov
mov
sbb
test
imul
lret
in
int3
popa
jl
iret
adc
xchg
rcl
sub
insl
mov
sbb
sti
je,pn
out
addr16
xor
pop
xchg
sbb
daa
push
inc
jge
loope
lret
int
cmp
xchg
cmp
out
and
pop
bound
jecxz
push
gs
mov
pop
fldenv
xor
int3
sub
pop
jnp
in
icebp
in
cmp
and
jecxz
sarl
mov
mov
jp
xor
pop
std
mov
imul
std
stos
fs
or
cwtl
movsb
dec
and
sub
scas
and
push
push
ret
ljmp
jl
xor
stc
arpl
insb
pop
sahf
rcll
pop
ficompl
cltd
push
xchg
sarb
cltd
fnstenv
jo
test
push
push
and
pop
xchg
xchg
pusha
cmp
dec
out
fstpt
dec
jge
mov
cmc
add
jb
hlt
dec
sbb
into
pop
xchg
hlt
xchg
lahf
mov
jne
push
cli
push
xchg
das
in
mov
notl
arpl
jecxz
fs
ret
jg
jae
ror
push
repnz
in
leave
std
jnp
xlat
xchg
mov
out
inc
inc
fs
in
push
test
arpl
sub
push
jle
pop
fimuls
das
dec
adc
mov
mov
stos
loop
daa
bound
inc
cld
pop
mov
mov
je
aas
punpckhwd
sti
bound
sbb
nop
jp
jmp
mov
sarl
sarl
mov
jne
dec
and
nop
stc
mov
mov
gs
stc
inc
mov
int
sub
pop
and
in
sub
and
lea
mov
lods
adc
aaa
jp
outsb
push
add
jo
inc
jo
pop
into
loope
jno
std
or
je
jge
sub
jmp
inc
mov
insl
add
into
mov
test
stos
repnz
sbb
imul
stc
mov
xor
lret
push
in
insl
jmp
add
xchg
loopne
and
lods
sub
xchg
repnz
data16
imul
je
in
es
mov
dec
lahf
xchg
popa
xor
shlb
test
fwait
ss
enter
pop
jmp
and
cli
inc
call
ja
xor
cwtl
pop
enter
add
push
xchg
aaa
ret
mov
imul
jle
fldl
aad
cwtl
pop
add
or
testb
jmp
jp
mov
fcoms
jns
lds
jmp
rorb
jmp
cltd
mov
je
fcoms
mov
fidivs
pop
mov
jp
add
pop
loopne
fsts
sub
sub
jbe
in
jno
repnz
fidivrs
in
dec
les
adc
ja
call
test
jne
cltd
mov
or
pushf
mov
inc
js
imul
push
pop
cwtl
orl
and
mov
flds
mov
sbb
xor
jae
or
loop
les
jecxz
xor
cmp
lcall
out
sbb
fimuls
sbb
daa
outsl
add
sub
icebp
mov
jno
xor
mov
sub
dec
aaa
jmp
jnp
fdivl
notl
xor
jno
cmc
dec
outsl
lods
push
cli
and
xor
and
xchg
sbb
cld
out
repnz
jnp
mov
mov
sbbb
mov
fwait
mov
push
or
mov
jnp
aad
mov
mov
mov
pop
stos
xor
sahf
fmuls
or
popf
rorb
inc
xchg
imul
mov
scas
lods
push
pop
push
xor
loopne
mov
cmpsl
xchg
mov
pop
fucom
pop
push
cmp
dec
ljmp
sahf
repz
les
pop
pop
pop
inc
jle
sbb
rorl
mov
jne
mov
jns
mov
inc
loopne
out
stc
cmp
aas
adcl
dec
push
imul
sub
addr16
adc
call
notl
rolb
lret
pop
psrlq
leave
xchg
movl
subl
pop
push
sub
xlat
push
xor
or
out
repnz
lcall
andl
arpl
mov
pop
mov
cmp
lods
and
xor
sahf
sar
jb
jne
stc
adc
iret
repz
pop
pop
push
scas
lods
lret
loop
mov
icebp
inc
scas
add
jns
pushaw
data16
xor
push
cmpsb
inc
pop
dec
pushf
jbe
cmp
mov
sub
cmpsb
jmp
je
mov
imull
or
ljmp
mov
std
scas
std
xchg
clc
arpl
dec
mov
pop
loop
mov
sbb
cli
sub
inc
in
fmull
jb
mov
int
iret
mov
aaa
icebp
sahf
movsl
mov
xchg
jnp
test
adcb
adc
dec
cs
daa
jge
pusha
inc
dec
add
out
lock
lds
lods
in
enter
inc
sub
pop
loope
and
cld
mov
lea
jb
mov
test
inc
inc
imul
push
fcoml
ret
mov
scas
std
popa
jno
js
add
add
or
push
loop
or
add
scas
mov
dec
push
ja
mov
repz
jle
xor
aad
jae
mov
gs
pushf
adc
les
clc
sbb
sti
inc
jge
mov
sub
mov
mov
iret
mov
shll
aam
or
hlt
push
xchg
mov
iret
add
add
or
mov
mov
push
xor
pop
insb
stc
and
sub
push
jecxz
dec
mov
out
dec
stc
fadds
in
out
pop
adc
sarl
sub
sti
out
mov
or
sarb
jg
xor
dec
cmp
push
lahf
dec
data16
out
adc
addr16
pop
stc
jmp
into
xor
pop
or
mov
push
mov
mov
mov
test
lods
jmp
stos
ficoml
adc
lea
adc
and
incb
add
xor
movsl
out
out
gs
inc
stos
mov
data16
jmp
adc
xor
xor
mov
inc
dec
dec
pop
push
mov
add
dec
mov
jmp
push
jb
dec
jmp
cltd
cmp
insb
jecxz
mov
sbb
imul
sub
mov
dec
cmpsb
div
pop
cs
mov
in
clc
add
mov
sti
outsl
insb
inc
jnp
push
add
sbb
xchg
sbb
clc
in
sub
sub
xchg
loop
jbe
mov
loope
lods
jb
popf
mov
ja
mov
inc
xor
aaa
adc
dec
repnz
mov
push
ja
jne
push
xor
pusha
repnz
aas
clc
cmp
or
sub
inc
push
sub
pop
rcll
flds
cmp
mov
pop
sbb
cltd
shlb
inc
leave
shll
xchg
inc
and
bound
ficoml
mov
inc
adc
sbb
in
mov
jmp
vrsqrtps
xchg
jb
rcll
pop
arpl
ds
pop
ret
and
jo
leave
mov
add
jg
lret
bound
test
and
or
sub
push
ret
fs
daa
test
and
into
in
adc
cmp
cmp
jnp
cli
das
cld
inc
flds
jae
push
fadds
sbb
stos
dec
js
lcall
sbb
jnp
cmp
inc
loopne
adc
sub
xchg
ljmp
or
mov
add
sti
sbb
rcll
sbb
sbb
mov
sbb
jbe
cli
in
fcoml
xor
mov
push
mov
popf
add
adc
lock
movsb
mov
jne
mov
add
sti
icebp
jae
into
or
mov
in
jae
and
cwtl
inc
mov
fiaddl
js
dec
rcrb
push
push
aaa
xor
pop
ret
pop
adc
ja
loop
add
add
adc
push
js
sub
xor
mov
inc
push
inc
mov
popa
pushf
xor
adc
and
xor
mov
xchg
or
push
adc
mov
iret
sbb
into
insb
js
fstpt
lock
jecxz
fdiv
inc
mov
mov
or
xchg
addr16
std
mov
out
iret
std
xchg
fistpl
xlat
jbe
pop
jnp
and
enter
sbb
sbb
jne
pop
push
call
ss
cltd
repz
mov
cmp
fnstsw
je
int3
jnp
stc
mov
adcb
or
sarl
ficompl
das
adc
leave
in
mov
mov
idivl
mov
aam
cld
jb
scas
mov
push
push
loopne
sbb
jno
inc
inc
pop
dec
mov
adcb
jns
movsb
fdivrs
mov
xchg
addb
ljmp
push
mov
ret
xor
or
mov
sub
enter
lds
popf
lahf
fistl
sub
fistpll
mov
sbb
adc
call
sbbb
lahf
push
sbb
lods
std
aam
mov
negl
xchg
inc
xchg
push
pop
arpl
mov
sbb
or
cmpsb
fyl2x
pop
jb
js
cmp
std
jecxz
push
popf
xchg
mov
push
xchg
xor
movsl
jg
add
cmp
pop
and
pop
jb
sti
idivl
mov
leave
and
or
fstpl
stos
orl
rcrb
shll
sbb
pop
jecxz
or
xchg
sub
jo
fdiv
mov
cli
call
cmp
and
mov
or
pop
ucomiss
hlt
sbb
mov
jle
mov
outsl
aad
daa
or
dec
cltd
stc
jne
adc
das
lods
es
std
das
mov
mov
or
cmp
xchg
iret
jbe
or
iret
xchg
stc
xor
stc
fsubrs
and
xor
push
enter
push
adc
dec
in
aas
jno,pt
sub
in
jbe
rolb
fsubr
imul
arpl
mov
add
mov
shrb
push
aad
jp
inc
call
icebp
jnp
xchg
cmp
and
mov
sbb
add
aam
mov
inc
pop
js
loope
leave
jno
lds
inc
mov
jle
cs
iret
sbb
and
out
and
sbb
cmp
or
pusha
xlat
rol
mov
mov
bound
push
cmpsb
lds
pop
adc
cmp
sbb
and
inc
push
jno
push
push
incl
nop
cmpl
cmc
mov
cmpsl
fbld
push
ret
add
ret
out
jmp
and
jns
subl
movsl
das
xor
sbb
jb
xor
fucomi
popa
dec
pop
pop
jmp
inc
sub
lods
dec
jge
loop
add
or
pop
aam
popa
sbb
add
pop
and
sub
hlt
sub
fcompl
and
loop
mov
jb
test
fisttps
inc
cld
or
addl
sbb
sbb
gs
icebp
or
arpl
testb
les
push
clc
jne
push
adc
out
pop
or
shrb
imul
push
in
pop
leave
or
stos
mov
cmp
gs
mov
movsl
jecxz
stos
je
subl
popa
add
lcall
pop
lds
stos
mov
mov
out
cmc
in
mov
dec
fstpl
fcmovbe
inc
lret
add
inc
inc
cmp
mov
jmp
mov
js
roll
fs
out
sbbl
rclb
loopne
jg
xorl
jmp
mov
pop
ss
xor
mov
cmp
pop
add
xchg
ds
sbb
inc
add
negl
mov
nop
aad
mov
jbe
pop
out
cli
sbb
call
mov
sarl
inc
movsl
cmc
sbb
aaa
mov
mov
mov
testl
ljmp
div
ds
ja
test
subl
inc
sbb
push
push
decl
pop
das
sarl
sbb
adc
jl
lock
xchg
adc
sbb
sahf
pusha
pop
jne
insl
and
jno
cmp
cmp
popa
adc
mov
cmp
loopne
add
pop
mov
ljmp
pushf
enter
aaa
jns
adc
or
leave
mulb
sbb
lods
jmp
call
sbb
push
cmp
loopne
sub
test
ljmp
or
xchg
dec
lcall
jne
jmp
mov
push
stc
fadd
pusha
push
jno
data16
cmpb
outsb
sub
xchg
xabort
jne
enter
pop
dec
sbb
mov
test
add
addr16
xor
nop
mov
add
xchg
cmpsl
nop
daa
xor
push
dec
pop
xor
jbe
cmp
pop
shlb
divl
sbb
sub
or
jp
test
or
mov
cltd
pop
pop
insb
cmp
pop
sub
xlat
and
hlt
jge
into
int
push
out
pop
add
fcomps
jle
push
repz
fcomip
dec
cmp
xchg
nop
int3
fs
or
and
mov
mov
mov
push
mov
ja
pop
mov
lods
cmp
and
dec
pop
lock
or
fldt
les
sahf
or
icebp
mov
out
add
mov
fdivs
lret
mov
shlb
lret
push
das
loop
xlat
xchg
shr
sub
cmp
mov
aaa
mov
in
rcl
mov
and
mov
add
mov
movsb
in
insl
mov
test
pop
inc
je
jb
int
lea
lret
aas
jmp
shrl
sbb
pop
fwait
scas
add
inc
jae
or
mov
sub
mov
xchg
mov
or
cltd
mov
decl
adc
xchg
mov
test
push
mov
in
cmp
inc
daa
fisubs
orl
fldl
xorb
icebp
test
add
into
mov
popf
mov
ret
cs
sbb
icebp
mov
aad
test
jmp
inc
lods
mov
dec
pop
xchg
ret
lret
cmpsl
sarl
ror
or
cmpsb
add
lds
xchg
pushf
gs
pop
cmp
mov
push
int
lahf
fistps
adc
jae
xchg
sbb
sbb
cmp
jl
jg
and
pop
stos
cli
outsl
pushl
lret
mov
data16
push
insb
jp
loopne
ds
loope
lret
pusha
imul
or
out
jecxz
jno
mov
orb
sbb
mov
in
cmp
mov
ss
dec
lds
aam
jns
repz
dec
add
sub
out
mov
nop
mov
repz
lods
adcl
mov
mov
mov
mov
sub
adc
ret
shll
or
imul
lcall
xor
mov
mov
cs
out
xor
popa
repz
sbb
cmp
aas
ljmp
test
dec
push
sbb
movsl
dec
insb
inc
mov
cmp
daa
call
inc
mov
imul
ss
mov
pop
loopne
pop
mov
adc
jge
fcmove
add
test
fildll
dec
lock
sub
xlat
adc
movsl
cmpsl
push
test
mov
mov
or
sahf
movsb
xor
and
test
or
loope
mov
aad
mov
sbb
in
loopne
dec
jo
mov
and
xchg
add
or
inc
sub
and
leave
notl
adc
push
cmp
mov
inc
xchg
popa
mov
clc
add
jmp
dec
les
mov
mov
add
arpl
pusha
std
cltd
inc
lods
adc
es
sub
out
or
push
cltd
gs
dec
mov
jp
out
and
and
shrb
lret
stc
xchg
popf
xor
adc
inc
lcall
push
cld
or
or
and
inc
std
ds
inc
stos
into
and
jns
mov
ficoml
or
dec
and
lret
cli
mov
inc
add
push
push
dec
pop
inc
and
jb
scas
mov
scas
cmp
pop
jne
xor
sub
cmp
imulb
mov
aad
inc
lock
repz
das
jno
enter
call
sbb
mov
inc
in
add
test
dec
and
enter
sbb
mov
rorb
inc
adc
pop
mov
inc
mov
xchg
int
push
cli
scas
ljmp
test
mov
xor
jno
mov
jl
outsb
pushf
mov
rorl
lret
cmp
push
addr16
adc
mov
stc
loopne
inc
xchg
adc
sbb
stos
or
push
imul
mov
inc
mov
or
imul
mov
loope
aaa
or
mov
jno
push
outsb
inc
lock
or
jno
jb
xor
xchg
test
lcall
cli
clc
jo
mov
je
loope
rcrb
xchg
sub
scas
jno
push
mov
xchg
cmp
sub
nop
outsb
xchg
fidivrs
mov
faddl
ljmp
or
cmove
add
sub
and
das
dec
hlt
push
mov
lods
cmpsb
or
gs
fldl
jmp
lret
ljmp
in
jb
xchg
push
cmpsl
loope
push
insb
add
sbb
test
xchg
popa
es
test
cmp
out
xorb
sub
inc
rolb
out
pop
mov
outsl
hlt
cmp
mov
lahf
mov
inc
inc
imul
push
mov
add
test
sub
imul
addr16
sbb
xlat
fs
sbb
xor
fiadds
inc
or
xor
xchg
inc
cs
fildl
jbe
and
mov
jo
call
xor
push
adc
dec
add
jg
pop
push
or
adc
dec
loope
cld
and
adc
cld
pusha
insl
mov
and
in
push
loope
xchg
fstps
mov
or
stos
jo
sbb
inc
sti
mov
mov
clc
stos
adc
mov
out
aaa
stos
xchg
xor
js
push
sarl
sbb
stc
cmpsl
mov
inc
sub
mov
mov
dec
pop
lock
lods
cmp
test
loope
cmp
adc
adcl
mov
cmpsb
ret
push
shrb
and
fldenv
shr
test
sahf
jbe
ret
pop
ljmp
enter
add
fdiv
xor
add
jbe
push
repnz
adc
jb
gs
lods
xchg
sbb
adc
xlat
xchg
mov
sahf
cmp
dec
cmp
ds
and
hlt
xchg
xor
push
ds
shl
jp
test
xor
aas
pop
sti
jno
or
and
movsl
jo
fisttpll
mov
jecxz
mov
adc
pop
mov
cwtl
sub
or
sbb
jmp
adc
pop
ret
lock
mov
stc
dec
lea
jmp
sub
pop
dec
add
pop
ljmp
lret
in
cmp
into
inc
scas
sub
out
cmc
leave
int
mov
pushf
je
mov
mov
and
in
add
fadd
aam
les
jbe
pop
xor
inc
int
popf
pop
mov
mov
cld
pushf
jg
fldcw
cmp
dec
mov
incl
push
and
out
pop
dec
nop
push
movsb
scas
cli
sub
mov
int
sub
iret
lahf
push
mov
daa
cmpb
pop
or
inc
adc
push
push
mov
sbb
ljmp
lock
jnp
mov
cmp
adcb
mov
mov
dec
gs
inc
inc
insb
stos
cmp
sbb
sub
xchg
decb
mov
jmp
add
adc
out
cmp
dec
adc
imul
inc
out
fiadds
push
fcoms
insb
add
aad
sbb
sti
adc
fisubrl
outsl
stos
inc
jp
mov
push
pop
outsl
sub
mov
lds
cwtl
and
sbbl
xchg
in
xor
push
outsb
add
pop
xor
mov
add
add
pop
testl
das
mov
jb
dec
les
mov
xor
cld
push
push
mov
es
mov
lds
out
mov
int
pop
mov
jge
inc
fs
mov
hlt
pop
sub
ret
hlt
fs
mov
sbb
iret
jnp
ss
test
mov
mov
sub
hlt
jge,pt
cmp
inc
and
add
jmp
aas
dec
leave
sti
fwait
ljmp
jmp
sub
xchg
mov
pop
or
or
mov
leave
pop
xchg
add
loop
inc
loope
dec
in
repz
pop
cli
jp
add
in
pop
xchg
bnd
cmp
adc
fs
xchg
int3
add
stc
addr16
mov
int
ret
push
inc
daa
push
push
js
push
fisubrl
sar
add
push
fwait
push
outsb
jnp
cmp
scas
mov
jle
mov
ja
ret
mov
ss
xchg
fs
jmp
insb
pop
aam
les
aam
lods
in
in
xor
and
lods
dec
xlat
subl
scas
testl
push
pop
sub
int
lods
push
inc
inc
das
add
mov
fstpt
mov
inc
mov
cmp
aaa
mov
mov
push
int3
sbb
test
clc
ljmp
scas
loopne
add
or
or
push
sbb
aam
mov
xor
iret
inc
sub
clc
or
roll
notl
mov
mov
das
adc
mov
dec
pop
mov
mov
mov
insl
jno
fs
fdivrs
pop
inc
xchg
xor
int3
inc
test
shlb
jecxz
std
repz
pop
push
stos
cltd
mov
cli
sti
dec
mov
jp
shlb
adc
xchg
scas
pop
xchg
cltd
pop
shrl
call
cmp
cmpsl
push
jle
jnp
test
mov
xchg
bound
push
lret
rclb
stos
decb
and
js
push
pop
lcall
pushf
ret
dec
xchg
xchg
loopne
lods
mov
mov
mov
ret
cmp
or
and
xchg
fnstcw
add
pop
dec
mov
arpl
js
test
icebp
xor
pop
pop
fimull
adc
inc
adc
sub
fcoms
movq
test
push
xchg
inc
stos
pop
pop
and
int3
inc
stc
out
aaa
and
testl
adc
mov
cmpsl
or
xchg
inc
lods
out
leave
xor
stos
add
jl
sub
xor
stos
pop
repz
nop
nop
or
sarb
push
mov
adc
mov
sahf
cmpsl
inc
fsubl
inc
sbb
mov
jl
dec
fs
jnp
fstl
fnstsw
shr
fsubp
mov
adc
cmpb
push
ss
ss
mov
xchg
pop
sub
cs
in
sub
orl
pop
mov
push
pop
cmpsb
pop
dec
and
repnz
adc
push
movsl
add
push
je
sbb
inc
fnstcw
pop
or
je
lret
out
dec
lods
jmp
add
pop
push
inc
push
mov
std
outsb
and
xor
inc
fcmovu
mov
pop
cmpsl
lret
mov
xor
cmpsl
mov
jnp
adc
std
mov
jnp
cmp
xchg
lahf
mov
hlt
js
cld
pushf
inc
leave
push
jae
lds
mov
pop
pop
and
sbb
cld
push
push
and
pop
push
cmpsl
in
into
add
push
mov
adc
cwtl
out
mov
cld
in
xor
enter
fmuls
mov
push
cmpb
adc
mov
mov
test
js
push
or
lods
fsubr
or
rcll
jl
movsl
jmp
xor
push
adc
or
sbb
mov
cmp
pop
test
insb
pop
je
dec
push
daa
arpl
xor
rcrl
leave
test
shl
cmp
incl
in
mov
fisttpll
jp
mov
mov
adc
mov
mov
nop
sahf
ja
inc
cmp
notb
repnz
add
incl
out
mov
cmp
mov
pop
fnstsw
outsl
xor
imul
adc
movsb
xor
loop
and
sub
rcll
std
jecxz
mov
pop
inc
jnp
pop
lret
push
mulb
jecxz
repnz
sti
or
xor
leave
adc
dec
or
mov
jmp
scas
enter
mov
nop
fcomps
lahf
push
imul
jg
jl
ja
daa
dec
pop
push
adc
pushf
out
pop
lea
push
add
test
test
push
xchg
shl
aam
add
inc
lcall
xchg
in
cmp
jge
shrl
jmp
adc
jg
inc
cld
add
adc
push
or
das
bnd
sahf
fs
arpl
jl
inc
or
xor
xor
xor
mov
xchg
cmp
push
mov
mov
jns
lcall
leave
out
mov
orb
xor
lret
fdiv
lock
or
les
add
jecxz
mov
mov
cmp
cltd
int3
fiaddl
mov
xchg
movl
lods
cmpsl
insb
aad
ds
sbb
add
sub
cmp
popa
jbe
nop
fsubrs
test
icebp
rcrl
test
sub
pop
sarl
xchg
jecxz
in
imul
mov
jo
mov
ror
or
sub
cli
lods
scas
jae
add
xchg
hlt
iret
repz
gs
adcb
test
inc
mov
or
sahf
out
adc
mov
pop
adc
stc
dec
mov
insl
mov
test
aad
dec
stos
pop
out
xor
out
and
sbb
mov
test
inc
mov
aad
out
pop
repnz
ret
xor
inc
sub
adc
ljmp
xchg
data16
adc
aas
das
pop
lods
push
inc
iret
cltd
lea
add
xchg
andb
fldcw
pop
pop
xchg
loop
fildl
inc
mov
int
js
frstor
jo
stc
insb
pop
adc
shll
pop
pop
inc
insb
add
fldcw
xchg
clc
arpl
test
inc
pop
and
xchg
int
daa
shlb
xor
ficoms
unpckhps
inc
sbb
test
sbb
or
jmp
pop
stos
jecxz
mov
push
jge
repnz
mov
ret
pop
sub
and
mov
xchg
arpl
scas
popf
mov
dec
out
es
mov
ficompl
movsl
xor
dec
cltd
into
mov
scas
adc
mov
testl
mov
xchg
push
sbb
mov
out
inc
jl
fsincos
pushf
out
sbb
inc
inc
push
cs
inc
cmp
mov
xchg
movsb
add
cmc
xchg
cmp
inc
shrl
out
mov
into
jl
fadds
clc
jne
test
fimull
and
xor
xlat
iret
sub
mov
jno
push
lods
nopl
mov
cmpsl
hlt
stc
ss
xorb
cmp
adc
test
hlt
shll
dec
dec
xor
pop
jg
or
inc
repz
jl
lcall
pop
lea
mov
and
out
ret
mov
call
out
or
test
push
clc
mov
dec
enter
jle
cli
nop
filds
push
cmp
iret
lret
shrb
fs
mov
xchg
mov
jnp
add
insl
out
shll
cmp
pop
push
ret
imul
or
sbb
sub
jg
sbb
mov
hlt
outsl
jno
cmp
stos
adc
pop
bsr
add
aaa
jo
mov
pop
sub
xchg
int3
sub
mov
sub
sahf
aad
pop
mov
sub
dec
mov
cs
arpl
adcl
xchg
mov
leave
lods
aas
pop
es
push
sbb
lret
lods
andl
dec
les
out
shrb
imul
enter
jb
in
bound
adc
lcall
mov
into
sbb
out
test
lahf
jmp
pop
push
ret
loope
pop
xor
push
adc
mov
int
das
les
inc
das
test
xchg
out
pop
jg
std
xchg
or
mov
mov
inc
int3
xor
mov
add
pushf
xchg
xor
in
push
out
push
push
adc
jp
mov
and
xchg
gs
andl
add
cltd
add
cmpsb
test
cmp
pop
rolb
pop
insb
out
adc
ret
inc
dec
xchg
stos
ljmp
xlat
mov
int
xchg
jne
aam
mov
dec
out
into
imul
adc
jmpw
and
lea
xlat
lock
mov
adc
pop
stos
mov
jns
loop
hlt
stc
inc
xchg
cmpsl
add
jge
stos
fildll
sti
dec
jmp
repnz
mov
repz
inc
dec
xor
arpl
je
cmp
fsubrl
mov
sahf
in
ja
into
insb
daa
pavgw
out
dec
stc
aam
mov
inc
adc
gs
test
ss
aas
fwait
mov
ljmp
push
xchg
jg
stc
iret
or
add
or
push
sbb
adc
adc
mull
mov
push
dec
push
push
xchg
lret
inc
dec
mov
pop
in
gs
mov
push
aas
insl
dec
scas
push
fnstenv
sarl
jg
cmp
jnp
fwait
sbb
js
sbb
test
insl
ret
xor
imul
xlat
addl
out
je
mov
in
xchg
icebp
aas
jge
jle
ficoml
shll
test
mov
in
roll
push
sub
or
xchg
dec
push
mov
dec
mov
cmc
fcmovu
sbb
ja
fwait
ss
dec
xchg
mov
dec
mov
mov
jo
sbb
call
pushf
pop
mov
test
stc
dec
cmp
testb
inc
push
leave
test
sub
rcrb
in
adc
mov
movsb
mov
mov
cli
and
adc
stc
add
adc
in
mov
test
jne
cmp
test
add
shll
xor
rorb
call
inc
pop
xchg
pop
lcall
jmp
jl
jp
sbb
imul
add
mov
xchg
lock
rol
pop
mov
xor
push
out
jmpw
cwtl
nop
jp
jge
rcrb
iret
sti
loop
add
ror
scas
ss
pusha
pusha
push
jp
inc
jle
lcall
std
into
das
das
xlat
loop
sub
mov
stos
ret
das
in
mov
sub
scas
pop
pop
add
popa
jo
mov
das
std
imul
pop
orb
lock
cwtl
mov
ljmp
push
divb
pusha
dec
repz
in
jmp
jl,pn
outsb
mov
scas
fidivl
imul
jne
xchg
push
mov
dec
les
scas
cmpsb
jl
shrl
add
sub
add
mov
and
and
dec
mov
fists
test
ljmp
adc
ss
dec
adcl
xlat
andl
dec
std
and
jnp
mov
sub
aas
rclb
mov
lea
xor
les
cmp
pop
mov
fstps
test
adc
xchg
sahf
inc
xchg
daa
out
popl
sarb
fs
popf
mov
cmp
add
cltd
inc
xor
mov
sbb
and
arpl
cld
addl
and
push
lcall
lret
or
jp
adc
scas
cmp
out
mov
je
or
push
add
adc
popa
dec
pop
pop
push
cmp
fldcw
jbe
shrl
enter
push
gs
clc
xchg
leave
and
std
push
mulb
pop
mov
push
mov
jg
cwtl
mov
loopne
sub
sbb
pop
lods
jo
push
lods
and
xor
dec
push
inc
jbe
push
mov
ja
stos
lea
xchg
test
dec
loop
outsl
int3
lret
jp
leave
sub
aaa
aas
icebp
sahf
stc
mov
into
mov
decb
sub
cmc
add
inc
xchg
bound
call
fucomp
jno
xchg
ret
mov
call
and
push
inc
stos
mov
or
jo
jnp
or
hlt
fsubrl
xor
xor
pop
add
incl
push
jb
mov
jmp
sbb
cmp
clc
aam
std
mov
out
pop
sarl
insl
mov
mov
mov
scas
xchg
js
inc
dec
jecxz
and
shlb
sbb
addr16
jmp
add
mov
pop
je
aas
repz
push
adcb
cmp
and
testl
sbb
pop
xchg
popf
add
add
and
dec
push
iret
jae
dec
jnp
sahf
scas
int
sbb
push
or
sub
ljmp
rol
jnp
sti
jb
cwtl
dec
insl
and
mov
prefetch
dec
sbb
daa
bound
push
inc
jno
sbb
ljmp
in
test
dec
pop
inc
add
cld
sarl
inc
leave
inc
sarl
xchg
xor
ss
sbb
in
xchg
dec
shrb
jo
cmp
cmc
and
es
cwtl
dec
dec
push
aad
pop
xor
lods
testl
lcall
in
dec
outsl
imul
das
dec
xchg
dec
jb
jmp
mov
mov
scas
fwait
jmp
mov
jbe
aas
pop
rol
aam
add
sub
mov
xor
dec
pop
lods
bound
pop
jp
jns
hlt
mov
fsubr
ljmp
mov
push
dec
int3
fiaddl
cld
or
dec
pcmpgtb
jns
xchg
xchg
fldcw
xchg
push
mov
mov
adc
data16
into
int
hlt
fistl
scas
pop
fs
add
mov
sti
sbb
xor
add
mov
jns
xchg
loopne
das
lcall
insl
add
fcomps
popa
lods
pop
int
and
push
lods
sahf
jne
push
daa
adc
cmp
or
adc
mov
xor
inc
pop
fisubrl
push
hlt
rcrb
aaa
sub
adc
add
cwtl
scas
ss
nop
dec
dec
xor
aaa
cmp
ds
fisttps
pop
idivl
pop
mov
inc
cmp
mov
xchg
mov
cmp
popa
push
mov
or
jns
sbb
and
jl
jmp
decb
fnstsw
ds
stos
jmp
cmp
pop
adc
xchg
lds
mov
pop
iret
lods
sub
into
call
cmp
xor
fwait
into
js
sbbb
gs
mov
data16
mov
mov
pop
lcall
js
fimull
je
jg
and
int
or
xor
sbb
push
je
testl
sti
daa
push
int3
fiadds
xchg
xor
ja
xor
mov
outsb
xchg
call
outsb
mov
sbb
pop
mov
aam
sti
rol
sbb
movsb
dec
jae
mov
jg
stc
inc
pop
and
out
outsl
popa
xchg
pusha
in
sbb
dec
jmp
or
mov
sub
divl
idivb
test
fcomps
shrl
mov
das
js
ret
cli
rcll
add
xchg
push
stos
jo
into
mov
ret
mov
mov
mov
jnp
cbtw
icebp
pop
cmc
sub
mov
iret
inc
sub
add
pop
mov
hlt
pusha
cltd
add
add
jb
rclb
sbb
xor
dec
sbb
dec
loope
and
dec
inc
add
inc
cs
scas
aam
mov
push
fists
jae
push
jl
mov
clc
fbld
addr16
call
mov
and
push
cmp
push
pop
mov
inc
lods
outsb
jnp
jle
mov
loopne
pop
xchg
push
fxch
mov
cwtl
inc
rclb
inc
xor
imul
fbld
lret
out
leave
loope
add
push
in
adc
jno
nop
jl
push
dec
outsb
ror
int3
faddl
ret
sub
adc
cmp
dec
cli
add
inc
bound
mov
dec
fs
and
dec
jb
in
xchg
or
push
or
mov
cmp
push
addl
popa
add
cli
out
enter
out
imul
pop
out
cmp
or
outsl
aas
mov
jle
loop
jge
js
xchg
ljmp
xchg
pop
jecxz
das
test
insb
inc
sub
int3
std
cmpl
loope,pn
addr16
daa
cmp
out
cltd
test
or
dec
sbb
pop
test
test
insb
or
imull
xor
inc
pop
addr16
cmc
or
mov
rorb
dec
and
push
xchg
out
outsl
in
std
xchg
mov
shl
sub
inc
in
loope
cmp
aam
lret
jl
pop
fwait
inc
sahf
cld
inc
mov
lret
and
sub
push
in
dec
dec
out
dec
movsl
mov
fcomps
das
and
push
cmp
add
dec
fdivrs
bound
cli
push
inc
adc
mov
pop
pop
mov
sbb
sbb
jno
insl
push
pop
jmp
fistpll
in
data16
jbe
insl
push
sub
inc
pop
sbb
mov
mov
xor
cld
sbb
test
pop
out
ret
nop
rcrl
in
ret
dec
test
int3
loopne
dec
jo
test
push
cmp
mov
jno
outsl
xor
or
repnz
mov
adc
xchg
push
loopne
pop
out
cli
test
repnz
jmp
adc
lods
fwait
sbb
and
inc
lret
out
mov
insl
aas
pushf
inc
push
in
and
movsl
loope
hlt
pop
sub
inc
jp
bound
and
stos
mov
jno
movb
pop
cmp
cmpsl
test
sub
mov
mov
and
mov
sbb
mov
jg
mov
rcr
test
lods
pop
lahf
mov
jno
push
lcall
mov
xchg
sbb
xor
cmp
mov
xchg
xchg
or
jmp
push
in
add
fsubs
pop
sbb
lods
or
push
inc
iret
test
int
lret
call
lret
mov
pushf
inc
or
bound
in
mov
sub
bnd
jecxz
inc
adc
pop
stos
int3
fs
pushf
test
in
and
rol
cmp
jo
cmp
shrd
push
test
mov
out
aas
stc
in
xor
mov
sbb
push
insl
ficoml
fcomps
out
and
mov
cmpb
vpsubw
out
es
lahf
lea
or
mov
test
lahf
jne
jnp
or
fs
ljmp
mov
push
mov
xor
popf
clc
jo
fisubl
movsl
jmp
xchg
into
clc
fcomps
xor
inc
jge
bound
push
dec
push
adcb
jno
sbb
shll
lds
pop
lcall
pushf
xor
add
scas
lcall
sbb
in
jae
fsubr
fsubrp
sbb
std
ds
test
xlat
test
imul
mov
test
fnstcw
fucomp
into
mov
xor
movsl
lods
or
aad
sbbb
loope
or
inc
sti
jmp
mov
inc
add
inc
ds
imul
sub
in
dec
divb
lret
test
and
mov
popl
rorl
je
xchg
mov
je
lret
xorb
cmc
mov
shll
pusha
mov
leave
adc
mov
pop
push
in
lcall
data16
sti
jp
mov
sahf
dec
sub
jns
scas
push
aaa
mov
enter
imul
out
pop
fs
sbb
ret
add
data16
cli
push
sub
pop
or
mov
daa
ret
mov
test
orb
and
popl
mov
mov
mov
push
loop
jge
push
push
inc
xor
adcb
sub
out
sbb
and
jo
test
push
xchg
inc
mov
adc
mov
aam
xchg
pop
xor
xchg
in
mov
scas
insl
stos
xor
das
fmuls
push
mov
push
add
jge
pop
test
mov
pop
jle
es
out
pop
push
andb
int
push
notb
sbb
cmpsl
push
sbb
inc
lret
cmp
daa
call
ss
or
ds
mov
adc
xchg
and
mov
push
mov
lock
push
mov
int
mov
cmpsb
test
leave
and
sub
imul
push
xor
lea
stos
mov
rcll
iret
jp
inc
xchg
cmp
repnz
mov
je
inc
outsl
out
dec
lods
js
add
mov
mov
cmpsb
inc
mov
repnz
popf
mov
xor
sbb
les
bound
int3
sarl
adc
jbe
lcall
repz
lcall
push
dec
push
aaa
dec
cmp
jl
test
mov
pushf
lds
jmp
bts
mov
std
or
addr16
dec
xchg
aaa
mov
pusha
into
and
mov
adc
sbb
mov
sbb
fisttpl
int3
aas
movsl
orb
enter
insl
leave
inc
xchg
and
cmp
div
pop
cld
decl
pusha
repz
lcall
daa
inc
sub
cmp
dec
icebp
mov
pop
in
jge
mov
sar
sub
adc
dec
cmp
fidivrs
xchg
sbb
fistpl
pop
push
pop
frstor
stc
lcall
test
inc
mov
lods
mov
inc
cmp
mov
mov
sbb
idivb
mov
ret
push
mov
lods
fildll
fs
out
pop
lds
pop
ficoms
data16
daa
test
pop
cli
es
xchg
adc
cltd
imul
jnp
mov
push
sub
pop
push
jmp
sub
mov
lods
aaa
xchg
mov
or
jo
mov
jns
push
iret
les
and
push
xorl
mov
cs
dec
sbb
xchg
in
push
mov
push
add
sub
xorl
in
sarb
inc
ss
adc
or
push
mov
cmp
dec
pop
aad
hlt
jnp
dec
dec
mov
je
stos
pop
cmp
lcall
pushw
jbe
into
or
stos
test
mov
sub
xchg
jnp
add
dec
mov
jae
int3
jp
cwtl
test
imul
inc
fildll
sub
fdivr
ss
clc
add
roll
or
rcr
jne
adc
mov
js
inc
cmpsl
inc
mov
movsl
mov
mov
jbe
mov
sbb
arpl
push
mov
sub
pop
pop
xchg
std
pop
popf
insb
jecxz
test
neg
in
bnd
push
adc
jae
mov
das
pop
dec
lds
fs
ja
imul
add
push
mov
mov
jl
mov
ret
cmp
jle
inc
rol
mov
lret
repnz
inc
adc
jecxz
testl
ret
dec
mov
mov
cmpsl
ss
xchg
shrl
lock
das
imul
call
sub
jmp
pop
rcr
imul
pop
insb
in
or
lret
mov
out
xchg
pop
imul
mov
push
pop
sub
jo
repnz
lea
scas
mov
lahf
sub
push
inc
jp
add
jae
ret
mov
roll
pop
sahf
mov
rcll
xchg
adc
repz
sbb
mov
cmp
or
mov
not
pop
lret
sbb
fnstenv
mov
push
fimuls
and
push
das
xchg
mov
dec
and
dec
dec
sar
movsb
xchg
decb
mov
inc
aad
mov
mov
push
mov
repz
cmp
mov
jecxz
shrl
setp
sbb
sub
lcall
lock
jbe
mov
out
adc
ljmp
and
mov
das
out
adc
out
or
pop
cmp
and
loopne
popf
insb
mov
mov
imul
mov
int3
cmpsl
adc
xor
int
mov
popf
outsb
subb
cmpsb
imul
adc
mov
ret
dec
pushf
call
imul
jg
adc
test
xchg
lods
pop
pusha
ds
int3
fstps
sub
adc
je
ss
sub
push
ja
out
sub
aas
add
inc
push
and
bound
fmul
adc
ret
imul
and
mov
cltd
leave
in
popf
push
xchg
cmc
jmp
sti
add
sub
and
sahf
mov
shl
leave
loop
sub
add
mov
sbb
cwtl
adc
xchg
cmp
imul
xor
insl
adcl
fistl
xor
inc
in
fists
int
jl
or
int3
or
movsb
dec
jl
xor
and
sahf
jbe
jge
dec
shll
xor
and
incl
mov
popf
shrb
xor
or
lcall
in
test
mov
mov
mov
sub
lcall
sbb
insb
push
sti
ret
dec
and
sar
nop
clc
sub
mov
cmp
sbb
in
ds
push
out
pop
stc
insb
lea
sbb
xchg
loopne
es
arpl
lret
jmp
xchg
cmp
test
and
or
adc
loop
jmp
outsl
subb
cmpsb
fisubs
mov
push
inc
ljmp
cwtl
xor
cmp
or
rcrb
fwait
xchg
sbb
popa
jnp
inc
xchg
mov
lret
test
out
imul
pop
pop
fmul
sub
mov
js
jbe
or
in
push
testl
push
mov
jg
cs
mov
scas
sub
adc
mov
cmp
cld
call
adc
hlt
in
adc
mov
test
jae
clc
pop
ja
add
and
sbb
jo
cmpsb
adc
push
outsl
std
mov
pushf
jle
pop
inc
lret
mov
add
xchg
jbe
or
mov
push
sahf
xchg
out
xlat
daa
scas
adc
int
outsl
adc
or
push
into
je
notb
ret
jl
pop
mov
je
mov
xchg
sbb
outsl
lock
fnsave
fstps
cmp
loop,pn
add
push
mov
repnz
aas
fistpll
insl
jl
gs
into
dec
and
jno
or
movsb
mov
mov
divb
dec
pop
and
fwait
jno
xor
aas
std
mov
sbb
push
lcall
lret
mov
sub
in
stc
cld
ljmp
mov
imul
ja
fsubs
and
jae
movsl
push
mov
push
sub
ret
mov
test
add
cmp
xor
jecxz
test
clc
jnp
mov
cli
push
xor
xchg
or
push
mov
mov
sbb
mov
movsl
mov
inc
dec
adc
mov
pop
in
rcrb
in
cltd
rorb
pop
or
fwait
aaa
and
aaa
pop
inc
test
ret
in
cmp
faddl
loope
push
popf
or
mov
add
sbbl
fsubrs
cmp
jne
pop
fidivs
mov
fsts
lahf
cwtl
cmpl
clc
bound
push
xor
fcmovb
ds
push
xchg
hlt
mov
loopne
xor
jae
fstl
add
lahf
jne
gs
dec
jmp
adc
mov
xchg
cld
pop
cli
stc
out
idiv
xor
insb
cmpsl
jge
jo
jl
xchg
jb
les
scas
repnz
push
jp
loopne,pn
mov
lret
addr16
arpl
jae
data16
lea
jb
lods
sbb
mov
cltd
aam
jnp
outsb
hlt
mov
sahf
movsl
cltd
jb
loopne
pop
dec
xor
repz
daa
xchg
or
in
daa
test
dec
int3
and
add
in
mov
mov
dec
divl
pusha
xor
or
imul
adc
xchg
repnz
xchg
and
sti
test
fldl
ret
mov
jecxz
aad
test
mov
xorb
adc
imul
lret
clc
mov
iret
jge
xchg
add
mov
jp
add
mov
in
iret
loopne
outsb
popa
push
es
cltd
imul
dec
push
inc
jg
fimull
or
jmp
fadd
cmp
pop
lea
fildll
bound
mov
in
sub
mov
and
inc
mov
jmp
dec
add
add
push
push
insb
mov
mov
dec
sbb
popa
nop
push
cmp
sub
adc
cltd
adc
rol
add
inc
cmp
add
add
sub
invd
orps
outsb
lahf
jge
sti
cmpsl
decl
lods
std
shll
dec
shr
mull
cmpsb
jmp
je
jl
daa
mov
cmpsl
inc
xchg
iret
mov
jmp
push
fwait
pop
jp
stc
adc
fwait
test
out
pop
cld
jge
mov
hlt
std
cld
mov
or
inc
daa
daa
aas
inc
scas
sbb
jp
cltd
aad
sbb
jle
stos
fiadds
sbb
lock
jne
xchg
mov
ficompl
or
ss
dec
lods
rorb
ds
jge
imul
sbb
out
jg
sbb
in
push
icebp
mov
sbb
mov
dec
adc
cmp
loope
stos
int
ja
jp
sti
cld
sbb
iret
pop
cmpsb
jo
fisubrs
adc
or
mov
daa
insb
lret
push
mov
pop
pop
aam
cmp
stos
fwait
xor
shlb
jmp
and
push
jmp
in
lock
xor
xor
add
scas
xchg
xor
xor
cmp
data16
and
mov
mov
jecxz
or
inc
dec
repnz
sub
pop
push
xchg
adc
sub
mov
dec
pop
dec
mov
cmp
push
pop
std
repz
movsb
imul
jl
inc
xorb
pop
and
jb
testl
push
and
push
call
jle
movl
cmp
int
xchg
cmc
jbe
and
das
jle
daa
ja
inc
stos
gs
xchg
and
add
jae
adc
aam
test
or
test
or
outsl
pop
push
pop
xchg
rcrl
rolb
addr16
jecxz
loope
lcall
inc
rcr
adc
jmp
lods
cli
leave
cli
pusha
mov
cmp
movsl
cli
cwtl
push
sub
and
or
imulb
jl
and
sbb
cltd
pop
je
fists
cmp
add
fdivs
stos
inc
jge
fs
cmp
in
aas
cmp
fwait
movhlps
xchg
mov
pop
shll
xchg
dec
pop
pop
xor
sbb
ja
adc
cmc
pop
bound
insb
add
fcompl
ds
mov
pop
jle
das
aam
cltd
mov
xchg
lcall
movsb
ja
cmp
mov
lcall
addr16
push
adc
mov
outsb
xor
in
cs
stos
mov
mov
leave
out
xor
leave
xlat
dec
push
pop
fstpt
js
mov
jnp
jmp
or
leave
aas
enter
xchg
add
call
dec
push
pop
arpl
lods
cmp
sbb
mov
sub
hlt
mov
pop
pusha
mov
fimull
hlt
dec
lcall
jmp
push
pop
aad
insb
orb
cli
cmp
lods
int3
idivl
enter
arpl
idivb
jns
lea
loope
push
xchg
pushaw
xor
fdiv
ja
cmpsb
out
pop
sub
mov
lret
mov
lahf
inc
cmpsb
js
out
xor
and
mov
sbb
sub
popa
pop
jbe
xor
dec
hlt
pop
pop
xchg
xor
insl
xchg
inc
ss
bnd
adc
cmp
adc
mov
jl
xor
js
imul
daa
cmpnleps
std
xchg
adc
push
rorl
stc
lahf
sub
setbe
arpl
js
jnp
xchg
outsl
sub
bound
dec
stc
and
fs
cmp
cmp
popa
adc
mov
mov
mov
push
gs
aam
mov
push
jb
inc
icebp
ret
push
adc
jnp
sub
push
push
cmp
out
push
repnz
xor
fisttpll
ret
incl
sub
insl
inc
fisubs
xchg
movsl
mov
pop
xchg
mov
push
neg
in
shlb
insl
push
xchg
pop
leave
mov
fnstsw
cmp
rolb
mov
inc
ja
adc
loopne
jbe
js
sbb
push
xchg
xor
shrl
fsubr
lret
jp
ss
mov
fdivr
aam
lock
dec
mov
movsb
jg
cltd
dec
xor
ja
fildl
pop
cmc
lock
dec
sbb
imul
sarl
mov
aam
dec
add
jmp
cwtl
popf
add
cmp
outsl
cld
aas
mov
ljmp
lock
idivl
imul
out
pop
stc
pop
sbb
pop
push
jp
push
and
in
push
mov
xlat
mov
js
addr16
sti
pop
addr16
push
push
imulb
jbe
adc
test
cmpsb
xorb
push
xor
shlb
mov
mov
fisubl
dec
ljmp
xchg
or
pop
sarl
bound
sub
loopne
lret
stc
data16
cld
mov
mov
or
or
inc
stc
das
pop
enter
cmp
into
pop
and
push
mov
insl
mov
nop
jl
dec
mov
mov
sub
mov
and
mov
xor
push
xchg
mov
push
rorl
lahf
decb
sbb
xor
lcall
subl
mov
adc
lods
imul
adc
mov
js
xchg
stc
add
dec
pushf
adc
faddl
aas
pop
mov
pop
cltd
ficomps
mov
icebp
stos
mov
or
pop
mov
loopne
xchg
push
rcrb
jmp
cmp
bound
int
loop
xchg
int3
mov
dec
arpl
lods
clc
out
inc
xchg
in
jns
ja
mov
notb
and
push
sti
and
mov
inc
mov
or
xchg
ja
aaa
xor
lods
cmpsl
pop
cmp
xor
sahf
lock
ret
add
xlat
or
rcll
mov
sti
lock
sbb
clc
inc
cmp
icebp
adc
in
lcall
test
xchg
xor
pop
dec
rorl
rcll
pop
stos
xchg
ja
lret
or
repnz
orb
jmp
testb
pop
inc
jg
iret
test
mov
push
notl
leave
or
xchg
mov
jnp
into
loope
mov
mov
xor
mov
push
mov
mov
cli
ja
lods
pop
sbb
sub
pop
movsb
and
stc
hlt
mov
leave
jge
mov
pop
adc
arpl
mov
sub
sahf
leave
out
add
dec
adc
pop
and
jb
add
mov
movsb
xchg
stos
or
mov
sub
lahf
inc
pop
xchg
xchg
inc
aad
push
mov
testl
add
mov
cmp
outsl
push
mov
sahf
and
xor
ret
push
scas
cmp
lret
cmp
lcall
lahf
std
lods
das
inc
xchg
cmp
popf
ret
dec
fnsave
jmp
add
xchg
cs
pop
and
xor
subl
jecxz
and
inc
sbb
call
ss
mov
pop
adc
jae
imull
int3
add
mov
push
jg
mov
push
cwtl
push
stc
ja
int3
lock
cltd
imul
add
sbb
mov
jnp
sbb
dec
idiv
dec
push
and
mov
add
mov
scas
mov
shrb
ds
sarl
cld
sarl
cmc
push
sub
loope
sub
adcb
leave
stc
fidivrs
out
mov
push
mov
sub
xchg
dec
out
les
xchg
push
roll
loop
icebp
mov
loop
aam
shl
shl
adc
scas
dec
arpl
fdivrp
sbb
mov
mov
clc
cwtl
cs
lret
aaa
std
call
or
cmp
mov
in
mov
cmp
wrmsr
add
cmp
cli
aaa
jg
aaa
push
and
mov
push
int
stos
jnp
pop
push
add
cmp
push
rcrb
sub
out
shlb
ja
loopne
xlat
mull
adc
enter
andb
cmpsb
pop
lods
out
gs
push
idivb
das
std
je
or
imul
mov
adcb
cmp
cmp
mov
sbb
dec
mov
push
xlat
and
push
and
push
xchg
test
inc
lcall
xchg
xchg
fbld
js
sbb
pop
sbb
cmp
cmp
pop
sub
push
fisttpll
lds
sub
stc
popa
imul
lock
add
ja
xor
mov
push
lret
fidivs
pusha
iret
dec
mov
out
xlat
xorb
cmp
cld
ret
xlat
mov
mov
iret
loopne
stos
push
mov
call
sbbl
xlat
sbb
mov
call
push
jno
ficomps
jg
add
sbb
pushf
enter
aam
xchg
or
adc
rcrb
aad
mov
in
pop
fmull
and
aaa
inc
push
add
in
fcmovu
mov
clc
dec
mov
xor
adc
mov
mov
shlb
scas
mov
sbb
pop
ret
jp
lcall
fadd
das
jle
pop
push
cmpsb
jo
mov
dec
bound
jbe
inc
stos
outsb
add
mov
jge
ficomps
xorl
ret
mov
or
mov
xchg
test
pop
mov
push
int
jae
xchg
inc
and
imul
mov
iret
scas
add
subl
aad
and
scas
dec
mov
stos
inc
rcrl
add
cmp
mov
popa
bound
pusha
or
out
pop
dec
aas
mov
cmc
xor
jmp
stos
push
shlb
in
lcall
inc
pop
xchg
cld
ret
adc
arpl
cmp
jno
push
mov
jle
pop
jns
cmpb
cmp
pushf
xchg
adc
adc
jne
cld
sti
jmp
sub
jo
add
jge
cmp
roll
jno
xor
jbe
push
dec
sbb
js
cmp
xor
or
xchg
dec
cmp
fidivs
cmc
jle
cmp
sub
lcall
xor
xchg
orl
movb
lock
xor
les
xchg
imul
adc
fcomps
out
cli
and
sub
enter
fldt
jl
dec
aaa
push
add
mov
jp
dec
jecxz
add
in
cwtl
out
dec
or
jle
iret
mov
les
push
fmuls
sbb
in
dec
sbb
xor
pushw
sbb
or
lret
inc
inc
sbb
ret
arpl
sub
shlb
inc
inc
out
cwtl
pop
cmp
bound
xor
ljmp
rorw
mov
fcmovnbe
rorb
in
adc
jo
jl
sub
jmp
lcall
jg
adc
out
push
pop
loope
push
sbb
in
jg
imulb
mov
sbb
insb
push
xor
push
and
push
std
dec
sub
shll
out
jmp
data16
cmpsb
push
test
call
je
mov
aad
push
adc
mov
add
adc
xor
add
fdivrs
clc
mov
dec
cmp
ss
jecxz
out
dec
adc
inc
push
jae
adc
repnz
scas
out
arpl
jmp
popa
into
imul
pop
adc
shrl
pop
mov
pop
push
and
push
mov
mov
mov
pusha
push
lods
enter
sbb
xor
mov
jle
aaa
push
jbe
mov
sub
dec
jp
int
pop
les
leave
imul
into
or
jp
xchg
and
inc
xor
sbb
ja
in
cmp
ficomps
mov
shll
fidivrl
pop
shll
cmp
pop
adc
mov
fbld
push
insb
mov
inc
popf
mov
mov
xor
adc
mov
adc
xchg
pop
jne
cmc
push
popf
lret
mov
addr16
pop
push
and
lods
or
lea
pop
add
or
xlat
or
in
pop
repnz
in
cmc
mov
insl
cmp
lock
sbb
fdivp
push
mov
jo
mov
jb
jp
xor
pop
lret
pop
jnp
mov
cmp
cltd
jmp
aas
cmp
mov
lret
or
das
lds
subl
dec
or
or
ja
push
jb
mov
mov
faddl
dec
mov
dec
pushaw
icebp
not
lcall
sbb
mov
inc
les
out
icebp
cltd
fstl
or
mov
negb
mov
add
sub
mov
lock
data16
jo,pt
fdivr
das
lahf
add
jnp
dec
pop
and
dec
xor
aaa
in
add
cmp
xor
aam
inc
push
cmp
cmp
jl
dec
jb
sbb
or
inc
out
adc
or
aaa
dec
sbb
mov
rcl
es
je
cmpsb
clc
push
or
mov
mov
movsl
dec
test
leave
push
push
pop
push
lret
xchg
inc
repz
stc
dec
mov
inc
mov
lods
adc
inc
mov
aam
pop
jne
pusha
ljmp
bound
pop
lea
mov
lcall
jnp
cmp
mov
out
xor
mov
popa
hlt
cmp
icebp
data16
mov
stc
gs
lcall
xchg
inc
decl
pusha
into
inc
pop
in
pop
sub
fwait
into
adc
fstl
ret
adc
jae
pop
jnp
mov
frstor
ds
sti
cld
and
jmp
jns
movsb
cmp
insl
sbb
sbb
xor
popf
movsl
es
push
lret
test
mov
push
add
out
dec
shlb
cmpsl
sbb
rclb
ret
add
loope
in
leave
xor
mov
daa
mov
jmp
vmaskmovdqu
push
jno
and
xchg
iret
out
sub
pop
pop
adc
dec
call
jno
add
in
test
mov
sbb
pop
out
daa
pop
test
insl
pop
jne
and
dec
jmp
addr16
test
adc
adc
sub
dec
in
daa
mov
jbe
lods
les
stos
push
cld
xor
mov
sub
jmp
xor
adc
inc
mov
enter
pusha
nop
clc
push
xchg
mov
adcb
negb
push
scas
sahf
add
push
and
aas
jbe
repnz
pop
xchg
clc
push
xchg
mov
lds
xchg
mov
jmp
ret
sub
addl
jae
pop
xchg
sub
mov
sub
adc
mov
jb
dec
add
jb
pop
inc
call
test
jg
out
pop
pop
daa
inc
aad
or
sahf
pop
and
cmc
mov
sub
fisubrl
xor
xchg
mov
icebp
jnp
test
insl
lcall
scas
stc
hlt
test
or
sbb
fwait
in
push
push
push
mov
popa
xor
pop
sub
loope
insb
or
cmp
jns
push
xchg
sbb
sbb
int
add
jp
mov
loopne
mov
sbb
call
cld
and
out
xchg
call
lods
cmp
cmp
sbb
jns,pt
fmul
fsubs
jp
adc
inc
add
ficomps
aam
loopne
lahf
test
add
xor
push
pop
dec
add
je
mov
lods
pop
xchg
inc
sub
pusha
lods
lcall
jns
stos
rorl
dec
and
out
inc
mov
test
fsubs
loope
jmp
aad
iret
add
je
or
mov
xchg
push
ficoms
adc
xchg
add
sub
xor
inc
mov
xor
movsl
shrb
xchg
mov
repz
aam
sbb
push
sbb
fsubs
mov
or
and
push
inc
imul
aas
xchg
sahf
mov
into
les
movsl
gs
pop
scas
inc
adc
xchg
js
es
insb
cmp
inc
shll
out
and
jmp
pop
repnz
stos
fmul
push
daa
cs
aaa
lsl
pop
pop
ret
popa
nop
in
sbb
push
pusha
lods
dec
or
mov
mov
fsubs
les
pop
push
push
dec
enter
and
out
in
jnp
das
cmc
or
hlt
push
fwait
xchg
jae
mov
ficoms
cmp
lods
ss
or
test
in
jecxz
and
into
stos
adc
sahf
cmp
sub
imul
mov
ret
das
fnstsw
enter
sub
xor
divl
jmp
adc
dec
fwait
cmp
rsm
cmc
sub
and
std
inc
pop
sub
ljmp
pop
mov
xchg
push
loopne
cwtl
cmp
pusha
popl
push
out
fadds
leave
push
stos
inc
leave
stos
and
out
in
pop
popa
push
jo
stc
and
icebp
fistpll
mov
test
lret
ficompl
push
repz
xchg
add
sbb
and
pushf
ret
popa
in
sbb
lcall
add
xchg
movsb
cltd
add
ret
cwtl
dec
mov
mov
dec
sub
jbe
adcl
cli
les
imul
fbstp
and
xor
jecxz
xor
pop
and
test
in
xchg
ds
or
mov
pop
pop
adc
inc
rcll
dec
test
js
xchg
mov
scas
cli
mov
cmp
pop
out
fisubs
mov
jbe
mov
out
push
mov
inc
cmp
mov
inc
loop
hlt
cmp
ljmp
push
lods
fidivs
rcr
sub
xchg
add
and
gs
adcl
popa
inc
ja
lret
mov
fsubr
adcb
xchg
jge
xor
pop
mov
lock
inc
inc
stos
fwait
add
or
mov
mov
dec
test
and
adc
and
xor
xchg
and
mov
ret
sbb
call
dec
mov
movsb
rcr
jmp
sub
les
iret
test
dec
xchg
les
jbe
ds
pop
pop
jle
ret
pop
lcall
cmp
adc
xchg
mov
aad
push
add
cmp
arpl
incl
int3
adc
leave
bound
adc
rcl
out
inc
pop
ficoms
mov
nop
rclb
pop
pop
inc
xor
test
loopne
loope
xor
mov
rcr
cmpsb
xchg
int3
or
dec
xchg
or
fcom
mov
fisubs
dec
mov
jp
and
in
dec
mov
enter
or
mov
lcall
mov
movsl
dec
mov
pop
shlb
sbb
sbb
add
movsb
mov
daa
sbb
add
out
xor
mov
lods
aad
mov
pop
or
mov
adc
cmpsb
inc
negl
testb
pop
psrad
jl
data16
mov
mov
mov
hlt
fistpll
cmp
pop
and
cli
das
test
dec
sbb
lret
cmp
mov
lret
out
dec
clc
xlat
mov
cld
in
out
or
pop
std
ljmp
adc
test
out
int3
out
psubusw
inc
fwait
je
sub
mov
dec
xchg
xchg
jp
cmpsl
sbb
mov
xchg
jae
fwait
add
fstps
mov
cmp
outsb
mov
jno
push
cmc
pop
xor
dec
jb
xor
iret
das
pop
filds
stc
mov
pop
or
insb
int
sarb
mov
inc
loopne
rcrl
mov
in
gs
and
test
nop
jp
inc
lret
sbb
pop
loopne
jmp
jle
call
or
imul
or
dec
loope
inc
add
mov
pop
push
add
jo
jne
testb
pop
add
out
imul
push
lds
jmp
adc
adc
mov
cs
mov
cmpsb
mov
lret
or
rcr
leave
adc
inc
ret
xor
arpl
and
mov
es
iret
ja
es
push
inc
imul
xchg
mull
pop
lods
jae
inc
xchg
loop
cwtl
stos
out
add
mov
sub
add
cltd
xchg
into
leave
cmc
shlb
aam
fiaddl
cmp
hlt
int3
jmp
fdivrs
adc
loope
pop
rcr
dec
out
jns
fildll
and
add
addr16
loop
jns
sar
pop
dec
cmp
add
xor
stc
hlt
rcll
stc
dec
idiv
jmp
mov
int3
mov
jmp
pop
cmp
out
std
pop
loop
adc
pop
xlat
test
cmp
push
push
cmp
cmc
stc
insl
fbstp
lret
ljmp
xchg
std
pop
sub
mov
clc
jbe
cwtl
nop
push
stos
sbb
stc
out
mov
rcr
shrl
or
jae
fcomps
lret
xchg
cmc
adc
pop
jnp
ja
jge,pt
pop
jo
lcall
cmp
cld
jle
lret
pop
push
push
mov
in
sbb
sub
inc
dec
cwtl
fucomi
mov
dec
fldpi
cmp
pop
filds
roll
in
mov
lods
or
imul
sti
push
cmp
jb
and
fcompl
scas
xchg
add
nop
in
ficoml
pop
stos
jnp
mov
dec
out
adc
push
push
test
lds
je
or
push
ret
jo
rcll
mov
pushf
inc
push
cwtl
or
test
ret
xchg
sub
push
push
jge
pop
into
ret
sbb
jmp
and
adc
pop
fists
sbb
push
jne
or
ss
sub
cltd
shll
mov
ret
adc
popf
pop
pop
lahf
jp
cwtl
aaa
inc
ror
repnz
cmc
sub
xor
xchg
out
neg
and
loopne
dec
or
lods
mov
imul
cmpsl
test
insb
inc
push
jle
mov
mov
sbb
repz
mov
repnz
pushf
int3
mov
cmpl
fildll
mov
push
movsl
fcmovnb
push
out
add
stos
cmpsl
xchg
xlat
add
xor
sahf
cli
push
xor
fwait
push
shll
adc
cmp
inc
dec
jp
mov
cmp
lahf
aas
sahf
or
clc
popf
mov
jmp
pop
insl
outsl
cli
fdivl
and
sub
dec
inc
push
in
aad
sti
xchg
int3
mov
cmp
lret
out
ja
js
pop
cmpsb
repz
insb
lds
mov
shlb
add
dec
aam
lock
inc
mov
repz
mov
dec
jp
cltd
jg
lret
pop
call
cmpsl
sbb
mov
sub
mov
mov
in
or
outsb
push
das
inc
fs
and
ljmp
lret
lret
pop
cmpsl
add
loopne
out
arpl
sbb
inc
xchg
dec
enter
inc
fcmovne
hlt
push
mov
mov
ret
jmp
lods
xor
in
adc
and
stos
ja
push
gs
dec
enter
mov
push
fdivl
cmp
popa
fisubs
shrb
aad
inc
out
jae
adc
inc
fdivrl
and
mov
sub
jb
enter
cltd
in
cmp
shrl
repz
ss
addb
repnz
adc
dec
sahf
jmp
arpl
rorl
push
push
stos
pop
arpl
fisttpl
fadd
into
ja
sub
push
into
mov
int
movsb
aaa
pop
xor
repnz
jl
cmp
dec
lods
inc
adc
jl
out
in
push
dec
xlat
jge
pusha
pop
bound
iret
jae
push
add
mov
stos
mov
xchg
mov
lahf
pop
loop
pop
pop
test
fidivrs
and
or
ret
aas
or
outsb
push
inc
daa
std
sti
jb
mov
mov
push
add
arpl
out
mov
cmp
popa
lea
adc
notb
sti
push
bswap
inc
sbbb
loope
mov
dec
push
sub
or
push
icebp
xchg
mov
sbb
pop
pop
mov
insb
or
lods
jnp
dec
or
scas
int
out
loop
imul
mov
arpl
inc
into
dec
cmp
dec
pop
cmp
or
dec
jecxz
mov
cld
inc
mov
sbb
jb
adc
xor
mov
mov
shrb
rep
add
fwait
push
insb
fs
adc
mov
sub
or
imul
jge
jmp
cmp
shlb
push
cmp
test
lret
jmp
add
rcll
jmp
je
test
dec
ljmp
sub
dec
cld
mov
sarl
stos
adc
outsb
mov
cs
and
xchg
jg
stos
cmp
pop
mov
ljmp
and
outsb
dec
and
cmp
insl
loopne
push
lds
out
sub
ds
inc
or
sahf
syscall
or
sub
fistps
jle
pop
and
ficompl
std
iret
cmp
inc
or
inc
mov
inc
push
popa
xor
jmp
loop
mov
xor
add
mov
xchg
shr
mov
sub
pop
incl
pop
test
xchg
js
lock
je
rcll
test
push
mov
cld
sbb
scas
xor
mov
shrb
sbb
pop
outsl
add
clc
shl
pop
pop
adc
fs
addb
dec
dec
sbb
mov
xor
test
dec
popl
mov
xor
xor
push
mov
lods
int
jmp
pop
xchg
adc
aaa
inc
xchg
push
mov
fadds
fdivr
mov
sarb
cli
fisubrl
mov
dec
sub
hlt
jecxz
in
fcoml
out
fcomp
stos
mov
xchg
fbld
out
fwait
repz
aas
pop
incl
rolb
ja
inc
sbb
mov
mov
dec
sub
loope
sbb
adc
movsb
in
arpl
ss
clc
data16
notl
jecxz
and
dec
imul
push
call
push
sahf
test
dec
adc
or
les
aaa
ror
mov
xchg
jb
sub
cmp
pop
mov
jl
inc
xchg
cltd
adc
mov
or
xor
mov
outsb
scas
ficoms
inc
insl
cltd
cmp
jg
mov
subl
lea
lds
cmp
xlat
mov
out
mov
inc
mov
inc
popf
cmc
into
jo
nop
mov
cmp
testl
push
mov
jns
pop
add
mov
jno
lods
test
adc
jne
test
pop
adc
leave
and
mov
cmp
jnp
xchg
mov
adc
or
repz
scas
cmp
popf
dec
mov
rolb
xlat
add
shlb
mov
adc
and
sub
lcall
and
and
sub
jne
test
imul
popf
adc
cmp
repnz
stc
rol
push
outsb
sarl
icebp
inc
xchg
xchg
mov
jnp
inc
lds
fsubr
nop
out
push
cmp
xchg
insb
scas
inc
aas
push
cli
sub
adc
xchg
mov
aaa
test
call
add
xor
add
mov
enter
push
mov
pop
lock
cmp
inc
cmp
push
out
mov
addr16
sbb
mov
in
fld
es
fsts
inc
fadds
cmpsb
icebp
idivb
cmpsb
jecxz
pushf
sub
rep
adc
push
xorl
jecxz
std
and
sub
push
js
fsubp
cltd
enter
sbb
inc
fsubp
test
ds
pop
stos
lret
jno
mov
data16
jb
adc
outsl
pop
popf
dec
sbb
clc
imulb
add
notl
mov
mov
and
loop
popf
aad
aam
xor
cmc
jne
add
pop
jmp
mov
jge
add
mov
rolb
negb
and
ja
pop
js
dec
sbb
mov
fmull
inc
scas
cmp
pop
data16
mov
cmpb
or
f2xm1
iret
addb
movsl
pop
fbld
jp
fnstcw
int
lret
movsl
mov
inc
cmp
pusha
insb
mov
arpl
mov
popa
jno
lods
bound
inc
sahf
fcompl
lret
lods
mov
adc
adc
dec
jecxz
jbe
repz
push
add
stc
mov
xorl
cmp
push
jbe
stos
outsl
cwtl
scas
cmp
jne
negb
rolb
testl
push
cmp
aas
iret
sti
das
out
sbb
xchg
pop
add
movsb
lret
mov
push
jecxz
cmc
addr16
shlb
insl
ror
xlat
inc
fnstsw
out
int3
loopne
push
cmpsl
jb
popf
or
stos
popa
sti
push
xchg
movsb
sub
das
addr16
push
popa
mov
mov
push
push
clc
cmp
in
xor
iret
data16
movsb
jmp
lahf
cpuid
inc
pushf
cld
pop
aam
xor
enter
xor
inc
imul
cmp
ljmp
sahf
jne
mov
mulb
in
and
mov
sbb
jmp
je
lods
mov
out
push
lds
inc
jg
or
clc
nop
aad
pop
mov
cltd
shr
addr16
cmp
adcl
test
jp
cwtl
loop
push
jl
jmp
or
ret
push
icebp
mov
stc
jno
add
rcrl
xchg
pop
iret
loope
pop
push
mov
aaa
push
xor
sbb
movsb
and
push
push
jg
lahf
cltd
cwtl
nop
shrl
and
add
sub
push
pop
push
ljmp
adc
mov
sub
mov
or
rorb
mov
cmp
scas
stos
cs
add
mov
in
psubusw
xor
pop
mov
paddusb
sbb
sbb
enter
and
dec
sbb
and
insl
int3
xchg
aas
cmp
daa
and
mov
mov
push
aam
mov
xchg
je
xor
mul
jecxz
js
shll
rcrl
lcall
mov
lcall
push
lock
sbb
outsl
sbb
mov
clc
push
gs
int
push
mov
adc
and
lret
das
das
mov
int
cli
xor
jg
loop
cmpsl
dec
pusha
bnd
cmpl
iret
pop
xchg
cli
out
xor
inc
jns
inc
cmpsb
insb
pop
decb
adc
cltd
jns
sbb
stc
test
dec
adc
not
movsl
test
out
sbb
xor
lcall
std
xorps
cltd
adc
push
cmc
js
leave
movsl
inc
ret
and
stos
mov
mov
sarb
adc
sub
arpl
jne
add
aaa
xor
adc
popa
xlat
add
push
int
testl
xor
push
push
and
push
dec
mov
cmp
cmp
gs
inc
outsb
sbb
call
add
or
movsb
test
mov
xchg
adc
inc
add
adc
mov
adc
mov
xchg
das
sbbb
add
dec
or
fs
or
pop
push
cmp
push
sbb
out
mov
adc
add
repnz
lahf
xlat
cmp
fnstenv
mov
test
repnz
in
dec
dec
addr16
pop
xchg
xchg
lret
jmp
jnp
mov
xor
cmp
in
add
or
inc
lcall
mov
xchg
je
fistpll
pop
shr
mov
mov
xchg
dec
xchg
mov
inc
adc
and
xorl
push
aad
sub
dec
sub
jp
or
out
mov
xor
cmp
add
sar
mov
es
mov
int
out
mov
add
sub
mov
xor
hlt
pop
cmp
adcl
les
int
in
sbb
xor
sbb
mov
jmp
and
cmp
sbb
jo
cltd
lock
xchg
adc
dec
scas
pop
push
inc
jmp
and
mov
je
sbb
daa
mov
addr16
pusha
je
and
mov
xchg
iret
jl
lcall
stos
repnz
sub
loop
add
mov
icebp
sbb
aam
cltd
stos
push
sbb
or
fisubrs
out
out
cmpsb
push
xchg
cld
movsl
out
lea
mov
or
cmc
mov
fsubrl
push
cmc
mov
pop
inc
into
sbb
dec
mulb
xor
and
and
inc
fisttps
inc
frstor
cmp
lcall
aas
pop
bound
xor
pop
popf
fsubrp
mov
arpl
mov
dec
sbb
sti
jbe
push
shrl
hlt
in
cltd
and
jae
loopne
dec
mov
mov
or
mov
ljmp
les
mov
cmpsl
inc
or
jmp
pop
dec
mov
cld
or
loop
add
rep
add
in
out
jl
mov
in
rcrl
cmpsl
add
bound
loopne
out
ljmp
js
mov
push
insl
xor
push
fmul
push
div
or
into
aas
push
xlat
inc
loope
das
ret
inc
push
jns
xor
dec
adc
xchg
mov
ret
pop
and
inc
cmc
in
dec
or
outsl
pop
movsb
cmp
fdiv
mov
cmpb
imul
mov
mov
push
lcall
outsl
sbb
sub
cmp
xchg
jge
in
leave
mov
ror
pop
std
sbb
mov
cmc
add
je
mov
and
dec
hlt
xchg
mov
pop
pop
mov
pop
pop
push
mov
xor
dec
test
cld
push
pusha
cwtl
pop
dec
ret
jnp
lds
inc
sbb
xchg
imul
cmp
loop
sbb
test
adc
dec
mov
cltd
mov
or
jbe
add
mov
fwait
shr
imul
es
dec
ret
ja
clc
inc
in
stc
inc
sub
inc
cld
movsb
xchg
ss
pop
aad
adc
mov
push
cmp
int
jge
cmpsl
cs
push
mov
movsl
out
pop
sub
loope
jae
adc
fimull
mov
sbb
mov
cmc
scas
mov
ss
dec
fistps
cmp
and
hlt
loope
xor
add
lret
cli
arpl
je
fiadds
int
test
add
jl
xchg
push
into
shrb
ret
adc
or
lea
push
mov
pushl
and
mov
fsubs
mov
push
push
push
popa
cmp
pop
push
mov
addl
push
popf
icebp
enter
movups
fistl
sub
inc
div
outsb
inc
repnz
cld
xchg
je
mov
cmp
outsl
pusha
dec
sub
adc
sub
adc
les
js
or
and
pop
push
in
pop
and
and
cmp
push
adc
aam
or
adc
mov
fincstp
iret
add
out
adc
inc
fldcw
insb
dec
out
out
xor
jb
fsubrl
or
pop
ss
add
test
mov
add
ds
repnz
mov
cmp
je
push
push
add
cltd
jle
xchg
push
mov
ret
nop
in
pop
lods
mov
cmp
pop
jae
dec
dec
or
iret
mov
adc
daa
pop
ret
push
lods
mov
cmp
ss
jnp
int3
mov
cmp
xchg
pop
pusha
pop
push
dec
or
ja
sub
fldenv
mov
ljmp
in
mov
ss
call
shll
cmpsl
add
xchg
pushf
loope
ljmp
or
add
sbb
out
shlb
jmp
or
pop
or
fsqrt
cli
and
or
pop
movl
leave
sub
adc
cmpsl
jb
int3
in
inc
inc
mov
movsl
ja
xchg
nop
mov
mov
stc
dec
imul
arpl
xlat
insl
inc
and
test
add
hlt
mov
inc
adc
jl
push
loopne
push
mov
icebp
pop
ret
pop
xchg
icebp
insb
add
cmp
shlb
mov
lcall
sub
dec
outsl
push
xchg
and
jo
bound
jnp,pn
fsubrl
cmp
stos
popf
add
stc
nop
in
pushf
mov
icebp
scas
cmp
pushf
and
das
popf
adc
cld
scas
add
movsl
sbb
pop
cmc
cmpb
dec
loopne
scas
js
pop
ret
mov
dec
mov
and
adc
jne
jp
jle
repz
loope
jo
ret
mov
mov
data16
dec
mov
pop
dec
sub
mov
or
mov
stc
xchg
and
lahf
aas
movsl
adc
pop
sub
push
jmp
jmp
sub
adc
xor
jmp
jle
outsb
push
lret
cmc
lds
sbb
pop
inc
jno
inc
mov
push
arpl
inc
int
cmp
cmpsb
fistpll
popf
mov
out
cld
sbb
jno
mov
jle
pusha
sbb
sub
ret
imul
mov
mov
dec
ja
xchg
xor
xlat
in
ret
popf
ljmp
sbb
sub
or
es
movsl
xor
paddusw
fiadds
fidivrl
cmpsl
popa
das
shrb
cmc
int3
in
ret
jmp
and
cmpsl
aam
inc
nop
loopne
mov
inc
jbe
mov
sub
cmp
cli
push
hlt
das
scas
jb
xchg
jecxz
pop
jns
addl
mov
mov
sub
push
popa
xor
icebp
adc
jne
xchg
inc
mov
dec
pop
incl
das
in
mov
sub
mov
repz
loop
push
popf
filds
out
pop
or
outsl
cmp
scas
sbb
test
out
jo
jbe
ret
les
push
inc
negb
pushf
cmpsl
jnp
jp
outsb
lahf
orl
pop
sahf
incl
mov
sbb
push
leave
adc
xchg
out
out
pop
ds
mov
inc
mov
cmpl
orb
xor
sub
adc
popf
fisttps
add
pushf
mov
dec
je
mov
jmp
sbb
es
add
dec
jle
xor
inc
ja
xlat
sti
outsb
mov
xor
cli
fwait
into
xchg
add
call
jnp
mov
cld
insb
cltd
xor
cmp
shl
hlt
mov
cld
int
inc
add
lods
mov
mov
pop
push
repz
mov
movsl
popa
lss
or
pop
inc
xchg
out
lds
lods
cmc
xor
in
pop
rcr
pop
xchg
ret
adc
dec
shrb
jne
cmp
push
jnp
lahf
mov
push
cmpsl
cwtl
int3
cmpsl
push
scas
lahf
into
or
outsl
xlat
and
push
cmp
push
rolb
popf
sub
and
fwait
jge
jns
iret
jnp
adc
inc
and
fs
aam
ss
cmp
icebp
or
fadds
cld
sbb
xchg
cmpsb
das
and
xor
jbe
mov
arpl
xchg
fdivrs
dec
in
cld
dec
push
mov
in
nop
int3
lcall
xor
pcmpeqw
pop
and
and
inc
xchg
mov
popa
add
std
iret
xchg
mov
lds
add
test
shr
cli
jnp
imul
arpl
push
adc
jmp
inc
and
stos
or
mov
mov
popa
push
lahf
test
dec
mov
int3
jg
lods
or
int
loope
insb
inc
int
push
push
jge
int3
mov
mov
js
xchg
dec
fidivrs
dec
xchg
aam
xchg
cwtl
out
add
hlt
addr16
add
jne
or
test
stos
pop
pop
out
mov
push
push
scas
roll
fs
aad
popa
cld
xchg
pop
cmc
ds
imul
out
das
cmc
in
imul
mov
aas
cmp
pop
ds
dec
fldt
es
pop
cltd
pop
cmpsb
cwtl
and
jecxz
push
outsb
sarb
cmpsb
inc
cmp
addr16
adc
popa
out
mov
or
fidivl
dec
inc
xor
das
mov
pop
pop
rcrb
jg
lock
xchg
cmc
cs
mov
ret
push
test
insw
add
xorl
push
loop
dec
pop
mov
mov
inc
xor
je
arpl
add
or
js
sahf
loop
inc
xchg
or
pushf
data16
sahf
cli
andl
xchg
imul
add
popa
xor
lds
pop
sub
add
das
int3
inc
out
jo
clc
sbb
sbb
call
dec
cwtl
in
push
sub
jns
xor
mov
sub
dec
xor
pop
into
xchg
add
das
xlat
fildl
out
imul
in
ja
bound
pushf
xor
push
movsl
and
mov
pop
cmp
pop
int3
orl
or
test
shrb
xchg
inc
mov
xchg
loopne
scas
fs
test
nop
push
pop
in
adc
in
test
pop
cmc
pop
pop
push
je
pop
nop
in
mov
push
notl
mov
dec
or
add
clc
mov
ljmp
subb
pop
sahf
inc
scas
in
inc
sub
cmpsl
mov
or
loope
scas
sbb
aaa
fcomps
cmp
sbb
adc
dec
ret
or
inc
jecxz
xchg
mov
xchg
and
movsl
test
mov
leave
inc
xchg
push
ret
ljmp
xor
test
sbb
jle
loopne
xchg
sti
fdivl
iret
mov
pop
xchg
testl
ja
pop
divl
out
arpl
mov
clc
jnp
add
jecxz
mov
dec
sbb
pop
xchg
mov
subb
cli
iret
add
push
jge
icebp
adc
xchg
out
lret
inc
ret
in
daa
pop
inc
or
dec
pushf
mov
xchg
mov
repz
imul
push
and
xchg
pop
cld
push
out
sub
jecxz
js
adc
dec
cmc
adc
arpl
dec
jne
repnz
fnstenv
test
shl
sbb
jp
mov
out
xchg
fwait
add
push
jns
xor
push
xor
mov
in
push
lock
mov
fsub
xchg
push
pop
xchg
mov
cmp
test
push
inc
das
jae
xor
in
je
nop
mov
mov
fmull
mov
and
adc
in
mov
pop
inc
xor
insl
clc
repnz
fwait
es
sub
mov
and
jg
sub
les
jle
call
cmp
filds
jmp
inc
push
ret
or
ret
inc
hlt
ja
in
in
xor
mov
mov
int
sti
or
ficomps
stos
lods
lcall
incb
or
sbb
pusha
out
sbb
jbe
ja
cmp
xor
or
mov
mov
rcl
push
cld
subl
bound
inc
fwait
ljmp
push
dec
pop
imul
into
push
push
add
push
ss
cmp
mov
mov
shrl
pop
dec
jecxz
sbb
sti
mov
lods
add
jp
clc
sbb
push
iret
xchg
aaa
or
in
inc
loopne
push
inc
sub
and
mov
xor
icebp
pushf
push
andl
inc
insl
sbb
and
xor
mov
test
ljmp
adc
mov
sub
dec
scas
xor
lcall
sub
and
mov
fs
xchg
test
fwait
sqrtps
out
jmp
mov
mov
pop
or
push
and
mov
test
cmpsb
call
sti
icebp
pop
ja
jae
xchg
pop
sub
ljmp
aam
in
jo
mov
mov
fstpt
mov
pop
scas
xor
adc
test
lret
pop
push
cmc
pop
cmp
mov
faddl
cs
divl
fs
sbb
iret
cwtl
cmp
mov
inc
push
bound
sbb
call
jbe
insb
dec
jnp
lea
js
xchg
scas
sbb
sbb
jb
test
add
stc
dec
lret
or
jle
dec
in
lods
cmp
push
pop
push
ficomps
pop
pusha
loope
into
add
sub
jg
pop
sbb
xchg
jecxz
fwait
xchg
push
jp
xchg
arpl
std
push
jns
insl
dec
cmp
dec
and
xchg
jbe
pop
aas
and
popf
push
xchg
ljmp
aaa
mov
jmp
int3
add
ret
inc
scas
mov
adc
inc
sti
add
ds
sbb
dec
sbb
ljmp
stos
popf
sbb
orl
roll
enter
add
bound
loop
popf
std
mov
leave
add
int3
cmpsb
insl
call
insl
dec
ret
xor
push
mov
jns
and
push
out
pusha
jle
aaa
xor
mov
inc
push
jp
mov
es
cltd
addr16
nop
pop
jns
xor
xchg
sbb
inc
imul
or
daa
dec
mov
fimuls
lahf
in
xchg
sub
mov
xchg
subb
or
out
loop
insl
cmp
mov
adc
outsb
testl
jg
int3
pushf
test
movb
mov
xor
pop
push
fistpl
bound
xchg
inc
push
dec
hlt
aam
mov
xor
aad
xchg
dec
and
outsb
test
jge
adc
cld
mov
and
jmp
pop
test
rorl
movsb
add
or
cmp
xchg
mov
push
andb
push
inc
push
in
outsl
push
cmc
xor
jp
and
jg
imul
repnz
roll
jg
mov
inc
mov
sti
into
repz
in
sbb
xor
pop
mov
or
mov
aad
dec
fistpll
in
push
or
fsts
fnstenv
mov
or
notl
pushf
xor
ja
sbb
std
ja
and
ret
bnd
gs
je
push
das
outsl
or
aad
loope
je
fcoml
std
nop
aad
or
and
add
dec
jno
out
ret
aad
mov
rcrb
xor
xlat
add
push
ds
fidivs
sbbb
cmc
imulb
cmp
test
sub
mov
out
xchg
sbb
rcrl
cmpb
cs
or
ds
push
bound
mov
and
in
jg
and
mov
dec
pop
push
scas
mov
mov
shll
cmp
in
popf
mov
dec
add
fwait
or
dec
aas
sbb
pop
sbb
movsb
sbb
sahf
loopne
outsl
jg
jae
divl
daa
cmp
dec
sahf
push
cmp
jne
test
jg
movsl
es
push
cmp
lock
push
scas
popl
sbb
mov
mov
inc
aam
sbb
inc
cmp
leave
pop
inc
xor
rorb
in
xchg
push
lods
push
jmp
arpl
nop
push
jecxz
add
pop
jge
pushf
ret
jecxz
fs
mov
push
push
add
mov
adc
je
mov
pop
mov
mov
aad
lret
iret
test
and
aaa
loop
outsl
xor
dec
pop
int
push
inc
cmp
in
faddl
fisttpll
xlat
sub
dec
into
aas
or
pop
lea
xor
xchg
lods
cmp
in
inc
jmp
pop
jno
inc
rorl
roll
popa
addb
mov
test
sub
xor
adc
lods
out
std
push
shl
xor
aaa
sbb
lods
dec
push
imul
pop
jbe
loope
cli
adc
out
sub
dec
inc
push
subl
xor
mov
mov
dec
mov
ret
adc
lret
sub
cmpsl
mov
mov
fcomps
mov
ret
xor
xchg
pop
jmp
push
fidivrl
adc
fmulp
jae
ret
sbb
test
adc
les
pop
outsl
add
dec
dec
leave
hlt
add
sub
xchg
leave
xor
xchg
mov
and
cmp
in
pop
inc
dec
dec
mov
pop
mov
add
mov
mov
jp
js
out
jmp
adc
pop
lods
pop
ficompl
jle
sub
jl
mov
pop
fidivrl
mov
mov
push
lcall
mov
lds
xchg
cmp
sbb
mov
cmpsl
out
jb
add
je
and
pop
cmpsl
mov
dec
ret
xor
into
mov
sti
lret
xchg
je
or
stos
out
xchg
movsl
and
jne
sti
xor
cmp
fbstp
inc
enter
pop
and
sarb
scas
mov
sub
pop
xor
fcomip
jae
dec
xchg
and
nop
add
mov
add
mov
cld
xor
int
jne
cmp
popf
pop
ret
dec
sbb
negb
xor
sbb
dec
mov
inc
mov
sub
out
scas
enter
scas
push
and
xor
scas
or
mov
sbb
popa
mov
into
popf
mov
sbb
hlt
lds
inc
insb
rol
inc
loope
lahf
jl
mull
bound
ja
mov
aad
mov
scas
adc
mov
loope
mov
push
sbb
mov
mov
pop
aad
adc
test
and
mov
pop
push
in
lods
js
cmp
mov
add
or
arpl
repz
stos
pop
jne
fcomps
or
lods
jle
mov
fsubs
test
or
out
movsl
cmp
push
push
mov
out
test
inc
insl
inc
in
jle
repz
loop
lahf
pop
sub
sti
ret
jb
icebp
sbb
add
lock
inc
jb
popa
dec
jge
jae
sarl
jmp
in
scas
adc
insl
push
test
cmp
stos
aas
pop
arpl
sbb
stos
xchg
sub
rcrb
dec
ds
mov
insb
or
jle
cmpb
lahf
shrb
iret
dec
sub
sub
push
movsl
js
jle
push
xor
cmpsl
cld
mov
xor
or
pop
imul
mov
or
subl
mov
push
cmp
add
bound
sbb
pop
int3
jmp
in
loope
stos
sar
sti
mov
in
lea
adc
mov
cmpb
pop
mov
push
push
and
jmp
in
or
dec
cltd
sbb
cs
mov
loop
sbb
leave
cli
ffreep
jne
ljmp
add
xchg
out
divl
jle
dec
pop
adc
aaa
add
cmp
push
sahf
xchg
xor
push
jle
orb
cmp
rcl
out
loope
add
inc
lods
jg
aaa
dec
fstps
cmp
js
lods
lock
xor
push
into
dec
loop
movl
sbb
mov
imul
or
mov
xchg
push
ret
add
aam
lcall
stos
mov
fcmovbe
rcl
or
test
dec
int
xchg
lds
push
mov
mov
ret
jb
mov
inc
mov
pop
ret
aad
mov
sbb
in
fnstsw
bound
cld
xor
repnz
mov
pushf
xor
aas
xchg
add
bound
xchg
or
rolb
cmpb
jge
dec
sbb
insb
and
adc
xchg
inc
mov
lret
aam
stos
mov
rep
or
aaa
pop
movaps
fcoml
mov
andb
sbb
shll
dec
inc
out
adc
je
xchg
inc
lahf
dec
cmp
js
jp
loop
es
cmp
das
int
inc
dec
inc
inc
xchg
inc
fmul
shll
jne
inc
mov
gs
lods
sub
push
cmc
negl
jl
orl
xchg
rcr
and
sub
cli
mov
pop
xor
xor
loop
add
adc
mov
std
fnstcw
add
adc
test
pop
sub
xchg
push
repz
bound
mov
jno
jbe
out
mov
shrb
cld
xchg
or
insl
pop
inc
xchg
fsubl
jne
mov
arpl
rcrb
je
sub
lahf
mov
inc
dec
sbb
pop
lahf
mov
mov
mov
jmp
ret
das
rcrb
lcall
add
cld
aad
sub
xor
sub
sahf
out
inc
loopne
ljmp
sti
mov
lret
loop
int3
sbb
pop
or
push
lret
fcomip
cld
lcall
cli
dec
adc
jmp
ret
and
test
add
imul
test
mov
mov
jnp
sub
fnstsw
pop
sahf
cld
adc
inc
pop
dec
ret
stc
fisubs
popl
cmp
xchg
dec
and
jle
add
mov
jno
sub
out
arpl
movsl
lds
or
ljmp
jg
sub
xchg
shlb
push
mov
xlat
bound
addb
roll
mov
xchg
xor
dec
mov
jae
xor
lcall
lds
and
sub
pop
add
sub
mov
fisttpl
or
dec
es
inc
ret
insl
rorl
xchg
push
xchg
push
rorl
ret
pop
and
mov
adc
xor
shll
out
rcr
and
ficomps
int3
test
pop
and
cltd
or
cwtl
xchg
lret
pop
sbb
lds
add
test
cmp
mov
fdivl
js
pop
sbb
mov
xchg
ret
jg,pn
cmovbe
insl
std
xchg
movsb
push
jae
xchg
xchg
ret
and
aas
cmpsl
rclb
inc
shlb
jecxz
mov
xchg
dec
jns
xchg
mov
sbb
pop
mov
popa
inc
pop
loopne
xchg
rorl
push
xor
jmp
int3
or
pop
jo,pn
aad
push
cmp
es
xor
mov
rcl
mov
ss
roll
lret
movsb
xor
fcomps
test
mov
sbb
xor
xor
pop
xor
cli
mov
repnz
ds
icebp
sbb
xor
cli
add
popf
mov
pop
and
lret
sub
jb
das
cmp
aas
out
mov
push
mov
test
dec
stos
pop
sub
ss
cld
cmc
stos
mov
cwtl
clc
sub
std
or
xor
shrb
sub
add
popa
sbb
jno
aad
mov
cltd
call
cmp
mov
ret
in
imul
inc
cltd
xchg
out
cmp
sbb
pop
xorl
or
aas
xor
and
pushf
ja
into
js
mov
mov
lock
addr16
dec
push
mov
or
repz
pop
sahf
loope
sti
faddp
std
in
mov
lret
pushf
stos
fists
imul
mov
fbld
cmp
sub
pop
hlt
aam
mov
mov
xchg
mov
xor
mov
pop
gs
pop
add
mov
or
int
inc
ret
push
cmp
push
mov
ret
mov
adc
das
out
aad
cmc
xchg
jle
push
mov
xlat
sub
pop
test
lods
fwait
movsb
xchg
xchg
loope
jnp
stos
dec
inc
int3
or
jno
popa
push
xor
cmp
rcll
je
ror
and
xorl
inc
sbb
push
xchg
mov
pop
test
loope
lret
sarl
sub
lds
push
adc
pop
adc
gs
cmpsl
lret
out
or
xchg
cmp
adc
mov
outsl
lods
jbe
fidivs
test
mov
jecxz
jno
mov
mov
cmp
or
jnp
xor
push
dec
das
out
es
icebp
orl
test
ja
mov
mov
clc
push
mov
lret
inc
test
xchg
sbb
push
add
icebp
cmp
dec
das
ja
fnstcw
mov
inc
andl
push
mov
js
aas
mov
das
mov
mov
push
out
mov
mov
mov
sub
imul
cli
xchg
outsl
cmpsb
and
inc
out
jae
js
cld
cld
cmp
ljmp
aaa
add
xorb
test
push
in
jge
and
mov
daa
int3
rcr
pop
push
popa
bound
stc
aaa
sub
insl
cmc
enter
mov
adc
cmc
cmp
sub
loopew
add
mov
scas
fidivrs
out
fbstp
imul
out
sbb
int
outsl
in
xlat
pop
xlat
jae
jecxz
fsubl
sahf
push
out
inc
loopne
movsl
ret
dec
pop
add
nop
push
lods
or
pusha
insb
imul
stc
pop
cs
fucompp
incl
pop
movsl
jmp
mov
cld
jb
xchg
push
jbe
scas
jmp
lds
mov
cld
test
mov
adc
inc
ret
push
fcoml
xor
sbb
scas
sahf
das
mov
mov
out
mov
mov
mov
or
mov
mov
jg
icebp
cmp
sbb
jnp
pusha
ret
ret
imul
and
and
xchg
dec
leave
push
cmpsb
dec
and
insl
lock
stc
sbb
inc
jno
cmc
rorb
pushf
mov
or
cmp
xor
jle
push
push
mov
sbb
mov
push
in
clc
jp
test
fstpt
cs
xor
cmp
xchg
test
mov
fisubrs
push
jecxz
mov
andb
out
idivl
mov
call
es
rorl
and
xchg
sub
mov
or
xor
movsl
lock
outsl
pop
push
lea
jl
jle
push
fwait
xchg
fisttpl
outsb
addl
lock
repz
lods
mov
jmp
push
jecxz
rcl
mov
push
push
dec
ror
mov
mov
pop
addb
stos
fstpl
and
sahf
pop
imul
and
cltd
xchg
fmull
aaa
mov
cmp
test
push
in
ds
and
leave
roll
push
sub
or
mov
push
stos
fbld
aaa
ret
movsl
mov
loope
sti
mov
es
push
xchg
addb
popa
lcall
sarl
xor
or
in
cli
adcl
push
mov
jmp
ja
clc
cmp
dec
ss
repnz
inc
pop
dec
int3
fstpt
mov
add
lahf
cmc
cmp
das
mov
cli
sbb
in
inc
cld
dec
pop
decb
iret
push
sbb
pop
sbb
sbb
int
add
pop
add
sti
cli
dec
mov
mov
xchg
ret
js
aaa
mov
xchg
push
mov
add
shll
pop
mov
mov
lret
inc
shrl
decb
or
popf
fidivs
ffree
es
push
and
dec
inc
ljmp
push
arpl
or
sub
mov
das
and
dec
jo
mov
jbe
aam
push
mov
outsb
les
mov
mov
out
inc
insl
fcoml
dec
leave
jae
shl
sub
icebp
sbb
cmp
dec
inc
pushf
pop
cltd
dec
imul
and
gs
push
mov
cmp
dec
cld
sbb
clc
xor
outsb
dec
xor
adc
test
sub
shl
pop
in
inc
push
mov
insl
inc
mov
mov
test
ret
xchg
mov
jge
ret
inc
cmp
outsl
push
in
pop
mov
mov
pop
bound
sub
aam
addr16
ffree
sbb
pop
mov
xchg
xchg
lret
mov
jns
cltd
subb
rorb
movl
sti
gs
sbb
icebp
jne
or
xor
sahf
movsl
cltd
aas
sbb
jge
jg
loopne
jg
aaa
push
lods
mov
adc
ficompl
nop
cmp
int
cmp
outsb
mov
int
rorl
ror
mov
pop
addr16
xor
es
int
cmp
ss
inc
lcall
push
add
sbb
jno
xor
ja
addr16
jns
push
jg
adc
push
jg
insl
aaa
add
inc
mov
aas
inc
gs
or
sub
fwait
cmp
andnps
out
and
sbb
and
lods
and
sbb
sub
cmp
sub
and
inc
bound
bound
stc
and
hlt
loopne
lret
mov
scas
cmp
xchg
lods
movsb
sbb
cs
mov
jecxz
cmpsb
and
call
imul
dec
into
or
lcall
or
decb
sbb
fcompl
jge
ds
add
lahf
hlt
repz
loopne
mov
mov
loop
ret
jg
sahf
lods
or
sub
call
xchg
pop
loope
cltd
repnz
cmp
sub
inc
sti
popf
cmp
hlt
inc
push
sbb
cltd
pop
into
in
sbb
ljmp
sub
orb
push
jo
pop
push
inc
lcall
js
rcrb
cmp
adc
out
daa
add
add
pop
sbbb
push
shl
pop
jg
fsubrs
inc
stos
lods
xor
and
aaa
dec
in
dec
xchg
cltd
jae
add
inc
mov
arpl
data16
cmp
sub
lea
adc
scas
and
inc
rcrl
int
cmp
pop
into
icebp
icebp
jl
pushf
mov
aas
inc
push
stos
inc
bound
clc
movsl
fldenv
jae
fwait
mov
sti
xlat
sub
sub
cmp
fwait
aad
das
push
push
test
frstor
xor
cltd
or
push
mov
and
cmp
add
inc
or
shll
pop
sahf
xchg
inc
mov
out
in
dec
lcall
aas
push
movsb
xor
adc
jge
mov
test
js
xlat
inc
push
jae
push
cmp
jge
inc
pop
idivl
dec
int3
mov
lods
popf
stos
out
mov
xlat
push
xchg
pop
addr16
cli
and
pop
and
stos
xchg
shlb
add
arpl
xor
stos
outsb
xchg
dec
and
fwait
mov
xchg
repz
addr16
push
mov
or
inc
int3
divb
push
cld
pop
xlat
dec
pop
jl
xchg
xor
divl
out
leave
out
push
cmp
or
cmp
inc
sub
int
pop
push
mov
sub
pop
inc
jp
jbe
push
push
or
add
les
popf
mov
and
jae
xchg
add
aas
mov
movsb
or
ja
xor
cltd
jl
lret
lods
xchg
faddl
push
lock
sub
sti
adc
and
mov
push
ficoml
insb
pop
cmc
add
stos
decb
pop
das
mov
mov
jo
jge
out
xor
dec
test
add
cmpsl
dec
push
mov
flds
fisubl
clc
jno
cmc
inc
iret
clc
shlb
mov
aaa
push
jne
push
or
clc
and
pop
jmp
scas
sahf
inc
lret
xchg
push
inc
mov
shrl
aad
lret
pop
mov
push
push
pop
push
out
add
push
jge
sbb
mov
cmpsl
xchg
mov
insb
push
adc
pop
cwtl
dec
dec
cs
sti
hlt
sub
cwtl
aad
sbb
fldl
outsl
adc
loop
fnstsw
cmp
xchg
jge
fimuls
mov
clc
fidivl
notb
in
pop
xor
aam
push
ss
loopne
sahf
xlat
mov
mov
xchg
incb
filds
or
ret
xchg
jo
data16
mov
push
and
in
mov
xchg
fcoml
lds
adc
pusha
and
fildll
mov
xchg
mov
push
fldcw
adc
lret
aaa
add
xor
lahf
xchg
stos
and
xor
call
inc
out
mov
dec
cmp
sbb
inc
mov
sbb
inc
pop
sub
xor
or
mov
gs
mov
movsl
scas
jge
out
aam
sub
fs
fldt
mov
xor
jl
jge
adc
loopne
std
pop
dec
adc
aad
fucomp
pop
push
xlat
dec
int
xor
lret
xchg
and
jle
pushf
cmpsb
lret
mov
pop
testb
idiv
inc
push
xor
mov
pop
sbb
scas
js
pop
or
ret
sub
jl
scas
dec
ss
insl
popf
scas
shlb
xchg
les
xchg
pop
test
pop
fdivrl
push
arpl
loop
pop
adc
pusha
xchg
movsl
cmp
loope
push
pop
iret
mov
lret
sub
pop
paddusb
mov
mov
mov
mov
cmc
repz
fldcw
jbe
into
xor
inc
rcr
popf
push
mov
mov
fwait
scas
dec
out
adc
test
add
dec
mov
push
sti
lods
xor
mov
stos
test
push
shlb
jmp
inc
jle
inc
inc
movsb
mov
dec
pop
fcmovb
rcr
in
add
jg
decb
ret
mov
or
mov
jo
lcall
add
cltd
lret
test
cmc
cltd
and
repnz
dec
add
sbb
lods
imul
push
scas
sbb
push
push
lret
ret
leave
rorb
inc
and
pop
out
rolb
pusha
xchg
mov
das
cmp
mov
inc
push
and
int3
and
mov
cs
ljmp
push
bound
in
je
adc
dec
cmpsl
mov
lea
mov
lds
daa
es
andb
aam
lea
aaa
popa
data16
test
xchg
jle
push
adc
jge
repnz
cmp
insb
mov
in
les
mov
stc
xchg
xor
insb
daa
rolb
stos
push
bsr
add
xchg
mov
lret
or
mov
imul
testb
cmpsl
jo
xchg
sub
jne
movsb
outsl
jmp
mulb
repz
push
jne
sbb
icebp
cmp
adc
ja
push
mov
xor
cmp
cld
outsl
lods
popf
xor
mov
pop
and
pop
cmc
pop
mov
outsl
mov
pop
arpl
mov
test
adc
js
dec
and
test
mov
xchg
popf
xlat
movsb
cwtl
outsb
in
sub
outsl
push
sub
cli
int3
mov
push
sub
and
mov
imulb
pop
xorl
fnsave
jmp
push
inc
addr16
popl
movsb
or
xchg
sub
je
test
or
arpl
mov
fiaddl
mov
movsb
into
fwait
mov
mov
ljmp
inc
fstps
lds
mov
xchg
add
dec
push
mov
push
mov
mov
xor
mov
mov
les
pop
pop
outsl
roll
and
jl
jp
inc
ja
fdivs
stc
daa
xchg
pop
insl
cmp
test
pop
xchg
outsl
das
js
fisubl
mov
mov
cli
imul
mov
shr
sub
loopne
xchg
fwait
je
inc
mov
xchg
jne
stos
out
addr16
xchg
dec
cmp
or
mov
cltd
movsb
jle
fs
fnstsw
lods
scas
sub
aaa
cmpsb
jb
inc
sub
jmp
out
inc
shl
push
scas
inc
sbb
repnz
test
xor
mov
pop
imul
mov
int3
inc
cmpl
sbb
pop
std
mov
sbb
repz
mov
std
pop
or
aad
add
and
push
inc
dec
divl
shl
jle
fnstsw
mov
sub
pop
sub
mov
jbe
faddl
lcall
lds
inc
outsl
mov
out
push
cwtl
out
std
cld
jle
outsl
stos
fnstenv
pop
scas
cmp
mov
ret
jg
add
ja
stos
sti
stos
outsl
je
mov
insl
pushf
or
jb
mov
mov
xchg
notb
xchg
mov
lcall
scas
mov
push
fcoms
pop
sarl
repnz
int
mov
and
sub
dec
dec
dec
insb
push
cmc
mov
push
mov
out
cltd
sub
movsb
adc
lret
push
jne
lds
fdivr
mov
lods
jnp
into
sub
mov
xor
xchg
cmp
adc
and
push
or
jg
jmp
jmp
inc
pop
mov
xor
mov
jmp
mov
cmp
mov
xorl
aas
cmp
addr16
aam
push
inc
cmpsl
and
jns
inc
xor
adc
jecxz
jnp
shl
mov
push
xchg
into
lods
sub
adc
popa
jmp
cmp
inc
in
pop
push
lods
jns
imul
xor
xor
icebp
ss
ret
popf
cmp
xchg
icebp
jg
sahf
repz
loop
rcll
pop
loopne
dec
clc
in
pop
jge
les
adc
sub
inc
hlt
lret
xor
sbb
jp
adc
sub
rcr
aad
pushf
loopw
sbb
mov
daa
push
repnz
and
imul
push
or
pop
fs
xchg
rcrl
mov
adc
imul
xor
add
sbb
imul
scas
or
push
ss
enter
xor
add
push
dec
fdivs
sub
dec
cmpsb
cltd
push
or
fidivl
or
pop
les
shl
ds
sbb
test
pop
sub
daa
imul
lods
insb
out
call
add
fsubs
xlat
sbbb
mov
incb
cli
nop
roll
inc
cmc
call
dec
sbb
lret
lret
mov
sbb
idivb
fadds
pop
bound
stos
out
jmp
cmp
clc
sbbb
inc
and
aam
in
lahf
or
stos
jp
adc
repnz
scas
cmc
xchg
cmc
outsb
std
push
ljmp
ret
int
sub
mov
data16
cs
repnz
rcrl
sub
mov
loopne
jge
push
fsubs
out
in
aad
adc
ss
jns
inc
addb
jb,pn
stos
jl
mov
leave
repnz
push
push
mov
inc
pop
aam
out
push
sti
in
cltd
mov
add
in
cmp
std
sarb
pop
or
icebp
shll
scas
inc
dec
xchg
pop
xchg
lret
cmp
in
repz
pop
or
fisttps
loope
jecxz
cmp
out
enter
cltd
loopne
inc
and
call
test
cmp
xor
ljmp
or
fdivrs
inc
mov
popf
lock
cld
data16
fcoms
sti
push
mov
inc
xchg
sbb
jnp
in
sub
push
cmp
fst
loop
dec
push
cmp
fwait
out
cmp
mov
and
addr16
fimuls
and
lret
dec
mov
or
in
test
mov
cld
dec
fildll
mov
dec
dec
out
cmp
ljmp
bound
add
mov
sbb
xchg
icebp
in
pusha
adc
les
cld
push
sub
pop
js
mov
cmp
pop
dec
lcall
test
out
jecxz
xchg
push
add
push
aad
les
inc
jbe
ja
call
frstor
jl
jmp
push
jne
pop
or
imul
rcrb
movsb
mov
xchg
scas
mov
adc
xchg
test
xchg
dec
cltd
enter
cmp
inc
mov
and
inc
lock
int3
mov
fstpt
add
ja
sbb
sub
mov
out
into
test
push
mov
decb
movsl
and
adc
xor
mov
sbb
out
adc
xor
cmp
std
mov
divl
or
jae
shll
mov
pop
popa
lock
jno
mov
lods
cmpsb
rcrl
fdiv
faddp
idivb
in
and
shlb
add
adc
xchg
mov
ret
pop
fldt
lret
adc
insb
mov
imul
and
testl
sti
outsb
and
test
and
mov
stc
outsb
add
cmp
test
add
mov
adc
fcoml
pop
mov
or
push
jl
mov
iret
sub
cmpl
inc
dec
dec
int
mov
mov
sahf
pop
pop
xor
jmp
insb
clc
jbe
sahf
imul
pusha
xchg
push
xor
mov
sti
jbe
imul
push
mov
lahf
repnz
add
inc
aam
ret
sub
mov
cwtl
inc
loope
lods
test
cmovb
push
test
iret
mov
in
cmp
cs
sub
mov
pop
orb
scas
test
das
cmp
mov
sub
daa
pop
out
xchg
jp
jno
push
loope
sbb
jp
sub
sti
adc
add
out
fisubs
xlat
lods
jae
mov
mov
popf
nop
xchg
lea
pop
push
sbb
aad
aaa
in
ss
out
pushf
pushf
xor
ljmp
adc
out
add
mov
mov
cmp
sbb
fnstcw
xchg
ret
fs
subl
lret
jecxz
sub
call
dec
ljmp
repnz
pop
pop
inc
push
into
imul
or
add
ljmp
dec
addr16
push
xor
sbb
clc
cli
inc
mov
and
and
iret
iret
cmpsl
sbb
in
cwtl
aaa
jae
mov
insb
adc
dec
bswap
es
jno
push
adc
sub
popf
push
inc
pushf
loop
mov
xchg
xor
imul
iret
pop
in
sub
arpl
xor
pop
push
test
add
dec
push
push
enter
inc
call
jmp
dec
test
hlt
int3
pop
adc
fcoml
inc
mov
leave
hlt
repnz
mov
in
inc
adc
jg
dec
cmc
xchg
xchg
and
mov
insl
sti
mov
in
cmp
jmp
mov
mov
rolb
adc
cs
aas
repnz
lock
dec
cmp
lret
xlat
stos
and
clc
stc
adc
mov
lods
test
lcall
cmpsb
mov
mov
pusha
or
mov
ljmp
lret
dec
inc
jo
and
mov
ds
push
jno
or
leave
inc
daa
gs
jne
int
lea
mov
add
lret
in
mov
ret
iret
das
xor
and
aam
add
movsb
dec
xor
aad
scas
out
adc
incb
andl
mov
sbb
jg
dec
push
jno
pop
mov
pop
xor
sub
sub
sub
aaa
pushf
xchg
adc
lods
push
into
dec
cwtl
scas
xchg
mov
data16
aad
mov
pop
ja
pop
pop
adc
push
fistps
mov
mov
jl
lahf
or
out
jb
sbb
mov
loope
outsb
dec
sub
lret
pop
pop
jge
xor
rorl
sarl
les
out
mov
lock
and
jno
hlt
adc
jp
aas
inc
dec
jmp
mov
inc
and
xor
lcall
push
pop
jns
in
in
stos
fdivrl
sahf
sarl
mov
daa
pop
ret
adc
sbb
and
mov
sahf
inc
ror
push
sbb
mov
xlat
inc
daa
flds
movsl
inc
adcl
insb
jno
xchg
ljmp
pop
push
mov
repnz
lods
sbb
adc
cwtl
std
js
sbb
out
push
rcrb
mov
or
or
mov
and
pop
xchg
inc
xor
pop
int
push
and
ljmp
mov
in
push
decb
xchg
pop
int3
xchg
into
dec
inc
cmp
xor
outsl
sahf
out
loope
shll
jb
pop
adc
daa
fbstp
movsl
subb
mov
test
sub
inc
add
pusha
sbbl
or
jo
sub
enter
mov
cmp
pushf
ret
dec
repz
mov
lea
lock
jle
test
jbe
outsb
pop
lcall
fldl
movsl
addr16
and
cmpsb
push
jae
sbb
sub
push
fistpll
stos
pop
or
pop
add
ret
std
imul
sarb
mov
mov
push
sarl
daa
shrl
xchg
popf
addr16
stos
mov
int
xchg
dec
xchg
xor
adc
or
xor
adc
out
add
outsl
leave
adc
mov
jp
or
xor
mov
xchg
mov
in
pop
enter
add
test
ds
cmp
daa
or
or
ljmp
mov
jne
xchg
leave
pop
push
mov
leave
js
std
sbb
mov
cmp
mov
faddl
mov
mov
outsl
lret
pop
xorl
xor
es
iret
xor
arpl
loop
addr16
stos
cmp
sub
inc
xor
jmp
xlat
jg
sbb
push
cmp
inc
cmp
pop
sub
cmp
sbbb
test
ret
addr16
pop
pusha
or
jmp
inc
arpl
stos
and
mov
or
imulb
cmp
pop
ja
enter
xchg
pop
dec
add
sub
or
enter
sub
cmp
mov
and
sbb
cmp
jge
sub
and
add
lahf
in
sbb
xchg
mov
pop
inc
add
sahf
imul
ds
stos
xchg
adc
maskmovq
imull
sub
insl
jg
sub
inc
xchg
subl
fimuls
addr16
enter
aam
insl
cmp
mov
aam
call
pop
clc
inc
movsl
lcall
fmul
ss
clc
sub
dec
stos
fadds
shll
cwtl
mov
jb
inc
mov
outsl
inc
out
ja
aad
sbb
lcall
sbb
or
repz
xor
test
in
mov
iret
and
je
rcr
inc
in
xor
subb
loop
xchg
or
fsubrp
push
or
pop
pop
lret
int
or
outsl
lahf
xchg
dec
adc
xor
push
mov
aas
stos
imul
or
inc
inc
xchg
push
push
push
sub
or
sbbl
push
xor
das
fistpll
fsub
fs
sbb
pop
std
and
mov
jg
es
add
loopne
cmpsb
mov
repnz
cmp
adc
test
adcb
movsb
rclb
mov
out
mov
int3
fs
sbb
mov
aas
in
fwait
sbb
fldt
adc
ds
test
sbb
sti
pop
int
xorb
fcomp
in
fistpll
xlat
ss
loope
and
mov
or
fimull
sti
xchg
ret
outsb
cmp
pop
cld
sbb
shll
dec
cwtl
fisubrl
pop
in
mov
outsl
xor
pop
push
add
fs
add
enter
fwait
adc
push
mov
outsl
xor
test
cmp
xchg
xlat
not
lahf
adc
lahf
xchg
jbe
mov
mov
push
sub
movsl
rorl
sbb
push
ret
xor
aam
jp
or
add
push
xor
sbb
into
sbb
push
imul
imul
dec
fbld
pop
mov
aam
outsl
jecxz
pusha
push
adc
jb
and
add
xor
mov
mov
mov
xlat
xchg
frstor
out
sarb
xor
loop
rorb
jp
mov
into
in
sub
pushf
arpl
jnp
arpl
je
dec
pop
push
jb
lret
cwtl
lds
and
cli
mov
imul
xor
mov
push
lcall
pop
aad
out
shll
notl
loope
mov
push
adc
stos
leave
loope
push
mov
subb
test
mov
mov
inc
in
ret
cmp
mov
pop
add
in
iret
adc
jl
or
lods
fisttpll
loope
push
jge
scas
push
add
jae
add
push
cmp
xor
cmpsb
call
call
inc
cwtl
xchg
push
mov
push
sti
adc
sub
aad
sub
shll
hlt
cmp
push
dec
push
mov
fs
push
mov
jne
hlt
lcall
shll
and
into
stos
push
in
mov
pop
in
or
mov
out
or
mov
mov
outsb
cwtl
inc
add
idivl
bnd
dec
mov
mov
lret
aad
ficoms
mov
lahf
jg
lds
mov
inc
ljmp
mov
jp
iret
jbe
lahf
pop
adc
jns
cmp
inc
adc
mov
push
sbb
push
and
or
mov
iret
sar
into
pushl
and
lea
les
lahf
leave
jecxz
lods
mov
pop
das
push
jmp
shlb
dec
sub
inc
push
in
add
sbbl
stc
inc
sub
xchg
cmp
jmp
push
push
cmp
stc
jnp
push
mov
inc
jg
mov
jg
out
cmp
pop
sub
sti
push
adc
data16
sahf
rorb
jle
lahf
test
scas
xchg
mov
jge
aad
pop
out
pop
jbe
sbb
xchg
call
mov
in
cmp
mov
push
lret
gs
pop
and
nop
movsb
cwtl
sbb
sbb
mov
mov
dec
loope
andb
and
push
xchg
mov
in
sub
fisttps
movsbl
mov
jne
stos
inc
mov
cli
xor
or
pop
push
and
sbb
fdivr
or
movsb
cltd
into
push
adc
test
fidivs
mov
popf
ror
sub
sub
test
mov
mov
ficompl
pop
adc
je
add
fcomp
scas
dec
mov
add
loopne
call
pop
sbb
lcall
ret
xchg
mov
sbb
push
rcll
adc
mov
lcall
ret
and
movsl
das
and
mov
push
pop
cmp
cltd
xchg
sahf
xchg
or
addr16
xor
insl
pop
lods
in
cmpsl
cwtl
std
out
aam
dec
mov
repnz
sbb
lcall
adc
jb
cmpsl
testb
call
jecxz
lcall
fwait
jne
in
sub
mov
in
and
cmpsl
adc
pop
shll
mov
cs
sbb
setbe
jmp
adc
rorb
cld
out
mov
and
xor
ljmp
push
push
loope
sbb
jo
shr
push
ret
popaw
es
inc
loopne
mov
int3
test
xchg
cmpsb
sbb
out
lds
add
adc
push
or
insl
fnstsw
ja
cvtps2pd
jge
in
mov
ret
cmp
jo
or
pop
and
xchg
dec
or
imul
orb
hlt
scas
fbld
aas
push
fcoml
jmp
out
into
out
pop
sbb
xor
jne
mov
lret
dec
dec
or
fsubrl
jmp
pushf
push
icebp
repnz
push
movsl
mov
out
mov
cmp
cmpsl
int3
adc
sub
or
test
ret
pushf
pop
push
add
jnp
pop
add
inc
and
lods
and
mov
push
sub
push
xchg
push
sbb
int
xor
push
mov
data16
or
mov
rolb
dec
inc
mov
pushf
in
inc
and
iret
add
dec
popl
testb
shll
pop
or
sbb
arpl
mov
imul
fidivs
lds
cli
bound
cmp
add
test
in
test
pusha
inc
jecxz
cld
test
ret
and
mov
fcmovne
add
fistps
lcall
test
mov
fmull
lea
arpl
cli
dec
cltd
or
push
inc
mov
ljmp
ljmp
cmp
pop
notl
in
mov
dec
pop
mov
gs
add
push
pop
ficoms
jp
scas
cmp
add
sti
jecxz
mov
sub
pop
push
jne
imul
imul
push
pushf
ss
aas
outsb
mov
out
popa
xchg
jmp
push
sbb
gs
test
adc
roll
popf
test
push
xchg
popf
loop
xchg
jb
addr16
shlb
jg
int3
sbb
leave
ret
iret
imul
xor
scas
mov
add
adc
rclb
fldl
sbb
cmp
js
sbb
mov
jmp
cltd
lock
xor
scas
inc
orb
testl
sarb
sti
sar
out
mov
sub
inc
ljmp
dec
mov
cmp
insb
out
ds
repz
xchg
ja
lret
sbb
in
sbb
pop
mov
push
pop
mov
xchg
cmp
mov
stc
cmc
aad
popa
add
push
sub
mov
cmp
call
rcrb
jo
jns
xchg
lret
scas
scas
je
jns
mov
or
stos
stos
lds
adc
pop
jmp
int
lret
sbb
dec
or
sbb
jmp
rcrl
nop
push
mov
jge
mov
mov
in
adc
rcr
ret
mov
fcmovbe
mov
jecxz
leave
loop
andb
sbb
js,pn
jl
add
clc
adcb
add
ljmp
pop
mov
sub
imul
arpl
or
dec
gs
ds
ds
dec
xor
testb
stos
cmpl
pop
insl
mov
add
push
sub
lock
push
push
xchg
cmpl
iret
pop
hlt
sbb
mov
pop
into
adcl
lds
cmp
fbstp
jbe
dec
lods
sbb
fdivrp
fs
inc
ljmp
xchg
push
mov
or
div
loopne
adc
add
gs
xor
jge
es
xlat
mov
jnp
cmp
jno
loop
inc
sbb
jo
dec
popf
jle
add
inc
mov
and
dec
cmp
les
leave
out
jg
mov
xor
outsb
test
xor
sbb
mov
fildl
nop
sub
pop
aad
call
and
xchg
pushf
push
subl
lret
mov
hlt
adc
fidivs
push
inc
xchg
mov
jno
mov
ja
jp
std
fs
inc
enter
notl
call
sbb
inc
xor
dec
cltd
fucomp
ja
adc
xor
stos
push
dec
and
and
or
sub
fsubs
loopne
sub
xchg
inc
sbb
and
in
jb
or
adc
movsb
pushf
pusha
es
fwait
repz
fistpl
pusha
pop
stos
xchg
or
mov
adc
lea
mov
je
lods
and
incl
mov
lock
in
imul
js
cmp
jns
ret
fwait
ja
mov
fistpl
mov
mov
jmp
stos
pop
das
jg
xor
pop
insl
pop
sbb
dec
push
nop
jle
stc
gs
push
xorb
outsl
mov
jb
sub
aas
dec
lret
je
sbb
and
add
movsl
icebp
mov
push
ret
repnz
mov
mov
add
hlt
test
push
inc
cmp
xor
sub
push
es
cmc
pop
push
and
jl
pmaxsw
call
or
int
pushf
push
pop
mov
jecxz
jmp
stos
out
imul
jnp
jle
out
cld
jl
jne
xor
shrb
push
imul
call
jmp
imul
fidivs
sti
mov
dec
mov
and
mov
fld
push
xlat
test
xchg
pop
adc
sbb
mov
fld
in
arpl
jge
pop
mov
push
cli
mov
xchg
nop
inc
int3
in
das
jb
movb
or
push
or
popf
inc
ljmp
or
fisttps
aad
push
repz
adc
decl
push
and
mov
mov
jmp
lret
dec
lret
call
das
and
and
cmovns
lds
shl
xor
in
test
inc
mov
es
fistl
xchg
insl
add
or
dec
test
adc
in
xchg
adc
xor
add
stc
outsl
lcall
mov
shl
addr16
rolb
cmp
dec
movsb
mov
out
sub
test
icebp
mov
add
ret
aam
pop
cmpsl
leave
mov
movsb
inc
and
lock
fsubl
out
dec
push
mulb
inc
shll
jg
jp,pt
dec
xchg
out
loop
pop
sbb
xor
inc
xlat
mov
mov
lock
adc
in
out
stc
popf
sub
sti
sbb
and
cld
xchg
fsubrs
mov
cltd
lea
dec
push
repnz
xchg
mov
mov
pop
in
and
xor
aas
mov
sub
add
je
xchg
out
mov
scas
xchg
ds
jl
sarl
psubsb
pop
popf
pop
mov
jle
ja
cmp
dec
xlat
mov
or
jle
xchg
pop
sbb
sbb
repnz
jbe
mov
jmp
adc
test
push
lret
lret
adc
sub
aas
insl
xlat
jne
xchg
and
xor
loope
sahf
imul
xlat
mov
xor
sub
xorl
inc
movl
sub
mov
mov
sbb
outsb
mov
lds
dec
cmpsb
hlt
cld
fildll
insl
dec
fnsave
loop
cmp
stos
mov
push
dec
cmpsl
test
out
mov
stos
push
dec
fdivs
dec
sub
pop
lods
push
push
pushf
jecxz
adc
mov
cmp
xchg
icebp
pop
mov
insb
out
data16
mov
mov
mov
jbe
lcall
test
sub
mov
jmp
mov
xor
push
and
dec
sub
jns
mov
lahf
ret
add
jge
out
sub
mov
pop
aad
rol
mov
fdivp
int3
jne
int
push
mov
jnp
dec
mov
clc
lods
xchg
frstor
and
jnp
jae
addb
cwtl
int3
inc
xor
ret
jge
movd
repnz
lret
push
cmpsb
cmp
adc
clc
mov
xchg
pop
dec
push
sub
jg
or
sub
ljmp
insb
push
lea
aas
add
out
xor
in
push
add
mov
int
inc
xlat
mov
mov
loopne
imul
mov
adc
inc
mov
fdivs
inc
xchg
aas
xorl
arpl
testl
xor
or
pop
mov
lret
rorb
mov
or
and
pop
adc
xchg
cli
leave
and
sbb
sarb
mov
fisubs
aam
pop
mov
cmp
xor
lock
jae
inc
mov
cwtl
and
cltd
fldenv
mov
lock
adc
and
lret
pop
add
mov
xchg
inc
movsb
mov
stos
and
jno
notb
test
push
push
sub
xchg
jae
mov
aad
mov
inc
cmc
movsb
es
pop
xor
rorb
sbb
adc
pop
xchg
nop
fld
cltd
xchg
and
push
loop
shlb
add
dec
cltd
push
push
pusha
inc
mov
stos
test
sbb
lret
sbb
add
mov
rorb
dec
aas
stos
cmc
sub
add
ret
adc
roll
leave
fcompl
fiadds
out
shrb
into
push
std
loope
loope
iret
adc
orb
fs
call
add
jmp
jp
mov
xor
movsl
add
in
cmp
sub
mov
fdivp
out
jle
mov
lea
mov
int
jo
push
dec
add
mov
mov
mov
aam
xchg
std
mov
jnp
ss
sbb
inc
lret
pushf
jbe
inc
inc
jno
mov
cwtl
mov
inc
mov
xchg
sbb
jb
push
push
popa
dec
jl
and
and
outsl
mov
add
incl
dec
imulb
inc
adc
add
adc
cmp
test
push
hlt
in
cli
inc
mov
cmp
inc
out
fidivrs
cwtl
test
mov
xchg
daa
inc
mov
stc
test
sub
and
push
inc
mov
ljmp
ja
mov
jnp
jp
fisubs
or
xchg
xchg
pusha
scas
out
sbb
repnz
mov
nop
sti
cltd
xor
stc
enter
pusha
mov
fdivrl
sbbb
mov
and
mov
dec
iret
jmp
movsl
mov
adc
xor
xchg
sbb
jge
jmp
xor
mov
cli
movsb
decb
add
push
and
sub
pop
jb
outsl
and
jmp
and
push
push
or
add
out
xchg
iret
jp
mov
bound
sbb
addr16
mov
ret
add
xchg
jbe
out
inc
jl
push
aaa
or
loope
addr16
xlat
dec
shlb
inc
clc
dec
pop
out
outsb
mov
fs
mov
idivl
jmp
jl
adc
aam
pop
mov
xor
pop
addr16
dec
icebp
and
in
pushf
dec
into
mov
hlt
out
mov
pop
imul
push
out
inc
xchg
inc
and
mov
inc
loopne
arpl
out
out
sub
and
or
xchg
lret
dec
ja
mov
jp
repnz
lahf
cld
out
sub
push
adc
mov
mov
lcall
sbbl
sbb
iret
pop
xor
xorl
pop
sbb
xchg
lds
cmp
jp
scas
pop
outsl
adc
hlt
push
sub
inc
sbb
fiadds
mov
jbe
dec
sbbb
mov
mov
mov
pop
mov
mov
je
adc
stc
lea
sub
cmp
mov
int3
inc
or
push
cmpl
jns
add
aad
pop
jge
mov
mov
push
xor
cli
hlt
loop
inc
push
sarl
jae
pop
mov
adc
enter
pop
sbb
aas
jmp
pop
rorl
mov
sbb
inc
xchg
lods
loop
and
sbb
jbe
es
inc
icebp
int
rcll
outsl
cli
test
mov
rcrb
clc
test
test
lcall
cwtl
mov
adc
test
pop
sti
pop
lea
adc
xchg
adc
ljmp
stos
push
movsl
mov
or
pop
pop
inc
ret
cld
test
jge
out
test
lea
or
dec
and
cmp
lds
xchg
in
cltd
int3
out
pop
mov
popa
ret
icebp
call
addr16
mov
sbb
xchg
push
adc
adc
push
xor
mov
or
stc
addl
kortestw
push
push
sbb
jp
stos
ja
lock
mov
adc
xor
push
push
shrb
adc
je
scas
push
xor
pop
pop
loop
jp
faddl
ficoms
sub
inc
sub
call
bound
outsl
mov
decb
push
inc
xchg
int3
fucomi
shl
sub
and
imul
add
xchg
stos
jmp
sub
cmpsl
insb
mov
cwtl
ss
test
inc
xor
add
mov
sahf
lea
fnstsw
sub
icebp
int
scas
pop
inc
pop
push
clc
in
xchg
or
das
hlt
xlat
jo
jb
xor
aaa
test
mov
js
sbb
stos
in
stos
and
mov
stos
test
sbb
repz
repnz
xor
and
movsl
adc
cmp
jle
jns
or
or
loope
push
add
sub
xor
adc
fstps
mov
jo
rol
sbb
push
pop
push
pop
jne
packsswb
lret
sbbb
push
sub
xchg
jecxz
or
sbb
xchg
pop
push
test
pushf
rclb
add
cmp
aam
out
imull
push
outsl
ja
pop
push
add
ret
out
pop
ja
jnp
pop
mov
mov
es
push
dec
adc
das
mov
cmp
bound
jp
dec
pushl
push
adc
lods
js
aaa
bound
push
shl
loopne
mov
mov
out
and
test
jae
fs
mov
and
lods
push
xchg
dec
stc
xchg
ja
popa
outsl
and
dec
ret
shlb
dec
sbb
mov
lock
xchg
test
sbb
jno
cwtl
test
data16
cmp
xchg
xchg
out
dec
cmp
jae
dec
bound
clc
mov
mov
pushf
mov
clc
pop
ret
outsb
in
sub
cwtl
outsl
popa
mov
fcomip
mov
inc
add
nop
mov
scas
jae
sbb
and
xchg
dec
bnd
add
jbe
clc
inc
scas
push
dec
imul
mov
lcall
mov
test
mulb
call
movsl
mov
mov
aam
stos
rcr
ja
cltd
stos
pop
jno
daa
pop
mov
or
pop
jecxz
push
push
xchg
xchg
push
mov
loopne
or
js
add
pop
xor
aam
sbb
repnz
cmpb
sub
ss
sahf
pop
push
lods
lock
dec
out
fistl
mov
jecxz
and
inc
into
xor
movsl
adc
ds
andb
pop
cmp
push
mov
xchg
rorl
test
mov
std
or
and
adc
dec
mov
sub
das
into
sbb
int
push
data16
inc
mov
stos
addr16
outsl
pop
movsb
cli
push
add
sbbb
sahf
cmp
push
pop
xor
pop
sbbl
mov
cmp
mov
mov
jne
iret
or
mov
imul
inc
scas
cmp
sarl
pusha
ret
out
mov
push
loop
data16
outsl
mov
lea
leave
int3
jo
shll
sbb
dec
cltd
adc
nop
test
bound
fnstsw
and
lcall
pop
divl
lret
inc
jo
inc
ljmp
push
mov
and
and
je
bound
stos
subb
jle
add
mov
adc
inc
or
inc
add
inc
mov
sti
div
loopne
jge
add
fucomp
je
out
adc
adc
loope
addr16
loopne
or
push
cmp
adc
movsl
int
cmpb
orl
and
lock
call
xchg
repnz
and
push
and
aas
jno
jnp
adc
nop
or
mov
pop
adc
jmp
out
jge
bswap
mov
xor
mov
test
dec
add
cmp
add
pop
pop
std
adc
pusha
add
mov
mov
or
pop
mov
out
pop
jcxz
sub
xchg
gs
ss
push
jbe
adc
or
pop
lock
cmpsb
mov
mov
xchg
arpl
xchg
imul
sbb
aam
icebp
inc
out
adc
sbb
popf
xor
dec
fs
testb
in
ficompl
sarl
movsl
push
adc
mov
pop
shr
inc
add
pop
rorb
out
jo
jp
inc
adc
popa
insb
in
imul
fwait
cmc
mov
stos
push
pop
scas
add
js
push
push
jge
inc
pop
pop
add
mov
inc
pop
sbb
ljmp
gs
lret
mulps
or
xchg
mov
jle
cmpsl
pop
cmp
aam
es
pop
out
sub
testl
jge
xor
fcmovnu
adc
ja
incb
jp
lret
adc
repz
jg
adc
sbb
inc
jno
mov
fidivs
adc
test
clc
jne
leave
inc
xor
adc
loope
and
sti
mul
negb
shl
push
jne
test
das
mov
rorl
pop
test
repnz
stos
inc
lock
ret
sti
stos
xchg
lcall
cwtl
push
or
fldcw
movsl
jb
xchg
aas
jmp
xor
gs
inc
xor
iret
movsl
pop
mov
add
test
mov
xor
push
test
insl
insl
and
cmp
fbstp
aas
loope
xchg
or
jp
inc
lock
movsl
push
sbb
daa
cmp
enter
nop
xor
cmc
push
lahf
pop
or
sub
xchg
test
add
adc
movl
lds
pop
ffree
jbe
mov
and
loopne
out
adc
add
sbb
nop
fadds
add
add
push
sbb
sarb
je
push
mov
out
inc
data16
jae,pt
dec
outsl
lcall
and
aam
rcrb
lods
jecxz
mov
nopl
mov
je
arpl
orl
pop
rorb
out
push
repz
mov
insb
push
pusha
jbe
enter
sub
lret
rcl
andl
mov
dec
sub
xchg
mov
xchg
mov
arpl
mov
cmpsb
rcrb
and
das
jno
mov
bound
jmp
nop
js
or
jns
sbb
xor
jl
subl
push
or
push
xor
push
neg
fld
add
jg
out
lret
aam
push
neg
push
scas
mov
sub
push
mov
jb
pop
jae
test
or
xchg
add
mov
jbe
aas
ljmp
lahf
adc
add
out
xchg
xchg
mov
mov
cmc
sbb
aad
je
flds
stos
pop
inc
popf
cmpsb
mov
mov
pop
mulb
push
adc
das
and
push
in
jno
or
jns
dec
mov
cmp
jne
or
popf
or
fistps
cs
pop
mov
std
loop
or
ss
jno
inc
lods
iret
xor
mov
add
sub
push
cs
xchg
pop
inc
jecxz
xor
daa
in
lock
adc
add
lret
fcomip
pop
jno
jmp
and
mov
into
mov
sub
xor
inc
insb
jns
cmp
sub
pop
bound
sbb
in
or
pop
sub
push
lds
pop
sbb
insl
testl
push
push
xlat
ljmp
insb
movsb
sbb
sbb
adc
xlat
mov
jge
push
cltd
sbb
mov
cmp
xor
iret
mov
addl
add
shll
cmp
loopne
fucomp
xchg
stos
cwtl
jne
shll
out
jne
push
sbb
outsb
sarl
repnz
ficompl
mov
leave
icebp
xor
lods
in
and
mov
mov
outsl
fdiv
aam
into
adc
pop
xorl
inc
gs
pushf
push
push
sbb
cmp
das
shrl
mov
mov
ss
fisubrs
mov
shlb
adc
sub
sti
lret
daa
xchg
xchg
in
clc
cmp
int3
jne
adc
and
dec
shlb
sbb
or
int
lods
xor
pop
jnp
in
popf
aaa
call
xchg
test
nop
loop
cmp
inc
xchg
mov
adc
jge
jmp
adc
popl
lea
pop
push
lcall
adc
dec
mov
repnz
jge
test
dec
cwtl
mov
pop
shlb
in
stos
test
mov
and
pushf
popa
fmul
push
mov
mov
mov
fsubl
rcrl
sub
test
jg
das
inc
scas
mov
outsl
inc
gs
sub
out
mov
mov
das
clc
sbb
add
imul
lods
mov
sub
dec
call
inc
mov
js
sub
lods
pop
sahf
aas
push
cmpsb
push
mov
jbe
sbb
imul
mov
aas
inc
xor
stos
iret
out
xor
lea
push
or
cmp
mov
jmp
clc
je
mov
jge
ljmp
mov
xlat
mov
mov
fldt
push
mov
loopne
test
jl
cmp
loope
push
push
cmp
inc
sahf
inc
in
fld
inc
imul
int3
or
test
push
add
xchg
in
incb
call
test
dec
adc
pusha
mov
mov
lods
pop
imul
or
sbb
jne
popf
sahf
addr16
out
sbb
cmpsl
rcll
inc
or
inc
pop
sarb
cli
mov
adc
pop
inc
mov
jb
std
adc
mov
jge
push
xchg
daa
cmp
xchg
das
push
push
sbb
aam
cmpsb
dec
pop
loope
mov
loopne
mov
ss
in
sub
jg
mov
jb
sti
push
dec
add
adc
xchg
inc
fsubp
shrl
inc
call
and
xor
add
mov
xor
cmpl
xchg
insb
inc
in
xchg
pop
clc
jecxz
fwait
sbb
popa
lock
xchg
lods
rol
dec
cmpsl
push
mov
scas
imul
inc
xchg
ret
adc
in
aaa
out
jno
out
pop
xchg
mov
xor
mov
push
xlat
stos
push
fisubl
jecxz
push
call
inc
mov
push
mov
add
mov
rclb
mov
inc
out
aam
sbb
xorb
xchg
inc
and
and
xchg
push
xchg
loop
repz
xchg
cmp
mov
lahf
test
dec
shlb
push
sub
mov
int
imul
mov
scas
bound
adc
and
stos
jmp
repz
fisttpl
add
adc
jle
fsubp
mov
outsl
and
sub
mov
adc
push
pop
jns
jl
xor
jge
dec
lret
sbb
sub
lods
jle
fnsave
xor
mov
out
cli
add
jecxz
dec
dec
stos
xchg
fs
adc
icebp
ficoml
repz
xchg
or
aam
or
notb
push
ret
test
fadds
push
fwait
jne
mov
mov
mov
outsl
sbbb
in
cs
dec
scas
xchg
mov
adc
int3
ljmp
cmpsb
inc
cmp
pop
mov
jp
sbb
add
sbb
inc
subb
jp
loope
cs
jno
cmp
pop
jns
jnp
inc
js
fcmovnbe
push
lods
cmp
sub
in
pop
sub
xor
push
dec
sbb
sub
cmp
adc
ljmp
std
sti
aas
xchg
stos
rorl
hlt
fcomps
shrb
ljmp
lea
adc
loopne
sbb
out
cmp
xchg
fstps
push
repz
jnp
repz
mov
stc
lret
inc
sub
xchg
idivl
ljmp
sub
jo
std
pop
fidivs
ficomps
lds
in
add
insb
hlt
pop
pop
xchg
lret
jo
mov
call
pop
sbb
mov
clc
and
fiadds
imull
pusha
xchg
jo
push
and
or
sbb
mov
cltd
sbb
or
xor
frstor
add
aas
pop
xor
cmp
repnz
xor
sub
pop
outsl
xchg
clc
shll
lret
mov
add
bound
pop
or
xchg
lret
adc
jmp
lcall
repnz
mov
lcallw
imul
imul
xchg
sbb
mov
int3
and
sub
xchg
pop
das
mov
stos
notb
jmp
fsubrp
cmp
test
jp
popa
fadds
mov
sbb
cmp
and
adc
iret
in
enter
std
div
mov
mov
das
sbb
pop
push
mov
push
das
popa
scas
inc
xor
fadd
mov
out
inc
lods
jl
xor
call
loopne
xor
sbb
test
jo
ret
ljmp
stos
push
movsl
andl
mov
jbe
les
adc
sub
or
ds
push
cmp
mov
and
imul
or
jg
sub
sahf
lahf
jbe
xchg
or
add
pop
add
push
push
dec
jnp
out
stos
sub
mov
hlt
lods
xchg
ror
imul
push
jl
mov
hlt
lods
push
xchg
testb
adc
mov
aas
jmp
or
mov
std
dec
mov
cld
push
mov
in
pop
es
lahf
nop
ja
cmpb
loop
fdivp
int
imul
icebp
std
xor
inc
mov
scas
lods
mov
lods
pop
sub
stc
movl
jp
cmp
movsl
dec
xor
out
clc
sbb
mov
and
pop
gs
dec
sub
cmpsb
lds
mov
jge
mov
out
or
movsb
subl
cld
xor
setns
les
push
mov
test
jl
mov
or
mov
out
jl
xorb
add
mov
mov
sub
jbe
cmp
icebp
mov
jo
in
mov
jo
jne
jnp
test
mov
push
aas
mov
out
mov
fwait
loope
cs
jp
inc
in
xchg
repz
mov
dec
pop
xchg
pop
jmp
xor
xor
add
jbe
jno
mov
movsb
lcall
mov
add
jecxz
mov
inc
or
ja
ret
and
bound
push
addr16
scas
dec
adc
stos
ds
mov
rorl
adc
mov
and
adc
ds
nop
fisttpll
imul
nop
cmp
cmp
in
adc
lock
out
loop
pop
xchg
jg
cmp
mulb
dec
jecxz
mov
insb
or
dec
xlat
sti
inc
in
push
clc
int3
stos
or
fsubs
and
decl
pop
daa
sbb
ror
dec
inc
cmpl
mov
test
mov
movsl
int3
push
pop
movhlps
xchg
out
push
inc
cli
cmp
fstp
pop
fdivr
or
ja
pushl
mov
notb
call
and
xor
cmp
dec
add
mov
cmp
clc
cmp
pushf
and
stc
jne
cmp
xchg
sbb
inc
sahf
outsl
das
push
lret
lods
mov
fwait
push
dec
mov
aaa
mov
ss
jmp
push
jmp
inc
dec
jno
pop
lcall
fistpll
aam
pop
insl
inc
popf
pop
mov
mov
es
push
out
adc
inc
call
push
mov
mov
out
add
in
dec
adc
adc
gs
fucomi
fidivl
inc
cmp
popa
fildll
fucom
mov
mov
pop
push
sbb
scas
mov
arpl
stos
inc
fists
aam
outsl
mov
sbb
movsb
jns
mov
shll
cmpsl
cmc
in
jnp
mov
cmp
rorl
mov
push
shl
aaa
jg
mov
cmp
rcrl
or
fmul
jo
xor
cmp
aas
movsl
pusha
and
mov
sub
lcall
jl
dec
and
lret
jne
movsb
popa
adc
xchg
test
hlt
jnp
mov
aas
cmpl
pop
mov
jae
or
mov
push
rcll
xchg
mov
and
inc
aam
push
inc
mov
add
mov
pop
sub
stc
ljmp
cld
pop
insb
and
pop
jae
out
xchg
pop
addb
js
int
lods
imul
inc
pop
movsb
sub
int3
in
lods
rclb
out
adcl
dec
push
lahf
out
mov
jmp
and
aam
pushf
enter
fcompl
inc
pop
xchg
fbld
idivb
out
fwait
inc
outsb
fnstenv
dec
jecxz
jno
and
ja
xchg
inc
adc
mov
out
dec
jb
mov
clc
mov
bound
push
cmc
daa
lret
ss
pusha
cli
cltd
les
repz
aaa
add
cmp
outsb
fisttps
roll
cmp
xlat
out
lret
xor
sarb
test
inc
xor
mov
pop
inc
dec
movsl
into
orl
jb
adc
and
xorb
scas
je
test
loope
inc
negl
stos
jo
cmp
icebp
xchg
add
lods
fdivs
adc
xor
mov
or
sbb
rcrb
push
fbstp
int
outsl
xor
push
pushl
or
jbe
pop
rcr
test
test
sub
xchg
fistps
lcall
xchg
aas
je
outsb
sbb
loop
icebp
aam
loope
iret
fwait
dec
call
movsb
orb
imul
pushf
ret
jbe
dec
mov
inc
sbb
mov
out
lcall
gs
je
dec
sbb
cmpsb
loope
dec
jno
or
cmpl
mov
jb
pop
push
xor
jns
xchg
sbb
mov
icebp
xchg
aam
xor
ret
jmp
jnp
or
cmc
adc
xor
aas
aam
dec
xor
xchg
ds
aad
mov
imul
inc
clc
andb
test
mov
dec
inc
jmp
hlt
fists
or
popa
in
pop
mov
mov
dec
inc
xchg
push
outsl
test
or
mov
enter
sahf
sbb
shrb
and
xor
add
jg
js
lods
and
inc
mull
or
and
push
jb
or
xor
fwait
jg
in
int
sbb
pop
mov
ret
negl
stos
xchg
and
fstpl
and
hlt
test
jecxz
es
pop
jo
clc
jecxz
mov
je
rcrb
and
clc
adc
mov
xchg
push
out
popf
inc
data16
movsl
lret
stos
adc
pop
jecxz
lea
invlpg
fidivl
lcall
mov
and
push
or
adc
xor
movsb
outsl
mov
pusha
and
dec
pop
or
or
mov
mov
cmp
jle
iret
jnp
stos
push
cmp
adcb
adcl
movsb
jle
imul
or
xor
hlt
mov
and
cltd
dec
ds
fimull
or
cwtl
jge
push
les
test
rorb
inc
push
cltd
mov
mov
or
mov
mov
pop
jp
mov
sub
cwtl
lods
icebp
xchg
mov
mov
daa
mov
mov
and
jns
xchg
pop
mov
mov
jae
mov
sub
jmp
dec
jo
or
subl
xchg
pop
movsl
insl
push
and
shl
std
test
out
mov
mov
jno
add
push
jne
cmp
pop
mov
add
out
in
stc
lret
fs
dec
sbb
out
xor
xchg
cmp
mov
out
sbb
dec
cmpsl
jne
out
repz
inc
adc
cmp
jbe
pop
das
mov
mov
push
push
dec
insl
imul
mov
jge
xlat
les
cld
xor
push
lahf
mov
cmp
dec
out
sub
xor
inc
aam
sbb
add
test
je
cltd
outsl
xchg
mov
cli
loope
xor
xchg
aas
nop
dec
xlat
xor
jmp
out
pushf
push
bound
lcall
push
sub
mov
out
outsb
sarl
pop
fsubrs
fdiv
mov
decl
inc
gs
push
push
push
xorb
fdivs
aad
pop
lret
pop
stc
add
lods
or
xchg
and
mov
xchg
out
cltd
ret
push
bound
fisttpl
sub
or
cmpsb
pop
mov
push
inc
xchg
add
mov
fs
jp
inc
int
fcmovnu
shlb
cmp
in
mov
fisttpl
push
cmp
xchg
out
mov
leave
test
pop
fucomip
jo
mov
movsb
in
jmp
fcom
test
jae
sbb
mov
fdivrl
imul
in
lock
lcall
pop
insl
fucomip
loope
jno
and
mov
jae
out
aam
push
pop
jmp
clc
push
arpl
pop
popa
movsb
xchg
sub
lahf
es
xchg
sub
or
je
mov
cmp
ja
mov
stc
call
movsb
lods
mov
sar
popf
cmp
and
cmp
dec
js
out
adc
enter
je
nop
mov
ljmp
cmp
mov
pop
bound
fsave
or
push
int
popa
xlat
sub
sub
filds
sbb
dec
inc
notl
jl
xor
pop
repz
jmp
jmp
dec
xchg
push
jne
fnstenv
cmpsl
rcrb
icebp
mov
xlat
mov
and
dec
jl
scas
xchg
or
nop
cmp
jae
mov
mov
test
or
cmp
push
out
pop
mov
mov
and
jmp
xchg
repz
pop
clc
fidivs
imul
pop
out
push
mov
mov
call
das
outsb
ret
or
int
mov
stc
es
ret
lods
add
xorl
test
lret
xchg
les
xor
mov
aam
idivl
add
or
or
pusha
mov
in
ficoml
insl
mov
loop
test
scas
mov
je
pusha
pop
sbb
out
sbb
lods
sub
std
clc
lock
adc
mov
fcompl
dec
into
xchg
dec
mov
xlat
out
add
lods
fstpt
jmp
clc
push
xor
mov
mov
or
mov
pop
or
or
enter
inc
bound
or
or
dec
fildll
test
ficompl
popf
insb
mov
jp
les
dec
sti
xchg
inc
xchg
js
hlt
mov
xor
xor
mov
nop
popf
shl
shlb
mov
add
test
add
push
dec
push
out
push
ss
jns
movups
bound
insb
sub
add
push
mov
mov
popa
sub
pusha
jnp
jnp
push
lods
add
inc
ret
push
push
shr
xor
fcompl
or
mov
push
xlat
adc
lods
adcl
es
repnz
jo
pop
mov
outsb
cmp
or
loop
daa
inc
mov
sub
aas
sbb
jle
js
scas
sbb
mov
out
sub
mov
xchg
push
push
jl
sub
ja
adc
and
mov
roll
icebp
test
and
in
cmpsl
jl
xor
xchg
iret
push
out
in
sub
add
add
mov
sub
das
pop
pusha
mov
inc
mov
enter
xchg
push
nop
pop
icebp
adc
cmp
cmp
sahf
hlt
and
ss
imul
iret
fistpl
sbb
mov
pop
xor
insb
pushl
js
xor
jno
pop
push
or
mov
push
movsb
loop
je
cwtl
pop
sub
jecxz
fisubrs
repz
lods
aad
jl
cli
mov
sub
les
lcall
std
fcomps
push
mov
add
mov
push
xor
clc
sub
or
mov
or
ss
mov
jns
fcompl
test
cmp
pop
mov
pusha
fnstsw
push
lock
out
xor
sbb
daa
aad
push
cmp
movsl
add
pop
adc
out
mov
and
addb
xor
out
cmc
jl
je
dec
push
jbe
push
out
shrb
xor
int3
repz
dec
inc
adc
push
decb
mov
push
dec
insb
and
push
sahf
cmp
dec
inc
adc
aaa
sbbl
jecxz
jns
push
xor
jne
mov
cmp
into
xor
test
xchg
inc
push
outsl
test
push
jno
inc
rorb
ja
ljmp
xchg
gs
jb
pop
insb
das
mov
mov
popa
pop
mov
jl
jl
adc
xchg
lret
fcompl
dec
adc
pop
fiaddl
pop
cmp
roll
sbb
add
xchg
mov
xorl
in
jecxz
lea
aam
ret
bound
or
and
mov
enter
test
call
aam
ljmp
insl
lret
xor
std
popf
or
sbb
adc
in
sub
clc
gs
lds
leave
dec
push
lcall
cltd
sbbb
or
jns
xchg
sarb
cli
push
pop
and
insl
and
mov
pop
xor
pop
push
enter
or
test
and
popa
adc
add
ret
ret
in
dec
inc
dec
lahf
insb
int3
mov
movsl
push
fisubs
aas
lcall
push
mov
pop
outsb
xchg
mov
bnd
sub
or
shlb
sbb
mov
push
add
sub
mov
mov
xchg
lds
call
mov
shr
das
or
cs
cld
shlb
jg
inc
mov
jmp
sbb
adc
loope
popf
sub
sub
negl
int
push
lahf
loopne
push
lods
push
or
loope
scas
dec
jl
sub
stos
test
cs
add
pop
push
xor
aaa
or
ss
pop
lods
cmp
jo
fbstp
adc
mov
jno
loopne
mov
lods
bound
push
dec
add
xchg
sahf
aaa
imul
int
mov
or
dec
inc
mov
call
mov
sub
or
pusha
jge
adc
ds
xor
mov
xor
and
push
inc
xchg
cmp
loop
mov
les
out
mov
mov
pop
jnp
ret
int3
lret
adc
in
jae
xchg
jne
or
and
aad
das
hlt
filds
and
push
inc
and
dec
rol
jbe
leave
xor
fistpll
or
or
add
stos
sub
jnp
out
dec
cmpsl
mov
push
or
jl
adc
push
xlat
adc
dec
test
jecxz
or
sti
mov
jne
xchg
inc
notb
adc
push
cmpsl
pop
mov
lods
ljmp
xchg
std
cmpsl
cmp
cmp
jae
outsb
mov
mov
outsb
aad
std
aam
in
push
push
test
push
scas
bound
mov
xchg
enter
lds
je
mov
fnstenv
imul
cmp
in
jmp
or
dec
sbb
stos
push
mov
repnz
fldt
aam
xchg
arpl
cwtl
sbb
ss
in
xor
mov
xchg
or
lds
mov
adc
stos
scas
pop
loop
pop
sbb
push
cld
cmpsb
stos
data16
inc
ja
sub
flds
sub
cltd
push
addr16
sbb
or
scas
movsb
push
popa
inc
pop
repnz
imul
mov
adc
imul
or
pop
sbbl
cmp
and
sarl
and
pop
push
mov
in
mov
enter
mov
pop
mov
adc
add
fldt
stc
cld
jp
xchg
leave
cwtl
mov
fildl
cwtl
cs
fs
inc
push
sbb
test
adc
repnz
outsl
xchg
bound
outsl
cmp
xchg
out
ffree
orb
test
sub
ret
or
lock
jp
movlps
pop
xchg
insb
cwtl
adc
dec
in
and
repnz
pop
aam
adc
or
out
shl
xchg
sub
xor
daa
test
cmp
int
out
int
cmp
mov
mov
sub
aas
pushf
mov
mov
notl
outsl
stos
insb
mov
mov
mov
out
pop
shll
rolb
je
stos
jno
lret
ja
stos
push
cmp
lds
jo
cmp
ret
jno
and
push
outsb
inc
bound
nop
mov
inc
mov
mov
out
mov
inc
test
out
mov
jle
cmp
mov
jp
shrb
ljmp
sti
aas
xchg
aas
lods
adc
cmpl
mov
outsb
loope
movsl
mov
mov
push
fisubl
inc
pop
and
imul
cltd
inc
in
cmp
sub
data16
or
pop
cmpsl
xchg
pusha
dec
inc
xlat
lret
jp
fiaddl
int
mov
jne
dec
test
enter
pushf
outsb
je
jecxz,pn
fnstsw
mov
outsb
in
push
adc
mov
or
loop
jecxz
or
imul
cli
mov
mov
movsb
push
or
leave
int3
sub
push
push
mov
pop
mov
sbb
xor
adc
xor
aaa
push
aam
sub
xor
jbe
ljmp
call
sbb
push
fsin
sbb
int3
insb
mov
jge
sub
jmp
mov
test
cmp
cwtl
pusha
jecxz
or
lods
add
rol
mov
sub
mov
scas
int3
mov
xchg
add
cmc
sbb
pop
xchg
dec
adc
test
or
jo
xchg
mov
pop
fstpt
and
mov
test
cmpb
pop
jmp
out
push
push
jge
pop
popa
sbb
xchg
sub
add
fistl
fcomip
inc
rcrb
push
and
lods
bound
rcl
pop
clc
xchg
test
lret
or
addr16
test
mov
mov
mov
call
ja
mov
push
test
std
sbb
cld
inc
lods
std
test
icebp
mov
imul
mov
or
loope
jne
push
call
cs
daa
dec
fwait
push
mov
test
addl
adc
push
sbbb
mov
stos
pusha
mov
push
jmp
push
sub
or
jmp
ret
std
push
mov
fisttpl
jae
push
addr16
dec
lock
jne
push
movb
pop
push
sub
or
mov
cmp
xor
cld
xchg
mov
dec
fsubrl
push
rcrl
cmpsb
pop
push
arpl
addr16
pop
pop
loop
dec
shl
push
fld
pop
and
push
pop
rclb
mov
sbb
xchg
cmp
xchg
adc
push
lcall
addr16
sti
adc
mov
xchg
mov
inc
or
sahf
scas
decl
sbb
sub
sti
mov
xor
xchg
xor
dec
pop
xor
jle
adc
in
in
clc
adc
test
jecxz
mov
mov
xchg
sarl
cli
imul
mov
int
pushf
cwtl
clc
fdivrs
popf
imul
sbb
dec
or
pushw
fucom
clc
sete
ss
lods
push
cmp
movsb
addr16
stos
mov
xor
add
nop
jle
lock
sbb
scas
jl
inc
xor
lods
sub
and
daa
pop
push
ret
call
psubb
sbb
inc
out
push
lods
outsb
inc
sbb
andl
mov
dec
push
sub
jp
adc
jno
xchg
add
aas
pop
xor
mov
add
push
xchg
cmpsb
aam
xor
decl
in
adcb
xchg
add
pop
mov
xchg
ja
dec
bound
outsl
mov
cli
push
shll
hlt
addr16
push
mov
push
stc
mov
in
dec
mov
xor
push
pcmpeqw
sahf
cmp
testb
outsb
mov
in
popa
lret
aas
in
mov
mov
aas
adc
outsb
mov
cld
rclb
int
fisubs
into
fsubl
push
pop
inc
rcl
hlt
mov
nop
pushf
std
adc
cmp
repz
pop
lea
loope
es
mov
mov
xchg
cltd
call
and
push
add
out
faddp
add
jle
cli
xchg
lock
mov
push
or
ret
sbb
les
dec
cltd
sub
enter
ret
ss
cmp
cli
mov
push
rcr
addl
loop
cmpsb
imul
ss
mov
fisubrl
cs
cmp
jmp
imul
cmp
sub
sti
cltd
roll
into
jmp
and
enter
xchg
xchg
push
cwtl
sub
lret
mov
cs
aas
push
cmc
jno
arpl
mov
std
loop
loope
lret
inc
test
mov
out
mov
xchg
cmpsl
jge
test
icebp
sbbl
adc
push
sub
inc
cmp
cmp
mov
cmc
and
pop
bound
outsb
pop
inc
insl
idivl
jbe
cs
push
popa
pop
setnp
push
lahf
pop
lds
xchg
inc
sub
cmp
data16
loopne
xchg
mov
mov
aas
sub
cmp
out
outsl
mov
lcall
sbb
cmp
and
pop
lods
adc
adc
and
notb
sub
push
out
popa
lahf
and
in
pop
sbb
fiadds
ret
into
mov
ja
mov
push
adc
jne
ss
adc
shrb
shl
arpl
mov
rcrl
cmp
fstpt
mov
out
push
pop
cmp
rcrl
lret
mov
cmc
ret
inc
in
in
mov
add
mov
pusha
mov
xor
mov
pop
out
jne
add
jl
std
jmp
test
jge
in
std
rcl
adc
lcall
ds
in
push
leave
sarl
and
or
add
add
adc
jb
aas
inc
leave
mov
mov
xor
mov
mov
shlb
test
jb
mov
ret
cwtl
aas
fs
mov
jae
inc
outsl
das
add
mov
fiaddl
mov
int3
mov
and
fnstcw
shl
mov
push
cltd
sbb
xlat
out
inc
cmpsb
popa
loope
sti
cmp
or
pop
and
aam
test
mov
mov
les
rorb
mov
imul
repz
or
rcr
gs
pop
fistl
pop
inc
jl
aam
and
int
leave
mov
testb
fists
pushl
stc
pop
loope
or
cmc
mov
into
sbb
sub
push
and
movb
jl
sbb
repz
and
shlb
insl
sti
or
jge
push
xchg
xlat
mov
lret
xchg
and
mov
subl
add
push
lcall
pop
icebp
das
call
ja
jns
or
icebp
mov
cmpsb
pop
in
dec
scas
mov
scas
cwtl
mov
push
stc
or
adc
iret
mov
es
mov
cmp
mov
xor
shlb
shlb
and
adc
cmpsl
cltd
sbb
jle
lods
test
les
sub
arpl
inc
xchg
xchg
shlb
mov
fs
pop
dec
int3
ret
hlt
mov
orl
sbb
cmp
ja
cmp
inc
mov
add
add
xchg
les
in
repz
jbe
les
sbb
imul
popa
mov
or
outsl
sti
mov
sbbb
pop
lods
inc
outsb
xlat
mov
nop
dec
push
adc
push
fadd
outsb
xor
addr16
lret
jp
fidivrs
mov
mov
xor
fistl
lods
and
sub
mov
out
fcmovnu
outsb
jnp
push
lea
scas
lock
mov
repnz
add
divb
adc
aaa
xchg
lsl
mov
bound
int3
adcb
sub
xor
fisubrl
cmp
rcrb
pop
out
cmp
arpl
mov
mov
pop
dec
or
pushl
dec
add
push
test
call
into
fadd
jo
or
popl
sbb
pop
dec
cmp
out
scas
or
push
popa
mov
daa
mov
in
push
pop
dec
fisubl
xor
inc
loopne
add
int
mov
mov
xor
sti
mov
pop
call
jl
les
shll
test
mull
cmpsl
jne
mov
push
jbe
lods
sbb
cli
push
dec
in
xor
cmpsl
inc
push
fcmovnb
fisubrl
int
jo
outsb
je
push
or
xor
gs
fidivs
or
dec
out
mov
jne
cli
push
dec
xchg
rcrb
and
es
dec
ljmp
je
out
cmpl
cs
ret
jl
mov
xchg
mov
jbe
vmovss
pop
fucom
add
bound
repnz
outsl
clc
sbb
stos
cltd
xor
mov
push
mov
sbb
cmp
ja
inc
out
push
pop
sub
sub
or
cmp
icebp
cmp
xchg
inc
push
sti
mov
insb
adc
imul
int
pop
sahf
xchg
aad
mov
aam
sti
dec
mov
adc
lods
nop
pop
jp
cmc
sbbl
test
in
adc
mov
out
lcall
sahf
cmp
pusha
insb
mov
ret
mov
adc
add
mov
iret
sub
mov
xchg
int3
scas
xchg
and
mov
jnp
pop
mov
xor
push
xchg
ljmp
ds
cld
cwtl
movsl
cmc
in
scas
aaa
sbb
pushf
sahf
cmc
mov
dec
jno
scas
out
aad
inc
shrl
outsl
inc
ss
mov
sbb
in
pusha
icebp
cltd
push
lock
mov
mov
int
aas
loopne
leave
pop
jl
das
sahf
pushf
aaa
scas
fnstenv
addr16
add
sbb
repnz
fdiv
mov
in
or
jl
mov
dec
in
cmp
lods
lahf
fwait
xorl
or
jne
aad
mov
or
daa
lods
js
jge
loopne
iret
scas
xchg
enter
inc
sub
xchg
inc
negb
or
lock
int
add
in
adc
js
xchg
push
pop
lods
mov
sbb
dec
jge
ret
fs
mov
mov
cmovge
jo
push
lods
xor
or
mov
adc
jle
adc
xchg
mov
int3
mov
mov
repz
pusha
mov
das
inc
test
mov
push
adc
insb
andl
cli
lods
adc
popf
lcall
or
jg
fdivrl
int3
cmc
mov
mov
addr16
int
push
dec
inc
fistpl
adc
test
sbb
loope
int
imul
pop
sbb
lods
sub
pop
nop
cmpsb
add
or
mov
sub
stc
dec
repnz
das
sub
int
aas
cmp
cli
test
jge
stos
scas
push
and
jnp
pop
push
pop
xor
scas
aad
sbb
cltd
ds
pop
test
xor
jp,pn
stos
xlat
lock
sbb
xchg
sahf
and
add
cvtdq2ps
loope
int3
cwtl
sbb
dec
rorl
jmp
cld
cmpsb
mov
bound
aad
cwtl
pushf
fisttpll
ret
out
mov
push
stos
mov
imul
aad
pop
and
je
icebp
fdivrl
push
pop
and
sbb
mov
scas
hlt
adc
out
insb
pop
jg
sbb
faddl
mov
dec
lret
lock
or
and
jl
cli
gs
push
out
adc
pop
cmp
ret
pop
jns
rcl
mov
sub
testl
mov
fisttpll
xlat
sub
in
in
jno
cli
stc
bnd
pop
gs
mov
inc
and
add
test
popf
push
sub
dec
call
push
dec
and
jb
scas
push
xchg
cmp
jno
sub
push
adc
dec
cli
jo
enter
cmp
cmp
push
mov
adc
int3
xor
repnz
mov
or
rcrl
or
add
das
inc
dec
push
dec
icebp
mov
xchg
rolb
mov
push
xchg
sahf
mov
adc
jg
sub
idiv
or
sti
incl
and
add
jnp
loop
sub
adc
icebp
push
and
jb
shlb
repnz
ja
lret
repz
push
inc
adc
pop
adc
and
inc
cmpsb
adc
push
aam
mov
cmpsl
add
sbb
testl
aad
ret
jl
sub
pop
and
daa
test
insb
mov
jp
or
xchg
pop
lds
loopne
sub
mov
lods
jno
push
mov
push
les
rcrb
push
pushaw
jle
roll
push
fldcw
and
dec
ficomps
nop
stos
and
pop
xor
in
out
xchg
ret
mov
fsubr
cmc
rcrl
cld
clc
push
mov
and
flds
xchg
push
dec
dec
push
push
ljmp
mov
pusha
in
rcr
jmp
push
repz
mov
leave
push
mov
jmp
mov
jmp
pop
sbb
mov
pop
push
sub
cmp
mov
scas
cmp
les
jg
in
loop
sbb
jge
jmp
xor
push
es
sub
cmp
adc
clc
stos
xchg
add
lods
xchg
jo
fldt
jnp
mov
push
adc
or
jmp
jb
push
jle
jge
cld
data16
pop
or
test
mov
and
xor
test
mov
sbb
mov
mov
imul
push
push
or
dec
cs
rorb
hlt
sahf
or
sub
filds
or
xchg
adc
pop
xchg
jne
js
cmp
jne
and
push
lods
mov
adc
mov
loope
icebp
enter
addl
xchg
mov
in
lods
mov
test
or
bound
ljmp
mov
call
xchg
inc
incb
push
imul
sbb
gs
icebp
mov
xchg
cmp
dec
pop
push
adc
cmp
std
xchg
and
cmp
dec
rclb
dec
sub
enter
fildll
imul
cmp
in
xor
adc
popf
mov
das
cltd
add
sbb
pop
add
addr16
jg
ret
lea
mov
cs
xor
outsl
test
push
out
xchg
stos
lods
insl
rcrl
sub
cmp
sbb
pop
dec
in
fwait
sbb
ljmp
mov
mov
pop
ss
into
push
cli
decl
push
lods
outsb
adc
push
and
repnz
push
push
jge
xchg
loope
lret
ret
sbbb
into
je
push
xchg
loopne
leave
cmp
and
pop
out
outsl
stos
repnz
push
sub
lods
out
ret
sub
stos
ja
mov
scas
mov
and
add
and
sahf
pop
push
lods
test
xchg
scas
sbb
xor
out
sbb
cmc
mov
cltd
push
mov
mov
into
js
cmc
insl
mov
mov
stos
xchg
mov
fldenv
dec
push
mov
les
fsubrs
cmpsl
push
ja
mov
jl
sbb
dec
in
mov
lahf
iret
idivb
sti
lret
roll
jmp
lods
test
jnp
sbb
lret
and
cmp
mov
inc
stc
in
pop
shl
push
or
pop
ljmp
jecxz
xlat
adc
push
je
out
aaa
nop
scas
lahf
enter
jbe
sti
push
xlat
xor
mov
fcmovne
stos
loop
pop
fcomp
mov
lods
mov
push
pop
popa
cld
andl
mov
icebp
cmp
sub
dec
pusha
daa
or
notb
imul
pushf
or
and
cmp
push
pop
outsl
out
mov
pop
addb
mov
pushf
inc
stos
loop
insl
xchg
sub
add
fisubrl
and
test
dec
ret
xor
add
sub
xchg
mov
cltd
push
das
sbb
inc
jmp
xchg
pop
loope
jecxz
rorl
sub
fwait
inc
es
cmp
popa
dec
lock
pop
jbe
jns
nop
cmp
imul
xor
scas
xchg
repz
popa
jge
into
sbb
addr16
and
or
adc
push
popa
push
adc
std
es
sbb
sub
std
push
dec
mov
call
add
inc
dec
xor
push
addr16
lea
push
gs
shlb
cmpsl
sbb
sub
cltd
and
dec
push
push
add
mov
add
mov
js
xchg
xchg
movsb
in
repz
mov
pushf
sbb
fstps
mov
shll
xor
mov
cmp
cmpsl
xor
mov
out
test
jb
jb
jge
cmpb
subl
cmc
pop
mov
jne
mov
xor
sub
push
ja
xchg
pop
rclb
pop
jg
repz
fbstp
cmp
lods
dec
nop
loopne
adc
pusha
insl
jo
cmp
leave
jmp
xchg
fwait
inc
sub
mov
xchg
pop
imulb
xor
push
outsb
pusha
in
and
mov
dec
sub
lcall
lret
sbbb
xchg
in
and
xchg
and
mov
mov
sbb
cmpsl
repnz
push
nop
adc
and
push
pop
fldenv
mov
jno
orl
add
sub
or
jp
popf
ret
mov
int3
pop
push
ds
xchg
pop
jae
jg
test
push
popf
scas
rcll
xchg
add
stos
push
mov
mov
sarb
xor
mov
mov
fcoms
jno
icebp
push
movsl
test
jecxz
xchg
gs
ret
es
movsl
mov
insl
mov
inc
mov
jae
xlat
ljmp
jle
sub
xor
daa
leave
out
mov
andb
push
test
adc
mov
or
or
in
mov
mov
frstor
jbe
ret
fistpll
lea
mov
add
sahf
add
lock
arpl
rcll
mov
movsl
mov
shl
std
je
jg
sub
jo
cwtl
cmc
lea
into
mov
inc
jmp
cmp
jno
cmp
mov
mov
push
mov
mov
out
ss
xchg
inc
or
mov
adc
jge
xchg
and
sub
add
ja
out
das
push
jnp
mov
test
in
ret
out
add
ja
outsl
shll
scas
inc
pop
loop
outsb
push
fs
mov
pop
aam
jg
ss
cmp
xlat
push
sub
rcrl
pop
xor
xor
hlt
stos
loop
add
xchg
pop
pushl
dec
bound
loop
cmp
jns
xchg
add
pop
in
xchg
sub
mov
jmp
filds
fisttpll
std
aad
inc
jmp
mov
pop
mov
xor
and
add
mov
in
sbb
gs
mov
paddq
inc
push
adc
test
subb
scas
das
mov
gs
add
in
nop
push
sarb
sbb
xchg
decl
dec
add
movsb
cmp
mov
popf
pop
lods
push
mov
or
mov
jbe
subb
sti
loope
ljmp
hlt
xchg
pop
lods
fdivr
jbe
adc
adc
and
ret
notl
and
ficompl
or
iret
xor
pop
testl
pop
inc
adc
addl
xchg
sub
addb
cmp
ljmp
pop
jl
add
mov
cs
loope
dec
push
mov
arpl
dec
inc
cmp
xor
sub
xchg
adc
lea
sbb
pop
cvtps2pd
imul
inc
lods
fistpll
pop
push
push
aas
sub
push
in
xor
mov
cmpsb
jb
lahf
ror
push
gs
imul
js
andb
jo
adc
dec
ljmp
jnp
fcoml
sbb
fstp
add
addr16
movsb
mov
pop
push
adc
inc
addr16
mov
xor
dec
fprem1
inc
mov
icebp
call
inc
adc
movb
jmp
pop
cmp
sbbb
inc
adc
roll
fnstsw
or
inc
pop
cmovne
popa
ss
sub
add
and
and
fcompl
pop
cmc
jbe
ret
je
insb
xchg
dec
hlt
repnz
pop
out
mov
adc
push
mov
mov
jecxz
cmp
dec
mov
sbb
and
dec
push
int3
cmc
add
imul
mov
sub
insl
data16
clc
and
enter
mov
jae
lods
rclb
stc
jl
or
mov
stos
ds
les
mov
repnz
out
dec
test
dec
lret
lock
jge
rclb
jae
mov
jne
ficoml
adc
sub
test
repz
nop
pushf
nop
rol
mov
sub
in
das
insl
ds
jp
adc
mov
out
mov
test
dec
insl
pusha
mov
dec
mov
pop
lahf
sbb
and
pop
jle
lea
xor
dec
xor
in
lcall
shll
pop
sub
arpl
rcrb
pushf
xchg
mov
aam
setne
adc
and
pop
aas
jl
jecxz
les
cld
movsl
js
jb
out
push
leave
add
adcl
stc
mov
mov
into
xchg
cmpsb
cmpsl
pop
pop
push
pop
decb
imul
jb
sbb
xchg
or
icebp
pop
dec
jp
xchg
lods
pop
addr16
loopne
mov
mov
shll
add
push
daa
orl
sub
or
mov
pushf
cmp
xlat
ficoml
sbb
push
mov
call
jo
xor
adc
icebp
push
mov
loop
insb
inc
shrl
scas
loop
push
adc
inc
ret
mov
ficomps
scas
jecxz
into
cmc
xchg
sar
cmp
int
xorb
add
sbb
mov
loopne
test
stos
inc
out
xchg
or
bound
xchg
xor
mov
leave
or
in
ss
mov
and
push
mov
movsb
adc
or
js
adc
insl
push
push
jmp
adc
pop
icebp
loop
xor
sti
repnz
or
mov
and
icebp
pop
and
adc
lods
fisubrs
jl
push
sti
aaa
push
call
sbb
pop
jp
cmp
iret
or
sahf
std
fwait
pop
push
inc
sub
dec
fisubs
xor
call
mov
insb
jb
xchg
fdivs
aas
js
mov
icebp
push
mov
addr16
xor
push
rcrb
mov
ds
push
pop
mov
shrb
rcrl
jno
sbb
in
cmp
jae
mov
pop
push
mov
lods
subb
sbb
adc
sub
lret
xchg
add
adc
dec
pop
push
cmp
add
pop
pushf
sub
push
arpl
idiv
js
adcb
and
stos
stos
xor
fcompl
mov
push
sbb
hlt
into
xchg
adc
add
xchg
lock
addr16
cli
jl
mov
stc
scas
pusha
ja
push
inc
clc
mov
stos
addb
lock
mov
cld
addl
cwtl
adc
bound
loopne
std
movsb
cmp
rolb
add
ljmp
addr16
jnp
add
xor
imul
andb
notl
cmp
dec
stos
jnp
jo
adc
sbb
loopne
mov
movsb
rorl
xor
pop
jge
jl
push
xorb
rclb
and
int3
sub
add
jno
mov
push
call
mov
push
mov
push
push
push
aas
cmpb
dec
sbb
ss
rcrl
xor
add
dec
jnp
icebp
add
in
inc
cmp
add
scas
loope
inc
add
add
adc
mov
inc
jge
loopne
sti
rolb
sub
nop
bound
fldt
inc
pop
mov
imul
or
push
add
push
cltd
int
cmp
nop
movsb
test
ds
hlt
or
es
xchg
sbb
loop,pt
cmpb
xorl
lds
xchg
call
jp
mov
iret
dec
adc
mov
add
loope
call
mov
add
clc
sarb
push
add
add
fbld
jae
add
cmp
fbld
push
or
popf
push
jle
movsb
mov
jo
push
sub
or
xor
into
in
jg
icebp
pop
nop
mov
mov
addr16
inc
shrl
insb
jmp
xchg
lds
jnp
loopne
insb
loopne
je
popa
pop
dec
aam
dec
aas
xchg
inc
std
and
sbb
jg
add
aas
add
add
mov
xchg
and
mov
aas
mov
push
inc
fucomip
outsl
adc
into
jecxz
and
xchg
sbb
push
lds
aad
cwtl
add
imul
xchg
sub
or
addr16
fdivs
xor
mov
and
cs
jg
std
mov
xor
cmp
cwtl
sarb
dec
aad
push
inc
loope
rclb
sub
or
icebp
test
mov
sub
shr
cltd
and
or
mov
cmpsl
dec
bound
inc
inc
sub
pushf
mov
adcl
add
pushl
fisubl
fmuls
pop
roll
push
jecxz
cmp
rclb
or
sub
call
push
popf
xchg
and
mov
in
stos
or
sbb
adc
ficomps
scas
leave
fs
ja
or
lock
mov
jmp
jnp
adc
js
shlb
roll
pop
insl
sub
jp
push
jns
jle
dec
rcr
mov
test
mov
test
repz
mov
add
mov
push
lods
xchg
xchg
dec
clc
rol
fcomps
mov
jp
cmp
and
pushf
pop
mov
sbb
mull
jmp
xor
insb
lahf
dec
mov
pop
loope
or
jge
test
sahf
mov
bound
dec
jg
testl
jae
xor
pop
pop
cmc
pop
out
sub
dec
or
pop
dec
test
out
or
xorb
xor
inc
add
dec
out
movsb
fs
and
jg
in
add
xchg
or
add
push
xchg
and
mov
hlt
ficompl
cmc
pop
neg
daa
in
adc
rcrb
jl
enter
mov
out
jae
and
xor
fnstsw
lret
aad
hlt
push
pop
lds
xor
loope
sahf
push
inc
pop
imul
jmp
mov
mov
mov
and
sbb
je
fmuls
lcall
sbb
inc
repnz
aam
jbe
sbb
aaa
mov
mov
mov
pushf
call
xchg
xor
in
push
push
adc
xor
pusha
mov
mov
fld
cmp
jmp
or
mov
jns
jle
mov
cmc
push
leave
add
mov
outsb
mov
insl
pusha
mov
add
fwait
test
repz
ja
in
mov
xor
js
aas
jl
pusha
sub
mov
jp
fnsave
pop
int
btr
dec
xor
jno
iret
and
inc
fcompl
into
mov
mov
imul
push
cmpsl
jg
dec
lods
adc
mov
push
inc
stos
ret
sti
xchg
sub
xor
inc
mov
jo
dec
pop
movsl
cmp
jno
pop
pop
adc
sbb
js
loop
mov
sbb
adc
lret
add
jae
cmp
xchg
lret
mov
dec
sbb
pop
sti
pop
gs
and
adc
lea
mov
pop
dec
fs
or
mov
or
pop
mov
sub
fidivs
mov
fsubr
push
test
mov
dec
mov
inc
daa
mov
inc
pop
cmc
inc
stc
add
adc
mov
pushf
sbb
jg
cmc
push
loope
cmp
sub
into
or
adc
mov
incb
pop
inc
lcall
cmp
cmp
inc
jmp
lock
cmp
xchg
inc
xor
adc
push
dec
xor
shr
lods
rcr
add
push
xchg
mov
cld
aaa
cmpsb
rol
stos
pop
lea
stc
sti
add
xchg
shrl
cmpsl
das
add
js
adc
setno
outsb
pop
stc
repz
jae
xchg
add
adc
or
adc
push
xchg
pop
out
ret
inc
fistps
cmp
fbstp
mov
push
pusha
or
dec
je,pt
cwtl
inc
pop
jle
xchg
daa
int3
add
cmp
cwtl
rcrb
into
lds
sub
insl
pop
in
in
jp
sarb
scas
and
popf
popf
xchg
daa
xchg
out
std
mov
cmp
push
outsb
mov
xchg
cmpsl
fnstenv
fcoml
stos
lcall
mov
fdivr
add
xchg
jecxz
leave
lods
cmc
insb
mov
test
test
aaa
lret
mov
fucomi
xor
cld
push
mov
jns
sub
dec
adc
cltd
inc
push
inc
xor
dec
mov
call
xchg
fadd
shr
mov
and
sahf
and
aad
and
mov
test
mov
hlt
jecxz
sbb
or
lds
dec
fisubl
xchg
pop
inc
push
and
ret
outsl
inc
in
gs
cmp
stc
jl
les
add
daa
jbe
and
arpl
cmc
mov
daa
repnz
mov
data16
insl
push
adc
aam
aas
ds
aam
mov
aaa
ljmp
loopne
inc
into
and
sub
xchg
mov
adc
and
shrl
repz
cmp
jmp
adcl
push
push
adc
sbb
sub
xor
scas
cmp
es
push
mov
rorb
and
mov
loopne
mov
push
enter
adcb
out
pusha
mov
and
pop
fdivp
xchg
jne
cmpsb
add
jmp
xchg
aaa
mov
cmp
rclb
xchg
jns
lock
out
inc
iret
pushf
sub
sahf
out
inc
pop
xchg
cmp
jo
cmp
ret
clc
mov
outsb
sbb
leave
adc
and
pop
rolb
pop
sahf
jp
mov
ljmp
pop
sub
push
lods
ds
daa
push
ret
roll
push
push
push
mov
cmc
mov
ds
in
mov
xor
ss
push
mov
test
fiadds
imul
add
test
pop
cmpl
add
pop
mov
pop
xchg
shl
xchg
fs
ja
inc
sub
movsb
fnstcw
sbb
dec
movsl
movsb
or
lcall
cwtl
and
int
xor
push
jmp
lds
sub
jae
bound
lea
cmp
xchg
pushf
adc
push
and
jl
jecxz
push
rolb
pop
cwtl
iret
adc
mov
sti
mov
popf
dec
leave
rcll
push
mov
pop
testl
dec
jge
ret
in
adc
push
inc
sbb
loopne
mov
sbb
and
jge
sti
inc
icebp
add
mov
jae
dec
arpl
fsts
test
ljmp
pop
sar
pusha
mov
inc
mov
loope
hlt
and
inc
jge
imul
add
movsb
popf
mov
sbb
ja
jl
sbb
fldenv
jns
jle
sbb
lea
in
movsb
jmp
fisubs
sub
mov
mov
mov
mov
enter
fcmovbe
icebp
xor
bound
xchg
aad
loopne
dec
in
out
pop
lds
mov
fs
ret
dec
mov
jp
sub
pop
fisttps
popa
mov
add
flds
push
cmp
cmp
cmpsl
mov
cmp
bound
mov
pop
lcall
xor
aas
sbb
das
sub
adc
incl
mov
loopne
dec
dec
xchg
xchg
push
xchg
cmp
add
stc
scas
push
jmp
xor
xchg
lret
fbstp
jnp
aas
mov
push
icebp
movsl
mov
icebp
add
mov
lea
stc
sbb
fimull
outsb
xchg
lock
pushf
jb
sbb
xchg
mov
movsb
mov
sbb
fisubs
stc
xchg
push
out
insl
add
shl
xchg
jecxz
rorl
imul
fucompp
lods
mov
add
addl
mov
lods
sub
jnp
enter
xor
xor
fmul
or
cmp
mov
mov
hlt
mov
push
insl
pusha
mov
sbb
pop
sahf
pushl
mov
cwtl
sbb
aaa
lahf
sbb
cmp
movsb
xorb
lods
lret
mov
xor
lds
pop
cmpsb
and
roll
sub
push
sarb
js
pop
add
mov
shll
mov
mov
inc
mov
mov
inc
cltd
sbb
dec
aaa
inc
jp
sub
test
add
or
mov
mov
or
cmc
inc
sbb
pop
cmpl
pop
negl
lds
ss
jge
add
mov
or
inc
mov
and
pop
cmp
mov
push
rdmsr
xor
rorb
test
jg
loope
adc
cs
lods
mov
push
cmpsl
pusha
sbb
jp
cmpsl
pushf
repnz
mov
push
cli
ret
leave
xchg
jge
jmp
push
push
nop
mov
dec
cmp
xor
cmp
or
cmp
cmp
sub
dec
sti
dec
dec
fs
jae
rorl
es
mov
outsb
push
mov
sub
arpl
loop
mov
ret
jbe,pt
cmp
sbb
scas
add
sub
into
rcrb
xchg
addr16
mov
sub
xchg
push
stos
sti
cmp
xor
mov
repz
xchg
jo
mov
push
push
arpl
mov
in
jae
cmpl
rclb
cli
jl
jle
mov
cmp
mov
fcoms
adc
ljmp
dec
rcll
mov
inc
jmp
xchg
dec
push
cmpsb
sub
adc
mov
out
add
ljmp
inc
notl
jo
ja
leave
incb
andb
mov
adc
outsb
das
dec
das
loope
push
popf
clc
loop
jo
jp
cmpb
fcomi
mov
rcrb
cmp
adc
adc
jecxz
ss
in
pop
sbb
pop
add
dec
sbb
arpl
insl
dec
cwtl
rorb
jl
outsl
pop
mov
add
out
push
in
adc
inc
in
and
repz
xor
leave
xchg
push
in
rsm
mov
nop
cmp
ja
pushf
cmp
xor
into
fisubrl
mov
add
lock
pop
sbb
or
pop
add
into
jmp
dec
mov
aam
add
push
sbb
jne
jle
jae
jmp
add
mov
mov
testb
adc
xchg
adc
cmp
xchg
lds
fwait
pop
inc
or
push
push
cmp
push
das
ljmp
rcrb
and
sbb
fsubrl
lret
fistpl
data16
in
add
out
test
jge
or
mov
cmp
jge
pop
shr
cltd
outsl
out
sub
pop
add
rclb
cld
mov
popf
adcb
iret
cmp
repnz
mov
ret
aas
je
aam
push
mov
pushf
jecxz
xlat
jle
mov
out
lds
fstps
add
inc
mov
out
mov
inc
sbb
lcall
into
add
dec
cli
loop
pushf
pop
xchg
lods
arpl
cmp
push
push
test
jb
or
divl
jbe
lcall
pop
movsb
dec
mov
sarb
les
add
push
pop
in
xor
adc
cmp
js
or
adc
sbb
adc
test
cwtl
sbb
test
push
inc
int3
mov
cmp
dec
and
inc
mov
out
movsb
sti
arpl
sub
testl
repz
sbb
sbb
testl
shr
rorb
push
mov
or
lods
mov
xchg
out
push
ljmp
ret
movsl
psubb
ljmp
adc
mov
std
cmp
xorb
daa
addb
stos
lods
jbe
cmc
mov
jne
testl
repz
inc
dec
iret
jg
gs
mov
adc
ja
outsl
mov
xchg
push
adc
call
or
loop
mov
pusha
sbbl
jl
jnp
stc
int
je
mov
test
mov
fisubl
cmp
out
dec
dec
filds
sbb
mov
scas
ljmp
es
bound
and
dec
aad
mov
jbe
cmpsl
testb
cmpsl
xchg
lock
cmp
ljmp
ret
les
imul
addr16
fs
sub
cs
cmp
rorl
out
jp
jge
ss
jno
or
ss
ret
adc
jo
xor
inc
shll
mov
mov
cmp
inc
inc
jge
xor
sbb
in
push
xor
mov
add
xor
cmpb
sub
dec
push
fmull
js
add
sahf
into
fnstsw
mov
dec
sbb
or
loop
cmpsb
or
inc
xor
sbb
out
or
movsb
and
ret
xor
push
xlat
stc
and
lcall
andl
push
movsl
in
lock
scas
rorb
out
inc
xor
std
imul
adc
mov
adc
jecxz
sbb
mov
cmp
xchg
std
dec
pop
xchg
dec
xorb
stos
lods
cli
inc
popa
add
cvttps2pi
sub
mov
jle
adc
cmp
pop
aam
and
inc
jmp
das
sbb
mov
pop
xor
sbb
addr16
ds
lahf
jae
xor
push
pushf
mov
enter
mov
mov
icebp
xchg
es
aad
adc
ret
imul
ss
mov
bound
ljmp
mov
and
dec
test
out
jp
in
cmpb
mov
mov
fsubs
inc
inc
fnsave
mov
rcll
cli
test
loop
xor
cltd
jmp
adc
inc
adc
xor
cld
dec
mov
in
cltd
inc
in
push
dec
sub
fucomp
sbb
adc
mov
mov
aas
jns
sbb
test
sti
pushf
pop
shl
cmc
add
pushf
cmp
pop
jns
or
into
pop
negb
mov
negl
std
jbe
xor
stos
repnz
mov
clc
xchg
mov
pop
outsl
sbb
pop
push
and
push
mov
in
or
push
jge
sub
sti
push
loop
adc
notb
insl
push
jecxz
int
das
sbb
lahf
push
jo
or
loopne
xor
in
jbe
cmpsb
lcall
inc
aad
lret
cmc
out
in
addl
sbbb
cmpsb
loop
das
jnp
int
cli
popa
stos
and
sets
test
mov
mov
rcrb
sbb
sbb
or
test
push
in
adc
cmp
repz
out
and
sub
sbb
jge
stc
mov
fidivrl
cltd
jg
sub
jo
xchg
icebp
out
or
int
inc
xor
lahf
lea
ljmp
ja
pushf
cmc
mov
xchg
mov
inc
adc
fstpt
cmp
xchg
inc
inc
adc
fdivrl
aad
dec
lcall
mov
shr
shlb
adc
mov
adc
inc
mov
ret
sbb
dec
sbb
jp
inc
das
cmp
sub
add
mov
mov
mov
sbb
hlt
inc
test
lret
mov
mov
std
repz
or
cmc
adc
push
jp
or
in
lods
mov
shrb
cmpsb
pop
not
stos
dec
cld
pop
jmp
in
cltd
dec
add
popl
push
mov
shlb
cmp
gs
dec
add
es
out
jmp
stos
and
jecxz
xchg
add
push
jecxz
jle
imul
mov
xlat
dec
push
adc
sahf
rcr
jmp
aad
cmpsl
imul
sti
mov
test
aaa
xlat
and
imul
add
cwtl
mov
add
rolb
xlat
mov
cmpsl
mov
and
sahf
pop
mov
test
xor
mov
fidivl
popf
pop
mov
cwtl
cmp
mov
adc
notb
jl
testb
sbb
rcrb
cmpsl
and
fwait
xchg
cwtl
inc
jnp
sbb
int
pusha
xor
sbb
imul
jo
mov
mov
lods
xor
dec
stc
mov
and
jnp
or
fwait
pop
filds
out
loop
or
cld
std
mov
stc
insb
ljmp
xlat
xlat
stos
push
les
xchg
scas
pop
arpl
loopne
mov
rcrb
jb
out
aas
push
xchg
popf
arpl
mov
xchg
call
adc
lea
fidivrl
adc
dec
ret
xchg
fwait
loop
cmp
or
mov
mov
fwait
dec
sbb
jo
mov
or
jo
jns
cltd
daa
cmp
daa
and
ljmp
lods
dec
stos
pop
xchg
adc
cmpsl
into
adc
mov
ficomps
mov
jg
inc
mov
mov
stos
out
hlt
xchg
dec
push
jg
mov
ja
test
xlat
int3
pop
add
orl
fldcw
and
mul
test
bound
test
outsb
stos
and
dec
in
sbb
mov
mov
sti
mov
or
xor
arpl
ffree
repnz
fsubl
xchg
ficoms
pushf
movsw
test
das
jmp
insl
dec
jb
mov
sub
fisttps
sbb
add
push
insb
xchg
pop
xchg
xor
xchg
jecxz
mov
push
ja
xchg
hlt
xor
hlt
sub
add
lea
insl
inc
xor
lret
pop
sub
insb
fidivl
mov
jno
mov
insl
inc
cmpsl
push
mov
sarl
test
dec
mov
dec
lcall
push
ret
sbb
mov
adc
pop
adc
mov
pop
ret
outsl
push
add
push
xor
cwtl
aas
jns
mov
aad
cld
outsl
lret
xchg
cmpb
mov
push
lock
imull
test
loop
or
adc
in
mov
jbe
adc
mov
adc
or
imul
lods
mov
sahf
data16
lret
scas
push
ret
into
adc
pop
pop
hlt
fisubl
cvtps2pi
dec
fsub
add
pop
por
push
in
xchg
repz
sub
or
xchg
in
sbb
inc
sti
hlt
or
mov
push
sahf
cmp
scas
cmp
jecxz
jbe
or
dec
icebp
fbstp
cmpsl
sahf
repnz
xchg
in
add
in
jne
pmaxsw
and
mov
xor
inc
mov
sbb
pop
mov
and
ja
hlt
lock
xchg
adc
enter
shrb
push
testb
sbb
push
sbb
add
lods
mov
mov
cmpsl
sbb
jns
pop
ret
sbbb
mov
iret
loope
xor
and
out
pop
aad
cmp
push
adc
mov
dec
sbb
inc
push
jle
pop
or
fs
mov
ds
enter
mov
jmp
call
push
mov
scas
pop
sub
mov
pop
xchg
mov
push
push
pushf
add
std
dec
jmp
testl
push
in
and
dec
sar
jnp
lahf
mov
gs
aam
jo
aad
xor
cwtl
dec
add
pushf
push
add
aaa
xchg
out
and
xchg
leave
ds
pop
jno
scas
outsl
std
mov
add
sbb
mov
lcall
pop
int3
lcall
mov
popf
dec
stos
xchg
in
push
sti
ror
dec
hlt
sbb
enter
inc
sbb
dec
push
mov
imulb
cmpl
nop
leave
and
push
mov
jno
mov
je
mov
push
adc
sbb
cwtl
fstpl
push
enter
lock
or
xchg
mov
std
pushf
mov
pop
int3
xor
les
sub
testb
mov
addb
movsb
popa
mov
push
adc
inc
pusha
xor
pop
jl
iret
inc
js
je
rorb
dec
pop
adc
mov
push
sub
or
and
xchg
stc
insl
les
mov
mov
lds
test
lahf
shr
sub
shlb
repnz
mov
cld
cmp
clc
mov
inc
sbbl
pop
imul
cmpsl
add
adc
les
jmp
mov
xor
das
xor
mov
cmp
scas
inc
int
lret
scas
adc
rol
mov
sahf
incb
inc
jns
lods
add
mov
rcrb
sbb
mov
out
popf
test
data16
mov
xor
popa
mov
mov
mov
and
bnd
or
xor
lock
subl
mov
mov
int3
pushf
xor
push
iret
add
in
xchg
sbb
jle
cmp
aaa
enter
mov
inc
fistpll
nop
cmc
test
mov
sbb
jmp
aas
pcmpeqw
jmp
jge
mov
mov
pop
into
movsb
xorb
sbb
mov
out
movsl
outsl
mov
xchg
pop
xchg
mov
ja
adc
fwait
or
ficomps
inc
repz
push
shll
dec
incl
popf
push
outsl
imul
ficomps
jmp
pop
mov
push
inc
insl
repz
sbb
add
sahf
imul
insb
ret
shlb
sbb
fistl
call
and
in
xchg
jno
je
mov
lea
and
mov
repnz
stc
jnp
repz
repz
sarl
loopne
xchg
sbb
pushf
xchg
mov
outsl
loop
adc
fucomip
fsubrs
cmp
imul
in
fwait
lods
xor
les
jecxz
loop
inc
xchg
out
inc
mov
mov
imul
and
jecxz
mov
and
scas
scas
mov
push
or
pop
ret
in
mov
sahf
sub
sbb
divl
jno
jg
xor
stos
inc
jmp
sbb
aad
leave
cmp
adc
lret
dec
mov
je
rcll
inc
ret
cmp
popf
mov
gs
cli
lods
inc
dec
gs
int
mov
sub
int3
sub
pop
cmp
xor
mov
lods
jge
cmp
add
fs
lods
or
mov
lret
sbb
js
xchg
mov
push
jecxz
scas
xor
mov
fadds
jmp
sbb
mov
and
sub
loope
int
jge
icebp
jns
push
sbb
mov
bound
std
ss
push
xor
xchg
adc
jle
outsl
test
cwtl
cwtl
xchg
pusha
pop
int
je
stos
jo
xchg
bnd
dec
mov
adc
adc
xchg
cli
push
or
and
inc
xchg
and
enter
fsub
loopne
fwait
ja
stc
adc
mov
cwtl
aam
inc
int3
or
add
push
in
call
mov
jno
xchg
fisubl
jnp
js
mov
fistpll
sahf
mov
fists
es
pop
lock
mov
aad
and
push
ss
insb
pop
dec
test
xor
gs
push
test
sbb
lahf
push
pop
je
xlat
dec
shrb
push
outsl
cli
push
subl
int
in
dec
mov
push
and
inc
gs
cli
mov
adc
jns
dec
or
leave
jmp
xor
mov
sub
mov
xchg
mov
les
or
cmp
sub
cmpsb
lods
sbb
icebp
adc
js
xchg
adc
and
lret
mov
mov
insb
out
pop
out
fs
repnz
and
dec
cmp
jg
jecxz
das
sub
cmp
addr16
iret
or
les
and
arpl
daa
mov
cmp
movsl
mov
outsb
sub
and
dec
cmp
add
mov
mov
or
ss
adc
scas
jg
jb
sarl
cmpsl
push
test
lea
mov
outsb
xchg
add
mov
jne
and
mov
xor
dec
push
repz
test
lcall
aaa
addb
mov
fst
dec
push
clc
fsubl
adc
push
popf
mov
push
inc
int3
push
cs
jg
and
adc
mov
jne
idivl
or
pop
pop
lcall
rcrb
pop
lods
jp
dec
enter
push
push
mov
lods
dec
bound
btsl
lret
sbb
aad
enter
dec
push
xchg
xchg
xor
and
or
scas
les
adc
rcll
bound
push
pop
xlat
out
xchg
lods
adc
incl
mov
cltd
mov
out
mov
add
outsl
cmp
pop
jnp
mov
out
mov
xchg
mov
movsb
lcall
pusha
jno
cs
aam
add
and
mov
in
dec
rorb
lock
int
fidivs
test
sub
pop
push
dec
dec
call
lahf
jns
js
out
rcrl
pusha
jo
add
add
inc
incb
ja
or
pop
fistpll
lahf
inc
jp
jo
cld
leave
pop
pop
add
and
aas
dec
gs
jge
add
aas
out
push
call
jg
mov
ss
pop
lea
pop
cmpsl
xor
repnz
daa
xor
mov
dec
test
jge
jno
sar
fs
inc
xlat
daa
fwait
shl
lret
sbb
dec
jae
xchg
mov
mov
ja
les
cmp
sbb
xor
inc
in
pop
inc
fldl
stos
push
inc
sbb
mov
dec
cmpsl
aam
insb
popf
psrlq
mov
popa
mov
pop
mov
stos
movsl
pop
xchg
inc
and
fildll
xchg
cmp
out
pushf
addb
rol
jle
and
stc
shl
adc
add
ds
mov
int3
testl
mov
inc
sub
aas
xchg
loope
mov
icebp
adc
mov
cmp
pop
pop
mov
div
ret
xchg
cmp
add
xchg
mov
subb
xor
adc
scas
fldcw
or
ds
xchg
nop
jbe
mov
ds
xor
imulb
std
test
xor
fucom
mov
jb
jae
pusha
jae
xor
lds
out
inc
lret
outsb
mov
xor
xorb
fwait
lods
jae
push
inc
addr16
inc
dec
cmp
adc
fcmovnb
xrelease
lahf
daa
inc
scas
adc
sbb
add
std
and
and
mov
xor
loop
mov
xor
mov
les
clc
cmp
mov
mov
xchg
xchg
xor
cmp
push
lds
aad
addl
cmpsl
xchg
mov
xchg
cld
xchg
pop
cmc
fwait
xor
and
daa
jle
push
pop
inc
sahf
std
pop
rolb
adc
rorl
leave
sub
bound
rorl
movsl
jle
leave
andb
pop
repnz
push
mov
lahf
sub
jmp
xchg
pop
pop
faddl
and
cmp
and
push
in
insb
mov
cmpl
cwtl
pop
mov
imul
pop
out
setb
out
fdivp
fmull
shll
roll
addr16
mov
into
dec
pop
add
aaa
adc
mov
xor
or
mov
cmp
shl
int
imul
popa
bound
in
jbe
cltd
mov
arpl
and
rclb
clc
push
add
jp
call
mov
push
mov
add
loop
lods
sub
jl
icebp
xchg
xchg
fadds
sahf
xchg
mov
add
inc
xlat
mov
cmp
into
lea
mov
mov
push
mov
pop
push
mov
mov
or
rcrb
dec
sub
outsb
mov
cmpsl
cmpsl
pop
push
out
inc
push
sub
je
push
cmpsl
icebp
inc
clc
ljmp
adc
pop
rcrb
push
ja
fdivs
hlt
sub
stos
pop
aas
and
mov
lcall
aad
cmp
and
mov
cli
insb
pop
push
sbb
mov
rclb
cltd
sahf
xor
jecxz
fwait
roll
cs
ss
cltd
je
xchg
cli
test
mov
dec
shlb
push
add
imull
ja
xchg
cmpsl
jmp
aad
xor
mov
outsb
mov
and
into
fldcw
mov
mov
adc
mov
adcb
xchg
mov
pop
and
sarb
ret
je
dec
aaa
mov
jg
or
insl
and
rolb
sub
or
fwait
mov
fidivrl
push
cltd
fdivrs
jbe
adc
sub
loop
lea
add
dec
out
iret
fldenv
cmp
mov
and
pusha
je
cmc
dec
adc
stc
mov
test
in
mov
xchg
mov
jnp
ds
mov
sti
xor
jne
dec
pop
loope
xchg
sti
cmp
pushf
jge
cmpsl
xchg
sarb
mov
adc
clc
xchg
insb
scas
jne
aad
sub
xor
xor
adc
enter
int
fmuls
cmpb
xchg
adc
div
push
ds
and
shlb
leave
stc
push
and
mov
into
aas
cmp
inc
orb
push
xor
cmc
loop
js
in
pop
push
addr16
mov
sahf
mov
add
sbb
sub
incl
cmpsl
fs
sarl
xchg
mov
xchg
mov
je
sbb
nop
fmull
push
jge
fistpll
aaa
add
stos
and
jge
cmp
jg
push
stc
fdivrs
cmpsb
dec
inc
leave
enter
xchg
into
divb
out
paddsw
pop
push
mov
lcall
sbb
jno
insb
pop
mov
xchg
jb
push
std
fs
popf
sbb
sar
int3
sub
xchg
sahf
movsb
arpl
inc
cmp
xchg
xor
xchg
adc
lcall
sub
fistpl
sbb
hlt
dec
loop
mov
into
jp
and
push
pop
xor
pusha
lds
mov
mov
jp
push
cltd
or
xor
mov
inc
adc
jg
sbb
jnp
xchg
and
stc
test
xchg
gs
mov
mov
fiaddl
lret
shlb
outsb
mov
es
insb
imul
sarb
imul
enter
and
loopne,pt
push
cwtl
clc
imulb
je
inc
pop
mov
fisubs
ljmp
inc
lds
mov
mov
test
xor
adc
test
dec
pop
mov
rcrb
rolb
test
cmp
mov
cwtl
xchg
inc
aad
jb,pn
jecxz
test
sbb
leave
mov
mov
clc
mov
sbb
not
jns
or
aad
mov
les
sub
in
adc
into
inc
mov
add
xchg
pop
fdivrs
xchg
inc
inc
inc
mov
lock
xchg
sub
push
int
push
lret
fs
jmp
sbb
lahf
ficomps
int
xor
icebp
lcall
mov
mov
icebp
lea
and
xchg
xchg
movsl
loop
dec
push
fmull
adc
push
push
xor
sub
fstp
sbb
addr16
cltd
jno
inc
jo
scas
mov
fcompl
stos
movsb
jg
inc
pop
cmc
xchg
lret
adcb
jle
call
mov
xor
mov
adc
mov
mov
push
pop
loopne
add
inc
pop
test
sub
pop
in
jo
dec
int
and
pusha
cmpsb
and
sbb
int3
xor
lcall
fldt
cmp
fs
cmp
dec
xor
sub
pushf
inc
jge
mov
leave
lcall
popf
mov
mov
xchg
inc
in
aas
jmp
rcrl
sbb
aaa
lret
jmp
loop
icebp
sbb
cmp
test
mov
inc
xchg
addr16
xlat
xchg
xchg
adc
mov
fidivrl
sbb
mov
aas
sbb
push
cwtl
jp
jp
loop
dec
push
fldenv
sub
push
jle
out
test
shl
clc
push
lock
fldl
cs
mov
sub
adc
fs
das
int3
jb
sbb
mov
das
mov
adc
and
and
dec
and
daa
ficoms
xor
xchg
repnz
or
mov
loop
cmp
call
lock
pop
and
popl
jbe
add
xchg
nop
pop
mov
rcll
enter
adc
sbb
push
sbb
fdivr
sbb
scas
pop
cwtl
aaa
dec
aad
pop
pushf
cmc
ljmp
test
insl
pop
inc
push
push
push
jo
sbb
into
mov
leave
rcrb
sbb
sub
jbe
cmp
pop
in
push
pop
jne
fs
repz
insl
leave
pusha
dec
cmp
outsb
aad
fdivl
scas
cmc
iret
dec
push
lock
daa
or
mov
movsb
lret
rclb
or
push
in
mov
jo
mov
movsl
jno
out
subb
inc
testb
dec
out
sub
jno
stc
dec
loope
pop
mov
repz
jb
imul
repnz
inc
mov
mov
ja
mov
jl
pop
sbb
xchg
or
or
xor
lea
lcall
fldt
xchg
insb
sbb
push
or
sahf
cmp
and
hlt
push
rorb
fstpt
jecxz
leave
and
lret
in
jns
repnz
fsubrl
cwtl
mov
cmp
sahf
dec
rorb
add
add
sub
scas
fcoml
rorl
incb
sub
es
mov
inc
dec
inc
idivb
clc
or
divb
out
xchg
mov
pop
clc
cmc
lds
mov
mov
add
inc
jge
int
in
or
fcmovnbe
dec
dec
push
jae
mov
outsb
inc
movsl
add
pop
mov
push
push
clc
xchg
aas
sbb
lcall
adc
sbbl
cmp
int
pop
imul
aad
sub
divb
fsubrs
lcall
mov
xor
sbb
or
lahf
mov
cmp
jne
repz
mov
mov
add
repnz
mov
mov
inc
sub
jp
nop
outsl
or
test
in
fcomp
dec
rorl
stc
push
cmpsb
adc
xchg
jecxz
and
inc
xlat
sub
repnz
shll
push
add
cmp
jns
sahf
xlat
fistl
push
sbb
push
pop
mov
sbb
sbb
movsl
nop
movsb
out
mov
xchg
loope
aam
lods
adc
mov
mov
sbb
movsb
xchg
repz
cwtl
push
movsl
nop
stos
sub
pop
sub
xchg
add
mov
mov
out
jl
cltd
cld
push
popa
xor
cmp
xchg
or
xor
movl
xchg
or
pop
cld
add
bound
fsts
mov
and
xchg
push
fwait
push
fistpl
insl
cmc
push
mov
add
xor
sub
mov
in
es
fnstcw
jb
mov
dec
push
fcmovu
cltd
adc
xor
sti
fsubrl
loopne
sbb
cld
mov
rcll
and
test
test
jle
push
xchg
cmp
int3
inc
fildll
pop
stos
imul
push
int3
jmp
bound
int3
shrb
push
sbb
sar
push
les
or
mov
dec
mov
arpl
pop
inc
hlt
mov
mov
inc
aam
pop
ret
lods
xor
repnz
or
fisttpl
push
iret
leave
add
and
mov
pushf
mov
xor
pop
inc
pop
dec
cmpsb
sub
mov
cli
mov
scas
mov
popa
sub
mov
dec
pop
xor
adc
fs
lods
mov
pop
shrb
pop
dec
mov
xor
push
scas
mov
add
insl
mov
mov
ss
adc
and
pop
negl
rcrb
add
sub
cmp
mov
jmp
nop
cmp
into
lods
leave
add
rcrl
xchg
scas
or
dec
movsl
adc
lods
outsb
icebp
dec
and
out
fimuls
mov
xchg
ja
xlat
sbb
ret
mov
push
xchg
and
inc
mov
xor
subb
sub
aas
add
and
mov
xchg
xchg
pop
mov
std
sbb
and
add
addr16
fstpl
sub
push
mov
dec
lods
sub
jae
idivb
cmp
aad
pop
mov
out
stc
cmpsb
and
xor
dec
cmc
fwait
jnp
stos
or
hlt
or
jnp
cli
test
dec
dec
clc
and
xchg
ret
popa
sbbl
loope
xchg
lods
movsl
mov
mov
and
cmp
ja
mov
popf
aaa
enter
add
xchg
lret
dec
mov
movsb
or
movsb
fdivp
cmp
repnz
fs
dec
out
xor
subb
and
movsb
mov
or
push
in
fisttpl
iret
jp
push
shrl
inc
in
mov
mov
xorl
lods
pushf
movsl
mov
test
xchg
dec
test
call
push
ficomps
fadds
cmp
pusha
mov
shll
adc
cmc
fdivs
xor
jb
push
enter
fsubrs
aaa
xchg
inc
lret
jle
es
push
and
mov
xlat
sbb
xorl
inc
dec
or
push
mov
adc
mov
push
js
mov
mov
cmp
xchg
pop
xor
movsb
dec
sub
out
fldenv
out
leave
or
sbb
mov
outsl
mov
das
aaa
adcb
movsb
les
push
inc
pop
mov
outsl
push
cwtl
lock
sub
in
jle
sub
dec
notl
sub
data16
jnp
jl
sub
outsb
lods
dec
adc
imul
mov
mov
xor
mov
enter
mov
iret
push
lds
jae
int3
imul
cmpsl
jb
pop
fs
sub
mov
push
mov
lds
push
cmp
and
xor
mov
adc
ret
test
and
xchg
mov
mov
mov
xchg
adc
sbb
jp
xor
outsb
sti
sbb
push
iret
mov
xor
sti
or
push
jno
pop
inc
rcrl
mov
pushf
mov
cmp
dec
sub
jmp
das
adc
lods
sub
out
insb
sub
jmp
push
mov
mov
lods
xchg
fistps
arpl
iret
xchg
sbb
add
ja
arpl
jp
cmp
xchg
pop
mov
pop
cmp
fistps
mov
pop
incb
cs
mov
cmc
call
cltd
bound
nop
jecxz
inc
xlat
aad
cmp
leave
add
ljmp
lret
adc
dec
std
pop
clc
mov
into
sub
pop
xor
mov
jl
xor
loopne
stos
cmp
pop
sub
cld
xchg
sbb
mov
int
mov
xor
mov
roll
sub
pop
pop
and
and
adc
inc
and
stos
pop
sbb
arpl
inc
mov
lcall
dec
mov
repz
push
stos
clc
stos
cmp
fsubs
mov
in
mov
bndldx
pop
or
aaa
dec
popf
stos
scas
int3
jecxz
mov
shll
mov
ret
lea
in
ret
rclb
and
xchg
outsb
movsb
ret
mov
fidivrl
mov
push
lea
popa
repz
andb
add
mov
js
cmp
mov
inc
mov
cli
mov
xchg
popa
jne
sub
fsubr
inc
mov
push
insl
imul
addr16
insl
popa
adc
push
mov
mov
mov
loopne
ss
push
push
sbb
or
inc
mov
dec
shr
imul
rolb
and
pop
adc
leave
or
das
mov
cmpsb
or
and
dec
out
arpl
ret
mov
fdivrs
into
lret
pop
jl
jg
dec
pop
movsl
test
lret
xchg
fnstcw
dec
jmp
loopne
ret
and
lds
ss
stc
fisubl
std
and
sahf
mov
cld
dec
hlt
inc
jo
add
test
shrb
scas
dec
push
repz
adc
jmp
iret
push
mov
sahf
sahf
iret
jae
scas
lcall
push
sbb
in
jne
pop
pop
in
into
iret
int
adc
dec
pop
dec
lcall
jl
sub
out
mov
or
pop
lret
je
mov
dec
icebp
lahf
mov
jnp
mov
test
scas
popa
dec
out
flds
push
stc
stos
jmp
lret
sahf
les
jge
cmp
xor
loop
xlat
lods
in
add
loopne
loope
rcr
mov
lods
scas
sbb
sti
out
stc
inc
int
lcall
stc
mov
data16
ret
out
cmp
mov
aas
repnz
jmp
mov
cld
cwtl
aas
pop
pop
test
dec
push
dec
push
loop
add
out
adc
xchg
das
mov
in
xchg
mov
adc
pop
aaa
add
cmc
dec
fwait
repz
cmc
jns
and
pop
pop
mov
stos
rclb
mov
push
mov
idivl
addr16
mov
jb
or
or
sbb
sbb
int3
addr16
cs
ja
jns
sub
jmp
inc
pop
scas
or
mov
inc
dec
mov
icebp
cmp
mov
ds
gs
das
and
sub
xor
sub
testb
mov
cmp
pop
lcall
fimull
push
xchg
rclb
mov
and
insl
jnp
lds
mov
inc
popf
xor
sub
inc
cmpsl
pushf
fcomp
mov
ljmp
inc
lea
daa
cmp
sub
lahf
sub
pop
sub
movsb
js
pop
xor
dec
loop
mov
dec
pop
in
xchg
sub
cmc
jns
in
mov
test
add
movsl
push
ret
jp
cmpsb
mov
popf
xchg
and
mov
lds
mov
pushf
and
cmp
lock
divb
iret
mov
cmp
fldcw
fs
and
mov
sbb
pop
push
push
and
inc
mov
shll
adc
add
fnsave
mov
push
add
mov
rclb
aaa
mov
es
jmp
xor
xchg
inc
jl
lcall
jo
ljmp
stc
sbb
call
hlt
push
cld
cmp
nop
movsb
lret
loop
pop
sbb
sbb
daa
pop
and
xchg
lds
mov
or
rorl
cmp
sbb
iret
adcl
sbb
mov
jle
insb
aaa
adc
jge
xlat
push
sbbl
outsb
mov
push
sbb
shl
cltd
mov
testl
or
cli
test
movsl
mov
xor
xchg
fildll
inc
cli
gs
sti
inc
pushf
cltd
cmp
je
pop
adc
and
cmpsb
je
fld
sub
mov
mov
fwait
pop
movsl
shll
xchg
out
repnz
test
mov
inc
orl
mov
mov
push
addr16
ss
out
jmp
or
insb
movsb
xchg
mov
push
shr
mov
pop
ret
jno
xchg
inc
test
adc
cmp
es
outsl
std
loope,pt
int3
ljmp
adc
mov
outsb
mov
jno
mov
pushf
pusha
add
call
xor
or
mov
and
xchg
lods
mov
pop
loopne
imul
mov
cli
xchg
sbb
in
fisttpll
add
lods
push
mov
aas
pop
in
cmc
xor
shrb
or
mov
test
nop
xor
les
mov
ljmp
loope
jnp
mov
rorl
xchg
or
inc
xor
push
pop
dec
arpl
dec
inc
add
mov
cmpsb
sbb
inc
pop
inc
jl
sbb
icebp
pop
xorb
push
pop
push
leave
loop
xor
inc
push
adc
loopne
divb
fimuls
mov
xlat
push
mov
movsb
sub
push
mov
aas
sbb
push
mov
loop
loop
cmp
pop
out
mov
and
cmp
mov
lret
stc
shl
push
std
clc
jge
mov
sub
lret
stc
in
fnstenv
gs
mov
out
jae
adc
ja
in
add
repz
sbb
ficoms
lods
lcall
jp
sub
sbb
test
jecxz
scas
das
test
mov
cld
sub
lcall
scas
sbb
iret
call
cmp
mov
cmc
outsl
push
cld
add
push
cmp
arpl
or
das
xchg
jmp
add
dec
sbb
sbb
arpl
nop
mov
aad
adc
lock
jae
push
push
cmpl
mov
ret
adc
inc
jl
out
out
frstor
mov
dec
clc
inc
or
dec
xchg
repnz
call
and
jmp
stos
jnp
jg
fisubrs
adc
rcr
leave
pop
adc
lea
in
cmp
push
int
outsb
push
imull
lds
clc
shll
mov
push
scas
push
and
fnstcw
jb
dec
test
xchg
add
jle
movsb
leave
pop
andl
mov
cmp
cltd
push
data16
dec
jne
mov
and
jle
pop
cld
mov
add
xchg
xchg
outsl
popf
fldcw
rcll
shr
leave
jmp
test
lods
cmp
es
sbb
mov
adc
adc
ret
fwait
into
jmp
sarl
out
sbb
nop
inc
jl
mov
shl
or
bound
lret
lret
and
jle
repnz
sahf
mov
or
push
rol
xchg
cmp
out
lea
idivb
out
add
jmp
stos
leave
mov
xchg
xchg
imul
inc
mov
scas
pop
add
lret
fcmovne
sub
out
xlat
cmpsl
mov
into
push
xor
add
lods
stc
movsb
fwait
ret
jnp
and
mov
in
sarl
and
cmp
pop
mov
shlb
cmpsl
jmp
cmp
mov
xor
xchg
sahf
mov
or
scas
ss
je
inc
ljmp
jns
sub
into
cmp
fildl
jo
dec
and
sahf
dec
cmpl
mov
std
stos
mov
pushf
stc
inc
and
mov
sub
jno
mov
xchg
lret
aaa
out
lahf
sub
or
pop
in
rclb
imul
and
push
mov
sahf
int
add
mov
ret
adc
or
mov
xchg
pop
cmpsl
fs
test
mov
loopne
jmp
fdivl
cmpsl
pop
push
push
lock
xor
xor
or
popa
mov
mull
adc
jo
or
adc
icebp
rcl
pop
jp
in
cli
add
xchg
mov
add
ret
mov
sahf
dec
inc
adc
sbb
or
pusha
jno
dec
fidivs
inc
mov
sbb
sar
loopne
scas
outsb
cmp
jno
and
popf
leave
push
fmul
mov
mov
lret
pop
jge
push
sbb
int
push
adc
je
ret
aad
mov
mov
sbb
repz
aaa
arpl
popf
popa
add
xchg
adc
dec
adc
cmp
lcall
stos
ljmp
mov
sbb
bound
pop
mov
inc
mov
call
lcall
icebp
push
and
je
adc
jbe
adc
or
and
jns
daa
imul
pop
incb
pop
add
xchg
fcmovne
mov
adc
nop
or
lods
mov
stc
pop
xchg
outsl
adc
adcb
xchg
mov
jmp
cli
out
fwait
cmp
mov
xor
push
push
ja
mov
mov
sbb
mov
icebp
jae
dec
mov
mov
mov
cmp
in
or
push
std
add
inc
or
cs
ljmp
insb
mov
rcr
test
xchg
cmp
mov
fildl
movsb
outsl
test
or
std
dec
dec
and
aas
lret
call
ret
fsts
addb
mov
ds
xchg
jmp
clc
dec
jne
insl
loopne
jecxz
jno
inc
shll
inc
dec
aam
iret
out
stos
mov
ror
pop
pop
call
mov
lahf
mov
cmpsl
movsb
jne
mov
inc
xor
in
ret
ret
mov
rcll
pop
push
or
dec
scas
test
icebp
fmul
fstps
enter
shlb
jmp
xorb
xor
repz
add
sbb
and
sbb
mov
lods
arpl
daa
cmpsl
jecxz
hlt
fs
cmp
shrb
and
mov
dec
sbb
dec
add
leave
mov
push
ffree
loopne
mov
add
nop
pusha
xchg
adc
cmpsb
xchg
push
cmpsl
add
ret
lods
js
cmp
sbb
lcall
repz
xor
inc
lods
xor
mulb
icebp
lea
jo
mov
nop
in
inc
xor
jo
cmp
mov
faddl
mov
push
daa
shrl
faddl
adc
into
sbb
insb
xor
int3
movsb
sbb
cltd
mov
mov
xchg
int3
dec
lods
stc
dec
or
cmp
cmp
mov
xor
dec
sub
mov
jo
xchg
push
mov
gs
and
push
lds
popa
jno
mov
mov
popf
out
ret
add
loope
aam
in
dec
and
or
cmc
pop
xor
ficompl
mov
dec
mov
and
push
pop
mov
in
adc
dec
cltd
mov
scas
sbb
xor
cmp
ret
sahf
push
ret
jns
in
cmpsl
and
sahf
test
popa
or
in
rorl
lock
popa
jle
mov
mov
dec
test
inc
mov
sbb
adc
adc
inc
dec
in
mov
inc
cmpsl
cmp
push
adc
cmp
jmp
pop
sub
orl
dec
cli
cmp
dec
add
fistl
scas
mov
loopne
sub
mov
xchg
call
dec
jecxz
out
ror
xchg
mov
ficoms
fsubrl
pop
adc
and
int
cld
push
dec
add
mov
out
loopne
push
loope
jp
bound
daa
xchg
mov
popa
dec
jl
fcoms
inc
lods
pop
mov
fnstcw
jle
add
sub
sub
adc
movsb
adc
addr16
movsb
xor
nop
scas
xchg
add
or
aaa
ljmp
dec
and
xchg
mov
mov
in
and
dec
xor
xchg
movsl
lret
mov
shll
int3
cmp
pop
fs
icebp
out
out
adc
adc
pop
iret
mov
dec
pop
jb
mov
xrelease
es
shl
sub
lods
inc
insl
dec
pop
sub
push
cwtl
xchg
test
inc
imul
jle
loop
shlb
lea
jg
xchg
ret
out
mov
xchg
les
cmp
mov
sahf
sub
faddl
fldt
and
and
fsubrs
dec
repnz
loopne
ja
xchg
scas
decl
test
les
push
xchg
popa
dec
lret
mov
add
outsl
flds
arpl
fsincos
in
sbb
insl
xchg
pop
adc
cmp
fdivs
ljmp
or
movsb
jge
mov
sbb
dec
cli
and
out
jp
push
or
inc
lock
mul
repnz
das
mov
pcmpgtd
mov
adc
fists
sbb
push
ss
sbb
out
fsubrl
push
mov
cmp
sub
lds
mov
nop
sbb
cltd
ret
aad
loop
cmp
mov
xor
es
mov
enter
inc
loopne
in
in
cmpsb
loop
pop
es
loope
dec
stos
or
out
mov
adc
rorl
mov
lea
dec
cmp
push
mov
and
mov
shlb
in
loope
add
sbb
lret
mov
mov
jns
fs
mov
sub
xchg
xchg
adc
push
jo
sub
adc
add
sbb
and
push
test
or
lahf
sti
cs
mov
or
mov
movsb
mull
mov
fstpl
into
mov
xlat
out
imul
into
imul
jle
fdivrl
cmp
call
aad
repnz
push
je
inc
sub
les
pushf
jb
mov
bound
divb
jl
mov
cld
dec
xor
pop
inc
add
mov
mov
xor
mov
fbld
sub
cmp
rcll
inc
pop
inc
jno
leave
jno
mov
dec
dec
dec
pop
sbb
push
dec
and
andnps
outsb
inc
add
mov
mov
dec
lock
in
push
pop
hlt
cli
or
mov
mov
out
push
data16
loopne
fidivl
dec
mov
out
out
insl
push
iret
jp
cltd
inc
enter
ja
dec
xchg
jle
enter
mov
cltd
pop
inc
test
test
cltd
pop
mov
cmp
mov
cmpsl
xchg
push
sub
rorb
jp
cmp
inc
jne
stc
out
jl
stc
cwtl
or
pop
in
std
add
sarb
mov
xchg
jp
testl
in
adc
pop
xor
cmpb
lea
cmp
rol
pop
xchg
outsl
jo
fists
cmp
fists
xchg
cli
add
pop
jecxz
sbb
jg
fisttps
cmpl
cmp
xchg
jnp,pt
lds
inc
cmp
popf
mov
xor
jnp
sti
ficoms
in
mov
clc
push
push
iret
jmp
hlt
jmp
and
inc
push
mov
icebp
loope
inc
dec
in
mov
sub
aam
add
jp
inc
or
jp
mov
cli
gs
into
mov
jbe
sub
and
xchg
mov
faddl
cli
scas
cs
mov
imul
in
jg
es
and
shrb
push
sahf
sub
cmp
pop
rclb
or
lahf
mov
iret
mov
pop
lret
in
add
sahf
jle
xchg
inc
mov
and
jns
leave
add
sbb
add
sti
xchg
popf
mov
jmp
cltd
xchg
pop
sub
fidivl
push
xor
push
cmp
movsb
mov
sti
testb
lds
cli
add
jno
dec
jb
jg
aaa
sbb
push
aam
sub
or
cmpb
xor
dec
cmp
mov
aas
je
movsl
sbb
es
stos
gs
and
or
stos
mov
shrb
push
cli
aam
jb
lds
inc
enter
andb
ret
cmp
push
bound
mov
jb
out
jne
xor
adc
cmpsl
adc
xor
movsl
mov
movb
adc
je
add
add
dec
ds
push
inc
mov
xchg
imul
dec
mov
xor
and
mov
push
stos
cmp
xor
add
adc
lahf
mov
push
sbb
sti
dec
xchg
sbb
adc
mov
push
add
and
jne
test
jno
fld
sbb
stos
aad
popa
outsb
inc
int
mov
arpl
add
lcall
jb
fldenv
cli
xor
pop
inc
cmc
adc
xchg
push
and
shr
scas
push
xchg
loopne
inc
or
int
adc
lahf
fisubrl
shl
into
jnp
mov
pushl
jae
or
pusha
sbb
lcall
jp
cld
psadbw
sub
push
xor
jg
fadds
xchg
cmp
mov
into
stc
test
fcoms
ret
aad
or
shll
mov
sti
jg
jmp
mov
push
xchg
out
inc
daa
outsb
cli
mov
or
sub
scas
add
mov
movsb
js
stos
stc
in
push
jns
add
jb
jl
xor
testl
push
jecxz
setns
dec
add
xor
sbb
or
and
int3
popf
in
fstl
cld
imul
or
adc
insb
gs
cmp
fisttps
cld
into
sbb
std
mov
cmp
cmp
out
jp
xchg
push
xlat
jp
data16
subl
fisubl
push
jno
pop
jae
mov
inc
cmp
mov
sbb
sti
sub
iret
aas
loopne
outsb
in
inc
imul
arpl
cmc
mov
jb
xchg
hlt
mov
xchg
sbb
daa
imul
sub
mov
jge
repnz
jmp
in
shl
mov
jp
mov
cmc
lahf
xor
sarb
pop
sbb
pop
psrld
pop
and
sbb
lds
loope
lods
mov
pop
xor
mov
out
aas
mov
xchg
push
faddl
cmp
cltd
push
add
cmc
pop
lods
inc
cs
fmul
cmp
push
fyl2xp1
js
lahf
cmp
sarb
pusha
bound
or
inc
dec
sbb
notl
xor
hlt
add
cmpsl
dec
scas
jo
popf
mov
xchg
pushf
lret
jl
inc
mov
dec
cld
in
push
mov
xchg
mov
push
push
dec
mov
aaa
dec
orl
push
cmp
fs
xchg
add
fistps
jno
dec
int
fucom
daa
int3
loop
mov
adc
mov
xchg
fnstcw
pop
aad
repz
idiv
xchg
jno
punpcklwd
sbb
test
cli
imul
mov
cltd
mov
mov
fstpl
sbb
sarb
adc
xor
cmpl
inc
enter
mov
jb
pop
mulb
mov
mov
push
neg
js
push
aam
hlt
inc
stos
mov
xchg
jecxz
inc
ja
mov
test
cltd
push
xor
add
add
mov
or
insl
adc
sbb
call
leave
push
add
enter
popa
ret
in
insb
outsl
adc
loop
je
aam
movsl
jp
and
and
sbb
ss
jl
push
push
or
ss
insl
imul
out
mov
outsb
xorps
cmp
in
inc
xor
jl
hlt
and
fcomip
outsl
out
enter
or
push
lret
adc
dec
adc
rorl
or
mov
leavew
xor
mov
xchg
pop
push
scas
int
addl
push
or
pop
mov
fstps
jno
fdiv
push
xor
das
je
mov
push
outsl
dec
push
push
mov
and
loope
and
cld
lds
call
mov
fsubs
xor
lods
mov
push
rorl
adc
mov
fmuls
dec
xchg
insl
mov
ds
mulb
mov
sbb
loopne
adc
xor
mov
adc
ja
dec
mov
arpl
leave
inc
outsl
jl
rcl
sbb
sti
mov
sub
mov
mov
insl
lock
xor
shl
int
pushf
inc
lea
cmp
mov
or
mov
sub
std
ret
mov
popa
es
mov
adc
jo
sub
mov
scas
sarb
ss
lods
dec
sbb
xor
mov
outsb
pop
fldcw
fisttpl
mov
push
mov
xchg
dec
mov
cmpsl
inc
jp
push
movsl
sub
int
addr16
movsl
pop
mov
mov
fstps
lahf
shrb
and
mov
dec
adc
fistpl
cmc
loope
bnd
pusha
adc
mov
push
pop
pop
push
fisttps
xchg
mov
and
rclb
mov
xchg
cmp
dec
xor
xor
test
repnz
pop
cmp
sbb
xor
stos
push
imul
and
cmpsl
sbb
shlb
add
insb
adc
and
sub
rcrl
push
shll
addr16
push
push
push
mov
outsl
sub
fsubrs
mov
push
or
cmp
mull
stos
cld
lea
loop
mov
inc
call
int
add
popa
dec
rep
repnz
ljmp
cmp
add
and
insl
sbb
int
icebp
cs
jl
pop
ds
inc
gs
mov
push
xchg
or
and
cld
inc
adc
test
push
add
jg
std
insb
and
mov
xor
fnstsw
mulb
scas
aam
lds
mov
inc
scas
in
mov
das
push
push
or
orl
mov
sbb
push
les
jl
pop
add
xchg
neg
mov
xor
pop
pop
cmpsb
jnp
std
in
mov
cmp
call
push
cmp
push
gs
add
loope
mov
pop
mov
jmp
test
mov
loop
and
mov
push
cmc
jg
and
pop
out
mov
sbb
jne
ljmp
dec
aam
popf
adc
clc
mulb
xor
dec
inc
rcr
and
mov
jle
lret
ljmp
pop
or
inc
rol
xor
mov
inc
stos
fwait
mov
in
push
pop
sarl
fwait
gs
mov
and
pop
test
push
mov
xchg
pop
cmpsb
mov
push
scas
bound
shl
xlat
push
jno
jmp
test
dec
push
les
cld
in
in
jp
and
scas
jno
pop
mov
std
aad
and
mov
sbb
push
sbb
aad
and
inc
cmpsb
cwtl
das
jmp
mov
lods
sub
repnz
fchs
mov
adc
arpl
adc
or
xor
imul
psubd
jecxz
xor
inc
mov
lods
popf
repnz
cmc
aas
xor
call
mov
hlt
faddl
xchg
xchg
je
mov
mov
scas
or
adc
mov
mov
add
inc
nop
jp
data16
repnz
dec
mov
cmc
mov
push
icebp
dec
mov
rcrl
mov
mov
int
inc
ds
ljmp
int
push
pushl
rep
mov
pop
mov
nop
cmp
callw
sahf
cmp
cmp
dec
loopne
cmp
mov
dec
cs
mov
jnp
cmp
arpl
out
sub
lret
out
es
dec
add
sub
lods
push
add
xlat
outsb
scas
icebp
cmp
inc
lcall
sti
mulb
push
lret
imul
adc
mov
ret
popa
repz
fmul
mov
cwtl
xor
in
push
cmp
stc
repnz
cs
lea
xlat
xor
lods
int3
sti
and
in
dec
lods
daa
cwtl
popa
cmpsb
punpckhbw
adc
insl
repnz
in
mov
in
imul
loope
fnstsw
shrb
and
mov
or
push
loope
sti
pop
mov
idivb
repnz
mov
ret
cmc
movsb
pop
lods
repz
jg
mov
popa
mov
jmp
or
xor
cmp
xor
sub
sbb
pop
popa
lret
bound
mov
in
xorb
je
iret
imul
sub
nopl
dec
mov
jne
lods
mov
arpl
dec
sbb
mov
je
mov
cmp
jb
enter
sbb
lret
fldcw
add
mov
add
xchg
fwait
xchg
or
out
stos
insb
xchg
loopne
into
js
test
vaddpd
push
xchg
std
push
pop
jp
or
fs
push
mov
mov
pop
pop
arpl
ficompl
cmp
ret
lret
xchg
sub
mov
sub
nop
lock
add
cmpsb
sbb
int
cli
push
or
dec
jge
outsl
int
pusha
xchg
ror
cmp
xchg
lahf
pop
push
dec
pop
or
xor
xchg
sbb
test
mov
xor
out
repz
xchg
mov
jmp
sahf
fwait
out
mov
fcomip
fcompl
and
mov
int
jne
jmp
push
jo
push
test
repz
stos
push
cld
fsubrs
stos
jle
lahf
rcr
test
push
ds
xchg
adc
pushf
mov
xor
sbb
les
add
icebp
lods
adcl
clc
dec
pop
leave
sbb
jl
movsl
dec
mov
pop
xchg
xchg
loop
ret
jbe
sti
aaa
pop
pop
fcomip
popa
cltd
in
arpl
mov
mov
fisubrl
enter
nop
fstps
aad
and
ret
push
and
aad
mov
inc
add
mov
stos
sar
or
inc
xchg
dec
push
sub
ljmp
imul
fidivrs
and
leave
aas
or
fstps
nop
leave
out
xor
pop
cs
jge
sti
pop
sub
cwtl
out
sub
sar
adc
popa
pop
mov
mov
sbb
pushf
mov
cld
shlb
push
pop
xchg
cli
insl
mov
push
pop
mov
stos
popf
jl
imul
nop
jns
imul
cmc
out
fwait
aam
or
push
pusha
jl
cmp
icebp
jae
jae
or
sub
inc
pop
jno
adc
mov
xchg
sub
dec
sahf
adc
lds
dec
mov
cmc
or
pop
popa
inc
aad
or
or
stc
push
iret
mov
jns
stos
mov
cmpsl
test
xor
xor
push
mov
mov
push
or
imul
stos
cmp
inc
insl
out
bound
rorl
hlt
push
movsl
lret
ret
outsl
out
pop
mov
rcr
repnz
inc
out
xchg
mov
cs
xchg
push
dec
mov
push
xchg
xchg
pop
aam
in
sub
jmp
nop
icebp
sub
xchg
sub
jnp
loope
inc
xlat
sarl
je
iret
dec
aad
mov
or
inc
lods
scas
ret
push
jle
lcall
out
ss
mov
pushf
ljmp
ret
mov
int
push
out
and
pop
dec
mov
adc
push
mov
or
jg
or
divb
movsl
in
loope
pop
add
inc
push
sbb
jb
int
lds
repnz
adc
adc
mov
pop
cld
mov
mov
xchg
movswl
clc
loop
sbb
cmp
repz
sbb
cmp
aam
imul
gs
dec
adc
cmp
inc
mov
pop
xor
fs
imul
stos
jg
xor
sbb
cld
jne
sub
fnstsw
nop
shl
divw
adc
clc
mov
xchg
rcll
push
xchg
outsl
jmp
dec
aam
loopne
mov
adc
hlt
sbb
lahf
jnp
push
popf
loope
and
and
jmp
ja
in
inc
pop
dec
mov
cmc
test
pop
mov
inc
jmp
mov
mov
imul
in
jp
mov
sti
sti
xchg
push
dec
and
roll
in
push
jns
mov
mov
jge
and
call
stos
addb
and
mov
sub
stos
fidivl
dec
in
adc
sahf
mov
or
mov
pop
and
imul
xchg
pop
pushf
out
sbb
aaa
or
clc
imul
sub
movsl
iret
push
or
test
fucomi
inc
jle
ret
jp
mov
jp
lods
negl
inc
fwait
jecxz
dec
test
adc
and
and
xorb
arpl
mov
std
pop
mov
pop
and
mov
inc
pop
push
inc
sub
or
and
mov
mov
xchg
aad
sbb
mov
ret
es
outsb
pop
lahf
push
or
ljmp
mov
or
pop
rorl
sbbb
xchg
mov
into
repz
jecxz
scas
ret
imul
pop
sbb
loop
or
lods
jp
sbb
out
pusha
jb
push
mov
sarl
aaa
loop
bound
js
mov
dec
stos
daa
sbb
sti
add
or
push
or
jo
lea
leave
cmpsl
out
and
iret
in
loopne
jecxz
mov
mov
arpl
je
sbb
mov
add
pop
mov
dec
test
fwait
and
idivb
and
add
les
scas
push
push
out
pop
dec
mov
add
mov
fsubl
int
inc
pop
lret
sub
neg
adc
repnz
ja
gs
jns
test
loop
lods
sarb
xchg
jle
mov
mov
pushf
imul
mov
adc
xor
lahf
lcall
movsl
mov
pushf
lods
daa
adc
add
out
xor
out
imul
and
scas
loop
pop
mov
xor
icebp
pop
test
addr16
xchg
push
push
inc
repnz
test
mov
ja
daa
add
and
int3
pop
push
sbbl
sarb
pop
nop
ret
inc
pop
adc
shrl
adc
inc
cmpsl
sub
loop
xchg
inc
idivl
or
and
jle
je
inc
fistps
cmp
inc
adc
insb
inc
sub
cmc
push
gs
outsb
xor
lret
push
daa
ja
xchg
push
add
adc
sahf
out
in
leave
addb
mov
xlat
cmpsl
xchg
or
loope
and
sahf
push
fnstenv
mov
icebp
aam
cmp
jnp
int3
dec
add
fistpl
sub
cmpsl
stos
je
in
inc
push
sbb
movsb
stos
je
push
movsb
fisubrs
cld
dec
jge
jbe
sub
mov
jo
test
daa
pushf
inc
clc
xor
adc
mov
pusha
rcl
mov
shlb
jo
and
jge,pn
int3
pop
nop
xor
jno
mov
das
push
xlat
lcall
sub
jno
jae
xchg
test
push
imul
jge
imul
mov
mov
mov
xchg
insb
shrl
lcall
sbb
lods
push
test
gs
mov
inc
ja
clc
jb
loope
or
ss
aaa
ret
aas
jmp
dec
jle
push
dec
cld
daa
fs
dec
fdivr
xlat
ja
ja
mov
mov
xor
pop
sbb
test
in
xor
scas
fcmovnb
fidivrs
sub
lea
push
cltd
mov
jecxz
in
cmp
mov
jecxz
jge
rorb
mov
jmp
or
dec
jns
jecxz
pop
mov
xor
pop
pop
in
pop
jg
popf
mov
and
sbb
mov
icebp
fwait
jae
test
les
ljmp
sti
insl
das
fs
outsl
mov
sub
call
cmp
inc
leave
adc
mov
fs
ljmp
mov
cmpsl
jns
fisttpl
xchg
push
xchg
jns
daa
test
push
mov
enter
mov
push
clc
jo
inc
movsb
push
jmp
xchg
jae
fnstcw
out
or
pop
xchg
cmpsl
icebp
inc
imul
mov
sbb
aaa
pop
inc
inc
push
decl
out
ret
push
iret
insl
pop
outsb
mov
icebp
data16
sbb
movsb
stos
inc
push
je
jge
mov
push
dec
repz
stos
and
inc
mov
dec
aas
xchg
lea
rcrl
lock
jnp
mull
clc
std
cld
lock
dec
popf
mulw
mov
xor
cmp
loop,pn
jbe
gs
fidivl
cmp
nop
repz
fs
sarl
cmp
sbb
fndisi(8087
jae
rclb
jne
out
cmp
lret
icebp
stc
test
jo
out
sbb
ror
mov
scas
pop
xor
sar
setbe
or
cmp
fidivs
fcompl
addr16
in
adc
cmp
shll
dec
fildll
rorl
sbb
adc
idivb
lret
add
int3
adc
sbb
insl
out
inc
not
in
or
js
sbb
mov
mov
lods
jb
xor
fs
mov
sarb
loopne
sbb
inc
inc
xorb
inc
dec
fnstcw
scas
insb
icebp
xor
mov
add
rorb
push
jbe
xchg
push
popf
inc
xchg
cmp
pushf
jp
and
popa
push
sbb
inc
jmp
sar
insb
test
sbb
popa
aam
test
mov
xchg
mov
fwait
xchg
cmp
dec
sbb
push
pop
and
add
cwtl
popf
in
xchg
dec
jnp
fists
popa
xchg
add
mov
cwtl
in
repnz
mov
cwtl
cmp
mov
mov
fnsave
adc
inc
sub
fs
pop
in
adc
cli
jno
mov
pop
cmpsl
lock
cltd
aad
or
pushf
dec
shll
ds
roll
das
repz
and
in
dec
bound
fisubl
pop
adc
adc
ss
xor
sarl
sbb
and
push
mov
fnstsw
popf
mov
push
shlb
push
enter
fdivr
out
mov
dec
xchg
inc
mov
xchg
push
cmp
mov
mov
inc
out
push
orl
inc
mov
fs
mov
neg
repnz
cmp
inc
dec
jnp
pop
test
gs
cmp
xorl
mov
pop
cmp
push
outsl
jno
sub
xchg
lods
lea
push
jnp
sbb
andb
add
jo
pop
jle
cli
xchg
mov
jge
dec
adc
out
clc
xor
call
int
fists
xchg
adc
imul
mov
or
pushf
andl
mov
and
cmp
andb
fildll
sub
and
and
adc
ss
imul
xchg
add
mov
outsl
pop
sub
pop
clc
pop
int
movsb
mov
sbb
sbbl
std
xor
and
adc
mov
push
jne
mov
mov
push
stos
and
les
cmpsl
js
inc
lods
xor
sahf
out
dec
out
push
sbb
jbe
mov
mov
add
pusha
fisttpll
pop
add
stc
in
add
jae
xor
sti
pop
dec
outsl
push
popf
jne
in
or
or
mov
push
xor
in
jbe
out
sahf
pop
rcrl
cmp
in
or
ret
push
je
loop
adc
lret
dec
fldl
dec
push
mov
or
cli
roll
add
push
popf
sub
fnstsw
ss
sbb
in
pop
jmp
inc
xchg
mov
iret
or
outsb
pop
cmp
arpl
ret
push
jnp
mov
notb
adc
lahf
and
or
mov
popf
out
ret
pop
dec
aad
imul
cltd
push
in
dec
sti
jle
mov
in
ror
dec
lcall
xor
jle
cmp
ss
cmc
inc
into
sbb
mov
mov
mov
ret
rcrb
mov
mov
sbb
add
cmp
mov
popa
dec
iret
inc
cld
xor
aas
push
mov
mov
leave
movsl
cmpxchg
xchg
xor
and
lock
or
pop
lock
xlat
pop
and
cmp
add
cs
pop
imul
mov
sub
mov
pop
pop
bound
test
mov
jbe
int3
jns
les
fcmovu
mov
scas
insb
cmp
xor
inc
dec
pop
out
fs
jbe
test
call
daa
adc
lods
std
dec
or
push
idivl
mov
inc
arpl
std
lods
dec
jae
jge
cli
imul
lahf
push
adc
cmpsl
or
jo
cmp
aad
leave
test
push
neg
mov
push
scas
ds
icebp
push
mov
cli
test
xchg
popf
sub
dec
xchg
add
fldenv
ja
cli
jg
aad
cmp
les
push
scas
into
es
cmpsl
mov
xchg
clc
test
inc
cmp
xlat
pop
adc
xor
mov
jmp
sub
or
inc
inc
jecxz
push
imul
jns
pop
hlt
pushf
jne
je
es
jle
sbb
push
xor
daa
dec
xlat
and
sbb
inc
data16
pop
sahf
mov
mov
sahf
and
subb
sbb
pop
loopne
movsl
jmp
xor
mov
pop
cmp
inc
sub
sti
pushl
mov
cmp
jnp
dec
adc
mov
std
xchg
sbb
cmp
jnp
jbe
gs
pop
pop
push
xchg
fildl
repz
mov
icebp
xchg
sti
fcomp
iret
inc
cmpsb
jecxz
das
xchg
or
xor
adc
sbb
jle
scas
hlt
repnz
jge
lock
jle
add
movsb
nop
lret
insl
int
shl
in
mov
inc
cmpsb
lret
fcmovu
aas
loope
je
xchg
sbb
xchg
dec
push
adc
add
in
roll
sahf
mov
mov
jg
into
std
inc
aad
sahf
repz
push
mov
int
into
sbb
push
push
sub
cmpl
std
lds
add
out
enter
fcomp
cli
and
add
outsl
jo
xor
jle
in
mov
adc
mov
sbb
mov
dec
sub
das
out
rorb
xchg
dec
push
cwtl
scas
jecxz
std
mov
cli
sub
sbb
fildl
inc
jnp
sbb
mov
insl
enter
pminub
cmp
std
in
jmp
mov
je
adc
imul
lret
outsb
clc
sub
and
in
pop
adc
mov
xchg
cmp
std
enter
out
lods
popf
pop
pusha
mov
jno
jmp
imul
in
out
dec
cmc
and
mov
sub
cmp
fcompl
stos
mov
call
inc
sub
lds
push
jnp
pop
and
fdiv
inc
icebp
mov
sarb
mov
jl
dec
sbb
test
xor
out
ja
sbb
call
pop
imul
inc
ret
popa
outsb
mov
cmp
lahf
xchg
and
xor
sbb
and
sbb
aad
out
adc
jns
int3
arpl
scas
fprem
pop
pushf
push
fxch
mov
lcall
and
xlat
lcall
mov
xchg
push
add
add
or
adc
or
xor
iret
jbe
or
add
dec
pop
xlat
or
into
pushl
scas
fsubr
ja
push
sarl
enter
aaa
test
sahf
pushf
rorb
scas
add
mov
xchg
test
repz
out
adc
sub
push
pop
mov
stos
xor
pusha
in
push
and
rcrl
fsubrs
ds
rorl
mov
out
sarl
lock
out
xchg
mov
loop
aam
ret
dec
or
mov
pushf
xchg
add
push
pop
xlat
loop
push
loop
xorl
pop
sti
sub
je
loop
adc
cld
divl
enter
dec
mov
test
fiaddl
push
mov
imul
cmp
jno
mov
loop
mov
inc
dec
fnstsw
arpl
mov
mov
xor
or
subb
mov
sbb
dec
in
dec
lock
aad
pop
adc
popf
es
movsb
test
stos
fcmovnbe
cwtl
call
mov
in
divb
xor
pop
test
lar
xorl
in
icebp
repz
mov
push
inc
xorb
pop
cmp
adc
or
inc
add
inc
xor
mov
pop
in
sti
pushf
mov
xor
sub
lret
sbb
out
mov
addr16
call
and
jg
jg
icebp
mov
adc
adc
lahf
mov
aaa
call
lcall
xchg
cld
mov
add
outsb
movsb
sub
sub
enter
loop
outsb
stc
test
test
and
inc
mov
dec
dec
mov
inc
jnp
lahf
and
fcoms
push
jmp
insl
das
loope
adc
and
fdivrl
popf
mov
pop
imul
out
or
js
mov
adc
fwait
mov
leave
icebp
sbb
mov
outsb
mov
xor
jbe
pop
shrl
push
adc
int
cmp
sub
sbb
jno
repnz
std
push
push
fstps
enter
stc
pop
add
jle
test
sbb
mov
out
inc
inc
pop
xor
rclb
or
sar
orb
pop
and
jmp
sub
fs
push
loop
iret
adc
lret
dec
xchg
jbe
xchg
and
inc
mov
pop
jmp
inc
in
push
outsb
pop
or
cmp
lret
daa
mov
mov
push
xchg
sub
or
adc
jae
lret
pop
enter
sbb
les
popa
xlat
sbb
subl
sbb
mov
mov
cmp
icebp
jle
ja
xchg
cmpsl
dec
mov
test
xchg
mov
mov
cs
rcr
mov
mov
es
sub
ja
lcall
negl
cmp
test
js
xchg
andl
jae
push
sub
ret
mov
push
es
fstpt
mov
in
xor
cmp
mov
mov
dec
hlt
mov
shlb
out
jns
jnp
incb
cmp
xor
inc
out
inc
mov
sti
out
add
dec
stos
lea
jo
mov
jle
sbb
xor
cmc
std
adc
add
call
push
jp
call
mov
sub
lret
jo
inc
shrl
icebp
dec
inc
and
rcl
not
mov
jno
adcb
pop
mov
xchg
es
xchg
fdivl
cmp
out
out
dec
stos
sti
subb
push
filds
push
push
outsb
ljmp
pop
mov
mov
clc
pop
out
out
adc
mov
bound
mov
ret
add
stos
xchg
movsb
bound
mov
in
movsb
mov
cmp
xchg
push
inc
pop
movsb
dec
xchg
stos
addb
jb
xchg
repz
insl
ds
dec
inc
mov
mov
jno
sbb
cltd
inc
add
pop
dec
jbe
pop
xor
sub
adc
pop
push
int3
adcl
xor
fcompl
mov
jg
lods
mov
pusha
ret
call
mov
subb
or
sub
lret
xor
push
fdiv
orb
stc
scas
sarl
inc
dec
push
jbe
stos
mov
loopne
fs
pushf
ss
std
mov
mov
aas
out
push
scas
pop
wrmsr
mov
mov
dec
lahf
in
jb
mov
xor
adc
push
cmpsb
and
cmp
popf
lds
mov
jl
cmp
mov
mov
push
stos
cmp
les
xchg
shll
jecxz
pop
sbb
shrb
push
loop
xchg
push
mov
adc
add
sti
fwait
adc
jecxz
inc
addl
addl
fidivs
aad
adc
push
adc
imul
lcall
repnz
ret
mov
dec
xchg
je
jge
fiadds
js
sub
cld
jge
add
fidivrl
adc
add
aam
adc
sub
pushl
jmp
nop
cmp
imul
fwait
movsl
mov
cmpl
loop
repnz
mov
movsl
push
cmpsb
cmp
je
imul
xlat
push
jo
test
fs
adc
aas
mov
sti
adc
popf
jno
cltd
mov
mov
sbb
sub
hlt
adc
mov
sub
cld
sahf
and
hlt
sar
jge
lret
cwtl
nop
add
cli
test
sbbb
out
in
add
lock
rorl
pop
aaa
jne
filds
jne
aas
mov
jge
int3
stos
xor
imul
aam
seta
fs
imul
xor
cmp
insl
sar
incb
in
sahf
xchg
ret
lahf
repnz
lcall
jp
popf
fists
mov
daa
rcrb
shrb
add
and
mov
les
or
add
and
ja
xchg
cmp
arpl
pushf
stc
mov
jb
ja
jae
addb
inc
int
xor
out
fdivrl
cmpsl
lahf
adc
sub
loope
or
or
and
jp
inc
hlt
jg
dec
add
and
jle
cmp
push
sbb
xor
cmp
mov
xchg
jle
xor
jo
out
repnz
cmpsb
jp
lds
idivb
mov
jns
imul
pop
adc
out
dec
das
adc
out
dec
out
mov
sbb
xchg
pushf
out
mov
int
test
rorl
sub
or
pop
inc
push
sbb
cmp
nop
inc
shlb
inc
jmp
ds
or
or
adc
xlat
and
or
cwtl
push
call
test
into
fmull
xlat
jmp
or
mov
add
movsb
mov
xor
adc
hlt
call
orl
test
mov
ss
aaa
dec
xchg
mov
push
add
pop
jmp
les
js
inc
or
mov
adc
push
aas
add
shl
fidivrl
sub
jnp
testb
pusha
jnp
ljmp
dec
or
fdivrp
fisubrs
sub
cld
xchg
repnz
sub
mov
shl
xchg
add
jp
add
hlt
xchg
sti
pop
mov
or
or
jns
dec
or
pop
fcoml
addr16
jecxz
shrb
loope
ja
push
sbb
jl
pop
push
lds
adcl
aad
lret
aad
mov
in
sub
sbb
or
cmpsb
fld1
std
pop
insl
clc
add
adc
mov
add
sbb
sub
sbb
cmpsl
sbb
insl
mov
ret
mov
mov
dec
mov
mov
or
push
jmp
dec
sbb
jno
push
rclb
clc
stc
in
mov
addr16
out
cmp
jnp
out
rcrb
dec
aaa
xchg
and
mov
sarb
std
lcall
in
enter
js
pop
push
js
xor
in
or
ljmp
stos
sbb
cmovae
jb
dec
xlat
andb
lret
fildl
cs
cmc
push
jno
sub
rolb
repnz
nop
mov
lret
inc
arpl
in
je
dec
dec
pop
mov
mov
push
repz
arpl
mov
bound
mov
push
xor
aad
iret
or
mov
bound
cmc
xchg
test
add
add
mov
dec
mov
ss
les
inc
jo
fstpt
lahf
fldz
adc
pop
mov
das
mov
push
ret
loop
adc
jns
imul
jmp
jecxz
xchg
jo
add
stos
mov
inc
mov
clc
out
inc
push
pushf
add
mov
aam
mov
cmpsl
shlb
cmp
cmp
cmp
decl
test
int3
or
jo
ss
push
lock
push
out
pop
push
and
mov
mov
xchg
inc
lret
jnp
pushf
and
adc
call
repz
xor
adc
lds
fnsave
lods
ja
fsubrl
inc
bound
xchg
data16
dec
add
test
sbb
jl
sbb
pop
pop
pop
nop
jbe
popf
icebp
add
sbb
mov
outsb
push
xchg
adc
icebp
push
push
push
aam
bound
loop
inc
std
xor
add
jo
hlt
iret
cmp
fimuls
es
pop
jge
ljmp
mov
add
push
cld
pushl
mov
js
sar
xorb
cmp
pop
adc
lods
add
sarl
sub
mov
dec
clc
add
in
mov
sub
adc
mov
shll
mov
jmp
bsr
out
cwtl
jnp
push
add
je
mov
push
add
roll
and
push
dec
dec
mov
or
mov
lahf
mov
sub
movhps
sbb
jbe
jmp
mov
push
add
jg
push
loop
mov
adc
cmpsb
xor
call
add
and
or
mov
xor
lahf
mov
je
jmp
jns
xor
jp,pt
add
pop
lods
jne
cltd
ret
and
aad
js
xlat
push
cld
cmpsb
and
cmc
movsb
icebp
mov
scas
sbb
dec
insb
lahf
pop
pop
jns
xchg
or
mov
lahf
xor
push
repz
adc
and
loopne
ror
lret
gs
in
sbb
sarl
int
stos
adc
in
fs
push
mov
into
jecxz
jne
out
ror
push
loope
xchg
dec
mov
pushf
inc
jnp
add
pusha
das
push
xor
insb
mov
addr16
ret
dec
and
int
jnp
ja
frstor
sbb
xor
or
inc
and
add
shr
jle
mov
rorl
popa
sahf
dec
mov
inc
xchg
and
pop
mov
fimuls
rcr
fs
lock
sbb
fadds
cwtl
push
inc
and
stc
inc
or
loopne
adc
and
out
mov
push
cmpsl
test
mov
inc
stc
mov
dec
xor
je
and
enter
dec
jp
inc
push
lcall
pusha
or
sub
fnsave
pushf
jbe
lods
push
fwait
pushf
cmp
addr16
mov
mov
xchg
xor
clc
insl
fcomip
ret
das
in
les
mov
push
sbb
ljmp
mov
add
inc
pshufw
int
mov
add
or
loop
in
cwtl
stos
inc
and
in
dec
mov
xchg
fimuls
fwait
xchg
dec
mov
gs
arpl
int
add
scas
inc
mov
push
jo
sub
mov
cwtl
inc
fsubr
call
in
mov
repnz
sub
and
ret
xor
subl
sbb
fisttpll
sub
and
dec
popa
xor
jge
repz
jmp
pop
sbb
lds
cwtl
pusha
icebp
push
jmp
scas
fcoms
popa
mov
hlt
scas
inc
dec
out
lahf
add
mov
daa
push
fsubrs
dec
sbb
push
jg
repnz
lret
out
lret
push
inc
or
leave
xor
xor
stos
insl
faddl
lahf
idiv
sbb
negl
jp
jno
sub
shrb
icebp
lds
ret
imul
dec
scas
addr16
sbb
movsl
xchg
imul
fmul
lock
jg
iret
in
push
push
loopne
daa
jb
std
fimuls
rcrb
call
pop
sbb
in
sub
cmpsb
mov
push
mov
sbb
imul
push
jbe
scas
push
mov
cltd
mov
sub
dec
mov
lahf
sub
stos
in
push
jns
sar
jno
mov
andb
mov
mov
js
and
mov
cld
sbbb
pop
jp
inc
sub
mov
fsqrt
jnp
popf
fsubr
and
sub
add
push
jle
jns
add
jb
jmp
cs
out
sbb
push
add
or
inc
fists
into
cmp
lods
inc
xor
insl
xor
pushf
mov
mov
inc
mov
add
jecxz
sub
sbb
mov
xor
adc
sub
shl
mov
dec
stos
out
out
test
add
les
lret
fld
cmp
xor
xchg
pushf
fdivp
in
cmp
fstl
mov
inc
fdivrl
shr
imul
stos
pop
xor
xchg
loope
out
rcrb
clc
add
mov
dec
arpl
xor
cwtl
add
xor
lock
mov
pop
adc
out
je
jb
lret
movsb
sbb
pop
cmc
mov
push
insl
mov
loopne
notb
push
push
imul
or
or
push
clc
sub
mov
mov
sahf
mov
fwait
sbb
pop
xchg
fcomp
je
push
jnp
sub
inc
cmp
mov
sti
cmpsb
sub
shlb
and
mov
int3
jns
xor
mov
xlat
mov
outsl
das
mov
nop
dec
test
or
sti
popf
aam
cmp
rolb
arpl
add
mov
mov
sub
or
out
roll
jge
lret
mov
lcall
pusha
inc
mov
push
mov
xor
dec
ror
insl
fdivl
push
repnz
mov
adc
loopne
mov
into
insb
movsb
fistps
rcll
mov
aas
push
mov
std
inc
inc
inc
arpl
fbstp
add
sub
and
ret
adc
mov
sti
jecxz
add
xchg
mov
cmp
push
mov
or
jb
push
ljmp
inc
stc
stos
and
inc
and
sbb
mov
out
cmp
cli
push
ficoms
adcl
and
rcll
add
dec
ja
push
bound
cld
pop
repnz
imul
dec
pop
popf
inc
mov
out
jnp
push
inc
mov
cmp
xor
sub
inc
xchg
emms
push
pusha
addr16
sub
jne
aam
aaa
repz
fadds
jnp
and
mov
clc
sbb
pushf
cld
adcl
mov
or
pop
push
inc
adc
aam
push
jo
pushf
aam
in
cmpl
mov
aad
aam
orl
mov
pop
mov
sbb
mov
dec
sub
orl
nop
fwait
inc
out
ds
mov
dec
subl
or
pop
sahf
js
outsl
mov
lret
inc
push
iret
mov
mov
dec
and
push
mov
clc
in
push
inc
fnsave
push
xor
dec
cmpb
out
hlt
jne
rcrb
ror
icebp
orl
clc
pushf
inc
add
inc
cmp
cltd
mov
insb
mov
push
enter
dec
xorl
test
xchg
sbb
adc
mov
xor
sub
addr16
mov
jl
mull
adc
jmp
je,pt
call
testl
js
and
jae
xor
jge
pop
xor
xor
jg
jmp
mov
adc
dec
adc
outsl
aam
cwtl
sub
xchg
fs
fistpll
jae
insb
or
hlt
leave
inc
push
mov
jae
in
jp
mov
jae
imul
mov
xor
mov
push
cmpsb
pop
push
stos
loopne
xchg
pop
aas
cwtl
mov
ljmp
pop
lock
fimuls
mull
test
icebp
xor
and
add
das
ljmp
test
mov
mov
jecxz
push
inc
and
sbb
cmp
mov
test
cmp
push
dec
imul
iret
push
mov
jo
pop
arpl
mov
fidivl
mov
repnz
out
push
in
add
hlt
dec
mov
inc
pusha
shrb
mov
sub
pushl
pop
sbb
and
adc
gs
jnp
rcr
sub
xor
or
or
dec
rorb
mov
mov
and
mov
pop
adcl
adc
sub
lahf
and
mov
and
adc
call
xchg
and
adc
pop
pusha
mov
cltd
jno
fucom
cwtl
xchg
loopne
push
mov
ds
inc
pop
push
pusha
add
pop
lcall
cld
xchg
inc
push
pop
mov
add
pop
sub
mov
movsb
jae
into
out
sbb
mov
xchg
jecxz
push
fiaddl
sbb
imul
mov
fwait
out
xor
les
in
shlb
out
dec
lret
fdivl
imul
pop
lods
jbe
mov
mov
stc
ficompl
adc
push
sbb
and
leave
pop
je
adcb
pop
cs
aad
pop
and
test
and
imul
inc
pop
pop
fildll
mov
idivl
lea
jb
mov
cwtl
push
lea
inc
loopne
nop
shl
xchg
mov
out
fs
subl
fimuls
repz
loopne
fsubrl
cli
adc
je
sbb
roll
mov
arpl
push
cli
mov
orl
popf
popf
lock
mov
jg
inc
dec
add
cmp
mov
sbbl
cmp
stc
pop
bsr
lret
jl
repz
push
mov
clc
cmp
dec
call
sti
lahf
cmc
xor
pop
sub
adc
aam
or
sub
jmp
inc
dec
pop
xor
pop
lds
push
popa
testb
lahf
ja
xchg
adc
pushf
mov
fsubrs
dec
sub
in
adc
mov
inc
push
test
xor
sbbl
inc
int3
pop
into
shll
sub
inc
out
pop
pop
pop
loopne
fdivrp
in
xor
and
repz
in
clc
dec
sbb
mov
xlat
mov
imul
dec
xchg
pop
cmp
dec
stc
sbb
xchg
inc
ja
mov
stos
or
aam
xchg
data16
add
cmp
test
lock
mov
fisttpll
mov
ffreep
mov
jmp
jmp
fildll
lods
aas
dec
iret
dec
arpl
push
clc
jl
pusha
lcall
cld
inc
inc
out
out
mov
outsl
push
add
stos
adc
xorl
jecxz
adc
aas
push
imul
inc
subps
js
lock
test
mov
add
scas
int3
jnp,pt
lahf
das
add
fwait
xchg
cwtl
loopne
cmp
dec
addr16
xlat
lds
lea
xor
lret
rorl
test
cmp
stos
jle
mov
pushf
je
adc
fimull
push
testb
and
xor
pop
xchg
inc
xor
jge
pushf
mov
dec
jle
aas
icebp
fsts
mov
jmp
imul
fstl
paddusb
sub
insl
imul
and
adc
jmp
test
jns
icebp
out
mov
jp
inc
sub
and
push
push
sbb
out
fisubs
in
xchg
mov
jns
notb
roll
arpl
mov
jg
pop
add
xor
jge
mov
ret
scas
inc
cmp
xchg
idivl
jbe
shr
adcb
stc
sbb
stos
pop
adc
shll
mov
inc
int3
sbbl
push
xchg
insl
xor
div
inc
arpl
sarb
sub
mov
sti
test
or
mov
out
or
jns
jb
inc
push
lock
lret
push
ret
jne
or
sub
pop
out
ds
sub
popf
jnp
enter
fwait
pop
dec
lock
cltd
int
adc
jbe
or
xor
and
fmull
sub
js
xlat
or
pop
jmp
add
scas
loope
mov
cmp
dec
bound
test
call
mull
pusha
pop
testw
adc
out
dec
les
jle
popf
lods
addb
xchg
insb
popf
push
in
cmpsl
fmulp
xor
in
out
fstpt
in
test
lock
mov
push
dec
cli
add
adc
jnp
jae
or
fs
pop
sub
dec
nop
out
outsb
movsl
aam
rcrb
mov
xor
xchg
fsub
push
rcrl
jg
dec
sub
push
in
ljmp
fld
lret
add
or
or
mov
int3
std
jbe
imul
push
fs
push
lahf
push
fcmovne
xchg
cmp
and
and
and
scas
lcall
xchg
lock
shlb
dec
inc
jmp
adc
das
out
les
cmc
jae
inc
sub
jae
sbb
std
mov
in
outsb
push
xor
aam
push
inc
mov
test
movzbl
std
dec
adc
xchg
cltd
cs
xor
xchg
fisttps
out
pushf
and
mov
es
cli
fcomps
push
pop
mov
pop
lret
dec
icebp
shll
mov
jmp
inc
mov
xor
gs
xor
sub
mov
mov
pslld
inc
dec
cli
sub
xchg
jo
in
jno,pn
popf
and
add
ret
aaa
pop
in
outsb
xor
test
pop
jne
xlat
adc
sub
test
outsl
ljmp
in
cmp
adc
pop
cmp
pop
clc
and
lea
xchg
jmp
js
sub
test
xchg
aad
ja,pt
es
hlt
pop
sarl
xchg
mov
push
xor
push
in
and
push
and
jae
lcall
mov
adc
popf
jo
push
jno
and
enter
cmp
mov
push
js
aad
idivl
sub
dec
jo
sub
jecxz
and
dec
mov
jne
push
cmpsl
mov
inc
fistps
je
movsb
in
outsb
fmuls
rcll
xor
clc
enter
add
lods
aam
fstl
sbb
and
dec
or
ret
cs
xchg
lods
adc
repz
dec
pop
shlb
fs
stc
jge
mov
and
cmp
pop
jle
cmp
mov
bound
mov
jae
dec
faddl
es
ljmp
mov
jo
xchg
insb
xor
lahf
ss
push
add
sbb
andb
sub
lods
mov
jge
mov
flds
icebp
cs
mov
popa
cld
inc
add
xchg
data16
xor
xchg
cmp
mov
push
push
sub
adc
jle
test
mov
fdiv
push
sarl
push
sub
ret
sub
fsubrs
jecxz
xor
and
xchg
out
cmc
fimuls
jle
adc
into
out
test
mov
mov
aad
inc
mov
movl
jecxz
adc
ret
fadds
movsl
iret
ds
pop
pushf
lahf
ds
cmpsl
notb
push
mov
pop
inc
lret
push
cmp
xchg
cwtl
mov
xchg
xchg
xchg
adcb
inc
fcmovne
cmpsl
sti
adc
mov
xchg
int3
out
cld
cwtl
cmp
jne
jl
outsl
scas
out
mov
inc
sub
or
mov
iret
xchg
mov
pop
js
dec
lret
rclb
ss
test
add
dec
adc
enter
addr16
outsl
js
out
mov
mov
lret
lea
add
cmp
sarl
loope
push
rorl
aam
leave
jns
bound
out
lea
mov
das
dec
push
mov
into
lret
pop
imul
or
adc
out
pusha
xchg
cmp
dec
addr16
shll
sysexit
testb
aad
mov
dec
sub
int3
icebp
jge
repz
adc
notb
and
es
adc
inc
and
in
decl
jmp
sub
push
or
xchg
sahf
inc
or
xchg
or
mov
mov
inc
popf
int
xor
adcb
lods
int
je
mov
cmpl
adc
mov
daa
lods
and
sbb
int3
push
pop
inc
int
pop
mov
aas
jnp
xor
cmc
inc
xor
clc
iret
fwait
hlt
pop
hlt
test
gs
shrb
pop
mov
fnstsw
xchg
in
jb
jp
sbb
stos
stos
addr16
testb
popa
dec
daa
js
mov
je
mov
out
popa
mov
jnp
xor
sub
xchg
fadds
xor
jae
or
mov
stc
xor
dec
stc
out
or
rol
push
mov
jle
cwtl
fidivs
das
sahf
xchg
lahf
lds
clc
push
push
sbb
loope
scas
jmp
cmp
loop
and
ficomps
andl
ss
inc
ss
push
cmp
fstpt
xor
sub
leave
aas
cs
mov
jg
xchg
js
jp
stos
stc
mov
in
push
loope
mov
push
add
xchg
inc
mulb
imul
insl
add
and
mov
mov
stos
jne
jne
push
fnstenv
popa
ror
pop
sub
push
mov
jns
cmpsb
lea
outsl
icebp
sbb
std
ljmp
pop
test
xchg
pushf
sbb
cmc
or
cwtl
push
std
mov
cmc
mov
pusha
cwtl
sbb
pop
adc
loope
ja
sub
scas
imul
je
dec
jle
cld
sbb
sub
mov
mov
cmpsl
loopne
mov
stos
sahf
ds
hlt
insb
cli
clc
hlt
sti
mov
push
das
test
dec
mov
cmp
jecxz
xor
inc
xchg
mov
xlat
lea
sbb
adc
pop
stc
and
cmp
fisubrs
call
in
cs
dec
xor
hlt
aaa
movsl
out
jae
cwtl
mov
cmp
stc
cli
or
jb,pt
fsubl
pop
and
fstpl
insl
push
mov
jmp
mov
or
stc
push
repnz
cmpsb
in
jmp
or
dec
aas
stc
fmull
jns
jle
inc
loopne
xchg
int3
xor
dec
aaa
call
sub
or
mov
inc
mov
xchg
movsl
fists
repnz
adc
jae
cs
lahf
adc
mov
testl
ficoml
jge
int3
inc
pushf
sbb
mov
fdivrs
call
std
inc
jl
scas
stc
fs
rorb
sub
and
cltd
stc
and
repz
in
and
xchg
addr16
js
push
imul
call
stc
cmp
adc
pop
pop
lock
test
loopne
enter
jno
mov
je
cmp
iret
push
into
mov
xor
lahf
ja
inc
call
mov
push
scas
or
in
std
lds
icebp
ret
lock
jp
lret
in
or
lret
imul
jge
dec
call
sub
fsubr
in
in
push
add
aaa
movsl
or
lea
xchg
fs
mov
movl
clc
shr
roll
lea
cmp
push
jns
rorb
fbld
icebp
mov
ljmp
xchg
mov
add
outsl
stos
ds
sub
rcll
out
rorl
xor
insb
cmp
lds
andl
sub
push
cmp
jp
mov
push
add
mov
iret
cmp
jns
loope
mov
xchg
fcompl
pop
sbb
mov
xlat
les
adc
imulb
dec
pushf
mov
cltd
pop
cmp
test
dec
shrd
aam
xlat
data16
mov
les
cmpsb
daa
xlat
rolb
test
mov
sarb
cmp
push
pop
lods
jp
xchg
leave
inc
idivl
mov
ret
and
xchg
bound
dec
add
mov
outsb
mov
dec
movsl
mov
dec
mov
fwait
in
mov
mov
out
mov
adc
cmp
in
jg
jmp
xchg
mov
and
mov
flds
lret
mov
adc
int
add
imull
sbb
gs
cmp
xor
adc
jge
negb
inc
lret
fcmovb
mov
lods
sbb
fnstenv
xor
ficoms
call
pop
lret
popf
ss
aam
xchg
in
fimull
fisttps
sbb
cmpsl
mov
mov
and
fildl
fldcw
jge
xor
repnz
pop
xchg
notb
enter
and
or
dec
sub
ja
jne
dec
xchg
mov
sub
std
or
add
ljmp
out
imul
loope
dec
jle
jno
or
pushf
cmp
lods
push
and
or
mov
mov
add
mov
add
xchg
push
loop
addr16
fsubrl
adc
xor
addb
test
inc
push
jo
ljmp
cmpsl
imul
pop
shll
mov
nop
dec
shlb
inc
mov
shl
imul
mov
push
nop
sbb
jl
inc
pop
ss
xor
out
bound
movsb
test
in
mov
pop
jmp
mov
adc
enter
sub
out
ljmp
pop
scas
int
cs
mov
pop
mov
mov
lret
ds
clc
mov
add
rcrl
mov
inc
mov
jg
jmp
rol
jmp
add
pop
repz
mov
iret
add
pop
out
call
mov
lods
aam
jo
pop
mov
int3
orl
into
or
arpl
ja
std
cld
cmp
inc
in
stc
add
jnp
push
movsb
fcmovne
sbb
popa
dec
dec
jmp
pop
in
stc
out
outsb
push
addr16
rcl
pop
cmp
mov
push
push
ret
mov
insl
adc
mov
lahf
xchg
sbb
icebp
xchg
je
adc
sarb
pop
or
mov
loopne
mov
lock
and
movsl
push
and
sbb
and
mov
mov
push
lcall
adc
push
and
aas
sub
mov
out
pop
mov
shl
lret
cld
js
sarb
pusha
fsubr
cmp
sbb
jle
sub
lds
jne
in
out
aaa
scas
dec
out
xor
pop
imul
and
cmp
scas
pop
mov
sub
xor
push
dec
jge
mov
mov
mov
mov
mov
lret
mov
dec
add
daa
jg
test
icebp
out
mov
repz
in
inc
sub
test
ljmp
sbb
pop
lock
or
pop
sub
cmovne
pop
add
stos
add
pop
ret
iret
dec
mov
insl
addl
jbe
fsts
adc
sbb
adc
test
out
pop
pusha
dec
mov
cmp
mov
jbe
mov
dec
mov
jge
jecxz
inc
stc
push
es
lds
aad
and
out
aaa
cmc
mov
inc
dec
xorb
inc
add
or
shl
into
insl
mov
lock
loop
arpl
mov
out
adc
jae
mov
xor
xor
jecxz
push
sbb
inc
int3
xchg
lods
movsb
shrb
repnz
ljmp
ss
adc
clc
xor
dec
ss
mov
ret
sti
jle
scas
cmp
and
std
mov
xor
mov
cmp
or
loopne
call
stc
addb
jmp
or
xor
mov
cltd
sub
gs
push
adc
cmp
inc
mov
mov
push
xchg
rep
out
jmp
lcall
in
sub
clc
and
inc
sub
dec
sarl
jl
mov
ret
sbb
call
cli
repnz
fldt
jnp
sbb
loope
sarl
mov
imul
loopne
outsl
add
imul
rol
pushf
xchg
loope
jle
adc
out
test
sbb
pop
mov
xor
adcb
das
aaa
cmp
int3
in
pop
pop
pop
pop
insl
mov
add
xor
mov
push
insl
std
lret
pop
into
adc
insl
shrb
sahf
sub
cmp
cmpsl
addr16
inc
mov
pop
xor
ja
mov
and
xchg
jb
dec
in
jp
jge
ret
or
outsb
mov
pop
and
cli
repnz
pop
mov
push
sbb
xchg
pop
mov
jbe
stc
pop
test
xor
pop
int
push
dec
pop
leave
shlb
push
pop
lret
mov
or
or
insl
repz
xchg
rep
mov
fisubrl
pop
sarl
cmp
mov
enter
inc
sub
in
adc
inc
mov
stc
sbb
mov
call
stos
pop
mov
mov
mov
pop
pop
fs
in
popa
idivb
jge
mov
pop
cmp
insb
sub
loope
les
ljmp
mov
pushf
test
adc
vmwrite
call
dec
pushf
cmp
outsb
cmpxchg
scas
shrb
test
mov
xor
mov
jo
mov
icebp
shlb
pushf
enter
movsb
jae
jno
sub
and
rcrl
mov
mov
mov
ds
in
dec
xor
mov
shll
xchg
or
in
ja
mov
inc
mov
push
pop
arpl
mov
movups
jne
fidivrs
sub
pop
push
push
fidivrl
rcrb
rorl
mov
xor
xor
sub
jb
mov
aas
bound
xchg
push
mov
xchg
int
pop
jecxz
or
mov
mov
je
xchg
js
fcoml
push
rorb
mov
adc
cmc
mov
xchg
mov
lret
int3
popa
cmc
add
int3
iret
sbb
add
inc
arpl
arpl
adc
ret
pushf
lcall
ror
or
loope
cmpsb
jmp
outsb
inc
aas
push
xchg
sub
pop
and
push
imul
stos
mov
push
std
fmull
jmp
mov
test
std
in
or
add
scas
mov
xchg
fisttps
inc
loopne
sbb
xchg
xchg
xlat
cmp
inc
aad
dec
dec
es
loopne
sub
jnp
imul
cmpl
inc
fldcw
adc
xchg
xchg
dec
stc
lods
movsb
sub
outsl
adc
icebp
lahf
aaa
jno
xchg
sbb
xor
in
test
fildl
mov
cltd
and
iret
mov
cmpsb
push
jg
dec
sub
test
jo
or
aas
sub
jecxz
mov
arpl
push
xor
std
cmp
mov
insl
sahf
les
orps
and
or
out
sbb
cmp
dec
add
xor
fwait
hlt
pop
ffree
clc
mov
movsl
bound
push
lret
and
xchg
cmpsb
cmp
sbb
enter
cmp
out
push
fdivl
cld
or
daa
lret
mov
ret
mov
and
lahf
je
adc
inc
lods
lods
test
xor
scas
inc
or
mov
fpatan
mov
fs
idivb
push
std
cmp
pop
sbb
jno
jmp
push
sti
cli
movsl
or
cmp
push
inc
push
mov
mov
mov
ret
out
sub
test
mov
loopne
popa
stc
jmp
cwtl
loopne
mov
cmpsl
dec
daa
mov
into
or
jmp
inc
mov
out
push
or
mov
push
cli
jbe
insl
sbb
les
fbstp
jmp
mov
mov
ss
jne
mov
in
xorl
lea
rol
in
adc
lcall
pop
jmp
out
sahf
adc
lret
sub
out
adcl
jb
sti
movsb
xor
sub
movsb
push
ds
mov
mov
pop
mov
inc
inc
mov
xor
or
and
xchg
out
or
fcomps
inc
ja
pop
sbb
cld
jns
xchg
adc
lcall
lods
in
out
test
push
adc
repnz
iret
push
pop
vxorps
jmp
out
xchg
mov
mov
and
cmp
mov
shll
adc
icebp
jne
cltd
mov
aam
or
lret
inc
add
fdivl
pushf
rorb
out
cmp
cmp
test
and
mov
aaa
sahf
fdivrl
rclb
jbe
pop
es
sbb
and
mov
popf
jae
xchg
lahf
sub
lea
dec
ljmp
pop
xor
sti
das
repz
or
inc
das
pop
repz
cmpsb
jmp
outsl
push
push
or
pop
jmp
cmp
mov
add
or
xchg
or
std
movsl
dec
sub
push
or
jne
dec
imul
inc
popf
pmaddwd
loop
and
repnz
gs
aaa
add
lock
cmc
push
jle
pop
cmp
adc
dec
xlat
lret
xchg
push
push
and
xchg
xchg
mov
nop
andb
movsl
add
ret
movsl
mov
sbb
add
mov
pop
out
push
not
sub
test
bound
je
or
push
sbb
jo
pop
ljmp
adcb
rclb
mov
fxch
sbb
cld
aas
faddl
mov
ret
sarb
mov
pop
loop
jbe
fimuls
pop
adc
cwtl
xchg
inc
or
test
pop
mov
mov
or
dec
std
movsl
jne
jae
sub
rcll
sbb
stc
imul
das
aas
sub
hlt
insl
aad
mov
cmpsb
rclb
cmp
push
mov
push
adc
pop
xchg
jo
push
repz
and
les
mov
sub
das
xchg
jmp
sarl
mov
mov
lods
loope
outsb
out
xchg
cmpsb
es
fwait
ds
push
xchg
dec
loope
push
mov
iret
sbb
ss
cmpsl
insb
cmp
sub
push
test
aas
cmp
push
shlb
lret
sahf
mov
mov
test
leave
fiadds
dec
ret
add
sbb
je,pt
sbb
in
pushl
nop
mov
xor
fs
scas
mov
sub
pop
mov
jns
mov
loope
sbb
jmp
jae
sbb
cli
xchg
jp
pop
les
and
addb
mov
adc
cmp
insl
pushf
rcrl
jge
jle
push
dec
ds
sub
and
and
mov
rcll
cmp
mov
or
lods
inc
ja
cld
pop
testb
inc
jno
xchg
es
cwtl
mov
fildl
daa
popf
cmp
fcoml
jle
loopne
call
xchg
testb
fildll
xor
gs
shlb
rol
cld
in
xchg
jo
dec
out
inc
icebp
imul
cld
dec
dec
jns
clc
pop
add
add
fs
or
cmp
jl
subb
mov
sahf
es
shlb
test
fisttpl
mul
dec
pop
aas
pop
and
inc
lea
idiv
xor
int
cmp
test
es
mov
fwait
dec
push
fdivr
stos
lret
mov
jne
addb
int3
mov
mov
sub
ret
in
pushf
stos
sbbb
pushf
sarb
jge
outsb
sub
pop
in
mov
inc
jl
mov
mov
push
sbb
out
mov
in
xchg
inc
enter
sub
js
call
xchg
loopne
mov
xchg
icebp
les
push
sahf
cmp
xchg
fnstsw
push
mov
cmp
pop
out
inc
jns
xor
movsl
mov
fdivp
xchg
push
and
js
fdivr
sbb
sbb
jbe
sahf
and
xor
and
inc
imul
sub
int3
push
mov
add
ljmp
pusha
push
lcall
das
sbb
jo
jle
cmp
jecxz
adc
pop
pop
inc
lds
test
cli
mov
lock
mov
dec
and
cmc
mov
pop
ret
dec
sbb
in
mov
les
in
in
out
mov
cmp
lds
push
push
jo
sbb
push
inc
pop
mov
inc
das
daa
and
addr16
test
cmp
add
mov
cli
mov
cli
pop
dec
mov
shl
outsl
mov
pop
loopne
call
in
rolb
incl
dec
stos
out
test
cmp
test
or
xchg
fwait
scas
and
clc
mov
aam
aas
jne
xchg
dec
fistl
or
mov
jne
fs
popa
sub
or
mov
pop
jle
clc
loopne
mov
sbb
dec
lds
clc
es
inc
dec
dec
mov
test
jo
loope
and
pop
jecxz
push
or
insl
inc
dec
mov
xor
jp
push
inc
dec
adc
sbb
push
test
in
sbb
mov
jl
sub
dec
adc
or
and
push
out
lret
lcall
sub
dec
inc
and
loope
add
addr16
push
and
scas
xlat
adc
add
cltd
dec
bswap
or
push
xchg
jnp
mov
push
add
xchg
enter
test
repnz
cld
jle
andb
popf
sbb
out
or
inc
repnz
movsb
test
push
xlat
mov
adc
or
inc
pop
inc
data16
loopne
arpl
sub
sbb
cmc
dec
mov
sbb
jb
daa
outsl
movq
xchg
dec
cmp
jo
sub
addr16
xor
fisubs
lret
pop
pop
dec
push
xor
mov
insb
mov
cmpsb
rorl
sbb
aaa
cmp
jl
or
ljmp
stc
add
or
repnz
sub
hlt
cli
push
movsl
jl
or
mov
xchg
addb
out
sbb
test
mov
je
cmp
push
push
pushf
sti
cmpsl
js
cli
xchg
loop
cmp
sub
push
into
mov
cmc
jae
jb
test
add
arpl
outsl
push
jae
xchg
pop
or
repz
pop
test
negb
test
xor
out
dec
ficoms
xor
xor
or
nop
jno
jecxz
repz
je
mov
adc
lret
jno
repnz
and
fdivrp
shrl
in
and
adc
push
shll
test
inc
ds
fmul
cmp
fstpl
subb
jbe
clc
sbb
popa
ret
mov
pop
lds
and
sbb
sbb
arpl
test
sarl
js
xchg
cld
xlat
lea
sbb
inc
sbb
sub
cmp
lahf
aam
mov
cmp
int3
push
cmp
sbb
sbb
jno
jmp
cld
in
sbb
test
data16
jl
push
mov
push
pop
or
pop
cs
es
mov
in
xchg
pop
int3
mov
jb
fldcw
imul
mov
sub
loop
outsl
mov
dec
out
mov
out
inc
jae
scas
inc
sti
jb
cld
sahf
jo
bnd
lcall
push
and
push
cmp
sahf
leave
mov
sub
je
adc
jl
jns
popl
sbbb
fisubl
jns
test
fs
mov
sub
fcoms
std
push
mul
add
cmpb
adc
adc
fdivrs
das
cs
pop
imul
addb
mov
dec
movsb
mov
arpl
shlb
repz
notl
pop
cltd
in
and
push
sub
mov
pop
pop
scas
adc
xchg
in
add
test
loop
jbe
jl
push
inc
dec
jmp
dec
jb
dec
adc
xchg
shll
rcrl
jg
jle
jno
adc
in
push
sahf
cmp
out
pop
mov
mov
ljmp
mov
xchg
popa
pop
imull
push
jae
cmp
xor
aas
fcmovbe
inc
fistl
das
mov
lods
cwtl
ret
fwait
mov
in
lea
sub
cmpsl
sub
push
xor
jl
xchg
loop
data16
pop
out
repnz
push
add
stos
cmp
sbb
adc
xor
in
pop
adc
jle
push
pop
repz
stc
js
insb
add
fisubl
pop
inc
mov
loope
sub
mov
hlt
fs
pop
leave
mov
jmp
cltd
popa
insb
mov
ljmp
pop
sti
add
push
sbb
or
neg
mull
test
hlt
sub
pusha
leave
and
addr16
inc
stos
jl
xchg
jecxz
dec
add
hlt
sti
or
mov
mov
pusha
fs
jecxz
sahf
pop
es
cltd
mov
push
movsb
movsl
pop
bound
cmp
xlat
inc
fdivrs
lock
inc
push
loop
int
xor
and
push
xchg
dec
pushf
adc
in
push
adc
es
test
movsl
mov
jl
mov
jp
or
xor
mov
push
mov
dec
and
or
sub
das
insb
xlat
add
jbe
icebp
outsb
fidivs
mov
xor
and
dec
jle
push
idivl
loop
test
cmp
pop
inc
imul
fbld
iret
lods
pop
xchg
pop
mov
sub
jbe
or
in
pusha
into
les
and
mov
fdivs
bound
mov
dec
mov
lock
cmp
xchg
arpl
xchg
sahf
jne
adc
mov
jo
lahf
aas
lods
inc
jb
jmp
dec
xchg
lret
adc
xor
add
pop
adc
pop
pop
adcb
pop
cmpsb
adc
jb
stos
mov
inc
or
into
pushf
shll
or
mov
js
lock
pushf
and
mov
ret
pop
sub
mov
test
and
int
mov
pop
and
sti
sbb
cmp
push
jecxz
inc
lcall
fdivrp
cmpb
std
xchg
test
inc
mov
add
or
imul
push
push
dec
dec
notb
jle
jg
sbb
mov
pop
or
inc
cmp
mov
aam
mov
mov
rcl
mov
sbb
out
jecxz
jl
inc
sbb
and
clc
daa
insb
es
ret
cmp
xchg
stc
jecxz
push
push
pop
lods
adc
out
dec
loope
xchg
jno
xor
jp
jmp
or
js
add
aas
or
sbb
mov
jge
call
cmp
push
mov
pop
divl
sar
ljmp
push
jmp
or
test
sub
int
mov
xor
push
xchg
sub
sbb
pushf
jecxz
cmp
sbb
xbegin
js
lock
cmp
cwtl
pusha
pop
lret
shll
add
mov
js
lds
inc
cmp
dec
stos
popf
mov
jbe
fnsave
pop
daa
and
ret
lret
subb
ja
mov
test
fiadds
loopne
inc
pop
adc
lock
jae
lret
stos
xor
fcmovb
jge
cs
popa
xor
pop
xchg
out
sbbl
sti
cmp
jae
sbb
jo
push
fdivs
aad
mov
mov
or
sti
mov
push
test
outsl
push
loope
sub
and
loope
jecxz
xchg
cmp
mov
and
jo
and
mov
push
in
cmpsb
xchg
sbb
pop
insb
jo
loop
xlat
pushf
pop
popa
pop
mov
pop
int
addl
sbb
lahf
jle
int3
or
mov
and
clc
mov
xchg
adc
sub
mov
insb
push
and
in
clc
mov
dec
sbb
and
dec
sbb
movsb
aam
test
es
xor
out
imul
xchg
push
rcll
or
and
jnp
out
inc
cmpsb
arpl
pop
out
adc
and
mov
inc
push
jo
sub
clc
pop
add
jnp
or
dec
in
into
mov
push
adc
jo
jecxz
nop
iret
std
xor
and
mov
scas
cmp
push
test
mov
pop
mov
in
push
mov
xor
in
repnz
lock
aas
dec
fistpll
jnp
dec
gs
and
insb
push
rolb
add
iret
jg
vmulsd
cmpl
mov
or
sub
dec
adc
enter
cmpsl
fsubrs
or
cmpsb
psubusw
fisubs
dec
decb
ds
repz
mov
out
test
sub
push
push
mov
push
jns
scas
pop
cmp
je
jecxz
mov
lods
f2xm1
inc
jg
dec
jg
sub
and
xchg
cs
dec
mov
outsl
lret
sub
ljmp
sub
fists
cmp
pop
mov
jp
or
lods
adc
push
cltd
cmp
stos
mov
push
xchg
out
sbb
int3
mov
fsubrp
jae
stos
mov
fldl
mov
pop
xor
add
pop
imul
and
int
adc
into
jns
popa
lcall
les
lds
rorl
mov
roll
or
scas
or
scas
mov
mov
xchg
ret
push
mov
adc
mov
sbb
push
push
stos
ret
mov
cmpsb
jno
jns
fstl
cmp
mov
sti
inc
repz
cltd
stc
push
pop
inc
push
jbe
mov
adc
jbe
mov
int3
in
dec
adc
lock
gs
mov
inc
xlat
icebp
sub
jl
cmp
xchg
test
and
ud0
int3
pop
je
fdivl
pop
ror
ret
xchg
adc
pop
jp
lods
dec
pop
pusha
inc
xchg
fadd
stc
push
mov
inc
mov
imul
repnz
jbe
andb
addr16
pop
insb
notl
gs
mov
or
add
mov
int
hlt
or
mov
push
jge
clc
mov
and
das
mov
test
push
mov
push
subl
push
inc
jp
and
sub
xor
cs
xchg
call
xor
cli
fsubrl
aaa
hlt
imul
mov
in
pop
pop
mov
sub
mov
mov
jnp
orl
in
ss
xchg
adc
cmpsb
push
repz
adc
jmp
les
lea
push
movsl
cmp
cmp
lcall
mov
icebp
xor
in
scas
xlat
mov
ret
jg
into
xchg
sub
bound
sub
xchg
subl
movsl
mov
xchg
push
and
notl
movsl
or
or
movsl
add
out
mov
or
push
inc
bound
in
sbb
fwait
xor
xor
mov
data16
test
into
mov
movsl
loope
rcl
pushl
mov
xor
mov
sbb
jns
hlt
addr16
sbbb
rorb
inc
fwait
dec
ja
inc
lods
sbb
pop
int
xchg
xchg
jne
sub
arpl
xchg
repnz
jle
add
data16
mov
pop
jne
popf
dec
mov
push
fs
xor
adc
xchg
cmpsl
hlt
push
inc
cwtl
cmp
dec
xor
lcall
daa
int
mov
cli
jmp
in
adc
push
divl
and
sub
cs
mov
mov
cmp
sahf
and
push
xlat
loopne
pop
iret
sbb
jne
popa
mov
mov
jmp
pop
and
enter
shl
stc
cmp
bound
add
inc
push
mov
scas
cld
mov
ja
pop
fcompl
in
cwtl
test
insb
add
iret
stos
lods
std
and
popa
dec
push
out
mov
add
push
cmc
lea
lods
cmp
mov
add
mov
xchg
shll
mov
dec
out
mov
movsl
mul
in
xchg
dec
js
dec
dec
pop
pop
add
out
paddsw
pusha
jno
test
xchg
push
and
push
jmp
and
mov
cltd
out
lahf
stc
cmp
pop
nop
or
mov
test
dec
and
pop
shll
fimuls
push
jnp
jmp
aaa
adc
mov
cmpsl
jae
xchg
js
jge
leave
scas
movsl
imul
scas
adc
mov
push
cltd
lods
pop
add
lea
mov
jmp
mov
scas
aam
ja
xor
sbb
jb
ss
andb
xchg
push
xorl
mov
popa
push
popf
fidivl
jl
idiv
imul
lret
icebp
pop
ja
faddp
push
add
pop
nop
jg
je
and
pop
dec
jae
jl
or
jnp
push
or
inc
ret
cwtl
jo
pop
jo
repz
or
cmpsl
test
into
aad
cmp
cltd
pop
mov
outsb
popa
mov
mov
mov
fimull
or
aam
sti
push
and
mov
xor
sti
jecxz
mov
addr16
pop
nop
into
xlat
pop
lea
xor
cmp
imul
inc
lea
cmp
xor
dec
fs
inc
testl
cltd
adc
jmp
sarb
out
jle
aad
shr
stos
lock
aam
sti
nop
mov
fnstenv
bound
shr
pop
xchg
xor
es
divb
xor
sub
frstor
gs
push
mov
stos
cwtl
leave
mov
push
sub
cs
mov
cwtl
cltd
inc
ljmp
or
xor
fwait
lods
or
gs
mov
xchg
xor
push
and
lahf
jl
sub
fsqrt
loope
cmp
push
pop
adc
sub
jp
ret
call
add
movsl
out
scas
cmpsb
xor
in
sub
aas
scas
cltd
cmpsl
and
xor
into
mov
sbb
cmc
dec
sbb
call
push
adc
fbld
jb
push
mov
or
dec
enter
loopne
es
cmc
scas
scas
xchg
enter
repz
stc
xor
cmpl
stos
mov
xchg
and
sub
aad
fimuls
jno
bound
push
in
xchg
sbb
sti
push
cwtl
dec
mov
mov
pop
inc
sub
xchg
sbb
lret
cmp
lret
pop
in
add
cmpsb
push
icebp
cltd
inc
jecxz
mov
out
cmc
xchg
or
das
cmp
daa
fsincos
or
mov
pop
ljmp
js
push
hlt
lods
cmp
and
lods
aam
inc
ss
int3
mov
fldt
mov
jmp
jl
sarl
lods
or
xchg
ds
out
xchg
test
dec
pop
popf
ljmp
lcall
rcll
mov
mov
insl
sbb
pop
cmp
fisttpll
addr16
mov
lcall
cmpsb
test
enter
mov
and
mov
call
jne
mov
inc
cltd
adc
xlat
stc
xchg
cltd
std
loope
sub
mov
mov
xchg
lahf
lods
jle
out
xor
pop
or
push
enter
sbb
stc
pop
sbb
imul
test
js
pop
daa
xchg
add
popf
mov
sbb
mov
mov
stc
mov
negb
mov
mov
inc
cmp
adc
popa
cmp
stc
add
adc
shrb
push
insb
mov
mov
daa
or
andl
mov
jmp
stc
dec
cwtl
add
add
cmp
and
inc
mull
adcb
and
pop
adc
inc
lret
xchg
js
adc
je
and
adc
mov
or
cmp
cltd
mov
int
fnstcw
out
mov
lea
or
mov
mov
iret
fstpt
jo
jg
cmp
jecxz
insb
adc
sbb
jl
cmpsl
aaa
icebp
popa
mov
mov
adc
daa
push
fnstsw
lret
jns
lea
mov
popf
sub
andl
xor
ja
mov
aaa
adc
std
dec
push
aam
shll
xchg
rorb
ss
leave
sub
push
shlb
outsl
clc
mov
fistl
sti
dec
pop
repz
pop
xchg
dec
les
in
jno
into
lret
jo
cmpsl
dec
cld
repz
mov
inc
sub
movb
sub
adc
in
or
mov
adc
mov
jns
mov
nop
push
mov
jle
mov
sub
sub
xor
jae
lret
pop
int
scas
imul
pop
lds
int
hlt
sub
js
sub
jge
mov
in
dec
test
pop
adc
mov
adc
add
mov
adcb
or
dec
jp
cmpsl
mov
jo
inc
xchg
sub
mov
mov
nop
xor
clc
test
lock
jae
iret
divl
xchg
mov
adc
jle
and
fldl
mov
sub
insb
or
fmuls
adc
jo
mov
fidivl
ljmp
les
sub
mov
in
fisubrl
inc
fisttps
sub
xor
and
jge
jns
cmc
icebp
mov
lret
out
int
mov
inc
inc
cwtl
movsb
mov
insb
sbb
rolb
ret
aad
stos
sahf
cld
and
adcl
aas
mov
fidivs
insl
jmp
repnz
xchg
push
lret
and
int
je
sub
jno
mov
notl
dec
es
pusha
std
lahf
cmp
cmpsb
aas
push
leave
jae
mov
out
sub
sahf
add
cmp
adc
xchg
and
dec
out
jne
xor
subb
scas
pop
jb
out
xor
dec
add
loopne
adc
repz
in
pop
dec
lods
lahf
sub
xor
out
into
sub
aam
imul
inc
push
fimuls
mov
add
dec
mov
cltd
idiv
cmpsl
mov
int
leave
mov
popf
stc
mov
xchg
push
test
jmp
dec
in
inc
cmp
add
fdivl
adc
jb
cmp
dec
jno
aas
loop
and
test
cmp
call
sti
loope
out
jecxz
fildll
jp
inc
cltd
fistpll
mov
out
push
repz
data16
shrl
mov
mov
xchg
insl
pop
or
sub
lock
or
pop
dec
arpl
inc
xlat
adc
ljmp
sbb
mov
mov
rcll
xchg
je
mov
sti
hlt
fcoml
into
push
push
cmp
xor
mov
js
shl
mov
lret
cld
repnz
movsl
sub
lea
insl
or
xchg
mov
sbb
icebp
or
gs
mov
pop
xchg
je
jmp
mov
push
ljmp
jbe
fildll
fxch
mov
fcmovnu
xor
cld
sti
jmp
iret
scas
add
mov
lods
mov
mov
ljmp
dec
adc
sub
sub
into
repz
lahf
jle
stos
mov
sbb
fstpl
fldcw
and
repnz
push
rclb
fldl
pop
lahf
loop
sub
test
cmp
jg
pop
es
rclb
push
jae
imul
push
cmpsb
add
iret
cmp
pop
pop
lds
or
xor
xchg
push
lods
aaa
pop
jo
push
add
leave
call
popa
add
insb
pop
mov
sti
sub
inc
aaa
das
xchg
xlat
sbb
mov
decl
adc
jns
mov
sti
mov
sub
cmpsl
rolb
out
sahf
movsl
pop
lret
loope
sarl
pusha
pop
or
js
into
aam
mov
stc
mov
xchg
pop
fdivrs
jbe
inc
sbb
cmc
mov
movsl
rorl
pushf
push
pop
lock
adc
cmpsl
clc
adc
add
mov
mov
pop
fdivs
sbb
out
jne
pushf
scas
adc
pop
in
sahf
adc
orl
inc
dec
fucom
rorb
stos
lret
js
in
ja
sbb
out
mov
repnz
or
adc
cmp
jge
sub
insb
pop
add
rcll
push
aam
pop
inc
hlt
not
aam
lods
pop
pusha
jecxz
xchg
pop
and
adc
lretw
aam
stos
pop
decb
iret
mov
pop
cwtl
fisubrs
mov
inc
xchg
pop
pop
cs
cli
push
testl
js
pop
arpl
icebp
sbb
clc
adc
fistl
mov
cwtl
push
out
mov
out
arpl
cmp
fstpl
testl
lcall
xchg
lock
stos
cltd
das
push
pop
or
dec
or
xchg
or
mov
sahf
fwait
adc
mov
pop
mov
add
mov
dec
cmp
std
push
or
mov
push
xor
xchg
xor
pop
jl
jo
ljmp
test
sbb
xor
xchg
arpl
jno
arpl
ret
out
aad
sub
jns
out
push
sbbb
pop
or
or
mov
lahf
cmp
test
in
cmp
sbb
inc
dec
ljmp
fcom
adcl
mov
sub
jne
jns
xor
cmc
mov
sbb
mov
pop
dec
fdivs
repz
ficomps
mov
dec
lret
mov
aad
xchg
cmp
daa
stos
mov
mov
jge
test
imul
rcrl
xchg
popl
or
test
movsb
movsb
aam
push
mov
pop
call
push
in
jge
jge
es
lods
lock
sub
mov
mov
lock
xor
icebp
jg
add
or
mov
sbb
mov
or
adc
lahf
cmpsl
stos
push
std
out
addl
jno
notb
pop
out
mov
push
xchg
jge
jbe
fdivrl
test
sbb
pop
je
adc
xchg
rcrl
lcall
jle
jl
mov
xor
push
int3
xor
sbb
subl
xchg
out
pop
push
lret
fidivrs
filds
loopne
cmp
lods
jp
or
loop
sbb
ret
mov
in
aam
int
pop
cmp
ret
ss
or
push
lahf
cltd
push
in
mov
stc
ds
adc
cmc
mov
pop
mov
lock
idivl
div
push
adc
std
xchg
ds
jl
pop
orl
cmpsl
mov
cwtl
loopne
lock
jp
call
cwtl
or
sarb
mov
xor
daa
xor
arpl
jnp
sbb
mov
xor
sbb
and
scas
test
lock
mov
std
and
push
dec
pusha
xor
fwait
mov
fidivrs
je
repnz
aam
fcomps
mov
mov
inc
jbe
xor
out
sbb
adc
mov
jmp
ljmp
mov
or
mov
pop
sub
insb
loop
push
xchg
jecxz
cmp
cmpsb
jl
xor
mov
clc
add
push
xchg
jle
add
movsl
lds
iret
xchg
out
adc
stos
and
or
mov
fldenv
je
jbe
cwtl
sbb
fimuls
repnz
lds
jb
xor
adc
adc
jg
cmp
cmp
aam
dec
inc
icebp
ds
mov
clc
dec
push
inc
jle
shrl
fisubs
dec
ja
nop
xchg
mov
xchg
popa
ret
fldl
mov
sti
fmull
cmp
xchg
mov
push
xorl
stos
mov
ret
out
popf
xor
fld
mov
aas
dec
mov
ja
mov
neg
aas
cltd
inc
jl
les
add
xchg
xlat
sbb
adc
mov
mov
inc
stc
sub
mov
pop
ret
xor
testl
pop
xchg
test
jo
negb
xchg
aad
insb
push
js
lret
out
mov
je
push
scas
pop
fs
mov
cwtl
ds
cli
inc
aad
test
sub
mov
xor
nop
xlat
inc
inc
daa
andb
adc
dec
push
jge
mov
cmp
xchg
mov
or
stc
cmp
pop
sbb
ucomiss
dec
jecxz
lea
mov
roll
cmpl
mov
arpl
outsb
insl
and
dec
je
lcall
jmp
sub
movsl
in
data16
push
push
mov
loop
rolb
mov
xchg
inc
jnp
pop
fdivrp
sub
test
ja
or
adc
pop
mov
sub
lahf
cmp
popa
cltd
ds
or
mov
jl
sbb
sti
clc
cmp
adc
jno
inc
cmpsb
xchg
xor
inc
mov
insb
pushl
and
ljmp
pop
dec
push
test
add
cmp
aas
leave
fidivs
pop
push
or
add
mov
cmp
push
cmp
sbb
test
xor
sub
jmp
sub
dec
mov
cs
aam
adc
pop
ret
stos
mov
jge
dec
or
movsl
inc
xchg
stc
dec
pop
pop
pusha
rorb
call
push
add
jl
lret
add
es
mov
jne
jmp
imul
outsb
mov
or
movsb
mov
mov
imul
rclb
testl
xor
dec
sub
xor
mov
jl
jle
imul
stos
inc
sub
xlat
int
aas
mov
cmp
fdivrp
fistps
or
jg
fdivs
push
xor
nop
jl
or
xchg
dec
lods
in
fnstsw
jmp
xchg
lcall
test
dec
cmpsb
ss
incb
push
enter
hlt
xor
pop
das
sub
fdivp
pop
mov
loop
lret
xor
dec
jmp
jbe
sbb
in
mov
cwtl
jno
test
int3
jne
outsl
int3
mov
pop
repz
sub
out
adc
xchg
pop
ja
call
xor
out
outsl
pusha
in
neg
lcall
xor
jo
repz
jecxz
pop
xlat
mov
call
mov
jb
rclb
cltd
xlat
inc
sub
sbb
mov
pop
mov
in
sub
xchg
fisttpll
fcoml
int3
push
bound
cmpsl
repz
sahf
es
and
cmp
sub
and
jb
push
jbe
cld
in
mov
mov
mov
mov
push
mov
outsb
dec
stc
repz
and
jge
add
lods
fldl
inc
jno
mov
ror
int
loop
mov
movsl
sbb
pushf
mov
cmpsb
shl
adc
fldenv
pop
mov
scas
pushf
inc
nop
mov
dec
xor
mov
push
daa
cmp
loop
sbb
cmp
clc
loope
cli
push
xor
dec
pushw
mov
scas
hlt
xor
add
es
xor
ja
stos
lock
pop
data16
dec
fcoms
inc
movsl
pop
aaa
and
popf
mov
dec
inc
xchg
sub
pusha
xchg
xchg
dec
or
in
inc
xor
ret
cli
insl
pop
je
sbb
cs
mov
and
out
faddl
add
in
lods
pop
mov
stos
ret
cmpsb
lds
jae
xchg
arpl
out
sub
cs
sbb
pop
add
out
xlat
jnp
and
cwtl
pushf
add
xchg
rcrb
mov
rcll
cmc
inc
cmp
ret
movsl
std
ja
pop
shll
and
js
in
ror
push
mov
ds
add
sub
sbb
ret
cld
imul
adc
rcll
cltd
xor
mov
dec
out
jg
sbb
and
fsubrl
call
jb
jl
int3
xchg
scas
inc
pop
pop
shll
sets
jmp
push
pop
pop
adc
inc
rorl
inc
mov
jge
arpl
movsb
arpl
xchg
push
push
nop
push
sbb
repnz
inc
mov
or
int
pop
jno
pusha
pusha
jnp
pusha
jo
xchg
popf
xchg
aaa
imul
clc
cmpsb
rorb
jl
push
out
arpl
sub
movsl
dec
in
js
or
add
xsaves
pop
sbb
sbb
sbb
and
sub
sbb
cli
mov
test
adc
dec
aas
cwtl
and
fdivp
dec
xor
lds
adc
lcall
mov
mov
xor
mov
test
push
inc
xchg
push
es
mov
lea
sbb
enter
out
mov
mov
adc
jae
cmp
xchg
cli
cs
adc
rcrl
test
aaa
lods
subb
inc
test
insl
mov
ret
sahf
and
movsb
push
vunpcklps
fwait
push
xchg
stos
push
mov
imulb
sbb
nop
jo
mov
aas
mov
fisubrl
in
pop
jne
jge
sbb
fsubl
aas
jg
andnps
out
out
test
xchg
mov
dec
mov
sti
std
pop
ret
flds
xor
pop
repnz
dec
lgs
mov
xrelease
data16
push
mov
repnz
xchg
xor
add
xchg
scas
jp
sbb
inc
xchg
adc
orb
stos
xchg
xlat
jg
sbb
pop
imul
int3
jle
insl
or
jbe
cmpsb
test
jg
stos
and
and
cmp
add
ljmp
mov
adc
push
cmp
dec
add
mov
sbb
push
leave
test
pop
fs
loop
test
insl
out
fnstsw
test
mov
aam
pop
int3
lock
xchg
in
add
push
movsb
xchg
inc
mov
mov
mov
into
push
jne
fisubrl
int3
jne
cmpsl
cs
sbb
loop
xchg
adc
outsl
sbb
leavew
push
aad
xchg
xchg
or
bound
pop
cmpsl
push
adc
and
mov
icebp
xor
ret
dec
loopne
inc
mov
adc
push
xor
and
sbb
mov
add
cmc
int
or
pusha
setne
arpl
sbb
addl
mov
sub
adc
stc
int3
mov
jg
push
and
aam
bound
outsl
mov
ljmp
mov
lret
out
rolb
or
addr16
jmp
lods
sub
xchg
pop
mov
decb
mov
sbb
stos
cli
imul
adc
ds
mov
mov
bound
and
addl
clc
nop
shl
daa
jp
out
xchg
inc
xchg
sbb
mov
dec
adc
fsubl
push
test
gs
xorl
push
das
ret
fsts
lea
push
and
push
mov
fistpl
mov
jg
fsubl
fldt
mov
mov
dec
mov
mov
jle
in
cmp
sub
pop
int3
add
nop
clts
mov
inc
push
and
mov
pop
scas
es
adc
fnstsw
jne
daa
aad
loopne
lods
push
dec
mov
lahf
iret
ss
sarl
push
mov
call
inc
push
inc
add
cmp
lods
das
cli
repnz
pandn
mov
sub
push
mov
orl
pop
cmc
pushl
xor
sub
bound
mov
insb
in
lods
scas
lds
mov
ja
stc
cld
ss
push
sti
pop
adcb
jge
jb
cltd
xlat
add
xchg
fwait
sub
repnz
in
lret
jl
fisubrl
lea
cmpsb
adc
lret
pop
adc
mov
jno
imul
ret
pop
sahf
test
pop
sub
lret
loop
mov
mov
push
pop
jbe
jae
nop
mov
enter
mov
push
mov
scas
sbb
sub
pop
xor
cs
aam
loopne
test
aad
fiadds
or
sarb
dec
dec
jne
jo
mov
push
xchg
mov
cld
mov
mov
lcall
ljmp
lds
sbb
mov
sbb
sub
lahf
int
fisttpll
leave
jbe
insb
push
mov
or
das
mov
dec
stos
cwtl
mov
mov
rcr
jbe
pusha
cmp
push
repnz
insb
ror
adc
incl
xchg
inc
std
dec
cmp
push
pop
insl
cmp
lods
fldt
test
cmp
cmp
fisubl
insb
xor
imul
popl
xlat
ds
les
mov
cmp
popf
sub
sahf
fdivrl
push
xsavec
stos
xor
shll
scas
sahf
xchg
sbb
lods
fdivrs
sbb
pop
add
add
pushf
stc
outsl
sbb
sub
je
loopne
jp
pop
fldl
xor
push
into
cmp
clc
or
push
pop
mov
pop
cli
push
subb
incl
addr16
sub
sarb
js
dec
inc
pushf
cwtl
mov
ljmp
cmpsl
outsb
xchg
xchg
xchg
inc
lds
mov
addr16
fimull
sub
out
jl
mov
ja
jmp
add
pop
movsl
sbb
repnz
filds
test
cmp
lock
jle
xchg
mov
mov
cld
mov
dec
push
iret
int
movsb
jge
jp
mov
addr16
shlb
dec
sti
cli
xchg
arpl
fwait
scas
pop
jecxz
xchg
lock
jbe
repz
popf
pop
fcmovne
mov
inc
xchg
push
ret
cmp
pop
popf
dec
dec
or
decb
jb
call
cmpsl
scas
pop
xchg
cmp
ret
mov
sub
or
leave
adc
cmp
dec
cmp
xchg
push
mov
mov
scas
push
shll
inc
data16
jne
dec
xchg
and
nop
out
xor
sbb
icebp
add
pop
adc
out
push
mov
out
std
sar
mov
sbb
push
add
jb
or
xchg
icebp
popa
and
dec
push
add
stos
jg
div
cld
aaa
into
cmpsl
fs
jl
lret
ljmp
jg
clc
adc
into
aam
xor
jl
in
pop
and
movsl
pop
aas
inc
xchg
mov
xchg
fsubl
mov
or
in
mov
xlat
push
imul
add
jl
ja
mov
outsl
adc
mov
fwait
cmpl
and
ret
je
pop
ja
daa
data16
test
sbb
test
xor
inc
jp
incb
fwait
xchg
xchg
mov
cmc
push
push
cmp
jle
cmp
in
jno,pt
xor
mov
pop
or
fisttps
imul
int3
dec
sub
shl
mov
fs
movsl
pushf
into
cmp
lret
xchg
mov
lret
sub
repz
pop
repz
nop
cmp
repnz
out
xchg
imul
lock
jmp
and
rorb
stos
fwait
sbb
bound
mov
clc
xor
in
and
jns
mov
fwait
dec
sbb
push
in
mov
and
push
in
xchg
sarl
test
daa
fcoms
in
jl
mov
ror
ffreep
ret
push
daa
aad
inc
nop
mov
orl
test
sub
jp
add
mov
mov
repz
insb
addl
lods
jmp
add
cmpsl
hlt
sbb
out
int3
add
cmp
aas
stos
adc
add
fdivrl
daa
xchg
push
push
in
inc
iret
cwtl
xor
sub
push
out
push
sbb
mov
push
pop
mov
in
fistl
addr16
je
dec
add
push
pshufw
stos
push
es
push
sub
sti
jb
sub
pop
loope
mov
dec
xor
inc
nop
shl
mov
and
mov
mov
test
cs
xchg
data16
mov
leave
repnz
push
test
lahf
in
push
aam
cwtl
mov
mov
xchg
rorl
pop
push
pop
outsl
jmp
enter
sti
cmpsl
movsl
push
add
dec
xor
mov
fbld
outsb
cli
mov
fcompl
mov
dec
rcrb
cmpsl
aaa
jns
adc
adc
mov
or
push
cmpsl
adc
popa
pop
or
sub
mov
fmull
xor
mov
pop
dec
ds
jg
push
das
rorl
leave
stos
mov
jns
cmpsb
adc
das
xchg
sub
or
mov
or
push
xchg
cwtl
scas
or
pusha
or
cmp
mov
out
pop
pushf
cmpl
sbb
xor
xor
insb
test
cld
loopne
adc
adcl
movsl
test
mov
pop
jno
sbb
xor
push
into
das
gs
iret
inc
pop
lds
xor
mov
daa
adc
lret
mov
dec
add
imul
jae
xchg
repnz
sbb
je
fsubrl
into
aaa
push
stos
xor
push
jmp
adcl
xchg
xchg
cmp
mov
add
xor
push
and
xlat
xorb
jmp
rcrl
imul
mov
repz
pop
adc
repnz
adc
movsl
pusha
rclb
pop
mov
test
lds
xorl
ret
sbb
sbb
xor
and
arpl
sbbl
push
out
jne
dec
and
jl
fisttpl
jmp
xchg
pop
mov
pmaxub
sbb
pop
push
or
daa
jecxz
jecxz
adc
idivl
push
inc
push
dec
and
aad
push
mov
dec
jae,pt
lcall
sahf
nop
jno
shrb
jae
pop
into
sahf
adc
test
repz
inc
jp
add
mov
ljmp
add
mov
lret
and
sbb
stos
enter
divb
icebp
dec
lods
mov
pushf
filds
mov
xor
fwait
adc
push
xchg
cli
hlt
out
add
shll
mov
faddl
repnz
push
leave
pop
xchg
aam
xchg
dec
bound
add
add
and
insb
lock
lea
rclb
cmp
lret
dec
add
scas
shr
xor
inc
mov
scas
sub
add
les
mov
lds
leave
or
or
sbb
inc
jecxz
jnp
push
sti
inc
fwait
mov
lock
xchg
je
repnz
and
test
adc
add
inc
pushf
out
cmp
xchg
test
inc
dec
sti
out
fwait
jp
jne
sar
mov
notl
loope
cmp
xchg
lcall
mov
cwtl
call
or
loopne
fs
cli
in
scas
adc
rcrb
sub
in
push
adc
jno
pusha
xor
mov
test
mov
and
push
imul
adc
shrl
iret
imul
outsb
jns
sti
scas
scas
cmpsb
fmull
add
outsl
loope
cmp
push
jl
jo
dec
cmp
mov
jb
push
insb
ret
popl
mov
xchg
aas
cmp
or
enter
mov
int3
hlt
fsubr
cli
adc
mov
loopne
cmc
xchg
adc
xchg
ret
xor
pop
lds
fxch
ret
jp
adc
push
fdivrs
in
cwtl
push
dec
push
push
loopne
test
repz
xchg
jecxz
sbb
jmp
popf
or
fdivs
sbb
fsubl
aas
pop
pop
and
and
out
fdivp
scas
adc
or
mov
sbbl
loope
out
mov
mov
loope,pt
stos
and
inc
cli
inc
jno
call
sub
xor
loope
int
xchg
mov
loope
js
and
mov
out
mov
inc
into
and
shll
cld
pop
sbb
sub
push
loop
mov
lods
push
mov
pop
loop
setbe
push
das
gs
mov
xchg
out
sahf
xor
or
inc
jmp
push
jnp
jl
addb
mov
or
out
push
push
add
popf
outsl
cmp
xor
je
fstpt
sbb
ret
arpl
in
dec
aas
out
cmc
jmp
or
jmp
xor
inc
inc
lret
cmp
cld
aam
inc
pushf
pand
push
add
fisttps
mov
mov
lods
mov
fsubs
sbb
divl
call
clc
ljmp
sbb
mov
in
cmp
popf
in
mov
push
loopne
movsb
lahf
dec
push
jnp
movntq
out
adcb
push
jg
add
stos
fs
test
jnp
sbb
dec
insb
xchg
sub
xor
cmpsl
jno
fldln2
enter
movsb
xor
es
fcomps
mov
mov
test
loop
mov
push
sbb
jno
sahf
pop
xchg
lcall
add
and
btr
fcomp
ds
push
addr16
test
into
mov
fnsave
mov
aaa
mov
icebp
jae
xor
push
comiss
sub
inc
inc
cmpsl
mov
sti
bound
test
add
fcomip
cli
jo
popl
fimull
insb
and
add
cltd
iret
xchg
lea
sbb
ret
mov
in
or
mov
xor
leave
mov
mov
subb
xchg
mov
jb
jmp
jno
lods
outsb
pop
cmp
dec
jmp
in
mov
mov
or
mov
int3
in
dec
scas
or
fwait
xchg
adc
add
push
hlt
inc
fbld
xchg
add
arpl
jg
inc
dec
dec
loop
inc
cli
fstpl
and
or
xlat
ret
jae
in
jae
mov
inc
shll
jno
sbb
scas
test
cmc
cmp
mov
inc
ret
sub
test
sar
mov
push
push
and
pop
adc
mov
pushl
testl
dec
out
in
adc
xor
mov
jecxz
cwtl
add
loop
adc
sbb
cltd
stos
test
jno
jg
cmc
adc
push
mov
or
movsl
pusha
addr16
fstps
loope
fxch
xor
lret
pushl
sbb
jg
shlb
sub
lods
sarl
add
out
outsl
jno
js
test
add
lods
mov
pushf
cli
lds
mov
xlat
or
mov
cmp
adc
add
pop
xor
or
dec
jno
fldt
cmp
out
scas
push
mov
aas
cld
sbb
xchg
or
and
ds
lods
jbe
xor
cmp
lds
jge
xor
cltd
pop
xlat
stos
mov
adc
dec
in
fldenv
push
or
xor
outsb
mov
xchg
es
fildl
xchg
mov
push
test
fdivrl
fildll
mov
mov
fsubr
mov
sbb
ja
jle
inc
imul
push
jnp
push
test
push
rorl
test
jmp
scas
mov
iret
mov
inc
and
ss
das
or
mov
out
nop
push
mov
imulb
out
jp
rcrl
pop
aas
mov
popf
jle
mov
jnp
jnp
lcall
pop
inc
xchg
jne
fimuls
add
adc
loopne
push
stos
icebp
stc
rclb
inc
add
cli
hlt
add
mov
lea
cs
cs
push
xor
movsb
jmp
jnp
jo
xor
add
pop
pop
push
out
sub
stc
sub
adc
stos
fs
addl
sub
in
div
xlat
outsl
xor
lds
js
xchg
enter
movsb
adc
cltd
test
fs
push
inc
lods
and
sbb
lcall
ja
addl
mov
in
icebp
cli
xchg
xor
and
adc
add
sub
xorl
cmp
lret
jno
lcall
roll
popl
sub
or
sahf
adc
adc
xlat
and
insl
push
push
pop
inc
rorb
mov
int
fwait
mov
xchg
adc
inc
andl
lock
adcb
fcomps
mov
mov
xlat
push
push
nop
pop
sbb
repnz
notb
jl
push
xchg
jg
jle
outsl
push
pusha
nop
push
ja
cmpsl
mov
adc
bound
into
mov
pop
or
or
in
cs
jne
dec
popa
or
xchg
add
sbb
mov
xor
fldcw
dec
dec
jb
adc
xchg
mov
mov
sbb
inc
sbb
in
leave
gs
shld
out
popf
stos
cli
mov
mov
push
call
test
mov
sub
scas
outsb
add
sbb
enter
movsl
dec
pop
nop
cltd
sub
out
and
lret
and
adc
repz
es
test
mov
add
aam
adc
ret
push
push
gs
arpl
repz
dec
aas
je
aaa
pop
xchg
add
push
jecxz
cltd
cmp
scas
test
and
jg
cmp
imul
dec
test
fidivrl
mov
lret
and
in
movsb
xchg
cltd
push
push
lock
cmp
pop
pop
xor
and
xchg
insb
jnp
jg
push
andb
push
inc
insl
cwtl
mov
pop
call
cs
mov
in
inc
pop
in
cltd
or
out
jle
add
mov
mov
dec
xor
ficomps
leave
inc
or
cmc
stc
lahf
fisttps
xchg
adc
loope
lahf
pop
xor
jo
mov
push
sbb
sbb
adc
test
mov
cmpsb
je
iret
or
aam
setp
dec
jecxz
push
cmp
jne
sahf
mov
lock
aam
ret
mov
fidivrl
fimuls
or
mov
in
xorl
cs
xor
in
scas
psubusb
inc
fs
lds
rol
in
insl
cwtl
in
hlt
xor
or
mov
and
mov
or
pop
sbbl
or
repz
js
push
mov
jbe
inc
and
lea
insl
add
pop
aad
test
jg
mov
add
out
push
and
and
in
das
ljmp
push
jg
pop
ljmp
dec
xchg
jno
push
pop
icebp
cmp
xchg
lahf
jge
and
pop
movsl
jge
pop
mov
mov
stos
arpl
jle
mov
push
inc
xchg
xchg
dec
jnp
or
jge
aad
xor
mov
cmp
cmp
popa
sarl
xorl
xchg
inc
or
jb
aam
idivl
sub
int
sub
push
in
outsb
div
ret
jg
jno
pop
test
xchg
xor
call
icebp
gs
lea
xchg
mov
mov
push
lods
cmpsb
cmp
popa
aaa
jo
mov
insl
push
loop
repnz
cld
dec
xor
cmp
sbb
movsl
xor
and
cli
call
ja
jl
and
fsub
inc
out
ja
and
dec
jb
iret
adc
call
cmp
mov
ret
sbb
mov
mov
jl
sub
lods
js
dec
push
lret
and
sbb
jg
dec
push
jge
stos
fisubs
adc
push
rorl
sbb
nop
lret
xor
repz
icebp
fiaddl
cmc
insb
mov
fsubrl
ljmp
pusha
mov
je
push
verr
lock
jecxz
test
int
addr16
jecxz
repz
and
arpl
pop
mov
or
mov
jbe
and
mov
mov
shll
xorb
fcmovnu
icebp
cld
sbb
clc
lea
sahf
inc
jb,pt
incl
cltd
mov
xchg
ficomps
jno
fwait
add
aas
loope
pop
dec
jmp
mov
adc
stos
push
xchg
push
cmp
pminsw
sbb
outsl
popf
push
mov
push
repnz
cmp
mov
outsb
fcomi
or
push
jp
mov
inc
leave
dec
cli
ret
sub
cmp
bound
test
jne
mov
lret
mov
mov
inc
jl
loop
add
ss
pop
or
or
nopl
movsl
jg
gs
sbb
jns
add
fsubp
push
sub
push
xchg
fldt
push
mov
xchg
jmp
js
mov
outsl
mov
mov
mov
faddl
aas
jbe
push
mov
mov
dec
pop
lahf
or
pop
jecxz
push
and
adc
or
pop
mov
push
cmp
test
ljmp
ds
or
enter
ss
decl
mov
mov
and
scas
scas
jno
cltd
add
jae
fsubrl
pop
fistpll
test
std
imul
dec
cli
adc
loopne
add
push
push
inc
mov
push
fcomp
scas
out
or
stos
mov
mov
ds
iret
jge
dec
jno
setge
sbb
jmp
xchg
pop
jp
es
lcall
sub
xchg
stc
popa
cmpsb
lock
xchg
mov
cmp
cmc
lds
xchg
adc
adc
jecxz
fsub
xchg
adcl
xlat
push
or
cmp
jo
xchg
es
dec
nop
int
push
jecxz
xor
inc
lock
push
inc
cltd
adcl
jo
sub
test
std
or
lds
popf
mov
jo
insb
push
aad
pop
sub
sub
inc
cmp
jne
mov
mov
xor
gs
push
xchg
div
push
and
pushf
shll
ds
sub
repnz
sbb
mov
cwtl
pop
imul
rolb
bound
or
jne
outsl
nop
jmp
bound
adc
cltd
add
ljmp
neg
mov
adc
sub
mov
clc
pop
xorb
test
or
cmpxchg
inc
loop
and
imul
cmpsb
out
jnp
js
in
pop
ret
pop
subl
int
adc
and
inc
xchg
inc
xor
cmp
jge
mov
add
cltd
cli
outsl
iret
sub
pushl
mov
out
mov
lret
out
sbb
cltd
arpl
lock
xchg
aas
cmpsl
enter
adc
enter
xchg
ret
insb
sub
ss
in
cmp
pop
jbe
pop
cli
je
jo
shrb
inc
ret
adc
push
jns
jmp
in
loopne
mov
fstps
les
push
push
or
sub
lcall
icebp
xchg
lds
fs
icebp
popa
rdpmc
aaa
adc
jmp
inc
adc
into
dec
out
lods
popa
popa
mov
fistpll
inc
test
enter
rcrl
jne
cli
pop
sbb
push
lods
dec
mov
jl
aad
xor
pop
inc
lods
jmp
lods
fistps
push
insl
adc
push
xchg
push
rclb
cmp
push
mov
test
add
dec
sub
aaa
js
cmpsb
xor
call
cs
jmp
and
iret
and
xchg
jecxz
add
add
cmc
and
mov
sub
mov
pop
bound
fstpt
addr16
out
jnp
stos
dec
pop
or
jecxz
jle
sbb
cmp
mov
es
dec
mov
mov
out
ja
mov
iret
dec
ret
mov
jbe
cs
push
pop
nop
test
and
jl
xor
or
lds
xchg
test
push
dec
cli
lcall
ljmp
mov
jp
lret
call
jnp
dec
pop
fistpll
adc
in
jg
xchg
imul
lret
loopne
test
pop
loope
sub
add
lahf
mov
adc
mov
jge
shr
xchg
cltd
sti
adc
adc
imul
pop
xchg
push
jl
adcb
xor
je
sub
adc
xor
add
mov
cmp
ds
repz
or
out
mov
outsl
mov
jno
pushf
sub
incl
lcall
stos
imul
cmp
push
pop
pop
adc
call
sub
inc
sub
mov
add
ror
xor
mov
popf
mov
mov
outsl
sub
mov
lock
push
cmp
bound
lahf
test
int3
movsb
cmp
sbb
sub
decl
jae
bound
jns
add
cmp
jg
clc
mov
adcl
pushf
inc
mov
rcll
cmpsl
push
mov
mov
shr
mov
into
dec
test
sub
xor
sub
leave
popf
sub
jbe
fadd
dec
popf
subb
inc
jg,pn
xor
lock
hlt
mov
outsl
lret
test
mov
push
int
stos
movb
jne
aas
mov
icebp
push
or
cli
cmp
int3
clc
dec
sti
in
lods
dec
fidivs
jecxz
repz
xchg
stc
xchg
mov
sub
sub
mov
ja
call
out
in
push
lods
sub
seto
negl
pushf
sbb
iret
pop
adc
ret
into
arpl
dec
dec
jb
pop
out
es
movsl
cmc
mov
enter
scas
scas
sub
pop
jne
pop
adc
lret
inc
pop
dec
fs
mov
fstps
outsl
shll
mov
jg
or
sbb
sahf
jnp
and
out
stc
jl
pop
mov
fnstcw
aaa
fcom
xchg
shr
add
sub
loop
cli
push
jp
jp
dec
cmp
adc
and
mov
les
outsl
mov
jbe
gs
test
adcb
or
in
push
pop
loopne
outsb
enter
push
loope
lea
mov
xchg
mov
leave
jmp
call
orl
cmpl
or
pop
sbb
in
ss
mov
repnz
lret
out
sbb
bound
pop
mov
jns
ds
xchg
dec
rcrb
inc
adc
jns
and
popa
rcl
jl
mov
pop
sbb
or
sti
or
add
loope
test
sub
or
sbb
fidivrs
jb
loope
mov
mov
and
dec
divl
fildl
xor
cmpsl
mov
and
fisttps
fs
push
call
cwtl
fwait
jl
pop
lret
gs
xchg
pop
out
push
lahf
jae
and
cmp
xor
or
cltd
inc
repz
popf
jmp
rol
add
int3
int
add
push
fldenv
das
imul
aad
and
subb
je
or
pop
dec
outsb
out
pop
xchg
lsl
int
gs
divl
cld
adc
loope
dec
xor
loop
ljmp
pop
cwtl
push
nop
mov
je
and
cli
sub
sahf
sbb
ret
aas
xor
mov
pusha
and
cltd
sbb
jmp
pop
loop
mov
dec
push
stos
mov
dec
add
or
or
inc
loope
mov
mov
ljmp
push
xchg
inc
sarb
adc
movsl
dec
fdivl
dec
mov
test
in
es
lea
stos
frstor
stos
mov
movsl
mov
sbb
mov
je
jnp
inc
into
pop
xor
dec
sti
fistps
dec
inc
xchg
add
mov
jle
lret
fstpt
inc
inc
adc
pop
in
bound
popa
or
lods
pushf
and
sbb
mov
mov
cmp
in
fistps
daa
mov
popa
cmp
cmc
push
pop
ret
sub
cmp
sub
mov
je
enter
fs
movsb
fistpll
pop
cwtl
push
int
xchg
jp
ret
nop
mov
dec
iret
jg,pn
add
jbe
push
fdivrl
mov
faddl
out
into
cmpsl
ds
fsts
arpl
jno
sub
cwtl
lods
jge
sti
pusha
inc
push
cltd
push
xchg
dec
cwtl
sahf
jno
mov
repz
orl
jmp
sub
rolb
xlat
mov
cmp
cmp
in
adc
jo
push
xchg
cli
aaa
arpl
cltd
mov
jge
sbb
mov
pop
push
jmp
dec
adc
add
adc
mov
cwtl
lcall
mov
sub
adc
sbb
mov
lods
data16
xchg
xor
inc
xchg
adc
push
imul
dec
iret
pop
lahf
cmp
out
jle
xor
inc
dec
cmp
scas
pushf
fnstsw
mov
repz
fwait
mov
incl
dec
xlat
call
dec
or
xchg
fisubrs
cmp
out
xchg
jo
push
stc
mov
test
mov
out
jge
cmp
data16
rcr
test
pop
pushf
add
inc
adc
lret
and
pop
mov
aam
sub
int3
inc
mov
stos
cs
stos
adc
adc
hlt
out
jp
pop
into
inc
push
and
aad
push
repz
shrl
xchg
jecxz
mov
xchg
imul
mov
jp
pop
sbb
add
test
mov
hlt
sbb
cmpsb
jge
xchg
ja
aas
sbb
jmp
out
lock
gs
xchg
std
jae
dec
outsb
int
ret
aad
xchg
push
popf
jae
dec
lea
xor
pop
fldenv
xlat
jmp
mov
jecxz
cltd
mov
add
fwait
cmc
fs
jbe
mov
or
dec
es
xchg
jle
lcall
push
lock
jo
sbb
ds
loope
cli
pop
mov
push
mov
inc
dec
pop
dec
add
push
lahf
sarb
add
stc
imul
movsl
lods
mov
in
fld
in
popl
scas
inc
js
imulb
test
popf
outsl
pushl
ja
lock
mov
sbb
and
cld
or
rcrl
cwtl
pop
xchg
jl
scas
orb
jmp
cltd
inc
insb
xchg
out
jle
popa
cmp
mov
out
frstor
sub
call
inc
xchg
adc
jmp
jb
cs
shlb
add
jg
popf
or
mov
pop
gs
add
popf
mov
mov
movl
push
push
in
not
adc
jge
scas
xor
mov
fdivl
es
pop
out
outsl
mov
jg
push
push
xor
jle
test
scas
fnstcw
mov
lock
int
xlat
xchg
adc
ret
jg
aaa
and
adc
mov
inc
mov
into
icebp
cmp
pop
fisubrs
dec
hlt
jo
clc
loop
call
cld
inc
jns
repz
jns
ds
fsubrs
roll
mov
adc
or
in
dec
movsl
out
jbe
pop
imul
adc
insl
cltd
mov
inc
rcll
dec
and
nop
outsl
push
in
js
aas
insb
dec
push
and
jmp
push
fs
lret
cmp
daa
cmpsb
fwait
sarl
and
xchg
mov
into
mov
enter
faddl
mov
sub
push
sti
pop
icebp
and
test
lds
jl
jp
je
andl
out
scas
cli
xor
out
test
add
scas
pushf
ss
leave
xchg
in
iret
daa
and
scas
rcr
mov
push
jno
dec
std
xchg
pop
test
jb
xchg
daa
mov
shlb
pop
xchg
sti
lahf
and
jno
lock
jae
pusha
inc
stos
shl
cmp
popa
xor
add
cmpb
fdivrs
mov
inc
jb
lock
mov
enter
push
add
ss
cmp
test
fucom
cmpsb
lds
adc
das
mov
lds
imulb
icebp
and
cltd
xchg
repz
repnz
sbb
lret
cmp
dec
cmpsb
push
sbb
cltd
das
push
loope
xor
or
ret
push
jne
ds
pusha
add
mov
xchg
insl
mov
sub
cmp
sbb
mov
jns
outsb
mov
pop
inc
bound
mov
push
iret
repz
push
loopne
jle
fcmovnu
mov
mov
sahf
cld
shrl
shll
ret
or
shrl
cs
inc
push
xchg
push
out
pop
jbe
mov
fmul
int3
dec
shl
stc
ret
test
push
adc
xchg
fwait
dec
sub
mov
mov
mov
rorl
adc
mov
xor
je
fsubs
push
mov
pop
aaa
push
pop
out
xchg
dec
xor
dec
or
pop
fldt
sub
aas
inc
mov
rcl
in
push
add
sub
pushf
sbb
addr16
adc
jp
push
movsl
stos
lret
push
xchg
sub
fsubrs
lahf
xchg
das
repnz
xchg
or
cmp
push
push
xchg
repz
enter
sbb
aam
mov
vmovupd
data16
mov
leave
int3
and
fdivs
inc
popf
movsl
inc
js
cs
mov
out
and
and
js
mov
clc
xchg
cmpsb
dec
fwait
lea
pop
push
lds
xchg
sbbl
cwtl
imulb
or
in
dec
outsl
add
movsb
mov
iret
adc
mov
ja
aaa
jnp
sub
add
cmc
dec
sbb
add
or
cmp
xor
aad
mov
adc
shrl
dec
pop
inc
inc
mov
jno
pop
cld
pop
sub
daa
and
iret
gs
sub
loopne
push
fld
leave
push
mov
xchg
into
xchg
in
scas
lock
dec
mov
scas
lcall
out
cs
mov
mov
jmp
les
rol
addr16
mov
pop
imulb
sub
repnz
cltd
and
outsb
xor
sti
cmc
outsl
jmp
fdivr
dec
inc
movsl
mov
movsl
ljmp
inc
in
stos
lret
jl
add
inc
addr16
ror
mov
and
pushf
shlb
call
push
cmp
add
and
xor
dec
adcl
les
movb
adc
inc
scas
adc
pop
mov
cld
fs
iret
ds
push
inc
pusha
in
mov
into
xchg
jp
sbb
ja
jns
hlt
out
out
cmpsl
icebp
pop
mov
mov
jl
inc
adcl
pusha
insl
es
movsb
pop
jmp
sub
xor
pop
out
mov
xor
movsl
ds
and
leave
add
xchg
mov
cli
xorl
adc
popf
xchg
jne
leavew
inc
sbb
or
aam
inc
std
aaa
dec
jbe
in
lods
or
mov
aaa
push
pushf
pop
addr16
je
lahf
adc
cli
int
xor
sub
repnz
int3
dec
xchg
test
push
inc
xchg
sbb
repnz
mov
jae
push
das
xchg
mov
jecxz
out
xchg
testb
jno
out
push
imul
inc
jmp
cmp
testl
dec
push
and
and
mov
fldenv
push
push
in
pop
push
jle
shrb
leave
leave
push
xor
int
cmp
add
frstor
ds
fnstenv
test
repnz
insb
pop
xchg
or
pushf
xchg
insl
pop
cli
push
sub
int
mov
mov
in
popf
dec
dec
leave
scas
in
fistpl
add
fwait
lock
mov
xor
sti
and
mov
fincstp
addb
xchg
mov
mov
loop
inc
in
sub
addr16
repz
aaa
adc
jmp
sub
int
stc
fs
jp
rorb
xor
clc
pusha
push
fisubrl
out
mov
stos
in
xlat
cmp
js
jmp
dec
jle
adc
das
pop
testb
mull
mov
clc
xchg
sti
push
lcall
negl
pop
pop
mov
repnz
cmp
dec
inc
pop
push
jmp
dec
pop
mov
xchg
inc
addr16
cld
sbb
jmp
in
and
dec
xorl
dec
sbb
lds
popa
and
mov
icebp
xor
ret
fwait
mov
call
mov
inc
push
inc
xchg
mov
push
push
cmpsb
movsl
fsubr
xchg
into
inc
pop
out
dec
dec
pop
popf
ffreep
mov
cmp
stos
fcoml
arpl
jo
scas
insb
cmpsl
lret
aam
cmpsb
repz
rorb
mull
addr16
jle
pcmpgtw
aas
jno
mov
insl
jne
cmp
int3
lea
mov
pop
fwait
or
push
ljmp
adc
std
xchg
jbe
mov
dec
adc
mov
sbb
stc
imul
adc
pop
sbb
inc
mov
cmp
rcrl
mov
push
aaa
int3
or
lahf
xchg
stos
ljmp
popa
push
movsl
pop
mov
ficoml
jno
out
push
cmc
fistpll
adc
je
hlt
je
push
mov
jge
push
pop
xchg
mov
les
movsb
cmp
lods
sub
xchg
loope,pt
insl
xchg
in
or
mov
outsb
fs
jo
push
add
mov
inc
jb
lods
or
jnp
int
shrb
leave
sbb
arpl
stc
mov
rcl
nop
inc
dec
lcall
push
mull
rcrl
push
and
xchg
test
ret
and
push
out
mov
cs
mov
pop
push
pop
inc
jp
mov
cmp
sahf
jle
cmp
decb
mov
adc
fcmovbe
push
aad
and
shl
add
inc
lret
mov
or
xchg
push
jmp
and
and
sub
xor
mov
mov
or
out
bound
mov
push
inc
test
pop
sbb
jnp
lret
in
pop
mov
pop
add
jns
cld
add
movsl
js
test
lahf
jecxz
cwtl
cli
inc
test
in
pop
jne
repnz
and
stos
push
out
fwait
out
out
mov
loop
dec
out
pop
inc
lock
adc
out
sarb
into
mov
add
fwait
sub
outsb
add
and
test
dec
rcl
out
in
push
pop
or
lea
inc
cmpl
dec
xchg
add
mov
insb
inc
movl
adc
ljmp
hlt
jmp
outsl
aas
push
hlt
into
movsb
loope
jle
iret
sub
xor
movsb
sahf
mov
rcrb
les
add
xor
clc
push
push
and
jne
bound
pop
push
nop
hlt
jbe
ljmp
push
outsl
mov
dec
in
mov
push
inc
insl
cmp
xor
xchg
xor
sub
xchg
cmp
movsl
lahf
into
and
lock
call
adc
cs
mov
in
out
js
mov
xchg
fistps
bound
rcrb
sub
popa
inc
stos
xor
fsubl
push
cltd
xor
push
call
int
out
adc
mov
or
push
pop
loop
push
shlb
idivb
inc
mov
mov
ficoml
push
mov
inc
loopne
repz
push
aad
cmp
or
mov
fs
outsb
insb
shl
mov
ja
pop
sub
popa
mov
test
popf
mov
std
inc
stos
arpl
lret
jo
cs
dec
stc
mov
cmpsb
loop
sub
sub
pop
mov
adc
cmp
fwait
loopne
inc
pop
and
add
jmp
pushf
push
sub
out
in
stc
jo
nop
sub
mov
out
mov
inc
repnz
aas
loop
pop
sbb
iret
xor
push
movsb
pop
dec
in
xchg
std
in
cwtl
aam
movsl
or
and
cli
cld
fcmovbe
push
hlt
movsb
xor
mov
pop
push
add
or
lods
mov
ret
in
clc
rcl
setg
pushf
cmpsb
jmp
push
imul
mov
imul
adc
sbb
push
sub
mov
sbb
or
jge
call
lcall
xchg
cmp
stc
cmp
je
dec
mov
push
sbb
mov
xchg
xlat
cli
add
loop
icebp
xchg
push
ror
xchg
xor
push
je
sahf
or
lods
cwtl
in
cmp
fdivl
jmp
jbe
pop
shll
cmpsl
inc
push
sahf
push
popf
jae
sub
hlt
add
sbb
push
loope
inc
jns
repnz
aas
push
jl
jnp
jne
out
inc
pop
out
in
mov
cmpsl
mov
leave
hlt
out
mov
mov
out
add
and
mov
adc
lods
sub
pop
push
jl
mov
int
mov
cli
call
sar
jo
sub
iret
inc
gs
insl
ja
or
cli
scas
outsb
adc
ficomps
filds
xor
jecxz
scas
adc
dec
repnz
mov
enter
mov
xchg
mov
cmpsl
stos
inc
sbb
push
outsl
push
pop
aad
mov
daa
popf
add
mov
push
cmpsb
mov
cmp
lea
mov
push
daa
test
mov
popf
mov
add
mov
int3
out
das
into
mov
decb
lahf
cmp
sbb
int3
mov
mov
pop
mov
arpl
mov
mov
push
mov
dec
cmp
mov
add
in
out
adc
call
dec
je
popa
xor
pop
inc
repz
imul
mov
fdivl
clc
and
and
dec
cmp
loopne
push
dec
adc
leave
rorl
sti
and
push
sbb
insl
push
mov
fcoml
sbb
push
mov
popl
mov
mov
insl
dec
xchg
sbb
stos
aad
jnp
push
xorl
push
in
add
lea
stc
adc
lock
pusha
es
cmp
cmp
cmc
add
adc
out
push
mov
sbb
jb
mov
stc
cltd
jl
test
and
xchg
cli
add
test
mov
fucom
lods
cltd
std
push
repnz
and
int
cmpsb
sbb
das
jno
dec
sub
xchg
jge
or
test
xchg
nop
mov
and
mov
and
or
inc
push
insl
popf
mov
popf
pop
pop
pushf
or
fwait
psubw
push
sub
inc
dec
push
adc
push
mov
pop
jbe
lahf
xchg
mov
and
je
dec
div
std
ret
adc
fincstp
shl
jmp
cld
adc
jle
gs
sub
rol
in
or
std
inc
mov
xor
andb
and
sahf
mov
std
xlat
adc
fldenv
popf
cmpsl
ljmp
pop
or
sub
mov
adc
or
ljmp
push
js
xchg
xchg
xabort
sbb
pop
jae,pt
imul
scas
and
cltd
dec
je
adc
lods
mov
lret
sbb
pop
aas
sarl
adc
jg
fldlg2
adc
push
rcr
jns
mov
jecxz
sahf
cld
std
movsb
mov
aas
or
push
cmpsl
jg
and
xchg
shll
sub
lret
or
adc
daa
clc
sub
cmpsb
sbb
cmp
mov
sbb
mov
bnd
jmp
hlt
cmp
jo
sbb
es
fsubl
xchg
clc
jnp,pt
mov
int3
ret
out
and
inc
mov
cmp
sahf
outsl
in
cmp
and
insb
cltd
outsb
iret
loop
hlt
test
das
imul
mov
scas
nop
jb
std
sub
push
dec
pause
daa
mov
push
and
cmp
pusha
cmp
push
jns
pop
mov
pop
out
sub
jge
lods
mov
jo
leave
cwtl
aas
loop
mov
out
hlt
repz
int
jne
pop
rorb
cmp
adc
adc
mov
lock
repnz
icebp
sbb
js
adc
lock
ljmp
mov
dec
pushf
mov
stos
cmpb
sbb
punpckhwd
lret
dec
popa
hlt
lods
dec
mov
in
rolb
mov
cli
leave
outsl
mov
add
mov
pop
push
loopne
sbb
add
lea
mov
pusha
jns
push
sbb
jo
jp
addl
cmpsl
xor
or
enter
fstpt
pop
inc
jge
addr16
xchg
cltd
jmp
rcl
jmp
mov
pop
fwait
sub
stos
jl
mov
jg
sti
outsl
bound
mov
scas
jne
xchg
vandps
das
add
add
mov
cmp
daa
sbb
push
mov
es
jbe
push
mov
iret
xchg
insl
ja,pt
jg
jbe
loopne
cli
fsubs
mov
gs
pop
sbbl
xchg
sub
scas
jecxz
stc
push
les
decb
fisubl
je
and
outsb
fsubrs
loop
sbb
mov
lret
mov
pushf
shll
fsubl
xchg
push
ret
adc
sub
cmp
movsl
mov
ja
inc
fnstcw
sub
sub
adc
loop
fldpi
fwait
sub
jnp
stos
add
sahf
mov
push
or
cmp
pop
inc
jne
add
popa
push
jg
fistps
cmp
mov
pushf
movsl
xorb
xchg
das
aad
addr16
mov
movsl
sbb
lods
push
dec
jge
cmpsl
mov
and
out
stos
and
lods
out
stc
mov
inc
and
and
rorb
rorl
push
rcr
jmp
jae
out
sti
and
in
pop
into
jg
sbb
mov
shlb
rcrb
adc
dec
cmp
pop
lock
push
fstps
xchg
or
es
jbe
sub
dec
sbb
mov
adcb
outsl
cmp
mov
movsb
cmp
mov
into
jg
nop
or
or
cmpsl
pop
out
push
or
inc
mov
jb
add
cmpl
mov
add
and
aam
pop
iret
data16
mov
and
dec
int
jnp
in
sbb
sbb
in
js
fnstenv
dec
loopne
ret
imulb
fsubrs
add
fs
pop
push
xor
rcll
fsub
mov
xchg
push
outsl
es
ret
je
push
xchg
cmpb
adc
leave
jno
push
adc
std
or
lods
or
cmpsb
add
clc
fs
and
jne
cmp
nop
mov
push
pop
or
push
loop
pop
cmp
cltd
sti
dec
in
iret
dec
lock
mov
sub
jl
mov
or
xchg
in
push
lods
pop
icebp
ja
scas
xchg
push
cmpsl
movsb
outsl
dec
mov
ret
movsb
xchg
out
cmp
pop
mov
mov
arpl
push
sbb
movsb
push
xchg
in
sbb
push
and
xor
and
push
clc
out
fcomip
adc
insl
lret
jl
into
pop
repnz
gs
mov
loope
pop
loop
addr16
adc
ror
lock
fdivl
subb
cld
dec
mov
in
sub
imul
dec
cli
std
fstp
pop
repz
sarl
movsb
push
sbb
cmp
stc
xor
ficoms
and
lods
fidivs
xor
fmuls
imul
unpcklps
push
inc
icebp
lock
ljmp
sub
insb
stos
ss
dec
in
ja
js
jbe
clc
ss
dec
push
dec
imul
fsubs
jo
lea
push
pop
iret
mov
andb
jno
in
sub
xor
xchg
pop
lods
or
lcall
dec
pusha
xchg
fwait
movsb
sbb
gs
jl
ret
xchg
adc
jg
ret
ss
repz
fsubrl
push
pop
into
mov
inc
aad
mov
pusha
lock
sbb
mov
bound
pop
xchg
sub
pop
jae
jmp
jbe
mov
hlt
imul
pop
jns
scas
push
shl
inc
mov
pop
popa
adc
dec
ret
ss
jle
mov
fwait
ss
push
push
in
lods
je
popf
rol
inc
inc
mov
push
divb
inc
mov
jge
pusha
mov
lods
xchg
out
pop
and
loopne
mov
mov
mov
jmp
sbb
jp
aas
mov
pop
stos
sbb
pop
js
loop
nop
scas
repz
std
imul
out
sub
xchg
mov
mov
lock
sub
sub
and
or
sub
fsts
lahf
push
sub
ss
call
scas
nop
fsubrs
fcoml
out
dec
ja
sbb
xchg
inc
mov
mov
sub
sub
cli
mov
repnz
jmp
add
adc
push
dec
jecxz
sub
xchg
pop
sarl
rorl
cmp
adc
icebp
subb
shrb
cwtl
or
xchg
pop
daa
ret
cmp
cmp
ds
loop
sarl
dec
mov
repnz
or
add
mov
stos
ret
loopne
shl
decl
das
hlt
lcall
or
outsl
sbb
lret
lods
outsl
sahf
and
fsubp
adc
fld
loop
les
mov
pop
adc
je
lock
push
std
jns
mov
jbe
pop
push
call
xchg
push
movsb
adc
jge
or
imul
fisubrl
inc
das
jns
dec
ds
daa
outsl
add
xor
xchg
test
xlat
dec
mov
pop
inc
xor
dec
loopne
outsl
daa
jg
jno
push
push
outsl
ffreep
adcl
rclb
les
fcomi
jbe,pn
lea
scas
pop
cmpsl
push
icebp
cmc
sbb
sub
sbb
push
push
or
sti
inc
ljmp
pop
xor
mov
mov
fwait
xchg
mov
sub
je
sub
fbstp
mov
mov
fdivl
insb
mov
adc
cmc
icebp
mov
test
out
add
mov
xchg
xor
xchg
mov
push
jnp
xor
and
adc
push
xor
pop
dec
dec
je
testl
sbb
and
std
in
sti
lods
xchg
bound
xchg
mov
mov
or
mov
decb
dec
stc
or
in
fwait
enter
aaa
and
sbb
jg
repz
orl
xchg
dec
ja
cmp
jecxz
adc
xchg
cld
fistps
pop
mov
jmp
stos
inc
lods
xchg
out
int
shld
cmp
jge
dec
sti
ds
cmpsl
jg
mov
sub
dec
mov
in
push
call
ljmp
jmp
sub
adc
pop
out
stos
leave
mov
xorl
lods
jne
xor
mov
repz
mov
xchg
ret
ss
and
mov
std
hlt
cs
test
loope
mov
jmp
in
cmp
or
dec
sbb
xchg
jae
lods
out
hlt
cmp
cmp
push
or
into
push
mov
rol
mov
pop
pop
sub
mov
lock
leave
pop
icebp
popf
shll
sbb
xchg
sbb
jge
push
push
andb
inc
mov
fwait
hlt
lock
dec
mov
xchg
mov
adc
gs
mov
test
inc
xchg
add
xor
add
imul
std
xchg
fcmovnbe
xchg
add
mov
sar
icebp
cltd
and
jae
sub
push
sub
addr16
call
sub
jb
notl
and
pop
out
das
test
out
adc
pop
push
jnp
push
dec
ret
add
hlt
mov
sbb
xchg
data16
enter
daa
outsl
dec
imulb
test
jl
mov
hlt
outsb
lret
or
and
test
out
sti
gs
std
aad
aaa
repz
pop
imul
push
jno
loop
add
mov
push
mov
inc
das
push
int3
cmc
mov
mov
pop
mov
cld
in
xchg
and
push
mov
das
cmpsb
dec
xchg
je
lahf
setnp
andb
lock
int
jo
and
add
roll
cli
xchg
mov
or
mov
js
repz
movsl
shll
pop
es
dec
call
cld
stos
iret
test
sub
sbb
hlt
add
push
rolb
jecxz
xlat
sbb
leave
add
cmc
pop
and
pop
lahf
cmpsl
dec
testb
fnstcw
jecxz
mov
mov
out
xor
rorb
add
xchg
cmpsb
mov
out
mov
mov
icebp
mov
cld
sub
cmp
sbb
add
mov
scas
aas
pop
fwait
inc
mov
in
adc
cmc
or
outsl
push
jecxz
mov
xchg
ret
or
in
decl
mov
cmp
nop
icebp
roll
repnz
and
lret
movsl
inc
out
pop
xchg
inc
mov
jae
push
in
pop
decb
jns
iret
jecxz
dec
sahf
addl
push
dec
or
pextrw
pop
jle
fidivl
add
aaa
lcall
out
in
outsb
leave
cmc
mov
test
sbb
jmp
repz
and
mov
mov
xor
cmp
mov
jmp
push
push
dec
pop
jo
mov
movb
int
ret
xchg
pause
aad
jle
out
cmpsb
inc
sub
mov
jge
push
xor
push
xchg
mov
jae
stc
sbb
adc
mov
sti
stos
dec
popf
jno
cmc
jg
lcall
mov
pop
aam
iret
inc
adc
lcall
xlat
test
lret
push
jle
mov
outsl
mov
inc
dec
and
add
sti
pop
andl
fdivrs
fcompl
in
js
mov
inc
xor
xchg
es
xchg
push
pop
sub
ret
pop
int
mov
mov
das
in
shl
fucomip
mov
inc
jl
dec
push
sbb
jmp
aaa
mov
mov
fadds
add
pop
jge
mov
jo
mov
mov
sub
rcll
pushf
cltd
call
push
rcrb
pop
shlb
pop
les
subl
jle
cmp
cmpsb
pop
dec
cmp
fmul
add
icebp
movl
clc
pop
rcll
bound
int
lods
xor
cmpsb
movsl
es
stc
out
sbb
pop
jl
mov
sti
mov
add
decl
mov
shl
xor
and
shll
idivb
mov
pop
js
cmp
xor
push
xchg
loop
incb
jb
pop
dec
cs
adcl
jge
dec
or
mov
pushf
and
adc
mov
insb
mov
cmpsl
cmp
std
js
out
mov
or
cmpsb
sbb
sbb
mov
filds
es
popl
scas
pop
in
xchg
push
add
popf
push
ja
push
inc
leave
jg
mov
mov
decb
and
mov
dec
mov
repz
sub
and
fs
push
pop
xchg
cwtl
enter
mov
ror
loopne
inc
push
sub
arpl
mov
xor
test
dec
mov
xor
jp
mov
into
lods
popf
fnstenv
sbb
mov
adc
sub
jo
xchg
mov
cmp
sbb
jb
mov
pop
lods
fwait
pop
enter
mov
dec
push
cmp
gs
pop
mov
cld
push
shll
cmc
jl
test
icebp
pusha
add
mov
pop
cmp
mov
push
aaa
jo
cld
pop
loopne,pn
sti
cmp
inc
and
out
nop
xchg
jno
add
dec
data16
test
lahf
cmp
pushf
roll
sub
outsb
cwtl
and
mov
sub
and
pop
jbe
scas
lea
stos
dec
fbstp
ljmp
mov
fildl
pushf
xor
mov
inc
xchg
icebp
cltd
repz
loopne
mov
and
iret
shrb
push
shr
push
out
add
scas
mov
pop
jmp
lds
loope
xlat
call
jns
push
push
pop
pop
js
loope
dec
xlat
in
negb
insl
divl
faddl
and
pop
roll
jnp
mov
jbe
dec
dec
dec
cmpl
jmp
fidivs
push
stos
sbb
add
push
xor
outsl
repz
mov
push
mov
inc
cmc
sbb
jbe
sbb
stos
or
jecxz
lcall
inc
pop
xor
call
into
arpl
sbb
dec
cmp
inc
pop
scas
sarb
dec
adc
cmp
jg
sub
add
mov
push
pop
mov
ss
jmp
cmp
jg
inc
mov
sub
int3
jmp
leave
dec
mov
xchg
out
xchg
and
sub
das
xchg
fs
fldl
cld
hlt
lret
nop
pusha
repz
lds
stc
daa
pop
mov
xor
or
dec
cmp
or
pop
jmp
pop
jno
in
addb
mov
lds
mov
or
xchg
lahf
xchg
lahf
jl
sbb
jno
mov
pop
or
xchg
stc
daa
mov
push
xlat
jecxz
sti
mov
xchg
je
or
enter
mov
cmp
dec
and
jo
mov
inc
jmp
icebp
jo
push
jl
insl
xor
cmp
bound
cltd
notl
mov
cmpsb
jp
cmpsl
out
inc
push
js
sub
out
cmp
pop
jne
mov
rcrl
inc
imul
les
or
add
adc
test
or
lock
ret
jnp
call
int3
andl
rolb
add
mov
pop
xor
lds
and
mov
pop
cmp
clc
dec
adc
lret
lahf
dec
dec
xchg
sbb
add
pop
mov
jmp
pop
adc
das
adc
mov
icebp
jnp
mov
insb
es
call
adc
dec
xchg
add
cmp
sub
aaa
mov
ret
cli
sub
mov
test
in
out
aaa
push
push
jo
pop
les
inc
int
xor
dec
xchg
int
add
imul
adc
jmp
pop
add
push
jmp
test
lods
jg
sbb
jl
xchg
leave
movsl
mov
dec
add
mov
popa
dec
or
clc
daa
or
aas
inc
shrl
jmp
leave
lock
and
arpl
mov
mov
shll
mov
mov
inc
add
gs
push
or
adc
es
clc
push
outsb
orl
lock
sub
in
push
add
dec
adc
dec
pop
mov
scas
add
sub
mov
dec
mov
addr16
test
popa
repz
and
iret
cmp
mov
sbb
mov
jle
or
dec
rclb
lock
movsl
sbb
nop
mov
aas
push
imull
jg
lcall
or
and
in
loope
insb
jmp
add
pop
mov
xor
push
stos
cs
test
lahf
std
mov
mov
loop
jno
xor
orl
jb
cmpsl
add
rcll
jo
subl
std
mov
insl
ja
out
cmp
cmpsb
loope
das
insb
cmpsl
inc
pop
out
test
in
testb
cld
sub
faddl
mov
xchg
push
jbe
sbb
hlt
cs
imul
and
dec
add
fdivrl
das
sbb
ds
cld
sub
je
ret
mov
xchg
mov
dec
in
mov
mov
incb
clc
loop
ficompl
or
pusha
mov
cltd
fcom
ss
iret
lret
jmp
fistpl
cmpsl
out
sub
fisubrs
cmp
mov
and
dec
popa
fwait
inc
addr16
imul
pop
in
inc
add
mov
std
gs
addr16
out
sbb
bound
lret
sub
sbb
lds
fimull
push
iret
jmp
std
cltd
into
or
aam
mov
pop
cwtl
arpl
xor
mov
js
mov
xor
adc
inc
push
imul
stos
test
sti
dec
or
sub
call
imul
inc
cmp
cld
xor
adc
outsl
repz
xchg
shlb
in
pop
jle
add
ljmp
cmp
std
clc
xor
lods
fwait
loope
sti
and
pop
push
pop
adc
cwtl
jle
imulb
fistps
into
arpl
cmp
push
pop
jne
mul
push
popa
in
cld
xlat
ds
mov
aam
fcompl
pop
and
dec
dec
es
and
rcrb
jne
pop
je
and
xchg
mov
adc
push
push
cmp
into
pushf
adc
scas
mov
mov
test
ret
insb
xor
jne
hlt
es
sbbl
lods
dec
mov
int3
aas
ljmp
rorl
test
xlat
fwait
int
repz
lods
ds
or
adc
scas
clc
aas
and
cmpsb
mov
mov
push
lock
and
frstor
inc
dec
push
lods
jmp
movsb
sub
fwait
jnp
imul
and
push
notl
jb
adcl
test
sub
loop
xchg
sub
cwtl
mov
push
xor
jle
sbb
popa
adc
aam
clc
int
pop
lea
aad
jecxz
pop
or
lret
cmp
das
ds
ret
push
xchg
repz
mov
cmp
mov
out
cli
addb
mov
in
xlat
push
sti
in
pop
add
leave
lahf
rorb
add
add
mov
lds
aaa
inc
dec
cmp
imul
jg
imul
idivb
lcall
imul
and
sbb
mov
int3
lcall
add
sbb
lret
in
add
ficoml
xor
int3
add
shrl
inc
sti
cmp
sub
and
int3
icebp
lods
jle
scas
out
push
mov
cmp
inc
sub
inc
popf
sub
lods
mov
in
mov
repnz
imul
js
mov
dec
jg
jmp
movsb
cmp
fs
push
sti
fs
aaa
cmpb
sar
inc
jnp
mov
push
xor
dec
xchg
mov
insl
arpl
stc
mov
stos
data16
xor
push
sbb
inc
aas
cmp
test
rcrb
push
add
jg
aaa
sti
pop
sub
and
test
sbb
mov
push
cmp
rcll
outsl
mov
insb
xor
push
adc
fistpll
xchg
mov
add
ss
or
jno
insl
dec
outsb
shlb
mov
xchg
iret
mov
jp,pn
popf
jmp
push
push
add
jne
xlat
mov
enter
pop
out
roll
jg
and
sahf
test
pop
xchg
pop
pop
call
loope
nop
push
sub
ljmp
lock
aas
push
jp
push
adc
push
subb
gs
lret
mov
xchg
addr16
adcb
xlat
sub
lock
subl
ret
inc
mov
lcall
dec
pop
cli
mov
lock
lahf
inc
int
les
jne
loopne
insb
mov
and
adc
jb
xor
fwait
adc
sbb
shl
jbe
stc
adc
adc
popf
lret
mov
loope
jl
push
xor
mov
roll
out
cld
add
int
mov
jae
jle
sub
jnp
jnp
es
imull
mov
inc
repnz
pop
adc
jmp
xchg
add
inc
inc
sarl
inc
outsb
pop
push
mov
jle
or
mulb
adc
fcomps
jg
mov
pop
stos
lahf
or
lods
stos
lret
loopne
cmpsb
mov
sbb
loopne
pushf
mov
call
xchg
and
fistps
jecxz
inc
dec
adc
and
fimull
ret
cltd
loopne
mov
leave
mov
pusha
fisttpll
sub
lods
hlt
sbb
mov
push
cs
cmpsl
pusha
gs
insb
movsb
jge
push
xor
add
adc
inc
xchg
sub
fisttpl
mov
or
clc
mov
pop
cmpsb
mov
stc
mov
scas
out
lahf
mov
jns
stos
cmp
lods
pop
add
xchg
sub
cmpsb
mov
in
lret
shlb
insb
xchg
jb
fidivrs
dec
mov
out
push
mov
jae
or
fnsave
mov
mov
into
iret
shll
adc
cmp
sar
stos
sub
and
jo
mov
in
mov
mov
xchg
dec
mov
mov
jmp
push
repz
xchg
and
sub
into
adc
js
movsb
push
pop
push
sahf
xor
sahf
scas
out
adc
or
inc
pop
fmull
repnz
or
ja
mov
mov
push
add
out
loope
cli
int3
ret
nop
in
rclb
rolb
cld
aas
xchg
and
jl
mov
ljmp
fwait
rcll
mov
mov
mov
add
inc
jmp
test
loope
fldt
das
arpl
lods
mov
xor
in
sbb
neg
idivl
sahf
js
test
mov
pop
jg
out
dec
xor
cli
dec
push
in
lea
ja
xchg
jecxz
dec
mov
out
xlat
mov
enter
jno
jne
or
js
mov
call
iret
repz
mov
int3
xor
cli
jno
xchg
jmp
hlt
test
cmpb
inc
push
aas
inc
leave
jl
sbb
in
imul
aas
jmp
idiv
jle
in
mov
pop
adc
pop
push
cmp
popa
mov
add
out
add
sub
not
pop
rcl
imul
js
in
test
cmc
and
sti
xchg
stos
movsb
xchg
inc
test
lret
jp
fwait
dec
out
popf
xor
push
stos
adc
or
frstpm(287
daa
add
cltd
sub
bound
fs
mov
xchg
push
outsl
stc
sti
jae
sbb
cld
push
adc
inc
jge
mov
cs
adcb
stc
fdivl
nop
hlt
sub
bnd
cmpsb
popa
ljmp
push
and
call
mov
cmpsb
mov
aaa
movsl
std
out
test
mov
sub
shlb
es
pushf
jmp
out
mov
cmpsl
lods
adc
lods
in
xor
xor
mov
push
xchg
mov
es
mov
movsb
push
fcmovnbe
test
mov
mov
shlb
dec
sti
shll
jae
mov
ds
decw
add
dec
cmpl
repz
idiv
mov
and
js
dec
sahf
rclb
adc
push
mov
mov
jle
and
sbb
jl
jo
into
mov
outsb
mov
inc
pop
stc
leave
mov
jecxz
jnp
add
mov
xor
pop
es
mov
cmovg
addr16
sti
outsl
lds
adc
and
fsubs
fld
shr
and
sub
clc
xlat
sti
loopne
inc
jge
pop
adc
or
test
sar
iret
xchg
mov
iret
mov
cmc
test
int
repz
ret
out
mov
cmp
pop
pop
push
adc
lock
inc
push
rcrb
es
mulb
add
cmc
fxsave
fs
stos
gs
outsl
or
jp
lea
mov
push
repz
mov
add
imulb
sbb
cmc
and
sbb
test
mov
jnp
mov
in
mov
mov
aas
subb
mov
jbe
dec
pop
fimuls
arpl
adc
movsl
addr16
add
mov
popa
jb
inc
mov
mov
pop
sti
or
pop
inc
mov
xchg
push
cmp
dec
icebp
movsb
jg
mov
rclb
test
push
out
fistpll
xor
push
sub
jmp
xchg
mov
and
lock
cld
cltd
sti
lock
mov
lahf
xchg
pop
pop
sar
cmp
cmp
jge
mov
cs
out
scas
xchg
jmp
cli
pushf
dec
outsl
stos
popaw
push
xor
push
jae
sarl
lret
outsb
nop
nop
mov
ss
repnz
xor
ds
jl
test
push
out
xchg
cmp
xor
cmpsl
sahf
dec
enter
jae
mov
add
jne
call
adc
imul
movsl
cld
call
sub
test
push
xor
jle
test
xchg
fistl
sbb
cld
add
cmp
dec
pop
in
push
cmp
cli
frstor
fimuls
sbb
or
jle
inc
outsl
xchg
daa
repnz
cltd
adcb
pusha
pusha
lahf
jo
or
and
fwait
pop
in
and
adc
dec
jb
cmp
je
aam
test
fcoms
dec
mov
in
loope
xchg
iret
xorb
notl
cmc
ret
dec
addr16
mov
jbe
pop
cmp
push
pop
popa
mov
mov
cmp
fwait
aas
incb
add
loopne
sbb
sbb
movsl
gs
int
mov
mov
and
fldcw
and
gs
push
test
fcmovb
xchg
sub
arpl
mov
jmp
jmp
dec
jp
xlat
fidivs
sahf
je
sbb
inc
inc
dec
fstpl
jg
ja
lahf
mov
push
xlat
dec
mov
push
imulb
ja
add
out
mov
and
xor
inc
scas
jne
or
add
mov
popf
dec
push
cs
push
imul
jl
jmp
pop
fdivs
int
cmp
push
mov
cmp
stc
jbe
std
xchg
add
adc
leave
mov
sbb
cmp
xchg
pop
mov
in
mov
packssdw
into
jae
dec
dec
js
mov
xchg
ss
mov
mov
cmp
data16
sub
lahf
inc
and
or
push
mov
stos
pop
addl
dec
loop
cmp
mov
cmpb
mov
out
jbe
pop
cmp
or
pop
repz
push
cli
xchg
pop
xchg
add
sti
xchg
inc
clc
es
addl
dec
dec
jae
xor
in
aas
pop
mov
pop
sub
mov
mov
sub
out
lahf
mov
xchg
dec
mov
aad
sub
mov
test
inc
sbb
cmp
shl
orl
cmp
mov
jg
pshufw
cwtl
push
sub
xchg
sbb
sbb
adc
push
mov
rorb
ror
dec
adc
jbe
popf
xchg
push
inc
xchg
in
clc
daa
lds
xorl
scas
push
dec
push
sbb
sub
cwtl
rcll
sub
adc
jno
cmp
mov
lret
jbe
jge
add
rcll
adcl
sbb
lret
in
shll
gs
lahf
pop
mov
in
stc
mov
icebp
je
cltd
js
jns
mov
jne
mov
pop
sbb
xchg
mov
cmpb
aas
loopne
cmp
cmp
cmovl
je
pop
in
push
scas
xchg
enter
pop
sbb
hlt
fisubs
sbb
jmp
mov
in
xchg
sbb
lahf
jle
jb
pop
adc
je
mov
sub
ss
leave
mov
xchg
inc
addb
lcall
ret
ret
and
int
adc
mov
xchg
scas
daa
lret
mov
and
inc
push
cmp
mov
fdivs
push
adc
das
pop
lcall
cld
xchg
jns
xchg
fcoml
daa
xorl
cld
push
dec
insl
mov
mov
xlat
mov
mov
cmpl
addl
jmp
mov
arpl
xchg
fildll
or
sub
int3
fidivs
push
jnp
jle
mov
cmp
stos
jmp
xor
inc
jnp
pop
popa
out
cmp
xchg
xchg
jg
jb
mov
adc
lcall
std
lea
xlat
and
mov
loop
inc
inc
inc
dec
mov
lock
js
push
and
pop
mov
cmpl
rcrl
ret
jmp
daa
or
push
cli
shlb
sbb
sbb
imul
in
popf
add
mov
fisubs
sti
xchg
stc
dec
stos
aaa
bound
jae
test
xchg
in
or
scas
pop
dec
cmc
mov
push
dec
inc
mov
fsubr
lret
xchg
xlat
or
fwait
adc
test
ljmp
mov
xor
pop
dec
sbb
cmp
test
in
loope
jp
stc
sti
add
fnstenv
or
jecxz
das
mov
cmpsl
hlt
pop
or
stos
mov
jns
movsl
jg
call
aaa
fldenv
rcl
cmpsb
or
call
xchg
lock
adc
aad
xor
jb
les
push
xchg
dec
inc
cs
xor
scas
mov
out
pop
mov
ss
add
dec
pop
pushf
shr
ljmp
mov
aad
mov
add
mov
mov
dec
outsl
xchg
pop
or
hlt
jo
out
jl
cmpsl
inc
fcomps
mov
mov
test
je
jge
in
fldcw
push
adc
int
pop
mov
push
jl
arpl
rclb
sbb
pop
or
sbb
add
ljmp
pop
andl
mov
jnp
sbb
rorb
push
in
lret
jle
movl
test
jae
ret
jge
test
adc
shll
lret
mov
jbe
lea
imul
dec
je
daa
mov
jnp
fbld
jbe
fdivr
jg
push
push
or
cmp
adcb
addr16
fsubl
mov
loopne
xchg
loopne
mov
pop
mov
mov
sbb
add
loope
add
repnz
sbb
jle
pop
xchg
sub
mov
cmp
push
pop
outsl
ret
dec
les
adc
push
sahf
cmp
inc
push
popf
sti
jb
sbb
into
or
stos
fmulp
out
mov
mov
jp
ss
push
pop
cmp
ja
repnz
xchg
adc
imul
pop
cs
ret
imul
jmp
int3
repz
xchg
ljmp
aam
fimuls
push
pushf
insl
xchg
cmp
cli
test
xchg
pusha
ljmp
xchg
add
fs
fnstcw
rclb
cmpsl
ss
aas
incl
fdivl
push
lods
push
or
int3
popf
adc
movb
push
xorw
fxch
and
aas
jmp
fiadds
lahf
fldenv
xchg
lods
fdiv
flds
icebp
cmp
xchg
jmp
pop
dec
popf
shll
adc
mov
cld
dec
jle
mov
sub
xchg
movsl
jbe
xor
sbb
jbe
shr
sbb
dec
std
rcll
les
pop
repnz
pushf
iret
xor
mov
push
cmpsb
ds
rcll
dec
les
jne
ljmp
pop
loop
cmpsl
mov
cmpsl
push
aad
inc
dec
fisttpl
push
adc
jbe
push
cmp
jb
mov
mov
out
icebp
stos
cmpb
mov
stos
push
mov
rcr
sbb
je
cli
or
into
mov
jecxz
sbb
push
nop
pop
scas
lds
jmp
pop
pop
out
inc
mov
cmp
or
or
jne
mov
aas
fbstp
pushf
pop
sub
in
pop
stos
dec
jle
pop
jo
dec
sbb
ja
fimull
push
aam
mov
push
hlt
cmpsl
xor
sbb
test
cmp
fidivs
xchg
pusha
push
aam
sub
lahf
roll
sbb
mov
aam
cmp
mov
fsubrs
mov
pop
aas
daa
lds
add
fidivrl
ja
inc
or
andb
sbb
fldl
mov
mov
pop
pop
fwait
into
out
push
mov
xor
lcall
inc
fidivs
cs
push
mov
xor
insl
pushf
push
shrb
jmp
enter
into
clc
xchg
mov
jmp
mov
sub
lock
and
dec
dec
and
lcall
cli
jne
add
xchg
dec
sub
mov
shl
lods
addr16
jbe
xchg
shlb
push
inc
adc
cld
dec
enter
mov
mov
fsubs
mov
push
gs
js
mov
cltd
cmp
xchg
pslld
adc
stc
pop
pusha
adc
shrl
push
cli
js
rorb
fucomi
ss
ja
sub
insb
or
les
ret
cmp
inc
aam
stos
push
outsl
push
add
decl
push
jg
pop
nop
mov
cwtl
cmp
call
aas
push
dec
cmp
lret
lea
xor
int3
or
pop
push
shld
mov
inc
xor
js
stos
and
mov
aaa
cltd
and
arpl
into
rcll
addl
fsubs
in
repnz
in
adc
fimuls
repnz
js
jbe
loope
sarl
mov
sbb
cmpsl
int
mov
push
ret
fimull
imul
and
out
movsb
mov
and
sub
xchg
loope
mov
imull
mov
lret
je
stos
inc
cwtl
sub
out
add
jnp
out
sub
inc
mov
call
icebp
add
xchg
push
outsl
js
lahf
fistl
mov
cmp
pushf
and
rclb
fwait
mov
sahf
repz
ljmp
scas
fbstp
mov
cli
add
sub
test
sub
or
sub
fdivr
pop
test
xchg
xchg
pushf
aam
xor
xchg
adc
aad
adc
or
fs
xor
dec
and
cmpsl
ss
or
scas
aad
push
data16
mov
sub
sub
data16
adc
inc
jl
lods
testl
adc
mov
outsl
enter
cs
dec
jp
lock
dec
pop
mov
popf
jno
mov
aaa
insl
inc
xor
sbb
repz
stos
cld
push
lahf
sbb
inc
lcall
sti
loop
bound
cmp
jmp
addr16
int
lahf
stos
push
movsl
mov
sub
dec
fwait
test
xlat
mov
sub
cmpsl
xor
stc
jae
inc
push
sub
jge
js
out
test
outsb
fldl
push
inc
xchg
mov
xor
jo
je
sbb
jnp
or
mov
fcoml
enter
push
movsb
imulb
popf
cld
in
ret
pusha
sub
ret
pop
js
cmpsb
xor
cmp
je
adc
jg
xor
pop
fnclex
test
pop
arpl
cmp
jb
jg
mov
or
cld
jns
mov
fsubrp
hlt
scas
jbe
add
mov
and
int3
inc
mov
imul
lret
outsb
adc
cli
push
arpl
movsb
mov
jo
xchg
push
cmp
loop
xchg
jp
push
dec
cmc
cmp
ret
xor
sahf
jle
add
loope
pop
fidivrl
jae
xchg
jne
xchg
shll
xchg
out
fdivrs
testl
rorl
mov
lods
jmp
rorl
shufps
mov
lods
cs
ja
call
bts
int3
lock
inc
xchg
jae
cli
jb
mov
or
cmp
dec
jno
xchg
andb
sub
ja
loopne
fmul
popa
sbb
scas
pop
subl
cmp
les
repnz
bound
imul
mov
loop
mull
sbb
mov
add
jle
add
mov
mov
xlat
mov
mov
inc
ja
cmp
daa
getsec
das
push
out
push
cmpsb
mov
push
out
fdivrp
xchg
scas
and
sti
pop
aaa
xor
loope
mov
cmp
mov
pop
jl
sti
outsb
pop
imul
test
mov
jb
sub
mov
jmp
jae
adc
jp
push
sbb
mov
mov
xor
insl
mov
loopne
pop
or
ss
mov
notl
add
xor
pop
mov
das
push
sti
pop
mov
movsl
test
aas
adc
mov
mov
dec
xchg
rorl
xchg
fwait
dec
jecxz
mov
jnp
pop
mov
xchg
cs
aad
aaa
sbb
cs
inc
push
or
enter
aad
mov
ds
sahf
loope
bound
in
and
movsb
cs
flds
das
cld
or
ret
out
sbb
adc
ret
fdiv
mov
jno
push
in
xchg
pop
jbe
xor
cltd
rcrb
sahf
sub
cltd
pop
test
mov
loop
cmpsl
push
xor
sbb
cmc
add
sub
call
or
pop
movsl
lds
lret
mov
pop
imul
jl
cwtl
dec
je
cmpsb
scas
sbb
xchg
sbb
adc
in
fistpll
loop
loop
addr16
dec
sbb
out
push
jecxz
mov
fnstcw
add
pop
jg
pushf
and
out
popa
mov
addr16
stos
lret
sbbl
test
push
pop
arpl
cmp
sbb
xchg
xchg
mov
popf
nop
fdiv
jge
adc
mov
jns
inc
pop
cmp
cwtl
iret
pusha
jle
jge
fucomp
cwtl
mov
dec
cmp
adc
push
and
repz
jle
mov
jle
mov
sub
sub
jne
aas
ffreep
jb
std
les
mov
pop
repnz
jmp
fs
mov
mov
sbb
xchg
xor
sbb
loopne
sbb
fidivl
xchg
aad
in
fwait
sub
xlat
dec
imul
mov
js
test
stc
cli
and
ja
lock
sub
dec
scas
xchg
stos
or
popf
loope
fs
sub
je
das
fsubrp
cltd
mov
shl
xchg
nop
push
loopne
roll
fs
jp
push
push
adc
dec
out
or
cld
mov
cmc
pop
sbb
jmp
das
mov
dec
and
xor
adc
loopne
test
das
and
jbe
mov
jmp
cmp
cltd
xchg
cmpsl
icebp
shrl
fwait
xor
subl
fsubrp
cwtl
mov
xchg
mov
xchg
cmpsl
cmpsb
mov
pop
call
or
sub
loopne
push
lret
jg
cmp
fistl
loop
call
and
mov
loop
je
adc
mov
decb
adc
mov
das
lock
inc
gs
mov
cmp
adc
adc
xchg
pushf
inc
xor
or
inc
repnz
scas
push
insl
push
imul
mov
cmpsb
or
jge
and
int
aam
sbb
pop
divb
clc
and
mov
les
mov
pop
mov
movsb
scas
or
lret
out
add
into
loopne
push
cmp
popf
or
pop
enter
fistps
or
sti
cmp
daa
jno
xor
dec
test
push
xchg
dec
xchg
in
cs
fistps
xor
pop
hlt
cmp
lret
fwait
add
scas
scas
push
ja
adc
sar
xor
pop
cmp
fwait
pop
adc
stc
mov
sbb
cmp
cmpsl
orl
sbbb
enter
push
je
push
cld
sbb
leave
nop
clc
adc
mov
cmp
inc
ljmp
pop
mov
mov
sbb
gs
iret
arpl
dec
xlat
nop
test
cmp
dec
xor
scas
addr16
insb
pop
push
out
sbb
mov
pop
inc
sti
daa
mov
inc
lcall
cmp
xlat
push
aaa
sbb
jecxz
out
loope
cmpsl
and
xchg
ja
inc
dec
jp
mov
dec
mov
pop
push
add
jl
sub
popa
mov
insl
cli
into
movsl
add
sbb
aam
loopne
cld
loope
xchg
cmp
mov
push
lock
inc
jle
add
xor
dec
cld
or
jns
lret
mov
ljmp
add
mov
cmpsb
and
mov
lods
mul
jl
leave
lds
lret
sbb
or
mov
sub
mov
add
pop
cmp
pop
cs
outsb
mov
push
cwtl
arpl
lods
mull
lcall
sahf
cli
rcl
jge
adc
xor
sub
add
pop
add
add
insl
scas
das
jecxz
and
pusha
jne
push
xchg
xchg
movaps
and
sti
leave
cmp
add
fcoms
mov
dec
pop
pushf
mov
mov
pop
sbb
lods
stc
clc
mov
cmc
xor
bound
fcompl
add
andl
inc
popf
clc
repz
filds
aas
pop
rcr
jo,pt
adc
ss
imul
in
push
jp
into
mov
or
dec
and
je
int
jmp
inc
repz
das
jle
mov
mov
js
gs
push
ret
call
ret
loope
sub
jge
and
mov
clc
add
out
push
dec
mov
fbstp
cmc
cwtl
sbbb
xchg
les
iret
push
cmp
mov
popf
xlat
pop
sbb
adc
sbb
idivl
lods
nop
jmp
adc
sub
push
iret
sub
mov
das
sbb
push
jle
test
dec
cs
jmp
push
jne
loopne
mov
shll
stos
push
int3
icebp
pop
dec
stc
es
push
repz
cmpsb
xor
sti
sbb
jno
test
mov
out
push
mov
in
cmpsb
int
js
ljmp
dec
ss
or
stos
movsl
mov
dec
dec
js
test
movsl
movsl
mov
mov
imul
aas
push
jecxz
sbb
jno
push
mov
int
sbb
cld
dec
pop
sbb
std
insl
xchg
lds
inc
pop
arpl
sub
loopne
push
inc
aas
cmpsb
mov
lret
mov
mov
pop
cmc
pop
lahf
mov
mov
cmp
lcall
mov
xchg
lock
lods
scas
pop
xor
repnz
pop
scas
push
lea
cmpsl
xor
outsb
mov
jbe
pop
hlt
sbb
ficoms
xor
dec
mov
jbe
push
clc
scas
cwtl
inc
dec
xchg
scas
stc
xlat
decb
lds
aam
icebp
je
mov
jne
inc
les
mov
jl
xchg
scas
sub
push
sbb
adc
lret
xchg
add
cs
fildll
ljmp
cmc
xor
inc
neg
or
imul
imul
and
jmp
xchg
xor
xchg
mov
xchg
mov
insl
lods
clc
jecxz
cmc
int3
loopne
iretw
xchg
jno
sub
repz
push
mov
xor
adc
bound
dec
rcr
pop
scas
xchg
call
icebp
mov
mov
add
bound
jo
pop
sbb
setl
out
inc
push
mov
nop
inc
ds
outsb
addr16
cmpsl
mov
fnstenv
inc
ljmp
cmp
mov
scas
pop
leave
loop
xchg
mov
xor
jae
mov
xchg
mov
or
loop
xor
xlat
fistps
rcll
sbb
bound
addb
pop
nop
ficomps
ret
inc
fsts
jl
add
xchg
mov
mov
call
jb
fdivrs
sbb
shl
mov
ds
sbb
out
jp
test
dec
or
sbb
inc
out
add
dec
aad
shr
les
shlb
idivb
ljmp
nop
cmp
xor
inc
and
cmp
inc
hlt
test
mov
xchg
pop
sub
or
inc
dec
lret
ljmp
sbb
mov
cmc
aad
mov
or
cld
cmc
cmp
sbb
imul
push
aas
rcl
int
sub
mul
into
push
adc
jno
jg
cmp
jecxz
xchg
stos
pop
cmpsb
ljmp
hlt
mov
xchg
push
or
sub
idiv
add
jne
mov
fnstsw
int
inc
out
sbb
push
inc
mov
add
dec
fcompl
inc
sti
lret
rolb
arpl
cmp
push
push
add
mov
clc
push
xorl
ljmp
lock
push
mov
xchg
lods
jmp
and
sbb
aaa
ljmp
test
mov
cmc
popf
jmp
clc
and
jb
jno
addr16
inc
loop
fnstsw
repnz
xchg
cmp
gs
pop
xor
sarb
movsbl
or
mov
mov
xor
dec
mov
jecxz
or
dec
inc
mov
jecxz
and
sahf
inc
sbb
inc
movsl
pop
jl
fs
cmc
sub
lock
pop
xor
mov
in
adc
sub
xor
mov
jecxz
divl
xor
xchg
dec
ficoml
mov
cltd
xor
mov
nop
push
imul
sub
in
dec
aad
add
out
sbbb
xchg
lock
test
popa
enter
mov
dec
iret
mov
xor
adc
dec
loope
sti
mov
cmp
cmpsl
js
lahf
lret
jbe
mov
std
sahf
jmp
jns
push
fidivs
mov
loop
jnp
clc
lret
daa
aad
repnz
mov
xchg
sub
and
mov
push
mov
cmpsl
xchg
or
addl
cmp
test
roll
pop
rorl
add
sub
enter
push
mov
iret
mov
rclb
or
jecxz
mov
cltd
cld
cmpl
subl
and
outsb
in
mov
or
mov
push
dec
fiaddl
sub
sbb
pop
clc
pop
adc
jle
and
inc
fs
stc
mov
push
cmc
jne
inc
mov
mov
push
cs
data16
adc
mov
pop
pushf
divb
fisubs
mov
cld
out
lcall
nop
cmc
fstpt
dec
push
adc
lods
in
pop
mov
in
mov
insb
out
sub
inc
dec
daa
clc
or
outsl
rcr
jp
stc
jns
inc
jno
movsb
stos
arpl
fistps
jge
xchg
pop
cwtl
xchg
xchg
popf
xchg
out
daa
out
cmp
insb
push
shll
cmp
push
xor
jno
ljmp
xchg
lock
pop
dec
jle
repnz
imul
gs
ss
arpl
lret
je
cmc
stos
repnz
fimull
jp
push
sti
std
jae
mov
adc
add
or
lahf
lods
and
lea
dec
test
jmp
pusha
lods
jp
icebp
push
cwtl
ds
push
pop
dec
clc
lret
push
push
pop
sub
mov
mov
lods
stos
sub
inc
cltd
cs
mov
loopne
imul
stc
or
testl
or
in
jo
lds
cli
shl
jnp
cmp
dec
vpmulhw
and
call
cmpsb
loope
push
aaa
mov
sub
pop
call
mov
sub
into
pop
inc
jns
jle
adc
stc
xchg
pushl
dec
cmp
pop
dec
xor
mov
test
jns
xor
inc
jb
lods
dec
mov
jl
repnz
int3
stc
gs
mov
das
lods
shl
mov
pop
mov
ljmp
stos
into
rorb
in
mov
mov
or
loope
and
outsb
addr16
push
jne
pushf
inc
jno
xchg
xor
mov
lret
jl
clc
xchg
std
movsl
mov
adc
xor
dec
mov
int
outsl
leave
std
es
jbe
mov
testl
cmp
enter
or
jmp
xchg
sbb
das
push
xlat
cmp
cmp
and
cmp
or
mov
imul
sub
adc
mov
popf
and
cli
or
xchg
mov
imul
mov
mov
inc
mov
fistps
rcl
add
fld
fstl
pop
or
out
push
leave
mov
sbb
jnp
add
mov
sarb
push
cmp
cmp
fisubl
into
hlt
mov
nop
pusha
cld
pop
cmp
push
inc
addl
out
or
xor
repz
in
imul
mov
ret
lods
sti
jmp
ffree
mov
cmpb
push
jnp
call
adc
fadds
mov
int
loopne
adc
scas
jp
adc
add
movsb
das
outsl
arpl
mov
lahf
aas
test
mov
mov
add
adc
dec
jb
xchg
fs
push
or
lret
in
inc
je
mov
mov
xor
lret
out
dec
dec
out
jle
ss
stc
push
mov
inc
xchg
push
int
add
push
cmpsl
and
dec
arpl
sbbl
inc
push
bnd
jle
enter
das
xor
jge
sbb
or
sbb
adc
xor
not
xor
jecxz
push
xor
jne
fmull
jecxz
adc
xor
inc
sbbl
or
sub
pop
pushf
adc
cmp
mov
mov
or
loopne
adc
dec
inc
jb
outsl
mov
adc
lcall
inc
data16
jns
repz
in
inc
ja
leave
loopne
xor
outsl
cmovno
out
mov
mov
or
mov
incb
repnz
std
loope
stos
loop
ret
add
fldenv
rcll
roll
movsb
fcoml
popa
sar
scas
pushf
lds
cmp
mov
jecxz
mov
mov
or
dec
xor
push
jns
push
mov
out
and
jb
sub
mov
lahf
inc
or
cmp
fs
cmp
add
mov
dec
pop
mov
dec
clc
and
aam
add
cmp
and
std
sbb
sbbl
shl
test
cmp
adc
xchg
dec
arpl
out
sti
lea
sbb
stos
repz
inc
test
or
gs
mov
mov
pop
push
adc
cmp
push
scas
lods
and
ffreep
arpl
cmpsb
lock
push
jmp
stos
pop
push
mov
ss
pushf
push
jno
jl
outsb
popa
jp
ret
jbe
mov
pusha
and
aam
push
ret
popf
dec
sbb
xchg
int3
sbb
iret
xor
mov
iret
jmp
stos
xchg
xchg
push
push
xor
push
mov
sarl
call
push
lods
out
mov
lret
and
mov
and
pusha
scas
in
shlb
lret
pop
scas
pop
inc
add
insl
incb
fcomip
cmpsl
shlb
sub
jp
push
icebp
push
jmp
out
mov
xlat
xchg
xor
fs
test
dec
arpl
shl
out
cmp
inc
or
dec
push
arpl
hlt
insl
popa
and
dec
arpl
shlb
mov
mov
das
neg
push
mov
jmp
test
jp
cmp
push
xchg
xchg
dec
add
sti
push
hlt
xchg
xchg
das
sbb
fisubrs
and
jl
sbb
mov
jl
or
cmp
ret
std
pop
jno
sub
cmc
aam
insb
xor
or
outsl
push
push
stc
mov
mov
xor
sti
fnsave
pop
lods
call
push
fdivrs
mov
mov
jno
jns
cmp
pop
pop
jo
shlb
push
push
xchg
test
pop
jbe
pusha
pop
mov
pop
pop
mov
mov
jecxz
adc
push
jno
mov
sbb
std
lds
and
popf
aam
inc
iret
int
cwtl
lods
cltd
pusha
jae
sbb
fidivrs
pop
push
scas
dec
mov
mov
imul
jmp
inc
xor
mov
aad
mov
push
inc
push
jg
add
mov
repz
inc
sub
fsubl
stc
xchg
sbb
insl
clc
imul
inc
pop
jecxz
xor
push
push
xor
xchg
pop
cmc
xorl
xor
mov
pop
in
and
aaa
scas
jmp
js
pop
inc
mov
ficompl
mov
push
inc
mov
sbb
repz
inc
push
push
xchg
jmp
sarb
ss
sbb
jecxz
sbb
test
cli
sahf
insl
pop
in
xchg
iret
shll
in
push
adc
adc
fnstenv
insl
jg
and
pop
inc
orb
inc
xlat
sbb
or
cmp
fisubrl
sbb
adc
adc
push
push
xchg
fiaddl
pop
cmp
xor
add
dec
cmp
jno
push
mov
in
jno
cmp
std
push
lret
dec
aaa
cmp
popa
in
ja
outsb
mov
mov
shl
mov
cmp
mov
adc
ret
rcll
cmpsl
cmp
lds
stos
push
sub
out
das
cwtl
call
or
lods
push
mov
inc
cmpsb
xor
mov
fs
adc
xchg
jne
mov
int3
ljmp
sbb
jmp
jnp
dec
xlat
repnz
imull
sbb
fcomps
jge
mov
or
jno
inc
add
insl
pop
add
pop
cmpsb
scas
cmc
add
pop
mov
clc
imul
popa
sti
jle
ds
add
ja
jmp
cmpsl
adc
xorb
shrb
sarl
mov
negl
cltd
bound
xchg
pop
xchg
data16
call
sbb
mov
mov
stos
lods
mov
je
je
pop
pop
idivb
fdivrs
push
imul
scas
repz
test
mov
adc
ljmp
fistpll
cmc
outsl
add
xchg
inc
cmpl
sti
mov
cmc
lahf
xlat
idivb
fnstsw
push
test
fbld
adc
and
jo
das
shr
fistpll
sbb
push
or
ja
mov
inc
jno
es
pop
mov
popa
xchg
mov
and
jno
add
fisttps
and
outsb
ficoml
xor
pushl
mov
mov
ds
stos
xchg
mov
jp
lods
xchg
or
mov
cmp
cmp
xchg
jae
enter
jne
outsl
mov
cmpsb
adc
mov
adc
test
cmp
cmp
sbb
scas
icebp
or
dec
sbb
dec
adc
das
rol
data16
cld
mov
dec
jecxz
add
outsl
cmpsl
enter
testl
stos
push
test
aas
movsb
mov
push
jnp
xor
js
pusha
fsubs
loopne
movsb
dec
fistl
mov
fs
and
addl
cmp
cli
sahf
les
pop
sub
ds
jge
lret
jle
mov
or
ljmp
push
add
mov
fwait
jg
aaa
push
fcomps
push
cmpsl
push
xchg
rcrl
ds
pop
scas
sbb
stc
shlb
rorb
jno
aas
fisttpl
lds
xchg
push
inc
pop
in
mov
ret
dec
enter
pop
jecxz
mov
adc
sahf
sbb
bound
jl
fbld
lret
pop
iret
sahf
and
push
jo
scas
add
out
push
pushw
xchg
sar
leave
xor
dec
shlb
fidivl
sbb
dec
jg
mov
dec
inc
fstpl
sbb
lock
enter
mov
adc
adc
jae
fxch
and
or
push
add
je
mov
outsl
cmp
sub
lods
adc
sub
testb
or
fwait
out
rclb
push
sti
xchg
imul
xchg
and
pop
inc
out
dec
popf
and
leave
mov
test
xchg
push
loopne
shrl
sub
loope
xchg
push
sbb
push
sub
mov
das
aaa
loope
imul
mov
and
adc
inc
xchg
repnz
enter
xor
and
out
lret
mov
sub
clc
lret
or
test
in
fdiv
push
adc
or
jle
shrl
mov
dec
push
add
lds
jno
cmp
das
pop
dec
or
mov
in
dec
push
pop
jge
mov
xchg
imul
mov
testl
adcb
ficoml
nop
pop
cmp
in
xlat
cmp
cld
pop
rolb
aam
jns
out
lea
shrb
xchg
inc
push
jmp
fdivrl
mov
iret
and
cmp
pop
mov
btc
ss
dec
nop
add
and
into
cmp
scas
js
daa
push
pop
cwtl
xor
xchg
call
je
xor
jnp
daa
or
imul
push
jno
fildll
call
sub
and
sbb
mov
lock
stos
out
insb
movsl
insb
dec
mov
pop
dec
inc
jl
pop
jle
sbb
mov
adc
loope
xchg
shll
cmc
mov
mov
jg
sbb
leave
in
xchg
xor
and
mov
sub
jg
mov
push
decb
insb
insl
ret
mov
push
jle,pn
ja
into
push
cmp
xchg
mov
jecxz
int3
test
push
pop
movsl
bound
cmp
ror
push
jmp
xchg
shl
adc
adc
je
push
xchg
sbb
mov
in
imulb
sub
pop
mov
fcoms
lods
cmp
adc
pop
inc
sarl
inc
ret
or
xorb
pusha
outsl
fwait
out
jecxz
fisttpl
out
ds
test
lods
mov
push
pop
das
xchg
cwtl
rcl
mov
out
shl
push
mov
ljmp
jns
dec
cvtdq2ps
repnz
inc
lds
add
js
mov
dec
mov
jno
scas
lahf
enter
sub
sub
or
jne
push
shlb
adc
mov
add
fimull
insl
out
cmpsb
push
or
mov
test
cmp
pop
sub
sbb
mov
roll
cmp
lods
sub
adc
fnsave
daa
sbb
out
hlt
push
pop
ret
outsb
or
cmp
cmp
addr16
cwtl
jne
push
cmp
test
inc
mov
sub
out
push
fidivrs
jle
dec
push
popa
repz
imul
aas
sub
mov
mov
or
cmp
mov
mov
dec
jle
ror
loop
cltd
daa
out
push
imul
phsubd
ds
lahf
imul
test
je
or
test
in
push
add
mov
ret
add
imul
jle
sar
cmp
jg
les
jb
imul
or
mov
fs
jae
sbb
icebp
cmpb
movsl
push
mov
cmp
aas
sti
add
adc
repz
int3
leave
jo
adc
sti
sarb
or
adcl
cli
inc
sub
cli
jge
std
out
add
cmpsl
xor
fdiv
mov
or
sub
fiaddl
leave
dec
push
repz
ret
and
add
xchg
pop
sahf
inc
xchg
and
jl
incb
adc
sbb
or
jl
mov
aas
repnz
inc
stos
out
fnstenv
test
shr
stos
xchg
sti
testb
pop
pop
jl
lret
and
push
bound
jl
pop
dec
sub
insl
hlt
stc
rcrl
test
dec
jecxz
in
cmp
xor
outsl
call
cmc
xchg
dec
mov
xor
xlat
frstor
mov
es
xor
add
test
pop
incl
leave
stos
icebp
jno
lret
es
xchg
push
lods
js
fwait
in
notl
xchg
jbe
test
out
cmpsl
popf
sub
xchg
fsts
fcmove
adc
pop
and
jg
rcll
shrl
cmp
or
cli
inc
testl
jo
dec
fwait
ret
rol
pop
test
push
je
cmp
stos
mov
incb
in
arpl
in
xor
lcall
cmp
inc
jo
pusha
bound
mov
test
in
dec
cmp
outsl
lods
mov
clc
js
imul
adc
outsb
jmp
ljmp
cmpb
idiv
cmp
mov
adc
test
mov
sbb
or
das
leave
add
das
fistps
outsl
adc
daa
dec
out
sti
jne
and
xchg
in
mov
cld
out
jle
xchg
sub
push
jmp
mov
jg
fnsave
sub
lahf
cmp
jns
dec
pop
imul
mov
push
addr16
cmpsb
mov
cmp
pop
jbe
push
cmp
and
loope
mov
sbb
inc
mov
xor
adc
mov
fcmovne
aaa
xor
pusha
dec
bound
lods
dec
outsl
int3
jge
inc
push
leave
scas
lock
cmc
mov
jo
std
xor
pop
pop
cld
add
shrl
inc
out
int
and
fdivr
lret
test
sub
pushf
sub
jae
loop
hlt
xchg
shlb
jge
adc
outsb
pop
mov
cmp
shrb
push
cmpsl
add
mov
and
sub
push
jge
enter
rorb
pop
push
adc
sub
ja
mov
bound
fstps
jecxz
into
mov
imul
scas
xor
stc
push
mov
clc
int3
test
subl
dec
mov
lods
xchg
jmp
jp
xor
jae
data16
aam
push
push
in
jmp
setns
lea
es
icebp
insl
mov
in
lods
pop
or
or
jecxz
fidivl
in
pop
sahf
xor
les
add
mov
mov
inc
dec
out
rcll
lahf
dec
aaa
mov
mov
push
pop
xor
loopne
xlat
ret
aam
fcoms
adc
xor
lahf
xor
cli
into
imul
dec
adcl
sub
sarl
cmp
sub
and
xchg
inc
lret
les
out
addr16
cmp
and
orb
jl
testl
movsb
jnp
sbb
iret
or
div
lret
xor
cmp
or
mov
sub
ljmp
sbb
push
xchg
fimull
lahf
pop
jg
call
jp
cmc
shrb
loopne
rcll
jno
xchg
sti
je
and
jns,pt
fnstenv
fisttps
and
push
ljmp
jle
mov
ret
dec
and
or
push
nop
adc
sub
bound
add
jo
push
lock
add
fwait
dec
ret
mov
setl
xchg
lds
aad
mov
data16
clc
pop
negb
das
rcll
nop
fisttps
sbb
cmpsl
out
xchg
adc
mov
push
jnp
add
icebp
pushf
out
sbb
mov
and
mov
adc
enter
pop
add
insb
inc
lahf
jae
lea
xor
inc
add
and
add
cmp
cmp
ficoml
inc
in
testb
popa
movsb
outsb
mov
idivl
adc
xchg
pop
pop
gs
je
mov
inc
adc
and
push
leave
sub
clc
in
jmp
add
data16
dec
out
lret
repz
dec
cmp
mov
push
push
sbb
jo
aam
sahf
lcall
fistps
xorl
push
gs
fldt
hlt
mov
dec
dec
cmp
lret
xor
aam
add
xor
xchg
mov
pop
xchg
mov
addr16
pop
and
xchg
push
cmp
add
sub
addr16
ret
movsl
sub
push
cs
adcl
cs
inc
daa
out
add
lea
arpl
cmp
inc
xor
push
jg
jns
adc
add
mov
jb
lcall
loop
lcall
xchg
mov
dec
into
pop
push
js
das
cltd
data16
sub
mov
sbb
icebp
push
xor
out
xchg
lock
cltd
fistps
jnp
mov
push
sarb
or
jmp
fsts
mov
xor
sbb
std
inc
sub
js
scas
inc
xor
sbbl
fistps
pop
sub
ffreep
stos
sub
popf
jmp
push
movsb
push
add
lods
aaa
stc
das
insb
mov
adc
call
cmp
jle
sbb
mov
ja
sbb
mov
into
rcrl
adc
int3
sbbl
jno
ds
icebp
jmp
rolb
sub
or
int
lcall
mov
jge
movsl
in
cltd
add
sub
or
push
and
out
cs
mov
lds
roll
lahf
sub
dec
pop
daa
mull
aad
stos
outsl
lcall
fwait
stos
and
sub
pop
xor
pop
push
jb
or
icebp
xor
sbb
ss
data16
push
popa
mov
aaa
sbb
test
adc
cwtl
cmpsl
jnp
mov
xor
cltd
add
cmp
test
rcrl
push
andl
cmp
push
mov
xor
push
call
push
lret
xor
cli
mov
incl
sar
mov
or
call
sbb
ja
pop
call
push
mov
mov
outsl
pop
jge
xchg
xchg
jmp
sbbb
js
stc
mov
cmp
mov
mov
sbb
dec
and
popa
fbstp
pop
cmpsl
mov
insb
and
in
xchg
ret
mov
aaa
and
mov
xor
cs
pushf
adc
fbld
clc
test
cmpsl
stos
cli
and
div
test
push
push
movsb
fmulp
or
aam
add
push
sbb
loopne
cmp
mov
mov
and
rolb
sbb
push
rorl
or
adc
pop
fmuls
jp
mov
sub
and
mov
jno
or
popw
test
les
and
loopne
in
or
arpl
mov
jnp
ss
fwait
sbb
lods
in
data16
fistpl
ds
insb
sti
fcomip
mov
sarb
shll
mov
rcrl
mov
insb
or
ss
xchg
lret
push
dec
add
jmp
xchg
std
mov
mov
lret
push
lahf
sbb
icebp
data16
enter
pop
inc
out
xchg
mov
pop
mov
fcoml
push
add
inc
cmp
jecxz
sbb
mov
pop
add
xchg
inc
jmp
addr16
mov
lods
test
movq
out
mov
inc
add
mov
sub
push
arpl
shll
sti
aas
call
push
cltd
les
or
fbld
sub
ja
add
pop
sarb
xchg
fs
scas
loope
pop
and
in
mov
dec
je
mov
dec
insb
shlb
xchg
dec
pop
xchg
adc
das
test
xchg
pop
loopne
lahf
loope
sti
jecxz
sub
mov
and
out
jmp
pusha
fisubrl
xor
cmc
fsubs
loope
mov
test
inc
arpl
movsb
xchg
sbb
xor
or
push
sbb
dec
or
pusha
pushf
je
jnp
ja
mov
out
pop
add
sbb
cltd
sub
xchg
rolb
das
xchg
les
or
pop
lret
cmp
movsl
push
or
and
add
fcoms
inc
or
push
cmpl
scas
mov
cmp
fdivrs
fistpl
or
sarb
push
in
mov
adc
xchg
sub
ljmp
outsl
xor
test
jecxz
fistps
pop
add
sbb
hlt
pop
mov
jnp
mov
pop
mov
lods
cmp
lret
in
push
jns
loope
or
inc
mov
roll
sub
insl
hlt
arpl
or
pushf
adc
mov
xchg
lret
sub
movsb
sbb
out
xor
cmc
xchg
inc
xor
scas
mov
inc
stos
pushf
sub
xchg
ret
outsl
loope
cltd
or
adc
adc
clc
aad
cs
out
adc
mov
inc
mov
int
xchg
push
ret
rol
std
sbb
cs
fsubl
stc
loopne
aas
cmp
es
mov
adc
push
into
or
stos
js
js
jb
stos
xchg
push
add
cli
mov
into
filds
pop
mov
mov
rcll
inc
in
stc
mov
inc
cltd
sub
ss
cmp
push
fnsave
mov
mov
mov
jle
sarb
cs
pusha
jg
insb
cmp
int
ljmp
cmp
cs
clc
fs
push
loopne
xor
lds
and
sub
lods
sub
xchg
inc
insb
dec
mov
lcall
mov
pmaddwd
imul
test
ja
out
push
sbb
out
icebp
in
mov
sbb
rcrb
and
push
lahf
push
arpl
mov
pop
movsl
out
jmp
fucomp
inc
frstor
enter
ret
dec
fdivs
mov
sahf
and
or
or
movsb
testl
out
mov
or
jle
cmp
and
dec
pop
movsl
into
xor
cwtl
mov
push
out
sub
mov
movsl
inc
mov
mov
pop
mov
out
sti
jns
popf
sbb
outsb
icebp
sti
aaa
adc
insb
mov
imull
dec
aam
mov
in
jl
jb
clc
sbb
add
jae
outsl
and
outsb
je
dec
fidivs
ret
mov
add
jge
mov
test
fidivrs
in
jns
popf
adc
aad
movsb
lock
sbb
rcrl
jmp
test
lds
leave
jno
xchg
popa
repz
mov
ja
pop
dec
mov
cltd
scas
daa
movsl
fistps
dec
sub
nop
mov
shll
stos
daa
jnp
inc
pop
sbb
mov
jge
mov
rcrl
or
je
jmp
sub
pusha
adc
sub
les
xor
push
xlat
fdivs
push
inc
test
adc
sahf
jno
fsubs
enter
sbb
xor
sub
inc
mov
fimuls
pop
sub
xchg
daa
inc
sahf
inc
jno
int3
push
or
cs
xchg
push
xchg
data16
cmp
and
push
and
shl
or
stos
icebp
nop
sbb
aad
std
out
stc
cltd
icebp
vmaxpd
jg
mov
sub
aam
xchg
rcll
cltd
fs
xor
sub
das
jle
fisubrs
inc
sbb
imul
ficompl
and
fcoml
fs
cwtl
aam
test
add
xor
fld
cmp
add
movsl
mov
mov
adc
das
in
mov
les
fcoml
popa
iret
in
wrmsr
xchg
or
lret
pop
inc
idiv
lret
sub
mov
in
fistpl
add
sbb
fwait
cli
pop
shrb
xor
movsb
and
xchg
stc
cs
add
mov
add
sub
inc
lock
test
mov
adc
out
outsb
add
into
xchg
jno
mulb
cmp
aam
hlt
mov
rcrl
lahf
pop
mov
jp
shll
repz
jecxz
cs
test
frstor
out
fwait
lret
pusha
aaa
stos
lods
ret
or
mov
pop
inc
xor
pop
cmpsb
adc
movl
test
ss
xor
das
xchg
xchg
shlb
xor
pop
rorl
scas
and
cmp
sub
xor
lea
loope
sub
push
fcmovnu
xchg
push
stos
adc
sarb
push
mov
js
jl
lret
cld
mov
and
lods
sahf
jle
pop
dec
mov
test
jg
jmp
and
rcrl
cli
inc
test
shl
inc
out
pop
mov
pusha
cli
xlat
daa
push
out
dec
enter
mov
lea
mov
xchg
adc
outsl
mov
sbb
bound
pop
fidivs
and
cmpsb
sbb
ss
pop
mov
imul
aam
lret
and
mov
scas
jge
scas
movsb
jl
fisttpll
loopne
push
pop
test
fwait
imulb
fsubr
dec
mov
mov
jnp
mov
cli
popa
jo
popa
push
mov
test
jmp
mov
jne
fstl
add
into
imul
dec
ljmp
outsl
or
or
and
leave
into
repz
dec
cmp
rcrb
movsl
sbb
fisttps
adc
jo
sbb
xchg
in
fdivs
dec
rorl
mov
adc
ret
js
sub
ror
andl
ror
in
cmp
out
loop
leave
mov
in
lods
mov
inc
or
idivb
xor
int3
test
enter
sub
mov
jg
xchg
add
add
movsl
adc
lahf
adc
in
fwait
sbb
pop
pop
mov
orb
adc
je
call
cmpsl
jg
out
enter
daa
mov
lcall
es
in
jo
imul
jo
xor
jb
adc
adc
adc
test
sbb
notb
and
dec
dec
pop
mov
lods
orb
movsb
xchg
aam
mov
sbb
arpl
fcmovb
cmc
into
mov
mov
pop
or
std
mov
lds
lcall
xor
int3
fidivrl
sete
negl
and
cmp
push
or
aas
cmpb
push
sbb
std
add
push
mov
sub
mov
rcrb
and
hlt
pop
test
test
push
push
push
and
pushf
dec
dec
fwait
imul
cmc
int
add
mov
cmp
out
loope
xchg
jl
loopne
lock
mov
mov
mov
lock
sub
push
push
jge
hlt
sub
or
mov
sahf
lcall
dec
adc
outsb
insb
daa
repnz
rolb
and
or
sbb
or
out
int
mov
dec
mov
icebp
or
cli
sub
popa
flds
bound
dec
mov
push
push
aad
div
jge
aaa
mov
lea
dec
and
adc
loopne
cwtl
leave
imul
insb
lock
shrl
mov
shrl
fmul
jmp
fistpll
fwait
repz
sub
lahf
adc
mov
mov
sahf
add
jnp
test
jmp
popf
lds
stc
lret
aas
lods
loope
jg
int3
stos
repz
adc
mov
aad
pop
xor
xchg
and
jmp
sub
subb
data16
loopne
inc
lcall
adc
add
addr16
sub
sub
push
inc
int
dec
aas
hlt
mov
inc
loope
cwtl
jp
out
or
mov
mov
inc
dec
cld
shlb
jo
imull
fidivrs
mov
mov
mov
repnz
sbb
lahf
push
and
push
sbb
or
fcmove
mov
jecxz
pushl
ss
jb
bound
arpl
cli
jle
sbb
int3
lret
mov
les
xchg
cmp
int
xlat
repnz
lock
pop
leave
inc
lahf
jecxz
and
lods
push
mov
inc
mov
inc
xchg
imul
cmpsb
xorl
and
or
sub
and
shl
fnstcw
inc
mov
fidivs
popf
repz
lea
rcl
push
lea
pop
mov
inc
jecxz
cvtps2pd
sbb
fs
push
aaa
call
or
add
and
mov
outsl
mov
add
ds
cmpsb
cpuid
push
jmp
or
mov
mov
cwtl
jnp
xchg
lea
stos
rcrl
inc
les
mov
das
sub
push
xchg
add
push
int
incb
ja
cmp
pop
outsb
sbb
xor
popa
outsl
pop
scas
icebp
rcll
mov
and
fcoml
push
fcoms
jl
sahf
jnp
jo
sti
cmp
xor
inc
xchg
sub
lods
xchg
shlb
sarw
lret
mov
add
or
in
test
push
repnz
ret
int3
jmp
int
out
mov
inc
repnz
dec
sbb
mov
out
mov
dec
lods
dec
add
notl
jne
mov
test
testb
push
vcvtsd2si
sti
in
jecxz
jnp
jbe
cmp
and
add
testl
mov
jbe
rcrl
cmc
loop
xor
cmp
push
les
shll
xchg
jns
mov
lods
jmp
adc
mov
xorb
jnp
je
jns
rol
inc
xchg
outsb
cmp
pop
sbb
jbe
add
movsb
xor
lcall
add
ret
cmpl
inc
or
jnp
jle
cmp
repnz
sbb
ficoms
inc
sarb
mov
xchg
push
mov
es
or
pop
jg
push
jne
adc
enter
mov
popa
iret
loop,pt
inc
ret
xor
add
stc
out
js
cmc
and
mov
inc
lods
leave
dec
pusha
rcrb
pushf
jns
sti
inc
lahf
xchg
rcrb
fabs
xor
jno
push
sbb
sahf
in
popw
mov
test
pop
ds
scas
or
jmp
adc
cltd
xchg
jl
sbb
ret
imul
lds
adc
jns
mov
adc
sbb
dec
adc
aam
inc
xor
adc
jecxz
nop
jae
add
cmc
push
into
or
les
movsl
lcall
aam
cmp
push
xchg
add
cltd
dec
xor
sbb
call
pop
cwtl
out
scas
imul
push
sbb
mov
in
scas
cli
xorb
or
cmc
lds
cmpsb
lea
aad
push
in
adc
mov
cs
jnp
mov
mov
dec
push
addr16
decl
xchg
jb
sbb
cmp
push
les
cmp
xlat
rorl
sub
adc
in
xchg
mov
push
mov
mov
push
sbb
gs
imul
cmp
jmp
rorb
dec
mov
jo
pop
fbld
jns
mov
push
or
jb
cmp
lret
sbb
int3
push
mov
js
paddusb
push
lock
lea
testb
shll
xor
sub
dec
cld
fmuls
xchg
paddq
stos
xchg
sti
mov
adc
fidivrs
mov
xor
adc
xlat
lods
and
pop
sbbb
test
mov
fst
mov
mov
cmpb
dec
adc
mov
addr16
fildl
xchg
xor
loop
fisubrs
jns
or
xor
std
fcmovbe
mov
xor
movsl
shl
pop
push
ds
push
xor
es
mov
loop
add
test
lea
add
cmc
push
imul
and
pop
cld
push
xchg
dec
xchg
and
and
jne
jns
test
lods
aaa
aad
test
adc
andb
xchg
test
or
xor
movsb
mov
cmpsb
xchg
and
fisttpl
xchg
add
mov
std
mov
adc
dec
out
sub
loope
cmp
jmp
cmp
data16
out
sbb
cmp
dec
and
adc
cli
xchg
scas
mov
jns
mov
int
call
nop
jae
mov
fdivs
push
std
lcall
mov
lcall
sbb
sti
push
mov
lods
fld
jne
ja
cwtl
scas
push
insb
adc
std
fidivl
lret
test
arpl
aas
es
cmp
mov
dec
push
pop
cwtl
dec
xchg
mov
outsb
fisttpl
shl
insb
addr16
ret
jp
je
jbe
cltd
adc
cmp
push
mov
imul
adc
les
mov
xor
fsubl
xchg
popf
jg
sbb
icebp
es
xchg
and
sub
mov
sbb
mov
hlt
inc
movsb
scas
and
stos
andb
xchg
mov
cltd
inc
mov
push
pop
push
shrl
mov
inc
icebp
mov
rcr
dec
mov
gs
sahf
xlat
or
insl
pop
pop
sub
jne
imul
iret
push
and
bound
scas
xchg
and
dec
mov
inc
stos
cmp
sub
lea
cld
loop
je
or
mov
xchg
jecxz
dec
push
out
fsub
add
lahf
fs
adc
push
loopne
jae
xchg
dec
jae
pop
mov
js
cmp
jg
nop
pop
iret
rcr
mov
daa
pop
cwtl
loop
hlt
aad
lret
push
inc
jl
inc
mov
dec
dec
mov
jnp
or
lret
or
rorl
bound
add
jge
mov
pop
into
icebp
cmc
popl
mov
cmc
jl
xor
mov
or
outsb
push
jge
fnsave
push
test
pop
out
mov
push
orb
or
lods
xchg
pop
xchg
aas
sahf
dec
and
push
into
cs
sub
pushf
jne
jmp
fiaddl
mov
pop
mov
mov
seto
in
int
or
cmp
int3
jecxz
cld
cmp
push
jae
in
leave
adc
mov
adc
icebp
fisttps
ficoml
lods
and
fisubl
mov
push
adc
sahf
int3
cs
sbb
or
mov
scas
mov
push
lock
or
jp
test
mov
mov
rorl
imull
das
in
dec
mov
cmp
mov
inc
cmpsb
stc
adc
dec
mov
test
lock
and
jg
inc
mov
lea
and
push
aam
mov
mov
xor
pop
movsl
add
mov
mov
out
aaa
sbb
inc
pop
mov
iret
mov
rorl
add
xchg
dec
pop
inc
jecxz
adc
in
pop
mov
std
adc
icebp
push
xor
lahf
movsb
cmp
pop
std
sub
push
adc
inc
data16
iret
inc
imul
mov
mov
fcmovbe
data16
loope
mov
call
test
mov
or
shlb
or
jns
cmp
push
movsl
pop
inc
jnp
inc
and
cmp
mov
mov
or
jo
outsb
sbb
outsb
dec
testb
aam
xor
sbb
lea
rclb
cld
scas
insl
loop
add
rcr
repz
insl
dec
adc
jnp
mov
pop
dec
outsl
mov
lret
mov
push
fsubl
icebp
clc
ljmp
mov
add
scas
jmp
jg
clc
mov
push
repnz
bound
test
jmp
jo
dec
dec
or
ret
push
jo
mov
mov
add
repnz
pop
cli
stos
xchg
sti
loope
call
adc
pushl
rorb
xlat
cmp
push
push
negb
mov
ja
test
test
scas
mov
pop
mov
jmp
lret
sbb
adc
arpl
stos
sbb
push
test
mov
add
stos
inc
lods
cwtl
mov
pop
das
movsl
testb
adc
xor
mov
les
mov
sti
imul
inc
je
mov
in
arpl
out
xlat
leave
mov
sub
jge
push
xor
xchg
mov
adc
xchg
mov
jae
and
mov
in
mov
lret
pop
bound
test
sub
loopne
pop
pop
sbb
es
or
lcall
cld
xchg
xor
xchg
jb
mov
cmpl
lea
mov
jecxz
xchg
mov
push
loope
mov
div
notl
insb
push
dec
inc
sub
push
jl
push
push
loop
mov
or
lods
dec
jbe
sbb
or
lret
push
push
les
mov
dec
push
jnp
cmp
cmp
scas
std
out
outsb
mov
lds
call
mov
pop
loope
sbb
iret
ljmp
fcomi
loopne
sti
mov
mov
das
test
js
das
unpckhps
inc
inc
dec
xor
and
sbb
out
stc
mov
in
iret
add
ljmp
add
nop
addr16
or
inc
test
lahf
sbb
dec
aad
out
sahf
inc
enter
jo
xchg
cmpsb
adc
je
or
arpl
or
lahf
outsl
jge
out
jmp
jno
int
in
or
hlt
in
out
js
fwait
mov
imul
outsl
cmp
or
mov
inc
aad
jno
sbb
dec
fbld
in
sub
pop
cmp
pushf
pushl
jnp
mull
lds
pop
xor
adc
lock
pop
fcoms
xchg
cld
mov
imul
js
popf
dec
je
daa
sub
in
push
js
xchg
xor
jbe
push
call
add
test
out
mov
cmp
sub
adc
scas
and
jg
rcll
mov
negb
xchg
push
mov
push
or
pushf
test
dec
xchg
icebp
add
xchg
cwtl
dec
adc
or
pop
inc
outsl
aad
sbb
mov
loop
fbstp
fstpl
call
dec
fidivl
enter
repnz
out
xchg
xor
ja
loop
mov
mov
mov
xchg
lcall
mov
test
les
aad
cld
xchg
xchg
mov
xchg
mov
or
push
xor
xchg
mov
pop
outsb
test
in
or
scas
pop
sub
mov
mull
lret
lods
ds
mov
add
xchg
mov
pop
int3
divl
adc
pop
inc
repnz
loop
fcom
mov
stos
sbb
clc
push
jl
dec
pop
popf
adc
rcrb
in
insb
rorl
mov
nop
hlt
jle
pop
pop
fdivr
fnstcw
ficompl
addr16
ljmp
rcrl
cmpsl
js
and
jmp
push
loope
stos
bound
scas
inc
adcl
cli
loope
lcall
jne
movsl
and
std
int3
stos
roll
and
push
mov
dec
mov
cmp
fwait
icebp
test
popf
push
movsb
psubb
data16
jns
push
mov
mov
push
jmp
sub
fsubp
dec
inc
out
out
xor
adc
xchg
inc
inc
stos
rcll
mov
push
sbb
icebp
in
jmp
or
movsb
scas
mov
sbb
ja
js
arpl
pop
mov
mov
and
and
insl
mov
insb
lret
jge
mov
aas
les
int
push
jnp
jo
pushf
sbb
mov
psubsw
xor
sbb
repz
push
sub
mov
push
push
fildl
dec
push
lret
fsubl
ja
rcrb
mov
jne
mov
pop
popf
add
out
mov
das
inc
das
aad
popa
ficoms
and
adc
fwait
loop
jnp
incl
lods
jecxz
int3
insb
in
fbld
jg
xlat
jb
push
std
cmp
xor
imul
mov
jne
or
mov
inc
js
insl
loopne
cmc
sub
xchg
jecxz
mov
or
loop
sub
mov
test
add
jmp
pop
outsb
inc
les
fisttpl
xor
orl
outsb
jbe
inc
stos
lcall
jb
jne
loopne
std
jp
pop
xchg
inc
add
mov
xor
inc
push
xor
fs
dec
mov
inc
push
fdivrl
pop
lods
jmp
dec
addr16
cmp
out
xor
popa
cmpsb
cwtl
and
cwtl
or
cld
mov
lds
jg
sahf
xchg
shll
hlt
into
daa
clc
fistl
andb
jns
adc
cmpsl
and
inc
adc
mov
test
movsb
cmpsb
jns
sbbl
jae
leave
mov
xor
adc
jp
add
mov
in
les
and
xchg
mov
lock
pusha
or
loopne
inc
jp
jle
add
pop
adc
inc
xchg
int3
xchg
sbb
mov
or
out
adc
out
shlb
sbb
xchg
addb
and
lods
or
lods
lahf
test
bound
sbb
pop
jecxz
push
icebp
or
jecxz
mov
inc
xorl
mov
jo
mov
ret
jle
sarb
adc
insl
bound
push
fnsave
mov
psraw
xor
leave
inc
push
insl
sub
leave
mov
and
mov
xchg
les
adc
fcmovnbe
jl
lds
jb
pop
jmp
jmp
or
dec
xor
int
imul
push
sbb
stos
inc
aas
push
dec
fiaddl
pop
loope
test
pop
sbb
ljmp
cld
scas
jecxz
sti
outsl
or
push
fdivs
jae
jae
aaa
lret
jecxz
xchg
or
lret
jmp
cmpl
pop
mov
clc
popa
ljmp
cmp
mov
rorl
inc
and
loope
repz
dec
aaa
aas
mov
add
into
and
fstpl
lea
inc
imul
pushf
ljmp
sti
push
outsl
dec
aas
test
test
data16
mov
pop
push
out
push
inc
sbb
mov
mov
scas
in
sub
popf
inc
cmp
rclb
std
pop
xor
cmpsb
fucomi
aas
cld
mov
push
sub
into
out
xchg
sub
scas
and
push
popa
jb
data16
orl
sbb
mov
ss
push
jnp
gs
jg
daa
cs
test
xor
mov
aas
mov
or
dec
mov
mov
cmc
icebp
fiaddl
add
xor
jbe
fwait
cmp
jbe
xor
cmp
xlat
mov
dec
out
or
js
cmp
inc
in
pushf
inc
jnp
clc
je
lret
fwait
aaa
push
cmp
bound
sbb
mov
or
push
repnz
orb
adc
aam
dec
dec
pop
arpl
int
popa
leave
jae
jp
and
sahf
jns
dec
or
mov
in
mov
inc
popf
pop
jmp
sub
leave
sbb
push
mov
sbb
dec
mov
aad
fidivrs
nop
jno
iret
or
mov
in
into
int
cmc
call
dec
icebp
and
mov
push
loop
lea
dec
pushl
dec
imul
dec
mov
jb
inc
lods
mov
jne
jae
or
movsb
cltd
jmp
jle
jae
sti
popa
lea
pushf
je
movl
mov
jge
lods
shlb
std
lods
arpl
add
mov
inc
into
adc
sub
push
add
cmp
jg
divb
and
jb
add
cmpsb
xor
push
int3
outsl
mov
sub
scas
mov
xor
data16
mov
std
testb
sub
fildll
mov
push
jmp
stos
call
adc
ret
movsb
out
call
push
in
inc
test
adc
dec
repnz
in
rcrb
popa
fidivrs
jp
adc
out
mulb
push
pop
cmp
pop
sbb
jne
iret
jnp
push
inc
add
inc
ret
inc
addr16
xchg
sti
xorl
xchg
inc
jecxz
test
cmc
adcb
mov
sbb
cltd
das
sub
inc
inc
mov
in
jnp
dec
pop
outsb
shl
cmp
fadds
xlat
or
iret
fisubs
ds
lret
or
inc
ficompl
jnp
cli
push
add
repz
pushf
shlb
inc
std
stos
sbb
xchg
fwait
mov
cmp
sahf
jp
push
jbe
insl
jecxz
popf
add
cwtl
repz
xchg
xor
xor
mov
jle
stos
loop
fsubrs
push
int3
adcb
mov
jg
idiv
arpl
and
ja
lahf
shrl
pusha
add
mov
jecxz
ret
repz
sbb
mov
mov
ljmp
and
aaa
ss
imul
popa
push
adc
add
and
push
jo
popf
mov
scas
inc
push
lret
mov
dec
popa
outsl
lods
sub
dec
add
inc
cmp
lret
cmp
je
sbb
loope
frstor
bound
test
xor
jno
mov
inc
test
pop
nop
inc
data16
cmp
push
orb
pop
jg
test
push
push
popf
push
inc
daa
add
loope
stos
and
adc
insb
call
sub
dec
pop
sahf
mov
push
inc
bound
adc
jmp
mov
outsl
mov
dec
adc
xchg
sub
xchg
push
sbb
or
push
hlt
sbb
out
jbe
adc
xchg
inc
fdivrl
outsl
and
loopne
ljmp
daa
push
lcall
stos
push
cmp
stos
mov
xlat
xor
jp
sub
dec
jnp
shll
xchg
jmp
adc
hlt
popf
bound
inc
mov
push
aad
push
cmp
loope
mov
cmp
sbb
pop
ja
fld
in
out
push
test
cmp
xchg
jb
std
push
sbb
movsb
iret
sbb
inc
shll
adcb
int3
std
ds
out
pop
nop
and
out
push
loope
cmp
test
sahf
xor
mov
int3
add
sti
sbb
inc
movsl
loop
jae
or
push
push
fiadds
loopne
lods
and
mov
decb
mov
cmp
lcall
stos
sbb
decl
pop
nop
out
outsl
leave
loope
pop
stc
clc
jno
xchg
test
inc
pop
insb
lret
cmpl
xcrypt-ctr
cmpsl
sbb
test
test
or
scas
rorb
mov
mov
lods
add
insb
xchg
mov
outsl
mov
cs
cld
call
push
dec
divl
addr16
and
mov
push
jbe
fmuls
dec
je
xor
cmc
add
pop
push
shl
dec
mov
rcr
out
adc
pop
rcrl
filds
dec
imul
dec
and
cmp
sub
rcr
inc
add
xor
jge
xor
scas
push
stc
lret
hlt
lock
mov
mov
gs
outsb
ss
cmc
imul
jbe
mov
cmp
sbb
xchg
adc
hlt
pop
lcall
gs
insb
push
dec
in
pop
adc
push
cmp
aas
in
pop
cmp
jae
stos
push
ret
lods
decb
lcall
scas
pop
ficoml
pushf
iret
sub
inc
das
push
add
ret
sbb
jp
scas
imul
or
add
adc
sbb
aas
int3
push
cmc
scas
jo
add
stos
lahf
ficomps
or
pop
daa
mov
scas
popf
inc
or
xchg
ret
xchg
pop
roll
das
mov
xor
cmpsl
ret
call
sbb
pop
adc
cmp
pop
jp
mov
ds
add
sub
aas
jo
xor
mov
fistpll
and
in
or
popf
test
in
lret
jno
or
sarl
xchg
add
in
push
sahf
stc
dec
and
insl
adc
lahf
orb
inc
dec
aam
fistl
pop
xchg
and
jb
jmp
jl
leave
je
jl
adc
inc
ja
adc
mov
scas
sub
popa
cmp
out
jbe
dec
cmpsb
xor
push
repz
inc
jmp
ret
repz
out
cmp
sub
xchg
jb
ficoml
xor
bound
test
lods
mov
xor
pop
repz
add
outsb
std
sub
push
push
jae
fs
addr16
mov
cmpsb
mov
popa
sub
xchg
cmp
mov
jge
jmp
lods
loop
cld
jno
sbb
pop
push
rcl
mov
fstpt
push
fs
mov
xor
insl
out
cmpl
sbbb
mov
negl
inc
das
jmp
rol
mov
or
or
js
shld
mov
maxps
imul
xchg
fisttpll
xor
mov
cli
cmp
or
jbe
push
or
push
fldcw
lea
pop
sahf
inc
add
out
and
fwait
jmp
inc
xchg
arpl
test
test
and
jmp
ds
pop
pop
jg
inc
xchg
cli
stos
xor
push
stc
aas
sbb
and
out
push
push
mov
scas
daa
enter
mov
jb
mov
mov
ja
xchg
outsb
cmp
cwtl
out
fstpt
sbb
mov
mov
inc
and
push
mov
fdivp
or
xchg
lock
stc
repnz
orl
mov
nop
fisttpll
mov
arpl
mov
lock
js
cmpsl
xor
scas
pushf
cltd
mov
clc
mov
mov
clc
push
aaa
xor
mov
cmp
loopne
xor
in
or
add
movsl
sbb
fcmovnu
xlat
inc
call
push
popa
jb
sbb
sbb
jb
push
cmp
cmpb
or
or
rcrb
fwait
xor
sbb
loope
sub
lods
sti
ret
adc
out
out
adc
loop
test
mov
arpl
out
jp
dec
int3
fldcw
insb
push
cmp
push
outsl
pop
mov
pusha
std
inc
and
scas
cmpl
jmp
aas
sahf
popf
es
mov
mov
lret
fs
and
cmpb
je
icebp
pop
push
cltd
mov
insb
mov
add
ljmp
out
loop
inc
aas
push
or
fwait
adc
daa
mov
bound
outsb
outsl
or
pop
and
test
push
insl
sbb
jae
gs
push
jp
clc
cld
jmp
fists
cli
push
lfs
xchg
inc
mov
int
pop
dec
out
mov
adcl
ss
xchg
xlat
xchg
not
ds
sbb
popf
jnp
pop
inc
xor
ds
fwait
jmp
jmp
rol
xor
or
int3
movsl
ljmp
ja
push
lock
mov
iret
and
add
fidivrl
pop
gs
pop
add
sub
ljmp
inc
mov
push
mov
inc
in
or
lahf
lcall
and
ss
ret
lock
xchg
sbb
mov
push
les
pop
cmp
inc
xchg
xchg
aad
icebp
in
sbb
stos
push
mov
lret
sbb
xchg
cli
dec
sbb
sub
into
adcl
iret
push
cs
xchg
andnps
mov
aam
ret
and
roll
aaa
outsl
outsb
adc
and
dec
xorl
fidivs
mov
mov
cmpb
mov
ja
lock
or
aas
push
subl
and
push
lock
fildll
xor
jns
mov
push
adc
loop
int
xor
test
test
nop
push
imul
scas
xchg
pop
aam
das
adc
cmc
icebp
sub
pushaw
xchg
dec
leave
cmpsb
push
jae
dec
dec
lret
jp
sbb
or
scas
lahf
hlt
push
inc
mov
add
movsb
popf
xchg
jo
andl
jmp
dec
stos
mov
leave
sub
out
or
mov
mov
ficomps
jns
rcrb
mov
loope
inc
dec
jno
pop
pop
addr16
pop
out
in
leave
adc
inc
jg
in
loopne
popf
push
and
xchg
mov
aas
push
dec
not
loop
jl
mov
iret
mov
hlt
jl
loope
or
and
mov
push
rol
mov
out
mov
nop
cs
jb
rorl
inc
icebp
add
inc
cmc
sarb
dec
popa
roll
push
test
or
test
and
xlat
pop
sbb
insl
aas
sahf
pop
aad
inc
jb
xor
out
arpl
xlat
mov
sbb
xor
mov
jns
inc
rcrb
inc
ja
xchg
push
add
outsl
clc
fsts
jl
outsl
sbb
cli
dec
and
xchg
int3
rorb
mov
adc
jns
or
mov
xchg
test
xchg
mov
pop
jmp
stos
or
or
cli
ds
mov
nop
cli
out
fldt
sbb
jge
adc
jl
cwtl
out
mov
add
rcr
dec
push
fcmovnb
outsl
push
cli
les
int
cwtl
mov
mov
or
sbb
loope
dec
sbb
dec
es
push
mov
sahf
aad
add
loop
data16
or
push
jl
movsl
mov
out
add
mov
xchg
mov
xor
testb
or
cmp
inc
xchg
add
pop
sbb
roll
mov
int
lahf
test
push
out
mov
mov
js
js
imul
mov
gs
push
mov
roll
outsl
sbb
movsb
mov
rcr
lds
iret
cmp
xchg
imul
sub
out
or
stc
and
inc
lods
push
xor
std
jbe
inc
sbb
fisubs
pop
mov
fstps
add
gs
jo
xor
push
xchg
clc
jp
rclb
lea
mov
fdivrp
mov
mov
xchg
daa
pminub
int3
mul
pushf
movsl
nop
out
movsb
jbe
cltd
imul
jle
jnp
xlat
add
mov
push
jmp
icebp
pop
sti
push
in
fdivrl
mov
jo
out
mov
or
test
fstpt
lret
ficomps
outsb
call
lahf
test
sub
pop
mov
mov
adc
inc
fwait
icebp
outsb
ret
lcall
out
xchg
sbbl
jge
imul
push
xlat
pop
loop
add
hlt
dec
fisubrl
pusha
xor
cmpsl
lods
insl
loopne
add
mov
or
mov
pop
nop
das
sub
mov
sbb
and
popf
cwtl
test
and
xchg
cmp
ret
lahf
cmp
sbb
add
adcl
daa
xlat
and
stc
das
leave
adc
sbb
push
mov
lods
push
enter
jge
movsb
push
add
test
scas
fimuls
mov
mov
mov
cmpl
test
fstpt
mov
nop
pop
out
xchg
xor
inc
imul
aad
or
outsb
cmpsb
sbb
mov
mov
js
repnz
add
and
pop
dec
push
test
sbb
push
stos
lahf
mov
dec
std
push
xor
pop
es
pop
arpl
repnz
pop
sbb
cs
pop
jno
adc
xor
push
mov
test
cmp
sub
nop
scas
and
addr16
mov
ljmp
insb
sti
mov
lock
pop
insl
inc
sub
outsl
jo
sbb
popf
movsb
add
push
or
pop
xlat
mov
in
xor
pop
pusha
cmp
xor
into
cmc
cmp
push
out
mov
pushl
and
cmpb
xchg
fisubrs
inc
and
mov
jno,pn
fstps
lcall
dec
adc
repz
les
popa
paddq
push
and
jbe
gs
dec
push
jecxz
sahf
mov
cwtl
xchg
mov
outsb
mov
xchg
fwait
inc
mov
cli
int3
push
mov
mov
add
les
xorb
pop
push
mov
pop
dec
inc
dec
add
pop
push
or
xor
jle
mov
lret
adc
cmp
sub
inc
push
or
push
mov
sbb
ss
dec
imul
push
add
repnz
pop
mov
cltd
mov
loopne
ret
add
pop
in
rcll
les
push
jecxz
fnstenv
mov
dec
imul
xor
push
sbb
sbb
or
xchg
add
je
gs
xor
add
jp
out
scas
mov
inc
fiaddl
nop
test
in
jmp
shl
add
dec
cltd
pop
add
repnz
jo
out
repnz
rcrb
je
jo
mov
mov
push
popf
cmp
jno
adc
xchg
sbb
xchg
inc
repz
push
enter
mov
insb
pop
cmp
dec
cld
pop
jnp
mov
aaa
xor
stos
push
test
out
mov
pushf
inc
xchg
sbb
out
jle
icebp
jmp
xor
es
dec
or
in
lret
loop
dec
mov
lret
inc
fwait
mov
call
mov
xchg
lock
push
adc
cmp
es
fs
sbb
mov
jecxz
dec
pop
or
psrlw
mov
inc
roll
and
out
xor
and
and
scas
in
jo
xor
inc
or
pop
and
addr16
stos
cmp
add
in
jae
daa
dec
add
dec
daa
pop
ficoml
jns
adc
push
push
push
pop
jnp
popa
in
cmp
repz
sub
inc
cmpsl
rcl
repnz
xchg
add
mov
cmp
test
iret
andb
call
cmp
ret
push
insb
push
mov
jo
and
repz
add
or
add
daa
out
jae
cmpsb
push
ret
pop
daa
sahf
addl
jmp
aam
mov
js
negb
cwtl
ds
in
dec
cvtdq2ps
add
pop
scas
xchg
and
popf
sbb
lods
cmp
jnp
lods
sbb
leave
ljmp
mov
cld
mov
neg
mov
out
jle
inc
repnz
sub
jo
fwait
int3
mov
xor
enter
and
sub
push
xor
incb
fs
scas
fnstcw
mov
sbb
push
adc
mov
js
jmp
enter
xor
ss
push
std
mov
aas
popf
imul
aam
dec
pop
movsb
adc
enter
ficompl
xchg
aas
andl
sbb
and
jbe
adc
lcall
jecxz
ja
leave
sub
leave
mov
jmp
test
out
jae
dec
jb
pop
sub
fstps
sub
cmp
dec
mov
cmpb
jno
cs
jne
cvtps2pi
cwtl
test
xor
dec
imul
sub
iret
mov
mov
pop
sbb
pop
xchg
int
and
addr16
cmp
inc
sbb
pop
mov
sbbl
mov
adc
jnp
icebp
mov
repz
xor
bound
inc
mov
jg
sbb
xchg
sbb
loopne
cmc
in
jecxz
mov
dec
das
enter
mov
aaa
stos
ror
sub
mov
sub
cmp
daa
dec
jmp
dec
adc
add
out
stos
pushw
add
jno
fs
or
gs
add
mov
add
test
xchg
mov
and
push
mov
sub
sub
sub
and
clc
fs
mov
jle
push
loopne
pushf
shr
lahf
je
xchg
inc
dec
out
clc
shl
xchg
loopne
movb
dec
and
lahf
mov
aam
insl
pop
push
pop
sub
jecxz
push
dec
mov
mov
mov
mov
xchg
in
adc
pop
adc
aad
xchg
push
sub
mov
sub
mov
dec
xchg
jg
pop
push
xchg
js
mov
xchg
sub
stos
push
cs
dec
fisttps
into
pavgb
pop
mov
jbe
mov
into
pop
fstpl
in
insl
punpckhwd
cmp
dec
xchg
lahf
add
xor
lods
imul
and
add
xchg
int3
ljmp
cmp
fmull
repz
imul
xor
popf
std
cmp
and
push
fldl
fadds
mov
inc
mov
pop
pop
xchg
cmp
repnz
shll
sbb
mov
adc
idivb
int
nop
lret
popa
mov
jbe
imul
je
fdivrs
pop
add
andl
jg
jg
int
idivb
fs
shlb
add
cwtl
lock
sahf
into
jb
iret
jmp
mov
sub
pop
repnz
arpl
test
nop
cmc
test
jmp
dec
pop
sbb
jno
fcmove
push
dec
and
jmp
adcb
data16
sbb
jne
in
jecxz
fnop
push
pusha
adcb
shl
sarl
mov
push
aas
fucomip
out
leave
xlat
mov
mov
cmp
mov
movsb
lock
mov
out
cld
or
sbb
shlb
ds
movsl
sahf
jno
mov
mov
int
mov
push
mov
insb
adc
and
adc
mov
repz
or
cmp
lea
or
pop
cli
mov
popa
push
repnz
icebp
decb
ljmp
ds
loop
adc
mov
and
pusha
push
dec
popl
mov
scas
pop
push
jecxz
xchg
leave
xchg
imul
mov
sbb
out
call
out
sbb
adc
hlt
push
and
leave
add
inc
loop
xchg
sti
add
mov
push
shr
mov
je
ja
sub
xor
inc
cld
jne
cli
fsubrp
or
and
loopne
cli
lods
cmp
sub
inc
dec
popf
loope
xchg
push
mov
sub
push
ja
mov
dec
dec
xchg
pop
aam
test
clc
inc
push
loopne
push
outsl
test
aam
in
daa
test
mov
test
repz
fldenv
faddl
scas
pop
aam
aad
mov
movsl
ret
push
shl
jo
cltd
and
or
lcall
stos
outsb
repz
stc
xor
sub
lock
jb
clc
jge
push
adc
pop
fistl
gs
push
jg
mov
xchg
cltd
push
sub
or
adcl
je
bound
rcll
jmp
ljmp
push
fldt
fisubs
out
iret
dec
in
addb
pop
minps
inc
int
mov
add
outsl
or
outsb
mov
pop
sbb
repnz
inc
cmc
cmpsl
dec
mov
adc
xor
xchg
pop
add
mov
lds
insl
mov
ljmp
mov
mov
xor
sub
xor
lret
std
pop
or
jns
adc
jl
push
testb
push
or
inc
jecxz
out
ret
int3
fldl
out
mov
stos
xchg
jb
xor
addr16
incl
in
nop
pop
pop
imul
and
out
out
xchg
subb
scas
fisttpl
fisubl
lea
dec
imul
push
adc
mov
dec
pop
cmp
lret
pop
stc
inc
mov
jb
fwait
imul
cmp
mov
repz
dec
jp
in
enter
inc
cwtl
or
mov
mov
iret
jnp
xchg
fs
dec
or
adc
xor
rolb
lock
add
aaa
hlt
mov
cli
pop
cmp
cmp
adc
sbb
push
or
push
ja
stc
xchg
inc
mov
aam
xchg
sub
push
jbe
mov
xor
xchg
outsl
push
ja
mov
mov
sub
pop
inc
adc
ret
test
data16
xor
std
sahf
push
cld
cmpsb
test
mov
lret
pop
movsb
in
push
pop
into
cltd
adc
xor
test
loope
cmc
lret
mov
push
pop
inc
int
dec
or
ret
test
scas
js
aas
cwtl
test
lahf
es
das
dec
jmp
jmp
aaa
sub
popa
outsb
inc
jnp
dec
and
pop
vpcmpeqd
and
jno
lods
xchg
popf
xchg
adc
mov
inc
pop
mov
xchg
sub
fs
dec
out
mov
and
das
or
sbb
out
xchg
pop
mov
lahf
xor
es
ss
xchg
insb
add
or
negl
nop
sub
add
aad
sbb
pop
jge
movsb
jl
jmp
xchg
mov
rcrb
hlt
xor
xlat
xor
and
insb
fistpl
ficompl
and
mov
aas
aam
cmp
dec
imul
cmc
inc
sti
in
or
loope
cwtl
pop
outsb
pop
daa
xor
popa
out
lret
jge
pop
adc
inc
mov
mov
cmpsb
jg
pop
sahf
lret
push
ljmp
out
mov
out
cs
cmp
inc
loopne
dec
mov
cmpsl
xor
sbb
mov
or
mov
push
repnz
mov
xlat
jle
and
inc
hlt
cmp
cmc
je
jb
in
xor
faddl
mov
xor
sbb
aad
in
mov
ja
inc
scas
jno
pop
pop
or
push
jp
ljmp
sub
dec
incb
jae
or
push
mov
cwtl
jbe
es
inc
fs
mov
push
pop
inc
jmp
mov
inc
loope
stos
pusha
inc
imul
sub
jno
out
mov
out
or
or
pop
xchg
notb
movsb
js
jmp
mov
aad
xor
xor
adc
cli
and
xchg
push
adc
es
mov
stc
shll
nop
mov
xchg
add
push
scas
dec
dec
xchg
sbb
lret
xchg
cmp
mov
xchg
test
mov
and
cmpsb
jb
fcoml
mov
dec
sbb
mov
lea
imul
cmp
dec
inc
inc
dec
ds
pop
outsl
jnp
std
mov
out
imul
and
jae
iret
fwait
or
test
nop
cli
repnz
mov
jl
push
dec
xor
int
leave
pushf
adc
subb
push
bound
fbstp
mov
lock
xlat
inc
pusha
mov
imul
insl
or
das
mov
pop
or
push
jb
add
push
mov
mov
mull
inc
imul
lahf
pop
mov
xchg
push
jge
shlb
out
jl
das
jnp
xchg
aad
jns
pop
pop
inc
inc
movsl
xchg
nop
mov
cwtl
rol
ret
xchg
or
jecxz
mov
inc
pop
push
sahf
mov
pop
jecxz
stos
mov
int3
fstpl
mov
jge
mov
dec
push
lods
xchg
out
add
hlt
pop
div
mov
pop
aam
data16
incb
push
jle
push
or
pop
pop
xor
xor
dec
fsubrs
imul
repnz
cwtl
dec
loopne
sbb
sbb
out
subl
jle
fsubs
sahf
sub
push
rcr
stos
outsl
jb
xchg
rclb
ror
call
sbb
aad
sarb
jbe
cmp
jecxz
cmc
jb
pop
and
enter
xchg
ljmp
jge
push
mov
outsl
push
cmc
popf
inc
sub
daa
out
sbb
int
and
enter
pushf
repz
pop
negl
push
jle
push
mov
lret
pop
push
push
xchg
nop
mov
add
sbb
xchg
cltd
jg
inc
cmp
test
jne
dec
dec
jmp
fnstcw
inc
mov
in
aad
xchg
addr16
ss
fsubs
pop
loope
jb
pop
and
mov
and
add
sub
movsb
xor
ficomps
mov
sti
out
dec
mov
popf
mov
pop
outsb
pop
popa
nop
xlat
adc
adc
push
fisubrs
jp
add
jl
jnp
aaa
incl
out
mov
jle
bt
and
mov
insl
js
inc
adc
xchg
aam
pop
aaa
jecxz
mov
call
clc
loop
enter
xor
mov
pusha
lcall
mov
hlt
call
dec
arpl
int
adc
mov
fisubs
insb
or
pop
adc
jg
les
mov
cmpsb
sbb
stos
and
mov
push
mov
cmpsl
jae
js
lret
mov
fidivrl
inc
push
pop
shlb
inc
movsl
mov
je
lret
in
mov
iret
shll
popf
test
xchg
dec
iret
fists
jl
mov
pop
lods
fdivrs
lock
xchg
and
xor
daa
out
jp
inc
mov
sub
scas
mov
inc
push
imul
inc
mov
scas
xchg
xor
xor
outsb
xor
lret
and
jne
xlat
pop
shr
push
mov
out
rclb
shl
loop
pop
pop
rclb
jmp
mov
cmp
push
sub
xlat
popw
cmp
jbe
sti
test
fiadds
popa
jmp
cmpsb
push
or
dec
into
rcr
insl
dec
jnp
inc
push
jnp
sub
mov
adc
inc
mov
andb
sarl
sub
mov
pop
ret
jg,pt
adc
frstor
sub
add
sbb
xor
pop
loop
jbe
cmpsb
rolb
ljmp
jo
jecxz
lea
sub
cltd
and
gs
int
push
ja
pop
fists
jnp
cmpsb
out
in
div
or
sbb
insl
mov
call
mov
dec
xchg
adc
jp
into
les
xor
fadds
std
mov
inc
lea
je
pop
add
mov
and
dec
sub
mov
or
enter
mov
or
jne
sub
add
stos
push
loope,pt
cltd
flds
cmp
sbb
out
sub
xchg
mov
je
dec
inc
mov
ret
jg
sub
pop
stos
xchg
out
movsl
iret
cmp
ret
push
aaa
gs
loop
cltd
out
mov
rcll
or
je
mov
push
pop
mov
jo
xor
add
push
outsb
adc
in
bound
push
xchg
imul
pop
sub
jg
or
pop
fsubp
jnp
mov
mov
sub
jb
xchg
xchg
aad
lds
in
outsb
icebp
push
jb
shrl
popa
in
fs
scas
xchg
loope
test
xor
aaa
insl
js
lret
in
jns
jmp
pop
mov
or
pop
test
xchg
jae
test
sbb
pop
adc
dec
xor
rolb
sub
mov
call
mov
xor
mov
iret
cmp
aad
xchg
cmp
or
pop
adc
jg
das
mov
jne
pop
mov
js
jbe
aad
lret
or
add
mull
cmp
mov
lds
jmp
add
jecxz
sar
pop
cld
sbb
pop
adc
lret
mov
xor
jle
stc
jmp
sahf
push
test
mov
and
test
test
jecxz
jmp
repnz
movsl
int3
movsb
xchg
sbb
popf
ret
repnz
mov
sub
mov
fadd
sahf
pusha
aad
lcall
pushf
stos
jecxz
aad
cmc
adc
arpl
pop
out
ror
dec
xor
cmpsb
xlat
mov
sub
lds
cld
adc
fildll
aas
in
hlt
dec
dec
je
cmpsl
cmp
adc
dec
cmp
sbb
cmpsl
mov
or
ds
pop
push
adc
lods
dec
dec
xchg
mov
in
pop
daa
inc
sub
xchg
out
inc
sbb
jmp
test
test
inc
out
or
dec
dec
orb
subb
icebp
cmp
sub
out
mov
mov
lret
in
inc
xchg
inc
pusha
scas
dec
int3
cmp
inc
push
sub
cmp
sub
cs
sub
pop
add
sbb
cwtl
sub
leave
lds
daa
stos
dec
jmp
iret
scas
icebp
mov
inc
and
ret
pop
or
les
mov
or
fmulp
sbbb
repz
or
and
mov
dec
sbb
adc
mull
jo
jae
jecxz
xor
cwtl
jl
push
mov
aas
pusha
aam
loop
dec
push
dec
inc
lahf
popa
mov
inc
icebp
dec
popa
movsl
pop
addr16
mov
inc
scas
push
outsl
sbb
jno
gs
push
stc
cmp
pop
push
notl
out
aam
sarl
cli
sbb
pop
fldcw
sbb
mov
cs
mov
in
pop
xchg
jmp
adc
aas
rcl
dec
xor
push
fs
test
in
mov
inc
cmp
jge
in
subl
loope
mov
imul
roll
adc
push
lcall
or
fbld
mov
aad
add
out
fisubrs
push
mov
into
pop
push
stos
or
gs
sub
mov
push
or
lret
sahf
ljmp
in
pop
sahf
xor
mov
jge
mov
sbb
es
add
insl
iret
test
test
push
insl
popa
push
jmp
leave
test
mov
push
and
call
push
inc
and
sub
xchg
negb
rol
insl
test
int
stc
or
cmpsl
stos
into
fdivs
mov
pusha
lret
bound
xor
int3
fs
mov
jle
fdivr
mov
les
add
bound
gs
push
pop
insb
repnz
data16
in
das
insl
inc
pop
add
cmpsb
scas
add
sub
fdivs
sti
and
sti
mov
ja
gs
xlat
stos
data16
pop
push
inc
mov
loop
call
in
bound
pop
ja
mov
or
adc
aam
daa
xchg
cltd
fidivs
in
cltd
jne
fs
jle
das
fstl
xchg
ljmp
outsb
sub
dec
sub
addl
rcr
cld
cli
out
sbbb
out
lock
lock
xchg
sub
cwtl
clc
lahf
or
xchg
pushf
mov
fwait
jb
pop
pusha
in
add
jb
int3
ss
test
jle
sub
jp
dec
mov
loope
mov
in
mov
sbb
cmp
sub
cmp
enter
add
aad
xor
dec
fld
or
pop
sub
xlat
and
cld
jp
mov
pop
outsb
jb
adc
push
shr
cmpsb
inc
sbb
pop
je
leave
mov
pop
outsl
int3
insl
xchg
and
xchg
test
fsubrs
je
mov
dec
mov
fldenv
rcll
jecxz
int
jecxz
lea
dec
jl
pop
ja
aam
std
fstpl
pop
mov
lret
outsb
ficoms
cmpsb
loopne
sub
push
jmp
sbb
mov
fidivrl
out
inc
xchg
js
clc
dec
outsl
cmc
into
push
xor
cmp
pop
jmp
sub
sarb
popf
loope
loop
sub
pushf
into
arpl
inc
push
inc
sbb
pop
sbb
arpl
xchg
adc
jb
push
movsl
or
clc
dec
jne
adc
xchg
pop
sub
mov
sbb
sarl
in
sub
lcall
push
iret
fwait
lret
rcrl
pop
mov
fistpll
pop
jne
mov
push
sub
xchg
arpl
ret
imull
mov
je
or
lods
out
cmp
insb
fisttps
cmp
sub
xlat
pop
and
pop
scas
adc
push
loopw
push
js
and
and
cmp
or
sub
bnd
sbb
mov
aad
and
sub
insl
jecxz
jne
mov
jle
into
xchg
inc
xor
out
jae
adc
lea
mov
outsl
ss
cwtl
pop
mov
ss
and
hlt
cli
mov
mov
sbb
sahf
sub
jo
mov
into
lahf
jnp
call
pop
sub
or
cmpsb
fdivr
jmp
clc
sahf
jbe
cmpsl
mov
xchg
les
js
jg
nop
lods
xchg
lret
pushf
inc
sti
cmp
call
pusha
call
dec
fdivrl
xor
jle
adc
cmp
pop
mov
pop
push
jge
loopne
mov
imul
push
repnz
popf
cltd
push
adc
mov
sbb
insl
das
insb
test
lds
sub
stos
andb
stc
inc
fwait
cmpsl
push
ds
pop
mov
sahf
pushf
lds
jp
and
and
orl
inc
xor
mov
jnp
addr16
fwait
scas
inc
inc
push
jp
lcall
and
mov
mov
scas
cmpsl
mov
cmp
inc
or
sbb
mov
sbb
call
xchg
pop
mov
mov
jbe
sbb
ds
pop
loopne
push
jno
adc
mov
jne
insb
mov
addr16
dec
in
inc
test
xchg
stc
int3
ret
or
cltd
bound
adc
stc
scas
mov
ret
in
pop
scas
push
sub
cmp
and
lods
inc
jl
mov
int3
popa
xlat
hlt
push
sub
mov
orl
push
cli
sub
mov
pop
inc
pusha
out
jb
and
mov
lcall
jbe
push
outsb
cltd
xchg
or
jne
add
inc
popf
hlt
mov
ss
jp
loopne
call
sbb
jp
sbb
shl
mov
jbe
repnz
enter
rcrb
aas
and
and
jns
inc
push
jnp
pushf
sbb
pop
scas
cmc
test
cmp
mov
adc
sbb
jl
fsubr
and
insb
dec
cwtl
xchg
popf
xor
push
dec
mov
in
xchg
xor
rcll
sarl
loopne
dec
test
sbb
dec
aam
jle
xchg
inc
rclb
mov
ror
push
or
jbe
imul
mov
push
sbb
mov
add
mov
cmpb
dec
leave
ret
inc
pushf
insb
scas
and
cmc
mov
outsb
lods
sub
test
daa
jo
sub
aad
sbb
push
and
cmp
or
cmp
dec
lret
jmp
les
setne
shr
out
mov
mov
bound
rolb
add
jecxz
rcll
mov
imul
xchg
shll
int
cli
sti
jp
pop
and
outsb
mov
sbb
lahf
mov
dec
pop
mov
mov
mov
in
stc
rcrl
mov
scas
loopne
mov
cmp
pusha
testl
jle
and
lret
icebp
xchg
xlat
enter
enter
rep
cmp
xchg
in
loope
jg
mov
mov
mov
inc
xchg
aam
mov
mov
xor
sbb
hlt
mov
js
mov
lcall
cmp
imul
mov
inc
cld
xlat
xor
cmpsl
push
inc
movsb
shrb
add
mov
mov
faddp
mov
fcmovnu
fdivs
insb
repz
add
cld
push
sbb
testl
imul
out
ljmp
repnz
orl
cmpsb
stos
pop
inc
pop
pop
mov
rclb
jbe
cmp
xor
inc
add
add
add
pushf
mov
daa
bound
rcrl
sub
mov
pop
jb
fimuls
or
push
stc
pop
push
lcall
outsl
popf
sti
xchg
ret
mov
aas
push
mov
sbb
jmp
cmp
mov
add
leave
lahf
fldenv
lahf
lds
xchg
jl
pop
out
xor
mov
ljmp
xchg
aaa
and
das
cmpsl
pop
sub
inc
repz
jo
or
imul
push
outsl
cli
xchg
out
pop
xor
xchg
js
mov
test
xchg
clc
ret
flds
mov
hlt
enter
and
ficompl
cltd
lahf
cmp
adc
sub
cmp
xor
push
call
xchg
pop
dec
xorb
fcomps
ss
mov
out
mov
movsl
sub
es
add
fbstp
xchg
pop
popa
idivb
movsl
ds
jg
pop
cmp
jge
xor
ds
sbb
push
xor
jae
push
fisttpll
xor
jecxz
call
push
subb
xor
inc
daa
lock
sbb
xor
xchg
jg
xchg
shll
or
pop
pop
adc
and
ss
inc
jmp
inc
imul
out
ret
jb
adc
mov
cmpsl
add
aad
aam
fisttpl
xor
adc
lods
push
aam
sub
mov
xor
fidivs
dec
xchg
iret
cmpsl
sub
pop
mov
out
pop
outsb
jge
and
or
push
or
jno
aam
mov
or
sub
mov
cltd
loop
cltd
and
push
pop
jle
enter
mov
adc
clc
push
lret
je
into
stc
push
sbb
jmp
cmp
and
insb
mov
adc
movsb
in
call
pop
xchg
mov
or
movsb
loopne
es
or
pop
loopne
out
and
pop
jle
push
pop
and
mov
jb
mov
jbe
int
xchg
and
lods
arpl
lock
dec
in
cli
aad
mov
fwait
push
popa
aaa
int
ja
inc
dec
hlt
adcl
imul
lods
mov
xchg
fistps
jo
insl
addr16
mov
cld
push
stos
cmc
ret
inc
and
push
adc
mov
adc
cmpsb
ds
mov
adc
pop
mov
movsb
mov
pop
inc
stos
pop
fisubl
sbb
incb
les
inc
shrb
dec
xchg
sub
inc
fsubrp
testl
out
int3
mov
das
push
adc
pusha
rcrl
dec
dec
mov
test
jnp
adc
shlb
das
hlt
sub
out
or
mov
xchg
push
jmp
call
mov
cmp
sbb
add
inc
cwtl
push
imul
mov
xor
sbb
jle
xchg
pusha
mov
jg
xor
ror
stos
lcall
std
pop
lock
cwtl
decb
sub
push
mov
sub
push
push
push
int
add
sahf
mov
shr
pop
dec
or
inc
into
shl
dec
mov
add
mov
jno
test
pop
add
mov
mov
mov
cmp
adc
mov
imul
jmp
push
mov
fiaddl
mov
xchg
or
mov
xor
ja
mov
lods
mov
jb
jge
enter
push
ss
test
ret
push
negb
xor
mov
imul
xor
frstor
cmp
and
mov
sub
or
cmp
hlt
mov
add
loop
xchg
xlat
pop
test
test
mov
push
sbb
mov
sub
jp
lret
fcoms
scas
lret
ljmp
pop
cmpsl
or
cmovne
scas
cwtl
int
pop
jnp
fistpll
ret
pop
movsb
mov
jle
lods
cmpsl
lock
movsl
pop
xchg
mov
adc
xchg
mov
imul
aaa
mov
cmpl
or
seto
fldcw
xchg
mov
adc
push
adc
or
stos
xorl
sub
pop
cltd
mov
adc
into
or
or
pushf
arpl
out
inc
mov
jnp
lods
test
mov
sub
xchg
aam
or
jecxz
orb
mov
mov
pop
fs
enter
push
push
lret
and
dec
push
adc
imul
std
out
pop
adc
adc
inc
in
sbb
ja
out
cmp
enter
popf
aam
fmuls
stc
xor
xor
stc
mov
jne
add
in
jnp
cmpsl
adc
test
pusha
mov
push
xchg
inc
lock
ret
lahf
daa
ljmp
jp
push
dec
cwtl
mov
stc
xchg
scas
pushf
lahf
pop
adc
insb
dec
ss
not
push
mov
pop
aas
xor
xchg
or
nop
es
enter
jle
bound
jnp
sahf
es
daa
push
mov
add
dec
loop
ja
cld
add
sahf
cmp
push
sbb
mov
jno
mov
xchg
das
adc
sbb
int3
sub
sbb
jbe
icebp
or
sub
cmp
fnstcw
cmpsl
mov
fisubrs
shlb
xchg
int
push
popf
push
pop
cmp
mov
loopne
or
loopne
rol
cmp
notb
loop
and
mov
adc
in
dec
in
out
imul
movsb
jns
inc
or
xor
mov
sub
roll
xchg
outsl
cmp
ret
and
or
ljmp
mov
scas
mov
ret
outsb
scas
add
sbb
ficoml
lret
jns
jno
addb
inc
mov
add
cld
fidivrl
mov
inc
ret
cmp
push
xchg
sbbl
xchg
mov
orb
mov
add
jmp
cmp
fwait
inc
cli
mov
adc
scas
sbb
lret
mov
sub
stc
mov
or
inc
push
mov
lsl
pop
scas
test
js
mov
loop
movsl
cld
or
sbb
xchg
cmp
pop
push
jbe
xchg
and
jne
hlt
mov
sbb
les
aad
test
inc
mov
jo
add
jns
in
cmp
mov
xchg
jb
loope
lock
fildll
movsb
ds
and
xlat
xorb
lret
lea
push
call
dec
jge
dec
lahf
pop
call
sub
and
paddq
xchg
mov
inc
out
add
add
mov
jmp
xchg
mov
jle
sarb
and
bound
mov
leave
add
jmp
xchg
stc
test
jle
and
push
xor
adc
daa
ret
cltd
add
mov
mov
ror
mov
fcomip
ret
inc
cmpsl
adc
enter
pop
cmc
pop
jnp
scas
jecxz
dec
xlat
inc
mov
xchg
add
push
std
xor
xor
cmc
out
add
lret
arpl
cmp
das
xor
mov
icebp
add
xlat
xchg
fbld
mov
dec
push
jle
jp
cmp
adc
inc
in
jns
xor
cmp
out
mov
push
loop
jae
pop
jle
test
mov
sti
mov
xor
xlat
sbb
xchg
mov
fsts
add
popf
pop
inc
and
push
insl
ss
or
js
add
enter
fistps
ljmp
xor
mov
imul
popf
xchg
push
repnz
xor
jns
sub
xor
filds
xchg
lret
cmp
xor
inc
out
mov
rol
test
mov
lods
enter
mov
xchg
pop
in
sbb
into
aas
lahf
in
fisttpll
pushf
jp
push
inc
and
imull
inc
shll
jnp
or
pop
jne
stos
leave
add
fistl
ret
in
ja
in
push
inc
lods
fnstenv
mov
push
rolb
int
enter
ret
xchg
and
pop
mov
hlt
xor
shrb
mov
push
jge
iret
sbb
aas
xchg
jo
cs
rcrb
ja
sub
rclb
seta
mov
call
scas
adc
test
imull
and
subb
mov
push
insb
adc
mov
inc
je
pushf
jl
mov
cmp
clc
jge
cmp
xchg
jbe
jno
in
dec
shrl
pop
lods
xchg
xchg
pop
repnz
inc
loop
mov
std
aas
insl
clc
xchg
cld
stos
push
inc
in
inc
popa
fstps
pop
jp
test
xchg
lds
add
sub
loopne
mov
loope
and
mov
or
rcll
adc
stc
out
push
push
les
jp
pop
lock
inc
cmp
jl
xor
cmc
ja
xchg
imul
sbbb
lock
outsl
aaa
lahf
or
sub
jmp
lret
mov
xor
sub
push
out
addr16
mov
in
ret
cld
mov
mov
paddsw
dec
repnz
dec
xor
lahf
xchg
icebp
ret
push
pop
cmp
jle
aas
icebp
dec
loopne
or
and
in
jno
std
sub
pushf
shll
mov
imul
mov
fs
mov
ja
rolb
or
aas
aad
push
popf
movsl
xchg
jge
into
push
mov
or
in
sub
mov
push
je
xchg
popf
adc
aad
loope
mov
mov
lahf
jbe
ret
push
int3
add
scas
imul
mov
stc
inc
fsts
dec
in
cmp
aam
lahf
fisubrs
fwait
xchg
loope
mov
dec
push
insb
jl
cmpsl
pop
push
cmp
jne
push
imul
push
loop
push
cltd
sub
insl
bnd
jno
pop
jmp
mov
jge
pop
out
inc
negl
mov
iret
fnsave
scas
pop
scas
in
dec
xchg
mov
mov
jp
jns
cmc
mov
add
daa
xlat
jle
sub
rcll
addr16
ljmp
sbb
and
shrl
cmpsl
out
add
fists
mov
push
jbe
nop
inc
xchg
push
pop
enter
xlat
push
mov
xchg
mov
rcrl
dec
in
nop
pop
push
fdivrl
stos
int
arpl
or
jb
mov
stc
mov
mov
leave
sub
push
xorw
push
push
mov
imul
sahf
add
or
pop
imul
outsl
dec
ret
adc
push
dec
repnz
jnp
jg
mov
pushf
sub
push
ret
es
ficompl
lods
xchg
dec
mov
rcl
clc
pop
popf
xchg
jns
test
xor
ffree
sub
into
pop
outsl
mov
movsb
loop
cmc
pop
add
mov
data16
jmp
enter
mov
bound
loope
push
imul
fs
movsb
shlb
mov
jo
ja
int3
fisttpl
mov
imul
testb
inc
test
cmpb
lock
dec
jno
mov
int3
out
push
adc
shrl
dec
push
adc
aaa
fstp
out
outsb
jecxz
sub
push
cwtl
jne
inc
sub
adc
add
mov
adc
add
cltd
mov
shll
pop
jmp
xchg
mov
or
in
lods
rep
pop
fdivrl
lret
sub
cli
pop
es
xlat
xchg
dec
jmp
jl
out
loop
jmp
rcll
dec
pop
pop
fdivrs
outsl
mov
mov
ss
push
ret
mov
fsubrl
or
movsb
xchg
shlb
mov
loope
ss
push
shlb
push
adc
push
pop
cltd
mov
fbstp
ret
sbb
jno
lds
shll
inc
cmc
ljmp
test
data16
push
loopne
xchg
dec
roll
orl
pushf
xor
mov
jno
dec
xchg
ja
lret
inc
lcall
fisubs
ja,pn
out
push
sub
mov
fcomi
sub
xchg
loop
pop
xchg
adc
mov
gs
das
jae
fadd
inc
out
dec
pop
jbe
test
iret
xchg
pop
push
clc
fstpl
xchg
clc
aam
jo
push
pop
xchg
sbb
mov
push
xor
nop
stos
iret
divl
jno
jg
test
cmp
mov
sti
test
mov
inc
jo
in
es
sbbl
daa
cs
rorl
jo
xchg
cmp
ljmp
push
sub
cs
or
mov
aad
cmp
out
adcb
nop
push
std
jbe
dec
and
inc
mov
mov
cmp
mov
out
sub
test
mov
into
mov
lods
cmp
pop
in
aas
xor
test
ret
fsubr
cmpsl
xor
loop
test
mov
iret
xchg
cmpsb
gs
outsb
lret
les
xchg
mov
lret
mov
pusha
jge
mov
stos
daa
add
sbb
or
jno
sbb
cs
push
jecxz
xor
or
gs
mov
lods
inc
push
ds
jno
push
xor
cltd
test
int3
icebp
inc
leave
xchg
test
pusha
mov
push
mov
and
lahf
nop
dec
adc
inc
test
shl
pop
sbb
addr16
jmp
mov
rorb
orl
jp
cmp
push
jmp
bound
inc
push
pop
cltd
dec
into
filds
icebp
imul
fldl2t
cmc
sti
dec
dec
sbb
dec
inc
cmpsl
sub
pop
inc
sub
incl
pop
scas
cmpsb
icebp
cmpsl
mov
jg
xchg
mov
mov
mov
sar
push
lahf
shr
or
xchg
inc
sub
and
inc
aam
enter
dec
pop
sbb
scas
jae
sbbl
cwtl
insl
jge
lahf
outsl
pop
cmpsl
dec
ret
leave
loop
cwtl
push
jo
fnstsw
aam
test
test
and
pop
push
xlat
push
repz
loope
cmpb
inc
adc
xchg
jp
jns
pop
jo
test
dec
int3
outsl
mov
add
cmp
cmp
push
pusha
dec
ret
xchg
in
shll
sbb
xor
loope
adc
in
and
fwait
push
mov
dec
das
xchg
sub
ljmp
mov
popa
repz
insl
inc
lcall
loop
push
dec
cmp
jle
xor
andps
and
movsb
fidivrl
lahf
dec
pushf
lds
jno
stos
xchg
xchg
lock
lds
xchg
mov
xor
outsl
sub
mov
jo
daa
imul
pop
ret
mov
pop
aaa
clc
mov
push
call
lock
notb
fstpt
in
cmp
je
lret
daa
icebp
icebp
data16
mov
mov
pop
enter
xchg
adc
rcr
lcall
lea
cs
movsl
pop
lret
sahf
js
add
mov
xor
adc
mov
jae
ret
call
or
push
dec
push
je
push
movsl
es
rorl
lcall
push
sub
js
xchg
cmpsb
rcl
jmp
inc
stos
std
imul
int
jecxz
push
aas
repz
or
add
sarl
int
andl
push
cmpsb
loopne
mov
and
mov
jmp
mov
inc
jle
xchg
lds
arpl
das
xorl
mov
bsr
jg
sbbb
ret
imul
mov
xchg
jb
stos
pop
inc
pop
or
jmp
repz
aaa
es
or
inc
jmp
jecxz
arpl
push
jo
cwtl
and
mov
and
bound
outsb
cmpl
push
push
sub
and
loopne
cmp
lret
aam
ja
mov
in
in
xor
mov
dec
inc
andl
dec
je
hlt
dec
jno
cmpsb
dec
add
xor
popf
lret
gs
in
pop
in
mov
call
push
scas
sbbl
or
lahf
psrlw
loop
outsl
lahf
aam
bound
arpl
clc
push
push
pop
addr16
pop
xor
subl
push
shll
push
call
xor
lcall
jg
or
mov
stc
sbb
outsb
cmp
test
dec
inc
ret
es
jecxz
test
arpl
sub
out
xor
addr16
clc
sbb
scas
mov
fistpll
mov
into
pop
js
leave
into
sarl
insb
mov
pop
inc
data16
or
mov
cmpsl
loop
push
nop
cmc
mov
inc
aaa
shll
les
imul
pop
mov
dec
enter
pop
sub
cli
pop
nop
subl
xchg
lds
lock
mov
lods
add
xchg
mov
test
mov
out
fst
idivb
xor
pushf
psrlw
imul
push
jmp
jnp
cmp
adc
and
pop
add
mov
mov
cmp
push
imul
jno
push
lods
les
int3
adc
lahf
adc
adc
fsubl
ljmp
mov
in
pop
enter
fiadds
inc
call
sub
mov
cmp
adc
xor
mov
loope
jb
cltd
jmp
sbb
mov
pop
or
fwait
pop
mov
repnz
jae
inc
adc
sub
push
iret
repnz
add
cmpsb
ja
scas
gs
add
jecxz
push
push
and
popa
das
rol
mov
xchg
testl
sub
addr16
and
sti
inc
pushl
ret
enter
xchg
hlt
add
mov
ret
adc
fs
add
xchg
imul
popf
adc
cbtw
fiadds
cltd
mov
jmp
idivb
cwtl
mov
js
fdivrl
jns
scas
mov
mov
out
movsb
aaa
dec
inc
sarb
sub
test
and
xor
jge
mov
repnz
enter
jle
in
faddp
cmp
arpl
mov
gs
add
sub
cmp
inc
xor
cli
aam
daa
inc
fisubrs
cmp
repnz
sahf
xor
mov
aaa
int3
out
int3
or
icebp
xor
mov
mov
outsb
mov
jge
mov
scas
sahf
jns
movsl
inc
loopne
out
xchg
sbb
repnz
enter
jne
sti
das
xchg
lock
inc
adc
filds
pushf
fstl
jmp
je
jl
jg
jnp
add
test
adc
call
data16
xor
es
in
pop
add
std
bound
push
cmpsl
and
dec
loop
hlt
cmc
inc
mov
stos
fwait
xor
ret
leave
or
stc
mov
add
pop
xchg
push
ret
lahf
xlat
cmp
clc
inc
dec
sub
mov
stos
imul
cmc
movsl
xor
pop
jmp
test
jg
mov
mov
lock
mov
jle
cwtl
dec
cld
sbb
popf
add
fsubl
push
ror
cld
daa
xor
pop
loop
insl
pushl
sti
mov
adc
sbb
popf
out
aas
and
dec
push
inc
dec
mov
stc
rorl
mov
movsl
in
lods
daa
dec
loope
mov
xlat
cltd
and
or
fmul
enter
sub
loop
dec
loop
test
hlt
bnd
shlb
inc
ljmp
sub
push
loopne
gs
and
jle
out
movsb
fisttpl
iret
je
push
or
mov
cmp
xor
addl
icebp
adc
dec
roll
les
mov
pop
pop
xchg
pop
dec
test
and
or
inc
pop
addr16
inc
out
mov
shrb
inc
push
fistpll
pop
push
je
push
clc
inc
mov
mov
out
test
jle
cld
xor
test
test
jle
mov
adcb
sbb
sbb
gs
push
sub
inc
out
lods
addr16
inc
pop
mov
aaa
and
jne
and
outsl
mov
aad
lcall
jbe
inc
call
inc
mov
inc
loope
imul
pop
fninit
jbe
jb
mov
stos
enter
push
xchg
lret
je
lcall
inc
imul
fnstenv
das
push
mov
testb
es
scas
jb
fadd
inc
push
aad
jae
or
or
fs
stos
jle
sub
cli
mov
cmp
test
loopne
ds
je
push
ret
jne
inc
lret
lds
sbb
stc
xchg
je
jns
lods
lahf
lea
cwtl
int3
movsl
mov
xchg
mov
int
testl
dec
mov
dec
xorb
clc
push
jp
mov
fldenv
mov
lock
in
sub
into
xlat
mov
mov
sub
mov
orb
nop
add
add
cmpb
xor
jecxz
dec
pusha
shlb
xor
mov
or
fs
cwtl
sbb
leave
cmp
mov
sbb
subl
adc
outsb
cli
outsl
cmpsb
repnz
or
outsl
add
adc
push
jge
std
das
movsl
cmc
push
fimuls
jge
xchg
clc
pop
out
jae
pop
push
jg
fildl
mov
fstl
cmc
and
mov
xor
mov
negb
dec
loope
ds
loope
cmpsb
jge
lock
jecxz
xchg
fs
std
mov
hlt
or
dec
fisubs
js
aam
int
inc
loope
push
xchg
mov
adc
stc
mov
sbb
xor
popa
icebp
aaa
mov
mov
push
je
sarb
cmp
dec
loop
and
dec
dec
or
dec
push
jno
mov
fnstenv
ret
inc
out
movsb
adc
mov
mov
lds
mov
dec
out
rcll
fiaddl
je
mov
push
stos
jp
loopne
loop
or
imul
add
std
out
sub
lea
xor
sub
lcall
addr16
in
adc
js
imul
mov
ds
insl
je
sbb
mov
lret
imul
mov
pop
xor
fidivs
ds
sbb
add
fsts
test
jge
pop
in
bound
pop
sbb
inc
inc
add
cs
mov
or
pop
or
push
mov
nop
dec
jae
adc
jns
and
scas
ficomps
data16
cmp
shlb
sub
loopne
lcall
sub
fs
cmp
sub
sahf
adc
sub
insb
mov
repz
loopne
popa
jne
dec
mov
in
or
arpl
icebp
xchg
lret
mov
stos
sub
roll
mov
cmp
iret
notl
and
push
mov
lds
sbb
cmpsb
lea
xor
xlat
popa
lahf
dec
cmp
cmpsl
pop
mov
mov
mov
and
sarl
pushf
sub
xor
adc
push
jl
push
mov
cltd
cmp
test
lods
mov
mov
out
pop
jae
mov
ret
scas
cmpb
scas
fsubr
adcb
inc
rorb
cltd
lret
jp
sub
mov
aad
add
mov
inc
mov
jnp
mov
jno
in
mov
sbb
dec
mov
in
enter
and
out
loope
dec
pop
cmp
filds
push
inc
in
mov
test
sub
popf
outsl
jle
test
in
stc
in
push
sbb
rcrb
push
fbstp
negb
sub
outsl
xor
xor
rcrb
ret
frstor
adc
mov
mov
iret
push
or
repz
outsb
repnz
sbb
repz
test
dec
pop
clc
es
mov
out
pushf
adc
lret
mov
xchg
sub
mov
cmp
sbb
fsubs
adc
call
aad
jo
mov
jnp
pop
mov
inc
hlt
mov
andb
shr
mov
dec
cmpsl
clc
ret
daa
filds
pop
cltd
mov
xchg
sbb
fsubp
xchg
pop
xlat
mov
and
imull
aam
repnz
jmp
nop
jb
jge
pop
adc
icebp
xchg
rcl
cwtl
lahf
sub
lods
jmp
and
jb
testb
and
lea
cmpsb
xchg
popf
cmp
stos
sbb
or
into
fs
sahf
push
mov
shll
adc
dec
inc
mov
test
out
inc
and
dec
sbb
adc
cmc
aad
add
in
inc
inc
adc
ftst
xchg
cwtl
iret
es
addr16
shlb
outsb
add
into
pop
sbb
testl
cmp
test
lock
int
mov
pop
fwait
roll
xchg
in
cmp
pop
repnz
fwait
jbe
aas
gs
cmp
pop
dec
hlt
pop
sub
sbb
das
sbb
mov
pop
pop
lods
push
sbb
clc
inc
mov
mov
add
add
rorl
jmp
movsl
push
jae
mov
mov
stos
pushf
fwait
test
rclb
dec
sub
xor
push
mov
inc
cmc
dec
sbb
popa
js
or
lahf
in
jo
push
stos
jge
lahf
vshufpd
popa
cmp
and
inc
ss
mov
and
stc
xor
lahf
cmpsl
dec
insb
loopne
mov
pop
in
push
mov
ja
lock
lret
pop
mov
mov
dec
scas
outsl
pop
push
cmp
in
int3
xlat
scas
test
jge
adc
or
xor
in
into
out
mov
fcom
sub
jae
inc
out
or
test
lea
adc
sub
ret
jnp
movb
sbb
xor
push
jnp
push
imul
jge
sbb
imul
xchg
xchg
mov
push
cmp
inc
lret
test
xor
jne
fwait
dec
jecxz
mov
addr16
ror
lret
jg
loopne
pop
ffreep
std
xchg
insl
dec
mov
pop
ja
cli
pop
ret
out
adc
cmp
dec
lods
ret
mov
pop
dec
xor
push
iret
cltd
js
mov
fwait
xor
or
or
aad
divb
push
lock
xor
xor
scas
sbb
mov
pusha
fisttps
pop
in
mov
shl
clc
mov
xor
sub
cld
nop
out
decl
ficoms
push
sbb
adc
mov
out
sarb
jp
es
nop
add
cs
dec
adc
dec
outsl
jge
cld
sbb
insb
mov
mov
pop
mov
in
cmpb
mov
imul
and
pop
mov
or
lcall
arpl
mov
mov
leave
imul
cmpsl
cmp
pop
xchg
mov
iret
pop
out
adc
popf
adc
mov
shll
jge
cmp
sbb
pop
jno
cmp
cmovno
cmc
dec
push
fdivrl
pop
outsl
lods
leave
inc
cmp
or
ret
dec
xor
mov
mov
lds
ljmp
adc
ljmp
or
dec
cmp
or
xor
and
ret
mov
sti
scas
dec
je
and
push
pop
xchg
cld
pop
cmp
orl
jnp
pop
lods
insl
xchg
lods
mov
sbbl
cmpsl
out
pop
in
mov
mov
adc
dec
adc
es
xchg
xchg
pop
outsl
das
js
and
xor
cld
push
call
mov
xchg
imul
lret
lods
jecxz
xor
ret
push
syscall
int
lock
ja
xchg
xchg
xor
int3
dec
pop
mull
pop
mov
daa
lds
push
push
call
sahf
push
lods
sbb
cmp
enter
es
push
and
clc
push
pushf
fcomp
movsb
into
mov
dec
divb
pop
mov
sbb
test
mov
cmp
xchg
fs
stos
repz
inc
sub
nop
aam
cmp
push
outsl
ja
pop
pop
or
cld
fwait
lods
outsb
push
push
or
jmp
fldt
mov
fs
lock
sub
std
mov
fs
sbb
mov
cld
adc
pusha
sbbb
dec
jle
xchg
mov
adc
subl
fisubrl
adc
ljmp
shr
aam
xor
das
cmp
aad
outsl
cmp
jns
pop
cmp
roll
enter
out
fcomps
ljmp
pop
imul
mov
ja
dec
jbe
jmp
aam
cmp
push
and
cmpsb
lock
mov
sub
in
mov
shrb
mov
scas
fwait
jnp
xchg
roll
rol
hlt
inc
lock
cmp
stc
mov
push
pop
push
pop
xchg
lret
pop
pop
pop
mov
hlt
fucomip
std
cltd
subl
cwtl
push
xchg
out
aad
jno
mov
add
js
or
jg
cwtl
and
dec
lds
or
xchg
adc
mov
rolb
cwtl
ja
jg
pop
jl
cmp
mov
push
out
add
dec
insl
imul
add
pop
inc
xchg
bound
mov
dec
ljmp
cmpsb
sub
pushf
cmp
sti
imul
test
mov
xchg
rolb
lret
cltd
pop
or
sbb
pop
fcoms
imul
jb
test
pop
mov
push
mov
sbb
fwait
or
inc
cwtl
add
sbb
add
mov
jnp
sarl
std
lea
mov
shl
clc
out
lods
mov
and
int
mov
jae
pop
outsl
jb
adcb
sti
repnz
out
scas
int
lcall
ror
pop
dec
xor
movb
ret
jae
jp
fidivrs
int
repz
int3
mov
es
gs
jl
sub
xchg
fsubs
cmc
and
aaa
test
mov
mov
mov
cmp
xor
and
xchg
inc
out
xchg
jle
mov
push
mov
sub
fwait
jb
out
pop
xchg
xchg
xchg
ljmp
pop
and
jns
or
cmp
push
lods
inc
mov
mov
add
fistl
cmp
js
ss
lds
xor
dec
adc
or
or
lahf
inc
inc
shrl
arpl
sub
ljmp
inc
pop
inc
lods
xchg
sbb
repnz
add
fdivl
dec
nop
lods
push
xchg
testb
mov
xchg
test
inc
xchg
lods
sub
or
scas
mov
or
add
pop
or
push
lea
mov
inc
int3
lock
inc
push
add
out
push
inc
cmp
ret
mov
cmp
xchg
push
pop
inc
inc
fimuls
hlt
ret
es
out
insb
orb
enter
mov
incl
dec
inc
mov
or
xor
cmpsb
mov
cs
sub
mov
dec
mov
pop
mov
xchg
je
mov
stos
or
sub
scas
xchg
pop
repnz
push
gs
scas
ror
pop
in
add
dec
mov
pushf
pop
push
push
inc
mov
fs
cmp
movsb
out
sub
arpl
fstpt
or
stc
gs
inc
add
mov
in
hlt
arpl
add
or
repz
fwait
es
into
jno
xor
jmp
or
sub
and
pusha
mov
jae
jmp
jmp
mov
movsb
rcll
leave
pusha
or
test
sti
imul
and
push
mov
enter
xlat
push
push
xchg
bound
int3
inc
repz
lds
aam
rorb
popa
lcall
out
mov
in
popa
cmp
inc
push
xor
or
pop
arpl
cmp
xorl
je
lcall
pop
in
lahf
xchg
add
out
jecxz
mov
add
out
frstor
ja
or
test
pushf
in
cld
in
adc
outsb
divb
xchg
sahf
ds
push
sbb
shrl
mov
jnp
rolb
loop
popa
gs
inc
sti
xorl
fidivl
mov
movsl
push
xchg
addr16
stos
dec
test
cmp
or
bound
repz
jmp
mov
jae
jbe
scas
xor
rorl
out
sub
jb
outsb
push
lret
clc
mov
fisubrs
cwtl
sbb
popa
jp
jge
inc
inc
mov
pop
or
testb
pop
sub
sbb
mul
mov
pop
xor
inc
lret
push
xchg
ficompl
mul
mov
jg
cmp
jae
mov
push
jp
push
mov
push
dec
and
xor
dec
aaa
dec
in
jg
cli
adc
cmp
inc
icebp
push
pushf
dec
push
cmc
out
out
or
push
pop
mov
pop
bound
test
add
push
out
or
lock
mov
adc
and
inc
adc
mov
mov
push
inc
xchg
das
mov
add
cltd
push
imulb
push
push
pop
pop
stos
rolb
inc
stc
leave
leave
cmp
push
test
xchg
test
inc
push
lcall
fs
xor
shrl
outsl
stos
scas
inc
fs
jmp
je
and
adc
xor
and
xor
decb
cmp
in
pop
scas
rcrb
mov
push
test
movsb
arpl
xchg
je
xchg
push
cld
loope
jge
pop
rsqrtps
stc
call
scas
daa
aas
dec
cmpsl
sbb
sti
aas
ja
xchg
loop
jge
mov
pop
clc
inc
lcall
in
sbb
pop
ds
dec
mov
pop
mov
push
mov
aas
filds
adc
cmpsb
rcrl
out
mov
ds
scas
cs
lahf
sub
pop
mov
pop
fdivl
xchg
fsubrp
mov
and
test
pushw
jge
cmp
sbb
or
aas
mov
push
sahf
fisubrl
aaa
aam
cmpsb
or
dec
int3
jg
mov
mov
call
mov
xchg
pop
imul
cmpsl
aas
xor
addr16
mov
jns
mov
nop
jle
repnz
and
xchg
xor
mov
imul
je
sbb
loope
mov
aaa
jecxz
lret
stc
orl
pop
jnp
negb
mov
inc
aad
jb,pt
cmpl
outsl
test
lods
xchg
enter
push
ja
xor
or
cmp
xor
arpl
push
mov
in
and
dec
pushf
cmc
sti
out
dec
adc
push
mov
outsl
adc
scas
mov
push
adc
cltd
add
or
sbb
push
push
jmp
push
or
int3
insb
aam
in
sbb
push
and
lds
aad
add
aad
mov
testb
and
sar
mov
call
cli
push
push
leave
int3
mov
jl
mulb
sub
or
fisttpll
notb
imul
sbb
lret
xchg
mov
cmpsl
sbb
push
xchg
mov
int3
jbe
iret
stos
jle
pop
stc
scas
inc
add
fistpll
das
idivb
loop
scas
sub
push
and
pop
xor
fstpl
mov
cld
add
jmp
outsb
out
dec
scas
adc
inc
imul
add
or
sbb
add
xor
lret
sub
adc
fsubrl
loop
and
pop
jnp
popa
pop
pop
scas
testl
dec
jp
es
pop
inc
fs
push
xchg
mov
or
call
cmp
pop
lret
push
clc
mov
mov
add
pop
or
sbb
test
popa
push
dec
fdivrp
movsb
xchg
int3
sbb
ds
jno
xchg
popf
ss
lcall
ss
xorb
clc
adc
ja
in
dec
xchg
jb
sbb
cmp
jp
add
scas
adc
push
das
insl
cmp
sbb
dec
mov
jmp
sbb
mov
fdivrs
inc
subb
loope
lock
inc
dec
sbb
fldenv
jbe
inc
add
mov
mov
idivb
add
mov
pop
sbb
stc
imul
sbbl
sbb
add
loopne
clc
cmp
push
fidivrs
dec
insb
mov
and
or
xchg
push
loop
shll
dec
inc
fdivs
int3
leave
fsubrs
les
pop
mov
sti
les
push
jecxz
mov
call
jge
xor
aaa
jns
pushf
lret
mov
rcll
cs
in
mov
call
out
cmpsl
fdivs
sahf
gs
lcall
xor
jecxz
out
lret
rcll
sub
add
dec
jns
pop
icebp
loopne
in
xchg
in
sbb
sub
or
fiadds
cmp
xor
pop
adc
mov
loopne
jge
push
push
adcl
sub
into
push
xchg
mov
push
jmp
add
pop
adc
jae
sub
jb
data16
ds
es
outsl
mov
sub
mov
js
int3
shl
in
or
xchg
inc
pop
inc
jp
mov
ja
imul
insb
push
sbb
cmpsl
movsb
pop
aad
push
out
repz
dec
in
xchg
cmc
call
sbb
pop
push
and
fisttpll
int3
cld
clc
add
test
fildl
inc
or
sbb
pop
push
pop
pop
test
mov
cmp
jbe
cli
mov
push
fdivs
lock
das
xchg
add
jp
pop
inc
fsubrp
or
pop
pop
mov
jnp
dec
icebp
add
fs
pop
jg
imul
dec
sub
in
leave
mov
clc
jns
and
les
xchg
cltd
xor
int3
pop
imul
mov
insl
or
rcl
fwait
and
adc
pop
mov
loope
into
adc
inc
mov
nop
aad
roll
pop
decb
psllw
flds
xchg
imul
push
cld
fwait
xorb
cltd
mov
xchg
pop
adc
adc
push
shrl
popf
cli
inc
in
xchg
jns
in
stc
ret
xlat
ja
insb
sti
add
daa
mov
mov
data16
and
dec
ljmp
push
sub
je
enter
dec
push
or
movsl
adc
icebp
clc
mov
jmp
ljmp
fldt
lcall
push
fs
mov
mov
clc
loopne
popf
xchg
addr16
addr16
cmp
imul
fs
or
adcl
je
leave
mov
outsl
jg
in
lods
sahf
es
out
mov
das
push
adc
pushf
cwtl
xor
pushf
push
pop
rcll
ret
mov
jge
sub
dec
insl
shr
mov
fs
rol
xchg
or
clc
sub
ret
rclb
stc
sbbb
pop
cmp
in
push
js
sub
lret
jo
cmpsb
mov
jno
xlat
fxam
nop
inc
scas
pushf
lret
xor
addr16
jb
push
fcomps
popl
ja
in
jns
xchg
jnp
sub
and
push
adc
cmp
ljmp
mov
and
popl
push
jg
xchg
aas
dec
loop
adc
cli
imulb
add
insl
popa
inc
test
sbb
stc
jmp
xor
xlat
pop
daa
inc
lcall
ret
jne
add
xor
sub
mov
test
popf
adc
sarl
popa
sbb
inc
pop
fcmovnbe
in
lock
sub
xor
jp
fcomp
dec
jg
push
popw
pop
jle
lock
push
insl
mov
aad
adc
push
fdivrs
dec
fnstsw
ret
mov
out
or
ds
jns
adc
pusha
or
inc
xchg
lock
in
xchg
sub
add
mov
ret
mov
ljmp
and
ss
xchg
jecxz
mov
pop
sub
jge
jne
sub
adc
mov
add
mov
in
inc
aad
fimuls
or
push
add
adc
inc
fwait
lret
jno
add
jae
sub
movsb
hlt
dec
dec
shrb
jg
dec
pop
push
xlat
pop
xor
sub
xor
ds
sbb
fdivl
jecxz
adc
jnp
arpl
mov
lock
in
inc
jnp
hlt
stos
jns
dec
loop
xor
lods
sub
adc
pop
mov
adcb
jecxz
adc
mov
daa
pop
mov
dec
insl
mov
sub
pop
test
mov
inc
popa
mov
push
out
mov
js
mov
xchg
ret
arpl
or
clc
sbb
ljmp
lret
sub
cld
jle
lret
sbb
and
mov
mov
cmc
push
rcrl
dec
sahf
sbb
or
sub
pop
jle
jle
push
xor
xchg
sbb
cmp
sub
jns
inc
test
cmc
in
push
sbb
xchg
or
scas
pop
dec
into
mov
pop
cmp
rcrb
insl
or
sbb
daa
mov
mov
data16
sub
rorb
xchg
loope
addr16
lahf
and
mov
ja
jmp
stc
and
lahf
jne
inc
sub
scas
jg
xor
add
pop
shlb
dec
or
jl
or
loopne
xchg
jne
jp
cmc
pop
in
push
dec
pop
in
fistl
scas
ret
sbb
jne
inc
mov
fsubrp
idivb
addr16
xlat
pop
and
jne
pop
adc
adc
inc
xchg
pop
xchg
loop
cltd
push
nop
jae
fisubrl
pop
jb
pop
test
into
fists
and
or
dec
push
mov
or
dec
sbbb
scas
fnstsw
or
adc
or
arpl
or
sbb
jns
add
mov
dec
hlt
cmpsb
jae
cmp
push
into
lret
int3
scas
push
push
fwait
leave
out
stc
inc
les
sbb
sub
and
inc
jp
enter
aam
bound
out
arpl
iret
xchg
xchg
sbb
imul
lock
pop
scas
mov
jle
mov
clc
inc
orb
jb
xchg
in
repnz
div
pop
dec
addr16
insb
xor
jmp
pop
sbb
xchg
imul
xchg
inc
repnz
push
jge
cmpsl
push
dec
aad
mov
xchg
in
in
xor
popf
mov
test
insl
sbb
dec
mov
push
push
aas
fisubrs
inc
stc
aam
in
xlat
or
out
sub
and
loopne
dec
ja
lea
sbbl
outsb
xchg
mov
dec
sahf
ret
in
loop
pop
aas
adc
mov
pop
sbbl
call
mov
sahf
call
mov
adc
lds
ja
sub
fidivl
je
daa
jmp
out
mov
fdivl
lods
cmp
inc
stos
movsl
loope
cmp
push
popf
fldenv
pop
arpl
push
xchg
das
mov
out
leave
fistpl
xchg
ja
inc
jb
pop
test
mov
or
jnp
mov
push
push
nop
sbb
scas
out
cmp
scas
inc
pusha
pop
jge
bound
sub
hlt
aas
jo
pop
inc
aam
xchg
lcall
add
imul
ljmp
sbbb
clc
rorb
jbe
int3
sub
imul
mov
pop
pop
adc
mov
lret
lds
out
mov
orl
insb
cmp
shr
xchg
jbe
push
lcall
andb
out
adc
clc
dec
inc
push
mov
in
sub
mov
xchg
ret
jecxz
mov
and
faddl
mov
lret
sarl
lds
mov
xchg
arpl
jno
ficoms
adc
dec
ja
pop
sbb
jp
aad
cld
add
push
movsl
addb
call
push
gs
cmp
mov
repnz
mov
popa
mov
dec
xchg
lret
sbb
pop
loope
pop
imul
pop
mov
or
shll
dec
xlat
or
inc
lock
mov
xor
test
push
test
lret
or
aas
push
popa
mov
scas
mov
out
jp
pop
xchg
les
xchg
jp
sub
in
rclb
cmc
inc
lock
frstor
add
cmp
leave
ja
sub
push
inc
aad
test
jnp
sbb
rcrl
out
js
xor
fistpl
clc
mov
ja
and
ss
mov
push
pop
cld
movl
inc
movl
xchg
ljmp
xor
pop
dec
jg
mov
mov
mov
stos
mov
insb
into
mov
mov
imul
mov
xor
and
push
pop
fimull
stc
int3
push
adc
aas
adc
fdivrl
or
mov
movsb
mov
icebp
jno
lahf
repz
mov
sbb
les
xor
pushf
pop
xchg
aaa
xor
xchg
xlat
xchg
adc
push
xor
xchg
jbe
mov
sbb
and
inc
stc
addr16
sub
aaa
out
pop
xor
jp
icebp
sub
or
mov
hlt
test
xchg
dec
inc
push
push
shrl
lds
pop
or
xchg
fiadds
xor
mov
mov
loopne
xor
fcoms
cmpsl
mov
lret
add
into
mov
lret
outsl
xor
dec
mov
jp
inc
push
push
inc
ret
cli
pop
outsb
outsl
in
test
test
jg
cmp
movb
push
push
add
xchg
fsubrl
pop
test
adc
sbb
int
aad
mov
shll
pop
cld
mov
push
mov
daa
clc
icebp
lret
stos
fbld
out
test
mov
mov
lahf
add
out
push
shll
repnz
mov
cmp
rol
pop
mov
leave
mov
lcall
scas
cwtl
inc
push
cld
xchg
fbld
mov
cmp
or
cli
mov
popf
mov
rclb
cs
adc
cmp
sub
int
xchg
enter
push
xchg
aam
cld
mov
hlt
insl
pop
xchg
jge
push
repnz
fucompp
mov
sbb
cmp
xchg
xor
and
pushf
dec
fmulp
or
or
ds
pop
jae
adc
xor
int
jno
pop
lods
mov
dec
movsb
ficoms
ljmp
es
jg
stos
mov
outsl
in
jae
out
in
lcall
pusha
mov
push
inc
test
push
xchg
inc
adc
inc
add
stos
bound
test
data16
jge
cmp
in
push
and
test
jnp
cmpsl
jmp
or
daa
adc
test
mov
xchg
jge
inc
push
add
inc
inc
or
out
sbb
int
mov
stos
lds
cmp
sahf
add
add
cmp
fisttpll
sbb
repnz
pusha
sub
xor
pop
cld
aas
stc
cmp
jl
mov
and
dec
push
push
loope
enter
pop
dec
mov
or
and
jae
popf
push
jp
jb
lret
inc
adc
dec
push
ja
adc
jle
mov
fisubrl
imul
mov
lcall
fistl
mov
sub
xor
mov
fldl
jne
sti
xor
pop
outsl
lahf
xor
shl
pop
jg
aas
jmp
aad
into
cmp
fsubl
roll
jne
xchg
subb
rolb
insl
xchg
or
jbe
fnsave
push
adc
pop
in
clc
jge
pop
test
in
and
hlt
into
les
shl
jl
stc
xor
aas
mov
rcrl
fst
testl
inc
out
js
into
xchg
scas
xchg
push
sahf
or
xchg
adc
xchg
xlat
mov
jne
ret
aad
push
in
xchg
sbb
and
push
pop
out
xor
inc
stc
sbb
pop
subl
testl
repnz
mov
inc
jo
xor
mov
ljmp
out
sbb
lock
jb
fwait
and
sub
push
push
add
xchg
dec
int
call
test
jne
test
fsubl
out
cmc
mov
sbb
inc
in
inc
sbb
adc
gs
cmpsl
xor
popa
ja
push
ret
push
out
jge
add
xlat
mov
testb
stos
or
jbe
ds
fldl
andb
nop
jb
aam
cmp
sub
xlat
mul
pop
adc
mov
inc
pop
pushf
lret
and
sbb
lahf
sub
mov
cmp
out
ret
jae
test
jb
ds
sub
pushf
and
lahf
in
jns
pop
sub
mov
dec
loope
sub
cs
shll
jo
test
push
hlt
gs
mov
shll
inc
adc
decl
xchg
repz
shl
cld
icebp
pop
inc
negl
daa
mov
pop
and
cltd
fildl
xor
stos
aaa
mov
into
daa
inc
mov
mov
sub
or
mov
cmp
das
stc
cmc
cmc
das
aaa
shll
pop
or
mov
mov
sbb
aad
or
mov
cmp
mov
rcll
jno
mov
inc
mov
scas
clc
lods
fiadds
xchg
lods
orl
mov
mov
sbb
int
dec
adc
sub
xchg
add
or
das
inc
xchg
push
jae
xlat
add
sbb
ds
mov
mov
xor
inc
idivb
out
movsl
adc
mov
movsb
xchg
dec
push
or
sub
sub
push
frstor
movsl
imul
data16
ja
cwtl
pop
cs
in
inc
loop
jecxz
push
shr
ljmp
das
fs
adc
xor
dec
mov
adc
mov
mov
pop
mov
jb
idivb
jnp
es
out
stos
int
mov
in
sbb
imul
push
xorl
sarb
adc
stos
addr16
mov
ret
div
or
adc
lods
fdivl
xor
imul
pop
daa
push
mov
cwtl
xor
dec
hlt
orl
inc
icebp
jp
gs
add
ja
pusha
pop
add
sbb
cmp
add
inc
inc
ja
fdivs
fldenv
pop
mov
mov
aam
sbb
lods
pusha
cmpsb
sbb
aas
scas
xor
shl
and
inc
push
add
add
jle
jmp
jnp
xchg
mov
test
jo
in
sbb
mov
push
xor
ficoms
jb
fdivs
pop
xchg
sub
stos
cmpsb
and
inc
cld
data16
pop
mov
icebp
sbb
orl
outsb
jae
mov
and
mov
cli
push
mov
fsubrp
loope
mov
int3
arpl
mov
fcompl
mov
imul
and
lock
or
and
sbb
xor
outsb
xchg
mov
pusha
mov
adc
testb
fsubl
lea
in
sbb
mov
insl
aaa
jns
push
dec
sar
mov
dec
rcrl
and
ret
in
in
es
loop
jae
fisubrs
ret
jecxz
dec
fcoms
stos
movsl
ret
push
push
jle
pushf
or
stos
dec
mov
dec
push
pop
movl
mov
fildl
sub
in
mov
std
dec
dec
jbe
sbb
add
sub
inc
xor
imul
cld
push
repz
aam
lds
nop
pop
jmp
in
inc
jl
pop
jae
das
ret
imul
jg
scas
adc
repnz
inc
or
pop
ret
sbb
cwtl
mov
jbe
xchg
bound
jne
cmp
mov
jns
sbb
add
ljmp
sub
cmpsb
into
cld
fisttps
fwait
jo
lds
test
clc
test
rcll
lahf
test
rcl
jmp
fildl
jg
xchg
jmp
xor
cli
mov
cltd
dec
in
scas
std
fwait
sarb
adc
jl
mov
movsb
jns
out
xlat
jo
stc
and
ljmp
loop
stos
fists
and
out
je
out
pop
daa
xchg
stc
and
and
out
adc
push
in
mov
pop
xchg
call
mov
lock
push
mov
xor
shll
mov
test
dec
adc
sub
mov
cmpsl
mov
or
repnz
adc
dec
daa
loop
xchg
dec
mov
jns
mov
into
dec
sbb
push
pop
and
fs
cmp
sbb
nop
in
iret
jo
je
mov
hlt
or
jle
push
xchg
mov
jmp
cltd
or
iret
and
fs
shrb
xor
mov
inc
test
inc
and
pop
sub
pushf
xlat
icebp
or
jmp
jmp
mov
mov
and
out
gs
add
loopne
inc
jle
scas
loopne
push
orb
mov
xchg
pushw
cmpsb
dec
lahf
mov
add
test
int
sub
scas
fcmovne
pop
insb
sub
mov
push
pop
imul
js
shr
jg
pop
imul
outsb
imul
and
mov
lds
lea
sbb
push
jl
stos
jmp
addr16
sbb
inc
loop
adc
jmp
scas
out
inc
jmp
sbb
sbb
ss
xor
pop
stc
sbb
mov
ret
add
dec
cmp
in
test
pop
cs
lcall
mov
lea
cld
mov
fs
pop
pop
jno
leave
jnp
xor
iret
cmp
mov
or
loop
aas
sahf
clc
enter
lods
add
add
cli
adc
pop
test
pushf
push
cmp
es
cmp
adc
pop
aam
in
scas
ret
xchg
add
jns
sbb
mov
xchg
pop
jmp
xor
pop
push
pop
int3
das
pushf
mov
rorl
fsub
jecxz
dec
jno
pop
lahf
les
or
jb
fidivrs
xchg
dec
imul
xchg
or
sub
mov
hlt
shrb
jg
repz
movl
cmp
in
cltd
lcall
jo
adc
fldl2e
dec
jns
mov
cmp
jmp
cmpsb
movsb
jecxz,pt
add
cltd
ds
aas
std
cmp
icebp
ds
fidivs
lret
iret
sahf
adc
dec
std
mov
and
dec
push
fistpl
adcl
adc
mov
inc
jge
daa
stc
inc
nop
ret
lock
inc
mov
xchg
jbe
xlat
insl
jb
xor
out
sub
imul
pop
into
mov
movsl
push
xor
call
xchg
push
fcoms
sub
fucomp
cmp
adc
sbb
faddl
decl
sub
cmp
or
lods
fldt
das
movsb
int
pop
xchg
xor
or
rorl
sbb
pop
jne
fstp
lretw
stc
shll
clc
pop
xor
cmp
popf
xchg
jl
mov
loopne
mov
jg
faddl
fidivl
jne
int3
or
roll
jl
adc
ljmp
mov
in
nop
xchg
arpl
insl
and
repz
jge
inc
in
loope
lods
pop
mov
dec
cmp
push
aad
lahf
shlb
jae
lret
ja,pt
in
pop
sub
test
jle
cmp
repnz
xor
xchg
mov
mov
outsl
push
adc
mov
inc
push
roll
popa
xchg
jge
pop
adc
cmpsl
inc
sbb
mov
xchg
jo
popa
push
add
fsubl
sub
push
dec
int3
dec
sub
adc
ja
mov
add
pusha
mov
cmp
aas
jno
adc
pop
sbb
in
repz
lds
mov
fbstp
jcxz
les
inc
pop
mov
xchg
push
mov
cmp
sbb
les
and
dec
sbb
shrl
pop
adc
jns
adc
dec
xchg
pusha
int3
dec
push
shr
xor
popa
sbb
out
or
scas
push
fwait
jl
mov
gs
pop
scas
push
dec
sbb
sbb
lret
mov
test
xchg
dec
pop
shlb
fbld
insl
adc
rclb
xchg
cli
fcompl
jns
les
or
cltd
stc
popa
and
jb
xchg
ficomps
in
xchg
mov
loop
fsub
lock
ss
cmp
mov
push
in
out
lock
mov
test
inc
mov
out
jns
les
repz
mov
lahf
push
pop
dec
xlat
sarb
xor
dec
jnp
gs
fcoms
scas
aas
es
popf
or
jb
jne
stc
pop
inc
mov
call
inc
cs
out
out
pop
sbb
add
call
cmp
mov
add
rcrl
stos
mov
out
sbb
pop
add
out
xchg
call
ss
inc
inc
movsl
sbb
repnz
cld
inc
sbb
imul
push
and
mov
jp
xor
fsubrl
fmulp
movd
mov
jmp
pop
xchg
int3
sahf
cmp
insl
jnp
mov
push
push
mov
add
dec
call
inc
jecxz
cmp
mov
inc
cmp
ficompl
xor
push
pop
sbb
dec
pop
movsb
cmc
pop
shll
cmpsb
mov
sub
jg
xchg
les
inc
movsl
pop
push
and
out
push
sbb
sti
jl
int
and
mov
aaa
das
popa
hlt
push
and
jecxz
pop
cli
js
mov
test
push
sub
sbb
mov
mov
scas
pop
aaa
test
pop
push
push
cmp
ret
xchg
das
test
je
lret
orb
lret
call
scas
cmpsb
inc
cmp
ret
cmpsl
mov
ficomps
in
sub
adc
xor
ja
repz
jge
inc
push
cmp
orb
outsl
and
aad
mov
push
xchg
das
repnz
inc
shll
or
xchg
sbb
sbb
adc
pop
mov
loope
mov
xor
lock
mov
dec
fnsave
das
adc
pop
inc
cmp
fisttpl
pop
pop
loopne
xchg
ljmp
and
mov
sbb
sub
loope
cmpb
test
jle
push
lret
out
push
int3
popf
add
in
imull
push
jl
sbb
ss
push
push
cmpsb
cmc
xor
or
nop
out
inc
cmp
jns
icebp
or
push
pop
push
jl
inc
inc
xchg
push
or
cmc
in
dec
mov
sub
and
mov
stos
not
sbb
mov
sbb
cmp
lods
movsl
in
dec
enter
xchg
push
inc
lods
mov
xor
jmp
enter
mov
hlt
int
push
cvtdq2ps
cmp
adc
fcmovnb
jl
and
daa
sub
and
mov
adc
pop
adcl
subl
pop
mov
push
sbb
jb
nop
shll
inc
int3
dec
insl
cmpl
stos
jns
repz
mov
dec
add
or
cld
and
xchg
popa
cmp
add
xchg
stos
and
jge
mov
mov
lods
rorb
inc
popa
in
hlt
cmp
cmc
repnz
xchg
sub
jge
shl
fdivrs
pop
push
inc
sbb
mov
mov
int3
sbb
push
popf
repz
ret
imul
xlat
push
rcrb
sbb
hlt
popf
cmp
fsubp
js
leave
fisubl
sarb
enter
lods
or
push
pop
sahf
in
sub
xchg
sbb
sarl
jmp
dec
lret
cmp
hlt
outsb
test
sub
mov
sub
pop
cld
or
test
cmp
es
fnsave
and
packuswb
ljmp
mov
negb
sbb
div
or
scas
adc
je
les
sbb
ljmp
sbb
or
jae
enter
test
mov
lcall
pop
jp
inc
adc
adc
mov
ja
mov
jmp
mov
pop
es
inc
mov
test
cmpsl
imul
scas
test
stos
xchg
jmp
pushf
and
add
bswap
or
out
cmp
sub
mov
fdivp
addr16
pop
mov
mov
enter
fdivl
jns
mov
ret
incb
push
mov
pusha
jns
loop
jmp
xlat
mov
loopne
mov
lds
dec
psubsw
outsl
sub
mov
sbb
lahf
push
lods
adc
ret
mov
sub
dec
cmpsl
xchg
or
lret
ret
jecxz
out
pop
sti
cmp
lret
fmull
xor
bound
test
loop,pt
aam
or
arpl
cmpsb
add
push
adc
dec
jnp
das
fisubrs
mov
leave
rol
dec
addr16
loopne
xor
xchg
ret
or
dec
inc
test
js
fbstp
xchg
or
cwtl
lcall
test
loop
jns
xor
ret
xchg
push
adc
cld
js
add
loope
std
lret
dec
jnp
jno
xor
mov
xchg
xchg
in
xchg
add
jp
jae
xchg
xchg
andnps
rclb
xchg
das
stc
push
pop
cli
loopne
call
fxch
or
jnp
adc
sub
sub
outsl
xlat
sahf
ljmp
xchg
jno
cmp
scas
or
sbb
int
jb
lret
orl
cli
mov
out
jmp
setg
or
in
lret
loopne
aam
sarb
mov
shlb
inc
push
in
jle,pn
mov
sti
cs
aad
test
mov
jmp
int3
or
mov
pop
out
lea
jnp
rcll
mov
inc
aam
add
and
or
and
dec
mov
or
inc
pop
or
adc
mov
and
mov
ret
or
test
mov
jmp
cmp
sti
rcrl
sahf
mov
call
ja
ja
mov
mov
orl
outsl
inc
outsl
in
add
inc
pop
iret
out
outsb
in
or
cmp
jo
cmpsb
fsubrl
mov
mov
das
jmp
lcall
movsb
fs
xchg
or
cli
mov
jne
xor
push
cltd
int3
cmpsl
out
loope,pt
pop
adc
in
add
push
popa
fiadds
mov
jb
dec
lock
test
xchg
mov
and
mov
out
jnp
movsl
push
sbb
pop
popa
in
inc
xchg
fadds
negl
mov
jne
mov
xchg
shlb
das
pop
push
dec
je
add
shl
push
outsb
aas
loopne
lods
jmp
lds
xchg
add
std
xor
cmp
jb
mov
arpl
xor
daa
stos
mov
je
fiadds
jno
in
lahf
ja
or
fdivr
and
push
push
adcb
adc
mov
enter
push
mov
mov
test
pop
sub
xchg
ret
shl
mov
push
in
pop
jge
jg
push
cmp
in
out
rcll
sub
scas
out
xchg
dec
insb
stos
insb
or
int
and
shlb
pop
fidivrl
test
int
outsb
fwait
rcll
dec
adc
arpl
popa
push
mov
jg
mov
out
push
movzwl
lcall
sbb
dec
mov
ja
fistpll
jp
mov
loopne
stos
sbb
and
cmp
fdivrl
pushf
es
mov
adc
mov
aaa
lcall
or
sub
jg
js
lahf
dec
push
push
int3
jns
mov
int3
mov
hlt
inc
std
xchg
stc
dec
xor
aad
ficoml
or
mov
je
outsb
les
cmp
or
shll
aad
cld
clc
movsb
dec
sub
stc
fs
push
loop
repnz
test
dec
clc
out
and
jbe
std
bound
out
rcrb
fstps
mov
or
fildl
jl
aam
repz
ret
inc
jne
sub
insb
fldcw
arpl
mov
lods
add
jae
enter
cmp
jo
xlat
and
xchg
into
out
pop
xor
scas
out
push
loope
push
add
mov
lods
push
pop
mov
add
lret
sbb
div
insb
inc
xchg
add
inc
test
jns
test
popf
dec
cmpb
jge
daa
add
inc
enter
jbe
lahf
mov
add
pushf
adc
sbb
test
mov
mov
inc
js
add
mov
dec
cmovae
mov
xchg
push
outsl
bound
aam
in
jecxz
lahf
loop
fwait
add
popf
mov
dec
xor
cld
lea
stos
jg
pusha
scas
dec
and
xor
dec
add
cmp
and
push
sub
test
pop
out
sti
mov
cmp
xchg
jae
fucomp
xor
int
ss
and
mov
xlat
pop
inc
and
es
mov
vshufps
stc
ja
push
hlt
shlb
pop
cmpsl
or
xor
sub
push
dec
mov
insb
ljmp
loop
sub
sbbb
pop
push
in
loope
xor
sbb
cmpsl
add
imull
push
jb
or
fcomps
in
jmp
dec
mov
pop
mov
xlat
inc
inc
and
emms
jnp
lea
scas
mov
push
mov
pop
xchg
push
stc
lea
mov
add
repz
shll
push
mov
sarl
test
pusha
enter
jle
in
push
and
push
scas
shl
subl
adc
aaa
out
outsb
dec
loop
nop
xchg
cld
inc
sbb
es
pop
mov
lds
push
xor
dec
sbb
ret
insb
repz
insl
inc
sub
mov
das
lds
lock
jmp
add
ret
pmulhw
or
and
outsb
das
cwtl
mov
or
add
aas
pop
mov
bound
xor
imul
xchg
pop
sub
xchg
loopne
clc
dec
push
and
fistpll
inc
loopne
addr16
out
pop
leave
cmc
push
and
ret
mov
icebp
sbb
xchg
push
cmp
lods
xchg
xor
push
lret
repz
cmpsb
test
xlat
sub
or
and
sti
push
mov
ret
jno
dec
mov
and
das
adcb
imul
jmp
mov
jg
jl
or
test
mov
mov
leave
or
jle
sub
lahf
stc
jl
int3
jne
mov
fldt
mov
ret
out
pusha
int3
lret
dec
call
mov
rolb
add
dec
leave
mov
fidivrl
fcmovb
sub
mov
popa
and
mov
stc
repz
in
lahf
rcrl
incl
xorl
push
or
inc
dec
mov
push
stos
addr16
in
mov
pop
aaa
test
add
cmpsb
mov
push
enter
mov
dec
or
dec
adc
icebp
stos
dec
add
push
mov
inc
add
cmp
fimuls
xor
cmc
sub
mov
shrl
loop
inc
cmpsb
filds
push
repnz
dec
mov
jle
xor
cmpsb
mov
scas
leave
fbld
or
dec
mov
pop
xchg
lds
repnz
shl
lea
inc
pop
push
or
mov
enter
or
inc
test
subb
js
pushl
sar
in
loopne
lret
jb
insb
in
dec
pushf
rcrb
pop
mov
mov
fs
loopne
out
or
cmpsb
and
cmpb
and
ror
mov
repz
push
cmpsb
mov
out
loope
out
sbb
dec
push
xor
sbb
jecxz
jl
in
jle
sbbb
jae
dec
ljmp
xor
dec
pop
pop
sahf
orl
cmpsl
ds
or
hlt
lock
mov
aam
adc
push
gs
jb
and
push
cs
mov
adcl
outsb
loop
push
frstor
add
xor
push
mov
clc
adc
rorl
adc
cmp
jne
loope
xchg
inc
xor
mov
dec
shll
push
inc
in
or
jecxz
mov
loop
lret
repz
jne
push
sub
jo
std
add
in
cwtl
add
loope
into
mov
jbe
fidivs
je
loopne
xchg
jmp
xchg
xchg
mov
push
gs
inc
dec
mov
stos
out
inc
aam
std
xchg
into
sti
mov
aad
and
push
cltd
fcmovnb
adc
loopne
in
jne
inc
sbb
pop
inc
cs
cmpsl
movsb
cwtl
or
xchg
out
int3
add
mov
in
jge
push
loope
cmp
out
dec
pushf
iret
adc
stos
jecxz
in
and
push
movsl
pop
mov
push
pop
in
imul
lods
xchg
shll
subb
stc
inc
add
or
pop
gs
dec
hlt
jno
dec
xlat
repnz
leave
inc
xchg
pop
and
pop
icebp
addb
sahf
adc
cltd
sbb
das
push
lcall
add
adc
ljmp
push
adc
xor
dec
mov
push
jg
not
mov
dec
notb
mov
inc
repz
ret
inc
push
addr16
dec
xchg
xor
xchg
into
jns
jg
dec
and
push
clc
add
ja
ds
lds
test
adc
xchg
shll
shlb
pushf
sbb
jl
push
adcb
ret
call
aad
mov
shrl
aad
outsl
mov
es
andl
inc
jno
shll
fsubrs
clc
imul
mov
in
stos
and
ss
and
fsubrp
arpl
mov
add
or
xchg
jbe
xchg
loopne
popf
jmp
loop
mov
imul
adc
idivb
outsl
out
popf
or
jbe
adc
xor
retw
sbb
sub
scas
cmp
xchg
mov
clc
out
dec
loope
cmp
movsb
sub
mov
or
sbb
stos
bound
pusha
gs
xor
test
mov
jmp
jnp
les
stos
lret
leave
insb
stos
and
leave
pop
mov
mov
in
add
xor
dec
stos
mov
xor
aas
xor
jmp
lahf
arpl
xchg
jecxz
dec
mov
xchg
push
aam
paddsw
jp
data16
das
add
sbb
jne
mov
pop
mov
je
xor
and
jns
mov
fbld
je
ret
cmp
int3
out
mov
aas
aam
and
out
adc
adc
xchg
xor
insl
add
out
js
loope
sti
jecxz
jnp
int
popa
mov
cmpsb
and
lcall
loopne
inc
mov
idivl
jmp
lret
and
js
pop
ljmp
testb
jae
popf
and
add
pop
jecxz
add
shl
xor
decl
in
mov
std
insb
outsb
aaa
push
mov
out
sbb
inc
xchg
xor
jle
xor
scas
sar
xchg
cmpl
mov
adc
cli
test
pop
sti
mov
out
int3
fistpll
lahf
pop
xchg
sub
jle
dec
movsb
dec
pop
push
xor
push
lcall
mov
shlb
pop
mov
mov
jae
fldt
loopne
or
sub
and
xchg
dec
sbb
lods
and
sub
xor
stc
cmpsl
cmpsb
sbb
mov
inc
scas
jl
sub
mov
adc
xlat
inc
push
mov
jo
cmp
aam
dec
mov
and
mov
stc
mov
sbbl
ss
inc
cmp
std
jge
inc
int3
mov
das
jo
or
aas
fbld
outsl
and
das
cltd
or
add
shld
int
add
aaa
js
in
jecxz
adc
or
sbb
xchg
push
es
and
test
push
fisttps
and
data16
lods
jmp
xor
sub
ret
jnp
bnd
dec
nop
mov
adc
sub
xlat
sub
inc
cmp
add
dec
popa
sbb
fs
lret
push
lahf
mov
cmp
pop
addl
test
xchg
enter
adc
pop
mov
out
mov
movsb
add
sarl
push
cli
fs
inc
jl
ret
mov
sub
daa
sbb
dec
mov
push
pop
sbb
sahf
mov
push
xor
push
cmp
or
stc
aaa
cwtl
nop
jne
stos
mov
and
lock
cltd
addr16
cli
pop
in
out
incl
sti
cs
xor
in
dec
cmp
mov
sub
testb
in
in
cmp
dec
loopw
aaa
or
xchg
inc
in
xor
mov
cmp
jnp
mov
scas
pop
jne
and
cwtl
iret
orl
push
imul
xor
push
cmpsb
bound
mov
pop
aas
pop
shl
mov
daa
test
jbe
adc
mov
aas
lret
mov
lahf
mov
subl
mul
mov
shl
leave
and
scas
push
pop
pop
and
shll
pop
pop
popf
xor
pushf
push
insb
jnp
cmpsb
ds
or
jnp
sbb
add
outsb
fstp
bound
inc
or
mov
mov
or
icebp
and
lock
aad
adc
xchg
inc
mov
mov
call
out
inc
lret
in
rcrl
inc
daa
and
inc
mov
cmp
dec
loope
mov
xor
es
jmp
push
sub
mov
xor
fstpl
jo
lds
divb
andl
rolb
mov
cmp
mov
adc
lea
stos
jmp
call
xchg
bound
mov
sub
push
cli
xor
repnz
mov
imul
insl
jl
or
popa
jle
rclb
xchg
pop
divb
ds
inc
leave
inc
in
sbb
fdivrl
mov
enter
add
scas
insb
mov
sbb
adc
out
stc
xor
int3
nop
das
addl
stc
dec
movsb
pop
jge
arpl
pop
fwait
xor
jnp
sbb
sbb
mov
popa
setle
sahf
mov
add
add
adc
and
fcomip
pop
mov
or
dec
in
and
aam
in
xor
ret
repnz
push
xor
dec
aad
inc
xchg
xor
adc
cmp
push
and
pop
lahf
scas
out
adc
mov
push
xlat
or
sbb
mov
in
iret
or
mov
push
fistpl
jmp
push
std
mov
pop
push
and
loop
je
fs
push
data16
sub
mov
aaa
insb
popf
jl
dec
xchg
div
cmp
into
mov
jge
and
aas
clc
mov
pop
cmp
lret
cld
push
sbb
scas
in
jo
in
aam
insb
fstpt
and
dec
iret
xor
daa
hlt
sub
mov
or
push
mov
mov
xchg
xchg
lcall
imul
mov
adc
xlat
out
add
jno
sti
mov
popf
es
ret
inc
xchg
xor
fnstenv
out
mov
xchg
mov
ljmp
jb
inc
negb
rcr
dec
lock
aas
inc
out
mov
jge
movsb
sbb
fcomi
test
xorl
shlb
in
lret
lcall
or
bound
insl
aad
xchg
mov
push
addr16
pop
stos
xchg
negb
mov
shll
arpl
fcoms
jmp
pop
pop
add
mov
test
imul
loope
cs
pop
jbe
cmc
loope
pop
or
ficomps
pushf
pop
in
mov
stc
adc
popa
rclb
dec
jo
and
jp
mov
inc
cmc
stos
cmp
cld
sbb
das
add
data16
mov
shll
mov
fimull
push
int
sub
jl
jle
pop
dec
leave
test
dec
mov
insb
sub
outsb
sub
mov
adc
fistpll
jns
and
jle
push
call
arpl
lods
or
or
cmpsl
ss
mov
push
subl
xchg
cmpsl
fmulp
pop
cmp
push
or
jp
mov
lcall
add
push
xchg
fs
lret
add
cs
hlt
jmp
sub
bound
in
jb
insb
arpl
cmp
mov
xlat
and
arpl
imul
mov
in
loopne
and
in
add
mov
sub
imul
cmp
stos
data16
mov
jle
sbb
fildl
cli
sahf
es
jecxz
or
mov
add
int3
xor
or
xchg
xchg
out
out
mov
shl
jbe,pn
sahf
inc
stc
icebp
push
dec
pop
call
mov
xor
pop
jle
test
mov
fadd
mov
mov
xchg
push
sbb
mov
mov
adc
sbb
inc
loope
dec
or
push
add
xor
ss
sbb
or
std
pop
loopne
bound
ja
mov
jae
mov
mov
xlat
push
lahf
test
jp
outsl
out
and
adc
or
or
mov
sbb
adc
mov
movsl
dec
mov
inc
mov
je
pusha
jl
mov
hlt
les
shll
test
fmul
aad
out
mov
sub
pop
arpl
mov
bound
inc
cmpsl
lea
dec
xor
push
sbb
iret
insl
loopne
faddp
cli
mov
enter
inc
imul
mov
add
add
push
pusha
mov
xor
pop
push
xchg
shlb
mov
pop
in
mov
jg,pn
mov
ds
movsb
xor
mov
mov
dec
inc
mov
and
outsb
aaa
loope
cwtl
sahf
shrl
insl
pop
fimull
stc
loope
sti
ret
nop
jne
xor
push
mov
loopne
jle
das
into
or
andb
scas
mov
cmpb
popa
sub
lods
push
subb
xor
adc
lds
mov
inc
divl
shll
or
inc
int3
or
inc
dec
mov
imul
pushl
cmpb
aas
fnstsw
mov
push
inc
xor
nop
add
insb
adc
mov
adc
ja
dec
gs
loopne
mov
jae
shlb
sbb
push
inc
test
or
fs
cmp
fldl
dec
into
aas
fisubs
sbb
cmp
mov
xabort
jge
push
and
mov
icebp
mov
mov
aam
jne
out
pop
xlat
mov
mulb
xchg
or
inc
inc
jp
jns
mov
or
fdivrs
or
fisttpll
mov
push
dec
and
dec
mov
stos
fwait
popl
movsl
push
imul
jne
or
insl
je
mov
in
push
or
xchg
jle
test
orl
sub
mov
ret
adc
dec
push
test
fwait
sub
pop
lock
mov
jns
lods
repz
cmpsl
cmp
outsb
pop
push
mov
out
mov
repz
pusha
lea
sbb
jb
ret
xchg
mov
add
in
fbld
call
lods
in
push
xor
jbe
mov
cli
fisttpl
flds
xchg
aaa
icebp
push
and
cmpl
or
sbb
test
out
mov
mov
sbb
mov
push
in
popaw
and
mov
imul
inc
pop
icebp
sbb
cmp
sbb
shrl
mov
xor
sbb
fbld
out
in
xchg
jb
sbb
pop
fidivs
and
loopne
sub
sub
jno
sbb
sti
ret
xchg
add
mov
or
or
or
das
icebp
in
rclb
faddp
mov
inc
jmp
mov
js
ljmp
in
dec
or
icebp
jbe
add
push
or
push
addr16
dec
fwait
jns
imul
test
pop
push
aaa
jg
push
lock
jns
mov
inc
pop
mov
jmp
cld
lods
mov
test
pop
cs
scas
cmc
cmp
shl
insl
push
inc
sbb
inc
dec
add
mov
std
push
or
or
lea
mov
pop
jg
mov
in
lea
rclb
xor
cld
xchg
jb
cmp
mov
cmp
sub
mov
pop
xchg
jo
mov
adc
and
shlb
or
or
mov
aas
push
jle
xchg
stos
xorl
lds
inc
hlt
lock
cltd
ljmp
ljmp
pop
int3
push
mov
pop
adc
ss
mov
push
xchg
and
sahf
pusha
lock
ja
xchg
aas
dec
xor
jle
xchg
bound
out
loopne
mov
ja
push
iret
out
ret
xor
mov
sbb
sbb
mov
sbb
xchg
mov
xorb
repz
loopne
lcall
dec
or
ljmp
push
cmp
insb
pop
or
mov
stos
lret
and
dec
push
addr16
ss
scas
mov
aas
jae
mov
mov
std
dec
aas
mov
sahf
cmp
sub
mov
xor
test
loope
jg
or
or
jno
test
pop
in
xchg
push
push
stos
mov
ja
mov
dec
and
pminub
xchg
scas
jg
cmp
ja
push
pop
fs
add
and
lods
inc
mov
rcll
lods
std
mov
mov
jg
push
mov
xchg
or
mov
imul
nop
imul
rep
bound
fistpl
mov
dec
das
sti
jg
inc
mov
into
mov
test
aam
dec
in
in
orb
jp
xchg
cmpl
mov
xor
outsb
cld
jnp
mov
and
sahf
adc
adc
push
imull
in
fists
scas
add
cmp
jae
and
out
dec
adcb
jnp
out
and
lds
imul
in
xchg
xor
popa
mov
stos
das
mov
or
mov
add
jno
clc
sbb
aad
add
arpl
imul
clc
fcoms
push
fisubs
ljmp
adc
iret
aad
outsb
push
push
cmpsb
es
stc
add
jns
xchg
add
in
inc
xor
dec
dec
xor
inc
scas
sbb
shlb
cmc
or
dec
cmc
pop
cmp
sub
cmp
and
or
inc
out
pop
or
loope
cmp
es
and
rcrl
xor
loopne
mov
cltd
pop
cmc
inc
fcmove
cmp
jnp
movsl
aaa
cmp
push
xchg
addr16
test
dec
scas
fldl
fstpt
sarl
xor
mov
xchg
dec
rcll
sub
cmpsb
dec
pushf
and
not
mov
addr16
add
push
div
or
mov
pop
push
pop
imull
mov
inc
mov
ja
das
daa
push
and
bndstx
ret
icebp
and
rcrl
negb
xlat
cld
enter
sbb
lret
sub
pop
into
outsb
jo
out
movsl
test
insb
inc
jle
jno
push
mov
fistps
adc
jae
mov
addr16
push
jmp
xchg
mov
push
pusha
movsl
or
cmp
mov
and
mov
mov
insl
das
or
cld
pop
push
mov
fs
test
lea
inc
movsb
in
inc
pop
cmp
faddl
rorb
adc
outsl
jl
or
stc
adc
mov
inc
or
lock
pop
int3
sub
pop
xchg
loopne
cmp
push
mov
lcall
pop
mov
aas
dec
add
inc
lods
xchg
push
sbbb
fists
and
add
push
pop
dec
push
sbb
add
and
jb
popa
xchg
xchg
xor
cmp
in
push
sub
push
and
js
pop
mov
pop
cmp
pop
xor
das
lret
bound
sbb
push
jmp
pop
out
push
sahf
icebp
and
inc
jmp
gs
shll
mov
lcall
test
lea
mov
add
out
jecxz
mov
insl
movsb
adc
jno
ljmp
sub
xchg
xchg
cmp
inc
mov
insb
jo
dec
jge
pusha
dec
and
or
inc
mov
sbb
xor
pop
outsl
lahf
mov
test
idiv
ds
xchg
popa
ss
sbb
xor
in
jl
out
and
adc
pop
add
lea
aas
daa
xor
push
sti
bound
scas
sub
enter
movsb
sbb
or
xchg
mov
add
out
call
or
mov
dec
push
push
pop
stos
push
outsl
shl
fbld
inc
out
sarb
stos
andb
pop
int
jle
dec
sbb
pop
scas
sti
cmp
test
mov
xor
mov
pop
in
movsl
xchg
add
sbb
cmpl
xchg
int3
arpl
lea
sbb
mov
imul
std
ret
xchg
sbb
and
sbb
cli
mov
push
filds
inc
out
sub
push
pop
ljmp
pop
insl
add
sub
imulb
pop
mov
mov
mov
imul
je
inc
push
xor
xor
mov
and
mov
sbb
cwtl
mov
loope
rcrb
test
xchg
xchg
imul
dec
iret
rcrl
in
loope
rcl
xor
call
pop
fdivs
enter
fwait
inc
ss
nop
xchg
dec
cmp
dec
dec
dec
stc
int
mov
xchg
out
mov
nop
xor
cmp
adcb
lea
mov
jnp
mov
in
sub
pop
add
pop
push
cmp
into
orl
jle
pop
scas
das
push
jb
ljmp
push
ret
call
pushf
jle
xor
add
std
movsb
inc
pop
sahf
inc
clc
xchg
lret
rorl
scas
cmc
push
bound
mov
or
xor
lcall
cmp
iret
adc
and
mov
out
out
sbb
and
mov
data16
pop
sbb
iret
push
mov
imul
movsb
xchg
pop
adc
outsl
inc
daa
pop
sub
das
mov
stos
loop
sbb
xor
clc
std
xchg
in
lods
or
xor
outsb
jnp
pop
es
stos
lods
ret
jl
mov
add
mov
enter
movsl
sbb
repnz
ret
or
dec
outsb
shll
cwtl
sub
lcall
jne
cmp
in
scas
sub
and
lock
lcall
cmovnp
icebp
pop
push
pcmpgtw
mov
insl
sbb
stos
inc
push
push
shrb
jbe
adc
sbb
xor
jnp
scas
outsl
sbb
out
sti
mov
jnp
dec
adc
sbb
inc
xchg
fdivrl
lods
not
andl
jae
and
jmp
push
mov
push
lahf
adc
push
insb
and
push
fildl
inc
push
adc
cmc
mov
repnz
and
sti
sbb
xor
inc
mov
sub
adc
gs
xchg
mov
aas
gs
xchg
mov
mov
out
call
push
and
out
insb
rorl
pop
sub
sub
cmp
push
fs
pop
push
jne
mov
jne
xchg
jae
fists
jle
push
jno
jnp
sbb
ja
test
pop
jge
sub
inc
data16
jle
hlt
std
bound
fucomip
push
inc
cmp
cmc
jmp
xchg
ljmp
push
xchg
int3
sarl
sub
imul
xor
push
loope
cmp
mov
lcall
mov
int
sahf
xlat
pop
sbb
add
and
cmp
mov
testl
mov
shrb
or
mov
loope
imull
int
fbld
mov
xchg
lods
imul
popa
lods
pop
push
das
mov
pop
xlat
loop
dec
inc
push
in
ljmp
out
dec
mov
adc
in
mov
jmp
pop
sub
shr
aad
out
jp
sbb
xchg
gs
add
ljmp
mov
das
xor
ljmp
xor
cmp
setl
xchg
mov
js
lock
pop
add
stc
or
or
cltd
in
outsb
adc
cs
or
inc
icebp
je
cli
jl
mov
iret
mov
movsb
sahf
mov
add
jns
pop
cvtdq2ps
mov
setg
push
jg
dec
sahf
pop
mov
lret
popf
xchg
std
mov
aas
xchg
mov
jb
lret
std
in
jo
ljmp
fldl
jge
mov
inc
xchg
bound
mov
sbb
dec
mov
xlat
out
pop
add
mov
popf
adcb
loope
cmpsb
shll
shl
out
test
sbb
scas
rcll
leave
mov
imul
dec
adc
sbb
stc
mov
push
call
or
outsl
mov
add
mov
push
into
add
je
xor
insb
mov
movsb
pushf
cmpb
xor
and
mov
push
mov
sub
push
xchg
mov
dec
shrl
clc
cvtdq2ps
movsl
repz
xchg
dec
pop
sar
in
bound
lahf
int
cmpsb
sub
das
jge
mov
das
inc
les
mov
test
ljmp
pop
or
imul
or
arpl
pop
add
clc
push
mov
jns
ja
fisubl
cmp
cmpl
add
int
mov
loop
shlb
jae
enter
call
cltd
gs
add
push
dec
mov
adc
mov
rcrb
nop
cli
cld
dec
int3
mov
fisttps
bound
mov
sti
sub
sbb
mov
cltd
in
call
ss
movb
inc
lds
sti
sub
das
test
dec
outsb
movsb
pop
xor
out
fstpt
sbb
cmpsb
std
push
pusha
lods
mov
push
sbb
dec
lcall
imul
sub
add
mov
out
push
jbe
rcll
lcall
out
loopne
lahf
in
pop
pop
fwait
scas
dec
out
inc
sbbl
mov
and
mov
ds
insl
jmp
jmp
sub
xchg
mov
sbb
mov
out
inc
movsl
xor
dec
in
add
ja
mov
shrb
pop
pop
mov
jne
popa
mov
loope
pusha
fwait
nop
scas
js
scas
xor
push
add
or
jecxz
loopne
mov
push
jmp
add
mov
int3
sbb
decl
xor
ret
das
gs
add
scas
outsb
push
bound
jge
or
pop
je
and
dec
fwait
leave
push
pop
stos
mov
inc
dec
xchg
xchg
ja
int
and
aaa
and
adc
pop
jp
jg
lret
test
das
je
and
jmp
cli
lock
cmp
enter
fadds
loop
sub
out
fwait
pop
or
cli
leavew
daa
jle
movsb
out
adc
add
adc
popa
xchg
xor
test
adc
rolb
fiaddl
stc
inc
fs
adc
fists
push
xor
mov
jne
add
cwtl
loopne
fsts
movsb
sub
sub
sbb
lcall
lret
pop
mov
jecxz
push
push
lahf
mov
and
out
fs
sarb
fnsave
xchg
lret
mov
mov
mov
dec
pop
sub
pop
jmp
fisubl
sbb
shll
aad
fistps
sahf
cmp
xlat
sti
mov
inc
sub
or
push
loope
xchg
adc
aaa
repz
cmp
adc
dec
xor
ret
hlt
and
loopne
mov
and
fistl
pop
dec
mov
enter
es
push
mov
arpl
outsb
imul
outsl
xchg
lret
pop
mov
xchg
out
jg
add
xchg
push
test
aam
popa
fistps
add
ret
enter
dec
popa
xchg
mov
cmp
mov
xchg
dec
mov
rclb
sub
jl
loopne
jmp
fcmovnbe
add
inc
add
xorl
jnp
push
pop
pusha
mov
lods
mov
jno
loope
sub
sub
dec
pop
sti
jns
xor
nop
subps
scas
pop
push
rcr
ss
pop
mov
inc
and
dec
sbbl
push
adc
inc
xchg
mov
pushf
add
jne
xchg
pop
push
cld
ja
lods
push
mov
mov
mov
js
aas
aad
jecxz
or
mov
xor
sti
dec
sbb
loope
adc
leave
jne
nop
stos
adc
ret
fstl
mov
push
shrl
in
mov
sbb
cmp
inc
dec
stos
xchg
les
adc
mov
and
fistl
jne
and
test
pop
or
xor
adc
out
in
pop
in
sbb
lret
lds
lods
push
out
inc
jmp
mov
push
test
mov
pop
fcomip
push
sahf
mov
cwtl
cltd
outsl
call
push
fidivs
outsb
cmc
outsl
sbb
push
pop
jmp
aam
mov
mov
lcall
sti
and
xchg
js
and
lods
int
in
out
pop
add
aam
pop
and
xor
adc
mov
fs
mov
lahf
inc
or
sbb
fcmovbe
cmc
or
ljmp
mov
mov
pop
out
fnstsw
popf
ja
mov
in
test
dec
mov
xchg
pop
jmp
mov
mov
and
in
pop
jb
add
addr16
adc
arpl
fdivrl
adc
ljmp
out
inc
ficomps
pop
jp
jb
or
sub
cld
push
or
ljmp
jl
mov
aaa
sub
out
rep
jo
and
je
es
arpl
sbb
iret
push
jmp
mov
int3
cli
xor
inc
cmc
adc
mov
in
jo
xor
mov
test
mov
ljmp
mov
addl
cmp
push
mov
jp
push
loopne
adc
pop
push
outsl
cs
ds
rcrb
jge
insl
mulb
jne
xor
jge
in
js
mov
pop
sbb
adc
data16
inc
mov
cmpsl
push
popa
repnz
add
lods
push
xchg
cli
pop
fstpl
pop
push
rorl
and
mov
or
gs
inc
es
dec
xor
inc
dec
dec
pop
adc
dec
aad
mov
fcmovnu
or
lods
out
lahf
dec
xor
jle
sbb
aam
jp
or
inc
cmp
cmp
push
dec
test
ja
incb
xchg
fisubl
pushf
cmp
sbb
cmc
sar
cltd
shrl
push
xchg
push
stos
ja
mov
fwait
lods
inc
out
ja
mov
popf
mov
inc
and
jns
lods
jb
scas
adc
out
fiadds
lock
sbb
imul
repnz
sub
push
inc
aad
or
pop
push
push
scas
aas
ret
and
pop
mov
ja
mov
dec
jnp
cmpsb
xchg
je
outsb
imul
icebp
test
jae
loopne
fcmovb
xchg
push
mov
cmp
cmp
ds
into
out
test
adc
fsubrp
mov
out
and
push
fdivrs
out
idivb
inc
xor
xchg
or
xor
jmp
ret
lret
ljmp
and
lret
xchg
cmp
mov
je
sub
fs
aad
call
stos
icebp
les
sahf
xchg
pop
dec
push
push
in
imul
adc
jno
stc
in
in
mov
pusha
and
sbb
xchg
cmp
outsb
pop
ret
jge
lcall
push
sbb
clc
imul
dec
loopne
cltd
mov
shlb
movsl
aam
ret
add
fwait
push
test
jle
lcall
push
sbb
outsl
mov
aas
negl
icebp
js
mov
xchg
in
mov
adc
ret
mov
mov
sbb
cld
out
dec
pushl
inc
cltd
in
inc
movsb
nop
or
sub
add
cmp
cwtl
add
inc
jne
iret
loope
ja
or
push
pop
pop
inc
out
xchg
and
stos
push
xor
std
in
sub
mov
idivl
shll
and
jns
std
mov
add
pop
pop
pop
sub
adc
or
and
and
mov
add
pop
lahf
xchg
sbb
mov
out
adc
push
xchg
mov
xor
sarl
xor
inc
cmc
mov
xchg
jmp
mov
out
shrb
push
out
insb
mov
xlat
xchg
sbb
mov
mov
push
adc
add
mov
jnp
inc
cld
sbb
and
lds
jp
sub
mov
inc
pop
jl
sbb
mov
xor
mov
xchg
jbe
mov
mov
movsb
cltd
jns,pt
or
adc
push
mov
clc
cltd
scas
mov
cs
or
pusha
jb
fdiv
xor
out
in
jecxz
mov
bound
jbe
mov
sbbb
and
mov
loopne
fistl
mov
xchg
std
insl
xchg
jmp
jl
stc
andnps
push
sbb
ret
dec
xor
push
repz
loope
mov
push
loopne
xchg
add
mov
aas
std
inc
in
les
sbb
and
cmpsb
test
shl
pop
xchg
ds
lock
cmpb
mov
arpl
add
jne
add
push
mov
mov
jecxz
or
or
push
jb
fildl
xlat
pop
dec
repnz
pop
push
cmp
inc
sub
xchg
inc
jnp
mov
out
pusha
mov
mov
mov
arpl
mov
push
mov
jle
faddp
aam
push
movsl
outsb
divl
add
push
inc
add
orl
fwait
mov
lcall
inc
mov
push
sbb
dec
popl
push
in
or
jmp
mov
rcll
lret
push
or
dec
out
jnp
push
je
pushf
pop
lret
adc
adc
lret
adc
mov
add
sbb
jne
shl
dec
mov
dec
loopne
mov
enter
aad
xchg
and
push
mov
pop
jne
mov
dec
ja
mov
popf
sarl
das
push
inc
cli
mov
stc
push
push
jg
sqrtps
push
cld
xchg
scas
insl
jge
cmp
cwtl
push
out
push
sub
mov
cmpsb
push
jmp
jbe
xchg
jl
outsl
pop
mov
push
bnd
mov
in
enter
xchg
stos
js
popf
jg
inc
mov
mov
cld
fwait
sti
leave
mov
mov
xor
jb
aas
mov
test
mov
add
or
shrl
scas
aas
insl
pop
mov
fwait
cmpl
cmp
clc
mov
pop
aaa
dec
or
ss
inc
rcrb
fstpt
mov
repz
loop
ljmp
jp
sub
loope
push
sbb
lds
subb
jne
shl
dec
xchg
test
cld
xchg
mul
mov
testl
jo
jmp
cltd
mov
fiaddl
int3
loopne
addl
loop
icebp
mov
lret
add
dec
or
pusha
xchg
jle,pt
pop
lods
call
mov
add
les
add
movsb
subl
cmpsl
aaa
push
into
js
jnp
xchg
or
mov
add
iret
je
dec
inc
adc
xor
nop
pop
out
xlat
out
adc
ret
enter
test
aaa
jb
fucom
call
int3
mov
push
js
out
sahf
add
push
divb
or
cmc
rcrb
rcll
and
sub
stos
jno
adc
ja
xor
fistps
and
fldl
push
jle
pop
out
out
add
call
push
xor
xor
rorb
enter
xchg
flds
xchg
lret
xor
pop
push
sbb
mov
or
negb
inc
jge
xlat
stos
mov
mov
dec
xchg
sub
sub
out
cs
push
sahf
imul
ret
mov
outsl
shl
or
adc
or
mov
mov
xor
mov
cmpsb
xchg
stos
test
push
insl
sahf
push
sbb
jge
and
cmp
loop
jbe
bound
mov
outsb
lock
aas
adc
add
fs
xchg
mov
push
pop
gs
jl
scas
cmp
pop
push
and
rcll
rol
push
scas
in
les
xor
xchg
fwait
mov
dec
and
int
inc
mov
sbb
imul
out
push
js
dec
into
test
sbb
jae
mov
cmp
ljmp
outsb
push
push
cs
sbb
adc
mov
lea
mov
outsb
xchg
fidivrl
insb
arpl
fsubrl
adc
int3
icebp
enter
and
cmc
scas
jb
fisubl
push
inc
pop
clc
pop
pop
add
adc
enter
ljmp
fiaddl
xlat
lock
mov
and
pop
pop
push
popf
js
xchg
xor
out
mov
stos
inc
or
push
sub
fdivrl
fucomip
in
mov
arpl
lock
xchg
xchg
rol
dec
push
mov
mov
bnd
roll
in
xchg
insl
add
xchg
repnz
xor
es
push
jge
cmp
dec
data16
scas
aaa
mov
mov
mov
int3
btc
xchg
in
cmpb
jge
clc
fdivrl
pop
sub
xchg
pop
in
arpl
sarl
arpl
dec
sbb
es
mov
fstpt
jo
pop
adc
icebp
pushf
rorl
dec
lea
movsl
or
cmpsb
push
sti
sbb
mov
pop
or
fisubs
das
jmp
xchg
xchg
je
scas
scas
iret
sbb
xor
testb
pop
icebp
dec
xchg
cs
lock
fcompl
fisubrs
test
mov
out
ljmp
packuswb
aam
sar
sbbb
test
imul
stos
add
add
roll
roll
test
lods
test
or
push
lods
push
fcoml
xchg
inc
push
add
xchg
mov
adc
dec
mov
fs
and
lds
pop
int3
in
ret
mov
jmp
cmp
daa
add
adc
ss
mov
mov
mov
jo
fldz
or
cltd
mov
into
pop
add
jb
sub
subl
fstps
ret
movsl
dec
xchg
andb
pop
pop
aas
or
pop
jae
mov
mov
enter
imul
lret
lds
pop
cmp
aad
popl
mov
jmp
jmp
test
and
icebp
add
mov
sahf
pop
sarb
js
call
xchg
mov
cmc
les
sbb
repz
mull
mov
test
cmp
fsts
mov
rcr
or
mov
mov
sbb
int3
call
adc
les
cmpsb
arpl
push
dec
xchg
rcrl
pop
dec
mov
sbb
pop
roll
loope
insb
aam
test
cwtl
sbb
jle
mov
cld
int
movsb
sarb
xor
pop
inc
cmp
cld
in
sarl
lods
orb
sub
adc
icebp
sub
fnstcw
dec
cmp
and
pop
cld
lret
in
mov
imul
and
aas
mov
dec
int3
ds
nop
jg
cld
xchg
rcr
fcoms
cmp
clc
test
fs
stc
stos
lcall
xor
arpl
mov
cltd
lahf
shrb
lea
loope
and
ljmp
mov
lret
mov
push
xor
lods
leave
xchg
jo
clc
cwtl
cmpsl
and
rcll
subl
mov
mov
inc
mov
test
xlat
aam
shrl
jae
or
dec
in
mov
sbb
xor
movsl
in
leave
arpl
jns
cmpsl
mov
dec
xchg
shlb
hlt
xchg
call
add
data16
sub
ss
incl
fdivl
pushf
lcall
rcl
pusha
imul
or
out
mov
adc
inc
popl
push
scas
out
call
stc
pop
mov
jl
loope
out
mov
mov
insl
aaa
idivl
push
dec
enter
sub
nop
int3
jb
les
push
mov
cmp
in
jmp
xchg
xchg
test
dec
push
inc
jle
jge
arpl
jge
enter
add
push
sub
xchg
push
shl
mov
ret
xor
test
and
cwtl
dec
pop
adc
leave
xchg
loope
outsb
and
fs
sub
jmp
jp
inc
inc
cmp
mov
je
sbb
in
jb
lods
cld
add
stos
aas
xchg
jge
data16
stos
popf
xor
mov
subl
loope
xor
add
jge
xor
mov
inc
fmuls
xor
pop
repz
and
pushf
andl
out
inc
call
and
in
inc
xchg
push
or
test
in
andb
insb
jnp
arpl
sahf
xor
into
clc
xchg
mov
jnp
or
sti
jne
movsl
sub
inc
cltd
jne
ljmp
ret
imulb
adc
inc
and
mov
mov
mov
outsl
mov
iret
dec
lds
jae
adc
push
sbb
aas
cmc
sub
push
repz
jo
dec
out
cmp
jmp
movsl
enter
add
jp
sti
ret
dec
hlt
mov
loop
rorb
xor
cli
push
push
inc
push
mov
inc
test
and
inc
and
rorl
cmp
pop
imul
xlat
movaps
jp
mov
dec
push
out
xchg
ja
pusha
dec
mov
or
sahf
lahf
pushf
lea
jbe
das
jno
in
aaa
jp
mov
sbb
pop
mov
es
add
xor
sti
lods
adc
pop
and
insb
cmp
in
sahf
sub
into
paddsw
popa
shll
out
sbb
jns
mov
jns
mov
sub
stos
and
cmpsl
repnz
mov
sbb
sbb
mov
pop
andl
xchg
rclb
iret
sub
repz
cmp
bound
sbb
push
xor
jg
dec
neg
cmpsl
scas
xchg
mov
and
sti
mov
mov
loopne
int3
jl
iret
popf
mov
in
push
cmp
aad
xchg
dec
in
and
out
jecxz
mov
fsubl
movsb
pop
pop
outsl
pusha
test
icebp
mov
mov
leave
mov
mov
divl
enter
stc
pushf
arpl
mov
sub
adc
push
and
jo
adc
jnp,pt
movsl
sbbb
sbb
cmp
xchg
aas
stc
mov
jg
sti
std
pop
leave
sahf
lods
inc
pushf
lods
xor
push
std
hlt
cmp
or
sub
sbb
adc
mov
xchg
data16
or
pop
add
push
loop
push
daa
lods
lret
jg
jbe
pop
mov
ljmp
adc
int3
mov
into
out
call
add
and
loop
aas
sbb
out
xor
adc
cmc
xchg
movsb
movsl
pop
lock
xchg
jo
cmp
jecxz
shlb
or
mov
je
and
sbbl
jne
and
push
jp
cmp
sbb
mov
in
test
add
dec
in
ret
insb
xor
or
bswap
add
xchg
pop
adc
pop
cmpsb
jecxz
shll
jo
jmp
mov
xchg
jp
in
mov
pop
xor
arpl
mov
pop
mov
add
adc
je
repz
loop
sti
addr16
ds
jo
aaa
xchg
dec
pop
xor
mov
loope
pop
test
stc
mov
cmc
inc
lea
inc
sbb
xchg
cmp
cmp
out
xor
dec
cmp
pushf
mov
sahf
filds
push
out
mov
pushf
das
mov
ja
jecxz
call
adc
mov
fnstcw
call
push
sbb
fcomps
inc
punpckhwd
lahf
or
fs
stc
and
mov
inc
pushf
test
mov
cmp
push
jg
lods
mov
dec
jge
pop
sti
leave
orb
xlat
jnp
les
pop
and
jb
ds
mov
jg
movsl
and
out
das
xor
lret
lods
jge
mov
cmp
sub
in
data16
sub
push
fists
cmpsl
inc
in
inc
aaa
outsb
pop
push
test
ret
lods
enter
ss
add
ftst
or
insb
bound
jae
xor
sbb
call
not
jae
push
cli
fdivp
fwait
sub
loopne
cltd
jae
fisubl
cltd
daa
mov
jl
xchg
insb
push
adc
repz
dec
addr16
mov
sub
push
pop
xchg
jno
shrl
xor
and
iret
sbb
rclb
ljmp
repnz
cmc
in
mov
adc
push
push
test
iret
bound
push
and
add
pop
pop
arpl
pop
cmpsb
sub
js
cli
sub
jecxz
insl
pop
push
mov
jle
jae
push
inc
inc
mov
add
shr
jp
sbb
cwtl
pop
aaa
insl
pushf
xor
mov
sahf
pusha
xor
cmpsb
dec
repz
fadds
outsb
icebp
adcl
test
cmp
mov
loope
fdivs
sbb
leave
and
in
xchg
outsb
pop
push
inc
cmc
mov
inc
adc
int3
mov
mov
add
lock
std
jg
mov
jecxz
or
push
mov
iret
pushf
cmp
rcll
fs
mov
pop
cmp
fcoms
jne
add
lds
mov
aad
mov
insb
stc
sub
mov
rolb
ljmp
jne
push
cmc
xor
mov
push
xchg
das
out
inc
xor
jnp
dec
sbb
out
mov
fdivrs
aas
mov
imul
aaa
xorb
and
push
cs
aas
sahf
mov
mov
mov
icebp
inc
xchg
xchg
jmp
mov
ja
sbb
jno
jb
and
cmpsl
sub
orb
rcr
in
fists
cwtl
inc
xor
push
sbb
enter
pop
ret
fcoms
fcoml
call
ljmp
xchg
pop
push
data16
sbb
mov
out
out
stc
stos
or
sbb
ss
in
dec
dec
jg
dec
mov
jmp
pop
mull
std
movsb
cmp
fdivrs
inc
sahf
mov
aam
jge
mov
jp
jecxz
push
xchg
fcomps
and
xor
fs
aas
icebp
or
cmp
loop
cmpl
in
stos
adc
popa
clc
jp
aad
mov
xchg
pop
xor
fdivrs
fstl
mov
mov
inc
add
mov
hlt
xchg
mov
mov
jno
mov
inc
adc
lds
fisttpll
dec
dec
push
insl
jle
sarl
add
dec
and
dec
xorb
sbb
jp
out
das
lret
sbb
dec
int3
add
mov
push
sub
les
daa
sti
setp
push
xchg
push
cwtl
mov
mov
xchg
test
fnstsw
jp
cs
and
mov
mull
mov
iret
cltd
lods
jns
xor
lods
pop
mov
cmp
arpl
push
pop
cs
mov
sub
dec
mov
addl
mov
sti
aam
sbb
push
stc
loope
clc
push
iret
mov
ds
adc
jg
ds
jb
lcall
imull
out
push
aam
and
push
adc
movsl
int3
cmp
xchg
xchg
mov
outsb
jbe
aas
icebp
fnstcw
jg
popf
jp
out
push
and
lea
cmp
mov
xchg
lcall
cmpsl
out
pop
es
mov
aad
pop
jnp
repz
inc
in
icebp
cltd
jb
aad
mov
outsb
jecxz
cmp
sbb
push
cmpsl
movsb
inc
jae
jp
ss
sbb
imul
dec
out
add
fdiv
dec
cmp
jl
cmp
clc
mov
rcr
dec
and
mov
adc
iret
push
lock
push
call
jno
push
and
and
dec
mov
lds
mov
je
sti
push
in
sti
mov
movsl
scas
pushf
xorb
es
pusha
jmp
int
fcmove
xchg
push
push
iret
xchg
aas
test
addr16
xor
mov
push
aas
and
mov
mov
adc
jle
cmpsb
je
xor
pop
mov
sbb
xchg
dec
pop
jl
ret
invd
and
shrb
cli
fsin
add
mov
popf
xor
pop
aam
dec
push
mov
add
fisttpll
add
push
faddl
inc
dec
add
cmp
xchg
or
pusha
das
xchg
push
xchg
sub
iret
popf
test
cmp
fistps
bnd
rcr
mov
fcoml
pop
dec
cwtl
sbb
mov
test
inc
sub
or
mov
or
cmpsl
add
mov
scas
in
divb
mov
push
inc
mov
les
arpl
pop
jae
mov
mov
adc
push
inc
xor
xchg
les
ljmp
dec
les
loope
ds
adc
sub
or
mov
inc
or
neg
dec
pop
mov
lock
mov
cmp
or
xor
push
jo
mov
mov
pop
add
cmp
pop
mov
pop
movsl
jecxz
shlb
push
fs
xlat
mov
shl
sbb
rcrl
imul
pop
repnz
jne
rol
je
xor
les
popa
xor
push
movlps
xchg
out
outsb
and
sbb
xor
hlt
dec
or
enter
jmp
jge
insb
xchg
jne
dec
mov
enter
imul
mov
mov
cmp
pop
xchg
xchg
xchg
adc
out
add
outsl
xor
jge
stos
dec
adc
es
pop
mov
sahf
mov
adc
xchg
adc
testl
int3
iret
outsl
mov
xchg
or
mov
mov
shlb
icebp
adc
pop
int
jecxz
adc
xor
enter
fwait
cmp
scas
stos
mov
add
test
les
into
inc
jmp
mov
out
xchg
in
add
es
mov
xor
dec
xchg
adc
mov
push
dec
sbb
or
push
pop
push
sahf
js
dec
cmp
int
mov
outsb
inc
or
pop
inc
add
mov
add
or
into
and
add
test
fcompl
and
scas
push
xchg
mov
imul
or
dec
outsl
jbe
in
les
mov
cmp
or
sub
inc
das
jge
or
daa
imul
scas
lahf
push
ret
cs
popa
xchg
mov
inc
jp
mov
call
push
and
std
dec
or
hlt
mov
and
jne
jmp
out
clc
xchg
adc
mov
mov
ret
mov
sbb
xor
lahf
mov
pop
addr16
push
xor
mov
adc
andl
jmp
jp
inc
call
push
push
pop
sub
jns
test
cmp
test
mov
push
test
jle
out
je
inc
mov
cmp
jno
xchg
daa
mov
lods
in
inc
popf
mov
xchg
xchg
insb
leave
out
shll
jle
xchg
aaa
inc
hlt
push
data16
jbe
rorb
mov
cmpl
fucompp
xchg
test
xor
cwtl
jg
xor
punpckhdq
int3
ljmp
into
xor
jmp
and
les
ret
inc
and
pop
lods
pop
into
add
std
lods
ror
sbb
outsl
dec
inc
aad
pop
cmp
icebp
outsb
icebp
sub
loopne
cmc
ret
andl
and
and
push
movsl
or
sbb
or
pop
in
pop
ljmp
clc
cld
jmp
cwtl
or
imul
cli
push
pop
xchg
push
out
add
ror
push
ror
or
push
test
cltd
push
stc
aaa
dec
mov
arpl
scas
jo
and
mov
sub
js
scas
xchg
and
xlat
mov
mov
adc
mov
cmc
sub
pop
sbb
pop
ret
add
pushf
push
mov
inc
sbb
push
popf
pusha
push
enter
cli
test
and
pop
out
sub
jo
jo
mov
cmc
popf
pop
dec
subl
popa
and
mov
out
rorl
sbb
xor
js
xchg
mov
jmp
in
arpl
cmpsb
add
pusha
sti
jnp
push
jg
xor
push
getsec
jne
stc
shlb
mov
inc
xor
out
addr16
into
jmp
hlt
push
jg
mov
outsl
jnp
add
lahf
movsb
or
xor
push
mov
mov
scas
pop
les
test
mov
push
stos
ss
sbb
push
cwtl
fimuls
add
daa
insl
xor
in
mov
dec
adc
mov
sub
inc
mov
cmove
mov
lcall
in
push
loope
add
jl
adc
aas
ja
or
jbe
fisttpl
je
stc
push
cltd
sbb
loope
lret
cmpsl
xlat
lcall
sbb
paddq
stos
les
cwtl
das
movsl
popa
test
iret
push
pop
push
mov
sub
pop
lcall
push
xor
pop
lahf
arpl
cmp
xor
ja
pop
cmpsl
mov
lcall
dec
or
mov
shlb
xchg
mov
cld
out
cwtl
gs
lds
stos
dec
std
mov
mov
sbb
adc
inc
inc
fcmovnb
xchg
mov
pushf
mov
mov
mov
sbbl
cs
stos
add
mov
iret
cmc
ss
inc
aam
pop
xor
inc
adc
loopne
xchg
fs
cmp
std
stos
mov
xor
sub
sarb
subl
and
daa
and
and
loopne
push
popa
xchg
repz
sub
push
sbb
mov
pop
cmp
jmp
inc
aas
adc
outsb
adc
rorl
inc
push
out
stos
lahf
add
push
lcall
inc
dec
cmp
mov
push
inc
out
into
fisttpl
inc
jmp
data16
jmp
cmpsb
cmp
mov
cmp
loope
xlat
imul
cwtl
push
sti
cli
es
sub
enter
or
leave
xchg
jb
pop
pop
cs
loopne
sbb
mov
lds
jmp
pushf
fsubl
imul
rclb
in
jl
fidivrl
and
xchg
push
xchg
pop
pop
mov
leave
sbb
adc
jnp
dec
jecxz
cwtl
xor
mov
mov
xchg
scas
gs
push
scas
lcall
arpl
mov
and
cmp
imul
mov
pop
and
mov
push
sbb
sbb
scas
push
mov
insl
push
mov
sarl
push
cs
and
adc
jno
mov
sti
shlb
pop
je
enter
shlb
mov
daa
and
cmp
lods
inc
pop
xor
sub
push
push
xor
push
repnz
xchg
lock
scas
pop
mov
push
mov
sub
pusha
xor
mov
dec
cld
test
out
mov
jbe
pop
adc
push
clc
push
jmp
or
pop
subb
inc
lods
mov
sub
es
dec
pop
adc
lods
and
jb
sahf
mov
ss
sub
pop
sti
out
mov
rcrl
scas
repnz
hlt
mov
js
dec
sbbb
and
cmc
push
iret
cld
mov
out
imul
test
andb
and
mov
les
jl
js
add
dec
in
nop
bound
lock
cmc
mov
cmp
outsl
jae
inc
dec
xor
jge
xor
test
std
mov
shrd
inc
sbb
pop
push
addl
cmp
push
mov
fwait
insl
push
add
push
gs
and
aam
insl
cmpsl
jge
mov
sbb
sub
cmp
lds
push
adc
cmpsl
mov
ret
fidivs
cmovp
shrb
pusha
cmc
in
jg
cld
mov
sbb
jp
jo
pop
or
adc
push
sub
inc
call
iret
stos
mov
mov
pop
mov
sbb
movb
adc
pushf
lock
mul
daa
loop
ljmp
fimuls
repz
mov
test
fdivr
cmp
inc
jmp
fsubs
or
adc
iret
lcall
je
pushf
jecxz
dec
mov
dec
xchg
xlat
push
imul
adc
jmp
mov
dec
push
jb
bound
ret
ret
or
jb
xorl
sbb
mov
adc
insl
mov
xlat
cmp
or
jbe
cmp
fwait
sarl
cmpsl
mov
jp
dec
jns
andl
sbb
add
decl
jae
mov
insb
dec
push
mov
sub
mov
test
js
xchg
fcmovu
pop
mov
lods
mov
sahf
mov
ljmp
outsl
loope
lcall
clc
lretw
popf
das
jnp
or
lret
push
negl
ret
cmp
jecxz
inc
and
mov
push
leave
lcall
push
fsubrs
popf
call
jl
dec
insl
stos
scas
add
out
mov
sbb
das
xchg
mov
xor
cmp
lods
fmul
add
sbb
stos
mov
pop
sub
dec
cmp
mov
pop
jae
mov
pop
xchg
dec
lods
cmpsb
into
repnz
push
aas
cli
in
mov
sahf
enter
lods
faddp
xchg
xor
and
push
sbb
icebp
pop
xchg
xor
das
xchg
push
in
mov
notb
icebp
cmpb
mov
dec
int3
pop
push
fcmovnu
or
cmp
sarl
push
xor
pop
fs
xor
mov
pusha
lret
scas
lock
add
lods
shll
jnp,pn
js
test
mov
mov
aad
add
popa
dec
lcall
imul
movsl
mov
inc
rolb
push
scas
test
clc
testl
pop
lods
pop
nop
xor
setle
push
push
mov
mov
and
outsl
dec
jle
cmp
imul
out
lahf
and
cmpsl
stc
inc
pop
decb
jg
push
push
sbb
fisttpl
ficoms
pop
das
test
cmp
and
sub
xor
out
stc
insb
fsubs
das
jmp
push
adc
lea
jbe
mov
and
inc
add
xor
shll
and
jle
lahf
adc
lahf
iret
aas
fcmove
add
ffreep
addb
enter
xlat
stos
dec
out
add
jns
jbe
addr16
push
jl
mov
cli
or
outsb
rcl
sub
arpl
sub
mov
aas
mov
push
pop
xchg
push
dec
test
jp
jno
cmpsb
in
push
jne
mov
test
out
daa
pop
icebp
int3
jmp
pusha
mov
in
pop
ret
outsl
into
adc
xor
stc
inc
sub
lahf
into
dec
pop
out
movsb
loopne
insb
in
mov
mov
outsb
aam
cmp
push
ret
movsb
inc
cmc
aam
dec
jno
pop
lcall
mov
daa
or
out
cltd
and
push
pop
jg
fwait
pushf
outsl
into
lret
sub
faddp
or
jmp
jo
adc
add
imul
test
jle
sub
scas
adc
inc
fstps
pushf
inc
pop
movsl
std
sub
cld
xor
fbstp
bnd
outsl
pop
leave
fwait
ljmp
addr16
dec
cmpsb
pop
iret
andl
icebp
jnp
push
test
out
jns
scas
neg
push
push
push
idivb
test
cmp
add
or
rorb
mov
stos
jns
jno,pt
xchg
jl
testl
adc
mov
aam
scas
daa
inc
add
fmul
jbe
jecxz
aas
dec
js
sub
inc
lahf
ret
cmp
xlat
sub
jge
ret
fnsave
cmpsl
push
in
pop
hlt
mov
inc
add
xchg
sbb
aam
popa
in
scas
mov
fsubs
dec
arpl
add
int3
out
rorl
lret
mov
test
mov
mov
ret
inc
into
sub
sbb
loop
adcb
sbb
mov
lea
push
mov
mov
inc
pop
pushf
fs
repz
dec
jno
pop
imul
and
cmp
add
mov
lahf
jb
adc
mov
imul
or
cmp
cmc
ret
adc
rorl
test
sub
mov
push
and
xchg
and
sbbb
add
mov
fcomp
lret
pop
dec
or
test
scas
xchg
cmp
cmpsl
int3
inc
cmp
test
ljmp
in
fdivrp
hlt
mov
fstpt
xchg
push
popa
adc
outsl
hlt
and
ds
clc
lahf
mov
cmpb
dec
dec
sub
and
add
mov
jbe
mov
pop
add
adc
push
dec
cmc
pminub
ds
mov
mov
push
testl
cld
out
and
dec
into
cmp
add
jb
ret
jne
addr16
or
jno
adc
in
xchg
xlat
dec
out
movsl
hlt
ret
scas
mov
inc
inc
xchg
jae
inc
pop
xchg
xor
sbb
cs
mov
popa
push
mov
call
jecxz
lahf
adcb
inc
mov
rorl
outsb
or
nop
outsl
test
sbb
fldenv
adc
cmp
mov
cmp
call
rclb
lea
mov
push
or
sti
xchg
js
pop
pop
or
cli
mov
jl
fistpl
bound
loop
mov
xor
lahf
add
cmpsb
mov
imul
dec
or
mov
cmp
cmpsl
add
mov
fdivrs
int
mov
sub
dec
mov
ljmp
jb
sbb
adc
sub
jo
cli
adc
or
imull
in
loopne
adc
movsb
mov
sub
inc
sbb
in
xchg
fs
ljmp
mov
in
out
mov
lahf
push
push
adc
mov
movsb
stc
adc
test
mov
mov
testb
xchg
jp
gs
cltd
mov
sbb
movsl
or
scas
jmp
pmullw
and
xor
mov
fs
cmpsb
fwait
sbbb
in
cmc
aad
sub
sar
mov
xchg
mov
lcall
and
cmpsl
mov
pusha
sarl
repz
out
in
mov
push
xchg
data16
leave
jle
lret
lahf
and
jmp
cwtl
sbb
lods
hlt
mov
cmc
ret
lret
out
shlb
fcmovu
or
lds
fsub
call
rorl
pop
js
push
pop
scas
call
and
in
out
popf
jl
int
jle
shlb
into
lods
clc
cmp
ret
and
xchg
lods
jp
xcrypt-cfb
cmpsl
cmpsl
rcrb
lock
mov
sbb
xchg
mov
mov
adc
mov
mov
jmp
cltd
lock
fistpll
sahf
push
jge
sbb
sub
mov
fs
xchg
xchg
lock
les
adc
js
pusha
jge
fidivrs
jge
lock
cmp
xchg
aad
negl
xor
js
cmp
aad
sub
leave
pop
jne
jnp
sar
push
sbb
push
icebp
mov
fidivs
loop
test
cmp
in
mov
gs
in
pop
sbb
and
call
in
cltd
or
out
dec
mov
add
testb
iret
pop
xchg
push
shl
fmull
sub
push
jb
out
test
lock
ret
insb
cmpsb
mov
inc
mov
pop
hlt
idiv
fs
pop
movsb
adc
xor
cmp
ret
adc
imul
or
xchg
dec
popa
adc
xlat
mov
lret
insl
in
cwtl
push
push
es
sahf
addl
andl
popf
dec
repz
or
cmp
ret
cmp
rclb
adc
pop
scas
pop
sahf
nop
pushf
call
push
xor
repnz
and
ljmp
movsb
cmp
and
push
rcll
fistpll
jecxz
std
pop
mov
pusha
xchg
mov
pop
cmc
add
xor
or
rolb
inc
cmp
fs
dec
subb
bnd
ljmp
ljmp
outsb
mov
fdivl
les
outsb
mov
test
arpl
push
fnsave
xorl
pop
mov
mov
cmp
rorl
pavgw
fdivrs
fs
pushl
stos
sbb
in
and
stos
aad
push
inc
lret
sbb
aam
jo
hlt
sbb
dec
pop
jmp
adc
aad
rol
sahf
jp
add
push
push
mov
xor
mov
adc
dec
bound
sarb
jge
ficompl
xor
into
sub
xlat
aam
adc
rep
nop
inc
stos
movsl
adc
push
stc
cs
std
insb
dec
mov
mov
loope
mov
jg
jp
inc
xchg
mov
leave
jmp
xchg
dec
enter
sti
stc
in
cmpsl
rolb
popf
jns
sub
push
mov
lret
push
push
or
inc
les
push
xor
lds
dec
mov
jle
ja
push
lods
push
dec
lret
pop
inc
fmul
and
out
mov
sbb
mov
jg
mov
lcall
fs
fs
shl
out
mov
push
jae
mov
pop
ljmp
xchg
inc
ret
js
push
fstl
sti
add
xor
pop
push
mov
ljmp
jo
mov
ljmp
inc
mov
adc
jecxz
inc
mov
jno
pushf
xchg
pop
outsb
imul
cmpsl
sbb
and
pop
dec
adc
aaa
inc
xlat
test
mov
pop
mov
loopne
adc
pop
rcr
cmpsb
xchg
push
mov
leave
shrl
mov
lret
pushf
or
enter
add
int
jle
ret
xor
jge
push
push
xchg
pushf
xchg
sbb
sbb
movsb
pop
adc
sub
and
jnp
adc
cmp
ficompl
movsb
mov
jecxz
xchg
js
out
pop
sti
inc
mov
jp
fmull
mov
push
test
test
mov
xor
dec
es
pop
mov
push
pop
mov
pop
jno
push
dec
outsl
orl
enter
xchg
mov
pop
adc
or
mov
aam
rcr
pop
and
adc
and
ja
inc
dec
pop
ret
pop
fsubrl
adc
xor
jl
inc
push
loope
mov
aad
insb
pop
xchg
fdivrl
xor
stos
mov
sub
jmp
sub
lret
mov
dec
mov
sbb
mov
cmpsl
in
cmp
lret
xchg
mov
shll
or
xorl
and
cmc
mov
pop
dec
inc
sub
mov
jle
lea
inc
mov
adc
dec
adc
mov
cld
xchg
out
cmpsl
popw
push
cwtl
mov
cmc
jo
xor
pop
and
es
sarl
sbb
rcrl
leave
push
outsl
daa
xchg
jl
or
arpl
pop
movsl
dec
mov
dec
in
jmp
les
or
inc
push
cmc
sub
dec
fdivl
jbe
loop
push
call
rdtsc
pop
lret
push
es
cmp
inc
lock
xchg
jne
and
stc
jnp
outsb
push
popf
or
cs
neg
mov
jle
cmp
mov
mov
and
mov
pop
mov
jae
push
xchg
addr16
mov
fwait
jecxz
push
out
insb
cmp
sbb
mov
inc
loopne
in
outsb
sub
in
in
les
push
ret
jo
mov
pushf
add
cmp
sub
inc
imul
jns
outsl
test
adc
stc
cmc
lahf
cmp
xor
mov
les
mov
jo
pop
fwait
xchg
rol
xor
or
rorl
fisubrs
in
xchg
cwtl
dec
out
clc
xor
pop
jmp
in
hlt
push
or
and
clc
dec
push
fldcw
mov
xor
jns
lods
rcll
and
dec
push
popa
sub
scas
dec
jecxz
sti
mov
push
or
shr
sarb
nop
call
mov
sbb
lcall
mov
fisubrl
xor
push
fdivl
jns
xchg
mov
loop
inc
pop
sub
sbb
pop
cmp
daa
cmpsb
jle
clc
ret
mov
call
les
mov
insb
or
das
jne
adc
stc
push
iret
into
div
mov
popf
test
pop
jne
es
mov
fdivl
rcll
loope
adc
neg
xchg
push
xchg
sbb
shl
mov
sbbl
pop
test
in
popa
jno
gs
pop
jno
and
mov
mov
out
inc
sbb
push
ret
hlt
dec
dec
insb
xchg
les
dec
and
aas
lods
sub
repnz
dec
dec
outsl
shrb
popa
stos
and
push
and
mov
pop
dec
ja
in
adc
xor
mov
negl
cmp
imul
ss
mov
cmpxchg
scas
inc
orb
or
xor
movsb
leave
jb
pop
cmpsb
push
and
loop
lret
std
push
leave
adc
dec
xor
call
xchg
xchg
test
inc
mov
pop
mov
pop
in
scas
sti
in
sub
xchg
imul
xor
movsb
sub
insl
jp
cmp
pop
mov
ret
mov
pop
dec
shl
add
jbe
in
pop
xchg
xor
dec
aas
push
ret
add
mov
pushf
lds
aad
pop
outsl
out
lods
data16
cmpsb
lret
cmp
js
les
jb
scas
mov
pop
pop
xchg
push
jbe
jne
test
sbb
add
dec
jno
movhps
je
sub
dec
lds
std
sbb
mov
cmp
pop
in
les
mov
add
push
inc
in
pushf
ffree
sahf
push
insb
loop
sub
test
add
rcr
lods
nop
enter
sub
mov
sub
leave
mov
jb
iret
aad
pop
or
sub
xor
sti
jns
pop
xchg
cmp
mov
call
ret
mov
sti
in
pop
dec
cmc
in
mov
cmp
popa
repz
ret
push
out
lods
int
and
jg
dec
xchg
test
dec
xor
push
adc
ficoml
dec
cmc
mov
call
and
movsl
sbb
scas
mov
aaa
enter
pop
dec
sub
push
gs
jb
xchg
lods
lods
jle
imul
icebp
or
push
in
push
js
jle
fsub
data16
mov
clc
mov
enter
outsl
add
stc
mov
and
popf
inc
pop
out
in
and
es
or
jmp
inc
sub
lods
out
dec
inc
sub
mov
inc
pop
ja
dec
enter
pushf
rcr
add
cltd
call
dec
sbb
clc
pop
xchg
sbb
sub
cmpsl
mov
xchg
dec
fldl
pop
dec
adc
cmp
bound
mov
cmpl
xchg
xor
pop
mov
stos
lret
mov
fadds
loope
push
lahf
sub
inc
lret
inc
pop
ljmp
cs
cmp
mov
xchg
shlb
lea
lea
mov
mov
jecxz
mov
sbb
scas
adc
rcr
fsts
adc
scas
mov
rorb
out
lret
in
and
icebp
add
mov
mov
stc
add
and
cltd
nop
jmp
dec
add
xor
jbe
adc
frstor
arpl
mov
lret
jle
bound
pop
adc
or
in
cmp
faddl
out
fstps
adc
js
pop
lea
and
movsl
cwtl
inc
jmpw
into
dec
mov
int3
cld
test
mov
dec
inc
sub
adc
add
lret
popf
les
xchg
jmp
dec
push
dec
jle
mov
mov
ss
ja
nop
pop
mov
push
inc
sbb
jecxz
addr16
popf
stos
add
sub
adc
inc
cmp
jno
cmp
loop
lock
andb
clc
xchg
and
into
or
js
xchg
add
xchg
loope
pop
pop
stos
fdivrl
out
lahf
insb
push
add
sbb
scas
jge
jae
cmp
jne
xor
jb
fld
xchg
mov
inc
push
jg
push
es
int3
ljmp
dec
jge
adc
mov
dec
mov
mov
outsl
into
xchg
rcr
lods
lret
pop
and
sbb
jmp
dec
xor
add
inc
dec
call
cltd
mov
xchg
lret
int
mov
imull
fcomps
movsl
pop
push
in
dec
and
pusha
es
jl
aad
dec
sbb
bound
lock
scas
daa
and
inc
faddl
adc
mov
shll
push
sti
hlt
lods
push
inc
mov
sbb
fs
loopne
push
adc
inc
data16
sub
xlat
loop
lock
in
or
orb
popa
arpl
mov
aam
ja
sub
mov
fdiv
sti
pop
push
das
lret
jl
inc
out
ret
lods
fmul
dec
in
ljmp
mov
cli
movsl
push
push
jle
enter
cwtl
mov
jo
ret
adc
xor
fcmovnbe
inc
jle
mov
aaa
into
sub
mov
and
inc
xchg
xor
stos
cwtl
inc
inc
inc
fwait
imul
inc
mov
mov
mov
pop
comiss
lret
pop
dec
call
popf
fiadds
popa
xor
imul
scas
xor
push
sbb
and
sahf
add
insl
shl
pop
jmp
lret
popf
or
mov
jbe
xchg
icebp
dec
or
add
push
pop
stc
les
pop
popa
cwtl
nop
push
inc
in
iret
sarb
lret
lea
adc
lea
dec
xor
sahf
clc
push
jl
xor
jmp
movsl
adc
mov
and
pop
mov
outsl
bound
outsl
fildll
jb
aam
cmp
stc
fmull
xlat
loope
jne
ret
loop
jno
jbe
sbb
sbb
hlt
std
add
sbb
pusha
dec
pop
rcrl
repz
lcall
arpl
dec
xor
dec
orb
js
mov
lds
std
sub
adc
pop
mov
mov
sub
mov
inc
jg
xchg
bound
jle
jle
and
inc
add
mov
test
fidivrs
and
jne
cld
push
dec
daa
jno
inc
jb
sub
cmpsl
xchg
ret
add
xor
pop
filds
ljmp
mov
popf
imull
and
aad
test
cmp
pop
add
mov
xorl
mov
xor
clc
mov
js
lret
add
push
cld
icebp
faddp
shr
pop
loopne
xor
fstl
hlt
xchg
cmp
or
adc
sub
push
ljmp
mov
push
test
xchg
jg
push
cmp
push
xor
cmp
jecxz
inc
pop
sub
jg
xor
or
scas
jns
out
jecxz
fstps
dec
sub
sbb
loopne
push
xchg
gs
jns
push
jmp
lret
test
xor
fiadds
pop
and
dec
push
inc
lock
hlt
pop
out
pop
pushf
adc
rclb
pop
mov
cli
xor
fdivrl
mov
mov
pop
cmp
scas
gs
into
std
and
ret
ds
cmp
call
int3
aaa
adc
and
scas
mov
push
cmp
or
sbb
fs
mov
std
out
sbb
insl
mov
leave
insl
insb
rcll
icebp
sbbl
inc
cld
nop
gs
pop
movsb
push
pop
jmp
cmpsl
sub
fiadds
lahf
fisubrl
mull
mov
sub
adcb
pop
stos
jbe
ja
xor
dec
cli
sbb
mov
jns
dec
add
in
jnp
filds
sub
mov
sahf
sub
mov
lcall
dec
xor
cmp
ja
out
jne
cmp
push
in
popa
jne
adc
and
or
je
dec
in
jns
xor
gs
mov
pop
cmpsl
or
push
cmpsb
sub
cmpsb
imul
inc
cs
sti
fnstenv
pop
ljmp
inc
popf
jbe
out
popf
push
xchg
mov
std
mov
sbb
jo
sbbl
cmp
jl
flds
aad
push
cmpsb
inc
push
push
test
mov
fmull
inc
lods
sub
popa
sub
mov
xchg
cs
inc
fwait
xchg
int
je
xchg
insl
jecxz
xor
ja
mov
push
in
jne
flds
repnz
cmpb
arpl
lcall
leave
lods
mov
adc
jb
ljmp
dec
mov
xorl
aad
insb
adc
or
or
sbb
sub
fldenv
mov
ffree
into
lock
int3
repz
jp
mov
pushf
mov
sbb
push
pop
push
lcall
loop
scas
test
cwtl
xchg
and
jle
or
cmpsb
mov
gs
mov
inc
popa
jae
mov
pop
sbb
les
add
in
fstps
insl
push
nop
pop
cmp
outsb
pop
imul
inc
xchg
pop
movsb
dec
aad
iret
or
pop
sub
leave
xor
int
into
push
enter
mov
dec
sti
ficompl
or
fs
sarl
sbb
addr16
mov
pop
mov
scas
pop
in
bound
daa
movsl
inc
dec
mov
mov
sbbb
mov
idivb
aad
dec
decl
pop
inc
ds
or
out
jp
jl
roll
mov
adc
rcrb
push
dec
and
jecxz
push
and
outsb
and
mov
and
xor
idiv
mul
and
lahf
jmp
jo
or
mov
popf
mov
loop
sarl
mov
pop
lods
insl
mov
xor
repnz
es
fdivrs
cmp
les
int3
fsubr
imul
pop
stc
dec
cmp
sub
or
stos
mov
xlat
lea
and
jno
test
test
mov
sbb
inc
data16
cld
xchg
push
dec
push
insb
jge
cmp
cmp
test
decb
mov
mov
adc
adc
lods
cmp
xor
push
popa
xor
xchg
add
lods
int3
dec
jne
sti
xchg
mov
jnp
jg
aam
stc
je
jo
dec
or
mov
sahf
negl
in
es
cmp
mov
pop
fisubs
addr16
in
dec
add
sbb
scas
cltd
sbb
xlat
adc
mov
aam
cmp
sub
call
push
mov
movl
xlat
enter
int
gs
roll
jno
jl
push
out
fists
inc
icebp
cmpb
pop
movsl
inc
inc
xchg
mov
int
enter
jmp
push
pusha
add
add
xor
adc
or
mov
push
das
inc
stos
add
sub
add
and
pop
inc
and
add
inc
gs
jns
add
call
std
movsl
aas
enter
or
mov
test
inc
daa
stc
es
mov
shlb
pop
mov
sbb
sti
jns
mov
push
aad
out
imul
stos
je
outsl
nop
mov
cmp
stos
test
les
push
pop
sti
into
lds
mov
mov
scas
jnp
ret
lods
jmp
add
pop
cmp
rorl
loope
es
jo
add
ss
lea
jge
out
pop
inc
push
ret
mov
loope
add
dec
mov
fwait
jecxz
xor
jb
add
xchg
sub
adc
sub
dec
push
decb
outsl
lods
popa
jle
mov
push
lock
mov
insb
push
mov
mov
movsl
insl
xor
jmp
cli
cli
repnz
jecxz
cmp
in
cmc
mov
movsb
and
sub
lock
push
icebp
push
xchg
xchg
hlt
mov
mov
jnp
or
lret
dec
sbb
loope
std
push
cmc
std
scas
arpl
jge
decl
adc
cmpsl
mov
mov
daa
int
push
pusha
cmpsb
sub
inc
pushf
ficompl
sub
mov
insb
or
or
jns
jns
mov
outsl
mov
mov
pusha
out
scas
aad
and
in
xchg
fidivs
clc
add
jge
inc
mov
out
inc
popf
mov
xchg
adc
shlw
imul
mov
xchg
fistpl
call
pop
movsl
pop
mov
sub
mov
jne
loop
mov
adc
adc
dec
repz
xor
leave
ret
add
cmc
int
adcl
arpl
loope
mov
int3
nop
in
push
xchg
sahf
shlb
jne
pop
outsl
insb
xor
fdivrl
xor
or
cmc
xchg
testb
jb
sti
pop
repz
mov
mov
add
aas
mov
dec
enter
sub
fcompl
or
lea
sub
mov
sub
dec
ljmp
cltd
mov
test
lret
imul
pop
mov
repz
stos
cwtl
sbb
out
or
sub
mov
add
stos
pop
stos
and
imul
das
cmp
repz
jbe
or
inc
fnstcw
cmp
mov
stc
nop
out
enter
std
shlb
or
xor
sarl
jmp
mov
xchg
dec
outsb
pop
mov
div
das
adc
inc
in
dec
lock
ja
leave
aaa
sbb
es
jge
add
and
adc
ficoml
in
pop
rolb
std
mov
sbb
call
jle
dec
fdivs
xor
pushf
in
dec
inc
mov
bound
or
adc
sbb
add
pop
inc
sbb
pop
ss
inc
lods
sub
repz
addr16
aas
sbb
shrb
cmp
fs
mov
xchg
pop
lods
mov
mov
mov
push
mov
adc
pop
xchg
sarb
xchg
leave
and
lahf
cs
cmpsl
fidivrl
inc
arpl
jmp
mov
mov
ficompl
inc
add
pushf
dec
in
insb
popa
mov
cwtl
xchg
xor
xchg
out
xchg
stos
ja
lret
inc
lret
mov
cwtl
popa
ja
xchg
scas
cmp
insl
stos
clc
xchg
sti
fwait
dec
out
mov
arpl
mov
int3
mov
push
and
push
xor
xchg
mov
inc
hlt
xchg
lods
movsb
movsl
adc
imul
loope
stc
sti
push
xchg
sub
fnsave
mov
in
dec
int3
aad
mov
pop
pop
mov
dec
insl
dec
mov
and
xchg
xor
xchg
sub
mov
inc
add
mov
dec
aaa
push
enter
dec
and
pop
mov
ljmp
inc
es
adc
ljmp
inc
adc
out
jg
pop
or
mov
xor
dec
cmp
inc
sbb
xor
outsl
push
adc
push
cmp
pop
ljmp
iret
jb
xor
test
and
decl
and
jmp
inc
sbb
mov
test
pusha
xor
or
sub
xlat
mov
insb
add
cmp
out
mov
notb
stos
pop
jb
lcall
decb
cmpsb
adc
rcr
sub
xorb
lds
xchg
and
in
lods
inc
loope
aaa
and
dec
push
lcall
mov
add
cld
sbbb
mov
test
xor
sbb
fs
pop
fists
xor
das
add
push
out
fistpll
sbb
or
and
inc
mov
push
jmp
addr16
xchg
aam
cmpsl
lcall
adc
mov
mov
std
xchg
subl
or
push
movsb
fwait
mov
out
fistps
pmulhw
inc
mov
and
loop
cmc
clc
les
mov
and
add
adc
or
mov
stos
call
jne
mov
sbbl
adc
subl
outsl
ror
mov
mov
mov
add
push
pop
out
pop
or
lea
sbb
mov
pop
jb
and
xchg
and
call
test
sbb
lds
jbe
hlt
inc
sub
lds
pop
daa
inc
dec
std
dec
adc
push
into
leave
dec
js
ret
mov
mov
sahf
shlb
lea
faddl
js
std
xchg
pop
dec
xor
data16
stc
mov
or
filds
and
lret
push
add
cs
dec
push
leave
fistps
lock
addr16
add
dec
fbstp
jbe
loope
mov
je
cmpsb
xchg
xor
or
jp
cli
push
jb
es
push
lret
mov
icebp
jge
and
jb
fisubrl
test
or
xchg
jnp
mov
jbe
ds
mov
data16
stos
jnp
in
cld
dec
lods
and
xor
imul
repz
loope
cmpsb
cli
dec
cltd
cmp
je
daa
cmp
das
jp
repnz
cmp
jge
cmpl
push
xlat
stos
and
aas
push
mov
push
adc
fs
fmul
popa
dec
adc
rcrl
pop
ja
stos
lds
fs
aas
popa
jmp
xor
jmp
or
pushf
test
cli
jne
or
outsb
sbb
int
pop
dec
pop
pop
cli
sub
repz
add
cmp
aad
sbb
push
push
dec
stc
call
bound
test
push
lods
scas
pusha
icebp
pusha
lock
or
cmp
sti
sbb
and
fucomi
push
push
aaa
jae
push
push
add
es
mov
outsl
aas
mov
hlt
dec
fs
repnz
mov
xorl
mov
push
scas
cli
add
daa
jmp
jno
popf
adc
mov
ss
inc
adc
jne
push
inc
jg
and
xchg
shll
cwtl
push
clc
adc
sbb
mov
js
jge
outsl
jne
adc
or
mov
stos
xchg
and
in
gs
pop
xor
xchg
cli
scas
inc
lahf
lods
jb
stos
xor
cli
add
lds
std
mov
and
sbb
in
mov
scas
or
lret
mov
imul
ret
aaa
add
inc
hlt
loop
shlb
push
mov
mov
push
or
sti
dec
dec
jo
sbb
push
sub
jbe
sub
xchg
and
or
shll
insb
inc
fisubrs
enter
insb
adc
push
fisubs
dec
cmp
daa
inc
aas
pop
cmp
xchg
bound
mov
add
fmull
xchg
or
add
add
mov
mov
push
ret
cmp
xchg
bound
inc
dec
cmp
imul
and
mov
insl
cli
xchg
mov
mov
inc
push
mov
addl
mov
cmp
adc
mov
loope
jge
lods
push
xor
enter
data16
jle
mov
mov
and
dec
aas
adc
out
xlat
ret
xor
mov
pop
movsb
jns
test
sub
test
sub
fs
cmpsb
xor
adc
mov
xor
ljmp
jo
ljmp
insl
ret
jl
insb
bound
lock
mov
stos
in
dec
mov
add
ljmp
mov
mov
sub
imul
dec
fstpt
mov
stos
mov
or
cs
mov
mov
enter
inc
push
mov
sbb
in
lods
out
inc
or
pusha
scas
lret
or
popa
inc
push
mov
rcrb
add
xchg
jns
testl
dec
aad
jbe
cli
notl
add
imul
add
xchg
sti
jb
pop
lods
jbe
shll
sahf
call
xchg
adc
shr
push
mov
ss
and
int
push
adc
outsl
pop
add
xlat
hlt
ret
sbbl
je
add
popf
push
push
js
nop
mov
stos
xor
outsl
lods
dec
fneni(8087
fdivl
out
mov
or
cli
push
add
xchg
outsl
fiadds
stc
sbbb
xlat
insb
cmp
les
dec
push
into
push
mov
adc
or
fnstcw
xor
outsl
cmc
ds
xchg
std
inc
jb
imul
repz
or
fisttpl
mov
add
fcomp
pop
sub
inc
loopne
sbb
cmpsb
cmp
cmp
out
in
xor
pushf
push
movsb
mov
pop
xlat
push
outsl
nop
cmp
cmp
sbb
and
lret
push
leave
out
pop
pop
push
mov
xchg
notb
call
cmp
sti
popl
mov
mov
shrb
mov
and
add
subl
jnp
orb
subb
in
lahf
xor
imul
xchg
mov
cmp
shrl
mov
arpl
cmpsb
jb
sub
pop
dec
adc
mov
ror
add
mov
xchg
inc
and
inc
scas
pop
adc
inc
popa
ss
in
mov
and
ret
stc
mov
pop
pop
dec
jnp
iret
pop
fiaddl
mov
pop
ror
add
or
add
dec
std
mov
adc
adc
adc
dec
faddl
push
notl
data16
loopne
orb
rclb
addb
fisttpll
mov
sbb
jecxz
cld
pop
scas
jnp
dec
jb
cmp
cmp
out
pop
pop
sbbb
fadds
dec
xor
outsb
ret
fists
int
mov
fildl
outsl
pop
repz
mov
adc
xchg
ds
into
mov
aas
jecxz
and
lret
cmpsb
cmpsb
neg
xchg
add
das
std
xchg
sub
adc
mulb
out
jle
ret
shll
insl
lea
mov
mov
loopne
and
xor
popaw
pop
mov
bound
xchg
inc
and
rorb
movsb
or
nop
jecxz
inc
push
push
pusha
jb
lret
test
fidivl
leave
add
cmp
imul
adc
or
mov
lahf
popa
dec
pop
sub
jne
mov
add
xchg
loopne
clc
shll
lods
mov
pop
scas
mov
mov
add
xor
lret
out
in
mov
dec
jne
shrl
cmp
mov
inc
xor
sub
mov
push
push
lret
fisubs
aam
out
aad
or
insb
incl
mov
sbb
mov
data16
mov
movsb
test
pop
dec
jmp
fbld
out
add
add
loope
xchg
xlat
std
insl
out
lcall
ja
insb
mov
test
movsl
xor
jnp
xor
inc
cmp
loop
aaa
icebp
push
xchg
inc
testb
lods
shll
ds
enter
push
ja
jecxz
in
movntq
out
push
fldenv
xor
and
xchg
gs
out
or
je
sub
iret
mov
xchg
jns
loope
xchg
add
dec
mov
pop
sti
inc
xchg
mov
ljmp
addb
addr16
bound
cmp
and
in
loopne
pop
mov
ljmp
out
mov
outsb
cmp
or
cmp
add
inc
int3
cltd
scas
pop
dec
neg
mov
dec
or
adc
lahf
fucomi
js
rclb
aas
cmp
push
cmp
loope
dec
jo
inc
sub
fistpl
fisttps
pop
sbb
push
sbbb
pop
shrl
lret
movsb
movsb
fadd
mov
call
insb
dec
das
mov
add
xor
fadd
icebp
mov
mov
pop
adcb
in
sub
push
add
and
push
push
lcall
or
into
je
pop
or
je
jne
fwait
repz
mov
ret
adc
push
scas
or
lcall
cmp
xor
mov
fstpl
loopne
jne
cmpb
js
cli
xor
shlb
xor
je
inc
int
inc
in
sbb
and
mov
rolb
pushf
xor
push
jp
test
addr16
ficoml
push
cld
inc
add
scas
shl
push
dec
xchg
and
cmpsb
adc
testl
jmp
lock
outsl
push
sarb
cmp
jg
xchg
mov
adc
in
and
scas
mov
xchg
add
lods
push
push
pop
test
push
xor
jnp
mov
mov
cwtl
cmc
jo
std
jmp
pushf
sti
xor
xor
mov
inc
and
addl
ret
out
mov
vunpckhps
dec
xor
xor
sbb
push
jae
xor
sbb
mov
test
sub
adc
mov
nop
pop
mov
mov
sbb
xchg
das
and
popf
xorb
cwtl
sti
pop
and
push
fwait
pop
add
push
mov
stos
jns
bound
repnz
inc
push
repnz
xchg
sub
scas
addr16
mov
jo
jmp
mov
rcll
popa
sub
push
popf
ffreep
pop
push
aas
popf
push
movsl
pop
jne
push
inc
test
or
or
or
push
shll
das
insb
out
xchg
mov
and
les
pop
sub
jbe
ret
mov
addr16
cli
add
pop
movsb
test
pushf
inc
mov
jg
pusha
rorl
dec
daa
insb
sti
mov
mov
add
inc
mov
push
mov
push
rolb
pushf
push
mov
loop
out
cmp
dec
dec
shrb
cmp
dec
ds
idivb
xchg
dec
sbb
or
mov
sub
push
cli
test
pop
xlat
or
mov
xchg
popa
shr
in
jmp
mov
dec
mov
dec
xchg
sti
xor
cld
dec
hlt
es
out
add
mulb
fs
loopne
or
std
jecxz
ja
add
ljmp
or
arpl
popa
jge
lret
mov
ja
lahf
mov
mov
iret
shl
popa
add
adc
jg
ja
mov
add
arpl
and
ljmp
xchg
xchg
fisttpll
and
aaa
aam
inc
in
dec
mov
sbb
xchg
mov
cmpl
sbb
ret
mov
xor
shl
adcl
ret
mov
jmp
dec
mov
cmp
scas
mov
mov
int
cld
sub
out
ret
sub
jmp
mov
sub
add
inc
inc
dec
repz
jmp
clc
outsl
test
sahf
jmp
mov
xor
rcl
movsl
adc
js
std
jge
aas
sbb
das
or
fdivr
inc
push
pop
xchg
cmp
xchg
sub
loope
ds
sub
add
out
pop
sbb
push
xchg
in
shlb
add
push
movsl
sub
stc
push
jp
inc
cmpsb
leave
repnz
ret
jge
mov
jae
xchg
cmp
es
ret
xchg
int3
mov
out
addl
pop
jg
sub
xor
sbb
enter
jge
xor
jns
sub
xchg
je
fwait
stos
dec
inc
mov
rorb
ja
inc
das
sbb
sbb
mov
adc
jns
add
out
jg
jo
iret
or
or
mov
push
fsubrl
pushf
cmp
dec
cmp
mov
mov
int3
pushf
in
jns
pop
sarl
loope
insl
ds
pop
inc
push
sbb
fwait
stos
jg
mov
sub
ret
dec
jmp
xor
test
fisttpll
adc
mov
repnz
fldcw
ret
or
rorl
push
cmp
jmp
pushf
sahf
mov
subps
iret
popa
adc
les
inc
sub
sbb
lret
mov
int
and
mov
movsl
sbb
adc
aaa
lret
daa
mov
xor
cmc
sub
sub
cli
adc
ja
es
pop
cmp
jge
xor
rcrb
sub
je
notb
mov
dec
je
ljmp
andb
in
repz
in
jne
mov
xlat
adc
add
sub
push
mov
cmpsb
gs
sub
test
jb
adc
lret
insl
movsl
fnstenv
fldcw
outsb
repnz
xchg
xor
dec
sbb
jnp
data16
stos
scas
dec
cmp
or
cli
mov
pop
push
scas
je
test
push
jecxz
xor
or
arpl
xchg
roll
xchg
in
mov
mov
dec
mov
inc
out
xor
sub
lcall
push
mov
cwtl
add
mov
rorb
sub
adc
push
daa
std
pop
mov
cmpl
xor
cmp
aas
scas
mov
inc
mov
into
dec
rcrb
add
orl
xor
pop
sbb
mov
adc
dec
xor
jl
cmc
mov
jne
vmovntps
mov
lods
pop
push
push
fs
popl
aam
dec
js
sbb
and
hlt
and
pop
xor
loope
mov
cmp
arpl
pop
or
movsl
insb
rol
push
fnstcw
into
test
jp
jl
mov
dec
in
sti
dec
xor
divl
mov
fcompl
inc
rcr
mov
int3
ss
pop
ret
insb
jge
mov
stc
ficoml
arpl
lahf
inc
movsb
mov
cwtl
pop
ljmp
das
fwait
dec
xor
sarl
aas
lret
in
cmpl
pop
sub
nopl
pop
xor
sub
or
or
push
push
xchg
adc
pop
jge
jecxz
adc
and
and
cmpsl
jnp
loope
xor
mov
pop
pop
fnstenv
sub
or
push
cmpsb
shufps
push
xor
and
roll
adc
in
stos
mov
pusha
mov
jno
jl
jmp
jp
mov
adc
sbb
and
add
sbb
ret
xchg
cmp
andb
inc
in
cmp
cmp
fisttps
sub
aad
mov
mull
and
and
adc
inc
fiaddl
mov
mov
insb
cwtl
mov
movsb
fisubs
cmpsb
mov
inc
dec
cmp
aaa
sub
add
adc
ret
test
loope
mov
jmp
scas
das
jecxz
mov
inc
and
jnp
rorb
popf
xchg
mov
sbb
jb
int3
ljmp
mov
cmp
fbstp
dec
add
sub
push
xor
cltd
repz
rcrl
mov
sbb
mov
insl
mov
addr16
xchg
mov
test
xchg
frstor
daa
iret
fs
cmc
add
icebp
mov
in
jecxz
mov
and
and
lret
mov
adc
loopne
push
outsl
jb
cwtl
outsl
pand
lock
cld
call
sub
add
stos
ljmp
inc
pop
lea
out
lret
daa
cli
lods
jmp
outsl
call
hlt
lcall
cld
adc
imull
xchg
adc
push
pop
in
jp
jge
test
xlat
cli
push
pusha
xchg
movsb
mov
mov
xchg
inc
xor
hlt
gs
add
jl
fidivrs
nop
lcall
jne
add
and
fnsave
jnp
popf
out
outsb
hlt
jle
mov
outsb
pop
imul
dec
cmp
mov
fldcw
and
add
cli
notl
das
fistl
add
pop
jg
dec
arpl
daa
mov
loopne
cs
mov
int3
stos
adc
and
xchg
inc
mov
sub
cmp
iret
gs
stos
lods
das
pop
inc
sbb
jecxz
and
addr16
jge
fwait
sbbb
fucomip
jbe
pop
cmp
fists
popa
xchg
mov
pop
scas
jbe
adc
call
mov
cli
pop
lret
test
mov
and
jmp
pop
mov
popf
and
lock
mov
xorl
cmpsb
lods
shll
mov
mov
push
pop
jno
shl
push
loopne
call
add
dec
imul
leave
pop
pop
mov
int
xor
test
jecxz
lods
bnd
fisubs
cmp
pop
sbb
jge
repz
loope
add
je
ffree
idivb
movsl
mov
push
pop
fidivrl
sbb
mov
icebp
push
shl
mov
mov
inc
sub
das
int
xor
pop
pop
fstl
push
dec
imul
ja
push
cli
dec
inc
adc
out
mov
xor
aam
lcall
pop
mov
sbb
outsl
std
out
or
fcoml
add
jp
jle
ret
cmpsb
jnp
inc
xor
adc
les
jns
dec
mov
gs
notb
mov
pop
mov
sahf
pop
fcmovu
mov
lea
out
adc
pop
sbb
lock
mov
orl
andb
ss
into
xor
add
push
mul
shl
inc
fsubr
orl
lret
fdivrp
cs
aad
sbbl
and
ja
pop
fnstsw
cwtl
mov
push
pop
pop
fwait
mov
dec
push
clc
addr16
cmc
inc
push
out
data16
dec
add
dec
push
push
aad
push
or
in
mov
adc
add
pop
loopne
push
xor
std
fldlg2
stos
xchg
cld
push
mov
jne
popa
fwait
aad
push
mov
push
dec
mov
testb
rcrl
sub
lahf
loopne
pop
sti
notb
mov
cmp
jns
into
outsb
rcll
loope
test
or
adc
cmp
test
cmp
aam
dec
mov
sbb
leave
cmp
std
inc
iret
cmp
adc
icebp
idivl
bound
xor
lcall
pop
out
hlt
lret
fcomi
pop
mov
inc
push
insb
pop
stos
arpl
in
xchg
enter
subb
leave
or
or
lret
jl
aam
mov
outsb
cmpsb
popa
and
sub
call
cmc
adc
jo
int
dec
test
dec
mov
jo
hlt
inc
lds
andb
and
sub
fldt
inc
xlat
mov
cmovp
daa
jbe
bound
xor
sti
xor
cltd
fwait
inc
lahf
xor
sti
arpl
sub
inc
jbe
in
es
jbe
or
inc
movsb
mov
sub
scas
pop
push
imul
aam
iret
in
mov
mov
insl
inc
roll
push
call
adc
data16
adc
lds
jmp
sub
pusha
jae
or
adc
pop
sub
mov
xchg
or
repnz
out
mov
iret
lods
add
int
repnz
addb
and
cmpsb
sbb
dec
xor
inc
lods
or
xlat
out
mov
dec
mov
pop
sub
jp
mov
fnstcw
jmp
pop
enter
or
push
inc
inc
cld
movsb
stc
sub
push
adc
js
leave
outsb
int3
mov
cmp
mov
movsl
repnz
outsb
inc
js
cmpsb
aam
fwait
cmp
call
xchg
jle
xchg
or
pop
adc
mov
enter
mov
dec
and
adc
js
sbb
jmp
mov
loopne
adc
loop
mov
lahf
adc
xchg
jbe
mov
mov
sahf
cmp
loope
das
mov
dec
repnz
je
pop
dec
mov
xchg
xor
push
and
push
push
int3
jbe
jae
arpl
and
lds
stos
mov
into
ja
mov
jno
push
mov
mov
jne
jne
and
out
xchg
xor
mov
ss
insb
mov
subb
mov
push
mov
mov
jmp
push
lahf
fs
mov
popf
les
in
pop
clc
and
lcall
push
and
jp
je
insl
mov
sbb
fdivrl
cmp
mov
inc
inc
pop
mov
rcll
in
movsb
loopne
test
xchg
mov
int
inc
shll
push
stos
xor
bound
cmp
jo
jno
pop
adc
jp
and
aad
mov
in
inc
pop
push
pop
jp
gs
in
inc
add
and
and
and
stos
cltd
inc
test
add
fimuls
mov
pop
ret
jo
test
push
es
negl
mov
insl
popf
mov
mov
pop
imul
adc
fwait
and
ret
add
cmpsl
sahf
xchg
movsl
inc
faddl
scas
sahf
and
jns
insl
sub
xor
sub
jge
push
adc
std
lcall
aam
popf
movsb
call
hlt
sbb
pushf
mov
xor
test
int
or
jno
sbb
pop
std
lret
sbb
std
adc
out
ljmp
movsb
addl
fisttpll
jnp
leave
cmp
outsb
xchg
lods
out
insb
xchg
loope
and
ss
sub
mov
test
adc
sbb
mov
fs
clc
mov
mov
addr16
lods
je
cmp
jge
push
sbb
repz
jne
cmp
es
cmp
add
xchg
push
fidivl
pop
lahf
pop
je
in
xchg
add
nop
xor
pushf
jae
in
dec
test
imul
mov
in
sub
addl
outsl
mov
cmp
sub
cmp
xchg
sub
mov
test
insl
pop
in
arpl
xor
mov
out
jae
sbb
pushf
xchg
jmp
add
pop
mov
js
mov
push
pop
imul
adc
push
mov
mov
xchg
bound
push
jns
lock
xor
popf
fstpt
loop
or
out
mov
repnz
xlat
mov
scas
movsl
push
and
adc
stos
rcll
out
sub
loope
es
and
out
or
sub
int
inc
movb
test
push
adc
add
mov
dec
sub
ret
mov
lahf
dec
jae
stc
jmp
xor
cmp
push
stos
cs
and
mov
xchg
jp
adc
cli
fucomi
mov
sub
mov
rcl
test
dec
scas
and
leave
in
repz
mov
cs
jp
cltd
jae
push
xchg
movb
mov
mov
cmp
jmp
stos
and
pop
xchg
scas
mov
in
outsl
int3
lock
out
add
call
cli
lock
fwait
mov
jne
xchg
insl
mov
xlat
mov
mov
xor
adc
push
fwait
adc
pop
fsubs
scas
xchg
mov
jbe
js
aad
imul
or
loope
inc
mov
fsubr
cmp
dec
pop
loopne
sub
fsubrs
mov
xchg
mov
outsl
xchg
test
fdivl
push
mov
mov
or
cmc
fdivl
jle
aad
jge
mov
test
sti
inc
sub
aas
addb
fistps
push
jbe
push
clc
and
mov
jbe
or
sub
sarl
push
rcrb
mov
insb
and
xchg
cmc
mov
push
fisttpll
addr16
push
nop
mov
adc
scas
sub
xor
aas
mov
bound
jge
push
jnp
inc
fwait
xor
dec
xor
and
inc
xor
jge
data16
add
cmpb
jge
enter
mov
pop
xchg
lcall
fsubl
daa
adc
fisttpl
cmp
mov
mov
jo
call
imul
adc
xchg
mov
fsubl
sub
jg
test
int3
jecxz
sub
test
loopne
dec
xor
hlt
push
enter
add
fsubrl
inc
cmp
sbb
cmp
and
insl
push
outsb
dec
jne
icebp
lock
sbb
push
inc
scas
sub
pop
mov
mov
repnz
xor
out
mov
out
inc
enter
loope
cmp
jo
fnstcw
mov
sbb
rorb
mov
repnz
ret
sub
mov
fnsave
lock
xchg
dec
dec
inc
mov
aaa
dec
sub
aaa
or
and
in
push
rolb
jno
outsb
repnz
ja
xchg
mov
xor
or
iret
sub
lcall
fcom
pop
and
popf
mov
inc
mov
or
pop
mov
out
pop
out
cwtl
les
sub
sbb
push
mov
jns
pop
rorb
jmp
loop
push
hlt
sarl
lds
push
dec
xor
xchg
js
sub
inc
dec
or
cli
push
xchg
fcoml
inc
cmpsl
jle
nop
xor
sbb
mov
push
or
xor
push
cmc
test
imul
or
cmp
xchg
daa
rcll
jbe
test
and
xchg
and
push
sbb
das
pop
negb
lds
pminsw
mov
mov
or
cmp
or
in
jg
sub
fcmovbe
jg
insl
pushf
sbb
psllw
dec
fmuls
xor
sbb
bound
sbbb
mov
xor
movsl
enter
jmp
gs
push
jnp
sub
shlb
clc
out
cmovo
add
shl
mov
dec
in
push
arpl
dec
aam
fwait
xchg
icebp
adc
xchg
xlat
jne
imul
imul
rolb
cmpb
pop
fildll
shlb
std
fbstp
fisubl
sahf
shrb
mov
mov
mov
and
inc
push
rcrl
dec
ret
popa
mov
jl
sub
push
mov
adc
pop
inc
push
dec
xchg
mov
loope
out
and
rorl
movsl
fimuls
pop
aaa
xchg
in
or
and
mov
and
xchg
fisttps
or
ss
add
loope
and
aas
gs
std
shll
push
pop
das
sbb
call
clc
js
je
mov
mov
mov
dec
cmc
fistpll
push
bound
push
add
xchg
mov
mov
sbb
cltd
mov
insl
jp
and
enter
jg
pop
movsl
lods
or
lret
adc
mov
mov
add
add
xchg
orb
shrl
or
push
xor
adc
mov
adc
mov
sub
dec
sbb
sbb
daa
enter
addb
sub
sti
mov
dec
jmp
test
sbbb
mov
scas
mov
test
inc
jb
idivb
inc
adcl
leave
cli
adc
push
jle
fistl
icebp
pop
cmc
out
bound
jnp
add
jle
test
add
bt
jae
das
outsl
imul
adc
fnstcw
std
xchg
pop
addr16
add
push
lods
movsl
int
cmp
jge
stos
mov
sbb
pop
push
enter
xchg
inc
adc
test
lea
sbb
inc
inc
mov
pop
in
ficoms
scas
pop
pop
stc
xchg
mov
dec
mov
mov
call
or
test
jmp
mov
rcr
inc
mov
fsubr
add
cmpsb
cmpsl
pop
les
add
scas
gs
pusha
fstpl
out
xor
hlt
jmp
cltd
insl
stc
int3
sub
mov
xchg
pop
pop
push
push
notl
or
mov
jo
stos
das
data16
pop
mov
test
mov
sub
mov
mov
stc
fdivr
xchg
stos
fst
aam
shll
cmc
out
lahf
out
jge
xchg
test
mov
test
popa
jbe
mov
cmpsl
idivb
mov
jmp
adc
pop
cmp
xchg
jp,pt
jp
adc
mov
sub
push
push
mov
jg
ja
dec
pusha
xchg
pop
inc
mov
pop
cmp
cld
inc
stos
dec
push
insb
das
inc
mov
not
adc
mov
add
cmp
mov
adc
push
cmp
mov
mov
dec
dec
and
sub
or
pushf
push
push
aam
lcall
movsb
jmp
sub
test
fs
add
xor
fwait
adc
mov
push
fwait
int
mov
pop
cwtl
pop
xchg
add
inc
push
adc
xor
sbb
mov
ret
mov
mov
rcrl
lret
xor
and
scas
jne
xchg
mov
xlat
push
pop
lret
add
sub
fucomp
ds
inc
cld
lock
jb
push
push
jns
pop
push
mov
lahf
pop
dec
out
cmpsb
jb
out
sahf
sahf
je
dec
mov
mov
insb
addr16
loopne
repnz
leave
push
jnp
mov
mov
add
add
inc
iret
imul
cld
stc
cmpsb
push
repnz
jecxz
fists
inc
sbb
repnz
push
ret
aam
sti
data16
add
lock
sub
clc
mov
nop
sub
das
sbb
jnp
mov
adc
add
stos
xchg
sbb
mov
bound
jl
gs
sub
les
mov
in
frstor
bnd
push
cmp
div
fstps
dec
popa
ss
repz
cmpsb
mov
sbb
jp
xchg
lock
enter
rorl
push
mov
adc
ja
nop
or
adc
mov
adc
in
sub
jl
into
sbb
pusha
or
nop
cmp
nop
addr16
dec
jns
or
out
mov
cmp
xlat
out
enter
pop
mov
pop
push
mov
add
sbb
gs
cmp
mov
sbb
jno
loopne
cmpsb
xchg
or
aad
xlat
andl
mov
and
fninit
adc
cs
ret
xor
mov
jmp
xchg
add
lods
jnp
push
push
sub
or
xchg
aaa
cmp
push
fsubs
jmp
test
mov
mov
test
jae
sbb
sbb
lahf
push
jnp
and
outsl
pop
xchg
daa
or
mov
jle
hlt
lds
add
arpl
and
fcom
sti
mov
xchg
lods
ficoml
sub
mov
repz
add
repnz
dec
test
lea
ds
int3
cltd
mov
mov
fisttpll
mov
cmc
ds
pusha
sub
push
and
lcall
lret
adc
je
stos
pop
mov
lds
xor
fxch
pop
aaa
out
xor
faddl
inc
jp
cwtl
dec
cli
shl
and
xchg
std
cmpsb
fstl
adc
addr16
add
lods
loopne
xorl
stos
jp
xchg
pop
cli
fwait
nop
sbb
clc
xor
pusha
jo
test
clc
fwait
mov
or
mov
std
xchg
xor
loopne
jnp
add
xor
inc
in
cs
aas
push
or
fnstcw
jmp
push
rcrl
and
flds
repz
in
push
loop
inc
jecxz
cmp
and
in
cld
sub
pop
lret
outsl
ret
dec
in
sub
add
repz
ja
fs
mov
push
pushf
pop
cmp
sub
jnp
mov
sub
xchg
add
out
mov
ret
xacquire
mov
pop
sbb
dec
insl
xor
sub
jae
mov
cwtl
in
add
lret
mov
cmp
fstpt
js
insl
jnp
aas
lahf
sbb
lea
dec
int
push
jae
lods
pop
setnp
xor
sbb
out
push
iret
sub
iret
repnz
stc
xacquire
int
jbe
cmpsl
mov
lods
stc
xchg
adc
cmp
movsb
adc
dec
clc
xlat
test
fldcw
cli
pop
cmpsl
dec
ljmp
in
jne
sar
daa
scas
inc
jae
xchg
inc
xor
imul
mov
adc
popa
in
sub
inc
push
in
sti
mov
mov
leave
aam
xchg
shl
aas
push
test
push
data16
push
pop
and
subl
push
ror
pushf
jp
inc
in
pop
jbe
fmull
sahf
sub
inc
jb
adc
dec
jg
or
sbb
xchg
mov
fistpll
add
sbbl
xor
adc
jp
rolb
icebp
dec
cmp
loopne
int3
xchg
out
sub
cmc
xor
icebp
mov
filds
ss
xor
cmpsb
and
push
aaa
mov
sub
push
in
xor
and
mov
sub
sahf
repz
mov
pop
ljmp
sub
insl
sti
test
fcomi
movsb
mov
clc
fldl2e
cltd
mov
stos
loope
rorb
jnp
gs
push
xor
movsb
mov
pop
push
dec
sbb
popf
je
or
fcmovne
and
sbb
inc
adc
in
nop
out
in
sahf
push
movl
repz
push
push
cmpsl
aad
shl
pop
sti
and
cmp
out
imul
ss
push
sbb
insl
lret
subl
outsl
pushf
mov
adc
mov
add
xchg
and
and
inc
jmp
aam
xor
cmpsl
and
bound
adc
dec
xor
xchg
out
ss
fistpll
insb
scas
xchg
add
jge
loope
imul
popa
sub
aam
push
sbb
mov
xor
jl
push
push
andb
push
xor
pop
inc
adc
jp
es
outsb
cmp
mov
repz
xor
jo,pt
fisubs
adc
lds
clc
ljmp
das
pusha
mov
pop
sysenter
mov
into
cmp
adc
xchg
inc
cltd
fdivs
or
daa
movlps
addr16
enter
enter
hlt
test
cmc
push
pop
sub
icebp
cmp
sbb
inc
cmp
dec
loopne
repnz
ja
cmp
sarl
addr16
cltd
mov
scas
add
dec
push
add
and
into
mov
sub
add
mov
in
rorl
cmc
pop
pusha
scas
cltd
popf
mov
lds
test
mov
push
imul
es
sbb
mov
push
loope
fst
std
sbb
or
sub
jge
fwait
jmp
sbb
mov
rcrb
shll
fdiv
pop
adc
ret
hlt
lcall
sbb
int3
sub
fbstp
mov
mov
xchg
mov
popf
add
mov
dec
and
sbb
test
pop
loopew
imul
or
testb
clc
pop
inc
xchg
inc
imul
push
add
pusha
lock
inc
lds
idivb
dec
aam
cmp
jo
mov
es
push
sub
loop
cmpsb
leave
cmp
xlat
sbb
out
mov
into
adcl
das
push
inc
pop
adc
add
aam
das
cmp
sbbb
sbb
test
fsubp
lds
out
ja
test
pusha
outsl
dec
push
sahf
jg
or
xchg
sub
out
shl
mov
iret
push
pop
inc
sbb
das
les
mov
pusha
sub
notb
pop
int3
pop
shrl
pusha
and
cmp
mov
sbb
lds
xlat
fldenv
jo
mov
dec
ret
push
out
test
cld
hlt
scas
cmp
shll
inc
int
enter
ret
lea
imul
lods
push
incb
xchg
inc
adc
or
push
je
icebp
repnz
jne
test
pop
in
fmull
out
sub
dec
int3
dec
pop
adcl
inc
lods
out
aaa
leave
jno
lea
pop
fiaddl
add
fsubrs
fsubrs
xor
out
push
out
int3
and
ja
adc
sti
mov
scas
dec
inc
mov
sbb
repz
cmp
push
insb
mov
add
cmpsl
xchg
notb
outsb
add
ret
jg
jge
push
add
loope
negb
loop
push
jns
and
push
inc
xlat
stos
push
cwtl
aas
jae
subl
loop
cmc
mov
test
lcall
aam
pop
aad
jl
test
and
int3
inc
std
out
hlt
frstor
xorb
repnz
mov
fs
sbb
xchg
xchg
fsubr
or
fimuls
pop
jmp
mov
ds
outsb
xor
jns
movsl
xchg
stc
adc
add
add
movsb
sbb
sbb
and
push
dec
nop
stos
and
inc
push
andb
and
push
push
add
sub
mov
and
push
add
ja
ja
dec
aas
hlt
jnp
lock
pop
shll
loopne
inc
inc
inc
inc
dec
shr
add
dec
fsin
sarl
in
pop
or
out
jae
loope
dec
sub
shl
pop
mov
pop
mull
xchg
adc
xchg
movsb
bound
inc
jnp
xor
stc
out
mov
mov
inc
lock
mov
into
mov
and
call
sub
xor
stos
mov
and
daa
jb
loopne
mov
das
sti
jp
dec
fnstsw
test
lcall
sub
or
push
fdivrl
pop
pop
jmp
and
jb
in
rep
mov
push
ljmp
push
jmp
or
xchg
test
flds
sub
push
aas
add
dec
mov
inc
dec
sub
daa
pop
rorl
pop
in
pushf
mov
jg
stos
inc
arpl
jmp
scas
orl
into
push
push
mov
insb
or
scas
inc
jg
push
outsl
std
gs
xchg
in
dec
cwtl
cwtl
aam
pushf
stc
hlt
xchg
leave
jge
mov
das
movsl
xor
rolb
xchg
mov
popa
add
lea
ret
ja
popf
or
out
lods
push
dec
push
in
jle
xchg
mov
cmp
dec
or
xchg
sub
cmp
jmp
mov
push
push
lds
mov
or
sbb
lock
jge
jns
movsl
stos
hlt
cltd
addr16
clc
cwtl
jecxz
inc
in
rorl
icebp
movsl
test
sbb
push
jo
mov
int
sbb
mov
sarl
aam
sbb
test
adc
sbb
xor
adc
pop
jnp
jmp
push
mov
mov
and
lret
mov
mov
test
dec
fnstcw
jnp
add
jg
fucomp
pop
push
das
jl
aad
cmp
dec
leave
jl
lret
push
sbb
inc
mov
mov
sub
jle
ljmp
sub
and
decb
loop
push
divl
or
mov
mov
sbb
xor
jecxz
adc
xchg
jg
add
adc
ret
xchg
jo
lea
cmpsb
inc
lret
or
lret
ret
push
sub
dec
js
fwait
outsl
aad
or
add
mov
in
out
ret
mov
mov
addr16
in
insb
xchg
int
cmp
dec
sub
push
sbb
cmpl
mov
aad
jg
xchg
outsb
jae
cmpsb
pop
jns
inc
aam
or
insb
lahf
fcoms
pop
push
fistpll
pop
movl
adc
or
sub
mov
sbb
adc
mov
mov
xor
fists
add
adc
out
fisubl
jge
je
repz
jbe,pt
adc
pop
dec
ljmp
add
adc
mov
movsb
bound
and
stos
jno
sti
sbb
pop
clc
adc
jbe
popf
cli
dec
test
imul
cmp
negb
shll
sti
add
push
mov
mov
xor
sub
mov
addr16
xchg
addr16
sub
outsb
and
and
outsb
or
cltd
sbb
inc
mov
lret
dec
stc
cmp
ljmp
negl
pop
mov
adc
push
popa
lods
nop
mov
movsl
sbb
pushf
stc
and
outsl
push
scas
or
sti
mov
inc
dec
sbb
pop
xor
loop
es
jnp
pop
push
call
mov
jl
mov
jns
insb
fcoml
call
out
mov
xor
frstor
frstor
call
jo
and
dec
push
notl
iret
or
xor
ss
mov
push
insl
int3
sub
fstl
xchg
pushf
inc
je
add
pop
lret
inc
mov
or
push
inc
in
popf
sub
sub
stc
sti
cwtl
dec
data16
call
dec
mov
cmp
pushf
scas
jbe
scas
adc
scas
inc
push
sbb
mov
jp
lahf
adc
pop
lods
push
fwait
in
scas
jb
push
pushf
outsl
loope
and
or
lods
in
sbb
push
aam
leave
adc
push
enter
jae
orl
outsl
push
inc
dec
ret
stos
aas
jp
shl
push
jl
or
push
inc
lcall
pop
mov
in
pop
cmp
sahf
movsb
repz
fstpl
jp
adc
jno
push
out
stos
pop
inc
mov
mov
adc
sub
scas
jo
ret
sub
outsl
faddl
fimull
sbb
ljmp
and
xor
aaa
jecxz
mov
scas
jns
rclb
jl
out
enter
pop
inc
stos
scas
or
jae
std
in
arpl
std
pop
lock
mov
cwtl
jp
pop
inc
mov
outsb
call
jle
dec
push
cmc
jle
xchg
inc
cmpsl
add
test
rolb
bound
mov
mov
mov
aas
inc
add
jecxz
fcmovu
sub
sar
sub
adc
lcall
xchg
imul
xor
adc
shrb
sub
jecxz
sub
je
inc
mull
fdivr
jle
lods
push
push
mov
rcrb
xchg
out
dec
jge
xor
jecxz
fcmovne
call
jecxz
scas
inc
jne
ds
pop
inc
jge
jp
cmp
or
notb
test
gs
ljmp
sub
inc
out
mov
insb
mov
test
cmc
sub
movsb
aad
fistpl
sbb
mov
add
push
pushl
cmp
int
fistpl
dec
daa
dec
daa
leave
in
ret
ljmp
std
pop
clc
or
repz
mov
data16
in
fdivrp
fidivrs
fdivrs
shll
js,pn
movsl
dec
xor
xlat
adc
mov
adc
lea
ja
inc
imul
int
pop
jecxz
cltd
icebp
sahf
inc
jp
inc
data16
dec
and
jmp
push
pushf
insl
std
scas
pop
dec
mov
jo
mov
test
loop
in
fnclex
lock
cld
sbb
push
fwait
push
mov
out
ljmp
mov
shl
xor
mov
imul
aad
xor
lods
push
mov
daa
cmp
imul
jmp
push
or
push
jae
into
enter
mov
mov
and
sub
dec
mov
mov
push
mov
ret
push
xor
cmp
cwtl
jp
cmp
push
repz
mov
adc
ret
and
push
insl
gs
mov
jae
sarl
rorl
sub
xchg
aad
xor
xor
cmpsb
jp
sbb
mov
cmc
out
lea
int3
jge
std
fisubrl
xchg
or
cld
cmpsb
mov
ficoml
jno
sbb
loopne
sub
jo
adc
sahf
sub
ljmp
jle
mov
mov
movsb
scas
xchg
repnz
in
addr16
cmp
daa
push
movsb
sub
ret
mov
jp
or
outsl
fcmove
push
out
negb
outsl
sub
cmp
nop
mov
scas
xchg
cli
mov
cltd
cmpsl
pop
fildl
lds
or
addr16
sbb
dec
or
pop
mov
sub
loope
cmc
xchg
xchg
loopne
testl
addr16
add
push
mov
adc
inc
ret
lea
xchg
inc
repz
pop
leave
add
jl
enter
jb
mov
cmpsl
cmp
data16
sahf
nop
fistps
pop
stc
jnp
in
sbb
in
cmp
jmp
icebp
je
jmp
mov
loopne
mov
dec
sbb
mov
pop
jno
push
jbe
sbb
test
rcll
and
jp
testb
ficompl
outsl
jns
jnp
mov
sbb
push
push
bsf
jp
push
je
hlt
test
mov
or
jnp
cmp
imull
lret
sbb
rolb
not
test
mov
pop
inc
mov
ds
in
gs
stc
js
stc
in
or
popf
js
jmp
add
fldenv
repnz
cltd
add
jno
fdivrl
inc
adc
jne
ds
adc
dec
mov
or
add
jle
xor
fiadds
xchg
fisttps
ja
inc
dec
out
ret
popa
mov
mov
std
xlat
xchg
push
jecxz
xchg
mov
inc
xor
les
rcrb
xchg
push
xchg
mov
cmp
cld
xlat
jg
cmpsl
and
pop
jnp
repnz
scas
xchg
fxch
ds
dec
jecxz
sbb
jle
lods
add
repz
fs
fnsave
sub
mov
mov
cmpsb
hlt
scas
mov
pop
mov
or
sbb
push
dec
into
push
mov
mov
fcmovne
cwtl
fcomip
call
and
xchg
fstpl
mov
push
mov
ds
loopne
test
pop
clc
jne
push
jge
pop
shl
push
pushf
inc
sub
icebp
add
sbb
dec
push
pop
xor
iret
sub
sar
cmp
in
pop
dec
sbb
mov
sub
and
fsts
jmp
mov
inc
pop
test
cs
mov
sbbl
or
jg
cli
pop
mov
cli
xchg
popa
mov
or
int
test
and
xchg
nop
xchg
shl
js
clc
add
loop
pop
xchg
pushf
cmp
fstl
or
mov
mov
xchg
dec
stc
cmp
cltd
jmp
inc
clc
or
xor
loop
dec
inc
fs
dec
or
decl
lret
xor
int3
mov
adc
mov
push
sbb
inc
in
mov
ljmp
sub
hlt
jmp
push
pop
mov
inc
or
mov
shll
xor
test
int3
cmc
repz
xor
and
movsb
in
int
ret
test
xchg
out
repnz
sahf
jge
lcall
cmp
add
daa
cmc
in
mov
jmp
add
push
clc
add
test
xchg
imul
das
mov
jbe
stos
sub
adc
add
mov
out
xor
sbb
mov
pop
bound
pop
test
push
jne
sub
inc
xchg
xlat
xor
test
push
push
out
push
lock
jne
jbe
mov
frstor
fdivp
adc
lahf
outsb
cmp
out
in
int3
cmp
adc
insl
pusha
pushaw
mov
sbb
dec
cmp
or
bound
jns
xor
mov
jbe
mov
push
push
lahf
inc
testb
sbb
pop
add
adc
movb
mov
ss
xchg
xlat
xor
inc
sarb
jge
xlat
test
data16
sbb
adc
xlat
add
and
inc
stos
adc
jae
lods
call
int
fdivrp
lods
xlat
lret
lret
push
inc
pop
fistpll
fs
imul
sub
mov
jmp
punpckhwd
pushl
xchg
pop
pop
adc
fsubl
repnz
scas
in
adc
or
je
dec
mov
mov
mov
addr16
cmp
xor
cli
movsl
lods
out
outsl
pop
out
xchg
call
lcall
jb
inc
add
movb
cwtl
in
filds
jo
mov
daa
mov
cs
and
pushf
fmuls
int3
pop
idivl
mov
dec
jbe
fidivrs
xchg
repnz
jg
jle
mov
shll
xchg
int
mov
sbb
jge
notb
lds
movb
leave
in
inc
dec
mov
jae
pop
pusha
test
movsb
mov
fst
or
sbb
push
sbb
into
xor
push
ja
and
data16
mov
scas
pop
mov
enter
fsubp
cmp
jl
xchg
pushl
push
pop
out
repnz
repz
stc
fldt
push
sub
clc
repz
cmpsb
jne
ret
insb
imul
jb
mov
xchg
cmp
imul
test
cmp
jp
dec
incl
xor
cmc
negb
lret
mov
out
rorl
or
fstpl
mov
lahf
lcall
test
dec
push
or
cs
bsf
add
add
inc
test
rep
in
dec
pop
shlb
fnstenv
push
ss
xor
shlb
ds
mov
pop
mov
clc
pop
int
fnsave
mov
call
lret
ffreep
pushf
sti
inc
les
cwtl
and
lahf
dec
push
cmc
shrb
popf
xlat
jae
fdiv
sub
add
arpl
icebp
je
mov
fadds
pop
xchg
fucomip
fsubrl
int3
cli
fdivs
movsb
test
sbb
push
fildl
dec
lret
xchg
shrb
mov
cmp
shll
add
sub
cmpsl
jle
adc
push
stos
call
aam
jnp
inc
fs
pop
jmp
jb
scas
xor
jge
loop
mov
into
mov
lea
push
iret
mov
movsb
xchg
js
pusha
cmc
pop
sahf
arpl
xchg
outsl
enter
in
xor
cld
mov
arpl
cmp
mov
dec
xor
cld
mov
fwait
ud0
push
push
jg
xchg
ds
and
inc
data16
pushf
dec
sub
mov
loope
scas
dec
mov
out
lahf
add
adc
cwtl
insb
pop
leave
mov
loop
ficoms
xchg
lea
ficompl
add
movl
int3
aaa
fwait
hlt
cmp
mov
lahf
pop
outsb
loop
pop
inc
or
dec
les
sbb
je
mov
sub
cltd
and
mov
push
fcoml
lds
xchg
fdivs
lea
or
pusha
add
mov
mov
or
dec
xlat
ljmp
pop
xchg
xor
sub
xlat
cmpsl
add
popa
xorl
xor
leave
or
sub
mov
fcoml
inc
inc
sbb
push
outsl
cmp
sbb
aaa
mov
jl
xor
je
add
bound
mov
push
xchg
mov
int3
bound
roll
dec
push
js
enter
cmpsl
adc
test
sbb
xor
pushf
loop
stos
push
mov
loop
add
push
popf
loopne
xor
leave
adc
sbb
mov
xlat
jns
in
adc
adc
jo
xor
inc
repz
mov
test
and
pop
sbb
sub
sub
lods
mov
arpl
int
adc
loopne
xor
pusha
cmp
into
nop
mov
dec
push
cli
pop
pusha
pop
nop
hlt
xchg
movsb
mov
mov
sbb
pop
les
push
cld
push
es
int3
jne
xor
adcl
test
div
xchg
mov
imul
and
or
pushf
shlb
imul
repz
inc
std
push
popf
lock
push
aas
fincstp
pop
fwait
sahf
mov
lods
jno
iret
icebp
inc
or
xorl
mov
adc
jb
test
lahf
xchg
int3
mov
sahf
and
das
fstpt
lcall
push
data16
jecxz
or
cmpsb
sub
fwait
adc
add
add
es
xor
jns
loop
es
dec
sub
test
mov
jbe
cmp
pop
jge
inc
mov
ljmp
cld
je
ds
fs
mov
icebp
call
inc
mov
mov
cli
hlt
xor
mov
sbb
popw
or
ss
orb
or
shrl
outsb
inc
and
mov
ret
dec
stc
mov
xchg
cltd
push
sub
mov
repnz
mov
mov
mov
aaa
mov
rep
sub
sub
cmp
jne
imul
icebp
xchg
aad
enter
js
xor
cmpsl
ja
fs
clc
es
cmp
mov
stos
jne
int3
jp
mov
call
cmp
adc
sub
and
fwait
push
dec
jmp
xchg
jle
pop
inc
loope
fildl
setge
in
imul
xor
or
loopne
inc
daa
cltd
test
enter
push
out
call
gs
mov
lahf
in
jge
sbb
lret
call
cmp
adc
stos
xchg
repnz
pop
movsl
xchg
out
mov
pushf
cmp
and
call
pop
xchg
insl
or
or
fldcw
stc
pop
or
sbb
ds
bound
or
loopne
rclb
fsubp
lods
popa
call
imul
sub
mov
test
mov
cmpsl
sub
test
sub
pop
out
mov
xchg
jb
repz
jbe
lea
adc
mov
xchg
push
push
decl
out
mov
sub
sbb
icebp
sub
mov
outsl
gs
cld
mov
cld
int
mov
cs
add
lret
sub
aas
mov
jp
loope
mov
ljmp
ljmp
fnstcw
push
repnz
jmp
adc
test
adc
jl
jo
shll
ljmp
daa
icebp
lods
cmp
push
ret
add
adc
pop
mov
aas
ja
daa
jecxz
nop
or
mov
cmp
shrb
ficoms
inc
out
dec
jmp
xor
dec
pop
mov
outsb
pop
cmp
inc
sub
jno
cmp
lret
aad
ret
mov
and
jo
mov
stos
inc
ficomps
out
getsec
mov
cltd
ljmp
rcrl
into
pop
popa
xor
orb
divb
lret
shlb
mov
xlat
in
push
nop
pop
push
movq
pop
sbb
jnp
inc
pop
rcll
data16
lcall
and
ljmp
inc
movsb
daa
lods
or
cmp
fwait
push
aam
and
adc
js
jbe
fsub
adc
inc
movsb
arpl
lcall
and
sbb
pop
push
cld
pop
adc
mull
fmul
imul
in
popf
jno
daa
add
js
cmpsl
and
or
out
clc
sbb
jg
enter
cld
cmpsl
dec
out
fxch
iret
loop
ret
and
loop
icebp
popf
loop
jmp
ror
add
sahf
sbb
fistpll
mov
enter
out
rol
push
fisttps
sbb
push
pop
shr
sub
xchg
or
xor
mov
jecxz
add
ss
gs
or
inc
add
daa
loope
fildl
push
mov
in
in
jmp
out
scas
sti
jge
push
sbb
pop
jmp
xor
test
repnz
sbb
inc
cmc
fwait
add
mov
push
cwtl
sbb
mov
stc
dec
mov
out
cmc
adc
sub
dec
jmp
mov
lret
pop
jl
pop
xchg
inc
mov
or
adc
xchg
dec
add
inc
jbe,pt
xchg
mov
cmpsl
repz
dec
xchg
in
inc
inc
adc
test
jle
out
cltd
dec
sbb
mov
cmp
ret
out
aam
sahf
pop
rcll
cmp
rol
hlt
jg
xchg
mov
jge
dec
outsl
je
rcrl
scas
add
repz
loop
leave
movsb
loop
insl
dec
fldenv
xchg
pop
lahf
leave
jg
pushf
ret
dec
test
lock
sahf
push
jo
mov
imul
jecxz
adc
pop
mov
hlt
cmp
or
jae
adc
iret
test
push
and
dec
repz
jne
or
push
into
div
pop
mov
iret
les
leave
sahf
jg
pop
fidivl
mov
mov
enter
fwait
inc
fwait
mov
pop
jne
idivb
cld
cltd
cmp
in
dec
test
arpl
inc
leave
lods
jg
loope
xor
andl
je
lods
add
aaa
pop
adc
mov
push
lock
insb
jae
mulb
aam
mov
sbb
xchg
xor
mov
jno
out
bound
sub
push
sti
fistpl
out
or
pop
dec
ljmp
push
mov
in
add
popf
pop
adc
push
lcall
xchg
mov
xchg
adc
jb
out
or
mov
add
dec
pop
fwait
dec
and
xorb
or
push
sub
sub
jp
or
dec
out
add
push
xor
push
lea
pop
inc
imul
cmpsb
fnsave
push
adcl
sbb
pop
jne
repnz
lret
add
movsl
test
sbb
mov
pop
mov
cmp
jns
fs
xorl
xchg
lods
add
int
in
mov
jo
cmp
pop
pop
push
ja
aaa
xor
lret
pop
pop
lods
cwtl
or
inc
cltd
sarl
in
pop
mov
lahf
mov
hlt
fbstp
add
sub
or
int
jne
adc
and
enter
mov
out
int
adc
push
mov
inc
inc
jo
sub
jle
rorl
xor
ficoms
sarb
push
sbb
mov
inc
cmp
xchg
xchg
push
cmp
sbb
call
mov
sbb
push
jge
daa
sub
fwait
xchg
push
xor
jle
into
xor
xorl
pop
xor
and
lds
dec
int
cmp
jg
ret
inc
dec
inc
add
sub
push
hlt
rcrl
dec
mov
push
and
cli
call
inc
mov
roll
cmp
push
or
mov
es
adc
sub
push
shrl
insl
mov
xchg
jnp
jnp
mov
inc
xor
cmp
insb
ljmp
xbegin
aas
fdivl
insb
stos
dec
push
cld
adc
pushf
cmpl
mov
leave
pop
test
sti
sbb
fcomip
jg
xlat
daa
lds
jnp,pn
out
push
mov
jb
movsl
std
inc
mov
or
jo
in
inc
repnz
sbb
fsubs
fsubs
mov
aaa
mov
or
mov
pop
dec
hlt
gs
jno
add
nop
aaa
inc
lock
mov
pushf
aaa
lods
adc
jmp
dec
pop
icebp
ja
lds
std
fdivrl
mov
dec
bound
or
rcrb
cmpsl
dec
in
jg
mov
out
jae
add
pop
adc
imul
js
nop
mov
cs
mov
and
cmp
fsubl
das
mov
pop
xchg
jge
and
jbe
sahf
pop
dec
jl
sahf
add
jnp
push
cmp
mov
xor
adc
push
cld
cwtl
mov
pusha
cwtl
mov
dec
rorl
dec
arpl
imul
lods
push
mov
call
movsb
into
jnp
push
add
jnp
iret
call
pop
ja
xchg
jb
mov
ror
scas
jl
mov
mov
test
hlt
mov
test
outsb
sbb
push
inc
push
dec
pushf
test
fcoms
adc
sub
mov
popf
std
ret
pop
inc
arpl
adc
repz
mov
push
inc
mov
cld
xor
xchg
mov
into
cmp
sub
insb
test
out
cmpsl
int
fsubl
pop
fdivs
out
mov
mov
cmp
gs
inc
pop
pop
jmp
shlb
adc
inc
jg
pop
adc
imul
inc
mov
mov
pop
fldenv
mov
push
mov
cmp
testl
ficoml
and
fstl
adc
sbbb
cmc
mov
xor
push
nop
decl
lret
xor
stos
sbb
xchg
popa
arpl
lret
push
push
dec
jg
ja
push
fcompl
arpl
mov
dec
int3
mov
inc
mov
push
ret
fisubrs
shrb
and
nop
inc
xchg
jmp
divb
jb
and
scas
inc
push
jmp
lea
jno
push
and
sub
mov
push
cmp
lods
clc
xchg
lods
push
xlat
xor
dec
inc
fnstenv
pop
jg
call
lahf
mov
in
cltd
lods
mov
call
std
or
std
in
mov
mov
lods
mov
adc
jae
push
xchg
insl
mov
sub
sar
xchg
in
and
lahf
jbe
aaa
xor
filds
sarb
in
cltd
mov
pop
cwtl
inc
fsubrl
aas
repz
outsb
leave
inc
out
lods
or
jmp
mov
mov
push
cmpsl
adc
push
lock
mov
push
sub
hlt
cmp
pop
jge
enter
cmp
faddp
push
adc
fwait
stos
repnz
sti
jbe
or
in
lret
dec
xor
mov
and
or
stos
iret
or
scas
xchg
mov
pop
push
fcomip
xchg
fs
mov
or
push
xchg
xchg
inc
push
pavgb
cmp
push
sbb
mov
ss
lahf
mov
imul
sbbb
ljmp
cwtl
xor
or
nop
and
sarb
icebp
enter
jl
mov
push
adcb
shll
jns
mov
adc
lret
mov
rcrl
nop
pop
jnp
xchg
loopne
mov
cmpsb
icebp
mov
mov
pop
jl
shll
pop
pusha
xchg
inc
pop
int
test
jp
movsl
inc
pop
sub
adc
mov
jl
arpl
jns
sbb
movsb
pushf
lea
xchg
and
push
lods
jbe
cmp
mov
mov
jge
mov
adc
es
and
lcall
mov
divl
jge
fisubl
mov
jecxz
mov
movsl
push
mov
cmp
stos
pop
mov
notl
fs
int
jbe
out
inc
ret
neg
jo
aam
cmpsb
cli
xchg
pop
inc
mov
and
mov
mov
mov
bound
call
sbb
xchg
outsl
aad
cwtl
imulb
adc
sti
sub
mov
nop
pop
out
fidivrl
test
je
cmp
add
aaa
sbb
stos
rcr
hlt
mov
mov
mov
mov
fnstcw
loope
add
rol
and
push
sbb
jo
scas
xor
mov
add
or
lds
aas
stc
pop
mov
jo
ret
or
pop
movsl
sbb
cmp
iret
mov
sahf
cmp
xchg
mov
dec
cmp
outsb
lds
pop
adc
out
jp
sahf
adc
rorl
pop
mov
lahf
cltd
lcall
sub
outsb
sub
or
cwtl
lds
push
jno
mov
test
pushf
add
fcomp
fstps
dec
push
loop
jns
adcb
scas
sbb
outsl
sbb
mov
cld
addr16
adc
mov
sbb
dec
jg
outsb
mov
jle
cwtl
mov
mov
insl
xchg
and
repnz
lds
cmp
sarb
les
imul
rcrl
cmpxchg
pop
loop
xor
das
push
mov
xor
sub
push
fiaddl
xchg
lods
lock
push
fldl
icebp
ljmp
dec
add
sbb
out
daa
clc
jne
out
out
insb
es
popf
loope
sub
icebp
icebp
cltd
pop
fmulp
sub
sbb
fdivrs
cmc
jbe
test
xchg
mov
out
dec
loope
fimuls
scas
cmp
imul
aas
out
push
pop
pop
mov
mov
mov
xor
movsl
sbb
loopne
and
je
inc
pop
ret
and
fidivrs
sub
mov
das
fsubr
mov
aam
sub
push
aas
clc
out
adc
and
pop
lea
imul
push
addr16
nop
lock
cmc
jo
and
sbb
outsb
inc
mov
pop
lahf
ret
out
imul
cmp
repnz
test
mov
repz
inc
jae
and
fwait
dec
insl
or
and
cld
xor
push
ficoml
cwtl
mov
out
fmull
inc
jle
jmp
pop
mov
int
inc
fildl
ret
push
sahf
mov
mov
add
pushf
inc
pop
push
adc
jne
inc
imul
add
into
mov
mov
add
fildll
mov
out
mov
sub
leave
jmp
mov
lock
inc
sub
push
mov
iret
or
pop
and
or
imul
xchg
adc
notb
imul
out
rcrl
in
sbb
mov
xor
ds
andl
cmp
dec
data16
iret
and
ret
jge
jb
jnp
lahf
jecxz
mov
pop
clc
add
mov
jo
adc
sub
scas
addb
nop
adc
sarl
sub
fimuls
out
xchg
std
push
sub
and
dec
ucomiss
inc
dec
mov
dec
jg
es
xlat
xchg
pop
out
loope
pop
loope
push
and
mov
pop
jge
mov
mov
or
jb
in
fstpt
daa
inc
push
test
out
les
daa
lahf
or
sbb
sub
xchg
das
mov
shll
sahf
adc
and
cwtl
test
sub
mov
bound
adc
scas
and
sar
xchg
cwtl
movsb
movsb
shrb
cmp
out
push
xor
scas
negl
lods
cli
stc
jle
shl
lahf
mov
pop
inc
test
mov
pusha
cld
cs
push
mov
int
mov
out
xor
add
cmp
idivl
push
andb
push
in
jecxz
out
popa
fdivr
jb
cmp
xchg
outsl
and
cmp
xchg
add
test
in
sbbb
test
test
in
test
arpl
mov
sbb
mov
inc
or
mov
jmp
add
mov
movsb
mov
or
cmp
loop
add
gs
cmp
pushf
pop
push
mov
mov
sahf
pop
enter
cmp
gs
popl
iret
dec
xorl
jo
inc
jbe
cwtl
aam
cld
push
cld
pop
sahf
shl
cmp
sbb
mov
xchg
cmp
gs
mov
push
pop
push
bound
xchg
cld
xor
lds
add
sub
ficomps
ss
lods
push
xchg
pop
cmp
es
cli
sbbb
mov
xlat
mov
and
ficoml
into
jae
outsb
int
and
lds
sbb
repnz
sub
jns
jp
or
sbb
jbe
xchg
xorb
cmp
jb
rcll
sbb
lock
popf
cmpsl
mov
jp
pop
lods
xchg
push
pop
std
cmp
flds
inc
mov
jne
call
je
fldl
xchg
jne
push
dec
in
xor
pop
je
fists
pop
int
xchg
cmp
push
in
test
push
icebp
mov
push
ficoms
aam
mov
inc
sbb
mov
ret
jae
sahf
ja
push
es
xorb
dec
push
lds
lret
mov
cmc
stos
imul
xchg
mov
sbb
lret
clc
shlb
inc
sub
push
push
pop
int3
jnp
add
mov
dec
mov
dec
outsb
leave
std
jo
mov
adc
pop
aam
je
adc
loopne
pop
add
mov
mov
push
jns
sbb
std
xchg
add
loope
divb
call
cmp
add
imul
jae
jnp
push
pop
ret
lcall
imul
inc
and
or
in
pop
dec
or
jne
inc
xchg
xor
xor
fcompl
mov
cmp
loop
decb
out
jl
ds
pop
sbb
jne
mov
data16
ljmp
fwait
inc
ljmp
out
adc
in
mov
fs
jl
je
imul
mov
cmpsb
in
or
enter
xlat
or
pop
inc
outsl
jnp
scas
in
test
mov
xchg
lds
add
shlb
jnp
pop
lcall
cmp
jge
imull
cmp
fdivr
ffreep
inc
adc
imul
push
mov
add
push
icebp
jecxz
jno
mov
sub
sbb
dec
cmp
shlb
pop
cmp
push
adc
xlat
and
mov
mov
test
cmc
rorl
xorb
and
js
pop
in
dec
dec
lock
in
mov
add
inc
xchg
aaa
adc
inc
das
pop
leave
sub
and
insb
push
mov
lods
movsl
sti
mov
xor
sbb
jae
cmpsb
stos
jo
mov
das
cmp
bound
push
inc
xchg
xchg
repnz
adc
or
es
jnp
mov
adc
dec
insb
push
inc
out
pop
sbb
addl
sub
int3
adc
lret
cmp
sbb
out
je
sbb
lahf
pop
sbb
push
ret
sti
push
push
cld
cmp
fbstp
lock
and
mov
and
jle
sarb
xor
pop
pop
dec
andl
bound
dec
xchg
loop
jmp
sti
cmp
fs
mov
adc
jmp
pop
lcall
jo
outsb
data16
setle
mov
in
add
add
jp
fistl
mov
lret
mov
push
pop
xchg
fldcw
cmp
ret
subb
nop
sbb
iret
in
loopne
insl
dec
dec
dec
mov
or
jmp
test
sti
adc
xchg
in
aam
ret
or
inc
cmp
lock
push
sahf
or
loopne
fistps
mov
iret
sbb
jne
add
cmpsl
dec
ljmp
xor
call
popf
faddp
mov
loopne
out
jg
xlat
pusha
jb
out
scas
push
insb
adc
fdivp
std
shll
sbb
mov
mov
movsl
mov
push
push
int3
xchg
mulb
mov
dec
cmp
fldcw
pop
mov
scas
or
sbb
shlb
scas
jecxz
push
decl
jmp
pusha
shll
mov
loopne
fs
inc
imull
xchg
mov
icebp
jo
push
dec
jecxz
xchg
fwait
jns
sbb
adc
sub
mov
popf
mov
mov
nop
imul
dec
lahf
sub
out
inc
adc
jg
mov
out
or
in
das
mov
lcall
cltd
mov
leave
in
cs
inc
xchg
xor
out
ret
xor
loope
inc
jg
add
xchg
sbb
cmp
sub
push
pop
push
dec
xlat
push
sub
insb
fsubl
ss
sub
movsl
fdivp
aaa
push
loope
hlt
orl
imul
cltd
in
aam
out
or
mov
mov
dec
idiv
div
mov
sarl
cmp
or
mov
loopne
add
je
xchg
mov
xor
je
stos
jo
mov
inc
pop
loope
xchg
mov
sub
and
call
mov
push
ret
bnd
leave
test
stos
and
js
bound
cmp
fsubr
hlt
push
shrb
add
push
inc
mov
push
push
andl
xor
aas
test
cmpsl
loope
aaa
or
stc
add
notb
in
add
or
and
insb
xor
cmp
mov
fcmovbe
mov
repnz
add
mov
imull
jle
js
lods
pop
inc
int
add
flds
or
push
mov
push
sti
mov
ljmp
mov
cmpsl
out
fsub
js
popa
int
xchg
mov
insb
aam
sbb
jp
js
mov
push
jp
xor
loope
cmpsb
int3
sti
adc
pop
inc
rolb
lods
sbb
nop
pop
pop
sub
rcrl
mov
xchg
push
dec
dec
enter
dec
push
outsl
cmc
das
add
dec
ficompl
jno
hlt
and
jmp
enter
cmpsb
icebp
ficoml
icebp
cmp
into
outsl
jle
mov
rcl
fwait
mov
jb
repz
adc
xor
xchg
or
inc
out
pop
jnp
pop
inc
mov
dec
das
mov
mov
es
jmp
icebp
in
jno
in
jp
dec
div
les
dec
inc
adc
test
mov
mov
addr16
xchg
jge
neg
lds
movsl
xor
movsb
or
jle
stos
clc
mov
addr16
mov
sub
cmpsl
daa
mov
addr16
jle
or
arpl
addl
inc
ja
notb
rolb
sub
push
mov
scas
dec
pop
andl
movsl
gs
imul
xlat
les
mov
jae
xor
mov
lahf
mov
cmp
jmp
repz
cmc
fisubs
call
inc
ja
outsb
xchg
push
test
filds
les
push
iret
in
sbb
dec
test
jle
push
mov
jo
icebp
mov
xchg
xchg
movsl
and
mov
xlat
inc
mov
call
pop
cmp
ds
dec
les
imul
xlat
pop
int3
mov
dec
lods
inc
mov
dec
int
mov
das
dec
jo
adc
cmc
in
mov
inc
jnp
mov
stos
sahf
sub
jnp
adc
das
jnp
sub
in
clc
ret
jmp
pop
mov
outsl
es
push
or
hlt
sbb
jp
push
add
pop
xor
pop
in
xchg
aas
xor
dec
pop
sbb
into
ret
push
out
dec
pop
xlat
inc
movsl
daa
rorl
mov
pop
jmp
aas
cmp
push
sbb
test
cmp
mov
jno
pop
inc
mov
std
dec
mov
pusha
fcompl
push
ret
pop
and
xor
out
enter
mov
dec
ficoml
in
adc
nop
mov
out
sub
aas
mov
pop
or
outsb
ret
test
mov
idivb
pop
xor
xchg
sbb
inc
in
xor
fisubrl
push
cld
jne
add
mov
pop
mov
add
adc
setae
paddq
inc
and
shll
sub
mov
jecxz
in
push
fistps
incl
mov
pusha
test
push
insl
push
sub
dec
push
mov
pushf
and
inc
call
lock
jp
xor
es
aaa
dec
icebp
aam
mov
xchg
lods
pop
test
dec
les
out
inc
jmp
inc
fisubrl
mov
push
aam
ret
xchg
xchg
dec
in
bound
sub
push
ret
out
ja
cmpsl
mov
stos
push
movsl
pop
push
cmpl
add
clc
lods
in
clc
insb
test
pop
out
or
dec
shlb
dec
and
pop
adc
mov
sbb
xor
and
ds
pop
cmpsl
mov
cmp
inc
cmpb
les
cmp
sub
daa
call
xlat
push
xor
sbb
outsl
xor
bound
sti
pop
popa
in
pop
sbb
into
movsl
sub
push
or
in
xchg
inc
lcall
lret
xchg
mov
je
push
mov
sub
sahf
out
pop
or
gs
jae
into
leave
lcall
push
cwtl
jo
clc
dec
xor
mov
xchg
and
mov
mov
rcll
aaa
mov
lods
jne
xchg
ficompl
push
jns
in
shll
mov
lea
cmp
loop
or
scas
or
inc
mov
sub
xor
sub
xor
iret
xchg
mov
jae
push
pop
xchg
dec
cmp
sub
bound
lahf
sahf
sub
testl
or
mov
iret
and
push
aad
cmp
mov
dec
ljmp
lods
xchg
inc
xchg
and
inc
or
stc
adc
shlb
jle
loop
adc
fisubrl
mov
inc
xor
es
rolb
aad
pusha
ret
mov
and
movsb
dec
icebp
roll
sub
push
adc
popa
movsl
or
or
and
cmp
push
inc
adc
sub
push
xor
inc
insb
sbb
rorl
sub
arpl
push
dec
inc
subl
sub
orl
aas
or
test
pop
les
rclb
sbb
mov
pop
into
imul
popf
xlat
call
testb
push
fdivrl
pop
add
pop
je
cmp
xor
ljmp
xchg
mov
mov
inc
roll
sub
jne
and
and
xchg
dec
adc
addr16
into
cld
mov
xor
fs
fwait
sub
sahf
inc
inc
imul
push
movsl
mov
or
clc
call
out
push
adc
sub
pushf
test
xor
cmpsl
push
xchg
stos
outsb
ljmp
popf
in
pop
jp
test
xor
push
pop
outsl
imul
mov
outsb
xchg
mov
cmp
daa
pushf
out
mov
inc
jne
roll
pop
mov
int
dec
sbb
and
lret
data16
cmp
les
pop
stos
mov
jl
mov
adc
add
loopne
or
outsb
sub
out
loop
adc
adc
push
and
mov
lods
add
mov
out
pop
mov
add
mov
jns
inc
jo
mov
adc
fwait
dec
clc
mov
sti
popf
aad
divl
xchg
dec
jg
repz
idivl
jl
iret
jae
out
mov
jns
int
into
jmp
imul
std
call
xlat
popf
sbb
imull
outsb
fsubrp
pusha
cwtl
andl
std
fcomps
divb
sub
icebp
cmc
repz
inc
sbb
push
icebp
test
loopne
pop
sbb
into
dec
pop
cmc
jecxz
xor
into
xchg
and
mov
xchg
push
jne
movsb
mov
pop
aas
insb
enter
jp
out
out
pop
adc
xor
hlt
jbe
adc
lods
pmovmskb
pop
into
pop
jp
leave
add
bound
mov
pushf
pop
dec
push
fldcw
mov
xchg
loope
sub
cmp
jb
mov
push
test
xor
mov
push
filds
xchg
push
adc
das
and
inc
xor
push
mov
or
mov
sub
int3
orl
mov
mov
popa
sti
data16
ljmp
and
xchg
jle
mov
cmp
xor
jmp
out
cmp
loop
mov
inc
dec
in
shll
adc
clc
and
test
fnstsw
outsl
es
lret
mov
pusha
cld
xchg
roll
sub
mov
mov
loop
std
fldt
pop
ret
cli
pop
push
xchg
xor
call
adc
adcl
inc
in
std
cltd
inc
mov
rcr
push
xchg
addb
push
jecxz
sahf
fwait
loope
and
imul
adc
fs
adcb
iret
es
shlb
stos
mov
std
into
stos
mov
dec
lret
mov
sub
pop
and
arpl
das
push
ret
and
call
push
aaa
push
icebp
and
js
scas
gs
xor
js
cwtl
add
xchg
jge
fdiv
cwtl
dec
push
shrb
mov
mov
lcall
loop
test
idivl
lret
fdivrs
xor
adc
xor
das
pop
insb
cmp
mov
into
repnz
popf
sbb
mov
mov
mov
int3
loop
out
ss
test
dec
mov
loope
cmp
inc
sbb
lahf
inc
popa
sub
mov
adc
dec
pushf
mov
call
jg
sbb
or
mov
xchg
xor
inc
insb
xrelease
cmc
mov
dec
andl
out
dec
out
out
or
dec
out
xchg
sbb
add
inc
jnp
inc
scas
loopne
aaa
mov
into
pop
or
shll
or
imulb
mov
mov
pushf
jl
xchg
cmp
call
jnp
fcomip
iret
mov
cs
push
cmpsb
outsl
adc
sarl
pop
push
cmp
inc
cmp
inc
ret
xor
jl
or
mov
jp
sub
dec
mov
ret
sub
cmp
je
push
dec
cmc
test
add
add
push
movsb
in
cmp
mov
mov
mov
mov
mov
inc
out
jg
inc
aam
push
jge
and
mov
cmp
stos
out
cmpsl
and
sbb
inc
std
mov
cli
sub
and
inc
sub
adc
and
and
loope
sbb
jmp
mov
or
andb
cmp
loope
popf
loopne
bound
mov
jp
lods
mov
setae
and
xor
push
sbb
dec
dec
sahf
add
xchg
sub
sub
rolb
push
std
adc
sub
sahf
adc
test
test
test
sub
sbb
jns
loope
pop
sbb
sti
icebp
dec
lcall
xchg
nop
movsb
js
cwtl
mov
sub
jl
stos
scas
dec
mov
repz
mov
cmc
xchg
aaa
push
push
lret
arpl
movsb
adc
adc
in
inc
adc
and
insb
or
dec
xchg
pushf
jb
int3
or
inc
push
outsl
popa
cltd
mov
fucomi
fistps
push
popa
xor
leave
inc
push
xchg
xchg
imul
xor
in
mov
loope
nop
movsl
mov
cmpsb
xor
jae
add
jae
cltd
add
fstp
scas
lods
decl
ret
cmp
push
pop
mov
xor
push
inc
jl
add
fnstenv
cmpsb
jo
xor
xchg
dec
cmpsl
and
enterw
and
or
mov
mov
xor
mov
subl
adc
adc
pop
pusha
out
rcll
xchg
pop
cmp
fwait
adcl
gs
popf
sbb
lahf
mov
dec
mov
cmc
clc
add
addl
mov
scas
xor
outsb
xchg
lcall
cs
orl
mov
sub
jp
lea
add
push
out
cmp
fisubrs
mov
stos
icebp
jg
outsl
js
adc
inc
icebp
dec
or
cmc
insb
out
mov
push
cld
test
scas
jecxz
mov
xor
leave
ret
cmc
movsl
adcl
jns
jb
sbb
and
mov
and
int3
or
movsl
ret
enter
in
inc
out
aas
inc
mov
loope
test
daa
inc
lret
jb
testb
adc
es
ret
jns
insb
or
sub
add
fldcw
loopne
sbb
and
icebp
xor
xchg
sbb
adc
into
lea
fdivrp
pushf
adc
negl
adc
xchg
fs
and
lea
and
icebp
sub
fwait
push
mov
xor
sub
jmp
and
sub
inc
ret
xchg
push
sti
gs
push
insl
jb
call
pushf
std
jbe
push
mov
jnp
mov
pop
cmc
jmp
jnp
dec
stos
scas
cwtl
repz
test
adc
sti
stos
faddl
inc
dec
out
and
rorb
test
xchg
mov
adc
dec
xchg
lahf
jmp
pop
add
in
adc
loop
jmp
call
and
shrb
inc
xchg
dec
and
nop
mov
push
pop
adc
mov
pushl
xchg
repz
test
sti
inc
popa
stc
dec
sbb
aad
mov
adcb
inc
jbe
adc
dec
mov
add
addr16
rcrl
gs
mov
add
sub
sub
dec
out
xchg
xchg
ffreep
mov
stc
cmpsl
and
and
dec
add
scas
sub
testl
fdivrs
hlt
mul
dec
jmp
push
in
fisubrl
std
jp
ljmp
xchg
in
jmp
inc
hlt
mov
add
rcrl
out
push
mov
adcl
pop
call
cmp
push
ds
imul
imul
or
xor
cmpsl
ss
test
add
mov
mov
adc
and
mov
or
sbb
xchg
mov
cmpsl
sarl
xchg
imul
daa
insb
jbe
dec
mov
roll
inc
testb
lahf
in
int
adc
add
jno
sub
pop
push
leave
adc
in
push
adcb
icebp
andb
shrb
in
out
ret
mov
in
lcall
mov
bound
ret
add
pop
mov
xchg
mov
daa
cwtl
dec
adc
cmp
into
xor
scas
imul
inc
inc
jecxz
sbb
mov
sahf
push
jb
jns
mov
xchg
xor
leave
mov
out
aas
clc
mov
popf
xchg
es
lea
movsb
pop
or
pmaddwd
imul
xor
pop
testb
pop
gs
sbb
bound
fiaddl
or
jmp
adc
hlt
push
mov
jae
sti
js
sbbb
rcrl
jns
cs
sbb
mov
pop
mov
aad
mov
add
fidivl
cmp
icebp
daa
and
pop
cld
repnz
dec
mov
and
dec
jg
out
jle
ja
jmp
cmc
pop
out
and
insb
stos
push
cmp
negl
jg
adc
xchg
xchg
push
mov
ret
insb
sti
and
sbb
data16
popa
je
pushl
push
add
or
sahf
cmp
jne
pusha
mov
addr16
incl
jno
sub
mov
mov
cmp
adc
sbb
or
sbb
mov
ds
xchg
and
dec
mov
mov
pop
xorl
icebp
add
fs
mov
mov
xchg
fcmovnb
push
cmp
je
out
outsb
in
gs
jmp
xchg
adc
inc
sbb
add
add
and
sbb
ds
pop
xchg
sbb
das
frstor
xchg
int
inc
mov
movsl
adc
xchg
mov
xchg
mov
add
call
cwtl
push
inc
xor
push
mov
push
adc
push
push
daa
mov
daa
je
adc
or
and
inc
stos
sbb
sar
popf
pushw
cwtl
jno
jl
mov
jp
ret
sar
push
inc
sbb
bound
sub
mov
mov
mov
sub
aad
add
inc
out
or
mov
xchg
cwtl
push
inc
sbb
and
sti
mov
lret
pushf
mov
orb
aaa
and
ret
dec
xchg
ret
iret
shll
imul
pop
mov
inc
push
xchg
in
jmp
in
insb
addr16
scas
xor
fisubrl
mov
push
sub
adc
mov
xchg
insb
andl
lret
syscall
lods
push
repnz
lret
or
xchg
test
icebp
mov
cmp
jno
or
ss
push
push
and
fcos
dec
cmp
cmp
out
mov
xchg
cmp
dec
sbb
in
subl
adcb
inc
jns
leave
mov
or
sub
mov
mov
in
mov
jge
and
mov
and
cmp
aaa
cmp
mov
inc
jge
pop
es
rol
nop
cli
jg
cltd
lahf
mov
jmp
imul
lahf
ret
inc
bound
sti
or
pushf
aaa
mov
test
ret
add
rcrb
or
pop
pop
in
xor
orl
or
in
dec
xchg
cmp
shll
addr16
loope
nop
push
pop
mov
cmp
loope
movsl
mov
adc
inc
sbb
pop
pop
sub
in
stos
ss
adc
push
mov
dec
jbe
xchg
cld
push
and
jno
pop
mov
out
push
xor
iret
jmp
std
test
repnz
imul
lea
in
in
popl
adc
cmp
xchg
data16
iret
lcall
popf
bound
sti
mov
testl
inc
sub
idivl
jns
mov
jg
iret
jmp
decb
dec
lahf
mov
xchg
pop
mov
inc
into
les
mov
cmp
icebp
push
gs
add
addr16
add
ret
adc
loop
mov
in
jl
lret
test
mov
jge
jecxz
pop
cwtl
xor
jno
loopne
add
mov
dec
sbb
sahf
mov
in
or
mov
test
xchg
mov
rorb
in
add
jne
inc
xchg
cmc
out
addb
stc
fisttpll
imul
ds
sbb
andb
inc
jno
out
loope
push
and
xchg
sbb
les
xor
or
std
sub
cmp
sbb
mov
push
idivb
xor
add
xor
ss
imul
mov
pop
fwait
call
xchg
dec
or
add
stc
xor
xor
xchg
mov
jp
repnz
add
flds
leave
sub
call
sbb
and
mov
mov
in
mov
cmp
pop
lret
shl
mov
inc
mov
and
aas
sub
and
in
inc
adcl
mov
loopne
add
shll
or
mov
jno
cmp
nop
arpl
cmp
daa
inc
mov
stos
xchg
inc
fisttpll
xchg
jg
pop
sbb
movzwl
push
in
and
add
xchg
mov
mov
addb
movsl
push
gs
repz
pop
push
sbbl
out
mov
aaa
fcoms
jmp
jae
std
imul
fs
stc
out
rcll
cmp
addr16
xchg
inc
mov
addr16
cmp
dec
lods
xor
jmp
adc
mov
and
cwtl
popf
xlat
adc
lret
mov
push
mov
stc
jo
dec
xlat
bt
push
jmp
in
repnz
test
es
mov
fists
add
inc
daa
xchg
cmpsl
xor
je
dec
mov
xchg
popa
lods
nop
loope
sbb
mov
test
lahf
scas
imul
jle
mov
mov
xor
in
notb
mov
hlt
mov
stos
adc
fcmovbe
stos
sbbl
adc
nop
je
clc
jo
mov
mov
iret
xchg
push
push
mov
xchg
push
pop
stc
stc
loope
ljmp
fistpl
xor
pusha
out
adc
scas
addr16
sub
test
ja
stos
movsl
addb
in
jle
inc
test
pop
or
int3
dec
push
inc
xchg
push
pop
cwtl
lret
push
cmc
jle
lret
subl
negb
push
lahf
subl
pop
xchg
pop
lret
adc
cli
lods
fsubs
add
sbb
std
xor
cmpsl
mov
and
mov
data16
and
lods
insl
pop
pop
filds
fwait
shrb
js
xchg
jg
fisttps
pop
pop
ficoms
mov
and
pop
sti
inc
mov
cmp
inc
cmpsb
xor
push
out
mov
sub
imulb
push
pop
aad
aam
jmp
inc
xlat
inc
or
push
shlb
pop
push
test
mov
jl
add
into
xchg
cmp
addr16
mov
and
push
aaa
adc
fdivs
adc
test
dec
add
dec
mov
lea
cltd
std
int
sub
mov
addb
leave
push
mov
pop
out
jnp
sbb
adc
mov
es
inc
popa
cmp
int3
enter
xor
pop
dec
jg
xchg
xlat
inc
pop
pop
adc
in
jl
dec
mov
sbb
add
pop
push
fbstp
adc
fwait
test
adc
dec
or
push
addl
fimull
xchg
xor
pandn
ficompl
pushf
add
loopne
cmpsb
call
stc
xchg
cmc
cmp
push
jnp
push
or
rcrb
imul
jns
ja
push
aaa
out
push
aas
xchg
int3
icebp
pop
cwtl
xor
jg
mov
cmp
enter
outsb
js
iret
pop
xchg
dec
out
xchg
neg
sar
mov
dec
xchg
loopne
daa
mov
icebp
sbb
xchg
sbb
leave
stos
and
push
sub
mov
mov
iret
mov
pop
lret
add
xor
cltd
add
icebp
adc
and
je
cmp
xchg
movsl
icebp
in
nop
cwtl
mov
repnz
sub
call
cmp
inc
sub
sbb
lods
xorl
add
push
lods
gs
dec
mov
scas
inc
and
jne
int
shrb
pop
stos
ficomps
inc
add
pop
dec
sub
cltd
aam
cmpsl
int
xchg
dec
add
mov
imul
xor
dec
clc
test
add
enter
mov
jmp
add
add
xorl
or
jmp
rcrl
mov
push
in
pusha
mov
cmp
lods
add
mov
dec
pop
push
insl
mov
out
loop
das
addb
dec
pop
ret
xchg
xchg
add
in
xor
xor
sbb
mov
xor
sbb
rcr
xchg
push
fldcw
and
ret
insb
aas
popf
pop
fcoml
in
mov
inc
mov
mov
hlt
scas
cltd
sbb
xor
inc
outsb
scas
mov
and
hlt
xor
sar
xor
jg
int
push
inc
cld
repz
push
insb
sub
loope
insl
xor
or
repz
outsb
add
pop
repnz
xor
movsl
pop
mov
mov
mov
lcall
stos
mov
jmp
fcmovnb
out
sti
bound
insb
notl
fnsave
jae
fdivp
pop
nop
xchg
hlt
out
adc
inc
ja
enter
mov
cs
cmc
dec
mov
xchg
xor
shll
lock
mov
rcl
je
sub
inc
cmp
fs
popa
mov
push
aam
sbb
out
and
jns
push
dec
push
mov
adc
daa
leave
call
int
inc
add
mov
aad
daa
or
jle
rcl
scas
inc
adc
xchg
fptan
and
daa
lods
xchg
xor
mov
inc
push
rep
pop
in
xor
aaa
popa
xor
adc
inc
adc
cmp
xchg
cmp
lret
rorb
cld
push
and
emms
out
movsl
sbb
pusha
inc
mov
enter
ja
mov
cmpsb
sbb
pop
jmp
inc
lret
fildll
push
stc
test
call
add
adc
pop
and
out
jb
jle
stc
xor
mov
or
imul
mov
aaa
lods
dec
cmp
jp
jp
loopne
ds
jl
lea
dec
je
es
xchg
inc
mov
xor
icebp
imul
xor
add
mov
jge
jl
and
test
push
pop
mov
dec
sub
pushf
xlat
mov
aad
xchg
and
icebp
cmp
sti
mov
sub
aam
andl
jp
and
lds
fmul
mov
fwait
out
inc
sub
dec
cwtl
int3
mov
cmpl
sub
or
subl
push
aaa
push
mov
cli
sub
push
mov
cmp
sbb
push
insb
jecxz
cli
xchg
fucomp
ss
adc
jmp
leave
add
gs
jge
stc
scas
sahf
lods
sub
jge
out
fcmovu
test
mov
jno
decb
jge
add
js
enter
mov
repnz
out
xchg
jae
stc
pop
out
adc
xchg
jns
jg
in
rclb
mov
sbb
inc
xchg
aam
out
js
push
loopne
mulb
ds
jnp
sbbb
mov
add
pop
aas
lds
and
fstps
sub
cmp
std
mov
aaa
xchg
cli
push
pushf
dec
push
mov
inc
loope
cmpsl
jns
inc
scas
stc
mov
sub
pop
mov
cmpsb
outsb
lret
jmp
and
adc
jg
femms
movsl
add
out
testl
add
cmpsb
pop
int
hlt
jl
push
fstpt
dec
out
jl
pop
xchg
xchg
cli
pop
andl
jno
jge
pop
mov
hlt
addr16
cmp
jns
ficoml
and
push
lcall
into
dec
jp
adc
fimuls
shlb
ss
cli
stos
lret
cld
mov
dec
adc
mov
sub
fdivs
ljmp
shrb
mov
frstor
add
pop
push
in
dec
jnp
or
xlat
xchg
add
mov
pusha
repnz
outsl
xchg
inc
sti
push
movsl
jnp
shrl
sahf
add
arpl
xchg
pop
out
mov
push
negb
pop
or
push
jns
mov
enter
xlat
lock
cmp
pop
adc
aad
lods
fs
cld
xlat
aas
or
push
mov
insl
ds
mov
jnp
nop
xor
mov
repz
ja
or
fcoml
pusha
jae
mov
out
leave
xchg
inc
sub
dec
mov
pop
pusha
movsb
jge
imul
jae
push
outsb
or
inc
cmpsb
cli
test
adc
gs
scas
add
rcl
pop
or
dec
icebp
in
jb
pop
push
in
jl
fists
xor
push
jecxz
shlb
rcrb
imul
mov
test
aas
gs
lret
sub
aaa
int
fbld
mov
dec
or
xchg
scas
in
repz
xor
add
push
subl
cld
pop
ja
rol
dec
xor
loopne
add
data16
int
std
add
ret
rorl
in
cld
xor
push
dec
xchg
pop
push
aam
gs
insb
cmp
sub
dec
repz
add
adc
fwait
jg
shll
mov
clc
into
inc
sub
clc
cmpsl
fldt
or
dec
pop
push
sub
das
mov
lods
hlt
mov
add
dec
mov
pop
std
adc
mov
add
les
loope
fdivrl
xchg
cwtl
pop
sbb
mov
cwtl
shrb
outsl
call
or
dec
sub
mov
sub
bound
test
add
pusha
dec
test
jmp
pop
push
pusha
pop
push
and
push
xor
inc
fnsave
mov
sub
mov
inc
pop
push
sub
jo
les
jns
sti
mov
fnsave
fildll
cli
dec
insb
out
orb
lret
stos
shr
ret
outsb
and
ja
or
push
cmp
add
popa
int3
jge
or
fs
or
mov
lahf
pop
aam
enter
cmpsw
jg
nop
mov
mov
lahf
fnsave
cmp
sbb
sbb
mov
filds
jmp
add
cld
loope
repnz
icebp
orb
sub
add
cltd
jl
jle
mov
stos
aaa
mov
mov
xchg
mov
out
aad
sub
push
push
sbb
aas
mov
dec
insb
pop
cmpl
adc
mov
inc
pop
xor
pop
clc
adc
cmp
je
js
jle
outsl
inc
sbb
in
adc
ds
ret
sbb
add
dec
mov
mov
and
gs
clc
out
out
lods
mov
test
stc
leave
mov
inc
gs
sahf
andb
shlb
lahf
fst
mov
shrl
add
arpl
cwtl
xchg
pop
pop
sti
add
stc
aam
les
sub
mov
rorl
push
mov
jnp
add
sbb
mov
and
cmpsl
rcll
test
pop
jne
mov
mov
push
aaa
mov
stos
cmc
cld
dec
jp
adc
jge
ret
xor
push
lea
lods
add
and
pushf
mov
xchg
push
out
mov
push
mov
mov
cwtl
jo
sub
mov
jge
push
cmp
cwtl
inc
push
imul
pop
stos
das
jne
ret
jg
xchg
adc
sub
jle
lcall
neg
jl
push
cmc
push
shlb
mov
out
loopne
cmpb
faddl
cltd
ds
jmp
pop
xor
mov
out
lret
fstpl
mov
aas
ja
and
gs
inc
lods
xlat
jg
cmpsl
xchg
jecxz
lds
subl
dec
cmp
sbb
out
jmp
cs
cmp
cltd
dec
invd
pusha
ret
outsl
adcb
fdivrs
pop
cmpb
sahf
movsb
dec
xchg
popf
pop
faddl
icebp
in
rorb
outsl
adc
dec
mov
iret
test
jp
fcmovne
stc
xchg
shll
cmp
ja
ss
movsb
cltd
les
and
mov
in
test
lds
in
int3
inc
cltd
dec
xorb
repz
and
add
mov
mov
fistps
sti
cmp
fcomi
pop
pop
xchg
lret
das
sbb
daa
pop
mov
push
test
mov
rolb
mov
imul
shl
in
cmp
sbb
xchg
icebp
int3
xchg
shlb
sub
mov
pop
sbb
mov
das
stos
repz
and
popf
adc
ficoms
mov
cmp
cmp
mov
in
adc
outsl
push
loope
call
repz
push
jbe
jmp
pushf
daa
xor
inc
pop
loope
and
dec
inc
aas
cmp
in
cli
insb
cmc
and
stos
xor
outsl
jnp
sub
or
xor
xorb
test
adc
scas
add
jae
mov
jle
negb
jmp
out
movsl
test
popa
add
add
shlb
push
cwtl
sarl
pusha
xchg
xor
dec
bswap
push
add
mov
push
inc
mov
sub
imul
jae
shrl
cmpsl
shrl
pop
jmp
iret
ds
aam
hlt
iret
add
mov
mov
mov
stos
mov
cmp
out
and
inc
in
test
out
sub
add
repz
pop
sbb
test
mov
lret
sub
jae
pop
pushf
cmp
mov
add
mov
or
insl
inc
mov
ja
mov
scas
add
into
subps
not
loope
and
sbb
mov
xchg
dec
mov
test
fs
or
js
jns
jl
or
popf
pop
jnp
inc
cmp
xchg
lods
xchg
and
fdivrs
pop
leave
mov
imul
mov
bound
inc
dec
cmc
xchg
dec
xor
and
lret
cmpsb
stos
add
mov
sbb
iret
std
cli
push
xchg
jb
jg
sub
inc
mov
jnp
movsb
add
movq
dec
cmp
test
and
mov
cltd
into
fs
inc
jne
shl
sbb
rclb
mov
or
mov
sub
push
lock
pushf
lock
rcr
cmpsb
push
mov
in
cvtps2pi
test
mov
scas
mov
insl
mov
xor
stc
dec
mov
nop
jo
cmp
mov
fimuls
out
lods
and
sahf
adc
lea
scas
or
pop
sarl
inc
mov
mov
js
imul
mov
sub
mov
clc
and
clc
pushf
pushf
and
cmc
dec
mov
scas
testb
mov
testl
mov
mov
movsl
xor
sub
sub
mov
decb
adc
dec
xor
cmp
push
lahf
in
aad
cwtl
mov
jnp
ss
inc
xchg
repnz
cmpsl
sbb
movl
mov
lret
ljmp
dec
shll
popl
fnstenv
outsl
test
or
xlat
popa
in
pop
nop
dec
mov
ja
or
mov
push
insl
xchg
xchg
ret
or
pop
mov
sub
sbb
aaa
shll
lods
das
shl
das
sbb
inc
je
lods
ds
pushf
outsl
jge
inc
fisubrs
arpl
das
mov
je
stos
ja
mov
add
mov
pop
pop
test
test
or
mov
add
sub
pop
in
addb
aaa
push
sti
dec
ret
daa
cmp
xor
cli
mov
or
sub
adc
xor
xchg
add
xchg
shll
add
mov
sbb
mov
fwait
pop
sbb
je
xchg
addr16
dec
push
push
loope
and
rcll
cli
and
inc
fstl
je
std
lret
add
insb
inc
mov
dec
xlat
sbbb
add
mov
jnp
xchg
dec
push
mov
rclb
cmpsb
out
xchg
push
fmuls
push
cli
rcll
xchg
or
xchg
iret
aas
in
out
out
xchg
sahf
add
and
push
jb
and
xor
sti
stos
cld
sbb
leave
jle
out
dec
mov
lret
xor
mov
inc
cmp
orb
inc
push
cli
repz
ret
lds
mov
test
add
pop
pop
mov
dec
lahf
sbb
out
push
rcrl
inc
push
adc
mov
sti
mov
mov
xchg
adc
clc
add
clc
loop
sbbl
ja
pop
jecxz
push
icebp
negl
out
je
mulb
hlt
adc
call
scas
inc
jno
mov
fs
or
mov
in
addr16
lret
sbb
bound
cltd
testl
add
jl
pop
mov
xchg
pop
push
mov
adc
jmp
mov
sti
and
int3
cwtl
cmp
pop
cmpb
and
hlt
or
push
fmul
aaa
sbb
mov
fbld
mov
pop
inc
outsb
jmp
jo
cmp
mov
push
dec
lahf
enter
imul
dec
ljmp
and
mov
test
loope
pop
scas
mov
cld
xchg
fistpll
repnz
xor
push
rolb
sbb
jecxz
cs
xchg
lret
addr16
mov
cld
push
push
insl
js
push
addb
xchg
or
cltd
pop
sbb
cld
cmc
js
inc
or
sbb
sub
jbe
adcb
cmp
ss
inc
mov
sbbl
push
adc
add
mov
in
mov
in
pop
jmp
push
add
push
divl
and
repnz
or
push
cli
jmp
repz
add
nop
cmp
jge
dec
cmp
add
mov
das
fistl
jne
shl
or
dec
jnp
nop
cmp
hlt
fistpl
in
aas
cwtl
cld
xchg
mov
test
imul
sbb
out
or
adc
rcrb
jnp
dec
rol
ret
out
out
popa
lret
cmp
fs
outsb
iret
adc
fisttps
mov
mov
cmp
fidivrs
mov
jecxz
cmp
adc
adc
jmp
jns
pop
jge
adc
add
dec
in
fldcw
dec
inc
pop
arpl
aam
sub
xlat
cmp
popf
leave
leave
mov
outsl
repz
xor
xchg
ret
pop
iret
lock
jo
jle
test
addr16
fs
pop
mov
pop
fwait
cmc
cld
push
sbb
cmp
jne
pusha
stos
sahf
sbb
std
push
jle
push
add
mov
out
int
out
adc
sub
ror
cli
fstpl
add
in
mov
mov
jge
mov
inc
popf
cmp
add
scas
pop
fisubl
outsb
jge
xchg
jae
cmp
subl
jne
inc
jmp
add
dec
jmp
push
mov
jae
xchg
ss
jp
sarb
jecxz
mov
adc
aas
iret
lidtl
cld
jl
pusha
mov
pop
stc
in
or
adcl
int
jns
jl
add
aaa
out
and
push
pop
mov
lods
push
jno
fnsave
cld
jae
imul
mov
ljmp
and
xor
pop
popf
loope
dec
popa
aaa
iret
and
shlb
adc
xlat
ret
fistpll
cmp
dec
push
dec
pop
inc
sarb
cmovbe
divb
jecxz
push
cmpsb
xor
xor
in
mov
in
es
xor
aam
out
lea
add
mov
pop
ljmp
and
jb
out
sbb
jo
inc
jmp
pop
icebp
clc
cltd
fs
mov
adc
mov
out
inc
pop
sub
pop
sbb
rclb
stc
fisubs
shlb
mov
iret
inc
push
rcrl
repz
push
jle
fwait
enter
add
cmp
jns
popa
test
or
xchg
xorl
jmp
mov
sub
pop
cmp
jbe
test
loopne
sbb
xchg
jo
sub
pop
aam
aad
dec
and
shrl
push
lcall
mov
movmskps
das
adc
ror
push
mov
icebp
icebp
sti
ljmp
pop
fs
push
insb
ljmp
ret
fsub
fstpt
mov
xor
mov
add
sti
or
mov
pop
shll
xchg
inc
mov
push
jmp
and
mov
fldt
xorb
push
pop
orb
lahf
fdivr
and
and
mov
test
sbbl
shlb
or
sub
sub
adc
or
ljmp
jp
rorl
or
inc
pushf
mov
pop
inc
mov
bnd
je
lods
in
insb
push
jg
xchg
dec
pop
mov
jae
push
aam
xlat
arpl
shll
and
divl
jmp
push
sbb
lahf
sub
xor
jmp
xor
cmp
dec
or
cmp
adc
repz
cs
daa
cmpsb
fwait
dec
xchg
in
fimuls
imul
ret
stos
lds
sti
sbb
mov
xchg
sarl
sbb
mov
jb
push
pop
jp
cld
fisubs
sub
jo
psllw
loope
inc
mov
or
pusha
adc
xchg
int3
mov
fsubrs
push
clc
es
aad
dec
inc
daa
mov
loop
pop
or
addb
xchg
mov
xor
pop
pop
mov
adc
or
sbb
ret
mov
inc
adc
pop
and
repnz
and
cs
mov
dec
sub
mov
das
lods
dec
sbbl
repnz
jae
add
push
fimuls
aaa
dec
push
sub
mov
mov
or
outsl
and
xchg
pop
adc
cmpb
lods
fsub
push
enter
jbe
jle
xchg
or
xor
dec
jg
xor
inc
nop
mov
ret
loop
rorb
mov
and
loopne
mov
sbb
lret
sbb
ret
mov
fldcw
jno
mov
dec
jns
inc
mov
jg
imul
fildl
mov
stc
int
loopne
out
mov
mov
rcll
mov
inc
mov
in
or
cmpsb
je
jl
dec
shr
pop
jno
xor
sbb
aaa
mov
and
aas
inc
js
cmp
test
pop
pop
into
subb
aas
adc
sarb
add
clc
outsl
jne
adc
iret
jg
aaa
add
xchg
addr16
jbe
dec
mov
mov
fsubr
pop
mov
sarb
out
flds
aaa
test
mov
repz
adc
cmpsl
pop
dec
testb
mov
aam
ds
dec
leave
je
sbb
outsb
int3
jae
fwait
loope
dec
mov
mov
mov
sub
xchg
mov
outsl
scas
push
in
push
pop
cmp
daa
adc
mov
jmp
inc
das
jge
ficomps
fadd
pop
jecxz
jl
pop
jo
test
outsl
stos
push
mov
es
pop
jge
xor
cld
mov
inc
ss
sbb
push
loop
dec
push
lods
add
ret
jg
inc
in
arpl
mov
enter
jl
out
sbb
mov
dec
fs
rcll
fcmovne
stos
push
push
mov
jo
add
lods
fistps
sub
aam
push
test
call
js
aad
cmpl
mov
and
jae
enter
shlb
fwait
sbb
ja
cwtl
out
or
arpl
cmc
nop
cmp
les
fnstcw
push
mov
add
sahf
idivl
insl
aaa
aas
pop
test
lods
scas
adc
xlat
mov
loop
mov
out
loope
fists
sub
mov
and
imul
stos
enter
mov
pop
shl
std
inc
fdivrs
sbb
jno
xchg
das
into
ja
inc
mov
out
lcall
imul
inc
jb
adc
sarb
insl
mov
insl
enter
add
das
cmp
pop
jo
xchg
push
xchg
out
xor
fwait
ret
aas
js
sti
jge
rol
in
jge
jmp
mov
sbb
leave
push
xchg
shll
xchg
mov
enter
sbb
pop
xchg
xchg
test
mov
sbb
stc
scas
fucomi
add
mov
clc
push
inc
shlb
xchg
push
ret
inc
sub
xchg
ds
xor
push
add
pop
jo
lahf
out
in
int
fsts
repnz
cmp
repz
aaa
jle
pop
cmp
ljmp
xchg
add
out
sub
cmp
in
add
ds
and
xchg
lods
mov
shr
loopne
sub
ret
or
clc
dec
inc
adc
mov
xor
and
repz
ret
add
lea
mov
dec
push
mov
xor
lret
or
mov
add
shlb
hlt
in
popf
add
int
push
loop
pop
orl
fwait
test
aaa
pop
loope
cwtl
fidivl
mov
xor
ret
subb
in
fisttpl
shl
mov
pop
fiadds
mov
and
push
mov
adc
or
pop
dec
popf
xchg
shl
pushf
out
inc
pushf
mov
add
fldenv
int3
sbb
popf
gs
sub
mov
ds
xor
test
in
pop
repz
add
lds
xchg
mov
mov
fildl
rorl
push
sub
dec
ljmp
xchg
lahf
push
lret
inc
mov
cmp
cmp
jp
ret
fsubrp
xchg
pushl
lcall
inc
shlb
ret
inc
aaa
jne
fldt
mov
aaa
cmp
subb
xchg
xlat
andb
push
in
rolb
inc
xor
adc
pop
notb
das
pop
in
mov
outsb
addr16
inc
popf
dec
sarl
or
fnsave
xor
pop
js
insl
cmp
cltd
movsb
int
adc
std
push
outsl
iret
out
dec
in
sbb
jbe
mov
lahf
loop
xchg
inc
xchg
mov
mov
jle
xchg
gs
stc
xor
js
ds
lcall
or
out
into
push
jp
jno
iret
jnp
inc
test
cmp
cmc
pop
les
cld
fnsave
loopne
cmp
loope
test
out
aaa
push
lds
scas
pop
jb
jnp
lahf
lods
jmp
ds
adc
lcall
lock
sub
sahf
sub
test
sahf
mov
mov
jge
arpl
aam
dec
inc
jnp
scas
sub
pushf
or
loop
fisttps
sbb
mov
sti
mov
mov
push
fs
mov
push
call
and
jecxz
arpl
aam
jo
pop
jae
dec
sarl
lcall
mov
fdivrl
inc
jne
imul
adc
mov
js
outsb
jnp
push
xchg
jecxz
jle
and
dec
add
mov
ret
inc
leave
aad
bound
and
or
subb
mov
mov
pop
sbb
cmpsl
sub
js
mov
adc
adc
lret
jno
push
gs
bound
mov
cmpsb
lock
dec
jne
ja
pop
ljmp
aaa
ds
sbb
cmpsl
movsl
dec
xlat
jge
xchg
cmpsl
repnz
pop
jmp
cmpsl
inc
or
outsl
or
insl
lock
mov
sbb
into
xchg
lock
cmp
jg
or
fucomip
imul
movsl
cmc
ss
repz
mov
dec
loop
push
cmp
jb
mov
or
dec
mov
xlat
insl
add
aaa
fdivrs
xor
aad
outsb
test
movl
cmp
or
hlt
and
jl
gs
mov
je
xlat
jnp
or
mov
sar
mov
addr16
sbb
push
xor
mov
fstpl
stos
lahf
out
std
add
fstl
leave
test
out
adcl
ficoml
pop
iret
fs
mov
inc
lea
add
out
pop
jno
outsb
std
pop
jbe
cmp
ja
clc
lahf
pop
inc
in
fmuls
push
or
in
pop
aaa
nop
fmull
inc
pop
pushf
mov
mov
rorl
fcompl
aas
jne
div
xor
push
jmp
sbb
mov
pop
inc
mov
sbb
out
cmp
add
sub
sahf
and
jae
mov
rolb
fnstsw
into
push
cs
daa
inc
push
lock
xchg
out
adcl
push
mov
hlt
scas
lods
xchg
jo
sbb
mov
aas
inc
xor
add
lcall
jb
enter
mov
jl
ljmp
into
push
mov
test
dec
into
adc
enter
xor
cmpsl
cmp
gs
aad
mov
push
mov
inc
push
mov
in
sbb
xchg
shl
pop
arpl
jbe
fmuls
cli
sbb
xchg
dec
jecxz
add
mov
stos
sbb
add
rcrl
imul
lods
cli
xlat
inc
xchg
mov
stos
lods
pop
call
dec
andb
and
sbb
divb
adc
test
mov
sarl
outsl
adc
cmpsb
or
mov
test
xchg
repnz
dec
fnstsw
or
out
cmp
out
dec
rcl
iret
orb
jmp
out
aas
decl
xchg
idivl
sti
sar
jns
push
jecxz
dec
addr16
leave
fsub
cmp
ja
dec
xrelease
adc
xor
or
mov
leave
addr16
outsb
add
push
mov
push
inc
test
mov
imul
push
cltd
pushf
int3
xchg
nop
orl
push
jo
mov
push
lahf
les
jno
ret
lret
push
add
imul
xor
fstpl
sbb
and
mov
push
ljmp
test
sbb
std
sbb
mov
jns
push
bound
or
shll
jbe
idivl
jae
loope
in
mov
div
div
add
push
cwtl
pop
ljmp
lret
in
loopne
cmp
repnz
fdiv
mov
pop
pop
xchg
enter
insb
cmpsl
insb
fsqrt
xlat
mov
sub
mov
shr
mov
repz
pushf
inc
push
mov
sti
sub
inc
and
stc
psubd
punpckhwd
cmpl
mov
cs
cmp
cmp
xor
idiv
aad
dec
pushf
dec
push
adc
lret
inc
xor
jmp
xchg
jb
bound
les
enter
mov
cmp
ds
clc
or
push
mov
lds
out
pop
and
push
xchg
pop
sbb
outsl
sub
das
mov
test
xchg
cs
sti
jge
cld
movsb
icebp
imul
pop
cmp
lock
jb
push
xor
roll
out
enter
fstps
dec
rolb
mov
sbb
in
ficompl
call
cmp
data16
jns
jecxz
pop
lahf
rclb
cli
aam
nop
loope
add
jb
sbbb
insb
push
cmp
sbb
cmp
nop
das
lahf
scas
xchg
sub
xchg
jae
jl
aad
lock
dec
cltd
insl
int
and
stos
lret
shlb
mov
sub
mov
nop
icebp
loop
cmp
popf
cmp
or
sbb
ss
shll
sub
push
fmuls
std
repnz
fdivl
pop
lcall
jb
pop
sbb
pop
cwtl
add
adc
jne
sbb
fucom
mov
push
mov
or
pusha
sti
pop
test
push
out
icebp
movsl
jo
js
pusha
push
movsb
in
cmp
lcall
outsb
jmp
push
sbb
xchg
jmp
push
in
fistps
cli
inc
cmp
scas
sub
imul
sbb
in
cltd
dec
rclb
or
jge
mov
mov
shrl
lahf
push
dec
popa
pop
popf
lahf
mov
insb
dec
stos
mov
push
mov
inc
sbbl
pop
pop
stos
mov
push
scas
mov
and
xor
icebp
pop
xor
stc
push
pop
jge
popa
ror
mov
sahf
imul
pop
cmpb
imul
sbb
rcrl
bound
pop
cmc
adc
mov
lahf
loope
repz
push
clc
filds
xchg
fmulp
outsl
fs
dec
rclb
dec
ss
gs
jmp
or
pop
inc
movsb
sbb
nop
sbb
add
pop
shll
xchg
mov
rolb
adc
push
aam
data16
fstps
in
pushf
out
add
jmp
push
ret
xchg
shll
cld
inc
in
mov
jne
xor
test
mov
aas
mov
mov
test
in
lcall
inc
push
jg
fnstenv
and
dec
sub
mov
dec
xor
lods
ds
shlb
jge
sbb
mov
packssdw
cwtl
ret
xchg
add
movsb
mov
adc
xchg
sti
or
cli
push
movsl
and
xchg
mov
xchg
les
jp
icebp
sbb
popf
push
push
fidivrs
add
cwtl
pop
dec
lahf
xor
jle
xchg
sub
mov
cmpsl
xchg
in
or
lcall
or
loope
sbbl
pop
cltd
repnz
sbb
scas
xor
mov
inc
jnp
mov
in
out
mov
insb
or
pop
adc
push
inc
fucomp
lcall
pop
sub
jmp
in
cmp
inc
cmpsb
xlat
ljmp
mov
testb
mov
sbb
xor
icebp
mov
adc
and
xchg
mov
push
sub
push
sub
xchg
adc
imull
test
lahf
sub
lret
test
cli
mov
cmpsl
nop
lret
adc
std
xchg
add
sarb
repz
mov
out
dec
imul
loope
cs
and
icebp
div
xchg
dec
push
xor
inc
cmpsl
mov
shl
or
hlt
iret
imul
pop
sub
in
loop
notb
pop
je
aam
cld
stos
shl
and
cmp
or
aam
fisttpl
icebp
xor
shlb
push
pop
push
lgs
lock
lods
add
fidivrs
xchg
mov
in
repnz
mov
xchg
popf
push
movsb
cmp
fs
cmp
sti
jmp
nop
jmp
mov
xor
sti
pop
insw
mov
cmpsl
testl
adc
lods
mov
mov
insb
and
mov
pop
insb
aad
out
mov
xor
xor
xchg
das
in
pop
jb
jbe
out
push
arpl
push
aad
shlb
fisubrs
cs
imul
sbbl
fnsave
sub
or
lods
inc
push
inc
shll
bound
mov
inc
xchg
out
and
cld
inc
pop
sbb
imul
cmp
mov
add
pop
mov
fimuls
xor
scas
adc
sbb
fisttps
repnz
cmp
inc
xchg
jecxz
addr16
jbe
jno
cmp
and
add
ds
fs
fcoms
negb
stos
dec
mov
cmp
xchg
fwait
cmp
iret
ljmp
jg
cwtl
push
xchg
insl
addr16
lods
or
out
fstps
adc
mov
inc
xchg
clc
insb
fwait
je
imulb
xorl
inc
mov
jb
shr
shll
dec
inc
jle
fidivrs
lcall
push
out
lahf
fmuls
popf
xor
lock
dec
std
lcall
sbb
in
les
mov
cmp
arpl
popa
sarb
cmp
lds
mull
jmp
lds
inc
aam
push
jge
outsl
shr
pop
fwait
lcall
mov
jae
push
out
or
xchg
mov
xlat
stc
dec
dec
jo
sahf
stc
imul
add
and
add
lcall
xchg
adc
in
jmp
ja
or
ljmp
dec
inc
pusha
dec
sahf
and
lret
adc
push
out
sbb
fnsave
cld
inc
push
in
inc
scas
cli
pop
sbb
add
fnstcw
jp
mov
decl
stos
inc
push
mov
add
out
je
das
mov
test
bound
bound
jae
iret
icebp
inc
shlb
and
icebp
inc
les
loopne
fs
pop
pushl
lea
mov
mov
mov
add
lods
roll
ja
adc
inc
adc
mov
push
cmp
cmp
push
sub
in
nop
dec
std
and
or
in
push
movsl
sbb
repz
cltd
out
aam
lods
adc
jae
mov
sti
sbb
mov
fdivs
jae
xchg
jns
jne
inc
pop
jge,pt
sub
rol
jns
push
or
cmp
push
sub
dec
imul
cltd
aad
outsl
jl
or
add
and
mov
xor
push
leave
jbe
test
das
xchg
jl
std
sub
jae
xlat
fcompp
dec
sbb
das
cmp
push
out
dec
or
adc
sub
insl
mov
sbb
mov
fdivs
test
sbb
rol
into
int3
ja
mov
addl
scas
icebp
dec
xor
inc
iret
cmp
test
inc
stc
clc
pop
andnps
xor
jns
ljmp
iret
pop
ds
xchg
fcomps
xchg
roll
popf
hlt
imul
clc
aad
imul
pop
push
int
fistpl
adc
lds
std
out
mov
mov
mov
sbbl
xchg
data16
inc
mov
outsb
scas
mov
mov
jge
inc
xchg
mov
inc
ja
out
inc
fisttpl
mov
movsb
push
out
sub
sbbl
and
aam
ljmp
add
cs
popf
movsb
out
mov
sbb
scas
je
int3
je
popa
lods
fdiv
popa
stos
pushf
sahf
test
dec
cmp
cwtl
pushf
inc
sbb
mov
cmpsb
insl
cmp
xor
mov
loopne
push
shll
mov
out
bound
xchg
push
push
pop
ljmp
fsubrs
cmp
outsb
xor
cmp
and
pushf
inc
sbb
xor
adc
dec
cmp
xchg
mov
mov
xchg
iret
stos
cld
mov
cs
fdivr
nop
xchg
or
fwait
test
push
dec
jmp
aas
movsb
sbb
fisubrs
shrl
fs
dec
dec
or
ss
cmp
loopne
pop
imul
cwtl
ja
mov
xchg
les
cmpsl
ja
iret
mov
into
jbe
cmp
xor
arpl
aad
out
xor
mov
lds
dec
hlt
cmp
inc
mov
jle
jb
fstpt
or
nop
rcr
out
stc
pop
je
inc
rol
std
lcall
cltd
xor
mov
inc
cmpsb
jns
out
mov
repnz
divb
mov
push
mov
mov
jns
pop
jnp
out
orb
add
pushf
cmpsl
cmp
test
outsb
jmp
or
xchg
cwtl
popf
push
ss
sti
fstpt
in
and
inc
fidivl
arpl
pop
pop
or
inc
lret
scas
xlat
clc
ret
test
inc
aad
lea
shlb
imul
rcrl
lock
push
scas
iret
dec
jle
les
mov
mov
inc
and
ret
xor
in
add
aaa
fisubl
movsb
mov
adc
std
mov
ss
xor
cmpl
xor
add
mov
inc
enter
repz
addr16
pop
lcall
mov
cmp
decl
push
fstpt
mov
ret
push
or
pop
leave
fmulp
inc
mov
roll
repnz
adc
push
jl
aam
shll
adc
fdivr
mov
sbb
sub
hlt
push
add
imul
xchg
or
xchg
push
icebp
fcmovu
icebp
repnz
test
pop
and
pop
in
popf
mov
xchg
stc
out
sbb
or
push
adc
push
jbe
les
loopne
or
in
cmp
sahf
cwtl
xor
je
xchg
dec
fisttpl
scas
mov
xor
cmpl
jb
dec
fidivl
jae
movsl
movsb
xchg
pop
sbb
xor
add
movsb
stc
shrl
mov
mov
adc
and
cmp
fwait
dec
adc
push
or
popf
xor
arpl
das
jle
nop
bound
fistpl
inc
adc
popl
jmp
scas
pop
nop
ficomps
adc
lcall
stos
or
out
jno
rcrb
dec
add
xorl
and
xor
sbb
std
fwait
out
mov
lret
push
stos
fcmovnb
xchg
mov
xor
cli
jno
adc
mov
cwtl
inc
pop
pop
mov
or
aas
imul
jecxz
xchg
pop
mov
outsl
out
and
push
push
xor
push
sbb
pushl
dec
cmp
push
and
icebp
lock
cld
mov
in
inc
jle
jbe
mov
dec
push
mov
push
xor
lcall
aam
lea
sarb
roll
add
jg
cmp
pusha
sbb
mov
xchg
pop
clc
mov
sub
cs
jmp
dec
in
xor
sahf
sub
pop
xchg
mov
subl
dec
ds
in
jecxz
fldl
outsb
cmp
push
movsb
test
mov
mov
inc
push
and
pop
adc
jg
sbb
data16
pusha
cmp
movsl
test
dec
and
xchg
int
aas
fwait
jecxz
shll
mov
cmp
mov
hlt
fsubrl
and
push
jmp
add
push
xor
into
xchg
aas
cmp
push
sub
mov
imul
sub
fisttps
insb
out
push
dec
cmp
iret
repz
mov
jae
push
test
dec
mov
insl
lret
loope
out
mov
mov
sub
movsb
mov
mov
xlat
frstor
jno
cltd
add
into
jle
iret
fdivrs
and
xchg
push
ds
xchg
insb
sbb
xor
xchg
mull
inc
shl
jle
and
lret
pop
hlt
imul
dec
xchg
mov
dec
adc
xor
insl
or
mov
cwtl
pusha
mov
orb
lods
pop
imul
loop
rcll
mov
movsl
sub
pop
outsb
aad
sub
fidivs
out
ljmp
xchg
mov
sbb
sbb
push
test
mov
bound
sahf
mov
mov
push
lock
cld
xor
imul
mov
xchg
movsl
in
xor
int3
aas
ds
push
jae
push
mov
std
pushf
test
icebp
jg
jmp
enter
pop
ja
popf
fcoms
rcll
push
adc
pop
enter
test
mov
sti
and
add
jg
ret
in
add
xchg
mov
mov
enter
out
xor
sbb
pop
pop
adcl
nop
xchg
jae
or
fbld
push
mov
add
dec
mov
adc
pusha
pop
stc
ja
adc
adc
pop
filds
int
mov
std
roll
xchg
fldcw
jmp
jae
cmpsl
test
lods
lahf
or
stos
cld
push
bound
xchg
cmp
cld
fwait
int
lea
dec
xor
subb
adc
xor
push
lock
push
xchg
or
jge
adc
xchg
mov
xchg
dec
iret
shr
loopne
repnz
inc
xor
adc
sub
lock
adc
cld
mulb
lahf
push
call
mov
testl
arpl
daa
inc
stos
outsl
sarb
mov
fstpt
push
rol
test
lods
xchg
inc
cmp
addr16
or
adc
xor
mov
mov
mov
pushf
sub
stos
xor
xor
pop
push
or
stc
cmp
insb
aam
out
jbe
or
data16
pop
add
push
decl
sub
pop
and
loop
xchg
inc
repz
cmpl
outsb
or
pop
inc
jge
xchg
rcrb
repz
daa
lcall
in
aaa
mov
ljmp
xlat
xchg
xlat
mov
in
and
add
lret
and
ret
inc
cmp
shlb
imul
ja
inc
call
push
add
jns
shll
test
xor
mov
out
mov
and
cltd
clc
or
int
aaa
xchg
xchg
insl
dec
loopne
fiadds
sbb
sbb
pop
std
push
cmp
subb
cli
scas
cli
mov
inc
pop
xlat
ds
les
sub
and
mov
and
lret
xchg
mov
out
pop
jl
mov
lahf
jge
movsl
iret
jo
aas
outsl
xchg
insl
dec
in
and
int
sub
add
cmpsl
pop
insb
sbb
jbe
aam
shrb
adc
mull
cmp
aaa
int
or
fdivrl
test
rclb
loopne
push
adc
mov
scas
push
inc
xchg
add
in
adc
fidivrl
dec
gs
mov
xor
jecxz
jo
sub
or
sub
sbb
sbb
stos
and
jae
sub
adc
mov
and
or
aad
fimuls
push
lea
mov
hlt
mov
cmp
inc
aam
std
lret
cmpsb
divl
mov
add
xlat
fnstenv
or
pcmpeqw
test
mov
sbb
idiv
mov
scas
stc
fisttpll
adc
ficoms
pop
xor
mov
xlat
pop
cwtl
inc
sub
adc
notl
mov
or
jnp
inc
jnp
das
xchg
sti
push
rcrl
lcall
into
cmp
mov
mov
xchg
xchg
add
icebp
xchg
mov
mov
push
arpl
cmpsb
out
inc
cltd
fwait
or
dec
scas
cmp
sahf
pop
pop
xor
mov
pop
ror
dec
repnz
ljmp
pop
inc
pop
jle
cmc
push
movsl
fildl
gs
out
fwait
je
fdivp
rclb
shl
mov
dec
or
push
dec
roll
je
dec
pop
pop
in
loop
test
sbb
cltd
jp
jbe
push
dec
rorb
test
ret
cmp
dec
inc
sti
jp
jo
nop
pop
xchg
ret
adc
lret
cmpsb
and
dec
and
pop
mov
je
adc
mov
xor
pushl
sub
mov
xor
repnz
mov
pop
jb
lcall
cmpb
repnz
mov
nop
or
shl
inc
dec
jle
out
into
xchg
stc
pop
jne
xor
dec
mov
fdivr
lds
mov
clc
sbb
movsb
sub
mov
ja
sahf
inc
insb
mov
or
sub
ret
clc
xchg
adc
mov
jne
aaa
dec
jmp
imul
test
repnz
aam
push
dec
jne
hlt
push
xchg
push
mov
ljmp
mov
outsb
xor
xor
ja
xchg
sbb
fldl
and
dec
lock
ss
pusha
imul
imul
insl
cltd
adc
and
jmp
mov
insb
sub
push
push
sarl
dec
adc
cmp
popa
aaa
lahf
loope
sub
loop
dec
stos
cmp
sub
test
dec
jp
xchg
adc
je
mov
inc
out
mov
or
inc
sub
sbb
sbb
sbb
and
lds
jle
mov
jl
inc
and
inc
ret
push
mov
dec
cltd
and
lret
inc
iret
stc
add
movsb
cmp
xor
sub
mov
andnps
pop
cwtl
jno
out
int3
mov
sub
push
ja
xchg
je
movsl
push
dec
inc
lods
sub
dec
push
cmpsb
fcmovu
mov
cmp
cmp
repnz
add
cwtl
movsl
xchg
add
push
jno
or
jns
jge
mov
popf
fnstsw
dec
adc
push
fs
jmp
dec
inc
and
in
pop
fimull
flds
pop
sbb
cli
jp
out
int
inc
movsb
sahf
push
out
jp
cmp
mov
mov
arpl
int
daa
jecxz
sarb
fisubs
test
sbb
mov
mov
mov
push
push
dec
data16
stc
xor
push
les
lahf
cmpsl
dec
xchg
inc
rclb
jge
mov
mov
sbb
mov
loop
sbb
and
sbb
xchg
dec
int3
stc
fdivrs
loop
dec
ret
fwait
bound
pop
iret
fsubp
je
cmp
and
mov
mov
pop
cwtl
cs
fdivrs
xchg
ljmp
adc
mov
leave
sub
movlps
push
cld
jnp
adc
sub
sub
xlat
pusha
aad
insl
es
add
rcll
mov
xchg
clc
mov
mov
add
sbb
mul
or
xchg
cmp
adc
add
push
lods
cmpsl
add
sarb
lds
push
ja
loope
inc
outsl
cld
push
data16
aad
sbb
int3
xor
lret
aad
add
sub
repz
sub
cmp
nop
scas
hlt
aas
xchg
subb
adc
mov
dec
mov
dec
push
pop
es
xchg
adc
xor
xchg
jno
sub
aam
jns
and
and
mov
mov
xchg
shl
sub
lea
int3
jno
xchg
out
rolb
loope
sbb
iret
data16
lahf
dec
xor
data16
add
orl
mov
pop
sbb
icebp
mov
repnz
mov
ss
mov
pop
sahf
jg
jp
movl
dec
mov
push
je
sbb
insl
inc
push
rolb
out
rcll
and
push
lods
xchg
xchg
dec
test
cmp
or
adc
sahf
movsb
or
in
xchg
sti
fs
xlat
or
sbb
out
in
fcom
test
xchg
lock
xchg
ja
mov
add
mov
ja
scas
in
ds
ds
add
mov
and
in
into
movl
sahf
cld
insb
jno
stc
xchg
or
imul
mov
xor
ret
add
cmp
dec
in
xchg
xchg
sbb
sub
mov
inc
fcmovne
cmpsl
jle
sti
cmp
jo
cmc
push
fdivp
xchg
xchg
mov
sbb
enter
jns
movsb
movsl
mov
stc
pop
xlat
pop
fs
sbb
and
fisttps
mov
push
in
cmp
push
divb
bndstx
mov
mov
jmp
or
sti
cli
push
js
sbb
xchg
out
sub
testl
mov
pop
mov
loope
cmp
inc
jle
adc
cmp
out
or
push
cmpsb
scas
movsb
cmpsb
add
inc
loop
sbb
push
xlat
rorb
scas
daa
imul
push
test
pop
xor
inc
inc
imul
adc
iret
cmc
inc
mov
or
mov
ret
dec
sti
push
dec
cmpsb
les
xchg
jb
cmp
sub
xor
pop
ds
outsb
shll
pop
dec
xchg
lret
mov
sbb
sub
push
push
add
cmpsl
fldl
and
push
and
adc
or
sub
push
pop
pop
push
fistl
xchg
xor
lock
ss
fdivl
nop
mov
sbb
pop
xor
mov
inc
push
dec
lds
jp
ret
xchg
cmpsb
ss
into
cwtl
les
fwait
adc
cli
iret
cmp
arpl
adc
inc
je
shlb
cmc
dec
pop
mov
lahf
test
cmp
hlt
xor
in
push
cld
push
icebp
xor
lret
nop
ret
mov
mov
xor
mov
jecxz
jl
nop
and
mov
in
hlt
mov
pop
js
in
mov
arpl
mov
pushf
mov
mov
cmpl
hlt
push
in
mov
mov
dec
dec
push
jns
arpl
pop
dec
cmp
cmp
iret
gs
les
adc
into
jmp
loopne
dec
xor
nop
cmp
das
sub
push
enter
and
aam
into
mov
dec
adc
sbb
xorb
sbb
lahf
sub
dec
jns
aaa
stc
cltd
and
jmp
jbe
mov
dec
mov
rclb
stc
out
in
mov
mov
sbb
fsts
in
push
mov
push
mov
lret
inc
xlat
fcomip
add
out
push
mov
sub
stc
hlt
imul
icebp
hlt
adc
cli
jae
cmpl
dec
ss
add
jnp
fisttps
lods
fsubrs
cmp
ficomps
or
xchg
mov
dec
lea
andl
xor
icebp
pushf
xchg
push
mov
jae
lret
scas
cmpsl
pop
shr
inc
sbb
test
cmp
mov
mov
pop
lret
outsl
xor
mov
in
adcb
in
cmpsl
daa
neg
xchg
push
pop
scas
mov
daa
jecxz
mov
jecxz
dec
push
jle
xor
cld
xchg
test
xchg
mov
mov
mov
or
sub
jmp
jecxz
aas
ja
je
jecxz
fsubr
insb
pusha
icebp
in
mov
insl
lret
cmpsb
rdtsc
lds
pop
cmp
adc
xor
sbb
inc
sar
pop
push
pop
sbb
clc
sub
sti
pop
sub
testb
lock
xor
xor
ficoml
mov
mov
lcall
push
xchg
mov
mov
lea
mov
test
popf
or
or
and
imul
enter
cmpsb
cs
shlb
clc
inc
cmpsb
jo
push
inc
in
mov
sub
call
jmp
xor
js
add
xlat
aam
arpl
and
notl
lock
bound
jle
adc
arpl
leave
or
push
dec
lods
insb
out
sub
pusha
jbe
push
popa
out
jae
or
add
insb
push
fdivr
std
xchg
inc
and
cmc
mov
std
xchg
or
shrb
push
xchg
pop
push
cmpsl
pop
xchg
gs
std
lahf
jae
test
sub
push
test
stos
lock
repnz
mov
enter
fsub
push
cmp
cmpsl
pop
out
outsb
mov
jnp
mov
cmpsl
xor
loope
insb
pop
dec
mov
stc
das
pop
xchg
std
xchg
out
jbe
pop
xchg
pop
inc
or
jecxz
shr
in
cmpsl
xor
xor
jo
xchg
dec
lret
fwait
add
lods
inc
aam
sahf
sahf
movsl
push
cld
orl
ljmp
dec
punpcklwd
call
fsts
sub
out
rclb
cs
rcl
lcall
fcoms
jle
fs
ja
and
xor
mov
mov
add
ret
xchg
fisubrl
shl
jae
cmc
pusha
or
divl
inc
arpl
inc
mov
mov
fisttps
jno
mov
pop
mov
ljmp
lret
jmp
in
push
inc
sti
xlat
test
or
repnz
mov
add
enter
test
push
jns
or
mov
cwtl
or
jp
call
xchg
popa
clc
sub
lods
push
xor
sbb
xchg
ficomps
jmp
fisubrl
fimull
push
or
daa
and
or
popf
icebp
mov
les
dec
sub
test
mov
out
adc
or
ds
lret
mov
ret
addr16
movsl
bound
sbb
xchg
jg
mov
sbb
push
stc
jns
cmp
push
sbb
mov
and
icebp
imul
fwait
cli
sbb
fdivr
pusha
push
insb
cs
mov
push
iret
out
and
dec
in
rorb
xchg
sbbl
mov
xor
or
je
cmp
push
ja
jge
cwtl
sahf
outsl
sarb
and
daa
fnstcw
es
pop
js
lret
inc
adcb
and
adc
sbb
xchg
jmp
aam
out
clc
sahf
jae
mov
mov
jae
xchg
andb
xor
fldt
lret
xor
or
cli
xor
jns
mov
dec
mov
push
mov
hlt
mov
push
pop
daa
push
add
dec
imul
mov
mov
add
mov
les
sbb
mov
push
mov
cli
mov
fildll
fwait
xor
jbe
in
in
setnp
inc
sbb
movsl
xchg
in
add
jns
sub
sarl
xchg
add
mov
and
in
in
addr16
add
popf
stc
ja
and
mov
mov
je
mov
stc
test
mov
outsb
push
hlt
negb
in
xchg
aad
icebp
lahf
mov
and
loope
cmp
shlb
fwait
or
xchg
pop
arpl
ljmp
rcll
jbe
pop
stc
out
movsb
icebp
rolb
pushf
xchg
fwait
push
dec
popf
sahf
or
scas
data16
dec
ljmp
cmpsl
sub
sbb
outsl
cmp
in
mov
pop
adc
jecxz
sbb
xor
sub
inc
push
inc
lret
jb
inc
rcrb
nop
inc
mov
fwait
test
daa
lods
dec
repnz
pushf
lret
mov
xchg
pop
mov
lock
cmp
iret
pop
imul
pusha
aas
rolb
cmpsb
cmp
ficoml
xor
shr
movsl
cltd
js
jl
cld
push
jo
in
subb
mov
and
mov
push
stos
pop
mov
sbb
mov
les
aad
inc
jle
xor
sbb
xor
jns
xor
les
push
js
push
inc
push
mov
pop
cmp
lods
loope
sbb
das
dec
xchg
lea
sub
mov
mov
push
jg
mov
pop
leave
add
sbb
sar
mov
adc
rcll
sub
xchg
int3
lret
shll
and
fldenv
xor
sbb
shl
stos
push
aas
lret
out
pushf
pop
js
and
sahf
or
in
sub
insb
cmp
mov
sbb
push
adc
mov
lds
xor
lods
push
dec
std
test
inc
or
into
lock
call
scas
inc
mov
and
cmp
jle
ret
lods
popa
push
mov
cld
int3
add
mov
jmp
mov
push
xchg
popfw
inc
push
addl
sub
js
daa
push
dec
xchg
or
sbb
fcom
stc
in
adc
cltd
call
mov
mov
jp
adc
xchg
loop
sbb
dec
jnp
dec
js
mov
leave
sbb
fdivr
leavew
loopne
ret
lcall
xor
cmp
mov
cmp
mov
sarb
mov
dec
cli
fs
fildll
rcl
adc
xchg
divb
push
mov
data16
test
adc
dec
jl
mov
ja
stos
in
jecxz
mov
sub
mov
add
subb
xor
inc
insl
mov
je
out
add
stos
xor
js
decl
inc
pop
cs
imul
aam
pop
aam
sub
cwtl
aam
mov
push
inc
push
xchg
ja
inc
cmp
jmp
sbb
push
cmp
cmp
jg
and
pop
mov
mov
cwtl
push
push
xchg
sbb
stc
sbb
xchg
xor
pop
push
xchg
push
mov
lods
sahf
in
pop
rolb
jbe,pn
push
int
xor
test
mov
rorb
pusha
add
push
inc
in
lahf
loop
mov
sbb
pop
push
push
imul
push
and
mov
faddl
jp
mov
jmp
les
addr16
pop
pop
jle
xorb
fisttps
cli
fdivrl
movl
mov
sbb
aad
and
ficoms
pop
mulb
jns
mov
into
adc
mov
jne
outsb
sbb
adc
ljmp
loope
adc
mov
pushf
sub
mov
inc
lea
dec
lods
ficomps
xor
xorl
push
xchg
mov
dec
test
inc
idivl
sub
aad
xor
adc
ret
lahf
movsb
cli
shrl
js
es
sbb
mov
lds
push
or
mov
add
dec
jbe
add
inc
movsb
test
jl
scas
or
sbb
jne
nop
mov
sub
and
mov
repnz
add
pop
in
mov
push
pusha
scas
stos
sarb
sti
sti
push
xchg
pop
aaa
aad
jb
mov
pushf
dec
push
xchg
sbb
sar
cmp
pop
mov
jge
cld
inc
and
fcomi
das
ret
mov
mov
cmp
scas
push
push
mov
cmc
es
xor
sbb
jle
xchg
fldenv
mov
push
out
roll
jae
sbb
jbe
mov
inc
mov
push
inc
insl
int
mov
mov
popa
dec
mov
sbb
sbb
sub
and
xor
or
mov
inc
dec
mov
mull
ret
mov
lret
adc
add
and
pop
out
bound
icebp
mov
jl
dec
daa
lock
rcl
jmp
xchg
lods
or
xchg
pop
fcoms
out
or
cmp
dec
sub
inc
rcll
sbb
outsb
cmp
mov
inc
iret
sti
sti
cmpsl
mov
and
dec
push
mov
fmuls
mov
cmp
ret
mov
in
outsb
xchg
es
xchg
mov
loop
adc
les
cltd
xor
add
pop
popa
fisttpl
sub
fsubl
dec
mov
jecxz
divb
jl
js
icebp
dec
pop
adc
out
test
inc
xchg
into
ret
cmp
cmp
movl
jns
out
mov
dec
into
jne
mov
mov
outsl
mov
shr
int
mov
mull
mov
aaa
lret
xchg
mov
sti
mov
mov
adc
je
and
pushf
cmp
test
mov
jg
pop
dec
cmpsl
movsl
fimuls
jp
test
and
cmc
je
and
fidivl
std
cmp
gs
mov
mov
xor
sub
cmpsl
xchg
test
fsubs
mov
fisubrs
lea
lcall
add
jmp
dec
fcompl
aam
xchg
pop
adc
in
lods
push
or
or
pop
enter
mov
jbe
pop
adc
leave
mov
leave
mov
or
jl
xor
fcmovne
or
dec
xchg
notl
pop
pop
xor
lea
pop
jg
and
and
bound
mov
cmp
cli
sub
mov
js
in
in
insb
dec
inc
jne
mov
inc
int3
add
jbe
adc
fildl
loop
imul
fisubrs
insl
ljmp
inc
dec
roll
movsl
cli
shll
add
mov
pop
cmp
pop
mul
push
jge
sbb
xchg
pop
cmp
ja
adc
rclb
and
adc
add
add
jns
out
xorb
cmp
mov
cltd
xchg
jmp
and
cs
mov
mov
dec
mov
adc
mov
movlps
push
xor
js
ds
xchg
pushaw
xchg
insb
mov
xor
movsl
enter
daa
xchg
fmull
pop
sahf
add
push
adc
lcall
std
xor
popa
sub
pusha
fsubl
jb
sub
push
sbb
movsb
dec
jle
mov
fadd
fs
repz
push
cli
add
jge
lahf
std
xor
sbbl
popf
out
xchg
shlb
mov
pop
cli
addr16
lods
pop
decb
mov
mov
sub
and
push
mov
adc
adc
push
mov
push
sub
push
fcoms
scas
jb
in
gs
mov
popf
daa
dec
pop
mov
ljmp
mov
jne
cltd
mov
xchg
xchg
push
sub
fs
call
push
mov
pop
xchg
pusha
lret
std
test
stos
push
push
cmp
repnz
xor
dec
push
test
mov
data16
call
repnz
gs
mov
mov
cmp
ja
cmc
jo
mov
mov
call
aas
jnp
mov
mov
cmp
dec
gs
xchg
test
mov
dec
es
pop
and
dec
and
mov
es
xchg
push
pop
mov
cmpsb
int
popf
std
or
dec
jbe
xchg
xchg
jae
inc
cmpsb
mov
mov
mov
int3
aaa
shrb
bound
daa
pop
cmp
cld
lret
sbb
jo
in
or
ficoml
flds
or
fcoml
mov
sub
cltd
negl
aad
and
inc
cmp
arpl
jg
mov
sbb
jge
outsl
outsl
mov
out
jecxz
jmp
ljmp
xor
jle
push
jae
add
adc
out
dec
push
inc
mov
jmp
pushf
and
sub
aam
js
mov
scas
ljmp
cli
xor
dec
pop
and
jl
jge
push
hlt
fsubl
aam
lods
mov
sahf
mov
mov
xchg
out
outsb
mov
imul
xchg
jo
nop
sbb
mov
add
xor
pop
xor
movsb
or
enter
mov
mov
popf
xor
outsl
jl
aaa
push
nop
stos
xlat
movsl
mov
subl
into
popf
pop
pushf
jne
popa
dec
inc
jle
push
adc
push
stc
inc
dec
ss
dec
jmp
insl
or
mov
jo
in
xlat
mov
mov
push
cmp
push
test
lods
aad
mov
pop
int3
inc
negb
lret
insb
je
test
or
jmp
movsl
movsb
std
int
insl
push
mov
mov
xor
inc
jmp
int3
and
std
repnz
rolb
mov
enter
pushf
push
repz
lahf
jns
mov
dec
jae
pop
scas
jl
icebp
out
mov
movsb
mov
das
addr16
fcoml
in
xor
imul
mov
loope
lahf
outsl
pop
cmp
ret
call
int3
xor
xor
les
lret
loop,pt
and
pop
push
mov
push
fwait
cmp
add
out
ds
mov
inc
pop
aad
mov
test
mov
mov
jbe
jnp
aas
mov
pop
sbbb
fidivs
xchg
and
test
loopne
addl
xchg
pop
cmp
mov
xor
nop
add
ja
stc
xchg
ja
rcrl
inc
adc
jmp
outsb
xlat
clc
in
leave
push
jmp
insb
js
mov
repnz
sub
push
fs
add
xchg
sub
or
jae
rcrl
xchg
pop
loop
stos
clc
ffree
addr16
and
pop
sub
push
pop
or
das
lret
jp
jge
cli
subb
pop
mov
movsb
arpl
jge
cmp
or
sbb
pop
push
jl
inc
mov
xchg
adc
aaa
insl
add
iret
repz
lock
cmp
adc
test
arpl
sub
clc
sub
call
or
pop
fcoms
xchg
out
cmp
xchg
mov
fildll
push
sub
mov
nop
xchg
push
jle
clc
cmpsl
aam
cli
into
xchg
jge
sbb
outsl
int3
mov
push
dec
aas
push
mov
pop
scas
mov
into
subl
lret
add
or
enter
push
push
pusha
dec
adc
fs
bound
int
xchg
jae
adc
lahf
and
ffree
push
repz
loope
add
pop
icebp
ss
scas
test
jmp
fs
in
sub
outsb
xchg
fadd
add
add
test
aaa
daa
or
inc
cmp
cli
xchg
adc
push
mov
stos
outsb
pop
prefetchnta
jbe
add
lret
hlt
inc
insw
lahf
je
ret
dec
out
ret
adc
jge
xor
shrl
fiaddl
mov
mov
sbb
adc
jg
pusha
js
aad
push
xchg
std
push
mov
inc
bound
into
mov
cmc
lahf
mov
pop
aas
arpl
jb
mov
dec
cmp
mov
flds
out
jnp
inc
pop
mov
sbb
adc
scas
jg
loopne
mov
mov
jno
pusha
mov
push
mov
into
mov
ret
jmp
jmp
test
sbbb
push
inc
adc
sub
ds
jle
cli
and
cmp
insl
push
xor
and
mov
add
mov
fnstenv
out
dec
stos
push
inc
mov
and
push
fildll
push
mov
dec
or
aad
push
push
insb
sub
jmp
hlt
das
int
test
scas
lods
xchg
push
ret
cltd
push
add
push
xchg
add
fiaddl
inc
iret
jl
cli
jmp
scas
adc
outsb
cmp
fildll
xchg
lea
ret
xor
xor
fdivrl
adc
inc
in
dec
jmp
out
or
gs
or
in
or
xchg
adc
int
sub
test
xchg
mov
int3
push
mov
into
xchg
xor
and
sbb
in
fucom
fwait
xlat
jmp
leave
mov
and
sahf
mov
notl
aaa
lret
add
arpl
call
dec
cmpsb
iret
sub
cmp
pop
loope
hlt
mov
add
cmp
out
in
mov
sbb
and
inc
adc
cmp
les
or
fld
cmp
rcl
clc
adc
mov
pop
outsb
adc
mov
push
jne
push
add
addr16
daa
adc
popf
sar
xchg
xor
push
lods
pop
jl
sbb
inc
in
popa
lods
mov
enter
insl
ds
mov
or
mov
mov
ss
scas
xor
pop
dec
mov
lret
pop
daa
sahf
xchg
addr16
pop
inc
push
or
sub
mov
mov
divl
lret
inc
fwait
movsl
std
xchg
cmp
es
inc
andb
ds
insb
dec
pushf
mov
and
dec
ljmp
mov
insl
sbb
mov
sub
and
imul
clc
fcmovne
jge
sahf
subl
xchg
inc
and
sbb
mov
jo
add
lea
nop
mov
mov
xchg
movsb
sub
dec
dec
stos
adc
adc
movsb
xchg
sti
sub
lea
lods
and
movsl
pop
pop
mov
jne
mov
out
adc
add
sbb
xor
sarl
je
sahf
or
sahf
or
jg
dec
mov
aas
decb
push
lock
imul
dec
aad
cmp
in
outsb
pop
testb
je
mov
jb
insl
lcall
gs
xlat
jbe
pop
fsubl
cmpsb
jle
cmp
add
and
xor
xlat
inc
dec
xchg
mov
fucomip
jb
cmp
or
int3
xchg
or
sarl
add
jae
test
xchg
adc
gs
xchg
rcl
outsl
stos
icebp
fwait
aaa
adc
shrb
sub
mov
cltd
mov
sahf
xor
sub
dec
scas
pusha
ljmp
xor
mov
addl
cmc
dec
fcoml
xor
shr
popf
push
xchg
mov
cmp
lret
or
push
scas
insb
inc
mov
xor
xchg
mov
fnstsw
out
cmpsb
push
cmpsl
fwait
xchg
xchg
test
push
xchg
outsl
cmp
lcall
rolb
xorb
repnz
sub
xor
pop
mov
int
sbb
popa
push
rcrl
lods
and
cmp
xchg
rol
sub
and
loopne
das
or
mov
sub
dec
lret
or
std
test
pop
sarl
pop
mov
movsl
push
xchg
dec
int3
invd
pop
dec
cmp
mov
or
scas
push
mov
roll
pop
or
stos
xchg
lods
stos
fs
add
repnz
out
jmp
aaa
jne
adc
lods
sub
push
inc
mov
xor
or
aas
adc
mov
push
mov
insl
repnz
dec
xchg
and
xchg
inc
xor
mov
lea
push
sahf
loope
mov
adc
push
fiaddl
push
popf
jb
pop
loop
or
cmpsl
mov
test
dec
push
or
fsubs
xlat
in
sub
and
addl
push
jo
adc
in
pop
adc
cmp
repz
dec
xchg
sbbb
imul
addr16
sub
xor
aas
xor
fisttpl
mov
xchg
xchg
jle,pt
xchg
je
dec
vrcpss
mov
fildl
mov
ss
ret
test
mov
jne
arpl
popf
mov
sbb
sub
cs
cwtl
test
add
push
scas
adcl
pop
movsb
lcall
scas
popf
push
inc
cmpsl
dec
rorb
sub
out
dec
daa
xchg
arpl
mov
mov
sub
push
push
shl
push
add
cmpsl
xchg
mov
pop
ret
inc
lcall
cmp
or
stos
push
mov
mov
sub
into
cmp
jae
pop
dec
mov
loop
aam
dec
scas
into
jg
mov
and
cmp
lods
and
dec
mov
or
sub
mov
xor
push
inc
mov
je
cmc
push
push
aas
mov
aas
orl
fsubp
dec
stos
nop
cmp
iret
aas
testl
xor
pop
and
inc
push
icebp
mov
xchg
mov
cmpsl
adc
xchg
shlb
stc
mov
xchg
lds
fcmove
aas
push
xor
rorb
xor
push
fsubs
cli
test
cmp
dec
pop
loope
jle
lods
adc
aad
fisubrs
mov
lods
das
mov
or
jne
es
mov
daa
test
jnp
js
mov
pop
in
mov
jae
push
xchg
cmp
dec
inc
jmp
mov
arpl
shll
lcall
ficoml
adc
loope
mov
jb
cmp
int
jae
adc
mov
inc
jle
cmpsb
rorl
stc
loop
sbb
fsubrl
cli
inc
fistpl
and
sub
pop
aam
test
and
ret
stos
jge
inc
push
xchg
insb
pushf
lcall
or
rcr
sbbl
xor
mov
mov
les
repnz
push
in
fcmovu
push
inc
sub
mov
aas
mov
out
mov
outsl
pop
mov
mulb
jbe
jecxz
dec
sbb
jecxz
sub
loope
mov
sbb
gs
mov
mov
add
inc
cmovo
dec
push
filds
popl
and
lret
inc
dec
pop
push
and
iret
add
enter
jle
pop
cmp
fisttps
movsb
push
sar
dec
push
test
dec
jecxz
mov
pop
mov
pop
imul
fistpll
dec
movsb
scas
and
lock
lds
ljmp
data16
mov
popf
sub
jg
jnp
push
cld
adc
jg
jmp
add
pop
push
outsl
rol
in
insl
int3
gs
inc
lock
cmpsl
sbbb
rolb
lret
add
mov
popa
iret
das
jo
in
ljmp
es
jmp
xor
mov
out
xor
jnp
das
adc
mov
add
push
xor
fisttpll
adc
inc
aam
aaa
outsl
ficoml
mov
loope
pusha
and
or
push
roll
ss
into
jge
dec
out
fs
incb
sbb
sub
loope
fcoms
rcll
jp
jg
and
jae
lret
dec
fnstenv
insb
adc
sahf
dec
adc
add
mov
adc
cmp
push
add
push
rolb
ja
sbb
mov
std
mov
movsl
push
jg
mov
sub
xorb
dec
js
xchg
daa
jg
sbbb
push
and
and
xchg
and
sbb
out
lds
out
push
xor
cltd
xchg
mov
jne
repnz
pop
cltd
jbe
bound
stos
xchg
scas
fstl
popf
ds
push
cmp
vpcmpgtw
pusha
pusha
mov
int
lods
out
dec
in
aad
test
scas
xchg
mov
adc
int3
add
inc
push
shrl
or
cmp
sub
cmp
popf
push
inc
xorb
pop
mov
adc
lea
pushf
xor
cli
cli
mov
jl
add
sbb
pop
stos
push
inc
loop
xchg
inc
mov
cmc
and
push
daa
cmpl
or
pusha
mov
call
leave
pop
sbb
adc
ret
enter
xchg
pop
xchg
jne
sbb
mov
xchg
bound
adc
xchg
jecxz
adc
and
or
jl
arpl
int
pop
mov
or
xchg
push
pusha
sub
sbb
inc
ss
test
pusha
jp
cmp
xor
cmp
je
add
ss
jb
ret
aad
movsb
arpl
add
inc
xor
daa
xchg
bswap
shll
mov
aad
push
jmp
inc
and
inc
xor
jmp
sbb
aaa
push
out
popf
clc
shlb
push
xchg
dec
jle
cwtl
mov
add
int
xchg
jns
jge
push
pmuludq
jbe
xchg
cmp
jno
dec
mov
lock
jno
xor
ja
push
jl
mov
lret
ficompl
in
imul
repz
mov
fisubl
xchg
pop
jnp
andl
nop
movsb
cmp
jle
dec
scas
mov
lds
or
or
dec
mov
jbe
es
jno
push
and
lds
std
jle
arpl
pop
lods
push
outsb
lods
imulb
push
pusha
nop
jle
jecxz
pop
test
jp
hlt
adc
dec
iret
sti
adcl
xor
test
repz
adc
add
dec
sub
gs
mov
leave
pusha
int
jg
fsubrs
pusha
adc
addr16
adcb
pushf
orb
mov
mov
enter
or
cltd
mov
jne
pop
loope
add
dec
sbb
aaa
dec
jp
mov
mov
inc
daa
test
lcall
inc
fldt
les
pop
dec
push
jo
stos
rcll
testl
cld
jo
jle
dec
inc
cli
or
adc
jmp
movsl
dec
enter
icebp
bound
or
movsl
mov
aaa
das
out
pop
sbb
cmp
je
dec
addr16
dec
inc
leave
sti
add
stc
sbb
je
decl
addl
cmp
xor
mov
lahf
and
xchg
cmp
sarb
imul
sbb
push
jg
out
fmulp
adc
dec
push
mov
jnp
mov
push
or
scas
push
outsb
hlt
adc
mov
xor
fs
mov
pop
out
in
jnp
filds
xor
inc
mov
shl
pop
out
jb
pop
mov
inc
sub
mov
cmp
push
sub
cwtl
cmp
push
fidivs
or
adc
pop
icebp
aam
fimuls
mov
fnstcw
out
roll
lret
mov
mov
sti
pop
testl
jecxz
sbb
xchg
sub
ja
aam
pop
fcompl
push
jle
in
icebp
je
rcrl
mov
push
in
sub
shlb
adcb
in
lods
decb
mov
cmc
mov
iret
lods
out
jecxz
or
cs
in
push
sub
or
lods
jnp
dec
shl
sahf
int3
roll
gs
jnp
ret
mov
inc
fcoms
hlt
out
inc
xlat
aam
lahf
enter
jnp
inc
loopne
inc
call
lods
test
sub
xchg
jnp
inc
add
sbb
aas
sti
cmp
push
movsb
jo
mov
pop
mov
cmp
aas
inc
jbe
add
iret
dec
add
and
mov
inc
aas
inc
push
ret
pop
outsb
in
repnz
daa
lods
loope
inc
js
outsb
mov
add
hlt
movsl
lahf
leave
mov
inc
dec
dec
and
adc
lods
loop,pt
mov
mov
add
lea
outsl
cmp
and
add
and
adc
pusha
fucom
stos
push
movsb
cmc
or
aaa
divl
mov
inc
push
sub
leave
pop
mov
jno
pusha
mov
xchg
sub
xor
inc
repz
jbe
xchg
inc
shr
push
mov
ror
scas
mov
ret
negb
push
sub
add
popa
negl
xchg
xlat
ljmp
or
loope
into
js
lcall
pushf
xchg
inc
stc
outsb
jae
pushf
pop
call
mov
mov
cmc
fs
cmp
sub
lahf
sub
or
dec
mov
jbe
and
js
mov
xchg
push
mov
in
and
fucomip
das
outsb
cmpl
outsl
inc
inc
cmpsl
bswap
idiv
pop
sahf
xchg
mov
mov
in
shl
cmp
decb
enter
test
cmp
in
lret
aam
inc
add
hlt
ror
and
adc
fsubp
mov
bound
fimuls
push
movsb
mov
addb
cld
xlat
in
pop
rcll
cmpsb
clc
pop
movsb
lret
imul
iret
stc
mov
inc
int3
es
mull
mov
pop
scas
sub
fadd
loope
je
xor
xor
sub
pusha
xchg
or
gs
call
jmp
adc
mov
mov
pop
sbb
and
cli
nop
sysret
mov
cmp
pop
inc
adc
pusha
mov
and
dec
pop
jmp
push
js
xor
lods
daa
push
jl
sbb
mov
jns
jle
and
cmp
jo
xchg
in
inc
pop
add
fldenv
arpl
enter
pop
mov
add
xchg
lods
in
cltd
imul
int3
push
dec
and
xchg
outsb
cltd
cld
inc
mov
add
lret
test
sub
inc
inc
in
outsl
jge
pusha
xchg
and
inc
cmc
cs
push
dec
adc
stc
outsb
lods
scas
rcr
cmp
mov
mov
sbb
inc
roll
loopne
and
repz
push
call
pop
jle
add
jne
xchg
sbb
pop
or
xor
push
loop
jae
aas
sti
movsl
pop
out
or
add
ljmp
pop
pushf
les
xor
repz
and
lcall
aaa
rorl
loope
xchg
dec
jl
pop
incl
das
inc
sbb
mov
adc
pop
cmp
repnz
add
xchg
mov
bound
dec
sbb
test
adc
sbb
mov
inc
jmp
int
dec
repz
push
sub
ret
rcl
lret
sbb
pop
adc
nop
pop
adc
or
cli
xor
imulb
dec
and
xor
leave
into
aam
push
cwtl
xchg
mov
inc
shl
mov
push
ss
in
xchg
ja
testb
into
mov
rcrb
es
mov
pop
mov
jbe
ss
repz
in
cmp
push
mov
cli
cli
xor
cmp
mov
add
jnp
jl
nop
iret
add
hlt
lret
in
cmpsl
pushf
inc
mov
and
scas
dec
in
push
add
mov
lcall
lret
xor
ss
movl
adc
subl
jae
mov
mov
jecxz
mov
lea
xchg
fs
imul
adc
push
out
outsl
or
cmp
or
xchg
in
mov
andl
stos
repz
mov
sbb
popa
aas
pusha
push
gs
mov
pop
lcall
add
mov
mov
test
cmp
mov
push
pushf
fldl
shl
fisttpll
xlat
test
mov
push
jg
sahf
cmp
jbe
mov
pop
pop
data16
les
movsb
imul
and
imul
imul
imul
mov
xor
cmpb
shrb
inc
xchg
jp
adc
fstps
push
dec
pop
pop
sbb
mov
xlat
data16
mov
scas
push
shrl
outsb
lcall
sti
jns
or
push
push
addr16
in
subl
imul
aad
adc
mov
les
call
mov
and
in
mov
mov
ds
pop
call
iret
div
icebp
jmp
in
inc
test
pop
les
movb
sub
xchg
adc
jmp
xor
add
movsb
mov
push
or
cmpsb
adc
cld
and
dec
pop
bound
loop
sub
out
xchg
xchg
xchg
paddq
call
iret
xlat
push
push
movsb
cmpsb
fisubrs
bound
sbb
imul
loop
adcb
pop
aam
jae
mov
es
leave
cmpsl
scas
movsl
testb
fninit
loop
mov
in
popf
lock
pusha
imul
jmp
pop
jecxz
jl
outsb
inc
inc
in
mov
test
push
int3
xchg
mov
dec
mov
and
inc
in
mov
xor
repnz
pop
scas
outsb
push
movsb
dec
sbb
inc
and
mov
wrmsr
punpckhwd
push
das
jl
add
pop
ds
ja
fwait
dec
jb
loopne
inc
xchg
in
insb
xchg
addr16
call
mov
jne
cmpl
mov
jp
inc
cmpsl
lahf
mov
enter
movsb
out
into
loop
sub
ret
shrb
pop
dec
insb
pop
pop
xchg
test
mulb
fsubs
add
lcall
or
in
sbb
mov
in
jl
daa
in
stos
or
mov
mov
mov
xor
sub
mov
push
mov
pop
shlb
imull
pop
loopne
outsl
or
hlt
bound
jp
jle
cmp
int3
scas
lcall
in
inc
sbb
pop
xor
adc
fsubs
dec
enter
lea
jg
mov
push
aaa
sbb
mov
loopne
in
inc
or
xchg
xchg
xor
clc
test
or
lods
cmp
in
int3
inc
jno
and
inc
mov
cmp
in
pop
insb
in
roll
cmpsl
xor
mov
add
xchg
ficoms
lahf
adc
inc
dec
add
xchg
fistpl
repnz
and
loopne
inc
and
dec
mov
mov
loope
or
mov
sbb
cmova
cmp
cli
in
and
xchg
imul
jl
dec
dec
mov
pop
mov
jecxz
adc
and
xchg
das
lods
call
test
lret
out
ret
insb
insl
outsl
sub
push
xchg
inc
fildll
clc
enter
loopne
test
movsb
push
cmc
or
adc
adc
shr
xor
add
mov
jae
lods
cmp
in
cwtl
inc
cmp
xchg
inc
roll
jnp
clc
pop
mov
dec
adc
ss
into
inc
dec
push
insl
ficompl
negb
cmpsb
cmp
add
push
in
push
stc
sub
mov
lods
sbb
cmpsl
mov
push
js
pop
or
jg
notb
mov
adc
xchg
cs
cltd
push
clc
leave
stc
lret
pop
and
icebp
xor
mov
mov
enter
dec
dec
sub
lock
je
mov
mov
jne
sahf
sub
or
pusha
and
push
add
lahf
sti
pusha
repnz
clc
xchg
add
fdivrs
sub
or
imul
popf
outsl
pop
bound
mov
jne
outsl
aas
andb
ja
inc
mov
loop
mov
inc
adc
add
pop
xor
fiaddl
pop
jno
scas
out
out
or
sub
xchg
push
ficoms
sbb
dec
mov
add
test
rcrb
cld
pusha
pop
mov
and
nop
dec
and
or
cmc
mov
out
mov
addr16
jae
insb
movsl
mov
mull
dec
loopne
adc
dec
or
push
out
pop
add
mov
sub
xor
lods
inc
sti
popa
cltd
mov
outsl
fmuls
insb
push
jns
fstp
int
xor
push
addl
push
loopne
out
push
dec
dec
pop
cmpsl
mov
xchg
testb
lahf
push
dec
pop
out
shll
scas
idiv
rcrl
mov
or
xchg
stc
insl
mov
ja
js
push
bswap
adc
ds
inc
ret
mov
ret
out
sbb
frstor
and
in
jo
mov
xchg
jno
mov
addr16
xchg
xorl
in
dec
aad
out
jo
sub
mov
jmp
pop
call
clc
sub
pop
push
or
pop
les
scas
fiadds
cmp
scas
ds
dec
xchg
lods
js
fwait
push
je
sbb
mov
pop
lcall
outsl
mov
cld
jl
out
fisubrs
mov
jnp
xchg
or
lret
adc
add
mov
fisubs
xor
push
je
mov
js
mov
loop
inc
lcall
dec
arpl
mov
out
jle
lret
jl
call
out
popa
mov
icebp
adc
hlt
call
iret
cmp
push
mov
repz
xor
fdivs
icebp
imul
adc
or
push
push
dec
out
out
mov
ja
aad
mov
test
loopne
clc
cwtl
mov
aad
xchg
es
jbe
push
clc
ret
pusha
or
dec
jecxz
xchg
lods
int3
jl
mov
pop
ss
xor
ffree
movsb
fwait
xor
jno
xor
ds
jp
adc
rolb
andb
cmp
movsb
lods
xchg
mov
sti
mov
dec
into
jl
ss
in
dec
jno
push
or
fbld
idivl
add
int
inc
rorb
fidivl
mov
and
pusha
push
cltd
leave
push
push
jae
mov
jae
pop
and
mov
in
fdiv
inc
xchg
adc
xchg
pop
cmp
and
in
mov
popl
out
outsb
rcrl
mov
dec
scas
cli
jns
add
sub
inc
fcompl
push
into
out
or
push
imul
xlat
cmp
mov
mov
icebp
xor
pop
pop
stos
xchg
idiv
sbb
lods
sbb
xchg
or
cmp
mov
cs
cmp
ficompl
push
sarb
outsb
sbb
repz
dec
adc
neg
pop
mov
and
gs
adc
add
push
cli
cmp
cmp
xchg
sub
movsl
adc
jne
xlat
push
jns
in
xor
cmpsb
push
jge
push
nop
insb
xchg
sahf
xor
sar
shl
and
ret
mov
dec
iret
xchg
xor
gs
mov
pusha
xchg
or
inc
fcomps
pop
or
push
push
arpl
sbb
xchg
push
jge
cmp
fildl
pop
mov
clc
mov
inc
insl
sub
fwait
cmc
movq
push
ret
insl
pop
mov
lahf
cmpsb
mov
stos
scas
mov
mov
out
fnstenv
or
adc
sub
pusha
cmpsl
movsb
sbb
or
lods
outsl
xor
push
nop
pop
mov
mov
loope
jle
mov
jns
lds
stos
aaa
into
cli
in
insb
es
lds
jmp
outsb
inc
jne
or
int3
and
ja
out
xor
test
data16
pop
mov
jb
loopne
xor
fimuls
fidivrs
js
pushf
int3
in
out
fs
xor
fmuls
and
add
pop
mov
mov
cmpsl
fnstcw
mov
in
call
inc
mov
mov
imul
es
sub
and
std
jne
cli
test
repnz
push
add
mov
cmp
push
xchg
or
jnp
xor
mov
pop
lret
sub
mov
mov
ret
ljmp
add
inc
mov
cmpsb
pusha
jp
ljmp
add
mov
push
outsl
xorl
xchg
dec
call
jl
scas
mov
dec
fsubrl
push
pop
das
bnd
mov
dec
arpl
sub
add
and
jae
or
imul
mov
xchg
mov
lret
insl
add
js
inc
in
mov
and
xchg
repz
xchg
sbb
push
mov
or
outsb
jno
jns
and
lods
push
roll
pop
pop
xchg
test
repz
xchg
or
mov
add
adc
insl
xor
cmpsl
push
mov
inc
stc
sti
int3
out
cltd
pop
add
xchg
or
std
adc
mov
xlat
adc
popf
xchg
fisttps
jle
cwtl
pusha
sbb
and
dec
movsl
xor
ja
push
dec
dec
mov
adc
sbb
sbb
clc
jo
inc
fimull
mov
xor
cs
ljmp
in
das
shll
and
sarl
sbb
cmp
cmpsb
push
mov
sbb
inc
ss
mov
push
xchg
xorb
sahf
lock
sub
ret
pushl
mov
sbb
icebp
out
scas
pop
aam
inc
xchg
hlt
push
das
mov
je
ror
mov
add
fmull
mov
clc
lret
xchg
fiadds
dec
clc
sbb
push
adc
sub
cmp
push
gs
pop
pop
outsb
loope
int
rcll
aam
sbb
sbb
lds
leave
rep
lret
sbbl
jmp
push
cmp
jns
mov
and
stc
jmp
in
dec
xchg
and
sbb
cmp
sub
call
add
rclb
mov
sbb
mov
adc
adc
lcall
pop
lods
fadds
pop
out
cwtl
jae
stc
in
test
mov
mov
in
mov
pop
cmpsl
out
les
mov
adc
pop
sti
jmp
mov
jb
popa
pushf
testl
push
sub
pop
pop
movsb
pop
call
data16
add
movzwl
push
daa
xor
sub
push
xchg
rcl
leave
cmpb
imul
or
into
out
je
ds
mov
pushf
adc
dec
dec
ret
daa
and
sbb
cltd
cli
dec
dec
push
addl
cli
xchg
pop
cli
xchg
xor
sub
jl
jno
dec
js
lods
mov
pop
out
mov
stos
dec
cmpsl
or
js
out
or
imul
shl
scas
jbe
mov
pop
adc
dec
inc
lret
inc
add
mov
outsb
roll
cli
mov
pop
pop
out
sub
nop
pop
insl
push
popa
adc
in
or
xor
jnp
fs
mov
add
daa
retw
scas
cs
lret
test
pop
xor
push
push
xor
lock
dec
sub
mov
pushf
or
std
mov
shlb
add
cld
and
push
and
sahf
adc
sub
pop
jbe
in
xchg
adc
jno
out
sbb
rol
pop
mov
mov
imul
in
stos
inc
dec
cmp
test
or
scas
icebp
test
outsl
sbb
loopne
int
cmc
mov
dec
sub
fucomi
insl
int3
fadd
inc
sub
jl
mov
outsl
cs
movsl
add
and
jmp
loopne
adc
out
mov
xlat
mov
sub
add
push
negb
mov
pop
lea
bound
imul
ret
xor
cmc
sbb
dec
sub
out
xor
sub
inc
add
nop
add
mov
add
outsb
fcom
aad
add
jb
pop
adc
mov
inc
push
data16
pop
roll
es
xor
jo
push
pop
mov
pop
jp
stos
imul
lahf
dec
xlat
rol
and
mov
push
mov
hlt
inc
jmp
ret
fisubrs
cwtl
cli
in
mov
inc
cmp
xchg
loop
and
xchg
xchg
jl
mov
test
pop
pop
nop
clc
xor
stos
cwtl
stos
xchg
push
pop
out
push
test
out
mov
xchg
jbe
push
pop
arpl
inc
lods
xor
inc
push
scas
or
pop
fadds
jo
ret
loop
sbb
pusha
mov
jle
mov
in
stos
gs
cmp
cmp
leave
sbb
pop
pop
sti
lock
push
add
fwait
popf
sahf
sahf
loop
rolb
fistpl
mov
fildl
int3
lods
mov
fiaddl
adc
ja
ja
push
dec
jae
jb
inc
mov
pop
or
mov
leave
clc
sahf
lds
mov
xchg
mov
lret
dec
int
nop
dec
icebp
rep
mov
jl
push
lret
fnstcw
scas
push
sub
lcall
inc
jns
test
jg
push
movsl
scas
out
cmp
inc
sbb
aad
in
stos
xchg
int
mov
jae
dec
add
stc
xor
popf
inc
call
ror
ret
inc
xor
scas
dec
pop
shlb
jae
in
mov
cmp
or
sarl
outsl
insb
fs
add
cwtl
ja
cmp
push
popf
jp
dec
pop
and
insl
push
sbb
mov
push
mov
in
add
adc
jle
or
fdivrl
test
mov
in
jle
fldpi
mov
xchg
out
mov
data16
push
push
dec
insb
out
pop
jecxz
xchg
adc
inc
pop
mov
cmp
js
pop
mov
out
stos
dec
jg
fidivs
inc
lds
rcrl
mov
jmp
jnp
inc
int3
fdivrp
fwait
in
test
call
iret
in
jbe
pop
or
dec
jl
arpl
or
jne
in
jne
popf
cmp
dec
dec
ret
or
mov
mov
movsl
and
les
jecxz
test
je
jbe
out
adc
dec
rol
cmp
hlt
or
inc
pop
pop
pop
mov
fsubrs
dec
and
dec
push
xor
sub
pop
dec
pop
cmp
push
mov
leave
cwtl
dec
cmpsb
sbb
mov
shl
jno
inc
jne
dec
adc
xchg
cmp
push
jnp
mov
inc
cmp
mov
cmpsb
subl
test
jge
pop
jne
divl
pop
pop
dec
mov
sub
jno
into
jg
sarb
add
sub
mov
mov
mov
mov
jns
out
pop
mov
fdiv
in
xchg
mov
scas
test
push
inc
mov
aas
mov
mov
cmp
and
pop
sub
fistpl
jb
sbb
pusha
test
xor
mov
jecxz
out
xchg
dec
jno
nop
daa
or
jo
jmp
cmp
xchg
rorl
mov
insl
jp
fisttps
or
mov
dec
icebp
fucomip
loop
fadd
cmc
mov
dec
testb
and
int
inc
mov
insb
imul
loop
mov
maskmovq
idivl
mov
icebp
das
adc
icebp
jmp
cmc
rcll
stos
lock
mov
adc
jbe
mov
pop
inc
out
sbb
stos
test
shl
or
jp
mov
outsl
mov
cvtps2pd
inc
mov
rorl
mov
cmp
xorb
push
fnstsw
sti
out
mov
std
int
movsb
gs
negl
inc
gs
out
enter
dec
cmpl
rcl
and
test
push
cmp
cmpsb
pop
in
mov
in
mov
loopne
mov
and
call
call
fucomi
dec
or
and
insb
sub
jecxz
mov
cs
ljmp
ret
xor
mov
mov
in
sar
dec
xchg
in
inc
pop
mov
out
repnz
fldenv
mov
scas
test
verr
std
add
dec
not
mov
jae
xchg
or
mov
and
leave
aaa
dec
or
ljmp
xchg
int
mov
mov
das
cmp
aas
loope
sbb
mov
mov
mov
push
cmp
xchg
mov
test
lahf
adc
stos
add
push
adc
shlb
stc
lahf
clc
mov
and
xchg
jmp
dec
adc
in
mov
and
pop
rcr
dec
fsubl
das
jle
push
or
jbe
push
mov
aam
insl
orl
sarl
js
sub
icebp
in
mov
jae
mov
jge
push
or
enter
sub
mov
lods
insb
xor
sbb
out
xchg
jle
ja
lods
mov
adc
ljmp
cmp
mov
in
xchg
jae
adc
mov
js
sbb
push
shll
mov
call
rcrb
stos
dec
leave
pop
mov
int3
cmp
fldcw
dec
fcomps
dec
pop
lret
movsb
or
test
adc
test
shll
or
nop
mov
push
lahf
decl
movsl
enter
mov
inc
js
stc
dec
aad
xchg
lea
mov
fimull
cmp
test
xor
or
and
inc
fwait
pop
sbb
ret
xor
cmc
xlat
cli
jmp
sub
adc
lret
pop
pop
pop
add
lock
repz
movsl
test
xor
test
push
sub
lcall
mov
push
ljmp
sarb
adc
popf
shrb
mov
jp
lods
mov
gs
sub
pop
lahf
rcr
pop
cmp
cmp
outsl
notb
cmp
adc
dec
push
dec
enter
adc
adc
fsubs
dec
push
mov
or
jno
mov
or
mov
pop
jbe
outsb
inc
aam
cld
inc
addr16
xorl
adc
icebp
jne
sbb
dec
scas
sub
adcb
enter
mov
xchg
js
push
sti
outsl
movb
xchg
aam
lock
sub
jns
add
cltd
icebp
out
cmpsb
sub
push
in
xchg
in
pusha
decl
int
ljmp
lret
jo
mov
dec
xchg
das
inc
push
mov
mov
mov
mulb
out
mov
inc
pop
js
dec
movsb
xchg
sub
test
adc
push
adc
int
xchg
aam
sub
push
inc
daa
pusha
or
xorl
scas
pop
test
jno
sub
repz
mov
adc
sbb
fistl
pop
movsl
mov
adc
inc
pop
jge
decl
cmp
stos
clc
hlt
cmp
jle
pop
ss
inc
pop
mov
jge
fdivl
dec
inc
push
sub
cld
mov
dec
inc
mov
bound
push
popl
xchg
push
inc
mov
mov
jb
sub
aaa
mov
fildl
in
pop
out
lcall
adc
sbb
pusha
pop
nop
mov
push
jo
push
dec
in
arpl
add
xchg
dec
mov
xorl
push
in
adc
cmp
sahf
sbb
test
mov
mov
pop
lods
shl
shlb
xor
jae
mov
inc
loope
outsl
out
ljmp
aam
loopne
push
and
mov
push
popa
insl
and
dec
pop
mov
sub
pop
lods
push
mov
mov
repnz
jge
inc
hlt
es
lcall
mov
add
out
nop
lcall
pop
add
or
and
fisttpll
push
mov
je
push
rcrb
xchg
xor
icebp
jmp
adc
inc
xor
jno
fisubrl
movsb
or
loope
jl
cltd
jg
pop
jnp
adc
or
test
lret
xorb
xchg
ja
cld
ja
insb
xor
negl
cmc
dec
dec
pop
adc
mov
jae
pop
clc
rcrl
sub
and
push
push
lahf
inc
fisubrs
sbb
mov
imul
ljmp
dec
jb
nop
jecxz
pusha
mov
xorl
sub
mov
adc
xchg
rcrl
and
dec
sbbb
inc
and
lds
scas
cmp
daa
loope
dec
shll
scas
rcr
xchg
inc
into
fnstenv
shlb
popa
xor
dec
movsl
push
cmp
fdivs
lds
lahf
popf
dec
lret
in
adc
xchg
enter
mov
and
fstl
mov
and
xor
pusha
ss
jne
sub
fisttpll
cmp
test
push
pop
or
dec
pop
mov
cmp
or
cli
les
sti
dec
mov
loop
fistpl
sbb
neg
cmpsl
inc
mov
repz
dec
xchg
mov
subb
rcrb
out
scas
fmuls
shll
add
insb
aad
aad
arpl
call
js
dec
outsl
clc
cmp
inc
dec
je
pusha
sbb
push
push
pop
cwtl
pop
lds
sub
jle
lahf
in
icebp
jno
stos
int3
stc
add
cmpsb
pushf
popf
mov
lahf
std
lret
jmp
push
push
mov
push
or
pusha
sahf
jno
jecxz
lea
push
mov
movsb
jle
mov
cmp
test
les
add
aad
stos
add
push
in
pop
fldl
inc
sbb
mov
jp
mov
sub
cmpsb
pop
lods
in
or
test
inc
mov
inc
nop
mov
push
push
xor
mov
jp
adc
leave
add
test
push
pop
xchg
scas
push
xchg
clc
cs
add
and
push
mov
push
inc
xor
js
sub
loope
icebp
cld
pop
iret
or
movsb
addr16
fdivs
jae
testl
jl
ss
dec
iret
dec
les
pop
data16
add
ret
enter
sub
mov
aaa
lret
shlb
mov
jle
xor
sub
scas
mov
cmp
flds
loop
shll
roll
int3
cs
popf
rcll
pushf
xchg
dec
call
jne
jmp
push
push
repnz
dec
mov
dec
rol
mov
push
ja
cli
repz
sub
or
stc
sbb
out
jbe
out
push
jb
pop
xchg
imul
cmpsb
sub
cmp
xchg
stos
movsb
push
xorb
inc
pop
mov
or
fadd
mov
mov
or
lock
xor
cld
iret
arpl
jnp
imul
inc
cli
cmp
stos
call
lods
dec
xchg
out
jno
ja
iret
pop
fcompl
clc
jmp
call
mov
psubb
push
lds
dec
or
inc
shll
jle
jne
lods
add
mov
inc
dec
imul
pop
inc
subb
mov
out
ljmp
mov
jge
test
pop
mov
and
pop
cmpl
xchg
xor
movsb
sub
pop
dec
cmpsb
test
cs
scas
fisubrl
add
mov
xchg
mov
fdivs
cs
test
arpl
cld
ret
and
sbb
pop
xchg
cwtl
inc
xor
rcll
ljmp
scas
or
jge
loop
ss
add
iret
adc
ret
pop
lea
loop
dec
inc
mov
lret
xchg
mov
in
lret
xor
jge
ja
scas
or
cmp
dec
ret
jae
sahf
ss
leave
enter
in
bound
jl
sbb
jmp
and
test
mov
xor
mov
enter
ss
push
adc
push
into
popf
dec
push
aaa
xchg
pop
pop
shll
in
adc
ret
or
insb
add
pop
data16
mov
out
loop
cltd
bnd
mov
mov
xor
lods
inc
xchg
mov
cltd
xor
xor
sarb
aas
add
ret
ljmp
dec
mov
sub
jge
rolb
dec
sub
out
sub
js
mov
inc
stos
into
and
add
xor
xor
shl
clc
push
xchg
repnz
test
push
cmp
out
dec
add
shrb
rolb
repz
arpl
lcall
sbb
test
cmp
adc
pop
xor
sbb
sub
out
scas
fsub
mov
jns
out
jb
xor
sbb
mov
push
js
into
test
and
mov
sbb
mov
sahf
push
jnp
jns
cmc
or
xchg
cmpsl
pop
lea
orb
jl
gs
movsl
enter
push
pop
mov
jmp
mov
sub
out
dec
leave
add
xchg
enter
jg
sarb
leave
out
iret
cmc
popa
addb
decb
jbe
sub
xchg
dec
xchg
jg
rclb
les
es
inc
sbb
rolb
dec
push
xchg
outsb
lahf
mov
jle
sahf
jp
inc
aam
jmp
add
xlat
leave
jge
mov
je
xor
repz
add
js
int3
jno
jg
int
imul
jle
ffreep
push
cmp
xchg
sub
mov
outsl
cmpps
lahf
dec
or
mov
adc
fwait
sub
push
fbld
in
and
das
outsb
cmp
dec
mov
js
aas
xchg
ds
sbb
jl
call
dec
inc
decl
mov
clc
mov
push
push
subl
dec
push
movsl
test
imul
xor
mov
es
mov
int3
stc
stos
mov
adc
pushf
outsb
leave
add
jne
addr16
mov
sub
sbbl
out
and
pop
sar
popa
fsubrp
leave
or
lret
mov
gs
into
push
in
mov
xor
inc
lahf
inc
das
fs
mov
cltd
out
inc
insb
enter
orb
ljmp
std
or
out
sbb
out
sub
mov
lds
popa
lcall
sbb
icebp
icebp
sub
in
popl
scas
mov
push
push
mov
jl
gs
lods
cld
mov
inc
rcrb
shrb
jb
movb
sub
aam
lret
dec
insl
rclb
jae
mov
pop
pop
sbb
lods
jl
test
call
loopne
xchg
inc
andl
jb
or
xchg
push
leave
mov
jmp
test
or
xor
jg
add
daa
out
pop
inc
push
jmp
mov
sub
je
mov
add
inc
jno
loope
aaa
iret
mov
ror
jae
jmp
leave
fdivrl
ds
out
mov
xor
push
mov
inc
jae
cmc
outsl
rol
pop
mov
mov
xor
push
repz
movsb
cltd
xlat
pop
and
leave
ss
mov
push
xor
inc
in
and
mov
dec
cltd
jmp
cmpl
pop
cwtl
inc
int3
or
lret
fst
arpl
std
sbb
loope
mov
adc
ds
leave
mov
mov
dec
aaa
dec
pop
push
sbb
dec
mov
out
sub
xor
pop
dec
adc
push
shrd
xchg
cmp
jl
jne
pop
inc
lcall
jl
test
cmp
mov
mov
cmpb
and
lods
mov
fisttps
sbb
scas
jl
into
mov
dec
jecxz
je
sub
test
mov
stos
jns
mov
xor
bound
pop
dec
icebp
push
inc
jnp
pop
lds
sahf
add
and
pop
xor
mov
iret
push
cmpsl
mov
jge
dec
xor
add
jg
popf
in
je
add
imul
dec
daa
int
fidivs
orl
mov
aaa
mulb
jmp
ja
add
push
push
jae
dec
and
js
notl
pop
add
gs
pop
lods
sbb
sub
stos
and
rcrl
adc
test
push
pusha
and
or
test
push
add
cmp
daa
add
dec
push
or
dec
int
loopne
add
sbb
or
add
sbb
testl
jo
addl
inc
fiadds
out
scas
daa
mov
jbe
xor
lcall
mov
enter
inc
mov
mov
repz
cmpsb
push
sbb
ja
ficompl
test
sub
mov
ret
dec
xchg
addr16
add
decl
les
out
inc
fistpl
jmp
scas
fadds
inc
cltd
stos
xchg
push
ror
push
lock
std
inc
movsb
hlt
lahf
sub
sbb
add
adcl
outsl
xchg
cmp
insl
pop
shl
mov
shlb
icebp
mov
sbb
push
pop
sub
cmp
or
jo
movsb
stos
cmp
push
and
lods
mov
or
out
mov
xchg
aad
pop
imul
mov
mov
lahf
stc
mov
push
or
mov
sub
dec
or
mov
sbb
pop
idiv
addr16
idiv
aaa
dec
sub
jge
loopne
mov
dec
leave
test
cmpsl
test
popa
in
ds
pop
add
test
lds
loop
jno
clc
arpl
fcmovu
arpl
jmp
fistpl
inc
addb
sbb
xor
test
repz
gs
loopne
or
mov
imul
fimull
cmp
pop
test
adc
aad
loopne
icebp
pop
mov
pop
sub
lcall
and
adcb
fdivp
cld
mov
lock
bound
cli
mov
pop
sbb
insb
nop
adc
adc
mov
mulb
inc
icebp
jo
seta
nop
testb
ja
mov
popa
inc
mov
cmp
in
lret
push
dec
mov
mul
insl
jge
fisttps
out
out
cs
lods
in
aam
cmp
and
test
or
xchg
nop
lahf
inc
jne
dec
push
or
ficomps
call
loopne
ss
inc
in
sbb
push
add
cmp
dec
in
dec
into
mov
aaa
sub
or
sbbl
std
cmp
insl
push
ret
ret
xchg
addr16
movsl
xchg
or
dec
test
and
mov
in
xchg
mov
mov
fs
inc
inc
xchg
icebp
xor
xchg
xor
aaa
xlat
scas
jp
inc
fsub
cld
leave
and
jecxz
xchg
sbb
int3
leave
scas
add
or
pop
xchg
leave
mov
dec
test
test
enter
imul
sbb
push
aad
dec
xchg
in
dec
xor
out
jns
mov
jo
xor
xorl
mov
sbb
fs
fistps
test
sti
arpl
ljmp
fcomps
inc
mov
dec
and
int
jg
lahf
mov
andl
xchg
adcl
jne
sbbb
jnp
pop
xchg
out
dec
dec
div
xchg
xor
cs
xorl
jecxz
mov
fidivl
es
jae
mov
mov
adc
cmp
in
mov
sub
sub
ds
test
sahf
ds
fcomps
sub
xchg
dec
add
rcl
pop
imul
test
out
ljmp
dec
cmc
fcoml
xchg
icebp
leave
test
pop
jle
movsb
arpl
std
in
lds
mov
mov
enter
out
aas
orl
inc
and
xchg
cli
push
ja
jp
mov
lock
push
pop
xchg
mov
dec
fnstsw
aam
aas
shr
dec
leave
pop
sub
stos
xchg
aad
movq
dec
sbb
dec
mov
lahf
jecxz
repnz
jl
out
test
ljmp
ret
mov
je
or
xor
sbb
insb
sub
stc
shll
xor
lock
out
xchg
stos
push
cmpb
cmp
loop
fimuls
insb
add
dec
inc
cmp
pop
insb
dec
fnstenv
sbb
jl
mov
xor
sbb
enter
fiaddl
cmc
addr16
mov
aad
adc
xchg
inc
adc
add
ret
cli
movsl
jo
test
in
cmpsl
lds
out
sbb
dec
sbb
pop
push
js
insl
mov
lea
fmull
or
into
or
xor
mov
mov
mov
aas
sarb
jg
xchg
mov
cs
sub
pop
jno
cmpsl
or
inc
xlat
xchg
xor
adc
int
testl
cmpsl
jb
ffreep
fwait
sub
lods
shrb
in
arpl
cmp
imul
js
xchg
and
push
mov
cmp
cmpsl
test
dec
shlb
test
test
push
mov
std
stc
jmp
sbb
ret
cmc
jno
pop
jecxz
xchg
xchg
call
push
insl
lea
adc
jmp
mov
mov
or
je
stos
cmc
rcll
popa
and
pusha
sub
out
std
mov
pop
decl
inc
mov
xchg
mov
jae
insl
xor
in
fnstenv
scas
mov
xor
xor
cmp
and
inc
data16
lds
cmp
adc
xchg
mov
mov
pop
push
sbb
icebp
mov
sti
lret
push
cmp
mov
dec
pop
sub
xor
mov
dec
jae
sbb
sbb
inc
cmpsl
adc
cmp
mov
aam
sahf
ret
lret
int
jnp,pt
cltd
pop
outsb
out
pop
inc
test
dec
dec
iret
cmp
sub
pop
xchg
mov
pop
pop
xchg
cmpsl
xchg
mov
out
ss
mov
js
ljmp
and
jno
dec
xchg
push
adc
pop
mov
je
mov
dec
push
fimull
stc
nop
fcomi
xchg
mov
lods
out
mov
aaa
mov
sub
lods
fistps
mov
push
stos
xchg
daa
and
xchg
add
lods
fists
sub
pop
xor
inc
dec
dec
fnsave
jbe
cwtl
sahf
arpl
test
in
stos
leave
repnz
fsts
out
sahf
and
xchg
pushf
and
push
cmp
mov
pop
push
lahf
faddl
add
ret
mov
out
icebp
xor
arpl
dec
adc
mov
mov
mov
xchg
mov
jecxz
ds
mulb
jne
lahf
addl
dec
dec
jecxz
test
inc
dec
and
sub
in
xor
aas
inc
push
jecxz
adc
in
ja
sti
ret
jno
pop
add
xchg
inc
jp
add
jle
cmc
pop
mov
repnz
scas
fmuls
fstps
divl
repz
add
lea
inc
ss
sub
rol
jo
cmc
in
cmp
dec
xchg
jo
popa
and
insl
sbb
les
sub
lcall
mov
mov
addr16
lret
mov
push
sar
mulb
stos
xor
lcall
lock
mov
icebp
into
int
fisttpl
pop
push
mov
out
push
or
sahf
aas
xchg
mov
inc
mov
movsl
add
and
icebp
aad
testl
adc
je
push
cmp
cmp
dec
cmp
ds
into
fcoms
cli
mov
push
jmp
cmp
mov
inc
push
xchg
add
in
arpl
insb
fcmovnbe
or
sub
test
pop
nop
imul
cmp
sub
jnp
add
mov
sub
dec
mov
stos
push
cmp
push
and
movsb
pop
fdivrl
ljmp
lock
sbb
jmp
push
mov
xchg
jne
in
repz
xor
fsubrs
push
pop
mov
or
les
mov
es
aad
setb
push
cld
xchg
mov
mov
ljmp
pop
out
or
mov
int
dec
add
jns
ja
push
seta
data16
lea
or
test
push
jg
jmp
out
jae
cmp
add
loope
lcall
inc
and
adc
imul
and
ror
push
insb
xor
movsl
lods
xchg
mov
outsl
lcall
mov
cmpb
lock
dec
addr16
in
cmp
or
jbe
mov
popf
lock
aad
mov
fs
push
mov
mov
add
cmp
repz
sti
stos
movsl
jge
cmp
inc
hlt
cmp
ret
adc
stc
mov
lahf
adc
mov
int
leave
ss
mov
sub
xlat
inc
mov
adc
aaa
mov
xchg
filds
dec
mov
lahf
pop
imul
imul
push
loop
cmp
das
pop
and
pop
cld
push
or
fmull
das
mov
gs
cltd
fucomip
lock
and
je
push
ret
cli
pop
adc
popa
stos
xchg
pop
dec
test
cmp
test
sbb
pop
pop
addr16
insb
dec
pop
notb
xchg
or
sbb
fimull
inc
mov
pushf
dec
jno
jmp
lods
lds
jl
xchg
mov
push
test
cmp
sbb
out
notb
xchg
jp,pn
xchg
subb
ja
in
jl
test
mov
or
into
push
jl
lahf
outsb
lock
fistps
jbe
add
xor
mov
in
add
add
fldenv
and
xorl
outsl
filds
push
push
push
mov
in
and
push
jb
cli
les
inc
dec
fcmovnb
sbb
stc
push
ja
lods
push
pop
int
mov
sbb
loop
push
or
pop
cmp
popa
nop
out
pop
xorb
notl
xor
ja
or
daa
cli
js
mov
xchg
mov
cli
add
jnp
fwait
cwtl
mov
out
mov
divl
push
sbb
and
adc
out
ds
jbe
cmp
ds
jle
stos
fistl
dec
mov
fcoms
dec
cmp
xor
xor
rcrl
lods
arpl
int3
cld
cs
mov
sub
cmpsl
dec
inc
mov
sub
cmp
pop
outsb
je
pop
sub
stc
negl
mov
test
bnd
lods
mov
repz
jmp
inc
pop
mov
xlat
mov
loop
pop
mov
iret
inc
int
push
addr16
fwait
sete
pushf
mov
jmp
stos
jl
sbb
stos
jecxz
test
pop
add
out
jne
cmp
rcrb
loop
ljmp
xor
pop
lret
push
in
fucomp
daa
aam
lods
mov
or
pop
hlt
and
dec
sub
cmpsl
imul
push
cmpb
cmpsb
stc
lock
stos
xchg
stos
sub
push
xor
mov
cmp
sbb
jno
xor
jb
pop
divl
dec
mov
dec
sahf
push
add
ja
pop
dec
pop
int
fdivrs
iret
stos
ficoml
mov
pop
fsubs
rcll
xor
lods
inc
pushf
pop
loopne
xor
mov
adc
popf
bound
sysenter
in
push
mov
rol
mulb
repnz
ret
lds
mov
rcrl
sti
ja
js
mov
nop
int
xor
shlb
mov
xor
adc
test
rorl
lret
push
xchg
xor
inc
and
test
insb
in
mov
jnp
cs
dec
sahf
sti
test
loopne
bound
push
adc
and
and
ljmp
sbb
adc
fcompl
add
push
rol
or
int3
std
mov
mov
int
pop
inc
sub
cld
cli
xor
mov
push
push
das
stos
jmp
ja
fwait
jecxz
jns
out
gs
addl
xchg
push
fwait
sbb
mov
movsb
dec
std
push
add
inc
or
xchg
inc
cmpsb
cmp
mov
stos
clc
inc
cmc
sarl
cmpl
clc
ret
sbb
inc
mov
cmpsb
loop
cmp
stc
sbb
mov
mov
add
lods
or
xchg
into
fidivrs
jno
xchg
outsb
cs
cmc
mov
cltd
xchg
lea
ja
scas
jae
pusha
inc
inc
sub
jnp
mov
aam
sahf
fbld
xchg
xchg
cmp
lds
jmp
mov
mov
testb
sbb
aaa
jns
bound
and
mov
lock
xor
faddl
neg
cltd
push
insb
shrb
roll
mov
or
sub
arpl
std
inc
push
out
pusha
sub
shlb
add
jle
inc
and
lret
pop
push
sub
pop
call
jo
sub
ss
pushf
cmpsl
dec
xor
mov
adc
cmc
mov
shl
pusha
push
mov
loope
inc
push
fincstp
fcomps
adc
xchg
out
or
adc
rcl
sub
dec
xchg
es
imul
pop
pop
test
je
dec
cmp
stos
inc
xchg
adc
or
lret
movsl
xchg
mov
jecxz
mov
adc
test
int3
nop
out
fcomps
add
cs
mov
adc
mov
xchg
inc
sub
lock
cltd
adc
jo
jl
insb
push
inc
cltd
stos
fidivrl
outsb
sar
fsubrl
sub
mov
scas
pop
ret
sbb
lahf
aas
pop
xchg
pop
mov
js
into
sbbl
fdivl
add
aaa
js
out
fstpl
xor
mov
das
push
mov
gs
pop
arpl
icebp
sub
dec
mov
dec
out
repnz
scas
mov
push
fistl
jge
sbb
push
cmp
pusha
pop
popa
idivb
lods
scas
and
dec
push
xchg
xchg
xor
leave
jnp
and
les
loop
pop
call
lret
adc
pop
test
sbb
adc
jmp
or
lods
ljmp
pop
jbe
pop
inc
sahf
xchg
mov
mov
test
adc
repnz
jmp
aam
fwait
mov
cmpsb
sub
cmp
stc
pop
out
into
add
int
data16
ds
cmp
xlat
mov
das
dec
cmc
popf
cmp
bnd
clc
lods
push
subl
mov
sub
ss
ja
test
add
jge
jmp
fucomi
xchg
rcrl
dec
lret
mov
mov
ret
into
ror
loop
insl
movl
loop
xchg
dec
cld
in
out
sub
mov
ret
mov
insl
jp
mov
cli
adc
inc
popa
and
sarb
jnp
sti
or
mov
dec
aas
xor
insb
xor
cmp
inc
je
or
out
pop
push
aad
sbb
and
fstpl
test
or
roll
pop
and
jmp
xchg
or
pop
sbb
jecxz
sbb
dec
push
mov
sahf
mov
aad
test
push
xor
add
mov
pop
cmpsl
mov
scas
inc
dec
lret
mov
aaa
pushf
ret
in
aas
jge
fwait
insb
inc
imul
xor
mov
loop
push
call
scas
sbb
adc
int
subb
sub
mov
movsl
push
inc
adc
jns
lret
mov
mov
dec
adc
rcr
lret
mov
lret
aaa
dec
data16
addr16
inc
xchg
jg
push
dec
ss
sub
movsb
dec
adc
xlat
pop
xchg
in
pop
sahf
mov
shl
mov
and
imul
ss
test
mov
pop
mov
xchg
jbe
push
push
xchg
cltd
aad
clc
xchg
cld
lea
rcr
adc
push
mov
fcom
and
inc
aam
lret
push
popl
adc
jl
out
and
push
mov
rcll
test
pop
jp
dec
cltd
arpl
les
stc
cmp
hlt
rol
sbb
imul
sbb
mov
push
dec
push
mov
aam
bound
pop
arpl
xorl
sahf
mov
jae
jae
pop
push
push
arpl
nop
test
push
fdivl
int
jge
repz
pop
testb
std
fldpi
fnstsw
push
lds
push
xor
xor
shrl
adcb
repz
add
sbbl
divl
das
out
es
stos
jp
addl
sbb
shll
shrl
jo
in
loope
mov
cmpsb
and
dec
fmuls
inc
and
pop
popf
mov
pop
jmp
sbb
jo
or
mov
pushf
scas
data16
stos
add
or
fiadds
test
js
fmul
movsb
or
test
int3
outsl
push
orl
and
mov
push
imulb
cltd
mov
mov
out
testl
cmp
xchg
xchg
mov
jge
out
dec
int3
sub
push
insb
in
lahf
ret
jne
jg
xchg
stos
shrb
sbb
mov
subl
inc
std
cmp
lret
call
imul
cmp
sarl
inc
mov
pop
movsb
jae
rcll
pop
mov
and
js
imul
out
into
lret
xchg
mov
jne
mov
dec
sbb
adc
or
add
mov
fcmovnu
push
ljmp
out
jno
cli
jnp
mov
inc
mov
and
daa
inc
or
test
cli
in
addr16
xor
jg
js
es
cmc
in
xchg
cmp
dec
add
jg
pop
pop
enter
xor
sub
std
es
mov
ljmp
cmpl
mov
nop
or
mov
jmp
pushf
fsubl
push
mov
or
lcall
enter
cli
inc
mov
sbb
pop
cld
loop
dec
mov
push
popf
or
mov
dec
mov
push
sub
cmp
mov
mov
in
shll
cs
sbb
pop
out
mov
add
cmp
dec
adc
hlt
push
xor
and
inc
push
xchg
jg
mov
lods
mov
xchg
scas
pop
and
mov
movsl
or
inc
inc
jge
add
or
stos
or
dec
sub
jmp
aaa
and
and
adc
mov
and
push
sub
fdivl
test
enter
inc
lahf
or
dec
js
lahf
push
jg
pop
fnstcw
lcall
ss
xor
hlt
ljmp
int
cmp
jl
gs
xchg
loopne
xchg
lods
mov
test
int3
add
jl
dec
mov
mov
popa
push
add
mov
sahf
jns
lret
adc
into
cmpsl
mov
jp
fcompl
jge
sti
sub
sahf
insb
adc
sub
pop
std
pop
movsb
fists
jnp
insl
data16
cmp
scas
jge
mov
add
sti
movsl
xchg
sub
in
negl
sub
lock
nop
cmp
push
push
push
push
xchg
jae
mov
ljmp
aas
or
arpl
sbb
out
idivb
mov
xor
scas
popa
je
movsb
or
cmc
sub
xor
add
scas
lcall
pushl
xchg
stos
pop
repnz
push
dec
xor
mov
push
call
dec
daa
std
stc
lock
fsubs
xchg
out
aaa
mov
push
scas
imul
inc
outsb
sub
addr16
lea
adc
dec
xchg
xchg
icebp
jl
mov
stos
xchg
out
mov
addr16
jns
jecxz
push
mov
sbb
sub
xchg
jo
dec
xor
daa
jl
dec
dec
lods
fsubrs
fs
pop
outsb
cmp
idiv
push
xor
cmp
cmc
fsubl
jge
adc
imul
pop
dec
fimull
sbb
cmp
popa
inc
xor
adc
aam
orb
xchg
xor
cmp
pmaddwd
ja
lds
insl
pop
mov
call
mov
push
lock
xor
std
xor
sbb
fimuls
mov
into
aam
aas
aas
or
popa
xchg
inc
fwait
push
aad
and
cmpsb
lock
jae
aaa
je
fldl
fdivrl
pop
jle
xchg
jmp
repnz
adc
or
push
pop
fistl
push
enter
mov
sub
pop
stc
stc
xor
shrl
mov
adc
and
jnp
xchg
mov
fs
es
mov
into
int3
cmp
movsl
and
aaa
xchg
scas
sar
pop
or
rclb
mov
and
push
lock
stc
mov
jo
push
or
sahf
sub
daa
insl
pop
rorl
rcll
or
scas
jne
fists
mov
scas
rol
movsb
in
dec
in
cmpb
fwait
jbe
dec
leave
adc
dec
adc
in
cltd
mov
hlt
loop
loope
mov
bound
mov
mov
aad
mov
add
test
arpl
xor
xchg
sub
call
jecxz
dec
xchg
mov
cmpsb
inc
pop
and
inc
popa
movsb
mov
push
dec
sbb
enter
cmp
jae
daa
movsb
jmp
and
ret
out
cmp
out
jno
mov
push
movsl
mov
jle
jno
into
insl
cmpsb
clc
jnp
mov
gs
dec
test
lods
pop
mov
out
sub
and
sbb
ds
xor
sahf
testb
inc
mov
fwait
scas
or
mov
test
dec
xchg
nop
dec
pop
dec
scas
fisubs
ror
and
into
push
cmp
enter
add
mov
cli
divb
xor
fcmovnu
ds
pop
pop
int3
jmp
sbb
add
lahf
pusha
fsubs
ja
jne
arpl
clc
pop
jnp
pop
outsb
test
fwait
je
jbe
sarl
aas
cmpsl
in
call
cmp
mov
rorb
pop
imul
repnz
sbb
jl
push
push
pop
stos
jmp
cs
xor
int3
mov
mov
adc
inc
sub
fs
mov
jbe
xchg
out
cmc
ret
add
lea
inc
dec
aaa
les
push
push
cld
sub
jg
loope
mov
pop
mov
cmp
roll
sub
sbb
add
pop
add
outsl
lods
push
pusha
mov
ret
cmp
lock
pusha
sbb
inc
outsl
fcomp
dec
shlb
ja
out
pop
sbb
sbb
cmpsb
jmp
sarl
cmp
mov
cltd
mov
mov
lahf
fwait
mov
lock
inc
cld
int3
xor
mov
and
insb
xchg
bound
xor
stos
imul
sub
jnp
or
or
es
adc
testl
stc
ret
xor
pop
andb
in
out
ja
pop
mov
out
inc
js
push
scas
mov
sbb
into
push
lcall
sub
push
jecxz
dec
idivl
cmp
xor
cmc
adc
mov
and
rclb
adc
mov
shrb
cli
into
das
lret
rcll
int3
inc
adc
negb
cmp
and
call
ljmp
mov
je
and
push
inc
fidivs
call
sbb
add
inc
cmp
sbb
xor
movsb
xor
aas
ficomps
jno
xor
and
loop
xchg
xchg
loope
enter
gs
mov
xor
mov
pop
jne
cmp
dec
mov
xchg
jecxz
cld
xchg
das
in
idivl
mov
adc
test
nop
push
jl
adc
and
enter
gs
adc
imul
stos
mov
loope
adc
lret
sbb
pop
xchg
cwtl
mov
iret
sbb
and
cltd
pop
pop
jp
and
xor
jne
scas
in
mov
add
ficoml
ret
xlat
aas
mov
and
or
and
pop
test
cmp
into
cmp
pop
push
jp
arpl
stc
fistpl
push
or
xlat
push
adc
pushf
mov
cmp
jne
sti
adc
xchg
xor
sub
outsl
repz
ss
push
cmp
pop
dec
cmp
repz
mov
gs
push
leave
je
int3
xor
pop
jae
fdivl
mov
dec
or
cld
xor
mov
aaa
pop
mov
addb
aam
jno
into
loop
jne
mov
int3
pusha
sub
push
call
push
lods
or
mov
outsl
dec
inc
mov
push
cld
xchg
cmp
dec
sbb
jge
pop
test
mov
ja
cmp
push
push
in
or
repnz
inc
addl
out
bound
cmp
out
dec
adc
jp
test
sbb
xor
scas
adc
negl
inc
and
sub
xor
mov
pusha
imul
mov
ret
std
movsl
mov
xchg
lret
negb
dec
or
sbb
rorl
rcr
loope
xchg
addr16
gs
pop
insl
push
outsb
or
xchg
push
std
pop
mov
std
dec
cmp
loop
mov
dec
cmp
push
push
xor
lret
mov
or
jb
repnz
fldl
mov
sarl
add
rclb
dec
jno
jb
and
stos
pop
sbb
jbe
sbb
test
mov
mov
mov
push
fwait
pop
pop
popa
lea
cmp
and
push
or
jnp
mov
js
mov
cmpl
decl
lods
enter
mov
hlt
js
mov
jnp
iret
adc
orl
sbb
fwait
jmp
pop
xor
cmp
jne
pop
dec
pop
inc
jno
adc
aaa
xchg
pop
jp
and
sub
jnp
cmc
outsb
outsl
mov
xor
cmp
sahf
out
dec
dec
int
xor
inc
test
arpl
ret
pop
cmc
xchg
out
test
cmp
mov
popf
hlt
sub
push
jmp
xchg
sbb
subl
addr16
clc
into
pushl
and
cld
push
jnp
gs
popf
vpunpckldq
incb
mov
js
sbbl
ljmp
mov
adc
into
xchg
push
es
ficoms
mov
sbb
inc
lret
cmc
cmp
dec
aas
lret
hlt
xor
push
loop
mov
and
push
lds
aas
mov
es
lret
xchg
mov
pop
adc
ja
js
fcoml
sbb
adc
aam
or
jg
mov
mov
mov
xor
cmp
mov
out
jle
mov
shll
sahf
pop
lcall
test
jbe
push
ja
test
movsb
jns
cmc
addr16
dec
mov
inc
ds
sti
pop
add
and
adc
push
daa
call
inc
vpaddw
ror
lret
lea
sbb
fwait
jmp
lcall
sbb
mov
or
pop
adcb
cmp
mov
movsb
cmc
je
add
jnp
jle
or
shrb
and
mov
sub
sahf
mov
mov
out
les
jmp
adc
mov
sub
ljmp
fcomi
repz
scas
mov
loopne
push
in
inc
imul
insl
pop
adc
lea
cmc
xchg
in
add
dec
fisubrl
jmp
inc
int
cmpsb
xchg
icebp
sbb
aad
push
xchg
pusha
out
adc
xor
inc
mov
mov
sub
jns
cmp
aaa
mov
mov
test
dec
inc
sbb
jge
fists
mov
inc
add
lods
adc
dec
stc
in
cmp
push
mov
inc
and
dec
adc
repnz
pop
mov
pusha
popf
sbb
pop
enter
scas
mov
sbb
loop
push
push
pop
lret
pop
xchg
or
xchg
add
insb
dec
adc
shll
test
lcall
dec
cli
scas
sbb
in
fcomps
test
jnp
or
xchg
dec
mov
out
mov
fdivrs
fildll
xchg
push
cmp
stc
xchg
adc
mov
repnz
movsl
lock
clc
xor
mov
out
jns
fmulp
es
fbstp
fcmovb
jns
mov
pop
fisttps
jge
jnp
xor
insb
xlat
pop
jne
cmp
dec
stc
sti
pop
test
gs
pop
arpl
xor
and
mov
adc
jl
insl
aad
push
sub
push
cli
nop
imul
push
sahf
in
add
in
pop
push
out
icebp
ficoms
lret
sbb
subl
addr16
aas
sub
xchg
adc
mov
adc
cld
mov
inc
insb
imul
aam
dec
pop
test
sub
cmp
xchg
mov
es
dec
pop
hlt
cld
mov
mov
gs
stc
adc
cmpl
dec
fsubp
cmp
pop
cmp
push
int3
sbbl
and
or
lcall
and
sahf
addl
adc
xor
sbb
dec
out
mov
outsb
iret
fadd
jg
sbb
push
fucom
dec
or
mov
es
inc
add
sarb
decb
pop
inc
mov
call
mov
push
mov
stos
mov
pop
pop
or
sti
mov
inc
shlb
dec
aas
mov
adc
cs
sub
sub
dec
aad
lret
icebp
fdivrs
ret
cwtl
pushf
sub
inc
into
jecxz
mov
sbb
loope
les
in
es
movsl
es
inc
fmul
pop
ret
cs
inc
mov
addl
jle
stos
movsb
push
out
fbstp
jp
pop
or
fsubs
decl
data16
clc
enter
js
movsb
test
mov
push
mov
pop
xchg
dec
and
movsl
insl
mov
ret
pop
mov
mov
ffree
movsl
js
sbb
mov
fiaddl
nop
mov
iret
cmp
std
sahf
pop
pop
dec
inc
and
dec
push
aaa
mov
stc
cmp
inc
into
push
add
negb
push
xlat
pop
jbe
mov
xchg
inc
pop
shl
pop
cltd
mov
test
mov
dec
adc
add
push
arpl
sbb
loop
out
xor
jl
sbb
jecxz
outsb
pop
xor
sbb
xchg
pop
sbb
shlb
ret
sub
xor
mov
in
popa
pop
mov
mov
mov
push
mov
ja
divl
or
mov
cld
in
loop
lcall
dec
scas
scas
roll
xorb
mov
mov
insb
adc
jne
cmp
cltd
sti
inc
pop
xor
pop
loope
insl
jmp
push
addr16
xchg
aam
ffree
add
pushf
call
int
movsb
push
ljmp
mov
push
shl
cltd
inc
adc
adc
push
lods
jne
mov
cmp
not
aam
jne
outsl
int3
add
and
cld
fsubl
rcrb
inc
sub
sbb
in
stc
xor
dec
arpl
push
pop
dec
push
push
lds
dec
adc
adc
ds
fwait
dec
stos
push
shr
rorb
das
inc
hlt
decl
in
lods
jo
adc
sbb
lock
dec
or
lcall
imul
cmp
out
fnstcw
cmp
out
into
faddl
xchg
jle
sbb
inc
rorb
fisttpl
mov
jbe
mov
stos
sub
pop
mov
cmp
shlb
lret
fdivrs
clc
push
arpl
aam
xor
ret
cs
es
ljmp
cmp
ss
andb
xlat
imul
and
lock
dec
mov
pop
sub
lods
inc
jl
shl
and
imul
imul
addl
jb
inc
sub
int3
ja
ja
mov
icebp
push
inc
mov
sbb
test
xchg
mov
movsb
jb
arpl
jae
repz
sahf
fistpll
out
add
je
shl
push
or
fdivs
jae
fidivs
mov
inc
test
das
in
fincstp
push
xchg
ljmp
cmc
or
push
fisubl
adc
xor
jecxz
int3
sub
inc
fldl2e
xor
imul
sbb
sub
dec
jnp
or
jle
jb
mov
mov
adc
ret
cmc
std
dec
and
mov
pop
aas
add
out
push
pop
cmc
push
test
adc
dec
out
or
dec
in
test
mov
ret
imul
lret
jg
sub
loope
or
daa
shl
dec
dec
je
test
mov
lret
adc
stc
xchg
clc
int3
push
xchg
xor
std
lahf
int3
aas
pop
jg
mov
and
divb
pop
jp
xor
cltd
repnz
out
sub
fs
repnz
mov
repz
ljmp
sub
sbb
data16
xchg
xor
sub
adcl
popl
faddl
jp
push
dec
shl
mov
repnz
jbe
jb
cs
in
in
sarl
out
push
aaa
sbb
popa
in
scas
jb
jle
mov
sub
and
mov
adc
shll
add
fwait
sub
leave
xchg
sbb
lods
pop
cli
jl
sar
cld
xchg
repz
popf
out
pop
or
repnz
ljmp
sbb
xchg
jo
mov
popf
negl
or
add
inc
push
jl
not
out
imul
call
pop
xor
mov
std
rcr
xchg
or
ss
or
sbb
or
fmull
jle
outsl
insl
test
mov
pop
jge
cmp
call
leave
mov
mov
dec
les
bound
xchg
sub
ja
mov
lahf
inc
scas
push
mov
icebp
mov
jo
arpl
pop
ja
fistpl
and
xchg
xor
imul
iret
fisubs
xor
xor
pusha
imul
ss
sub
stos
aad
sti
dec
out
cli
data16
into
mov
andb
mov
inc
mov
mov
sub
fsubs
mov
jmp
mov
jns
jne
imul
xchg
xchg
adc
aas
or
inc
adc
insl
pop
jno
cmp
clc
iret
imul
mov
xchg
lods
or
loope
jle
les
dec
std
loope
rorl
sbb
or
arpl
push
xor
and
xchg
mov
addr16
sarb
mull
js
adc
fsub
mov
adc
fstl
xor
fwait
cmpsl
cwtl
stc
jbe
inc
iret
incl
das
mov
pop
or
data16
cmp
jmp
aam
in
divb
pop
xchg
pop
sti
sub
adcb
imul
jae
mov
cmp
jno
xor
pop
cmp
push
sbb
in
mov
stc
mov
insb
cmp
pop
out
test
jae
dec
xor
sti
filds
lock
iret
pop
push
data16
les
jnp
mov
xchg
icebp
adc
leave
and
push
or
aas
mov
inc
gs
popa
inc
add
jnp
mov
cmp
jb
and
mov
lret
xlat
in
imul
fcmovnbe
inc
add
dec
sub
movsl
fadds
and
mov
jg
sbb
sarb
or
hlt
adc
movsb
insl
daa
outsl
sub
inc
and
mov
mov
add
cwtl
ret
dec
lea
popf
mov
mov
es
mov
pop
mov
cs
mov
push
xchg
gs
lcall
cmp
xchg
push
pop
movsb
cmc
sub
mov
cwtl
mov
aas
clc
or
imul
mov
or
test
mov
andl
cs
fdivs
insl
cld
out
inc
sub
and
mov
lret
cwtl
mov
mov
cmp
mov
sub
scas
inc
out
cli
adc
push
pop
cmp
imul
test
add
jmp
or
inc
cli
shl
lea
mov
dec
xor
shl
cmpsl
pop
adc
sbb
cmp
test
int3
test
test
fs
sarb
xchg
xor
orl
mov
loope
push
jnp
scas
sbb
xchg
fisttps
pop
daa
adc
inc
dec
xchg
push
rorb
mov
push
test
sub
push
pop
cmc
push
popa
push
lods
pop
popf
aam
and
xchg
gs
pop
leave
fisubrs
fisttpll
sub
outsl
out
mov
adc
mov
pushf
xchg
fdivs
push
cmp
ret
lds
aam
stos
fsubrl
mov
mov
call
inc
inc
sbb
shll
data16
loop
xor
mov
das
xchg
hlt
cmp
ret
cmp
pusha
notl
lcall
sbb
push
out
popa
cwtl
cmp
ret
mov
sarl
hlt
mov
cmpsb
jle
and
lahf
in
or
inc
out
push
push
loop
orl
or
mov
sbb
arpl
and
jmp
jns
and
xchg
lds
imul
mov
and
jb
popf
repz
notb
mov
stc
cmp
mov
lock
push
and
or
pop
repz
xchg
into
xor
les
pop
fwait
call
test
xchg
shlb
dec
cmpsb
jmp
rcll
insl
inc
and
pop
gs
dec
pop
cmp
es
push
cmp
dec
xchg
test
push
mov
mov
pop
jne
jo
repz
dec
mov
pop
iret
and
rolb
mov
ret
xchg
add
repnz
imul
push
mov
sub
xchg
cmpsl
push
shll
mov
cltd
icebp
jmp
cmp
pop
jo
xorl
jp
inc
ficomps
test
or
ror
bound
push
jge
outsl
lcall
add
sub
sub
mov
movsb
ffree
sub
mull
mov
lahf
or
add
xchg
pop
dec
and
insb
ret
ficoml
cmc
inc
dec
mov
leave
in
or
mov
push
mov
xlat
sub
push
pop
test
and
or
std
aas
push
dec
and
xchg
xchg
mov
jecxz
pop
loop
pop
mov
sub
in
adc
dec
adc
push
addr16
pushf
test
mov
mov
inc
cmc
push
adc
mov
mov
xor
inc
xchg
lret
push
sub
dec
mov
and
sub
sub
xchg
mov
hlt
ret
outsb
cltd
repnz
aaa
pop
mov
xchg
mov
lret
inc
ficompl
shll
ljmp
and
pop
mov
fbstp
push
lcall
and
xor
bnd
jge
cmp
mov
add
add
mov
mov
inc
mov
push
xchg
or
lcall
push
loopne
nop
adc
lea
daa
xchg
xchg
sub
aas
cmc
mov
repnz
sub
push
inc
cmpsl
shll
inc
repz
es
scas
adcl
sbb
mov
nop
addr16
lea
mov
lret
pop
mov
loope
icebp
cmp
pop
outsl
cmpsl
jg
dec
cmp
std
adc
xlat
arpl
sub
in
or
cmpsw
lock
push
dec
sub
stc
data16
test
sahf
add
fcomps
jg
push
fstps
pop
pusha
aam
xorl
lea
lret
push
dec
int
mov
in
stos
mov
xor
popa
pop
sbb
mov
ss
mov
dec
aam
jge
or
fistpll
test
jae
pop
jo
insb
mov
sub
xchg
test
dec
fst
sti
jl
add
sbb
cmp
and
fs
out
xor
push
pushf
add
je
mov
push
cmpl
mov
mov
xchg
jg
mov
ds
das
test
test
push
mov
popa
into
or
pop
rorl
fnsave
adc
stos
sarl
je
mov
lcall
adc
xor
xlat
iret
mov
mov
out
pop
sub
ret
mov
or
push
mov
ljmp
sbb
stos
leave
iret
xchg
pop
lret
imul
imul
loop
mov
sbb
mov
ljmp
or
mov
jl
sbb
and
scas
mov
pop
jge
sub
push
out
jmp
clc
adcl
inc
lcall
and
ja
xchg
mov
imul
sar
lret
jg
push
push
test
push
jns
cmp
inc
push
jb
inc
xlat
mov
inc
xchg
mov
pop
rorb
mov
fadd
cmpsl
fldln2
dec
fdiv
leave
adc
pushf
add
sbb
sbb
roll
pop
mov
cltd
jp
sub
inc
shrb
es
mov
lods
pop
test
or
pop
cwtl
dec
mov
mov
movsb
inc
add
cltd
mov
fisubrs
loopne
cltd
mov
fimuls
repz
mov
iret
cmp
fwait
cmp
loopne
mov
out
add
mull
fwait
divl
ret
int3
aas
add
dec
leave
and
lock
pop
add
inc
dec
dec
in
sbb
jl
push
pop
int3
mov
dec
jecxz
xchg
lcall
lods
sub
ja
push
xchg
aam
les
xor
inc
pop
fwait
mov
stc
inc
decb
cmp
es
scas
bound
push
pusha
pop
pop
dec
rcrl
enter
dec
jne
ljmp
sbb
xor
sub
push
ds
sti
jle
cmp
mov
mov
rclb
xchg
into
push
iret
bts
fldt
inc
mov
dec
incl
imul
mov
mov
insb
insl
hlt
shlb
fisttpl
inc
mov
mov
leave
and
daa
pop
repnz
xor
icebp
je
push
mov
and
push
mov
mov
xor
xchg
lock
sbb
fnstsw
shll
lods
lahf
test
mov
and
iret
pop
inc
mov
jge
sbb
inc
pop
mov
push
inc
and
lcall
into
clc
in
mov
jnp
jmp
jg
push
das
adc
and
jp
lret
sub
and
shlb
jb
and
xor
out
sub
subl
inc
xor
xchg
mov
sarl
mov
sbb
sub
or
sahf
or
add
loop
insb
dec
jge
or
push
pop
dec
out
jg
lods
dec
mov
into
xor
push
sti
fs
jo
and
cs
das
push
sbb
stos
mov
fwait
pinsrw
div
add
cmc
xor
pop
gs
lret
lcall
aas
imul
shl
hlt
mov
sub
mov
dec
jp
or
xor
repnz
mov
sbb
mov
jecxz
mov
xchg
test
mov
push
jne
ja
adc
into
jg
movsb
movsl
cmpsb
add
inc
xor
pop
movsb
or
loop
test
mov
sbb
into
pop
or
and
adc
std
push
mov
mov
xchg
pop
dec
mov
mov
xor
mov
sar
ret
fdivrs
enter
out
fwait
jnp
add
out
and
out
jnp
sub
mov
aad
mov
adc
cmp
dec
lods
bound
cli
push
repnz
sbb
lock
dec
pop
mov
add
insb
int3
jg
inc
push
xchg
jne
jne
into
jnp
cmp
pop
js
call
jge
or
sub
and
mov
inc
out
push
lods
test
mov
mov
adc
bound
push
sbb
inc
jl
sub
mov
or
sti
sti
aam
push
inc
xchg
fsubrl
inc
mov
js
add
inc
cli
sub
cmpsb
fidivs
mov
xchg
aad
xchg
popa
mov
pop
scas
xlat
sahf
add
push
out
das
shl
mov
and
and
decb
sub
mov
fiaddl
fwait
sbb
fucomp
pusha
sbb
cmp
fisttpl
lcall
jno
into
sti
int
inc
test
push
sub
cmp
test
je
and
or
test
clc
mov
cmpb
xchg
pushf
insl
repnz
add
pop
shlb
push
xchg
and
cltd
inc
popa
jb
xchg
cmp
or
testl
movsl
lret
pop
inc
xchg
push
jge
dec
mov
lret
jae
xor
jns
ds
cmp
push
fwait
dec
and
mov
sbbl
arpl
lret
sbb
jmp
jbe
or
xchg
mov
out
pop
dec
sub
xchg
or
fistps
xchg
fsubrp
rclb
cmp
xlat
cmpsb
sbb
or
pop
loopne
cmp
data16
xor
and
xchg
push
in
cli
add
mov
push
scas
sbbl
adc
popf
and
test
cld
xchg
add
inc
popf
outsl
add
repnz
sub
insb
sti
lret
dec
stc
insl
shrb
mov
lods
or
jge
loop
push
and
dec
std
and
inc
adcb
adc
sub
and
cmp
lea
mov
clc
popa
pop
mov
inc
es
sub
iret
and
fs
stc
xchg
popa
pop
stos
xchg
mov
add
popa
lods
ja
xchg
adc
orl
inc
jae
lods
js
aam
sbb
jg
pop
jecxz
mov
cmp
sbbb
inc
sbb
lcall
mov
insb
test
mov
fisubs
lret
aaa
or
push
xlat
and
out
mov
jae
push
jns
sub
mov
cmp
test
das
jo
cmp
aad
mov
lock
pusha
mov
sub
pop
mov
dec
jne
popa
xchg
insl
mov
movsl
loope
fstl
into
test
fwait
roll
and
push
mov
dec
adc
xchg
jbe
les
ds
js
hlt
sub
test
mov
fwait
jg
push
pop
lahf
mov
mov
into
js
xchg
and
aam
pushf
stos
fsub
stos
pop
out
cmpl
lods
cmpsl
or
roll
mov
and
lret
push
jp
cmp
scas
insl
adc
clc
clc
pcmpgtd
jg
push
or
sbb
ja
mov
cli
sbb
ljmp
dec
data16
aaa
dec
std
int3
shll
mov
es
sub
adc
fwait
mov
adc
and
mov
fildll
jbe
into
xchg
and
sub
ljmp
out
mov
mov
popf
sub
sahf
lret
aad
clc
mov
dec
add
ficomps
push
test
xchg
cmpsl
cmpsb
mov
sti
dec
inc
sub
shr
xchg
rorl
adc
cmp
pop
in
aas
fiaddl
lea
jae
and
mov
xchg
cmp
xor
stos
int3
mov
sbb
xchg
lods
mov
les
into
xchg
out
sbb
stos
mov
xlat
icebp
out
jp
push
inc
push
xchg
into
sub
cld
jno
inc
cmp
and
rcr
pop
xchg
jge
int
xlat
adc
fstps
pop
lods
movsb
mov
wrmsr
gs
jbe
adc
loop
xlat
rcll
sbb
clc
outsl
pop
stos
mov
mov
push
scas
mov
mov
aam
in
cli
sti
inc
lahf
insl
test
pop
out
cmp
lahf
mov
adc
pop
sahf
cmp
xor
inc
jbe
aaa
ret
jl
mov
ja
or
mov
es
out
sub
mov
mov
inc
popa
xorl
xchg
cmp
ljmp
push
sbb
cmp
leave
add
into
adc
out
mov
cmc
mov
cmpl
dec
pop
cmc
scas
jge
pushf
jne
test
dec
je
enter
inc
lea
ja
jle
packuswb
mov
dec
cmpsl
xchg
adc
sub
mov
shll
push
je
repz
sti
inc
xchg
jle
mov
nop
daa
movsb
inc
call
xor
popf
xchg
push
jg
adcb
adc
iret
cmpsl
aas
pop
vminpd
xchg
sub
xor
mov
mov
loopne
repz
add
adc
loope
or
rcll
les
enter
push
out
loop
xchg
orb
xor
loopne
xlat
andl
test
inc
testb
sti
ret
frstor
xlat
lea
pushf
sbb
pushf
cmpsl
outsb
enter
xchg
sbb
pop
outsb
add
stc
cs
in
pop
sub
les
and
xchg
popa
cmc
xor
stos
jp
pop
arpl
adc
ja
mov
mov
fildll
push
aad
inc
cli
mov
out
fwait
pminub
out
jge
les
adc
and
jne
adc
adcb
pop
aas
adc
je
leave
xchg
ficoms
lahf
jmp
push
lcall
notb
sbb
jmp
add
xchg
mov
ud1
or
sub
push
jmp
cmpsl
into
jo
dec
adc
ret
adc
xchg
hlt
lret
in
pcmpgtb
test
push
fbld
outsl
push
jo
rclb
int
push
xchg
xlat
inc
push
ja
out
insb
mov
test
push
insb
cmp
mov
sub
adc
cmp
inc
lret
mov
mov
inc
pop
xchg
lret
and
fadds
mov
dec
cmp
imul
push
sub
and
add
dec
or
mov
fistps
xchg
rcrb
pop
mov
bound
cmp
lods
ljmp
mov
scas
lret
xchg
ret
lds
repnz
cld
jecxz
mov
stos
mov
sbb
enter
in
pop
sbb
cmp
in
in
or
gs
sub
stc
mov
sub
sub
fstpt
fstpt
test
inc
test
sahf
fbld
lock
jne
cltd
push
cmp
and
and
mov
jae,pn
sbb
inc
stos
mov
fcmovnu
mov
adc
pop
sbbb
or
sti
pop
inc
jb
out
ds
mov
cmp
cmp
subb
aad
aad
adc
xor
mov
mov
imul
mov
adc
dec
sbb
and
clc
adc
enter
add
mov
popf
cmp
shlb
test
and
fbstp
movsb
sbb
fucomp
fisttps
inc
lret
mov
xsavec
sahf
repz
add
jo
jge
ficoml
adc
xchg
xchg
std
orb
cs
lret
adcl
or
sbb
shl
xor
pop
jle
dec
ja
push
incb
adc
sub
out
mov
jno
inc
vxorps
sbb
sub
insb
imul
sub
xor
lock
jge
sti
insb
sbb
jle
test
push
pop
in
es
xchg
lahf
outsb
and
shll
iret
sub
inc
lock
add
orl
repz
jb
int3
cmpsb
pop
adc
add
jb
or
xor
xor
pop
or
imul
sub
jge
xchg
je
ljmp
inc
cli
push
xchg
adc
push
pop
icebp
xchg
jmp
and
inc
and
push
mov
or
jl
ds
pop
lods
mov
pushf
inc
mov
and
adc
add
cmp
repnz
int3
mov
cmc
sbb
fdivrl
mov
test
loop
pop
sub
aam
js
les
or
int
out
push
outsb
add
fcmovnb
popf
inc
imul
and
xchg
sbbb
mov
stos
pop
ficompl
xchg
push
call
add
scas
add
xchg
test
cmp
mov
push
sbb
in
stc
mov
sbb
jbe
push
cmp
pop
andb
pushf
dec
in
xor
sbb
negb
inc
dec
fldt
popa
sbb
dec
and
and
popa
push
cltd
adc
fwait
dec
out
lods
lock
jnp
movl
jl
fs
jl
pop
mov
mov
jb
cmpsb
jp
sbb
and
mov
clc
push
sbb
adc
jmp
add
and
addl
cmp
lret
cmp
push
pop
mov
mov
lock
mov
dec
out
pop
ss
push
je
popl
int3
clc
es
xor
inc
xlat
loopne
xor
push
andl
pop
or
cmp
sbb
into
rorb
stos
inc
sahf
dec
add
jb
and
pop
ret
xchg
leave
xorl
or
dec
sahf
shl
fs
std
insb
fs
fstps
ret
pop
adc
push
lahf
movsl
adc
les
lock
mov
adc
inc
push
addr16
mov
addl
cmp
sbbb
sarl
cmpsl
add
std
mov
and
sbb
ja
add
push
cmc
or
fbld
sbb
jp
div
and
adc
std
mov
mov
aas
mov
test
mov
xor
pop
ja
outsb
mov
outsl
filds
fcoms
int
out
add
mov
insb
add
sbb
mov
adc
loope
jne
jecxz
movsb
push
push
cld
out
call
pusha
int
xchg
cli
jnp
sahf
mov
add
mov
dec
int3
sub
rorl
mov
pop
push
js
add
jb
mov
dec
addb
int
mov
pop
test
or
orb
and
jg
aam
push
ljmp
and
testb
scas
in
std
mov
pushf
loopne
and
and
out
iret
or
sbb
imul
pop
xchg
out
and
dec
inc
push
ret
mov
insb
hlt
and
sarb
sub
call
and
lds
mov
xchg
gs
pop
add
adc
cwtl
and
fcoms
test
test
test
leave
dec
aas
adc
jp
shll
call
pop
pop
mov
mov
inc
xlat
xor
incb
lds
sbb
aaa
dec
mov
lock
fdivl
test
shll
cmp
sbbb
dec
or
jae
shlb
lds
ds
cmp
lret
jle
fcomps
sbb
mov
lods
inc
push
iret
test
test
das
dec
mov
sub
lcall
push
mov
cmp
mov
xor
push
icebp
dec
addr16
inc
add
es
pusha
jne
jl
clc
add
dec
aam
sub
pop
scas
jae
fdivrl
dec
xchg
sbb
loop
ficoml
cld
shll
jnp
push
out
push
cmpsl
push
mov
or
scas
sub
popf
push
icebp
repnz
dec
or
push
xlat
gs
lret
scas
mov
jae
dec
xor
and
push
je
lret
xor
mov
in
negb
movsb
subb
lods
dec
dec
ret
insb
mov
stos
dec
sbb
into
mov
adc
cltd
aam
inc
mov
mov
jge
ds
inc
pop
cmpsb
scas
mov
fnstcw
arpl
dec
inc
pop
adc
fcoms
and
stc
enter
movsl
mov
adc
lods
je
mov
loope
adc
cmpsl
mov
out
mov
insl
sub
ja
aaa
aam
cmc
daa
sub
fsubs
mov
push
ss
mov
aad
addl
mov
fpatan
bound
rcrb
test
imul
adc
mov
mov
test
mov
add
pop
sbb
das
pop
mov
lret
mov
pop
push
cmc
popf
cmp
xchg
sbb
loop
xor
es
dec
sti
jle
repz
aaa
or
iret
push
or
push
jp
andl
jne
int3
xor
call
shl
sub
mov
xchg
and
pop
pop
add
add
test
mov
xchg
test
fmul
outsb
fs
dec
or
pusha
xor
pop
cmp
out
cmpsl
or
bound
nop
test
outsb
mov
cld
jp
adc
xlat
loopne
sbb
je
adc
xchg
sub
shlb
in
push
lods
sub
push
dec
test
ds
idiv
push
ret
in
adc
mov
pop
addl
push
adc
cwtl
cs
xchg
int3
sbb
adc
mov
sbb
jp
mov
xor
and
dec
movsl
imul
pop
mov
or
fildll
mov
pusha
cmpsb
sbb
and
sarl
aaa
mov
and
fmull
sbb
adc
cmp
mov
outsb
xchg
les
loop
out
xchg
gs
add
inc
fsubrs
out
repz
jns
jns
lret
gs
outsl
das
std
in
jg
jmp
movsb
lahf
add
fwait
inc
fstp
cmp
mov
loope
stc
xor
in
dec
sub
mov
jbe
mov
pop
mov
lcall
or
mov
or
add
clc
lea
insb
adc
aas
mov
test
push
push
sbb
lahf
xlat
push
test
push
lahf
movsl
push
mov
lods
fxch
out
loope
fsubs
lds
scas
outsb
cmp
jbe
or
lods
cmp
mov
or
cmc
loopne
ficoms
mov
addr16
call
mov
js
leave
iret
mov
mov
fwait
mov
icebp
adc
fs
ret
rcl
push
repnz
cmp
call
ja
mov
ret
cwtl
mov
fmul
adc
aam
imul
adc
into
jo
movsl
std
or
and
dec
jmp
add
mov
lock
adc
out
jno
dec
ljmp
fldcw
adc
cmp
inc
cld
rcl
dec
sub
xor
and
cmp
stos
push
repnz
fimull
pop
loopne
and
inc
add
out
pop
jecxz
sub
xor
pop
enter
dec
cmp
fnstcw
out
icebp
divb
aas
pushl
aad
push
ljmp
imul
jae
pop
xor
dec
clc
lret
test
shlb
dec
out
out
inc
lds
int3
les
cli
jns
sub
push
adc
imul
lods
cmpsl
sbb
shlb
pusha
in
jno
pusha
mov
lods
out
jecxz
or
jae
dec
lods
jl
in
pop
mov
mov
out
cmp
xchg
leave
and
push
pop
sub
adc
adcb
xchg
push
cli
xchg
js
es
in
mov
fbstp
fisubs
mov
dec
ds
jmp
mov
mov
sbb
je
fs
fst
loop
xchg
repnz
into
mov
andb
mov
xor
fcomi
lret
popa
push
mov
dec
or
jo
cmp
rorl
pop
cmpsl
fsubl
xor
mov
in
fsts
push
cltd
sub
add
jl
scas
sahf
cmp
xchg
xchg
shl
xchg
add
mov
jbe
sarb
lds
jge
aas
jne
dec
jle
gs
dec
adc
push
and
cmp
mov
pop
je
mov
and
js
adc
xlat
cs
mov
jb
fstpt
push
rcrl
pop
inc
or
inc
add
mov
or
ljmp
je
into
rcrb
ret
rorb
mov
cs
imul
ds
jg
outsl
jp
in
mov
cltd
scas
inc
inc
leave
jge
sub
cmp
dec
inc
mov
jae
pushf
inc
int
jne
icebp
sarb
adc
mov
fidivs
pop
inc
sub
pop
inc
in
fs
aam
testl
xchg
xchg
mov
in
out
mov
inc
cmp
and
inc
ja
arpl
fistps
bound
popf
out
ret
scas
pop
dec
pop
mov
imul
jb
push
xchg
jo
adc
cli
fs
adc
fcomp
fisubrs
imul
mov
pop
sbb
cmp
mov
push
fisubrl
shlb
or
dec
adc
scas
test
mov
mov
rclb
insl
xor
jnp
lahf
sbbl
dec
xchg
pop
jp
testb
int
jbe
lock
cltd
push
je
ret
xchg
ucomiss
adc
gs
lds
mov
fidivl
xchg
adc
pushf
ljmp
lods
icebp
loop
idiv
or
cmp
add
lcall
outsl
push
and
sub
int
and
mov
icebp
bound
test
xchg
test
cmpsl
ja
out
dec
pushf
xor
cmp
adc
jl
or
fisubrl
std
and
dec
cs
cmp
lret
jp
and
bound
ds
mov
gs
nop
xchg
add
dec
and
xor
pop
fwait
loope
loopne
into
fdivs
ds
dec
call
sub
push
out
jge
pushw
js
jae
push
into
lahf
push
sub
loopne
xchg
pop
ss
adcl
pop
xchg
xor
jae
cmpsl
inc
call
mov
fbstp
out
adc
pushf
rcll
mov
cmpb
fwait
cltd
cmp
fnstsw
jae
out
sub
push
inc
or
mov
data16
pushf
cmp
or
daa
rorl
mov
pop
fists
aam
jo
leave
and
test
leavew
aad
outsb
cmp
cmp
scas
fstps
xor
cld
inc
out
add
fmull
jp
test
dec
jl
mov
jo
adc
jp
ret
stc
or
jns
pop
ss
sbb
mov
mov
dec
adc
mov
add
enter
popf
aad
fnstcw
xor
outsl
sbb
or
pop
jne
jg
test
sub
lret
push
imull
adc
dec
stos
in
pop
pop
adc
pushf
push
out
jno
lea
jle
in
test
in
pop
shlb
or
sbb
popa
pop
sub
xlat
test
pop
aad
loopne
pushf
mov
mov
cwtl
int
sub
jo
aaa
jb
dec
test
and
mov
in
into
xchg
dec
mov
cmpl
mov
inc
outsl
fadds
dec
icebp
scas
push
pop
sahf
pop
lahf
mov
xlat
lcall
pusha
pushf
sahf
in
mov
xchg
ficompl
mov
inc
stos
mov
lods
aad
mov
daa
jo
mov
imul
jnp
push
cmp
bound
pop
mov
daa
lea
or
xchg
xchg
inc
cmc
in
fdivp
inc
std
aas
jb
and
dec
jb
mov
mov
testb
shrb
in
outsl
arpl
add
lret
mov
adc
dec
clc
ret
sahf
jbe
loop
sbb
mov
add
push
sub
inc
shl
fcmove
rcl
pop
mov
sbb
adc
cmc
cmp
adc
or
ss
pop
call
adc
cltd
les
aam
aas
sbb
add
shll
jbe
or
push
lds
outsl
push
pusha
xchg
inc
adc
aam
test
les
or
or
jge
xchg
mov
je
shll
adc
xor
cld
int3
lret
or
xlat
fsubs
pop
inc
adc
stos
loop
sub
std
aad
aad
mov
out
cmc
jg
mov
les
dec
xor
push
out
push
pop
dec
aad
stos
push
jnp
js
jbe
or
sub
je
mov
xchg
add
mov
push
jle
xor
mov
out
sbb
test
pushl
negl
aam
xchg
call
sbb
sbb
insl
stc
lock
mov
dec
data16
pop
pop
movsb
jno
push
lock
or
or
xchg
mov
jbe
popf
cli
aas
jb
fldt
cmpsb
jno
dec
cmp
push
call
popa
inc
hlt
popa
and
xchg
inc
mov
xchg
pushf
push
enter
cmp
add
pop
lahf
rorb
hlt
add
jae
popa
adc
lahf
jo
sub
sbb
popa
xor
pop
mov
adc
shl
xor
sbb
paddsw
outsl
jecxz
lock
negl
inc
sahf
sbb
xor
loop
stos
jle
xor
push
fists
pop
ret
mov
testl
sti
pop
loopne
jp
pop
fwait
push
adc
in
jmp
repz
loopne
test
lahf
mov
cmp
popa
dec
pop
adc
test
fidivl
inc
push
sahf
repnz
push
sub
sub
mov
dec
shl
xor
jbe
test
push
xchg
out
and
lods
lock
adc
mov
dec
pusha
in
bound
sub
dec
in
xor
xchg
ret
inc
lret
dec
mov
loopne
jl
jle
sbb
in
push
ja
mov
loop
shll
add
mov
or
inc
xor
out
clc
mov
loopne
and
ret
sub
xchg
push
in
pop
loop
mov
rorb
cmp
das
in
out
pusha
stos
rcl
int3
mov
cmpsb
pop
xchg
out
insb
andb
mov
test
push
mov
mov
cmp
cmp
repnz
bound
adc
je
pop
mov
nop/reserved
adc
add
ja
mov
pop
adc
in
jge
jg
pop
shr
stos
testl
xlat
stc
cli
imul
mov
fcmove
cmp
jne
xchg
stc
fbld
sub
mov
pop
mov
or
jecxz
pop
pop
mov
and
push
jnp
jae
test
mov
shl
dec
fisttpl
pop
mov
call
xchg
ret
or
cmp
xor
inc
loopne
push
jecxz
or
mov
sub
cmp
daa
xchg
js
pop
inc
xor
sbb
pop
adc
mov
loopne
and
dec
cmc
inc
je
adc
dec
aad
aaa
xchg
push
pop
faddp
es
insb
mov
nop
pusha
fcmovne
lock
or
push
xchg
cs
fidivrl
sbb
icebp
and
stos
push
xchg
mov
xor
inc
out
mov
outsl
sbb
sbb
test
clc
hlt
insb
dec
js
jnp
and
out
dec
fxch
imul
insb
fsubr
les
das
add
test
add
jmp
mov
loope
aas
cmp
jp
outsb
jno
out
imul
in
adc
add
out
arpl
nop
je
sti
outsb
outsl
aas
xchg
mov
push
mov
movsb
mov
cmc
loope
incb
sub
xchg
call
and
fdivl
loope
jle
in
aad
pop
aam
pop
testb
sbb
push
loop
imul
sbb
add
testl
xor
in
std
mov
cmpsb
popa
push
movsl
fcomi
xchg
mov
idivl
sbb
insl
sub
and
pop
aas
sub
leave
enter
lret
dec
loope
arpl
cld
sbb
mov
adc
lea
jl
in
jg
and
fcoms
loop
enter
stos
cmc
into
pop
cli
in
push
test
mov
shl
adc
push
push
sub
jo
xor
push
cld
sub
add
nop
repz
cmpsb
and
pop
sub
mov
pop
mov
cmp
aas
arpl
jnp
dec
inc
fisubl
shlb
push
into
ja
lret
imul
xor
mov
ret
movsl
jge
mov
loope
push
shlb
data16
rclb
jb
xor
das
flds
fdivp
adc
sbb
cmp
xchg
jmp
fwait
daa
adc
ret
inc
mov
orb
adc
cmpsl
iret
cmp
cmp
lock
pop
push
sub
test
jp
or
jecxz
dec
adcl
jae
push
lock
cli
push
mov
mov
insl
push
mov
cs
sub
cli
mov
test
sbb
hlt
inc
jl
out
fwait
mov
or
adc
pop
das
jle
sbb
out
and
fnclex
js
test
lock
iret
fstpt
xorl
stos
into
push
dec
push
push
xor
mull
call
xor
fs
arpl
mov
pop
out
sbb
sub
mov
add
jecxz
sets
adc
bswap
or
nop
mov
xlat
test
xor
sbb
mov
out
std
fmull
out
popa
push
push
outsb
adc
aas
lock
mov
ljmp
cmp
and
ds
popa
adc
movsl
outsl
push
push
xor
mov
out
movsb
lahf
sbb
mov
adc
cld
popf
iret
mov
or
xchg
or
aaa
out
movsl
xchg
fisttpl
sub
pop
loop
sbb
cmp
cmp
into
dec
cmp
test
and
jns
pop
mov
cmpsb
lcall
or
repz
pop
mov
shll
repz
xor
fs
loop
movsl
push
jns
xrelease
cmp
int3
clc
mov
addr16
xor
fists
or
je
testl
jp
loopne
pop
cs
cwtl
pop
mov
in
movsl
out
or
and
jg
jnp
mov
mov
mov
loopne
jno
aam
inc
inc
iret
add
mov
push
loopne
pusha
mov
and
cld
mov
loop
jle
inc
or
inc
sub
pop
sub
sahf
inc
mov
and
fisubrs
imul
scas
pop
imul
sbb
cmp
mov
out
scas
sub
fwait
adc
inc
lods
das
sub
call
jmp
mov
adc
jb
jnp
les
or
je
xor
jne
daa
cltd
or
jecxz
je
xor
arpl
shll
mov
movsl
test
jne
add
cmp
int3
mov
push
popf
sar
fistps
bt
popf
pop
and
shl
ret
xor
loopew
and
xlat
aam
push
lods
xchg
xor
mov
out
mov
pop
sbb
pop
dec
mov
stc
and
aad
mov
fs
in
xchg
push
cmp
mov
jmp
xor
adc
ljmp
adc
adc
push
and
shrb
xchg
stos
and
or
pop
imul
mov
fstps
add
lock
inc
xchg
repnz
outsl
mov
hlt
gs
push
push
dec
js
out
cmpsl
ror
xor
xor
lds
dec
inc
and
xlat
inc
adc
test
sti
inc
in
adc
or
or
and
ds
loop
arpl
mov
nop
push
pop
aam
sahf
lods
mov
aam
cltd
repnz
insl
mov
ds
jmp
dec
sub
daa
jae
xchg
rcrb
adc
xor
cmp
xor
orl
mov
mov
daa
mov
xlat
sbb
push
getsec
inc
loop
ficompl
mov
adc
stos
out
in
outsb
dec
data16
add
pop
cmp
or
or
inc
cmp
sbb
xchg
cli
stos
adc
outsl
jne
cs
lock
push
dec
mov
js
ljmp
push
cs
jne
std
hlt
daa
rorb
dec
xchg
test
test
daa
pop
push
mov
inc
jb
cltd
pop
pusha
les
clc
sub
xchg
insb
dec
js
xchg
clc
push
pop
jmp
ds
mov
lahf
fbstp
jo
mov
lock
pop
cmp
es
push
mov
push
lcall
scas
push
fwait
mov
dec
ds
jno
push
daa
ret
adc
call
sbb
sti
inc
imul
push
mov
and
pop
mov
mov
mov
adc
shl
cs
inc
cmp
imul
in
outsl
inc
shll
dec
inc
or
test
push
inc
sub
daa
cltd
push
sub
xor
pop
pop
std
cs
jle
mov
mov
pushf
fst
cmp
popa
mov
dec
cmpsl
pusha
sbb
scas
xor
das
adc
mov
in
out
pushf
lret
addr16
xlat
sub
xor
pop
mov
ljmp
cmpsl
aam
lods
add
mov
mov
cmp
pop
cmp
test
adc
xor
mov
adc
mov
ret
and
sub
jne
xchg
in
fwait
sub
in
jae
push
and
adc
adc
arpl
or
in
insl
cmp
mov
sub
mov
mov
xchg
cltd
ds
repz
dec
int3
aad
hlt
roll
inc
adc
mov
loopw
push
add
cld
mov
push
jae
push
pusha
aaa
icebp
sub
and
sbb
mov
adc
cmpsl
adc
fcmovnbe
sub
std
and
out
mov
mov
mov
xchg
or
iret
sub
mov
jle
pop
pop
in
hlt
rorl
negb
mov
sbb
cld
dec
and
mov
inc
and
cmpsl
mov
es
push
adc
jae
sub
popf
xor
and
xchg
mov
outsl
push
add
int
cltd
dec
inc
lret
mov
aas
or
xchg
jae
fidivl
jno
lahf
shlb
mov
pop
sbb
cmc
push
testb
lcall
push
pop
gs
pop
jb
xchg
mov
pop
push
inc
add
iret
jnp
seta
xchg
movsl
jno
jg
xchg
sarb
add
mov
push
movsl
mov
and
xor
inc
stos
jl
push
mov
mov
clc
push
gs
pop
pop
cmp
inc
repnz
xchg
xchg
fldenv
leave
adc
cld
push
adc
cmp
aas
xchg
push
shrb
jnp
sbb
rep
sbb
add
in
addr16
add
cmp
lcall
or
mov
adc
mov
cmc
in
adc
mov
iret
mov
and
and
inc
add
inc
cmpsl
xchg
xchg
scas
out
mov
or
adc
mov
aas
xchg
xor
das
pop
cmp
mov
lcall
pop
jge
dec
ret
and
xlat
lods
jo
adc
or
cmpb
jge
cltd
sarl
mov
or
fstl
rcll
mov
push
cmp
stos
xchg
call
outsl
cmpsl
loop
sub
xor
lret
mov
cld
push
sub
xchg
xor
mov
cmpl
ljmp
jl
mov
lds
lahf
test
ja
imul
lret
lahf
ja
dec
push
dec
testb
mov
jecxz
add
test
lods
mov
arpl
pop
pop
push
scas
xor
sub
out
clc
loop
mov
das
out
xlat
sarb
jg
mov
sbb
inc
adc
jg
inc
jmp
sub
jns
dec
daa
mov
test
icebp
mov
mov
lods
push
movsl
cmp
fsub
push
xchg
mov
mov
push
mov
and
pop
adcl
xor
rorb
jl
outsl
xlat
cld
ljmp
mov
mov
aas
xchg
sbb
imul
mov
mov
lret
js
lret
psubq
aas
dec
mov
sbb
iret
into
push
sub
mov
xchg
cs
shll
pop
mov
iret
test
jae
mov
int3
mov
cld
cmpb
add
sbb
dec
movsl
xchg
inc
nop
pusha
adc
add
mov
pushf
sub
mov
push
pop
lcall
lock
pop
roll
daa
adc
popa
lret
inc
out
lock
push
mulb
jg
icebp
and
or
push
jecxz
sub
imul
and
dec
int3
mov
sbb
aaa
lods
mov
dec
out
test
movsl
xor
popa
das
test
mov
daa
fs
xchg
ds
and
sbb
insl
sti
rorl
adc
arpl
aam
sbb
or
aad
sbb
lea
dec
daa
dec
sub
fistpl
or
aam
mov
inc
push
out
xlat
add
sbb
cltd
out
push
cmpsl
lea
lcall
fsts
mov
mov
and
jp
lock
dec
mov
jl
sub
out
mov
mul
arpl
jmp
ljmp
add
cmp
or
sub
scas
push
xchg
fucomp
jp
pop
cmp
ds
lahf
fisttps
outsl
lret
push
in
ds
xchg
xor
in
out
scas
pop
mov
outsb
fadd
sub
mov
mov
cs
mov
imul
js
insl
iret
inc
in
xchg
or
out
aam
adc
in
je
sub
testl
add
test
popa
inc
jmp
test
ret
mov
inc
movsb
insl
mov
push
cli
popf
out
in
cmp
cmp
xchg
pop
lcall
inc
in
fdivrs
repnz
dec
lcall
insl
loopne
fsubr
cmp
add
pop
xor
pushf
pop
imul
js
sub
pop
jb
xchg
sbb
test
std
jmp
dec
dec
cmpsb
xor
lods
add
mov
mov
mov
stos
lods
repnz
xchg
add
ljmp
add
xorb
lret
cs
ret
fwait
dec
sub
add
insb
imul
pop
repz
std
enter
jp
test
test
notb
mov
sbbb
insb
push
mov
inc
mov
xchg
sbb
ss
cmp
out
and
or
sbb
xchg
push
push
adc
ja
jne
adc
inc
popa
int
test
xchg
or
cld
out
lahf
out
sbb
and
pusha
mov
mov
jle
call
mov
mov
call
xchg
dec
sub
sarl
sbbl
and
inc
jg
sbb
push
push
fdivrl
sbb
dec
inc
mov
mov
ficomps
aad
and
data16
popf
mov
jecxz
jne
xor
inc
mov
mov
enter
and
mov
aas
cld
dec
and
mov
dec
movsb
loop
inc
clc
lock
lcall
mov
xchg
xchg
hlt
call
lcall
pop
rclb
or
aas
into
lret
rcll
ds
inc
pop
sbb
test
inc
sti
jbe
out
in
sarl
fcmovnu
rcll
gs
ja
lret
mov
sbb
mov
inc
dec
adc
stos
pop
ret
fmull
inc
push
add
aam
push
ljmp
mov
aaa
xor
add
les
xor
pop
mov
test
pop
scas
iret
gs
js
dec
mov
push
jl
movsl
mov
inc
aaa
mov
xor
cmc
xor
mov
inc
rcrb
xor
pop
inc
shrb
hlt
cs
les
dec
lret
pushf
pop
jmp
cmpsl
out
add
rcll
add
and
mov
mov
fiaddl
pop
sbb
cmp
daa
xchg
fchs
push
fwait
cmp
and
xchg
pop
adc
cmp
pop
lods
add
inc
dec
aad
push
icebp
push
xor
pop
loop
jbe
mov
mov
lea
or
enter
js
popf
mov
push
stos
fistpll
cltd
pop
cli
incl
inc
clc
data16
mov
jbe
or
xor
les
js,pn
fcmovbe
shl
push
cli
inc
jae
cwtl
cld
xchg
cmp
lock
dec
adc
xchg
add
seta
pop
cmp
cmc
pushf
shr
sub
pop
cmp
iret
inc
stos
dec
fdivr
cltd
js
pop
shll
arpl
rolb
xchg
lcall
and
ljmp
jmp
sub
mov
fcomi
popa
fxch
les
add
adcl
repnz
push
mov
mov
jns
rorl
cmp
xchg
in
icebp
pop
test
les
mov
cltd
adc
sbb
cld
stos
cmp
out
loopne
push
mov
fnstsw
shll
in
xchg
dec
out
or
in
std
adc
dec
orl
dec
enter
sbb
repnz
clc
sub
xor
jne
cmpsl
jbe
push
movhps
inc
jne
xor
out
mov
dec
ja
mov
jl
cld
or
push
push
mov
hlt
mov
xchg
dec
addr16
inc
in
jle
ret
aas
pushf
xor
cmp
and
hlt
pop
dec
inc
xor
cmp
and
into
push
mov
pop
outsl
push
in
xchg
mov
push
xchg
pop
push
or
ljmp
adcl
in
mov
loope
and
push
lahf
xor
mov
seta
xchg
mov
add
lods
shll
add
ja
inc
inc
add
xchg
js
inc
add
in
mov
and
xchg
and
cltd
jl
sbb
test
dec
movsb
sub
mov
jb
pop
inc
adc
das
outsb
mov
repz
cmp
or
dec
test
int
mov
jnp
pop
pushl
fcmovne
insl
mov
insl
lahf
mov
cmc
ds
mov
sahf
cmp
pop
adc
pop
fdivs
das
outsb
mov
ret
iret
dec
xor
fistl
mov
cmpsb
outsb
sub
mov
int
loopne
xchg
mov
popa
rorb
es
push
pop
xchg
fstps
push
enter
icebp
or
das
add
mov
sbb
pop
fsubrs
enter
int3
or
enter
in
cmp
jno
je
mov
jge
sti
out
dec
jg
cmp
cmp
mov
push
int
out
out
push
shrl
fistps
push
xor
enter
rolb
xor
jnp
push
pop
jmp
es
ret
cmc
mov
mov
inc
cld
pop
fidivrs
and
shll
inc
mov
ficoms
mov
xchg
out
out
stos
inc
or
sbb
pushf
push
imul
lock
or
out
xchg
inc
cltd
sti
ljmp
xchg
sti
mov
test
sbb
cmp
push
repnz
push
mov
or
sub
add
subl
cmpsl
sub
pop
sbb
or
xchg
push
mov
mov
cmpsl
lods
lods
dec
pop
mov
mov
xor
push
fs
test
aad
pop
and
inc
movsb
inc
cmpsl
sub
test
addl
pop
mov
das
sub
imul
jmp
movsl
xchg
mov
outsb
push
xchg
ss
xorb
jo
lods
adc
and
int
lods
dec
loope
or
lods
jno
addr16
inc
inc
cmp
and
fildll
mov
dec
inc
fstps
test
scas
adc
push
and
mov
call
jle
or
jnp
ljmp
je
movsb
repnz
cmpsl
xor
jns
sub
pop
mov
clc
fsubl
iret
lea
dec
fimuls
pusha
and
and
push
pop
add
repnz
scas
in
pushl
pop
xor
cmp
out
in
jecxz
les
jo
jnp
pusha
pop
or
fwait
jmp
ret
int3
andl
add
xsaves
xchg
and
pmulhw
leave
hlt
adc
xor
inc
repz
inc
sbb
lret
std
aas
dec
inc
aaa
sub
aaa
aas
rcrb
add
inc
sbb
ljmp
iret
mov
sbb
mov
sub
popf
pop
in
lods
xchg
sub
lods
adc
mov
nop
dec
xchg
gs
xchg
mov
push
dec
aad
jge
sbb
add
sub
movsb
cmp
je
pop
loope
inc
add
mov
pop
out
mov
jmp
aaa
jle
mov
xchg
daa
jo
je
int3
sbb
sub
adc
or
lret
sub
mov
jnp
lock
mov
pop
fwait
jmp
or
andb
stc
mov
rolb
aam
nop
push
mov
sbb
xor
add
push
mov
hlt
inc
pop
int3
jg
aam
sarl
adc
iret
inc
std
stc
jle
jo
lds
in
xchg
push
sbb
jp
mov
fidivl
cmp
insb
pop
pop
lea
shll
shll
ss
in
insl
pop
mov
and
jmp
mov
mov
notb
jnp
imul
and
sub
cltd
adc
inc
fisttps
negb
pop
call
clc
mov
pop
and
fadds
shrb
push
ljmp
outsb
pushf
lods
ss
xor
mov
sub
sbb
movsb
shlb
fs
dec
mov
cmp
push
push
inc
arpl
jge
xchg
es
add
dec
push
jno
sbb
dec
movlhps
hlt
loopne
in
and
jle
iret
stos
xchg
iret
ss
mov
and
icebp
mov
jecxz
mov
fst
int3
mov
aam
out
mov
pop
sbb
sti
or
ret
in
hlt
scas
dec
aam
mov
pusha
lret
sub
aaa
inc
cmp
adc
cwtl
cld
jns
dec
push
les
cmp
add
imul
mov
xchg
sub
xor
cmp
into
dec
ja
pop
jnp
out
dec
xor
or
mov
imul
imul
sarl
testl
adc
push
std
mov
and
clc
movsb
push
inc
sti
adc
mov
icebp
testl
cmp
or
shl
fidivs
xchg
mov
popa
jg
push
es
inc
enter
test
mov
adc
pop
call
push
xor
dec
negl
test
out
and
imul
xor
repz
in
aad
sub
cmp
icebp
jp
mov
lea
cmpsb
repz
push
out
lret
jno
jns
out
sbb
sbb
pop
test
movsb
xor
cmpsl
repz
inc
lds
mov
push
mov
arpl
fcmove
push
nop
jmp
loopne
mov
loop
fadd
test
out
sahf
dec
loop
inc
aad
dec
testb
iret
pop
sbb
adc
mov
cmpsl
cld
mov
icebp
xor
sbb
in
inc
frstpm(287
inc
aad
arpl
popf
adc
fsubl
inc
and
repnz
test
clc
mov
cmp
adc
pop
addl
pop
xchg
add
and
dec
sub
xor
add
fmul
mov
sub
adc
pushf
cmp
cld
mov
xor
sub
mov
mov
mov
lock
adc
dec
arpl
pop
out
outsb
mov
push
adc
sahf
or
or
or
dec
aam
and
hlt
outsb
jnp
dec
sbb
mov
gs
and
in
gs
mov
sti
mov
fdivr
pop
loope
sahf
fidivrs
jp
adc
mull
inc
push
mov
push
push
add
bound
push
mov
inc
and
ffreep
dec
dec
lahf
cmpsb
xor
dec
leave
jb
les
push
adc
mov
push
fsub
push
add
jecxz
loopne,pt
test
push
xchg
lahf
ss
ret
divb
jnp
pop
push
jne
push
andl
xchg
nop
jne
xchg
push
mov
aaa
iret
cmp
sub
jne
lods
movsl
stos
stos
mov
mov
mov
addr16
cltd
repnz
add
cmpsb
adcl
mov
ret
cmp
cli
jg
stc
sbb
jecxz
push
mov
int3
and
addr16
pop
add
mov
scas
mov
mov
insl
mov
mov
test
mov
jge
cltd
cbtw
pusha
pop
jae
xor
subl
or
adc
pop
adc
jmp
pusha
pop
xor
push
sbb
lods
daa
cmpsb
or
fs
mov
pop
not
push
pop
cmp
lock
pop
inc
jp
and
repz
loopne
frstor
outsl
stos
fimuls
sub
out
and
and
dec
mov
mov
ret
movsb
mov
pop
inc
mov
xchg
shl
jmp
cmp
xchg
lock
push
ret
cmp
loopne
mov
into
adc
sbb
lods
jno
int3
jp
mov
lea
icebp
mov
jae
mov
xchg
stos
aam
call
and
stos
xor
aas
or
xor
adc
stos
jbe
push
dec
inc
push
xor
adc
inc
test
adc
test
mov
leave
gs
mov
sbb
or
or
xlat
mov
mov
popf
out
test
das
mov
sub
adc
dec
and
imul
das
push
mov
out
addr16
lret
hlt
testl
add
mov
out
dec
mov
outsl
fs
shll
pop
cmc
sub
in
push
dec
enter
push
std
mov
ficomps
jmp
add
push
add
rcr
les
adc
sarl
mov
adc
dec
pop
xor
dec
adc
neg
shl
shr
fmulp
mov
fbstp
jbe
fimuls
xchg
call
inc
pop
xor
stc
push
sar
pop
fists
pop
ret
cs
push
sub
incb
sub
xor
pop
mov
sbb
push
inc
fmuls
lret
leave
das
or
or
adc
out
dec
jae
lret
push
js
push
imul
fnstsw
sbb
pusha
mov
mov
dec
cmp
xor
repz
jg
arpl
xchg
mov
mov
pusha
std
push
jns
rol
mov
lahf
leave
push
inc
jb
dec
shll
ret
inc
lret
push
rdpmc
dec
cmpl
push
add
fmuls
mov
mov
inc
pop
mov
cmpsl
test
xchg
in
add
repnz
into
dec
sub
add
mov
imul
jb
stos
gs
subb
mulb
mov
cmp
mov
pop
mov
lea
dec
in
and
call
xchg
and
aad
pusha
dec
aas
fldl
lahf
testl
cld
mov
jle
subb
sbb
insb
dec
scas
inc
jns
adc
inc
mov
adc
jno
nop
mov
clc
stos
dec
repnz
outsb
mov
add
aas
aad
xor
lods
imul
in
scas
xor
arpl
or
jge
dec
xchg
sub
adc
rorb
shlb
xchg
movsb
popa
enter
add
push
mov
insl
mov
mov
and
lods
int3
je
or
mov
cmp
push
faddl
inc
mov
cli
jns
pop
ds
xor
inc
mov
pop
cmc
shll
punpckldq
xorl
mov
std
jl
ja
mov
jmp
sub
xor
cmp
popa
jmp
aas
push
les
inc
test
adc
inc
fbld
adc
pop
push
or
cs
lods
das
mov
cmp
or
inc
aad
and
ficompl
sub
in
je
pop
loopne
neg
inc
push
sub
ja
sar
inc
stc
xchg
bnd
scas
popf
pushf
cmp
sbb
cmp
mov
leave
aas
mov
pop
sub
shr
push
ret
xchg
cmp
and
jns
add
pmaddwd
notl
inc
loopne
push
and
pop
xor
mov
cld
xor
push
mov
sbb
mov
jns
addr16
xor
mov
inc
lret
test
into
sbb
sbb
add
adc
inc
dec
push
push
jp
cmc
xor
clc
fistl
mov
stc
mov
stos
and
aaa
push
inc
jl
mov
jne
push
mov
shr
iret
push
pop
daa
movsl
lahf
lock
clc
lods
adc
mov
pop
xchg
je
bound
es
dec
fsubr
xchg
add
pop
outsl
cmp
aam
mov
repnz
mov
add
cmp
sub
adcb
insl
adc
push
loop
mov
or
sahf
sub
mov
jae
test
pop
std
mov
mov
push
fiaddl
hlt
test
out
mov
sbb
sahf
call
adc
loop
lods
mov
negl
daa
lock
popa
cmpsl
adc
negb
je
add
lock
cmp
pushf
mov
or
lret
cli
lods
iret
mov
xor
pop
insb
xlat
xor
cltd
mov
adc
or
ss
lret
jge
mov
push
inc
xchg
jae
fwait
jl
das
ss
out
out
pop
mov
inc
cli
mov
mov
xor
mov
dec
fs
lea
xor
pop
fcmovnb
fsubl
rcrb
mov
xchg
dec
lret
stos
cwtl
mov
jno
pop
jne
xor
sbb
jmp
bound
jecxz
lods
fs
pop
dec
xchg
lcall
push
pop
push
xchg
out
cwtl
ds
into
push
mov
mov
out
mov
ret
adc
out
and
fsubrl
push
xchg
mov
ficomps
aam
sub
rcrb
lods
and
mov
xor
and
adc
shll
orb
mov
mov
fsubrs
aad
fldl
inc
imull
inc
xchg
cmp
test
add
jnp
ss
sub
dec
push
mov
push
and
lret
mov
pop
jp
cmp
dec
mov
shl
push
lret
fdiv
mov
pop
aam
testb
push
repz
lcall
dec
push
sbb
push
sub
hlt
popa
inc
mov
and
out
fadds
out
sbb
dec
jns
and
lret
sbb
mov
in
sub
and
mov
push
mov
push
jl
fidivrs
mov
es
fadds
xchg
outsb
stos
mov
loop
jbe
jmp
fnstcw
inc
shl
jge
insl
std
xchg
sti
or
faddl
fdivrp
in
insl
sti
add
fcoms
mov
ret
jge
mov
push
mul
cli
push
aam
dec
out
jno
lea
in
movsb
xchg
dec
pop
push
and
testb
daa
cmp
add
lock
rcrb
mov
pusha
pop
jg
and
pop
or
adc
stos
cmpsb
xchg
gs
xchg
mov
sub
loop
sbb
xchg
or
stos
out
clc
inc
mov
rol
jne
jecxz
outsb
xor
inc
pop
jbe
cltd
mov
loopne
push
das
cmp
jp
mov
pop
mov
pop
or
sbb
in
fmull
adc
pusha
shlb
in
icebp
adc
xor
fadd
mov
dec
mov
mov
gs
mov
push
inc
mov
sbb
lcall
jl
scas
jp
push
fscale
cmpsb
sub
add
insl
lods
cld
cmp
arpl
cmpl
xor
iret
in
mov
xchg
jb
aad
pop
js
cltd
outsl
mov
ret
sbb
arpl
insb
sbb
insb
adc
adc
cmp
aaa
insb
mov
imul
xchg
adc
or
cmpsb
fadd
cmp
fmuls
std
and
ja
cltd
cmc
xor
xchg
inc
sub
orb
loopne
cli
cld
and
loopne
xchg
mov
push
xchg
cmp
cltd
inc
push
jmp
neg
jbe
loopne
cmp
sbb
mov
lcall
shrb
lret
dec
sbb
pop
mov
mov
cltd
xchg
xchg
sbb
popa
decb
pop
ret
stc
arpl
jecxz
push
or
fwait
std
push
push
push
fildll
sahf
idivb
imull
mov
sbb
or
pop
jno
sub
insl
mov
mov
push
adc
pop
std
cmp
push
jbe
and
push
pop
sub
scas
imul
lods
stc
cli
orl
inc
jmp
jbe
loopne
cld
adc
rolb
loop
clc
popf
shr
push
insl
and
fidivrl
icebp
cwtl
sbb
sbb
mov
dec
into
je
mov
inc
adc
jl
or
adc
iret
mov
or
xor
out
lcall
into
xor
pop
xlat
stos
loopne
popf
int
ljmp
and
das
mov
rolb
xchg
jbe
scas
ret
hlt
mov
adc
cmp
xor
xchg
das
or
jbe
idivl
out
push
push
into
mov
ret
jb
and
shl
ss
repz
mov
sbb
cmpsb
lea
cmp
fimuls
daa
and
rolb
push
jns
xchg
push
pop
jbe
stos
mov
cmpsb
ljmp
jg
add
add
sti
pop
out
ret
imul
cmp
xlat
mov
push
mov
or
sti
mov
xchg
out
or
mov
sub
hlt
iret
jge
inc
shlb
repnz
xor
loopne
es
lods
fmulp
rcrb
sbb
ficompl
ja
add
or
mov
xchg
jae
inc
mov
sbb
jbe
jp
stos
clc
push
xor
or
in
dec
dec
mov
sarb
pop
shlb
cmp
test
sbb
jnp
loopne
or
imul
mov
inc
fwait
xchg
or
or
sbb
sbb
pop
addr16
pop
adc
and
stos
mov
popf
and
adcl
xor
fmull
xorb
test
inc
and
popa
push
mov
mov
subb
jae
sub
dec
xchg
mov
out
aam
test
sbb
cs
subl
inc
repz
ljmp
inc
xchg
lret
mov
in
lret
mov
jecxz
jb
dec
cmc
push
test
mov
in
dec
nop
ret
jmp
lock
add
mov
rorl
xchg
add
fistpll
loopne
out
nop
gs
sub
rorl
aaa
inc
stos
cmp
xchg
lods
pop
push
cltd
jp
andl
dec
aas
stc
xor
jne
mov
scas
test
scas
jnp
ret
mov
test
ret
outsb
lahf
sub
sbb
lcall
xchg
or
mov
popf
dec
mov
lods
push
lods
add
inc
cmp
in
pop
mov
jmp
push
and
outsb
fstps
xorl
or
cmc
mov
xchg
hlt
mov
sbbb
ds
or
dec
je
push
xchg
dec
pop
popa
aas
in
in
push
cwtl
mov
pop
and
fs
int3
pop
jae
jns
cmp
jo
js
jge
pop
dec
out
add
stos
mov
fwait
dec
repnz
xor
or
pop
inc
dec
test
jns
xor
movsb
mov
insl
xchg
popa
dec
shrb
daa
das
add
aam
push
inc
mov
sub
adcl
daa
inc
inc
fsubr
sub
add
adc
inc
xchg
neg
and
xor
pop
stos
mov
dec
in
imul
addr16
into
in
fcmovu
lret
icebp
aas
mov
bound
loop
and
mov
call
out
cmpsb
loope
sub
push
test
mov
pop
xchg
xchg
xchg
fwait
xor
mov
pop
ds
jb
sbb
add
cli
push
std
push
ja
mov
dec
jae
mov
jno
bound
lret
jno
push
add
les
push
ds
aas
dec
mov
pusha
lret
roll
jg
hlt
push
psrlw
out
loop
inc
outsl
insb
sbb
hlt
inc
fists
shl
outsl
jge
jl
mov
and
lock
hlt
push
jns
test
xchg
jne
movsb
xlat
roll
mov
mov
xor
and
lret
jg
sub
push
lcall
mov
les
mov
into
mov
cltd
xor
mov
cwtl
repnz
stos
in
rorb
imul
pop
dec
mov
ss
push
sbb
inc
sub
xchg
pushf
fstpt
daa
lock
jno
fdivrp
nop
dec
mov
aam
dec
fs
and
jae
out
imul
or
jl
pop
ds
pop
stos
lods
cmp
enter
jae
gs
dec
pop
ljmp
in
lcall
xchg
mov
cs
sub
stos
cmp
xor
gs
int
sbb
add
call
cmpsl
jnp
jne
lret
jbe
test
xchg
sbb
inc
jnp
sub
popf
test
mov
sub
sbb
popa
adc
push
loopne
add
das
jl
sub
lds
cli
jmp
pushf
xchg
pop
mov
loop
aad
pop
sbb
sub
loope
lret
mov
ss
bound
arpl
scas
push
popf
stos
arpl
jb
fcmove
xor
rolb
dec
and
xchg
sbb
test
adcl
jb
xchg
dec
mov
or
scas
jns
loop
aas
lds
loopne
or
movsl
mov
loopne
fdivl
push
cmp
push
cmp
mov
mov
mov
pop
pusha
repnz
rcrl
adc
or
xor
push
xchg
mov
adc
aad
dec
cltd
stc
stc
mov
ss
cwtl
push
loope
xor
mov
orb
cld
pop
shl
call
scas
pop
fs
inc
adc
dec
in
jp
arpl
imul
mov
mov
mov
mov
cmpsl
pop
out
jno
pop
bound
aaa
push
das
in
mov
cmp
rclb
imul
test
sar
popf
sub
bound
je
push
mov
cli
ret
test
std
aam
out
mov
jne
and
jae,pn
pop
cmp
sub
pop
insl
jae
sbb
hlt
sbb
scas
cmp
clc
mov
test
jb
cmp
mov
dec
push
popf
test
inc
dec
sbbb
jbe
daa
inc
fnstcw
or
mov
and
mov
popa
jmp
cmp
outsl
sub
sub
icebp
mov
inc
mov
call
cwtl
pop
in
ficoml
faddp
insb
rcrl
add
mov
mov
test
push
adc
xlat
jns
and
aaa
stc
in
rorb
dec
cmpsb
aas
daa
xchg
dec
add
fnstsw
and
movsw
ret
add
cltd
cmp
out
jg
push
push
xchg
stc
xchg
sub
aad
nop
jo
dec
fcoml
xchg
lods
adc
jmp
nop
adc
rcrb
dec
xchg
mov
pop
cmp
je
cwtl
xchg
push
bound
enter
stos
pop
ret
in
push
fstl
xor
mov
shlb
lret
sub
inc
sbb
pop
icebp
mov
and
insb
push
popf
fs
negb
xchg
lret
adc
cmp
jne
cmc
imul
pop
push
in
jmp
mov
pop
dec
dec
push
leave
shrb
cltd
xchg
test
popa
into
adc
push
pop
sbb
jnp
push
jo
fcmovb
lods
pop
push
mov
stc
shll
in
sub
mov
push
aad
lds
sub
sub
fidivs
xchg
push
inc
mov
pop
fwait
jo
adc
sti
jl
movsl
or
mov
daa
mov
je
lods
lret
call
inc
rcll
mov
sub
ja
cmp
inc
mov
leave
sub
push
mov
jp
add
icebp
popa
mov
data16
inc
roll
mov
inc
dec
xchg
into
xor
mov
icebp
roll
jmp
scas
addr16
adc
outsb
shlb
pop
jo
inc
xchg
push
lahf
xchg
mov
mov
insl
xor
in
ret
hlt
jb
test
jo
imul
jae
cvtps2pd
pop
cltd
fisttpll
lods
xchg
je
aaa
sbb
or
sarb
jne
mov
call
cltd
and
mov
pop
jmp
mov
mov
out
mov
xor
popf
lcall
jecxz
xchg
jne
mov
sub
push
orb
int3
xlat
xchg
xor
dec
jge
test
mov
in
pop
repz
mov
ret
std
xor
lret
mov
jno
ret
push
subb
fstps
pop
jp
and
in
jb
push
rorb
xchg
jno
repz
in
adc
mov
leave
jo
pop
out
jne
mov
fistl
ret
push
dec
stos
add
int3
jno
imul
ss
xlat
xor
test
fdivl
jbe
or
lahf
jne,pt
and
call
std
push
pop
sub
mov
test
adc
cs
mov
pop
shrl
sub
sahf
or
das
ljmp
shlb
lret
xchg
inc
mov
dec
adc
add
adc
adc
test
js
add
cmp
jle
mov
fbld
pushf
adc
mov
jmp
cmp
ret
mov
outsb
test
xchg
xlat
aas
mov
icebp
adc
imul
ret
mov
fyl2x
sub
or
fwait
lret
add
sbb
and
movsb
ja
fcmovb
sahf
dec
stc
scas
mov
imul
out
ret
cld
cwtl
in
push
push
jnp
mov
or
lea
dec
imul
jg
sbb
mov
push
ljmp
inc
adc
mov
push
cmp
mov
cs
fsubrl
jl
pop
sub
push
adc
push
clc
insl
subl
addr16
outsl
into
fstpt
fisubs
xor
lea
mov
scas
repz
cmc
xchg
ret
scas
inc
or
cmc
jle
xor
lcall
push
jns
and
fwait
repnz
in
in
or
fsub
cmp
sbb
push
out
cltd
ljmp
xor
xchg
and
sbb
icebp
jnp
mov
pop
icebp
into
adc
xchg
out
dec
push
loop
into
dec
xor
mov
mov
test
cmp
in
mov
mov
adc
jmp
xchg
inc
push
cmp
ret
pop
cltd
inc
popf
cld
das
les
mov
int3
pop
jecxz
aas
xchg
or
iret
ljmp
adc
pop
ret
dec
clc
imul
ret
das
icebp
arpl
js
out
pop
adc
loope
jno
and
mov
sbb
fisubs
mov
pop
mov
adc
les
sbb
dec
dec
inc
ret
test
mov
inc
xchg
fdivl
sbb
xchg
inc
faddl
jo
or
add
xchg
dec
jno
sti
xchg
mov
push
stos
popf
cmp
jmp
les
pop
xor
sti
lods
adc
call
xchg
test
fbstp
imul
lods
cmp
mov
movsb
mov
jp
xchg
fs
push
xor
ds
cld
adc
jns
addr16
or
jnp
outsb
jns
fwait
mov
push
sbb
or
dec
in
mov
cmp
in
ret
mov
push
imul
pop
sbb
xor
mov
ljmp
sub
mov
ljmp
jmp
lret
dec
add
ljmp
fildll
mov
insb
mov
lahf
mov
mov
or
sbb
leave
adc
fstpt
jno
pop
jns
inc
inc
ret
cmpsl
jns
pop
in
mov
sub
imul
fdivrs
subb
inc
mov
mov
sub
push
dec
stos
push
fnstcw
lret
mov
pop
mov
adc
cli
in
mov
stos
push
mov
sub
or
lods
adc
stos
mov
jle
into
inc
or
sahf
pop
pop
xchg
adc
mov
jg
pop
js
faddl
repz
push
pop
and
mov
xchg
test
jns
jbe
inc
sbb
pop
fmull
gs
roll
cmp
xor
and
add
xchg
es
dec
sbb
mov
fildl
inc
xchg
mov
icebp
inc
dec
rorl
or
mov
sarl
cmc
outsl
add
mov
mov
dec
lret
sbb
mov
push
insb
sbb
sbb
jg
sbb
mov
xchg
mov
je
movsl
push
inc
xchg
cld
inc
mov
and
testb
cmp
mov
insl
lds
mov
loopne
andb
inc
dec
pop
sbb
or
pop
xchg
mov
out
mov
mov
ficompl
or
cmp
daa
push
fcoml
mov
xchg
xor
bound
les
xchg
xchg
cmp
cltd
stos
or
mov
or
aam
dec
nop
lcall
dec
repz
bound
inc
push
lea
loopne
in
sbb
xor
sbb
mov
jo
dec
test
mov
mov
loope
mov
das
pop
push
adc
pop
mov
xchg
fidivrl
push
push
mov
xor
mov
xchg
movl
sbb
pushf
pop
ss
lock
or
cmp
repnz
test
mov
pop
loop
mov
jns
and
sub
mov
xor
mov
or
icebp
or
add
xchg
js
jbe
jo
and
push
je
or
bound
push
and
jp
pop
and
or
loop
movsl
xlat
xor
mov
adcb
movsb
xor
mov
cmp
cld
inc
repz
into
jns
nop
std
dec
jnp
adc
sbb
sahf
mov
decb
lret
aaa
ret
adc
fists
or
mov
sbb
xor
pop
aaa
or
cmpsl
xor
ds
sbb
rclb
fnstsw
sbb
xor
insl
int
sub
test
fisttpl
add
cld
cmp
out
or
push
jle
decb
xor
push
dec
or
out
popa
xchg
mov
cmp
dec
pop
bound
and
push
fs
bound
mov
xor
adc
ror
cmp
scas
out
adc
jle
push
fistps
ficompl
test
outsl
sti
sbb
into
inc
popa
call
add
xchg
std
jecxz
cld
xchg
mov
insb
hlt
push
jp
adc
xlat
scas
mov
sub
stc
xchg
dec
frstor
mov
insb
dec
scas
mov
inc
cmp
test
pop
mov
out
mov
sub
test
cmp
xor
xor
dec
fwait
test
jno
pop
xchg
icebp
rcr
cmpsb
mov
add
lcall
push
fdivrs
xchg
daa
je
sarl
repnz
pushl
add
in
pop
cmp
rcll
out
idivl
or
lock
in
dec
cld
jo
int3
add
rcr
stc
rolb
jno
out
dec
push
and
sbb
shr
mov
outsb
pusha
jb
push
and
or
iret
xlat
lcall
icebp
stos
mov
and
mov
mov
mov
sbb
cmc
pop
aam
les
adc
addl
out
cltd
or
orl
fwait
push
vmread
lahf
nop
gs
cli
add
inc
cltd
stos
mov
pop
cli
ss
inc
ret
lret
es
xchg
scas
pop
xor
add
fdivp
sbb
std
mov
adc
enter
mov
mov
mov
ds
push
mov
int
shrl
pop
stc
pop
or
push
jge
sbb
scas
jmp
insl
xor
jno
lods
dec
loop
movsl
sub
adc
or
pop
add
sub
push
subb
les
mov
push
popa
cld
jp
out
lahf
mov
dec
adc
stos
daa
dec
mov
sbbl
pop
dec
jae
pop
imul
mov
clc
aaa
inc
jp
rcll
inc
lahf
into
xchg
cltd
popa
mov
lcall
sub
or
test
hlt
mov
cmp
lea
movsb
mov
xchg
sarl
gs
stc
loop
xchg
ret
push
xchg
adc
push
mov
jle
xor
cmc
insl
loope
loopne
push
pop
jbe
adc
mov
adc
je
sbb
lods
ljmp
rcl
dec
inc
fs
addb
or
mull
pop
sti
jo
les
xchg
shl
mov
fimuls
hlt
andl
jae
sti
scas
or
sbb
xchg
lahf
xor
mov
lahf
pop
pop
shll
or
push
inc
inc
cmp
mov
loopne
mov
mov
andb
mov
mov
push
sbb
rcrb
mov
xchg
mov
jno
push
mov
mov
sub
sbb
mov
outsb
or
inc
test
pop
or
jge
in
jnp
out
ret
addr16
mov
mov
mov
cmp
cmp
lret
aaa
cmpxchg
jmp
sub
push
mov
jns
xor
aad
jl
imul
mov
leave
push
and
shl
push
inc
imul
mov
jns
push
mov
or
mov
or
xchg
loop
je
pop
pop
out
xchg
daa
mov
sti
in
int3
cmp
mov
lcall
add
in
movsb
divb
jae
xlat
adc
mov
inc
fs
pop
insl
test
mov
dec
es
jb
enter
lcall
lds
push
movsb
cmp
xchg
stos
mov
icebp
sbb
add
mov
and
sub
movsl
mov
push
sub
leave
jae
sub
push
stos
xlat
or
mov
inc
mov
xchg
in
in
je
push
inc
inc
dec
clc
xlat
int3
xchg
xor
sbb
push
xchg
call
add
cmp
and
imul
and
push
cwtl
out
push
aaa
ret
add
lret
gs
aaa
inc
test
mov
addr16
lea
aas
cmp
cmp
es
and
shll
xchg
sub
outsb
push
in
imull
nop
push
add
xchg
cmp
sub
nop
aad
pop
shlb
dec
mov
sbb
lods
ret
test
jmp
movsb
sbb
int3
jnp
test
jge
add
xchg
pop
inc
movsb
inc
dec
scas
push
movsb
jmp
adc
and
leave
fisttps
loopne
mov
imul
leave
jg
cmp
hlt
sbb
mov
shl
movsb
pop
gs
movsl
out
adc
sub
ret
sbb
pushf
imul
and
cmpsl
mov
sub
aam
stos
fsubrp
movsb
std
fistps
mov
pop
xlat
xor
fmulp
pusha
ss
aas
shll
push
cltd
cmc
mov
neg
xchg
sub
imul
cvtps2pd
out
inc
pusha
mov
push
clc
cmpsb
fnstenv
mov
mov
mov
aaa
out
jno
dec
cltd
cmovg
or
daa
mov
sti
insb
and
bound
lock
cmp
hlt
inc
pusha
fdivs
jg
das
cmp
int3
mov
jmp
sarb
fcom
adc
or
cld
out
mov
add
daa
mov
adc
sbb
popa
mov
loop
jne
aaa
lea
inc
or
fwait
cmp
mov
mov
das
mov
fiadds
mov
ds
mov
out
cmc
test
adc
xor
mov
jno
jbe
xor
clc
mov
leave
cmp
iret
mov
xchg
fisubs
pop
ss
or
mov
pushf
mov
ret
ljmp
add
movsl
insb
cmp
xchg
test
add
fmull
cmpb
push
xor
pop
mov
and
stos
push
sbb
and
mov
inc
clc
pushf
iret
pushf
mov
out
dec
fdivp
lahf
cld
xor
cmpsl
adc
xor
ljmp
in
cltd
stc
inc
push
lea
push
inc
mov
add
mov
xchg
ret
adc
pop
mov
mov
insl
test
dec
dec
inc
mov
jo
sti
inc
adc
xchg
sub
and
push
ja
sbb
mov
int3
sub
mov
pop
jae
xchg
sbb
pop
sub
js
leave
sub
or
test
pop
and
xchg
mov
and
idiv
push
push
push
popl
cmpsb
repz
aam
jbe
mov
xlat
xchg
jae
or
push
and
lods
push
popa
gs
std
imul
push
or
add
mov
jle
lahf
mov
scas
mov
adc
into
dec
push
push
inc
pop
xchg
ja
ret
out
and
imul
push
outsl
xor
movsl
push
js
jb
xor
jno
pop
js
hlt
ds
mov
popf
push
pop
loopne
dec
hlt
push
jl
insl
xor
push
int3
xlat
jnp
dec
sub
clc
jg
add
aaa
rsqrtps
push
jge
push
mov
and
pop
cmpsl
cs
int3
cltd
jb
sbbb
pop
push
or
xor
mov
ja
lock
rolb
pop
cmpb
mov
pop
insl
test
nop
sti
test
icebp
inc
enter
cmp
dec
stos
mov
push
daa
inc
es
sbb
loope
lahf
addr16
xlat
xchg
lret
pop
mov
mov
cmp
push
push
or
ja
sub
in
sbb
push
dec
xlat
or
clc
cmp
cmp
xchg
cmpsb
jmp
into
mov
mov
in
or
nop
mov
jmp
sbb
mov
pop
lret
in
sbb
lahf
sbb
jns
iret
shrl
cmpsl
cmp
mov
pusha
sarb
push
testl
xor
inc
fwait
sub
and
movsl
outsl
xor
lds
sahf
mov
repnz
add
mov
or
dec
cld
int3
pop
sub
sbb
movl
xchg
insl
xchg
mov
and
fsubr
in
dec
enter
sbb
incl
stos
and
sahf
dec
gs
out
movsl
xorl
xchg
push
mov
and
dec
xor
inc
adc
lods
in
pop
xchg
es
into
insl
mov
jae
ficoms
dec
inc
jg
pop
mov
xchg
movsl
push
cmpsb
in
iret
cwtl
idivl
iret
stos
dec
shl
mov
xor
in
dec
imul
inc
aad
je
pop
outsb
ljmp
inc
ret
test
call
nop
sbb
shrb
test
repz
push
mov
add
mov
insb
push
push
in
gs
clc
cmp
iret
flds
pop
adc
adc
push
ss
out
call
inc
mov
out
daa
fidivl
adc
jmp
lcall
roll
sub
movb
mov
leave
pop
les
jae
mov
hlt
mov
filds
test
sbb
mov
jle
jnp
jl
loopne
mov
cmp
addr16
xchg
adc
das
loope
inc
inc
xchg
or
pop
mov
sti
jg
push
in
pusha
rclb
scas
mov
sbb
mov
mov
jmp
outsl
dec
in
inc
add
hlt
add
inc
leave
jae
cmp
sub
ds
xor
and
sahf
stc
fmul
push
sub
pop
pop
mov
cmpsl
and
test
inc
sahf
cld
sbb
mov
pusha
out
jmp
add
mov
pop
or
je
mov
jmp
out
jo
mov
loop
shr
mov
jne
fldl
icebp
out
xor
inc
lcall
mov
mov
popa
push
sub
or
add
add
orl
std
and
loope
mov
iret
out
fdivrl
repz
outsl
cmp
mov
xchg
popa
pop
jae
out
sar
pop
xchg
lods
jnp
or
pop
pavgw
xchg
mov
paddq
push
add
insb
cli
jb
adc
cmpsl
scas
pop
push
dec
dec
loop
xchg
sti
mov
push
test
inc
push
mov
inc
xor
mov
lcall
inc
mov
jle
out
out
xor
mov
cmp
out
sbb
fcomp
xchg
icebp
xorb
lock
rolb
adc
sub
fcmovnb
lret
lcall
and
xlat
scas
lahf
fs
xchg
push
test
arpl
xchg
into
adc
mov
rcrb
mov
cltd
mov
sbb
cmp
popf
add
cmp
jg
mov
or
outsb
gs
lret
sbb
imul
jae
rcrl
stos
sbb
stc
xchg
cmp
lcall
jge
jp
jmp
lea
xlat
ja
aam
int3
jge
cmp
cmp
jle,pt
je
dec
inc
int
lret
and
xchg
ds
jl
and
jle
push
mov
pop
in
mov
sahf
in
inc
xchg
pop
or
xor
xlat
iret
jbe
inc
roll
nop
dec
and
jne
jp
cmp
dec
lea
sahf
push
sub
das
call
les
cwtl
gs
sti
mov
lcall
sbb
push
enter
lds
ljmp
mov
gs
xor
and
pop
xor
movb
movsb
sub
jb
mov
dec
out
adc
inc
sub
arpl
test
int3
xchg
and
adc
and
mov
repnz
jp
js
adc
push
pop
push
fnsave
cmpsb
sub
sbb
aam
fimull
movsb
ret
es
inc
aad
popf
jbe
or
sub
adc
xor
mov
loopne
imul
mov
cmpsl
cs
or
mov
sahf
mulb
lcall
lea
daa
ret
leave
gs
or
inc
add
int
push
adc
clc
pushf
inc
inc
add
inc
sub
ret
sub
or
loop
xchg
sbb
push
imul
push
adc
or
add
aam
and
xor
and
test
push
js
jl
mov
rcrl
jbe
jae
fnstcw
fs
mov
out
xor
idivb
lahf
pop
aas
outsb
mov
in
je
dec
addr16
subl
xchg
dec
xchg
aam
rol
add
xchg
jnp
leave
nop
sbb
rcrb
dec
loopne
adc
ljmp
and
shlb
push
pop
lock
and
mov
dec
cmpsl
lods
fstp
addb
fsubl
iret
les
mov
mov
push
addr16
sbbb
push
mov
repnz
push
mov
fmul
test
pop
or
jb
pop
lods
orl
repz
bound
rclb
shll
test
stos
sub
lea
push
outsl
mov
xchg
lods
in
and
sub
adc
push
xor
sti
icebp
cli
jns
push
cmpsb
lret
movsb
imul
mov
add
and
lods
lock
out
jbe
imul
mulb
enter
or
movsl
ficomps
cmp
in
mov
sbb
jl
mov
ja,pn
pop
cmovo
ja
aad
inc
lret
loope
pop
jle
ljmp
push
loopne
mov
jmp
cmp
and
push
dec
je
mov
rcll
insb
mov
sbb
pop
jmp
cwtl
in
sbb
cmp
mov
push
or
inc
push
lret
scas
iret
ret
icebp
add
sahf
dec
sbb
rcl
das
sub
cmpsl
mov
adc
iret
cmc
jge
addr16
mov
and
add
mov
cmp
aam
clc
jbe
push
mov
lahf
sbb
cld
in
and
add
stos
push
stc
xlat
adc
mov
mov
outsl
jl
or
push
jne
int
cmpsl
repnz
pop
xchg
fidivs
jl
and
pop
lods
sbb
daa
fisubrl
push
jne
add
dec
mov
mov
dec
inc
cli
loopne
jmp
out
push
in
mov
xor
cli
xlat
out
mov
push
jp
jb
outsb
push
and
inc
ja
pop
push
mov
xchg
xchg
xchg
rolb
es
xchg
xchg
add
jle
xchg
sbb
mov
xchg
in
loopne
pop
ds
or
or
insb
clc
jmp
or
sub
mov
cltd
ljmp
in
inc
imul
xchg
inc
xor
int
cmp
jns
xchg
cld
mov
fistl
testl
mov
dec
dec
sub
xchg
jecxz
or
jb
add
sbb
imull
mov
clc
in
call
cmp
call
adcl
mov
psubusw
adc
out
into
sub
lcall
and
nop
cwtl
repz
jle
xchg
sbb
dec
and
xchg
add
adc
stos
sbb
pusha
dec
fsubrl
pop
sbb
aas
cmp
fists
notl
std
lret
mov
inc
sbbb
fs
or
xchg
or
shlb
push
sahf
pop
jle,pt
or
dec
cmp
xchg
xchg
stos
mov
xchg
icebp
jns
popf
lcall
cmp
repnz
std
and
xchg
dec
aam
push
cs
mov
js
sub
fs
xor
rcrb
adc
repz
aam
ds
insl
xor
test
mov
fsub
xchg
aam
cmp
mov
mov
aaa
push
mov
es
xchg
cmp
mov
push
fsubrl
and
mov
addr16
jae
jl
push
add
into
inc
push
or
mov
shl
psubb
mov
inc
xchg
dec
andb
mov
cmp
push
in
inc
pushf
clc
and
pop
mov
cltd
mov
mov
inc
aas
mov
mov
xor
add
sub
xchg
add
f2xm1
ret
inc
leave
cmp
sub
sarl
mov
subl
and
sbb
pop
cmp
lret
pop
xor
jecxz
mov
dec
push
mov
decl
cli
mov
cmc
pop
xor
call
lret
shll
mov
out
shll
adc
jb
in
lods
sub
scas
push
aad
add
sbb
push
bswap
mov
imulb
mov
std
in
out
lcall
xchg
jae
cmp
data16
inc
xchg
cs
mov
inc
je
push
xor
fidivrs
sbb
mov
loopne
daa
shll
leave
iret
mov
out
push
push
jns
sub
xchg
sub
cmpl
mov
out
xchg
sbb
pusha
in
sbb
xchg
mov
loopne
loope
sti
movsl
popa
mov
scas
jecxz
ret
jo
lcall
inc
negl
lods
stos
mov
inc
inc
movl
imul
ret
mov
shll
add
int
cmp
xlat
movsl
pop
int3
iret
dec
into
dec
hlt
mov
data16
fisubrs
mov
icebp
mov
lahf
aas
mov
lea
mov
scas
pushf
icebp
mov
es
movsb
dec
pop
jno
mov
jb
gs
and
aaa
or
xchg
inc
xchg
jg
inc
mov
mov
in
mov
int
push
lock
jl
mov
les
dec
mov
xchg
sarb
mov
push
in
dec
or
cmpb
aam
mov
xor
repnz
iret
or
xchg
arpl
sbb
lods
orl
scas
adc
mov
jge
pop
push
dec
aaa
bound
sub
pop
setbe
imul
mov
mov
and
ret
test
inc
jg
movsb
sbb
stos
cmp
cmpsl
pop
sub
fbld
and
push
shll
pop
or
jns
inc
imul
mulb
out
or
mov
jg
lahf
mov
push
and
xchg
adc
or
pop
cmpl
jnp
lahf
cmp
fst
mov
gs
pushl
dec
andb
xlat
lock
jnp
arpl
pushf
jb
bound
pushf
fidivs
std
push
inc
sub
dec
or
mov
add
fnstenv
and
push
and
dec
push
cmp
jbe
push
push
pop
shlb
insl
xor
sbb
mov
dec
fdivrl
in
push
pop
int3
lock
or
stos
push
jl
jp
sbb
push
inc
jge
dec
loopne
shll
xor
cwtl
sub
jb
les
mov
mov
mov
cmc
idivl
iret
out
scas
mov
inc
mov
pop
inc
fcmove
lds
je
xchg
call
dec
popf
icebp
dec
sbb
push
dec
mov
addr16
icebp
sbb
sahf
push
cli
mov
je
leave
push
lock
mov
daa
loope
xchg
mov
push
xchg
clc
jnp
sub
mov
jp
and
bound
jecxz
and
jle
fwait
or
adc
sub
jg
and
cmc
les
push
pop
test
roll
imulb
ja
xchg
push
pop
mov
stos
inc
adc
stc
mov
xchg
push
in
sarb
mov
add
leave
inc
add
lret
shlb
nop
test
icebp
shll
cmpsb
test
insb
jb
sbb
add
mov
aaa
jg
push
dec
cmp
cmp
and
icebp
stc
sub
jbe
push
out
add
shll
push
xchg
cmp
data16
mov
enter
push
das
sub
pop
fidivs
fldcw
jns
inc
rcl
push
push
testb
lock
xchg
mov
stos
adc
push
pop
and
adc
je
or
pop
xchg
cld
inc
scas
xor
mov
sub
mov
add
cltd
call
data16
xor
xchg
pushf
imul
cmp
xchg
mov
mov
mov
lret
inc
scas
sbb
sub
je
cwtl
or
jnp
sbb
xchg
mov
mov
inc
shl
inc
inc
sub
or
push
jo
push
arpl
mov
cwtl
inc
ret
lods
ret
daa
ljmp
icebp
lods
and
and
aaa
mov
rol
mov
adc
mul
cld
mov
inc
adc
xchg
rol
xor
test
jb
sub
mov
sbb
add
std
fdivrs
mov
mov
sub
je
push
fdivr
jge
out
arpl
mov
add
mov
cld
cmp
mov
out
xchg
stos
shlb
aam
jmp
mov
popf
sbb
mov
mov
xlat
add
inc
pop
or
adc
cld
add
mov
in
cmp
dec
or
mov
pop
add
adc
mov
xlat
lods
jb
ljmp
or
mov
push
int
lock
inc
aaa
pop
arpl
pmulhuw
clc
cmp
das
ljmp
jae
xchg
mov
shlb
mov
dec
shll
mov
adc
xchg
push
pop
xor
xchg
push
roll
cmpsb
outsl
mov
xchg
cmp
mov
sahf
add
ret
cltd
inc
push
or
test
addr16
fstps
add
lret
mov
xchg
jo
scas
das
cmpsl
sahf
and
xchg
inc
cmp
mov
add
rcr
cwtl
xor
int3
mov
or
stc
xrelease
fwait
mov
loope
pop
jmp
test
mov
insb
pop
fistpl
icebp
cmp
cmc
aas
mov
pop
mov
or
mov
inc
mov
loopne
test
jb
hlt
hlt
movsl
roll
aam
stos
mov
mov
ret
or
push
adc
xchg
outsl
jl
scas
vpandn
fcoms
stos
inc
test
push
pop
or
andl
dec
lcall
ljmp
jmp
in
fidivrs
inc
xchg
inc
cltd
loopne
addr16
insl
adc
arpl
pop
out
pop
fdivrl
stos
negl
adc
and
clc
movsb
inc
iret
jns
mov
arpl
popa
rcrl
lret
les
sbb
cmp
mov
mov
sub
and
shll
out
orb
xchg
mov
icebp
jo
jecxz
jae
leave
aam
aas
clc
les
mov
ljmp
repnz
ss
ret
cs
pushf
std
cmpb
repnz
lock
mov
rcrb
cmp
movsl
jo
or
popf
or
jmp
fadd
dec
rcrb
or
lret
pop
mov
rcr
into
sbbl
loope
ficoms
fnsave
inc
pop
or
bound
fistl
jl
jbe
mov
push
mov
ja
popf
roll
cld
push
addr16
nop
addb
mov
push
ret
or
push
outsb
dec
sub
movsb
sbb
mov
or
pop
xor
call
fsubl
cmp
insb
mov
push
out
xchg
negb
or
in
mov
mov
inc
xchg
fadd
mov
roll
ret
imul
jge
xchg
inc
es
xor
fildll
jg
cmc
enter
push
mov
xchg
hlt
icebp
stos
add
lret
out
jg
movsb
pushf
test
insl
lcall
add
test
scas
push
pop
sbb
cmpsb
loop
imul
cmp
enter
scas
push
fwait
inc
scas
iret
xor
jb
outsb
pop
jne
push
nop
xor
sub
idiv
mov
in
outsl
out
or
cmpl
cmp
popf
es
out
push
sbb
dec
jns
bnd
or
jg
subb
push
loop
xchg
mov
cmpsb
fstpl
rcrb
scas
fs
sahf
push
xchg
mov
les
fistpl
mov
jbe
stc
jge
add
add
and
jb
inc
js
cmp
sub
dec
out
scas
push
lods
add
mov
jg
sbb
sub
and
mov
adc
jne
inc
mov
cmp
icebp
mov
popf
int
int
jb
push
stos
loope
cmpb
xchg
xchg
in
ret
imull
add
add
add
out
inc
mov
adc
and
inc
fildl
in
dec
cltd
stos
in
mov
into
jle
xor
or
lcall
sbb
add
lret
data16
push
jno
cmp
int3
pop
mov
ret
pop
lds
jno
inc
aad
fistpll
and
xor
sti
push
sti
in
rorl
mov
stos
inc
test
jecxz
movsb
lds
into
testl
jecxz
test
sbb
je
xlat
mov
pop
lods
pop
add
dec
adc
cmpsb
filds
aad
setno
rcrl
into
out
pushf
addl
sbb
fsubrp
mov
dec
ja
xor
inc
cmp
push
mov
sbb
fmul
push
jge
loope
mov
cmp
push
cmp
std
sbb
mov
xchg
xchg
popf
jmp
sbb
cmp
dec
inc
sbb
jmp
popa
jecxz
xchg
call
stos
push
push
inc
xor
push
lret
out
pop
fisttps
adcl
jbe
dec
xchg
xor
outsl
push
mov
adcb
sub
pushf
fs
dec
mov
jnp
movl
sub
sahf
cmc
sbb
int
lret
cmpsl
pop
xor
leave
movsb
loopne
imul
out
mov
mov
test
fistpll
ja
popa
jp
out
enter
cmp
cmp
clc
outsb
into
sbb
fnstcw
jg
jbe
cmp
out
lods
popf
rcrl
js
adc
cmc
cmpsb
or
mov
adc
pop
xor
out
inc
hlt
int
lds
stc
sbb
bound
mov
fldt
and
pop
loop
loope
lea
mov
addr16
push
and
lods
ret
int3
std
and
ss
pop
add
ret
shl
loope
cmc
faddl
cmp
stos
subl
cmp
adc
mov
inc
icebp
adc
and
pop
leave
shll
mov
lret
pop
roll
cmp
int
ret
int3
iret
mov
cwtl
lds
loop
movsb
std
and
sub
call
inc
and
in
push
aaa
repnz
lahf
fcmovnbe
popa
cld
sub
cmp
cmpl
data16
xor
xchg
sub
xor
lcall
dec
jge
pop
and
jl
test
in
repz
aas
shrb
xchg
jge
jge
or
inc
cmc
es
popf
testb
xor
into
test
por
mov
fisubrs
andl
leave
decb
and
add
das
xchg
mov
dec
lahf
mov
sub
adcl
sub
aad
fdivr
aaa
fcomip
mov
cmpb
jmp
push
mulb
mov
je
lods
adc
insl
inc
mov
push
or
int3
jge
xchg
movsl
add
ret
loop
mov
pop
push
adc
sarl
inc
mov
add
add
sub
ss
les
jns
xor
mov
and
mov
xchg
fisubrs
adc
adc
push
jmp
dec
sub
xchg
mov
int3
pop
in
dec
cltd
cwtl
es
lret
mov
or
push
jle
sub
fwait
mov
mov
sub
andb
mov
pop
out
or
xor
xchg
jo
and
sbb
aaa
fwait
xchg
inc
push
jno
sbb
imul
mov
out
dec
sub
mov
cmc
leave
sbb
xor
xchg
pop
outsb
pop
les
push
rolb
mov
fs
les
insl
cmp
push
jae
sbb
inc
pop
pop
jecxz
or
inc
or
dec
aam
sbb
pushf
add
pop
outsb
arpl
loop
mov
cmp
pop
loop
cmp
mov
mov
ret
xchg
cmp
aad
fiaddl
arpl
jns
leave
jnp
shrl
mov
int
push
fildl
js
dec
aam
jl
adc
es
popa
aas
movsl
lds
divb
fisttpl
cli
or
fldl
lods
sbb
push
fs
fsts
aad
les
sbb
cmp
mov
mov
lcall
mov
xchg
insl
xor
pusha
pop
pop
mov
mov
sub
cld
jo
sub
ficoms
jnp
jge
add
push
jp
mov
outsb
sarb
xor
push
mov
movsl
loope
sbb
outsl
inc
dec
mov
mov
nop/reserved
filds
aad
dec
mov
pop
lahf
arpl
xchg
push
mov
sbb
mov
adc
fiadds
and
cmpsl
shlb
cmp
adcl
xor
js
int
mull
out
aas
pushf
cmp
adc
into
lds
femms
movsl
pushf
aaa
scas
stc
adc
icebp
adc
add
sbb
nop
sti
frstor
fstps
cld
adc
outsb
xorl
outsl
stos
stos
in
pop
add
pushf
arpl
mov
cmpsb
pushl
insl
inc
icebp
mov
cmp
add
mov
gs
js
mov
pop
clc
pop
mov
xor
lahf
repz
jno
mov
lock
mov
adc
push
mov
lret
pop
out
data16
repnz
inc
insb
dec
push
movsb
pop
xchg
xchg
or
jno
inc
sahf
stos
sbb
jno
jl
sahf
or
outsb
cmp
ret
std
dec
xor
lods
sahf
xchg
mov
imul
xchg
movsb
insb
mov
sti
out
inc
adc
push
imul
add
cmp
movsl
push
jmp
loop
xchg
fildll
sub
iret
addl
or
hlt
cmp
cmp
mov
cwtl
scas
cld
cmp
fnstcw
out
fstpt
loop
sub
arpl
pop
mov
ret
push
jge
mov
imul
lds
push
je
cmc
mov
jae
dec
call
mov
cld
outsl
repnz
xor
mov
enter
cmp
jecxz
cmpsb
or
add
cltd
das
adc
mov
pop
mov
hlt
sbbl
pushf
out
xor
sbb
ror
daa
xor
in
dec
jge
jae,pt
sub
dec
test
cs
fnstsw
adc
loope
cmp
fwait
ljmp
movsl
mov
loope
repz
loopne
xor
cmp
ds
daa
and
sub
arpl
mov
daa
outsl
cmp
fmull
js
ljmp
jns
pop
je
test
mov
xchg
jmp
ja
neg
pop
jmp
pop
jb
shrd
in
divb
sahf
inc
push
outsl
dec
sahf
stos
scas
cmp
mov
and
repz
cld
sbb
jecxz
xor
and
jp
pop
aaa
sbb
dec
xor
jecxz
push
pop
jl
xor
push
test
xorl
les
stos
push
inc
jb
aaa
push
jle
cmp
aaa
aam
adc
dec
adc
into
jl
push
movsl
sbb
adc
mov
stos
jmp
add
fisttpl
push
in
repz
in
jns
aaa
nop
shrl
jae
and
mov
mov
and
rolb
inc
xchg
cwtl
lods
dec
mov
dec
jb
cbtw
adcb
cmp
test
cmpsl
jbe
movsb
sub
fwait
test
and
popa
push
aaa
pop
cmp
inc
mov
cmp
insb
lret
xchg
sbbb
mov
and
scas
xchg
adc
gs
int
xor
stos
sub
negl
jne
jl
roll
sbb
call
and
cs
pop
add
cwtl
loop
push
popf
jmp
outsl
andb
enter
ret
cmovp
adc
test
std
dec
mov
cmp
push
jbe
push
stos
fildl
adc
sbb
mov
cmpsl
mov
and
add
inc
inc
leave
sahf
mov
cmc
or
in
out
incb
or
into
jb
dec
jge
cltd
iret
pop
mov
loop
sti
inc
inc
sub
arpl
jb
sub
pop
popa
ja
inc
test
xor
ret
pop
jmp
out
mov
mov
cmp
pop
sub
nop
stos
idivl
aam
xchg
mov
ret
jg
adcl
ud0
jne
paddq
insb
mov
adc
inc
cmp
cmpsb
in
cld
jp
xchg
fcompl
popf
mov
dec
sbb
or
or
ja
dec
sbb
sub
dec
adc
mov
mov
fcmovb
mov
sbb
cmpb
iret
mov
sub
inc
mov
cmp
jl
sub
push
mov
dec
leave
repnz
mov
data16
hlt
cmp
sub
das
lds
and
or
les
jge
rorb
jns
push
mov
sti
adc
jle
sbb
and
sub
inc
pop
jb
adc
aad
mov
jmp
ficomps
cmp
lock
popf
mov
mov
mov
enter
push
dec
xchg
sbbl
lea
enter
fistpll
pop
mov
inc
sub
fstpt
es
iret
dec
dec
jns
jno
outsl
push
and
in
push
loope
loopne
pop
pushf
and
lcall
fidivrl
mov
mov
jmp
in
fcompl
dec
cld
addr16
lret
adc
mov
imul
divl
js
mov
stos
mov
dec
push
cmpsb
fwait
out
sti
fmull
cmp
pop
out
sarl
sub
rcll
rcrb
fisttps
jnp
push
clc
xchg
out
imul
call
xchg
push
or
add
test
push
pop
push
out
push
lahf
xchg
movsb
pop
and
das
loop
or
lret
lods
stos
das
jl
rcrb
jmp
into
shrb
lret
or
bnd
mov
or
sahf
add
sub
mov
imul
mov
loope
dec
pop
es
je
push
adc
dec
outsl
add
mov
or
cmpsb
fsubrl
pop
test
xor
pop
xchg
sub
xchg
add
sbb
fnstcw
lock
xor
jle
pop
pusha
cmp
nop
ja
dec
aas
xchg
testl
and
mov
js
dec
divl
int3
lret
fisubrl
aaa
scas
aaa
data16
dec
leave
adcl
pop
xchg
dec
fsub
lahf
pop
lds
in
lods
or
icebp
mov
mov
jg
cmpl
pop
jo
or
mov
xchg
sbb
or
shl
sub
idivb
cmc
xchg
stc
pop
imul
stos
lods
sub
push
push
mov
dec
xchg
aad
xor
aaa
pop
jp
mov
loope
add
sbb
cmp
mov
sahf
jg
inc
pop
sub
xor
push
or
pop
addr16
push
xor
pcmpeqd
xor
rcr
or
aam
pop
int
lcall
mov
jecxz
add
insl
imul
xchg
cmp
outsb
sbb
push
mov
sub
sbb
jle
pop
mov
or
rcll
repnz
adc
fdivs
mull
inc
mov
rclb
dec
mov
add
cmp
in
add
data16
movsl
mov
cmpsb
nop
pop
lret
das
jl
sbb
lahf
cmp
insb
clc
popa
add
into
push
bound
adc
test
pop
je
and
push
out
sbb
je
jmp
push
les
cmpl
sti
iret
add
mov
test
movsl
push
ljmp
cli
cld
push
mov
jmp
and
xchg
add
adc
rol
cld
jo
aas
xchg
jge
push
inc
xchg
stc
test
enter
push
incb
sarl
sti
jbe
mov
sbb
mov
leave
lcall
add
pop
int3
ja
insl
push
lret
sub
add
mov
jmp
pop
test
in
fdivs
mov
push
je
pop
insl
into
xchg
adc
xor
push
loopne
jbe
in
mov
or
stos
jbe
cld
mov
jae
fabs
pop
cmc
ss
ret
ret
fstl
stos
xchg
imul
adc
shll
add
cs
lret
loop
pushf
scas
int3
xor
xchg
mov
pop
cmp
pop
lahf
scas
sub
test
inc
int
icebp
or
mov
mul
popa
loop
cmpsl
sub
xlat
add
pop
inc
or
movsb
xchg
sub
ret
xlat
cmp
repnz
inc
jecxz
mov
sbbb
cmp
test
movsl
inc
mov
movsl
xchg
test
data16
imul
out
push
hlt
call
fs
insl
jbe
mov
push
call
es
mov
cltd
mov
xchg
arpl
imul
cmp
cs
mov
or
mov
notl
js
jmp
cli
or
sub
push
aaa
fsubp
sbb
mov
mov
sbb
jae
stos
dec
in
sbb
fprem
sbb
push
mov
daa
lret
mov
cmp
pop
xchg
aam
and
jge
int
sahf
jg
dec
mov
ret
cmpsl
xor
mov
adc
aam
mov
pop
mov
sub
dec
jle
sbb
cld
out
jns
fcmove
lret
push
imul
push
test
in
addr16
popa
cmp
dec
cmp
pop
sbb
push
xor
xchg
pop
dec
pop
xor
fsubp
push
mov
andl
cmc
adc
jge
je
jl
or
and
insb
mov
jae
pop
adc
stos
dec
insb
cld
lods
xchg
jo
icebp
daa
cmp
push
bound
sahf
inc
mov
sbb
adc
out
mov
sub
fs
or
xor
call
pop
dec
ret
push
jb
lcall
xchg
mov
iret
sub
and
xor
xor
xlat
mov
lock
mov
pop
mov
in
fdivrl
daa
pop
push
test
dec
dec
push
mov
mov
aad
fs
ret
daa
shrb
adc
jmp
icebp
inc
add
dec
andb
cmp
fmull
pushw
fdivs
outsb
push
ljmp
pop
or
cmp
cmp
lds
cmpsl
addl
arpl
mov
sbb
sarl
xor
dec
scas
das
push
mov
lea
jns
fs
xchg
decb
dec
int
push
rcll
aas
sub
icebp
lock
push
sbb
cmpsl
push
jno
insl
fucomip
and
jno
pusha
xlat
scas
or
add
add
pop
mov
ss
cmp
push
lret
xchg
lret
fcmovb
mov
and
add
fdivp
xor
or
cltd
imul
adcl
jl
enter
sbb
lahf
and
and
cld
js
jae
xchg
push
cmpsl
int
sub
fucomp
pop
test
add
rcrl
fucom
xchg
test
or
imull
arpl
xchg
idivb
xchg
outsb
hlt
ficoml
fisubrs
mov
lcall
add
mov
sub
test
mov
cmp
data16
sub
out
push
adc
jp
jmp
dec
adc
pop
ljmp
xor
and
sbb
imul
movsb
popf
orl
les
sub
sti
inc
inc
ja
push
or
push
int3
pop
adc
pop
adc
out
inc
or
xchg
insl
dec
fldt
repnz
adc
add
xor
pop
insl
int
xchg
sbb
cli
mov
cmp
jnp
decl
inc
cltd
stos
xor
into
pop
aad
inc
dec
mov
xchg
loopne
jl
mov
pop
mov
push
pop
sub
repnz
inc
pop
xchg
das
push
mov
fs
xor
xorb
sbb
cmpsl
mov
jno
push
xor
jns
dec
push
out
mov
lods
sti
mov
or
push
and
ljmp
inc
int
test
pop
ja
adc
xchg
xor
popf
in
xor
or
es
sti
data16
in
pop
push
mov
enter
loope
insb
or
filds
mov
cmp
adc
xor
rcll
dec
pusha
sbb
pop
add
mov
aaa
mov
rolb
in
std
daa
mov
push
push
into
or
faddl
sub
jo
adc
movsl
mov
dec
mov
mov
aaa
stc
test
enter
in
xor
cld
mov
mov
clc
lahf
sbb
jmp
in
stos
cld
push
orb
fs
cld
adc
jmp
scas
jp
or
lods
jb
push
xchg
add
div
and
sub
mov
mov
fld
hlt
sbb
ret
les
lret
adc
cmp
push
in
ljmp
mov
aas
xchg
inc
xlat
pop
pushf
xchg
sub
aad
pop
jg
sbb
ds
std
jnp
jmp
cmp
pop
xlat
stc
pop
dec
cmpsl
pop
pop
adc
adc
rcr
adc
imul
pop
jecxz
pop
sahf
pop
adc
mov
mov
xchg
add
scas
push
cmp
cmp
in
push
cmp
mov
dec
outsb
addr16
add
mov
cli
imul
mov
mov
lock
pop
cmp
dec
and
arpl
push
es
push
loop
int
pop
sbb
cmpsl
sub
pop
cltd
or
es
repz
test
repnz
xchg
aad
rcll
inc
sbbb
sbb
arpl
ja
test
xor
stos
int3
dec
xor
bound
test
in
pop
iret
hlt
sbb
imul
dec
incb
push
rcll
cmp
add
push
push
or
int3
outsl
push
jmp
ljmp
aam
inc
test
add
sbb
imulb
loope
pusha
jl
das
and
cmp
ss
fisttpll
repz
or
xchg
lcall
ds
adc
std
call
mov
adc
xor
dec
cmp
das
push
iret
mov
out
mov
je
cli
jl
adc
aad
inc
sbb
inc
xchg
mov
aas
lret
jp
daa
mov
adc
sbb
test
xchg
cmp
int
jle
imul
enter
push
dec
mov
es
xor
mov
repz
loopne
cmp
das
jae
cli
scas
sti
xchg
xchg
gs
mov
aad
push
or
jns
cmp
inc
loopne
cld
daa
sbb
adc
push
ret
mov
out
xor
cli
mov
jecxz
test
arpl
pop
inc
je
leave
sbb
aam
dec
in
stos
test
test
jecxz
mov
lret
cmpb
ficoms
xchg
push
out
cmpsl
out
sub
push
pop
icebp
cmpsl
mov
outsl
scas
adc
push
and
scas
push
dec
mov
fwait
jmp
sub
ljmp
js
pop
aad
test
and
ds
ds
jp
leave
xor
and
js
xor
rcrb
fildl
xchg
lret
mov
mul
inc
rcr
out
pop
mov
add
add
xchg
movsl
mov
mov
jmp
popl
cmp
xchg
aam
ds
cwtl
xor
or
incb
mov
fcmovbe
outsl
mov
sbb
xchg
sbb
in
loope
fwait
scas
sub
push
hlt
mov
dec
adc
xorb
lods
roll
pop
mov
mov
push
and
xor
push
mov
and
xor
stc
and
mov
sbb
and
and
and
mov
push
clc
repz
dec
push
jle
arpl
xchg
or
test
inc
adc
imulb
movsl
popf
cmp
icebp
mov
xchg
push
or
js
arpl
aas
mov
in
jg
xor
lret
fbstp
popa
inc
or
sahf
xchg
sub
sbb
sub
push
cmp
mov
xchg
nop
insb
jge
cltd
adc
xor
bound
mov
sub
jmp
sub
push
cmp
push
pusha
jo
sub
cs
xorb
popa
insb
popa
mov
push
inc
mov
leave
rcrl
inc
dec
loope
dec
fisubrs
inc
stos
mov
sbb
jg
imul
cmp
jecxz
and
jo
xchg
adc
das
xor
loopne
lahf
outsb
arpl
cmc
sbb
ja
xlat
mov
test
mov
xor
out
push
in
in
int
inc
push
cli
lods
mov
daa
cmp
push
push
fisubrs
pushf
into
jp
inc
nop
pop
jge
push
push
mov
test
add
ret
dec
push
cmp
iret
adc
xchg
cmp
mov
ljmp
dec
cmpsb
inc
pop
add
stos
cli
cmpsl
scas
aaa
int
ficoms
movsb
xor
lods
es
imul
std
mov
test
icebp
lret
jae
jns
cmp
cmp
sub
cmp
sbb
pop
fdiv
cmp
jg
aas
jecxz
mov
sar
jns
popa
mov
mov
mov
cmp
dec
test
xchg
test
inc
ret
jmp
cmpsl
jecxz
lret
test
push
mov
in
cmp
add
loop
outsl
dec
sahf
sub
jno
test
out
clc
je
addr16
push
and
push
mov
rcrl
shll
cltd
or
push
lcall
int3
fstpl
add
cwtl
cmp
inc
push
xor
fdivrl
or
dec
pop
xor
jns
dec
push
sti
scas
pop
ret
jg
jbe
bound
xchg
out
push
lcall
into
popl
xchg
dec
or
mov
test
dec
jns
lahf
mov
cmp
inc
and
call
mov
dec
lock
xorb
jle
mov
fs
jnp
jp
mov
jg
out
mov
jle
loop
mov
adcl
mov
rolb
mov
inc
scas
nop
repz
xor
sbb
aad
sub
je
mov
mov
pop
daa
jae
xor
xchg
ds
jno
aam
ret
lcall
shll
stos
xor
aam
cli
test
addr16
es
sahf
pop
outsb
cmpb
jg
test
hlt
fwait
movsb
push
push
in
adc
ss
hlt
es
lods
gs
cmp
push
xor
fistl
push
int3
mov
sbb
sbbl
mov
in
pop
std
out
lret
es
add
orl
aas
adc
mov
mov
and
push
sub
stos
orb
popf
insb
lods
leave
pusha
jle
div
mov
jp
fcmovnb
jmp
inc
repz
jo
lahf
mov
in
mov
ret
mov
stos
test
push
iret
in
or
lds
xchg
hlt
xor
add
movsb
xchg
fadd
lock
sbb
add
dec
lret
data16
mov
cwtl
xchg
jbe
out
fsubl
les
out
xor
cmp
pop
outsl
or
fs
or
lahf
jecxz
xlat
push
insb
nop
arpl
les
xor
xchg
or
and
ds
or
stos
lds
rorl
aas
push
movsb
inc
ljmp
fcomps
adc
push
pop
mov
push
ja
outsb
cmp
pushf
push
and
sub
imul
aam
mov
insl
xchg
ret
popf
pop
aad
mov
sbb
hlt
std
enter
in
loop
sub
pop
push
ret
xchg
xor
adc
aas
add
jl
mov
sbb
loope
add
shll
mov
out
cmp
in
lods
adcl
out
or
shlb
mov
dec
xchg
imul
cs
add
and
pusha
dec
jl
cmpsl
fildll
aam
out
rcl
sub
fisubrs
out
push
fsubs
std
sahf
xchg
imul
call
ret
add
xchg
mov
inc
cmp
sbb
aad
push
or
jns
jge
dec
mov
push
repnz
mov
icebp
or
in
out
sub
jmp
xor
adc
dec
and
outsl
std
fadds
xlat
xchg
mov
jge
aas
pop
and
lret
dec
mov
cmp
lea
cmp
jecxz
mov
and
mov
test
xchg
xor
sub
daa
push
cmpsl
in
adc
hlt
das
adc
fxch
sub
shr
mov
and
fistps
push
xchg
adc
stc
mov
fdiv
cmp
outsl
xchg
das
pop
hlt
mov
pop
stos
movsb
xor
hlt
push
cli
inc
iret
dec
push
pop
push
xchg
mov
sahf
pop
stc
mov
divl
sarb
fwait
pusha
rorl
mov
dec
sub
shlb
jge
inc
sbb
clc
aam
gs
or
decl
dec
roll
shll
test
mov
push
rorb
dec
xchg
push
stc
pop
out
mov
mov
cmc
rcrl
push
or
jecxz
loope
fldenv
pop
xchg
ljmp
jnp
leave
ljmp
pop
pop
es
dec
xor
mov
inc
mov
lds
and
loope
xor
xchg
mov
sub
stos
dec
std
cmpsl
mov
jle
out
pop
jle
mov
sahf
adcl
mov
cli
push
inc
aam
xchg
fldenv
mov
sub
lods
xchg
pop
pop
icebp
stos
divl
pop
repz
scas
mov
jle
nop
lret
loop
or
xchg
repz
clc
or
pop
lods
dec
add
repnz
arpl
fdivs
xlat
fisubs
cmpsb
aaa
popa
mov
inc
shrl
push
or
adc
divl
xor
sbb
fwait
jbe
addb
insl
les
imul
fs
cmp
push
pop
call
sbb
mov
push
and
cmp
jnp
push
inc
jb
pop
sbb
test
mov
lods
push
fistl
adc
fneni(8087
idiv
pop
cmp
cmp
mov
dec
mov
addr16
dec
add
pop
jns
cli
adc
cld
add
imul
push
or
out
das
aaa
mov
or
mov
push
cmp
subb
push
add
push
pop
sarb
xchg
fdivl
lods
fwait
dec
imul
mov
fistps
push
adcl
loope
or
cltd
fstl
pop
cmpsl
xor
test
leave
sub
mov
sub
int
cs
jb
push
leave
jae
aas
jae
cmpsl
mov
lock
movsl
fimull
je
mov
lret
dec
add
sub
jecxz
decb
jb
lods
sbb
les
pop
cli
jp
mov
mov
shl
shrl
mov
aam
and
arpl
sub
inc
outsl
sbb
fmull
lret
or
loop
xor
and
pop
inc
js
push
jbe
aam
fs
sbb
sahf
bswap
rorl
inc
shlb
int3
jns
and
mov
cmpl
add
nop
inc
aas
sbb
sbb
leave
data16
lea
imul
pop
dec
push
add
add
imul
shlb
cltd
add
xor
cmc
xchg
jmp
jno
iret
pop
loopne
jl
cli
fistpl
xor
ljmp
inc
cmpsl
mov
pop
lods
mov
notl
pop
push
adc
ds
xor
adc
cmp
ja
mov
data16
aaa
inc
pop
das
fisubs
icebp
xlat
pop
push
out
add
shlb
leave
stos
out
jle
xchg
push
push
jnp
mov
fcomps
icebp
clc
daa
and
inc
xlat
push
mov
fs
test
sub
in
in
data16
rcrb
or
arpl
mov
pusha
push
adc
add
ja
or
iret
jne
std
mov
push
or
movsl
cmp
enter
sbb
pop
in
addb
jbe
xchg
mov
in
fidivrs
and
testb
shl
repz
je
push
xchg
and
aas
data16
push
lcall
pop
ffreep
btr
adc
orb
push
test
stos
je
adc
pop
test
inc
repnz
hlt
pop
in
jge
outsb
arpl
popf
sti
mov
xor
pop
dec
hlt
cltd
cmpsl
jmp
add
add
rolb
adc
int3
mov
gs
adc
add
call
and
mov
adc
mov
jnp
mov
xchg
in
xchg
sub
cmp
cmp
shll
movsb
enter
fisttpll
xchg
add
inc
out
and
add
and
insb
into
leave
test
aas
adc
cmp
mov
ror
dec
sub
cwtl
adc
mov
std
rclb
sub
add
jo
gs
stos
call
icebp
jge
imul
cmp
sub
push
mov
in
mov
push
cmp
push
inc
xchg
push
andb
jae
jns
mov
ljmp
xchg
push
in
pusha
js
ret
mov
mov
mov
mov
xor
fwait
sti
test
adc
fadd
push
fdivrs
test
xor
fwait
cmpsl
inc
mov
ret
cli
add
loope
add
mov
mov
xor
repnz
stos
mov
mov
mov
fnstenv
and
pop
enter
pop
in
cmpsb
mov
movsl
mov
dec
and
xchg
das
sbb
stc
sub
sub
push
mov
and
inc
mov
fdivs
add
mov
cmp
stos
sar
or
push
in
imul
mov
syscall
lcall
inc
stos
sbb
fiadds
mov
mov
test
push
jecxz
pusha
mov
cmp
push
sub
cltd
jmp
sbb
int3
in
mov
dec
popa
pop
dec
add
movsl
sti
cmp
push
inc
mov
jp
mov
adc
mov
xor
cmp
adc
lret
sub
pop
mov
es
scas
not
ljmp
push
add
or
cmc
mov
shr
xchg
repz
jnp
addr16
loope
add
and
loop
lock
push
jns
inc
scas
fimuls
sub
inc
stc
mov
dec
pop
xlat
mov
arpl
ja
cmp
loopne
xlat
or
ss
std
imul
push
insl
push
dec
xor
mov
les
inc
not
jmp
jb
in
test
insb
xor
xchg
repnz
pop
fists
or
data16
dec
icebp
pushf
movsl
sub
dec
outsb
gs
mov
mov
fsubr
je
or
fiadds
loop
cmovle
pop
loopne
test
test
sub
cmp
mov
aaa
outsb
ret
xchg
pop
fcoms
xchg
out
lock
inc
cltd
jno
and
mov
icebp
dec
mov
popa
xor
cltd
mov
or
add
test
mov
push
fldcw
ror
std
adc
lcall
ss
mov
aad
out
xchg
in
insl
cmc
iret
and
pop
xor
jne
lods
sbb
jnp
rcll
push
inc
jns
in
gs
cli
and
xchg
add
aaa
jmp
dec
push
fdivrs
push
in
lret
or
dec
fldt
enter
adc
or
mov
test
xchg
adc
cmp
das
mov
jno
xor
mov
fiaddl
sahf
hlt
pop
mov
mov
icebp
xor
push
xchg
std
das
xchg
adc
mov
aas
stc
mov
out
pop
xlat
sbb
lock
aad
popa
nop
add
std
pop
scas
dec
mov
sbb
in
nop
xor
cltd
into
mov
or
icebp
cmp
mov
rcrl
divl
icebp
test
stos
dec
cmpsb
xchg
adc
imul
imul
es
xor
jp
inc
in
inc
adc
loopne
dec
adc
int
into
pop
sbb
inc
or
pop
sub
cmp
in
add
sub
out
into
mov
lods
stc
jecxz
mov
in
out
stc
and
or
cld
scas
pop
iret
cs
or
push
jno
sbb
push
jne
lock
mov
jb
orl
mov
int3
inc
test
jmp
int
test
push
clc
jns
and
and
les
stos
jmp
mov
scas
xchg
bound
adc
mov
sbb
and
subl
movsb
aam
jnp
ja
out
mov
jle
shlb
and
or
outsb
dec
icebp
inc
cmp
xchg
paddusw
std
cmpsb
inc
fidivrs
xor
push
xchg
add
dec
sarb
lods
and
lods
push
pop
mov
sub
or
stos
push
xchg
lods
stos
cmp
mov
fisubrs
mov
hlt
movb
aas
ret
sbb
pop
mov
imul
pop
cmp
xchg
bound
mov
aaa
xlat
movsb
out
fcmovu
inc
out
or
pop
cwtl
or
mov
cmc
lock
push
dec
outsl
adc
mov
push
sbb
jecxz
subb
add
xchg
xchg
insb
dec
imul
test
xor
stc
addr16
mull
subl
dec
and
jmp
fs
dec
mov
outsl
pushf
adc
test
fildll
pop
xchg
leave
es
lret
in
push
sbb
addb
jbe
jge
cmp
adcl
in
jl
inc
je
mov
popa
leave
icebp
jae
sbb
clc
xchg
cmp
add
lret
xchg
cmpsb
nop
add
xchg
and
pushf
pop
mov
mov
inc
pusha
scas
gs
push
jmp
data16
test
mov
mov
mov
jecxz
imul
lret
repnz
jge
inc
into
in
mov
dec
dec
or
stc
hlt
mov
aaa
pop
push
xchg
inc
push
jnp
mov
and
in
and
in
cwtl
push
inc
es
repz
ja
jp
dec
cld
push
sbb
sub
jns
pop
cmp
xor
rorb
or
mov
mov
mov
jmp
sub
imul
cmpsl
leave
jns
mov
je
aad
pop
loop
add
dec
pop
mov
inc
test
adc
add
add
sub
ljmp
mov
mov
repnz
mov
mov
ret
cmp
mov
or
cmpsb
cmp
jge
fnstenv
iret
mov
lret
lods
mov
dec
and
out
test
dec
lock
dec
sbb
aad
cs
cmp
adc
xchg
nop
dec
outsl
xchg
aam
pop
jmp
pop
outsl
scas
lea
inc
push
js
push
outsl
xchg
push
ljmp
sub
sbb
mov
add
and
or
inc
jb
dec
sbb
andl
test
pop
push
mov
lea
add
push
cmpsl
adc
fimuls
loopne
push
lds
and
aam
callw
push
mov
pop
test
jle
ja
mov
scas
cmc
ljmp
push
lock
sbb
aaa
pop
push
sub
add
add
and
pop
repnz
or
jnp
repz
pusha
sti
jp
or
fadd
pop
cmp
sbb
sub
mov
scas
pop
mov
pop
ficoml
sbb
shr
in
cmc
add
push
adc
out
mov
int
dec
xchg
jb
cwtl
mov
xor
pushf
pop
cld
cld
mov
or
sbb
xor
or
xchg
push
and
adc
push
add
addl
add
out
inc
cmp
xlat
pop
jge
hlt
jmp
add
sub
xlat
bound
jne
int3
pop
aaa
mov
fistl
inc
push
imul
jnp
imul
and
sbb
pop
and
movsb
pop
push
sbb
cmp
jp
xchg
bound
cmp
sahf
push
popa
add
sahf
or
mov
jo
icebp
push
cmp
loope
pop
xchg
cltd
pop
or
outsl
pushf
jmp
push
xchg
mov
iret
and
jmp
xchg
push
out
and
dec
loope
in
addr16
insb
sti
xor
pop
imul
fsts
aad
and
adc
inc
mov
pop
test
mov
in
cmp
inc
cmpb
mov
aaa
clc
lret
ss
outsb
jg
out
fucomip
mov
aad
aad
sbb
jne
ret
push
scas
pop
mov
push
mov
adc
lods
lret
insb
sahf
cld
ret
lret
popf
cmp
jno
sbb
and
loop
pop
and
pop
mov
fucomp
je
jmp
inc
or
dec
mov
aaa
fstpl
popl
mov
pop
dec
inc
sbb
mov
imul
inc
movsb
insb
pop
popf
lret
adc
sub
jb
mov
subb
dec
or
mov
jns
iret
in
inc
dec
mov
push
add
in
test
mov
in
dec
jnp
xchg
mov
xor
dec
jne
loope
clc
das
dec
jo
xor
push
nop
aaa
insl
jae
xorb
xchg
insb
sbb
cmp
fcmovbe
xor
lahf
test
das
pop
mov
in
fiadds
adc
mov
out
xor
stc
or
repz
jb
popf
inc
adc
cltd
and
mov
ficoms
pushf
jne
xchg
js
mov
xor
hlt
add
repz
and
push
jae
inc
push
xchg
dec
inc
sbb
dec
inc
lcall
push
jns
test
lods
fucomi
xor
dec
mov
add
fstp
adc
mov
aaa
xchg
adc
push
adc
inc
xchg
xchg
lcall
adc
xor
movsb
outsb
pop
pushf
aaa
fs
popa
mov
jb
cs
in
lds
push
data16
fwait
shl
lcall
mov
xchg
popl
adc
xchg
sub
loop
lahf
or
push
int3
dec
fstpl
add
test
in
dec
cmp
xorl
sbb
pushf
fnsetpm(287
aad
push
pop
sub
enter
pop
in
sub
mov
adc
stos
jmp
dec
rclb
sbb
pop
xchg
daa
push
fstpl
pushf
push
sbb
int3
leave
jmp
jp
test
call
and
imul
das
loopne
ss
mov
lret
mov
cmpsb
outsl
jb
mov
mov
mov
mov
push
out
in
fildl
jge
ja
sti
add
aad
insl
sub
dec
mov
fistpl
movsb
mov
cwtl
inc
std
sbb
lods
insl
aas
jecxz
and
je
orl
pop
enter
push
js
mov
and
jnp
outsb
inc
lock
hlt
scas
mov
push
jge
test
inc
pop
enter
js
imul
bound
das
xorb
push
shr
pusha
sahf
imul
aaa
mov
outsl
in
filds
xor
or
xor
aas
negl
xchg
fs
jp
fdivrp
xchg
inc
xlat
outsb
sti
pop
adc
lahf
gs
out
inc
fistpll
int3
mov
repz
int3
xlat
mov
xor
dec
cmc
or
dec
xchg
pop
lea
scas
out
lock
fbld
addr16
pop
adc
in
sub
mov
dec
mov
mov
cmc
adc
insb
test
ret
cmovne
xorb
adc
or
in
push
ret
in
in
in
stc
int
sar
and
sub
in
int
mov
ficoml
sarb
ja
jno
bound
lahf
rcrl
push
test
jge
pop
xor
mov
cmp
adc
out
lcall
push
mov
jno
pop
pop
dec
mov
inc
pop
ja
aaa
fidivl
xor
sbb
or
rorl
mov
push
addr16
inc
jbe
rorb
aaa
icebp
ss
js
or
pop
imul
push
xchg
adc
insb
cld
mov
cli
jb
and
fprem1
fwait
ret
je
nop
lds
arpl
nop
fbstp
lretw
mov
test
mov
scas
jnp
xor
mov
xchg
jbe
mov
dec
fs
or
mov
lods
sub
mov
jp
imul
mov
cwtl
je
out
lret
imul
mov
pusha
dec
push
adc
sbb
jle
jl
hlt
add
mov
lcall
cmpsb
sbb
or
xchg
mov
arpl
mull
xor
cmp
mov
rcll
sti
fildll
mov
std
jmp
jp
ficoms
pop
fldt
rorb
and
insb
lcall
imul
fdivs
ds
daa
add
stc
mov
cmp
xchg
data16
mov
loopne
insl
inc
int
jns
jmp
jmp
inc
pop
adc
mov
push
outsl
out
xchg
mov
push
add
or
fsubl
xchg
adc
insl
jnp
sbb
push
daa
popa
add
in
sarb
out
xchg
xor
clc
ss
inc
cmpsl
fnstcw
movb
out
sbb
dec
mov
loope
ret
dec
inc
cld
sahf
jmp
or
cmp
test
sub
ss
ficoms
aaa
jno
cmp
add
mov
mov
dec
call
jle
je
lahf
shll
nop
ds
mov
shl
sbbl
cmp
stc
mov
dec
stc
cmpsl
dec
xchg
push
dec
add
cmp
outsl
xchg
inc
js
cmp
and
and
hlt
fldenv
cmp
mov
mov
jmp
scas
shrb
rdtsc
pop
mov
gs
inc
mov
into
lcall
test
lret
cmp
pushf
and
xchg
or
xchg
mov
popf
int3
dec
adc
out
push
pop
add
shll
or
mov
dec
cmp
cmp
outsl
jge
jge
and
out
out
maskmovq
idivl
fidivrs
inc
mov
shr
cmpsb
xchg
ja
aaa
test
mov
fnstsw
and
sbb
cmp
aaa
mov
mov
mov
jl
mov
lahf
or
loope
dec
stos
and
pop
inc
inc
data16
icebp
sbb
xchg
cli
sub
jns
adc
sbb
movl
sahf
mov
mov
scas
cmp
xor
cld
pop
xorl
xlat
inc
pusha
fiadds
sbb
sbb
arpl
dec
test
rcl
dec
push
repz
inc
xchg
fimull
mov
leave
hlt
jmp
push
inc
mov
and
js
pop
mov
add
and
mov
imulb
cmpsb
aam
imul
les
movsl
cmp
jno
xorb
xchg
std
push
sbb
mov
shrb
mov
sti
sbb
jge
pusha
sub
cli
and
jne
mov
mov
nop
xor
sbb
inc
jb
and
mov
mov
negl
js
jge
lcall
inc
lahf
sarl
dec
ds
dec
jl
aam
lods
test
jp
pop
flds
cmp
add
mov
mov
imul
test
sbb
push
sbb
inc
leave
sub
xor
xchg
sahf
subb
fldenv
mov
push
pop
cmpsb
push
pop
xchg
xor
pop
pop
cmp
in
cmp
ss
mov
in
pushf
pusha
and
out
sarl
and
hlt
add
or
inc
into
cmc
push
pop
out
cwtl
push
insl
fcoml
leave
mov
cmp
icebp
and
cmp
fnsave
ret
ds
or
add
and
cwtl
fs
cmpb
pop
cmp
ds
push
shl
xchg
pop
add
pop
jno
mov
je
in
xchg
push
xchg
gs
sarl
pop
inc
fnstcw
sbb
push
pop
push
pop
sub
iret
sarb
mov
out
inc
ret
inc
in
xchg
lcall
gs
xchg
mov
push
push
jmp
outsl
and
cmp
stos
jle
out
cmc
sub
push
repz
in
xor
cmp
xorl
cmp
les
or
adc
or
incb
cli
adc
sbbl
test
and
xchg
dec
hlt
mov
adc
jecxz
subl
loope
inc
fcompl
popf
sub
fbld
imul
subl
scas
leave
in
icebp
addl
mov
inc
mov
lcall
inc
ljmp
sbb
inc
xlat
mov
or
ss
leave
and
fs
and
jo
push
mov
cmp
mov
mov
mov
fcmovnu
hlt
inc
movsl
xchg
cmp
fsubl
mov
inc
shll
in
pop
pop
out
nop
in
xchg
stos
push
and
arpl
inc
iret
lock
or
jmp
cmpsl
fisttps
push
inc
aaa
popa
lahf
cwtl
outsl
fwait
mov
shll
mov
orb
cwtl
stc
push
mov
xor
mov
lcall
inc
scas
in
xchg
or
scas
test
sub
hlt
movsl
adc
mov
jp
push
testb
xchg
enter
jp
hlt
inc
jne
xchg
cwtl
mov
js
mov
stos
bound
clc
mov
sub
push
add
xchg
pop
cwtl
sub
stos
gs
daa
jbe
xchg
cs
sbb
and
pop
or
fisttps
pop
sub
push
mov
or
jnp
and
movsb
jbe
lods
popa
data16
rcl
sub
int3
mov
xor
mov
jo
sbb
mov
icebp
sahf
clc
inc
mov
dec
stos
adc
data16
xlat
mov
lds
in
aas
push
mov
ret
and
sbbb
fwait
xchg
lock
xlat
xchg
dec
dec
push
xchg
fwait
jl
or
int
cmp
lret
outsb
lock
mov
or
fxch
adc
jae
repnz
pop
outsb
in
rclb
jp
pop
mov
or
cld
mov
rclb
ret
push
test
sub
in
pop
mov
push
jb
lock
mov
mov
xor
insb
pop
ss
mov
sahf
cltd
adc
jmp
sar
push
pop
loop
sub
ret
add
js
cli
iret
cmp
mov
por
push
pop
pop
stos
jbe
and
test
xor
ret
cmpsl
xor
inc
mov
test
xchg
imul
sbb
mov
scas
stos
test
lcall
dec
pop
leave
lret
lahf
psraw
or
dec
jae
cmp
push
adc
popa
sbb
shlb
out
jmp
imul
scas
mov
cmp
xchg
pusha
push
insb
lods
mov
jae
das
lds
sbb
pop
pop
sbbl
and
jns
arpl
and
hlt
or
hlt
popa
daa
jl
jg
in
loopne
loope
and
iret
daa
lret
iret
test
sbb
cld
pusha
or
or
lcall
je
data16
sbb
mov
mov
call
leave
out
cmpsb
jns
fstps
add
add
push
iret
repnz
xor
inc
jae
push
das
stc
out
mov
cltd
iret
inc
xchg
cmc
rolb
xchg
enter
add
out
pop
adc
lret
cmp
adc
lods
jle
push
aas
mov
jo
ds
pop
xchg
loop
add
add
mov
or
movsl
push
out
int3
test
cmp
mov
daa
mov
xor
xor
dec
push
push
stos
inc
mov
and
ss
xchg
mov
cmp
mov
inc
in
dec
adc
cmp
es
jecxz
inc
sahf
adc
daa
lods
jecxz
jns
and
jp
mov
cmp
pop
or
xor
test
xor
xor
xchg
mov
in
mov
jmp
mov
shrl
fucomip
xor
imul
subb
in
sbb
popl
cmp
pop
or
test
es
add
mov
mov
and
adc
mov
pop
dec
push
fistpll
xor
aaa
jno
cli
clc
repnz
bound
aas
mov
or
xchg
jns
jne
inc
enter
fs
lea
repz
aam
and
mov
add
xor
sbb
inc
mov
pushf
inc
lret
push
shr
jne
push
cmp
orb
add
push
push
sub
jne
pop
xchg
dec
xor
ret
add
aad
idivb
jmp
ds
lea
es
int3
lahf
inc
sbb
pusha
es
and
iret
sub
sbb
push
sbb
cmp
shrb
inc
out
call
out
daa
inc
insl
int
movsb
stos
aaa
cmp
cmp
adc
fnstenv
xchg
mov
or
and
or
xor
leave
ja
cli
xor
repnz
mov
mov
sbb
out
idivl
mov
ja
jns
enter
pop
dec
lret
mov
mov
jmp
xor
pop
mov
dec
std
push
mov
mov
clc
leave
sbb
xchg
mov
icebp
push
pop
lods
insw
ljmp
je
mov
mov
pushl
mov
enter
xchg
xchg
dec
hlt
leave
fsubs
adc
sbb
mov
dec
rol
and
jo
inc
bound
jge
fdivr
dec
add
or
jbe
jl
rorl
add
imul
sub
icebp
mov
xor
daa
inc
jns
mov
hlt
cltd
push
inc
and
cmp
lcall
push
dec
lods
out
sti
enter
in
xchg
clc
dec
cmp
ss
or
xchg
repnz
jl
cmp
call
aaa
mov
nop
push
xchg
hlt
stos
movsl
cmp
in
aaa
mov
dec
push
push
inc
sar
stc
shr
lods
dec
imul
cmpsl
cltd
adc
fildl
aad
xchg
test
orl
arpl
pop
jge
cwtl
sub
pop
in
jmp
mov
jge
jmp
test
rorb
xor
inc
or
dec
push
rolb
testl
fidivrs
sub
mov
xchg
adc
or
pop
ja
mov
mov
mov
mov
dec
mov
xor
jl
xlat
in
clc
mov
fsubrl
fwait
data16
inc
jmp
mov
sbb
cmp
cld
out
mov
xchg
mov
outsb
cmp
push
sub
mov
adc
push
repnz
stos
dec
jmp
aam
rclb
dec
enter
ficoml
cli
xor
stos
aam
cmp
movsb
or
rclb
xor
popf
dec
insl
pusha
cmp
pop
sbb
push
and
into
xchg
call
jbe
pushf
mov
push
mov
sub
or
push
mov
lods
pop
fwait
repnz
fwait
adc
mov
adc
pop
pop
inc
push
mov
incb
jnp
mov
lds
dec
mov
and
push
pop
push
rcll
xor
adc
inc
adcb
pop
inc
adc
or
orl
mov
and
sbb
test
xlat
cmp
popa
int
ret
ret
and
scas
inc
aas
rorb
and
sti
sub
adc
jl
shll
jl
pop
stos
scas
xchg
adc
in
repnz
sub
out
int
pushf
mov
dec
mov
popf
es
fdivr
sub
icebp
cmpsl
and
mov
hlt
pop
enter
aam
or
push
xchg
ret
xchg
xchg
das
scas
and
out
movsl
push
or
push
fwait
add
lds
lahf
rep
mov
jnp
daa
cmpsl
pop
mov
out
push
std
sbb
mov
lea
adc
jmp
adc
insb
add
mov
sarl
jg
mov
add
sbb
jp
inc
inc
fs
das
sahf
jne
out
lea
negb
or
loope
or
or
jecxz
or
shl
mov
addr16
jne
push
outsl
leave
push
call
notl
loopne
mov
xor
xor
ret
lods
inc
repz
add
jno
jmp
daa
push
cli
inc
lock
xchg
scas
in
test
add
lods
cld
dec
and
popf
sbb
decl
mov
sti
shll
pop
aaa
push
sbb
fwait
aas
mov
mov
adc
xor
outsb
bound
ss
mov
push
fcmovnbe
and
mov
or
ds
movsl
sub
fsubrs
hlt
pop
xlat
mov
mov
xchg
jne
inc
push
hlt
rcrb
push
fwait
dec
ret
add
fnstenv
push
jnp
add
dec
mov
pop
pop
fisttpll
mov
in
fidivl
inc
pop
outsl
adc
pop
or
add
sbb
sbb
mov
dec
jmp
cli
mov
sarb
push
bound
add
fwait
in
sub
inc
pop
push
pop
aas
inc
cmpsb
xchg
rclb
jg
cmp
inc
push
inc
in
imulb
insl
mov
and
fs
dec
mov
lock
not
jl
cli
mov
stos
arpl
aaa
test
outsb
add
roll
lcall
in
movsl
mov
pop
insb
add
das
mov
fadds
dec
inc
out
sub
call
pop
mov
je
icebp
push
sbb
xchg
sbb
and
out
or
ljmp
jae
dec
pop
out
lret
inc
sbb
push
icebp
ret
cmpsl
inc
adc
push
movsb
add
rcrb
pushl
xchg
aad
push
subb
dec
aas
mov
push
fwait
inc
mov
pop
aad
stos
outsb
jne
adc
cmpsb
daa
mov
aas
inc
mov
mov
push
dec
lds
stos
lsl
mov
imull
cmp
push
and
test
sbb
stc
out
pop
and
orl
imul
leave
outsb
inc
and
xlat
xchg
cs
in
jae
adc
loope
mov
ds
outsb
les
jge
mov
jo
arpl
rorb
or
pop
cmpsl
fiadds
lock
push
rcrb
jecxz
push
xlat
subl
adc
repz
imul
fists
ret
fdivr
jns
shlb
push
popf
push
push
or
sbb
fwait
pop
xor
and
jbe
mov
insb
inc
cmpsl
sub
push
adc
pop
pop
sub
pop
xchg
std
ret
lea
dec
push
pop
subl
scas
movl
or
jecxz
cmp
daa
inc
scas
xor
pop
int3
push
pushf
sub
xlat
mov
add
ret
and
jbe
pop
xchg
jno
add
aam
pop
rorb
inc
lret
lock
pusha
add
das
stos
in
testl
cmp
enter
iret
xor
xchg
outsl
shr
subb
push
negb
add
je
add
mov
pushf
aaa
mov
addl
lcall
mov
sti
fstl
pop
xorl
mov
push
xor
test
in
and
inc
fsubrs
daa
push
cwtl
jmp
std
in
pop
divl
test
clc
cmp
mov
cmp
or
inc
jbe
jle
sbb
mov
mov
sbb
pop
mov
hlt
lods
cld
or
dec
repnz
jo
pop
mov
loop
pusha
xor
rep
scas
cmc
xchg
push
test
shrb
inc
mov
addr16
dec
push
ja
dec
pop
add
clc
adc
sti
hlt
lret
clc
sbb
adc
cmp
fildll
mov
or
stos
cwtl
aaa
sub
pop
mov
cmp
or
adc
loopne
xor
xchg
cmpsl
insl
mov
sbb
jmp
icebp
jne
mov
repz
pop
push
adc
mov
dec
hlt
lret
sbb
ljmp
jge
fs
lret
xor
xchg
push
cli
or
fnstsw
push
sbb
bound
or
jb
inc
sbb
ljmp
and
jne
add
mov
and
movsb
dec
dec
loopne
jecxz
fsubl
xchg
push
xchg
outsl
jge
dec
cld
outsb
lret
divb
std
cli
sqrtps
lcall
or
xchg
cltd
cmpsl
xchg
test
movsb
pop
add
add
icebp
or
adc
dec
adc
das
cwtl
mov
imul
lods
aam
sub
cmpsl
jg
xchg
popl
cmp
and
out
adc
ret
ds
inc
push
fimull
icebp
and
jae
clc
push
icebp
repnz
pop
gs
into
hlt
jge
adc
mov
into
clc
and
mov
mov
fs
negl
xchg
aad
pop
push
mov
in
mov
xchg
cmpsb
xchg
xchg
loope
mov
imul
fwait
loopne
sarb
jecxz
adc
in
icebp
inc
dec
aas
or
jecxz
sub
jbe
xchg
mov
sbb
pop
cmp
jp
repz
jmp
rorl
rorb
pop
call
pop
dec
cwtl
jnp
cmp
int3
testb
pushf
ljmp
fwait
push
fidivrl
and
sbb
popa
test
je
lds
mov
shrl
push
icebp
mull
push
jae
or
ljmp
in
inc
push
sub
and
addr16
add
jl
push
mov
xchg
mov
inc
jl
mov
outsl
aas
or
popa
jb
lret
lret
or
push
cwtl
enter
out
decl
cmc
jae
arpl
jl
cmp
mov
in
sbb
stc
out
or
jne
cmp
add
sub
hlt
cmp
jnp
lods
push
dec
adc
insb
outsl
out
inc
jbe
cmp
mov
lods
push
inc
enter
sbb
repnz
outsl
cmpsb
in
mov
andb
dec
or
sub
and
xor
push
es
mov
dec
in
dec
and
cmp
mov
popf
jp
pop
aaa
stc
arpl
mov
daa
or
out
jp
cmpsl
insl
mov
mov
mov
add
movsl
leave
mov
push
clc
in
or
and
pop
sub
or
loopne
mov
icebp
scas
cmp
xor
daa
cld
ss
jns
cmp
insb
int
push
cmpsb
fisubrl
fsubs
lods
pop
xchg
ror
xchg
mov
imul
outsb
out
xchg
cmp
xor
sub
movsb
pusha
lods
test
fisubrs
movsb
ljmp
xchg
xor
or
cmp
mov
adc
sub
cmp
insl
add
or
mov
push
inc
mov
jae
jge
inc
jno
and
dec
mov
mov
pcmpgtd
dec
clc
sub
ljmp
mov
sub
sahf
xorb
xchg
rolb
addl
mov
xor
mov
xor
sbb
sub
loope
mov
cmpb
std
mov
jge
jge
jne
add
mov
aas
idivb
adc
stc
jmp
mov
je
xchg
xchg
insl
jp
add
pop
mov
nop
push
dec
vucomiss
jbe
imul
int3
fisubrl
mov
jno
dec
out
inc
push
fcomi
andl
aad
in
outsb
ss
adc
pop
lods
fnsave
std
push
xchg
in
adc
or
pusha
push
mov
lret
sarb
push
cltd
stos
loope
jbe
repz
cmp
sbb
ret
fbld
fisttpll
les
cli
dec
xchg
repnz
or
mov
out
pop
or
sub
inc
add
mov
adc
xchg
data16
in
fidivs
lea
push
sub
aas
test
inc
ljmp
mov
ret
iret
nop
push
repz
sbb
les
test
adc
sub
insl
in
inc
out
fidivs
in
jns
pop
push
rcrl
dec
stos
and
jmp
and
fldenv
les
mov
pop
xor
cmc
addl
sub
iret
dec
jns
negb
dec
xor
mov
movsb
lahf
fisubl
jmp
ja
xchg
sub
mov
pop
lret
mov
pop
sbb
loop
imul
mov
xchg
out
cmp
push
xchg
loopne
jp
stos
loop
push
pop
das
cmc
imul
fsubrs
mov
cmpsl
cmp
or
push
lahf
fwait
out
rcll
loope
add
inc
sub
ficomps
sarl
cmp
fwait
lret
or
push
adc
loopne
sub
mov
sub
push
jle
popa
or
das
sbb
cld
mov
xchg
or
mov
pop
or
jns
ljmp
pop
mov
popf
mov
fldl
cmp
ds
pop
inc
xor
sub
dec
add
in
push
xor
inc
sbb
test
icebp
inc
push
stos
loopne
or
pop
pop
cmpb
pusha
fldenv
jle
fbstp
stos
jecxz
mov
cli
mov
out
stc
movsb
out
test
push
repz
in
mov
cwtl
aaa
arpl
loopne
mov
call
sbb
shlb
stos
lods
mov
in
or
add
insb
jp
push
pop
push
cmp
and
cmp
sahf
jg
jns
jle
popa
adc
xor
adc
xor
lea
pop
into
pop
cmp
cwtl
add
movsl
pop
adc
cmpsl
xchg
cmp
hlt
mov
mov
mov
std
push
fsts
push
daa
icebp
clc
scas
jb
xchg
pop
int3
jns
insl
jno
xchg
popa
out
into
dec
mov
xchg
dec
jg
loop
std
lret
mov
call
loopne
cmpsl
gs
stos
das
inc
iret
xchg
xor
push
sbb
iret
mov
cld
outsl
sbb
lcall
repz
nop
loopne
out
sbb
cmc
shrl
pop
mov
sar
mov
sahf
mov
push
mov
jge
mov
push
loope
pop
sarb
mov
ljmp
loop
rorb
adc
decl
and
and
rcrl
ret
jl
mov
xor
sub
dec
test
fs
cld
adc
iret
in
and
or
movsb
add
sahf
repnz
mov
jae
hlt
stc
frstor
dec
and
mov
jno
rcrb
push
add
in
sti
stos
pop
mov
aas
or
leave
sub
inc
mov
xor
int3
and
push
cmc
lods
jnp
repz
push
std
xchg
mov
js
pop
cltd
stos
inc
sub
adc
xor
mov
ja
jae
push
sbb
scas
out
test
testb
cmp
cmpsb
cmc
jl
xchg
bound
sbb
stc
sub
imul
addr16
xchg
out
pop
adc
sub
xor
clc
inc
pop
loop
lds
dec
clc
addr16
xor
dec
dec
dec
push
ss
rorb
scas
push
cmp
mov
mov
clc
std
push
aas
imull
sbb
inc
cmpsb
dec
aam
test
jo
xor
dec
add
or
pop
das
lock
call
mov
jb
push
xchg
aad
mov
aam
jge
dec
inc
jge
jl
or
orl
add
inc
fdiv
testl
pop
daa
mov
fbld
test
icebp
cmp
sub
mov
push
mov
pop
xlat
cmp
stos
shrb
pushf
cmp
mov
push
inc
push
std
or
fdivrl
jl
scas
mov
inc
rcll
push
pusha
js
aas
mov
lret
mov
mov
aaa
in
mov
mov
ja
add
xor
mov
push
mov
jmp
jb
xchg
in
pop
ret
loope
insb
mov
xacquire
or
pop
in
mov
mov
fst
fcompl
je
pusha
jp
jb
cwtl
imul
inc
adc
dec
push
mov
add
sub
call
push
or
fadds
jle
add
out
rorl
dec
push
jge
inc
mov
pop
jmp
and
popa
jp
mov
int3
dec
lds
sub
in
mov
aam
mov
jg
jbe
enter
mov
mov
or
sbb
mov
cmp
test
or
push
divb
jle
pop
cli
ds
or
in
cmp
inc
out
xor
xchg
jg
int
ljmp
in
arpl
mov
sti
iret
insl
dec
sub
gs
mov
mov
out
and
pusha
xor
das
repnz
pop
div
lods
push
ss
dec
xchg
sbb
mov
ret
pop
sti
and
mov
dec
lcall
fldt
nop
mov
push
xor
mov
push
sarl
mov
aam
shrb
dec
dec
stos
shll
and
hlt
cmpsb
xchg
push
pusha
mov
btl
or
testb
mov
sarb
sub
stc
or
and
rcrb
adc
lods
mov
push
pop
inc
hlt
jmp
sbb
jle
rcrl
pop
cwtl
in
outsl
inc
inc
fsubrl
add
sub
or
fwait
stc
pop
icebp
movsb
es
stos
shr
xchg
mov
push
fstps
cmpl
lret
sahf
pusha
sbb
jne
or
es
add
mov
jnp
inc
xor
xchg
test
fildl
lds
test
nop
push
cmp
test
enter
jle
pop
test
test
and
flds
push
sahf
pop
lret
jbe
xor
mov
push
pushf
js
pushf
addr16
push
cwtl
cmc
dec
xchg
mov
int
and
aad
jnp
ds
mov
fdivrl
xchg
or
mov
sub
mov
es
iret
add
push
xor
or
test
push
int
adc
ss
scas
xchg
ret
push
imul
push
jbe
or
push
mov
inc
xor
or
ds
xchg
cmp
in
jp
pop
inc
shll
jbe
nop
ret
loopne
push
gs
sub
adc
xchg
pop
dec
aas
push
les
lods
in
sbb
mov
into
pop
and
mov
fsubl
and
xchg
or
pop
cmpsb
dec
je
xchg
sub
out
arpl
dec
test
and
mov
jge
mov
mov
push
test
stos
push
inc
inc
jb
mov
inc
mov
add
insb
ficoms
mov
jae
sbb
movsb
cmp
inc
xchg
ja
dec
add
and
xchg
sbb
push
cmpsl
popa
cmc
mov
mov
and
das
sarb
jbe
sahf
dec
lods
fs
pop
add
cmc
pop
fwait
xor
sahf
xchg
mov
ljmp
dec
push
addr16
cmpsl
mov
stos
fisttps
rcl
daa
sbb
mov
fists
jmp
insl
cmp
enter
dec
iret
jno
je
fsts
call
int
call
xchg
push
iret
sub
push
mov
inc
sub
lods
push
dec
pop
adc
cld
push
cmpsb
stos
add
mov
dec
rorl
out
xor
inc
push
ljmp
or
out
inc
mov
mov
loopne
ja
sbb
and
test
mov
push
arpl
cmp
dec
cmpsl
pushf
pushw
jb
mov
jge
out
mov
pusha
cmp
bound
fimull
or
mov
adc
nop
outsl
inc
mov
cvtps2pd
adc
addr16
mov
mov
and
ja
andb
orl
rolb
cmpsb
mov
int
outsb
cmp
pop
stos
loope
xor
cmp
sub
pop
push
xchg
jmp
sarl
jp
sbb
lret
lahf
jo
icebp
std
gs
bound
ljmp
push
dec
ret
push
dec
add
icebp
stc
divl
fidivs
hlt
stc
dec
inc
std
mov
jp
push
inc
mov
addl
sub
repnz
ss
sahf
cs
mov
out
inc
sub
outsl
cmpl
std
mov
sbb
test
out
stos
pop
jno
push
lods
xchg
mov
dec
add
inc
mov
sub
sub
out
scas
or
out
mov
sub
repnz
xchg
cmp
std
int
fs
out
fadds
mov
movsb
inc
xchg
sbb
mov
mov
fsubrp
sbb
es
jbe
rcr
mov
lahf
aam
scas
bound
add
or
test
jecxz
xor
jne
popf
repz
add
push
fadds
inc
out
jmp
mov
je
mov
decb
cmp
pop
jg
and
addr16
jbe
mov
xchg
adc
lods
and
out
jge
xorl
adcb
ds
cli
pop
mov
xchg
hlt
sarl
push
inc
jbe
repnz
jmp
and
iret
fstpt
imul
decb
lahf
fwait
popa
adc
jne
icebp
rolb
cmp
mov
jbe
sar
les
jae
hlt
mov
lods
imul
xchg
mov
outsb
pop
jp
inc
cmc
lods
adc
repnz
mov
cmp
sbb
pusha
xchg
in
jmp
inc
mov
gs
lds
or
sbb
add
mov
es
mov
sub
test
push
or
std
push
pop
jl
faddp
leave
mov
into
mov
lea
ss
add
imul
ja
negl
out
mov
fscale
int
loopne
movsb
fsubrs
xor
jnp
lret
mov
or
ss
mov
test
stc
ja
mov
mov
sub
gs
mov
scas
pushf
xlat
jmp
nop
push
imul
and
ja
in
popa
cltd
jbe
scas
sbb
xor
fsubrs
dec
mov
inc
push
fsts
out
dec
arpl
add
icebp
inc
pop
push
mov
sub
mov
jg
jns
rcl
jmp
test
testb
fsts
push
dec
push
sub
mov
loop
lahf
dec
sahf
mov
xlat
loop
lcall
or
mov
mov
inc
add
sbb
dec
imul
jae
pop
dec
mov
sbb
dec
mov
pop
jl
sub
in
pop
pop
and
lret
pop
mov
cmp
jp
pop
jmp
mov
cmpsb
mov
push
in
ret
jo
push
add
stos
sbb
inc
or
mov
ds
and
adc
jae
out
jl
clc
push
mov
aad
addl
cmp
stos
add
mov
rcrb
fs
cmp
lret
push
lods
daa
sahf
test
mov
adc
seta
rolb
mull
ja
fdivp
rol
mov
jo
outsl
jl
add
fcoms
ficoms
in
pushf
add
movsl
or
call
jp
nop
sub
xor
lahf
inc
xchg
lcall
mov
aam
push
jae
dec
mov
sbb
in
scas
fisubs
jbe
adc
mov
inc
loopne
outsl
repnz
js
sbb
inc
je
call
leave
int3
sbb
jb
into
imul
mov
hlt
push
xchg
cmp
add
dec
iret
push
lds
or
std
jecxz
sub
add
dec
and
sbb
test
pop
add
jmp
jae
ja
jae
int
inc
je
inc
dec
xor
push
xlat
cmpsb
bound
jmp
mov
daa
push
out
sub
push
lahf
mov
std
fwait
les
in
dec
mov
cli
aas
insl
lock
push
add
loop
test
pop
movsb
lret
movsb
shrl
and
inc
aam
sub
stc
inc
add
ljmp
mov
scas
pop
push
and
xor
test
fisttps
pop
pop
in
ja
jne
insl
jno
out
xorb
shl
xchg
xchg
mov
cmc
lahf
sbb
lret
inc
aad
and
pop
cmc
mov
fbld
push
pop
inc
or
dec
push
sub
inc
movsb
and
adc
and
dec
and
sti
out
loope
stos
xchg
xor
sub
sbb
insl
in
mov
xchg
mov
rorb
mov
les
or
jge
inc
inc
inc
adc
sub
shll
add
push
lock
lcall
inc
nop
imul
adc
aas
sub
push
fcoml
hlt
add
dec
pop
cli
bound
and
push
test
or
mov
xor
aas
jmp
mov
jbe
xlat
xchg
ja
adc
fisubs
jno
ljmp
mov
lea
fisttps
mov
fcomi
pop
outsl
std
lret
mov
rolb
insl
jg
clc
cs
jae
addr16
dec
sub
mul
sbb
jle
inc
cmp
sbb
hlt
shll
cmp
mov
and
dec
decb
pop
arpl
mov
dec
inc
mov
enter
ficompl
stos
popf
jo
xchg
add
xchg
xor
loop
ficoml
loope
dec
add
sti
out
negl
sbbb
je
pop
and
lea
and
scas
push
pop
mov
mov
add
sub
int
es
rclb
xchg
mov
lods
jp
repz
inc
adc
inc
adc
stos
aad
ss
subl
lahf
je
mov
fsubrs
hlt
or
mov
test
shl
idivb
test
mov
pop
out
pop
scas
aas
in
fdivrp
push
and
in
gs
push
xorb
push
cmpsb
dec
call
inc
xor
lock
adc
fistpll
iret
popl
pusha
mov
notl
fadds
push
lods
std
popl
jp
clc
repz
cmpsl
add
clc
sbb
aad
imul
inc
jns
movsb
cmp
xchg
or
xor
repnz
push
sub
jnp
inc
test
and
jg
ja
int3
xchg
pushf
jp
jle
sbb
dec
pop
movsb
or
flds
adc
and
stc
mov
cmc
mov
xchg
das
jecxz
add
setns
data16
jo
imul
jl
xor
mov
aaa
cwtl
mov
pop
lcall
dec
in
mov
hlt
jae
fs
popa
leave
dec
jmp
cli
dec
dec
cli
add
dec
sub
and
les
stos
cmp
xchg
ja
push
mov
rolb
jno
iret
mov
mov
pop
in
out
test
mov
pop
arpl
cli
or
pop
mov
mov
fstl
and
out
shlb
ja
insl
fiadds
rorb
iret
mov
jg
aaa
or
fdivs
aas
adc
pop
in
fwait
push
test
notl
inc
mov
call
inc
aas
int
call
out
enter
xorb
pop
mov
add
out
pop
int
mov
pop
xor
lret
aam
xor
push
scas
or
dec
imul
sti
sub
in
pop
ja
inc
movsb
shl
mov
fcoml
jns
aam
lea
je
rcrb
arpl
aas
and
fnstsw
add
mov
mov
shl
cmp
rep
js
adc
add
xor
addb
dec
movsb
push
and
dec
mov
call
in
int3
sbbb
loope
cmpsb
push
ljmp
adc
fstl
adc
adc
int
jnp
inc
pop
iret
bnd
addr16
push
pop
std
or
pop
das
add
jbe
fnstsw
push
lahf
loope
addr16
mov
adc
and
xchg
icebp
in
loope
push
movsb
or
pop
jnp
xchg
iret
popa
addb
fistl
or
test
cmpsb
jne
jno
cmpsb
sub
in
sub
xor
or
push
sbb
repz
fcoml
out
xchg
dec
push
stc
push
dec
add
in
lods
stos
sbb
mov
mov
int
sbb
lret
adc
sar
mov
xor
cmp
jbe
pop
xchg
push
sub
jb
mov
jmp
pop
ficoms
or
repnz
andnps
into
inc
add
jmp
push
ficoml
jp
data16
rol
sbb
ja
fldl
test
dec
scas
adc
jns
cltd
mov
add
cmp
sbbb
clc
stos
sti
jl
arpl
loopne
and
loop
or
sub
outsb
fcmovbe
inc
iret
sti
or
and
xor
mov
ja
repz
cmpsb
iret
daa
fistpl
sbb
ret
lock
imul
insl
mov
or
lea
stos
pop
loope
adc
mov
jb
in
xchg
icebp
popf
mov
pusha
xchg
ret
adc
sahf
inc
or
rorb
sti
xchg
pop
aas
jnp
subl
and
adc
scas
imul
lcall
jnp
mov
mov
xchg
adc
push
add
les
sbb
mov
jmp
mov
sbb
lcall
inc
outsb
scas
lcall
insb
dec
and
push
push
sti
jne
popa
pop
jo
pop
shrb
mov
mov
imul
jp
sub
dec
push
dec
adc
dec
and
lock
shr
adc
lret
jl
fidivrs
add
cwtl
or
sub
pop
js
loopne
xchg
jo
out
test
in
cld
xlat
mov
jnp
sub
adc
mov
pop
mov
cli
repz
add
movsl
and
jp
out
sub
push
popa
stc
sbb
clc
jge
jp
std
and
jo
xlat
test
shll
cmc
flds
and
test
pusha
repnz
push
push
inc
mov
sbb
pop
mov
jbe
adc
xchg
ja
pop
mov
mov
popf
into
add
idivl
cmpsb
dec
pop
fmull
add
sbb
int3
lock
pop
aad
sub
repnz
lods
push
push
inc
lods
lcall
inc
fdiv
inc
push
jo
xor
push
rolb
aaa
mov
shl
pop
adc
push
mov
mov
xlat
mov
leave
and
ds
dec
bound
insb
inc
movsl
jmp
add
loopne
test
mov
ja
fdivrl
push
js
add
call
js
inc
and
adc
iret
je
stc
pop
cmp
daa
adc
mov
icebp
lahf
add
loopne
cltd
dec
adc
fists
or
fstps
lods
push
outsb
frstor
cmp
fcmovbe
mov
or
aas
xor
mov
push
or
retw
jl
test
pusha
sub
xor
and
or
popa
dec
fsub
dec
lea
daa
jle
shrl
pop
adc
enter
dec
and
js
lahf
enter
mov
shrb
and
jl
inc
loope
mov
stc
dec
fsts
in
mov
pusha
xchg
jnp
arpl
mov
pop
lret
out
xor
rolb
jg
ljmp
push
jae
rol
inc
aaa
pop
pop
pop
es
cs
std
xchg
inc
mov
daa
in
dec
dec
sub
into
cs
mov
arpl
out
add
xlat
mov
sbb
das
add
fcomps
pop
and
xor
or
inc
pop
cmpsb
pop
inc
in
mov
dec
int
outsl
cmp
push
jbe
sub
pop
mov
jbe
add
dec
lret
jno
ss
push
jmp
pop
hlt
out
test
sbb
outsb
inc
clc
loope
or
sbb
stc
pop
xchg
repz
push
lock
lods
out
iret
or
mov
loopne
stos
xchg
or
fnstenv
inc
clc
xchg
roll
jecxz
jno
adcb
dec
sub
push
xchg
mov
mov
ja
sub
js
mov
mov
jo
sbb
insl
enter
insl
nop
sub
jb
dec
sub
mov
xchg
push
jne
jg
mov
daa
dec
sbb
repnz
inc
les
mov
aad
test
outsb
add
sub
mov
push
leave
mov
dec
je
adc
cmpsl
rcl
add
loop
fildl
divb
outsb
add
ffreep
imul
in
out
stc
jge
fs
inc
or
push
clc
inc
cs
jle
jg
pop
pushf
mov
adc
cmp
cmpsb
push
lcall
in
fwait
xchg
xchg
dec
inc
dec
jle
pop
or
into
bnd
pop
sbb
sbb
cld
cmpsb
sub
outsl
mov
mov
push
fidivrl
pop
mov
inc
mov
sub
lea
lret
or
add
cmpl
sub
fldenv
sub
xchg
enter
leave
int3
mov
mov
imull
test
iret
or
mov
outsb
dec
dec
mov
jle
imul
ret
in
scas
rep
push
cmc
or
cmc
mov
pop
icebp
inc
jno
lret
push
jle
sarb
pushf
dec
mov
cltd
loop
pop
movsb
leave
and
xor
mov
xchg
imul
mov
and
in
daa
inc
pop
sbbl
data16
or
jns,pn
ret
xor
or
push
mov
scas
sbb
xor
or
mov
repz
xchg
mov
pop
pop
add
aam
mov
test
jmp
test
and
mov
fimull
jmp
js
mov
repnz
cwtl
xchg
test
imul
push
int
xchg
je
sarl
imul
mov
push
add
mov
ja
jno
push
in
lods
out
loopne
push
popa
out
xchg
sbb
divb
sub
push
add
roll
fldcw
das
push
xor
test
jne
popf
lods
cmp
jl
out
xor
jmp
xchg
adc
insl
mov
and
add
xor
push
pop
aas
ret
out
test
popf
mov
cmp
sbb
popf
jo
fcoms
ret
pop
iret
pushf
jae
pop
adc
pop
mov
fstps
pop
mov
push
sahf
clc
cmp
addr16
dec
inc
je
aam
lods
xlat
out
xchg
sahf
lcall
push
in
test
inc
flds
in
sbb
push
enter
jp
xchg
mov
sti
rcrl
je
jne
inc
fdivrs
loope
and
mov
testl
in
or
aaa
ljmp
push
mov
inc
sbb
movsl
xor
mov
cmc
adc
mov
dec
insl
lods
loope
sbbl
jecxz
pushf
outsl
push
ret
pop
lahf
sar
jle
pop
imul
std
call
mov
dec
aad
out
loop
scas
loopne
std
bound
pushf
shll
cli
adc
mov
and
pop
andb
std
int
xor
or
cmp
loopne
test
jmp
or
movsb
inc
inc
mov
dec
mov
pop
enter
dec
or
fs
fwait
mov
scas
popa
add
addr16
xor
test
mov
sub
jmp
lret
mov
ljmp
jp
loope
dec
inc
lds
sarl
out
mov
sbb
mov
sub
mov
xor
test
cmpsw
dec
loop
push
cmp
repz
fisttpl
leave
push
pop
mov
mov
scas
sbb
lock
cmp
jge,pn
lret
clc
push
movsl
xor
lds
add
or
adc
mov
ds
mov
movsl
outsl
sub
cmp
inc
fnstsw
push
inc
inc
push
jecxz
jno
dec
je
jl
or
push
int3
jae
leave
jp
push
fcoms
jge
shll
or
iret
cmp
push
movsl
xor
xor
pusha
jg
and
js
pop
xor
mov
insb
aas
movsl
pop
lea
test
mov
ror
pop
or
mov
or
mov
mov
out
lds
imul
mov
icebp
cmp
xor
bound
imulb
cmp
scas
push
inc
into
iret
fnsave
insb
shld
stos
sub
sti
mov
jg
xor
es
iret
fdivrl
xor
les
mov
mov
bnd
and
ja
cli
xchg
sti
arpl
inc
loope
pop
daa
outsb
or
std
push
popf
mov
jno
xor
hlt
out
xor
dec
ret
imul
std
push
xlat
pop
movsb
stos
mov
adc
dec
sti
jnp
lret
dec
gs
inc
pushf
cmc
or
cmpsl
mov
mov
mov
repz
cmp
xchg
ds
sub
std
push
int3
into
movl
lret
jns
stc
pop
adc
pop
fucomi
in
push
pusha
mov
std
push
fnstenv
or
xchg
dec
jo
dec
push
leave
push
pop
jle
subl
enter
fcmovnb
mov
mov
inc
jmp
xor
dec
shlb
cmp
push
cmp
mov
fs
lods
jle
adc
sbb
sbb
xchg
sbb
mov
imul
mov
xorl
test
sbb
stos
mov
push
xchg
push
aas
sbb
daa
cmp
je
dec
das
out
mov
push
fadds
pop
rcr
pop
aaa
or
std
incb
xchg
mov
std
jge
sub
mov
cmc
outsl
inc
es
loop
repz
pop
loope
cs
dec
push
js
jp
imul
ds
fdivrl
rcrl
push
aas
sbb
xlat
adc
xor
sub
inc
cmpsl
mov
cmp
sub
imul
mov
cltd
push
cmpsl
cmp
outsl
subb
inc
ss
jne
push
pusha
cld
and
dec
dec
sub
repz
inc
add
add
jle
push
in
nop
add
ja
cmp
dec
and
in
paddw
and
sahf
push
jge
xchg
push
enter
into
rorl
xchg
fnstenv
popf
adc
cmp
js
test
dec
add
sbb
shlb
pop
push
xchg
and
lods
ret
cmc
mov
js
sub
mov
jle
pusha
jnp
xor
pop
fistpl
xchg
lcall
cli
and
dec
shrl
cli
mov
jg
xor
push
outsl
mov
adc
enter
cmp
xor
sub
test
addr16
mov
push
xchg
outsl
push
push
cmp
push
iret
dec
cmc
leave
loope
xor
push
push
js
outsl
jge
push
mov
and
gs
iret
outsl
add
gs
mov
push
push
push
push
xor
mov
adc
push
ljmp
pop
mov
lahf
mov
dec
inc
fs
jae
inc
xor
fcmovnbe
and
mov
loop
out
call
xchg
xchg
ret
inc
sbb
mov
cli
add
mov
clc
mov
or
arpl
pushf
and
call
bound
or
sbb
je
mov
push
jnp
mov
lret
inc
mov
mov
addr16
or
jge
cwtl
lea
push
test
fstp
scas
out
mov
xor
inc
push
mov
xor
sbb
mov
je
pop
sub
push
cltd
or
fnop
mov
mov
inc
push
out
or
dec
js
out
sahf
arpl
push
xchg
adc
add
lret
aaa
cmp
mov
adc
xorl
or
sub
rorl
rcrl
dec
mov
push
jae
dec
in
shll
dec
fadd
lds
filds
and
hlt
mov
lock
insb
fisttps
int
or
loope
scas
sbb
call
xor
rcll
dec
call
shr
cmpsb
sbb
leave
adc
add
andnps
xchg
sbb
jge
push
mov
inc
jae
pop
mov
sub
xchg
loop
lods
jnp
dec
aam
loop
pop
dec
and
pop
ret
fldt
xchg
sbb
cmpsb
cli
sub
xor
sub
repz
xor
sbb
int3
push
cmp
push
push
cli
clc
mov
mov
cmp
cmp
adc
movsl
movsb
fabs
add
mov
dec
jnp
adc
das
push
and
bound
mov
int3
pop
dec
shrb
dec
push
loop
xchg
push
scas
sbbb
mov
cmc
pop
stc
mov
push
lds
pop
nop
and
hlt
adc
mov
icebp
and
jg,pn
pop
sub
rcrb
xor
sub
xchg
push
jmp
mov
cmp
sub
das
sbb
loop
sub
aad
rcrl
gs
cmp
sub
testb
pop
mov
jle
fdivs
fcomps
xorb
or
pop
sahf
ror
adc
stc
jns
or
sti
ficoms
push
aam
sbb
ret
dec
pop
cltd
jne
xor
pop
xchg
mov
sarl
xlat
notb
cs
jg
ja
imul
jecxz
arpl
xchg
mov
jnp
mov
mov
xor
iret
pop
mov
mov
out
push
aam
fidivrl
rol
mov
mov
sahf
stc
insl
push
les
enter
cmpsl
mov
dec
sbb
fdivs
and
repnz
shrl
xchg
fdiv
adc
out
sbb
ja
lret
les
fiaddl
insl
imul
mov
lds
push
mov
mov
pop
adc
jo
je
bound
xlat
popf
ljmp
pop
dec
shr
insl
or
xor
std
mov
push
enter
push
and
fisubl
jne
jg
mov
inc
fistl
xchg
mov
xorb
cmc
jg
jg
mov
mov
mov
sti
jo
cli
data16
outsb
cmp
push
pop
icebp
dec
mov
repz
test
xchg
dec
loop,pt
inc
jge
cmp
xchg
push
or
lahf
sahf
scas
mov
sub
xor
lods
nop
inc
sub
adc
xor
test
leave
andb
repnz
repz
mov
mov
ds
mov
or
sbb
hlt
xor
dec
nop
push
icebp
xchg
lret
pop
mov
repnz
test
test
push
adc
and
cmp
cmpsl
mov
enter
push
jp
movsl
cmp
inc
add
lods
out
ret
and
adc
fucomi
adc
dec
inc
jb
clc
nop
mov
or
lret
mov
cmp
insl
xchg
xchg
mov
insb
fwait
pop
mov
sti
lret
lods
or
jae
mov
pop
ljmp
pop
lods
xchg
aad
push
mov
lahf
inc
lret
outsl
call
xchg
inc
xchg
sbb
pop
movsl
sbb
test
mov
add
push
sbb
sahf
pop
adc
mov
inc
push
lds
jnp
imul
insb
inc
push
fldcw
in
xor
dec
popf
dec
bound
in
lcall
dec
mov
xchg
jb
inc
mov
mov
sbb
test
sti
xchg
or
adc
lret
jae
cld
jl
or
pop
ds
daa
lret
mov
pop
mov
fidivrl
jo
jns
out
fmull
int
fst
int
adc
cltd
pop
sbb
mov
js
cmp
imul
call
inc
jle
xchg
dec
mov
pop
inc
fwait
sub
or
lcall
mov
mov
jle
adc
in
js
lock
shlb
mov
mov
out
xchg
imul
xor
jnp
sbb
adc
ror
mov
je
mov
cmp
mov
fldcw
hlt
jl
adc
test
or
cmp
sub
push
test
pop
dec
movsl
or
hlt
pop
ret
add
mov
mov
loop
dec
popf
jno
or
scas
dec
ret
gs
xor
out
rcl
push
pop
cltd
mov
or
inc
sbb
test
pop
cmp
adc
jecxz
dec
sbb
cmpsl
cli
push
mov
loopne
testl
push
adc
mov
test
mov
icebp
scas
push
les
mov
push
mov
cmpsb
pop
inc
clc
xor
pop
stos
gs
mov
add
aaa
adc
incl
push
jne
xlat
pushf
xor
push
or
shrl
mov
popf
test
fadd
imul
mov
test
and
and
pop
jp
jno
jns
int
pop
rorl
loope
pop
and
js
dec
shrb
lods
test
pop
frstor
inc
cmc
rcll
xor
inc
movsl
cmp
and
out
testb
mov
roll
fistps
and
dec
les
mov
or
jbe
xchg
psrlw
scas
fisttpll
in
push
cmp
pop
lds
push
mov
lahf
dec
jmp
or
test
xchg
out
sbb
cmpps
sub
cwtl
cmp
repnz
arpl
out
adc
add
fidivrl
mov
push
adc
add
fmulp
pop
jl
daa
mov
je
repz
xor
push
les
sub
ret
sub
pop
push
mov
add
fsubs
scas
inc
iret
pmulhw
fdivl
push
fxch
mov
mov
popa
adc
sub
adc
or
das
jbe
lret
in
lock
mov
and
lret
mov
cltd
push
mov
push
dec
mov
in
cmpsb
cmpsb
mov
leave
cli
push
jae
and
loopne
out
xor
push
std
pusha
mov
je
adc
sub
and
fmul
mov
shll
pop
sti
add
sbb
fs
sub
lret
mov
xchg
add
inc
add
sbb
cld
sbb
mov
iret
xchg
xchg
inc
lea
out
xchg
xor
shlb
sahf
cltd
pop
stos
inc
insl
xchg
dec
xor
sbb
lds
sbb
pop
or
data16
sbb
testl
movsb
leave
adc
sti
jo
push
add
mov
call
iret
add
mov
inc
adc
andl
pop
xor
push
cmp
repz
sti
sarb
aam
and
negl
cmpsl
cmc
cmp
adc
sbb
push
push
jae
xor
dec
mov
test
mov
mov
into
out
test
cwtl
push
xchg
dec
jl
adc
out
push
mov
mov
aaa
mov
insb
sub
mov
xor
pop
into
loopew
dec
or
movsb
outsl
outsl
out
repz
adc
xor
lret
jae
xchg
xchg
mov
enter
icebp
fisubs
sub
mov
sbb
cmp
pop
loop
sub
adc
fwait
push
adc
in
aaa
loop
or
jo
sub
and
scas
out
xor
icebp
out
sbb
les
int3
std
mov
pop
xorl
arpl
lcall
dec
lock
sub
lret
mov
fidivs
pop
jmp
inc
std
jmp
out
xchg
adc
pop
push
cmpsl
jbe
sahf
mov
cld
leave
aas
mov
sbb
sbb
dec
push
xchg
sbb
incl
insl
test
push
fadds
jp
outsl
mov
subl
in
cmp
clc
insb
shrb
or
test
inc
dec
mov
popf
or
push
jl
cmc
or
or
cmp
shrb
dec
inc
lods
out
jns
loop
push
shl
movsb
xchg
jne
repz
and
stos
das
into
shrb
mov
ja
and
dec
xchg
aam
test
cld
pushl
and
mov
enter
cmpsl
jns
mov
lahf
sahf
adc
es
inc
dec
fcmovnbe
std
pop
push
dec
mov
jp
and
inc
mov
aad
adc
jnp
xchg
mov
fnstenv
cli
push
stos
sub
insb
enter
jle
bnd
repnz
movsb
lret
xor
or
mov
loop
jp
jbe
and
mov
mov
mov
add
in
stos
xchg
leave
pushf
nop
repnz
xchg
push
clc
mov
add
jle
cmp
jle
daa
xor
inc
stos
mov
je
cmp
sbb
cmc
mov
mov
in
test
test
inc
lret
and
sbbl
jp
andl
les
sti
mov
roll
pop
xchg
xor
mov
xchg
sub
movsl
dec
arpl
push
push
xchg
pop
pop
push
pop
addb
inc
push
cltd
mov
imul
rcrl
rcr
dec
leave
jmp
loop
push
pop
xlat
daa
jae
das
push
adc
lret
das
and
rcl
sub
xchg
into
cld
in
ret
fsts
jae
cmp
scas
inc
jle
sub
jae
mov
dec
mov
inc
out
lods
lods
pusha
xchg
hlt
lods
xor
jg
fdivrl
mov
dec
lea
ficoms
mov
xchg
outsl
jmp
testl
orl
lahf
push
shrl
aad
xor
pop
sbb
testl
stos
sbb
cmp
fldt
push
jne
sbb
cmp
mov
or
xchg
xchg
icebp
xchg
gs
adc
out
mov
adc
sti
mov
sti
dec
mov
or
inc
push
outsb
enter
push
stos
stc
pop
xchg
popl
test
mov
sub
repnz
xchg
call
jb
daa
fsubrs
ja
popf
scas
lcall
cmp
divb
call
mov
ret
ret
stos
and
xchg
push
fwait
mov
stos
jp
or
mov
or
into
repz
sbb
hlt
cmpsb
inc
pop
and
pop
shl
aaa
leave
mov
jmp
push
dec
or
sbbb
xor
icebp
movsb
dec
sub
fistpl
lret
in
jne
mov
aam
adc
out
mov
popa
popf
leave
mov
cmp
insb
pushf
dec
lea
xchg
bnd
jmp
out
call
pop
jns
pop
sub
clc
stos
pop
lahf
and
dec
das
adc
inc
fldt
lock
fidivrs
outsb
ljmp
test
mov
imul
mov
push
aad
pop
sbb
fwait
jne
mov
push
ljmp
add
push
pop
clc
int
andl
and
xor
cmpsb
jo
xor
loope
outsb
repz
cmc
mov
mov
in
add
loop
xor
out
insl
sbb
push
aas
jg
sub
out
movsl
mov
cmp
in
push
enter
jp
les
xor
dec
push
inc
or
or
sbb
mov
je
popf
lcall
ljmp
cmp
ja
push
imul
rol
inc
pop
inc
ds
inc
stc
popa
xor
add
mov
jg
mov
add
adcb
mov
dec
sbbl
push
mov
push
ret
jmp
and
ret
dec
dec
mov
sbb
bswap
addr16
add
int
cmc
in
cmp
inc
and
pop
sbb
lcall
add
stc
sahf
lea
mov
cmp
ljmp
push
push
shlb
jmp
fstpl
int3
jl
jecxz
and
lcall
xor
xchg
mov
ljmp
lret
sbb
pop
outsl
lea
jbe
cmpsb
jne
adc
es
decl
xlat
outsl
addl
add
jne
lock
pop
mov
xor
cmpsl
jmp
adc
popf
test
adc
insb
js
lock
enter
jbe
mov
arpl
in
repnz
cmp
xor
inc
ret
incl
mov
cmp
inc
loop
add
call
into
fildl
xchg
insl
out
add
xchg
mov
repz
jl
data16
adc
test
inc
mov
rclb
pop
insl
mov
jp
push
std
sbb
add
mov
push
jg
stos
sarl
jg
je
popf
xchg
bnd
bound
ss
xchg
push
call
xor
or
jl
jnp
inc
inc
clc
push
int3
push
insb
lods
or
adc
outsb
insl
mov
add
repnz
shl
in
pop
push
nop
xchg
setl
inc
outsl
jle
push
mov
pop
subb
mov
mov
fildll
loope
push
repnz
fimuls
mov
mov
jb
mov
jp
push
dec
add
testb
pop
bound
ja
cmpsl
dec
shll
dec
xchg
add
mov
stc
je
xchg
cmpl
jge
sub
cmp
pop
push
call
and
cmp
push
adcb
and
or
xchg
or
daa
push
jae
loop
cli
dec
pusha
pop
mulb
jno
xchg
jmp
test
mov
test
jl
cmp
call
les
push
cmp
jae
mov
test
ljmp
inc
popa
or
ret
icebp
dec
test
add
sarb
or
mov
cmp
jle
stc
dec
mov
pop
push
push
cmpsl
nop
aad
sahf
or
clc
popa
inc
adc
ret
fwait
push
pop
ja
mov
outsl
test
pop
addr16
or
add
lahf
jge
sbb
pusha
pop
pop
testl
pop
push
aas
cmpsb
inc
mov
je
icebp
cs
mov
adc
xchg
std
push
lahf
ret
adc
test
push
xor
jb
xor
cmp
sahf
mov
sub
imul
test
xchg
xor
repz
ja
int
pop
addr16
nop
jmp
leave
ljmp
xor
int
cmp
ljmp
or
mov
cli
and
jp
cltd
cli
fdivrl
lods
in
jne
push
mov
and
push
pop
aaa
add
jmp
and
dec
dec
inc
mov
aad
add
pop
je
jle
out
pop
leave
or
in
scas
sahf
stos
sub
mov
out
inc
ret
gs
push
xchg
and
insl
sub
shrb
std
enter
pop
xchg
leave
xor
sbb
sti
sbbl
adc
data16
lock
pcmpeqd
lahf
mov
xor
xchg
pop
rcr
cmp
mov
in
xor
jmp
jbe
inc
fisttpll
pop
mov
cmp
dec
mov
jmp
jge
fldcw
sti
cwtl
or
sbb
test
xchg
xchg
sub
je
dec
xchg
test
mov
cmp
mov
inc
pop
fisttpl
inc
add
xchg
mov
ss
fs
mov
lahf
jp
pop
mov
out
mov
mov
pop
mov
mov
cmp
data16
mov
lret
push
inc
sbb
adc
jno
mov
and
ja
jmp
repz
sbb
mov
pop
dec
stos
pop
jl
sub
daa
bound
lret
leave
movsb
sbb
inc
aas
xchg
lahf
jle
mov
dec
mov
jmp
sarl
insb
fwait
and
movsl
dec
cmpb
mov
div
dec
jne
enter
je
jmp
punpcklqdq
in
lds
hlt
lcall
lds
sti
adc
adc
lock
imul
cmpb
sub
xor
ret
subl
add
sub
fwait
adc
neg
jns
or
clc
pushf
leave
xchg
jns
mov
mov
cltd
pop
mov
jb
sarl
jae
cmp
roll
movsb
adc
cwtl
in
dec
and
jecxz
test
nop
adcb
cmpsl
js
push
xchg
mov
flds
sbb
aad
push
jb
loope
pop
sbb
and
jg
push
pop
mov
pop
fadd
sahf
cmc
inc
add
sbb
pop
xlat
sub
out
and
data16
add
cmc
mov
jno
lock
add
sbb
jo
cmp
cs
mov
fcmove
fidivl
adc
in
test
fsubl
inc
fisttpll
fimuls
mov
cwtl
xchg
jno
xchg
jl
lahf
scas
adcb
cltd
mov
ds
xor
dec
int
mov
lea
mov
push
and
lods
in
fadd
pop
test
outsb
testb
push
decl
cli
cmp
mov
movsb
loope
inc
cmpl
dec
xchg
je
je
stos
mov
out
sbb
fimull
jl
add
fnsave
xor
vpmaddwd
xchg
mov
movsl
cmpsb
mov
dec
dec
jmp
addb
mov
imul
sahf
lods
scas
in
push
popa
fidivrs
push
stos
mov
jb
or
sub
inc
popf
mov
jnp
popa
outsb
mov
and
cmp
pop
jo
adc
xor
ljmp
dec
cmpsb
jbe
push
lock
pop
addl
aaa
jge
ljmp
stos
out
sub
cmp
or
imulb
cmp
dec
cmc
test
or
bound
jge
popa
dec
mov
push
popa
push
jl
mov
int3
movsl
outsl
inc
jmp
sub
xchg
lcall
push
lock
movsl
xchg
adc
test
fisubl
adc
or
dec
xlat
sbbb
test
daa
cmc
jne
loopne
push
test
xchg
insl
and
xlat
mov
or
dec
stc
dec
hlt
jl
sar
mov
mov
mov
cld
inc
pop
ret
xchg
sbb
fiaddl
push
lods
mov
iret
int3
and
push
movsb
inc
pop
jmp
rcl
sub
push
mov
mov
sub
in
sahf
sbb
mov
fsub
push
loopne
dec
shl
sahf
dec
int
cmp
in
cmp
push
push
subl
cmp
dec
repnz
xchg
mov
cltd
push
mov
jg
add
scas
insb
mov
rclb
nop
push
jl
addr16
mov
dec
xchg
test
call
sbb
das
enter
popa
cmp
or
xlat
fsubrl
fisubl
aas
push
pop
ret
or
rol
ja
mov
xchg
cwtl
cmc
xchg
aas
lock
or
inc
scas
lret
cltd
sti
adc
cli
incl
mov
xchg
mov
rcr
insl
xchg
lret
push
into
pop
movsl
xchg
dec
adc
adc
push
push
mov
addr16
ljmp
mov
pop
xchg
mov
add
sub
pop
jns
dec
in
dec
sbb
jae
mov
sub
mov
mov
lock
push
xchg
push
or
xchg
add
pop
cmp
ret
ljmp
ret
jo
movsl
xchg
imul
fcoms
push
xor
cmp
imul
jle
call
inc
pop
idiv
xor
jge
pop
sbb
test
cmc
add
iret
push
ljmp
sbb
add
and
pop
leave
les
enter
cltd
aad
shlb
push
sahf
dec
rolb
or
add
inc
aam
aam
rorl
arpl
cli
jecxz
pusha
mov
ret
into
pop
imul
mov
and
mov
pop
xor
pop
fmull
dec
sbb
ss
add
stc
mov
pop
cwtl
divb
push
incb
cmp
pop
cwtl
sub
xor
mov
inc
jae
pushf
sti
es
jno
fldenv
cmp
cmp
fstps
push
in
outsb
and
and
push
fmull
dec
adc
dec
in
clc
sub
cmp
push
xchg
and
inc
into
mov
mov
lahf
faddp
int3
xchg
and
imull
ss
fcmovne
mov
into
ror
jns
mov
push
sub
mov
dec
ret
lods
or
mov
sub
inc
bound
repnz
xor
jae
jns
inc
movb
clc
std
cld
jle
or
mov
cmpsl
mov
jl
jnp
fsub
out
inc
cmpsb
mov
out
push
lret
mov
xor
inc
mov
popf
pop
aas
mov
dec
dec
and
mov
stos
and
jl
pop
fadds
arpl
mov
adc
pshufw
lods
test
pop
xchg
insl
adc
les
inc
test
pop
data16
add
rorl
in
notl
mov
inc
jg
pop
sbb
ljmp
daa
xchg
in
sub
jo
sbb
test
dec
xor
jmp
or
mov
xchg
sti
xchg
inc
push
sbb
insl
mov
sbb
sub
cli
or
cld
imul
cs
mov
xchg
xchg
adc
pop
sub
ja
test
inc
mov
sub
xorb
jle
xchg
hlt
dec
fisttpll
push
loop
daa
mov
pop
les
pop
bound
and
fisttpl
mov
adc
dec
pop
in
jmp
xchg
jg
div
sbb
aas
mov
js
cli
push
mov
or
xchg
xchg
dec
insl
outsb
or
sbb
xchg
mov
fdivrl
mov
cmp
and
add
lret
mov
lds
xchg
mov
sub
lock
roll
outsl
ja
cmpsl
adc
mov
or
push
inc
les
dec
jge
dec
push
push
and
scas
ret
jmp
shrl
and
jg
inc
push
out
xchg
xor
mov
dec
test
sub
push
and
movsl
cmpsb
dec
adc
add
xor
in
xchg
mov
mov
jge
je
es
cmp
inc
mov
dec
in
orl
addl
push
xchg
shlb
xor
cmpsb
push
xchg
inc
jge
jno
call
imul
jo
js
jle
mov
dec
fs
mov
enter
cmp
and
jo
aam
push
push
mov
mov
sub
int3
sbb
enter
test
push
fwait
mov
push
cmp
enter
in
imull
jnp
ret
lods
insb
cmpsl
dec
mov
mov
push
and
adc
lret
dec
jecxz
sub
aad
sub
xor
scas
mov
adcb
shl
out
jmp
std
lret
js
mov
inc
push
xor
testl
lret
hlt
sbb
jae
arpl
jo
sbb
gs
or
push
jo
add
into
lret
lret
and
shlb
mov
jbe
fnsave
loopne
lcall
adc
sbb
mov
rcrl
outsl
ret
jae
loop
pop
mov
mov
dec
cmpsb
es
jp
xchg
jl
ss
inc
push
inc
stc
mov
cmp
pop
and
leave
lahf
mov
xor
adc
call
ja
add
pop
addr16
xor
xchg
mov
jmp
jnp
mov
and
xor
push
inc
dec
test
sbbb
xchg
xor
and
mov
jl
inc
jae
sbb
ss
sahf
mov
cmpsl
xor
movl
aas
insb
insb
divl
divl
insb
sti
int
ja
call
lret
movsb
adc
push
xor
inc
xor
fcoms
xor
out
xchg
jg
sarl
mov
mov
outsb
pop
jecxz
lea
aas
cld
xchg
insl
mov
pop
aas
adc
dec
dec
push
popf
lahf
lods
pop
mull
in
xchg
shll
icebp
xchg
data16
pusha
sar
lods
addr16
inc
mov
xchg
in
shrl
jp
add
lock
stos
jp
cmpsl
shrl
lods
or
push
leave
jl
push
jns
xchg
push
dec
dec
mov
mov
jb
aad
comiss
xlat
stc
pop
insb
jns
jb
push
movsb
pop
lcall
mov
pop
fildll
cmp
mov
lods
xchg
shl
sbb
ds
or
xchg
sbb
jno
xchg
es
fcmovbe
fwait
std
pop
mov
movaps
jge
fstpt
test
xchg
or
enter
icebp
cmp
mov
cmp
mov
jmp
mov
rcrl
in
adc
stc
sbb
lds
xchg
and
inc
inc
addr16
mov
repz
xchg
pop
or
mov
xchg
mov
daa
sahf
movsb
inc
in
repz
push
lret
add
cmpsl
mov
mov
daa
push
addr16
pop
jle
jecxz
add
push
cmpsl
inc
jne
sub
fiadds
scas
dec
jno
pop
mov
jl
pop
fs
fwait
pop
adc
ljmp
xlat
lahf
xor
rcll
sahf
pop
mov
sbb
repz
data16
dec
cmp
add
mov
inc
mov
shll
mov
inc
adc
ret
in
push
cmp
push
pop
scas
enter
cmp
xor
sti
ret
fldcw
leave
outsb
lret
cwtl
and
xor
adc
xchg
lret
or
shlb
mov
mov
repz
aam
decb
pop
roll
adc
dec
fistpll
mov
test
imull
push
sti
testl
ret
fs
push
notl
mov
adc
orb
fstl
jmp
ret
jbe
adc
jecxz
or
or
fiadds
testb
jmp
push
adc
add
xchg
pop
outsb
and
dec
push
xchg
out
inc
scas
fcmovne
aam
inc
pop
jnp
pop
cmp
dec
sub
push
in
and
dec
insb
and
out
shr
pop
pop
push
cmpsl
xchg
jp
xchg
repz
push
pop
mov
mov
rcrb
fstpl
divl
mov
rorb
mov
push
mov
clc
jg
hlt
sub
inc
jne
jne
dec
das
mov
xlat
movsb
jle
sub
std
stos
sub
jae
insb
add
dec
add
pop
or
inc
lcall
cs
out
sahf
arpl
scas
outsl
mov
nop
cmp
mov
ret
cmpsb
xor
daa
ja
mov
das
cmp
js
pop
scas
stc
cltd
gs
decl
test
dec
push
fnstcw
sbb
and
mov
out
outsl
lahf
sub
pop
repz
inc
js
test
div
into
clc
loopne
mov
xchg
xor
push
rolb
xchg
dec
dec
shll
aam
inc
rorb
mov
xchg
inc
add
arpl
in
js
stos
stc
and
sbb
rolb
pop
jno
out
xchg
jo
dec
pop
out
jnp
mov
xchg
cmp
js
scas
loopne
fnstenv
dec
cmc
mull
les
fisttps
les
les
mov
pusha
pop
ljmp
cltd
adc
sub
push
sub
sbb
adc
std
scas
sti
data16
loopne
in
pop
loop
scas
call
in
sub
push
mov
ss
fwait
jnp
pop
xchg
lods
pop
out
ret
cltd
js
mov
cmp
test
stc
or
pop
lods
cmp
dec
cmp
fdivs
push
mov
mov
fisubs
add
sub
add
aam
scas
mov
aas
push
pop
sub
jne
sahf
out
push
push
adc
lea
out
add
push
loope
pusha
daa
in
sub
or
jl
shrb
jnp
xor
jnp
cld
adc
sbb
mov
out
push
push
add
icebp
das
cltd
push
and
daa
dec
js
xchg
lcall
out
test
push
xchg
cmp
xor
popf
fiaddl
mov
out
pushf
inc
outsb
mov
xor
int3
outsl
in
jge
aas
daa
aas
and
movsl
subb
dec
cmp
aam
test
enter
int
int
je
adc
dec
ja
popf
mov
and
ljmp
or
add
fsubrs
fildl
jb
rcrl
fdivr
xlat
mov
and
ds
adc
ss
sub
lods
into
mov
cmp
mov
xor
fsubl
xor
xor
std
push
lods
cs
or
imul
iret
sbb
add
xor
mov
and
cld
dec
pushf
outsb
sub
fldt
adcb
and
adc
jae
add
xchg
jae
stos
add
sbb
adc
or
cmp
adc
mov
cwtl
or
rcrb
ja
ss
adc
jo
lret
ljmp
pop
jmp
mov
dec
xchg
mov
and
xor
jnp,pt
test
and
mov
or
jae
movsl
mov
mov
scas
idivl
lods
cmpsl
fsincos
aas
scas
stos
imul
mov
xchg
lds
mov
adc
xchg
test
pop
sub
icebp
mov
mov
js
push
add
dec
outsl
cmp
ljmp
xchg
mov
js
daa
xor
ret
pop
lea
loope
xchg
push
lds
mov
jecxz
ljmp
add
mov
je
and
mov
add
jmp
sahf
aas
int
mov
mov
jge
sub
in
out
rcll
xchg
jmp
rep
xchg
or
mov
leave
movsl
orb
mov
iret
loop
mov
push
push
hlt
addl
ljmp
sbb
jnp
jns
test
xchg
mov
imul
fiaddl
mov
sbb
push
xor
pop
sbbl
pusha
inc
imul
inc
add
mov
pop
jp
fwait
jno
inc
and
sub
mov
scas
xchg
fnstenv
mov
sahf
adc
mov
xlat
loop
int3
pop
popa
repnz
inc
or
mov
sbb
int
jnp
insl
mov
add
sbb
xchg
iret
xchg
xchg
loop
js
pop
pop
ljmp
in
int3
pop
ljmp
jge
mov
add
sarb
inc
sbb
addb
push
xor
lods
jge
adc
mov
pop
scas
dec
cmc
cmpsl
mov
dec
cmp
sbb
loope
scas
enter
cmp
xor
xchg
jmp
shrl
stos
push
inc
shl
jle
orl
or
es
mov
sbbl
pop
xchg
xor
cmc
dec
imul
dec
std
js
mov
arpl
add
cmc
or
sbbl
adc
int
ja
mov
fstl
xlat
hlt
pop
mov
mov
hlt
add
mov
or
mov
test
jb
mov
ret
inc
jp
fstps
fmuls
mov
push
dec
in
xchg
pusha
mov
shlb
pop
mov
pop
outsb
mov
inc
cmp
rcrl
aam
sub
outsl
lea
pop
mov
into
adc
xlat
and
addl
inc
xor
adc
lock
adc
cli
addr16
ret
mov
roll
js
sbbb
loopne
lret
repz
and
mov
dec
pop
adc
dec
jmp
ja
ret
lret
push
dec
jle
adc
xlat
insb
imulb
jb
into
out
icebp
adc
push
jg
inc
push
jnp
std
xor
out
orb
mov
or
push
dec
ffreep
mov
pushf
and
roll
sbb
lcall
sub
pop
mov
rcrl
mov
js
and
ficompl
push
loope
outsb
cmpsb
adc
je
add
outsl
leave
mov
xor
jnp
fsubrs
mov
adc
test
mov
aad
aam
into
pop
mov
inc
cli
test
or
mov
sub
inc
push
cmp
stc
int
mov
dec
cmp
or
cmpsl
dec
jb
cltd
xlat
daa
xor
test
push
mov
in
cmpsb
stos
pop
stos
sub
or
fisubrl
jae
xchg
mov
jns
mov
pminsw
in
cmp
jge
js
movsb
imul
push
lret
sub
mov
and
xchg
lods
jecxz
aad
xchg
mov
aas
out
ds
stc
xchg
jns
ljmp
cld
cmp
cmp
scas
adc
cmp
jge
stos
lcall
push
jecxz
push
sub
jo
fbld
lea
in
movsb
push
mov
push
repz
fstl
pop
pop
jl
push
jno
movsl
cmp
aaa
cmpsl
lcall
ljmp
sarl
xchg
notb
adc
dec
push
push
and
xlat
mov
adc
stos
ret
gs
shrd
fwait
mov
pop
movb
lods
adc
mull
add
mov
ret
lret
pop
add
adc
lret
jo
jo
inc
add
fimull
pushf
mov
xor
adc
push
daa
pop
mov
in
cmp
scas
out
sahf
mov
mov
leave
lret
mov
mov
jmp
dec
mov
je
cmp
aad
mov
and
addr16
lahf
adc
xchg
shrb
pushf
cmp
into
imul
call
xlat
scas
xchg
xor
jb
push
pop
xor
xchg
out
es
sbb
mov
cs
imul
out
and
nop
jmp
pop
mov
sub
cmp
dec
and
mov
repz
or
adc
fmul
mov
sahf
daa
movsl
jnp
xchg
inc
add
call
neg
xchg
pop
scas
cmpsl
pop
popf
pusha
repnz
adc
jp
mov
dec
cmc
dec
rolb
mov
rcrb
stos
fwait
sbb
sub
lret
inc
mov
lds
outsb
lret
fdivrs
dec
xchg
jg
fbstp
dec
loopne
frstor
into
push
out
fs
sbb
dec
mov
jg
inc
xchg
mov
sbb
push
movsl
ja
fstl
stos
nop
jnp
das
out
jmp
dec
jb
adc
add
daa
and
ljmp
imul
sbb
adc
jnp
mov
in
or
loopne
push
mov
inc
dec
movsl
stos
push
xchg
call
or
mov
dec
xchg
daa
lods
into
mov
out
int3
push
xor
fsubl
inc
inc
jns
in
jg
dec
xor
rorl
push
cmp
shlb
or
inc
sub
stos
es
jo
lods
popa
popf
mov
lds
stos
jne
sbb
add
push
pop
fadd
imul
mov
rcrb
dec
mov
fxam
or
push
cmp
or
movsl
pop
mov
sub
popa
xlat
fnsave
mov
inc
xlat
and
shlb
mov
add
ljmp
mov
call
test
loopne
sbb
lahf
pop
clc
mov
mov
pushf
ror
sbb
inc
cs
add
loopne
dec
mov
push
std
and
mov
je
std
cmpsl
cmp
sbb
scas
andb
loop
add
fwait
shrb
xorl
dec
add
sbbb
or
jne
clc
ds
xchg
movsl
inc
cld
ret
xor
inc
pop
mov
sub
sub
pop
aaa
in
add
xchg
push
lcall
jle
or
or
arpl
sti
cmp
push
mov
mov
adc
xchg
out
cwtl
rcll
jb
clc
push
jg
sti
jl
push
stos
fsts
push
xor
and
insb
inc
mov
aaa
adc
or
push
sti
aad
out
dec
jnp
push
sub
mov
cld
stos
or
aaa
jl
xor
lods
xor
dec
cmp
arpl
xor
fcmovnb
enter
inc
in
pusha
mov
xchg
int3
subl
inc
mov
in
arpl
cltd
stc
int
mov
popa
or
cld
sub
hlt
inc
cmp
call
pop
push
lahf
or
mov
cmp
jae
call
sti
imul
in
lock
lock
sbb
xchg
inc
pop
push
test
out
mov
push
inc
mov
xor
or
sbb
inc
jl
testb
ja
fdivl
rcll
sub
jmp
data16
fimull
or
sarw
rcr
or
inc
cmp
sar
mov
sub
xlat
fnstcw
inc
mov
pushl
ss
cmp
lods
outsb
xchg
addr16
dec
push
insl
cmp
incb
test
jp
imul
movsl
pop
xchg
mov
stos
jge
scas
cwtl
sbb
rcrb
aaa
jg
add
cmp
ret
push
mov
or
jb
scas
add
sub
ret
lret
popf
push
and
ljmp
loopne
add
cmc
loopne
es
mov
test
sbb
jl
ret
ss
jnp
scas
pop
xor
mov
inc
lods
pop
pop
cmpsl
sbb
icebp
sbb
sbb
adc
lret
fxch
jb
flds
jbe
jge
mov
sub
sub
push
xorl
jge
sub
push
ljmp
xchg
pop
xlat
xchg
inc
cmc
aam
jae
and
lret
and
mov
fwait
jne
in
cmp
negl
test
iret
sub
scas
mov
xor
sub
or
iret
xor
fidivrl
xchg
dec
pusha
dec
icebp
add
and
fucomp
xor
test
mov
lret
push
rcrb
loop
jae
jno
test
sub
jb
rcll
lret
cmpsl
jno
xor
daa
and
lea
outsb
cmc
or
inc
jnp
in
mov
push
mov
fcomi
inc
cmp
jmp
add
xor
pop
or
jmp
sbb
add
lods
scas
fadds
cmp
mov
inc
fstpl
cmp
push
xchg
icebp
stc
jae
and
inc
mov
cmp
shll
mov
push
outsb
sub
stc
cmp
xor
daa
popf
stos
mov
xchg
mov
insb
test
aas
leave
inc
xor
sub
shlb
nop
orb
iret
imul
jecxz
sbb
inc
jae
dec
mov
ret
std
pop
push
mov
sub
mov
das
js
push
mov
adc
test
movsb
push
nop
cli
pushf
adc
and
inc
div
out
in
and
cltd
cmp
loop
mov
adc
les
ret
jecxz
cli
repnz
mov
sbbl
sar
aam
pop
pushf
pop
push
push
rcl
cli
xor
sub
insl
xchg
mov
mov
inc
das
lods
imul
fs
fldt
fadd
hlt
mov
dec
call
mov
mov
enter
mov
iret
enter
test
add
inc
cltd
jb
sbb
jmp
aas
xchg
mov
xor
pop
mov
push
inc
test
sbb
jb
popf
dec
loop
adc
mov
push
inc
movsl
sbb
andb
sbb
lret
nop
pop
jg
adc
dec
rcrl
mov
bound
xchg
neg
test
pop
dec
int
adc
data16
pop
xor
int
nop
lcall
test
loop
loopne
rol
and
cmp
xchg
mov
xor
xor
mov
fimull
cmp
xchg
mov
ja
xchg
sbb
inc
xor
mov
and
lahf
xchg
jmp
bound
mov
mov
enter
int
push
sub
jp
mov
leave
mov
jmp
cmpsl
mov
mov
inc
lcall
mov
cld
xor
addr16
mov
lea
sub
inc
sub
pop
xlat
pop
out
lcall
mov
into
nop
push
cli
dec
sar
or
dec
mov
out
fcoml
cli
or
lea
pop
cmc
test
cmp
fisttpl
int
add
xchg
and
push
mov
push
xor
mov
add
jbe
or
icebp
sub
sub
div
daa
adc
movsb
jo
data16
mov
or
mov
pop
sub
mul
stc
sbb
inc
mov
call
inc
xor
add
js
sbb
and
mov
movsb
push
jo
out
fsts
mov
mov
jmp
addr16
sub
hlt
jl
test
mov
imulb
dec
mov
xchg
pop
and
ja
push
and
ds
les
in
adc
aaa
sub
stos
jo
inc
jge
outsl
sahf
in
or
imul
movsl
jnp
and
or
jno
adc
hlt
mov
lcall
adc
imul
fisubl
push
fdivs
ds
mov
mov
arpl
fcoml
movsb
arpl
insl
and
fnclex
jo
adcb
mov
xchg
fmuls
push
xchg
cmp
inc
negb
outsb
or
lret
out
push
pop
mov
int
cli
inc
pushw
inc
adc
add
aas
cmp
push
xchg
out
sbb
daa
mov
jno
mov
dec
movq
out
aad
out
jb
jp
out
mov
lret
pop
jnp
dec
pushf
jnp
cld
adc
insl
push
das
xchg
cmp
pop
jo
ficoms
inc
mov
sarb
std
jb
arpl
in
dec
jecxz
push
push
xor
stos
aad
mov
mov
mov
inc
outsb
stos
mov
sbbl
std
ja
adc
and
and
rcrb
adc
pop
fwait
rcrb
lds
lret
mov
sbb
jmp
dec
add
in
sbb
mov
loopne
inc
cltd
and
and
mov
mov
loope
pop
hlt
cmpsl
cmp
or
add
mov
xlat
inc
jbe
mov
mov
das
or
adc
dec
dec
stos
shrb
pop
inc
in
lea
push
jl
dec
pop
adcl
lds
xchg
jp
mov
pop
inc
dec
stc
scas
mov
xor
add
scas
popf
dec
adc
pop
stos
testb
lods
es
xorb
jb
xchg
dec
mov
repnz
mov
xchg
or
rcl
push
enter
mov
and
int
lcall
out
adc
lret
jnp
inc
cwtl
icebp
inc
and
or
stos
or
adc
mov
out
push
mov
mov
sbb
adc
mov
in
insb
xchg
shlb
fsubrs
inc
insb
fwait
loope
imul
cltd
inc
mov
add
cwtl
push
js
stc
loope
dec
daa
enter
mov
jae
out
mov
add
jbe
ljmp
jge
lock
rol
ficompl
xchg
add
pop
fisubl
cmp
pop
mov
je
lahf
cltd
lock
sub
jecxz
xor
or
out
sub
inc
mov
and
loop
mov
shlb
adc
push
lret
pop
movsl
xchg
mov
lret
bound
sbb
dec
and
mov
test
lea
mov
adc
insl
jmp
adc
int
outsb
fisttpll
adc
aad
mov
inc
cmc
mov
mov
sbb
std
out
repnz
jo
lds
mov
lcall
sbb
xor
xchg
and
insb
enter
pop
adc
xchg
mov
dec
inc
adc
out
std
jmp
data16
addr16
or
scas
adc
sbb
ds
mov
sub
sbb
in
mov
xchg
pop
cmc
sbb
cmp
in
int3
adc
in
cli
jne
xchg
enter
mov
cmp
js
cld
push
adc
mov
lret
popa
cld
jae
jecxz
push
shrl
and
jmp
dec
nop
pop
sub
and
ficomps
std
gs
test
test
cmp
pop
or
pop
adc
pop
in
jecxz
shr
xchg
add
jge
scas
add
xchg
jmp
pop
data16
push
xor
inc
push
ja
stos
pop
mov
mov
add
and
push
xchg
inc
imul
cmpsb
sub
in
inc
aam
std
lds
xchg
xor
or
mov
outsb
push
andb
push
test
jge
aam
inc
fmull
pop
jbe
repnz
push
rcrb
and
jle
out
fidivrl
ds
mov
xchg
cltd
cmp
mov
pop
dec
dec
fs
pop
les
std
dec
push
sbb
ret
xchg
xor
xchg
fimull
mov
inc
les
sub
adc
ljmp
add
jl
hlt
and
addl
out
mov
pop
aas
xchg
mov
mov
lea
fstl
and
shrl
sbb
mov
in
and
xchg
and
adc
dec
das
aaa
shl
add
add
adc
jns
orb
add
out
in
push
daa
and
sbb
stos
loope
mov
repnz
mov
fldcw
lcall
xchg
movntq
mov
imul
xlat
xlat
loope
adc
jl
cmp
ret
js
das
mov
add
add
int
dec
inc
mov
xchg
cwtl
push
pop
loope
sarb
sahf
jmp
addr16
xor
pop
scas
rorl
call
mov
dec
xchg
cwtl
call
dec
mov
clc
mov
aaa
popf
cmp
xchg
out
adc
sub
mov
or
xchg
dec
jecxz
jo
xorb
inc
cld
adc
sbb
or
insb
jns
and
repz
pusha
sub
scas
popa
outsb
mov
push
lds
inc
and
mov
jl
mov
xchg
scas
xor
xchg
hlt
cs
xor
jns
mov
jnp
cwtl
inc
daa
fisttps
pop
mov
sbb
xor
mov
shll
cmp
sub
shlb
orl
sbb
pop
mov
jp
fs
test
xor
mov
stc
clc
or
decb
push
lods
pop
add
sub
in
mov
in
mov
jp
or
ja
inc
repnz
outsb
xor
jg
cmp
add
leave
test
mov
in
out
cld
pop
inc
ja
xor
ficoml
cmp
cltd
pop
push
inc
in
lods
cli
fbstp
cmc
jnp
push
pop
fistps
fs
stos
cmpsl
xchg
adc
ret
xchg
jle
clc
je
scas
xchg
shll
pop
outsb
pop
movsl
sbb
sub
cmp
outsl
mov
inc
dec
add
mov
xchg
cmp
gs
test
add
pop
dec
mov
das
dec
enter
out
clc
and
xchg
xchg
mov
push
repnz
push
mov
pslld
and
stos
std
and
pushf
mov
dec
lods
dec
push
jl
pop
xchg
aaa
add
sbb
mov
dec
mov
cld
clc
push
pop
push
mov
add
cld
rcr
sbbl
ja
popf
fstpl
inc
inc
in
dec
fistpll
test
divl
and
lcall
push
inc
mov
or
or
pop
fsubl
mov
outsb
lods
cmp
sbb
mov
pop
daa
adc
xchg
mov
mov
dec
mov
std
mov
fldl
and
and
rclb
scas
loope
sbb
cmpsb
lods
fnop
test
jae
imul
mov
ret
fdivr
subl
add
in
sbb
mov
ss
add
loope
loop
dec
std
jb
xlat
cmp
mov
fsts
xchg
jns
outsl
sbb
inc
fiadds
push
es
flds
popa
mov
je
test
inc
cmp
jno
dec
test
aam
in
jl
lahf
jb
sbb
mov
ror
cmp
jle
in
std
mov
pop
leave
sbb
dec
and
jae
std
pop
mov
sub
push
in
cmp
inc
int3
mov
lock
xor
adc
push
loopne
cmpsl
in
scas
and
mov
ljmp
mov
mov
jge
iret
cmp
mov
lret
js
dec
ret
sbb
mov
clc
outsb
dec
addr16
scas
movups
mov
adc
push
sub
mov
pop
jo
or
sub
jle
adcl
cmp
into
in
fidivs
xor
mov
push
sub
vmptrst
mov
jmp
jmp
stos
into
fcomi
and
dec
mov
lahf
mov
fistl
flds
arpl
jmp
ja
loope
pop
add
jl
bnd
cmp
xchg
out
push
push
negl
mov
jge
pop
adc
push
mov
out
sub
fucomp
pop
xor
aad
and
adc
stos
xor
fildl
incb
push
gs
sbbl
ret
mov
addr16
icebp
dec
jb
push
fs
xchg
xorl
push
pop
sub
mov
pop
push
dec
das
ficoms
dec
mov
popa
inc
cmp
dec
or
adc
cmp
fimuls
jnp
cmp
ret
cs
js
push
push
push
add
cld
and
mov
in
dec
in
jo
hlt
testl
ss
jmp
cmpsb
lods
pop
lock
out
lcall
out
mov
cmp
xor
push
or
pusha
fsubrs
jge
pop
aas
sarl
fstps
mov
mov
add
inc
negl
sbb
inc
rcll
inc
ljmp
popf
adc
lahf
ret
roll
je
mov
std
imul
mov
cmpsl
imul
add
cltd
hlt
hlt
mov
cmc
test
popw
jbe,pn
mov
add
mov
ret
inc
or
inc
fiaddl
xchg
stos
mov
setge
out
daa
scas
outsl
xor
sub
and
fisubl
or
or
xchg
sub
mov
sbb
loopne
cmpl
xchg
mov
loope
int3
test
scas
enter
fcoms
clc
ljmp
ja
out
roll
mov
js
sarb
mov
push
insl
shll
ljmp
pop
loopne
lcall
add
dec
mov
adc
data16
js
dec
cmp
pop
test
lahf
test
adc
out
lock
fidivs
mov
movl
pop
mov
mov
call
inc
ss
jno
jnp
sbb
sbb
sbb
aad
mov
push
xor
ret
ror
daa
out
cmc
inc
mov
data16
movsb
jbe
push
or
xchg
dec
mov
mov
shl
add
or
sub
pop
js
mov
push
es
inc
popf
pop
ds
enter
xchg
out
mov
or
dec
add
ret
outsb
mov
fbld
das
ss
in
daa
cmp
orb
sbb
push
xor
mov
pop
xor
adc
hlt
fdiv
cmc
or
imul
jecxz
xor
sub
mov
lea
mov
and
nop
arpl
scas
sbb
mov
enter
in
xchg
js
xchg
or
fxch
repz
mov
mov
or
stos
stc
shrb
popf
cmp
loop
add
in
jmp
popa
test
out
shlb
xor
jle
not
and
jp
divl
dec
jmp
shrb
leave
aam
add
das
add
mov
pop
add
mov
movsb
popf
jge
lods
push
orb
mov
dec
fbld
jo
das
cmpsl
call
addb
imul
or
mov
frstor
add
mov
cwtl
icebp
bound
movsb
testb
daa
pop
popa
sarb
jle
pop
insb
sbb
rclb
dec
cli
les
and
cmpsl
xlat
xchg
stos
idivl
std
roll
rep
ss
scas
lcall
add
dec
or
mov
out
clc
int3
mov
fstpt
add
stos
imul
mov
inc
sbb
syscall
dec
add
lods
outsl
repz
stos
cmp
jmp
add
adcb
jbe
lahf
xchg
enter
inc
popa
mov
cmpsl
call
pop
mov
jae
ljmp
fwait
mov
adc
mov
cmp
sti
loop
push
pusha
cli
dec
sarl
mov
inc
fxch
fsubs
ficomps
pop
push
pop
xchg
jne
out
inc
loope
insl
xlat
add
push
jmp
sub
xchg
cmp
stc
jl
push
in
jns
mov
aam
push
out
push
addr16
or
xchg
xlat
add
pop
iret
int
mov
mov
xchg
test
xor
test
loope
xchg
and
push
dec
leave
mov
lock
or
mov
ljmp
out
test
daa
aad
pop
push
dec
cmp
cmp
mov
out
jge
stos
pop
mov
add
mov
adc
xlat
jne
jmp
inc
mov
adc
adc
ficompl
fdivrs
or
xor
ret
xchg
push
cmpsl
testl
adc
adc
jmp
mov
cwtl
push
cmp
iret
lea
push
dec
psrld
aam
pop
xchg
add
sub
pop
stos
push
loopne
and
lods
dec
test
jbe
lahf
cmc
cmp
cwtl
dec
fnstsw
sbb
push
dec
xor
stc
jbe
jmp
cmp
push
loope
xor
cmpsl
push
sub
jmp
scas
jp
xchg
cmp
inc
ret
mov
insb
cld
push
add
xchg
inc
pushl
test
xor
out
xchg
cmp
ss
fwait
jnp
shlb
adc
jl
lock
mov
test
add
adc
xchg
mov
lret
daa
imul
das
lea
cmc
ret
vmread
hlt
inc
aad
push
mov
push
loope
out
add
dec
out
lcall
and
add
cld
mov
xchg
cmp
jmp
or
push
outsl
nop
adc
int
imul
cmp
sbb
nop
jns
mov
and
inc
insl
cmpsl
push
insl
dec
test
lret
pop
jg
pop
in
dec
stc
mov
mov
jbe
bound
or
dec
xor
rcrb
ret
inc
add
push
jns
sub
insl
fsubs
push
shll
in
or
lock
pop
inc
sub
pop
in
rolb
push
add
lahf
mov
es
hlt
push
movsb
pavgb
cld
mov
pusha
stos
in
sbb
dec
pop
xchg
sbb
mov
aam
mov
ds
aam
cwtl
hlt
push
decb
nop
mov
clc
aad
or
cmp
lods
test
jno
jnp
in
pop
adc
loope
test
les
push
loope
aad
or
scas
xchg
test
jbe
fildll
dec
pop
xlat
in
mov
add
inc
jp
jne
or
pushf
out
jo
mov
xchg
inc
in
scas
mov
jbe
icebp
xchg
bound
or
inc
cwtl
outsl
pop
shrl
rorl
jge
movsl
sbb
adcl
daa
push
sub
push
jne
add
xor
cmc
fstl
pop
fisubrl
clc
mov
mov
mov
notb
mov
fsubrs
xchg
fiaddl
cmc
lret
push
ds
movsb
push
jb
add
sarb
stos
ljmp
pop
jbe
xor
jne
shll
sahf
push
loop
ljmp
ljmp
push
push
fldt
fnstcw
or
adcb
push
pop
rolb
cld
jg
jo
ss
imul
dec
xlat
hlt
mov
pop
rorl
pop
stc
xchg
xor
mov
into
rorl
iret
call
xchg
dec
lret
xchg
movsl
add
sbb
jmp
loope
jmp
repnz
pop
adc
jns
pop
sahf
out
xor
or
lret
mov
dec
lock
mov
shrl
push
pop
mov
jmp
repz
lock
leave
mov
fwait
icebp
inc
inc
mov
push
dec
sti
mov
roll
in
call
add
and
mov
cltd
cmc
out
loopne
and
adc
mov
in
add
xchg
adc
inc
dec
dec
shrl
stos
mov
and
fcmovnb
stos
andl
orb
adc
adc
inc
xchg
inc
test
jg
aas
mov
push
nop
inc
mov
xor
pop
mov
es
negb
fld
dec
sub
sbb
es
lds
cmp
lea
adc
cli
and
sbb
notb
inc
xchg
pushf
rcrl
adc
fsubrs
loopne
std
iret
stos
dec
sub
hlt
stos
nop
xchg
pusha
or
mov
push
or
sbb
mov
push
xchg
das
je
int
jge
cs
sbb
inc
inc
xchg
mov
xchg
bound
cmpl
jbe
cmp
in
dec
and
pop
push
into
or
dec
shll
mov
cli
lock
sbb
fisttpll
fs
stc
mov
movsl
jp
jg
mov
push
std
clc
xor
push
loopne
inc
ret
loopne
push
imul
xor
aad
stos
adc
push
xchg
push
pop
adc
js
fnstenv
cli
inc
xchg
ret
outsb
xchg
mov
cmp
lcall
ja
push
mov
ret
inc
or
je
xchg
inc
adc
pop
sbb
push
adc
addb
sbb
adc
lods
mov
sahf
jecxz
inc
dec
in
mov
jle
mov
and
sbb
mov
dec
cmp
cs
pop
or
adc
push
outsl
sub
pop
adc
stc
shrb
int
sub
or
jle
xor
mov
out
shrb
mov
in
inc
dec
cmp
dec
stc
aad
pop
xchg
mov
jnp
push
imul
xchg
pop
xor
cmpsb
xlat
dec
xor
xor
add
mov
scas
jb
pop
inc
inc
xchg
xor
inc
or
mov
cld
add
enter
add
mov
dec
dec
add
mov
fstl
je
adc
and
rcr
sbb
pop
lods
and
cmp
std
in
lcall
mulb
xchg
aaa
pop
add
outsb
out
and
adc
pop
add
subl
mov
add
inc
lret
inc
hlt
push
xor
mov
cmp
jecxz
insb
jae
mov
xchg
mov
sahf
daa
add
hlt
fucomp
rolb
sub
xchg
inc
inc
sub
cld
popl
mov
shl
sbb
jne
dec
lock
shll
ret
test
addr16
xchg
aas
sub
cmp
xor
inc
push
fscale
je
and
rorl
lods
mov
or
pop
repz
push
out
push
jp
test
aad
mov
push
xor
shl
aam
add
and
adc
jns
mov
out
adc
cmp
or
mov
loop
sub
pusha
movb
enter
push
lods
or
or
inc
loop
nop
sbb
cmpsl
stos
mov
mov
sub
addr16
nop
xor
mov
rcll
mov
fdivrl
add
mov
js
lahf
inc
or
in
mov
fs
dec
mov
pop
les
jbe
insb
mov
mov
mov
xchg
pop
or
pusha
pop
js
ret
xchg
mov
inc
xchg
sbb
dec
lcall
lsl
jnp
pop
push
cmp
subb
sub
mov
xor
cmp
xor
scas
fcomps
ficompl
js
jne
sahf
into
filds
call
push
outsb
fisubl
cwtl
push
mov
push
sbb
ret
and
pop
movsl
cmp
dec
iret
cmp
mov
push
jne
repz
hlt
add
test
push
mov
psllw
fldl
xor
fldl
mov
push
cmp
inc
push
jge
ja
das
stc
icebp
or
mov
sti
pusha
jecxz
icebp
mov
inc
in
nop
outsb
xor
ret
cwtl
add
je
sub
or
fisubs
stos
inc
pushf
dec
xchg
xor
mov
cmp
loopne
mov
icebp
mov
cltd
push
lds
pop
push
inc
mov
mov
ds
xchg
pop
icebp
push
or
jne
mov
mov
rorl
pop
pmaxsw
jo
xlat
mov
adcl
xor
xchg
test
sub
rolb
int3
lcall
cmp
addl
mov
mov
movsl
jbe
ja
jmp
pushf
add
fiaddl
adc
and
mov
movb
cltd
movl
shll
cli
dec
mov
cmp
push
stos
dec
insb
mov
and
push
daa
gs
aad
ret
add
sbb
ljmp
lcall
lahf
ds
jecxz
mov
adc
xchg
xchg
js
addr16
sbb
mov
fwait
jbe
shrl
addb
clc
mov
xor
adc
sbb
and
or
push
push
sbb
in
xor
shll
xchg
push
pop
aas
mov
mov
mov
sub
mov
lods
and
inc
or
sbb
int
push
cmpsb
mov
dec
subl
xchg
xchg
in
int3
pop
dec
mov
inc
dec
xchg
dec
xlat
aaa
stc
and
mov
rolb
cmp
or
jle
push
mov
sti
ds
stos
pop
or
ficoml
xchg
mov
mov
xor
pop
xor
repnz
and
xchg
std
mov
cmp
sub
lock
pop
in
and
mov
jp
jge
les
or
in
decl
out
pop
jns
mov
push
sti
imul
shld
push
data16
cld
fildll
mov
pop
sbb
add
jecxz
xchg
jo
pop
xchg
rcrb
gs
add
dec
mov
dec
xchg
jmp
inc
jae
xchg
sub
out
sarl
into
pop
stc
movl
fadds
sub
cld
cmp
jnp
xor
mov
push
repz
xor
mov
pop
dec
sub
push
mov
xor
lret
lods
cmc
std
dec
repnz
inc
popa
roll
inc
leave
xchg
dec
lock
inc
lods
pushf
fsub
cwtl
icebp
ss
add
mull
push
pop
and
call
rolb
pop
mov
mov
lret
lret
xor
add
sar
and
xchg
inc
loopne
cwtl
aam
cltd
xchg
or
int3
scas
dec
xor
or
push
cli
or
and
cmpl
push
test
dec
xchg
xchg
pop
xchg
push
call
adcl
in
xor
cltd
and
jne
adc
inc
jg
ja
add
stos
mov
add
iret
push
mov
mov
loopne
push
in
lock
pop
cmp
clc
xchg
movsb
fistps
inc
dec
insl
push
cmc
ss
loopne
mov
xchg
or
aam
sub
xchg
and
bnd
lods
push
out
push
sbb
enter
or
inc
inc
ret
frstor
decb
data16
or
push
jne
stc
mov
dec
dec
cmpsl
inc
push
xlat
out
adc
mov
fstpl
mov
mov
shl
outsb
jb
clc
mov
inc
jp
dec
cld
cmp
inc
pusha
lahf
inc
mov
xchg
jmp
lods
xchg
or
lret
out
das
add
xchg
cmp
xchg
and
xchg
or
mov
ss
pop
and
inc
pop
sbb
pop
or
movsl
cmp
lcall
sbb
fidivrl
lock
pusha
sbb
xchg
mov
pushf
scas
ret
or
xchg
mov
mov
inc
clc
xchg
scas
cli
inc
out
jne
xchg
cmpsb
imul
inc
cmp
das
lret
cli
adc
repz
add
push
addb
xchg
or
in
mov
fistps
or
aaa
shll
mov
das
jbe
popf
int3
pop
cmpsb
ret
jmp
inc
mov
push
aas
test
imul
mov
jo
imul
mov
pop
sbb
call
and
mov
lahf
in
and
out
cmp
ljmp
shll
jle
sbb
mov
adc
out
mov
dec
faddl
add
sbb
adc
jb
sub
mov
mov
inc
and
adc
sub
mov
sub
sub
adc
lret
add
add
lret
popa
or
cmp
lock
cld
adc
arpl
jl
fcomp
out
lret
mov
ret
mov
pop
jle
cmp
push
call
pop
sub
aam
xchg
sub
je
push
cmp
mov
inc
mov
sbb
cli
arpl
xor
adc
push
jne
and
out
mov
mov
stos
jmp
jbe
sbb
inc
cmp
mov
subb
mov
ds
sub
mov
add
js
push
cmp
nop
xor
mov
shll
ret
testb
out
pop
call
orb
loopne
pop
push
imul
rcrb
xchg
icebp
sbb
mov
jnp
pop
nop
lcall
xchg
inc
mov
jae
dec
sahf
aaa
pop
push
jp
out
outsl
jo
scas
push
rorl
ss
pop
cmc
jp
hlt
imul
loopne
cwtl
out
test
adcl
xor
xor
lahf
adc
cmpsb
pop
rorb
mov
sbb
notb
fs
jnp
xchg
stos
cmp
add
jnp
and
push
or
mov
pop
test
outsl
inc
and
xor
sbb
jne
aaa
jle
cmp
cltd
fwait
andl
mov
add
cmp
lea
adc
std
sahf
dec
scas
int3
mov
or
arpl
pop
pusha
jo
dec
dec
stos
lods
cmp
fs
sub
out
mov
rcr
and
and
dec
repz
add
repz
or
in
sub
sbb
f2xm1
and
or
stos
jl
push
push
imul
sub
fdivrs
cs
out
dec
pusha
push
std
jecxz
inc
cmp
das
sbb
push
lret
push
hlt
dec
mov
push
and
pop
adc
mov
lret
mov
pop
mov
aas
xchg
pop
popa
rcrl
cli
xchg
imul
ret
adc
adc
daa
sti
ret
data16
jl
mov
dec
jmp
mov
sbb
incb
pop
fildll
stos
mov
cmp
hlt
xchg
jge
popf
fdivrp
mov
fwait
imul
sbb
push
adc
into
lcall
aaa
jne
out
sbb
enter
cld
lods
divl
xor
mov
push
inc
leave
stos
pushf
movsl
fmuls
sub
popa
mov
insb
and
bswap
mov
insb
cmc
jb
mov
push
cmp
arpl
sub
lcall
push
ss
xor
test
movsb
mov
scas
ss
jnp
es
sub
dec
or
jg
xchg
sbb
xor
adc
dec
cmpsb
jge
jb
call
outsl
nop
sahf
pop
lods
add
and
or
out
xor
and
mov
or
fdivr
loop
decb
mov
outsb
mov
repnz
jge
les
mov
in
cmp
mov
or
sbb
aas
pop
push
rclb
mov
lret
addl
out
add
lea
out
rcll
in
and
into
xor
sbb
cs
pusha
lahf
stos
inc
mov
sub
mov
xchg
ficompl
fs
fnsave
test
outsl
fists
notl
pop
inc
lods
push
or
dec
xchg
dec
lock
cmp
bound
pop
leave
xor
icebp
add
xchg
push
push
xchg
push
add
bound
jno
int3
dec
out
or
or
iret
jno
add
dec
sub
aam
imul
mov
fnop
rol
dec
dec
mov
inc
push
lock
ljmp
popf
lahf
jae
fdivp
or
jmp
fbld
adc
fld
or
cmpsl
insl
add
testb
mov
mov
sti
shll
mov
lock
jecxz
into
out
fstps
fsubp
mov
inc
and
enter
lret
cwtl
lds
fsts
push
jp
pop
std
hlt
inc
jl
fildll
mov
repnz
cmp
bswap
std
xchg
and
xchg
jp
sub
sbb
test
je
insl
lds
mov
sbb
inc
mov
ja
mov
mov
mov
dec
enter
dec
sub
rol
ds
and
lock
in
nop
fisubrl
jb
stos
jo
mov
outsl
jmp
add
insb
xor
clc
leave
sub
pop
mov
push
cmc
mov
mov
repnz
dec
arpl
sahf
xchg
test
jle
out
jl
push
inc
repnz
push
out
ds
fstpl
inc
nop
ror
cmpb
and
shll
pop
fwait
jmp
jp
dec
and
mov
fs
add
push
pop
xlat
mov
rcrl
pop
xchg
clc
cmp
xor
jle
xchg
sub
iret
cmp
jg
rclb
push
jmp
jmp
scas
mov
call
int
out
push
stos
mov
jg
adc
xor
cs
pop
mov
fisttpll
mov
cmp
fwait
dec
mov
filds
es
and
mov
fistpl
and
xorb
add
xchg
lcall
cld
mov
adc
adc
jne
pop
xchg
scas
sub
push
push
ja
xchg
xor
enter
push
mov
movsl
int
cli
aad
loope
mov
push
insl
push
pop
xchg
pop
pop
xor
into
mov
pop
adc
lods
lahf
sahf
jp
adc
in
movsl
jmp
filds
mov
inc
flds
cmp
mov
xchg
mov
fcoms
clc
cmc
and
mov
dec
xchg
sbb
mov
mov
loope
xor
xchg
nop
pop
xchg
cmc
lock
out
cmp
jo
push
jle
roll
in
sbb
inc
into
lret
adc
cli
sahf
mov
adc
and
test
lret
addr16
pop
lret
mov
std
bound
xorb
sbbl
xor
mov
push
outsb
fbld
std
inc
lods
jns
out
scas
cli
xor
test
cmp
lcall
push
les
mov
or
les
mov
push
testl
and
xor
js
pop
adcb
pop
and
pushf
dec
rcll
or
xchg
jae
cltd
inc
or
jle
fcoml
stos
or
outsb
rcll
inc
mov
adc
push
xchg
lahf
loopne
xor
xchg
pop
mov
dec
rcll
sbb
outsb
xor
cwtl
sahf
xor
cmc
push
xlat
outsl
rcrb
ds
int3
cmp
xor
leave
int
test
int
sahf
shlb
mov
inc
cmc
push
push
add
or
outsl
mov
inc
push
pop
loop
lahf
aam
gs
adc
jl
enter
insb
test
push
push
stc
dec
test
dec
pushl
loope
sbb
cmpsl
repz
mov
sbb
mov
insl
xchg
push
test
and
jp
dec
dec
ja
stos
cmp
mov
lds
sub
paddusb
in
movsl
test
fdivl
test
mov
mov
sti
mov
shlb
pop
cmp
dec
jl
cli
mov
mov
xchg
pop
repnz
gs
or
dec
adc
add
inc
loop
fwait
mov
or
inc
xor
inc
hlt
jns
mov
dec
scas
adc
jmp
aad
xchg
das
cmpsl
mov
cmpsb
jns
ljmp
int
and
sub
xor
pop
dec
xor
pop
dec
in
adc
test
push
cmp
psllq
add
rorb
jmp
nop
push
mov
push
jns
popf
pop
dec
push
incb
cli
aas
gs
and
ss
leave
pushf
loop
shlb
imul
pop
dec
mov
sti
les
inc
sbb
mov
xor
repnz
jmp
fwait
je
mov
sub
inc
cmp
cltd
test
xor
pop
scas
adc
push
repnz
pusha
and
loop
stc
jl
mov
jge
std
push
adc
movsl
bswap
addr16
test
jl
cmp
loopne
ret
and
mov
pop
xrelease
loope
jbe
pop
lds
and
xchg
mov
cmpsl
xor
sub
aam
add
inc
arpl
ret
cmpb
cwtl
or
mov
cli
pop
lea
add
lahf
push
push
lods
imul
fsubl
outsb
shll
cmp
ja
push
xchg
ds
xor
mov
ret
add
push
fstpt
xor
arpl
fnstcw
xor
outsl
jb
mov
mov
enter
push
popa
or
mov
push
push
fsts
xor
mov
xchg
loopne
outsl
and
push
add
test
shrl
pop
aam
ret
mov
cli
mov
enter
inc
ja
imul
xor
mov
or
mov
dec
mov
test
and
and
mov
add
int3
popa
mov
daa
mov
adc
fistpl
stc
lods
dec
in
pop
xor
stos
aad
pop
jmp
cltd
mov
cmp
and
push
sub
test
dec
ljmp
inc
mov
lret
xor
mov
insl
mov
jle
jno
es
mov
ljmp
repz
les
jmp
jl
outsb
std
movsb
fwait
data16
stc
in
fdivs
out
std
mov
sbbb
dec
gs
pushf
inc
icebp
cmc
pop
std
mov
pop
je
lds
fistl
pop
mov
idiv
xchg
inc
imul
sub
int3
add
pushf
push
cmp
enter
push
ret
xor
fnstsw
and
sbb
sub
in
pop
test
jmp
fistps
movsl
pop
das
or
cmp
ss
xor
adc
sbb
js
jecxz
imul
add
xor
ljmp
bndldx
insl
and
shl
arpl
gs
ret
subps
sbb
mov
je
insl
lds
mov
fs
outsb
repz
jle
pushf
rol
scas
cmp
xchg
cmp
lahf
inc
push
mull
mov
fstpl
adc
aad
pop
and
cmc
mov
mov
jo
outsl
xchg
mov
lahf
jmp
xchg
xcrypt-cbc
cmpsl
inc
xchg
enter
pop
mov
test
pushf
adc
enter
mov
test
mov
jae
mov
inc
cmp
aam
dec
ljmp
out
lods
fadds
in
xor
push
lahf
incb
or
mov
xchg
iret
xchg
in
iret
push
iret
repz
jl
jp
in
hlt
or
lahf
mul
icebp
add
pushf
ret
jno
and
gs
movsl
aaa
cmc
and
daa
dec
inc
inc
pushf
cmp
gs
outsb
addr16
jbe
dec
mov
aam
add
sbbb
jle
cmp
jecxz
mov
dec
xchg
test
cmp
cmp
jecxz
xchg
mov
sub
ficoms
lcall
mov
xor
mov
sbb
cmp
std
jne,pt
fbstp
lods
and
dec
arpl
jae
xchg
xor
negl
sbb
and
dec
movsb
mov
std
aad
loope
adc
push
fwait
push
es
in
mov
cld
mov
call
insl
loopne
pop
jecxz
cmp
lcall
cmp
and
fwait
mov
jnp
mov
mov
jnp
int3
mov
mov
stc
ret
outsl
jge
jecxz
xchg
lods
cmpsb
les
xor
lock
xorl
jne
xchg
mov
xchg
nop
inc
xlat
repz
lret
mov
test
or
imul
cld
cmp
inc
es
mov
fists
adc
sti
jns
sub
inc
jmp
and
data16
repz
iret
xor
adc
movsb
mov
sbb
clc
mov
dec
mov
adc
aas
cmp
dec
mov
cmpsl
pushf
cmpsb
call
inc
push
leave
mov
jg
in
push
lds
mov
les
sub
jns
subb
shlb
in
into
inc
mov
lods
sbb
cwtl
and
push
out
push
stos
inc
arpl
movl
arpl
lcall
rolb
xchg
subb
shr
imul
scas
ret
jns
aam
adc
add
adc
jecxz
sbb
ljmp
les
into
mov
ret
jbe
push
test
fldt
fcomi
dec
sarl
iret
mov
add
test
scas
inc
add
movsl
or
adc
notb
in
mov
adc
sahf
rcll
hlt
das
es
or
test
mov
in
test
mov
in
lds
and
sub
lret
jmp
mov
lret
or
stos
dec
div
shll
jle
sbb
add
dec
pop
pop
iret
jns
imul
xchg
idivl
cmc
mov
cmc
pop
lcall
sub
outsb
cmpsl
and
cmp
stos
sbb
mov
outsb
hlt
cmc
add
outsl
mov
bound
cs
and
mov
push
rorb
jge
pop
jge
dec
xor
ret
mov
mov
inc
mov
sbbb
jl
aad
lods
mov
add
imul
dec
pushf
rclb
adc
pusha
pop
mov
or
stc
sub
push
mov
mov
jl
xchg
sub
adc
dec
aas
test
mov
sub
fwait
insb
loopne
idivb
sub
mov
testl
or
xor
in
jg
insb
insl
bound
shlb
adc
pop
jmp
mov
pushf
pop
adc
add
xor
xchg
jle
jnp
sbb
push
jne
sub
sub
dec
jno
rol
push
shl
pop
popf
or
push
jecxz
push
test
add
ss
lea
clc
lods
adc
pop
shlb
adc
push
mov
leave
sti
loop
out
mov
and
fdiv
dec
mov
ror
push
int
repnz
ja
sbb
and
xchg
pop
out
fisubl
movsl
jmp
call
xor
icebp
fwait
push
cmpsl
push
or
push
pop
subb
in
pop
aam
imul
stos
or
pop
jle
mov
insb
stos
mov
jecxz
pop
mov
jecxz
ret
in
je
iret
xor
cltd
pop
out
xor
cs
xor
push
roll
inc
xor
out
add
imul
mov
sbb
xor
dec
dec
in
mov
mov
cltd
inc
in
or
ds
inc
rorl
or
and
pop
mov
mov
stos
sbb
jle
lret
and
mov
pop
and
jnp
fs
jne
xchg
aad
loopne
lret
loop
add
out
jg
sub
ljmp
xor
sub
or
jp
xlat
sbb
repz
cs
stos
cmpl
scas
lock
daa
jmp
lcall
icebp
xchg
and
cwtl
aas
cmc
bound
inc
inc
pop
repz
add
in
pop
ficoml
mov
cli
push
sbb
sti
dec
sub
push
scas
ja
adc
pusha
cmp
mov
cmpsl
test
fwait
or
cmp
inc
cmp
mov
lahf
imul
xorb
mov
jb
sub
aaa
push
xchg
mov
or
lods
pop
and
jle
and
int
das
in
rcll
daa
fadd
pop
lock
fdivrl
enter
fsts
and
lods
sub
adc
nop
orl
pop
pop
add
mov
mov
jg
scas
sub
and
sbb
fnstsw
mov
movsb
in
jmp
mov
enter
pop
sub
dec
push
sbb
es
push
clc
pop
sub
push
fistpll
ljmp
stos
mov
sbb
inc
inc
dec
jmp
ret
fistps
mov
loope
sbb
sbb
fcomps
jns
xchg
flds
xchg
shr
test
sub
cltd
sub
shlb
into
pop
aas
pop
shrb
mov
mov
test
adc
mov
in
xchg
xchg
jge
mov
sar
inc
jg
mov
fisubl
outsb
dec
aad
lea
mov
mov
lea
mov
sub
xor
aam
push
sti
fcmovnbe
inc
imul
and
add
js
sbb
adc
outsb
ljmp
movsb
lea
fs
xorl
and
mov
mov
cmove
in
add
push
cld
pushf
inc
and
dec
scas
sub
cmp
lods
mov
clc
aam
pop
rol
out
xchg
mov
roll
fwait
mov
inc
mov
frstor
xor
pop
cmp
fstpt
mov
loopne
mov
sbb
inc
push
rcrl
push
mov
ljmp
push
stos
test
pop
out
addr16
xor
fsubs
outsl
es
cmp
roll
push
ljmp
mov
decl
cmp
sbb
sbbl
int3
jbe
cltd
lcall
fdivl
push
push
movl
inc
xor
sub
scas
push
test
mov
mov
test
inc
pushf
inc
push
dec
addb
test
dec
pop
add
lret
jo
ja
and
inc
inc
cmc
js
and
xor
arpl
or
mov
mov
mov
scas
cltd
mov
push
test
sub
jmp
data16
cmpsl
push
outsb
in
pop
ret
lret
test
pop
cmp
loope
inc
test
mov
fwait
pusha
lahf
dec
outsb
cwtl
inc
pop
lret
imul
dec
int
je
jl
pushf
jge
cld
fimull
out
inc
cmp
imul
dec
inc
sar
pop
ja
pop
imul
mov
cmp
cmp
sbb
sbb
cwtl
and
mov
xchg
sbb
and
adc
add
ret
pop
jbe
push
jne
push
pop
mov
jecxz
enter
jecxz
and
outsb
in
cmp
pop
cmc
in
cltd
mov
aaa
out
cmp
aad
insb
sbbb
push
mov
xchg
flds
sub
imul
and
sti
lcall
cmp
arpl
pop
or
mov
and
push
test
lret
cmp
mov
xchg
sti
lds
pop
fs
mov
mov
lea
adcl
dec
hlt
pop
mov
outsb
or
adc
popa
fwait
test
xor
ret
popa
test
add
cs
lahf
daa
push
cmc
or
test
or
and
mov
or
mov
adc
add
sbb
push
out
es
in
fisttps
sbb
enter
fwait
xlat
nop
jl
cmp
pop
xchg
ret
in
fildll
stc
stos
jnp
pop
out
dec
jne
pop
sub
mov
push
outsl
jle
repz
cmp
push
adc
or
mov
mov
imul
cmp
leave
mov
pop
push
or
rcrb
mov
push
loope
clc
clc
push
gs
lahf
orl
icebp
sub
repz
sub
nop
shrl
fs
mov
aas
lea
shlb
out
shlb
cli
lock
iret
sbb
bound
pop
aad
xor
lahf
pop
push
cmc
test
pop
sub
sub
outsb
xchg
insl
cmp
clc
in
mov
loopne
and
pop
sbb
mov
enter
jbe
rcrl
ret
dec
cmp
inc
and
arpl
xor
jl
aaa
fldcw
pop
js
sub
inc
pop
or
xchg
pop
shl
dec
sbb
mov
insl
add
cli
scas
lods
mov
popa
dec
dec
sbb
sub
push
inc
loope
mov
outsb
dec
dec
sti
add
jno
jl
call
xchg
in
push
adc
in
into
js
cmp
shlb
addr16
call
fnsave
mov
int
sbb
in
mov
push
jmp
xchg
mov
pop
cs
lcall
pop
jle
pushf
or
adc
xor
pop
inc
ja
iret
data16
sbb
or
mov
popf
std
ret
fstps
xor
out
mov
pop
lret
adc
je
pusha
push
imul
xor
inc
xor
sbb
mov
mov
test
cld
imul
fdivr
xlat
xchg
push
loop
sbb
inc
popf
xlat
xor
mov
mull
test
sbb
rcrl
cmp
sub
movsl
sbb
cmp
dec
pop
push
out
ret
aas
data16
aam
or
orb
sbb
inc
push
or
adc
vpshlw
imul
lock
leave
mov
or
push
mov
add
xchg
pop
jmp
mov
or
mov
idivb
sbb
inc
out
call
lods
shrb
jb,pt
and
adc
aaa
push
push
dec
sarl
sub
lods
cmp
cli
mov
adc
pop
sub
aaa
test
mov
push
adc
dec
hlt
pop
xlat
mov
js
ss
xlat
in
mov
jb
cmp
cs
imul
aas
mov
jns
shl
jl
pop
cmpsl
in
jle
dec
mov
push
stos
adc
lret
and
insl
dec
cwtl
out
sbb
and
jle
ljmp
enter
mov
jl
aam
hlt
mov
out
or
je
loope
adc
cwtl
sbb
repnz
mov
jno
dec
loope
dec
and
sub
push
iret
out
jp
dec
mov
mov
xor
lds
or
push
xchg
mov
sbb
add
adc
testb
push
cmp
cmp
push
stc
lea
add
lahf
sbb
mov
pop
sub
and
sbb
das
hlt
sub
orb
sbb
shlb
jbe
divl
push
rolb
std
cmp
pop
scas
sbb
cltd
cwtl
shld
xchg
add
cld
jnp
ja
lods
fwait
xor
jecxz
push
pop
nop
sbb
push
hlt
aaa
insl
ret
into
add
mov
xchg
and
sahf
mov
sub
inc
push
andb
push
pop
xchg
dec
out
ja
mov
fwait
add
popw
aaa
into
mov
repnz
aad
rol
cmpb
dec
nop
sbb
sbb
mov
dec
jge
cmpsl
adc
jne
dec
jne
clc
jb
ss
sbb
mov
push
pop
xlat
dec
in
pop
xchg
outsb
xchg
mov
sub
lret
pop
push
fidivrs
cmc
jne
xchg
out
jp
and
imul
mov
pop
into
sbb
mov
mov
mov
lahf
pop
and
sbb
js
xchg
sbb
xlat
xlat
call
test
ja
test
lods
fmulp
aad
and
movsb
and
or
mov
lret
js
int3
or
adc
imul
aas
pop
lcall
or
out
lret
dec
cltd
aad
fldenv
scas
dec
sbb
icebp
fwait
addr16
pop
ljmp
xor
jbe
test
push
xlat
sti
cmp
mov
jp
les
xor
fldcw
mov
gs
inc
cmp
jg
xchg
mov
fildl
sbb
sbb
jp
xchg
ficoms
jo
pop
and
arpl
xchg
iret
or
xchg
fistpl
cmp
out
mov
jns
cwtl
cmp
sbb
out
jno
cltd
lods
in
mov
push
fcomip
rorb
lahf
dec
mov
bound
in
jle
cli
rcll
into
jg
jns
inc
f2xm1
sub
or
xor
notl
dec
jbe
jae
imul
push
inc
fisttpl
push
or
cmpsl
xchg
inc
push
repz
sbb
cs
out
fstpl
outsl
hlt
add
pop
mov
jo
pop
cmp
xchg
adcb
xchg
mov
dec
xor
ret
repnz
clc
adc
fmuls
dec
enter
movsb
xor
dec
and
test
and
lcall
sti
shll
fisttpll
rol
in
mov
in
shlb
sbb
xchg
lret
je
sarb
jbe
sub
lret
and
pop
dec
push
adc
xchg
add
bnd
or
rol
in
stos
pop
leave
or
jmp
call
rorl
repz
pop
dec
popf
inc
add
lods
call
test
scas
push
test
stos
lock
or
sbb
xorl
repnz
push
jo
mov
cmc
mov
into
iret
mov
dec
push
mov
fsubs
out
shrb
cmp
daa
in
cmc
lds
xor
jg
movb
and
cld
hlt
outsl
cli
jg
or
jno
mov
outsb
flds
ret
or
clc
mov
hlt
loopne
lods
mov
cmp
movsb
icebp
stos
pop
in
imul
in
cmp
cmp
repnz
movb
sbb
push
sub
ja
xor
in
movsb
cmp
sub
mov
pop
mov
dec
xor
dec
adc
mov
loope
mov
das
mov
cmp
cld
cld
inc
ljmp
mov
lret
sbb
fbld
and
pop
nop
insl
xchg
fucomp
sbb
cmp
out
insb
pop
xchg
xor
jg
mov
lcall
fwait
les
sahf
sub
mov
add
popf
ud1
inc
pusha
repz
or
jo
mov
dec
dec
popf
push
in
mov
fstp
arpl
test
insl
popa
icebp
add
push
adc
push
addr16
pop
cltd
xor
repnz
push
scas
mov
dec
push
or
inc
xorb
mov
pop
xchg
rcll
dec
pop
add
cmp
loop
add
sbb
cmp
movsl
int
cmpsb
pop
xchg
and
jp
jns
es
js
and
sub
aad
lcall
ret
stos
outsl
movsb
add
mulb
and
subb
cmpsl
push
dec
jmp
push
cli
nop
inc
inc
std
and
ss
ja
push
xchg
mov
out
dec
push
inc
push
mov
add
xchg
mov
out
inc
into
out
push
data16
mov
jbe
jmp
and
sub
jbe
adc
inc
xchg
or
repz
mov
push
je
out
cmp
push
cmp
movsl
js
fidivrl
or
dec
jb
sti
inc
aas
xchg
rcr
hlt
pushf
icebp
lods
test
fists
and
fisubs
or
clc
rcrl
mov
imul
sbb
sar
cmpsl
xchg
cmp
fwait
ljmp
ret
fisubl
fs
dec
xchg
dec
mov
rclb
mov
xchg
andb
sub
cmp
mull
or
or
mov
leave
test
push
fbstp
shlb
mov
leave
repnz
or
pop
dec
xor
jle
stos
ficomps
adc
dec
sub
sbb
mov
or
test
jo
pop
dec
out
inc
mov
pop
outsl
nop
filds
jge
clc
loope
mov
ret
mov
mov
dec
add
fwait
scas
int
push
mov
xor
mov
add
aam
ljmp
aad
fisttps
int3
cmpsb
inc
clc
fbld
rol
ds
adc
pop
and
xor
dec
jge
cmc
add
outsl
cmp
dec
mov
sub
les
adc
mov
shl
jno
es
mov
push
lods
jae
mov
out
stc
inc
xor
xchg
dec
mov
xchg
sub
inc
and
testb
jnp
leave
adc
jae
mov
or
and
subl
mov
pop
enter
inc
and
inc
xor
inc
push
push
and
or
into
sbb
mov
mov
inc
imulb
jb
mov
push
mov
pop
rcrl
out
pop
mov
nop
bswap
mov
sub
mov
mov
xchg
ljmp
pop
js
sbbb
cmpsl
lock
fnstcw
pop
lods
out
push
pop
subl
dec
rcl
scas
ljmp
and
xchg
xchg
cvtdq2ps
addr16
stos
mov
inc
adc
popl
hlt
andl
lods
mov
xor
lret
jle
push
fwait
lods
dec
repz
repnz
push
cli
xchg
xchg
dec
sbb
sub
and
fcoms
cmp
xor
xchg
pop
xchg
or
test
scas
call
and
pop
lcall
ds
ret
jecxz
mov
ret
enter
mov
dec
sbb
push
jge
xor
add
stos
sbbl
out
and
mov
cli
xor
push
and
aaa
in
mov
dec
decl
adc
cmp
ja
add
push
pop
or
or
arpl
aas
scas
int3
dec
sarl
inc
scas
outsl
lret
lods
shrl
mov
jle
inc
hlt
ja
xchg
jno
xchg
outsl
test
aad
adc
mov
mov
dec
rcll
ss
pop
cmc
xor
mov
dec
negl
xchg
fdivrl
loope
mov
cmpsl
scas
fcmove
pop
mov
mov
std
stc
jmp
aad
mov
xor
pop
fucomi
xchg
jno
push
in
inc
retw
or
sbbb
sarb
pop
outsl
jne
in
cltd
ret
and
fwait
mov
test
lcall
cs
mov
lea
pcmpgtb
xorl
adc
pushf
jbe
sbb
inc
fs
out
popa
ljmp
xor
sbb
jle
mov
hlt
lret
xor
xchg
test
jecxz
or
dec
jmp
aad
mov
pusha
dec
mov
mov
cmp
dec
dec
lock
mov
das
mov
stc
jbe
je
cli
or
xchg
in
out
mov
cmp
scas
mov
ret
jmp
out
cmp
push
sbb
scas
in
mov
dec
push
sub
sahf
out
push
adc
xor
push
push
push
roll
sub
jne
jns
xor
push
xchg
jl
dec
or
rolb
adcl
xor
xor
int
xchg
in
sbb
sarl
frndint
pushl
mov
iret
mov
aad
jecxz
mov
lcall
daa
cmc
dec
test
daa
int3
popa
xchg
sub
add
push
notl
test
and
outsl
mov
sub
sbb
movsb
rcr
push
out
push
gs
out
adc
nopl
test
pop
xchg
test
mov
daa
xchg
roll
pop
or
movsl
rol
repnz
fsub
nop
jl
sub
mov
faddl
mov
mov
mov
mov
mov
or
aas
mov
fcmovne
xlat
ljmp
push
pusha
test
cmpsl
fs
lret
jmp
je
push
aad
adc
insl
into
lret
test
out
and
mov
ljmp
sub
and
in
sbb
cmp
loopne
in
es
xchg
jo
lea
pop
mov
jo
mov
vmread
dec
jecxz
gs
jge
faddl
sbb
mov
push
ss
stos
push
push
jno
sarb
sub
mov
xor
adc
icebp
shll
decl
mov
lahf
inc
xor
inc
push
push
enter
pop
ret
addl
push
lret
adc
in
mov
pop
push
out
not
lods
mov
cmp
add
sar
das
inc
les
pop
xor
popf
stos
int3
jbe
and
pushf
mov
icebp
in
dec
mov
lock
xor
leave
sbb
push
loope
jg
out
das
and
sub
cmpsl
add
inc
sub
push
jbe
push
mov
bnd
dec
scas
jp
wbinvd
inc
mov
out
adc
xchg
lds
call
mov
add
xor
jmp
nop
ss
jnp
das
or
push
aad
add
xor
dec
call
aam
pop
jbe
jge
mov
gs
frstor
lods
adc
mov
sub
scas
sub
sahf
dec
mov
mov
push
fs
xchg
insl
dec
jbe
push
xor
int
dec
jl
imulb
add
loopne
fisttpll
lcall
mov
xor
ja
cmp
lds
dec
mov
pop
lods
push
pushf
lret
sbb
insb
pop
or
dec
and
lods
pop
inc
dec
push
adc
pusha
mov
push
mov
aad
popf
inc
fnstsw
pop
cmp
test
and
shll
aaa
mov
shr
fnstenv
fdivr
xchg
xchg
scas
dec
dec
bound
jns
sub
sbb
aam
arpl
ds
push
mov
jecxz
pop
fidivrs
push
cmp
fstpt
fst
and
mov
inc
jg
in
pusha
adc
in
push
cmpsb
sub
xor
out
decb
push
stc
push
mov
fmull
pop
mov
or
cmp
mov
imul
in
cmp
mov
xchg
push
aas
jno
fdiv
push
fwait
cld
ja
inc
mov
cmpl
xchg
leave
dec
dec
jb
mov
sub
cmp
mov
adc
and
add
loope
add
cmpsb
pop
rol
insb
jmp
sbb
and
and
jge
filds
scas
subl
movsb
jp
jl
mov
testb
mov
mov
mov
sbbb
mov
dec
cwtl
xchg
adc
adc
repz
mov
in
push
fsts
lock
and
jl
push
fldt
cli
test
lret
and
lcall
inc
sub
cmp
adc
shr
sahf
xchg
dec
push
ret
jle
xchg
das
push
cmp
lods
mov
mov
and
out
dec
jno
adc
mov
mov
add
cmp
push
popf
daa
and
fsubr
das
es
lret
pop
call
cmp
and
sub
ljmp
sub
sub
orl
lea
mov
jns
xchg
scas
push
int
and
cmp
std
adc
cwtl
sti
addr16
jp
in
clc
sarl
dec
iret
bound
shlb
ja
pop
gs
shlw
or
clc
popa
mov
inc
shlb
dec
dec
cmp
pop
sbbb
jnp
pusha
mov
gs
mov
jae
pop
insb
dec
xchg
scas
xor
or
jb
inc
hlt
imul
inc
or
xchg
cs
and
xor
lret
imul
adc
daa
cltd
jne
inc
push
inc
in
shl
cmpsb
rcrl
xor
add
sar
mov
outsb
or
inc
pusha
sbb
cmp
jne
popf
test
xlat
jmp
in
in
xor
pop
sub
dec
pusha
mov
jbe
mov
mov
add
dec
rcrb
mov
cmpsb
popf
outsb
test
xchg
mov
std
pop
ficoml
jb
pop
cmp
adc
test
loope
and
cmpsb
pop
pop
iret
pop
mov
inc
sub
call
xchg
cltd
aaa
adc
in
mov
push
jge
sbb
adc
dec
aad
add
in
xchg
loopne
pop
or
leave
js
daa
mov
xor
push
sti
xor
test
jg
jns
ljmp
adc
push
inc
inc
imul
adc
imul
mov
xchg
ret
adc
add
inc
divl
and
dec
jmp
push
sbb
push
push
adc
xchg
scas
addb
inc
mov
pop
mov
mov
test
push
mov
inc
addr16
stc
rolb
mov
push
leave
push
dec
push
sbb
or
jecxz
lcall
dec
in
ljmp
fldenv
int
clc
sub
fbld
sub
aad
out
dec
rolb
or
sbb
jnp
out
jnp
inc
xlat
mov
fcom
test
xor
jecxz
pop
lcall
dec
push
popa
or
xor
pop
mov
cli
push
aas
dec
and
out
dec
je
push
push
jbe
cmp
jno
mov
mov
add
iret
push
pop
sbb
and
int
push
loopne
ret
rclb
roll
fnstsw
push
popf
and
stc
test
call
fildl
push
fsts
pop
cmpsb
sbb
cmp
cmp
ret
inc
test
lock
cmc
dec
and
rorb
jnp
xor
mov
pop
mov
loope
or
mov
fmull
fmul
mov
std
inc
mov
adc
aam
cld
stos
mov
fwait
inc
lret
jecxz
xor
cmp
insb
adc
mov
shlb
jbe
mov
je
add
fbstp
insl
mov
xor
push
das
jge
cli
pop
xchg
dec
and
sti
sub
jnp
jle
enter
ja
mov
aad
and
outsb
mov
add
add
test
push
cmc
mull
cmovbe
pop
mov
cmp
incb
mov
mov
ficoms
jle
mov
hlt
pop
jb
push
ret
clc
or
and
fs
iret
cli
pusha
adc
out
xchg
xor
aam
in
hlt
dec
and
mov
ds
mov
out
pop
jg
xchg
or
mov
jle
es
lret
mov
mov
sti
xor
mov
subb
ret
stc
pop
xchg
or
inc
jecxz
cmp
sbb
jp
ret
leave
mov
push
adc
and
dec
idivl
leave
pop
in
push
outsl
sub
es
testb
mul
test
mov
cltd
sub
sbb
jle
inc
pop
cltd
xchg
aas
jle
les
cmp
mov
inc
movsb
jecxz
mov
push
repnz
adc
dec
jmp
jb
shrl
xor
cmpsl
pop
dec
sbbb
lods
cmp
push
call
xlat
adc
jge
mov
ja
push
fsubs
lds
adc
jnp
jl
sbb
dec
push
mov
out
icebp
mov
dec
bound
xor
sbb
push
sub
mov
test
and
mov
lods
out
js
mov
jbe
cwtl
jnp
pop
dec
xchg
mov
mov
inc
mov
or
jg
dec
clc
cmpsb
popa
pop
xor
cmp
push
mov
xchg
jnp
das
cmpsl
push
mov
bound
push
or
xchg
ja
popa
xor
cmpsl
sub
les
jecxz
mov
dec
push
pop
ljmp
mov
cmpsl
fisttps
sub
hlt
test
jae
mov
mov
jp
mov
pop
out
cmc
arpl
sub
sbb
xchg
aaa
mov
cld
in
insl
mov
enter
imul
arpl
repnz
or
pop
insb
xchg
or
jp
lods
adc
dec
das
jb
stos
call
repnz
out
mov
lea
or
jne
cmp
or
js,pn
push
inc
push
push
jg
and
mov
test
cmovl
pop
dec
aam
cmp
fstpt
shll
inc
lret
int3
aas
jb
mov
bound
or
fnstcw
shll
mov
popf
jmp
outsl
icebp
stc
push
mov
cmpsl
or
and
sbb
sbb
jl
ficomps
je
std
test
cmp
test
mov
stos
outsl
adc
jae
pop
add
out
xor
dec
jnp
movl
push
cmp
push
mov
repnz
decl
int
dec
cs
jb
inc
cmp
mov
jmp
in
call
dec
mov
popf
xor
jl
mov
cld
mov
dec
ficompl
aas
cli
ja
push
mov
sub
push
push
push
daa
daa
jg
lret
or
dec
xchg
fisttpl
cmp
daa
lock
iret
test
or
mov
cld
sub
mov
mov
or
xchg
sub
sbb
mov
and
xchg
mov
mov
pop
lock
mov
and
xchg
pop
and
jne
jmp
mov
dec
ds
loop
xor
insb
lea
push
and
les
push
fs
aam
or
stc
push
leave
mov
outsb
push
pushf
push
jns
xchg
mov
fistpl
fbstp
jl
mov
xor
xchg
pusha
inc
xorl
cld
sbb
lahf
dec
xchg
lret
insb
call
leave
xchg
mulb
xchg
sub
jecxz
xchg
push
stos
jbe
in
cmp
inc
add
dec
shll
add
movsb
lds
and
mov
mov
mov
fimull
fldcw
xchg
cltd
pop
nop
sub
push
xchg
loopne
and
adc
push
fsubrs
push
pop
into
sbb
shlb
and
sbb
rcl
adc
sbb
in
lea
sub
xlat
add
mov
inc
sbb
fldl
enter
pushf
cmc
aaa
pop
neg
xor
cli
cmpsb
nop
testl
mov
popf
xor
les
das
jle
lds
push
mov
mov
int
lods
dec
jne
push
aad
ficomps
jbe
popa
fdivs
leave
fldcw
les
dec
ret
stos
jg
out
lahf
in
icebp
cld
push
and
cmp
cmp
out
sub
pop
std
mov
mov
xchg
out
ja
cmpsl
dec
xor
cmc
mul
jns
test
popa
lock
mov
mov
outsl
adc
pop
iret
jnp
mov
lock
cmp
mov
scas
cli
pushf
dec
fildll
outsl
sbb
mov
fucomip
fucomip
scas
fistpll
stos
mov
lcall
popa
repz
and
hlt
cmp
jnp
das
mov
push
mov
ret
leave
les
aas
sbb
popf
stc
sahf
imul
int
int3
mov
jmp
js
ficoms
mov
dec
push
mov
lahf
mov
dec
lods
cli
ret
fwait
jbe
sub
fstl
jecxz
mov
jno
jnp
jecxz
testl
jg
mul
jne
pop
imul
fwait
mov
imul
mov
popa
jmp
jne
stos
loop
mov
ja
std
fstps
das
int3
in
mov
jp
stos
fstpt
ds
sahf
loopne
jp
jnp
bnd
or
push
icebp
sti
mov
and
push
push
mov
push
dec
pmaddwd
in
movsl
clc
jp
mov
jle
cli
lahf
jbe
push
stc
mov
aam
mov
stos
out
jecxz
setle
mov
mov
repnz
loopne
pop
mov
mov
mov
clc
loop
mov
pop
mulps
jns
inc
push
cld
dec
mov
cmp
inc
in
iret
fistl
sub
mov
xlat
iret
pop
or
mov
je
inc
das
push
mov
mov
mov
lahf
lods
out
or
sbb
sti
out
pop
ror
stos
jl
mov
cmp
popf
jmp
ss
aas
ds
lods
repz
movsl
mov
adc
repz
hlt
xchg
setns
fisttpl
fnstsw
lods
sahf
sti
cli
std
scas
lods
mov
jp
xlat
aaa
sbb
repz
xlat
mov
imul
icebp
outsl
mov
cmp
jg
idivl
fildl
dec
inc
aam
xor
int
jb
pop
lahf
negl
fnstcw
adc
add
aaa
in
stos
test
mov
sti
sub
in
xor
movsl
adc
pop
cmp
imul
call
ret
jb
pop
jge
mov
mov
jge
iret
pop
fildl
loop
nop
sub
bound
clc
std
sarl
inc
mov
cmp
jnp
call
jnp
cmp
jle
pushf
js
mov
insl
fs
hlt
cmp
jmp
xchg
lods
jne
insl
lahf
cmpsl
jno
rcrl
fistps
shrl
ljmp
sbb
push
mov
pop
into
xchg
cmpsb
lods
addr16
cmp
dec
scas
icebp
jo
int
repz
test
pop
jge
jmp
jecxz
aad
cmp
fdivrs
xchg
push
into
aaa
sti
lahf
shl
aaa
cmp
cli
ja
jns
cmc
pop
lcall
jmp
cli
popf
pop
add
xchg
lods
push
mov
imull
int
mov
outsb
clc
aas
aas
lcall
push
sahf
std
cmp
jg
iret
jmp
imul
test
in
mov
push
mov
push
mov
pop
jle
xchg
mov
sub
mov
jp
sub
mov
mov
mov
xchg
mov
jmp
leave
push
jmp
lret
out
shlb
mov
loope
push
jg
shrl
cmp
into
bswap
outsl
shrb
sub
pop
cmp
xchg
ljmp
sbb
shll
das
lods
fidivrl
inc
lock
jmp
mov
mov
cmp
xchg
inc
mov
add
inc
popf
stos
sti
xor
lods
je
into
icebp
push
fidivs
sub
das
add
cld
push
stos
sahf
mov
out
pop
scas
pop
outsb
jg
fsubrs
outsl
arpl
jae,pt
mov
sbb
lret
iret
push
je
push
cmc
jne
mov
sub
into
push
ffree
pop
in
pop
xchg
aas
jl
mov
negl
stos
cmp
pop
dec
aad
fmuls
fnstcw
fwait
scas
cmc
mov
cmp
jns
movl
cmp
cld
or
sbb
scas
js
ret
jns
jne
leave
push
and
push
mov
mov
jle
ja
fistpll
clc
lret
push
lret
cmpl
lret
out
pushf
std
push
or
fnstsw
sbb
loope
xchg
mov
lods
ja
loope
mov
mov
scas
movsl
pop
lahf
cmp
rcr
mov
jg
lods
in
fiadds
ja
cmpsl
jle
or
jl
imul
and
push
pop
int
outsb
cmpsl
push
mov
pop
lcall
jg
jnp
xor
in
pushl
jb
jne
mov
out
ja
push
mov
in
ds
pop
repnz
add
jne
outsb
cmp
hlt
in
mov
scas
lods
sub
aas
leave
fdivs
fnstsw
out
mov
test
cld
out
ja
push
cmc
int
lock
popf
push
jg
js
addr16
inc
mov
cld
das
pop
jno
dec
out
test
push
mov
jb
popf
jmp
mov
aad
int
in
bnd
xchg
faddl
pop
aam
jp
loope
pushf
xchg
xchg
pop
and
mov
jle
push
cmp
pop
or
jne
out
sbb
sbb
jmp
and
in
packssdw
mov
cmpsl
inc
inc
jne
sti
in
cli
insl
mov
push
mov
xlat
ds
test
mov
sbb
mov
insb
xchg
push
jle
mov
popf
fcomip
jb
adc
sbb
popf
mov
xchg
repnz
inc
clc
or
cmp
dec
add
xor
adc
mov
mov
dec
outsl
pop
decl
sbb
pop
in
clc
or
ja
sahf
cmp
enter
mov
ficoml
pushl
and
sti
jle
mov
sbb
push
pusha
push
cmpsl
jecxz
ret
mov
pop
fildll
or
xchg
mov
mov
out
and
add
int3
dec
cmp
sbb
pop
jbe
add
nop
lahf
test
sbb
jg
stos
dec
jne
xor
insb
or
inc
xchg
sbb
jg
xchg
or
mov
jg
mov
imul
pmaddwd
icebp
repz
mov
inc
cli
pusha
push
insb
and
repnz
fcoms
cmp
pushl
les
adc
scas
test
andps
mov
dec
mov
push
incl
and
or
ret
lds
popf
push
lret
popa
mov
fildll
std
mov
pushf
xchg
xchg
mov
mov
cs
insb
lods
push
jecxz
mov
ds
push
pop
adc
adc
jecxz
xchg
stc
lret
jno
mov
iret
in
mov
out
out
push
sti
mov
sub
xchg
cmp
xchg
cltd
fucomp
stos
pushf
xchg
shrb
hlt
xchg
fisubrs
pop
out
loopne
mov
lcall
inc
jne
pmaxub
mov
pop
shr
hlt
in
fists
es
pop
notl
dec
scas
out
mov
push
repz
test
cmp
sub
imul
scas
lds
lods
jg
enter
pop
stc
insl
push
mov
push
mov
rclb
aaa
push
out
call
ljmp
xlat
lods
setno
xchg
mov
in
imul
pop
sar
je
ja
lea
aaa
lahf
ret
in
test
jmp
mov
cli
dec
dec
mov
andl
sti
iret
stos
cmc
fidivrs
and
sahf
xchg
insl
mov
cs
jnp
jmp
and
fidivrl
out
or
imul
lahf
pop
insb
gs
mov
xor
sti
xchg
data16
lahf
fbstp
pminub
sub
or
jns
pop
loopne
xchg
je
push
repz
sub
pop
jmp
dec
jp
cmp
sti
in
out
cmp
adc
add
bts
add
inc
push
cmc
mov
add
sub
mov
mov
fsubs
sbb
inc
jge
aas
icebp
sub
lret
iret
jg
ret
push
jno
mov
rcl
scas
mov
mov
mov
sahf
call
mov
add
add
push
pushf
jnp
jg
jmp
lods
nop
push
jge
pop
jp
movsb
cmpsb
mov
out
int3
lahf
jns
enter
int
hlt
std
cmp
mov
sub
in
xchg
test
int3
scas
fcmove
popf
cmp
fsincos
cmc
mov
lods
mov
js
xor
fisubs
ds
icebp
sbb
lret
xchg
mov
fldt
and
idivb
sub
jns
push
fidivrl
or
pop
scas
insb
mov
mov
lods
sahf
std
negb
sub
cs
movq
or
jo
sbb
iret
inc
gs
sti
mov
paddsb
dec
push
sbb
stos
into
scas
ja
fnstcw
sub
jns
cs
push
xor
jns
ds
jecxz
dec
aam
or
iret
jg
iret
sub
aad
mov
jmp
dec
lret
aad
je
or
sarb
out
pop
push
cmovge
icebp
inc
and
xchg
cld
sbb
in
cmpsl
fstpl
dec
out
pcmpgtw
xchg
cmp
scas
pop
cli
in
jbe
flds
cmp
dec
lret
dec
dec
mov
mov
adc
pusha
iret
cmp
addr16
jno
xor
idivl
popa
daa
xchg
push
gs
sub
stos
sbb
data16
aad
ds
iret
das
jns
and
sahf
lods
adc
popa
out
movsl
jns
cmpsl
stos
add
adcl
fs
jmp
popa
cmp
sub
jns
cld
fistl
push
fdiv
incb
jno
test
fbstp
inc
cs
lret
fwait
repnz
xchg
out
pop
fcmovne
mov
hlt
and
nop
sbb
mov
push
adc
inc
sub
popa
mov
int3
mov
repz
mov
add
fnsave
pop
push
ret
cmc
adc
mov
daa
push
sbb
mov
addr16
out
out
clc
sub
roll
push
das
out
add
mov
cmpsb
lret
sti
in
and
or
push
or
xchg
call
test
mov
jmp
ljmp
loope
xchg
push
loopne
push
insb
cltd
jg
mov
lea
and
sbb
cmpsb
mov
in
or
das
out
jne
stos
cmc
cmp
das
lahf
pusha
jl
pop
iret
loopne
incb
iret
loopne
incb
iret
loopne
in
jmp
lahf
push
insb
aaa
xchg
jo
sbb
cld
cmp
outsl
outsl
cwtl
jbe
mov
mov
xchg
nop
mov
dec
xchg
push
mov
ret
mov
jle
sbb
jne
scas
imul
xor
sbb
xchg
and
mov
ds
fnstenv
mov
mov
or
fsts
push
sub
ds
daa
sahf
mov
gs
add
pop
push
cmp
mov
lahf
xchg
dec
xchg
bound
pop
xor
lahf
and
nop
sbb
fwait
lcall
std
push
data16
mov
pop
mov
jno
lock
daa
scas
mov
sub
cmp
dec
push
in
gs
pop
or
or
sub
xlat
rclb
inc
xchg
dec
sub
test
mov
cmp
pop
sub
pop
repz
add
and
push
add
ja
xor
lea
pop
popa
sbb
xor
lret
repnz
adc
rep
pushf
dec
ja
mov
push
mov
cld
mov
and
pop
inc
push
sbb
adcl
dec
mov
aad
icebp
bnd
data16
sub
add
outsb
leave
stc
lahf
loop
cmp
fbstp
mov
push
sbbw
adc
insb
test
repz
or
movsb
movaps
addr16
mov
cmp
movsl
xor
sarb
add
aad
mov
icebp
sub
push
sub
sub
repz
sbb
cwtl
jge
jg
jnp
mov
lea
xchg
jl
movsb
ret
sbb
ja
xchg
push
sti
xchg
stc
aam
mov
sbb
ja
enter
aaa
add
xchg
es
sbb
sbb
mov
adc
and
dec
xor
push
inc
cmpb
or
data16
and
inc
shlb
pusha
mov
push
icebp
out
xor
sahf
imul
xchg
push
arpl
pop
cmp
adc
cmpsb
repz
inc
into
das
push
mov
in
imul
lds
push
int
inc
popf
cs
rclb
das
out
jp
sbb
and
mov
add
sbb
pop
aas
js
add
or
xlat
inc
cmpl
and
pop
xchg
andl
inc
mov
add
ja
ja
jmp
adc
mov
mov
push
arpl
jne
clc
pop
push
mov
and
loop
sti
js
xor
xchg
mov
jg
xchg
dec
push
and
mov
ljmp
push
push
xor
jns
adc
inc
ret
dec
mov
inc
enter
add
scas
xor
movsl
mov
push
add
into
out
in
fsubrl
push
sbb
mov
dec
lds
sbb
pop
push
dec
mov
aam
sbbl
jge
mov
jno
loop
mov
jle
xor
lock
pop
sub
cwtl
js
stos
push
push
mov
test
test
out
push
jne
repz
mov
mov
sbb
loop
pop
mov
jno
sbbl
fwait
mov
fwait
daa
mov
insl
mov
cmpsb
pop
add
sbb
or
xor
jl
push
mov
sub
dec
cmpsl
inc
es
clc
aaa
jg
leave
push
inc
aas
jns
test
mov
dec
inc
bound
sub
xchg
add
arpl
mov
fidivs
mov
push
ret
sub
xor
imul
in
out
enter
xorb
adc
enter
xor
add
and
push
mov
addb
out
mov
sbb
or
xchg
js
fbstp
icebp
bndldx
sti
popa
mov
out
xor
jp
mov
cwtl
push
cmc
movl
or
cwtl
loope
push
dec
xlat
addr16
in
xor
scas
out
push
pop
inc
cmp
outsb
xchg
mov
cmp
fsubrs
dec
fs
cwtl
lret
and
fs
leave
movsl
pop
cmp
notb
xchg
and
pop
enter
out
cs
bound
or
pop
mov
sbb
adc
inc
mov
mov
fwait
push
cmpsb
cltd
enter
test
pusha
insb
and
pop
add
mov
adc
sbb
sbb
adc
inc
adc
dec
adc
arpl
inc
inc
cmpsl
mov
enter
mov
in
movsb
mov
sbb
push
mov
call
outsl
push
sbb
out
xor
push
xor
mov
out
jns
push
push
dec
enter
addl
cmpsl
dec
inc
ret
outsb
sbb
jecxz
pop
adc
jae
jb
push
xchg
daa
mov
and
mov
or
add
adc
daa
adc
or
dec
jno
lock
mov
jp
push
adc
mov
orl
push
ja
inc
or
sbb
sbb
or
outsl
sbb
cmp
and
sbbb
pop
sbb
int3
ret
sbb
int3
outsb
push
pop
mov
dec
loope
jmp
push
pop
and
std
fs
sub
mov
lock
hlt
inc
and
push
or
loopne
mov
arpl
cmc
push
mov
js
stc
sbb
js
mov
cmp
adcb
cli
testb
stos
sbb
outsb
and
daa
cmp
mov
nop
outsb
loopne
iret
inc
cli
out
pop
and
dec
push
jg
inc
adc
sbb
in
push
loope
sahf
andps
scas
cmpsb
fcomps
fs
js
add
or
or
xchg
jle
mov
xor
test
xorb
test
daa
xor
icebp
adc
pop
mov
adc
adc
icebp
cmp
lret
xor
jno
lods
xchg
push
fisubs
imul
mov
xor
or
andl
das
call
or
jbe
mov
arpl
enter
and
int3
jl
bound
and
cs
roll
mov
xorb
and
mov
sbb
call
sub
dec
loopne
ljmp
xchg
adc
pop
lds
add
dec
add
cmp
rcrb
inc
jns
aaa
and
arpl
sub
lods
sbb
cs
ret
push
jecxz
jg
adc
sbb
mov
jp
add
out
xor
inc
ret
fwait
sub
inc
adc
xlat
lea
fistpl
cltd
cmp
xchg
addb
xchg
xor
subl
pop
xchg
push
mov
stos
mov
test
andl
outsb
dec
stos
or
push
xchg
in
dec
lcall
pop
or
add
xchg
xor
iret
movsb
repz
in
cmp
xchg
gs
add
mov
pop
scas
fdivl
sbb
ss
pop
mov
jno
ret
data16
sub
push
add
xadd
rcl
or
loop
repnz
data16
xchg
leave
fucomi
mov
cmpsl
mov
pop
inc
pop
dec
xor
xchg
dec
ret
aad
shl
pop
and
cmpsb
sbb
lods
adc
loop
xor
loop
repnz
outsl
pusha
mov
sub
pushf
pop
in
xchg
inc
mov
add
sub
out
es
sbb
iret
push
sbb
fwait
dec
or
out
pop
adc
jle
movsl
hlt
fs
test
nop
std
add
insb
sqrtps
mov
jo
mov
andl
adc
dec
nop
insl
popa
ss
andl
aas
shl
inc
push
aam
pop
xor
dec
sub
sub
sbb
loopne
insb
dec
xchg
adc
or
mov
sbb
and
pop
inc
lahf
sti
xchg
or
pop
shlb
xchg
cmp
das
pop
fldcw
sbb
push
dec
adc
pop
jnp
outsb
mov
cli
ss
bound
xchg
mov
loope
lds
mov
adc
mov
scas
and
sar
cmpsb
fnstsw
jecxz
stos
push
cli
fxtract
shlb
or
sbbl
or
cmp
and
and
push
push
jmp
out
add
clc
aad
mov
mov
sbb
dec
sbb
aad
arpl
imul
mov
inc
outsl
lea
stc
out
fisttpll
add
daa
sbb
sub
iret
mov
push
mov
and
sub
adcl
sbb
dec
adc
xchg
and
cmp
pop
movsw
mov
sub
leave
push
add
mov
pusha
jae
mov
jno
shlb
pop
push
mov
test
lret
test
or
insl
jmp
outsl
pusha
std
pop
lret
stos
jb
ret
adc
push
add
xor
testb
call
aad
or
jae
or
xor
dec
arpl
mov
xchg
push
mov
jne
inc
sbb
mov
push
loopne
xor
push
jb
in
es
pop
adc
push
roll
fsts
push
outsb
cmp
or
xchg
sub
popa
add
int3
rcrl
repnz
add
stos
add
xchg
in
int
or
stos
jbe
popa
pop
push
mov
and
sbb
test
push
sbb
xchg
cmpsb
mov
movsbl
lcall
push
sub
xor
bound
add
int3
mov
or
aas
xchg
imul
and
lea
outsl
les
xchg
inc
xor
adc
mov
xor
or
mov
or
cmp
mov
dec
or
or
dec
mov
and
ljmp
leave
test
rol
xor
mov
les
mov
decb
mov
mov
adc
jp
je
stos
mul
mov
mov
dec
add
mov
mov
sarl
xlat
inc
pop
mov
inc
jecxz
and
call
icebp
and
sbb
mov
push
mov
add
es
lcall
out
cmpsl
push
mov
and
sbb
sub
shll
fs
imul
inc
movsb
add
test
add
push
ficompl
aam
or
xchg
test
rol
movl
add
pop
ret
out
idivb
pop
popa
ss
repz
mov
ja
aas
cmp
sbb
sbb
mov
sub
int
dec
imul
cli
sbb
fs
mov
pop
cmp
sub
mov
pushf
sbbb
push
push
push
jo
add
arpl
push
sub
xor
sbb
lcall
mov
inc
enter
dec
shrb
mov
sub
sub
jle
rclb
and
nop
into
sbb
ret
add
shl
push
sbb
push
or
imul
fsubs
enter
sub
pop
in
cwtl
xlat
add
test
pushf
cmc
daa
mov
or
ljmp
add
subl
lcall
and
in
imul
pop
or
sub
push
or
sbb
inc
xchg
in
xlat
pushf
xchg
and
pop
mov
scas
iret
outsb
sbb
sbb
cmp
sub
push
sbb
daa
clc
out
dec
xor
mov
dec
and
sahf
nop
cmp
mov
and
cmp
jmp
shrl
push
sub
int3
frstor
jns
adc
test
test
sbb
add
adc
sti
les
sar
imul
test
cmpsl
test
out
outsl
jmp
jns
mov
adc
dec
enter
sub
lods
addr16
aas
adc
shlb
inc
test
test
std
jo
mov
pop
rolb
stc
mov
leave
inc
call
adc
push
adc
cmpl
test
jne
adc
cld
cmp
xchg
fistl
hlt
movb
jg
shlb
and
push
int
inc
push
les
imul
and
aaa
sbb
pop
lret
mov
jmp
cmpsb
and
aas
sub
sar
popf
fsubrl
add
add
inc
adc
adc
inc
push
push
inc
mov
mov
xlat
mov
adc
mov
cwtl
inc
sahf
rolb
loope
pop
add
sbb
xor
xchg
sbb
mov
adc
xor
add
mov
mov
loop
mov
arpl
popa
hlt
inc
leave
xchg
dec
dec
xorb
push
aas
jb
lock
orl
and
ror
dec
push
ss
pusha
xchg
in
push
inc
out
xchg
mov
jbe
sub
inc
xor
sub
fstpl
icebp
xlat
jge
or
xorl
inc
xchg
out
mov
jecxz
xor
mov
adc
fisttpl
jl
lret
inc
call
sbb
cs
cltd
and
lret
cmpb
test
ret
aad
inc
lods
es
roll
jbe
and
fsubrl
enter
mov
outsl
push
aad
cmp
mov
sbbb
imul
add
rcll
or
pop
test
mov
inc
jmp
cld
xchg
aad
and
xchg
mov
mov
xchg
add
fistpl
mov
ljmp
mov
bswap
lods
and
jp
mov
je
repz
pop
cmp
or
push
inc
dec
xor
lea
cmpb
push
test
dec
inc
sub
push
addr16
pop
in
in
cmp
sub
adc
or
pop
call
xchg
adc
insb
mov
mov
cmp
or
or
push
cmpsb
leave
fdivr
les
das
pop
add
xchg
dec
mov
dec
mov
dec
out
sub
xchg
lret
aam
rorb
or
lea
ret
cltd
je
adc
in
stos
lret
test
jp
dec
jns
mov
xor
mov
add
sahf
xor
xchg
sahf
and
movsb
mov
test
scas
or
mov
ret
inc
ja
fwait
and
pop
in
sbb
cwtl
divl
andl
ficomps
push
cwtl
and
dec
or
push
dec
pop
xchg
pop
jl
sbb
jns
and
dec
mov
mov
xor
pop
stc
add
ja
add
pop
loopne
jo
adc
and
jp
add
fcompl
dec
adc
sbb
repnz
sar
add
jno
push
call
dec
dec
mov
dec
je
or
jno
dec
add
sbb
jo
xor
and
jo
mov
dec
mov
xor
and
icebp
push
sub
inc
and
out
mull
sbb
shrl
bound
cld
ljmp
push
fisttpl
fidivrl
rcll
push
xor
imul
fisubrs
nop
xchg
xorl
test
in
shll
adc
dec
fmulp
mov
lea
sbb
sub
mov
bound
adc
movsl
scas
add
icebp
or
fsubrl
out
jmp
xor
adc
xor
daa
adc
rorl
rolb
pop
mov
and
cs
filds
dec
xchg
fwait
aas
adc
sbb
xacquire
mov
inc
call
jp
sub
hlt
aam
loop
testl
sbb
dec
xor
mov
dec
lcall
jnp
sbb
rcr
inc
jecxz
xchg
mov
push
add
xchg
test
stos
sbb
cmp
cwtl
and
mov
loope
les
icebp
lret
sub
cli
lea
enter
pop
rorb
dec
popa
pop
sbb
js
jmp
test
push
push
int3
add
pushf
xor
movsb
fldenv
xbegin
ret
ss
or
adc
xchg
sbb
xor
fisubs
cmpsb
loopne
nop
sti
push
xchg
mov
pop
jl
pop
sub
push
sbb
aas
popf
hlt
lahf
les
push
xlat
and
sub
jbe
jle
and
xchg
mov
ret
mov
bound
andl
add
pushf
sub
and
sbb
daa
sub
fwait
repnz
pop
add
jo
inc
orb
shlb
jo
test
push
decb
outsl
push
jnp
adc
or
cmpb
mov
out
enter
add
lds
push
cmp
add
sub
es
filds
ja,pn
ret
pop
push
and
ficoms
xchg
pushf
jp
rorb
lods
adc
push
cmp
and
add
roll
enter
push
test
xor
sbb
jno
mov
or
pushf
xor
into
aas
lahf
inc
jl
push
jne
lods
pop
mov
test
xchg
loope
les
push
call
sbb
movsb
mov
inc
dec
rclb
or
test
push
jnp
pop
and
lods
and
jp
cmp
jle
mov
out
fs
stc
ret
or
out
leave
jae
ret
add
and
pop
push
fistl
in
daa
jmp
or
test
push
out
inc
ret
fwait
outsb
call
loope
fadds
cmp
arpl
sarb
xor
out
pusha
push
pop
lret
cltd
mov
add
jno
sbb
pop
jns
or
push
mov
and
adc
dec
ljmp
nop
jmp
mov
sub
mov
or
test
cwtl
and
cltd
push
ds
test
sbb
addr16
stos
push
and
jecxz
push
dec
sub
cmp
push
sbb
sbb
insb
dec
sbb
jp
lcall
les
fsubrs
and
mov
pushf
sub
mov
and
jp
popa
addr16
movsb
xchg
rcrb
xorl
incb
sbb
push
sub
lods
bound
das
and
or
push
inc
and
mov
mov
pusha
and
int3
or
push
add
aas
adc
mov
mov
in
mov
push
jb
mov
inc
push
test
adc
mov
jb
pusha
mov
data16
adc
mov
inc
sti
mov
sbb
adc
xchg
xchg
lahf
jns
ja
or
bound
xor
cmp
ret
jle
mov
fbld
and
fwait
mov
xchg
add
pop
xchg
daa
fstp
rcrl
iret
inc
adc
cmp
adc
pop
shll
xchg
push
loope
adc
imul
adc
and
es
push
out
sbb
or
and
fcoms
lock
xchg
rolb
dec
ret
decb
pop
mov
adc
aaa
ret
insl
adcb
incb
icebp
adc
in
movsb
cmpl
push
lock
outsb
loope
test
out
mov
and
mov
scas
xchg
popa
rcrb
push
sarl
cs
or
fsubs
inc
inc
bound
or
popa
sbb
ja
nop
push
inc
mov
or
or
sbb
sub
aam
dec
jb
ror
addr16
push
ret
xchg
adc
jecxz
inc
pop
cmpsb
xchg
inc
ret
int3
sbbl
loopne
into
dec
into
push
push
adc
insb
cmp
inc
sar
mov
test
jg
lds
push
jne
cld
sub
lret
ret
nop
repnz
mov
inc
dec
and
and
xchg
inc
push
add
push
or
mov
test
jae
or
cli
ret
pop
adc
pop
adc
ja
adc
xor
or
lock
xchg
lret
mov
or
jp
inc
test
cmp
movsl
jecxz
cli
push
dec
shll
mov
cs
or
leave
mov
lret
or
xor
aam
and
sbb
adc
fwait
mov
dec
imul
dec
and
mov
bound
aam
or
mov
or
cmpsl
pusha
pop
flds
adc
and
call
pop
popa
cmp
nop
in
mov
repnz
test
or
xchg
lock
aad
hlt
pusha
inc
inc
xor
aaa
push
aam
pop
and
cmpb
test
roll
mov
ret
cmp
mov
dec
fimuls
fwait
test
mov
sbbl
mov
int3
or
or
pop
inc
movsb
pop
pop
pushf
jl
lret
mov
mov
ja
test
push
ret
in
mov
cmp
in
testb
sbb
adc
push
or
push
out
and
pop
push
fs
lahf
mov
scas
jl
push
push
and
pop
lret
sar
adcb
pop
adc
and
out
andb
sub
cmp
sub
cmpsb
mov
xor
mov
fsts
cmp
loop
jno
pop
pop
add
pop
test
mov
adc
int
pushf
scas
mov
push
and
inc
bound
xchg
ljmp
inc
pop
dec
lahf
and
lea
mov
cwtl
adc
fwait
mov
pop
and
dec
jnp
sub
data16
push
push
rcrb
or
cmp
jbe
and
xor
xchg
stos
fadds
push
jne
pop
sbb
or
aad
sbb
fstpl
mov
sbb
add
mov
adc
aad
test
fmul
xchg
fidivs
arpl
sbb
xchg
or
mov
cmp
mov
sbb
xor
jbe
imul
jo
push
jae
in
xor
xor
lret
sbb
jmp
xor
pop
jecxz
imul
push
xor
xor
inc
mov
ss
sbb
xchg
adcb
jno
fsubrs
mov
xor
jbe
mov
xor
pop
mov
jno
je
xor
cld
inc
push
ss
icebp
sub
pop
in
gs
mov
movsl
xor
cmp
and
sbb
lods
xor
int3
jge
xor
arpl
sbb
xchg
inc
jae
insb
mov
mov
repnz
pushf
arpl
sbb
xchg
pusha
mov
xor
mov
xor
and
mov
outsb
sub
call
sbb
cmp
sbb
lret
push
adc
sahf
cmpsb
xor
mov
arpl
sbb
xchg
sarl
mov
outsb
adc
pop
inc
mov
dec
aaa
add
cmp
mov
mov
movsl
int3
psubw
iret
xchg
push
mov
call
pop
mov
xchg
sbb
xchg
enter
pop
fs
xlat
imul
xor
or
mov
mov
rcl
cltd
in
arpl
sbb
pop
jae
lea
xor
cmp
in
arpl
sbb
xchg
sub
xchg
outsb
insb
inc
push
xor
adc
inc
and
xor
mov
lock
mov
or
xor
imul
mov
cli
out
jmp
xor
sub
sub
gs
xor
xor
mov
xchg
sbb
xchg
out
push
mov
lret
adc
sbb
lods
xchg
jl
popa
in
insl
shl
sbb
movsl
stos
cltd
out
gs
cmp
dec
push
fcoml
mov
mov
cmp
or
fldenv
mov
test
loopne
sbb
mov
sahf
pop
movsl
jbe
xor
xchg
cmpsb
aaa
imul
fidivs
mov
mov
jb
xchg
push
lea
sub
xor
jnp
gs
mov
jge
cmpsl
es
iret
loopne
fcoms
dec
aaa
add
lea
arpl
sbb
fs
fiaddl
sbb
cmpsl
jns
fcmove
sub
shr
xor
gs
jo
imul
xor
mov
je
pop
aaa
sbb
pop
imul
xor
lret
xor
xchg
sahf
cmp
mov
or
arpl
lahf
push
add
divl
lret
int3
insb
shl
sbb
frstor
shl
sbb
fmull
lcall
or
pop
pop
cltd
in
gs
cmc
dec
adc
pop
or
mov
and
lahf
shlb
out
xchg
addr16
mov
xor
pushf
adc
out
inc
add
inc
test
je
iret
adc
into
adc
cmp
push
add
xor
xchg
pop
push
cmp
mov
cwtl
dec
es
xor
mov
cmp
daa
out
mov
fidivrl
mov
jecxz
ds
lock
mov
dec
mov
outsb
xchg
outsl
xchg
or
mov
cld
jae
shl
stc
mov
cmp
ror
icebp
popa
scas
jg
pop
ja
std
xchg
ja
movsl
fwait
jecxz
pop
ja
sbb
ror
icebp
loope
mov
in
pop
fildll
ja
fwait
in
ror
repz
scas
popa
faddp
data16
mov
jge
imul
lcall
cli
jmp
popa
scas
jnp
pop
mov
ja
movsl
fwait
in
pop
cmp
popf
in
sub
mov
adc
lock
or
xor
jp
inc
int3
jns
rcl
add
loopne
push
mov
jns
ror
jns
push
sbb
ror
jle
cmpsl
ljmp
cmpsl
test
notl
dec
ret
cmc
push
and
xchg
out
mov
pop
ret
sub
xchg
icebp
push
sahf
arpl
inc
arpl
jns
xor
push
jo
dec
xor
cmp
test
add
cmpsl
flds
push
mov
nop
and
add
push
dec
push
sbb
arpl
pop
sub
jle
jb
jmp
add
xor
and
inc
lret
cltd
pop
stos
adc
cmpsl
fdiv
inc
arpl
jp
push
in
jns
in
popl
lock
push
ds
jp
test
sti
push
arpl
std
inc
cmpsl
mov
clc
add
repz
pop
jmp
cli
jp
inc
icebp
add
loope
daa
ljmp
and
xchg
inc
arpl
sti
push
cmpsl
jmp
aas
adc
hlt
inc
arpl
addl
push
clc
inc
test
cmp
xor
inc
mov
inc
push
adc
sbb
mov
mov
xor
push
add
cmp
xchg
cltd
mov
icebp
and
add
mov
add
or
lcall
xor
adc
add
stc
mov
repz
push
cmpsl
loop
lods
pop
aas
sbb
lret
pop
pushw
pop
dec
addr16
in
fsubl
pop
sbb
adc
ret
lea
bswap
jle
mov
mov
das
aaa
les
adc
xchg
pop
imul
int3
jmp
adc
mov
dec
mov
inc
and
push
test
mov
lcall
inc
mov
inc
xchg
mov
mov
push
into
in
dec
popf
and
call
jnp
std
pop
addr16
jnp
xlat
cmp
in
out
lock
fcmovnu
popf
xchg
rcr
idivb
out
cltd
sti
idivl
ds
mov
mov
jg
inc
out
call
xor
testb
pusha
xor
nop
mov
fdivp
mov
lahf
cs
mov
rcll
lcall
and
aaa
sbb
pop
pushf
xor
xor
or
add
mov
jecxz
mov
jnp
fsubs
aam
jns
movsl
xchg
jno
cmp
cmpps
mov
out
fnstenv
pop
das
gs
mov
in
lret
mov
sbb
sbb
scas
mov
mov
add
mov
sub
movsb
xchg
stos
stos
push
daa
jl
outsl
fwait
out
sbb
or
xchg
jo
popa
xchg
xor
stos
xor
mov
add
mov
imul
or
out
or
rcrb
sub
arpl
mov
imul
lea
clc
lret
mov
mov
and
jne
out
xchg
adcl
dec
bound
and
push
cs
enter
jbe
jg
dec
jge
mov
mov
stos
cli
jp
push
imul
aad
mov
pop
mov
fstpl
dec
loop
je
jg
aas
xchg
and
clc
sahf
popa
dec
xchg
outsl
jb
iret
mov
fdivrp
adc
out
sbb
sbb
loopne
mov
mov
mov
cmp
lcall
popa
mov
sbb
pop
sbb
jno
xchg
inc
xor
xor
jle
sbb
pop
add
rolb
fs
rcrl
addr16
dec
xchg
fisubl
fs
cli
es
js
aas
in
movsb
aaa
cli
imul
out
jg
in
and
sub
fistps
les
ret
pop
jnp
es
outsb
repz
gs
jl
test
mov
scas
and
icebp
lahf
cwtl
loop
in
mov
add
fnstenv
les
sub
jp,pn
fnsave
gs
out
mov
fists
jmp
mov
or
mov
or
aaa
cli
sub
and
cmpb
ret
scas
test
mov
add
pop
ljmp
sti
fdivrp
mov
jnp
xchg
test
jmp
daa
cli
xchg
sbb
push
xor
in
jecxz
sahf
das
movsl
orb
out
out
idivl
insl
or
lahf
dec
push
dec
ljmp
mov
lock
sub
jle
aas
pop
lahf
mov
repz
jns
mov
aas
pop
lahf
mov
test
shl
int3
xchg
ret
push
leave
std
add
int3
xor
aas
mov
mov
mov
dec
add
imul
sbb
pushf
adc
mov
adc
xorl
and
iret
cs
repnz
int3
or
pop
lahf
dec
xchg
sahf
xchg
cmp
mov
dec
pop
sbb
stos
out
mov
inc
adc
clc
dec
leave
fwait
dec
pop
lock
pop
scas
ds
dec
add
adc
ss
js
cmp
aaa
adc
and
out
out
fsubl
ret
xor
jecxz
pusha
outsl
aaa
add
cwtl
cmpsb
cmpsb
dec
mov
push
jecxz
in
xchg
mov
adc
or
addl
or
sbb
add
repz
and
cmp
add
mov
xchg
xor
cli
test
fadd
push
add
or
push
push
mov
pop
xor
mov
mov
pop
cmp
and
xchg
mov
or
xlat
sbb
nop
xlat
xchg
adc
test
cmp
sbb
jmp
je
imul
xchg
clc
aam
cmp
push
lods
jge
sub
mov
sbb
xchg
loop
cmc
mov
mov
xchg
jns
hlt
pop
adc
fs
cmpsb
add
push
popa
push
popf
adc
mov
loop
call
out
leave
mov
push
xlat
test
scas
pusha
sub
inc
pop
or
pop
push
roll
into
outsb
dec
and
and
and
lock
jg
xchg
dec
cltd
in
sub
mov
add
cli
jge
sarb
pop
mul
cmp
fs
outsl
loopne
repz
icebp
jp
jg
push
sub
push
mov
rolb
ficoms
add
pop
mov
or
dec
or
mov
pop
dec
loope
jecxz
jo
pop
push
js
out
movsb
xchg
mov
adc
push
sbb
ljmp
es
xor
lret
xlat
cltd
pop
mov
inc
jbe
test
adc
dec
ret
inc
push
insb
push
and
pop
jb
mov
aam
ja
mov
lods
cltd
sub
add
out
je
aaa
mov
ja
mov
xor
and
fdivrs
mov
xlat
test
xor
cmp
pop
clc
lret
rorl
js
fld
mov
or
mov
jmp
das
mov
fwait
shll
push
push
xor
adc
xchg
xor
sbb
or
sub
and
xchg
out
pop
pop
sub
inc
pop
and
idivl
ret
rcr
insl
jno
sbb
roll
dec
or
inc
cmpsl
xchg
dec
jae
cwtl
sub
popl
mov
stos
inc
xorl
inc
cli
je
add
inc
xchg
add
scas
mov
fisubs
jl
outsl
or
mov
gs
inc
cmpsb
jmp
mov
call
add
repz
roll
cmp
psubq
add
clc
mov
dec
test
sub
in
push
icebp
std
lcall
aad
cmp
xchg
movsb
mov
adc
pushf
push
inc
xor
inc
outsb
insb
enter
ficoml
daa
pop
mov
push
repz
out
lods
and
fadds
mov
into
push
push
and
push
loopne
mull
mov
scas
fwait
add
cwtl
shrb
insl
stos
call
jg
and
rcr
data16
sbb
cmp
jnp
insb
push
sti
jp
inc
mov
dec
es
mov
lret
fcmovb
out
enter
test
fmul
stc
and
or
addr16
jecxz
inc
cmc
jp
jne
gs
dec
dec
adc
lret
stos
xchg
iret
sbb
jmp
mov
fimuls
and
out
add
out
mov
divb
ds
lcall
pusha
insb
add
inc
and
xchg
clc
pop
cmp
cmp
add
xchg
push
daa
mov
mov
cmp
xchg
push
or
vucomisd
sub
lret
shrl
cmp
push
sub
clc
xchg
xor
or
sbb
hlt
or
sub
cltd
adc
cmc
and
xor
addr16
fbstp
imul
jns
negl
lret
and
sbb
mov
in
push
jb
repnz
ljmp
movsl
and
stos
pop
jnp
pop
testb
push
sbbl
outsl
iret
add
and
jl
push
jae
sub
dec
pop
push
sub
imul
stos
pop
shlb
adc
sub
js
fld
cmp
sub
js
pop
roll
adc
add
mov
int
mov
push
clc
mov
lods
mov
jns
push
es
dec
lcall
cmp
incl
movsl
out
insb
mov
gs
add
in
sarl
imul
nop
outsl
jns
xchg
jo
fisubrs
pop
ret
inc
shr
inc
adc
inc
xchg
dec
xchg
aad
enter
icebp
jl
or
xchg
rcrl
inc
pop
push
jb
test
pop
sub
lret
cld
lahf
inc
mov
mov
pop
sub
mov
add
jbe
push
mov
loopne
mov
mov
data16
mov
jl
or
mov
mov
jmp
dec
mov
cmc
mov
rolb
movl
sti
jmp
fcmovu
mov
mov
push
sbb
std
fisubrs
and
xchg
rol
mov
int3
xchg
sbb
add
jle
inc
gs
push
push
adc
cmpsb
fldcw
and
or
xlat
call
mov
mov
sub
pusha
orb
lret
dec
ss
leave
loop
cmp
sub
jecxz
xor
and
shr
je
mov
jg
cmp
nop
icebp
subb
sub
mov
aad
xor
rorl
cmc
mov
js
rorb
aad
inc
dec
inc
test
popa
push
out
xchg
or
pop
and
push
mov
int3
fdivr
mov
pop
jmp
adc
sbb
adc
daa
inc
fxch
cmp
repnz
inc
mov
push
or
aaa
sub
xchg
mov
xchg
push
inc
jmp
notb
add
out
ffree
xchg
cli
add
sbb
shrl
aas
mov
lahf
adc
mov
mov
int
shr
push
hlt
xchg
insb
or
rorl
xor
push
stos
or
push
cld
xor
out
addb
pushf
pushf
jnp
inc
loopw
xor
pushf
daa
push
adcb
sub
mov
iret
lcall
lret
sub
fiaddl
xchg
insb
adc
scas
sub
and
mov
push
push
xor
dec
mov
lods
cld
fimuls
ljmp
xor
cmp
xor
push
push
cmc
add
sbb
insb
rcl
or
push
into
test
cmp
pop
sbb
cmp
sarb
jns
xor
add
cltd
cli
in
sbb
adc
movsl
ss
xchg
into
add
add
pusha
add
push
or
aas
inc
dec
sti
in
popa
dec
jge
leave
push
or
jo
arpl
mov
mov
in
pop
or
enter
cli
cmpsl
gs
popa
sar
out
adc
mov
push
or
xchg
sub
push
fdivs
jno
pop
and
dec
shrb
cltd
adc
outsb
sub
and
pusha
push
into
cmc
sarl
loopne
fisubl
std
mov
adc
push
mov
mov
out
fincstp
int3
lods
loopne
shr
mov
mov
fmuls
xlat
orl
jne
dec
sarb
ds
xchg
cmp
stc
xchg
fldt
pop
in
hlt
xchg
mov
dec
rol
and
sbb
andb
inc
outsb
test
in
cmpsl
dec
and
mov
push
mov
push
xchg
xor
cwtl
xor
xchg
jne
push
stos
mov
es
cmp
js
and
push
cmp
mov
sahf
cmp
mov
aam
or
outsb
jbe
push
pop
loop
push
push
jp
loop
adc
sub
mov
push
jns
in
imul
or
ret
push
or
lret
cmpsl
sti
std
xchg
mov
leave
adc
mov
cmc
loop
inc
or
lds
imul
ljmp
shrb
or
xlat
pop
dec
fadds
fwait
mov
cmp
mov
adc
shl
test
xor
and
fwait
outsb
lahf
pop
das
xchg
fcmovne
sbb
mov
outsb
cmc
mov
sub
or
lret
inc
jne
cmp
jg
mov
cmp
mov
xor
sub
add
adcl
mov
jmp
repnz
add
aad
pop
sarb
out
inc
inc
mov
cmp
jno
or
mov
mov
push
movsb
jge
jo
into
sbb
pusha
mov
mov
cmp
or
movsl
clc
lds
popa
mov
xchg
mov
jmp
mov
push
xchg
inc
sbb
and
das
int3
fxsave
or
mov
popf
xchg
jp
mov
mov
and
inc
shlb
int3
lods
or
add
faddl
mov
pop
std
lcall
push
divb
inc
aam
mov
lods
push
mov
or
sub
push
and
cmp
cmp
add
jbe
int3
dec
jno
dec
inc
jne
sub
sbb
sahf
notb
aad
popf
mov
mov
lret
das
aad
and
cs
jmp
into
mov
scas
cmpsb
int
push
stos
call
pusha
jp
sbb
xor
xor
lret
sahf
outsb
add
mov
mull
std
inc
xor
enter
loopne
mov
xor
mov
loopne
and
xchg
int3
iret
and
xlat
stos
and
es
mov
loope
push
pop
out
mov
pop
popa
cli
gs
sarb
pop
aad
lahf
mov
subl
jp
add
mov
pop
pop
cltd
aaa
sub
jnp
push
repnz
jmp
mov
aad
dec
sbb
pop
shr
sbb
imul
andb
test
xchg
inc
les
test
xor
lahf
jno
jae
in
test
cmp
pusha
pop
push
arpl
into
out
movsb
add
rolb
lods
jecxz
mov
dec
sub
ljmp
in
fsub
cmp
pop
and
hlt
pop
inc
je
hlt
adc
pop
orl
inc
rorb
add
xorb
jecxz
iret
and
insb
add
repnz
pop
lea
sub
pop
stos
push
mov
adc
icebp
mov
fcmovu
mov
loopne
mov
mov
sub
insl
in
mov
lret
inc
mov
and
mov
mov
xlat
add
or
addl
jns
sub
cwtl
pop
fisttpll
fdivrl
arpl
cmpsl
loop
mov
mov
fimuls
shll
add
imul
iret
inc
in
dec
add
cmp
test
xchg
pop
shlb
call
cwtl
mov
sbb
mov
jecxz
inc
mov
bound
cs
mov
pop
or
mov
test
add
jle
pop
stc
push
adc
and
xchg
fprem
sub
movsb
xchg
test
mov
or
pop
aas
fwait
cltd
or
in
sub
test
gs
and
cmp
push
jmp
test
lcall
out
and
out
je
iret
fsubl
xchg
jb
sbb
jns
into
mov
aad
sub
aad
mov
adc
jecxz
fistpl
jns
jle
or
and
xchg
fs
xchg
mov
sub
dec
or
push
cli
cmpsl
out
mov
jnp
cli
sub
sub
and
sub
wbinvd
adc
inc
mov
lret
jno
popf
lcall
pop
push
or
popf
cld
mov
insl
push
lcall
test
sub
xor
fistl
xchg
loop
adc
into
mov
ret
cmpsl
iret
clc
and
xchg
and
rorl
orl
push
stos
push
xchg
test
aaa
out
mov
div
sti
outsb
das
in
icebp
push
push
inc
cli
pop
ficomps
mov
das
jge
fwait
test
cmp
add
mov
jne
out
mov
insl
loopne
jbe
xchg
push
mov
mov
fsubrl
sub
or
test
imul
popa
clc
mov
cld
lock
push
sub
movsl
fistpl
imul
shlb
fstl
jge
lret
and
aad
and
xchg
aas
aas
in
adc
dec
test
lea
idiv
frstor
jp
add
pop
or
jo
push
jmp
cltd
iret
or
push
sbb
mov
xor
jno
gs
cmpsb
pushf
out
add
cmp
lods
fwait
push
cmp
scas
and
pop
je
adc
push
xchg
pop
pop
rclb
push
cmpsl
push
sti
movsb
daa
xor
and
jns
sub
aas
fimull
loope
xchg
and
jp
mov
pop
lahf
or
out
sub
mov
sbb
dec
jno
mov
push
pop
push
out
dec
and
repz
lods
jae
shrb
xor
pusha
iret
popa
jns
and
pop
fmull
jmp
dec
jmp
cmp
adc
mov
mov
jne
shll
jg
imul
ljmp
push
loope
mov
xorl
fsubs
xchg
jge
movsb
pop
movsb
cwtl
jle
fcmovbe
fucom
lret
es
push
inc
mov
xchg
sub
xor
mov
pop
xor
mov
sbb
insb
or
fsubs
test
mov
mov
shl
jno
call
test
fisttps
xlat
arpl
btc
in
mov
xchg
insb
shlb
mov
xor
inc
mov
xchg
jbe
int3
clc
fdiv
xchg
push
call
cmp
push
sti
das
jno
stos
xlat
and
push
jne
orl
clc
inc
inc
jae
sbb
call
push
sbb
push
popa
lock
mov
into
sub
dec
out
or
cmp
cmc
push
sub
pop
jmp
popf
sbb
cmc
inc
adc
add
pop
and
cmp
aas
insl
mov
pushl
add
pop
test
in
mov
cwtl
hlt
mov
mov
in
mov
cmp
jnp
imul
pop
incb
adc
daa
xchg
xchg
call
orl
sarl
mov
sti
stos
cwtl
pusha
std
xsaves
movsb
pop
mov
and
xor
lods
or
lods
es
cli
fcmovb
call
inc
mov
mov
sahf
xor
shlb
pop
insl
das
aaa
dec
xchg
mov
aas
movsb
mov
shrb
fiaddl
or
inc
clc
cmpsb
adc
mov
adcl
cmp
adc
insb
sub
push
lahf
je
xor
outsb
aaa
sbb
aad
sbb
mov
inc
cwtl
into
cmpsb
mov
dec
fmull
xor
cld
mov
repnz
or
iret
mov
pop
jl
call
leave
shll
cmp
sahf
out
movsb
sti
jb
adc
icebp
adc
insl
push
push
xchg
outsl
dec
jbe
add
and
cmp
rep
bswap
or
daa
lea
popa
test
add
ljmp
out
and
jns
adc
or
add
or
insl
into
pushf
add
mov
dec
jae
inc
fucomp
pop
repnz
cmp
pop
sbb
addr16
xchg
sub
dec
mov
into
mov
jecxz
mov
xor
adc
adc
lcall
loop
push
adcl
jo
or
arpl
xchg
adc
rcrb
in
xchg
stos
pop
sub
or
call
push
cs
cmp
jns
fdivrs
jle
ss
popl
pusha
divb
aam
faddl
dec
and
or
call
inc
add
cld
rcl
or
scas
adc
popf
cs
push
outsb
jecxz
mov
jne
or
les
mov
mov
and
sbb
daa
mov
xchg
icebp
cmp
in
cmp
addb
pop
mov
scas
lcall
push
nop
mov
add
aaa
cmp
mov
aaa
mov
pop
xor
pushf
movsl
dec
decl
in
cmpsb
ss
ja
and
inc
mov
lods
addr16
pop
xor
popa
mov
cmp
je
jl
pop
imul
mov
lock
and
mov
push
ffreep
cmp
pop
xchg
mov
mov
xor
movsl
mov
and
jbe
notl
dec
nop
push
and
push
inc
mov
jne
inc
add
inc
inc
cltd
call
mov
push
and
mov
mov
fisttps
mov
pop
pop
repnz
loop
xchg
jg
jns
push
dec
jnp
lret
mov
sbb
shl
jnp
inc
popf
pop
mov
or
leave
ljmp
cmpsb
outsl
pop
ret
sbb
sbb
or
ret
shll
xor
adc
xchg
imul
and
outsl
stos
xor
clc
xor
sub
loop
mov
sbb
mov
into
xor
rcll
xchg
or
fnstenv
sbb
outsb
mov
dec
fs
fs
push
mov
xchg
pusha
movl
fcompl
nop
sub
rcr
jae
pop
xchg
stos
sub
or
jmp
jae
cli
pushf
or
cld
xchg
jge
mov
mov
paddb
sub
xchg
push
jge
insb
fbstp
xor
mov
lock
or
cmp
rcl
push
xlat
std
enter
mov
cmp
and
data16
pop
push
mov
test
adc
aam
movsl
ret
dec
mov
ret
xor
add
hlt
mov
out
bound
mov
int
gs
insl
push
addr16
pop
inc
nop
xchg
cmpsl
int
lret
or
xor
popf
pop
or
in
dec
mov
push
cmpsl
xor
leave
lods
in
adc
and
cmp
lahf
pop
jbe
jg
sbb
jg
xchg
dec
mov
inc
mov
test
sbb
mov
jnp
ljmp
pop
pop
mov
cltd
xchg
jle
xor
mov
jno
sub
cwtl
inc
pop
aam
adc
loope
popa
or
sub
sbb
jae
sub
push
push
rcrl
pop
lock
add
or
das
stc
pop
and
imul
pushw
mov
cmp
ljmp
test
pusha
sub
push
ret
mov
ficomps
loop
subb
gs
adc
mov
jno
xchg
jp
sbb
out
sbb
dec
pop
imul
out
lret
sbb
push
dec
ja
stos
in
stos
cmpb
stc
push
jecxz
lcall
leave
das
pop
adc
sub
aam
sbb
sub
pop
int3
jg
test
jmp
stos
mov
aam
ret
into
lds
ja
jecxz
fs
cmpsb
aad
test
push
and
xor
xor
iret
js
inc
call
cmc
sub
in
ljmp
mov
push
add
bnd
ljmp
push
lock
xchg
sub
xchg
mov
pushaw
test
or
cwtl
pop
mov
mov
in
mov
mov
jne
ud0
dec
xor
and
push
out
mov
push
cmc
push
adc
shll
and
jle
imul
aaa
pop
in
add
in
std
and
adc
jne
stos
sahf
xor
push
shl
jbe
mov
sbb
mov
mov
mov
inc
sbb
psubb
push
cs
xchg
jo
or
out
fs
out
int
sbb
sahf
mov
mov
sub
sbb
add
and
insl
mov
iret
je
fcomi
pop
ss
sub
in
push
fstl
scas
and
push
in
jne
je
push
fsubr
cmpsb
lods
pshufw
push
mov
xlat
push
in
add
or
repnz
fidivs
fimull
fdivr
push
xor
cmp
xchg
fmul
cmp
xor
add
call
xor
mov
rcr
inc
or
iret
insl
imul
data16
fwait
xchg
hlt
in
fwait
mov
pop
test
cwtl
xchg
dec
mov
jl
fidivrs
pop
sbb
mov
out
movsl
push
pop
std
push
jnp
call
into
adc
push
loop
jb
movsb
mov
loop
jmp
rcrb
shl
push
and
sub
dec
mov
sub
cmc
sarb
cmp
shrl
fiadds
push
in
in
fistpl
adc
fadds
inc
cwtl
jo
adc
sbb
repz
xchg
lahf
test
ss
jno
out
jg
xchg
pop
xchg
sarb
popa
cmpsl
adc
mov
stos
xchg
xchg
push
adc
add
enter
imul
loop
fcmovb
fidivrl
imul
pop
fsubrl
repz
test
rcl
fistl
int3
and
cmp
sahf
lea
cltd
shl
mov
aas
aas
hlt
adc
dec
adc
fcmove
mov
mov
lds
iret
ret
xchg
inc
sub
pop
xor
int3
rcrl
add
add
sub
adc
daa
aas
or
repnz
mov
jb
mov
dec
xor
push
and
imul
daa
cld
push
push
xor
pop
jecxz
das
sbb
repnz
xor
jo
arpl
inc
mov
aam
or
ss
ja
lods
cwtl
xchg
pop
fsubs
dec
mov
sti
sarl
xchg
sbb
pop
dec
jnp
mov
lret
cltd
pop
out
stc
sbb
inc
ljmp
mov
imul
ja
xor
pop
fucomp
sbbb
pop
pop
pop
sbb
loopne
push
js
fistpll
jo
in
pop
xchg
stos
inc
sbb
cmp
fcomp
mov
ds
ret
out
adc
arpl
outsl
inc
loopne
pop
xor
mov
jl
lds
jecxz
or
push
sub
and
adc
ljmp
pop
sbb
arpl
stos
imul
and
sbb
in
mov
adc
bound
loopne
dec
imul
xchg
mov
mov
sahf
rcrb
dec
dec
das
repz
aas
call
das
adc
clts
inc
xorl
sbb
lahf
xor
push
push
adc
xor
int3
dec
insb
jl
adc
cmc
jne
fcompl
ficomps
pop
push
cwtl
in
dec
and
imul
mov
mov
sub
xchg
sub
test
mov
inc
pop
hlt
mov
out
pusha
mov
pop
dec
mov
stos
inc
push
bound
fwait
mov
inc
xchg
cwtl
sub
push
and
lretw
xchg
movsb
movsl
inc
xchg
push
pop
push
push
loop
ret
popa
cmp
pop
mov
rcll
push
insb
je
adc
iret
mov
test
aaa
loope
shrl
subb
inc
xor
cmpsb
sbb
imul
jmp
outsb
aad
or
cmp
and
aam
or
cmp
movsl
sub
mov
into
push
into
inc
lcall
scas
mov
jmp
xor
popa
xor
add
pop
sbb
gs
gs
adc
lods
aad
sub
push
ret
insb
test
subl
xlat
xchg
xor
push
les
pop
jle
std
dec
mov
rcr
sub
stc
loope
inc
jg
pushf
les
sub
ss
pop
sbb
pop
adc
cmp
lock
out
inc
cmp
imul
in
jle
mov
cmp
sti
jns
adc
shrb
mov
dec
xor
sarl
adc
shrl
jp
jge
lcall
out
andl
out
iret
lret
xchg
lods
or
mov
and
pop
push
popa
aad
les
pusha
sarl
outsb
xlat
lcall
iret
cwtl
push
push
ss
jg
mov
sbb
mov
jg
add
or
inc
ljmp
jg
mov
push
push
ss
sub
pop
pusha
mov
sets
pop
sub
loopne
pop
ss
sub
xor
jns
addl
das
sti
and
adc
cltd
inc
sbb
jnp
dec
fdiv
int3
xchg
pushf
add
push
mov
gs
pop
popf
inc
dec
sarl
jo
jo
mov
push
and
rorb
dec
sub
pushf
add
sbb
pushw
jmp
cmc
hlt
dec
mov
das
add
shrl
xlat
inc
sub
push
cmpsb
push
test
pushf
inc
or
mov
jne
pop
mov
adc
xchg
add
jns
in
jl
push
mov
arpl
imul
jnp
pop
dec
mov
xor
ljmp
mov
in
ret
notb
fcmovbe
in
add
mov
testl
into
test
xchg
jbe
aas
mov
adc
jno
add
xchg
dec
push
cli
out
adc
pusha
cmp
jne
push
xchg
or
adc
mov
or
cmp
mov
cmpsl
sub
incl
jmp
jp
mov
cmp
inc
cmp
sub
mov
xchg
fmuls
mov
xorl
in
cwtl
add
aas
jno
call
xor
cmp
mov
sub
cld
mov
imulb
xchg
and
and
and
ds
mov
xchg
outsl
xlat
ret
out
add
adc
imulb
insl
in
lock
imul
mov
lods
sti
or
jnp
push
or
les
jae
je
outsb
and
pop
add
inc
pop
cs
adc
ss
mov
push
or
pushf
and
jecxz
dec
shlb
rclb
ss
xchg
push
sub
add
inc
cld
push
xchg
dec
sbb
xor
xor
jae
inc
aad
fildll
pop
and
inc
loopne
lock
loop
push
test
xchg
xor
aad
cmp
stc
xchg
scas
les
jo
sub
dec
adc
enter
fldt
je
inc
nop
xor
fcompl
jge
mov
add
jl
jbe
movsl
adc
and
mov
int
gs
cmpsl
aaa
shrl
insb
push
sub
sub
hlt
fs
les
add
fnstcw
sbb
mov
add
cmpsl
mov
jns
jmp
cltd
add
xchg
xlat
out
cmp
xchg
inc
push
jmp
push
loopne
hlt
test
xchg
les
xchg
test
add
adc
outsl
add
mov
sub
xchg
push
push
aas
repz
cli
add
cmpsb
cltd
int
jl
negl
orl
out
xchg
mov
jnp
jne
aam
test
adc
sub
sub
cmpsb
into
hlt
xchg
push
cli
sbb
and
in
and
sub
mov
cmp
jle
bound
mov
xor
fsub
dec
scas
or
loopne
push
fdivp
mov
pop
rolb
add
cli
fmul
inc
cmpsb
dec
add
and
je
and
test
cmp
push
xor
xlat
xor
adc
in
adc
bound
mov
jmp
pop
xchg
push
push
jge
sbb
dec
xorl
jns
mov
cltd
int
cmp
add
out
rcrl
push
mov
push
jle
cmpsl
enter
aas
add
mov
xchg
inc
pop
dec
in
and
dec
sbb
cmpsb
test
seta
sbb
test
lcall
lock
cli
pop
js
pushf
lret
ljmp
push
pop
or
push
mov
insl
add
orb
lea
cmc
hlt
lret
inc
aaa
cmc
sub
add
inc
mov
call
xor
in
clc
clc
lcall
pop
jne
jne
pop
outsl
loopne
testb
int3
jl
pop
scas
jno
xchg
xchg
adc
sti
out
dec
ror
cltd
vsubsd
mov
push
xchg
push
jo
sbbb
push
daa
xlat
insl
jl
pop
incb
adc
in
lea
xor
lea
inc
or
aad
cmp
xor
movsl
cli
mov
dec
sub
or
pop
bound
cmp
sbb
jp
xchg
outsl
sbb
das
dec
ja
das
xor
inc
gs
outsb
mov
std
push
adc
add
outsb
cmpsb
lods
jle
xchg
and
xor
shlb
gs
sbb
jmp
sbb
shll
xchg
in
add
adc
mov
mov
clc
shll
in
sahf
sbb
pop
inc
out
xchg
pop
add
outsl
outsl
test
mov
out
nop
pop
or
sarb
test
sub
hlt
sub
mov
hlt
or
cmp
mov
pop
call
adcl
aam
enter
fnsave
dec
mov
inc
sub
add
and
andl
in
test
loopne
cmp
sbbb
and
sub
inc
pop
scas
lahf
jmp
mov
scas
pop
mov
push
shrb
setne
pop
pusha
and
into
jle
das
cmpsl
loope
sbb
mov
xchg
xor
pop
ret
nop
pop
jecxz
pusha
add
xchg
jno
imul
out
push
fwait
mov
cltd
mov
adc
scas
xchg
jmp
das
outsl
xlat
adc
ret
mov
and
push
xchg
lahf
out
xor
mov
jp
fcomip
mov
dec
fsubs
loop
int
mov
scas
jo
arpl
orb
cmp
repz
les
add
adc
or
add
cmp
and
mov
sub
mov
mov
loop
stos
pop
jnp
js
jne
cmp
rolb
mov
adc
pop
inc
icebp
ret
push
sbb
pop
cltd
dec
jne
insb
jecxz
and
inc
in
ljmp
movsl
sbb
out
jl
pop
lds
push
jno
inc
xchg
icebp
push
test
cmpsb
inc
outsb
ss
lcall
add
testb
ljmp
xor
xchg
pop
adc
or
lods
push
icebp
lret
daa
jne
xor
popa
jg
out
adc
lret
iret
sub
xchg
add
ret
cmp
pop
daa
orl
and
int
loop
stc
jo
je
lahf
and
daa
push
rorl
and
sbb
lods
ljmp
push
cmpsl
mov
pusha
popl
adc
sbb
xlat
xchg
dec
daa
add
nop
and
cli
fisubrs
iret
lock
cmpsb
dec
xrelease
xchg
repz
lods
inc
aam
inc
mov
adcb
lret
mov
cmp
pop
ja
sub
inc
idiv
inc
jge
mov
add
daa
out
cmp
insb
xchg
jl
and
js
test
cli
mov
fisubrl
movsb
bound
scas
in
mov
std
dec
dec
mov
adc
jge
fdivrs
loope
xchg
push
dec
pop
scas
fimull
inc
dec
sub
cmp
pop
cli
xchg
mov
mov
push
dec
shlb
jo
lahf
scas
popa
mov
cwtl
pop
es
add
dec
dec
movsl
xor
and
cmp
lret
mov
xchg
aad
or
icebp
mov
jno
loopne
cmp
add
lock
aad
add
call
outsl
int
subb
dec
mov
pop
xorb
dec
out
inc
dec
push
xchg
fwait
xlat
and
jp
fwait
mov
mov
aas
movsb
jae
jg
pop
lods
cmp
sbb
xchg
nop
lods
dec
xchg
mov
push
imul
out
gs
or
shl
imul
jnp
inc
ds
notl
xchg
leave
insb
sub
insb
fwait
lock
mov
movsb
jg
ret
sub
lock
insb
cmpsb
roll
adcb
or
fsubrl
xchg
adc
mull
pop
pop
rorb
daa
push
dec
jbe
add
idivb
dec
aas
xlat
sti
sti
stc
and
mov
mov
out
daa
or
push
or
aam
push
daa
popa
ret
nop
mov
cmc
mov
scas
sbb
jmp
out
filds
aam
inc
lods
mov
pop
xchg
or
bound
push
mov
enter
pop
stos
xor
or
or
lods
xchg
stc
data16
cmp
jecxz
in
xchg
pop
in
mov
imul
nop
jmp
lods
in
cmp
pop
mov
scas
add
lret
or
lea
scas
pop
popw
cld
inc
pop
sbb
jb
insb
xchg
cld
adc
xorl
dec
into
out
aas
das
fisubrs
cmp
ja
jbe
lcall
mov
loop
push
jmp
push
mov
inc
out
stos
sahf
xor
jae
ss
sub
adc
mov
jns
sbb
in
lea
cmpsb
cmp
push
cmp
xchg
jecxz
lods
inc
ja
in
lret
fwait
xchg
jbe
xchg
mov
and
mov
pop
sbb
cmp
pop
mov
mov
cmc
xchg
hlt
add
cs
cmp
xor
adc
add
xchg
lods
cmp
outsl
jae
add
pop
cmp
xchg
pop
cmpsb
mov
mov
or
sbb
jp
sbb
aam
dec
lret
fisttps
jns
push
mov
les
and
xchg
xor
mov
outsb
inc
fs
ss
fs
movsl
jle
xchg
in
or
lock
mov
addr16
mov
mov
sbb
mov
mov
jno
add
jge,pt
adc
push
sub
or
or
lods
insb
pop
sbb
sbb
out
lret
lods
dec
adc
decb
divl
xor
hlt
imul
rcll
icebp
subb
xchg
dec
aad
stos
push
inc
imul
outsl
push
insb
add
dec
sbb
sbb
inc
lea
ja
jle
jle
jnp
xchg
inc
jge
cs
add
mov
inc
xor
loope
pop
mov
or
push
fmul
scas
cmp
add
je
push
mov
stos
mov
aaa
adc
fsubrs
or
push
std
jg
pop
movsl
scas
iret
sub
es
xchg
mov
test
dec
mov
inc
ja
jle
pop
pop
cmc
jmp
mov
lcall
test
lds
pop
mov
cmp
fwait
out
in
xor
leave
inc
pop
push
adc
outsl
lods
mov
xchg
das
cli
cmc
mov
inc
pop
js
dec
xor
mov
movsb
movsl
movsb
and
aas
outsb
mov
nop
lock
pop
rcrb
movsb
cltd
add
sbb
mov
cmp
sub
notl
mov
sti
fists
mov
movsl
faddl
sbb
inc
sbb
cmp
bswap
xchg
pop
movsl
negl
push
insl
testl
jp
or
adcb
cwtl
je
mov
je
aam
lods
pop
rcrl
imul
fst
jle
adc
out
mov
fildll
lods
fisubs
and
ja
jne
xor
stos
add
xchg
adc
or
dec
xchg
fistl
subb
mov
es
or
jge
sub
adc
sub
cmp
fsts
xchg
rclb
roll
mov
or
xchg
popf
xchg
sub
fbstp
out
lds
sbb
dec
cmp
and
adc
lcall
rorb
add
in
inc
mov
mov
sub
scas
jg
jno
push
jmp
mov
stc
mov
out
mov
int3
fnstsw
fcomi
popa
jl
mov
cmp
cwtl
sbb
xchg
decb
mov
add
in
jge
cmc
out
fistpll
or
dec
ret
ljmp
nop
push
popa
xchg
lcall
test
add
in
std
cmp
ja
jbe
lret
adc
lcall
sbb
dec
loop
aaa
popa
xlat
daa
or
int3
out
test
jnp
jle
cmc
jne
rcrb
sub
mov
andb
fs
push
dec
xor
dec
gs
inc
inc
fbld
inc
mov
mov
xchg
xchg
idivb
or
cmp
add
mov
mov
cmp
or
pop
cld
outsb
dec
pop
or
les
adc
adc
jp
inc
pop
adc
push
gs
lret
inc
adc
imul
xor
dec
fidivs
add
cmpsb
outsb
push
insl
or
jno
call
pop
cmp
mov
idiv
aad
sarl
in
movsl
fisubrs
add
and
adc
out
sbb
inc
jns
add
paddq
jg
or
les
mov
stc
sbb
sub
sti
push
popf
sysret
jne
cltd
int
pop
and
rcrl
js
sub
cwtl
dec
xchg
push
call
dec
push
ljmp
sbbl
or
sarl
dec
nop
pop
add
and
mov
mov
xor
icebp
and
movsb
pop
cmpsl
in
xchg
ja
dec
shr
insb
movsb
addr16
popf
icebp
push
scas
mulb
pop
orl
pushf
and
pop
xor
push
fidivrs
fwait
ss
ret
leave
jp
popf
pop
out
xlat
sub
in
mov
std
iret
insb
rcrl
mov
pushf
mov
aas
rolb
aaa
pop
int
ds
in
mov
pop
mov
mov
fxch
movsb
ret
jle
mov
fsts
pop
jg
test
scas
jbe
test
sub
test
mov
cmp
cmpl
xor
mov
out
int
and
and
xor
xor
outsl
mov
mov
jo
jo
out
lret
mov
push
pop
xor
jae
mov
pop
add
cmc
mov
fidivrs
inc
ret
das
loop
mov
add
sub
lods
lods
daa
xor
adc
dec
dec
adc
adc
jp
ret
stos
and
mov
mov
and
jp
cli
fs
int
xor
push
imul
ljmp
les
das
aad
xchg
dec
test
cltd
repnz
les
testb
dec
mull
xor
sbb
sbb
xlat
mov
sub
push
in
dec
cmp
shll
fstl
rclb
xchg
out
mov
cmp
sarb
jno
xchg
inc
mov
push
sbb
enter
or
mov
fistl
lds
dec
jl
fistpl
out
cmp
mov
lret
mov
test
mov
dec
dec
out
push
std
push
sarb
cmp
jnp
test
jbe
inc
ss
or
xor
push
mov
add
jge
int3
cmp
loopne
ret
stc
xchg
cmp
aad
jge
or
lea
shr
in
lret
test
pop
arpl
in
mov
and
inc
pop
fbld
ds
adc
dec
jns
xchg
cltd
jns
cmp
xor
jl
and
aas
aaa
or
lahf
cmp
outsb
fmuls
cltd
jns
mov
scas
mov
aam
lahf
fwait
mov
sbb
mov
ret
xchg
ret
mov
xchg
cltd
xchg
mov
je
bnd
lret
sub
fnstenv
sub
and
pop
pop
addr16
adc
stos
dec
mov
xchg
cli
in
inc
xchg
push
aam
adc
xor
adc
mov
add
or
mov
adc
xchg
cmp
inc
cmpsl
dec
pop
inc
jl
dec
pop
dec
movsl
push
or
jg
ja
das
stc
or
hlt
out
imul
leave
jb
lods
jge
mov
stos
js
mov
insl
sub
inc
mov
clc
mov
mov
fbstp
push
sub
rcrl
lods
ljmp
in
sbb
mov
testl
dec
hlt
ljmp
push
popf
jle
xchg
mov
jp
leave
pop
jnp
test
imul
cmp
lret
hlt
add
push
imul
mov
stc
decb
ficoml
dec
xchg
cwtl
mov
inc
das
push
lock
movsb
or
lods
mov
dec
dec
mov
pop
je
clc
adc
jmp
imul
fildll
lret
sti
jle
addr16
cmc
shl
dec
je
ret
jb
out
bound
pop
push
xchg
fisttps
sbb
xchg
xlat
xchg
xchg
shrl
out
cld
data16
lcall
jmp
sbb
lea
mov
cltd
popf
mov
push
loopne,pn
pop
jecxz
movsb
mov
pop
leave
inc
cmpsb
jge
out
ss
jmp
popa
or
das
inc
stos
test
jg
pop
popf
jg
jb
out
mov
shl
mov
call
ja
mov
lea
popf
adc
jmp
out
ret
inc
push
xchg
in
xor
or
cli
mov
stos
add
and
stos
lret
pop
popf
cvtps2pi
ret
je
int
mov
pop
lock
fildl
mov
pop
data16
inc
cmp
or
iret
add
mov
scas
stos
clc
push
dec
xor
xchg
lcall
mov
mov
sti
movsb
dec
sahf
sbb
outsl
xchg
pushl
xchg
xchg
push
jne
add
push
xchg
in
pop
bound
inc
cmc
andl
out
jecxz
mov
lods
sbb
jg
sahf
and
jmp
inc
leave
mov
jbe
das
setns
stos
mov
cmp
in
xchg
jge
clc
jge
xchg
in
mov
imul
fcoms
fwait
fs
mov
sahf
and
popf
xor
xlat
cwtl
mul
lods
daa
cltd
dec
cmp
iret
js
push
loop
xor
lods
gs
out
and
in
and
and
adc
jg
cmc
test
fs
push
aad
cmp
test
cmp
ret
or
mov
aad
mov
gs
adc
add
and
and
ljmp
outsl
add
inc
and
shll
jmp
mov
push
sub
cltd
lods
add
lods
push
in
mov
pop
enter
mov
jb
adc
mov
aas
sbb
mov
mov
andl
mov
adc
jl
mov
and
fistps
xlat
nop
push
aad
push
aam
pop
iret
les
aas
jno
insl
xor
sbb
mov
pop
inc
mov
sub
xchg
lea
nop
mov
dec
sbb
push
stos
repnz
ss
mov
sub
fnstenv
mov
cmc
movsl
adc
out
and
mov
push
cmp
cwtl
xor
test
fwait
inc
fnstenv
shr
adc
push
lods
jb
pop
push
iret
mov
pop
stos
pusha
inc
fwait
jae
jne
mov
sar
sub
iret
subb
sbb
rorl
inc
movsl
das
xor
loope
xchg
xor
push
lcall
lea
jnp
jg
or
outsl
cmp
mov
inc
dec
lret
leave
pusha
lret
scas
in
xor
pop
inc
inc
fucomi
enter
popf
xchg
inc
lock
jmp
xchg
rorb
mov
sti
inc
dec
stos
insl
cmp
jnp
jae
sbb
sbb
aas
push
push
aaa
push
push
pop
adc
loop
lods
and
popf
or
out
fstl
inc
jns
cld
rcr
sbb
sbb
mov
cmpsb
cmc
mov
out
pop
inc
xchg
aam
pop
incl
pop
xchg
jo
inc
lahf
xchg
pop
shrl
push
fcoml
addl
ljmp
call
jle
fistpl
outsb
movsb
mov
fistpll
inc
dec
pop
ja
stc
sbb
mov
pop
mov
cmp
sarb
mov
addr16
mov
hlt
cmp
xchg
out
sbb
xchg
cmpsl
mov
shrl
scas
int3
dec
cmpsb
std
je
mov
xor
sub
cmp
xor
ds
imulb
andb
imull
loopne
dec
cmp
dec
cmpsb
xor
jbe
pop
inc
fldlg2
push
jo
mov
push
int3
es
clc
jns
mov
es
inc
inc
testb
cltd
out
shll
or
addr16
pop
inc
gs
mov
xchg
repnz
sbb
cltd
mov
test
out
jns
mov
jmp
adc
sar
push
lret
push
pusha
in
cmp
rcrb
dec
mov
ds
ret
push
jno
and
fdivrs
inc
xchg
push
push
fnsave
out
clc
mov
lret
int
rcrb
out
ss
pop
cmp
pop
dec
mov
xchg
mov
xchg
lods
or
aad
addr16
mov
iret
dec
dec
out
sub
adc
sbb
jg
adc
ljmp
xor
add
and
fildll
lods
and
lock
andl
dec
and
jl
mov
repz
lret
pop
adcl
xchg
lock
rcrb
mov
jp
or
xor
and
ljmp
xor
scas
cmp
out
cwtl
push
sahf
stc
cmpl
or
jns
in
or
stc
mov
test
jns
in
aaa
or
lock
out
jae
push
in
inc
mov
les
hlt
fwait
lods
ficompl
jno
das
loope
or
pop
ret
lock
insb
movsl
insb
lock
push
int3
cmp
jno
roll
or
add
add
shl
mov
pop
mov
add
add
addb
mov
aam
fcomps
das
pusha
rolb
or
add
es
or
mov
shrl
jo
cmp
dec
repnz
jp
xchg
add
inc
outsb
add
enter
std
dec
mov
inc
add
mov
adc
xor
push
mov
push
mov
shlb
xor
mov
loopne
cmpsl
pop
pop
ds
jb
jb
inc
nop
mov
in
adc
jg
sub
outsl
outsl
xor
mov
fsubrs
mov
sbb
mov
or
int
push
push
jo
mov
inc
mov
stos
fsub
jecxz
jno
mov
test
sbb
dec
mov
mov
xor
sub
dec
nop
pop
sub
jmp
test
aad
mov
adc
movsb
mov
jge
int
cmc
std
sahf
sub
dec
xlat
dec
pop
pusha
hlt
mov
mov
mov
and
xchg
adcl
imul
outsl
mov
aad
xchg
mov
and
xchg
or
sbb
nop
outsb
push
pushf
arpl
pop
jno
aam
dec
sub
imul
outsl
lods
mov
cmp
aad
dec
mov
pop
jns
jo
xchg
fcoml
mov
pop
xlat
jb
dec
inc
dec
dec
cmp
fstps
sbb
xchg
shrl
jg
scas
std
aam
mov
mov
jmp
jnp
in
pop
stos
arpl
aas
clc
int3
mov
call
imul
jae
sub
jle
xchg
outsb
xchg
rolb
sbb
add
mov
push
enter
mov
jg
lea
jge
sbb
cmc
fsts
pop
stos
shrl
xlat
ljmp
sbb
mov
movsb
lret
sti
fadd
fsts
imul
iret
ret
push
inc
push
jge
mov
push
test
lret
sub
lcall
icebp
mov
inc
sub
outsb
in
jl
shlb
or
mov
adc
push
fwait
add
xor
scas
mov
sbb
and
inc
jle
mov
cltd
sbb
lcall
test
es
pop
push
jge
lret
sub
push
movsl
sbb
imul
fimull
test
arpl
jns
loop
stc
mov
push
inc
sub
jnp
sbb
insl
jp
dec
sub
daa
cmp
adc
mov
mov
mov
fnstsw
arpl
loopne
or
xchg
jge,pn
insb
jo
mov
imul
repnz
mov
xor
dec
xor
ss
adc
dec
lods
push
push
jge
es
xor
scas
dec
mov
pop
cmp
ljmp
xchg
mov
cwtl
into
fistl
out
pop
mov
xor
out
jo
mov
jp
int3
imul
xchg
adc
inc
fs
xor
adc
xchg
cs
pop
movsb
xor
imul
pop
xchg
push
lahf
in
jmp
out
insb
bound
ljmp
loope
mov
insb
jae
test
mov
mov
cmpsl
pop
sbb
scas
cmp
mov
mov
sbb
xchg
test
push
outsl
ja
fbld
cmc
fstl
mov
mov
jge
lods
push
push
stos
or
fcomps
mov
insb
jno
pushf
push
iret
fnsave
dec
jae
cs
add
jns
fnop
jg
ret
rcrl
imul
adc
fcompl
xor
outsb
cmpsb
push
mov
stos
xor
xor
xor
rorl
mov
add
or
push
sarb
insb
in
and
inc
popa
sbb
sbb
sbb
push
iret
fs
jecxz
sub
in
mov
fwait
push
ret
ss
fwait
dec
and
inc
sbb
dec
add
outsb
leave
mov
imul
std
or
jg
adc
shrb
divb
cmpsb
mov
mov
mov
ja
stos
jge
push
loope
cltd
inc
leave
push
ret
jl
cltd
scas
lods
mov
lock
dec
mov
dec
dec
popa
push
aas
ja
into
cmp
cmp
fucomi
mov
out
mov
add
das
add
mov
cmp
mov
sti
cmp
data16
call
enter
js
push
aaa
in
mov
adc
dec
sbb
inc
jl
fidivrl
pop
adc
movsl
adc
shr
cs
mov
mov
shl
mov
jmp
xor
inc
and
xchg
lahf
mov
jno
jmp
cmc
xchg
pop
iret
xchg
lea
mov
ss
cwtl
sub
pop
or
xchg
sub
dec
andl
cld
loope
repz
xchg
xor
xchg
xor
les
mov
mov
dec
xor
ret
rol
push
sbb
dec
pop
pop
push
call
mov
push
cmc
iret
jno
repnz
lock
je
and
pop
xchg
add
rcll
aad
xchg
repnz
ss
jg
loop
pop
mov
mov
pushf
adc
lock
jecxz
shrl
mov
js
cmp
iret
movsl
fstl
jns
addr16
into
aam
sub
daa
sbb
inc
mov
enter
aaa
dec
mov
orl
or
cmpsl
or
sti
xchg
dec
and
add
mov
loopne
add
sub
jp
cwtl
sub
or
add
inc
sub
mov
mov
loopne
pushf
push
rolb
jae
lock
cmp
cmp
mov
imul
lcall
push
outsb
sbb
add
xlat
pop
pop
jne
ljmp
push
inc
fs
sub
scas
inc
fs
inc
xchg
dec
aam
xor
mov
sbb
jns
and
adc
mov
or
mov
xchg
jo
xchg
ret
fwait
pop
dec
ficoml
mov
stc
adcb
pcmpgtb
ficoms
lahf
fwait
ljmp
lahf
mov
outsb
lock
sahf
jno
or
popf
mov
test
sub
sbb
jp
dec
mov
ret
jp
pop
insl
iret
in
pop
push
cli
fdivl
mov
aam
js
gs
das
sbb
stos
pop
push
xor
movsl
mov
fbstp
or
adc
sbb
scas
or
fdivrs
mov
or
pop
ret
lock
jg
clc
pop
ret
lock
jg
clc
pop
ret
lock
jg
clc
pop
ret
lock
inc
hlt
pop
sub
notl
in
dec
out
mov
mov
mov
enter
push
ret
cmp
inc
fcmovu
clc
sub
mov
out
or
in
inc
sbb
xor
aaa
cmp
ljmp
add
cmpsb
je
ffreep
aad
sahf
mov
je
popa
lods
std
inc
insl
mov
mov
aad
popf
xchg
mov
jp
gs
shrb
cli
into
jae
cmp
mov
fidivrs
dec
repz
push
xor
sub
loopne
add
push
inc
lods
add
inc
lcall
je
sarb
push
sarl
jo
add
pop
adc
fnstsw
add
push
lock
add
cs
clc
fwait
sarl
lods
cmpsl
cmc
fidivrs
bound
jbe
aas
clc
xchg
mov
pop
test
fsubp
inc
ds
and
and
xor
inc
xchg
or
daa
repnz
nop
xor
push
jnp
in
cmpl
ror
sti
mov
xchg
aam
sbb
mov
add
loop
and
repnz
dec
test
cmp
or
js
stc
or
push
mov
cmp
dec
sbb
les
cmpsb
and
xchg
in
loope
repnz
lret
dec
stos
pop
jge
test
pop
sbbb
push
and
push
in
sub
mov
lcall
xlat
pop
lret
sub
push
data16
xor
inc
dec
push
dec
rorl
rorl
cs
mov
add
fwait
negb
cs
pop
hlt
pop
aam
jecxz
icebp
in
mov
push
or
sbb
cmpsb
sub
aaa
add
push
cmp
mov
stc
mov
test
cli
sub
sub
pop
hlt
stos
divl
std
add
xor
or
aad
mov
fidivrs
mov
in
or
inc
addr16
enter
in
and
mov
les
jns
inc
inc
stc
les
rcl
test
dec
lret
pop
ljmp
dec
jmp
mov
jl
jns
out
call
push
out
mov
sahf
fs
call
std
adc
jmp
xor
mov
out
enter
mov
movsl
fisttpl
in
mov
pop
out
add
jno
and
fwait
mov
inc
xchg
popl
lds
jmp
ja
mov
add
xchg
mov
fildl
pop
jl
mov
ret
not
sti
sarl
dec
pop
lock
xchg
das
test
sahf
popa
dec
roll
sub
sub
mov
in
fcoms
decl
inc
cld
mov
cmp
pusha
shll
or
add
adc
adc
adc
sahf
sbb
test
movsb
sub
cmpsb
or
dec
outsl
and
movsb
das
test
mov
test
pop
mov
enter
enter
imul
pop
mov
pop
sbb
pop
and
arpl
jmp
insb
mov
stos
out
in
jl
movsl
iret
pop
mov
xchg
bound
adc
in
and
test
dec
in
and
bnd
popf
mov
mov
stc
cmp
imul
add
cmp
cwtl
add
xchg
loop
and
mov
test
push
iret
xchg
mov
imul
push
shlb
popa
pop
mov
push
subl
stos
pop
lock
in
in
in
in
in
in
ljmp
xchg
js
sbb
insl
sub
stos
pop
pop
mov
outsl
iret
cltd
scas
sub
fmulp
pop
or
mov
sahf
dec
daa
pop
push
movsb
pop
dec
mov
lahf
cs
popa
mov
push
test
loopne
in
inc
sbb
cmp
xor
insb
and
mov
sub
dec
and
dec
mov
dec
test
mov
fcmovne
cmp
loopne
pop
je
push
adc
test
dec
pop
pop
mov
push
inc
mov
ljmp
mov
push
push
cmc
jmp
out
loop
add
sub
lret
in
xor
inc
sub
js
scas
inc
js
mov
xchg
xchg
sarl
mov
mov
jns
out
inc
js
insl
test
mov
roll
es
sub
sti
repnz
std
jg
mov
cmp
xchg
rol
cmc
sub
dec
aaa
adc
es
enter
adc
adc
or
and
adc
push
pop
movsl
sub
lcall
test
sub
loopne
aam
imul
out
xchg
mov
sub
lods
xchg
outsl
daa
arpl
insb
popf
mov
dec
mov
jg
cmp
mov
pushf
push
xlat
push
cmpsb
mov
dec
xchg
dec
sbb
or
stc
cwtl
mov
cmpsl
dec
repnz
pop
dec
mov
and
lea
pop
mov
xchg
in
fdivs
fldenv
leave
gs
or
pop
pushf
mov
mov
jg
lds
mov
xchg
ret
sbb
sub
fimuls
cwtl
rorb
or
cwtl
xorb
xor
mov
aad
pushl
mov
subb
out
outsb
and
scas
xchg
mov
jbe
inc
dec
lods
pop
pop
xlat
push
mov
sub
mov
pop
ficoml
and
pop
push
in
sub
mov
jne
stos
mov
stos
mov
mov
test
xor
adc
test
push
loop
jg
push
mov
xor
inc
add
push
and
adc
mov
enter
jp
ja
cmpsb
pop
leave
adc
dec
insb
popf
cmp
mov
gs
or
sub
mov
gs
jge
adc
add
in
in
and
ret
test
pop
int3
mov
jo
addr16
push
mov
fmul
pop
jnp
test
inc
scas
in
pop
scas
ror
lds
mov
loope
or
pop
ret
lock
cld
jle
add
inc
loop
aaa
xlat
out
aaa
xchg
cmp
fs
xorb
call
inc
insb
loop
daa
mov
fists
jp
push
mov
cmp
lahf
and
push
loopne
popa
jge
es
dec
shl
pop
mov
gs
imull
clc
mov
and
pop
mov
pop
inc
mov
mov
aas
and
mov
pop
sbb
arpl
ljmp
jg
push
pop
mov
pop
mov
movsb
push
add
clc
jle
cmpsb
jp
ret
jmp
or
and
sarl
aaa
sbb
dec
mov
dec
mov
insb
push
insl
sbb
je
sub
repnz
add
pusha
jbe
add
mov
push
jnp
insl
daa
ret
push
cld
stos
iret
cmp
push
insb
mov
aaa
push
addr16
cmc
mov
sbb
mov
push
out
mov
icebp
dec
xchg
cmp
stos
mov
cltd
outsb
mov
icebp
sbb
outsl
lds
pop
jge
out
jae
shr
jp
jg
fstps
and
dec
xor
xchg
mov
dec
jmp
xlat
hlt
fwait
lcall
repz
cmp
aad
pop
je
jae
inc
stos
xchg
das
adc
movb
xchg
testl
jge
cltd
pop
ret
leave
mov
cmpsl
stc
mov
cmpsb
movsl
sbb
jl
add
sub
mov
mov
cltd
mov
ljmp
mov
xlat
cmc
sbb
jno
mov
fdivs
aam
xor
je
and
lds
xchg
cmp
test
xchg
cmp
mov
adc
cmp
sub
rolb
adc
clc
sub
xchg
inc
out
adc
mov
movsl
cmp
cmc
push
pop
ds
and
xchg
rorb
jne
scas
jbe
mov
mov
xchg
mov
ret
push
sub
cmpsl
and
fcmovne
lahf
jmp
out
sub
out
ja
flds
jbe
pop
xchg
adc
out
rcrl
sbb
pop
push
cmp
shlb
cli
ja
iret
ss
mulb
fs
inc
mov
aaa
and
incl
std
xor
adcb
std
rorl
cmpb
jge
mov
pusha
and
dec
js
xor
hlt
mov
das
inc
sti
fiaddl
mov
insb
lock
ror
lods
xchg
aad
dec
aas
sbb
mov
sarb
xchg
arpl
and
ret
and
xchg
gs
jl
mov
push
push
lods
add
movsl
push
add
cmovg
push
ss
pop
lods
add
andb
xor
mov
adc
pop
jecxz
cmp
jmp
scas
push
jns
outsl
jo
mov
popf
or
packsswb
xchg
pop
nop
mov
sarb
pop
xchg
pop
into
aam
adc
push
push
stos
and
ljmp
jmp
sbb
in
mov
outsl
cmp
xchg
gs
xchg
cmp
add
mov
mov
cmpsb
imul
stc
in
adc
push
iret
std
or
sbb
sbb
cmp
aas
mov
pop
stos
cltd
add
shl
jo
fildl
cmp
xlat
cmpsl
dec
lods
xchg
pop
insl
cmp
ficomps
cmp
push
movsb
fstpl
pop
xchg
sub
push
push
mov
push
dec
outsl
push
and
dec
dec
pushf
outsb
cmp
ret
fisubrl
fcoml
xchg
rolb
xchg
out
sti
mov
xor
jge
fsubrs
xchg
and
scas
push
xchg
and
push
jl
ret
push
inc
daa
aam
jg
mov
pop
adc
xor
push
sub
and
int
pop
or
mov
add
rorl
int
sti
inc
aas
mov
mov
imul
pop
xchg
xchg
sbb
cmpsl
pushf
pop
cld
ja
add
inc
dec
lea
xor
mov
movsl
mov
fstps
hlt
pusha
jae
jns
std
decl
lret
mov
mov
mov
lret
pushf
push
bound
or
push
data16
out
xor
cmpsl
inc
push
xchg
cmp
cwtl
dec
enter
js
bound
jo
sub
adc
pop
ja
addr16
dec
xchg
aam
in
sahf
xor
mov
test
lods
ss
xchg
cmc
cmpsb
dec
testb
aam
sarb
xchg
test
push
aad
outsb
imulb
sbb
or
cltd
stos
stc
aad
repnz
xor
mov
icebp
or
lret
lock
in
sbb
ljmp
push
and
leave
mov
out
jmp
xchg
pop
test
fwait
dec
shl
sbb
jg
jne
jl
cmpsl
xor
mov
add
xchg
adc
push
in
adc
push
sarl
jmp
add
mov
adc
push
jp
inc
dec
call
scas
add
and
fisubs
lods
cmp
sbb
mov
inc
popf
inc
arpl
sbb
pop
and
xchg
cmp
push
mov
mov
or
rolb
fstps
inc
movsl
sub
das
out
jecxz
les
add
in
mov
fcmovb
imul
jg
rorl
ja
mov
xchg
aas
push
jmp
push
in
mov
cmpsb
xchg
and
dec
leave
mov
out
inc
ljmp
jle
arpl
clc
jnp
adc
lahf
jle
inc
repz
mov
xchg
cmp
nop
mov
xchg
mov
ret
cmpsb
sub
lods
lock
fnstsw
cmc
dec
jl
adc
in
lahf
popf
ljmp
popf
fldt
stc
jo
gs
fldcw
nop
dec
push
movhps
and
lea
cwtl
mov
imul
je
fs
xor
and
cs
ror
add
lcall
lcall
pop
ss
int
scas
ret
cmp
jmp
test
in
test
mov
inc
mov
push
hlt
out
mov
ss
mov
scas
cli
pop
cmp
rcrl
mov
mov
out
xchg
outsl
pusha
out
pop
and
mov
sbb
fcoml
in
sti
dec
inc
fwait
pop
outsl
cmpsl
rclb
dec
xor
mov
mov
mov
jbe
inc
clc
or
cld
or
loop
jae
addr16
mov
fnsave
push
mov
test
jl
mov
dec
aam
inc
sbb
jae
out
pop
jmp
fiaddl
cmp
mov
lock
loop
mov
xchg
mov
jne
shlb
jb
ret
and
fistpll
lcall
inc
cwtl
and
push
and
jbe
mov
pop
mov
and
ret
scas
mov
inc
imul
ljmp
mov
test
fsub
push
mov
lret
adc
pop
cmovo
je
cmc
sub
cwtl
in
jo
icebp
mov
add
aas
fcompl
dec
adc
jno
dec
es
xchg
mov
sub
ss
mov
pop
cmp
and
popa
daa
jp
stc
mov
fisttpll
int3
sub
push
pop
and
push
cmc
and
int3
ljmp
pop
arpl
ja
sub
add
je
roll
sub
hlt
dec
xor
push
mov
aas
cmp
lahf
xlat
scas
mov
ret
testl
mov
dec
addr16
cltd
xchg
icebp
fistps
repnz
cmp
stos
pop
gs
inc
rclb
ret
test
imul
lahf
scas
andl
push
add
push
ror
outsl
fistpl
jo
add
movsb
cmp
cwtl
xchg
das
xchg
in
aad
push
out
and
hlt
xor
sti
mov
icebp
movsl
xor
xor
pop
pusha
notb
or
ret
les
test
sbb
icebp
jo
sub
sub
mov
enter
fs
arpl
out
bound
in
sub
test
outsb
sub
sbb
mov
xchg
cmp
push
jp
sbb
lcall
mov
adc
mov
and
sub
cld
popf
les
std
mov
add
sub
addr16
push
out
leave
mov
jge
or
lods
sub
fnsave
out
andb
sbb
lea
push
and
xor
jb
js
imul
outsb
sbb
mov
xlat
sahf
pusha
mov
inc
es
or
xor
idiv
pop
sti
cmpsb
in
outsl
dec
es
fwait
push
ds
mov
and
inc
pop
lods
shlb
outsb
dec
add
sub
push
mov
xchg
mov
adc
fdivrs
jno
dec
pop
loopne
or
push
xor
xor
fldt
adc
jecxz
mov
addr16
adc
pop
fcompl
or
push
mov
sub
lods
jp
lea
push
outsl
xchg
adc
add
pop
or
pushf
mov
out
filds
mov
inc
and
inc
jnp
loop
adc
aaa
sbb
fwait
pop
loope
aas
or
push
stos
daa
fcomps
cmpsb
lock
mov
mov
push
test
cmp
cmpsl
pop
pop
imul
mov
or
mov
or
mov
rorl
dec
push
sar
ficoms
repnz
mov
call
hlt
lcall
push
adc
jo
mov
in
les
testl
lea
dec
aaa
rcpps
add
lock
rclb
push
mov
call
push
jo
sbbl
shrb
add
aas
xor
sbb
add
shrb
mov
sub
push
add
pusha
or
pop
cmpxchg
pop
add
push
inc
mov
ss
bound
fidivs
lcall
push
or
bound
or
jno
push
or
mov
jae
sahf
sbb
push
lret
dec
mov
fisubrl
sbb
cmc
inc
popa
cltd
dec
inc
fsubs
outsb
add
outsl
sbb
xor
pusha
or
push
xor
fxch
test
lahf
nopl
nopl
ret
call
push
add
jne
sar
dec
aad
inc
sub
stc
ror
dec
inc
lock
mov
pop
adc
dec
leave
ficomps
push
and
dec
fstpl
mov
ja
add
insl
lods
push
jb
mov
jne
mov
pop
mov
or
or
adc
sub
pop
adcb
add
inc
sti
mov
mov
js
leave
test
cmp
sbb
sbb
fbstp
stos
jo
xchg
xor
mov
popa
in
loopne
jnp
movsb
xchg
mov
jmp
push
hlt
cli
dec
pop
ss
push
imul
mov
mov
clc
and
pop
insl
or
mov
loope
xchg
das
push
mov
lods
loop
cld
adc
mov
push
insb
stos
adc
je
and
loope
lock
iret
ret
cmp
push
or
mov
push
and
lods
fsubrs
push
testl
jbe
mov
andl
test
xchg
hlt
dec
adc
cmpsb
lock
adc
and
andl
inc
mov
xlat
push
xchg
and
stos
pop
cmp
loopne
adc
pop
lods
mov
push
in
aas
popf
sahf
push
das
shr
subb
lds
push
das
ror
sbb
dec
pop
pop
std
pop
gs
sbb
xor
enter
sbb
fidivl
push
or
ja
imul
je
and
push
add
mov
xchg
fs
adc
jnp
pop
xchg
movsb
and
loopne
sarb
loopne
adc
je
ja
les
and
inc
sti
movhps
scas
xchg
cwtl
push
xor
inc
xor
xchg
xor
sbb
fs
repz
jns
shll
mov
out
mov
imul
jnp
and
out
divl
popa
out
inc
insl
shl
loope
push
push
enter
cmp
mov
cmp
inc
adc
adcb
loope
xchg
outsb
rol
xor
mov
loope
clc
call
dec
jnp
xchg
jnp
xchg
pop
mov
pop
xchg
stos
xor
gs
mov
shll
mov
mov
dec
inc
xchg
sbb
lret
cmp
cmp
sbb
loopne
mov
sub
and
mov
adc
sub
cmpsl
call
push
sbbb
dec
loope
inc
aad
dec
dec
icebp
cmp
nop
pusha
fnstcw
jmp
pop
lahf
aad
dec
stos
pop
push
ljmp
push
fsubs
add
repnz
and
stos
pushf
subb
xchg
or
dec
test
mov
mov
xor
js
xor
adc
js
mov
and
and
mov
cmp
adc
and
and
mov
pop
push
inc
div
hlt
pusha
xchg
fisttpll
dec
rclb
or
push
inc
inc
nop
lds
cwtl
andb
mov
addl
shl
add
inc
inc
iret
xor
or
rolb
add
adc
outsb
loope
out
mov
call
and
outsl
sub
test
dec
aam
cmpsb
ljmp
popf
push
lcall
mov
cmpsl
fs
aad
adc
push
mov
mov
inc
jge
cmc
or
mov
mov
inc
mov
mov
inc
adc
stos
in
push
pop
and
xchg
mov
out
inc
stc
enter
outsl
xchg
jl
fcomps
and
ret
mov
test
dec
sbb
mov
inc
bound
dec
pusha
adc
mov
les
jbe
js
in
imul
das
add
mov
cli
dec
iret
in
jns
dec
andps
sbb
imul
js
mov
fiadds
loope
or
repz
xor
mul
jbe
aas
paddd
xchg
outsb
pop
sub
push
lahf
loop
mov
jg
xchg
push
dec
bnd
lea
xchg
xor
push
pop
loop
mov
sub
std
jne
ljmp
mull
or
mov
pop
ret
insl
lcall
fdivrp
cmc
sbb
ret
cld
pop
or
sahf
out
mov
push
adc
and
cmp
fidivrl
aam
mov
push
mov
pop
add
out
inc
bound
out
aam
xchg
cmpsb
sahf
jne
lods
mov
icebp
inc
clc
jne
sub
repz
xor
lcall
jno
popa
jg
fs
cmp
not
adc
cld
scas
push
jns
xchg
lock
or
fisubrl
adc
xchg
out
jb
subb
sti
sti
aam
mulb
xor
adcb
jl
add
or
xlat
xchg
rorb
xor
or
ja
loopne
nop
cs
stos
xor
jb
inc
fwait
dec
pusha
or
outsl
push
decl
fdivrs
imul
leave
stos
xor
and
cmp
mov
out
inc
mov
imull
sbb
sahf
ja
mov
mulb
lea
push
in
sbb
sti
loop
xor
cwtl
std
jecxz
push
mov
shll
ja
mov
push
lret
sti
inc
ds
pop
hlt
test
adc
sbb
out
js
push
xor
nop
ja
hlt
and
sub
scas
test
or
mov
pop
xorb
pop
cmc
ficoml
adc
iret
add
and
dec
into
jo
inc
mov
push
cmp
cmpl
or
fisubrs
inc
sub
sahf
subb
xchg
sub
in
inc
roll
lahf
adc
cmp
in
xor
or
insb
xorb
fdivp
xchg
inc
sbb
jge
iret
mov
dec
lahf
mov
outsl
push
mov
xchg
mov
xor
inc
lret
adc
sti
mov
movsb
ds
jp
sub
in
negb
xchg
push
mov
outsl
mov
outsl
mov
idiv
jae
mov
mov
mov
lret
sub
adc
sahf
inc
sub
aas
test
int
push
paddq
or
sbb
mov
adc
xor
pop
mov
mov
mov
iret
ljmp
xchg
pop
aaa
dec
lcall
add
lahf
mov
mov
mov
xchg
inc
cld
inc
jge
rcll
adc
movhps
daa
mov
dec
ret
test
or
mov
adc
inc
ret
or
out
mov
out
out
movsl
dec
std
mov
out
jmp
pop
ljmp
sarb
data16
adc
nop
loop
or
and
lahf
pop
xchg
lods
aas
sub
fdivrp
cmp
repz
sti
mov
pop
clc
fs
loop
cmp
test
inc
xchg
decb
test
stc
mov
icebp
jno
mov
and
loop
ret
pop
mov
add
clc
adc
or
and
loop
pop
push
adc
cli
movsl
popf
mov
pop
cs
inc
loop
insb
insb
mov
fiaddl
js
cmpb
std
and
pop
inc
scas
les
sub
sub
xor
xchg
dec
push
push
les
and
pop
cmp
int3
call
cltd
into
test
and
push
aad
cmp
addr16
sbb
adc
test
cld
sub
out
cmp
cmpl
jmp
mov
push
std
nop
jne
addr16
cli
das
adc
xchg
cltd
cld
jmp
imul
mov
jnp
pop
dec
lds
call
cltd
nop
add
adc
loop
xchg
jmp
popa
mov
in
test
mov
mov
xchg
nop
jo
xchg
xchg
fdivrs
cld
cmp
fnstenv
jle
xchg
jno
sbb
sub
mov
pop
jae
dec
std
push
push
inc
fwait
dec
sbb
lea
sub
and
stc
test
dec
pop
push
mov
or
xor
js
sub
cmpl
movsl
fmulp
and
fwait
jns
or
sub
loope
push
inc
xor
test
pop
xchg
push
cmpsl
pushf
add
xchg
jmp
cmpsl
inc
ds
lods
mov
ficomps
fwait
shll
nop
jmp
pushf
lds
mov
mov
aam
cmpsb
clc
jae
int3
int3
pop
jg
das
mov
jg
jg
iret
cs
mov
mov
mov
addr16
adc
cmp
mov
xor
out
adc
leave
jle
push
ljmp
daa
mov
dec
mov
jle
mov
popa
cmp
dec
mov
jns
jns
cli
or
adc
cmp
push
adc
mov
pop
stos
stos
addr16
incb
aam
cmc
data16
and
ret
into
js
shll
cld
sarl
jge
andb
cli
mov
loopne
repz
into
andl
xor
or
sahf
pusha
je
out
sahf
sti
jecxz
fstpt
inc
lods
or
movsl
shlb
mov
stc
imull
mov
mov
in
lea
mov
cld
lds
jg
addr16
andl
mov
pop
pop
dec
fnstcw
cmp
lock
ljmp
dec
addr16
dec
sti
pop
mov
dec
add
rol
fwait
sbb
rol
adc
in
inc
imul
jnp
xrelease
ss
loop
xor
mov
cmpsl
fisubs
les
adcl
cmp
sub
add
jo
sub
fnstcw
sahf
ja
stos
xchg
xchg
push
dec
push
jmp
push
out
pop
repnz
dec
pop
fwait
mov
cmp
fdivs
or
sbb
xchg
pop
push
sbb
jp
mov
sbb
jbe
dec
pop
ss
inc
add
cwtl
pop
shl
fucomip
mov
rolb
cli
jp
ds
out
fcomps
add
dec
hlt
loop
sbb
mov
adc
inc
jno
loop
mov
xchg
bound
pop
loope
cmp
mov
cmp
popf
pusha
cltd
popa
and
pop
loop
sub
push
cmp
xor
arpl
mov
inc
dec
xor
mov
mov
inc
mov
dec
adc
test
dec
push
mov
nop
adc
shlb
mov
shll
hlt
je
push
inc
outsl
fucomi
repnz
fildll
out
inc
test
mov
cmpb
shrl
dec
dec
add
xchg
push
push
ds
rcll
mov
test
test
movsl
inc
movl
xor
xchg
adc
adc
add
mov
or
sbb
lret
sbbl
add
push
add
pusha
push
inc
push
inc
js
rolb
add
aam
mov
andl
andl
adc
pop
sbb
add
aaa
add
pop
adc
jo
les
inc
mov
pop
xor
out
cmpsl
mov
mov
movsb
mov
pop
iret
mov
mov
jnp
lds
mov
pop
inc
lock
pusha
jns
inc
cmp
pop
inc
rolb
mov
jge
cld
sbb
and
push
std
adc
ja
jl
mov
pusha
call
xor
add
cli
push
popa
rorl
push
je
les
adc
cmp
js
mov
xchg
push
movsb
sbb
push
inc
arpl
pmulhw
xchg
ds
xchg
aas
mov
jmp
adc
sbb
xor
or
cmp
inc
subl
mov
loopne
clc
fstps
adc
insb
sbb
mov
aad
icebp
stos
sub
xchg
cmpsl
in
rcrl
dec
std
aad
xorl
pop
ret
push
hlt
inc
shrb
jmp
sub
rcl
jmp
jge
pushf
sbb
push
cmpsl
jecxz
cmpsl
xchg
xor
aad
push
sbb
imul
pop
mov
in
inc
mov
sbb
outsl
lea
jb
jbe
ret
insb
test
scas
lock
sbb
std
push
int
negb
sti
cli
jae
popf
in
push
fsts
push
sbb
push
sub
jge
mov
or
outsb
sarl
or
pop
addb
pop
ret
pop
mov
sub
loopne
pusha
push
inc
mov
shrb
add
test
test
movsb
push
xor
add
pop
jle
mov
pop
or
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
ret
sub
clc
xor
pusha
cmp
mov
add
inc
push
xchg
jle
xor
add
and
xor
add
and
xor
add
and
xor
add
jg
cmp
mov
xor
xor
xor
loopne
cwtl
xor
mov
rorb
rorb
push
clc
or
fisttps
lahf
xchg
rcl
push
rcll
push
rcll
or
adcb
call
test
test
test
test
sbb
sbb
sbb
sbb
sbbl
sbbl
sbbl
sbbl
mov
loopne
or
mov
pop
es
jl
inc
add
loop
pusha
inc
add
inc
add
inc
add
inc
add
inc
add
clc
in
mov
add
inc
add
inc
add
loope
mov
sub
mov
push
test
push
test
push
test
xchg
es
add
femms
push
lret
aam
in
inc
inc
sbb
sub
mov
inc
mov
add
clc
add
loopne
mov
test
xor
sub
test
mov
rorb
inc
xchg
push
iret
adc
inc
jnp
jl
test
lret
cmc
adc
adc
ds
dec
ret
jge
les
lret
lret
jg
add
cmp
mov
jb
pop
bound
sahf
mov
mov
adc
fcmovnb
jbe
int
inc
in
inc
push
and
inc
clc
jnp
in
ja
stc
cli
push
mov
xchg
clc
enter
inc
cld
jo
cli
mov
nop
mov
mov
xor
xor
pusha
pop
outsl
adc
fists
jmp
pop
jne
jns
shll
jne
cmp
hlt
into
sbb
outsl
add
enter
pop
fs
xchg
repz
pop
sub
test
cmp
gs
in
pop
cmp
mov
lahf
adc
pop
outsl
push
mov
lahf
cli
fisubl
xchg
aaa
out
jns
shlb
iret
adc
mov
and
fidivrs
in
and
jb
push
fstl
pushf
sti
int
loope
xchg
pop
xchg
stos
push
jecxz
jno
mov
out
push
adc
test
inc
ljmp
lds
inc
fildll
mov
lds
or
test
repnz
lods
push
aad
cmp
dec
and
jb
mov
fwait
aad
pop
jne
daa
pop
mov
inc
xor
aad
rcll
and
or
adc
cld
shlb
incl
ret
mov
dec
dec
adc
popf
cmpsb
jl
or
mov
std
and
mov
dec
ret
inc
cld
mov
scas
mov
sbb
pusha
or
adc
dec
inc
sbb
int
and
xchg
into
and
and
iret
mov
push
das
aaa
mov
addb
lds
in
in
test
mulb
mov
ljmp
nop
cwtl
int
divb
aas
or
imul
push
ljmp
xor
inc
mov
loopne
xchg
pop
int
cld
cs
stos
pop
clc
popf
jmp
inc
and
ds
mov
pop
sbb
dec
aaa
ficomps
adc
ret
fdivrl
in
fs
call
lock
ret
test
cmp
and
inc
out
mov
fsubl
fldenv
fwait
test
adc
aaa
orl
pushf
xlat
jg
movsb
cld
mov
ret
lock
test
daa
loope
or
dec
ret
lock
test
daa
loope
or
dec
ret
lock
test
daa
loope
or
dec
ret
lock
xchg
jp
addr16
repnz
mov
test
loop
outsb
dec
stc
sti
pop
dec
jp
cld
add
push
lock
add
rclb
clc
icebp
pop
pop
sub
ds
fbld
and
xchg
bound
sbb
pusha
cltd
xor
les
xor
shrl
and
loopne
jno
inc
je
int3
inc
adc
add
adc
ret
push
pop
test
and
and
les
jmp
mov
jb
mov
aam
loop
aas
inc
xor
insb
hlt
mov
mov
jmp
daa
pop
daa
pop
es
cltd
loop
push
jbe
insl
out
inc
fisttpll
mov
daa
scas
daa
mov
mov
dec
xor
dec
jmp
dec
add
push
shlb
test
pusha
or
adc
out
cli
enter
mov
sub
pop
sub
mov
adc
inc
mov
or
dec
in
dec
scas
sbb
or
iret
mov
inc
repz
stc
xor
bound
jbe
mov
sub
bound
in
or
lcall
bound
ret
cmp
sub
js
add
arpl
ret
dec
fwait
mov
jnp
or
aas
jg
cmpl
aas
mov
aad
jmp
mulb
repz
hlt
cmpsl
cmc
inc
cmc
out
inc
testb
push
hlt
push
mov
and
add
push
fcom
mov
inc
and
push
in
lds
pop
inc
push
inc
jp
jg
repz
jl
cmpb
dec
in
mov
dec
arpl
or
in
mov
dec
out
or
xor
imul
jno
adcl
cmpsl
int
ss
into
outsb
loopne
int3
fistpll
hlt
outsl
or
outsl
adc
aaa
nop
aaa
fstps
mov
jno
lret
jno
cltd
into
jl
fxch
sbb
push
sub
mov
lcall
xchg
mov
inc
mov
push
aad
jae
sahf
dec
inc
sahf
enter
fistpl
jg
ds
jg
jg
jg
jg
aas
mov
push
add
push
push
pop
inc
das
mov
adc
insl
sbb
ficoms
mov
dec
and
and
test
jb
xchg
jge
cmp
cmp
push
inc
repnz
inc
and
lret
mov
adc
push
cmp
inc
scas
int3
scas
call
stos
movsl
mov
popa
imul
fiaddl
adc
mov
xchg
imul
pop
in
mov
mov
mov
pop
stos
pusha
xchg
addl
dec
outsl
or
or
xor
leave
jecxz
inc
insb
insl
data16
push
jns
cmp
ret
jno
cmc
mulb
out
out
dec
lods
sbb
loop
je
mov
mov
sub
mov
cmp
xchg
xchg
addr16
sahf
out
rcrb
jg,pn
jg
aas
fistpl
xlat
pop
out
int
out
dec
out
mov
and
inc
loop
sub
cmp
and
xor
adc
test
aam
enter
test
mov
popa
push
je
mov
movsb
pop
hlt
pop
and
lret
pop
ljmp
or
daa
sbb
movsl
pushf
movsl
int3
movsl
push
lods
jo
lcall
das
push
pop
and
lds
mov
icebp
lea
mov
dec
int
sbb
sbb
sbb
fbld
fildll
fildll
stos
sbb
jb
les
daa
lods
pusha
out
ja,pn
cmp
inc
ja
popf
int3
sbb
xchg
cmp
jle
jle
ss
pop
add
inc
gs
stos
or
pop
aam
jp
ljmp
or
imul
enter
xchg
xchg
test
or
jp
cmp
cmp
and
sbb
inc
fs
fmuls
mov
cmp
jge
push
adc
cmp
pop
es
fwait
movsb
xchg
out
dec
sahf
outsl
rolb
push
xchg
lds
inc
sbb
lret
lcall
mov
and
cmp
rorl
pop
xchg
xor
jne
jnp
cmp
xor
lods
sbb
lock
dec
dec
aas
lcall
sub
or
into
outsb
fisubrl
fndisi(8087
mov
jecxz
outsb
int
cmp
mov
sbb
xor
jno
jecxz
les
inc
daa
dec
xor
mov
pushf
out
push
out
dec
xchg
cmp
add
inc
fmul
aaa
sbb
fistl
fucom
daa
ret
into
sar
xchg
sar
rolb
pop
dec
subl
sbb
jno
imul
push
repnz
mov
cmp
mov
jle
push
pop
xchg
xchg
lods
dec
cltd
daa
popa
daa
jo
rclb
stos
cli
inc
cli
jae
or
lret
sti
jge
push
loopne
bound
sub
push
lret
addr16
lret
xchg
scas
xchg
leave
push
lret
daa
dec
pop
mov
inc
pop
mov
cltd
popa
xor
addr16
xor
push
lds
mov
ffreep
cli
jmp
ret
mov
jecxz
cmpsl
and
movsl
pop
repz
and
jl
pop
push
ret
pop
mov
stos
loope
repnz
popa
dec
ret
jno
and
shlb
or
adc
push
lods
mov
fs
out
cmp
xor
mov
pop
mov
test
pop
cld
mov
push
lret
inc
push
mov
inc
dec
mov
cs
leave
imul
and
mov
add
mov
in
mov
mov
and
jp
pop
mov
sbb
mov
movsl
in
int3
xchg
pushf
das
cmp
or
out
cwtl
imul
popa
mov
jae
or
sbb
add
les
mov
push
and
mov
and
les
ret
adc
or
and
push
inc
sub
xchg
mov
xchg
mov
and
dec
ret
xor
data16
dec
cwtl
ret
xor
fs
leave
cltd
xchg
xor
fs
in
xchg
push
mov
cwtl
roll
out
lcall
xchg
cmpsl
dec
das
mov
and
push
aam
test
push
mov
xor
aam
test
sbb
insl
test
and
fwait
ds
lods
rep
inc
fisttpll
repnz
movsb
or
int
sbb
fmull
arpl
stos
leave
ljmp
mov
and
ret
out
mov
jno
push
push
data16
cld
into
dec
push
lods
inc
sub
popa
enter
and
dec
pushf
xchg
cmp
jb
in
ret
push
push
cmp
into
mov
insb
cmp
jne
jmp
xlat
jae
push
mov
ret
cmp
jbe
in
dec
fadd
mov
fs
leave
popf
xchg
cmp
fs
loope
jecxz
movups
movl
iret
ss
outsl
cmp
jns
repz
aas
sahf
and
mov
sub
cmp
mov
xor
cmpsl
movsl
dec
sahf
pushf
cmp
sti
nopl
fstps
lahf
insb
fidivrs
sti
mov
mov
ret
sub
clc
xchg
icebp
xchg
aas
sub
cld
leave
stc
ret
repz
jb
rcll
add
xorl
cmp
sbbb
cmp
test
aas
cs
mov
xor
mov
les
enter
test
sub
test
cs
pop
aas
push
test
xchg
xor
bound
les
shll
push
sahf
inc
inc
adc
sub
inc
pop
adc
dec
je
call
ja
xchg
adc
daa
hlt
push
sub
inc
adc
loop
adc
sub
cmpsb
imul
repnz
xor
mov
adc
mov
dec
mov
jns
das
sahf
movsl
ja
xchg
insb
jg
add
pushf
xor
jb
or
mov
pop
mov
adc
sub
nop
and
xchg
adc
scas
inc
adc
sub
push
dec
movsb
lods
sub
dec
loop
or
stos
xor
movsl
lret
cmpb
or
or
mov
and
dec
int3
push
lret
js
fstl
and
cli
dec
cmp
ror
les
and
sub
out
into
xor
push
pop
in
pop
add
sub
push
push
and
icebp
and
pop
daa
sbb
jae
fsts
dec
and
and
mov
mov
imul
inc
sub
jp
and
pop
or
jge
cli
push
and
adc
and
sbb
call
xor
test
daa
loope
or
dec
ret
fdivr
sub
std
xchg
push
lcall
fiaddl
push
test
loope
xchg
adc
rcrb
mov
jns
mov
in
or
icebp
addr16
mov
inc
xchg
adc
adc
sub
mov
imul
and
lds
dec
sbbb
adc
icebp
inc
stc
and
jge
icebp
cmp
ret
test
mov
repz
mov
xchg
daa
stc
mov
adc
mov
aam
fs
out
scas
clc
into
inc
push
xchg
fcmovne
bound
ljmp
mov
mov
sub
mov
fnstcw
stos
arpl
stos
push
mov
cmp
lret
jecxz
pop
push
dec
sub
ficompl
movsl
fldl
data16
stos
ljmp
jmp
push
xchg
cmc
jl
repz
mov
xchg
int
sub
insb
out
mov
sbb
loopne
pushf
repz
pop
xchg
fbld
inc
mov
je
adc
test
in
leave
push
jne
fldt
gs
jne
pop
bswap
dec
mov
out
xor
mov
mov
push
jae
adc
jecxz
ja
inc
or
and
pop
sub
mulb
iret
mov
fwait
aaa
int
dec
outsb
ja
lea
fsubrl
pop
mov
ljmp
aas
pop
je
xchg
push
pop
adc
pusha
fstpt
lods
adc
cmp
lahf
insb
pop
leave
inc
aam
jb
out
mov
pop
cmpsb
pop
xor
addb
pop
notl
lods
inc
scas
fidivs
dec
fmull
and
sub
and
test
mov
in
jecxz
dec
rorl
dec
stos
mov
insl
jle
inc
aam
cwtl
jle
outsb
pushf
in
cs
push
mov
jmp
xor
add
es
dec
into
mov
orb
scas
xor
sub
jmp
push
add
mov
mov
lcall
jge
call
out
aam
shlb
or
mov
mov
dec
fistpll
popa
xchg
xchg
jge
jle
fadd
sbb
std
fldcw
scas
scas
enter
scas
int3
frstor
pushw
inc
stos
ds
xor
or
push
popf
or
jbe
imul
cmpsb
in
shrl
out
int
clc
jns
mov
xchg
sti
push
hlt
jge
aam
and
mov
clc
jno
jns
or
cli
test
or
movd
into
out
pop
seto
mov
cmp
xchg
jl
mov
add
dec
cmp
jnp
stos
xor
cli
push
pop
aam
mov
pop
jo
push
jmp
ficoms
mov
sub
and
in
movsb
int
jne
loop
jns
addr16
xchg
ss
cltd
jns
mulb
jns,pn
je
xchg
in
loope
movsb
idivb
mov
mov
loop
xchg
aad
out
dec
enter
push
pop
jmp
xorb
xchg
mov
or
sub
pop
loope
mov
lret
repz
data16
lahf
lahf
mov
div
xchg
cmp
les
and
arpl
push
mov
scas
jns
push
push
jns
test
dec
aam
cs
scas
inc
cmp
movd
mov
push
adc
ds
int
mov
xlat
pop
fisubrs
pop
jmp
xor
mov
xchg
out
in
or
push
daa
int3
ret
je
mov
adc
std
ror
jae
ror
shll
es
mov
jno
bound
ja
pop
jp
int3
mov
je
call
ljmp
cmp
dec
jmp
mov
std
fs
scas
xchg
gs
rcr
cmp
pop
and
aad
xchg
iret
or
leave
enter
mov
cwtl
ret
xchg
ja
pop
sbb
sbb
dec
imulb
scas
cmp
or
add
das
fsts
pusha
loop
shrb
es
fbld
iret
loope
adc
or
mov
cltd
int3
pop
scas
ljmp
sub
jecxz
jl
pop
cmp
pop
xchg
pop
jne
movsl
cwtl
aam
dec
jge
out
in
jg
pop
in
fwait
xchg
jp
fildl
fnstcw
jbe
adc
int3
sub
std
jbe
jae
insb
out
aam
loop
xchg
cltd
xchg
jnp
sub
mov
imul
mov
xchg
cmp
cmc
dec
cs
icebp
jbe
or
or
add
xchg
inc
push
xchg
dec
mov
in
push
jae
out
push
adc
pop
test
xor
sub
cmpsl
mov
rcll
pop
sub
pop
test
mov
lods
push
lret
fisubrs
xor
arpl
inc
fcoms
les
stos
popa
xchg
cwtl
mov
mov
lods
add
xchg
jae
lods
lahf
insl
in
sub
in
bound
outsb
fisubs
lods
dec
in
dec
ret
int3
cmp
and
lret
test
into
adc
aam
mov
pop
jbe
push
lret
push
mov
arpl
incb
cwtl
inc
xchg
and
addr16
xor
adc
lods
dec
mov
cli
fmull
jno
mov
sub
pop
addr16
dec
loopne
add
dec
cmp
and
sbb
adc
out
sahf
sahf
push
pushf
sbbl
pop
lret
aad
jp
mov
negb
inc
loop
pop
mov
js
lods
imul
xchg
clc
jmp
addr16
sub
jg
mov
sub
or
cmp
in
aad
mov
cli
mov
ljmp
sti
aad
sbb
push
aad
jmp
in
xchg
nop
cmc
xchg
mov
jns
inc
mov
xchg
stos
lods
fsubr
inc
repnz
add
sbb
and
aam
scas
mov
ljmp
dec
movsb
mov
int
mov
mov
fcomip
notl
xor
adc
push
sbb
cmpsl
xor
mov
dec
mov
jne
pop
mov
dec
sets
jmp
cmp
mov
mov
fnstcw
lds
aaa
adc
insb
pop
scas
xchg
cmp
ret
pop
mov
xchg
cmc
insb
add
scas
inc
push
dec
mov
dec
out
and
fwait
mov
inc
xor
testb
jge
andb
xor
stos
pop
pop
hlt
xchg
stc
js
mov
sub
jns
dec
fdivrs
and
xor
cmp
jb
fwait
sti
lret
sbb
lods
push
mov
lcall
ljmp
xor
jg
rcrb
iret
xor
je
mov
pop
xchg
cmpb
and
ljmp
mov
jae
pop
fstps
lock
cwtl
test
push
mov
imul
leave
stc
jae
mov
insl
xchg
sti
scas
jge
mov
pop
into
loopne
icebp
push
lcall
aaa
test
inc
shr
sbb
inc
add
push
in
sbb
xchg
and
cli
clc
out
mov
mov
inc
cli
cli
out
iret
mov
bound
cwtl
mov
push
int3
sti
mov
jg
xchg
cmpsl
mov
das
xchg
pop
shll
ljmp
xor
mov
and
fmull
cmp
xor
into
fs
cmp
push
pusha
cmp
or
test
ss
test
repz
shlb
inc
loopne
fwait
sbb
inc
ljmp
mov
lahf
sbb
sti
push
add
xchg
out
divl
stos
xchg
in
out
repz
dec
mov
mov
lods
push
pop
xchg
push
jp
in
outsb
xchg
jne
dec
push
testb
aaa
xchg
test
pop
out
enter
jmp
enter
cmpsl
insb
dec
imul
xchg
je
pushf
aas
loope
jmp
mov
loop
sbb
mov
fidivrs
push
xchg
mov
repnz
pop
xor
jne
pop
loop
arpl
xchg
mov
push
xor
or
xchg
lahf
xchg
fmul
dec
fcmovnu
cmpsb
adc
adc
jb
iret
outsl
and
mov
xor
and
adc
fbld
xor
or
dec
fsubr
mov
cmp
mov
lds
repnz
mov
adc
gs
cmp
lods
lds
jnp
inc
aam
xchg
xor
push
dec
orl
jne
xchg
cwtl
mov
jb
dec
in
inc
das
mov
stos
sbb
fistl
iret
mov
pushf
xor
mov
aad
or
in
sahf
cltd
pop
xor
rcrl
cmpsb
mov
mov
sti
jge
testl
dec
jae
sar
mov
rcr
xchg
cltd
mov
pop
lds
popf
pop
pop
pop
insb
mov
cmp
mov
dec
adc
push
fprem1
gs
add
cs
cmpsl
lods
mov
imul
xchg
mov
xchg
mov
ss
pop
arpl
ret
imul
and
frstor
jmp
daa
jae
dec
push
dec
out
pushf
je
adc
xchg
int3
popf
mov
cmp
inc
hlt
mov
out
cmc
movsb
lahf
inc
jecxz
mov
idivb
into
mov
mov
fisubs
loope
call
mov
ja
mov
jae
jnp
cmc
ret
push
cmp
xor
faddl
adc
lods
out
sbb
add
push
xchg
gs
je
push
xchg
push
xchg
ror
cmp
cltd
sar
cmp
fwait
out
jne
mov
in
popf
xchg
mov
pop
pop
popf
mov
xlat
and
xor
adc
pop
jb
test
in
aaa
and
pop
pop
in
lock
out
outsl
xchg
mov
out
pop
pop
mov
jne
negl
pop
add
int
sbb
stc
outsb
lahf
mov
movsb
clc
mov
and
lret
mov
pop
inc
leave
lret
jae
std
and
addr16
rorl
dec
lods
fsubrs
sahf
lcall
scas
repnz
dec
pop
sbb
pop
pop
sub
mov
pop
mov
movsl
dec
pop
ja
movsl
cli
cmp
test
xor
negb
popf
and
jge
ficoms
stos
in
ss
sub
in
pop
imul
xor
xor
mov
arpl
popf
fsubr
insb
ss
inc
jns
fisubrs
sub
inc
outsl
aad
dec
jp
pop
jecxz
fwait
mov
mov
fidivs
cwtl
sub
mov
mov
add
outsb
pushl
fwait
sub
mov
cmpsb
sbb
push
pop
in
jne
enter
xchg
lods
loope
es
or
push
push
inc
es
xchg
mov
iret
push
cld
xchg
incl
fcmovnbe
jp
xor
mov
and
and
fstpt
stc
pop
xor
insb
dec
sbb
pop
push
cmc
shlb
test
lahf
xchg
xchg
iret
out
fstps
fmulp
mov
push
out
aaa
inc
mov
cwtl
fcoms
cmc
pop
push
cs
sbb
xchg
cmp
nop
in
outsb
gs
es
mov
mov
pusha
cmpsl
sub
insl
outsb
insb
xor
out
mov
fnstcw
mov
xchg
sub
cmp
jbe
std
add
inc
out
divl
xor
cwtl
xchg
pop
scas
xor
pop
sbb
jp
movsl
mov
ss
out
mov
xor
lods
or
or
xchg
jne
sbb
xor
pop
mov
and
jp
into
ljmp
mov
sbb
mov
or
into
setae
jge
popa
sbb
cmp
lods
xchg
inc
stos
xor
int3
roll
sbb
cmpsb
aad
push
repnz
test
xchg
adc
push
imul
fdivrl
sub
fimuls
in
xchg
cmp
stos
jl
cmp
jb
ljmp
and
jg
aaa
cmp
mov
stos
fisubrs
fnstenv
jp
jmp
shrb
push
movsl
fdivl
lds
das
std
lcall
sbb
data16
data16
stos
int
clc
xchg
cli
mov
jne
test
cli
push
test
lea
dec
outsl
push
jno
repnz
xchg
sub
into
cmp
jb
add
push
repnz
int3
push
adc
jbe
sbb
mov
cltd
pushf
xor
cltd
jmp
lret
sbb
lods
or
jecxz
dec
dec
les
adc
inc
mov
push
aam
push
pop
adc
xor
test
les
mov
por
sarl
pop
mov
jg
cmpsl
lret
inc
mov
lock
ja
bound
add
mov
sub
mov
pop
pop
cmp
data16
and
push
imul
outsb
cwtl
lret
pop
por
dec
mov
lret
ret
adcl
movsb
cmp
mov
ljmp
push
jecxz
cmp
push
and
test
xchg
fisttpl
in
xchg
sti
cmp
jecxz
xchg
pop
inc
mov
push
jle
jmp
fldcw
shll
jo
or
mov
adc
mov
push
test
repz
popa
pop
and
xchg
jg
xchg
and
addl
pusha
stos
or
and
xor
xchg
add
dec
shll
jge
pop
pusha
fcoms
mov
and
mov
xchg
mov
or
pop
adc
mov
push
mov
sub
add
jg
cmp
xor
test
mov
cmp
in
cmp
xchg
cltd
jnp
jmp
repz
push
dec
shll
mov
lcall
inc
insl
lahf
jge
rolb
sub
inc
mov
dec
mov
ja
sti
inc
sbb
xchg
sbb
adc
push
mov
mov
int3
push
outsb
cmp
xlat
out
bound
sti
insb
push
add
hlt
mov
sti
rorl
cmpsl
shrl
or
jg
adc
repz
add
sub
or
js
lds
xor
and
mov
and
xlat
add
dec
roll
lods
mov
loope
cld
jo
cld
jnp
or
pop
inc
popf
mov
dec
int3
sti
jne
jnp
inc
je
pop
xor
pop
and
and
lods
inc
inc
dec
xor
mov
rclb
xchg
std
notb
jo
jno
movsl
gs
in
inc
pop
add
outsb
imul
pop
arpl
ljmp
test
pop
stos
clc
stos
ja
jno
pavgw
insl
mov
jae
fnstcw
ljmp
adc
loope
and
mov
mov
add
jbe
dec
aaa
icebp
fldl
jle
adc
pop
insb
xchg
push
jp
inc
xchg
nop
or
rclb
sti
push
xchg
pop
cld
iret
jbe
bnd
mov
scas
pop
inc
hlt
insl
xchg
pop
sub
call
bswap
aam
add
inc
push
xorl
mov
ja
push
mov
shl
out
mov
sub
xchg
jl
fisttps
push
rorb
sub
lret
addr16
icebp
jmp
out
sbb
mov
push
and
and
in
ljmp
fadds
jl
mov
add
ja
out
faddp
jbe
mov
aad
mov
mov
gs
sbb
mov
jge
dec
jo
jne
outsl
stos
mov
sub
mov
push
or
dec
rcll
pushl
lret
xlat
xor
adc
and
cmp
push
sub
and
repnz
in
int
and
mov
jbe
fndisi(8087
xchg
mov
mov
faddl
aaa
ds
inc
leave
push
sbb
fdivl
mov
jmp
jns
outsb
cltd
inc
add
jno
out
mov
ret
stc
fldlg2
push
mov
gs
sbb
pop
push
xor
lds
cltd
inc
dec
je
mov
out
sub
std
xchg
pop
loopne
xor
out
sbb
mov
add
pop
adc
sbb
dec
insl
push
cli
aas
out
cltd
jbe
jne
inc
pop
daa
mov
mov
scas
adc
ds
xor
and
xchg
jecxz
clc
js
mov
test
insb
sti
push
sbb
cltd
mov
push
lea
mulb
ret
xchg
std
mov
out
inc
add
js
clc
sub
push
fwait
and
mov
aas
aam
xchg
andl
xchg
jns
xchg
and
int3
cmp
mov
aam
adc
xor
loopne
loop
hlt
icebp
mulb
stos
addl
sbb
nop
xchg
fists
or
fadd
test
dec
faddl
sub
sub
cwtl
or
imul
test
in
push
jge
scas
fwait
xchg
lds
js
inc
mov
loopne
fwait
pop
fildll
pop
cmpsl
or
popf
add
jo
into
and
push
sahf
mov
pop
test
call
imul
adc
daa
cli
test
test
xor
mov
cmp
lock
imul
je
dec
inc
sbb
imull
gs
xchg
loop
jl
cltd
xchg
out
add
cmovs
cmp
cmp
jae
pop
mov
fwait
push
enter
pusha
gs
inc
xchg
test
out
popa
sbbl
dec
fidivrs
mov
cmpsb
sti
jmp
popf
sub
outsb
and
xchg
lods
mov
push
xchg
xor
pop
out
mov
stc
sbb
mov
sbb
in
ret
sbb
rclb
pop
mov
add
xor
popa
lock
xor
aad
lcall
hlt
popf
pop
sarb
aaa
xlat
xor
dec
lcall
inc
loop
js
mov
cmp
cld
pop
mov
stos
shll
adc
insl
test
push
cmp
insl
subl
imul
inc
mov
pop
xchg
je
mov
es
dec
dec
nop
test
rcll
push
jle
pop
sub
aad
lods
xor
sbb
mov
jmp
sti
mov
mov
negl
mov
xlat
icebp
jmp
int
aam
fcomp
and
outsb
mov
mov
push
pushl
jl
fistl
addl
jno
pop
fdivrl
sbb
jnp
cltd
cltd
mov
xor
scas
push
sahf
je
adc
push
addr16
xor
mov
pop
mov
sahf
cmc
invd
inc
mov
mov
jmp
roll
jne
loop
hlt
sbb
fwait
mov
sbb
into
icebp
test
jo
jge
adc
xlat
mov
xchg
mov
lds
aam
adc
xchg
loope
test
push
mov
inc
arpl
push
jno
js
cld
mov
rcrb
cmp
cld
jnp
lret
movsl
adc
enter
rcl
dec
les
xor
fimuls
addr16
faddl
cld
fwait
pushf
jg
inc
push
in
xor
mov
xchg
cs
pop
hlt
sbb
sub
leave
and
sarl
orb
test
mov
aad
xchg
movsl
loope
or
ja
xor
xor
inc
push
push
xor
xchg
testb
stos
leave
cmp
aam
inc
lea
xor
push
cmp
cmp
pop
push
xchg
imul
mov
fcom
push
xchg
jne
icebp
repz
push
dec
add
mov
in
pop
dec
jnp
mov
int3
sbb
xchg
pusha
int
fnstsw
cmpl
insb
dec
arpl
popa
push
imul
ss
imul
jb
mul
rclb
pop
pushl
ret
mov
mov
leave
fsub
pop
pop
imul
or
cmpb
out
les
rclb
std
mov
lret
sbb
shll
adc
sbb
flds
xchg
enter
dec
daa
out
sar
jle
inc
mov
jo
jp
push
mov
stos
pop
dec
mov
fsubrl
popa
add
rcll
test
xchg
add
testb
fwait
inc
pop
dec
aas
repz
cmp
loop
test
daa
mov
mov
mov
cwtl
inc
repz
inc
sbb
push
rclb
mov
cmp
call
cmpsl
sub
mov
and
pusha
aad
lret
movsb
dec
int
add
mov
xor
nop
inc
call
sbb
mov
sbb
call
adc
mov
push
shl
cmp
gs
ja
and
sub
dec
arpl
ljmp
mov
xor
sbb
mov
leave
sbb
sub
nop
lea
mov
imull
and
jno
sbb
mov
repnz
sbb
add
clc
sbb
lahf
out
lcall
sbb
leave
mov
jg
cmp
push
outsb
movsb
loopne
stos
popa
sbb
add
xchg
fstl
leave
mov
xor
push
push
push
out
lret
jo
jge
mov
mov
sub
popf
mov
dec
pop
push
sbb
loope
out
pop
imul
cs
jns
xlat
sub
mov
mov
xchg
stos
adc
add
js
cmp
repnz
xor
je
or
dec
mov
stc
pop
or
mov
mov
pop
jmp
shlb
inc
ljmp
mov
popa
sti
lret
lods
inc
mov
mov
cs
shlb
or
gs
data16
push
xor
add
call
test
pop
pop
mov
cwtl
pop
cmpsl
lahf
in
gs
inc
rclb
ret
mov
test
lcall
jbe
imul
push
std
imul
lds
adc
cmp
stc
mov
aam
std
pop
dec
nop
inc
fadds
data16
divl
adc
fistpl
pop
mov
xorl
jecxz
in
push
in
rolb
fcomps
sahf
cli
imul
and
pop
repz
xchg
push
fucomip
fwait
xchg
cwtl
loopne
mov
xchg
pop
test
sub
and
sub
je
inc
les
lea
frstor
inc
add
xchg
and
aam
xor
sub
cmp
pop
mov
jo
movsb
adc
adc
hlt
and
pop
enter
inc
lods
dec
cmc
jmp
ret
clc
shlb
sbbb
arpl
mov
sbb
clc
or
hlt
iret
leave
sbb
in
mov
mov
out
push
ret
sbb
inc
sahf
aam
cmp
aaa
jp
iret
xchg
xorl
hlt
xchg
nop
xlat
loop
roll
and
and
mov
mov
gs
lods
imul
mov
xchg
mov
lods
push
ficoml
xor
jl
mov
cmp
cmp
push
xchg
test
repz
mov
mov
enter
add
out
pop
call
or
imul
adc
add
bound
in
js
xchg
dec
std
mov
in
gs
pop
jp
add
inc
std
add
jne
mov
lock
out
in
xchg
lcall
iret
and
sbb
mov
xor
out
fdivr
outsb
lret
dec
fldcw
inc
stc
out
daa
shll
stos
fcompl
je
in
or
sti
fs
push
pop
xor
int3
stos
hlt
insb
cmpsl
cmp
scas
mov
mov
mov
mulb
cmp
dec
mov
jo
ljmp
in
mov
mov
inc
jns
sti
mov
int
pop
jmp
mov
inc
push
inc
pop
je
icebp
daa
mov
jecxz
stos
out
hlt
cmp
scas
aad
pop
xor
add
mov
add
imul
inc
mov
nop
andl
ljmp
add
mov
insb
call
mov
mov
mov
fiaddl
mov
sbb
cmc
mov
xchg
xchg
adc
leave
xor
pop
cmp
decl
inc
je
scas
fidivs
or
adc
push
hlt
cmp
std
cld
sub
pop
outsl
and
xchg
mov
pop
pop
adc
mov
hlt
mov
add
jge
in
pop
xchg
daa
sbb
xlat
or
mov
lods
jmp
out
ds
push
jle
lock
out
das
cli
sbb
cs
imulb
lret
hlt
or
fisttpl
and
in
add
cmp
loopne
push
inc
in
mov
or
pop
xor
mov
lret
add
je
add
sbb
push
fistps
cmpsl
test
mov
je
or
lret
and
cmp
int3
and
cmpsb
and
loop
pop
mov
sbb
inc
xchg
daa
cmp
dec
les
jg
pop
and
fdivrp
neg
sbb
lock
ja
pop
pop
daa
call
adc
das
or
in
adc
scas
jg
push
decl
pop
repnz
lahf
cli
sub
inc
mov
fnstsw
lahf
lock
cld
mov
xchg
fdivp
mov
mov
inc
inc
inc
cmp
test
outsb
ds
mov
push
shlb
xor
pusha
jmp
daa
push
push
mov
fsubr
jle
out
sahf
fcompl
xchg
sub
push
jbe
imul
mov
repz
aam
popa
mov
fidivrl
mov
movsl
dec
push
lea
jbe
lock
into
xchg
ja
ret
std
pop
ds
xchg
insl
pop
inc
mov
pop
inc
pop
adc
push
and
scas
addl
sahf
jbe
lahf
lret
shl
lock
bound
jno
scas
inc
lea
or
and
dec
out
push
bound
cmp
mov
push
scas
pop
test
insb
lock
insl
mov
jp
push
out
into
xchg
in
call
cmp
outsb
jg
and
inc
enter
dec
xchg
out
cmc
mov
ja
mov
or
dec
xchg
or
dec
mov
push
popf
jne
cmp
xlat
xchg
push
add
xchg
xchg
int
inc
dec
xchg
mov
cmp
sahf
mov
sub
test
xor
jb
dec
pop
push
cmpsb
dec
enter
out
xchg
fdivr
sbb
daa
out
mov
sub
mov
sahf
xchg
mov
or
in
dec
pop
cmc
popf
adc
xchg
aad
icebp
les
sub
pop
or
dec
js
cmp
clc
fidivl
mov
and
repz
mov
gs
mov
dec
push
out
mov
sbb
loope
xor
push
sbb
cmpsl
and
cwtl
mov
shll
pushf
xor
jmp
xchg
or
into
add
push
ror
dec
jbe
popa
xor
cmp
into
mov
mov
pop
xor
add
sbbb
add
sbb
ror
enter
xchg
mov
cmc
push
jne
leave
add
daa
enter
shrb
nop
testl
pop
jbe
cli
fsts
mov
mov
mov
cmc
pop
sub
jnp
cltd
scas
xchg
push
inc
stos
mov
jg
decb
int3
repnz
push
xchg
xchg
dec
dec
mov
fwait
mov
iret
imul
shlb
xchg
lods
push
dec
andb
mov
popf
push
dec
and
cmpsl
fidivrl
jne
inc
push
call
loopne
pop
stos
stos
jns
aaa
jae
rorb
loop
mov
mov
outsb
fldcw
adc
movsb
jno
hlt
sub
call
in
xchg
ficoml
adc
mov
sbbl
or
fildll
pop
js
mov
lret
cmp
push
movsl
movsl
sbb
push
mull
flds
int
or
adc
test
pop
ret
jnp
stos
add
xchg
mov
mov
int3
stos
sub
adc
in
pushl
push
sub
pop
mov
cmp
xchg
mov
sub
popf
ret
repnz
pop
lahf
inc
and
jo
vmaskmovdqu
shl
push
pop
ja
jl
lahf
or
cmp
add
das
cmpsb
dec
lock
jbe
outsb
push
js
lahf
push
out
int
cwtl
dec
xchg
push
mov
and
jo
mov
fcomip
add
adc
sub
xor
decb
mov
enter
pushf
cwtl
and
push
mov
or
test
ja
xchg
loope
sbb
fisttpl
insl
jbe
loope
shl
fdivr
sbb
mov
ss
cmpsb
adc
ret
aas
cmp
cmpsl
jecxz
push
add
mov
fimull
push
ret
or
test
mov
cmp
xchg
aad
push
fstl
xchg
es
fldl
jnp
mov
out
pop
in
fsts
outsb
ljmp
xor
dec
lret
in
leave
add
sti
arpl
adcb
lods
aad
loope
inc
xor
xchg
or
xor
fsub
mov
aam
xchg
movsl
mov
dec
cmpb
sub
pop
push
sub
mov
out
xor
insl
das
push
and
mov
loopne
in
mov
cld
sar
add
and
jns
xchg
jne
dec
xchg
mov
pushl
jge
pop
aam
out
gs
mov
sti
jno
stos
imul
lret
lahf
jmp
fildll
fs
mov
insl
cmc
test
xchg
sub
inc
cmp
sbb
mov
mov
cmpsb
cmp
out
filds
dec
ljmp
test
xchg
xor
sarb
jbe
mov
dec
cmp
push
lds
inc
inc
push
cmp
and
out
inc
push
hlt
movsl
xchg
mov
push
inc
adc
mov
adc
or
outsl
jne
std
fsubrl
push
je
leave
aaa
repnz
inc
push
insb
add
cmpsb
add
mov
dec
xor
mov
push
cmp
stos
je
sub
dec
adc
jb
iret
sbb
iret
movsb
jecxz
jb
popa
cmp
xor
int3
dec
push
pop
jg
jmp
ds
adc
loop
push
push
ror
lock
int
add
inc
mov
test
enter
out
in
xchg
pop
push
loopne
lods
lea
and
aam
negl
add
loop
fcomps
lods
stc
idivl
negl
cld
push
mov
mov
mov
push
add
stos
jae
push
dec
arpl
bound
lock
scas
ljmp
adc
rcll
pop
and
add
dec
jno
jl
arpl
ror
xor
sub
pop
jge
lock
outsb
push
xchg
imul
or
mov
jnp
pop
aam
fs
inc
shlb
fimull
sahf
inc
push
xlat
xorl
dec
inc
es
aam
cmp
mov
test
xor
xor
cmpl
jb
cmp
sub
and
imul
ss
xorl
gs
jo
cmp
pop
sub
imul
fiadds
xlat
data16
enter
sahf
mov
ss
aam
pop
dec
les
xlat
in
int
andb
cld
ret
cmp
ss
sbb
push
adc
dec
mov
jne
xlat
adc
sub
stos
repz
cmp
popf
popa
xchg
mov
or
xor
test
xchg
mov
call
popa
sub
sub
jmp
ds
pushf
mov
pushf
mov
push
push
cltd
adc
lods
jl
mov
xor
mov
mov
popf
add
pop
ja
xlat
mov
inc
sub
nop
test
pop
or
je
xor
pop
cmp
mov
jecxz
test
mov
add
sub
and
sub
add
insl
pop
int3
lcall
cwtl
xchg
xor
inc
repz
lods
movsb
dec
jp
adc
popa
xchg
mov
jge
mov
push
sub
push
sub
bound
sbb
leave
mov
mov
int
fmulp
mov
data16
adc
mov
aas
in
icebp
lret
dec
daa
sarl
xchg
adc
add
pop
jb
dec
pop
iret
stos
fiadds
ss
jmp
out
aam
jmp
push
insl
mov
cmp
repz
xor
mov
das
out
in
mov
out
sub
jo
mov
jp
mov
nop
popf
xlat
fcmovnbe
test
pop
dec
arpl
adc
jle
xchg
sti
imul
jns
inc
es
pop
lsl
mov
sbb
and
das
das
inc
mov
pop
inc
xchg
dec
mov
mov
mov
cmp
mov
clc
sbb
shl
sti
push
push
xchg
in
mov
and
add
dec
mov
insl
xchg
inc
and
lds
pop
fsub
push
je
push
adc
outsb
movsl
jg
push
aad
mov
rcrb
xor
enter
imul
ja
and
cmc
mov
cmpsb
mov
inc
pop
sbb
push
sub
cmp
push
je
adc
das
js
mov
fmuls
inc
add
and
std
lods
pusha
insb
shll
cmp
repz
mov
pop
mov
movsb
cltd
test
out
jmp
dec
ss
fwait
pop
test
filds
push
ror
fstps
ja
outsl
jg
jp
addr16
sbb
repnz
aad
rep
pop
imul
sbb
xlat
xchg
cmpsl
es
setb
iret
adcl
jb
pop
jb
jmp
addb
test
jge
out
add
jnp
xchg
pusha
pushf
cmp
cli
inc
loop
cmp
xor
adc
push
push
adc
stos
lret
mov
dec
sbb
rclb
in
jp
adc
cs
stos
pusha
push
pop
test
mov
bound
cli
scas
jb
jne
jecxz
mov
sbb
in
stos
pop
xor
push
repnz
cmp
int
rorl
mov
mov
mov
mov
xchg
cli
cmc
push
sub
les
inc
mov
mov
rcll
in
cmc
repnz
jbe
adcb
xchg
fisubs
cld
jle
das
repnz
aam
push
fisttpl
mov
fs
repnz
pop
and
push
xor
adc
stos
jmp
daa
and
adc
stc
les
icebp
inc
ret
or
test
dec
ficompl
cmpl
imul
test
insl
gs
xchg
lock
mov
pop
dec
stos
aad
hlt
ljmp
iret
outsb
fisttpl
out
jns
notb
jno
scas
ror
jg
adc
xchg
in
xor
mov
pop
scas
das
cmp
out
aaa
aas
stos
lods
ja
test
adc
adc
xor
fcmovu
or
xchg
aaa
xchg
addr16
cmp
icebp
out
popf
mov
pop
add
adc
or
xchg
aad
mov
lock
test
mov
pop
movsl
pushf
movsb
in
pop
fnstsw
call
test
clc
push
add
sub
fcoml
cs
push
jg
out
jnp
out
fidivl
add
ret
mov
test
sti
fs
cmpb
mov
add
pop
mov
jmp
lret
iret
add
cltd
push
xchg
scas
adc
push
out
outsl
jns
add
sti
mov
fmull
filds
enter
sub
mov
mov
push
inc
jnp
rcl
jl
scas
add
sbb
fisttpll
adc
mov
fsub
in
in
mov
sub
ret
sbb
clc
or
lods
push
test
jmp
adc
popa
dec
ja
xor
pop
in
pop
test
push
mov
test
sub
adc
int
subl
mov
xlat
xchg
lret
mov
fwait
negl
xchg
adc
mov
inc
insb
push
mov
push
mov
inc
dec
jne
aam
ja
loopne
out
adc
or
mov
and
fsubrp
lea
xchg
mov
jne
mov
pop
mov
pushf
xlat
pop
jmp
mov
fldl
dec
in
pop
sub
fstps
gs
fbstp
lahf
ss
mov
mov
insl
pop
dec
mov
sti
sub
in
imul
in
and
push
aaa
mov
lahf
shrb
mov
inc
add
lods
cwtl
jno
mov
ljmp
xchg
sub
data16
js
frstor
test
stc
jne
fisttpll
xlat
or
cmpsb
mov
dec
xchg
push
push
pushw
in
mov
xchg
movsb
loopne
push
sub
push
push
cld
dec
jbe
in
mov
push
jle
push
daa
movsl
and
lea
or
mov
mov
lret
lret
scas
ss
pushf
test
repz
xor
pop
call
sahf
into
mov
or
cmp
and
cld
imul
jle
mov
mov
jno
iret
test
fisubrl
push
lret
dec
popf
xlat
stos
push
sbb
les
repz
aas
shrl
cmp
pop
ss
lock
movsb
and
push
ss
mov
mov
mov
add
dec
enter
xor
in
jb
mov
sahf
cli
pushf
lahf
jge
clc
lods
pop
mov
mov
dec
cld
pushf
mov
jge
into
push
xchg
sub
cmp
push
mov
lods
cmc
jns
sbb
fdivs
push
inc
daa
cwtl
push
xchg
mov
lret
jns
jno
nop
adc
cwtl
lock
jg
push
ficoms
add
sub
ficompl
mov
test
jne
pop
jmp
jecxz
inc
xor
or
xor
fists
pop
lret
hlt
mov
xchg
pop
in
pop
push
and
cltd
rorb
xchg
scas
testb
push
mov
mov
ljmp
dec
lcall
cmp
mov
push
xchg
out
js
outsl
imul
jae
lds
ss
mov
jl
mov
push
pop
xor
cmp
mov
and
mov
aam
mov
test
rcrl
dec
xor
xor
and
test
pushf
mov
fcmovnu
cmp
enter
inc
inc
orl
xor
loop
xchg
mov
test
and
lret
out
loop
mov
push
ret
mov
dec
loope
faddl
out
popa
and
mov
add
mov
sbb
insb
adc
cltd
stos
outsl
pushf
repnz
dec
lock
xchg
es
or
xchg
and
stc
pop
xor
cmp
push
cwtl
cltd
inc
and
imul
jno
and
lahf
ror
jge
jo
dec
mov
in
xor
and
icebp
push
jle
mov
jle
xchg
sub
leave
outsl
mov
out
sbb
inc
push
leave
cmc
scas
int
mov
sahf
cmpsb
imul
add
inc
mov
adc
fwait
cmpsb
int
je
repnz
and
push
pop
aas
push
ljmp
inc
daa
and
out
jmp
or
test
dec
andl
pop
add
sahf
jb
jmp
subb
mov
dec
inc
mov
inc
dec
add
adc
ss
nop
lcall
mov
sti
and
xor
jp
push
mov
dec
mov
cmp
push
jne
inc
pop
inc
fsubl
ret
xchg
and
lock
test
sbb
push
jmp
les
dec
inc
pop
repz
mov
mov
ljmp
add
iret
int
pop
in
mov
adc
shrb
xor
push
or
and
push
orl
ljmp
mov
cmc
cmp
and
call
fdivrl
cmp
clc
std
mov
push
sbb
adc
ja
add
and
add
mov
mov
lahf
call
std
and
js
ds
mov
jg
jmp
in
xchg
loop
lret
lret
xchg
popa
mov
or
xorb
enter
dec
loop
sub
sbb
pop
mov
push
lcall
dec
mov
pop
and
ljmp
or
popl
scas
jae
out
ljmp
nop
cmp
shlb
popa
xor
aam
adc
mov
xchg
test
mov
sbb
jmp
pop
dec
outsl
fnstcw
ljmp
xchg
jns
scas
dec
jl
rclb
adc
pop
outsl
and
jbe
adc
fisubrs
mov
jne
xchg
adc
add
sub
lcall
pop
pop
js
dec
sub
add
xor
mov
sbb
pop
push
xchg
mov
lcall
leave
mov
jns
mov
fisttpl
xor
aam
inc
jae
scas
xchg
lahf
jb
int3
scas
inc
xor
ret
add
mov
test
test
xor
or
insl
push
popf
test
cmp
push
add
add
outsl
dec
dec
adc
or
orl
pushf
insb
and
and
cmpsl
jle
mov
addr16
stc
dec
lret
xchg
lcall
jns
cmc
mov
add
in
scas
pop
aas
sbb
ljmp
push
rcll
xchg
nop
add
xlat
int
mov
nopl
cmp
inc
pop
cmp
lock
xchg
mov
enter
fdivrl
or
jne
ljmp
dec
xlat
jb
jmp
adc
pop
faddl
cmp
xchg
adc
jbe
xlat
or
fildll
ds
cmp
push
gs
addr16
lods
sub
ret
je
and
cmp
in
or
jle
jmp
lock
bound
es
cwtl
adc
sti
sub
fwait
cs
xchg
dec
rorl
sahf
jne
cld
xor
add
in
xor
subl
out
test
jns
sti
mov
and
fdivrp
sub
iret
mov
lahf
jbe
mov
fldcw
test
mov
jb
inc
bound
not
dec
jbe
jne
sub
scas
xchg
adc
mov
es
mov
arpl
xchg
lods
xchg
mov
xor
mov
adc
pop
sub
dec
jne
movq
pop
mov
adc
repz
int3
mov
mov
ficoml
int3
jg
lods
add
cmp
pop
out
or
xchg
xor
fidivl
loop
aad
js
jp
lds
arpl
xor
les
mov
jno
cwtl
sbb
cmc
jmp
adc
stc
cmpl
sub
sub
inc
scas
xor
push
push
xor
mov
and
aas
std
mov
xor
pmulhw
add
dec
xchg
pop
data16
orl
sahf
aam
mov
push
test
mov
js
out
loop
pop
outsb
lret
insl
cltd
test
out
cld
bound
mov
xor
jle
push
gs
mov
inc
mov
stos
jb
jge
mov
test
or
sub
jl
les
into
dec
sbb
popa
jo
push
sbb
daa
adc
mov
out
fists
push
mov
fnstsw
mov
test
in
out
jne
loope
mov
enter
inc
or
rcl
add
faddl
movsb
nop
fisubrl
aad
in
daa
or
jge
or
insb
je
pop
xor
in
cmp
inc
adc
in
xor
dec
cltd
push
aaa
sbb
adc
cmp
bound
call
ss
add
pop
xor
mov
mov
push
movsb
ret
dec
sarb
lahf
xchg
cmp
out
xor
cmp
and
jmp
mov
xchg
push
test
sub
mov
push
mov
jno
ja
push
cmc
and
adc
aaa
mov
scas
xor
dec
jae
or
mov
sbb
sub
out
inc
dec
sbb
push
add
mov
mov
mov
loope
mov
jmp
das
lds
mov
cmp
jnp
mov
sbb
clc
mov
add
insl
loope
lahf
int3
pop
imul
push
divb
dec
mov
lahf
mov
or
aad
add
jnp
fistl
mov
movsl
sbb
shrb
gs
arpl
add
cmpsl
pop
push
jns
cmpsl
cmp
iret
xchg
xrelease
mov
and
cltd
pop
mov
sbb
sarb
sbbl
aam
popa
loope
xor
jmp
scas
mov
pop
push
jae
lcall
mov
push
ja
dec
add
mov
ss
inc
movsb
mov
push
aad
push
xchg
mov
loopne
add
mov
jge
mov
or
popf
lret
inc
and
frstor
jb
loope
xor
outsl
adcl
addb
pop
xlat
movsl
cmpsl
loop
cs
lds
pop
add
jp
or
lods
outsl
ficoml
cmc
pop
jp
xchg
dec
xchg
pusha
mov
shrl
pop
pop
mov
cmpsl
lods
ss
xchg
xchg
dec
into
pusha
sbb
pop
jge
adc
inc
mov
xchg
adc
mov
add
pop
cltd
sbb
lods
test
pop
jecxz
cltd
inc
pushf
xor
ret
addr16
xchg
sbb
es
div
cs
psllw
repz
insb
and
pcmpeqw
pop
sub
shlb
dec
cmc
stos
mov
xor
aaa
lret
add
push
mov
jo
testl
mov
ss
mov
push
or
gs
dec
sbb
push
cmp
pop
dec
dec
dec
je
cmpsb
test
fstpt
repnz
mov
shlb
mov
lret
int
repz
jnp
cmpb
mov
mov
xchg
inc
push
add
call
pop
lea
shll
mov
sti
sub
es
pusha
push
fldt
or
lods
mov
daa
insb
sub
sub
movsl
enter
mov
enter
push
ficoms
cs
and
adc
outsl
inc
aas
pop
sbb
lret
mov
add
cmp
mov
pusha
sti
cmpsl
je
cmp
dec
repnz
pop
sbb
ror
sbb
testb
mov
les
push
enter
adc
push
push
fnstsw
lea
je
jecxz
int
imul
adc
add
xchg
pop
xchg
enter
inc
imul
mov
cmp
ja
cli
outsl
dec
cmpl
xor
rorl
fs
out
ret
les
sbb
nop
sbb
add
xchg
jne
ja
movsb
push
outsl
cmp
in
cli
push
pop
out
sub
sub
jbe
pop
mov
fwait
rcll
bnd
jbe
shll
inc
mov
dec
xchg
test
fs
cmpsl
das
rcrl
ja
push
dec
mov
inc
gs
enter
push
adc
sub
pop
pop
cmc
inc
mull
lock
sar
lock
jbe
stc
sub
xor
test
fs
pop
addl
fdivrl
push
sub
imull
les
andb
icebp
jns
jecxz
cmc
ja
lret
or
imul
sub
lcall
dec
jbe
loopne
add
mov
out
das
mov
dec
movsb
xchg
lret
imulb
jb
or
aam
jp
mov
jbe
mov
jb
xchg
fldcw
and
arpl
fprem
and
sub
cltd
lds
xchg
and
inc
enter
in
jp
dec
movsl
cmc
mov
loopne
dec
pop
jecxz
rorb
mov
aam
dec
jge
cli
ljmp
xor
sub
sti
repz
repnz
fs
push
or
inc
xor
and
jecxz
out
pop
xchg
test
inc
jns
or
add
adc
scas
pop
int3
mulb
jae
sbb
outsb
rorl
nop
in
leave
hlt
xor
mov
std
xor
inc
mov
into
mov
xor
dec
push
cs
pop
pop
popa
mov
inc
imul
hlt
jne
adc
in
shll
and
fldt
inc
add
jno
push
inc
scas
int3
out
and
inc
je
adc
push
movsl
or
pand
sbb
sbb
inc
xchg
mov
mov
jns
outsb
das
imul
loop
cmp
hlt
cmp
cmp
int3
fs
repnz
push
push
fmuls
and
pop
frstor
xor
pushf
add
call
popf
out
in
add
dec
aaa
mov
or
in
mov
cvtdq2ps
out
lock
lret
inc
bnd
cmp
into
or
xor
test
push
mov
cs
sub
push
mov
sbb
jmp
aas
loop
addr16
push
pop
xchg
cvtpi2ps
out
hlt
or
mov
divl
out
lds
aam
decb
or
jno
sub
call
xor
ja
in
pushf
mov
pop
xor
add
mov
inc
and
pusha
push
dec
jl
nop
dec
xchg
out
lcall
xchg
repnz
fcoms
aaa
iret
mov
dec
xchg
call
ficompl
ja
pusha
pop
fidivrl
mov
testl
test
lahf
stc
jp
or
cmpsl
stc
ljmp
jl
dec
jae
add
jge
mov
add
out
inc
jecxz
leave
sbb
jle
in
push
adc
fwait
fwait
lock
outsb
popf
stc
pop
xorb
push
inc
and
cmp
jns
jmp
pop
adc
movsb
test
ss
jae
not
outsl
mov
ficoml
adc
mov
jo
fldl
iret
or
imul
lea
mull
popf
leave
adc
shrl
test
xor
outsl
fadd
push
dec
mov
add
iret
repz
adc
add
push
cmpsb
ja
fidivs
inc
imul
ds
mov
rol
fcoml
push
adc
fistps
mov
test
add
lods
lock
stos
roll
cmp
sbb
test
or
sbb
and
cwtl
mov
mov
ret
mov
push
fiaddl
push
sbb
rolb
mov
xor
dec
mov
add
push
adc
adc
aaa
xor
push
cld
fucomi
fadds
jge
or
add
pop
push
mov
mov
mov
push
fs
jbe
lahf
jmp
es
rcrl
imul
out
das
or
leave
cwtl
adc
into
inc
clc
inc
ja
out
sub
jg
loopne
push
cltd
adc
outsl
cld
xchg
xchg
sub
pop
inc
mov
dec
or
iret
push
into
pop
and
std
sbb
jmp
jle
nop
cmp
popf
dec
pushf
mov
mov
adc
inc
call
mov
sub
cmp
movsb
mov
mov
mov
push
cmc
test
gs
ss
mov
xor
inc
add
mov
inc
adc
fbstp
mov
gs
xor
lret
mov
adc
jg
jge
mov
jp
test
shrl
ljmp
xchg
loopne
push
xchg
lea
pop
pop
mov
push
sti
cmp
loopne
add
loopne
ret
roll
fisttpl
mov
jecxz
outsb
sub
mov
hlt
jno
outsb
out
lret
xchg
jecxz
jo
xor
decb
pop
xchg
mov
jns
sti
inc
add
js
je
cmp
sub
jl
scas
and
in
sub
roll
inc
pop
stc
jmp
in
in
jnp
adc
adc
jno
mov
cmc
int
push
pop
js
xor
aaa
outsl
shrl
xor
nop
mov
ds
push
push
lods
fs
sbb
lret
movhps
and
jecxz
ret
call
push
ret
sbb
arpl
hlt
repz
cwtl
push
xchg
add
add
stc
inc
clc
mov
jnp
mov
jne
inc
scas
cwtl
iret
xor
xchg
movsb
std
mov
and
xchg
repnz
and
iret
repz
mov
pusha
pop
push
lods
jl
mov
sbb
push
js
xor
in
jne
fimull
jbe
mov
in
in
into
ret
xor
in
stos
xchg
rcll
jl
gs
mov
stos
es
fistps
test
and
pop
mov
sahf
or
sub
outsb
out
dec
mov
je
into
pop
xchg
arpl
out
leave
pop
jge
test
pop
cs
xchg
gs
mov
xor
cltd
jp
loopne
cli
jge
repnz
cmp
mov
push
cmc
xor
pop
out
filds
mov
mov
add
xchg
sub
call
imul
mov
loope
mov
pop
shll
ficoml
pop
mov
mov
lods
xor
fisubs
incb
pop
pop
mov
fistpll
add
pop
int
pop
dec
test
and
jmp
push
inc
add
cwtl
mov
cmp
popf
adc
test
mov
dec
sarl
cmp
sub
mov
and
inc
subb
pop
push
push
push
loopne
sub
out
enter
adcb
test
movsl
dec
movsl
psllw
rcrb
mov
test
and
mov
cwtl
sub
pushf
mov
imul
popf
ror
or
xorl
loopne
or
aaa
sub
sbbl
xlat
push
mov
mov
mov
out
mov
jle
in
dec
decl
pop
mov
adc
nop
inc
xchg
in
sub
loope
mov
and
pop
leave
mov
push
ret
cmpsb
add
xchg
repz
out
lods
cmp
inc
bound
mov
jbe
repz
sbb
xor
jno
das
pop
inc
dec
inc
xor
je
cmp
mov
and
dec
fwait
and
or
stc
rcrl
scas
mov
pop
clc
lret
cltd
imul
mov
and
dec
sbbl
lods
mov
inc
leave
mov
je
fs
icebp
dec
inc
pop
aaa
mov
sub
jg
mov
outsl
mov
and
insb
js
push
xchg
pop
lds
iret
add
xchg
subl
lea
jp
dec
test
fmul
jge
ret
mov
insb
bound
sub
mov
push
add
mov
jo
jne
pop
jle
or
adc
mov
inc
out
mov
mov
jns
idivl
aam
shlb
pop
sbb
mov
dec
pop
mov
mov
popf
imulb
or
inc
or
mov
cmpsb
cmpsl
adc
lcall
add
add
shlb
add
mov
sub
sbb
and
andb
mov
and
inc
iret
cmp
sbb
test
inc
sub
dec
adc
iret
daa
xor
stc
mov
call
lea
cmp
xchg
addr16
mov
aas
hlt
outsl
lcall
hlt
mov
pop
in
mov
cli
ja
fsubs
jo
cmp
gs
les
mov
mov
test
jbe
fildll
adc
mov
xor
jb
js
xchg
cld
inc
mov
pop
push
mov
xor
call
pop
xchg
out
mov
xchg
push
imul
ds
clc
js
int
fwait
scas
jg
enter
sub
lds
outsb
xor
add
jnp
jge
or
pop
js
jns
jns
in
ret
inc
adc
mov
adc
jle
pop
sbb
mov
pop
mov
ret
shr
arpl
inc
inc
inc
cmpsl
lea
jns
mov
icebp
movsl
addr16
pop
repz
xchg
cmp
in
mov
fcomps
adc
adc
insl
mov
ljmp
jmp
xor
dec
pusha
mov
add
stos
shll
mov
mov
mov
les
bound
hlt
ret
and
push
adcb
lret
adc
negl
xor
data16
out
sub
in
jl
push
mov
call
add
sub
sub
inc
and
push
lret
iret
mov
test
loop
je
or
xlat
movsb
cld
faddl
xor
xor
or
inc
adc
sbb
mov
sbb
mov
jae
adc
sbb
pop
sub
in
inc
in
icebp
dec
or
negl
dec
add
scas
ds
mov
std
sub
jne
test
sbb
dec
cmp
ret
xchg
pextrw
jl
push
sbb
hlt
pop
mov
sbb
and
mov
ficompl
daa
pop
out
jnp
fwait
jmp
dec
sub
imul
pop
mov
pop
push
mov
nop
loopne
repnz
mov
or
or
cwtl
sahf
fiaddl
add
fdivr
jle
adc
push
cmp
cmp
mulb
lahf
int3
les
sub
enter
cld
adc
out
jne
insb
jno
push
cmpsb
xorb
out
cmp
adc
es
pop
lret
imul
push
insl
addr16
push
shl
xor
out
and
mov
pop
lds
jne
decl
mov
aad
add
jb
shl
sbb
jo
cmp
dec
or
rcrb
or
in
jno
test
shr
xor
push
mov
lret
div
sub
test
and
pop
scas
sub
test
dec
and
jno
lods
pop
pop
inc
fisubl
arpl
ljmp
lret
xchg
xorb
stc
mov
mov
pop
sub
push
stc
pop
gs
jns
aas
aaa
cs
shrb
push
pop
hlt
pop
dec
sti
sbb
loop
leave
jmp
xchg
imul
lods
mov
into
sbb
xor
or
mov
mov
inc
xchg
push
iret
xor
mov
loope
ds
loope
pop
xor
lock
data16
or
push
mov
xchg
inc
dec
movhlps
mov
dec
enter
gs
test
add
fadds
in
repz
push
rolb
mov
ds
fucomi
mul
cmp
sub
cmpl
rorb
mov
mov
mov
add
sub
mov
rcrb
mov
out
lock
loopne
sbb
fmul
aad
lock
dec
shr
gs
jo
add
ret
call
loop
pusha
jmp
lret
inc
xchg
pop
ljmp
inc
jnp
jl
jl
jnp
pop
mov
or
fistl
fwait
aaa
out
push
pop
adc
jle
adc
lds
adc
mov
aam
adc
jo
hlt
mov
lahf
movsb
stc
lcall
ja
ret
lods
dec
pop
ja
in
cld
add
mov
or
mov
sub
inc
cmp
pop
and
aaa
or
icebp
inc
add
in
fs
or
sub
out
cmc
nop
mov
push
ret
negb
clc
fimuls
mov
int3
push
adc
enter
or
rcll
adc
pop
inc
add
sub
mov
daa
push
cmpsl
enter
pop
add
lds
aam
div
cmp
mov
lret
push
jae
mov
orl
dec
bsr
jnp
loope
push
dec
dec
and
cmpsb
xor
push
fistpll
out
cmpsl
pop
int
pop
add
sti
sbb
int
lea
fwait
xor
pop
xor
aas
adc
leave
add
xor
mov
cwtl
ss
clc
add
jbe
add
cmpsl
add
jp
sbb
push
cld
aaa
incl
iret
test
sahf
scas
cmp
mov
pop
inc
adc
mov
pushf
add
mov
pop
hlt
cmc
stc
mov
and
mov
xor
das
or
int3
push
popa
mov
insb
icebp
jle
or
stc
imul
and
dec
mov
inc
imul
adc
movsl
leave
shr
jnp
xor
mov
push
mov
xor
cmpsb
cmp
xor
adc
loop
add
imul
xchg
mov
push
xor
fbstp
mov
mov
fcomip
jb
lods
xlat
sbb
cs
outsl
flds
sti
mov
mov
cli
nop
jno
mov
inc
cmc
mov
mov
call
mov
push
out
jecxz
mov
cmp
and
fildll
sub
jg
inc
mov
dec
testl
outsl
ret
decl
scas
icebp
mov
mov
movb
icebp
mov
pop
dec
out
fsubrp
movshdup
and
jno
test
or
popf
in
lcall
xlat
jp
insb
test
shl
cmp
ss
mov
xchg
inc
cmp
inc
sahf
std
outsl
sub
pusha
shlb
subb
push
jns
loope
add
out
lods
mov
adc
xor
das
lret
into
inc
or
ds
dec
subb
and
and
rolb
pushl
mov
sub
ret
pushf
in
sub
movlps
shll
sub
sbb
mov
xchg
pop
hlt
imul
int3
push
jns
sti
push
roll
fucomp
dec
in
cmp
div
dec
outsb
test
or
xchg
and
inc
jl
mov
testb
lock
or
insb
inc
cltd
pop
mov
dec
ud1
pop
mov
stos
cwtl
cmpsb
andnps
adc
sbb
ljmp
cmp
or
mov
xchg
icebp
or
push
movsb
jno
adc
push
xchg
inc
jns
jns
mov
push
mov
add
xlat
xor
cld
inc
pop
sbb
cmc
in
add
movsl
xor
sub
and
push
mov
fldenv
sbb
into
cs
sbb
cmp
or
out
pop
pop
insb
or
mov
lcall
movsb
into
sub
test
cs
xchg
xor
dec
cmpb
lock
inc
cmpsb
outsl
adc
add
cmpsl
xor
cwtl
sub
jb
mov
push
push
outsl
jno
out
and
push
ljmp
jecxz
and
mov
mov
in
add
jle
int3
pushf
xor
dec
in
mov
icebp
js
xchg
xchg
push
pop
inc
fildll
mov
out
mov
sbb
inc
rcl
xchg
out
idivb
add
clc
test
fidivrl
mov
push
jns
dec
or
adc
add
pushf
push
push
pop
gs
insb
mov
sub
jecxz
cwtl
mov
sub
scas
add
cli
int
rol
sbb
fldt
and
sub
cld
inc
fwait
jb
stos
test
jae
movsb
fldcw
mov
cwtl
mov
ret
jp
aas
adc
mov
cmp
xorb
mov
xor
pop
cmpsb
dec
lods
loopne
mov
push
rcrb
jbe,pt
out
sbb
mov
ret
push
jae
adc
sar
out
sbb
pop
and
mov
pop
xchg
sbb
jecxz
xor
inc
outsb
dec
out
adc
inc
pop
jne
js
mov
mov
pop
ss
ret
mov
xchg
loop
push
into
jmp
leave
dec
jecxz
rolb
mov
add
jb
mov
adc
push
mov
jo
imul
scas
je
mov
lock
mov
or
jbe
add
sarb
popf
cmp
cmc
mov
push
jns
repnz
xor
lret
out
addr16
scas
xor
enter
lret
call
or
rcrl
cld
xchg
jb
shrl
push
rclb
fsub
jecxz
lret
lds
setns
icebp
sti
cltd
shl
mov
cwtl
push
xor
jnp
jmp
adc
cmpsb
addr16
or
roll
or
inc
in
push
scas
mov
xchg
cmovp
add
sub
cmpltps
jp
inc
xor
repnz
test
sarb
dec
aad
lret
pop
push
cmp
add
mov
pop
or
mov
dec
mov
data16
std
mov
or
test
mov
pusha
lds
sub
cmp
lret
xchg
adc
add
test
shlb
mov
popaw
clc
adc
ds
adc
popa
adc
out
push
cwtl
xchg
inc
inc
push
cmp
sub
pop
repnz
inc
testl
jo
leave
mov
mov
push
adc
push
insb
bound
cmp
xchg
loop
or
inc
xchg
std
jne
ret
xor
mov
lcall
dec
and
sub
xchg
out
movsl
and
repnz
ss
sub
xchg
jmp
lods
adc
mov
adc
push
jg
scas
rdmsr
pop
inc
in
out
fstl
ficompl
in
cwtl
jl
insb
sub
pushf
into
repz
out
cs
push
popf
push
lret
mov
dec
mov
fisttpll
jl
jnp
repz
dec
jecxz
testb
jmp
cli
sub
cli
sub
rorb
or
add
push
stos
jb
rcr
stos
mov
and
fs
jno
jne
insb
popa
imul
adc
and
mov
ret
jge
cmp
in
outsb
xor
cltd
and
sub
je
jbe
and
sub
aad
or
inc
call
jmp
adc
into
movsb
lret
ret
cltd
iret
cmp
dec
lret
aam
cmp
add
jecxz
jecxz
pop
mov
mov
hlt
fwait
loop
jle
sbb
outsl
lds
aaa
popa
push
jmp
scas
xchg
lock
inc
std
mov
shlb
sub
mov
leave
rcrb
lret
xchg
sbb
leave
ss
fildll
sbbl
ret
ret
push
mov
aad
inc
push
into
inc
std
dec
cmpl
lahf
sub
dec
lahf
jo
vxorps
jecxz
aas
inc
xchg
xor
mov
movsb
arpl
xor
imul
sti
push
ja
mov
in
xor
outsb
insl
mov
fs
je
ljmp
lods
mov
je
out
sub
pop
dec
popf
push
sbb
sbb
add
mov
and
mov
setp
mov
fnsave
popl
mov
scas
out
js
inc
fcmovu
lret
ret
pusha
lahf
mov
mov
xor
in
dec
or
test
aas
imull
jo
pop
or
gs
bound
xchg
stc
out
mov
cmp
repz
adc
xchg
cmp
insb
cmpsl
call
stos
and
out
cmc
or
ljmp
fisttps
mov
pop
push
into
out
int
adc
jb
jb
dec
xchg
pop
cmp
in
inc
out
mov
fs
fwait
cmp
lods
mov
pop
jno
fsubrl
inc
push
xor
lret
mov
outsb
mov
insb
shr
jb
adc
loopne
test
outsl
jp
cmp
mov
cli
xor
mov
push
or
sbb
outsl
cs
inc
jne
es
lcall
pushf
dec
add
inc
loopne
mov
fiaddl
lods
call
outsl
sti
fwait
iret
or
lods
sub
cmp
push
mov
icebp
scas
or
test
jle
sub
shlb
pop
dec
outsb
and
idivl
sarl
fadds
push
xchg
mov
fimull
test
jg
push
jo
pop
ret
clc
ljmp
imul
jne
push
cli
mov
dec
sub
lret
inc
inc
push
inc
or
push
dec
in
cwtl
xchg
mov
and
inc
add
inc
in
sub
negl
cld
xchg
int3
arpl
scas
sti
loop
out
test
js
movsb
inc
mov
enter
and
call
xchg
iret
ficoms
shrl
leave
ja
std
cld
bound
add
xchg
pop
push
push
es
jecxz
leave
cld
and
hlt
lahf
add
hlt
popa
fisttpll
stos
push
sbb
sub
jnp
xchg
movl
mov
xor
repz
bt
cmp
sub
dec
and
mov
jns
movsb
inc
xor
pop
ss
aam
xor
test
call
rorl
rclb
pop
cli
cmp
mov
addr16
arpl
mov
ret
js
mov
cmp
mov
jmp
in
pop
aad
inc
pop
cmpsl
sub
testl
mov
popa
popa
mov
cmp
sarl
lods
int3
dec
mov
fwait
and
aaa
imul
out
or
sub
push
adc
and
dec
cmpsb
dec
fsts
fsubr
ret
jge
or
je
insl
xchg
dec
fimuls
insl
pop
dec
xor
xchg
in
xchg
push
jmp
xlat
dec
push
inc
push
cmp
mov
leave
or
inc
cs
sbbl
inc
rcr
int3
sub
inc
push
inc
lcall
mov
dec
jnp
arpl
jmp
adc
or
xchg
ljmp
jge
call
sbb
or
fs
cmp
popa
test
xchg
mov
sbb
inc
lea
add
mov
cwtl
mov
adcb
push
jg
add
adc
add
insl
xchg
xchg
cwtl
inc
mov
inc
sub
pop
les
cmp
mov
test
cmp
std
jp
fldl
test
mov
jae
cmp
lods
mov
mov
jmp
lds
lods
loopne
mov
jecxz
or
stc
lahf
repz
sub
push
jge
mov
ret
xor
cwtl
jp
sub
sub
jl
adc
mov
mov
adc
lcall
mov
mov
xor
out
jp
xor
adc
jl
cmpsb
push
pop
sub
push
stos
pop
push
dec
push
xor
loope
sahf
inc
aad
pop
jecxz
or
push
mov
and
dec
pusha
inc
insl
std
sahf
xchg
in
testb
sub
out
aad
nop
pop
addr16
cmc
mov
xor
sahf
push
stos
pop
cli
fcmovbe
scas
popa
sbb
pop
xchg
cmpsb
out
lock
aad
dec
out
inc
jl
negb
cmp
pusha
in
movsb
shr
stos
pop
aam
cmp
repz
les
inc
out
inc
jno
data16
loop
pop
js
insl
jns
inc
outsl
mov
jo
call
scas
and
into
inc
ret
cwtl
scas
daa
repz
iret
inc
adc
xchg
clc
xchg
cli
mov
add
xorb
outsl
mov
sub
in
add
add
fmull
push
mov
mov
push
mov
loop
sti
adc
das
in
not
xor
mov
lret
sub
ds
adc
mov
loop
nop
jns
enter
scas
dec
loop
in
push
stc
sti
sub
jae
adc
jl
aad
lea
add
iret
push
fs
insb
push
out
jno
ja
adc
into
out
aas
fs
mov
ja
leave
mov
js
jp
lahf
jae
dec
lods
mov
andl
xchg
popf
nop
movsb
repz
lds
or
jne
outsb
lock
rcl
andl
test
cltd
jl
xchg
icebp
test
jne
jnp
cltd
shrb
fldenv
ss
push
and
sub
pop
jl
xchg
shlb
dec
push
mov
jp
mov
jne
sbb
fnstsw
jno
cmp
frstor
inc
arpl
adc
xchg
dec
mov
nopl
icebp
loope
inc
nop
xor
sarl
adc
movsb
push
or
leave
jle
inc
aam
out
or
ror
push
jle
mov
jmp
jnp
cmpsb
movsl
gs
popf
mov
rolb
shl
inc
cld
xor
pop
cmp
pop
call
data16
mov
inc
jecxz
and
jge
scas
js
inc
rcrl
leave
dec
sti
outsb
gs
inc
mov
pop
movl
mov
xchg
or
std
popf
inc
fidivs
flds
in
mov
aas
mov
inc
lcall
aad
popa
cmp
inc
loop
mov
cmp
imul
and
lds
shrb
push
push
loop
mov
dec
and
inc
xchg
outsb
push
imul
and
aas
seto
cmp
loopne
xor
jnp
in
adc
int3
movsl
fists
mov
shr
mov
inc
int3
pop
leave
mov
sub
sbb
andl
mov
mov
xchg
fs
cmp
jle
enter
or
jle
fisttps
push
push
pop
imul
ret
or
test
ret
ret
in
dec
std
cmp
lret
loop
ret
out
pop
push
lret
fisubrs
cs
mov
add
xchg
or
shlb
dec
adcl
xchg
push
imul
and
les
mov
loopne
mov
ss
repnz
or
mov
push
xchg
imul
in
and
sbb
mov
outsb
xchg
pop
ss
xor
inc
jmp
and
fstpt
lret
lock
test
pop
mov
dec
jns
jb
adc
jbe
popa
mov
divb
fwait
pop
mov
fiaddl
sbb
fsubrs
cmp
sbb
dec
movsl
push
out
xorl
in
xchg
outsb
xchg
imul
hlt
clc
stc
test
sub
das
fidivs
jg
dec
or
les
cltd
jns
cmpsl
cmc
mov
pushf
adc
sub
lds
push
sti
mov
xchg
decb
lcall
cltd
cld
es
int
or
cmpsl
aaa
push
inc
push
xor
cmp
xlat
in
add
and
fistps
push
jg
rclb
test
subl
add
pushf
shl
les
div
push
movaps
mov
ss
jge
pop
mov
dec
out
shll
imul
and
and
lahf
pushf
outsl
std
sub
lds
xor
inc
sbb
jg
or
fldl
les
rclb
mov
leave
push
sbbl
aas
cmp
sub
push
xorb
outsb
xor
insl
cmp
dec
add
mov
xchg
add
push
mov
insb
loopne
xchg
add
leave
cmp
adc
sub
xchg
xchg
call
mov
xor
into
cmc
fsubrl
ret
jp
enter
cwtl
rolb
int
sti
cld
cmp
add
jo
jne
std
imul
cld
jecxz
imul
pop
push
iret
dec
mov
push
mov
mull
dec
mov
sub
cmp
mov
cltd
push
mov
dec
push
mov
lods
xchg
aas
aaa
jo
mov
mov
es
insb
ror
pusha
or
cmp
js
jnp
pop
and
or
xchg
dec
add
xor
ja
push
sub
rcrb
inc
dec
lcall
sarl
xor
jo
cld
xor
insb
jbe
push
mov
pushf
sarl
jns
pop
push
cld
sub
daa
lds
jb
pop
sub
cwtl
nop
jg
lock
insb
mov
out
fs
adc
dec
lds
sbb
dec
jae
push
inc
push
adc
pushl
stos
xchg
out
mov
mov
pop
jae
cmp
movl
xchg
xor
mov
imul
push
scas
and
mov
bound
scas
mov
xor
shlb
arpl
loope
orl
push
int3
dec
out
ret
pop
je
mov
int3
sbb
sub
push
dec
cmpsb
dec
es
loopne
pusha
or
iret
adc
mov
dec
jle
in
push
jle
mov
sub
jne
mov
pop
xchg
fadds
faddl
cmc
outsb
cmc
dec
push
cmpsl
jne
xchg
into
and
and
in
je
jmp
in
negl
in
sub
std
dec
ja
or
cmp
inc
insb
push
enter
lock
jge
adc
in
sbb
push
enter
popf
lahf
sbb
clc
stos
jne
cld
push
add
or
xchg
lahf
insw
jmp
test
fwait
adc
test
jae
subl
dec
adc
xor
and
test
data16
push
mov
xor
punpckhdq
cmp
into
dec
outsl
cmp
ret
bound
mov
dec
inc
mov
push
jge
mov
pop
repz
divb
ds
std
ret
sarb
jecxz
data16
mov
adc
push
loope
and
sub
ds
cltd
push
jmp
xchg
adc
iret
sub
or
rorb
int
imul
shl
and
adc
xchg
pop
repz
ja
je
pop
pop
outsl
pop
or
xchg
add
call
js
push
std
sub
clc
mov
mov
inc
nop
push
repz
call
loop
sbb
dec
inc
adc
es
xlat
repz
cmp
mov
or
adc
dec
xor
sub
into
lods
cmp
jne
decl
lock
ret
std
lret
mov
cmp
mov
pop
jbe
sub
adc
test
add
shlb
cmpb
ds
push
test
dec
and
out
rcrb
dec
and
ljmp
dec
lcall
popa
aad
sub
xchg
pop
inc
pop
mov
dec
rorb
pushf
pop
inc
aaa
shll
and
sbb
jmp
data16
loop
cli
inc
movsb
cmp
mov
pop
cmp
fdivrs
mov
sbb
jnp
shll
jp
add
push
mov
pop
clc
and
int
fdivrs
pop
xchg
fimuls
add
mov
pop
das
iret
mov
movsb
fildll
out
mov
mov
push
mov
mov
jle
xchg
pop
bnd
add
xor
daa
xchg
rcll
mov
xchg
xor
mov
xchg
inc
sub
sbb
pop
int3
dec
mov
gs
sti
repnz
add
and
cmpsl
sub
sbb
addr16
dec
subl
or
lock
insl
lock
daa
and
xchg
sbb
xchg
adcl
pop
je
es
sub
mov
push
jno
int
push
mov
pusha
jbe
nop
out
sbb
popa
push
add
dec
lahf
adc
mov
jb
dec
addb
mov
dec
push
fnsave
imul
adc
shll
pop
mov
rcrl
xchg
mov
dec
cmp
inc
pop
lods
and
int
xchg
mov
in
sub
hlt
int3
sbb
sbb
sbb
lds
inc
jmp
fistps
filds
cmc
xchg
repz
test
jae
jp
push
fsts
mov
xchg
aaa
add
mov
movups
xor
pop
movsl
fldcw
xchg
icebp
int3
insl
loop
cmp
dec
push
enter
jbe
pop
dec
sub
mov
sbb
dec
dec
jle
aaa
xor
pop
jge
popf
sub
pop
adc
iret
je
sbb
cmpsb
hlt
test
out
fwait
sbb
fdivrl
cmc
push
mov
push
out
daa
jmp
push
cmp
sub
jne
in
xor
jecxz
orb
add
mov
jbe
xor
pop
xchg
sti
push
ja
pushf
fsubrs
ss
xchg
cli
mov
pusha
mov
mov
inc
inc
fmul
add
nop
int
les
test
add
cmp
loopne
mov
call
movsb
idiv
sbbl
mov
jecxz
aaa
daa
arpl
mov
jno
push
pop
or
je
sbb
fstpl
cmpsl
jmp
and
sbb
sub
out
pop
jmp
jge
int3
add
push
add
call
mov
mov
sbb
mull
fs
adc
mov
pop
out
dec
mov
pop
xchg
dec
aam
jge
cmc
dec
out
sbb
ja
sti
jl
ss
xchg
fucomp
int
orb
cli
jno
insl
dec
cltd
and
sub
mov
repnz
jns
enter
rclb
cmp
push
jo
shll
shlb
xor
loopne
pop
loope
int3
mul
mov
cmp
test
add
call
or
adc
mov
out
push
cmp
mov
jge
sti
jmp
stos
jge
push
mov
sbb
inc
and
cmp
pop
mov
xlat
leave
mov
movsl
fwait
inc
imul
aam
shlb
inc
push
mov
sbb
pop
mov
shll
orb
dec
lahf
cld
popa
xchg
inc
xchg
fnsave
outsl
scas
cs
fildll
dec
and
pop
cmp
ret
sub
fcompl
ret
jno
sarb
std
adcl
loop
gs
dec
pop
das
and
into
pop
loopne
lcall
inc
jge
mov
pop
loop
jb
inc
mov
stos
fldt
fidivl
icebp
xchg
pop
movsb
sbb
mov
inc
xchg
test
jge
icebp
sub
push
adc
jmp
out
jne
and
push
push
add
dec
add
or
rolb
pop
pusha
cmp
insl
aam
add
dec
dec
jle
ret
jb
or
xor
mov
dec
adc
cmp
inc
pop
out
adc
fildl
addl
dec
out
jecxz
into
test
cmpsb
cmpl
and
aad
ds
out
mov
and
lds
in
sub
in
out
icebp
fiaddl
ljmp
xchg
push
aam
mov
jno
je
and
and
jne
push
push
or
stos
xchg
xor
cmp
rorl
mov
sbb
loop
lods
fcmovu
xchg
mov
out
jae
outsb
add
cmp
and
fprem
xlat
push
divl
cmp
inc
fcompl
cmp
in
scas
adc
xchg
aam
out
jmp
mov
ret
inc
xchg
sbb
sahf
lcall
mov
dec
mov
imul
pop
and
in
ss
add
fbstp
dec
mov
dec
pop
pop
xchg
fnstsw
adc
lea
xchg
or
dec
lret
jns
push
notb
push
out
dec
mov
lret
add
les
xchg
jge
cwtl
out
or
xchg
arpl
std
mov
or
repnz
sbb
mov
or
scas
mov
nop
and
xor
gs
cld
mov
addr16
int3
sub
insb
xchg
dec
popa
call
cwtl
imul
flds
leave
mov
cld
ret
jecxz
loop
aad
les
ficoml
icebp
mov
xchg
and
cld
mov
push
mov
test
pop
mov
push
pusha
fmuls
pop
pop
loopne
lock
sub
jns
jns
rclb
test
add
js
pop
push
mov
and
popa
inc
outsb
jge
fiaddl
decl
ret
out
out
push
lock
add
ret
jbe
arpl
int3
cmp
sbb
stc
stos
cmp
fists
or
push
jne
and
movsl
fwait
into
push
dec
pop
adc
cmp
pop
ds
or
stos
addr16
dec
xchg
fwait
push
push
or
mov
lea
xor
pop
jp
inc
xor
in
or
mov
cmpsl
stos
dec
push
cmp
pop
add
nop
lret
aaa
jmp
sahf
hlt
xor
mov
mov
daa
mov
sub
cmp
jmp
sub
fistps
scas
push
cs
cli
mov
jecxz
fs
pop
popa
cli
pop
inc
push
jns
fcmovnu
xchg
dec
and
aad
in
mov
cmp
into
lret
cmc
pop
add
or
push
push
sbb
lea
pop
call
test
mov
cwtl
test
dec
cltd
jo
popa
xor
pop
movsb
inc
mov
clc
iret
push
into
xlat
stos
dec
or
fsubrp
mov
je
mov
inc
jno
and
cli
dec
ret
mov
dec
mov
test
fnsave
push
jle
push
xor
or
or
mov
lcall
inc
les
mov
mov
mov
and
mov
loopne
sti
imul
push
int
xor
pop
adc
and
xchg
lret
inc
cmc
lret
subl
adc
lds
or
push
xor
pop
insb
fwait
mov
sub
ja
xorl
ds
adc
movsl
jnp
js
and
ljmp
mov
pop
loope
into
push
sub
xor
mov
mov
daa
leave
insl
imul
addr16
inc
mul
repnz
movsl
sbb
aas
cmpsb
movsb
imul
out
dec
int3
rorb
push
test
xchg
cld
cmp
mov
fnstcw
sahf
mov
adc
das
add
push
inc
cwtl
mov
xchg
lahf
scas
cmp
and
repz
sbb
sbb
std
pop
adc
pop
adc
loope
arpl
mov
push
hlt
in
dec
icebp
cli
aam
in
dec
call
xchg
inc
xchg
pop
shll
or
notl
pop
aaa
lret
std
shll
or
lods
stos
and
clc
push
fdivs
sbb
xchg
fldcw
dec
mov
je
cvttps2pi
sub
jl
xchg
cmc
subl
mov
and
xchg
movsb
and
mov
loope
add
lahf
add
mov
leave
hlt
sbb
loope
cmp
outsb
pop
xchg
cmp
shll
mov
mov
fldl
test
adc
popf
std
int3
in
or
mov
mov
dec
adc
stos
mov
xor
iret
fmull
arpl
mov
lret
sahf
cld
and
mov
cmc
jecxz
dec
adc
inc
xor
push
nop
nop
jmp
test
sbb
call
jge
aas
cmp
pop
inc
dec
jp
adc
add
push
mov
lock
and
xchg
les
lret
xor
gs
mov
mov
aas
test
cmp
or
ret
cmpsb
cmc
or
push
add
sahf
rol
fists
mov
mov
jbe
dec
int
sbb
pop
sti
out
lods
push
xor
in
sbb
push
or
loopne
sbb
insb
inc
aas
inc
sahf
cmpsb
decb
push
mov
push
arpl
cmp
js
cmp
ret
not
or
lcall
in
movsl
inc
cmpsl
or
add
scas
jo
sbbl
mov
out
mov
push
arpl
in
adc
sarl
sbbl
movl
repz
adc
adc
scas
cli
leave
mov
pop
insl
ret
test
mov
ret
cmpsl
cmp
push
popa
sub
and
int
sbb
mov
ljmp
mov
test
mov
and
mov
adc
jl
adc
test
imul
xchg
mov
aam
shlb
jp
and
out
and
clc
mov
loope
mov
xor
or
imul
pop
push
in
fbld
jecxz
inc
push
out
cmpsl
fs
xchg
sahf
pop
mov
cmp
jp
ljmp
fmuls
icebp
outsb
stc
dec
dec
jmp
jge
cli
test
mov
lods
jl
jae
sub
cmpsb
cmp
add
ficompl
pushf
xchg
das
mov
insb
repz
sbb
sbb
xchg
loop
xorb
xchg
jl
stos
add
mov
jecxz
imul
mov
imul
push
pop
popf
jle
loop
adc
lods
mov
inc
mov
outsb
dec
xchg
aas
mov
mov
lret
add
fwait
xchg
test
cmp
inc
cmp
out
sahf
shl
and
gs
or
cmc
jle
sbb
push
cmpsl
dec
aam
out
push
call
bound
cmp
jne
idiv
fldenv
dec
mov
push
or
add
ficompl
xchg
cmp
addr16
jp
xor
jae
mov
loop
jbe
repnz
jnp
fwait
pop
jl
into
std
movsb
insl
add
mov
jmp
lcall
aaa
xchg
mov
call
push
hlt
out
mov
scas
scas
push
pop
mov
sub
aaa
popa
sub
mov
inc
cltd
rol
xchg
pop
sbb
inc
addr16
xchg
dec
fisubrs
jl
lcall
je
jg
push
cwtl
push
stos
jge
jnp,pn
xor
lds
inc
pusha
fnstenv
mov
mov
push
fs
rcr
out
xchg
test
aam
mov
inc
xor
sbb
pop
popf
fiadds
stos
push
enter
pop
and
adc
sub
mov
add
outsb
mov
stos
lods
shrb
das
dec
or
jecxz
icebp
mov
xchg
and
js
hlt
sti
xor
xchg
pop
cmp
stos
cmp
mov
out
divb
or
loop
inc
mov
push
or
mov
cmpb
jnp
ficoml
pushf
push
xchg
xor
stos
scas
cs
xchg
pop
mov
jo
fisttps
push
pop
sub
xchg
nop
add
out
fsts
sbb
ficoms
xchg
mov
das
xorl
mov
xor
sahf
sahf
push
mov
leave
rclb
push
jnp
lret
or
stos
test
cwtl
jg
inc
fwait
mov
dec
incl
push
push
adc
mov
sahf
sarl
ljmp
or
clc
mov
mov
lahf
insl
fcmovnu
insl
movb
mov
out
scas
lods
je
push
mov
cwtl
cmp
adc
xorb
jno
jbe
leave
jl
lret
or
sarl
aaa
fwait
nop
push
inc
pop
mov
or
pop
jge
mov
dec
dec
addr16
jnp
pop
rcrl
lods
and
cmpsb
mov
decb
clc
cmp
push
lret
outsl
push
rcrl
inc
jp
ret
adc
and
adc
inc
cmp
fldt
mov
cmova
fdivr
shlb
dec
ficomps
jmp
mov
outsl
mov
mov
lea
jge
ret
xor
dec
push
and
or
aad
mov
mov
xchg
outsl
je
ljmp
pop
cld
jo
and
push
push
cmc
push
and
ror
jl,pt
icebp
lea
jne
cli
int3
mov
cmp
in
test
and
bound
xchg
test
pop
mov
cmp
sub
adc
jp
mov
sub
insb
dec
push
arpl
jl
xor
je
imul
stc
sub
mov
jo
and
xchg
push
push
cmp
mov
jnp
cmc
sbbb
mov
nop
dec
aam
inc
inc
cmp
push
adc
mov
sbb
pop
sarb
int
mov
ja
adc
mov
dec
mov
jne
mov
cmp
sbb
nop
scas
or
mov
inc
cli
dec
test
adcb
decb
xchg
stos
or
cmp
cmpsl
test
pop
adc
jae
mov
pop
out
movsl
std
xchg
bound
mov
adc
es
sbb
sub
cmp
sub
frstor
fs
jnp
ret
add
xchg
cmp
mov
mov
lods
xchg
arpl
insb
fmuls
xchg
and
jecxz
mov
push
pop
jp
into
test
push
mov
pop
jp
arpl
mov
cmp
sub
xlat
sbb
push
mov
mov
fwait
inc
rcll
int3
pushf
cwtl
pushf
or
mov
test
out
mov
adc
cmpsb
mov
cmpsb
sbb
repnz
shrb
jb
test
pop
mov
mov
xor
push
dec
add
in
and
ret
xchg
push
gs
jbe
push
insl
lcall
scas
pop
mov
mov
ja
sub
mov
popa
cwtl
cmp
xchg
pop
lods
cltd
int3
incb
jb
xchg
daa
add
push
dec
jb
aad
loope
mov
fldl
push
xchg
jno
fstps
cltd
das
int3
jae
xchg
mov
adc
call
cmp
xor
push
jge
add
ret
hlt
ljmp
sbb
jmp
pop
and
iret
ljmp
and
mov
pop
ss
inc
stos
pop
insb
mov
bound
dec
cli
xlat
iret
jnp
adc
jmp
call
push
mov
mov
and
mov
xor
mov
mov
xchg
outsl
dec
xorb
jge
mov
lret
aas
xchg
insb
call
and
fldl
dec
mov
jae
in
xchg
xchg
inc
push
ja
dec
daa
pop
sbb
mov
test
lret
xchg
jmp
sub
push
inc
out
ja
inc
mov
mov
cmpsb
hlt
ljmp
lods
out
aad
adc
inc
sarb
stos
inc
pusha
repnz
sarb
in
outsl
out
mov
dec
xor
add
out
repnz
cmp
rorl
or
mov
test
dec
jb
dec
cmc
push
dec
lods
scas
shrb
xchg
test
popf
xchg
mov
gs
push
xchg
das
and
stos
dec
mov
cmp
pop
or
pop
jo
pop
cltd
ds
mov
adc
popf
into
xlat
cmc
out
not
cwtl
addr16
jl
mov
test
in
pop
sahf
loop
nop
and
inc
push
rcll
add
add
xchg
mov
test
cltd
cwtl
sbb
outsb
add
jns
imul
cmp
pop
lock
add
lahf
cwtl
mov
das
cmp
push
xchg
adc
insl
loopne
bound
pop
bnd
dec
mov
iret
test
loope
xor
cld
mov
popa
add
daa
sbb
mov
mov
push
js
dec
and
sahf
push
cwtl
push
pop
mov
outsl
stos
add
loope
repnz
iret
ret
xchg
pop
push
aaa
mov
sbb
out
icebp
lea
in
xchg
mov
test
hlt
dec
fwait
push
loope
mov
xor
xchg
cmp
ret
pop
fxrstor
test
lods
fwait
shrb
sbb
or
les
sbb
xlat
iret
lock
push
xchg
lea
ret
call
push
stos
jns
xor
fmul
sbb
cmp
arpl
or
xchg
out
sub
sarb
or
test
scas
aam
push
pop
das
xchg
jns
insb
daa
cli
popa
iret
mov
dec
movsl
scas
fcoms
mov
xor
loop
fsubs
scas
aas
test
hlt
in
int3
pop
call
repnz
jmp
cli
orl
xchg
adc
pop
pushf
cmp
js
addr16
add
int3
cmp
xchg
jae
sub
pop
mov
jle
xchg
mov
dec
or
in
addr16
pop
movsb
stc
and
pusha
shrb
dec
or
enter
aad
test
xlat
call
mov
push
ds
rorl
jo
jg
mull
dec
insb
fnstcw
imul
jne
mov
jne
jnp
push
adc
pop
jle
fildl
mov
mov
lods
test
out
jg
fmuls
sahf
out
and
popf
jmp
inc
lock
ss
jmp
decl
sbb
sub
decb
xchg
mov
lahf
fsubp
insb
divb
xchg
or
fdivrl
lock
adc
dec
inc
xchg
lock
clc
xor
idiv
scas
pop
sub
arpl
xor
pushf
mov
jne
jmp
jne
jmp
push
cld
movsl
aaa
pop
jle
inc
inc
mov
mul
call
add
push
ja
arpl
adc
ret
or
lcall
mov
cltd
xchg
sbb
sub
add
and
loop
pusha
adc
lods
xchg
xor
jmp
or
ss
leave
mov
insb
stc
mov
outsl
fwait
cs
mov
out
jnp
mov
std
mov
iret
fsubrl
ss
negl
es
clc
adc
xchg
sbb
out
xorl
enter
in
jbe
out
repnz
movsl
mov
add
jmp
jg
push
and
pushf
xchg
scas
mov
xchg
jecxz
movl
aad
dec
pop
in
leave
sti
mov
out
mov
in
xchg
pop
sub
lods
adc
out
cmp
inc
mov
adc
xchg
sub
sub
roll
fstpl
sbbb
rclb
pusha
ja
pop
mov
mov
cmp
ret
insl
in
mov
insl
add
cs
cmpsl
scas
shlb
sbb
sub
or
inc
and
or
inc
mov
shll
adcb
int3
pop
inc
add
add
inc
jl
mov
mov
mov
sbb
mov
ret
adc
sub
or
addr16
rol
shl
mov
je
adc
leave
inc
mov
insb
adc
cmc
aad
xchg
cli
xchg
add
lods
sti
fs
sahf
jb
mov
mov
pop
leave
repnz
outsl
fldcw
lret
jl
jnp
std
cmpsl
mov
mov
imul
test
cmc
sti
jmp
jae
add
js
inc
je
or
test
push
jmp
cli
popa
hlt
enter
cwtl
sub
fidivl
push
pop
popa
pop
xchg
out
sbb
sahf
pop
scas
dec
bound
roll
aam
cmc
test
inc
popf
adc
loope
cmp
adc
aad
cmp
cmp
cwtl
xchg
gs
or
add
sub
mov
fwait
inc
sbb
cmp
and
into
fmul
test
mov
xchg
stc
xchg
dec
lahf
hlt
inc
pop
cmp
and
out
loopne
stos
inc
xor
pop
xchg
stos
cmp
mov
jnp
and
pop
aam
scas
xchg
cmpsl
stc
adc
mov
and
in
add
addr16
divl
jbe
ja
les
bswap
ficompl
andb
cli
icebp
jbe
xchg
loope
inc
cmpb
pop
cmp
sub
sub
inc
mov
mov
adc
and
lock
inc
mov
sbb
xchg
int3
mov
jecxz
shll
scas
mov
jg
fisttpl
xor
inc
mov
das
out
push
jmp
in
jb
out
in
mov
inc
fimull
add
inc
dec
sbb
jmp
push
cmp
or
mov
jl
mov
adc
nop
jge
xchg
push
lods
out
sub
in
roll
lcall
cmp
and
daa
fs
xor
or
xor
ret
or
inc
xchg
aad
cmp
pusha
mov
add
fwait
mov
aas
rcrb
xlat
js
mov
imul
pop
lock
xorl
insl
outsb
cltd
cmc
bound
movsl
or
xor
pusha
cmpsb
xchg
cmp
mov
and
js
ret
call
addb
in
cmp
adc
hlt
and
arpl
xor
sbb
nop
test
mov
stc
ret
shr
in
movsb
jae
dec
lods
sbb
xor
dec
in
insl
push
xor
dec
xchg
sub
aas
setnp
inc
sbb
cmc
cmc
sbb
je
aaa
xor
push
je
mov
jbe
sbb
negb
or
lock
out
mov
push
jmp
push
test
cmp
xchg
xor
aaa
dec
fisttpl
mov
or
addr16
jnp
push
pop
pusha
xor
sbb
xor
xlat
push
inc
jle
inc
inc
cmp
out
add
dec
mov
cli
add
dec
fildl
into
fisttpll
xchg
mov
test
fwait
dec
in
mov
mov
sub
sbb
popf
insl
jne
cmpl
fs
inc
cmpsb
dec
lret
cld
push
jge
fdivl
movswl
sub
add
cmp
jbe
insb
dec
pop
je
push
aas
jo
rcr
or
xchg
xor
fucom
jp
roll
shrl
jb
mov
clc
or
loopne
mov
pop
out
mov
aas
mov
sub
xorb
jb
out
or
pop
mov
xor
push
xchg
ficoml
leave
fwait
sete
sbb
cmp
cmp
ret
enter
mov
insl
test
mov
shlb
mov
mov
cmpsb
mov
insb
lea
and
enter
frstor
popa
pop
jnp
insb
lea
cmp
jecxz
movsl
cwtl
iret
lock
or
inc
and
mov
jle
loopne
mov
adcb
scas
rol
jbe
scas
dec
aas
cltd
call
xchg
mov
dec
pop
jnp
inc
pop
mov
mov
push
pop
ds
mov
add
pusha
cli
push
cmp
pop
icebp
jl
lahf
cmp
jmp
push
jmp
adc
push
cli
lahf
and
cmp
cmp
sbb
sahf
lock
js
and
fnstcw
add
inc
lret
mov
jmp
ds
aaa
insb
lds
inc
leave
ficoml
jg
insb
cli
mov
sar
sti
lahf
gs
push
mov
mov
addr16
xlat
mov
cmpsb
cmp
mov
dec
jb
xchg
mov
fcoml
or
fldenv
jl
xchg
cltd
add
sbb
out
loop
bnd
jle
adc
add
mov
mulb
rcrb
mov
push
loope
push
in
icebp
rcrl
fdivs
bound
shl
mov
inc
mov
xchg
int
nop
fucomi
xchg
dec
sbb
xchg
inc
and
inc
mul
cmp
cmp
ja
call
sbb
cli
ror
ret
add
or
je
mov
jp
pop
push
push
or
lcall
test
aas
jo
mov
test
jo
arpl
cmp
push
outsl
out
jg
aam
ss
mov
mov
jo
in
divl
and
bound
or
loopne
inc
je
jb
push
out
repz
adc
mov
dec
addb
jne
xchg
xor
xchg
out
ret
mov
outsb
scas
cs
mov
inc
ror
mov
ds
xor
ficomps
push
ret
and
roll
arpl
aam
rol
pusha
sarb
lret
lcall
mov
lock
ja
addr16
add
ds
mov
push
fsubrl
loope
bound
jmp
shrb
mov
add
push
xchg
lods
test
push
mov
aad
inc
das
popf
cmc
mov
push
std
xor
cld
sub
lahf
mov
pusha
lret
out
ds
in
mov
hlt
in
xchg
leave
in
jp
lds
dec
into
pop
mov
xlat
mov
outsl
xchg
ret
stos
in
xor
xor
rcrl
adc
lcall
push
getsec
mov
adc
subb
out
add
incb
in
sbb
aas
mov
sub
pop
in
rcll
mov
mov
dec
xor
lret
int3
inc
popf
jl
pop
arpl
in
sbb
pushf
pop
loop
lret
xchg
sub
ret
pop
loop
outsb
arpl
xor
je
cmp
arpl
jle
jl
mov
jg
ja
in
mov
cmc
cmp
push
popa
ljmp
cmp
fdivl
in
mov
fbstp
stos
mov
sbb
jbe
mov
xchg
lea
cmp
dec
stos
pop
adc
adc
ds
jno
pop
out
xor
cmpsb
cmpsb
sahf
icebp
dec
jb
lock
gs
imul
push
or
or
jle
and
pop
xor
ja
sub
stos
mov
dec
mov
jmp
dec
dec
int3
inc
lock
sub
movsl
loop
sbb
mov
adc
xor
repnz
loopne
ret
or
and
in
les
add
xor
push
cli
mov
inc
test
push
sbb
and
aad
dec
ljmp
mov
out
insb
lahf
push
jecxz
and
push
inc
mov
adc
std
xor
imul
out
je
mov
mov
jle
jmp
fstl
xor
xchg
mov
dec
sub
stos
pusha
push
ja
iret
pushf
arpl
outsl
stos
add
lods
inc
jmp
gs
addl
ficomps
ljmp
jae
cmp
insb
adc
dec
sti
fcomps
das
or
mov
fsubrs
and
sbb
jmp
or
xchg
and
and
sub
lds
push
jnp
pop
sti
in
jl
pop
bound
adc
ljmp
out
rclb
scas
and
jne
pop
ds
insb
mov
push
xchg
xlat
movsl
je
rcr
xchg
sub
adc
in
dec
fs
sbb
xchg
xchg
mov
inc
dec
mov
inc
jg
mov
out
popa
cmp
loopne
test
in
test
jb
add
mov
repnz
addr16
and
ret
jae
xor
scas
repz
iret
aam
adc
push
repnz
roll
dec
mov
inc
xor
cmc
scas
cmp
rcrl
mov
jmp
sbb
rorb
or
out
jne
insl
cwtl
test
inc
adcl
daa
xchg
mov
hlt
or
int
pop
das
nop
and
mov
jns
jle
inc
fwait
scas
inc
mov
in
xchg
scas
jns
sbb
in
popa
adc
inc
dec
add
jbe
and
sbb
dec
arpl
insb
mov
jbe
jge
imul
xor
shlb
cmpsb
sbb
enter
and
inc
push
icebp
notb
mov
dec
sbb
jno
fldenv
push
jge
cmp
jle
pop
dec
sub
imul
add
ret
cs
mov
stos
insl
mov
aaa
gs
cld
arpl
sbb
push
xchg
push
dec
roll
fcomps
jmp
xchg
fldl
sbb
inc
popf
add
in
push
cmp
in
sub
pop
push
mov
add
inc
icebp
out
xchg
daa
lods
in
test
sti
sub
rol
push
xlat
arpl
mov
or
jg
and
jb
xlat
int3
loope
in
fs
popa
ss
fidivs
cltd
or
xor
test
push
or
insb
cmp
sbb
shl
loopne
hlt
pop
xor
adc
cli
sub
out
and
mov
les
inc
push
mov
push
icebp
mov
adc
mov
cwtl
test
cmp
loop
idivb
mov
mov
and
push
dec
pushf
xor
push
movsb
dec
fdivrs
xlat
lret
out
pushf
push
xchg
popa
ret
rcll
ss
fnstsw
cmpsb
mov
jg
jae
adc
push
inc
xchg
rcll
push
jge
mov
movsl
cltd
push
bnd
sbb
cmp
mov
cli
and
pop
jnp
les
mov
add
sbb
test
cmp
dec
loope
ret
and
adc
and
mov
and
sub
mov
cmp
dec
lds
outsb
imul
sub
repz
pop
int3
adc
pop
jle
push
mov
scas
imul
into
repnz
jge
xchg
in
fsts
and
ds
stos
mov
inc
add
jnp
pop
pop
fcomi
jnp
adc
sub
leave
push
popf
jl
ljmp
jne
lea
sbb
fdivs
inc
add
mov
adc
push
mov
dec
dec
mov
mov
pushf
scas
inc
aas
inc
xchg
sbb
dec
mov
insl
movsb
lret
mov
mov
shr
pop
fisubl
pop
pop
iret
cmp
ja
lret
ljmp
jae
out
pop
add
or
xchg
push
sahf
cltd
int3
test
xor
pause
outsb
mov
loop
fcomp
mov
ss
pushf
pop
mov
mov
pop
push
aas
pop
adc
imul
jp
sub
cmpl
push
fsubrs
pop
inc
cltd
push
adc
nop
pusha
sahf
mov
mov
dec
sbb
fcmovb
mov
stc
enter
jecxz
xor
pushf
mov
push
test
xchg
lret
popf
insb
lods
mov
sti
mov
insl
and
fidivs
test
shrb
call
aad
stc
cltd
sbb
add
ret
lahf
ret
dec
xchg
push
pusha
xlat
dec
xchg
jbe
mov
add
ret
fimull
xor
dec
cwtl
sub
out
push
sbbl
orb
loop
shll
pop
xor
pushf
in
mov
pushf
outsb
jecxz
rclb
shl
call
cmp
dec
push
fisubrl
mov
pop
arpl
out
dec
mov
dec
cli
fisubrl
cmp
mov
mov
addl
mov
mov
dec
jg
cltd
add
or
jne
cmc
and
out
loopne
in
xor
jnp
shll
xlat
std
mov
adc
jecxz
lcall
pop
jle
stos
sub
test
jmp
cmpb
add
mov
aaa
ss
sbb
int3
out
je
pusha
push
loop
xor
idivb
xchg
dec
mov
dec
cmp
je
enter
inc
mov
cmp
mov
pop
movsl
mov
pop
in
in
inc
mov
cwtl
outsl
pop
test
aam
and
rep
cltd
dec
push
sahf
cltd
xor
into
inc
cmp
mov
insb
cltd
jns
add
lods
mov
mov
inc
in
sbb
pop
mov
cmp
cwtl
pop
inc
js
xchg
and
cmp
push
imul
mov
add
inc
in
mov
xchg
fisubs
sahf
and
inc
roll
push
xor
imul
push
add
jge
pop
mov
bound
cmpb
ret
pop
pop
cmp
sbb
xchg
jno
movsl
jb
repnz
ret
pop
push
shl
push
push
pop
lds
inc
es
stos
pop
mov
shrb
fdivp
orl
xor
jne
clc
jp
mov
jge
or
and
xchg
jl
lds
insl
dec
out
pop
inc
adc
adc
or
mov
mov
in
mulb
ds
fnstsw
mov
pop
mov
pop
push
mov
cmpsb
test
loop
mov
xor
cmp
mov
push
loope
xchg
mov
test
mov
pop
lret
dec
jno
arpl
add
fisubrs
add
loope
cmp
cmp
rorl
fmull
xor
and
cwtl
mov
out
mov
pusha
mov
int
or
test
adcl
das
sub
pop
fdivrs
push
ficompl
cs
xor
xchg
push
les
cmpb
xchg
adc
jo
mov
sub
sub
cmp
int3
xchg
jnp
mov
mov
mov
out
icebp
in
aad
lock
push
mov
or
xchg
cld
lods
cli
jo
fcomi
mov
jmp
arpl
mov
les
inc
mov
insl
mov
push
les
xchg
push
mov
push
push
jne
pushf
shr
rorb
jne
out
scas
addr16
aas
outsl
test
andl
scas
xchg
xchg
sahf
sub
pop
dec
and
dec
add
fstl
out
scas
insb
movsb
sar
iret
ljmp
push
arpl
ucomiss
mov
and
dec
xchg
in
xor
push
inc
push
jne
or
sub
mov
pop
xor
das
lea
inc
stos
testb
xor
sti
push
shlb
int3
adc
xchg
inc
pop
inc
roll
rolb
jbe
outsb
ret
fdivrl
insb
push
fisttps
jno
xchg
mov
and
dec
or
add
mov
lods
andl
sbb
jne
aas
gs
dec
mov
shl
mov
mov
add
jp
mov
push
scas
fisubrs
cmp
clc
cmp
out
out
pushf
aas
aas
lret
leave
add
mov
mov
cmp
pusha
test
in
or
mov
lods
inc
les
pop
imul
mov
mov
lea
mov
cmpl
sbb
jb
out
cltd
push
xchg
mov
mov
dec
add
lret
and
scas
xchg
mov
outsb
push
dec
lea
sbb
mov
gs
xchg
dec
pop
fstps
in
or
adc
std
adc
in
call
das
xor
push
repnz
jno
shll
das
movsb
inc
pop
push
sbb
mov
mov
add
pop
or
mov
push
xor
fdivrl
pop
adcl
push
cmp
mov
push
mov
mov
pop
int3
mov
fwait
in
or
imul
and
out
out
mov
ss
mov
scas
mov
scas
stos
outsl
mov
pop
lahf
mov
cmpsb
mov
mov
leave
fwait
inc
jle
jb
popa
hlt
or
es
call
sub
push
cmp
test
cmpsl
cmc
xlat
dec
pop
je
sub
lock
xor
jae
popa
mov
stos
ss
push
cltd
sub
xchg
fwait
lahf
std
push
leave
test
pop
ds
cmp
bound
mov
xchg
mov
mov
mov
lock
stos
adc
sub
popf
shl
inc
pusha
jmp
push
pushf
adc
in
jg
js
fstps
popa
stos
dec
jle
mov
lea
xor
sub
add
mov
xchg
ret
in
ss
sahf
repnz
xchg
cmp
mov
cvtps2pi
push
loope
or
xchg
xor
dec
bound
sub
inc
js
sarl
push
lahf
and
or
adc
and
jmp
call
cs
cmp
shll
lods
add
cs
loop
mov
hlt
xor
jb
push
jno
inc
push
test
roll
mov
mov
and
push
pop
pop
les
sbb
mov
mov
arpl
jle
cld
lea
add
int3
cmp
arpl
sarb
jnp
sbb
mov
mov
repz
data16
in
into
pop
fistps
ss
mov
shlb
sti
xchg
cmp
incb
test
je
sub
pop
imul
int3
mov
rcrb
mov
int3
add
add
xchg
lret
pop
daa
mov
cmp
jle
insb
dec
sub
fnstenv
fstp
test
pop
addr16
js
push
popf
sbb
mov
xor
ljmp
lcall
lret
roll
jg
cmp
dec
fdiv
rcl
mov
cmc
adc
outsl
rcll
pop
mov
negl
push
add
dec
in
jg
mov
das
fbld
dec
frstor
addr16
ja
push
and
inc
push
add
jnp
push
xchg
lret
xchg
stos
inc
add
push
cmpsb
lahf
sub
sub
cmp
dec
mov
jl
dec
bnd
and
jmp
les
test
sbb
mov
lcall
xchg
outsb
pop
jge
imul
sahf
dec
int3
or
cmpsb
pusha
or
insb
into
push
sahf
repz
mov
push
mov
sbb
test
pop
adc
das
mov
dec
push
dec
fwait
sbb
stos
mov
filds
pop
cmp
jl
and
popa
mov
inc
mov
popa
push
xchg
xchg
cmp
adc
mov
sub
pop
ffree
inc
mov
cmp
pop
push
cs
shrl
sub
int3
or
push
xor
in
mov
les
fldt
rcr
mov
in
rcl
cmp
fldlg2
inc
cmp
fisubrs
mov
jg
xchg
push
int
mov
loope
cmpsb
movsl
sub
or
xor
leave
dec
data16
push
sbbl
bound
cltd
mov
and
and
mov
xor
popf
das
mov
pop
and
mov
and
call
mov
pop
xlat
daa
in
mov
loop
xchg
fabs
xor
insl
pop
popf
xchg
mov
data16
cmp
xchg
or
enter
add
dec
aam
jo
cmp
sbbl
jne
loope
aam
and
jg
mov
push
in
in
jbe
mov
inc
dec
mov
mov
test
jns
jns
mov
pushl
sub
loopne
popf
pushf
bound
ds
pop
sbb
xor
dec
xchg
and
aad
insb
jl
inc
xor
push
std
vpaddusb
stos
lods
mov
loopne
insl
pop
sbb
push
xchg
ret
outsl
add
sbb
jl
dec
insb
push
lods
cmpsb
sbb
testb
cmpsl
lods
add
cwtl
inc
mov
in
sbb
mov
push
hlt
pop
pop
out
push
shlb
cs
mov
mov
jae
sbb
aaa
cmc
in
and
mov
inc
add
fistl
pop
daa
scas
sub
dec
sub
aas
frstor
cmp
or
xchg
push
sub
dec
sbb
and
mov
cmp
shrb
icebp
sbb
and
dec
nop
bnd
or
xchg
mov
mov
imul
sti
xchg
or
test
or
push
cmpsb
push
dec
and
inc
fmull
test
and
sub
adc
xor
push
jne
jns
xor
test
int
add
cmp
repz
push
stc
psubusb
testb
fisttpl
ret
in
into
ljmp
jnp
ljmp
aas
ret
xchg
cmpsb
sbb
push
aad
mov
pusha
popf
ds
cmp
xchg
pop
pop
xor
pop
daa
in
jl
lock
sbb
enter
dec
xor
movsb
push
and
jo
enter
je
inc
sbb
cli
pushf
push
in
es
dec
lret
ficompl
arpl
push
push
fstpl
xchg
add
inc
adc
stc
adc
in
notb
aas
movb
shll
cmp
dec
in
xor
cmp
out
lods
pop
arpl
andb
cmp
inc
jbe
aaa
cwtl
int3
cltd
mov
cmpsl
or
dec
push
push
mov
xor
mov
cmp
and
pusha
inc
call
iret
push
lahf
push
adc
and
shrb
insl
xor
addr16
sbb
insl
cmpsl
cmp
add
testl
push
dec
ss
add
jecxz
push
and
xor
leave
ljmp
rorl
and
push
xor
inc
mov
mov
mov
sbb
pop
in
mov
loop
sub
mov
fisubrl
sbb
in
popa
pop
movsl
mov
repnz
icebp
mov
cmp
aam
adcl
xchg
cmp
sbb
and
lods
lret
or
mov
pop
cli
decl
pop
rcrl
fwait
cmp
xor
int
insb
sbb
mov
js
testb
sbb
xor
imul
es
pop
sub
mov
cmp
sub
mov
movsb
push
das
test
das
sub
sahf
pop
mov
fxch
adc
std
mov
lock
mov
fcoms
aaa
xor
mov
xor
adc
jg
fmul
add
call
addr16
insl
jno
out
pop
mov
push
repnz
nop
pop
nop
xor
sbb
movsb
mov
pop
adc
add
sbb
cmpb
xchg
jge
inc
imul
int3
jb
or
imul
and
mov
inc
mov
ss
cld
imul
leave
outsb
lea
cmpsb
js
gs
xor
loop
outsl
mov
loop
mov
pop
push
in
inc
das
outsl
mov
push
inc
ss
sub
xor
loop
dec
ja
cmp
lea
mov
mov
pushf
xchg
xor
inc
js
cmp
ror
cmp
call
xchg
jnp
and
flds
mov
cltd
adc
jns
dec
pop
cmc
mov
add
mov
leave
jbe
xor
pop
dec
stos
aad
fwait
xor
int
loopne
push
jmp
cmpsl
imul
sub
out
adc
cmpb
out
xor
sub
mul
and
inc
xor
or
in
xor
mov
ljmp
push
xor
xor
sbb
test
sub
adcb
inc
cmp
xchg
ror
leave
sahf
and
pop
xor
cmp
jp
mov
es
mov
and
mov
mov
scas
adc
loopne
out
xchg
push
mov
jne
mov
jae
frstor
pusha
mov
adc
mov
in
cmpsb
enter
jo
fistps
cmp
inc
inc
pushf
lock
rcrb
clc
call
push
and
adc
dec
mov
xchg
cwtl
imulb
mov
icebp
addr16
cmpsb
mov
add
pop
dec
xchg
ja
mov
jbe
sbb
shlb
arpl
or
push
mov
sbb
addr16
xor
xchg
push
lret
sub
scas
mov
repnz
xor
sarb
mov
outsl
or
pop
pop
push
pop
push
cmp
pop
dec
mull
add
or
fwait
stos
int
cmp
dec
ret
and
dec
outsl
pop
and
push
lds
enter
mov
cli
cmp
mov
dec
mov
enter
dec
std
jo
pushf
cmpsl
bound
fstps
xor
push
out
ret
icebp
lret
xor
fimuls
xor
jmp
sahf
push
fidivrs
jg
fs
mov
jbe
stos
jno
push
pop
hlt
fistps
addr16
leave
pop
cmp
mov
xor
lcall
outsl
dec
sub
ret
js
push
fiaddl
or
xchg
cmp
inc
std
and
mov
or
xor
sbb
cs
xchg
movsl
shrb
sbb
dec
inc
xlat
repz
pop
das
jne
movsb
cmp
fmul
mov
push
stc
xchg
test
mov
adc
pusha
inc
jnp
xchg
adcb
mov
and
cmp
in
adc
pop
inc
or
inc
xor
inc
cmp
mov
jae
add
rolb
inc
mov
mov
dec
icebp
and
dec
sub
stc
sub
ss
xlat
adc
fsubrl
mov
jb
mov
ljmp
out
mov
fdivs
imul
lods
mov
jno
mov
push
push
das
hlt
sub
arpl
xchg
xor
adc
mov
popf
loop
mov
cld
cwtl
dec
sbb
pushf
aad
cmp
mov
nop
pop
push
fimuls
insb
testb
lods
popa
or
fs
sbb
rolb
xorl
inc
mov
loope
push
pop
jge
test
cmp
fisubrl
and
fxtract
std
dec
sbb
lock
sub
sbb
out
outsl
xor
cmp
push
bound
jle
scas
xlat
addr16
xor
dec
jnp
push
jg
cs
adc
sub
sti
mov
xor
pop
sub
sub
mov
clc
or
push
call
loopne
mov
sub
mov
ljmp
cmp
aad
cwtl
aaa
outsl
cmpsw
or
test
lods
bound
rolb
or
xchg
je
lcall
sub
ljmp
inc
and
cmp
test
pushf
xchg
scas
lea
adc
sbb
add
dec
aam
mov
insl
scas
mov
rorl
out
sub
imul
aam
shlb
adc
inc
int
xlat
test
fdivl
xor
inc
push
loop
xchg
xchg
cs
or
xchg
and
mov
xor
push
xchg
mov
push
sub
adc
push
stc
or
or
push
out
adc
fistps
mov
test
jae
mov
cs
pop
xchg
mov
fwait
mov
pop
bound
and
imul
xchg
insl
cwtl
lret
fisttpll
or
flds
ja
test
cmp
test
jb
mov
je
ret
imul
mov
add
lret
push
lods
push
scas
inc
push
test
iret
xor
jb
fnstsw
cltd
push
inc
jl
jl
fstl
jns,pt
adc
sub
leave
out
into
out
ja
pop
add
shll
mov
jns
mov
lods
aam
pop
xchg
inc
dec
imul
nop
add
pop
or
pop
xchg
add
icebp
pop
inc
inc
xchg
into
cmp
push
testb
push
out
lds
jg
sahf
ds
xchg
cmp
fldcw
inc
mov
bound
cmp
xor
mov
nop
pushf
cmpl
push
xlat
aas
pop
and
and
sub
sub
aam
sub
ja
call
rol
cmp
jbe
adc
out
subb
cwtl
or
mov
add
fcompp
cli
shl
pop
or
outsl
imul
loope
jbe
mov
cmpsb
fiaddl
or
aaa
sub
push
xor
xchg
pop
mov
mov
jecxz
adc
cwtl
lea
lcall
pop
inc
sbb
push
scas
pop
xor
ficoml
jl
shrd
int
insb
or
notl
xchg
and
call
push
xchg
cmc
push
jbe
cmc
xchg
leave
mov
mov
ret
ljmp
pop
test
stc
test
add
jnp
xor
jge
lea
dec
jno
in
mov
sbb
shlb
popl
aam
and
add
dec
jae
push
jnp
mov
sbb
test
jmp
jmp
xchg
mov
push
ss
lahf
shrb
rcr
add
fiaddl
or
repz
dec
inc
push
cmp
cwtl
cwtl
push
push
xchg
das
call
adc
orb
stc
cmp
sub
push
jl
mov
xor
jns
call
shr
jae
test
gs
jg
mov
arpl
inc
insb
xchg
pop
pop
js
in
xchg
jb
cmpsb
or
xchg
sti
cmp
xor
mov
dec
jmp
icebp
sbb
sbb
hlt
xchg
ret
jle
unpckhps
jnp
movsb
ret
sahf
test
std
shll
daa
cmp
outsl
sub
addr16
add
sahf
out
sbb
jnp
ficompl
mov
shrb
add
fwait
aad
add
add
sbb
addb
jns
outsl
fsts
nop
inc
xor
pop
xor
mov
into
js
mov
mov
jns
fst
gs
addr16
push
push
loope
inc
cmp
loopne
and
dec
data16
push
clc
xor
rcrl
shll
fstpl
aas
inc
dec
cld
fildl
xchg
imul
sti
mov
push
cli
test
sbb
dec
fcoms
jle
push
imul
adc
or
adc
fldl
dec
es
cmpsb
int3
jb
mov
addl
lret
shr
iret
int
mov
test
sbb
pushf
out
inc
dec
add
iret
sbb
sbb
sbbl
fmuls
repz
testl
out
aaa
inc
inc
jp
push
ret
loop
lcall
imul
pop
loope
int
mov
and
es
jl
inc
mov
xor
xor
pop
les
js
mov
sbb
loop
inc
sbb
pop
adc
or
test
add
test
test
adc
fwait
xchg
cmpsb
and
or
dec
pop
pop
pop
fadd
pop
dec
cmp
lret
pop
jle
mov
dec
in
aam
mov
cltd
xor
jg
xor
xchg
sub
push
mov
leave
movsb
add
xor
jo
push
aaa
dec
inc
add
imul
scas
jb
add
es
inc
mov
pop
mov
xor
call
sbb
ss
push
jmp
sarb
inc
mov
std
jp
loope
xor
or
mov
mov
or
insb
loopne
shrl
lock
jb
adc
xchg
loopne
and
inc
enter
in
or
pop
in
xchg
sbb
pop
mov
test
call
jle
inc
hlt
roll
cwtl
xchg
movsb
iret
rcrl
or
repz
mov
fs
fs
int
xchg
hlt
les
ljmp
mov
or
outsl
and
pop
jp
dec
cmc
jae
ss
loope
sbb
mov
add
js
sbb
das
inc
inc
in
and
fs
aas
push
cs
lahf
mov
or
xlat
dec
and
add
push
fistpll
adc
jnp
fidivs
shl
xorb
cwtl
pop
push
movsl
sub
xor
jb
mov
iret
test
loopne
xchg
sub
sbb
jb
dec
mov
mov
aad
jge
mov
pusha
pusha
sbb
repnz
call
pop
in
mov
int
aad
fucomi
js
cmp
jae
and
pop
aas
pop
xchg
adc
add
and
xchg
mov
es
mov
or
adc
and
pusha
std
inc
imul
and
ret
stos
push
imul
sbbl
inc
mov
sti
add
fimull
push
jne
jge
sbb
and
idivb
cs
push
and
inc
js
and
inc
push
cmpsb
push
push
mov
pop
iret
aaa
movsl
das
test
popa
negl
push
cmp
mov
cmp
xchg
test
pop
adc
dec
sbb
hlt
push
movsl
xchg
fdivrs
insb
pop
stos
or
mov
cmpsl
mov
loopne
mov
fmull
leave
fildl
pop
adc
out
pop
or
dec
scas
adc
or
push
mov
add
shl
ds
lock
jmp
cld
flds
arpl
addl
inc
ret
hlt
lret
enter
cmp
rcl
mov
stos
les
out
cmp
dec
sbb
je
jge
cld
push
pop
mov
cmpsl
sar
int
mov
in
xor
call
push
int
out
adc
les
clc
and
not
or
adc
mov
jb
rcl
insl
xor
dec
sbb
fs
push
cli
int
repnz
les
loop
adc
push
jb
stos
xchg
mov
imul
lcall
je
sbb
std
fld
pusha
movsl
or
jns
dec
lock
adc
int3
mov
das
lret
movsb
jmp
mov
inc
jno
cli
rorb
stos
movsb
inc
or
adcl
ljmp
and
mov
xor
and
ret
fdivrp
fnsave
lea
mov
movsb
xor
gs
ret
in
dec
add
or
and
cmp
jle
cmp
into
mov
add
adcb
add
cmp
cmpsb
push
sub
minps
jnp
les
das
rcll
dec
push
test
and
imul
jecxz
shll
aam
pop
es
icebp
imul
pop
xor
mov
dec
or
push
cmp
frstor
mov
ret
jmp
imul
dec
mov
cli
push
adc
inc
lock
test
mov
incb
adc
rolb
mov
pop
lea
or
add
pop
data16
js
or
ja
sub
test
nop
mov
xchg
test
mov
and
mov
cs
jno
mov
and
push
and
inc
into
clc
test
test
pavgw
add
mov
push
testl
cmc
sbb
adc
stos
sbb
push
mov
sbb
inc
cmp
xor
stos
ljmp
out
pusha
popf
fs
lret
inc
movsb
push
sbb
mov
in
clc
xchg
stos
jp
imul
xorb
lock
mov
scas
mov
mov
adc
dec
push
ja
or
mov
mov
cvtps2pi
cmp
orb
data16
fldenv
outsb
ljmp
jae
mov
test
sbb
mov
imul
cwtl
fmull
push
sub
insl
cmp
adc
scas
jbe
push
pusha
xchg
dec
lcall
mov
cltd
jae
lahf
cmp
mov
sub
lods
lods
adcl
dec
cmp
ljmp
stos
and
mov
mov
xlat
mov
or
push
loop
and
sbbb
and
jg
rclb
dec
nop
cmp
clc
xchg
or
lcall
out
pushf
movsb
dec
into
or
hlt
cmpb
push
lret
nop
jno
push
sub
popa
in
jo
pop
cmpsb
sbb
wbinvd
cmc
add
cld
mov
jge
in
and
inc
jns
sbb
divb
and
sbb
popfw
sub
out
jns
sarl
repnz
sbb
lcall
lret
in
pop
ret
mov
movlps
mov
lock
shrl
xchg
repnz
sub
sub
in
mov
mov
xor
xchg
add
sbb
gs
imul
rolb
cmp
cmp
sbb
lea
mov
mov
mov
xchg
adc
lahf
xchg
pop
xor
rol
cmp
dec
cwtl
and
fnstenv
movsl
jb
mov
mov
cmp
inc
jle
sbb
test
pushf
test
mov
cwtl
icebp
cmp
inc
and
adc
sbb
sti
int
xor
loope
push
ljmp
mov
loopne
mov
xchg
cmc
hlt
in
test
roll
xor
ficoms
shll
pushf
jbe
push
iret
vpor
iret
jno
or
or
push
cmp
sbb
push
jns
mov
mov
adc
je
jnp
test
inc
xor
shll
fdivr
dec
jmp
cmp
repnz
in
add
dec
pop
or
int3
loopne
adc
jmp
jecxz
xor
outsl
sub
or
sbb
inc
sub
add
incl
cmpsb
pop
mov
jae
mov
xchg
mov
and
xor
nop
aam
repnz
js
int3
out
mov
leave
sub
dec
cmp
fadds
mov
sbb
lahf
xlat
sub
int
out
push
or
inc
jecxz
aad
imul
rorb
lahf
mov
push
and
dec
leave
cli
mov
jb
jecxz
cmp
loop
mov
or
gs
lods
add
ja
mov
movsb
and
sarl
jnp
jp
outsl
adc
ja
ds
mov
ja
aas
cs
add
fstpt
xchg
mov
mov
fildll
mov
mov
cmp
loop
inc
or
xchg
dec
outsl
or
mov
xchg
cltd
hlt
xchg
jne
fstpt
lods
sbb
mov
push
mov
scas
jmp
cld
mulb
shl
lcall
xor
lahf
push
sbb
mov
mov
mov
push
mov
sbb
icebp
insl
dec
sar
aad
lret
int
sbb
adc
ss
jp
ss
stc
xchg
movsl
sub
push
repz
enter
jmp
aad
fisttpl
leave
mov
stos
andl
movsl
ret
sub
dec
mov
ss
and
js
cmp
sbb
xlat
out
daa
jb
nop
arpl
and
insb
xchg
mov
xor
mov
ret
sbb
test
aad
insl
xchg
xchg
enter
xchg
loopne
jo
fwait
ds
xchg
insb
mov
inc
mov
popa
jb
sbb
outsl
xorb
cmpsb
jnp
push
and
dec
xchg
imul
pop
mov
sbb
dec
jle
hlt
imul
ljmp
jb
jbe
cltd
fucom
xchg
sahf
add
out
rcll
cld
cli
and
push
mov
pop
aaa
sub
pop
arpl
cmp
xorw
mov
mov
outsb
movl
cmp
wbinvd
rorl
cmp
rolb
sbb
mov
xor
add
imul
out
add
icebp
mov
stos
in
ljmp
pusha
test
out
xchg
xor
sbb
mov
pop
fcmovb
fadds
outsl
cmpsl
or
push
add
test
xor
mov
outsl
and
mov
mov
jmp
fidivrs
int3
xor
fwait
shrl
loope
jns
idivl
add
stc
jg
fwait
dec
dec
pop
xor
divl
nop
xchg
sub
xor
xchg
jnp
mov
push
and
xor
jmp
bound
je
xor
xchg
rcrb
sbb
add
jae
sub
shr
xorb
ds
dec
sti
add
adc
insb
ja
inc
data16
shll
cmp
and
adc
pop
pusha
inc
jb
inc
scas
push
adc
ljmp
movsl
adc
outsl
push
ss
add
jo
jbe
inc
adc
addr16
sahf
imul
push
inc
mov
add
mov
push
push
push
dec
adc
and
and
lock
mov
repz
stc
mov
shll
jo
ss
lea
jg
jge
repz
shl
pushf
xor
pop
sbb
shl
out
mov
dec
lret
mov
jb
notl
pop
adc
inc
mov
stc
aaa
jae
sub
cmp
xorb
je
imul
decb
out
inc
test
sahf
addb
leave
push
ja
ja
insl
dec
lds
in
into
push
pusha
adc
sbb
fstps
jb
nop
ja
in
mov
adc
jo
xchg
fcoms
push
in
pop
int3
cmpl
xor
out
add
lahf
insl
or
in
xchg
popf
or
cmp
pop
call
push
flds
fdivr
lea
cmpl
cmp
lock
lahf
sub
popf
jne
xchg
lcall
in
push
lds
xor
scas
or
adc
xchg
jg
testl
xchg
mov
pop
shlb
in
push
or
lock
rcll
nop
pop
mov
sbb
pop
sub
call
xlat
sbb
gs
aam
dec
xchg
enter
scas
and
arpl
pandn
inc
xor
sahf
or
jle
xor
mov
cwtl
add
leave
fildl
stos
fidivs
sbb
sub
andl
fs
pop
push
add
pop
pop
pop
dec
dec
mov
imul
xor
jge
lcall
loope
xor
pop
mov
mov
hlt
jp
mov
push
arpl
orl
xchg
insb
out
mov
out
sbb
lea
xchg
push
cmpsl
sbb
xchg
shl
mov
adc
add
bound
ljmp
shl
adc
xchg
xchg
shl
repz
fisttpll
and
pop
inc
mov
nop
inc
pop
push
lcall
jp
push
call
ja
fadds
cltd
or
pop
inc
int3
pop
adc
das
sti
mov
leave
mov
lret
sbb
add
inc
cli
xchg
icebp
push
lock
adc
fwait
sbb
ss
pop
mov
adc
loopne
int
push
mov
cld
incb
mov
stos
int
adc
rolb
cmc
push
cmp
mov
and
add
pop
repz
pop
push
mov
mov
enter
ja
xchg
pop
aad
mov
loop
and
insl
push
ffree
add
pop
add
jg
mov
jp
or
jae
or
repnz
mov
lcall
mov
jb
push
addr16
bound
dec
aas
xchg
loopne
pop
stc
adc
aaa
popa
cmp
cwtl
pusha
xor
in
push
mov
mov
movsb
jns
sub
sbb
mov
adc
imul
sub
add
pop
jo
das
ret
aaa
jae
inc
movntq
rolb
mov
mov
pop
push
in
jae
subl
loopne
mov
ja
adc
lahf
jo
pop
mov
clc
cmp
and
push
xchg
pushf
push
iret
daa
push
test
std
mov
xor
iret
jl
push
subb
lods
and
xor
or
or
dec
pusha
or
ss
shlb
negb
stc
sbb
cmc
cmp
mov
and
shll
jge
aam
ret
stos
test
je
xchg
loop
ljmp
push
inc
bound
mov
add
cmp
das
sub
insl
pop
mov
jbe
xor
imul
and
adc
push
xor
and
dec
pusha
adc
inc
sti
test
cmc
insl
repnz
rcll
push
js
sub
cmp
push
or
dec
dec
pop
stos
mov
mov
scas
notl
shrb
mov
sub
jns
mov
popa
shrb
add
mov
mov
aam
inc
loopne
add
lret
call
inc
mov
inc
into
push
fwait
xchg
xor
testl
leave
push
test
arpl
jge
jnp
fdivs
dec
pop
in
and
adc
push
mov
push
jecxz
dec
adc
cld
dec
out
cmp
and
ja
push
adc
pop
cmp
xor
xchg
dec
and
sbb
rorl
or
fidivs
jecxz
sub
add
repnz
popf
sahf
mov
add
fmul
movsl
test
test
es
aas
push
nop
rcr
insb
sti
mov
fwait
js
jbe
clc
test
addr16
hlt
cmp
addb
cwtl
scas
xchg
xlat
fcmovne
or
mov
in
add
adc
and
jb
adc
push
insb
fsubl
xor
xchg
es
das
mov
daa
shlb
repnz
mov
mov
push
rorb
rclb
cli
cmpsb
sub
in
repz
scas
inc
and
das
fs
lods
test
cmpsl
push
sub
je
jge
lahf
bound
sbb
pusha
sbb
sbb
cmp
sbb
and
lret
test
in
lahf
out
lock
mov
jl
in
or
push
xor
mov
jl
pop
jbe
iret
pop
push
dec
cmp
pop
in
push
add
nop
fstps
fstpt
ljmp
pop
mov
jp
std
dec
mov
adc
call
adc
cmpb
sarb
push
or
push
fucomip
test
jl
xchg
add
or
dec
pop
dec
sahf
in
aaa
jae
imul
fdivl
lock
mov
icebp
idivb
clc
push
rcl
adc
add
pushf
pushf
cmp
dec
xor
cmp
xor
popa
add
les
roll
loopne
and
scas
jae
sub
dec
lret
scas
jbe
pop
push
dec
mov
and
ret
aas
or
add
xor
sbb
scas
shlb
mov
repnz
dec
inc
inc
xchg
jae
cmpsb
jb
insl
fisttpl
mov
cld
adc
pop
out
int
pop
shrb
and
or
mov
push
jp
fwait
pop
lock
negb
aad
decb
aad
cmpsb
mov
out
xchg
sahf
cmp
xacquire
xorl
push
xchg
jo
sub
adc
cmp
mov
out
mov
mov
orb
mov
lds
xchg
jae
push
insl
mov
add
fsts
outsl
pop
jp
jmp
add
add
or
cmpsb
xchg
roll
rolb
xor
aam
xor
xchg
mov
sub
das
rcrl
push
xchg
insb
dec
call
mov
mov
rcrl
icebp
hlt
ret
xchg
cmp
push
sti
mov
mov
mov
mov
stos
sub
push
fisttpll
repz
cwtl
or
lods
mov
sub
add
shrb
mov
xor
rcrl
and
push
adc
mov
jae
cld
mov
mov
into
mov
or
dec
loop
inc
cmpsl
in
xorb
mov
push
fdivrp
mov
ret
jg
and
xchg
imul
cli
xchg
pop
cmp
int3
cs
cmp
pop
enter
pop
add
inc
fidivrs
jo
xchg
stos
xchg
imul
addr16
xor
jno
gs
xlat
mov
dec
mov
out
jns
sbb
cmp
push
repnz
es
xlat
sarb
add
inc
push
jae
mov
or
and
push
in
push
test
loop
sti
mov
mov
mov
lret
int
push
mov
jmp
dec
arpl
pop
push
xor
rcrl
and
add
xor
jnp
pop
inc
loopne
jecxz
pop
inc
test
clc
mov
ja
sub
jo
outsb
push
cmpb
sbb
repz
pop
dec
dec
stos
fs
mov
rol
add
xchg
inc
adc
cli
mov
sub
xchg
adc
mov
sbbb
inc
mov
repnz
sbbb
fdivr
insb
mov
pop
cmpsl
movsl
in
mov
push
and
sub
mov
xchg
push
and
imul
or
lock
mov
inc
jnp
mov
jne
sbb
mov
out
pushf
mov
aaa
rcrb
int3
lret
sbbb
test
bnd
ja
push
push
lret
rolb
jae
adc
faddl
mov
andl
repz
test
pop
sub
push
addb
test
clc
dec
dec
xor
mov
bound
push
in
addb
shrb
mov
push
or
scas
mov
ds
inc
xor
and
ja
out
mov
push
ret
xchg
xor
lahf
jg
push
pop
dec
push
cmp
jo
add
into
push
pop
add
out
adc
stos
push
aam
repnz
in
mov
int3
xor
jg
inc
filds
lret
add
mov
iret
ljmp
jg
push
les
pusha
lcall
dec
popl
lahf
mov
negl
shrb
sbb
dec
ljmp
aaa
adc
jne
enter
test
mov
or
or
arpl
cmp
cld
xchg
and
and
out
fsubs
cmp
mov
jnp
mov
lods
lcall
xchg
pop
int3
sub
or
out
lods
scas
std
mov
out
adc
jnp
cltd
and
dec
or
xchg
icebp
mov
push
cmpsb
push
stos
push
sub
adc
imul
fisubrs
lock
cs
cmp
add
imul
xlat
push
push
xlat
repz
lock
popf
xchg
pop
test
xchg
shlb
rclb
and
div
and
xchg
mov
cli
push
idiv
ret
ss
sbb
sbb
mov
fwait
jnp
xchg
daa
in
and
jbe
push
repz
mov
movsl
dec
xchg
lods
pop
rclb
lret
arpl
test
ffree
xchg
adc
mov
mov
or
mov
scas
insl
mov
mov
xorl
arpl
iret
cmp
cmpsb
jecxz
mov
movb
in
push
xorb
call
sub
sbb
sbb
jge
es
xchg
jns
shlb
or
arpl
into
repnz
fs
ret
nopl
imul
fidivrs
mov
and
int
and
loope
adc
lock
cltd
pop
push
jge
hlt
inc
movsl
inc
es
sbb
fldt
mov
call
push
inc
rcrb
ss
add
xchg
push
ficoml
imul
sub
ss
sti
bound
or
dec
or
mov
clc
test
pop
cmp
or
mov
fsubl
pop
das
mov
push
inc
ret
popa
or
or
pop
fcomps
dec
rcll
dec
inc
sbb
dec
in
imul
es
cmp
cmp
ljmp
das
test
test
imul
xlat
mov
mov
daa
push
scas
rcrw
pop
and
pop
aam
in
sarb
ja
sbb
sahf
jge
int
sub
mov
xor
lahf
pop
mov
or
imul
xor
mov
push
push
outsl
fld1
test
test
pop
imul
adc
sub
or
jmp
mov
mov
sub
cltd
test
shll
xor
test
inc
sub
out
fcmovnbe
int3
lret
daa
and
sahf
stc
imul
data16
mov
scas
data16
insl
ror
sbb
mov
adc
mov
cmp
adc
inc
mov
push
inc
mov
addr16
into
rcr
sahf
sbb
push
xor
addr16
das
fistl
sub
inc
xchg
pop
pop
leave
push
rol
and
inc
mov
jo
inc
xchg
mulb
push
test
icebp
rcrl
lahf
adc
popa
daa
negb
lods
xchg
add
mov
inc
insl
mov
cmp
add
ror
cmp
call
shll
sti
shlb
push
xchg
icebp
or
mov
jns
xchg
push
ljmp
xchg
mov
mov
out
cmc
gs
jle
ja
xor
lods
mov
gs
mov
inc
into
scas
cld
or
rcr
cld
push
into
sub
cmp
xor
inc
lods
and
lret
cmp
inc
fimull
jge
addl
cmp
push
stc
sub
cmpsb
sbb
add
sbb
add
xchg
loop
out
leave
addr16
out
lods
lahf
test
jl
shrb
in
aad
test
negl
or
scas
in
jecxz
int
dec
cltd
stc
xor
in
sub
mov
lea
xchg
cmpsl
push
imul
push
pop
sbb
cld
mov
stc
fdiv
push
dec
iret
in
movsl
jle
rolb
cli
iret
cmp
or
sbb
xor
cmp
xchg
stos
dec
orb
decb
mov
mov
and
enter
loop
scas
inc
or
pop
dec
cld
sbb
lret
fimull
fcoms
imull
pop
sbb
jl
jmp
jle
xor
aaa
outsl
ja
sub
nop
push
cld
xchg
inc
xchg
jns
mov
cli
scas
cmp
mov
xor
xchg
outsb
or
push
lds
scas
xor
or
push
jle
out
sbb
push
sub
xor
adc
jno
inc
mov
pop
cmpsl
cmp
adc
dec
cwtl
inc
dec
and
shll
xor
aam
xchg
rorl
call
or
or
push
fiadds
cmp
adc
in
ja
sbb
pushf
jbe
bound
push
dec
lock
push
or
xor
sub
jbe
cli
xor
mov
xchg
dec
mov
test
shlb
jb
ss
mov
outsb
pop
stos
int3
mov
xchg
xchg
daa
mulb
lret
jns
inc
cmp
mov
shl
xchg
cmp
inc
scas
mov
pop
cmpsb
dec
push
pop
repnz
and
fnstsw
fs
mov
pop
mov
mov
sub
pop
notl
test
mov
fwait
and
adc
fdivl
cmp
sub
in
sub
inc
in
jg
xor
mov
loopne
cli
add
cmpsb
fmul
pop
push
add
aam
mov
or
push
adc
jae
push
aam
mov
cmc
pushf
jne
pop
ss
push
imul
sub
scas
jno
mov
test
or
and
jecxz
mov
stos
jl
fldt
mov
and
jge
pop
jl
dec
push
lock
jbe
std
mov
mov
in
sar
enter
dec
dec
mov
rol
fmuls
adc
mov
addr16
push
mov
loope
inc
movsl
pop
out
leave
ffree
lods
add
mov
sub
ds
cmp
xchg
pop
shll
push
jae
outsb
xlat
inc
adc
inc
es
adc
loopne
imul
cwtl
mov
push
out
addl
add
fnsave
pop
call
cld
mov
fsubl
push
sar
add
cli
pop
popa
bound
shl
shrl
and
sbb
inc
les
imul
dec
and
jge
pop
sub
mov
inc
jle
add
dec
mov
mov
jns
ja
and
xchg
movsb
aaa
test
rclb
xchg
sub
mov
cs
and
cmp
lahf
or
jbe
mov
or
in
cmp
lods
pop
push
sbbl
out
ss
lret
dec
adc
gs
dec
mov
push
push
jmp
xorl
test
nop
and
xor
and
push
aaa
and
jnp
fidivrs
mov
bound
mov
aaa
test
cmp
loope
test
jne
insl
mov
pop
sub
push
push
repz
ret
mov
test
mov
sbb
mov
cltd
or
daa
xor
addr16
test
mov
inc
cmc
pop
pop
notl
sub
fstps
shrb
inc
je
xchg
inc
push
mov
xor
bound
sbb
adc
rol
out
clc
sbb
loopne
sbb
sbb
out
repz
lock
insb
adc
push
mov
icebp
adc
sbb
pop
inc
mov
pop
xor
sahf
inc
lods
dec
adc
or
ds
aaa
cltd
pop
int3
bound
arpl
sbb
jecxz
mov
dec
sub
ja
aas
mov
sub
dec
ror
jnp
shrb
int3
mov
mov
pop
lock
mov
outsl
movsl
ret
cmpsl
mov
push
fidivrl
xchg
mov
jo
sarl
pop
mov
push
pop
dec
sub
adc
scas
jmp
sub
testl
lret
xchg
subb
and
add
and
pop
cmpsl
arpl
shr
cmpsb
sbb
pop
int3
ret
test
data16
negl
je
xchg
jg
add
mov
adc
lds
add
sbb
mov
cmp
mov
outsb
faddl
lock
fwait
std
add
cmp
dec
in
cmp
aaa
mov
and
fbld
fadd
cmp
outsl
adc
les
mov
pop
adc
lods
sahf
fmull
pop
pop
insl
clc
pop
clc
xchg
xchg
test
lock
xchg
jl
ja
xchg
or
pop
jbe
or
sti
sub
and
mov
mov
xchg
arpl
popf
int3
adc
mov
xor
sbb
mov
mov
test
les
in
jb
jnp
out
lods
inc
dec
dec
sbb
imul
test
sbb
and
adc
test
xor
mov
mov
xchg
das
pop
loope
and
push
dec
icebp
cli
add
pop
adc
outsb
cwtl
cli
or
add
add
shl
mov
push
sbb
rcl
mov
ret
std
push
clc
pop
test
pop
lcall
pop
aam
sbb
and
shr
shll
fistl
dec
mov
nop
push
xchg
xchg
pop
sub
and
addr16
cli
cltd
sub
cmpsl
fcomps
inc
push
jnp
insl
jge
outsb
xchg
enter
pop
mov
call
adc
repnz
xchg
lret
mov
xor
cltd
inc
cmp
or
mov
pop
cmp
jne
inc
xor
lock
in
sahf
ret
loopne
movsb
push
dec
rolb
cld
gs
xchg
xor
in
and
cmpsl
xchg
pop
mov
int
push
out
shl
les
sub
push
mov
inc
mov
xor
pop
ds
inc
repz
inc
sub
es
add
or
popf
js
fsub
mov
das
sbb
sub
or
cs
jb
call
fldt
loopne
lret
fisubs
aad
shrl
sarl
cmp
scas
mov
xchg
mov
jl
pushf
push
inc
cmc
add
clc
push
out
jo
adc
adc
in
cmpsb
repnz
mov
lahf
loopw
sbbl
in
inc
mov
jp
add
test
pop
inc
xchg
pop
sti
push
sub
push
icebp
cmp
test
push
mov
inc
mov
test
stos
inc
bnd
push
sub
sbbb
lahf
lods
bound
shlb
push
push
xor
xor
aam
sbb
lods
cli
leave
pop
mov
movsl
pop
loop
movsb
push
gs
xchg
mov
sub
es
mov
xor
iret
dec
fnsave
mov
icebp
jecxz
dec
add
nop
adc
xor
jle
loopne
or
mov
pop
sbb
and
inc
push
cli
insl
adc
ret
fimull
sbb
cld
das
sub
mov
cmpsl
in
jmp
mov
out
lcall
pop
fisubs
lcall
fs
sub
out
cmp
sbb
mov
mov
xchg
addr16
hlt
movlps
fldenv
mov
sbb
nop
outsl
stos
adc
stc
ret
jnp
jnp
arpl
imul
gs
and
or
mov
mov
adc
mov
bound
out
imul
int
lds
cmpb
insb
xor
lcall
mov
repz
test
push
repnz
inc
mov
inc
inc
mov
xorl
jae
or
mov
aad
add
push
jns
sbb
jp
cmp
inc
test
mov
push
mov
add
push
call
imul
sahf
xchg
popf
rcr
push
rcll
in
pop
fisubrl
mov
dec
inc
clc
cmc
inc
lea
xchg
cmp
sub
lods
jnp
scas
lods
pop
enter
int3
pop
std
or
inc
and
pop
mov
dec
xchg
mov
xchg
jl
pop
sub
and
add
loope
cmp
jnp
jge
clc
out
fstl
test
jmp
cmp
pop
aas
clc
ret
xor
fs
and
cmp
iret
add
mov
cmc
pop
mov
cli
dec
repz
in
js
popf
push
mov
and
xlat
jg
cs
adc
repz
aam
mov
arpl
xchg
lcall
push
sub
jg
cmpsl
sub
dec
push
jecxz
xchg
stos
xchg
das
and
lods
cmp
xchg
js
xor
test
stos
pop
push
adc
xchg
cli
incb
pop
pushf
outsl
int3
or
xchg
xchg
fidivl
mov
mull
jp
and
jecxz
mov
int
mov
adc
and
or
aas
cltd
mov
loopne
dec
call
outsb
inc
rcrl
and
imul
pushf
push
sub
push
adc
arpl
es
test
sahf
cmp
loopne
pop
mov
dec
jae
pop
pop
subb
inc
divl
aad
or
xchg
out
cmp
out
inc
push
enter
data16
int3
mov
dec
xchg
bound
inc
inc
push
push
cld
push
xchg
xchg
push
mov
out
stos
push
movsb
movsl
xlat
fwait
sub
cmp
int3
divl
adc
xchg
sub
fstpt
pop
jmp
jb
pop
jb
xor
pusha
rclb
sti
call
ret
dec
in
jg
and
sbb
mov
into
fcoms
push
cltd
mov
mov
loop
addb
mov
fwait
roll
aad
fptan
lds
in
mov
xchg
fdivrl
sbb
rolb
enter
ret
sahf
push
cltd
add
cmp
outsb
stc
ror
addl
push
xchg
add
or
jnp
adc
sbb
sbb
and
pop
adc
xor
cs
loop
loope
xor
stos
pop
sub
pop
cltd
and
xchg
test
adc
jge
jne
stos
push
aas
mov
cmp
das
cmp
sbb
adc
jo
adc
cmpsl
or
mov
mov
mov
push
mov
inc
jl
xor
shll
mov
mov
pop
or
or
pusha
cmp
sbb
jle
mov
dec
in
mov
lock
sbb
pop
in
inc
jge
leave
je
aas
outsb
inc
mov
pop
push
aas
rorb
pop
fstl
xor
test
mov
dec
inc
pop
iret
jp
pop
inc
pop
add
repnz
loop
cwtl
xchg
or
add
mov
mov
aam
insl
jmp
sti
xchg
shll
pop
aad
loope
jb
mov
sbb
cmp
repnz
lcall
lret
int
lods
popf
test
aaa
mov
loopne
cmp
in
hlt
fs
pop
inc
clc
daa
cld
cmpsb
push
sbb
push
push
fwait
sbb
sub
icebp
sbb
js
rcr
gs
xor
jb
add
aam
cmc
mov
inc
addl
xchg
adc
js
mov
lods
aaa
mov
pusha
jge
pop
mov
jno
out
es
fbstp
jb
adc
mov
adc
rcll
add
call
add
xor
jp
mov
jge
mov
jns
fdivrl
std
lds
iret
fcoms
or
scas
jns
mov
aam
or
add
add
jns
clc
popa
out
addr16
movsl
mov
out
lods
xor
cltd
pusha
gs
mov
pop
dec
cwtl
nop
stc
insl
cmpsb
mov
imul
and
sbb
mov
inc
mov
mov
popa
addr16
xchg
in
jno
mov
scas
scas
sbb
push
arpl
cmpsl
pop
cmp
shr
sub
push
pop
subl
cmp
mov
ret
fwait
mov
push
fs
js
sbb
sbb
cmp
hlt
xor
mov
sub
and
nop
xchg
cwtl
cmp
mov
imul
adc
and
mov
sub
je
or
orl
divb
faddl
pop
jecxz
loopne
daa
jg
loope
dec
add
jbe
pop
lea
xor
mov
enter
and
mov
or
sub
xchg
mov
xchg
cmp
lods
jecxz
cmc
sub
add
push
fs
mov
js
fbstp
inc
adc
push
pop
adc
ret
mov
repnz
lock
adc
lret
icebp
xor
sbb
in
mov
push
ds
mov
pop
testl
lret
cli
ror
mov
lea
xor
mov
dec
jo
adc
mov
sub
sbb
pop
pop
in
push
jp
mov
shr
xor
int
and
dec
pop
addr16
std
mov
inc
sbbl
lahf
call
pop
jne
scas
sbb
push
xchg
aad
lds
pop
lcall
pop
dec
lret
mov
adc
pop
jmp
loop
add
test
enter
ficompl
push
call
cmp
fsubs
outsb
pop
xchg
fcomps
mov
push
cwtl
inc
inc
jge
cmp
ss
lahf
adc
popf
lret
jae
loop
inc
push
stos
inc
mov
jle
roll
scas
aas
outsl
sbb
sbb
mov
bound
fstpl
xchg
mov
cltd
pushl
inc
jne
dec
insl
insl
or
push
rolb
add
mov
enter
addl
das
xchg
out
repz
mov
subb
add
repz
or
add
in
add
scas
out
xor
push
xor
incb
pop
in
or
loope
and
and
popa
fnstsw
nop
jne
cmp
xor
out
mov
mov
enter
sbb
sub
jne
mov
test
je
test
dec
xchg
leave
pop
mov
mov
and
inc
and
lods
dec
int3
cmpsb
jg
cmp
lcall
xchg
aas
xor
push
pushf
dec
cmpsl
pop
loop
int3
or
sub
jmp
push
test
push
jno
xor
in
xchg
xor
lock
sbb
test
in
mov
xor
cli
loop
movsl
outsl
cmp
sbb
ss
cmp
int
imul
iret
and
dec
dec
out
mov
mov
xorb
aam
adc
sbb
pop
mov
dec
mov
cmp
cmp
adc
rcrb
cmc
and
icebp
mov
mov
mov
insl
sbb
inc
aam
or
add
dec
imul
imul
dec
std
jno
ja
movsb
outsl
cld
xchg
adc
mov
xor
popa
aad
enter
das
das
imul
pop
jns
add
or
loop
iret
mov
adc
aam
in
in
mov
inc
js
push
fwait
lcall
loop
sub
mov
iret
pop
std
xor
out
gs
xor
jl
cltd
jo
outsb
loope
mov
lods
test
adc
jle
inc
int3
push
in
je
jns
aaa
fstpt
inc
jl
ret
push
aas
test
push
imul
icebp
sbbb
pop
iret
adc
jle
mov
cmp
cs
mov
cmp
inc
pushf
sbb
xlat
xchg
ret
pop
xchg
push
or
cmpsb
push
in
fs
inc
xor
mov
push
mov
test
enter
out
dec
arpl
or
int
pop
pushf
sbb
divl
bound
aaa
out
add
setno
in
xchg
adc
fdivr
lods
cs
das
stos
mov
add
lea
sbb
or
addr16
jnp
sbb
cld
test
aaa
jae
mov
add
adc
mov
je
out
lcall
outsl
pop
lods
mov
sbb
int
cmp
lahf
popf
idivl
sub
xchg
sar
or
xor
xchg
dec
mull
movsl
ljmp
inc
ljmp
xor
cmp
in
mov
imul
mov
test
insb
jmp
xchg
jg
addr16
lods
mov
xchg
jg
fsubrp
adc
ret
aaa
jno
icebp
dec
idiv
push
mov
addr16
mov
mov
cmp
push
fsubl
das
je
jno
mov
jmp
stos
sbb
cmp
setae
mov
cmp
ret
pop
lock
mov
stc
jl
adc
sahf
push
fucomp
lahf
cmp
nop
out
dec
mov
testb
std
out
jno
sbb
sub
stos
pop
push
popf
hlt
fcompl
mov
fisttpl
shl
pop
aaa
movsl
inc
cmp
popl
bound
sti
xchg
insl
ret
cmp
pop
xchg
addr16
dec
scas
daa
mov
sbb
mov
sub
jp
std
xor
mov
push
xor
cmp
mov
scas
call
ds
ret
push
jecxz
adc
xor
inc
cmp
js
inc
idivb
sbb
stos
jl
inc
ja
mov
fs
pop
call
mov
mov
inc
pop
popa
cwtl
fwait
outsb
rcr
ret
sbb
movsb
pop
sbb
iret
sbbb
add
cs
sbb
add
cs
lea
call
lret
das
cmp
jnp
roll
psllq
stc
mov
fimull
or
inc
mulb
and
loope
out
jo
sti
aaa
negb
mov
cmpsb
fwait
outsl
fwait
inc
popw
dec
pop
mov
mov
movsl
data16
lahf
repz
mov
push
mov
xchg
lock
mov
jmp
icebp
mov
insb
ret
inc
stos
or
push
mov
cmp
mov
push
sbb
repnz
test
mov
inc
cld
in
jne
jae
cld
jns
inc
push
into
ds
scas
movsl
outsb
jbe
pop
pop
and
mov
sbb
jle
jle
dec
dec
lahf
aas
int
ror
mov
daa
and
mov
fimull
cld
pop
daa
sub
mov
call
adc
mov
inc
jg
sub
inc
iret
push
pusha
jp
pop
cmc
or
arpl
pop
add
inc
repnz
dec
sbb
pop
xor
daa
scas
lahf
fcoml
jl
out
adc
cmp
in
lret
ds
ss
iret
aaa
call
fnstenv
push
jle
out
lea
adc
sub
inc
mov
cmpsl
inc
add
shlb
mov
xchg
mov
add
loop
rorb
add
repnz
lcall
add
mov
pop
int3
ja
mov
pop
mov
out
sbb
cltd
mov
lea
xchg
in
bound
pop
push
sub
out
scas
out
cltd
cltd
iret
cld
jp
ja
pop
push
pop
inc
xor
mov
and
dec
les
lds
int
je
push
iret
addr16
in
cltd
sbb
mov
cmc
out
lods
sbb
pop
mov
jl
adc
jmp
shrb
shll
mov
rcrl
jecxz
aam
jle
sub
xchg
mov
xchg
mov
and
xor
ficompl
or
jmp
sub
push
push
pop
shll
ds
jle
stos
pop
addr16
out
mov
into
sub
inc
pushf
fdivrs
xchg
jp
push
xor
jl
inc
addr16
mov
in
lock
xchg
pop
adc
sub
rcl
push
xchg
push
push
repz
stc
iret
std
pop
call
adc
lcall
movsl
sbb
cmp
push
divl
daa
and
xchg
nop
test
enter
xor
xor
mov
movsl
push
aaa
fcomps
adc
cmc
jle
daa
test
call
sub
sbb
adc
inc
push
popa
mov
out
mov
mov
aam
inc
addr16
ret
loopne
int
xor
repnz
icebp
jp
imul
out
xchg
or
outsl
call
arpl
je
das
out
mov
xchg
in
mov
inc
scas
or
imul
dec
js
test
mov
pop
adc
push
int3
push
or
fs
pop
push
lds
enter
das
dec
cmpsl
fwait
inc
cmp
pop
xchg
arpl
adc
mov
mov
jns
pop
dec
cmpsl
or
fs
jmp
jnp
div
cmp
push
lcall
xor
in
icebp
incl
add
push
aas
add
lret
push
aaa
jmp
xchg
xor
xchg
std
sub
pop
inc
jle
xchg
xor
and
sbb
ss
ss
xlat
push
push
lods
popf
cmpsl
mov
ror
sub
add
push
imul
mov
incl
mov
hlt
stos
jl
lcall
xchg
lock
cmc
fwait
iret
push
in
and
xchg
bound
mov
icebp
das
test
push
mov
mov
inc
xchg
mov
fwait
mov
cmp
mov
jmp
int
ror
ret
call
and
cmc
push
mov
mov
lcall
je
mov
cmpsb
adc
jns
sub
jg
mov
insl
mov
fwait
cmp
bound
or
jle
ret
pop
inc
push
sbb
imul
flds
es
or
jno
shr
repz
rcrl
scas
sbb
mov
mov
and
and
sahf
inc
sbb
xor
aam
pop
push
inc
lret
sub
je
inc
test
insb
scas
popf
clc
sub
sahf
xorl
add
push
jns
xchg
cmp
inc
mov
pop
aaa
mov
js
inc
std
out
mov
ja
cmpsb
lahf
dec
lods
aad
inc
into
lods
cli
pop
pushf
stc
sbbb
mov
insb
xchg
nop
mov
cmp
xchg
cmp
fidivrl
xor
cmpsl
add
idivl
shl
mov
iret
adc
mov
pop
sti
mov
cmc
jle
rcrl
enter
icebp
mov
clc
lret
jp
cli
adc
jnp
and
cwtl
pop
sbb
or
lcall
repnz
push
pop
mov
sbb
jnp
jmp
outsb
inc
jecxz
rclb
xchg
xor
pop
inc
out
pop
pop
pop
movsb
test
lret
sbb
and
insb
imul
jge
xchg
cmp
mov
cwtl
scas
cmp
leave
cmc
bnd
test
aam
aad
jp
add
scas
leave
gs
pop
in
stos
shlb
loop
sub
and
mov
les
mov
xor
pop
xorb
mov
scas
shl
mov
pop
jp
into
xor
adc
sbb
sbb
pop
xchg
add
inc
jecxz
lods
test
or
jno
repz
clc
or
add
out
mov
mov
int
adc
mov
sbb
and
decl
pop
or
andl
mov
cmp
stos
jge
lret
pop
pop
cld
pop
mov
add
ljmp
popa
push
mov
outsl
add
dec
sbb
push
mov
test
subl
pop
scas
outsl
cmp
dec
sub
push
mov
xchg
sbb
ret
push
and
cmpsb
data16
dec
mov
mov
and
cmp
fcomps
jmp
out
out
xor
sub
pop
dec
xchg
leave
xor
out
adc
cmpsb
cmp
lods
test
sbb
mov
inc
fisttps
xor
test
mov
pop
movsl
mov
and
scas
pusha
add
push
lcall
popf
leave
enter
sub
cmpsl
aas
and
sub
mov
inc
mov
pushf
xchg
je
pusha
or
and
jmp
mov
jp
jmp
push
or
les
stos
or
xchg
into
lock
int3
pop
pop
cmp
out
data16
xor
jecxz
in
imul
jae
test
out
fwait
dec
jp
out
testb
cld
fs
push
in
shlb
rcrb
jl
inc
cmc
lods
popf
shlb
sbb
pusha
jp
imulb
xor
shrb
mov
mov
rorb
pop
inc
out
cmp
clc
adc
rolb
mov
inc
scas
add
xlat
out
push
cmp
das
sbb
add
mov
xchg
je
push
popl
push
sub
dec
dec
mov
repnz
sbb
iret
mov
pop
sbb
jae
mov
in
ds
fs
xor
or
push
popa
mov
and
mov
clc
jmp
bound
or
push
lock
arpl
ljmp
sub
aaa
mov
mov
mov
movsb
mov
int
pop
sbbl
loope
or
fnstcw
jae
or
jmp
jnp
fwait
test
push
mov
and
movsb
shlb
jle
add
ret
into
jbe
pusha
jp
lods
jns
jbe
stos
cmp
inc
adc
jge
lock
in
sbb
adc
adc
dec
fwait
add
push
push
jno
jecxz
je
or
imul
mov
inc
mov
movsl
pop
pop
js
sbb
add
mov
out
dec
inc
inc
add
out
fbld
adc
loopne
mov
in
mov
xor
es
test
dec
mov
dec
cmp
bound
lahf
stos
push
pop
jmp
jge
and
cmpsl
sub
add
and
pop
lods
loope
inc
es
aam
lock
imul
fcomip
ja
cli
icebp
mov
mov
test
sahf
cmpsb
lcall
rorl
mov
jp
or
or
mov
jns
mov
xchg
aad
ror
imull
imul
lret
sahf
ds
xor
lea
cli
dec
add
mov
push
xchg
ja
mov
and
pop
xchg
cmc
mov
push
pop
xchg
sti
arpl
mov
and
sahf
push
mov
in
sarl
mov
sar
inc
dec
cmp
lahf
inc
jae
nop
iret
sub
loop
in
dec
dec
xchg
faddl
cmp
mov
sti
insb
jns
int3
or
mov
xor
es
aas
mov
fs
mov
addr16
jbe
dec
mov
es
lods
add
cmpsb
sar
and
clc
xor
and
xor
sub
xchg
pushf
stos
enter
mov
cmpsl
mov
js
arpl
dec
inc
cmp
inc
cmp
das
or
stos
aas
mov
fldcw
pop
cmp
xchg
or
orl
aas
add
jg
incb
pop
dec
push
jne
gs
test
clc
inc
mov
fsts
sbb
xchg
mov
into
push
mov
data16
sbb
jge
cmp
inc
jge
iret
aad
mov
dec
sub
push
mov
mov
dec
cmp
jp
pushf
scas
add
fwait
inc
std
cwtl
fsin
dec
xlat
ficoms
adc
sahf
or
push
cs
enter
pusha
out
in
sarl
pusha
sbb
adc
fiadds
or
nop
inc
inc
cmp
mov
pop
sub
or
rcrl
out
or
add
xchg
mov
cmp
or
out
adc
xor
inc
lods
dec
iret
and
rol
jb
mov
xlat
jmp
and
and
std
das
pop
mov
je
stc
jecxz
xlat
int
fadds
mov
test
xchg
pop
std
movsl
jae
repz
push
outsb
jp
inc
insb
imul
test
cmp
sbb
lds
test
imull
jl
sbb
sub
out
out
aam
pop
and
imul
add
cmp
mov
push
movsb
icebp
dec
mov
out
pop
pop
popa
pop
rclb
std
cmp
mov
fcom
mov
dec
iret
bts
cmp
xchg
cmpsb
stc
loop
push
sti
jl
sbb
arpl
and
jge
mov
int3
imulb
in
mov
enter
mov
push
sub
outsb
xchg
mov
lcall
loopne
inc
cmp
xchg
sti
nop
mov
cs
daa
gs
mov
xor
dec
push
lcall
push
and
pop
divb
scas
xchg
out
scas
sub
ss
pop
test
push
and
jmp
mov
notl
ljmp
pop
outsb
push
lds
add
add
xor
addr16
or
xor
cmp
dec
repz
sub
sub
and
adc
test
adc
add
cld
inc
add
and
adc
mov
lahf
cld
xchg
sahf
sbb
fstl
mov
add
into
dec
sbb
out
jne
mov
popf
fnstcw
cld
adc
imul
sbb
sbb
or
sub
jne
jmp
pop
add
out
imull
scas
inc
fucomp
call
rorl
je
and
test
ljmp
aam
jg
int
mov
xlat
shlb
cmp
test
ret
repnz
ss
sti
sub
insl
dec
loope
cmc
xlat
int
mov
sbb
inc
aaa
mul
fstps
xchg
jo
bound
pop
loop
or
mov
cltd
mov
rol
xchg
rcl
push
inc
loopne
scas
pop
test
mov
mov
ret
inc
adc
mov
jne
or
mov
aas
xor
sti
testl
ss
sub
xchg
push
fstps
push
lret
addb
jnp
jmp
inc
inc
pop
xchg
lcall
arpl
xchg
cs
jb
test
pop
cmc
or
push
stc
fsubrs
out
cltd
mov
xor
mov
dec
adc
mov
or
sarb
ret
mov
xor
hlt
add
cmc
inc
mov
outsl
sti
rcll
mov
ja
cmpb
repz
jecxz
fsubp
imul
sbb
xor
and
dec
sti
orl
dec
mov
movsl
mov
data16
mov
incb
outsb
sti
xchg
stos
xchg
pushf
push
jp
stc
push
lock
inc
scas
stc
mov
out
ss
push
das
cld
loope
xlat
inc
sbb
frstor
cmp
and
xor
mov
jle
sahf
hlt
fsubrl
or
push
ja
mov
sbb
js
mov
jmp
in
clc
dec
iret
lods
sub
leave
adc
cmpsl
dec
adc
in
adc
in
pop
mov
xchg
or
ja
mov
sahf
ds
mov
cmp
sarb
or
mov
in
in
add
int3
imul
sti
lock
cld
sbb
repz
fwait
xor
or
aam
and
fisttpll
pop
cmc
sbb
or
mov
js
sub
xchg
and
dec
xor
jne
mov
fwait
or
sub
pop
and
xchg
pushf
push
jg
ret
pop
int
push
fcoml
popf
dec
sub
adc
jmp
mov
xchg
insb
ds
pusha
aad
in
rol
movsl
ljmp
mov
xchg
jnp
icebp
sarl
fnstenv
outsl
push
es
or
out
cmpsl
mov
repnz
dec
sbb
out
fdivrp
jl
fisttpl
pop
fs
sbb
pop
fcomps
mov
repnz
out
mov
mov
dec
inc
les
or
inc
jg
push
lret
repnz
ret
adc
and
dec
and
xchg
jb
sbb
je
jnp
mov
fs
test
les
dec
jns
cmpsl
xor
mov
xchg
adc
push
stos
scas
gs
push
mov
pusha
xor
scas
jb
pushf
fcoml
or
or
lods
in
dec
outsl
push
dec
fwait
in
jmp
pop
daa
jbe
jmp
outsl
cwtl
ljmp
mov
leave
xchg
repnz
mov
mov
dec
scas
add
mov
add
mov
inc
adc
mov
push
and
and
inc
and
cmp
fwait
inc
xor
pushl
mov
sbb
inc
mov
inc
inc
and
arpl
mov
pop
lahf
dec
loope
xchg
jb
cmp
fmulp
sbb
jns
jecxz
jmp
cltd
dec
mov
push
xchg
sbb
xor
stc
pop
in
push
push
xor
fs
push
jne
jno
rcr
jmp
pop
push
mov
stc
shll
je
fmull
aas
sbb
cltd
iret
daa
dec
aad
and
insb
sub
cld
icebp
jns
call
mov
pop
xchg
test
xchg
dec
xor
mov
inc
jle
inc
ss
mov
sub
movb
fimull
xchg
lea
mov
cli
call
movsb
decb
xchg
outsb
cli
dec
jp
mov
sub
inc
mov
movsb
push
mov
out
fsubrp
mov
inc
and
mov
and
cli
xchg
mov
pop
aas
loopne
push
imul
mov
mov
repz
add
cmc
inc
lds
sub
and
jge
call
call
cmpsl
mov
and
fiaddl
jae
push
mov
sbb
dec
aas
movl
lret
std
add
inc
push
mov
mov
lret
cmp
xor
or
hlt
mull
cmp
xor
mov
sbb
inc
dec
mov
xor
and
rcr
inc
pop
dec
adc
lods
frstor
lods
sahf
loop
jo
cmpsb
test
inc
mov
mov
push
or
adc
js
lret
adc
lea
je
push
int3
jo
xor
dec
aam
or
lret
ljmp
rcll
iret
imull
scas
fildll
cmpsb
or
and
cmc
add
scas
jne
pop
shl
jg
and
sbb
gs
cmp
stos
cs
rol
mov
inc
sub
aad
xor
push
and
cmp
aad
into
and
mov
sub
adc
fisubrl
or
pop
mov
sub
xor
mov
jl
dec
jl
lahf
mov
pop
test
out
pop
outsb
pop
dec
pop
xchg
jnp
popa
xchg
sub
cltd
push
fst
xor
arpl
push
and
popf
out
idivb
cld
push
rorl
insl
sbb
outsl
push
loopne
flds
push
ljmp
mov
lock
es
mov
lods
push
lock
or
sub
es
outsb
sahf
xor
pop
jns
mull
jo
add
pop
call
call
out
jp
das
mov
mov
mov
adc
fistps
and
fcmovb
mov
rcrb
mov
in
mov
inc
pop
stos
fildl
out
cli
mov
sti
movsl
xor
aad
pop
loope
inc
or
js
inc
les
push
repz
cltd
popa
lods
mov
dec
out
subl
pop
push
cmpsb
aaa
add
sar
mov
popf
movsb
cmpsl
movsl
push
pop
lods
sahf
cmp
mov
insb
das
fcoms
loop
pop
mov
mov
jmp
fistps
add
sbb
xor
adc
xor
loop
xor
xchg
xchg
std
lcall
inc
stos
pop
lods
cs
popl
popf
stos
es
mov
int3
pop
pop
sbb
lea
fcompl
enter
push
cmp
in
xor
test
xchg
loopne
clc
cmp
sub
les
push
pop
fcmovbe
dec
push
xchg
in
adc
add
xor
cmc
aas
cmp
pop
lods
leave
cmpsl
arpl
pushf
in
sbb
dec
inc
mov
inc
push
mov
mov
mov
aas
insl
std
sahf
sbb
cmp
xchg
aaa
xor
mov
jmp
rcr
fwait
jle
jmp
sbb
cltd
iret
add
stos
stc
jo
xlat
dec
insb
cltd
jbe
cmp
cmp
inc
inc
sub
fcomps
jp
xchg
push
pop
and
movb
push
outsb
cmp
pop
push
lcall
shlb
mov
jp
in
sbbb
push
shrl
repnz
ret
mov
sub
nop
or
fdivrl
adc
pushf
push
jmp
mov
test
mov
add
in
jae
add
mov
in
jg
in
shrb
mov
rolb
ss
or
cmc
pop
aas
iret
int3
addr16
push
sahf
outsb
ja
cmp
dec
sarb
notb
cltd
bound
mov
ret
orb
lret
sub
xchg
lods
adc
popf
mov
xchg
push
insb
roll
sbb
mov
cmp
fisttpll
xor
aam
aam
or
push
mov
movl
ds
sbb
mov
cmp
test
loop
lahf
dec
iret
adc
mov
mov
outsl
out
cmp
mov
nop
push
mov
adc
xchg
fs
int
imul
xchg
cmpsb
testb
imul
lods
gs
rorl
ljmp
cwtl
xor
pop
in
imul
shl
repnz
jl
pop
cs
movsl
pushf
dec
addb
sti
mov
bound
push
sbb
ss
fwait
arpl
jne
pop
leave
in
in
sub
shlb
andps
in
lods
add
stc
movsb
lods
call
imul
bound
push
adc
stos
enter
xchg
pop
add
sbb
xor
add
outsl
inc
movl
outsl
pop
jg
aaa
sti
hlt
dec
xor
cmpsb
add
and
call
mov
adc
mov
sti
adc
jb
or
ret
mov
mov
pusha
repz
sbb
out
xor
sub
icebp
imul
scas
mov
sbb
addr16
jbe
jb
inc
icebp
inc
add
clc
jle
psadbw
arpl
sub
nop
cli
mov
or
jne
popf
mov
mov
mov
test
mov
cmp
ret
loop
sbb
cmp
shrl
roll
sbb
iret
aam
or
cmp
adc
jno
push
cmp
mov
ret
mov
scas
ds
or
push
sub
in
add
leave
xchg
out
dec
jmp
adc
mov
mov
ss
dec
imul
mov
mov
rcrb
scas
xchg
mov
fsubp
repz
cmp
dec
in
mov
mov
inc
or
push
dec
notb
int
out
cmc
and
faddl
mov
cltd
pop
cmp
sbb
aam
pop
dec
pop
sbb
arpl
daa
jbe
aas
fnstsw
and
inc
and
cmp
push
and
sbb
dec
hlt
mov
mov
push
fistl
mov
mov
jmp
paddusb
loopne
fs
lods
jmp
push
cmp
pop
decl
iret
repz
shl
int3
lret
sub
push
out
ljmp
xor
pop
sub
xor
mov
xor
mov
jle
insl
sbb
mov
cmpsb
out
and
mov
in
xchg
in
out
mov
iret
imul
int
int3
fsts
cmp
sub
pop
lock
cli
sub
push
int
in
popf
xchg
push
xor
dec
cmp
jne
lock
pushf
mov
inc
push
mov
mov
loopne
fs
mov
xchg
lret
call
sbb
cli
mov
cli
out
lods
fisubl
daa
xchg
lods
rclb
mov
mov
mov
lret
pop
cmpsb
popf
mov
sbb
rcrb
lds
test
cmp
ret
loop
xchg
lea
pop
xor
or
loop
pop
loope
fwait
aaa
out
and
mov
and
dec
out
jl
pusha
cmp
lret
ret
lock
xchg
dec
and
cmp
jbe
cmp
das
ja
dec
addr16
sahf
pop
inc
sbb
mov
or
out
fildl
jg
mov
cmp
cmp
or
push
out
inc
mov
mov
add
xchg
rcll
andb
cs
push
insl
clc
sub
jecxz
lcall
jo
adc
sub
arpl
inc
clc
aad
xor
mov
outsb
xchg
sbb
xlat
js
ja
aaa
jecxz
test
or
jmp
ret
mov
inc
jg
or
jo
mov
cs
push
les
xor
subl
in
cmpsb
mov
xchg
and
bound
mov
and
sbb
or
ret
xchg
test
rorb
or
loope
icebp
push
scas
pop
xchg
repz
mov
hlt
cmpsb
cmp
adcl
add
mov
scas
mov
add
jae
xorb
mov
or
lods
dec
sbb
fisttps
stc
repz
push
mov
mov
jns
lret
mov
in
pop
movsl
test
and
jl
dec
sub
int3
adcl
jae
push
insb
outsl
scas
adc
push
roll
popl
xchg
xor
fs
xor
cli
push
adc
dec
dec
cmp
pop
jecxz
aaa
cmp
inc
jg
push
jg
les
and
jge
mov
mov
repnz
or
adc
lock
imull
or
das
mov
lods
mov
frstor
mov
fistps
push
lea
nop
test
push
mov
xchg
addr16
push
jp
aam
jo
or
mov
js
fs
push
repz
jo
es
sub
out
push
sarb
test
fcomip
jmp
sub
scas
xchg
stos
lcall
push
jge
or
push
push
jge
push
adc
adc
and
mov
lds
or
cmp
dec
jo
bound
cmp
sahf
xchg
popf
mov
gs
or
jg
or
sbb
out
divb
or
ret
fwait
adc
add
fwait
xchg
adc
scas
rcl
push
in
out
jp
aam
pop
adc
jne
add
cmc
dec
push
std
push
lret
iret
movsl
sbb
rolb
ljmp
mov
cmpsb
mov
outsl
into
add
xorl
xor
int3
push
fscale
dec
or
mov
jp
cmp
filds
enter
add
mov
add
pop
dec
shll
sub
repnz
gs
xchg
call
mov
stc
xchg
ds
jl
mov
aam
xchg
inc
dec
cmpsb
pop
cmp
mov
insb
leave
and
ss
jbe
arpl
sub
sahf
shlb
js
sub
sub
inc
fstpt
mov
stos
sub
inc
in
mov
fistps
dec
adc
in
inc
aaa
hlt
xchg
paddw
dec
mov
mov
sbb
sub
or
shll
cmp
idiv
stc
xchg
push
xchg
and
pop
pop
cmpsb
clc
scas
jae
mov
inc
and
or
sbb
jae
bound
xchg
aas
sbb
nop
loope
inc
data16
inc
jl
pusha
sbb
cmpsb
cltd
sub
cmp
aad
add
cltd
xor
test
je
mov
out
roll
mov
pop
adc
jg
cmc
andl
mov
jmp
ror
jbe
cld
sti
into
aaa
mov
xor
fcmovne
mov
arpl
inc
adc
loopne
push
dec
es
cmpsb
jnp
cmp
pop
jg
mov
lods
jne
pushf
jne
xchg
mov
pop
ljmp
das
xchg
pop
jmp
fsubrl
sbb
lahf
fisubl
mov
clflush
movsb
movsb
xchg
lcall
add
popf
scas
pop
ljmp
inc
jo
xchg
mov
insl
push
iret
xor
sarb
cld
dec
icebp
adc
sbb
fdivs
les
lahf
outsl
xchg
repz
cmpsl
std
lods
cmp
mov
inc
mov
inc
cmp
xchg
lret
push
sub
jne
movsb
out
mov
call
push
cli
sbb
cli
xchg
xor
stos
rol
movsb
jne
je
call
mov
add
loop
or
lods
arpl
sbb
aam
scas
ss
pusha
jle
aam
xor
dec
mov
jmp
icebp
fs
xlat
mov
popa
movsl
lock
adc
cmp
push
jnp
and
loope
frndint
arpl
cmp
lret
pop
mov
inc
adc
jb
je
xchg
repz
xchg
stos
sub
add
mov
or
repz
add
aam
or
dec
and
dec
hlt
xor
sub
fidivrl
mov
xor
sub
push
sub
xchg
mov
fldcw
push
das
adc
add
out
fnstsw
mov
jmp
lret
mov
inc
aas
mov
jmp
xchg
vfmaddsub231ps
jae
cmpsl
das
mov
add
fimull
mov
bound
stc
in
roll
aam
repz
or
push
dec
jae
imul
test
xor
push
xchg
jb
popf
sti
sarl
sbb
dec
js
into
push
mov
jecxz
hlt
call
dec
xor
xor
xchg
inc
xchg
push
mov
mov
mov
filds
add
lods
mov
std
out
cmp
int
push
repz
ljmp
adc
xor
sbb
xchg
push
jecxz
sub
mov
xchg
das
mov
xchg
mov
aas
mov
mov
pop
pop
cmp
push
les
sbb
cmp
js
lahf
and
movsl
cltd
inc
adc
mov
xchg
test
cwtl
cmp
pop
das
sbb
ret
sbb
cld
add
xor
mov
xchg
loop
sarb
mov
mov
mov
jne
outsl
icebp
mov
and
or
aad
mov
pop
add
sbb
push
popf
mov
cmpsb
mov
pop
cmp
mov
jmp
stos
std
in
mov
pop
sub
jle
pop
bound
int
in
add
lea
sub
clc
cmp
lret
cmp
jno
ficoms
pop
sbb
xchg
aaa
in
or
insl
filds
cld
push
or
or
jbe
jmp
cli
jge
fldt
jl
or
and
jg
scas
stc
inc
push
adc
and
adc
imul
mov
in
dec
fsubr
es
pop
sub
add
jns
adc
adc
lahf
push
add
scas
sahf
or
scas
lret
imul
shrl
call
fnstenv
imul
add
push
adc
cld
mov
cmp
in
push
fmull
push
sbb
dec
mov
push
in
ud0
mov
xor
cmpsl
push
lds
push
mov
data16
jp
std
arpl
andl
push
std
push
cs
pop
mov
out
daa
cs
int
repz
add
jg
insb
les
leave
aam
inc
lock
jmp
adc
cld
lods
pushf
mov
lods
mov
add
ds
xchg
push
aam
mov
repnz
mov
rorl
mov
dec
in
push
xor
cmp
xlat
mov
mov
lods
jnp
inc
or
xchg
xchg
sub
test
inc
sti
rolb
or
das
add
rclb
movsb
lods
out
rcll
cld
xor
mov
outsb
test
mov
arpl
mov
mov
cmpsb
in
adc
test
or
mov
inc
fsub
mov
pop
and
sub
je
mov
push
inc
cmp
lcall
enter
mov
pop
das
lods
int3
pop
stos
jnp
ljmp
mov
cmp
ret
rol
movsb
in
in
mov
call
orl
lds
fisubs
fsubrl
ltr
fiaddl
xchg
inc
mov
jo
cwtl
cmp
aaa
out
or
sbb
push
inc
pushf
test
mov
lea
imul
adc
push
pop
fwait
mov
mov
push
push
push
repz
sbb
sub
xorb
xchg
push
or
jo
adc
repnz
test
adc
test
andl
divb
mov
mov
enter
in
cli
cmp
push
iret
fcomps
outsl
xchg
aas
call
dec
or
add
pop
mov
in
xor
xchg
lods
adc
xchg
sub
dec
fsubl
xor
sub
loope
sbb
les
push
pop
mov
in
loop
xchg
jl
or
dec
lcall
add
data16
lods
mov
mov
dec
cmc
ss
in
mov
not
cmp
rorb
xchg
or
ljmp
cmp
sbb
jbe
mov
sbb
mov
mov
fidivrl
out
adc
sahf
push
xor
sbb
iret
aas
testl
mov
cmp
pop
icebp
out
nop
aad
test
adc
add
fidivrs
dec
add
xchg
cmc
push
cmp
lcall
sub
inc
cmp
cwtl
sub
out
cmp
dec
lods
hlt
imulb
bound
add
sbb
and
int
mov
push
inc
popf
sbb
pop
lcall
sbb
std
jmp
push
mov
xchg
mov
push
hlt
lods
push
loopne
add
in
jmp
mov
mov
int3
mov
xchg
leave
test
sub
mov
pop
nop
pushf
xchg
in
lret
jns
push
loopne
jge
scas
jb
jnp
mov
jns
add
imul
jb
inc
sbb
aaa
jge
ss
stos
dec
mov
jle
leave
xchg
cs
xor
sub
nop
lahf
mov
das
or
rcr
dec
jns
ret
add
call
scas
sub
pop
fdivs
loope
es
xlat
js
stc
fistpll
add
add
jns
jge
push
outsb
mov
mov
adcl
push
mov
ret
sbb
sub
push
popa
jmp
das
aad
adc
cmp
push
ds
sbb
mov
xchg
mov
subl
clc
mov
ja
push
imul
je
adc
lock
test
imul
popf
jl
lods
std
push
repz
jo
out
lds
xlat
xor
inc
xlat
ja
pop
or
stos
push
pushf
inc
and
adc
and
cli
out
inc
cmpsl
inc
mov
add
push
nop
jl
stos
rcrl
popa
das
xor
dec
cld
lret
fildll
lds
and
ljmp
into
push
negb
xor
pusha
dec
add
scas
inc
adc
pop
push
jne
lods
mov
mov
push
push
adcb
leave
push
push
cmp
test
addr16
mov
lret
std
iret
mov
adc
lock
adc
pop
popa
pop
sub
xor
xlat
jns
mov
out
or
jmp
cmpsl
out
push
movsb
lcall
inc
popa
mov
mov
push
adc
clc
jns
add
cmp
cs
andl
mov
out
cmpsl
mov
inc
aas
or
xchg
pop
xchg
push
jo
and
insb
mov
mov
js
mov
lods
add
out
xchg
xor
ljmp
xchg
rorl
or
xchg
xchg
je
mov
xchg
xchg
mov
pushf
gs
xorl
daa
sar
add
ret
in
push
sub
out
push
sti
les
pop
cld
or
negb
cmp
into
jl
and
stc
rorb
ja
jg
mov
jp
aam
xchg
sbb
jle
mov
pop
outsb
sahf
push
pop
outsb
popf
and
or
pop
call
insl
shl
or
aad
sbb
add
cmpsl
loopw
out
push
lret
movsl
mov
mov
in
push
mov
das
sbb
and
clc
mov
inc
repnz
xchg
inc
or
jge
cmpsb
sarb
jge
jnp
outsl
lods
ret
pop
jl
mov
pusha
mov
mov
push
inc
sub
cltd
adc
pop
aad
mov
sti
lea
cmc
push
cmp
mov
and
mov
test
test
or
in
xchg
mov
mov
mov
mov
push
lahf
outsb
aas
mov
les
repnz
adc
pop
ror
cltd
push
pusha
jg
xchg
leave
aas
xlat
dec
mov
js
stc
push
fbld
jl
xchg
sub
add
inc
test
mov
sbb
test
cmp
jo
call
jbe
inc
loope
sbb
adc
gs
cld
int3
push
xchg
icebp
or
fcmovu
mov
and
cmp
jae
jge
jmp
mov
mov
and
scas
jl
mov
dec
outsb
lods
lds
std
pop
js
cmpsl
insl
cmp
movsl
in
xchg
out
cmp
dec
cmpsl
add
add
xor
xchg
xor
sub
inc
add
test
stos
arpl
cmc
or
add
jno
sub
sbbl
push
inc
rcrl
pushl
jo
mov
sub
jno
mov
mov
push
jns
data16
adc
ss
or
mov
or
sbb
iret
ror
repnz
sbb
in
lods
pop
sbbl
stos
gs
jl
nop
and
iret
in
imul
sbb
or
insl
scas
inc
stc
adc
push
lods
adc
inc
xchg
int3
mov
push
stc
jo
jae
mov
inc
scas
add
xchg
enter
xchg
mov
lret
mov
scas
inc
mov
out
jb
cmp
pop
flds
les
call
addb
rol
dec
and
daa
xor
mov
lret
js
push
inc
jne
xlat
sub
mov
hlt
in
mov
jbe
jge
in
inc
daa
jecxz
jp
orl
call
pop
cwtl
sub
cmc
dec
cmp
pop
idivb
adcl
sub
cmp
cmpl
xchg
mov
pop
or
xor
imul
cmp
adc
add
mov
dec
ret
mov
jp
and
ret
sbb
mov
lret
pop
xchg
aas
xchg
ja
inc
out
gs
xchg
mov
lods
cli
dec
aaa
ljmp
adc
fsubs
mov
repz
hlt
dec
test
mov
je
push
mov
fstpl
stos
aaa
push
lods
arpl
stos
shr
mov
fs
imul
inc
mov
insb
mov
mov
sub
pop
push
stc
adc
adc
push
jnp
aad
cmp
mov
mov
ds
outsb
dec
arpl
or
in
inc
jge
push
cmp
int3
or
fadds
mov
insb
fisubl
insl
pop
mov
push
mov
pop
and
xor
dec
imul
push
inc
popf
jo
jecxz
fists
pop
jg
pop
jo
in
dec
jne
mov
cld
sahf
and
repz
jl
sub
leave
xor
std
lahf
cmp
stos
sti
shr
cmp
add
fwait
pop
mov
fimuls
xchg
scas
dec
arpl
std
pop
int
int3
mov
testb
jnp
mov
sub
aas
out
sbb
lds
xor
lods
mov
lea
mov
push
popa
test
loop
push
push
lcall
lret
sti
pop
jge
mov
pushf
or
fwait
jge
jae
xor
inc
or
popf
repnz
ucomiss
cmp
push
and
xchg
mov
and
lret
mov
or
jnp
mov
mov
je
xlat
pop
je
jno
bound
sarl
jnp
lret
jo
push
cmpsl
dec
xchg
push
jle
testb
cltd
adc
jbe
jae
pop
imul
add
fstpt
sbb
jl
push
add
loope
add
or
fildl
hlt
and
sub
mov
cmp
loope
popl
call
in
push
std
mov
test
xchg
leave
js
mov
xchg
cmpsb
icebp
std
xchg
mov
pop
xchg
outsb
and
cmp
jp
add
or
movsb
lcall
and
mov
inc
es
fidivs
mov
mov
fsubrl
cmp
xchg
pop
aaa
inc
popf
stos
shll
sbb
or
pop
add
jg
and
mov
hlt
mov
orb
dec
push
cmp
popa
inc
mov
sub
mov
xchg
pop
outsb
cmp
dec
add
ret
mov
pop
clc
jge
rcll
dec
mov
xor
loop
inc
push
and
in
pop
xor
shrb
fstps
push
mov
lods
lahf
jnp
push
int
cmpsl
lea
shlb
and
inc
testb
mov
mov
inc
and
inc
jge
out
test
cwtl
rcrl
adc
divb
and
and
rorb
je
cmc
jns
cmp
jbe
jle
jp
jle
stos
mov
push
lock
lcall
sub
out
push
shlb
stos
incl
fidivrl
mov
xlat
fimull
test
lds
xchg
pop
into
inc
dec
rsm
addr16
xor
mov
rclb
hlt
shlb
jl
stc
push
les
push
xchg
mov
incb
insb
pop
insb
push
daa
insb
aaa
popf
push
add
push
data16
scas
pop
sub
pop
jae
push
in
sub
lods
std
pusha
adcl
mov
or
pop
jns
hlt
dec
mov
adc
and
imul
or
test
loope
mov
sbb
mov
inc
sub
dec
mov
inc
rolb
into
adc
adc
dec
mov
push
pusha
cmpsb
test
adcb
or
mov
inc
data16
test
movsl
scas
cmp
add
add
ss
jecxz
ret
outsl
lds
nop
cmpsb
cmp
dec
mov
lcall
ret
ljmp
popa
and
sub
add
pop
pop
arpl
lea
fdivl
movsb
xchg
sbb
ds
orl
out
sbb
xor
and
inc
lock
mulb
cli
pushf
ret
xchg
cmp
js
mov
into
rol
push
xlat
fnstenv
mov
jno
clc
stos
and
inc
sbb
inc
push
mov
rcll
mov
mov
xchg
add
rol
pushl
push
outsl
pop
stos
adc
inc
jecxz
mov
xchg
cmpsl
mov
lcall
cmpsb
ror
xor
pop
loope
rol
fldcw
ret
in
jmp
js
cmp
mov
xchg
pop
nop
ret
xor
ret
lcall
fabs
add
add
add
sbb
cmp
push
aas
enter
jbe
sbb
clc
sbb
std
jno
dec
push
and
popf
shr
aad
ja
mov
negl
xchg
mov
mov
scas
divb
xchg
orb
subb
push
cmpsl
push
pop
adc
repz
shl
inc
push
aad
sbb
mov
jnp
mov
aas
aad
mov
loop
mov
mov
popa
jp
adc
fcmovb
xor
mov
push
xchg
adc
xchg
out
arpl
xor
xchg
fisubs
cmp
stc
test
jge
sub
mov
call
push
pusha
xor
dec
cmp
scas
jl
iret
or
pushf
movsl
inc
push
loope
packsswb
out
arpl
cmpsb
cmp
add
sahf
test
in
lcall
pop
lahf
inc
stos
mov
push
lret
pop
lods
test
push
outsl
pop
xlat
cmpxchg
cmp
sbb
mov
mov
pop
mov
mov
call
mov
push
mov
test
jbe
or
pusha
xchg
sarb
and
jo
mov
loope
stos
jae
pushf
pop
adc
cmp
in
mov
mov
test
sub
push
repnz
cld
in
ljmp
fdivs
pop
dec
adc
ja
into
sbb
xchg
mov
in
mov
xchg
cmp
mov
mov
js
push
in
pop
mov
popl
negl
xchg
jb
and
hlt
jecxz
ja
ja
aaa
stc
push
or
fldt
popa
sbb
test
aaa
out
sarl
lods
mov
cmp
xchg
sahf
push
in
and
aam
lods
cmp
xor
lods
jno
and
xchg
sarb
lods
roll
jnp
mov
mov
fsubrs
outsl
pop
dec
test
out
jg
retw
mov
imul
jno
mov
ja
push
jnp
sbb
or
out
adc
and
sahf
jg
fcmovnb
mov
ljmp
fnstcw
jae
xchg
adc
orb
pop
dec
into
lock
inc
mov
call
fidivrl
jl
push
jnp
sbb
jl
cli
xchg
hlt
jl
sub
lods
or
lahf
xor
pop
scas
sbb
stos
sti
js
adc
inc
dec
out
sub
dec
jmp
jmp
sbb
add
sbb
daa
adc
pop
dec
cmpsl
push
dec
cmc
jne
lods
sub
enter
out
inc
mov
stos
outsb
push
std
es
ds
ret
sbb
ret
add
int3
test
push
mov
out
lds
push
or
jge
testl
pushf
in
std
or
pop
mov
dec
push
cmovp
xchg
jmp
inc
fadd
sbbb
call
lods
test
fnstsw
repz
xchg
mov
adc
push
stos
push
inc
adc
cs
pop
xchg
jbe
or
add
jmp
and
loope
cmp
xor
repnz
aaa
sbb
in
sub
out
xor
cmp
aam
out
mov
pop
push
ret
insb
push
add
sti
scas
mov
js
mov
enter
push
jge
mov
cmp
inc
push
push
ds
idivl
push
push
out
xor
jecxz
pop
rorl
stos
sub
aaa
and
je
cmp
jg
jmp
nop
and
lret
jns
popa
push
mov
loopne
lock
jg
loopne
sti
xor
aaa
mov
cmp
into
testl
fistpl
sbb
mov
push
lahf
imul
cmpsl
mov
mov
push
fisttpl
repz
or
ss
neg
fimuls
xchg
xor
les
cmp
xchg
outsl
ret
pop
inc
lods
test
and
lods
cmp
sbb
mov
imul
push
fldl
sti
lods
lahf
push
xchg
mov
mov
sbb
test
lods
gs
cmp
adc
mov
xor
push
jecxz
cld
jo
mov
and
sti
pop
mov
push
rorl
js
insl
add
xor
jae
lcall
icebp
pop
pop
cmpsb
mov
fyl2x
mov
push
adc
loopne
cmc
mov
leave
lods
push
sub
mov
lret
jp
mov
out
xchg
add
xor
add
sbb
jecxz
jge
sarb
cld
divl
nop
mov
jg
stc
incl
data16
ja
out
and
sub
popf
loope
or
inc
gs
and
add
push
fidivs
mov
sbb
daa
fs
adc
or
test
movsb
scas
sbb
pusha
and
pop
sbb
movsb
sub
add
mov
test
xor
jbe
cmp
popf
inc
mov
jbe
pop
xchg
ds
cli
mov
negb
rcrb
fdivrp
addr16
lcall
in
lea
insb
sbb
into
ljmp
sti
xchg
push
es
sub
and
adc
pop
sahf
loop
sti
hlt
cmpsb
aad
lods
cli
and
cmp
call
cmpsl
lret
xor
std
orl
popa
fnsave
xor
in
jbe
inc
push
ret
cltd
xchg
fimuls
cmp
xchg
cmp
add
push
data16
push
pop
and
sbb
or
popf
xlat
or
mov
sbb
mov
and
loop
stos
jge
fadds
xchg
or
flds
outsb
cmp
mov
jle
pop
push
cmp
and
cmpsl
repz
stos
sub
into
lods
insl
xor
mov
mov
icebp
dec
mov
je
sbb
repz
push
test
and
push
xchg
jl
lock
and
sub
mov
ljmp
outsb
or
pop
sub
push
push
sbb
jnp
out
add
lock
inc
ds
cld
pushf
and
pop
pop
xlat
test
icebp
pop
sbb
bound
jmp
mov
in
push
dec
mov
pusha
out
xchg
sahf
sub
lret
iret
sub
push
and
pop
lock
xchg
insl
cmc
inc
adc
in
inc
xlat
scas
mov
clc
inc
push
mov
and
sbb
int
lahf
ss
insb
cld
xor
jno
jbe
fadds
jmp
jecxz
ret
mov
aad
push
out
jo
push
into
pop
xor
rcrl
iret
fsubs
ss
jle
pushf
imull
sub
adc
js
aas
mov
iret
dec
enter
notl
sub
adc
sbb
jae
sub
cli
stos
push
cmpsb
mov
in
jb
and
adc
mov
outsl
sti
repnz
mov
dec
loop
pop
pop
in
dec
lds
mov
push
sub
xor
xor
or
scas
inc
xchg
bound
fdivrl
fmuls
add
sbb
gs
dec
pop
lret
or
jnp
fwait
push
lret
dec
adc
inc
je
js
into
adc
pop
cs
xorb
ja
jecxz
sahf
arpl
outsb
cmp
sub
inc
testb
push
movsl
incb
les
cmp
fstps
sar
pop
jne
push
cmp
jb
lcall
mov
scas
shll
out
punpckldq
lock
cltd
jl
push
fwait
pop
fadd
int3
scas
cmp
pop
fwait
mov
jno
sbb
mov
cwtl
xchg
hlt
sbb
lea
insb
nop
cmp
xchg
or
dec
sub
xchg
cltd
fs
lock
test
aaa
push
dec
cld
in
xlat
sub
xchg
lret
fcmovnu
in
jb
adc
mov
shl
sti
lcall
xorb
popf
sti
leave
bnd
sbb
mov
scas
sahf
dec
cmpsb
mov
int
popl
fs
orl
mov
lahf
inc
push
ja
gs
or
jmp
pop
movsl
out
sahf
xchg
inc
add
in
aaa
mov
call
push
jecxz
and
push
adc
dec
scas
sbb
mov
sub
pop
dec
test
xor
jo
imul
into
push
jle
cmpsl
cmc
cmp
stc
cs
je
ss
gs
cmp
xchg
fstpl
inc
sbb
dec
xchg
addl
shrb
sti
ja
adc
in
or
in
xchg
cwtl
xchg
mov
ror
or
mov
into
jp
aad
xor
jge
dec
xchg
hlt
add
lcall
or
filds
mov
sahf
insl
into
repnz
jmp
lret
adc
cwtd
fldt
and
addr16
adc
mov
aam
inc
mov
mov
loopne
mov
andl
loopne
mulb
cltd
shr
test
pop
xor
clc
pop
imul
xor
or
mov
push
mov
fisubrl
dec
into
xchg
add
call
daa
fbstp
les
jae
lea
mov
cli
cmp
sub
add
popa
aam
inc
insl
dec
test
lcall
testl
arpl
mov
loope
test
lods
push
inc
shrb
imul
cmp
scas
pop
mov
mov
icebp
lds
mov
jecxz
icebp
inc
or
sbb
js
imul
ljmp
in
xchg
outsl
push
frstor
cmp
call
sti
sub
sbb
addr16
hlt
test
rcrb
inc
aaa
aas
shlb
jne
stc
mov
imul
faddl
add
lahf
xchg
and
mov
shlb
push
jl
lret
mov
jmp
cmc
push
jo
sub
or
test
mov
repnz
cmpsl
push
pushf
or
nop
pop
sbb
imul
shlb
mov
fldenv
inc
mov
cmc
add
xchg
pop
xchg
mov
cmpsb
pop
mov
adc
mov
ja
jg
sbb
xlat
dec
subl
daa
sbb
adc
adc
dec
popf
aas
icebp
sbb
in
fsubrp
aam
mov
testb
int
addr16
jo
enter
pop
jo
or
inc
mov
leavew
fisubrs
ret
jge
pop
mov
pop
hlt
xchg
mov
push
adcl
das
into
jne
adc
lea
jmp
lcall
sbb
jbe
xchg
cmp
xchg
into
or
and
sub
mov
pavgb
jns
ret
rolb
int
popa
mov
jge
jle
mov
and
loop
loopne
add
or
push
rolb
nop
insl
lea
sbb
popa
mov
sbb
xor
xor
xor
stos
sbb
jno
and
or
stos
sbb
add
addr16
pop
cmc
xchg
lret
pop
fistl
jb
lahf
mov
pop
mov
lock
fs
into
ja
out
das
sub
test
push
cmp
xchg
jle
mov
push
repnz
adc
aad
je
insl
in
das
dec
aaa
sub
fistps
mov
xor
cmpsb
out
shrb
loop
xchg
and
adc
add
jae
out
cmp
fs
int
fs
dec
pop
inc
sbb
addr16
insl
push
clc
cltd
push
ss
in
mov
fwait
pusha
aas
push
xor
push
daa
in
in
insb
mov
pop
dec
mov
fisubrl
pop
jl
adc
fwait
sbb
lea
adcb
jnp
cmpsb
ss
lods
cmpsl
and
repnz
lcall
add
xchg
stos
xor
outsl
jmp
imul
imul
arpl
mov
xchg
je
daa
pop
adc
mov
icebp
push
and
mov
sbbl
cs
insl
pop
je
or
cmp
leave
cwtl
dec
adc
js
daa
je
fwait
aaa
aas
arpl
xor
in
outsl
xchg
loopne
jmp
push
jg
dec
pop
add
arpl
and
pop
js
add
int3
dec
dec
jno
fldenv
lods
mov
cmp
cmpsl
add
and
sub
mov
sbb
and
in
je
sahf
cmp
and
std
mov
xchg
mov
inc
push
xor
inc
aad
lods
fadd
jg
shrb
imull
jo
pop
jns
inc
sub
mov
mov
jg
add
jae
push
mov
jne
adc
xchg
mov
imul
dec
and
sbb
push
lock
rorl
inc
pop
rolb
aas
pop
leave
lods
je
in
cmpsb
mov
shrb
mov
out
xchg
leave
vpmaxsw
mov
mov
xchg
jle
mov
sahf
enter
cmc
lret
mov
loop
jno
dec
imul
negl
mov
out
sbb
loopne
push
jecxz
mov
sub
cmc
cmp
movsl
mov
mov
pushl
cmp
outsl
decl
loopne
mov
inc
add
in
lock
sub
cmpsl
xchg
scas
sbb
cmpsb
push
or
adc
shl
addr16
add
xchg
mov
sbb
inc
xchg
movsb
addb
or
stos
adc
sahf
int3
cld
jo
stc
sahf
xchg
jle
subb
jo
push
js
mov
adc
pop
pusha
and
fldl
xchg
imul
aaa
dec
notb
mov
lret
cmpsb
adc
jae
dec
int
gs
mov
imul
insl
inc
dec
fwait
mov
jecxz
mov
sbb
or
jne
das
mov
fiadds
loope
jl
out
pop
inc
and
cltd
enter
dec
mov
aas
mov
mov
inc
add
mov
xor
adc
jmp
mov
in
sarb
aam
push
push
lods
test
add
inc
in
pop
sub
cltd
cmp
aaa
mov
out
sbb
int
leave
jmp
and
cmp
fnstcw
push
xor
xor
lret
sub
push
sub
add
cwtl
and
cli
inc
daa
cltd
mov
arpl
adc
mov
dec
out
xchg
out
cmpsb
subl
xchg
cld
imul
adc
mov
mov
ret
sub
pop
fs
data16
and
adc
mov
push
add
adc
jb
pop
orb
xchg
push
xchg
adc
push
ss
xchg
outsl
cmp
out
push
sahf
or
cld
mov
fsubrs
jno
mov
cmp
stc
xor
cmp
testb
int3
jmp
cmp
cmp
lahf
insl
add
inc
and
inc
pop
outsb
mov
addr16
mov
insl
inc
call
cwtl
xor
addr16
fnsave
out
push
push
xlat
call
push
dec
aam
mov
sub
in
cwtl
pop
adc
ja
outsl
push
add
jcxz
fcoms
and
scas
xor
aas
les
pop
sub
inc
jge
push
and
aad
adc
adc
in
fsincos
pop
rol
out
mov
out
fs
sbb
sarb
sub
pop
cmpsl
pop
dec
sbb
mov
inc
pusha
adc
stc
add
fdivrs
mov
loop
inc
inc
cltd
imul
mov
out
int3
mov
into
push
imul
lcall
jne
jl
mov
push
push
clc
pop
les
mov
xchg
jns
jl
mov
xor
mov
leave
lea
mov
stos
in
cmpsb
mov
movsl
mov
stos
jno
fsubs
stos
loop
mov
xchg
inc
ljmp
ret
dec
and
xor
jl
add
lods
lret
mov
pop
jle
xchg
mov
add
fwait
sub
std
daa
lds
mul
fwait
jmp
js
pop
pusha
adc
negb
div
inc
jmp
dec
adc
ret
push
xor
aad
dec
push
ds
sub
sarb
cmp
mov
stc
stc
dec
lods
inc
mov
jmp
hlt
xchg
mov
cli
mov
push
lea
stos
fistl
jnp
jmp
outsl
sbb
lcall
xor
xchg
xor
bound
inc
enter
in
xor
fsub
mov
ja
aad
sub
cmp
rorb
pop
scas
push
push
pop
push
outsl
pop
push
lods
mov
pop
and
jo
jns
jnp
jl
push
xchg
push
inc
in
mov
mov
fs
sbb
adc
cmc
out
imul
mov
mov
mov
loop
out
sbb
adc
enter
aas
sub
repnz
or
out
mov
add
popa
leave
in
adc
mov
push
push
cmpsl
jno,pn
mov
movsl
lcall
jp
scas
scas
adc
repz
cmp
xchg
sbb
jb
mov
inc
add
inc
repz
xchg
xchg
pop
xchg
fbld
movsb
add
dec
ds
xor
imul
sub
mov
popa
add
dec
push
outsl
jae
aad
sbb
mov
push
hlt
iret
and
xchg
sbb
xor
outsb
scas
mov
jle
mov
repz
push
jl
clc
pop
jp
ret
in
das
mov
into
je
xorb
mov
sbb
cmpb
sub
arpl
orl
add
pop
lahf
enter
lcall
pop
jmp
aas
cmp
or
pop
sti
lret
and
cltd
lods
ljmp
pushl
mov
and
rorl
dec
xchg
fstpl
push
jo
inc
inc
imul
add
mov
daa
pop
and
jae
or
sbb
inc
push
fildll
pop
dec
je
cmp
dec
leave
sbb
and
mov
mov
push
inc
mov
xchg
pop
std
scas
pop
addr16
fs
jmp
aas
jecxz
xor
mov
jno
or
and
jecxz
fnstsw
imul
mov
push
dec
push
adc
scas
pop
jecxz
inc
imul
and
xor
cmp
mov
mov
mov
fcompl
sub
nop
pusha
mov
loopne
jg
dec
syscall
int3
push
mov
andl
insb
dec
push
jo
inc
xor
jecxz
or
mov
sub
mov
mov
sub
inc
cmp
cmp
into
pop
xchg
fbstp
add
adc
popa
movsl
mov
xchg
lods
jg
out
and
lret
adc
sbb
adc
sbb
movsb
pop
outsl
sub
inc
imul
inc
pop
jae
mov
sbb
das
jp
loope
test
mov
xorl
stos
inc
mov
or
repz
montmul
cmpsb
ret
xor
lods
arpl
jmp
inc
pop
cmp
xor
stos
fwait
cmpsl
insb
aad
mov
sbb
aaa
cmp
movsb
sub
push
jo
push
je
rorl
ret
ja
add
jbe
imul
in
mov
push
sbb
iret
xchg
mov
std
loope
lods
and
mov
cmp
pushf
aam
xchg
lds
inc
add
cld
int3
mov
out
stc
js
sbb
inc
push
push
lods
ss
or
ljmp
sarb
add
popa
movl
mov
mov
add
mov
dec
sbb
inc
sbb
sbbb
fildl
xor
and
dec
ja
adc
pushf
je
push
loopne
xchg
bound
jecxz
xchg
mov
into
sub
sbb
and
out
push
lods
xchg
xlat
adc
pop
movsb
ret
mov
repnz
sub
jmp
addb
aam
pop
adc
lahf
fsubs
push
ja
outsl
and
nop
xlat
scas
xor
pop
xchg
ret
hlt
jp
js
addr16
scas
aad
add
int
pop
push
das
add
aad
sti
push
and
mov
ja
cmpsl
dec
jge
imul
fisttpll
push
pushf
xor
rcrl
add
dec
out
int
inc
xchg
shlb
mov
popf
addb
iret
jns
ds
jno
cmp
jb
and
dec
dec
jne
imul
sbb
xchg
fwait
inc
pop
scas
in
sbb
out
xor
and
andl
pop
mov
xor
mov
push
in
xchg
in
jns
ret
xor
sbb
adc
sbb
ret
in
ret
int
repnz
loope
sbb
and
popf
fbstp
clc
das
popf
in
jp
mov
inc
push
stos
in
mov
xchg
icebp
stos
adc
jp
test
mov
popf
inc
pop
ja
mov
repnz
ja
inc
jb
xchg
shll
mov
jl
xor
mov
jl
ss
lret
cmpsl
cmp
jns
jg
outsb
sbbl
add
inc
lods
arpl
frstor
add
xchg
fdiv
jl
jmp
movsl
sti
nop
lahf
lcall
mov
pop
outsl
fcoml
mov
cmc
sub
dec
outsb
movsl
sbb
pop
out
lret
or
push
or
cmp
shl
add
popf
ds
stc
mov
cmpl
mov
add
jle
std
js
and
loop
dec
cmp
ror
mov
jge
jg
jnp
pop
xchg
jno
xor
mov
mov
inc
push
and
out
add
dec
cmc
sub
inc
adc
insb
out
lret
push
push
rolb
mov
or
adc
add
inc
imul
and
lds
in
aaa
adc
cld
push
pop
ss
cmp
inc
sbbb
cmp
jb
xor
daa
jle
or
cmp
in
mov
dec
push
cmpsl
out
ss
rcl
adc
movaps
fnstcw
into
ljmp
jns
and
rep
mov
mov
fdivs
cwtl
bound
ds
scas
cmp
lds
adc
fwait
lahf
pop
mov
sbb
adc
iret
lock
punpckhwd
or
mov
stos
outsb
int
mov
pop
push
mov
xor
jns
arpl
fcomi
push
pop
test
inc
ds
mov
cs
lock
pop
xor
test
mov
leave
fs
popa
fisubrl
dec
sub
push
frstor
sub
push
push
stos
mov
push
adc
cltd
mov
sbb
jne
les
pushf
ss
xchg
push
or
push
cmp
test
dec
sbb
movb
js
insl
ja
adc
add
movsl
dec
jecxz
pop
stos
stos
xor
jns
and
pushf
cmc
cmp
sub
je
xor
dec
mov
inc
mov
add
push
add
into
mov
mov
xchg
adc
pop
addr16
add
pop
in
sub
pop
xorb
cwtl
shll
jno
dec
xchg
andb
aaa
imul
jp
daa
fistpl
cmpsl
ffreep
sti
addr16
xor
clc
enter
js
mov
jne
add
dec
mov
repnz
lahf
cmpsl
daa
fs
mov
test
cmp
push
sbb
pop
xor
iret
xchg
movsl
xchg
mov
xchg
test
ds
dec
push
test
pop
and
cld
ret
test
xlat
and
test
cmpsb
mov
dec
mov
or
das
mov
adc
lcall
jl
ljmp
sbb
pop
mul
insb
or
add
fmul
gs
xor
xchg
adc
fldenv
jns
in
mov
mov
or
pop
dec
or
xchg
lahf
stc
pop
xchg
sbb
jmp
test
nop
je
add
pop
gs
rorl
popa
ret
cmc
or
cltd
inc
push
push
add
scas
mov
jge
jbe
lods
adc
nop
fs
jb
addr16
cmp
sub
out
ja
push
push
outsb
xchg
jmp
mov
pop
rclb
sub
adc
dec
fnstcw
mov
lret
push
xor
dec
push
mov
mov
fs
ficoml
xor
and
aaa
sub
jno
or
push
pop
ja
push
fdivs
jp
or
xchg
jmp
movsl
jg
xchg
jbe
push
sub
inc
push
jae
and
push
mov
filds
stc
inc
cltd
cmpsl
jo
mov
adc
or
pop
movsl
push
jbe
cmp
jne
xchg
adc
push
xor
jns
xchg
or
push
xor
mov
sbb
push
outsb
inc
push
addr16
cmpsb
sbb
mov
mov
fistpll
jecxz
mov
xor
xchg
dec
adc
rclb
sbb
jmp
xor
mov
xchg
mov
mov
bound
es
pop
enter
cltd
dec
push
push
gs
hlt
hlt
mov
inc
in
and
leave
mov
cmpsl
mov
adc
mov
xchg
push
or
test
and
mov
push
pop
or
xorb
push
aaa
push
mov
ficomps
jnp
sahf
int
subb
fcomi
stc
lds
jnp
push
jl
sbb
xchg
lret
sbb
push
mov
xchg
testb
mov
ret
or
sub
push
pusha
xorb
cmp
cmp
pop
adc
mov
outsb
dec
fisubs
fstpl
out
inc
xchg
lret
push
cld
aad
outsb
sub
pop
daa
sub
mov
aam
stos
sbb
shll
mov
nop
cmp
scas
aad
mov
and
loopne
sbb
push
sbb
push
outsb
stos
mov
pop
sub
xor
mov
jge,pt
sahf
lds
add
push
and
inc
and
repnz
pop
or
mov
add
mov
sub
cs
scas
xchg
mov
repz
cmp
cli
mov
das
sbb
pop
push
jmp
inc
stos
xchg
xor
and
add
rcll
ja
mov
inc
jp
mov
icebp
push
ret
stos
stos
push
lcall
mov
in
adc
xor
out
pushf
cli
movsb
lahf
cwtl
movsl
dec
xor
movsb
mov
push
in
mov
xchg
sahf
cli
push
dec
leave
adc
dec
xlat
jmp
and
add
fsubrp
in
sarl
xchg
jmp
jne
mov
mov
aam
mov
mov
dec
frstor
lcall
ljmp
sarl
cmp
test
inc
cmp
xor
cmp
mov
into
sub
ror
mov
xchg
add
inc
sub
or
into
enter
sti
cli
jmp
dec
fdivrs
lahf
or
imul
cmp
jecxz
bnd
jb
scas
aam
imul
jmp
push
jb
or
movl
pop
fcompl
pop
xor
ror
add
xorb
test
cmc
sbb
sub
aam
push
outsl
sub
mov
adc
mov
fwait
cmp
testl
push
or
ret
mov
rolb
cmp
imul
push
rcrl
and
lea
cmpsb
or
cmc
ja
aad
adcb
insl
mov
out
jge
std
fistpll
mov
sub
jmp
pusha
notb
outsb
mov
das
outsl
js
xor
rorb
loopne
ljmp
xchg
xchg
push
lret
mov
jb
mov
popf
cmp
mov
mov
mov
jb
je
mov
add
mov
jg
subb
imul
jnp
mov
es
cmp
mulb
adc
adc
sub
comiss
sbb
add
repnz
or
mov
jbe
dec
test
mov
out
sarl
sbbb
mov
sub
std
cld
or
mov
adc
outsb
or
pop
popf
push
into
sub
std
rorl
popf
ds
lahf
pop
push
mov
or
adc
cs
sti
xor
xchg
scas
pop
inc
pop
jae
out
inc
fnstenv
in
and
inc
mov
xorb
jno
adc
es
pop
mov
push
ljmp
xor
ror
mov
push
sbb
xchg
push
xchg
adc
stos
cmpsb
clc
gs
stos
cmp
jns
pop
std
dec
mov
adc
mov
push
imul
jge
cltd
mov
lahf
mov
pop
inc
add
sub
sub
inc
pop
xchg
jp
js
lea
jae
mov
cmp
lods
xlat
lahf
dec
mov
cmpsb
sbb
insl
adc
lock
insl
or
sub
xor
scas
outsb
es
pop
jbe
sbb
sub
cmp
xchg
push
imul
pop
iret
les
arpl
in
mov
cmp
lret
add
jns
cwtl
adc
out
sbb
shrb
push
and
insl
leave
mov
repnz
lods
sahf
test
pushf
iret
loope
rcrb
dec
mov
xor
cmp
fwait
inc
adc
mov
push
cmpsl
sub
mov
xchg
mov
shll
fistps
fidivs
mov
inc
mov
push
addr16
ja
jg
sbb
push
jae
pusha
rcrl
jmp
imull
out
mov
lock
aas
out
mov
scas
add
cs
scas
addr16
idiv
xlat
int
pop
fnsave
jmp
incb
pop
loopne
cmpsb
jp
ficoms
pop
pusha
push
jl
inc
sub
jnp
int
enter
adc
dec
shlb
pusha
fsave
fildll
mov
punpcklwd
fs
push
cmc
sbb
shlb
push
jp
cmp
stos
and
pop
out
sub
test
mov
shl
test
or
ficoml
fxam
inc
punpcklbw
ret
mov
cld
pop
inc
sub
dec
inc
dec
pushf
cmc
xchg
sub
jo
and
and
fwait
cmpb
jl
lods
clc
jle
pop
mov
addb
fs
stc
xchg
ds
scas
mov
in
push
mov
fmuls
xchg
inc
iret
lcall
mov
xor
sbb
jle
es
aaa
fdivp
mov
cli
mov
pop
mov
sub
add
mov
call
mov
adc
ficomps
ljmp
stos
lcall
mov
sub
push
ja
fnstenv
inc
jo
or
inc
and
test
out
pusha
push
decl
cmp
push
jecxz
addr16
xchg
xor
xchg
mov
rolb
ja
push
pop
and
mov
shrb
mov
leave
add
mov
imul
dec
cmp
cli
das
lea
lret
xchg
mov
or
std
adc
xor
out
rorl
mov
fwait
pop
repnz
hlt
xorb
test
data16
mov
lods
pop
adc
rorb
xchg
push
into
aad
mov
push
fwait
cs
push
outsb
idivl
sti
loop
imul
enter
lods
outsb
or
add
pop
outsl
dec
xlat
push
sbb
add
das
in
inc
test
sbb
adc
fdivp
imul
cmp
cmp
jno
ret
addb
fwait
aam
jo
add
mov
mov
sub
ljmp
aam
xchg
pop
scas
data16
add
movsb
test
jo
inc
fs
cld
xchg
inc
add
push
rcrl
out
sbb
jno
data16
ret
add
out
sub
incb
mov
clc
or
mov
das
jmp
cmp
addr16
sbb
adc
cltd
push
imul
push
ja
roll
dec
inc
je
or
lock
pusha
adc
packuswb
addr16
pop
outsb
pop
fildl
sbb
pop
xchg
mov
jmp
or
mov
sbb
ret
aas
push
mulb
inc
sti
test
rcl
aaa
inc
cmp
or
out
sub
cmp
pop
test
xchg
sbb
stos
outsb
push
push
es
ljmp
adc
sbb
push
cmp
or
lcall
push
inc
inc
scas
inc
loope
add
das
mov
movsb
rcrb
pop
xchg
cmp
pop
bound
loope
movsl
imul
insb
dec
fidivrl
iret
dec
jno
xchg
mov
dec
ja
fcos
adc
imul
cld
loopne
add
sub
dec
pop
jl
sub
mov
cmpsb
loop
nop
jl
pop
mov
arpl
or
sub
push
pop
outsl
loop
bound
sahf
push
and
and
cpuid
sbb
push
jbe
mov
xchg
jge
xchg
xor
cmc
jmp
jle
xlat
lods
incb
aaa
and
cmp
sub
inc
pop
ds
inc
xor
jns
ret
repz
imul
jmp
cltd
jne
arpl
sbb
pop
je
mov
and
add
adc
mov
inc
iret
adc
add
fstps
lock
pushf
test
mov
pop
push
sub
popf
mov
push
pop
aam
aad
scas
adc
dec
mov
ret
mov
test
stos
hlt
sahf
addr16
xor
aad
test
and
rolb
inc
xchg
mov
jmp
jge
icebp
scas
sahf
xorb
test
push
mov
dec
cmp
imul
jns
aad
in
ror
mov
push
in
add
push
add
push
cmp
les
test
push
fsubrl
pusha
stos
push
dec
ret
adc
cs
push
dec
in
iret
pop
flds
neg
shlb
lods
into
js
gs
jae
jns
in
fsubrs
out
push
jmp
jge
add
cmp
movsb
mov
test
cmp
push
sub
mov
ret
xor
loopne
ss
adc
mov
push
push
repnz
lea
out
inc
cmp
fldt
fists
sahf
mov
out
mov
nop
xorl
call
pop
xchg
in
pop
call
movsb
divb
mov
lds
mov
xchg
roll
aaa
mov
aam
dec
mov
ret
mov
outsb
cmp
add
and
fld1
repnz
mov
fstp
loopne
test
popa
inc
int3
cmpsb
pop
jb
leave
push
inc
je
outsb
stos
mov
mov
hlt
lcall
adc
or
rclb
cmp
lods
enter
jns
mov
loopne
sub
sub
in
scas
jl
and
iret
inc
lahf
mov
ljmp
addr16
outsb
push
rcrb
mov
js
sub
dec
sbb
pop
pop
addr16
pop
fnstcw
cmpsb
push
jo
ds
push
xor
cmp
arpl
adc
fnstsw
and
sub
add
shll
decl
jno
pop
mov
push
mov
sub
and
out
cltd
cmp
or
jge
xchg
jb
adc
lods
and
xchg
ss
in
xchg
pop
lret
scas
jg
ds
arpl
pop
mov
pop
pop
jnp
test
dec
fistps
daa
daa
jne
dec
aam
inc
jge
insb
adc
pop
or
or
sbb
xchg
stc
es
sti
fisubrs
repz
imul
pop
and
adc
inc
fldt
enter
pop
jnp
psadbw
inc
out
cmp
fdivl
out
mov
mov
aaa
insb
mov
mov
stc
push
xchg
int
sbb
aam
and
jge
xor
arpl
lret
xor
daa
push
fimuls
xchg
sbb
adc
les
inc
bound
pop
dec
mov
and
sbb
cmp
mov
sub
or
inc
aad
cli
aaa
inc
inc
repnz
bnd
pushf
inc
cli
fimull
outsl
mov
movsb
or
fldl
int
in
cltd
sbb
cmp
sarl
jb
lds
jns
and
or
mov
jae
jmp
mov
xor
inc
nop
lds
out
and
jp
sub
inc
in
cmp
into
nop
stos
mov
daa
int3
mul
adc
adc
inc
ja
inc
sbb
fwait
in
mov
jae
cmp
jb
mov
cmpsb
jns
mov
xor
xor
arpl
mov
shr
out
add
jp
inc
daa
test
push
ja
cltd
dec
pop
inc
dec
adcl
les
ret
int
mov
sti
fwait
adc
outsb
sarb
rcrl
dec
lods
fnstsw
js
jo
add
xchg
or
inc
xchg
cmp
and
mov
cmp
adc
dec
outsl
xchg
iret
xchg
add
jp
cmp
movsb
jbe
je
out
mov
outsb
push
mov
xchg
leave
cmp
jl
fwait
in
mov
icebp
es
jno
add
and
aas
mov
mov
sbb
push
xor
fdivs
cmpsb
adc
cmp
jns
or
test
xchg
adc
adc
mov
sbb
retw
push
pop
mov
mov
and
test
loope
das
cmc
xchg
mulb
mov
int3
sub
out
fstps
arpl
fistpll
mov
js
movsb
dec
stos
and
out
arpl
cmpsb
dec
add
das
push
push
mov
inc
dec
imul
mov
inc
mov
lahf
sub
jo
in
dec
imul
dec
stos
xor
push
mov
decl
mov
js
dec
mov
pusha
mov
jno
xlat
adc
cmc
aas
xchg
loop
sbb
pop
test
push
rcll
xor
dec
and
shll
dec
enter
mov
mov
pop
out
mulb
pop
pop
cmp
ja
adc
mov
cli
fistpll
push
xor
sbb
lods
jne
addr16
add
mov
add
faddp
xchg
inc
movl
loop
pop
push
jmp
dec
mov
dec
mov
test
stos
repnz
mov
testl
out
icebp
mov
outsb
mov
cmc
call
pop
mov
dec
push
cmpsl
inc
ret
imull
xchg
loope
jnp
or
add
clc
faddp
inc
lahf
sub
dec
adc
fiaddl
or
out
in
mov
inc
xchg
jb
adc
jle
mov
gs
fistps
icebp
cmpsb
and
mov
ffreep
push
xchg
mov
dec
jl
ja
push
test
int3
cmp
lods
mov
inc
lds
loopne
outsl
mov
out
jae
js
or
xchg
xchg
push
or
pop
js
into
push
fdiv
out
jne
pop
sahf
xchg
add
loope
cld
ret
sahf
inc
arpl
in
shlb
xor
shrl
imul
and
jle
dec
in
push
stos
call
dec
das
lret
faddp
mov
ja
mov
cs
lock
adc
mov
enter
xor
pop
cmpsb
jp
outsl
push
std
cmpsl
mov
gs
and
repnz
push
pop
stc
in
int
mov
inc
outsl
std
cmp
aaa
test
sbb
add
cmp
sbb
imul
lock
fdivl
cli
or
inc
shrb
dec
gs
fucomp
imul
dec
lret
sbb
push
cmpsl
test
mov
sub
ss
loope
dec
jne
xlat
cmp
outsb
push
mov
into
inc
cli
mov
les
pop
cmc
inc
fnstcw
or
subl
dec
mov
jecxz
push
pop
add
and
and
je
inc
fstps
in
inc
loop
ds
fdivrs
dec
pop
add
sub
xchg
ja
data16
incl
mov
and
ret
aaa
mov
pusha
adc
fisubs
insb
cmpl
and
mov
outsl
je
mul
outsl
roll
stos
dec
out
sub
or
sub
addr16
gs
out
idivl
imul
jnp
call
call
inc
sahf
cmc
clc
and
mov
inc
mov
lock
imul
sbb
std
dec
in
dec
inc
cld
fdiv
fs
loopne
mov
ficompl
sbb
pop
pusha
loop
xor
addr16
jg
and
out
adc
call
mov
xchg
leave
and
add
pop
push
sub
inc
es
inc
mov
ret
test
adc
insl
push
mov
aad
push
adc
jl
sub
xchg
sub
fsub
dec
cmove
test
mov
xchg
lret
jle
test
cwtl
xor
inc
fimull
js
in
incb
jnp
ja
and
dec
sbb
and
fwait
pop
lods
int
int
rcrb
lock
or
mov
inc
cltd
jns
xlat
and
cmp
push
outsl
dec
pop
sbbl
ret
cli
lret
or
pop
or
test
mov
mov
mov
stos
sbb
bound
mov
pop
insb
movsl
call
aad
inc
and
aam
sub
mov
fcompl
jp
stos
or
pop
lret
pop
dec
jnp
adc
push
xor
sbb
jge
inc
fstl
xchg
dec
clc
jae
imul
fisttpll
pushf
or
out
sub
add
xchg
mov
cmp
xor
jns
mov
inc
and
leave
imul
jno
je
sti
fcmovb
pop
jmp
jnp
dec
or
ja
scas
mov
std
adc
insb
insb
adc
mov
sub
adc
cwtl
fs
cmp
out
mov
xor
movhps
and
aad
std
push
js
jle
push
outsb
insb
loopne
fistps
insb
dec
xor
mov
cmpsb
je
gs
dec
aaa
in
les
mov
pop
pop
into
pop
fldt
push
add
push
pop
push
pop
xor
inc
mov
pop
scas
dec
push
lcall
ret
stos
popf
mov
xor
adc
repz
cmp
cmp
or
dec
shlb
and
dec
xor
lcall
fdivs
inc
ret
lods
rcl
inc
lock
push
jnp
out
mov
movsl
std
or
mov
mov
cs
mov
les
or
shrb
inc
cli
adc
mov
nop
in
scas
out
pop
adc
mov
hlt
insb
clc
gs
sub
rcl
dec
inc
pop
sbb
mov
popf
add
xchg
jl
cmp
je
arpl
popf
test
pop
cmp
outsb
mov
jnp
int
loope
std
sbb
mov
mov
mov
or
arpl
pushl
mov
and
pop
jb
xchg
xchg
or
mov
and
add
inc
mov
xor
scas
loopne
fisubl
jnp
repz
test
lock
xor
pop
jge
mov
jbe
jmp
adc
lea
pop
sbb
or
and
lods
mov
out
sbb
int3
daa
push
bound
cmp
xchg
imul
or
dec
or
mov
xor
inc
jp
mov
rclb
sbb
test
in
jmp
jl
sub
into
es
adc
push
insl
add
shrl
ds
cmpb
sti
ljmp
das
rclb
jns
hlt
jns
lahf
jle
pop
xor
adc
iret
jnp
cmp
pusha
xchg
mov
repz
cli
push
jge
add
adc
je
inc
jg
add
mov
mov
mov
stc
sub
or
call
lock
repz
mov
mov
add
inc
sub
add
mov
lea
mull
xor
sbb
xchg
xchg
fld
out
hlt
xor
pop
mov
loope
inc
mov
ret
icebp
xor
jno
lret
or
push
lock
inc
adc
push
test
lods
jmp
stos
lret
fldenv
cs
sbb
sub
xchg
dec
mov
int3
into
add
push
dec
pushf
jb
mov
or
push
push
rcll
lds
fimull
sarl
jecxz
scas
aas
repz
scas
xlat
add
pop
lahf
flds
mov
daa
daa
or
mov
aaa
ret
mov
sti
jb
loop
adc
aad
push
mov
add
or
sub
lret
push
jae
out
je
and
adc
std
movb
xor
mov
mov
sbb
stos
aad
je
jae
inc
push
out
xor
scas
ja
repz
jbe
jo
xchg
push
in
inc
fistps
push
bound
mov
test
leave
cmp
aad
call
pop
sub
cmc
fsubs
sti
add
cmp
outsb
push
das
in
inc
dec
or
mov
push
pusha
pushf
mov
pop
movsb
xlat
negb
shrl
mov
inc
sbb
pushf
outsb
inc
popf
out
js
mov
je
ljmp
imul
xchg
mov
xchg
gs
shrb
sub
adc
xor
inc
push
xor
fistps
mov
lods
in
mov
mov
adc
aaa
xlat
cmp
hlt
rolb
ret
data16
push
dec
or
repz
jbe
cltd
mov
incl
xchg
cs
sbb
jle
cltd
movsb
mov
stos
mov
mov
xchg
mov
push
mov
mul
icebp
repnz
sub
div
add
fisubl
cmp
fs
and
outsl
push
cmc
sahf
adc
int
push
cmp
push
pop
add
push
mov
jecxz
sbb
cmpsl
mov
shr
mov
xor
xchg
cmp
cmp
into
xlat
push
imul
push
ret
sbb
or
mov
sbb
out
int
shr
in
xlat
and
jns
add
mov
mov
std
inc
subl
lret
cs
test
inc
pop
adc
dec
pop
mov
jp
bound
jge
push
sub
ja
push
cmp
fiadds
xchg
scas
mov
jle
imul
jecxz
mov
push
sub
fcmove
mov
aas
movsb
push
dec
cmp
scas
cli
adc
pop
scas
popa
push
fstpt
fstpt
mov
jb
shl
and
sbb
pop
fiaddl
ja
xor
mov
dec
fstl
adc
push
out
xchg
pop
cs
sub
mov
imull
mov
cmp
sbb
push
mov
out
lods
jnp
mov
mov
dec
popa
mov
sti
in
mov
jmp
popf
hlt
inc
cmp
jl
mov
test
or
orb
jbe
push
jae
or
lods
xor
sbb
sbb
xor
pop
outsb
fcomps
jmp
andl
inc
and
jo
sub
outsl
sub
jbe
fwait
lret
dec
and
inc
lcall
out
movsl
jp
stc
adc
out
push
cld
ss
and
inc
test
adc
lret
shll
arpl
arpl
mov
jp
repz
dec
mov
or
jbe
loopne
clc
cmc
shl
inc
and
stc
or
test
shll
loope
inc
adc
ja
pop
mov
jmp
in
icebp
xor
sbb
add
imull
icebp
ret
add
pusha
je
inc
or
add
std
loop
adc
xchg
inc
cmpl
sub
push
iret
pop
ds
movsb
push
push
xorl
adc
dec
stos
lds
and
fwait
pop
sahf
push
pop
xor
xor
lods
add
xchg
pop
imul
adc
fcomip
nop
and
push
push
or
xchg
xor
cmp
jo
stc
jp
cli
push
lds
mov
int
dec
push
jle
inc
lods
cmp
nop
pusha
mov
loop
das
mov
notl
add
out
sbb
pop
cmpl
das
jp
lock
inc
gs
lcallw
inc
cmp
mov
shrl
stc
loope
iret
dec
pop
mov
test
add
lock
imul
add
jno
fnstcw
mov
inc
adc
sub
cmpb
or
and
push
inc
mov
decb
int3
push
insl
sbbl
int3
xlat
mov
outsl
jge
sahf
jle
fstpl
push
jmp
lock
jae
out
neg
adc
cmp
dec
imul
fcmovnu
jmp
ficomps
neg
push
mov
jb
xchg
lcall
mov
lcall
push
inc
and
outsl
cld
pop
jg
in
lahf
rclb
add
fimull
push
cli
in
daa
hlt
cmp
cmp
int3
jb
or
mov
adc
aaa
pusha
or
mov
jle
jp,pn
jecxz
data16
and
rclb
jne,pt
push
mov
mov
adc
aaa
ljmp
mov
xchg
fidivrs
or
jae
add
adc
jl
mov
popf
ds
sbb
mov
push
out
cmp
lock
mov
adc
push
push
lret
push
inc
push
sti
insb
sahf
dec
jno
daa
xchg
orl
push
test
imull
jne
stos
xor
inc
sbb
jecxz
xchg
sub
int
mov
ljmp
lods
fwait
loope
aad
and
sbb
imul
mov
fimull
pop
sbb
sub
xor
ss
js
mov
cltd
sbb
xchg
pop
dec
lods
pusha
cmpsl
cwtl
push
es
xchg
and
add
cli
cmp
cmp
inc
fnsave
jecxz,pt
and
xor
xor
pcmpeqd
in
std
lock
add
xor
cmpsl
ja
inc
fdivrs
push
out
pop
sarb
jle
mov
sbb
push
lods
jecxz
lods
pop
flds
loope
jns
pop
xchg
fsubs
adc
dec
inc
inc
mov
lods
pop
inc
or
xor
add
and
jns
and
test
insl
fldcw
xor
sbb
push
andl
cmp
or
xchg
jne
jp
out
push
pop
sbb
fdivr
out
sub
xchg
arpl
sbb
and
mov
mov
cmpsb
pop
das
daa
xchg
sti
cmp
mov
les
movsb
popf
bound
aas
lcall
mov
xor
ljmp
pusha
imul
fcmovnbe
lods
mov
push
cmp
push
leave
cmp
fs
cltd
aad
pushf
sub
cli
jbe
push
mov
lahf
ljmp
jmp
fnsave
ret
push
sahf
stos
addr16
bound
dec
xlat
in
int
lahf
adc
or
ja
int
and
loopne
fs
lock
and
cmp
lcall
jae
xor
dec
cwtl
mov
xor
daa
lret
mov
outsl
xor
jge
sti
and
jp
ss
dec
inc
stos
int
popf
mov
mov
add
js
inc
jge
cmp
js
clc
jmp
ja
clc
in
ljmp
and
cmp
rorb
loop
push
adc
add
roll
cmp
clc
cs
mov
mov
xor
flds
ds
add
pop
nop
mov
icebp
hlt
imul
or
jne
jmp
stos
ret
cmp
aas
xchg
notb
test
xchg
cmp
mov
pop
ret
loopne
xchg
sub
inc
sbb
dec
lods
push
cmpsl
fs
mov
sub
and
fldl2t
fsts
repz
push
pop
inc
popa
cmp
test
or
sbb
mov
loope
inc
je
clc
sti
push
jo
repnz
lret
or
xchg
or
call
dec
pop
negb
dec
mov
daa
xor
in
lock
mov
dec
dec
pop
jl
outsb
inc
fistpl
in
loope
sbb
fmull
fstl
or
push
icebp
xchg
or
adc
mov
sbb
mov
inc
sbb
mov
test
inc
mov
inc
xor
pop
mov
sub
mov
adc
push
out
cmp
lahf
stos
sub
inc
mov
mov
jo
repz
inc
push
cltd
pop
addr16
lret
jnp
insb
lret
cmp
push
jp
sahf
mov
and
sub
xchg
cmp
scas
sahf
test
aas
lret
jns
ja
dec
jp
add
sbb
mov
lcall
test
cmp
insl
test
ror
mov
mov
jl
test
sbb
xchg
out
comiss
mov
cld
stos
pop
jno
sub
add
js
fwait
jmp
and
pop
sbb
repz
orb
movsb
jae
xor
ds
add
inc
and
adc
add
add
and
loope
fcomps
mov
test
ret
jo
ljmp
and
adc
cmp
mov
ja
adc
fnsave
fisubrl
in
or
inc
enter
mov
inc
mov
jmp
stc
cld
icebp
pop
cltd
rorb
fcomip
stc
mov
fucomi
sti
adcb
je
jg
mov
cmp
lea
jb
sbb
test
mov
repnz
jmp
loope
inc
dec
dec
clc
outsb
mov
fiadds
loope
les
das
pop
in
repz
push
hlt
repz
sbb
jg
cld
out
lahf
ret
hlt
push
mov
out
shrb
or
fadd
mov
sbb
hlt
mov
jg
or
inc
adc
shrb
into
dec
daa
es
xor
mov
sub
and
pop
je
mov
mov
push
aaa
imul
xor
sub
inc
xor
xchg
add
loope
in
icebp
in
jbe
test
fcomps
lret
shrb
scas
inc
pop
fucomip
outsl
shrl
dec
mov
dec
out
fwait
loop
inc
fcompl
cmp
fnsave
dec
aas
cmp
test
dec
sahf
xor
pusha
mov
dec
inc
and
daa
sbb
call
insb
add
repnz
push
data16
pusha
sbb
mov
pop
rolb
cmpsl
cs
push
jne
push
mov
lahf
add
nop
xor
cld
scas
push
mov
pop
ret
jnp
dec
mov
jns
fists
pop
add
push
lock
icebp
mov
mov
jmp
pop
add
je
adc
aaa
stc
jo
scas
sub
sbb
add
dec
ret
mov
or
and
push
dec
popa
pop
or
shll
mov
int3
cmp
addr16
fwait
sub
movsl
pop
aas
pusha
sar
fmull
js
aad
imull
std
repnz
adc
into
cmp
inc
outsl
addb
pop
mov
insl
push
add
dec
or
aam
xchg
or
in
aad
gs
mov
mov
bound
mov
jmp
in
mov
popa
je
push
cmc
lds
mov
iret
or
push
jg
loope
xlat
xchg
jbe
jmp
xor
arpl
je
rorl
pop
in
cli
movsl
in
jmp
mov
cmpsl
orl
fdivl
int3
ja
ss
icebp
stos
rolb
cmc
mov
idivb
mov
pop
notl
dec
fsubp
mov
or
dec
pop
out
cmp
sbb
fistl
fucomi
hlt
das
jmp
mov
rclb
out
jg
enter
cmpsl
and
mov
add
lods
icebp
jge
test
mov
in
dec
or
or
mov
fstpl
mov
jge
jge
loop
sub
sub
popf
int
cmpsl
sbb
daa
movsl
incb
mov
sbb
mov
mov
xchg
lods
daa
sahf
mov
shrb
icebp
clc
leave
aas
cmpsl
add
adc
js
xlat
xor
xor
cltd
ds
rcrb
and
imul
mov
cmp
jb
mov
cwtl
jmp
loop
aas
mulb
daa
lcall
lret
loopne
nop
test
jmp
mov
sbb
inc
sti
mov
cmp
leave
push
and
sbb
mov
leave
jle
and
repz
shlb
scas
es
mov
shlb
ret
testb
jle
imul
jmp
int3
dec
popf
mov
mov
lea
jb
fwait
inc
je
mov
xchg
sub
into
sbb
sub
inc
mov
stc
test
cwtl
mov
lcallw
int
xchg
and
and
lret
popa
xor
js
jo
dec
in
aas
push
xorb
inc
fildll
ret
test
pop
pop
xor
cltd
sub
sub
std
cmpsb
imul
mov
jg
xor
dec
xchg
daa
push
mov
sbb
in
data16
sub
sbb
or
stos
and
xchg
and
inc
jmp
sahf
lods
test
xchg
test
jmp
loopne
xchg
fs
in
lret
lods
ljmp
nopl
lahf
ficoml
pop
add
stos
sub
test
jns
int3
or
ljmp
mov
mov
sti
lock
mov
out
int3
nop
cmpsb
nop
test
fbstp
addl
rolb
xor
hlt
jnp
cmp
sbb
mov
call
ja
insl
shll
sahf
or
repz
xor
lds
jmp
ss
sub
popa
andb
arpl
in
xchg
jo
sub
lahf
sar
mov
sbb
fidivl
cmpsl
scas
add
add
sub
shll
testb
add
mov
clc
mov
mov
js
stc
aad
jl
push
push
push
push
aad
lcall
in
ss
outsb
scas
hlt
lahf
xlat
cmpsl
mov
aas
roll
mov
xor
cmpsb
sti
shrl
fildll
pushf
movnti
mov
fsubrp
jp
lock
jne
fildl
xor
mov
aad
push
cmp
jl,pn
jno
pushf
js
enter
mov
frstor
xchg
mov
sbb
xchg
stc
loope
pusha
mov
shrb
dec
fcomi
mov
shll
insl
popa
mov
add
movsb
dec
ret
andl
into
fnstsw
imul
pop
movsl
xchg
pop
adc
imul
jge
outsb
fadd
dec
mov
sbb
mov
jno
or
pop
cmp
dec
int
filds
cmp
or
push
clc
imul
mov
and
xchg
or
adc
mov
and
faddl
jnp
or
repz
cwtl
jg
xchg
out
push
mov
jge
arpl
dec
cmpsl
mov
mov
outsb
mov
lock
in
mov
aas
push
pop
mov
or
pusha
loope
out
negb
data16
call
inc
fs
push
cmpsl
lods
cmp
lahf
test
sbb
pushf
mov
pop
out
pop
push
add
mov
pop
dec
sub
pop
mov
jne
pop
divl
mov
push
call
enter
xchg
out
roll
mov
shl
test
test
fbstp
aad
das
mov
in
mov
mov
in
ficoml
outsb
jecxz
inc
sub
sbb
pusha
adc
jge
add
mov
xor
mov
addr16
mov
outsl
ss
cmp
fnstsw
or
loopne
ret
jmp
jp
ds
dec
fsubrs
pusha
pusha
push
cmp
adc
cmp
inc
or
test
or
jb
inc
xchg
bswap
adc
adc
pop
outsl
adc
push
xlat
retw
adc
testb
popa
data16
lcall
das
mov
mov
nop
fildll
int
scas
fimuls
cltd
or
jnp
pop
sbb
lret
mov
in
xchg
inc
pop
rorl
idivl
pop
fdivr
push
xchg
jl
cmp
mov
add
fdivr
leave
cmp
outsl
subl
test
shrb
pop
pop
hlt
mov
push
repz
lcall
test
xor
jae
xchg
in
push
iret
fimuls
inc
test
cmpsb
es
mov
inc
xchg
mov
call
mov
jmp
jae
mov
xchg
and
adc
ljmp
iret
inc
inc
inc
mov
mov
aaa
and
xchg
test
cltd
popa
mov
cli
mov
sub
add
and
jecxz
movsl
movsl
mov
clc
adc
lds
cmpsb
lock
lock
cmpsb
js
adc
dec
and
std
nop
stos
xchg
test
add
std
hlt
mov
mov
xchg
sti
xchg
lods
jbe
mov
lret
in
dec
scas
or
fistpll
outsl
push
int
jecxz
loopne
mov
lahf
lcall
mov
icebp
rcll
push
xchg
cmp
orb
xchg
jo
mov
pop
mov
shll
adc
sub
xor
out
call
pop
mov
xor
dec
lods
or
mov
push
lret
mov
test
jl
mov
mov
ret
in
nop
jge
sahf
ss
xchg
adc
inc
leave
xchg
sbb
ficoms
jae
jg
lods
inc
jmp
dec
push
pop
jo
sbb
xlat
enter
push
mov
loopne
pop
sbb
jb
and
stos
pop
scas
in
cmc
repnz
mov
pop
xchg
xchg
leave
push
out
mov
lea
mov
sub
adc
xchg
sbb
push
sti
das
leave
mov
popf
addr16
and
or
dec
stos
cmp
cmc
outsl
movlps
hlt
and
cmp
mov
arpl
inc
sarb
mov
push
stc
jno
mov
stc
mov
mov
pop
movsb
ret
or
dec
lret
insl
into
movsl
inc
dec
stc
mulb
stos
xchg
rcrb
fdivrs
mov
test
faddp
jae
ficompl
daa
shll
call
sub
out
or
popa
insb
dec
aam
fistl
jecxz
negl
aas
js
loop
gs
cmpsb
scas
pop
jno
inc
add
push
fwait
ret
adc
add
mov
stc
mov
loope
mov
sbb
sarb
jnp
mov
push
lock
test
dec
push
fsin
xchg
dec
xor
sbb
add
add
cmp
add
push
ret
repz
sgdtl
insl
inc
mov
or
or
push
dec
mov
sbb
xchg
xor
rcl
rolb
cmpsb
or
test
lahf
push
adc
push
sub
mov
jmp
cs
loop
cmpb
dec
xor
sbb
ja
jp
push
out
dec
orl
ficompl
push
fnstenv
lahf
sti
out
loop
in
imul
pop
push
test
cmp
jbe
cld
xchg
push
fs
fsub
or
xchg
jecxz
loope
push
sub
addr16
mov
bound
fwait
jb
push
mov
jmp
cmp
rorl
inc
and
add
cld
ljmp
cmpsl
pop
lret
sbbb
pusha
pop
and
daa
push
dec
out
push
inc
rolb
enter
addb
repz
testl
nop
mov
addr16
push
push
movsl
pop
pop
cmc
jbe
xchg
xor
push
fs
in
sub
mov
jge
pop
push
jge
pop
sbb
and
stc
loopne
pop
jae
das
outsl
sahf
mov
push
out
jbe
xchg
cmp
push
mov
es
push
cld
fildl
cmp
cmc
stos
pushl
push
int3
cmpb
gs
pop
cmpsl
aam
dec
sti
gs
int
loope
pop
dec
outsb
in
pop
inc
or
sub
call
mov
push
cmp
les
aas
out
ficoml
scas
mov
cmp
sbbb
push
repnz
pop
call
sub
stos
adc
repz
lahf
inc
int3
test
insb
mov
imul
lock
fldl
idivb
dec
scas
ficoml
cmpsl
mov
sti
pop
sub
sarl
hlt
dec
insb
xchg
aaa
add
mov
lret
inc
and
jbe
scas
sbb
shll
gs
scas
test
adc
loop
int
mov
mov
mov
enter
fcmovb
push
xchg
loop
imul
dec
jmp
loope
xor
je
add
push
mov
lea
mov
and
jno
adc
jae
cmp
cmpsb
xchg
push
cmp
dec
test
add
daa
out
hlt
dec
lahf
inc
lret
adc
fimull
xor
cltd
outsl
fmuls
in
mov
fsub
mov
and
jno
rorl
loope
or
xor
jne
ljmp
sbb
add
pop
push
or
add
jg
xchg
or
xchg
jle
lock
sbb
std
mov
cwtl
lds
pusha
sub
movsl
xor
shll
inc
xchg
push
dec
fiaddl
repz
or
xchg
adc
lds
mov
nop
ljmp
xchg
fs
add
jp
mov
adc
inc
sahf
dec
jno
addb
fdivrl
cmp
ror
xor
sbb
fisttpll
pop
mov
hlt
ja
mulb
pop
aad
mov
pop
pop
push
mov
stc
es
xor
mov
iret
divl
pop
fdivl
pop
sbb
dec
cmp
pop
lahf
loopne
dec
roll
loopne
mov
rorl
les
notb
fldl2t
std
mov
or
jo
imul
imul
push
jne
mov
mov
jo
insb
mov
cmpsl
shrl
outsl
sti
shll
xchg
cmpl
jo
fdivrs
cs
daa
movlps
xchg
lret
out
jno
cmp
cmp
scas
loop
je
pop
cmpsl
push
lods
xlat
in
divb
repz
sbb
sub
popf
incl
xchg
jecxz
jns
jl
jg
hlt
insb
and
imul
idivb
std
fdivrp
xchg
out
xorl
mov
jnp
jg
jle
jnp
push
mov
test
xchg
cs
or
stos
test
pop
sub
paddd
pop
adc
clc
insb
cmpsb
jmp
mov
jg
jge
movsl
mov
inc
aas
dec
xor
or
incl
in
bnd
sbb
jge
mov
mov
leave
fwait
mov
pop
out
ljmp
enter
insl
xor
and
mov
lret
and
xchg
shr
or
cld
jle
add
sbb
pop
ret
fwait
sbb
in
ja
mov
imul
or
dec
clc
movsb
xor
mov
and
fwait
push
out
mov
cmp
and
leave
or
imul
std
xor
cmp
daa
adc
lcall
inc
mov
jae
and
add
je
inc
std
scas
sti
cmp
scas
in
lret
inc
or
xchg
pop
xchg
lret
mov
push
pop
jmp
sbb
push
jo
imul
orb
orb
sbb
jp
jecxz
adc
push
mov
mov
outsb
scas
jbe
lea
jge
ja
nop
xor
mov
enter
icebp
mov
jb
lock
sub
sub
loop
pop
mov
cmp
jns
sbb
sahf
and
test
fistpll
cmp
add
pop
sub
mov
pop
xchg
arpl
insl
jae
sub
bound
jnp
pop
mov
test
sahf
test
das
mov
mov
jns
push
push
push
je
arpl
dec
xchg
and
inc
add
mov
sub
cmp
pop
and
hlt
outsl
jb
mov
test
dec
imul
imull
mov
pop
jmp
xchg
xchg
xor
xlat
jle
jg,pn
push
and
xrstor
push
dec
fisubrl
mov
fadds
xchg
mov
push
in
inc
xor
bound
mov
loope
in
cmp
insb
mov
scas
mov
repz
ss
push
jno
mov
sub
out
shll
sub
jb
inc
imulb
ficompl
fstpt
xchg
xor
xchg
add
mov
stos
les
pop
fwait
push
ja
jne
jl
inc
repz
sub
insb
insl
cli
push
cwtl
cmp
inc
inc
out
xor
xchg
and
dec
test
sub
inc
and
or
sbb
xchg
scas
mov
add
add
mov
int3
icebp
ds
pop
and
jmp
pop
xchg
out
jp
xchg
sbb
add
add
popf
sub
aad
insb
dec
mov
cmp
ds
lods
int
jmp
jge
jle
push
repnz
adc
popf
dec
mov
fwait
cmp
ja
stos
dec
mov
icebp
and
ret
xchg
sub
push
sbb
mov
jle
xlat
mov
adc
int
hlt
cmp
push
cli
outsb
ficoms
mov
sbb
sbb
jbe
mov
push
inc
or
loope
jae
je
jp
ss
lret
cwtl
fwait
adc
cmc
mov
lea
add
fadds
sbb
dec
pop
jae
lahf
sub
add
popl
ror
xchg
jnp
adc
fsubs
popa
mov
fstpl
fsubs
daa
push
pop
loop
jo
ret
or
xlat
or
imul
or
bound
pop
mov
and
push
mov
jge
add
xchg
add
cli
or
push
and
add
push
sbb
or
inc
nop
adc
pop
ret
aaa
add
cmp
sbb
xor
out
push
mov
push
sub
outsl
cmp
leave
stos
aaa
add
nop
xor
or
xchg
bound
xchg
insb
add
mov
fmuls
jns
lods
hlt
xor
inc
xchg
in
insb
mov
adc
push
cmovo
mov
xor
adc
lahf
ret
cltd
xor
dec
jb
mov
lods
jge
mov
ja
imul
popa
ret
adc
sti
movl
jecxz
js
cmp
mov
sbb
ss
fisttpl
and
jecxz
andb
mov
loope
stc
das
pusha
addr16
hlt
les
mov
sbb
mov
and
dec
inc
popa
mov
mov
lret
loop
cmp
in
movsb
pop
mov
sub
jl
ret
test
ds
movsl
sbb
daa
repz
dec
lock
xorl
xchg
nop
add
jecxz
inc
mov
dec
jg
sbb
mov
sbb
fdivp
in
sub
xchg
and
push
dec
bnd
rcrb
push
pop
ja
jns
std
sbb
pop
cmp
mov
push
add
scas
imul
add
xlat
dec
xor
push
dec
push
bound
pop
cmp
inc
and
xor
xor
dec
push
loope
jae
mov
xchg
jb
mov
jl
aaa
cwtl
daa
xor
mov
loop
push
in
outsb
cs
es
loope
pop
xor
jle
data16
mov
inc
sti
in
insb
cmp
and
adc
jmp
int3
cltd
mov
adc
iret
fldcw
cwtl
lcall
rcrl
insl
in
leave
loope
pop
adc
lret
push
lret
test
sbb
das
fldt
popa
push
nop
in
inc
xchg
pop
pop
mov
inc
and
jb
jne
subl
sub
inc
inc
and
gs
sbb
cltd
pop
dec
pushf
lret
push
js
xor
or
mov
stc
mov
shlb
subb
xor
ds
inc
std
mov
pop
and
mov
andl
or
dec
rorl
aas
mov
stos
mov
cmp
adc
xchg
mov
nop
mov
mov
pop
leave
sub
jo
outsb
je
push
inc
or
sahf
out
test
adc
bound
pop
insl
ds
push
ret
lret
adc
jno
ret
pop
iret
in
arpl
lds
data16
pop
jbe
or
int3
inc
rcll
sub
and
icebp
movb
stos
lds
div
inc
mov
js,pt
xor
aad
jae
mov
pop
xchg
cmpsb
fsubrp
dec
inc
push
les
imulb
popa
pop
or
mov
in
cmp
dec
popf
outsb
jns
sbb
scas
into
push
lret
pop
adc
push
sub
mov
sbb
scas
enter
lret
mov
rorb
lds
scas
popf
cs
and
ret
test
aaa
jbe
ret
jmp
mov
stc
jne
pop
or
subl
mov
inc
xchg
rcll
test
push
inc
out
and
inc
loope
gs
and
dec
imul
sub
rolb
stos
out
lods
xchg
cmp
cmpsl
pop
cs
jmp
inc
enter
jo
sbb
mov
in
aas
cmp
lret
add
xchg
inc
jno
dec
jns
sbb
addr16
out
fs
push
and
or
sub
dec
jecxz
and
and
jg
cwtl
xchg
lods
xchg
xlat
push
out
mov
mov
stos
lock
fs
cmpsb
pop
pop
inc
pusha
mov
dec
ds
push
sub
mov
ret
inc
mov
rorb
int3
daa
inc
test
push
andb
enter
mov
js
sub
dec
sarl
je
lea
bnd
cli
dec
pop
push
outsl
jbe
mov
jns
call
outsb
bound
fwait
inc
mov
mov
in
aam
insl
in
push
cmp
jne
sbb
adc
lea
mov
in
rcr
add
pop
test
sbb
ds
adc
inc
cltd
arpl
aam
cmp
adc
insb
les
insl
mov
in
lret
aaa
bound
pop
sub
pop
cmpsl
add
out
mov
push
dec
inc
mov
mov
jns
pop
sub
dec
fldl
mov
pop
pop
mov
test
mov
fildl
inc
cmpsb
fisttpl
add
cwtl
aaa
jl
jecxz
sbb
jl
dec
or
dec
dec
in
xor
popf
in
mov
popf
daa
clc
ret
repnz
mov
jb
mov
add
pop
or
xor
pusha
outsl
jnp
sub
fstp
icebp
in
fcoms
xchg
push
xor
sbb
xor
xor
cs
push
lds
dec
jecxz
in
cmc
lea
add
add
add
fdivl
dec
mov
adc
adc
subl
popf
shr
dec
inc
test
enter
sbb
fdiv
out
cmp
lret
push
icebp
in
pop
jnp
call
and
mov
adc
or
push
lret
dec
fs
xchg
push
clc
dec
xchg
mov
arpl
sub
cmp
fisttpl
pop
data16
xor
pop
stos
divps
out
push
add
stos
jae
jle
or
jb
cld
testb
or
out
repz
xchg
xlat
xchg
mov
sbb
js
cmp
cmpsb
loopne
es
mov
pop
pop
out
and
sarb
cs
js
sub
adc
jp
loopne
inc
sbb
cmpsl
mov
int
cmpsl
lret
shlb
xchg
leave
mov
push
cmpl
fmul
push
dec
jecxz
sbb
jnp
ja
hlt
ficompl
cmp
pop
inc
dec
mov
cmpsl
addr16
fyl2x
call
cwtl
test
jnp
js
dec
dec
pcmpgtb
jl
cmp
mov
stc
mov
aaa
jp
cmp
rcrb
xchg
jo
add
xlat
repz
mov
mov
mov
lea
xor
inc
lea
xchg
dec
cmp
xor
pop
imul
fdivrs
sub
outsl
out
xlat
in
push
xor
fstpl
mov
or
mov
sub
std
jno
bound
jae
cltd
cmp
xchg
inc
inc
mov
aam
xor
xchg
leave
xchg
ds
xorl
fwait
jl
leave
lret
mov
jl
stos
fldt
mov
add
call
jo
xchg
xchg
mov
ja
int
jle
orb
sbb
add
cmp
mov
insb
cwtl
imul
out
stos
xor
lds
push
pushf
push
xor
and
shl
and
js
sub
iret
pop
pushf
leave
xor
mov
and
mov
sarb
cltd
setle
ret
jb
inc
int
cld
inc
sbb
mov
shl
push
cld
std
pusha
sub
dec
or
mov
out
lock
mov
xchg
push
int
mov
daa
fildll
lods
add
inc
fisttpl
pusha
push
pop
mov
adc
push
jns
cs
testb
aad
out
jge
pop
sti
hlt
std
gs
jnp
and
cli
je
mov
enter
xchg
xchg
mov
mov
xlat
data16
in
sub
addr16
push
mov
xchg
mov
out
sahf
mov
xor
xchg
pop
xchg
xor
or
mov
cmp
mov
divb
cld
into
lret
lea
and
stc
cwtl
icebp
inc
sub
push
push
or
aaa
push
sub
xor
pop
pop
inc
dec
fsubl
mov
inc
outsb
shrb
xlat
jmp
lods
push
jnp
out
push
int3
jp
out
sub
adc
fwait
sbb
push
dec
fs
mov
in
xor
aad
sbb
jge
push
cmp
mov
xor
nop
sbb
rcrl
loopne
shl
xor
lahf
sbb
sbb
xchg
inc
aad
cltd
and
dec
push
in
push
imul
push
outsl
in
sub
jbe
jbe
insl
in
jns
sbb
stos
mov
pop
ja
xor
ss
dec
and
lret
inc
push
lds
pop
fnstsw
sbb
jns
out
or
jge
pop
cmpsb
push
push
shl
push
mov
stc
cwtl
pop
aad
fcmovu
jo
arpl
sbb
jp
cwtl
enter
fistps
inc
xor
dec
ss
ret
push
sub
dec
jo
adc
or
test
push
mov
pop
mov
sahf
repnz
pop
mov
mov
mov
cmp
sub
xchg
leave
xchg
jl
cmpsb
and
mov
jle
add
push
ljmp
loop
mov
pop
mov
int3
lret
ljmp
stc
add
dec
jne
jp
std
jae
or
push
gs
mov
aas
mov
jg
pop
cwtl
jb
dec
daa
cmpsl
fbstp
or
cs
push
mov
xchg
rol
out
sub
dec
cs
sar
sahf
notb
lcall
fcoms
sub
add
cmp
daa
loopne
dec
push
aam
jb
mov
jle
loopne
lret
xchg
mov
dec
jbe
fcoms
mov
in
pop
pushf
rcrb
test
sub
pop
add
popf
xlat
pop
jg
test
sbb
adc
idiv
add
sbb
pop
push
out
and
inc
sbb
jne
jb
mov
lcall
jb
inc
xchg
dec
dec
inc
xchg
stos
arpl
sbb
mov
jmp
mov
cmp
sub
jle
fwait
adc
mov
test
cmp
aaa
in
js
cmc
in
xor
push
lods
push
push
mov
sbb
mov
jmp
cmp
ret
or
mov
xchg
or
aam
test
fnsave
dec
clc
divl
mov
mov
jnp
xchg
jo
mov
rcl
sub
imul
inc
jnp
cmpsl
outsb
push
imul
push
inc
les
and
cmp
sub
mov
insl
or
cwtl
or
cmp
arpl
push
jae
push
es
mov
test
cli
lret
in
mov
jno
pushf
push
inc
xchg
cwtl
test
add
mov
shr
testl
dec
lea
fsub
cmpsl
sti
in
or
jno
mov
mov
int3
jno
dec
fidivrs
test
je
int3
daa
inc
rcrl
pop
adcl
out
push
scas
mov
adc
cmp
cmp
lods
xor
cmp
inc
xchg
insb
inc
std
stos
gs
sahf
mov
out
inc
test
xchg
xor
mov
loope
pusha
imul
lods
jmp
notl
dec
cmp
stc
lds
sub
mov
or
push
fmuls
outsb
repnz
or
jg
es
js
scas
push
xchg
out
lods
shr
pop
mov
or
or
fmulp
repnz
shll
testb
shlb
out
inc
inc
ja
nop
in
cmp
push
jno
dec
testl
das
data16
sbb
cmp
in
outsl
fidivs
sub
jb
pop
ret
jmp
lahf
dec
sbb
push
sub
xchg
fnstenv
pushf
leave
push
pop
xor
adc
shr
ficoml
jp
and
or
inc
push
push
adc
mov
inc
inc
xchg
sbb
push
jp
insb
dec
jecxz
add
and
mov
popf
pop
cmp
dec
xchg
mov
std
loop
mov
push
stos
andl
jecxz
mov
cmpsb
xor
stos
mov
ret
mov
mov
lahf
popf
test
in
into
dec
or
shll
pop
dec
ja
adc
daa
push
enter
add
mov
xchg
add
xchg
or
mov
inc
push
mov
insl
jl
push
in
sbb
jb
ret
mov
cs
and
push
pushf
and
int3
inc
mov
sahf
adc
mov
and
adc
inc
adc
cmpsl
inc
mov
sub
fs
mov
sti
mov
mov
cli
xchg
cmp
mov
pop
pop
jno
mov
cmc
cmp
scas
mul
cmp
scas
pop
cmp
pop
jle
shlb
jno
imul
ret
pop
rorl
jb
out
fldt
lods
adc
addl
les
lds
jb
bound
mov
jbe
sbb
test
cmp
xchg
mov
mov
lret
lods
mov
add
pop
sbb
loopne
aaa
test
jno
inc
imul
pop
jb
icebp
mov
andl
mov
mov
bsr
sub
push
mov
adc
popa
fldenv
stos
jno
or
int3
insb
lcall
adc
das
xor
outsl
and
adc
ds
mov
mov
in
push
jmp
inc
mov
aad
lret
ret
sub
dec
data16
fisubl
lret
popl
pop
daa
pop
cmp
xor
pushl
jp
fdivr
push
clc
xlat
addr16
sub
cltd
fsubs
icebp
mov
sub
jb
dec
out
xlat
repnz
xlat
mov
cmc
push
xchg
sub
pop
push
mov
mov
ffree
stc
and
mov
into
out
and
test
push
push
mov
je
xchg
jb
iret
mov
lods
ficoms
and
xchg
inc
inc
call
mov
dec
fwait
dec
int
mov
adc
jnp
clc
xchg
dec
dec
or
xor
lods
sbb
in
inc
pusha
mov
mov
mov
pop
push
mov
inc
jb
xchg
mov
mov
sahf
icebp
mov
dec
push
xor
testb
xchg
lds
sti
movsl
test
adc
enter
es
fwait
adc
fidivrl
inc
or
xor
pop
in
adc
push
in
sub
jl
bnd
mov
daa
insl
pop
scas
add
mov
sarl
cmpxchg
test
push
out
inc
mov
xorl
jno
push
ljmp
ret
es
mov
xchg
mov
mov
mov
sub
mov
mov
xchg
fcmovu
shll
jb
jb
push
repz
xchg
jne
lcall
push
insb
adc
cmc
pop
dec
sub
mov
lods
pop
loop
sub
inc
or
and
xchg
xchg
mov
jo
outsb
loope
ror
shrl
shlb
je
xchg
test
pop
xchg
mov
cmp
push
mov
cmp
sub
test
fdivrl
retw
repnz
lea
repz
mov
jmp
das
addr16
pop
pop
cmpsl
std
add
adcl
xor
popf
cmp
repz
dec
sub
add
mov
test
sub
ja
sub
leave
or
insl
add
mov
imul
push
mov
rep
leave
pop
out
stos
insl
pop
sub
adc
push
in
lret
mov
xor
push
into
mov
and
clc
mov
mov
adc
pushw
mov
scas
push
icebp
lret
cmc
cmp
pop
test
mov
fwait
data16
jecxz
cmp
sahf
sahf
xchg
lcall
mov
loop
pop
add
mul
sub
ret
nop
in
daa
stos
mov
jo
mull
popf
cwtl
repz
xlat
adc
sub
mov
xor
in
or
mov
cmp
mov
sub
sbb
lret
cmc
cmp
arpl
jbe
testb
jp
sbb
sub
and
sub
inc
cld
push
hlt
bound
std
loopne
push
test
sub
aaa
sub
dec
sub
mov
jnp
and
rcl
mov
andb
mov
xchg
es
popf
sub
ja
pop
mov
pushf
xor
xchg
cld
test
test
sbb
mov
pop
outsl
push
cmc
movsl
mov
xor
jl
stos
xchg
fs
adc
sub
jnp
xlat
xor
mov
in
fsubrs
xchg
inc
rcl
mov
subl
in
fdivr
idivl
jnp
push
jnp
repz
stc
lods
mov
add
outsl
daa
icebp
dec
ja
lock
jns
pop
daa
push
xor
pop
and
fs
jle
cmc
jbe
jbe
in
cmp
cld
xchg
sbb
add
mov
xchg
push
out
arpl
jl
in
add
cmp
xchg
xchg
in
mov
loop
ret
pop
and
cmc
mov
dec
push
imul
pushf
out
push
mov
icebp
pop
mov
cmpsl
xchg
and
fucomip
ret
fldenv
add
fdivs
movl
imul
dec
mov
in
out
movsl
xchg
inc
mov
mov
mov
lret
add
ljmp
pop
or
mov
mov
push
out
or
dec
push
in
in
push
jl
or
mov
and
mov
push
ds
or
jno
adc
mov
cltd
sbb
push
mov
dec
dec
aaa
cmc
leave
cmp
imul
jmp
movsb
mov
adc
xor
movsl
xchg
dec
cmp
jno
repz
cmpb
xor
adc
lret
cltd
fsubl
jmp
shl
sbb
mov
jb
fsubrs
mov
xor
loopne
cmc
movsb
xor
mov
fld
fsubs
cmp
and
aad
sbb
and
test
ja
adc
xchg
arpl
jmp
lods
sarb
test
mov
js
mov
scas
jb
leave
mov
pushf
test
pusha
mov
pop
adc
nop/reserved
or
pop
int3
push
xor
dec
daa
push
xor
roll
das
cmp
pop
out
test
movsl
xor
aam
cld
add
xchg
inc
sbb
shrl
lods
add
andb
loopne
sahf
fs
sbb
out
gs
les
adc
pop
das
test
in
ret
rcr
mov
xchg
cmpl
imul
add
cmpsb
pop
push
adc
aam
arpl
jge
sti
add
je
les
push
aas
jge
sbbb
lds
adc
ret
std
jp
loop
lods
push
cmp
and
push
adc
dec
shlb
mov
int
adc
sbb
sahf
movsb
or
jnp
sbb
ja
adc
scas
test
shll
xor
rcrb
pop
adc
scas
mov
dec
mov
ds
jb
repz
aaa
or
jge
scas
popf
ja
inc
and
push
sbb
add
inc
sbb
xchg
testb
out
lods
mov
xor
out
and
jmp
iret
rorb
mov
adcl
or
ret
inc
filds
call
inc
mov
and
out
cmc
sbb
jecxz
popf
push
ds
inc
ret
mov
out
adc
add
sbb
adc
mov
jno
adc
push
mov
aam
loopne
shll
sub
or
sbb
ja
movsl
sub
sub
fs
loop
adc
push
xchg
adc
sub
sbb
mov
or
add
pop
fs
stos
popa
lcall
dec
jl
gs
enter
nop
mov
cwtl
mov
and
lea
icebp
dec
enter
adc
push
addr16
mov
and
jge
fwait
inc
push
mov
shrl
xchg
cwtl
inc
push
outsl
and
inc
dec
outsb
and
stc
movsl
mov
aad
fwait
xor
sbb
jle
adc
cmp
mov
push
cli
xchg
daa
push
arpl
sti
out
mov
or
xor
mov
mov
sarl
sbb
clc
dec
cmpl
ja
std
jne
and
jl
jmp
lcall
shlb
sub
cmpl
jp
mov
jae
fwait
xor
gs
xlat
int3
aad
les
aad
jp
imul
push
int
dec
imul
mov
in
mov
lea
adc
mov
or
in
hlt
jns
mov
insb
pop
fcmovnb
fimuls
push
xchg
dec
test
sbb
out
insl
and
lcall
enter
jmp
ljmp
es
in
xor
fsub
or
mov
and
add
jle
sbb
fsubrl
pop
mov
mov
les
pop
mov
in
ds
add
les
fistl
cld
outsb
insl
arpl
push
arpl
in
faddl
jnp
add
sub
test
xchg
dec
pop
push
push
mov
mov
popa
loopne
dec
out
jnp
lcall
xor
mov
data16
push
pop
fmuls
scas
out
cli
mov
dec
mov
fbstp
lea
push
into
dec
xor
out
lds
adc
out
ss
and
mov
dec
pop
sbb
test
add
aas
xor
aad
mov
or
push
jb
mov
push
jbe
mov
xor
dec
sub
popf
aas
dec
popf
sbb
loopne
xchg
stos
jbe
adc
jge
xlat
icebp
outsb
pop
adc
pop
xchg
dec
icebp
mov
cltd
xor
inc
inc
out
jl
sbb
inc
sub
mov
cmpsl
rcrl
and
arpl
rcpps
shlb
jmp
push
into
jle
mov
mov
mov
fs
cltd
push
adc
stos
mov
mov
das
cli
call
mov
jbe
sub
pop
scas
cmp
lock
mov
inc
inc
out
pop
test
sub
pop
push
sub
mov
jmp
inc
lds
pop
inc
push
adc
sbb
movsl
in
pop
xor
xor
fldenv
adc
pop
ret
jmp
daa
push
mov
adc
stc
aam
icebp
xchg
mov
ficompl
add
xor
jle
mov
jle
out
dec
loopne
pop
jmp
inc
push
popf
and
xchg
ret
lods
push
aad
push
repnz
cmpsl
cmp
jae
jae
push
dec
fcomps
das
cwtl
out
jo
fcompl
clc
test
push
insl
mov
xchg
sbb
sbb
dec
mov
dec
lahf
shl
out
clc
inc
xchg
sahf
stos
in
xchg
outsl
mov
sub
hlt
pushf
mov
stos
negb
pop
cwtl
outsl
pop
add
xlat
jbe
pop
mov
cmpsl
xchg
insl
cli
push
aas
in
xor
dec
jb
xor
fsubl
in
testb
out
pop
lret
divb
push
pusha
out
pop
dec
outsl
pop
or
insl
test
inc
jl
fstps
jo
popf
loope
jne
ljmp
imul
pop
aad
cmp
fld
loopne
aas
insl
gs
insb
xor
sub
mov
push
inc
sbb
sub
xchg
xor
ss
or
cmpsl
data16
jge
cmpsl
int3
jnp
test
cmp
pop
cmpsb
sub
cmpsl
enter
lret
outsl
mov
dec
jns
outsb
mov
in
insb
xchg
mov
and
sbb
ss
subb
je
lea
mov
and
push
xor
rol
cmpsl
repnz
xor
and
cmp
gs
jns
outsb
jp
out
inc
add
int
pop
daa
sbb
jns
outsb
mov
stos
in
or
lret
scas
jb
xor
xor
jp
push
lock
xchg
psubd
add
mov
fsts
and
push
xlat
adc
or
aas
jbe
rcll
jp
sub
ds
and
arpl
jmp
lret
xchg
adc
xlat
insl
and
jo
clc
pop
repz
in
repnz
pop
sahf
pusha
aas
mov
sbb
fwait
dec
jno
mov
and
pop
call
adc
sub
std
mov
adc
mov
aad
dec
lea
add
sti
hlt
mov
arpl
push
inc
je
pop
arpl
or
test
sbb
enter
lea
mov
or
inc
movb
inc
mov
je
xor
into
int
stos
cmp
push
inc
inc
mov
out
into
outsl
insl
repnz
pushf
in
pop
fisttpll
sbb
dec
aad
sub
adc
or
dec
dec
stos
jb
push
dec
pop
push
dec
jb
fs
pop
xchg
mov
mov
cs
pop
insl
or
adc
mov
adc
dec
icebp
or
test
mov
les
jle
test
movsb
int3
repnz
xor
push
and
jle
mov
sahf
shl
lahf
hlt
repz
leave
std
mov
sti
in
jmp
sti
jnp
aaa
mov
out
mov
sub
daa
push
mov
sahf
jne
mov
jbe
mov
jae
imulb
aad
cmp
ftst
xchg
push
scas
xor
sub
xchg
xor
leave
push
cmp
les
or
cltd
push
into
or
and
mov
sbb
xchg
rclb
loop
addb
xor
push
out
cmpsl
call
mov
xchg
add
in
stos
or
mov
popa
dec
sub
sahf
sti
and
jns
push
stc
sbb
fsubl
dec
int3
mov
xor
mov
fimull
daa
adc
mov
fstps
push
int
pop
mov
pop
jge
mov
pop
test
push
mov
ljmp
cmp
in
outsb
sub
xchg
adc
test
lods
out
jno
fcoml
xor
movsb
arpl
jle
pop
xchg
pop
mov
adc
xchg
pop
stc
sub
int3
fbstp
push
sbb
jle
push
adc
insb
cmc
stos
cltd
mov
inc
push
scas
loope
or
rcrb
popf
inc
dec
mov
push
lret
xchg
mov
push
shlb
fsubl
mov
fidivrs
in
mov
add
push
sbb
dec
fiaddl
xchg
pop
imul
cld
stos
jns
push
mov
mov
cli
sub
sub
sbb
cmc
and
jo
mov
jp
test
dec
cld
dec
jg
sbb
adc
jb
push
aam
test
jns
daa
lds
movb
stos
xchg
inc
mov
xor
adc
mov
std
imul
xchg
loopne
pop
outsl
push
jmp
xlat
sub
cmp
mov
adc
xchg
mov
push
push
ljmp
pop
or
fldenv
scas
sahf
fdivr
lahf
xor
nop
or
jns
add
xor
lret
push
fists
adc
rolb
mov
cli
jne
mov
testb
pop
cmp
mov
es
stos
cmp
fcmovbe
jns
and
mov
out
test
cmp
cli
or
lahf
inc
xchg
arpl
push
xchg
orb
xchg
mov
xchg
ss
ja,pt
icebp
mov
insl
movups
xorb
xchg
jnp
mov
push
movsb
outsl
pop
cmc
cmp
push
stos
mov
and
xchg
mov
pop
sub
insl
or
insl
pop
xor
sub
jp
xor
test
movsl
cltd
sbb
add
sahf
movsl
into
jne
pop
mov
mov
jmp
dec
rorb
sbb
adc
pop
std
lds
dec
inc
scas
dec
iret
scas
mov
lahf
jmp
insb
pop
cmp
enter
lods
ret
ss
aam
insl
dec
dec
pop
mov
pop
xchg
add
or
push
fimuls
sub
pop
shll
sub
xor
jb
cmp
cmp
sti
xchg
mov
jae
push
jne
test
mov
cmpsb
stos
push
sbb
cmp
adcb
int
stos
cmp
ret
cltd
mov
mov
je
jae
xchg
pop
xchg
and
dec
mov
push
les
mov
cmp
in
xor
gs
pop
test
xorb
stos
rcr
scas
fstps
dec
jp
mov
insb
xchg
scas
push
je
enter
inc
xchg
inc
mov
outsl
xchg
cmpsl
jae
das
push
clc
mov
dec
cmp
sbb
out
cmp
jbe
inc
inc
xchg
sub
sub
daa
imul
jp
je
es
out
mov
inc
imul
dec
std
lds
xchg
jne
mov
sub
jp
push
mov
out
divb
test
int3
push
and
xchg
fnstenv
push
int
mov
iret
adc
jle
in
push
fimull
gs
ljmp
mov
fsubs
adc
dec
xor
cmp
stos
cmp
iret
cmpsl
js
cltd
loope
mov
dec
fcomps
div
cmpsl
imul
pusha
outsb
mov
test
jae
lcall
stos
mov
ss
stos
pop
cmp
dec
aaa
cmpsl
scas
xlat
adc
sub
push
sub
out
cmp
mov
in
cmpsl
stos
lea
mov
jo
fldt
push
fimull
cmc
cltd
cmc
sbb
and
aaa
push
cmc
or
ss
aaa
mov
sbb
xchg
inc
iret
and
mov
scas
stos
lods
je
cwtl
push
fxch
adc
dec
scas
and
hlt
xchg
push
in
push
adc
adc
and
xchg
ds
mov
sbb
lahf
xlat
xor
mov
dec
dec
mov
mov
sahf
pop
nop
mov
stc
or
and
rcrb
mov
dec
inc
cmp
out
mov
add
push
and
bound
inc
inc
lret
stos
xor
jmp
and
inc
test
stc
out
ficompl
mov
push
in
cmp
and
gs
xchg
int3
adc
push
fwait
pop
ss
cmp
insl
cmp
dec
push
iret
arpl
jb
add
sbb
mov
fwait
in
repnz
in
testb
test
cmp
dec
xor
sub
stos
in
adc
mov
shlb
push
add
xor
and
leave
mov
sub
lock
sbb
xchg
cmp
test
sbb
aam
add
fstpl
sahf
jmp
pop
dec
or
sub
std
jne
push
cmp
cmp
imul
add
sub
lret
sub
jle
xchg
dec
mov
inc
test
jbe
pop
mov
dec
ljmp
mov
mov
dec
fldt
sub
sub
in
xlat
fsubs
dec
out
dec
xchg
adc
xlat
sub
aam
fisttpll
loop
clc
xchg
sbb
faddl
fiadds
push
inc
arpl
lret
mov
push
mov
jne
pop
xor
stos
pop
cmp
jge
addl
pop
jns
sbb
bnd
fnsave
scas
ficompl
sub
add
ror
aad
data16
cwtl
sahf
pcmpeqb
mov
mov
imul
add
lret
push
inc
cltd
mov
inc
fbld
cmpsb
or
aaa
push
pushf
inc
rorl
dec
jge
lahf
jecxz
test
repz
push
push
sub
fldt
xchg
lods
shrb
es
jb
jbe
xchg
addr16
dec
inc
xchg
pusha
adc
jne
jne
rorb
sub
pop
scas
hlt
pop
movsl
and
dec
and
pop
iret
fdivp
adc
dec
insl
leave
xor
and
imul
inc
sbb
hlt
loop
and
dec
pop
jae,pn
js
sub
arpl
pop
scas
push
pop
sub
in
xchg
fstps
dec
daa
pop
data16
pop
mov
push
inc
mov
jmp
push
mov
dec
test
leave
or
addl
cmpsl
cmpb
xchg
insb
enter
jne
cltd
add
jbe
push
xchg
ret
insl
int
leave
in
lods
xchg
xchg
mov
das
out
or
adc
add
fcoms
mov
movsb
mov
sub
pop
adc
cmpsb
loopne
cmp
sbb
xchg
push
ret
jns
xchg
fcom
sbb
mov
or
pop
or
insb
aad
or
adc
xchg
ds
and
int3
cmpsl
pop
lret
sub
fwait
out
push
adc
push
aam
pop
lahf
lods
xor
inc
add
stc
ljmp
mov
or
or
mov
nop
insb
xchg
fstpt
xchg
stos
addl
add
dec
das
inc
jo
es
in
jbe
popf
loopne
push
mov
push
fcomps
cmp
fnstcw
xchg
dec
mov
adc
lahf
pop
ds
xor
ss
test
inc
pop
jns
sub
mov
movsb
sbb
cmp
insb
lods
data16
mov
es
clc
sar
xor
jno
lcall
cmp
out
mov
jne
fcoml
movsb
sub
aaa
mov
mov
pop
out
dec
lods
sub
add
repnz
mov
aas
mov
mov
notl
lret
out
sub
cmpsb
push
adc
jmp
sbb
insl
xor
push
std
mov
repnz
rolb
data16
pop
xor
adc
popa
loop
push
pop
mov
cltd
stos
js
lret
jbe
loope
sbb
movsl
and
push
pop
sub
stos
imulb
push
sahf
imul
or
inc
jge
xchg
fisubrs
xor
dec
ja
cmp
xchg
cmp
notb
pop
xchg
xor
aam
or
mov
pop
imull
mov
cmp
notb
push
ds
push
cmp
inc
cmpsb
test
in
xchg
jnp
xchg
sub
movsl
in
cmp
or
cmpsb
aam
jb
push
cmp
in
sarl
lds
addr16
popa
sub
xchg
lods
dec
repnz
dec
mov
sub
jnp
sub
ret
imul
sub
in
stos
enter
pushf
jge
or
xchg
xor
lods
or
cmp
lods
or
ja
outsb
leave
mov
insb
stos
cmp
adc
repnz
fcom
mov
cmpsb
lea
popf
mov
jp
mov
dec
dec
xchg
orl
out
add
cmpsl
dec
in
cmp
fcoml
cmc
loope
adc
push
fsubrp
push
in
mov
add
sub
hlt
dec
adc
in
mov
inc
stc
inc
xchg
cmc
cltd
mov
and
lock
jae
or
imul
sbb
enter
xchg
push
lds
aam
cmpsb
lcall
rclb
xor
out
fs
hlt
or
mov
and
fwait
nop
adcl
into
lahf
lcall
call
pop
lods
push
test
leave
addr16
inc
push
pop
or
cmc
es
mov
and
cltd
shll
adc
xchg
cmp
and
pop
pop
addr16
xchg
jp
push
pop
imul
cltd
sbb
shl
aam
lahf
stc
sub
in
jae
jp
fisubl
movsl
dec
pop
jnp
mov
int3
cli
mov
test
xchg
xchg
cld
into
cmc
mov
push
pusha
scas
inc
fwait
inc
lods
jp
lea
add
xchg
imul
xor
and
pop
imul
leave
into
test
mov
popf
dec
jge
pushf
fucomi
mov
lods
add
dec
mov
scas
rcl
ljmp
mov
int
out
pop
dec
les
pop
cmp
call
or
addr16
lea
dec
stos
mov
push
jae
scas
xor
dec
iret
push
xlat
push
stos
sub
xlat
sarb
int3
hlt
insb
movsb
cmpsb
xchg
addr16
and
mov
pushf
mov
cmp
xor
fcoml
insl
inc
nop
jnp
daa
sub
sbb
xor
xchg
aam
scas
hlt
pop
shl
sbb
or
imul
push
sti
jmp
std
notb
lea
mov
out
mov
outsl
mov
stos
xor
aad
push
loop
lods
repz
mov
and
or
pop
std
jno
mov
repz
mov
lds
pop
insl
jp
das
xor
push
sbb
mov
cmp
sbb
jl
ret
xor
test
xor
daa
mov
add
cmpsb
mov
scas
dec
daa
in
out
cmp
lret
stos
mov
cmp
xchg
hlt
xchg
movsb
es
repnz
int3
sbb
adc
lahf
mov
insb
pop
jg
bound
adc
and
popf
int
push
daa
jbe
xchg
adc
cmp
jae
add
add
push
add
stos
stos
xchg
mov
lods
mov
or
push
addr16
or
dec
pop
es
je
xchg
gs
test
mov
mov
test
insb
lcall
lds
jne
popf
xchg
les
lret
inc
xchg
xchg
lds
jae
arpl
imul
lret
mov
fistps
into
cli
push
cmpsl
jns
add
mov
shlb
xchg
dec
pop
pop
movb
and
xor
cmp
cli
push
psrlq
push
jg
push
fiaddl
ss
jle
std
repz
mov
cld
clc
jg
xchg
fwait
jmp
sub
out
frstor
xchg
test
pop
iret
mov
xchg
mov
out
lods
insb
cwtl
test
add
inc
arpl
mov
xchg
repz
rolb
cmp
dec
out
inc
cld
les
shrb
xchg
shrl
repnz
into
lods
imul
call
dec
or
insl
sbb
push
scas
enter
mov
mov
aam
into
xor
mov
cmp
stc
mov
jo
xchg
in
pop
xchg
sub
lods
push
pushf
jmp
xchg
repz
cli
insb
add
inc
and
mov
subb
hlt
jno
ret
add
or
lods
or
lods
inc
push
in
jb
mov
lahf
idivb
sbb
test
cmp
aad
and
pop
push
aam
sahf
jg
dec
popf
sbb
or
mov
scas
lahf
repnz
jne
mov
leave
xlat
shlb
pop
test
xor
clc
aaa
cltd
mov
and
xchg
sub
sbb
sbb
ret
xchg
movups
jbe
popf
test
mov
add
mov
ds
sbb
scas
inc
or
lahf
add
mov
xchg
sub
in
mov
pop
push
and
insl
dec
in
adc
or
aam
loope
scas
movsl
sub
push
add
sub
add
std
test
add
add
sub
cmp
sarb
add
cmp
cld
lock
and
jp
mov
repnz
add
lock
inc
mov
es
js
inc
mov
xchg
mov
addr16
imul
sub
fwait
mov
mov
xchg
frstor
pop
cmpl
and
es
sub
imul
cmp
mov
orb
sarb
xor
push
mov
cltd
add
cmc
movsb
invd
gs
cmp
and
fcomps
inc
aad
adc
pop
inc
dec
ja
js
arpl
repz
bound
sbb
dec
jecxz
cmp
es
movsb
filds
adc
xchg
test
xor
inc
sbb
and
jmp
inc
push
cmp
jbe
inc
cmp
inc
fldl
inc
aas
or
dec
fsub
xchg
lods
cmp
sub
sbbb
xor
and
and
add
jg
fcmove
adc
jnp
inc
xor
xchg
ret
les
notb
clc
adc
jo
mov
or
dec
frstor
iret
in
mov
inc
adc
adc
inc
cs
push
inc
xchg
nop
rclb
cmp
rcrb
es
inc
add
leavew
subb
roll
in
mov
inc
mov
popa
add
mov
aaa
or
xchg
or
shlb
cs
push
inc
or
xchg
test
shl
add
or
movzbl
test
sub
xor
cli
cwtl
inc
int
mov
mov
add
mov
pop
push
inc
xchg
es
hlt
xchg
sbb
push
dec
cwtl
sbb
roll
or
cmp
or
jo
xchg
cmpsl
add
adc
addr16
push
adc
xchg
jae
ret
mov
cmp
adc
and
imul
cmp
jae
data16
add
cmp
jl
ret
pushf
add
inc
fdivl
sub
loope
movzbl
addb
xor
leave
adc
dec
loope
inc
add
push
add
nop
sbb
push
mov
add
add
test
inc
cmp
pminsw
iret
orl
lret
add
fildll
sub
dec
cltd
lahf
lret
adc
ljmp
roll
outsb
or
es
pushf
and
icebp
sti
jae
xor
add
out
sbb
mov
call
push
mov
rorl
mov
fwait
sbb
mov
movsb
clc
enter
adc
ss
icebp
outsb
lock
addb
mov
mov
pop
mov
movsb
push
jg
and
jbe
test
cli
mov
jb
cmpsb
clc
mov
lret
push
cmp
data16
push
push
cmp
scas
into
nop
pop
lahf
ret
and
xlat
jmp
mov
cmp
or
inc
mov
xchg
add
xor
xor
call
jp
sbb
mov
adc
mov
or
sbb
fnstcw
or
or
es
enter
inc
xor
adcl
dec
add
loop
lea
mov
loop
sub
mov
jg
mov
enter
add
add
mov
jecxz
jbe
jno
in
or
xlat
jo
jge
adc
xor
pusha
in
sbb
mov
sbbl
add
cmp
in
aam
icebp
fnstenv
incb
sub
fdivrs
sti
rol
or
jmp
incl
test
aas
and
mov
push
mov
inc
outsl
imul
and
nop
jge
sbb
fisubl
addr16
int3
push
pushf
and
and
loop
and
js
cwtl
xor
test
push
add
lea
lahf
push
scas
pop
pusha
fisubs
addl
or
jl
jns
popf
ret
fdivs
repz
mov
test
dec
fisubs
ja
fs
mov
xchg
or
adc
inc
add
add
sbb
sti
add
xchg
int
sahf
push
pop
call
jecxz
add
xor
test
and
cltd
fcomi
adc
shlb
add
pusha
pop
mov
xchg
and
and
lds
in
scas
lea
xchg
xorb
cmpb
fldl
pop
ret
or
add
sub
push
out
aaa
daa
and
into
insl
mov
push
push
pusha
or
jno
inc
out
ret
xchg
or
sub
add
or
fdivrs
lret
imul
subb
call
mov
js
pop
fsubl
cmp
rcr
push
mov
and
cmp
cmp
adc
sbb
xor
psadbw
mov
mov
fistl
mov
lahf
into
ja
xchg
pop
test
lock
in
mov
sbb
in
outsb
fdivrs
inc
mov
fildl
clc
sahf
or
daa
sub
and
loope
dec
movsb
inc
out
sbb
data16
das
rorb
mov
leave
fcomps
insb
fidivs
jl
loope
xor
sub
xchg
icebp
inc
push
or
data16
jge
idivl
xchg
cmp
adc
sbb
ficoms
pusha
xchg
jle
sub
sti
jo
sbb
dec
iret
mov
sub
test
cmp
pop
stc
and
dec
and
xchg
and
sarl
add
out
or
mov
mov
sub
shrb
fwait
or
mov
dec
sub
test
aas
sti
push
enter
loopne
vmread
and
bound
cld
or
or
add
sub
rolb
outsb
add
mov
mov
xchg
or
das
ja
cld
cmp
pop
xchg
aas
jns
pop
movsl
rcr
mov
cli
xchg
jg
loope
hlt
sub
jnp
aam
add
lods
push
and
imul
cs
lret
mov
mov
mov
add
sahf
dec
cmpsb
clc
stos
jae
ficoms
pop
mov
dec
mov
hlt
xor
xor
psllq
fisubs
ret
mov
xchg
loopne
bound
in
push
adc
ret
cmp
pop
insl
push
pop
hlt
loop
sbb
emms
add
mov
xchg
inc
arpl
test
jge
pop
lahf
push
dec
paddusw
nop
decl
mov
sbb
xorl
loop
loope
mov
cmp
adc
jmp
mov
or
push
pop
in
inc
loop
cmc
mov
hlt
stos
push
test
mov
jne
in
mov
call
mov
popa
xchg
fcompl
cmpsl
pusha
ret
or
clc
sub
movsl
xor
dec
push
vmread
scas
mov
insb
sti
insl
call
mov
call
stos
add
std
inc
imul
out
nop
push
movsl
stos
xchg
mov
inc
stc
mov
pushf
cli
out
ja
out
in
mov
adc
rol
int
fnstsw
cmp
je
fsubs
or
push
lds
out
hlt
jae
sahf
xor
test
loopne
popf
js
lods
pop
cmp
sub
jnp
mov
dec
sbb
call
mov
cltd
insl
cli
test
cmp
jl
mov
push
bound
mov
mov
xlat
or
sti
mov
leave
jl
mov
das
mov
or
mov
adc
aaa
xchg
or
nop
movsl
add
loope
mov
mov
pop
ret
sub
adc
fdivs
ds
clc
pop
mov
lock
or
mov
clc
stc
insl
cmpsb
shll
adc
jge
mov
lds
call
icebp
cli
cmp
xchg
out
adc
movsb
sti
xor
mov
pop
sbb
jp
adc
fisubrs
imul
add
jmp
mov
pop
mov
and
push
cli
fwait
push
cmp
lret
es
insb
cli
sbb
testl
push
sub
push
sub
cmc
xchg
inc
lods
add
jge
ss
ja
mov
lods
test
std
and
cmp
loop
popa
mov
xor
xchg
andb
es
fisubrs
mov
jl
das
or
arpl
lods
mov
add
mov
sbb
lds
xlat
leave
call
or
es
inc
hlt
enter
insl
lcall
inc
mov
sbb
ss
insl
loopne
movl
jo
int
cmpb
shl
andl
or
sub
insl
mov
and
jecxz
inc
scas
mov
mov
mov
fwait
xchg
les
pop
testl
bound
push
xchg
sbb
sbb
ret
jns
sbb
add
aam
jo
nop
test
insl
cltd
mov
insl
lahf
lds
hlt
pop
mov
or
push
aaa
mov
and
ljmp
jl
push
aaa
mov
dec
lahf
and
sti
mov
out
sub
jb
aas
inc
or
mov
mov
and
xchg
lock
test
or
pop
xorb
ret
addr16
cli
mov
test
divb
or
popa
dec
mov
call
cmpsb
mov
mov
insb
loope
cmp
jecxz
mov
add
push
movb
ror
jmp
pop
or
mov
jp
dec
enter
fucomip
xchg
scas
stc
adc
in
fwait
xchg
inc
inc
jg
pop
pop
lock
mov
sti
in
mov
in
adc
sbbl
dec
aaa
mov
out
jge
mov
xchg
rcrl
nop
push
andl
cmpsb
jg
lahf
mov
fidivl
fadd
in
mov
xor
bswap
loope
lret
adc
aaa
test
push
pop
or
je
test
sub
adc
or
adc
add
dec
aas
popf
inc
cmp
jo
and
push
push
mov
jg
lcall
fidivrs
mov
jecxz
lret
in
jno
push
xor
fdivl
aad
loope
fiadds
adc
add
cmc
jg
decl
rorb
int3
jo
clc
dec
sub
xchg
lods
lret
inc
test
dec
inc
ds
xlat
pushf
xor
pop
mov
cmp
cmpsb
add
mov
dec
in
jle
xchg
push
inc
in
push
roll
inc
dec
in
jle
add
out
mov
pop
xchg
call
loope
in
mov
das
push
insb
adc
add
xor
mov
inc
push
jmp
test
cmc
cli
xchg
xlat
leave
jmp
cmc
bnd
aas
cmp
xlat
add
daa
jne
add
cmp
daa
sbb
aas
icebp
xor
mov
or
cmp
pop
add
sbb
jo
loopne
add
mov
cmpsb
shlb
adcl
add
sub
add
and
xlat
sub
iret
scas
scas
stc
fsubr
pop
inc
mov
mov
aad
jne
fisubs
es
mov
mov
adc
scas
jecxz
pop
out
andl
sbb
pop
xor
and
imull
out
in
adc
lock
insl
ja
mov
jo
outsb
add
imul
dec
or
jne
sub
mov
dec
push
mov
xor
imul
lret
push
not
outsb
xor
in
insl
xor
and
pop
sbb
insb
mov
pop
jmp
adc
enter
sbb
sbb
popa
jo
mov
subl
push
addb
and
xor
pop
mov
cmp
frstor
xor
cld
lcall
mov
push
xor
int3
pushf
gs
xor
lock
push
cwtl
xor
gs
inc
mov
jmp
lea
xchg
sahf
iret
pop
push
arpl
stos
xor
xorl
sbb
mov
jno
mov
stos
int3
lock
jp
pop
mov
scas
xchg
sub
mov
dec
jo
icebp
xchg
aad
jle
mov
ss
roll
adc
dec
push
sub
mov
iret
inc
outsl
fldcw
lcall
inc
mov
pop
in
popa
xchg
int3
pushf
gs
xor
sbb
xchg
sub
mov
mov
dec
das
jns
movsl
movsl
popf
outsb
call
int
jb
pop
xor
loope
mov
mov
lods
movsl
sbb
repnz
sbb
sbb
fwait
pop
push
push
fmulp
cmp
enterw
pop
daa
shlb
mov
mov
sbb
mov
jl
cwtl
in
je
sbb
test
xor
shr
dec
and
popa
out
pop
push
jmp
pop
push
out
das
jecxz
xor
std
mov
mov
xchg
shrl
mov
inc
enter
xorb
stos
push
daa
dec
movsl
mov
pop
cmc
ret
gs
sbb
and
clc
ret
or
cltd
cmp
mov
jne
inc
sbb
scas
test
add
add
fcomp
mov
mov
jnp
cmpsl
adc
outsl
in
xchg
fists
fdivl
test
jp
mov
sub
fldcw
das
adc
mov
idivb
mov
sti
mov
dec
in
sbb
mov
xchg
xchg
lods
dec
into
repnz
test
and
ret
cmp
in
mov
lahf
jbe
xor
imul
aas
push
xor
xor
xchg
and
pop
sbb
jg
cli
sti
popa
mov
popf
mov
xchg
fwait
scas
das
pop
fdiv
sbb
cmpsl
scas
leave
in
out
sub
sub
jno
pusha
les
xor
fwait
inc
pop
repz
aad
cli
scas
int3
xchg
jno
insl
ss
inc
mov
stc
mov
repnz
xor
jo
insl
xchg
lods
adc
cld
xorl
leave
outsb
or
fadd
mov
pop
inc
xchg
push
test
cmp
out
outsb
daa
xor
clc
out
pushf
sbb
leave
sti
adc
jle
sbb
lcall
cmp
cli
cli
or
in
bnd
aas
bound
jno
hlt
push
xlat
pop
notl
fcompl
or
dec
adc
cld
repz
outsb
stos
outsl
pop
mov
data16
cmp
mov
dec
jbe
cs
out
mov
fldcw
push
repnz
stc
insl
inc
mov
mov
dec
sub
iret
sti
mov
xchg
mov
jmp
clc
movsl
test
pop
out
mov
mov
jo
shrl
subb
cld
ror
xchg
add
xor
lds
adc
sbb
ret
mov
inc
pop
xor
into
jae
nop
add
sub
dec
movsb
adc
jmp
pop
rclb
mov
mov
out
jg
adc
daa
xchg
dec
movsl
push
idivl
hlt
mov
ss
mov
xlat
loopne
xorb
shrl
lret
mov
sbb
sub
sarl
cwtl
roll
mov
sbb
data16
insl
pusha
jno
dec
outsb
inc
mov
or
fcmovb
jecxz
cmc
mov
ss
xor
loope
int3
jl
mov
xchg
lret
movsl
mov
dec
or
jl
ret
imul
inc
cli
shlb
xor
dec
push
or
popa
lea
jmp
mov
add
and
rorl
ret
sub
jns
out
fimuls
sahf
pop
sub
cmpl
imul
add
outsl
shrb
or
call
faddl
mov
pop
sub
pop
xorb
sbb
and
fisubrs
mov
daa
xor
movsl
mov
cli
out
push
repz
fldenv
inc
jno
mov
pop
mov
mov
pop
enter
xchg
and
addr16
xlat
jmp
fwait
mov
ss
stc
sbb
cmp
pop
xchg
jmp
outsb
mov
adc
insl
sahf
xchg
shlb
scas
stos
cmp
xchg
insl
push
or
stos
jae
mov
imul
sbb
ret
cmp
pop
mov
enter
cmpsb
cmp
lea
lods
test
lods
lods
push
rcrb
icebp
fnstenv
mov
rcrl
lcall
push
out
mov
fwait
sub
stos
fidivrl
fdivl
pop
lods
sub
dec
pop
aad
lea
jecxz
fistl
pop
pushf
mov
mov
pop
mov
popf
mov
ja
cmp
cmc
adcb
jnp
ds
xor
lea
xor
lock
lcall
add
cmp
sbb
sbb
pop
dec
push
xor
ficoml
icebp
lret
imulb
mov
js
cld
dec
jmp
cmc
bnd
leave
push
mov
and
int
pushf
es
lret
jb
fidivs
push
in
lea
fisttps
lock
aas
loopne
shr
jecxz
subb
dec
or
jo
inc
mov
dec
sarl
sarb
cmp
pop
or
popa
movb
shll
lcall
xchg
lret
in
pop
jb
fsubr
imul
jmp
js
xchg
pop
cmpsb
xlat
jmp
jne
int
or
out
mov
insb
out
dec
fisubrl
mov
cld
cld
mul
xchg
and
int3
jbe
xor
bound
shrb
jno
dec
cmpsb
pop
and
pop
pushf
dec
cld
xchg
cs
or
insb
bound
or
adcl
icebp
popa
sbb
stos
aad
inc
push
aad
add
sbb
into
fwait
sbb
call
lret
stos
aaa
xor
xor
repz
push
sbb
jecxz
sbb
mov
aad
ljmp
movsl
loope
sbb
mov
shrb
sahf
scas
jns
adc
push
cmp
pop
dec
aam
xor
lcall
xor
js
int
xor
out
mov
test
adc
outsl
mov
inc
mov
push
push
inc
aaa
pushf
cmp
mov
ds
aad
aam
jbe
les
sbb
cmp
cmc
jnp
xchg
xchg
mov
stos
ret
lds
ret
out
mov
pop
mov
mov
jmp
jno
inc
mov
cmpsb
fs
lods
sti
hlt
std
adc
add
mov
inc
icebp
jnp
dec
mov
jbe
out
mov
fisttpll
cmp
unpckhps
iret
std
iret
jb
dec
rorl
sarl
sbb
arpl
jl
add
inc
push
inc
sbb
mov
or
rorl
mov
ss
imul
hlt
rol
add
in
push
mov
leave
les
call
sub
stos
mov
lock
cwtl
pop
mulps
sub
mov
xchg
push
sahf
pushf
lahf
popa
jno
or
mov
pop
inc
cmp
pop
imul
add
lea
test
mov
and
je
faddl
rclb
or
and
sbb
inc
sub
test
sahf
sbb
fsubl
std
jae
pmovmskb
push
repz
cmpsl
and
sbb
mov
inc
and
push
mov
sbb
lock
jnp
popa
clc
mov
aas
mov
out
and
psubsw
sbb
std
fyl2x
outsb
mov
xchg
mov
or
jle
clc
mov
dec
xchg
movsb
inc
shl
fs
lods
outsl
subl
in
push
cmp
push
filds
clc
ss
decb
fadds
mov
aam
sub
js
clc
divl
scas
lock
xlat
mov
adc
mov
repnz
jnp,pt
mov
arpl
push
or
mov
pop
gs
mov
push
pop
cmp
mov
dec
mov
or
or
cmp
adc
sub
mov
lods
mov
es
mov
leave
repnz
xchg
sub
dec
xor
mov
push
jmp
sub
cmovg
lods
fnstsw
xchg
mov
cmp
jecxz
xchg
push
push
lret
push
dec
lods
jle
sub
adc
test
jae
ds
jp
adc
add
inc
mov
lods
pop
and
aaa
dec
pop
arpl
push
scas
mov
pop
pop
scas
es
into
jmp
sub
mov
shl
negl
data16
leave
int
lods
adc
push
xor
dec
lock
stos
out
add
jae
cmc
lock
pop
jne
push
icebp
cmpsl
out
cmp
dec
add
insl
loop
mov
and
test
cli
jge
sahf
fwait
jmp
jmp
xchg
fwait
adc
sub
and
mov
fsub
les
iret
cli
adc
jp
adc
inc
add
push
adc
hlt
jns
les
add
push
jno
in
mov
jns
jmp
push
loopne
imul
hlt
or
popl
inc
test
jb
push
or
ss
loope
mov
push
leave
jmp
or
nop
shll
hlt
test
xchg
sbb
insb
sbb
sti
rorl
sub
in
sarb
cwtl
sarl
rcl
xor
clc
jb
rcll
cwtl
inc
mov
inc
bound
clc
jp
push
repnz
aas
imul
arpl
scas
push
cmpsb
addb
and
mov
dec
pop
and
clc
jg
ss
jl
daa
scas
xchg
lods
adc
mov
pop
xchg
jnp
xchg
es
dec
or
lret
ljmp
xor
sub
enter
sbb
jae
sbb
and
call
iret
sti
popf
push
shr
in
mov
add
out
mov
pusha
pop
out
and
fsubs
ja
inc
mov
sti
lods
adc
pop
add
jno
inc
sbb
cmp
push
add
mov
das
lods
hlt
std
mov
loope,pn
add
xor
rcrb
pushf
add
xor
jmp
enter
leave
arpl
inc
sub
fistpl
dec
hlt
arpl
cmpsb
add
lahf
aad
insl
or
loope
fldcw
frstor
and
bound
or
add
or
popa
popf
fcmovne
jmp
jb
movsl
pop
das
xchg
dec
sahf
int3
mov
xor
mov
pop
and
sub
cmp
sbb
xchg
loop
sbb
aas
nop
xchg
sub
stc
or
push
add
cmp
adc
adc
test
adc
je
stos
jo
arpl
jo
sbb
sbb
pushf
loopne
cmp
mov
push
xchg
xor
xchg
cmp
mov
push
pop
shrb
cmp
pop
xor
rcrl
sub
sbb
cltd
pop
sub
lods
int3
xchg
push
pop
mov
pop
and
and
adc
mov
inc
xchg
test
mov
test
lods
lret
jo
push
pop
lods
lret
test
outsl
dec
lods
lods
stos
icebp
fidivl
out
in
int
mov
xchg
rcr
aaa
jae
push
pop
inc
lret
jg
out
fistps
clc
jae
out
out
neg
adc
sarb
out
out
lahf
jne
lahf
clc
aas
shl
xchg
cmpl
pushf
decb
pop
daa
fwait
mov
in
cmp
inc
push
fwait
xchg
pop
jge
mov
sbb
xor
loopne
mov
aas
insb
aam
leave
push
testl
aas
mov
data16
sbb
mov
cmc
out
xor
jno
rcrb
stc
in
xchg
jne
out
jnp
dec
fdivrl
mov
mov
xchg
negb
iret
mov
fdivl
add
incl
jmp
pop
mov
add
add
dec
add
dec
nop
ret
rorl
mov
ss
jge
jle
xlat
xchg
popl
mov
rorl
rclb
mov
cld
xchg
leave
xor
in
aam
push
add
repnz
and
movsb
pushf
xchg
and
jle
les
pop
jmp
insl
jae
pusha
insb
xchg
jbe
rclb
loopne
subl
xchg
and
xchg
pop
into
jns
pusha
or
cmp
jno
xchg
pop
mov
ds
movsb
rcl
and
jae
movsl
xchg
mov
cmp
scas
xchg
mov
mov
aam
pop
jle
add
inc
lock
ret
sub
and
push
ss
pusha
fnstenv
fidivrl
sar
mov
es
ds
nop
adc
mov
pop
cbtw
inc
add
or
lcall
and
cs
xor
fadd
dec
pop
jg
sub
xchg
push
adc
add
ficoms
lds
lret
cmp
shrb
hlt
inc
inc
movsl
or
int3
adc
orb
fldl
push
stos
scas
or
out
lds
adc
or
cmp
dec
or
xchg
xor
ja
mov
stos
pop
push
idivb
inc
cmpsb
xor
sub
adc
mov
repnz
popa
push
gs
inc
int3
subl
add
pop
dec
mov
std
sbb
push
das
lret
ficomps
pop
mov
aas
clc
inc
fidivrs
inc
jp
xor
mov
je
movsl
daa
add
movsb
xchg
or
pop
cs
inc
divl
aam
inc
jp
xchg
pop
hlt
push
aad
jae
jl
sbb
call
mov
add
xchg
out
sbb
mov
out
push
ucomiss
add
push
sub
sbb
out
enter
xchg
je
jns
aaa
scas
cmp
aaa
xchg
pop
mov
push
jmp
adc
or
push
movb
pop
rol
jne
rolb
bound
cltd
data16
or
lock
or
enter
repz
jb
call
jns
xchg
cmp
clc
mov
dec
mov
cs
fimuls
mov
mov
push
sub
sahf
dec
jge
std
jb
adc
fucomip
push
mov
dec
dec
add
mov
jae
sbb
jne
mov
cmp
loope
pushf
jbe
cmp
fistl
inc
jp
lret
bound
mov
pushf
addl
inc
add
mov
loop
pop
cmp
mov
mov
pop
add
es
sahf
inc
push
mov
lahf
jbe
cmp
cmp
shl
mov
insl
sub
add
ja
and
cmp
or
aaa
imul
fidivrl
adc
data16
into
das
fists
inc
fsubrs
push
sbb
cmpsb
adc
lcall
in
fsubrs
mov
insl
stos
jno
mov
xor
inc
lret
and
adc
and
xchg
and
xchg
mov
insl
push
cmpsb
jb
and
mulb
and
lea
fistpl
or
lcall
repz
inc
adc
cmp
loop
test
test
mov
es
xor
iret
mov
pop
inc
repnz
or
fnstsw
fwait
push
lock
nop
cmp
pop
mov
stos
fisttps
iret
fistps
fiaddl
mov
in
mov
push
shlb
xchg
pop
outsb
xor
add
enter
adc
repnz
and
cmp
ret
cli
outsb
cmp
dec
push
cmp
mov
mov
and
popa
pop
cltd
loopne
out
and
inc
sbbb
mov
sarb
add
cmp
in
cmp
xor
jp
test
push
movsb
out
sbb
loopne
call
or
and
jnp
pop
outsb
test
jmp
push
leave
sahf
lcall
cltd
push
test
xchg
in
outsb
xchg
js
and
jle
add
adc
repz
cmpsl
clc
mov
clc
out
int3
loop
dec
cmp
push
std
sbb
int3
xor
int
or
imul
push
rcr
stos
pop
mov
repz
cmp
or
mov
in
dec
rorb
jp
hlt
mov
out
mov
pop
shrl
loopne
lds
ja
push
ljmp
fstpt
jns
push
ja
call
hlt
test
mov
sub
mov
lahf
loopne
pop
mov
daa
bound
rcrl
lret
xchg
mov
sub
aaa
xchg
pop
pop
insb
jne
mov
sbb
or
mov
in
jb
and
jne
outsl
addr16
pusha
clc
push
fistl
push
out
cwtl
cs
rclw
js
mov
je
add
aaa
adc
jmp
mov
icebp
cmp
pop
dec
push
iret
push
xchg
in
fstpl
or
fsubl
addr16
pop
jo
mov
inc
pop
shlb
shlb
das
xchg
sbb
push
jp
sbb
sbb
add
mov
js
and
and
dec
pop
xchg
scas
test
or
jle
inc
cmp
roll
inc
ljmp
sbb
cmpl
je
pop
and
into
or
sbb
clc
jnp
xadd
dec
push
or
inc
inc
xchg
gs
jnp
clc
addr16
cmp
in
xor
fucomp
mov
ds
fldt
data16
or
xorb
sbb
shrb
fadd
mov
in
or
fdivrs
sub
pusha
dec
sbb
das
insl
loopne
gs
push
in
xchg
ret
insb
pop
sbb
adc
add
mov
push
mov
aaa
icebp
mov
or
icebp
inc
xchg
sub
inc
pusha
pop
mov
or
out
pop
add
xchg
fcmove
sub
lcall
push
xor
andb
xor
dec
or
stos
icebp
add
sbb
sahf
ljmp
and
adc
mov
out
das
daa
mov
insl
out
xor
gs
pusha
andl
scas
jecxz
cli
xor
adc
push
add
in
les
push
outsl
sub
addr16
lods
jge,pn
push
fsubrl
add
add
cmp
in
mov
nop
ffree
fimull
in
sub
cmp
loopne
sbb
push
outsb
mov
std
mov
fsub
inc
jmp
loopne
pop
movsb
lods
repz
jge
push
mov
sbb
daa
lcall
or
cmpsl
mov
cmpb
xor
push
fiaddl
jnp
and
jo
fidivrs
mov
sub
push
iret
dec
pop
decl
mov
movsb
pop
fdivrl
add
xchg
sbb
insl
lods
or
push
mov
jb
or
ja
mov
rcrb
sbb
mov
inc
mov
mov
cmp
push
push
pop
cld
sbb
pop
mov
inc
push
movzbl
hlt
adc
pop
or
mov
and
mov
adc
xorl
ja
in
push
jne
jp
out
je
negb
cmp
jbe
fucom
fdivrl
pusha
cmp
mov
push
rolb
jbe
push
popa
ret
and
push
nop
xor
mov
lods
std
xchg
xor
cmp
lret
adc
hlt
mov
add
xchg
mov
std
inc
jno
rol
int
popf
les
xor
inc
loopne
stos
jb
mov
les
rcrl
lods
mov
cmc
inc
mov
mov
adc
shll
mov
insl
add
dec
bnd
nop
sub
dec
push
pusha
pushf
pop
fisttpl
ja
imul
js
inc
mov
cmc
mov
leave
ds
xchg
subl
iret
or
in
or
cli
pop
aam
cmpsl
adc
sbb
push
pop
inc
mov
push
jne
sti
dec
add
sbb
in
sarl
xor
push
jle
mov
loope
jns
or
mov
mov
insb
add
testb
inc
pop
xchg
loope
cmpsl
xor
or
xchg
aas
inc
out
sub
fldln2
sbb
test
fstpt
lcall
push
xchg
je
sti
fs
add
addr16
mov
nop
out
mov
in
repz
js
jbe
stc
shl
jnp
out
in
sub
add
dec
nop
push
inc
fidivs
cwtl
add
iret
sbb
sahf
loope
push
shll
jno
xchg
repnz
loope
popf
movl
into
mov
imul
pop
pop
pop
sbb
inc
and
jns
rclb
adc
insl
mov
cmp
add
cld
mov
ds
dec
fimull
arpl
rorb
fcom
pop
sub
or
les
jle
adc
adc
leave
lcall
insl
xchg
xor
sub
lock
jno
jecxz
inc
testl
or
push
fnstenv
into
inc
lret
arpl
inc
add
int
les
sbb
mov
xchg
mov
sbb
inc
in
arpl
pop
sahf
push
xchg
mov
mov
andb
aam
fs
cmc
int3
lds
aam
jno
pusha
fwait
jno
and
out
push
xor
outsb
fiadds
xor
pop
push
addr16
iret
movsl
into
fs
mov
mov
xchg
sbb
loop
jmp
aaa
imul
addr16
inc
xor
push
xor
cltd
push
and
mov
inc
lea
jo
inc
fistpl
scas
adc
out
xor
sbb
inc
enter
test
jb
call
push
jecxz
inc
xlat
and
dec
divb
add
movsb
xor
test
xchg
cmp
fsubl
ds
inc
test
decb
xor
jb
fwait
inc
xchg
xlat
inc
scas
inc
sti
jno
int
mov
ret
sbb
fiaddl
inc
mov
sbb
movsl
sbb
test
je
adc
aas
cmc
adc
xchg
addr16
and
popl
mov
inc
mov
cmp
mov
ja
cmp
jp
inc
aas
lds
mov
pcmpgtb
subb
mov
iret
mov
fcmovnb
adc
lock
adc
aas
inc
pushf
mov
fsubs
fiadds
cmp
test
clc
cs
js
dec
xlat
xorl
test
mov
adcb
push
scas
or
rclb
iret
add
sbb
xor
add
add
ja
scas
bound
inc
mov
lea
or
or
outsl
push
xchg
nop
nop
sub
hlt
arpl
cmp
jo
pushl
and
jle
cli
xchg
jg
insb
cmp
jns
mov
mov
imul
into
rorb
cmpsl
sub
loopne
test
inc
mov
xor
xchg
les
push
sub
add
cltd
pop
add
pop
cmp
xor
es
push
fwait
adc
out
pop
fxch
popa
mov
sti
push
cltd
xor
mov
mov
loopne
fsts
addr16
clc
inc
pop
mov
inc
loope
and
into
rol
mov
mov
fildll
cmp
ds
loope
mov
xor
jb,pt
icebp
in
ret
jno
cmpsl
pop
jns
inc
pop
fwait
dec
pop
mov
xorl
or
mov
addr16
push
lcall
ret
notl
rcll
test
popa
cmc
in
pop
in
push
ds
jge
sub
les
adc
fstps
setns
cmp
mov
mov
pop
jb
xor
mov
and
lds
add
iret
rorl
mov
add
out
sbb
loopne
xchg
add
jns
test
fdivl
add
dec
ds
xlat
or
or
cmp
add
adc
in
xor
dec
pop
outsb
js
imul
cmp
lds
jmp
repz
dec
lds
clc
push
adc
cmp
aam
pop
add
in
inc
daa
es
paddusw
pop
inc
lods
outsl
and
xchg
sbb
in
cmp
bound
pop
ss
sbb
inc
into
and
xchg
stos
mov
mov
sub
ljmp
dec
pop
das
mov
and
aad
cmp
call
add
outsl
mov
cld
cmp
push
sub
cltd
daa
mov
mov
int
adc
or
xor
test
sub
popl
xchg
sub
idivl
push
xor
cmp
add
jns
xor
push
jno
add
imul
sbb
int
mov
mov
dec
inc
sub
vcvttpd2dq
dec
repz
subl
dec
shlb
push
mov
cmp
das
or
inc
std
lahf
jl
mov
rclb
daa
sbb
mov
int3
xchg
into
leave
fwait
mov
sbb
dec
and
rorb
scas
inc
sbb
ds
push
in
jo
inc
pop
pop
cli
adc
pop
mov
imul
enter
xor
adc
fcomp
int3
shrl
movsl
les
test
jecxz
xchg
xor
push
push
xchg
outsl
and
mov
sub
leave
fisubrl
cmc
clc
push
cmp
repz
xchg
mov
add
std
fsubr
cli
add
and
sub
add
fildll
ret
divl
xchg
push
ret
pop
dec
insb
popa
test
je
pop
adc
xchg
loopne
inc
mov
inc
sbb
outsb
insb
cmp
fidivrl
xchg
adc
ja
repz
pop
mov
sahf
pushf
sbb
sub
inc
cwtl
inc
cmpsl
or
xor
jle
push
add
sub
cmc
sbb
data16
pop
sti
movsb
mov
and
mov
lea
add
clc
cwtl
ss
faddl
dec
adc
mov
cld
inc
fistl
mov
scas
mov
mov
fwait
mov
call
mov
adc
lret
xchg
xor
je
ret
sahf
lock
sbb
out
rcrl
or
xchg
cmp
andl
aad
adc
test
sbb
fisubrs
je
out
cmpsb
jmp
rolb
push
jg
push
adcb
aaa
or
xchg
inc
xchg
in
lods
mov
cmc
jne
arpl
push
in
lret
cmpl
or
orb
jae
ljmp
cwtl
mov
fdivl
xor
aas
into
mov
int3
pop
int
mov
insb
lock
or
outsl
add
push
std
fdivrs
push
lahf
int
jl
std
sub
lock
cmpsl
and
sub
or
out
jle
mov
daa
shr
imul
bswap
scas
mov
subb
and
or
popa
addr16
and
mov
ss
fisttpl
xlat
dec
xchg
sarl
push
das
inc
test
out
fstps
adc
inc
jne
and
mov
pop
outsl
xor
scas
fisttpll
jg
jmp
incl
daa
jmp
pushf
cmp
aam
cmp
in
inc
test
dec
outsb
and
je
dec
lcall
mov
fistl
push
bound
dec
cmp
xor
xchg
in
or
xchg
mov
je
repz
int3
sti
sbb
jle
dec
add
add
ljmp
divl
lret
mov
into
adc
xor
jnp
jmp
pop
sbb
popf
or
pushl
sarb
shll
xor
test
xchg
mov
xchg
aas
outsl
das
jg,pt
adc
out
xor
daa
inc
dec
sbb
or
popf
mov
arpl
test
mov
rcrl
or
mov
call
hlt
outsl
sbb
icebp
popf
sbb
leave
sub
inc
out
xlat
mov
ret
mov
addr16
add
cmp
sbb
cmp
cmp
repnz
jge
mov
adc
xchg
inc
fisubrl
cmp
or
std
repz
loope
jo
cs
mov
inc
clc
in
and
arpl
xchg
mov
cwtl
add
inc
scas
in
movsl
shl
outsb
inc
sub
fadds
int
and
lahf
xchg
jno
xchg
cld
xlat
xlat
add
cld
nop
or
movsb
scas
adc
pop
xor
test
js
cs
cltd
lods
xchg
mov
mov
shll
dec
aam
push
mov
test
or
mov
xor
mov
mov
sbb
xchg
cld
mov
test
imul
mov
aad
adc
fs
mov
aas
mov
in
sti
lret
adc
sub
aaa
enter
mov
lret
jle
jecxz
mov
arpl
cmp
or
dec
sbb
mov
xor
rorl
and
movsl
loopne
push
inc
and
and
rol
cmp
jb
daa
jcxz
or
ja
dec
mov
ds
in
out
pop
jnp
jg
sub
lea
add
push
fld
in
dec
call
testb
imul
repnz
lcall
aam
pop
xor
pop
test
cmp
or
pop
into
rcr
js
push
xchg
sbb
cmp
adc
inc
push
pop
lods
xchg
faddl
xchg
add
adc
mov
cmp
and
mov
andb
push
xor
fdivrs
push
dec
gs
mov
shrl
inc
pop
aam
jp
or
and
sahf
mov
and
or
aam
addb
cmpsl
out
fnsave
mov
lods
loopne
push
mov
decl
lcall
xchg
clc
repz
and
xor
adc
jns
ds
mov
enter
popa
push
jae
pop
out
sub
push
jg
mov
lcall
rcrb
add
iret
jno
stos
loopne
loope
add
dec
ret
add
and
mov
jg
ret
cld
daa
icebp
loope
repz
xor
nop
mov
inc
adc
inc
fcomps
stos
popf
push
add
or
and
jo
push
xchg
rcr
dec
fcompl
pop
pop
icebp
sbb
int
frstor
fs
sbb
jge
push
ss
push
pusha
adc
into
bound
repnz
jl
mov
jns
xchg
dec
movsb
xor
aaa
mov
push
dec
pushf
test
movsb
out
push
mov
push
sub
in
nop
push
pop
dec
in
sahf
test
scas
inc
mov
loopne
push
mov
mov
add
test
cltd
jge
cltd
mov
aad
inc
scas
mov
jne
imul
xchg
add
mov
in
mov
arpl
movsl
jbe
pusha
sbb
test
push
ret
andl
cli
mov
movsb
jp
sub
jb
mov
or
dec
dec
pushf
fnstsw
enter
pushf
sbb
jp
bound
out
movsl
pop
lods
insb
fimuls
xchg
or
push
ds
cmp
sbb
jne
dec
lock
fwait
mov
cmc
sti
push
fsub
fistps
rorl
aaa
je
mov
inc
cmpsb
cmpsl
push
outsl
aas
test
outsl
mov
loop
mov
pop
xchg
test
dec
repz
aaa
xor
daa
in
cmp
or
and
mov
mov
add
jnp
out
sub
jge
cmp
adc
aaa
sub
sbb
outsl
ds
cmp
cmp
jl
jl
negl
mov
roll
push
jp
repz
dec
add
add
ljmp
fiadds
sub
xchg
cmp
or
adc
dec
or
pop
xor
outsb
xchg
adc
arpl
inc
sub
pop
add
fstpt
pop
jb
mov
icebp
cmp
std
dec
xlat
cmp
mov
je
xchg
add
mov
js
lahf
into
add
cwtl
jmpw
dec
fists
push
push
mov
imul
cmp
stc
mov
addr16
arpl
aas
rcpps
loope
ja
les
and
jl
push
cmp
outsl
mov
dec
add
and
dec
push
adc
inc
mov
out
test
lahf
jp
rcrb
sbb
cli
pushf
jmp
mov
cmpsb
subl
dec
jae
enter
adc
add
adc
scas
jnp
out
jecxz
jge
insl
push
loope
fidivrl
mov
das
clc
push
mov
xor
inc
jp
sbb
mov
fs
dec
faddp
loopne
leave
cmp
testb
jecxz
jl
and
cmp
add
call
and
fists
mov
in
pop
push
mov
mov
xor
xor
popa
test
popf
inc
bound
mov
not
cld
xchg
leave
cmpsl
shl
repz
inc
xchg
orb
adcl
test
out
mov
icebp
insb
lcall
cmp
movl
dec
sbb
add
xchg
outsl
sbb
iret
hlt
xor
aam
xchg
pushl
mov
push
shl
pop
insb
mov
xchg
fisubrl
fsubp
fadds
cmpl
pop
das
mov
je
or
popa
lahf
iret
pop
or
rcr
cmp
inc
rolb
xlat
pop
cmpsb
cmovns
loopne
clc
lock
add
iret
sti
inc
jecxz
in
jg
ret
inc
outsl
pusha
mov
fcomi
leave
loopne
push
emms
add
lcall
aaa
inc
or
mov
jmp
out
xchg
mov
lds
lahf
and
jl
xchg
sub
push
xchg
or
sub
sbb
call
adc
divb
loopne
xlat
cld
ret
hlt
jo
movsb
negb
mov
mov
paddusw
push
or
aas
scas
ja
push
fisttpll
rolb
add
push
js
stos
mov
das
push
in
test
loop
scas
pop
out
sti
in
in
inc
add
or
or
mov
or
mov
xchg
js
shr
insb
push
nop
ret
aas
dec
jb
mov
sub
incb
sbb
iret
subl
hlt
adc
push
loopne
testb
pushf
xchg
out
loope
mov
ja
nop
add
xor
jae
movsb
jmp
scas
jp
adcb
inc
cld
mov
or
pop
mov
sbb
sbb
mov
jo
in
xor
pusha
or
push
inc
adc
sarl
inc
icebp
xor
mov
inc
je
lea
testb
loopne
stc
shlb
jo
out
aas
sbb
mov
roll
or
push
repnz
fnstenv
and
add
add
push
mov
sbb
ficoml
lahf
jae
test
jmp
dec
mov
adc
or
mov
mov
cmp
data16
lea
mov
sub
loop
mov
lret
mov
sahf
jmp
nop
ret
adc
cli
inc
iret
adc
sti
xchg
jle
std
mov
out
out
adc
xchg
push
dec
cld
js
push
cmp
pop
divl
ret
sarl
sbb
or
dec
invd
lsl
lahf
xchg
out
adc
or
add
mov
and
repnz
cmpsb
ljmp
popf
ret
or
and
test
jb
mov
cs
nop
jo
add
and
cwtl
inc
ret
fdiv
stos
int3
ds
mov
or
adc
dec
add
cltd
xor
out
aad
repz
cmp
mov
or
or
in
add
adc
push
stc
sub
imul
push
ljmp
rorl
and
adcl
stos
jb
pushf
mov
add
sbb
fdivrs
or
mov
dec
loope
mov
cs
movl
and
mov
mov
or
in
data16
cmp
inc
notb
push
and
das
ja
sbb
dec
add
pop
test
pop
sbb
and
adc
cld
adc
outsl
sub
dec
loopne
ffreep
mov
cmp
bound
push
inc
movsb
adc
pop
rorl
push
adc
lea
test
xchg
aas
pop
pop
add
inc
adc
jbe
enter
mov
push
or
lret
dec
xchg
mov
leave
inc
add
adc
aaa
repz
jg
hlt
test
dec
adc
sbb
je
or
xchg
pop
sbb
sbb
jle
mov
les
roll
test
adc
rorb
and
xor
jmp
mov
sbb
dec
jns
loopne
test
in
roll
or
mov
les
xor
push
stos
and
and
test
push
dec
loope
cltd
ljmp
scas
stc
sub
add
push
mov
sbb
inc
sbb
out
push
mov
inc
leave
ss
and
outsb
fsubrs
in
cmp
inc
cmc
or
repnz
mov
mov
xor
outsl
loop
adc
mov
mov
mov
sub
leave
cwtl
outsb
out
jle
inc
aaa
mov
sub
pop
repnz
lea
imul
std
sbb
xor
xlat
add
mov
adc
mov
insl
xor
jbe
cwtl
xchg
sbb
cmpl
bound
dec
adc
mov
in
sub
xchg
cmp
lcall
push
add
xor
inc
test
sbb
shrl
cs
xchg
dec
loopne
add
in
iret
scas
loopne
and
test
out
repnz
lods
or
lahf
xchg
and
and
mov
cmc
pop
daa
repnz
fs
mov
jno
xor
int3
adc
test
mov
mov
cmp
in
dec
xchg
jne
fildl
movsb
scas
jae
movsb
dec
movsl
inc
cld
sbb
mov
xor
fcmovnu
ds
mov
lret
cmp
push
adc
jg
cmp
movsl
mov
pop
rclb
in
fldenv
xchg
mov
and
loope
and
ja
mov
cmc
xor
dec
ficoms
adcb
push
mov
jecxz
xchg
lret
ss
icebp
cltd
sub
lret
or
cmp
cli
dec
mov
gs
insl
imul
mov
add
insb
jl
xor
xchg
repz
sub
xchg
cltd
push
add
push
cmp
es
imul
lods
mov
sahf
push
mov
add
push
jmp
js
push
adc
sub
es
push
scas
mov
stc
sub
adc
int3
cmp
and
je
jp
cs
sub
dec
int3
icebp
jae
loope
jns
mov
pop
inc
xor
idivl
fsubrl
xor
das
xchg
sub
inc
les
pop
add
lods
push
mov
add
sbb
in
push
fwait
fs
pop
jmp
mov
call
cmc
inc
dec
jae
inc
iret
ljmp
outsb
pusha
es
out
ljmp
adc
xor
sti
adc
xlat
stc
sbb
add
push
outsl
jmp
sbb
std
fdivrl
leave
call
pusha
sub
or
xchg
mov
lret
scas
mov
loopne
xor
inc
scas
push
imul
inc
or
enter
andl
lea
test
xchg
or
push
movsb
subl
incb
sbb
in
push
mov
xor
xchg
cmp
aam
data16
sub
dec
aaa
push
in
mov
mov
mov
int3
inc
out
shrl
cmp
inc
rcrb
pop
movsb
gs
movsb
pop
inc
cwtl
leave
leave
cli
push
shll
xchg
sub
sub
and
stos
in
out
rclb
movsb
jb
mov
pop
xchg
dec
sbb
push
ja
lods
je
out
xor
loopne
in
or
es
pop
ljmp
repnz
arpl
or
lods
pop
in
pop
mov
data16
sbb
mov
data16
xchg
xchg
sahf
pop
scas
sub
mov
mov
sbb
jne
sub
rorb
seto
pop
rcr
mov
jl
or
pop
mov
clc
or
aas
pop
mov
push
xor
mov
aam
dec
addr16
push
cs
sub
cmc
fnstsw
sub
sub
add
arpl
insb
add
inc
lahf
xlat
es
or
int3
scas
push
inc
pop
popa
push
pop
sub
sub
int
in
xor
das
insl
cmp
inc
movsb
ret
push
mov
pop
push
ljmp
sti
cmp
int
cmpsl
mov
ret
movl
jmp
sub
inc
fisttpll
jmp
outsb
loop
lods
jle
je
arpl
neg
sub
adc
daa
mov
push
stos
repnz
xchg
inc
pop
inc
xchg
int3
or
pop
mov
cli
ret
mov
shr
gs
and
test
iret
sti
xorl
or
les
sub
lock
lods
adc
push
adc
data16
push
inc
add
cmp
xor
fisubrl
jg
je
sub
jb
xchg
sub
lds
mov
pop
inc
mov
mov
stc
adcb
mov
cs
dec
inc
cmp
cmpsl
xchg
insl
add
lret
xchg
mov
jns
push
xchg
sub
and
lods
jbe
int3
loop
imul
cmp
cmp
xor
adc
adc
add
dec
in
int3
xor
xor
shl
lds
aam
dec
stos
cmp
jp
push
jno
in
jg
fsubl
sti
test
stc
jg
jmp
out
subl
xchg
jbe
jle
adc
dec
stos
ljmp
test
dec
orl
xor
xchg
sub
movsb
int3
stos
stos
pop
xor
les
sbb
cmp
mov
lea
and
cld
inc
push
andl
mov
imul
faddl
cwtl
out
out
loop
hlt
mov
jb
jmp
xchg
xlat
push
das
sar
loopne
pop
scas
inc
mov
pop
cmpsb
ja
aad
xor
sub
jmp
dec
movsl
inc
cmp
sahf
orl
sbb
leave
ret
jne
jae
add
jae
or
movsb
rcr
mov
xor
xchg
or
jb
dec
mov
pop
xor
inc
inc
and
and
push
js
pop
sbb
pusha
xor
jmp
call
xchg
cld
fcom
xor
test
cmp
xchg
call
mov
repz
sub
mov
nop
push
outsl
pop
xchg
xchg
inc
cmp
mov
fs
adc
xchg
pop
cmpsb
test
or
sub
or
in
std
add
aas
xorl
mov
jg
dec
lods
jne
jns
push
cs
orl
pop
out
loope
addb
mov
cmp
mov
jne
aas
dec
lahf
ds
jecxz
mov
cmp
mov
daa
pop
pop
cmp
push
mov
jb
outsb
push
pop
lock
push
push
mov
or
mov
stos
or
cltd
jle
pop
insl
outsl
dec
xchg
pop
mov
xor
mov
xor
pusha
lock
repnz
and
mov
jno
movsb
pop
out
imul
ljmp
fs
and
xor
or
mov
lea
jmp
and
xlat
mov
mov
xor
and
mov
scas
pop
aad
in
push
mov
xchg
mov
pop
mov
fildl
leave
in
iret
jno
sbb
jle
mov
jmp
daa
in
repz
je
fwait
cltd
jle
pop
mov
xchg
add
inc
sub
adc
cmp
inc
ror
xor
data16
xor
mov
push
test
jp
nop
xor
jmp
addr16
cmp
leave
xchg
cltd
add
scas
and
lahf
out
stos
lock
jl
push
dec
inc
xchg
dec
push
je
fdiv
cmp
dec
add
push
dec
mov
mov
and
pop
cmp
es
jmp
adc
mov
dec
and
and
sub
shll
sub
jb
test
cwtl
adc
mov
mov
mov
shrl
pop
iret
cmc
jns
ss
and
xchg
fisubrl
xchg
mov
dec
das
pop
cmp
cmp
mov
out
xchg
lahf
sub
or
push
pushf
adc
jnp
lods
mov
jbe
into
push
ja
loop
shl
xor
test
push
mov
movsl
ja
sbb
mov
mov
xchg
dec
xor
pop
fstpl
push
loop
sub
ror
or
cmp
int3
xchg
push
mov
mov
xor
or
movsb
in
imul
dec
or
push
mov
in
cmp
in
je
xlat
xor
ror
ljmp
add
ret
dec
fwait
into
pop
fcoms
adc
xchg
int3
inc
ret
push
adc
or
mov
inc
push
rolb
mov
hlt
mov
mov
push
or
push
out
ret
cmp
out
cmpsb
and
dec
call
mov
shrl
and
xchg
dec
int
adc
mov
xor
lret
shrl
cmp
push
repnz
movsb
xor
lds
push
outsb
fildll
sti
flds
pop
movsl
repz
push
sub
ljmp
cltd
sub
sbb
xchg
mov
jnp
mov
xchg
inc
cld
scas
insl
arpl
xchg
lods
pop
mov
cltd
and
dec
or
movsb
pop
or
and
push
notl
cmp
sbb
loope
inc
adc
mov
mov
dec
ljmp
loop
jnp
into
loope
mov
pop
pop
arpl
cltd
mov
jb
fsts
mov
ret
mov
shrl
rcrb
mov
or
cmp
stos
stos
aad
pop
xor
sub
fidivl
xchg
add
fwait
xchg
jns
repnz
xor
inc
sarb
or
insb
shll
or
pop
mov
popf
fdivs
int
xchg
jne
sbb
mov
xchg
xor
xor
adc
pop
mov
mov
roll
and
cli
in
gs
xchg
sbb
jne
insl
push
or
jle
xchg
lea
ret
dec
hlt
jge
fsubrs
cmpl
lods
arpl
or
add
shl
repz
adc
sub
mov
ljmp
jp
fcmovbe
in
lods
lretw
xchg
xor
cmp
xchg
pop
inc
and
adc
mov
sub
and
sub
adc
sub
xchg
scas
mov
fbld
jmp
xlat
or
imul
mov
jg
and
lock
or
int
inc
aam
dec
fstpl
push
cs
fmul
jp
scas
out
push
push
test
jle
mov
inc
js
movsl
dec
push
mov
pusha
cli
sbb
sub
dec
ja
fwait
push
mov
mov
xchg
insb
jns
inc
movsb
push
mov
pop
shlb
push
cmpsl
fimull
mov
dec
cs
fwait
mov
divb
pop
push
rcrb
cs
sub
movsl
mov
aaa
xor
cs
xchg
push
push
hlt
mov
jge
add
jge
mov
cmpsb
jp
lret
push
cmpsb
inc
jne
push
dec
mov
movsl
jnp
adc
dec
mov
in
jmp
sbb
es
jl
out
test
inc
iret
pop
arpl
into
jbe
mov
pop
out
or
insl
cmova
stc
jg
mov
mov
in
or
dec
pop
and
mov
xchg
mov
iret
jne
or
mov
push
and
out
mulb
jne
xor
lea
filds
js
scas
test
in
in
out
ds
push
cmp
mov
rcrb
sub
sbb
aas
xor
fs
mov
sub
jp
mov
ja
adc
mov
hlt
fidivrs
xor
mov
cmc
cltd
ljmp
xchg
mov
cmp
and
not
inc
stos
aad
mov
pop
mov
cli
mov
mov
jnp
push
cmp
jge
sbb
pop
lds
dec
jmp
jb
test
adc
lods
jns
ljmp
shr
gs
sti
aas
inc
fmul
in
repnz
or
dec
shrb
push
pop
inc
pop
dec
mov
test
gs
xor
sbb
loop
pop
mov
adc
shl
and
lret
test
les
insb
sub
mov
stc
lcall
arpl
or
fdivp
jmp
jns
add
aaa
inc
pop
pop
aam
mov
pop
out
mov
popf
mulb
jmp
pop
xchg
push
mov
sbb
out
bound
jge
push
lea
lods
add
xor
out
or
out
enter
adc
out
pusha
add
xchg
fisttpll
xchg
inc
push
scas
shll
jnp
sub
repnz
sub
rorb
xlat
xor
aad
insl
jbe
push
scas
js
rcr
or
xchg
addr16
inc
mov
adc
mov
pop
inc
pop
iret
and
mov
call
mov
pushf
and
mov
roll
int3
add
test
jo
ja
mov
push
mov
xor
in
insl
fsubl
sub
lds
dec
movsb
int
in
out
cmp
xlat
mov
cld
mov
icebp
xchg
out
imul
repz
enter
sti
ljmp
gs
int
push
mov
or
sahf
xchg
icebp
jb
mov
inc
push
movsl
cmp
arpl
xchg
movsl
les
stos
leave
xchg
mov
xchg
lods
add
test
xor
sbb
xchg
fstpl
fdivl
push
aaa
sub
mov
cmp
lds
pushf
stos
sar
pop
cmp
mov
ja
cmc
inc
rcr
jecxz
stc
loopne
mov
sbb
lea
test
jmp
jl
data16
sbbl
mov
jns
push
fisubrs
or
sub
adc
ljmp
sub
mov
in
ds
aas
mov
sub
loopne
sbb
mulb
sub
lahf
mov
xchg
pop
sub
sub
inc
rep
add
out
xor
xchg
add
mov
mov
xchg
pusha
stos
insb
sbb
ret
scas
jmp
add
mov
sub
lods
sbb
jg
int3
test
out
mov
out
jmp
mov
shr
push
bound
nop
fs
lcall
adc
ds
sbb
push
sub
mov
ljmp
or
mov
dec
lock
stc
xlat
push
xchg
jge
mov
xor
ds
fistpl
hlt
fwait
or
cmpsl
lahf
lahf
adc
jns
dec
cld
mov
aam
xor
adc
into
xchg
aad
push
je
sbb
nop
mov
inc
ret
test
inc
xchg
aad
cmp
in
daa
mov
imul
adc
lods
pop
cmp
aaa
dec
and
push
movsl
in
je
aad
push
add
or
popf
sbb
ret
xchg
mov
popf
xor
cmp
mov
xchg
fldl2t
cmp
in
mov
sub
xchg
push
inc
add
scas
fisubs
xor
pop
bound
dec
or
imul
cmp
jp
inc
sub
das
xchg
push
sti
in
scas
jo
inc
data16
sub
cltd
fimull
cmp
xor
lcall
fxam
push
mov
aam
aad
cltd
imul
shll
fs
fbld
dec
out
mov
iret
mov
add
test
cmp
jp
dec
mov
and
adc
jl
jnp
pop
xchg
call
insl
fdivrp
pop
movsb
mov
jns
sarb
sti
test
jns
imull
pop
and
movsl
dec
dec
cmp
mov
cmpsb
dec
ds
subb
popa
fcoml
jmp
push
cmp
sbb
pop
test
or
and
jo
sub
xchg
jmp
pop
jmp
cmp
cmp
push
loopne
inc
mov
loop
stc
loopne
adc
lds
add
xchg
pop
scas
cltd
sub
and
adc
outsl
nop
ret
imul
xorb
cmpsb
popf
inc
subl
and
push
pop
test
or
imul
and
cmp
ljmp
dec
dec
out
lret
ja
push
shll
add
ror
mov
jae
xor
test
movsb
pop
in
cmp
iret
jbe
add
cmc
mov
mov
int
lock
loop
pop
sahf
aad
lods
stos
or
push
and
es
fisubrl
je
fwait
xor
and
ret
push
cltd
sub
flds
xchg
jmp
movsb
stos
je
test
dec
es
sub
pop
fists
adc
jmp
pop
movsl
jmp
inc
pop
test
test
jge
gs
pop
mov
push
mov
dec
sbb
or
jl
sbb
fs
xor
jecxz
sub
pop
leave
dec
nop
and
cmp
mov
xor
popf
shlb
xchg
xchg
pop
mov
mov
inc
scas
sar
mov
out
lods
push
cli
lods
test
cmp
movsb
mov
cwtl
test
xchg
jne
dec
shr
mov
jg
push
xor
cltd
jge
push
add
stos
xchg
push
cmp
mov
sbb
sti
adc
testb
stc
fs
pusha
aaa
addr16
test
insb
dec
push
cmp
nop
imul
push
sub
add
pop
pop
push
mov
adc
fwait
das
dec
iret
inc
in
mov
xchg
bound
mov
cld
lds
dec
mov
xchg
lret
xor
xchg
push
in
imul
mov
mov
inc
imul
dec
insb
adc
cmc
mov
cmp
mov
pop
xchg
sbb
out
push
repnz
test
mov
inc
push
cli
xlat
dec
cli
adc
shr
add
cwtl
lods
pop
cmp
jno
pop
lock
sbb
sub
jnp
push
lret
push
cmpsl
or
dec
mov
dec
jb
inc
add
mov
or
cltd
in
jnp
int
add
jecxz
cltd
aas
dec
out
into
loopne
insb
mov
push
cltd
cltd
cltd
mov
xor
or
les
pusha
rcrl
les
dec
sbb
xlat
mov
dec
ss
mov
and
aaa
test
std
lret
xor
mov
jnp
dec
inc
cmc
sub
sbb
dec
xor
xchg
into
adc
loopne
ret
mov
outsb
pop
sub
mov
aam
out
jl
aas
mov
jg
out
into
punpckldq
inc
push
cmp
shrb
cs
sahf
pop
sub
repz
mov
and
adc
add
mov
sbb
leave
fmul
and
xor
jge
call
lea
xor
sbb
cmp
sbb
xor
lods
sub
lea
movsb
les
decb
dec
sub
pop
push
pop
scas
mov
lds
fnstenv
hlt
ret
repnz
xchg
cmp
clc
cmc
outsl
dec
push
jle
int3
xchg
mov
mov
pop
imul
pop
test
mov
mov
test
jmp
pop
mov
scas
call
mov
jg
sub
repz
mov
cmp
cltd
xchg
mov
jecxz
test
fidivrl
xchg
sub
push
fisttpl
inc
dec
add
sub
xchg
arpl
jg
push
ja
int
mov
push
ja
xor
in
ret
cmp
cli
imul
lahf
dec
test
cmp
mov
scas
inc
push
mov
push
cmp
aas
mov
xchg
ret
xorl
push
lahf
pop
push
testb
imul
push
neg
std
insl
cltd
stos
shl
repnz
adc
cld
jae
test
sarl
scas
jbe
lods
mov
sub
mov
fcomi
movb
cld
js
sub
scas
cmpsb
mov
xor
lods
int3
and
repz
imul
push
xchg
jge
xor
dec
pop
jecxz
shll
mov
loopne
outsl
stos
loopw
lea
sub
arpl
push
xchg
shlb
je
dec
xor
dec
bnd
mov
dec
mov
mov
rcl
mov
pmaxub
xchg
stos
xor
js
cmpsb
aaa
loopne
xchg
mov
ljmp
test
fcomi
dec
popf
or
inc
ljmp
xor
pop
inc
jb
sbb
in
xor
or
dec
lods
jno
add
mov
jge
xor
xor
mov
addr16
jbe
test
cmpsl
xor
arpl
or
dec
inc
push
or
or
dec
or
mov
bnd
pop
push
leave
pop
add
pop
inc
pop
mov
and
and
mov
icebp
mov
in
outsb
push
adc
dec
dec
jae
fldcw
adc
aas
pop
pop
xor
sar
add
cmpsl
lods
testb
push
pop
adc
jge
cmp
xchg
pushf
pop
fs
cmpsb
adc
aas
or
push
daa
mov
jo
sub
fsubr
lahf
sub
les
inc
or
fdiv
out
adc
roll
pop
scas
ja
pop
sub
sbb
sarb
inc
lret
lock
push
mov
cmc
mov
in
add
cmp
dec
fsubp
out
dec
xchg
xchg
adc
cli
xchg
mov
dec
sub
pop
pop
int3
cmp
jle
push
bound
hlt
jle
mov
outsl
lahf
ja
movsl
aam
stc
dec
or
lods
arpl
jecxz
adcl
mov
mov
sub
and
xchg
shlb
lods
loop
insl
test
and
cli
or
loope
les
add
adc
jbe
mov
in
ljmp
shlb
loope
cltd
mov
cmc
lods
dec
mov
mov
push
or
orb
pop
stos
fidivrs
jae
and
fcmove
dec
insb
fsubrl
adc
repz
lcall
repz
clc
push
mov
into
adc
mov
gs
into
dec
les
or
setg
lret
pop
push
jg
mov
jmp
xchg
in
adc
icebp
jne,pt
scas
stc
decl
xchg
push
add
xchg
jae
push
pop
push
cs
and
gs
adc
xor
mov
adc
jp
jbe
push
mov
xchg
jecxz
add
imul
inc
dec
and
lds
loopne
mov
dec
inc
or
pop
xchg
notl
xchg
and
pop
daa
jge
insl
das
jae
xchg
mov
mov
push
cwtl
in
or
in
pop
sub
xor
jb
addb
xor
mov
sbb
inc
insb
jae
clc
dec
fisubrl
data16
scas
pop
cmp
adc
pop
gs
xor
lret
cmpsl
cltd
and
imul
in
pushf
repz
mulb
adc
mov
sbb
ret
or
xor
ss
push
add
fcmovne
out
sbb
rorl
mov
scas
dec
gs
or
push
rcr
out
dec
or
mov
mov
pushf
inc
fistps
sub
out
push
xor
pop
adc
repz
inc
mov
xor
call
or
lds
std
add
pop
jge
int3
shll
in
ret
mov
dec
push
cmpsl
ret
push
imul
outsb
pop
ljmp
outsb
add
and
test
je
sahf
mov
or
adc
in
add
out
jp
call
jno
push
stos
movsb
inc
inc
push
mov
pusha
ja
ret
int3
cmpb
lods
push
adcl
and
push
insl
inc
lods
xchg
shr
push
in
int3
inc
rorl
imul
and
adc
pop
mov
xor
jnp
rclb
jmp
scas
jmp
xor
push
or
dec
sti
lock
add
push
leave
mov
sbb
push
add
movsb
leave
mov
in
mov
sbb
mov
insb
and
in
jmp
pushf
aad
das
and
lock
aaa
dec
sub
rol
dec
sbb
ja
addr16
insl
jnp
jno
mov
outsb
adcb
jmp
inc
mov
xor
xor
fldln2
inc
and
aad
loop
lret
jb
xor
lds
mov
leave
inc
xchg
fcomi
test
test
fstp
sti
pop
rol
mov
cmpsl
mov
inc
fildll
clc
and
insl
cld
gs
movsl
and
jbe
lods
popf
stos
subl
in
call
mov
sbb
mov
shlb
mov
cmp
enter
mov
pop
outsb
mov
sbb
mov
sbb
add
in
pop
jns
dec
roll
xchg
rcrl
and
dec
push
orb
cmpl
cmp
iret
lahf
or
mov
sub
jns
xchg
ja
cld
mov
sub
push
imul
dec
pop
lret
dec
cwtl
ja
lods
pop
mov
or
xlat
mov
roll
xchg
fwait
dec
xor
leave
sarb
ret
lds
xchg
rolb
stc
xchg
xchg
mov
jb
inc
insl
in
lods
lds
mov
add
xor
mov
fxch
shrl
mov
xor
push
pop
mov
shll
das
mov
fldcw
fildll
and
addr16
jge
add
orl
add
movsb
rolb
jl
popf
cmc
jp
outsb
jle
sbb
push
push
push
jb
and
shr
cmc
push
lds
push
push
add
dec
mov
cmpsb
in
cmp
gs
shlb
mov
nop
shl
dec
mov
aad
cli
lock
shrb
sbb
adc
push
stos
or
mov
int3
pop
shrb
push
aam
dec
out
cmpb
xchg
fnsave
mov
scas
sbb
cmc
shlb
add
cli
xchg
int
imul
in
dec
aas
adc
into
scas
jmp
xchg
push
into
std
jb
scas
pop
xchg
jo
fcomi
sub
mov
adc
cs
dec
sub
addl
mov
mov
mov
loop
pushf
fcomps
mov
in
sbb
std
sti
jae
popf
loope
dec
push
int3
leave
mov
pop
addr16
mulb
fdivr
sbb
or
mov
out
add
push
pushf
lds
mov
adc
jae
xchg
fisubrl
xchg
data16
jne
jns
push
data16
push
outsl
inc
scas
xchg
mov
out
enter
pop
les
sahf
mov
jnp
sbb
sbb
push
jle
pop
dec
push
jb
pushf
into
pop
xchg
and
dec
mov
test
repz
addr16
dec
shl
dec
orl
or
sub
cmp
iret
jecxz
cmpl
xlat
mov
in
addb
daa
das
and
fsts
push
fnstsw
ret
cmc
scas
test
test
pop
and
nop
pusha
dec
stos
divb
movsl
in
xchg
add
stos
fs
sbb
xchg
cli
or
adc
jl
lret
test
in
out
xor
push
arpl
mov
sub
sub
mov
cmp
jge
lock
lcall
xchg
adc
rcll
add
movsl
mov
dec
push
jns
popa
imul
mov
rcrb
mov
push
dec
sarb
push
dec
mov
xor
push
lods
mov
mov
hlt
test
push
lods
xchg
popf
icebp
pop
sub
lds
out
ds
ss
sub
es
push
mov
or
sti
jbe
adc
stc
in
or
push
sbb
or
adc
mov
adcl
sarb
hlt
stc
jle
dec
mov
andl
fiadds
mov
xor
and
arpl
add
int
enter
sets
mov
pop
jmp
test
data16
jecxz
push
adc
mov
sbb
cmp
push
daa
outsb
call
adc
negl
push
xchg
aad
shl
adc
cld
out
sbb
jle
cltd
or
mov
fiadds
mov
loop
push
scas
dec
xchg
inc
and
loopne
scas
mov
aas
insl
mov
inc
xlat
mov
mov
xorb
int
mov
decl
and
decb
or
mov
negb
fwait
sub
sub
jno
add
mov
data16
and
sub
fistpl
cmp
push
xor
sub
and
clc
mov
lahf
jmp
jno
xlat
shll
popf
iret
add
dec
xchg
pop
repz
pop
push
push
lods
cmp
adc
xchg
push
test
dec
or
stos
in
ret
out
adc
leave
test
scas
and
addr16
xorb
mov
leave
mov
test
sbb
mov
fbld
push
cmp
les
xchg
aaa
push
inc
jge
stos
gs
xor
mov
mov
repnz
mov
mov
adc
xchg
gs
pop
xchg
pop
and
test
mov
ss
ret
cmp
mov
aam
mov
xor
jne
pop
jg
loop
xor
sbb
add
lcall
lret
xchg
rcl
imul
adc
xchg
mov
mov
outsb
push
lods
or
jl
stos
dec
lea
mov
ficompl
jbe
cmp
popa
pop
fisubrl
scas
adc
add
enter
and
into
call
jno
and
pop
push
outsl
xor
and
lret
push
cmpsl
mov
sarb
mov
push
or
dec
inc
or
cmp
dec
and
ljmp
bound
xchg
cmp
or
sub
sub
sahf
mov
xor
hlt
add
lods
mov
aas
mov
push
fildll
mov
iret
cmpsl
push
push
popf
shrb
pop
std
out
cmp
xor
icebp
mov
or
cmp
aam
movsl
xchg
out
xor
inc
out
jmp
popf
pop
inc
nop
push
and
cmp
adc
or
add
into
rcll
xor
jno
addb
insl
dec
loop
ds
adc
shlb
mov
pushf
dec
cmp
adc
push
jbe
into
imul
loopne
mov
fs
ret
lret
mov
jmp
jecxz
push
jb
loope,pt
loop
mov
pop
jno
add
xchg
jns
in
sbb
xchg
fs
dec
inc
nop
ret
aad
mov
inc
cli
rcrb
add
dec
xchg
mov
data16
imul
xor
shll
scas
add
mov
push
iret
in
flds
or
mov
pusha
mov
movsl
jl
inc
popa
hlt
push
lea
push
lret
mov
scas
mul
push
mov
adc
enter
pop
test
pop
loop
imul
cmpsl
pop
add
push
mov
into
adc
dec
xchg
add
push
dec
mov
xchg
lods
jp
movaps
jae
ds
push
nop
sub
mov
dec
es
ljmp
fs
rcll
addb
xor
pop
or
mov
xor
loope
fcmovbe
push
xchg
sti
fisubl
in
icebp
mov
pop
and
addr16
jo
jno
test
in
pop
iret
mov
sub
xlat
cs
push
iret
dec
add
pop
fwait
or
pop
lea
xchg
imul
jne
pop
inc
nop
dec
out
push
imul
sub
js
pop
jge
mov
inc
mov
sbb
mov
xor
sbb
xor
cmp
gs
out
ds
jns
jae
sbb
scas
sbb
or
fldt
jmp
pop
in
sbbb
dec
sar
mov
gs
jne
test
pop
andl
imul
mov
adc
jl
xchg
cli
cmpsl
jle
xor
ljmp
sti
mov
lods
in
xor
fwait
rorl
fcoml
push
jns
fidivrs
pop
mov
cmp
cmpsl
sbb
inc
jecxz
inc
imull
cmp
adcl
out
add
repnz
cmc
fs
sbb
scas
cmp
xchg
sub
stos
mov
mov
mov
mov
push
movsl
cs
xchg
pop
cmpsb
push
popa
push
test
push
dec
inc
mov
lret
mov
icebp
xor
pop
lret
movsl
je
dec
xchg
sub
adc
mov
mov
pop
jno
cmp
lret
xor
jmp
dec
mov
dec
dec
xchg
out
leave
aas
xor
push
lds
cmpsb
lea
repnz
adc
mov
outsl
movsb
xchg
or
sbb
sarl
in
jb
mov
xchg
xchg
mov
mov
popf
xchg
sahf
out
lods
xor
mov
jbe
or
sub
sbb
add
arpl
push
lret
xor
sbb
adc
test
cmp
orb
mov
cmp
out
adc
insb
mov
mov
sar
jmp
jl
enter
mov
mov
jle
sbb
sbb
fistl
pop
adc
mov
lock
lret
inc
mov
bound
out
daa
inc
pop
sbb
aas
test
aam
and
lea
sbb
pop
push
sub
mov
mov
sti
popf
aam
fst
mov
mov
mov
jno
dec
pop
inc
mov
je
push
mov
dec
ret
add
in
mov
adc
or
adc
xchg
add
sub
sbb
sbb
sub
iret
data16
outsb
mov
pop
popf
sub
adc
in
pusha
mov
pop
mov
daa
movsb
cmp
cmc
push
xor
mov
xor
repnz
loopne
add
mov
fxch
mov
jp
fsubl
fldl
add
mov
or
xchg
jae
and
push
lcall
jecxz
loopne
xlat
mov
or
dec
jne
hlt
mov
sarl
sbb
enter
pop
jno
pop
pop
arpl
ficoml
rolb
popl
out
mov
jo
icebp
cs
xchg
vcvtps2dq
push
cli
outsb
bound
xor
cmc
aas
sbbb
into
push
pop
push
decb
int
ret
mov
mov
pop
das
hlt
mov
lret
pop
or
inc
xorb
cli
mov
xchg
aaa
sbb
popa
dec
xor
mov
fwait
in
push
cmp
lds
mov
and
pop
push
mov
mov
rorl
out
pusha
out
jp
test
fsubr
pop
push
cmp
sub
fwait
mov
dec
mov
or
nop
lret
mov
les
dec
add
mov
negb
jge
leave
mov
lret
cwtl
divl
pop
movsb
clc
mov
insl
cmp
and
les
aam
pushf
sahf
je
out
repz
int3
pop
sub
sahf
dec
xchg
fmull
daa
ficomps
bound
xor
aaa
pushf
cmp
push
inc
push
lock
cmp
icebp
sbb
out
dec
cmpsl
mov
ret
sbb
xchg
mov
repnz
cmovs
cli
lea
insb
mov
adc
popf
mov
jo
cwtl
jge
xchg
in
cmp
fisubl
shlb
jge
sub
outsl
andb
mov
test
cs
addr16
stos
cmp
dec
dec
or
mov
test
xor
ret
xor
pop
aam
sbb
shll
aam
cs
mov
mov
and
sub
rclb
les
mov
enterw
cmp
cwtl
filds
in
sub
cmpsb
jo
sub
jae
jl
add
fdivrs
dec
iret
and
pusha
lds
pop
rcrl
xor
jns
inc
push
outsl
sbb
fidivs
shrl
push
jb
mov
aaa
push
popa
sbb
sbb
nop
adc
sbb
shll
arpl
movsb
in
movsb
bound
jle
rorb
orl
xor
inc
jmp
repz
fnstsw
xchg
sub
lret
lahf
xor
mov
inc
loope
sahf
inc
jno
enter
ss
jne
mov
sub
fdivl
jg
fs
mov
pushf
jnp
les
pop
lcall
and
add
xchg
scas
xchg
das
inc
hlt
jo
aad
lds
and
outsl
cmc
mov
ja
push
pop
push
mulb
mov
lea
in
cmpb
lea
sub
imul
adc
push
pop
jne
aam
push
dec
or
xchg
mov
jmp
scas
jecxz
xchg
mov
mov
addb
cld
add
pop
push
shl
pop
out
add
or
sbb
pop
push
enter
addr16
rcll
icebp
sti
cmpsl
sbb
lret
fsts
aaa
bound
in
hlt
xchg
mov
das
or
inc
pop
scas
in
mov
cmp
cmpsl
inc
pop
out
flds
pop
jg
dec
fnstenv
jge
dec
mov
inc
adc
mov
and
aas
test
testl
and
xor
sbb
movsb
cmp
sbb
sub
daa
jecxz
xchg
lretw
cmp
leave
fisubl
sub
push
inc
daa
mov
adc
orb
pop
sahf
sub
cmc
push
jg
xchg
jge
cmp
fisttpl
andl
push
sbbb
inc
popf
add
sarb
ret
cld
fiadds
aad
loopne
std
pushf
fs
cs
int
sbb
jno
dec
ja
in
aad
and
popa
cmc
xor
push
mov
jle
popf
lret
loope
sbb
ret
cli
in
les
stc
xchg
jne
pop
mov
jbe
adc
call
int
mov
dec
push
cltd
inc
filds
roll
rcrl
test
and
pop
or
repnz
aad
mov
lcall
inc
add
or
adc
out
jno
dec
cmpsb
dec
ret
insb
pop
inc
cmp
test
fwait
mov
clc
ret
dec
insl
add
xchg
sub
cmp
out
adc
sbb
sbb
pushf
outsb
sarb
lods
push
imul
jmp
dec
aam
sbb
scas
dec
adc
cmpsb
insb
cld
ljmp
test
pop
push
frstor
loopne
add
pushf
shrb
pusha
das
adc
fldz
scas
xchg
test
iret
xor
divb
cld
aaa
mov
enter
inc
in
aam
pop
sbb
xor
mov
aaa
xor
mov
cmpsb
mov
cmpsl
lahf
mov
push
test
aam
mov
mov
mov
xchg
ret
ja
dec
jg
sbb
in
cmp
or
pop
sbb
pop
adc
push
mov
xor
fs
mov
cmp
push
test
mov
push
stc
mov
xchg
inc
xchg
ret
dec
rclb
dec
imul
shll
ljmp
cmp
mov
ret
arpl
leave
xor
fs
loopne
shll
or
sbbb
les
cmpsl
iret
cmc
mov
push
or
inc
or
adc
test
xor
fstps
xor
inc
inc
outsl
pop
mov
pop
rol
in
xor
adc
jl
fwait
mov
and
mov
or
cltd
and
push
inc
cwtl
adc
lock
scas
out
jne
popf
out
mov
push
ret
cld
inc
cmp
inc
stc
dec
push
jne
push
cwtl
inc
mov
shlb
pop
cwtl
std
push
lods
andb
xchg
sbb
jne
xchg
mov
roll
adc
cmpsb
mov
das
xchg
pop
add
mov
xchg
inc
cmpsl
mov
cmpsb
int3
call
das
mov
mov
pop
lret
es
int3
test
sub
lahf
movsl
jne
lock
xlat
fdiv
dec
jl
ljmp
sbb
pop
mov
push
loopne
mov
mov
mov
mov
lods
push
sbb
inc
ss
and
jl
ds
push
mov
lods
mov
xchg
push
subb
insb
imul
push
push
in
mov
insb
mov
or
push
mov
inc
inc
cmpsb
push
pop
sub
add
rorb
mov
ljmp
ds
xchg
xchg
aad
stos
movsl
mov
xlat
adc
scas
leave
lock
and
fiaddl
mov
add
sub
sbb
mov
cmp
adc
pop
sub
pop
rcrl
out
fiaddl
lret
cmp
add
test
ss
fldenv
shrl
jle
cmpsl
sbb
push
repnz
std
sub
std
pop
lret
inc
mov
sbb
mov
ret
test
test
sbb
xchg
lds
mov
mov
fs
gs
push
loope
jmp
and
mov
loop
push
sub
bound
jle
shlb
sbb
inc
bound
and
mov
hlt
adc
pop
adc
mov
jmp
lea
in
inc
clc
cmp
fidivs
divl
dec
push
or
pop
out
or
mov
push
in
and
in
mov
xchg
sar
hlt
jge
mov
add
ss
out
cwtl
mov
sarb
sbb
jmp
imul
mov
mov
xlat
cmpsb
rol
or
cmp
or
push
test
ljmp
mov
push
aas
add
loopne
lret
jbe
jge
sbb
fbld
and
sahf
bound
sub
aam
xor
movsl
jb
in
sbb
mov
in
xchg
pop
andl
insl
adc
testb
scas
jo
icebp
loope
rcrl
push
mov
test
adc
inc
pop
out
nop
hlt
fistl
repz
mov
popa
fisubl
add
lds
mov
mov
fisttpl
inc
inc
pushf
jnp
mov
cmpsb
insb
pop
addr16
pop
jns
sbb
adc
mov
filds
pop
dec
mov
insl
inc
mov
add
test
loopne
cmp
dec
adc
bound
push
popf
jno
movsl
lods
adcb
fdecstp
mov
or
jo
out
call
lods
out
icebp
imul
test
popa
ret
roll
mov
or
rcrl
pop
dec
push
inc
in
pop
mov
pop
xor
rol
cs
mov
jecxz
or
loopne
mov
adc
shlb
mov
es
ficoml
inc
pop
leave
lock
clc
mov
int
pop
mov
fsubr
and
fwait
jo
jmp
and
movsl
mov
sbb
mov
roll
popf
test
jmp
cld
mov
movl
add
push
adc
dec
push
leave
movsb
inc
or
ret
xchg
sbb
add
adc
sub
and
repnz
clc
push
les
pop
test
mov
cmp
mov
sbb
test
push
or
dec
sub
movsl
repz
dec
fs
divb
cmpsb
or
inc
push
das
xor
ljmp
dec
add
sub
xchg
xchg
scas
inc
test
movlps
dec
inc
clc
dec
add
ret
sti
into
pop
mov
mov
mov
fs
je
dec
cmpsb
outsl
arpl
or
mov
clc
sarl
mov
shll
insl
xchg
push
insl
mov
add
ret
adc
in
stc
push
jns
push
add
jl
inc
or
sahf
in
push
ss
dec
je,pt
dec
or
cmp
bound
sbb
shll
lret
loope
ret
fisubrs
mov
xor
fistl
nop
daa
adc
gs
js
cltd
jnp
rorl
test
or
push
xor
das
pop
pop
mov
jo
jne
jne
repnz
dec
rol
inc
mov
scas
lods
push
cmp
cmp
dec
add
in
dec
jge
sbb
cmc
and
push
pop
mov
imul
insl
fisttpl
dec
jae
cmp
sarl
mov
push
mov
test
xchg
xor
lahf
int
imul
cmp
bound
insb
dec
add
aad
mov
mov
xchg
inc
loop
lock
xchg
mov
xor
rcrl
stc
dec
adc
or
loope
es
sahf
cmp
sbb
add
sbb
jbe
dec
iret
xchg
or
repz
push
aad
repnz
test
xchg
adc
repnz
xchg
push
push
fwait
add
xchg
xchg
shlb
ljmp
add
cmp
sub
gs
mov
cmp
xchg
or
xchg
sti
xor
mov
cwtl
std
jo
mov
add
adc
movsb
jne
test
pop
lods
mov
stos
insl
lcall
and
sub
mov
fucom
ljmp
ret
fmul
mov
subb
push
jmp
adc
add
movsl
sub
movsb
dec
inc
pusha
xchg
pmulhuw
popl
xor
enter
dec
and
out
xchg
cli
cmp
inc
insb
stos
xchg
sbb
jmp
mov
in
mov
inc
lcall
or
shlb
sbb
add
cmpsb
mov
mulb
add
sar
lret
pop
movsl
mov
aas
imul
jne
popa
jo
fwait
inc
loopne
daa
mov
enter
mov
or
imul
pop
mov
jl
xchg
inc
cmpsb
jne
or
sub
or
into
lock
adcb
movsb
or
scas
fdivrs
mov
xor
fdiv
inc
add
cmpsb
sub
ja
mov
bound
mov
sbb
jl
repz
sub
inc
insb
mov
push
jl
lahf
or
repnz
sbb
jg
xchg
cld
fsubr
push
loopne
pop
gs
jmp
out
gs
jmp
imul
cmpsl
add
call
or
insl
add
cmp
sub
xchg
xor
rorb
push
repz
mov
inc
ret
or
or
dec
in
inc
fs
mov
inc
test
pop
hlt
jno
cmc
adc
mov
nop
ret
ret
cmp
sarl
mov
add
and
inc
movsb
movsb
mov
loopne
shlb
icebp
pop
lret
shr
adc
inc
push
int
sahf
mov
test
popf
loop
inc
mov
pop
xor
pop
rcll
sarb
lods
andb
into
or
mov
scas
cltd
rcrl
and
and
clc
inc
jbe
jo
cmp
jmp
int3
dec
cmp
adc
pop
sbb
lret
dec
push
lahf
jecxz
adc
out
xor
insb
fisubl
pop
mov
push
adc
and
addb
xor
sbb
call
data16
and
xchg
mov
push
cmc
pop
jbe
cmp
or
add
out
cmp
cmpsl
or
push
push
enter
jge
sbb
lods
aam
xchg
loope
cmpsl
test
dec
push
mov
test
pop
repz
rclb
fisubrs
or
sub
dec
insb
sbb
rolb
xor
sub
jge
test
outsb
sbb
arpl
int
inc
fisubs
sbb
or
xchg
adc
leave
or
pop
in
dec
pop
sahf
mov
push
icebp
popf
xchg
add
aaa
sbb
fsubs
stos
push
lahf
test
dec
je
or
or
xchg
mov
sti
add
stos
es
push
mov
adc
mov
jno
xchg
cld
jle
inc
and
add
sbb
mov
in
popf
imul
pop
pop
add
or
mov
es
outsl
push
push
les
icebp
and
bound
sbb
xor
mov
clc
inc
add
jmp
jmp
inc
enter
xchg
das
out
xchg
loopne
dec
mov
or
imul
clc
fwait
xchg
lret
int
cmp
xor
out
jmp
jne
adc
cltd
ja
sub
sbb
sub
ss
jae
cs
inc
fiadds
jnp
call
popl
mov
add
adc
xchg
mov
cld
test
cmc
add
aad
imul
subl
adc
pushf
push
jmp
mov
in
iret
lea
rol
mov
cmc
xchg
adc
into
insl
inc
loope
add
inc
xor
ss
gs
test
mov
popf
jae
ret
cmp
rcr
mov
pop
roll
daa
dec
push
outsb
sbb
jno
sti
sarb
inc
push
out
cmp
xor
jmp
mov
mov
sarl
addb
sbb
mov
cmpsb
adc
inc
dec
clc
aam
mov
movsb
mov
dec
push
test
in
jecxz
mov
icebp
jmp
dec
mov
push
xchg
cmpsl
sbb
mov
incb
cmp
mov
sbb
cwtl
in
or
jle
pop
icebp
mov
ds
xor
popa
sbb
mov
mov
pop
lds
sbb
enter
xchg
sub
push
push
cmpsb
aam
in
push
mov
adc
mov
addr16
cmp
rcr
stos
add
inc
imul
shrl
stc
pop
mov
sbb
sbb
shr
dec
and
xor
lahf
enter
cmp
mov
movsl
dec
inc
in
pmaxsw
fndisi(8087
aad
cmp
dec
or
js
cmp
incl
xchg
mov
mov
shll
jg
sbb
mov
aas
xorl
mov
xor
cmp
movl
pop
mov
je
movsb
lea
add
roll
sub
mov
push
jnp
cmc
and
insl
int
ret
and
push
pop
jo
inc
lahf
xorps
es
sub
loop
push
mov
mov
sbb
sbb
adcb
pop
test
into
mov
inc
in
fucomi
cmp
icebp
das
test
xorb
jge
test
or
push
pop
mov
push
lods
loopne
jo
sbb
push
dec
jno
sbb
jmp
sbb
enter
jbe
arpl
push
inc
jne
add
lock
mov
ffreep
adc
adc
inc
and
stos
mov
adc
pop
adc
jns
pop
dec
mov
cmp
xchg
and
pop
rcrb
or
outsb
lcall
sub
jb
rclb
mov
movsl
hlt
push
pop
jns
lds
mov
int
sub
and
xor
arpl
adc
mov
jnp,pt
ja
mov
pop
mov
cmp
pop
nop
jmp
or
sbb
inc
cmpsl
inc
insl
cwtl
lock
sbb
jbe
sahf
movsb
mov
or
xchg
cmp
aas
stos
mov
daa
xchg
pop
xchg
jmp
sbb
xor
and
jmp
pop
movsb
sub
cmpsb
lret
out
call
xchg
popa
mov
lock
movsl
int3
xcrypt-ctr
cmpsl
lahf
movsb
adc
aas
imul
loopne
fcomps
stos
cwtl
mov
pop
dec
adc
inc
adc
xchg
fst
push
xor
xor
addr16
sbb
mov
mov
clc
test
dec
adc
pop
fisubrs
jb
hlt
mov
das
imul
pop
scas
push
cmp
inc
jns
fs
xchg
jnp
sub
inc
push
data16
push
popf
jo
les
lds
loopne
push
jmp
int3
mov
aas
add
pop
mov
dec
and
stos
pop
into
xor
cmp
cmc
inc
outsl
divl
mov
cmp
pop
clc
or
mov
fisttps
add
adc
sbb
dec
adc
daa
xor
xor
mov
bound
jecxz
stos
sti
rol
push
jns
pop
adc
cmp
xchg
scas
adc
popf
in
les
mov
xchg
cld
iret
mov
sub
mov
jecxz,pt
mov
fwait
loopne
mov
sti
pop
pop
add
xor
push
cmpsl
int
pop
cmp
sub
scas
fisubl
rorb
outsb
enter
shrl
mov
mov
sbb
clc
jbe
scas
das
ret
hlt
dec
mov
cwtl
xchg
sub
add
mov
jne
outsl
jno
addb
addps
les
popa
sahf
lock
cmp
and
pop
into
inc
aas
hlt
pop
inc
arpl
lea
adc
xchg
inc
pop
push
add
fcomps
mov
mov
dec
inc
jmp
outsb
pop
iret
cmp
cmc
insb
mov
mov
popa
out
jmp
mov
xchg
stc
xchg
jnp
aas
fsubrs
aad
jne
push
adc
sahf
mov
dec
iret
es
js
cmpsb
mov
into
jp
ljmp
test
fimuls
lret
sub
add
loopne
push
jle
psrlw
rcrb
jle
xchg
std
fldl
insl
mov
outsl
fldl
in
xlat
pop
dec
mov
inc
or
push
dec
dec
stc
clc
test
shl
jmp
lahf
jle
mov
cmp
shll
cmp
mov
fsubrp
pop
std
jge
jmp
lcall
xchg
in
cmpsl
je
jne
mov
fwait
out
std
xchg
popf
jmp
xor
in
xchg
sub
jb
mov
outsl
add
xchg
les
outsb
push
sbb
add
jmp
fdivr
pop
shr
mov
aas
std
loopne
sub
aas
sbb
push
mov
into
dec
jns
lahf
mov
call
mov
inc
mov
cltd
outsb
pop
stc
stc
push
sti
jp
or
jne
mov
pop
test
rcrb
enter
mov
cmc
cmp
inc
pop
into
ret
sbb
mov
xor
mov
cld
sbb
jb
aas
loop
jne
ja
push
xchg
std
in
test
dec
icebp
shr
jecxz
aaa
int
pop
dec
cltd
cld
inc
flds
cmp
xchg
test
ljmp
cmp
out
decl
mov
mov
mov
fsubp
das
jmp
and
and
jbe
xor
imul
std
lods
fildll
std
hlt
cmp
loop
iret
and
mov
sub
pop
outsl
push
xchg
in
mov
cwtl
cmp
jmp
ja
movsl
jp
loopne
dec
fcmovu
out
push
lock
incl
xchg
sub
outsl
in
rcr
fsts
pop
lock
bound
bound
ljmp
aad
cmp
fnstsw
inc
dec
cwtl
ret
je
in
push
cld
int3
imul
inc
in
vpunpckldq
sbb
sahf
fs
std
push
adc
xchg
cmpsl
dec
out
sbb
jl
add
mov
or
mov
data16
repz
and
and
jne
jno
fwait
arpl
xor
mov
or
cs
iret
cmpsb
inc
aaa
into
das
jmp
sbb
fldenv
nop
call
shl
pop
hlt
testl
mov
das
popf
mov
xchg
xchg
adc
out
stos
sub
add
jbe
xor
xchg
sub
xchg
cmp
sbb
mov
mov
sbb
testl
mov
xor
mov
mov
cs
inc
and
and
das
inc
jge
scas
test
aas
arpl
out
jns
and
iret
dec
jbe
add
sbb
mov
dec
mov
push
pushf
add
xchg
inc
lcall
das
scas
ja
pop
xchg
cmpsb
sbb
les
inc
jecxz
fstpl
test
sub
cwtl
mov
jge
stc
adc
lods
addb
cli
mull
sbbb
ret
test
fstpt
test
rorl
scas
jge
dec
out
fistpl
insb
ffreep
negl
mov
push
mov
fs
loope
adc
pushf
push
into
test
push
push
cmp
mov
lea
mov
outsb
jp
jp
mov
inc
xchg
pushf
fwait
cmp
shlb
pop
add
jbe
mov
or
cld
mov
mov
or
leave
or
insl
push
jmp
fildl
dec
mov
mov
mov
pusha
and
push
stc
mov
fdivp
push
mov
or
add
push
push
jge
push
push
mov
shrl
pinsrw
fstpt
and
outsb
dec
pop
or
push
mov
div
xchg
nop
mov
adc
cmp
adc
inc
daa
lds
mov
popa
ja
gs
pop
fstpl
push
jo
mov
mov
push
xlat
sub
je
movsb
sbb
cmp
sahf
or
dec
push
rorl
add
cmp
out
mov
lds
jo
out
fisubs
ss
mov
les
insb
fbstp
mov
and
xchg
sub
setns
or
xlat
dec
pop
outsl
mov
jecxz
cld
dec
ret
data16
clc
out
or
push
xchg
mov
mov
and
or
ss
test
loop
out
xor
adcl
pop
cmp
jb
jae
shll
stos
insl
and
dec
xchg
pop
jb
add
xchg
stos
cmpsl
or
mov
popa
push
sti
mov
stos
cmpsl
inc
xor
pop
or
inc
popa
dec
out
pop
inc
dec
and
aaa
add
mov
mov
sub
jmp
sub
xchg
mov
mov
int3
sub
testl
scas
test
inc
or
lahf
in
inc
mov
aaa
es
mov
xor
jp
rcrl
mov
and
lret
imul
fidivrl
adc
pop
xchg
cmpsl
loopne
fnsave
and
xchg
pop
lock
je
mov
adc
mov
rcrb
push
push
daa
addr16
lret
enter
add
dec
aaa
addr16
fwait
pusha
stos
mov
fiadds
cltd
int
mov
cmp
mov
cmp
xor
cmp
xor
xor
lods
repnz
sti
xchg
inc
xor
test
pop
shll
sbb
pop
std
stos
dec
movl
ljmp
adc
in
popa
push
insl
cltd
or
xor
jae
movsb
ljmp
in
jecxz
jg
fwait
mov
fwait
mov
adcl
mov
ja
xchg
sub
fsts
pop
pop
ficompl
daa
pop
sub
mov
bound
leave
or
clc
xor
or
and
aas
lds
push
jp
les
dec
lds
ss
mov
pop
divb
sti
test
sbb
cmp
mov
lret
push
cwtl
lods
ja
mov
clc
lea
shrb
jge
mov
loop
insl
pop
int3
mov
rdpmc
inc
xor
and
sbb
mov
xchg
pop
lods
sbb
js
push
lds
popa
loope
std
daa
outsb
mov
fwait
mov
cmpl
enter
sub
jg
movsb
outsb
lods
dec
pushf
pop
les
roll
xchg
sbb
xor
jmp
mov
adc
mov
outsb
inc
mov
jle
fcmovnu
adc
pop
es
aas
std
sbb
xlat
push
jbe
inc
into
sub
mov
inc
sub
repnz
ret
divl
testl
add
cmp
cltd
lcall
adc
adc
mov
inc
dec
pop
leave
jnp
push
dec
mov
and
xchg
add
adc
shll
jo
xchg
and
pushf
out
rcrl
dec
es
std
iret
out
jae
ja
mov
mov
jg
stc
mov
fstpl
mov
pop
fwait
arpl
pop
scas
outsl
es
pop
jo
mov
jl
jge
in
push
push
fs
mov
inc
aaa
jnp
fcompl
loop
pop
adc
or
shlb
je,pn
in
call
add
aam
or
lea
adc
daa
lock
gs
dec
fld
pop
dec
or
xchg
dec
imulb
pop
xchg
pop
lret
dec
push
jp
xor
repz
cmpsb
cmp
fnstsw
inc
es
fwait
stc
repz
mov
mov
mov
jb
mov
pop
jb
push
lea
je
scas
push
pusha
push
movb
jg
iret
xchg
push
cmp
movsl
jmp
inc
leave
xchg
adc
aam
adc
inc
pop
mov
dec
subb
cmp
insb
pop
fcmovnb
adc
push
pop
mov
inc
cld
sarl
outsb
xchg
popf
push
sbb
dec
jnp
adc
insb
icebp
pusha
add
daa
movsl
xchg
adc
mov
or
mov
fbstp
inc
loop
jl
or
add
sbb
stc
int3
std
adc
jle
xchg
sub
pop
orl
imul
push
shl
or
jg
lock
lods
test
mov
test
loopne
push
clc
mov
mov
mov
divb
out
movsb
dec
lret
outsb
iret
insl
mov
and
mov
cmp
lahf
test
mov
sbbb
icebp
lods
test
push
fcompl
jae
mov
mov
push
clc
int3
jl
sbb
mov
sbb
push
dec
in
lea
fists
jb
out
cmp
leave
mov
jbe
lods
push
fwait
inc
repnz
sti
xor
out
xorl
call
jg
xchg
jp
or
fs
outsl
cmpsb
int
in
stc
enter
mov
mov
push
call
int
addb
mov
cld
jae
add
push
sbb
les
cmp
adc
fsubr
aaa
out
fxch
out
sub
scas
sahf
dec
lret
pop
mov
aas
inc
int
cmp
dec
rcrl
inc
shrl
xchg
scas
add
push
pop
xor
ja
aad
xlat
sbb
insl
jnp
or
fistl
inc
popa
or
stos
mov
lcall
xchg
out
sahf
stos
xor
xchg
pop
and
aad
pop
movsb
in
sub
adc
mov
jmp
cmp
enter
mov
ds
ja
fdivl
jae
notl
pop
cmp
fwait
mov
jp
lret
sbb
dec
jb
cli
lock
adc
inc
test
mov
or
jl
pusha
insb
xor
and
dec
ret
cmp
mov
loopne
add
cld
xor
or
aaa
mov
and
subl
pop
sbb
mov
dec
jg
lcall
pop
mov
adc
mov
xor
inc
xchg
sarl
cmp
in
xor
jno
inc
movl
cmpb
cmp
jbe
pop
cmp
adc
lods
adc
clc
mov
outsb
mov
fdivs
add
je
push
inc
imul
ret
fnsave
idivb
aas
test
mov
into
push
sub
inc
push
sub
inc
jg
fwait
std
scas
xor
mov
sbb
adcl
cli
jae
aas
stos
cmp
mov
std
jge
outsb
scas
add
or
sub
inc
es
pop
jle
lret
xchg
sbb
jno
cmp
cld
shl
stos
sbb
push
mov
xlat
scas
sti
mov
mov
pop
pop
sub
fiaddl
add
or
adc
repz
sub
gs
jg
mov
and
push
icebp
subl
push
fbld
loop
data16
test
lret
inc
daa
inc
outsl
mov
pop
sbb
sub
test
or
iret
cmp
inc
add
fdivs
jg
mov
shl
test
pushf
push
jg
xchg
shll
jnp
lea
insl
dec
mov
out
aaa
rcrb
lret
enter
pusha
call
jg
enter
ja
and
dec
cmpsl
mov
fsubl
jle
test
mov
xchg
sbb
int3
sub
sarl
jae
push
je
xchg
leave
int
inc
jnp
scas
and
jl
and
add
xchg
cmp
subl
mov
cmpsl
xorb
iret
push
enter
test
sub
mov
jne
cmpsl
pushl
idiv
mov
xchg
dec
lcall
inc
jns
rol
enter
fisttps
adc
jb
mov
cwtl
fldcw
and
fisttpl
jl
jnp
pop
pop
lock
mov
xchg
cmp
mov
push
int3
or
sbb
sub
adc
mov
inc
shlb
cltd
ljmp
or
cwtl
xor
jns
jae
loope
enter
mov
pop
aam
pop
adc
orps
pushf
push
test
push
mov
iret
daa
imul
pushf
ljmp
pop
sub
sub
ror
pop
call
loope
ret
loope
cld
aas
jne
mov
jae
fisubrl
sbb
insl
inc
fsubs
mov
shl
cwtl
and
movsl
ffreep
jo
push
imul
fstps
sbb
inc
sbb
sub
aad
add
ficoml
mov
or
daa
cmpl
cmpsl
in
push
inc
xchg
dec
cltd
sbb
xor
jg
enter
add
sub
mov
mov
xor
adc
jne
cmpsl
fcoml
int3
lds
xlat
dec
scas
and
sbb
adc
dec
scas
sub
and
mov
cs
ss
xor
mov
lea
add
ret
pop
in
and
dec
std
jecxz
std
bound
mov
divl
xor
xchg
add
popf
inc
inc
inc
fistpll
add
mov
insb
and
inc
jo
icebp
ror
ja
sub
fwait
xchg
inc
outsb
and
leave
ss
push
call
fcoms
popf
or
rcr
arpl
mov
out
or
out
in
xchg
int
mov
jg
push
xor
outsl
jmp
pop
fwait
loope
lret
push
mov
out
push
clc
add
push
xlat
mov
bound
fcomi
mov
cli
sub
sti
out
inc
lods
into
jmp
or
test
cltd
mov
lret
insb
cwtl
sti
sbb
adc
mov
xchg
das
outsb
call
test
in
outsb
pop
pop
pop
and
adc
fwait
rclb
xor
lret
or
dec
or
push
fiadds
imul
lcall
pusha
xchg
pop
out
or
fdiv
jge
jge
nop
mov
mov
mov
test
jge
pop
cmp
stc
sahf
pop
cmp
subb
cmp
in
pop
mov
mov
std
xchg
xchg
inc
pop
pushf
adc
aas
bound
cmpsb
ret
arpl
sahf
jno
fdivp
vpshufd
xchg
repz
xlat
enter
dec
pop
aas
loope
jb
sbb
pop
dec
inc
jne
aam
pop
movl
enter
cmp
bound
mov
cwtl
hlt
and
gs
dec
dec
popl
xchg
pop
clc
pusha
mov
ret
cmp
sbb
xor
mov
xchg
pop
les
xor
or
sarl
cs
sbb
in
pcmpgtb
maskmovq
testl
in
sub
sti
jne
imul
cwtl
addl
xchg
repz
fimuls
ret
or
cli
sti
sub
sbb
stos
icebp
inc
call
pop
or
imul
cmp
rorb
sbb
pop
dec
mov
xor
outsl
or
mov
pop
xchg
jge
enter
fisubl
ja
jecxz
adc
adc
xor
cmp
out
test
xchg
out
push
push
out
movsl
loop
sbb
jmp
mov
xor
lods
add
scas
push
mov
dec
cld
adc
jo
loopne
mov
jle
out
mov
and
add
sahf
or
cltd
jecxz
dec
fldcw
push
pop
or
mov
daa
stos
fisubrs
mov
fcomps
sbb
or
push
in
lahf
fcmovbe
pop
ficoml
mov
int3
push
xchg
inc
jbe
nop
push
lcall
adc
fiadds
lods
pop
xlat
jg
and
lret
cmpb
fwait
sub
lret
loopne
mov
std
outsl
xor
scas
ror
push
xchg
subb
call
cmp
fimuls
inc
dec
call
int3
mov
aaa
xchg
out
lahf
std
testb
popa
fisttpl
lret
and
rcll
push
arpl
lods
mov
jecxz
pop
pop
xchg
lock
in
xchg
mov
add
insb
push
jmp
push
pop
adc
adc
clc
fldenv
jae
loope
xorb
ret
lea
clc
push
adc
pop
enter
aaa
mov
mov
shr
pusha
ss
pop
fwait
sarb
hlt
pop
aam
sub
fwait
jns
xor
sbb
rcll
mov
xor
xor
jbe
sbb
push
pop
inc
cmc
pop
mov
lods
pop
dec
gs
icebp
mov
repz
mov
repnz
enter
push
push
rorb
push
sub
movsl
mov
bound
mov
ljmp
adc
in
inc
aad
cmp
int
cmp
jnp,pn
dec
lcall
sub
dec
pop
pop
sbb
dec
dec
add
dec
cmp
push
lock
jbe
dec
pop
divl
insb
js
xchg
idivl
and
inc
ds
in
addr16
fsubrp
cmp
pop
push
sbb
es
fidivrs
cmp
push
fsubrp
bound
ds
stc
jbe
jp,pn
shll
lret
aas
sub
retw
or
movsl
jbe
inc
sahf
sub
push
jo
and
sbb
cmpsb
add
pop
loop
adc
inc
dec
and
xchg
sub
sbb
cmpsl
lock
and
data16
in
call
push
cmp
jns
cmp
sub
out
cmp
mov
ret
push
dec
and
ret
pushl
test
push
xchg
inc
das
hlt
jecxz
test
je
cld
jne
push
stos
mov
int
pop
out
cwtl
xor
xchg
test
ljmp
sbb
out
nop
repnz
pop
cmp
jecxz
pop
mov
loope
lods
inc
out
out
mov
in
or
mov
add
lret
jno
gs
jp
jg
std
cld
mov
mov
aas
mov
push
push
xchg
pop
mov
ds
xor
roll
test
outsb
mov
sbb
inc
ret
inc
insl
stos
adc
cmpsl
cmp
xchg
cmp
push
js
addb
fiaddl
into
add
repnz
ljmp
imul
sbb
xchg
pop
xchg
mov
push
shrb
mov
sahf
outsl
test
les
mov
jmp
add
dec
and
sarl
enter
sbb
lods
ret
dec
cs
ret
es
js
mov
popf
xchg
insl
add
cmovne
push
and
or
dec
fs
into
and
js
adc
test
js
xchg
jbe
iret
or
test
mov
mov
mov
cwtl
sti
cld
les
stos
movsb
repnz
sub
xchg
loope
push
dec
hlt
in
mov
dec
pop
shlb
mov
sub
mov
jge
stc
xor
mov
or
out
les
dec
dec
pop
pop
mov
add
lahf
out
fucomip
inc
cli
insb
or
test
pop
jne
cmp
jecxz
jno
loopne
loop
mov
push
dec
sarb
xchg
jae
dec
or
cwtl
arpl
hlt
or
stc
cmpsb
dec
xchg
xor
push
jmp
or
popf
int3
fisubs
pop
les
ret
mov
mov
jb
call
mov
xchg
cli
push
loope
mov
movsb
adc
pop
push
cmp
inc
mov
or
mov
aas
jg
fdivl
inc
lcall
mov
pop
sbb
mov
mov
xchg
mov
lgs
insl
icebp
push
mov
add
sub
testl
pop
or
xchg
int3
mov
jno
clc
mov
xchg
jnp
mov
int3
or
fisttpll
test
sahf
push
lahf
jle
jecxz
lret
test
hlt
add
add
cmc
jmp
sbb
mov
out
in
mov
scas
daa
jg
icebp
fildl
dec
xchg
inc
inc
in
lea
ds
xor
das
xchg
sbb
rcll
je
aaa
xchg
mov
push
inc
arpl
sub
push
cmp
mov
call
dec
mov
cmp
daa
pop
jbe
xor
cmp
movsb
push
iret
cmpsl
and
stos
pop
mov
xor
push
inc
jmp
mov
lock
fdivr
cmp
jno
mov
mov
idivb
sbb
inc
insb
test
test
out
cmp
pushf
jp
data16
and
ja
push
inc
sbb
push
movl
push
nop
adc
inc
mov
ret
cmpsb
jge
push
loope
daa
shlb
and
dec
aaa
popf
sbb
cmp
mov
lock
push
aam
ds
mov
mov
push
iret
cmp
push
add
lods
ljmp
inc
iret
lahf
lahf
sbb
lods
arpl
insl
xlat
sbb
cld
xlat
adc
pop
mov
fidivl
repz
xchg
aad
rorb
push
mov
hlt
imul
xchg
bound
mov
popf
push
nop
xlat
enter
add
pop
aaa
cmpsl
cltd
sub
adc
inc
xchg
inc
rolb
jg
scas
lret
pushf
shl
mov
add
vprotq
ja
nop
adc
and
gs
icebp
xorl
push
bound
and
negb
inc
mov
les
ljmp
ds
xchg
push
pop
notb
mov
jo
nop
leave
xor
lods
or
lahf
sub
jle
lret
xor
pop
mov
jbe
repnz
dec
mov
test
adcl
dec
mov
xor
pop
inc
dec
fists
gs
xchg
jo
aas
aaa
xchg
outsb
subl
cwtl
stos
jecxz
cmc
pusha
xor
in
ficoms
jl
lret
jne
movsb
mov
shl
push
push
in
clc
fisubrs
xchg
pop
pop
ds
pushf
popa
in
add
cmp
fistpl
jmp
pop
mov
adc
lret
jne
repnz
sbbl
push
stos
notl
std
adc
xchg
std
push
xor
testl
jb
addr16
cmp
mov
sub
inc
out
aad
sbb
insb
lahf
add
push
pavgb
add
daa
dec
gs
cli
pop
mov
sub
add
mov
xor
sbb
dec
mov
stos
leave
xor
mov
xchg
sub
jne
movsb
mov
or
loope
fcmovb
cmp
lods
pop
pusha
push
imulb
pop
jnp
mov
jns
add
xor
jecxz
cmp
pop
sbb
add
jns
push
mov
jg
fs
lock
sbb
push
dec
push
movsl
sbb
aas
test
xorb
vpxor
ret
stos
in
cmp
push
fwait
pop
mov
hlt
inc
sbb
aam
cmp
aaa
sbb
push
icebp
ja
push
arpl
inc
xlat
shlb
mov
aaa
jecxz
shrb
test
cwtl
dec
pop
mov
cmpsl
or
sub
popw
or
in
outsl
loope
mov
mov
xchg
or
mov
xchg
std
adc
rol
pop
xlat
ret
inc
fldcw
sub
dec
xchg
pop
and
in
xchg
cli
pop
cmp
jbe
jo
scas
stc
shll
sti
rcl
dec
mov
roll
arpl
xor
je
pop
je
jb
xchg
add
adc
orl
pushf
loop
jle
das
push
xor
adc
imul
xchg
xor
xor
dec
je
fsts
test
mov
jle
push
or
add
jmp
sub
leave
cmp
test
imul
out
enter
or
or
mov
incl
sub
pop
jno
movsb
testl
sbbl
rolb
stos
sub
or
imul
outsb
popa
lock
sub
fwait
xchg
push
push
cmpsl
inc
ret
inc
inc
or
mov
or
add
inc
dec
pop
icebp
adc
js
dec
jb
orb
and
mov
into
xchg
pop
int
or
push
insb
mov
pushf
lret
mov
pop
pusha
outsl
xor
scas
lahf
xchg
rorb
scas
cs
and
aas
mov
mov
iret
stc
movsb
jle
cmp
call
jmp
mov
gs
adc
in
mov
jg
ds
or
lret
lahf
cwtl
lahf
push
lret
pop
movsl
push
sbb
xchg
mul
addl
out
jle
scas
xchg
mov
add
imul
cmp
sbb
test
jo
sbbb
insl
xor
cld
inc
out
stos
cmp
out
jno
adc
clc
mov
popf
test
out
ds
iret
sub
ljmp
jmp
fsubr
roll
cmp
cmpsl
rorb
xchg
int
lret
pop
cmp
mov
mov
ds
pop
jmp
pop
jae
xchg
xorl
mov
xor
mov
xchg
inc
add
or
sub
aaa
movb
mov
xchg
xchg
xchg
iret
adc
push
movsw
pusha
ljmp
es
popf
sbb
sbb
xor
dec
gs
out
push
and
inc
ljmp
icebp
or
dec
lods
add
and
and
pop
leave
lahf
push
adc
loopne
in
adc
std
mov
add
xchg
xchg
div
xor
in
adc
outsl
and
aas
jnp
lods
mov
jmp
dec
mov
adc
lock
imul
cmp
mov
inc
pop
fidivl
in
test
outsl
stc
jnp
xchg
pop
xor
fsubs
inc
ror
jl
sbb
jl
inc
addr16
notl
fbld
in
mov
and
mov
pop
inc
mov
jmp
push
mov
add
jle
ja
in
add
loopne
inc
outsl
xchg
pop
sub
push
and
mov
decb
push
sbb
xchg
imul
lahf
inc
jge
lret
inc
lret
aas
push
jmp
cmpsb
mov
jmp
jne
mov
push
push
add
adc
jno
mov
mov
popf
mov
rcll
sbb
or
xchg
mov
cmp
fisubrs
and
in
test
pop
jle
mov
push
aaa
cmp
lcall
mov
mov
inc
lods
jmp
xor
imul
out
shlb
fs
adc
xchg
add
mov
or
jne
loope
adc
mov
lock
push
mov
mov
les
icebp
jp
das
test
adc
loop
xchg
inc
nop
inc
mov
daa
xchg
movsb
cmp
fidivrl
sbb
sbb
ss
dec
push
dec
adc
inc
push
mov
or
xchg
sbb
sbb
xchg
test
dec
int
dec
mov
mov
movsb
test
shrl
mov
push
push
rcr
decl
jp
inc
lea
cmp
call
mov
mov
mov
sbb
adc
sub
into
jns
notb
ficoml
ss
inc
xchg
xchg
sbb
in
sub
cltd
sbb
pop
dec
sbb
in
inc
mov
or
inc
mov
stc
xor
std
jecxz
out
les
inc
and
pop
mov
xlat
popf
in
test
test
repz
scas
mov
push
sub
xor
repz
push
mov
sbb
pop
jb
mov
stos
pop
out
lea
inc
push
and
aam
xchg
loope
clc
sbb
popf
push
in
xor
leave
dec
push
sti
or
inc
dec
mov
jo
movsb
insb
xor
adc
mov
xor
loop
lahf
and
add
sub
in
add
push
cli
mov
imul
sahf
pop
addr16
je
xchg
push
int3
adcb
in
mov
fcomps
sub
add
ljmp
jno
mov
sub
add
sar
jb
jnp
adcl
scas
cmpsl
fistpl
fistpll
stc
insb
cmpsl
cs
xchg
jo
es
mov
pop
add
ljmp
pop
jne
int
xchg
push
aam
cmpb
or
aas
ret
test
add
lods
mov
jns
lcall
ffreep
or
in
and
into
mov
cld
fbstp
out
mov
sahf
bound
add
mov
aaa
push
outsl
lret
xor
rorb
fiadds
jbe
sbb
push
fs
mov
jl
es
dec
push
lret
pop
jb
push
bound
add
adc
ds
xor
sub
ja
xchg
sti
mov
int3
rorl
push
sbb
outsb
daa
dec
jle
jb
lcall
repnz
cld
ss
int3
mov
std
or
mov
and
or
outsl
jbe
push
cmpsb
adc
js
mov
add
or
cmp
incb
outsl
sbb
nop
mov
inc
push
in
push
fst
sbb
push
les
mov
xchg
xchg
pslld
cs
push
cmp
mov
jmp
rdtsc
mov
mov
filds
ds
dec
fst
clc
sbb
stos
sarb
arpl
pushf
loop
js
in
push
data16
les
in
leave
jge
add
arpl
push
xor
pop
pop
hlt
pop
sub
mov
pushf
push
out
pop
pop
int3
xor
dec
in
mov
pop
jg
mov
jg
xor
cmp
hlt
js
stc
xor
leave
pushl
jmp
cmp
pop
test
pop
loop
mov
pop
and
fs
or
jnp
aas
sbb
in
jnp
popa
repnz
jbe
inc
rcrb
sbb
inc
lret
movsl
lods
xor
lahf
xor
add
mov
pop
pop
push
popf
mov
xchg
dec
repz
andl
dec
shl
mov
arpl
mov
adc
leave
out
lahf
test
insb
fistps
loope
inc
pop
jbe
mov
and
das
iret
call
cmp
jg
pop
incl
hlt
xchg
pusha
or
sub
out
sbb
gs
lret
mov
push
mov
lods
mov
mov
int3
andb
addr16
sti
fidivs
xorb
push
pop
adc
dec
and
dec
cwtl
jp
fdivl
cmpl
mov
sub
cmp
sbb
bnd
rcrb
outsl
lods
pop
jp
mov
jae
hlt
ljmp
dec
push
adc
jns
mov
jno
mov
or
out
mov
inc
sbb
xchg
arpl
mov
fs
ffreep
repnz
jbe
adc
cmp
jno
std
loope
mov
jns
out
sub
sbb
inc
data16
and
gs
cli
mov
mull
mov
mov
lret
pop
xchg
ljmp
push
lret
shlb
dec
mov
in
fwait
mov
testb
jecxz
jle
add
xor
and
cmp
fmul
pop
shlb
movsb
rcrl
xor
inc
scas
outsb
push
xlat
mov
mov
mov
jbe
add
pushf
jmp
ss
lcall
mov
jg
pop
sarl
fstps
jecxz
insb
sbb
fisubs
sub
add
dec
cmp
mov
rcll
dec
js
in
and
jg
mov
cmp
cmp
out
icebp
sarb
std
das
and
movsb
mov
adc
fs
dec
cmpsb
imul
fsubl
sbb
shrl
movsl
aas
pop
pop
roll
mov
jae
cld
sbb
cmpsl
dec
orl
test
mov
leave
sti
daa
mov
sbb
es
negb
test
pop
das
stc
data16
jo
add
in
lods
adc
adc
mov
sub
das
shrl
cwtl
sbb
inc
aam
loopne
mov
rcr
or
cwtl
jge
mov
push
jb
or
imul
repz
push
cmp
add
orb
iret
push
sub
fwait
stc
fsubrs
int
pop
or
add
xor
inc
push
into
jmp
push
gs
ret
mov
cmc
sbb
out
std
fs
mov
nop
push
outsb
jp
pop
lcall
cwtl
sbb
rolb
mov
dec
dec
mov
xchg
jno
mov
mov
aad
loop
add
or
lds
lret
jns
stc
cmpsb
ja
test
mov
mov
out
pusha
mov
insl
mov
jle
mov
das
adc
jmp
mov
jns
push
or
mov
mov
in
cmp
sub
inc
xor
mov
leave
out
rol
mov
inc
jo
jbe
mov
imul
mov
push
sub
add
fildll
mov
aas
popa
sbb
and
xorl
or
pop
xchg
leave
dec
sbb
test
xchg
lea
and
fsub
ljmp
and
cmp
push
pop
cs
cmpsl
sbb
aaa
push
stos
push
cmc
imul
xchg
or
shll
inc
add
pop
add
or
mov
inc
sub
sub
imulb
cmpsb
int3
sbb
mov
pop
pop
sub
test
test
mov
sbb
leave
popa
jl
add
push
clc
fdivr
mov
ja
xchg
fists
inc
mov
push
lods
ss
adc
add
insl
add
xchg
and
xor
aaa
subb
int
mov
out
mov
cmp
xor
dec
insl
add
jns
dec
push
frstor
sbb
jg
jg
imull
icebp
pusha
push
std
into
jno
aas
add
repz
sbb
jge
push
dec
mov
lret
in
ds
jb
and
ret
pop
xor
iret
lea
adc
loope
mov
adc
test
mov
inc
jnp
xchg
dec
push
std
sarb
fisttpll
inc
clc
pop
xlat
loop
mov
cs
out
das
ja
add
pusha
inc
or
in
dec
xor
lahf
jb
lea
adc
sbb
je
shlb
in
cmc
test
lret
sub
mov
sub
fdivrs
outsb
cmp
movb
mov
mov
aad
shlb
repnz
adc
xor
inc
mov
out
popf
fwait
push
sbb
mov
mov
cmp
jo
ret
pusha
cmpsl
scas
leave
sbb
dec
dec
sub
and
lret
xchg
stc
mov
jge
push
clc
mov
push
jmp
jne
fwait
lret
mov
or
dec
xchg
pop
pushf
mov
in
add
push
add
in
add
stos
or
inc
jne
ljmp
adc
sbb
pop
jg
cwtl
jmp
icebp
sbb
daa
push
or
cmp
push
cwtl
dec
andl
add
test
push
mov
lcall
fildll
dec
fwait
je
push
lret
sub
mov
mov
jb
dec
push
cmpl
fistps
dec
push
xor
add
pop
push
cmc
xchg
jb
sub
cwtl
xor
mov
ss
std
and
loope
xor
and
scas
adc
mov
adc
xchg
insb
aad
fs
fstps
cmovne
call
int3
xor
sub
cmp
push
sbb
mov
orl
pop
sbb
fs
bound
lcall
xor
ja
aad
mov
fwait
mov
out
cld
fnstcw
cmpsb
dec
icebp
cltd
fdivl
xlat
push
mov
hlt
inc
test
inc
cmp
jo
icebp
andl
stos
cmp
push
jb
cmp
mov
les
ljmp
adc
push
adc
push
rcl
adc
sarl
inc
insb
mov
jp
adc
pop
mov
das
addb
pusha
mov
clc
inc
add
btc
sub
ljmp
lock
call
dec
cmpsb
push
cmpsl
inc
pop
xchg
sbb
jmp
push
or
jmp
iret
xchg
add
inc
in
push
adc
mov
aaa
aam
mov
and
in
ljmp
sbbb
fidivs
es
sub
cs
rcr
pushf
mov
movsb
xlat
cmp
stos
add
test
mov
cmp
push
notb
and
cpuid
mov
lds
scas
hlt
mov
imul
popa
lret
cltd
fldcw
movsl
cmp
sub
add
nop
or
dec
mov
addl
and
xor
adc
xchg
pushl
jp
stos
sti
test
dec
jne
lods
popl
lea
stos
scas
mov
aas
mov
jb
loop
repz
xor
movsb
je
xor
les
pop
and
mov
sub
popa
mov
fnstsw
imul
lret
ds
daa
enter
and
repnz
mov
mov
jns
or
jmp
cmpsl
cmpsl
sub
popa
push
mull
pop
push
push
pop
mov
lcall
pop
mov
xor
ret
mov
int
mov
pushf
push
int
fucomip
jp
pop
pop
adc
jmp
pop
mov
inc
push
imul
push
pop
jo
xor
cs
pop
mov
cmpsl
mov
mov
lods
inc
xor
sbb
fs
sub
dec
mov
and
imul
es
push
push
cltd
adc
ja
in
cs
sbb
xchg
sub
pop
ror
cmp
mov
xchg
fstp
cmpsb
fwait
add
sub
mov
pop
push
inc
xchg
push
pop
enter
in
sub
cmp
test
jmp
insb
rcpps
jns
cmpsl
dec
mov
cli
pop
pop
std
fdivl
dec
jnp
pop
nop
mov
lret
mov
push
icebp
xor
sub
test
ja
fisttpl
mov
cli
jge
xchg
jmp
sub
and
jne
rcrl
jno
cmpsl
xchg
out
js
lods
lret
adc
inc
in
std
dec
add
es
cmpsb
into
cmovne
jbe
and
int
lock
shll
adc
push
fsubs
jecxz
repnz
fwait
cmpsb
data16
pop
xor
pop
daa
cmp
mov
in
int3
lret
cmp
xor
scas
mov
mov
std
cmp
fcoms
push
fdivp
aaa
xchg
loopne
push
cmp
imul
mov
popf
es
fsubrs
insb
lret
sub
pushf
xor
lds
test
imul
xchg
mov
xor
jmp
stc
loope
lret
and
push
push
xchg
lea
jno
add
cli
ljmp
into
lret
notb
pop
mov
cmp
xchg
andnps
in
ja
jg
jg
shrb
mov
outsb
xchg
lods
pop
cmc
ja
insb
push
pop
push
ds
sub
jbe
push
mov
adc
cmc
adc
jg
ret
clc
scas
xor
lret
out
pop
push
push
inc
sub
pop
ret
jl
pop
mov
icebp
mov
sub
sti
imul
jge
bound
and
mov
fsubrl
ss
pop
imul
pusha
mov
mov
cmp
fistl
add
or
stos
xor
bound
cmp
xchg
nop
clc
inc
mov
movsb
mov
mov
imul
jecxz
jo
xchg
jb
in
lahf
lods
mov
bound
jecxz
and
pop
adcl
xor
pop
xor
dec
adc
push
gs
mov
sbb
xchg
lock
imul
iret
and
test
loop
lods
stos
ja
cs
push
cmpsl
inc
adc
repz
push
mov
jmp
gs
sbb
jmp
sub
fucomp
rolb
and
lods
pop
jns
dec
and
ds
sahf
push
xor
push
sbb
xorb
addl
jmp
jno
testb
sub
icebp
xchg
fdivl
lahf
shl
and
sarl
sub
in
mov
pusha
inc
out
push
push
pop
push
je
mov
enter
xchg
xchg
push
lods
mov
rol
in
test
jno
ss
push
jae
dec
idivb
mov
adc
sub
addr16
jl
rolb
pop
arpl
xlat
in
cmp
pop
push
pop
jl
in
sti
mov
das
cmp
mov
stos
aaa
lahf
lret
mov
rcr
or
xchg
mov
xor
mov
lret
imul
mov
jge
shr
jne
arpl
inc
pushf
aam
popa
or
in
das
repnz
mov
jmp
out
add
cmp
dec
repnz
xlat
aas
and
lea
pushf
sub
cmp
xchg
mov
mov
test
ror
imull
pusha
out
and
cmpsb
dec
mov
push
dec
mov
adc
test
adc
enter
jge
jo
movsl
js
data16
cmovnp
repz
inc
int3
xchg
push
jns
xchg
gs
sub
addr16
popf
sub
cmp
out
jo
sub
mov
adc
dec
mov
sub
movsl
loop
out
insb
cltd
cmp
out
fucomp
cmp
sahf
clc
or
and
outsb
aam
in
xchg
aaa
cmc
xchg
fists
sbb
or
xor
pop
lcall
jae
lds
stc
sub
xlat
arpl
sbb
pop
pop
sub
insb
add
xchg
lea
xor
aad
hlt
xlat
xor
mov
jno
lahf
adc
xor
outsl
cmp
jo
dec
mov
jg
daa
sub
lcall
lret
repnz
cmp
icebp
movsb
testl
jo
xchg
pusha
mov
jbe
jo
mov
sbb
lret
out
push
std
testl
ret
mov
mov
insb
lcall
mov
mov
imul
rcrb
inc
mov
xchg
mov
add
divl
in
sbb
sub
cmpl
sbb
loopne
out
inc
fwait
mov
jns
mov
push
es
add
push
sub
fcoms
jge
ljmp
xchg
pop
pop
sbb
adc
jbe
mov
pop
adc
dec
push
or
pop
dec
rorb
dec
pop
adc
dec
cs
fs
sbb
loopne
cld
in
fcmovnbe
fsubrl
sub
mov
sbb
add
neg
cwtl
cmp
mov
stos
pop
jecxz
andl
inc
mov
outsb
popa
in
fcoms
movsb
mov
mov
and
and
xlat
mov
xor
nop
and
cmp
lret
addb
js
fstpt
mov
jns
fmulp
imul
sahf
icebp
cltd
popa
or
scas
aaa
dec
pop
test
daa
jnp
popl
pop
into
cmp
dec
das
imul
jns
rorb
sub
pop
sub
shl
mov
jge
loope
testl
gs
imul
insl
push
jns
mov
xchg
sbb
aam
add
jae
arpl
xor
mov
lods
es
data16
and
and
aaa
xor
jns
into
stos
addr16
aaa
imul
mov
ljmp
pop
jbe
xchg
dec
pop
repz
xchg
jge
insb
mov
fiaddl
cmp
add
mov
and
das
add
pop
lcall
gs
mov
lret
insb
out
int3
out
inc
mov
dec
inc
cmp
dec
test
movsb
mov
out
or
mov
andb
hlt
cmpsl
push
test
aad
xchg
push
fwait
mov
addl
stc
and
xor
ja
faddl
mov
call
sbb
nop
jnp
sti
mov
push
cmc
jne
dec
movsb
push
jle
movhps
in
dec
sub
sbb
movsl
adc
or
fisubs
into
or
add
xor
aas
inc
fcoml
pop
jae
in
pop
cmc
ret
jne
mov
mov
inc
and
lahf
mov
test
ss
or
cmp
fistpl
lcall
add
dec
pop
jns
aaa
lret
dec
or
test
mov
push
jle
pop
sub
xor
cmp
in
stc
or
and
jge
out
mov
lods
push
daa
pop
out
mov
pop
arpl
arpl
xchg
or
ljmp
mov
or
cwtl
jns
jo
cmpsl
push
dec
xor
push
popf
cmp
or
add
sti
ljmp
adc
push
fimuls
pop
ret
mov
xor
pavgw
adc
mov
repz
xor
sub
or
adc
fucomp
push
push
pop
xor
and
sbb
push
fistpl
add
jmp
sub
andl
stc
add
rolb
int3
or
cmc
out
dec
sub
xlat
nop
cwtl
cmp
outsb
scas
dec
mov
out
nop
jno
test
mov
cltd
fidivrs
vmovq
pusha
fdivp
lds
cmpsl
sub
movsl
sub
mov
pop
shrb
das
into
dec
es
or
mov
and
jg
into
out
mov
cmp
cmp
cltd
or
ret
inc
out
dec
jne
push
jmp
mov
gs
push
or
add
mov
and
xor
inc
sbb
pop
xchg
jp
lcall
int3
mov
clc
pop
jns
mov
cli
mov
xchg
jge
in
cld
mov
popf
cmpsb
cs
sbb
jmp
pop
out
popf
and
ljmp
xchg
jo
adc
lds
loop
xchg
inc
dec
inc
ljmp
jle
mov
mov
xor
sbb
push
lods
ret
outsl
imul
mov
in
xor
aaa
in
adc
ret
loope
imul
push
mov
lahf
push
mov
cmp
in
push
data16
jmp
jmp
jae
mov
cli
push
sbb
test
or
xchg
push
mov
shrb
ds
jmp
stos
into
inc
repz
pop
xchg
adc
cmp
pop
mov
dec
and
inc
pop
pop
faddl
mul
loope
xchg
pop
jbe
lcall
xor
stos
dec
push
mov
adc
adc
adc
push
cltd
clc
sub
mov
and
out
cmp
pop
cld
xchg
aaa
nop
pop
test
repz
xchg
fnstcw
sahf
ljmp
or
mov
jo
xchg
dec
bound
pop
dec
pusha
mov
ret
cld
test
or
pop
movsb
mov
sbb
adc
fs
rcr
fdivrp
imul
jecxz
rcrb
jge
jae
fildll
xchg
push
mov
pushf
js
rcl
jecxz
mov
pop
stos
ror
sbbb
aad
inc
mov
std
in
sbb
inc
jl
xchg
sub
std
mov
ljmp
push
xchg
sbb
dec
sub
int
inc
ss
aad
sbb
std
pop
setbe
imul
jmp
jo
daa
fnstsw
sahf
rcr
add
mov
xor
ja
lcall
lds
sarl
mov
pop
jne
insl
or
addr16
jnp
mov
mov
xor
hlt
xchg
int
xchg
divl
popf
fnstsw
dec
repz
lds
sub
imul
cmp
imul
or
mov
inc
shl
int3
xor
test
leave
mov
mov
or
test
sub
add
sbb
jns
mov
cwtl
or
sbb
adc
jns
xchg
rorl
aaa
data16
je
int
popf
sbb
imul
idivl
jne
sbb
int3
shlb
adc
lahf
and
rcrl
mov
ret
mov
lea
imul
popf
ss
xchg
movsl
pop
imul
mov
xor
sbb
push
test
test
mov
fisubrs
sub
sub
sub
pop
push
or
orb
int
js
pop
int3
push
dec
stos
cmpb
out
lcall
pop
inc
or
leave
xchg
lret
add
es
jg
mov
cmp
xchg
xchg
test
xlat
and
sarl
mov
in
cmp
push
inc
daa
aad
jp
shlb
scas
mov
pusha
pop
out
hlt
and
jge
hlt
pop
fisttpll
fldl
int3
lds
ds
fwait
xor
ficompl
and
cmpsb
mov
push
test
and
push
repnz
fmull
mov
push
xor
adc
test
sbb
flds
notb
jg
mov
dec
push
adc
cmpsl
and
mull
sarl
mov
mov
ret
or
pop
jbe
sbb
xchg
jg
movsb
or
xchg
out
test
mov
lock
shlb
inc
jg
inc
iret
add
adc
xchg
xchg
cmp
jno
lcall
cmpsb
rorl
pusha
add
and
mov
mov
rcrb
imul
inc
in
mov
adc
dec
jbe
pushf
aas
std
neg
cmc
cltd
jmp
jbe
popf
jo
jmp
ss
pushf
shl
lret
cmp
mov
push
add
lret
out
mov
sbb
xchg
out
gs
int3
sbb
fsubrs
repnz
aas
test
jl
filds
jl
mov
xlat
sti
imul
dec
iret
ljmp
add
incl
mov
add
push
dec
mov
cld
pop
xchg
or
pop
pushf
pop
xchg
pop
pop
es
mov
mov
cmpsl
ret
mov
dec
sbb
fldt
mov
das
imul
jle
loop
or
mov
add
fcom
jmp
jmp
mov
sbb
xor
xlat
stc
mov
sub
jg
sbbb
jne
adc
adc
jmp
mov
inc
jecxz
pop
mov
sub
stos
push
mov
idivl
or
add
fistl
jp
fists
mov
js
and
xchg
mov
jne
xor
mov
xchg
jmp
fwait
add
pusha
stc
fiadds
push
cmc
data16
movsl
dec
jo
repz
ret
jecxz
in
icebp
inc
xchg
adc
fdivrs
xor
jno
xchg
cwtl
dec
inc
mov
js
cmp
lret
mov
scas
in
pusha
int3
daa
or
fldcw
inc
rcrl
inc
outsb
pop
or
mov
js
mov
pop
sbb
repnz
sub
jmp
mov
repnz
cmp
sbb
gs
testb
cmp
jo
sub
dec
sti
int
dec
into
dec
pop
push
xchg
addl
mov
aam
mov
sub
jno
cwtl
lds
push
int
xor
jmp
dec
or
push
aad
fdivrl
lods
push
mov
adc
inc
lea
pop
mov
pop
pushf
push
adcb
jae
pop
mov
scas
shl
inc
sbb
dec
dec
xlat
mov
imul
loop
push
xorb
rorb
jb
xlat
inc
add
mov
adc
lcall
inc
and
adc
not
xor
int
in
inc
mov
pop
sub
xchg
es
pop
lods
pop
inc
sarl
cmp
push
cmp
inc
xlat
xor
mov
enter
cmc
adc
popf
xchg
push
in
lcall
and
sub
les
ja
in
outsb
clc
mov
arpl
pop
sbb
insb
jmp
and
call
mov
jp
jo
cmp
inc
jae
in
insb
scas
lret
aas
les
push
adc
popf
in
inc
or
push
push
jg
pop
xchg
dec
jno
adc
inc
pop
sub
dec
rclb
mov
loop
mov
outsb
cmp
lea
aas
adc
lds
into
repz
xor
rcrb
mov
xlat
lret
push
push
sbb
inc
loopne
ret
sub
add
dec
inc
lock
hlt
sbbl
test
fs
push
sub
and
mov
sbb
dec
loop
fcompl
loopne
pop
sbb
clc
scas
push
int
pushf
inc
rcrl
outsb
scas
push
dec
dec
or
cmpl
mov
adc
test
xchg
dec
jp
sbb
mov
mov
in
and
push
insb
int3
mov
cmp
and
mov
mov
loop
addr16
jns
imul
push
out
repnz
pop
int3
dec
or
jg
aam
fisttpll
fwait
test
sub
xchg
aas
inc
push
ret
dec
testl
dec
push
adc
xchg
aaa
mov
clc
adc
pop
cwtl
xor
cmpsl
int
pop
push
pop
dec
or
clts
xchg
mov
or
stos
outsb
aaa
pop
dec
pop
jns
push
mov
jns
mov
push
jo
int
movsb
outsb
sbb
jg
flds
pop
fs
out
shlb
nop
sbb
popa
inc
daa
cmp
arpl
push
outsl
aam
cmpsb
lret
mov
addr16
ret
mov
out
dec
movsb
jb
in
lcall
rol
negl
mov
bound
cs
leave
and
rorl
iret
cltd
xchg
stos
andb
push
outsb
pushf
lahf
push
gs
test
push
push
insb
cltd
fistpl
out
arpl
ljmp
mov
movsb
pop
push
adc
aad
pop
mov
sahf
and
rorl
daa
scas
std
fisubrs
or
sbb
jno
popa
int
in
xor
push
cltd
int
daa
fnstsw
cmp
add
nop
es
sbb
or
fstl
lea
push
xchg
mov
andb
xor
rorb
sar
shll
pop
imul
adc
or
aaa
ret
push
jp
xchg
push
bound
fmull
jmp
call
nop
and
push
cmp
dec
fs
and
icebp
fidivs
add
jbe
xchg
insl
arpl
and
popa
or
push
add
movsl
fsts
cmc
fnstenv
cmpsl
hlt
or
lds
jns
jl
push
mov
mov
add
xchg
test
orl
lock
in
repz
test
clc
ret
mov
mov
pushf
xchg
out
ss
in
aas
mov
push
in
ret
stc
add
daa
mov
adc
mov
jbe
pop
stc
push
cmp
add
sti
add
jl
syscall
push
push
mov
push
shl
push
sub
cmp
jae
repz
repnz
push
inc
pop
popf
fcompl
mov
test
mov
and
imul
test
pop
cmp
fwait
xchg
jecxz,pn
pop
into
jl
jge
enter
mov
xor
xchg
pop
jnp
jmp
cmp
fcom
aam
xchg
test
push
pop
popf
adc
fs
inc
push
dec
lret
lds
cmp
pop
push
aad
hlt
sbb
cld
mov
push
cli
push
push
gs
dec
pusha
daa
stos
in
fisubl
loope
xor
pusha
lahf
test
or
or
xor
ss
and
push
mov
pop
jmp
xchg
sbb
and
test
xchg
mov
sahf
mov
jb
adc
in
sbb
popa
push
fisubrs
or
out
clc
sbb
mov
cld
sbb
dec
es
xlat
lds
sbb
aam
mov
xor
jecxz
dec
loope
xlat
xchg
jo
hlt
dec
push
inc
pushf
movsl
sub
adc
iret
ret
test
jno
in
mov
enter
insb
fs
popf
sub
mov
enter
outsl
movsb
pop
loope
or
cmp
rclb
nop
cmp
adc
xorb
sub
pop
adc
add
cmp
mov
in
imul
mov
mov
and
pushf
outsl
pushf
arpl
aaa
out
push
fsubs
icebp
mov
sahf
cmp
inc
jae
aad
push
sub
xchg
movsl
outsb
fimull
popf
lods
es
mov
mov
ret
push
pop
enter
je
fisubrl
out
psllq
or
xchg
or
es
arpl
mov
inc
push
cmp
lods
mov
or
mov
mov
jnp
inc
pop
push
push
cmpsb
test
cmpsb
sbb
xchg
jne
inc
mov
cs
mov
fldt
sub
xchg
add
mov
dec
and
ljmp
sub
ret
jbe
clts
fcoml
ljmp
cmp
in
cmpsb
pop
negb
push
out
pop
bound
mov
fstpt
add
mov
sub
sahf
cli
mov
mov
add
pop
movsb
pop
movb
aas
repnz
imul
cwtl
push
pop
push
test
fdivrl
adc
dec
stc
mov
ss
aaa
loop
xor
pop
test
arpl
or
ja
dec
test
sub
lcall
xor
xor
push
fstl
incl
imul
addb
mov
cmp
cmp
loope
dec
les
xor
or
sbb
test
xchg
repz
jmp
int
mov
movsb
pop
cmpsl
fcoms
arpl
int
mov
mov
dec
xchg
lcall
jno
pop
cwtl
gs
mov
pop
cmp
mov
xor
and
imul
dec
and
jg
popf
push
jp
outsl
dec
adc
inc
sbb
pop
cmp
adc
mov
push
mov
inc
cli
dec
and
add
mov
xchg
imul
daa
mov
sbb
xchg
mov
and
rcrb
mov
cmp
out
int
or
and
inc
mov
and
test
jmp
ret
shrl
jecxz
pop
and
lods
test
rol
ret
xchg
sub
xchg
dec
in
sub
pop
lret
push
pop
jle
cmpsl
mov
sub
jbe
jne
subl
fcompl
push
or
enter
push
insb
and
dec
mov
aaa
mov
fistl
insb
cmp
push
nop
sbb
mov
test
int
popl
dec
xorl
sbb
xchg
and
in
lret
adc
dec
xchg
inc
sub
mov
sub
adc
shll
xchg
insl
pop
fnsave
rorl
les
sub
dec
in
mov
xor
mov
lret
xchg
ss
jo
fdivrl
je
fs
imul
inc
out
xor
inc
lods
mov
rcll
fistpl
mov
lods
jnp
sarl
clc
scas
xor
sub
fidivs
inc
mov
push
pop
add
ljmp
in
lret
cli
fdivrl
xchg
jp,pt
inc
sub
leave
in
out
nop
add
jo
xchg
and
dec
cld
inc
jae
ficoml
dec
jno
and
insb
ja
push
mov
mov
adc
std
push
and
in
std
add
push
pop
daa
test
lods
cltd
aaa
pop
loop
call
fistpl
mov
scas
jns
mov
dec
jo
xchg
push
shll
aas
lret
sub
jl
xor
push
dec
test
out
rcrb
mov
lahf
movsl
ss
and
add
inc
xchg
sbb
popf
mov
iret
mov
bound
adc
push
mov
loopne
cmp
ss
xchg
jle
push
fs
lea
mov
sbb
pop
dec
or
and
aas
jp
xor
or
cmp
mov
je
mov
jmp
sub
in
pop
mov
xchg
andl
dec
outsb
lahf
adc
and
imul
ret
lock
mov
ds
mov
rcll
arpl
pop
adc
mov
movsl
push
mov
sub
lea
inc
xor
sub
pop
mov
insb
sub
aad
xchg
mov
push
repnz
xchg
xchg
push
and
dec
pop
and
in
xchg
xchg
xor
enter
lret
mov
adc
push
out
sub
mov
sub
sbb
dec
mov
mov
mov
lret
aad
pop
jecxz
pop
xchg
stos
and
lods
ja
incb
mov
das
dec
and
fwait
movsb
loop
dec
mov
mov
je
daa
sub
rclb
sub
add
jl
sub
pushf
stos
adc
push
mov
pop
jo
xor
dec
sbb
test
je
pushf
xor
pushf
test
das
scas
push
xor
ljmp
pop
imul
xor
test
cmpb
out
pop
mov
lods
lahf
push
dec
aas
ja
cmp
mov
insl
xchg
pop
pop
out
sbb
lods
cmp
xchg
push
in
push
ret
pusha
pop
pop
js
rorb
jle
push
loop
mov
out
lods
gs
or
shlb
ljmp
pop
in
add
cmp
jg,pt
sbb
or
jb
or
push
push
les
aad
mov
daa
xchg
sbb
inc
cli
outsl
aaa
lock
nop
out
mov
insl
pop
or
sahf
mov
mov
stos
lds
lahf
push
shrb
fcoml
sbb
mov
mov
or
aam
loop
scas
push
mov
dec
xor
cmp
jno
hlt
jnp
xor
push
jge
mov
loopne
push
cli
icebp
xor
aaa
test
mov
test
je
add
xchg
test
mov
jo
jmp
pop
ror
adc
pop
xchg
mov
pop
inc
imul
mov
mov
rol
arpl
inc
xchg
dec
push
push
fiadds
cmp
inc
in
xlat
insl
loopne
ja
or
lds
data16
xchg
dec
addr16
adc
mov
mov
inc
pop
dec
sarl
in
push
or
cmp
mov
inc
lcall
xchg
push
lret
jns
jns
xor
lea
mov
lods
push
jmp
hlt
xchg
dec
adc
enter
call
xor
loope
loopne
mov
lods
dec
cmpsl
fs
icebp
imul
mov
inc
pop
jecxz
adc
inc
shlb
dec
push
daa
inc
addr16
loope
insl
fimull
lahf
push
lods
shlb
sbb
adc
push
jo,pt
das
xchg
cltd
and
sbb
xchg
in
xor
mov
mov
jecxz
xchg
jb
daa
jo
adc
cld
lds
xor
fnstcw
lahf
arpl
and
mov
xor
jnp
jmp
stos
pop
xchg
jo
and
inc
aad
jl
or
fistps
lcall
xchg
cmpsl
imul
mov
xor
mov
out
jp
std
lods
in
movsl
jb
cmp
inc
aad
mov
pop
aas
in
jle
pop
aas
add
jmp
fisttpl
push
adc
mov
mov
add
sbb
out
adc
mov
nop
mov
xor
mov
je
movsb
mov
push
mov
test
hlt
lcall
insb
shrl
aaa
xchg
dec
xchg
xchg
jo
dec
or
sbb
cmpsl
mov
cmp
push
insb
test
mov
sub
xor
lock
mov
adcl
push
cmp
test
aam
lods
inc
push
div
movsl
ret
inc
xor
jg
out
adc
xchg
pop
clc
xchg
lods
fisttps
test
out
and
test
js
inc
clc
gs
sbb
xor
inc
push
mov
and
imul
push
loope
xchg
or
out
dec
push
movsb
popf
arpl
test
push
dec
imul
divl
push
or
imul
shlb
arpl
cmpb
shll
add
arpl
icebp
loop
out
fsts
xlat
and
data16
and
out
fimuls
xchg
jno
stc
mov
ret
pop
push
cmp
jg
mov
divl
lahf
mov
stos
hlt
cmc
int3
xchg
into
mov
inc
movb
iret
mov
sbb
out
pop
jg
and
mov
mov
dec
mov
xchg
push
negl
scas
jo
xor
sub
fs
add
insl
jb
mov
clc
sbb
ret
roll
ja
inc
inc
dec
add
in
clc
mov
inc
fs
je
loop
test
sti
jle
repnz
adc
imul
loopne
cs
mov
testl
test
bound
dec
inc
rorb
mov
pushf
loopne
out
push
jnp
lahf
mov
shlb
ret
mov
mov
ss
shll
and
lahf
mov
or
lods
pop
push
scas
add
and
jb
in
les
hlt
pop
dec
or
in
jno
adc
in
pop
cwtl
out
or
push
les
jb
adc
lahf
xor
js
jae
movsl
inc
lds
dec
push
xchg
push
arpl
inc
jle
sbb
mov
inc
mov
xchg
mov
mov
xchg
pop
mov
cmc
mov
fnstsw
lds
xor
sti
pop
lret
adc
adc
xchg
popa
mov
loop
pop
jo
ret
cmp
mov
jp
mov
xor
loopne
ds
test
xor
ljmp
cmp
insl
or
mov
xor
sarb
aad
xchg
daa
or
lea
add
data16
add
mov
gs
lcall
cmp
mov
jmp
and
inc
dec
rcll
and
pop
xchg
jge
add
and
insb
dec
adc
shrl
cmpb
sbb
in
ja
cmp
repz
in
enter
daa
test
mov
es
xor
xor
pushw
lods
iret
movsb
flds
cmp
cmp
fsub
sbb
repnz
ljmp
ja
push
mov
nop
ret
adc
jae
inc
inc
mov
sbb
mov
mov
mov
in
mov
xchg
insb
pop
mov
or
push
cmp
sbb
fidivrs
mov
popf
fisubrl
int3
adc
data16
sar
imul
sub
mov
add
int
arpl
adc
and
push
sbb
popf
and
mov
into
adc
cmp
jb
sbb
fisubl
mov
aam
rol
cmpsl
cmp
arpl
cs
mov
pop
xor
sbb
sahf
aam
pushf
add
inc
mov
fildl
mov
scas
pop
add
pop
xor
out
dec
adc
leave
push
adc
fisttpl
sub
inc
push
fcmovnbe
pop
mov
je
sbbb
mov
add
daa
pop
mov
adc
popa
cmp
jne
dec
lret
dec
inc
call
xchg
fdiv
in
xor
xchg
roll
fs
sub
sub
call
xchg
in
xchg
dec
inc
int3
cmp
sub
adc
out
push
pop
adc
fidivs
mov
mov
popf
mov
scas
dec
mov
add
movsb
sar
rorb
mov
js
xor
inc
mov
sub
push
mov
loop
fistl
xor
xchg
or
sub
or
insl
sbb
gs
cmp
pop
std
xor
push
xor
cmpb
jmp
xor
loope
iret
xchg
xchg
stos
int
push
jo
dec
push
loope
push
lods
es
mov
cmp
sbb
add
mov
cmpsl
mov
out
xor
sub
jns
imul
test
cmc
movsl
xchg
pop
icebp
fwait
dec
pop
into
imul
xor
push
mov
test
jo
fs
js
or
mov
out
dec
push
gs
pop
dec
shl
xchg
dec
jae
addr16
loopne
and
sahf
fiadds
cwtl
pushf
sbb
jne
repz
push
repz
jbe
mov
lods
aaa
adc
adc
xchg
mov
stos
mov
pop
insl
nop
mov
cltd
inc
cmp
in
cld
sub
shrl
fdivl
sbb
test
sub
mov
aaa
mov
testl
xchg
mov
ds
bound
or
jl
inc
inc
mov
add
xchg
out
or
dec
mov
pop
cmp
cli
orb
lock
and
inc
push
clc
sti
mov
pop
ficomps
add
and
insb
cmp
mov
xor
jmp
inc
shlb
mov
push
mov
sbb
inc
jno
aaa
or
push
adc
std
mov
fstpl
mov
pop
push
sbb
mov
arpl
movsl
inc
mov
sbb
and
lock
inc
cmp
cmp
pop
out
mov
enter
and
jecxz
lret
jecxz
hlt
xor
sub
sub
xchg
mov
add
push
setne
inc
scas
sti
insl
xor
fstpt
test
sbb
rolb
lock
lahf
add
push
xchg
enter
into
jecxz
xchg
sbb
pop
pop
es
cmp
jmp
stos
scas
xchg
push
dec
rolb
jmp
cmp
daa
dec
push
cmpsb
lcall
mov
push
cmp
jb
repnz
mov
xchg
jecxz
and
int
pop
cli
lret
int3
cmp
mov
fldl
pop
insl
pop
pop
sub
outsb
dec
push
and
test
icebp
cmc
mov
mov
xchg
sub
mov
mov
mov
sub
mov
hlt
xchg
or
ds
add
jne
jne
aaa
jmp
imulb
sahf
addl
loope
xchg
sub
call
and
int3
mov
fisubrs
pop
cmp
mov
into
xchg
icebp
pop
mov
cmp
lret
mulb
aaa
or
or
dec
or
test
nop
pop
ds
pop
mov
push
sub
jmp
jnp
enter
imul
jno
cmp
and
adc
xlat
jnp
xchg
pop
enter
scas
pop
popa
jmp
imul
push
push
les
push
bound
test
fisubl
cmp
ljmp
jns
xchg
xchg
mov
sub
aam
call
mov
sbb
mov
and
in
sbb
sbb
cltd
xchg
push
addr16
adc
fdivrl
sub
into
mov
call
pop
mov
jp
sbb
push
test
fnstenv
fwait
push
mov
jmp
sbb
arpl
sbb
sub
mov
and
push
dec
add
insl
and
addps
outsl
mov
pop
adc
sbb
xor
pop
pop
adc
sbb
test
inc
xchg
out
aad
push
sbb
enter
loopne
and
stc
lcall
fsubl
ja
repnz
enter
testl
push
add
mov
jl
push
or
test
stos
hlt
push
mov
mov
arpl
jmp
pop
push
xchg
out
jmp
jno
cmp
ds
push
daa
cmpsb
sub
dec
dec
adc
mov
push
outsl
xor
out
pop
pushf
jp
mov
adc
and
pop
cmp
sbb
sub
cli
cmp
idivb
mov
popa
dec
negb
lock
mov
test
mov
xchg
add
scas
and
mov
fsubr
xchg
dec
lret
repz
pop
pop
cmp
push
push
test
pusha
mov
mov
fldenv
imul
cwtl
es
mov
rcrl
mov
andb
push
mulb
inc
fidivrs
xchg
fbld
inc
notb
js
adc
lcall
pop
mov
shrb
add
imulb
push
negl
jl
inc
out
cli
dec
negl
or
cwtl
negb
sub
mov
mov
daa
xchg
push
cld
sub
dec
mov
stc
pop
adc
sub
push
inc
hlt
insl
sub
jnp
aas
mov
in
repnz
or
test
fsubr
stc
aaa
sahf
fildll
cmc
hlt
inc
pop
mov
std
jb
lret
sahf
in
dec
in
in
jle
inc
call
punpcklwd
pop
aad
jl
das
xor
adc
insl
xchg
cld
mov
repnz
jle
mov
aaa
repnz
fistps
ss
cli
mov
adc
fstl
xchg
lock
mov
fisubrs
add
xor
sbb
inc
jae
adc
mov
sub
sbb
mov
mov
addr16
adc
dec
sub
sbb
loopne
mov
stc
jle
andl
ja
stc
jl
aad
mov
cwtl
stos
stos
xchg
in
int
mov
fcoms
repz
inc
dec
call
push
xor
ret
adc
sub
sub
cs
into
cld
jmp
clc
cmp
pop
jbe
cltd
fisubrs
ss
jne
xchg
mov
decl
xor
dec
xchg
pop
and
loopne
cli
xchg
mov
jg
cmc
js
test
cmc
xor
xchg
stos
loopne
mov
movsl
push
or
lret
cld
mov
sub
pop
mov
xor
sbbl
jle
push
mov
mov
call
fstpt
add
cmp
fcmovnbe
imul
stos
and
sahf
pop
mulb
lahf
ljmp
and
jmp
mov
push
pop
aam
jg
aam
sti
inc
sbb
in
xor
sub
sub
mov
push
lret
push
std
dec
stc
sahf
mov
out
fistpll
outsl
scas
push
call
addr16
mov
bound
sar
xchg
mov
aas
dec
nop
cli
std
push
xchg
aad
test
call
jge
ret
and
inc
movsb
jae
jo
mov
sbb
mov
not
jb
and
ret
mov
jg
insl
lds
jns
mov
imulb
xor
mov
pop
mov
fisubrl
stc
sahf
mov
ror
shl
clc
push
push
push
fsubrs
xchg
sub
ds
mov
add
sbb
lret
jg
testb
xorb
int
icebp
inc
test
lock
shr
pop
pop
sar
jae
mov
dec
sub
repnz
subl
std
sub
cmp
shll
push
mov
mov
xchg
pop
xchg
outsb
lret
sar
ds
out
xor
cmc
mov
lods
sub
int3
aam
mov
mov
clc
sub
xor
ds
fisttps
mov
sbb
lea
out
lcall
mov
dec
jmp
aam
inc
lahf
inc
lret
mov
push
cmp
add
mov
pop
es
push
dec
std
pop
fcom
push
xchg
adc
or
xchg
data16
jno
inc
xchg
xor
dec
int3
aam
movsl
clc
mov
aam
lcall
mov
xor
dec
mov
loopne
fwait
sbb
and
popf
sti
dec
fwait
cwtl
jp
pop
pop
in
mov
pop
ret
lods
lahf
out
sub
mov
das
addr16
sbb
mov
aam
mov
outsl
jle
leave
iret
jns
or
add
repz
fsubs
cli
inc
sti
xor
stos
js
daa
mov
mov
sbb
lret
or
cli
aas
pop
lret
inc
mov
push
data16
shr
sub
cwtl
clc
out
jecxz
sbb
std
mov
aas
dec
or
xor
js
add
in
outsl
ds
std
lods
fcoml
and
test
inc
pop
mov
std
bound
jg
push
call
pushf
sbb
int
test
push
push
xchg
out
popf
rorl
dec
adc
les
test
incl
pop
in
jno
repz
mov
aad
push
inc
aaa
iret
or
jns
inc
loopne
ja
into
es
xchg
sahf
lds
loopne
ror
mov
jbe
push
pop
enter
and
stos
xchg
xchg
lret
push
lahf
loope
lea
mov
sahf
mov
ss
mov
js
mov
out
nop
std
xor
andb
mov
jg
outsb
sbb
pop
xlat
cld
stos
call
jl
and
jle
mov
jl
sub
stos
insl
movsb
cmpsb
adc
sar
icebp
jae
xor
in
adc
out
push
sbb
jmp
xchg
lret
pop
xchg
dec
mov
leave
and
adc
xor
inc
popa
aaa
xor
outsl
jb
pop
jbe
mov
push
filds
mov
mov
add
and
mov
mov
add
sub
mov
adc
mov
nop
das
jge
icebp
aas
pop
popa
stc
or
pop
sub
inc
ljmp
adc
cwtl
and
leave
bswap
shrl
ljmp
sbb
in
xor
dec
xchg
out
clc
jmp
dec
fdivs
stc
mov
push
cltd
mov
lret
pop
or
add
call
dec
hlt
xchg
data16
cmp
mov
jb
sarl
fcmovbe
xor
add
js
loop
push
jne
fistl
or
pop
mov
ss
jnp
push
pusha
in
xor
inc
cs
xchg
nop
push
mov
rcll
adc
test
mov
add
xchg
sub
inc
ret
pusha
adc
inc
add
fnstsw
fdivl
push
xor
mov
mov
inc
xor
jb
js
prefetcht2
add
pop
rorl
outsl
dec
xchg
call
jae
stos
xor
out
mov
dec
mov
dec
inc
jnp
push
rcrb
das
movsb
xchg
fcomps
jns
jb
cmp
lea
push
ds
bound
call
sbb
movsb
loop
dec
add
inc
loop
xchg
pop
add
test
imulb
push
jbe
cld
daa
jg
jno
cmc
imul
or
or
imul
mov
lret
stos
inc
data16
add
xor
loop
lcall
adc
pusha
mov
sbb
in
push
push
inc
xor
fs
and
lret
gs
jge
and
outsb
cmp
jno
mov
cmc
push
stos
mov
mov
sbb
jmp
rclb
ds
iret
push
mov
mov
xchg
push
xor
lods
loope
inc
lods
mov
je
mov
sub
cli
mov
fwait
jne
push
xlat
clc
icebp
sub
jmp
out
aad
repz
sbb
adc
push
inc
push
pop
ret
imul
pop
inc
es
cmpsl
stc
and
adc
dec
jne
imul
lea
add
sbb
or
outsl
push
scas
pusha
dec
repz
mov
push
xchg
lds
push
dec
pop
sub
xchg
test
aam
cmpsl
mov
push
push
or
xchg
inc
sti
add
add
sub
arpl
lods
dec
jns
aaa
pusha
lock
addr16
push
daa
inc
cmp
jo
ja
out
es
dec
pushf
adc
leave
or
data16
or
sub
jp
xlat
out
dec
dec
cmp
push
adc
jne
xchg
pop
mov
dec
daa
call
inc
sbbb
pop
add
es
divl
outsb
sbb
mov
sbb
mov
mov
call
mov
xchg
mov
in
fsts
gs
mov
loop
fsubs
cmp
push
or
xchg
mov
mov
adc
movsl
adc
pop
or
dec
and
pushf
out
pop
push
aad
rol
mov
repz
mov
jecxz
rol
in
hlt
mov
out
sarl
lods
addb
shl
lahf
xchg
rol
in
shrb
jecxz
stos
push
pop
insl
lcall
outsb
cmpsl
sbb
nop
jno
adc
dec
adc
lea
addr16
cmp
sbb
and
mov
jnp
xchg
aad
int3
lret
sti
sbb
and
cmp
mov
popf
loope
aad
outsl
sub
push
rcr
dec
mov
add
dec
push
cmc
push
xchg
xor
ret
xor
dec
shll
popf
or
lret
sahf
add
into
jnp
call
sbb
and
imul
leave
pop
lods
xchg
cmpsb
and
lds
sub
mov
js
out
mov
mov
imul
loop
ljmp
cli
loopne
popf
mov
outsb
lret
mov
and
loopne
lahf
fnstcw
popa
sbb
inc
insl
add
dec
pusha
pushf
pusha
xlat
aad
mov
ja
mov
loope
imul
je
fimull
out
out
mov
or
cmpsl
mov
rcr
enter
push
mov
in
and
ss
jl
repnz
xchg
jecxz
mov
in
aas
jnp
cmp
jmp
std
add
xchg
dec
movsl
aas
cmpsl
xor
xor
rcl
sti
pusha
push
ja
arpl
flds
mov
jnp
pop
adc
test
cmp
call
push
sub
mov
mov
and
xchg
pop
fs
jb
pop
adc
xor
mov
lods
xor
je
or
je
int
sub
jge
mull
push
addb
lret
clc
shl
inc
or
sbb
out
and
or
xor
fidivrs
xchg
ret
loopne
xchg
call
gs
stc
adcl
inc
cmp
pop
clc
sub
push
incl
jnp
movsl
inc
dec
stc
push
scas
mov
push
mov
lds
hlt
lods
cmpsb
push
cli
or
or
test
sbb
repnz
imul
jp
and
mov
push
adcl
lea
loop
sbb
test
xchg
fisttpl
mov
daa
pop
out
xchg
push
dec
popf
pop
sbb
repnz
pop
movsl
dec
movsl
addb
mov
mov
jl
rclb
daa
push
jmp
jecxz
fisttps
xchg
mov
sub
aas
push
cmp
lret
sub
adc
push
test
mov
dec
pop
push
cmp
incl
jp
js
sar
mov
dec
push
cmp
mov
call
iret
or
mov
pop
dec
call
rclb
mov
lods
loopne
out
or
test
jns
loope
or
inc
int3
call
jecxz
lret
cmc
out
hlt
ret
out
divb
iret
das
cs
fdivrs
sbb
adc
pop
cli
ret
or
jae
pusha
lahf
add
stos
cmpsl
or
insl
add
add
xor
or
pusha
xor
negl
clc
xchg
push
mov
and
add
add
pop
push
adc
push
call
popa
and
sub
and
jne
into
xor
test
lahf
imul
xchg
push
dec
lods
gs
cvtpi2ps
xchg
clc
pop
mov
dec
pushf
xchg
imul
xchg
dec
dec
add
mov
adc
mov
adc
in
xor
sarb
daa
mov
jp
leave
gs
xor
adc
mov
jecxz
mov
adc
pop
outsl
aaa
xlat
imul
sub
aad
es
or
cmp
cli
cmc
fildl
repnz
mov
sub
aam
sarb
sar
clc
cmp
rcl
xor
dec
sub
jno
les
js
sti
sbb
mov
lods
cltd
push
flds
sub
push
in
pop
movsb
sub
pop
out
jns,pt
push
ror
sub
scas
fsubrl
data16
pusha
shl
sbb
inc
pop
sbb
mov
sub
stos
out
mov
cmpsb
cmpsl
jl
jge
pop
scas
mov
ljmp
sbb
dec
or
sub
movsl
int3
jecxz
pop
jbe
mov
push
or
fsubrs
fs
jnp
sub
out
aaa
xchg
js
arpl
mov
push
adc
xor
nop
sub
ss
push
cmpsb
pop
std
inc
adc
shlb
insl
mov
add
lea
outsb
inc
lahf
lcall
ss
mov
fsts
push
mov
dec
out
or
or
xor
cmp
enter
jle
shll
and
out
in
subl
push
cs
iret
inc
mov
sbb
lods
gs
cmp
jne
sarb
or
insl
pop
mov
sbb
adc
xor
repz
mov
dec
adc
les
stos
scas
aaa
mov
test
sbb
into
pop
mov
mov
and
shl
int3
xchg
popf
mov
xchg
xor
loope
pop
mov
pop
pop
xchg
and
sub
jb
into
in
adc
test
stos
jnp
sbb
sub
aam
jmp
clc
dec
adc
xchg
dec
dec
in
pop
cli
fcmovnb
push
das
cmp
add
negb
inc
sbb
dec
lods
sbb
jnp
push
sti
hlt
das
out
enter
in
popa
pop
leave
and
in
mov
mov
xchg
cmc
test
jecxz
mov
and
cmp
xchg
scas
std
rol
int
ss
pop
into
repnz
imul
fucom
lahf
icebp
dec
cwtl
lods
mov
out
ja
fiadds
repnz
pop
and
dec
jp
out
xor
and
mov
pop
std
test
popf
loopne
jbe
mov
enter
mov
ss
inc
scas
inc
gs
decl
cmp
push
pop
or
pop
mov
stc
testl
or
or
cmp
mov
sub
xchg
fbstp
mov
cwtl
daa
sbb
mov
jbe
xor
cmp
clc
mov
dec
aam
or
push
sub
popf
mov
jg
in
mov
push
inc
scas
mov
ret
push
nop
rorl
icebp
push
adc
hlt
xchg
jns
in
push
aaa
arpl
loope
fsubr
cmp
jo
xchg
test
adc
mov
push
lret
mov
xlat
insb
cmp
arpl
dec
xchg
mov
sub
mov
mull
bnd
lret
int
inc
mov
cmp
repz
rcl
fucom
push
and
ja
inc
inc
pusha
adc
sbb
faddp
sbb
push
push
inc
push
les
xchg
xor
mov
and
mov
ja
repnz
add
test
fstpl
and
clc
lcall
xlat
outsb
adc
push
lcall
es
add
push
mov
bound
xor
xor
mov
addb
xorl
rorl
fimuls
push
mov
inc
test
jno
les
sub
jmp
mov
pop
dec
nop
sub
popf
jbe
push
loope
outsb
lret
loopne
and
pop
addr16
add
cwtl
sub
enter
mov
jecxz
mov
push
cmp
xchg
xchg
mov
mov
pop
inc
jp
fldenv
push
jmp
iret
fimull
dec
sbbl
xchg
xor
cli
pop
in
movsl
or
rolb
ss
decl
and
clc
data16
inc
das
fsubs
insl
cmp
jecxz
xlat
xchg
loope
push
andl
adc
movsb
repnz
mov
inc
mov
fcompl
xchg
int3
sub
daa
dec
cmp
cltd
sub
push
or
xchg
xchg
orl
fnstsw
cmp
rolb
jmp
jae
cli
shr
stc
das
adc
xchg
enter
jae
mov
test
xor
sti
rcrl
pop
loop
xchg
xorb
pop
cmp
sub
jl
push
mov
inc
faddp
cmp
pop
jmp
xor
outsb
call
sub
in
jmp
or
pop
add
jnp
add
mov
push
xor
cwtl
adc
cmp
lods
dec
jnp
leave
in
inc
jno
xchg
push
mov
or
dec
and
jb
out
dec
mov
xor
sbb
sbb
daa
stos
xor
aad
jbe
sub
or
jge
ret
sbb
popf
or
push
jb
add
into
cs
mov
insb
push
out
into
push
jmp
shl
dec
dec
push
fldenv
jle
xor
xor
gs
xor
jge
fsubs
xchg
inc
pop
test
daa
ss
orl
add
and
adc
push
cwtl
rcrb
adc
daa
cmp
xor
pop
dec
mov
mov
mov
mov
ja
sti
bound
mov
mov
mov
lcall
push
sbbl
ds
push
or
shr
popa
sub
sub
into
or
cmp
decb
xchg
pushf
mov
jle
push
stos
aaa
pop
lahf
dec
xor
jp
inc
lahf
push
push
and
xor
xlat
dec
mov
and
out
pop
push
clc
jnp
push
push
mov
movsb
push
mov
dec
inc
out
xor
pusha
mov
hlt
and
push
jns
jge
or
loope
or
aaa
pop
sub
pop
in
enter
nop
shlb
push
sarl
jmp
sbb
inc
sbbl
dec
test
hlt
xchg
mulb
mov
out
fcomps
test
rorl
outsb
jle
cmp
xchg
js
cmpsb
es
rcrl
or
dec
inc
ffreep
and
xor
xchg
push
cmp
sti
test
inc
xchg
xchg
orb
into
push
mov
divl
das
mov
add
dec
imul
add
addb
out
mov
popa
push
cwtl
and
dec
xor
sbbl
sbb
sti
dec
push
movsb
icebp
cmpsb
xor
inc
popf
daa
outsl
jmp
xchg
fisubl
sbb
popl
outsb
rcrl
push
push
cmp
insb
or
sub
jb
out
xchg
loope
mov
jo
pushl
hlt
xchg
aad
jbe
dec
stc
cwtl
xchg
mov
pop
es
jle
fs
imul
aad
mov
pusha
mov
imul
pop
ret
out
jae
push
je
xor
jae
fmul
orl
fsub
mov
mov
jl
imul
iret
scas
enter
lods
mov
pop
bound
lretw
sub
lods
loop
stc
cld
jo
xor
test
icebp
jnp
es
js
pop
shll
int
adc
aaa
adc
push
mov
jne
out
xor
mov
mov
pop
jecxz
jmp
in
shrl
jno,pt
jmp
in
or
popf
inc
mov
jns
in
lahf
sub
dec
inc
fdivs
movsl
stc
dec
xchg
xor
mov
jb
pop
outsl
push
sub
adc
out
enter
jp
pop
enter
xor
mov
aas
sbb
imul
subb
add
int
xchg
push
shr
pop
add
adc
pop
adc
add
push
icebp
inc
push
shrb
cltd
sub
cmp
out
arpl
rcll
fsubr
out
das
aas
mov
inc
div
sub
xchg
in
ret
sub
xor
sub
std
xchg
cmp
in
fxch
mov
dec
ds
xor
loope
push
dec
enter
pop
xor
loope
or
adcl
jmp
mov
inc
ja
insl
std
out
and
mov
dec
fiadds
popa
push
dec
mov
jnp
pushf
dec
test
cmp
jl
xor
or
ja
lret
or
push
inc
add
divb
push
or
stos
sub
inc
mov
int3
shld
inc
xchg
fidivl
xor
sub
xchg
sbb
mov
dec
rorb
mov
sbb
xor
fadd
pop
add
mov
lds
out
fsubr
fnstcw
sub
mov
mov
sbb
aad
jp
scas
push
dec
and
mov
jne
mov
jle
push
idivb
or
dec
mov
push
and
js
jo
ficompl
fwait
xchg
cmc
adc
push
pop
lret
outsb
cli
mov
xchg
sub
dec
dec
out
lahf
test
movsb
cmp
mov
sub
or
out
cli
pop
push
cltd
jo
jmp
rorl
mov
jp
sbb
enter
push
or
pop
push
push
pop
push
dec
push
jl
jge
sti
arpl
jno
mov
clc
xchg
or
mov
loopne
in
scas
addr16
jnp
pop
outsb
mov
lea
pushf
push
push
pop
dec
sub
pop
xor
scas
xor
inc
mov
pusha
cmp
dec
push
loop
leave
mov
mov
sbb
mov
imul
roll
cmp
mov
stos
sub
insl
or
insb
out
insb
fstpt
add
dec
mov
and
jecxz
fs
mov
lea
dec
mov
pop
ja
pop
daa
ss
push
lahf
dec
adc
dec
in
xchg
xchg
adc
insl
mov
xor
ret
push
xor
iret
mov
jmp
popa
mov
popa
pop
popf
lcall
pop
push
pop
mov
xchg
jae
test
divl
cld
inc
fwait
lcall
inc
xchg
xchg
icebp
mov
push
stc
stos
push
icebp
cmpsl
adc
pop
jge
xchg
push
jae
sahf
mov
out
mov
ds
and
fbld
roll
sub
inc
fwait
outsl
cmp
mov
and
addr16
mov
add
les
cmp
das
daa
xor
jne
imul
or
jno
xchg
mov
dec
bound
imul
pop
inc
add
call
push
orb
jno
call
adc
test
movb
add
push
jnp
cmp
outsb
mov
xchg
loop
cmp
sbb
inc
je
adc
fistpl
mov
aad
test
dec
ss
or
mov
std
push
mov
nop
pop
mov
sbb
call
xchg
dec
outsb
sub
xlat
jmp
ja
stos
jo
stos
inc
out
or
jp
pop
jp
cmp
jnp
mov
sbb
icebp
in
cmpb
cmp
sbb
xlat
xor
loopne
pop
inc
xchg
in
pop
inc
outsb
dec
repz
shl
inc
jns
insl
hlt
xchg
subb
mov
and
adc
je
sbb
and
mov
sbb
xor
jno
movl
js
jle
loope
fidivl
push
ret
mov
and
icebp
xor
fcmovnbe
ror
pop
sbb
leave
icebp
shrl
mov
inc
roll
jp
push
and
add
in
add
xlat
push
aaa
dec
cmp
sbb
fs
lods
push
jmp
jae
sahf
gs
or
aam
gs
test
shrb
or
sysret
add
mov
xor
or
movsb
sti
out
ja
mov
sti
xlat
in
pop
push
out
mov
mull
push
stos
pop
inc
shrl
fisttpl
int3
iret
and
out
inc
lahf
or
ljmp
fcmovb
dec
cmp
push
add
notb
mov
mov
aaa
test
mov
pop
aad
or
add
or
mov
dec
xchg
stos
or
inc
cmp
pop
push
rolb
rcr
add
aad
sbb
mul
test
push
ret
xchg
mov
lret
insb
aad
mov
mov
scas
mov
out
jge
fcoms
stos
dec
test
jno
inc
adc
jmp
out
sub
lret
xchg
mov
cmpsb
in
lea
and
adc
insb
push
jne
push
push
loope
push
repnz
bswap
push
or
mov
add
push
mov
push
in
inc
jne
rolb
stos
cwtl
scas
cli
sahf
iret
shlb
ret
cmp
push
aas
mov
add
out
and
xor
push
or
add
test
add
pop
pop
xchg
or
mov
sbb
cmp
movsb
in
or
ficompl
or
push
mov
aam
pop
mov
call
lcall
mov
or
lcall
xchg
sub
dec
sub
mov
sbb
push
sarb
stos
xor
sub
inc
jae
out
inc
push
outsb
xchg
add
mov
test
test
fwait
test
test
js
outsb
push
and
jbe
xchg
pop
dec
jmp
into
jns
or
fldt
std
in
xchg
dec
cmp
push
movsb
xor
dec
lret
testb
gs
cmpsb
rolb
dec
dec
pop
cwtl
jno
popf
aaa
jbe
mov
mov
xor
xchg
movsl
mov
test
jg
add
rcl
xlat
stc
cwtl
fmull
imul
out
dec
lahf
dec
loop
xor
insb
inc
jl
pop
pop
push
adc
or
mov
lret
test
incb
fisubl
mov
pop
mov
mov
sbb
pop
divl
add
aas
divb
inc
pop
or
inc
push
sbb
daa
cmp
cli
pushf
into
push
test
push
stos
mov
shlb
dec
jl
int3
in
aas
mov
ret
add
call
mov
faddl
mov
add
lahf
push
add
push
jns
in
jge
push
fs
pushf
and
iret
pop
mov
lahf
mov
loop
repz
jne
bound
rcrb
and
mov
jl
fwait
aam
sbb
mov
pop
test
jno
fildll
aaa
sbb
dec
inc
or
fwait
sbb
jg
aaa
iret
push
jne
xchg
into
rcrl
xchg
push
je
cmp
leave
dec
sbb
or
cmp
pop
inc
pop
sbbl
int3
cmp
lcall
push
in
faddl
xchg
mov
cmp
cmp
sub
cmp
lds
pop
jns
cmp
fisttpll
mov
dec
sub
and
loop
sbb
sub
mov
jns
notl
fsubrs
je
mov
sub
xor
in
add
int
imul
cs
pop
cmpl
mov
lock
push
ljmp
mov
fdiv
adc
insl
sbb
and
shlb
push
jno
and
mov
xor
dec
in
movsb
cmp
orb
lret
mov
movsw
data16
jecxz
mov
popf
loop
and
enter
lcall
pop
mov
jbe
jae
dec
das
xchg
sbb
jmp
sub
out
enter
movsl
scas
mov
mov
jns
mov
sti
icebp
add
push
jg
mov
out
cmp
cmp
enter
aad
je
rorl
call
xchg
add
incl
add
out
rcll
ret
xchg
out
mov
nop
pop
jp
fsubrs
mov
fistpl
fcmovnbe
das
mov
int3
jo
push
push
pusha
popf
inc
dec
cmp
xchg
pop
leave
incb
mov
pop
adc
or
pop
inc
lds
fsubp
inc
lds
jns
sbb
pop
das
pop
out
cmp
inc
push
mov
rcl
je
aam
pushf
int3
lret
cmc
hlt
mov
or
ret
dec
push
ja
mov
fisubs
enter
imul
mov
jge
scas
insl
pop
test
scas
andb
jae
mov
movntps
and
dec
sbb
add
jne
icebp
int3
sbb
mov
mov
jns
xchg
cmpsl
cmp
notb
imul
adc
and
cmc
and
js
in
xlat
xchg
mov
repnz
inc
repnz
ja
lret
les
out
xchg
jle,pn
in
xorl
lcall
and
pusha
mov
push
xor
jmp
fwait
pop
sbb
cmp
fisubl
mov
dec
inc
in
mov
in
ret
insl
cmp
je
pop
fdivp
and
cli
das
std
data16
mov
cli
fadds
xor
pop
into
adc
push
pop
dec
out
imul
ljmp
mov
jp
inc
or
andb
sub
or
mov
mov
pop
aad
push
pop
cmp
mov
fs
jge
fwait
test
movsb
call
xchg
pop
sbb
or
mov
in
ret
adc
daa
rorl
outsb
mov
test
mov
aam
cmc
mov
ficoml
fdivs
in
inc
les
or
add
ja
dec
adc
test
push
dec
das
jmp
imul
xor
mov
jge
iret
xor
incb
xorb
push
push
ja
outsl
xchg
adc
jg
daa
shrb
rcrb
or
pop
or
xchg
rol
push
fistl
xlat
pop
dec
repnz
mov
shl
loope
pop
pusha
push
cltd
lret
jnp
jmp
mov
nop
xchg
dec
adc
xorl
aas
adc
dec
push
jge
lock
mov
stos
insl
cmp
stos
adcl
sub
jecxz
add
cmp
mov
idiv
push
stos
or
pop
jo
loopne
out
add
iret
test
ljmp
mov
les
pop
pop
lds
ja
pop
cmp
jns
cltd
into
imul
out
dec
mov
jns
xchg
push
call
sbb
xchg
fsubl
pop
add
shlb
ret
std
jl
in
or
notl
push
cmp
cli
icebp
jo
jp
xor
or
mov
lahf
arpl
cmp
inc
push
adc
mov
fnstenv
sub
jle
jg
sub
pop
sub
cmp
dec
push
dec
icebp
add
bound
sbb
mov
aas
inc
cmp
fisttps
cld
out
xor
inc
repnz
jg
call
jmp
jno
out
jle
or
nop
pushl
pop
addr16
jno
fisttps
sahf
scas
mov
test
lcall
out
sbb
or
lods
incb
test
loope
repnz
ljmp
mov
push
aas
adc
lds
and
sub
out
repnz
inc
mov
sbb
pop
xchg
dec
es
scas
int
adc
and
adc
daa
aad
hlt
jle
jns
pop
mov
xor
xor
cmp
lods
cmp
fildll
inc
xchg
pop
xor
jg
xchg
jbe
into
lret
fucomp
cmp
mov
pop
aaa
cmp
in
in
or
mov
repnz
pop
xor
cmp
stos
lea
andnps
pushf
adc
adc
pop
mov
add
movsb
incl
xchg
rorb
inc
scas
inc
mov
sub
pop
adc
stos
rorl
jl
addl
ret
or
in
cltd
add
popf
xor
aaa
mov
fldl
add
mov
and
sub
xchg
test
adc
xchg
jno
cmp
push
pushl
jnp
in
movsb
jnp
mov
mov
sti
imul
fadd
cmpsb
sbbb
push
add
add
daa
mov
mov
in
or
pop
mov
mov
xchg
int
and
or
adc
pop
loopne
adc
pop
ss
push
outsb
shl
hlt
mov
or
fsubr
or
adc
add
or
sub
popf
mov
xor
movsl
sbb
dec
nop
call
cmc
push
mov
test
add
cwtl
jge
mov
push
dec
ja
dec
fprem
xor
lcall
stos
fcomip
jle
sbb
imul
dec
fstpl
rcrb
aaa
int3
cmp
mov
imul
push
mov
xorl
movsl
ret
fcmovbe
cmc
shll
lock
add
dec
in
add
inc
adc
in
cmp
adc
repz
dec
cmp
xchg
in
insl
call
xlat
mov
push
popa
mov
prefetcht1
lods
sbb
or
cmpsb
adc
mov
lock
lods
mov
mov
mov
mov
fidivl
push
dec
int3
cs
rolb
mov
ljmp
in
test
ficompl
pop
std
dec
push
push
push
add
ss
push
lcall
cwtl
arpl
in
jno
fidivs
xchg
pushf
xor
add
out
bound
roll
fidivrl
push
jg
or
xchg
sub
dec
fwait
xlat
xchg
fcomip
cmp
mov
pop
sbb
daa
mov
or
push
pop
movsb
dec
nop
jae
test
jbe
andb
xchg
sahf
movsl
mov
push
popa
mov
stos
and
sahf
je
fs
rorl
inc
inc
adc
mov
jmp
fs
cmp
lret
lods
and
popf
pop
jns
lock
mov
xchg
adc
cmpsl
xchg
lcall
das
hlt
pop
pop
ss
dec
mov
mov
mov
xchg
pusha
cmc
cmpb
ss
sub
inc
std
scas
inc
push
adcl
test
and
icebp
pushf
mov
or
mov
test
or
aad
sbb
adc
aas
inc
je
in
ror
jno
test
in
pop
mov
cmp
add
dec
mov
sar
sub
xchg
loop
jns
adc
mov
add
insb
cs
lods
aaa
mov
xor
xchg
in
into
scas
fisubrs
idiv
daa
imul
xchg
icebp
mov
aaa
pop
xor
aam
dec
das
insl
xor
rol
mov
sbb
cmc
cmp
sub
ja
lods
arpl
gs
add
subb
callw
in
inc
test
adc
fldt
mov
add
into
leave
es
push
xchg
push
adc
inc
push
inc
sbb
ret
and
pop
and
sbb
sbb
data16
arpl
aad
mov
out
movsb
js
enter
loope
cmp
test
dec
cmp
push
iret
inc
negb
fwait
test
xlat
xchg
aas
pop
fcompl
mov
pop
jecxz
fldt
loopne
lahf
test
jb
push
add
mov
sahf
push
dec
jl
je
add
aas
test
insl
cmp
mov
repnz
in
mov
add
lea
test
scas
push
rcrb
in
dec
cmpsl
mov
xchg
dec
enter
pop
popf
dec
adc
jo
fldenv
cmpsl
lcall
popa
xchg
sub
push
ret
scas
or
daa
cmp
dec
das
stos
inc
jo
cmp
sbbb
or
leave
pop
call
and
sbb
movsb
insl
outsl
sbb
push
xchg
xlat
mov
stos
or
ds
dec
sarl
jnp
push
mov
cmp
ds
fimull
cs
mov
sbb
dec
ja
das
or
pushf
add
pop
inc
data16
dec
fstl
inc
nop
out
hlt
loop
mov
dec
add
and
push
imul
mov
dec
and
mov
cmp
sti
xor
in
insl
pop
mov
fs
add
adc
push
cld
sahf
in
std
outsb
lods
push
sysexit
pop
adc
and
lahf
sub
pushf
mov
lret
js
js
cmp
or
or
sbb
popf
mov
cmp
mov
cmp
xchg
and
pcmpeqw
mov
jecxz
mov
enter
movsl
mov
aaa
or
and
pop
sbb
fs
jle
and
std
add
in
adc
gs
or
lods
shrb
leave
pop
push
popa
jmp
rcrb
inc
xchg
adc
pop
sbbb
enter
xchg
and
jp
lcall
stos
mov
int
test
clc
pop
or
andb
gs
stos
xchg
lock
outsl
lcall
addb
daa
push
push
js
aam
adc
out
cld
dec
jo
pop
adc
jp
popa
ret
xchg
iret
ret
mov
in
jg
adc
imul
fmul
dec
mov
stc
inc
sub
imul
ret
jle
add
push
cwtl
push
shrl
jge
mov
dec
push
call
and
nopl
jae
adc
mov
sbb
int3
mov
je
ret
pushf
dec
sahf
icebp
in
xor
inc
jno
xchg
xlat
pusha
inc
xchg
lods
mul
mov
xor
test
inc
loop
jae
divb
sub
loope
sub
leave
xor
cmp
pusha
or
mov
xor
loope
pusha
jg
mov
js
out
lds
mov
inc
adc
outsl
mov
xor
mov
mov
dec
ljmp
mov
sahf
int
cmc
aaa
enter
jbe
orl
jp
add
cltd
jp
add
inc
or
add
adc
int
cltd
xchg
fstl
in
sub
in
fistpl
in
rcll
repz
sub
cmp
xchg
das
cmpsb
cs
scas
cmc
jge
aas
gs
adcb
loop
lahf
jmp
mov
and
inc
mov
and
lods
sub
fwait
jbe
cltd
fidivs
fiadds
push
inc
xchg
or
lock
das
int3
repnz
mov
and
je
sbb
frstor
or
stc
outsb
sub
and
mov
pushf
add
mov
and
dec
xchg
pop
ret
shr
outsb
push
imul
push
ja
shl
push
test
shl
lods
add
repz
mov
sbbb
cmp
adc
dec
decb
pushf
jmp
fsts
pop
inc
dec
iret
sub
ds
fdivl
fidivs
jecxz
aad
dec
mov
stos
push
leave
mov
or
jp
insb
or
xchg
push
leave
icebp
add
push
add
jl
pop
jecxz
push
push
int
mov
lahf
xor
ret
add
xchg
ds
cmp
test
xchg
sub
fadds
xchg
lahf
mov
cmp
mov
loop
push
loope
idiv
in
cmp
jecxz
cmp
jmp
pop
gs
sbb
sub
nop
cmp
cmp
cli
add
repnz
out
jne
push
lcall
ret
push
outsl
push
pusha
mov
sti
das
inc
xor
push
mov
mov
insl
hlt
mov
mov
std
mov
hlt
adc
sti
sub
pop
add
jle
pop
xchg
sbb
dec
xor
fwait
push
xchg
adc
fcmovu
insb
arpl
lods
test
lds
inc
cltd
nop
cwtl
clc
icebp
mov
loop
xchg
or
or
repnz
jnp
outsl
std
lret
fucomp
sub
pusha
mov
mov
loope
mov
push
loopne
xchg
sbb
push
scas
mov
push
mov
adc
xor
and
enter
in
sub
xchg
test
ficoml
cmp
inc
int3
leave
stos
push
sti
ds
rcl
test
mov
dec
daa
ljmp
mov
popf
cmpsl
testl
mov
ret
mov
scas
aaa
movsb
adc
arpl
in
or
or
in
mov
imul
adc
ret
scas
inc
scas
xor
imul
push
and
mov
inc
jg
or
cmp
pop
pop
lds
lcall
mov
cli
iret
sub
icebp
xor
mov
xchg
or
push
add
out
mov
pop
or
rorl
subl
push
mov
pop
fists
sbb
jecxz
pop
pop
iret
ficoms
jmp
adc
cs
lcall
sbb
xchg
outsb
add
cmpsb
lock
repz
cmc
sub
popa
pop
jb
in
mov
stc
inc
popa
cmp
cmp
sub
adc
cmpsb
inc
xchg
and
inc
aas
lcall
mov
rol
inc
jne
cmp
xchg
clc
lea
movl
in
fnstcw
mov
mov
cmpsb
cld
pushf
shlb
mov
scas
mov
xchg
adc
sbb
test
dec
mov
adc
add
adc
je
movsl
dec
and
lret
popf
xchg
inc
out
cwtl
push
pop
into
sub
outsl
popa
xorl
mov
xor
push
dec
add
xchg
dec
stos
sbb
outsb
popf
and
iret
push
sub
sbb
aaa
dec
push
outsb
fcmovnu
cmp
jp
inc
out
outsl
scas
mov
sbb
xor
pop
loope
sahf
adc
xchg
mov
xchg
dec
ret
iret
inc
fucomp
pop
jmp
mov
test
ffree
pusha
adc
jge
cmc
mov
mov
push
pop
pop
loopne
loopne
loopne
loopne
and
push
rclb
push
data16
icebp
test
jb
rorl
inc
or
pop
sbb
imul
cmc
test
in
cs
jle
dec
in
push
lret
or
aam
int
imul
xchg
insb
sub
fcomps
inc
enter
pop
sbb
sbb
aad
loopne
aad
cmc
stos
sub
add
sbb
push
jae
lock
pushf
add
daa
addr16
inc
je
imul
or
jg
jns
pop
push
cmp
inc
and
cli
test
xchg
push
adc
cltd
fcompl
es
sbb
insb
stos
mov
fbstp
mov
xor
jge
cld
xchg
xchg
shrl
mov
mov
in
jmp
cmp
jae
sub
js
out
mulb
xlat
sbb
inc
jecxz
mov
mov
imul
loop
aaa
mov
fs
xchg
cltd
pop
mov
push
fstl
mov
les
in
xor
loope
and
mov
inc
dec
scas
mov
notb
rclb
mov
sbb
movsl
addb
hlt
sub
mov
andb
cltd
mov
pop
fmuls
outsb
push
pop
mov
pushf
mov
push
fisubrl
pop
aad
adc
stos
stos
daa
out
add
movsl
mov
ds
cmp
or
cwtl
mov
push
enter
arpl
pop
cmpsl
push
clc
cmp
adc
pop
sbb
add
jecxz
mov
dec
jge
lahf
mov
jbe
jg
jl
imul
adc
mov
pop
adc
cmp
add
mov
repnz
xchg
sub
movsl
inc
pop
sub
mov
cmp
adc
out
clc
out
mov
adc
push
pop
pop
std
mov
loope
enter
jmp
cmpsl
add
jbe
cld
icebp
fimull
rorb
cmp
jmp
and
dec
rcrb
enter
inc
ret
testl
ja
cld
lcall
dec
aaa
xchg
cmpl
scas
imul
les
push
cmp
mov
icebp
push
push
aas
mov
xchg
pop
jge
mov
adc
adc
data16
add
push
or
call
mov
pusha
sub
mov
icebp
mov
and
sbb
xchg
filds
addr16
mov
cmp
pop
add
test
adc
sub
and
push
push
xchg
xor
jp
fsubrl
sbb
popaw
sti
cwtl
in
pop
loop
push
cmpsb
jbe
rcll
xchg
jmp
in
mov
out
xor
sbb
cmp
loop
fists
addr16
jmp
xchg
or
pusha
mov
arpl
or
int
push
xor
lock
sub
stc
stos
mov
jcxz
out
pop
pop
adc
mov
repz
adc
mov
sub
stos
cmc
xor
mov
mov
xor
divl
clc
mov
sub
pop
jp
pop
mov
jo
inc
std
fwait
cltd
jge,pn
mov
dec
inc
or
aam
push
lods
mov
inc
and
test
jne
jb
clc
test
repz
sbb
pop
jp
ds
mov
hlt
popl
test
pop
push
pop
out
cli
push
fildl
cwtl
sbb
es
adc
adc
jecxz
push
pop
and
pop
test
mov
dec
dec
sbbl
cmp
bound
dec
mov
xchg
push
imul
out
ret
lds
into
sbb
in
xchg
inc
pop
and
sub
hlt
jbe
or
xchg
cld
sub
movsl
mov
jns
sbb
in
add
je
and
push
outsb
pop
sub
clc
or
sbb
pop
rcrl
hlt
jmp
jge
out
scas
jmp
add
adc
sbb
jmp
xchg
fs
pop
imul
shll
adc
ljmp
adc
sbb
daa
popa
pushf
mov
repz
or
cmp
mov
bound
fwait
add
sub
mov
outsb
test
mov
push
xchg
mov
cmc
mov
popf
js
decb
in
into
xchg
xor
adc
outsb
cs
xchg
es
icebp
pop
in
add
rol
mov
lcall
adc
xor
add
leave
jmp
mov
jns
add
stos
pop
pop
or
sub
add
push
sub
sub
pop
aaa
pop
faddl
and
andl
incb
jge
je
mov
fidivl
cmp
sarl
inc
cld
repz
xchg
cmpsb
add
push
popf
adc
dec
push
cmpsl
icebp
rcrl
sahf
jle
xchg
lds
loop
nop
and
loopne
lcall
les
fs
inc
xor
mov
stos
or
add
gs
pop
or
repnz
leave
leave
insb
mov
shrl
pop
test
enter
sbb
in
ds
aad
or
lock
jle
jp
push
repnz
dec
aaa
cmp
dec
or
mov
pop
popf
imul
ljmp
and
push
test
jle
inc
bound
mov
sub
xchg
lods
movsl
roll
jmp
sub
inc
ss
push
cmp
sub
jno
loope
jno
outsb
insb
sub
loop
out
clc
sbb
pop
rcll
mov
xor
add
push
or
push
adc
lds
outsl
pop
ret
jo
les
popa
popf
adc
nop
sub
popa
arpl
push
or
divl
cmpl
scas
mov
cwtl
pop
fsubrs
jmp
aas
xchg
or
movsb
mov
cmp
sub
and
insl
inc
mov
sarl
cltd
and
outsb
pusha
cmc
xchg
jmp
fldenv
push
pop
jl
jo
sub
xchg
and
jo
std
push
inc
xchg
mov
in
xchg
cld
or
inc
sbb
xchg
dec
sbb
xor
loope
loop
mov
jl
xchg
jge
lea
addb
leave
insl
inc
das
jbe
push
shll
lcall
inc
movsl
sub
mov
cs
cld
imul
ret
fbld
imul
insl
xor
xchg
mov
xor
sub
stc
cs
je
fiaddl
mov
aaa
leave
sbb
inc
data16
mov
push
pop
pop
xor
mov
test
aam
out
inc
pop
adcl
ja
add
inc
fsubs
pop
adc
jecxz
imul
in
pop
cmc
test
fwait
outsl
fsub
push
mov
fsts
fidivs
push
xor
sub
jns
add
bound
rcrb
scas
jg
adc
mov
rcrb
push
test
sbb
mov
mov
and
inc
lret
call
clc
cmp
mov
js
mov
mov
addl
scas
pop
insl
jne
jae
std
ds
out
mov
jge
sbb
aas
push
fcmove
add
hlt
dec
pop
cs
jbe
mov
xchg
lahf
sbb
mov
int3
addl
cmp
jae
jle
rol
mov
cmpsb
lods
scas
sub
hlt
xor
shll
or
cmp
xchg
mov
jbe
testl
fs
pop
ret
push
mov
dec
jp
test
pop
rclb
mov
mov
or
pushw
mov
leave
int
loop
idivl
jns
clc
and
and
jge
pop
or
push
popf
das
arpl
mov
lret
lret
cli
int
rclb
xchg
jmp
push
stos
add
aad
in
xor
xor
pop
incl
pop
xor
add
out
ss
mov
out
scas
sarl
pop
in
jl
cmpl
inc
xchg
mov
mov
aad
dec
mov
or
mov
and
incb
jl
in
xor
sbb
mov
mov
loop
mov
out
mov
mov
xor
cmp
mov
cli
popf
inc
push
push
push
xchg
stos
stos
nopl
inc
jle
int3
inc
cmp
mov
xor
test
cmc
jb
enter
or
gs
cli
or
push
aas
sbb
jb
pop
pop
addl
dec
popa
icebp
jo
or
leave
jl
stos
or
in
inc
mov
mov
sbb
mov
mov
arpl
test
lcall
nop
repz
das
scas
into
xlat
pop
ljmp
test
out
movsb
vmwrite
lret
mov
jb
repz
in
push
insl
add
imul
inc
or
pop
push
cmp
repnz
mov
mov
ss
mov
mov
lock
push
jbe
and
jl
or
push
xor
roll
imul
or
push
fstl
cmp
lods
sub
cmc
test
dec
inc
or
pushf
aaa
pop
xchg
bound
aas
mov
ljmp
out
and
mov
call
sbb
aas
push
push
adc
jne
movsl
fcomi
test
negb
mov
sub
dec
or
js
cli
add
xor
push
sti
dec
xchg
shrl
enter
popa
cmpsb
ret
lds
xchg
enter
pop
adc
into
ret
dec
jb
je
shll
fwait
xchg
cmp
ljmp
sbb
mov
repz
push
push
push
adc
sbb
xor
adc
popf
pop
das
mov
xchg
int
scas
gs
in
loopne
nop
push
lret
push
pop
mov
arpl
dec
cmp
out
clc
stc
mov
mov
push
xchg
dec
jnp
cmp
xchg
inc
jns
xchg
mov
fdivr
xchg
mov
mov
je
cmc
stc
inc
mov
cld
out
lock
cmc
outsb
xchg
push
dec
cmp
int
pop
push
jmp
scas
ffreep
mov
outsb
cmp
mov
pop
xlat
mov
outsb
pop
in
adc
mov
pop
mov
scas
enter
mov
imul
push
gs
cmpsl
data16
xchg
bound
add
xor
outsb
dec
add
inc
ret
cwtl
cmpsl
mov
mov
andb
push
push
lea
cmpsb
fs
ficomps
sub
and
xor
push
cmp
leave
sbb
xchg
push
jecxz
mov
or
mov
into
movsb
lods
cmp
enter
cmpsb
dec
lds
mov
es
lock
jbe
inc
cmp
test
mov
pop
add
pop
mov
out
sbb
imul
cmp
sub
aaa
and
sub
jns
jle
jp
pop
inc
mov
push
mov
dec
mov
outsl
and
mov
push
jg
pop
jp
pop
fs
les
inc
push
push
sub
insl
repnz
sti
gs
ljmp
lea
ja
lret
bnd
push
jnp
cmp
insb
iret
xchg
icebp
movsb
adc
jae
pop
loope
xor
pushf
push
int3
pop
aam
leave
std
pop
fs
pushl
out
sbb
in
jle
mov
iret
daa
sarl
jae
es
push
dec
or
push
and
test
pop
outsl
out
pop
lcall
dec
pop
out
lahf
loop
dec
popa
add
inc
mov
cli
fwait
mov
sbb
cmp
in
into
mov
lcall
imul
jo
incb
jo
rclb
cmc
js
jle
inc
ret
jns
rcrb
mov
pop
adc
arpl
addr16
adc
ds
aad
ds
inc
arpl
dec
push
daa
fmull
mov
xor
repnz
lods
jns
sti
adcb
cmpsb
repz
xchg
and
fldl
xchg
mov
out
fsubrp
dec
das
cmc
mov
in
aaa
test
fs
mov
add
ja
fbld
nop
mov
pop
aam
or
lret
or
cmp
insb
cmp
mov
pop
adc
jmp
jg
fnstcw
and
pop
push
fimull
es
adc
jl
mov
mov
jmp
xchg
push
test
push
push
sbb
jno
jg
cmc
xchg
enter
sub
and
xchg
sahf
jp
xchg
aad
mov
mov
xor
jg
pusha
cld
loop
fst
xlat
xchg
push
leave
adc
xchg
test
push
ljmp
adc
stc
sbb
leave
repz
jmp
icebp
lret
lcall
push
pop
daa
mov
in
in
sub
or
and
sbb
mov
or
pushfw
in
sbb
xor
lock
popw
cs
mov
sbb
ficomps
fsubrl
inc
pusha
imul
in
xor
mov
test
jns
sub
dec
rcll
jmp
popa
xor
cmc
pusha
popf
mov
fmuls
add
lret
lods
loop
mov
mov
mov
pop
mov
dec
gs
sbb
xlat
jnp
mov
insb
test
fwait
adc
lea
lock
pop
xor
pop
sub
jmp
mov
lret
movsl
lcall
adc
hlt
push
out
sbb
push
xchg
lahf
dec
fadds
test
mov
cmc
jmp
fs
ljmp
pop
in
std
mov
out
shl
push
lret
sahf
sbb
insb
aas
fisubrs
icebp
mov
movsb
and
mov
pop
or
stos
pop
mov
pop
scas
mov
inc
xchg
mov
les
pop
dec
cli
mov
imul
mov
push
mov
scas
pop
xchg
add
scas
xchg
sbb
cmp
in
int3
dec
rcr
lahf
mov
push
and
jo
nop
fisttpll
sub
mov
cltd
stc
push
rcll
aam
outsl
test
mov
addr16
mov
and
insb
jg
add
dec
fadds
xchg
call
sub
jle
mov
fsubrs
cld
in
hlt
mov
fbstp
xor
pop
inc
jl
and
xchg
out
adc
mov
std
sbb
xor
cmp
push
lahf
scas
cmpsl
das
pop
enter
scas
xor
dec
mov
lods
icebp
insb
lock
outsl
add
sbb
shll
loope
data16
popf
jo
out
inc
add
hlt
rcrb
and
adc
sti
int
insb
pop
iret
call
adc
mov
jo
mov
jg
cmpsb
mov
lcall
dec
dec
xlat
or
mov
sbb
adc
outsb
lahf
ss
jmp
mov
fs
push
call
dec
pop
mov
scas
push
xchg
pop
and
rcll
mov
jae
mov
arpl
fcomps
and
rcrb
xchg
inc
insl
dec
pushf
and
mov
xchg
les
push
leave
scas
inc
les
add
add
into
jnp
out
call
shr
ror
mov
mov
mov
loop
jae,pt
das
dec
mov
add
icebp
dec
pop
lret
dec
pop
dec
dec
push
rcll
mov
icebp
or
inc
jne
popf
xor
lods
stc
cmpsl
pop
outsb
daa
jns
mov
iret
stos
xor
adc
sarb
dec
push
pop
in
xchg
shrb
push
sub
adc
mov
mov
lods
js
daa
dec
and
lds
add
test
das
sub
insb
xor
mov
fdivs
subl
aad
pop
popf
and
push
xchg
pop
rcl
xor
cmpsl
aam
xchg
int3
add
xor
aas
pop
lret
fidivrl
test
mov
mov
push
cwtl
mov
mov
mov
inc
inc
sub
push
mov
shlb
ret
in
lods
cmp
mov
mov
es
pop
iret
mov
xchg
shr
fwait
outsl
jmp
sub
jmp
jp
lock
add
xchg
cli
mov
xchg
adc
or
or
cmp
mov
lds
lods
enter
push
sub
pop
push
or
mov
mov
hlt
stos
jg
xchg
mov
xor
sbb
inc
add
sbb
push
lock
jnp
idivl
lds
rorl
out
jnp
xchg
bnd
aas
sbb
inc
push
push
dec
xchg
insl
sub
mov
sbb
push
rorb
stos
sub
and
js
pop
jo
sub
enter
daa
flds
pop
jns
or
mov
leave
ds
cmp
testb
jle
mov
not
sbb
push
rolb
ret
pop
xorb
imul
inc
dec
jo
sbb
cltd
pop
inc
push
add
or
sub
into
jge
jmp
xchg
mov
xor
in
or
xor
cmp
fucomip
out
in
fdiv
inc
out
out
mov
lods
cli
call
out
jno
mov
and
push
fsubp
jo
sarl
sub
inc
push
dec
adc
sbb
adc
stos
push
iret
pop
js
pop
in
sbb
xchg
outsb
cmp
xchg
ja
aas
insb
add
test
loop
push
jns
and
aaa
enter
imul
rcr
cmpsl
xor
inc
jle
inc
cmpb
mov
loop
xor
or
push
cli
or
mov
pop
pushf
adc
outsb
xor
adc
pop
xchg
lret
fimull
bnd
out
fs
jns
jne
lcall
mov
jp
dec
repnz
int3
pcmpgtw
inc
cmc
pop
xchg
pop
test
lods
mov
out
arpl
mull
mov
dec
or
bound
arpl
subb
es
movsbl
or
test
dec
mov
xor
sub
jp
fstps
js
stos
sbb
mov
fdivrl
mov
aam
leave
fsubrl
out
cltd
cmp
lret
pop
and
dec
adc
lods
inc
in
mov
push
fs
pop
push
mov
movsl
dec
adc
push
xor
stos
pop
adc
lock
push
jmp
sbb
testl
shll
mov
sbb
mov
jp
pop
stc
sbb
sub
cmpsl
inc
jbe
rcr
in
push
push
mov
mov
fwait
xor
nop
or
push
test
dec
jmp
test
cld
ficoml
mov
pop
aaa
xchg
fildll
mov
xchg
lret
pop
pop
out
pop
or
pop
inc
leave
push
xor
add
loop
je
pop
push
loopne
cmp
stos
ret
in
cld
rcrl
cli
xor
cld
scas
loopne
popf
sahf
data16
out
sub
int3
mov
mov
add
adc
sahf
fildl
adc
sub
imul
iret
mov
or
jg
gs
insl
mov
push
push
enter
push
add
call
cmp
lods
outsb
push
scas
lods
scas
add
lcall
mov
and
pop
loopne
xchg
test
cmp
mov
jno
jp
sbb
mov
fsub
jp
or
insl
test
dec
xor
lods
push
sbb
adc
sbb
dec
sti
xchg
inc
into
cs
adc
in
insl
sti
jb
xchg
ficomps
lea
or
lret
push
inc
push
and
stos
sahf
cmp
push
and
divb
xchg
fs
dec
daa
pop
cli
inc
mov
mov
dec
imul
loop
xchg
loopne
or
aad
cmp
sti
jb
jecxz
data16
lds
test
test
es
pop
inc
pop
outsb
ds
out
mov
sub
and
pop
arpl
mov
jp
mov
stc
xor
sarb
push
mov
xor
lcall
mov
repnz
xchg
ret
mov
insb
loop
shll
mov
xor
scas
insl
cmpsl
ds
in
fldl
ret
dec
pop
pusha
jae
push
fidivrs
lret
jmp
pop
sti
mov
fsubrl
ret
ret
sbbb
loope
push
insl
jb
rorl
jbe
clc
daa
mov
jnp
out
xchg
mov
pop
out
lcall
dec
dec
push
push
add
out
insl
add
sar
sbb
or
lods
xchg
xchg
std
aam
notrack
jae
rclb
insl
hlt
inc
lahf
and
and
push
ja
jmp
mov
data16
adc
cmp
adc
fcmovnu
inc
mov
inc
cmpsl
fbld
divb
push
xchg
cmp
arpl
lock
jb
xchg
push
push
or
xchg
ret
jbe
jno
testb
lret
jnp
pop
jp
loope
add
mov
ds
jg
in
mov
pop
xor
or
sub
addl
dec
je
cmp
lds
cmpsb
jne
outsb
aam
cmc
dec
inc
lret
mov
lods
pop
mov
sub
mov
adc
sbb
push
inc
mov
jmp
idivb
xor
fisubs
xchg
pop
ljmp
adc
mov
lods
rcrb
mov
lods
loopne
lahf
jne
mov
xchg
js
divb
jne
push
stos
jno
fiaddl
jbe
xchg
cmp
fs
imul
mov
inc
add
xor
pop
mov
loop
call
repnz
scas
outsl
out
fstl
xchg
repz
iret
mov
js
sub
lret
outsl
shrb
jle
or
inc
pop
adc
incb
jo
dec
ja
call
notb
cmp
inc
pop
jbe
xor
sbb
cli
mov
mov
testb
stos
mov
das
mov
outsb
lods
gs
cmpsl
mov
insb
inc
out
arpl
fisttps
jge
dec
push
es
dec
jecxz
std
std
ret
les
mov
popf
or
jmp
and
pop
xchg
ss
push
outsb
xchg
dec
jge
adc
rolb
mov
lret
cmp
int
fidivs
pop
pop
mov
push
les
popa
mov
loopne,pt
xchg
jp
xchg
push
das
dec
into
mov
repnz
jl
repz
in
add
push
xlat
and
sbbb
je
adc
pushl
ret
push
push
in
lods
aad
push
inc
push
lret
add
int
dec
das
stc
adc
lret
test
jbe
ds
in
sbb
shlb
sbb
aad
xchg
pop
notl
adc
add
mov
out
push
add
xchg
data16
fdivl
push
adc
fwait
outsb
xchg
push
jl
mov
mov
push
call
ret
dec
cld
out
jnp
mov
repnz
add
and
shlb
sti
pop
jmp
fwait
xor
mov
in
imul
add
or
out
lea
pop
in
jbe
push
sbb
addr16
aas
xchg
cmp
mov
xchg
mov
xchg
ret
in
jg
xchg
scas
ds
lret
mov
sbb
in
scas
cmpl
decl
je
mov
lret
lahf
jmp
lods
repnz
inc
mov
js
out
adc
aam
test
mov
pop
ret
popf
xchg
mov
rcl
jmp
mov
js
xchg
fxch
inc
mov
push
push
incb
dec
aad
pop
xchg
bound
or
outsb
loopne
sub
ljmp
out
jbe
add
push
mov
stos
sbb
or
cmp
fimuls
xchg
xchg
sub
push
test
jbe
sahf
imul
cmp
xchg
mov
sub
pop
dec
scas
popa
lret
mov
cli
lret
popf
dec
pop
mov
push
sub
sar
mov
mov
sarl
lret
adc
into
push
dec
add
stos
cltd
iret
test
adc
aam
shr
outsl
dec
test
mov
ja
mov
mov
into
xchg
sub
or
hlt
sub
push
sbbl
pop
pop
jle
push
and
xchg
enter
imul
cltd
or
rcll
mov
int3
push
xchg
fiadds
iret
cltd
daa
push
das
pop
mov
fwait
push
cltd
mov
push
scas
push
inc
ljmp
mov
icebp
mov
fxtract
fistps
and
ljmp
sbb
movsb
inc
inc
adc
sbb
mov
pop
imul
and
add
cwtl
jne
adc
stc
outsl
cmp
cmc
push
lret
lock
xor
pop
je
lret
sbb
jmp
je
mov
jp
adc
cs
pop
movsb
adc
jne
or
inc
sub
movsb
inc
imul
imul
cmp
jnp
xor
ret
out
leave
adc
push
mov
call
test
xor
add
in
cld
stc
movsl
loop
push
inc
in
add
or
movsw
add
xchg
and
test
xchg
xchg
sbb
jno
repz
jle
out
dec
nop
pop
mov
adc
sub
stc
pop
pop
int3
mov
adc
imul
cmp
out
cltd
aaa
mov
vunpckhpd
jle
cmp
loopne
jg
int3
test
gs
or
pop
xorb
xorl
xchg
repnz
cli
sub
lret
insb
repnz
addb
or
jmp
popf
fs
icebp
and
push
and
lret
out
cs
jae
mov
js
mov
adc
sub
loop
roll
xchg
aam
xchg
and
pusha
mov
cmp
sbb
mov
sub
xchg
add
hlt
nop
add
scas
imul
call
cwtl
in
or
push
jns
les
or
xchg
cmp
pop
xchg
or
popa
mov
dec
xchg
js
js
dec
sbb
cwtl
in
xchg
sub
cmp
je
inc
in
mov
adc
push
or
loope
in
push
mov
loopne
cmc
and
cmp
sbb
mov
ret
jno
arpl
adc
je
mov
repnz
scas
mov
inc
fs
push
test
decb
xor
cmp
sub
dec
or
imul
call
arpl
xor
in
clc
aas
mov
cli
je
mov
in
or
ficoms
lea
lds
pop
push
jmp
or
cli
lds
test
adc
ja
repnz
xchg
mov
add
clc
insb
test
aad
ja
out
mov
fidivrs
stc
jmp
das
into
inc
mov
xchg
push
sub
jo
cmc
pop
cmp
xor
xor
sub
std
adc
or
push
mov
pusha
mov
xchg
shlb
subb
add
push
test
mov
push
ljmp
fadds
out
pop
add
pop
cs
push
stos
sti
jnp
dec
mov
lock
ret
inc
push
pop
sub
movsb
sahf
cld
xor
pop
fnstsw
inc
adc
sbb
xor
loope
movsl
mov
mov
jno
and
jg
xor
mov
push
leave
dec
mov
dec
rcll
push
push
pop
ljmp
movsl
sahf
dec
xor
hlt
push
and
not
pop
jmp
cmpsl
inc
mov
incb
cmp
xchg
outsl
mov
fs
xchg
aad
sub
xchg
push
icebp
xchg
cmp
in
sub
jl
xor
lock
xorl
pop
xchg
push
lea
imulb
push
cwtl
jb
adc
mov
jnp
jne
cmp
fsubrl
add
in
jl
jp
jge
jne
jae
imul
xor
ficoml
mov
xchg
xor
ja
dec
pop
jae
xor
pop
fcomp
adc
aam
in
cmpsb
or
insl
jne
stc
cltd
repnz
arpl
jnp
sbb
mov
cmp
dec
or
out
aaa
leave
repz
push
cmp
ret
push
repnz
call
cmpxchg
icebp
rorl
pop
stos
mov
push
mov
int3
stos
andl
pusha
popf
std
rcrb
xor
shll
aam
xor
aas
rcrl
push
test
pusha
iret
add
sbb
jmp
mov
mov
loop
pop
and
pop
andl
mov
pop
and
fiadds
stos
std
push
idiv
jecxz
das
in
mov
je
push
inc
mov
fisttpl
movsb
mov
fnsave
test
sub
add
xchg
mov
fcmove
in
icebp
cmp
jp
jmp
pop
fdivrs
inc
mov
ret
mov
mov
inc
dec
xor
jg
xor
leave
adc
int3
andl
dec
mov
es
addl
imul
pop
or
es
incb
cmp
adc
inc
sahf
popf
js
test
sahf
out
ja
jne
icebp
mov
pop
lahf
push
ror
push
pop
cmpsl
shrb
cmp
cmp
into
mov
in
dec
xlat
das
pop
push
and
call
push
rolb
pop
lods
mov
xor
rcl
int
mov
cwtl
jnp
popa
loop
inc
mov
push
pop
push
jbe
and
adc
idiv
iret
pop
mov
cld
push
and
dec
lcall
jg
mov
inc
pop
mov
and
jb
xlat
out
and
bound
shlb
sub
xor
pushf
out
mov
inc
stos
mov
call
add
dec
mov
addr16
loopne
iret
lds
aam
pop
lock
frstor
enter
cmp
push
pushf
pop
out
push
add
push
jmp
mov
adc
rcll
sbb
mov
scas
adc
mov
adc
and
jo
ror
fldenv
dec
notb
and
pop
xchg
mov
dec
es
aam
mov
adc
xchg
call
ficoml
push
pop
or
into
dec
in
mov
sahf
andb
test
sar
adc
imull
fdivs
rclb
mov
mov
jo
pop
pop
cmp
imul
adc
inc
rcll
or
push
nop
mov
add
and
push
addr16
inc
xor
lods
shlb
or
mov
push
pop
inc
testb
loope
or
sbb
stc
fisubrl
adc
mov
sbb
out
mov
lret
inc
enter
int
cmp
jb
xchg
push
push
xchg
cmp
push
dec
mov
sbb
xchg
pop
inc
nop
jmp
lea
dec
dec
in
xchg
xorl
test
sub
adc
inc
sbb
push
cmp
outsb
aad
jnp
push
mov
cmp
adc
enter
adc
xor
jae
cmp
fistpll
jp,pn
and
jnp
cld
rolb
pop
shll
lcall
and
insb
push
pop
adc
dec
and
stos
xchg
in
lcall
out
push
aad
lds
aas
add
insb
fsubrs
int3
pop
mov
xchg
bnd
test
cld
repz
cwtl
push
lods
scas
fdivrl
xsaveopt
ret
inc
arpl
xor
mov
mov
xor
pop
mov
mov
ds
aad
enter
fmull
pop
adc
xchg
jp
or
ror
fimuls
mov
sub
in
xchg
mov
scas
roll
adc
mov
ret
in
lea
xchg
jnp
mov
and
cmp
lret
push
mov
push
mov
jmp
and
les
pop
outsb
lahf
pop
jle
jbe
jbe
inc
mov
call
dec
inc
add
lcall
sub
pop
pusha
push
out
inc
insl
sbb
sub
mov
loope
ss
jbe
inc
mov
out
clc
outsl
jge
clc
adc
xchg
int3
xchg
xor
push
rorb
jb
sbb
dec
lea
imul
and
push
push
jb
pop
fsubl
adc
xlat
adc
jg
jb
sub
mov
cmpsl
add
cmp
test
ss
pop
std
test
pushf
sub
fstl
int
adc
pop
xchg
mov
pop
mov
bound
sbb
jle
aaa
sub
fsubl
lods
adc
pop
cmp
out
mov
jp
pop
in
or
push
sub
xor
mov
jo
idivl
shr
pop
sbb
adc
or
add
ja
leave
inc
mov
jo
jno
sbb
popa
mov
jmp
movsb
mov
popf
icebp
aam
std
and
jae
fldt
lret
mov
sbb
add
adc
loope
sub
cmp
sti
pop
pop
add
clc
cmp
xor
test
rclb
xchg
fwait
movups
push
lret
or
in
loopne
repz
scas
je
cmc
sbb
sbb
lods
adc
pop
mov
mov
mov
clc
mov
clc
int
dec
or
jle
hlt
outsb
add
cmpsb
push
outsb
dec
js
sbb
sahf
inc
fisubs
arpl
sbb
call
xor
in
flds
outsl
jbe
or
jo
fcmovnb
ret
jmp
sahf
mov
mov
das
fisttpll
fcoms
mov
pop
xchg
stos
mov
jnp
push
mov
xchg
jmp
push
push
mov
cmp
xchg
push
sub
rep
adc
jle
sub
je,pt
rcl
scas
or
mov
xchg
push
cld
orb
mov
or
or
std
test
mov
popa
xchg
aam
es
ds
push
sub
or
pop
jmp
mov
inc
ret
mov
sub
xchg
push
xchg
push
adc
pop
pop
imul
loop
adc
jge
mov
mov
test
jb
mov
mov
mov
mov
hlt
or
dec
dec
jbe
dec
sahf
lcall
imul
test
in
insb
mov
fldcw
mov
dec
push
fisttps
loopne
cmpsb
mov
loope
inc
out
adc
pop
or
rorl
mov
sbbb
outsl
sub
mov
push
in
sbb
mov
inc
int
xchg
and
ss
mul
cmp
bound
pop
add
stos
es
push
rolb
shl
stos
pop
pushf
roll
or
cs
mov
mov
cmpsl
push
lock
lods
cmp
sub
mov
inc
test
jnp
mov
popa
xor
pusha
xchg
les
arpl
mov
sub
xor
lds
adc
aam
nop
push
and
xor
scas
shrb
lret
add
dec
pop
add
into
fdivr
lcall
mov
iret
dec
orps
push
cmp
xor
push
je
movsb
mov
cltd
mov
scas
mov
jb
push
dec
adc
or
in
imull
fmulp
test
popa
jle
dec
loope
je
xchg
and
ljmp
jns
push
les
xchg
and
pop
xchg
jle
fildl
push
add
lds
shlb
cmp
dec
xchg
sbb
jae
fnsave
mov
bound
mov
push
mov
xchg
int
mov
mov
adc
add
and
mov
sub
sti
cs
sub
stc
sub
ss
test
or
inc
inc
hlt
dec
test
inc
gs
ret
js
mov
adc
xchg
push
fdivl
cmp
push
test
addr16
mov
mov
loopne
repnz
in
pushf
in
add
jns
jl
xor
xor
pop
push
mov
loop
cmpsb
in
jl
jnp
mov
cli
cmp
mov
out
ret
lret
mov
hlt
dec
and
loope
fisubrs
mov
jg
stc
xchg
add
outsb
mov
cmpsb
pop
sub
ret
pop
xlat
push
scas
outsl
mov
mov
adc
ret
adc
mov
or
leave
clc
xchg
sbb
inc
into
jae
xor
mov
repz
shll
push
and
ja
pop
aaa
cwtl
insl
fcoml
xor
sub
xchg
sub
ljmp
rcr
pop
ja
loope
push
sbb
outsb
pop
idivb
xchg
addr16
mov
inc
mov
push
or
fildl
xlat
dec
and
and
dec
inc
loopne
adc
out
push
insl
sbb
inc
push
movb
jno
mov
imul
sahf
fdivrl
fsts
push
dec
cmp
pop
mov
sub
filds
leave
pop
mov
stos
mov
test
shlb
ds
add
stos
push
mov
and
cmc
pop
mov
test
xchg
je
dec
ljmp
xchg
push
mov
cmp
jo
xor
or
lret
mov
outsl
outsb
out
add
inc
lods
jg
inc
cmp
cmp
pop
out
cltd
ljmp
pop
mov
call
in
dec
flds
jnp
mov
in
call
pop
sub
repnz
mov
pop
fs
ljmp
aas
aad
out
lds
or
dec
pop
and
sbb
or
outsl
xchg
pop
pop
int
aam
or
dec
jne
loop
je
and
mov
xchg
xchg
test
iret
fisubl
push
pop
hlt
es
sbb
insl
fcmovnbe
and
cli
mov
enter
sar
cld
adc
inc
dec
add
test
loop
loope
mov
ljmp
fstps
pop
sbb
rolb
out
mov
rorl
pop
ja
dec
rol
movsb
sub
push
cmp
push
int
mov
add
cmp
leave
dec
jno
lods
enter
jge
adc
sti
jns
outsb
mov
test
loopne
mov
xchg
xchg
cltd
inc
test
add
clc
push
mov
lret
scas
mov
sahf
jp
sbb
sbb
fstpt
sbb
push
lcall
add
cmc
test
or
sti
jge
mov
adc
mov
fdivs
jno
inc
fs
sub
lfs
adc
sub
jne
fildl
jmp
xchg
rcl
cmp
aad
in
jmp
mulb
mov
pop
lds
xor
addr16
test
sti
sbb
jns
aaa
xor
mov
ret
jno
cmp
mov
out
pusha
fsubr
xchg
cmc
mov
cmp
stos
imul
inc
xchg
sub
scas
leave
stos
inc
ljmp
in
sub
rcrb
jae
push
ds
jecxz
mov
int
hlt
mov
push
adc
xchg
or
in
shll
pop
test
rol
sub
leave
cmp
xchg
stc
jecxz
out
sub
imul
and
mov
sub
sbb
jne
and
sub
jns
sbb
xchg
and
xor
and
mov
orb
push
test
ret
mov
adc
inc
jae
mov
xorl
incl
jmp
mov
movsb
xchg
pop
inc
add
inc
xchg
out
add
pop
add
sub
std
and
xchg
inc
xchg
fwait
jge
iret
or
into
push
cmp
sub
icebp
pop
ljmpw
add
fimuls
pop
pop
stc
pop
pop
mov
inc
das
pop
sti
push
jl
sub
inc
shrl
push
pop
repz
dec
jle
xchg
xorl
mov
movsl
aad
out
xorb
in
mov
xchg
es
mov
out
notb
js
jge
xchg
lret
sbb
testb
adc
add
sahf
shrb
add
and
std
cmpsb
mov
sub
jbe
dec
das
jne
lahf
cwtl
mov
xchg
insb
insl
xor
enter
scas
int
xchg
in
daa
or
mov
jmp
sbb
cmp
lock
pushf
xchg
xor
dec
dec
pop
mov
xchg
test
cmpsl
pop
cs
int3
jge
shlb
sub
xor
imul
pop
dec
jecxz
dec
test
outsb
or
mov
adc
and
arpl
xchg
pop
mov
jmp
js
notl
ss
loope
mov
movsl
mov
stos
in
push
fidivl
leave
lret
shll
pushf
fwait
push
lret
and
ret
cmp
and
cld
loop
inc
pop
xor
addr16
xor
push
ud2
pop
pop
subl
into
mov
add
scas
jae
lcall
hlt
jnp
mov
imul
jns
cmpsb
enter
adc
jbe
or
je
mov
mov
and
lahf
push
test
mov
mov
in
inc
pushl
iret
in
xor
dec
cmpsl
or
xchg
loope
xchg
and
imul
jo
out
mov
mov
ficomps
mov
pop
cmpsb
divl
lds
repnz
ljmp
cltd
shlb
pop
pop
pop
dec
mov
scas
xor
dec
popf
xor
in
push
ret
lea
imul
mov
mov
daa
mov
jno
insb
mov
pop
mov
or
jno
std
inc
cltd
sbb
inc
mov
aaa
ja
test
repnz
je
cmpsb
je
int
ds
insl
adc
pop
es
push
sub
in
pop
fwait
jp
popf
mov
push
fistpll
fstps
jmp
add
cwtl
sbb
in
mov
and
insl
int3
addr16
jb
fs
orb
sbb
push
fsubs
jb
mov
pop
sub
mov
inc
jle
cli
inc
add
mov
pop
out
jns
cmp
dec
lock
lret
sbb
mov
clc
mov
std
push
ret
and
jp
lea
mov
enter
sbb
push
add
imul
jp
dec
push
rolb
add
dec
mov
xchg
pop
mov
scas
test
in
fidivrs
add
outsl
popa
xchg
mov
mov
jae
xchg
enter
add
sub
push
fld
jge
mov
es
sub
inc
scas
mov
push
ja
mov
mov
jl
jge
popf
sub
rorl
and
dec
into
mov
jae
out
into
es
int
insl
mov
popa
leave
sbb
mov
sub
push
sbb
popf
sub
shl
arpl
and
mov
mov
fsubrl
xor
pop
lahf
aas
out
push
test
sbb
pushf
mov
lea
cmc
ljmp
movsl
dec
cmovae
lock
mov
and
add
xchg
in
sbb
cmc
in
ss
test
bswap
mov
cmpsb
mov
push
jo
sbb
mov
inc
sbb
xchg
sbb
cltd
mov
mov
jae
incb
dec
or
inc
sbb
mov
jp
cmp
pushl
push
pop
sbb
mov
push
cwtl
push
aas
ljmp
mov
test
inc
adc
jb
mov
push
push
cmp
jns
fmull
or
sti
push
mov
jo
mov
xlat
mov
in
and
jmp
dec
fwait
sbb
mul
jmp
jmp
cmp
mov
lds
ja
pop
sbb
rol
jecxz
aam
outsl
in
lock
repnz
and
enter
xor
lcall
in
push
clc
push
fs
ret
mov
enter
mov
insl
cmc
xlat
or
scas
into
mov
push
dec
ss
cmp
xor
cmpsl
push
jns
mov
cs
inc
xor
sarb
fiaddl
shlb
mov
pop
out
cmp
jmp
jno
in
pop
dec
mov
jbe
pop
cli
inc
mov
scas
xor
adc
sbb
cmpb
mov
jmp
pushl
jecxz
sub
orb
cmp
stc
adc
movsb
popa
dec
inc
cli
push
xor
shll
cpuid
jbe
clc
sbb
ss
push
pop
leave
jl
jns
data16
js
rcrl
mov
imul
mov
scas
pop
mov
xor
mov
jecxz
pop
shl
or
ds
mov
out
dec
lea
outsl
subb
rcll
cmp
mov
sti
xchg
adc
jle
lods
aad
pusha
add
mov
fldt
adc
mov
or
sti
mov
mov
cmpsb
icebp
add
loop
insl
add
pop
out
into
lret
xor
insl
out
xor
or
int3
rolb
xchg
add
xor
ficoml
xchg
sbb
popa
ja
mov
pop
test
roll
add
xor
fucomip
insb
cmpsb
pop
xchg
in
inc
stos
xor
and
xchg
mov
pop
jge
push
filds
and
adc
or
notb
pushf
push
clc
daa
js
mov
mov
addr16
insl
inc
pop
or
push
mov
in
cmpsb
cld
inc
rorb
or
ret
pusha
lahf
push
into
scas
fmuls
xlat
adc
mov
cmpl
push
std
call
fisubl
add
sahf
roll
aam
psubd
sub
dec
or
inc
xor
int3
pop
hlt
dec
daa
fnstcw
sarl
inc
pop
adc
daa
std
in
neg
and
add
cmp
orb
cmpsl
aaa
in
in
pop
lock
fs
mov
rcll
xlat
aad
jmp
loope
js
add
xchg
jge
mov
orl
pushf
popf
testl
sarb
push
in
add
sbb
mov
push
push
test
jo
cmp
imul
mov
cmp
in
mov
push
adc
mov
xor
daa
fiadds
shlb
std
add
fbstp
push
leave
int
daa
push
mov
mov
push
and
adc
pop
mov
mov
xor
jmp
add
aad
xchg
add
mov
cmp
push
mov
daa
pushf
mov
mov
push
imul
xor
in
stc
insb
cltd
cli
push
push
cmc
dec
bnd
notl
in
scas
cmp
arpl
ljmp
mov
sahf
jg
sbb
bound
dec
mov
and
mov
push
sbb
test
dec
icebp
pop
add
jnp
xchg
xchg
das
loopne
pop
rcrl
jns
int
stos
sbb
or
adc
or
adc
ret
jb
andl
lahf
cs
jbe
mov
int3
imul
sbb
adc
fiadds
fnstenv
mov
imul
lds
add
loop
mov
into
sbb
fs
ja
mov
mov
pushf
sbb
nop
imul
push
es
push
mov
jo
repnz
pop
out
loope
mov
aad
clc
pop
out
scas
subl
nop
fs
aam
pusha
cmp
sahf
loop
movsb
xchg
lret
fnstsw
push
or
push
push
jmp
fcmovnb
sar
pop
push
in
adc
inc
outsl
xorl
mov
pop
xchg
add
or
lds
lods
sbb
ja
aad
add
xchg
jl
inc
nop
xchg
add
and
data16
mov
inc
and
push
push
jae
gs
lcall
dec
leave
push
scas
lcall
lret
inc
es
popf
leave
roll
inc
cmc
loopne
inc
or
mov
pop
and
dec
cmc
gs
lret
sub
fildll
push
and
cli
xchg
sub
ja
jl
pop
stc
scas
dec
in
xchg
mov
dec
or
fnstenv
sti
inc
jg
call
inc
add
imul
xchg
cmc
mov
in
cmp
test
ja
sbb
daa
push
iret
enter
mov
out
push
push
jg
inc
insl
xchg
daa
divl
ss
jne
cld
lds
ret
fnstsw
cs
add
adc
out
in
scas
adc
adcb
sbb
or
popa
jno
jmp
fiadds
pop
mov
lock
stos
lret
lahf
in
mov
rcll
pop
je
inc
jbe
movsl
inc
lds
leave
and
addr16
stos
xchg
ja
aam
cwtl
int
loope
mov
imul
sub
std
dec
pop
push
leave
and
imul
and
enter
sbb
daa
rclb
in
das
jno
imul
scas
push
in
into
jno
xor
in
jmp
inc
dec
fldcw
push
mov
pop
cltd
mov
mov
xor
scas
insl
xchg
stos
fsubp
push
add
hlt
cmp
jg
and
pushl
and
loopne
fsubr
leave
repz
ss
cmp
mov
insb
pusha
and
lahf
cmpsb
mov
mov
in
mov
xchg
jmp
push
or
in
pop
mov
negl
scas
scas
incb
dec
test
arpl
pop
andl
sub
icebp
push
sbb
mov
inc
sbb
xchg
mov
das
xchg
fwait
mov
push
jb
lods
dec
imull
icebp
pop
mov
int
pop
lock
insl
imul
adc
test
sub
adc
adc
pop
push
aad
jns
mov
pop
jge
sarb
adc
sahf
xchg
add
xor
xor
or
addl
inc
call
jne
lea
mov
mov
xchg
fnsetpm(287
js
jae
push
aas
fs
hlt
lahf
dec
mov
xchg
shrb
xchg
lods
mov
jle
nop
mov
mov
push
sub
cmpsl
push
mov
popa
mov
pop
movsl
mov
subl
cmp
mov
fsts
lods
addr16
and
test
in
sub
mov
int3
sbb
mov
xchg
int
int
clc
imul
cmp
sub
mov
jecxz
sub
push
cs
cltd
sbb
out
arpl
mov
cmpsb
jle
in
push
dec
cs
sbb
cmpsb
cmp
aaa
xlat
xor
fstps
or
xchg
or
das
xchg
into
dec
push
mov
xchg
sbb
lods
jge
fistl
addl
sbb
inc
in
repnz
or
sub
mov
cmp
dec
sbb
mov
aas
jge
pop
push
lods
aad
stos
cmpl
lods
push
and
aad
dec
cltd
or
inc
cmp
add
fadd
jl
repz
lock
jns
mov
add
push
int
lods
mov
gs
les
cmp
arpl
arpl
or
add
scas
in
xchg
push
fcom
pop
loope
dec
xchg
adc
call
sbb
jp
dec
popf
ja
fimuls
xor
movsb
mov
inc
or
cli
cmp
dec
dec
enter
mov
cmc
push
sub
sbb
push
jg
and
adc
loopne
data16
mov
leave
xor
mov
and
movsb
add
aad
adc
mov
in
xchg
jg
lock
repz
add
fadds
cmp
pop
mov
mov
push
cmp
and
cmpsb
jb
and
cmpsl
pop
jno
loopne
fadds
xchg
or
leave
fisubs
or
xchg
jmp
test
push
stos
mov
jno
push
jnp
orl
push
mov
fidivs
inc
mov
xor
or
or
add
mov
add
cmp
sbbl
jge
xor
cmpsb
xchg
mov
fidivrl
arpl
jp
pop
cmp
mov
in
mov
sahf
lcall
gs
popf
andl
or
sbb
mov
stos
mov
pop
inc
and
lcall
xor
mov
aaa
ljmp
cmp
sub
sub
inc
inc
jns
in
dec
dec
dec
mov
lcall
jmp
ds
fwait
sbb
js
jne
adc
xchg
sahf
xchg
aad
and
sub
push
sti
aad
push
add
mov
test
pop
or
pop
mov
hlt
pop
into
int
inc
stc
push
aam
adc
cld
mov
fmull
clc
and
outsb
xor
roll
sub
mov
adc
add
pop
fidivl
loope
loop
push
and
outsb
cmpl
mov
daa
jo
aaa
jb
mov
in
test
fcom
sub
push
enter
jecxz
push
call
pop
sub
cmp
popf
gs
stc
fsubl
movsl
sub
insl
addl
fwait
loope
push
out
adc
pop
jecxz
cmp
add
popa
sbb
xchg
dec
loopne
repnz
sahf
sbb
popf
xor
pop
sbb
dec
xchg
rcrb
mov
pop
lret
in
cmpsl
ja
cld
in
adc
xor
std
jmp
xchg
in
dec
push
fadd
fdivrl
fdivs
xor
scas
cs
adc
pop
cltd
loope
fimuls
push
cmc
xchg
mov
js
out
fbstp
xchg
mov
xor
cmp
sub
mov
in
cltd
testb
lds
mov
push
nop
sub
push
mov
push
jns
inc
stc
xor
jmp
dec
sbb
and
mov
rcll
lds
xlat
ret
xchg
cmp
cmc
cmc
mov
inc
shrl
mov
gs
rcll
mov
rorb
pop
sbb
mov
aaa
inc
xor
sub
and
outsb
ljmp
adc
xchg
xchg
cmpsl
mov
or
ja
sarb
cmp
mov
call
loop
pop
and
add
loopne
mov
adc
xor
jl
in
imul
in
je
sub
movsb
hlt
mov
ror
mov
jmp
xor
push
out
in
fwait
xor
add
xchg
and
adc
dec
cltd
xchg
popa
ret
daa
ret
imul
hlt
push
or
sbb
mov
mov
mov
ficompl
clc
adc
nop
insb
mov
mov
and
je
mov
xlat
mov
lods
pop
pop
jno
cmp
imul
pushf
cmp
cmp
test
cwtl
inc
push
push
pusha
and
jge
xor
or
sti
lcall
xorb
out
fucomp
inc
xor
rcl
js
sarb
jge
neg
xchg
mov
or
notb
cmpsb
xchg
fsubrs
aas
and
ss
mov
cli
push
jecxz
mov
mov
daa
push
shl
loope
inc
into
pop
push
call
sub
dec
fwait
xchg
sub
das
xchg
ja
pop
lods
cmp
jo
pusha
ljmp
mov
pop
cld
lock
es
in
jmp
ficomps
mov
ljmp
dec
dec
cmp
fs
popf
and
or
fucomip
inc
scas
cmp
fnstenv
ret
int3
out
outsb
cmp
adc
lods
adc
mov
mov
movsb
mov
sbb
mov
movsl
cwtl
inc
sub
inc
sub
test
push
mov
mov
mov
dec
xor
add
insl
inc
mov
jp
inc
stos
pop
bound
pop
lock
sub
dec
sub
mov
push
dec
sbbb
pop
pop
cmp
jl
es
inc
cmpsl
and
movsb
mov
mov
jecxz
pop
sub
hlt
cli
push
xchg
addr16
jg
fs
mov
jns
in
pop
pop
mov
adc
push
sub
aam
xchg
or
nop
into
adc
je
fstpt
push
jmp
and
repz
hlt
cmp
scas
sbb
lods
pand
jge
cmpsb
hlt
popa
pop
out
call
and
pop
pop
clc
mov
and
in
dec
mov
test
outsb
xor
mov
popa
xchg
xor
pop
mov
push
pop
pop
lret
mov
xchg
push
adc
xchg
clc
negb
push
cs
push
cmp
lret
insb
in
and
cmp
cs
ljmp
ss
jge
stos
loop
mov
jle
xorl
leave
aas
or
shll
mov
pop
icebp
jo
xor
pop
mul
inc
and
inc
jae
dec
jge
push
jmp
popa
inc
push
sub
mov
jne
add
mov
lret
and
jmp
mov
fldl
orb
movsl
sub
and
xchg
in
lods
test
jl
data16
mov
jmp
inc
fabs
mov
loopne
push
jecxz
lds
cs
pop
jmp
into
shlb
sti
pop
test
ffree
mov
mov
lods
dec
movl
and
mov
mov
xchg
mov
idivb
test
in
xchg
mov
sarl
test
cmp
add
cmp
aad
mov
push
mov
movl
sbb
inc
sbb
push
cmc
lret
inc
pusha
jl
xor
lock
lcall
fwait
outsl
fnstenv
lahf
or
or
jnp
xor
jbe
xor
das
je
xlat
pop
and
inc
xchg
mov
int3
dec
aad
cmp
cltd
adc
ds
pavgb
mov
xor
inc
addr16
fistpl
pop
sbb
mov
ja
dec
insl
cmp
pop
ds
jns
cmp
mov
into
inc
lret
data16
mov
or
adc
cltd
in
add
add
mov
adc
sbb
bound
sbb
inc
nop
add
mov
test
xorb
mov
add
addb
mov
insb
ljmp
repz
fdivs
and
and
in
mov
push
out
mov
jno
iret
cmp
rclb
dec
daa
or
lea
sahf
shr
adc
and
imul
insb
pop
pop
ja
mov
jmp
lcall
iret
mov
sbb
lret
mov
sti
cld
adc
cmc
xor
iret
popf
repz
fwait
or
mov
sub
jno
mov
movsb
cmp
jl
fs
gs
lea
xor
or
test
je
pop
sti
mov
push
xorb
cwtl
scas
inc
inc
push
push
jmp
sti
adc
and
sbb
js
test
cmp
jbe
loope
fcompl
inc
mov
sub
cmpsb
imul
mov
xchg
lcall
dec
pop
pop
imul
int3
pop
in
xor
adc
dec
iret
cli
add
push
lds
and
fbld
pop
scas
movsb
jmp
inc
repnz
sahf
fcomps
popa
xor
xor
mov
bound
movsl
int
pusha
fwait
and
mov
push
icebp
inc
lret
pop
inc
inc
inc
repz
mov
int3
dec
lea
insb
sub
xor
xchg
sub
shrl
out
mov
inc
lock
es
push
adc
jb
pop
mov
xchg
in
mov
cmpsl
aad
shr
out
cmp
outsb
shlb
jge
cld
pop
movsl
lods
sub
lret
into
dec
sbb
insb
inc
push
mov
push
add
fdivl
out
lcall
cmp
adc
in
sbb
jecxz
outsb
out
adc
stos
scas
test
ss
push
cmp
xchg
lds
notl
lods
jb
shrl
inc
xor
pop
xchg
popf
pop
pop
out
movsb
loope
cmpsl
loop
cmp
push
push
push
mov
ds
jb
mov
push
mov
jecxz
lods
es
push
popa
inc
rcrl
inc
or
inc
xchg
cs
addr16
cmpsb
mov
sub
push
jne
in
addr16
insb
mov
fmulp
iret
testb
push
pop
mov
loope
xor
xor
ja
ljmp
scas
arpl
fdivs
jns
xor
movsl
in
stos
sub
xor
jns
rorb
adc
shll
enter
lret
shlb
xchg
loope
sbb
lods
pop
mov
and
mov
cltd
xor
add
es
mov
dec
mov
bound
sub
mov
or
jl
out
in
sahf
aaa
mov
push
cmc
or
push
std
mov
mov
mov
cmp
push
in
sub
push
inc
cld
fidivs
test
mov
push
inc
out
jno
mov
fs
jp
std
xchg
cmpl
sub
cmc
ss
in
add
sbb
inc
inc
mov
xlat
sbb
ret
fmuls
andb
shll
out
sbb
mov
lds
sbb
push
imul
fbstp
add
push
bound
daa
or
mov
mov
and
repnz
popf
and
cmp
movhps
ss
loop
out
add
es
pushf
dec
cvtpi2ps
jg
rcrl
daa
mov
mov
jmp
cmp
push
jmp
js
xlat
mov
movsb
pop
mov
idivb
push
xchg
cld
dec
sub
fs
pop
insb
sbb
movl
mov
loope
aaa
pop
fistpl
lcallw
sbb
and
cmp
js
fwait
inc
es
out
inc
xor
cmp
mov
mov
or
cli
jge
push
pop
divl
addb
stc
mov
inc
jbe
pop
sub
xor
xchg
out
fcomi
call
push
push
jmp
sbb
sbb
mov
xchg
test
hlt
xchg
int3
pop
mov
mov
cs
cwtl
int3
fwait
add
push
mov
cmpsb
pop
jno
sahf
xchg
stos
xchg
lea
rclb
xlat
test
jns
add
sub
sti
xor
aad
repnz
and
mov
je
aad
cmp
cld
mov
inc
xchg
inc
pop
xor
fists
cltd
loopne
fidivrl
jae
clc
pop
jge
xor
shrb
outsb
fdivs
lea
stc
rcll
xchg
mov
push
xchg
adc
cmp
in
mov
lret
stos
mov
test
jns
xor
mov
xchg
popa
into
cmp
lret
mov
and
jae
jo
xor
and
cmp
add
icebp
and
lock
bound
std
inc
gs
pushf
pop
out
clc
push
or
jecxz
test
add
mov
out
cmp
shll
test
push
push
pop
adcb
xchg
arpl
mov
ret
shrl
lock
negb
cmpl
gs
daa
or
sbb
cmp
sub
ljmp
xor
sbb
in
hlt
sub
jmp
xchg
lds
dec
push
mov
mov
mov
mov
push
pop
mov
mov
mov
fdivp
pop
imul
mov
cmpsl
mov
shl
sti
test
push
push
mov
mov
push
sbb
jl
or
pop
add
jl
mov
and
adc
fsubl
out
mov
test
dec
adc
sarl
ja
or
xlat
lcall
sbb
inc
scas
dec
jg
cmpsb
test
icebp
js
shl
sbb
xchg
adc
sbb
cmp
shlb
cwtl
inc
test
or
dec
push
mov
inc
pop
xor
sub
notb
adc
mov
ret
fmul
cwtl
movsb
cli
cld
outsb
push
rcrl
pop
or
in
mov
cwtl
lahf
shlb
out
sarb
nop
sub
fidivs
test
outsl
das
das
mov
sub
mov
push
mov
pushf
sbb
in
adc
outsl
fistpll
mov
bound
sub
jge
daa
test
mov
das
sbb
sti
adc
nop
and
adc
lods
loopne
dec
jno
xor
push
fidivs
pop
sbb
fisubl
and
mov
shrl
jno
jno
mov
mov
jmp
outsb
loop
dec
and
or
cmp
sub
fs
insb
ret
dec
add
jne
addr16
icebp
bound
loopne
fdivrl
stos
pop
das
cmp
inc
push
sti
inc
mov
mov
pop
movsb
das
xchg
scas
add
sbb
shl
fsub
and
and
cmp
sbb
jns
xchg
push
add
dec
and
adc
inc
scas
or
mov
ficompl
or
and
addl
test
or
lahf
add
roll
lahf
dec
sbb
imul
dec
cmp
wbinvd
mov
jge
mov
cmp
mov
aam
test
fisubrl
sarl
dec
mov
dec
mov
int
stc
jl
mov
jp
pop
dec
fsubs
cmp
sbb
aaa
or
ss
xchg
cmp
jmp
sbb
xlat
pop
cltd
jle
outsb
arpl
pop
mov
inc
pop
lahf
jb
pushf
data16
loop
imul
imul
pop
pop
dec
lret
adc
je
stos
mov
cmp
movsl
pop
out
inc
mov
push
das
add
mov
testb
jae
push
jmp
clc
mov
insl
out
mov
jo
sbb
push
fwait
or
test
loop
cmpsb
div
add
pop
dec
movsb
jns
fisubl
push
outsl
in
lds
mov
jo
stos
pop
jl
push
or
xor
aas
adc
jnp
ljmp
cmp
ds
jo
inc
pop
xchg
repz
rcll
add
and
and
dec
test
aad
fiadds
ljmp
mov
push
loope
js
pop
or
adc
jecxz
cmp
dec
lods
or
int
jp
push
xor
xchg
fcmovu
mov
loope
gs
pop
jge
xchg
cltd
das
xchg
int3
call
scas
testb
mov
jns
push
clc
fucom
sub
dec
subps
scas
pop
xchg
and
bound
mov
pop
dec
jmp
and
repz
hlt
sub
shr
cmp
mov
leave
lcall
sahf
push
inc
sbb
jle
cmpsb
jp
mov
stos
xchg
pop
out
bound
lock
inc
repnz
jmp
jbe
loope
xchg
sti
cwtl
xchg
cli
movsb
ror
add
push
out
pop
sub
or
repnz
insl
cmp
aad
push
xchg
dec
push
push
cmp
xor
ja
shrb
add
ljmp
aas
ljmp
sbb
mov
pop
and
inc
mov
dec
cmp
test
sub
addr16
loope
and
leave
iret
mov
insl
mov
imul
adc
repz
mov
in
xlat
pop
scas
stos
jmp
add
jne
ja
lea
xchg
lahf
xor
sbb
mov
mov
sub
inc
push
xchg
xchg
adc
cmc
out
sub
pop
add
push
and
mov
mov
adcb
xor
cli
call
popf
data16
cmp
loop
aad
push
jb
mov
cmpsb
xchg
adc
add
mov
push
fadds
arpl
inc
or
mov
js
dec
shl
mov
repz
add
pop
out
and
test
mov
int
in
incb
aaa
lcall
ficoml
outsb
sub
retw
lds
mov
popf
arpl
or
je
push
adc
into
mov
lcall
mov
mull
pop
xchg
je
push
cld
rcl
pop
inc
outsl
sarl
mov
xchg
enter
roll
jb
sub
lock
dec
sub
add
xor
push
and
pop
jl
sahf
add
ffreep
scas
sbb
adc
xchg
das
xlat
or
sti
mov
mov
mov
ror
lods
or
out
jl
dec
test
ljmp
movsb
mov
or
repnz
insl
es
jns
sbb
iret
ficomps
lahf
pop
loope
pop
push
lahf
cmp
add
adc
call
mov
sub
xchg
or
aas
sub
dec
mov
ss
in
rorl
cmp
hlt
es
inc
or
mov
sub
inc
in
mov
stc
stc
call
cli
arpl
movsl
movsl
gs
sub
push
fnsave
pop
arpl
inc
mov
push
push
shl
inc
mov
xor
pop
rclb
and
scas
push
mov
inc
and
aas
xor
test
outsl
lea
cmpsl
cli
outsb
mov
loope
aas
sub
push
mov
xor
pushf
and
mov
ds
jmp
loope
fstl
ja
ljmp
xchg
inc
mov
pop
arpl
repz
jl
inc
fptan
xchg
xor
jecxz
and
cmp
insb
inc
dec
dec
out
adc
jecxz
js
test
ljmp
aam
mov
push
xchg
lods
jne
lea
push
jbe
add
rcll
fisttpl
adc
sub
cli
mov
sub
bound
cmp
push
pusha
adc
dec
testl
jae
inc
movsl
mov
mov
test
or
cmc
xlat
es
int
and
lret
pushf
out
into
divl
jo
fidivs
adc
jmp
ret
pusha
jecxz
xlat
imul
pop
dec
hlt
cmp
sbb
mov
adcb
inc
shrb
and
add
mov
popa
jbe
movl
sahf
aad
and
in
popf
cmp
mov
push
bnd
test
jo
in
push
dec
rcrl
or
mov
xchg
loope
add
mov
cmpsl
sub
leave
leave
data16
leave
mov
nop
shlb
es
mov
dec
in
push
inc
add
in
push
or
cmp
scas
push
mov
dec
jg
xchg
xor
inc
testb
fistpl
out
lock
sbb
loop
sub
aam
xor
mov
mov
sub
pop
das
pop
add
push
in
lea
xchg
addr16
das
inc
or
jno
in
xchg
lock
out
dec
nop
hlt
roll
mov
in
loop
cli
cmp
jae
rcrl
cmpl
or
or
jb
and
lock
inc
cwtl
icebp
movsl
es
call
add
cmpsl
adcl
sub
pop
mov
in
rcr
inc
add
mov
lods
and
jo
in
loopne
sub
push
rcrb
xchg
lods
out
cmp
scas
and
mov
adc
roll
subb
mov
mov
shll
inc
xor
mov
imul
imul
xor
leave
adc
gs
arpl
mov
pop
repz
bound
ret
xchg
pop
arpl
bswap
inc
enter
mov
mov
jl
sub
popa
sub
sub
cmp
pop
fcmovbe
cmpsl
sbb
pop
lock
push
dec
fsubl
inc
jo
mov
outsl
icebp
add
inc
fsub
xchg
ss
enter
mov
jg
jmp
les
out
dec
mov
jbe
xchg
es
jne
scas
xor
cmc
mov
adc
mov
lret
addr16
adc
sbb
mov
sbb
sbb
lods
mov
xor
scas
ret
add
cmp
rcrb
out
les
adc
xchg
dec
pushf
jg
mov
jle
leave
add
mov
es
mov
xchg
ret
mov
jmp
movsl
call
adc
mov
adc
adc
cmp
mov
nop
push
test
mov
or
mov
or
aam
mov
out
cmpl
aam
repnz
add
jmp
repz
adc
inc
movsb
test
int3
push
loope
pop
sahf
push
pop
jg
stos
insl
xlat
sbb
push
dec
js
pushf
add
out
mov
int
push
sbb
dec
inc
ret
push
sbb
or
popf
push
push
mov
xlat
cmpsb
adc
add
outsb
enter
stos
adc
dec
sbb
pop
inc
push
push
icebp
sub
push
pop
or
hlt
notb
jl
mov
fldcw
cmp
into
sbb
sub
scas
fildl
fsubrs
daa
jmp
adc
inc
fsubl
jbe
and
ror
mov
hlt
xchg
mov
mov
lahf
jg
jne
inc
sbb
lods
dec
loop
std
lods
stc
push
sbb
push
mov
push
lock
pop
incb
dec
jns
cld
mov
stos
or
ja
pop
inc
sub
fimull
jle
push
ret
dec
sbb
cltd
int
imul
mov
cmp
shrb
jmp
mov
inc
stos
addb
sbb
pop
shrl
push
subl
sub
sub
cmp
int3
lahf
ret
jp
xlat
les
adc
add
push
das
adcb
mov
fsubrs
scas
fwait
test
jge
cmp
inc
mov
mov
fstpt
inc
adc
jns
in
lea
pop
jns
sarl
fistpll
pop
pop
jb
push
ret
push
mov
mov
int3
sbb
xor
in
or
insb
adc
xlat
inc
arpl
push
cmp
out
add
outsl
xchg
or
mov
lock
pop
js
or
les
xor
push
rclb
mov
mov
jns
dec
stos
adc
xor
fdivrs
out
xchg
inc
cmc
cmp
insb
xlat
pop
add
jl
cli
cmp
sbb
aad
jmp
sub
sahf
or
dec
loop
pop
jo
lret
ret
aad
xchg
lret
enter
cmc
mov
xor
xchg
mov
xchg
dec
sbbl
and
sub
inc
cmp
cld
adc
pop
jnp
dec
pusha
aad
inc
inc
rolb
jl
dec
hlt
mov
rcll
mov
test
inc
test
cmp
loope
pop
insl
sbb
xchg
jns
mov
cs
sbbl
lods
out
mov
sahf
dec
add
repnz
push
ljmp
clc
rcll
daa
pop
jae
enter
ret
dec
int
pop
mov
mov
jle
push
mov
cmpsl
pop
or
push
xchg
movsl
xor
dec
daa
arpl
pop
sbb
dec
popl
xchg
fcoms
jnp
sub
sub
pop
in
or
mov
inc
pop
js
push
movsb
lods
add
mov
or
aaa
xchg
loopne
pop
cli
bndstx
pop
mov
xor
lods
sub
and
inc
imul
stos
push
xchg
add
insl
int
add
stos
xor
dec
and
cmp
mov
jmp
je
nop
push
mov
xchg
ljmp
sbb
outsl
pop
push
push
push
mov
and
cmc
popa
jno
mov
repnz
add
mov
jnp
or
sbb
adc
cltd
sbb
xchg
mov
notl
cs
sbb
mov
sbb
mov
mull
hlt
jle
and
push
xor
pop
sbb
test
push
bound
pop
xor
inc
xor
enter
mov
add
jne
mov
push
js
movsb
jecxz
emms
loopne
lret
lods
cwtl
xchg
or
out
das
mov
dec
or
lcall
loope
cmp
es
mov
pop
pop
sub
pop
adc
lret
mov
xor
jo
xchg
xor
xchg
test
js
fldt
and
aaa
push
stos
imul
pop
jb
jbe
mov
aaa
daa
call
notb
push
inc
sbb
xchg
fsub
fisubrs
xor
mov
in
mov
test
cmpsb
jp
js
dec
inc
pop
out
push
cli
sti
ljmp
aaa
movaps
pop
xor
xor
cs
or
pop
pop
push
aas
jecxz
mov
mov
mov
rclb
sahf
lock
sub
lcall
push
cltd
pop
sbb
andb
cmp
enter
leave
xlat
mov
jbe
or
movd
mov
aam
rcll
xor
mov
xchg
js
mov
mov
xor
repz
test
sbb
or
xchg
sub
adc
adc
cmpb
and
xchg
enter
in
loope
and
ds
xchg
dec
in
sahf
xor
out
push
mov
cmp
add
jecxz
pop
jnp
or
gs
adc
dec
sbb
add
mov
lret
popw
out
pop
clc
sbb
out
adc
add
adc
test
jle
xchg
xlat
stos
mov
add
fwait
cmp
mov
out
popa
lret
mov
sbb
xchg
cs
cmp
pop
sbb
arpl
lret
and
add
jbe
sarl
sub
es
xchg
es
sub
pop
xor
or
xor
mov
jb
xchg
push
and
dec
int
inc
and
push
jb
mov
add
mov
stc
mov
jp
nop
or
kandw
enter
push
mov
bound
dec
arpl
mov
es
inc
add
hlt
pop
adc
mov
push
or
or
int
xchg
xor
rorb
add
or
pusha
orb
inc
jb
push
daa
push
xor
stc
cmp
xchg
pop
jae
cmp
mov
xor
cmp
jo
ffree
xor
andb
pop
mov
test
or
insl
adc
xchg
sub
lods
rcrl
mov
pop
inc
cmp
dec
mov
mov
outsb
mulb
faddp
xchg
add
jo
or
add
movsl
xchg
adc
ret
adc
aam
in
xchg
mov
inc
push
cmp
or
or
pop
scas
loope
call
dec
pop
shlb
dec
push
nop
or
or
pop
sub
xor
add
mov
push
cmc
stc
jae
ja
jp
xchg
std
xchg
movsl
and
mov
mov
divb
cmc
shl
rorl
cwtl
les
cmp
cmp
pop
lock
mov
pop
mov
loop
cwtl
pusha
push
or
xor
loopne
mov
inc
cmpsl
bound
fstp
test
ret
subl
shrl
idivl
add
mov
sbb
ja
cld
int3
push
lret
lret
or
imul
sbb
bound
pop
repnz
cmp
cs
mov
adc
mov
das
push
dec
cmpl
daa
add
addb
mov
loop
pop
jns
out
jnp
mov
test
jmp
mov
add
jl
lret
and
pop
gs
ficoml
shlb
fsubs
pusha
mov
into
jl
mov
mov
outsb
enter
call
xor
ss
ret
sub
sbb
adc
and
inc
jns
jno
and
pop
mov
addr16
test
pop
fs
xchg
test
mov
rcrl
push
jo
dec
scas
adc
mov
mov
add
jns
stos
mov
inc
cmp
ds
xchg
mov
data16
cli
xorb
sub
or
sbb
mov
sar
gs
mov
pop
cmp
cmp
cs
insl
cmc
dec
push
sub
scas
lret
insl
scas
inc
clc
mov
aaa
and
jmp
test
push
rcl
outsl
mov
loop
jae
pop
in
movsb
in
es
loop
ss
mov
rclb
add
push
add
jb
inc
cmpsb
push
and
jae
negb
iret
faddl
scas
push
in
into
add
inc
sbb
sub
jge
movsb
and
pop
adc
stos
mov
pop
add
or
dec
pusha
je
adc
fidivrs
sub
fisttpl
mov
xchg
dec
lea
cltd
jecxz
fwait
dec
cli
icebp
jecxz
pop
cmp
or
xchg
mov
inc
stos
lret
outsl
shrl
or
call
mov
mov
dec
pop
pop
mov
xor
rclb
push
jg
push
sahf
sub
mov
sbb
or
hlt
daa
adc
sbb
cmp
sbb
movsb
imul
inc
bound
dec
loop
mov
xor
xchg
std
dec
scas
cmp
pop
mov
outsb
sbb
sub
loope
xchg
cld
pop
push
push
nop
mov
hlt
push
int3
dec
sahf
aad
cwtl
mov
gs
mov
push
adc
xlat
leave
sub
orl
das
push
into
mov
test
aad
cmp
cmp
ljmp
add
push
cmp
sub
xor
sub
push
dec
movsl
test
sbb
jb
push
pop
iret
xchg
adc
jp
jns
not
mov
popa
into
push
or
sbb
in
jbe
pop
test
add
cwtl
adc
loop
sbb
enter
jecxz
into
pushf
push
sub
sbbl
and
cltd
jno
dec
lods
adc
sub
adc
sbb
mov
lea
mov
inc
add
jmp
outsl
pop
xchg
imul
pop
inc
iret
mov
lods
and
sbb
xor
sarl
pop
subb
adc
or
pop
sub
fildl
ss
add
inc
add
les
in
cs
adc
sub
sbb
dec
adc
or
cmp
ret
cld
xor
cltd
jns
rcl
or
fistl
inc
jnp
pop
push
dec
stc
dec
xchg
mov
ds
xchg
iret
add
movsl
cs
mov
rcr
rorb
in
fidivrl
imul
add
push
adc
push
aam
aas
xor
pushf
mov
pop
pop
jg
in
lods
loop
adc
mov
sbb
add
popf
mov
jae
and
jecxz
cmp
push
cmp
icebp
cmp
test
fildl
fwait
ret
jo
leave
push
pop
les
inc
xchg
mov
mov
push
add
adc
or
jle
mov
mov
pop
fiadds
inc
test
sahf
jecxz
cmp
lahf
idivb
xchg
mov
dec
cmp
pop
or
arpl
scas
in
jecxz
adc
aad
or
out
dec
dec
mov
add
pop
pop
inc
sbb
push
sub
repz
insb
sbb
xchg
sti
mov
push
add
add
rorl
push
popa
push
adc
push
cli
ljmp
push
aam
mov
lods
lock
out
rcl
pop
in
sarl
inc
or
add
sub
fs
jns
rorb
dec
xor
xchg
or
je
aam
mov
jecxz
mov
and
insl
lods
out
push
aad
loopne
sbb
mov
mov
mov
mov
shrb
push
ss
cli
xchg
rcrl
xchg
cmpsb
stos
iret
aam
pop
addr16
jno
inc
sbb
push
xor
jmp
push
jp
add
mov
dec
jbe
xchg
out
sbb
out
lock
sub
adc
cmp
pop
cmp
nop
sub
mov
aam
bound
jo
sbb
pop
push
insl
insb
dec
fcomps
in
fwait
shlb
and
cld
addl
rcrl
add
jo
je
xor
pop
test
inc
sub
dec
outsb
movsb
mov
es
fs
push
je
shl
add
rcrb
outsb
push
or
mov
cwtl
and
mov
mov
sub
out
sub
movsb
pop
inc
loop
adcb
xor
sbb
in
dec
pop
cmpb
or
xchg
add
cmovae
cli
aam
or
xchg
push
stos
aaa
rcrw
lret
jae
sbb
and
aaa
mov
mov
popf
sub
add
rcl
fnstenv
cltd
lcall
es
in
lods
jge
jmp
xchg
cltd
xchg
pop
inc
mov
cmp
cmpsb
inc
scas
xor
sub
je
out
scas
mov
add
loop
shl
and
mov
pop
notb
dec
cwtl
pushf
jo
adc
jbe
lret
aam
inc
out
cmpsb
cwtl
fcoml
out
add
loop
add
mov
mov
les
je
sbb
neg
add
mov
data16
adc
idivl
jl
add
fisubrl
dec
xor
shlb
sbb
add
add
mov
stos
testl
cmp
push
ret
fisttpll
push
scas
outsb
frstor
test
lret
pop
mov
mov
cmp
sub
bound
aam
xchg
sbb
sti
sub
push
outsb
addl
sahf
int3
test
cwtl
pushf
addl
loop
call
jg
fistpl
mov
roll
add
fsubrp
push
push
or
xorb
cld
add
out
movsl
jnp
mov
inc
cmpsb
cli
cwtl
gs
aad
and
pop
insb
xor
add
es
clc
or
insb
imul
push
les
xchg
dec
cwtl
scas
fisubl
cmp
mov
push
stos
cmp
sub
inc
nop
cmp
pop
cwtl
xor
dec
out
divl
ficoms
cmp
int3
mov
sub
sbb
les
cmp
insb
stos
pop
int3
cmp
mov
dec
jl
pop
dec
mov
xchg
push
popf
dec
imul
lods
mov
pop
dec
outsl
fcom
mov
shrl
jnp
int
pusha
add
shl
jb
add
mov
jno
loopne
mov
ja
out
add
iret
movsb
pushf
std
outsl
addl
jp
cmp
xor
mov
andb
bound
xor
arpl
pop
dec
movsl
int3
lcall
cwtl
cmpsb
add
inc
stc
clc
sbb
xchg
or
and
push
daa
les
mov
xorl
movsb
loopne
cmpsl
and
inc
pushf
call
push
cmpl
push
icebp
cmp
dec
mov
dec
imul
movsl
enter
das
push
repz
jb
jns
movsb
loopne
xchg
inc
pop
fbld
adc
sbb
and
pop
les
fldcw
mov
cmc
or
push
movsl
sbb
adc
dec
test
pop
inc
and
in
popf
test
test
into
or
mov
and
pop
sahf
xchg
dec
ret
jmp
push
and
daa
and
jbe
xchg
lods
mov
filds
pop
sbb
push
or
repz
pop
sub
pop
mov
fs
xchg
mov
dec
inc
les
leave
ja
adc
sub
add
shlb
movsb
and
push
mov
mov
mov
sarb
sub
js
in
jne
cs
fidivrl
inc
fnstsw
push
in
mov
mov
mov
sbb
and
inc
mov
rcrl
xor
jno
ljmp
sub
jge
jae
xchg
idiv
movsl
and
pop
sbb
pop
leave
mov
shl
arpl
cmpsl
js
arpl
imul
jl
aaa
ja
out
out
add
repnz
mov
cltd
add
mov
and
test
mov
hlt
jae
cmp
dec
mov
icebp
inc
add
add
add
enter
jle
push
mov
andl
test
sarl
fdivl
pop
add
enter
mov
mov
pop
push
lods
loop
mov
andw
pop
xor
jno
je
mov
pop
aas
jecxz
addr16
loopne
enter
repz
mov
test
mov
je
icebp
sbbb
ret
rep
cmp
xor
pop
cld
mov
push
lcall
mov
sti
into
lret
jns
ficoml
pop
xchg
iret
add
mov
lods
mov
mov
icebp
xchg
xor
add
mov
addr16
lret
ljmp
jno
lret
lret
add
movsb
scas
push
loop
xor
push
push
cmp
or
aas
jmp
aas
out
iret
mov
ljmp
ror
test
lcall
pushf
cwtl
mov
sti
pop
dec
push
xchg
push
pop
pop
push
push
push
inc
mov
or
adc
xchg
aad
inc
or
imul
lods
les
push
mov
out
sub
or
jge
scas
xor
and
push
negl
enter
pop
loope
adc
fcomi
ja
lds
insb
mov
ret
sti
mov
faddl
sbb
xor
or
cmc
push
sahf
xchg
clc
push
lea
mov
stos
jge
cmp
xlat
ror
stc
repz
push
lret
add
lret
xchg
pop
cli
daa
loop
sbb
mov
nop
clc
and
or
addr16
inc
mov
and
out
popa
std
jno
push
jle
mov
push
out
jl
adc
cld
sub
sub
insb
cmp
jg
aas
push
dec
aas
dec
dec
sti
in
rol
ljmp
lods
inc
sub
fmulp
out
mov
divl
cmp
cmp
or
inc
negl
push
pop
hlt
mov
sbb
inc
jmp
fsts
loop
mov
jp
fsubrs
scas
xor
push
fisubrs
out
mov
aad
decl
sahf
pop
mov
sub
mov
xlat
out
fcomip
fdivrp
aam
loopne
loop
in
xchg
stc
add
jg
stc
test
je
sbb
ret
mov
push
jle
mov
sar
dec
out
jmp
shrb
cld
mov
cld
outsl
loop
xor
in
iret
stc
rcr
adc
lret
jmp
stc
nop
xchg
jle
pop
call
inc
iret
insl
pop
push
outsb
mov
lds
sbb
jle
mov
mov
cwtl
jg
jmp
jnp
mov
std
add
loop
jle
jg
je
out
mov
cld
iret
lret
pop
repnz
sbb
sarb
jg
fldl2e
dec
inc
xchg
mov
push
pop
ljmp
or
jge
iret
stos
lret
push
jb
leave
dec
hlt
into
rorb
xchg
mov
inc
jns
in
pusha
cmp
xchg
mov
hlt
jo
mov
into
xorl
and
mov
addb
or
inc
in
loope
xchg
lret
in
scas
fmuls
cld
or
jg
movsb
pop
testl
test
mov
inc
mov
sub
add
test
sbb
xchg
cs
push
and
inc
cmc
and
das
mov
xchg
sub
in
popa
sbb
rorb
dec
adc
imul
dec
sub
scas
addr16
add
xor
inc
push
jns
push
ret
or
jo
cmpb
xchg
xor
mov
sbb
jnp
pop
push
or
sbb
mov
hlt
aam
cli
insb
stos
hlt
lcall
stos
ret
pop
adcl
cmpsw
sarb
sub
ret
es
adc
mov
nop
lods
jge
or
es
pop
ret
xchg
pop
lock
xlat
inc
leave
js
cmc
stc
jbe
or
cli
push
add
mov
adc
bswap
add
jle
sahf
mov
add
cld
xchg
jmp
inc
lahf
lret
xchg
jne
and
pop
mov
pop
dec
rcrb
repnz
lahf
divb
out
cmp
fimull
add
inc
into
in
inc
das
or
loopne
mov
ret
or
popa
push
pushl
cmp
incb
inc
idivl
mov
mov
into
addr16
adc
or
xchg
cmc
and
pusha
push
pop
adc
test
mov
mov
mov
jno
sete
push
cmp
test
push
shll
and
inc
jbe
pslld
mov
push
or
sahf
enter
dec
mov
stc
icebp
adc
mov
mov
mov
pop
mov
or
cli
mov
add
test
dec
jo
xchg
cmc
cmp
inc
aam
or
clc
lahf
test
and
cmc
aaa
add
es
mulb
imul
popa
inc
scas
mov
sahf
icebp
mov
filds
ss
sbbl
popf
clc
enter
aas
add
sti
iret
mov
or
packssdw
cmp
xor
jl
sarl
arpl
add
ljmp
rcl
out
repz
xchg
pop
or
ds
out
sub
loope
mov
stc
addr16
or
dec
repz
ljmp
jmp
sbb
jbe
decl
imul
push
fisttps
xor
xchg
ljmp
cmp
fsubrl
sub
jns
mov
stc
xchg
adc
push
mov
loope
xchg
inc
push
hlt
fdiv
fdivr
repz
aad
jecxz
jg
jns
stc
dec
js
mov
rorl
cwtl
jge
or
mov
scas
cmp
or
jae
mov
in
xchg
pop
pop
xchg
sahf
jmp
pusha
jecxz
push
fwait
xchg
popf
adc
pop
subb
add
mov
or
xchg
jmp
push
std
dec
xchg
jne
xor
aad
jb
lahf
aad
jge
mulb
mov
pop
icebp
test
scas
jge
sbb
negb
add
cld
lret
clc
in
cmp
pop
js
icebp
addl
jae
or
cmp
mov
or
jbe
push
dec
adc
mov
jg
insl
adc
call
imul
loopne
ss
adc
cmp
loop
cmp
mov
jbe
loope
adc
aas
sub
lret
lahf
shlb
cwtl
or
cmpsl
into
fidivl
jle
add
call
adcb
mov
std
dec
les
testb
outsl
push
int3
stc
inc
stos
or
hlt
jg
dec
adc
mul
cmp
add
cwtl
jg,pn
push
xchg
jle
gs
outsl
and
lahf
adc
adc
bound
pop
cmpsl
imull
and
inc
cld
insl
das
push
lds
loop
dec
sub
mov
clc
jp
cmp
ret
fdivr
lret
lock
imull
adcb
in
aas
repnz
pushf
push
adc
push
jl
test
inc
or
clc
scas
xchg
pop
push
cmpl
inc
xchg
mov
js
popa
fisttps
dec
mov
stc
and
pop
jae
test
dec
mov
fisttps
add
icebp
stc
or
repz
ds
mov
testl
inc
testl
aas
xor
xchg
out
arpl
or
dec
outsl
fnstcw
pop
or
sub
iret
jns
xor
mov
repnz
sub
mov
lahf
inc
shrb
and
xlat
pop
adc
xchg
in
js
sahf
mov
mov
jle
lret
lret
bsr
loope
iret
adc
fcomps
push
xor
push
inc
jle
cltd
xlat
inc
pop
or
fiadds
andl
sub
test
iret
fxtract
push
jb
push
sub
cmp
xor
cmc
inc
jb
int
repnz
cmp
inc
ffreep
popf
fists
mov
xor
insb
xchg
mov
push
test
nop
cli
mov
outsb
dec
pushf
lcall
pop
dec
test
insb
loopne
jbe
out
push
insb
lock
add
push
fistps
lods
mov
fiadds
cwtl
ds
iret
cmpsb
cld
cmp
pop
pop
icebp
pop
xchg
aam
adc
pop
jle
cld
or
icebp
or
mov
dec
leave
xor
lock
xor
sti
clc
cld
xor
jge
jmp
xorl
shr
adc
sahf
aas
insb
sub
in
lahf
dec
lods
add
lock
lods
dec
leave
movsb
xor
test
lahf
add
cmc
add
add
fdivl
dec
enter
add
jns
jl
test
adc
into
sti
test
clc
mov
mov
inc
pusha
adc
sbb
jl
and
pop
in
or
lods
xchg
cmp
test
test
mov
mov
lods
pushf
cli
lahf
sub
add
xchg
cs
or
addb
dec
cmpsl
jge
mov
orl
js
push
add
add
stc
bound
adc
add
lret
rolb
adc
mov
mov
or
or
js
mov
mov
arpl
pop
or
sub
iret
add
das
pop
sub
push
std
inc
pop
mov
push
cmpl
out
imul
das
mov
loope
loop
jmp
push
les
mov
dec
or
das
pop
cwtl
test
xchg
fsubrl
lock
sbb
mov
adc
xchg
pop
pop
hlt
lock
add
push
adc
repnz
int3
stos
push
inc
inc
shlb
lret
clc
mov
pop
ficompl
repnz
pop
cld
test
sub
cmp
jmp
std
mov
inc
mov
and
lret
sti
pop
pusha
inc
aad
aad
call
psrlq
and
gs
mov
shlb
or
cld
mov
test
lret
sub
push
cmp
adc
sbb
repnz
stc
loopne
iret
mov
insl
sti
scas
stos
subb
or
add
test
bnd
xchg
adc
mov
cli
add
ret
push
aam
adc
pushf
lret
push
push
pop
pop
stos
clc
rorb
imul
or
clc
sbb
push
mov
xchg
push
pop
subl
sarb
fdivrl
xor
out
pushl
call
iret
faddl
pop
push
xchg
push
lret
repnz
in
jg
rcr
adc
cld
mov
pop
cwtl
loopne
inc
pop
je
mov
adc
fsubr
or
ja
aaa
mov
xchg
test
mov
cmp
adc
sub
imul
xor
test
fs
cwtl
sub
rol
enter
std
stos
lahf
aas
jne
jp
test
pop
pushl
jno
fsts
mov
mov
push
addl
push
jle
es
inc
std
cwtl
fcmovnbe
sarb
jnp
repnz
imul
das
jg
aam
mov
push
fsubs
jbe
or
ss
pop
mov
push
pop
jmp
jmp
xlat
lahf
mov
ficompl
leave
in
outsl
popf
es
inc
or
push
jge
loope
inc
push
add
push
pop
sub
xor
add
jnp
idivl
adcb
pop
and
mov
subl
dec
repnz
pop
pop
jns
jmp
fcmovnu
loopne
cmpsb
or
cmp
into
cs
jne
stos
test
and
push
lds
xchg
das
andb
out
cwtl
addr16
mov
xchg
sub
jo
adc
xchg
aaa
xor
or
popa
scas
fiadds
pop
cmc
xchg
outsb
sub
and
popl
add
dec
std
stc
jnp
jmp
test
pop
or
cmp
cmp
jnp
mov
je
fistpll
mov
fsubrs
and
popa
pop
jnp
sub
jge
inc
mov
cwtl
mov
inc
jne
aam
xchg
xchg
lcall
dec
mov
inc
adc
imul
sbb
jecxz
cmp
loopne
adc
inc
outsl
adc
aam
jne
nop
sub
mov
loop
or
cmp
test
lods
mov
add
xor
sub
jb
daa
sub
shrl
inc
jb
mov
mov
xor
sbb
out
inc
sub
push
jo
mov
aas
push
int
push
lods
lcall
push
cltd
movsl
loope
mov
notl
push
xchg
mov
mov
xchg
sbb
xchg
mov
adc
jge
inc
sub
scas
test
int3
aam
sbb
movsb
push
push
pop
andb
pop
sub
jmp
xor
dec
negb
xor
popf
or
cmpsl
cs
addr16
mov
stc
jmp
mov
push
jo
ja
cmp
adc
movsl
mov
push
sub
xor
and
outsb
mov
les
mov
loopne
das
inc
mov
cmpsl
fcmovbe
lock
movsb
jnp
je
daa
cmpl
pusha
int3
cmc
scas
jmp
out
in
movb
out
out
adc
js
nop
in
xchg
push
testl
je
xchg
outsb
dec
rcrl
jns
or
outsb
test
pop
mov
ficoms
mov
pop
scas
rorl
mov
and
fcoms
mov
sub
adc
sub
dec
imulb
icebp
lcall
dec
xchg
add
fsubrl
cmp
fistpl
js
sti
mov
push
push
into
push
sub
mov
pop
in
psubw
dec
fsubp
xchg
lds
add
or
out
dec
pusha
push
int3
fisttpll
sti
rcrb
inc
in
js
and
movb
mov
jo
insb
xor
xchg
push
dec
inc
pushf
jne
iret
mov
fbstp
adc
mov
dec
popf
mov
sbb
ljmp
and
dec
lahf
je
xchg
dec
stos
push
sbb
mov
fldcw
out
dec
push
cmp
cwtl
out
and
lret
push
loope
jecxz
jmp
jnp
dec
mov
repnz
inc
push
iret
lret
jecxz
out
lds
rclb
mov
push
ret
push
sbb
push
cmp
test
mov
xchg
call
or
fidivrl
add
mov
lock
mov
test
sti
and
pop
mull
and
fcmovb
sti
stos
iret
add
xchg
cltd
mov
inc
xchg
out
ret
xlat
or
add
lods
push
fwait
int
test
pusha
cmp
and
movsb
lds
loope
outsl
mov
gs
ss
out
mov
cmpsb
xor
xor
jle
mov
dec
jo
addr16
lret
lds
xchg
scas
inc
shrb
push
nop
mov
adc
dec
jns
ror
add
fimull
std
subb
mov
lahf
clc
adc
inc
int
inc
dec
add
outsl
je
adc
xchg
clc
sub
mov
inc
dec
lods
xchg
push
dec
xor
sub
mov
imul
xchg
arpl
push
in
sar
xchg
scas
test
and
test
rorb
jecxz
jle
cwtl
jne
mov
ja
aam
aad
in
push
dec
jl
cmp
mov
jg
cwtl
cmp
mov
dec
pop
in
stos
xchg
gs
xchg
sub
faddl
jecxz
in
es
xchg
adc
cmp
insb
pop
adc
pusha
mov
fimuls
jno
pop
fbld
mov
insl
cld
jae
xchg
testl
aad
inc
in
mov
sbb
mov
xor
mov
jns
mov
sub
dec
mov
pop
shrl
out
mov
inc
sbb
fwait
mov
repnz
loop
mov
pop
nop
iret
fimuls
fcmovb
les
fldcw
dec
insb
cmpsl
or
and
cwtl
and
cli
fidivl
pop
jmp
out
outsl
add
je
ss
xchg
inc
addr16
xlat
pop
jno
xor
ret
rol
xchg
mov
ret
pusha
in
push
and
test
out
pop
ja
inc
cs
jne
aam
sub
lds
jg
push
fldenv
sub
pop
push
daa
sbbl
test
test
pop
in
sub
movlps
inc
xor
nop
mov
cli
xor
arpl
fwait
orb
leave
dec
movsl
pop
pop
inc
stos
push
xlat
sub
and
mov
js
pop
call
dec
mov
xor
dec
rorb
mov
jnp
cmp
mov
xchg
or
std
test
pusha
jbe
cld
add
stos
out
cmp
ficomps
cmpsb
dec
adcb
imul
xchg
jbe
imul
ss
and
inc
cwtl
dec
jmp
mov
push
int
sbb
in
sbb
jne
dec
clc
dec
xchg
test
fsubr
jbe
mov
push
xorps
and
pop
lods
ror
xchg
mov
cmp
jmp
repz
sub
popf
jmp
adc
mov
dec
lods
cmp
lcall
xchg
lods
and
push
and
and
bound
pop
xchg
jne
push
fildll
cmp
incb
je
push
and
dec
cwtl
and
add
lret
cmp
mov
fisubl
mov
cmp
push
scas
xlat
ror
pop
ret
je
testl
fwait
stos
inc
ret
pop
insl
inc
and
mov
outsl
rorl
rcll
movsl
mov
or
cld
out
outsl
add
pop
xacquire
in
stos
push
fbstp
mov
mov
mov
mov
jbe
xor
int3
mov
push
inc
xor
daa
push
xchg
popf
sbb
and
cltd
in
cmp
ss
sahf
dec
sbb
add
das
jb
pop
jp
mov
mov
sub
pop
or
testl
xor
pushf
jns
mov
dec
popa
sbb
xchg
shll
mov
or
pop
sub
mov
hlt
mov
and
jne
push
sbb
xor
sbb
inc
adc
sarb
push
cltd
pop
xor
test
xchg
aad
pop
xchg
mov
mov
hlt
insb
pushf
cmp
push
fmulp
jb
call
adc
and
push
pop
push
jbe
push
test
xor
cmpsb
pop
sbb
push
je
in
mov
sbb
xchg
adc
xor
popa
inc
jne
aas
dec
dec
inc
pop
mov
pusha
ljmp
pop
mov
mov
xchg
arpl
cmpb
cmpsb
cwtl
lret
xchg
lods
or
ret
dec
imul
jns
dec
xchg
fwait
pop
fcmovne
sub
stc
int3
adc
int
in
outsl
and
pop
jmp
cmp
sbb
xchg
pusha
not
jp
popf
nop
inc
je
jmp
push
sbb
jmp
add
pop
push
xchg
xchg
mov
sbb
inc
out
xchg
cmp
fs
adc
mull
jo
sub
daa
push
sub
push
or
or
dec
xor
popf
mov
call
int
mov
lods
fisubrs
cmpsl
pop
cmpsb
gs
enter
pop
mov
int3
sub
xor
push
out
mov
lea
pop
mov
iret
cmp
xor
outsl
mov
dec
mov
bound
mov
sub
mov
fwait
jns
xchg
add
popa
movsl
jl
push
ds
jl
scas
mov
inc
gs
gs
pop
rclb
xor
into
sbb
xchg
fisttps
movsl
push
jae
sub
in
mov
imul
insb
in
movsb
add
out
ds
adc
stos
or
cmpsb
jl
testb
fdivl
mov
mov
adc
ret
subb
sbb
jle
jp
jle
jl
mov
adc
ret
mov
jmp
insb
popf
or
aaa
scas
jecxz
push
sub
xchg
cmp
into
dec
test
into
jl
rol
arpl
and
enter
mov
in
and
mov
add
das
movsl
dec
fdivrs
negb
sub
aad
je
cmp
and
cs
outsb
ss
fdivs
fstps
dec
mov
pop
lods
aad
movsl
pop
mov
pusha
cmp
mov
popa
mov
mov
popf
mov
mov
inc
int
lock
sti
push
mov
jns
sarl
outsb
mov
out
push
rorb
mov
int3
add
sub
push
addr16
lods
test
dec
mov
gs
jle
repz
movsb
ds
or
add
mov
mov
test
test
in
fstpt
cmp
movsl
sahf
and
jmp
push
fildl
es
push
push
test
addr16
push
xor
sbb
sub
push
push
test
mov
mov
stos
inc
test
daa
push
xchg
cmp
push
test
or
mov
sahf
cmp
stos
cmpsl
pop
gs
dec
mov
add
ret
xchg
mov
sbb
jmp
pop
js
call
scas
cs
pop
push
loope
outsl
arpl
div
xor
xor
data16
outsl
mov
fadds
clc
mov
sbb
std
or
insl
gs
push
jecxz
sub
xchg
push
mov
mov
in
pop
push
pushf
and
enter
mov
insb
scas
in
bound
imul
test
sub
sub
mov
insl
inc
xchg
test
lcall
dec
xor
ret
outsb
adc
imul
mov
les
scas
add
fisubl
jae
pop
jge
jbe
or
ljmp
in
jb
loop
cmp
mov
fwait
mov
inc
adc
hlt
mov
adc
jne
hlt
cld
ss
addr16
popa
enter
mov
rol
push
ficoml
outsb
sbb
xchg
rcrl
test
or
push
faddl
and
jnp
mov
int
xorl
repz
pop
mov
and
sahf
pop
popa
mov
sub
add
xor
xchg
cmp
xchg
test
test
push
pop
pop
jno
in
movsb
mov
adc
in
test
push
mov
cwtl
adc
stos
xchg
sahf
add
pop
sbb
pushf
mov
mov
mov
mov
insb
xchg
out
dec
rol
ljmp
adc
dec
fiadds
add
in
aad
outsl
sbb
test
sbbl
add
fidivrs
sbb
mov
gs
xor
lods
testl
dec
out
add
jge
stos
rcl
fmul
inc
mov
int3
push
push
fs
iret
jp
cmp
cmpsb
push
mov
int
push
adc
fwait
or
popa
pushf
orb
inc
aaa
mov
push
mov
xchg
leave
push
jp
cmc
inc
addr16
pop
flds
inc
aad
adc
movsl
dec
rolb
sahf
cmc
out
adc
enter
jbe
int
push
andb
rorl
es
xchg
sti
es
mov
shrl
adc
mov
arpl
or
stos
scas
es
mov
rcrl
in
sub
clc
cmp
cmp
fnsave
les
lret
xchg
xchg
dec
pop
daa
mov
cltd
ret
lret
sbb
int3
mov
movsl
je
xor
inc
inc
cwtl
adc
sbb
fsubrl
mov
cmpsb
xchg
push
imul
pop
sub
dec
adc
xchg
xor
mulb
in
ljmp
jmp
xor
stos
pop
aas
rolb
jbe
xchg
out
addb
xor
push
aaa
mov
jbe
cmc
xor
insb
adc
mov
push
ljmp
fdivl
int3
cld
lock
lock
sti
dec
insl
cmp
cmpsl
pop
push
rcrb
push
jp
insl
push
cli
mov
ret
in
call
and
sub
in
add
leave
dec
and
cmp
push
leave
jg
sahf
loope
out
or
ds
inc
leave
push
gs
icebp
pop
mov
into
fdivrs
enter
cmp
sahf
sbb
lods
fsubrl
sub
cs
shrb
cli
xlat
inc
and
fs
scas
mov
in
pushf
jp
loop
popf
pop
cld
idiv
fpatan
aas
push
mov
cmp
sahf
sbb
sti
sub
xorb
jb
and
xchg
ficoml
fmull
fsubrs
push
mov
outsb
add
js
push
ret
int
jno
or
cmpsb
es
rclb
xchg
jnp
xchg
insb
mov
pop
cmp
pop
cld
imul
gs
add
out
gs
sbb
sub
mov
pop
ffree
or
cmp
pop
test
sbb
loop
subl
add
xor
dec
jl
push
daa
cmpsb
gs
xor
add
ds
mov
ja
push
int
iret
push
insb
loop
idivl
pop
adc
lods
aad
fstpl
add
cmp
cmp
pop
les
fwait
fs
rclb
ja
jp
test
icebp
imul
pop
sar
jae
orb
inc
ljmp
jle
push
pushw
ljmp
inc
add
mov
cmp
lock
bound
cltd
mov
mov
inc
outsb
push
mov
pop
popa
into
mov
adc
gs
ror
out
lock
push
sub
adc
es
and
inc
jo
lds
aad
mov
fwait
xor
cld
aad
out
mov
pushf
mov
dec
jne
mov
or
pop
int
pusha
popa
cmp
imul
cwtl
dec
or
push
mov
push
punpckhwd
sub
jnp
gs
dec
jp,pt
ficompl
nop
sbb
icebp
stos
dec
into
fmull
dec
call
add
cmp
pushf
or
mov
mov
stos
xchg
sub
je
xlat
popf
fs
insb
or
aam
fwait
add
jnp
cmp
mov
nop
mov
sub
lret
insl
les
add
fistps
aaa
xchg
notb
sahf
cmpsl
sub
das
int
out
hlt
xor
jne
lret
fwait
dec
adc
sbb
lcall
push
and
lds
dec
xchg
sahf
push
mov
bound
push
outsl
mov
mov
mov
je
sub
mov
test
scas
fmuls
mov
push
xchg
into
mov
cwtl
mov
cmc
les
push
jb
inc
popa
shr
dec
dec
mov
xchg
xchg
fistpll
sti
xlat
dec
lcall
adc
mov
jnp
dec
jb
pcmpgtw
pop
mov
inc
filds
pop
sti
xor
push
cwtl
jle
mov
cmp
dec
cld
loop
add
test
lds
or
push
xchg
andl
mov
test
xchg
cli
insl
or
add
xor
sub
mov
sub
cwtl
xchg
and
and
push
xlat
and
int3
add
inc
add
sahf
or
enter
js
int
add
arpl
pop
mov
lahf
jno
adc
stc
jg
mov
dec
sarl
sbb
cmc
add
pop
in
inc
sbb
add
add
push
mov
je
push
sub
sbb
jb
ret
call
loop
push
fwait
add
popa
gs
pop
adc
add
jmp
icebp
imul
mov
test
dec
sub
pop
mov
lea
push
in
sahf
add
cli
inc
ret
push
cwtl
push
outsb
jne
jge
and
xchg
arpl
jge
leave
imul
movsw
jecxz
sbb
xchg
movsb
inc
iret
inc
push
repnz
pop
mov
stc
pop
stos
stos
pushf
leave
sub
addr16
mov
pop
xor
xchg
divl
lcall
nop
push
add
sbb
lcall
pop
loopne
or
and
sub
es
mov
stos
mov
lea
popa
int
jae
bound
sub
sti
cmp
ja
and
shr
cmpsb
push
cmpsb
popf
movb
mov
xchg
xchg
xchg
hlt
or
lahf
mov
xchg
xchg
xchg
dec
pop
pop
daa
mov
xchg
js
gs
lcall
mov
adc
sub
aad
stos
cmpl
scas
bound
mov
iret
sub
or
xchg
inc
mov
negl
in
jmp
fildll
and
popf
add
inc
xor
push
lcall
das
pop
dec
lret
scas
xor
jecxz
push
shlb
push
in
in
xor
std
lods
sbb
cmp
sub
test
in
mov
mov
pop
xor
push
pop
add
mov
mov
fwait
data16
cwtl
je
dec
push
movsb
mov
shll
popa
shl
cmpsl
pushf
adc
lds
xchg
push
lods
outsl
adc
cli
and
pop
inc
adc
pop
ficomps
mov
loopne
and
out
roll
inc
repnz
je
or
xchg
pop
jmp
jge
idivb
jnp
and
in
outsb
bound
xor
decl
fidivrl
gs
cmp
and
fcoms
arpl
add
sub
jl
mov
shrl
push
ret
adc
pop
aaa
flds
adc
out
insl
out
inc
push
mov
add
sbb
xor
ja
out
out
dec
sub
dec
mov
jae
cmp
int
test
xor
sub
aad
xchg
adc
cmpsl
in
xchg
movsb
mov
cmpsb
in
fisubs
cmp
and
in
fiadds
jbe
cmp
scas
movsb
dec
or
popa
daa
cmpsl
popa
jmp
mov
fldcw
inc
push
dec
push
rol
popf
pop
testb
jbe
ret
sbb
imulb
mov
es
pop
cmp
inc
adc
pop
sti
inc
insb
jecxz
add
insl
mov
sub
les
xchg
mov
lds
lret
ja
mov
xchg
jae
mov
addr16
test
scas
cmc
xlat
sbb
int
enter
adc
popf
push
mov
shrl
cmp
mov
pushf
aaa
int3
pop
sub
test
in
xchg
inc
jle
dec
push
mov
xor
rclb
or
lcall
fcmovu
jo
inc
scas
adc
dec
inc
sbb
mov
xchg
addb
cmpsl
lret
push
jo
fdivl
icebp
push
adc
dec
test
pusha
xor
fcmovb
jb
inc
lods
out
outsl
daa
lods
xchg
test
test
testb
mov
mov
ljmp
ds
or
sub
adc
xor
jmp
add
push
das
pop
mov
pop
in
jnp
hlt
fcmovbe
mov
push
icebp
sti
sub
push
fsubrl
enter
aas
adc
outsl
fimuls
shl
cld
fdiv
xsave
or
adc
xchg
jno
mov
pushf
loop,pn
dec
dec
stc
clc
mov
cmp
sbb
stos
inc
jecxz
orl
or
cmp
nop
cmc
fstpt
jae
enter
sub
ss
pushf
dec
addr16
in
and
lock
jecxz
divb
push
or
push
fsubl
jp
dec
push
add
sub
mov
int3
inc
ljmp
insb
mov
or
jne
int3
cmpb
stos
mov
push
cltd
adc
cmpsl
out
cmp
jno
fcomi
repz
inc
mov
xchg
pop
and
mov
cmp
xchg
mov
xor
testb
ficoms
cmpsl
push
jle
mov
arpl
mov
je
inc
mov
dec
pop
mov
lock
inc
xchg
mov
dec
push
or
or
mov
cmp
and
mov
lds
push
shrb
sbb
mov
fstps
fnstenv
jb,pn
pusha
clc
xor
loop
sub
mov
sub
and
sbb
sbbl
mov
stos
fidivl
sub
adc
xlat
cld
bound
stc
iret
xor
mov
insb
addl
and
inc
jge
jmp
addr16
pop
inc
imul
hlt
and
je
out
into
mov
hlt
jbe
call
lds
lret
mov
dec
pop
sub
cmp
jne
movsl
lret
mov
rcrb
cmpsl
sarl
adc
jnp
sub
mov
push
aam
scas
pop
outsb
out
xchg
jecxz
nop
inc
push
add
cmpsb
inc
push
add
movsl
scas
repz
faddl
mov
or
dec
pop
push
ret
lods
jle
lcall
push
cmp
pop
fwait
adc
jg
mov
add
shll
push
je
inc
and
sub
cmpb
fwait
mov
mov
fxch
negl
pop
pusha
insl
mov
xlat
mov
gs
data16
shl
sub
inc
in
jge
andb
nop
mov
mov
mov
add
sbb
aaa
dec
inc
bound
test
fldl
pop
jmp
repz
mov
cltd
fisubrs
inc
loop
call
fdivp
movsb
xchg
fdivp
push
add
fstl
mov
js
sub
push
mov
pop
fs
movb
loope
filds
shlb
mov
cmpsb
and
test
int3
outsb
rcrb
ljmp
jmp
lret
out
enter
repnz
cmpsl
sub
jns
arpl
enter
sub
ficoms
push
insb
frstor
icebp
sbbl
cs
jbe
adc
scas
pop
sti
shll
repz
adc
sub
ret
sbb
pop
pop
cmp
jg
fbstp
sub
jecxz
loopne
cmp
inc
dec
push
push
out
pop
xorl
inc
call
push
test
addb
packsswb
aad
adc
xchg
inc
jns
leave
in
mov
push
in
and
mov
inc
std
jae
mov
or
jle
outsb
sbb
push
adc
dec
mov
fldl
clc
mov
xchg
movsl
dec
mov
dec
mov
call
out
and
sbb
fwait
gs
aam
and
enter
js
mov
in
pop
sub
mov
push
inc
pushf
mov
fwait
add
mov
pop
dec
shll
clc
mov
daa
and
faddl
and
push
movsb
or
jge
adc
mov
xor
inc
subl
aam
mov
inc
test
mov
into
aad
jle
stos
dec
dec
dec
adc
nop
jae
jb
cmpsl
lret
shll
push
jno
xchg
xor
add
test
push
rcr
ljmp
popa
mov
insl
and
mov
jmp
jb
jne
sub
shll
push
inc
dec
stc
pop
xor
jmp
cmp
dec
lahf
in
dec
fsubr
mov
popf
mov
inc
mov
mov
mov
pop
dec
fcoms
cmp
mov
cmp
inc
jae
or
mov
mov
mov
in
scas
dec
pusha
or
push
lcall
mov
lods
mov
arpl
sbb
dec
je
movsl
test
fistpll
movsb
jp
xchg
adc
ffree
pop
or
dec
sahf
fcoml
inc
outsl
mov
enter
inc
and
mov
je
mov
mov
pop
push
mov
dec
fwait
ljmp
mov
push
lods
sarl
sti
fcoml
test
jl
jp
xchg
repz
jae
out
sbb
lods
dec
cmp
mov
rolb
imul
out
cmpl
in
or
repz
imul
cmp
pusha
bnd
loope
out
adc
xor
ljmp
or
and
dec
das
adc
or
into
rol
xchg
push
mov
repnz
bnd
loope
leave
pop
jnp
mov
scas
movsl
push
lret
mov
fwait
cwtl
std
lret
in
sarl
mov
imul
subb
add
shlb
xor
lds
dec
mov
aam
in
xor
fcoms
std
ljmp
lds
dec
mov
fs
adc
mov
adc
xchg
je
inc
and
mov
fs
test
jl
repnz
imul
add
mov
in
inc
pop
aad
rclb
mov
lahf
xchg
and
std
popa
inc
add
jmp
and
inc
repz
pop
outsb
rcll
mov
jp
mov
sbb
cmp
add
popf
mov
pop
iret
mov
mov
lahf
lods
stos
pop
cmp
push
and
mov
aaa
inc
ffreep
push
and
cli
aas
dec
aad
ret
adc
adc
and
es
xor
cmp
cmp
push
adc
daa
cmp
pusha
loopne
mov
insb
dec
adc
xchg
xor
add
mov
sbb
cmp
add
subb
std
out
lock
sbb
pushf
push
push
cmpsl
ja
in
or
lock
jb
iret
jbe
mov
sub
lods
out
add
daa
out
pop
pusha
mov
xchg
into
jg
sahf
mov
dec
pusha
push
das
dec
sub
cld
pop
aas
xchg
sub
in
fnstenv
fimuls
add
jl
lods
das
adc
inc
dec
push
inc
rolb
in
std
pop
movsb
sbb
xor
dec
test
out
cmp
lret
icebp
mov
push
icebp
pushf
pop
cmp
out
xlat
mov
lods
rcl
fsubl
mov
les
bound
xchg
in
ja
mov
xchg
xor
mov
loop
test
jl
and
sbb
mov
cmp
aam
fsubrs
test
mov
aaa
dec
mov
arpl
stos
cltd
adc
sbb
add
iret
adc
mov
mov
jo
sbb
cmpb
ret
sub
adc
fdivs
pop
sbbb
cmpsl
notl
push
jbe
lahf
add
jmp
pop
jbe
idivl
cmpl
aas
int
gs
pop
push
or
sti
fidivrs
shl
fwait
mov
push
das
or
mov
lahf
popa
push
addr16
and
xchg
cwtl
scas
inc
jmp
fldl
dec
mov
sub
and
xchg
popf
inc
xchg
rclb
xor
sarl
fstpt
imul
jnp
sub
xchg
jno
nop
mov
fldt
rorl
cmp
icebp
xchg
sub
scas
pop
mov
xor
fisubs
pop
push
or
jl
mov
arpl
pop
sbb
mov
lcall
enter
je
rorb
jg
cs
xor
les
cmpsb
xchg
ret
repnz
pop
leave
adc
rclb
ljmp
push
mov
ret
mov
enter
stos
shrb
mov
insl
in
fs
mov
je
cmp
lea
adcl
push
xor
outsb
lods
push
mov
test
pop
adc
mov
mov
sub
shll
jecxz
scas
bnd
add
xchg
sub
dec
xor
jecxz
daa
test
dec
int
int3
push
ss
test
pop
sub
xor
imul
arpl
jbe
orb
mov
bound
addr16
push
jge
pushf
repz
mov
mov
mov
aas
adc
mov
sub
dec
push
rorl
jne
js
add
out
pushf
push
cmp
mov
imul
scas
sub
mov
popa
shll
mulb
mov
push
in
dec
arpl
int
inc
dec
dec
push
fistpll
mov
test
mov
js
lods
pop
pusha
mov
xlat
or
daa
or
dec
insb
jnp
cmp
push
add
scas
cmp
or
leave
xor
inc
insl
out
das
xchg
int
aas
mov
sub
leave
mov
sub
into
lret
jle
in
stos
push
push
push
inc
jle
and
aaa
shr
mov
mov
push
adcb
mov
shll
scas
sub
and
xor
jno
mov
test
test
shll
inc
sbb
mov
cmp
xchg
ja
push
xorl
xchg
arpl
inc
xchg
jne,pt
iretw
mov
dec
clc
jne
lret
scas
cmpsb
push
jg
gs
je
arpl
cmc
add
xor
fists
jae
jecxz
lret
push
xchg
inc
lea
mov
push
scas
orl
add
cs
sbb
ds
sbb
stc
out
daa
aaa
inc
ja
test
lods
inc
pop
mov
xchg
stos
scas
ds
xchg
mov
rclb
ss
sub
pop
sub
fs
ret
push
push
sbb
xor
jecxz
inc
je
dec
mov
jae
aaa
ret
sbb
xor
jae
sub
push
mov
faddp
xor
fimuls
xor
mov
pushf
pop
pop
hlt
sbb
mov
cmp
mov
icebp
les
mov
adc
loopne
outsb
xlat
cld
mov
fcmovnbe
sti
sbb
pop
push
inc
sub
outsb
mov
fbstp
aad
and
enter
movl
test
mov
jp
mov
jmp
fs
movsl
test
cltd
add
xchg
addb
test
pandn
mov
iret
mov
stos
int3
movsl
insb
int3
fs
cmc
push
movb
mov
push
sbb
lret
cmpsl
sahf
std
imul
lcall
xor
mov
sarl
dec
mov
inc
xor
nop
lock
cs
fst
jp
shll
push
hlt
dec
push
iret
jmp
nop
jno
mov
jge
call
and
int3
cltd
call
out
xor
xchg
mov
xchg
adc
gs
or
test
add
leave
fisubs
mov
in
jge
dec
iret
jns
pop
lahf
mov
push
fwait
dec
xor
in
inc
insl
jnp
ljmp
sub
out
sub
or
dec
xor
mov
iret
jb
cmpsb
or
insb
cmpsb
jne
iret
outsb
sub
sbb
push
arpl
dec
mov
lret
mov
aad
and
jno
dec
mov
cmc
aam
fdivr
dec
lahf
ficompl
add
jno
adc
cmp
sub
add
incl
jmp
movsb
ds
xchg
into
mov
insb
push
jne
mov
pop
xchg
xor
rcl
xor
js
fwait
add
xlat
add
xchg
xchg
fbld
notl
and
sbbl
lahf
cltd
data16
movsl
jae
jbe
std
out
pop
ficoms
mov
rorl
sbb
sbb
pushf
js
cwtl
mov
ret
xor
push
add
ret
pop
roll
insb
push
xor
pusha
fisubrl
in
add
dec
pop
mull
test
push
add
repnz
fs
popf
cmpb
pop
xchg
test
mov
inc
add
setns
mov
insb
out
andb
das
cmpsl
lods
push
daa
cmp
jecxz
dec
loope
aad
bound
ret
adcb
push
jnp
fdivrl
xchg
mov
mov
sbb
mov
sbb
xchg
pop
xchg
xchg
roll
push
inc
pop
and
mov
adc
lret
test
movsb
dec
in
stc
mov
cmp
jae
pop
in
xor
jl
ret
sbb
and
sub
andb
sub
push
fldenv
mov
mov
or
aaa
xor
xchg
daa
hlt
mov
sbb
pusha
lods
jecxz
jno
and
popf
push
filds
cmpsl
outsl
or
lds
loopne
divb
movsl
nop
mov
fcompl
pop
call
int
lret
xchg
mov
dec
cs
ljmp
jb
adc
xchg
mov
push
test
roll
adc
popa
xchg
add
das
out
sub
pop
mov
cmc
pop
pop
cmp
jecxz
add
jmp
negl
xchg
popa
call
jge
inc
push
data16
sub
pop
rorl
loop
rolb
insl
add
ds
movsb
adc
dec
mov
test
incb
sbb
push
daa
push
lods
push
dec
mov
fstp
dec
clc
cmp
jp
or
in
inc
xor
stos
xchg
mov
or
sub
adc
add
lock
cwtl
scas
mov
mov
xchg
sub
jge
into
subl
inc
and
mov
mov
mov
cmp
insl
call
pop
push
ffree
dec
push
out
jle
outsb
out
test
out
mov
test
nop
xchg
push
push
dec
jmp
mov
pop
dec
jbe
ljmp
lret
js
cmp
mov
adc
rep
lods
jp
ds
push
std
subl
and
sub
pop
adc
sbb
pmaxsw
and
das
test
in
dec
and
ds
push
mov
push
popf
out
jo
movsb
xlat
and
shll
pop
cmp
in
cltd
xor
push
xlat
stc
out
gs
enter
fsubs
into
into
sahf
mov
je
pop
push
jmp
lret
mov
adc
je
cmp
xchg
stos
cltd
xor
or
icebp
xor
xor
or
mov
adc
mov
pop
loope
mov
in
or
xchg
mov
mov
mov
jnp
adc
adc
mov
scas
es
inc
ljmp
pop
push
arpl
jb
adc
repnz
ss
lods
ljmp
jge
inc
sti
jb
pop
scas
or
enter
sub
dec
mov
sbb
ret
in
push
or
xchg
xor
in
lret
mov
ficomps
sbbb
out
xor
ret
ja
out
adc
cmpl
inc
mov
outsb
jae
mov
pop
add
mov
xchg
jp
push
shrl
aad
mov
add
xor
mov
daa
inc
dec
stos
push
sub
mov
xor
pop
pop
adc
jge
pop
fnstenv
hlt
push
leave
gs
jmp
and
cmc
mov
vmovss
pop
jmp
je
mov
inc
pop
lret
aas
scas
test
shl
inc
jp
push
jge
hlt
mov
lods
inc
es
js
ret
push
in
sub
jle
sti
and
loop
push
lea
mov
popa
jl
test
push
add
insl
or
pop
aas
iret
sub
das
sub
add
add
fildll
das
fistps
je
inc
mov
and
cmp
and
pop
adc
mov
jp
bound
dec
addr16
fcomp
sub
pusha
xor
jge
and
inc
movsb
je
push
jnp
push
mov
and
cmp
xchg
wrmsr
mov
jae
and
mov
mov
or
shr
insb
cmc
push
cld
jae
adc
push
pop
cmp
jae
mov
out
js
cmp
pop
mov
mov
loopne
inc
inc
mov
arpl
mov
repnz
arpl
sub
in
test
sub
xor
mov
scas
jnp
add
not
aas
jnp
clc
cmp
outsb
xchg
arpl
outsb
ret
les
repnz
push
mov
xorb
xchg
fs
or
pop
outsb
cmp
inc
xorl
decl
aam
add
jp
or
jno
adc
mov
pop
into
dec
xchg
std
pushf
stos
out
lret
fcomi
add
cli
mov
in
mov
aad
jbe
sub
pop
adc
jb
inc
mov
test
add
shrl
mov
sarl
jns
fsubrs
push
clc
insl
mov
jb
cld
inc
insl
stos
and
adc
out
imul
fisubs
cmp
shrl
jg
jge
xchg
inc
jnp
sub
push
mov
out
scas
jb
dec
test
mov
lcall
out
xchg
jne
incb
cmp
and
xor
outsl
nop
dec
mov
push
mov
faddl
lods
outsl
add
and
lds
jne
inc
mov
dec
iret
sub
subb
add
cwtl
pop
dec
jecxz
test
push
inc
cmp
stos
jns
pop
sarb
push
lret
mov
shlb
dec
popf
pop
jno
sbb
push
inc
add
push
lret
out
out
add
outsl
test
and
jl
addr16
repz
or
dec
xor
mov
mov
cmpsl
sbbl
ds
xchg
int3
xchg
imul
push
add
test
clc
clc
mov
rorl
stc
sub
dec
sub
push
fwait
push
adc
sub
or
data16
xchg
lds
xor
js
test
push
adc
in
test
sub
sar
lods
pushf
xchg
cmpl
jp
xor
xor
and
nop
or
mov
lods
cmc
mov
fldenv
adc
clc
inc
or
and
mov
in
mov
fildl
idivb
icebp
shrb
jo
into
scas
leave
in
iret
outsl
xlat
cmp
fstpt
mov
sarl
cmp
mov
imulb
mov
dec
out
dec
leave
jne
sub
jg
sti
push
dec
push
sahf
jns
arpl
int
jb
lods
hlt
out
mov
lahf
xchg
gs
or
in
test
jp
xor
repz
xchg
ljmp
ja
sbb
jbe
lock
andl
lods
test
mov
fdivs
xchg
das
dec
lcall
in
dec
imul
mov
add
mov
xlat
rcrl
mov
jg
sbb
shll
mov
leave
cmp
dec
mov
lock
and
test
test
add
and
mov
shll
iret
ljmp
ss
rcrb
in
push
cmp
mov
fildll
push
push
sbb
add
add
fucomi
lea
adc
repz
push
sub
cs
mov
or
xchg
lds
mov
lds
sub
lock
xchg
jl
clc
in
adc
movzbl
pop
cmpsb
fildl
inc
pop
fiaddl
clc
xor
xchg
lahf
inc
sbb
lea
xlat
dec
xor
lock
cmp
out
repnz
add
aas
push
cli
mov
push
push
and
sahf
or
mov
bound
mov
mov
pusha
fwait
push
shll
jg
inc
in
dec
shll
mov
jl
daa
cli
in
jbe
mov
bound
insb
call
insl
rorb
ret
out
sbb
int
mov
sbb
pushf
dec
sbb
pop
mov
xchg
scas
push
ja
xchg
je
pop
fiadds
or
nop
dec
test
jl
mov
int
mov
adc
push
and
sbb
test
add
xorl
jmp
shll
mov
cmp
pop
std
mov
pushf
push
mov
stc
xchg
stc
cmp
and
add
pushf
lods
shrb
jecxz
test
sbb
jne
ljmp
in
and
sti
sub
out
lds
or
lock
cltd
add
jmp
push
xchg
mov
out
es
minps
pop
fcoms
testl
jecxz
or
and
jns
or
dec
out
jae
in
fildl
mov
les
dec
xor
enter
sub
xor
mov
sbb
stos
jnp
out
lock
cmpsb
xor
cmpsb
mov
aas
mov
js
out
pop
iret
cmp
xchg
cli
adc
leave
xor
pop
xor
pop
fwait
or
insl
jg
insl
icebp
mov
mov
int3
popa
gs
mov
repnz
adc
movsb
push
jbe
sub
jmp
cmp
cmp
inc
adc
adc
mov
mov
cmp
std
jnp
mov
ret
xor
ljmp
xchg
not
pop
adc
push
test
mov
mov
nop
xor
jl
mov
orl
jmp
iret
push
js
std
cs
adc
jnp
mov
arpl
sub
xor
mov
repz
out
call
fwait
out
in
stos
pusha
cmp
mov
aam
xchg
jb
cmc
testl
dec
lret
test
push
sahf
xchg
clc
jb
xchg
adc
push
test
add
sub
insl
adc
push
push
adc
fsubr
dec
mov
jns
out
mov
jmp
xor
push
cmpb
pushf
les
test
out
ss
scas
cmove
jnp
mov
shlb
dec
mov
sbb
leave
inc
mov
jno
pushf
push
mov
mov
sbb
xlat
or
cmc
or
mov
in
mov
pop
mov
cmp
mov
stos
loop
cmp
pop
xlat
test
out
call
ljmp
sar
jno
pop
inc
arpl
push
sti
arpl
pop
sbb
mull
aaa
outsl
and
inc
jne
lods
ret
je
int
sarl
adc
pop
dec
jns
cmp
mov
loope
mov
lret
test
mov
call
mov
jmp
mov
cmp
pop
sub
andl
jle
scas
mov
jl
xchg
sub
loopne
sub
mov
xchg
cmp
icebp
iret
add
ror
fs
cmpl
pop
cmpb
jb
shll
mov
repz
dec
mov
popa
pop
jl
sbb
lods
ljmp
mov
int
push
adc
in
jmp
mov
insl
aaa
cltd
push
inc
out
inc
mov
jae
sahf
xchg
enter
sbb
addr16
leave
mov
enter
jg
fwait
jle
or
mov
rcrl
dec
jns
shll
negb
push
fstl
pushf
out
popf
popf
mov
push
dec
shll
sub
fs
repz
in
sbb
outsl
int3
ret
idivb
repz
sub
xchg
icebp
add
pop
adcl
cmc
sbbb
dec
xor
into
dec
scas
jbe
xor
push
jecxz
pusha
enter
adcl
adc
sbb
rclb
push
out
and
test
push
test
push
mov
cmp
lcall
jl
xor
mov
ja
iret
cmpsb
pop
dec
sub
and
ja
sub
lcall
push
in
and
xchg
mov
fimull
imulb
out
mov
pop
ds
jo
and
jns
scas
cmp
cmp
cltd
outsl
popf
xchg
pop
jno
push
jno
cwtl
cli
xchg
inc
movl
dec
repz
stc
fs
inc
pop
push
jl
imul
stos
xchg
or
pop
stos
addl
repz
cmp
lock
jmp
inc
push
in
mov
dec
popa
outsl
pop
enter
lods
test
mov
repnz
std
mov
call
loopne
test
jb
leave
pop
out
mov
aam
xchg
pusha
xor
sbb
dec
dec
dec
aam
cwtl
xchg
ljmp
stos
stc
fldt
jg
inc
sub
dec
inc
stos
push
and
movsb
mov
movsb
xchg
test
push
fsts
mov
mov
or
cld
and
pop
pop
je
adc
test
jl
mov
pop
sbb
aad
adc
ret
pop
mov
or
add
cwtl
arpl
pusha
cmp
mov
iret
loope
lods
sbb
jmp
leave
ss
push
inc
sbb
sbb
loop
sbb
inc
rol
jnp
cmp
sbb
dec
loop
mov
iret
dec
xor
mov
jns
mov
push
xchg
fdivp
icebp
xchg
mov
cmpsb
out
lahf
xchg
xor
out
jns
cmp
mov
nop
cmp
dec
test
les
das
mov
ja
cmp
das
rorl
pushf
push
or
cwtl
lret
imulb
je
outsb
sarb
ds
push
lahf
mov
ffree
jne
stos
pop
jmp
push
stos
fadds
fstps
sbb
lret
jbe
mov
pop
add
or
mov
loop
daa
out
xor
dec
mov
ss
orl
ja
or
xor
jmp
aad
inc
mov
xor
fiadds
jo
xor
push
dec
add
add
or
outsl
js
or
nop
popa
test
inc
hlt
test
jge
lods
aas
mov
insl
add
jne
mov
pop
ficompl
sarl
dec
mov
jmp
push
sbb
jl
daa
enter
pop
dec
cmp
gs
lds
dec
mov
cs
loope
stos
xor
inc
pop
and
lods
incb
xchg
movsl
xchg
jmp
or
sbb
fdivl
or
or
jl
lcall
imul
or
xchg
flds
sub
dec
sub
jg
in
popa
ret
mov
or
mov
jno
mov
hlt
int
cmp
cmp
jns
inc
cmpsl
jae
jl
adc
scas
and
sbb
mov
sbb
out
xor
sub
cmp
pop
pop
push
pop
imul
leave
std
out
flds
sahf
and
cmp
xchg
outsb
in
push
xor
push
pop
xor
inc
sub
push
xlat
jp
xor
mov
pusha
and
ljmp
dec
loop
aaa
orb
gs
jge
sub
jno
push
in
hlt
adc
out
mov
pop
cs
jl
out
sbb
icebp
xlat
sub
loop
push
call
imul
mov
dec
loopne
jp
pop
pop
stc
mov
sbb
scas
xchg
adc
fmul
hlt
lods
sbb
xchg
pushf
and
mov
stc
dec
inc
pop
nop
mov
in
cmpsb
pop
lret
xchg
dec
jno
or
or
out
sbb
sti
dec
imul
pop
mov
andl
jmp
cmpsb
lods
inc
adc
sbb
aad
imul
push
in
push
stos
outsl
outsb
in
sbb
scas
loopne
out
arpl
scas
and
pop
mov
negl
sbb
xchg
je
cld
mov
in
shll
divl
cmp
dec
outsb
dec
out
testb
xor
scas
adc
sarl
into
mov
test
push
cmpsl
adc
pop
mov
inc
in
int
iret
mov
inc
pop
stos
or
arpl
xor
lret
xchg
popa
add
xchg
lods
sub
jl
mov
sub
and
sti
add
adc
gs
jg
test
sub
cmp
xor
xchg
push
xor
dec
push
mov
mov
sub
xchg
into
xchg
mov
daa
cmp
cmp
aaa
or
sbb
inc
aaa
push
int3
fsubl
jp
popa
test
cli
addr16
rcrb
dec
movsl
cmp
lea
dec
movsl
leave
repz
fbstp
dec
aam
gs
push
xor
aad
pushf
negl
add
jmp
pusha
mov
dec
fistps
rcll
aas
pop
jp
jmp
das
cld
cmp
repnz
lret
adc
or
jae
inc
out
push
lds
xlat
sbb
test
jle
stos
jl
je
addr16
mov
fisubrl
lock
scas
xor
cmp
mov
mov
repz
jmp
xchg
rcl
dec
mov
mov
daa
hlt
in
push
aad
mov
cmp
push
andb
sub
lret
jae
push
popf
xchg
mov
sbb
xchg
and
mov
push
jl
jo
scas
scas
test
cwtl
ffree
outsb
cmp
mov
insb
ficoml
lds
je
jecxz
out
xor
mov
std
xchg
ljmp
es
mov
mov
jp
mov
and
into
jmp
adc
mov
cld
imul
fwait
pop
jnp
jns
add
mov
ror
xchg
mov
jo
sbb
adc
fwait
sbb
mov
pop
mov
nop
or
xor
push
push
mov
daa
pop
pop
leave
adc
fpatan
lds
test
xchg
jle
xchg
pop
icebp
ds
mov
pop
xor
adc
clc
mov
and
mov
or
xor
stos
pop
jnp
daa
test
push
lock
mov
inc
inc
xchg
jno
rcrl
cld
dec
pushf
movsl
dec
sub
mov
jns
and
lods
pop
sarl
out
mov
cmpb
movsl
jns
cmp
fcoml
mov
xchg
pusha
div
cmp
push
fsub
or
xor
mov
xchg
add
pop
jno
daa
xor
bsf
rorb
dec
mov
cli
leave
cs
lahf
mov
adc
xor
repnz
scas
loope
roll
mov
push
shll
mov
jg
mov
insl
add
dec
mov
ficoms
in
stos
or
out
mov
aaa
cmp
fcoms
dec
sub
mov
or
pop
insl
xchg
in
fsubs
ds
sbb
lahf
add
jno
adc
pop
push
pop
inc
add
fucomi
jp
cltd
and
jle
xchg
add
mov
jmp
test
mov
daa
add
sahf
pop
popa
decl
push
scas
sbb
mov
cmpl
test
and
rcl
popa
sti
ljmp
icebp
mov
clc
sbb
mov
mov
icebp
ja
cs
xchg
mov
popa
or
push
fisttpll
push
aas
push
jp
clc
incb
push
cmpsb
xchg
sti
pop
mov
sbb
dec
lock
repnz
mov
jb
adc
je
jecxz
shrl
lcall
sbb
lahf
imul
cltd
les
icebp
sub
add
roll
pop
adc
imul
xchg
aam
jecxz
pop
cmpsl
mov
xchg
push
in
adc
repnz
movsbl
dec
repnz
mov
mov
mov
adc
in
dec
pop
push
leave
cmp
push
lret
addl
cmp
in
es
lcall
in
mov
mov
out
cwtl
lds
push
xor
fadds
setp
lahf
ret
mov
xor
pushf
xchg
lret
or
movsb
icebp
fldt
popa
lock
repnz
sub
push
mov
push
lock
ret
dec
fsubrl
xor
push
fadd
sbb
icebp
cmp
fadds
lods
dec
jne
mov
jle
dec
mov
fwait
nop
mov
dec
or
xchg
loop
adc
sbb
adc
dec
cs
xor
or
mov
addl
adcb
mov
fildll
es
stos
pop
push
shr
pop
repnz
mov
adc
xor
andb
adc
orl
mov
mov
push
loop
pop
into
mov
call
jnp
repnz
mov
lret
ret
aaa
cmp
call
mov
pusha
neg
dec
xchg
ds
jb
pop
rcrb
xchg
pop
dec
xchg
in
repnz
sub
xor
rcll
imul
inc
jl
out
xchg
mov
sub
jp
inc
sbb
or
add
pop
jbe
push
mov
into
jecxz
or
stc
stc
and
jo
sbb
lods
jl
test
mov
lea
out
scas
enter
cmp
sahf
pop
movsb
xchg
mov
movsb
in
mov
fs
dec
js
test
insb
fcmove
jb
out
fs
repnz
fldl
adc
jne
out
xchg
cmp
mov
ds
pop
add
lret
inc
aas
rolb
pop
or
inc
int3
inc
jp
cmpsb
mov
adc
jbe
rorl
iret
lcall
es
push
jge
mov
sarb
inc
fwait
or
cmp
repnz
xor
int3
add
dec
lea
xor
or
sbb
popa
pop
adc
mov
mov
ds
push
clc
fdivrp
jb
push
mov
pop
arpl
iret
push
adc
cld
sbb
iret
mov
outsb
jmp
mov
pop
fcmovu
fadd
mov
test
sbb
add
lds
mov
or
dec
mov
and
icebp
int
lret
jp
mov
xor
pushf
xor
lcall
je
std
enter
or
sub
scas
in
push
popl
das
mov
mov
xor
xchg
push
inc
mov
and
xchg
dec
fdivrl
jge
jb
jl
mov
enter
inc
jo
and
cmpsb
shr
fildll
add
cltd
iret
and
adc
adc
add
xchg
in
imul
pusha
inc
bound
push
dec
or
mov
je
out
fcmovnu
mov
sbb
or
lahf
fs
jge
push
pop
sbb
inc
jne
pop
adc
xchg
push
repz
pop
shrb
lods
ljmp
mov
mov
arpl
xor
inc
out
jb
sub
mov
cld
push
lcall
pusha
test
rorb
iret
or
roll
out
jo
and
notl
jno
sub
call
movsb
mov
popa
hlt
lock
and
aaa
out
cmp
add
push
lea
outsl
cld
fmuls
ljmp
jg
cs
mov
movsl
in
sub
nop
pop
jo
mov
lret
mov
xchg
xchg
cmp
xlat
ret
fxch
repz
pop
loop
mov
and
mov
pop
lahf
je
mov
lods
cmpl
sbb
cli
loope
pop
int3
mov
fnstsw
mov
aad
out
ja
or
adc
mov
push
mov
adc
xchg
dec
push
xchg
add
jno
out
pop
daa
mov
roll
imul
stos
add
frndint
xorl
adc
mov
notl
pop
repz
ds
sub
and
test
add
xchg
adc
vprotb
scas
lods
lods
cmc
pop
mov
iret
mov
push
dec
arpl
fdivrs
ja
jne
xor
stc
repnz
in
cltd
dec
pop
and
icebp
push
mov
out
jno
fistps
xlat
movsb
cmp
jbe
lds
std
jmp
sub
scas
and
ret
fstl
outsb
pop
fisubrs
add
cli
mov
push
in
mov
aad
xor
out
icebp
test
ss
xchg
imul
mov
scas
dec
fisubrl
adc
mov
pop
in
test
push
jns
sbb
mov
sbb
stc
das
mov
neg
xor
popa
in
gs
insl
mov
aam
jo
jo
movsl
das
fdivrl
cld
iret
push
out
mov
mov
aas
mov
xchg
into
dec
jmp
popl
mov
pop
divb
jne
jmp
adc
and
dec
sub
jnp
mov
in
push
jo
ficoms
jmp
aas
xor
push
stc
ljmp
or
and
arpl
insb
scas
mov
je
std
in
imul
adc
push
jecxz
and
loopne
sub
repnz
xchg
loopne
es
jne
sub
fstpt
pop
lret
cld
inc
fcmovnb
ret
jle
pop
roll
insb
dec
scas
push
stos
lcall
test
pop
jne
cwtl
push
movsl
sub
pop
int3
pusha
add
push
xchg
rorb
call
shll
ss
xor
push
push
jle
mov
fldpi
mov
mov
pop
test
or
ret
pop
or
and
adc
pusha
xor
inc
pop
cld
and
sbb
std
cmpsl
sub
mov
sbb
insl
pop
iret
loop
add
test
inc
aas
hlt
or
fbld
lahf
jne
push
jmp
lds
cs
stos
loope
and
es
xchg
inc
xor
les
sbb
and
push
xchg
iret
adc
mov
lahf
test
adc
adc
inc
sub
jge
pop
in
mov
scas
fs
outsb
mov
fidivl
pop
dec
adc
push
leave
or
into
stos
sub
lcall
notb
xchg
nop
push
jne
mov
cld
sub
subb
adc
mov
insl
dec
out
xor
jp
jbe
subl
xchg
movsb
mov
sub
loope
mov
mov
fiadds
dec
xchg
mov
cmc
ljmp
sub
test
outsb
cmp
out
inc
iret
mov
jge
stos
pop
sub
pusha
stc
pop
ret
scas
xor
int3
dec
pop
in
inc
mov
out
dec
adc
lods
nop
cli
repnz
mov
shll
outsl
pop
jo
xor
mov
ljmp
jo
mov
mov
or
add
icebp
test
mov
pop
jae
mov
adc
pop
and
pop
mov
dec
bound
std
cld
xlat
mov
aam
add
jle
push
clc
mov
movsb
imul
push
xchg
jnp
inc
jg
test
jae
jmp
in
xchg
popf
outsb
subb
mov
jle
xor
dec
je
dec
add
cmpsb
shlb
lods
movsb
mov
jp
insl
pop
ret
fstp
jbe
shrl
and
cmp
std
and
xor
nop
jge
dec
xchg
call
outsb
add
repz
xchg
ljmp
sbb
lahf
jg
mov
xchg
leave
and
or
dec
fbld
pop
aam
dec
movsl
xchg
mov
xor
out
sbb
lahf
push
lahf
enter
pop
sub
mov
jg
sbb
dec
dec
pop
sub
out
enter
ss
fwait
sbb
pop
xchg
mov
and
push
aas
pop
mov
dec
rcrl
xchg
inc
ss
gs
mov
mov
arpl
xchg
or
jns
ror
stc
repz
arpl
ret
cli
adc
les
movsl
lret
sbb
loope
push
insb
mov
mov
pushf
addr16
xor
mov
shlb
int
je
enter
ficoms
or
lds
jge
push
pop
jmp
xchg
popa
ljmp
jecxz
push
add
in
xchg
and
lahf
jg
neg
mov
testb
iret
loop
cmp
test
rol
dec
mov
bnd
aas
xchg
nop
xchg
and
ljmp
jmp
fmull
mov
rclb
out
mov
test
jo
or
jbe
dec
mov
cmp
push
cmpsl
icebp
iret
lea
movsl
cmp
cmpsl
xor
cmp
iret
mov
enter
into
in
mov
pop
aaa
cs
jne
jmp
lods
js
xor
je
nop
int3
cmc
rclb
in
neg
push
and
daa
enter
jne
aam
aad
xchg
lret
mov
dec
sbb
push
xchg
cwtl
pushf
dec
mov
and
insl
pop
jl
movsl
mov
jb
and
mov
hlt
adc
into
jb
mov
fisubs
and
out
sbb
sti
mov
adc
cmp
je
test
mov
pusha
jmp
shll
test
pop
jge
mov
push
es
mov
xchg
insl
sub
adc
dec
xchg
imull
fiadds
push
sub
xor
adc
mov
jg
subb
pop
sbb
movb
jo
jno
sub
fs
lock
adc
scas
cmpsb
aad
inc
or
pop
push
lds
xor
sub
popf
imul
je
cltd
push
icebp
test
jns
sub
sub
adc
fcompl
jmp
out
int
mov
lods
mov
sbb
or
shlb
add
push
pop
andb
push
movsb
test
push
mov
jb
pop
dec
es
rolb
sbb
stos
lret
das
enter
jmp
addl
sbb
mov
pop
clc
jns
adc
mov
xchg
divl
push
mov
ds
fsubrs
in
in
jb
popf
add
sbb
add
pop
jl
mov
aad
or
mov
sbb
rcll
cwtl
push
stos
mov
xor
xchg
cmpsb
or
fs
lahf
inc
jb
imul
shl
or
jecxz
insl
push
and
addr16
and
outsb
arpl
and
dec
fsubl
or
xor
xchg
jge
adc
clc
push
inc
mov
jmp
mov
rcr
in
pusha
cli
in
cli
and
push
jne
mov
jns
or
push
call
lcall
std
xchg
icebp
fbstp
into
cmpsb
jp
test
mov
xorl
das
xor
das
lret
gs
lret
mov
mov
jl
fbld
dec
rorb
out
jp
sbb
clc
lcall
packsswb
ret
imul
xchg
dec
inc
add
lods
adc
mov
sbb
shll
push
jb
call
jbe
lods
pop
test
lret
sbb
adc
fiaddl
cmpsl
pushf
xchg
lock
out
mov
adc
fcompl
xor
jmp
push
xchg
pop
fcmovu
sbb
fidivl
scas
nop
out
mov
mov
mov
mov
jle
and
mov
inc
rcr
jp
clc
leave
notb
clc
stos
push
jg,pn
push
jmp
rclb
cmp
stc
mov
or
jmp
mov
stc
jmp
add
ret
pop
cmp
pop
je
fwait
cmc
jl
mov
incb
mov
push
pop
add
push
cmp
sub
dec
cmp
adc
pop
bound
pop
aas
add
cmc
add
stc
adc
pop
pop
push
test
pop
pop
pop
inc
outsb
dec
xor
ret
push
and
sahf
scas
xor
andb
popf
arpl
sbb
loope
out
pop
jbe
push
cmp
push
clc
and
sbb
add
and
jne
add
pop
pop
jge
adc
lock
mov
pop
inc
shr
clc
in
adc
pop
dec
das
out
cmp
stos
mov
orl
mov
mov
scas
pop
in
xchg
fcomps
mov
dec
mov
shl
das
cmp
jmp
or
sub
pop
and
push
push
out
cwtl
repnz
js
adc
inc
fnsave
outsb
pop
in
adc
stc
idivb
mov
movsl
mov
ficoms
dec
mov
cmp
cmp
call
movsb
outsl
test
stc
push
xor
rorb
jno
imul
lds
adc
jl
push
mov
dec
sahf
daa
cmpb
mov
stos
popf
rcll
xchg
jle
add
push
sbb
out
mov
mov
jmp
rcrb
cld
push
jecxz
mov
stc
inc
fcomps
stc
jle
push
aas
cld
jne
lcall
push
sahf
std
mov
or
call
loopne
outsl
minps
loopne
rcrl
adc
or
or
adc
arpl
sbb
xlat
pop
bound
fdivp
sub
arpl
sbb
dec
jp
add
repnz
icebp
xchg
xor
sub
mov
mov
sbb
addl
sub
orb
movl
mov
aad
or
mov
jnp
cmp
or
addr16
jnp
fildl
pop
mov
mov
dec
out
je
fisubrl
fcoml
ss
inc
mov
faddl
adc
dec
rcl
in
xchg
jnp
pop
jb
push
xchg
loope
pushf
loop
push
mov
fisttpl
mov
test
out
test
ds
xor
xchg
pop
pop
ljmp
push
push
out
imul
xchg
mov
fcoml
xchg
scas
jbe
jae
xor
aaa
xchg
push
in
sti
pop
fcompl
scas
repz
jge
inc
jae
ss
xor
pop
jnp
lahf
xor
jbe
push
repz
insb
aam
in
stos
es
je
pop
inc
sbb
ret
mov
lahf
and
iret
sbb
pop
out
js
pop
push
push
mov
adc
dec
out
pop
cmc
aas
mov
adc
out
aad
int3
pop
mov
hlt
test
fiadds
fldl
imul
std
sahf
mov
push
xchg
push
jne
cmc
push
arpl
and
push
les
nop
push
outsl
dec
stc
stos
lods
pop
rolb
in
adc
dec
inc
rorb
popf
lret
and
in
gs
test
xchg
xbegin
push
fdivrl
sti
imul
cmp
rorl
adc
mov
push
fsubp
and
jmp
sub
pop
pop
xchg
or
sub
arpl
xchg
mov
mov
jns
mov
jb
fistpl
inc
pushf
add
inc
or
inc
pusha
and
jecxz
test
or
add
jno
pop
or
mov
out
pop
or
jo
popa
test
out
and
sub
out
sbb
pop
dec
push
push
pop
xchg
aam
jp
and
test
push
inc
push
push
or
jnp
cmp
aam
fsubs
or
test
std
add
mov
cwtl
mov
aam
jl
inc
xchg
icebp
mov
push
adc
xlat
int
jmp
jns
pop
xor
inc
in
pusha
and
out
add
pop
inc
and
movsl
mov
xor
pop
sbb
and
or
and
in
sbb
lret
xchg
and
sbb
pop
add
imul
leave
call
fxtract
out
dec
fs
mov
jnp
stc
push
ret
lea
out
xchg
cmpsl
fisubrl
clc
rcll
imulb
jmp
ljmp
pop
movsb
push
movntps
scas
insb
sti
pop
aad
mov
mov
popf
push
mov
push
call
jnp
std
jb
aas
xor
ljmp
fs
mov
and
in
movsl
push
sub
sbb
cmp
jb
or
sbb
hlt
xor
fsubs
enter
push
dec
rcl
add
and
fistl
sbb
es
ljmp
js
out
imul
xchg
xchg
fsubp
add
lods
stc
loope
dec
sahf
or
out
mov
mov
and
jmp
int
xlat
pop
mov
xchg
jns
dec
jmp
cwtl
and
arpl
repz
lahf
call
cmc
cli
sar
jno
and
mov
cld
fbstp
fisubrs
pop
jae
inc
cmc
incl
jp
xlat
int
icebp
sub
cli
cltd
je
xorl
frstor
pop
sub
sarl
dec
movsb
dec
pop
enter
aad
into
mov
arpl
lods
cmp
lcall
or
test
push
addr16
mov
and
pop
and
stos
mov
gs
loopne
cmp
pop
jnp
pop
outsl
xor
push
clc
sbb
jns
xor
push
imul
pop
push
add
addb
dec
and
mov
hlt
add
mov
aaa
ja
sbb
shrb
jg
lret
cmpsb
cmpsb
aas
xchg
cmpsb
outsl
stos
test
nop
adc
mov
cs
or
addr16
xchg
notl
aaa
mov
xlat
dec
push
aad
mov
std
rcll
mov
lods
iret
and
cwtl
mov
jmp
dec
pop
in
jle
insl
cmp
es
mov
xchg
ret
dec
sub
ss
push
fstpt
lahf
rorb
in
lods
stos
je
lcall
hlt
les
addr16
xchg
scas
addr16
fnstsw
sbb
jecxz
push
leave
leave
pop
outsb
push
divb
or
mov
inc
sub
incb
mov
pusha
pushf
dec
in
mov
and
fidivrl
xor
rcrb
lret
jge
mov
into
xor
xor
jb
clc
mov
fimuls
jl
dec
hlt
cltd
inc
cli
in
dec
jle
xchg
push
outsl
fwait
push
fimull
nop
iret
lret
push
fcoml
cli
mov
mov
xchg
sahf
rcl
push
popa
out
scas
or
je
shl
and
cltd
dec
test
nop
mov
movsl
or
push
cmpb
xor
add
cmp
sbb
repz
lods
push
mov
xchg
testl
insl
call
xor
adc
mov
sbb
push
and
add
xchg
dec
loop
movsl
fstp
sbb
inc
popa
xchg
push
into
orl
lcall
fdivr
hlt
nop
jbe
out
lea
shrb
daa
das
jbe
inc
jne
adc
jbe
ljmp
mov
lret
test
mov
pop
pop
mov
cmp
sbb
jp
pop
shrl
cmp
xchg
adc
in
cmp
dec
push
loope
pop
insl
cmp
out
out
leave
test
out
xchg
pop
je
mov
inc
add
pusha
and
mov
stos
sub
inc
inc
jns
rcrl
pop
xchg
test
fisubl
pop
arpl
and
xlat
imul
rolb
mov
cmpsb
jbe
push
rclb
lods
mov
nop
rclb
dec
adc
sbb
push
pop
test
mov
int
arpl
int
mov
sti
push
mov
not
push
sub
imul
or
sbb
movsb
mov
decb
stos
xchg
inc
popf
mov
shlb
xchg
mov
ror
test
cmp
and
xor
ficoms
sarb
jp
adc
imul
in
or
sarb
ljmp
mov
dec
rol
arpl
mov
xor
sbb
sbb
int
push
jbe
nop
idivb
dec
mov
lret
loopne
add
testl
dec
mov
int
fisttpll
jecxz
in
xor
aas
fwait
pop
iret
test
mov
fnop
mov
testb
sbb
and
loope
test
xchg
roll
nop
mov
sbb
xchg
mov
pop
ror
insb
dec
jp
test
aam
ret
mov
xchg
inc
addl
mov
pop
and
pusha
mov
push
repnz
repz
and
mov
shlb
jmp
gs
addr16
push
push
cmp
jp
cmp
cs
pop
add
lock
stos
test
test
mov
sahf
add
bound
hlt
sar
sbb
insl
stos
test
add
cli
rcrl
mov
ret
icebp
lods
loope
enter
add
in
push
dec
ja,pt
or
addr16
or
mov
out
adcb
insl
loopne
fbstp
mov
adc
leave
pop
leave
test
mov
into
sbb
add
cltd
popf
jno
fistpl
stc
push
adc
adc
and
mov
mov
lods
or
cmpb
ljmp
sbb
xor
cmc
mov
les
push
popa
jae
loop
mov
push
outsl
fimuls
orl
dec
scas
sarb
in
push
adc
sbbl
cmp
push
sbb
cld
xor
push
pop
and
inc
cmp
pop
sub
xorl
neg
loopne
call
in
movsl
xor
pop
icebp
fisubrs
mov
pop
out
add
inc
lret
in
dec
push
dec
or
scas
inc
mov
xchg
sbb
repz
aaa
lods
add
lahf
sahf
push
sahf
fwait
jge
sbb
imul
dec
mov
out
xchg
jge
mov
mov
dec
shll
or
adc
or
shll
shrl
inc
shrl
mov
in
rclb
pusha
out
nop
jne
int3
and
pop
scas
add
push
xchg
mov
cmp
add
lods
imul
xor
cmc
mov
dec
cld
addl
or
pop
adc
push
in
mov
out
iret
mov
xor
test
nop
and
fwait
xor
les
loop
scas
or
or
aad
into
xor
xchg
and
mov
pop
jo
test
imul
cmp
xor
inc
divb
inc
and
adc
ret
loopne
mov
cmpl
mov
sti
jne
or
and
sub
sub
je
xor
xchg
push
sahf
push
or
inc
mov
nop
ljmp
or
pop
push
mov
popf
sub
dec
sbb
pop
sbb
sahf
fistpll
inc
cs
outsb
cmp
stos
mov
dec
mov
and
push
clc
pop
cli
ud2
xor
daa
or
pop
adc
test
outsl
outsb
push
mov
cmp
and
push
inc
test
sahf
mov
pusha
scas
push
stos
cmp
pop
insb
jl
xchg
xchg
or
ds
aad
movsb
out
in
hlt
out
sub
mov
xor
mov
rclb
pop
jae
pop
insl
nop
inc
lds
lds
leave
adc
push
xchg
xor
jge
lods
adc
sub
imul
push
push
cmpsb
addr16
daa
xchg
xchg
cwtl
pop
in
das
xchg
xor
lods
ja
jo
push
out
push
pushf
xchg
sbbl
sub
xchg
jle
inc
adc
popf
jg
inc
rcrb
jge
cmp
mov
lock
in
int
xor
lret
inc
icebp
adc
cmp
inc
jne
pop
fcoml
pop
push
cmp
pop
mov
dec
xchg
ds
add
adc
adc
and
jecxz
stc
ds
or
outsb
sub
dec
repnz
mov
aas
icebp
mov
scas
test
in
gs
mov
add
or
add
test
jno
inc
rorl
mov
in
push
jp
aas
inc
jo
pop
mov
pop
lea
jo
out
cmp
mov
inc
xor
mov
out
add
pop
xchg
sub
xor
xor
loope
mov
es
mov
fisttpl
fildll
fcomps
mov
test
into
lret
ret
pop
loope
pmaxsw
xor
add
dec
adc
inc
jns
xchg
jae
loop
imul
push
hlt
or
sbb
movsl
daa
and
cld
or
cmpsl
ret
adc
nop
lds
aas
inc
xchg
lods
outsl
mov
mov
mov
repnz
mov
adc
mov
je
sub
xor
push
mov
ret
out
xchg
push
push
push
push
xchg
dec
jbe
fidivrl
cmp
mov
jno
movsb
icebp
push
pop
jnp
cld
idiv
into
inc
scas
ret
insl
sahf
loope
push
loop
lods
dec
add
fimuls
and
jnp
pop
test
push
stos
adc
and
push
rcl
or
mov
pop
push
lods
fld
daa
pop
push
xchg
incb
int3
sbb
mov
jle
add
sub
in
call
insb
xchg
scas
inc
lea
cmpsb
std
push
push
loopne
push
rcrl
mov
pop
pushf
mov
cwtl
cmp
jmp
fxam
mov
dec
add
iret
or
dec
sub
jbe
push
sbb
inc
addb
sbb
sti
mov
mov
fists
icebp
addr16
lods
lret
push
cmp
insb
xor
popf
mov
xchg
or
cmp
mov
and
mov
bnd
dec
push
cmp
loop
push
and
ret
pop
fwait
stos
int
test
add
repnz
or
push
jg
dec
push
jns
hlt
shr
ds
push
dec
mov
out
stos
jne
jp
mov
jns
movlps
in
xchg
cmp
dec
jns
jmp
leave
inc
pop
lock
loop
popa
or
adc
sbb
mov
loop
push
xchg
cmp
jno
fsts
clc
cmp
mov
movsl
pop
ljmp
xchg
pop
lcall
jg
inc
mov
jp
insb
cmp
popa
xchg
popa
jmp
aaa
xchg
mov
xchg
mov
adc
push
inc
mov
and
out
adc
je
aaa
adcb
xor
jmp
hlt
pop
cs
xor
jne
mov
arpl
cmp
dec
insb
mov
lock
clc
mov
mov
xchg
adc
or
jo
push
mov
and
xchg
jae
outsb
cmp
sub
jae
lock
test
hlt
sbb
out
xchg
adc
lds
dec
mov
xor
clc
fldcw
ja
fmulp
test
adc
jmp
rol
lea
cwtl
nop
mov
xor
rep
movsb
pop
dec
xor
cltd
and
lret
or
add
loop
repnz
jnp
fmuls
mov
mov
inc
adc
dec
sbb
dec
filds
add
sbb
movsl
xchg
mov
push
pop
daa
adc
lret
pop
sub
sbb
pop
lock
cs
icebp
xchg
rcl
inc
and
jge
cld
cs
outsb
outsb
add
aad
mov
xor
mov
and
and
xchg
inc
lret
and
dec
xchg
pusha
xor
dec
push
push
mov
stos
pop
cwtl
jns
lret
int
cmp
push
pop
popf
stc
in
mov
lds
add
inc
cmp
jl
clc
popa
lea
jns
testl
inc
in
ret
ret
adc
stos
mov
jl
xchg
stos
pop
or
jne
lret
test
xchg
mov
xchg
inc
loop
popa
fwait
cmp
jno
inc
pop
jmp
scas
sub
aad
es
add
jle
mov
and
sbb
adc
arpl
mov
pusha
int3
jne
and
jns
push
cwtl
sub
rcr
sub
and
mov
push
jne
insl
pop
ret
mov
pop
fisubrs
das
movsb
sbb
imulb
add
cmp
adc
cmpb
pop
xor
cs
inc
sbb
into
hlt
mov
fldcw
iret
repnz
push
mov
adc
or
cmp
push
movsl
pop
mov
jge
xchg
rclb
pop
xchg
fstpt
xchg
jmp
jnp
call
ljmp
nopl
sbb
cmp
mov
mov
sbb
pop
pop
out
push
cmc
in
add
into
mov
lahf
cmpsl
or
mov
inc
mov
xchg
loopne
pusha
lock
or
mov
rcrb
adc
xor
cmc
roll
imul
popaw
shrl
pop
movsb
cmp
adc
pop
xchg
pop
iret
clc
adc
mov
scas
sbb
push
mov
fsts
inc
jge
mov
pop
jecxz
aas
mov
xchg
jne
nop
insl
scas
mov
les
fisttps
lea
push
fidivrl
subb
mov
das
call
insb
je
into
imul
mov
sbb
pop
sahf
sub
mov
popa
addr16
loop
test
or
lahf
fstpt
insb
or
sub
loop
test
lea
outsb
loopne
mov
adc
sub
std
xchg
or
mull
sub
add
xor
insb
pop
das
lds
into
dec
aad
sbb
in
pop
inc
sub
rcrl
mov
xor
ret
lret
stos
inc
dec
jne
bnd
push
cli
mov
inc
pushl
loop
arpl
adc
test
xchg
in
jbe
cld
pop
mov
dec
mov
add
call
test
sti
cmp
sub
lea
cli
jb
cmp
mov
mov
push
sarb
dec
sahf
sahf
movsl
leave
test
mov
push
int3
push
push
jp
insl
mov
test
or
imul
adc
out
jnp
int3
fistl
adc
pusha
add
add
shrb
pusha
scas
sbb
or
sti
popf
scas
int
shll
pop
pusha
lea
lock
fiaddl
xor
fcmovnu
sbb
adc
not
pop
mov
inc
xor
or
mov
jno
test
shrb
inc
sub
scas
call
mov
mov
mov
mov
xchg
cmp
lret
mov
out
mov
stos
les
xchg
stc
nop
lods
dec
fwait
and
mov
bndstx
test
imul
andl
xor
fmull
sarl
pop
xor
ret
std
cmpsl
dec
jb
pop
outsl
inc
sub
sbb
xchg
mov
sub
bound
lahf
inc
push
jns
stos
fisubs
dec
popf
sahf
cmpsl
lsl
and
nop
out
leave
lds
inc
jno
cltd
testb
mov
cli
jle
or
jne
mov
inc
pop
inc
dec
fnsave
dec
es
push
add
pop
lahf
mov
cwtl
test
aaa
pop
clc
mov
push
test
and
pop
push
lods
jl
pop
xchg
in
jbe
mov
dec
cld
mov
out
push
loopne
popf
xchg
push
xor
cmp
cmp
and
sarb
sbb
or
js
xchg
mov
es
es
fadd
cmc
lods
mov
ljmp
sbb
loopne
stos
cld
mov
rcr
inc
pop
and
mov
rorl
fadds
push
and
es
fs
dec
fcoms
test
fs
adcl
xchg
int
pushw
jl
pop
push
mov
xor
jbe
popa
mov
jge
mov
jo
sbb
or
pop
notb
out
lds
xchg
dec
push
dec
jbe
and
aaa
nop
pusha
movsl
pop
xchg
fldl
cmp
or
in
push
nop
and
popa
ja
adc
out
outsl
sub
mov
mov
jne
enter
cmp
sbb
iret
jae
arpl
es
out
fadds
cmp
movsb
adc
test
sysenter
xlat
jnp
push
cwtl
jmp
adc
mov
jp
push
xchg
mov
add
loopne
mov
or
dec
and
andl
mov
scas
add
ja
out
out
add
pop
or
inc
mov
iret
in
jmp
push
push
cmp
jo
push
and
xor
fbstp
ja
addr16
push
xchg
clc
xorb
lock
xchg
jmp
rcll
sub
daa
push
jnp
mov
jb
push
mov
ja
cmp
inc
jmp
stos
sub
cmp
mov
sub
in
jecxz
clc
xchg
in
or
jmp
inc
clc
mov
xchg
sbb
and
sbb
aam
cltd
adc
aas
cmp
mov
dec
adc
ljmp
mov
iret
sbbb
loopne
lret
lock
in
mov
xor
std
incb
outsb
lret
jb
gs
mov
into
insl
ret
xchg
ret
sbb
adc
imul
out
shrl
repz
out
add
arpl
mov
call
mov
or
mov
std
scas
push
and
sbb
out
rcrb
push
icebp
pop
sub
mov
push
lock
sbb
test
fcomps
ret
arpl
in
inc
into
cmpsl
repnz
rolb
gs
lock
popf
call
push
movsl
mov
and
mov
fs
dec
and
test
xor
das
jo
lret
hlt
cmpsb
into
dec
pop
in
adc
jmp
stos
lret
mov
ja
dec
jno
pop
jp
inc
add
hlt
sub
jl
inc
pop
addr16
nop
push
inc
xor
push
push
sub
jg
mov
cmc
jl
mov
aaa
mov
imul
sarb
xor
js
or
push
fisubs
mov
push
mov
lea
subl
test
mov
in
punpckhdq
movsl
stos
mov
sub
lock
dec
mov
outsb
pusha
jmp
lret
test
sbb
enter
xor
aaa
ret
dec
pop
pop
add
cmp
pop
dec
and
mov
mov
es
shrl
cmp
addr16
test
or
fidivrs
inc
cmp
ljmp
mov
insl
roll
xlat
sub
inc
stos
lea
inc
dec
jl
ret
sbb
dec
enter
cmp
cmp
call
outsb
and
popl
int3
xchg
xor
jno
stc
je
insl
mov
inc
insl
mov
popf
punpcklwd
add
mov
mov
stos
add
outsl
jb
out
loope
mov
aaa
jecxz
jg
insb
sub
push
addb
push
imull
jne
mulb
pop
test
ss
add
adc
sti
nop
test
pop
xor
pop
add
inc
mov
outsl
mov
cli
and
popa
movsl
cmc
mov
or
sarl
dec
js
add
add
sub
lahf
add
scas
rcr
mov
add
loopne
popl
aaa
xlat
add
in
repz
or
fists
sub
xchg
aas
push
pop
mov
in
xor
int
popa
pop
cmp
add
ds
aam
mov
ret
lcall
repz
cltd
sub
xchg
and
mov
cld
or
push
adc
loopne
leave
cmp
sbb
adc
mov
ljmp
jle
cmp
and
fdivrl
arpl
push
cwtl
sbb
inc
mov
mov
mov
push
push
hlt
push
pop
mov
mov
out
mov
arpl
cmp
pop
aas
roll
out
in
inc
pop
cld
mov
and
mov
mov
dec
and
fcoml
jns
sbb
xchg
pusha
push
inc
xchg
pop
clc
push
sahf
cli
sbb
pushf
lret
repnz
xchg
inc
cltd
dec
adc
pop
cs
cmp
dec
dec
adc
lods
into
cmp
lods
rdpmc
add
sub
mov
adc
pop
sub
int
cmp
into
push
or
cmp
pop
xchg
inc
xor
push
sbb
aaa
push
test
leave
mov
lds
ss
movsl
addb
in
xor
cmpsb
sbb
test
sbb
pop
add
push
adc
cltd
test
pop
mov
add
repnz
aaa
or
mov
js
loop
stc
mov
inc
push
pushf
inc
test
test
jb
adc
into
jp
lret
testl
dec
push
mov
push
nop
jb
outsb
jbe
sbb
gs
nop
mov
mov
mov
jb
mov
insl
cmc
stos
jg
cmp
movsl
movsl
xchg
push
loop
roll
push
lcall
iret
sti
loopne
sarb
aaa
test
xchg
pushf
jb
jb
sbb
pop
daa
adc
mov
mov
jp
pop
rcrl
lret
jbe
sub
lret
cmp
scas
sbb
nop
lock
mov
or
jae
sbb
dec
aas
ja
movsb
mov
adc
mov
ret
scas
das
ficoms
push
jne
and
fisttpl
sub
cwtl
repz
sbb
ret
repnz
rcr
fiadds
cld
pop
cmpb
mov
jge
push
jg
lret
pop
fadd
and
nop
adc
jnp
and
addr16
test
xor
out
push
call
cli
xchg
or
addr16
mov
loop
imul
dec
adc
mov
std
cmp
mov
movsl
lock
mov
lcall
hlt
dec
push
andb
inc
repz
aas
mov
cwtl
mov
pop
push
cld
sub
lcall
xor
push
xchg
stc
movsl
pop
mov
push
out
test
out
jp
mov
rcrl
int3
jp
cmp
jns
mulb
stc
in
std
fnsave
mov
psrld
adc
sub
fildl
mov
add
ret
jge
insb
push
push
pop
xor
pop
push
jmp
lahf
pop
cmpsl
mov
add
mov
lret
sbb
das
mov
mov
push
loop
mov
xchg
iret
fstpt
std
sub
mov
add
ret
data16
mov
xchg
or
ss
fucomip
xlat
sub
jns
shll
add
gs
cli
lret
pop
imul
inc
push
les
loop
loopne
xor
xchg
test
mov
xor
cmp
pop
int
stos
lods
fwait
rcrb
xchg
out
push
push
lea
inc
out
int
pushf
inc
push
sbb
add
xor
in
lds
mov
inc
scas
cmp
mov
xor
mov
repnz
shrl
rolb
mov
xor
out
mov
mov
rorl
ds
cmp
fistl
fistps
push
jno
ja
jge
mov
mov
shll
pop
mov
mov
cmp
fdiv
mov
jb
loope
or
or
jmp
scas
sub
js
imul
imul
fisubl
pop
cs
je
repnz
mov
dec
cmp
adc
sub
mov
sbb
mov
fs
add
inc
jb
jne
out
loop
sub
lock
insb
jb
mov
lret
pop
xor
rorl
fistps
fs
gs
mov
mov
inc
mov
fcoms
clc
add
popf
adc
dec
cmp
jbe
daa
fwait
or
fimull
mov
fildl
push
cmp
cmp
or
jbe
xchg
add
pop
mov
add
movsb
pop
and
out
add
mov
mov
cmpsb
cmp
jo
mov
xchg
cmpsb
cmp
aad
js
mov
mov
sbb
mov
dec
das
adc
in
in
mov
call
icebp
lret
pop
dec
and
insl
or
cld
xor
popf
dec
xor
push
pop
hlt
fimuls
andb
rorl
fldenv
out
xchg
mov
mov
xchg
mov
addb
pushf
clc
or
mov
and
push
mov
jb
adc
or
repnz
aam
jae
adc
push
shrl
add
sub
inc
cltd
test
adc
jbe
in
ficoms
xor
mov
dec
aaa
pusha
mov
movsl
pop
jbe
std
sbb
pop
das
arpl
ret
call
lret
or
loop
jecxz
xor
adc
jge
pop
fisubrs
inc
sub
repnz
ja
inc
pop
or
stc
stos
jp
jecxz
insb
call
jns
cmp
fistpl
ds
loope
scas
mov
aam
cmp
jns
fisttps
aad
roll
lret
das
adc
push
bound
add
xor
or
dec
and
in
inc
jo
loope
movsl
repz
and
adc
inc
in
xor
adc
xchg
or
inc
xchg
or
je
mov
aam
enter
insl
adc
inc
push
cmpsb
call
adc
orl
dec
inc
mov
sbb
xchg
and
out
adc
sub
call
cmp
rorb
sbb
mov
sub
mov
xchg
js
xchg
mov
pop
pop
adc
dec
bound
sbb
adc
dec
jg
mov
jbe
fwait
into
xor
aaa
xlat
fucomi
insl
cmpsb
inc
pop
adcl
mov
lret
xchg
cmp
jo
addr16
leave
jmp
repnz
outsb
std
ret
mov
pop
aaa
mov
jge
sbb
scas
daa
outsl
ds
pop
push
bnd
or
pop
xlat
xchg
daa
xchg
jle
push
jp
lret
pop
scas
ret
push
pop
daa
and
lahf
mov
xor
cmp
pushf
jecxz
scas
add
jl
xchg
pop
in
push
outsl
mov
xchg
xchg
mov
mov
addr16
add
push
mov
ja
jge
inc
or
push
push
cmp
sbb
imul
add
sub
rcr
and
jmp
xchg
sbb
jecxz
mov
mov
and
pushf
test
inc
nop
mov
jb
stos
fisttpll
ljmp
cmp
mov
movsb
xlat
sub
cltd
mov
in
cwtl
push
sub
dec
inc
inc
and
repz
cmpsl
add
arpl
sub
pop
lcall
pop
stc
sub
mov
mov
mov
or
ficompl
fidivl
mov
fwait
xchg
stos
dec
pop
push
sub
iret
ljmp
lahf
fsubs
push
leave
jne
loopne
mov
or
ret
adc
js
jns
xchg
cmp
hlt
dec
pop
pop
pusha
sbb
fs
xchg
mov
icebp
xlat
aam
pop
shll
scas
lcall
out
xchg
xchg
xor
inc
in
adc
cmpsl
jecxz
jb
cmp
outsb
xor
repz
aas
xchg
jae
shrl
pop
je
sbb
frstor
add
data16
jle
clc
dec
sbb
pop
add
adc
das
xor
repz
fwait
js
jnp
inc
cli
xor
add
and
arpl
lret
enter
dec
add
pop
or
fcom
fs
and
fs
stos
arpl
icebp
inc
fsts
stos
sub
xchg
mov
mov
loopne
sbb
or
div
stc
xor
mov
aad
lcall
loope
push
xlat
paddusb
mov
repz
aaa
cmpsl
add
nop
dec
add
std
fyl2x
adc
movsb
pop
or
in
mov
ror
rorl
popa
daa
fists
pop
loopne
sti
pop
fs
jecxz
and
xchg
movsb
and
cs
and
rorb
test
scas
add
shlb
std
mov
out
push
push
cmpsl
push
stos
aaa
push
mov
aad
sti
repnz
rcrb
lds
addr16
pop
sbb
adc
add
movsb
jne
testb
icebp
rorl
jge
dec
shl
pushf
inc
decl
test
dec
cmp
and
pop
cwtl
shll
fisttpll
ss
sbb
sbb
je
add
loope
push
push
insl
out
pop
fs
rclb
mov
cwtl
cmp
fstps
dec
loope
sti
pusha
pop
mov
in
js
arpl
jl
adc
cld
in
insb
imul
es
or
repz
adc
jmp
push
inc
cmp
xchg
fstpl
mov
jb
pop
aam
cltd
push
out
pusha
mov
out
mov
in
jbe
push
pusha
sub
lds
loopne
in
sbb
xchg
test
cld
mov
or
adc
scas
pop
jmp
sub
sbb
jmp
push
mov
test
mov
js
xchg
test
out
js
icebp
aad
jae
and
mov
mov
dec
es
movsb
pop
in
loope
test
mov
js
lods
loopne
pop
jl
fldl
cmp
fsubl
in
dec
push
movsl
xorb
pop
out
je
stos
lret
hlt
sub
pop
inc
pusha
cmc
test
or
clc
inc
or
clc
mov
aaa
rcr
pmaxsw
icebp
xchg
dec
jb
movsb
ret
and
pusha
clc
mov
lds
inc
std
sub
test
sbb
in
iret
enter
lahf
loopne
inc
cmpsl
jg
add
xor
popa
ss
out
pop
xor
and
out
and
xchg
xchg
scas
adc
adc
or
arpl
xchg
scas
sub
sub
inc
pop
sub
ret
stos
jecxz
mov
out
shrl
dec
clc
cli
lds
fldenv
imul
pop
cli
pop
cmpsb
and
pop
bound
jg
jp
rorl
dec
pop
stos
cmp
adc
loop
adc
jnp
roll
hlt
push
test
mov
and
movsl
std
ret
inc
dec
pop
ss
test
pop
sbb
and
movsb
cmp
out
mov
movups
add
mov
leave
lods
in
ljmp
xlat
addr16
jno
leave
fwait
rcrl
sub
clc
adc
xor
popf
xchg
repz
adc
sbb
das
sub
or
or
scas
push
mov
xchg
and
shrb
imul
jge
rolb
mov
fnstenv
jb
inc
test
popf
xchg
jo
add
cs
dec
xchg
fnstenv
outsl
adc
xor
mov
cmp
dec
pop
xchg
test
pop
jge
push
mov
les
add
les
imul
aad
pop
push
fs
test
out
pushf
cmc
xlat
jle
pushf
lds
pop
cmp
and
xchg
loop
mov
pop
sbb
fistpl
sbb
push
rcll
stos
sub
adc
cmp
je
pop
stos
cs
sub
mov
out
mov
mov
dec
iret
mov
mov
insl
lcall
sti
inc
lods
cmp
in
fldcw
fisubs
mov
out
fmulp
xchg
sbbl
stos
and
sub
ret
and
mov
test
cwtl
aam
add
icebp
rorl
aaa
popa
fistl
sub
js
add
adc
adc
lcall
xchg
repz
push
inc
fistpll
ljmp
movsb
jbe
faddp
stos
rcll
sbb
lahf
scas
cld
decl
sub
loop
cmp
and
int
jg
push
mov
sbb
cs
sbb
jns
adc
jo
mov
xchg
mov
mov
iret
lret
insl
xchg
outsl
and
hlt
jbe
mov
cmp
xchg
sbb
frstor
xor
fisubrs
cmp
xor
add
jmp
pop
aad
cmpsl
icebp
ja
mov
jmp
and
cmp
mov
push
or
adc
adc
aad
adc
outsl
xchg
jne
in
pop
aas
sarl
mov
pop
sbb
sbb
cmc
roll
mov
fdivrp
adc
lods
hlt
xchg
push
aas
int
add
or
push
aas
in
filds
js
je
xlat
orl
push
ds
jns
fs
xor
call
pop
lods
jecxz
gs
push
aad
add
jl
popl
int
aad
stc
add
mov
pop
fdivl
hlt
cmp
in
and
pop
arpl
dec
int
mov
jle
rol
pop
push
out
stc
dec
pop
cwtl
subl
cs
cmpl
repz
scas
lods
ret
dec
mov
repnz
pushf
arpl
pop
jge
leave
roll
xchg
cmp
ljmp
adc
push
stos
mov
cmpsl
jno
call
outsb
call
test
fiadds
dec
add
in
lds
mov
jle
roll
dec
mov
jne
mov
mov
lods
ljmp
sub
aam
xor
out
ret
mov
in
push
ja
gs
fwait
sbb
mov
test
ja
fwait
pusha
mov
mov
sub
or
or
jmp
shll
rcl
std
loope
test
ds
jle
dec
imull
test
sahf
sbb
aaa
mov
in
inc
mov
mov
mov
push
or
loope
bt
in
jmp
iret
xchg
xor
and
or
inc
fcoml
inc
iret
xchg
dec
push
mov
adc
scas
or
imul
pop
push
cmp
pop
push
and
cld
add
push
jb
test
sbb
or
clc
test
dec
cltd
out
mov
adc
or
sub
pop
mov
gs
outsb
xchg
sub
idivb
jb
mov
scas
ret
movsb
xchg
sbb
jns
pop
jmp
cmp
cs
sbb
push
push
push
sub
orl
insl
pop
cmp
shl
lret
ret
xchg
push
push
cmp
in
mov
sub
lock
push
inc
cmp
fisubl
jns
mov
cwtl
mov
iret
mov
adc
loope
xor
xchg
pusha
js
stc
popa
shrb
stos
ds
movsl
inc
int3
lret
clc
jg
scas
dec
fstps
add
rcrl
int3
fsubs
add
dec
adc
inc
adc
add
shll
pushf
xchg
mov
inc
mov
xor
xchg
and
and
movsb
dec
sub
sbb
test
mov
lcall
sub
jne
push
out
push
and
data16
sbb
mov
add
outsb
shlb
inc
test
lret
sti
int
test
fdivs
pop
mov
sbb
aad
pop
jne
or
ret
cmp
daa
or
mov
xorb
mov
xlat
pop
jle
rcl
decl
es
test
out
es
out
pop
out
test
rcr
pop
and
loop
aam
lods
jbe
mov
movsb
rcr
mov
fisttps
loop
stos
sti
mulb
js
mov
dec
lock
pop
stos
pop
jb
subl
lahf
clc
jno
or
mov
mov
push
push
push
or
fstps
cmp
xchg
lea
fnsave
js
repz
xchg
add
imul
ret
mov
ljmp
cli
iret
dec
stos
mov
je
push
aaa
test
lods
mov
inc
jbe
mov
xchg
ret
dec
bound
repz
cmp
daa
icebp
faddl
sub
push
pop
pop
jl
addb
lds
mov
mov
mov
push
jle
jae
or
pusha
loop
inc
add
xorb
adc
and
jne
xlat
fsubr
sbb
mov
dec
or
aam
adc
adc
adc
add
push
cmp
pop
adc
inc
adc
mov
enter
push
and
pop
mov
xor
aam
js
or
sbb
fs
push
rcrb
mov
mov
xor
xchg
jae
inc
iret
dec
push
and
and
jle
pop
cmpsl
and
mov
sbb
aam
rcr
mov
cmpl
add
pop
les
xor
fisubrs
push
in
xchg
out
sbb
cwtl
and
xchg
mov
dec
int
jle
out
std
xchg
mov
xor
pop
sahf
mov
jbe
jecxz
outsl
icebp
lods
test
iret
adc
pop
adc
insb
stos
test
xchg
dec
pusha
sbb
dec
sbb
and
enter
cmpsb
das
cmp
stc
popf
sbb
out
hlt
sahf
cmpsl
mov
shl
das
mov
subl
jg
ret
xchg
in
mov
jecxz
xor
add
loop
into
xor
mov
cmp
jle
mov
add
dec
and
mov
in
dec
roll
cmp
cmpsl
mov
or
mov
push
movsb
pop
das
push
sbb
jp
arpl
imul
das
imull
cmpsb
cmpsb
negb
mov
scas
stos
add
mov
scas
and
divb
dec
jae
out
ficompl
in
fildll
inc
mov
mov
int3
jg
fidivrl
mov
push
clc
pop
jge
cmp
add
jns
lahf
fldt
stos
push
pop
dec
std
cmc
mov
pop
fiadds
out
adcl
mov
imul
mov
cmp
ret
sbb
add
adc
movsb
push
pop
or
or
xor
lds
xchg
js
sbb
pop
xchg
cmpsl
jnp
mulb
loop
jg
bound
lahf
inc
inc
arpl
fidivs
push
icebp
xchg
je
cs
pop
cwtl
inc
pop
or
jae
xor
ja
jge
int
push
stc
xor
jp
les
leave
inc
sub
or
inc
fwait
mov
pop
xchg
xor
add
test
fidivrs
fildl
clc
dec
iret
mov
push
in
shl
leave
insl
fxch
cwtl
sbb
add
xor
pop
out
pusha
jne
loope
push
fstl
xor
outsl
xchg
cmp
jecxz
inc
js
dec
mov
repz
clc
add
hlt
jno
cmpsb
xorb
sub
jle
subl
sti
js
mov
fsubrs
cmc
inc
jge
push
add
mov
call
notl
mov
test
or
adc
in
add
xchg
imulb
vpunpckldq
xchg
mov
inc
movsb
mov
cli
jnp
mov
out
mov
and
xlat
push
sub
cmpsb
jle
repnz
ficomps
and
cld
hlt
mov
cmp
lret
enter
ror
or
adc
addb
lret
jo
xchg
mov
cmp
push
popa
sub
dec
loopne
jmp
sti
xchg
mov
ficoml
xor
push
cmpsl
mov
jnp
fimuls
aad
popa
dec
mov
inc
jmp
out
inc
xchg
cli
adc
sti
ret
pop
test
jnp
add
push
xor
out
and
arpl
xor
fwait
push
jl
dec
imul
and
mov
pop
sbb
insl
insb
push
imul
mov
aad
dec
pop
xchg
jbe
shrl
movsl
cmp
xchg
fldz
out
lcall
and
ss
lds
clc
mov
in
orl
bound
mov
jge
add
jne
nop
mov
cmp
push
ljmp
iret
movl
push
pop
iret
daa
cwtl
icebp
xchg
xlat
add
sub
fwait
xchg
cmp
pop
test
jmp
sahf
fstpt
inc
addr16
in
xchg
inc
mov
mov
push
push
std
shlb
adc
lods
loopne
mov
mov
adc
in
incb
mov
add
and
dec
scas
dec
dec
sahf
lds
xor
mov
aad
call
arpl
mov
mov
loope
int
int
mov
jae
data16
sub
idivl
cmp
jo
lea
divb
push
fnstsw
jmp
stos
pop
pop
mov
adc
mov
mov
arpl
xchg
lds
lea
movsb
xor
cwtl
xchg
mov
iret
inc
ret
add
sbb
xor
or
je
cld
dec
std
and
mov
movsl
mov
aam
push
pop
push
cmpsb
movsb
and
mov
faddl
gs
pop
push
sbb
dec
nop
aad
cmp
clc
ja
daa
into
inc
jp
and
lahf
sbb
adc
or
pop
mov
and
stos
mov
push
leave
push
fsub
and
cmp
and
pop
and
in
pop
mov
gs
test
rcr
add
fstpl
in
pop
sbb
xor
sbb
jno
fildll
insb
scas
nop
fistpl
adc
lret
pop
jb
fwait
cltd
jne
in
repnz
mov
dec
imul
mov
sbb
mov
mov
push
dec
sub
mov
and
cmc
inc
in
pop
mov
popa
lahf
inc
lock
add
loope
pop
outsb
jmp
insb
in
pushf
pop
push
scas
mov
dec
jl
call
xchg
jecxz
clc
inc
movsl
out
fs
jg
jge,pt
inc
bound
sub
cmp
xor
int
aam
xchg
ret
mov
inc
and
dec
sbb
and
or
push
lea
pop
jne
arpl
sub
lods
pop
int
pop
sbb
leave
je
icebp
ret
ret
ret
jl
fdivrs
test
add
dec
pop
outsl
jp
xchg
push
cltd
int
or
and
sub
nop
push
inc
and
hlt
mov
out
jne
xchg
sti
or
arpl
push
lahf
in
arpl
insl
cmp
ret
xchg
adc
mov
push
js
lods
inc
test
mov
add
das
mov
push
add
mov
popa
push
cmp
sbb
aaa
jmp
lret
popf
ret
jl
clc
leave
jg
shll
or
jae
rclb
push
and
xchg
dec
out
scas
inc
pop
iret
push
push
sbb
xchg
shll
fcomi
imul
shl
lock
push
ja
pop
ds
pop
les
cmp
xchg
movsl
adc
aam
xchg
xchg
mov
insl
rcrb
push
push
sti
mov
adc
sarb
sub
int
jg
outsb
sbb
push
add
cld
insb
pop
xchg
test
or
imul
imul
les
mov
gs
repz
in
imul
into
pop
movsl
fiaddl
cmp
mov
adc
and
mov
pusha
or
and
adc
mov
ret
xlat
out
out
pop
cmp
cmp
or
mov
ds
inc
cmc
in
jne
push
lds
mov
lock
das
bound
add
dec
jnp
dec
cmc
xchg
mul
cld
adc
jp
jle,pn
outsl
inc
lret
mov
lcall
and
clc
nop
jnp
jns
fcompl
xor
cwtl
lea
jl
fmulp
shlb
roll
pop
popf
lret
std
seto
mov
ret
movsl
lods
in
fcomp
rcl
lds
cs
xchg
add
and
rcrl
dec
mov
cmp
jge
jbe
js
cmc
dec
ret
dec
enter
dec
cmp
lock
pop
cmc
scas
jle
xor
leave
xchg
jne
ljmp
stos
fmull
ret
fimuls
jns
and
cli
push
jg
xchg
rcr
out
push
and
int
rclb
cmp
outsb
in
cmp
mov
in
dec
cmp
pop
sbb
ror
test
mov
xchg
cmp
mov
mull
aaa
ja
lods
jge
jge
push
push
imul
js
and
or
sbb
and
mov
les
lods
lods
and
inc
repz
in
xchg
and
dec
fbld
mul
int3
mov
inc
xchg
mov
or
sbb
mov
daa
push
dec
push
push
and
das
pusha
mov
out
hlt
adc
fwait
int
adc
arpl
inc
sarl
mov
inc
sbb
xor
pusha
lret
test
ss
adc
add
push
mov
sub
dec
loope
mov
stos
xor
cmp
mov
adc
mov
jmp
pop
mov
mov
ret
hlt
inc
scas
pop
aaa
mov
sub
cmp
mov
mov
mov
iret
sbb
fs
jae
inc
push
ret
jno
out
mov
test
ljmp
inc
popa
pop
mov
push
lcall
idivb
jmp
popf
or
das
inc
or
das
jecxz
das
in
push
xchg
xchg
jne
clc
cmc
inc
inc
lahf
mov
out
iret
loopne
mov
loop
fisttpll
cwtl
sbb
sti
mov
bound
pop
push
dec
xchg
ja
mov
xchg
ja
jo
or
mov
and
lds
adc
sbb
mov
arpl
cmpsb
jp
pop
push
jo
ds
movsl
das
outsb
leave
fwait
xchg
cs
out
leave
sbb
xor
loop
sbb
mov
mov
xor
sub
fincstp
stc
jmp
lea
jmp
add
loop
test
adcl
inc
stos
nop
push
cltd
jno
popl
int
sbb
mov
rcrb
sbbl
fmulp
sub
cld
rol
insb
inc
cwtl
es
cmp
incb
mov
inc
out
jae
es
ja
adc
stos
loopne
cmp
movsb
pop
sbb
push
cmp
xorl
add
nop
ja
pop
and
cmp
cmpb
pop
mov
or
cmpsl
ljmp
inc
shll
jmp
fisubl
scas
push
repz
mov
sarb
sbb
fs
adc
js
inc
xchg
jns
add
adc
mov
sub
loopne
arpl
mov
enter
adc
mov
lds
pop
gs
fidivrs
mov
test
dec
pop
movsb
sbb
shll
imul
adc
loopne
xor
popf
pop
inc
into
cmp
fbld
or
add
fsubrs
mov
fs
lods
xchg
sub
mov
lahf
adc
push
jns
fldenv
ljmp
xor
test
sahf
jo
pop
cmp
xchg
add
dec
jb
add
repz
fs
inc
pop
or
dec
lret
clc
test
pop
and
mov
packuswb
xchg
push
lcall
jno
sbbl
mov
jns
jge
enter
xor
mov
jno
shl
addr16
sub
sbb
push
mov
mov
inc
daa
pop
fdivl
ret
fdivrs
mov
dec
mov
cli
and
mov
xor
jae
push
mov
and
mov
aad
test
std
jne
xor
cmpsl
cmp
jnp
cmp
imulb
idivl
cmp
loop
roll
or
js
jp
push
imul
add
fdiv
bound
or
ss
pop
ss
xchg
dec
or
sub
mov
leave
ds
lahf
inc
filds
xchg
mov
add
sbb
mov
push
fdivs
xchg
or
mov
adc
adc
adc
ret
adc
xchg
cmp
shlb
push
test
or
jno
mov
loopne
mov
xor
push
dec
adc
pop
ds
mov
mov
xor
cld
aam
ss
mov
jo
adc
bnd
test
ljmp
gs
xor
pop
sahf
aaa
and
add
inc
shl
stc
sub
jae
dec
inc
fs
pop
test
add
jbe
mov
mov
nopl
jl
ret
gs
add
sbb
cmp
adc
lods
xchg
cmpsl
ljmp
xlat
cmpsb
int
lret
push
pushl
mov
pop
cltd
xchg
ljmp
or
dec
int
cmp
dec
sarl
or
xlat
adc
cmp
aas
arpl
inc
push
xor
negl
pop
and
mov
imul
cwtl
sub
mov
mov
ljmp
shll
mov
sahf
mov
mov
mov
bound
sbb
cmp
inc
jbe
add
popf
mov
adc
cltd
inc
xchg
jns
sbb
jae
das
sbb
and
sub
xor
xchg
or
clc
mov
or
add
outsb
mov
mov
jbe
out
stos
push
push
testb
outsl
add
inc
dec
add
or
mov
mov
outsl
xchg
fidivs
xor
mov
bound
mov
ja
aam
xlat
pop
mov
sub
fxtract
jb
inc
decb
dec
nop
xchg
nop
mov
jne
pop
or
cmp
lds
push
xchg
cwtl
std
dec
push
std
out
jmp
mov
mov
xchg
add
xchg
or
sub
fs
stos
mov
jmp
and
pop
decb
push
outsb
cli
icebp
fistpll
lock
mov
aaa
fistpl
inc
cli
loop
ljmp
data16
clc
lods
out
fsubr
dec
bound
inc
mov
mul
out
pop
test
cmc
mov
fdivs
xor
mov
sub
arpl
arpl
xchg
xlat
jmp
bound
scas
cwtl
xchg
mov
loope
movl
loopne
inc
lcall
cltd
jb
mov
repz
and
aam
loop
sbb
cmp
xchg
rcrl
daa
sub
mov
jb
cmc
or
cli
mov
ror
mov
out
je
repz
mov
sbb
ret
imul
inc
popf
mov
jbe
sbb
loope
div
ret
stc
aas
stos
dec
push
cli
insl
push
mov
lcall
push
icebp
dec
pop
loop
add
sbb
mov
cld
aaa
rcrb
lret
mov
cmp
iret
sbb
inc
movsb
scas
repz
and
xchg
insl
loope
push
adc
cltd
and
xor
jmp
xchg
mov
pop
testb
gs
std
stc
mov
jo
add
ja
xchg
jnp
cltd
push
fs
in
in
fbstp
add
divl
lock
lock
push
out
adc
pop
pop
and
imul
dec
fmull
add
mov
pop
sbb
test
push
les
imul
out
je
lcall
xchg
and
loop
xchg
out
xchg
sub
adc
fildl
mov
sub
notl
jbe
je
push
in
or
ficoml
out
dec
ja
outsb
popa
sbb
cld
js
call
loopne
out
loopne
push
fdivrl
shrb
cltd
mov
cwtl
jae
outsb
sbb
mov
lret
in
jne
push
popf
mov
inc
fwait
sbb
xchg
mov
mov
jp
xchg
faddl
mov
sti
pusha
js
dec
jnp
std
mov
subb
mov
daa
or
cmp
mov
movsbl
aas
iret
popf
fistpl
shlb
aaa
cmc
mov
orl
std
aaa
in
dec
int3
aas
stos
xor
xlat
add
sbb
mov
mov
adcb
mov
test
pop
js
mov
push
jnp
popf
cmpsb
pop
call
hlt
cmp
dec
xor
sbb
dec
mov
xor
ja
daa
pop
and
adc
pop
int3
cwtl
das
or
fistpll
test
ret
sbb
jmp
test
and
in
or
add
repz
popf
xchg
movsb
test
lods
aad
ret
fidivrs
mov
mov
add
movsl
fistpl
scas
dec
cwtl
or
mov
repnz
sbb
int3
mov
adc
lock
mov
cmp
imul
lahf
mov
and
inc
jnp
js
ljmp
sbb
cwtl
mov
fsubl
xor
sti
sbb
adc
sahf
xlat
mov
and
cs
nop
sbb
cltd
mov
or
inc
cmp
inc
add
mov
popl
mov
hlt
mov
rcrl
inc
jg
xchg
pop
add
jb
inc
fldl
mov
idivb
adc
push
in
adc
adc
cltd
fwait
popf
cmpsb
jl
in
sub
out
jne
pop
pop
add
bound
dec
in
xchg
or
pop
or
out
adc
mov
dec
lret
xor
sbb
shlb
push
popf
cmp
sarl
mov
ret
sub
adc
push
dec
jnp
mov
sbb
dec
xlat
loopne
rorl
inc
mov
test
test
aad
push
lock
cmpb
imul
movntps
jp
sbbb
jle
cmc
mov
dec
leave
inc
mov
mov
mov
in
shlb
pop
jbe
dec
ss
js
pushf
ret
fldl
fdiv
daa
mov
shrb
pusha
adc
mov
arpl
add
or
jb
lds
and
add
adc
xchg
aam
popf
hlt
dec
push
pushf
sbbl
nop
push
adc
out
or
inc
scas
mov
adc
cli
jge
mov
push
mov
dec
or
orb
loopne
push
cmpsl
sti
shll
xor
inc
sub
mov
sub
bnd
cmp
mov
push
mov
xchg
and
jnp
inc
cld
out
sub
inc
fstpt
jae
rclb
jmp
mov
and
enter
pop
clc
ficomps
push
rorb
push
xchg
sbb
cmp
fwait
xor
das
mov
xchg
pxor
les
xchg
js
lret
pop
sub
outsb
lret
cmp
adc
mov
jge
add
rclb
xchg
jle
lcall
lds
fs
sti
fildl
push
mov
ljmp
sub
loop
mov
hlt
aas
loopne
das
pop
std
xor
fidivrl
fsubrl
push
pop
enter
cmp
and
dec
jl
inc
lock
aas
cwtl
notb
loopne
sar
loope
or
in
idiv
jo
cmp
sbb
rcr
cld
sarb
push
shl
sahf
jg
inc
sub
mov
stc
mov
frstor
bound
dec
leave
mov
inc
movsl
inc
repnz
icebp
add
xor
out
and
jg
adc
iret
mov
rolb
outsb
mov
addr16
cltd
jge
movsb
fwait
mov
pop
daa
xchg
jne
mov
mov
or
insl
inc
mov
lahf
sbb
mov
jae
outsl
adc
fwait
gs
es
mov
sahf
dec
cmpsb
sahf
push
jle
ja
rcl
pop
sti
push
std
mov
pop
pop
xor
je
dec
imul
fistl
xor
push
dec
adc
aad
push
addr16
ficompl
xor
lods
pop
xor
jmp
lcall
or
mov
xor
and
loopne
xor
jne
lods
xor
rorl
arpl
adc
inc
add
sub
mov
sbb
xlat
inc
into
xchg
test
cmp
dec
sub
mov
and
mov
mov
cmp
add
pop
sub
pop
shll
mov
movl
cltd
repnz
and
adc
repnz
xor
sbb
repnz
mov
gs
jne
sti
in
in
cwtl
inc
lahf
mov
daa
mov
bswap
xor
mov
and
shll
jne
lods
clc
ja
push
adc
xchg
xchg
pop
stos
mov
call
icebp
jl
call
mov
add
cwtl
leave
mov
insl
insb
repz
mov
ja
inc
daa
popf
lea
ss
sub
test
faddp
or
inc
fildll
cmp
sub
into
pop
wbinvd
jo
mov
adc
sub
stc
mov
cs
movsb
outsl
inc
jnp
and
imul
js
test
jae
ret
xor
xor
mov
cmp
dec
jmp
clc
push
roll
mov
outsb
mov
pop
cmp
mov
inc
or
jo
push
inc
mov
mov
push
inc
pop
pusha
cmp
js
std
sahf
jmp
and
mov
dec
mov
mov
jle
or
lret
push
sbb
mov
and
sbb
mov
sub
popa
gs
xchg
xor
fsubrl
inc
test
dec
adc
push
stos
cmp
xchg
push
push
leave
mov
aam
push
adc
insl
int
lea
adc
jmp
mov
jnp
push
cltd
fs
mov
cmc
shlb
dec
data16
inc
insl
lahf
mov
repz
xchg
andl
and
xor
jl
or
push
aam
test
pop
cmpsb
popa
incb
xor
shll
test
lock
push
mov
mov
mov
inc
fsubp
lret
fdivs
mov
pushf
ljmp
div
stos
jl
ret
imul
orb
inc
xorl
test
cmp
mov
cltd
xchg
add
mov
aas
push
lods
ss
rcrb
push
roll
aaa
in
lods
push
mov
adc
pmuludq
cmpsl
out
pop
jbe
inc
lcall
jle
mov
in
pop
jae
mov
das
iret
adc
jmp
jo
adc
out
movsl
jle
loope
cmp
adc
bound
and
inc
into
fldcw
js
mov
sub
addb
xchg
xchg
xor
jo
xor
aaa
out
xchg
lret
sbb
push
in
jno
pushf
iretw
out
push
sbb
and
les
push
pop
add
push
inc
lds
rol
dec
xchg
dec
stc
and
push
and
dec
and
ja
pop
push
mov
xlat
xchg
jae
push
mov
inc
pop
lret
mov
fidivl
int3
pop
out
mov
pop
jbe
pop
pop
pop
mov
fsubr
sbb
std
push
dec
add
shlb
orl
xchg
xchg
jg
nop
xchg
rolb
add
sti
aas
ss
mov
testl
cmc
insb
sbb
xchg
xlat
out
adc
xor
or
xor
cmc
leave
ljmp
icebp
hlt
sbb
ret
mov
mov
or
sub
lcall
fldl
mov
mov
mov
jbe
push
int
inc
push
inc
add
fmull
mov
push
push
inc
fists
push
je
inc
xchg
ret
loope
mov
push
push
movsl
pop
test
pushf
cmp
dec
and
ljmp
popa
inc
sbb
pushf
jne
in
outsb
mov
cmp
dec
mov
cli
mov
jg
ds
lds
pop
rolb
cmp
push
or
dec
sub
adc
pop
mov
mov
es
imul
mov
xor
andb
lds
inc
inc
aas
nop
lods
pop
mov
in
cwtl
js
test
das
cltd
aaa
out
mov
push
xchg
ret
jle
sbb
outsb
mov
lret
shll
mov
add
fisubs
shl
outsb
aad
arpl
stos
push
mov
cmp
inc
into
pop
out
pop
mov
and
outsb
fwait
mov
rcrb
loop
in
jno
pop
jle
movsl
stos
enter
jne
mov
jp
ja
xchg
sbb
repz
mov
ss
int3
dec
es
inc
jns
dec
aaa
push
imul
adc
pop
adc
aam
add
jo
idiv
dec
and
lods
stc
es
ljmp
popa
divb
mov
lods
cmp
adc
popf
popa
in
or
or
stos
in
mov
pop
cmpsb
pop
gs
inc
lret
cld
mov
int3
hlt
mov
push
adc
aad
subl
mov
in
xchg
add
fstpt
sbb
in
or
xchg
lahf
push
int3
and
mov
jne
lods
int
dec
mov
ret
pop
push
push
imul
pop
inc
je
and
add
das
push
lods
mov
rcrb
pop
cmp
xchg
inc
daa
push
gs
mov
fstps
aad
push
cwtl
ret
add
aaa
pop
mov
fs
fnstcw
push
xorb
lock
dec
sahf
cwtl
int
inc
sub
or
dec
push
les
inc
xchg
pop
lret
inc
fwait
pop
push
enter
repz
and
cmp
aas
ja
push
pop
mov
mov
mov
jnp
mov
fisubs
pop
jmp
xchg
fimuls
mov
int3
lods
es
add
bound
mov
andl
iret
fidivl
insl
inc
sub
out
fsubrs
jle
pop
movsl
jle
mov
es
pop
pop
test
loope
idivl
in
popw
movsb
cmp
sub
mov
mov
mov
dec
mov
mov
xor
jno
stos
aad
jno
cltd
inc
xchg
sahf
in
js
cli
decb
jmp
nop
stos
xchg
mov
lock
fldt
xchg
callw
mov
loope
push
xchg
mov
mov
pop
repz
push
gs
sbb
arpl
ja
mov
push
fcomps
popf
test
unpcklps
push
add
cmp
dec
je
inc
push
cmp
sbb
push
les
push
sbb
sti
fdivr
in
mov
and
cmp
es
ja
insl
mov
push
fwait
cmpsl
dec
xor
mov
lcall
loopne
out
push
jecxz
pop
mov
or
push
and
rclb
or
popa
rcr
jp
jb
mov
ret
loope
fidivrs
xchg
xlat
add
cmpl
scas
xlat
jl
xchg
inc
xor
and
rcl
inc
in
mov
push
out
adc
inc
inc
dec
xchg
enter
or
add
mov
pop
lcall
loopne
dec
xchg
les
pop
sub
jbe
sbb
rol
outsl
aaa
add
xor
dec
cmpsl
repz
dec
jae
ret
jbe
dec
mov
roll
outsl
mov
mov
mov
roll
js
insb
or
pop
pop
scas
dec
in
in
out
xchg
insb
and
sbb
inc
mov
mov
xchg
dec
cmp
sti
rorl
lahf
sbb
adc
dec
in
sbb
stos
sub
adc
jmp
sti
cwtl
jmp
xchg
ficomps
lds
insl
aaa
pusha
xlat
push
and
inc
out
stos
and
rorl
cltd
or
xchg
int
pop
dec
pop
shl
faddl
jmp
loop
cmc
adc
in
arpl
pop
in
push
xor
in
push
loopne
inc
leave
dec
dec
xlat
pushf
fwait
and
cmp
iret
ret
int
arpl
pop
clc
xor
xchg
std
nop
pushf
xchg
ret
and
daa
jecxz
xlat
pop
mov
js
pop
xor
sahf
aaa
pusha
daa
jo
pop
outsb
ja
mov
aas
xchg
loope
insl
cli
arpl
aam
call
lret
mov
iret
loope
cmp
popf
push
inc
stos
pop
dec
inc
daa
lods
mov
popf
fs
ja
jmp
mov
and
push
mov
mov
enter
sbb
jge
xchg
inc
sbb
fmulp
ljmp
lahf
inc
test
adc
mov
test
jge
es
notb
lret
out
call
and
pushf
mulb
test
test
popa
pop
aaa
xchg
sub
div
insb
inc
push
out
in
adc
lret
fistpll
das
mov
dec
mov
and
sahf
test
mov
xchg
xchg
mov
imul
or
dec
sbb
dec
jmp
cwtl
lcall
fwait
adc
fidivrs
roll
jge
js
ja
mov
cmp
xchg
add
hlt
stos
push
ja
loope
push
sub
dec
scas
inc
inc
frstor
les
jbe
es
xchg
outsb
jmp
jo
xchg
pop
pushf
add
scas
outsl
nop
cmc
dec
add
mov
xchg
stos
loope
stc
bound
and
clc
pop
ss
sbbb
stos
fbld
icebp
sbb
pop
push
inc
pop
test
fbstp
out
out
lods
popf
and
pop
mov
aad
cmpsl
dec
outsl
dec
lea
jle
xchg
pop
mov
lds
leave
stc
sub
jmp
rorl
sbb
xchg
jmp
mov
xor
int
aam
dec
jne
sub
push
cmc
mov
cwtl
hlt
xor
mov
cmp
push
lcall
out
arpl
add
cmp
xchg
mov
cmc
sti
xor
add
jp
test
mov
jnp
cmp
daa
stos
insb
adc
gs
or
adc
outsl
xchg
insb
movsb
stos
cmp
pop
push
lret
mov
out
cmp
pop
imul
mov
mov
dec
xor
leave
dec
insl
das
clc
scas
cli
push
sbb
je
jecxz
pop
mov
jns
mov
mov
jbe
xor
push
push
test
inc
arpl
mov
js
aad
jmp
mov
insl
xchg
pusha
stc
pop
lret
test
jnp
dec
push
repnz
dec
push
nop
ret
in
clc
and
dec
inc
std
insl
and
test
xchg
or
and
mov
cmp
xor
scas
test
dec
jo
ret
pop
pop
jbe
push
filds
mov
pop
sub
aam
mov
mov
xor
jmp
mov
xor
mov
sub
dec
push
cltd
mov
sbb
shll
hlt
mov
or
mov
jo
push
rorl
xor
xchg
pushf
sub
test
xor
xchg
in
push
mov
mov
mov
mov
lods
repnz
mov
jecxz
mov
and
jbe
adc
cli
sub
arpl
stos
rorb
test
outsl
cmp
stc
dec
movsb
enter
cli
lcall
xchg
add
sub
fcmovne
call
enter
ror
jmp
gs
jb
scas
xor
repnz
shrl
popa
pop
popf
repz
scas
dec
or
fbstp
shrl
inc
scas
inc
or
inc
dec
adc
dec
pop
sbb
push
cmp
in
fcmovnu
jns
in
adc
inc
lahf
aad
les
mov
or
jne
or
shll
push
mov
xchg
dec
sbb
adc
jge
xchg
pop
cli
push
adc
movsl
shr
xor
push
xlat
clc
inc
push
mov
test
push
fisttps
cmc
xor
and
test
out
xchg
addb
imul
mov
lahf
or
add
adc
mov
pop
jb
call
pusha
dec
sbb
or
stos
ret
xchg
jge
xorb
pop
inc
fcoml
out
call
cmc
or
mov
jg
out
fists
mov
les
sub
jne
adc
xor
aas
leave
or
aad
hlt
pushf
outsb
repnz
xor
add
lahf
je
fcmovnbe
cli
clc
jg
push
xchg
adc
out
inc
outsl
push
mov
xor
cmpl
jg
push
imul
xor
enter
xchg
ljmp
outsb
loope
and
sbbl
jg
sub
mov
sbb
fcompl
jne
jmp
aam
inc
mov
int3
or
mov
dec
mov
pop
popf
dec
repz
idivb
mov
ja
sbb
repnz
sbb
leave
icebp
test
xor
je
mov
jnp
in
leave
mov
fcomps
aaa
xor
int3
pop
pop
and
inc
or
aaa
jmp
aaa
adc
je
lcall
inc
inc
orl
jl
xchg
add
mov
mov
sub
adc
aas
xchg
adc
mov
push
sub
leave
outsl
pop
int3
mov
jno
pop
mov
pop
hlt
sbbl
test
inc
mov
mov
pop
jno
call
movsl
push
cli
arpl
pusha
cmp
push
sub
cwtl
push
mov
arpl
fcom
xchg
incl
adc
repnz
stc
mov
lcall
adc
call
mov
sbb
dec
fnsave
jb
mov
lcall
pop
mov
aas
hlt
mov
xchg
stc
fisttpl
xor
cmovb
jbe
or
mov
out
hlt
jne
add
insb
imul
pop
sub
movsl
enter
filds
dec
xchg
cs
mov
daa
loope
pop
fucom
adc
enter
mov
ret
jb
mov
adc
cli
xchg
std
cmpsb
mov
mov
movsl
or
shlb
xor
ss
push
rcll
push
mov
loop
fists
xchg
lahf
dec
xchg
or
jecxz
mov
sub
cld
rol
dec
mov
and
mov
sbb
push
fwait
sbb
cmp
xchg
out
xor
js
ret
outsl
rclb
or
sti
imul
arpl
mov
inc
and
shrb
dec
popa
sahf
push
xor
movsl
cmp
xchg
stos
mov
cmp
lods
and
fwait
mov
mov
cmpl
xor
add
jb
pop
fstp
fstp
xor
je
call
cmp
sub
pop
dec
and
clc
insb
lods
xchg
mov
mov
popa
lret
xchg
ret
ss
xchg
xchg
sbb
jmp
lret
cld
in
mov
sub
addr16
push
add
and
ret
jne
push
outsl
xchg
loopne
call
int3
cld
bound
push
xchg
lea
sbb
cmp
incl
cmp
fldl2e
xlat
sub
imul
dec
lds
sub
nop
and
mov
add
fdivr
fnstsw
aas
shrl
adc
lods
push
xchg
sahf
mov
scas
stos
jne
jae
fldenv
push
xchg
cmp
aaa
cmc
push
inc
xchg
in
xlat
in
xchg
aas
sarl
dec
sbb
psubsw
mov
fimuls
out
jo
js
pop
sbb
repnz
sub
ss
xor
jecxz
out
lea
outsb
lahf
adc
ret
push
ficompl
out
mov
cmpsb
int
pop
or
mov
and
mov
js
pop
sbb
scas
ret
imul
das
push
sbb
cmpsl
loopne
lods
sbb
mov
divb
dec
sbbb
xchg
push
in
into
pop
cwtl
add
repz
adc
dec
dec
repz
pusha
in
xor
cmc
sbb
out
ret
in
je
jb
pop
push
mov
packuswb
notl
aam
push
cld
xor
sub
into
lret
cmp
cmp
leave
or
pop
in
add
rcrl
mov
and
into
jae
ljmp
imul
ret
loope
cld
inc
jnp,pt
dec
inc
sbb
pop
xchg
or
lods
das
cmp
ljmp
mov
ss
ja
push
out
inc
dec
mov
jge
jmp
out
push
movsl
rcl
inc
inc
xlat
push
add
adc
jo
adc
icebp
imul
xchg
cltd
sub
std
or
inc
push
cmc
subl
xchg
sbb
cli
jae
cmp
mov
dec
pop
sbb
fwait
push
push
in
push
xor
jp
xorl
into
xor
inc
loopne
xor
push
jp
xchg
lret
fistl
in
iret
mov
orb
xor
imul
push
jp
adc
popf
xchg
repnz
cltd
lock
inc
repnz
inc
xchg
sti
cmp
aas
pop
loope
mov
xchg
cmpsb
in
sbb
adc
inc
and
mov
ja
and
cmp
xchg
leave
add
mov
cwtl
xor
and
test
push
jp
outsb
pop
jmp
fcmovnu
cs
jnp
adc
sbb
orl
dec
sbb
jns
pop
and
push
stos
or
insb
cli
jb
adc
cltd
dec
mov
es
hlt
lcall
adc
mov
movsl
xlat
dec
xchg
inc
jmp
cmpsb
hlt
faddp
jns
xor
cmp
orb
ds
mov
dec
les
cmpsb
in
and
and
xor
mov
and
mov
xchg
stos
mov
jmp
imul
dec
loop
out
bound
dec
repz
sub
push
pop
pop
sub
add
xchg
fwait
mov
pusha
mov
cmp
inc
lock
testl
or
xor
sbb
push
notb
int3
cmpsb
mov
rorl
mov
lret
dec
mov
inc
je
pop
add
mov
leave
and
stos
jno
jno
sbb
cld
push
cmp
lods
mov
roll
pop
call
cmp
loope
and
add
adc
cmp
cmp
push
test
xor
aam
out
push
in
scas
ret
push
cmp
insb
das
sbb
loopne
jp
sub
mov
or
repz
loope
dec
movsb
mov
imul
les
push
jg
pop
inc
xor
xor
dec
pop
pusha
ss
or
jge
add
push
mov
enter
pusha
dec
cld
test
sub
aam
cmp
push
jmp
pop
aam
xchg
pop
and
ret
pop
test
pop
rclb
cmp
jnp
or
push
mov
sub
jl
hlt
mov
xor
nop
es
rcrb
hlt
in
inc
pop
out
sbb
iret
call
pushf
and
sbb
fwait
mov
pusha
sbb
add
insb
out
cmp
mov
test
push
xor
loopne
stc
push
adc
push
in
addr16
imul
xor
or
adc
pop
xchg
scas
add
ret
cli
aas
jbe
inc
inc
or
nop
pushf
cmpsb
sub
jmp
xchg
std
idivl
jae
xor
dec
popf
scas
lret
mov
or
inc
and
cmp
les
fxch
scas
in
outsl
pop
xor
aam
mov
sbb
test
lea
adc
dec
sbbl
or
jmp
lods
lea
push
jns
shlb
mov
and
pop
in
aaa
out
push
jb
stos
mov
mov
rolb
add
int
push
sub
js
lcall
jne
xchg
out
add
and
sub
mov
repz
mov
outsl
add
sarb
mov
push
jecxz
stos
mov
and
es
mov
push
jle
nop
int3
outsl
lret
mov
fistl
lods
jnp
gs
push
adc
inc
jnp
imul
cmp
outsl
dec
rclb
ljmp
cmp
test
cmpsl
rclb
iret
imul
mov
adc
pop
dec
lret
es
lds
inc
sahf
pop
pusha
jbe
cwtl
mov
jne
dec
xor
lcall
pushf
inc
js
jle
sbb
sahf
dec
loopne
aam
pop
xchg
xchg
push
jle
shlb
push
pop
lds
xlat
dec
push
out
outsl
add
in
jecxz
mov
dec
jne
in
push
lret
nop
outsb
mov
in
sub
mov
adc
lahf
jns
ss
fs
or
xor
adc
cmpsl
sub
pusha
ljmp
push
cli
lret
out
push
sub
xlat
mov
out
popf
cmp
movsl
iret
scas
nop
daa
fstpl
xor
push
jecxz
inc
fnstcw
xchg
idivl
arpl
pushf
and
adc
rolb
andl
ds
les
xorl
rorb
xor
loope
ljmp
push
mov
out
mov
or
loope
popf
mov
dec
cmpxchg
or
call
lock
cld
out
sub
mov
push
sub
cld
inc
dec
dec
fwait
ljmp
sbb
cltd
push
jmp
shr
je
out
add
stc
lods
stos
pop
int3
mov
add
mov
out
cmp
push
aad
and
sub
sub
loope
sub
and
jl
push
sti
push
pop
mov
cmp
out
adc
cmp
stos
xchg
pop
pop
sbb
inc
mov
add
adc
cmp
mov
scas
sbb
arpl
sbb
or
jae
loop
sub
imul
sahf
insl
add
enter
fs
insb
leave
jns
mov
mov
insl
add
jl
pop
fldcw
mov
dec
mov
out
arpl
sub
pop
cmp
inc
ds
mov
insb
mov
and
outsl
jae
mov
hlt
lods
and
fists
and
xchg
jl
dec
push
ljmp
jle
imul
sub
pop
jns
mov
pusha
xor
adc
mov
clc
cmp
inc
in
data16
sbb
mov
pop
jmp
fisttpll
jnp
dec
iret
sbb
jo
out
dec
pusha
push
xchg
pop
cs
jb
pop
dec
lea
add
das
sub
xchg
jns
cmp
ret
sahf
fwait
and
clc
mov
or
sarb
jbe
xchg
dec
adc
jp
cld
inc
xchg
das
or
dec
add
arpl
xor
repnz
movsb
je
imul
xchg
adc
add
call
inc
pop
xchg
ror
outsb
push
pushf
ret
cmovnp
mov
fiadds
dec
lods
andb
out
and
cmp
sub
sbb
das
adc
jns
jns
lods
or
popa
loope
push
fiadds
inc
sbb
lods
leave
test
lret
repz
push
mov
adc
rcll
mov
mov
push
in
add
xchg
cmp
cli
mov
in
icebp
jo
loopne
insl
mov
sbb
ja
push
push
mov
sub
sub
insb
cwtl
and
addr16
dec
addl
pop
stc
lret
xorl
test
xor
xchg
or
bnd
cs
sbb
loope
lahf
data16
in
mov
arpl
aam
push
jle
mov
xor
adcl
fisubrs
xor
test
sub
and
data16
mov
or
int3
xchg
mov
mov
ret
repz
inc
mov
imul
dec
shrl
lahf
ljmp
repnz
imul
out
rol
lds
mov
leave
cmp
adc
adc
insb
rolb
inc
sub
insl
stos
pusha
cmp
push
pop
das
cmp
inc
mov
xlat
dec
mov
pop
jo
in
push
mov
je
stos
xor
popf
mov
jnp
or
cwtl
arpl
sbb
arpl
cmpsl
clc
inc
inc
mull
pop
push
xor
add
add
xor
inc
jne
outsl
lock
in
in
pop
iret
arpl
out
pop
insl
adcb
sub
rorl
cmp
setnp
inc
mov
adcb
jp
cmpsb
adc
inc
xor
mov
gs
xor
leave
mov
fisubl
cltd
gs
bound
popf
cmp
lret
std
and
jne
push
aam
data16
cmpsl
scas
cmpsb
aam
lret
fisubs
add
mov
shll
jo
or
repz
jbe
je
xchg
dec
ss
or
push
inc
add
ret
or
jo
insl
pop
xor
loope
sbb
fsts
dec
in
pop
addr16
sbb
imul
pusha
lods
pop
mov
out
sbb
and
pop
ret
insl
outsb
gs
and
iret
test
dec
outsb
or
rcr
lock
jmp
pop
mov
jbe
dec
jnp
add
das
insl
push
mov
aam
cmp
jl
mov
push
fs
lahf
stos
divb
sbb
mov
repnz
lds
pushf
mov
cmp
jecxz
iret
pop
xchg
sbb
addb
fwait
aas
aad
ss
cmp
mov
fiaddl
dec
sbb
xchg
and
aad
out
jne
mov
cmpsl
sub
es
shll
in
or
and
ja
bound
cmp
mov
movsb
roll
jb
in
or
aaa
and
and
pop
iret
dec
popa
jl
xchg
imul
mov
out
adc
loope
gs
adc
popa
mov
scas
sbb
jnp
outsb
aas
out
lcall
jns
sbb
adc
push
cmp
push
or
push
cmpsl
pusha
xor
in
call
and
testl
or
mov
pop
mov
aad
cmp
mov
imul
push
imul
in
in
push
inc
mov
mov
gs
or
dec
cmp
orb
decb
dec
arpl
cmp
sbb
mov
inc
push
js
fsubs
add
ret
sbb
lret
fidivrl
pop
xchg
inc
push
loope
dec
aaa
xchg
popf
and
mov
imul
mov
mov
mov
je
lds
call
out
cmp
insl
enter
pop
into
into
mov
lea
mov
gs
sahf
and
mov
mov
sub
loope
notb
mov
cmpsl
out
add
inc
xor
leave
stos
push
jo
jle
lods
lret
mov
xor
int3
mov
sub
sbb
lcall
add
push
or
mov
push
dec
stos
test
imul
push
cli
jmp
rcl
gs
mov
jae
adc
test
pop
aam
xchg
push
and
andl
pop
ja
mov
cmp
push
mov
fcmove
insb
jbe
jno
lock
mov
leave
adc
mov
fdivs
inc
mov
enter
push
data16
int
jne
mov
or
scas
lcall
lock
pslld
cmp
inc
rcll
dec
shlb
mov
daa
sbb
frstor
mov
repnz
idiv
shlb
ja
scas
ds
push
sti
push
bound
jnp
xorb
arpl
inc
adc
and
cld
mov
movsl
aaa
mov
dec
xor
adc
jl
shr
inc
rcrl
arpl
or
mov
shrb
mov
mov
mov
test
icebp
inc
cmp
push
fdivrs
pusha
cwtl
pop
nop
cmp
sub
out
pop
or
jnp
ret
mov
test
xchg
mov
call
jno
int
lahf
push
daa
sub
add
xchg
mov
lock
add
add
add
sub
sub
sbb
ss
xchg
in
mov
or
mov
call
jmp
cld
xchg
pop
jae
or
test
iret
mov
push
and
loope
or
mov
sub
ficomps
jno
xlat
mov
repnz
push
mov
sti
nop
pop
dec
das
dec
mov
xchg
loop
pushf
jecxz
out
lods
push
ljmp
fadds
sub
cs
jp
cmp
loope
cld
test
pop
mov
jg
mov
cmpsl
add
sbb
stos
adc
stos
fucomi
mov
adc
jecxz
xlat
mov
add
add
dec
add
pop
push
and
lods
cli
out
lods
xchg
cmp
and
icebp
add
jae
xchg
nop
sub
cmp
dec
subb
sbb
in
dec
rorb
cmp
nop
loopne
adc
insl
pop
out
cmpsb
test
mov
pushf
ret
aam
ljmp
idivb
insb
aaa
iret
lret
repnz
xchg
std
dec
scas
cmp
dec
dec
jno
cmp
lret
lret
or
insl
fidivrs
in
ljmp
add
add
in
mov
loop
lahf
seto
in
pop
dec
test
and
popf
mov
sbbl
push
sbb
pop
js
jno
xor
or
insl
outsl
int
and
cmp
jb
shl
cmp
mov
les
test
outsl
popf
push
jb
mov
xor
stc
insl
mov
mov
or
mov
mov
adc
lods
popf
aaa
in
sti
sub
cmp
inc
stos
ja
cmc
insl
jno
mov
mov
xchg
dec
roll
jne
adc
lret
movb
xchg
mov
mov
xchg
cmp
sub
jb
inc
loop
xchg
jnp
mov
shr
jnp
push
out
or
imul
dec
movsl
mov
stos
xchg
mov
repz
push
and
mov
out
iret
out
pop
shr
cmpsl
pop
push
sarl
repnz
dec
inc
mov
leave
inc
mov
in
sub
lret
and
imul
icebp
and
fadds
orb
mov
cmp
js
loope
movsb
dec
sub
mov
mov
cmpsl
mov
add
cmp
pop
jle,pt
in
sub
or
in
cmpl
out
xor
rclb
hlt
cltd
pushf
fnstsw
push
cmpb
pop
rcr
icebp
addr16
dec
std
jo
addl
rol
iret
adc
and
push
xchg
xlat
push
icebp
lret
and
jne
dec
pop
jae
test
test
in
push
adc
jecxz
fs
movsb
jle
push
sti
mov
ljmp
inc
rolb
lock
sbb
push
adc
pop
loop
or
pop
cs
stos
jmp
xor
inc
cmp
or
add
incl
pop
xor
loope
push
bound
orl
popf
mov
jmp
cmp
int3
sarl
or
inc
pop
sbb
mov
mov
repnz
ss
dec
jnp
repnz
and
les
pop
stos
mulb
inc
xchg
cld
push
jecxz
adc
punpckhdq
ret
pop
icebp
loopne
test
xchg
cmp
aam
icebp
dec
out
jge
popa
cmp
clc
adc
add
icebp
ret
xlat
inc
icebp
popf
cmp
push
dec
nop
cmp
fstps
inc
mov
scas
enter
pop
pop
cmp
pop
and
scas
imul
fisubs
js
xchg
repnz
xchg
cwtl
sub
sbb
lock
mov
cmp
jmp
inc
add
aad
xor
cmp
pop
cs
and
lcall
pusha
jge
or
mov
movl
jbe
push
popf
ret
ss
mov
cmpl
cmpsl
lock
lcall
add
mov
mov
pop
sbb
out
mov
lcall
stos
hlt
fildll
cmp
jp
push
or
dec
neg
mov
aam
in
mov
int
popf
nop
lea
aam
push
sar
dec
je
dec
lods
xchg
test
addr16
xlat
dec
iret
inc
lock
jno
dec
xchg
mov
mov
xor
push
or
inc
pop
dec
jb
adc
shrb
cltd
icebp
mov
cmp
sbb
loopne
adc
add
push
roll
mov
rcll
lods
mov
imul
pop
pop
inc
stos
or
enter
adc
or
xchg
cltd
cli
add
adc
faddl
pusha
xor
pop
faddp
stc
inc
dec
test
lahf
xchg
les
pop
pop
pop
cmp
inc
cmpsb
mov
sbb
mov
sbb
push
imul
inc
push
xor
xchg
xchg
xchg
ljmp
xor
pusha
push
add
mov
xor
mov
movsl
sub
mov
ss
orl
or
lret
push
mov
loopne
pop
mov
sbb
ss
sub
shl
loopne
pop
xchg
jns
xor
out
pop
scas
popf
add
and
pushl
adc
std
les
sarb
cmp
rcr
movsb
scas
shrb
orb
je
movsb
inc
cmp
insl
sbb
mov
mov
inc
jge
movb
lea
mov
or
sbb
mov
cmp
mov
mov
push
jge
adc
fidivl
push
push
jo
mov
stos
sbb
ret
sarl
dec
xchg
push
sbb
add
jbe
mov
xchg
subb
xchg
mov
adc
and
fucomip
xor
test
test
xchg
sub
test
jae
pop
bound
mov
ret
mov
aaa
jl
jb
into
mov
xorl
icebp
sbb
mov
test
sahf
loope
push
pop
ds
imul
cld
hlt
stos
and
pop
sbb
xchg
fnstcw
jg
mov
int
popa
lret
and
mov
fs
lods
nop
pop
stos
orb
inc
pop
pop
and
xor
inc
filds
stc
push
fmull
into
popa
push
inc
mov
movsb
or
fwait
mov
lds
inc
rorl
jg
sbb
fisubrl
push
inc
mov
pop
pop
roll
jb
inc
xor
ret
in
idivl
xor
lods
cmpsb
icebp
in
cmp
push
movsb
shll
aad
cmc
shll
jg
mov
out
ror
pop
movsb
jle
test
sub
leave
repz
mov
mov
cs
cs
jmp
sahf
aam
lahf
or
fidivs
hlt
movsb
stc
cli
fs
sub
xor
daa
test
cmc
into
cli
mov
mov
pusha
sub
into
in
imul
lret
add
mov
movsb
jne
mov
mov
push
hlt
sbb
in
dec
aaa
mov
lock
cmp
jo
dec
hlt
mov
lods
xchg
mov
shrl
ss
rcll
cmpsb
dec
jmp
lock
push
pop
add
mov
xchg
pusha
hlt
cmp
cmp
insl
dec
pushf
cmc
fldcw
xor
aad
ljmp
jne
ljmp
cld
fisttpll
mov
je
int
ja
push
inc
xor
std
ss
or
jmp
add
and
jae
wrmsr
mov
popa
pop
sti
inc
ss
mov
adc
push
dec
inc
jo
and
jo
sbb
or
aam
pushf
jb
outsl
fistpl
leave
jle
jecxz
push
aam
mov
pop
xor
xlat
mov
pop
sub
das
sub
mov
add
or
hlt
add
add
test
inc
lods
dec
dec
mov
adc
sub
out
lret
jge
inc
cmp
adc
movl
mov
imul
sti
lods
inc
and
sarb
cmp
mov
mov
out
jne
ror
xlat
inc
adc
xchg
add
imul
aas
inc
jmp
cmp
jno
call
dec
sbb
pushf
test
dec
das
shll
les
pop
mov
adc
dec
and
cmp
xchg
sub
mov
lret
jnp
cmc
push
clc
xchg
stos
mov
push
addr16
lods
fsubs
push
aam
inc
inc
xchg
movsl
sub
shrl
lods
mov
in
pop
dec
mov
sub
adc
adcl
test
xor
test
ja
jmp
sub
jb
and
daa
jp
subb
cmp
aas
lahf
sbb
inc
scas
jg
scas
jns
mov
add
xor
inc
push
cwtl
adc
mov
negb
or
pop
pop
imul
rorb
and
cmpsl
xchg
jle
inc
inc
fisttps
sbb
ljmp
inc
arpl
inc
xchg
or
fsubl
sub
divb
test
sbb
inc
xor
pop
or
adc
dec
and
lods
cmc
cmp
mov
xchg
pop
inc
adc
dec
dec
dec
inc
dec
fidivl
enter
imul
push
and
pop
push
dec
fldt
dec
es
sub
rep
jae
jmp
xchg
sub
cli
sub
xor
adc
insl
leave
scas
xlat
stos
add
ret
jp
xor
ficompl
and
or
sbb
pop
cs
lods
adcb
in
or
stc
mov
cmpsb
lret
xor
xchg
idivl
sti
repz
jbe
in
pop
les
sbb
push
popa
divb
adc
js
mov
lret
clc
add
xchg
stos
adc
add
negl
add
fadd
jecxz
xchg
inc
out
mov
loop
or
mov
outsb
sbb
sub
and
push
and
or
bound
push
loop
dec
or
cmp
addr16
mov
ds
inc
add
cmp
xorl
gs
and
stos
jp
push
fnstsw
and
mov
adc
xchg
add
push
mov
sbb
lods
ret
addb
incb
and
mov
mov
jbe
sbb
pop
popf
or
lock
ljmp
xchg
and
shrl
sub
and
pop
fucomi
sbb
nop
or
xchg
loopne
jbe
jle
mov
ret
ja
in
pop
scas
aad
mov
icebp
jne
faddl
icebp
jns
iret
filds
mov
sub
clc
dec
pop
pop
loop
sub
lret
or
gs
jne
bound
lea
test
imul
lret
mov
or
jo
es
loope
pusha
mov
jl
jecxz
lods
scas
das
je
push
fidivl
jo
push
ja
int3
lahf
push
pop
rcrl
call
jae
ljmp
imul
sbb
rcl
rorl
jo
in
or
mov
dec
int3
fs
cmp
lods
gs
add
imul
cmpsl
or
outsb
insl
cmc
mov
mov
bound
fdivs
pop
test
cmp
loope
push
les
mov
ja
mov
and
mov
sbb
testb
loope
dec
cmpsl
mov
mov
add
repnz
mov
mov
add
loope
xor
daa
mov
test
pop
fcomps
adc
xchg
leave
test
in
adc
js
into
lar
repz
add
adc
movsb
or
mov
sub
jnp
out
mov
rcrb
sbb
pop
adc
cltd
push
shrb
mov
mov
xor
call
mov
pop
jns
aas
mov
and
clc
rorl
popa
js
xor
scas
fwait
xor
shlb
into
imul
jp
fcos
aaa
mov
mov
into
or
popa
xchg
mov
data16
sbb
je
sub
fldenv
mov
xchg
std
lahf
dec
mov
in
pop
jle
dec
push
mov
imul
test
push
push
ficoml
outsl
rclb
popa
imul
xchg
aad
adc
mov
jp
push
mov
mov
cs
out
pop
jl
jae
push
inc
decb
pop
mov
mov
sub
xchg
xchg
incl
mov
and
xchg
and
js
mov
cmp
push
sti
adc
enter
fimuls
inc
lea
inc
orb
push
pushf
pop
shrb
push
add
dec
push
lret
dec
gs
movups
stc
leave
rcl
push
rcll
inc
sbb
mov
out
outsl
mov
dec
xor
inc
push
int
jnp
jne
andb
addr16
mov
pop
lods
outsb
sub
push
stos
jle
push
push
mov
xchg
inc
adc
pusha
imul
clc
jge
or
or
leave
lock
jnp
fucomip
mov
js
add
cmp
cld
pop
add
or
dec
or
mov
add
jg
jmp
inc
addr16
inc
mov
or
imul
out
push
pop
rcr
in
nop
pop
ja
add
push
jae
stos
ror
push
test
inc
filds
mov
shll
mov
push
dec
lret
mov
out
dec
mov
iret
icebp
add
jnp
cmp
fldt
mov
push
lods
aaa
sbb
stos
push
cmp
stos
sub
hlt
jecxz
dec
push
sub
push
and
aaa
lea
or
xor
mul
fstpl
adc
mov
mov
jns
push
mov
ja
mul
push
ret
mov
sbb
jb
and
sbb
mov
cmpsl
xor
mov
jb
ljmp
push
mov
in
and
push
fwait
sbb
mov
insb
loope
testl
pop
ret
enter
xor
lcall
shrl
mov
adc
dec
jmp
test
lds
stc
xchg
shrl
jmp
cmpsl
out
ret
cmp
mov
in
insl
cmp
ss
xchg
sub
inc
and
mov
icebp
xchg
sub
imul
bound
insb
push
add
dec
push
ret
sbb
jecxz
cmp
jne
jne
ss
mov
rorl
cs
xor
popa
jge
popf
sbb
fdivl
pop
dec
imul
ljmp
arpl
mov
dec
dec
mov
add
pop
inc
and
xchg
jno
cmpsb
dec
iret
push
jmp
xchg
notl
popf
dec
cli
cmp
xchg
jg
insl
mov
dec
sbb
adc
jmp
cmp
fidivrs
xor
mov
adc
sub
and
stos
cltd
adc
in
sarl
pop
xchg
cld
dec
pop
sub
push
mov
std
scas
jne
nop
push
mov
movsl
repz
sahf
pop
mov
cmpsb
popf
mov
sbb
lahf
mov
ficomps
adc
cmpsl
fwait
std
jg
add
ljmp
ret
cmp
in
and
sbb
cmp
sbb
mov
push
lods
in
push
or
sbb
inc
orb
loop
lock
pop
mov
out
icebp
out
xor
jp
testb
jmp
gs
cld
stc
mov
in
jl
lea
mov
mov
jg
imul
fwait
aas
movsl
jbe
mov
adc
lock
xor
test
cmp
add
add
aam
pop
or
add
test
rolb
popa
add
je
cmp
add
mov
sub
sub
push
pop
repz
cmovle
popf
dec
or
adc
and
push
and
mov
sub
lret
adc
iret
xchg
movsl
jbe
popa
repnz
test
inc
mov
sbb
or
daa
adc
pop
adc
aaa
jmp
testl
cmpsl
sbb
sahf
mov
cmpsb
push
sbbb
xorl
fisubs
dec
mov
cmp
fidivrl
jnp
cli
mov
stos
xchg
mov
bound
jne
inc
mov
add
test
cmp
push
imul
cmp
add
push
push
pusha
cltd
add
fists
mov
adc
aaa
sub
lock
in
loope
xchg
cmpsl
lcall
inc
xchg
sbb
pop
jnp
xchg
mov
pop
iret
pop
pop
xchg
xchg
out
sub
adc
scas
jp
icebp
insb
loop
dec
je
mov
insl
cld
sbb
je
push
ss
dec
fisttpl
out
movsl
addr16
adc
subl
lahf
xchg
aaa
mov
push
hlt
pop
out
rol
mov
cmp
mov
jb
aad
adc
rcrl
pop
push
iret
js
incl
test
lret
test
roll
inc
arpl
xchg
fisubs
mov
jb
cmc
xor
sahf
dec
mov
cmp
popf
jno
lea
fidivrs
sbb
add
mov
pop
sbb
push
aad
inc
xchg
inc
mov
popa
xchg
fs
fucom
adc
jecxz
out
push
cmpsl
loop
pop
mov
stos
ret
xorl
mov
addr16
popf
xchg
addr16
rcl
pop
mov
lret
xor
inc
jp
mov
hlt
in
ffree
insl
outsb
pop
mov
pop
popf
mov
pop
bound
mov
or
mov
push
lahf
or
lcall
and
outsb
sbb
push
aaa
push
sub
in
out
mov
sub
lock
lret
pushf
pushf
test
jns
adc
ret
or
jae
and
xor
imul
mov
pop
mov
dec
jecxz
mov
shll
cmp
jle
stc
loopne
sti
jecxz
lea
add
jno
repnz
iret
loope
push
shll
call
push
pop
andl
ss
movsb
pop
adc
mov
pop
movsb
mov
daa
jl
lsl
mov
ret
notb
insb
fsub
mov
pop
mov
pop
pop
push
ljmp
jae
cs
shlb
xchg
movsb
lret
push
je
xchg
push
ljmp
jmp
fbld
sti
mov
loopne
stos
lret
fisubl
out
xsaveopt
sbb
rcll
or
xchg
nop
adc
jb
or
jns
fadds
repnz
mov
sbb
sub
lds
iret
xchg
mov
dec
push
das
dec
cmp
in
popa
pop
shr
mov
inc
inc
jmp
xchg
fs
push
mov
aam
clc
cld
add
arpl
push
adc
dec
adc
je
lcall
repz
xor
popa
push
add
push
nop
sbb
pop
adc
cmp
aad
cmpsl
mov
add
pusha
and
push
in
sub
push
jecxz
das
lret
pop
pop
ret
xor
fistps
xor
mov
fsubrl
push
xchg
mov
in
mov
cmp
lret
and
insb
stos
aaa
in
hlt
dec
fidivs
pop
rol
adc
xor
pop
jnp
call
jnp
inc
push
mov
inc
loope
jb
adc
xchg
sub
mov
adc
pop
dec
lods
stos
mov
push
rorb
scas
lods
in
pop
mov
sahf
sahf
xor
jne
scas
outsl
xchg
cmp
imul
push
jbe
and
mov
in
cmp
sub
cmp
sbbb
cs
sbb
pusha
jne
pop
sarl
push
sar
aas
pushf
out
outsb
insl
mov
call
jbe
lea
into
add
push
and
rcl
sub
iret
mov
sti
pop
repz
inc
pop
pop
cmpsl
lcall
adc
mov
stc
lock
out
mov
adc
pop
mov
cltd
cli
icebp
mov
testl
into
mov
mov
and
jns
stc
mov
lcall
push
adc
insb
aam
iret
dec
movsl
mov
mov
cmpxchg
or
imul
lahf
xchg
fbstp
sbb
imul
imul
jne
mov
mov
fcmovnb
mov
hlt
jle
mul
cmp
mov
xor
movsb
push
scas
loopne
std
adc
ljmp
jns
iret
xor
xchg
fwait
test
stos
rorl
xor
cltd
out
push
stos
test
cmp
xchg
and
stos
les
sub
mov
insb
xchg
mov
inc
je
clc
jp
sub
sbb
sahf
lret
add
xchg
xchg
repz
mov
dec
jmp
jbe
ja
iret
xchg
insb
shl
cmp
sub
aam
idivb
push
out
pop
insl
out
enter
and
or
push
popl
xor
push
aad
and
imul
inc
jns
loope
push
jge
imul
mov
jno
fdivrl
cmp
daa
xchg
adc
ss
adc
mov
in
cwtl
xor
into
mov
jbe
xor
rorb
bound
xchg
pusha
xbegin
xchg
enter
add
ds
sub
pusha
popa
inc
in
testl
cmc
dec
push
popa
mov
notl
dec
popf
fwait
sahf
mov
mov
and
stos
adc
adc
in
mov
add
stc
dec
mov
pop
int3
xchg
or
jnp
je
inc
notl
mov
pop
pop
or
fnstsw
je
pop
push
sub
daa
mov
sysexit
divl
adc
test
xor
cltd
call
jecxz
lcall
jae
dec
test
cmp
lret
push
sub
lods
in
sub
cmp
mov
out
cmp
or
out
movsb
insl
or
add
mov
cmc
pop
mov
cmc
mov
gs
adc
addb
stos
xchg
mov
in
cltd
rcrb
cltd
mov
fwait
adc
dec
inc
iret
fbstp
mov
adc
jle
jae
xchg
mov
loopne
inc
clc
sub
nop
dec
xchg
lods
xor
cltd
leave
dec
inc
jns
cmp
push
je
jne
pop
or
add
cli
rcr
inc
fwait
imull
mov
xor
pop
push
adc
push
or
and
xchg
outsb
in
insl
inc
adc
pusha
ds
mov
test
mov
jo
sbb
idiv
das
shr
jno
cmp
fwait
hlt
or
mov
or
in
add
mov
les
sbb
ljmp
stos
adc
and
dec
fistpl
jnp
fadd
xchg
test
subl
xorb
inc
es
jl
int
ljmp
adc
add
idivb
mov
push
imul
lods
or
sub
lea
push
or
mov
fistpll
add
rcrb
pop
adc
pop
pop
in
sti
mov
addr16
jl
sbb
sbb
cmp
lock
or
idiv
subb
jecxz
pusha
out
xor
rcrl
or
xchg
xchg
jae
lret
jbe
push
lcall
fists
push
scas
nop
insb
sub
mov
lods
ret
cmp
in
fs
movsl
mov
je
cmp
negl
jbe
push
adc
fcoml
movsb
mov
mov
imul
add
loop
mov
mulb
sahf
enter
xchg
loop
mov
xchg
ffree
mov
push
out
not
stc
cltd
fdivrs
outsl
imul
add
ret
mov
push
cmp
pop
sbb
push
roll
fcmovnb
outsb
inc
fs
loop
sbb
daa
jnp
jns
sub
pop
sub
aad
stos
cli
lret
arpl
insl
fstp
xchg
pop
loop
and
scas
iret
sbb
inc
aaa
repnz
std
popf
shl
mov
cwtl
cmpsb
clc
repz
sbb
shll
fstpl
cli
jbe
sbb
lcall
jle
cmp
cmc
mov
mov
hlt
pop
lods
loope
mov
pop
jmp
xlat
sahf
jae
cwtl
in
inc
sub
jge
ja
rol
ret
imul
ja
pop
mov
lahf
aad
test
sub
pop
scas
scas
fists
or
mov
pop
lret
movl
or
sbb
sbb
loop
mov
inc
jbe
addb
std
mov
mov
icebp
push
and
ds
push
mov
pop
lods
mov
subl
test
push
aam
clc
dec
cmp
test
pop
movsl
clc
das
in
mov
sarl
jecxz
test
pop
movsb
mov
rorl
cmc
lcall
out
popf
push
pop
adc
pop
push
sub
cltd
call
sti
in
pop
outsl
push
push
lcall
lds
addr16
aas
arpl
add
add
icebp
daa
lahf
std
out
and
mov
data16
popf
jnp
adc
sbb
shrl
arpl
int3
out
hlt
jecxz
jg
or
xchg
sub
fisubrl
pushf
cmpb
mov
sbb
fcmovu
mov
push
or
stc
shlb
pusha
jecxz
pop
mov
push
cs
or
jae
inc
dec
dec
mov
sbb
mov
shll
dec
or
enter
sbb
or
cmp
add
ret
subb
sub
jp
cmp
fdivs
ds
ffreep
sub
icebp
ja
pop
mov
sub
and
xchg
adc
sarb
dec
filds
add
or
sti
or
pop
or
fimull
jle
sbb
mov
fmuls
out
cmp
notl
mov
ret
inc
into
xchg
in
cltd
pop
adc
mov
mov
or
aas
bound
sbb
push
mov
add
adc
enter
xchg
ffree
scas
loopne
adc
jg
mov
sbb
or
daa
dec
pop
push
aam
imul
fsubs
or
fimuls
fwait
xor
pop
ja
mov
int
fidivrs
mov
dec
lahf
add
jmp
add
loop
aas
into
es
das
sub
xchg
cwtl
cmp
jae
push
cltd
inc
push
rcrl
jecxz
push
sub
test
mov
int3
dec
or
imul
call
loopne
pusha
orl
les
scas
xchg
xchg
scas
and
xlat
add
cmp
daa
inc
mov
jbe
fisubl
cmc
fidivrs
and
xchg
sarb
shll
push
or
dec
dec
cmp
int3
dec
insb
sbb
cs
xor
adc
mov
stc
mov
int3
mov
xor
inc
pop
aas
mov
cwtl
inc
cmp
test
sbb
nop
or
test
imul
mov
cs
jb
fildll
stos
es
mov
sbb
loope
fcoms
sbb
scas
cmp
rclb
or
mov
stos
inc
scas
scas
or
gs
insb
lcall
jns
and
aam
aas
mov
ror
cmpsl
jnp
movsb
roll
pop
pushf
orb
pop
ss
mov
gs
lret
insb
inc
mov
or
inc
imul
out
or
pop
in
test
sbb
shl
mov
mov
mov
xchg
rorb
into
cmp
lahf
add
shrl
push
scas
sbb
dec
stos
adc
aas
aaa
mov
mov
test
scas
out
or
cmpsl
mov
sbb
pop
fwait
and
testb
pop
and
jmp
xchg
mov
dec
adc
sbb
rcrb
sub
push
lahf
pop
and
dec
decb
aam
sub
inc
cmp
out
lahf
xor
ret
cmp
fldl
mov
popf
fwait
push
sbb
mov
movsb
push
rorl
in
jl
out
test
xchg
pusha
repz
inc
stos
je
cmp
cmpsl
jmp
div
push
sbb
fildl
sub
mov
cld
lea
add
adcb
int
add
cmp
adc
cmp
dec
or
add
sbb
adc
dec
jae
or
inc
rcll
xchg
inc
out
dec
sbb
mov
jecxz
int
insb
lret
adc
imul
push
imul
cmp
sub
lret
or
mov
mov
or
or
lahf
fnstcw
sub
test
in
mov
test
int3
inc
xchg
and
sub
stos
inc
dec
jg
sub
fs
aad
out
pop
dec
in
sbb
ljmp
movb
cmpsb
mov
and
cwtl
sti
mov
xlat
jns
jge
jg
mov
push
and
repnz
stos
lahf
incl
push
dec
in
test
aad
cmp
push
scas
sbb
mov
and
mov
push
scas
pop
mov
out
aaa
push
jns
and
js
cmp
aas
pop
jb
fcomps
jle
adc
movsl
ret
sub
cmc
repnz
and
stos
mov
rcrb
aad
dec
scas
into
pop
fnstsw
cmp
cmp
adc
pop
int3
cmp
push
push
rcrb
mov
pusha
ljmp
lods
fdivrs
dec
or
cli
or
sub
jno
inc
dec
push
push
cmc
pop
cmp
mov
cmp
jne
imul
fcmovnb
mov
lret
jle
push
dec
iret
inc
pop
lds
scas
mov
cltd
dec
xor
dec
push
mov
mov
into
leave
in
or
test
repz
mov
inc
unpckhps
inc
and
sub
mov
jnp
aam
loope
jmp
jns
push
lret
cld
std
push
xchg
add
add
popf
mov
adc
jecxz
cltd
cmp
sub
es
xlat
pop
inc
push
cmp
cmp
mov
pusha
cmp
outsb
outsb
jmp
je
test
insb
push
test
dec
sub
fldl
sbb
push
xor
daa
or
stc
dec
and
and
adc
push
das
xchg
adc
test
push
xor
jl
stc
pop
or
sub
bound
fmul
movsl
icebp
ja
push
rsqrtps
mov
mov
clc
xchg
or
add
shll
and
into
xchg
sub
cmp
cmp
push
into
sbb
sub
in
scas
jae
cmp
pop
and
lret
mov
enter
aas
mov
repz
stos
and
push
hlt
pop
daa
sti
test
idivl
movsl
dec
lods
lret
iret
sbb
mov
fnsave
add
stc
sub
xchg
adc
dec
and
xchg
xlat
les
dec
inc
xor
pop
jne
test
clc
in
enter
repnz
cwtl
clc
stc
ss
int3
out
repz
popa
ffreep
repz
fiaddl
mov
roll
xor
dec
test
aam
test
mov
in
pop
cmp
jmp
push
pop
pop
gs
fs
mov
repnz
dec
cli
jl
pop
lcall
out
and
pusha
xor
je
pop
addr16
pop
and
cld
ja
push
jno
lret
ja
scas
repz
sub
inc
je
mov
inc
push
add
xor
or
aaa
jns
pop
dec
into
cltd
push
hlt
mov
and
mov
push
mov
fs
addr16
hlt
jle
popf
push
sbb
sub
cli
inc
out
popf
jp
sub
in
hlt
test
jl
loop
xor
in
or
xor
sub
cmp
xchg
cwtl
jp
inc
cmp
xchg
push
es
movsl
inc
cmp
sub
pusha
inc
int
pop
mov
add
lret
aas
stc
sub
mov
fnstsw
ds
fbld
sbb
inc
jle
popf
aas
lods
cmp
cmp
hlt
jo
mov
mov
or
dec
dec
pop
pop
add
pop
pushw
insb
dec
mov
out
adcl
pop
xor
out
sub
xchg
pop
testb
pop
xchg
mov
in
gs
in
sub
out
stos
fwait
lcall
cmp
cli
lret
fwait
aad
mov
pop
mull
aas
sub
pop
inc
xor
nop
fwait
jne
iret
dec
pop
push
xlat
sbb
xchg
gs
xchg
jmp
push
inc
shrl
cmp
sbb
and
pop
ss
xchg
and
insb
out
sbb
scas
test
movl
jno
and
adc
push
inc
xchg
mov
and
loop
push
adc
cmpsl
xor
jns
rorl
out
xor
inc
adc
imul
xor
sub
cmpsl
adc
mov
lret
mov
mov
xchg
cs
int
fsubl
ljmp
sub
fwait
pop
cmp
push
ficomps
sbb
cld
sub
repz
cmp
add
shr
add
in
sbb
stos
add
repnz
inc
mov
sahf
sbb
cwtl
mov
call
shrb
leave
mov
dec
pop
pop
fs
out
inc
int3
cmp
jmp
imul
inc
mov
xchg
stc
cmpsl
dec
shr
outsb
ret
pop
inc
xor
movsl
mov
push
stos
ror
mov
push
adc
lds
xchg
sbb
cmp
ret
or
adc
pop
mov
ret
mov
lahf
lods
pop
fwait
inc
mov
out
fidivrl
add
jno
loopne
pop
out
rclb
stc
loope
stc
sbb
sbb
mov
jecxz
sbb
add
jmp
push
jge
or
and
mov
pop
mov
into
xor
mov
test
lret
mov
les
xchg
dec
popf
call
or
sti
pop
outsb
stc
sbb
popa
ja
xor
mov
shl
sub
cmp
xor
movhps
out
lretw
and
xchg
std
inc
mov
lret
test
sub
outsl
mov
scas
xchg
add
psubusb
rclb
push
daa
es
es
popa
in
inc
out
fisttpll
loopne
adc
stos
fildl
adc
pop
into
fcom
shl
sub
jl
imul
not
jmp
mov
jno
jmp
or
pop
pop
clc
sahf
scas
mov
call
push
lret
dec
cmp
sub
sbb
push
or
adc
cmp
inc
xor
xchg
sub
add
adc
movsb
xor
xchg
mov
sbb
ror
sub
in
jo
add
adc
dec
pop
push
inc
test
xchg
dec
mov
arpl
hlt
scas
pop
mov
dec
mov
cmp
mov
mov
stc
mov
scas
cmp
push
fcoml
cltd
jge
popa
ret
and
jbe
sub
call
out
arpl
push
bound
sbb
lret
pop
rcrl
lret
icebp
pop
ljmp
cli
pop
je
mov
mov
push
orl
repz
jl
cmc
std
jno
and
xchg
data16
mov
cmp
pop
lds
or
adc
outsl
and
and
xlat
or
rclb
aas
mov
push
adcb
dec
iret
std
roll
and
gs
sbb
data16
loope
push
hlt
mov
jae
daa
stc
sub
into
mov
cmp
stos
add
out
cwtl
imul
lea
add
mov
inc
inc
adc
pop
mov
inc
stos
mov
add
stos
add
or
pop
subl
pushf
jbe
lahf
repz
xchg
mov
sahf
mov
jl
bound
outsl
or
pop
xor
jmp
xchg
jmp
cld
xchg
mov
in
imul
enter
or
cltd
jl
pop
xchg
adc
adc
sbb
daa
push
push
ja
or
in
or
rcr
lahf
addl
pop
in
mov
aas
push
lret
scas
push
cmpsl
repnz
ljmp
xchg
xchg
fstpl
inc
pop
pop
and
loop
aam
gs
lret
sbb
dec
imul
rcll
pop
push
or
cwtl
mov
icebp
cltd
sbb
jne
jle
inc
pop
sbb
mov
mov
mov
orb
enter
cmp
xchg
jnp
sbbb
fwait
dec
enter
ror
jge
sbb
mov
stos
in
ljmp
add
insl
sub
xor
jnp
test
jmp
lret
nop
mov
ret
popa
mov
mov
add
inc
sub
rclb
sub
lret
call
sub
or
push
push
je
jmp
mov
into
cmp
mov
push
fistl
mov
fiaddl
and
push
ljmp
add
add
dec
dec
fdivl
jno
pop
inc
roll
clc
cmc
insl
dec
loop
jp
dec
fwait
pop
xor
pop
in
aas
insl
push
aam
push
pop
xchg
test
cmp
cmp
sbb
mov
cld
xchg
cmpsb
pop
fcomip
out
xor
add
loopne
testb
fdiv
push
data16
outsl
outsb
add
sub
enter
push
ljmp
dec
outsb
and
aam
enter
nop
hlt
daa
xor
or
outsl
and
dec
loop
adcl
loope
mov
mov
leave
jle
cmp
mov
xchg
adc
dec
inc
test
lods
idivl
mov
ljmp
sub
pop
inc
inc
xor
mov
ret
stos
pop
push
andb
test
jle
xchg
push
clc
ret
sbb
ret
jmp
ss
mov
cmp
aas
fidivs
stc
pop
mov
dec
insl
repnz
lods
push
pop
std
push
lods
push
push
pop
mov
aas
rclb
push
addr16
pop
xchg
rcr
mov
gs
push
hlt
fiaddl
scas
into
dec
push
xor
dec
es
and
ljmp
add
ds
out
lock
xor
mov
push
xor
gs
cmp
aas
add
xlat
push
dec
jno
int3
pop
aad
mov
mov
int
dec
sahf
aaa
and
jg
test
sbb
das
outsl
xchg
jb
je
pop
push
popa
push
jecxz
mov
insb
cltd
mov
sub
mov
inc
daa
cmc
sbb
push
inc
sub
and
add
arpl
in
rorb
lret
inc
lods
jecxz
xchg
and
jge
cli
or
mov
inc
mov
les
mov
sbb
pop
pop
fwait
imul
and
mov
pop
ljmp
mov
int3
nop
repnz
jnp
and
iret
xchg
fst
fisubrs
sbb
pop
adc
cmpsb
shrb
and
loope
mov
xchg
call
je
cli
xchg
out
popf
hlt
inc
repz
adc
ljmp
ret
push
xchg
cltd
jge
roll
loope
imul
fists
xchg
mov
dec
in
pop
mov
loope
repz
adc
lret
jns
scas
jae
incl
sub
mov
add
xchg
push
inc
inc
scas
xor
ljmp
mov
out
js
fsubs
fcom
std
mov
xchg
leave
cmp
repnz
inc
mov
mov
ss
adc
pop
lods
addl
pop
lret
gs
loop
adc
shl
clc
jp
test
negb
pushf
ret
mov
dec
jmp
test
push
cmpsb
imul
mov
dec
retw
xor
xor
loope
lcall
inc
and
sbb
jge
xor
sbb
jmp
and
mov
and
jbe
jecxz
jae
les
or
sbb
outsl
mov
test
push
lcall
jle
xchg
daa
mov
jns
push
test
out
cmpsl
jle
addl
test
adc
xchg
pop
cs
xchg
push
loop
mov
adc
fnstcw
push
mov
or
loopne
push
cmp
popf
mov
cmp
mov
and
clc
cmpl
mov
push
ljmp
popf
out
in
cmovb
sbb
insl
fdivr
push
test
scas
pop
repnz
mov
sarl
dec
test
xor
xchg
inc
cmp
mov
xor
out
jo
sbb
inc
es
stc
inc
fdivl
loopne
cmp
test
into
out
movsb
jo
aad
jno
outsb
inc
enter
fwait
sahf
push
insb
arpl
and
push
insl
lret
sbbl
jne
mov
mov
rcl
insb
bound
mov
rorb
xchg
sbb
mov
xchg
andl
mov
adc
orb
stc
dec
jns
mov
daa
int
and
mov
xchg
cmp
jge
jne
pop
mov
push
cmp
shll
outsb
sub
inc
cmpb
in
sbb
leave
pop
popa
jno
or
mov
out
je
fildll
mov
nop
dec
sub
int3
ret
sbb
xchg
dec
xchg
outsl
jns
cs
mov
mov
cmp
js
push
jae
adcl
mov
mov
mov
or
push
lds
mov
repz
inc
inc
pop
hlt
push
mov
not
sub
mov
mov
fcmovnu
cltd
mov
imul
pushf
pop
mov
push
scas
fwait
cmp
sbb
xlat
push
test
push
jae
mov
mov
fildll
sub
call
inc
mov
ljmp
cmp
or
fnstenv
sarl
xchg
pop
popl
pop
std
aad
or
and
jecxz
xchg
push
cmp
ret
push
cmp
push
popf
data16
rcrb
repz
push
cld
xchg
fs
sbb
lret
inc
mov
lods
mov
stc
ja
aam
into
push
sub
movsb
mov
dec
mov
cmpsb
in
fsub
insl
shrb
push
insb
rcr
shlb
xor
and
ja
push
lods
scas
push
pop
daa
js
mov
cmp
scas
test
out
or
xor
or
test
push
std
or
iret
enter
mov
js
sbb
ss
in
out
insb
outsl
xor
mov
xchg
dec
addb
pushf
lock
lds
dec
clc
test
les
enter
mov
inc
inc
xchg
rcll
mov
sub
jns
outsb
add
mov
lret
mov
bound
lea
fnsave
test
test
push
loopne
jb
xchg
fildl
jg
pop
les
gs
repnz
movsb
lea
das
cmp
cli
imul
ljmp
mov
and
ja
inc
pop
push
add
inc
or
sbb
inc
ja
xchg
pop
pusha
shrb
fildl
inc
in
repz
les
inc
sbb
push
std
jno
rcr
ret
push
push
cmp
jb
mov
inc
mov
cli
in
lahf
rcll
leave
dec
xchg
fldt
jae
mov
cmp
lds
pop
in
adc
ljmp
mov
lock
push
sub
mov
push
or
arpl
push
pushf
or
hlt
xor
mov
cmp
mov
inc
frstor
in
dec
or
jb
mov
int
push
mov
jge
cmp
std
shrl
mov
jecxz
inc
and
les
loop
fwait
push
cmpsl
xchg
push
shl
sti
popa
mov
xor
cmp
mov
cmp
push
sub
or
inc
lods
scas
mov
rcll
jnp
inc
mov
push
daa
dec
in
lds
jg
movsb
push
rcr
scas
repnz
pop
lea
mov
pop
pop
sbb
adc
lea
je
shlb
sbb
add
inc
push
mov
addb
icebp
jnp
int
push
cmp
or
mov
lcall
les
inc
mov
and
aad
or
sahf
push
lcall
or
sbb
lods
cmp
jb
movsl
sub
ret
push
test
sahf
outsl
fsubrl
push
push
mov
mov
sbb
je
lock
mov
lret
jge
and
int3
mov
jo
add
pop
insb
push
rolb
stc
fs
adc
repnz
stos
movsb
stos
add
cmp
lods
stos
xchg
arpl
sub
ds
mov
cmp
js
mov
sub
pop
pop
int
nopl
mov
cmp
int3
dec
hlt
mov
and
push
inc
je
cmp
daa
xchg
dec
sub
xor
hlt
insb
movsb
divl
into
pop
lahf
dec
mov
ja
jo
lret
jle
mov
push
or
in
sbb
inc
xchg
jmp
lock
insb
popa
adc
imul
addr16
mov
push
dec
or
je
lods
out
pusha
push
mov
out
add
loopne
or
push
adc
sbb
aas
sbb
insb
sti
js
jge
out
in
xchg
andl
ljmp
cmp
test
pop
sub
sbb
mov
mov
pop
lret
cmp
sub
lock
xor
cmpsl
les
mov
insl
aaa
sub
es
fists
cmpsl
shrl
xor
cltd
lea
fs
adc
mov
xchg
sarb
outsb
faddl
sti
ret
leave
sti
pop
xor
pop
lahf
xchg
shrl
mov
push
das
fmull
xor
lcall
loope
es
mov
das
aaa
xchg
add
lahf
std
movsb
push
pop
int3
stos
sbb
stos
dec
push
mov
stos
pop
xchg
inc
fs
mov
in
imul
imul
ljmp
leave
cs
pop
dec
ds
les
lods
imull
movl
mov
popf
adcl
dec
jmp
popf
test
std
xor
and
pop
fwait
jo
lods
das
add
or
inc
js
mov
push
sti
sbb
mov
ds
sub
dec
xchg
mov
call
test
fistl
je
nop
inc
pusha
sbb
hlt
je
cmpsl
loopne
loope
cmpsl
gs
adc
jecxz
cld
icebp
stos
fiadds
jo
shll
push
cwtl
mov
push
stc
cmp
dec
pop
sub
jbe
in
shrl
dec
push
add
ror
or
xchg
outsb
lods
jg
jno
aaa
mov
fwait
cmpsl
jp
test
push
jbe
cmp
jns
in
inc
hlt
ds
mov
cli
sub
cmpsb
dec
add
je
mov
sub
cmp
or
adc
pop
mov
pop
mov
out
ret
dec
iret
cmp
jmp
sub
cmpl
out
in
loope
test
pop
out
or
lods
jle
pop
cmpsb
mov
and
xor
gs
rcr
rclb
pop
cwtl
mov
stc
sub
nop
mov
in
jmp
mov
mov
setae
adc
aad
xchg
fnsave
push
outsb
jge
push
pop
ret
clc
loop
mov
popf
leave
sub
sbb
cmp
adc
int
fsubrl
std
into
jnp
es
test
lock
add
hlt
pop
or
enter
into
fists
adc
clc
ljmp
push
sbb
mov
mov
jmp
into
pop
pop
fstps
jl
add
push
push
aaa
cmc
repnz
ret
lahf
cmpsl
aam
mov
jne
call
and
fdivl
jl
sub
mov
xlat
jl
lods
jmp
pop
imul
sti
lea
pop
int3
cmc
stc
inc
out
xor
lret
cmp
or
push
sbbl
mov
inc
xor
xorl
iret
fs
cmp
stos
ds
pusha
pop
or
sub
repz
outsl
sub
icebp
dec
cli
lock
xchg
popf
mov
add
scas
and
int3
or
mov
or
xor
gs
test
aaa
lahf
inc
xchg
pop
sub
mov
scas
or
outsl
inc
fidivrl
das
scas
mov
stos
mov
xlat
push
cmp
adc
xlat
daa
scas
into
mov
fwait
sbb
int
cmp
pop
sub
mov
outsl
gs
leave
xchg
dec
cs
loop
mov
and
lock
arpl
jg
shl
repz
push
push
push
cmp
push
ds
mov
jg
popf
jmp
dec
test
ss
fstl
xor
sub
push
out
pop
push
repnz
jo
les
jmp
mov
dec
dec
iret
jle
shrb
popa
mov
or
jns
or
adc
int
hlt
jle
lds
cmpsb
insb
cmp
sbb
sbb
add
push
push
enter
in
js
cmc
jecxz
and
movsl
push
js
cmpsl
inc
ret
notb
int
je
sub
push
pushl
push
inc
addr16
xchg
fistps
lcall
mov
pop
or
insl
in
or
and
pop
fisubs
lahf
or
and
or
kmovw
movsl
hlt
dec
pop
adc
orb
dec
inc
dec
cmpl
and
shll
ret
add
in
lods
stos
mov
shlb
cmpb
lret
cmc
cwtl
sahf
sub
nop
test
or
inc
leave
mov
ds
cmp
sub
les
out
xor
xor
repnz
pusha
add
and
sbb
dec
cmp
dec
cmp
leave
out
pop
xchg
pushf
stos
mov
sub
mov
es
loope
hlt
xor
jae
jbe
ficompl
ljmp
cmp
dec
pop
aad
enter
cmpsb
jecxz
pop
jg
nop
dec
das
ds
adc
in
fcomi
pop
pusha
add
sub
std
into
adc
dec
inc
mov
push
xlat
adc
ret
lods
pusha
sub
xor
gs
xor
cmovnp
popa
mov
lds
dec
addr16
cmc
andl
sahf
out
adc
hlt
repz
popf
dec
dec
pop
inc
xchg
test
test
sbb
push
test
or
aam
cmpsl
push
stc
sub
pop
inc
push
pop
cld
enter
mov
jmp
xchg
jge
shrl
imul
aas
bound
pop
jl
fcoms
fists
ror
xor
out
jmp
and
test
xchg
std
in
mov
xor
push
push
adc
movsl
leave
pop
pop
lahf
mov
leave
mov
out
pop
push
cmpsl
adc
mov
or
mov
hlt
and
xor
test
sahf
ljmp
jg
mov
lods
or
lods
daa
xchg
or
ds
out
and
add
xchg
je
jo
les
sbb
adc
xor
dec
jp
dec
xor
aaa
das
scas
ja
jno
mov
adc
pop
and
pop
enter
es
cmp
mov
sub
negl
test
addb
jge
xchg
aad
sbb
addr16
jns
push
jp
xor
sbb
pusha
outsb
dec
out
fisttpll
sub
mov
mov
rcll
inc
adc
aas
xor
std
mov
aam
or
loop
cltd
sbb
or
cmp
push
pop
mov
ret
xor
xor
icebp
leave
cli
aad
sbb
sub
jb
ret
cmp
gs
push
aam
rolb
add
jle
addr16
sub
push
outsb
push
insl
scas
inc
add
adc
adc
xor
sbb
shll
negl
dec
stos
or
outsl
jp
xchg
cmp
cmp
aad
cltd
pop
out
jae
push
out
add
and
sbb
jb
hlt
or
jo
into
mov
push
cmp
or
mov
mov
mov
out
call
dec
push
lock
mov
data16
into
jno
ja
pop
arpl
repz
xchg
xchg
or
repnz
sub
xor
inc
add
jmp
xor
aaa
das
call
imul
test
adc
inc
pop
pop
add
push
cld
test
cmpsl
push
pushf
cld
add
xchg
dec
and
jle
fs
das
in
loop
dec
test
add
ds
lods
lret
add
lods
cmp
lods
outsb
push
stos
loope
jns
xchg
dec
adc
shr
gs
and
push
mov
add
test
add
xor
les
jo
ffree
imul
cmp
int3
inc
mov
adc
mov
mov
or
dec
pop
push
and
sbb
mov
inc
mov
xchg
inc
ljmp
mov
xchg
push
xor
cmp
sahf
iret
notb
and
out
inc
jecxz
frstor
and
fbld
jle
cwtl
dec
mov
out
xor
and
lahf
in
pop
jg
nop
pop
jne
sub
sarb
add
dec
ret
mov
sbb
push
mov
mov
adc
mov
mov
mov
adc
jp
fcoms
jnp
sbb
cwtl
je
add
xchg
sbb
test
aas
fs
cmpsl
mov
adc
ret
or
mov
sbb
call
sub
and
mov
enter
cs
xor
loopne
xchg
mov
cli
jnp
dec
aam
or
jo
std
lods
movsl
shll
mov
popf
pop
cmc
mov
sub
jmp
int
lods
mov
xchg
jge
push
mov
cmpsl
aad
lcall
lret
cltd
repnz
int3
stos
cmp
fiaddl
int3
mov
mov
inc
cmpsl
xchg
cwtl
sbb
aam
cli
std
adc
cld
lret
pop
adc
cmp
mov
adcl
pop
sti
test
hlt
mov
mov
and
insl
mov
cmp
pushf
mov
stos
repz
jnp
fsubrs
in
shlb
mov
add
lahf
jo
pop
fistpl
lods
and
call
xchg
lret
pop
outsl
pop
mov
mov
in
pop
push
call
std
mov
jp
sti
fisttpl
outsl
imul
std
mov
cltd
jae
inc
jns
or
fdivr
out
inc
pop
js
into
dec
cmp
ljmp
les
in
adc
outsb
mov
lcall
out
sub
jmp
xchg
add
cmc
dec
or
ret
nop
mov
adc
jmp
pushf
lahf
movsl
pop
stos
lahf
decl
inc
inc
xor
push
pop
sbb
fmul
pop
jp
push
adc
aas
sbb
cmp
adc
imul
imul
es
push
jns
lcall
cmp
stos
jle
rolb
int
mov
idiv
in
mov
mov
mov
lahf
mov
mov
inc
dec
pop
lahf
rcrb
pop
mov
adc
inc
mov
cltd
data16
loope
rep
pop
fincstp
cmp
cmp
dec
mov
movsb
sbb
adc
fwait
mov
dec
jnp
jno
imulb
and
dec
ret
sbb
fidivrl
xchg
mov
mov
popf
jecxz
iret
or
dec
in
shl
inc
ret
sahf
out
mov
mov
mov
lret
xchg
cmp
sub
divb
dec
fidivs
shll
pop
pop
stc
aad
jae
adc
push
mov
or
xchg
mov
ss
mov
mov
cld
cmp
sbb
lods
push
out
and
xor
xchg
push
dec
pop
adc
fwait
cmp
fisttpll
push
dec
jl
pop
aam
jbe
test
pop
lock
mov
jecxz
jecxz
daa
mov
movsl
sub
scas
sbb
push
mov
and
scas
xchg
xor
push
inc
imul
mov
adc
sub
cmp
xorl
pop
out
insb
fidivrs
cmp
sbb
mov
loopne
sbb
lods
push
mov
cmpsl
fdivrs
mov
mov
push
outsl
xchg
pusha
fsts
mov
jns
jecxz
outsb
xchg
sbb
and
jg
push
out
cli
jb
add
fnsave
cmpsb
sbb
ja
aas
pop
aaa
cmp
adc
out
pop
mov
adc
lcall
xor
push
add
cmp
push
cwtl
lods
dec
mov
and
test
cmpsb
mov
sbb
dec
cmp
xchg
cmp
pop
test
loopne
xor
call
dec
push
jbe
mov
xchg
sub
enter
mov
push
jmp
ss
pop
rolb
in
cmc
mov
xor
loopne
mov
fildll
mov
push
push
lret
insl
rep
out
data16
jbe
inc
rcrl
cld
call
mov
dec
jecxz
xchg
mov
lock
dec
jecxz
in
ret
cwtl
lods
jne
enter
jae
sub
aas
mov
cmp
cmc
divl
fwait
ss
mov
or
std
push
jo
sbbb
icebp
lods
xchg
mov
dec
mov
xor
xchg
dec
pop
jns
xchg
and
mov
or
pop
push
inc
ftst
push
icebp
stos
mov
mov
cmp
clc
dec
icebp
lods
addr16
or
pop
pop
stc
pop
test
add
mov
and
call
mov
in
sbb
sbb
fwait
pop
dec
ds
push
scas
sbb
xor
pusha
mov
aas
dec
lods
adc
mov
mov
and
sub
adc
xor
cli
test
test
push
outsl
test
inc
lods
adc
stos
or
arpl
mov
mov
repnz
pop
lea
data16
inc
imul
fs
inc
in
mov
pop
and
test
or
insl
scas
mov
xchg
out
mov
adc
pop
call
cmpsl
xchg
and
out
sarl
mov
jmp
add
call
pop
mov
mov
ja
jmp
sahf
mov
sbb
xchg
or
loope
mov
lods
lods
xchg
cli
int3
mov
sub
sbb
jle
subb
notl
xlat
jecxz
xchg
lods
ficomps
shr
faddp
push
cmp
push
adc
push
and
or
push
in
cmp
pop
ficoms
dec
sbb
jle
dec
dec
pop
ss
jbe
mov
je
loope
aad
imul
int
xchg
pop
in
sbb
push
push
jmp
fidivs
dec
add
push
inc
mov
sbb
pop
rorb
imul
push
fsubl
inc
xlat
mov
mov
pop
test
xchg
xor
sub
vpsrld
pop
neg
mov
mov
aaa
rcll
dec
ss
les
mov
bnd
add
jle
repnz
push
lcall
insb
mov
movl
fnsave
ja
sub
or
push
sbb
js
iret
jmp
test
pop
mov
inc
dec
pop
test
in
sub
dec
pushf
jmp
jp
and
dec
inc
in
icebp
es
adc
jmp
lods
push
xchg
xor
add
pop
imul
scas
lea
and
adc
leave
inc
mov
sbb
faddl
mov
faddl
push
in
fsubrp
and
imul
jmp
mov
out
push
addr16
inc
stos
dec
sbb
repnz
lods
scas
dec
sbb
or
xor
mov
out
std
xlat
loopne
xor
inc
xlat
jg
mull
pop
leave
or
add
jns
mov
jp
test
add
xchg
and
repnz
jae
push
mov
jns
add
and
inc
inc
xor
mov
frstor
fistpll
lar
les
jg
in
dec
jo
cld
lret
pop
pushf
jb
mov
mov
dec
out
pop
and
inc
jecxz
call
cmp
jp
sbb
loop
popf
mov
fwait
dec
cmc
mov
xchg
push
scas
jp
and
iret
popa
aas
cmc
loope
pop
in
jne
or
imul
mov
push
stc
jge
jbe
stos
bound
xor
xchg
mov
cmp
icebp
scas
jl
jo
xchg
stos
movsb
fldenv
lahf
enter
ds
aam
ficomps
outsl
cmp
cmp
jmp
movsl
sub
mov
sbb
or
add
adc
cs
pop
lahf
cmpsb
js
inc
mov
mov
mov
enter
sbb
sarb
popf
sti
jge
jecxz
aad
psrld
inc
xchg
adc
or
xchg
iret
rol
adc
sbb
mov
pop
push
imul
push
out
dec
sub
add
ss
enter
cwtl
add
mov
lods
jmp
jmp
xor
mov
movsl
sub
repnz
jns
cmpsb
sbb
lret
jl
push
or
in
ljmp
push
and
sbbl
adc
sbb
ret
pop
dec
or
cwtl
jae
inc
daa
xchg
lahf
and
mov
sbb
jle
mov
and
xorl
ret
and
jl
mov
mov
and
pop
dec
and
popa
aaa
cmp
hlt
inc
xor
shl
adc
fcmovnbe
push
out
xchg
or
mov
mov
sub
push
dec
aas
out
jmp
fcompl
sub
sub
out
sbb
mov
adc
mov
adc
gs
aam
mov
lds
aas
push
xchg
pop
cmp
call
xchg
xchg
rolb
inc
xchg
ret
jecxz
mov
pop
and
xchg
stc
ja
mov
xchg
xchg
shll
xchg
rcr
push
push
add
movsl
mov
int
push
incl
mov
lret
loopne
sbb
mov
add
inc
push
stos
mov
stc
in
mov
cmpsb
jnp
add
sub
icebp
loop
sbb
push
rcrb
or
popa
fmull
mov
xor
xchg
or
mov
add
sbb
or
loop
stos
xchg
fidivrl
sub
mov
out
dec
push
aam
pop
out
into
outsb
cwtl
push
cld
not
push
fcmovb
sub
ss
rolb
faddl
or
jae
test
jnp
mov
addr16
sub
movsl
push
cli
jb
daa
scas
rcll
lret
bound
cmp
pop
jb
dec
addb
jae
cmp
push
lret
addr16
je
mov
in
pop
push
test
push
or
das
push
inc
lcall
jle
data16
sbb
xchg
push
rcll
dec
divb
loope
or
in
xchg
pop
pop
push
dec
ss
inc
pop
and
push
pop
loopne
mov
push
and
pop
jae
lahf
inc
fidivs
popa
rcll
ds
int
test
pop
out
test
aas
jle
and
lea
push
aaa
inc
in
stos
sbb
nop
and
mov
or
jmp
ja
stos
aaa
xchg
fsubs
mov
mov
add
cli
mov
add
sbb
xor
popf
mov
and
sbb
xchg
mov
add
jg
push
jbe
pop
push
mov
fbstp
and
jmp
movsl
test
dec
dec
inc
out
scas
jmp
jl
shlb
sbb
loope
xchg
add
mov
adc
xor
xchg
cmp
cmpsl
inc
ljmp
cwtl
pop
sub
fsts
shll
js
xchg
outsb
aad
sbb
rcr
gs
repz
mov
push
xor
scas
mov
add
jl
out
cld
dec
dec
sahf
mov
sub
test
pop
mov
das
mov
iret
or
sbb
push
mov
lret
in
dec
pop
lods
lahf
add
xchg
jnp
fisttps
inc
or
pop
jmp
mov
mov
in
mov
jmp
dec
push
add
dec
sbb
addb
add
jae
and
add
xor
pop
dec
push
pop
or
push
outsb
add
adc
arpl
adc
mov
mov
ret
cmp
mov
js
shl
icebp
andb
xchg
mov
cltd
jae
adc
fdivs
rorb
movsb
dec
jne
or
aaa
addr16
cmp
dec
popf
xor
jae
or
sbb
and
imul
sub
and
jne
dec
jl
cmp
fdivrl
mov
fmul
jbe
lods
movsb
das
pop
pop
sti
je
and
stc
scas
cmp
xchg
or
mov
ss
cmc
mov
and
sbb
or
out
sbb
push
inc
test
fiaddl
cmp
and
lahf
or
js
mov
add
loop
sbb
lods
sahf
dec
cmc
push
ret
push
and
flds
and
out
dec
add
mov
pop
cmpsb
mov
movsb
push
popf
xor
decb
iret
jb
dec
push
jecxz
jns
jg
sub
jbe
dec
ljmp
push
ja
lock
call
loope
stos
xor
cmp
or
test
pop
push
out
pushf
test
ffreep
leave
stos
cmpl
addl
cld
inc
les
lock
push
in
mov
pop
sbb
fwait
sbb
sub
inc
fwait
loopne
mov
in
push
aam
push
clc
mov
js
push
push
cmp
clc
je
pop
jmp
inc
adc
int
shlb
insl
call
das
mov
in
jnp
ljmp
and
jecxz
inc
gs
enter
das
insl
mov
push
push
or
inc
sub
mov
dec
mov
stc
test
out
adc
dec
xchg
dec
icebp
faddl
mov
add
out
les
mov
jbe
outsl
push
negb
jbe
leave
pop
dec
pop
call
mov
pop
sahf
inc
notb
push
inc
cmp
xchg
mov
ret
adc
jmp
icebp
jecxz
push
negl
sub
jmp
mov
cmovl
std
jp
jg
jb
cltd
jl
mov
jmp
push
push
subl
xchg
jb
decl
jp
mov
imul
dec
nop
push
mov
mov
sbb
loopne
xchg
xchg
out
mov
pushf
imul
xchg
adc
adc
sub
addr16
inc
addr16
std
jg
cmpsb
shl
and
aad
sti
and
cmp
or
jne
push
jecxz
add
mov
aad
in
cwtl
mov
pop
and
inc
sahf
fdivs
imul
int
loope
add
dec
adc
fdivrs
in
jo
dec
into
adcb
ja
jb
jmp
jns
test
ret
add
mov
pop
jmp
popf
adc
addl
rcl
inc
fwait
mov
mov
adc
mov
push
xchg
add
mov
inc
fdivrp
pop
dec
xchg
icebp
lcall
mov
nop
xchg
lret
pmaxub
mov
push
and
xor
and
push
nop
pop
lds
ret
inc
repnz
pop
stc
cmp
xchg
push
roll
xlat
cmpsl
push
sub
std
sbb
mov
jl
das
ret
andb
mov
jp
daa
imul
push
roll
xor
sub
fidivrs
mov
jge
inc
stos
loopne
scas
cmpsl
dec
inc
push
orl
pop
in
rorl
jmp
inc
ja
and
or
shll
jl
mov
inc
addr16
shrl
mov
and
and
mov
into
call
mov
daa
pop
out
inc
inc
xor
push
mov
stos
aas
inc
push
xchg
mov
nop
in
mov
cld
sub
xlat
pop
and
push
jb
aas
mov
jp
mov
shrb
mov
rcl
aas
jle
or
mov
fldcw
decb
and
inc
movsb
repnz
or
jne
cmpsb
jg
inc
mov
jge
inc
aam
dec
or
add
jb
int3
aad
mov
push
adc
push
dec
jnp
in
hlt
mov
jne
xchg
lds
stos
aad
ss
pop
add
out
sbb
lock
add
fwait
sub
sbb
adc
push
inc
xorb
sub
and
int3
in
test
movsb
cmpsl
mov
test
and
stc
pop
aad
mov
and
sbb
cmp
stc
push
sbb
pop
sti
pop
sub
push
rorb
adc
dec
fsts
mov
dec
dec
xchg
mov
cmpsl
mov
aad
lods
int
cmpsl
sbb
adc
leave
adc
movsl
lds
pop
ret
es
push
inc
xchg
push
test
mov
lea
aaa
sbb
sbbl
push
mov
ret
pop
outsb
push
fadd
add
push
push
add
insl
shlb
add
push
mov
mov
std
es
nop
stos
pop
sbb
adc
scas
ret
arpl
xor
sub
push
mov
scas
xor
mov
pop
mov
out
pop
jo
adc
pop
fnsave
popa
sub
movsl
pop
cmp
sbb
in
mov
lcall
mov
pop
pop
insb
xchg
or
xchg
fwait
sub
add
add
out
or
mov
popa
add
addr16
inc
and
push
jne
inc
sbb
pop
sub
cmp
fdivl
lcall
adc
sub
not
mov
sbb
mov
adc
aam
in
dec
dec
mov
lock
mov
or
cmp
jno
loope
test
xorb
cmp
jecxz
mov
mov
movsb
mov
mov
pop
or
cmp
adc
add
or
xor
add
insb
adc
sub
sbb
imul
popf
jecxz
sbb
jle
fisubrl
frstor
ljmp
push
sub
insl
sbb
sbb
pop
mov
lcall
mov
push
idiv
pop
outsl
sti
mov
call
sti
jno
adc
mov
enter
sbb
sbb
sbb
mov
or
add
inc
jnp
test
call
mov
jp
inc
les
add
cmc
pop
mov
adc
pop
or
jno
pusha
out
add
cltd
xchg
inc
inc
es
jecxz
and
nop
in
cmp
flds
sbb
leave
cmc
sbb
pop
out
sbb
or
xchg
pop
out
push
in
inc
xor
inc
push
out
into
push
push
ret
addr16
jmp
cmc
jecxz
add
pushf
sbb
lcall
push
imul
pop
repnz
ret
decl
cmc
fistpll
into
mov
pop
fidivrs
push
pop
fldl
mov
sbb
jp
xchg
push
bound
imul
jnp
and
fcomps
adc
xchg
fmul
dec
or
inc
sti
jne
push
addr16
sub
orl
mov
mov
push
outsl
adc
pop
repz
ffree
dec
and
callw
or
das
mov
xchg
lret
pop
mov
loop
and
mov
lock
mov
popf
sub
aaa
mov
xchg
inc
jp
into
push
out
mov
loope
cmc
jns
enter
shrl
push
fmull
out
cmp
cmp
pushl
mov
pop
pop
cmpsb
cmp
test
jle
mov
aaa
mov
jae
push
fisubl
sub
ja
xor
mov
in
ss
xchg
inc
imul
jecxz
push
pusha
lock
xchg
scas
cwtl
test
jnp
push
das
cmp
mov
out
jmp
aam
mov
jp
in
jmp
push
jae
mov
and
jmp
mov
push
jae
fstps
jg
xchg
adc
xchg
imulb
push
jae
add
loopne
add
cmpsl
push
addr16
push
push
test
pop
loopne
mov
sbb
loop
stc
cmp
insb
sbb
jne
push
icebp
fdivl
push
sub
out
or
push
jne
stc
or
inc
or
ss
sub
cmp
clc
jns
fnsave
loopne
push
imul
jb
pop
fwait
adc
inc
push
scas
sbb
cmp
sub
cli
lret
enter
fstps
cld
push
cs
hlt
rcr
sahf
mov
mov
jbe
pop
mov
sbb
add
and
sub
sar
insb
adc
xor
adc
ror
imul
out
pop
or
cltd
and
inc
push
adc
movsl
xchg
movsl
in
test
mov
int
xorb
add
out
repnz
into
dec
push
incb
jo
adc
stos
xor
ret
push
jmp
sahf
lcall
mov
es
jmp
pusha
dec
mov
jecxz
lret
mov
jl
push
xchg
in
inc
iret
inc
popf
mov
mov
mov
jg
sbb
call
sub
cmp
rolb
jge
mov
push
or
in
movsb
jle
movsb
and
fscale
or
lcall
push
fldl
shl
push
xchg
das
mov
pslld
and
jl
mov
dec
xchg
sbb
push
xchg
lods
jno
icebp
mov
sub
mov
movb
out
dec
ljmp
push
mov
lods
xchg
nop
xor
inc
mov
fwait
in
js
mov
push
pop
les
imul
sahf
cmc
jecxz
insl
shl
xchg
push
js
fidivrl
or
add
lret
sbb
notb
fdivs
cmp
xchg
mov
lret
mov
xor
and
daa
jb
fsubs
fs
mov
xor
fsubs
jnp
add
mov
insb
lret
inc
les
and
test
dec
inc
xor
fdivrl
mov
mov
jns
clc
sbbb
inc
stos
sbb
mov
loope
jmp
addr16
or
addr16
mov
inc
test
ss
cs
aam
sarb
adc
inc
cmp
mov
dec
xor
leave
sub
ror
cmp
movsb
mov
cwtl
repz
loope
jb
pop
sbb
test
ja
push
test
stos
hlt
ficoms
pop
add
fdivrl
push
rorb
jne
rcrb
pop
push
inc
pop
sbb
sub
xor
fwait
lock
pop
jns
fistl
jne
xchg
mov
jle
fdivr
cwtl
ljmp
mov
cmp
mov
pop
mov
call
xchg
test
mov
push
and
push
loope
fwait
loopne
orb
xlat
cmp
icebp
imul
push
push
aaa
push
mov
inc
lods
xchg
sbb
push
mov
outsb
pop
xchg
xor
mov
or
lcall
and
aam
jecxz
std
je
jns
mov
sub
push
hlt
inc
rcr
dec
jp
mov
push
es
and
xchg
pop
aas
sub
in
cs
and
mov
pop
pop
icebp
into
xor
out
and
and
xchg
out
adc
jno
jg
mov
icebp
add
mov
aam
mov
and
push
adc
dec
mov
mov
dec
cmp
xchg
xor
mov
stos
data16
iret
inc
pop
xchg
lods
pop
sbb
inc
jb
adc
dec
mov
sub
out
cwtl
imul
mov
bound
lock
push
jp
or
loop
jp
pusha
or
lea
mov
rorb
jns
mov
sub
and
push
inc
loope
mov
jno
pushf
sub
orl
lret
mov
iret
and
mov
dec
pop
aas
sbb
loop
and
add
xchg
shl
popa
scas
mov
xorl
add
mov
leave
add
xor
es
mov
rcl
cmc
loopne
subl
std
adc
push
mov
sbb
daa
push
les
mov
ss
cwtl
cwtl
je
xor
or
js,pt
sub
or
bound
sub
fdivrl
sub
les
stos
pop
repz
sub
xor
push
loope
push
or
mov
scas
push
loope
push
imul
in
arpl
inc
push
and
mov
pop
mov
loopne
pop
sbb
xor
pop
pop
mov
loop
lds
pop
bound
push
insl
inc
xor
jge
xor
and
dec
and
sbb
inc
mov
pop
fwait
push
push
sbb
stc
int3
rcrb
adc
and
lret
cs
mov
jg
cltd
jb
and
push
push
xlat
mov
cmp
push
in
lods
ffree
dec
stos
leave
out
lcall
cli
sub
xchg
sub
xor
jmp
pop
mov
sbb
inc
aaa
dec
into
inc
mov
and
sub
sub
jo
dec
rcrl
jg
repnz
bnd
inc
push
cmp
pop
or
sbb
insb
inc
test
lret
cs
inc
or
das
in
dec
xor
aam
scas
subb
std
lret
mov
movsl
inc
xchg
call
mov
jbe
pop
leave
lods
sub
mov
lret
jae
mov
pop
pop
inc
inc
push
cmp
repnz
mov
pushf
push
xchg
inc
les
jae
fsubs
ret
mov
jne
test
fidivs
les
jo
stc
xchg
imul
jg
jge
adc
jne
push
or
mov
jecxz
mov
xor
jbe
sub
dec
lods
mov
inc
jb
ss
inc
mov
xchg
dec
adc
mov
pushf
jne
push
mov
in
dec
lds
mov
loopne
xor
jle
inc
insb
cmp
push
xor
mov
out
cltd
fildll
leave
pop
sub
inc
push
or
dec
cmp
xor
or
shl
dec
jne
fldl
xchg
lcall
aad
mov
ds
enter
shr
inc
sub
cmpsb
push
es
sub
adc
fldt
pop
pop
mov
xor
mov
cmpsl
cltd
test
jne
faddl
xchg
push
cmpsl
mov
xor
loopne
shll
push
js
movsb
xor
outsb
mov
add
push
enter
mov
addb
push
dec
dec
push
mov
mov
xchg
jne
repnz
push
jb
sub
out
push
scas
pushf
loope
pop
inc
and
lahf
or
loope
ss
pop
mov
xor
or
mov
sbb
int3
push
fbstp
dec
add
fnstsw
cmp
xchg
fmull
movsl
xor
or
pop
pop
subb
or
stc
adc
aad
jg
ret
loopne
fisubrs
enter
mov
leave
pop
xchg
cli
jno
xchg
jp
inc
lock
cli
cmp
push
mov
aad
inc
into
mov
ret
cmp
dec
xor
jmp
cmp
add
mov
push
inc
mov
outsb
mov
ret
roll
push
sbb
test
cmp
js
in
dec
mov
adc
mov
sub
in
dec
sbb
pop
shrb
lds
in
pop
jns
pusha
fidivrl
movsb
jbe
shll
mov
test
dec
lret
lods
inc
aaa
push
or
mov
aad
cwtl
adc
cli
testb
xor
orb
cmc
call
stos
rcrb
iret
dec
test
shlb
xchg
push
and
mov
movsl
mov
mov
lds
and
sub
add
mov
inc
cwtl
inc
pop
mov
push
jbe
pusha
mov
cmp
cmp
xor
pop
andb
out
sub
mov
adcb
out
int3
and
pop
inc
jmp
and
mov
and
ret
xchg
xor
ficoms
rcr
add
or
gs
or
inc
dec
dec
imul
repz
bnd
cwtl
cmovno
mov
je
sbb
movsb
lahf
jmp
inc
adc
shlb
rorb
jle
xor
inc
push
dec
push
pop
test
push
adc
pusha
add
or
scas
aad
add
nop
pop
shlb
stos
mov
imul
fs
addl
cli
xchg
add
adc
mov
and
sahf
mov
xchg
hlt
mov
stos
sub
mov
mov
mov
xor
mov
sahf
rcll
dec
push
fwait
add
add
aad
add
mov
lods
sbb
rolb
and
das
out
push
push
popf
mov
mov
insl
sub
push
packuswb
jne
push
mov
enter
pop
ljmp
lods
inc
ja
adc
sbb
xorb
popa
mov
cltd
add
mov
push
xchg
mov
push
add
lods
enter
ljmp
mov
stos
jle
sub
test
dec
inc
push
or
mov
loope
mov
dec
mov
sub
popa
fcomps
sbb
ffree
nop
jbe
aam
xchg
test
stos
add
cwtl
jb
testb
shll
mov
push
xorb
mov
repz
sub
fistpll
sti
sbb
cmp
daa
push
fnsave
loope
or
outsl
dec
pop
fimull
sbb
adc
sub
pop
mov
adc
lret
and
or
and
insl
loope
lock
mov
adc
out
xchg
xchg
fisttps
or
sbb
pop
mov
les
xchg
inc
and
mov
push
sbb
push
dec
add
mov
jne
or
mov
xlat
push
push
xchg
aam
dec
lods
pusha
loope
dec
scas
cmpsl
lret
shrb
mov
jge
and
decb
iret
mov
or
outsl
adc
inc
loop
pop
sbb
mov
imul
xchg
rcrl
mov
fstps
xchg
mov
imul
xor
in
cmpsl
ss
sbb
aaa
xor
mov
jo
fidivl
pop
gs
push
jmp
push
sub
dec
inc
leave
xorb
dec
xchg
adc
mov
outsl
test
pop
and
cwtl
mov
inc
int
pop
andb
pop
lret
ds
stos
loop
mov
ljmp
insl
pop
fcomp
sub
test
pop
pop
repz
rcl
adc
int
dec
mov
fwait
xor
iret
jb
call
aad
insb
xor
fldt
lods
pop
scas
bound
xor
shll
xor
jecxz
push
xor
or
dec
or
repnz
and
push
add
in
push
inc
jge
jbe
cmp
out
lret
outsb
jp
fwait
cmp
inc
sbb
cmp
js
sbb
js
xlat
add
adc
std
inc
adc
popa
pop
loopne
fwait
push
push
jbe
and
jnp
jmp
inc
xchg
xlat
sbb
push
pushf
pop
pop
and
in
pop
daa
xchg
sbb
fistl
into
out
imul
je
adc
sub
sbb
and
mov
mov
add
xchg
out
mov
mov
and
push
sub
mov
mov
repz
mov
and
imul
pop
popa
iret
fsub
add
push
cmpsb
ret
adc
sub
sbb
cs
add
imul
ds
and
jnp
popf
pop
push
add
lods
les
rorb
or
inc
mov
xchg
int3
mov
bound
cmp
and
mov
fidivs
in
shl
shlb
or
nop
movsb
dec
mov
in
cmp
jle
cmp
je
push
cmp
dec
sahf
mov
adc
in
adc
inc
divb
cmc
call
mov
mov
push
clc
inc
xor
adc
pop
adc
sahf
rcr
jns
inc
cmp
inc
ljmp
dec
or
push
or
sub
cmp
fcmovbe
in
int3
ss
jns
jmp
outsb
lods
mov
mov
push
adc
je
mov
pop
sahf
test
pop
fdivs
mov
fnstenv
jo
jp
jns
jmp
jg
mov
js
sub
test
cltd
out
imul
stc
je
fwait
scas
jb
sbb
cmpsb
and
xlat
xor
push
push
sbb
jp
and
insl
mov
cmp
add
les
repnz
dec
and
cmp
mov
cmc
dec
pop
hlt
or
cmp
lahf
retw
add
sub
adcl
cmp
testl
adc
sahf
jns
test
pop
arpl
arpl
gs
push
pop
or
cmpsb
cmpsb
cmc
rolb
in
inc
dec
aas
cld
imul
jb,pn
sti
adc
popa
repnz
mov
jo
loopne
addr16
mov
outsl
scas
imul
inc
lods
jge
inc
cmp
lds
sub
pop
lods
jmp
xchg
xchg
mov
cmp
les
ja
test
sub
subl
fstps
sbb
jne
sub
enter
mov
xorb
aad
movsb
out
and
addb
or
adc
inc
sbb
xor
pushf
das
fcomps
dec
sbb
lret
call
loopne
negl
push
sar
pushl
dec
xchg
stos
pop
pop
jne
out
dec
pop
inc
mov
sub
sbb
lods
in
push
dec
sbb
cmp
imul
je
fstpt
sub
les
dec
add
fdivrs
mov
stos
ljmp
or
mov
and
add
fiadds
cmp
adc
xor
or
or
imul
jo
repz
add
and
insl
jnp
repnz
mov
inc
test
sbb
pop
xor
xchg
ja
sub
xchg
test
sahf
or
cmp
mov
stos
adc
iret
or
dec
test
sbb
jbe
jbe
push
xor
or
jnp
mul
lret
sub
and
or
loopne
insl
popa
test
pop
push
daa
or
pop
lea
test
push
call
sbb
adcb
rcrl
sbb
popa
cmp
es
push
push
movsl
imul
xchg
inc
or
xor
loopne
inc
adcb
mov
jmp
jp
mov
fildl
pop
pusha
popa
sub
xchg
popf
add
jle
imul
aaa
dec
test
add
jb
in
inc
lea
add
cmc
test
nop
push
jp
filds
daa
aas
xor
lea
dec
or
jnp
sbb
add
mov
inc
sti
mov
sub
add
mov
sbb
xchg
mov
xor
cmpl
test
aam
mov
mov
sbb
jnp
ljmp
in
ficomps
cmp
xor
inc
rcr
cs
icebp
dec
mov
inc
cli
pop
mov
repz
add
ret
sbb
int
cltd
mov
dec
push
pop
loop
add
bound
inc
movsb
aad
and
fldt
xor
lcall
mov
fdivs
call
xchg
insl
jp
dec
std
xchg
cmovl
sahf
imul
mov
test
inc
sub
test
test
outsb
xchg
push
pop
dec
lds
push
fscale
ror
pop
leave
pop
test
xchg
jb
cmpsb
jge
loopne
mov
xor
add
out
fwait
loopne
in
adc
xchg
repnz
test
js
or
push
mov
retw
xchg
rcrb
mov
add
movb
xor
fisttpl
inc
ja
nop
mov
rorl
popa
pop
sbb
inc
iret
cmc
and
xchg
jbe
out
int3
dec
jne
sbb
inc
lret
add
cltd
dec
push
into
cmp
mov
test
fmuls
sbb
push
in
mov
scas
mov
mov
sbb
jmp
adc
addl
lock
sbb
adc
or
movsl
jo
inc
mov
aad
sub
and
push
add
xchg
repz
xor
and
pop
popf
scas
pop
outsb
test
dec
pop
push
aam
cltd
xchg
mov
mov
imul
jmp
sbb
mov
dec
std
pop
xor
in
sbb
data16
xor
cli
jne
jge
xor
and
pushl
mov
dec
push
cmp
fsubr
xchg
and
in
ficomps
push
mov
or
inc
faddl
mov
arpl
cli
push
jns
cmpsb
pop
lods
mov
adc
xchg
and
jp
dec
dec
pop
jae
mov
mov
shlb
adc
subl
adc
sub
rcrb
and
dec
test
or
pop
jo
outsb
pop
cltd
sbb
xchg
shrb
int3
pop
inc
pop
dec
out
xorl
fs
shl
mov
push
enter
push
or
inc
xlat
cmpl
jnp
adc
ret
cmpsl
fisttpl
fbld
jo
push
in
test
cmp
mov
enter
jl
ljmp
cmp
in
push
xor
pop
pushf
xchg
mov
in
stos
int3
mov
and
or
mov
cmp
cmp
gs
add
pusha
lret
es
add
mov
dec
mov
xchg
pop
xchg
pop
inc
aam
notl
jg
out
add
mov
lcall
mov
jno,pt
neg
cmpsb
fs
andb
sbb
xor
loope
lods
xchg
pop
xchg
aas
xchg
inc
jge
outsl
jl
add
arpl
movsl
sbb
pop
inc
shll
das
xchg
pop
jg
pop
dec
mov
movsl
aam
jae
fwait
repnz
dec
and
jnp
cmp
pop
inc
cwtl
test
js
push
dec
dec
pop
out
lds
add
pushf
rcrl
ret
inc
jecxz
divl
stos
adc
movsb
fsubrs
pop
lea
adc
fidivs
in
or
jb
lret
jge
pop
mov
test
ss
sbb
pusha
mov
dec
shrb
lods
cmp
cmp
xor
fidivrl
int
popa
insb
lret
in
lods
scas
in
cli
dec
dec
insb
mov
pop
xor
jl
fstpl
fisttpll
loopne
loope
movsl
pop
mov
add
mulb
stc
cmc
xorb
out
mov
push
xlat
or
fs
frndint
push
sbb
dec
out
hlt
mov
addb
push
dec
mov
movsl
js
push
pop
lds
outsl
sbb
pop
cmp
adc
and
jbe
xor
mov
push
mov
lea
lret
ret
dec
mov
mov
iret
mov
and
push
adc
cmc
js
clc
dec
sub
dec
dec
movsb
dec
in
inc
and
mov
dec
into
jmp
inc
outsl
es
xor
pop
dec
cmp
fmuls
mov
mov
cmp
subb
push
jle
std
mov
pushf
mov
out
mov
in
pushf
cmp
arpl
fisttpl
add
ss
mov
mov
ds
cmp
mov
xor
push
or
mov
out
lods
sub
fbstp
insl
mov
push
cmpsl
insb
sahf
mov
popa
in
dec
mov
in
pop
xchg
inc
lds
jae
repz
adc
rep
loope
adc
and
push
incb
loopne
aam
int3
cmc
mov
fcmovnb
negb
les
inc
loop
adc
fimuls
xchg
cmp
cmpsb
push
mov
scas
fstpl
stos
pushf
and
inc
adc
out
aas
cs
dec
push
outsb
jno
pop
ds
shlb
dec
pop
lods
cs
mov
or
mov
and
sar
mov
bound
xlat
popf
mov
pop
nop
sbb
pop
or
gs
add
jae
adc
fucom
adc
fiadds
push
int
mov
dec
ret
test
mov
incb
cmp
pop
movsb
mov
cmp
sbb
andb
fnstsw
fdivl
fisubl
mov
xchg
notw
xor
out
mov
mov
add
call
sbbb
mov
mov
into
fisttps
testb
inc
pusha
sbb
cmpsb
xchg
xor
pop
notb
adc
xchg
ficomps
dec
pop
push
aaa
or
or
or
xor
add
call
fcoml
push
pop
fwait
jp
mov
fwait
sbb
or
movsl
sbb
cmp
adc
cmp
and
jne
inc
hlt
stos
jmp
mov
jns
sub
mov
nop
faddl
fcompl
jbe
sbb
dec
test
ds
enter
push
jl
es
imul
in
pop
and
add
lahf
les
mov
inc
and
aas
cmp
scas
fsub
pop
mov
repnz
jno
fdivrl
clc
cmp
xor
mov
or
movsl
sarb
sbb
mov
mov
iret
call
call
imul
cmp
pop
jnp
mov
andb
cmp
ret
xchg
mov
ljmp
adcl
xchg
dec
mov
lea
mov
mov
cli
js
sbb
fdivl
push
mov
add
dec
lea
cmp
inc
mov
sahf
cltd
pop
mov
pop
adc
dec
sahf
fs
pop
je
xchg
mov
jns
call
push
mov
cltd
subl
addr16
int
mov
cmp
stos
repnz
lcall
bound
mulb
mov
repz
dec
imul
dec
mov
in
and
into
bound
jp
fwait
into
out
sub
cmp
out
jb
mov
mov
popf
fstpl
pop
mov
fisubrs
scas
in
jmp
rorb
adc
xchg
or
lahf
mov
or
mov
test
aaa
sbb
scas
adc
into
aas
xor
inc
cmp
cmp
loop
jmp
xchg
and
sbb
nop
xor
mov
leave
out
stos
dec
pop
pop
mov
xchg
fs
cmpsl
pushf
dec
rorl
jle
push
test
mov
pop
fdivl
cwtl
ficoml
fadds
jnp
jno
inc
int
testb
adc
or
jno
adc
mov
mov
pop
dec
testb
xor
cmc
aas
es
pop
das
xor
fiaddl
mov
push
cli
jg
sbb
xchg
push
aam
dec
jo
pop
sti
ljmp
insl
ljmp
stc
in
movsl
test
mov
imul
mov
lret
dec
jp
mov
rorb
or
icebp
sbb
rcrb
or
xchg
fs
popf
xchg
loop
push
xor
lahf
jnp
sbb
aam
push
lods
push
in
jae
mov
fdivrl
sbb
ja
xor
or
not
xchg
pop
cmpsb
out
xchg
cli
ja
mov
jg
ficomps
insl
pusha
inc
mov
mov
push
ret
xor
push
mov
jp
mov
pop
or
int3
rolb
pushf
cmp
sahf
cmpsb
es
push
xor
push
adc
aam
insl
pop
leave
mull
cmpb
sbb
push
and
imulb
xor
fidivrl
mov
sub
and
xchg
lods
pop
cli
sbb
jnp
xchg
fisubl
adc
imul
repnz
ss
xchg
stc
lret
jb
xchg
aas
mov
movsl
ljmp
adc
xor
xchg
xchg
jns
push
je
mov
lds
lret
in
push
xchg
mov
mov
out
shlb
aam
sbb
push
cmp
xchg
popa
xchg
or
sub
mov
mov
sahf
outsl
sub
stc
cwtl
cmp
xchg
lods
jo
iret
sbb
fisubs
ret
xor
stc
pop
lret
add
pusha
xchg
pushf
xchg
xchg
mov
aam
outsl
jo
cwtl
es
arpl
daa
cmc
imul
outsb
rclb
mov
in
je
mov
fs
xchg
jecxz
pop
scas
lahf
inc
push
movsb
add
push
push
enter
inc
pop
jbe
jmp
and
sub
adc
dec
pop
mov
dec
addr16
pushf
stc
les
add
dec
lret
cmpsb
push
push
mov
jle
nop
lods
mov
adc
stc
mov
xor
add
subb
pop
xor
jo
dec
xchg
call
outsl
sbb
out
or
fisttpl
pop
mov
imul
or
adc
dec
add
insl
xor
hlt
addr16
pop
jns
pop
inc
fs
out
sahf
mov
adc
insl
stc
scas
adc
pop
stos
jo
mov
pusha
mov
icebp
test
repz
push
notl
ret
xchg
adc
je
int
sbb
inc
cmc
adc
xor
push
cwtl
xor
push
cmpsb
mov
popa
lds
mov
ficompl
or
jge
call
dec
gs
hlt
das
dec
pop
xor
mov
push
or
jmp
fs
sbb
ljmp
cmp
sarb
cwtl
insb
sti
sti
mov
push
sbb
add
jmp
jns
and
cmpsb
mov
mov
sti
shll
ja
add
push
nop
inc
ret
leave
jl
jl
sahf
xor
lahf
push
roll
mov
cmpsb
fcoms
shrb
mov
stos
jecxz
ss
sbb
cltd
pop
lcall
fwait
cs
and
iret
ds
out
cmp
mov
test
movsb
cmp
lret
adc
ja
inc
mov
call
cwtl
test
or
fwait
and
adc
gs
repnz
in
adc
jbe
int3
insb
cmc
pop
into
out
push
mov
dec
mov
or
dec
xorb
mov
cmp
ljmp
jae
or
adc
xor
mov
xchg
aad
sub
jo
inc
and
gs
mov
mov
mov
xor
xchg
lods
int3
cwtl
fidivrl
out
inc
add
leave
mov
mov
cmp
pop
ret
sub
movsb
jecxz
sub
out
mov
dec
or
ficompl
sbb
cmpsb
xor
jecxz
test
lahf
xchg
lods
sub
xor
push
inc
orb
pop
in
bnd
xor
push
pop
inc
icebp
cltd
ret
aaa
sysenter
push
shrl
sub
pop
mov
and
ret
sbb
cmp
adc
rcr
ja
das
test
mov
scas
adc
jp
enter
cltd
mov
bound
or
in
mov
rorl
aas
repz
shll
push
std
stos
xor
pop
addr16
xor
call
test
inc
sti
nop
lahf
mov
jg
cli
out
adc
xor
aaa
mov
mov
sbb
ja
and
negl
adc
aas
lret
and
int
mov
mov
lods
clc
inc
rcrl
adc
aas
outsb
mov
pop
fldenv
out
ficoms
popf
jmp
add
and
pop
adc
test
adc
mov
cs
jg
rcr
dec
js
jns
aaa
sti
mov
aad
sub
cmp
jmp
jbe
xlat
std
xchg
jno
mov
in
scas
mov
sbb
and
inc
shrl
lods
xor
add
push
cs
jg
sar
ret
mov
clc
pop
jle
clc
push
ficoml
sti
je
pushl
sbb
ficomps
cli
les
jmp
and
dec
push
insb
mov
jb
inc
leave
xor
mov
jge
out
scas
dec
lcall
pop
imul
in
xor
fwait
push
add
mov
lret
lcall
neg
or
pop
fisubs
add
sbb
in
cmpsl
add
stos
imul
mov
add
inc
xchg
incb
sub
xchg
mov
aas
cmp
insl
jo
xor
test
mov
das
fidivrs
jmp
lock
push
pop
lds
fbstp
aas
mov
sti
lahf
incb
cld
mov
mov
xchg
icebp
mov
cmpsb
cmp
jne
lahf
subb
add
cld
pop
cmp
dec
leave
sbb
fwait
mov
stos
repnz
add
movl
cwtl
enter
or
dec
xlat
es
in
mov
sbb
imull
js
mov
stc
mov
adc
ljmp
inc
adc
pop
leave
addl
ljmp
icebp
cmp
fcompl
jmp
add
jae
mov
jge
sti
mov
sbb
mov
jg
jmp
mov
loopne
mov
in
cmc
out
mov
xor
in
repnz
hlt
arpl
hlt
sub
sub
sub
xor
adc
setp
scas
sbb
xor
icebp
icebp
cltd
ret
lcall
sub
sahf
mov
sarl
fbstp
pop
sub
sbb
push
out
pop
pop
pusha
jl
addb
in
or
enter
xor
lods
inc
mov
repnz
mov
mov
pop
sti
in
lock
ret
jmp
jle
cmp
inc
jp
in
sbb
test
xor
mov
aas
jnp
pop
cmpsl
mov
mov
shlb
mov
ds
hlt
adc
mov
dec
js
cld
xor
adc
fisttps
pop
mov
icebp
popf
stc
imul
and
and
mov
sbb
and
dec
sbb
mov
dec
dec
or
xor
ja
daa
adc
mov
add
add
out
ljmp
fsubr
jmp
xchg
cmovp
call
ret
dec
mov
jbe
cmp
fcmovu
clc
pop
and
daa
ja
xchg
idivb
mov
lahf
data16
hlt
sti
fimuls
pop
jle
jae
jmp
xlat
pop
push
lock
mov
js
sbb
cmp
outsb
aaa
cmp
mov
xchg
divb
mov
cmp
stc
add
adcl
add
rcrl
xchg
js
decb
or
roll
call
sbb
insl
cmp
dec
mov
mov
roll
movsl
xchg
test
push
push
push
jbe
notb
mov
adc
mov
mov
movsb
xorb
jle
ljmp
mov
mov
xchg
adc
rclb
xchg
push
cwtl
fstpl
adc
aad
std
jl
xchg
and
and
jecxz
sbb
bnd
mov
adc
sbb
es
push
out
sub
outsb
f2xm1
adc
inc
fnsave
popa
popa
ja
mov
das
shrb
mov
int3
insb
insb
std
les
mov
push
cmpsb
idiv
push
sbb
mov
aam
mov
mov
ret
scas
push
in
cmc
jne
or
push
cmp
arpl
loope
es
lock
mov
shll
jae
shlb
inc
inc
outsb
shrl
incb
imul
jecxz
inc
dec
mov
adc
loop
fistps
mov
pusha
imul
add
cmp
push
adc
xchg
mov
into
or
xor
rolb
push
xlat
lds
idivl
mov
cwtl
nop
nop
in
test
adc
aam
lds
inc
and
loopne
pusha
jb
xchg
mov
xchg
int
jbe
dec
test
fisubrl
test
sub
cmc
adc
shlb
push
fstpt
cmpsl
les
xchg
addr16
dec
mov
cwtl
push
mov
or
mov
and
jmp
adc
sub
sub
out
pop
xlat
xchg
dec
pop
das
icebp
insl
cli
loopne
jns
ljmp
sub
call
repnz
mov
mov
adc
daa
push
mov
push
pop
or
mov
jg
cmpsl
push
loopne
xchg
sar
fidivrs
clc
stc
and
je
mov
mov
ret
loope
aad
inc
inc
jg
jle
hlt
push
pop
sbb
sbb
xchg
mov
push
push
push
neg
outsb
clc
cwtl
clc
sub
mov
xchg
fcomp
clc
test
cmc
mov
jl
dec
loop
arpl
fwait
call
and
sbb
add
add
lcall
int3
mov
mov
pusha
cmp
and
mov
jns
mov
sbb
sbb
cmc
insl
inc
loope
addb
mov
test
adc
test
nop
mov
cmp
xor
bound
sub
movnti
int
mov
xchg
and
and
out
xchg
rcll
mov
adc
xchg
adc
shlb
mov
movsb
mov
mov
loop
imul
or
or
test
cwtl
test
push
push
sahf
std
je
lret
je
mov
hlt
ljmp
pop
mov
mov
inc
mov
adc
mov
jmp
dec
aaa
add
fimull
jp
mov
dec
fiadds
jl
inc
dec
pop
pop
outsl
or
sub
cli
in
pop
pop
sbb
sbb
jo
inc
inc
inc
inc
inc
add
inc
rorl
push
xchg
mov
xchg
pusha
add
movl
in
test
cmpl
mov
test
mov
mov
mov
adc
dec
sbb
jp
lret
or
adc
fldenv
decb
jecxz
mov
inc
xor
add
push
ja
in
fwait
and
fistps
aad
inc
dec
and
fisttps
out
mov
popf
insb
fwait
mov
fdivp
jns
fucom
xchg
cltd
imul
out
das
das
ss
mov
cwtl
xchg
shlb
pop
mov
mov
and
and
inc
and
or
jno
xor
push
pusha
push
dec
xor
xor
aaa
xchg
shr
add
mov
add
shlb
inc
push
xor
push
adc
ljmp
cmpsl
xor
push
push
test
xor
stc
xor
xor
nop
adc
faddl
mov
jp
andl
or
adc
sub
sub
dec
adc
push
ds
mov
sarl
ret
shl
pop
pop
cld
cmp
jecxz
loope
imul
mov
jge
rclb
sbb
imul
divl
and
dec
shl
or
xchg
mov
mov
jle
sti
stos
decl
dec
mov
sahf
mov
xchg
test
aas
sti
dec
push
push
fxch
dec
push
inc
ret
mov
inc
cmp
subb
pusha
sahf
mov
cli
cld
dec
into
aas
jp
sub
punpckhwd
and
cwtl
sub
pop
cli
vpshaw
outsl
jb
cmp
int
cmp
or
adc
pop
lahf
push
fcomp
lea
ficomps
inc
ror
cs
aad
jge
mov
insl
out
push
sbb
dec
jnp
cmpsl
imul
data16
pop
icebp
popa
movsl
outsb
jo
pusha
mov
mov
jmp
cmc
mov
push
mov
pusha
mov
dec
movsl
sbb
push
insl
mov
out
in
cld
imul
dec
xchg
dec
lods
lods
and
out
or
mov
in
xchg
pop
insb
test
sbb
cs
cs
std
decb
jmp
repnz
dec
call
push
pop
add
xor
mov
aad
imul
jmp
daa
in
jmp
loope
fiadds
xor
push
push
pop
cmp
adc
repz
popf
lods
lods
mov
sbb
andb
jg
lret
push
add
jns
and
outsl
in
stc
xchg
stc
pop
lods
filds
and
out
out
out
push
sbb
inc
insb
cmp
xor
xor
adc
dec
cmp
xor
dec
out
lods
xor
push
mov
sbb
mov
hlt
jo
cli
sbb
jge
outsl
mov
cmpsb
push
dec
xchg
adc
jg
das
xchg
or
out
push
adc
mov
jno
and
test
mov
jl
shll
dec
fsubs
add
sahf
movsl
jns
nop
xor
add
std
push
ficoml
xchg
fs
sti
ja
inc
jmp
and
lds
pop
xchg
test
jae
xchg
xchg
xchg
les
cmp
mov
push
cmpsb
fstps
in
pop
cmp
std
test
in
jnp
int
mov
mov
int
fcompl
add
jp
dec
pop
and
jb
outsb
push
int
int
inc
lods
popf
xrelease
test
imul
orl
sbb
jg
cmpsl
pushf
mov
jle
mov
sbb
outsl
dec
sbb
out
xlat
adc
imul
cmp
sbb
out
cmpsl
jecxz
mov
int3
jl
enter
push
roll
ds
sub
or
inc
add
negb
int
negb
mov
mov
fsub
cmp
in
cmp
ss
out
cmc
adc
cmp
mov
jbe
xchg
stos
xor
lret
xchg
lret
xor
cmpsl
sbb
sbb
cmp
cmp
sar
insb
ficompl
sbb
stos
xchg
push
jl
pop
stos
pop
out
rorb
popa
rcl
rcl
sub
aam
push
fs
mov
pop
xlat
jp
sbb
jl
test
mov
mov
orl
sub
imul
or
pop
cmpsb
or
pop
fcos
inc
ret
pop
shll
push
fisttpl
rorl
jo
aam
data16
test
push
mov
sbb
pusha
scas
aam
imul
lahf
lahf
sbb
bound
mov
aaa
fldpi
adc
insb
mov
xchg
cmp
jle
xchg
xchg
lods
push
and
sahf
popa
bound
dec
stos
push
lahf
movsl
lret
xlat
jmp
dec
add
test
test
jbe
mov
or
insb
daa
stc
call
cli
adc
xchg
dec
mov
je
dec
cmp
dec
sub
fsubr
test
xor
and
push
push
addb
xchg
bound
rolb
dec
fwait
pop
pop
xor
cmpsl
insl
call
mull
mov
fs
vhsubpd
rcll
mov
lcall
adc
jle
imul
jp
xchg
mov
sbb
xor
push
leave
xchg
push
push
cmpsl
movl
add
ror
xor
xor
sbb
loop
xor
mov
push
xchg
mov
sahf
int3
stos
rcrb
jbe
test
lret
cmpsl
xchg
xchg
in
scas
push
cltd
cmpb
scas
cmc
imul
push
mov
and
xlat
sarb
incb
testl
test
inc
ds
mov
push
ret
adc
lea
ljmp
cld
cmpb
je
jne
sub
inc
mov
mov
mov
lds
push
dec
push
sub
jmp
aad
jl
movsb
in
fwait
sbb
xchg
insb
sub
pop
push
inc
popa
scas
cld
aad
sbb
scas
cmp
xor
repz
jbe
xchg
mov
test
fwait
cs
movsl
lods
push
jns
xor
outsb
dec
xor
scas
sarl
jns
popa
lods
shll
int3
xchg
mov
or
hlt
sbb
negl
jmp
mov
int3
sub
mov
leave
dec
iret
push
push
push
push
dec
int3
dec
push
fwait
adc
es
call
aam
xor
inc
ret
fisubs
fistpll
push
pop
cmpsl
inc
mov
into
test
out
inc
sbb
lahf
std
sub
sub
sbb
lahf
jecxz
fs
arpl
xor
dec
xor
jnp
out
push
pop
out
rol
pop
xor
cmpsb
nop
push
xchg
popf
adcb
inc
jno
push
cmpsb
lea
sbb
mov
pop
mov
mov
and
jl
and
cmp
dec
add
ds
imul
push
dec
cmp
into
mov
fcmovb
dec
into
aam
fcoms
adc
xchg
aad
lret
cmp
notb
adc
sbb
jns
es
add
xchg
xchg
lcall
pop
and
mov
fmuls
out
push
call
call
push
xor
outsb
stos
scas
mov
arpl
xchg
push
xchg
adc
cmp
sbb
lea
jmp
pop
testb
xor
push
inc
ret
sarl
leave
cmp
jno
pandn
mov
js
mov
pop
xlat
ds
sub
and
mov
sub
fists
shr
xor
push
or
xor
mov
xor
push
cwtl
int3
xor
adc
pop
repz
ljmp
and
lret
mov
mov
mov
add
loop
lcall
ret
outsl
in
cmc
ffreep
cmp
sti
inc
pop
or
loopne
pop
dec
mov
rcl
xor
scas
cmp
sub
ljmp
scas
inc
dec
mov
mov
xchg
orl
inc
xchg
repz
mov
lahf
inc
mov
jne
mov
mov
test
xorb
cld
fisubrs
stos
cmp
fwait
lret
dec
repnz
sti
pop
xchg
push
cmc
jne
sub
in
scas
popa
cmp
jne
test
push
push
xchg
loop
cmc
jnp
data16
jae
movsb
aad
mov
outsl
jecxz
or
pop
mov
imul
lds
movsl
jbe
cmp
das
movsb
and
xchg
push
cmp
ret
pop
out
pop
int3
std
mov
in
or
movsb
movsb
loopne
xchg
push
cmpsl
ret
sbb
mov
push
cmp
aad
cwtl
rep
pop
jae
cmp
cmp
mov
popa
testl
adc
xlat
mov
sbb
inc
pusha
je
cmp
cltd
lds
sub
inc
adc
cmp
or
and
shll
loopne
fldpi
testl
sub
fcompl
dec
push
mov
pop
pop
scas
aam
add
int
cmpsl
sti
push
ss
sbb
adc
pushf
and
mov
xchg
andl
pop
cmpsl
test
jnp
xor
lods
xor
arpl
test
out
rol
popf
popf
movsl
xorb
or
mov
mov
imull
cmp
dec
sub
das
inc
inc
inc
aas
dec
cltd
and
int
mov
mov
jb
mov
add
xchg
or
fsubrs
outsb
and
in
mov
roll
data16
fwait
pop
sbb
push
inc
push
xchg
xchg
popf
mov
test
pop
mov
cmp
jle
ss
adc
adc
jnp
cmp
add
push
repz
xor
inc
inc
inc
mov
fwait
pop
jno
fstl
adc
lods
mov
or
sbb
sub
aad
stos
rol
pop
push
shl
insb
jae
aam
testb
add
pushf
fisttpll
mov
aam
adc
data16
clc
add
fiadds
stos
into
xchg
jp
mov
stos
jbe
xor
inc
pop
xor
cmpsb
add
xor
mov
or
notb
mov
je
outsl
inc
and
addr16
add
hlt
ljmp
push
rorb
xchg
xchg
xchg
jne
adc
adc
stos
loop
jns
inc
cs
repz
mov
ret
ret
fwait
mov
test
cld
pop
sar
pop
call
pushf
or
jecxz
mov
mov
and
ret
and
les
in
cmpsb
mov
subb
cltd
jp
jnp
jae
jnp
cli
dec
add
xor
lcall
fcompl
pop
jp
cmp
testb
subb
arpl
xchg
mov
sbb
scas
xchg
out
xor
repz
sub
popf
mov
adc
push
push
and
daa
pop
int3
add
xchg
xchg
push
loopne
mov
sbb
insb
jecxz
fwait
cltd
or
push
rolb
sbb
push
xor
ljmp
aaa
add
and
push
inc
aas
mov
cmp
lods
popf
movsl
fwait
sub
xchg
data16
mov
stos
leave
xchg
mov
imul
pop
pop
pop
addr16
inc
in
in
lock
inc
sbb
ja
xor
and
or
xor
outsl
dec
scas
out
outsl
adc
gs
loopne
dec
rcl
jno
pop
lahf
mov
add
push
repnz
aam
fistpl
mov
call
pop
popf
adc
lock
cld
dec
outsl
test
enter
das
dec
cmp
cmpsl
adc
pop
sub
insl
addr16
rcr
dec
or
leave
lods
fmulp
xchg
out
inc
inc
xchg
xchg
sub
xchg
cmpsl
clc
xor
in
scas
cmp
addr16
xchg
ret
add
insw
outsl
jno
es
out
sti
out
jg
pop
push
mov
sti
sub
aas
or
mov
xor
aam
dec
push
sbb
shrl
lret
movsl
stos
add
roll
xchg
in
inc
mov
int3
add
inc
pushf
int3
xchg
test
or
fnsave
push
movl
jnp
shrb
jmp
sti
testl
leave
mov
mov
xor
add
lcallw
or
into
hlt
mov
imul
std
and
or
out
movsl
std
inc
fst
inc
imull
and
hlt
pop
adc
jge
xlat
xor
nop
test
pop
mov
ret
ret
iret
dec
int
jne
fwait
fs
mov
xchg
lcall
mov
ffreep
loope
lahf
or
clc
pop
jns
xchg
lods
xor
adc
add
mov
mov
aam
jl
inc
out
std
ja
mov
clc
inc
ret
sbb
mov
das
in
push
mov
xchg
mov
cs
adc
xchg
out
sti
cmpsl
std
xlat
fmulp
lea
or
cmp
movsb
pop
add
xchg
sbb
ja
mov
dec
add
mov
mov
out
sbb
or
mov
ret
sub
dec
mov
inc
xlat
push
popa
dec
insb
dec
inc
pop
ficomps
xchg
iret
add
aas
add
cmp
mov
mov
data16
add
jge
cs
das
mov
xchg
mov
mov
sub
js
sbb
or
out
je
mov
mov
and
leave
movlps
sub
addb
repnz
mov
icebp
xchg
iret
shrb
cs
add
cwtl
call
xchg
and
mov
loop
popa
movsb
out
mov
int3
sbb
test
out
outsl
sti
clc
sbb
mov
dec
mov
mov
test
sahf
mov
mov
stc
jmp
and
fbstp
jmp
jns
loope
or
cli
dec
and
or
fdivs
push
and
fwait
mov
mov
ds
inc
xor
inc
sub
aam
xor
insl
repnz
cmp
ret
xchg
jo
and
mov
add
ret
lret
xchg
or
push
test
outsb
cs
rcr
xor
mov
inc
push
jne
es
in
in
cld
std
mov
movsl
sbb
push
cli
adc
cmp
or
fadds
dec
cmovg
jmp
cwtl
loop
mov
inc
or
ss
call
xchg
jo
rol
and
push
fisttps
out
sub
cmp
xchg
mov
div
and
push
add
aad
mov
jne
les
hlt
jl
cli
add
or
orb
inc
jecxz
js
cmp
adc
and
icebp
xchg
or
and
insb
stos
je
hlt
cli
out
outsb
clc
cmpsb
and
lock
sbb
in
scas
or
xor
jns
sub
ljmp
or
ja
testb
and
push
lret
or
test
xor
mov
inc
cmp
pop
pop
push
jbe
aad
movsb
mov
orb
sub
popf
mov
maskmovq
testl
inc
pop
mov
push
sbb
call
push
inc
dec
pop
rcrl
sets
sbb
jno
jae
and
jae
mov
xchg
mov
mov
jo
insb
outsl
sbb
or
sbb
jns
fcomps
or
mov
andb
cmpb
inc
ds
andb
and
push
dec
orl
fs
lret
adc
ret
jb
or
mov
mov
or
decb
loop
jno
add
popa
adc
adc
jne
sahf
add
lds
pusha
adc
jl
lds
xchg
adc
sub
adc
jne
stos
cmpsb
out
int
pop
in
jnp
sub
pop
push
je
popa
loop
test
push
pop
sbb
pop
push
jnp
test
xor
dec
adc
fists
mov
add
adc
loop
icebp
cmp
sub
call
loop
fs
mov
cmp
mov
mov
push
stos
fwait
adc
sbb
push
fcoms
pushf
cld
std
cmp
and
jp
fisttpl
xchg
lret
push
mov
fwait
mov
xchg
loope
clc
and
lds
mov
adc
sbb
nop
xchg
sahf
dec
loop
imul
fdivrp
fstp
dec
rcl
push
adc
lret
adc
fwait
jo
jo
rorb
cs
repz
ret
outsb
dec
cmp
aaa
cld
call
cli
and
push
in
lods
sbb
aaa
call
sub
loope
or
lods
shll
lahf
stc
jg
imul
jns
sti
cmp
outsl
aaa
imul
mov
push
aam
incb
repz
add
pop
pushf
jg
test
mov
jmp
adc
lods
pop
loop
cmpsl
sub
adc
pusha
xchg
stos
bound
xor
movsb
fsubrl
enter
pop
mov
inc
dec
xchg
stos
push
mov
jae
dec
data16
cmpsl
sub
mov
add
cmpsb
mov
mov
mov
push
dec
leave
shrl
adc
jne,pn
cmc
cmp
out
loopne
mov
lods
lods
loope
push
mov
repz
fsubr
adc
cmpsb
inc
push
sub
lret
aas
lahf
int
mov
and
ret
imul
int3
add
clc
xor
mov
cltd
lods
sbb
mov
test
movl
lret
or
lock
mov
mov
in
push
mov
sub
ja
jno
xor
pop
popf
rcrl
and
pop
into
push
sahf
xchg
dec
add
jae
push
dec
movsb
popa
cltd
lahf
movsl
add
mov
shrb
andl
and
shrb
cmp
bound
mov
mov
cmpsl
scas
mov
lret
mov
mov
sti
test
test
mov
or
pop
es
or
mov
jbe
dec
or
leave
lods
ret
mov
push
sbb
das
out
lock
fmulp
jecxz
xchg
mov
adc
bsf
cld
jl
and
add
out
das
stos
iret
repnz
mov
daa
cmpsb
push
dec
dec
mov
mov
dec
cmp
or
push
adc
loop
rcl
xlat
push
aam
es
dec
iret
subb
out
aam
data16
cmp
pusha
int
adc
jbe
push
cmp
sbb
jp
mov
jnp
or
in
pop
loop
sbb
lea
or
cmc
jge
std
pop
movsb
inc
stos
jno
scas
mov
sbb
mov
std
sahf
mov
sub
adc
or
jp
movsl
fisubs
in
std
daa
movsb
out
jecxz
mov
lds
jnp
std
xlat
not
mov
mov
xchg
stc
jecxz
fstpt
lea
pusha
aas
not
aas
repz
sub
fnstsw
testl
push
add
or
mov
pop
jnp
inc
jo
lahf
outsl
not
adc
pop
rorb
jns,pt
lahf
test
and
mov
or
pop
bound
mov
cmp
ret
popa
in
xchg
jns
outsl
js
test
rorb
mov
xchg
lret
mov
fs
sahf
movsb
mov
fidivrs
pop
mov
inc
adc
arpl
daa
mov
cmp
ljmp
popf
mov
mov
dec
mov
add
repz
in
lret
sbb
ja
testb
mov
neg
cli
ljmp
stc
imul
std
int3
arpl
repz
les
mov
loope
push
mov
mov
out
and
xlat
cmc
aas
icebp
mov
mov
push
kxorw
ss
dec
lods
xchg
or
popf
daa
dec
stc
mov
lods
jmp
push
jne
iret
xor
jl
adc
pop
mov
and
mov
stc
cmp
push
lret
lret
lahf
mov
cs
jp
outsb
sbb
aas
xor
pop
orb
adc
or
stos
mov
mov
in
leave
jns
xchg
je
insl
inc
scas
pop
lret
ljmp
lods
outsb
ret
cltd
dec
lods
pop
pop
jnp
das
fs
pop
mov
push
inc
cld
lcall
popf
scas
mov
shll
aam
call
inc
cwtl
and
outsl
sahf
imul
jbe
dec
pop
mov
mov
pop
pop
mov
outsb
jns
add
rcll
xlat
outsb
push
adc
inc
loope
sub
imul
fldt
dec
sbb
inc
xor
pop
adc
dec
sub
scas
outsb
jo
xchg
int3
xlat
out
int3
pop
sbb
addr16
mov
xlat
xlat
fldenv
fidivs
rcrb
pop
jns
pop
sub
ret
jae
cltd
in
pop
mov
inc
inc
iret
pop
out
ljmp
mov
sub
mov
jae,pn
cmp
in
mov
mov
cmp
popf
mov
lea
repnz
sub
cld
add
fucomi
dec
fstps
fcoms
sub
adc
testl
sub
ss
out
lods
jae
mov
iret
or
scas
inc
add
aad
mov
mov
and
ljmp
ret
icebp
cmpsl
mov
aam
call
xor
lcall
xor
das
add
js
pop
leave
or
mov
iret
push
cmp
cmp
cmpb
mov
inc
push
add
inc
xchg
mov
mov
adc
jle
and
loopne
inc
cmp
pop
mov
push
inc
daa
sub
test
ret
push
push
pop
and
das
jge
sarb
cmpsl
push
add
and
jno
mov
stos
pushf
roll
bound
xchg
inc
and
xchg
enter
fwait
xor
mov
rorb
inc
test
xor
jp
popf
aad
aaa
sub
cmp
add
push
dec
in
aaa
loop
jp
mov
cmpsb
mov
pop
pop
push
mov
mov
xchg
cmpl
pop
lods
or
sub
into
add
rcr
ficoms
je
mov
inc
inc
fisttpll
icebp
lret
pop
cmp
adc
pop
ret
andl
pop
inc
dec
and
cld
cld
pop
in
mov
ljmp
dec
jo
push
dec
sti
jbe
aaa
cwtl
es
push
or
adc
repz
mov
sbb
dec
jmp
arpl
push
pop
jno
nopl
fdivr
std
sbb
fs
jo
pop
ret
fdiv
push
jmp
jl
fsubl
int3
lahf
rcrb
sbb
mov
mov
outsb
aas
jmp
jge
mov
xor
dec
cmpsl
aad
shrb
jmp
repnz
pop
rcrl
jae
sbb
hlt
pop
ret
out
flds
stos
andb
pop
adc
inc
mov
push
cli
call
leave
mov
jns
movl
adcl
in
xchg
mov
rorb
and
shlb
xor
pusha
movsl
and
insb
jge
xlat
in
stos
mov
lret
jge
insb
out
prefetcht1
mov
clc
or
jle
xor
je
fmul
add
jp
cmc
insl
pop
neg
fidivrs
inc
cld
jno
jmp
loope
adc
nop
push
or
testb
int
xor
xor
inc
mov
cli
push
xor
sbb
dec
lret
out
repz
cltd
cmp
loopne
dec
xor
jne
pop
jbe
push
jmp
movsb
push
mov
xchg
dec
movsl
imul
notb
push
outsb
push
push
mov
loopne
xchg
add
push
cld
add
test
mov
hlt
jle
or
lods
lea
in
add
mov
cmp
dec
mov
in
scas
or
pop
push
lcall
in
pop
aaa
sub
xor
xchg
es
cld
dec
jno
cs
mov
lock
and
pushf
push
cli
inc
xchg
or
insb
jecxz
out
cmpb
clc
mov
cmpsb
daa
push
push
xchg
clc
sbb
in
pop
int
xor
sub
enter
push
sbb
aam
inc
dec
or
pusha
push
jae
filds
add
repnz
cmp
xor
cwtl
xor
sahf
fwait
mov
gs
inc
pop
sub
sub
sbbl
enter
xchg
leave
in
add
push
push
aad
push
fistpl
repz
jne
out
in
lret
imul
jle
sub
mov
pop
cmp
pop
fwait
popf
xor
testl
stc
xor
js
xchg
sbb
xor
or
pop
cld
sub
roll
insl
adc
and
jbe
mov
es
xor
sbb
pop
xchg
lret
xor
jl
outsb
xchg
cmpsb
mov
cmp
add
and
orb
mov
push
mov
fiaddl
arpl
fwait
push
mov
jle
push
add
or
sbb
ret
lcall
aaa
repnz
cli
insl
push
stos
inc
jae
loope
or
and
xchg
jne
jo
iret
pop
jnp
dec
call
jl
scas
dec
js
dec
jno
enter
mov
xor
mov
cmc
jle
mull
sbb
sub
ja
jg
xor
andb
div
clc
cmp
push
sbbb
sbb
or
or
adc
cld
pop
mov
jg
jo
jle
jmp
cmc
adc
shlb
xchg
decl
orb
das
aas
inc
mov
loop
cld
sub
aam
inc
sbb
dec
in
push
lret
in
fists
js
push
xorb
mov
out
mov
jnp
shr
testb
or
pop
loop
push
bound
movsl
mov
dec
stc
mov
jb
iret
mov
pop
inc
movsl
sub
xorb
pop
mov
mov
and
adc
jb
das
iret
cli
push
cmpsb
into
cmp
sub
fldcw
pusha
jp
xchg
js
cltd
mov
pop
test
lods
mov
enter
mov
jle
mov
ror
pop
inc
rclb
sub
fcom
lahf
inc
fwait
xchg
sti
lahf
mov
sub
inc
inc
dec
fistpl
jbe
and
adc
pop
dec
cmpsl
and
jbe
pop
inc
xchg
lods
subb
pop
lahf
mov
dec
mov
cmp
mov
pop
jae
jecxz
cmpsl
lret
push
addr16
adc
mov
mov
ficomps
outsl
jmp
neg
push
std
pusha
andl
adc
fldenv
inc
hlt
sbb
xchg
out
stos
adc
add
cmp
int
das
ja
push
adc
cmp
xor
xchg
mov
aad
insb
aaa
inc
xchg
add
gs
mov
sbb
xchg
lea
iret
movsl
or
repnz
fimull
sti
cmp
int
icebp
enter
sti
push
jnp
fstp
cli
aad
xor
lahf
pop
cmp
xchg
stos
cli
out
xchg
jmp
jp
sti
pusha
lods
shrl
lcall
xor
pop
sbbl
jl
les
add
addl
add
jl
mov
sbb
ret
shll
imulb
fildll
cltd
call
jmp
dec
and
dec
or
sbb
pop
lret
mov
pop
addb
add
lds
ret
cmpsl
fwait
cli
push
shrl
cmp
dec
nop
push
push
and
mov
roll
dec
xchg
push
cmc
cmpsl
or
inc
xchg
in
dec
cmp
mov
sbb
or
sbb
arpl
xor
xorl
and
xor
cmp
insb
stc
adc
data16
sbb
ret
data16
lods
dec
push
pop
out
inc
ds
test
mov
in
cmc
sbb
enter
test
das
imul
xor
cmp
es
mov
mov
mov
mov
fwait
jbe
inc
sub
lds
mov
cmp
addl
dec
scas
dec
adc
divb
push
add
sub
jle
imul
pop
nop
xchg
push
test
and
adc
psadbw
testb
movd
mov
lret
add
test
push
pop
dec
addb
ja
popa
ret
mov
icebp
xor
icebp
push
cmpsl
inc
sbb
ret
jae
sub
xchg
jbe
out
mov
push
bound
insb
xchg
or
scas
cmp
mov
jg
fnstsw
outsb
ljmp
and
movsb
inc
jno
push
scas
call
mov
push
jecxz
mov
sbb
pop
ja
sbb
fwait
pop
fsubrs
insl
xlat
mov
andl
mov
ret
inc
dec
push
cwtl
lahf
xor
or
testb
pop
pushf
movsb
scas
adc
sbb
inc
loop
rorl
jmp
mov
lret
inc
test
mov
or
sub
mov
add
sbb
call
adc
and
rorl
sub
not
clc
aas
clc
and
fdivrl
adc
fdivs
push
sub
shrl
xor
and
shl
movsl
xchg
jb
sbb
in
xor
fstps
pop
xorl
lret
mov
or
xchg
dec
dec
push
or
dec
sahf
pop
in
pop
pop
mov
je
mov
ds
xchg
adcb
sub
and
sub
add
imul
test
mov
push
stos
into
xchg
inc
adc
push
inc
push
jbe
mov
pop
icebp
dec
mov
xchg
mov
rcl
add
test
lea
cmpsl
daa
ja
call
inc
or
or
adc
fdivrs
pop
mov
inc
inc
dec
pop
xchg
sahf
shrl
sub
lds
and
adc
setnp
mov
jno
roll
ljmp
push
and
scas
into
pop
push
std
dec
pop
arpl
xor
nop
lods
out
xlat
cs
push
subb
fidivrl
aaa
mov
adcb
or
jae
in
jg
fwait
out
enter
jl
pop
rcrb
popf
sub
xchg
dec
mov
push
mov
cmp
and
in
call
jge
jb
out
gs
jb
mov
adc
push
aaa
gs
jae
les
fnstsw
data16
subb
nop
sbb
outsb
add
je
fsub
jb
sub
push
movsb
stos
jno
and
notl
jno
hlt
divb
test
es
fldl2t
cld
mov
sub
mov
add
adc
lret
sbb
loop
push
rcl
jecxz
stos
cmp
cwtl
xchg
xchg
xchg
rorl
and
xlat
rclb
into
xor
xchg
pushf
and
cmp
loopne
stos
out
cmpsl
mov
or
jno
xor
and
inc
ds
push
dec
out
inc
sbb
outsl
das
sub
or
cmp
add
loope
mov
mov
rol
loop
gs
add
push
inc
dec
mov
mov
pushf
nop
xchg
xchg
push
cli
dec
adc
mov
ss
in
dec
insb
dec
out
xlat
vpsubsw
jb
adc
jl
jl
daa
mov
cmpsb
cmovge
pop
mov
jge
ja
add
xor
ret
and
roll
pop
jp
push
daa
lock
or
fs
xchg
out
fstpt
mov
lea
lahf
and
sub
add
popa
pop
loopne
dec
aaa
test
sbb
cs
jecxz
dec
inc
repnz
int
mov
in
idiv
lret
fwait
test
cmp
xor
repnz
mov
pop
xchg
stc
inc
or
movl
pop
mov
mov
fsubrl
xchg
xlat
jns
inc
loopne
gs
cwtl
cmp
mov
xchg
outsl
pop
aas
mov
adc
inc
in
sbb
dec
cmc
or
ja
sbb
cli
cmp
sbb
loop
daa
loope
pop
mov
xor
push
adcb
sbb
call
fsubrl
ficompl
dec
in
jbe
jb,pt
jl
xlat
popa
or
pop
jb
in
add
movsb
adc
dec
les
mov
xchg
mov
xchg
ret
push
pop
inc
xchg
rclb
std
mov
adc
pushf
xor
leave
test
aad
inc
les
scas
push
mov
repnz
push
cmc
mov
pop
es
push
fcmovu
xlat
xchg
leave
rcrl
call
das
scas
clc
xchg
fnstsw
pop
mov
adc
out
hlt
loope
dec
adc
mov
jp
xchg
push
adc
sub
loopne
pop
sbb
and
mov
fisttpll
shlb
cli
xchg
std
movsb
inc
shll
imul
inc
cmpsl
cmp
cmc
jge
mov
lret
stos
stos
imul
ja
js
aam
sub
sub
mov
adc
mov
mov
jg
mov
mov
add
mov
sti
jns
lods
into
scas
in
out
cmpsb
inc
and
clc
mov
jno
js
jg
cmpsl
xchg
lcall
mov
pop
test
cmp
adc
fmul
and
inc
jge
push
mov
push
pop
xchg
mov
adc
mov
add
jp
js
add
xchg
mov
xor
pop
fnstsw
sbb
add
inc
stos
test
negb
sbb
sub
adc
inc
adc
adc
sbb
sbb
stc
cmp
cmpsl
fs
mov
xchg
inc
cs
mov
outsl
add
repnz
mov
hlt
je
inc
dec
and
stos
stos
mov
xchg
cmc
mov
mov
sub
rorl
xor
bnd
fdivs
bound
mov
xchg
pop
push
inc
mov
xchg
ss
xorl
fsub
pusha
mov
dec
push
std
or
adc
ja
out
cld
jae
ja
push
mov
dec
mov
push
js
inc
inc
outsl
jne
sub
xchg
adcl
fcom
ror
insl
push
lret
aam
lcall
push
sbb
push
push
bnd
sbb
loop
aaa
adc
sub
stc
jl
hlt
pop
leave
adc
stos
and
push
rclb
pusha
cltd
xchg
push
inc
or
std
push
clc
mov
mov
push
mov
cmc
jne
or
push
mov
add
je
pusha
lea
stc
test
fbld
subb
mov
dec
cmpsl
sub
inc
cmpsb
adc
or
sub
xchg
mov
or
or
subb
xchg
push
and
sub
mov
shlb
xchg
push
pusha
push
sbb
jl
jno
in
imul
inc
sub
decl
in
inc
call
in
inc
call
in
inc
call
in
inc
call
in
inc
call
in
inc
call
in
inc
call
cmp
int
pop
outsb
xchg
shl
lds
sbb
mov
pop
repnz
fildl
lea
les
dec
mov
cmpsb
and
cmc
loop
mov
aad
dec
int
loope
in
lds
push
adc
insl
into
xchg
cmc
xor
in
pop
xor
jns
sub
mov
cs
push
dec
inc
adc
pop
mov
jo
movsl
add
push
xchg
add
int
lds
xchg
das
mov
lcall
or
push
daa
inc
dec
outsb
data16
cmp
sub
testl
movsl
shrl
test
leave
scas
adc
int
into
dec
dec
ja
cmp
and
lea
and
dec
pop
xchg
scas
xchg
xor
inc
loopne
cmp
ja
iret
inc
cmpsb
inc
mov
movsl
test
cmp
aam
or
jl
sbb
fucomi
stos
adc
mov
push
push
push
ret
nop
xor
jae
call
jno
rcl
mov
test
stos
inc
inc
push
pusha
popf
push
mov
gs
mov
add
sbb
jp
adc
nop
imul
xor
rcll
dec
leave
dec
repnz
insb
xor
mov
scas
out
jb
in
push
mov
mov
jne
pop
scas
sar
xor
gs
mov
addl
imul
xlat
ds
push
pop
test
push
push
test
lcall
or
mov
leave
mov
dec
mov
es
pop
push
dec
xchg
xor
cmp
dec
in
stc
sti
scas
ret
mov
pop
mov
jmp
sbb
pusha
sub
sub
hlt
in
push
add
push
js
push
mov
mov
sti
mov
cli
adc
daa
movsl
jns
std
sbb
mov
pcmpgtb
call
dec
push
sbb
add
popl
jg
jg
adc
in
stos
mov
jnp
call
repz
mov
and
adc
mov
push
push
sar
or
stos
cmpsb
mov
jp
mov
in
aad
ficomps
and
aad
mov
cmpsl
out
scas
mov
mov
ffree
adc
inc
add
push
jmp
jne
mov
pop
icebp
loopne
xor
cmpb
daa
dec
shrl
out
lret
mov
jge
push
xchg
clc
mov
or
std
jne
jbe
xchg
aam
sahf
int
jge
js
das
rcll
mov
push
jecxz
mov
pop
sub
fadd
mov
fadd
ja
aas
aaa
lret
pusha
nop
xchg
mov
jge
inc
fisttpll
inc
popf
pop
mov
push
int
jle
jb
scas
jmp
inc
mov
and
ljmp
cmovle
mov
jmp
jnp
jge
mov
inc
mov
cmovb
cmp
mov
xlat
call
xlat
mov
mov
sub
xor
lahf
mov
mov
mov
cli
mov
in
xor
xor
fsubl
xor
addr16
hlt
and
int3
in
xor
aas
xchg
sbb
lret
mov
mov
into
insl
mov
loopne
and
push
jno
cwtl
dec
adc
pop
push
addr16
test
repz
repz
mov
fwait
scas
out
cs
movsb
jmp
pop
loopne
jge
lret
pop
lret
movsb
pop
push
mov
inc
push
xlat
outsl
mov
xlat
imul
sti
iret
inc
cmpsb
jnp
repz
insl
ss
adc
stc
aam
pop
rorb
mov
sbb
int3
in
jbe
lea
in
lock
out
orb
pop
sub
sti
insb
pushf
dec
xchg
stc
jbe
xlat
cmp
add
ljmp
testl
mov
mov
into
mov
mov
xchg
cmc
cmp
sbb
jle
xor
jns
in
stos
dec
push
dec
testl
dec
stos
pop
insl
and
sub
scas
xor
xchg
fdiv
stc
mov
inc
aaa
call
mov
fnsave
push
jne
std
and
scas
pop
insl
jecxz
cwtl
std
fldcw
cld
push
je
jb
jle
pop
mov
fmul
pop
into
aam
mov
sub
mov
and
mov
nop
and
inc
fchs
cmp
std
fcoms
lea
mov
inc
push
and
adc
inc
and
ret
sbb
jecxz
rorl
jb
aam
push
jo
mov
lods
mov
les
loope
sub
xchg
xor
adc
leave
or
dec
mov
clc
adc
mov
ss
scas
ja
xchg
sahf
inc
out
jo
in
popf
popf
cmp
push
pop
xchg
sbb
imul
mov
das
shll
addr16
fucomip
pusha
filds
mov
push
cltd
fs
mov
ds
dec
dec
pop
and
popa
jae
lret
cli
mov
push
jno
xchg
stc
aad
add
push
clc
js
jecxz
push
add
push
stc
imul
inc
pop
lret
cmp
inc
pop
pop
arpl
outsb
test
jo
clc
xchg
hlt
and
and
jae
push
add
pop
xlat
fsubs
sahf
negb
inc
in
rcrb
and
add
mov
incb
cmc
dec
lods
dec
lods
rcrl
out
adc
js
in
push
popa
int
or
stc
leave
dec
inc
fldl
mov
mov
push
inc
mov
aaa
xchg
rolb
iret
push
shl
inc
dec
add
rcrb
into
cs
cmp
test
mov
sbb
mov
orb
stos
js
loope
pop
xchg
xchg
out
repz
inc
mov
lahf
mov
adc
xlat
jae
cs
and
sub
leave
test
mov
insl
inc
aad
icebp
sub
cmp
fdivs
dec
outsb
das
jo
pop
fadds
mov
adc
mov
pusha
bound
sbb
sbb
out
cwtl
push
mov
in
xor
sbb
subb
dec
xor
fisubrs
cmp
mov
jle
mov
push
fsubs
sub
push
push
je
popf
and
sbb
sbb
sub
test
insb
mov
arpl
mov
pop
push
les
mov
insb
insb
jno
aam
inc
jbe
jg
sti
inc
mov
add
add
pop
jecxz
imulb
mov
and
and
pop
test
or
push
loop
fistpll
cmc
cld
mov
dec
inc
imul
jg
scas
int3
cmp
std
mov
xorl
lock
push
add
xchg
popf
adc
xchg
lcall
xchg
mov
sbb
pusha
mov
inc
and
xor
push
jmp
cli
xor
xchg
mov
mov
or
or
adc
gs
pop
xor
in
mov
cwtl
pop
cmpl
sbb
mov
add
orl
addr16
test
jge
lds
data16
js
aad
in
push
and
xor
push
xorl
jp
mov
in
jns
lahf
mulb
loope
sub
roll
mov
test
add
xchg
enter
shrl
addr16
or
mov
push
sub
pop
mov
add
sbb
inc
inc
loop
mov
in
pop
add
jno
xchg
push
jg
xchg
push
test
nop
mov
xor
adc
sub
fstpl
sbb
in
mov
add
sub
add
sub
repz
mov
jl
fisubl
mov
out
mov
inc
mov
mov
int
fistl
js
incl
mov
jp
cmp
lret
pop
add
aad
xor
sarb
cmpb
incb
in
mov
adc
push
push
sub
mov
ds
pusha
in
jecxz
cld
cmpsb
push
lds
mov
cmp
fs
pop
adc
int
das
and
mov
push
dec
fisubs
mov
imul
out
movups
mov
ret
xor
mov
push
add
shll
mov
cli
mov
push
push
push
addr16
cmpb
outsb
or
cli
xchg
push
xor
lahf
clc
push
dec
rcrb
and
jle
xlat
sub
in
jle
fs
jae
leave
inc
push
or
mov
pop
sbb
add
push
rorl
pop
gs
pop
arpl
fdiv
or
jmp
push
sub
cwtl
negb
inc
js
add
cmp
adc
shlb
sub
cmp
mov
aas
push
dec
loope
in
sbb
inc
inc
add
insb
cwtl
push
call
jecxz
fs
cli
fdivrs
adc
push
movnti
dec
scas
stos
ss
push
in
outsl
dec
mov
fnstcw
sti
adc
add
mov
dec
adc
and
mov
pop
addr16
icebp
xor
pop
loop
lods
movsl
add
std
mov
mov
sbb
cltd
inc
hlt
mov
push
pop
or
leave
fs
insl
cmp
pop
mov
fwait
cmp
pop
outsb
scas
add
lahf
hlt
into
dec
jg
filds
mov
inc
mov
xchg
mov
or
pop
jne
adc
adc
xchg
add
idiv
lcall
int3
stc
inc
add
das
inc
add
cld
aaa
jae
sahf
pusha
mov
mov
and
push
push
sub
stc
test
into
sub
push
mov
dec
sbb
pushf
dec
insb
inc
loop
ret
or
sbb
ljmp
pop
mov
jo
mov
ror
addl
cld
xchg
data16
push
jne
in
sti
inc
jnp
mov
push
test
fsubs
pop
popf
mov
mov
inc
pop
mov
cmpb
movsl
hlt
lret
rclb
cmpl
sub
dec
shld
pop
rorl
mov
not
push
cmc
enter
aad
sti
and
je
arpl
pop
jecxz
jg
cli
and
int3
dec
xor
bt
fdivr
das
lods
push
push
ret
arpl
xchg
lods
ret
cmp
jmp
pop
add
adc
xchg
loope
movsl
or
pop
push
sbb
inc
imul
cwtl
xchg
ret
pop
xchg
and
test
filds
push
mov
sbb
int3
jle
or
jl
bound
mov
sbb
in
aas
orl
push
dec
lea
xchg
repnz
cmpsl
fdivrs
mov
xchg
lea
into
push
je
nop
inc
sub
call
rcl
sub
inc
inc
lret
mov
movsl
adc
xchg
bound
movsl
mov
jecxz
mov
imul
mov
sub
arpl
xor
movsl
adc
push
fs
push
pop
push
andb
mov
movsb
fcompl
jne
inc
sub
negl
or
dec
jo
sbb
scas
bound
jbe
dec
lea
sbb
cltd
adc
bound
fisubl
dec
mov
push
inc
dec
or
adc
inc
cli
push
aas
or
add
subl
fs
jl
inc
pminub
and
sub
sub
in
lret
xorb
lock
sbb
sub
adc
data16
inc
cwtl
push
mov
or
imul
mov
or
dec
inc
and
xchg
stos
adc
ret
mov
xor
mov
or
jns
fsubrs
fsubs
out
test
or
pop
mov
push
call
testb
out
ljmp
lods
mov
sbbl
jle
outsb
cmp
lods
mov
pop
enter
clc
repz
out
mov
ret
sbb
sbb
xor
cmp
or
in
cmpl
lea
adc
gs
js
or
ss
add
call
ror
xchg
int3
aaa
and
mov
addr16
jecxz
cltd
pusha
pop
push
lahf
adc
or
mov
icebp
sahf
push
ret
inc
ss
add
daa
daa
pop
adc
mov
xchg
xor
sub
mov
and
jl
mov
loopne
jb
popf
repnz
inc
sbb
cld
jl
cmp
dec
int3
mov
scas
inc
arpl
xlat
insl
jno
push
push
lret
jp
mov
out
push
int3
cmpsb
lock
push
inc
push
leave
mov
shlb
mov
jo
xchg
ror
dec
insb
enter
ss
jle
ds
mov
jge
popf
sahf
popa
sbb
adc
mov
mov
stos
cmp
inc
and
stos
push
xchg
int3
pop
mov
int
push
ror
mov
mov
and
icebp
push
push
stos
sbb
in
adc
jp
leave
inc
imull
pop
mov
ret
and
imul
cld
mov
inc
pushf
arpl
cld
loope
or
pop
rolb
sbb
mov
repz
lds
xlat
bound
sub
mov
push
aam
je
xlat
push
clc
adc
push
mov
and
lret
lds
xor
lds
lock
inc
popa
mov
dec
jl
sarl
mov
cs
push
inc
daa
pusha
push
jmp
test
icebp
push
stos
enter
mov
adcl
jle
adcb
push
xor
inc
subb
mov
jmp
cmpsb
leave
xchg
jmp
outsb
sar
mov
ljmp
jnp
xor
add
adc
lods
and
xchg
out
testb
mov
and
xor
scas
pop
clc
pop
sbb
hlt
and
daa
add
roll
dec
push
xor
xchg
mov
into
pop
insb
fwait
je
dec
xchg
or
or
xchg
arpl
std
inc
addb
fwait
cmp
mov
mov
dec
shrb
scas
mov
add
aaa
jns
jno
sahf
shll
enter
jl
xor
dec
clc
cmp
ret
iret
imul
jne
aas
int3
lcall
arpl
and
adc
or
roll
dec
dec
pop
mov
aad
pop
jbe
dec
das
dec
cmpsb
es
dec
in
dec
adcl
adc
mov
ret
push
test
xor
mov
test
fstpl
fwait
ljmp
xor
pop
adc
gs
pop
insb
jle
ds
enter
jnp
and
pop
mov
push
inc
insl
jnp
cmpsb
leave
shll
sub
nop
movsl
lret
cs
mov
popa
daa
arpl
push
push
inc
outsb
and
sbb
fwait
xchg
cli
xor
je
cmc
adc
push
inc
dec
sbb
bound
jl
sbb
repz
loopne
push
push
jno
push
xchg
sub
popa
rcll
push
mov
xor
jns
out
push
or
lcall
pop
out
idiv
out
or
jg
inc
stc
push
loopne
lds
rorb
mov
jae
sub
outsb
outsb
jnp
data16
dec
push
sub
inc
out
xchg
mov
or
scas
bound
iret
daa
sub
mov
mov
mov
cltd
lea
adc
xor
sub
or
inc
repz
xchg
inc
sbb
sbb
inc
adc
insb
cmp
sub
push
test
imul
lods
xor
jmp
mov
out
jg
test
xor
stc
movsl
cmp
pushl
adc
pushf
aad
or
sub
call
cmp
inc
outsb
ffree
dec
int
adc
pop
jmp
outsb
sarb
push
enter
xor
outsl
xorb
mov
mov
dec
loop
mov
xchg
into
push
adc
mov
ds
inc
lahf
int
test
pop
dec
outsl
push
mov
pop
jg
xor
jnp
push
int
and
pop
mov
jo
ret
je
leave
cli
sbb
jl
popl
and
clc
or
mov
sbb
mov
popf
out
pop
xchg
mov
or
lods
call
cmp
cmp
add
cwtl
sbb
xor
aam
adc
mov
jmp
fcomps
pop
out
jmp
ljmp
loopne
mov
iret
out
dec
cmp
int
sbb
in
insl
stos
aas
add
inc
in
adc
movsb
jecxz
sbb
mov
jbe
cmp
push
mov
out
mov
dec
push
add
jl
divl
sub
inc
mov
push
iret
fadd
ljmp
int
cltd
outsl
or
arpl
adcl
lahf
mov
aas
aas
jecxz
leave
cmp
sbb
loopne
pop
pop
or
mov
into
or
xchg
mov
adc
cld
dec
subb
push
fwait
xchg
xchg
mov
dec
addr16
xor
pushf
insl
cmp
sub
ljmp
jo
cltd
daa
aas
in
stc
stc
dec
xlat
in
out
adc
mov
dec
arpl
sbb
int3
push
mov
stos
gs
loopne
decb
mov
out
sbb
dec
pushl
hlt
dec
sub
mov
movsl
xor
fidivs
pop
jge
push
mov
pop
jecxz
add
push
sbb
mov
mov
enter
mov
imul
jge
jo
add
movsl
or
add
mov
repnz
xchg
and
mov
cld
test
pusha
addr16
push
inc
sub
clc
shll
ret
rol
dec
ret
dec
mov
lret
adc
mov
es
xchg
jns
mov
aam
outsb
mov
xchg
mov
adc
es
movsb
movsl
adc
or
xchg
stos
fsubs
push
lods
fstp
js
xor
das
push
jb
push
enter
pop
gs
cmp
mov
and
decl
lds
pop
cld
jge
es
dec
jle
or
mov
imul
push
mov
repz
cmp
lret
push
lcall
hlt
imull
test
sub
cwtl
or
inc
jo
loopne
loop
mov
xor
mov
xlat
ror
sbb
cmp
in
xor
mov
lods
sbb
mov
into
popf
imul
std
lods
stc
sahf
mov
mov
mul
daa
adc
add
rolb
adc
mov
inc
sbb
or
or
or
or
add
rolb
adc
mov
mov
fcoms
sbb
cmp
rcrb
insb
fstps
cltd
ret
call
jmp
push
xchg
out
dec
xchg
dec
sbb
js
out
aaa
pop
mov
lret
push
pushf
fcompl
pop
push
outsb
fisubl
xor
mov
or
daa
fs
mov
adc
push
fsub
adc
dec
sbb
insl
xor
xor
push
pop
imul
sahf
cmp
dec
ficomps
push
shl
xor
inc
mov
ja
lods
repz
jb
dec
cwtl
mov
mov
add
cltd
mov
sub
andb
mov
cmp
sbb
addr16
addr16
les
inc
cmp
cmp
nop
pop
mov
push
pop
cmpsb
and
mov
xchg
dec
cltd
insb
adc
scas
xchg
sub
outsb
dec
pushf
dec
hlt
push
and
sbb
lret
fcmovnb
stos
outsb
sub
push
js
negl
test
jmp
adc
jb
adc
rorl
jns
outsl
gs
cmp
inc
xchg
shlb
repz
mov
lods
xchg
icebp
into
inc
adc
stc
stc
mov
sub
jnp,pt
data16
jmp
dec
xchg
sbb
dec
int
jle
lock
stos
cmp
jns
sub
or
xor
dec
dec
addr16
aaa
movsb
push
mov
xor
xor
sbb
inc
aas
pop
push
movsb
imul
cmpsl
dec
mov
aam
or
push
xchg
sbb
pop
mov
insl
roll
je
push
mov
fs
stos
cmp
arpl
stos
lahf
jl
dec
lret
aad
jns
push
imul
push
pop
loope
aam
aad
sbb
outsb
xchg
cmp
pop
cmp
dec
or
lcall
mov
sarb
jg
popa
push
jp
cmc
jnp
add
inc
sub
aad
jg
mov
aas
mov
leave
inc
mov
mov
daa
sti
xchg
sub
sub
enter
in
loop
divl
lea
fmull
jbe
out
or
xor
jns
into
popf
ret
lods
in
shr
hlt
dec
lock
out
scas
test
out
push
ljmp
loop
pop
out
sbb
xchg
psubusw
jo
jno
insl
jmp
scas
std
jbe
mov
scas
cmp
xchg
mov
outsl
jp
jecxz
imul
sub
inc
inc
in
lcall
cs
insl
iret
fbld
jnp
aam
cmp
mov
stc
xlat
jl
adc
fdivrl
aaa
sub
sub
fwait
pop
out
test
xchg
xchg
sar
cwtl
jmp
outsl
fistps
out
es
das
rcll
mov
rorl
sub
cmp
outsb
mov
mov
in
dec
lahf
stos
call
addb
lods
flds
adc
add
inc
scas
jbe
loopne
out
loope
or
mov
imulb
jl
pop
inc
test
mov
outsb
sarl
mov
cld
jge
ret
mov
out
xor
lret
jne
subb
stos
fsubrs
pop
sar
jge
jns
xlat
lods
ja
mul
mov
repz
push
inc
mov
xchg
loopne
push
lcall
mov
enter
in
test
pop
fbstp
jnp
pop
jecxz
les
xor
scas
out
push
pop
jmp
std
test
fmuls
pop
insl
mov
inc
mov
dec
or
push
sbb
jae
ficomps
bound
int
lods
out
outsb
fwait
test
dec
xchg
mov
popa
enter
xchg
add
pop
js
insb
int
mov
in
mov
inc
movsl
push
jmp
aaa
xchg
push
sub
rcll
fst
ljmp
sbb
cmp
cld
cli
add
scas
loope
pusha
cmp
movsl
cwtl
push
xor
in
and
nop
jmp
adc
ss
sub
scas
dec
enter
lahf
mov
mov
addr16
fdiv
push
adc
jecxz
inc
push
cmp
enter
mov
popf
sub
inc
xor
inc
jge
add
lcall
xlat
push
xor
inc
mov
lret
idivb
int
pop
call
push
inc
xchg
xchg
clc
push
sbb
or
mov
jnp
popa
sub
push
stc
push
cld
push
mov
add
int3
cwtl
inc
pop
adc
jmp
push
ret
and
popa
ja
ja
sub
and
aad
sbb
outsb
jecxz
mov
scas
into
mov
cli
jb
or
or
in
jge
lods
mov
pop
dec
mov
es
and
aad
push
xor
add
inc
icebp
mov
add
lret
loop
mov
jl
out
xor
xor
sub
fwait
adc
or
xchg
sti
mov
mov
push
mov
dec
int3
into
aas
mov
mov
sub
push
pusha
xor
movsw
lea
data16
rcrb
jg
pop
inc
loopne
or
arpl
jmp
testl
xchg
push
mov
pop
out
xchg
xchg
jg
jl
sbb
test
and
bound
cmp
inc
hlt
fdivs
adc
pop
pop
xlat
lea
push
mov
rol
imull
inc
and
sub
jle
sub
insl
cli
fmull
or
mov
jae
cmp
aaa
les
aad
xor
xor
push
sbb
mov
loop
mov
mov
sbb
push
xchg
ds
sti
add
lahf
and
cwtl
dec
and
into
and
and
int3
mov
insb
fcmovnb
arpl
xchg
xor
jecxz
jo
xchg
jecxz
jmp
push
push
adc
ds
es
notl
jmp
inc
test
adc
xor
pop
sbb
call
call
push
sbb
or
sbb
mov
rorb
sub
add
cmp
pop
sub
mov
bnd
sahf
cltd
sub
sub
mov
les
and
leave
je
jle
mov
fsubrl
nop
xchg
cltd
jecxz
ds
insb
mov
jae
fstl
movsb
sbb
arpl
js
dec
test
cmp
pop
dec
sbb
pushf
and
pop
mov
ret
push
in
cld
xor
lods
idivl
lods
lods
push
mov
std
lcall
cmpsb
cmpsl
mov
in
data16
sub
xchg
imul
push
stos
aam
xchg
in
sub
test
bound
pop
inc
lret
sar
decl
mov
filds
idivl
inc
sbb
test
mov
rcr
dec
xchg
push
cwtl
fsubr
lods
fistpl
push
mov
pop
ljmp
xchg
test
pop
adc
pcmpgtd
or
jmp
clc
push
dec
sahf
sahf
js
jle
inc
pop
testl
repz
in
add
insb
mov
popf
mov
push
push
ret
lods
push
loopne
mov
lea
pop
repz
stos
jl
xor
shll
data16
jo
nop
jge
inc
adc
pop
and
nop
je
loope
lahf
mov
jp
or
mov
dec
fwait
add
jne
mov
xchg
and
mov
or
imul
adc
push
sub
pop
iret
call
mov
pop
leave
ja
and
pop
movsb
movsl
out
mov
out
inc
and
imul
aas
jno
sbb
adc
test
mov
mov
adc
loope
dec
fcmovu
jg
jl
mov
xor
adc
sub
or
rol
fdiv
inc
cmp
out
adc
fucomip
inc
and
cli
push
mov
daa
jbe
ja
rcr
mov
xchg
mov
sub
in
jg
xor
lcall
mov
sbb
jle
ret
pop
outsl
test
xor
aas
leave
adc
lds
push
xor
pop
into
popa
fistps
roll
adc
cmc
push
int
cmpl
adc
cmp
pushf
js
insl
adc
insb
cmp
cmp
je
iret
mov
imul
cmc
lods
and
mov
das
jbe
inc
stos
sbb
push
lret
les
push
mov
inc
stos
popa
push
push
mov
push
jno
push
mov
cmp
cli
cmp
xor
xor
mov
mov
ljmp
adc
jmp
dec
and
pop
out
jo
xchg
and
pop
fs
fistpll
or
repz
push
sbb
add
xchg
arpl
int3
mov
aam
nop
cwtl
or
mov
inc
mov
enter
pop
push
or
mov
cli
roll
cld
and
jne
add
mov
arpl
or
out
shr
jne
push
xchg
call
stc
and
xor
jb
mov
push
std
xchg
js
bound
ds
incb
out
cwtl
aad
push
pop
xchg
jo
mov
push
xor
dec
ljmp
negb
cmc
and
cmpsb
shrl
lods
pop
or
inc
fidivl
mov
xor
lret
in
sub
test
fwait
mov
push
cltd
jne
stos
aas
jno
push
mov
divl
inc
daa
sub
cld
lcall
jno
inc
jl
out
push
push
aam
jl
dec
out
or
adc
js
test
inc
mov
sbb
pusha
mov
mov
mov
jle
sub
repz
call
mov
shrl
push
push
mov
cld
andb
and
jp
dec
xchg
push
ret
sbb
insb
mov
add
and
inc
mov
add
cmp
push
jnp
les
inc
or
cmp
movsl
mov
insl
outsl
pop
pop
sbb
or
int3
add
add
fdivrp
imul
out
pop
pusha
scas
xor
stc
jge
mov
xor
xchg
dec
xchg
shlb
icebp
xchg
xor
outsl
testl
inc
xchg
xchg
fwait
xor
jecxz
ljmp
adc
sub
sbb
push
lcall
jno
cwtl
out
jb
lock
popf
stos
sub
mov
add
arpl
mov
xor
adc
fstps
aad
int
in
xchg
je
push
mov
add
mov
inc
mov
and
mov
mov
lret
cmp
jmp
cmc
pop
pushf
out
in
mov
aas
jbe
push
adc
ficoms
adc
cld
add
xchg
bound
icebp
clc
cld
mov
adc
shll
mov
cwtl
or
inc
in
lods
fiaddl
aam
cwtl
bnd
cmp
pop
popa
fildl
ljmp
stc
ret
pop
jecxz
push
aam
das
push
dec
xchg
daa
xor
cmp
pop
ds
aam
fcoms
pop
pop
pop
leave
pushf
iret
aam
xor
fwait
scas
pop
push
sbb
cwtl
fcoml
enter
mov
mov
pop
inc
sbb
sub
outsl
sti
or
xchg
sbb
jl
or
sar
pxor
mov
push
mov
loop
and
sbb
adc
insb
mov
mov
and
lcall
addr16
addr16
and
add
sub
and
xchg
int
jae
pusha
aas
ror
mov
jno
addr16
std
jae
xor
mov
aad
insb
insl
inc
cmp
jae
push
data16
xchg
jle
push
in
inc
je
sbb
sbb
sbb
fwait
movsb
jmp
pushf
cmc
hlt
dec
push
cmp
lea
and
call
mov
push
int
jae
loop
mov
cmp
movaps
sbb
pusha
and
sub
add
xchg
lahf
sub
iret
iret
rcl
iret
sbb
stos
in
mov
test
repz
mov
dec
adcb
sub
xchg
cmp
jecxz
cmp
wbinvd
pop
lock
mov
inc
xor
repz
fwait
daa
xor
xor
js
int
or
mov
outsb
loopne
lret
mov
jmp
sbb
out
into
shlb
mov
in
ljmp
and
mov
adc
mov
sub
adc
sbb
fucomi
ds
iret
inc
push
das
ljmp
pop
mov
xchg
jns
setbe
fmull
mov
push
test
sub
mov
xchg
inc
lock
arpl
xor
cmp
rorb
and
ds
data16
dec
mov
in
ret
in
inc
cmp
lret
mov
add
out
fs
fs
xchg
inc
adc
sbb
sub
iret
icebp
pop
jg
rclb
jnp
das
xor
ret
jbe
xchg
jmp
rcrl
pop
dec
dec
adc
popf
data16
dec
xlat
ja
addb
addr16
or
mov
ja
ror
adc
mov
ljmp
popf
pop
sti
sahf
iret
mov
jb
out
mov
xor
xchg
jnp
aaa
inc
fdivrl
aas
mov
push
andb
stc
fcmovu
je
jae
jo
adc
aas
sbb
scas
cs
mov
sti
cmp
insb
sbb
adc
shlb
test
imul
adc
jmp
in
mov
imul
sub
mov
inc
cmp
je
xor
cmpb
jnp
shlb
sbb
out
inc
shlb
call
rorl
jle
xor
sub
cmpsb
pop
jb
fistps
cmp
mov
or
xchg
int
xor
imul
out
sub
push
sbb
sub
out
cmp
fcmove
cmp
dec
lcall
and
ds
mov
mov
mov
cmc
test
xchg
cmp
in
xor
pop
jno
cmc
lret
xor
jl
add
xchg
mov
push
dec
fs
stos
mov
push
stc
fisttpll
adc
fldcw
mov
mov
cmp
stos
dec
nop
nop
pop
inc
or
test
outsb
adc
out
scas
dec
push
push
and
sbb
and
pop
cmpsb
add
pop
add
pop
mov
pop
sbb
mov
shrb
or
lods
mov
xchg
cmp
movl
mov
mov
pop
fs
sbb
mov
and
leave
xchg
and
nop
inc
in
stos
sub
test
std
push
movsl
xchg
lock
dec
xchg
mov
sub
and
rorb
stos
inc
push
pop
mov
push
imul
fsubrs
sub
cmpb
addr16
xchg
push
imul
xlat
fisubrl
mov
jns
mov
xor
fildll
jle
mov
pop
mov
dec
push
nop
or
add
rolb
adc
mov
inc
sbb
or
or
add
rolb
adc
mov
jl
test
cmp
mov
es
scas
test
cwtl
stos
ljmp
jns
pop
xchg
xor
inc
aaa
xor
pusha
dec
add
push
cld
bound
xchg
inc
mov
fmuls
nop
insl
jae
adc
dec
xor
call
adc
xor
dec
mov
cmp
cmp
add
test
lret
jp
dec
push
js
iret
sbb
lea
xchg
call
xchg
dec
fwait
pop
dec
pushf
aas
adc
arpl
ljmp
ja
pop
and
mov
xor
or
outsb
aas
in
jns
int3
jnp
inc
data16
xor
popf
sahf
jle
imul
xchg
and
sbb
pop
out
das
jmp
rcr
xchg
je
mov
out
data16
stos
int3
push
aam
jle
stos
sbb
sbb
push
out
cmpsl
inc
mov
mov
add
outsl
test
mov
push
jg
inc
add
cwtl
iret
xchg
inc
dec
ss
outsl
xor
and
xchg
out
pop
jb
cwtl
jge
jbe
in
xchg
inc
dec
mov
pushf
sarb
or
fmul
xchg
lret
pop
xor
stc
jl
push
sub
mov
sub
movsb
lock
outsb
push
dec
das
xor
mov
cmpsl
adc
cmp
pusha
hlt
mov
xor
inc
lcall
test
jb
clc
stc
and
jae
ja
xlat
dec
nop
cmpsl
in
cli
jle
cmp
inc
stos
aam
call
sub
lret
sbbb
shl
push
data16
ds
in
in
ja
mov
notl
adc
cli
insb
xchg
fldcw
sti
aad
push
hlt
mov
sysenter
orb
push
push
cmp
cld
incl
lahf
stos
aas
push
stc
clc
stos
mov
push
insl
in
movsb
lahf
in
push
pop
ret
mov
hlt
add
outsb
mov
scas
mov
mov
in
mov
insb
mov
cmp
jg
aas
mov
stos
in
popf
js
lea
pop
std
pop
cld
jns
lods
push
mov
jnp
std
cld
loop
int
shl
and
scas
je
in
insb
out
push
outsb
sahf
pop
jae
mov
lret
pop
adcl
add
sbb
outsl
cmp
mov
repnz
filds
mov
sbb
cli
stos
outsb
data16
aaa
roll
rcrb
add
inc
dec
loopne
inc
sarl
iret
popf
sbb
mov
repz
iret
je
push
popf
push
inc
outsl
jp
int
into
cltd
mov
add
xchg
cmc
outsb
and
int
mov
enter
ja,pt
dec
mov
stos
adc
mov
mov
jo
aam
xor
xor
popf
push
add
pop
decb
scas
out
inc
dec
jecxz
out
sahf
mov
mov
sub
aaa
scas
adcb
lds
sub
add
mov
into
das
jge
sbb
lret
outsb
mov
cltd
inc
mov
dec
sbb
dec
add
sbb
or
xor
pop
sub
adc
loop
mov
push
in
sub
inc
cmp
daa
xchg
dec
ret
repnz
cmc
rolb
push
roll
ret
push
pop
jnp
pop
in
pop
lock
dec
repz
addr16
cmpsb
sub
ret
dec
dec
mov
or
outsl
cmp
mov
and
lods
iret
dec
mov
repz
dec
out
inc
pop
leave
cmpl
mov
jg
scas
hlt
lods
test
sbb
sbb
sub
neg
pop
sbb
add
in
mov
fwait
sahf
daa
pop
or
fimuls
popa
fabs
push
imul
adc
icebp
cwtl
jno
popa
negl
sbb
or
lods
lds
or
scas
pop
insb
andb
xor
jmp
push
sbb
cwtl
arpl
push
ljmp
mov
scas
decl
or
fidivrs
clc
dec
cmp
push
out
rorb
jnp
es
lcall
and
aas
mov
lcall
pop
push
lcall
push
mov
dec
sahf
insl
jg
sbb
jns
jb
mov
lods
and
push
pushf
mov
mov
daa
jge
push
aaa
scas
addb
leave
lret
int3
xchg
pop
in
inc
dec
or
mov
loope
icebp
stc
add
shlb
orb
dec
pop
dec
aam
xchg
popf
clc
or
sub
push
sbb
and
sub
jle
mov
icebp
lea
adc
pop
out
add
adc
jno
fisubrl
mov
test
in
aad
fsubrs
adc
mov
cli
mov
mov
movsb
sbb
push
sbb
in
out
dec
jecxz
xchg
dec
test
push
and
adcl
bound
jnp
movb
add
sbb
push
data16
lods
jmp
mov
popa
jne
xchg
jbe
das
sub
mov
mov
xchg
and
arpl
sbb
jl
mov
int
fisubl
aas
mov
push
push
adc
sahf
pop
push
test
add
add
lcall
cld
fs
dec
pop
sbb
stos
outsl
movsl
out
sbb
ret
dec
mov
cmpsl
cmpsl
popf
jmp
jle
push
mov
jb
add
loopne
xor
jns
mov
je
pushf
inc
addl
outsl
subb
loopne
push
movsl
mov
cs
test
push
mov
sub
and
mov
xchg
and
push
or
mov
lods
pop
loopne
pop
add
leave
dec
enter
cmpsb
movsl
loopne
jbe
dec
cmp
jecxz
inc
pop
mov
and
icebp
fdivs
ret
mov
cmp
stc
clc
xchg
test
lcall
adc
mov
cli
test
outsl
pop
add
leave
gs
nop
flds
pusha
outsl
pop
add
fwait
dec
loope
sub
lods
inc
inc
clc
clc
into
out
xchg
pop
xchg
cmp
xchg
sbb
jecxz
add
inc
adc
out
nop
xchg
sub
lock
nop
test
mov
push
add
int3
out
mov
pop
cmp
inc
push
xchg
faddp
xor
lock
js
mov
adc
loope
lds
mov
pop
dec
cltd
mov
stc
call
jns
inc
das
jno
or
jne
lods
stos
xchg
imul
rcl
lods
arpl
mov
enter
mov
inc
imul
shlb
mov
mov
data16
add
sbb
lock
outsl
xor
mov
ja
pop
xor
sub
cmpsl
push
sub
add
rorb
or
push
sbb
cltd
stos
out
leave
mov
in
push
in
icebp
cmp
pop
jg
push
inc
stc
arpl
pop
pop
je
int
jno
inc
xchg
sub
js
sbb
push
inc
leave
sbb
subb
int3
sbb
mov
fwait
out
repnz
xchg
inc
cmc
movsb
fsubrl
xchg
in
lcall
imul
pusha
and
or
int
arpl
call
pop
jnp
inc
xchg
and
call
aam
sub
mov
push
mov
jb
faddl
mov
or
xor
inc
mov
icebp
push
insl
lds
int3
icebp
pop
add
ljmp
int
cmp
mov
or
loop
mov
leave
bnd
pop
or
or
aad
cwtl
pop
sbbb
loop
inc
subl
bound
push
outsb
inc
movsb
loopne
dec
jecxz
inc
xor
aaa
push
imul
add
out
sbb
outsb
inc
je
rcll
sbb
jecxz
pop
cli
add
lods
std
pop
cli
mov
addr16
jno,pn
repz
and
lcall
add
inc
adc
inc
popa
adcl
dec
mov
js
cmp
xor
faddl
scas
sbb
idiv
sbbb
push
shrb
inc
fwait
movsb
and
scas
lea
jo
xchg
add
jno
cmp
movsb
cmpsl
jo
movsb
repnz
sbb
sbb
sub
jbe
pop
lods
fldl
shrl
xor
cltd
lods
loope
and
xchg
je
jg
inc
shrl
xlat
call
jb
xor
gs
hlt
or
xor
pusha
repnz
cmpsl
cmpl
outsl
test
jmp
lods
lods
push
sbb
or
rcl
mov
stos
movsl
dec
lret
in
sub
cltd
scas
rorb
stos
rcrb
pop
scas
inc
dec
jge
aam
out
add
push
add
ljmp
add
push
ret
xor
mov
shlb
cmp
jbe
mov
repz
pushf
lods
xor
scas
daa
leave
test
xchg
lret
test
out
push
push
xchg
nop
lods
and
jmp
sbb
add
inc
and
or
add
rolb
adc
mov
inc
sbb
or
or
jo
imul
fildl
jp
insb
shrb
jb
lret
cmp
addl
mov
popa
dec
inc
fcoms
inc
pop
or
jl
mov
call
divb
push
or
sub
pop
in
js
xchg
add
and
xchg
popf
cmovnp
es
dec
jns
dec
jp
cli
insl
iret
xchg
sub
xor
adc
repnz
repnz
mov
jno
push
dec
mov
xchg
call
into
adcb
es
stc
cld
xchg
imul
sbb
and
imul
cwtl
inc
xor
and
shr
mov
lret
or
mov
cmp
push
cwtl
mov
test
jle
jb
sbb
mov
subl
dec
sbb
add
adcb
aas
push
in
mov
mov
inc
and
std
pop
xorl
push
and
pop
sbb
aad
dec
outsb
ja
jb
rolb
call
inc
jecxz
jo
insl
int3
fistpll
iret
inc
call
add
cmp
sar
addr16
mov
xchg
ljmp
stos
cmp
aam
mov
scas
inc
addl
hlt
cmp
out
lods
aaa
insl
pminub
jb
js
push
pop
jb
mov
out
mov
test
insl
cwtl
cs
dec
fldl
sbb
leave
dec
xor
scas
shl
in
ret
xchg
cmp
into
inc
jo
jmp
mov
xor
in
movsb
ret
flds
sbbb
ret
lods
ret
leave
imul
lds
aas
cld
decb
push
jne
fnstcw
dec
call
add
fcompl
loop
jge
stc
xor
mov
mov
push
add
addr16
pop
sbb
fistps
adc
mov
ja
mov
jae
shr
lods
add
repz
cmp
jge
out
lahf
out
push
push
cmpsl
dec
scas
mov
stos
lahf
repnz
sub
mov
add
hlt
outsb
bound
or
repz
dec
stos
jmp
pushf
popf
xchg
pop
fs
sbb
scas
sarb
fbstp
push
shl
cmpsb
sti
lods
out
dec
lahf
mov
loopne
cmpsl
mov
inc
mov
adcb
push
fcmovne
test
cmp
add
call
ja
sbb
lods
shrl
mov
pop
iret
push
dec
xchg
xor
subl
mov
mov
ja
inc
push
sti
and
inc
repz
lds
mov
pop
pop
gs
fdivrs
icebp
lcall
push
ss
int
addr16
test
mov
into
push
out
gs
sub
xchg
stos
aad
mov
cmp
call
pop
lret
push
and
in
jb
cmp
push
sub
jbe
stos
push
outsl
mov
cmpsl
inc
jl
repz
into
arpl
int3
imul
lret
in
and
je
movsb
adc
jecxz
dec
loop
adc
push
lds
cld
adc
sarb
js
cmpsb
adc
sbb
lret
out
pop
inc
iret
add
jmp
or
test
sub
test
test
fistl
or
scas
pushf
imul
int3
pop
stc
cmpsb
call
dec
stc
cmp
pushf
or
in
aam
sbb
or
sub
test
cmpsb
std
push
subb
rclb
inc
sbb
movl
xchg
mov
lret
aam
loope
push
inc
or
cmp
sbb
adc
sub
in
mov
mov
lods
mov
pop
sub
mov
xor
adc
cmp
and
xchg
mov
push
mov
out
xlat
sub
testl
pop
pop
pop
xchg
jecxz
movsb
jns
out
and
outsb
add
pop
fdiv
insb
adc
incb
adc
ljmp
sbb
or
xchg
in
add
fwait
pop
dec
push
lret
rcll
mov
stos
xchg
mov
lcall
inc
je
std
or
jge
mov
divb
mov
push
and
xor
mov
jmp
push
jno
daa
popf
cmpsb
into
call
js
xor
cmp
jo
scas
mov
dec
lea
popa
mov
cmc
mov
xchg
sahf
scas
push
aaa
mov
cmp
adc
push
sbbb
outsb
daa
sbb
jnp
dec
push
adc
inc
mov
push
cmp
cmp
cld
push
and
or
jnp
jns
lret
mov
aam
cmp
xor
popf
mov
cvtps2pi
fwait
xchg
add
call
fistpll
pop
inc
shll
inc
or
mov
mov
test
out
mov
mov
pop
aas
add
rcl
not
mov
xlat
stos
cmp
adc
or
adc
push
dec
fcoml
addr16
jae
jae
std
sbb
out
sbb
or
in
jg
sub
sub
dec
pop
pop
push
jl
ret
cmc
inc
ja
mov
and
or
rcrl
fbld
jecxz
lods
inc
push
in
fistl
sub
decl
std
repnz
or
inc
mov
mov
pop
sub
push
lret
hlt
sub
inc
inc
push
fdivl
inc
pushf
push
les
pop
popf
popa
loopne
adc
cmp
xchg
cmp
or
pop
lods
xor
js
pop
and
add
test
fbld
xchg
adc
cs
push
inc
or
popf
repz
inc
pop
pusha
les
inc
fs
mov
je
dec
dec
or
mov
sbb
and
mov
in
cmc
xchg
mov
mov
test
mov
call
insl
test
popa
jo
adc
sub
lret
or
dec
aam
lds
mov
mov
dec
dec
pcmpeqb
adcb
cmp
xor
jmp
stos
mov
dec
jne
pusha
pushf
inc
and
adc
arpl
jmp
das
xchg
loop
and
cmp
or
out
mov
cmpsb
pop
ret
mov
and
push
inc
das
add
mov
mov
mov
mov
loop
out
cli
rol
adc
sub
add
test
insl
stos
sub
pop
mov
pop
popa
jecxz
adc
scas
call
popf
out
ret
faddl
sbb
inc
arpl
sahf
sub
pop
inc
sub
cmpsl
add
jge
pop
mov
mov
enter
pop
in
addb
test
loop
lock
push
jl
les
hlt
pushl
xor
je
mov
jns
inc
inc
sub
push
xor
adc
adc
add
jecxz
mov
and
cmc
mov
pop
int
and
out
popa
ds
inc
adc
lock
iret
pop
xchg
subl
jbe
enter
sbb
and
fs
mov
cmpsb
adc
out
orl
jp
ds
push
fisubrl
mov
and
mov
sbb
push
push
mov
movsl
jmp
addl
push
lea
sbb
dec
es
das
bswap
jne
or
xor
mov
mov
lods
push
out
lea
call
lods
mov
xor
movb
pop
in
push
adc
dec
dec
mov
roll
jnp
movsl
lret
mov
cmp
push
pop
movl
lods
or
sbb
data16
rcll
push
pop
sub
pushf
xor
in
dec
cld
and
inc
adc
call
jnp
dec
lock
mov
sub
xor
dec
xor
or
pop
stc
add
movsb
jne
jnp
add
jle
mov
cmp
mov
cmp
outsl
adc
stos
lea
xchg
jg
mov
mov
add
lock
outsb
mov
mov
push
xor
cli
cwtl
daa
scas
movl
cmp
inc
xchg
fs
xor
cmp
mov
sub
push
je
mov
int3
xchg
gs
pop
addb
mov
das
icebp
xchg
pop
subb
mov
inc
out
scas
mov
add
xor
lods
inc
dec
cwtl
arpl
cmp
lock
push
sti
js
ret
jo
jmp
jne
mov
mov
out
shl
adc
sbb
and
aam
stc
mov
jp
jmp
lods
jecxz
popf
stos
sbb
and
fadd
xor
test
out
mov
ret
pop
dec
mov
push
pop
sub
cmp
sbb
inc
cltd
xchg
jg
ss
hlt
dec
das
pop
jl
xor
into
ja
adc
das
test
dec
sub
and
xor
pusha
mov
pushf
mov
mov
and
cwtl
insb
in
lods
jecxz
or
inc
mov
prefetch
or
aad
lock
pop
sbb
pop
mov
push
out
mov
jg
and
push
ror
loop
stos
cld
mov
lock
jb
scas
push
cmp
or
xor
inc
outsl
push
sub
jg
inc
inc
out
aam
or
scas
ja
cmpsl
pop
adc
lret
push
leave
int3
mov
sbb
andl
movsl
mov
fstpt
stc
insb
and
in
xlat
sbb
pop
mov
cmp
cmc
je
jl
mov
sub
sbb
ja
lret
and
xlat
adc
xorl
aad
mov
dec
jmp
scas
jp
push
aad
cltd
and
inc
testb
dec
lret
in
or
jge
sub
ret
mov
mov
xchg
push
pop
or
cmp
ljmp
divl
mov
bound
jp
pop
xchg
cmp
orb
cld
in
cmp
sahf
pop
stos
xchg
mov
cmp
cmp
mov
in
pop
cmp
inc
cmp
sahf
mov
inc
inc
arpl
lret
test
stos
enter
xchg
mov
das
push
adcb
add
leave
aas
add
or
sahf
mov
loopne
xchg
jge
loop
push
nop
dec
xor
sub
jae
jge
mov
frstor
mov
adc
jb
pop
loopne
repz
mov
into
pop
xor
adc
mov
ror
loop
sbb
jbe
addb
pusha
jle
test
add
das
fisubl
sub
mov
adc
push
loope
out
mulb
pop
xchg
scas
mov
sub
lods
js
ljmp
mov
xor
mov
int3
sub
push
test
inc
cmp
mov
dec
outsl
decb
mov
jnp
lcall
stos
jmp
ljmp
push
movsl
cmp
das
dec
lahf
je
je
xchg
lock
mov
jl
jns
das
nop
mov
and
jb
mov
cmpb
sub
sbb
cmp
sub
lahf
fisttps
pop
pop
rcll
arpl
adc
sbb
adc
loopne
gs
mul
mov
test
lret
adc
inc
and
xchg
sub
ja
xchg
xor
test
add
loop
sbb
or
lahf
pop
lahf
mov
jecxz
xchg
lcall
ret
jecxz
xchg
inc
xchg
aaa
in
and
push
mov
in
fcmovb
sahf
movsl
cmpsb
mov
int3
push
xor
aam
enter
xchg
shlb
subl
mov
push
scas
or
cbtw
mov
mov
call
or
std
cmp
adc
cmp
pop
loopne
lret
cltd
shr
push
outsb
inc
cmp
aam
add
mov
jbe
jl
repz
cwtl
rcr
daa
and
push
pusha
in
dec
fcompl
int
sbb
loop
arpl
je
jnp
xor
mov
inc
pop
pop
fistl
sbb
xchg
repnz
dec
lods
fcomi
dec
jg,pn
sbb
js
cs
mov
sub
inc
es
push
and
js
pop
adc
cmpsb
push
out
push
add
daa
movsb
insb
loop
fwait
sub
mov
sub
cmp
insb
idivl
nop
nop
je
jg
adc
jo
cmp
addb
xchg
stos
pextrw
daa
or
push
and
jecxz
adc
out
add
repz
adc
xchg
push
sub
dec
add
in
inc
cmp
cli
fnstenv
data16
jb
mov
push
daa
add
xor
xchg
in
ret
pop
adc
in
leave
xor
out
out
pop
fmull
aaa
or
pop
bound
outsb
leave
rcrb
hlt
add
pop
std
lahf
mov
mov
aad
rolb
scas
push
sbb
mov
cmpsl
sbb
xor
jge
jl
cmp
shlb
mov
loopne
fidivrs
mov
jp
xchg
jbe
addr16
sbb
jle
dec
nop
ds
push
aas
rclb
clc
daa
push
jle
scas
inc
xor
outsl
loopne
fimull
outsl
push
and
push
subl
xchg
jo
add
cli
fistl
add
movsl
imulb
pop
mov
out
daa
pop
lea
call
push
pop
popa
insl
mov
cmpsb
int3
test
jge
jmp
in
xchg
fisubs
dec
dec
dec
aam
sti
adcl
jp
repz
or
out
je
inc
ret
push
insb
in
lock
call
xor
dec
jp
mov
and
leave
adc
je
mov
outsl
jecxz
mov
add
mov
jg
insl
lret
lcall
cmp
call
xchg
sahf
ljmp
and
mov
add
xor
jge
inc
pop
inc
xchg
add
nop
popf
mov
lock
hlt
add
inc
or
dec
fisttpl
pop
pushf
xor
iret
jae
add
mov
push
add
loopne
fcomps
dec
fs
nop
xor
outsb
fwait
imul
cs
sbb
and
leave
adc
sbb
cmpsb
mov
test
mov
dec
sub
mov
or
adc
fs
pop
mov
fdivrs
and
in
push
ficoms
or
xchg
call
fdivl
into
adc
jbe
and
mov
mov
jno
push
xor
push
imul
xchg
outsl
lds
adc
jg
into
and
loope
orl
sbb
add
aaa
cltd
push
fisubs
dec
imul
sub
sbb
mov
ljmp
sahf
pop
pop
mov
mov
mov
adc
mov
sub
pop
lcall
dec
call
sbb
and
jecxz
or
jmp
movsb
adc
js
popf
cmp
jbe
data16
imul
mov
push
jnp
movsb
mov
mov
testl
sbb
sub
push
add
xchg
mov
mov
xchg
mov
sub
icebp
mov
xor
xchg
cmp
in
shrl
add
dec
and
jcxz
pop
inc
dec
adc
add
sbb
or
add
rolb
adc
mov
inc
sbb
or
or
add
rolb
adc
mov
test
push
movsb
or
xchg
fs
jb
push
inc
lock
mov
add
cmpsl
pop
cmc
cli
sub
mov
rolb
dec
dec
mov
mov
jl
repz
aad
dec
inc
adc
pop
mov
jge
arpl
sbb
sub
cmp
sahf
pop
sub
and
dec
xor
or
xor
cmpsl
pop
jp
inc
int
cmp
push
xor
mov
adc
cli
xor
outsl
scas
or
stc
push
outsl
xchg
push
in
push
mov
push
mov
push
or
sbb
mov
xor
adc
pop
or
lds
or
add
cwtl
cltd
and
sbb
gs
pop
fwait
pop
mov
mov
cmc
pusha
jmp
insl
dec
outsl
mov
ret
ljmp
sahf
cmp
pop
xor
cmpsb
push
xchg
pop
sbb
xor
pop
inc
and
bswap
andb
leave
cmp
mov
mov
sarl
ret
sbb
or
mov
mov
inc
dec
aas
mov
fisttps
insl
inc
pop
shlb
xchg
xor
pushf
sbb
lods
pop
sbb
js
repnz
inc
dec
outsl
add
mov
stos
push
fmull
movsb
inc
ja
lcall
call
aam
mov
imull
int
es
or
mov
in
jp
ja
push
cmp
push
xor
push
clc
and
lds
push
popa
popa
out
or
jmp
loop
andb
sbb
dec
xchg
mov
out
or
add
or
cmp
lods
fmull
aad
out
add
jg
push
rcrb
sarl
push
jne
cs
int
stos
mov
mulb
fucomi
mov
ja
cltd
ljmp
or
loop
aad
adc
mov
cmp
repz
mov
not
jnp
cmp
add
and
push
mov
mov
shrb
inc
fcoml
xor
mov
push
jl
cltd
lds
mov
icebp
ret
stos
mov
imul
aaa
mov
aad
imul
enter
xor
jns
std
bound
xchg
dec
pop
and
add
out
mov
push
xor
dec
mov
jns
xor
lahf
loope
lahf
xor
rol
lret
shl
repnz
cld
and
push
xchg
std
adc
daa
mov
mov
add
rclb
mov
ljmp
shlb
shll
ja
or
jnp
popa
in
cmp
mov
fldl
jecxz
lcall
and
leave
incl
aas
sub
lods
lds
inc
and
mov
aas
sub
divb
testl
testb
loope
cmpsl
pop
cld
cli
add
cmp
daa
inc
hlt
aaa
mov
in
cli
push
xor
mov
and
shl
fidivrs
int
mov
xchg
test
mov
mov
enter
mull
mov
inc
push
push
sti
dec
test
cmpl
mov
adc
pop
cmp
aad
pushf
iret
adc
cmovl
dec
out
lret
pop
jbe
push
mov
jns
xor
xchg
fisttps
vpmacswd
mov
mov
xlat
sub
fnsave
fcmovnbe
cmp
pop
push
into
mov
mov
or
ror
and
sub
lahf
mov
movsb
sete
sti
xchg
pop
fdivs
jl
lea
mov
test
cmp
out
xchg
pop
dec
xchg
test
lods
push
push
negl
and
lret
dec
push
cmp
mov
fsubl
jg
shr
stos
enter
pushf
dec
pop
xor
adc
sub
mov
das
pop
pop
push
cmp
cmp
sub
cmp
cmp
adc
cmpsb
mov
pop
add
jae
popf
dec
in
sbb
push
jns
test
in
insb
and
cs
xor
sub
cmpsl
mov
in
and
xchg
rclb
xor
ror
add
inc
cmpsl
shr
jae
push
cmp
ds
and
pop
dec
arpl
sbb
ret
adc
mov
cmp
loope
inc
inc
div
stc
dec
movsl
adc
push
fwait
sbb
addb
rorl
out
xor
add
daa
push
xchg
std
xor
mov
cwtl
stc
movsb
mov
adc
repz
fsubrs
xchg
jae
or
lea
xchg
or
imul
jns
and
xchg
jb
pusha
pop
cli
dec
fwait
pop
scas
add
cmp
or
leave
aaa
sbb
fdivrs
lods
fwait
lahf
loope
cmp
and
mov
in
in
cmpsb
xchg
inc
xor
pop
lods
ljmp
call
ret
jbe
xchg
aam
sahf
fimull
movb
push
mov
add
jno
inc
or
rclb
scas
ret
add
inc
xorl
push
jnp
lods
adc
int3
repz
push
and
add
pop
shrl
xor
pushf
pop
push
lods
jns
dec
pop
pop
fsubr
cmp
ret
mov
or
dec
andl
sbb
and
sub
adc
xor
ljmp
test
sahf
outsl
jnp
sub
or
cltd
push
movsl
outsb
sbb
outsl
adcl
sbb
add
repz
or
add
add
fadds
push
es
xchg
stos
mov
enter
sbb
xlat
leave
sbb
push
dec
adc
les
nop
and
imul
or
push
shlb
xor
sbb
ds
fiadds
xchg
aas
into
test
add
cmp
push
test
cmpsb
pop
in
pop
scas
cli
mov
inc
call
ds
sbb
xor
int
sbb
dec
sub
outsl
imul
lods
cmp
cmpsl
nop
xchg
cmp
aaa
xchg
xor
call
inc
leave
cmp
enter
and
pop
and
out
inc
add
out
push
into
cmpsl
push
scas
pop
hlt
dec
lret
jb
sbb
xlat
lock
rol
jbe
add
lods
xchg
mov
xor
incl
cmpb
sub
data16
add
sub
mov
adc
pusha
cs
push
xor
pusha
pop
pop
rolb
mov
jb
imul
dec
sub
cmp
jbe
ljmp
inc
push
inc
xor
insl
ljmp
hlt
cmp
pop
jge
arpl
adc
aaa
mov
add
test
xor
rorb
sub
mov
xchg
add
ror
fs
stc
adc
enter
ficoml
lcall
scas
add
mov
or
ss
dec
adc
imul
in
in
hlt
aas
cmc
pop
pop
stc
mov
lods
ljmp
add
dec
pop
cmpsb
subl
xorl
std
push
xchg
cmp
fldl
aaa
add
xchg
mov
cmp
cltd
test
test
mov
je
cmp
cmp
mov
and
or
inc
adc
repz
cwtl
adc
or
mov
cli
roll
sbb
jns
mov
add
pop
xchg
fildl
fmulp
enter
pop
mov
aam
mov
cmp
mov
add
test
and
push
jno
add
jg
pushf
and
shrb
push
sbb
cmc
pop
mov
stos
nop
cmp
xor
and
outsb
daa
mov
ret
fnstcw
insb
mov
adc
xchg
mov
lret
stos
popf
lret
jl
js
loope
js
mov
sub
lcall
pop
std
inc
mov
and
test
popa
push
mov
orl
sbb
sbb
jl
sbb
pop
push
push
je
sub
mulb
lock
pusha
jecxz
dec
add
sahf
or
sub
mov
les
mov
outsb
cmpsb
loope
stos
rorl
imul
dec
repz
outsb
push
fistps
test
cmpsb
fwait
jb
es
mov
cmpsl
cmp
sbb
xchg
out
inc
or
dec
add
mov
mov
into
cmp
xor
jp
psubq
ror
test
sbbb
mov
push
jg
jl
or
cltd
jne
pop
jns
sbb
ret
mov
mov
cmp
addr16
or
rcll
mov
mov
jg
add
into
sbb
sahf
or
ret
add
add
lret
push
cld
pop
push
and
push
js
lods
js
mov
adc
hlt
aas
mov
call
push
mov
mov
xor
icebp
adc
adc
pop
dec
inc
leave
pop
pop
rcr
pop
insb
push
inc
push
jb
shll
fisubl
scas
and
arpl
push
jge
jecxz
mov
mov
pop
or
loop
sub
mov
dec
lahf
adc
enter
fwait
cmc
cmp
pop
add
xor
outsb
shrl
movsl
jle
mov
sarl
in
rcll
imul
cmc
cmp
inc
dec
es
jl
pop
cmpsb
out
aad
cwtl
test
inc
and
or
inc
add
jmp
jmp
xchg
cltd
out
aas
lahf
out
fildl
jnp
jb
pslld
mov
xchg
or
pop
fisubl
xor
dec
loope
inc
push
push
cwtl
ror
sbb
mov
pusha
sub
jmp
sbbb
jnp
lea
popa
addr16
cli
movsl
pusha
ret
cmp
pop
jbe
out
push
repnz
gs
sahf
mov
cmp
dec
call
push
xchg
call
push
enter
enter
pop
stos
leave
xor
inc
or
test
mov
push
repnz
add
fwait
mov
clc
popf
sbb
add
movsb
xor
jmp
call
xchg
ret
dec
gs
loopne
push
push
into
mov
mov
cmp
cmpsb
mov
je
pop
adcl
dec
sub
cwtl
dec
sarl
mov
jp
gs
andl
jp
pop
in
or
mov
jnp
stos
mov
mov
mov
out
and
push
adc
xchg
rolb
xor
insb
aas
test
clc
cmp
fwait
fwait
adc
lret
xchg
pop
jmp
dec
aam
in
dec
and
rcr
mov
lret
ds
adc
adc
and
fsubrl
shlb
shl
es
push
pop
adc
pop
test
add
in
int
add
movsl
xor
fiaddl
or
loopne
xor
aam
imul
push
inc
hlt
or
xchg
ret
loop
cltd
jne
xor
arpl
mov
cmpsb
xchg
and
outsb
lahf
mov
xchg
jge
fwait
fwait
test
aaa
and
lret
adc
fsubrs
gs
mov
imul
pop
adc
sbb
in
xchg
adc
icebp
shll
sub
dec
cmp
lods
test
loope
out
movsl
nop
cmpsl
mov
pop
sub
pop
andb
dec
pop
mov
cli
xor
sub
cs
mov
out
cmc
or
pop
xchg
rorb
sub
jo
roll
push
or
push
andb
inc
pop
mov
aad
push
and
cmp
mov
pusha
mov
stos
cmp
inc
mov
add
cmp
push
push
and
int
pushf
out
xor
dec
jl
mov
push
ljmp
scas
sub
adc
push
lret
int
xchg
mov
push
xchg
scas
inc
test
leave
std
decb
stos
sbb
adc
push
xor
adc
jae,pt
mov
push
push
mov
call
pushf
enter
or
mov
cmp
mov
dec
sub
enter
pop
xor
sbb
call
and
xchg
js
in
xchg
call
sub
ds
lcall
xor
out
addr16
mov
leave
mov
xor
pop
cmp
ds
shll
push
jnp
mov
dec
repz
lods
mov
push
dec
loop
in
int3
cs
cmp
jb
imul
and
mov
fidivl
addr16
aas
adc
fptan
sbb
int
int3
outsb
sbb
sbb
imul
rolb
mov
mov
pop
popa
pop
fnstenv
shl
or
fdivr
add
push
fbstp
jle
out
clc
cli
cmpb
pop
push
cmp
out
xor
out
test
in
mov
fsubrs
stos
push
mov
repnz
sbb
dec
jbe
and
test
je
jp
mov
jns,pt
bound
dec
sbbb
cld
add
push
loop
mov
sti
fwait
popf
and
stc
sub
fucomi
popf
rcrb
rclb
rcrb
lret
fisubrl
leave
shl
loopne
adc
and
ss
in
imul
push
sub
and
adc
ja
pop
xchg
xchg
pop
and
popf
imul
out
adc
mov
sbb
dec
clc
cmp
push
stos
out
bound
jge
out
fldl
inc
aas
mov
push
stos
out
outsb
shll
inc
cli
add
dec
dec
cmp
lret
insl
sbb
cld
ds
cmpsl
push
std
cs
std
mov
aaa
in
rcll
addr16
setp
mov
add
mov
inc
or
mov
pusha
push
jp
lret
mov
arpl
jnp
enter
sahf
pop
addr16
repz
adc
mov
outsl
pop
aas
call
lret
inc
decl
je
xor
subb
imul
loop
fmul
pop
mov
ja
cmp
sar
out
mov
cmp
loope
cmc
ljmp
hlt
jl
cmp
xchg
sbbb
jnp
sub
imul
cmp
sbb
jecxz
popa
sub
cld
xor
stos
adc
dec
rol
add
sub
dec
cli
fiadds
bound
push
push
adc
lods
daa
out
push
cmovns
in
shll
sbb
imul
add
add
push
mov
int
aaa
xlat
cmp
push
fnsave
es
dec
popa
xchg
icebp
rorl
add
cmp
repz
xor
mov
mov
loopne
mov
inc
or
push
jmp
imull
pop
cli
xor
add
ja
sub
and
insl
jmp
jae
mov
dec
leave
aam
loop
aam
jle
add
xor
add
jge
add
xchg
xchg
fsubrl
nop
push
push
cltd
mov
mov
rorb
lea
outsb
das
cmp
adc
cmpl
pushf
aam
shlb
jno
mov
hlt
and
dec
cwtl
or
fs
scas
dec
jbe
negb
rcrl
in
pop
push
test
mov
sbb
pop
das
insb
cmp
and
jbe
fucomip
adc
mov
sub
nop
mov
push
pushf
push
ret
aam
imul
outsb
inc
mov
mov
gs
dec
cmp
or
sub
pop
outsb
aas
fimull
and
jp
in
sub
push
cmpsb
pop
mov
sahf
add
add
and
in
rcrl
add
jbe
add
and
jne
pop
pop
scas
add
ret
test
call
adc
fldcw
in
dec
orb
in
xor
mov
push
jb
cli
enter
pop
andb
pop
rcrl
mov
pop
push
pop
xchg
imul
adc
maxps
or
inc
shr
and
xor
cs
pop
inc
leave
or
mov
sub
in
xchg
pop
xchg
popa
pop
add
nop
mov
xchg
push
push
jb
lret
pop
inc
leave
or
mov
cs
out
jns
add
xlat
das
icebp
or
bound
dec
mov
call
and
mov
add
in
inc
sbb
out
js
cs
add
movsl
dec
jmp
ret
xor
aad
push
repnz
js
into
out
push
mov
mov
scas
xchg
adc
test
loopne
out
bound
dec
mov
mulb
sub
dec
inc
jp
and
xor
sbb
mov
test
mov
xchg
lcall
popa
outsl
dec
push
imul
dec
inc
cmc
add
pop
cmp
cmp
es
jp
loopne
out
in
leave
cmp
push
fistpll
cmp
inc
cmc
jnp
pop
outsl
mov
cmp
lods
and
jae
cmc
mov
daa
and
sahf
lods
sbb
mov
data16
bound
mov
jp
jne
rcr
movsl
inc
pop
and
cwtl
dec
inc
out
mov
lods
dec
mov
in
mov
or
jnp
dec
cltd
dec
adcl
jg
jnp
push
mov
pop
cmp
mov
jg
and
fs
dec
arpl
jg
adc
sbb
int3
mov
xchg
lds
and
repnz
add
aad
in
sbb
sub
fidivrl
imul
movsl
mov
ss
shl
popf
in
mov
repz
xchg
cwtl
cmp
and
jle
mov
and
jne
jns
lcall
aaa
cwtl
push
xchg
mov
in
xor
jne
sahf
jnp
call
out
sub
add
movsb
pop
mov
popf
sub
out
sti
sbb
enter
adc
jp
sbbb
xchg
shll
call
and
ror
fwait
push
or
bound
sbb
jo
mov
mov
jl
xor
mov
repz
dec
inc
insb
push
cli
or
add
mov
jns
in
cmpsl
cld
stc
sub
sub
lret
mov
push
aaa
int3
xor
std
dec
mov
pop
dec
xor
dec
stc
out
pop
cmpsl
es
lcall
xchg
mov
fcomi
out
mov
cmp
daa
sub
outsb
pop
outsl
xor
adc
dec
fpatan
fs
inc
push
xchg
jle
inc
outsb
in
xor
andb
mov
mov
test
push
mov
adc
test
and
push
xor
sub
mov
jb
adc
loope
es
xchg
std
popa
sbb
ss
test
jmp
sbb
fimuls
jo
push
nop
je
pop
xor
and
mov
cld
push
jl
bnd
sub
call
dec
ret
sahf
mov
pop
ss
movsl
test
ds
and
int
nop
mov
imul
mov
loop
mov
loopne
cmp
negl
xchg
inc
out
aam
jl
mov
fbstp
jns
jae
and
jl
daa
jne
shll
inc
movb
push
pop
ljmp
out
pusha
stc
fldt
mov
cmpsl
inc
sub
lods
sub
popf
jecxz
jmp
ja
mov
jne
sbb
mov
or
in
jmp
movsb
ljmp
daa
push
jp
shl
pop
mov
lret
push
cwtl
rolb
jecxz
sarl
or
inc
inc
sub
inc
mov
jns
cmpsb
out
push
sti
in
cmp
mov
push
in
adc
mov
bnd
cmp
cwtl
stc
pusha
xchg
loope
leave
leave
das
push
mov
pop
dec
fwait
mov
sub
lret
jns
in
pop
cwtl
adc
fnstsw
mov
outsb
fwait
cmpsl
popa
loopne
jge
inc
adc
adc
cmp
xor
and
out
stc
mov
push
sbb
lret
outsl
xlat
cmc
mov
jg
popf
loopne
stc
cld
xchg
es
mov
aad
js
and
hlt
mov
xchg
pop
xchg
out
mov
mov
imul
jns
xchg
in
push
test
pop
mov
jge
jno
push
adcb
cmp
mul
dec
adc
add
pop
mov
in
jle
jecxz
jns
jbe
jp
lret
cmp
sbb
sub
xchg
stos
jp
jae
jle
iret
test
scas
fidivrl
pop
lods
loop
inc
mov
popf
adc
clc
or
xchg
negb
icebp
mov
push
ds
outsb
mov
mov
test
pusha
or
add
sarl
addr16
mov
arpl
loopne
or
lret
dec
pushf
add
pop
and
mov
lock
xor
js
fisubrl
ljmp
das
lods
add
das
je
int
mov
jns
cmp
mov
nop
add
shlb
push
add
rol
push
dec
in
sub
jmp
icebp
mov
mov
jge
xlat
push
add
subl
lods
pop
arpl
scas
movsl
rcl
in
add
adc
pop
shr
test
pop
call
inc
push
pusha
sti
pusha
mov
jle
leave
test
mov
dec
cmpsb
pop
movl
adc
inc
insl
cli
pop
loope
jnp
pavgb
add
lds
lcall
repnz
scas
jbe
or
fcmovnbe
cwtl
push
jle
push
addb
push
push
lods
out
sti
push
cwtl
int
jp
add
rolb
xor
pop
ss
imull
out
sbb
dec
mov
mov
nop
add
pushf
inc
adc
icebp
into
ds
pop
sbb
aad
or
dec
pop
lods
cvttps2pi
xchg
pop
add
push
pop
inc
enter
cmc
mov
rol
loop
or
sbb
cmp
testl
add
insl
shlb
lock
popf
mov
or
lret
sahf
shl
push
sub
xchg
mov
inc
sahf
xor
push
or
add
mov
fwait
sbb
mov
xchg
imul
je
fucomip
sbb
loope
push
mov
popf
xor
pop
and
jo
inc
inc
nop
adc
cmp
dec
aad
test
or
cmp
in
sbb
shll
mov
mov
in
xchg
arpl
jnp
xchg
leave
leave
rcrl
push
inc
sbb
lods
ds
jmp
rol
icebp
and
insb
outsb
and
pop
push
jno
xchg
mov
orl
hlt
adc
add
and
insb
das
mov
adc
nop
in
imul
jge
mov
xor
insb
xchg
add
and
add
cmpsl
dec
ret
mov
mov
pop
pop
lods
add
outsl
pusha
ds
repnz
mov
imul
adc
jae
adcb
push
push
push
dec
ljmp
testl
xchg
insb
les
enter
fnstcw
xorl
shll
inc
aam
mov
inc
frstor
dec
lea
fwait
aaa
or
shlb
andb
cmpsl
cwtl
or
cmp
nop
aas
out
and
sub
rcrb
and
xor
pusha
pop
xchg
mov
and
jmp
pop
inc
dec
xor
sub
inc
mov
jne
mov
into
test
push
xchg
clc
dec
loopne
inc
addb
inc
cwtl
pop
stos
push
arpl
push
sub
mov
cwtl
andb
xor
orl
popf
and
lea
les
sbbb
inc
out
scas
fmull
sub
xor
inc
lods
mov
pop
jae
je
mov
test
jmp
loop
fwait
repz
sub
sub
dec
dec
lock
nop
fildl
js
and
vpackuswb
cwtl
daa
dec
pusha
aad
aam
imul
mov
xor
movsl
cmp
pop
push
and
mov
aas
or
scas
and
adc
rcrl
adc
addr16
mov
add
lcall
enter
sub
je
mov
sub
xor
nop
fnsave
add
sbb
mov
and
cmp
scas
xor
sbb
lahf
add
addl
dec
roll
inc
imull
push
pop
fisubs
mov
mov
outsb
pop
mov
test
cmp
test
mov
add
les
jg
inc
mov
xchg
pop
dec
insb
fnstsw
or
dec
cmpsl
add
adc
cmc
ljmp
and
adc
sub
mov
jecxz
das
popa
add
mov
jns
jnp
mov
sti
icebp
or
movsb
lret
push
sbb
dec
cld
lahf
repnz
popa
aas
push
imul
mov
je
adc
add
cltd
mov
add
lahf
mov
rcl
mov
and
enter
jp
outsb
mov
test
cmp
ret
arpl
xor
cwtl
mov
dec
cmpsl
adc
mov
sbb
ljmp
sbb
sub
sub
pop
inc
fadd
mov
add
push
inc
inc
out
mov
adc
insl
push
sbb
push
push
or
lcall
mov
mov
push
xchg
mov
jle
lea
sbb
adc
jnp,pn
jl
push
pop
fisubl
mov
iret
xor
lcall
push
push
push
dec
movsb
xor
sbb
popa
mov
jl
adcb
fcompl
xchg
out
je
adc
pop
pop
mov
ljmp
cmpsb
xor
in
pop
int3
aad
aad
dec
or
repnz
es
and
mov
rcr
or
cmpsb
and
inc
push
lea
ds
fcmovb
and
inc
mov
lret
gs
push
mov
adc
lods
sub
enter
push
lret
or
iret
mov
popa
in
inc
stc
out
mov
in
dec
add
pop
add
pop
inc
xchg
lods
and
icebp
add
xchg
mov
inc
aaa
ret
imul
imul
mov
xor
xchg
aad
scas
mov
sbb
mov
xor
cmpsb
in
jge
call
xor
stos
repnz
and
xchg
mov
repnz
imul
mul
adc
or
ds
jae
mov
dec
loopne
fisttps
movsb
dec
pop
xor
dec
dec
popw
insl
leave
adc
cwtl
mov
bnd
fcoms
sbb
pop
xlat
out
sub
inc
push
add
push
jg
cwtl
mov
xchg
mov
jmp
push
xchg
xor
jl
sbbl
out
fstpl
mov
aaa
lds
rolb
out
inc
push
and
gs
sti
fstps
lea
sub
stc
add
ret
mov
popf
or
push
push
dec
ds
aas
popf
adc
orb
dec
and
ljmp
mov
lahf
clc
pop
mov
pop
add
xchg
inc
sub
movsl
cmp
add
ja
js
adc
or
xchg
popa
xor
pushl
mov
pop
xchg
imul
sbb
loop
cmp
in
mov
ljmp
xor
lahf
insb
out
fdivrs
jmp
nop
add
ss
mov
push
or
in
sbb
mov
data16
mov
cmp
jbe
clc
outsl
sub
and
xchg
sub
sub
add
adc
sbb
push
ds
lods
push
gs
dec
pop
movsb
inc
cld
and
cmp
xor
fbstp
xor
and
and
jl
jne
icebp
subl
mov
cwtl
mov
jne
call
clc
xchg
push
adc
aad
push
mov
loopne
pusha
and
push
seta
jmp
inc
lods
pop
xchg
mov
outsb
fmul
pop
iret
mov
lret
aaa
cmp
mov
xchg
lock
dec
in
push
inc
daa
ds
push
in
lock
fwait
jns
jo
mov
or
adcl
ljmp
and
dec
dec
in
ja
mov
sbb
mov
aas
mov
lret
loope
add
push
ja
mov
xor
xchg
or
adc
fsts
push
add
dec
mov
add
jnp
cld
sub
mov
lahf
pop
pop
mov
cmp
hlt
mov
pop
pop
sub
jae
repnz
pop
insb
rorl
cmp
inc
loope
mov
fcomps
pop
fdivr
mov
cs
mov
cltd
fstpl
push
cmp
mov
xchg
cmpsl
lret
jbe
ds
daa
inc
jg
mov
mov
mov
adc
xlat
cwtl
mov
into
stos
out
repz
scas
out
gs
std
insb
pushl
lret
dec
clc
cltd
push
cli
lods
fidivrs
out
out
inc
dec
jo
fisttpll
iret
push
mov
or
add
inc
andb
fnsave
inc
popa
lret
dec
sbb
sahf
test
xchg
cmp
pushf
lcall
movsl
fstpt
shl
inc
mov
arpl
jle
xchg
mov
mov
int
aad
popa
iret
push
jmp
jmp
andb
in
cmp
dec
repz
loope
imulb
icebp
cmp
inc
or
idiv
pusha
ret
mov
cld
int3
int3
mov
fnsave
or
dec
xor
movsb
xchg
mov
loopne
sbb
das
push
pop
xor
cmp
cmp
movsl
dec
xor
jmp
or
push
aam
inc
movsl
jle
fimull
inc
fisubrs
mov
test
in
aas
in
or
jle
loopne
xchg
aad
rorl
js
ss
iret
popf
andb
lods
out
and
mov
add
out
lds
mov
fistpl
hlt
bound
subl
mov
gs
shrb
aam
aam
stos
icebp
nop
fildll
add
cmp
scas
sub
enter
cmpb
sub
aad
cmp
sub
or
and
mov
jae
lcall
popf
push
pop
xchg
sub
jge
imulb
xchg
xchg
mov
out
cld
test
jg
test
sbb
mov
fldenv
push
mov
mov
lock
and
mov
bound
andb
mov
arpl
in
aam
push
nop
ds
mov
cmp
mov
push
in
imul
dec
xchg
les
mov
pop
sahf
xor
dec
cwtl
shrb
rol
inc
add
cmp
cmpsl
test
xchg
je
ss
call
or
sub
fdecstp
or
scas
lods
sub
out
pop
jne
inc
mov
sbb
test
push
enter
push
inc
das
imul
dec
outsl
sub
pop
pop
add
out
and
fstpt
pushf
pop
pop
xor
add
add
leave
pop
and
jne
mov
inc
dec
or
inc
out
adc
cmpl
pushf
in
and
adcb
aam
dec
and
inc
xchg
mov
cs
pop
inc
leave
or
mov
sub
in
xchg
pop
nop
mov
xchg
push
push
jb
lret
pop
inc
leave
or
mov
add
inc
pusha
orb
pop
insl
aam
cltd
inc
push
mov
cltd
stc
pop
popa
lods
cltd
repnz
cmp
addl
mov
flds
popa
push
cmp
ja
add
cld
push
cmpsb
mov
or
sub
xlat
xchg
add
ljmp
testl
and
xchg
adc
lods
shlb
mov
leave
enter
in
lret
leave
lcall
and
movhps
jno
and
sbb
popf
sub
jg
sbb
sahf
cwtl
add
fs
fidivrl
push
stos
ljmp
arpl
imul
outsb
call
and
std
inc
add
push
jae
adc
cmpsb
ret
mov
cmp
mov
adc
xchg
test
pop
dec
push
and
inc
push
out
ss
jno
adc
or
rorb
divl
push
mov
inc
mov
outsb
mov
jmp
hlt
mov
mov
in
ret
std
cmpsl
inc
adc
xlat
aad
pop
adc
in
pop
jecxz
call
cwtl
fsubr
cmc
out
out
orb
add
push
sbb
xchg
mov
inc
subl
sahf
decl
cwtl
rolb
sub
or
popa
mov
mov
repnz
testl
jne
cmp
jne
into
insb
mov
pop
lods
lahf
imul
push
cld
test
stos
mov
xor
ds
fildll
mov
mov
inc
mov
cs
sub
test
mov
mov
cwtl
fistl
cmp
out
test
pop
mov
jl
addr16
jg
loope
cmp
psllw
jnp
jmp
and
cmpsb
test
aas
negl
inc
fdivrp
lods
lret
jl
jp
cltd
pop
insl
stos
dec
cmp
icebp
shl
imul
cmp
out
mov
fistpll
and
icebp
sbb
arpl
push
adc
dec
mov
addr16
leave
mov
sub
leave
gs
or
fidivrs
xchg
std
shr
sbb
xorl
repz
add
std
iret
and
mov
mov
mov
xor
xchg
jmp
fcomip
cmp
mov
pop
mov
push
aas
sub
xor
stos
jmp
pop
scas
jmp
jno
or
cwtl
jns
imul
addr16
xchg
mov
inc
cmp
shll
jle,pt
shr
mov
icebp
pop
cmp
dec
call
dec
cmp
in
xor
add
jne
pop
dec
cmc
neg
and
stc
dec
adc
xchg
cmc
shll
in
dec
xchg
dec
sbb
outsl
xchg
jne
neg
lea
out
jle
in
sbb
jge
lods
aam
outsb
stc
popa
mov
xchg
imul
shl
insl
cmpsb
or
cmc
xorb
pop
xor
ja
push
cmp
sti
mov
mov
mov
lcall
ds
xor
lods
push
int
fsub
fnstcw
xchg
sarb
mov
xor
call
mov
mov
or
pop
lret
fsubrp
leave
push
int3
ljmp
push
xorl
test
sub
sbb
add
mov
fs
jl
add
fs
je
imul
mov
fld1
jge
ret
fs
mov
mov
das
pop
cli
dec
mov
sub
data16
pushf
aas
int
je
mov
dec
mov
pusha
inc
push
cmpsb
cmpsb
notb
add
cli
cmc
jge
popf
mov
inc
xchg
push
cmp
pop
ljmp
xor
sahf
int3
dec
in
add
loop
cmp
icebp
xchg
mulb
cmp
hlt
inc
test
inc
jmp
pop
jge
mov
cmp
shl
push
sti
pop
je
fisttpl
mov
and
rcrb
loop
jecxz
pop
and
daa
je
cmpl
lret
dec
pop
sub
fwait
pop
mov
xlat
mov
stos
xor
mov
sti
mov
mov
cli
mov
sti
popf
xchg
push
and
mov
or
test
jecxz
int3
out
add
jns
cld
push
sti
xchg
and
ljmp
les
lret
bound
or
jns
inc
rcr
push
fldl
rclb
fstps
les
int
sub
inc
dec
push
divb
int
sub
inc
pop
sub
xor
mov
jl
negl
push
jmp
mov
pop
into
cmp
in
mov
repz
mov
mov
jmp
out
push
in
jecxz
lea
aas
or
jmp
push
lret
adc
lock
jne
cli
aad
cwtl
jge
jno
movsl
ss
dec
cmp
sub
jne
sbb
repnz
fistps
js
xchg
jno
jecxz
fsubrs
sahf
or
outsl
lds
mov
test
imul
scas
fucomip
test
pop
jo
insl
mov
icebp
repnz
xchg
fnstenv
sbb
pop
mov
xchg
jbe
mov
mov
icebp
gs
sbb
mov
mov
push
push
test
cmp
scas
ljmp
jmp
jbe
xchg
and
gs
cmp
jecxz
lods
fdivr
dec
jo
inc
mov
or
adc
add
jo
fstpl
xchg
in
shl
fwait
sub
fisttpll
jne
mov
ss
adc
in
push
push
fwait
inc
push
ficomps
cmpl
sti
mov
out
pop
out
fisubs
add
test
cmpsl
cmp
loop
sbb
mov
mov
inc
mov
repz
fdiv
cmp
xor
aas
adc
jecxz
ficomps
xor
push
mov
inc
call
mov
fstps
out
adc
push
mov
out
mov
sbb
fnstenv
mov
add
clc
insb
lahf
jns
mov
out
jl
std
sti
pop
lock
outsb
fstp
mov
arpl
or
jge
push
nop
icebp
bnd
in
mov
mov
sub
mov
mov
incb
sbb
insl
stos
stc
insb
scas
jp
jo
cmp
inc
and
push
fbld
jle
mov
pushf
rcr
adc
pop
dec
jg
jecxz
jp
lcall
in
push
xchg
rolb
push
cld
ds
ja
xor
in
in
push
cwtl
fstps
fildll
sub
sbb
jb
int
pop
cmpsb
jl
mov
mov
data16
jno
mov
aaa
leave
cmp
add
loopne
fcomps
pop
pop
pop
pop
pop
sbb
sub
and
inc
testl
fdivrs
jne
pop
dec
sub
fnsave
jge,pt
pop
ljmp
cltd
xchg
push
call
jns
rorb
pop
lds
mov
xchg
or
cmp
rclb
ret
data16
pop
insb
dec
addr16
cwtl
icebp
enter
mov
and
fnstcw
mov
jnp
dec
jae
int3
and
int
mov
call
xor
fcomps
fcompl
sbb
fisttpl
fstps
lods
adc
popa
jp
loopw
scas
fisttpll
popa
insb
jne
xchg
leave
cmp
xor
into
mov
scas
dec
in
ss
dec
adc
jb
push
fimull
out
push
ret
in
shrb
cmpsb
stos
pop
outsb
mov
inc
ss
pop
mov
push
fnstsw
imul
lods
xchg
stos
pop
jge
dec
out
pop
pushf
popa
outsb
jae
nop
mov
outsb
jp
cli
sbb
or
pop
fistpl
fmull
sub
cmpl
mov
mov
mov
iret
mov
nop
jns
sarl
jns
in
int
or
push
push
pusha
sbb
jg,pn
popa
or
idivb
adc
or
outsl
push
imul
dec
push
imul
adc
fcomi
test
into
popf
js
or
fwait
sar
jg
sbb
in
shrb
push
popf
fistpl
xlat
insl
xchg
call
nop
mov
mov
fldz
mov
cmpsb
jecxz
jp
mov
jle
xchg
xor
sbb
ljmp
lods
or
inc
inc
mov
out
insb
dec
xchg
xchg
ljmp
xchg
lret
jb
fistpl
dec
push
fsubrl
jb
imul
fucomi
pop
out
fldt
insl
pop
je
pop
or
int3
mov
out
mov
bound
orl
clc
or
jo
iret
mov
daa
sub
pushf
cmpsb
out
mov
addb
cmpsb
inc
jmp
xchg
mov
out
in
jbe
pop
cmpsb
push
mov
adc
jg
fsubrl
in
fwait
popf
fsubl
ss
je
sub
pop
std
xchg
shl
insl
xchg
insl
mov
testl
xor
dec
adc
mov
divl
mov
pop
jo
shrb
jo
dec
popa
repz
stos
nop
dec
repnz
scas
jle
in
adc
sbb
pusha
ss
pop
mov
add
jmp
pop
mov
sahf
enter
pop
leave
cmp
imul
lds
cld
mov
mov
dec
mov
loopne
mov
out
mov
mov
lcall
inc
insb
dec
mov
daa
out
mov
lahf
mov
inc
sub
stc
pop
sbb
fwait
icebp
cmc
ficomps
xor
ja
in
and
cltd
nop
lods
je
ficoml
cmp
inc
xlat
fdivs
sar
in
pop
pop
jecxz
xchg
mov
jb
cmp
adcl
cmpsl
leave
jns
rclb
test
imul
or
xchg
cld
cli
lret
xchg
cmpsl
dec
mov
imul
mov
mov
push
popa
sub
xor
pop
jle
mov
mov
dec
pusha
in
xchg
pop
sti
pop
mull
mov
mov
int3
std
out
arpl
mov
mov
push
cwtl
not
cmc
pop
sub
pop
cli
sub
fistpl
fldt
cmp
mov
and
inc
xor
dec
cmp
fwait
stc
dec
loopne
xchg
cmp
xor
push
fldl
xlat
pop
sub
sbb
es
mov
push
cltd
imul
jmp
repnz
in
cmc
movsb
jno
push
fidivrl
xchg
loop
stos
loopne
fiaddl
and
ljmp
leave
adc
mov
fisubrl
out
pop
cmp
out
mov
nop
pop
pushf
mov
mov
cmpsl
and
inc
mov
aaa
add
inc
mov
out
imul
shrl
jo
pop
mov
test
jb
test
stc
dec
addr16
les
fptan
out
stc
jle,pn
mov
dec
cs
adc
dec
dec
pop
xorl
jle
mov
jne
dec
xor
icebp
bound
stos
inc
lret
xchg
cli
adc
lret
xchg
mov
dec
jbe
stc
sub
xchg
mov
movsb
scas
pop
lcall
push
dec
or
notb
xchg
push
push
mov
pop
mov
das
aam
add
movsl
subl
inc
stc
or
xchg
pop
call
out
mov
sti
test
inc
data16
mov
shll
push
mov
pop
imul
and
sub
push
ret
aaa
jae
sub
loope
sub
mov
push
aas
mov
insl
stc
dec
loop
inc
loope
mov
leave
jne
loop
xchg
outsl
sbb
and
and
lahf
push
fistl
push
icebp
test
rol
mov
or
dec
and
dec
jp
jbe
xor
jle
pop
in
push
das
sub
inc
and
inc
adc
jmp
cs
cli
popf
mov
scas
lahf
mov
xor
push
pop
mov
aad
cmpsl
push
iret
hlt
adc
xor
push
or
mov
push
mov
cmc
inc
cli
pop
mov
jp
pop
add
ret
je
fxch
add
lret
imull
in
pop
pop
lcall
sbb
adc
int3
push
mov
pop
lods
std
sub
dec
out
shll
xorl
dec
inc
inc
int3
sub
jg
and
lret
add
arpl
roll
xchg
fiaddl
incl
leave
fldt
rcrl
pop
pop
rcll
lcall
out
and
xchg
push
xchg
repnz
cltd
jmp
mov
enter
fs
mov
sbb
out
pop
stc
mov
push
cs
mov
mov
scas
and
fidivl
push
aaa
pop
ja
in
or
jg
pop
push
outsl
add
pop
jnp
jae
dec
fdivs
pop
xchg
cmpsb
mov
dec
jg
mov
dec
mov
xchg
cmp
jmp
sbb
lods
or
cld
jbe
cmp
jne
push
loopne
imul
jg
sub
pop
pushf
outsl
push
xchg
inc
int3
push
jns
pushf
push
pop
sub
ss
mov
jle
xchg
dec
outsb
outsl
movsb
pop
mov
add
fisubrl
push
push
mov
fcomps
mov
push
scas
cmp
adc
xchg
sbb
fidivl
rorb
daa
mov
xchg
mov
jecxz
jg
jne
xchg
adc
mov
les
and
push
inc
ret
hlt
jo
cmp
clc
pop
cmc
jbe
push
outsb
push
jecxz
fwait
loop
mov
ja
cltd
testl
sub
sub
stos
cld
loope
xor
cwtl
test
pop
ds
loope
je
adc
out
cmpsl
testl
add
jl
jl
mov
das
sbb
jg
mov
ret
popa
out
loop
rcrl
js
stos
test
cmp
enter
cmc
adc
cmpsl
xchg
pop
or
scas
mov
repnz
ds
daa
shlb
pop
push
cwtl
inc
mov
and
std
push
fdivrs
out
cli
add
mov
jae
pop
and
jp
out
sub
pop
cwtl
cld
dec
pop
decb
mov
scas
mov
mov
mov
mov
fnsave
out
scas
frstor
nop
mov
test
jnp
fcmovne
repnz
or
repnz
ficompl
add
gs
sar
xchg
int
out
mov
sub
imul
bound
lcall
dec
fdivs
js
movsl
daa
lods
gs
test
cld
test
push
or
mov
sbb
repnz
mov
shlb
inc
inc
pushf
push
gs
dec
in
xchg
ljmp
scas
jns
lock
pop
imul
in
pop
jmp
cwtl
push
push
les
cltd
in
aam
xor
adc
lods
adcl
outsb
xchg
movsb
dec
repnz
aas
and
pop
sub
jge
adc
xchg
out
push
sbb
sub
ljmp
jo
sbb
mov
dec
cmc
loopne
insb
cmp
sub
mov
loope
out
test
aas
shll
mov
sbb
data16
add
fistpll
test
mov
aad
push
in
dec
push
mov
loopne
and
sub
sti
cld
mov
call
sbb
pop
dec
mov
mov
fwait
mov
xor
xor
dec
dec
cmpl
negb
mov
mov
sbb
jnp
push
pop
mov
int3
adc
push
pushf
cmc
outsl
add
or
fisubrl
mov
std
jae
mov
sub
test
xlat
jae
nop
jg
fadds
test
push
mov
pop
movsb
xchg
push
push
sti
popf
movsl
xchg
jns
aad
test
sbb
dec
dec
fildl
aad
dec
sbb
dec
das
sbb
dec
xchg
inc
or
aaa
bound
mov
js
mov
xlat
jg
mull
dec
pusha
std
or
rclb
sub
notb
mov
mov
clc
push
subb
subl
ficoml
subl
push
and
mov
push
push
test
mov
inc
jge
mov
xchg
xor
enter
mov
in
int
cmc
stc
int
mov
daa
jb
pushf
idiv
or
mov
rcrl
xchg
push
pop
pop
mov
daa
jbe
xchg
lods
inc
stos
pop
xor
popa
push
jne
pop
shrb
cwtl
addr16
xchg
cmp
sub
insb
mov
inc
push
mov
mov
inc
and
loopne
fisubl
dec
jne
loopne
clc
mov
dec
xchg
das
inc
adc
cli
leave
dec
sub
stc
sbb
sub
fnstsw
int
mov
mov
jne
pop
mov
fdivrs
cmp
psubsb
push
fwait
xchg
push
fists
aas
lods
pop
cli
cmp
aam
repz
out
pop
je
xlat
mov
push
cmp
jle
js
mov
sub
mov
mov
push
xchg
sbb
pop
push
pusha
faddl
out
xlat
shlb
mov
jae
push
cmp
scas
fstpl
add
idivl
or
out
loop
mov
lea
inc
cmp
jp
sub
cmpsl
dec
mov
jg
lret
shlb
out
mov
lods
dec
lods
adc
test
mov
int
xor
xor
jecxz
addr16
cmp
fwait
cwtl
cld
cli
sub
mov
popf
stos
xchg
push
mov
mov
stos
push
rorb
inc
jle
pop
stos
movsl
cmp
adcl
mov
scas
adc
or
mov
mov
out
push
and
sub
aas
mov
xor
std
popf
ds
inc
jmp
inc
gs
ss
xchg
mov
fmulp
negb
aaa
cmp
jl
mov
testl
or
mov
dec
push
xlat
outsl
sbb
add
sbb
cmp
pop
fimull
sub
cmc
push
cmp
jb
mov
cmc
cmp
dec
fisubrs
pop
sub
and
arpl
pop
pop
sub
mov
xchg
sub
pop
pushf
jge
mov
mov
mov
rcpps
stc
sbb
xchg
mov
pop
nop
cmp
insb
jmp
jp
ret
out
popa
cmp
ret
out
xor
mov
pop
mov
daa
into
dec
xchg
hlt
test
jle
jecxz
push
mov
pusha
mov
in
std
mov
decb
push
je
mov
mov
inc
pop
mov
add
lods
cmp
adc
into
adc
out
jmp
enter
pop
test
lahf
mov
stc
mov
adc
pop
inc
sbbl
add
inc
xchg
popf
das
dec
ds
hlt
inc
lret
inc
out
scas
pop
movsl
jle
jnp
lret
xchg
sbb
jno
enter
push
stos
mov
insl
add
adc
lcall
pop
aad
xor
sbb
xor
dec
cmp
fdivl
test
aas
xchg
push
push
pop
cmp
popa
clc
lret
pop
mov
sub
jne
xchg
pop
leave
dec
int3
es
push
lods
push
scas
hlt
mov
hlt
in
jno
outsl
mov
jg
je
push
leave
scas
xchg
sub
jae
and
sbb
xchg
sbb
popf
push
inc
movsl
test
xchg
xchg
bound
pop
fldt
sbb
inc
and
in
mov
mov
pop
pop
scas
jmp
or
test
inc
mov
mov
xchg
lea
imul
push
jg
loop
gs
xor
add
add
ss
int3
je
inc
mov
mov
mov
dec
pop
xchg
sbb
adc
outsb
inc
xor
add
adc
add
es
xor
xor
or
mov
sub
adc
dec
dec
adc
test
inc
or
and
pusha
and
xchg
xor
jl
test
or
mov
fimuls
jns
dec
into
out
leave
cmp
popf
aas
lcall
int3
fsts
incb
pop
cmp
andl
inc
and
jecxz
fiaddl
jmp
mov
and
repnz
dec
repz
add
popf
out
and
shrb
andb
cmp
mov
imul
mov
add
in
cmp
fiadds
mov
jmp
sti
lea
jbe
test
cmp
aas
inc
stos
push
and
xchg
lock
fs
add
xor
xor
scas
adc
sub
xor
cmp
int
mov
in
sub
dec
cwtl
dec
into
xchg
pusha
jle
insl
enter
cwtl
sti
push
xor
aas
or
out
pop
inc
jl
push
dec
xchg
mov
cmpsl
mov
and
imul
xor
in
sub
mov
mov
out
fildl
dec
fisubl
cmp
mov
xchg
sub
inc
sbb
xchg
ret
sahf
movups
pop
dec
test
push
push
xchg
jae
das
xlat
cmpsl
cmp
inc
cmp
add
and
push
fidivl
pop
leave
push
jge
and
xchg
movsl
xor
add
or
sbbb
jae
jne
data16
idivl
ja
cwtl
adc
dec
sub
lret
iret
xchg
int3
repz
jb
dec
repz
cmp
cwtl
bound
mov
out
loope
mov
pop
mov
aas
movsl
stos
pop
inc
les
dec
lods
int
repnz
mov
mov
xchg
repnz
mov
pop
lcall
orb
ds
cwtl
hlt
mov
std
nop
decb
dec
jmp
xor
jle
mov
xor
cmp
pop
inc
in
outsl
je
cmp
or
xchg
push
push
lcall
sbb
jle
outsl
int3
shl
pop
inc
cld
rclb
sub
pop
cmp
push
out
fcoml
ds
adcb
ret
adc
mov
pop
cmp
frstor
jne
jne
sbb
lods
xor
sub
jbe
scas
jne
mov
mov
xchg
lock
sti
jne
cmp
call
insl
subb
cmpl
in
sub
out
imul
out
jne
data16
and
lds
into
test
sbb
jne
cli
dec
pop
sub
pusha
pushf
push
ja
mov
or
jl
stos
add
loope
iret
sar
sar
addb
and
add
adc
and
and
and
mov
sub
or
cmp
andb
enter
int3
cmpsl
xor
les
xor
xorb
lock
and
fisttps
xor
jecxz
pop
mov
fidivrs
mov
in
inc
insb
inc
push
sbb
cmp
xchg
mov
inc
js
pop
filds
pop
sbb
test
add
adc
jnp
sub
jno
out
les
outsl
out
pushl
sbb
shlb
inc
push
mov
cmp
xor
push
fwait
push
inc
mov
push
data16
pop
iret
mov
jno
sarb
add
repnz
sbb
jns
fsubs
addb
add
inc
outsl
in
dec
or
mov
std
jmp
lock
inc
fisubs
jecxz
ret
mov
xchg
or
push
fwait
add
icebp
mov
dec
dec
scas
or
cmc
pop
rcll
pop
push
icebp
push
jg
ss
cmp
mov
addl
ret
push
ja
adc
push
pushf
xchg
dec
add
lahf
push
loopne
rolb
jb
add
test
test
fwait
mov
and
rol
ds
in
ja
decb
cmp
arpl
xchg
jecxz
add
push
mov
inc
push
push
clc
aam
push
roll
mov
add
ss
inc
lahf
mov
nop
in
pop
fcmovbe
mov
sub
addr16
jns
aas
jo
int
dec
sti
mov
and
adcb
fbld
fldenv
loopew
push
popa
ss
or
pop
scas
scas
test
cld
in
sti
push
outsb
fbld
add
sbb
inc
ds
cmpsl
fstpt
jmp
jge
mov
loop
dec
movsb
fisubs
lret
fs
add
in
gs
dec
enter
cmpsb
enter
int
jnp
enter
hlt
adc
mov
ja
adc
cltd
andl
mov
jp
sub
dec
or
pop
dec
pop
loopne
mov
inc
aam
dec
dec
stc
ljmp
mov
in
mov
addb
add
push
jg
mov
je
out
es
mov
sub
or
or
fdiv
inc
rol
ror
hlt
and
pop
cmp
pop
push
sub
push
dec
cmpsb
int
pusha
aas
jecxz
cmp
clc
mov
incb
shrl
lds
std
push
or
mov
jno
stc
add
xchg
pop
stos
stos
stc
shrl
adc
or
pop
out
ljmp
or
out
mov
outsl
push
mov
push
mov
test
dec
mov
outsl
mov
mov
mov
insb
shl
sti
sahf
mov
int
jne
cmp
andl
in
rcr
fsubrl
push
setne
inc
scas
cltd
xlat
jge
mov
cli
ljmp
out
sti
push
inc
mov
call
loop
mul
hlt
test
mov
fcmovb
cmp
negb
push
les
lods
or
addr16
fadds
movsl
mov
or
vmovdqu
jno
jo,pn
jmp
nop
dec
cmpl
push
loope
ficoms
mov
outsl
cli
push
cmp
mov
in
pop
cmp
sub
xor
fsubrp
adc
push
pop
xchg
je
jle
mov
daa
loop
jbe
call
mov
sti
test
fnsave
pop
mov
lock
in
ss
push
push
jo
fistpl
mov
pop
jmp
or
lahf
xor
sbb
incb
cmp
sub
add
mov
jg
cmp
ljmp
mov
lds
pop
sbb
mov
imul
test
rolb
pop
sbb
push
xor
rcr
pop
jne
popa
pop
icebp
test
out
aad
sub
pop
sbb
lods
or
mov
lret
pop
pop
xor
and
xlat
or
jb
es
mov
adc
daa
and
mov
and
out
mov
in
aad
fcoms
pushl
pop
nop
mov
xlat
jb
gs
xchg
dec
mov
sub
movsb
push
jmp
cmp
add
fnstenv
sub
push
pusha
popa
popf
mov
dec
push
nop
fs
in
jle
repnz
popf
jns
iret
fistl
pop
xor
or
in
xchg
push
in
shlb
mov
in
test
pop
jbe
dec
rcrl
push
in
lock
stos
jl
pop
adc
mov
imull
push
push
adc
stc
jecxz
xchg
insb
and
push
into
jp
rol
movsb
cltd
add
push
or
fsubp
addr16
fs
cmc
xchg
test
xor
or
mov
inc
arpl
cmpsb
sub
and
and
rclb
hlt
push
xchg
mov
adc
inc
pop
imul
dec
ficoml
mov
jl
jmp
jne
cmp
repz
popf
dec
push
scas
xor
pop
mov
scas
mov
addl
divb
sub
bound
in
jns
mov
jl
mov
jno
pushf
les
testb
negb
lods
pop
xchg
mov
pop
aad
inc
or
push
popf
jmp
fistpll
and
mov
or
pusha
add
dec
xchg
jno
or
mov
movsb
add
rcrb
je
sub
cmp
test
call
fidivrl
mov
adc
adc
fwait
xlat
mov
xchg
sbb
aam
jns
jnp
popf
mov
loope
pop
movsl
shll
sub
int3
inc
jg
movsb
and
add
ds
mov
notl
aaa
jnp
mov
dec
sub
jae
enter
js
sub
mov
pop
push
dec
dec
rolb
or
dec
mov
inc
pop
sbbl
lods
push
push
mov
pop
or
and
xor
mov
xchg
leave
scas
cwtl
stc
or
mov
cltd
mov
ja
sub
mov
lds
sbb
int
jmp
pop
fldt
inc
rolb
jge
mov
push
in
movsl
outsb
xchg
daa
and
push
sbb
jmp
cld
sub
icebp
pop
xor
adc
xchg
cmp
pop
orl
mov
cmp
loopne
data16
sbb
cmp
push
sub
in
mov
or
ja
imul
add
mov
dec
rclb
cmp
and
jge
pop
push
out
lahf
mov
or
lcall
add
xchg
data16
cmc
lcall
cmp
pop
jbe
xlat
push
jle
test
nop
jae
xchg
or
loope
stos
popa
sbbl
cmpsl
aaa
rorl
sub
jmp
push
mov
dec
std
incl
test
xchg
repnz
cmp
stc
rorl
lock
sub
mov
lods
mov
add
loop
mov
das
inc
fsts
pop
pusha
jp
dec
sar
pop
and
lahf
cmpsb
push
sbb
push
push
lahf
inc
popa
xor
pop
pop
hlt
sbb
movsb
inc
mov
mov
lds
ss
enter
mov
mov
sub
jmp
mov
lods
stos
jnp
xchg
jne
inc
and
xchg
adc
ljmp
pop
jge
test
cmp
pop
or
notl
insl
daa
imul
outsl
dec
addr16
and
xchg
es
jp
lcall
xor
repnz
or
dec
jne
mov
adc
inc
mov
mov
push
in
add
lods
aaa
jns
popa
outsb
es
or
sub
xor
lock
mov
or
js
mov
inc
loopne
popf
adc
dec
mov
mov
imul
pop
adc
popf
dec
iret
mov
sub
add
xor
call
lods
cs
in
aam
and
xor
ret
jge
lcall
in
cmp
push
incl
in
adc
push
add
fstps
inc
sub
cld
xchg
int3
sbb
push
fmull
ret
mov
insl
push
arpl
xchg
fsubr
ffreep
pop
pop
push
xchg
call
movb
jno
mov
shll
pop
xor
dec
iret
push
ret
cld
ret
ds
inc
cmp
nop
xor
andl
rcll
mov
lret
inc
xchg
pop
cmpsb
call
ror
sarl
popa
jne
rolb
cltd
xor
aad
push
fistpll
loope
and
ja
flds
mov
and
movsb
stos
fistpll
test
icebp
jne
repz
inc
pop
je
clc
in
xchg
add
push
cmp
xchg
or
das
sbb
mov
mov
jecxz
arpl
mov
lods
and
jecxz
inc
mov
mull
push
gs
pop
test
cmp
fists
data16
clc
in
shlb
incl
jno
sub
or
popa
inc
and
add
lds
and
jmp
movsl
dec
test
mov
xor
movsb
int3
jne
sub
enter
ret
push
push
sbbb
push
and
push
xchg
jmp
pop
adc
cs
push
adc
fcoml
mov
jae
or
add
imul
pop
mov
loopne
lock
xchg
sti
leave
push
icebp
movsb
rcll
out
cltd
divl
jl
int3
jo
loop
dec
int
fdivrl
push
jp
or
cmp
cmp
aas
lds
inc
adc
in
sbb
xor
cmpsb
lds
ficoml
mov
pop
int3
pop
adc
pop
sti
pop
sub
mov
pushf
xchg
push
and
push
bnd
dec
xchg
inc
movsb
ss
jns
mov
push
sarb
shrb
es
push
cs
je
push
xchg
scas
or
scas
xchg
sti
lret
das
gs
cmove
xor
iret
test
loopne
movsb
push
cmp
rclb
divb
sbb
mov
insb
movsl
fcomps
out
je
fidivs
sbb
xor
cmp
cwtl
cmp
mov
adc
xlat
stos
sbb
mov
aam
push
std
jl
stos
jle
xor
jp
xchg
dec
cmp
xchg
inc
mov
ja
std
sbb
mov
in
xchg
lret
lret
hlt
push
clts
xchg
or
and
push
jmp
popa
rol
add
dec
cmp
mov
out
cmpsb
das
mov
into
pop
adcl
movsb
xor
mov
clc
lods
jle
es
leave
sbb
xchg
xchg
nop
ds
test
cmpsb
add
into
loop
mov
cmp
adc
lds
dec
xor
sub
push
das
adc
std
push
adc
lret
push
mov
or
mov
fstps
cmc
add
and
jp
pusha
cmp
adc
add
jo
push
sarl
bound
push
sub
lods
pop
loope
pop
bound
lods
adc
ret
xchg
or
jmp
data16
clc
fists
xchg
shrl
data16
jns
loope
xchg
rcl
mov
mov
push
and
in
daa
decl
xor
outsl
push
and
sarb
push
ret
shrb
cmp
add
movsb
nop
lret
lea
mov
jl
and
pop
push
adc
mov
aaa
add
mov
xor
mov
inc
sub
test
call
lock
in
cmp
pusha
out
in
push
ds
xor
es
push
adc
addl
jmp
sub
in
pop
int3
push
lret
es
xchg
int3
cmc
hlt
push
arpl
jae
scas
pop
cmp
mov
adcb
cmp
loopne
repz
push
aam
jg
sub
cmpsb
movsl
aad
cli
jae
data16
ret
pushf
aam
inc
add
scas
pop
mov
addr16
shrl
mov
add
outsl
or
or
mov
mov
adc
pop
mov
mov
pop
or
cmpsb
fisubrs
xchg
mov
jg
test
xchg
jecxz
cmc
add
adc
movhps
test
out
mov
cmp
sub
shrl
jle
sbb
xchg
cmpsl
sub
clc
iret
or
xchg
mov
ljmp
mov
je
ficompl
mov
or
inc
push
icebp
stos
std
ret
dec
rcrb
and
jae
aam
dec
in
push
lock
insl
and
nop
cmpsl
jmp
jge
add
cmpsl
mov
lea
inc
or
cmp
bnd
adc
movsb
test
xchg
add
rolb
xor
fbstp
aas
sbb
int3
inc
adc
movsb
lea
in
sete
imul
scas
sub
std
in
stos
cwtl
ja
imul
sub
test
gs
scas
stos
cltd
mov
mov
jge
sub
mov
jecxz
pop
jb
xchg
lea
and
adc
imul
ljmp
shl
or
sub
inc
fildll
mov
jp
gs
push
dec
add
cmpl
and
dec
or
or
mov
loope
add
aaa
adc
sarl
dec
testb
js
fcmovne
aad
inc
std
xchg
sub
push
jmp
pop
inc
fldenv
jnp
shlb
cs
stos
xchg
dec
pop
adc
cmp
pop
add
sti
mov
mov
ss
sub
jnp
lea
movsl
outsb
repnz
xor
mov
test
aas
pop
sub
repz
repz
pop
push
jns
in
in
jns
fsubrs
and
push
dec
jecxz
xor
mov
dec
jbe
inc
push
mov
sbb
push
push
ficomps
push
add
aad
lds
bnd
iret
out
je
mov
mov
loop
cltd
pop
scas
sbb
pop
aam
and
mov
adc
cmp
inc
pop
or
in
loop
repz
loop
xchg
push
adc
cs
test
mov
xor
fldl
xorl
outsl
lea
jnp
mov
inc
mov
in
inc
movsl
xor
test
cmp
sub
out
mov
mov
lret
dec
adc
pop
sub
xchg
jp
pushf
jg
and
outsl
mov
adc
sbb
test
sarb
jl
mov
andb
ret
in
aad
pop
sbb
pop
and
jne
mov
mov
lret
arpl
mov
in
inc
xchg
add
dec
xchg
popa
pop
dec
mov
fs
ds
pop
hlt
enter
int3
mov
scas
fisubs
enter
mov
xor
pop
aaa
movsl
mov
test
pop
stc
fisttpll
pop
push
cld
and
pusha
lret
sub
enter
and
ret
outsb
cwtl
fwait
xor
or
push
ret
xchg
sub
push
aam
sub
in
add
in
mov
inc
sub
cltd
mov
mov
inc
lret
cmpsl
iret
and
xlat
dec
wrmsr
test
mov
jno
push
xor
popa
int
movsb
movsb
mov
inc
insl
imul
fidivs
and
lea
outsl
stc
push
shlb
rorl
inc
sbb
dec
pop
ds
inc
sahf
insb
sub
stc
movl
or
stos
xor
jecxz
test
push
push
sub
push
xchg
fnsave
jge
push
sbb
cmpsb
xor
arpl
iret
dec
jo
push
and
mov
adc
les
cmp
test
add
decb
movsl
and
loope
cmpsb
ficoml
push
xchg
mov
pushf
mov
jne
xor
sbb
and
xlat
add
sbb
sbb
mov
adc
outsl
gs
add
or
push
lods
jb
ret
cmp
jp
push
jne
rcr
sbb
fdivl
loop
stc
out
cmpsb
adc
ret
gs
mov
adc
imul
aam
popf
fs
xor
add
test
aas
push
adc
and
data16
add
fcomi
jno
lock
scas
xor
ss
xchg
lcall
fidivrs
fldl
js
bound
sbb
inc
data16
pop
dec
cmp
lods
inc
push
and
mov
push
cltd
dec
xchg
mov
sub
or
jecxz
mov
add
adc
and
push
and
dec
jecxz
adc
adc
or
sarl
dec
cli
push
lret
pop
or
mov
cmp
pop
mov
jmp
mov
popf
les
sub
inc
xor
push
movsb
iret
and
sub
mov
dec
fildll
fiadds
mov
inc
xchg
mov
shrl
rorl
mov
pusha
xor
popa
bound
add
sbb
push
into
addr16
pop
or
pushl
adc
xor
leave
xchg
jbe
sahf
lock
xchg
cmc
lret
idivl
xor
stos
jo
xor
jo
ds
xchg
mov
dec
pop
push
pop
or
scas
jg
sbb
repz
cmp
out
test
sbb
and
sbb
jns
mov
xchg
pushl
rcl
loop
push
stos
scas
iret
hlt
pop
les
ljmp
adc
test
mov
test
std
lock
add
test
xor
mov
push
daa
loope
jecxz
add
ffreep
sub
pushf
into
cli
adc
movsl
daa
add
out
jns
clc
inc
push
addr16
pop
pop
lahf
aam
adc
xchg
push
bound
add
scas
ljmp
mov
orb
jmp
shll
fs
pusha
addr16
xor
jecxz
jae
add
insl
xlat
sbb
daa
shlb
cmpsb
enter
cltd
dec
js
dec
cmovo
out
iret
xchg
out
jne
and
jl
out
or
push
cld
push
icebp
fisubrl
in
jne
pop
inc
mov
stos
ja
jecxz
mov
fsts
fcomps
pop
lahf
test
sbb
loope
mov
jns
shrb
cmp
repz
test
mov
dec
nop
lcall
add
cmpb
sub
adc
insb
out
jnp
or
out
stos
jl
shll
lods
jns
enter
lods
dec
ret
pop
pop
sbb
test
loopne
jecxz
pop
mov
cmp
insl
or
push
cld
je
imul
xchg
je
inc
outsl
or
ja
enter
inc
mov
iret
or
es
popa
sbb
dec
dec
sbb
dec
lcall
cmp
ss
dec
imul
test
jbe
negb
cmpsb
aam
pop
and
pop
aam
out
xor
iret
cmc
push
cmp
mov
insb
cmp
mov
aas
lods
and
mov
in
in
inc
xchg
in
sbb
test
cmp
pop
aad
in
sbb
sbb
aaa
jbe
cwtl
insb
clc
imul
xchg
mov
cmpsl
cmp
push
fdivr
fwait
addl
jnp
mov
jge
enter
mov
or
lds
add
add
outsb
add
fldenv
std
mov
fwait
mov
fsubl
inc
ss
data16
add
aaa
or
pop
inc
mov
push
stc
jnp
std
push
mov
stos
js
mov
mov
fidivrl
test
cwtl
inc
repz
lcall
jp
scas
clc
lahf
mov
mov
adc
cmp
loop
jmp
mov
in
mov
stos
mov
pop
xchg
lods
mulb
add
and
subl
jle
pop
jp
movsl
mov
faddp
movsl
orb
scas
out
push
aas
xchg
pusha
xchg
test
test
and
xchg
sub
or
cmp
xor
cli
int3
rorl
mov
jns
pop
push
jmp
jp
add
dec
jns
jge
mov
mov
cmc
insl
dec
pop
mov
int3
das
test
test
mov
iret
das
xchg
or
test
jbe
jmp
jae
lods
lock
popl
sbb
pusha
std
xor
cmp
pusha
sub
inc
arpl
sub
push
stos
or
add
mov
ret
push
in
in
mov
sbb
mov
mov
sbbl
push
rclb
sbb
int3
mov
stc
jecxz
push
cmc
fiaddl
or
rcl
aam
ret
xor
mov
xor
sub
stos
push
jo
sub
jp
cmp
or
mov
jp
xor
outsl
sarl
sub
cltd
or
int
sbb
sbb
pop
cmp
das
adc
or
test
fistpl
iret
pop
cmp
jae
xchg
out
push
pushf
loope
mov
insl
sbb
cmp
pop
repz
jl
cmp
lcall
imul
mov
xor
dec
dec
sbb
mov
mov
pop
lods
jl
and
sub
jne
flds
push
adc
xor
jnp
js
jns
and
mov
xor
inc
push
mov
out
fwait
shll
test
or
mov
xor
or
and
push
pushf
fadd
incl
push
jnp
jge
cmp
fidivs
jb
cli
in
movsb
in
mov
jmp
or
mov
adc
pop
and
mov
push
ja
or
xchg
inc
mov
mov
pop
jae
stc
or
lds
int
xor
lock
insb
ja
push
xchg
jne
or
lret
scas
inc
inc
fistpl
mov
fcmovbe
xchg
mov
outsb
mov
add
insl
in
movsb
mov
pop
mov
outsb
pushf
lods
dec
push
out
push
cmp
mov
xchg
ja
sbb
and
push
out
imull
push
ret
mov
stos
rcr
in
insb
arpl
jne
mov
les
and
sbb
pop
or
rclb
push
jnp
xor
pop
testb
or
dec
xchg
cli
adc
cltd
hlt
inc
inc
lcall
or
pop
and
outsl
sub
lock
inc
pop
loop
test
jp
out
cmp
pop
jg
pop
mov
pop
hlt
pop
out
jns
dec
sbb
add
gs
or
data16
sbb
xor
add
mov
movsb
into
sarb
adc
jmp
jg
lea
cmp
ja
aas
test
popf
rorl
in
fisubs
add
xchg
fs
mov
in
out
pop
insl
fdivrs
imul
sub
fnstcw
outsl
out
inc
movsl
jbe
scas
pop
daa
adc
int3
repnz
stos
daa
daa
dec
dec
xlat
movsb
ret
lods
sbb
xchg
scas
jns
pop
inc
in
push
lahf
ret
insl
lahf
fisubs
pop
pop
or
mov
fsub
mov
dec
dec
xchg
inc
out
cmp
or
push
push
mov
rcr
cmp
pop
mov
mov
mov
lds
testl
mov
xlat
cmpsl
xorb
andb
sarl
pop
sub
ret
mov
xor
mov
push
fisttpl
jecxz
fdivl
jg
xor
sbb
mov
addr16
jle
add
fisttpll
push
adc
add
pop
dec
jbe
popf
or
mov
adc
sub
dec
out
jae
repz
mov
jno
pop
xchg
cmc
loopne
adc
inc
into
out
daa
orl
roll
dec
testb
aaa
and
stos
add
ficompl
pop
push
pushl
or
sub
loopne
xchg
pushf
or
mov
mov
repnz
jp
bnd
lret
mov
hlt
or
in
push
add
and
pop
inc
faddl
mov
cmp
sbb
push
sti
in
sbb
ja
negb
mov
pop
sbb
mov
mov
and
ficoms
outsb
mov
mov
inc
cmpsl
movsb
subb
fcomp
fwait
pop
push
lds
sti
or
sub
and
fimull
cld
xorl
jbe
out
jno
movaps
lods
xchg
sahf
inc
cmpsl
push
sub
testb
add
daa
xor
pusha
mov
jno
sub
or
shrl
adc
pop
rcrl
jno
mov
dec
call
cltd
push
test
mov
mov
test
mov
mov
iret
jne
arpl
imul
adc
inc
mov
mov
jle
mov
je
jl
in
mov
pop
xchg
in
fidivrl
xor
pop
jbe
cmp
out
fistl
xchg
add
lret
sub
dec
mov
jp
fwait
inc
jl
in
negb
adc
lods
or
push
pop
push
fwait
ja
stos
int
dec
jno
outsb
mov
or
mov
xor
cmp
pop
xchg
out
sbb
cmp
push
push
dec
adc
in
or
jno
cmp
xchg
or
inc
movsb
xchg
xchg
jp
sahf
cs
sbb
stc
nop
popf
xchg
pop
mov
outsb
fsubrl
pop
pop
loopne
add
push
sbb
sbb
jge
jecxz
sbb
jbe
out
iret
les
cs
push
stos
clc
push
shl
mov
movsb
out
nop
andb
ret
inc
popa
leave
xchg
ss
push
push
lods
sbb
push
jle
or
fists
dec
call
stos
cmpsl
jge
sub
inc
in
stos
out
xor
pop
ret
cmc
leave
cmp
jno
imul
mov
push
or
pop
cwtl
inc
lods
mov
repnz
into
pop
add
imul
and
je
jno
jbe
les
movsl
cld
imul
jo
pop
in
push
dec
dec
push
or
dec
xlat
ret
addb
push
jmp
test
out
inc
adcl
popf
out
mov
and
out
movb
jne
fcompl
sbb
mov
sub
inc
push
lcall
sbb
mov
jmp
add
pop
ds
loop
xor
jbe
js
mov
insl
or
fdivrl
or
inc
roll
int3
dec
mov
sti
inc
sbbb
push
outsl
mov
imul
sbb
push
sub
cmp
sarl
faddl
cwtl
sub
dec
lods
cld
inc
je
out
adc
bnd
push
pop
pushf
aas
dec
cmpsl
rcll
lcall
inc
fbld
insl
lret
sbb
pop
test
sar
mov
pop
sub
sahf
and
pop
jg
or
sbb
fs
cmp
sbb
cmp
lea
jg
scas
xor
cmc
in
movsb
or
dec
sub
out
push
sbb
xchg
jae
cs
pop
xchg
xlat
test
cmp
cmpsb
xchg
jecxz
sar
out
scas
stos
add
fwait
push
sub
ret
gs
sub
insb
fcoml
aaa
clc
pop
popf
xchg
dec
mov
mov
mov
lahf
and
push
pop
dec
mov
lret
adc
or
add
push
fsubl
roll
jecxz
dec
data16
mov
mov
outsb
orb
andl
mov
sbb
outsb
iret
mov
jg
mov
fnstsw
bound
jmp
lea
out
bound
pop
jge
push
mov
cmp
lock
jecxz
jge
addb
xchg
cmc
pop
movsb
enter
sbb
fists
or
cmp
sub
adc
out
dec
dec
pop
jb
add
mov
mov
cmc
and
adc
xor
cli
and
sbb
jl
inc
push
sbb
les
arpl
push
stc
rcr
jmp
adc
div
adc
fcompl
xchg
test
mov
add
mov
addb
sahf
pop
cmp
pushf
adc
pop
fistpl
cld
sub
cmp
mov
adc
mov
fcmovu
ficompl
inc
pop
cmc
dec
daa
pop
je
mov
mov
push
test
outsb
test
fs
jbe
or
cltd
or
outsb
ret
iret
pop
dec
pop
shrb
cs
fnsave
inc
inc
inc
imul
divb
clc
cmpsl
fisttpll
jmp
sbb
jb
testb
xchg
arpl
xchg
fwait
cwtl
xor
jb
fdivrs
push
mov
inc
popl
jnp
jg
je
push
out
mov
shlb
lods
hlt
mov
aas
inc
imul
outsl
call
sbb
mov
fcmovb
jmp
rcrb
sub
inc
cmp
lds
repz
mov
mov
aas
enter
pusha
mov
and
jg
or
mov
sbb
jmp
push
mov
xchg
mov
push
cmc
mov
mov
scas
dec
testb
call
rcrb
iret
jp
insb
push
mov
xor
fildl
fisttps
xchg
cwtl
cmp
subb
dec
mull
repz
push
xor
jmp
scas
fidivl
inc
popa
scas
jl
rclb
ret
imul
sbb
jbe
pop
cltd
xchg
jbe
stc
xor
sbb
cs
jne
cmpsb
popa
cmp
cmc
push
inc
xchg
mov
ret
fwait
cwtd
das
sbb
inc
outsl
push
cld
cmp
cmpsl
dec
out
stos
ffreep
mov
in
xchg
das
addl
mov
mov
mov
sbb
mov
cs
dec
cwtl
cltd
lret
jle
cmp
scas
movsb
out
icebp
in
daa
push
clc
push
push
sub
es
leave
adc
out
jb
pop
into
push
dec
adc
pop
cmp
repnz
insl
xor
sub
insb
in
push
mov
cmp
out
mov
sub
in
pop
out
insb
push
jge
ret
insb
mov
out
scas
pop
and
pop
cld
xor
push
cmp
movsb
nop
xlat
pop
divl
test
inc
es
inc
cmpsl
pop
daa
mov
fcompl
cwtl
cmc
cmp
cld
andb
lcall
addr16
pusha
lock
test
mov
push
xor
cmp
push
jb
out
cmp
sub
mov
cmpsb
movsb
mov
lea
clc
fldl
subb
inc
push
lahf
pop
lds
add
pop
xchg
xor
mov
addr16
dec
fsubs
xor
mov
jnp
shrb
jecxz
repnz
std
rorl
mov
xor
xor
jae
or
xchg
sbb
int3
add
pushf
mov
xor
pop
sub
sub
add
or
mov
or
and
testl
stos
movsl
add
popa
dec
inc
mov
push
xchg
stos
sti
es
mov
mov
jp
push
aad
shll
mov
out
pop
mov
loop
popa
out
or
sub
push
cmp
addb
lret
das
or
out
mov
fwait
shll
sub
icebp
in
adc
cmpl
roll
lcall
add
insl
fldenv
and
inc
mov
dec
repnz
in
addb
jb
and
pop
add
stos
pop
sqrtps
daa
pop
xchg
adc
mov
xor
pop
lret
cmc
cmp
push
or
dec
andl
mov
dec
in
and
sbb
in
and
cmp
mov
pop
rorl
rclb
arpl
dec
test
mov
fwait
in
inc
test
mov
mov
cld
pop
push
popf
icebp
or
jae
push
int
mov
lahf
in
iret
inc
lcall
xor
rcl
and
incb
imul
mov
ss
scas
or
mov
pop
sti
dec
mov
cmpsl
jp
dec
pop
push
fistps
stc
jae
loop
outsl
mov
and
ljmp
mov
call
or
outsl
insb
ds
mov
ret
idivl
call
push
jb
lods
adc
mov
roll
pop
lret
mov
jo
mov
jecxz
or
mov
pop
and
xor
push
pop
cld
push
iret
incl
loop
mov
es
or
scas
xchg
shlb
mov
dec
push
sbb
xorl
andb
sub
pop
fidivs
out
add
int
mov
xor
cli
sbb
mov
mov
insb
dec
movsb
les
cld
repz
jmp
clc
lcall
sbb
mov
mov
sub
bound
sub
or
sub
add
inc
sub
arpl
add
push
mov
push
inc
cmpsb
inc
jno
imul
dec
push
sbb
lods
cmp
mov
pop
mov
stc
out
clc
addr16
loop
fisttps
or
fcompl
rol
or
jmp
xchg
jnp
xchg
out
mov
cmpsl
pushf
or
adcb
pushf
add
aam
push
inc
jbe
out
mov
fpatan
out
mov
ds
mov
aas
push
data16
jmp
push
xor
push
push
cld
push
add
lret
sub
jbe
push
stc
xchg
inc
out
push
xchg
lcall
inc
addr16
cltd
jb
pop
add
subb
pop
je
testb
lods
and
jbe
call
cltd
lock
mov
mull
movsb
test
push
flds
movsl
sarb
arpl
mov
push
add
push
push
cmpsl
notl
call
adc
aaa
cmp
inc
xor
cld
pop
jmp
int
cwtl
test
outsl
push
or
movsl
push
cmp
xor
lods
adc
add
loopne
pop
lret
adc
js
das
mov
les
inc
push
sub
cmp
cmp
loope
lret
sub
or
arpl
push
sub
adc
adc
dec
scas
mov
inc
leave
xchg
sub
jle
ds
or
mov
ljmp
push
adc
cld
xchg
sub
and
xor
bound
mov
hlt
outsl
test
jnp
int
mov
inc
cmp
jo
int3
mov
xchg
mov
add
loop
push
stos
or
xor
sbb
jae
fs
pop
jne
pop
subb
cmp
rclb
adc
dec
popa
int3
pushw
shlb
test
mov
mov
les
adc
xor
mov
lods
and
adc
jb
cli
mov
mov
cmc
xchg
xor
fidivl
addr16
inc
out
dec
cmp
xchg
and
out
sub
je
stc
xchg
add
adc
cmpsb
push
outsl
xchg
xchg
imul
mov
add
pop
inc
adc
out
jns
out
outsl
ja
scas
xlat
cwtl
ret
jno
ds
adc
movsl
dec
jo
sbb
inc
sarl
mov
hlt
xor
xrelease
shlb
adc
jle
sub
inc
mov
icebp
imul
dec
jmp
pushf
or
ljmp
xabort
inc
aaa
jecxz
adc
pop
or
scas
jb
and
insb
pop
push
pop
repz
aaa
popa
push
or
pop
iret
jge
cli
xor
cmp
test
cs
pop
imul
les
aas
jle
test
loopne
cld
jno
lret
rcll
xchg
mov
lret
fimuls
add
dec
ds
aaa
xor
xchg
sbb
fldl
xor
push
add
popa
xchg
stc
pop
jg
cwtl
jbe
add
inc
jae
iret
loope
aam
and
mov
pop
das
push
roll
ret
iret
sbb
daa
and
dec
aad
and
add
jp
gs
mov
cmpsb
popa
dec
scas
lods
pop
mov
sub
push
cltd
repnz
icebp
imul
popl
sbbb
in
or
fstl
push
xor
mov
pop
stos
xchg
pop
or
dec
inc
dec
xor
loopne
xchg
cld
cmp
inc
pop
ret
rorb
icebp
aam
sbb
push
jns
int
ja
andl
mov
pop
aas
lds
cld
mov
bound
cmc
mov
sub
movsl
test
inc
xchg
push
xor
lret
iret
push
test
repz
cli
and
xor
pop
dec
outsb
rdtsc
inc
push
ss
filds
jg
addl
int
je
pmaddwd
aaa
test
mov
add
cs
lods
cmp
dec
aad
sbb
repz
lea
jne
xchg
inc
jle
adc
jne
xchg
es
scas
xchg
mov
jmp
ficoml
mov
pop
dec
mov
mov
lock
xor
cmpsl
inc
adc
and
sub
notb
mov
sahf
inc
mov
bound
movsl
jne
fbstp
lret
mov
dec
or
gs
int
fistpll
sbb
dec
ss
xchg
lret
jae
pop
cmp
sti
aas
int
mov
popf
int
pusha
xchg
xchg
adc
xchg
clc
js
xchg
dec
sti
xlat
sbb
lret
and
out
sarb
insl
ret
mov
ljmp
loopne
scas
ljmp
pop
sub
notl
cwtl
ljmp
cmp
jo
stos
or
shrl
imul
pop
les
ds
lret
in
pusha
lods
dec
cld
push
mov
xor
push
not
nop
aad
shl
jns
pop
ss
out
cmp
scas
sub
shll
pusha
gs
cwtl
imul
xchg
sub
sbb
les
mov
add
mov
or
bound
sbb
push
xor
adc
mov
loopne
stc
mov
and
or
xchg
mov
mov
pop
movl
shl
aad
mov
sbb
stos
mov
inc
div
popf
addr16
dec
mov
dec
leave
les
xchg
mov
lods
jne
je
push
mov
insb
mov
jbe
std
dec
sarl
mov
push
inc
andb
jb
ret
inc
mov
xor
addl
dec
test
push
pop
xchg
sbb
cmp
jno
testb
lds
sbb
jge
or
sub
inc
or
jl
fisttpl
xchg
or
getsec
pop
mov
and
xchg
cmpsb
subb
jp
rorb
inc
push
es
iret
xor
testl
mov
jno
and
fucomip
cli
push
inc
push
ret
shr
mov
out
sbb
fsts
in
and
pop
hlt
fcompl
out
push
xchg
push
mov
jb
mov
seto
arpl
es
std
sbb
xorb
rorl
xchg
lods
inc
mov
push
dec
cmp
pop
repnz
dec
movb
jno
fldl
lds
cmpsb
and
sub
addb
arpl
es
cwtl
xchg
jmp
xchg
and
hlt
cld
ja
or
cmp
sahf
adc
nop
mov
sub
call
xchg
fldenv
loop
ljmp
fidivl
cmpsl
xchg
mov
sub
dec
in
insb
lds
jg
stos
xlat
and
out
push
movsl
in
mov
jno
shlb
or
cltd
dec
sub
push
nop
mov
xchg
sbb
adc
fcompl
or
mov
pop
cmp
fcmovb
sub
mov
xchg
xchg
add
popa
mov
loopne
add
jge
and
fs
in
lods
sbb
inc
popf
sub
pop
out
push
mov
sti
cmovg
int3
and
inc
dec
insb
insb
or
int3
mov
stos
ffreep
stos
fisttpl
in
add
pop
or
push
in
fs
jb
adc
pop
mov
sbb
jbe
cmp
data16
fdivrl
jmp
shlb
inc
je
mulb
mov
push
jbe
cmp
jmp
mov
mov
lret
or
imul
mov
out
imul
sub
inc
shl
mov
push
sbb
mov
mov
imul
cmp
push
ret
int
cmpxchg
jae
int3
or
pop
sbb
lret
in
and
stos
mov
xorb
bound
mov
lahf
push
cmpsb
pop
mov
inc
pop
fwait
xchg
xor
add
movsb
mov
lret
ja
push
add
enter
in
pop
fwait
push
lcall
into
stos
sbb
or
mov
pop
push
loopne
enter
andb
and
das
pop
jl
jno
ret
cs
mov
rorl
ret
in
mov
push
pop
xchg
iret
outsb
pop
rsqrtps
into
leave
loopne
adc
xchg
test
ds
jle
ret
aam
mov
ss
cwtl
dec
fstl
and
shlb
dec
push
inc
js
lahf
xor
cltd
adc
lods
out
imul
fadd
push
sub
sbb
ret
mov
mov
aad
xchg
dec
sub
jno
adc
scas
mov
lds
out
int
leave
pop
add
ss
stc
pop
out
jno
dec
iret
pop
not
out
pop
ds
rcl
and
loopne
popl
mov
dec
dec
shlb
pusha
push
cmp
pop
lods
loope
sahf
or
pop
or
cmpsb
jp
sub
fcomps
lcall
clc
sbb
inc
adc
movsb
mov
aaa
out
push
mov
out
pop
subl
xchg
fistpll
cmpsb
xor
xchg
cwtl
int3
divb
test
cmp
sub
gs
mov
inc
ja
jge
js
xlat
or
push
fwait
fprem
xorl
cmpsl
and
sub
insb
xorb
adc
mov
add
out
xor
scas
scas
pop
clc
popf
lds
xchg
mov
pop
ja
cmp
and
fldcw
or
dec
jle
popa
mov
lret
lds
xor
mov
push
imul
add
mov
push
or
xchg
repz
jno
jg
push
xor
in
loopne
xchg
inc
inc
sub
adcl
mov
pop
adc
pop
pop
jbe
sbb
push
int3
aaa
mov
ss
in
aam
int
loop
adc
or
and
xor
xlat
push
out
hlt
int
repz
aam
fcompl
sub
cli
rcrb
add
out
in
out
and
std
subb
push
orb
xchg
xchg
imul
mov
js
and
add
loope
dec
xchg
rcll
mov
movsb
sub
pop
push
push
mov
das
inc
dec
cmp
nop
mov
andl
jecxz
fadds
adc
mov
jg
fisttpll
aam
inc
test
jg
ret
incl
aaa
lods
js
stos
pop
lock
lods
sbb
and
or
nop
mov
sbb
jne
mov
adc
jge
jns
xchg
out
push
dec
aam
addl
adc
and
idivl
outsb
je
dec
loop
add
lret
mov
clc
lret
test
in
pop
scas
cltd
push
and
xchg
dec
push
sbb
stc
faddl
fistps
ljmp
sub
mov
sbb
lret
out
sub
add
xchg
xchg
cmpl
or
xchg
pop
mov
pop
dec
lods
sbb
out
dec
scas
enter
daa
dec
incl
push
push
xchg
pop
scas
repnz
pushf
push
sbb
mov
in
push
mov
jp
add
lock
invd
pop
add
add
mov
mov
push
cmp
or
cmp
cs
mov
sar
mov
ss
pop
call
ficoms
sbb
lds
scas
lock
jns
pop
xor
mov
fisubs
stc
mov
es
lods
and
cmpl
in
mov
sub
mov
jmp
add
jae
clc
cli
jno
mov
out
or
movsl
rep
mov
inc
jnp
or
fwait
push
jl
lods
xor
push
insl
add
bound
pop
mov
addb
mov
adc
fs
in
inc
scas
lcall
test
into
pushf
jmp
repz
and
pop
mov
mov
mov
jge
lea
and
or
inc
mov
dec
dec
cmc
lods
xchg
fs
daa
push
mov
mov
icebp
or
sti
fdivrs
inc
cmp
in
jnp
and
mov
mov
lods
loope
mov
and
bound
or
movsb
int3
jne
push
or
and
out
jnp
sub
jp
cmpsb
jae
and
pusha
mov
xchg
jmp
cli
dec
adc
gs
js
jmp
sti
jle
cmpsb
adc
mov
add
inc
pop
in
or
push
aas
fadds
xchg
sub
xchg
or
fmull
sbb
imul
inc
imul
aad
xchg
xor
daa
in
cmp
add
rcrb
subb
repnz
and
pop
mov
mov
imul
push
mov
mov
shl
ret
inc
loopew
sub
or
push
or
hlt
rolb
sub
sub
sub
xchg
adc
xchg
mov
adc
xor
and
sbb
popa
cld
inc
dec
add
inc
push
les
xchg
ja
sbb
fdivrs
dec
jno
test
call
pushf
aad
xor
jo
test
push
test
pop
je
cwtl
clc
mov
scas
cmpb
push
out
pop
into
ss
dec
push
movsb
into
scas
repnz
and
or
jge
ljmp
scas
shl
pop
out
orb
xor
cmpsb
pusha
clc
mov
and
mov
std
scas
add
xchg
cli
pop
in
sbb
pop
sub
mov
cmp
hlt
push
add
mov
lds
ds
push
and
adc
mov
sbb
mov
adc
jle
rclb
mov
pop
sarb
jae
enter
gs
sub
push
iret
push
enter
daa
mov
pushf
add
lods
sbb
xchg
ret
adc
inc
push
pop
jmp
mov
test
inc
dec
sub
fsubrp
mov
fidivrl
outsb
pop
add
pop
stc
lods
jno
mov
les
or
jbe
dec
add
dec
or
mov
imul
mov
jg
test
jl
sub
sbb
sbb
and
add
xor
std
pop
jnp
inc
rclb
sahf
mov
add
jl
xchg
repz
jb
repz
and
test
fdivr
xor
xor
adc
jmp
xor
aas
pop
iret
dec
inc
imull
mov
std
add
sub
movsb
add
std
adc
sub
xor
lret
imul
pop
lea
repz
pop
jg
mov
xchg
sbb
popf
sub
sbb
pop
push
iret
mov
jl
xlat
popa
jno
imul
jmp
movsb
push
lods
xor
xor
rcl
dec
jo
cmp
pusha
push
lret
mov
push
stc
gs
sbb
out
mov
fmuls
std
sbbl
mov
addr16
into
mov
repnz
leave
shll
insl
adc
push
xchg
pusha
inc
test
outsb
jmp
mov
push
pop
es
or
sub
mov
fidivs
mov
fcoml
mov
arpl
sbb
cld
push
jae
jb
repnz
shlb
out
loopne
nop
sub
pop
push
mov
push
call
daa
mov
xlat
or
add
pusha
jmp
mov
shl
mov
stos
push
lret
sub
subl
jp
jle
stos
insl
dec
adc
movsl
test
cmp
dec
sub
lret
or
cld
xor
xchg
jmp
dec
xchg
ror
int3
jbe
std
and
cltd
pop
or
inc
and
pusha
in
push
fistpll
pop
stos
add
ds
lods
inc
pop
jo
mov
jnp
cmp
sahf
outsl
jnp
ss
mov
in
mov
mov
dec
mov
jb
push
adc
test
ja
js
inc
add
jb
leave
lds
cs
push
out
pop
scas
cmp
push
cmp
fisubrs
cmp
ret
jne
into
iret
mov
idivb
pop
push
popf
cmp
ret
push
rcrb
out
sbb
shrl
gs
jnp
push
mov
fsubrs
movsl
insb
sbb
pop
jae
cwtl
fiaddl
sbb
iret
das
aas
xor
fwait
mov
add
xchg
or
enter
aas
mov
jmp
xor
popf
scas
xchg
jmp
outsl
movl
inc
mov
sbb
inc
rclb
scas
add
pop
or
and
mov
mov
push
data16
xor
sbb
jae
adc
jle
adc
aas
cltd
ja
add
fildll
push
std
mov
push
and
jb
cmp
shlb
aaa
shl
dec
cmp
ret
inc
dec
into
fcompl
xor
and
outsb
pop
mov
ffreep
adc
stc
sub
insl
sbb
jle
rolb
ret
lea
pushf
push
cmpsb
imulb
cld
and
imul
ret
into
jo
out
and
cltd
nop
or
pop
jo
jmp
daa
outsl
inc
loop
inc
ljmp
mov
es
push
or
push
out
sub
daa
test
testb
jmp
ljmp
xchg
bound
data16
jno
xlat
call
inc
mov
or
push
das
cwtl
sti
adc
inc
xchg
repz
insl
fsts
mov
stos
hlt
jo
mov
inc
divb
pop
fs
test
lds
sub
push
sub
movsl
dec
out
rorl
in
aad
fldenv
inc
mov
xlat
ljmp
lods
call
jecxz
push
fldenv
ja
push
aam
dec
fisttpl
loope
push
hlt
xchg
mov
cs
aam
mov
fnstcw
sub
mov
inc
das
imul
ds
popf
gs
aas
scas
jl
fisttpl
mov
daa
or
rclb
aaa
loope
out
dec
sbb
cli
shl
enter
xchg
jno
cmp
adc
mov
mov
push
pop
sahf
fdiv
pop
xlat
repnz
cmpsb
pop
imul
jno
jb
fsubrl
inc
ret
push
jecxz
xlat
fcoml
or
mov
cmpsl
cmpsl
jne
dec
dec
lods
dec
and
in
test
sub
mov
mov
fwait
mov
push
lret
addl
push
add
scas
adc
ss
xor
or
mov
cltd
pop
std
or
addb
sub
jno
jmp
mov
je
add
call
xor
out
fs
jecxz
jnp
ss
lret
and
mov
insl
mov
imul
xchg
and
adc
sbb
fldpi
mov
dec
sbb
shll
mov
pop
cltd
mov
insl
push
sub
push
into
dec
cmp
and
andl
inc
fistpll
pop
sbb
sub
or
lods
add
stos
adc
leave
sbb
out
mov
leave
dec
rcr
shrb
cmp
xor
mov
pop
push
mov
and
fdivr
loope
and
out
sub
enter
das
add
inc
ljmp
dec
pop
dec
movsl
jmp
lret
mov
xor
xchg
mov
repz
stos
xor
scas
ror
rcll
leave
out
jbe
xor
inc
mov
and
imul
popf
sub
inc
jp
dec
pop
inc
sbb
mov
pop
fwait
jae
repnz
sarb
push
mov
outsb
mov
fs
cmp
xlat
sub
aaa
jp
mov
mov
cltd
mov
lret
push
lds
scas
repz
cmp
fmull
mov
sub
fdivl
cmp
shr
pop
and
in
fwait
sbb
mov
int
push
outsb
js
mov
inc
das
add
cmp
cmpsl
and
jl
and
sbb
mov
xchg
loope
sub
mov
test
add
loop
jns,pt
in
jl
in
ljmp
mov
ret
mov
lret
xor
jp
stos
aas
xlat
insl
cs
pop
sbb
stos
popf
cmpsl
mov
rep
fstpl
mov
xchg
cmp
in
sahf
fsubs
sbb
mov
mov
xchg
adc
inc
inc
jle
sub
pop
pop
pop
sarl
xor
mov
ficoms
sbb
dec
repz
xor
sbb
call
xor
pushf
stos
push
stos
cmp
mov
dec
and
arpl
mov
inc
rcr
mov
imul
cmp
mov
jmp
mov
jle
lret
sub
jge
fdivs
js
adc
mov
sub
or
xor
pop
loopne
sub
in
sbb
sub
loop
pop
fildl
les
icebp
stos
push
push
shl
lahf
add
jmp
sahf
sub
sbb
xor
popf
ljmp
fcom
nop
push
sub
lds
in
xchg
fiaddl
les
push
scas
int3
dec
sbb
clc
or
pop
cs
arpl
imul
repz
nopl
cmp
daa
shrl
push
mov
icebp
inc
xor
loop
lea
push
inc
mov
xor
das
sub
gs
lock
repnz
add
jo
mov
inc
inc
push
mov
cmp
lcall
add
test
or
add
adc
mov
loope
jecxz
adc
mov
sbb
jae
pushf
sarb
push
lret
mov
movsb
bound
push
test
movsb
mov
pop
inc
inc
push
xchg
scas
mov
test
xor
cmp
iret
jl
jecxz
and
push
sub
in
lea
add
lods
add
lods
psraw
inc
sti
jbe
repnz
lret
loopne
push
sub
sub
dec
repnz
daa
xchg
cmp
aaa
and
and
mov
cmpsb
mov
pushf
mov
mov
xorl
scas
loopne
test
loope
sub
jo
loope
xchg
add
lcall
movsl
sti
add
sbb
xchg
in
fwait
sbb
mov
andl
bound
and
mov
or
inc
in
gs
cmpsb
push
das
jmp
xchg
ja
pop
stc
mov
in
fadd
dec
bound
cmpl
sbb
xchg
dec
xor
mov
jnp
jo
std
fidivs
xchg
and
or
pop
mov
push
cs
test
out
test
ret
pop
jb
cmp
fistpll
and
xor
fiadds
jg
repnz
sti
stos
aas
mov
add
mov
loope
shlb
aaa
mov
std
pop
sbb
addr16
lcall
popf
fidivl
cmpsb
add
out
push
pop
push
xor
sub
insb
pop
mov
adc
dec
xchg
adc
pop
out
cwtl
mov
mov
mov
outsb
push
inc
cmp
sbb
movsb
fidivrs
xor
scas
in
jecxz
and
shll
lock
inc
in
xchg
pop
repnz
bound
jle
jne
das
shl
outsl
shlb
or
adc
mov
fistpll
push
fsubl
in
mov
dec
push
mov
push
xchg
test
xchg
jo
jne
bound
inc
pop
inc
xor
jnp
ret
mov
mov
cmp
mov
call
out
mov
adc
xchg
in
in
sub
jo
mov
jno
pop
mov
fcomi
pop
out
stos
dec
adc
dec
mov
jg
ss
xor
jo
pop
jp
or
int3
dec
pop
xchg
data16
sub
negl
cmp
test
dec
jae
lds
mov
inc
fdivrl
fisubrl
lods
mov
jnp
in
mov
pmaxsw
sarb
jmp
sbbl
mov
pop
scas
pop
shlb
fwait
jle
inc
movsb
popf
xor
adc
push
gs
mov
cld
in
pop
lret
add
jmp
pop
in
mov
je
push
nop
xchg
jge
cmp
scas
sbb
enter
aaa
jle
cmp
dec
cmp
push
add
roll
push
sbb
push
and
push
mov
cmpsl
mov
int3
push
ficomps
test
out
lahf
mov
mov
add
sub
loopne
lea
jle
lea
push
incb
sub
ret
or
call
push
dec
xor
sub
and
jp
lock
push
test
daa
add
stos
mov
fstpl
inc
sub
dec
rorb
pop
adcl
mov
jp
sub
clc
xchg
sub
or
test
inc
out
mov
ja
mov
or
pop
lret
jp
sahf
jo
xchg
es
xorl
push
sub
stc
movsl
into
mov
shlb
das
xor
push
inc
push
xor
in
dec
xor
add
xchg
add
out
push
mov
outsb
loopne
insl
add
sahf
lods
icebp
push
inc
in
sub
sub
lea
push
jecxz
pop
cmpsb
cmp
push
pop
or
mov
mov
or
add
dec
sti
mov
fwait
pushf
pop
addb
pop
sub
cmc
or
mov
xchg
and
fwait
mov
add
pop
pop
out
scas
fstpt
xchg
fisttpl
cmp
int3
inc
in
sub
adc
adc
sahf
daa
xlat
fmuls
enter
lods
dec
pop
push
dec
int3
les
sbb
and
push
jae
lods
push
ds
je
dec
mov
jg
sti
xlat
mov
xlat
or
ret
push
aaa
cmp
into
int
xchg
incb
cmp
jmp
push
lret
xor
sub
mov
lret
repnz
jne
push
push
or
cs
jo
ret
out
xor
push
mov
mov
pop
shl
xor
es
sahf
clc
jmp
add
cmp
sarb
ds
fbstp
mull
cmp
mov
mov
int3
in
hlt
or
jecxz
lock
adc
sub
jnp
sbb
pop
push
ficomps
cmp
mov
adc
add
cmp
xor
cli
and
nop
imul
mov
mov
jb
aaa
inc
adc
inc
pop
mov
sarl
sbb
mov
inc
mov
mov
lods
xor
std
dec
arpl
or
or
xchg
sti
dec
push
ret
adc
xorl
jg
fiaddl
fistpl
jne
outsb
xor
fstpl
add
mov
ror
mov
jecxz
ja
test
mov
mov
call
pop
mov
inc
stc
out
push
pop
mov
mov
jecxz
mov
shrb
addr16
pop
xchg
adc
adc
dec
int
iret
cmpsl
xor
in
sti
sti
imul
add
aaa
sbb
negl
outsb
push
addr16
sub
jp
or
fs
sarl
push
addr16
lds
lods
gs
daa
xlat
popa
ret
ret
popa
push
idiv
jecxz
pop
mov
dec
ss
inc
mov
in
mov
jl
mov
push
pop
movsl
fwait
sahf
sub
lret
mov
insb
add
pop
scas
test
inc
repnz
and
outsl
push
sbb
je
lods
fisubrs
push
popf
lds
pop
mov
add
jns
int3
sahf
pop
and
sbb
ss
and
movsl
xchg
stc
jle
xchg
mov
cmp
popa
xor
test
and
inc
lret
inc
mov
adcb
mov
out
and
push
repz
scas
push
add
cmc
fdivrs
mov
in
sbb
cmp
fistpll
push
or
jb
push
pushf
popf
inc
inc
push
les
scas
or
scas
mov
or
shrl
loop
and
in
xlat
push
out
ss
fisubl
push
repnz
add
scas
lods
cmpsb
mov
popa
jmp
popa
mov
mov
insb
pop
faddl
or
mov
scas
push
nop
mov
or
fistps
sbb
and
mov
and
xor
es
fwait
js
movsl
clc
xchg
cmc
es
mulb
ret
sbb
js
ljmp
aam
arpl
in
outsb
fidivs
lods
dec
jbe
rcl
call
pop
imulb
or
mov
xor
pusha
hlt
sub
pop
mov
jecxz
add
and
adc
push
lcall
ret
add
xchg
sub
movsb
movsl
data16
cmp
pop
lret
insl
add
jo
add
mov
movsl
adc
mov
xchg
mov
aas
mov
sar
pop
ja
pop
cld
in
popf
or
cwtl
mov
cwtl
popa
cmc
xrelease
xor
iret
lcall
fwait
lea
fidivs
clc
aas
push
sbb
popf
and
pop
stos
sub
and
sbb
int
dec
push
test
dec
pop
in
jbe
mov
push
xlat
dec
xor
pop
push
rcl
aaa
ljmp
movsl
xor
fwait
insl
imul
xchg
scas
push
dec
adc
call
adc
jb
pop
mov
fistpll
int3
int3
cltd
dec
int
imul
or
push
test
inc
in
notl
and
int3
push
jb
mov
js
fldcw
inc
aam
xor
xor
cmp
mov
push
clc
add
out
push
movsl
dec
cld
jno
pop
dec
mov
sub
mov
push
inc
cmp
cld
mov
in
mov
push
xor
pop
bound
mov
cmp
out
shlb
nop
jno
push
and
shll
cli
inc
incl
gs
sti
fildll
xor
sarb
cmpl
pop
out
fsubrs
or
test
mov
arpl
dec
xor
mov
mov
mov
jg
lea
inc
shl
out
repz
movsl
inc
xlat
adc
pop
or
or
mov
mov
jb
xchg
pop
dec
pop
or
push
jno
cmp
inc
mov
mov
mov
mull
jp
test
dec
jl
sbb
xor
lahf
mov
in
add
call
sbb
add
les
jbe
cmpsb
mov
cmp
insb
imul
xor
cs
lds
xor
cs
jns
iret
test
lahf
adc
loope
xchg
pop
or
out
icebp
lret
ficoml
push
push
enter
jnp
in
mov
jle
movsb
aas
aas
push
sbb
repz
and
shlb
adc
mov
mov
add
or
mov
stc
mov
fidivrs
inc
lret
das
push
or
cmp
rorl
xchg
mov
data16
xor
mov
gs
xor
sahf
clc
push
icebp
mov
out
mov
fwait
pop
repnz
inc
lods
iret
aaa
lods
enter
xlat
je
adc
dec
roll
mov
sti
push
and
test
loope
or
imull
outsb
mov
shl
stos
idiv
or
negl
jmp
out
xor
and
mov
outsb
and
test
outsl
xor
sbb
mov
or
in
pop
fld
jne
sbb
pushf
mov
xor
push
xchg
shll
fsts
xor
lret
push
stc
test
pop
ljmp
push
popa
rcll
ffreep
xlat
xor
scas
imul
fcomps
xchg
mov
repz
sub
push
push
shl
jmp
imul
jl
cli
mov
push
outsb
xchg
sbb
jno
xchg
dec
test
push
push
cmc
inc
mov
fcomp
ja
cmpsb
add
stos
mov
sbb
out
je
fidivs
xor
nop
xor
dec
inc
pop
insl
mov
test
xchg
cmc
and
xchg
adc
push
pushw
push
decl
aam
lret
cmp
insb
xor
xchg
or
lods
mov
jmp
mov
out
out
sarb
iret
das
ss
subl
mov
imul
mov
push
imul
pop
cmp
jae
or
push
xchg
and
mov
ss
hlt
int3
negb
ja
repz
scas
ss
dec
adc
or
stos
cwtl
scas
push
es
mov
fcmovnbe
xor
push
dec
inc
pop
pop
jbe
nop
pop
in
mov
adc
test
popf
daa
mov
repz
cli
push
int
push
orl
daa
xor
dec
aad
repz
sbb
jmp
sub
pop
addr16
dec
stc
aas
push
fcomi
cmp
insb
jg
sub
dec
push
dec
and
daa
insl
sahf
add
stos
add
push
cmp
rcrl
pusha
icebp
divb
aad
mov
outsb
cs
jnp
mov
dec
pushf
xor
rorb
lret
pop
leave
gs
dec
loopne
fists
xchg
add
sti
les
mov
insb
mov
in
sbb
iret
push
sbb
sub
mov
dec
cmp
jle
cs
xchg
call
xchg
adc
mov
es
adc
jmp
or
cwtl
loop
jnp
xchg
cmp
cmp
mov
add
and
or
int3
or
test
outsl
mov
xor
jecxz
pop
cmp
test
xchg
jns
jg
mov
cli
inc
lods
inc
pop
ror
jae
and
push
fsubs
mov
ss
das
pop
shrb
mov
test
cmp
repz
mov
pop
pop
dec
lods
mov
ror
push
adc
ret
shll
pop
cli
mov
mov
push
subl
jle
inc
fimull
inc
xor
xchg
pop
dec
push
cmp
out
adcb
xor
pop
add
xchg
push
mov
jbe
ret
std
fnstsw
rol
aaa
add
loopne
fistpl
pop
orb
push
out
sub
lret
arpl
orl
and
fucomi
call
pop
jnp
ljmp
mov
sub
es
inc
or
jp
ret
lahf
sub
inc
cmp
or
scas
xchg
add
mov
popa
push
pop
jg
or
jge
cmp
add
scas
test
pop
cmp
inc
iret
out
enter
es
fucomp
xor
dec
push
lods
fsubrl
lret
mov
mov
fwait
jns
add
loope
nop
jb
imul
inc
xor
hlt
mov
data16
jp
call
data16
xor
repz
inc
gs
je
dec
sbb
mov
into
int
out
xchg
xor
lret
in
pop
jmp
inc
andb
push
pop
adc
scas
outsb
prefetch
or
push
std
xchg
stos
stc
iret
loope
and
mov
push
aas
cwtl
orb
xchg
sbb
push
cwtl
add
mov
inc
cmp
insl
push
in
jmp
push
loopne
adc
scas
push
test
test
pop
and
or
addl
mov
gs
push
mov
pusha
sub
ret
xor
fcoml
xor
add
cs
xchg
push
xchg
stos
aad
xchg
mov
test
mov
dec
jge
xchg
pushf
push
mov
dec
int
dec
cmp
lret
je
in
pop
mov
cmp
sub
fistpll
repz
std
push
jo
cmp
xchg
push
adc
xor
jg
stc
mulb
aas
cmpsl
nop
and
fldl
in
imul
xchg
dec
dec
fsubs
roll
mov
pop
mov
jo
mov
fisubrs
sub
lahf
cmp
in
mov
mov
and
mov
push
inc
shlb
push
cmp
sarb
mov
push
in
int3
mov
iret
enter
clc
aam
xchg
dec
orl
bound
adc
cmpsl
movsl
test
in
pop
enter
pop
fcoml
adc
shll
xchg
lea
cld
test
push
adc
mov
cmp
mov
jg
popf
add
xor
lret
xchg
add
sub
ljmp
stc
jno
orl
movsb
add
xlat
xchg
xor
out
insb
das
dec
push
mov
ret
leave
adc
mov
or
mull
xchg
and
cmpl
cmpsl
jge
nop
mov
out
out
out
push
add
cmpsl
xchg
stc
cmp
enter
inc
insb
jle
and
mov
cmc
push
jo
jns
dec
pop
add
repz
gs
mov
shrl
ret
fisubrs
std
test
pop
xor
jle
cmp
test
pop
sub
testl
dec
fdivrl
xor
ret
aad
dec
and
fwait
mov
pusha
mov
cs
mov
into
mov
das
mov
icebp
lods
push
jp
inc
or
jo
fnstcw
stc
add
out
popf
aad
mov
hlt
in
lock
mov
jmp
xchg
mov
sbb
mov
push
movsb
push
adc
sti
dec
icebp
and
cmp
sbb
mov
fxch
jbe,pt
les
aad
xor
arpl
out
jmp
jge
dec
adc
push
dec
xor
mov
mov
push
mov
mov
mov
das
add
int
sub
jle
pop
sbb
mov
jl
sahf
test
inc
jg
cld
shll
mov
insb
pop
mov
push
das
pop
push
xor
test
jl
nop
mov
cmp
rcl
push
stos
std
pushf
nop
icebp
add
pop
jb
cmpsb
hlt
scas
ret
cmp
mov
inc
sbb
mov
int
imul
sbb
arpl
hlt
out
in
orb
mov
add
cmp
pop
sbb
xchg
and
jl
jae
bound
pushf
lcall
inc
add
pusha
dec
xor
ret
test
pop
clc
popa
fcomip
enter
inc
adc
movnti
in
icebp
fiadds
cmpsl
xchg
mov
orl
fcoml
fidivrs
jb
adc
adc
mov
fwait
push
sbb
sub
mov
sbb
movsb
scas
or
pop
repz
clc
mov
into
imul
sub
adc
sbb
inc
ret
jmp
jo
sub
ret
cmp
and
push
das
jne
clc
xchg
pop
cmp
jl
add
scas
hlt
popa
dec
jae
jb
and
out
sub
data16
lret
stos
xor
aas
mov
out
mov
shlb
push
pop
inc
xchg
jg
sahf
add
or
jge
push
movsb
jle
pop
ficoms
stc
aaa
dec
cmp
repz
imul
popf
sub
pop
push
mov
mov
notl
jp
xchg
sbb
sub
aad
repz
call
sub
sub
adc
and
dec
dec
jns
jne
mov
cmp
bound
or
lock
ja
and
xchg
clc
mulb
sbb
dec
out
daa
test
inc
mov
jnp
mov
cmp
adc
inc
je
scas
add
mov
int
lret
jle
aas
testb
and
xchg
or
xlat
iret
test
pop
ljmp
addr16
push
cmp
in
sahf
ret
psadbw
out
xor
sub
add
adc
jge
jnp
test
ret
rcrb
fsubrl
outsl
imulb
js
sbb
jne
aad
cmpsb
mov
mov
in
jl
icebp
or
movsb
mov
pop
fstpt
pop
movsl
sub
daa
pop
or
or
sub
dec
push
or
jae
adc
cmp
cmp
sbb
lcall
ds
mov
sbb
ljmp
fwait
inc
cld
cmp
jne
movsb
jbe
push
movntq
insb
faddl
out
gs
out
adcb
sbb
cmp
inc
stc
mov
bound
or
push
pusha
jnp
sub
dec
cmp
dec
jmp
xchg
and
mov
mov
loop
pop
imul
pop
mov
dec
lret
in
cmp
enter
xchg
sub
push
shrb
insl
push
pop
jb
add
pop
push
je
xchg
pop
fisubl
in
xor
aas
popa
jmp
lods
mov
mov
jp
in
aam
dec
sbb
and
ljmp
cmp
jecxz
pop
js
xor
call
popl
jecxz
lahf
mov
test
fiadds
cmp
stc
in
arpl
jnp
faddl
mov
cmc
mov
push
dec
or
push
dec
out
cld
push
mov
xor
test
scas
movsl
dec
ret
outsb
ficoms
testl
pop
jmp
push
jb
jnp
int
mov
test
xchg
adc
rclb
add
popf
arpl
jnp
fisubrs
mov
je
stc
and
xchg
pop
pusha
xor
sbbb
int
aaa
iret
std
stos
fs
pop
ljmp
shrl
or
push
sbb
ss
adc
mov
sti
mov
jo
shlb
dec
lods
fsubl
lods
cmp
out
sub
mov
cs
pop
sbb
out
push
enter
ja
pop
or
dec
scas
pushf
int3
cmpl
sub
into
cmp
es
mov
or
or
cmp
push
xlat
mov
xchg
js
sbb
add
jae
mov
dec
jae
cmp
sub
stos
sub
inc
fsubs
xchg
inc
xchg
data16
pop
outsl
sub
inc
push
jecxz
sahf
adc
cmpsb
mov
cmp
sbb
cs
imul
xor
add
cmpsb
imul
mov
jb
inc
insl
scas
lock
sbb
imul
mov
fsubl
int3
jae
inc
hlt
pop
fistpl
xor
lods
and
sbb
mov
shrl
fnsave
sub
mov
mov
cmp
push
xlat
sbb
xchg
out
jno
dec
mov
pop
jb
aad
insl
sbb
in
jmp
xchg
das
es
xchg
pushf
dec
int3
sbb
mov
or
scas
rcrl
aaa
mov
mov
mov
sub
pushf
jle
dec
adc
lods
jge
cwtl
aad
jmp
fdivl
sub
lds
sbb
mov
pop
aam
xor
lea
data16
jmp
dec
popa
cli
pop
mov
mov
sarb
pop
mov
xor
rorb
daa
mov
mov
inc
jno
scas
push
jne
std
scas
subl
ret
lret
out
testl
add
or
subb
xchg
lret
push
popf
rorl
pop
outsb
cmp
xchg
ds
cltd
push
vandnps
jb
in
pusha
clc
rclb
repnz
push
xor
inc
xor
bound
sbb
pop
xchg
mov
in
cli
scas
pop
jne
lcall
sub
jmp
sbb
pop
inc
jno
inc
jmp
lods
lods
or
mov
ja
and
ret
cmc
xor
stc
aaa
js
cmp
sbb
mov
in
mov
jbe
subl
outsl
setae
or
xchg
fcomi
jg
and
pop
push
je
or
xchg
pop
sbb
jl
loopne
scas
repnz
cmpsb
pop
fwait
pop
inc
test
pop
into
icebp
jp
test
nop
xor
rcrl
orl
and
adc
pop
popf
fildl
xchg
cmp
mov
inc
jmp
dec
xchg
adc
dec
out
sbb
popf
sub
shlb
aaa
mov
xor
les
pushf
mov
fadds
fisubs
je
fidivl
jl
sbb
xchg
and
dec
rcll
push
lret
rdmsr
adc
cmp
add
push
push
jmp
not
pusha
and
push
sub
or
in
mov
ss
xchg
and
movsl
inc
pop
adc
sub
sbbl
mov
mov
loop
jae
pusha
mov
xchg
cmc
repnz
cwtl
pushf
inc
lahf
cmp
cltd
pop
mov
pop
add
pop
mov
std
jl
out
in
push
jecxz
or
add
add
rcr
popf
int
mov
push
cmp
inc
cli
out
cs
mov
mov
push
or
xchg
jnp
bound
je,pt
xor
and
adc
inc
or
fwait
cwtl
scas
nop
pop
fsubrs
mov
and
in
add
aaa
decb
sub
push
das
push
addr16
jae
mov
xchg
xor
sub
xchg
adc
xlat
es
adc
inc
addr16
aas
jns
nop
jmp
jg
fcomps
pop
ljmp
movsl
and
mov
in
add
leave
xchg
xor
mov
aas
dec
clc
push
cmpsb
jbe
arpl
icebp
mov
testl
daa
mov
pop
xchg
inc
stos
daa
in
xchg
stos
cmp
cmc
pop
inc
rcrb
jmp
loope
or
in
xor
rorb
xor
dec
arpl
lret
push
add
cmc
cwtl
jp
test
lods
stc
loopne
add
lcall
movsl
mov
jl
scas
nop
dec
cli
faddl
jno
add
negb
cwtl
in
popf
sub
and
stc
mov
and
jb
cs
cmp
data16
mov
jp
stc
jo
mov
negl
fistpl
xor
fsubr
stos
loope
addr16
lahf
mov
cld
jno
jg
ds
xor
loopne
lcall
cmp
insb
sar
orb
test
stos
fistpll
es
jb
xchg
sub
inc
mov
cld
nop
arpl
rcl
outsb
add
mov
in
rorl
pop
stos
int
test
ret
jmp
push
cmp
inc
ljmp
clc
xchg
js
pop
mov
out
pop
filds
jno
das
bnd
lahf
jns
push
pop
stc
push
mov
inc
test
decb
ljmp
call
inc
fstpl
mov
jmp
dec
mov
xchg
add
movsb
popa
aas
sti
out
and
std
jle
sbb
adc
sub
mov
mov
mov
xor
dec
push
fistps
add
ret
arpl
add
cli
jle
inc
cmp
outsb
jnp
js
jp
mov
push
decb
add
jne
icebp
fisubrs
jecxz
jmp
andb
mov
jle
in
adc
jl
dec
lods
dec
imul
arpl
dec
fsubr
popa
inc
and
inc
jle
sbb
mov
mov
mov
fnstsw
movsl
jns
sub
sub
inc
nop
adc
ja
jl
push
insl
sbb
shlb
sarb
test
mov
push
and
push
lahf
shl
mov
xor
dec
or
bound
ffree
push
int3
push
or
mov
and
cltd
out
fstl
outsb
mov
pop
xchg
xor
cli
mov
fdiv
pushf
pop
aas
xchg
mov
into
or
rorb
popf
dec
adc
addr16
imul
inc
push
scas
push
xchg
push
or
xchg
popf
icebp
mov
add
sbb
mov
xchg
aas
xor
repz
aad
cmp
shrb
lcall
jne
adc
and
jle
aaa
mov
xchg
push
not
dec
or
jns
adc
mov
inc
pop
jp
jle
mov
pushf
lcall
repnz
add
lahf
dec
jecxz
add
sarl
xchg
or
loop
jle
jb
addr16
or
jmp
jnp
bound
mov
icebp
and
aas
nop
mov
out
cmp
incl
sti
inc
cmp
outsb
pop
sub
movsb
fdivrs
sbbb
push
xchg
or
cmp
negl
dec
adc
sbb
push
in
pop
sub
int
rolb
popa
mov
mov
xlat
push
insl
loop
nop
push
mov
lea
cmpb
negl
pmulhuw
inc
adc
lahf
xor
inc
sti
adc
dec
mov
cltd
mov
into
add
inc
push
mov
push
jge
stos
mov
test
ss
mov
scas
pop
clc
add
mov
pop
test
sti
aad
inc
shll
inc
aam
or
sbb
xor
mov
incb
sbb
jmp
dec
subb
sub
xchg
xchg
mov
mov
add
lock
lea
dec
icebp
xchg
xchg
out
pusha
xor
sub
arpl
jb
in
aad
movsb
pop
stc
imul
add
ficoms
mulb
ret
cmp
hlt
dec
in
push
xchg
mov
push
das
hlt
test
cld
sbb
rclb
inc
or
iret
je
sbb
xor
push
sti
aas
adc
sub
pop
pop
imul
cmpsl
mov
orl
inc
nop
xor
jecxz
test
mov
xchg
jge
push
dec
cld
imul
inc
mov
mov
aad
xchg
mov
cmp
dec
popf
sub
mov
imul
stos
jge
pop
mov
es
and
dec
inc
imul
ffree
test
push
xlat
add
fwait
cmc
loopne
mov
mov
in
aaa
fidivrs
sbb
xchg
lea
cli
fsubp
sbb
lahf
iret
jae
sbb
ret
xor
movsb
inc
test
lock
mov
ficoml
loope
lock
cli
enter
test
movaps
inc
push
imul
xchg
xchg
nop
or
sbb
and
cli
xor
inc
jae
lds
jmp
push
out
xchg
cs
push
dec
inc
inc
sub
fiadds
pop
insb
cmp
push
mov
call
push
xchg
outsb
pop
loop
leave
mov
fs
imul
mov
fstps
mov
add
mov
shl
stos
es
push
das
ret
hlt
test
inc
and
loop
push
cmpsl
mov
mov
subl
add
faddl
mov
sbb
inc
stos
outsl
jmp
add
inc
in
ret
cmovs
into
cli
jg
lea
mov
stc
cld
test
ret
adc
lahf
xor
mov
jecxz
xchg
mov
cld
mov
and
xchg
dec
call
notb
insb
mov
in
mull
jle
stos
movsb
rcll
pop
inc
push
enter
push
xchg
mov
sti
mov
insl
jne
fcomi
fsub
ret
xchg
stos
push
lods
rcll
mov
cltd
cmpl
stos
movl
popf
inc
push
popf
xor
push
pop
in
sahf
jle
repnz
arpl
jge
pop
dec
stos
fnstsw
dec
mov
ret
jle
mov
pop
out
aam
sub
int
and
cmp
movsb
lea
sbb
and
je
mov
xor
push
movsb
mov
das
fldl
fs
mov
add
xchg
movsb
push
mov
mov
mov
out
jmp
xor
xor
dec
loope
sub
cmp
cmpb
mov
xchg
jno
cmp
adc
cmp
or
lea
push
sti
data16
cmp
inc
nop
outsl
sub
aam
enter
nop
and
enter
ss
call
cmpsb
loopne
bound
adc
insb
dec
push
inc
loope
cmp
imul
sbb
stc
jle
movsb
inc
pushf
or
pushf
mov
jmp
push
aam
notl
test
test
repnz
cmp
jne
xchg
mov
push
repz
jmp
inc
repnz
shrb
rcrb
mov
jno
fnstcw
jmp
xor
jno
pop
sbb
or
ret
dec
test
jns
jge
jnp
pushf
sub
ja
subl
lret
push
fs
add
jl
lahf
movsl
add
pop
pop
mov
inc
and
inc
cmp
ss
lods
mov
lret
xchg
pushf
jle
sbb
cmp
mov
sub
lock
lcall
adc
stos
std
xor
pop
pusha
dec
xor
jae
cli
sub
mov
adc
mov
push
add
lods
shl
imul
xor
iret
testb
dec
in
mov
ljmpw
jns
push
arpl
call
sub
xchg
xchg
lret
sub
push
je
out
rcrb
mov
cli
lds
outsb
je
das
pop
push
push
dec
mov
lret
ret
push
out
pop
xor
inc
jmp
jnp
lret
xchg
mov
dec
fidivrs
push
push
in
mov
test
jne
les
mov
gs
fs
pop
dec
jp
pop
int3
push
mov
out
mov
lea
jae
insl
xor
aam
push
jno
mov
lds
mov
add
test
test
push
pushf
mov
inc
adc
sbb
jmp
data16
cmp
subl
inc
pop
fbstp
pop
outsl
popa
fisttpll
and
js
lret
mov
mov
into
mov
xchg
mov
cltd
jecxz
stos
test
gs
xchg
sbb
sbb
xchg
pop
adc
fsts
daa
mov
push
xlat
sbb
lret
fildl
hlt
mov
lea
addr16
lahf
xchg
or
jae
call
mov
inc
mov
cmpsb
inc
inc
jno
sbb
push
jb
inc
push
mov
shlb
and
fldt
xchg
test
test
std
cmc
pop
ret
push
or
cli
pop
mov
add
xchg
adc
inc
scas
jb
mov
sbb
insb
hlt
mov
int3
or
xchg
aas
jb
lds
outsb
aam
lea
testl
fucomip
mov
and
ds
in
out
mov
in
imul
test
das
sbb
adc
shrl
jbe
jecxz
xor
insl
cmc
jnp
or
push
stos
adc
imul
mov
xchg
xor
pop
push
push
jo
jns
push
pop
add
add
mov
dec
cmp
lcall
cld
mov
outsb
cs
push
or
add
sbb
push
shrb
cmp
in
out
ret
jmp
rcll
push
andl
push
or
lcall
movsl
mov
mov
and
push
fldl
test
add
icebp
or
sbb
clc
push
xchg
jg
popa
mov
enter
cmpsb
je
aas
or
inc
fldenv
sub
push
pop
mov
das
sbb
iret
mov
pop
pop
adc
rolb
xor
mov
jb
xchg
bound
jmp
stos
sahf
push
aas
sub
test
pop
aaa
test
lea
xlat
jb
add
sub
jge
cld
inc
popa
dec
sbb
adc
inc
xchg
testl
mov
cmp
movsb
jne
sbb
addr16
movsb
sahf
movsb
in
dec
mov
fs
cmp
sti
push
js
pushf
lock
sbb
and
fs
jno
arpl
mov
lods
cs
and
dec
jne
ljmp
xchg
push
movsl
adcb
rolb
call
pop
insb
inc
mulb
int
sbb
cmp
xchg
int3
int3
xchg
cmp
dec
ret
pop
popa
ss
in
hlt
jne
stos
daa
xchg
insl
sbb
push
mov
ficomps
jnp
enter
pop
je
call
scas
sahf
sub
mov
rcrl
sub
cmp
and
jp
gs
testl
cmp
dec
loope
enter
mov
pop
mov
dec
in
inc
int
test
jl
mov
inc
mov
cs
scas
adc
xor
jl
in
rcr
jecxz
lods
sahf
mov
mov
imul
out
mov
push
inc
mov
xor
fbld
and
xor
xchg
xchg
repnz
push
insl
lea
and
push
or
lods
mov
push
mov
imul
pusha
sbb
sbb
mov
cmp
fwait
jbe
roll
cmc
out
clc
popf
pop
mov
subl
jle
pop
adc
lods
mov
lea
aad
ret
insb
dec
push
sarb
lock
out
inc
xlat
and
cmp
imul
nop
pop
lds
popw
insb
mov
outsb
pop
adc
outsb
iret
sbb
sub
pop
and
lock
fstpt
out
cltd
mov
pop
xlat
xchg
mov
cwtl
lods
adc
push
sub
mov
int
ja
jg
enter
fbstp
push
xlat
sbb
or
shll
data16
stos
adc
push
lret
dec
rolb
jmp
push
imul
or
cs
push
xchg
push
mov
movsl
pop
mov
or
dec
pop
dec
xor
mov
or
mov
scas
aam
push
and
dec
fcmovu
sub
jb
push
jl
xorl
int
shll
xor
or
std
or
iret
push
inc
jae
nop
dec
mov
mov
and
mov
daa
xor
out
enter
sti
mov
cmpsl
push
addps
test
lret
mov
test
and
inc
mov
scas
push
push
out
cmp
mov
loope
pop
stos
add
rcll
jae
mov
es
jae
clc
xlat
lcall
adc
imulb
ret
mov
ret
push
mov
mov
lods
mov
jp
cld
mov
enter
call
out
incb
xor
inc
cmp
sbbl
mov
fnstcw
adc
jle
cli
xorl
inc
rol
mov
icebp
pop
and
and
popf
cmpsb
xor
add
pop
push
sub
pop
and
sahf
xchg
adc
jmp
jge
ljmp
daa
inc
addb
cwtl
ljmp
jne
xchg
or
push
push
mov
mov
and
or
sbb
jp
or
xchg
sub
es
add
sahf
hlt
mov
pushf
mov
cwtl
cmp
pop
fidivrl
data16
add
mov
mov
sub
xor
xchg
add
stc
sub
ds
add
icebp
aas
add
adc
rclb
mov
sub
das
xor
fstl
int3
hlt
pop
sbb
jecxz
jp
push
dec
jle
sub
jg
inc
rcrb
xor
cs
dec
inc
push
mov
sub
mov
lea
pop
lods
sub
in
mov
jae
rcrb
sarb
sbb
imul
jg
sub
test
testb
repz
inc
sub
fistl
cmp
inc
lcall
ja
push
lds
mov
lds
hlt
nop
mov
or
js
jns
jo
push
push
mov
mov
cmp
sbb
inc
ret
add
test
cmp
ja
push
pusha
and
jecxz
pop
ja
push
gs
lret
fcomps
push
inc
push
stos
lret
pusha
into
jno
cmpsb
jl
or
or
push
bound
ja
pop
cmpsl
mov
aam
shlb
inc
mov
add
adc
sub
mov
orb
mov
mov
mov
out
pop
add
dec
aam
lcall
or
mov
inc
repnz
add
sbbb
test
sub
inc
popa
das
inc
and
imul
ja
clc
pop
push
cmc
adc
fdivp
int3
pusha
jmp
pop
push
xor
stos
dec
sbb
push
pop
add
xor
popf
add
push
sub
test
lods
mov
mov
pop
loope
in
out
lods
xor
mov
aaa
je
mov
sbb
jae
or
mov
jnp
or
in
fwait
insb
jbe
mov
lret
lds
xor
xchg
or
ret
fidivs
outsb
jle
jle
lahf
cmp
cmp
cmp
ret
jno
cmpsl
pop
ds
xchg
mov
dec
dec
mov
pop
xchg
dec
mov
outsl
call
fldenv
cmp
movsl
cmpsb
xlat
mov
mov
adc
xlat
push
push
ja
popf
and
lahf
jle
inc
sub
lods
in
xchg
mov
ljmp
lret
mov
test
mov
add
sub
push
or
pop
cmp
pop
call
ljmp
mov
dec
cmp
pop
jae
push
fwait
jnp
out
fists
xlat
push
movsb
sub
cmp
movsl
xchg
jae
cmp
or
jo
subb
pop
rcrl
xlat
rorl
pop
xchg
ljmp
sbb
aad
daa
mov
jnp
jns
xchg
cmpsl
test
out
xchg
mov
call
test
pop
add
push
mov
pop
jg
jle
sarb
xlat
sub
aam
inc
mov
addl
add
loopne,pt
repz
stos
fdivrs
inc
adc
xor
fwait
push
imul
mov
outsb
ret
outsb
fwait
xor
cmp
push
nop
sbb
das
test
loopne
mov
movd
test
or
cmpsl
mov
mov
leave
daa
scas
call
fs
xchg
mov
popf
jmp
mov
sub
mov
popf
xlat
mov
push
push
jb
jbe
lret
in
jb
sbb
sub
mov
cmc
out
add
push
push
in
fsubs
fmull
or
mov
outsl
nop
aaa
imul
ds
mov
gs
dec
mov
fwait
hlt
mov
test
je
fdivrs
mov
push
and
aad
data16
mov
cmp
pop
xchg
shrl
sub
inc
dec
xchg
in
test
pop
mov
ss
fwait
sarb
idivl
push
out
test
or
pop
daa
mov
dec
cmp
or
sub
imul
aam
cmp
rcll
and
aam
int
jecxz
inc
mov
and
shrb
mov
shrl
push
cs
or
aad
mov
sbb
mov
shll
loopne
imul
mov
cmp
cmpsb
hlt
mov
out
pop
jmp
aam
test
or
movsl
sub
mov
rorb
test
movsl
add
and
popa
mov
add
sbb
jns
sub
cmc
mov
sub
das
cmp
adc
sub
and
arpl
into
cs
sbb
add
cmpl
mov
add
dec
cmp
push
mov
mov
das
cli
mov
sti
cwtl
push
pshufw
aam
loopne
je
cmpsb
clc
jns
cmp
adc
shll
sbb
mov
adc
xor
sub
aas
fbld
sub
inc
lods
dec
jl
inc
aaa
fadds
aas
mov
in
rcrl
dec
enter
or
push
pop
sub
pop
push
lcall
stc
ss
add
flds
push
mov
dec
enter
lods
dec
jnp
dec
inc
pop
inc
mov
inc
int
cmp
push
mov
adc
adc
fsubs
adc
jnp
mov
pop
std
clc
js
nop
add
stos
jecxz
mov
sbb
or
aaa
mov
xlat
pop
jno
mov
js
and
les
inc
jge
mov
cmp
xor
dec
xchg
sbb
inc
or
in
mov
xor
fsubp
test
lods
test
repnz
mov
sbb
sub
stc
cmp
push
jl
out
movsb
add
sbb
popf
mov
cmp
pop
push
xchg
ret
push
in
das
and
rcrb
jbe
jl
je
js
xor
and
lahf
cmp
push
rcrb
mov
mov
inc
add
sbb
test
mov
stc
and
inc
ss
orl
xchg
cmp
gs
cmp
iret
loop
mov
sub
mov
or
pop
mov
mov
xchg
sbb
add
ljmp
sub
insl
pop
iret
pop
sbb
les
mov
ret
pop
adc
in
pop
mov
jp
fistps
add
xor
push
jne
fdivp
cmc
repz
and
in
sub
dec
xchg
imul
enter
pop
test
mov
in
insb
pop
insb
dec
push
mov
fsubrs
aad
scas
or
test
movsl
jecxz
sub
push
int
adc
fwait
or
jecxz
xchg
imul
fwait
sbb
insb
sbb
call
cmp
and
and
shrb
sahf
cmp
lahf
dec
jmp
xchg
clc
adc
sbb
popf
xor
sti
dec
loop
pop
mov
add
mov
jbe
mov
idivl
mov
sahf
pop
in
inc
ss
inc
bswap
pop
pop
dec
xor
or
inc
andl
adc
jbe
sub
mov
jae
stos
sub
push
mov
cli
push
dec
sub
sbb
push
stos
int
pop
pop
mov
ret
inc
sub
pop
aaa
ficomps
addr16
andb
pop
mov
cmc
and
pop
leavew
mov
insl
cmp
in
inc
mov
scas
fstpl
clc
gs
js
and
bound
popf
call
cmpl
pusha
lea
aam
jae
frstor
hlt
xchg
ja
testl
mov
xor
enter
push
test
pop
inc
stc
or
int3
jl
loop
inc
and
or
sbb
pand
lahf
mov
xor
call
insl
icebp
push
adc
pop
push
nop
dec
in
pop
jle
pop
mov
mov
negb
pusha
movsb
mov
jns
subb
outsb
dec
test
mov
sbb
xchg
inc
push
scas
jae
call
stc
pop
addr16
out
mov
into
ja
les
push
jg
fsubrs
add
mov
popw
adcb
sti
push
mov
mov
mov
mov
shl
test
out
pop
cmp
push
scas
mov
imul
shlb
lock
rorb
mov
mov
scas
hlt
aaa
mov
adc
jno
xor
and
pop
imul
stos
jb
insl
pop
popf
out
mov
mov
dec
cmpsb
mov
jb
xor
sub
pop
cmp
jle
and
ret
adc
mov
xor
in
or
ds
stc
fnsave
sbb
xor
xor
pop
jle
ret
fwait
and
loopne
adc
adc
pop
mov
clc
lods
push
daa
bound
sbb
dec
cmpsl
add
outsl
push
jbe
sbb
out
adc
cs
adc
fsts
ss
icebp
in
into
imul
lock
pop
lods
pop
ret
sub
dec
loope
push
icebp
push
and
sahf
shll
fs
and
mov
mov
push
xchg
jmp
test
inc
dec
repz
xchg
mov
cmp
xor
shlb
dec
inc
dec
pop
push
jo
add
aam
inc
subl
fwait
xor
sub
testb
inc
or
dec
lahf
push
or
cmc
dec
in
mov
pop
int
push
ficomps
or
sbb
cli
divl
cmp
lods
cmc
dec
shll
movmskps
daa
sub
inc
in
fimuls
mov
mov
xlat
cmp
mov
pop
mov
movsb
out
xor
mov
or
shl
mov
aaa
rcl
dec
arpl
outsl
iret
out
inc
ret
xchg
mov
out
add
or
xor
adc
out
in
ret
inc
ja
or
xor
adc
inc
push
cmpl
jbe
pop
jbe
lock
sub
mov
inc
cmp
push
scas
push
loopne
mov
fs
loopne
jae
cmp
push
jecxz
pop
clc
jno
dec
test
sub
nop
jecxz
jno
hlt
inc
push
jmp
das
mov
sarb
stos
push
leave
test
insb
jp
sub
dec
fsubrs
daa
cmp
outsb
mov
dec
mov
mov
cmp
mov
repnz
inc
mov
mov
or
xchg
mov
fldcw
repz
leave
in
sbb
sub
int3
nop
mov
mov
xor
stc
sbb
cmp
dec
jbe
sub
mov
mov
push
sbb
adc
mov
lret
cmc
mov
pop
inc
sub
pop
lea
sub
out
rorb
pop
sti
je
mov
mov
fld
shrb
lret
mov
enter
je
int
push
imul
xchg
insl
cmp
sub
insb
pusha
mov
jmp
dec
xor
movsl
push
aam
xor
jmp
outsl
mov
jp
cmp
test
mov
popf
inc
rcrl
dec
push
inc
push
aaa
add
insl
push
pop
dec
or
xchg
sub
xor
clc
fwait
xor
cmp
sub
adcb
dec
xor
xor
jo
and
or
lods
imul
xchg
dec
and
sub
inc
dec
data16
dec
push
shrb
or
mov
mov
imul
mov
loop
popa
mov
jo
jo
xchg
lods
jne
sbb
mov
add
adc
add
movl
or
insl
outsb
fwait
mov
jl
std
repz
push
sbb
fwait
sbb
mov
jp
pop
fcoml
inc
mov
mov
jmp
jb
mov
out
inc
sbb
cltd
push
imul
mov
sub
mov
cmc
pop
nop
testl
dec
push
shlb
mov
pop
fs
repnz
mov
push
inc
mov
mov
xchg
pop
shlb
add
insl
addr16
hlt
lods
jo
cmp
out
into
xchg
pusha
enter
stos
pop
call
jns
stos
icebp
shrl
cmp
jbe
jae
cli
cld
out
push
imull
iret
sub
fnstsw
dec
call
xchg
popf
xchg
mov
inc
imul
loop
inc
aas
sub
into
mov
mov
mov
int
jmp
xor
sbb
dec
lret
xor
sub
andl
int
loopne
test
mov
xor
xor
pop
repnz
jg
lea
shlb
into
cmp
xchg
call
rorb
mov
sub
push
stos
std
ret
mov
xor
test
scas
mov
nop
dec
sarl
out
add
mov
gs
sub
pop
sahf
dec
mov
jmp
jmp
jp
in
lock
cmp
arpl
mov
arpl
jl
pop
fisttpll
rcll
cmpl
mov
dec
sub
xor
dec
cltd
cs
in
sbb
mov
popf
sbb
lock
jle
sbb
sbb
insl
mov
or
jge
fcomps
xchg
inc
icebp
jg
sub
xor
and
jl
mov
mov
lret
cmp
mov
cwtl
jl
jle
popf
mov
inc
push
mov
pop
cs
dec
xchg
and
shlb
fs
aaa
aam
cmp
call
lret
mov
mov
jl
xor
dec
jp
mov
push
andb
enter
int
outsb
ljmp
cmp
push
outsb
adc
mov
das
add
lods
ljmp
cmpb
shr
test
lret
sub
sbb
push
fs
scas
divb
stos
ret
inc
inc
add
inc
sar
xor
or
mov
mov
out
and
std
in
push
les
push
lret
movsl
clc
xchg
jnp
lret
in
jp
test
out
leave
loopne
cli
aam
jge
divb
scas
lods
movsl
imul
sbbb
push
ljmp
jno
das
movsb
daa
and
fadd
shll
inc
push
and
dec
je
pop
test
xor
in
in
movsb
push
cmp
int
pop
leave
dec
iret
pop
out
jle
clc
lahf
pop
adc
mov
pushl
mov
jp
loop
add
jle
lods
push
out
sub
aam
push
mov
push
and
push
mov
lds
cltd
mov
testb
pushf
dec
or
lret
ljmp
fstpt
scas
xchg
sub
xlat
in
mov
push
in
packsswb
mov
ret
pop
xchg
or
rcrl
or
xor
mov
pop
pop
cld
add
dec
push
jmp
sbbb
pop
push
pushf
and
mov
mov
sti
lods
xorl
mov
in
nop
adc
stc
mov
fmull
ja
repnz
push
jns
xorl
je
push
jb
mov
push
cld
popf
bound
jecxz
xchg
adc
cmc
xchg
cmp
adc
add
aad
stc
iret
inc
pop
mov
sahf
pop
or
shl
popa
or
mov
jno
xchg
or
jnp
push
mov
mov
fildl
cmc
jbe
mov
sbb
bnd
inc
mov
jno
leave
fmuls
lock
imul
hlt
cmp
repnz
call
or
test
pop
enter
jne
aas
das
dec
mov
das
add
inc
iret
ret
xchg
aaa
roll
jg
lret
mov
adc
outsb
lods
jle
inc
xchg
adc
mov
push
inc
lea
shll
or
mov
jl
mov
jae
ret
fbstp
mov
cmpsl
cmp
adc
inc
push
ja
pop
lods
adc
xor
cmp
push
push
add
mov
imul
int3
stos
shll
and
or
xchg
dec
lods
aaa
sub
or
orl
je
int
loopne
pop
add
insl
pop
lahf
int
sub
mov
mov
leave
lock
cmp
sub
test
lcall
gs
popa
out
xchg
movsl
inc
push
xor
mov
hlt
mov
test
mov
jecxz
adc
fisttps
or
inc
test
or
daa
mov
sbb
das
mov
aad
sbb
data16
xor
insl
dec
stc
mov
and
push
shl
dec
push
imulb
mov
test
add
push
dec
mov
mov
mov
ljmp
inc
add
adc
orb
dec
jl
pop
lahf
xchg
rclb
mov
mov
inc
sti
mov
mov
imul
add
mov
data16
mov
add
add
pop
mov
loopne
hlt
mov
dec
sbb
mov
xchg
inc
inc
inc
dec
popa
addl
inc
test
fs
hlt
int
lods
xor
inc
or
pop
push
mov
lock
cs
adc
pushf
adc
pusha
push
imul
inc
gs
adc
data16
idivb
fidivs
mov
scas
xchg
and
sbb
pop
fcmovne
lahf
and
push
lock
das
xor
test
ja
inc
cld
ljmp
adc
adcb
stos
repnz
mov
fsubl
jg
xchg
dec
call
test
mov
icebp
pop
xor
test
scas
cmc
insl
push
shl
mov
popf
sahf
sar
ret
rcr
popa
mov
rcl
mov
mov
pop
test
nop
sub
mov
vpaddq
mov
outsb
mov
push
cwtl
mov
mov
xor
ss
cvtps2pd
adc
jbe
inc
popa
push
loope
xor
dec
call
sbb
or
fsubrs
xor
jecxz
or
mov
mov
divl
mov
add
idivl
or
mov
mulb
jecxz
jl
push
mov
sbb
push
push
lock
xor
cld
dec
push
jmp
ret
imul
fistps
out
inc
add
jbe
cmp
imul
dec
lcall
pop
cmpsl
cltd
mov
pusha
js
orb
and
mov
pushf
icebp
lahf
repnz
sbb
pop
movsb
lods
xchg
and
fistl
ja
orb
xor
xchg
rcll
pop
aam
lret
xchg
xor
mov
cwtl
pop
jmp
xlat
loop
pushf
cmovs
aaa
add
inc
jb
lea
das
inc
jo
jg
lock
and
daa
lcall
push
inc
clc
dec
mov
movsb
push
in
jae
pushf
mov
imul
jae
xchg
push
cmpsl
enter
adc
xchg
mov
test
test
les
inc
aad
rclb
pop
mov
scas
fwait
mull
cmp
addr16
mov
mov
mov
inc
jne
and
pop
sbb
fdivr
pop
leave
push
test
mov
shr
rolb
enter
dec
pop
shrl
pop
jnp
add
fcomps
insb
lods
push
add
jo
xlat
aaa
mov
insb
out
and
jl
ret
les
cmc
mulb
movsb
xchg
fildl
or
sti
jne
mov
out
mov
mov
pop
ret
sbbb
mov
mov
jle
mov
sbb
mov
addr16
mov
jmp
sbb
fiadds
adc
mov
dec
and
loopne
cmpl
dec
loopne
xchg
js
rcrb
ret
adc
sub
dec
lods
xor
arpl
push
rorb
pop
rcrl
and
int
mov
or
je
or
dec
push
test
xor
pop
pusha
inc
cmp
pop
inc
ret
push
aad
dec
mov
bound
jg
test
push
pushl
xor
pop
and
ret
xchg
out
inc
dec
int
nop
pop
stos
lods
and
adc
loopne
outsw
cwtl
sahf
sti
xchg
negb
sub
fs
mov
ss
pop
and
mov
ficomps
fdivr
pop
cmp
pop
dec
add
xor
xchg
out
push
xchg
cwtl
fimull
push
rcr
lods
jmp
ja
pop
jg
and
cmpsb
jp
push
bound
and
push
cli
stos
sub
decb
push
or
rcr
sbb
int3
sub
mov
and
ret
test
rcrl
pop
inc
xlat
cwtl
inc
push
movb
lods
pop
testb
iret
or
xchg
out
mov
push
cli
es
push
daa
push
mov
shll
and
xor
icebp
jecxz
mov
imul
je
seto
mov
lret
jg
sbb
sub
ret
aam
fldcw
adc
popa
scas
scas
cmpsl
or
mov
sub
pop
cli
cmp
les
out
mov
andb
fidivs
jge
mov
stos
sub
jb
leave
cmpsb
dec
shlb
adc
shll
mov
jle
pop
js
mov
xlat
pop
fistps
gs
call
in
push
inc
std
nop
leave
add
insl
cmp
adc
pop
mov
cmp
mov
sub
fisubrs
mov
inc
lret
jno
imul
int
inc
cmp
dec
adcb
mov
icebp
into
xchg
lcall
roll
loop
push
sbb
inc
notl
mov
lea
dec
out
mov
mov
hlt
hlt
mov
mov
out
inc
aad
icebp
out
sbb
insl
in
and
jl
loop
hlt
sub
and
fdivp
cmpsb
xlat
cmp
cmp
jb
stos
pop
jp
xchg
push
dec
push
cmp
lods
mov
popf
xor
sti
and
sti
jbe
adc
mov
cwtl
pop
lods
pop
arpl
mov
jp
adc
in
cmp
leave
cmp
xchg
add
mull
mov
fsubs
push
pushf
jecxz
sbb
inc
mov
push
sub
xor
pop
cmc
cmp
imul
add
cmpsb
inc
and
sbb
popf
pop
mov
adc
add
cmpsb
xchg
std
mov
pop
in
sbb
cwtl
push
ja
pusha
jno
rolb
mov
sub
and
mov
pop
loope
cmp
mov
sub
push
cs
pop
adc
cmc
xor
add
cmp
daa
enter
je
and
js
add
adc
inc
outsl
aam
popf
lea
and
addr16
aad
mov
movups
jl
lods
and
call
mov
fnstcw
shll
inc
rclb
add
bound
dec
mov
ss
dec
sbb
icebp
and
push
ljmp
fistl
inc
sub
mov
es
loop
mov
test
out
pop
leave
sarl
mov
push
pop
ficompl
mov
xchg
xor
push
or
jge
and
mov
ffreep
sbb
jae
dec
rcrl
outsb
xchg
icebp
cs
stos
bnd
xor
pop
fwait
hlt
or
fucomp
mov
mov
not
inc
jl
ja
stos
std
cli
inc
std
test
adc
xor
insb
adc
lret
jae
mov
jl
mov
or
sbb
pop
std
andl
std
stos
enter
ffreep
movsl
sbb
sti
movsl
flds
mov
aaa
sub
adc
ficoms
das
jge
out
jne
fs
push
ret
and
insb
enter
shrb
test
xor
mov
inc
add
lods
sti
iret
sub
inc
add
pushf
into
or
iret
rcrb
test
or
mov
loopne
pop
mov
cmc
jae
repz
push
jne
loope
fmuls
test
mov
sub
add
xor
lods
xchg
popf
in
popa
push
fdivs
cmpsb
je
cmpsl
jl
pop
dec
inc
in
loope
xchg
add
pop
sub
inc
jmp
inc
cmp
cli
sub
adc
push
fidivrs
dec
addr16
push
dec
dec
bound
or
gs
cmp
mov
test
gs
dec
and
push
xor
mov
lds
cmpsb
and
add
sahf
xchg
dec
call
clc
xchg
add
cmpb
push
dec
sahf
or
daa
xchg
out
ss
pop
or
enter
mov
test
or
stc
rorl
pop
xlat
push
jecxz
jp
push
imul
xchg
mov
call
add
shl
popl
mov
mov
add
adc
inc
add
icebp
dec
lret
cmp
fisttpll
pop
aam
push
pop
fcompl
pop
jne
out
mov
or
lock
mov
push
add
iret
and
xlat
rcl
xor
add
es
mul
pop
sbb
daa
out
xchg
lret
lret
add
imul
or
push
push
mov
in
cmc
stos
push
adc
cld
ficomps
shlb
aad
pop
js
jle
inc
and
aam
mov
lods
shrb
jecxz
adc
addr16
hlt
rcrb
jl
adcb
jmp
bound
cmp
jno
rol
in
mov
inc
mov
cmpsb
leave
aad
scas
and
jg
aam
shll
test
dec
xor
aad
mov
xchg
xor
lock
loope
push
jp
movsb
dec
arpl
push
icebp
or
jecxz
xor
std
les
jae
ss
jge
ljmp
xchg
sbb
add
adc
xlat
adc
mov
cmp
adc
xor
cwtl
mov
rorl
and
outsl
mov
sbb
and
sar
andl
sbb
test
xor
or
xchg
pusha
jle
jp
shrl
ja
movsl
add
ret
js
fdivp
mov
mov
movb
adc
js
das
add
cmp
fcomi
adc
int3
fmul
jmp
leave
insl
jmp
outsl
inc
inc
xchg
mov
push
aas
aaa
or
pop
adc
shll
pop
cmp
lods
cmpl
jg
dec
js
gs
push
xchg
div
dec
fwait
add
add
or
sbb
lods
push
push
jae
pop
pop
push
sahf
or
pop
jge
xor
les
xlat
out
adc
es
adc
sbb
rcrl
repz
imul
xor
fistpl
and
jne
flds
jmp
and
fnsave
cmpsb
xor
popa
lods
aaa
notl
pushfw
pop
in
push
out
daa
cs
mov
aaa
push
rorl
addb
rcrl
repz
jg
jge
mov
ret
loope
roll
inc
out
mov
fwait
cmp
cmp
gs
in
test
mov
rolb
leave
inc
sahf
out
pusha
das
cmpsb
stc
std
dec
inc
jmp
sub
or
in
js
inc
sti
clc
xor
pop
idivb
sahf
testl
hlt
sbb
stos
mov
jge
lods
push
jne
mov
lods
cwtl
pop
ja
imul
movl
out
fiadds
jns
push
cmp
sub
pop
mov
faddp
pop
popf
repz
add
int3
adc
mov
fwait
pop
das
and
in
fidivs
mov
cmovge
insl
cmp
aad
popf
aam
pop
jge
jp
test
int
jno
cmp
sbb
dec
in
jg
lea
lret
movsl
cwtl
int3
call
imul
jbe
adc
dec
das
push
add
mov
stc
mov
ljmp
fisubrl
loope
inc
rcll
dec
ja
cwtl
mov
out
rorb
shll
dec
sbb
mov
sbb
mov
mov
push
cmp
and
int
push
cmp
sbb
pop
ja
les
lret
jae
add
sbb
pushf
pop
movsb
jns
cmp
xchg
sub
sarl
mov
rcr
sbb
inc
js
jae
imul
mov
mov
push
and
ja
insb
inc
cmc
scas
dec
fdivl
inc
add
arpl
cli
aas
aad
fisubs
inc
adc
jp
es
push
in
js
xor
fiadds
mov
nop
divb
addr16
dec
out
mov
movl
pavgw
cmpsl
into
cld
jno
dec
jp
sub
push
inc
cld
or
jae
sub
out
mov
and
rorl
or
mov
push
dec
mov
inc
in
std
lret
sub
jp
push
xchg
pop
push
adc
push
lcall
outsb
pop
xlat
xorb
gs
sbb
mov
jl
lahf
mov
mov
out
push
mov
bound
push
adc
jge
jns
xchg
sub
dec
lcall
cli
test
inc
mov
mov
mov
mov
mov
js
xlat
paddd
les
sub
bound
push
test
dec
lods
lds
xor
test
call
hlt
cwtl
sbb
adc
push
mov
mov
pop
in
mov
cwtl
or
jmp
pop
inc
popfw
cmc
jno
add
int
stc
and
sub
sub
xlat
dec
inc
cmp
addb
push
sbb
xchg
out
into
push
movsl
sbb
xchg
pop
sub
ljmp
jb
dec
imul
test
pop
addr16
dec
enter
adc
pop
movsl
aad
cli
jl
lea
test
test
fcomps
pop
imul
ret
or
stos
sbb
or
add
xchg
cmpsb
insl
or
lea
rorb
outsl
jae
rolb
xlat
mov
mov
out
outsb
xchg
dec
mov
out
ror
movsb
push
fwait
jmp
mov
mov
addr16
mov
push
cmpsl
jo
push
es
mov
rorl
lock
lret
icebp
push
or
xor
push
add
out
add
insl
cmc
mov
cmp
dec
leave
push
add
inc
jnp
cmp
fmuls
std
pop
jnp
cwtl
xchg
mov
jo
pop
inc
stos
push
sub
dec
or
cmc
inc
push
ds
mov
xor
in
adc
loope
js
jne
and
movsb
push
pop
lock
mov
sub
test
xchg
shl
shll
loop
push
pop
mov
push
aaa
aaa
adc
les
js
loopne
mov
addr16
test
inc
push
vpsubusb
xchg
xlat
mov
in
icebp
popa
pop
mov
mov
inc
fnstcw
xor
mov
cmp
mov
lods
adc
adc
pushf
movsb
loope
sar
push
insb
inc
xchg
idivl
js
mov
sub
xor
mov
inc
pushf
adc
and
ret
lret
and
cmp
dec
cmp
push
pop
inc
lods
mov
adc
inc
clc
inc
iret
pushf
lods
adc
push
push
mov
ret
sub
ret
or
shll
push
jmp
lods
sbb
or
add
lds
sbb
js
call
jp
adc
mov
loope
dec
scas
out
jp
rol
loop
add
and
sbb
adc
jbe
xchg
mov
mov
dec
loope
mov
popa
sub
mov
xor
cmp
xchg
add
fidivl
mov
mov
xor
arpl
cmp
out
ret
cli
clc
cmp
testl
jmp
mov
pop
xor
xor
pop
insb
xchg
push
or
mov
insb
enter
mov
incb
cmp
adc
out
cmp
adc
lock
lret
testb
dec
and
sub
jle
shrb
add
push
lods
mov
push
cltd
mov
out
mov
sub
popa
imul
cmp
xor
notb
add
insb
push
push
dec
inc
and
jne
xor
mov
mov
movsl
test
lods
call
or
popa
mov
xchg
and
or
or
fs
xchg
lcall
xor
std
loope
cmp
imul
js
sbb
mov
ss
mov
pushf
dec
cmp
lret
mov
insb
and
ljmp
in
pop
sub
fstpt
dec
jo
das
xchg
xchg
scas
pop
frstor
push
xchg
bound
lret
lahf
addr16
xchg
adc
pop
jge
jecxz
aam
xor
xor
fisubrs
je
jmp
pop
dec
ja
jnp
xchg
or
stos
daa
into
cli
cli
nop
decl
enter
mov
aas
or
dec
out
cli
arpl
mov
iret
sub
out
outsl
xchg
sub
test
aam
lds
xchg
mov
or
push
popf
sub
sti
jbe
jnp
fmul
clc
notb
jl
loope
jecxz
add
mov
sbb
dec
cwtl
scas
push
inc
xor
pop
jmp
aam
inc
faddl
cmp
fld
jns
mov
sbb
and
push
cmp
xchg
push
jo
ret
leave
stc
daa
inc
lcall
jbe
pushl
sbb
nop
icebp
int3
mov
in
mov
mov
fld
mov
or
scas
stos
dec
aaa
xor
pop
cmp
das
add
iret
mov
sub
xor
sbb
mov
lea
out
and
mov
mov
add
out
push
mov
jp
inc
inc
mov
pop
mov
addr16
movsl
sahf
shlb
fsubr
push
jg
push
push
jmp
decl
ljmp
fisubrs
cltd
mov
adc
iret
inc
pop
jno
pop
xchg
or
pop
sub
jecxz
shrb
or
out
test
jb
sbb
aam
push
xor
out
out
cmp
xor
or
idivl
test
and
fdivl
mov
repnz
clc
test
cmp
into
mov
mov
in
mov
shlb
lret
mov
sbb
mov
mov
jl
xlat
fs
push
int
dec
fisttpll
and
shrb
xor
and
pop
adc
push
add
fcomps
fisubs
nopl
test
aam
and
lds
lret
adc
cs
xor
rcll
outsl
ret
scas
mov
shlb
aad
cs
mov
lock
xchg
pop
cwtl
repnz
lret
int3
jae
pop
sub
scas
adc
xor
dec
add
push
les
cmp
lods
scas
xchg
bound
adc
push
xchg
xchg
xchg
xchg
xlat
ja
inc
adcb
add
xor
sarb
or
inc
std
mov
add
leave
mov
pop
or
push
push
mov
add
in
push
pop
pop
sbb
mov
and
or
out
mov
mov
cmc
and
jno
fldt
sub
and
ja
leave
inc
push
in
push
pop
jl
bound
push
js
mov
test
inc
pop
or
cmp
loop
js
mov
sahf
sbb
insb
and
mov
xor
mov
mov
mov
inc
insl
ja
push
pop
push
push
loopne
mov
sub
pushf
lea
in
mov
mov
pop
andb
inc
cmc
lret
and
ret
cmpsl
aaa
mov
int3
push
add
in
xchg
mov
jb
ja
loopne
or
into
out
dec
ss
dec
xchg
mov
xacquire
rcr
jbe
ds
cwtl
push
mov
test
outsb
jne
loopne
test
imulb
and
inc
ljmp
fcmovb
jmp
fimuls
std
ficoms
jbe
les
loope
sbb
stc
and
mov
push
or
dec
ja
add
dec
cmpsl
out
leave
dec
cltd
test
dec
push
cltd
push
jp
and
cmp
shlb
or
jp
ror
movsb
sbb
notl
or
pop
xchg
call
add
inc
push
jmp
dec
dec
ds
in
test
pop
icebp
xchg
sbb
jmp
in
cld
jmp
push
pop
or
xor
out
add
dec
repz
sti
sbb
mov
push
add
xor
or
push
rcrb
inc
pop
fnstsw
xor
aas
rcll
fdivrl
cmpsb
sub
dec
cltd
sub
adc
xchg
dec
adc
outsl
mov
xor
leave
cmpl
xchg
ss
pop
int3
inc
or
aad
mov
dec
popf
add
and
or
pop
xor
mov
repnz
and
les
jle
jb
cmp
push
mov
aam
add
in
dec
inc
mov
nop
retw
fldl
rolb
add
dec
jno
sarb
bound
and
mov
data16
adc
dec
inc
orl
cmp
xor
fisubs
sbb
add
rol
pslld
aaa
or
mov
xchg
push
lea
pop
xor
and
inc
add
dec
adc
jecxz
rorb
push
loopne
add
loop
xchg
setne
ret
sub
pusha
mov
pop
out
int
lcall
stos
cmp
adc
test
out
subb
pop
inc
aaa
jo
sarb
insb
cmp
jb
pop
jno
maskmovq
idivl
cmp
adc
add
icebp
xchg
mov
push
push
inc
mov
jl
rorb
cltd
dec
loope
repnz
pop
add
mov
mov
cmp
pop
mov
cmp
cmp
cmp
sbb
clc
lret
jmp
pop
repnz
push
into
or
push
ja
into
les
rorl
loopne
fs
push
sub
in
adc
adc
xor
scas
dec
add
pop
cmpsb
cmc
pop
cmp
cmp
sub
outsl
out
inc
cli
push
divl
lock
fiaddl
ret
in
ss
inc
xchg
dec
jnp
or
enter
fisubs
dec
sahf
out
xchg
sbb
std
stc
ret
cmpsl
test
and
cmpsl
or
lret
js
sbb
mov
mov
xchg
and
imul
jae
mov
xchg
xchg
int
sbb
leave
fcoml
jecxz
vorps
imul
loop
inc
push
mov
mov
adc
out
pop
enter
outsl
fcoms
fisubs
pop
shlb
mov
test
lcall
sub
xor
out
xor
pop
jp
aas
cltd
aas
cmp
out
orl
dec
movsl
loope
in
mull
rcrb
pop
mov
mov
pusha
rcrb
pop
add
mov
fdivs
add
dec
mov
nop
xchg
inc
sti
jecxz
xchg
ss
cmc
inc
je
loopne
hlt
bound
movsb
mov
sbb
sub
xor
adc
cld
ror
rol
cmpsl
mov
test
mov
sub
lods
push
addl
sub
daa
fprem1
or
mov
filds
icebp
lds
into
mov
divl
popa
fimull
fnstsw
bnd
cmp
test
jo
sub
loop
loopne
in
mov
jne
rorb
xor
dec
push
and
mov
in
rcr
or
das
mov
daa
fwait
rol
out
xlat
cmpsb
les
cmp
cli
mov
std
loope
inc
fldenv
mov
lahf
addr16
fildl
or
xor
adc
jle
int
sbb
andb
in
jge
daa
xor
xchg
je
adc
call
or
mov
mov
or
test
and
and
arpl
pop
ss
xchg
pop
xchg
jne
adc
pusha
and
or
jmp
jb
sub
cmpsb
sbbl
iret
pop
call
mov
popl
sub
movsb
cmpsb
push
je
add
inc
das
pop
fsubrl
sbb
lahf
scas
je
sub
jmp
mov
repz
pop
out
xchg
add
fsubrs
sub
add
sub
and
stc
in
int3
mov
shlb
dec
sahf
aas
add
mov
lahf
mov
roll
outsb
icebp
fwait
or
mov
jmp
and
insl
mov
fwait
adc
jnp
sub
sub
mov
inc
sub
ret
icebp
lret
mov
fs
and
mov
les
mov
icebp
jne
push
dec
adc
mov
lret
inc
push
gs
cld
fcom
cmp
dec
push
pusha
hlt
std
insl
aas
addb
cmpsl
or
cmpsb
xchg
fucom
in
sub
push
dec
inc
sbb
out
dec
int3
pop
xor
pop
lret
std
dec
mov
adc
and
pop
pusha
clc
repnz
push
pushf
dec
and
mov
inc
push
into
xlat
lret
out
rolb
sub
push
dec
xor
ja
sub
and
mov
mov
push
inc
stos
and
dec
popa
add
frstor
aaa
test
add
pop
stc
mov
mov
cmp
aaa
dec
in
sub
xchg
fnstcw
jp
rclb
lods
mov
adcb
icebp
xchg
push
fisubl
cmp
or
add
pusha
cmp
pop
ja
testl
cmp
sbb
push
or
or
cmp
add
call
shrb
sqrtps
outsl
jle
mov
aaa
push
idivb
sahf
hlt
sub
lock
jbe
jns
test
arpl
jle
enter
dec
dec
fisubs
pushf
out
push
push
xor
mov
mov
pop
jns
test
mov
out
and
std
xchg
pop
movsb
andl
in
in
sbb
sbb
xor
stos
es
insl
inc
push
sub
gs
mov
int
and
outsb
shll
repnz
bound
shr
sar
addr16
and
icebp
les
mov
loop
ret
out
jb
mov
mov
push
es
test
pop
mov
adc
xor
mov
lahf
mov
add
cmp
adc
sub
xor
mov
or
fnstsw
push
dec
xchg
icebp
lcall
push
xor
mov
push
ljmp
out
pop
and
les
adc
or
mov
or
jb
xchg
pop
xor
cmp
xchg
xchg
sbb
movsb
add
adc
mov
jbe
jne
mov
push
es
jl
bound
ja
pop
sarb
lds
bound
rclb
pop
mov
dec
pop
pop
neg
push
lods
adc
jmp
pop
sbbl
data16
xchg
jnp
fwait
ret
adcl
mov
scas
ficomps
cmp
mov
imul
jp
popa
out
sbb
pop
iret
iret
jmp
push
iret
js
imul
out
and
rorb
addr16
in
dec
adc
pop
or
xor
xor
sbbb
ja
mov
stos
daa
cmpsb
sbb
test
cli
stc
sti
add
fidivl
inc
jp
add
fdivrs
or
and
cmp
lock
mov
jp
pop
cmp
and
mov
rcr
ss
and
mov
cmp
fwait
push
cld
sub
push
mov
mov
push
dec
and
sbb
in
lahf
xacquire
sbb
mov
fists
movsb
ss
mov
xor
mov
out
add
sub
inc
dec
lea
outsl
xchg
xchg
inc
scas
outsb
aam
mov
inc
add
sti
je
sahf
fsts
mov
or
mov
nop
mov
rcll
or
push
and
xor
sub
mov
jo,pn
jne
scas
inc
test
aam
cmp
inc
jmp
std
mov
sub
jno
add
call
clc
inc
or
jecxz
scas
aas
push
push
dec
adc
inc
pop
jnp
lods
pop
div
cmpsl
outsl
xchg
add
in
jl
fsubl
dec
shlb
jnp
lds
adc
push
inc
sar
shrl
enter
inc
or
xchg
xorl
sub
bound
lods
je
nop
mov
lret
push
leave
mov
cmp
ss
dec
push
jecxz
add
jle
jmp
cltd
xchg
mov
or
mov
mov
sahf
aas
enter
ficompl
inc
mov
or
sbb
bound
cmp
sub
ret
into
cmp
jmp
adc
adc
insl
lahf
and
cmp
divb
push
jl
into
mov
or
or
nop
cmp
les
jo
andl
xor
dec
popa
scas
cmp
jno
add
leave
insl
std
mov
inc
xchg
shrb
fldcw
imul
push
aad
pop
andb
out
pop
inc
scas
push
and
mov
cmpsl
fsubs
pop
daa
shll
in
out
fbld
out
clc
cli
lret
scas
lcall
in
adc
andl
sahf
push
fldl
stos
inc
stos
lock
xchg
pop
adc
mov
mov
inc
stos
inc
add
fidivrl
xor
add
add
or
popa
fisubl
loopne
add
lret
shll
jp
scas
jp
mov
add
divl
cltd
cltd
sbb
jp
jl
add
xchg
xor
or
sub
movsl
fcmovbe
push
xchg
push
pusha
pop
mov
repnz
cmp
mov
xchg
js
loop
pop
out
aas
push
cmp
clc
pop
test
test
mov
push
xchg
bound
xlat
sub
push
outsb
je
pop
call
xchg
xchg
mov
enter
xor
cmpsl
lods
imul
mov
add
lret
push
pop
inc
jb
push
mov
jecxz
outsl
out
pop
push
mov
addl
fcmovne
stos
js
mov
repz
shl
sub
mov
je
enter
xor
fisubs
and
rcrl
adc
repz
push
lods
fldcw
testb
xchg
dec
pop
fs
inc
push
lret
insb
dec
push
jae
dec
aas
push
mov
test
ss
imul
ret
mov
testb
pop
xor
jecxz
pop
clc
movsb
jecxz
cmp
sub
push
test
mov
fsubrl
jo
inc
pop
fdivl
mov
sub
aam
jle
sub
jg
enter
xor
inc
jp
stos
sub
push
adc
mov
in
push
lea
cmpsl
or
fisubrl
mov
insl
rclb
sbb
mov
fsubrl
out
sub
das
xor
ret
pop
sbb
sbb
outsb
imul
pop
sub
ds
hlt
push
test
in
ja
mov
das
cmp
jg
je
cmpsb
xlat
ja
shrb
cmc
jno
sahf
cmp
mov
pop
int3
mov
pop
into
pop
shll
jne
dec
cmp
xchg
xlat
pop
call
in
out
fsubrl
jae
aam
mov
fbstp
data16
xchg
js
ficomps
xor
bound
jo
repz
mov
cmc
inc
clc
out
lahf
add
sub
ss
jle
iret
mov
stos
adc
add
das
das
dec
mov
fildll
push
or
adc
xor
pop
xor
adc
test
test
jnp
lahf
pop
xchg
int
sbb
mov
mov
pusha
pusha
fstpl
or
in
dec
and
ret
in
mov
shll
pop
out
test
enter
inc
stos
stc
pushf
push
push
cli
test
push
test
fisubs
jmp
jp
sub
testl
or
add
outsl
bound
lea
add
dec
sbb
mov
add
mov
sbb
xchg
fdivr
or
loop
sub
int
cmp
jno
jnp
rcr
xchg
add
dec
push
loope
test
cs
add
clc
sbb
sahf
sbb
hlt
pop
icebp
push
repnz
add
lcall
or
in
jnp
inc
lahf
jno
inc
xor
sar
es
add
adc
ljmp
dec
push
mov
adc
push
sub
icebp
popa
or
adc
inc
mov
xor
shrb
mov
xor
mov
pusha
sub
jno
jg
push
cmp
mull
lea
notl
notl
jmp
mov
xchg
lock
notl
mov
pop
inc
scas
mov
cmp
in
pop
or
cmp
or
adc
and
mov
and
mov
stc
fdivrs
int3
aaa
or
pop
and
insl
rorl
adc
stos
sbb
idivb
ss
lea
jae
nop
into
mov
inc
jmp
pop
aam
insl
pusha
jge
data16
add
cmpsb
cmp
xchg
scas
sbb
dec
test
dec
call
xchg
inc
cld
into
adc
mov
or
lea
out
push
cmc
mov
cs
shrl
and
int3
or
std
pop
iret
imul
xchg
fs
cmp
jmp
pop
outsb
xchg
jle
es
inc
jo
pop
add
dec
xor
flds
push
xchg
lock
outsl
int3
mov
jg
fmull
add
add
shrl
gs
subb
mov
push
cmp
cwtl
mov
call
jbe
push
mov
repz
test
inc
test
and
sbb
sbb
xchg
xchg
mov
nop
push
test
inc
mov
sbb
xor
scas
pop
xor
mov
test
inc
xchg
lods
push
mov
leave
jge
xchg
inc
push
cmpsl
inc
xor
push
sbb
mov
fsubs
jo
cld
cwtl
adc
movsb
add
popf
es
xor
inc
and
adc
fucomip
or
mov
mov
pop
cmpb
lock
xchg
and
repnz
pop
popf
movb
loop
scas
test
orb
adc
les
cmp
pushf
push
jo
pop
rorb
or
fsts
or
sub
pop
int3
arpl
cmc
imul
out
mov
stos
xchg
inc
adc
or
lea
call
mov
sub
loop
rcll
cmp
fcmovb
adc
sub
lret
cmpb
or
pop
jb
call
fmull
pop
cvtdq2ps
cmpsb
mov
jg
test
mov
sbb
sub
inc
maxps
cltd
xor
jb
out
nop
cmp
data16
inc
repz
jmp
push
sbb
jno
jae
jno
adc
mov
cmp
fldl
jmp
test
jnp
and
idivb
ja
sub
mov
call
out
scas
sbb
cli
dec
ds
adc
or
sahf
inc
out
fwait
in
mov
pop
pushf
and
pop
xchg
test
aam
stc
loop
andb
mov
add
push
sbb
jae
fildll
pop
das
adc
aaa
cmp
test
ret
jae
orl
mov
je
push
ja
dec
js
or
in
or
jbe
outsl
inc
inc
popf
xchg
inc
mov
test
fs
sub
xchg
lods
pop
xchg
inc
sarb
pop
dec
fisubrs
mov
mov
into
xor
loop
mov
adc
arpl
ja
loopne
and
out
jno
adc
test
sarl
push
int
mov
sub
dec
mov
inc
in
jl
or
in
cmp
leave
int3
mov
push
out
or
inc
adc
push
loope
jmp
add
stos
or
into
pop
pushf
and
push
aaa
insb
andb
or
sbb
xor
rorb
push
push
push
lret
xchg
adc
je
rol
cmp
pushf
pop
mov
fwait
mov
jmp
lcall
sub
and
stos
in
push
int3
in
mov
in
iret
test
data16
mov
adc
lds
mov
lret
pusha
pop
fmul
repnz
bound
push
scas
xor
dec
xchg
imul
pmaxub
in
sbb
orl
jl
and
lods
xor
xor
rcrb
or
cmc
xor
inc
pusha
adc
jp
cli
movl
mov
stos
imul
xchg
lods
push
sub
ss
dec
adc
ret
sub
jae
aaa
vmread
mov
cmc
arpl
xchg
fists
mull
sub
roll
pop
aam
cmpsb
lds
cs
mov
rorb
xchg
sub
mov
jg
inc
js
jp
cmp
repnz
and
mov
push
testb
outsb
add
loope
andl
xchg
jns
mov
adc
mov
inc
lcall
rolb
xchg
dec
dec
jno
ret
jmp
jmp
jbe
lods
jno
sbb
lcall
and
cs
fidivrs
push
mov
insl
test
push
fstps
daa
push
jo
sub
adc
js
test
push
add
lea
in
fmull
inc
or
mov
push
icebp
push
or
jnp
cmp
inc
sbb
in
add
sbb
pop
and
movb
scas
mov
add
pop
out
insb
popf
mov
out
push
fimuls
mov
insl
add
adc
mov
and
inc
testb
lcall
mov
and
scas
test
fs
sbb
mov
mov
fnsave
xchg
addr16
jl
repnz
pop
xlat
and
sti
push
add
std
xchg
scas
dec
xchg
dec
imul
stos
jbe
mov
mov
push
pusha
cwtl
iret
fpatan
scas
or
mov
andl
das
jnp
lret
add
fisubrs
das
push
sbb
subl
and
dec
lret
mov
cmpsb
or
lds
dec
or
arpl
push
sbb
adc
sarl
jecxz
cmp
test
das
inc
and
clc
arpl
idivl
dec
stc
mov
mov
int
daa
push
fistpll
mov
or
xor
sub
test
adc
inc
xchg
sub
sarl
out
movsb
mov
inc
pusha
jns
into
les
std
push
push
out
xchg
and
fstl
icebp
mov
mov
push
mov
test
std
fwait
pop
movb
jnp
xor
push
lret
dec
push
sbb
mov
mov
dec
inc
repz
mov
xchg
push
fwait
lret
xor
arpl
repnz
movsl
xor
push
push
jmp
mov
cmp
pop
js
push
rcrl
ret
cmpsb
jno
lods
pop
pop
add
cmp
add
adc
push
int3
adc
in
mov
xor
inc
sub
mov
xchg
dec
xchg
mov
and
or
pop
adc
push
pop
leave
xchg
sbb
xor
lds
inc
es
lods
ljmp
ret
call
pop
dec
in
adcl
and
mov
dec
rcll
pusha
xchg
cld
inc
test
sub
pop
xor
push
xchg
fdivs
jle,pn
test
sbb
out
jp
repnz
dec
mov
jmp
outsl
xchg
adc
out
xchg
sub
mov
repz
fcomps
add
xor
iret
leave
adc
jl
pop
movsl
or
fcoml
pop
xchg
jp
dec
inc
int3
inc
jno
cmp
test
mov
popf
or
xor
into
jns
movb
push
mov
scas
pushf
insb
mov
dec
pop
mov
out
dec
xlat
in
lock
cmp
ret
xchg
adc
xchg
inc
cmp
stos
filds
leave
mov
cmp
das
mov
pop
subl
adc
xor
and
mov
aaa
lcall
mov
mov
and
cmp
les
mov
xor
fs
bound
pop
inc
das
movsb
in
movsl
paddsw
adc
outsb
movsl
cmp
pop
and
jns
adc
adcb
cmp
or
cmc
xorl
lods
and
jns
xchg
fildll
aaa
dec
cwtl
mov
cmp
loop
jle
pusha
cmp
das
sub
sbb
sbb
mov
and
sbb
pushf
clc
loop
and
adc
sti
sub
sti
mov
out
xor
aam
add
outsl
aaa
js
iret
mov
and
mov
push
cmp
pop
sbb
push
cli
sbb
inc
mov
cmp
outsl
lods
xchg
lods
into
fcompp
imul
sbb
xchg
mov
sub
jmp
lds
adc
xchg
cmpsb
call
int3
prefetch
out
jnp
iret
je
lcall
add
in
bound
jge
iret
add
jnp
cmp
xchg
fs
std
cmpsl
mov
enter
cmp
xor
in
cmp
sub
rolb
xchg
lds
adc
or
dec
cs
pop
mov
mov
and
adc
sbb
cmp
subps
mov
rorl
test
test
aaa
jmp
fsubs
out
divb
jnp
xchg
adc
rorb
dec
ftst
aam
push
push
shlb
ja
inc
and
fimull
xor
xchg
out
mov
lds
aam
fisttps
jb
in
stos
dec
xchg
mov
mov
stos
sbb
leave
orb
and
outsb
out
je
inc
ja
cmc
ret
lahf
push
pop
ja
dec
and
adc
sbb
dec
or
or
xchg
pushf
mov
pop
cwtl
inc
or
sti
shlb
aad
xchg
push
add
aad
mov
out
push
pcmpgtd
jle
pop
push
sbb
cmp
rcr
xor
adc
dec
pop
cmp
hlt
sub
pop
out
cmp
add
push
push
push
sbbb
jb
addl
nop
es
popa
out
out
sbb
imul
imulb
popa
aam
adc
jb
leave
cmp
adc
std
push
call
lahf
cmp
imul
or
rolb
dec
jecxz
mov
sbb
push
cmp
loope
pusha
enter
ja
insb
fidivrs
js
dec
pushf
push
xchg
fimuls
inc
lock
ret
frstor
ja
mov
stc
in
scas
cwtl
push
scas
fnstenv
out
jbe
cmpsb
neg
jg
xchg
cmpsb
jmp
mov
xor
or
mov
shll
xorl
mov
add
mov
dec
jno
fidivs
jns
cld
adc
jge
mov
push
cld
or
faddp
aas
shrb
xchg
das
dec
sbbl
sahf
out
sub
jmp
push
loopne
mov
rclb
pop
fsubs
imul
push
out
stos
or
sti
inc
setne
imul
test
jae
mov
push
push
inc
jno
add
cmc
mov
mov
mov
jnp
mov
dec
cltd
or
lret
pop
sbb
sbb
and
pcmpeqd
adc
pop
sti
jns
test
mov
dec
mov
pop
xchg
dec
sub
cmp
sub
popa
xor
int
leave
pop
xchg
dec
sub
lahf
int3
adc
imul
into
out
jp
jge
mov
adcl
and
lret
sub
and
fwait
lcall
xchg
fwait
xchg
xor
movsl
inc
mov
int
jno
sbb
ja
shll
mov
nop
adc
shlb
inc
pusha
test
insl
das
pop
lds
mov
mov
stos
into
fisubrs
mov
mulb
out
in
pop
stos
aad
cmp
dec
mov
xchg
int
jnp
int
cmp
xor
sti
jp
dec
loop
jno
mov
inc
outsl
add
mov
cltd
and
mov
mov
mov
mov
pop
jmp
jns
add
fsubr
sti
sbb
movsb
xor
icebp
faddl
xchg
sub
imul
sbb
push
sbb
lret
jno
dec
dec
fcompl
insl
cmc
dec
iret
sub
imull
jmp
jl
mov
cmp
pop
out
pop
add
gs
push
sub
test
xor
cmpsl
arpl
adc
mov
sbb
aam
aad
or
and
xor
ds
xlat
push
ds
pusha
add
mov
add
aad
outsb
fstps
repnz
cmpsl
jno
or
jo
arpl
out
cmc
or
shrl
cmp
in
out
or
outsl
cmpsb
je
leave
sub
add
sbbl
fcoms
mov
adc
inc
mov
int
cmp
cmpl
daa
movb
inc
fldl
inc
mov
pop
cmpl
jp
repz
sbb
repz
in
pushf
pop
mov
pop
dec
lret
stos
sbb
sarb
and
sub
jnp
sbb
lods
daa
sbb
dec
mov
or
test
or
ficoml
or
out
sub
and
arpl
mov
xor
cmpsl
or
dec
je
jae
jmp
cmp
ljmp
test
dec
jb
popa
sbb
aad
stos
ljmp
sti
cmc
cmp
mov
loopne
sub
cld
sbb
xor
lcall
xor
adc
sbb
shll
fwait
dec
gs
mov
ret
lahf
data16
jne
jno
inc
es
fdivrs
cmp
sbb
stc
jno
addl
xor
movsl
xor
mov
xchg
inc
lcall
call
mov
shll
jae
mov
mov
mov
insb
mov
jp
mov
cmp
lock
pop
outsb
shr
xchg
in
cmp
aas
daa
xchg
xlat
aam
arpl
inc
xchg
inc
int3
xchg
shll
sub
in
jnp
and
ja
sub
adc
mov
andps
movsl
mov
fs
mov
int3
fcoms
xor
mov
mov
incl
jmp
mov
mov
pmulhuw
or
push
xor
sbb
push
and
daa
ds
mov
pop
int3
jae
dec
xchg
decb
repz
into
dec
je
repz
cmp
push
jb
insb
jge
lcall
lret
pop
dec
in
into
push
xchg
jnp
retw
adc
cmp
add
xlat
sarb
jmp
xchg
in
jns
loope
adc
dec
mov
xor
int
fisttpll
test
mov
bnd
cmpsl
out
add
or
add
and
lods
loope
addr16
jp
mov
inc
enter
mov
lea
push
mov
jns
mov
stos
in
ret
jnp
cmpsl
sbb
pop
dec
clc
sahf
push
pop
jbe
loop
sti
cmp
mov
mov
stos
bound
jge
pop
mov
inc
shrb
clc
mov
add
std
in
push
dec
sbb
jge
pop
test
mov
popa
enter
stos
or
xlat
sub
mov
and
sahf
cmp
mov
inc
out
imul
inc
add
loop
sbb
jno
xor
lret
je
cli
stc
test
lds
les
mov
adcb
and
push
xor
fisttpll
aas
cmp
sub
in
mov
jns
xchg
pop
outsl
jecxz
subl
jecxz
out
addr16
push
mov
push
mov
push
pop
push
jbe
inc
pop
dec
add
std
and
mov
xor
sbb
xchg
mov
ret
jmp
push
mov
pop
push
push
stc
push
imull
mov
arpl
sub
inc
dec
int3
or
sbb
mov
adc
jo
inc
lods
adc
xor
pop
aaa
jl
mov
xchg
orb
test
lret
inc
ret
inc
sbb
cmp
cmc
inc
stos
cs
cmpsl
or
outsb
outsl
fcompl
and
aaa
sahf
push
loopne
cmpsb
cmp
or
repnz
adc
cld
xor
outsl
sbb
add
hlt
sbb
mov
dec
mov
sbb
pop
popf
mov
shll
push
sbb
andl
ljmp
into
jecxz
in
clc
iret
rclb
jne
mov
cmpsl
cmpsl
scas
stos
into
sub
insl
rcr
lcall
je
into
lret
stc
push
jl
popa
insl
lret
mov
jb
fwait
push
cmp
stc
fsubr
xchg
out
test
aaa
sarb
pop
push
sbb
mov
imul
in
inc
jecxz
mov
movsl
iret
cmp
lret
sbb
xchg
pop
sahf
lret
fnsetpm(287
idivl
adc
test
inc
xlat
xor
xor
hlt
cmpl
adc
ja
inc
mov
movsb
pop
repnz
mov
and
lock
cld
loopne
push
and
inc
mov
sub
clc
add
aas
inc
roll
stc
fldl
push
jg
das
les
lahf
iret
jae
fidivs
xchg
nop
sbb
jno
fidivrs
shll
sti
stos
movsb
lahf
mov
test
ljmp
jge
call
data16
mov
inc
pop
pop
sarl
lds
xor
sbb
jg
lods
ret
mov
sub
aaa
sub
test
jg
or
sbb
pop
jmp
inc
xacquire
mov
cmp
sahf
mov
mov
sub
out
cmc
xor
push
stc
mov
push
cmp
or
push
je
xchg
jmp
sub
mov
sbb
jae
mov
jne
cmpb
out
pushf
jp
iret
push
push
in
mov
insl
sub
cwtl
push
adc
jno
mov
adc
mov
sub
push
jle
inc
in
inc
pop
mov
sbb
stos
mov
jmp
pop
enter
mov
cmpsb
jno
jns
xchg
jge
and
repz
xchg
mov
inc
jge
inc
jo
xlat
imul
push
data16
fs
pop
mov
push
insl
pop
or
loop
shr
cmpsb
inc
inc
sbb
fldcw
test
rcrb
lods
mov
aas
aas
mov
nop
inc
mov
mov
gs
fs
jbe
mov
pop
mov
push
jg
ret
std
cmpsb
fucomp
fs
pop
mov
mov
ret
jmp
push
jnp
in
mov
in
dec
cmp
pusha
inc
or
aam
popf
les
repz
loopne
outsb
cmpsl
mov
out
xchg
sub
test
aaa
mov
repz
std
cld
push
mov
shlb
repz
xor
jae
jns
aas
jg
addr16
dec
fbstp
aad
imul
std
loope
sub
test
add
add
idivl
out
jp
mov
or
pop
arpl
cmp
xor
cld
jge
push
and
std
lcall
test
outsl
or
ja
sub
mov
ret
dec
mov
or
int3
clc
cmc
inc
roll
adc
or
xchg
adc
andl
sub
push
stos
push
imul
cwtl
clc
xchg
xchg
jl
mov
scas
loopne
dec
and
cmp
inc
or
ja
cmpsb
fcmovne
loop
insb
lods
in
xor
out
es
or
cs
test
fnstenv
outsl
cwtl
shll
test
addr16
aaa
xor
inc
push
leave
pop
add
mov
or
repz
in
adc
adc
outsl
sub
cwtl
mov
sub
pop
xor
cs
arpl
xor
cltd
pop
xor
add
cmp
xchg
adc
jl
sbb
add
or
mov
pop
hlt
addr16
cltd
je
ds
iret
xor
sub
popf
xchg
jb
lcall
lret
cmc
clc
outsb
xchg
push
adc
ljmp
and
xor
xor
jle
rorl
sub
adc
popf
das
popa
call
in
jle
in
jecxz
int3
movsb
mov
lahf
scas
pushf
into
jge
lds
mov
sbb
push
xchg
dec
and
xor
lcall
rorb
mov
inc
lcall
dec
add
jmp
dec
aaa
lret
dec
push
stos
fdivs
clc
inc
xchg
lods
sbb
call
cmc
incl
push
jecxz
xchg
mov
mov
inc
or
test
xchg
push
rcrl
jmp
imul
movsl
jge
es
dec
mov
mov
sbb
out
subl
jecxz
mov
add
pop
xchg
cltd
pop
adc
xchg
pop
enter
jmp
hlt
fiaddl
addr16
insl
mov
out
lods
sti
push
lret
cli
mov
shll
jge
mov
sub
lock
aas
imul
cmpsl
jmp
sub
jle
xchg
lock
in
mov
pop
js
cld
mov
cmp
decb
lods
inc
ret
mov
mov
cmc
adc
popf
xchg
testl
in
not
lea
ret
rcrb
mov
mov
fisttps
insb
xor
pop
push
push
push
imul
push
ds
cltd
js
arpl
mov
enter
jns
ljmp
push
divb
les
loope
xchg
inc
call
adc
pop
rcrl
orb
xchg
fdivs
xchg
mov
mov
sahf
xchg
and
fucomi
pop
in
jmp
mov
add
sahf
xor
hlt
leave
movl
out
stos
mov
mov
sbb
test
cmp
testb
push
sbb
call
jb
hlt
mov
push
pushf
xchg
add
pop
or
addr16
push
mov
outsb
or
push
ret
fdivrs
aam
int3
inc
add
mov
add
mov
lock
jne
cmpsl
mov
mov
jae
in
inc
jge,pn
ja
in
push
cld
sub
dec
sbb
mov
cli
cmp
dec
sub
push
cmp
jno
imul
fisubrl
pop
arpl
cmpsl
popf
push
sub
push
cmc
fsubs
cmp
jl
in
or
imul
push
hlt
sbb
jnp
out
sub
jb
fdiv
or
or
scas
and
pushf
mov
push
sub
push
das
sarl
imulb
fisubl
loop
mov
sbb
cmpsl
cmp
jp
lea
ja
cmp
mov
adcb
sbb
lahf
das
divl
mov
sub
mov
fwait
jmp
inc
pop
enter
lret
lods
xlat
pop
insb
or
test
outsb
xchg
imul
es
movsb
xchg
sub
add
mov
inc
lahf
jno
jmp
aad
repz
pop
cmp
pop
fs
pop
sbb
adcl
idivb
xor
xchg
mov
mov
dec
mov
cmpsb
cmpsb
sbbl
and
imul
push
add
jecxz
inc
das
dec
and
jp
das
enter
mov
ret
xchg
sub
loope
add
subl
cs
jb
repz
add
sbb
ffreep
jbe
cmpsb
jl
addr16
leave
jb
add
adc
cwtl
add
mov
dec
push
jo
inc
sub
adc
enter
dec
icebp
xchg
push
incb
in
sbb
das
dec
jbe
imul
dec
pop
cs
clc
pop
mov
jne
cmp
mov
push
adc
icebp
in
call
out
nop
iret
push
mov
push
clc
jo
test
and
and
fisttps
int
push
in
mov
divb
lahf
fs
cli
dec
add
pop
cld
aas
js
cmp
push
push
cwtl
dec
les
xchg
adc
dec
test
cmp
mov
adcl
jl
cmpsl
ja,pt
les
and
inc
add
and
sub
push
push
mov
in
movsb
or
out
or
insb
outsl
jl
mov
outsb
sahf
sbb
dec
fucomp
sbb
ljmp
lea
push
sub
roll
out
lret
repz
mov
clc
mov
loop
inc
xchg
mov
int
add
test
add
jns
pop
push
mov
push
jo
inc
test
or
notl
arpl
push
movsb
out
jmp
sbb
xchg
bound
add
movsb
sbb
out
outsb
lock
push
adc
repz
shl
jl
cmp
sub
sbb
jo
sbb
dec
and
xor
fists
xchg
xacquire
das
adc
push
sub
cmpsl
add
jmp
adcl
cmp
xchg
std
push
rolb
push
pop
loop
clc
ljmp
test
push
push
sub
and
jmp
dec
sub
sbb
and
sbb
or
dec
sub
sub
adc
adc
fsts
jle
outsb
addr16
lahf
pop
push
jnp
inc
push
scas
mov
fdivrp
inc
mov
cmpsl
sti
idivl
pop
int
cld
adc
daa
mov
andb
xchg
and
pop
sub
punpckhbw
push
outsb
lret
leave
addb
mov
push
sbb
rcll
in
xor
out
enter
daa
adc
push
pop
pop
gs
test
jns
repnz
mov
and
pop
arpl
xchg
cli
rcll
push
jnp
in
daa
sub
in
int3
adc
push
inc
lret
fldenv
out
in
gs
aam
sub
jns
test
out
dec
in
and
mov
xchg
imul
nop
cltd
lock
or
mov
nop
cmp
or
and
cmovg
cmp
xchg
cmp
cmp
call
push
dec
sbb
xor
dec
and
dec
jl
outsl
adc
jl
loopne
cs
hlt
fimuls
es
or
jo
add
test
adc
mov
mov
nop
ret
fsts
scas
movsb
das
jmp
sub
cmp
jne
stos
out
jmp
xchg
shl
adc
dec
lock
or
fidivrs
mov
in
add
jno
jmp
ret
cmc
push
fbstp
ret
or
lahf
dec
sub
mov
int
mov
sbb
mov
cmp
fistps
mov
ljmp
out
cmp
les
dec
pop
inc
aad
ljmp
sbb
je
cld
dec
mov
mov
int
ljmp
lods
jecxz
repnz
cwtl
repz
popa
push
imul
mov
sbb
lods
jnp
push
fs
cmp
cmp
idivb
xchg
ja
mov
pop
dec
repnz
fnstenv
cmp
xchg
aam
mov
xchg
cmp
jnp
filds
xor
ljmp
dec
pop
sub
cmpsl
xor
sbb
dec
lods
cli
lods
cmp
jae
cmp
xchg
mov
cmp
pop
xorb
lret
arpl
mov
mov
scas
iret
data16
mov
data16
push
mov
lods
mov
outsb
cmc
xor
stos
xchg
ss
mov
and
incl
dec
in
mov
adc
sub
adc
pop
inc
jge
xchg
aam
mov
mov
mov
adcl
mov
xchg
dec
movsb
lret
lea
lods
popf
cmc
stos
inc
and
xchg
ficompl
jge
je
or
xor
aam
rcpps
mov
push
sbbl
idivb
mov
mov
shrl
mov
insl
cmp
adc
mov
loopne
xor
xchg
push
pop
push
scas
stos
xchg
xchg
xchg
dec
adc
and
sub
jns
lahf
imul
loopne
jmp
mov
jo
sbb
andnps
aaa
js
imul
aas
repnz
mov
dec
jg
or
or
xor
fcoms
sub
inc
mov
sub
lods
inc
into
testl
bound
push
hlt
lret
push
xchg
pop
pop
xor
les
aaa
mov
data16
mov
ficomps
pop
testb
movsl
ljmp
mov
pop
mov
sbb
dec
or
in
mov
inc
mov
sahf
lods
push
mov
sub
pop
sbb
cmp
or
pop
dec
loopne
adc
clc
push
testl
xor
out
cli
std
lods
add
adc
mov
test
push
jns
movsb
fbstp
fisttpl
loope
xor
in
icebp
popf
lods
xchg
mov
mov
test
pop
shrl
push
mov
push
dec
mov
xor
push
xchg
sub
sub
xchg
mov
ret
sbb
cmp
js
mov
inc
jecxz,pn
mov
sar
addr16
mov
sbb
lret
xor
mov
cmpsb
lahf
out
iret
ja
mov
xor
pop
sub
cmp
out
clc
or
movsb
pop
cmpsb
jno
push
cmpsl
xor
adc
aaa
mov
pop
in
mov
inc
xor
mov
fwait
inc
lret
in
xchg
in
loopne
lods
mov
mov
pop
jo
mov
shll
push
jbe
jne
push
mov
imul
or
das
popa
mov
lahf
xchg
jmp
inc
pop
rcll
and
mov
ljmp
or
push
adc
inc
mov
push
jae
push
xchg
shlb
sub
add
xchg
cmp
or
xor
inc
pop
rorb
jmp
into
mov
int3
arpl
iret
mov
and
fiaddl
popa
dec
cld
add
insb
mov
cmp
rcll
dec
pop
ret
fidivrs
and
pop
sub
inc
cmpsl
mov
xchg
fs
icebp
loop
xchg
rolb
in
sahf
arpl
ret
daa
pop
xchg
mov
dec
push
add
jecxz
xchg
sbb
outsb
addb
add
ja
cli
push
scas
mov
or
lret
lds
fyl2x
inc
out
loop
cld
or
push
aam
sbb
cmp
inc
mov
mov
or
subl
mov
dec
push
sub
pop
push
adc
xor
sbb
mov
add
push
mov
dec
fwait
cmc
cmp
int3
in
sbb
lock
addr16
push
adc
mov
in
push
iret
push
outsb
jmp
xchg
iret
add
cmp
add
inc
clc
inc
gs
ds
push
movsb
mov
pop
int3
xchg
add
mov
out
je
adc
in
stos
push
sbb
inc
xchg
lods
aad
or
xchg
xchg
sbb
fstpt
dec
popf
add
aaa
rclb
or
js
xlat
push
inc
repz
test
jns
mov
and
push
scas
scas
mov
ffree
jae
pop
lahf
cmp
mov
shr
fistps
xchg
inc
pop
sahf
pop
sbb
pop
cld
das
sbb
test
adc
dec
in
pop
inc
repz
out
inc
xor
xor
mov
mov
xor
ljmp
out
aaa
sub
rorb
xor
stc
push
stos
rolb
dec
add
pusha
aas
mov
repz
mov
add
icebp
andl
mov
sarb
rclb
dec
cwtl
adc
push
add
xchg
mov
sbb
icebp
jl
push
lahf
icebp
or
fisttps
lods
ret
or
or
or
push
jle
gs
and
bound
dec
push
movsb
dec
mov
inc
rdtsc
cmp
adc
dec
cmc
ljmp
dec
mov
mov
aas
int3
mov
push
inc
pop
shll
leave
lds
push
aas
push
or
pop
cmpsl
cwtl
imul
mov
xchg
or
cmp
sti
dec
cli
inc
mov
loopne
mov
or
adc
int3
fxch
cmp
pop
pusha
adc
in
sbb
in
clc
pop
ret
cli
push
pop
inc
lods
call
sub
add
jno
mov
cmp
xchg
js
mov
sub
xchg
pusha
stc
arpl
mov
add
or
incb
das
in
inc
xchg
fidivl
sahf
lods
add
rcrb
sub
lcall
add
and
and
jo
sbb
sbb
pop
mov
and
adc
adcl
or
jne
xor
mov
xchg
das
add
mov
leave
ret
and
enter
inc
outsb
and
ja
jb
repz
add
mov
push
insb
fstpt
fprem1
ret
int
xchg
adc
xor
imulb
sahf
dec
call
hlt
gs
sbb
pop
inc
pop
mov
cmpsb
push
pop
add
push
nop
mov
in
mov
xor
loopne
pop
push
sbb
inc
xchg
mov
popa
sub
jg
dec
aaa
nop
push
andb
es
roll
push
pop
jmp
cmp
pop
push
stc
and
repnz
adc
pop
out
lcall
mov
cmp
loop
push
aaa
cld
mov
and
push
mov
loopne
jb
into
fiadds
pop
insb
call
out
mov
add
insl
push
jnp
push
sbb
mov
data16
mov
ja
dec
std
add
adc
or
sbb
pop
push
shll
repnz
out
mov
jg
lret
xor
aam
inc
pop
sti
test
dec
scas
push
movsb
aad
or
inc
jmp
and
jb
movsb
mov
push
inc
test
pop
push
pusha
fwait
pop
sub
fwait
adc
decb
in
icebp
test
cmp
stos
dec
xchg
orb
pop
inc
insb
inc
cwtl
cld
xlat
leave
lods
popf
xor
ds
idiv
xchg
sbb
jo
sti
je
cmpsb
mov
rolb
sub
sub
ret
mov
int3
roll
lcall
int3
mov
testb
mov
into
dec
sub
je
outsb
sahf
pop
sti
pop
ror
test
pop
imul
rorl
sti
pop
fdivrl
out
mov
loop
or
mov
and
test
imul
xchg
push
jle
mov
push
mov
mov
jp
fs
fisubrl
ficoms
adc
push
mov
cmp
dec
lret
scas
mov
pop
xorb
out
ja
lret
push
pop
fadds
mov
scas
mov
mov
push
pop
pop
inc
clc
stos
lcall
fsubrp
ret
adc
add
sub
push
cmpsb
loopne
gs
sahf
dec
jbe
adc
pop
and
push
add
push
mov
dec
cwtl
jg
fnstcw
push
add
jb
rcll
sbb
inc
xchg
xor
stos
lret
mov
in
leave
cmpsb
mov
cmp
lock
insl
sub
mov
fiaddl
fiaddl
add
daa
arpl
cli
pop
xchg
imul
sbb
addr16
mov
or
xor
sbb
sbb
in
and
and
cmp
push
add
fs
movsb
dec
adc
inc
or
into
pop
xchg
push
push
push
push
inc
addr16
xchg
jle
stc
idiv
pushf
test
or
push
adc
xor
stc
in
pop
iret
xchg
pushf
hlt
xchg
and
mov
aaa
jle
ljmp
cli
xor
aas
mov
fsubl
mov
inc
insl
xchg
pop
pop
fimull
xor
neg
add
aad
dec
test
loope
lret
data16
mov
mov
or
cmpl
insb
mov
stos
cmpl
pop
adc
mov
mov
add
out
xchg
scas
fisubl
mov
adc
lcall
xchg
mov
push
fdivrp
pop
in
int3
mov
rcll
movsb
pop
dec
xchg
stos
ljmp
cwtl
in
mov
mov
insl
adc
push
dec
xchg
loope
mov
lods
push
and
insb
dec
pop
lret
mov
ret
dec
push
jg
inc
mov
or
ret
xor
sbbl
mov
call
insb
mov
mov
jmp
pop
scas
and
xchg
dec
fstpl
das
or
fmul
shll
pop
push
insb
push
push
push
inc
lods
bnd
pop
popf
push
jecxz
push
in
gs
lret
xchg
jnp
cmp
mov
aad
push
sub
imul
js
xor
sub
push
lea
or
cli
push
sbb
lods
push
insl
xchg
dec
inc
mov
inc
pop
dec
stos
iret
cmp
aam
out
pop
mov
addr16
lods
jae
mov
jbe
loopne
push
es
daa
out
insl
or
lret
dec
aam
in
ret
or
imul
xor
add
in
in
add
xchg
jno
add
sbb
push
sub
pop
arpl
dec
sbb
jge
in
ret
xchg
mov
into
mov
xchg
cld
dec
cwtl
add
add
cltd
or
push
adcl
mov
sub
add
cmp
cmpb
ret
mov
test
and
pop
pushf
insb
pushf
out
jno
movsb
jb
mov
sbb
and
push
mov
inc
mov
clc
aad
aam
ljmp
push
lfs
xor
ljmp
pop
out
popf
arpl
int
mov
pop
inc
jecxz
mov
test
test
or
sub
sub
jle
out
sahf
jg
std
cwtl
jg
out
loopne
pop
dec
ss
pop
loopne
xchg
fsubrp
pop
mov
dec
xor
pushf
mov
and
das
jae
dec
or
and
bnd
cli
iret
push
repz
adcl
rcl
pop
addr16
inc
imul
mov
jns
ret
aad
push
push
outsb
ror
add
sub
mov
dec
mov
add
mov
call
insb
dec
jmp
push
mov
stos
jle
and
mov
cmc
cld
sbb
cs
pop
stc
jae
adc
mov
insb
popa
rcrb
arpl
push
jbe
push
mov
leave
fldl
in
fs
out
jo
ljmp
loop
jge
adc
sub
pop
push
mov
js
int3
sbb
bound
pop
and
loopne
inc
loopne
cmpsl
mov
stos
push
aas
das
cmpsl
cmc
ja
das
mov
jmp
push
fwait
inc
sarl
add
idiv
and
ljmp
push
push
lahf
xchg
rcll
mov
call
movsl
fst
add
imul
xor
int3
mov
ljmp
inc
sub
out
push
dec
pop
dec
imul
cld
test
popf
jb
aam
adc
adc
aad
repnz
fs
xchg
xchg
cmp
ljmp
inc
dec
xchg
push
subb
cmpsl
xchg
jge
cmp
test
sbb
shrl
pop
rcrl
cwtl
rcr
xchg
mov
push
decb
jno
in
xchg
mov
adc
aas
mov
rorl
sub
cmpsb
xchg
lcall
out
sbb
mov
or
mov
cmp
addr16
in
test
jecxz
fldl
iret
dec
in
test
iret
incl
int3
inc
sub
sbb
pop
push
pop
stc
lret
insl
rorl
sarb
jle
xor
lds
sbb
jmp
iret
jge
xchg
ficoms
xchg
out
mov
leave
add
dec
xchg
xchg
shlb
xor
inc
iret
add
xchg
pop
inc
add
dec
scas
insb
lods
inc
xchg
xchg
add
xchg
cld
mov
mov
mov
or
cmp
movsl
stos
jno
lahf
leave
in
mov
push
xor
loop
or
add
sbb
pop
mov
dec
mov
push
xchg
aas
cmp
add
xor
das
ret
xchg
adc
xor
stos
mov
add
sbb
adc
icebp
out
adc
nop
pcmpgtd
add
jo
dec
cmp
rcrl
rclb
shl
push
dec
cmpsl
mov
mov
stc
and
repz
xor
aaa
outsb
cmpsb
test
imul
aam
ret
xor
lret
adc
adc
push
xchg
stc
std
dec
mov
retw
jb
mov
xor
mov
shll
jno
inc
ljmp
lods
dec
xor
jp
dec
and
adc
pop
cltd
mov
lock
xchg
pop
xchg
xlat
sbb
sbb
jle
push
insb
les
mov
push
daa
stc
repnz
jnp
cmp
mov
lds
out
sub
jp
pop
ljmp
pop
xchg
jge
and
inc
faddp
stos
testb
roll
into
insl
js
mov
ds
push
imul
incl
aad
loop
lds
repz
add
sub
gs
daa
mov
push
inc
loop
fstl
std
mov
arpl
cmp
sub
or
fiaddl
add
repnz
fistpll
outsl
jo
arpl
inc
xlat
xchg
popa
push
not
insb
or
int3
xchg
mov
repz
shrb
push
sub
and
sahf
xor
xchg
and
bound
lods
in
and
adc
test
test
out
push
pop
or
xor
adc
pop
pop
aas
fcmovb
jns
aam
xor
jg
sarb
mov
test
fwait
test
push
jge
sub
pop
shr
inc
notb
lret
out
add
mov
adc
sbb
ja
lahf
push
daa
cmp
in
mov
mov
scas
pop
fcoms
add
xchg
ret
inc
or
jg
gs
into
dec
push
dec
or
inc
adc
leave
lahf
mov
vxorps
fcom
test
sti
popf
add
or
ljmp
imul
jbe
push
out
push
stos
jg
fs
jmp
cltd
or
mov
out
adc
sub
mov
lret
clc
adc
mov
xchg
mov
or
test
outsb
adc
subb
jge
jns
and
call
xor
popf
sub
add
and
mov
scas
mov
or
sbb
xchg
and
gs
loop
cmp
jmp
arpl
cwtl
mov
loop
cmp
jle
in
jnp
jge
xchg
es
cmp
das
mov
dec
and
fs
movb
push
stos
adcb
movsl
jno
mov
cs
ja
mov
cmp
pop
loope
sahf
lcall
mov
and
test
xchg
and
or
mov
add
popf
jp
push
ror
iret
daa
movsl
ds
cld
rol
xlat
movsl
push
or
es
inc
mov
je
hlt
dec
xor
adc
mov
lock
xchg
pop
out
mov
call
sbb
stos
fdivrs
push
leave
xor
inc
cmp
outsb
aaa
in
fwait
or
or
mov
or
imul
andl
jge
push
sbb
adc
push
mov
or
add
mull
lahf
sub
add
loopne
in
mov
es
add
ja
and
cmp
mov
sahf
sub
mov
sub
roll
movsl
jecxz
leave
leave
push
sub
ret
imul
mov
int
jg
jp
mov
addr16
dec
cmp
je
popa
fnstsw
cmp
adc
sub
fisttps
clc
lea
lea
push
out
in
mov
pop
in
fisubrs
jne
mov
es
mov
dec
push
push
mov
xor
sub
xchg
pop
iret
mov
mov
mov
add
roll
fistpll
sbb
das
andb
cmp
test
jg
mov
cmpsb
int3
mov
repnz
cmp
push
ljmp
jp
mov
cmp
push
pop
jne
out
sub
jae
jbe
mov
push
ds
fldl
mov
loopne
ret
add
mov
inc
pushf
enter
jne
adc
sub
xchg
aam
or
push
and
jnp
or
cwtl
jne
sbb
std
out
dec
jmp
add
xor
loopne
loope
nop
cwtl
fwait
sbb
and
or
sbbb
pushf
scas
and
ds
jae
shlb
into
out
std
sub
xor
lahf
and
mov
mov
jo
sub
pop
adc
out
add
sbb
jecxz
adc
das
mov
ss
insl
mov
sub
addr16
fmull
dec
testl
add
icebp
shr
pop
sbb
hlt
loop
pop
jg
push
repnz
cmpl
hlt
pop
mov
sub
icebp
call
and
add
push
and
popf
int3
or
ret
and
shll
ret
xchg
and
xor
lods
mov
pop
xor
xlat
mov
or
dec
mov
cmp
dec
outsl
jmp
rorb
mov
jne
sub
test
jb
lret
pop
and
orl
aam
adc
movsb
mov
out
fists
js
fucomp
jbe
insb
fwait
pop
lret
or
loopne
fstpt
loope
ror
add
bswap
pop
fsub
dec
in
add
xchg
xchg
mov
in
inc
xchg
js
jg
jge
dec
fldcw
or
dec
lret
or
jecxz
ret
stc
adcb
loope
cwtl
and
pop
mov
xor
ss
addr16
dec
cmp
in
mov
dec
sbb
and
pop
loopne
fildl
push
ret
mov
lods
lock
mov
jecxz
daa
xor
loopne
rcrb
fwait
mov
lds
mov
xchg
stc
lea
dec
xchg
xchg
push
xor
cli
mov
adc
xor
push
mov
ss
enter
xchg
aad
insb
ja
push
lret
mov
stos
ret
jge
cmp
push
adc
pop
mov
dec
jmp
cmp
lods
cwtl
mov
int3
push
mov
dec
out
loop
adc
jl
xor
repz
inc
mov
add
outsb
push
fcmovbe
xor
push
push
xchg
xor
sbb
out
add
sub
add
popl
fidivl
gs
xor
push
xchg
lods
or
xor
out
pop
cmp
aaa
xor
repnz
dec
xor
add
push
dec
push
add
or
cld
cmpsb
pop
or
push
xor
sbb
aad
lods
jl
sub
inc
cli
mov
stc
imul
jl
aad
dec
inc
inc
push
jecxz
xor
lcall
test
loope
inc
fwait
push
imul
xchg
imul
and
mov
pop
sbb
xlat
and
pop
bound
pop
out
mov
mov
mov
xchg
push
mov
insb
cmpsl
push
sub
imul
aam
xchg
lods
add
push
jne
call
movsb
or
in
push
loope
call
jnp
jb
pop
xor
sub
popa
and
xchg
cmp
mov
lahf
loop
sbb
ja
std
xchg
in
sbb
sbb
and
add
mov
cmp
adc
push
xchg
push
mov
stc
in
in
dec
fdiv
icebp
cmp
insb
insb
add
push
daa
in
rolb
test
xchg
and
cmp
lock
popa
arpl
sarl
push
stos
jmp
pop
movsb
leave
adc
aaa
pushf
mov
addr16
ficoms
popf
or
loop
cmp
xor
xchg
movsl
insb
push
in
ss
shlb
dec
test
sarl
lahf
jmp
push
ds
dec
lcall
mov
das
pop
sub
cmp
aaa
sbb
cs
repnz
ret
inc
cltd
shlw
cwtl
xchg
fcoml
mov
push
aad
lea
inc
xlat
dec
outsl
pushf
loope
sub
int
pop
addr16
je
cmp
dec
mov
fildll
outsl
sbb
js
arpl
jle
aas
xorb
xor
ljmp
dec
std
cmp
in
lret
aaa
xchg
mov
mov
xchg
jbe
xor
lret
mov
test
and
pop
lret
enter
test
mov
xor
inc
lods
daa
cltd
mov
icebp
cmp
push
lods
pop
push
jl
dec
addr16
mov
cmp
and
ljmp
jl
imul
xor
sbb
js
out
jle
in
fsqrt
mov
sub
xor
sbb
mov
insl
jmp
xor
jbe
mov
or
lret
adc
ret
in
cli
xchg
in
dec
out
pop
shlb
aam
or
rorb
leave
in
in
dec
mov
pop
fsqrt
mov
popf
lcall
addr16
push
mov
push
xchg
notl
push
jp
jge
fadds
pop
pop
jp
mov
dec
arpl
mov
and
pop
je
data16
inc
inc
xor
jnp
add
inc
jmp
repz
dec
adc
fs
push
stos
out
jae
mov
pop
lcall
out
jg
std
mov
data16
sbb
add
mov
sbb
push
es
jnp
outsl
or
xchg
pop
imul
aas
int
mov
pop
ret
int
icebp
iret
popf
mov
ss
mov
cmp
push
sub
sub
lahf
adc
out
jecxz
ja
pop
insl
dec
jle
andb
int3
add
push
out
jae
push
mov
sbb
scas
and
mov
faddp
mov
hlt
es
mov
jns
adc
out
imul
mov
mov
mov
sbb
xor
pop
mov
xchg
sub
nop
push
mov
mov
ljmp
push
push
xchg
mov
jp
ja
inc
ds
pop
imul
add
bound
push
test
lcall
das
push
out
xor
movsb
gs
jmp
outsl
lds
lahf
sbb
xor
in
loope
out
cmp
nop
les
int
imul
adc
push
jl
cmp
out
out
mov
div
jno
mov
sarb
rolb
lahf
jmp
lds
leave
add
jb
xchg
aam
or
shll
jle
les
js
xchg
cs
lret
jl
int
sbb
aad
inc
mov
sub
dec
addb
push
xchg
stos
xor
lea
cwtl
adc
sub
lods
ret
scas
xchg
adc
and
pop
cmp
jne
fsubl
jnp
in
pop
jmp
roll
loopne
aad
push
fbstp
pop
mov
push
shrb
mov
test
das
xchg
aas
cs
jp
imul
dec
jbe
push
outsb
sbb
mov
out
or
push
cmc
inc
pop
out
pushf
shlb
adc
pop
js,pn
and
fisubl
leave
test
or
adc
push
roll
adc
das
orb
mov
test
mov
inc
dec
std
lret
mov
add
out
fiadds
out
jg
sbb
or
and
es
lods
fs
pop
fidivrl
push
xchg
pop
imulb
adc
scas
in
cmp
lods
pop
ds
push
xchg
cmp
xor
test
repnz
jmp
mov
cs
jnp
cmp
mov
xor
pop
mov
sub
les
pop
fsubrl
inc
out
adc
cmp
pop
fscale
aad
pop
and
inc
add
cmp
rolb
idiv
mov
movaps
and
jg
loopne
mov
jb
dec
test
cld
jae
imul
push
mov
fucomp
shll
adc
not
and
add
xchg
cltd
jl
pop
dec
jae
dec
mov
xchg
movsb
mov
dec
out
bound
sarb
adc
push
push
ljmp
push
repnz
cmpsb
adc
lret
out
mov
pop
mov
or
xchg
adcb
xchg
push
sbb
fsubrs
xchg
vphaddbd
push
in
pushf
and
xor
xchg
and
shrb
jl
push
and
loopne
pop
lods
test
ja
sbb
fwait
mov
dec
xor
jecxz
adc
mov
cmpsb
push
stc
cmp
out
loope
mov
inc
test
xchg
fcomip
inc
fucomip
aam
insl
cmc
cltd
xor
jnp
fsubl
jle
xor
repz
lret
cld
call
jl
xor
clc
inc
pop
sbb
repnz
mov
bound
push
rorb
insl
or
adc
addr16
lahf
cmp
xlat
mov
xor
push
dec
dec
add
aam
add
mov
int
pop
add
xor
test
adc
sbb
std
push
jo
inc
push
loop
pop
je
sbb
nop
incl
sub
jae
rorl
push
cld
call
mov
jp
cli
mov
ret
xor
and
mov
cmp
repnz
or
xchg
leave
xor
xchg
dec
fwait
mov
xchg
sbb
dec
imul
out
repz
cwtl
test
dec
mov
pop
xchg
dec
mov
in
cli
fistpl
sbb
inc
mov
mov
xlat
or
adc
fiadds
in
pop
adc
add
int3
and
movsl
mov
jb
arpl
rcll
aas
xlat
xchg
jbe
nop
jnp
lods
and
hlt
jb
popa
sub
jecxz
lret
movsl
sub
jnp
sub
jl
lret
pop
fnstsw
pop
or
cld
testl
rcr
mov
insl
sub
repz
lods
mov
add
into
pushl
push
jge
out
pop
lret
dec
jp
jb
cmp
sbb
cmc
cltd
add
out
das
lock
jg
push
push
in
mov
xor
out
cwtl
push
int3
cmp
jne
gs
mov
jae
ds
clc
push
sub
addr16
fwait
lcall
inc
es
pusha
lods
mov
icebp
leave
mov
cld
mov
popa
jecxz
loop
cmpsl
pop
nop
inc
and
rcl
dec
daa
nop
mov
ret
sbbb
shl
xchg
sbb
cmp
xor
repz
sub
cld
rorb
iret
inc
aad
xor
enter
hlt
popa
fsqrt
xlat
sahf
adcb
scas
push
push
loop
pop
mov
jp
out
jmp
or
icebp
cmp
add
hlt
mov
insb
lea
or
pop
movb
mov
daa
cmpsl
dec
into
sahf
pop
idivl
stos
xchg
mov
pop
jmp
push
out
mov
mov
xor
ja
cmp
shl
lcall
insb
mov
pop
pop
pop
mov
vpmaxsw
xchg
popf
rolb
mov
add
flds
xor
cmpsb
gs
aad
loope
repz
mov
in
xlat
push
push
xor
jbe
mov
cmp
mov
xchg
andl
out
mov
outsl
addr16
outsb
push
cmp
clc
pusha
test
in
fdivp
cmp
test
sbb
push
stos
or
inc
imul
pop
add
rolb
aad
pop
mov
loopne
dec
scas
push
scas
imul
in
iret
push
stos
push
insb
mov
std
cs
rolb
fbstp
in
xchg
loop
gs
jle
int
push
scas
mov
ja
cmpsl
mov
push
test
jns
sub
in
jb
xchg
ljmp
in
dec
xchg
mov
push
push
les
mov
insl
cli
jns
imul
cmpsl
stos
push
popf
mov
or
xchg
push
jl
dec
mov
sub
jnp
cmp
pusha
jmp
iret
sbb
mov
pushf
xor
mov
lods
popf
cmp
jno
cli
ja
repz
aaa
jge
aaa
or
push
push
dec
repnz
lea
jg
hlt
xor
or
shll
in
pop
mov
inc
lea
cmp
adc
stc
xor
push
orl
and
mov
inc
add
ret
stos
stc
xlat
mov
gs
jmp
cltd
push
nop
jbe
mov
push
sahf
addr16
mov
sbb
xchg
leave
cmp
jmp
mov
adc
push
xor
out
loop
arpl
pop
fisubl
subb
mov
ljmp
shll
xchg
push
insl
mov
outsb
sbb
shl
mov
fsubrs
ds
mov
pushf
scas
or
mov
inc
xlat
clc
mov
stos
add
ljmp
sbbb
sti
mov
ror
xchg
push
mov
je
lret
inc
and
out
sahf
and
xor
mov
arpl
push
fldl
imul
ss
mov
mov
or
pop
enter
mov
cmp
loop
in
cmp
dec
jae
xchg
rcrl
nop
loopne
inc
int
or
adc
lea
int3
or
cwtl
aad
scas
push
imul
cmp
inc
dec
adc
push
push
and
cmpsl
push
stc
or
and
in
lods
mov
lds
push
push
lea
mov
orl
call
xor
pusha
bound
loop
inc
push
mov
push
xchg
push
cmpsl
jbe
cmp
mov
xchg
xchg
lds
push
lods
decb
mov
adc
inc
sarb
lret
cli
fcoms
fs
cmp
sahf
xor
jnp
out
stos
imull
jb
pop
mov
pop
xchg
lret
and
orl
or
xchg
loop
roll
jb
dec
sub
repnz
insl
out
push
es
inc
mov
shrl
push
mov
or
xlat
cwtl
es
push
es
push
mov
test
lret
and
hlt
js
lret
adc
adc
addr16
in
shrb
cvtps2pi
cwtl
mov
in
aad
stos
mov
add
add
ss
ds
jp
push
xchg
addl
jle
test
xor
inc
adc
mov
dec
inc
fidivrl
inc
mov
imul
fistps
mov
int3
imul
hlt
add
cltd
lret
sub
jno
adc
pop
or
jg,pt
mov
in
xor
add
add
sahf
repnz
mov
pop
dec
mov
je
xchg
hlt
jmp
inc
lock
mov
add
jo,pn
jo
adc
mov
test
mov
cld
movsbl
cmc
stos
xor
std
adc
scas
fistl
outsl
sarb
mov
lods
sub
loopne
gs
outsb
push
pop
mov
adc
loop,pt
fldt
shrl
lret
xor
xchg
push
lret
repnz
add
lret
xlat
push
mov
mov
mov
jae
adc
repz
sbb
ficoms
fstps
cmp
xchg
ret
mov
not
cmp
sbb
movsb
pop
icebp
ret
icebp
hlt
lahf
pop
mov
inc
push
mov
xor
push
push
dec
pushf
or
or
clc
out
adc
mov
sub
mov
sbb
sub
sub
rorb
adc
sti
jns
xchg
dec
sbb
and
add
jmp
mov
shlb
dec
jmp
cmpsl
cs
repnz
repz
test
xchg
leave
out
push
hlt
call
repnz
std
loop
mov
mov
and
push
test
or
xor
pop
mov
aas
rdtsc
inc
shlb
inc
outsb
ds
pop
jb
and
mov
mov
stc
push
inc
test
jae
mov
test
mov
push
rcr
out
js
mov
in
rep
jne
cmp
aaa
lods
and
dec
mov
add
jge
mov
inc
push
jecxz
subb
sti
and
mov
fdivp
outsl
test
mov
test
pop
cmp
test
dec
scas
and
xchg
dec
stc
add
je
stos
fs
mov
int3
dec
out
sahf
bswap
jb
in
sbb
xchg
data16
pushf
int3
dec
push
sahf
add
cld
mov
cwtl
mov
repnz
test
iret
rcrl
sbb
and
pushf
movsb
xor
mov
inc
inc
push
push
test
iret
mov
shlb
fwait
leave
out
and
lock
imul
ja
mov
pushf
xor
add
jmp
mov
cmpsl
or
xor
hlt
fisubl
dec
loop
push
mov
rcrb
lods
xor
sbbl
aaa
repnz
push
invd
cmp
xchg
inc
outsb
push
addr16
ret
xor
ja
dec
and
imul
mov
add
xor
mov
rolb
mov
or
fadds
xchg
popf
pop
xor
sbb
xor
cli
and
shlb
cmp
adc
add
ror
or
push
dec
mov
mov
fs
pop
addr16
out
call
mov
jmp
out
pop
mov
loopne
out
xor
test
xchg
jb
pop
or
inc
incb
push
jb
push
addr16
jbe
repz
js
mov
scas
orl
loopne
cmp
arpl
sbb
arpl
adcl
std
cmpsb
jbe
jae
out
pop
jg
cmp
andl
mov
jbe
xchg
mov
jl
test
rolb
icebp
pop
and
jmp
dec
push
xlat
scas
scas
stos
shlb
mov
push
mov
sub
fstps
mov
cmp
mov
ss
cmpsb
aad
popf
mov
push
in
test
fldl
jecxz
in
and
sub
out
cs
ljmp
jg
mov
and
les
stos
jbe
inc
inc
ds
mov
sbb
xchg
sbb
cmpsb
out
and
xorl
cmova
xlat
and
cwtl
subl
pop
xchg
stc
xchg
dec
mov
out
mov
pop
inc
mov
pop
and
jnp
sbb
ficompl
sti
inc
test
or
xchg
mov
inc
mov
aam
xchg
or
adc
int3
jns
sbb
shll
in
inc
adc
lods
add
pushf
popf
mov
outsl
inc
jne
repz
dec
cmc
lcall
mov
xchg
insb
stos
or
fsubs
imul
lret
mov
cld
mov
push
lahf
xor
cmc
jp
jbe
mov
add
mov
mov
inc
sub
movsl
in
jl
idivb
cli
xchg
jbe
call
mov
inc
cli
cmp
jle
lahf
pusha
add
add
ret
inc
sub
in
sbb
imul
rcr
jnp
mov
and
outsb
mov
enter
adc
jmp
push
dec
xor
mov
cwtl
loope
lock
int3
nop
add
jns
dec
fsubs
xor
push
sbb
mov
and
les
adc
add
pushf
cmp
call
loope
and
add
fcmovnu
sbb
out
gs
sub
test
aaa
scas
dec
ljmp
or
out
movsb
aad
mov
or
pop
pop
or
xchg
mov
pop
inc
mov
pop
mov
add
out
mov
xor
inc
or
out
inc
mov
fs
add
push
mov
inc
pop
incl
aaa
bound
add
scas
lret
xchg
in
jecxz
imul
fdivrs
enter
cltd
sub
call
dec
fs
add
daa
test
movsb
pop
sub
xor
lds
rcr
lret
aaa
inc
jle
xor
push
jbe
inc
xor
sti
ds
fisttpl
fwait
cmp
subb
pop
ss
aas
pop
sub
sbb
int
push
imul
jne
stc
subl
add
xchg
movsb
fdivl
pop
out
push
hlt
cs
cmp
shll
inc
inc
cmp
push
or
mov
out
xor
mov
and
xor
push
add
ja
dec
jbe
andb
pop
xchg
or
les
scas
adcb
fildll
test
cwtl
mov
xchg
dec
mov
or
scas
adc
sbb
ja
cmpsb
out
popa
out
imul
test
movsl
stc
test
add
cmpsb
mov
pop
cs
lods
shll
xor
inc
dec
add
xlat
into
std
sahf
dec
xor
mov
jnp
xor
fiaddl
and
cmp
inc
inc
and
mov
or
test
and
in
push
popf
jno
scas
scas
in
xor
jb
ficompl
mov
or
mov
ret
mov
test
pop
cmpsl
cmpsb
xchg
call
popf
lods
adc
add
xlat
push
imul
mov
adc
js
jnp
inc
pop
aaa
push
push
cmpsl
xor
xchg
dec
outsl
pushf
sbb
mov
fucomip
mov
push
mov
adc
repnz
sub
xor
cs
jmp
bound
xchg
ret
push
cmpl
lods
xor
sub
cmp
sub
repz
sti
push
sahf
sahf
sbb
and
mov
xor
mov
add
pusha
push
enter
and
aas
inc
or
std
nop
mov
push
jnp
xchg
and
dec
stos
dec
mov
pushf
cld
mov
and
xlat
aad
push
mov
or
cld
ja
movsb
add
pop
cwtl
jg
push
add
xchg
imul
push
lock
push
push
xchg
lret
cmp
inc
sar
lods
and
pop
sub
mov
test
sti
int3
mov
sbbb
sub
inc
popl
mov
jnp
scas
ja
xor
push
mov
add
and
aas
push
push
mov
jo
xor
pop
push
pop
sbb
pop
pop
pop
fwait
pop
mov
ret
xchg
xor
jno
mov
mov
push
out
out
mov
pop
pop
lcall
mov
stos
sub
aam
insb
mov
fcompl
cwtl
aam
sbb
sbb
enter
inc
mov
xlat
into
add
fwait
sub
mov
lock
popf
aam
outsb
rcll
xchg
pop
out
roll
imul
mov
pop
hlt
ficompl
sub
add
sbb
jmp
push
mov
bound
int3
loopne
or
es
dec
int
mov
fildl
sbb
cmp
or
push
mov
lds
sbb
es
adc
or
inc
push
add
out
cmp
mov
test
in
jb
push
stos
inc
xor
or
jae
in
jg
mov
dec
mov
orl
inc
fisubrl
fidivs
mov
xchg
cmp
xchg
dec
jp
add
pop
pop
lret
fadds
rcrb
xchg
mov
std
imul
push
mov
mov
xor
mov
std
dec
scas
cltd
cmc
scas
cltd
adc
sti
xor
leave
sarb
sti
push
jl
sub
mov
sbb
push
cmpsb
jns
aad
xchg
sbbl
and
and
mov
hlt
cmpsl
test
mov
scas
imul
pop
pop
or
je
ret
add
test
aad
aam
imul
cmp
shl
pop
movsb
fstpt
ja
inc
xchg
pop
test
mov
in
and
jbe
mov
pop
ret
fs
pop
stos
xchg
cmc
pop
in
scas
sub
cmp
ss
loopne
cmpsb
incb
lods
push
lahf
xchg
mov
stos
xor
push
inc
or
repz
pop
inc
mov
fs
xor
sbb
divl
inc
ret
jae
inc
into
mov
mov
mov
xchg
sbb
imul
pusha
sub
jg
faddp
ret
jge
sub
xor
loop
movsl
add
test
cmp
sub
add
lods
xor
pop
xchg
pushf
jg
dec
lock
xchg
sti
rol
insb
inc
test
pop
shll
adc
adc
ret
nop
outsl
out
jle
jle
enter
cmp
lock
mov
dec
inc
sti
dec
xor
pushf
add
loopew
les
imul
sbb
mov
jl
loop
popa
lret
mov
fisttpll
sbb
test
hlt
pop
jl
push
mov
pop
fisttpll
pop
push
jecxz
xchg
fnstsw
bnd
sbb
dec
subb
divl
ffree
jl
ss
iret
xchg
and
stos
sbbb
inc
stc
fiadds
out
jl
pushf
mov
test
rolb
pop
cmp
shr
shll
mov
dec
call
mov
jo
and
cmpsl
fs
shrl
cwtl
popf
lahf
jns
sub
sbb
push
jo
add
mov
pop
jne
inc
enter
movsb
out
sbb
int
mov
pop
sahf
cli
pop
pop
int3
xchg
in
xlat
sub
call
je
popa
ss
int3
push
add
push
sti
adcb
loopne
mov
mov
and
jmp
out
mov
aam
push
dec
sub
cmp
out
xor
test
test
insw
or
sti
int3
mov
and
sarb
xchg
ds
daa
mov
cld
adc
push
pop
add
pop
or
or
xchg
sbb
js
outsl
xor
lret
es
xor
orl
push
cmc
sbb
jmp
inc
ja
cmp
or
push
dec
mulb
out
sarb
sbb
decb
stc
adc
cli
push
push
or
fiadds
aas
insb
cmp
les
imul
lds
or
test
arpl
mov
jmp
fnstcw
xchg
xchg
sbb
rol
sbb
sbb
add
inc
shl
orl
push
sbb
testl
and
lods
aas
fbstp
mov
xchg
and
mov
scas
lods
lret
mov
adc
add
hlt
js
sub
int3
sbb
mov
push
imul
jno
sbb
xchg
push
dec
pop
adc
mov
pop
dec
inc
xor
sti
data16
jmp
add
data16
pushf
dec
mov
jne
jge
adc
inc
cmovno
cmp
lret
shll
mov
adc
bound
in
mov
jae
fisttpl
lds
push
pushf
inc
dec
mov
push
pop
out
imul
jae
jnp
cmp
aaa
mov
adc
sbb
mov
mov
shlb
xor
cmp
movsb
inc
flds
cmp
mov
jb
and
dec
sbb
mov
adc
xor
or
or
cmp
movsl
test
mov
push
rcr
jg
stos
push
ret
cwtl
inc
dec
sti
sbb
mov
out
mov
cwtl
xor
popa
jle
pop
dec
inc
add
and
mov
inc
dec
nop
leave
out
negl
rcrb
cmpsb
mov
pop
push
jbe
xchg
outsb
repnz
std
mov
or
sub
rolb
mov
mov
insl
mov
je
outsl
les
adc
mov
in
stos
loopne
fistpll
xor
rclb
adc
mov
sbb
aad
and
jle
enter
dec
lret
push
push
in
cld
and
inc
and
xchg
xor
int
es
daa
pop
lods
cmpb
pop
xchg
mov
jne
xchg
shrl
fisubrs
xor
inc
xchg
pop
js
icebp
fnsave
dec
iret
int3
push
jmp
push
mov
add
fwait
and
inc
xlat
and
fsubs
testb
std
xor
dec
jne
sahf
cmp
or
adc
mov
mov
aas
push
jmp
aaa
sbb
push
mov
leave
int3
fwait
leave
jmp
mov
cld
mov
xlat
jp
test
or
mov
popf
in
cs
js
cmpsl
in
mov
xlat
shlb
sar
fwait
lea
jb
scas
jns
mov
fsubrs
xchg
push
das
and
bound
mov
aas
repnz
into
icebp
mov
mov
es
fwait
cmc
or
mov
dec
xchg
mov
jmp
aas
nop
jp
filds
fs
aaa
inc
jnp
scas
cmp
dec
inc
mov
push
shlb
addr16
pop
lahf
adc
in
mov
rcl
pop
add
addb
fstpt
sbb
int3
sbb
gs
xor
addr16
inc
xchg
jg
out
xor
addb
xchg
fsubr
das
jb
or
insl
jl
jns
repz
jp
pop
dec
je
loope
shl
lods
and
and
cmp
repnz
cmpsb
jbe
pushf
cmpsb
jo
jp
icebp
dec
cmp
or
lret
andl
dec
cli
and
or
sbb
pop
xchg
xchg
fsubrl
push
push
call
lea
adc
jecxz
push
in
xor
adc
sbbl
cmp
sbb
dec
loope
mov
inc
enter
dec
jg
inc
lcall
xchg
or
add
arpl
adc
sub
push
pop
mov
push
or
loopne
or
jns
fildll
mov
fs
cs
and
movb
nop
or
sub
mov
or
pop
stc
incb
cli
push
mov
sub
out
out
aaa
aad
xlat
imul
ja
sub
sahf
push
fmull
add
pop
neg
gs
inc
sub
mov
mov
mov
arpl
out
cmp
movl
xchg
sub
xchg
js
mov
insb
cmpsb
rcll
jnp
mov
inc
mov
pcmpeqw
insb
test
dec
or
push
dec
inc
inc
pop
enter
push
pop
push
mov
inc
cld
adc
loope
xor
jmp
inc
dec
es
ret
sub
mov
mov
enter
cld
mov
jg
rcr
sub
adc
xor
inc
and
das
fdivl
sarb
lods
xor
inc
mov
pusha
repz
inc
outsb
sub
dec
push
ja
mov
mov
daa
ficoml
cmp
std
push
pushf
and
mov
loop
inc
lahf
mov
and
add
jbe
dec
aaa
cli
enter
pop
cwtl
popa
hlt
loopne
adc
xor
enter
ficomps
psrad
test
notl
fsubrp
cmc
icebp
sahf
lock
mov
add
jl
mov
and
lahf
hlt
ret
test
adc
xor
xor
iret
jo
xchg
enter
fidivs
shlb
negb
nop
cmp
sub
add
add
test
mov
push
inc
int
fs
dec
in
inc
jle
xchg
rorl
pop
jb
lcall
xor
adc
and
and
xchg
cmp
in
sub
inc
sarl
sub
cmp
jl
addr16
fsubl
test
adc
imul
js
mov
xor
sub
dec
inc
int
lods
jmp
cwtl
cmp
stos
movsl
arpl
push
jbe
sbb
and
jbe
xor
stc
sti
les
cmp
xor
mov
sub
jae
nop
icebp
in
leave
pop
inc
sub
push
das
mov
or
enter
or
cmp
mov
xchg
incb
xor
popf
xchg
push
mov
and
aam
cmp
and
and
pushf
pop
xorl
or
pop
pop
leave
inc
stos
ficomps
sbb
pop
adc
mov
push
mov
sub
dec
jne
inc
adc
pop
aas
int
mov
push
outsb
and
adc
sub
std
in
icebp
and
iret
sub
aad
or
xchg
popa
mov
stos
jns
mov
xlat
popf
add
push
imul
jo
mov
push
int3
push
lahf
mov
insl
sahf
cltd
or
bound
mov
pop
sub
aad
in
add
rcrl
push
mov
jae
sub
mov
gs
and
imul
ret
stos
loop
bound
inc
fadds
push
push
xor
mov
stos
cltd
test
mov
jl
xchg
xchg
jne
cmp
ljmp
push
mov
je
fstl
sbb
out
dec
sub
dec
jae
inc
das
and
and
and
nop
mov
lahf
in
cmpsl
xchg
inc
negl
imull
xor
cmp
repz
loope
push
data16
or
fisubs
cmovbe
sbb
lcall
fisttps
dec
push
test
orb
mov
int3
mov
stc
dec
push
xchg
les
jmp
add
loope
dec
adcb
inc
adc
jo
lock
jnp
test
xchg
mov
sbb
repnz
sub
dec
negl
test
mov
lods
fimuls
gs
arpl
dec
je
shll
dec
rcrl
push
sub
mov
cmp
lcall
push
imul
sbb
sahf
mov
sub
jp
ljmp
inc
xor
dec
fiaddl
loopne
xor
arpl
sbb
mov
mov
icebp
push
sbb
jbe
lcall
and
lods
cmpsb
mov
push
fdivrl
mov
mov
mov
jno
push
jbe
in
pop
dec
mov
mov
divl
sbb
sub
movb
call
fwait
adc
popf
mov
mov
jo
cli
dec
cmpsl
sub
cmp
outsl
push
loop
mov
int
xchg
xor
dec
xor
push
subl
cmp
adc
sbb
mov
inc
lods
fldt
add
scas
adc
stos
jo
mov
das
pop
sbb
push
push
nop
ret
cwtl
pop
repz
jp
cmc
sbb
adc
push
in
cli
cmc
insb
pop
push
jo
popf
jle
cmc
jne
sub
pop
cmp
lods
ljmp
mull
shlb
adc
add
fs
inc
add
pop
sar
push
popa
or
cmp
pusha
mov
scas
enter
dec
push
clc
push
mov
adc
sbb
sbb
mov
mov
insl
xchg
push
es
inc
popf
xor
mov
and
push
or
out
imul
mov
pop
pop
js
mov
nop
int3
fbld
notl
inc
add
test
mov
and
lcall
stos
mov
mov
loop
cmp
stos
in
scas
iret
inc
or
jne
test
mov
cmp
inc
mov
lss
jp
cld
mov
and
xchg
pop
and
push
mov
std
lcall
sub
loopne
dec
outsb
stos
cmpsl
out
in
repnz
mov
dec
add
movsb
in
in
inc
insb
mov
sbb
push
loop
mov
aad
mov
lods
inc
jbe
mov
pop
adc
gs
push
cmp
sar
aaa
dec
movsb
mov
inc
push
dec
mov
data16
cmp
imul
xchg
repz
adc
lods
ljmp
sti
ja
sub
subps
pushf
xchg
mov
repnz
aad
imul
fcmovb
cmp
xor
je
or
je
out
in
test
dec
cmp
cmp
inc
sbb
mov
xchg
push
es
adc
aas
jg
test
fwait
das
scas
not
rcrb
and
ja
lods
or
mov
xchg
les
xor
mov
outsb
add
jg
ja
xchg
cli
fucomp
dec
mov
rcl
faddl
xor
jmp
xor
xlat
mov
add
sbb
enter
mov
or
xchg
sbb
push
mov
push
jae
inc
push
jnp
out
adc
gs
inc
adcl
mov
pop
sti
jo
xlat
jmp
xchg
mov
mov
pop
pop
jb
and
dec
and
xchg
xor
js
js
pusha
jmp
sbb
pinsrw
jl
push
xor
pop
sub
xlat
jnp
mov
cmpsl
call
dec
sub
stc
addr16
mov
push
pop
pop
or
mov
xchg
and
adc
pop
cmp
mov
in
shll
lods
sub
cmc
and
adc
pop
jge
sbb
sub
test
xchg
cmp
repz
sbb
pop
das
iret
nop
pop
repz
xor
or
mov
rcl
jo
mov
or
daa
aad
test
aad
add
push
jle
jecxz
sti
mov
in
movsb
mov
xor
dec
xchg
rorb
sbb
mov
outsl
cmc
stc
dec
stos
lea
mov
push
mov
jo
xchg
jbe
xchg
test
in
mov
sub
mov
lret
ret
rorb
repnz
popa
sbb
nop
xchg
xchg
jp
outsb
pop
int
xchg
icebp
dec
fs
mov
fcmovne
out
pushl
sbb
in
pop
stc
in
xor
hlt
pop
add
mov
loope
int3
enter
pop
lret
sbb
push
sbb
pop
lods
shrl
add
loope
lret
int3
clc
mov
fwait
sub
and
insb
mov
mov
bound
xor
pop
outsb
xchg
add
idivb
xchg
imul
push
mov
aaa
jno
sbb
stos
lods
fnstcw
push
xor
iret
and
cmp
loop
adc
dec
vpshufhw
cld
test
mov
mov
loopne
xor
jecxz
andl
repz
arpl
iret
hlt
and
jg
cmp
aad
add
imul
ret
mov
mov
lret
adcl
or
cmp
xchg
add
cmpsl
lds
mov
dec
xor
sub
mov
jg
xor
add
iret
cmpsl
push
adc
int3
jno
dec
cltd
mov
outsb
sbb
cmp
and
xchg
movsl
xchg
push
and
mov
cmpsb
jbe
jbe
ds
aam
push
dec
cwtl
or
push
jg
loop
loopne
push
pop
sbb
add
cltd
jg
test
rcrb
pushf
cmp
lret
leave
sub
jb
push
and
ja
pop
imul
or
push
leave
outsb
cltd
inc
or
adc
sbb
repnz
jg
xchg
pop
sbb
jg
jne
test
ljmpw
and
mov
pop
rcr
movsl
lds
and
push
int3
bound
fs
lock
sub
push
dec
js
inc
mull
pop
addr16
pop
ds
jmp
adc
mov
arpl
lea
pushf
xchg
xchg
ljmp
or
add
inc
lcall
dec
pmuludq
or
insl
je
mov
mov
fucomi
mov
test
xor
lret
or
int3
xchg
xor
pop
cld
in
dec
and
xchg
data16
mov
sbb
mov
je
insl
out
clc
int3
fimuls
sub
iret
inc
fnsave
cmpb
loopne
push
sbb
pop
das
jae
pusha
sti
test
cmp
mov
adc
jnp
add
jno
and
push
scas
clc
mov
cs
mov
loop
in
sahf
ffree
lahf
or
inc
push
jo
lcall
ret
jno
fldt
andl
mov
adc
into
shrb
scas
adc
inc
and
xor
jne
mov
test
aaa
inc
les
nop
xor
int
test
mov
jle
adc
push
inc
dec
lret
imul
je
jp
inc
rcrl
pop
push
in
push
pop
sbbl
insb
adc
into
cmp
loope
sarb
nop
cmp
sub
adc
or
add
jne
fistps
mov
or
jb
xor
test
pusha
dec
push
pushf
adc
cmp
and
icebp
lahf
in
push
out
dec
and
repnz
rcll
push
pop
test
dec
and
imul
pop
ss
xor
jnp
jo
fst
jmp
xchg
inc
dec
clc
xlat
and
xor
test
add
add
add
orb
sub
cmp
popf
insl
add
push
cld
sub
cmc
pop
int3
xor
add
xchg
test
xchg
das
jecxz
mov
add
fldt
xorl
or
or
adc
cmp
sarb
cmp
mov
dec
jb
or
pusha
repnz
lret
mov
jne
jno
ret
popf
dec
jecxz
test
adc
aam
or
sub
jp
pavgb
adc
dec
jle
xchg
xor
push
cli
adc
add
sub
divb
shlb
adc
shrb
fs
pop
adc
pop
dec
mov
iret
lock
in
das
loope
mov
inc
je
pop
mov
lret
test
push
jle
mov
pop
and
das
sbb
fs
xor
xlat
insl
pop
pop
sahf
dec
and
xor
jecxz
addb
xchg
sub
daa
outsb
adc
imul
es
test
cmp
fcoms
das
push
and
out
add
or
mov
xor
xor
imul
ret
cltd
xor
jbe
jl
push
pop
loopne
inc
loopne
loope
decl
and
jnp
inc
shlb
sbb
ds
mov
mov
cmpsb
cld
sbb
and
aaa
xchg
inc
popf
les
jnp
xchg
and
sub
insb
adc
js
xorps
fsts
or
icebp
call
sahf
xchg
pop
pop
loopne
in
mov
arpl
xor
jl
and
ja
mov
lahf
out
pushf
lret
cmpsb
repnz
mov
outsl
pop
mov
ret
arpl
cli
ret
lds
sbb
into
mov
jp
mov
dec
mov
cmp
in
sub
push
lea
mov
shr
dec
cmp
cmc
mov
xchg
inc
clc
insb
dec
mov
shll
sbb
test
arpl
in
cmpsb
cmp
xchg
cld
addr16
dec
fucompp
mov
sbb
arpl
repz
mov
xchg
jmp
pop
dec
or
jl
rclb
mov
fwait
xor
cltd
in
lcall
xor
mov
insb
movsl
cld
gs
push
lods
jmp
dec
ss
cmc
inc
out
call
mov
popf
push
movsl
mov
shr
lret
daa
das
pop
int3
add
shl
xchg
imul
add
mov
pop
jl
xchg
pop
mov
xchg
ja
dec
or
mov
xlat
jne
mov
cmpsl
inc
lret
add
mov
inc
fdivl
and
movsl
xchg
popf
out
xor
jbe
mov
inc
inc
and
inc
ror
sub
cmpsl
adc
push
xchg
mov
mov
faddl
mulb
insl
mov
scas
imul
xchg
fs
loopne
mov
mov
lret
pop
mov
push
negl
and
int3
addr16
cs
addr16
fstpt
xchg
adc
sub
mov
es
std
jg
negl
and
hlt
test
test
xchg
xchg
mov
cmpsl
mov
cmp
sbb
adc
push
sarl
int
in
lahf
sbb
jne
adc
insl
sub
aaa
mov
cld
sti
out
inc
dec
test
and
xchg
inc
sbb
sbb
add
cmp
mov
mov
popf
lahf
ficompl
mov
push
push
push
mov
stc
gs
data16
inc
adc
pop
mov
rolb
adc
mov
sub
stc
cmp
sub
fadd
imul
rol
aas
cmpl
scas
and
shl
jge
stos
push
cltd
jge
mov
cltd
sub
faddl
arpl
mov
and
mov
idiv
xchg
les
lcall
xchg
xor
pusha
inc
out
andb
sbb
cltd
es
xchg
scas
test
lock
adc
and
movsb
pop
add
pop
ss
sub
outsl
pop
repnz
dec
xor
push
or
inc
jb
xor
adc
inc
aad
cmp
or
je
cmpsb
repnz
fisubs
lahf
xor
cmp
insl
pop
outsl
mov
les
test
shlb
dec
loopne
mov
or
lret
dec
imul
pop
dec
fsubrl
pop
call
stos
push
orl
stos
jo
ret
push
cld
sbb
test
push
mov
in
into
jle
data16
mov
shll
or
loop
lahf
push
js
insb
pop
lods
adc
adc
ret
adc
shl
pop
aaa
iret
test
push
cld
push
add
in
fnstcw
cmpsl
aam
scas
out
test
lods
insb
popf
or
jp
or
in
jl
sub
sbb
inc
ljmp
addb
ret
adc
pop
add
xor
mov
jmp
pop
inc
mov
xor
cmp
pop
jae
sbb
cmc
jge,pn
mov
cmp
sbb
movsl
push
ljmp
lahf
incb
lcall
lret
call
mov
lahf
gs
loopne
push
push
mov
mov
add
fbstp
loopne
inc
or
cmp
dec
pop
dec
dec
rcl
adc
push
mov
xchg
in
pusha
adc
lcall
loopne
sub
ds
sahf
je
lods
les
dec
pop
and
xor
pop
xchg
mov
insl
out
icebp
adc
xchg
sbb
push
call
pusha
test
inc
xchg
inc
ret
icebp
and
movsb
and
jge
pop
mov
lcall
aam
aad
xchg
dec
sub
xlat
stc
lds
xor
lea
xor
popa
jmp
jne
movsb
mov
push
jg
pop
pop
add
pop
and
aaa
or
jns
in
fidivs
rcrb
mov
mov
adc
push
mov
dec
lea
lret
ret
cmpsl
pop
and
or
das
or
inc
movsl
lahf
sbb
sbb
scas
fidivrl
test
mov
sub
mov
push
lods
faddl
xor
xchg
lods
jg
xor
pop
cld
fsubrl
ds
mov
xor
lods
xor
bound
sbb
and
push
xchg
andb
pop
fwait
mov
xchg
cmp
push
xor
inc
mov
mov
stos
jecxz
push
mov
xor
dec
aam
ljmp
jno
ss
aam
or
xor
mov
sub
mov
xor
popf
jg
test
jnp
nop
insb
out
mov
mov
scas
pop
inc
mov
sbb
xor
xor
push
push
xchg
ja
dec
push
outsl
cmp
ret
stos
mov
fistpl
inc
mov
dec
add
mov
push
dec
lods
test
jae
cltd
dec
sub
repz
ljmp
mov
jbe
imul
daa
bound
in
push
stos
inc
add
mov
fcmovnb
dec
lods
test
mov
dec
loope
jecxz
xor
and
mov
jp
lea
pop
lcall
mov
scas
test
test
jbe
mov
and
cmp
insl
scas
into
rolb
mov
stos
ljmp
gs
push
jbe
mov
inc
stos
pop
adc
mov
lret
mov
jmp
pop
xchg
xor
mov
scas
data16
test
mov
mov
jo
inc
jge
outsl
jecxz
repz
psrlw
push
or
rcll
xchg
jnp
jbe
pop
xchg
shrl
sbb
inc
pop
pop
or
push
icebp
xchg
mov
inc
subl
insl
in
test
orl
xchg
mov
mov
call
mov
mov
iret
out
jbe
dec
mov
pop
cmovo
push
jl
jg
loope
sbb
icebp
dec
mov
imul
shrl
ljmp
aaa
pop
test
ficomps
lods
or
cmpsb
jbe
sub
nop
push
jns
outsl
mov
das
fldl
push
xor
mov
in
sbb
cmp
bound
push
std
movsb
sarl
sarl
jg
aad
imul
adc
adc
int3
mov
aam
push
ret
orb
inc
sub
push
sahf
enter
inc
adc
ret
aam
int
sbb
dec
stc
lods
mov
or
sbb
pop
cmpsl
pop
cli
xchg
imul
lds
add
notb
imull
repnz
test
mov
mov
iret
mov
test
xor
push
xor
push
stos
and
int
mov
out
and
aaa
int
and
fisttpll
pop
into
and
sub
dec
add
test
dec
add
and
bound
fmuls
out
xchg
in
cmp
jne
dec
call
push
and
inc
cmp
shr
loopne
sub
and
arpl
loope
aas
enter
adc
sbb
xchg
repz
mov
push
cs
jmp
and
xchg
sahf
rolb
into
xchg
cmpsl
xchg
pop
test
sub
xor
lods
mov
adc
xor
cmpsl
ret
add
xor
lock
push
fldl
or
cmp
mov
adc
xchg
mov
lods
jne
jns
das
sti
sbb
into
add
mov
daa
data16
aas
adc
add
es
xor
mov
inc
lea
mov
das
lcall
sbb
add
xchg
data16
adc
or
rcll
sbbl
inc
test
xchg
xchg
lods
jb
test
repnz
mov
xor
cmovs
push
sbb
cmc
fnstcw
sbb
fdivl
notl
pop
adc
cmc
addr16
sub
push
mov
xchg
and
cmp
divb
pop
jecxz
mov
dec
and
daa
mov
ds
mov
add
cld
insl
out
mov
adc
jae
outsl
stos
push
test
fdivl
sub
xlat
jae
pusha
xlat
and
pop
mov
sbb
std
jbe
int
ja
fnstsw
sbb
add
out
xchg
popf
inc
mov
out
mov
jno
pusha
add
push
mov
test
push
fiaddl
xor
in
out
sbb
ja
sub
pop
xchg
inc
in
int
push
stc
xchg
out
sub
sbb
mov
xchg
pop
lcall
sbb
call
imul
and
pop
jge
adc
das
mov
dec
dec
add
jno
loop
cli
cli
mov
out
imul
mov
cmp
or
cmp
fsubl
xchg
insl
addr16
cltd
cmpsb
or
xchg
or
lods
lea
in
ret
xor
movsb
repnz
shll
idivl
xor
inc
cmp
sahf
shrb
nop
push
sub
popf
dec
aas
sbb
fs
mov
jge
or
icebp
mov
fdivrs
inc
jle
pop
repz
adcb
nop
in
mov
outsb
rorb
mov
mov
cs
pop
in
xor
inc
movsl
jne
push
jb
aas
mov
scas
add
jmp
inc
pop
imul
movsl
inc
mov
push
add
pop
addr16
sbb
stc
mov
pop
lock
dec
int
xor
daa
xchg
fisubs
fidivs
sub
leave
adc
pop
out
adc
pop
dec
mov
test
mov
pushl
cmpsl
jle
loope
rolb
xorl
stc
inc
dec
out
pushf
xor
dec
adc
cmp
pop
out
sub
std
mov
push
rcll
jp
or
outsl
sti
stos
aaa
mov
inc
mov
mov
or
lock
adcl
mov
bound
movsl
jb
xchg
add
in
add
testb
loope
mov
in
or
xchg
mov
mov
xlat
rcrl
xchg
loope
sbb
xchg
out
insb
mov
mov
sbb
enter
ljmp
repnz
inc
fildl
les
adc
push
push
pop
dec
shl
pop
adc
adc
or
icebp
push
aas
mov
mov
inc
aaa
jbe
inc
je
dec
cmpl
or
loope
xchg
vmulss
push
mov
jno
mov
push
data16
cwtl
mov
lods
loope
mov
fcoms
cmp
aaa
jno
xlat
lret
sub
je
mov
add
pop
out
ja
fistpll
shrb
scas
hlt
pop
outsl
pop
lret
loope
add
push
or
sub
outsb
call
daa
js
mov
pushf
xor
repnz
mov
movsb
pusha
lahf
jecxz
cmp
dec
fs
in
push
jge
mov
aam
les
jmp
push
xor
pushf
mov
push
out
in
pop
test
in
lock
and
std
pop
push
pop
jp
and
or
dec
fnsave
xor
cmp
stos
push
and
dec
mov
jecxz
rclb
mov
nop
insl
add
mov
gs
insl
xor
divb
sub
dec
shlb
fildl
movsb
xchg
add
or
imul
sbb
cwtl
or
mov
pusha
fdivs
push
push
xchg
jno
jo
push
lds
leave
into
add
mov
sub
cmc
out
xor
mov
inc
jae
insb
mov
and
jge
adc
add
rorl
push
push
fildll
jmp
pop
out
shr
mov
push
outsb
jns
ret
rolb
and
test
push
xchg
cmp
xchg
andb
sti
pop
lock
sbb
cli
xlat
jl
jecxz
inc
lock
sub
dec
mov
pause
pop
dec
jmp
pop
or
scas
dec
repz
orl
cmp
mov
jbe
mov
out
lds
push
int3
inc
mov
idivb
mov
pop
inc
cmc
movsb
stos
ja
out
test
les
repz
pop
roll
lods
test
mull
gs
clc
rclb
and
cwtl
loope
mov
ds
mov
out
mov
in
lahf
test
xchg
cmc
fldl
pop
hlt
shlb
outsl
in
ja
jbe
inc
adc
bound
fistps
pop
add
dec
cmpl
cltd
ljmp
pop
cwtl
mov
and
leave
sbb
addr16
push
push
and
mov
sahf
mov
cmp
jecxz
imul
jecxz
inc
fxch
lea
xor
or
pop
call
imul
mov
outsl
jo
adc
lcall
cmp
cmp
aas
mov
mov
dec
sbb
cmp
outsl
inc
xchg
repz
cli
stc
in
shr
cmp
pop
shlb
fistl
mov
xchg
jno
iret
and
cli
arpl
hlt
repnz
dec
ljmp
cmp
fwait
xor
cltd
and
shrb
in
jle
mov
sbb
and
jle
jb
push
xchg
mov
in
fistps
xlat
in
cmpsb
pop
add
insl
enter
xor
fsub
mov
fldcw
test
dec
std
and
mov
inc
or
pop
pushf
mov
stos
paddb
test
mov
ss
push
pop
addl
imul
add
pushf
testl
pop
je
jo
int3
mov
mov
add
stc
jno
fdivl
push
aad
pusha
das
mov
in
arpl
jg
adc
push
mov
push
mov
cmp
jecxz
out
lds
imul
pop
adc
push
jbe
out
dec
out
aaa
in
mov
stos
and
lret
mov
pop
popf
icebp
inc
push
push
into
cmpsl
mov
add
jbe
fistps
mov
cmp
or
and
mov
jl
mov
mov
pop
orl
call
fdivl
pushf
adc
mov
add
cld
pushf
loop
xchg
add
aam
mov
jg
xlat
loopne
sub
dec
fcmove
mov
push
arpl
mov
cmpsb
jecxz
mov
jg
mov
inc
xor
int
ljmp
add
ss
loopne
fld
dec
adc
cmp
sbb
fimuls
in
or
push
jns
mov
and
cmp
xlat
jnp
push
in
fmull
jge
mov
xchg
dec
push
mov
std
sub
adc
xor
sbb
iret
xchg
clc
xchg
push
dec
in
cld
mov
xchg
notb
outsb
scas
jbe
roll
jle
jg
jge
std
dec
inc
imul
ffree
jecxz
sbb
mov
dec
pop
sub
sub
lret
xor
dec
pop
gs
inc
loop
mov
mov
add
cmp
pop
jne
or
sub
push
mov
fisubrs
inc
cld
cld
xchg
jecxz
mov
mov
sub
mov
mov
fisubl
cltd
pop
push
scas
pop
mov
xor
inc
mov
add
nop
mov
leave
int
test
cmc
xor
andl
mov
and
mov
jle
popa
scas
fucomi
xchg
push
lret
sbb
inc
call
cltd
sbbb
adc
mov
sub
scas
adc
sbb
dec
push
or
cwtl
imul
nop
aam
clc
mov
add
ret
shr
repz
push
xchg
cmc
mov
add
push
dec
mov
jae
or
in
cmp
xchg
lods
jl
cmp
aad
mov
xchg
inc
cli
adc
mov
jb
pop
dec
sahf
leave
insb
shll
or
outsl
mov
cmpsb
je
cwtl
xchg
push
fcmove
outsb
push
pop
sub
mov
lods
out
call
repnz
mov
mov
shl
movsb
or
test
lcall
xor
or
pop
rcrb
in
mov
push
sbb
mov
nop
jo
or
dec
cmp
imul
jg
jmp
mov
subl
fs
lahf
test
xor
inc
cmpl
leave
nop
cmp
mov
cld
push
aas
xchg
sbb
xor
cmp
stc
idivb
or
inc
pop
inc
dec
mov
cmpl
out
ljmp
lock
pop
lds
cmp
lcall
mov
push
int3
jo
dec
add
pop
pop
lods
and
adc
lcall
inc
daa
rorl
mov
xchg
cmp
outsl
jo
inc
aam
push
add
repnz
push
adc
fisttpl
cmc
add
imul
and
dec
xchg
jmp
xor
jbe
sarl
frstor
testb
js
pushf
lret
imul
sti
aad
mov
mov
imul
pop
arpl
cld
test
mov
cmp
outsl
cwtl
or
and
icebp
mov
test
sub
sbb
or
fwait
or
xorb
pop
jno
jo
and
inc
jns
adc
xor
cmc
jno
mov
lcall
imul
sub
nop
shll
loopne
shll
popa
push
stos
lahf
push
pop
mov
clc
out
int
jbe
sub
xchg
iret
and
cs
mov
sub
or
jnp
imul
ja
enter
jb
cmpsb
ret
enter
je
jb
push
dec
dec
xor
mov
sbb
hlt
cmc
xchg
cwtl
test
mov
jno
fld1
mov
inc
pop
add
lods
sub
stos
cld
scas
mov
ja
fistl
adc
ja
adc
cmpsb
sub
scas
pusha
out
dec
pop
in
fcmovbe
xchg
cld
sarl
idiv
adc
push
mov
int
or
push
mov
dec
push
call
push
add
in
iret
inc
cmc
push
pop
dec
imul
push
icebp
dec
jo
push
jge
adc
movsl
icebp
insl
jnp
lods
or
mov
arpl
push
and
cltd
stc
jecxz
mov
cmp
clc
rclb
and
and
call
lods
xchg
xchg
outsb
mov
fisubrs
mov
pushl
cmpsb
mov
pop
lock
xchg
cmp
bound
in
fdivrs
xor
lret
test
add
mov
sub
mov
mov
fcmove
xchg
push
push
mov
ret
leave
jl
add
xchg
lock
fdivrs
add
adc
out
mov
test
ret
or
xor
ja
aad
ficoms
inc
xchg
arpl
scas
lahf
push
lret
mov
cmp
ja
sbb
adc
jg
jge
cmp
mov
inc
dec
call
pop
jecxz
mov
push
loope
fldl
cli
mov
or
xchg
adc
mov
fwait
popf
dec
cmc
rclb
in
subb
add
cmp
movsl
pusha
aam
jmp
fsubs
inc
clc
mov
cltd
lret
sahf
scas
push
in
xchg
icebp
and
cmc
fwait
fwait
mov
cwtl
and
arpl
lret
cmc
cmpsl
mov
stos
in
dec
imul
add
in
pop
xor
inc
repnz
push
jmp
jnp
out
loopne
outsl
nop
int3
lods
nop
push
hlt
shl
aas
sbbb
adc
pop
lock
pushf
hlt
add
gs
cmp
mov
sub
mov
mul
fisubl
rcrl
mov
bound
sub
push
lea
add
xorb
cmp
pop
or
push
icebp
add
arpl
je
jns
mov
push
sbb
adc
xor
aad
mov
ds
xor
xchg
adc
xchg
cmpsl
sub
inc
xorb
jl
pop
repnz
pop
cmpsb
pop
push
inc
add
and
lock
add
jae
xor
and
notl
mov
xchg
pusha
or
outsl
addl
xor
sbb
push
inc
int
xchg
pop
push
rorb
xor
shl
or
cmc
lock
ret
fcoml
jns
lahf
and
jo
sub
cmp
shl
ja
push
push
and
and
test
call
loopnew
lock
push
mov
hlt
jecxz
popf
mov
xchg
add
push
mov
cld
mov
cld
out
into
xchg
shr
jb
dec
xchg
xchg
rclb
mov
sarb
or
roll
es
sub
mov
pop
shll
push
adc
mov
pop
dec
inc
inc
jecxz
push
sti
pop
push
movsb
jns
mov
mov
mov
mov
and
int3
daa
jmp
and
or
lcall
mov
movsb
fbld
dec
mov
movsb
stc
inc
add
pushf
mov
jo
sub
and
jnp
rol
gs
xor
mov
mov
enter
cwtl
jae
sbb
fldt
and
inc
clc
mull
push
adc
cmp
xchg
sbb
and
lods
xor
imul
les
sbb
mov
repnz
jmp
adc
lods
xchg
cmp
jb
push
sbb
addr16
mov
pop
add
call
hlt
outsb
adcl
push
jnp
test
xor
int
loopne
cmpsb
jmp
xor
stos
pop
adc
sub
xchg
icebp
fildll
inc
stos
cmp
iret
jno
leave
iret
xchg
shlb
cmp
add
test
test
addb
jg
cld
xchg
sub
ret
cltd
subb
dec
pop
mov
movsl
or
arpl
mov
mov
roll
ja
lahf
sti
pop
hlt
adc
fcmovbe
rclb
int
pop
mov
add
adc
ja
nopl
jmp
adc
bound
repz
fcompl
test
aad
push
test
stos
faddp
sahf
and
divb
xchg
push
in
or
mov
les
addr16
fldenv
dec
pusha
or
ret
out
mov
or
cmp
lock
outsl
dec
cmp
mov
movsb
es
pop
jl
dec
jo
xor
rclb
push
push
pop
enter
fxch
jnp
dec
sbb
or
imul
pop
push
scas
and
push
dec
test
lods
sahf
shufps
add
insl
scas
sbbb
sub
sarb
aad
push
ss
xor
adc
xchg
cld
insl
cmp
leave
popa
nop
mov
jl
out
aas
or
ss
xor
sbb
push
xlat
orl
inc
jns
push
outsl
and
in
jl
imul
cmp
pop
out
or
dec
lcall
shrl
icebp
fnstsw
test
push
andb
push
push
sub
arpl
jno
dec
push
sub
mov
mov
or
cs
cld
pop
sub
int3
aad
xchg
sub
mov
inc
in
xchg
or
sub
lahf
mov
fldt
mov
lds
sarl
rcl
xor
inc
sub
sbb
cmp
insb
mov
int3
and
addr16
xorb
and
popf
dec
cltd
lret
das
lock
test
mov
subl
cmp
cmp
loopne
mov
sahf
outsb
aad
push
or
or
jmp
push
repz
out
mov
dec
push
clc
sub
jg
mov
sbb
test
mov
jle
mov
adc
or
jne
icebp
lcall
fistl
and
imul
nop
mov
sub
push
shlb
xchg
mov
jb
sub
cli
sub
adcl
inc
xchg
adc
cmpsb
out
cmp
stos
sahf
add
nop
nop
int
dec
int3
fs
push
fcoms
dec
lods
icebp
pusha
inc
jae,pt
lods
jle
ljmp
ret
ja
xor
es
mov
pop
js
push
mov
mov
notb
outsb
cwtl
or
xchg
sti
jl
lods
cld
out
fsubrl
iret
mov
scas
sbb
adc
xchg
cmpl
movsb
into
sbb
ss
popa
pushf
mov
adc
daa
pushf
mov
add
iret
in
sti
rolb
dec
sbb
or
out
mov
stos
sub
pop
xchg
movsl
mov
lahf
pop
xchg
mov
cltd
add
jbe
clc
shrb
enter
or
jnp
lea
js
sahf
sbbb
jecxz
adc
or
insl
es
inc
xchg
lods
call
sub
xchg
clc
pop
enter
sub
fiadds
mov
xchg
cmp
mov
int
pop
out
adc
iret
sub
in
lahf
mov
scas
or
mov
dec
inc
es
pusha
adc
pop
stos
std
jmp
stos
jb
mov
mov
aas
test
andb
sti
lret
aam
pop
in
shr
das
jb
jg
repz
stos
rcrl
sub
das
mov
insl
ja
movsb
test
test
mov
push
dec
mov
fsubrs
jnp
fistl
xor
ljmp
mov
ljmp
jl
adc
jp
xchg
scas
cmpsb
jno
mov
push
je
cli
repz
dec
insl
lds
cld
out
lds
dec
shrl
push
js
mov
ja
subb
ret
mov
mov
aam
xchg
insl
dec
inc
jo
repnz
in
repnz
push
rol
push
ss
inc
fwait
push
aad
mov
data16
mov
cli
fcompl
pop
xor
xlat
int3
dec
mov
pop
subl
sbb
push
adc
mov
sbb
sub
pushf
stos
leave
les
or
arpl
es
add
bound
aas
popf
arpl
jae
shrb
cs
mov
push
mov
cmp
out
out
jmp
push
push
push
jecxz
loop
imul
xchg
ds
enter
rcr
int
pshufw
or
ret
push
cltd
adc
gs
out
ja
call
push
or
push
scas
or
cwtl
adc
jmp
xlat
jno
aaa
loopne
mov
jp
divb
cmp
pushf
aaa
push
cld
push
add
cmp
sub
sub
jno
mov
in
sub
dec
icebp
mov
dec
out
lea
movsl
cli
incb
mov
lds
jne
movsb
pop
mov
ja
sti
pop
pop
stos
aam
push
push
fwait
jge
test
jo
stos
jecxz
leave
nop
xor
int3
pop
mov
push
imul
push
cltd
or
adc
sbb
xchg
mov
cmpsl
dec
xchg
int3
inc
xor
aas
xchg
add
pop
fisttpll
or
xchg
daa
mov
push
insl
dec
stos
lret
push
mul
and
xchg
push
lret
push
and
push
adc
jne
xorl
insl
pushf
lahf
push
mov
dec
out
sbb
dec
jnp
ds
lgs
inc
push
push
cmc
jb
mov
push
inc
and
xor
movsl
cltd
cld
stos
xchg
mov
cld
mov
xchg
cmpsb
jge
cmp
inc
or
dec
popa
fs
adc
repz
test
mov
aam
icebp
adc
clts
xor
push
imul
sub
pop
mov
sahf
or
add
sub
cmpsl
dec
pushf
pop
fsubrs
insl
xchg
cmp
int
pushf
pop
pop
lahf
dec
stc
xchg
fisubrs
mov
jb
in
adc
aas
xchg
add
jno
adc
data16
cld
fsubrl
xchg
xchg
cmp
add
jbe
dec
jecxz
inc
xchg
and
movsl
cmc
divb
insl
add
insl
sbbl
push
imul
and
ds
cmp
nop
xor
mov
jg
cld
dec
bound
add
sbb
lea
mov
push
and
mov
mov
hlt
fwait
sbb
mov
fldcw
mov
inc
lcall
mov
stos
pop
movsl
sub
xchg
cltd
popf
push
cmp
xchg
xor
stc
aam
mov
adc
cmpsb
addr16
jne
popa
jl
ror
mov
push
pushl
push
sti
int3
push
mov
or
aas
adc
adc
lock
push
push
xlat
scas
ds
push
xchg
int
mov
ds
outsb
mov
in
cs
xlat
cld
xchg
adc
insl
pop
cmp
outsl
in
xlat
into
sar
lods
rcrl
stc
pop
mov
add
lods
push
test
rol
int3
mov
andb
cmc
sbb
xchg
or
dec
mov
adcl
rol
mov
arpl
and
push
sub
iret
jnp
adc
das
sbb
sub
rol
lcall
dec
push
imul
sbbl
inc
xor
dec
push
mov
or
xor
pop
call
into
or
clc
cmp
mov
icebp
jnp
xchg
add
lock
pop
test
icebp
mov
jbe
jno
movb
mov
in
add
push
cmp
and
push
repz
jne
xchg
lret
mov
scas
clc
popf
add
out
sbb
clc
sub
cmp
jno
mov
pop
cld
adc
pop
filds
inc
sub
out
stos
push
test
pop
in
add
lcall
dec
dec
fldl
push
sub
jmp
std
out
and
mov
cmp
dec
add
mov
mov
lds
imul
push
inc
addb
mov
das
add
mov
jg
jae
push
mov
out
jno
mov
mov
inc
sub
das
mov
scas
xchg
cmp
int3
insl
and
aaa
xchg
push
mov
mov
lods
nop
lret
arpl
leave
aas
push
sbb
mov
mov
fwait
outsl
sysret
push
sub
xor
int3
xor
inc
bound
or
pop
icebp
adc
cmpsl
xlat
in
xchg
jl
push
sbb
leave
icebp
js
xchg
iret
fsubrs
jl
enter
xor
add
mov
ret
clc
rcl
sbb
inc
stos
rcr
fmul
dec
push
push
rcll
in
or
mov
push
sub
mov
cs
lock
push
das
call
imul
mov
or
loope
insb
sbb
xchg
test
nop
add
jb
insl
push
adc
icebp
lods
pop
mov
arpl
les
inc
add
mov
in
mov
cmp
int
add
lcall
or
pop
jl
fisttpll
add
jnp
or
add
jmp
testb
out
cmc
mov
cs
jae
repnz
jle
mov
sti
aam
mov
frstor
fimull
mov
add
push
pop
aam
xchg
sbb
rorb
movl
xchg
inc
adc
out
bound
mov
add
pop
sbb
or
push
rcrl
fs
bound
sbb
inc
orl
pop
cmpsb
sub
pop
cmpsl
and
cmpl
movsb
add
std
pop
mov
adc
pop
add
mov
mov
sbb
sub
cmp
andb
rcrb
int
add
push
shlb
mov
cld
xorl
mov
fwait
std
cmp
sub
sti
stos
dec
sub
mov
shlb
daa
xchg
mulb
imul
aam
ror
jecxz
xlat
mov
shr
cmc
lahf
adc
aad
adc
add
jecxz
mov
xor
mov
cmp
sub
popa
test
adc
mov
stc
repz
push
dec
adc
inc
inc
out
in
lea
cmp
ret
ja
movl
popf
mov
mov
mov
xor
mov
ja
mov
jg
test
inc
loop
lds
fwait
mov
xchg
xchg
xorl
xchg
xchg
movsb
ret
pop
dec
cmp
pop
sub
jge
shrl
out
scas
fdivrs
lahf
mov
and
pusha
daa
mov
fldl
inc
adc
jecxz
je,pn
mov
pusha
mov
imul
or
or
lahf
idivl
fisttps
in
lcall
cld
inc
cmpsl
sarb
aam
jl
jmp
xlat
xchg
lahf
xchg
jb
ret
sub
in
repnz
mov
adc
inc
sti
and
cld
jecxz
nop
scas
and
jle
mov
cld
pusha
sahf
nop
pop
push
mov
outsb
xchg
dec
push
ja
lock
arpl
clc
pop
test
popl
jbe
sbb
adc
cld
stos
mov
cwtl
pop
lahf
in
dec
hlt
in
testl
jmp
cmp
and
push
add
dec
inc
into
pop
inc
or
addl
popa
notb
sbb
cmp
cli
sahf
negb
pushf
mov
cli
cmp
cli
mov
test
jp
repz
cwtl
adc
or
push
vpcomud
js
mov
in
and
sbb
sub
push
movsl
lret
jle
sbbl
cwtl
dec
in
jle
or
ja
add
inc
or
xchg
andb
xchg
mov
inc
arpl
idivl
test
pop
xor
cmp
jns
dec
into
inc
in
or
xchg
outsl
lock
loopne
jno
std
shll
sbb
mov
pop
and
pop
imul
mov
call
mov
push
push
or
and
and
fldl
inc
adc
daa
movsb
xchg
sahf
jae
cmp
js
mov
mov
mov
je
sbb
cmp
loopne
and
imul
jecxz
jg
adc
nop
scas
fimuls
or
jecxz
mov
ljmp
pop
and
inc
js
fwait
mov
xchg
xor
and
js
outsb
in
and
jb
stc
rorl
pop
adc
test
mov
jg
or
xchg
rolb
ja
into
dec
repz
insl
dec
popa
xchg
les
dec
cltd
es
add
fisubrl
nop
mov
sbb
fistps
fwait
sbb
cmpsl
repnz
dec
cmp
dec
ss
and
cmp
push
cmp
cmp
dec
mov
mov
ljmp
add
enter
fwait
insb
lcall
mov
push
sbb
lret
in
rorl
xor
jb
adc
addl
fwait
mov
sub
push
rcll
rcll
lret
sub
mov
pushl
mov
pop
jecxz
cmp
push
gs
pop
xor
and
test
fcompl
cmp
xor
xchg
aas
mov
stc
in
sub
aam
dec
out
push
fs
mov
adc
ffreep
mov
aad
scas
sub
push
movsl
fisubrs
mov
pop
jnp
pop
sub
shl
repz
icebp
xchg
andl
fcomps
mov
popf
sub
adc
dec
popf
pop
fwait
cmp
into
mov
scas
xor
pop
jmp
hlt
rcll
or
addb
aad
cmp
pop
mov
adcl
loop
cs
hlt
je
add
pop
fstpt
repnz
xchg
or
mov
mov
mull
fs
mov
into
clc
ja
fsts
cwtl
lods
xchg
jecxz
mov
push
imul
cmpsl
ja
mov
call
push
imul
pop
push
or
daa
dec
pop
dec
mov
mov
pop
inc
cld
or
or
cmp
jecxz
cs
cwtl
cmc
lods
dec
pop
dec
loopne
add
fwait
mov
ret
bound
cwtl
std
js
dec
lods
sub
jne
and
cmp
frstor
jns
stos
pop
cmc
mov
or
pop
je
sbb
dec
lcall
into
stos
repnz
je
and
adc
popa
ret
pusha
lock
mov
scas
loope
xchg
in
mov
mull
lahf
dec
pop
aas
pushf
sbb
mov
jl
faddl
insl
xchg
mov
jge
dec
test
add
cmpsb
test
mov
outsl
and
mov
test
fisttpl
rcl
cmpsb
mov
dec
xchg
cmp
jb
mov
pop
fisubl
mov
mov
push
and
je
lret
ja
into
rcr
pop
lock
add
add
clc
test
push
jge
cmp
push
sub
sub
cwtl
pop
rclb
or
shl
push
call
mov
test
sbb
jg
lds
pop
mov
mov
push
mov
inc
mov
ljmp
cmp
and
or
outsb
jp
int3
push
pop
rcrb
inc
adc
cli
mov
dec
and
cmp
xchg
mov
inc
mov
cltd
push
cs
jnp
xor
loopne
add
or
mov
cmp
adc
pop
add
loopne
call
je
gs
movsb
xor
outsl
mov
push
dec
push
jb
and
mov
jb
pusha
push
imul
je
mov
jg
mov
push
fnstcw
inc
aam
cmp
sub
dec
mov
aas
les
ljmp
jg
shrl
or
aam
add
stos
cmp
ret
add
pop
push
xchg
rcrl
push
bound
inc
cvtps2pi
mov
xchg
test
cmp
pop
call
sub
jecxz
popa
mov
call
jmp
das
push
into
in
or
inc
stc
push
out
and
xchg
fs
or
push
cmpsb
mov
out
repz
jb
sbb
jo
jnp
inc
push
push
mov
push
sbb
or
or
push
mov
xor
dec
sbb
and
mov
push
leave
push
add
lds
cltd
inc
and
aas
sub
popl
add
iret
adc
xor
cmp
or
popa
outsl
cli
test
cmp
and
xor
std
adc
push
adc
out
inc
imul
add
jns
loop
iret
cmp
jle
cmpsl
push
inc
fadds
lret
and
add
bound
pushf
mov
adc
mov
and
mov
and
in
mov
leave
arpl
jnp
loope
int3
mov
mov
push
xchg
mov
xchg
dec
stc
ljmp
data16
add
mov
cmpsb
inc
pusha
adc
cmp
decb
jns
xor
mov
pop
or
test
mov
jmp
sub
ss
fwait
test
repnz
cs
insb
imul
cmp
dec
frstor
pushf
pop
dec
bound
pop
loop
cli
mov
in
loopne
or
push
divl
mov
sub
data16
adc
add
stos
cmpsb
addr16
int
adc
fisttps
mov
lahf
loopne
sar
iret
dec
inc
mov
subl
repnz
ret
into
inc
or
xor
stos
stc
jl
and
inc
and
fdivrl
mov
xchg
xor
fildll
mov
pushw
add
mov
sub
push
fs
into
pop
int
pop
cli
xchg
mov
test
sbb
fwait
and
adc
pop
cmp
or
mov
hlt
cmp
scas
cld
inc
test
cmc
adc
out
jo
gs
out
sti
jo
enter
xchg
stc
lret
jbe
mov
stos
pop
xorb
mov
movsl
jmp
repnz
mov
jns
cmpsl
jae
fsubrs
xor
pop
cmpsb
pop
inc
xor
mov
mov
fadd
add
repz
pop
mov
pop
pop
mov
jmp
jne
fwait
inc
mov
or
rol
pop
scas
pop
dec
sbb
or
lds
jne
ret
inc
test
jbe
jecxz
loopne
into
pop
cli
negb
enter
cmpsl
pop
push
xchg
push
insl
roll
or
les
mov
sbb
xchg
stos
dec
xor
mov
in
jecxz
dec
add
pop
push
sbb
les
fistpll
pop
lahf
cmpl
les
pop
push
cmp
sub
fnstenv
and
mulb
addb
int3
ljmp
mov
mov
add
xchg
fistpll
push
int
shlb
jno
push
xor
mov
in
fistps
pusha
push
mov
mov
cld
jge
add
je
push
push
jecxz
in
lods
clc
dec
dec
sahf
hlt
movsl
add
mov
or
scas
ret
dec
and
stos
xchg
sarb
dec
inc
jo
xchg
lea
pusha
loope
and
stos
xlat
jbe
outsb
jmp
pop
aaa
int
mov
lods
lret
adc
jnp
fistps
jmp
jecxz
call
push
dec
int
cmp
out
jbe
add
dec
into
mov
cld
jne
jb
xchg
aas
jo
pop
outsl
xchg
mov
mov
push
rcrb
xor
scas
inc
sbb
cmpl
push
mov
jl
push
cmpsb
lcall
inc
ror
data16
and
sbb
cmpsl
cwtl
add
notb
xchg
mov
ljmp
xchg
fcompl
and
lahf
push
xchg
and
inc
add
es
jmp
adc
addr16
xorb
fcoms
push
icebp
dec
xor
xor
fisttpll
out
sti
loopne
fistl
arpl
scas
inc
xor
push
jge
xchg
add
adc
sbb
fwait
cld
aam
cmp
xchg
dec
mov
outsb
mov
push
push
fsub
cmp
jecxz
or
add
outsb
xchg
and
into
inc
fsubs
test
xchg
mov
xchg
les
fstpt
push
inc
push
mov
cli
sub
rorb
clc
fcomip
add
gs
pop
out
stc
data16
pop
leave
insb
add
adc
push
adc
ret
cmp
sahf
mov
pop
and
push
or
mov
sbb
insb
jns
jge
stc
inc
lahf
mov
and
cmp
jl
outsl
les
enter
int
lahf
or
push
enter
or
out
jnp
insl
mov
cld
jns
mov
cli
loopne
xor
ud0
ja
aad
mov
xor
leave
pop
xor
jg
mov
push
fwait
lds
xor
mov
aad
daa
insb
imul
bound
pop
mov
shrd
ss
inc
je
adc
jnp
movsb
pusha
pop
push
ret
xor
inc
xchg
nop
call
xchg
mov
dec
fdiv
js
mov
mov
pop
clc
pop
fisttpll
lods
push
imul
push
or
pop
xor
jmp
in
test
adc
fyl2x
pop
stc
inc
divb
sub
inc
icebp
call
push
outsl
add
adc
mov
inc
push
loopne
xchg
loop
or
outsl
jecxz
lahf
aam
push
mov
gs
inc
cld
test
inc
mov
adc
mov
or
sbb
xlat
dec
arpl
xor
jbe
movsb
imul
adc
mov
andb
cld
imul
insl
icebp
xchg
dec
shl
inc
add
dec
sbb
cmpsl
ffree
dec
mov
xchg
jmp
clc
jge
stc
pop
loop
dec
jp
cltd
scas
sub
xchg
ljmp
cltd
sbb
std
jae
jle
cmp
outsb
sti
fildll
and
ljmp
in
imul
dec
insb
popa
mov
stos
in
out
mov
xchg
mov
jo
jmp
mov
jae
adc
stc
xchg
lea
and
es
mov
nop
test
movsl
pop
adc
aas
pop
dec
xor
or
sti
ss
push
jge
pop
rorb
pop
push
cmp
xor
dec
xorl
int3
inc
mov
cmp
or
movsb
jbe
sub
sbb
test
xchg
push
shll
xor
int
pop
scas
ficomps
mov
xlat
jecxz
fists
mov
jo
adc
and
jno
mov
andl
or
sub
loopne
cld
push
stc
pop
pop
jbe
or
mov
pop
in
adc
pusha
cmp
dec
mov
mov
mov
xchg
test
and
xchg
jne
rcl
mov
sti
in
jmp
dec
jno
xchg
fsts
push
mov
pushf
bound
loop
jbe
aas
testl
popa
mov
es
jne
fadds
push
mov
ret
cmp
js
or
lret
sbb
test
andl
or
fsts
add
jl
js
xchg
in
scas
pop
mov
xor
scas
lock
pusha
cltd
cmc
and
out
pop
aad
xor
test
ja
addr16
jae
push
cmp
inc
jl
bound
inc
mov
ret
xor
xchg
in
lods
sahf
sarl
movsb
mov
mov
cltd
insb
cmp
xchg
add
pop
fdivrs
xchg
dec
int
mov
mov
and
ret
test
inc
orl
sbb
mov
call
scas
sarb
ss
xor
subb
sub
inc
lods
xor
cli
mov
xchg
std
cmp
pop
and
jle
xchg
fnstsw
fists
leave
and
stc
cmp
loopne
adc
imul
sbb
push
dec
mov
in
out
mov
xor
decl
das
xchg
enter
mov
out
jle
pop
mov
sub
ds
and
xchg
popa
into
sub
aad
bndstx
ss
imul
sbb
daa
sbb
xor
sti
inc
popf
sbb
stc
sub
dec
mov
inc
adc
out
imul
lahf
sub
xchg
aas
ljmp
mov
dec
and
inc
jo
sub
fsubrs
xor
push
out
inc
jg
cld
add
les
mov
aad
pop
add
out
xchg
mov
pop
xchg
pop
jge
dec
fisubs
aad
daa
xchg
jmp
xchg
insb
xchg
sub
ss
test
xor
stos
aaa
push
addr16
dec
mov
jge
pop
mov
sbb
int3
pop
imul
mov
inc
xlat
pop
push
mov
out
scas
sbbb
add
jp
and
aaa
add
sbb
adc
mov
xlat
aas
dec
add
outsb
subl
mov
jns
inc
sti
xchg
sub
sbb
in
adc
mov
pop
fmull
out
movsb
xchg
cmpsl
sbb
outsb
mov
sub
ljmp
xor
mov
out
jo
xor
cld
add
sbb
out
dec
push
lods
icebp
ffreep
push
clc
pop
xchg
jmp
sbb
push
fistpll
push
push
mov
push
and
dec
mov
mov
add
dec
loope
lret
es
adc
sub
shrb
pop
stos
cwtl
sub
lret
fidivrl
out
mov
stos
popf
loope
or
pop
je
int3
push
jmp
or
scas
dec
ret
pop
sbb
loop
sub
mov
or
jns
inc
mov
movsl
jecxz
or
mov
repz
mov
sbb
add
xchg
daa
mov
jb
inc
imul
popf
inc
fistl
or
addr16
adc
adc
xchg
stc
mov
loopne
mov
adc
mov
mov
add
stos
fs
rdtsc
ljmp
sub
add
sub
and
test
push
xchg
sub
fs
test
movb
adc
js
movsl
cwtl
dec
push
mov
jne
loopne
fs
jbe
pusha
aaa
jmp
popf
in
lahf
inc
sub
sub
add
insl
pop
mov
es
cs
sub
push
cmp
leave
pop
inc
ret
add
add
jl
in
mov
xadd
lret
add
out
cmp
sbb
or
jle
jg
flds
mov
or
inc
movb
lahf
shlb
addr16
mov
sbb
xchg
ret
je
faddp
xor
inc
inc
xor
js
sarb
xor
adc
insl
sub
out
xor
daa
int3
lahf
lods
add
mov
cmp
sbb
add
addr16
in
cmpsl
push
movsl
icebp
cmp
inc
xchg
sbb
fsubrs
fmuls
jmp
into
cwtl
out
cmp
adc
jle
outsb
mov
xchg
push
dec
push
test
mov
xchg
jnp
sub
sub
push
gs
shr
and
cmp
dec
fsubrl
inc
push
mov
fisttps
dec
int
shl
fidivrs
call
fistps
cmp
mov
adc
pusha
cwtl
mov
push
inc
stos
push
push
nop
xchg
lahf
sub
sbb
nop
arpl
inc
mov
bound
js
mov
subb
add
ret
inc
loop
xchg
mov
cmp
mov
dec
inc
aas
mov
adc
pop
adc
into
lahf
outsb
sbb
jmp
stc
cmp
xlat
aad
mov
out
pusha
mov
mov
jb
rorl
dec
roll
cmpb
xlat
adcb
adc
cmp
cmpsl
ret
es
popf
arpl
xchg
dec
shlb
add
and
dec
dec
xchg
bnd
pusha
decb
sbbl
sbb
cmpb
js
fldl
loop
leave
call
xchg
sar
outsl
ljmp
push
mov
mov
mul
sbb
cwtl
in
je
loop
sbb
int3
jge
cmp
cmp
pop
lock
push
outsb
scas
mov
xor
push
xchg
aaa
dec
lea
or
cmpsb
or
pop
dec
call
insl
ss
aaa
pop
lret
mov
int3
or
add
in
leave
sbb
in
jo
ficoml
pop
xchg
pop
pop
movl
jge
sarl
jp
lcall
xchg
mov
dec
mov
lcall
call
fimuls
insb
dec
cmp
cmpsb
pop
ds
xlat
xchg
cmp
aam
sub
inc
jg
movsb
loope
mov
popa
cmpsb
cmpsb
fsts
xchg
fldt
lods
dec
push
ljmp
mov
jmp
sub
enter
lcall
fstpl
mov
fisttpl
pop
lret
aaa
push
pop
ja
fidivl
jb
mov
sbb
xchg
jecxz
mov
xor
in
popf
inc
ficompl
or
xor
out
into
ret
in
sbb
sub
int
test
scas
pcmpeqb
jnp
test
loop
sbb
push
ss
fsubrl
fmul
jns
pop
mov
mov
sub
pop
stc
es
add
dec
test
lods
jnp
mov
pop
dec
into
and
xor
stos
fdivs
imul
sahf
dec
sahf
push
jp
in
xchg
movsb
je
jb
int
xchg
jmp
ret
jmp
in
fldt
stc
mov
lds
sbb
or
sub
mov
mov
fstpl
push
fdivrl
lea
jns
gs
cmp
mov
push
mov
lret
out
xor
mov
fnstsw
cmp
fmulp
push
xor
inc
mov
rorl
and
cltd
insb
test
cwtl
ss
pop
xor
adc
mov
cmp
jecxz
je
push
imul
mov
mov
sub
cld
aas
test
mov
sub
dec
shl
mov
dec
mov
mov
repz
lds
mov
mov
xchg
lret
rclb
pop
lods
cltd
sub
sti
cltd
xor
mov
jo
clc
pop
dec
push
xchg
mov
sub
stc
les
pop
pushf
dec
jo
stc
sbb
jae
out
stos
fsub
push
ss
pop
loope
xlat
pop
sahf
jbe
fwait
ljmp
fdiv
scas
int
jge
push
cwtl
sbb
xor
in
push
mov
lret
pushf
lret
mov
xchg
roll
hlt
sahf
xchg
ljmp
pop
add
dec
loope
ljmp
imul
out
jl
or
inc
fistps
mov
insl
test
dec
clc
jecxz
and
inc
mov
and
lcall
ficoml
sbb
cltd
rep
arpl
cmc
sub
mov
outsb
fstpt
mov
pop
jg
mov
in
dec
out
imul
pop
inc
or
jb
jecxz
aad
add
ss
mov
xchg
sub
mov
lea
adc
cmp
sahf
in
pop
and
cs
sub
jno
stos
pop
ljmp
ret
xor
shlb
push
bound
adc
mov
out
mov
add
popf
out
dec
mov
xchg
outsb
inc
ret
nop
xchg
in
add
sbb
jmp
pop
add
mov
cmp
push
xchg
jo
cmc
xlat
push
dec
js
popa
add
divb
pop
addr16
cld
sahf
aad
inc
int3
mov
sub
or
ja
cmp
cld
dec
dec
xchg
pop
mov
jns
lret
dec
sbb
mov
arpl
dec
mov
inc
mov
pop
cwtl
mov
fdivl
jl
jmp
out
stc
xchg
loope
push
push
cwtl
insb
js
mov
enter
ret
sar
adc
jg
jl
call
out
loope
add
test
push
jno
scas
gs
testl
nop
jmp
push
shrb
add
jbe
cmpsb
aaa
stc
sbb
pop
sbb
mov
sub
sub
add
or
xorb
mov
ret
in
mov
sbb
inc
loopne
stos
dec
lds
sub
outsb
popf
cmp
sbb
mov
mov
cmp
mov
lods
push
test
adc
ret
mov
inc
lds
nop
inc
jb
out
cmp
pop
and
aaa
mov
jb
int3
iret
sub
xor
ss
cltd
lcall
mov
xor
and
incl
ds
inc
or
mov
pop
shrl
pop
or
jb
aam
mov
fdivrl
jl
cmpsb
push
shld
pop
xor
jnp
sbb
es
push
mov
mov
aad
in
jge
in
dec
pop
iret
xchg
fildl
xchg
xor
push
pop
insb
js
xor
push
push
jge
mov
dec
jo
lret
out
cmpsl
aam
call
test
sahf
or
int
cmp
dec
fisttps
imul
fdivrl
icebp
test
in
inc
sub
sarl
mov
movsl
out
push
xor
push
sub
lods
push
dec
test
stc
in
popf
push
cmp
testl
sub
mov
jnp
xchg
pusha
jle
loope
sub
lods
mov
stos
fsub
aad
pop
sahf
out
insl
rcrl
xor
std
outsb
and
sub
xchg
mov
mov
in
test
sub
jg
outsb
out
mov
rcrl
pop
loop
cs
mov
scas
pop
pop
scas
mov
lcall
std
mov
xchg
sbbb
aam
jge
aas
testl
pop
movsb
xor
lret
inc
aam
xchg
cmp
sbb
pushf
test
cwtl
sti
xor
jl
xchg
sub
pop
cmp
pop
mov
sub
push
pusha
rcl
mov
sub
and
je
push
sbb
dec
jl
loope
aam
mov
cmp
jecxz
adc
xchg
mov
inc
jne
cmp
pop
jne
ss
add
dec
movsl
cwtl
ljmp
xor
jp
ret
int3
pusha
jg
sbb
add
jbe
imul
inc
sub
sub
push
call
fistpl
movsl
call
dec
clc
cs
sub
inc
pop
decl
xor
out
cs
fcmovnb
inc
mov
xchg
push
pop
lea
sbb
loopne
cmpl
jb
cmc
pop
std
pop
and
sbb
hlt
mov
add
or
xchg
addb
fbstp
addr16
addb
push
inc
orb
fstps
pop
cmp
imull
ja
and
xchg
cmp
sbb
or
pop
xchg
adc
pop
or
lahf
mov
jb
imulb
or
daa
pop
xor
push
push
insl
sbb
shrb
mov
mov
jbe
int
out
fs
cmp
rcrl
aas
es
xor
xchg
xchg
bound
pop
adc
mov
loope
jg
pushf
addb
decb
push
and
or
aaa
ljmp
push
test
bnd
add
mov
shll
cmp
sub
fnstenv
enter
dec
sbb
xor
in
xchg
mov
imul
leave
movq
jo
inc
rorl
lock
in
or
jecxz
mov
fdivrs
push
push
lret
dec
std
test
movsl
dec
push
xor
stc
lea
xchg
in
sarl
lret
scas
loopne
or
xor
out
adc
daa
or
insl
xchg
adc
bound
jl
add
dec
xchg
mov
jns
sbb
push
or
xchg
aam
pop
push
jp
xlat
out
out
cld
xor
push
mov
leave
fdecstp
pop
std
xchg
dec
pop
pop
pop
xlat
jae
ficoml
sub
mov
mov
jb
cli
fnstcw
stos
xor
push
mov
dec
cld
xlat
inc
and
or
pop
out
insl
popa
jmp
int3
inc
out
mov
xor
fwait
inc
test
scas
lock
push
je
fmuls
mov
pop
dec
pushf
inc
xlat
sub
fs
cmc
addr16
adc
push
iret
cmp
fs
mov
aad
sub
push
addr16
lcall
rol
push
add
dec
inc
add
push
test
fs
dec
shll
nop
dec
inc
dec
outsb
hlt
xchg
adc
out
int3
loop
jg
sahf
add
in
mov
sub
pop
xor
leave
pusha
insl
fwait
push
das
push
loope
adc
pop
mov
xor
imul
mov
sti
nop
jge
test
adc
xlat
add
mov
lret
xchg
fildll
inc
ss
mov
or
xchg
movsl
cmovbe
dec
insl
lods
fcomip
mov
inc
lea
mov
mov
dec
push
jnp
dec
jg
js
leave
cmp
shrl
and
sub
xor
or
push
and
addr16
aam
cmpsl
test
sbb
add
xchg
sarb
pop
mov
ds
pop
imul
add
jmp
es
push
mov
aaa
cltd
cmp
push
insb
mov
xor
pop
insl
iret
push
into
cmp
push
xor
pop
pop
das
aam
and
pop
mov
xor
rorb
outsb
enter
adc
andl
repz
test
test
sub
mov
ret
insl
add
arpl
xor
lcallw
je
stos
adc
mov
inc
es
cmpsl
sbb
movsl
jg
rclb
scas
push
push
ret
mov
leave
fwait
mull
loopne
cltd
mov
outsl
lds
out
mov
shlb
cmp
std
xor
faddl
ljmp
stos
outsl
add
repz
dec
or
fdivl
push
xor
je
push
cmp
out
jecxz
or
lret
sbb
add
imul
or
es
push
xorl
adc
and
insl
or
in
cmp
dec
xchg
xor
aaa
sbb
test
cmp
and
ss
push
jns
orl
fidivl
outsl
xor
inc
jg
lods
aaa
and
out
mov
sub
inc
pop
idivl
cmpb
cs
lock
push
mov
mov
fbstp
inc
fimuls
jg
sbb
and
mov
int3
dec
rolb
dec
sbb
cmp
dec
rorl
mov
jo
inc
or
inc
roll
out
push
shlb
mov
push
jecxz
push
scas
mov
loopne
cmc
sbb
into
mov
js
fstpt
add
inc
cmp
mov
fistl
xchg
fs
clc
lret
test
push
and
xlat
mov
daa
stos
or
xor
push
adc
iret
insl
inc
or
test
fstpt
and
xchg
mov
in
sbb
rcrb
out
push
lock
pop
test
std
and
insl
lods
imul
xlat
xchg
hlt
push
pop
and
cltd
xor
xor
imul
leave
rcr
cs
cld
xor
lcall
mov
orb
test
test
ja
mov
ret
insb
push
rol
in
stc
inc
mov
pushf
test
ds
sub
mov
mov
sbb
add
and
adc
sub
filds
jbe
lahf
inc
mov
sahf
and
add
bound
jne
jne
imul
cmp
pop
jle
dec
xchg
imul
int
jl
orb
pushf
and
push
push
into
stc
add
or
adc
mov
pusha
or
into
push
fwait
imul
and
lock
mov
ljmp
mov
lock
add
push
dec
pop
in
dec
adc
sub
fistps
push
rorb
test
lds
xor
add
adc
bt
popa
xchg
mov
push
test
cmp
jg
mov
pop
aaa
adc
sbb
std
mov
fcomp
addb
pop
fdivl
dec
and
cmp
das
loopne
cli
add
or
sbb
ret
sti
cmc
imul
xor
loope
push
mov
sub
inc
dec
cmp
inc
cmp
sbb
inc
mov
sub
jge
push
cs
or
sbb
add
insl
and
dec
lahf
dec
fs
mov
and
nop
push
dec
jl
dec
mov
xchg
inc
jl
pop
movsb
div
aad
das
and
xor
and
push
aas
push
xchg
testb
cwtl
int3
pop
adc
jle
push
andl
imul
pop
jns
mov
jecxz
sbbl
cltd
cmp
mov
enter
mov
sbb
inc
scas
les
and
test
push
cmc
mov
sbb
insb
imul
lahf
adc
mov
add
das
dec
and
mov
test
ret
subl
fcoml
cmpsl
sbbb
jnp
cmp
or
sub
data16
adc
xchg
sbb
dec
adc
or
sahf
out
sub
lahf
out
inc
xor
mov
pusha
cmp
mov
or
fsubl
mov
cmc
dec
xchg
lock
subb
or
sbb
xchg
out
jp
sub
add
pusha
xchg
fwait
or
data16
mov
jl
in
pop
ss
mov
clc
inc
mov
pop
out
test
push
aas
int3
scas
mov
in
mov
adc
lods
lods
pop
mov
pop
push
xorl
push
or
jge
xor
mov
pushf
and
lahf
push
lahf
adc
xorl
call
scas
in
sub
and
jle
mov
call
movsb
dec
mov
andb
sub
pop
add
lods
jne
jge
orb
jns
jne
dec
xchg
xchg
insb
push
jno
sar
out
aaa
cmpsb
adc
pop
hlt
add
mov
pushf
dec
pop
and
jmp
add
inc
lcall
cmpsb
mov
fcompl
push
out
ja
cmp
xchg
xorb
icebp
cmp
pop
ret
fidivl
hlt
leave
inc
mov
int3
pop
ja
lea
adc
mov
dec
sbbb
aad
xor
xchg
inc
xor
stos
jnp
inc
inc
jno
mov
inc
add
mov
push
mov
incl
push
adc
sti
cmp
repz
lcall
jmp
sbb
dec
scas
imul
add
into
xor
xchg
js
mov
ja
les
pusha
iret
mov
out
jno
adc
adc
data16
arpl
push
xor
pop
mov
cmp
dec
cwtl
loop
dec
lcall
pop
push
and
cli
add
sbb
in
pop
add
or
ret
faddl
mov
sbb
orb
js
jl
adc
mov
in
push
movl
mov
mov
addb
and
scas
add
push
outsb
jecxz
adc
or
mov
les
inc
pop
inc
dec
cmpsb
lods
lcall
movsl
loope
repz
mov
push
push
push
push
or
imul
mov
cmpsb
andb
mov
mov
out
idivb
mov
ds
mov
faddp
fwait
mov
xchg
and
dec
scas
mov
hlt
std
out
xor
lods
ret
stc
push
lss
push
xchg
and
xorl
xchg
insb
mov
and
mov
xchg
mov
rorb
popa
mov
jl
push
test
out
push
xor
add
add
xchg
mov
sbb
cmp
or
pop
dec
aad
or
mov
andb
sub
negl
cmp
xchg
mov
fcmovnu
inc
pop
arpl
imul
into
jbe
adc
sbb
cld
stos
jg
mov
movsl
ret
cmp
dec
loopne
jae
stc
dec
inc
test
push
mov
in
mov
mov
mov
inc
cwtl
mov
jp
inc
leave
in
sti
int3
or
adcl
cltd
popa
pop
movsb
leave
push
das
jle
cli
inc
stos
pop
jp
hlt
cmp
movsl
idivb
dec
loopne
or
mov
xchg
mov
loope
fwait
sbb
arpl
push
fstpl
xchg
xchg
mov
xlat
or
add
mov
out
cmpsl
js
push
aaa
rorb
push
out
mov
jns
sbb
mov
or
std
pop
or
jnp
pop
ja
or
in
aam
mov
pop
pop
les
sahf
mov
addl
pop
mov
push
pop
jmp
xchg
and
inc
or
cmp
jge
ret
jg
push
rcrl
imul
ret
lds
and
xor
mov
sub
test
inc
test
or
cltd
negb
jns
mov
or
inc
inc
gs
mov
outsl
repnz
mov
sahf
pop
mov
ja
xchg
mov
mov
out
cltd
pop
subb
mov
dec
sub
or
stos
hlt
push
setg
lds
leave
call
call
shrl
mov
add
jl
or
and
pop
aaa
sub
push
push
jns
mov
cmp
int3
and
cmc
ja
fucomip
mov
add
inc
int
lret
xor
lds
sub
mov
dec
adc
jmp
lods
push
dec
rcrl
sub
scas
data16
daa
push
dec
enter
fildll
sub
sahf
push
fmuls
adc
ja
push
iret
jle
jge
add
int
mov
mov
mov
push
and
lds
test
sbb
xchg
std
outsb
mov
xor
movsl
mov
mov
test
push
push
sbbb
push
xor
push
pop
dec
cld
dec
push
faddl
add
aad
adc
sub
push
in
lds
mov
push
push
sub
xchg
and
iret
aaa
mov
and
les
test
xor
push
mov
and
fistpll
jne
out
jne
scas
je
cmc
int
mov
xchg
jl
pop
ljmp
sbbb
dec
out
rolb
cld
sub
or
fiadds
scas
and
shlb
inc
leave
bound
iret
sahf
jle
idivl
lods
aas
mov
test
and
div
fstpl
push
lcall
leave
daa
sti
pop
dec
pusha
je
int3
addb
in
jnp
mov
je
mov
clc
in
das
xchg
xchg
ds
repz
fiadds
jg
lret
jbe
mov
je
xchg
and
mov
addr16
enter
test
xlat
dec
pop
mov
leave
js
sbb
mov
fnstenv
fidivrl
std
scas
gs
into
in
shrl
out
push
mov
add
inc
inc
sub
fdivs
push
pop
push
roll
lods
ret
push
jg
mov
jecxz
es
pushf
jb
shlb
mov
lods
idiv
dec
fldl
and
mov
adc
mov
or
sbb
xorl
movsb
data16
cld
mov
sti
inc
or
xor
cmp
adc
mov
xchg
dec
add
lret
cmp
cmp
jnp
sbb
push
vzeroupper
cs
jae
ja
lock
mov
sbb
popf
mov
aad
fstpl
xchg
outsl
or
sbb
and
push
cmp
push
fsubrl
sbb
out
in
jb
push
or
out
push
mov
pushf
out
fsubrs
dec
jno
orl
sbb
jmp
sbb
push
cmp
xchg
mov
adc
cmc
data16
lods
sbb
push
repz
mov
push
mov
insb
and
insb
push
push
and
fstpl
addr16
lret
cmpsl
inc
add
loope
add
outsl
push
les
or
pop
ljmp
push
sbb
inc
rorl
pop
rcrb
test
insl
ljmp
cmp
incl
jge
push
mov
out
iret
arpl
in
mov
push
dec
or
dec
inc
leave
rolb
mov
ljmp
in
loop
push
mov
fcomip
mov
sti
aaa
mov
xor
push
fsubrs
mov
daa
aam
dec
mov
xchg
adc
push
mov
sbb
addr16
mov
lahf
xorb
shll
mov
sub
xchg
stos
fiadds
int
scas
stos
in
and
xchg
pushf
sub
push
adc
jb
in
push
in
mov
out
pop
popf
xchg
jecxz
push
sahf
and
and
push
ja
ss
daa
lods
jecxz
cmpsb
jno
mov
stc
xor
shll
fwait
stc
call
lods
lcall
xor
push
arpl
mov
jl
stc
sub
mov
aas
add
pop
mov
adc
push
arpl
sbb
mov
hlt
sbb
pop
push
data16
into
sub
shrb
and
mov
mov
sub
adc
sbb
shrb
pop
cli
push
cmp
or
or
js
sub
or
jnp
fld
stc
addr16
dec
mov
cmc
jg
mov
notb
cltd
add
insb
cmp
sub
xchg
scas
mov
pop
aaa
mov
push
dec
popf
in
shrl
push
shlb
xchg
clc
daa
out
cltd
adc
ja
bound
push
test
inc
aad
pop
repnz
dec
sbbl
ljmp
bound
jb
das
loope
test
jne
dec
in
inc
mov
push
or
subl
pop
dec
into
push
cmpsb
pushf
popa
jnp
adc
mov
push
jno
pop
and
adcb
jnp
or
xchg
cmp
shrb
mov
cld
out
and
rcrb
sub
push
xchg
push
es
stos
js
inc
lahf
jecxz
cmp
push
xchg
sahf
push
lods
sbb
jb
sbbl
or
ucomiss
inc
les
pushf
xor
scas
sub
push
or
push
iret
or
inc
or
ret
out
adc
gs
repnz
inc
lahf
mov
test
faddl
add
sub
xchg
enter
push
fists
daa
push
mov
add
repnz
xchg
sub
xchg
std
mov
addr16
outsl
push
in
pop
js
sbb
push
shrb
xchg
mov
sub
mov
in
lds
inc
fadd
cmc
sub
ss
in
into
gs
std
pop
test
push
ret
aas
lds
test
jp
lret
jecxz
cwtl
add
sub
out
call
adc
jmp
cs
nop
add
dec
inc
cmp
rcrl
cmp
ja
adc
push
sub
shl
push
fbld
js
and
xor
loope
jo
test
add
stc
jbe
sub
cli
push
adc
aaa
jl
inc
cmpsl
pop
xchg
lds
mov
ror
push
dec
adc
pop
fcmovnbe
dec
and
mov
jle
mov
out
in
call
aam
mov
ficoms
mov
icebp
shlb
shl
push
pusha
jl
xchg
adc
cwtl
scas
jae
jnp
test
arpl
push
mov
nop
jp
ljmp
lret
jnp
dec
mov
jle
inc
inc
mov
icebp
xlat
jo
jmp
cmpsl
pop
jmp
rcrl
cmp
icebp
jmp
roll
xchg
stc
cmpb
adc
out
pop
ss
in
sbb
scas
mov
imul
movsl
lea
xchg
sub
xchg
cmpsb
cmp
stc
cmp
fsubl
dec
xchg
in
jecxz
fstl
pop
loope
lahf
mov
jge
shrb
shll
or
dec
add
ret
rcrl
cmp
mul
push
pop
jne
mov
js
cmp
aam
roll
stos
adc
jecxz
cmp
dec
inc
je
lds
repz
xchg
aad
hlt
not
test
imul
call
movb
jns
rorb
sti
mov
cli
into
jne
pop
sbb
push
roll
and
xor
dec
stc
in
jmp
add
and
pop
into
mov
xor
or
mov
mov
adc
cmpsl
fadds
pop
dec
testl
imul
mov
ret
mov
hlt
aam
adc
mov
sbb
fwait
jno
pop
add
jbe
cs
aas
outsl
fisubrs
jns
dec
push
negb
jmp
stc
add
loope
notb
loopne
sub
popa
cmpsl
pop
jnp
movsb
cwtl
adc
add
or
subb
roll
enter
jno
test
mov
push
ret
jg
push
or
imul
ljmp
xor
icebp
xchg
scas
sbb
mov
and
pop
xchg
or
dec
sbb
sti
jl
sub
cld
int3
pop
mov
addl
repz
xor
arpl
mov
mov
leave
or
fxch
popf
and
or
in
mov
push
ret
and
gs
rorl
lret
sbb
imul
xchg
aam
cmp
lret
inc
pop
push
adc
jmp
fld
mov
push
jl
jle
push
shrl
inc
jb
dec
rcrl
inc
sub
stos
sti
pushf
add
inc
in
add
into
sub
push
inc
cmp
fiaddl
sub
pop
adc
dec
push
inc
pop
cwtl
mull
and
xor
push
cmp
jl
ret
call
sub
js
push
dec
pop
mov
in
int3
lods
mov
imul
aam
out
sti
popf
add
and
movsl
mov
mov
fwait
insl
or
mov
shrl
subb
int
mov
xchg
mov
inc
push
aam
out
or
cwtl
imul
mov
xor
inc
sub
inc
sub
jmp
pop
stos
cmpsb
repnz
push
xor
push
add
pop
insb
fisubrl
mov
sub
sbb
jmp
cmpsb
call
in
lods
or
add
add
sti
stos
out
dec
ja
xchg
xchg
lret
jecxz
popa
jbe
aad
clc
pop
rorl
xlat
add
cli
pop
jno
enter
addb
ja
cmpsb
ja
xchg
or
cmpsl
mov
mov
xchg
or
std
xor
xchg
dec
push
pop
roll
xchg
adc
inc
roll
cmp
js
test
and
dec
xchg
inc
xchg
icebp
and
or
mov
cmc
std
das
in
jg
or
jle
in
scas
les
enter
sbb
or
nop
adc
test
dec
stos
hlt
push
sbb
cld
cld
aas
pop
cmp
sub
icebp
popf
aas
fdivs
inc
fwait
xchg
inc
pop
xchg
enter
inc
mov
pop
adc
fimull
push
divl
lods
data16
mov
arpl
lods
jns
shlb
xchg
xor
jle
rclb
sbb
cmp
pop
push
and
sti
lea
test
cltd
jno
aaa
iret
sub
loopne
sbb
out
and
xor
adc
mov
fwait
mov
incb
in
leave
jge
push
pop
faddl
lods
cmc
subl
rorb
xchg
sti
ret
mov
test
mov
adc
cmp
pop
dec
cmp
jmp
jnp
fmull
adc
jl
xchg
push
jecxz
call
icebp
mov
push
arpl
out
mov
pop
xchg
cmpsl
out
divl
adc
mov
fildl
sbb
stos
scas
push
add
jno
dec
inc
inc
push
jecxz
or
add
in
rcr
cwtl
pop
adc
ret
jae
stc
add
inc
adc
jne
jmp
cs
jle
cmp
and
mov
sbb
xor
lods
scas
jmp
inc
fdivs
mov
dec
iret
loope
jo
cmp
fwait
adc
int3
fadds
add
jae
lcall
cli
imul
cltd
dec
inc
fnsave
push
cmp
push
pop
ljmp
cmp
adc
add
aaa
dec
lahf
shll
into
push
lods
cmp
jecxz
xor
cmp
mov
dec
cmp
inc
cltd
aam
xor
and
add
adc
cmpsl
icebp
push
pop
push
push
xor
jb
dec
mull
cmp
add
mov
hlt
adc
in
mov
inc
adc
pop
mov
sbb
subl
adc
add
push
or
xchg
out
aas
call
pop
mov
test
es
imul
int
push
push
dec
and
inc
mov
dec
loope
mov
sahf
adc
dec
pop
fnstenv
ret
nop
pop
xor
dec
insl
dec
xlat
pop
hlt
and
ds
or
cmp
dec
test
sub
mov
and
fidivrs
movsb
pop
les
xor
lret
mov
pop
add
cmpsl
mov
xor
and
clc
sbb
pop
mov
pop
xchg
iret
fcompl
inc
pop
lods
lods
outsb
push
insb
mov
vpmaddwd
xchg
cmp
mov
mov
sub
cs
inc
cmp
xchg
pushf
xchg
sub
test
cmp
push
push
jge
or
bound
lcall
jmp
cmp
js
push
pmaxsw
loope
lock
loopne
scas
sbb
sbb
sbb
and
lock
jbe
out
mov
mov
subl
aas
popf
ja
addr16
into
cmp
pop
xor
mov
pop
add
inc
cld
ljmp
add
fisubl
lds
fisttpll
nop
frstor
push
add
or
js
push
imul
adc
popa
sub
call
push
jmp
repz
pop
sbb
jns
inc
adc
pusha
mov
or
fadd
and
mov
leave
sti
repnz
aad
sbb
insb
call
scas
inc
push
and
arpl
adc
or
enter
test
mov
es
push
jae
movsl
xor
dec
and
out
jb
sub
pop
js
je
xor
inc
aas
mov
std
icebp
notb
cmc
push
arpl
inc
sti
mov
add
das
popf
or
fwait
hlt
push
sbb
add
shl
lcall
addr16
fs
dec
rclb
jle
mov
sbb
or
ret
and
push
js
push
pop
push
pop
pushf
pop
popa
add
mov
movsb
inc
arpl
and
mov
cmpsl
or
jnp
sbb
into
or
and
mov
jge
push
aam
adc
lods
mov
das
or
sti
cmc
in
data16
and
sub
dec
or
push
ljmp
cwtl
test
push
cs
xlat
jb
sub
call
mov
or
add
mov
inc
inc
lock
hlt
je
in
cmp
cld
out
in
lcall
mov
jmp
dec
mov
roll
iret
pusha
pop
xchg
test
fwait
push
lods
mov
aad
movsb
fucomi
pop
divl
sub
mov
ret
mov
rcr
adc
fnstcw
outsb
mov
cmpsl
fwait
int3
shrb
cmp
out
fildll
sbb
cmp
loope
push
in
inc
jbe
mov
shrb
movsl
push
and
jo
and
push
mov
outsb
cld
insl
int
lds
cmp
jne
cmp
or
lcall
lods
icebp
iret
xchg
out
cwtl
jecxz
xor
ja
ret
jnp
pop
mulb
mov
sbb
jnp
mov
rol
in
sub
sub
in
xlat
test
data16
addl
fwait
adc
movsb
sbb
cmp
adc
xlat
int
mov
and
addr16
ljmp
pushf
ss
outsl
vunpcklpd
cmp
imul
outsl
in
pop
mov
insl
popa
sub
inc
rcrb
jg
mov
or
fisubrl
stos
mov
ja
aad
cmc
pushf
lods
push
movsw
idivl
sbb
jmp
mov
jl
dec
push
daa
outsb
mov
addl
xor
sub
cmpsl
dec
dec
call
adc
fdiv
cltd
inc
sbb
push
push
repnz
shll
add
sub
pushf
addr16
nop
shrb
stc
movsb
cmp
or
mov
pop
je
jae
adc
or
xchg
fistpll
sahf
fwait
ja
lahf
in
inc
test
sti
test
scas
sbb
mov
fisubrl
adc
cmp
pop
daa
aas
push
or
sub
ficoml
xchg
fwait
out
iret
out
adc
push
adc
cmp
jle
pop
sub
enter
ffreep
mov
jmp
stos
gs
shl
jge
loopne
mov
push
imul
cmp
pop
stc
mov
fisttps
mov
xchg
push
mov
sbb
sbb
arpl
mov
imul
mov
pop
out
fstp
cli
daa
fiadds
pop
mov
dec
xchg
or
inc
cmpsl
out
jmp
pop
test
call
cltd
movsb
jle
loope
repnz
and
add
test
outsb
daa
and
nop
bound
dec
mov
iret
add
sti
jae
pop
xchg
lods
addb
or
or
enter
mul
outsl
mov
inc
daa
pop
outsl
push
imul
cwtl
cmp
or
pop
arpl
push
add
sub
mov
sub
leave
xchg
mov
pop
jp
into
nop
cmp
add
lods
je
sbb
test
cmpsl
add
mov
or
add
mov
adc
xor
dec
push
int3
pop
andl
sti
jl
pop
pop
mov
sbb
push
jae
rolb
imull
imulb
out
lret
inc
add
sbb
dec
cmp
cs
pop
push
lcall
repnz
dec
movsl
mov
lods
ja
dec
xor
lret
mov
jp
jmp
lock
adc
mov
lahf
mov
sbb
rcl
and
enter
ss
xor
stos
jge
push
rcl
es
gs
jp
or
ljmp
dec
mov
fnstsw
ret
mov
cli
add
xor
cmp
stos
ret
cli
pop
xchg
fisttpll
inc
movsw
aas
mov
or
xchg
inc
js
dec
sub
out
sub
enter
sub
cmpsl
insl
incb
std
or
stos
jle
imul
adc
call
dec
jne
xlat
movsb
jb
lahf
sbb
adc
pop
and
pop
adcl
imul
pop
nop
cmp
push
dec
or
mov
add
enter
js
or
or
inc
mov
xlat
movsb
mov
push
testl
xchg
out
push
cltd
movsl
cwtl
cmp
or
aas
cmp
xlat
push
mov
xor
insl
lcall
push
jb
and
hlt
stos
xor
stc
lcall
fsubrs
or
test
rolb
imul
sbb
fwait
or
fadds
fsubs
and
test
mov
divw
inc
pop
test
out
fs
into
out
lahf
cmp
jns
dec
sbb
out
loope
stc
fwait
xor
add
and
jae
adc
std
adc
iret
popl
cmpsb
xchg
ss
mov
pop
fbld
push
jle
sub
popa
mov
aad
rcrl
in
push
dec
push
in
mov
pusha
ljmp
fmull
push
pop
xor
clc
lea
or
insb
rcrl
arpl
rorl
cwtl
addr16
test
cs
pop
mov
sbb
das
lret
xor
or
insl
jle
fstl
add
xchg
scas
pop
jne
mul
inc
jmp
or
arpl
push
stos
ficoml
mov
mov
adc
mov
cmpsl
divl
sub
divl
repnz
and
or
dec
pop
xlat
xorl
and
mov
jae
inc
dec
mov
mov
lea
push
add
mov
lahf
add
sub
mov
mov
mov
cmp
jecxz
pop
cmp
push
in
dec
les
cwtl
jp
out
bound
inc
pop
mov
sbb
xchg
jecxz
enter
out
inc
insl
or
dec
push
push
pop
lea
pop
fsts
sahf
jl
sbb
mov
sub
mov
or
sub
not
sub
fnstcw
and
push
mov
add
mov
sbb
cmp
jl
push
pop
in
sub
fnstcw
lock
test
fildl
mov
pmaxsw
leave
push
imul
dec
out
cmc
hlt
sub
pop
sti
lods
in
push
dec
jge
movsl
or
jne
arpl
int3
loope
or
loope
and
xor
test
jb
adc
sbb
sbb
jge
in
sbb
test
inc
mov
xchg
xor
or
dec
push
cmp
popf
outsb
mov
inc
fwait
inc
in
dec
ret
loopne
xchg
xchg
nop
jne
insb
mov
xchg
xlat
add
adc
mov
sar
mov
insb
xor
mov
popa
dec
add
push
mov
inc
dec
loop
cwtl
pusha
sub
sti
mov
dec
leave
je
xchg
cs
pop
xor
pop
imul
push
pop
xchg
cli
repnz
mov
ljmp
pop
shl
dec
mov
sub
push
inc
xchg
lret
jmp
dec
push
test
cli
cli
jne
loope
fldcw
pop
popf
or
icebp
mov
subl
and
add
jmp
call
jno
xor
sub
xchg
mov
mov
bound
inc
xchg
dec
pop
repnz
mov
cwtl
cmp
dec
add
or
mov
mov
dec
mov
cmp
jmp
jp
insl
adc
adc
scas
dec
lods
in
in
js
outsl
fcos
push
push
out
or
js
mov
cmpsl
dec
mov
movsb
xor
mov
filds
sub
sbb
jmp
frstor
rcrl
pop
lock
faddl
push
sbb
adc
jne
test
jbe
testb
xor
xchg
cld
rorb
jno
sbb
inc
cli
xchg
push
cmpsl
jle
int3
mov
icebp
dec
xchg
sub
lock
out
cmp
lea
lds
into
jg
dec
in
lock
sub
sbbl
fsubs
lods
sti
insb
fdivs
cmp
jg
sub
or
adc
push
inc
push
mov
or
imul
pop
gs
cli
cli
jnp
pop
or
mov
enter
sbb
xchg
icebp
repz
lret
popf
pop
push
js
adc
in
pusha
or
add
addb
lods
inc
pushf
inc
pop
cli
into
push
rorl
jg
pop
lret
pusha
sbb
add
stos
dec
push
mov
sub
mov
rcrl
mov
jecxz
inc
cmpsl
dec
aad
lds
fs
std
cmp
lret
faddp
cmp
push
push
and
icebp
dec
ret
jns
push
out
outsl
adc
mov
das
pop
adc
out
cmp
stc
popa
fldl
fsubr
cli
loop
push
push
fildl
jge
or
cld
loope
xor
pusha
clc
or
aad
jmp
mov
fnsave
xchg
jmp
movsl
sub
xchg
fidivs
lock
add
adc
cwtl
cmp
shlb
sahf
rorl
mov
sub
les
push
inc
jge
es
in
cmpsb
les
lcall
mov
push
into
push
call
imul
mov
pop
mov
insl
call
bound
mov
push
xchg
pop
jg
inc
in
test
test
imul
jo
daa
and
add
loop
sbb
inc
add
jbe
xor
or
jnp
fidivs
outsl
mov
cwtl
adc
and
add
mov
ret
sub
adcl
mov
cmpsl
xchg
xchg
sub
rolb
mov
fnsave
mov
inc
sahf
xchg
clc
out
push
mov
out
xchg
fbld
repz
shlb
sub
mov
or
repz
ja
xchg
mov
jbe
loopw
nop
jnp,pt
dec
pop
imul
ret
imul
adc
loopne
mov
xchg
sbbb
mov
jl
repnz
cwtl
push
fildl
incb
fsubrs
cmp
or
and
xor
addr16
inc
ss
repz
dec
fdivrs
xor
shll
andb
js
fdivrl
aad
into
test
inc
cmp
ds
adc
jmp
int
fnstcw
inc
ret
sbb
push
insl
out
xor
movsb
sahf
int
add
cmc
xor
cmp
xor
cmp
mov
mov
inc
and
mov
push
loope
loopne
in
gs
iret
xchg
xor
xchg
and
hlt
test
daa
rol
test
xchg
rcll
inc
adc
call
mov
adc
dec
ds
xlat
clc
sarb
cmpsw
xor
and
xchg
outsb
iret
shrl
inc
sub
iret
mov
dec
inc
out
jge
cmp
mov
call
jns
xchg
aad
pop
aaa
into
fstpl
lret
jne
push
lahf
mov
push
mov
out
dec
push
leave
add
jbe
fimull
jmp
cmp
cli
and
faddl
push
in
dec
test
and
or
mov
adc
subb
fsubrs
andb
js
loope
cmc
fdiv
jmp
jecxz
pop
sbb
sub
jb
add
cmp
orb
popf
pop
mov
dec
nop
adc
pop
frstor
fisttps
scas
shrl
inc
adc
fbstp
xchg
jp
pop
or
or
insb
mov
add
pop
xchg
cmp
ret
hlt
jle
adc
mov
mov
fcomi
jle
sbb
cmp
js
mov
in
andl
insl
inc
sub
cmp
xor
fwait
sub
insw
and
rcr
mov
rolb
aaa
dec
inc
jns
fabs
pop
iret
inc
add
stos
shll
pusha
jbe
push
adc
shr
fdivp
adc
push
and
faddl
les
sbb
leave
outsb
jl
out
sbb
inc
dec
or
nop
push
cmp
sub
sub
ja
fdivrs
mov
rcr
into
mov
xor
sbbb
xor
or
leave
mov
or
push
movsb
jo
orb
enter
mov
scas
add
and
sbb
lock
mov
nop
xor
or
out
inc
mov
mov
mov
rcrl
inc
or
dec
fisttpl
cmp
insb
xor
or
rorb
sub
pop
loope
cmpsl
sub
jae
rcrl
sti
lcall
jg
cmpb
jnp
cld
sub
xor
hlt
cmp
push
in
pop
out
lods
mov
jo
in
ret
ljmp
cld
cmp
add
mov
sbb
sub
sub
faddl
movsl
or
fucomi
sub
arpl
adc
xchg
std
inc
lods
mov
lahf
cmp
sahf
xchg
in
jno
push
shrb
or
sbb
fisttpl
xchg
adc
mov
js
jle
inc
outsb
ja
push
shll
inc
out
iret
mov
je
lods
lret
lcall
push
fistl
or
mov
cmpsl
pushf
ret
mov
insb
ljmp
ja
inc
ret
loopne
insb
clc
push
xchg
lcall
negb
adcl
sbb
je
inc
jne
inc
mov
call
sub
insb
mov
addr16
push
roll
ja
int
das
pop
inc
loopne
mov
mov
pop
test
je
jb
jb
arpl
push
dec
rcll
sub
jns
pop
cwtl
mov
in
test
aaa
or
lret
xchg
loop
mov
aam
shl
mov
stc
or
out
jns
jl
jns
xor
cmp
pop
sbb
fcmove
dec
push
in
inc
scas
data16
lods
mov
dec
ljmp
jns
jne
dec
mov
mov
dec
push
adc
mov
cmc
cmp
xor
sub
xchg
ja
out
dec
add
je
shl
rcl
lods
insb
adc
cli
test
dec
inc
dec
sub
mov
pop
jns
sbb
and
pop
imul
mov
xchg
call
lds
or
jp
mov
lods
mov
imul
sub
sbb
jne
inc
movsb
xchg
mov
pop
sahf
push
clc
sub
icebp
int
int
aam
jbe
aad
call
mov
mov
stos
stos
mov
nop
xchg
inc
in
xor
mov
bound
mov
fstpt
stos
xor
ficoml
stos
int3
cli
push
mov
icebp
push
mov
filds
push
loop
jbe
scas
mov
mov
out
push
pushf
jl
lret
fldt
call
mov
mov
dec
push
push
and
stos
push
mov
lds
pop
int3
jns
enter
dec
out
xchg
shlb
int
and
lock
cltd
gs
cs
imul
testl
pushf
sub
dec
repz
push
jne
je
mov
push
xchg
hlt
outsl
sbb
loope
int
fnstenv
ja
pop
lods
int3
imul
dec
add
xchg
push
loop
ljmp
repnz
pop
sub
movsb
out
cmc
cltd
ds
add
ficoms
mov
repz
decb
loop
sub
or
mov
aaa
fs
outsb
in
jb
dec
test
adc
je
or
jbe
andl
in
outsl
cwtl
pop
and
jo
xchg
scas
andb
xor
mov
test
loopne
dec
jnp
pop
ret
or
js
mov
mov
loope
mov
xor
ljmp
mov
push
shll
lods
inc
adc
fldcw
add
das
addr16
and
mov
sbb
jnp
iret
xchg
xchg
inc
andl
popa
xchg
mov
jae
test
fisubl
add
lods
sbb
push
xchg
popf
lcall
cmc
sub
mov
jmp
xchg
push
out
xlat
sub
lret
or
rorb
jbe
pop
xor
cmc
xchg
xchg
lret
jle
or
xor
rorb
out
shlb
jmp
std
xchg
fs
cmp
cmp
nop
sub
cmp
pop
fcmove
mov
fs
xchg
sub
stos
rcl
cmc
mov
sub
imul
ret
stos
int
orl
out
push
lcall
push
mov
jmp
clc
dec
jno
loope
jno
cmpsb
aam
xor
inc
pop
mov
jae
aam
jecxz
cli
cmpsb
or
pop
int
imul
mov
sahf
jmp
jno
ror
out
cltd
add
lea
push
arpl
mov
lret
jne
lea
nop
lahf
add
aaa
or
rorb
jp
sub
movsb
xchg
dec
daa
add
push
jmp
sbb
ja
pop
ljmp
cld
or
jno
mov
cwtl
mov
leave
push
jmp
push
fistps
jl
flds
or
lret
pop
js
xlat
int3
enter
fistpl
fstl
sub
cmp
xchg
ss
mov
jle
cs
fidivrs
out
lcall
data16
leave
mov
dec
enter
xor
mov
dec
loopne
hlt
mov
lds
pop
mov
leave
push
les
and
pusha
les
loope
fwait
mov
xlat
jno
xchg
and
hlt
push
mov
and
in
jge
mov
daa
stos
fisubrs
xchg
dec
and
inc
xchg
xchg
ja
sub
adcl
int3
cmpl
add
int
test
ds
addr16
mov
push
cmp
dec
xlat
fdivrs
dec
and
sub
loopne
push
jg
add
data16
dec
test
and
fidivrs
mov
clc
cmp
rcrb
push
adc
mov
adc
dec
inc
jecxz
in
pop
mov
mov
stos
lea
daa
and
add
mov
sbb
mov
pop
les
xchg
repnz
fnstenv
sbb
inc
sub
dec
cmp
dec
pop
xor
out
pop
lds
cmpsb
dec
pushf
popf
pop
daa
sti
pusha
mov
and
addl
loop
flds
arpl
pop
adc
std
add
iret
out
sub
ret
popf
jp
mov
mov
ret
scas
mov
lret
lock
xchg
mov
mov
push
add
sar
mov
jno
jno
mov
dec
jnp
ljmp
insb
or
pop
mov
dec
cmp
inc
dec
inc
int3
jno
xchg
rclb
cmp
pop
ljmp
insl
cmpsb
aas
jbe
sti
rcrb
cmp
xor
lahf
mov
mov
adc
and
cwtl
add
and
mov
imul
pop
mov
adc
icebp
mov
mov
out
mov
nop
sub
out
sub
mov
pop
or
pop
adc
add
gs
or
cmp
mov
inc
cs
nop
cwtl
jmp
nop
ss
xchg
arpl
inc
aaa
mov
imul
add
and
mov
xor
pop
clc
loopne
popa
xchg
xchg
ret
cmp
int
fcompl
cmp
sti
mov
mov
outsl
jae
loope
sbb
or
adcb
loop
pop
dec
or
jne
mov
inc
in
sbb
push
movsb
dec
int3
gs
adc
jge
repnz
addr16
insl
das
inc
loop
jnp
inc
jnp
pushf
add
pusha
mov
leave
sbb
pop
or
and
popa
repz
pop
jl
div
pop
loop
mov
data16
add
pop
dec
icebp
ror
adc
jg
enter
scas
jno
cs
add
cli
sub
pop
into
mov
xchg
and
sub
push
mov
in
xchg
dec
loopne
insl
xchg
je
mov
sub
jnp
jns
andb
and
mov
dec
inc
mov
jne
push
js
addr16
mov
cmp
push
imul
mov
mov
pop
inc
jge
mov
mov
mov
jge
and
sbb
cmp
movsb
rorb
addr16
sahf
add
pop
push
xor
xor
pop
int3
sub
out
imul
sbb
sbb
jae
scas
jns
or
fucomp
adc
mov
sub
dec
push
and
fst
iret
daa
xor
mov
cmpsb
aam
cmp
gs
jnp
mov
mov
xor
inc
leave
ljmp
testl
imul
leave
jbe
stos
sub
iret
daa
lods
jmp
cmp
sub
out
xor
sub
xchg
nop
push
mov
insl
sub
daa
xchg
inc
mov
jg
jl
add
in
imul
jb
leave
ss
ljmp
outsb
xchg
cltd
inc
mov
pop
roll
xchg
ja
jne
fmuls
adc
and
dec
xor
push
add
mov
mov
testl
andl
pop
ret
sub
test
insl
ret
mov
movsl
sbb
popf
mov
xchg
icebp
data16
rorb
cmpl
imul
fabs
xchg
mov
push
jnp
lret
cmp
sbb
wrmsr
out
scas
stos
aad
push
mov
push
mov
xor
stos
cmp
aaa
rolb
mov
loope
ja,pn
xchg
mov
aas
lods
into
psubq
xchg
dec
cmp
nop
inc
bound
lahf
jp
pop
mov
sbb
cld
dec
sbb
adc
sub
xor
xor
add
stos
outsb
hlt
je
pop
cmp
xchg
cli
sbb
loop
fiaddl
pop
stos
sti
pusha
xchg
clc
adc
jae
movsb
dec
xchg
dec
iret
outsl
and
pop
inc
mov
xorl
adc
jle
xchg
test
xlat
push
sbb
fistl
stc
push
and
dec
cmp
add
inc
mov
sub
jnp
loopne
into
lea
imul
and
mov
je
jo
in
mov
mov
xchg
add
xchg
mov
cwtl
stc
sub
mov
cmp
push
daa
sub
jmp
pushf
xchg
xchg
in
cmp
or
not
subb
pop
test
xchg
xchg
push
inc
pop
mov
dec
inc
push
pop
inc
mov
es
and
push
popa
jo
ftst
xchg
pop
cmpsl
int3
data16
sarb
sbb
cwtl
inc
sub
in
mov
in
pop
sti
mov
pop
mov
ror
add
adc
jmp
mov
mov
mov
lea
cmp
inc
mov
repz
sarl
mov
mov
xor
fcoml
in
imul
push
roll
addr16
jg
repnz
sbb
movsl
inc
push
cltd
hlt
lret
push
xchg
push
nop
push
fcomip
test
xchg
insl
jne
push
xor
das
or
popa
inc
loope
popa
xor
data16
stos
add
and
mov
inc
iret
jne
or
xchg
movsl
inc
int
sbb
inc
cmp
movsl
clc
out
sbb
xchg
and
pop
jo
popf
xchg
and
sbb
lcall
jo
inc
mov
int3
add
dec
pop
sahf
xchg
mov
push
movb
push
push
imul
push
into
mov
loopne
mov
ljmp
push
arpl
lods
dec
outsb
inc
sub
mov
adc
jp
sub
aad
popa
test
push
jl
jp
data16
mov
xor
jo
cmp
sti
stc
sub
sarb
push
pop
sbb
fdivrs
xchg
mov
add
mov
add
mov
mov
cltd
enter
clc
push
lock
imul
add
jl
in
std
shlb
sbb
jbe
pop
sbb
insl
mov
and
into
mov
sbb
scas
adc
pop
fldenv
push
rcll
cmc
dec
fcomi
fidivl
mov
adc
inc
sbb
outsl
sub
cmpsb
lds
sub
in
and
jae
dec
cmp
mov
mov
fbstp
cmpsl
pop
pop
ja
test
js
and
lcall
cmp
add
jmp
cmp
pop
insb
xchg
inc
gs
cld
aam
mov
sbb
pop
lods
cmp
jl
outsl
jae
pop
shll
push
mov
cwtl
stos
mov
mov
jl
fistpl
cs
and
fcomps
ss
dec
arpl
mov
or
cmp
cmp
imul
cmp
jmp
mov
js
push
sub
adc
movsb
jecxz
outsl
adc
inc
pushf
arpl
movsl
xchg
fsubrl
xchg
outsb
cmp
inc
xchg
push
jnp
fisttpl
rep
test
mov
lcall
leave
xchg
mov
add
xchg
inc
mov
gs
into
jne,pn
into
leave
mov
das
xchg
daa
lods
jmp
imul
pushfw
push
bound
cwtl
mov
jne
outsl
ds
pop
lock
sbbl
les
cmpsb
and
mov
insl
dec
pop
adc
push
dec
arpl
les
xchg
mov
mov
flds
cmp
xor
push
pop
jg
jns
sahf
xchg
push
lods
nop
mov
lahf
xor
outsb
fildll
and
xchg
dec
in
andb
repz
jns
and
leave
mov
add
loopne
jp
mov
cmp
shl
ficoml
cmpl
std
insl
mov
test
lahf
xchg
add
jmp
xchg
mov
xchg
xchg
loopne
dec
xor
sub
iret
jle
sub
xchg
mov
cmpsl
pop
cmpb
insb
jmp
lea
out
fprem
pop
mov
mov
mov
sub
icebp
xor
ja
xor
andl
push
push
pop
adc
popa
sub
rorl
sub
rorl
mov
sub
push
adc
push
xor
mov
push
adc
shrl
sbb
sahf
pop
es
jmp
mov
fistpll
ljmp
and
mov
add
or
push
adc
and
mov
push
dec
mov
sub
int3
or
lea
jae
daa
cmpsb
and
insb
push
push
inc
sbb
dec
lret
lahf
int3
outsl
inc
aad
mov
pop
ja
jmp
mov
hlt
pop
jns
cmpsl
loopne
jae
loope
jno
sub
and
mov
aaa
sbb
xchg
in
mov
mov
loopne
lret
les
in
mov
and
negb
mov
pop
aas
sbbb
mov
cli
in
add
test
imul
mov
pop
adc
hlt
cmpsl
and
mov
out
lcall
adc
cmpsl
ds
mov
cmp
mov
roll
loopne
scas
frstor
jmp
jno
xchg
adc
lcall
lahf
cmp
cmp
xlat
and
and
mov
stc
jg
cmp
or
mov
or
mov
sub
lock
jmp
mov
roll
stc
shlb
sub
mov
hlt
mov
jne
cmp
mov
and
mov
sbb
push
xor
repnz
push
sbb
shl
or
jg
push
push
test
fwait
cmp
inc
jnp
xor
inc
push
mov
cltd
outsb
pop
fcoml
lret
das
xor
adc
rol
hlt
add
push
lahf
and
xor
cmp
scas
push
jnp
loope
test
dec
in
popa
insb
shrl
adc
lcall
shr
or
push
push
lock
in
inc
outsl
jp
lahf
push
xor
pop
dec
xchg
je
ds
xchg
xor
pop
or
cmp
inc
lock
add
sbb
lods
xor
xchg
sbb
popf
test
fs
push
js
push
and
adc
aam
gs
shl
test
adc
sbb
test
lahf
jb
arpl
adc
mov
outsb
cmpsl
pop
jb
lock
fistpl
in
mov
aas
loop
jne
jnp
add
gs
lret
mov
daa
or
jg
pop
loop
outsl
xchg
mov
adc
cltd
jle
sub
pop
leave
jle
add
and
or
dec
cmp
push
sti
mov
inc
mov
fmuls
xchg
subl
fucomi
jb
xchg
jl
inc
sbb
mov
add
addr16
je
aas
jg
cld
jmp
in
adc
xor
mov
cmc
aam
daa
adc
and
mov
gs
pop
dec
mov
pop
sysret
jne
dec
jnp
sbb
and
mov
sbb
xchg
clc
shlb
xlat
xor
push
push
addr16
xchg
add
add
push
or
pop
or
pusha
shrl
loopne
dec
fwait
rcrl
inc
popa
outsl
cmovno
ficoms
jo
sbb
stos
inc
pop
or
jmp
adc
cmp
je
xchg
xor
outsb
xchg
je
mov
sub
mov
test
xor
pop
les
pop
out
fisttpl
stc
ret
push
imul
push
push
pop
add
stos
jmp
sub
dec
aaa
xchg
lods
xchg
pop
mull
and
xor
lret
mov
jne
xor
sub
ficomps
mov
ficoml
xor
out
adc
test
push
or
inc
lds
sbb
enter
dec
push
mov
pop
xchg
xor
js
bound
pop
and
je
add
and
pop
add
test
dec
lock
lret
test
daa
sbb
incb
sahf
jno
mov
pop
or
lea
dec
dec
jo
in
aad
imul
mov
mov
fs
pop
dec
test
pop
xor
outsl
push
fisubl
shl
jno
and
outsl
jno
pop
cld
push
xlat
in
xchg
es
fiadds
mov
mov
dec
or
cltd
out
inc
test
pop
mov
or
mov
fidivl
adc
xor
pop
orl
mov
inc
or
in
push
cmpsb
and
dec
pop
mov
lods
stos
icebp
std
roll
mov
mov
pop
or
int
cmp
sti
je
and
aam
icebp
xor
loopne
mov
sbb
rol
mov
es
and
xchg
popl
mov
icebp
outsb
xchg
stos
sub
ffree
sub
push
xchg
gs
xor
scas
sub
jb
dec
imul
bswap
pushw
inc
leave
add
or
orl
fwait
mov
repnz
insb
subl
bound
cwtl
sti
inc
jne
imul
loop
push
call
mov
add
dec
mov
cmp
or
and
add
insl
mov
imul
popa
icebp
xchg
lods
pusha
jl
mov
je
into
ljmp
xor
mov
aad
fsubr
loope
xchg
enter
mov
xchg
or
dec
rorl
decl
add
lea
pop
pop
ljmp
lods
sub
xor
push
loope
dec
dec
addb
mov
in
cmp
inc
and
data16
sbb
sbb
jns
xchg
aaa
hlt
lret
mov
fs
jno
dec
and
xor
mov
lret
out
orl
fdivs
insl
insb
fmul
jno
pusha
faddp
mov
jno
xor
in
pushf
and
inc
loope
push
outsl
stos
jbe
inc
out
loopne
outsl
inc
in
addr16
sub
dec
bnd
popf
mov
inc
leave
insb
xchg
inc
pop
push
stos
sub
fdivr
jae
ljmp
test
add
add
imul
frstor
mov
and
call
or
push
or
jb
cmp
incb
js
into
in
or
ja
ret
addr16
rcrl
xor
sarb
shrl
or
pop
and
or
sbb
push
cmp
and
insb
out
test
dec
fidivrs
imul
adc
sub
fidivs
int
xchg
inc
push
loopne
lret
or
popf
jns
incb
add
jp
xchg
inc
and
jae
filds
outsl
push
push
test
xor
xlat
js
or
daa
popl
adc
push
cmp
in
sarb
cmp
fildl
push
ret
adc
and
xchg
add
rcll
mov
cmp
mov
jno
jmp
jle
imul
inc
inc
adc
fwait
shr
xchg
ret
lret
cmp
xchg
lds
adc
sarl
add
push
fldenv
dec
mov
aam
iret
xchg
xchg
or
xchg
stc
mov
addr16
prefetch
and
out
jmp
jo
fldl2e
jbe
sbb
fsubrp
xchg
mov
sub
repz
sbb
js
test
pop
pop
mov
and
mov
mov
stos
addr16
pop
adc
sarb
cltd
fdiv
or
gs
pop
pop
xor
sub
rcrl
mov
inc
lret
lock
cmpsb
push
xchg
fs
cwtl
lds
clc
insb
stc
test
andb
and
aas
mov
test
inc
mov
daa
shr
bound
clc
sbb
not
stc
mov
cltd
gs
and
mov
mov
loope
rclb
push
gs
pop
mov
sub
ret
ljmp
std
scas
stos
outsb
aad
and
push
xlat
int3
stos
rcrb
sahf
cli
out
sbb
push
mov
xchg
cld
xacquire
push
cmp
leave
dec
jmp
mov
add
dec
jecxz
in
lea
addr16
shlb
scas
mov
ret
pop
out
movsb
pop
mov
cmp
cmpsb
repz
pop
adc
ja
incb
mov
lahf
push
int3
into
push
pop
jb
xchg
adc
and
adc
in
in
andb
mov
hlt
sbb
ljmp
push
jl
pop
jb
pop
popa
xchg
fs
and
inc
mov
mov
push
mov
cmp
push
pop
cmp
push
ret
mov
pushf
mov
shrb
stc
test
push
mov
xchg
mull
cltd
inc
popl
mov
jo
add
pop
mov
add
aas
int
leave
jb
push
mov
addb
cmp
add
and
and
sub
adc
je
lds
mov
xor
pushf
mov
add
out
fadds
sarl
sub
inc
js
jne
xchg
test
or
ffreep
mov
movsb
lret
or
movsb
daa
dec
jae
ljmp
lods
outsl
aaa
bound
into
pop
outsl
xchg
jo
test
sbb
jmp
leave
mov
sbb
xchg
xlat
dec
and
pop
inc
xchg
xchg
aas
aad
mov
pop
and
daa
dec
push
fucomp
pop
push
sub
pop
and
lahf
andl
fidivl
jp
cwtl
push
cli
and
xor
call
pop
in
dec
divb
pop
jno
fstpl
imulb
cmc
or
es
mov
xchg
mov
inc
subl
fmuls
dec
pop
pop
into
cmc
add
in
ljmp
push
lret
ss
ret
and
cwtl
xor
sub
rcrl
fwait
enter
mov
aaa
xor
adc
pop
nop
cli
mov
dec
push
mov
bound
jl
insb
pusha
push
andb
repz
or
cmpsl
pop
cld
pop
subl
mov
sarl
ja
pop
jns
aaa
pop
lods
mov
add
sub
dec
dec
sti
xor
pushf
stc
lcall
xor
lods
xor
add
clc
mov
xlat
test
jae
shlb
movsl
sub
mov
ss
mov
mov
push
mov
in
xor
flds
push
jb
leave
sti
add
ds
insl
pop
fsubrl
ja
push
xor
fsubrs
mov
xchg
pop
in
xor
pop
push
xor
popf
stos
sub
nop
test
pop
xchg
or
cmp
sub
and
mull
jns
cmp
cli
stos
jbe
xchg
clc
insl
mov
jns
rcrb
out
fcoms
in
xor
gs
sbb
test
lds
pop
gs
pusha
mov
mov
adc
call
ljmp
fdivrs
out
test
jae
shll
xchg
test
out
movsb
inc
adc
mov
std
adc
mov
in
or
sub
push
and
test
cmc
int3
add
or
sahf
dec
std
cmp
push
inc
or
pop
push
testb
sub
inc
xor
xchg
insl
sarl
outsl
js
pop
outsb
xchg
addr16
mov
leave
mov
mov
stos
mov
push
insb
cmp
inc
adc
subb
xlat
out
sbb
jb
ljmp
cs
sbbl
mov
jnp
shrl
or
scas
adc
lds
andb
lret
xchg
pop
adc
sub
xor
cmpsl
add
imul
add
push
movsl
mov
int
add
fstpt
gs
sub
inc
mov
pop
cmp
xchg
and
jb
gs
stc
mov
ss
loopne
jp
cmp
movsb
insb
lods
subl
popf
inc
dec
add
add
test
call
xor
arpl
insl
mov
and
add
add
loop
adc
test
sbb
sub
outsb
fcompl
nop
inc
xchg
xchg
cmp
push
cwtl
or
imul
inc
or
fdivrp
es
movsl
call
in
add
out
ret
movsl
xchg
in
shrb
add
fdivs
out
cmc
xor
mov
push
cmp
push
movsl
and
cwtl
jmp
cmp
pop
in
dec
mov
inc
in
push
dec
leave
jle
or
andl
inc
movsl
stos
cmp
loop
lds
ds
jmp
in
sbb
mov
ljmp
mov
ljmp
test
add
aam
mov
das
lcall
fists
daa
inc
loopne
inc
mov
enter
mov
pop
push
ja
cmc
sbb
push
out
mov
outsb
mov
add
xchg
add
push
push
xchg
mov
mov
ret
pop
cli
ss
jl
inc
mov
incb
cmp
sub
push
push
ljmp
cmp
mov
xchg
jns
call
call
xchg
std
jp
push
leave
mov
fdivl
insl
xchg
dec
cs
cwtl
ret
xor
mov
icebp
and
das
xchg
jb
dec
bnd
gs
sbb
loopne
mov
sbb
popa
adc
lods
mov
aas
dec
adc
add
xchg
sub
push
pop
xchg
lds
mov
leave
cwtl
pushf
out
ret
xchg
or
xchg
stos
sbb
cwtl
cli
add
sbb
xchg
out
pop
add
into
or
insl
adc
sub
into
fnstenv
pusha
loop
pop
push
clc
out
int
add
inc
outsl
adc
jo
pusha
mov
pop
xor
enter
sbb
dec
and
sti
inc
stos
or
push
push
outsb
int
lea
xor
ss
push
gs
jecxz
xor
iret
xor
cltd
rcll
xchg
xchg
mov
sbb
xchg
cmp
repnz
jnp
cmc
rcrb
dec
sub
inc
mov
dec
add
jae
test
pop
xchg
mov
dec
jnp
pop
sti
xchg
loopne
adc
sbb
inc
jnp
aaa
jp
sahf
shll
ror
and
or
shll
mov
inc
xorl
push
xchg
imul
shrb
rcrl
xchg
push
sahf
push
jmp
gs
pop
pusha
push
or
mov
lods
add
rcrl
lods
rorl
jecxz
mov
pop
test
fstl
mov
leave
sub
add
push
aam
int3
mov
movsb
push
dec
arpl
add
mov
sub
push
xor
mov
mov
fiaddl
imul
mov
xchg
shlb
inc
xorb
int3
nop
and
dec
mov
inc
adc
call
cmp
insl
push
shl
in
cmp
pusha
or
dec
scas
pop
dec
sub
daa
test
pop
sbb
mov
jg
aas
movsb
or
pop
cmp
mov
mov
xchg
adc
repz
outsb
lret
js
add
out
xor
cmp
inc
lds
dec
or
loope
sbb
js
popf
mov
sub
ss
insb
add
jg
xor
cmc
fsubrl
popa
xchg
aam
sub
lock
sbb
addb
hlt
shlb
lret
out
out
xchg
and
cmp
adc
les
aaa
pop
cmc
addb
add
push
cwtl
sahf
add
in
lds
adc
lahf
mov
pop
ja
js
and
roll
mov
ss
into
fst
mov
lds
cld
cs
in
dec
clc
cld
cs
loope
out
in
sbb
xchg
fdivs
iret
xor
lds
nop
jns
test
xor
and
lcall
and
outsl
mov
pop
push
pop
and
test
std
hlt
popa
imul
imul
mov
xor
dec
ud2
or
popa
or
call
mov
lock
mov
xchg
mov
call
dec
sub
cli
ds
in
inc
mov
setae
lds
or
inc
mov
mov
cmp
out
leave
ficoms
xor
and
and
outsl
idivl
out
push
lods
ret
popa
mov
lods
jle
lahf
cmpsl
scas
mov
mov
in
cmp
lods
outsb
jg
insl
fnstsw
rorb
inc
pop
sub
xchg
xchg
jb
inc
push
adc
pop
cmp
sub
fs
cmpsl
std
mov
adc
xchg
lret
inc
add
cmc
js
scas
mov
stos
daa
push
xor
test
clc
add
adc
enter
push
inc
lret
mov
and
repnz
lcall
aas
jbe
movsb
cmp
jg
cs
cmc
negb
adc
aaa
and
xchg
push
dec
stc
popf
mov
xor
insb
adcb
je
movsl
je
add
nop
mov
sti
fldt
scas
mov
mov
ss
addr16
mov
adc
movsb
loop
dec
inc
enter
es
shrb
pop
add
xchg
mov
lret
xor
jecxz
out
add
inc
inc
hlt
sarl
rcll
or
adc
int3
test
into
add
std
pusha
movsl
pop
cld
xor
pop
ds
cmp
sahf
push
lret
loope
imul
test
mov
ficoml
mov
pop
mov
test
mov
push
sar
outsb
test
add
mov
jle,pn
pop
cmpsb
add
cmp
lea
xchg
lock
dec
jo
loopne
mov
cmp
inc
hlt
sbb
xchg
jnp
out
imul
fs
push
fsubrs
cmp
push
xor
and
ret
in
lahf
fldl
test
in
add
gs
xchg
outsb
adc
and
les
sarl
scas
and
sbb
pop
test
dec
ljmp
pop
insb
cmp
mov
adc
cmp
aam
imul
fmuls
aaa
ja
dec
jg
pop
add
and
mov
dec
mov
out
mov
jg
pop
lahf
ljmp
lea
lcall
in
test
pop
xlat
sbb
xchg
jb,pt
idivb
les
cmc
pop
cwtl
idivl
sbb
or
jle
sbb
scas
repnz
mov
adc
xchg
jl
jb
notl
cwtl
iret
sbb
xor
insl
adc
scas
in
lcall
sbb
sbb
pop
or
sub
add
ljmp
and
pop
pop
mov
arpl
jb
pop
push
lds
repz
fwait
jbe
xchg
and
jo
addr16
int
pop
roll
rcl
sti
or
mov
mov
pop
inc
arpl
sub
js
xlat
and
sub
push
das
lret
jne
lret
aam
out
movsl
dec
cltd
sbb
or
repnz
pop
data16
out
jecxz
nop
ljmp
mov
popf
jl
dec
add
mov
inc
add
lock
sub
mov
push
mov
je
and
movsb
push
xor
sbb
and
add
scas
popa
pop
stos
fs
mov
test
sbb
push
fisubrs
sbb
in
fisttps
iret
jns
lea
pop
popa
fldenv
push
pop
sub
pop
pop
xor
jp
jo
pop
pop
cmp
push
popf
or
inc
popf
les
adc
sub
mov
outsb
fnsave
add
or
stos
test
xchg
fisttpll
imul
sub
ss
cld
mov
jb
dec
push
lcall
mov
cmovg
in
rcl
in
xor
cli
and
addr16
cwtl
out
aaa
add
lods
adc
inc
adc
leave
or
cmp
lea
cmpsl
push
cmpsl
aam
dec
ficoml
pop
scas
and
mov
bound
xor
push
adc
arpl
mov
roll
mov
test
hlt
mov
push
js
insl
sbb
pop
sub
sbb
xor
adc
ja
mov
mov
sub
insb
inc
inc
mov
push
int
and
arpl
insb
das
stos
fstpl
or
ja
lcall
cmp
cmp
sub
pusha
dec
adc
cli
xchg
cmpsl
movl
fs
cmp
popf
ret
sahf
cltd
xchg
rclb
cmc
data16
cmp
adc
les
dec
jp
or
ljmp
sahf
pop
push
push
xchg
mov
stc
orl
int
or
mov
adc
or
sbb
mov
sub
add
pushf
out
nop
jae
movsl
cs
sub
into
outsl
pop
or
and
loope
aad
pusha
xlat
in
scas
jle
mov
loope
outsb
scas
sbb
xchg
push
lret
sub
mov
fldcw
sbb
pop
cmp
push
mov
push
cmp
nop
jecxz
or
aad
rcrb
pop
stos
loope
dec
movsl
aas
adcb
mov
dec
xor
iret
stos
cs
shll
movsl
aad
sub
mov
testl
je
pusha
iret
test
data16
imul
test
dec
dec
xchg
adc
jecxz
push
jmp
lcall
sbb
shrb
in
loope
lahf
push
out
movsl
mov
sahf
sub
lea
push
loop
rcrl
stc
sub
test
xchg
or
arpl
xor
xor
jbe
ljmp
jbe
in
inc
push
mov
cmpsl
cvttps2pi
sbb
hlt
movsb
lds
lods
ljmp
mov
push
and
xor
jnp
gs
subl
fs
fisubrl
jne
outsl
mov
push
insb
in
and
test
sbb
xchg
adc
adc
fistl
insl
lock
ss
push
subl
push
in
sbb
clc
and
xchg
cmpsl
nop
repnz
insb
jecxz
pop
mov
mov
dec
push
dec
inc
leave
xchg
xchg
sbb
jno
sbb
es
jo
bound
loopne
and
dec
mov
ficomps
rorl
or
test
out
add
repz
stos
call
je
inc
mov
pop
dec
inc
add
idivb
add
sar
jo
push
sub
roll
sbb
in
cwtl
and
cmpb
inc
lock
pop
mov
test
add
dec
sub
negb
jg
push
inc
dec
cli
jmp
pop
pop
cmp
lds
inc
subb
push
mov
test
or
movaps
add
mov
fmull
icebp
mov
dec
mov
imul
xor
xor
fildl
sub
xchg
or
push
nop
cwtl
mov
push
addb
nop
rclb
mov
addr16
mov
lret
mov
in
jbe
mov
data16
stos
fldt
sahf
dec
in
and
test
dec
mov
popf
scas
test
sub
shlb
sahf
add
and
loopnew
xor
rorb
es
out
xor
mov
sbbb
mov
add
sbb
push
cld
addr16
jne
decl
pop
outsb
mov
lods
pop
movsb
or
mov
jmp
fcmovnb
mov
mov
add
xor
movsl
popf
push
cmp
rorb
jmp
popa
pop
pop
xchg
dec
xor
add
mov
outsl
das
cld
inc
sub
cmp
clc
mov
pop
in
push
in
sbb
jb
xchg
inc
push
dec
data16
xchg
out
inc
scas
push
xchg
mov
add
xchg
cmp
lcall
pop
inc
out
sahf
prefetch
xchg
mov
arpl
lret
sahf
adc
sub
test
push
sub
out
pop
lret
cmp
add
add
mov
cmc
es
jecxz
inc
add
fstl
and
mov
and
jo
popa
add
es
std
pop
jo
loope
test
nop
mov
arpl
or
ja
or
cmp
clc
out
push
xchg
xchg
mov
mov
mov
sub
push
lea
inc
cs
and
pop
pop
xchg
mov
add
adc
les
xchg
and
movsl
fisttps
and
mov
repz
lods
mov
ds
mov
and
push
and
insb
mov
icebp
push
push
jmp
jmp
sbb
jno
xchg
int3
mov
stc
aad
cmp
scas
divb
push
push
jp
test
and
adc
xor
sub
test
lds
clc
orb
outsl
aam
xor
repz
push
arpl
clc
mov
sahf
add
and
or
cld
shll
fisttpl
lods
push
js
out
cld
pusha
mov
scas
mov
cwtl
dec
mov
insl
push
cs
dec
xor
jae
aaa
dec
mov
dec
mov
push
cld
repz
add
cwtl
cmpb
pop
les
loope
fidivrs
xchg
sbb
rorb
mov
lcall
adcl
movsb
sar
pop
cmp
int3
mov
rcrl
mov
cmp
mov
mov
cmpsb
xlat
sarl
bound
xchg
xchg
js
dec
das
mov
je
mov
iret
rcl
pusha
pusha
rcrb
adc
mov
add
xchg
jecxz
das
lahf
sub
xchg
xchg
jmp
push
jb
xlat
test
bound
dec
adc
jmp
out
push
xor
and
jmp
push
lret
ja
loopne
xor
lret
arpl
daa
pop
mov
call
outsl
pushf
or
or
xchg
fimull
jle
pop
loopne
neg
mov
mov
gs
outsb
sahf
pop
cmp
popa
sub
dec
sub
movsb
jns
adc
movsl
ret
loope
xchg
pop
mov
push
mov
mov
sub
push
adc
lds
lods
inc
sbb
xchg
and
ret
pop
scas
add
cltd
jmp
cmp
and
int3
out
sub
aaa
push
call
into
jbe
cmp
jb
mov
dec
cwtl
outsb
es
cld
add
testl
push
jmp
pcmpgtd
popf
mov
fmuls
cmovle
lret
cmp
add
lods
dec
mov
in
in
js
push
je
repnz
push
mov
mov
mov
jno
gs
mov
mov
mov
jmp
stc
cmp
mov
inc
sub
stos
call
and
jns
loopne
enter
insb
or
mov
jne
push
cs
dec
int
outsb
and
imul
sbb
test
push
pop
int3
mov
inc
neg
inc
jge
mov
sub
add
pop
test
add
aad
push
gs
fninit
mull
cwtl
mov
repnz
add
jp
mov
jg
aaa
dec
sbb
mov
jne
jne
and
push
int
stc
sub
out
xorl
mov
test
call
gs
adcl
push
xor
pop
shlb
sbb
ret
xchg
or
mov
int3
jge
into
dec
or
jbe
sub
sbb
and
insl
ret
adc
in
iret
mov
in
and
pushf
shll
call
fdivs
movsb
jno
dec
dec
lods
repnz
pop
js
mov
fcom
mov
test
jb
jl
test
cmpsl
cmp
push
add
or
mov
xchg
push
push
lcall
jmp
mov
into
add
faddp
loop
push
les
xchg
xchg
std
movsb
rcl
in
add
mov
inc
add
shlb
pop
insl
and
incl
pop
inc
mov
in
movsb
inc
dec
inc
inc
nop
sub
data16
mov
mov
jnp
jecxz
push
sub
mov
add
cmc
adc
or
jp
pop
imul
adc
imul
and
lds
int3
imul
add
add
push
jl
sahf
imul
popa
lods
popa
test
cwtl
cmp
mov
jns
jo
rorb
jle
repnz
pusha
lea
mov
mov
lock
sti
pop
std
and
divb
mov
lds
jle
inc
xchg
adc
movsb
outsl
push
sbb
add
add
mov
push
cmp
pop
dec
repnz
adc
sbb
imul
jge
mov
subl
popf
pop
sub
or
mov
ljmp
dec
or
add
les
cmp
cmpsl
movsl
inc
mov
inc
jnp
int3
xor
clc
push
push
out
add
insb
addr16
bound
addr16
pop
cmc
mov
das
fucomip
rcrl
mov
jnp
out
inc
jg
ret
in
popa
cmpsb
cmp
sub
iret
mov
jl
sub
xor
adc
cmpsl
xlat
xor
nop
inc
jae
xor
dec
scas
inc
sbb
fiadds
jb
in
sti
pushl
sbb
xchg
xor
mov
xor
add
and
imull
enter
movsl
push
pop
loope
cltd
mov
orl
js
sub
mov
ds
jns
dec
or
jle
repnz
pop
jo
iret
lds
ljmp
sub
iret
or
adc
mov
jnp
outsl
addr16
loopne
push
shlb
pop
push
adc
fwait
inc
add
out
fcomps
outsb
hlt
or
movsl
into
lret
mov
dec
icebp
jl
push
enter
out
aad
push
or
pop
ds
iret
push
xor
push
insl
testb
cwtl
loope
add
fwait
pop
jp
sbb
pop
das
and
scas
ljmp
xchg
or
adc
xchg
ljmp
adc
or
hlt
cmpsl
test
jne
in
inc
mov
cltd
in
cwtl
cmp
jg
xchg
jns
cld
das
loopne
pop
jo
ret
repz
test
mov
clc
mov
adc
sahf
in
in
push
dec
or
das
mov
sbb
and
inc
testb
rcrl
mov
sbb
inc
test
mov
mov
into
push
insl
adc
mov
jmp
aas
sti
push
pushf
cmpsb
outsb
dec
pop
push
sub
mov
cld
xchg
push
xor
push
xor
sbb
dec
jecxz
scas
jno
das
iret
inc
in
xor
scas
jmp
std
inc
mov
cs
add
mov
mov
cmp
out
xor
fsubrl
call
shll
test
hlt
mov
push
test
test
test
push
in
pop
shrb
outsl
xor
aam
push
push
xorb
popf
ret
ret
inc
add
adc
pop
sahf
and
fwait
out
popa
or
cmpsl
lret
icebp
popa
sbb
incl
cmp
testb
add
ja
mov
int
xchg
mov
xor
cmpl
jmp
mov
in
jl
lret
notl
sti
shlb
xor
lock
jnp
and
fisubl
mov
out
sub
ss
mov
jbe
cmpsb
pxor
frstor
xorb
test
sub
or
mov
adc
jns
das
mov
adc
test
mov
inc
rorl
psllw
pushf
imul
or
mov
repz
mov
dec
loopne
stos
mov
mov
int
loope
and
xchg
les
or
adc
popf
stos
dec
pop
call
pop
nop
pusha
iret
inc
ret
int
or
inc
cli
mov
ss
cmp
cmpsb
rcl
dec
jg
in
jae
test
xchg
xor
push
push
cmp
jno
daa
ret
andb
test
push
lcall
ret
dec
push
jo
movsl
jbe
cmpsb
pop
jmp
ja
jecxz
jge
inc
add
push
xlat
das
push
out
mov
jmp
or
imul
mov
scas
add
not
cli
outsb
pop
jno
inc
jo
ret
mov
das
cmp
inc
jo
mov
cmpsl
xchg
fdiv
jl
mov
in
addr16
imul
cltd
xchg
fcomi
mov
rclb
js
sub
arpl
mov
dec
xor
fadds
sub
sub
mov
pop
aas
int
mov
dec
aaa
inc
cltd
das
xchg
add
sbb
dec
ds
cmpsb
js
inc
loope
movsb
ja
push
subl
xchg
lcall
testl
cmp
popf
ljmp
lods
ficomps
ficoms
out
mov
daa
addb
bound
hlt
and
mov
lods
jmp
jns
lods
or
jbe
adc
xchg
das
out
jp
sub
shlb
jo
lahf
arpl
sub
aaa
jl
mov
lods
ljmp
push
into
lock
js
xor
loopne
imul
inc
mov
mov
imul
and
cmp
fistl
adc
cmp
mov
outsl
or
mov
movsl
movsb
and
pop
aaa
or
insb
mov
loope
inc
scas
cmpsl
iret
out
loope
lea
add
adc
movsb
insl
bound
test
jecxz
xchg
add
jb
add
daa
adc
fisubl
push
in
loope
fwait
cmp
ds
mov
xchg
repz
es
mov
push
mov
lods
out
jns
into
sub
dec
nop
sub
popf
xchg
aad
sbb
pop
out
clc
add
clc
fwait
jne
ficompl
mov
test
loop
bound
adc
xchg
add
iret
pop
add
insb
xchg
dec
adc
push
sbb
jl
jge
jb
or
pusha
adc
data16
mov
adc
stos
xchg
add
aam
fimull
add
orl
arpl
std
cltd
fsub
loope
mov
jge
jmp
movl
ljmp
mov
dec
pop
add
cmc
jne
ljmp
fwait
js
nop
add
cmp
filds
xor
pop
test
xchg
mov
sub
inc
dec
sub
dec
inc
cld
mov
push
jnp
iret
or
or
sbb
push
test
jmp
sti
imul
stos
push
cmp
fstl
fadds
movsb
scas
xchg
mov
test
sub
jge
adc
mov
in
aad
xor
jle
clc
clc
stos
mov
add
adc
mov
mov
movsb
mov
jbe
in
in
jg
adc
loope
pop
adc
pop
inc
stos
fidivl
pop
dec
orl
divb
push
adc
sub
pop
push
out
gs
sub
fildl
in
mov
icebp
xchg
mov
cmp
fidivrs
mov
sbb
scas
xchg
sbb
push
ret
pop
or
imul
inc
inc
out
cmpsb
movsl
xchg
jo
shlw
push
ret
repz
rclb
fsubr
pop
mov
jl
enter
std
jle
push
and
ffreep
jmp
hlt
cli
xor
inc
imul
cltd
add
adc
push
loop
or
pop
lret
js
push
jl
mov
inc
pop
cltd
test
rorb
cmp
loope
ficoms
sub
jns
fwait
mov
outsl
adc
mov
inc
xchg
out
push
fdivrl
and
ja
lods
mov
jb
jge
pop
jle
xchg
shll
push
xlat
ljmp
xlat
in
int
into
inc
test
ret
das
es
cmp
mov
in
stos
scas
sbb
xlat
xchg
stos
ficomps
dec
test
or
test
jo
or
or
aas
mov
push
sub
adc
mov
xor
cmp
decl
and
mov
mov
cmp
js
sub
popf
gs
cmp
sbb
mov
mov
stos
xor
leave
mov
jno
es
push
mov
daa
pop
lahf
pusha
insl
ds
cmpsb
xor
inc
dec
sbb
or
mov
in
pop
xchg
mov
jnp
jle
cld
inc
fisttpll
cmp
add
pop
mov
in
jmp
mov
or
outsl
rolb
mov
sub
pop
mov
jnp
in
jmp
fisubl
add
xor
mov
repnz
jb
pop
mov
stc
pop
cmp
insb
outsb
xor
call
sti
iret
nop
push
rorl
add
pusha
xlat
in
jae
dec
in
fstl
lahf
jnp
inc
sbb
jne
cmp
insb
icebp
lds
rcrl
in
xorl
sarb
lcall
jmp
pop
sbb
iret
pop
lea
sub
int3
out
stc
mov
shrl
pop
movsb
out
xorl
mov
std
imul
icebp
imul
jecxz
sub
dec
sbb
test
pop
xchg
faddl
jmp
cmp
pop
push
std
std
out
lods
mov
cwtl
lahf
ss
cmpsl
cs
call
xchg
adc
xchg
xlat
jle
sbb
arpl
aas
pop
jnp,pn
icebp
inc
or
lods
lea
out
xlat
into
dec
mov
inc
push
sbb
dec
loopne
dec
popf
insb
clc
sub
lcall
push
or
xor
clc
add
xchg
adc
ret
dec
cmp
iret
test
imul
dec
in
fmul
xor
fwait
dec
insl
in
pop
andb
mov
out
lahf
enter
je
pop
les
push
cld
mov
dec
out
repz
jbe
inc
das
mov
mov
adc
sbb
arpl
mov
mov
test
aas
fucomip
jnp
or
outsl
mov
mov
popa
cltd
addr16
mov
sbb
ret
dec
jge
cs
fldl
cli
jns
in
sbb
adc
rol
mov
stc
ret
loopne
shll
adc
movsl
jmp
in
lret
lcall
and
in
scas
push
std
mov
add
jo
leave
pop
pushf
subb
cmc
in
out
clc
pushf
cwtl
addr16
jmp
insb
rcll
push
in
lret
inc
sub
xor
push
test
xchg
popf
mov
movsl
dec
rclb
and
pop
and
add
mov
inc
ret
mov
lea
mov
xchg
mov
mov
mov
push
xor
pop
xchg
push
mov
xchg
outsl
inc
pop
jnp
inc
mov
lcall
shlb
mov
shrb
mov
mov
movsb
call
xchg
addl
jnp,pt
out
mov
xor
cld
clc
xor
dec
xlat
fcompl
js
or
add
test
jbe
dec
mov
jle
or
pop
pop
sar
test
addr16
cmpsl
inc
push
push
js
cld
and
jmp
add
es
sub
movsb
sub
cltd
cmp
jne
xlat
jbe
mov
push
repz
lods
dec
xchg
jmp
je
sub
mov
cwtl
lahf
mov
push
adc
cmp
mov
fucomi
jo
or
int3
icebp
mov
add
data16
leave
scas
pop
int3
in
les
sub
daa
popa
lret
mov
cs
out
cld
dec
enter
out
out
ljmp
nop
fiaddl
cmp
popa
xor
sti
test
scas
push
or
pop
lds
xlat
pop
mov
and
clc
inc
aaa
ljmp
mov
push
cmp
rcll
int3
sub
pusha
jnp
out
sbb
fdivl
das
rcrl
xor
insl
insl
mov
mov
mov
ret
icebp
stos
jbe
es
jge
adc
adc
push
xor
mov
call
lea
lret
insb
ret
push
mov
out
je
inc
test
movsl
or
jno
sub
pop
cli
cmc
pop
mov
fmull
dec
cmpsb
enter
jb
int
out
xchg
enter
cmp
mov
cmp
sbb
popf
pop
and
dec
push
mov
sub
push
push
dec
ret
fs
stos
js
xchg
mov
push
push
push
mov
lods
sub
mov
mov
push
lcall
sub
jns
movsl
or
xchg
jns
icebp
pop
fistl
shrl
js
lret
mov
outsl
cmp
mov
mov
mov
scas
xor
clc
or
dec
in
pop
push
xor
test
stc
mov
add
pop
mov
out
push
dec
rcl
inc
xor
lcall
xchg
addb
icebp
mov
push
imul
insl
sbb
mov
in
pop
test
jnp
cwtl
or
outsl
clc
adc
jmp
adc
nop
push
lret
aaa
and
xchg
add
lods
xchg
or
mov
cltd
pop
in
cmc
fimull
aaa
inc
pop
xchg
das
nop
daa
and
popa
xor
push
psllw
jl
pop
inc
xchg
cvtps2pi
or
dec
or
ljmp
or
cli
jmp
push
push
sahf
and
sbb
mov
jnp
mov
xor
jae
aad
pop
lds
mov
notb
shl
hlt
or
xor
mov
subb
cmc
data16
cmp
ljmp
push
loop
push
lahf
inc
and
push
subb
jns
push
mov
cmp
aas
and
rcrb
pop
dec
push
mov
pusha
jne
rcrl
lahf
inc
push
popf
fsts
mov
setno
mov
push
outsb
cld
inc
dec
mov
xor
ljmp
lret
dec
sub
dec
cwtl
inc
lods
mov
adc
scas
fldl
fstl
xor
mov
stos
loope
mov
pop
and
pop
shrb
mov
jge
js
mov
enter
sub
je
fdivr
cmp
xchg
fsubl
repnz
push
int3
ds
mov
xchg
call
add
adc
imul
inc
add
imul
loopne
std
mov
push
adc
stc
mov
mov
xchg
loope
add
jb
insb
or
fistpll
mov
dec
in
push
arpl
stos
mov
pop
out
ret
dec
cmp
in
sbb
gs
mov
daa
pop
cmc
rolb
or
push
rorb
popf
mov
dec
insb
xor
xor
mov
out
jae
mov
clc
cld
in
pushf
movsb
inc
imulb
inc
loopne
mov
test
xchg
lahf
cli
sbb
popa
fimuls
sbb
xchg
pop
out
cmp
aaa
pop
cmp
cli
movsl
int3
cld
jl
inc
mov
mov
xchg
push
cwtl
stos
inc
xchg
add
out
and
out
iret
inc
sahf
jl
js,pt
inc
inc
push
mov
dec
mov
stc
dec
push
jbe
loop
push
icebp
out
xor
inc
les
test
add
inc
cmc
or
cmpl
push
push
fimull
shll
xlat
fnsave
push
nop
lret
push
fdivr
and
cmc
mov
jb
jge
ja
and
mov
and
push
inc
in
cmp
lods
cld
cmc
outsb
int
add
call
mov
cwtl
or
cmp
cltd
imul
es
scas
xor
jns
aam
dec
jmp
jo
aas
push
jle
mov
inc
jo
xor
aam
cmc
jns
cmp
test
pop
adc
push
mov
ljmp
repz
adc
fs
xchg
addl
and
jge
push
out
adcl
sti
xor
inc
push
inc
mov
pop
loopne
adc
pop
mov
cli
xchg
pop
mov
ds
call
dec
call
sbb
xor
stc
xor
fs
lret
add
loopne
cmp
jae
jne
cmpsb
xchg
cmp
cltd
fs
add
inc
or
rcll
adc
mov
lock
rorb
js
in
scas
mov
sub
xor
jae
cmpsl
sub
sbb
jg
push
in
or
shlb
and
and
mov
cmc
test
push
mov
aam
std
mov
xchg
sbb
scas
pusha
pop
idivl
icebp
adc
ret
fyl2x
std
inc
cmp
inc
outsl
mov
vphaddsw
fildl
adc
mov
cmp
and
jno
push
pop
insl
add
dec
add
dec
mov
addr16
or
lret
pop
sub
or
cwtl
xlat
lods
sbb
pop
sbbb
sahf
sub
jb
or
testl
mov
sbb
jns
outsl
xlat
scas
jmp
mov
mov
andl
int
sbbl
scas
aaa
int3
pop
sbb
ss
xchg
notb
add
xor
mov
stc
frstor
cmp
sub
fadds
testl
cmp
mov
or
add
jns
imul
xchg
shrl
jno
and
fadds
lret
or
xchg
daa
cld
daa
push
dec
stos
dec
insl
sub
inc
sbb
dec
int
out
ljmp
ret
or
cli
fiaddl
insl
dec
aam
dec
pop
fstl
xchg
outsb
test
jle
addr16
mov
loope
xchg
push
xor
in
cld
adc
sub
inc
or
aas
sub
out
mov
add
test
and
aas
es
sub
push
add
lret
stos
jp
jmp
sbbb
fistpll
mov
roll
outsl
sbb
test
cmpsb
dec
movsl
cmp
fwait
mov
push
icebp
aaa
mov
outsb
pop
jecxz
xchg
lcall
lds
std
icebp
scas
imul
lahf
adc
mov
out
xchg
lsl
mov
inc
movsb
outsb
ret
mov
or
data16
push
push
or
inc
lock
shlb
arpl
pop
pop
and
xor
notl
cltd
mov
xchg
aaa
sbb
stos
xchg
adc
fdivs
sbbb
scas
add
inc
imul
sarb
jg
notl
xchg
insb
cmp
fldt
mov
enter
jo
add
or
orl
bound
jmp
xor
jae
mov
nop
pushw
xchg
sbb
adc
ficoml
mov
cli
adc
mov
lret
inc
popf
cld
in
mov
fistl
mov
out
pop
mov
xchg
push
ds
cmp
pop
push
adc
notl
adc
mov
jge
cmp
mov
popf
push
or
loope
sahf
sub
push
aam
or
pop
js
jecxz
mov
dec
je
mov
out
cwtl
adc
push
orb
mov
popa
out
mov
out
in
fcomps
xchg
xor
cltd
ljmp
lcall
divps
out
or
push
movsb
pop
adc
sub
arpl
inc
pusha
ret
inc
mov
les
xchg
adc
lock
aas
iret
jg
negb
lret
lea
inc
pop
jecxz
or
jmp
push
lahf
sub
loopne
add
inc
movsl
repnz
add
movsb
and
xchg
cmp
jle
mull
test
or
in
adc
mov
sti
or
xor
inc
push
or
cmpsl
lock
fnstcw
push
xchg
push
push
int
aam
or
xchg
mov
push
mov
mov
push
or
mov
or
and
jecxz
inc
sahf
pop
xchg
stos
into
mov
push
repz
xor
dec
adc
fsubrs
cmc
adcb
or
jle
inc
sbb
jns
or
pushf
pop
jnp
mulb
jne
test
gs
sbb
mov
mov
call
test
push
jle
sbb
flds
xchg
pop
dec
fs
out
arpl
stc
mov
add
and
lret
fidivs
pop
aas
mov
jae
and
mov
cli
in
xor
shrl
mov
lods
xor
int
mov
cmp
push
inc
popf
xchg
les
sbb
xchg
push
mov
stos
inc
int
lods
xor
lods
aas
and
repz
mov
mov
shll
and
fs
pop
pop
je,pn
lea
roll
push
insb
addr16
mov
inc
ficompl
mov
incw
lret
adc
repnz
fistl
mov
push
adc
popa
inc
cld
mov
sbb
insl
inc
test
jmp
jno
pop
push
fldcw
push
stos
xor
rolb
aad
fildll
outsl
mov
jb
into
rcrl
add
gs
xlat
cmpsb
imul
call
ss
push
mov
xor
test
pushf
cltd
pusha
mov
and
push
scas
ja
ret
ljmp
loop
xchg
mov
pop
push
push
lcall
mov
mov
xchg
xchg
ror
aaa
cmp
adc
in
cld
cltd
mov
mov
lds
call
movsl
lret
outsb
mov
push
xor
pop
enter
mov
pop
xchg
stos
testb
in
fdivrl
push
xchg
repz
or
cmpsb
sbb
push
dec
xchg
push
les
mov
mov
mov
pop
push
or
in
pop
nop
pop
inc
test
and
lahf
add
mov
insb
in
mov
aaa
test
jle
adc
shlb
xor
add
cmp
jnp
adc
push
jle
sub
shl
sub
sub
or
shl
imul
or
lret
ds
cmpsb
inc
loopne
inc
sbb
jg
mov
lods
mov
jb
stc
or
jbe
push
lock
or
shll
rcrb
dec
xchg
pushf
out
mov
cmp
push
pop
and
inc
mov
xchg
idivb
and
mov
lcall
fsubl
mov
iretw
stc
cmp
popf
lret
xchg
mov
inc
call
mov
stos
sub
popf
xchg
add
lds
push
inc
dec
push
sahf
dec
dec
shrl
jo
daa
fisubrl
sti
pop
test
mov
std
xchg
test
out
in
xor
inc
mov
mov
and
dec
mov
lcall
rorl
pop
dec
mov
sbb
pop
cwtl
lahf
mov
adc
lock
adc
xor
loope
add
jnp
sub
shl
mov
adc
hlt
out
aas
or
xor
pop
add
push
or
testb
cmc
test
jecxz
ss
mov
sub
aam
mov
pop
sbb
adc
dec
and
lock
xchg
pop
xchg
iret
add
pop
test
sub
push
pop
jge
icebp
es
repnz
xor
xlat
test
int
lret
inc
or
into
call
mov
sub
inc
xor
xchg
mov
dec
push
xor
add
or
sbb
scas
inc
push
push
mov
jecxz
or
inc
add
es
and
lret
mov
sbb
mov
fwait
cmp
sar
pop
lahf
xor
repnz
cmpsb
mov
inc
jp
dec
push
cs
sbb
fcoml
int
sahf
or
test
push
repnz
es
inc
das
add
sbb
nop
ss
and
daa
mov
ror
jge
adc
inc
leave
add
out
sbb
mov
cmp
andb
adc
sub
xchg
mov
stos
notb
scas
push
ror
mov
fnstenv
add
outsb
or
cld
mov
es
bound
es
enter
adc
add
dec
movsl
xchg
push
sbb
shll
jbe
xor
push
xchg
jle
loope
mov
out
inc
js
mov
mov
rcr
lahf
enter
out
sub
jbe
scas
inc
mov
int
hlt
popa
add
popa
adc
jecxz
sub
pop
or
jg
sub
xor
lret
dec
dec
pop
sbb
repz
push
or
cmc
dec
add
xor
addr16
subl
aad
xchg
sbb
dec
push
inc
sbbl
test
insl
in
shll
xchg
mov
cld
sbb
mov
xchg
push
lds
jge
fstpt
pop
stos
fwait
leave
xor
insb
lods
mov
lea
test
scas
jle
pushf
outsb
mov
daa
push
int3
out
or
ja
jle
xchg
push
test
imul
lds
arpl
leave
xchg
outsb
jle
push
pop
fldenv
add
mov
hlt
jbe
pop
sub
sub
out
jge
and
repz
jmp
lret
and
push
jnp
hlt
and
mov
lds
enter
adcl
adc
dec
inc
in
lock
outsb
stc
xchg
jmp
pop
cmp
pusha
sti
fbstp
out
mov
ror
sti
pop
mov
sub
xchg
mov
xchg
movhps
pop
popa
pusha
mov
js
sbb
les
xchg
aas
push
data16
sbb
push
pop
insb
js
test
cmp
imul
jnp
add
addr16
and
inc
arpl
dec
movsl
inc
xlat
xchg
andb
mov
sbb
add
xchg
hlt
out
rcr
pop
mov
pushf
jg
lods
arpl
xchg
fwait
mov
push
fcomi
pop
loopne
hlt
hlt
dec
mulps
scas
clc
es
bound
xor
sahf
xor
jge
andl
repz
pop
mov
push
add
xchg
mov
cmp
mov
cmp
lods
mov
daa
cwtl
in
fstpl
jge
pop
test
sahf
fstps
jmp
push
lds
or
inc
sub
arpl
pop
clc
les
xchg
jbe,pt
lahf
lea
adc
int3
or
pop
sahf
jne
add
sarl
mov
xor
or
adc
push
jl
xlat
rcr
in
in
shr
inc
pop
arpl
lods
ret
jb
in
out
mov
cs
sub
imul
mov
add
in
add
pusha
movsl
arpl
dec
adc
and
jle
mov
stc
mov
nop
fsubs
cmpl
or
jno
in
scas
ljmp
lds
repnz
jecxz
or
pop
inc
cmp
jl
idivl
test
das
pop
or
movsl
repz
adc
loope
push
mov
push
jo
mov
test
mov
lods
test
jne
xchg
mov
sub
adc
mov
mov
cwtl
jb
lcall
inc
fsubs
pop
and
xor
cmc
or
in
std
xchg
inc
icebp
push
push
ss
jno
sub
pop
aam
sbb
shl
dec
xchg
pop
xchg
fwait
jns
jnp
mov
inc
mov
and
in
aaa
mov
mov
dec
decb
aad
mov
in
fbstp
lods
push
daa
xchg
xchg
xchg
inc
subb
decl
jb
cld
push
orl
cmp
xchg
scas
fs
mov
lret
add
in
gs
sbb
pop
das
inc
add
loopne
push
mov
pop
ffreep
sbb
insl
mov
pop
test
stos
sar
dec
fisubl
dec
and
mov
cmc
into
daa
cmpsl
cmpl
lods
mov
gs
dec
and
jae
cmp
xchg
dec
pop
sub
cmp
xchg
pop
cli
mov
shrl
pop
or
call
jnp
test
aaa
add
and
xor
push
mov
mov
loopne
mov
push
sub
dec
mov
jg
inc
jo
adc
or
rcll
push
adc
cmp
leave
mov
prefetch
pop
dec
je
xor
pop
shrl
or
loopne
or
mov
ret
push
add
frstor
aad
or
std
pusha
mov
mov
gs
pop
xchg
cmpb
pop
dec
movsl
sub
sub
stc
pushf
or
mov
jecxz
rclb
movsl
js
adc
mov
xchg
int3
js
repz
insl
sub
arpl
mov
outsb
sub
das
cli
or
xlat
add
mov
notl
push
sbb
jae
push
xor
stos
sbb
push
pop
pop
enter
insl
cmp
push
lcall
lcall
mov
or
pop
jl
insb
cmpsl
pop
pop
xchg
sti
dec
and
pop
jae
in
out
pop
daa
jle
push
rolb
enter
sbb
inc
lahf
fsubp
jmp
jno
loopne
adc
mov
fiadds
xor
jne
cli
rcl
fwait
or
push
cmp
movb
call
in
mov
dec
pop
cmc
fincstp
mov
mov
lods
pop
int
cmp
dec
insl
mov
outsl
xchg
or
jge
icebp
xchg
jne
sub
fldl
pop
or
sbb
sti
dec
pop
jae
xlat
cmpsb
ret
sar
cmp
mov
adc
mov
jmp
cltd
neg
inc
xchg
repnz
mov
xchg
call
or
adc
daa
and
mov
pusha
pop
add
push
add
or
nop
push
lcall
jmp
cmp
js
lcall
mov
lds
sub
inc
mov
mov
insb
popa
and
push
mov
loop
pushf
push
or
jle
cli
rcr
xchg
add
mov
push
inc
rep
call
sbb
movsb
mov
cmp
mov
cmpl
insl
test
dec
xor
outsl
mov
int
cmp
sub
sahf
imul
in
daa
add
and
jbe
sub
shll
idivl
mov
test
cli
fwait
mov
push
mov
negl
mov
aad
ljmp
xchg
and
pop
mov
mov
jne
cmpb
jge
mov
sub
js
xchg
add
ja
mov
mov
sub
jnp
sbb
cmc
cmp
adc
stos
jmp
mov
sbb
cltd
out
and
mov
mov
arpl
xor
cmp
xor
cwtl
xor
lock
pop
test
call
mov
mov
push
je
jecxz
mov
fstpl
mov
jl
cmp
lahf
xor
inc
cmc
outsl
push
mov
imul
adc
dec
xchg
js
xchg
data16
aam
movsb
imul
or
mov
iret
daa
es
out
or
jecxz
xchg
pushf
int
adc
iret
jg
dec
sbb
lret
pop
cld
push
jg
notb
jo
or
cmp
pop
pop
push
mov
or
sbbl
scas
add
mov
jae
sub
push
ret
mov
xchg
inc
inc
test
bound
cmp
pop
outsb
cmpsl
outsl
mov
fnstsw
pop
add
sti
clc
mov
sar
testl
xchg
in
pop
adc
inc
sub
scas
je
or
inc
or
jecxz
outsl
xlat
scas
mov
jg
jl
sbb
insb
pop
add
imul
mov
sbb
aad
mov
adc
mov
test
rcrb
push
push
or
mov
ret
sbb
push
cmpb
and
mov
dec
lea
lds
mov
into
push
xchg
xchg
mov
mov
clc
inc
arpl
ss
jbe
cmpsl
mov
jmp
sub
movsb
lret
lea
data16
dec
cwtl
dec
pop
jno
pop
inc
rorl
cmp
adc
sbb
test
or
jnp
xor
or
aaa
xchg
ja
add
in
les
dec
test
mov
lods
dec
vcvtsi2sdl
lcall
nop
lret
test
popf
and
pop
dec
mov
cmp
fimuls
adc
pusha
mov
mov
js
lcall
lds
sbb
pusha
andl
rolb
scas
push
add
lret
cld
lods
xor
sbb
pop
loop
dec
pusha
les
fcomps
rclb
cmp
ftst
sbb
or
xor
pop
and
mov
lods
dec
lahf
inc
popa
push
pop
pusha
jne
add
sub
sub
lea
xchg
xor
push
adc
xchg
xchg
loope
nop
xor
sbb
adc
mov
addr16
or
ds
dec
jle
or
and
jmp
xchg
adc
sub
mov
and
rcl
pop
mov
jne
inc
fcompl
xor
cmp
fadd
std
push
rorl
lret
lcall
shrl
pushf
in
adcb
dec
sbb
sar
ljmp
ficoml
mov
or
in
sahf
add
mov
mov
cwtl
sbb
cmc
rorb
lock
cmp
jg
sub
mov
test
mov
loop
jnp
or
xor
out
adc
sbb
rcr
and
call
sub
or
rorb
popl
lcall
ss
jecxz
xchg
mov
xor
mov
lock
mov
add
addl
ret
xor
push
sbb
insb
xor
repz
cli
push
fwait
mov
cld
adc
cli
cmc
std
inc
lock
stos
xchg
shrb
sbb
adc
adc
lock
lea
enter
add
jo
loopne
or
std
xor
or
push
xchg
xor
xchg
out
out
adc
inc
test
aad
je
jle
test
xor
div
scas
sub
mov
sub
pop
xor
xor
inc
adc
xchg
adc
add
inc
stos
jb
in
sub
insl
lock
mov
pushf
or
mov
roll
addl
mov
lret
sub
je
addr16
push
xchg
rorb
mov
or
mov
mov
jg
sub
cmpsb
test
or
enter
dec
fmuls
fdivl
ss
mov
out
out
std
mov
add
fiadds
jbe
ds
fcomps
add
gs
dec
add
dec
mov
push
mov
jl
imul
pop
mov
mov
fisubrl
testb
jl
and
icebp
dec
lea
dec
in
dec
jmp
xchg
sub
jg
push
inc
in
fisubrl
inc
pusha
stos
repz
lods
adc
and
mov
xor
decb
shll
pushf
ds
test
inc
add
movl
pusha
sub
pop
sbb
pop
push
push
std
in
dec
out
jmp
dec
cmp
mov
test
fstpl
in
dec
test
dec
mov
push
clc
sbbb
mov
mov
rcrb
sbb
bound
mov
xchg
movsb
out
mov
and
icebp
arpl
js
cmp
inc
and
xchg
inc
pop
fisttpll
push
jg
sbb
clc
clc
shlb
xchg
add
adc
popa
sub
jecxz
sahf
shrb
mov
or
or
pop
sbb
or
or
cld
es
and
pop
push
hlt
fdivrp
jp
test
dec
mov
test
rcr
sbb
mov
jbe
int
loop
adc
popa
cld
xchg
shll
jl
bound
sbb
sub
fwait
add
enter
imul
mov
incl
out
aas
xor
add
add
pop
push
pop
repz
not
add
out
cmpsl
aad
jnp
dec
push
imul
scas
int
loop
pop
inc
into
push
mov
xchg
pop
pop
adc
js
sub
jp
push
into
jl
sub
xchg
jg
shll
xchg
mov
mov
mov
cmp
in
xor
out
subb
repz
scas
jbe
mov
daa
xchg
fbld
mov
push
sbb
aaa
imul
mov
cmp
mov
loope
out
adcl
sbb
add
mov
jnp
sbb
jae
mov
inc
inc
mov
das
out
hlt
scas
icebp
cmp
stc
sub
lahf
fisubrs
jmp
mov
pop
fiadds
mov
movsl
jae
mov
xor
add
or
cld
pop
nop
outsb
cmpsl
stc
cmp
xchg
lods
sbb
inc
pushf
sub
mov
and
jmp
notl
loope
gs
adc
roll
pop
dec
pop
ja
cmp
fsubp
test
xor
push
adc
jmp
cmp
mov
pop
jmp
and
mov
dec
lds
jle
jo
cmp
in
ficoms
das
adcl
jecxz
mov
jo
pusha
shlb
loope
inc
repnz
mov
jnp
pop
inc
aas
in
aas
mov
cmp
mov
cmp
repz
and
loop
inc
addr16
lds
cmpxchg
clc
in
jae
pop
mov
fcomi
std
mov
andb
dec
sub
add
pop
inc
cwtl
pop
arpl
cld
pushf
dec
jecxz
or
shl
test
mov
test
mov
pop
add
lods
inc
mov
cmp
pushf
mov
sbb
fimull
fnstcw
mov
leave
dec
popa
stc
stos
cs
or
rorb
setp
push
dec
jl
lods
aas
mov
rcl
int3
sub
pop
call
fdivl
dec
add
rclb
cmp
mov
inc
inc
loopne
adc
mov
ja
push
inc
pop
pop
fcomi
push
lods
lods
mov
rorb
push
dec
xchg
sub
fldpi
ljmp
push
out
shr
xor
pop
icebp
stos
lret
xchg
dec
sbb
jo
adc
into
test
adc
mov
or
mov
popf
sub
lcall
sbb
icebp
jge
insl
jmp
xchg
sbb
pop
mov
mov
jae
inc
inc
inc
enter
mov
pause
adc
mov
int
insb
sbb
jns,pn
xchg
dec
loop
sbb
sbb
xlat
xchg
repz
mov
ljmp
push
imul
inc
es
adc
add
out
mov
sbb
inc
jmp
push
mov
xchg
ljmp
scas
mov
xor
add
and
loope
xchg
mov
xchg
pusha
and
pop
or
repnz
inc
ja
call
sarl
mov
cmp
adc
mov
mov
pushf
add
popa
ret
aad
shll
leave
xor
inc
ja
dec
shl
jne
adc
in
in
add
sbbb
add
cmp
inc
xor
mov
push
add
ficompl
std
pop
mov
bswap
int3
pushf
aam
aad
pop
fsubl
jmp
loopne
jns
cmovo
lds
pavgb
mov
and
es
lods
mov
movsb
aam
pusha
mov
xor
js
sti
pop
imul
das
fwait
pop
pusha
inc
fwait
jl
push
aas
dec
sbb
sbb
rcrb
xchg
mov
sbb
scas
mov
sbb
jns
pop
mov
stos
outsb
and
jl
cltd
shlb
sub
mov
leave
test
dec
mov
pusha
sbb
or
sti
mov
leave
das
sub
mov
xchg
js
imul
adc
xor
sub
jb
mov
mov
test
repz
ficoml
push
sahf
daa
stc
push
fs
mov
and
xchg
movsl
lock
stos
fmuls
or
mov
adcb
and
sbb
mov
mov
xchg
add
mov
push
lods
lock
mov
lret
or
std
sarl
mov
dec
ljmp
ret
dec
dec
jne
lods
repnz
jp
test
adc
add
nop
stos
jg
pop
xor
pop
les
out
pop
pop
scas
enter
sahf
cmp
and
add
insb
les
movsl
aam
jge
stos
nop
jg
in
popa
les
mov
push
jge
jno
and
cmp
ret
jp
repz
mov
js
dec
jl
scas
xchg
pop
jg
xchg
das
icebp
lods
movsl
push
ljmp
add
das
inc
xor
mov
jge
sub
movsb
pushl
and
mov
addr16
sub
sbb
adc
xor
cmpsb
adc
dec
push
ss
in
rcrb
or
and
adc
int3
mov
in
clc
jg
movsl
dec
hlt
jbe
sub
shl
shll
dec
adc
lods
sub
out
fs
sbb
xor
sub
decb
mov
sub
test
xchg
xor
mov
jb
mov
sub
xor
das
dec
sub
int
cmpsb
mov
lds
jle
adc
iret
outsl
adcl
in
lahf
nop
pop
or
test
jl
xorb
cmp
jge
andb
fimuls
sub
test
xor
out
push
jbe
aam
ljmp
adc
int
xlat
jae
cltd
mov
dec
gs
lret
dec
pop
sbb
mov
mov
push
cmp
inc
lcall
push
mov
jecxz
pop
imul
mov
rcll
and
leave
add
push
pop
mov
je
lock
cmp
cli
addb
mov
jecxz
out
lea
repz
mov
cltd
int
mov
ss
mov
sub
mov
sub
in
cs
data16
push
stos
dec
cwtl
fbld
sub
ljmp
push
jecxz
push
stos
fisttpl
out
push
test
sub
sahf
sbb
pop
out
push
cmp
rorl
push
cmp
idiv
andl
icebp
push
lds
aaa
xchg
pushf
add
ficompl
jbe
add
dec
xor
imul
jmp
push
sbb
push
xchg
cmp
push
mov
mov
jne
dec
popf
dec
es
lahf
fs
push
out
push
push
pop
call
pusha
inc
jecxz
stos
add
xchg
mov
pop
movsl
sbb
int3
stos
dec
adc
sub
cmpsl
or
ret
mov
shll
cmp
cmp
popf
shrb
int
dec
cmpsl
mov
jb
jnp
std
lds
data16
jnp
cmc
jp
jo
jno
fcmove
and
xchg
fldcw
test
out
bnd
push
enter
pop
notl
xchg
sub
push
std
inc
xorl
shlb
dec
cmpsb
mov
sub
gs
lahf
mov
ja
outsb
ret
xchg
out
in
movsb
sub
movsl
add
cmp
push
push
mov
mov
jle
mov
ja
out
outsb
pop
and
sub
sub
stos
mov
mov
mov
mov
out
xchg
sbb
cwtl
mov
or
inc
inc
xchg
fcoms
push
pop
test
inc
cmp
lcall
mov
jno
inc
imul
mov
xchg
sbb
push
push
nop
inc
dec
sub
inc
xchg
pop
add
roll
rorl
test
sbb
int
dec
add
arpl
mov
les
xchg
lds
idiv
or
adc
iret
cmp
sarl
loop
mov
es
or
call
inc
cmp
cli
daa
and
mov
addr16
inc
into
data16
repz
and
sbb
xchg
push
insb
mov
sub
xor
int3
es
mov
insb
xor
inc
addr16
inc
xchg
add
push
mov
outsb
mov
xchg
xchg
enter
sti
pop
and
and
cmp
cmpb
mov
shll
mov
mov
insb
loop
call
daa
xchg
pusha
xchg
or
add
fistps
push
pushf
int3
sbb
repnz
cmp
xor
int3
ret
cmc
sub
loope
fwait
divl
test
or
dec
testb
lock
or
scas
gs
ss
push
push
stc
js
fwait
test
cltd
jno
sub
fstpt
insl
dec
test
popf
lret
mov
xor
data16
ljmp
sbb
cmpsb
sub
mov
jo
cmpsl
popf
ret
adc
xor
jmp
push
xchg
stos
out
into
or
jp
mov
dec
pusha
out
mov
jno
push
sbb
jno
adc
aam
jmp
adcb
dec
inc
push
push
shl
jb
push
into
pop
jo
mov
insl
stc
aas
aaa
xchg
mov
mov
mov
insb
and
imul
sub
jmp
popf
xor
mov
add
mov
int3
mov
ljmp
sub
jp
jo
je
adc
ss
and
cmpsl
xor
adc
aas
fidivrs
sti
cmpsb
add
in
cwtl
and
iret
pop
aam
sbb
mov
clc
mov
and
fbstp
movsl
insb
inc
les
mov
mov
mov
dec
cmp
call
data16
inc
mov
cmpsb
jno
and
jge
daa
sbb
dec
mov
sahf
fdivrs
sbb
sti
idivl
movsl
mov
lods
cli
rorb
mov
jp
inc
cld
mov
jmp
mov
push
int3
outsl
lods
cmp
and
scas
adc
in
sbbb
fistps
push
xor
enter
insl
adc
or
test
fcomps
mov
in
dec
rclb
arpl
xor
xor
fdivr
inc
xlat
and
lds
imul
xchg
in
xorb
es
test
test
dec
aam
inc
add
lcall
or
add
ds
shrl
out
sub
in
and
repz
xchg
pop
sahf
iret
push
sbb
fistpll
push
sub
aad
pop
xor
mov
push
or
dec
jge
stos
sahf
mov
xchg
test
dec
lret
mov
inc
or
and
mov
das
mov
jns
into
xlat
loopne
adc
push
adc
fstl
inc
mov
pop
sbb
cmp
aaa
lcall
push
imul
je
xor
push
mov
sbb
cmpsl
mov
push
out
push
pop
jl
out
rcrb
xlat
push
scas
mov
add
jge
push
add
xor
cli
cmc
mov
push
push
test
or
adc
add
mov
daa
ret
rcrb
test
sbb
repnz
je
mov
insb
jmp
sarl
mov
mov
sub
xor
and
mov
xor
and
aaa
add
mov
scas
sti
pop
loope
inc
insl
pop
in
sbb
stos
stc
or
es
push
inc
test
ret
add
orb
sbb
mov
and
xor
dec
ja
movl
arpl
cmp
test
int3
inc
inc
sbb
dec
das
loopne
sbb
and
adc
fists
test
mov
lock
mov
roll
leave
fld
cmp
repz
cs
jp
fcmovnbe
jo
dec
cs
inc
push
imul
or
sbb
in
dec
addl
or
xor
hlt
sub
xor
aam
adc
out
aad
ficompl
jnp
pop
test
or
mov
jns
push
jg
xchg
fists
pop
mov
lock
ljmp
test
cvttps2pi
jbe
mov
movsl
jge
outsl
insb
push
ss
push
push
repnz
xchg
push
fcoml
ljmp
shll
xchg
adc
ds
inc
mov
mov
mov
push
xlat
and
outsl
xchg
ljmp
pop
jb
pop
xor
xchg
sahf
jmp
fidivl
xor
mov
mov
jg
mov
push
roll
lods
xchg
fcoms
cmpsb
loopne
xchg
mov
outsb
mov
lds
loope
mov
pop
jbe
mov
jne
mov
mulps
pop
fxch
adc
mov
push
dec
lcall
inc
fs
ljmp
adc
into
mov
lret
pop
leave
arpl
push
adc
int3
or
pop
popl
sub
es
jb
cltd
push
out
mov
lock
cmc
jge
jg
adc
ja
adc
mov
jecxz
jl
mov
lcall
je
mov
pop
xchg
mov
mov
adc
inc
lcall
or
and
jmp
sti
sbb
xor
push
loop
mov
mov
std
mov
test
and
inc
pop
mov
jo
push
loop
adc
pop
das
xor
repnz
xchg
movsb
xor
xchg
sbb
lret
pop
popa
cmp
cwtl
xor
inc
dec
push
sub
add
inc
stos
xchg
lea
scas
popa
clc
cmp
cli
in
fmull
xchg
movq
push
mov
repnz
or
mov
in
daa
jo
aad
mov
outsb
or
or
mov
pop
arpl
lock
js
jecxz
cmp
ja
sbb
mov
movsb
out
mov
pop
int3
ss
aaa
ret
and
imull
push
popa
aaa
fdivl
sbb
fcmovnu
rclb
sti
hlt
lock
std
enter
inc
aam
dec
inc
jg
xchg
add
int3
jo
lret
insl
fcmovnbe
pop
mov
jge
scas
cmpsb
je
test
test
xor
cmp
enter
and
jbe
jge
jo
sub
sbb
adc
into
adc
subl
sub
push
int
outsb
mov
pop
adc
mov
fwait
cmp
fs
loopne
lods
adc
add
lret
ret
and
mov
or
lods
sub
xor
sub
int
sahf
data16
mov
push
and
mov
xchg
xchg
xor
inc
xchg
sub
orb
iret
jle
jmp
hlt
ljmp
popf
sbb
mov
dec
imul
inc
sti
movl
xchg
out
inc
push
jp
xchg
cmpsb
ret
test
mov
adc
scas
add
push
cld
mov
xor
or
mov
repnz
ds
int
jg
lret
out
mov
jp
lcall
mov
xor
mov
jo
cltd
add
mov
arpl
imul
xchg
cmp
aad
out
lea
cmpsl
fists
or
les
scas
and
mov
stos
insl
addr16
inc
pop
mov
mov
xor
sbb
mov
push
mov
aas
pop
sbb
loop
shrl
jecxz
out
xor
mov
ja
sub
ljmp
es
in
sahf
jno
lret
aad
daa
mov
outsl
dec
ficompl
inc
divb
cmp
in
add
loope
dec
push
and
popf
or
pop
xlat
cmp
iret
pop
test
inc
gs
pop
push
std
shlb
xchg
shrb
ror
lea
dec
inc
xor
loop
fidivl
daa
add
adc
lods
jecxz
xor
enter
mov
stos
mov
call
decl
outsb
outsb
test
adcl
pop
sub
xchg
adc
cld
imul
rcrb
pop
push
mov
cmpsb
mov
xor
xor
and
je
sbb
jl
sbb
push
mov
rcl
xchg
insb
test
loope
pop
mov
daa
imul
jl
loop
cmp
fucomi
push
inc
add
addr16
imul
in
xchg
fldt
jmp
cmpsb
sahf
cmpsl
xchg
lcall
lret
or
addb
out
adc
push
aad
mov
cmpsl
pop
mov
adc
call
insl
dec
iret
fs
lahf
sbb
in
pop
jp
push
dec
xchg
or
cmp
dec
dec
fsubr
jne
mov
push
dec
test
mov
out
scas
sbb
push
mov
push
cli
out
mov
push
sub
cmp
sbb
pop
sbb
loop
jmp
xlat
in
fisttps
push
adc
movsl
mov
mov
cmp
push
or
jmp
pop
das
jnp
mov
sbb
shll
pop
sbb
cmp
sub
ret
mov
push
outsb
fstp
push
test
push
movq
jecxz
outsb
add
add
sbb
xor
dec
dec
lret
adc
fsubl
mov
sub
fldt
push
lret
mov
inc
das
lahf
lahf
in
jmp
sub
negb
and
dec
pop
mov
leave
sbb
xchg
mov
push
pop
mov
xchg
and
mov
or
xlat
sub
xchg
dec
inc
icebp
lret
sub
lret
xor
pop
enter
cmpsb
fwait
pop
ss
pop
in
jp
into
and
add
mov
cmp
jbe
mov
dec
jle
mov
xor
fstps
or
aam
test
jl
cwtl
jno
dec
popa
jbe
sbb
jp
das
stos
pop
cld
imul
dec
iret
pop
xchg
out
fs
lods
insb
aaa
outsb
push
fimull
aam
pop
ss
mov
test
icebp
xchg
jb
jmp
repnz
scas
xchg
push
repz
cmp
add
xor
imul
fisttpl
inc
out
call
mov
sub
negl
sbb
cmc
std
ret
movsl
or
or
lret
ja
mov
or
inc
pusha
push
sbb
shlb
jecxz
xchg
enter
fmuls
or
mov
pop
and
mov
or
adc
loopne
test
sahf
clc
or
lods
pop
rcl
cltd
xor
pushf
repnz
pop
lods
mov
int
cmc
mov
xorb
add
or
es
cmpl
or
mov
adc
das
and
stos
aad
push
jl
mov
fiadds
out
div
mov
imul
mov
and
sahf
fistpll
test
addr16
xchg
xor
and
mov
sbb
repz
dec
sub
lret
les
pusha
rorl
add
lret
pop
ffreep
xor
inc
not
int
in
dec
xchg
out
int
cmpsb
pop
xchg
iret
fstpl
jnp
mov
cmp
movsb
inc
cld
push
lods
jns
lock
repnz
xchg
mov
dec
cwtl
pop
mov
dec
pop
mov
gs
lea
insb
jo
orl
xor
bound
or
mov
pop
in
jecxz
jg
sub
in
jns
fistpl
imul
sbb
loope
in
inc
scas
leave
into
push
push
mov
xchg
stc
or
clc
xchg
ljmp
es
ja
sbb
ret
xor
outsb
xchg
push
jbe
hlt
and
pop
andb
daa
ss
jl
cmp
jnp
ljmp
call
adc
aaa
or
mov
push
cmp
sbb
imul
inc
cbtw
dec
repz
call
subb
xor
cli
loope
popa
iret
mov
fwait
add
lret
loope
cmp
test
and
mov
js
lea
insl
dec
mov
xchg
aas
mov
sbb
inc
or
jbe
std
push
cli
inc
or
or
cmp
xor
sbb
daa
mov
shlb
push
loop
adc
daa
mov
movsb
mov
in
scas
arpl
mov
and
loopne
imul
push
sub
inc
ret
in
idivb
xor
shl
push
jno
fists
stos
sti
pop
push
push
lcall
add
stos
pop
mov
test
add
dec
cmp
cmovns
jbe
scas
jns
mov
addr16
cmp
lahf
mov
iret
subps
pop
mov
enter
icebp
cmp
outsl
jmp
mov
iret
add
xchg
insb
rcrb
jns
sbb
fwait
mov
fmuls
cld
out
push
mov
xlat
test
addr16
lret
pop
addb
bound
add
add
mov
in
rcrl
pop
add
xor
xchg
cld
sbb
cli
push
sub
test
cwtl
adc
hlt
jecxz
cmc
inc
pop
test
xor
sub
mov
fnstsw
rorb
mov
insl
icebp
pop
ja
mov
sahf
cmp
mov
xor
mov
mov
adc
out
loope
pop
mov
cmp
xchg
jns
sub
mov
pop
sbb
fnstenv
cmp
loopne
scas
ljmp
mov
es
in
push
jno
movb
mov
sub
inc
lods
insb
adc
xor
xchg
push
jbe
imul
dec
pop
fisubs
fidivrs
push
mov
mov
push
fimull
and
sarl
jns
adc
inc
mov
pop
adc
adc
aas
cwtl
pusha
mov
sbb
hlt
in
int
pop
incl
loopne
fisubl
and
pushf
or
push
add
inc
push
adc
sub
pop
leave
and
jge
bound
mov
push
xor
cmpsb
cld
cmp
popf
and
dec
pop
inc
push
and
js
pop
out
out
jno
cmpsl
loopne
xchg
les
sub
xor
ds
out
nop
ljmp
aaa
call
jmp
add
sbb
outsb
vmovss
add
and
push
jo
pop
inc
dec
or
stc
mov
cltd
inc
data16
bound
lret
push
sbb
push
mov
imul
fstps
add
pop
dec
out
insb
pop
jg
stc
push
gs
ret
jp
push
ja
mov
outsb
push
movsl
and
test
xchg
iret
rorl
and
dec
sti
mov
push
fs
cmp
test
in
xor
rclb
or
and
sub
mov
jmp
and
cmc
cmp
in
xor
dec
test
iret
in
jmp
cmp
leave
xchg
leave
and
mov
inc
mov
mov
push
push
test
jle
out
adc
mov
test
stos
call
pop
repnz
xchg
cld
push
push
cmp
or
pop
pop
sahf
dec
jo
arpl
nop
fstpl
fistpl
pop
or
pop
test
pop
out
sbb
frstor
add
sub
pop
or
or
shlb
js
inc
leave
loopne
sbb
hlt
mov
lock
and
or
into
icebp
xchg
loopne,pt
jo
out
push
jno
mov
pop
scas
iret
repz
sub
dec
jb
or
fimuls
add
cmp
sbb
xor
aas
inc
loope
add
addl
lcall
mov
sub
incl
shll
dec
or
bnd
cmp
pop
xor
or
movsl
ret
inc
nop
aaa
sbbb
mov
adcb
or
push
push
adc
sbb
test
jno
sbb
hlt
mov
faddp
test
push
pop
xchg
jb
aas
outsl
dec
adc
arpl
inc
inc
xchg
imul
xor
cwtl
stos
pop
push
stos
stos
xchg
cs
adc
mov
setae
xchg
and
xorb
leave
test
sbb
aas
in
dec
imul
dec
in
inc
push
xor
xchg
mov
inc
pop
pop
dec
fwait
ds
sti
xorb
adc
ret
dec
cmp
jo
cmc
fs
sub
inc
stos
fiadds
cmp
insb
xor
mov
mov
jb
pop
pushf
test
cmpsl
fbld
cmpsb
sub
iret
jl
lods
pop
sub
and
das
cmpsb
mov
dec
inc
xorb
in
xchg
gs
push
or
cltd
jmp
or
movsb
rcll
js
dec
cmp
cmpsl
sbb
mov
mov
xor
pop
xor
jge
xchg
sarl
mov
loop
sbb
clc
fucomi
sbb
in
sahf
cmp
das
push
lods
push
fwait
jp
mov
in
daa
push
mov
jbe
fucomi
jp
ss
popa
mov
cwtl
fstps
fnstenv
test
jnp
adcb
xchg
mov
xchg
out
xchg
scas
cld
mov
push
dec
push
bnd
int3
pop
outsb
iret
fisttpl
lea
mov
xor
out
icebp
mov
lcall
pop
pushl
inc
cmp
or
popa
mov
dec
imul
push
mov
pop
in
push
aam
jecxz
cs
arpl
lock
pop
pop
mov
lret
mov
imul
nop
pop
fcmovnu
insb
and
das
jne
int
test
mov
inc
cmp
arpl
xchg
xchg
dec
popa
lods
daa
out
cmp
cmp
lods
imul
int3
outsb
stos
mov
inc
push
xlat
stos
sti
sub
add
insl
in
cmp
iret
cmc
push
xor
xor
cwtl
xchg
mov
sbb
ret
cmpsl
jno
popa
pop
xor
sub
mov
mov
inc
jno
scas
stos
arpl
dec
add
stos
push
loope
inc
and
loop
adc
jnp
pop
out
dec
imul
or
sbb
sarl
outsl
or
sub
sar
cmpsb
loop
push
sar
cld
out
and
imul
icebp
xor
sahf
jmp
loope
mov
pop
and
lods
ret
pop
sbb
into
or
jle
jle
out
test
and
js
and
cmp
in
into
inc
div
sbb
pop
mov
mov
iret
xchg
popa
mov
jmp
loopne
mov
cmp
out
fistl
xchg
pop
call
lods
aas
push
das
jl
push
decb
jge
das
andl
mov
cmp
and
popa
mov
adc
ret
je
flds
dec
xchg
jo
rol
scas
push
lds
test
or
enter
scas
jbe
push
je
sbb
mov
sahf
mov
addr16
lock
and
dec
mov
mov
pop
arpl
cmp
cli
test
les
mov
dec
je
pop
ja
jne
mov
jmp
loop
out
mov
push
xchg
push
cmpsb
mov
int3
in
std
hlt
cmpps
push
loope
pushl
iret
lahf
imull
loopne
imul
inc
or
les
pop
inc
adc
sub
shrl
fists
xor
xchg
jge
dec
in
bound
mov
int3
xchg
jae
pop
leave
pop
push
lea
cld
popf
sti
mov
and
pop
push
push
inc
inc
cltd
js
lahf
pop
in
in
jmp
mov
push
int
scas
flds
out
ja
push
add
inc
and
push
pop
ss
faddp
add
test
pop
mov
cli
scas
incb
fwait
cmp
pushf
mov
movsb
xchg
inc
mov
or
push
xchg
rclb
in
pusha
out
mov
jno
inc
test
insb
push
and
push
pop
testl
xchg
or
adc
fsubrp
inc
xchg
xchg
shrb
push
fildll
data16
mov
cmp
sub
add
pop
add
sub
jmp
xchg
gs
push
sbb
inc
adcb
jb
mov
inc
out
jl
in
ror
xrelease
notb
pop
jge
sbb
adc
jecxz
xlat
arpl
cmpsl
pop
mov
pop
or
outsl
dec
int3
test
jl
push
out
insl
lahf
jo
aaa
or
xor
ja
fisttpl
pop
cmp
in
pusha
xchg
scas
jbe
or
add
mov
mov
add
pop
pop
cli
loop
nop
fsubrl
mov
stos
sbb
push
lea
adc
dec
lret
in
sbb
int
jns
jge
out
jbe
and
pop
hlt
or
int3
inc
outsl
dec
cwtl
das
or
sub
fidivl
sbb
and
pop
mov
jo
iret
in
sub
pushf
bound
sbb
push
stos
sbb
shll
push
addr16
add
jae
pop
ds
cmp
jecxz
jae
jno
and
fsts
movsb
iret
scas
mov
out
mov
daa
jle
sti
into
lgs
cmpsb
mov
dec
add
in
les
mov
andl
in
sbb
sbb
add
jg
dec
mov
mov
pop
fwait
and
icebp
inc
dec
lea
ret
push
js
mov
in
shll
out
cmp
loopne
add
popa
cli
jmp
and
repnz
and
and
test
adc
jns
inc
mov
loop
pushf
pop
stos
adc
gs
jl
inc
xchg
nop
mov
nopl
scas
xor
push
push
stos
ss
scas
inc
mov
xor
adc
dec
and
lea
jg
enter
cmpsb
cltd
loopne
jmp
fdivrs
sub
loopne
popa
and
outsl
andl
insl
xchg
flds
jmp
pop
lds
cld
add
mov
repnz
mov
enter
jae
es
push
rorb
mov
push
add
sbb
mov
mov
imul
xor
pushf
rorl
adc
insb
xchg
mov
icebp
xchg
or
and
jge
adc
ds
lea
jo
jp
and
enter
or
das
push
test
call
push
jmp
pop
js
test
jno
inc
inc
cmp
test
xor
fdivp
cmp
lcall
lods
lock
push
mov
loopne
jae
cltd
fbld
or
sub
jmp
and
xor
popl
pop
aaa
fs
cmp
mov
xor
push
or
jnp
stos
mov
inc
lods
scas
mov
out
pop
cmp
js
cltd
insb
mov
mov
jg
and
add
push
jnp
pop
jp
sub
mov
mov
stos
repz
dec
mov
mov
into
ljmp
jno
insl
stos
jle
movsb
cld
push
jae
fsubl
and
lahf
xor
sub
ds
jle
jae
lahf
fdivrl
icebp
or
fcmovne
cmp
and
ja
add
mov
out
mov
mov
mov
pop
adc
pop
lcall
adc
jo
mov
pop
call
jae
add
stc
push
enter
mov
cmp
push
jp
cmp
or
and
int3
add
inc
xchg
stc
add
mov
xor
or
in
iret
mov
mov
repnz
dec
push
hlt
push
jle
nop
es
adc
popa
pop
push
inc
mov
ds
lods
inc
sti
gs
sub
movsl
mov
shl
imull
andl
mov
xchg
jns
add
pop
push
repnz
pusha
lcall
movsl
les
xchg
mulb
mov
push
inc
lods
xchg
xchg
fadd
xchg
fwait
mov
movsl
fcmove
iret
add
push
or
xchg
push
pop
das
adc
mov
adc
ret
sahf
adc
push
mov
nop
scas
shrl
xor
adc
fidivrl
gs
add
out
xchg
xchg
nop
frstor
popa
ja
fisubrs
dec
or
lret
ss
or
sub
and
outsb
lahf
aad
jae
pushf
mov
loop
push
scas
dec
rcrl
outsl
iretw
cmp
jb
or
iret
push
lods
fildll
cmp
sahf
and
push
xchg
mov
nop
xchg
into
dec
subb
xor
iret
mov
or
and
inc
icebp
mov
in
push
xor
imul
jmp
inc
cld
rcll
adc
mov
and
mov
repz
gs
push
mov
cmp
rcl
popf
jno
arpl
sahf
jo
jnp
roll
daa
mov
xchg
test
add
daa
xor
xor
fwait
sbb
mov
stos
aaa
pushf
in
push
aad
xchg
lret
and
insb
xchg
loopne
arpl
in
adc
int3
mov
xor
fstl
fildl
sub
sbb
adc
ja
dec
scas
or
xor
adc
lret
adc
aaa
cs
dec
sahf
inc
adc
cs
push
lret
add
cmp
movsb
jnp
lret
sarb
or
xlat
jl
pop
inc
mov
add
popf
inc
lds
pop
sbb
jecxz
push
stc
sub
jne
push
sahf
iret
xor
adc
push
into
popa
adc
xor
adc
sti
loope
xor
and
jmp
stos
mov
adc
ss
mov
leave
mov
ret
pop
lea
pop
mov
pop
jnp
bound
insb
mov
sub
fnstenv
xchg
scas
lret
mov
lods
inc
mul
out
lds
pop
shll
pop
lds
pmullw
test
mov
lock
outsb
sbb
test
popa
in
jbe
and
push
shlb
lock
testb
movsb
sub
jle
xor
je
in
sarb
in
xchg
inc
ret
cltd
add
push
xchg
adcl
jl
inc
sbb
movsl
std
hlt
mov
sahf
mov
add
scas
out
pop
push
jg
insl
inc
imul
mov
clc
in
addr16
pop
mov
lret
pop
xchg
cld
popf
xor
mov
out
or
fs
and
jae
test
or
xor
adc
dec
or
popf
jae
in
das
dec
sahf
cmp
push
lods
gs
js
clc
dec
push
fdivrs
ret
xchg
adc
pop
pop
mov
push
mov
das
fisubrs
popa
xlat
sub
cmpsl
and
dec
fsub
insb
sub
or
xchg
into
popf
mov
xor
xchg
je
dec
vmread
mov
pop
loope
sahf
and
sbb
ja
jle
lret
imul
jecxz
or
add
mov
adc
nop
sbb
mov
jae
ja
jne
fstps
andl
sbbl
jo
and
ret
push
cmpsl
out
jnp
hlt
test
dec
pop
mov
and
bound
push
xor
xchg
adc
dec
inc
jns
adc
adc
mov
inc
or
enter
cwtl
pop
out
popa
insl
popf
pushf
dec
mov
repnz
sahf
push
xor
je
es
idiv
orl
nop
mov
lcall
jno
jns
insl
mov
aaa
inc
adc
and
shl
mov
ficoms
mov
xchg
aaa
les
icebp
jecxz
mulb
out
movsb
pusha
rcrb
out
jbe
push
stos
scas
mov
or
popa
cmpsb
mov
jle
aad
inc
push
in
cmpsb
shlb
sarl
jno
and
push
add
scas
test
repnz
xacquire
jp
rolb
fisubl
andb
push
imul
enter
xor
mov
sarl
jp
pop
cmp
sarb
insb
lahf
leave
aam
lret
mov
bnd
jecxz
in
sub
movsb
cmp
test
sarl
mov
xlat
jecxz
pop
mov
adc
sbb
lods
push
fmuls
jl
mov
shll
cmp
and
inc
and
nop
sub
add
ds
cmpsl
cmp
inc
iret
in
sub
cmp
dec
add
imul
arpl
xchg
and
repz
sbb
cltd
inc
insl
mov
lret
aas
and
das
aaa
mov
rcl
inc
xchg
out
cld
sti
daa
dec
outsb
jl
pop
lods
cltd
mov
insb
out
bound
sub
add
push
movsl
fimuls
push
clc
lahf
sbb
push
cs
push
ja
mov
push
stos
cs
push
jns
dec
scas
mov
aad
in
and
push
mov
adc
inc
repz
push
or
xor
xor
ljmp
mov
mov
jmp
les
nop
add
dec
dec
cmp
jae
out
push
aam
insl
ret
pop
movsb
mov
mov
add
adc
jns
pop
xor
fistpl
insb
jp
mov
enter
hlt
mov
ljmp
mov
adc
icebp
loopne
loope
loopne
cmp
shll
aad
mov
jno
enter
test
jmp
push
dec
mov
divb
or
aad
sub
and
repz
cmpb
add
dec
in
mov
aas
int
mov
mov
call
inc
sub
mov
mov
fcmovnb
mov
and
push
loop
xchg
insb
repnz
mov
mov
stc
and
add
scas
push
shll
sub
xchg
loop
sbbb
aaa
insl
aas
dec
cwtl
repnz
in
mov
mov
push
cwtl
xchg
rcr
inc
negb
add
adc
mov
push
mov
or
out
xor
mov
ds
movsl
in
ja
push
data16
xchg
and
shlb
jnp
popa
push
dec
and
adc
cmp
cmp
stc
inc
jo
repz
lret
or
test
xor
subb
call
rorb
jmp
rorl
mov
gs
mov
mov
dec
repnz
pusha
xor
push
outsb
loope
pop
jecxz
mov
and
enter
dec
scas
pop
dec
add
dec
add
je
test
in
imul
and
sub
fcmovne
aad
inc
imul
lcall
jp
mov
add
xchg
add
sub
pusha
inc
js
xchg
mov
sub
movsb
sbb
nop
roll
data16
jns
sbb
cltd
daa
jp
or
popf
jecxz
inc
or
add
mov
cwtl
and
fdivl
pop
out
and
sahf
sbb
and
es
jg
jns
cmpl
jne
push
outsl
cmp
jmp
pop
or
rcrb
pop
lahf
in
xor
pop
addl
inc
xorb
sahf
inc
cli
cmp
mov
cmpl
in
call
shl
pop
cltd
inc
repnz
mov
dec
dec
mov
lret
bound
mov
xchg
jl
mov
or
into
xor
movsb
jl
imul
and
inc
cmp
int
adc
je
mov
lods
push
sbb
sbb
sub
mov
out
or
mov
mov
push
xor
mov
xor
cmp
cli
adc
xor
out
rorl
das
cmp
pop
mov
jne
sub
inc
inc
jb
test
jp
bound
es
mov
or
lea
rorl
out
inc
xchg
sbb
pop
dec
mov
xor
sbb
add
test
ss
xor
or
xchg
inc
sub
push
dec
mov
lods
xchg
data16
insb
adc
lcall
in
pop
dec
sahf
fistps
xor
mov
mov
inc
sahf
sti
pop
stos
adc
push
push
push
push
adc
ljmp
loop
cs
fisubl
push
scas
cmpb
push
pop
add
js
cmpl
daa
mov
in
pop
jg
loopne
orl
push
popa
mov
lea
inc
mov
push
push
shrb
fbstp
add
push
das
ss
pusha
scas
and
sbb
sti
mulb
insb
pusha
out
cld
lret
sbb
jo
stos
mov
or
or
pop
rcl
adc
aas
push
enter
cld
adc
and
out
loope
xchg
aam
mov
iret
into
cwtl
mov
test
leave
jno
shll
adc
xor
pop
xchg
cmp
push
imul
adc
popa
shrl
stc
cmp
cwtl
movsl
aam
dec
push
fisubl
lds
push
or
mov
dec
lret
and
cli
mov
pop
or
sbb
and
pushf
pop
xchg
jns
test
insl
push
jo
mov
inc
cmp
adc
xchg
jge
insb
jge
rcl
divb
adc
lods
or
dec
cli
and
pop
pop
scas
lods
dec
pop
test
and
xchg
inc
shr
or
inc
ljmp
aad
jp
add
ret
mov
insl
je
push
mov
inc
push
or
sbb
cmpsb
fcompl
repz
mov
adc
mov
ja
sbb
call
xor
pop
push
mov
fbld
shlb
sub
add
sahf
dec
push
xchg
dec
adc
js
imul
jbe,pn
stc
dec
movsb
jmp
mov
popf
idivl
dec
jns
mov
scas
sbb
jmp
xor
xor
lret
ss
xchg
lods
push
fcoms
push
or
shl
notb
xor
pusha
hlt
sbb
shlb
and
out
cld
or
xchg
add
jb
pusha
ds
adc
loope
addl
cmp
call
inc
pop
pop
test
cld
cs
mov
jmp
stos
mov
sar
and
rorb
out
ret
push
mov
cmc
mov
pop
mov
jl
xor
add
iret
dec
jae
add
cmp
das
shl
lcall
lcall
or
clc
mov
inc
andl
mov
xchg
clc
inc
outsl
cmpsl
dec
mull
cmp
sbb
loope
or
xchg
in
loop
add
push
dec
cltd
push
adc
in
jne
gs
dec
jecxz
add
std
idivb
cmpsb
xchg
imul
test
or
mov
outsb
xchg
sahf
icebp
jns
int3
cwtl
aam
shr
mov
sbb
call
mov
in
insb
lret
push
xchg
cmp
xchg
in
xchg
ds
dec
pushf
push
gs
hlt
icebp
mov
mov
xor
or
add
movsb
pop
jle
addl
ss
xchg
lret
out
int3
push
popa
fidivrs
pushf
lcall
in
repz
imul
sbb
xchg
fs
lods
pop
aas
or
jmp
iret
adc
add
and
lahf
pop
arpl
jne
fwait
jmp
push
or
xlat
xor
addr16
inc
adc
and
push
mov
adc
mov
dec
dec
xchg
sbb
inc
aas
inc
aas
xchg
xchg
aas
shlb
mov
mov
icebp
filds
pop
cmp
sub
lahf
ljmp
gs
idivl
dec
add
inc
mov
stos
loopne
mov
jb
in
push
pop
arpl
int
shlb
fistpll
lahf
lds
adc
notl
test
mov
fs
push
in
pop
and
mov
dec
fs
jns
cmp
jg
test
fcmovnb
jmp
pop
movb
ror
bound
push
test
orl
ljmp
outsl
add
jge
pop
lea
scas
xchg
fsub
mov
insb
icebp
mov
popf
shl
js
push
sbb
data16
mov
jmp
test
push
pusha
mov
sub
jo
xchg
scas
mov
fdivrs
popa
jmp
movl
pop
movsl
jl
mov
sbb
xor
xchg
cmpsb
mov
and
into
das
imul
roll
add
test
stos
in
cli
mov
mov
sub
ljmp
sahf
add
add
in
jb
dec
addr16
xchg
mov
mov
es
fistps
or
or
inc
adc
iret
push
inc
adc
jae
lfs
mov
xor
mov
xchg
test
add
or
jg
jo
dec
lock
test
adc
adc
stos
and
jne
or
out
inc
cmpsl
aas
xor
test
dec
imul
and
adc
push
bswap
negb
out
mov
pop
xchg
xor
lods
sahf
clc
bndldx
in
test
ret
cmp
lea
cmc
cwtl
push
cmp
lret
pusha
shlb
mov
and
ljmp
xchg
ds
xchg
inc
or
adc
xchg
rcrl
sbb
inc
jmp
ljmp
inc
mov
fdivrl
jle
and
pop
inc
rcr
sbb
int3
ret
adc
sbb
xchg
in
xor
and
dec
ret
mov
outsb
les
leave
outsb
jle
inc
scas
aas
and
into
or
js
push
testb
push
xchg
pop
out
xchg
dec
leave
out
sub
xchg
cli
mov
push
push
sti
das
dec
sub
dec
cwtl
adc
fistpll
push
pop
stos
pop
sbbl
sbb
es
inc
je
push
test
add
sbb
ljmp
clc
lret
inc
inc
ret
aam
mov
or
mov
push
adc
pop
shl
or
aas
add
hlt
pop
in
lret
test
dec
scas
and
pop
sub
adc
sbb
cld
xor
je
xchg
jns
inc
mov
outsb
int3
cld
loope
xchg
dec
cltd
lret
lahf
shlb
add
rcll
mov
fstl
lods
push
aas
xor
inc
out
inc
fst
and
rcrb
jg
mov
xchg
pop
pop
xor
cmp
mov
jl
out
fs
loopne
shlb
adc
cli
jb
outsb
arpl
mov
cmp
andl
inc
push
push
sbb
mov
scas
outsl
into
movsl
sbb
mov
cmp
cmp
nop
aam
xchg
mov
ret
sti
stc
mov
jmp
lds
loopne
cli
push
sar
mov
das
je
stos
insl
pop
rcrb
fisubl
sub
loop
xchg
loope
lahf
hlt
add
sub
jge
std
loop
xor
test
jl
adc
mov
bound
daa
mov
scas
add
jbe
mov
adc
jmp
fs
dec
pop
sub
int3
push
or
les
sti
call
jbe
mov
sbb
or
cmc
add
jbe
mov
std
add
pop
loope
and
push
push
popf
int
cmpl
cmp
mov
sub
outsl
sbb
xor
lds
cmp
idiv
add
xchg
lahf
mov
inc
mov
test
inc
ret
xchg
pop
inc
das
cli
ljmp
ret
mov
or
arpl
movsl
push
js
sbb
xchg
pop
sti
push
pop
xchg
or
sub
cli
inc
fbld
jge
lcall
insl
int
add
shr
fwait
lods
mov
inc
fdivp
fidivs
pop
sub
cld
fcompl
jnp
scas
jbe
in
mov
cwtl
or
mull
stos
fs
dec
push
xor
ja
dec
sarb
xor
pop
and
push
ds
inc
mov
loope
je
js
dec
jae
jecxz
ss
push
jg
insb
pop
push
sub
lods
pop
jb
mov
mov
cmp
xchg
call
jge
mov
mov
leave
scas
sub
stc
xchg
sub
out
sub
add
daa
aaa
jae
cmpsb
shlb
fstpl
arpl
imul
movsl
aaa
jae
xor
aad
inc
cmp
lock
push
pop
aas
scas
xchg
iret
out
aaa
cmp
mov
adc
in
call
jo
or
pop
lahf
and
cmp
xor
aaa
mov
pop
jle
dec
fisttps
mov
enter
add
dec
xchg
hlt
leave
inc
aaa
sub
or
je
xchg
fisubl
xor
push
imul
into
xor
adc
sub
add
gs
call
mov
fbstp
pushf
jo
or
andb
je
jne
loope
pop
xor
test
and
test
fsubrs
aaa
cmp
and
lods
xchg
movsb
lods
gs
pop
fcomps
xchg
push
sub
mov
dec
inc
push
js
loop
out
rcl
push
push
test
xchg
sbb
lea
movsb
das
sub
lock
bound
sub
loope
jmp
add
push
adc
push
inc
push
ss
je
inc
lods
or
pop
cltd
lds
outsb
es
mov
addr16
xor
jmp
xor
out
push
jmp
popf
jb
cltd
push
aam
icebp
jl
adc
add
cmp
adc
jb
leave
in
cmpsb
pushf
cmp
sub
xlat
int
pop
notb
push
data16
out
call
push
mov
lahf
movsl
out
push
mov
mov
sbbl
xor
pop
inc
and
into
adc
insb
mov
cmp
sbb
xchg
pop
out
sub
out
sub
xchg
lret
out
xchg
push
jno
outsb
xchg
ret
dec
mov
aam
insb
insb
in
test
cmp
std
das
pop
cmpl
mov
or
arpl
ret
inc
fisttpl
outsb
push
xchg
stos
mov
fsubrl
pop
dec
scas
aam
ret
ret
sbb
jge
ss
jae
inc
aam
mov
in
iret
cmpsl
jnp
cltd
pushf
ret
lcall
in
icebp
std
ss
push
scas
and
sbb
imul
rclb
add
mov
dec
jbe
fs
push
ljmp
sbb
lahf
cmp
std
pop
sti
insb
adc
mov
aas
into
test
clc
dec
mov
mov
lods
push
sub
cmpsb
jne
sub
mov
mov
test
inc
jmp
es
daa
cmp
jns
push
repz
les
ret
loopne
jns
cmp
aas
sbb
ror
out
aad
cmpsl
sub
stos
add
dec
stc
push
mov
add
mov
cli
push
cmp
push
aam
sub
mov
mov
push
push
fstps
je
or
lods
mov
jge
arpl
fsub
pop
sbb
dec
ja
inc
pop
dec
mov
rcr
cld
cld
xor
cmp
xchg
push
lahf
hlt
shrl
lcall
jnp
or
int
jbe
mov
xorb
mov
movsl
adc
mov
pop
jbe
je
cmp
filds
push
ja
stc
insb
fldt
imul
jge
push
aad
xor
ret
adc
or
lea
or
xor
cmp
mov
push
jnp
xchg
sbb
loopne
pop
mov
xchg
dec
xlat
scas
ljmp
sub
int3
mov
push
sub
xorb
cmp
fdivr
lret
push
call
mov
es
fucomi
pusha
mov
popf
hlt
sub
aad
imul
test
rorl
adc
push
inc
pop
lock
pop
flds
xor
add
adc
dec
shrb
cmp
jnp
inc
jecxz
nop
mov
sbbl
jnp
jno
ljmp
sbb
stos
lea
inc
popf
mov
int
mov
mov
icebp
pushf
movl
outsl
in
pop
dec
and
mov
or
scas
sarl
mov
jbe
or
sbb
jmp
rorb
fst
lock
test
fcoml
inc
test
adc
sti
sti
sbb
xchg
xchg
jecxz
xchg
pop
pop
push
cmpl
jo
pop
or
cwtl
pop
xchg
dec
mov
stos
adc
test
pop
pop
faddl
lcall
repz
shrb
adc
mov
inc
mov
mov
jle
popf
add
push
ss
and
sub
jge
cmp
movb
sbb
xchg
gs
cmp
add
xchg
adc
movsl
into
je
mov
out
in
les
sarl
push
das
xor
xlat
xchg
lods
mov
insl
adc
int3
insb
adc
mov
mov
push
mov
pop
inc
add
dec
addr16
and
out
test
shlb
notb
cwtl
out
mov
lods
std
xlat
stos
xor
cmp
or
mov
in
push
repz
and
cmc
sahf
repz
adc
add
shll
int3
repnz
jp
push
xor
lahf
cs
in
rclb
js
fwait
ret
dec
push
outsl
xor
mov
inc
mov
xlat
jmp
pushf
aas
pop
mov
inc
repz
loopne
fs
fsubr
js
loop
lret
in
negl
pop
or
frstor
enter
iret
dec
or
and
cs
insb
or
fisubrs
rcll
push
mov
mov
lods
test
str
cmp
fdivs
adc
cwtl
rcrl
cwtl
enter
and
out
xor
aam
inc
cmp
roll
rcll
add
push
subl
rol
or
jns
xor
push
pushf
adc
leave
xchg
push
and
insb
stc
mov
xchg
ficoms
pop
addb
gs
xor
mov
pop
ror
insl
pop
mov
pop
and
mov
mov
xchg
push
fistpll
dec
jmp
and
scas
movl
push
std
adc
push
xchg
dec
ret
inc
add
pop
sti
inc
lcall
pop
idivb
fists
sbb
xor
pop
out
or
fcomi
sub
or
in
ss
cltd
mov
add
clc
mov
and
sbb
xor
mov
sbb
and
les
rorb
lret
xchg
mov
scas
sub
out
call
jb
xlat
add
out
cmp
ja
test
push
arpl
xchg
lods
rorl
pop
cmp
inc
stos
mov
out
cmc
xchg
sbb
mov
jne
lcall
xor
xor
cli
push
xchg
pop
ret
ja
sarb
outsl
stos
cmp
stos
call
add
ja
or
inc
idivb
lret
es
pop
mov
xor
mov
out
outsb
cmp
push
xchg
push
hlt
lods
lahf
dec
push
subl
outsb
add
mov
mov
scas
xchg
mov
pop
int3
add
ds
movsl
aad
ss
jg
push
cs
mov
push
xchg
mov
jl
pop
sub
scas
fdivs
sub
sti
scas
mov
les
lods
clc
loope
outsl
mov
inc
mov
xor
push
dec
mov
insb
and
mov
xchg
fstpt
addr16
adc
fdivrs
and
sti
lahf
jp
lret
jnp
xor
mov
lret
inc
pushf
or
ja
push
incl
das
xchg
mov
setnp
adc
cmp
add
vpunpcklqdq
cmp
or
add
and
push
cld
xorb
inc
aaa
int
mov
in
pushf
pushf
xor
fs
sub
xor
cli
dec
cmpsl
dec
jl
imul
push
jo
mov
inc
ret
scas
or
jae
repz
adc
adc
add
xlat
adc
and
xor
sub
mov
or
add
add
xor
sub
movsb
adcb
insb
xchg
push
and
xor
cld
mov
into
imul
xlat
repz
not
add
jae
idivb
cmpsl
and
cltd
add
push
cmp
mov
dec
cli
mov
jecxz
lahf
fnstcw
gs
std
out
pop
shlb
xchg
subl
or
push
divb
pop
cmc
jp
out
pushf
pop
and
and
xor
dec
mov
iret
pop
repz
dec
fwait
and
pop
insl
inc
mov
cmp
lds
call
pusha
xchg
mov
xchg
dec
popa
sarb
mov
in
cwtl
cmp
pusha
cmp
orb
push
push
lods
std
repnz
negl
aas
push
or
int
mov
mov
out
and
jno
sbb
pushf
rcll
shl
int3
sbb
pop
call
mov
lret
mov
cmp
imul
sub
inc
push
sbb
movb
jae
mov
jbe
pop
roll
and
inc
cld
xchg
mov
ds
jge
add
xor
xor
mov
in
xor
and
sbb
pop
adc
hlt
out
sbb
cli
mov
repnz
mov
push
mov
push
mov
cmpb
jecxz
push
cmp
jg
mov
xchg
push
jl
rol
out
add
das
xchg
inc
arpl
fwait
rcrl
shll
and
js
lss
fisubs
clc
pop
loopne
jp
mov
sahf
and
cmp
adc
dec
xchg
xchg
pop
out
xchg
or
js
out
loop
or
push
jg
adc
cmp
pop
dec
jmp
jmp
cmp
sub
inc
mov
xor
cmp
xchg
inc
fsubrl
ljmp
in
sub
add
xchg
pop
jmp
or
jne
das
cmpsb
adc
popa
popf
sti
xchg
iret
jge
mov
cmp
fisttps
fs
leave
xor
movsb
sbb
fmul
inc
js
add
sarb
dec
movsb
fstpl
aad
jl
popa
jmp
push
lds
fcompl
xchg
vcvtsd2usi
loope
xor
push
shll
decb
enter
jl
sub
mov
adc
cmp
lods
cmc
adc
sub
dec
nop
add
pop
xchg
pop
dec
adc
cmp
out
adc
adc
inc
hlt
sbb
mov
hlt
ss
aaa
push
outsl
std
mov
xor
les
bound
aaa
jno
lds
xchg
sbb
sbb
push
ret
push
sahf
stos
or
lret
cmpsb
jae
add
push
pop
aam
sub
jge
cmc
pushf
xchg
adc
inc
mov
mov
sbb
dec
mov
cmp
pop
xlat
sub
push
inc
inc
jmp
or
sbb
fidivl
pusha
pop
pop
test
pop
ds
jo
test
scas
nop
lcall
add
mov
insl
jle
ds
mov
dec
shll
out
das
divb
repnz
scas
iret
dec
jmp
out
sbb
insl
rcr
mov
xor
inc
testl
into
or
jbe
mov
int3
push
and
pop
imul
mov
sahf
xchg
xchg
das
or
popf
in
in
dec
cwtl
adc
jmp
sahf
mov
sub
cltd
mov
pusha
pop
daa
cmp
ljmp
popf
and
nop
shrl
sbb
out
lret
jno
inc
mov
pop
jns
dec
les
dec
fcoml
xor
lods
mov
cmp
dec
jp
shll
outsb
jne
and
pop
rcr
test
test
xchg
out
jecxz
dec
clc
cmpb
dec
in
into
dec
or
mov
rcl
iret
repz
xchg
pop
jp
xor
cmpb
out
stos
push
fildl
pop
xchg
sub
invd
or
sbb
fld
cmp
add
fdivrl
jnp
mov
fsubrl
cmp
cmpsb
inc
imul
jae
sub
mov
stc
fisttpl
sarl
aam
and
test
xchg
or
scas
pop
lds
int
lock
leave
subb
ss
or
xor
push
je
lahf
mov
push
sbb
ds
sub
aaa
cmp
aad
mov
inc
dec
mov
sub
test
sbb
or
movsl
lods
movsl
sahf
xchg
cmc
pop
ficoms
es
xchg
pop
in
pop
xor
pop
add
in
insl
cli
in
xor
mov
insb
xchg
and
cmp
sti
jge
fdivl
cwtl
or
add
inc
mov
dec
lret
test
xlat
or
lods
mov
ss
adcl
sbb
loope
lcall
outsl
push
xor
jns
ds
gs
out
mov
js
fsubrl
dec
mov
sbb
sub
bound
aaa
repnz
mov
sbb
cmp
add
ret
sar
jle
imul
daa
insb
stc
test
pop
fwait
aad
pop
mov
and
xchg
mov
leave
sti
xor
rcl
jmp
loopne
and
int
stos
mov
cltd
inc
mov
repnz
cmp
or
mov
xor
push
jne
dec
es
aas
aas
jg
jl
mov
insb
loopne
or
fnstenv
push
stos
push
mov
sahf
dec
mov
test
fstp
fldz
sarb
out
push
xchg
or
sbb
mov
push
mov
iret
xor
mov
and
stos
stos
sub
les
dec
pop
and
pop
sbb
or
neg
inc
xchg
rcll
xchg
add
mov
mov
inc
pop
xchg
out
cli
xchg
cld
imul
and
jns
loop
xchg
cli
cmp
pop
je
sbbl
shlb
cmc
mov
bound
test
sbb
test
mov
fistpl
aas
xor
sbb
adcl
ret
jno
in
fs
xchg
xchg
dec
outsl
add
xlat
pop
inc
push
shrl
and
cs
jbe
lret
sub
adc
movsl
jns
lods
int
mov
dec
mov
sub
xor
push
inc
xor
loopne
sbb
mov
out
pushf
xchg
pop
mov
mov
repz
xchg
cltd
lcall
ds
sbb
pop
add
lret
lahf
ljmp
sbb
gs
rcrb
mov
int
gs
loopne
and
dec
mov
aaa
fldenv
mov
addr16
push
sbb
xor
sbb
mov
cmp
cmc
pop
lahf
loop
pop
sbb
lock
jl
adc
int3
or
cmp
xchg
stc
xlat
add
dec
xchg
mov
daa
daa
out
mov
or
cmp
and
mov
xchg
add
mov
pop
pusha
and
cmp
jne
ljmp
xor
sub
negl
jecxz
add
or
mov
les
push
test
addr16
popa
jne
xchg
out
dec
movsl
xchg
in
sub
out
test
sbb
jmp
jmp
cwtl
cmp
call
mov
lret
ja
outsb
popf
and
les
cmp
lahf
mov
push
scas
in
test
ja
out
cld
dec
in
jae
push
dec
sahf
cmpsb
lock
push
gs
push
push
lods
push
loop
cmc
fwait
scas
and
ret
loope
fldenv
or
je
fwait
pop
jae
pop
inc
xor
addr16
dec
jno
std
xor
data16
out
lods
mov
gs
cmovb
cmpsl
rcrl
sub
mov
pop
jnp
push
fisttpl
mov
inc
cmc
dec
jno
dec
les
cmp
rolb
js
ds
sti
jg
xor
sbbl
mov
fucom
dec
leave
icebp
add
add
add
sub
mov
fcomi
mov
in
push
xor
mov
popl
movsb
push
cmp
adc
jle
push
add
es
mov
push
call
inc
jne
adc
mov
cmp
pop
xor
add
xor
or
xor
bound
xchg
push
xchg
mov
outsb
push
and
in
xor
pop
notl
rcll
out
hlt
out
cmpsb
out
jg
movsl
in
std
stc
ret
movsl
ljmp
mov
push
movl
fisttpll
xor
push
ljmp
gs
lret
adc
cmp
sbb
daa
push
xchg
mov
inc
pop
mov
mov
insl
add
test
pop
enter
lahf
sub
push
in
cmp
push
imul
add
lcall
sub
xor
arpl
fs
jle
xor
jl
lds
mov
mov
and
cmc
and
xchg
out
adc
outsb
dec
pop
mov
xchg
cmpsb
sub
dec
cmpsb
jbe
ja
fldt
popf
mov
sti
sbb
subb
leave
mov
inc
or
ret
rorl
jl
xor
xor
inc
inc
push
neg
dec
inc
gs
es
outsl
sti
or
aaa
cmpsb
pop
jb
outsb
sub
dec
add
cmp
dec
scas
int
push
add
jecxz
add
repz
pusha
cli
adc
mov
call
in
push
mov
aaa
jl
mov
push
adcb
ret
arpl
daa
mov
test
call
aaa
or
mov
out
test
jnp
popf
leave
cld
gs
stc
xchg
rcrb
popa
clc
pop
mulb
jl
subb
jecxz
arpl
cmc
pop
inc
mov
dec
pop
cmp
sti
jg
add
pop
test
sbb
testl
repnz
stc
sbb
dec
add
stc
arpl
insl
out
fiaddl
mov
shlb
mov
xchg
mov
test
mov
sbb
hlt
fs
sbb
pop
add
sti
lret
and
xor
rcll
outsl
mov
push
int
push
movsl
sub
arpl
jmp
insl
mov
lea
cmp
pop
int
xchg
adc
int
shlb
sti
adc
shl
push
dec
daa
les
imulb
sbb
cmpsb
mov
dec
fldcw
xchg
out
or
or
lds
push
jl
dec
pop
push
sub
scas
ficompl
xor
std
popf
pop
lret
and
xchg
pop
push
out
push
xchg
cmpsl
into
mov
aad
ret
in
xchg
cmp
rclb
call
xchg
sbb
jmp
xchg
add
ret
lods
pop
scas
bound
xor
addr16
or
mov
in
test
scas
stos
aaa
mov
addr16
fstpt
dec
sbb
int3
jno
popf
ret
lret
psubq
dec
xchg
sub
mov
add
sub
sub
pop
cmp
xor
decb
test
insl
pop
jge
xor
dec
mov
push
inc
je
pusha
add
mov
add
mov
push
push
mov
nop
cmp
das
loopne
push
sub
sub
cld
sti
mov
mov
push
and
scas
xchg
inc
sbbl
cmp
ret
pop
imul
jbe
fiaddl
imull
pop
and
mov
aaa
mov
push
or
xlat
mov
or
adc
cld
and
dec
sti
pop
cld
adc
xchg
mov
outsb
xor
lock
repz
pop
lret
addr16
ds
or
xchg
ljmp
add
xor
mov
sub
fwait
and
pop
lds
mov
insb
pop
pop
sub
cmc
pop
addl
dec
add
je
stc
ss
xor
xor
sub
xlat
es
and
popf
xor
xchg
insb
adc
pop
push
mov
push
hlt
es
enter
in
jno
test
mov
adc
cmp
je
aad
roll
mov
cli
sub
popf
test
cmp
ret
and
push
xchg
adc
mov
xchg
mov
int3
testb
out
dec
imul
in
cs
cmp
sbb
inc
lods
cmc
xchg
push
push
stc
lock
xorl
jp
jecxz
fistps
pop
dec
in
das
fisubl
loopne
imulb
adc
das
lds
loopne
jnp
les
pop
xor
add
inc
fisttpll
popf
ret
fcmovb
hlt
cwtl
jecxz
rcrb
mov
subb
arpl
inc
jl
pop
ljmp
lcall
inc
hlt
fcompl
das
or
jb
jo
or
inc
push
cmpsl
out
jns
arpl
int
jmp
add
stc
cmpsl
mov
and
dec
aam
pushf
dec
stos
adc
cmp
add
rclb
dec
repz
divb
cmpsb
cmpl
cmp
cs
insl
pop
test
roll
add
hlt
mov
insb
push
add
or
outsl
lock
push
mov
je
shll
xchg
cmp
xchg
adc
inc
stos
cmp
ftst
lcall
xchg
lods
rcrb
std
sub
mov
jns
xacquire
mov
jecxz
add
mov
xor
lcall
and
insl
mov
fcoml
into
mov
adc
imul
into
dec
mov
pop
out
or
fnstcw
into
add
mov
mov
and
ss
mov
xor
test
push
jl
adc
xor
insb
mov
sbb
orl
inc
push
insb
aad
stos
std
xor
or
xchg
shll
cmp
fbstp
mov
push
out
loope
sarb
fs
xor
hlt
adc
jns
arpl
and
cli
mov
cmpb
addr16
shll
fcoml
les
pop
adc
je
daa
iret
mov
mov
aad
test
add
adc
mov
mov
and
inc
out
lahf
jne
pop
fstpt
mov
iret
outsl
jae
mov
mov
mov
xor
cld
mov
jns
xchg
push
test
sub
aad
pusha
xor
in
pop
mov
mov
mov
pop
imul
test
cmp
iret
test
add
movsl
into
imul
pop
outsb
xor
sti
sbb
movsl
dec
pushl
stos
cli
inc
test
fidivrl
leave
loopne
mov
mov
cmc
lret
xor
movsl
shll
nop
push
mov
cwtd
pusha
push
popf
jge
mov
data16
cld
sbb
jmp
clc
mov
sbb
and
jge
loope
out
repz
rorb
sbb
imul
xor
fnsave
cmpsb
orb
test
adc
das
imul
jl
movsb
or
pusha
inc
sub
add
ds
negb
iret
dec
mov
jno
aas
ljmp
mov
ljmp
mov
sub
lods
repnz
shlb
dec
leave
mov
cmp
movsb
testl
pop
fidivrl
aaa
dec
push
jno
cmp
int
mov
dec
aas
inc
sub
fucomp
in
jl
cmpsb
push
inc
leave
inc
xchg
pop
or
addb
lahf
lahf
mov
jae
cmpsb
mov
xor
dec
cmp
push
jmp
xchg
mov
decl
sub
icebp
outsl
adc
cmp
mov
sub
xchg
pop
int3
fisubrs
imul
mov
sbb
xor
xchg
je
pop
sbb
adc
lahf
sbb
jmp
sbb
nop
cltd
out
sar
mov
in
sar
stc
push
add
test
xor
inc
sub
and
out
movsl
adc
push
sti
popf
cmc
repz
dec
pop
pop
mov
sub
xchg
insl
jp
lcall
fisttpll
fisttps
imul
lret
mov
inc
push
lahf
scas
sub
adc
push
loop
stos
jecxz
inc
sub
shlw
pop
pop
cwtl
popa
and
stc
fldl
inc
xchg
sbb
cmpsl
jae
outsl
push
push
xor
jns
jmp
scas
sub
sub
add
jbe
lea
add
xorb
in
mov
jmp
sbb
shll
dec
outsl
test
fistl
mov
iret
loope
aaa
xchg
sbb
test
adc
cld
and
or
push
cli
cmp
cmp
inc
sbb
dec
pop
adc
mov
xchg
or
pop
cld
and
adc
adc
sub
cmpsl
dec
nop
ficompl
xchg
cmp
shrb
test
push
push
outsb
inc
mov
insl
or
push
sbb
outsl
addr16
jne
adc
sbb
cmpsl
popa
sub
mov
push
daa
fdivrs
or
movsl
lcall
aas
pop
cmc
pop
xchg
call
inc
jnp
dec
jle
jcxz
push
cmp
scas
std
imul
outsb
scas
arpl
pop
cwtl
addb
inc
popf
fadd
adc
shlb
push
rcrb
ss
dec
push
sbb
add
ss
sub
and
mov
out
xor
int3
movsb
cmp
mov
push
loop
or
or
icebp
sub
repnz
repz
mov
in
pop
push
test
mov
out
or
xchg
mov
fcmovne
popa
movsb
xchg
loopne
pop
jle
cmp
fnsave
mov
ljmp
test
cwtl
fcom
fcompl
jnp
nop
cmp
sarl
mov
sti
jns
ret
repz
mov
jb
test
or
cmc
or
push
sbb
mov
fsub
jle
mov
jae
lret
scas
inc
aas
loopne
les
cmpsb
popf
pushf
out
lods
push
pop
scas
push
mov
mov
dec
pop
sbb
vpcmpgtd
lods
push
int3
shlb
fbstp
hlt
scas
call
sbb
and
mov
cli
inc
test
cmp
sub
push
push
stos
adc
sbb
and
xor
dec
jne
mov
jl
push
mov
mov
testb
jmp
push
xor
fs
aam
inc
mov
mov
inc
test
pop
mov
and
pusha
lods
imul
imul
adc
lcall
push
and
cmp
cmpsl
lock
lcall
cmp
ja
xchg
js
cld
adc
jb
adc
jno
pop
pop
out
je
fwait
lahf
pop
xchg
out
repnz
adc
jle
adc
popa
cmp
ret
mov
mov
mov
stc
dec
inc
mov
sub
pop
sub
ja
arpl
pop
test
loop
sub
mov
mov
addr16
ret
call
pop
stos
lods
das
pop
pop
and
mov
push
sub
mov
pop
pop
sub
test
fdivr
fucomip
mov
push
xlat
push
xor
sub
dec
jbe
orl
insl
mov
data16
or
mov
in
xchg
xchg
mov
or
dec
idivb
jmp
jl
scas
push
enter
arpl
push
inc
jp
popf
loopne
pushf
fldenv
cmpsl
mov
dec
jbe
lret
sbb
andl
pop
pop
stos
mov
lcall
scas
repz
das
daa
je
adc
xchg
jns
sbb
cmp
aas
pop
enter
lcall
in
xchg
jp
scas
cmpb
mov
dec
enter
jbe
je
adcb
cli
xchg
cmc
inc
ja
imul
push
xchg
dec
cmp
xlat
enter
inc
or
ror
jo
cmpl
and
cmc
mov
inc
push
inc
cld
pop
sub
mov
bswap
test
insb
or
pusha
adc
xor
enter
bound
pop
inc
je
loop
mov
cld
pop
jnp
jge
faddl
xchg
aad
fsubrs
inc
mov
inc
pop
out
pop
mov
fmul
jmp
mov
outsb
push
hlt
push
inc
inc
push
pop
mov
pop
push
lds
push
push
fisubrs
aad
decl
push
xor
popa
mov
sahf
xor
mov
pop
jmp
fnstenv
insb
out
pusha
cs
or
adc
add
sub
mov
clc
or
inc
stos
adc
add
ljmp
scas
dec
fisttpll
dec
out
idivl
loopne
mov
pop
mov
test
stc
mov
or
ret
xchg
repz
push
int3
mov
adc
pop
iret
jg
dec
icebp
or
nop
jb
ret
and
aam
inc
jne
mov
xchg
and
inc
dec
lret
xor
loop
mov
les
in
lods
outsb
adc
adc
xlat
jge
loop
push
imul
mov
dec
inc
cwtl
xor
xor
add
push
lods
nop
and
outsb
sub
pop
and
push
icebp
ja
sbbb
ror
cmp
lcall
fwait
rorb
lcall
daa
inc
and
dec
mov
xchg
movsb
ljmp
xchg
cltd
call
or
pusha
mov
test
aaa
jle
dec
push
iret
test
test
sbb
push
popf
pushf
out
mov
add
or
sub
push
imul
xchg
xchg
cmp
jmp
ss
mov
xorl
rol
jne
adc
xchg
cltd
push
mov
ja
jmp
mov
or
mov
jne
mov
sbb
cmc
cmovl
add
pop
inc
in
cmp
inc
clc
mov
xlat
push
push
mov
or
inc
sbb
mov
das
sub
xor
pusha
in
jl
cmp
push
jo
outsl
out
xor
shlb
mov
mov
pushf
sub
daa
or
scas
stos
rcr
lods
sub
psllq
loopne
cs
push
mov
outsl
jbe
push
pop
insb
mov
dec
idiv
push
aaa
test
jge
mov
push
xor
or
stos
jo
dec
push
mov
shr
pop
sbb
pop
mov
dec
in
int3
add
stos
nop
mov
popf
xchg
fldl
subl
repz
fdivs
test
ljmp
jo
int3
push
call
shr
jno
clc
xlat
insb
xor
adc
push
adc
sbb
dec
clc
sub
outsb
adc
aaa
sbb
ret
or
and
iret
lret
das
mov
pushf
sub
sbb
mov
pushf
mov
cmc
je
push
clc
fsubs
lock
sub
dec
gs
aam
push
rclb
lret
outsb
repnz
scas
shrb
dec
xor
shrb
mov
add
pop
mov
scas
sub
outsl
sub
mov
mov
xchg
addr16
mov
inc
inc
mov
rorb
leave
dec
imul
mov
insb
stos
push
lret
push
fsts
test
insb
dec
arpl
ret
jo
lods
dec
sub
xchg
cmpb
ret
inc
lods
mov
je
mov
mov
sbb
push
or
mov
insl
aad
ret
fs
adc
sbb
mov
adc
test
mov
jnp
loop
aas
jne
mov
jnp
jbe
xchg
idivl
push
mov
dec
mov
mov
sbbb
clc
stos
pop
pop
mov
fmull
rcl
or
xorl
lods
into
xchg
insb
loop
in
dec
lahf
sbb
push
xchg
ds
push
fcmovne
outsb
xor
lock
mov
aad
pop
nop
dec
mov
sub
hlt
sub
pop
cmpsl
mov
jb
out
jecxz
or
sbb
notl
lret
sbb
or
mov
push
in
mov
push
nop
jb
fisubrl
and
mov
push
je
clc
add
mov
mov
push
ret
mov
mov
push
mov
cltd
dec
jp
dec
jnp
pop
imull
int
push
insl
fwait
scas
daa
or
adc
sbb
pusha
ret
mov
xchg
pop
dec
mov
int3
int
je
ss
push
push
mov
sbb
lods
and
inc
xchg
sub
xor
inc
jo
dec
pop
mov
or
push
je
dec
int3
daa
lds
nop
cli
and
es
movaps
push
xor
stos
jmp
inc
loope
ret
pop
outsb
and
cld
sahf
add
out
adc
cmp
pop
ret
call
adc
adc
mov
mov
fwait
mov
mov
pop
jno
xchg
push
pop
jmp
xor
enter
dec
sahf
pop
mul
ds
cld
bound
gs
in
lods
scas
add
cmp
les
add
dec
in
xchg
mov
iret
js
xor
icebp
das
test
pushf
rclb
loop
push
cmp
xchg
ja
outsb
mov
cmc
jle
pop
or
inc
jne
in
andl
std
inc
sbb
push
lods
inc
cs
jp
push
clc
ja
push
hlt
mov
mov
lods
xlat
loopne
mov
mov
stos
test
adc
pop
lock
in
testb
jno
cmp
jo
cmp
push
jp
and
mov
insb
fdivp
outsb
push
fnstsw
adc
add
cmp
cli
aas
stos
sti
daa
inc
push
fldt
and
sub
cmp
or
fcoml
loop
repnz
enter
arpl
jp
and
mov
repz
lods
shll
xchg
popa
cld
aaa
adc
push
clc
jnp
sbb
test
jecxz
movsb
pop
insb
xor
mov
and
push
and
mov
mov
push
fnstcw
push
and
mov
fs
xor
fisttpl
mov
mov
mov
and
repnz
dec
push
out
sub
adc
stos
insb
out
ja
add
mov
inc
and
movl
xor
sbb
jp
inc
loopne
mov
outsl
test
pop
or
inc
in
inc
roll
jge
daa
mov
out
aad
dec
scas
movsl
jb
mov
rclb
fadds
sub
test
out
cmc
push
adc
out
xchg
das
mov
pushf
dec
shll
mov
popa
cld
mov
out
dec
imul
mov
jb
mov
pop
lret
sarl
lds
pop
outsl
aaa
popf
ss
inc
mov
call
sub
dec
push
mov
xchg
and
mov
daa
fsubrp
out
in
lahf
repnz
push
push
pop
mov
divl
xor
adc
iret
out
mov
push
inc
call
xor
add
add
loop
mov
push
lret
ret
testl
stos
daa
dec
fisttpll
sub
hlt
fadd
out
sarl
call
dec
or
iret
test
cmpsl
fisubs
out
cld
xchg
lret
xchg
movsl
aaa
pop
and
inc
inc
cmp
mov
jns
mov
sti
pop
int3
adc
ret
pop
rorl
sbb
cmp
es
movsl
or
mov
mov
sbb
cli
add
add
cld
xchg
adc
cwtl
push
mov
scas
fst
lods
xchg
ret
mov
stos
in
push
mov
repz
or
and
jecxz
cmpb
jg
dec
xlat
movsl
stos
leave
pop
gs
or
add
in
aas
test
mov
ljmp
xchg
inc
inc
stc
xor
sub
mov
add
jno
mov
test
shr
dec
and
pop
enter
sbbb
in
movsb
mov
sbb
stos
adc
fwait
sbb
or
rcr
ror
push
punpckldq
aad
insl
imul
sub
mov
roll
xor
pushf
shlb
jo
xor
sbb
dec
mov
fbstp
push
xor
test
dec
mov
fwait
stos
jne
ficoml
or
imul
mov
or
nop
sub
into
mov
jo
adc
fidivl
cmp
call
cmp
xchg
outsl
fnsave
and
mov
repnz
bound
mov
cmp
dec
insb
aaa
insl
sub
rcr
test
jnp
das
mov
push
cmpb
add
mov
mov
inc
add
sbb
addl
sbb
push
int3
xchg
mov
ret
add
ficompl
call
jle
cltd
jne
shlb
insb
clc
lea
arpl
aas
pop
clc
or
mov
int
addr16
aam
adc
lods
mov
cmp
mov
add
andb
sbb
rol
outsb
ljmp
add
push
pop
pop
add
fdivrs
sbb
das
add
push
outsl
xchg
jno
mov
sub
jle
fldcw
lds
in
and
test
sbb
aaa
inc
sti
xor
mov
outsb
sub
push
and
xchg
aaa
sub
mov
add
pop
mov
sub
and
je
cmp
aam
push
adc
xor
arpl
mov
scas
hlt
pop
imul
adc
cmpsb
clc
imul
add
rcl
aaa
jle
int
paddq
test
clc
shlb
popa
stc
bound
mov
push
or
aad
xchg
mov
mov
testl
ret
rcrl
mov
jg
rcll
cmp
and
mov
mov
loop
lock
lahf
xlat
movsl
lock
outsb
xchg
dec
add
pop
pop
xchg
inc
mov
mov
jo
mov
loope
popa
or
outsb
xor
jno
dec
int
dec
int3
mov
sub
jle
into
rcll
push
cmp
sarl
mov
cmp
inc
in
pop
xrelease
cmp
repz
lods
aad
imul
xchg
or
loopne
dec
pop
pop
fidivs
push
lock
aad
adc
leave
mov
pusha
push
push
ja
das
mov
xor
adc
mov
xor
mov
mov
les
add
sahf
fistps
cmp
and
mov
aad
lret
in
dec
mov
mov
ret
fcmovnbe
jg
outsb
dec
sub
rcr
pop
jo
sbb
dec
inc
outsl
test
adc
dec
jb
fs
sub
dec
scas
cmp
xor
stos
sub
mov
mov
in
test
jo
pop
int
mov
movsl
sub
pop
lret
movsl
data16
mov
pop
fldt
inc
mov
leave
jecxz
xchg
xor
int3
into
sub
xchg
pop
arpl
pop
fcmovne
push
mov
in
mov
enter
js
add
fimull
inc
js
jp
push
mov
mov
shll
pusha
xchg
jmp
inc
movq
adc
fistpl
or
or
out
lret
insl
repz
pop
pop
cmpsb
les
or
adc
ret
dec
xchg
fisubrl
int
push
jg
and
sub
sbb
fimuls
sub
jae
mov
xchg
xchg
mov
lock
je
inc
and
jg
iret
ds
adc
lcall
sub
lahf
cmp
stos
xor
shrl
stos
push
jp
xor
test
xchg
insl
mov
adc
loope
aam
xor
xchg
xchg
sub
inc
out
fsubrs
push
push
mov
mov
cmp
or
xchg
pop
cmp
mov
adc
pop
add
xchg
xchg
sbb
imul
xlat
sub
jmp
xchg
and
push
mov
inc
cmp
xor
mov
cmpsl
push
daa
lock
test
cmp
lods
sub
test
das
jbe
adc
fs
cmp
cltd
rclb
ljmp
loope
xchg
sub
sub
cmpsb
daa
rol
or
int3
xorl
popf
pop
jo
jg
enter
adc
mov
cmc
xchg
int3
test
mov
cmp
jge
inc
ja
nop
mov
scas
or
push
dec
xchg
daa
xorl
adc
fidivl
lock
repnz
lods
out
or
sub
mov
cmpsl
xchg
mov
jb
xchg
dec
adc
mov
mov
cmpsl
sub
insl
cmp
out
pop
or
cmp
jg
lret
insl
and
test
and
imul
adc
cld
xchg
mov
repnz
cmp
jp
adc
movsl
mov
cmpsb
loopne
cltd
es
cmpsb
insb
mov
mov
ljmp
loop
add
inc
pop
dec
fs
cmp
push
ja
mov
sbb
mov
insb
mov
ret
xlat
and
into
and
inc
inc
pmovmskb
rcll
popa
loop
dec
fsubrs
add
or
add
push
add
mov
jno
js
sub
sbb
cld
scas
int
scas
xor
test
mov
sbb
loop
or
xlat
xorb
adc
pcmpeqb
in
inc
cmp
inc
scas
add
lods
cmp
ds
popf
data16
outsl
cmp
mov
fadds
adc
inc
lods
aas
mov
adc
mov
pop
adc
ja
sub
sub
xor
add
dec
lret
lock
mov
popf
repz
jge
sub
gs
test
popl
inc
or
arpl
pop
and
pop
and
pop
sbb
out
subl
mov
clc
xchg
mov
cmp
fidivrl
adc
mov
sub
sub
xchg
xchg
pop
dec
aam
test
fwait
add
pop
lret
stos
pop
aaa
lret
dec
outsb
and
aas
sbb
adc
xchg
or
fisubrl
mov
movsb
xor
pop
mov
sub
sbb
int
and
gs
shr
jns
fcmovnu
enter
mov
xor
inc
stos
movsl
dec
das
xor
push
cli
aad
mov
xchg
mov
ljmp
adc
shll
add
and
push
xlat
pushf
mov
cld
dec
inc
mov
in
mov
push
rcrb
pop
js
enter
lcall
outsl
xor
mov
pop
mov
mov
mov
sbb
inc
out
mov
in
jnp
push
push
mov
dec
mov
sar
in
cwtl
test
xchg
addr16
ja
jo
faddp
xor
scas
lock
xor
sub
and
push
mov
xlat
in
sbb
stos
test
vmovaps
negl
insb
ds
movsl
jns
fldz
push
pop
pop
add
hlt
mov
rcrl
popa
dec
scas
dec
push
inc
sti
sbb
inc
pop
dec
out
pop
fsub
jo
lock
jl
jge
imul
jmp
jns
icebp
lcall
stos
dec
stos
inc
xor
aaa
rcll
jnp
fmull
repnz
xchg
inc
shll
mov
loopne
outsb
push
negl
add
xchg
adc
mov
fistl
push
add
add
inc
xor
addb
mov
mov
shrb
push
xor
sbb
bound
add
mov
adc
add
inc
and
lods
push
push
add
mov
mov
add
sti
xchg
cmp
ret
push
mov
lahf
jo
mov
in
fwait
or
ret
mov
insl
jae
jp
sbb
lock
cs
push
push
xchg
mov
jns
sahf
cmpsl
mov
mov
add
mov
cmc
daa
cld
pop
or
sahf
xor
jp
jecxz
mov
jo
inc
jge
inc
shll
ss
shrl
test
jl
mov
ljmp
ljmp
push
mov
imul
iret
test
inc
pop
jne
lret
into
xchg
mov
xchg
jno
scas
cmp
lods
jecxz
sbb
and
in
out
cmp
xchg
inc
ljmp
jb
push
mov
jmp
outsl
mov
jmp
push
test
movsl
int3
or
fnsave
sub
movsb
sahf
lahf
mov
lods
sub
test
xorb
add
flds
sbb
stc
ret
in
repnz
mov
cmc
dec
fucomi
push
mov
cld
mov
pop
dec
mov
fs
xor
push
aaa
out
mov
mov
out
adc
pop
loope
lods
call
divl
fwait
andl
scas
aad
imul
arpl
mov
std
lds
out
mov
orl
cmp
fldcw
enter
sbb
cmpsl
xchg
or
sub
and
xchg
cs
aas
push
mov
into
push
ret
jmp
push
sub
insl
fistps
sar
in
jnp
jns
adc
push
test
adc
movsb
gs
sub
stc
mov
lahf
mov
and
pop
jecxz
mov
sbb
adc
sub
in
add
sbb
test
mov
fsubp
iret
push
shl
and
jecxz
xorb
add
push
aas
aad
daa
jle
jl
inc
ficoml
popa
cld
bswap
cmc
rcl
adc
inc
int3
das
fists
adc
xor
insl
mov
aas
aad
imul
xlat
inc
dec
push
xorl
mov
arpl
imul
shrb
or
hlt
ljmp
xor
les
es
je
dec
cs
adc
inc
fstl
in
std
sahf
out
xor
mov
addr16
mov
into
out
jno
jbe
orb
ss
mov
or
dec
mov
std
mov
shlb
mov
popf
fcompl
stc
es
aam
jo
push
add
sub
in
pop
inc
lds
push
enter
lcall
add
mov
fwait
in
push
inc
push
lods
pop
aas
sbb
cmc
jnp
cli
xchg
xor
in
dec
iret
clc
jae
insb
out
cltd
pop
add
dec
mov
mov
jge
jo
dec
rcl
hlt
data16
cmc
out
dec
jle
mov
test
jno
out
dec
fdivs
push
sar
mov
mov
pop
pop
ja
cmp
cmp
push
pop
dec
mov
inc
loop
sbb
pop
sbb
enter
imul
fnstcw
arpl
xchg
leave
out
push
jo
sub
cmp
pop
sahf
loopne
xor
pop
out
js
into
jb
xor
sub
mov
mov
fcmovbe
adc
push
stos
inc
loopne
and
out
add
test
cwtl
out
jbe
bnd
adc
adc
cwtl
mov
push
lret
push
mov
cmp
aas
iret
pop
pop
repz
dec
fucom
pop
sub
and
add
push
mov
inc
inc
mov
push
in
mov
popf
sbb
jecxz
fisubs
mov
fistps
addr16
cmp
and
add
push
sar
mov
add
mov
out
jecxz
jb
xchg
fsubrl
cmp
xchg
bound
sub
enter
push
cmpsl
scas
les
mov
stos
sbbb
dec
sarl
jle
mov
xor
inc
jg
cmp
cmp
loope
in
dec
jno
add
mov
xor
pop
jae
jb
jb
add
cmpl
jmp
pop
jns
sub
sub
loop
out
cmp
enter
out
idivl
jo
lret
add
cmpsl
dec
leave
xor
add
jbe
jmp
fildl
pop
jno
cs
fsubl
jbe
or
cltd
jmp
adc
fistpll
incb
ss
jne
or
inc
lods
mov
jbe
fisubrs
push
popf
xchg
sti
pusha
or
mov
test
sub
lds
std
push
mov
bt
nop
lds
ja
movsl
icebp
call
ficompl
jne
cmpsb
jne
cmp
mov
imul
xchg
inc
loop
push
xchg
shlb
mov
and
lret
inc
ficoms
shlb
inc
shrb
lock
scas
and
inc
call
jae
insl
sti
sbb
outsb
push
scas
mov
dec
add
aad
mov
cs
xor
gs
xchg
popf
sub
jbe
mov
lret
cld
movsl
cwtl
inc
je
and
cmp
out
adc
pop
xchg
ss
push
sub
xchg
cmpsb
call
arpl
out
decl
pop
mov
push
in
xchg
mov
jle
xchg
jbe
cmpsl
das
mov
pop
and
test
jmp
arpl
xor
pop
lret
or
movsb
sbb
xor
stc
cmpsl
adc
jmp
movb
fiaddl
or
mov
aam
fdivrs
out
inc
inc
mov
mov
xchg
dec
mov
mov
add
sahf
jl
jns
mov
movsb
dec
push
lods
jnp
mov
inc
add
test
mov
sbb
dec
nop
adc
pop
cmp
roll
pop
or
sbb
pop
mov
mov
xchg
sub
aas
rol
dec
rcrb
cmp
in
je
daa
ss
sbb
cld
mov
adcb
push
pop
loop
mov
iret
pop
test
stos
and
cltd
pop
es
aad
jnp
push
pop
sub
out
ss
ret
lock
aam
int
ja
ljmp
jno
out
inc
icebp
ret
movb
mov
sub
clc
repnz
cltd
mov
test
popf
jb
cmp
lock
mov
iret
popf
faddl
fldl
ds
pop
in
test
mov
cmp
xchg
faddp
rcrl
test
push
xlat
fwait
iret
and
pop
or
mov
call
arpl
dec
mov
in
insb
pop
pop
sbbb
shlb
mov
enter
test
push
cmc
js
mov
xchg
lock
cmpsl
sub
pop
cmp
xor
sub
lret
mov
mov
mov
ss
addr16
sbb
in
lret
dec
outsb
test
jnp
popa
push
pop
lcall
or
inc
icebp
mov
mov
pop
orl
dec
fcomps
shlb
inc
inc
fisubrs
cmpsl
mov
xchg
inc
gs
xor
sub
ja
jbe
push
push
lcall
cli
lret
or
outsl
ja
scas
lds
lret
in
pop
xchg
cmp
xor
adc
inc
aad
sbb
pop
iret
fldl
xchg
enter
dec
mov
and
xor
lock
inc
mov
and
jbe
insl
inc
fildll
idivl
inc
je
hlt
test
movsl
inc
xor
mov
outsl
stos
inc
shl
repz
inc
pop
dec
sub
pop
aad
test
cmpsl
idivl
cs
pushf
xchg
sbb
lock
mov
add
mov
cmc
cmpsl
call
mov
es
mov
icebp
addr16
add
int
cwtl
xlat
fnstsw
add
outsb
ret
mov
xor
clc
lods
test
adc
xchg
roll
or
cmp
lods
out
sbb
or
bound
add
ds
in
xchg
xor
dec
sbb
jne
bound
stos
ds
leave
out
pop
jne,pt
stos
loope
inc
imul
pushf
cmp
icebp
xchg
cmp
mov
inc
adc
push
movsb
shl
jbe
fs
sbb
mov
cmp
xor
lock
cmp
fwait
pushf
add
xchg
or
cmp
sbb
hlt
mov
pop
aam
jecxz
lcall
mov
and
push
in
divb
outsl
loop
test
in
das
mov
xchg
stos
scas
out
repnz
ficomps
or
imul
mov
aaa
jne
xchg
adc
je
lock
sbb
sbb
outsb
test
rol
push
icebp
int
std
sub
pop
ret
pushf
jmp
inc
sbb
andl
add
or
ja
pop
sbb
push
notb
mov
xor
push
mov
lods
push
add
movsl
fisttps
roll
adc
push
adc
ficoml
xlat
ljmp
pop
cmp
jp
sub
inc
lcall
dec
xor
lret
loopne
jae
lahf
push
aad
add
xor
inc
mov
or
or
inc
jp
jns
out
ljmp
pop
insl
out
xlat
or
xchg
pop
sub
push
push
mov
xor
jnp
repz
lcall
cmp
pop
mov
in
or
cmp
addb
stos
and
or
out
inc
out
into
sub
nop
jo
dec
add
dec
adc
inc
rcll
inc
adc
in
jns
mov
daa
jbe
jne
lods
in
jns
cmc
xlat
fsubrl
fwait
pop
jb
pop
sahf
or
out
insl
pop
mov
stc
xlat
lods
rcrl
loopne
sti
ret
dec
std
testb
dec
cli
test
mov
cli
inc
sub
xorb
into
jns
fdivrl
xchg
outsl
cmp
dec
jg
andb
xchg
mov
xchg
stc
push
cs
adcb
cltd
sub
inc
cld
cmc
pop
sub
mov
pusha
pop
in
ja
negb
loope
fldenv
inc
cmp
mov
inc
call
xor
add
add
pop
jae
push
jnp
cmp
mov
outsl
les
mov
and
xchg
mov
adc
jns
push
push
and
in
pushf
xor
imul
adc
mov
cmp
or
mov
adc
sbb
mov
xchg
or
pop
ret
shlb
lcall
mov
jno
adc
push
sbb
ret
jbe
ds
jne
popa
mov
aas
push
ss
mov
test
lea
xchg
mov
incl
sbb
pop
mov
adc
or
inc
inc
mov
dec
cmp
mov
mov
xor
adc
dec
pop
mov
stos
insl
out
cmpl
xchg
stos
aas
adc
mov
mov
xor
mov
inc
xchg
inc
sbb
mov
pop
mov
sbb
loopne
or
shrb
fnstenv
scas
push
lock
and
testl
cmpsb
out
or
scas
incb
mov
push
dec
adcl
insl
or
lock
arpl
sub
inc
pop
mov
dec
jns
mov
out
sub
mov
movb
and
mov
test
adc
ss
push
add
xor
clc
dec
xchg
mov
xor
mov
jl
mov
fistpl
sbb
ret
out
fsubrl
sbb
rcll
pusha
mov
jns
lods
inc
sbb
arpl
xor
pop
jge
xlat
aas
lods
jno
mov
push
mov
push
cld
jp
out
jnp
aad
in
jg
test
mov
push
and
es
dec
mov
xor
test
push
sbb
ficoml
leave
test
xor
out
popa
inc
or
dec
fldcw
out
in
dec
push
jo
xchg
and
xchg
sahf
adc
jecxz
jae
in
inc
aad
arpl
int
or
add
xchg
je
test
rclb
in
push
scas
repz
inc
adc
and
mull
daa
addb
fwait
jns
dec
xorb
jmp
repz
and
lods
negl
int3
out
cmp
sbb
and
mov
test
mov
xor
les
fistpl
pop
movsb
pusha
insb
fsubrp
in
addr16
outsb
icebp
mov
shlb
mov
mov
insb
cmp
int
addr16
pop
out
dec
mov
daa
add
and
data16
adc
dec
jb
out
setne
mov
adc
mov
sbbb
cs
aas
imul
push
sub
mov
sbb
and
ret
mov
pop
push
push
imul
mov
sbb
notb
mov
xor
es
sahf
pop
sbb
fs
or
sbb
pop
adc
jmp
arpl
icebp
sbb
add
gs
adc
jnp
out
sbb
push
loop
push
les
orl
xchg
mov
mov
xchg
loope
rcrl
mov
mov
pushf
enter
jmp
mov
inc
push
imul
jb
jae
lret
xlat
xchg
sub
data16
jmp
xchg
inc
out
inc
pop
push
add
push
sbb
or
pop
out
sbb
pop
xchg
imul
push
clc
jle
sbb
test
add
push
in
jbe
scas
cmpsl
mov
add
cltd
lahf
adc
inc
dec
mov
movsb
xchg
in
adc
sub
cmpsb
mov
mov
loopne
notl
sbb
shlb
in
out
mov
jle,pn
jecxz
sbb
lds
cli
mov
call
iret
loope
pop
outsl
xchg
push
cs
fisubl
push
jecxz
aam
mov
les
adc
mov
mov
fnop
mov
lock
xchg
xchg
adc
jne
cmpsl
enter
xor
sti
aad
mov
add
scas
sbb
in
lods
inc
test
mov
insb
inc
jg
mov
mov
dec
mov
add
jecxz
jle
lods
in
mov
ret
pushf
cli
repz
out
pop
xor
inc
mov
mov
mov
mov
xchg
inc
ja
dec
mov
movsl
das
cmc
ss
dec
add
fnsave
pop
sub
add
mov
sbbb
sahf
ja
sub
sub
into
jle
and
dec
mov
adc
pop
jg
jb
jo
sbb
mov
push
cmp
out
push
dec
jbe
adc
lds
stc
frstor
push
sub
push
lret
cmp
mov
loopne
xchg
jle
fimuls
add
jno
push
out
jae
sbb
and
push
xlat
test
cs
adcb
pop
je
push
setns
jmp
mov
movsl
or
mov
mov
lods
cwtl
sub
clc
pop
mov
rorb
pop
jle
sub
adc
xor
mov
lahf
jbe
mov
jg
pop
js
addb
pop
cmp
scas
mov
fsts
icebp
or
int3
mov
lods
and
pop
loope
push
inc
mov
sbb
xor
push
sub
xchg
and
lods
lea
inc
vrcpps
mov
lret
push
lock
dec
lea
mov
xchg
mov
fisttps
popf
adc
sti
xchg
bound
push
add
into
pushf
jl
and
sbb
popa
or
mov
lock
mov
xorl
mov
pusha
insl
inc
xchg
roll
pop
cltd
xchg
lods
jmp
mov
pusha
pushf
testl
cmpsb
cmp
scas
adc
in
aad
stc
jae
std
lahf
out
out
in
cli
cli
cmp
mull
aaa
xor
xlat
and
push
xor
pop
or
inc
das
or
inc
jl
mov
add
mov
pop
xor
mov
aas
imul
cmp
pop
or
cmp
jb
inc
std
cmp
sbb
in
inc
sub
adc
jno
mov
mov
sbb
out
pop
push
aad
cmp
ret
mov
jae
inc
push
xchg
adc
shlb
xchg
add
inc
mov
xor
mov
out
push
shll
outsl
inc
insl
sbb
ret
pop
mulb
negb
stc
sbb
jle
decl
or
das
jne
sbb
mov
jge
in
enter
add
nop
imul
inc
arpl
inc
cmp
cld
ror
scas
inc
dec
jns
ja
cmp
jnp
xor
mov
cmp
pop
lods
outsl
lods
sub
mov
mov
sbbl
cmpb
insb
xchg
dec
dec
jnp
or
adc
stc
adc
mov
mov
pop
or
orl
adc
xlat
out
jae
dec
adcl
mov
fadd
lret
cmp
iret
cmp
jle
pop
outsl
int
cli
lret
lock
loopne
and
sbb
mov
xor
and
test
pop
nop
adcb
lods
push
jbe
push
in
popf
out
fistl
scas
es
push
xchg
push
inc
dec
into
mov
sbb
pop
sub
test
xor
mov
dec
pop
mov
sbb
push
test
sub
popf
fisubrs
sbb
mov
lods
rorl
sub
mov
nop
xchg
and
add
xor
test
cs
xor
mov
sbb
cwtl
mov
mov
jp
xlat
jg
xchg
push
subb
jp
cmp
scas
mov
fdivrp
aam
cmp
pop
jno
int
jmp
cmc
jp
push
jo
mov
adc
push
jg
add
cmp
adc
inc
jnp
jae
jo
cmp
cs
ja
inc
adc
fsts
cmp
lds
in
and
mov
sahf
mov
cmpsl
push
notl
mov
push
pop
inc
bound
sbb
mov
add
negl
cltd
mul
mov
push
pushf
test
pop
add
inc
push
push
repz
in
lret
cmc
add
daa
in
int
xchg
jge
cmp
jle
xor
or
insl
sbb
pop
mov
ss
js
adc
cmp
sub
and
mov
stc
jbe
fs
push
lcall
adc
je
jns
pop
popf
hlt
inc
sub
sti
rcrb
xchg
cmp
sbb
iret
push
mov
pop
dec
mov
jo
jmp
and
testb
mov
push
jbe
mov
movsb
sarl
ret
fcomip
rcll
dec
or
test
fwait
outsb
fldenv
dec
jb
lahf
jge
jl
test
in
mov
lahf
inc
outsl
scas
pop
add
dec
test
shl
push
mov
sti
jle
subl
out
into
icebp
mov
enter
dec
sti
push
and
xchg
pop
cltd
add
cltd
loopne
add
xchg
jne
or
lahf
mov
pop
mov
cli
and
les
xchg
mov
sbb
pop
incb
jns
pop
push
or
int
in
std
sub
sbb
and
pop
lods
fistpll
outsl
jae
mov
aaa
pop
test
dec
mov
insl
cmp
push
inc
and
setnp
push
and
int
mov
mov
ffree
cltd
mov
pop
mov
sbb
xchg
add
mov
lcall
push
lods
test
adc
sbb
cmp
ja
push
add
andb
ret
pop
outsb
fwait
sub
int
lahf
pop
rcrb
mov
lret
fwait
pop
or
jle
inc
mov
and
test
popa
int3
and
adc
mov
sub
fs
xchg
fisttps
xchg
clc
push
lea
lods
clc
les
or
gs
pop
in
xchg
aaa
ret
dec
add
fdivs
lock
inc
pop
icebp
dec
mov
popa
mov
cmp
cwtl
push
imulb
mov
call
push
and
pop
hlt
cld
add
notb
jne
aaa
pop
out
sub
gs
adc
popa
lret
daa
lods
js
sahf
mov
cmp
rcrl
insl
pop
test
pop
in
pop
push
push
lds
fstps
fidivl
pop
ss
imul
adc
inc
rol
into
mov
jo
je
clc
jo
mov
jmp
sub
ljmp
in
pop
mov
mov
cmp
mov
cli
xchg
aaa
mov
fmulp
xlat
iret
xchg
std
sbb
dec
mov
mov
add
repnz
fs
inc
or
loope
mov
aas
negb
out
sbb
push
push
int
popa
fadds
addb
ret
gs
stos
ret
cmpsl
jl
cltd
adc
adc
cmpsl
int
aam
cmp
inc
inc
mov
pop
loopne
mov
nop
xchg
shl
dec
aas
and
xchg
dec
fidivs
sub
into
stos
jae
pusha
cs
adc
bound
add
arpl
mov
les
ret
xchg
sub
mov
push
mov
fs
push
jnp
xchg
add
ss
iret
lea
clc
mov
dec
stc
mov
fstpl
ret
lock
test
mov
sub
inc
mov
push
mov
add
inc
outsl
dec
xchg
jbe
shrl
bound
fstps
add
push
xor
cmp
pop
jne
or
and
ds
aad
sub
inc
arpl
ret
sbb
sub
add
and
stos
scas
js
pop
aad
or
dec
lods
dec
gs
push
iret
ja
rol
out
stos
mov
stc
pop
jb
es
dec
orl
shlb
xorb
mov
inc
lret
lret
and
fcoms
lcall
add
push
lea
js,pn
jno
push
or
inc
cld
inc
lock
pop
sub
jl
push
cmpsl
dec
mov
add
pop
aas
mov
sbb
sarb
out
xorb
pop
xchg
imul
mov
jne
adc
mov
push
xor
jmp
dec
rclb
leave
ficompl
ficomps
sbb
leave
lcall
lcall
xchg
popa
aas
fisubs
jge
xchg
cld
add
test
adc
insl
inc
ljmp
fdiv
clc
xchg
mov
mov
in
into
outsb
iret
movsb
in
fcomip
scas
ret
sbb
lahf
mov
cmp
jle
add
mov
jne
pusha
add
fs
movsb
cltd
call
mov
in
les
xchg
fwait
adc
pushf
xchg
add
ljmp
jnp
mov
mov
shlb
dec
cmp
mov
xchg
cltd
inc
push
gs
jmp
push
push
test
fists
dec
inc
push
int
sahf
out
outsb
jl
aaa
test
pop
loop
imul
add
push
jecxz
lea
fisttps
and
or
add
mov
pop
push
xchg
inc
call
pop
call
mulb
out
pop
fdivr
ror
call
xor
idiv
mov
pop
sti
mov
ror
jmp
ja
decl
adc
int3
adc
mov
push
xchg
jb
add
and
push
jno
test
mulb
arpl
imul
in
das
push
clc
mov
jle
gs
in
adc
pop
loope
push
stos
stos
insb
push
jl
daa
out
jne
mov
inc
aas
je
dec
and
mov
sahf
in
push
push
es
sub
in
aad
push
std
and
mov
and
pop
out
sbb
xlat
test
lcall
mov
mov
ja
xchg
pop
aas
lret
ret
jp
fldt
jb
sbbl
jnp
fidivrl
push
push
scas
sbbl
imul
cmp
mov
loopne
jnp
jmp
mov
in
arpl
in
cld
pushf
mov
mov
insb
ja
dec
add
sbb
pusha
ds
pop
adc
lods
cmp
xor
xlat
push
and
mov
movsb
in
and
jbe
fldt
in
inc
xchg
outsb
mov
sub
sub
jp
pop
xchg
inc
xor
shrl
dec
ds
jge
xor
dec
sarb
sbb
leave
out
pop
mov
inc
jecxz
and
out
into
fwait
test
cmp
popf
mov
insl
mov
dec
pop
sub
call
lea
push
nop
iret
shr
pop
and
or
lock
pop
jl
xor
jae
hlt
dec
rolb
arpl
jle
sbb
out
push
incb
sub
sarl
mov
sti
pop
out
insb
xlat
add
mov
data16
mov
fisubl
sbb
inc
cltd
sub
jl
push
adc
xor
lret
test
cltd
sar
and
dec
shll
mov
jmp
mov
sbb
loop
dec
pop
int
mov
and
mov
add
in
inc
jbe
addr16
inc
sbb
mov
faddl
sbb
xchg
dec
pop
inc
add
xlat
push
push
movsl
addl
jns
shlb
leave
pusha
and
addl
mov
scas
push
test
push
pusha
and
outsb
cmp
icebp
dec
cmp
addr16
sbb
jle
fwait
movsb
dec
sarl
hlt
cli
inc
loope
cmpsl
test
rcll
jecxz
inc
cmc
rcl
push
aas
or
adc
mov
in
inc
cld
mov
scas
adc
scas
jb
adc
faddl
xchg
inc
js
mov
jecxz
sti
dec
shlb
inc
sub
lcall
iret
xor
mov
add
adc
cmp
xchg
add
mov
inc
ljmp
lea
dec
and
jnp
stos
movsl
iret
push
pop
pop
push
int3
and
jo
dec
jmp
xchg
dec
cltd
lods
adc
inc
pop
mov
lret
fsubr
push
jmp
and
and
xor
mov
or
push
data16
push
sar
lcall
inc
or
push
xchg
test
mov
clc
xor
pushf
into
out
jle
lods
mov
adc
stos
fistps
jns
inc
scas
adc
inc
stos
in
out
int
cmpsb
out
mov
push
dec
mov
cld
sbbb
pop
sti
xchg
push
mov
dec
jns
stos
gs
shlb
add
inc
add
std
xchg
jno
mov
inc
push
call
push
aaa
lret
divl
stc
cli
lcall
imul
mov
xchg
mov
call
lods
cmp
ss
mov
idiv
shl
std
fwait
cmc
bound
cld
cmp
adc
cli
insl
faddl
pop
in
xchg
xor
clc
xchg
and
mov
pushf
test
push
mov
sbb
lcall
andl
xchg
addb
mov
into
inc
mov
pop
push
adc
aaa
push
loopne
out
sbb
test
test
sahf
out
adc
mov
cmp
pop
sub
ja
rorb
sbb
add
jge
sub
sarl
loope
ja
rolb
dec
loopne
jle
pop
ret
cltd
jmp
mov
nop
jmp
loope
out
and
jne
jge
inc
cmp
mov
nop
and
clc
mov
cmp
not
aaa
idivb
jecxz
xchg
je
stos
hlt
mov
roll
insl
mov
hlt
adc
cmp
adc
out
test
xlat
cmp
icebp
fcmovnb
je
push
cli
xchg
lret
xor
add
cmc
xlat
sarl
xor
vxorps
sub
pop
dec
inc
add
in
fs
or
aam
fwait
mov
daa
push
xchg
jl
cwtl
xlat
pop
mov
in
shll
push
fwait
test
mov
mov
movsl
adc
cld
mov
ljmp
push
test
hlt
jle
daa
es
imul
aam
or
xor
xchg
dec
outsl
pop
stos
and
fwait
adc
je
mov
mov
sarl
cmp
lret
inc
out
jmp
fsubrs
and
pushf
push
clc
xor
insl
lock
scas
dec
push
inc
test
xor
pusha
sbb
repnz
pop
dec
jmp
push
mov
dec
sub
pop
aaa
mov
pop
and
xorl
push
lcall
out
pop
repz
inc
scas
or
push
aam
mov
jo
jge
push
aas
mov
jg
loop
mov
cmp
icebp
cmp
ja
sbb
fstl
int
es
ror
cld
push
dec
sbb
adc
pop
or
cld
les
ret
fmuls
pop
or
jp
int
mov
sub
mov
fwait
pop
in
mov
mov
arpl
jl
xchg
data16
imul
or
xor
and
rorl
xchg
mov
jp
in
leave
in
mov
push
rcrl
inc
arpl
push
xchg
daa
ror
add
imul
lret
pop
fimull
test
mov
dec
fistpll
jne
rorw
call
mov
mov
mov
xchg
fisubrs
mov
fxtract
aaa
push
mov
push
out
push
mov
push
mov
pushf
xor
pop
add
jbe
or
or
xchg
add
or
out
xchg
popf
xor
xchg
mov
mov
jns
out
shl
jne
in
cmc
xchg
cltd
movsl
bound
xchg
jno
cwtl
aam
in
sub
test
cmp
push
hlt
pop
je
mov
bound
dec
cwtl
jae
out
ret
add
je
sbb
adc
mov
mov
shll
xor
mov
and
cmpsl
dec
and
into
jns
and
mov
jg
sbb
lcall
sbb
nop
loopne
adc
sub
movsb
cmp
mov
and
jnp
sbb
jl
jbe
stc
insl
out
in
lahf
nop
stos
pop
ja
jp
xchg
pop
cwtl
out
jge
push
stos
xchg
adc
xlat
or
lahf
push
iret
push
jno
add
jmp
and
imul
mov
mov
scas
dec
cmp
pop
pop
sub
fnsave
cli
pop
subl
fisubrl
scas
adc
loope
jecxz
jge
lods
fnstsw
out
cmp
mov
lock
pop
mov
xchg
lahf
mov
std
adc
mov
mov
pop
pop
xor
pop
pop
dec
mov
lock
cli
sbb
push
lcall
stos
js
mov
dec
mov
adc
pushf
leave
push
adc
sbb
gs
pop
roll
pop
aaa
push
mov
dec
dec
pushf
jge
ret
repz
cli
or
mov
filds
cmpb
xchg
out
hlt
dec
rcrl
xlat
clc
pushf
pop
mov
jl
xchg
loopne
and
jge
lret
lods
or
mov
rol
inc
ljmp
adc
std
fbld
sbb
sbb
es
call
mov
push
or
fdivrs
in
jl
cmp
cmp
push
jmp
mov
add
dec
andb
jnp
arpl
mov
fwait
dec
pop
jg
xlat
mov
add
mov
fwait
and
outsb
int3
push
rol
adc
in
pop
fsubr
dec
xor
jge
cmp
cmp
loop
add
inc
sti
test
and
mov
push
lahf
push
les
xor
pop
test
testl
in
mov
fdivl
add
jo
into
idivl
in
ljmp
aaa
ljmp
jno
mov
inc
add
cmp
inc
and
mov
js
cmp
cmp
jmp
add
add
mov
mov
dec
inc
xor
jbe
add
outsl
jae
sub
ss
jb
mov
or
test
cmpsl
cli
or
mov
aad
add
push
jb
mov
and
jecxz
lods
insb
mov
dec
fisttpl
cmpsl
jecxz
dec
ja
fwait
push
xchg
mov
divl
jg
cmc
xchg
ja
pop
adc
sub
xchg
push
sub
aad
sub
mov
or
and
cmp
xchg
jmp
push
mov
arpl
pop
ljmp
adc
dec
cmp
test
push
fcoml
mov
mov
dec
popa
mov
push
and
sbb
cmp
jne
mov
repz
xchg
sbb
mov
sub
mov
cmpl
ret
mov
and
adc
popf
repnz
mov
add
js
inc
loope
jp
cmp
shlb
cltd
pop
sbb
ja
clc
inc
in
pop
jecxz
pop
inc
cmp
mov
cmpsl
push
pop
pop
lcall
pop
aam
dec
shlb
xchg
xchg
mov
aaa
pop
sub
stos
into
mov
outsl
arpl
out
ret
jp
pop
lock
mov
mov
and
mov
cmpl
lret
xor
push
sub
cmp
in
add
cmp
lds
loope
push
notl
jno
adc
or
ljmp
in
les
movsl
sub
sbb
or
movsb
movsb
addr16
ret
inc
repnz
pop
les
mov
dec
inc
push
mov
lock
lods
lea
mov
add
mov
cs
dec
ja
cwtl
lods
stc
jg
into
push
sbbl
push
cmp
adc
xchg
jl
mov
or
dec
sti
mov
stos
push
aad
push
add
fisttps
rorb
faddl
das
jmp
lds
out
push
dec
orb
in
dec
mov
jae
in
mov
pop
or
loop
test
xor
mov
inc
push
add
or
nop
loope
fwait
stc
mov
jge
lret
sbb
popf
inc
xchg
push
xlat
clc
or
xlat
xor
add
pop
scas
jle
in
mov
aas
pop
jb
and
mov
stos
inc
popa
mov
jns
add
mov
clc
cltd
adc
mov
movsb
leave
in
or
push
mov
ss
popa
daa
xchg
sbb
cmp
orl
scas
cmp
lahf
jne
lock
test
lcall
mov
sbb
mov
pusha
dec
and
das
or
scas
test
into
imul
push
shll
loope
insb
test
mov
adc
adc
arpl
in
xlat
call
icebp
mov
popf
xchg
add
dec
pop
cs
roll
push
aad
xlat
andb
push
fcomip
daa
lsl
push
mov
jg
icebp
lret
incb
dec
out
push
stc
enter
jp
lock
or
mov
add
pop
repz
pop
cmpsb
out
sub
shll
movsl
dec
cmc
nop
sbb
xchg
mov
cmp
movb
xchg
or
arpl
jecxz
cli
or
xor
sbb
movsb
into
mov
aam
ftst
adc
xchg
inc
fistl
jp
stos
lods
fisttpll
insl
pop
jge
call
aam
mov
aaa
adcb
push
cmpsl
adc
jl
movsl
cmpsb
fiaddl
adc
pop
sbb
fdivr
mov
cmc
mov
ja
jns
int3
xor
loope
sbb
xor
mov
loope
sti
xchg
mov
ret
sub
rcrl
int
enter
add
lcall
gs
cmp
fadd
pop
push
outsb
int
aam
ljmp
push
daa
les
adc
je
cmp
pop
xchg
pop
mov
ss
aas
jnp
sti
mov
xchg
lock
stc
mov
fdivrl
inc
loopne
icebp
xorl
iret
cmp
mov
sti
dec
or
rol
in
xchg
testb
xchg
dec
cmp
xchg
ja
ss
mov
inc
cs
dec
xlat
jg
call
xchg
nop
es
jg
out
mov
cli
xchg
xlat
and
aaa
sub
lahf
aam
push
xchg
in
or
decl
adc
fs
lds
pop
push
test
cs
imul
jo
rcrl
out
pusha
cmp
xor
negb
scas
or
mov
mov
mov
mov
es
jns
icebp
out
mov
ret
add
inc
es
push
addb
sub
test
bound
pop
mov
nop
mov
stos
repnz
mov
arpl
bound
jns
jg
push
pushf
ret
mov
mov
pop
sub
pop
dec
jne
push
movsl
mov
pop
push
mov
fcmovbe
mov
xchg
lods
or
xchg
push
pop
inc
cmp
int3
call
cmp
jb
into
xchg
stos
mov
inc
fistpll
xor
xlat
jns
inc
jge
sbb
loope
xor
adc
in
cmp
loope
and
sub
cmp
pop
jae
mov
ss
loop
dec
jo
mov
sub
repz
in
aaa
xor
cmp
add
mov
loop
mov
xchg
mov
out
mov
add
jne
mov
rolb
inc
jnp
subl
out
sub
dec
icebp
mov
inc
mov
cmpsb
or
jecxz
outsb
inc
nop
or
inc
test
aaa
imul
sub
and
fldenv
aam
sbb
test
dec
pmaddwd
ljmp
cmpsb
cmc
add
dec
sub
mov
mov
dec
pop
bound
cmpsl
testb
mov
daa
add
mov
es
stc
repnz
dec
test
out
push
mov
mov
fistps
xor
sbb
push
xchg
mov
adc
inc
jae
or
lret
sbb
pop
dec
and
add
sbb
mov
sbb
out
mov
add
je
add
ja
dec
cmp
cmpl
mov
shlb
xor
xor
fsubrl
sub
sub
cmp
in
scas
pop
into
adc
cld
push
mov
aad
lret
addr16
mov
xor
sub
imul
or
push
aam
rclb
cmp
xor
outsl
mov
or
enter
fs
jmp
mov
stc
lahf
sbb
lret
xchg
es
xor
sbb
pop
gs
dec
push
popa
faddl
insb
adc
pop
pop
and
js
bound
xchg
into
mov
movsl
popa
sti
adcb
dec
je
jecxz
insb
jge
add
jecxz
fs
loope
jge
xchg
popf
mov
sub
cmp
loope
mov
sbb
enter
fcomps
push
mov
subl
fsubr
bound
add
scas
inc
push
adc
push
pop
or
stos
xor
in
lods
or
cmp
sub
out
fnsave
mov
sarb
pushw
jo
ss
mov
push
loope
nop
dec
cmc
push
mov
fwait
int
fisubrs
mov
sub
adc
aad
cmpsb
add
daa
iret
sbb
inc
rcl
fmul
sbb
js
push
sub
and
mov
dec
dec
mov
fidivrl
pop
in
mov
dec
lea
cmp
ss
add
cmp
aam
mov
movsb
mov
lret
test
out
or
or
xlat
mov
sahf
dec
test
push
lods
ret
xchg
add
int3
mov
rcrb
pop
xchg
sbb
bswap
fistl
jae
ja
mov
sub
decb
sahf
shrb
fs
lock
push
cwtl
dec
inc
lret
sub
push
decb
sbb
fwait
leave
cmpb
sbb
nop
mov
sahf
cmp
fnstenv
sub
dec
out
dec
mov
ljmp
push
fbstp
push
cmp
or
std
daa
out
ret
ds
int
mov
push
mov
movsb
adc
ret
aas
cs
mov
mov
mov
leave
out
pop
pop
sub
ret
mov
mov
sti
push
imul
jmp
adc
jge
out
adc
dec
iret
mov
jne
adc
bound
mov
ja
bound
pop
xor
adc
xor
jle
mov
adc
cmp
jns
xor
lea
add
outsl
aaa
dec
jge
test
out
out
cmp
pop
and
repz
lahf
inc
dec
and
test
sti
xlat
aad
inc
bound
repz
ss
js
movsb
mov
push
adc
stos
mov
cli
shll
inc
dec
into
movsl
ds
xchg
sub
popa
stos
xchg
mov
add
imul
pop
mov
xchg
xchg
in
lea
enter
rcrl
hlt
cmpsl
fcompl
ss
insb
jne
dec
addb
ljmp
add
xorb
js
pop
hlt
cmp
sub
inc
lahf
lcall
cmc
idiv
pusha
jbe
push
addb
jp
js
push
shlb
inc
std
js
or
test
scas
rcrb
push
mov
ljmp
and
pop
mov
movb
pop
lret
jae
cmp
into
adc
mov
icebp
mov
dec
inc
aam
adc
fidivrl
sbb
incl
fisubs
push
and
test
mov
xor
mov
push
pop
cmp
pusha
imul
mov
sbb
movsl
cmc
repnz
xchg
shlb
jle
mov
into
xchg
inc
jo
jne
inc
dec
scas
ret
scas
inc
adc
xchg
inc
icebp
mov
adc
in
sbb
outsb
xchg
imul
lock
into
je
cmp
xchg
in
cmp
push
jecxz
dec
mov
push
mov
rclb
lret
pushf
push
iret
xchg
cmp
ret
ja
movsl
jae
jmp
nop
imul
jnp
std
cmp
call
lret
faddp
jns
jns
fdiv
sbb
iret
dec
mov
jl
das
mov
push
addr16
dec
fnstsw
mov
dec
push
ja
mov
mov
and
push
icebp
sti
or
lods
shll
jo
stos
je
je
inc
dec
addr16
mov
mov
mov
ljmp
cmpl
inc
imul
leave
cs
xor
enter
or
int
scas
cmp
sbb
fldcw
push
loop
in
jle
and
and
inc
push
out
outsb
movsl
jo
pop
repnz
andb
mov
cmp
push
inc
mov
popf
gs
rorb
mov
push
push
mov
or
cmp
cmp
out
cmp
jl
addr16
inc
lods
add
dec
pop
aas
outsl
out
adc
pusha
imul
rclb
jne
jo
mov
adc
xorb
in
sub
movsl
push
aad
jbe
xchg
sub
in
int3
mov
dec
iret
jge
addb
out
mov
xchg
jne
rcll
pop
test
and
mov
popf
dec
pushf
pop
sub
lds
fldt
push
ja
movsb
jnp
loop
jg
ret
lahf
arpl
insb
sub
push
pop
push
ret
test
and
test
jnp
pop
rorb
sahf
jnp
je
out
data16
mov
dec
push
fldl2e
sub
clc
sahf
dec
insb
push
gs
push
jns
in
adc
test
jno
mov
inc
and
scas
gs
dec
mov
cmp
ja
xchg
xchg
cmc
scas
mov
ljmp
js
scas
pop
mov
and
xorl
or
dec
into
sub
fwait
sahf
mov
test
push
in
add
int
sub
xchg
in
test
test
add
mov
pusha
stos
sub
xor
call
nop
or
sbb
add
insb
jg
mov
daa
test
mov
cs
das
push
popf
inc
daa
mov
fsubrl
mov
in
sahf
pop
clc
ja
ss
or
mov
in
pop
cmp
push
in
into
adc
ds
fistpl
enter
into
sbbb
adc
pusha
jl
xchg
icebp
sbb
mov
mov
nop
lods
shll
xchg
rcll
mov
inc
mov
inc
mov
or
cmp
roll
out
push
add
xor
adc
mov
push
cwtl
popa
or
jl
dec
sub
data16
mov
inc
mov
clc
sbb
push
mul
adc
sub
inc
sub
mov
lcall
popf
adc
xor
adc
and
ret
and
sti
cmpb
stos
fadds
andl
fidivl
ret
mov
rcrb
ficoms
pop
stc
push
mov
dec
out
lods
jo
sahf
les
add
scas
lcall
inc
mov
fwait
xor
in
push
adc
ret
push
lds
addb
lods
lret
sbb
leave
add
lahf
int
bnd
mov
xchg
inc
jmp
xor
roll
push
mov
loopne
sub
mov
inc
mov
ret
pop
jno
lret
lret
lret
cmp
fldcw
out
mull
notl
movswl
in
mov
mov
dec
or
adc
iret
mov
dec
repnz
sahf
pusha
push
adc
inc
adc
sbb
data16
push
pop
int
dec
push
mov
call
loope
std
mov
jne
iret
movsl
sbb
mov
jl
inc
fistps
add
pop
sub
imul
popf
jno
mov
mov
cmp
in
int
lcall
mov
in
ja
lret
sbb
lretw
adc
vrcpss
fnstcw
mov
lea
mov
dec
movsl
jmp
test
push
xor
jbe
mov
das
pop
pop
pop
int
inc
mov
cwtl
xor
inc
das
test
mov
imul
mov
mov
addb
and
jno
push
add
into
pusha
ss
rolb
mov
iret
cltd
lods
jbe
mov
dec
dec
add
lret
push
pop
ret
mov
mov
pop
les
sbb
push
xchg
push
sbb
mov
sub
sbb
add
push
nop
out
dec
addr16
orb
dec
or
por
xor
jns
cli
out
cmc
push
jl
jge
mov
outsl
ljmp
and
jb
push
daa
xlat
notb
jmp
out
scas
scas
scas
in
es
add
lods
aam
cli
test
dec
cmp
into
mov
iret
dec
loope
or
xchg
sti
and
call
sar
sahf
jns
sahf
pop
aam
std
pop
icebp
ja
ljmp
fwait
cmp
sar
icebp
push
push
sub
insl
es
xchg
adc
ret
int3
outsb
lds
push
sti
rcll
bound
xchg
pop
into
mov
lock
inc
das
mov
dec
jl
cmc
fcomps
aad
and
in
pop
xchg
jbe
ja
add
cmp
and
mov
dec
out
loop
xlat
fcoms
je
repz
dec
lcall
xchg
xor
loop
mov
push
ss
add
mov
clc
mov
mov
lret
sub
das
not
jcxz
cltd
cmpsb
cld
adc
xor
cmp
dec
stc
int3
mov
inc
cmp
mov
sbb
int
sbb
or
idivl
jnp
outsb
cmpsb
sti
push
adc
sub
pop
jns
loope
inc
std
cltd
pushf
sub
push
out
pop
mov
dec
addl
mov
adc
ss
hlt
push
sbb
add
add
mov
out
repnz
dec
cmp
insl
add
xchg
cld
push
loope
sub
sub
scas
arpl
jnp
out
andl
scas
mov
inc
and
sbbl
fcomi
adc
lcall
sbbw
hlt
push
test
sarl
dec
shrl
int
mov
cli
test
jp
pushf
jne
pusha
mov
shrb
adc
fsts
test
inc
imul
ret
int
loopne
negb
lods
fisubrl
addr16
fisubrs
sub
cld
xor
cmpsl
or
icebp
inc
lea
daa
addr16
mov
mov
xor
aam
mov
out
cmp
cwtl
das
pop
cmp
sti
lret
push
daa
out
divl
inc
jnp
inc
imul
insb
ds
xchg
into
inc
push
xchg
in
pop
lock
fs
pop
div
cmp
xchg
test
lods
pop
arpl
jp
cmp
scas
xchg
mov
lcall
ds
ret
out
mov
mov
test
push
test
sub
cltd
mov
xor
gs
xor
sbb
push
and
pminub
rorl
arpl
add
int
fcoml
ds
jo
mov
mov
lcall
sahf
notb
stos
mov
inc
ljmp
pop
mov
sbb
mov
cmp
shlb
stos
push
das
mov
sbb
loopne
fcomp
es
notl
fildll
sti
shlb
mov
push
arpl
mov
inc
pop
inc
cmp
idivb
xchg
es
jle
xchg
jo
and
mov
mov
jne
add
push
add
pop
xlat
jns
adc
lahf
fidivrs
ljmp
aaa
ret
es
int
cld
pop
xchg
rcr
mov
mov
shl
cmp
pop
pop
dec
xor
lds
mov
ljmp
mov
xchg
jl
test
sbb
std
ljmp
xor
cltd
mov
stos
xor
movsl
test
aam
ss
cmp
popa
sbb
lret
jae
mov
sub
movsb
jle
mov
inc
sub
jp
cmp
inc
cmpsb
mov
pop
push
mov
jae
out
xchg
in
arpl
mov
inc
rcll
and
flds
call
daa
mov
fsubl
std
fsub
xchg
sbb
cld
push
push
jle
imulb
and
xor
sbb
fstp
ret
sub
inc
fwait
sub
jmp
fbld
dec
jle
mov
mov
and
lods
mov
icebp
cmp
pop
out
lds
nop
jle
sub
out
inc
pop
popa
jo
iret
scas
shlb
js
ds
ret
jne
roll
lock
mov
jmp
jge
dec
sbb
jns
sbb
sbb
lds
xchg
pop
icebp
notb
mov
push
inc
xlat
jns
scas
decl
movsl
push
je
or
mov
dec
fldt
filds
jns
lds
fstps
xor
mov
add
mov
aas
jp
ds
mov
lea
scas
lret
lret
or
xchg
cmp
je
pop
das
inc
xor
xchg
cmp
dec
jg
lock
shlb
xor
ror
jge
xlat
mov
scas
fisttpll
add
fwait
mulb
push
cld
pop
sbb
add
push
repnz
aad
mov
repz
out
xor
jmp
sbb
xor
xor
add
xchg
aam
xor
xchg
push
ret
loopne
dec
enter
and
xor
inc
push
cmpsl
fcom
mov
inc
test
add
adc
sbb
daa
jne
ljmp
outsl
mov
pop
cli
hlt
jg
pop
jle
popa
mov
adc
dec
inc
roll
jae
testl
pop
add
mov
or
nop
or
aam
pop
cmc
mov
pop
lods
xchg
popf
fwait
xchg
fstps
cmp
pop
push
jl
push
sbb
push
or
insl
pop
in
or
test
push
std
lahf
sbb
imul
mov
mov
pop
pop
mov
out
sbb
push
push
inc
hlt
inc
pop
shlb
mov
or
mov
mov
movsb
mov
cmp
mov
add
shrl
inc
push
mov
sbb
aaa
repnz
or
ljmp
pusha
stc
mov
fimull
sub
outsl
lcall
mov
sub
jle
cltd
mov
push
shrl
lahf
xor
pop
clc
aam
cld
add
push
mov
test
loop
jns
test
cmp
fists
mov
inc
in
inc
lods
testb
scas
xchg
dec
int
sub
loope
fidivrl
es
fbstp
pop
ds
out
cmp
push
or
stos
lds
push
ja
cmp
aas
or
mov
fisttpl
cmp
daa
xchg
dec
ret
mov
popf
sub
aaa
pusha
jb
and
add
pop
lods
cld
pushl
cmpsb
aas
cld
sahf
fcomip
lods
dec
sub
adc
pushf
add
shlb
or
test
adc
dec
adc
jne
jle
ja
test
jecxz
mov
ficomps
cs
add
adc
mov
sahf
jg
pop
enter
dec
scas
xchg
stos
mov
sbb
js
dec
in
jb
xchg
test
das
xchg
fildl
ss
aad
xchg
ret
and
fsubrl
in
cmp
pushf
cltd
stos
pop
leave
dec
mov
dec
xchg
inc
push
jl
jbe
sub
cmp
je
repz
iret
or
imul
pop
sti
jmp
movsb
add
mov
push
in
mov
adc
or
cmc
cs
orl
cli
cmpsl
das
jne
pop
addr16
mov
movsl
mov
dec
unpckhps
and
mov
inc
mov
in
dec
fldcw
inc
dec
cmc
and
lods
jge
sub
fadds
mov
jns
xorl
mov
gs
fcompl
fldl
xorb
lret
jno
jnp
inc
cs
imull
out
mov
push
add
cmp
in
fcomp
xchg
sbb
dec
imul
inc
add
and
push
jo
imul
orb
out
js
jmp
mov
and
imul
lds
sbb
inc
sbb
in
mov
dec
cmp
int3
sbb
out
xchg
fdivs
adc
mov
cwtl
dec
push
out
jecxz
lds
loope
sbb
imul
cmp
adc
adc
subb
aas
out
inc
iret
sub
movsb
jge
out
jns
in
xor
dec
lret
sub
xchg
inc
jnp
mov
cmp
dec
je
jp
jno
int
push
fadds
bnd
mov
cmp
pusha
xor
xchg
aad
rorb
xor
flds
sbb
fnstenv
out
fisttpll
xchg
xchg
out
cwtl
sbb
push
icebp
in
sbb
divl
nop
loopne
iret
adc
inc
bound
js
or
and
pop
cmc
jae
pop
sbb
inc
cmc
or
je
cmp
mov
dec
sar
ljmp
xchg
jmp
mov
jae
fstpt
or
lods
inc
push
mov
add
orb
jg
fisubs
sbb
repz
out
jo
xor
test
add
nop
jecxz
push
push
movsb
add
xor
mov
ljmp
pop
adc
inc
jns
push
mov
pop
stos
mov
push
jge
dec
inc
dec
cli
pop
and
pop
inc
stos
mov
repz
dec
in
adc
enter
mull
adc
movsb
popa
pop
sbb
xchg
dec
leave
or
or
bound
push
call
aam
sub
sbb
and
jmp
fists
fcmove
add
inc
rclb
cmp
add
xchg
jo
pop
outsb
jl
jg
adc
add
pcmpeqw
js
add
adc
push
jg
pop
mov
rolb
repnz
xchg
xor
pop
cltd
adc
xor
add
out
xchg
pop
ret
mov
ret
push
mov
loope
mov
out
test
or
add
out
rcrl
movsl
lret
xchg
push
or
in
inc
sub
pop
ds
je
popf
fs
push
push
js
or
pusha
mov
call
jg
test
mov
mov
mov
mov
int
out
mov
out
mov
xchg
adc
xchg
jp
jmp
ror
jo
sbb
les
cld
arpl
insb
pop
fsubs
sbbb
jl
ljmp
sub
enter
adc
ficompl
orl
test
add
sti
sbb
xchg
fs
mov
jp
cmc
and
lods
sub
and
js
mov
cmp
xchg
daa
push
mov
mov
fs
fdiv
xchg
dec
loopne
mov
dec
jo
sbb
and
push
add
sub
fwait
push
addr16
sub
xchg
jne
movsl
mov
scas
dec
fwait
movsb
outsl
pminsw
clc
in
sbb
ljmp
popf
bound
cmp
lret
aam
imul
mov
sub
jle
cmp
or
push
push
pop
adc
sbb
jo
xor
and
icebp
stos
inc
faddl
std
out
idivb
scas
repz
mul
fstps
into
sbb
in
es
movsb
mov
mov
cwtl
add
sbb
aaa
jne
scas
lret
xchg
addb
outsl
bound
cmp
jo
cmc
ljmp
mov
sbb
mov
sub
pushf
cmpsb
leave
push
negl
sub
lahf
jge
jae
adc
mov
cs
daa
mov
daa
js
repz
xlat
jmp
outsb
push
cmpsb
sbb
test
arpl
ret
in
sbb
lcall
and
cmp
mov
or
cmp
pop
lods
aaa
jl
and
jmp
inc
and
xor
icebp
jno
dec
test
popa
xchg
cmpb
cmpsb
movl
je
sbb
std
popf
lock
scas
test
or
aam
aam
lods
sbb
and
dec
jbe
mov
inc
mov
je
cmp
outsl
mov
dec
adc
shl
xorb
sub
mov
or
cmc
sub
hlt
adc
sub
jb
inc
lret
daa
ja
gs
fildll
dec
mov
adc
mov
sub
rorl
inc
inc
mov
rcrl
dec
sbb
add
popf
mov
sub
inc
notb
adc
dec
jns
xchg
mov
outsb
out
add
mov
pop
aaa
movsl
popf
test
mov
pop
fidivl
nop
xchg
and
ror
or
pop
not
aad
pop
add
add
mov
mov
push
mov
lcall
xchg
add
repnz
xchg
pop
mov
ret
dec
cmp
cmc
pop
sub
inc
frstor
nop
push
xor
je
sti
sub
or
mov
adc
mov
int3
mov
in
mov
mov
lret
or
push
js
ret
or
lods
pop
dec
xor
xchg
rol
aas
ljmp
adc
jecxz
xchg
stos
cmp
cmp
in
fs
mov
clc
xchg
idivl
scas
sbb
les
or
jae
jo
cs
jl
in
adc
bound
imul
fmulp
stc
jp
out
add
push
dec
in
mov
fidivs
jle
stos
inc
addr16
xor
lahf
in
arpl
leave
out
cmp
shrl
outsb
push
shr
ds
jg
sahf
mov
inc
cmp
jno
lret
mov
mov
int3
push
ds
test
in
movsl
ret
mov
push
sbb
imul
outsb
inc
mov
pop
test
loopne
sub
ret
pop
dec
out
xchg
das
push
pop
xlat
add
mov
ss
inc
imul
mov
stos
dec
lea
in
mov
ja
and
cmp
repnz
fwait
mov
iret
iret
xor
add
test
nop
inc
testb
jnp
xchg
push
dec
stos
sub
push
sub
mov
cltd
das
push
xchg
push
jbe
scas
cwtl
mov
add
jecxz
out
inc
adc
in
adc
sub
loope
fs
dec
or
dec
pop
outsl
adc
mov
out
xor
cmp
dec
and
das
mov
or
push
xor
xchg
jmp
push
ja
arpl
int
shll
mov
jmp
fdivrs
stc
iret
pop
xchg
or
ret
inc
add
cld
call
clc
mov
test
cmp
scas
popa
bound
push
shrb
shlb
addr16
out
stos
sub
test
push
mov
add
fidivl
and
mov
pushf
jmp
jle
pusha
mov
popf
inc
or
mov
mov
adc
mov
cmpsb
int
nop
push
jmp
push
mov
mov
adc
movb
rcrb
pop
adc
jge
jb
stos
ja
outsl
popf
xor
mov
mov
cld
test
pop
sub
sbb
jns
iret
test
sub
pop
jno
dec
pop
push
mov
xor
inc
sbb
push
mov
clc
in
sbb
push
test
mov
subb
jb
pushf
mov
subl
in
dec
xchg
and
cli
clc
lods
popf
xchg
push
out
push
loope
imul
mov
int
xchg
push
rclb
loop
out
shlb
stc
lret
jl
aas
mov
push
add
or
aas
out
mov
stc
mov
dec
roll
pop
inc
call
lock
add
outsl
mov
jbe
xor
push
pop
fdivl
aaa
dec
mov
xorl
cs
test
loop
mov
xchg
dec
mov
incl
mov
mov
inc
or
das
lock
lock
mov
inc
negl
jno
xchg
xchg
sbbl
push
icebp
in
pop
loopne
push
ds
push
mov
clc
lods
enter
cmp
jbe
cltd
pop
adc
sbb
mov
jb
sti
inc
popf
popa
pop
mov
sub
add
or
int
push
xchg
sub
jno
rclb
iret
jmp
js
dec
jnp
xlat
arpl
push
xchg
cmpsb
sub
test
add
xchg
mov
addb
dec
je
icebp
mov
data16
in
sarb
lea
fbstp
mov
inc
fs
and
or
inc
test
mov
clc
int3
popa
arpl
adc
rcrb
addr16
movsl
call
mov
cmp
frstor
imul
inc
fidivl
insb
xor
mov
lods
or
sbb
hlt
pop
mov
xchg
inc
inc
jno
shll
js
lret
ss
or
js
sub
in
lock
arpl
or
push
popa
lods
push
cmp
decb
scas
je
mov
repz
mov
lahf
xor
and
icebp
in
test
push
cmp
jns
or
xchg
adc
inc
and
dec
jo
push
xlat
out
mov
xchg
cmp
aad
gs
sbb
mov
jnp
roll
mov
fsubs
pop
adc
negb
es
outsb
test
or
fcmovbe
jb
insb
shll
xchg
sub
hlt
mov
sbb
stos
lcall
mov
in
push
sahf
sub
aaa
xchg
jecxz
adc
movsb
and
icebp
push
mov
mov
mov
dec
adc
adc
fidivs
xor
test
leave
dec
xor
push
in
pop
movsl
sub
or
movsl
add
xchg
sbb
pop
jbe
xchg
jge
in
nop
hlt
inc
jo
test
lock
cltd
bound
movsb
xchg
and
inc
sub
ffree
cltd
imul
pop
xchg
inc
pop
push
pop
adc
mov
in
arpl
and
xor
repnz
imul
sahf
add
pop
js
scas
dec
insb
push
cmp
loope
xlat
mov
test
dec
fwait
adc
shlb
fadds
xchg
lcall
jl
sbb
lcall
lds
out
std
andb
imul
mov
cmp
inc
inc
cmp
notl
adc
fisubrs
popw
cmpl
lret
mov
cmpb
jl
scas
in
jg
test
adc
pusha
ret
fisttps
jp
jne
dec
push
adc
mov
aas
mov
pop
xchg
and
ja
out
ja
nop
divb
jl
fwait
cmp
es
notl
dec
jge
xor
pop
adc
dec
aad
add
rclb
pop
cs
inc
jb
pop
scas
repz
movsb
not
or
and
popa
pop
sbb
lahf
push
lock
fcos
loop
enter
xchg
adc
dec
pop
loop
push
dec
sbb
and
push
call
pop
mov
fdecstp
rcrb
dec
aam
int
dec
push
lret
pop
mov
out
or
sub
popa
pop
mov
pushf
pop
insl
adc
das
and
test
cwtl
cmp
jmp
popa
push
dec
mov
shl
pusha
test
xchg
imulb
fdiv
xor
mov
fisubs
push
mov
lahf
mov
icebp
lret
mov
jne
push
adc
hlt
adcl
jle
xor
stos
xor
dec
mov
or
jne
sahf
cmpl
mov
or
sarl
xchg
rcll
pop
aad
les
jle
xchg
outsb
mov
repnz
jno
adc
jle
lock
jno
ja
setbe
idiv
pop
jecxz
and
mov
lock
clc
xchg
mov
in
lret
or
push
xchg
add
cmp
mov
ss
fstpt
or
div
pop
aas
adc
mov
outsb
mov
push
dec
test
test
xlat
scas
out
shr
lcall
nop
sub
jbe
sarl
mov
cmp
into
lret
rcll
or
stos
xchg
dec
and
mov
pop
aad
and
sarl
test
repz
mov
mov
imul
cmp
lds
pop
dec
dec
mov
jle
mov
insb
lcall
pop
in
fcoms
xchg
sahf
mov
fsub
adc
cmp
stos
jmp
sbb
push
pop
xor
data16
fiadds
and
ds
jmp
jg
pop
mov
and
movsl
and
push
mov
xchg
std
scas
les
fcomip
lret
adc
pop
nop
inc
ja
pop
jp
jmp
mov
or
out
out
pop
and
in
fstp
fucom
in
push
xorl
mov
push
adc
jae
adc
call
test
cmpsl
inc
lret
pushf
ret
push
lret
cmpsl
in
mov
loop
pop
outsb
push
int3
mov
test
jo
iret
leave
cmc
jno
mov
aas
sahf
sahf
fdivrp
in
push
sbb
mov
cmp
push
ret
insl
sub
in
push
aaa
mov
sti
rorb
arpl
push
cltd
mov
in
sub
addr16
push
dec
mov
mov
cmp
rorl
lds
movsb
jo
inc
inc
outsl
repnz
jle
dec
xchg
loope
adc
mov
rorb
enter
jle
fiaddl
xchg
pop
inc
js
mov
pop
sub
int
movsb
sub
mov
pop
lret
lret
jb
xlat
sbb
jbe
imul
jno
inc
std
add
inc
test
test
insl
xor
loopne
sbb
inc
cs
mov
mov
dec
mov
into
add
loope
sub
ds
mov
adc
pop
adc
pop
popa
mov
inc
ljmp
cld
adc
popa
ss
fstps
test
push
xchg
pop
test
cmp
push
pop
cs
jp
jo
addr16
fmuls
test
push
sahf
sbbb
and
sbb
gs
dec
push
push
ret
les
mov
xchg
scas
mov
mov
iret
ds
fsub
mov
fisubs
inc
repz
cmp
mov
fnstenv
ret
dec
ljmp
repz
add
jae
mov
scas
and
cltd
push
cmpsl
dec
pop
cs
stos
mov
int3
in
clc
push
sbb
orl
push
aas
sub
mov
jmp
push
mov
enter
imul
addb
xlat
aas
addr16
mov
push
adc
pop
sarb
xchg
bound
mov
adc
adc
sub
dec
and
int3
push
mov
int
cmc
and
ficoml
iret
push
test
adc
loop
cwtl
repz
and
push
cmpsl
pop
dec
pop
jae
movsb
sbb
lahf
je
xchg
xchg
sarl
imul
xor
sub
mov
popf
hlt
adc
rclb
dec
dec
les
les
rolb
dec
inc
pushf
jl
lcall
sbb
scas
fs
es
notl
leave
adc
xchg
fmull
pop
and
mov
fadd
stos
jnp
add
addr16
rclb
dec
mov
pop
inc
inc
out
dec
repnz
mov
popl
in
push
cmp
movl
cltd
mov
xchg
shlb
pusha
js
xchg
aaa
out
and
ja
out
daa
mov
push
xchg
out
dec
iret
inc
inc
les
imul
std
in
rcrl
or
sbb
in
mov
ret
addl
push
idiv
mov
jle
leave
stos
mov
outsl
fisubs
cld
and
mov
pop
inc
jb
mov
icebp
lods
pusha
dec
xor
fidivs
test
cs
adc
rcr
sbb
inc
dec
inc
stos
sahf
pop
pushf
mov
fs
sub
in
int
inc
xor
mov
mov
cmp
mov
push
cmp
mull
call
incb
mov
push
xchg
xchg
insb
sbb
fwait
aaa
add
xor
or
pop
mov
stos
pop
cmc
adc
jmp
sbb
lcall
movsb
addl
pop
je
test
mov
mov
jge
sub
cmp
inc
imul
jae
popl
cmp
push
lahf
push
rolb
mov
xor
les
dec
in
jl
lret
out
cmp
movsb
jp
inc
mov
inc
xchg
cli
shrl
push
cmpsl
lods
lods
loop
aam
sbb
cmc
mov
pop
js
ja
ja
mov
popf
cmpsb
stos
sahf
and
mov
test
push
std
dec
dec
aaa
fsubrs
sub
jmp
fisubrl
je
mov
xadd
cmp
insb
aas
sti
pop
pop
in
pusha
rcr
mov
sub
inc
dec
sbb
mov
lods
jl
arpl
push
jno
imul
mov
dec
mov
adc
or
add
cmp
andb
pop
and
fwait
jnp
jb
sub
push
fisubl
push
cmpsl
or
jle
inc
loopne
push
or
dec
test
out
sbb
xchg
cmp
mov
mov
sarb
xchg
dec
addr16
add
rcll
mov
in
jnp
xchg
add
das
pop
ret
popf
adc
mov
push
inc
xchg
xchg
sbb
pushf
shll
daa
rorl
aad
lret
les
cmp
ret
ret
std
lods
xor
cli
add
dec
sti
jnp
sub
mov
testb
scas
clc
data16
mov
inc
sbb
sbb
mov
stos
mov
xor
mov
je
xchg
leave
mov
add
dec
mov
nop
andb
cli
icebp
cmp
pop
sub
xchg
pop
dec
mov
sbb
lods
jnp
ljmp
or
scas
fadds
pusha
popa
push
and
sub
out
in
push
xchg
jno
mov
inc
imul
adc
cmp
mov
nop
arpl
sub
movsl
xchg
icebp
xlat
icebp
scas
loopne
push
test
cmpsl
mov
scas
ret
add
addl
xchg
dec
decb
jge
pushl
std
xchg
push
xchg
fbld
popa
xor
xchg
mov
xor
clc
aam
pop
adc
gs
rcll
push
stos
scas
or
stc
cmp
cmp
fdivrs
mov
inc
inc
rcr
inc
aaa
mov
loop
and
sahf
mov
inc
out
adc
enter
mov
mov
pop
out
jecxz
and
cmp
faddl
test
cs
dec
jg
dec
or
jmp
sub
cmpsl
sbb
insb
mov
fcompl
sbb
out
fdivrs
iret
jno
gs
or
cltd
sahf
xchg
rorl
sub
aad
notb
xchg
adc
and
rclb
inc
and
xor
nop
inc
push
add
xor
or
add
pop
fsts
xor
xchg
pop
xchg
pop
mov
mov
call
aaa
sarl
outsb
add
addr16
xor
xor
inc
std
fucomip
inc
lods
and
pop
stc
fldcw
cmpsl
notb
mov
scas
ja
aas
xorl
cmp
xchg
clc
sbbb
jns
scas
adc
push
push
popf
or
pop
daa
inc
subb
loope
or
cwtl
leave
and
inc
adc
fnstsw
rclb
xchg
mov
aad
add
enter
nop
cmpsb
movswl
cmpl
xor
mov
sub
mov
addl
fstpl
add
jno
dec
fmuls
jb
mov
hlt
jnp
xchg
test
data16
sub
iret
jb
xor
dec
rcrl
icebp
dec
add
jge
xlat
repz
inc
repz
inc
xchg
daa
cmp
mov
mov
pushl
jge
fildl
jno
xlat
int3
mov
cli
xor
push
arpl
lret
dec
xchg
jne
xor
add
push
imulb
les
xchg
sub
inc
pusha
pushf
cli
loopne
outsb
sahf
push
adc
push
xchg
mull
sbb
mov
push
sbb
arpl
movsb
stc
test
pop
imul
scas
cmp
mov
xchg
pop
jnp
das
xchg
cwtl
jno
bound
leave
fcoml
movsb
fildl
fisubl
pushf
lods
push
iret
fnstsw
xor
scas
pop
pop
ret
jno
xchg
push
push
and
jne
push
out
pop
loop
xchg
mov
jo
xchg
jb
pop
test
cmp
test
xor
sbb
dec
bound
movsb
pop
push
iret
stc
int
insl
andb
lods
stos
hlt
jl
and
or
ret
outsl
xor
xchg
and
cltd
lret
xchg
add
js
pop
push
es
lret
cmpsb
dec
mov
ficomps
mov
test
push
je
dec
mov
inc
les
mov
inc
out
int3
and
jp
loop
sub
popa
ja
insl
sbb
pop
xor
adc
xchg
sbb
and
pop
popf
shrb
adc
out
xchg
in
aad
xor
cld
mov
jmp
es
leave
clc
pusha
jecxz
xchg
in
lahf
jmp
in
jnp
lret
jmp
in
std
mov
jle
add
and
daa
sti
punpckhdq
stos
sub
mov
push
loopne
lds
jb
addr16
push
jge
rcl
iret
jns
mov
dec
mov
mov
mov
mov
sub
out
lds
lcall
cmp
dec
mov
xlat
lret
loopne
pop
and
xlat
mov
push
js
xor
leave
dec
jp
mov
call
daa
out
jmp
xchg
sub
fnsave
pop
mov
xchg
shll
rcrl
mov
xor
fisubrs
dec
shrb
aam
imul
pop
dec
cs
and
lock
pop
xchg
fistpl
int3
xor
adc
ja
mov
pop
leave
movsl
mov
pop
mov
gs
repnz
std
jo
scas
push
mov
mov
mov
insb
and
add
cmp
xchg
pop
xlat
cmp
outsb
push
fistpl
lahf
or
jo
and
or
data16
mov
sti
in
push
popl
bound
push
pop
out
clc
sbb
sbb
inc
jl
mov
cld
inc
jmp
pop
scas
dec
in
or
mov
add
in
sub
test
insl
mov
mov
pop
and
push
xorb
cmp
jno
and
fidivrs
and
inc
insl
rorb
std
push
mov
jo
test
bound
out
jmp
mov
mov
push
adc
aad
inc
aam
loope
push
idiv
test
outsl
cmp
or
jns
ja
je
out
data16
dec
xchg
pop
push
mov
jmp
pop
ficoms
jae
in
and
lea
test
cwtl
out
cmpsb
jmp
subl
mov
cwtl
movsl
jmp
add
mov
mov
ror
in
xchg
mov
sub
push
iret
neg
fnstcw
sub
ds
inc
xchg
and
add
mov
daa
movsl
xor
and
js
stos
dec
fwait
pushf
rorb
fisttps
std
lds
pop
gs
fiaddl
sub
dec
mov
pop
mov
jo
ret
aas
stos
xor
lods
xor
in
in
dec
inc
xorb
mov
cmp
xor
jle
add
or
popf
divl
or
jne
lods
aam
mov
sbb
or
ja
and
cmpsb
cld
inc
icebp
dec
int
xor
jg
dec
and
je
inc
adc
mov
scas
add
fimull
xor
mov
adc
lods
aas
push
cmp
push
insb
and
fsubrl
int3
add
clc
loopne
test
adc
fwait
outsb
mov
or
cmp
push
lds
lret
and
jecxz
mov
push
mov
jp
cwtl
call
fwait
lds
cli
sahf
ror
cmpl
les
addl
push
and
repz
and
mov
mov
mov
loop
jnp
add
lods
mov
addr16
push
je
push
jmp
sbb
lods
js
imul
mov
sub
movsl
and
pop
push
fidivl
mov
pushf
nop
stos
cmc
cmp
xor
stc
enter
jg
rol
shlb
jne
cltd
mov
pop
xchg
lcall
sbb
int3
and
mov
sti
adc
xchg
jbe
sbb
xor
jmp
mov
outsb
pop
jns
adc
jg
js
in
jne
inc
mov
stc
sub
mov
ds
outsl
sub
xchg
xor
aas
xchg
enter
add
mov
jmp
dec
xor
ret
add
pop
mov
ja
int
cmp
lea
mov
pop
js
push
mov
push
sti
scas
xchg
out
dec
push
leave
frstor
aaa
cmp
hlt
jnp
subl
mov
mov
inc
cmp
or
mov
clc
push
and
movsl
mov
pushf
insl
ss
push
enter
xor
pop
add
pop
xlat
push
mov
mov
testl
arpl
xor
xchg
xor
clc
push
cmp
xchg
test
xlat
or
scas
sbb
xchg
sbb
inc
cwtl
test
mov
les
mov
in
es
lods
push
jecxz
xchg
aad
mov
scas
dec
jl
inc
ja
repz
sub
cltd
repnz
mov
jo
push
fscale
jns
je
cmc
mov
jge
mov
repnz
sbb
add
lcall
ret
sbb
push
dec
mov
mov
push
incb
or
jae
cmp
mov
and
cltd
aas
adc
stos
or
adc
fucomp
in
movd
add
loopne
inc
dec
pop
inc
fildll
xor
or
push
out
addr16
xor
jp
sub
fisttpll
cmp
xor
adc
xorl
pop
in
ficomps
inc
jp
cmp
push
mov
push
mov
xchg
push
clc
jne
sarl
and
cs
xchg
lock
fwait
pop
outsb
xlat
bound
mov
addr16
mov
in
add
push
rcr
xchg
loopne
loop
inc
pop
cmp
push
imull
shl
repz
inc
sub
dec
clc
mov
in
mov
rorl
pop
xchg
cmc
mov
pop
xchg
mov
mov
leave
call
aam
push
or
stos
add
pop
xor
pusha
adc
mov
sbb
and
sub
shr
mov
mov
mov
lds
push
fs
mov
dec
lods
aad
ss
inc
or
adc
adc
xchg
int
out
or
xchg
cmp
pop
ds
or
lods
js
xlat
jge
jl
aaa
jle
jbe
push
ljmp
ss
loope
ja
adc
xorl
pop
add
jo
call
xchg
jecxz
xchg
add
sahf
adc
mov
sub
out
pop
jl
mov
dec
pop
stos
push
mov
push
jb
out
inc
inc
pop
pop
testb
sub
addb
popa
popf
outsl
sub
in
mov
sub
mov
sub
inc
cmp
dec
nop
sbb
dec
xor
sub
fstl
ja
push
or
add
mov
sbb
addr16
cmp
adc
clc
mov
insb
data16
jmp
or
popa
push
lods
int
adc
stc
dec
ret
fldt
cmp
xor
cmp
fldenv
pop
fst
pop
insl
test
xchg
sahf
adc
dec
test
fmuls
aad
jmp
dec
incb
xor
insb
push
xchg
cld
fists
adc
leave
add
loope
and
outsl
in
es
fcompl
gs
mov
mov
push
jae
out
or
adcb
insb
fstps
aad
adc
sub
mov
fs
mov
mov
xchg
adc
pop
jg
push
fdivp
dec
cmpsl
test
xor
std
cmp
ss
sub
mov
data16
addr16
push
mov
sbb
pop
push
in
dec
and
or
lds
int
add
inc
push
add
add
std
cld
call
add
into
leave
data16
aas
xor
imull
mov
adc
pushf
push
pop
xor
dec
mov
cmp
cld
leave
inc
mov
mov
dec
lock
fcoml
dec
pop
push
push
adc
and
icebp
sub
insb
les
jl
lock
push
add
test
cmp
push
xchg
rcrb
hlt
dec
loope
loop
or
xchg
mov
inc
mov
pop
mov
and
add
fbld
das
xchg
add
xor
add
dec
inc
pop
and
jg
mov
in
pop
popl
test
jnp
adc
scas
sbb
mov
lods
inc
mov
jg
bound
in
mov
int
jle
shrb
bswap
shll
lahf
add
cmpsl
out
or
call
lds
xor
jg
and
call
sub
add
imul
scas
test
mov
icebp
dec
test
jp
dec
xchg
jno
pop
lds
pop
mov
lods
and
jnp
mov
cltd
push
inc
lea
movsb
loopne
mov
ljmp
lods
shl
cs
jecxz
cmp
mov
popf
sbb
lock
pop
test
les
sar
shlb
sarl
push
or
pushf
sub
pop
ss
icebp
jge
adcl
aas
sub
les
frstor
lahf
mov
loope
scas
repnz
orb
cwtl
cmp
jne
dec
jmp
or
xor
xchg
mov
pop
cmc
aaa
inc
out
sbb
ds
lahf
sar
cmp
into
xor
pop
mov
pop
pop
pop
push
inc
xlat
pop
mov
xchg
cli
jecxz
es
fsubl
lret
scas
jb
ret
enter
add
call
cmp
mov
mov
out
test
push
jecxz
jge
repnz
mov
fnstsw
or
bound
pop
sbb
jmp
push
in
repz
jle
out
aaa
bound
or
pushf
and
out
cwtl
push
insl
mov
inc
dec
jne
movsl
test
aad
nop
lcall
dec
data16
test
out
outsl
dec
test
fistpl
xor
repz
repnz
fbstp
ljmp
std
and
out
jge
das
dec
lods
clc
icebp
jno
sti
bound
jns
hlt
imull
pop
addl
rorb
add
push
psubw
rcrb
stc
push
leave
cwtl
jecxz
pop
testb
or
fidivl
orb
sub
push
add
mov
or
insl
icebp
leave
aam
mov
and
mull
das
add
clc
sbb
jecxz
mov
jnp
mov
cltd
inc
push
daa
pop
pop
push
iret
xor
add
fst
push
push
add
lret
mov
std
adc
add
imul
scas
imul
fsubs
mull
stos
push
push
dec
sub
repz
ret
sbb
jb
inc
inc
insb
sti
and
add
mov
fiaddl
jg
sbb
leave
inc
mov
ja
inc
mov
leave
sarl
ja
out
out
jp
outsl
mov
sahf
jg
loope
and
popf
sub
inc
adc
popa
stc
pop
or
sbb
cmp
aaa
mov
jnp
leave
sbb
mov
loope
and
int
adc
mov
insb
stc
imul
setbe
sarl
and
mov
mov
out
gs
mov
mov
mov
outsl
xor
lds
jecxz
data16
xchg
repnz
dec
sbb
push
or
xchg
movsb
daa
mov
jl
cmpsl
fwait
mov
sbb
pop
test
subl
pop
icebp
add
data16
cmp
sub
rcrb
out
adc
push
popf
hlt
clc
inc
repz
adc
pop
mov
jl
push
add
mov
popf
rcrl
and
mov
out
stos
ljmp
lea
imul
mov
pop
mov
call
ja
inc
loope
adc
push
mov
cmpsb
mov
outsl
add
gs
cwtl
movsb
xor
dec
pop
adcl
adc
out
cmp
stc
andb
popa
adc
jle
sub
subl
repnz
cmpsl
leave
scas
xchg
xor
or
loope
mov
mov
jb
movswl
mov
dec
roll
loope
add
repnz
pop
push
lret
rcl
ret
out
repnz
repnz
in
push
mov
sbb
inc
int
add
mov
pushf
jmp
pop
loopne
and
cmp
dec
aaa
mov
mov
imul
pop
mov
fs
add
and
aas
sbb
cmp
scas
dec
lahf
popf
je
xlat
outsb
or
xchg
push
in
jne
dec
andb
dec
jg
sbb
lods
aas
xor
pop
test
and
int3
test
cmp
lret
mov
fistpll
inc
mov
scas
adc
rolb
cmp
mov
mov
xchg
daa
iret
mov
push
xor
pop
jmp
cmp
pop
les
mov
push
pop
adc
lahf
cld
cmp
and
pop
in
inc
inc
les
pop
test
mov
dec
jae
xchg
daa
inc
xor
jb
xlat
adc
or
ficoms
or
or
int3
fbstp
sub
mov
xlat
xchg
sub
push
out
mov
mov
insb
les
loope
mov
push
fidivl
dec
add
jo
push
jp
insb
add
loopne
pop
lods
adc
jg
add
daa
jl
in
add
xor
pop
adc
push
push
dec
push
out
and
cmp
sti
sbbb
mov
cs
pop
push
add
and
daa
dec
repnz
adc
incl
and
mov
sbbb
mov
movsl
dec
push
scas
xchg
fimuls
inc
jbe
test
adc
stos
enter
aam
ret
jmp
inc
or
xchg
adc
pushf
aas
imul
inc
popa
loopne
mov
jb
test
push
xchg
and
lea
mov
sbb
sti
out
pop
movsb
stos
push
and
dec
inc
inc
dec
aas
push
outsl
cltd
push
movsl
jecxz
adc
out
stos
add
push
xchg
gs
insb
push
repz
lods
sbb
or
lods
push
adc
mov
jb
sahf
push
clc
mov
cs
ss
sar
ret
pop
pop
dec
xchg
xor
js
push
leave
cmp
jmp
sub
adcl
dec
es
ret
mov
mov
mov
adc
dec
sbb
cmc
mov
pusha
mov
mov
ret
into
rclb
jge
lods
adc
into
jg
enter
aad
dec
dec
daa
loopne
sbb
sbb
xchg
nop
sbb
fs
ss
inc
arpl
test
lea
sub
cmpsb
js
stos
add
inc
enter
ja
ret
fisubs
mov
pop
pop
jb
outsb
cs
mov
pop
loopne
adc
jle
enter
cs
fmulp
cltd
stc
lahf
xchg
mov
cmpl
inc
jb
mov
inc
movsl
into
cli
ret
bound
or
fisttpll
outsl
jae
mov
mov
lcall
xor
cmpsb
sti
or
daa
movsb
les
push
imul
testl
adc
rcr
mov
out
mov
pop
int3
stos
lret
int
in
rol
mov
xor
pop
outsb
sahf
stos
dec
or
nop
dec
mov
pop
sbb
jbe
mov
dec
cltd
enter
mov
xor
pop
scas
add
add
sahf
pusha
mov
sbb
subps
ss
mov
xchg
aaa
rclb
jae
fisubrs
ret
xor
pop
es
fdecstp
adcb
and
out
roll
std
adc
mov
pop
mov
in
pushf
push
test
push
lret
pusha
ja
mov
enter
lret
mov
dec
cmpb
mov
jmp
sbb
and
jecxz
lret
or
cmp
aaa
icebp
pop
jae
and
jl
insl
aaa
pop
aad
dec
jns
cmpsb
sahf
outsl
stos
xchg
xor
add
push
add
lods
leave
in
dec
sbb
sbb
mov
out
mov
imul
sub
enter
shlb
lret
fcmovbe
sbb
pop
addr16
and
repz
jecxz
fnstsw
mov
dec
test
inc
stos
mov
xor
adc
fsubrl
push
shrl
lahf
or
inc
sub
out
push
test
add
sbb
subb
popa
xorl
add
cmpsb
mov
dec
mov
into
cmc
lret
out
mov
jl
lods
movsl
outsb
dec
mov
jbe
xchg
xchg
fadds
push
addr16
xor
and
aad
test
or
pop
addr16
inc
add
aaa
shlb
sbb
bswap
sbb
pop
sbb
cmp
cwtl
push
nop
pop
mov
neg
sbb
dec
imul
pop
or
cmp
pop
out
shll
inc
push
add
inc
sbb
push
dec
out
pop
push
seta
popl
mov
addr16
stc
mov
pushf
jne
inc
push
mov
in
xchg
jb
fisubs
rorb
pop
mov
outsb
cmpsb
and
nop
dec
inc
popa
push
dec
cli
aad
divl
ja
ror
test
dec
cmp
push
pop
lret
out
add
mov
cmp
inc
js
push
cld
std
das
les
aam
testb
pop
jge
mov
push
lret
and
pushf
rcrl
inc
jmp
mov
add
and
insb
sub
adc
rcll
jbe
call
mov
mov
push
mov
test
jp
subl
insl
aaa
add
dec
sbb
pcmpgtw
stos
xchg
std
movsl
mov
jge
mov
xor
mov
mov
pusha
push
ds
or
and
sbb
imul
mov
dec
or
pop
iret
scas
aad
ss
fdivs
mov
dec
jo
and
stos
push
imul
xlat
dec
sub
dec
fisttpll
fsubrp
push
cmp
fildll
adc
ljmp
test
xor
or
test
pop
and
shlb
jle
movsb
jb
popf
jp
out
xchg
mov
call
aad
sbb
sti
mov
loope
adc
adc
lea
outsb
sub
push
dec
mov
xchg
mov
outsb
inc
pop
cmc
cmp
lcall
pop
lret
pushf
lds
fucom
rorl
mov
shlb
push
lret
adc
dec
ret
dec
cmp
or
hlt
daa
sub
lret
int3
sahf
nop
das
cmp
fistl
inc
xor
scas
ljmp
mov
pop
push
jbe
push
pop
push
lret
ja
pop
jno
daa
inc
pop
pop
sub
mov
push
pop
mull
cwtl
divb
inc
push
inc
rolb
cmp
repnz
jb
ljmp
sbb
cmpsb
and
add
sarb
ret
xlat
loope
xor
popa
movsb
in
imul
ret
sub
outsb
push
mov
pop
movsl
shll
test
inc
je
mov
inc
xor
xor
pop
adc
nop
fnstsw
cmp
out
push
insb
adc
stc
outsb
aad
xor
es
into
iret
adc
ds
or
mov
sbb
xor
jg
in
imul
lcall
mov
xchg
cmpsl
cmc
arpl
leave
imul
mov
xlat
mov
insl
sbb
sub
fwait
xchg
gs
xchg
outsl
sahf
rcrb
push
jae
aas
jae
stos
stos
jge
push
cld
xchg
sbb
cmp
and
cmp
xor
jl
pop
ficoml
fisttpl
outsl
inc
pop
xor
imul
mov
jg
loope
imul
popa
pop
mov
sub
cs
fcmovb
fcmovb
in
push
adc
iret
push
dec
mov
cmp
sahf
stos
jp
rorl
das
mov
dec
jns
out
pop
std
adc
imul
movsb
mov
inc
xchg
clc
std
fisubrs
imul
inc
aaa
cmp
test
sbb
cld
gs
xor
rcr
cmp
inc
popf
xchg
mov
pop
repnz
imul
pop
sbb
pushf
jo
pop
jge
jg
pop
xchg
xor
sbb
test
add
sbbl
rcl
aas
push
adc
xor
out
push
sub
adcb
mov
jno
push
loope
or
fwait
pop
cmp
mov
outsb
and
sbb
and
inc
xchg
xchg
adc
movsl
xor
sub
or
mov
cmpsb
add
fdivr
loope
sub
or
lods
add
dec
pop
or
lds
add
adc
adc
sbb
scas
shr
dec
add
bound
inc
mov
in
rolb
or
mov
mov
inc
mov
sbb
add
add
ja
addl
push
dec
cmpsl
lods
lods
mov
xor
xor
or
cmp
enter
push
xchg
test
xchg
dec
ret
cli
dec
imulb
in
cmp
pop
mov
xchg
inc
inc
add
cmp
rol
xor
pop
lcall
leave
adc
lret
push
imul
ss
xor
outsl
push
lahf
inc
sarl
adc
fists
cmc
push
cmc
mov
or
mov
lods
out
sbb
xchg
cwtl
xchg
cmp
adc
xchg
mov
loope
insb
cmc
mov
lods
addr16
cmp
inc
fsubr
push
mov
cmp
jge
cmp
sub
add
fdivr
jae
gs
jae
and
adc
mov
cmp
mov
test
mov
ljmp
adc
hlt
aas
test
sub
mov
jb
fwait
cmc
inc
cmpsl
dec
dec
popf
jbe
push
gs
add
mov
fildl
pusha
pop
cmpsb
test
dec
jmp
xchg
sbb
mov
arpl
pop
xor
ds
fstpt
jecxz
repz
std
sub
test
mov
cwtl
test
in
arpl
or
stos
mull
mov
outsl
or
fs
in
sti
mov
cmc
sti
sbb
inc
and
mov
std
pop
scas
jae
lcall
sbb
adc
movsb
dec
stc
iret
xlat
sub
jae
pop
das
mov
mov
addr16
je
iret
adc
in
push
fisubl
dec
js
or
popf
mov
das
nop
pusha
and
and
jno
fsubl
push
fistps
cli
and
or
int
in
mov
fs
cmc
inc
jl
mov
jmp
mov
mov
sbb
mov
enter
sub
pusha
fisttpll
mov
jl
jns
int
add
push
mov
dec
push
out
mov
rcr
push
outsl
sbb
adc
xchg
push
shl
dec
lret
dec
bnd
scas
push
mov
lcall
cmpsl
xchg
xchg
icebp
les
xchg
adc
or
inc
mov
sub
jae
sbb
arpl
jg,pt
addr16
imull
sbb
adc
insb
popa
jne
cmp
mov
vpsllq
xor
dec
aas
push
paddsb
insb
loop
mov
sub
ret
dec
dec
ja
jne
rep
arpl
pop
das
fwait
loope
lea
loopne
xchg
test
add
cld
stos
jo
dec
jl
mov
fsubrs
fwait
sbb
adc
jmp
xor
lods
push
cmpsl
xchg
and
stos
insl
repz
repnz
or
jne
out
jmp
inc
adc
pop
loopne
inc
and
addr16
add
pop
les
mov
getsec
loop
lods
mov
xor
push
test
test
ficoml
stos
aam
mov
outsb
imul
jle
mov
jecxz
add
jp
adc
and
push
jg
xor
mov
clc
or
xor
lret
mov
out
xchg
and
add
scas
jo
popa
mov
push
fwait
pop
mov
mov
sahf
jge
aad
mov
jbe
push
xchg
les
dec
mov
frstor
jo
xchg
out
dec
or
shrl
in
jo
int
sub
push
aam
mov
add
into
pop
or
push
adc
sbb
or
jmp
iret
test
mov
mov
or
loope
movb
pop
push
and
fldt
jo
dec
jge
jmp
rol
pop
in
mov
mov
dec
adc
out
push
mov
in
ds
movsb
les
shlb
push
shlb
sbb
or
dec
ret
into
fldenv
cmpsb
xor
vpor
push
addr16
and
adc
cmp
or
xor
mov
or
cmp
inc
sub
mov
sub
fcmovb
jmp
push
sbb
fnstenv
int
xchg
stos
pop
pushf
inc
into
je
lahf
sub
lcall
std
icebp
fs
xchg
dec
clc
mov
call
mov
mov
pop
aas
sahf
push
hlt
xor
mov
xor
shrl
add
sahf
cmp
push
jns
xchg
and
xor
xchg
insb
inc
lock
ret
ficoms
or
cmp
jg
dec
pop
cltd
sarb
test
shll
shl
jmp
xor
pop
mov
and
dec
inc
sbb
jbe
mov
mov
repnz
cld
orl
push
ljmp
inc
pop
imul
pusha
pop
xchg
mov
cs
xchg
pop
sti
jno
or
sbb
pop
xor
ja
clc
mov
les
je
pop
mov
stc
iret
mov
enter
and
lock
shrl
inc
pop
rolb
xchg
test
mull
out
mov
sbb
cmpsl
lea
mov
popf
mov
xor
sbb
shrb
mov
pop
jno
add
fildll
addl
popa
sub
jle
sahf
or
push
mov
sub
pushf
jle
mov
or
fistps
push
inc
sahf
out
sbb
inc
in
stc
popf
std
adc
pop
ljmp
lods
sub
int3
mov
jnp
pmulhuw
cmp
push
inc
jecxz
jecxz
xchg
cld
in
scas
jl
xor
xchg
repnz
jecxz
xchg
adcl
je
loopne
cmpsb
daa
mov
push
fimuls
fistps
and
xchg
mov
ja
inc
pop
cmpsb
mov
repz
es
inc
stc
mov
mov
enter
add
or
jne
and
xchg
cwtl
hlt
jge
in
inc
sub
movsb
xor
pop
push
pop
mov
inc
ds
dec
lret
adc
jno
outsb
mov
inc
movsl
rclb
in
loope
cmp
adc
adc
es
xor
js
pop
cmc
push
rclb
inc
int
jecxz
mov
aam
push
fs
insb
scas
gs
das
cmp
nop
xor
ss
inc
in
dec
xor
cmc
inc
loop
and
test
fisubrl
notl
adc
adc
pop
out
adc
mov
fwait
ret
adc
cmp
adc
mov
adcb
call
mov
xchg
and
bound
enter
dec
and
aas
sbb
loopne
cs
sbb
push
mov
jge
cmp
pop
mov
icebp
loope
mov
pop
in
addr16
outsl
mov
stos
or
imul
addb
outsl
cmp
jge
in
insb
mov
ljmp
or
pop
les
cmp
ret
sbb
movsl
xor
lahf
fstpt
mov
mov
sarb
xchg
xchg
mov
in
mov
jge
pop
cld
push
xchg
xor
xor
push
cmp
mov
lods
test
jp
inc
or
and
adc
lds
sub
faddl
add
fs
push
jle
push
scas
cwtl
dec
lock
cltd
mov
xor
pop
add
dec
pushf
je
mov
stos
jecxz
jg
push
fldl
pushf
jp
aad
sbb
jae
mov
and
dec
push
popa
es
inc
test
rcrl
dec
mov
pop
push
gs
inc
pop
icebp
arpl
xor
push
jp
popa
jge
fadds
pop
mov
lret
add
dec
fimuls
aaa
stos
pop
outsb
ljmp
les
xor
cmp
or
cmp
sub
push
mov
add
add
inc
stc
jnp
mov
push
popa
pop
push
ljmp
loope
mov
lcall
xor
inc
filds
repnz
sarl
jecxz
out
cld
mov
push
cmpsl
dec
lds
pop
push
push
imull
ljmp
cmp
addr16
subb
mov
idivb
fnstenv
pusha
sub
popa
clc
mov
mov
inc
push
popa
mov
cld
inc
xchg
mov
stos
mov
jbe
dec
xchg
sub
iret
pop
push
cmp
cmc
clc
jl
inc
push
add
inc
adc
shl
subb
dec
and
ljmp
add
test
cmp
loop
xchg
lods
mov
cmp
mov
ja
mov
or
pop
xor
test
xor
scas
stc
fsubl
nop
sarb
aas
fildl
xchg
adc
sub
into
mov
into
xchg
fdivrl
fnstsw
mov
setbe
push
pop
dec
test
sub
jl
lahf
arpl
cltd
dec
xor
cmp
pop
adc
aad
test
scas
inc
push
imul
hlt
test
test
scas
jb
dec
adc
jns
adc
insl
dec
flds
cs
jns
xchg
lds
mov
dec
xor
and
pop
pop
stos
repz
jmp
cmp
sbb
sbb
lea
cli
push
nop
jmp
aaa
cmp
test
add
out
lcall
push
aas
dec
in
sbb
push
ret
mov
mov
mov
sbb
pop
lahf
loope
dec
dec
push
mov
add
xlat
sub
out
ret
out
in
mov
xchg
xorb
les
cwtl
xchg
or
ror
test
fstpt
test
dec
ficoml
jl
aad
cld
incl
bound
add
jb
incb
jecxz
add
in
repnz
push
push
loop
insb
stc
faddl
cltd
cwtl
mov
pop
pop
or
dec
call
xor
adc
aam
ljmp
dec
lret
sbb
push
push
xchg
lock
jb
inc
push
mov
add
repnz
adc
jmp
aad
adcl
xor
mov
inc
cmp
mov
ret
add
mov
inc
bnd
movsl
fsubr
cmpsb
inc
xchg
rol
or
cs
adc
push
dec
mov
stos
rcll
arpl
push
cmp
and
outsl
inc
ret
and
pop
pop
shrl
dec
cltd
out
mov
aad
jle
sbb
enter
or
push
das
ss
inc
pop
mov
aad
jb
fsubs
ja
ljmp
cltd
xcrypt-cfb
cmpsl
movsl
or
mov
pop
test
fs
pop
jbe
cld
daa
jmp
pop
pop
push
fidivl
std
mov
xchg
pop
pop
add
pop
push
pusha
data16
out
pop
push
jge
mov
in
pop
ja
mov
jle
lock
loopne
xor
add
loop
jne
and
pop
xor
popa
stos
and
adc
push
aad
or
xchg
loopne
in
in
jbe
movsb
in
sub
mov
xchg
push
rcrb
imul
inc
or
jecxz
lea
mov
loope
std
arpl
lahf
in
daa
xchg
mov
inc
xor
cmp
rcr
cmpsb
lods
push
push
jne
mov
xchg
and
xor
jns
sbb
inc
add
cmp
call
cld
imul
outsb
push
sti
pushl
or
inc
jne
xor
cli
out
stos
fldt
adc
add
dec
adc
and
add
lock
in
dec
xchg
mov
mov
adc
or
aaa
sbb
dec
cmp
lret
ret
es
cwtl
mov
daa
fldenv
addr16
dec
aam
mov
push
cmc
repnz
and
sub
jae
jb
pop
mov
adc
push
nop
lods
jmp
test
shlb
scas
or
add
shrb
pop
push
addr16
lahf
pop
out
ficompl
sub
lahf
sahf
les
repnz
xor
pop
mov
ss
mov
nop
mov
jbe
pop
xchg
shr
push
hlt
cmpsb
mov
std
cmp
adc
cmp
arpl
sbb
inc
mov
cltd
push
rorb
ret
insl
jbe
shll
int3
daa
pusha
filds
xlat
mull
dec
jg
decb
flds
adc
push
sahf
mov
fs
stos
idiv
inc
and
scas
sbb
jnp
jo
pop
inc
and
and
popa
dec
es
hlt
icebp
aad
shrl
and
dec
sub
aam
notb
scas
adc
insb
stos
test
jg
sbb
stc
push
add
mov
cwtl
ljmp
hlt
adc
add
or
cwtl
ret
sub
mov
mov
dec
sahf
jmp
fists
inc
mov
xor
mov
aas
enter
addl
int
sub
mov
shl
jbe
in
cli
sbb
jge
stc
sub
jo
fwait
testl
push
mull
daa
ds
bound
stos
jno
inc
push
mov
pop
out
dec
daa
js
jae
adc
sub
gs
pop
movsb
push
xor
and
mov
adc
int3
jp
pop
and
loop
mov
mov
sub
mov
movsl
lret
push
inc
dec
jne
pop
and
jp
dec
jno
cmp
inc
mov
ret
or
jmp
sub
jle
aad
hlt
sbbl
insl
pop
mov
push
adc
jnp
fidivrs
adc
dec
xor
popa
das
idivl
lahf
dec
inc
mov
sbb
mov
dec
xchg
bound
jp
dec
xchg
push
lock
mov
lret
dec
pop
arpl
push
in
jno
enter
repz
inc
in
cs
push
insb
fucomip
iret
out
adc
xchg
popa
jae
xchg
ret
insb
jl
ljmp
pop
dec
mov
out
mov
mov
jnp
mov
mov
add
push
out
out
js
mov
mov
push
jae
das
ret
daa
inc
jbe
jo
cmpsb
mov
fimuls
lds
popf
mov
and
shrb
jg
cwtl
dec
in
adc
ja
mov
lock
insb
and
sub
xchg
out
fcoms
in
and
and
sub
repz
adc
xchg
dec
cwtl
xor
xchg
xchg
mov
mov
cmp
lds
xorl
addr16
jmp
mov
and
mov
sbb
icebp
imul
pop
adc
clc
jnp
data16
lea
mov
daa
sbb
scas
dec
push
pop
cmp
repz
std
addr16
xor
subl
in
or
movsb
ja
js
loopne
add
or
mov
cmp
iret
lcall
into
es
outsl
dec
xchg
push
pop
test
jnp
add
add
in
aas
mov
add
test
pop
jmp
aas
push
sbbl
lock
std
sbb
scas
loope
call
idivb
fsubl
xchg
incb
and
jmp
sbb
int
out
adc
add
aad
ret
loop
fnsave
xorb
ror
adc
movsb
inc
jne
mov
pusha
xor
push
add
sub
imul
add
sbb
lods
and
inc
popa
xchg
push
adc
push
mov
testb
push
and
and
xchg
popa
ja
mov
cs
pusha
pushw
enter
inc
loope
or
aas
and
add
sti
lods
pop
mov
and
cmp
xor
mov
xchg
push
xchg
sub
pushf
in
jo
ljmp
mov
aaa
stc
mov
xchg
sub
insb
inc
mov
bnd
jo
jecxz
mov
mov
in
or
xor
out
adc
movsb
dec
divl
roll
movsb
lret
ret
mov
sbb
addr16
shl
icebp
cmp
sub
das
pop
nop
iret
lret
adc
jb
int3
data16
mov
sbb
pop
mov
mov
mov
rorl
pushf
out
fldl
fstl
stos
push
js
push
mov
xor
loop
xor
dec
test
iret
mov
dec
push
imulb
cmp
data16
xchg
and
bound
inc
cmpsb
shll
es
xlat
xchg
ret
or
inc
and
xor
test
cmp
inc
das
imul
in
jmp
shlb
add
push
and
push
loope
xchg
data16
adc
push
repz
push
add
mov
pop
inc
negb
sbb
xor
arpl
stc
inc
cmp
push
fstl
movsl
adc
rclb
in
int3
pushf
arpl
pop
push
adc
xlat
imul
cmpb
cld
and
add
repnz
sub
neg
daa
cmc
adc
cmp
in
xchg
idivb
shl
sbb
inc
add
mov
mov
or
repz
and
add
adc
adc
cmp
mov
lret
jbe
jbe
push
or
mov
mov
addr16
push
sub
or
stos
cs
or
pusha
scas
pop
loope
jb
mov
sub
or
fadds
jno
and
mov
jmp
adc
orb
mov
push
clc
cmp
in
pop
push
mov
cs
jmp
stos
adc
push
insb
mov
mov
sub
sti
call
lret
inc
incl
lret
test
shl
outsb
shll
lock
pop
rcrl
rorb
sub
fs
test
cmp
stos
call
xchg
sub
dec
mov
mov
movsb
in
or
loopne
das
jne
push
sub
push
add
clc
jg
idiv
fdivrs
and
addb
lret
jnp
push
out
loop
enter
push
call
push
lahf
test
push
sbb
or
ret
push
clc
or
pop
xor
inc
push
jge
rorl
in
cwtl
or
lods
outsb
clc
sbb
mov
inc
and
pusha
cld
mov
mov
mov
jge
jge
jne
dec
fwait
dec
mov
fnstcw
arpl
loopne
dec
xor
pop
int3
inc
cmp
and
nop
into
lea
mov
pushf
dec
mov
into
lods
xchg
popa
mov
push
aas
sbb
sub
cmp
mov
lock
push
add
leave
cmp
xor
arpl
dec
popa
or
sti
std
rcrb
xchg
inc
inc
aas
popw
cmp
popf
add
imul
xor
ja
add
lcall
pop
lret
pop
jge
sub
sbb
pop
pop
lea
fs
stc
sub
dec
sbb
cmp
int3
out
mov
test
pop
mov
or
jmp
out
loopne
push
ss
jnp
push
std
popf
pop
out
mov
pminub
push
add
pop
aaa
test
jns
mov
sahf
adc
movsl
or
hlt
pop
daa
push
adc
cmp
adc
cwtl
inc
or
in
inc
mov
add
pop
cmp
cmpsb
iret
sub
and
out
mov
add
cltd
bound
add
call
push
fstps
or
nop
pushf
lret
jecxz
mov
rorb
fldcw
dec
lahf
loop
dec
push
mov
adc
subl
ljmp
ja
lods
push
sub
jp
dec
inc
jecxz
or
iret
lods
gs
stc
aam
jbe
stos
andb
jno
jge
pop
outsl
stos
xchg
jnp
stc
dec
inc
lret
enter
mov
mov
dec
loop
sti
jl
push
les
call
pop
sub
out
mov
ja
iret
sti
xchg
ss
mov
lret
mov
test
js
inc
sbb
push
add
sub
testb
iret
enter
mov
mov
scas
decb
jecxz
sbb
or
imulb
pop
mov
adc
inc
pop
lods
cld
pop
in
jecxz
dec
stc
out
sbb
les
inc
and
bound
out
pop
dec
cli
dec
jp
mov
arpl
sub
andl
enter
or
outsl
push
xchg
dec
outsl
pop
dec
cmp
push
mov
stos
xlat
bound
sbb
repz
push
inc
mov
fwait
mov
test
fiadds
insb
mov
xchg
hlt
les
out
lea
dec
jp
mov
movsl
pop
push
xchg
push
stos
xlat
out
shll
out
stos
out
daa
call
xor
add
jbe
sbb
aam
ud2
aaa
sbbl
fwait
jne
loopne
stos
mov
pop
sub
or
lock
push
stos
mov
pop
cmc
scas
addb
inc
outsl
test
cmpb
cld
jl
cli
je
fucomp
mov
into
mov
inc
je
add
in
sub
pop
mov
add
pop
mov
roll
stc
push
imul
sbb
shlb
lods
stc
dec
mov
outsb
fstpt
sbb
xchg
jge
push
lahf
xlat
iret
jae
jmp
ja
in
cmpsb
cmpsl
jmp
call
mov
dec
mov
movsl
out
cmpl
cld
xchg
sub
xlat
push
sbb
mov
or
das
jbe
fstl
ds
rclb
mov
cltd
cmp
repz
movsl
mov
inc
movsl
js
mov
bound
aaa
xor
jae
aam
xlat
mov
enter
je
inc
outsb
push
cmpsl
sahf
mov
test
jae
jo
and
jnp
xchg
cmp
push
cmc
add
ja
fildl
pop
and
outsl
xor
push
bound
test
sarl
jle
pop
xor
pop
adc
jmp
add
inc
fistl
push
testl
jge
cmp
lods
in
fwait
xchg
jae
loop
push
in
cld
lods
inc
pop
int
xchg
out
aaa
outsl
subb
cmpb
adc
ja,pn
mov
lods
ss
jg
clc
jo
and
jbe
pop
sbb
sub
sub
xor
mov
mov
and
lea
out
xchg
data16
sub
mov
fcoms
data16
and
sub
orl
push
mov
test
sub
cltd
dec
lods
lcall
out
lret
je
push
push
test
pop
aas
test
mov
imul
xchg
push
add
stos
pop
push
lods
adc
xor
imul
add
dec
push
or
push
mov
dec
and
cmp
ja
in
fnstcw
pop
movq
adcb
or
stc
xchg
filds
push
add
mov
aam
enter
sbb
outsb
call
push
inc
ja
add
iret
and
pop
adc
mov
inc
mov
loope
dec
cmpsb
mov
cmp
sub
cwtl
jnp
rclb
jmp
shll
and
dec
ds
sub
arpl
or
push
adc
imul
in
push
out
ret
imul
cmp
or
xlat
xor
adcb
cwtl
push
inc
xchg
xchg
je
pop
movsb
sbb
mov
pop
cmp
jno
jecxz
or
mov
pop
ja
push
pop
testl
xor
mov
insb
mov
jns
inc
sub
jnp
push
mov
push
jecxz
cmc
adc
jno
rorl
mov
mov
dec
aaa
sbb
or
mov
jge
jge
mov
pop
jmp
adc
rolb
sub
loope
clc
push
ja
sbb
scas
dec
mov
insb
sub
sarb
mov
aaa
scas
adc
sbb
fs
pop
cwtl
dec
adc
sub
and
mov
sti
xchg
sbb
push
lds
push
daa
fst
jae
push
and
mov
ja
push
jbe
std
lahf
xchg
adcl
cmp
jl
loope
loop
loope
test
clc
in
pop
and
ds
nop
xchg
ljmp
scas
fadds
lahf
idivl
inc
imul
notl
jb
clc
jp
sub
rcll
pop
pop
mov
pop
mov
in
out
out
test
push
pop
jno
add
or
xor
xchg
or
inc
jns
push
icebp
out
punpckldq
sbb
clc
mov
mov
mov
inc
sbb
lcall
pop
in
inc
lock
gs
pop
test
pop
add
dec
sub
jae
enter
inc
jle
jbe
cmpsb
jmp
jge
mov
jne
out
hlt
or
sub
popf
cld
cmp
adc
sub
mov
mov
push
jns
orb
lods
insl
into
stos
push
sub
push
rcrb
jp
pop
push
test
jge
adc
cld
jmp
out
cwtl
jg
jae
into
inc
lret
das
out
sti
jle
xor
out
xor
repnz
loop
jp
sub
data16
xchg
dec
test
and
push
jnp
mov
pop
pop
dec
jmp
lock
sar
addb
cwtl
mov
fs
mov
mov
addr16
fcompl
imul
xchg
movb
stos
sub
jmp
jno
enter
sbb
adc
dec
sarl
xchg
inc
adc
mov
lret
dec
pop
mov
push
dec
jns
jo
and
addr16
ljmp
popa
repz
ret
xor
outsl
or
xchg
int
or
gs
test
cmp
mov
mov
mov
dec
and
out
mov
pop
popa
out
ljmp
mov
cmp
pop
cld
jo
sub
xchg
sbb
push
mov
xchg
jo
ljmp
or
adc
fistl
and
test
pop
stc
das
data16
push
inc
out
add
push
push
dec
test
jecxz
jbe
aam
enter
jl
push
adc
pop
out
mov
sub
aaa
mov
xor
xor
mov
decb
insl
add
inc
xchg
jnp
pop
aam
mov
lods
or
loopne
insl
pop
stos
push
jbe
loop
fsub
fdivl
lods
xor
into
arpl
mov
call
aad
cmp
or
ljmp
lcall
or
mov
hlt
or
add
icebp
pusha
mov
hlt
inc
jl
movsl
cmp
adc
in
or
mov
ficoms
jge
sti
sub
mov
out
add
cmc
sbb
icebp
xchg
mov
aam
xor
push
lods
test
stc
in
sahf
xchg
shll
je
dec
mov
ret
out
mov
rcl
cmp
pop
cli
test
std
mov
out
push
mov
es
cli
fisttps
jecxz
cmpsb
adc
ds
aam
arpl
cli
mov
xor
or
and
mov
dec
mov
and
pop
mov
add
lret
imul
std
push
jb
adc
pop
frstor
std
fdiv
xor
mov
sub
andl
test
pop
ret
jo
fisttpl
das
int
sbb
sti
stos
jae
test
outsl
jmp
pushf
push
idivl
cmc
add
sub
inc
cmp
test
aaa
mov
mov
pop
jle
shll
popa
sub
push
imul
jae
repnz
mov
fnstcw
pop
icebp
xchg
push
aam
sub
enter
scas
xor
sbb
call
fwait
adc
in
loop
out
stc
rorl
aam
icebp
imul
imul
dec
fsubrs
lret
push
arpl
std
lock
sbbb
fnstsw
mov
push
repz
pop
mov
rorb
shl
addb
in
cmp
adc
push
xor
sbb
fbld
neg
loop
xlat
jmp
idivl
or
popf
mov
ljmp
leave
loope
lcall
jae
sub
cltd
sub
je
mov
inc
jae
jp
jp
adc
loopne
push
pop
xchg
test
mov
fsubs
mov
fcomi
jg
jnp
cld
dec
mov
xchg
xchg
repz
jb
es
xchg
pushf
fs
js
mov
mov
xchg
stc
lret
inc
test
out
mov
rcrl
push
jecxz
adc
pop
fsubs
dec
fsubr
ret
pop
negl
and
xorl
xchg
movsl
adc
imul
lcall
sub
in
add
push
into
jl
fs
cs
mov
xchg
aam
xchg
shr
add
lods
push
jbe
dec
mov
or
adc
dec
daa
sarb
add
icebp
sub
sub
cmp
cmp
add
add
mov
push
into
int3
fdivl
jns
pop
int
cwtl
and
xchg
mov
nop
in
sub
cmpsb
sbb
sbb
mov
pop
lret
mov
push
lds
pop
cmpsb
cmp
test
leave
cli
jl
mov
lret
cmp
mov
fsubrs
inc
daa
mov
inc
lret
into
ss
jecxz
push
lock
xchg
stc
sbb
add
add
and
inc
add
rorb
pop
pop
and
fstp
fst
adc
mov
jmp
shl
xor
lock
adc
shrb
out
xlat
mov
or
iret
insb
sub
scas
dec
clc
gs
aas
cmp
cld
lret
into
adc
pop
sti
xor
sbb
testl
mov
xor
sbb
sbb
cltd
inc
and
in
out
pop
pop
repnz
cmp
cltd
popw
jle
push
pop
fidivrs
or
and
ret
in
rcrl
push
adc
divl
or
xor
mov
lret
sub
mov
mov
and
adc
inc
fimuls
push
imul
pushf
daa
cld
in
dec
scas
pushf
add
xchg
sahf
jae
lock
add
mov
nop
push
stos
dec
mov
push
fwait
pop
mov
stc
hlt
mov
std
adc
xor
gs
popl
add
into
jecxz
mov
pop
nop
inc
dec
push
cmp
sbb
cmp
aas
add
mov
sbb
lock
jae
add
or
xchg
sub
das
push
cmp
js
xchg
pop
mov
dec
shrl
hlt
push
addl
push
fstpl
mov
push
adc
add
test
in
mov
outsb
xlat
pusha
scas
fmull
jb
adc
mov
fcompl
inc
mov
jb
leave
mov
mov
or
xchg
scas
clc
sbb
mov
adc
mov
or
imul
pop
ja
aaa
dec
and
insb
mov
and
mov
and
or
jne
enter
jle
cmp
xor
or
xchg
mov
jmp
mov
out
or
jle
xlat
sub
jg
int3
and
and
sub
push
loopne
cmpsl
fldl
cmp
imul
lods
ds
outsl
sti
popa
mov
pop
fisubrs
add
insb
scas
fidivrl
cld
les
flds
clc
in
in
sbb
ja
pop
jo
in
in
lret
bound
popa
xor
cwtl
dec
hlt
sbb
je
cmp
cli
mov
inc
aas
inc
aad
out
repnz
cmp
cmpsb
idivl
and
jg
sti
mov
outsl
out
incb
mov
std
dec
loope
pop
dec
mov
mov
inc
cmp
fmuls
mov
mov
shl
ja
jnp
jmp
mov
clc
jp
sub
inc
fldcw
lods
xchg
xlat
faddp
xchg
xchg
movsl
fwait
rcll
adc
out
scas
mov
push
rclb
pop
cmp
adc
xor
mov
cmp
inc
xor
ficompl
aam
xchg
lods
ret
mov
or
mov
inc
movsb
adc
jg
push
mov
or
lcall
or
mov
mov
push
add
sub
stos
or
adc
push
insb
addr16
test
xlat
dec
xchg
mov
rclb
shlb
adc
pop
xrelease
cmp
loop
mov
push
lds
mov
xor
jmp
xor
and
ljmp
mov
push
iret
insb
mov
xor
xchg
je
pusha
mov
mov
add
dec
icebp
xchg
xlat
lret
nop
mov
inc
and
sub
mov
and
movsl
dec
jmp
aaa
stos
cmp
xor
xchg
and
xor
test
add
in
fcoms
inc
cmp
ret
or
or
fistps
fisttpl
outsl
std
push
cmpsb
int
shl
cld
push
addl
imul
push
out
cli
cmp
pop
pusha
int
jg
fstpl
popa
xchg
xchg
push
out
pop
push
imul
int
ret
mov
and
add
pop
or
xor
and
cld
ljmp
jbe
int3
mov
stos
addr16
loop
in
or
int3
stc
ret
xchg
jecxz
loop
imul
and
inc
cwtl
mov
ror
das
dec
mov
shr
dec
cmpsb
mov
adc
sbb
adc
pop
xor
jmp
push
and
or
pop
sbb
add
cmc
ss
mov
adc
stc
mov
add
inc
sar
test
ds
inc
ds
jge
dec
adc
jbe
xchg
sub
imul
movsb
inc
xor
lods
xchg
fwait
jnp
pop
pop
mov
addr16
cld
push
inc
inc
stos
inc
mov
push
sub
movsb
aaa
fidivs
xor
js
push
mov
pop
sbb
mov
sub
std
call
cmp
and
fmuls
popa
inc
subl
in
cmp
daa
sub
mov
push
adcl
xchg
xchg
pop
orl
or
push
jbe
call
sahf
inc
adc
and
in
pop
jne
push
enter
push
jecxz
cmp
xchg
out
fildll
nop
outsb
pop
mov
js
fcmovb
xchg
jno
fcomps
mov
sbb
je
mov
arpl
xlat
mov
lock
std
addr16
xor
pop
sarb
cs
xchg
cmpsl
loopne
outsl
inc
pop
xor
das
faddl
dec
jae
shll
jnp
wbinvd
mov
outsl
aas
aas
js
int
aas
mov
or
insl
rcrl
add
inc
rcrb
sahf
inc
xor
fisttpll
push
push
loopne
cmp
addr16
and
mov
js
dec
and
mov
push
popf
repz
pop
cpuid
inc
int3
test
arpl
testb
arpl
fbld
insl
xlat
movsb
aaa
cmp
fldt
insl
lahf
sarl
or
mov
lret
jb
and
mov
daa
repnz
inc
test
stos
lcall
out
outsb
xchg
jl
insl
fwait
data16
or
sbb
push
adc
jnp
cmc
ror
jmp
and
sub
and
jns
in
jmp
scas
ret
scas
xchg
pop
std
mov
cmc
cmpl
mov
test
xchg
cmp
mov
pop
sub
cmp
xor
mov
into
call
gs
int3
or
movsb
test
inc
or
cmc
test
sti
fs
lds
inc
scas
cmpsl
xor
fst
loope
movsl
fucom
jne
mov
pop
popa
ret
or
mov
fwait
xchg
mov
cli
shl
adc
mov
mov
push
cltd
mov
xchg
sarb
aad
add
xchg
ljmp
adcb
sub
les
lcall
pop
adc
les
icebp
jp
aam
pop
and
in
xor
xchg
fcom
loop
fcmovu
cltd
loopne
inc
inc
and
scas
lods
mov
lret
fndisi(8087
je
mov
push
movsl
outsl
jno
les
movsl
cmp
test
loop
pop
pushf
cmp
roll
xor
xor
fnstenv
jge
nop
or
stc
push
enter
or
jp
ret
lea
or
add
movsb
xlat
add
mov
fwait
pop
jo
faddl
push
icebp
adc
xchg
out
push
lret
pop
cmc
cmp
mov
clc
inc
fnstenv
push
addr16
movsl
sbb
cltd
loop
pop
cmpsl
call
push
movb
in
add
in
test
scas
loop
es
jb
iret
mov
in
jo
jne
test
mov
push
lea
jno
jmp
into
push
movb
push
dec
pop
jbe
out
cmp
test
cltd
add
call
outsl
out
or
mov
and
cmp
or
mov
nop
cli
and
shrb
inc
lahf
mov
mov
adc
ret
adc
cmp
addr16
fnstenv
aaa
push
out
jb
ret
bound
mov
mov
ss
test
push
push
mov
push
push
cltd
fwait
enter
pop
push
fsubp
ret
lcall
adc
out
outsb
pop
aaa
test
lea
and
out
xor
pop
or
stc
or
xor
in
xchg
daa
pusha
ljmp
mov
jnp
jle
mov
in
xchg
leave
sub
idivb
xchg
fildl
sub
or
pop
mov
mov
iret
add
roll
dec
rorb
or
jecxz
pop
mov
ret
xor
movsl
int3
rcll
into
pop
jnp
mov
ret
xlat
mov
push
jmp
fwait
repnz
ret
pop
cmpsl
in
sbb
cli
xchg
sub
sbb
aam
rorb
cmpsb
inc
lea
stos
mov
push
outsb
inc
xor
adc
xchg
xor
cld
dec
add
je
jge
addb
icebp
sub
aaa
lret
arpl
cmp
test
xor
int
pop
fstpl
push
jne
and
mov
xor
data16
adc
xchg
dec
sbb
pop
out
pop
push
aaa
outsb
mov
mov
movsb
and
add
lds
and
sub
mul
cmpsl
jg
iret
mov
dec
or
outsl
push
pop
scas
sbb
and
ret
ret
add
mov
jg
lret
mov
gs
cmp
mov
das
clc
or
pop
inc
push
cli
xchg
aad
jae
mov
xor
jl
cmp
adc
scas
pop
xchg
mull
add
jge
inc
mov
add
pop
or
aam
xor
fistpl
cmpsl
das
jbe
je
addr16
shl
push
jne
fimull
fcoms
pushl
sub
adc
out
mov
lret
push
jae
push
and
pop
mov
loope
pop
inc
movsb
mov
or
ret
push
push
out
sarl
fs
adc
add
jmp
mov
mov
js
stos
mov
adcl
dec
dec
insl
pop
mov
lea
fsubrl
jmp
jecxz
call
test
out
add
xor
jg
and
or
and
cs
sub
mov
and
mov
mov
fisttpl
ret
xchg
test
pop
add
scas
je
ret
jns
mov
dec
pop
or
rcll
jae
aad
ds
jle
mov
dec
repnz
lahf
jp
aaa
push
pop
mov
push
or
subb
jecxz
pop
push
orl
sub
push
dec
cmp
adc
pusha
ljmp
clc
xor
repz
mov
or
stc
pushf
push
mov
cmpsb
mov
and
les
leave
sbb
mov
std
ds
mov
sub
inc
in
xchg
rcrb
repnz
and
repnz
out
mov
xchg
cs
mov
push
cmpsb
je
cmp
cmp
repz
and
popf
lcall
pop
iret
push
js
rcrb
jnp
mov
cli
mov
cs
mov
data16
cmp
mov
int3
aad
sub
push
push
inc
pop
aad
lock
in
or
inc
push
mov
test
mov
into
xchg
jnp
fstp
cmp
inc
or
pop
test
push
jmp
jp
loopw
add
shrl
or
popf
inc
lcall
and
mov
xor
mov
sub
fldcw
xor
jg
dec
jge
ds
dec
jge
jbe
in
pop
inc
mov
in
fwait
sub
pop
std
icebp
icebp
and
mov
push
pop
mov
lds
shlb
ja
repz
jl
nop
jle
ss
out
cmp
movsb
inc
xchg
push
mov
es
sub
js
repnz
sbb
adc
adc
mov
jae
push
jae
pop
sbb
fildll
dec
xchg
outsb
pop
xchg
mov
xchg
push
jb
and
subl
ficomps
xor
xchg
fdivs
mov
inc
dec
stos
xorb
outsb
gs
aad
pop
mov
iret
movsb
add
sub
insl
push
test
mov
mov
xchg
fstpl
dec
das
mov
mov
inc
inc
jmp
or
dec
popl
mov
lret
fiadds
cmp
jb
out
js
push
xor
jo
cld
ja
lret
inc
ret
bound
cmpsl
push
cmp
mov
stos
insb
push
nop
outsb
push
js
jbe
fbstp
cmp
jbe
or
cmp
jbe
gs
adc
adc
add
xor
adc
pop
adc
mov
shll
adc
adc
mov
outsl
sub
aam
loopne
fisubs
iret
or
add
popf
pusha
mov
pop
lahf
and
xchg
jl
xchg
adc
out
xlat
jnp
push
mov
push
movnti
sbb
xor
mov
xchg
loop
push
fiaddl
int
jp
add
addl
mov
add
pop
sahf
pop
push
fdivrl
shl
popa
lds
aam
jno
in
pop
sbb
loop
fdivl
jae
ljmp
cmpsb
adc
aad
shl
stos
jle
xchg
call
xor
jne
pop
mov
lds
pop
dec
dec
mov
xor
loopne
xor
xchg
out
sub
test
mov
cmpsl
sbb
cmpsl
out
mov
sbb
outsb
mulb
insb
inc
mov
filds
into
bound
mov
movsl
adc
pop
test
mov
jae
mov
inc
lods
gs
and
cmp
pop
in
sbb
adc
insb
xor
or
sub
arpl
cmp
fwait
xor
jbe
xchg
add
cmp
jge
gs
cmp
loope
cmp
arpl
scas
jle
dec
pushf
mov
inc
cmp
push
cwtl
push
jae
clc
in
jno
and
lods
ja
xchg
mov
bound
or
in
popf
push
repz
sbb
xor
pop
cmp
imul
lods
imul
and
mov
fcomi
movsb
xchg
movb
jo
xlat
xor
pushf
ljmp
jb
pop
data16
ficoml
call
scas
fdiv
lcall
shlb
dec
add
adc
mov
mov
xlat
pop
ret
jl
mov
insb
movsb
out
arpl
xchg
rorb
bound
adc
in
aaa
sub
fisubrl
fwait
scas
ljmp
xor
push
ss
dec
sbb
test
cmp
aam
fldl
lock
repz
mov
or
pop
and
cmp
lea
cmp
les
and
jo
jo
aas
push
inc
mov
jne
dec
outsb
push
inc
or
dec
adc
adc
sarl
push
pop
std
lods
pop
mov
mov
xor
ret
mov
and
cmp
push
insl
dec
bound
lcall
jecxz
mov
add
pop
jecxz
ret
push
sbb
pop
add
scas
inc
roll
or
rclb
test
sbb
inc
push
mov
jg
sahf
jns
popf
cs
cmc
sub
push
sub
mov
lahf
rclb
push
das
lfs
mov
fidivrl
mov
loopne
js
add
sub
xchg
sub
ret
jp
fldcw
mov
dec
lret
and
push
sub
mov
push
mov
inc
icebp
sbb
adc
test
aas
push
mov
hlt
add
pop
int
add
ret
mov
out
nop
fwait
lret
jns
fistpll
mov
jbe
mov
xchg
lock
pop
and
sbb
out
pusha
dec
inc
shl
lcall
gs
jb
repz
shll
pop
orb
movsl
imul
jno
push
cmp
fs
adc
mov
jbe
or
adc
mov
out
lods
mov
fildl
pushf
inc
push
add
push
jo
dec
test
push
cmp
fcmovnb
push
loop
add
dec
xchg
mov
add
pop
out
jecxz
out
scas
dec
push
sbb
add
iret
mov
fdivs
ljmp
and
xor
fs
int3
out
lods
pop
nop
lret
lock
jmp
push
test
pushf
mov
addb
dec
xor
ss
or
mov
add
mov
and
add
int3
add
jo
testb
sbb
imul
and
jo
sarl
or
xchg
cmpsb
mov
test
jl
pop
cli
leave
in
mov
aas
inc
dec
ljmp
mov
add
sbb
add
adcl
cmp
jle
cmp
cmp
outsb
pop
mov
mov
leave
xchg
mov
jnp
sub
jne
cmp
lods
stos
xor
jle
aam
shlb
pop
int3
hlt
mov
cmpsl
mov
in
fcmovb
mov
pushw
ljmp
roll
push
and
addr16
out
push
mov
icebp
loope
insl
lods
or
mov
cmp
test
aas
push
or
in
and
sbb
mov
push
inc
outsb
adc
xor
pop
sbb
test
andb
mov
adc
ss
out
push
pop
fsubrp
xlat
pop
xor
xchg
insl
bound
inc
mov
dec
push
xor
movsl
push
mov
lahf
cmp
sbb
sub
jo
in
loope
out
shlb
xor
mov
dec
jo
mov
push
push
test
inc
fistpll
lods
test
or
adc
std
sahf
std
adc
ds
call
ja
mov
cwtl
into
repz
adc
adc
lret
sbb
dec
shrl
subl
push
hlt
sbb
sub
mov
and
adcl
sbb
sub
sub
std
add
mov
cwtl
jmp
ret
adc
mov
popf
testb
push
bound
push
xor
addb
insl
dec
jne
imul
rclb
jnp
lods
imul
movsl
add
sbb
mov
fcomps
or
mov
pop
negl
lods
in
dec
mov
imul
cmp
ficoml
inc
ret
cwtl
ret
sbb
xchg
and
lods
mov
mov
shlb
dec
push
pop
imul
push
push
mov
dec
jns
push
xor
movl
insb
data16
dec
jmp
sbb
in
js
adcb
pop
jl
sub
mov
mov
in
outsb
jp
cmpsb
leave
add
push
out
rcl
cmp
cmp
dec
imul
xchg
xchg
clc
imul
cli
aad
cmp
sub
add
subl
stc
int
xor
dec
fsubrl
xchg
repnz
les
sub
insl
nop
push
mov
adc
mov
pop
out
push
fisttpl
push
int3
and
mov
mov
push
push
mov
adc
out
jle
mov
cwtl
cmpsb
push
or
repnz
lahf
call
int
fstp
aad
xchg
pusha
jp
xchg
jnp
xor
and
popa
enter
jp
rol
test
jecxz
lods
add
adc
aaa
sbb
sub
mov
xchg
pusha
jecxz
dec
cld
popa
pop
push
sub
and
pop
loop
jb
or
xchg
rcl
cmp
adc
sbb
add
jbe
mov
inc
jecxz
add
bound
inc
mov
clc
daa
movsb
cmp
loop
inc
pop
xor
and
pop
push
add
call
inc
push
sbb
fidivs
out
scas
pushf
out
cs
mov
cld
mov
cltd
ja
scas
cmpsb
push
pop
cltd
cmpsl
in
scas
test
das
dec
jne
xor
mov
mov
cli
stos
cwtl
mov
lret
movsb
pop
push
sub
dec
nop
jb
inc
sahf
idivb
ret
mov
or
popa
lods
push
outsl
or
scas
dec
inc
or
mov
mov
arpl
cmp
mov
and
mov
movsb
jp
push
mov
loopne
inc
test
push
pop
aas
or
cmpl
stos
subl
es
mov
sub
incb
xchg
bound
stc
std
xchg
insb
sub
adc
push
cmpsb
cs
daa
push
popa
xor
mov
and
sub
fwait
inc
jmp
aam
pop
sub
sti
adc
orl
xchg
adc
inc
jl
cli
sub
test
lds
call
pop
pop
cmp
cwtl
xchg
scas
stc
dec
adc
stc
add
imul
mov
lods
icebp
jg
ja
repnz
fs
jge
push
hlt
inc
mov
jno
jmp
sbb
jg
ja
jge
lcall
xchg
push
xlat
jbe
loope
outsb
jnp
xchg
in
mov
aaa
hlt
xchg
xlat
les
rcll
mov
orb
push
xchg
faddl
fidivrs
jmp
sub
imul
int3
adc
adc
jg
or
nop
in
mov
cmp
mov
push
popf
test
adc
cld
mov
jmp
pop
lock
pop
sti
xchg
popf
xchg
addr16
xchg
jae
jg
dec
lcall
loopne
jno
dec
ljmp
xchg
inc
or
into
das
pop
push
addl
mov
adc
pop
cwtl
adc
sbb
xor
push
mov
loopne
push
cli
sub
hlt
push
jae
lahf
mov
push
ja
mov
incb
pop
out
icebp
inc
mov
or
mov
cwtl
cmp
dec
fildl
outsb
ja
je
roll
imul
xchg
or
sub
imull
sar
in
divl
mov
filds
push
jle
in
aas
repz
adc
repnz
aad
icebp
std
mov
sbb
repz
adc
sub
xchg
inc
lret
or
daa
mov
pop
popa
jnp
mov
nop
cld
dec
lock
jb
aam
es
jge
mov
in
xchg
mov
xchg
or
ja
xlat
cmc
jne
ljmp
add
lret
adc
jne
and
hlt
lock
push
sub
cld
mov
js
enter
xchg
aam
fldl
sahf
mov
xor
lock
mov
fsubrl
xchg
out
ret
out
dec
sub
add
aas
xchg
outsl
and
dec
inc
sbb
call
frstor
adc
xlat
aam
int3
jo
ja
sahf
imul
cs
addb
xchg
lock
mov
scas
loopne
mov
into
sahf
imul
push
aad
test
xor
sub
lahf
sbb
and
aas
daa
mov
mov
pusha
cmpsl
xlat
inc
les
fldenv
lcall
loopne
icebp
mov
adc
sbb
fs
in
adc
stc
mov
jecxz
mov
mov
and
adc
imul
add
push
icebp
inc
inc
mov
jns
jno
out
imul
pop
loop
mov
mov
add
inc
cmpsl
pop
lods
nop
lds
scas
mov
jge
mov
push
dec
sub
adc
pushf
stc
mov
dec
adc
cs
call
mov
inc
cltd
push
repnz
loope
fists
pushf
pop
sti
add
test
dec
shl
sbb
and
push
nop
popa
ds
cmp
mov
cmp
jnp
or
ret
xlat
sbb
xchg
lds
stos
mov
pop
jne
xchg
aam
negb
arpl
mov
mov
mov
sbbb
pop
das
loop
shrl
dec
popa
stc
data16
jae
ss
xor
out
dec
fsts
jge
bound
repz
testl
sub
push
int3
jb
les
jns
fidivrl
push
inc
mov
push
icebp
jmp
ds
lock
loopne
or
fbstp
imul
fdivrp
xor
cwtl
inc
out
mulps
xchg
int
je
outsl
cld
js
test
frstor
inc
pop
dec
and
xor
mov
call
mov
dec
mov
xlat
sub
xorl
lcall
pop
jl
lock
adc
cld
or
rorb
cld
xchg
roll
imul
jbe
jo
repz
test
and
test
lods
or
insb
xchg
bound
clc
stos
sbb
cmpsl
cmp
pop
push
xor
and
aad
ja
dec
fs
aad
mov
sarl
pop
arpl
fwait
lock
jmp
flds
outsb
repz
in
sarb
idivl
ja
testl
leave
push
mov
lods
imull
mov
out
icebp
shrb
mov
and
rclb
and
xchg
lahf
orl
test
scas
mov
imul
aaa
mov
sub
inc
push
adc
mov
add
push
imul
rclb
dec
rolb
sub
mov
idivl
pop
fistl
jmp
mov
push
sub
stos
lret
adc
push
je
dec
pop
xor
mov
push
dec
or
sti
enter
shl
sbb
xor
lds
inc
sbb
dec
inc
mov
push
cmp
outsb
mov
mov
xchg
or
pop
test
addl
sub
pop
imul
clc
add
pop
std
xor
cmp
jecxz
sarb
ret
cld
dec
mov
out
daa
or
stos
pushl
clc
ds
movb
inc
cmpsb
ljmp
mov
cmc
scas
xorl
push
call
or
pop
add
inc
sub
in
stos
dec
fucomp
cmp
inc
pop
sub
cmc
out
and
sub
or
cmp
pusha
je
jnp
fsubrs
xor
add
clc
out
inc
rcrb
jge
scas
cmp
jle
push
push
aas
and
mov
jo
mov
inc
insb
je
pop
mov
popa
sub
pop
pop
in
pushf
in
jno
daa
push
dec
cmp
notb
aad
arpl
call
test
pop
fimull
adc
pop
popa
fcmove
mov
or
lods
rcll
mov
call
dec
fld
pop
jae
in
jnp
andb
fldt
jle
push
pusha
dec
pop
fadds
aas
xchg
inc
out
out
sub
xor
mov
rcl
xchg
inc
cli
loop
clc
imul
cld
test
mov
xchg
sbb
jg
mov
icebp
adc
xchg
inc
sti
push
jo
addr16
adc
cli
into
aaa
ret
pop
xchg
adc
imul
and
lods
cwtl
in
mov
cmp
outsb
and
aaa
test
loop
dec
ss
je
xchg
jae
mov
es
or
adc
sbb
push
movsl
out
mov
rcl
pop
sahf
jnp
push
and
aas
repnz
hlt
cmpsb
icebp
popa
inc
movl
push
or
movsb
jne
dec
into
rclb
jecxz
pop
hlt
js
repz
mov
and
adc
sarb
adc
push
and
sbb
dec
inc
in
push
and
sub
sub
pop
mov
arpl
test
or
mov
lret
pop
out
lods
popf
in
das
mov
mov
pop
xor
fisttpl
mov
sahf
mov
jecxz
addr16
push
pushl
arpl
mov
addr16
test
lea
xor
in
adcl
in
push
or
imul
and
mov
or
insb
lret
xor
dec
aad
mov
push
movsb
repnz
adc
adc
fcoms
xchg
repnz
sbb
or
out
pop
daa
push
fldt
push
cmp
gs
mov
loope
ja
fsubrp
dec
jp
jne
inc
mov
daa
sbb
push
xchg
lea
das
shll
adc
and
mov
dec
lods
mov
adc
outsl
sti
popa
pop
or
stc
jl
sarb
cmp
test
test
lcall
das
ss
pushf
push
mov
repnz
pop
les
imulb
push
inc
push
ficompl
pop
xlat
data16
daa
jb
aas
dec
imul
out
push
inc
and
aas
xor
daa
jns
xor
mov
push
test
test
popa
push
push
into
scas
add
mov
lds
push
test
mov
mov
sti
jmp
arpl
fsubr
pushf
mov
sbb
push
pop
xchg
and
scas
aad
xlat
pop
xchg
cmp
data16
jno
pushf
push
xchg
incb
dec
lds
movsl
mov
jbe
pop
call
jp
stos
add
loop
mov
pop
and
xor
jae
dec
jg
clc
adc
pushf
or
cmp
cmp
xchg
daa
std
pop
psraw
mov
add
jnp
lret
pop
adc
jecxz
fildll
adc
or
mov
add
inc
and
cmp
mov
fisubl
sub
ljmp
dec
aaa
mov
aaa
ljmp
inc
ss
inc
jmp
sahf
inc
frstor
sbb
mov
jbe
insl
in
nop
lods
inc
andb
push
push
mov
jnp
dec
lock
arpl
shrl
inc
cltd
dec
mov
out
lcall
push
dec
xor
dec
repz
idiv
cmc
dec
loope
outsl
popa
daa
scas
cld
fnstcw
mov
repnz
leave
mov
inc
test
popl
dec
sar
push
mov
add
xchg
inc
xor
das
je
das
jnp
imull
pop
das
jnp
xchg
dec
fcoml
push
lods
sbb
inc
dec
mov
inc
shlb
push
addr16
xor
xchg
inc
mov
stc
lcall
lcall
dec
add
mov
psubq
fs
divb
shr
cmp
jmp
xchg
pushf
mov
loope
mov
test
and
mul
sbb
scas
icebp
jp
mull
mov
imull
xchg
push
loop
subb
inc
jmp
jle
sbb
pusha
lahf
or
inc
arpl
mov
jb
xor
mov
pop
ds
mov
inc
stos
popa
stos
jl
sbb
insb
cmp
lods
outsb
loope
in
or
shlb
mov
arpl
or
mov
pop
pop
push
movsb
std
shrb
jecxz
or
adc
push
mov
int3
out
or
gs
xchg
sarb
jne
scas
movsb
xchg
ljmp
pop
xor
mov
add
jae
mov
inc
mov
ja
call
loopne
and
xchg
iret
aad
enter
mov
mov
adc
in
push
fsubp
xchg
fucomip
loope
cs
mov
scas
adc
sub
jnp
mov
cmp
cmpl
repz
fldcw
hlt
add
shl
inc
jb
dec
sahf
xchg
cmp
ret
ret
shr
inc
outsl
testl
andb
xor
insl
lret
dec
xor
mov
ret
iret
lock
push
cmp
or
ds
dec
fisttpll
push
popf
idiv
aas
leave
mov
inc
mov
stc
jbe
mov
in
sub
push
cmp
fildl
pushf
sbb
cmp
stc
or
sub
ret
add
lcall
loope
movsb
aam
out
mov
pusha
xlat
jo
iret
inc
sub
cmp
jecxz
add
push
add
jae
lds
adc
xor
push
xchg
fnstsw
cmp
xchg
les
cmp
mov
iret
sti
mov
notl
icebp
ficoms
jmp
push
fwait
pop
out
push
sub
cmp
arpl
loope
inc
sbb
inc
adc
pop
or
ds
cmpsb
stos
fucom
xchg
sub
int
push
and
scas
cld
stos
int3
imul
lds
mov
inc
clc
mov
loop
cld
addr16
mov
cmp
rcrl
xor
pop
sbbl
gs
mov
enter
and
mov
inc
lcall
aas
fnstcw
pop
int
or
adc
adc
aam
bnd
repnz
aaa
jge
cmp
lret
or
stos
aad
and
jb
sahf
sbb
leave
rolb
or
js
cmp
add
mov
or
adc
jno
in
push
lea
mov
cli
mov
faddl
xchg
push
mov
mov
jg
xor
xchg
mov
inc
outsl
bnd
mov
xor
jno
sbb
mov
pusha
sti
bnd
mov
rclb
adc
mov
dec
cmpsl
xchg
jnp
xor
pop
les
jnp
fiadds
in
jns
push
js
out
adc
inc
je
arpl
pop
jmp
mov
xchg
mov
xchg
adc
int
push
jo
push
rcrl
adc
sbb
sbb
pop
mov
out
hlt
imul
aas
pop
ror
sti
mov
add
ret
ds
cmp
out
cmp
repz
push
jg
popa
pop
call
addr16
shll
push
mov
addb
sub
sub
fsubr
test
sti
cwtl
xchg
scas
jae
dec
mov
daa
xor
adc
ret
negl
sbb
sbb
or
aad
or
push
movsb
sahf
adc
les
sbb
sbb
insb
pop
cld
insl
pop
sbb
lds
ds
std
lods
xchg
repz
cmp
mov
mov
sarl
push
neg
jle
aam
jg
push
cli
mov
mov
jnp
or
adc
inc
popa
ljmp
sbb
push
adc
inc
lahf
cmpsl
mov
pop
ret
das
pop
mov
js
icebp
les
nop
adcl
sub
pop
sub
sub
sbb
and
into
jmp
adc
out
jecxz
negl
xor
push
lods
pop
adc
xor
pop
cli
scas
mov
hlt
fwait
adc
frstor
jno
cmp
xor
dec
loope
data16
and
call
inc
or
clc
test
mov
sub
in
mov
dec
fnstenv
movsb
dec
pop
sub
lret
insb
or
es
jae
leave
jb
push
jne
mov
fs
adc
in
fmull
fcmove
scas
jge
xchg
aas
fsubrl
lret
outsl
xor
jnp
mov
mov
mov
les
cmp
dec
sub
cli
out
out
idiv
outsb
or
xchg
sub
cmp
or
loop
mov
cmp
mov
aaa
sub
sbb
out
in
imul
jbe
xchg
inc
enter
repz
negb
out
and
xor
mov
cmp
daa
popf
imul
pop
cltd
pop
mov
outsb
sbb
mov
pop
pop
mov
and
jge
scas
sbb
out
xor
jns
cmpsl
and
scas
pop
push
or
push
add
xchg
enter
xchg
fwait
jno
xor
push
or
inc
inc
repnz
insl
sbb
xor
js
ja
or
in
jl
popf
shll
sbb
inc
outsl
mov
lahf
pop
dec
or
int3
pushf
out
fcompl
xor
mov
mov
cmpsl
cltd
jne
pop
mov
fdiv
cld
nop
adc
shll
pusha
or
shl
loop
fsubrs
jb
insl
popa
pushf
pop
std
lcall
or
cmpsb
outsl
jno
lcall
lret
lahf
dec
in
lahf
aad
in
js
xchg
push
push
bound
out
adc
insb
dec
lods
js
xadd
mov
je
aaa
rorb
xor
xchg
or
loopne
cmpsb
and
and
cmpsb
and
inc
stos
inc
sbb
lret
lea
popa
ljmp
lret
fsubrs
xchg
cmp
xchg
lods
icebp
pusha
decl
bound
mov
clc
decb
arpl
pop
push
mov
adc
test
clc
cmp
dec
pushw
or
int
aas
cmp
cmp
push
inc
cmp
mov
subb
scas
or
inc
dec
jmp
inc
mov
stc
icebp
xor
push
mov
sub
and
push
mov
sbb
mov
mov
insb
xor
pop
pop
inc
or
adc
add
push
test
fldt
ljmp
loope
sub
add
test
loop
and
mov
xchg
rorl
add
inc
push
test
inc
inc
or
icebp
sbb
cmc
aaa
lods
ja
and
mov
mov
jle
mov
rcpps
idiv
mov
str
cmp
and
daa
stos
inc
pop
jno
jnp
mov
ljmp
mov
mov
cltd
out
iret
sbb
xlat
leavew
add
mov
xor
jne
jmp
cmp
iret
mov
cmpsl
fsubs
cli
outsl
aad
outsb
push
mov
lcall
fsubr
ret
add
gs
rclb
cmp
out
out
call
push
test
or
mov
xor
in
and
cmp
mov
xchg
test
mov
lods
mov
lret
inc
dec
inc
jmp
cld
std
mov
sbb
lods
stos
stc
mov
call
lods
in
xlat
inc
das
orl
aaa
mov
mull
pop
jns
ss
and
and
cli
cli
icebp
test
pop
sbb
insb
in
jmp
push
ret
mov
cmp
cmp
fs
iret
mov
clc
pop
fsubs
pop
and
mov
stos
xchg
pushf
daa
pop
inc
ret
outsl
hlt
loopne
pop
lret
cmp
push
mov
jle
xor
jmp
jbe
xor
pop
divl
jle
cmp
xchg
mov
mov
insl
sub
mov
sbb
imul
jae
pop
or
stos
jb
div
into
xchg
sarl
pop
push
es
push
push
enter
popa
push
jns
mov
mov
inc
mov
cmp
xor
jmp
xor
pop
sub
loope
xchg
mov
jbe
sbb
rcll
pop
cmp
imul
lahf
lret
and
das
xchg
lods
das
aas
into
jmp
jno
inc
lea
daa
ret
jne
movsl
xchg
adc
movsb
mov
adc
dec
mov
lds
fwait
xor
testb
pop
repz
lods
pop
cld
sahf
faddl
push
add
mov
mov
das
jno
mov
in
push
in
mov
sahf
add
addr16
xchg
int3
pop
dec
rcr
cmp
mov
js
and
into
dec
push
push
lahf
repnz
mov
xchg
dec
les
cltd
loop
mov
in
inc
das
sbb
and
cmpsl
and
test
dec
stos
add
aaa
sbb
add
lahf
jmp
cmpsl
inc
aam
xor
xor
xor
addb
adc
or
std
inc
or
push
xor
lock
pop
mov
gs
jns
mov
ret
repnz
ss
das
sahf
xchg
decb
pop
mov
push
loope
sub
aam
sub
sub
sub
lods
loopne
fsubl
leave
into
mov
je
xchg
in
test
bound
shlb
outsl
ret
jle
stos
dec
mov
cwtl
xchg
ja
das
enter
sub
rcrl
dec
cli
insb
lahf
lock
out
push
inc
aad
or
int
mov
in
fwait
add
and
and
jge
push
or
add
push
or
cmp
xchg
jnp
loope
fwait
rolb
xor
xlat
pop
xor
sbb
out
ja
fwait
sub
jp
adcl
lcall
jne
ja
cs
mov
dec
out
outsb
popf
stos
xor
test
jmp
dec
inc
popf
mov
stc
and
cltd
add
iret
daa
pop
pop
js
ret
aad
cmp
daa
lret
fadds
andl
sub
call
in
loop
mov
dec
xchg
addl
inc
dec
dec
jle
adc
jge
xor
ljmp
mov
aaa
inc
jbe
and
or
cmp
mov
pop
sbb
insb
out
popa
sbb
addl
imul
mov
adc
push
push
adc
shrb
cmpsl
xlat
and
insl
lods
or
mov
push
daa
in
mov
dec
adc
xchg
lcall
inc
shlb
cs
int3
outsb
pop
xchg
mov
movsl
pop
cmp
inc
imul
mov
jo
inc
ljmp
pop
jecxz
enter
adc
mov
popf
dec
and
divl
repz
aaa
lea
mov
inc
aam
fwait
or
movsl
ljmp
daa
mov
dec
jecxz
popa
in
shll
mov
dec
pop
arpl
or
stos
add
xor
mov
in
mov
sub
mov
cmpsb
shrl
mov
jbe
fstps
fmuls
mov
jne
ds
and
inc
je
xor
inc
push
inc
inc
into
aaa
loope
shl
cmpsb
and
jb
and
je
aas
rcrb
cmp
ja
in
cmpsb
adc
imulb
ljmp
push
cmpsl
lret
rcrl
sub
adc
loope
cwtl
mov
aam
iret
fsubrl
pusha
dec
push
jecxz
imul
xchg
pop
xchg
fmull
hlt
sub
push
mov
cmp
scas
mov
in
adc
add
mov
and
sbb
jle
and
mov
mov
mov
jne
repz
stos
ret
cltd
std
pop
jg
cmp
das
fstpl
sbb
mov
stos
ljmp
dec
fs
hlt
jle
and
stos
push
sbb
cmpl
jg
inc
shll
loope
jecxz
sahf
lods
jecxz
and
lods
xchg
lods
mov
push
pushf
xchg
jp
adc
loope
inc
scas
adc
stos
mov
negl
jp
std
hlt
push
lock
xlat
daa
mov
ror
pop
lcall
dec
mov
lahf
lcall
and
add
adc
arpl
inc
ja
inc
jb
xchg
loope
in
imul
xor
jno
out
or
or
mov
pushf
test
fnstsw
out
mov
or
sub
jg
jae
scas
xchg
or
fdivl
imul
sbb
mov
sbb
out
insb
xor
xchg
mov
mov
test
inc
or
dec
mov
addb
lea
fstpt
leave
jp
inc
xor
xor
fisubs
lret
xchg
ds
fistps
fwait
jnp
inc
mov
inc
cmp
and
add
xor
in
mov
sub
test
cmp
xor
xchg
popf
cmp
dec
and
jae
fidivs
jmp
xor
out
call
cmpsl
adc
and
aaa
xchg
fsubrs
cmp
in
andb
popa
scas
sahf
aad
xchg
sub
push
mov
sbb
fnstsw
or
and
je
mov
aas
sub
cmpsl
idivb
cmpb
pusha
fisubrl
pop
out
dec
fst
out
ljmp
mov
sbb
cwtl
ret
jecxz
in
mov
adc
bound
mov
and
lds
shrl
iret
adc
les
loop
shlb
lds
push
mov
divl
aad
pop
mov
jmp
in
xor
outsl
cmp
xor
adc
jns
enter
in
or
lods
test
cmc
lcall
jbe
inc
movsl
sbb
mov
sub
mov
pop
imul
stos
lret
and
jle
lea
shll
push
hlt
fnsave
adcb
test
mov
sub
jecxz
into
mov
xor
push
pushf
jo
dec
fs
lds
pop
int3
cmp
aam
fs
cmp
push
mov
mov
ret
xchg
dec
cwtl
ja
xchg
inc
mov
aam
rcrl
mov
dec
jb
sbb
fisubl
outsl
inc
adc
lods
ficoml
fldt
mov
mov
mov
test
and
loopne
push
add
dec
iret
lahf
mov
outsb
or
xchg
loop
aam
pusha
insb
aam
clc
sub
mov
loopne
and
or
push
sbb
bnd
sbb
xor
rolw
and
push
cmpsl
push
rcrb
mov
jle
jns
xchg
repnz
loope
imul
or
jl
out
pop
sarb
mov
add
je
fadds
xchg
fs
xchg
sbb
iret
je
stos
lds
outsb
iret
push
pop
addr16
sub
mov
lods
jne
inc
mov
mov
mov
pop
call
xchg
fcmove
push
roll
fisubl
mov
inc
dec
push
sbb
gs
sub
inc
xor
outsl
aaa
pusha
roll
adcl
mov
ret
add
pop
popf
enter
stc
push
aam
je
jge
jns
jg
dec
dec
mov
pop
cmp
push
adc
xchg
cmp
pop
dec
cmp
mov
or
std
arpl
or
adcb
jl
ficompl
jg
js
pop
adc
ficompl
push
lods
mov
out
jl
and
push
shll
lods
ret
inc
cmp
and
xor
xchg
mov
mov
pusha
out
cmp
cmp
mov
mov
sti
ret
stos
jb
test
iret
data16
mov
stc
xchg
or
in
jno
lods
pop
sbb
fs
lcall
fstpl
ljmp
ds
mov
jae
push
jns
sbb
xchg
mov
adc
popf
repz
ja
xor
cmp
cmpsb
aam
push
int
and
xchg
dec
cmc
xor
shl
dec
cmp
mov
jne
test
sub
call
aad
jge
lods
fsubp
mov
mov
mov
lcall
scas
pushf
bound
das
test
mov
dec
jecxz
push
mov
int3
cmp
stc
jnp
jmp
loop
dec
dec
enter
push
add
repnz
dec
mov
lock
mov
push
js
pop
mov
push
mov
leave
fdivrs
shl
push
sub
jmp
pop
pop
xor
xchg
sbb
dec
negl
fstps
in
shrl
shrl
sub
mov
pop
xor
lods
xor
xor
jnp
and
int
jg
in
mov
xchg
sub
sub
int
lret
imul
repnz
cmp
cltd
and
mov
mov
divl
rolb
mov
push
jae
insb
rcrl
mov
jge
fisubrs
push
sbb
mov
fwait
sub
jae
mov
push
mov
add
jnp
notb
xchg
mov
push
xchg
repnz
jns
fcoml
and
aam
fxch
loop
sahf
loopne
sub
js
push
pop
inc
xchg
jb
or
push
cmp
int3
xchg
mov
repnz
insb
in
les
je
jp,pn
lea
iret
adc
iret
sti
shlb
push
mov
dec
js
cli
je
pop
inc
dec
fidivrl
scas
xchg
add
rcrl
cltd
insl
mov
dec
arpl
cmp
pop
mov
mov
test
push
sbb
and
adc
push
mov
fiadds
das
cmp
adc
lret
xchg
push
lods
sahf
cmc
inc
lods
pop
xchg
xchg
in
lds
arpl
or
repnz
push
and
mov
pop
pop
and
or
adc
aas
gs
in
pop
andl
insl
cld
push
sbb
cmp
push
pop
push
lahf
daa
movsl
stos
sub
orl
push
fmul
jge
sub
xlat
and
int3
fs
stos
inc
jge
jb
jp
lret
sbb
cmp
pusha
mov
sub
sub
jg
mov
test
xor
adc
das
dec
sbb
dec
mov
dec
lcall
inc
shl
or
ljmp
jns
inc
push
xlat
rol
cld
inc
mov
cmc
js
push
idivl
lcall
iret
les
cmp
mov
add
sub
data16
cltd
add
nop
or
push
dec
xor
ss
adc
adc
pop
test
inc
cmp
pop
int3
pop
test
leave
mov
dec
sub
insb
scas
je
nop
es
inc
pop
scas
aad
jmp
adc
adc
stos
hlt
sub
test
jl
xor
insl
adc
sub
mov
repnz
xchg
in
cmp
lock
ficoms
in
mov
test
or
imul
push
lds
cwtl
fsubr
or
add
dec
pusha
xchg
out
in
inc
xor
push
aaa
mov
pop
add
pop
mov
fcomps
push
mov
pop
sub
and
xchg
push
push
sbb
lret
mov
movsb
aas
mov
jo
fdivs
sarb
test
insb
into
mov
xlat
lea
inc
movsb
in
fbld
out
push
mov
lock
pop
inc
cmp
jecxz
sti
adc
cli
mov
ds
fisubrl
xor
lahf
xor
daa
xor
mov
jmp
aad
inc
in
mov
pop
or
imull
cwtl
jns
jge
sbb
inc
xchg
rol
cltd
hlt
push
je
mov
lahf
lock
jmp
ficoms
or
mov
movsb
lds
stos
aam
fsubrl
dec
push
out
mov
dec
aaa
mov
mov
pop
sbb
jge
stos
dec
mov
add
cmp
mov
push
or
ljmp
inc
inc
sbb
fidivs
jno
out
test
lret
inc
dec
xor
std
outsl
pusha
and
adc
sti
cmp
lods
mov
decb
lock
mov
leave
or
dec
push
lahf
cltd
jmp
fsubr
sbb
aas
aas
xor
popa
ljmp
jmp
dec
and
pop
mov
sbb
addl
pop
pop
sub
test
andnps
fadds
lods
sub
stos
fbld
sbb
stos
and
testb
aas
jno
push
aad
mov
cmp
sub
mov
mov
xor
cmp
daa
test
cmp
pusha
das
dec
pusha
rcl
shlb
in
ret
nop
mov
std
push
out
jle
adc
xchg
sub
push
test
inc
hlt
pop
iret
sarb
xor
mov
or
test
pop
data16
dec
add
push
sub
and
jmp
xchg
pop
mov
xor
inc
fisttpl
cmp
fstps
popf
out
cmp
push
jne
loopne
cmpsb
test
mov
vmovlpd
test
or
js
adc
imul
jge,pn
jl
out
stos
mov
mov
js
pop
push
icebp
cmp
scas
out
cmp
adc
mov
insb
sar
xor
std
shr
fdivp
loope
pop
out
cmpsl
mov
pop
arpl
jle
in
push
mov
jne
sub
lcall
fmull
mov
popf
push
mov
jae
xchg
pop
aas
push
xchg
jl
or
or
sbb
mov
sbb
sub
mov
shrb
adc
sub
pop
iret
loop
shl
stos
stos
cmp
ds
push
xchg
or
pop
push
mov
cmp
add
adc
lea
jne
mov
in
inc
cmpsb
push
xchg
or
int
addl
fs
mov
mov
jecxz
stc
xor
push
jno
mov
add
xchg
jmp
test
fnstenv
shll
aaa
cmp
adc
insl
jmp
add
inc
mov
mov
cltd
repnz
cmp
jg
jb
or
xor
clc
mov
test
mov
sti
fcomi
in
stos
lods
jp
movsl
enter
fcomps
out
stos
call
push
std
call
jmp
mov
aas
mov
sbb
jne
sub
adc
push
xchg
mov
mov
daa
daa
jmp
sub
shrl
daa
add
cmp
pop
test
dec
xchg
test
pop
je
mov
imul
pop
push
ret
das
mov
and
inc
popa
push
stos
lret
or
pop
and
jecxz
jmp
xor
jno
mov
cmp
bound
inc
outsl
push
popf
cmpsl
pop
nop
pop
outsb
and
fs
pusha
out
aam
ja
fidivs
ja
shlb
mov
sub
leave
sahf
fst
push
jp
and
lcall
pop
inc
or
mov
xor
out
xor
les
stos
pusha
add
popa
and
mulb
lock
push
sbb
pop
out
push
js
xorb
push
fcmovu
adc
cs
dec
push
lret
mov
ss
fimuls
aas
cmp
rep
mov
jne
jge
aaa
imul
icebp
pop
rcrl
lahf
fildl
mov
dec
sbb
das
dec
test
and
and
test
pop
mov
sub
cmp
push
fnstenv
mov
sub
testl
push
andl
push
push
inc
loopne
sbb
push
outsb
push
ja
inc
push
arpl
mov
cmp
mov
mov
iret
in
fsubrl
adc
xchg
mov
sbb
pop
mov
mov
xchg
and
and
int3
cs
push
test
push
add
das
mov
jnp
popf
rolb
cltd
pop
gs
imul
dec
mov
lock
jne
xchg
push
sbbl
lds
mov
mov
inc
pushf
test
jns
loope
insb
iret
or
fadds
cs
dec
adc
and
jno
inc
pushl
push
add
xlat
mov
addr16
xlat
or
xor
sbb
out
test
fimull
push
adcl
jl
shll
pop
mov
push
or
imull
pushl
inc
mov
lds
push
mov
sub
xor
je
push
out
int3
dec
jle
js
cmc
repnz
jmp
xchg
out
les
lcall
shll
and
out
xor
sub
sub
push
call
je
sub
std
inc
shr
mov
cmp
dec
add
sub
sub
aad
sti
sub
mov
in
push
dec
pushf
jae
sub
push
test
cwtl
outsl
dec
faddl
fwait
shrb
jns
mov
xchg
add
add
shl
jge
jb
mov
cltd
jo
jne
in
cmp
popa
mov
dec
jp
inc
lahf
add
jne
and
movsb
mov
mov
js
inc
pop
lret
sub
hlt
sbb
sahf
and
jo
das
lahf
fistps
jecxz
ja
jg
repnz
sbb
aad
xchg
fwait
push
sti
push
lods
sub
xchg
negl
out
pushf
xchg
sub
popf
mov
xor
xchg
mov
inc
lret
imul
pop
mov
in
outsl
or
pop
dec
or
mov
pop
adc
inc
repz
test
sti
dec
hlt
je
in
sub
add
inc
xorb
sub
es
add
fnclex
jmp
push
jo
mov
and
mov
sti
nop
pop
jb
xchg
call
push
pusha
stc
mov
jle
mov
decl
lds
pextrw
xor
test
fstl
fwait
lahf
mov
arpl
insl
movl
cs
into
sbb
enter
out
and
mov
fs
fisubrs
mov
dec
jno
lfs
lds
loope
loopne
pop
and
subb
mov
mov
mov
jp
popa
in
pop
aas
mov
xchg
je
xor
pop
and
cmp
enter
cwtl
ficompl
jecxz
lods
mov
ficomps
lock
mov
test
pop
fcmove
lods
mov
jbe
aas
nop
mov
iret
sbb
cmp
dec
mov
mov
mov
lods
cmp
inc
pusha
outsb
pushf
testl
insl
test
outsl
jbe
push
xbegin
scas
cwtl
les
push
movsb
outsl
xor
ss
sub
mov
sub
cwtl
mov
fwait
mov
xchg
xchg
outsl
inc
push
adc
push
shll
add
push
xchg
dec
out
test
and
popf
pop
xlat
sbb
push
movsb
or
cmp
mov
loope
out
jmp
pop
adc
stos
xor
cmc
pop
fdivl
fcomi
repz
int3
stc
test
movsb
mov
imul
mov
imul
inc
mov
sub
jae
jae
shrb
mov
pop
dec
or
push
and
addr16
mov
outsb
stos
rorb
fwait
adc
push
xchg
push
push
sahf
notl
test
inc
or
mov
clc
sahf
imulb
dec
mov
fidivl
rcl
jg
xor
mov
movsl
pop
cld
imul
enter
incb
or
pop
cmp
lcall
stc
adc
outsb
out
lret
imul
pop
cwtl
pop
std
cmc
xor
ljmp
push
dec
inc
cli
mov
sbb
outsl
pop
test
and
pop
jnp
test
jecxz
jae
sub
fmuls
rol
pop
sub
mov
mov
out
jae
or
pop
fwait
out
frstor
mov
xchg
xchg
xor
sbb
push
sbb
jno
out
test
imul
sti
pop
fidivl
scas
repz
test
mov
sub
sti
sub
in
repnz
pop
xor
repz
dec
out
xchg
ljmp
xorb
mov
xchg
inc
dec
push
repnz
xor
cmpsl
shrb
test
sahf
push
mov
lds
sbb
jge
xchg
inc
mov
ficoml
pop
cmpb
fsubp
dec
test
sbb
idiv
xchg
test
repnz
das
or
jle
mov
bound
mov
imul
sti
or
fnstcw
shll
ret
aas
ret
or
mov
iret
in
ficoml
imulb
orb
mov
dec
dec
sarb
stc
outsl
mov
xor
out
ss
pop
outsl
sahf
in
in
xor
dec
sarl
inc
roll
sub
mov
scas
ret
mov
repz
nop
inc
andl
cld
lea
add
rcll
cmpl
rcr
mov
sbb
arpl
xor
je
rcr
inc
je
ret
call
lods
mov
xchg
jp
insl
fs
pop
pop
pop
pop
lret
cmp
jae
push
outsl
cltd
inc
add
sub
cmpsl
popa
push
and
add
addr16
cmp
icebp
inc
push
test
sub
xchg
aam
xorb
je
jmp
hlt
stc
hlt
fidivl
ss
stos
push
mov
xor
sub
jp
out
movsl
or
andl
ds
scas
mov
jecxz
out
je
mov
sti
sahf
es
mov
sub
outsl
mov
shll
rcll
xor
movsb
in
out
rorb
xchg
push
cmp
xchg
pop
jnp
jns
mov
adcl
sub
movsl
jo
and
mov
outsb
pop
ds
cmpl
in
movsb
jg
jmp
pushf
in
jl
mov
cmpl
jle
mov
jmp
push
jecxz
test
fldz
int
sbb
xchg
pop
dec
mov
xchg
sub
push
dec
testl
pop
insb
push
sbb
decb
xchg
pop
testl
insl
imul
mov
or
cmc
out
shll
loope
jno
ss
inc
loope
nop
sbb
in
or
das
or
cmp
xchg
mov
cmp
lcall
and
bound
movsb
dec
add
adc
add
mov
mov
jo
insl
lods
test
jg
dec
adc
sub
dec
add
sbb
fs
cmpsb
ss
inc
ss
inc
scas
xchg
or
mov
jmp
pop
imul
je
addb
fcomps
xchg
ljmp
iret
mov
pop
popf
daa
mov
loope
or
ficoml
jle
dec
outsl
add
addr16
fldt
inc
push
insb
in
fsubl
xor
xor
xchg
pop
add
dec
pop
fidivrl
aad
mov
mov
insb
inc
jp
stos
add
cmpsl
pop
out
cs
push
push
dec
adc
lret
sahf
jb
out
rcrl
mov
mov
cli
push
enter
mov
sub
jb
cwtl
inc
popa
xchg
pop
jp
out
pop
pop
hlt
jmp
sbb
in
lcall
data16
mov
popa
fimuls
outsl
xchg
inc
push
fabs
das
jnp
cwtl
xchg
sub
mov
loope
lahf
inc
out
iret
xchg
sub
out
mov
pop
aaa
ret
incb
sub
icebp
xchg
mov
cmp
add
pop
mov
pop
fisttpll
test
in
add
pop
scas
test
jp
test
dec
fidivs
jmp
lret
clc
fadds
aaa
mov
cmp
call
subl
push
mov
in
pop
add
out
repz
loopne
mov
ljmp
adc
mov
fldt
xchg
outsb
xchg
popa
out
test
aam
mov
dec
mov
je
jns
push
dec
cmp
cmpsb
mov
mov
cwtl
dec
add
cmp
fwait
incb
shlb
andb
mov
lock
inc
les
mov
cld
mov
jp
inc
cmpsl
mov
and
sahf
sub
fwait
lods
xor
adc
jmp
test
adc
or
imul
out
cmp
bswap
mov
js
pop
jge
cs
xorb
call
dec
xor
andl
sbb
add
test
inc
or
rorb
mov
jnp
xchg
sbb
and
push
fdivs
adc
leave
incb
subl
mov
inc
movsb
cmpsl
sbb
pop
mov
loope
pop
xchg
ja
cltd
movsl
sbb
sarl
test
cmp
cli
pop
pop
cmp
hlt
mov
mov
cmp
pop
sub
imulb
orl
sub
pop
inc
hlt
mov
inc
lds
xchg
aad
out
mov
xchg
add
insl
inc
mov
icebp
neg
and
cmp
cmp
idiv
mov
xor
jmp
mov
sarb
cmp
in
or
xor
cmpsl
andb
sbb
xor
add
adc
adc
aam
aad
xor
xor
leave
ljmp
shl
xor
adc
lea
gs
cmp
and
dec
jp
fs
into
mov
je
or
nop
in
xor
and
jns
call
xor
pop
call
and
sahf
mov
add
dec
lahf
sub
sbb
sbb
sub
daa
jo
cltd
outsl
jmp
sarb
sub
fwait
push
rcrb
mov
xchg
das
icebp
xchg
stos
pop
xor
outsl
mov
or
inc
in
jp
into
sub
je
or
test
jle
push
out
lret
inc
in
fdivrl
dec
pop
pop
mov
ss
icebp
or
push
add
cmpsl
lods
sub
add
fisttps
adc
xchg
dec
xor
repz
popl
jne
xor
push
fsubrl
jl
fisubs
str
dec
cli
adc
aad
jo
out
sbb
add
push
push
mov
push
cmp
sub
pop
jbe
fnstsw
and
dec
adc
sub
enter
scas
jge
sbb
and
movsb
inc
sbb
iret
jg
out
dec
mov
mov
shrb
mov
jl
jg
mov
and
push
cwtl
in
pop
into
daa
mov
sub
hlt
pop
fistpll
ds
adc
cmp
test
cmp
jmp
dec
cmp
jecxz
repnz
insb
mov
insb
mov
insl
push
lcall
jmp
arpl
sub
mov
outsl
outsb
incl
sub
aas
mov
mov
adc
and
push
lods
pop
fidivrs
xor
push
cmp
stos
dec
xchg
jae
shl
setae
aas
sub
mov
lds
xchg
repz
lahf
sub
push
and
into
sti
xor
int3
and
pushf
dec
pop
cmp
sub
xchg
scas
xor
mov
pop
jge
push
xchg
std
xchg
add
das
pop
aas
mov
adc
and
out
mov
dec
lea
mov
add
adc
pop
stc
pop
mov
pop
cmp
in
fwait
push
jae
js
xor
pop
nop
dec
lahf
pop
out
inc
push
clc
adc
mov
add
dec
decl
mov
xor
push
test
mov
lods
pop
mov
push
push
xor
dec
arpl
fcompl
push
dec
sub
inc
pushf
ja
push
icebp
push
xor
mov
in
pop
js
xchg
sbb
sahf
xlat
cmp
int
es
cmp
fistps
test
ds
add
lock
adc
jmp
inc
fsubrl
cmp
test
inc
or
inc
jg
movsl
jl
dec
int3
nop
cmp
inc
mul
or
and
or
rclb
cld
pop
inc
xchg
cld
mov
ds
mov
jns
or
adc
inc
out
pop
pop
sub
push
scas
xchg
shll
shr
stc
shlb
loope
add
mov
add
ss
scas
mov
push
push
dec
pusha
pushf
orb
cli
xor
pop
test
int
cmpxchg
clc
sbb
fldt
jg
adc
jp
cmc
mov
pop
adc
and
imul
or
es
aas
adc
adc
pop
data16
dec
test
xlat
xor
pushl
sub
lock
imul
mov
sub
data16
mov
pop
and
dec
add
or
or
lds
xor
mov
out
push
fs
shlb
mov
jle
dec
popf
stos
lcall
cmp
aas
iret
ja
leave
subb
or
lahf
adc
push
add
or
mov
dec
aas
sbb
cmpsl
or
test
jb
jp
sub
cwtl
clc
or
in
leave
mov
mov
mov
je
adc
jno
mov
mov
movsl
outsb
or
push
clc
jne
int3
inc
rcrb
insl
and
aam
int
rorb
lods
or
rorb
lret
push
sub
mov
xor
jnp
jge
shlb
push
xor
jmp
adc
mov
dec
xchg
mov
xlat
or
adc
dec
jecxz
add
mov
dec
adc
mov
fisttpl
inc
fstpt
iret
xchg
jae
inc
cltd
aas
ret
mov
mov
inc
repz
leave
xlat
adc
push
pop
and
jge
sarl
imulb
cmp
test
pop
rclb
and
mov
nop
arpl
xor
xchg
aam
test
nop
arpl
dec
jns
mov
mov
inc
pop
fldt
cltd
int3
jp
imul
lahf
or
call
scas
movsb
movsb
arpl
stos
sbb
mov
mov
mov
mov
dec
jecxz
aam
xchg
or
and
jbe
add
inc
push
cmpsl
js
jle
mov
jno
cwtl
and
sti
pop
call
xor
add
xor
jecxz
xchg
push
cmc
xchg
enter
call
cmp
sbb
push
lods
loop
repz
xchg
repz
mov
cmovb
mov
scas
xchg
cmpsl
cmp
pop
shll
into
in
movups
push
xchg
dec
call
cwtl
scas
insl
ja
lods
jbe
sarb
test
aas
mov
ret
call
pop
daa
repnz
xor
movsb
jge
fldl
cmp
cmpsl
mov
push
enter
emms
shrl
ja
push
bndldx
sarl
scas
xchg
push
or
incb
fucomi
sbb
dec
jp
cmp
lahf
jns
xor
addl
cmp
mov
inc
xor
xor
stos
inc
and
int3
pusha
imul
push
xlat
push
fistpl
outsb
cmpsb
push
or
pop
xor
xor
add
dec
sub
ret
mov
jmp
dec
sbb
dec
daa
xchg
inc
and
arpl
rcr
jle
lods
jmp
jl
add
jb
mov
jbe
adc
jb
adc
inc
sbb
ret
add
jo
jge
or
in
mov
xchg
into
sub
sahf
test
dec
out
xchg
lods
xor
dec
andl
leave
sahf
jb
sub
jae
jae
xor
xor
jle
jle
arpl
fidivrs
dec
jb
rcl
jnp
cmc
add
jne
jl
ds
xchg
fld
pop
fnstcw
fwait
sub
cmpsl
test
or
and
and
dec
fcoms
pop
lcall
jns
aam
cmp
addr16
mov
sahf
push
sbb
sbbl
cli
or
jmp
lds
in
sub
rol
inc
test
arpl
stos
out
mov
inc
add
xlat
fwait
adc
scas
hlt
fldenv
loopne
or
push
sub
sarb
inc
mov
add
pop
xchg
movsb
mov
fucomip
jecxz
out
popa
or
xor
outsb
int
clc
in
xor
xchg
aam
mov
xor
ss
and
dec
mov
push
mov
push
sbb
mov
jmp
mov
or
xchg
add
adc
das
mov
sbb
dec
xor
xchg
pop
call
sub
stc
sub
xchg
aad
mov
leave
into
insl
xchg
sub
imul
dec
inc
pop
in
jb
push
sub
pop
test
jle
adc
push
data16
mov
pusha
or
sbb
lods
cmp
jmp
mov
xchg
xor
and
jne
fstps
cmp
lock
jl
stos
sti
sbb
dec
loop
fadd
cmpsb
or
push
sbb
xchg
inc
in
aam
pop
or
adc
mov
inc
xchg
pusha
cmpsb
ljmp
repnz
out
and
ficoms
pop
div
dec
fnstcw
inc
cmp
mov
roll
js
lds
push
sahf
rorb
std
data16
mov
dec
adc
mov
push
lock
ja
mov
rorl
int3
lea
in
cld
push
jae
jmp
xchg
mov
push
loope
cmp
pop
fcoms
leave
adc
fadds
push
sub
dec
mov
clc
lods
mov
hlt
xor
test
rcrl
and
sub
cli
dec
xor
test
jb
adc
jo
dec
inc
lret
cmp
dec
stos
ljmp
sub
lock
iret
or
je
lea
mov
mov
dec
fwait
arpl
in
xchg
shrl
fadd
dec
ds
pusha
clc
mov
push
cld
addl
cmp
cltd
xor
mov
aas
orb
pop
pop
out
sub
add
data16
shrb
in
andl
je
mov
adc
loopne
addl
mov
cs
adc
adc
repz
xor
adc
repz
dec
cli
ret
in
push
cltd
push
shll
imul
jne
out
mov
cltd
mov
sbb
dec
xchg
jns
jecxz
repnz
int3
js
cmp
jl
outsb
pop
mov
jns
movsl
repz
push
rcrb
sahf
adc
pop
cmp
or
in
and
cmp
xor
daa
fwait
jno
cwtl
ljmp
sti
or
inc
cli
adc
mov
jge
jmp
pop
add
mov
dec
xchg
cli
data16
mov
dec
sti
pop
inc
push
and
ret
dec
or
mov
dec
insl
push
fmuls
sahf
jg,pt
pop
dec
mov
cltd
pop
pop
lods
fnsave
mov
fidivrl
pop
sbb
mov
sbb
and
jp
push
sti
jbe
push
pop
dec
jle
outsb
pop
inc
push
xchg
mov
xor
jae
pop
jg
aam
es
push
repnz
mov
push
xchg
pop
fsubs
lods
cmp
pop
loope
xor
pop
jne
add
push
jmp
or
sbb
imul
sti
sub
es
incl
jnp
insb
push
sbb
cmp
dec
xor
aad
xchg
add
shrb
sub
inc
mov
and
clc
int3
push
shlb
jno
stos
pop
js
icebp
loope
fistpl
mov
sbb
test
mov
push
inc
dec
lcall
jae
push
xchg
lock
jmp
xchg
daa
dec
fidivrl
xchg
mov
in
sub
repnz
fcmovnb
call
dec
sbb
aad
xchg
ret
int
hlt
cwtl
xorl
sub
pop
sub
ja
mov
lds
movl
fisttpll
inc
cs
pop
sbb
xchg
dec
mov
aas
ss
lods
pop
outsl
xchg
xchg
into
dec
stos
inc
add
ret
jmp
and
and
pop
jl
xchg
lret
sub
sub
mov
sub
int
lock
xor
and
xchg
mov
test
dec
cli
jbe
sub
rcll
daa
scas
lret
jbe
std
or
sub
mov
push
loop
mov
mov
mov
clc
fwait
push
jp
adc
jecxz
out
scas
pop
dec
add
xorl
xchg
loopne
mov
push
inc
sbb
dec
sti
scas
mov
in
jne
inc
mov
sbb
ret
bound
push
jg
loope
movsb
mov
popf
sbbb
and
xor
outsl
xchg
dec
xchg
adc
addl
xchg
enter
mov
or
lcall
cmpl
aas
xchg
xchg
dec
inc
cli
scas
fimuls
pusha
add
adc
xchg
or
out
mov
push
orl
cmp
lret
jmp
sbbl
add
cmpsl
nop
mov
push
imull
stos
call
in
adc
pop
iret
or
mov
fs
inc
fwait
mov
push
ss
add
mov
jno
xchg
mov
roll
fstp
and
pusha
leave
lds
jae
cmc
mov
push
jnp
int3
mov
arpl
sub
lds
xchg
add
sub
scas
das
aad
jne
push
pop
fxch
imul
lock
fdivrl
imul
movsl
dec
dec
rcll
es
bound
and
cmp
enter
jecxz
ret
xchg
pop
leave
lret
ljmp
xor
icebp
or
mov
dec
push
pop
dec
add
pop
int3
or
lock
fisttpll
dec
or
sbb
mov
xor
jl
imul
dec
shlb
popa
or
push
stos
jnp
cmc
and
loope
push
int
mov
imul
fistpl
icebp
mov
or
adc
cs
mov
inc
call
mov
push
xchg
fldt
push
lcall
les
popl
aaa
and
sahf
fucomi
rep
loop
sbb
lods
call
data16
push
into
and
sti
add
lea
and
inc
jmp
xchg
or
pop
loopne
jae
jge
das
das
test
aas
mov
jmp
push
popa
cli
mov
push
or
jne
call
mov
iret
out
adc
aas
not
pop
repz
call
addr16
push
add
cmp
push
test
and
add
cmc
xchg
xchg
dec
sti
cmp
test
xchg
int3
jbe
nop
fs
push
xchg
jg
pusha
inc
fwait
clc
cmc
out
push
mov
int
hlt
cltd
pop
dec
ficomps
or
loope
inc
hlt
les
shll
sub
mov
insb
dec
clc
cmp
loop
outsl
xchg
aam
adc
inc
test
scas
shlb
aaa
adc
mov
jmp
pop
cmp
xchg
dec
test
sbb
xchg
push
mov
cld
adc
inc
pushf
inc
xor
outsb
sahf
hlt
mov
cs
stc
and
repz
cltd
xchg
and
mov
mov
inc
lcall
inc
push
outsb
popf
bound
cmp
mov
addb
repz
push
hlt
incl
out
or
mov
call
lods
push
mov
cmpsb
jns
fidivrs
roll
cmpsl
stos
adc
out
ret
push
fisttps
pop
aam
addl
dec
lret
inc
stos
lods
int3
push
cmp
push
sbb
sub
idiv
or
in
fld
fisubrl
les
fldt
call
and
dec
xor
gs
imul
add
mov
or
aam
cmp
mov
cmpsb
ljmp
daa
inc
mov
hlt
xor
and
mov
adc
jno
addl
in
adc
cmp
fsubr
dec
aas
xor
ja
cld
insl
and
mov
rsm
popa
lcall
push
push
push
loope
mov
dec
and
notl
scas
dec
lret
int3
xlat
loopne
dec
dec
les
ja
pop
xchg
xchg
adc
pop
test
lret
jne,pt
xchg
sub
mov
inc
or
mov
icebp
push
jns
cltd
mov
out
andb
xchg
mov
adc
mov
pusha
lods
mov
cld
out
fsubrp
notl
inc
push
ds
sahf
push
xchg
xchg
mov
push
hlt
gs
leave
mov
adc
sub
lds
xchg
in
scas
fsts
mov
cwtl
popa
outsl
fistpl
data16
jnp
sbb
pop
jl
pushf
sub
dec
sbb
js
dec
dec
out
test
jge
pop
movsl
out
sbb
add
outsl
dec
lcall
push
sti
test
mov
sbb
mov
or
mov
popf
xchg
inc
pop
lahf
push
mov
push
jg
mov
jbe
and
int3
mov
inc
movsl
aas
xor
mov
stc
popf
cltd
scas
mov
pop
stos
lods
rcll
or
pop
mov
sub
or
cmp
pop
mov
mov
jle
adc
sub
mov
repz
mov
mov
xor
nop
popf
pop
sahf
test
jge
push
mov
mov
pop
ficomps
cmp
and
call
in
jns
imul
or
dec
inc
outsl
push
pop
loopne
cmpsb
adc
sub
xchg
mov
and
lods
mov
lds
iret
leave
pusha
data16
mov
push
xor
fiadds
rclb
out
jno
mov
pop
sub
test
or
push
js
or
ret
jae
xor
daa
lcall
popf
and
in
in
icebp
xchg
push
adc
icebp
aaa
imul
insl
adc
xchg
mov
ret
push
push
lods
es
jnp
jmp
add
xchg
fmul
and
cmpsb
test
std
movsl
arpl
inc
dec
scas
cltd
rcl
push
mov
jle
xor
int3
jp
dec
sbb
fs
inc
jecxz
in
adc
inc
mov
pop
push
jo
dec
scas
and
lock
mov
fadd
cmpsl
dec
xchg
mov
and
outsb
xor
imul
add
jl
xchg
xor
pusha
leave
adc
jmp
subl
rclb
je
xor
xor
lret
in
call
test
dec
imulb
fdiv
mov
mov
sahf
clc
test
cmpb
jp
jmp
hlt
outsb
movsb
ret
inc
dec
push
lcall
lock
cmp
imul
in
pushf
fimuls
dec
cs
lds
aam
jns
or
stos
insl
xchg
xor
outsb
shrl
popf
imul
cmp
scas
xor
aad
cli
mov
xchg
xor
mov
cmpsl
negb
mov
push
dec
popf
mov
mov
inc
fldenv
aaa
out
fs
push
loop
dec
es
orl
outsl
lret
iret
add
xor
pop
xchg
cmp
mov
call
fs
mov
dec
jl
cld
rcll
push
loope
add
enter
cs
push
in
and
sub
mov
call
clc
pop
jbe
in
xchg
ret
repnz
jo
sahf
stc
call
cmpsl
xor
inc
vpxor
push
popa
jle
stos
test
hlt
mov
int3
jae
in
addl
pop
push
cmp
pop
cmpsb
lret
clc
jecxz
dec
jg
add
xchg
into
inc
pop
xchg
stos
loopne
and
sbb
push
inc
out
or
xor
push
pushl
jmp
fisubl
jmp
sub
in
sub
int
or
xchg
fidivs
and
mov
shrl
mov
xchg
cli
aaa
addr16
out
decl
pop
xchg
outsb
push
jmp
sub
inc
and
cs
test
sub
inc
mov
mov
push
shrb
cli
dec
mov
or
or
in
push
and
pop
mov
inc
push
testl
jg
bound
cltd
mov
das
add
inc
mov
hlt
sarb
lds
push
stc
shll
movsl
pusha
loope
adc
daa
in
test
inc
inc
inc
rcr
addl
cltd
rolb
or
leave
fstl
imul
call
js
sub
xchg
mov
xchg
adc
sbb
aam
or
or
lcall
iret
mov
push
push
jo
imul
add
das
lods
mov
jno
mov
out
push
test
fldenv
xchg
mov
orl
insb
popw
cli
getsec
pop
ja
mov
jge
insl
xchg
add
lahf
push
or
sub
in
jbe
addb
xchg
xchg
imul
and
push
lret
imul
in
jl
int
test
fimuls
out
jnp
ljmp
inc
popf
sbb
push
sarb
inc
cmp
shlb
leave
dec
add
add
ljmp
psrlw
cmp
sub
xorb
lock
jge
inc
xor
jecxz
pop
push
insl
jecxz
pop
movb
mov
test
inc
loopne
outsb
dec
or
loope
sbb
cmp
add
ds
out
or
outsb
jl
jns
cli
movaps
ret
outsb
mov
pusha
call
es
incb
hlt
pop
mov
adc
scas
leave
xchg
adc
ds
out
adc
shrl
jae
xchg
sbb
mov
ljmp
fwait
les
loope
inc
mov
inc
aas
sbb
mov
aaa
out
jne
pop
adc
test
iret
add
and
fldt
or
lds
aad
mov
jno
bound
and
mov
aad
push
das
cld
enter
jge
xchg
rol
out
movsb
add
mov
js
pop
xor
popf
xchg
xor
jg
dec
jbe
add
daa
test
test
lock
imul
cltd
scas
or
outsb
jge
pop
jge
popa
lret
arpl
repnz
sub
pop
cmpsb
cli
lods
mov
sub
popf
mov
fcmovnbe
bound
adc
mov
fnsave
cwtl
cmp
std
mov
sahf
cmc
aad
sbb
lcall
imulb
or
dec
popf
inc
adc
or
cmp
out
loop
out
aam
push
cmp
mov
sub
bound
cmpsb
fdivs
nop
or
lea
xchg
mov
rorb
lods
sub
cmp
mov
loope
xchg
mov
dec
jl
cltd
inc
add
mov
xlat
shlb
je
push
mov
jnp
ds
xor
mov
mov
push
jl
add
xchg
call
push
movsl
xorb
xchg
fnstenv
mov
inc
sub
lods
inc
cltd
adc
subb
inc
adc
fidivrl
mov
mov
pop
push
jno
aad
fdivp
data16
push
mov
xor
icebp
popf
lret
xor
jne
jle
dec
cmpsb
loopne
mov
cs
jmp
add
icebp
ret
and
arpl
in
mov
rcrb
cmp
popa
es
push
mov
cmp
out
jl
fiaddl
das
lea
cmp
int3
fwait
xor
mov
inc
adc
jo
pop
mov
loopne
push
push
leave
ss
adc
dec
sarb
ss
pop
cmp
jecxz
pop
clc
aam
inc
ret
pop
dec
cld
out
faddl
sub
mov
popf
jno
fwait
in
imul
xor
xchg
fs
mov
cmovnp
mov
xchg
jp
addl
jp
fnstenv
imul
sbb
dec
cmpsl
push
clc
mov
fistps
sbb
push
ss
push
xor
leave
pop
nop
sub
jecxz
pop
outsl
lcall
adc
sbb
xor
cmp
mov
sbb
xchg
adc
fs
arpl
ja
jbe
loopne
les
push
jl
jp
out
outsb
out
rol
mov
popf
fsubr
xor
mov
cmp
fisttpll
jns
adc
addl
sti
iret
cmpsb
paddq
and
imul
repnz
sahf
jl
jne
iret
ja
mov
xor
into
aas
rorl
sub
pop
sbb
or
dec
vxorps
sbb
cld
xchg
cmp
inc
mov
ret
sahf
test
jge
movsb
xchg
int3
cld
xchg
cmpsb
out
xlat
lods
andl
mov
jbe
sbb
popf
sbb
jge
cmpsb
push
loop
or
aad
jbe
out
dec
negb
adcl
ja
out
out
rorb
jge
imul
jno
push
adc
xlat
stc
jecxz
mov
jae
insl
adc
pop
mov
jno
int
sbb
dec
push
iret
mov
dec
insl
idivb
add
xor
out
cmpsb
sarl
xchg
dec
cmp
outsb
arpl
mov
fdivl
cld
fldl
lahf
call
cmpsl
pop
push
out
adc
pop
xor
ljmp
out
and
jb
cltd
jae
dec
nop
es
fcompl
mov
andl
test
dec
lods
incb
xor
fsubl
xchg
mov
ret
and
ja
loopne
cmp
xor
jp
mov
ror
icebp
loop
jecxz
and
sti
dec
adc
push
bound
fistpll
mov
fbld
outsl
push
scas
cli
es
jle
push
sbb
andl
icebp
sub
inc
sbb
hlt
cmp
lret
mov
imul
sbb
adc
add
mov
out
imul
popf
xchg
mov
jo
push
outsl
imul
push
cld
pop
in
and
pop
mov
add
sub
add
pop
push
in
aad
pop
inc
repnz
pop
add
xchg
dec
in
cltd
push
dec
movsl
push
mov
aaa
pop
jbe
andb
nop
ss
ja
cmp
or
jns
push
cli
add
pop
pop
or
out
pop
nop
ja
jnp
mov
cmpb
xor
adc
mov
jecxz
mov
out
fucomip
pop
jno
and
pop
lret
mov
sbb
loope
push
sti
into
into
jns
int3
jmp
xchg
add
or
and
inc
sbb
out
out
out
add
jne
test
push
inc
push
out
rolb
mov
ret
cmp
shlb
pusha
mov
arpl
loope
push
or
iret
mov
loope
pop
addr16
xchg
cld
bound
mov
scas
stc
jns
aas
dec
mov
nop
pop
std
test
jge
iret
shl
lret
mov
hlt
scas
inc
dec
fisubs
out
push
addr16
arpl
sub
xchg
in
aam
inc
ss
sbb
mov
aam
shll
aam
jg
pop
sbb
jo
sbbl
and
xor
dec
iret
nop
sbb
pop
pushf
inc
or
xchg
cmc
xchg
xchg
dec
xchg
lods
test
adc
xlat
lcall
stos
cli
and
mov
inc
xor
push
cmpsl
mov
xchg
ja
add
loope
pop
pop
jp
sbb
icebp
outsl
or
and
test
sub
pop
push
cmp
imul
push
or
loope
inc
adc
add
clc
mov
jo
and
in
repz
push
pop
ja
or
leave
push
xchg
inc
mov
xchg
daa
les
add
in
cs
bound
push
jae
into
frstor
cmp
lock
push
and
pop
xchg
insb
adc
lahf
insb
push
cmp
push
ljmp
test
adc
fs
stos
int3
jge
cmp
loopne
sub
cmc
adc
outsb
dec
xchg
sub
je
add
push
fistps
xchg
sti
xor
das
and
out
mov
je
fs
aad
jbe
outsb
sbb
xchg
fnstsw
fsubl
push
cmpsb
and
mov
jne
mov
aam
dec
mov
and
das
cmpl
rcll
ss
insb
pop
pop
cmp
sahf
xor
fadd
fcompl
or
jns
mov
push
mov
pushf
rcrl
push
insl
mov
add
mov
push
dec
inc
jns
xchg
cmp
adc
cmp
sbb
fucom
sub
mov
adc
sahf
shlb
aas
pop
sbb
mov
lea
mov
inc
xchg
mov
dec
rcr
xlat
icebp
lock
daa
jnp
shlb
or
dec
mov
in
scas
pop
or
test
inc
inc
lock
inc
and
iret
repnz
sub
lahf
xchg
or
mov
jp
pop
add
push
add
and
aad
xor
xor
jne
fwait
hlt
mov
xchg
mov
lods
push
xchg
push
mov
sub
push
xchg
sbb
lret
fdivp
stos
es
mov
js
sti
sahf
fldcw
mov
mov
gs
sbb
xchg
lock
push
test
add
jb
sti
addl
loope
fmulp
cwtl
fs
pop
pop
xor
mov
jne
addr16
mov
pop
rcrb
movsb
pop
dec
and
adcl
aam
hlt
movsl
out
mov
lods
test
out
aaa
add
add
repz
nop
inc
into
insb
loop
dec
aam
lcall
sbb
dec
sbb
mov
out
xchg
out
popf
or
cmp
mov
mov
sbb
call
adc
es
iret
nop
outsb
je
cmpsl
xor
jnp
lret
inc
mov
mov
jp
stc
jge
clc
ret
ret
xchg
std
cs
sti
ljmp
push
mov
mov
add
shlb
test
stos
pop
sbb
lea
or
and
sti
loope
dec
cmpl
int
sub
test
cmp
push
cltd
push
scas
push
in
xchg
pop
cltd
dec
pop
mov
mov
inc
aas
lds
inc
xchg
cmp
dec
lret
mov
pop
int
add
sahf
outsb
dec
ret
sub
sti
frstor
aaa
out
xchg
mov
sbb
ficomps
push
mov
pop
out
xor
sti
xchg
xchg
jno
lods
lds
push
aam
lods
in
cmpsb
push
jne
pusha
jecxz
cmpsl
pop
mov
pop
cmc
jl
push
inc
adc
hlt
sub
add
jo
pop
pushf
shrl
bound
mov
and
gs
imul
into
ja
fidivrl
push
lret
ss
xchg
adc
stos
ds
fcoms
pop
testb
sbb
popa
ret
cmp
mov
test
jnp
cmpsl
std
mov
mov
sbb
andl
repnz
lret
jns
adc
fmuls
jnp
inc
je,pn
sbb
sub
adc
inc
hlt
lret
lret
xchg
fadds
sub
push
pop
stos
push
adc
dec
cltd
pop
mov
dec
jb
mov
into
mov
pusha
mov
rcr
loopne
fstl
insb
cmp
stc
sub
push
sub
std
add
cmp
fcoms
cld
scas
add
jo
mov
fwait
pop
fcoms
ljmp
sub
outsl
xchg
mov
scas
out
jmp
or
rcrl
jns
std
insl
out
ret
add
or
sbb
imul
ds
push
ret
ds
scas
jae
lock
andl
ret
loopne
addr16
pslld
push
xor
adc
or
rcll
insb
push
insl
fwait
lea
lea
repz
ror
mov
mov
or
enter
dec
xchg
mov
scas
mov
jmp
mov
ss
adc
fisttpl
shl
aam
pop
or
ja
or
data16
imul
push
testb
imul
sub
dec
filds
xor
or
jecxz
or
icebp
loop
int
adcb
int
ja
push
push
sbb
xchg
push
cmp
stos
dec
cmc
or
sbb
cmp
and
mov
std
clc
add
push
cmp
jb
jp
loopne
into
lcall
push
ret
add
push
out
cmpsl
push
jl
das
mov
pop
fistpll
enter
mov
dec
lock
xor
sbb
push
mov
dec
test
cmp
out
mov
cmpb
hlt
loope
sub
or
xchg
pop
les
sub
loopne
push
xchg
jne
xchg
cltd
es
mov
cmp
adcl
push
or
in
js
push
and
paddb
dec
adc
in
and
fdiv
lret
cwtl
pop
or
jae
lds
cmp
pop
and
xchg
fmuls
das
lahf
dec
cmp
fwait
pavgw
or
adc
sbb
xchg
inc
mov
inc
mov
xor
dec
mov
jmp
or
xchg
mov
popf
stos
jmp
xchg
push
stc
cmp
cmpsl
andb
xor
inc
sarb
cmp
adc
inc
fstps
sub
sub
rorl
xor
xor
mov
jge
adc
dec
fwait
test
push
pushl
in
imul
jne
fidivl
jae
sti
or
cmp
jp
rolb
fimull
xchg
lret
mov
add
call
ljmp
cmc
repz
mov
push
leave
les
les
sub
or
push
test
xor
inc
mov
std
xor
cmp
or
and
pop
bound
sub
out
lret
jmp
inc
lea
pop
aam
pop
in
dec
out
and
inc
pop
insb
and
jno
xchg
inc
lock
test
cmpsb
and
ret
push
aad
inc
in
iret
or
loop
pop
add
in
mov
and
xchg
mov
repz
pop
adc
push
mov
xor
sub
mov
ret
pusha
push
jno
stos
cwtl
mov
pop
xchg
xor
jl
mov
aaa
mov
mov
imul
pop
cmp
inc
fisttpll
dec
jo
push
negl
xor
mov
push
ds
cmc
fldl
lock
push
ret
cli
dec
rorb
xor
push
sbbb
jae
or
fxch
or
inc
push
mov
push
aam
out
xchg
adc
ljmp
jl
push
add
cmp
jae
cmpsb
cmp
in
push
lds
scas
test
roll
repnz
fs
push
pop
or
clc
jl
in
test
rcrb
ss
sub
insb
push
push
sbb
and
lea
mov
dec
mov
out
andb
lock
fcoms
insb
jo
lret
sub
sbb
or
jle
aam
aad
call
jg
repz
sub
roll
jmp
mov
or
lds
call
push
or
pop
mov
icebp
pusha
push
and
clc
out
sub
push
es
jns
xor
and
cmpsl
imul
mov
and
push
cmp
aad
aaa
fcomps
mov
cmc
add
sub
xorl
cmp
data16
sbb
jge
mov
add
lock
fmuls
and
mov
pop
xchg
push
mov
jle
inc
insb
mov
movsl
leave
adc
iret
pop
lret
ficomps
adc
dec
popa
sub
testl
mov
mov
outsb
jle
mov
dec
test
in
or
pop
dec
mov
stos
loop
pushf
mulb
add
dec
sbb
mov
jecxz
test
rolb
mov
jge
flds
xchg
and
ret
lret
and
mov
or
stos
inc
adc
rclb
jp
out
fldcw
mov
or
push
ret
jecxz
sahf
sub
out
or
clc
adc
mov
adc
pushf
scas
mov
leave
xchg
inc
hlt
addl
es
aad
movsl
test
lods
pop
mov
mov
test
loopne
jl
jecxz
pop
pop
cs
sbb
fistpl
mov
jp
xor
mov
daa
fidivrs
jle
jmp
mov
shlb
aaa
cmp
jno
out
mov
je
sti
call
push
sub
fwait
and
in
in
or
pop
adc
insl
jae
inc
mov
add
es
add
cmc
daa
aad
out
inc
xchg
test
js
sti
pop
ret
in
ss
in
cmp
rolb
popf
das
sub
cmp
cmc
xor
dec
test
mov
lods
cmp
sbb
cmpsb
lret
push
jo
push
push
mov
je
shl
lods
sub
dec
stc
pop
ja
je
das
inc
shll
add
add
out
jns
aam
jo
mov
ds
jecxz
or
lahf
adc
jne
mov
mov
jp
cltd
xchg
dec
pop
pop
shr
lcall
rorb
and
mov
lret
pop
inc
addr16
jo
push
mov
push
das
rorl
outsb
outsb
es
mov
add
dec
add
enter
scas
scas
iret
mov
cmpsl
pusha
xor
stc
sub
in
jnp
out
mov
in
out
lods
stos
jmp
hlt
xor
inc
jecxz
test
sbb
imul
mov
mov
repnz
out
jae
jmp
das
xchg
mov
in
mov
sbb
inc
rorb
out
popf
mov
fwait
inc
lahf
xor
push
sti
mov
dec
cmc
lahf
inc
jmp
out
shl
sub
inc
ja
arpl
push
xor
adc
outsb
mov
fdivrs
mov
dec
add
adc
inc
xchg
aad
jmp
js
adc
shlb
jo
push
fcmovbe
out
ss
jae
xchg
adc
add
mov
call
push
xor
sahf
jns
jp
lods
sahf
xchg
jg
ret
xorb
xchg
test
pop
sbb
add
rep
mov
dec
mov
add
les
fisttps
xchg
pop
sub
in
sti
dec
mov
movsl
out
and
inc
sub
xchg
int3
mov
or
cmp
outsb
cwtl
repnz
out
xchg
incb
es
jmp
stc
inc
mov
cmp
pop
cwtl
int
jae
mov
jns
loope
jmp
add
lods
lds
lret
out
fcomps
push
imul
mov
and
jns
stc
imul
lea
outsb
push
pop
adc
dec
mov
or
mov
xlat
mov
lock
fidivrl
out
pop
mov
jns
add
adc
sti
movsb
ret
adc
pop
outsl
sub
ficomps
sbb
aaa
inc
arpl
arpl
jae
imul
je
in
subl
popf
cwtl
cmovne
jbe
addl
fisttpl
pop
into
cmpsb
js
sbb
cltd
ljmp
std
and
fcom
fcomp
add
push
popf
dec
jp
pop
dec
sbb
sub
cmp
outsl
sbb
fildll
xor
sub
scas
push
insb
fdivl
fsubrs
pushf
jle
pop
roll
notl
xchg
push
pop
popf
xchg
add
mov
movsl
adc
adc
mov
xor
xor
adc
pop
mov
mov
lcall
jbe
arpl
int3
shll
cld
adc
mov
push
mov
sarb
sahf
in
and
pop
pusha
lret
sbb
std
lcall
sti
mov
push
paddq
aad
push
imul
popa
xchg
jbe
jecxz
sbb
push
xchg
and
sub
rol
sub
pop
push
aad
sub
push
idivl
push
mov
leave
mov
aam
pop
mov
xlat
lcall
sbb
pop
dec
lcall
imul
xchg
hlt
cmp
rcrb
jg
ficompl
or
out
pop
mov
add
sbb
iret
jmp
xchg
cmpsl
jae
dec
push
lds
xorl
fsubrs
add
jne
into
pop
fidivrs
int3
or
pop
mov
mov
scas
sbb
mov
jb
dec
sbb
lea
sarl
ljmp
sahf
and
xor
xchg
movsb
mov
test
push
outsl
jecxz
hlt
jmp
bound
add
insb
push
cmc
adc
lods
inc
icebp
dec
sub
fstpt
xor
shlb
jge
repz
je
or
aas
jp
into
in
nop
sbb
xchg
sbb
rcll
ljmp
orl
inc
sbb
rcrb
data16
push
adc
lods
lods
push
cld
sub
xchg
xor
mov
jbe
jbe
jmp
adc
mov
in
fs
jmp
in
inc
mov
add
or
cmpsl
jge
xchg
and
lds
cmpsb
je
xor
fisubrs
pop
mov
jb
dec
and
negb
or
aaa
and
lahf
jae
cmp
mov
hlt
xchg
cmp
xor
sub
orb
mov
fisubl
mov
cmp
dec
outsb
in
xlat
lods
push
lret
push
inc
dec
push
sub
sub
icebp
lds
inc
xchg
pop
into
test
add
mov
jae
int
sarl
inc
lret
and
aad
cmp
imul
push
or
push
leave
std
popa
xchg
push
pop
or
push
xor
cltd
xor
mov
cmp
mov
mov
movsb
cmp
cmpsb
inc
ret
mov
mov
in
ljmp
sbb
xchg
sarl
fstl
gs
je
movsl
notl
mov
add
lea
orl
sbb
clc
sub
fsts
les
or
in
nop
int
sub
sub
data16
xor
bound
clc
push
pop
or
or
movsl
pop
cmpsb
pop
sbb
adc
iret
aad
scas
and
movsl
push
mov
jp
mov
mulb
das
mov
lds
jge
lahf
inc
or
outsb
jbe
int3
jmp
push
cmpsl
or
push
lcall
add
mov
pop
and
and
out
hlt
mov
test
outsl
ds
int3
ja
sbb
lds
clc
fnstsw
lret
jmp
js
loope
add
dec
fcom
aaa
push
sbb
push
or
ret
add
and
jo
jp
and
mov
pop
sbb
aad
push
jle
hlt
ds
xor
dec
adc
sahf
cmc
popf
add
adc
pop
add
je
mov
or
les
mov
imulb
sbb
fadds
adc
movsl
insb
imul
or
mov
into
mov
js
lods
pop
and
xchg
cmp
mov
cmpsl
arpl
inc
dec
stos
testb
addr16
dec
dec
addb
das
or
push
mov
test
in
mov
or
or
sub
and
mov
sarl
daa
and
dec
cmpl
cmp
fnsave
cmp
push
dec
sbb
popa
push
jns
cwtl
jbe
cmpsl
in
add
nop
cli
int
mov
ljmp
fs
shll
sbb
or
test
push
loope
nop
jae
pushf
dec
inc
xchg
mov
sub
push
mov
out
jbe
xchg
dec
push
cmpl
sbb
add
pop
adc
icebp
daa
iret
and
test
mov
xchg
add
lods
push
mov
lret
leave
dec
sub
ss
mov
mov
sti
pop
sub
lahf
ret
jmp
sub
sub
adc
pop
xlat
js
xor
sbb
pop
imul
mov
stc
xchg
bound
je
push
bound
mov
xorb
lcall
xchg
pop
insb
adc
jp
out
iret
jnp
jle
aam
lahf
jmp
movsb
dec
in
push
sub
popa
ret
daa
xor
repnz
and
int3
cmp
fimuls
or
xchg
outsl
into
aas
out
or
mov
and
adc
stos
rolb
lds
or
mov
sub
sahf
cmc
sbb
xor
pop
aas
push
push
mov
test
jne
sub
lods
add
sbb
dec
dec
aas
push
aas
jns
jo
xor
add
pop
jmp
pop
insl
popa
push
jno
test
rcl
push
xchg
adc
add
stos
orb
rorl
adc
mov
dec
sub
and
sub
lock
mov
and
xor
int
stos
cmc
lahf
in
push
cmp
xor
sarb
pop
lret
es
aad
add
decl
mov
sbb
jo
dec
jp
rcll
nop
insl
sub
je
jl
push
cmp
iret
pop
out
arpl
orb
jp
scas
jno
and
dec
gs
mov
idivl
daa
insl
mov
mov
sarl
loope
pop
inc
inc
repz
sub
jecxz
and
jp
inc
jg
mov
pop
inc
sub
xor
arpl
push
sbbb
fstl
data16
adc
cs
cmpsl
jae
cmc
int3
out
loopne
adc
push
jmp
pop
push
fimull
fnstcw
inc
int3
push
cmp
sarl
and
or
repnz
inc
xchg
fnstenv
addr16
sub
add
adc
adc
cmp
loopne
aas
sub
push
or
and
xor
insl
or
in
rcll
and
mov
jl
pop
sub
push
rcrb
dec
jp
adcl
mov
jp
lods
push
mov
mov
repz
stc
xchg
int
in
les
jo
inc
adc
cld
lds
jge
int3
or
rolb
or
xchg
mov
xor
sbb
ja
inc
sbb
inc
movsl
add
jge
andb
aad
test
in
xchg
add
pop
scas
in
push
adc
fwait
std
cltd
cmp
adc
push
push
cmp
fisubrl
js
imul
xchg
xor
mov
xchg
fstpl
dec
rclb
or
in
pushf
jb
mull
mov
jns
divl
lods
cli
xlat
das
jl
cmc
cmp
pop
hlt
rcrb
sarb
xchg
mov
dec
dec
ficoms
dec
inc
cmp
out
sahf
outsl
lret
sbb
sub
jae
lret
stos
or
repnz
jl
adc
cmp
scas
mov
jae
inc
loop
dec
dec
xchg
cmpsb
mov
cmp
jno
pop
lods
lods
xor
adc
adc
push
test
inc
fwait
mov
jnp
ljmp
js
int3
loopne
mov
repz
rep
jg
pop
sbb
mov
aaa
sahf
inc
stos
int3
fsubp
in
pop
push
jae
pop
enter
or
fs
lods
test
in
adc
sbb
dec
sub
xor
sbb
fnstcw
mov
mov
fs
mov
sub
mov
pop
pop
pop
xor
lret
ret
arpl
jp
aam
fadd
xchg
jnp
imul
pop
mov
call
inc
movsb
call
cmpsb
loopne
in
ret
aam
bts
adc
and
fdivrl
mov
jns
iret
push
nop
inc
pop
cltd
mov
imul
or
fbstp
mov
movl
sub
dec
cli
or
daa
mov
or
negl
fisubrl
les
inc
sbb
adc
cmp
xchg
test
rclb
mov
sbb
ja
dec
cmp
jg
and
or
push
jge
in
lret
pop
mov
sbb
popf
xor
ss
pop
rcrl
cmp
adc
sub
int3
inc
sbb
mov
in
mov
xor
mov
std
shll
cmp
cmp
shl
lret
dec
mov
cmp
ficompl
add
adc
jae
cwtl
fidivs
std
add
mov
mov
sti
rclb
pop
mov
leave
fisttpll
ret
cld
xor
push
cmc
pop
jl
das
xchg
pop
fiadds
js
fcoml
mov
xlat
repz
push
cltd
push
and
mov
sbb
dec
mov
test
inc
dec
lock
movsb
sub
inc
sbb
lahf
mov
mov
arpl
sti
cmp
dec
out
call
lret
jmp
or
aam
xchg
sub
packssdw
add
out
sub
sub
push
dec
cmp
cli
aas
add
dec
ficompl
insl
xor
mov
sub
ds
test
mov
mov
sub
dec
sub
mov
es
aas
jns
mov
mov
iret
pmaxub
fdivrs
loope
fsts
dec
stc
imul
in
sub
jno
sbb
out
test
cmp
pop
pop
les
sbb
inc
inc
mov
loope
add
roll
fcomps
jns
int
or
mov
out
gs
popf
xor
addr16
xor
xchg
test
fsubrp
inc
cmp
in
mov
outsb
iret
stos
outsw
jae
dec
inc
add
pop
pop
loopne
lock
pop
popa
rclb
sti
add
loope
sbb
jg
cld
out
mov
xchg
sub
imul
sbb
xchg
aam
fstpt
add
sub
and
adc
push
stc
sar
ljmp
pop
imul
sbb
iret
jbe
je
mov
mov
sub
dec
pop
pusha
xor
sub
xchg
sbb
test
scas
jo
mov
jmp
test
pop
xchg
cmp
lods
pop
or
mov
pop
or
xorl
test
push
hlt
inc
ja
fbstp
inc
std
into
jmp
pop
scas
test
pushf
mov
push
push
jl
pusha
jp
pop
mov
mov
addb
add
sbb
jmp
rol
xor
and
push
imul
ja
or
cmp
sbb
inc
or
jae
std
xchg
adc
mov
nop
shll
ja
lock
in
in
mov
sahf
push
inc
in
mov
xchg
xchg
inc
push
jmp
xchg
push
and
dec
and
add
cltd
leave
cmc
xchg
cmpsb
dec
mov
push
jo
sbb
insl
mov
push
sub
movsl
in
mov
ret
cmp
cmp
mov
sbb
and
mov
jge
jne
jae
dec
ret
and
test
sub
into
ret
dec
arpl
cmp
pop
scas
sub
mov
jb
jnp
mov
xchg
xor
and
cmp
inc
notb
insb
mov
mov
xor
in
ja
mov
or
into
addr16
dec
xchg
gs
cltd
inc
pushf
add
leave
int
dec
mov
mov
pop
mov
mov
adc
and
xor
lock
inc
xchg
jns
lods
xlat
cmp
lcall
popa
mov
push
clc
sub
dec
fstpl
in
jae
sbb
sbb
loopne
lods
mov
cmp
punpckhwd
fbstp
pop
scas
ret
jmp
insb
cmpsb
ffreep
inc
pop
push
popf
int
pushf
cltd
inc
movsl
jp
sbb
cmp
sub
imul
aad
xchg
icebp
push
in
sbb
lock
loopne
mov
xor
mov
xor
cmpsb
jbe
popf
push
mov
mov
insb
jne
inc
je
inc
mov
je
inc
lret
in
xor
insb
inc
mov
in
out
fisubl
sub
cltd
fstpt
cmpsb
ret
add
sub
xchg
ror
cmc
mov
push
xor
xlat
mov
loopne
or
pop
cmp
add
mov
xchg
mov
or
shlw
shrb
xchg
mov
or
adc
gs
cmp
pop
ficomps
rcrb
push
or
arpl
push
ret
pop
adc
daa
push
mov
pop
ja
dec
rorl
fwait
mov
or
adc
dec
fwait
add
mov
flds
sbb
mov
inc
jecxz
cwtl
mov
inc
inc
inc
sub
stc
xchg
inc
leave
dec
mov
push
jge
jle
mov
xchg
movsl
scas
int3
cmpl
mov
xor
sbb
inc
or
push
push
cmp
sub
add
sbb
sub
es
sub
fisubl
dec
push
lcall
mov
jns
and
xchg
call
mov
xlat
negl
mov
ljmp
jb
mov
std
test
dec
add
push
repnz
mov
pop
xor
int
repnz
mov
or
adc
mov
nop
andb
pop
fists
dec
dec
aam
jno
dec
mov
cmp
inc
cld
lods
sub
fstps
iret
ret
fsubrl
nop
and
or
sub
aam
jb
fbstp
push
push
cmp
pop
fildl
push
scas
push
xchg
lret
insb
cltd
int3
cmp
cmp
arpl
push
jmp
sbb
stos
repnz
pop
fsts
enter
add
sub
pop
repnz
and
inc
pop
jae
mov
pop
mov
jne
mov
shrl
mov
mov
jnp
jp
adc
xor
inc
clc
push
mov
ds
rol
sbb
adc
mov
inc
push
push
push
mov
mov
testb
jne
daa
mull
push
divl
aas
ja
xor
ss
rolb
jmp
lods
mov
add
pop
push
pop
cli
leave
cmp
addr16
fistpl
fbld
ljmp
cmpsl
dec
rcrl
pop
sbb
lcall
popl
scas
popf
jp
sti
jnp
dec
mov
sbbl
push
cmc
xor
pop
popf
cld
xchg
sub
pop
pop
ja
add
pop
out
dec
cmp
mov
inc
dec
and
or
aaa
aad
xor
stos
pop
test
out
out
xchg
xor
sarl
lods
lock
test
lds
loop
sbb
xor
mov
decb
and
lahf
int
and
cmpsb
and
cmp
mov
clc
subl
sub
xor
popf
xor
sub
data16
jg
aas
fsubrs
stc
jl
xor
cmc
in
dec
orb
mov
push
cs
xchg
cs
pushl
jo
fcmovbe
cmp
jl
jnp
jnp
test
dec
pop
arpl
sub
dec
aam
jno
shl
insl
jle
addl
jl
and
lds
xor
mov
test
shll
xchg
sub
repnz
adc
sbb
sbb
js
std
lcall
dec
inc
xchg
out
jbe
add
cmp
lods
mov
imul
es
xchg
lcall
cmp
lods
push
repz
add
xchg
test
test
arpl
inc
in
dec
popa
pop
adc
nop
cmc
push
cld
maxps
add
rolb
jnp
xor
bound
iret
push
pop
pcmpgtw
hlt
mov
les
sbb
push
pop
into
negl
jo
lods
inc
aas
shrb
mov
mov
lret
ret
pop
scas
jmp
jecxz
cld
subl
sub
loopne
jge
cmp
jl
stc
leave
adc
ffree
add
sarl
cld
orl
sbb
jmp
mov
jg
mov
test
int3
dec
cld
add
out
xchg
nop
push
mov
sbb
jnp
mov
xchg
ja
int
and
inc
dec
lea
lds
stc
pop
adcl
out
pop
mov
dec
and
cltd
sbb
mov
cmp
outsl
adc
jmp
insb
mov
add
lret
insl
sbb
mov
cmp
and
mov
add
push
imul
push
lcall
imul
jl
mov
cmp
mov
lret
mov
xchg
jle
push
es
jmp
jns
aad
mov
shll
lret
or
mov
xor
sti
fmul
mov
mov
in
inc
lds
aam
pop
jnp
inc
mov
aaa
cwtl
adc
xor
inc
movsl
adc
repz
mov
mov
xchg
push
pop
in
adc
xchg
dec
push
arpl
gs
push
stos
imul
fsubrl
or
mov
jne
gs
aas
mov
mov
fwait
jle
in
add
lahf
icebp
sbb
clc
add
scas
sti
or
idivb
xchg
stos
scas
dec
scas
push
cmp
or
into
mov
scas
cmpsl
pop
es
shr
lea
dec
stos
out
mov
xor
scas
mov
sub
push
jne
ret
loop
or
pop
xchg
jb
out
jae
aad
out
sbb
test
leave
dec
in
adc
fldl
or
scas
sbb
add
jle
scas
mov
into
test
test
imul
loope
push
lods
add
jne
adc
scas
lods
push
add
push
cmp
fsubl
push
pop
dec
pop
sub
int3
lock
outsb
pop
out
ja
pop
jle
dec
mov
sbb
fisubs
cli
and
cltd
cmc
pop
mov
enter
dec
insl
mull
repz
mov
addr16
add
jnp
dec
cmp
arpl
push
test
repnz
jle
mov
inc
jbe
pop
inc
cmp
mov
daa
adc
in
mov
out
and
jl
fwait
mov
imul
adc
pop
lea
sub
inc
inc
jge
inc
cmp
cmpsb
repz
insb
push
fldl2e
int
push
mov
sbb
jb
es
pop
pop
fisubs
xorb
xchg
push
jl
xor
mov
dec
shll
push
mov
mov
adc
nop
iret
fbld
xor
xchg
pop
pop
mov
mov
clc
outsl
inc
add
xchg
subb
lods
mov
imul
and
inc
rolb
adcb
icebp
lret
cltd
in
in
push
or
out
jbe
pop
sub
imul
inc
popa
adc
and
ret
js
sbb
arpl
xchg
insb
sub
gs
leave
icebp
or
insl
out
iret
repnz
pop
sbb
xchg
rolb
sub
sub
out
outsl
insl
fs
fwait
or
adc
mov
inc
sub
sti
leave
cmp
add
adc
das
xchg
aas
loope
xchg
jg
and
in
jp
adc
mov
dec
push
mov
call
adcl
dec
ljmp
pop
mov
dec
sbb
push
out
sbb
adc
icebp
xor
push
add
stos
into
lods
jge
mov
imul
ffreep
test
rolb
push
mov
test
mov
gs
mov
ret
xchg
cmpsl
mov
lahf
cmpsb
les
inc
mov
and
mov
push
sarl
fildll
mov
mov
jne
push
mov
push
xchg
jmp
ss
jge
cwtl
es
in
push
cwtl
movsl
in
jecxz
dec
or
imul
dec
xor
or
mov
rol
ret
sub
inc
sbb
cltd
jle
arpl
pop
out
xlat
pop
or
dec
dec
loope
popf
ljmp
cmp
add
out
ret
mov
imul
repz
adc
lahf
ds
call
jecxz
fucom
inc
mov
enter
out
outsl
mov
jb
cli
or
pop
leave
push
pop
cmp
add
push
lock
cltd
std
jae
dec
push
adc
cmpsl
mov
jg
add
dec
cld
inc
cmpsl
fsubrs
sti
push
add
in
dec
je
xor
ret
test
xlat
cmp
stos
mov
and
clc
lret
push
subb
mov
test
dec
in
insl
push
movb
or
test
and
cmp
push
jg
insl
add
adc
nop
ljmp
xchg
lahf
cmc
push
sbb
pop
dec
or
xchg
adc
aas
test
cs
subb
pop
pop
jae
xor
hlt
mov
pop
test
dec
das
jns
and
push
ret
lahf
out
mov
or
loop
xor
rorl
inc
fisubrs
or
cmpsl
fidivrs
sti
mov
je
outsb
push
xchg
pop
jp
aam
mov
imull
lret
push
aas
adc
sub
xor
mov
movsb
cmp
movsb
xor
dec
movsb
cmp
pop
pop
adc
dec
repz
test
stc
les
out
ljmp
mov
fstpt
mov
arpl
push
mov
jbe
push
mov
mov
in
xorl
mov
cmp
stc
xor
and
mov
add
cwtl
pop
sbb
stos
inc
mov
push
mov
inc
sbb
mov
or
mov
mov
repnz
pop
insl
lcall
sbb
fiaddl
adc
jmp
cmp
push
ja
xor
push
push
mov
and
negl
shl
rcr
mov
sub
ja
push
inc
in
mulb
enter
cld
mov
int
roll
fisubrs
ds
push
pop
xchg
aam
cli
ret
inc
lods
inc
xlat
push
andb
aaa
xor
movsl
fwait
cmpsb
iret
push
jnp
out
cmp
jp
dec
cmp
mov
push
stc
pop
insb
adc
mov
repnz
push
sqrtps
loopne
adc
ret
cmc
xorb
cmp
cmp
fstps
inc
stos
popf
push
dec
leave
sbb
mov
jae
sarl
pusha
in
fcomi
pushf
dec
clc
xchg
mov
pop
fstpt
or
pusha
mov
inc
imul
in
repnz
mov
mov
and
es
into
mov
icebp
aam
test
xchg
add
mov
in
jnp
jno
inc
ljmp
popf
push
push
aam
popa
pop
mov
ficomps
js
or
cmp
dec
sub
sarl
jg
add
fimuls
dec
cmp
cmpb
xchg
cmp
adc
fnstenv
pop
sub
les
std
cmpsl
pop
idivb
push
sbb
bound
xchg
int3
cmp
and
cmp
mov
jns
lret
sbb
clc
or
stos
loopne
jl
sub
test
pop
test
pop
inc
jmp
adc
mov
pop
mov
popa
mov
mov
sbb
xchg
xlat
nop
sti
mov
jecxz
inc
jno
inc
inc
shll
sahf
cmp
fldenv
imul
movsl
movsl
mov
mov
xchg
inc
mov
mov
xor
cmp
int
inc
gs
inc
arpl
ret
es
jl
adc
xchg
dec
and
adc
xchg
bound
inc
jp
ret
sbb
pop
lret
imul
leave
ror
pop
jne
cs
out
into
and
xlat
out
add
lods
aad
adc
add
fcoms
push
rcrl
neg
push
mov
in
fisubs
cmp
sub
inc
popf
outsb
sbb
mov
stos
and
hlt
outsb
int3
fs
xchg
gs
pop
xchg
aaa
repnz
cmp
test
arpl
ret
adc
mov
cwtl
divl
jg
push
mov
mov
mov
mov
push
imul
mov
test
insb
shll
sbb
lock
lods
aas
pop
dec
inc
jmp
cmp
xorb
lods
xor
cmp
insb
ret
ror
inc
lds
test
rclb
fistpl
stos
pushf
je
push
pushf
add
cmp
mov
daa
mov
and
rclb
out
jno
xor
ds
scas
insb
mov
notb
lret
leave
in
jle
jno
xchg
mov
test
inc
arpl
repnz
cmp
ss
loope
cmp
mov
add
push
or
mov
jmp
push
inc
imul
jno
ljmp
pop
in
xchg
aaa
sub
cli
lahf
push
dec
pmulhuw
lcall
mov
push
sbb
rol
loop
xchg
nop
jg
and
leave
std
cmpsl
or
loopne
lods
fnstcw
adc
mov
das
sahf
mov
and
ss
cs
xchg
or
icebp
sbb
cwtl
repz
or
add
mov
lret
fs
lret
push
js
cmp
mov
pop
roll
inc
mov
jp
mov
mov
mov
adc
pop
stos
inc
rorb
arpl
cld
or
nop
iret
cmpsb
and
outsl
inc
nop
cmp
movb
sbbb
ja
fstp
sub
shrb
test
or
or
and
sti
mov
mov
sub
cmpsb
and
fwait
push
adc
stos
in
xchg
shl
mov
mov
movsl
sbb
cmc
pop
mov
push
cmp
xor
in
push
jle
dec
subb
and
orl
stos
fstpt
das
cwtl
mov
mov
es
cmp
xlat
test
and
movsl
adc
fwait
cmp
fwait
movsl
sub
jl
cmp
je
mov
movsl
sub
shrl
cwtl
lock
mov
dec
cmp
mov
aad
push
clc
add
cltd
mov
stc
dec
mov
psubsb
pop
mov
or
out
pop
sbbb
xchg
shufps
scas
adc
fidivl
jns
stc
ret
pop
outsb
mov
xchg
repz
daa
mov
lret
inc
je
imul
cmp
je
xor
pop
popf
cmp
sbb
push
out
dec
inc
inc
xlat
dec
sub
repz
sub
sub
in
lahf
dec
ret
lret
pusha
jp
sarb
push
sahf
lret
inc
add
repnz
xchg
cmp
cs
sahf
ret
jb
test
lret
lods
fld
pop
push
or
in
lret
inc
or
mov
and
sub
fistl
pop
subb
xchg
cli
jecxz,pt
sub
fcomip
sub
xorb
and
mov
call
mov
in
addl
bswap
subb
imul
ljmp
fwait
push
cs
sub
aad
leave
pushf
adc
aas
call
test
clc
and
adc
adc
cmc
dec
shrl
insl
in
aad
or
dec
sub
lock
mov
out
ja
test
movl
outsl
ret
jl
test
scas
arpl
lock
pop
popa
push
adc
sahf
cltd
ss
cmp
sbb
outsl
mov
rclb
dec
push
push
in
and
jb
jecxz
dec
pop
nop
rcrl
aas
scas
push
adc
fidivl
test
jno
sub
test
xor
jge
lahf
xor
aad
sbb
ret
je
fwait
xlat
jl
lods
int3
in
loopne
sub
sti
test
popa
movsl
subl
xor
inc
push
mov
adc
stc
pop
shrl
xorps
adc
dec
js
xchg
or
mov
fs
inc
and
in
dec
rolb
int
leave
add
adc
and
jne
mov
cmp
ja
pop
cmpb
sub
xor
or
hlt
pop
or
pop
insl
fidivl
test
xchg
lahf
jns
jl
addr16
dec
sbb
shrl
hlt
cmp
jle
or
pop
lds
jecxz
mov
pop
push
ss
or
push
stc
sbb
add
cmpsl
sti
sub
divb
pop
shr
movsb
int3
xor
mov
jae
in
jno
push
jge
mov
ret
mov
ret
ds
lock
mov
imul
insl
xchg
in
cmp
lods
ds
and
orl
or
push
mov
test
mov
lods
inc
xchg
push
imull
fs
cmp
insb
mov
test
lds
aaa
daa
mov
sbb
pop
out
lcall
cs
dec
cmp
push
push
scas
js
mov
dec
xor
xadd
fsubrs
or
icebp
jo
movb
in
adc
mov
push
loop
call
push
fwait
je
popa
mov
imul
mov
push
add
and
inc
mov
xchg
dec
fcoml
adc
fdivrs
movsb
inc
popa
mov
shrl
push
test
rolb
cmc
jo
iret
mov
movsb
fwait
pusha
cmp
fucomip
fisubrs
pop
jmp
ds
push
cmp
xchg
sti
movsl
je
mov
cmp
and
lcall
outsl
or
mov
iret
andb
popa
sti
or
xor
dec
jne
xor
add
ja
pop
lods
xchg
xchg
mov
rolb
pop
jbe
dec
pop
loopne
idivb
pop
aaa
pop
aad
out
or
dec
sbb
leave
mov
lock
pop
test
test
ret
rcrl
mov
push
mov
mov
test
add
imul
les
test
sbb
imulb
es
fistps
fbstp
pop
adc
xchg
jae
jne
mov
pop
push
add
xor
lahf
push
clc
mov
loopne
icebp
test
les
outsl
icebp
cli
cmp
fs
adc
loope
or
sbb
mov
or
or
pusha
les
cmpsb
push
pminub
pop
adc
xchg
mov
jmp
es
test
inc
cli
lock
fidivrs
adc
icebp
xchg
mov
xlat
insb
cmp
push
data16
sub
sub
add
mov
jge
mov
mov
ljmp
cmp
push
push
jmp
loopne
pop
fs
cmp
stc
cmp
aaa
xor
inc
sti
jne
bound
xchg
andb
lods
sub
inc
andl
test
jo
xor
mov
push
es
aad
jle
mov
shll
xchg
adc
mov
pop
mov
lcall
rorb
test
int
out
jns
shll
sub
jae
dec
fistl
sub
xor
aad
out
jae
jno
inc
lahf
rorl
sub
scas
jp
gs
sbb
aad
out
xor
lahf
fists
stos
sarl
mov
push
adc
arpl
dec
incb
mov
cmp
pop
mov
call
pop
cmp
in
in
pushl
sbb
xor
cld
mov
lock
and
in
shll
mov
push
cmp
pop
inc
add
mov
pop
aas
xchg
test
int
dec
xchg
or
sub
dec
mov
icebp
insl
js
scas
xchg
dec
stos
ret
inc
repnz
outsb
push
pop
shlb
into
push
mov
movsl
dec
jbe
adcl
subl
je
jle
shll
popf
push
push
icebp
and
movsb
jl
lods
push
stc
inc
mov
out
in
pop
pop
test
icebp
enter
ja
jne
sbb
mov
cmc
dec
ljmp
idiv
cli
inc
mov
outsl
dec
xor
push
inc
icebp
sub
sar
dec
and
in
inc
mov
dec
or
xor
mov
inc
int
jns
jno
dec
cmpsl
mov
sub
pop
and
inc
pop
add
dec
aad
pop
out
enter
push
push
ret
rolb
loope
std
add
pop
push
or
jb
dec
ffree
bound
and
ss
test
jae
pop
dec
fcmovu
test
dec
cmpsl
jnp
jns
cld
dec
adc
or
out
cmpsl
jl
jbe
jnp
sbb
dec
xchg
sub
pop
arpl
mov
in
mov
scas
roll
jle
aaa
or
in
mov
outsl
rolb
adcl
incl
push
add
fldl
mov
incb
adc
cmp
outsb
mov
les
dec
pop
data16
mov
lds
xchg
fsubrl
mov
les
data16
push
xchg
push
rcll
adc
gs
inc
out
add
xor
sti
lock
lock
sbb
rorl
mov
jle
insl
push
stos
mov
icebp
sti
lds
sub
mov
sub
sub
dec
mov
add
shrb
shll
in
repnz
cmp
pop
pop
xchg
subl
dec
pop
sbb
lret
adc
orl
insl
inc
dec
pop
outsb
cmp
xchg
icebp
pop
cmp
mov
jge
daa
cmpb
dec
xlat
lret
aaa
pop
int3
mov
lods
imul
out
push
xor
push
or
sub
clc
jno
scas
je
pop
dec
test
js
lea
pop
pop
fcomps
sub
jecxz
sub
add
add
dec
leave
out
hlt
jge
js
fcomi
std
cmp
outsb
jl
cmp
xlat
push
jns
mov
les
lods
add
ja
push
stos
inc
add
loope
sub
push
cwtl
inc
push
fistpll
or
cmpsl
pop
push
jnp
add
fmuls
aam
in
fisttps
lcall
cmp
test
popf
adc
mov
ljmp
cwtl
into
int3
cmp
rclb
imul
shrb
mov
lcall
or
dec
aad
frstor
sbb
mov
je
lea
cli
enter
or
xchg
push
sub
lock
filds
dec
mov
mov
lds
in
mov
mov
cltd
push
pop
cs
xor
push
icebp
or
int
aas
mov
pop
pop
aaa
pop
inc
or
popa
stos
mov
rorl
mov
mov
loopne
fisubl
push
dec
dec
and
pop
jg
test
lret
js
jae
inc
mov
int
pushf
mov
sbb
inc
mov
jbe
inc
in
shlb
jne
pop
or
loope
inc
lahf
xor
jp
xor
inc
loope
cltd
mov
aam
and
push
and
sbb
data16
cmpsb
call
scas
cmp
outsl
lret
inc
lods
sbb
push
ss
jge
addl
js
jg
xor
std
ljmp
sti
sbb
jmp
sbb
inc
mov
dec
add
sub
rcrb
jmp
cmp
popa
pop
sar
popf
jmp
imul
xor
fisubrl
cmc
imul
addr16
and
dec
cmp
loop
or
or
lods
fs
jbe
cmc
mov
push
cmc
out
mov
mov
loope
das
mov
imul
enter
cld
jno
and
or
pushf
add
or
lods
test
cli
lods
add
xor
in
or
jl
mov
test
loopne
nop
das
out
pop
dec
mov
cmc
out
jle
pop
lods
test
jbe
push
mov
xchg
xchg
mov
vandnps
imul
rorl
sbb
add
out
jb
or
mov
and
scas
dec
out
lock
adc
inc
mov
cmc
xchg
cmp
rcll
and
outsl
adc
pop
daa
nop
mov
push
jmp
push
mov
bound
mov
nop
pop
fistl
out
or
mov
orb
jns
filds
xchg
scas
push
mov
jae
into
movsl
push
sti
imul
in
mov
addr16
mov
xchg
in
inc
mov
mov
fistpll
enter
and
jnp
scas
lock
or
inc
mov
out
mov
addr16
rorb
fisttpl
or
mov
incb
aam
psrad
popa
cli
or
jecxz
pushf
lea
test
push
xchg
xchg
inc
cmpsl
mov
add
call
popf
sub
or
fcmovu
and
js
adc
insl
stos
gs
popf
hlt
pop
clc
jo
lea
mov
sarb
loopne
or
pop
xchg
adc
insl
roll
imul
or
cmpsb
mov
jno
add
ret
mov
cli
xchg
dec
mov
mov
add
popf
movsb
fs
sbb
add
cmp
sub
jp
test
outsl
xlat
pop
jmp
hlt
adc
cmpsl
stos
std
scas
into
mov
jecxz
aaa
ffreep
cmp
mov
pop
push
sub
push
fcmove
cmc
xchg
lods
mov
xchg
lahf
push
pop
jb
inc
sahf
jnp
inc
nop
inc
repz
rorl
daa
lcall
shll
xor
jo
add
xchg
mov
insb
xchg
aaa
and
or
dec
sub
xchg
sbb
mov
xchg
push
cmpsb
shr
int
sub
pop
or
test
sahf
mov
cltd
shlb
cmp
leave
sbb
fistl
or
sbb
pop
and
setno
dec
mov
xchg
or
cli
or
out
or
jmp
xor
fistpl
imul
jecxz
les
jmp
popf
or
imul
xchg
shr
xor
push
mov
ficompl
stc
or
mov
xchg
xchg
push
shlb
imul
xchg
xchg
jl
je
cmovle
or
mov
jnp
xchg
and
or
js
xorb
test
clc
cmp
loopne
cmp
sub
fisttps
shll
iret
imul
inc
sbb
and
push
fdivrl
cmpsb
aaa
lahf
jg
daa
mov
inc
dec
xor
mov
inc
hlt
out
xchg
adc
rcrl
stc
jno
adc
aam
out
add
arpl
rolb
subb
sarb
ja
sbb
mov
dec
dec
inc
pop
mov
dec
es
outsb
lahf
cmpsl
aad
cltd
mov
aas
mov
enter
xchg
orw
outsl
xchg
cmp
lret
and
bound
fildl
xchg
lcall
pop
push
jne
push
in
mov
xor
push
mov
mov
into
sub
xor
rcll
push
cmp
into
pop
lret
push
loop
pop
sbb
xchg
and
mov
cmpb
mov
pop
stos
sbb
sbb
xchg
out
mov
cltd
test
cltd
mov
jb
push
cmp
push
imul
call
pop
ds
cmp
mov
arpl
mov
pop
popf
sbb
add
jb
repz
mov
cmp
pop
add
test
jne
cmc
add
push
fwait
or
clc
cld
adc
mov
jge
scas
jl
jns
psubw
sbb
adc
sbb
testb
mov
add
push
jl
in
xchg
lcall
cld
cmp
cmp
mov
sbb
out
clc
stc
mov
shrb
jae
dec
jecxz
nop
lods
sub
idivl
sub
insb
pop
loope
popf
fwait
pop
jae
aas
mov
outsl
inc
out
rorb
fcmovb
popa
testb
dec
leave
inc
sbb
cli
xchg
pop
cmp
cli
bound
jae
dec
push
sub
mov
jg
fwait
push
adc
mov
push
daa
inc
call
iret
mov
out
repnz
sahf
mov
sbb
fucompp
pop
pushf
xor
xor
jns
imul
orl
mov
les
push
inc
sbb
mov
xor
mov
cmpsl
lds
xor
aas
jns
mov
and
mov
pop
mov
and
cltd
push
and
cmp
icebp
or
std
loopne
pop
outsb
or
ljmp
xor
mov
or
jmp
ja
sub
jne
xlat
dec
dec
ficoml
xchg
aam
jo
cwtl
mov
repz
outsl
cmp
fdivrs
sbb
pop
sbb
pop
and
pushf
shrl
and
jo
scas
pop
rorb
sub
out
push
add
stos
or
adc
cmpsl
shll
push
repz
icebp
cmp
rcll
aaa
std
dec
test
pop
ret
mov
aas
lcall
pop
mov
xor
xchg
push
pop
loope
roll
shl
pop
insl
fnstcw
aaa
mov
mov
cmpsb
pop
loope
pop
cmc
clc
jnp
das
mov
jne
ja
xor
stos
clc
inc
push
iret
icebp
in
jmp
in
dec
push
add
cmp
pop
out
in
inc
cld
je
push
sar
mov
stos
roll
inc
xchg
add
mov
mov
jl
clc
sbb
iret
cmpl
xor
adc
mov
mov
dec
or
jne,pt
inc
notl
mov
mov
sar
loopne
rolb
jecxz
dec
mov
cmp
imul
push
pop
or
dec
addl
jne
mov
in
xchg
jb
daa
mov
into
xchg
es
std
adc
push
loopne
mov
sti
popf
test
std
sbb
fstpt
iret
mov
decb
or
jmp
xor
inc
enter
jmp
mov
xchg
daa
cmp
fdivs
cmp
cltd
stc
cmp
mov
ss
popf
push
mov
mov
ret
push
test
cmp
inc
es
push
push
aad
xchg
aas
mov
dec
pop
sbb
lret
ja
jne
jge
lds
mov
pop
shlb
mov
stos
pop
adc
pop
aam
jns
or
cmpsl
pop
das
ja
mov
push
sub
addl
push
dec
bound
and
sub
pop
sub
jns
and
push
mov
and
dec
pop
dec
sbb
mov
adc
sub
test
cmp
dec
xor
add
and
xor
fwait
mov
cmp
and
inc
pop
xor
js
push
mov
dec
inc
or
xorw
mov
xchg
mov
test
xlat
inc
enter
das
mov
adc
mov
inc
dec
and
push
push
jo
pusha
xor
insl
imul
xchg
rorl
in
std
daa
pop
xchg
sti
je
ret
sbb
and
cmpsb
mov
fcoms
inc
jns
inc
mov
jmp
stos
dec
insb
sbb
loop
lret
and
pop
js
pop
lods
xchg
hlt
scas
xor
mov
push
and
jle
rcll
ss
sub
in
xchg
sub
scas
pop
into
xchg
adc
fwait
scas
add
sub
shll
dec
sub
add
xor
ret
xor
fs
jne
sub
repnz
call
cli
jl
push
loop
pop
test
pop
imulb
mov
incl
mov
cmpsb
adc
or
sub
mov
mov
lcall
pop
mov
or
mov
push
xchg
out
add
jb
or
cmp
scas
inc
jnp
hlt
testl
jl
leave
pop
mov
and
aaa
push
jnp
and
cmp
mov
test
outsb
xchg
aas
gs
shr
jne
lahf
mov
pop
in
clc
mov
sbb
pop
inc
movsb
pop
nop
les
mov
je
cmc
out
sbb
in
fwait
inc
xor
mov
dec
cmc
pop
pop
mov
cltd
mov
dec
jne
xor
push
les
mov
sub
pandn
stos
aas
scas
scas
fisttpll
leave
outsb
shll
pop
loope
gs
jns
push
fstpl
imul
adc
add
shlb
xchg
insb
repz
jle
cld
ret
std
int
jbe
iret
sbb
rorb
xor
push
xchg
pop
js
jbe
pop
out
mov
jbe
movsl
mov
dec
outsl
pop
xorl
adc
sarb
and
mov
ljmp
icebp
pop
cmpsl
pop
push
lret
mov
fidivl
sbb
xchg
stc
rorb
stc
mov
and
sahf
mov
dec
loopne
xchg
add
mov
jne
aad
loope
xor
stos
outsl
jns
imul
sbb
in
xor
test
jbe
cmpl
xor
xchg
push
adc
xchg
cld
test
and
push
dec
and
outsb
fs
inc
cmc
call
je
cld
lcall
negl
mov
insl
push
faddl
mov
cs
movsl
pop
idiv
movsb
mov
xchg
mov
cmpsl
mov
sub
stos
or
cmp
add
and
fwait
mov
mov
push
repz
jmp
imul
mov
outsb
jne
lds
push
scas
cmpsl
mov
test
test
lds
cmp
pop
fistpl
jo
xchg
adc
sar
inc
xchg
inc
sub
cmpsl
lods
sahf
stos
dec
sahf
and
cmpsl
xchg
sbb
test
repnz
cs
pop
stc
mov
fsubrs
add
add
pmaddwd
fidivrs
fstl
test
dec
in
sbb
stc
xor
mov
pop
jmp
push
dec
clc
in
movsl
popl
mov
mov
les
pop
loop
loope
movsb
and
cs
rcr
fdivp
adc
adc
dec
push
syscall
bound
pop
jp
and
popa
clc
arpl
push
fwait
test
mov
add
push
aad
xlat
push
lods
insl
fstpl
sbb
insl
les
jb
add
andl
lahf
cmp
jge
lahf
cmp
sub
sbb
jecxz
cmc
scas
vpsllq
push
lret
arpl
fdivp
cmpsb
imul
rcll
pop
out
add
pop
gs
jnp
inc
les
stos
fwait
incb
rolb
push
test
inc
mov
dec
cmp
ja
ja
ja
adcl
rorb
pop
jne
xchg
filds
mov
dec
lret
scas
jp
lcall
sub
into
addr16
xchg
addr16
outsl
push
out
ret
sub
out
lret
mov
rol
sahf
cld
push
lcall
pop
inc
mov
data16
push
and
pop
inc
dec
push
jb
dec
push
idivl
pop
out
nop
cmp
lods
fwait
mov
pop
repz
xchg
fisubrl
mov
sbb
aas
and
decl
decl
push
cltd
imul
std
push
mov
and
repz
pop
xchg
push
jbe
sbb
jle
rcrb
lcall
sahf
jmp
ss
and
push
popf
orl
movsl
insl
jle
xchg
or
inc
lcall
mov
jmp
lods
jb
out
popa
stos
add
fisttpll
mov
cmp
xor
inc
xor
in
lea
repnz
pusha
mov
mov
cmp
rol
fadds
sti
or
scas
call
aaa
lds
jno
mov
int3
mov
adc
gs
dec
pop
mov
lds
sub
inc
fs
mov
int
jae
enter
lahf
jmp
arpl
mov
js
and
sbbb
push
lea
sbb
js
xchg
lods
outsb
push
or
shl
je
sbb
ja
xlat
cs
and
mov
into
mov
jge
mov
cld
jbe
aas
sbb
inc
xor
jge
mov
push
push
movsl
jl
js
push
sti
mov
add
adc
dec
and
jb
clc
enter
loop
push
xor
movsb
pop
subb
jno
cmpsl
lods
call
test
scas
inc
lret
insb
xchg
movsl
cmp
inc
pop
sbb
push
insb
bound
in
jno
into
add
xchg
arpl
push
ja
xchg
fcmovbe
dec
pop
and
mov
xor
sar
cmpsl
stos
cmp
cmc
orb
mov
iret
mov
sahf
pop
inc
pop
mov
jo
sti
imul
xor
push
sbb
jecxz
mov
jg
ljmp
xchg
fcmovu
mov
or
sbb
into
mov
mov
outsb
dec
xchg
dec
cs
jle
mov
loope
movsb
add
cli
mov
dec
pop
sahf
or
movsb
fs
dec
pusha
daa
ss
adc
jl
mov
xor
mov
xor
inc
mov
mov
adc
test
lcall
mov
fldt
push
xchg
pop
push
pop
fistpll
insl
dec
push
fcomps
push
sbb
xchg
out
cmpsl
jmp
repz
mov
pusha
mov
jae
xchg
and
shlb
hlt
ljmp
andb
cmpsb
jg
cmp
mov
outsb
ret
sub
mov
mov
insb
cld
jae
pop
mov
push
push
and
fs
ja
sahf
ret
aaa
stos
inc
das
push
je
pop
xlat
sub
roll
fisttpl
dec
aad
cwtl
insb
pop
scas
fists
and
inc
mov
adc
fs
xor
mov
mov
out
push
sbb
jle
xchg
scas
jp
aad
inc
addb
push
add
shl
sbb
sub
lcall
mov
call
push
es
sbb
pop
out
lcall
addr16
jg
adc
and
stos
dec
sub
cmp
mov
lahf
arpl
or
dec
cmp
in
adc
in
out
les
decl
cmpsl
dec
enter
inc
iret
in
inc
aam
addr16
sbb
jns
mov
push
icebp
call
push
nop
mov
mov
shlb
cmp
fstl
loop
daa
adc
push
xchg
jb
mov
push
cmc
je
or
lret
test
lret
clc
or
pop
jbe
mov
out
fdivr
stc
mov
scas
xor
repz
sub
add
mov
adc
and
hlt
enter
xor
adc
lcall
scas
aaa
lock
and
adcb
push
jge
scas
xchg
push
push
fldenv
jns
lss
push
stc
jg
mov
pop
push
mov
fildll
adc
mov
xor
cmp
mov
add
pop
cld
sti
call
pop
outsl
rcrb
mov
jg
xor
bound
push
mov
mov
mov
movsb
jg
pushf
add
shlb
xchg
pop
daa
pop
mov
rcrb
jbe
and
nop
jg
mov
shlb
xor
rcll
jge
aad
jle
jb
or
push
add
inc
dec
or
sbb
dec
js
fsubrs
pop
xlat
adc
pop
lods
mov
adc
push
repz
std
pop
lea
or
lds
out
cmpsl
cli
mov
push
pushf
jb
test
push
mov
rorb
sarl
adcb
inc
cmp
clc
push
ret
push
sub
inc
and
jns
jp
fstpl
cmp
xchg
inc
sub
xor
mov
push
mov
fisttps
inc
hlt
daa
lds
stos
stc
scas
addr16
add
stos
xchg
shl
cmp
shll
inc
push
sti
mov
out
xor
jo
test
insl
cltd
dec
orl
icebp
jl
pop
sub
mov
pop
adc
cmp
je
mov
and
lds
stc
cmc
mov
repnz
arpl
mov
mov
and
cltd
fcmovnb
add
pop
sahf
sbb
cli
je
push
push
pop
mov
mov
xlat
incl
mov
nop
push
insl
cmp
pushf
adc
pop
jl
jle
aas
ss
push
xor
dec
ss
mov
xor
and
sub
repnz
loopne
aas
loope
mov
mov
daa
xchg
dec
push
or
inc
fyl2xp1
je
jno
mov
out
jo
xchg
mov
imul
filds
fwait
pop
mov
jo
lcall
insw
js
cmp
pop
call
negl
push
adc
icebp
push
popf
iret
and
adc
jmp
out
xor
pop
negb
test
ds
sbb
adcb
fnstsw
das
mov
lret
lret
and
push
push
mov
lcall
aas
aad
and
adc
xchg
xchg
cld
pop
mov
ret
jno
jmp
cmpsl
lcall
loop
pop
jno
and
xor
mov
repnz
std
or
pop
pop
lock
rorb
cmovp
xor
dec
pop
stos
into
aas
dec
xchg
add
lods
mov
adc
xchg
mov
jl
icebp
sbb
inc
int
test
mov
xchg
or
stos
dec
jne
test
popf
mov
xchg
sbb
inc
sub
nop
and
dec
leave
lahf
xor
shrb
clc
test
or
lahf
aas
xlat
aaa
cmp
bound
jnp
mov
and
ja
jecxz
fidivrs
jae
sub
in
stos
push
and
aam
adc
int3
push
adc
mov
js
jecxz
or
stos
xor
adc
in
sbb
movsb
pushf
loopne
outsb
movsb
adc
insb
out
adc
mull
jmp
jns
dec
push
pop
ljmp
ljmp
adcb
bnd
imul
aaa
adc
xchg
sbb
add
sbb
mov
inc
inc
pop
scas
std
daa
or
push
arpl
dec
pop
jl
movd
push
jno
xchg
rorl
xor
aas
add
cltd
xor
jmp
sbb
fildll
fcomip
lods
xor
into
add
std
mov
lods
and
sub
push
xlat
xchg
ss
xchg
cmp
xchg
pop
data16
push
out
xchg
fdivl
pop
cmpsl
dec
pop
sahf
shlb
test
xchg
inc
mov
in
shrb
push
and
and
or
sbb
cmpsb
popa
std
jmp
adc
or
outsb
jo
fwait
mov
cmp
subl
lds
xchg
pushf
cmp
movsb
in
loop
gs
mov
jecxz
scas
scas
cltd
or
dec
inc
xchg
dec
jl
ljmp
iret
repz
sahf
xchg
xorb
call
xlat
mov
ret
in
fsubs
repz
cmp
aam
mov
mov
ret
iret
pop
xor
hlt
or
lret
pop
add
push
jmp
loop
push
test
push
mul
outsl
cmc
stos
mov
lock
mov
ds
push
jbe
jb
lret
adc
pushw
arpl
sbb
push
sti
fisubs
pushf
lds
xchg
sbb
cmpsb
and
addr16
xor
cmp
cwtl
je
or
and
loopne
mov
push
lret
imul
mov
jbe
sub
call
sbb
cs
push
andl
popf
push
add
ds
dec
add
movsb
icebp
xchg
mov
je
rolb
fcmovnu
jmp
push
jl
jno
cld
int3
xchg
pop
or
js
test
pusha
dec
scas
ret
stos
mov
mov
mov
xor
push
or
jl
mov
ret
scas
mov
loope
dec
lcall
decb
sub
mov
test
inc
aad
and
push
mov
mov
mov
in
scas
out
clc
fbstp
jno
push
sbb
or
and
daa
aas
push
fld
jl
negb
or
jns
push
push
dec
scas
imul
adc
cmp
and
xor
xchg
and
sbb
int3
add
in
or
pushf
dec
mov
test
data16
cld
mov
or
sbb
xchg
fdivl
ret
or
sbb
cmp
sahf
mov
outsl
mov
pop
adc
cmp
and
decb
mov
repnz
xchg
dec
in
push
int
push
sbb
and
aad
std
jl
jg
notb
push
ja
ja
mov
dec
pop
xchg
das
data16
lock
cs
jnp
or
push
cmp
sbb
leave
mov
icebp
scas
in
jg
pslld
and
hlt
fcomi
scas
add
in
fcos
push
mov
sbb
fwait
orl
aas
push
add
arpl
sbb
xor
mov
popf
mov
lret
push
into
mov
or
sbb
or
cmp
jne
insb
or
xor
mov
jge
and
mov
jecxz
mov
icebp
popa
pushf
sbb
scas
stc
or
xor
dec
ss
push
mov
adc
jmp
adc
inc
les
push
mov
mov
out
inc
adc
les
mov
or
ret
xchg
fldcw
dec
cmp
jmp
lea
sarb
sti
pop
jge
inc
cmp
out
out
adc
ret
cli
call
scas
incl
loopne
stos
dec
lret
int
push
pusha
dec
push
or
in
mov
inc
in
fs
mov
mov
adc
fs
movsl
fbld
push
clc
call
sub
jae
push
aaa
repnz
aaa
add
push
mov
mov
adc
jae
lods
cld
cmp
imul
xchg
stc
mov
push
sbb
ret
js
ss
jle
jo
pop
enter
pushf
stos
ret
ljmp
ss
push
mov
jmp
push
in
dec
cmp
pop
push
sub
jl
adc
push
push
mov
sbb
cmp
adc
sbb
adc
sbb
add
mov
es
loope
sbb
mov
aad
jbe
popf
je
and
mov
std
push
stos
xchg
mov
arpl
sub
in
and
adc
sbb
mov
mov
int3
ret
xchg
mov
sub
sub
jle
jl
jge
inc
cmp
sarl
ljmp
outsb
fwait
or
loope
jmp
and
xchg
aad
xor
mov
pop
bound
cmpl
jo
shlb
gs
xlat
push
leave
not
pop
test
jmp
xchg
out
push
insl
pop
imul
xor
sbb
xchg
push
sbb
dec
xchg
jmp
dec
push
mov
scas
sbb
out
mov
mov
xchg
pop
incb
jbe
cli
jo
loopne
sbb
add
loop
push
add
mov
gs
pushf
icebp
jbe
dec
insl
in
sti
fadd
outsb
nop
cmp
push
cmpsl
out
jecxz
mov
aad
pop
lds
outsl
nop
shrb
cmpsl
xchg
cmp
and
js
ret
xor
xchg
pop
mov
movsb
cmp
cmc
xchg
sbb
mov
insb
push
or
mov
push
je
xchg
and
add
sbb
stos
lea
dec
gs
stos
fs
hlt
add
sbb
jno,pn
mov
xchg
mov
lcall
loope
mov
xlat
lock
imulb
pusha
inc
add
adc
andl
xchg
lcall
dec
jae
sbb
nop
sub
jb
popa
loop
loop
iret
xor
js
std
xchg
ficompl
mov
insb
and
push
into
sbb
xchg
mov
xchg
sbb
add
cmc
dec
ret
xchg
lods
lahf
int3
cmpsb
or
repnz
xlat
push
and
mov
nop
std
or
mov
adc
sub
into
imull
jbe
mov
and
adc
ret
jae
jo
gs
inc
les
dec
fwait
js
mov
out
mov
sbbl
flds
cld
cmpsb
or
or
mov
frstor
cmpsl
mov
clc
divl
add
mov
cmp
jle
stc
loope
sub
pop
dec
arpl
mov
dec
adc
or
jge
cmp
adcb
ljmp
jmp
rcrb
pop
flds
std
outsb
and
arpl
inc
or
xor
fwait
pop
sub
push
int3
sahf
int
es
inc
daa
inc
push
imul
ljmp
sub
int
sub
fnstcw
add
pop
pop
stos
lock
mov
pop
mov
adc
insl
loop
ds
mull
imul
call
stos
and
mov
testb
int3
push
outsb
bound
mov
int3
dec
xor
xor
mov
ret
orl
bound
fstl
mov
faddp
cmp
es
mov
and
gs
fldenv
stc
and
js
mov
je,pt
inc
add
push
cmc
mov
daa
idivb
nop
mov
shlb
mov
ret
dec
hlt
lods
cmp
xor
or
sub
or
dec
test
mov
cmp
rolb
pop
fs
adc
int
aam
cmp
mov
nop
repnz
pushf
xchg
mov
jne
inc
hlt
push
lds
jl
mov
pop
push
aam
mov
or
xor
mov
dec
in
push
jne
jge
dec
insb
rcl
inc
insl
testl
jne
stos
and
inc
ret
inc
sbb
lahf
das
add
ret
jbe
icebp
mov
or
dec
xchg
pop
push
lret
mov
sbb
test
pop
aad
or
das
mov
jl
inc
adc
sub
sub
or
sti
clc
push
nop
es
sahf
jle
fnstenv
cmp
icebp
pop
mov
or
sbb
pop
or
out
pushf
fisttps
or
jp
out
sub
dec
cmc
cmp
repnz
mov
es
out
jle
adc
dec
in
lock
in
push
stos
mov
fpatan
xchg
leave
sub
pushf
mov
xchg
insb
xchg
jno
xchg
add
es
push
or
test
or
icebp
les
loope
repz
fcmovbe
and
sub
lret
or
cmp
iret
adc
mov
jo
into
popa
xchg
pusha
rcrb
popf
jg
sbb
lahf
ja
xchg
jecxz
outsl
dec
mov
push
mov
and
push
or
push
jg
lret
sub
pop
jge
add
cmp
fwait
and
lds
sti
in
insl
movsb
dec
xor
aaa
xchg
in
imul
imul
notl
sub
jns
fstl
or
mov
das
dec
fwait
leave
movsl
inc
push
fnsave
jp
adc
in
aas
mov
mov
aad
hlt
pop
push
es
mov
vshufps
loop
cld
in
push
punpckhbw
sbb
daa
mov
nop
scas
pop
xor
out
inc
mov
ds
dec
mov
in
add
push
gs
loop
jb
sbbl
neg
cli
decl
or
cmp
lret
sbb
add
adc
push
push
sbb
mov
movsl
xor
cltd
sbb
and
jecxz
in
arpl
cmp
sbb
dec
jmp
fwait
hlt
mov
add
lret
repz
inc
out
xlat
jnp
mov
hlt
or
mov
ljmp
bound
lret
sbb
push
xchg
ffreep
inc
int
fisubrl
adc
call
mov
and
clc
leave
hlt
add
inc
insl
pop
add
rcr
das
mov
andb
jae
test
stos
in
adc
out
mov
add
popf
and
or
jl
fiadds
xor
sub
pop
push
cmpsl
arpl
and
out
fs
mov
inc
dec
mov
sub
mov
jg
in
mov
xor
outsb
sub
or
and
test
push
sbb
push
sbb
out
push
jecxz
les
xor
pop
xchg
inc
repz
adcl
in
or
dec
cmp
mov
cltd
jecxz
adc
pop
test
xor
scas
call
and
push
mov
out
int
es
xor
dec
cwtl
insl
cltd
mov
aas
test
cmp
je
lahf
inc
in
mov
xlat
decl
pushf
add
xchg
mov
push
mov
lahf
enter
pop
sub
sti
shr
ss
xchg
outsb
loope
into
out
adc
inc
jmp
sbb
je
scas
sub
pop
loop
inc
mov
lret
dec
mov
jle
xchg
xor
inc
gs
sub
test
cld
mov
pushf
mov
jge
int
xor
push
push
mov
push
mov
cli
sbb
stos
xor
push
jge
mov
enter
cmp
jb
fldl
leave
xchg
pop
cmpsl
movsl
xor
hlt
insb
adc
dec
popa
hlt
mov
dec
lods
mov
sbb
nop
jno
fdivrl
lods
loop
scas
sti
adc
das
insb
or
pop
mov
pop
pop
push
mov
js
inc
mov
dec
rcrb
iret
xchg
cmp
sbb
mov
aaa
mov
mov
pop
push
cmpsl
fnstsw
inc
fidivrl
xchg
xor
add
jle
mov
fwait
dec
and
insb
cltd
jge
inc
in
inc
arpl
mov
jecxz
adc
ret
sub
ss
xchg
je
add
mov
insl
xor
mov
push
push
leave
xchg
xchg
adc
dec
out
cmp
mov
xchg
push
dec
push
scas
push
jns
cmpsb
out
lea
xor
cmpsb
aas
xchg
inc
and
mov
mov
jge
sti
cmc
xlat
scas
sar
mov
push
fwait
es
lcall
adc
inc
xor
test
inc
dec
cmp
adc
push
movsb
ljmp
sub
sub
fs
test
pop
movsl
bound
xchg
add
cmp
iret
mov
jle
cmc
in
out
pop
int
dec
insb
jmp
xorb
cmp
roll
push
cmp
es
mov
mov
loope
icebp
cmpsb
nop
xchg
lcall
call
nop
aam
sbb
push
fdivs
jbe
clc
or
cmp
stos
in
mov
scas
adc
sub
lods
or
cmc
inc
shlb
jle
jle
mov
jp
lret
mov
mov
mov
lock
test
xchg
pop
inc
adc
pop
lcall
lods
imul
out
stos
push
jne
into
xchg
jb
aad
add
daa
dec
sbb
jecxz
inc
js
push
pop
sbb
sub
jg
sbb
pop
dec
je
or
movsl
jbe
pop
test
std
rorl
mov
enter
mov
nop
and
imul
or
mov
lods
adc
cmpsb
cmp
pop
pop
aaa
pop
int3
jb
mov
adc
enter
xor
add
mov
mov
outsb
cli
mov
repnz
pop
adc
pop
lret
das
adc
enter
popa
shl
add
sar
dec
out
daa
mov
pop
sub
testb
pusha
cli
jbe
add
stos
lret
rcll
jno
adc
subl
dec
shl
push
and
and
imul
xchg
stos
outsb
in
insb
xor
mov
sti
sti
sbb
insb
xor
pop
stos
sbb
popa
enter
sarb
cmc
inc
sbb
loope
iret
jne
les
or
xchg
or
loop
mov
inc
adc
mov
cmp
mov
dec
fisubs
and
cmc
and
in
adc
adc
inc
into
sbb
daa
add
or
sbb
ss
xchg
cmp
test
cmp
cli
cmpsl
repz
xchg
es
jg
cli
dec
inc
cmp
ds
scas
ret
fwait
mov
lods
xor
adc
outsl
jle
outsl
mov
sub
jecxz
mov
add
dec
pop
mov
loop
and
sub
jle
out
mov
adc
or
inc
arpl
out
shll
jg
inc
gs
nop
pop
mov
pusha
or
add
push
decl
add
fst
shll
daa
and
repnz
push
mov
subb
scas
jo
mov
or
lea
icebp
ja
scas
xlat
sub
xchg
hlt
fstps
dec
or
out
hlt
clc
or
fidivrl
mov
push
ret
insb
push
mov
jne
call
push
jne
or
out
rcll
scas
xchg
xchg
jecxz
jae
insl
adc
adc
inc
jnp
mov
inc
push
push
jmp
jp
pop
out
loop
fdivs
adc
fucom
clc
in
cmp
test
cli
mov
adc
or
xor
gs
jno
shrl
add
js
sub
fstp
in
insl
aas
out
inc
and
gs
divl
xchg
leave
push
ss
bound
int
mov
into
adc
jmp
dec
sub
sbb
data16
xchg
in
push
mov
pushf
pop
fimuls
lds
pop
fldcw
mov
nop
mov
push
sahf
fbld
sbb
out
pop
test
ljmp
in
or
or
in
loopne
push
dec
inc
mov
xor
add
daa
arpl
ja
mov
dec
sbb
stos
cmp
mov
cmp
adc
mov
mov
jl
inc
dec
pusha
lret
loopne
insl
xorl
mov
das
xor
hlt
hlt
mov
dec
ret
push
andl
add
mov
dec
out
shlb
xchg
mov
sbb
outsl
rolb
dec
or
stos
cmpsl
mov
out
stos
add
lahf
test
pushf
std
add
fisubs
lret
dec
data16
mov
in
sbb
mov
stc
push
daa
add
mov
push
cmp
aas
lret
mov
cmp
push
js
cmpb
mov
mov
mov
out
fisubrl
inc
mov
movlps
mov
cmp
fsts
cli
in
pop
cmpsl
orb
cmp
scas
dec
or
or
cmp
adc
outsl
fbstp
dec
cltd
ja
xchg
ljmp
inc
bound
xor
mov
cmp
jge
mov
dec
xor
cmp
adc
rorb
mov
mov
and
call
xchg
hlt
shl
or
stos
pop
push
movsl
into
arpl
push
cmp
push
rcl
dec
test
sbb
es
out
mov
sub
stos
inc
ja
rorb
stos
in
xorb
push
jnp
repnz
dec
xor
cli
mov
sub
xor
xor
enter
aam
jg
mov
jo
int
add
cmpsb
ljmp
xor
js
sahf
inc
daa
cmp
icebp
movsb
imul
push
outsb
and
mov
adc
sbb
insl
dec
mov
int3
mov
test
mov
sbb
xor
or
popa
mov
gs
lret
sub
dec
ja
je
jl
mov
test
sub
cwtl
bound
jns
mov
push
sub
repz
cli
inc
scas
pusha
mov
pop
inc
sbb
pusha
cltd
pop
xor
mov
repz
mov
ret
push
and
cltd
in
xor
leave
ficoms
pop
mov
pop
mov
pop
mov
dec
fadds
cmp
dec
sbb
mov
mov
xor
mov
test
push
lret
and
stc
pop
sbb
insb
pop
mov
mov
in
push
pop
xchg
adc
fisubs
cmpsb
dec
movsl
popa
sti
cmp
movsl
fistl
fildl
and
sbb
and
insl
lods
int3
sub
sarl
cmp
cltd
cmp
xor
aad
inc
pusha
pop
add
mov
insl
cmp
jo
bound
leave
xor
mov
sarb
pushf
xor
and
add
lods
jmp
sbb
cmp
mov
add
ficomps
rcll
fisttpl
daa
lret
jmp
sub
stos
mov
xchg
out
xorb
pop
jg
imul
fwait
mov
lcall
mov
rorb
inc
in
cmpsl
clc
iret
and
xchg
aad
pop
loop
push
and
adc
add
push
mov
push
stos
mov
fdivrs
lods
repnz
sub
jecxz
sub
or
mov
aaa
mov
jnp
push
roll
jno
popf
int3
mov
cltd
sti
mov
fmulp
loop
mov
jmp
jg
jcxz
inc
xor
in
loope
aas
in
pushf
cmpsl
xchg
les
pop
in
orb
inc
or
jno
add
pop
cltd
pop
xorb
cmc
out
cli
push
push
lcall
inc
jb
xchg
mov
push
js
mov
mov
xor
xchg
push
jnp
push
stos
xchg
cli
mov
ss
popf
into
loop
and
cld
mov
jle
pop
add
pop
or
add
push
test
xchg
xchg
insb
mov
jne
xor
in
mov
or
jecxz
and
lret
sub
scas
arpl
and
and
icebp
mov
aam
dec
jecxz
dec
bound
xor
faddl
notb
pop
sbb
adc
inc
mov
add
inc
testl
test
dec
xchg
jmp
mov
mov
aaa
fdivrs
xchg
fcmove
adc
jle
shll
dec
dec
fiaddl
fdivr
jmp
in
mov
pop
aas
stos
pop
xchg
popa
cltd
gs
loop
pop
and
and
mov
pop
rorl
xor
sub
and
jbe
popf
stos
pushl
mov
pop
adc
mov
xlat
imul
sbb
imul
rcrb
jmp
inc
ss
int
lods
sbb
shll
and
pop
testl
add
bound
push
sarb
sahf
xchg
and
lcall
xor
rep
testl
mov
repnz
sbb
cltd
mov
fiaddl
cmp
jb
pop
scas
cwtl
push
fs
push
cld
gs
leave
add
sbb
fs
mov
shlb
pop
jne
roll
dec
jg
xor
notb
flds
je
je
cmpsl
jl
fincstp
repnz
sbb
imul
xor
mov
inc
sbb
or
sub
jmp
ss
mov
addr16
inc
push
sbb
jno
mov
mov
test
and
int3
and
outsb
jl
lret
jl
fwait
enter
add
dec
cmp
into
cld
jo
nop
sub
pop
cmp
pop
out
pop
dec
cmp
data16
mov
xor
es
pshufw
daa
sbb
pop
fstp
push
pop
mov
lds
shll
cmpsl
mov
in
mov
pop
add
insl
mov
loope
bound
pop
out
inc
fwait
sub
sbb
sbb
mov
pop
cmpsb
jp
pop
mov
enter
icebp
test
xchg
jg
sbbb
addl
inc
pop
loopne
lret
les
or
sti
negl
sub
jmp
push
add
add
mov
in
test
dec
cmp
ja
ja
cmp
fimuls
rolb
pusha
out
out
in
push
xor
or
mov
jb
inc
pop
rol
int
xchg
push
mov
sub
mov
int3
lods
fcmove
fsts
sub
push
mov
outsb
fistpll
push
cmp
sbb
scas
in
dec
int
repnz
and
jnp
dec
pop
js
inc
cs
adc
inc
xor
mov
cmp
inc
popf
adc
ljmp
adc
and
add
and
or
inc
ss
pop
xor
dec
scas
testb
cli
mov
adc
pushf
setns
xor
mov
push
sub
jp
adc
ds
mov
xchg
dec
jecxz
lcall
cmpsb
mov
xor
dec
add
loopne
pop
fsubs
xchg
movl
cltd
iret
xor
pop
fcompl
sbb
push
mov
popa
xchg
fldl
mov
push
or
maskmovq
imull
xchg
xchg
mov
scas
push
sub
mov
sbb
cli
sbb
test
arpl
add
mov
jne
jne
scas
sbb
xchg
prefetch
call
pop
loope
cmpsb
dec
push
adc
ljmp
addr16
mov
fs
add
adc
jge
flds
jmp
dec
mov
test
xlat
repz
lods
pop
das
je
pop
cli
xchg
fisttps
add
stos
xor
mov
xchg
ret
out
mov
iret
fldt
insb
mov
dec
jge
mov
outsb
int
add
flds
lret
movsb
push
sub
xchg
xor
adc
mov
aas
lods
out
adc
xor
push
lea
ret
call
es
jecxz
xchg
mov
mov
lds
cli
sub
sti
outsl
mov
xor
xchg
es
test
pop
mov
popf
inc
out
leave
mov
aas
psubsw
stc
inc
in
pusha
mov
les
add
xchg
cmp
jae
or
lret
mov
negl
call
dec
cmc
cmp
mov
mov
mov
jns
andl
adc
ficoms
and
icebp
shll
jecxz
into
iret
cmp
aad
or
mov
mov
cmp
aam
mov
mov
or
repz
add
in
or
mov
xor
repnz
add
cmp
aam
xor
cmpsb
add
shll
xchg
or
bnd
mov
in
xor
js
and
and
push
sub
idiv
pop
cmpsl
addl
cli
xchg
stos
xchg
cmpsb
add
mov
inc
outsl
jl
push
sub
mov
and
cmp
stos
scas
adc
lret
add
je
or
stos
mov
aam
sub
or
dec
jbe
stos
pop
sahf
pop
xor
xchg
lock
out
adc
lds
or
xor
pop
dec
jns
add
sahf
inc
lret
shl
lcall
dec
enter
mov
push
lods
in
or
loop
push
xchg
jne
lods
in
jae
seta
and
ret
and
out
movsl
or
imul
inc
pop
testb
push
lods
insb
and
inc
out
cltd
push
rcr
inc
sub
jmp
jp
push
fisubl
sbb
mov
das
out
add
pop
mov
or
cmp
xor
mov
xchg
xlat
aas
das
cmp
cmp
and
insb
jp
lcall
aaa
mov
mov
aaa
dec
out
imul
imul
mov
cs
mov
push
shrb
aas
addl
inc
cwtl
std
das
flds
std
mov
cs
and
lahf
das
fdiv
in
mov
pop
int
jne
iret
cmp
push
clc
testb
sbb
mov
rcl
sbb
adc
jno
inc
mov
in
add
dec
dec
outsb
push
push
xor
js
ja
divb
imul
aas
stc
sub
sub
xor
sub
sbb
outsb
push
cwtl
jne
je
aaa
cltd
push
cmpsb
dec
iret
lcall
mov
shl
clc
cmp
pop
pusha
cltd
inc
es
xor
test
cs
mov
inc
jnp
ljmp
dec
and
inc
mov
pop
jp
xchg
fnsave
lds
sar
jge
rcrl
jno
or
aam
movb
xchg
jecxz
mov
pop
ja
test
dec
popa
in
sbb
and
leave
fwait
outsb
push
test
sub
sub
imul
std
push
xchg
or
js
fidivrl
add
inc
dec
jns
pop
movsb
stc
cmc
sbb
cmp
mov
xor
stos
or
movsl
lods
outsb
push
je
leave
in
and
stc
test
scas
dec
stos
test
lds
pop
adc
mov
cltd
mov
dec
mov
or
lret
cwtl
mov
mov
ljmp
push
jl
iret
xor
sub
cwtl
mov
sub
pusha
inc
push
sub
mov
add
sbb
add
cmp
mov
add
and
jmp
inc
test
sub
dec
test
std
enter
stos
popa
into
xchg
arpl
mov
cmp
cltd
loopne
out
dec
je,pt
mov
aam
aam
jmp
mov
lds
push
mov
push
pushf
iret
mov
in
lds
pop
lret
sbb
lods
lds
es
pushf
cltd
sbb
mov
mov
inc
inc
mov
pop
bswap
nop
out
add
add
call
and
aas
sub
and
jae
push
aas
scas
in
inc
bswap
cmpsb
std
in
mov
adc
pop
push
dec
lods
fsubrl
mov
and
testb
lret
pop
dec
jnp
push
mov
mov
fistpll
mov
mov
cmc
out
call
push
std
cltd
or
divl
les
inc
xor
mov
sbb
pop
rolb
xchg
ja
mov
dec
loopne
xchg
adc
xlat
xlat
jg
mov
pushf
xchg
arpl
orb
shrb
and
jns
bound
xchg
dec
test
je
inc
fstpl
adc
add
call
and
loop
ret
pop
fsubl
out
push
cld
or
cmpb
mov
adc
push
add
add
rcrl
inc
imul
push
fs
aas
push
mov
stos
out
hlt
sbb
jle
add
imul
cwtl
stos
std
mov
push
pop
aas
cmp
mov
ds
sub
xchg
xchg
jmp
xchg
jno
add
mov
sarl
jo
xchg
mov
inc
xchg
ljmp
xor
pop
es
jecxz
rclb
stos
ret
aam
xor
fisttpll
jge
mov
mov
mov
stos
mov
outsb
lock
icebp
iret
mov
repz
rolb
dec
clc
fcompl
jecxz
cmc
mov
xchg
add
pusha
mov
mov
xchg
cli
jl
lock
into
pop
inc
js
mov
cmovs
test
push
sub
movsb
fwait
mov
rcrb
cmp
ljmp
add
jbe
in
push
xchg
fs
push
xor
inc
out
adc
sub
jmp
shlb
dec
inc
cmp
cmc
out
arpl
lret
inc
mov
pop
fidivrl
mov
xchg
lea
push
gs
adc
in
sub
out
mov
pop
sbb
mov
stos
sti
jp
into
adc
aad
dec
push
xchg
lods
jecxz
not
or
or
bound
xchg
incl
shl
int3
je
mov
mov
pop
mov
rcrb
daa
or
and
or
fnstenv
xor
daa
cwtl
jae
call
pop
cld
jle
adc
jle
jne
mov
sbb
clc
mov
xor
repz
pop
mov
clc
or
nop
push
rolb
inc
hlt
jl
and
adc
std
jmp
jl
push
ret
sub
xchg
lret
xor
sti
mov
inc
loop
lods
mov
ja
subl
pop
dec
or
xchg
pop
lock
js
jne
cmp
mov
mov
jnp
mov
imul
adc
sub
aad
rorb
test
push
ret
shl
rsm
mov
mov
pop
lcall
ficompl
movsl
sbb
cmp
daa
insl
rorb
sbb
push
loop
das
jp
pop
testb
push
insb
stos
dec
push
test
cmpsl
cwtl
icebp
iret
cmp
pusha
rorb
push
lock
or
push
push
les
lcall
or
pop
addl
dec
mov
les
imull
jno
cmpsl
jns
sbb
movsl
jl
es
leave
outsl
in
pop
aaa
jecxz
lods
pop
push
xchg
arpl
xchg
adc
lcall
add
mov
xchg
add
add
jae
xchg
fwait
push
mov
jle
fstps
mov
add
sub
inc
das
andb
lret
mov
repz
lea
pop
enter
gs
aaa
xchg
nop
adc
aas
mov
hlt
daa
fsincos
xor
fimull
cs
popa
cmp
jl
ret
pusha
mov
sarl
add
push
lds
lds
and
loope
cmc
add
dec
int3
xorl
xor
ja
xor
int
pop
jno
imul
sub
test
jge
hlt
adc
repnz
jle
mov
add
arpl
lods
cltd
movsl
cli
hlt
outsb
adc
scas
mov
icebp
adc
jb
fwait
adc
mov
popa
add
adc
test
das
push
lcall
xor
pop
or
sub
push
push
mov
std
push
adc
sub
adc
ret
sub
sub
push
jl
inc
adcl
jae
mov
dec
mov
push
aam
mov
jg
xchg
test
xchg
lahf
fmul
in
xchg
and
mov
test
int3
jne
mov
jecxz
out
pop
nop
xlat
vaddsubpd
aaa
aam
popa
xor
or
sbb
loop
push
outsl
call
mov
push
test
sbb
jno
js
shr
fsubrl
mov
data16
loope
cs
and
mov
sar
push
mov
push
lods
inc
and
add
cmc
filds
adc
push
xor
mov
adc
pop
xchg
sub
out
add
cli
pop
jne
mov
insl
xacquire
sub
insb
mov
pop
out
jmp
mov
in
rclb
cvttps2pi
inc
mov
sarb
inc
out
sbb
sbb
stc
adc
sbb
loopne
fdivl
icebp
scas
push
or
push
loop
int
mov
lock
pop
roll
cmp
repz
jb
mov
cmpsl
push
aad
lret
std
mov
jnp
xchg
lock
ret
jb
xchg
add
mov
mov
aad
sbbl
jge
and
and
mov
xor
cmp
or
dec
lds
rcrl
pop
mov
enter
xchg
or
adcb
push
ss
push
test
jae
add
daa
movsl
adc
mov
testl
push
in
pop
mov
mov
int
jle
xchg
pop
mov
lods
insb
sub
pop
dec
rcr
mov
inc
inc
mov
je
clc
movsb
inc
cli
jl
sarb
mov
mov
lcall
and
push
mov
add
lea
and
fsubl
xrelease
add
aas
mov
push
sbb
fwait
shll
aad
dec
jne
xchg
xor
fmull
pop
sti
inc
lock
ret
movl
pop
xchg
lods
push
push
pusha
insl
sbb
xchg
flds
jle
xchg
mov
mov
and
popf
xor
jecxz
jle
aad
cmp
dec
jbe
xchg
push
jo
mov
mov
push
ss
popf
cmc
out
cmc
mov
push
add
or
pop
lret
out
mov
scas
add
sub
dec
jne
cmp
incb
sahf
mov
jns
add
data16
jp
gs
adc
cmp
addr16
mov
movsl
xchg
dec
out
push
repnz
add
cmpsb
inc
lret
xchg
pop
jae
popa
xchg
clc
xor
ds
fsts
mov
xor
aaa
jp
stos
adc
or
clc
adc
adc
add
jmp
push
xorb
cmpsb
push
pop
xchg
mov
xchg
imul
popf
inc
mov
add
inc
mov
jne
and
ss
xchg
in
dec
and
xlat
gs
push
pop
outsl
push
nop
pop
pop
shll
pop
xchg
lahf
cltd
pop
dec
movsl
orb
loop
sahf
pop
testl
sbb
and
xchg
test
test
lods
cli
movsl
lret
sub
jns
push
ljmp
in
pop
out
nop
jl
cmpsl
xchg
in
inc
mov
mov
mov
hlt
push
test
xchg
inc
lods
xchg
in
outsl
push
shlb
dec
shr
test
adc
xchg
pushf
arpl
sbb
mov
cmpl
push
mov
mov
idivl
dec
jae
jae
push
or
dec
in
dec
clc
sbb
add
xchg
xor
sbb
xchg
jnp
or
fs
inc
push
cmp
repz
aas
ror
ret
dec
in
rcll
cmp
or
imul
sub
ds
mov
or
cmp
clc
jp
or
aas
cs
mov
push
add
mov
pop
cmp
mov
pop
or
idivb
repz
dec
addb
cmpsb
rol
push
mov
movsb
mov
inc
aam
out
adc
imul
pop
push
xor
dec
call
adc
lea
test
xchg
stc
xchg
popa
arpl
nop
orl
jmp
aam
stos
push
stos
pop
mov
mov
popa
add
add
mov
adc
lret
mov
cmpsl
inc
jp
shlb
cwtl
sbb
xchg
and
imul
xchg
cmp
repz
aaa
jmp
into
fstps
mov
adc
inc
sub
mov
jbe
adc
pop
add
out
testb
xor
outsb
fwait
imul
cmpsl
xchg
sbb
sub
fwait
lret
or
sbb
cmp
sub
iret
mov
push
mov
iret
mov
mov
and
cmp
les
fdivrs
cmp
fmull
cwtl
xchg
and
mov
cltd
pusha
push
adc
add
mov
xor
mov
pop
sub
mov
cmc
repz
ss
jns
dec
inc
or
les
mov
das
pop
incb
adc
cmp
cltd
mov
cs
cld
inc
inc
lret
mov
sbb
mov
mov
sahf
sti
sbb
cmc
call
push
add
iret
or
or
popa
or
adc
and
sub
les
xor
dec
ljmp
andb
sub
push
fildll
dec
repz
sbb
inc
dec
scas
push
mov
lahf
mov
outsl
scas
mov
aas
push
xchg
dec
pop
insl
jne
dec
inc
xor
push
fdivrs
cmp
ds
xchg
sbb
pusha
cld
pop
out
aaa
fildll
cmp
dec
cmp
insl
aaa
dec
sub
mov
pop
mov
xchg
mov
out
ret
push
sbb
pop
xchg
in
sbb
stc
add
aad
cwtl
leave
mov
and
lret
in
push
cli
mov
shll
dec
sti
ljmp
cwtl
add
in
pop
fwait
xchg
and
lea
adc
mov
or
xchg
pop
mov
leave
inc
or
in
jmp
std
xor
jge
push
pop
cs
sbb
add
add
lods
sbb
cltd
ds
jecxz
adc
mov
aad
popa
push
jo,pt
cmp
hlt
pop
arpl
bound
mov
fnstenv
and
fs
movsb
push
test
and
pop
jns
daa
or
lods
add
add
add
adc
loop
cmp
scas
stos
test
mov
inc
or
xchg
cmc
out
jne
sbb
divb
jbe
sbb
test
jecxz
js
or
sub
insl
push
sub
push
dec
sub
sub
sbb
je
inc
lahf
hlt
xchg
push
add
imul
xchg
push
or
mov
pop
int
icebp
xchg
sbb
xor
dec
inc
and
mov
mov
mov
pop
jnp
sub
aad
inc
jo
cmp
mov
inc
out
scas
pop
jb
mov
mov
rol
std
out
mov
lds
rolb
mov
leave
jecxz
insl
push
xchg
stos
xchg
inc
mov
adc
enter
dec
fiadds
cmpsb
mov
jecxz
adc
cltd
jmp
pop
mov
repnz
shlb
jge
xchg
das
sbb
push
lods
sbb
and
daa
add
pop
fs
jnp
pushf
out
imul
pop
repz
jp
aaa
mov
fisubrs
jge
loopne
maskmovq
negl
push
ret
dec
xchg
pop
inc
jmp
pop
fisubl
test
jo
dec
pop
or
push
leave
scas
hlt
cmpsb
lret
outsl
lods
cmp
mov
mov
jle
mov
push
div
into
mov
rcr
add
mov
sti
int3
aas
vpsrlw
jl
inc
adc
add
and
call
inc
ds
jno
mov
cli
mov
in
rclb
jo
cltd
sbb
xchg
add
js
std
jle
nop
and
lods
cmpb
icebp
in
stos
dec
int
adc
lock
stos
pop
mov
add
adc
out
mov
push
outsl
rcrb
in
and
sub
xorl
loop
mov
sub
add
mov
rol
inc
lret
push
shlb
mov
daa
mov
movsb
pop
xor
add
jne
mov
cwtl
daa
cmp
xchg
cmp
loope
mulb
dec
add
jg
pop
test
xchg
push
sub
push
popa
add
fwait
pop
addb
xchg
lret
and
jne
pop
jecxz
sub
dec
es
jns
push
daa
or
xchg
jg
mov
aas
jp
fwait
jle
or
lock
nop
ss
and
mov
std
pop
es
rorl
cmp
pop
add
sub
inc
sbb
loopne
scas
clc
sbb
xor
adc
push
test
shrd
xchg
fimuls
stc
andb
sbb
bnd
dec
int
scas
xlat
push
sub
and
and
es
loop
rcll
fwait
xlat
dec
push
xchg
in
jmp
sbb
dec
mov
nop
loopne
cmp
mov
jno
subl
inc
xor
push
jnp
xor
outsb
outsl
xchg
sbb
mov
fwait
aam
imul
movsl
xor
cltd
je
je
cmp
adc
xor
push
ret
jl
jecxz
mov
or
jp
popf
jg
jno
add
mov
push
adc
mov
pushl
shlb
js
push
xor
push
jo
dec
test
and
cli
xor
sub
daa
xchg
xchg
sarb
outsl
mov
jno
das
jmp
lret
scas
adc
cs
xlat
vsubps
scas
int
movsb
adc
jg
shrb
scas
dec
dec
push
test
sti
je
mov
or
data16
mov
or
movsl
dec
cwtl
sti
sbb
fs
data16
stos
outsl
cmp
inc
jns
xchg
jb
jb
mov
or
cltd
loope
sarl
ret
lds
outsb
fldcw
mov
cs
test
subl
and
aam
aaa
dec
jmp
enter
scas
xor
pop
xchg
out
and
iret
jbe
fistps
outsl
repz
xchg
dec
cmp
cmpsb
dec
cli
ja
mov
dec
aad
cmpsl
mov
addr16
lahf
jbe
xor
mov
out
int
lret
sub
hlt
fadds
clc
stc
dec
es
mov
call
pop
xor
lret
std
aas
push
ljmp
out
pushf
mov
popa
cmp
ficompl
sbb
outsl
push
push
cmpsb
fwait
cmpsl
mov
nop
and
and
lret
inc
rol
sub
adc
mov
sub
pop
sbb
stos
mov
iret
xchg
ret
jnp
jo
aas
cmpsl
jbe
imul
leave
adc
xorb
mov
sub
xor
popf
jge,pt
leave
pop
idivl
push
sbb
test
cli
lock
push
adc
push
mov
jno
or
sbb
enter
mov
pop
xor
aam
and
in
loope
pop
out
ss
ljmp
xchg
or
cmp
loop
mov
push
ljmp
sub
push
sbb
mov
cmp
cmp
inc
mov
mov
pusha
loopne
ret
push
mov
das
inc
das
mov
cmpsl
add
adc
cmp
push
push
add
clc
push
ficompl
stos
stc
ja
xchg
mov
rorl
das
or
or
stos
clc
push
ret
mov
cmp
lock
pop
fstl
and
ret
pushw
movsb
cmpsl
push
nop
adc
js
addr16
pusha
inc
push
sahf
sbb
inc
jns
std
mov
in
mov
mov
sti
lahf
scas
aaa
mov
andl
adc
cltd
icebp
push
data16
loope
inc
pop
ljmp
lahf
jns
ret
ds
call
mov
loopne
lods
or
neg
adc
sbbl
insb
data16
mov
cmp
stos
je
imul
pop
popa
mov
repnz
dec
sub
dec
std
fcoml
mov
cli
ret
push
and
pop
mov
mov
cwtl
add
cmp
aam
cmp
sbb
or
insl
mov
shlb
cld
fisubrs
jl
push
push
jge
sahf
or
in
fiaddl
insb
pop
scas
adc
xchg
push
cli
mov
clc
mov
pusha
mov
out
xor
push
xor
xchg
cmc
pop
dec
fsubrl
lahf
mov
sbb
test
sti
mov
fs
adcl
rol
mov
jns
dec
mov
loopne
int
scas
xor
push
imul
outsb
je
and
push
repz
mov
mov
dec
mov
dec
mov
xlat
jp
ficomps
push
jp
fisttps
adc
scas
add
ljmp
push
add
xor
iret
dec
inc
jmp
lds
add
pop
imul
pushf
pop
mov
push
mov
outsl
jecxz
shl
dec
xchg
adc
je
adc
jne
das
or
pop
mov
push
dec
repz
es
fcoms
shrl
outsl
iret
in
pop
jge
sahf
jno
push
push
xor
cmp
hlt
out
dec
push
es
mulb
jae
nop
shrb
cmp
mov
sahf
add
lret
std
movsb
xchg
mov
push
jne
cwtl
and
and
outsl
lret
mov
divl
add
pop
and
movsl
aam
icebp
cmp
jmp
popf
xchg
mov
mov
pop
push
cmp
xchg
popl
add
jb
out
lcall
into
in
lret
sti
outsl
xchg
sbb
mov
ret
jbe
add
xor
mov
push
into
xchg
out
shlb
xchg
pop
jnp
dec
sbb
pushf
sbb
mov
push
out
push
ret
sahf
hlt
mov
mov
add
pop
jp
push
add
pop
cmp
jbe
cmp
jmp
inc
ret
out
aad
test
adc
mov
rcrl
sar
dec
stos
shrb
fnsave
and
or
popa
or
mov
adc
add
divb
cs
pop
outsb
inc
cli
dec
mov
sub
hlt
rolb
sbb
xlat
popf
loopne
jp
and
sbb
mov
insl
popf
cwtl
push
sbb
stc
cltd
inc
dec
mov
push
imull
aaa
hlt
rorl
sbbl
shrb
mov
jl
popf
stos
test
jmp
testb
shrl
add
mov
jbe
in
xor
cltd
cmp
mov
mov
pop
outsl
rolb
js
std
pop
arpl
and
adc
aam
adc
dec
pop
mov
mov
xchg
subb
ss
pusha
rcrl
inc
mov
rolb
mov
popf
iret
das
lock
rclb
add
push
push
fwait
sub
jp
cmc
lret
mov
pop
outsb
mov
leave
pop
out
inc
outsb
dec
or
out
pushf
fadd
xchg
inc
and
adc
enter
faddl
in
int3
repz
out
or
popf
and
test
popa
cmp
std
and
fdivp
jnp
sbb
cltd
mov
cmc
imul
jmp
mov
ljmp
mov
lret
dec
scas
and
jg
or
movsl
pop
call
pop
out
pop
jb
test
cmc
mov
adcl
xor
add
mov
sub
addr16
mov
add
add
and
mov
daa
lret
sub
mov
cli
int
lahf
daa
inc
cld
sub
fidivrl
xchg
mov
icebp
sub
negl
gs
nop
hlt
cli
push
bound
jnp
dec
pushf
daa
into
pop
dec
inc
ret
pop
cld
xchg
push
bound
xor
jne
repnz
mov
shr
mov
pop
and
dec
sub
rcr
push
movsl
jge
ret
mov
add
mov
int3
or
cmpsl
push
jae
xor
int3
ss
lock
and
jb
mov
mov
int
lahf
leave
lcall
xchg
lock
push
cltd
mov
cli
dec
mov
jecxz
jmp
outsb
ror
fcoml
ja
insl
or
push
es
ret
icebp
test
cmp
sarb
pop
cmp
fstpt
push
lret
out
jo
pop
out
rcrb
inc
push
inc
arpl
mov
fsts
mov
bound
pop
lds
mov
or
cmpsl
fstpt
outsl
adc
cmp
inc
add
in
xchg
push
pop
jo
mov
cmp
clc
outsl
mov
add
std
call
popa
push
ja
cmp
pop
jbe
aas
jno
push
jg
push
sbb
mov
jle
and
dec
orl
test
cmpsb
pop
sahf
nop
lods
daa
inc
outsb
xchg
adc
sbb
sbb
call
and
jl,pt
ss
ficoml
stc
dec
lret
xchg
pushl
loopne
cmp
push
inc
jg
add
mov
cmp
and
cmp
inc
les
mov
sub
cwtl
outsl
add
push
xor
dec
rcrb
cmpsl
sub
xchg
repnz
pop
push
pop
pop
fsub
add
insl
cmp
sbb
outsb
stc
stos
jnp
lods
test
push
inc
mov
jg
xor
dec
int3
jo
fistps
ret
mov
test
sbb
imulb
pusha
xor
aas
mov
jecxz
je
adc
int
dec
xchg
mov
loop
sbb
popf
mov
xchg
je
fidivl
push
jns
or
ss
ljmp
pop
inc
ljmp
insl
int3
stos
sahf
sti
sub
lcall
fwait
sub
jecxz
add
mov
in
sub
sbb
int
mov
fwait
cmp
pusha
push
in
cmpsl
mov
rcll
loopne
mov
mov
mov
xchg
xchg
add
jmp
imul
pop
add
mov
inc
sub
mov
mov
cmp
ja
das
lock
mov
mov
push
or
inc
sub
mov
jecxz
pop
push
insl
push
xchg
or
xchg
push
ret
roll
and
cli
cmc
cmp
cltd
push
sahf
arpl
shll
mov
cwtl
mov
inc
ja
pop
ljmp
mov
outsl
hlt
sub
push
int3
cmpl
or
add
jb
push
pop
and
xchg
pop
adc
xlat
enter
fadd
push
frstor
filds
in
pushw
jle
mov
mov
push
xor
flds
repz
test
cli
xchg
dec
stos
dec
sbb
lods
mov
push
pushf
ret
mov
fldt
stc
sbb
out
sti
push
jne
mov
jb
pop
mov
gs
stc
sub
or
clc
cli
aaa
lods
pop
push
or
sbb
jmp
data16
add
arpl
push
idivl
das
jnp
mov
mov
push
inc
inc
das
je
and
add
inc
loopne
test
push
add
mov
pop
test
sbb
push
rcrb
sahf
out
cli
shll
push
nop
jns
das
js
jbe
dec
in
loopne
push
aas
add
test
cltd
lcall
and
nop
cld
dec
and
pop
jae
sbb
add
arpl
add
aad
sar
ss
mov
pop
add
sahf
inc
xor
cs
mov
xchg
xor
aas
jne
into
jnp
aad
dec
inc
addb
jnp
sarl
push
cmpsb
push
mov
mov
xor
lods
mov
scas
inc
mov
pop
jl
lock
les
pop
ret
add
or
jl
mulb
loop
movsl
or
pop
xor
push
jp
push
cmp
cmp
mov
movsl
pop
cmp
mov
pop
out
push
int
pop
jecxz
cmp
lock
cli
leave
mov
mov
icebp
shll
mov
cli
adc
popa
stc
jo
outsb
cmp
xchg
in
cmp
push
stos
push
push
mov
cmp
rclb
pop
or
loopne
shll
iret
lock
and
fmuls
cmp
insl
ret
push
mov
pop
je
les
pop
xor
in
sbb
rorb
xchg
arpl
mov
jle
test
aam
inc
loop
addr16
fistl
test
out
es
fcmovnb
add
pop
mov
and
xor
adc
mov
mov
adc
or
mov
in
outsl
mov
xor
add
ret
js
lret
mov
dec
scas
jle
fsubrs
inc
movsb
repz
xchg
push
outsb
andb
lret
mov
cmpsl
mov
stos
adc
mov
nop
stos
sub
xchg
jae
pop
and
fs
mov
lret
in
xlat
inc
push
icebp
das
jl
sti
daa
iret
loop
pop
jno
sub
xchg
dec
jp
or
stos
sahf
aad
add
push
aas
stos
int
scas
add
push
mov
fs
iret
imul
jl
mov
lods
popa
dec
add
jmp
negb
xorb
xchg
mov
and
add
dec
push
test
and
shl
push
cmpl
adc
dec
iret
push
xchg
pusha
push
mov
pop
mov
sti
pop
mov
in
mov
adc
mov
insl
lcall
push
rorb
sbb
imul
es
lock
mov
dec
pop
cmpsl
jne
cmc
xlat
aad
fsubs
aam
test
dec
pop
out
pop
xchg
pop
cmpsl
inc
push
push
pop
inc
call
stc
or
sbb
sarl
popf
dec
scas
sub
fwait
popf
mov
and
sub
cmp
inc
xor
jle
jl
xchg
cmpl
adc
mov
cld
popa
xor
jne
cmpsb
xchg
push
les
sub
or
dec
jle
into
loop
xchg
std
fldenv
mov
ret
push
mov
popl
xor
movsl
push
arpl
out
mov
xor
push
imul
cmp
outsb
sarl
push
mov
xchg
mull
cmp
mov
mov
push
sbb
icebp
push
xchg
stos
jecxz
xlat
xchg
je
add
dec
bound
mov
and
push
pop
add
sbb
imul
ja
lock
das
clc
mov
pop
xchg
adc
loopne
dec
test
cmp
jo
sbb
pop
xor
andl
cmp
adc
sub
jne
jl
sti
xor
xchg
xchg
cmp
push
xchg
cltd
pusha
addr16
fstp
mov
ret
insl
mov
in
push
sub
mov
push
push
dec
sub
sub
out
popa
dec
cltd
mov
fdivl
cmp
imul
cltd
arpl
bound
xlat
lods
imul
cltd
je
xchg
insl
js
sub
pop
push
je
imul
xchg
adc
sub
mov
push
xor
dec
fs
mov
add
or
xchg
mov
jbe
inc
insl
daa
mov
dec
cmpsl
mov
dec
imull
sub
js
cmc
pusha
pop
clc
enter
divb
xchg
jae
and
adc
popf
sbb
push
iret
cmp
cmp
test
mov
jbe
lcall
xchg
dec
push
movaps
mov
or
jge
lahf
fidivrl
flds
xchg
das
scas
scas
jo,pt
inc
mov
xor
popa
inc
and
mov
mov
xor
addr16
fmulp
push
dec
push
pop
add
push
push
add
dec
into
in
jmp
xorb
pop
jmp
outsl
pop
aas
mov
inc
ret
cmpsl
jne
pop
dec
jmp
add
fwait
add
sarb
jns
mov
push
sbb
test
loopne
add
mov
in
mov
bndstx
dec
stos
push
mov
fs
mov
lods
cmpsb
jbe
jnp
rcrl
mov
mov
xor
in
xor
cmp
mov
sbb
cli
flds
aas
cmp
xchg
icebp
and
leave
jmp
subl
pop
les
jmp
adc
pop
int3
xchg
dec
adc
enter
or
les
pop
imul
fstps
lea
inc
adc
jb
stc
jp
iret
or
pop
fdiv
adc
pop
mov
sub
cwtl
out
dec
adc
ds
add
push
leave
aad
lock
push
sub
loope
mov
push
adc
loope
xor
push
clc
and
dec
pop
pop
xchg
js
shl
int
jle
and
pop
scas
sub
call
add
pop
mov
xor
mov
lea
cs
into
movsb
sbbb
inc
cwtl
imul
mov
call
into
std
sbb
inc
or
xor
aad
jns
out
pop
push
mov
jge
push
arpl
xor
xor
mov
sbb
cli
sub
adc
sbb
fdivr
or
das
push
iret
dec
cmp
decb
adc
inc
shrl
mov
jnp
shrl
popf
out
mov
leave
int3
sub
fsin
dec
and
add
cmpsb
aam
push
inc
xor
xlat
jmp
push
dec
popf
and
dec
jne
inc
lods
add
insb
sbb
push
cmp
scas
cmp
push
imul
jo
and
xor
out
sub
mov
shlb
jp
int
fidivs
xchg
stos
mov
test
pop
enter
push
nop
hlt
popf
mov
push
mov
mov
or
mov
je
outsl
ljmp
push
mov
sub
pop
sbb
or
sbb
ret
cmpsb
sbb
ss
lcall
movsl
jnp
subl
and
mov
add
or
mov
push
imul
mov
fwait
imul
and
or
jae
adc
push
inc
int
jb
sbb
shr
and
jge
push
dec
jns
stos
push
cmp
jl
inc
push
adc
int
cmp
xchg
test
out
cmp
jne
pop
inc
xchg
mov
je
add
jne
lret
sub
jg
and
sub
popa
ljmp
outsl
leave
cmp
mov
xchg
xor
inc
jb
shrl
ss
in
stos
sti
pop
xchg
lret
sub
adcb
add
nop
add
xchg
repnz
les
jmp
jg
pop
adc
push
xor
mov
mov
xchg
and
in
or
adcb
xchg
movsb
xlat
sahf
rol
mov
and
mov
jb
dec
call
and
mov
and
hlt
inc
xchg
ss
sub
arpl
test
mov
leave
cmp
mov
or
pop
test
adc
pop
mov
push
xor
jne
icebp
out
mov
fdivs
leave
jbe
out
orb
nop
insb
mov
cmp
aad
leave
call
out
hlt
adc
pop
xor
jle
iret
cltd
mov
or
push
je
pop
jno
mov
call
cmp
out
loope
add
mov
fisttpl
sbb
pop
or
cmp
out
cmpsb
fisttpl
mov
jl
je
mov
lea
fwait
sbb
pop
jp
loopne
jae
jne
mov
lret
repnz
dec
xchg
lret
adc
in
mov
mov
inc
mov
mov
jno
addl
cld
push
jnp
mov
adc
loopne
inc
shll
inc
dec
jo
test
mov
mov
pop
mov
push
out
ljmp
pusha
popa
push
cli
and
xor
out
popa
fisttpl
jg
push
aad
jmp
stos
cmpl
mulb
test
inc
andl
push
xor
das
aad
mov
mov
out
neg
jmp
xchg
sbb
adc
sbb
inc
or
in
sub
popf
sub
lods
aad
jmp
repz
je
icebp
xchg
lock
jl
lds
test
inc
fldl
lret
pop
fcoml
dec
aam
and
lea
pop
mov
mov
push
sbbl
dec
pop
aad
sbb
lock
dec
jb
push
fisttpl
inc
addb
inc
push
fisttpll
push
mov
xor
mov
xchg
push
les
sbb
out
cld
stc
mov
cmc
inc
fcompl
dec
sti
mov
imull
and
inc
mov
fistpll
mov
jg
mov
push
cmp
ror
or
or
fsubp
jns
adc
add
lods
cs
fwait
int3
cmp
or
loope
fsubr
and
stc
lahf
fnstcw
cmp
pushl
daa
sub
push
addr16
pop
icebp
ja
dec
add
lds
mov
leave
hlt
loopne
out
fidivl
jns
push
aad
adc
and
cmp
and
stos
icebp
les
mov
icebp
outsb
cli
lahf
mov
pop
cli
mov
mov
das
iret
bound
xor
repz
xor
jge
mov
add
movsl
scas
sbb
shlb
sahf
mov
jb
out
imul
xchg
adc
les
stos
cmp
mov
test
jmp
mov
push
mov
xor
and
jb
sub
call
scas
ficoml
sarl
and
push
scas
inc
sbb
test
daa
and
dec
sub
cmp
gs
mov
or
in
sub
jge
test
rcrb
pop
pop
dec
jle
jno
inc
out
inc
or
xchg
mov
hlt
jge
call
sar
xchg
xchg
lods
popl
scas
fsubr
pop
xor
dec
arpl
xor
and
inc
adcb
or
icebp
lcall
insl
arpl
cmp
xlat
mov
dec
xlat
sbb
push
cmpb
sub
xor
inc
int
xor
xchg
insl
mov
xchg
rorb
dec
fstl
dec
sar
arpl
call
sbb
hlt
pop
mov
imul
scas
fs
cmp
rolb
aad
mov
xor
xor
xchg
inc
xchg
add
push
cld
xchg
sbb
test
fildl
fs
movsl
lret
sbb
sahf
popf
clc
mov
outsl
inc
sub
push
xor
adc
sbb
add
adc
push
sub
insl
movsl
xor
pushf
outsl
popf
idivl
test
mov
mov
dec
mov
cld
out
ds
sahf
movsb
push
push
jb
xchg
in
insl
and
push
add
adc
push
xor
mov
dec
ljmp
cwtl
lock
clc
gs
movsl
aas
and
dec
jle,pt
jmp
mov
fcmovu
imul
xchg
out
add
push
xchg
imul
mov
xor
sbb
pop
mov
data16
sub
add
movsl
lret
aas
jl
mov
mov
jb
mov
jge
xchg
push
aad
push
addr16
addb
mov
iret
cmp
test
dec
mov
mov
xchg
cmpsb
sub
mov
cwtl
je
and
stos
and
loop
xchg
sub
pop
jae
fbstp
rorl
or
xchg
cmp
pop
jbe
fstpt
cli
les
imul
sbb
mov
cmp
pop
lock
sub
arpl
lods
sbb
and
lcall
jmp
imul
sti
out
xor
shrl
sub
pop
mov
add
in
sbb
outsl
xor
cli
adc
fmul
loop
int
xchg
sbb
inc
aad
mov
mov
lea
aas
sahf
or
pop
outsb
mov
push
adc
adcb
cltd
icebp
xchg
arpl
shrl
and
cmp
sub
push
sbb
lahf
in
pop
xchg
xor
and
into
mov
dec
adc
pop
push
stos
stos
stc
add
popf
js
push
adc
add
push
repz
pop
xchg
icebp
jbe
in
test
adc
pandn
sbb
notb
or
lods
rolb
dec
in
xor
push
push
fisubs
inc
mov
and
add
and
add
sti
ds
xchg
adc
push
mov
test
cmp
jp
adc
lods
data16
and
les
mov
out
mov
in
xchg
pop
fs
inc
mov
cmp
loop
push
mov
stos
cmp
push
into
jle
aad
pop
bound
jns
sub
lods
popf
hlt
ds
into
gs
sbb
loop
fisttps
cmp
lea
in
cwtl
lea
mov
pop
outsb
mov
ss
pop
dec
ret
lods
lods
xor
test
in
je
cmp
xor
nop
push
pop
pop
fnstcw
mov
push
xchg
mov
add
fsubp
and
out
insl
pop
leave
xchg
int3
xorl
sub
and
inc
mov
mov
fidivl
test
arpl
out
fnsave
das
inc
add
popf
mov
adc
mov
xor
xchg
dec
pop
or
xorb
daa
cwtl
or
mov
out
aad
shlb
outsb
sbb
fidivl
push
and
pop
adc
fs
pop
mov
mov
adc
pop
out
shll
inc
jp
and
push
xor
test
lock
sbb
test
fadds
mov
cltd
or
mov
mov
jb
or
mov
mov
push
adc
jb
arpl
es
xorb
add
lods
sub
mov
sbb
out
in
add
push
cmpsb
cmp
lahf
dec
mov
je
cmp
mov
push
sbb
scas
loop
mov
repz
xor
adc
movsl
sar
sub
inc
out
pop
cmp
cld
push
cmpsb
lahf
leave
jecxz
pop
aas
lock
mov
mov
mov
popf
sbb
push
push
ficoms
xchg
adc
mov
cmp
adc
pop
daa
pushl
stos
fwait
in
push
cmp
mov
test
jnp
push
das
mov
lret
lret
or
jle
stc
adc
sub
inc
rclb
ds
fistl
inc
ret
push
daa
fs
icebp
pop
insl
mov
mov
cli
sti
cmp
push
addr16
das
sahf
adc
add
les
and
stc
in
test
into
push
dec
xchg
pop
ret
jmp
gs
out
pop
cli
mov
popa
sti
cmp
daa
inc
mov
aas
les
pusha
pop
sbb
jle
pop
fwait
scas
test
insb
inc
fcomps
sbb
insb
negl
ljmp
inc
inc
insb
cmp
jle
inc
hlt
xchg
push
jp
inc
inc
dec
std
aad
test
jl
test
insb
mov
xorl
fisubrs
ficoms
mov
inc
js
les
negl
xor
sbb
sub
push
fcoml
pop
shl
xor
inc
xor
mov
cmp
sbb
mov
mov
arpl
daa
or
mov
push
sbb
xor
ret
or
in
std
andb
mov
ja
les
scas
rcl
mov
pop
pop
insl
inc
divl
sarb
dec
mov
repz
cmp
sub
pusha
cs
jmp
jne
jns
jns
orl
mov
xchg
loope
in
clc
inc
mov
sub
pop
test
dec
rorb
dec
mov
addr16
lret
push
pushf
push
or
add
out
pop
jg,pn
sub
rcll
fbstp
jbe
cmp
ds
fistl
cmp
inc
mov
pusha
outsl
shll
jle
fwait
inc
jge
xor
mov
stos
jl
loop
daa
fcmovnbe
imul
cmp
sbb
xchg
cmp
clc
and
inc
addr16
adc
out
imul
jp
dec
and
inc
lret
jb
imul
and
dec
dec
bound
pop
cwtl
pusha
or
xor
leave
cmpsl
lds
sti
out
jl
pushl
mov
dec
inc
imul
mulb
notl
test
lock
popa
dec
aam
sti
inc
inc
lcall
stos
ss
xchg
test
dec
mov
cs
insl
pop
test
test
daa
icebp
movsb
inc
jp
vpmacssdql
cmpsb
sahf
mov
mov
sti
sbb
adc
imul
sub
idivb
pop
es
out
into
sbb
mov
dec
enter
icebp
cmp
add
cmp
movsb
shrb
mov
push
jmp
arpl
hlt
mov
setno
dec
jae
idiv
jge
mov
and
dec
popa
inc
dec
jae
pop
sahf
insl
fdivrl
and
pop
fcomip
sub
sub
push
dec
addl
scas
mov
mov
pop
push
adc
push
stc
mov
mov
scas
xor
je
iret
pop
cmp
je
enter
fcompl
loopne
aad
loopne
sahf
jae
dec
mov
xor
push
inc
jno
imul
in
aam
xchg
xor
push
mov
dec
sbb
sti
xchg
in
jb
adc
and
push
inc
test
push
dec
jnp
mov
cmp
hlt
cmpsl
mov
add
lds
rorb
pushf
loopne
or
jne
dec
add
mov
xor
iret
push
sub
mov
stos
addr16
jge
push
ljmp
arpl
sbb
scas
mov
dec
rorb
xor
and
repz
jge
into
int3
out
movsl
andl
je
outsb
hlt
popa
inc
cmpsb
fmul
mov
push
and
test
cltd
jecxz
popf
dec
or
mov
repnz
mov
jbe
aas
xchg
movsb
push
shl
jbe
lret
push
arpl
std
les
jnp
repz
mov
sbb
dec
inc
stos
lahf
ret
mov
test
div
jnp
and
gs
jae
hlt
or
popf
mov
pop
leave
insb
mov
dec
mov
shlb
call
aas
imul
xor
jmp
push
jecxz
pop
mov
jl
mov
mov
test
sbb
icebp
mov
pop
push
mov
jl
test
push
cmpsb
mov
loope
clc
cmp
ret
lods
pop
arpl
test
xchg
add
mov
dec
mov
push
fistpll
rorb
test
add
and
cmp
jb
in
jno
stos
cs
mov
adc
outsb
inc
lgs
xchg
inc
xorl
bound
mov
jo
in
sahf
jns
sub
jnp
cmp
mov
or
xchg
les
ss
and
cmp
xor
popa
call
popa
in
inc
dec
shrl
mov
je
xchg
jb
rcrb
aaa
cmp
pop
pop
jg
and
popf
mov
dec
xlat
inc
pop
movsl
nop
gs
sahf
or
outsb
pop
cs
clc
ds
or
repz
xor
dec
in
ds
xor
fidivrl
or
pusha
sbb
stos
and
int3
out
test
jp
xchg
cmp
push
sub
mov
mov
andb
xlat
insb
or
call
clc
mov
bnd
pop
push
inc
xchg
pop
jle
repz
daa
js
test
mov
sbb
push
push
std
insb
mov
rcll
outsl
ds
idivb
div
mov
mov
or
test
and
mov
sub
test
movsb
pop
cltd
fidivrs
cs
push
rclb
in
jae
sbb
inc
xchg
out
push
xchg
fstpt
push
loop
stos
rcrb
insl
pop
fstpt
cmpsl
sbb
iret
shll
mov
xchg
sbb
out
or
loope
out
shr
iret
cli
iret
das
mov
xor
pop
pop
pop
fldl
testb
icebp
mov
mov
jecxz
mov
add
fwait
inc
pop
or
cli
adc
es
xlat
bnd
xchg
rorl
test
cld
sbb
push
lock
shrb
pop
jae
mov
xlat
clc
cmc
cli
mov
int3
sti
add
mov
or
dec
loopne
std
jnp
push
movsb
adc
add
mov
pop
in
cs
sar
xchg
push
pop
sbb
adc
pop
xor
dec
push
in
jo
out
into
orl
mov
test
pop
andl
dec
or
cmp
lea
cwtl
mov
inc
push
push
out
add
inc
mov
call
pop
push
and
gs
adc
dec
sbb
xor
ret
inc
shll
mov
daa
lods
cmpsb
in
repz
pop
lahf
cmp
repnz
ret
mov
mov
lea
adc
out
cwtl
mov
sub
inc
add
lcall
add
leave
sti
push
pop
dec
mov
sub
out
imul
mov
push
dec
and
pop
inc
cmp
cmpsl
add
stos
sub
mov
arpl
dec
fcmove
imul
pop
or
xlat
nop
enter
sub
push
loop
xor
jmp
dec
pop
ss
rcrl
ss
cmp
dec
in
pop
cmp
inc
adc
addl
lods
das
inc
ja
cs
ret
cmp
in
inc
pop
lock
out
fisubrl
push
xor
pop
test
mov
or
sbb
enter
int3
pop
jge
sbb
mov
fwait
mov
aaa
dec
stc
ret
in
cmp
add
gs
and
xchg
jns
hlt
mov
stos
sub
outsb
dec
das
xor
dec
sbb
hlt
and
xchg
xlat
xor
jo
in
cs
std
ss
pop
imul
nop
fcom
add
lahf
mov
stos
sub
js
cmpsb
xchg
mov
push
cmpsl
test
mov
push
sbb
fwait
inc
js
dec
xchg
jno
sub
sti
sbb
inc
rcrl
jle
insl
dec
nop
jl
jp
inc
cld
stc
int3
clc
js
clc
push
jl
clc
sbb
popa
and
or
adc
fnstcw
xlat
mov
call
out
ret
pop
or
ret
sti
inc
out
rcl
imul
add
and
mov
aad
fildl
push
pop
cmp
xchg
lock
cld
arpl
inc
lods
xor
popf
push
out
dec
mov
das
adcl
push
loopne
pop
push
or
stc
or
mov
fdivl
stc
insb
fcmovnbe
lods
mov
and
pop
mov
test
lahf
outsl
push
mov
pop
lret
add
pop
mov
add
lock
cmp
sub
xchg
imul
cmpl
and
sbb
push
mov
sahf
ret
jmp
out
add
pop
inc
into
jecxz
sahf
push
aas
rcl
jecxz
addl
pop
and
dec
ret
mov
push
cmp
mov
ret
mov
sbb
lret
pusha
inc
loope
or
in
movsb
out
sahf
std
outsb
jns
jmp
rol
xor
dec
sub
int
xor
decl
adc
fistpll
mov
gs
imul
clc
bound
cld
or
data16
cmp
repnz
cli
mov
mov
lea
rclb
jp
xor
sbb
lahf
in
jecxz
cmp
push
xchg
andb
sbb
loopne
aas
sbbb
xchg
cli
test
lcall
and
popf
lahf
divl
movsb
aas
adc
and
xor
sbb
stc
movsl
scas
test
adc
in
push
or
popf
ljmp
cltd
lahf
pop
icebp
pop
adc
cmp
loope
shlb
daa
pop
ret
mov
xchg
ljmp
xchg
ret
or
in
fs
inc
cmp
bound
mov
lcall
mov
xchg
push
enter
mov
and
xor
leave
mov
mov
rcl
lods
out
orb
mov
loopne
rcrl
sbb
idivl
hlt
push
or
nop
sub
stos
xchg
mov
addr16
sub
sbb
inc
push
mov
test
in
or
or
faddp
ds
mov
aad
inc
aaa
fistpll
mov
xor
int3
push
into
adc
cmpsl
jo
push
pop
cli
inc
stc
mov
mov
xchg
dec
fstl
mov
ljmp
inc
push
stos
sbb
cmp
lret
sub
aam
cmp
fs
lret
cmp
cmp
ljmp
xor
and
xor
push
push
cli
jb
mov
sub
int3
pusha
ljmp
out
pop
aad
scas
test
xchg
lcall
sbb
jmp
lock
xor
pop
cli
add
xlat
mov
rep
pop
pop
pop
xlat
stc
ficoms
add
imul
pop
ror
std
movsb
imul
push
ja
cmp
sahf
lar
adc
sub
out
in
inc
popa
hlt
fdivs
add
fildll
aad
popl
fmuls
inc
mov
push
cltd
enter
aam
inc
jecxz
jp
pop
or
xor
mov
frstor
pop
xchg
gs
push
xchg
mov
mov
pop
add
mov
pop
je
mov
add
sbb
out
push
and
sub
jecxz
cwtl
sahf
icebp
out
cmpl
adc
cmc
mov
stc
dec
and
out
je
adc
push
fbstp
pop
sbb
fstl
cli
mov
movsb
push
xor
xchg
int3
fcomi
das
cmp
out
cmpsb
mov
jle
xchg
xchg
lret
add
mov
call
out
push
mov
int3
or
cld
inc
inc
shrl
cwtl
lahf
mov
jb
pop
push
out
dec
in
xlat
add
gs
daa
ficoms
cmpsb
fiaddl
cmp
out
gs
daa
iret
jns
inc
movd
cmp
scas
sbb
mov
popa
push
push
popf
shl
push
and
push
push
ficompl
mov
push
mov
test
faddl
push
inc
test
push
and
stc
adcb
js
mov
xchg
push
rcrl
fildl
cmp
mov
imul
xor
imulb
fidivs
inc
std
jge
push
shll
xchg
jge
in
push
mov
jl
fwait
jbe
xchg
test
sahf
test
das
out
shld
inc
push
xchg
shlb
sbb
sbb
and
mov
inc
xlat
mov
push
jp
adc
push
or
ficompl
xchg
lcall
pop
push
pop
cmpsb
loopne
enter
mov
out
mov
mov
stos
test
fisubrs
aaa
adcb
es
aas
addr16
pusha
test
pusha
or
sbb
xor
mov
push
out
mov
add
pop
pop
aad
xor
and
sbb
cmp
shll
add
sub
inc
adc
add
inc
jo
inc
add
dec
push
pop
push
mov
call
cmp
sub
or
mov
pop
dec
cmpb
sub
loope
nop
repz
add
pop
movsl
test
idivl
movsb
dec
aaa
fisubl
jecxz
nop
or
call
xchg
cmp
add
xor
sahf
call
sbb
jb
mov
cmpsl
sahf
mov
sti
jnp
lods
sbb
xor
or
and
sub
pop
fmulp
je
xor
fmulp
inc
cld
jmp
frstor
cmpb
ss
sub
mov
insl
popf
or
into
adc
pop
push
push
push
sub
fmull
mov
lret
nop
push
movsl
aas
lds
push
jl
mov
fisubrl
cmp
rcl
jns
pusha
les
adc
sbb
xor
pop
or
pop
xor
andl
sbb
pusha
enter
sub
lods
je
xorl
adc
test
daa
or
sub
shll
xlat
mov
outsb
ds
je
inc
cmpsb
daa
sti
adc
popf
leave
mov
cs
add
pop
in
dec
pop
xlat
lea
inc
xchg
mov
inc
fimull
imul
sbb
lea
xchg
out
scas
pop
inc
call
mov
repnz
jp
jns
test
push
xor
push
fwait
dec
dec
sahf
sarb
sbb
mov
adc
call
adc
mov
lahf
insb
sbb
sbb
out
out
ret
mov
cltd
jo
push
and
inc
repnz
lret
inc
adc
and
or
add
or
mov
dec
roll
xchg
push
mov
pop
roll
jecxz
add
sbb
push
addb
orb
xor
fwait
cmpsb
rorl
add
sbb
lea
mov
and
cmp
lods
cmpsb
repz
push
leave
push
jb
or
xor
ret
sbb
into
push
out
cmpsl
push
pop
pushf
sub
push
sub
cmpl
xchg
xchg
mov
jb
popf
aad
jns
lret
adc
cmp
stos
enter
jae
icebp
ja
and
xchg
xchg
mov
push
out
fs
int3
leave
vandps
in
loopne
fmul
cmpsb
fcompl
mov
aas
aad
aas
add
repnz
ret
out
push
mov
push
cld
sbb
fdivrl
sbbb
pop
cmp
in
fsubrs
dec
fadds
pop
pop
add
mov
mull
xor
mov
jno
dec
outsb
inc
mov
xchg
jp
stos
mov
adc
arpl
push
xor
inc
stc
cmp
bound
sub
sbb
test
xchg
mov
repz
jecxz
cmc
fstpt
mov
nop
add
push
insb
rcr
mov
aaa
xchg
add
jg
insl
ss
cmp
neg
lret
mov
mov
popa
adc
fwait
jl
push
mov
dec
pop
fidivs
loope
test
sub
jae
in
in
mov
lcall
xchg
mul
add
dec
mov
inc
lds
mov
in
fists
scas
sub
repnz
xchg
out
xlat
aad
pop
push
daa
jl
ds
stc
jmp
rcr
jmp
xor
repz
add
cli
sbb
lds
fnstenv
mov
jbe
or
in
out
ss
ss
push
mov
fsubs
fwait
dec
xchg
daa
fucomp
cltd
fistl
sub
test
fsubr
cmp
mov
mov
cmp
mov
xchg
push
lds
sbb
push
addl
sar
mov
inc
push
aad
mov
decl
loope
xchg
dec
xchg
push
xlat
mov
ljmp
adc
cli
cmc
dec
mov
dec
insb
inc
pop
mov
xchg
data16
outsl
jg
daa
movsl
jo
pop
sub
aam
mov
mov
sbbb
shll
fistpl
pop
test
je
fbstp
xchg
dec
fstl
pop
lods
and
inc
mov
mov
stos
sub
cmp
shrb
js
pop
fwait
sahf
out
lods
fs
pop
ja
js
sub
or
xlat
pop
stos
imul
arpl
mov
icebp
jo
sub
leave
loop
fwait
jb
pop
lods
pop
inc
jb
push
xor
pop
push
int
pop
cmp
push
xor
lea
repnz
test
sub
push
cld
or
mov
lahf
sub
push
or
cwtl
imul
sbb
cli
lods
test
push
push
fst
add
mov
xor
stc
xor
repz
mov
cld
or
sbb
xchg
pop
dec
pushf
xchg
mov
pop
insb
psubd
int
bound
aaa
out
js
lods
adc
leave
jmp
pop
mov
jp
addr16
fs
lods
inc
and
rclb
mov
lahf
push
negb
mov
sub
mov
fabs
push
loopne
mov
jnp
add
int
dec
pop
cltd
sbbb
jp
fsubl
xchg
mov
lret
lods
push
cmc
sbb
xor
pcmpgtb
jmp
jmp
rcr
mov
or
mov
cwtl
aam
mov
lahf
push
mov
sbb
int3
adc
aad
push
jecxz,pn
mov
sbb
inc
mov
and
sub
inc
es
mov
mov
shrb
ja
popf
jnp
popa
int3
dec
mov
pop
jmp
mov
mov
jbe
xor
jne
mov
cmp
cmp
push
fistl
xchg
inc
addr16
stos
decl
xchg
out
mov
lcall
sbb
xor
dec
lret
cmc
push
stos
mov
jg
roll
push
std
add
mov
mov
adc
inc
xchg
xor
testl
jne
mov
repnz
out
xor
push
pop
out
lock
lcall
xor
xor
fisubrs
push
popa
mov
mov
push
je
in
mov
mov
inc
inc
cs
adc
aaa
fists
jg
push
fabs
cmp
loope
fadds
mov
iret
mov
shll
je
sarb
xor
mov
inc
aad
out
out
mov
sbbl
jns
outsl
sbb
rorb
outsb
cmp
int3
in
cltd
lds
mov
pop
xor
test
pusha
inc
icebp
aad
bound
jbe
test
ljmp
pop
mov
fwait
xchg
sub
jne
jbe
xor
mov
inc
xor
sub
push
fstp
mov
imul
pop
jle
pop
jp
sbb
cmpsl
pop
aaa
sti
test
repz
mov
imul
add
and
cmpsb
in
inc
in
int3
es
in
cmp
loop
jmp
dec
xorb
fwait
adc
inc
out
outsl
xor
cmp
push
in
mov
mov
outsl
movsb
arpl
xchg
icebp
popf
pop
call
and
push
cld
in
mov
popa
mov
mov
push
je
ss
xor
std
push
and
cmp
iret
or
lcall
aad
rol
pushf
repnz
sarl
sub
lock
fwait
mov
mov
jbe
shll
jae
push
jbe
lahf
fsubrl
pop
mov
pop
mov
jne
mov
push
scas
xchg
xchg
pop
sbb
loop
pop
xor
push
push
out
lret
nop
test
adc
or
insl
pop
in
mov
out
mov
shll
cmp
pop
mov
push
lcall
ss
jl
outsl
mov
mov
and
lods
cmp
inc
cmpsl
and
insl
jle
stc
inc
lret
out
dec
mov
adc
imul
xlat
loop
rcr
into
aas
sbb
out
and
dec
aad
cmp
adc
cmpsl
add
js
das
push
and
clc
sub
push
or
stos
xor
push
jmp
mov
push
mov
adc
push
ds
loope
pop
sub
std
out
dec
pusha
stos
xchg
mov
das
into
push
xor
in
pop
pop
mov
repnz
push
or
mov
daa
adc
mov
aas
adc
add
mov
loop
sub
cli
into
xchg
mov
notl
xor
mov
and
lret
push
fidivs
mov
cmc
ljmp
jne
stos
and
dec
jbe
jle
testb
pop
clc
pop
out
xchg
mov
push
pop
pop
xchg
cmp
cmp
cmpsl
push
jmp
adc
les
cmp
frstor
mov
icebp
out
in
sbb
dec
popa
xchg
fs
ret
xacquire
push
out
jno
insb
and
fists
mov
dec
cmp
std
aad
inc
rcrl
int3
pusha
jl
outsl
daa
ja
fucomip
xor
mov
out
push
sub
fldt
xchg
shl
cld
in
mov
sub
or
sbb
jne
lock
xor
cmpsb
sti
push
aas
ja
repnz
sbb
push
testb
mov
shrb
cwtl
scas
jge
push
push
cwtl
out
rcrl
fsubrl
stos
add
in
outsl
sbb
insl
push
js
adc
data16
dec
and
ret
loopne
stos
xchg
jl
jae
xor
mov
imul
jae
mov
push
or
mov
jne
je
mov
scas
push
rcll
fnsave
lock
dec
test
mov
clc
jge
into
stc
lods
mov
shl
or
pop
insb
mov
outsl
ja
sbb
rcll
cmpsl
inc
sbb
push
in
movsb
xchg
sub
loope
sbbl
out
sti
pop
xlat
push
lock
inc
push
jmp
cmpsb
xorb
test
or
arpl
popf
mov
fbstp
imul
mov
lea
mov
popa
dec
test
in
into
sbb
out
inc
in
je
fst
icebp
mov
adc
test
cwtd
cmp
repnz
out
sbb
cltd
sahf
or
fildll
pop
insb
adc
or
jl
fsubl
cld
aas
arpl
scas
lods
cmp
aad
jg
mov
push
mov
aas
mov
outsb
lret
lods
ror
pop
push
outsb
fdivs
notl
das
jge
fdivl
pop
mov
int
mov
add
jle
lods
shlb
dec
sbb
push
jg
pop
dec
mov
lock
repnz
lret
or
dec
adc
std
mov
cmp
aas
js
push
lret
nop
mov
pop
sbb
dec
leave
xor
cmp
mov
xor
mov
outsb
dec
sahf
push
les
sub
inc
push
or
aad
sti
jl
inc
mov
jns
and
push
in
xchg
clc
sbb
add
push
push
out
sub
or
repz
fst
jne
xor
test
or
adc
push
adc
xor
xor
scas
mov
mov
das
mov
lret
xchg
int3
xlat
fbstp
cmc
movsl
xchg
jmp
in
scas
loop
iret
aad
mov
ret
fcmovnb
cmc
scas
ret
sbb
sbb
popa
scas
fs
cmpsl
daa
pop
pusha
imul
lds
push
lcall
cmp
push
pushf
and
imull
xor
and
push
mov
jo
test
jns
jecxz
xchg
mov
inc
ja
fcmove
pop
push
aaa
push
cmc
xchg
pop
popf
pop
xchg
popf
insb
sbb
loope
loop
jp
pop
mov
mov
xchg
adc
shl
fcomi
js
test
in
sub
push
stc
andl
mov
movsb
or
xchg
or
inc
or
subb
sub
push
ja
fcmovnu
mov
push
sarl
aas
cmpsb
mov
out
sbb
insb
xchg
and
sbb
cmp
fdivp
data16
mov
rcrl
cmp
jo
ret
mov
sbb
pop
xchg
mov
adc
inc
mov
das
lcall
aas
ret
sbb
push
ds
addr16
dec
xor
ror
push
pop
adc
adc
fs
mov
jns
inc
popa
repnz
jns
dec
repnz
sbb
adc
or
add
mov
xlat
inc
or
rcl
push
inc
adc
les
xlat
shlb
mov
xchg
xchg
movsb
scas
sub
dec
sbb
fs
xor
scas
add
stos
push
clc
jecxz
cmpsl
push
xchg
cltd
fisubl
loopne
push
aam
pop
imul
or
das
aas
lret
cwtl
cmc
sub
adcl
or
xchg
fidivs
int
xor
cmp
mov
xchg
sbb
dec
sahf
test
stos
roll
sbb
or
movsb
fdiv
nop
int3
or
cmpsb
pop
jp
push
call
jns
add
int
shl
imul
mov
rcrb
xchg
jo
test
iret
subl
ds
icebp
xchg
or
imul
mov
mov
fnstsw
repz
inc
test
movsl
pop
pop
add
jg
adc
pop
into
jne
inc
rcrl
xchg
sbb
adcb
outsl
hlt
add
nop
xchg
jo
lahf
jmp
push
mov
jge
pushf
jns
cs
xor
mov
repz
insl
push
xchg
xchg
pushf
add
lods
lret
mov
cmp
cmpsl
fsub
daa
inc
aas
xchg
idivb
mov
pop
cld
loope
sub
mov
fwait
arpl
lcall
aas
movsb
repnz
mov
sbb
mov
fsubrl
rcr
cmp
clc
out
imul
enter
repnz
es
das
push
cmp
out
sbbb
sbb
scas
adc
shrl
adc
out
xor
jmp
clc
addr16
stc
xor
int3
lahf
out
add
or
mov
xchg
ret
jb
cmp
aas
pop
notl
outsl
lret
pop
sbb
aam
inc
mov
clc
aaa
aaa
cmpsb
or
aaa
mov
aaa
nop
je
cmp
jg
jmp
cmp
push
mov
ja
mov
aad
int3
and
dec
call
cltd
sahf
add
sbb
jno
imul
ret
outsb
xchg
inc
ds
or
rol
add
scas
mov
cli
test
arpl
and
pop
ss
mov
pop
xor
sub
mov
testl
sbb
inc
sub
xchg
cmp
xchg
adc
ja
jecxz
adc
inc
clc
or
insb
add
lahf
pusha
pop
mov
and
aam
push
out
pop
movups
push
pushf
xchg
inc
ds
gs
cmp
ret
incl
test
aas
jp
shlb
mov
jge
jecxz
hlt
or
stos
dec
inc
lods
push
jl
and
adc
jecxz
adc
mov
xor
dec
shll
xchg
out
pop
xchg
lret
lcall
in
inc
inc
scas
sbb
xchg
xchg
jmp
leave
push
mov
ja
or
push
cmp
scas
mov
push
in
jg
mov
pop
cmp
call
lcall
imul
inc
lret
or
push
ret
add
scas
bound
xchg
scas
pop
stos
or
repz
es
rcrb
pop
jecxz
sti
leave
pop
push
test
xchg
daa
lock
sub
insl
dec
repz
jbe
cld
insl
mov
popa
es
out
cli
push
sbb
push
adc
lret
adc
sub
stos
cld
xor
push
add
fwait
or
mov
fstp
and
dec
sbb
inc
in
inc
dec
loop
popl
adc
stc
dec
and
xlat
mov
cld
jb
push
push
jno
outsb
sti
sbb
jbe
bound
mov
stc
rorl
das
cmp
jns
enter
loop
xchg
nop
inc
adcb
data16
lea
push
hlt
sbb
mov
mov
jge
dec
lea
adc
add
mov
mov
pop
mov
push
mov
inc
cltd
xor
and
outsl
bound
hlt
xlat
stc
and
arpl
stos
sbbl
out
cmp
movsl
push
inc
out
aad
test
pop
outsb
mov
out
std
rol
mov
lcall
lods
sti
push
scas
ss
js
jbe
mov
frstor
out
push
mov
cli
pop
xchg
loop
sbb
ret
ret
mov
mov
or
rorb
testb
cmp
mov
out
stos
fwait
sbbb
adc
int
add
sub
adc
mov
and
xchg
data16
xor
sub
xor
adc
dec
pop
imul
dec
xchg
sub
icebp
push
xchg
xor
enter
andl
imul
xor
and
mov
cmp
ljmp
or
popa
xchg
sub
or
adc
insb
in
jns
cmp
adc
inc
sub
fwait
sub
roll
or
and
std
pop
push
jo
leave
dec
popa
xchg
add
xlat
add
stos
xchg
addl
xchg
adc
mov
fidivrl
pushf
jb
insb
ret
inc
les
and
dec
adc
imul
in
cmc
inc
inc
sbb
adc
pop
movb
adc
inc
cli
sub
cmp
sub
mov
xor
jb
jle
jno
ficoms
or
xor
add
out
lock
push
pop
cmp
mov
jmp
or
movsb
hlt
or
loope
mov
lods
outsb
adc
data16
xchg
jge
pop
dec
push
lcall
adc
insb
push
push
jns
add
mov
test
pop
or
mov
outsl
sub
ret
cmp
adc
sub
adc
ret
add
sahf
and
out
adc
mov
and
scas
xchg
dec
mov
leave
negb
sub
clc
or
mov
mov
lds
adcl
insb
jnp
cs
jl
imul
movsb
inc
pop
sbbl
xor
cmpsl
sub
xchg
cmp
push
dec
aaa
xchg
shl
loopne
inc
pop
xorb
push
stc
jnp
inc
pop
mov
stos
or
cltd
xchg
push
add
cmpsl
add
fwait
sbb
adc
mov
mov
or
cmc
sub
xchg
fs
rcll
movsb
push
add
push
addr16
adc
mov
or
movb
add
call
sarl
xchg
jno
dec
mov
sub
and
jp
push
mov
adc
and
adc
test
sahf
pop
dec
cmp
xlat
mov
orb
nop
test
jbe
or
xchg
mov
push
fwait
rcrb
xchg
ret
mov
fisttps
aaa
popf
inc
daa
outsl
dec
xchg
cli
mov
clc
lret
add
lods
push
fucomip
pop
xor
mov
out
and
cmp
mov
lods
cmpb
jmp
decl
cmc
test
test
sahf
les
jo
push
mov
jae
add
mov
aam
or
hlt
xlat
andb
xor
add
push
pop
dec
sub
jne
fcompl
adc
fstpt
mov
inc
cmp
or
mov
mov
dec
imul
lea
push
rorl
aas
dec
shrb
ja
xlat
shlb
xchg
cmp
fisttps
adc
lock
dec
jecxz
dec
repnz
and
mov
or
cld
enter
arpl
imul
sbb
mov
mov
add
mov
fidivl
push
pushf
xchg
out
loopne
pop
push
dec
inc
sbb
xor
pop
dec
sbb
cmp
pusha
rclb
jg
aaa
stos
fucomp
mov
fmull
push
inc
sub
in
xor
mov
cmp
andb
inc
fmull
adc
js
jne
dec
cs
inc
or
aad
sti
sbb
movsl
inc
pop
push
mov
ds
fisubrs
add
stc
in
sahf
xor
addr16
imul
test
jmp
mov
inc
rep
hlt
sbb
dec
icebp
rolb
and
or
fcmovnbe
mov
lock
dec
pop
mov
sub
inc
scas
xchg
push
imul
dec
inc
mov
inc
xchg
cmp
xchg
lods
sahf
jle
xchg
orb
xchg
cmc
insl
xor
bound
data16
cmp
fucom
adc
dec
inc
pop
or
fnstcw
fdivrs
pop
xor
or
xchg
xchg
xchg
sbb
dec
fwait
dec
lds
and
mov
mov
aam
xchg
test
sub
scas
loop
int3
lock
enter
dec
push
and
neg
mov
dec
aam
inc
xor
mov
jmp
sbb
adc
bnd
inc
sbb
shll
lahf
out
sub
inc
mov
jmp
pop
adc
aam
mov
cwtl
cltd
and
test
inc
push
xchg
push
loop
movsb
arpl
sbb
mov
push
sub
push
movsl
arpl
fmuls
xchg
ficompl
mov
pushf
in
and
mov
adc
sahf
and
repnz
adc
outsl
out
inc
inc
ret
xor
jmp
out
bound
in
xchg
mov
dec
insb
xor
cmp
je
aas
sbb
es
inc
mov
arpl
add
aad
sub
ds
aam
pop
lret
adc
pop
pop
dec
push
sbb
ret
adc
add
jmp
sub
sub
adc
jmp
rorb
sbb
xchg
mov
scas
aam
pop
pop
rcrb
ja
arpl
inc
pop
nop
shll
leave
fcomps
inc
push
or
leave
mov
adc
cmp
lock
jnp
cmp
inc
hlt
fadd
xlat
cmp
lds
hlt
int
in
movsb
fcoml
or
adc
mov
sbb
sub
dec
imul
sbb
movsl
mov
fisubl
es
lret
sub
lahf
inc
xchg
dec
addr16
in
xchg
sti
lret
jb
or
jg
sbb
pop
call
test
sahf
xor
mov
mov
cmp
push
mov
mov
movsb
stos
adc
hlt
adc
sbb
mov
dec
sub
clc
jb
shl
shlb
imul
cmp
test
lahf
cmc
cmc
nop
xor
cmp
test
mov
pop
mov
cmp
lods
lret
mov
mov
and
lcall
adc
shll
insl
loop
aad
enter
mov
and
mov
es
sub
push
mov
ja
push
xchg
dec
sbb
in
ret
pop
lret
jae
icebp
hlt
inc
inc
aam
add
push
or
outsl
stos
popf
shlb
nop
ds
push
mov
push
mov
push
xchg
sbb
enter
and
push
xchg
insb
outsl
rcrb
je
lock
mov
aaa
test
sub
mov
adc
add
cmc
adcb
push
mov
mov
xor
les
ret
je
sahf
sub
mov
dec
and
lret
test
rolb
add
mov
rcl
out
inc
mov
enter
add
lea
push
add
shrb
js
xor
stc
sub
movsl
dec
xchg
mov
add
pop
movsl
cmc
mov
cmp
xchg
xchg
mov
jmp
fwait
pop
jecxz
mov
les
pop
mov
add
fst
mov
xor
pop
fsubrs
and
cmp
mov
out
icebp
push
bound
xor
and
mov
sub
int
jecxz
test
out
mov
jns
push
mov
and
adc
add
mov
mov
sub
cs
jo
popa
push
pusha
into
ds
push
ss
inc
testb
mov
ret
pop
imul
pop
and
sub
mov
sahf
test
scas
adc
mov
scas
xchg
por
sbb
fdiv
das
or
movd
sti
testl
hlt
pop
inc
cmp
jmp
jg
or
pop
xor
pop
incb
out
and
shl
mov
sbb
shlb
cmp
cmp
adc
push
scas
insb
mov
insb
scas
out
dec
inc
mov
repnz
cli
inc
mov
xor
and
dec
mov
cmpsb
adc
fmuls
or
dec
pop
repnz
xlat
jecxz
pop
xchg
popa
jp
push
cmp
mov
rol
xlat
loop
aad
push
pop
mov
push
in
clc
pop
cltd
jb
setb
shl
sub
jb
cwtl
mov
jb
ljmp
loop
mov
cwtl
into
mov
push
outsl
jae
fisttps
fsub
dec
mov
fsubr
inc
xor
push
mov
outsl
sub
mov
xchg
dec
inc
dec
in
and
mov
rcr
mov
mov
inc
add
and
push
mov
in
mov
rcl
mov
scas
fistpl
mov
jno
inc
ror
xor
dec
ja
imull
mov
push
push
rol
mov
sub
jb
pop
sarb
or
pop
pop
insl
idiv
popf
jmp
or
or
aaa
leave
cmp
out
jb
mov
daa
mov
sbb
xor
mov
lret
jecxz
jp
data16
enter
mov
into
stc
jno
mov
mov
cltd
cli
dec
cld
ficompl
sti
aam
mov
inc
leave
clc
movsb
mov
arpl
cmp
cwtl
cli
adc
testb
cmpsl
add
into
and
and
mov
jmp
and
mov
lret
pop
xchg
xor
sbb
mov
mov
fcmove
punpckhdq
lahf
out
ja
push
ds
add
adcl
xor
cmp
ret
and
mov
ret
pop
push
cmpb
and
call
lods
cs
adc
fnstsw
pop
in
es
mov
gs
push
push
inc
sbb
add
or
popf
jnp
dec
cltd
jns
movsl
movb
dec
scas
dec
dec
ds
into
rcr
and
cmp
sbb
ja
scas
xchg
push
pop
xchg
dec
test
fs
mov
leave
xor
sbb
pop
sbb
mov
mov
sbb
pusha
adc
push
add
jo
out
ljmp
mov
lds
dec
nop
push
int3
mov
popl
aas
mov
daa
dec
aas
shr
dec
out
sbb
movsl
mov
inc
adc
mov
push
xor
frstor
pop
stos
sub
pop
push
stos
dec
les
add
adc
mov
lcall
mov
not
add
push
out
lahf
jne
call
push
js
mov
ja
or
inc
mov
movsb
iret
add
mov
mov
pusha
and
cltd
aaa
xor
xchg
jb
jmp
cmp
cmp
int3
add
in
mov
jns
fmull
pop
es
or
xchg
pushf
mov
sub
sbb
pop
push
jnp
out
stc
sub
sub
inc
push
insl
xlat
xchg
je
pop
lcall
dec
in
inc
push
adc
sub
sarb
sbb
out
sbbl
inc
push
js
cltd
fldenv
mov
ficompl
xor
cmpsb
inc
jo
push
mov
add
sbb
jae
dec
add
std
jge
ds
sbb
ja
mov
pop
xchg
idivb
xor
addl
sub
shlb
dec
dec
repnz
negl
data16
test
movsb
lock
cmp
test
pop
mov
lret
inc
jo
stos
add
sbb
inc
pop
loop
gs
rclb
stc
imul
sub
push
sbb
ljmp
push
loope
ja
xchg
xor
mov
lret
addr16
outsl
add
inc
cmpsl
movsl
jno
mov
aad
cmp
adc
inc
hlt
mov
xlat
cwtl
pop
ficoml
fistpl
loop
add
sbb
aas
push
loope
adc
leave
sbb
and
bound
loop
addr16
xchg
gs
out
ja
mov
out
icebp
lods
cld
inc
and
nop
cmp
add
xor
dec
adc
dec
addl
scas
and
cmpl
inc
insl
daa
cmovs
rep
fwait
test
mov
jmp
or
inc
add
mov
pop
jecxz
and
and
sti
pop
out
popa
xchg
syscall
clc
in
or
in
mov
mov
inc
lret
push
adc
int3
pop
lahf
mov
jle
sarb
mov
lret
out
aaa
outsb
push
aad
jno
insb
outsl
jo
in
out
xor
jae
mov
ficomps
xchg
aas
mov
jbe
sbb
xchg
push
iret
mov
jno
and
mov
cli
ficoms
push
push
push
adc
mov
insl
fnstcw
addr16
int
cmp
movsl
pushf
pop
in
fwait
pop
inc
xorb
dec
fwait
imul
dec
dec
std
mov
or
pop
int3
xchg
xchg
mov
shr
scas
clc
out
add
mov
jmp
push
pop
fimuls
fisttps
sahf
mov
lahf
push
lcall
mov
loop
vdivss
imul
push
jp
pop
subl
lods
mov
pop
add
sbb
inc
fistl
mov
push
ret
out
leave
lahf
cmp
push
mov
jnp
loop
outsl
fidivl
pop
into
push
sbb
cmp
call
sbb
ret
mov
pop
mov
popa
sub
or
fdivrl
lahf
cmp
fxch
nop
mov
sbb
sarb
lea
push
and
cmp
bound
shl
aad
aaa
xchg
stos
sbb
clc
test
jo
or
arpl
outsl
mov
mov
je
lahf
aaa
fldenv
loop
xchg
nop
mov
cmpsb
pop
fwait
out
inc
cwtl
xchg
or
mov
and
mov
pop
pop
mov
add
repnz
adc
test
pusha
stos
lret
iret
iret
ficomps
es
fldenv
mov
and
mov
vprotw
sbb
inc
sub
mov
test
mov
fcom
ljmp
cmpsb
lock
fiadds
mov
mov
mov
gs
mov
mov
in
ret
jmp
gs
or
push
nop
js
mov
fsubs
lods
jbe
xor
add
mov
lret
in
lock
jg
inc
inc
jns
jp
jmp
das
pop
orl
pop
test
mov
mov
arpl
inc
mov
int
pushf
test
ret
cmp
dec
in
dec
mov
movsb
dec
mov
dec
mov
mov
pop
and
test
aam
jmp
add
cwtl
cltd
and
add
xor
mov
shll
jp
adc
imul
stos
jno
or
mov
mov
and
add
orb
popf
dec
out
mov
sub
jae
insb
ss
pushf
rol
loop
sbb
and
hlt
jae
mov
lcall
pusha
loope
push
bound
out
adc
jbe
pushf
xor
sbb
mov
insl
in
mov
imul
sub
sub
pop
jl
mov
and
inc
js
sub
pop
lahf
in
cltd
adc
add
jmp
push
xchg
inc
and
in
dec
mov
mov
jmp
add
push
dec
jle
jae
das
shrb
mov
and
into
jbe
mov
sub
arpl
imul
mov
in
inc
repnz
adc
out
sarl
jns
adc
add
xchg
sbb
cmpsl
movsl
std
and
iret
push
lods
les
dec
pop
aas
inc
icebp
jb
dec
enter
jg
pusha
es
loope
sbb
call
and
sub
movsb
pop
out
push
fsubl
popf
and
pop
add
sbb
cmp
mov
xchg
and
cmp
iret
rcrl
xchg
xor
stos
push
inc
cwtl
or
fwait
or
setae
mov
mov
push
xor
cld
sub
mov
addr16
sub
aad
les
or
inc
jg
dec
lock
fs
movsb
sbb
gs
test
dec
push
das
das
or
cmp
les
add
adc
mov
jae
sub
loop
cmpl
es
out
push
pop
sbb
repz
mov
adc
jle
sbb
mov
jo
scas
adc
and
iret
in
mov
sub
mov
push
test
pop
call
mov
mov
sbb
inc
rep
clc
ret
mov
push
and
and
inc
std
mov
je
push
adc
pop
and
pop
outsb
cmp
lock
stos
scas
inc
push
cmc
sbb
adc
mov
sbb
inc
mov
and
inc
aaa
aad
lcall
jle
loopne
mov
ds
dec
sbbl
jbe
movsl
decb
and
pushf
test
push
movsb
int
mov
cmpl
aas
fstps
nop
jns
xor
sti
in
mov
inc
into
xchg
pop
lea
sbb
dec
jp
inc
js
mov
enter
sbb
dec
into
dec
pop
xor
or
mov
and
jo
and
and
push
jl
loopne
ds
dec
jno
inc
adc
pop
dec
xchg
negb
aad
inc
cwtl
dec
add
lods
nop
in
test
mov
xor
jo
mov
jnp
cmp
cli
cmp
push
lea
mov
jno
loopne
ret
push
xor
das
ds
sbb
scas
fsubr
mov
or
mov
out
std
cmp
adc
stc
xchg
mov
mov
repz
add
or
fdivrs
mov
add
scas
sbb
or
jle
test
mov
jge
jbe
sahf
movsl
inc
cmpsl
dec
int
pop
jp
and
inc
add
and
and
nop
jnp
and
jo
daa
add
imul
fcomps
mov
addr16
lret
sub
add
dec
lret
cmp
test
inc
fnsave
mov
sbb
shl
jae
fistl
xor
xor
push
sbb
es
push
or
cmc
out
adc
pop
lods
int
xchg
mov
jl
cmp
xor
jecxz
cltd
or
inc
xchg
jge
inc
mov
xorb
dec
pop
push
lret
add
lds
xor
or
addl
repz
dec
dec
mov
mov
inc
popl
ljmp
mov
ljmp
lcall
outsb
jle
push
fwait
pop
push
xor
jns
jg
test
jge
lret
cmp
ss
int
xchg
push
scas
cmp
in
test
cld
mov
pop
cwtl
jbe
cmpsb
movsl
call
es
push
mov
mov
mov
xchg
cmp
xchg
inc
lds
leave
adc
fcoml
inc
cmp
dec
popa
sahf
test
pushf
add
movsl
hlt
fcmove
loope
int3
add
bnd
aad
cmpsb
arpl
or
or
cmc
shrl
cmpsb
lret
mov
push
sahf
or
and
sub
rorl
jmp
add
push
fmull
fnstsw
rorl
add
jle
xchg
jb
stc
push
inc
rclb
push
pop
loop
test
addl
adc
cmp
mov
and
cmc
scas
loop
sub
sub
dec
jnp
das
pop
mov
sarb
sbb
or
insb
mov
loope
gs
push
xchg
xchg
pop
pop
stos
push
pop
pop
fcoml
push
out
into
in
fnstsw
cmpsb
sbb
mov
xchg
nop
adc
cmc
aaa
cmp
ja
jbe
jnp
fldenv
hlt
adc
sub
testl
rcr
imul
outsl
and
pop
inc
jno
out
add
jecxz
enter
or
push
enter
imul
and
sbb
inc
sub
daa
arpl
fiadds
scas
xchg
push
aas
clc
jmp
bound
ss
mov
mov
movsl
push
lock
out
mov
test
jmp
jno
mov
adc
decl
outsb
xchg
sti
xor
inc
cmpsl
dec
adc
xchg
jb
out
cmp
adc
std
mov
int3
in
xor
xchg
adc
not
inc
mov
pop
xor
aas
xchg
in
or
cwtl
fisttpll
push
mov
loopne
mov
mov
leave
in
mov
cmpl
sbb
idivb
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
mov
add
pushl
movb
call
popl
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
push
push
pushl
andl
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
xchg
nop
add
inc
add
jge
add
add
add
adc
and
add
lock
add
add
add
add
add
add
inc
add
rolb
adc
add
add
pusha
add
pusha
add
adc
add
pop
add
add
add
add
fadds
add
add
loopne
add
into
add
pusha
add
loop
add
add
in
push
add
add
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
add
push
add
jne
movsl
sbb
add
add
xor
mov
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
les
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insl
add
dec
add
add
outsb
add
add
js
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
insl
add
dec
add
add
outsb
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
test
add
add
add
and
adc
add
add
call
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xchg
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
add
add
add
ja
ja
ja
ja
add
ja
jo
clc
clc
clc
mov
ja
xchg
divl
clc
xchg
xchg
mov
ja
ja
ja
clc
jo
clc
jo
mov
add
clc
clc
jo
add
pop
mov
ja
jo
xchg
clc
jo
incl
mov
clc
clc
jo
incl
ja
ja
divl
clc
jo
clc
add
ja
add
ja
ja
clc
jo
ja
add
jo
clc
mov
xchg
clc
divl
ja
add
ja
xchg
divl
mov
add
add
cmpb
jo
jo
mov
idiv
jo
add
add
ja
js
xchg
div
jo
mov
add
add
jo
clc
mov
xchg
mov
clc
divl
mov
js
ja
ja
mov
add
add
pop
ja
add
ja
clc
ja
decl
js
add
ja
xchg
ja
ja
js
ja
add
ja
xchg
ja
ja
add
js
js
jo
divl
js
js
jo
ja
add
xchg
clc
xchg
mov
mov
ja
add
ja
clc
ja
clc
jo
js
js
mov
xchg
clc
divl
ja
add
ja
ja
mov
ja
ja
pop
jo
ja
add
xchg
clc
xchg
ja
js
js
xchg
ja
clc
clc
mov
ja
jo
xchg
xchg
pop
js
ja
ja
ja
mov
js
ja
clc
push
pop
clc
mov
ja
clc
ja
decl
