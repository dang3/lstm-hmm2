cmp
push
add
dec
push
add
pop
push
add
outsb
push
add
adcb
add
add
or
gs
gs
xor
cs
insb
add
add
push
inc
gs
jb
arpl
fs
jae
add
add
outsl
popa
fs
imul
add
add
push
imul
jb
je
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
adc
add
movb
stc
mov
add
or
add
xchg
mov
add
push
xor
jcxz
nop
nop
nop
nop
nop
nop
nop
call
add
call
call
jmp
call
jmp
call
add
add
call
push
xor
jcxz
call
ret
lock
incl
rdtsc
mov
mov
rdtsc
sub
sub
neg
xor
shr
mov
pop
pop
dec
lea
pushl
lea
pushl
lea
pushl
lea
pushl
push
ret
nop
push
mov
add
push
push
push
mov
mov
mov
movb
movb
xor
mov
mov
inc
inc
test
jne
movb
xor
mov
mov
cmp
jge
mov
mov
jmp
xor
inc
cmp
jl
xor
add
add
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
inc
dec
jne
pop
pop
pop
mov
pop
ret
nop
push
mov
push
push
push
push
mov
dec
test
jl
inc
mov
mov
incb
xor
mov
mov
add
xor
mov
mov
push
xor
mov
lea
pop
mov
xor
mov
mov
xor
mov
add
and
mov
xor
mov
inc
inc
decl
jne
pop
pop
pop
pop
pop
ret
push
mov
add
push
mov
mov
lea
mov
call
mov
push
mov
mov
mov
lea
call
pop
mov
pop
ret
lea
push
push
push
mov
dec
test
jl
inc
xor
mov
add
mov
mov
add
mov
inc
dec
jne
pop
pop
pop
ret
lea
push
mov
add
push
push
push
mov
jmp
mov
add
push
mov
mov
call
mov
mov
add
mov
cmpl
jne
mov
add
jmp
lea
push
push
push
push
mov
mov
call
test
je
testb
je
mov
and
push
mov
push
mov
mov
call
mov
jmp
mov
add
add
push
mov
push
mov
mov
call
mov
lea
push
mov
push
push
push
mov
mov
call
add
add
cmpl
jne
add
cmpl
je
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
cmpw
jne
mov
add
cmpl
jne
mov
mov
add
add
sub
mov
add
add
mov
add
add
sub
add
mov
lea
push
push
push
mov
add
push
call
push
mov
add
add
sub
mov
mov
call
lea
push
mov
push
push
mov
add
push
call
mov
cmpw
jne
mov
add
cmpl
jne
mov
add
movzwl
dec
test
jl
inc
mov
lea
push
push
mov
push
mov
add
push
call
mov
mov
add
mov
add
call
lea
push
mov
push
mov
push
mov
add
push
call
add
decl
jne
mov
test
je
cmpl
je
lea
push
push
mov
push
add
push
call
push
mov
add
push
push
call
pop
lea
push
mov
push
mov
push
mov
add
push
call
add
mov
jmp
pop
pop
pop
mov
pop
ret
mov
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
xor
add
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadds
add
call
add
add
add
or
dec
add
dec
add
dec
add
dec
add
add
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
movb
mov
mov
add
mov
mov
add
add
test
add
mov
mov
add
incl
mov
add
test
test
add
incl
incl
incl
incl
test
add
movb
mov
mov
add
test
mov
add
mov
test
add
incl
incl
incl
incl
incl
test
add
add
test
add
incl
incl
add
incl
incl
add
incl
incl
add
incl
test
add
incl
incl
incl
incl
test
add
mov
test
add
test
test
add
test
test
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
mov
add
mov
mov
add
add
test
add
incl
incl
add
incl
incl
add
incl
incl
add
incl
test
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
mov
add
mov
test
add
test
add
add
test
add
test
test
add
add
add
test
test
add
add
test
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
test
add
mov
add
add
test
add
mov
add
add
test
add
incl
mov
add
test
add
add
test
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
test
add
test
add
test
add
test
mov
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
add
add
test
add
test
add
test
add
test
add
add
add
test
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
test
add
test
test
add
incl
incl
incl
incl
test
add
test
add
test
add
add
add
mov
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
add
test
test
add
incl
incl
incl
incl
incl
add
add
mov
add
add
add
add
add
add
test
add
test
test
add
test
test
add
test
test
add
test
test
add
test
mov
add
test
test
add
movb
mov
incl
add
add
test
add
test
add
mov
test
add
add
add
movb
test
mov
add
mov
test
add
mov
incl
incl
incl
test
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
test
add
test
mov
add
add
test
add
mov
test
add
mov
mov
add
add
add
test
test
add
add
mov
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
mov
add
test
add
add
test
add
add
add
add
test
add
mov
test
add
add
add
incl
incl
incl
incl
mov
add
test
test
add
test
test
add
incl
mov
add
test
test
add
mov
test
add
incl
incl
incl
mov
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
mov
test
add
incl
test
add
test
test
add
add
add
add
add
incl
incl
incl
incl
incl
test
add
mov
test
add
add
test
add
add
incl
add
test
add
incl
incl
incl
incl
test
add
mov
test
add
incl
test
add
add
add
incl
incl
test
add
incl
incl
incl
incl
test
add
mov
test
add
incl
test
add
add
add
incl
incl
test
add
test
add
test
add
test
add
test
add
test
add
test
add
mov
test
add
incl
test
add
add
add
incl
incl
incl
incl
incl
add
add
incl
add
incl
add
test
add
mov
test
add
incl
test
add
add
add
add
add
add
add
incl
mov
add
test
test
add
add
test
add
mov
test
add
incl
test
add
test
test
add
test
test
add
test
test
add
mov
test
add
incl
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
test
test
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
add
movb
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
incl
test
add
test
test
add
test
test
add
test
test
add
test
test
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
cmp
cmp
cmp
je
cmp
cmp
insl
jo
cmp
cmp
cmp
je
aad
je
cmp
xor
outsl
jp
cmp
cmp
imul
imul
add
add
and
and
add
add
test
add
xor
add
add
xchg
sbb
dec
fisttps
xchg
ror
push
lock
or
std
mov
or
xor
sub
jns
icebp
mov
icebp
push
sub
fs
ljmp
dec
jecxz
insl
jo
cmp
or
cmp
jo
outsl
mov
xchg
xor
mov
jae
in
sbb
jle
test
mov
repnz
subl
cmpb
cli
push
into
mov
ja
xchg
out
std
je
cwtl
dec
lret
sbb
in
xor
mov
dec
pop
sub
adc
add
ljmp
lret
jae
xor
insl
scas
decl
pop
jo
loope
pop
sub
addb
push
jge
cld
jp
test
mov
in
adc
xchg
push
cld
xlat
push
xor
pop
xorb
sub
jge
inc
or
mov
dec
inc
add
adcl
jp
test
pop
cld
xchg
icebp
add
dec
ss
xor
negl
jne
stos
aas
push
call
cmp
shll
mov
xchg
outsb
test
jecxz
movl
cmc
dec
test
mov
pushf
call
ret
xchg
push
rcll
insb
jbe
mov
pop
jns
test
xchg
scas
mov
xor
mov
das
or
cmp
lds
add
pop
rol
dec
loopne
andb
cwtl
aaa
ja
jl
addr16
scas
push
and
popf
pop
fsts
jno
push
jae,pt
mov
cmc
jne
cmpsb
outsl
mov
sub
in
outsb
scas
xchg
push
pop
pop
cmpsb
push
flds
lea
sub
stc
in
adc
push
leave
sbb
sub
out
stos
daa
nop
xorl
jmp
nop
clc
das
xor
mov
xlat
aas
das
push
jnp
adc
jmp
aas
adc
aad
repnz
jo
icebp
enter
shll
sub
push
pop
cmpsl
adc
sbb
mov
jno
clc
sub
enter
ss
fwait
int
pop
and
stos
push
cmp
push
mov
in
mov
pop
push
sbb
imul
lods
es
sahf
aaa
sub
imul
cmp
pop
or
into
in
sti
xchg
jbe
xor
mov
int3
sub
test
and
leave
les
orb
stos
out
aam
dec
lods
loope
ret
inc
cs
orb
and
scas
sub
pop
clc
push
outsb
dec
cmp
pop
cmp
pop
pop
movsb
jnp
xlat
outsl
xchg
jecxz
lahf
je
dec
cs
sti
mov
cmpsb
inc
loope
pop
push
test
or
sbb
or
xor
lods
lock
jae
jne
shl
jno
imul
xchg
jnp
in
push
cltd
les
add
loopne
pop
mov
add
lret
popf
sbbb
gs
out
inc
call
inc
stos
jmp
jno
sbb
pop
push
out
and
testb
add
pop
xor
lcall
es
repz
arpl
std
xchg
jge
xchg
xlat
push
pushfw
test
cmp
sub
enter
out
push
inc
test
xchg
mov
push
jmp
pop
data16
les
popf
xchg
stos
cmp
pop
fwait
cwtl
sti
rcr
out
and
add
jle
fwait
sahf
dec
and
std
lods
dec
test
mov
and
xchg
mov
push
jae
test
bound
jo
fmull
push
xchg
lret
mov
jo
jp
out
pop
add
orb
xchg
fmull
jle
lcall
jns
test
jb
lret
jmp
adc
or
rcll
add
dec
sbb
and
dec
inc
mov
mov
scas
stc
fistps
xlat
and
mov
pop
or
jecxz
sub
rorb
and
dec
sub
xchg
idiv
lret
cli
sbb
pusha
insl
add
sbb
dec
push
call
dec
sti
dec
scas
adc
shll
mov
lcall
push
dec
pop
pop
imul
push
inc
push
data16
xchg
mov
pop
cmp
jbe
pop
sub
mov
jno
adc
inc
push
push
sbb
out
pop
xor
or
lock
lea
jp
pop
or
mov
inc
pop
adc
lods
addr16
aaa
xor
ja
stos
inc
pusha
fldt
je
jne
ljmp
in
inc
repnz
pop
imul
and
cmpsl
mov
inc
es
shlb
insb
std
mov
adc
add
jmp
hlt
shll
mov
jns
pushf
sub
cmp
and
enter
lods
and
dec
icebp
mov
cld
inc
lea
pop
stc
push
mov
sahf
enter
mov
dec
sti
mov
sub
adc
mov
call
sub
stos
cmp
cmc
xor
xor
cmp
out
stc
pop
sbbb
mov
jle
jmp
je
mov
mov
repnz
repz
mov
mov
xchg
loopne
cwtl
jns
xchg
or
jnp
pop
outsl
dec
jl
mov
mov
push
mov
sbb
and
int
pop
xchg
push
xor
fcompl
sbb
xchg
sbb
fimull
jmp
ds
rorb
mov
or
xchg
aaa
sbb
add
fisttps
cmp
stc
bound
add
pop
rorb
sub
sbb
in
ljmp
scas
mov
fildl
leave
rcll
cmpsl
and
xchg
fincstp
mov
push
lock
fldcw
clc
fdivl
lret
inc
dec
adc
stos
mov
push
mov
pop
dec
or
arpl
inc
mov
cmpsl
out
push
mov
pop
lcall
or
lods
xchg
mov
test
mov
ret
jg
ret
aam
sbb
adc
mov
xor
or
sbbb
jp
mov
mov
cmp
push
jmp
in
fistpl
and
ljmp
add
sbb
add
fcmovu
gs
ret
lock
addr16
inc
jb
mov
jns
adc
cmpsb
into
sbb
sbb
jg
pop
loopne
push
xchg
sub
adc
popa
mov
and
cmp
mov
inc
jle
mov
push
dec
inc
add
lods
daa
out
in
adc
addr16
rcrl
xchg
pop
mov
in
les
or
lahf
inc
pushf
add
insb
add
outsl
insl
sub
stc
inc
and
repnz
add
repnz
adc
insb
decl
pushf
js,pt
sbb
pop
xor
aam
sbb
pop
stos
mov
and
or
sub
add
mov
mov
sbb
push
xchg
dec
and
cs
cmp
mov
inc
daa
jae
jmp
jecxz
mov
mov
push
outsl
cld
add
mov
jmp
sub
aas
or
mov
push
and
arpl
cmc
ljmp
movsb
xor
cmp
pop
jne
pop
jne
mov
jns
call
add
mov
push
pop
movsb
ret
xor
mov
cs
lods
pop
roll
out
pop
sbb
and
lret
pop
jp
ret
mov
sbb
addr16
mov
cmp
inc
mov
sti
adc
add
pusha
jo
lods
sbb
repnz
jmp
andl
outsl
inc
push
test
sub
xor
adc
nop
fwait
sub
lret
push
sub
aaa
cld
cmp
pop
add
lods
add
fnsave
cmp
or
ret
into
bnd
out
inc
sbb
test
aas
pop
mov
fsub
sbb
movsl
inc
sub
and
jbe
gs
cs
inc
xchg
push
dec
pop
movsb
aam
mov
and
mov
stos
mov
jmp
mov
or
rcl
cmp
mov
sbb
pop
jno
pop
js
es
lock
lds
add
xchg
lret
pop
sbb
fcoml
inc
inc
je
pop
cvtpi2ps
jecxz
mov
mov
pushl
popl
adc
in
sti
stc
mov
lods
jmp
inc
int3
ret
cli
push
mov
jb
mov
shl
ret
cli
mov
imul
in
pop
mov
es
sub
mov
loope
testl
or
in
jmp
add
or
daa
cmp
mov
sbb
mov
stos
jns
cmp
push
rcr
imul
pop
cld
and
push
adc
sbb
pop
xchg
jmp
jae
dec
sub
adc
sub
pop
scas
jle
out
xchg
push
ret
sar
jge
xorl
xchg
cmp
ret
mov
xor
or
nop
or
js
mov
dec
ficoml
jg
push
aam
mov
sub
test
jbe
mov
fistpl
adcb
testb
sti
pop
cmc
jle
loope
repnz
adc
jo
push
out
jmp
test
imul
out
jl
test
dec
pop
inc
dec
imul
out
sub
cmp
cmp
into
pop
jno
mov
and
and
test
push
add
sahf
pop
mov
movb
fisubl
aad
adc
insl
mov
repz
subb
push
frstor
lods
imul
xlat
movsl
mov
rorl
pop
and
mov
mov
or
mov
or
repz
xchg
sbb
mov
mov
cmp
in
loopne
sbb
dec
push
cmp
adc
les
fwait
cmc
arpl
xchg
mov
cmp
adc
or
lea
popf
call
jae
fxtract
cltd
mov
adc
adc
adc
mov
mov
add
movsl
push
push
adc
loop
lds
dec
or
fs
sti
andb
xlat
es
xchg
jmp
and
loope
cs
rclb
ljmp
lea
cmp
mov
movsl
rcrl
push
dec
loopne
push
and
inc
push
adc
mov
shrl
mov
ja
ljmp
xchg
dec
sub
push
pushf
inc
sti
adc
loop
xchg
mov
fcmove
push
fucom
fimuls
cmp
mov
add
shr
lea
pop
fsin
loop
divl
dec
and
and
jne
add
add
mov
xchg
inc
iret
jg
lea
cmpsl
cs
ds
push
pop
xor
fadds
pop
xor
shrl
iret
movsb
push
mov
lds
mov
in
add
lret
je
mov
scas
cmc
jmp
fdivs
aaa
and
or
fs
sbb
je
pop
aam
jge
loop
pop
mov
out
mov
dec
test
mov
clc
dec
dec
add
or
xchg
imul
icebp
or
roll
mov
add
icebp
imul
add
ret
push
xchg
cmp
fsts
lods
fiaddl
xchg
or
pop
mov
xor
lcall
jl
push
and
das
mov
sub
cmp
fstpl
xor
or
nop
sbb
xor
cltd
sub
icebp
fistps
mov
adc
shll
dec
pop
scas
loope
nop
enter
fidivs
scas
je
lret
xchg
sarl
cmpsb
add
mull
mov
je
lods
inc
sbb
ljmp
mov
mov
bswap
jle
jo
adc
clc
pop
mov
je
mov
xor
sub
lret
lock
test
pop
insb
sbb
icebp
mov
clts
je
in
jnp
lahf
mov
sbb
jbe
shr
or
stos
xor
add
sbb
lock
xor
cmp
aaa
fwait
jmp
jle
pop
cli
mov
sahf
imulb
repnz
dec
dec
clc
test
inc
and
movsl
xchg
cwtl
cwtl
xor
sbb
popa
notb
fwait
sbb
addr16
mov
popa
fs
loopne
sbb
add
fcmovu
ret
fisttpll
fs
push
out
inc
cmp
icebp
mov
das
int3
ret
leave
lahf
fildll
inc
and
fildll
push
mov
lods
cwtl
jmpw
add
stc
test
dec
fs
push
add
xchg
pop
subb
push
push
faddl
push
aam
mov
add
and
xchg
mov
cwtl
dec
fsubrs
popa
jmp
rorb
add
jnp
or
sbb
mov
lods
inc
popf
adc
mov
mov
push
iret
pushf
push
xor
pop
jnp
push
push
mov
lds
dec
push
mov
and
pop
shll
repnz
cmc
push
mov
mov
rorl
aas
and
movsb
cmpsl
push
subb
pop
and
rcrl
lds
push
add
aas
pushf
lahf
jo
sbb
jecxz
pop
xor
mov
mov
jb,pn
ljmp
test
xchg
inc
imul
fsubs
sbb
add
je
jae
cmp
jg
and
imul
pop
xor
jae
je
push
sti
push
gs
xor
inc
sarb
dec
idivl
aam
push
xor
jle
mov
fcom
xor
xchg
fsubrl
fcomi
bound
mov
cmpsl
ja
mov
push
aas
das
fnstcw
adc
mov
pop
mov
adc
cs
jae
outsl
lahf
push
scas
loop
cwtl
mov
jb
imul
enter
push
aad
aaa
bound
roll
mov
mov
jecxz
fimuls
push
adc
add
xor
xorb
cmp
xor
cmpsl
into
push
xchg
movsl
or
sbb
mov
jecxz
das
repnz
pushl
in
paddb
je
lds
mov
ret
mov
pushf
push
cli
inc
inc
inc
and
or
or
xor
loope
add
adc
xorb
aaa
jne
cmp
and
daa
loopne
dec
mov
test
mov
fs
dec
lock
push
subb
mov
mov
iret
jbe
mov
mov
jns
das
pop
call
out
dec
shrb
cmpsb
js
xchg
popf
inc
cmc
movsl
xlat
and
jb
popf
fistl
cmc
je
add
mov
pushf
js
xchg
fldt
sbb
mov
adc
pop
out
xchg
les
cmp
leave
inc
pop
jnp
lds
aam
roll
xlat
jb
pushf
jb
mov
and
into
and
push
rcrl
insb
xor
push
call
jns
out
or
push
mov
or
push
inc
inc
add
stc
push
dec
iret
push
xor
dec
pop
push
bound
loop
iret
cli
into
sub
imul
cmpsb
and
lahf
mov
xchg
in
lret
jle
in
in
pop
adc
sub
and
add
xchg
jecxz
fwait
sbb
and
xchg
lods
push
mov
cmpsb
xor
rol
mov
xchg
aam
mov
push
xchg
jmp
out
adc
pop
xor
inc
outsl
mov
sarb
jns
addl
iret
lds
pop
pushf
adc
lahf
in
mov
not
xchg
xchg
fwait
rcll
loope
or
cli
xchg
inc
fsubp
daa
cwtl
and
loopne
xlat
hlt
inc
jns
rorb
jbe
fiaddl
stos
sbb
cmp
js
mov
dec
mov
push
in
stos
pop
adc
ret
inc
push
gs
xor
rcll
pop
push
test
push
mov
lret
lock
outsl
cmc
lret
inc
faddl
add
pop
lock
fcoms
xchg
mov
sbb
mov
dec
mov
in
pop
pop
and
js
add
or
in
outsl
shl
dec
aaa
testl
out
sub
xchg
test
in
inc
add
push
pop
and
lret
jo
cmp
repz
sbb
mov
push
mov
or
push
push
inc
push
inc
lea
scas
lods
sub
jne
sbb
pop
add
cmp
push
popa
and
fldcw
xlat
js
xor
and
sbb
mull
pop
inc
outsb
push
testb
fstps
jp
cmpsb
sar
in
pusha
enter
cmp
mov
mov
mov
pusha
testl
outsl
xchg
xor
fwait
lahf
adc
mov
pop
dec
xlat
inc
lods
sbb
insb
cmp
in
ret
dec
daa
sub
loop
pop
stc
ds
xchg
mov
jbe
mov
pop
jp
ljmp
pop
fs
lods
ja
push
test
fcomps
push
and
popf
lahf
xacquire
and
jo
mov
sahf
sbb
fsqrt
mov
and
mov
jecxz
int3
nop
xchg
popa
cltd
jae,pt
mov
aas
shlb
xor
cmp
clc
rcl
xchg
dec
aad
or
mov
icebp
stos
jmp
xchg
das
outsl
pushf
or
sub
jl
test
movsb
xlat
inc
lds
fidivl
mov
stc
mov
xchg
fstp
add
es
sub
loopne
adc
fiadds
test
ret
fdivrp
mov
mov
in
mov
and
push
add
addl
hlt
sbb
incb
faddl
adc
sbb
mov
ljmp
jge
add
push
addr16
and
lret
outsl
in
sbb
scas
dec
shlb
int3
jge
jmp
and
dec
sub
jecxz
dec
lahf
adc
or
scas
cs
sbb
jae
mov
sahf
mov
jecxz
push
fcomps
mov
ffree
push
fdivs
push
inc
cmp
push
sub
xor
and
out
daa
dec
shrl
add
loopne
out
andl
insl
xor
addr16
je
fnsave
ret
jb
add
ret
mov
add
add
and
pop
fs
jno
dec
fsts
stos
jg
fisubs
cmpsl
loop
sahf
xor
inc
lcall
push
and
cmp
or
popa
sbb
shr
push
test
sbb
and
lods
cmp
rolb
jmp
insl
sbb
mov
pop
es
adc
xor
ret
xor
scas
pop
and
jb
mov
mov
int
jb
mov
dec
add
add
jmp
and
enter
xor
or
mov
mov
aas
jmp
push
jmp
and
pop
xchg
addb
and
jle,pn
aas
fsts
pop
lea
dec
xchg
push
orb
out
fstpt
fwait
out
int
lock
sbb
fnstenv
aaa
int3
inc
push
shlb
orl
xor
add
in
clc
cwtl
repz
dec
jae
sbb
pop
movsb
addr16
fcoms
xchg
push
les
jecxz
dec
lcall
stos
sarb
sbb
sub
and
push
sub
xor
cld
push
jle
lahf
icebp
add
xchg
adc
out
push
dec
jge
insb
mov
lcall
and
or
loopne
bound
push
mov
ret
xor
fildl
insl
int
lret
cs
mov
mov
rorl
sub
dec
pop
push
mov
or
pop
cmpsl
divb
jae
cmp
adc
cld
ret
mov
sub
repnz
scas
or
pop
cmp
mov
mov
adc
cmp
in
popa
lret
in
imul
es
mov
pop
xchg
lret
pop
cmp
cmp
test
mov
mov
cwtl
xor
add
dec
mov
repnz
cltd
or
pop
sbbl
sub
push
cmp
xchg
inc
ds
mov
sbb
jnp
js
stc
loope
sbb
lcall
xchg
addl
xchg
xchg
mov
mov
rcll
scas
sbbb
scas
das
movsl
xchg
je
or
mov
outsl
pop
lds
push
and
or
fs
call
jb
push
mov
daa
add
rclb
subb
jns
and
jl
clc
test
sbb
repz
in
cmp
mov
mov
mov
adc
xor
andb
ss
push
mov
ljmp
std
ljmp
imul
test
rorl
inc
faddl
pop
and
shlb
cmp
in
fs
test
lcall
mov
imul
mov
pop
insb
fld1
fdivrp
xchg
jns
ret
enter
cmp
cltd
cmpsb
movsb
and
inc
mov
lcall
xchg
mov
pop
inc
cmp
jl
aam
pusha
pop
pop
sub
daa
mov
test
cmp
and
mov
sbb
push
insl
shrl
mov
dec
jnp
mov
add
mov
jecxz
rorl
arpl
jecxz
loopne
pop
pop
inc
inc
popf
les
leave
xchg
push
imul
mov
int3
repnz
stos
push
and
mov
xchg
ds
jge
pusha
ja
out
lcall
lds
mov
xchg
jnp
push
leave
xchg
push
xor
ljmp
insb
dec
mov
adc
or
mov
outsl
and
in
push
pop
dec
add
test
pop
jns
jecxz
xchg
mov
jne
pop
cmpsl
ret
shll
push
aaa
or
xor
adc
or
sbb
mov
jp
push
inc
daa
stc
ja
lock
imul
adc
mov
sub
and
popa
inc
mov
imul
inc
sbb
push
mov
test
sub
cltd
inc
fcmovnbe
cmpl
in
inc
aad
mov
loopne
imul
xchg
aad
sub
lahf
sub
push
jns
jl
loop
mov
dec
out
out
push
push
flds
mov
repz
cmp
push
pop
mov
fiaddl
rclb
mov
mov
in
jnp
mov
les
jg
xor
xchg
ret
cmp
out
imul
nop
mov
add
dec
fcoms
jecxz
lahf
cmp
mov
ftst
js
pop
xor
xchg
stc
in
xlat
loop
clc
jl
push
cltd
repnz
or
pop
outsb
fistpl
je
aad
mov
xlat
sub
rol
xor
notb
arpl
lock
jp
or
inc
les
js
loopne
out
js
push
jae
ss
lret
test
mov
adc
mov
loope
dec
xor
pop
je
fisttps
mov
rol
fidivrl
ret
inc
test
popf
nop
enter
mov
adc
lea
lahf
push
imul
sahf
mov
popf
repnz
jecxz
shrl
sbb
movsl
rcrb
out
in
mov
mov
mov
aad
mov
pop
sbb
lods
mov
push
lcall
cmp
sbb
andl
jmp
inc
stos
dec
cmc
int
cmovne
cld
cmc
fistpl
in
aaa
pusha
push
mov
lock
imul
mov
jno
add
gs
pop
cs
iret
inc
bound
fnstenv
orb
and
and
and
xchg
xchg
or
call
sbb
jle
loop
or
mov
cmp
mov
pop
pushf
stc
ss
xorl
push
push
mov
sti
int3
inc
test
pusha
insb
adc
or
inc
outsl
lcall
mov
aaa
or
mov
sub
adc
in
mov
sbb
adc
add
pop
repnz
into
out
mov
cmp
xor
dec
jno
add
pop
lea
fwait
daa
mov
test
xor
pop
clc
scas
lds
mov
clc
lahf
inc
add
icebp
es
xchg
xchg
add
rcll
pop
and
sbb
mov
test
adc
adc
aaa
cmp
jo
out
push
push
loop
cmpsb
das
daa
pop
les
sbb
hlt
xor
jae
inc
push
add
mov
insb
pop
lret
and
sbb
sbbl
mov
call
cltd
cmpsl
jb
dec
dec
pop
push
xchg
cmpsb
ret
cmp
pop
xchg
pop
jg
push
lahf
cmpsb
rcl
lods
push
decb
das
pop
adc
icebp
and
jo
outsl
cmp
jecxz
add
fcmovb
sub
sarl
push
mov
lods
cmp
ror
mov
insl
or
push
or
sub
movb
imul
rcl
jp
adc
inc
adc
and
jmp
sbb
int
fnsave
dec
loop
and
push
fidivl
pop
lods
inc
mov
mov
repz
pop
daa
insl
cmp
adc
mov
push
cmp
jb
cwtl
and
cmp
dec
sahf
cmc
shr
inc
aam
gs
mov
jns
cmp
pop
scas
out
jne
movsl
data16
dec
insb
out
mov
mov
pop
cmp
jbe
add
lock
xchg
js
pusha
inc
xor
add
xchg
stos
add
xor
popl
mov
pop
sbb
jg
mov
dec
pop
insb
repz
ficompl
cmpsl
pop
or
test
lea
notb
mov
mov
cmp
fmull
mov
pop
mov
and
jmp
xor
aad
dec
or
add
std
ja
mov
push
jae
pop
sub
lock
icebp
lock
movsl
rcr
add
ror
std
int
hlt
mov
and
fwait
lods
daa
and
push
jno,pt
call
or
loope
xchg
je
les
fistpll
mov
pusha
cmc
in
call
mov
cli
adc
mov
jbe
push
movsl
sbb
test
aas
lret
es
mov
je
mov
out
push
mov
inc
sbb
fsqrt
sbb
mov
cli
xchg
mov
testl
inc
xchg
aad
dec
jmp
push
aam
mov
test
cmp
iret
fstps
xchg
jns
sbb
sbb
mov
lods
pxor
and
sarb
jp
and
mov
add
sub
and
lods
jecxz
sbb
andl
pop
imul
inc
fstpl
pop
and
rcll
and
outsl
jnp
out
scas
xor
ljmp
cmc
mov
repz
cli
stos
aad
xchg
cmpsb
fstl
mov
mov
sub
mov
arpl
mov
push
dec
cmp
push
bsf
mov
jno
mov
scas
lret
test
int
lahf
out
pop
jno
es
fistpll
mov
cmp
mov
leave
adc
test
movsb
mov
jo
or
in
lods
sbb
movsl
lock
xor
enter
cltd
stos
das
mov
inc
pop
pusha
inc
cltd
mov
sub
or
nop
cmp
int3
and
mov
xchg
jne
add
mov
out
pop
sub
imul
jp
lret
push
jns
loopne
out
jp
sbbb
adc
fnstenv
xor
and
or
jae
or
mov
cmc
and
or
jnp
push
sub
mov
pop
mov
jae
gs
cmp
xchg
jne
lds
out
rcrl
push
adc
jae
or
lds
mov
mov
push
sub
pop
xchg
mov
repz
push
cmp
cwtl
insb
imul
push
out
sub
sub
test
in
xchg
push
mov
and
pop
ja
mov
cmc
test
xor
xchg
test
xorb
repz
ret
jbe,pn
faddp
movsl
lods
cltd
in
fs
ss
lret
insb
jne
or
ja
aad
or
or
mov
mov
push
add
cmp
ss
jmp
mov
nop
or
loop
pop
scas
jne
push
xchg
dec
fidivs
jbe
fcomps
sbb
or
mov
je
shrl
iret
lcall
add
aad
rcpps
sbb
pop
dec
gs
loope
cs
les
jmp
int3
in
pop
in
gs
ss
setl
xor
pop
and
ret
aam
sbb
jg
mov
sub
ffree
iret
loop
cmpsb
add
sbb
cld
xchg
or
add
pop
or
mov
sbb
adc
ljmp
int
mov
pop
mov
enter
jl
das
push
cltd
dec
mov
xorb
xor
cmp
dec
or
loope
push
xchg
jmp
mov
dec
sub
cmpsb
inc
adc
pop
out
gs
dec
mov
mov
mov
insl
xor
lret
xchg
hlt
sbb
add
cmpl
test
test
js
cmp
dec
dec
push
and
fcmovb
pop
pop
xchg
xchg
pop
or
cmp
cmpsb
jno
sbb
stc
add
cmpsl
ds
rcrl
xlat
push
mov
mov
lcall
icebp
cltd
std
scas
jmp
sbb
nop
pop
in
hlt
jo
jo
mov
mov
cltd
mull
sub
imul
xchg
add
jl
test
test
cltd
jp
adc
das
xchg
push
push
insb
movsl
push
and
enter
cwtl
fnsave
mov
xchg
nop
jb
mov
pop
pop
repnz
xchg
or
inc
dec
lcall
fmulp
daa
mov
jne
push
iret
mov
xchg
lahf
push
fstl
lods
roll
arpl
adc
or
xchg
fisubl
addr16
movb
push
push
loop
dec
scas
fisttpl
lret
test
aad
setp
les
icebp
dec
dec
scas
dec
mov
pop
dec
pop
popf
data16
jnp
enter
sbb
sbb
sahf
test
pop
mov
cmp
xchg
loop
cmpsb
sti
xchg
insl
dec
iret
add
jns
imul
pop
inc
inc
fldl
mov
inc
xor
rol
push
fsubr
mov
sarb
or
xchg
inc
mov
clc
mov
pop
cmp
dec
test
in
arpl
push
push
push
cs
cwtl
subl
hlt
dec
sub
ffreep
insl
loop
cwtl
dec
push
aam
call
jns
pop
xchg
sbb
and
es
addr16
lret
jno
lea
or
or
test
rorl
inc
fisttpll
mov
repnz
sti
mov
jmp
mov
or
loop
rcll
cmc
stc
and
dec
dec
loop
leave
jg
cmc
add
xchg
or
xchg
data16
das
inc
pop
int
fildl
jo
test
inc
jno
and
dec
cmp
enter
lods
ja
push
pusha
dec
stos
loope
push
das
dec
push
jbe
cmc
sub
outsb
rcrl
rcll
cmpsb
leave
jne
mov
fimull
fwait
aas
jp
mov
jge
fldenv
pop
mov
inc
jo
sbbl
mov
jnp
and
movsb
pop
inc
xchg
mov
xchg
mov
outsl
arpl
jle
push
dec
fildll
test
stos
mov
ret
rcll
and
cld
mov
jb
rcl
mov
sahf
push
movsl
dec
test
icebp
gs
xor
imul
addr16
repz
mov
popa
mov
pop
addr16
leave
add
sti
dec
imul
jp
int3
lds
jae
cwtl
add
add
dec
push
mov
lcall
pop
in
shll
jbe
inc
aaa
fldcw
sahf
adc
aaa
sarb
fidivrl
cs
repz
pushl
fwait
jp
ljmp
pop
out
cmp
or
sbb
sub
mov
lods
mov
imulb
lods
sbb
pop
addl
mov
call
test
mov
fmuls
jmp
xor
fcomps
push
jns
dec
mov
xor
mov
jl
jae
jno
bound
sub
add
fsubrl
push
lcall
add
je
lret
in
jecxz
xchg
lcall
test
bound
push
hlt
pop
pop
stc
sti
das
cmc
xchg
pushf
cwtl
sti
pusha
loop
popa
call
psllq
mov
fdivp
cmp
insl
sub
pop
adc
ss
pop
jbe
jmp
cmp
add
cmp
push
cmpsl
and
pushf
lock
test
mov
mov
jmp
push
rorl
int3
lods
lahf
mov
out
sarb
repz
mov
xlat
mov
std
out
and
push
fildl
daa
xor
cmova
mov
sub
sbb
rclb
mov
cmp
cmp
ds
fcomps
in
ja
aaa
jns
inc
test
xchg
push
jge
testb
fisubrs
adc
popa
repz
movsl
nop
mov
imul
sub
mov
leave
into
xlat
aam
outsb
adc
jp
add
sbb
inc
icebp
xor
insb
in
mov
jo,pt
inc
ret
bsr
decl
sbb
mov
inc
mov
push
repnz
and
loopne
and
sbb
or
test
xchg
hlt
push
xchg
insb
pop
sbb
stc
add
inc
jns
adc
fsubrl
mov
push
push
js
enter
adc
int3
cmpsb
mov
imul
pop
pusha
test
pop
iret
xor
cmpsb
mov
jg,pn
and
cwtl
iret
inc
xchg
cmp
lret
cmpsb
or
xlat
fstl
test
out
sub
stos
cmp
addl
push
or
mov
and
sub
shll
push
xchg
pop
sbb
pop
mov
sbb
mov
and
scas
push
dec
div
dec
fsubrl
jmp
push
les
xorl
xor
jne
push
sub
arpl
int3
push
imul
addr16
adc
dec
testb
aas
into
enter
cmp
mov
add
jb
add
mov
mov
add
sub
mov
mov
shrl
jg
sub
enter
xchg
outsl
cmpb
stos
icebp
ficompl
dec
xchg
sti
cmp
jno
lea
jb
mov
call
push
fnstsw
cltd
roll
inc
fsubl
rolb
aad
pop
xor
enter
xor
mov
inc
sbb
ret
hlt
inc
cmp
sub
jo
mov
push
and
mov
push
jmp
es
adc
xorb
or
jg
or
in
nop
fsubrs
lods
shrb
je
pusha
popa
or
sub
and
adc
ret
ds
ja
or
jecxz
popf
fcoms
mov
mov
je
out
mov
jo
add
fisttpl
push
out
leave
or
data16
pop
test
repnz
pop
faddl
and
aas
cmp
inc
movsb
out
and
add
jge
push
loope
lock
sar
or
ficomps
cmpsl
inc
das
jp
rclb
push
leave
inc
data16
jno
xchg
mov
xchg
fs
xchg
lock
xchg
fildl
jmp
push
sbb
shr
mov
jl
or
mov
or
bound
in
lcall
jnp
pop
push
xchg
jne
mov
adc
jecxz
lea
test
repnz
ss
nop
repnz
add
xor
sti
outsb
push
xchg
arpl
pop
pop
repnz
xchg
test
inc
ficomps
jns
das
or
or
lret
or
shlb
aas
pop
pop
stos
jae
stc
mov
inc
add
js
mov
pop
xchg
dec
ljmp
xchg
insb
int
shrb
ss
cs
out
je
push
push
sysenter
mov
push
jnp
iret
inc
lods
or
mov
pop
inc
mov
or
push
rcl
sti
hlt
xchg
stos
out
iret
in
jp
test
lahf
into
fcomps
pop
and
stc
mov
insb
fmuls
nop
jp
cmp
sub
push
inc
xchg
mov
lods
sarl
push
sub
cmp
int
jne
iret
inc
aas
add
mov
in
fmuls
mov
jo
fsubs
cwtl
or
sbb
into
pop
in
idivl
mov
jb
push
out
push
lods
or
pop
test
pop
cltd
dec
stos
sbb
adcl
ss
dec
sub
iret
and
add
cltd
ljmp
int
shlb
adc
adc
cmp
mov
movsl
ret
jb
jno
push
or
dec
daa
test
lods
and
inc
xor
jg
sbb
fxch
cmp
pop
dec
cmp
and
jg
adc
xchg
sbb
and
cmc
push
stc
xchg
inc
outsl
lock
dec
loopne
xchg
in
xchg
les
mov
jae,pt
xor
mov
pop
xor
stos
sub
popf
imul
adc
add
lds
sub
pop
test
ds
aad
insl
popa
movzwl
jge
js
dec
rorl
lods
out
sahf
arpl
pop
idivl
add
xchg
loopne
mov
pushf
push
and
mov
sti
sbb
or
test
jnp
pop
stc
mov
out
cmc
mov
fisubl
inc
stc
mov
mov
rorl
pusha
loop
scas
inc
or
mov
fistpll
lods
or
mov
jb
aaa
mov
mov
xchg
shrb
add
push
mov
mov
inc
inc
rorl
repz
cmpsb
dec
or
sarb
pop
loopne
inc
pusha
js
jge
es
xchg
orl
loopne
cli
and
aad
stc
inc
and
or
adc
cli
fnsave
add
xchg
push
dec
notrack
icebp
hlt
popa
mov
addr16
lahf
enter
jns
jp
outsb
ss
dec
push
push
mov
and
or
sub
pop
aad
orb
cltd
sub
in
inc
mov
fisttps
inc
jnp
cmpsb
or
jbe
mov
jns
insb
lods
pcmpeqd
fistpll
and
int3
pop
aam
adc
rorb
pop
cmp
jb
imul
bswap
push
push
scas
add
push
ja
lods
out
dec
pop
mov
loopne
mov
addl
cmp
and
push
repnz
ror
or
lods
in
aas
decb
xchg
clc
data16
inc
adcb
push
pop
cmp
vpunpckhqdq
and
adc
mov
or
leave
inc
xor
fdivrl
mov
cs
push
mov
out
xchg
jb
mov
sbb
movsl
popf
adc
or
es
xchg
jg
inc
in
mov
adc
cltd
pushf
inc
call
inc
pop
popf
lahf
pop
pop
mov
daa
lcall
aas
test
hlt
push
lock
int
sub
adc
movsl
sub
inc
mov
cltd
js
lret
pop
mov
int
adc
cwtl
clc
mov
jns
leave
fcompl
inc
dec
andl
mov
xor
adc
cld
cli
xchg
loopne
pop
daa
loope
sub
insl
fs
pop
or
cmp
addb
outsb
dec
or
mov
cmpl
mov
loopne
sub
push
push
cmp
push
inc
pop
jge
sti
inc
adc
push
adc
pop
push
repnz
sarl
into
aas
out
and
nop
in
add
shl
mov
lods
stos
fsubr
and
sub
in
push
cwtl
sub
and
clc
adc
rorb
ficoms
out
js
inc
adc
pusha
mov
fstpt
stos
popf
xor
mov
jg
sub
cltd
push
gs
clc
mov
cmpsl
push
lods
push
push
sub
xor
add
in
out
aad
xchg
cs
mov
xchg
xchg
cmp
xchg
popa
shll
fdivs
cltd
fadds
ljmp
stos
mov
stos
sti
push
test
out
fincstp
sbb
je
push
inc
xor
lret
scas
cmp
dec
dec
int3
aam
repz
cs
pusha
ss
add
pop
sub
and
and
dec
test
mov
xor
mov
push
fwait
add
movsb
bnd
adc
xchg
loop
les
push
push
mov
mov
pop
or
xchg
out
cmp
sub
stc
loopne
aad
fisubrs
jecxz
repnz
add
and
mov
mov
and
adc
and
push
iret
out
es
dec
and
ds
xorb
movsb
mulb
ja
cmp
fsubr
push
es
jge
push
add
and
outsl
rcrl
addr16
dec
imul
push
out
mov
adc
mov
and
sub
or
stos
iret
lea
push
je
pop
je
stos
insb
or
mov
pop
push
dec
hlt
sbb
fs
jmp
and
enter
pop
dec
and
xchg
jle
add
mov
xchg
sbb
repz
push
popf
inc
inc
adc
mov
and
arpl
lret
fmuls
xchg
mov
cmpsb
cmp
push
std
sarl
lds
int
stos
outsb
sub
sbb
ss
mov
cmp
jmp
mov
mov
ret
mov
sub
lret
jg
mov
lods
not
push
mov
or
push
adc
xlat
cs
inc
shrb
lret
cmp
in
iret
fcomip
add
jecxz
es
inc
xor
aam
mov
and
cmp
stos
ret
cmpsb
shll
push
adc
ret
mov
lods
lock
out
or
insl
gs
lcall
js
cmpsl
pop
into
push
pop
into
mov
xchg
mov
xchg
stos
jmp
pop
push
jb
dec
iret
loope
dec
jge
rolb
xor
into
ret
mov
lahf
out
sbb
dec
aad
shlb
or
sbbb
pop
jno
inc
js
jo
sbb
clc
nop
out
nop
inc
inc
xor
or
leave
adc
mulb
mov
out
xor
in
and
push
je
lock
sbb
movsl
mov
xchg
dec
dec
push
into
mov
jnp
mov
test
inc
lods
mov
stc
lret
icebp
xchg
insl
push
mov
imul
repnz
loopne
jne
jnp
inc
adc
dec
xor
cmp
movsb
ljmp
sub
int
pop
subl
xor
dec
jl
mov
gs
outsl
mov
pop
mov
xchg
adc
mov
shll
mov
jne
inc
shl
out
shll
sub
jno
push
movsl
adc
pop
xchg
xor
cltd
jns
aad
sbb
ret
inc
mov
mov
std
int
push
jae
test
ficoml
xchg
mov
rclb
hlt
mov
ror
xlat
pop
mov
leave
inc
mov
jl
jae
push
adc
xor
lods
and
sub
popa
or
enter
xchg
cmp
sub
call
cmp
dec
pop
ds
add
mov
cmp
rorl
jle
repnz
xor
push
fisttpl
bound
cltd
adc
test
jns
faddl
nop
sbb
mov
bound
and
xchg
aad
lret
cmp
ret
xor
or
xchg
pop
mov
das
inc
push
shll
sahf
dec
mov
iret
adc
bnd
je
cmpsl
pop
xor
mov
mov
sub
sarl
loopne
xchg
mov
lods
ja
rcr
add
mov
push
out
lret
and
pusha
and
popl
es
mov
jae
aad
sub
outsb
mov
jmp
sub
aaa
scas
pop
aam
sub
in
jg
xor
mov
jmp
fnstsw
pop
sar
add
cmp
and
sub
mov
inc
negb
or
adc
cld
divl
insl
fadds
cli
loopne
out
popf
aaa
icebp
and
js
cli
es
mov
xchg
cmp
ret
loopne
aam
pop
dec
inc
repz
jecxz
lds
and
in
pop
mov
adc
imul
js
inc
push
sub
sbb
adc
mov
stos
pop
mov
add
mov
push
sahf
dec
xchg
push
popf
inc
cmpsl
or
sub
cmp
in
push
jae
jo
leave
xor
mov
notl
rorb
pushf
jecxz
sbb
gs
xchg
ds
or
dec
mov
aas
push
movsb
mov
fadds
push
bound
aaa
fs
dec
lods
dec
popa
or
jge
pop
push
dec
and
push
lods
lcall
cmpb
sbb
dec
aam
add
lret
stos
int3
cmc
mov
lret
xor
inc
cmpsl
out
adc
stc
imull
xchg
push
sahf
push
xchg
jp
add
xchg
lods
outsb
lods
insl
loope
adc
adc
fstpt
cmp
stc
cmp
add
out
jno
out
ja
mov
or
test
mov
push
push
movsl
push
fimull
sbb
jge
or
mov
sub
inc
cld
popf
dec
adc
sub
xchg
adc
push
cli
add
xchg
arpl
lods
push
lea
lods
fwait
add
cmpsb
xor
pusha
imul
bound
sbb
lock
and
xlat
mov
add
sbb
sbb
aaa
add
lcall
cs
adc
repz
or
loope
fiaddl
mov
xor
sub
sahf
fsts
jp
add
mov
mov
jb
xchg
or
and
cwtl
inc
sarl
or
sbb
jo
jp
test
push
add
and
xchg
stos
push
cmp
lret
add
je
aas
pushf
adc
adc
iret
pop
ljmp
cli
jnp
rcl
add
cli
sbb
xchg
fcmovnu
sub
out
xor
sbb
xor
nop
cmp
push
xchg
mov
inc
add
jp
mov
add
mul
push
mov
in
xchg
in
outsl
push
push
mov
repz
enter
push
push
add
xchg
mov
mov
subb
push
icebp
gs
jecxz
add
cmc
sub
jae
xor
cmp
pop
int
ret
ss
jge
cwtl
fnstsw
into
repz
inc
movsb
sti
shlb
push
ret
mov
wrmsr
pop
and
push
scas
add
mov
incl
insb
adc
inc
fwait
outsl
in
insl
bound
and
and
dec
jns
cmpsb
test
cwtl
xor
lret
pushf
mov
test
adc
out
cmp
mov
jp
mov
dec
mov
jecxz
aad
jg
cwtl
movsb
popf
jo
insb
ss
jnp
fs
mov
fisttpl
test
inc
cmc
dec
pop
lahf
scas
inc
insl
pop
repnz
jbe
fwait
pusha
mov
sub
and
sbb
xlat
popa
mov
and
movsl
and
xchg
shr
mov
pop
xor
cmp
jge
push
jle
imul
mov
lret
lcall
jp
sbb
xchg
iret
mov
cmp
subl
pop
fmull
dec
sbbl
sbb
cwtl
inc
cmp
sub
xlat
sub
scas
cmpsb
imul
lcall
adc
in
arpl
shrl
mov
add
or
cltd
ds
mov
jmp
out
or
inc
imull
pop
dec
loop
mov
decb
cmc
mov
pop
outsb
loop
sub
ficomps
rcr
imul
jle
test
out
sub
jge
mov
jle
or
dec
pop
pop
xlat
push
in
jmp
xor
sbb
sbb
leave
imul
dec
cmp
xor
xadd
xchg
sahf
fimuls
call
cmp
pushf
adc
lahf
test
fdivrl
sti
sub
push
aaa
mov
cmp
aam
or
cmpl
inc
mov
xor
mov
lds
nop
daa
rcrl
shr
sbb
or
push
inc
add
xchg
and
sub
jnp
add
stos
add
test
add
test
int
and
xchg
push
or
lods
rcrb
dec
jecxz
scas
pop
ljmp
xor
adc
mov
les
mov
repz
cltd
adc
jns
jp
cmp
cmpsl
ds
scas
sbb
repz
push
add
out
and
rclb
mov
test
cmp
mov
cltd
dec
mov
clc
cwtl
add
adc
mov
ja
mov
roll
scas
xor
mov
je
sbb
movsl
pop
and
in
mov
adc
and
enter
pushf
add
adc
leave
out
hlt
aam
out
push
and
push
sub
sbb
fstps
test
push
arpl
sub
mov
das
shlb
inc
mov
adc
cld
dec
xchg
aas
and
adc
inc
jne
mulb
test
clc
mov
inc
add
test
sbb
add
jno
sbb
xchg
fidivl
aam
adc
cmp
pop
xchg
or
mov
push
ja
scas
jno
popf
popw
lcall
lret
bts
imul
in
lahf
cmp
adc
fsubs
outsb
mov
loopne
adc
mov
out
xchg
sub
mov
add
push
mov
hlt
out
popa
push
out
sti
mov
cs
push
iret
pusha
in
iret
add
hlt
int
ds
mov
dec
sbb
and
int3
and
jmp
add
cli
push
lock
ja
cld
adc
ret
cmp
mov
sbb
test
mov
lds
push
inc
pusha
adc
or
repz
stc
sbb
iret
out
cmp
cs
mov
in
or
jle
jb
fdivs
in
decb
cli
inc
divb
hlt
bswap
sub
filds
xor
jb
repz
out
stos
xchg
fwait
push
cmpsl
ret
mov
inc
lock
rcrb
mov
andb
jmp
out
sti
xchg
mov
cmp
sub
test
es
and
inc
shlb
mov
fstpt
sbb
jns
mov
sbb
push
xchg
fcmovnbe
imulb
lea
stos
mov
insl
dec
mov
in
nop
outsb
aam
movsl
jno
fbstp
mov
dec
inc
jo
scas
jne
jge
sub
out
push
ss
push
incb
cltd
mov
das
test
mov
test
cmp
movsl
aaa
mov
dec
cmp
pop
cmp
jo
sbb
mov
syscall
stos
pop
out
jnp
shll
or
sbb
ja
inc
lret
sbb
daa
xchg
or
loopne
sbb
sbb
sub
iret
lret
aam
push
pop
icebp
rolb
jge
shlb
xchg
cmpb
ja
dec
mov
xchg
pushf
fldl
xchg
out
mov
dec
stc
imul
sbb
std
rcr
cmpsb
xor
ret
jmp
aam
in
mov
mov
out
pop
sub
roll
xchg
sub
xchg
icebp
in
sbb
pop
xchg
adc
adc
insb
nop
cmpsl
popa
mov
and
leave
stos
add
fcompl
fwait
js
mov
xchg
sti
push
cld
push
xor
lcall
fwait
leave
in
insl
mov
sti
cmpsb
aam
dec
mul
jnp
cltd
in
loopne
les
mov
orl
add
jp
jo
and
mov
cmp
loop
pop
negb
nop
xor
fdivs
xchg
jle
push
xchg
sbb
sahf
fwait
incb
jmp
rcrb
es
push
xor
cmpsl
sub
mov
sbb
leave
test
jle
mov
sbb
cli
jne
mov
fsubr
add
push
inc
push
dec
push
add
addr16
adc
inc
pop
cmp
inc
icebp
sub
and
pusha
mov
movsl
inc
inc
nop
mov
push
andl
testl
xchg
lods
xor
filds
andb
gs
outsl
fcomps
mov
shll
test
icebp
push
xchg
out
ss
and
adc
lcall
mov
xchg
add
xor
dec
xchg
add
outsb
sbb
cmpsb
add
repnz
and
fldcw
stc
cs
out
mov
cmpsb
scas
mov
mov
out
jne
sbbl
gs
mov
sahf
cmp
loope
aad
enter
mov
mov
aas
or
nop
movsl
mov
ds
sub
movsb
clc
adc
sarl
addb
jecxz
and
jo
pop
scas
enter
ljmp
mov
mov
mov
dec
pop
mov
test
testl
mov
mov
inc
movsl
fwait
es
icebp
sbb
lods
movsb
pop
cmpsb
addb
fcmovnu
hlt
addr16
call
sub
loope
mov
cmp
sbb
sub
std
rcrl
inc
roll
jne
jmp
xchg
lods
mov
jecxz
xchg
rorl
loope
arpl
popa
imull
fildll
dec
mov
pop
imul
sub
sub
or
cld
orb
scas
pop
cmpsb
or
adc
sub
mov
enter
js
push
shll
xchg
mov
jmp
xchg
and
add
pop
adc
stos
add
adc
cmp
pop
dec
insl
pop
add
push
outsb
in
xchg
aaa
call
push
outsl
xchg
inc
pushf
xchg
push
xchg
xchg
pop
in
fcoms
add
fisubrs
clc
jg
xor
dec
int3
inc
rcll
cli
sbb
sbb
fisttps
adcl
icebp
int
cmp
push
fisubs
imul
sub
aas
jg
xorb
xchg
pop
out
mov
or
adc
pop
sub
inc
enter
adc
cmp
jb
sti
bound
divl
sbb
mov
pop
mov
add
scas
push
mov
xchg
jns,pn
ja
nop
sub
push
and
divl
int
fsubs
es
pushf
mov
cltd
insb
int3
xor
leave
cmp
ds
pop
imul
xor
xchg
pop
or
nop
dec
adc
hlt
pop
xchg
jp
sti
push
mov
sbb
std
mov
orl
add
cs
test
mov
xor
jp
cltd
jnp
outsl
stc
clc
inc
and
xor
ror
mov
push
push
inc
sub
push
jp
adc
ret
inc
ret
fdivrs
jno
pop
test
movsl
xchg
adc
push
dec
push
aaa
sbb
sbb
shlb
aam
mov
lock
lcall
push
jae
loopne
sbb
mov
jno
or
dec
dec
pop
or
popa
je
repz
out
popf
add
scas
std
or
add
or
popa
mov
pusha
movsb
mov
loope
adc
mov
sbb
jne
jecxz
cmpsb
inc
adc
adc
push
add
insl
cli
adc
pop
in
cwtl
lea
ss
es
aam
adc
sarl
out
sbb
shl
shlb
adc
sub
ret
dec
test
sub
sub
mov
iret
inc
inc
icebp
lods
push
or
icebp
cmp
fadds
pusha
push
data16
lods
enter
jl
cmp
sbb
loopne
out
loop
cmp
faddl
iret
cmp
imul
push
ja
mov
adc
cltd
xchg
jg
mov
and
sti
dec
and
push
and
and
stc
ret
popa
dec
mov
or
out
subl
pop
inc
cmp
mov
xchg
jecxz
xor
pusha
imul
outsl
cmp
std
inc
mov
lahf
pushf
fidivl
lock
bound
sub
add
dec
js
inc
or
cli
pop
imul
hlt
ss
out
bound
xchg
mov
xor
and
lds
jns
lock
imul
cmpsl
lret
jae
mov
adc
add
ja
std
pop
dec
jne
in
push
sarb
pop
mov
jo
xchg
inc
fbstp
flds
dec
mov
adc
inc
loop
jp
popa
jae
add
es
scas
nop
mov
ss
inc
and
call
testb
iret
xor
js
inc
ret
push
mov
movsb
pop
push
inc
push
rol
call
push
push
out
pop
test
xor
ja
add
jns
jl
lret
pop
or
es
pusha
imul
movsl
test
dec
dec
add
hlt
xchg
not
inc
cli
sub
push
mov
mov
dec
lods
fldcw
xchg
xchg
jmp
adc
shrl
pop
loopne
test
insl
mov
fidivrl
testb
dec
sbb
ja
rcrb
sbb
orl
leave
fdivrs
div
push
outsl
dec
or
imul
add
pop
clc
sarl
or
sub
insb
sti
adc
jp
jns
movsb
inc
pop
cwtl
cs
xchg
bound
dec
dec
loope
and
inc
and
popf
pop
fldln2
mov
loop
inc
sub
out
add
jno
scas
cmpsl
movsl
jge
dec
jmp
add
mov
or
std
les
mov
out
daa
jg
addr16
das
ja
jmp
mov
sbb
ss
add
btc
or
sbb
cmp
xchg
inc
sbb
out
minps
and
stc
data16
jno
mov
in
jecxz
inc
shll
lcall
sarl
daa
push
jae
nop
dec
loop
jmp
cltd
xor
sub
sbb
xchg
adc
jp
dec
jmp
or
push
cmpsl
popa
outsb
xchg
adc
jne
js
and
or
or
cli
sbb
js
mov
dec
cmpsb
sti
jp
or
inc
xlat
fcoml
loope
inc
loope
pop
add
add
pop
push
iret
mov
pop
mov
xor
xchg
inc
pushf
call
lods
js
repz
mov
stos
sub
loop
sti
jp
and
out
mov
push
adc
mov
xchg
incb
push
repz
adc
movsb
mov
inc
fdivrl
out
mov
div
fsubr
mov
out
ss
sbb
test
jge
stos
int3
roll
ret
loope
jecxz
mov
pop
nopl
mov
push
jge
mov
insb
adc
or
mov
dec
inc
jle
sbb
pop
xchg
mov
fucomi
inc
fistl
addr16
jmp
pop
adc
sbb
or
push
push
insb
push
mov
xchg
inc
xor
push
icebp
dec
inc
subl
arpl
push
negl
add
fwait
add
div
push
push
mov
push
mov
or
adc
testb
mov
iret
pop
push
call
sbb
dec
jnp
es
cmpsl
icebp
pop
inc
mov
adc
rcl
cmpsb
xor
lret
insl
outsl
dec
sub
jnp
adc
repz
mov
ret
icebp
cltd
fistl
lret
cmp
inc
clc
sbb
lret
inc
xchg
arpl
cltd
jnp
notb
mov
addl
or
lcall
push
and
push
stos
add
leave
and
jae
stc
in
cmc
lods
xchg
rol
in
adc
data16
mov
sahf
pushf
add
xor
xchg
sbb
xor
mov
enter
mov
int3
fimuls
fisttpll
mov
and
and
clc
popf
lret
andl
imul
shrb
xor
mov
cli
push
imul
frstor
mov
jno
hlt
xchg
cmp
dec
sub
sub
dec
clc
jno
and
rcl
jecxz
and
xor
int3
inc
int
mov
xor
xlat
dec
test
cmp
gs
aaa
mov
cmp
jge
arpl
ss
cwtl
sbb
cmp
push
in
vorps
in
outsl
mov
into
das
push
lods
mov
inc
sub
testb
inc
out
fisubl
fbld
andb
pop
mov
sub
cmp
xchg
xlat
out
outsl
stos
dec
push
xchg
fst
lcall
push
pop
sub
xor
push
jp
jbe
inc
or
xlat
pop
add
mov
inc
pusha
adc
sub
mov
leave
pop
sub
int3
lea
push
push
or
loope
lret
push
int3
jmp
push
dec
out
ja
int3
push
out
sarb
mov
push
mov
loope
adc
sbb
mov
mov
outsl
lods
add
test
and
lahf
xchg
pusha
out
je
pop
dec
cmpsl
adc
movsl
dec
jns
inc
rolb
cmp
pop
ret
fsubl
sbb
stos
sub
jne
into
pop
clc
adc
mov
mov
rclb
xchg
adc
push
arpl
dec
cmp
gs
mov
sub
orb
gs
stc
shl
dec
adc
xchg
negb
scas
and
ds
rcrb
mov
jge
xchg
jae
jle
jno
add
cmp
ret
gs
cld
icebp
arpl
sbb
mov
or
sub
mov
andb
mov
pop
les
aas
ss
faddp
fidivrs
mov
jae
mov
nop
or
mov
frstor
and
inc
dec
int3
data16
out
mulb
pushf
mov
fs
xchg
ljmp
inc
mov
iret
or
std
frstor
icebp
push
xorb
cwtl
test
aad
test
jb
addr16
aaa
inc
or
xchg
xor
cmp
les
daa
cmp
inc
popa
xlat
lcall
jb
sahf
outsb
fstps
sbb
test
xchg
popf
imull
xchg
mov
sub
fimull
mov
or
push
cltd
and
lds
aas
xchg
mov
inc
push
mov
std
xchg
cmp
xchg
mov
adc
adc
mov
jmp
test
push
mov
jbe
cmpl
and
pop
test
xchg
sahf
inc
cwtl
gs
out
and
lods
mov
repnz
or
cmp
scas
push
das
and
icebp
push
cmp
pop
sub
insb
dec
add
dec
dec
je
fldl
xchg
mov
mov
jns
mov
daa
pop
cmpsl
js
sub
es
and
lods
mov
insl
mov
test
mov
pop
mov
dec
xorb
mov
jl
sub
popa
popf
roll
xorb
pop
adcb
inc
jbe
xchg
fs
sbb
pop
xchg
push
ret
ret
xchg
pop
out
mov
mov
call
jge
pop
jmp
or
nop
das
xor
aam
test
inc
cmpsl
cmpsb
testb
movsb
adc
sbb
jle
pop
hlt
stos
mov
push
sti
daa
sbb
bound
outsl
outsl
mov
stos
outsl
sub
outsb
ficoml
sbb
sbb
inc
pop
mov
addb
push
xchg
jg
pop
or
xor
inc
add
into
insl
push
mov
outsb
cltd
sbb
inc
mov
clc
lret
mov
and
fxam
leave
sbb
cld
shlb
mov
in
mov
and
lcall
sbb
xchg
xchg
out
out
std
mov
mov
int
cmp
js
mov
ljmp
dec
or
inc
leave
cmp
outsl
nop
push
inc
shlb
movsb
dec
lcall
or
das
xor
inc
ret
inc
sbb
jne
loope
sti
or
sub
xchg
inc
adc
scas
insl
mov
insb
lds
es
je
aad
jnp
ss
and
push
ret
mov
dec
mov
sti
push
cmp
inc
add
cli
pop
outsb
pop
js
cmpsl
jno
in
enter
jb
out
xlat
in
pop
mov
test
mov
inc
call
mov
pop
push
cmpsl
js
cmp
jae
sbb
in
lret
mov
fxch
into
pushf
mov
sahf
mov
jo
or
xor
leave
movsb
add
pop
mov
inc
dec
cmc
loope
pop
daa
in
sub
push
dec
sbb
pavgb
insb
adcl
xchg
sbb
rorl
inc
testb
jge
cmp
mov
jbe
inc
test
mov
pop
mov
push
and
test
lds
pusha
je
mov
mov
and
popa
sbb
pop
pop
sub
xchg
adc
outsl
mov
lods
fdivrs
addl
aad
sarb
ja
sbb
sbb
popf
mov
daa
popl
mov
shlb
jmp
jae
dec
or
dec
add
cs
repz
add
outsb
and
pop
je
mov
fcmovu
insb
jl
adc
loope
xchg
jge
push
mov
lods
cmp
jo
lds
imul
ret
mov
loopne
iret
in
test
ja
push
inc
ja
notl
les
sbb
ds
ljmp
lcall
mov
das
bound
mov
int
inc
enter
pop
adc
push
jns
jecxz
push
das
iret
push
cltd
lahf
xor
lods
lcall
in
cld
stos
arpl
lods
leave
stos
adc
in
push
jne
or
xlat
or
orb
mov
xor
xor
xchg
lods
enter
imul
aam
adc
cmpsb
xor
cmp
std
notb
mov
jae
dec
push
xor
ja
lret
mov
imul
sbb
jno
imul
or
xor
xchg
stos
or
mov
movsb
rclb
andl
or
dec
adc
ret
push
mov
lock
pop
loopne
icebp
jmp
and
mov
or
faddl
push
push
push
stos
add
cmp
sbbl
clc
inc
std
stos
mov
push
adc
xor
mov
jg
cmpsb
lret
sub
pushf
pop
loope
mov
lock
repz
mov
jmp
pop
sub
aad
daa
or
stos
jp
mov
std
shl
cltd
sbb
in
add
sub
mov
adc
sbb
pop
xchg
inc
dec
sarl
repnz
pushf
lods
dec
cmpsb
out
xor
movd
mull
sahf
pop
xchg
cmc
lret
jmp
movsb
insb
xor
in
add
shll
popa
rorl
rcl
xor
inc
out
jmp
jne
inc
insb
stos
mov
pop
sub
cltd
inc
repz
in
aaa
cmpb
sub
mov
push
dec
dec
leave
shrb
dec
or
push
xchg
and
mov
jnp
add
mov
outsl
sbb
pop
sarl
jp
mov
cmp
push
push
mov
les
js
and
adc
mov
pop
dec
in
hlt
ds
daa
inc
cwtl
shll
mov
negb
mov
add
sahf
jecxz
nop
cmp
jge
cmpsl
negl
pusha
mov
push
sbb
sbb
adc
dec
jns
add
cmp
adc
jge
out
mov
mov
aaa
xchg
mov
pushf
gs
outsb
mov
lock
jno
push
sub
jbe
std
sbbb
fwait
and
cwtl
jbe
pop
xor
xor
push
xor
test
xchg
lea
pushl
int3
jl
frstor
jmp
sub
mov
inc
movsl
dec
test
pop
pop
sbb
cmpsb
mov
or
jge
ret
les
ja
and
adc
fists
test
fidivrl
int3
popa
mov
xor
mov
lret
sub
pop
and
data16
lock
outsl
sbb
pusha
out
push
in
pop
adc
xlat
sub
int3
mov
jle
jp
enter
mov
xlat
les
shll
xchg
pop
inc
outsl
dec
lret
jge
dec
adc
or
cmpsl
mov
mov
xlat
stc
fistpll
insl
and
add
imul
in
repnz
std
ret
ret
stos
pushf
ret
xchg
sarb
cwtl
xor
lahf
jg
es
call
mov
inc
push
dec
add
xchg
orb
es
divb
cmc
mov
shr
nop
loop
orb
mov
sbb
add
lea
xchg
fnstsw
jnp
dec
nop
mov
sbb
and
scas
repz
mov
test
sbb
dec
sub
rcll
scas
xchg
add
rcr
addr16
test
jecxz
ficoml
jnp
mov
xchg
inc
mov
xlat
mov
xchg
and
xor
cmp
jmp
jg
addr16
xchg
and
inc
sbb
push
lock
cmp
cmp
rorl
mov
lds
mulb
inc
repz
popl
lret
loope
sbb
mov
dec
sub
iret
add
pop
inc
in
xlat
std
dec
bound
adc
outsb
mov
adc
das
dec
push
add
jbe
push
sbb
adc
or
sbb
insl
cwtl
dec
ljmp
add
pop
fimuls
shrl
nop
dec
sbb
push
sub
lahf
jge
add
aas
lsl
pop
cmpsb
dec
cmpsl
lods
psadbw
fstl
pop
ja
addr16
xchg
fisttpll
mov
push
rol
sub
cmp
shl
aad
xor
push
repz
jg
fiaddl
mov
aaa
lahf
lods
aad
mov
adc
popa
loop
sbb
into
pop
xchg
add
inc
push
sub
jo
dec
sahf
mov
orb
mov
adc
sub
ds
inc
sbb
fs
cmp
fwait
add
pop
sbb
jmp
aaa
pop
xchg
out
mov
scas
or
sbb
shll
insb
add
int
mov
pop
cmp
sbb
and
not
or
or
dec
shlb
test
cmp
adc
pop
jae
rcll
out
mov
and
jg
add
dec
in
in
push
fsubrl
sub
adc
mov
adc
psubsw
jecxz
mov
cltd
push
push
dec
je
inc
sbb
dec
dec
and
add
insl
rcrl
pop
sub
movsb
rol
cmp
rcll
add
enter
mov
nop
test
xlat
mov
sub
or
or
sbb
shlb
in
mov
xchg
and
addr16
lock
fwait
pop
dec
mov
in
jnp
pmullw
div
sbb
push
mov
pop
jge
stc
arpl
call
jbe
frstor
aam
mov
cld
iret
cwtl
jne
sti
das
out
cmp
orl
or
pop
inc
mov
jge
insl
xchg
push
aas
mov
outsl
into
call
repnz
mov
ret
sbb
dec
mov
jbe
mov
insl
dec
lret
mov
cmp
notb
adc
pop
or
pop
and
push
jge
lods
out
push
scas
notl
rorl
ja
xchg
bnd
push
cmpsl
mov
imul
addr16
imul
pop
dec
aas
int
mov
or
xor
jge
sbb
xchg
mov
arpl
xor
inc
notb
pop
aam
sahf
pop
or
pop
pop
mov
mov
out
adcb
inc
mov
mov
icebp
dec
adc
push
adc
push
xchg
sub
je
mov
cmpsb
repnz
push
push
and
push
cld
lret
rorl
mov
mov
iret
xor
int
mov
push
pop
daa
xlat
in
popa
xchg
mov
enter
pop
hlt
or
dec
xchg
fcmovnbe
les
mov
and
jg
scas
fcoms
arpl
cs
mov
stc
jecxz
std
je
imul
nop
push
xlat
lret
mov
xchg
add
adc
es
repnz
mov
cmp
popa
mov
jmp
or
pop
cs
push
and
call
popa
xor
mov
lock
pop
movsb
add
aam
inc
cmp
push
push
sub
scas
jg
in
mov
push
scas
lods
sub
loopne
lcall
push
bound
lret
push
js
jl
or
fisubrs
movl
movb
xchg
and
mov
push
pop
outsl
dec
les
in
mov
in
push
sbb
mov
sub
test
cmp
iret
hlt
pop
push
or
xchg
test
sbb
lock
or
push
daa
lods
xor
jbe
cmp
cmpsl
out
sti
add
and
add
sahf
jbe
sarb
cmpl
xchg
and
aam
mov
mov
push
push
mov
dec
pop
push
fucom
insl
mov
cmp
aaa
sub
pushf
repnz
mov
stos
xor
xchg
jg
idiv
xor
cld
mov
scas
pop
xchg
xchg
xor
mov
arpl
mov
mov
jno
xor
mov
cmpsl
test
jae
movsl
sahf
or
subb
or
push
shlb
push
gs
jns
xor
pop
cmp
jbe
adcb
xchg
xor
pop
btc
mov
std
dec
mov
jle
add
icebp
push
push
jo
fcmovne
xor
xchg
mov
and
sbb
pop
push
adc
cmp
outsb
shlb
cmp
push
mov
cld
dec
push
jge
xchg
mov
dec
iret
add
test
push
lods
xor
int3
adc
xor
and
inc
enter
gs
cmp
mov
push
or
ret
add
cmp
push
xchg
mov
sbb
adc
mov
pop
ret
lea
repz
jne
rcrb
inc
fists
ret
cmp
mov
adc
leave
cmp
xchg
mov
sub
push
movsb
push
loop
movsl
mov
daa
pop
nop
cmp
sub
mov
xor
push
pop
mov
ret
xchg
pop
cmp
fsts
xchg
scas
pop
xor
outsl
pop
stc
mov
dec
adc
sub
push
inc
das
inc
push
inc
fsubs
or
mov
lds
scas
jae
flds
ret
ret
lods
outsb
jnp
or
jne
cmpsl
xor
fstpl
scas
inc
test
dec
out
scas
lea
pop
push
insb
add
addr16
ds
xchg
xor
xor
fs
movsb
inc
dec
cmp
mov
add
mov
nop
xchg
sarl
mov
push
push
in
movl
mov
jmp
cmc
mov
arpl
sub
dec
push
aad
outsl
xor
jge
fistps
mov
lret
stos
jns
mov
clc
cmp
cmp
push
pop
adc
push
int
cli
aas
dec
and
sub
adc
mov
iret
jae
bound
dec
jns
hlt
pusha
or
adc
lods
out
add
lea
sub
inc
stc
and
lds
shrb
popa
cmpsl
jnp
pop
and
jecxz
xchg
push
xor
mov
mov
pop
lea
adc
js
push
xor
and
test
data16
xchg
pop
stc
push
pop
scas
cmpb
mov
push
inc
push
fidivrl
inc
fiaddl
xor
mov
iret
nop
sbb
stc
mov
and
xor
ja
sub
add
and
out
mov
xchg
jb
std
xor
imul
add
pop
gs
xchg
stos
and
ror
mov
andb
inc
fisttpll
sub
cmp
int3
mov
shlb
push
loop
dec
int
fxch
les
test
subl
into
add
aam
add
mov
push
int
sub
add
adc
inc
or
adc
mov
int3
pop
lcall
aad
push
decb
int
jo
mov
pop
shll
shll
cmp
add
cmp
dec
in
push
in
cmp
dec
adc
add
push
push
je
lods
push
inc
or
mov
cmp
sub
inc
lcall
cmp
hlt
out
stc
push
in
aam
outsl
cli
xor
fldt
stos
daa
cmp
mov
xor
cmovg
int
ret
pusha
pop
inc
dec
xchg
sub
test
aam
push
cmp
in
mov
xor
cmp
adc
sbb
outsb
clc
pushf
mov
outsl
adc
fildl
lret
mov
scas
sarl
xor
cmp
mov
loopne
sbb
sbb
lret
mov
ss
leave
scas
mov
das
or
popa
pusha
mov
adc
sti
lods
mov
imul
test
cmp
cmc
add
mov
xchg
mov
adc
sbb
or
sbb
lods
mov
jge
push
inc
in
gs
loope
out
sub
xlat
xchg
dec
std
and
dec
repnz
dec
push
addl
xchg
sub
add
xor
mov
mov
cmc
dec
push
mov
insb
test
bound
pop
cmp
add
push
std
add
pop
loop
dec
cmp
push
int3
stos
lret
dec
shl
mov
adc
dec
inc
adc
aas
sub
outsl
push
fcomps
cmp
push
push
cmp
jno
mov
push
mov
in
xchg
sub
aas
or
movsb
dec
inc
xchg
jg
ds
adc
shl
mov
bound
or
push
push
out
jp
dec
xor
mov
sbb
inc
hlt
stc
xchg
jle
jae
ret
xor
movsl
sahf
cwtl
xor
ret
jl
push
loop
scas
mov
push
adc
adc
xorb
fisubrs
aam
cmp
pop
fnsave
xchg
mov
cmp
aad
test
jns
ljmp
mov
sbb
in
test
dec
xchg
and
mov
andb
and
ljmp
jne
es
sbb
xchg
mov
pusha
in
and
sub
in
mov
mov
inc
or
mov
add
xor
mov
ret
sbb
cs
push
adc
xor
mov
aaa
fsubl
inc
jg
test
lods
push
mov
and
dec
inc
xchg
jl
or
pop
jl
mov
xor
mov
cmp
or
rorl
jmp
add
aaa
int3
imul
rcrb
shll
or
sub
mov
xchg
shll
lret
mov
dec
shll
outsb
mov
pop
xor
push
jp
cmc
mov
and
lret
push
cmpsb
jmp
imul
repnz
pop
xchg
divb
shlb
add
cmc
mov
pop
inc
mov
inc
adc
add
mulps
dec
sub
pop
add
imul
xchg
jg
xchg
sub
dec
pop
data16
mov
addr16
dec
mov
dec
mov
stos
ljmp
jbe
mov
mov
lcall
mov
adc
mov
mov
or
mov
adc
mov
dec
cmp
and
pop
lret
mov
out
out
out
cmp
mov
jge
andb
aam
bound
lock
dec
cltd
dec
clc
andl
int3
es
ja
imul
mov
loope
and
imulb
mov
fidivrl
ret
xor
sbb
mov
xchg
push
fwait
or
cmp
mov
repnz
push
push
je
push
cmpsb
jl
or
jns
or
loope
push
icebp
sahf
xchg
inc
scas
dec
xchg
lahf
lret
mov
inc
cmp
mov
jge
jbe
inc
in
mov
repnz
sub
xchg
pop
push
pop
add
add
jg
or
fs
cltd
scas
pop
ficomps
insb
in
pop
adcb
sbb
test
es
daa
fiaddl
xchg
leave
hlt
andl
cmc
repnz
lret
mov
cmpl
int3
dec
mov
bound
pop
push
test
cmp
xchg
push
inc
nop
shll
push
mov
in
xchg
add
int
xchg
rcrb
aad
adc
fwait
dec
push
lret
int3
dec
adc
sbb
jne
cmpsl
xchg
dec
fdiv
mov
pop
and
fdivrs
sbb
cmp
mov
divl
in
pop
xchg
adcl
mov
adc
sbb
mov
in
pop
insb
dec
divb
push
cmp
and
mov
aad
inc
mov
das
inc
dec
clc
je
test
pop
enter
data16
subb
dec
movsl
add
repnz
inc
dec
imul
mov
or
xor
sub
and
fdivs
mov
xor
mov
push
push
cmc
push
pop
fstl
idiv
pop
or
pop
in
mov
lret
incl
rcrb
mov
std
cmp
cltd
imul
lods
push
adc
adc
pop
enter
and
out
or
xchg
addr16
sbb
jle
jg
test
lock
jg
stos
or
push
xor
jge
mov
cmp
and
mov
cmpsb
xor
jge
test
lods
shrl
fyl2xp1
pop
sbb
aaa
int3
inc
jecxz
mov
aad
out
pop
dec
call
popf
addb
pop
fdivrp
std
aas
push
xor
sbb
mov
lret
pop
ret
sarb
and
or
jnp
mov
in
movaps
xchg
aaa
xchg
adc
rorb
jp
dec
inc
inc
mov
sbb
mov
les
stos
fldt
and
test
shlb
repnz
and
movsl
pop
lret
mov
scas
nop
pop
test
jecxz
icebp
mov
dec
push
sbb
mov
xor
dec
mov
and
pop
sbb
push
outsl
add
out
fldenv
push
cmc
repnz
faddl
adc
push
sahf
fstpt
cs
call
adc
mov
xchg
scas
cmp
inc
fsubrs
dec
push
cmp
out
es
iret
mov
roll
mov
xchg
loope
push
dec
outsb
or
loope
xchg
dec
ds
scas
mov
fdivrl
add
pop
pop
sti
adc
mov
es
inc
xchg
popf
pusha
inc
fxtract
fiaddl
pop
and
pop
and
and
loop
leave
sbb
mov
xchg
cs
cmp
fdivs
fnstsw
fstpt
add
ret
push
sbb
std
rorl
xor
loopnew
add
xchg
mov
adc
cmp
xchg
add
into
cli
cmp
and
lea
pop
fsubp
pop
jne
xchg
jecxz
int3
cltd
das
ljmp
ljmp
mov
xchg
in
cld
lock
fidivrl
fwait
mov
adc
mov
mov
mov
js
or
fwait
cmpsb
in
shl
mov
sarb
std
cli
stos
cltd
pop
mov
mov
adc
lcall
repnz
or
hlt
dec
mov
repz
xchg
mov
repz
jp
int3
daa
scas
subl
cltd
cwtl
mov
or
rcrb
jmp
push
push
movsl
cs
mov
or
mov
shrb
pop
sub
add
insl
dec
push
fs
pop
and
fwait
push
jl
mov
es
inc
mov
mov
add
mov
adc
pop
sub
dec
or
fcomp
inc
xchg
xor
in
add
cld
pop
pop
mov
adc
xlat
mov
pop
fdivl
fisttps
loope
dec
out
dec
pushf
ds
push
adcb
xchg
in
nop
lahf
sarl
mov
push
inc
out
sahf
lahf
jo
mov
fldl2e
and
cmp
mov
int3
lods
shr
or
in
ret
or
push
xor
scas
fwait
out
mov
sti
outsb
push
or
dec
lods
push
insb
sbb
into
inc
push
aas
sub
movsl
jmp
mov
ja
dec
loop
and
pusha
ljmp
mov
push
or
lea
es
add
popa
jmp
mov
icebp
add
test
jge
sbb
cs
js
flds
mov
mov
push
daa
pop
insl
xchg
adc
call
mov
andl
imul
ss
jmp
push
hlt
fwait
pop
mov
sbb
movsl
pop
loope
repz
sbb
les
mov
pop
cmp
jo
sbb
inc
mov
cld
and
fsubs
pop
adc
mov
pop
lret
jl
cmp
push
fmul
cld
jmp
sbb
push
sub
jns
xor
sbb
orb
in
popf
es
push
xor
push
jne
sbb
dec
mov
lcall
inc
pop
ss
daa
adc
pop
push
or
jle
fwait
mov
jle
cmp
fs
lods
jecxz
or
mov
add
enter
and
std
and
imul
fs
adc
leave
dec
fs
iret
subl
stos
xor
hlt
pop
xlat
shlb
or
ficomps
jp
mov
push
jb
movsl
subl
movsb
call
mov
scas
cli
xchg
push
mov
sub
into
mov
fidivrs
jbe
add
xchg
mov
test
xchg
pop
mov
vmovapd
sbb
sub
inc
fsubs
sbbl
fwait
sbb
jnp
in
xor
repz
add
push
pop
mov
dec
scas
aad
xchg
push
jecxz
movsb
cltd
cmp
and
mov
lea
scas
adc
fsubrs
fcomip
pop
clc
fstps
aas
xchg
rcrb
mov
outsl
jne
inc
leave
mov
dec
jno
fcompl
sbb
push
arpl
or
push
xchg
xor
pop
adc
nop
insl
push
imul
rorl
lods
cmpb
jge
mov
pop
mov
jno
out
cwtl
jle
orl
aas
mov
inc
cli
lods
push
cmp
cwtl
lcall
jnp
cmc
xlat
lods
lea
cld
and
add
test
mov
repz
adc
add
nop
xor
push
mov
mov
adc
sbb
xor
mov
mov
cs
ficompl
sbb
mov
cmp
jmp
jg
jmp
xchg
cltd
ljmp
sub
cmp
les
loope
lcall
clc
and
dec
mov
imul
rcll
dec
aaa
xor
js
xchg
test
xorl
popa
not
pop
and
dec
mov
iret
pop
pop
outsl
in
mov
in
test
nop
or
enter
push
pusha
mov
rcl
outsb
and
adc
sbb
loopne
aad
test
je
add
adc
sub
or
loopne
inc
jo
pop
pushf
popa
xor
lcall
cmp
cwtl
addl
xchg
in
xchg
rclb
bnd
fdivs
push
dec
mov
rcrl
mov
cmp
aad
sub
popa
addr16
daa
mov
lods
js
inc
in
cld
sbb
xchg
shl
dec
jns
mov
lea
cli
and
jle
dec
push
je
push
mov
lock
jbe
ljmp
or
sbb
xor
movsb
cltd
je
ss
shlb
or
fcmovnb
outsb
sbb
ss
cwtl
lods
das
push
mov
pop
fsubrs
or
leave
sti
cmpsb
out
xchg
jbe
cltd
ss
loopne
add
inc
mov
sub
repnz
lea
push
pop
ret
pop
ficoms
idivb
jmp
mov
adc
or
es
loopne
cwtl
jne
lods
cmp
outsb
imul
cmp
sbb
into
add
xor
lcall
shlb
sub
scas
mov
inc
ret
jmp
aas
add
cmc
test
repnz
inc
xchg
icebp
in
pop
xor
or
pop
adc
sbb
mov
cmp
xchg
xor
pop
sub
mov
call
loopne
repz
ret
sub
das
lret
testb
mov
or
ja
fs
mov
lock
aas
cmp
test
push
push
lcall
dec
int3
movsb
inc
mov
cmpsl
and
jns
mov
jnp
cmp
xchg
fdivl
mov
stos
mov
sbbb
fidivrs
clc
lds
dec
es
pop
xor
sbb
xor
xchg
sbb
or
mov
push
xchg
aas
aas
jl
pop
es
pop
jne
ds
pop
xor
push
add
subl
mov
dec
js
mov
mov
xor
sbb
xchg
cmp
adc
movsl
xchg
repnz
in
repz
add
mov
repnz
jnp
imul
std
push
pop
stc
push
xchg
sti
mov
data16
pop
iret
pop
mov
daa
cmpsl
sti
mov
push
inc
mov
cli
iret
icebp
mov
sbbl
xchg
jle
cmp
call
dec
inc
xor
xor
pop
repnz
push
xor
ficomps
xchg
lods
xor
cltd
orl
pushf
or
inc
stc
mov
dec
mov
mov
dec
hlt
cmp
pushf
ja
sub
shr
jne
je
mul
scas
lret
lret
mov
lahf
addl
inc
sbb
sub
pop
jno
imulb
cmp
pop
mov
aad
int
iret
leave
cmp
je
inc
lret
int
inc
adc
gs
and
dec
dec
clc
or
sub
jb
shl
leave
sub
and
ds
lret
mov
scas
dec
inc
bound
or
mov
add
mov
mov
push
push
sti
in
out
mov
or
mov
mov
mov
push
inc
xor
popl
add
cmp
je
int3
mov
lock
push
imul
imul
and
loope
pop
cmpsb
ficoml
mov
push
cmpsb
pop
lods
mov
loop
cmp
sub
dec
jle
or
loopne
sub
lcall
xchg
aad
dec
mov
push
inc
out
inc
pop
iret
or
imul
pop
cmp
pop
outsb
or
lods
int3
jmp
xchg
mov
out
lret
pop
push
pop
mov
add
push
call
jmp
shlb
inc
xor
jne
out
in
leave
and
daa
mov
sti
fxch
fs
pop
rcll
loope
adc
in
inc
sub
cli
in
cmc
leave
fstpl
daa
loopne
in
lret
ja
and
jo
lahf
sbb
dec
xor
into
popf
xor
fs
int3
ds
popf
mov
ss
and
and
mov
stc
cmpsb
xor
fwait
xchg
jg
test
rol
push
mov
inc
jmp
mov
sub
mov
inc
push
inc
jae
int3
dec
mov
cltd
clc
aaa
mov
xlat
ret
icebp
inc
xor
daa
mov
inc
sub
pop
pop
add
add
inc
inc
mov
mov
pop
mov
mov
push
aaa
imul
shrl
pop
pop
decl
push
aas
jo
cli
xchg
shrl
outsl
in
mov
sub
add
mov
pop
jb
mov
sbbb
loopne
sub
mov
xchg
stc
jmp
add
jb
cmpsl
jno
fcmovnu
lea
pop
dec
icebp
loop
insl
inc
negb
jb
scas
or
mov
adc
inc
outsl
adc
xchg
adc
loope
in
imul
rcrl
imul
and
mov
std
xor
sarb
push
push
dec
inc
cmp
adcl
xorb
xchg
scas
ss
leave
insl
fdivs
jbe
or
stos
inc
aaa
mov
adc
push
loop
cmp
fisttps
fildll
jmp
and
orl
rcl
inc
mov
test
fwait
dec
or
lods
mov
push
xchg
push
mov
imul
mov
jbe
jmp
imul
ljmp
fucomi
xchg
jmp
dec
mov
dec
rcll
bound
mov
test
repz
cmp
das
pop
jmp
or
adc
xlat
ds
nop
jno
mov
mov
jbe
mov
int
lds
subl
daa
mov
insb
in
shll
mov
daa
jmp
dec
ss
js
add
ret
push
fcmovu
es
inc
aam
repz
pop
add
fcmovnu
shll
pop
inc
sbb
test
dec
fidivrs
jl
inc
aam
xchg
mov
mov
sub
nop
divl
mov
mov
ja
in
xor
jl
pop
ss
push
aad
jl
xchg
cmp
out
push
adc
lahf
push
lods
in
add
dec
jno
dec
das
sbb
jmp
jae
insb
sti
sbbl
stos
and
rcll
rcrb
mov
hlt
pop
sub
xlat
das
arpl
inc
movsb
jecxz
inc
xor
outsl
or
sbb
pop
adc
leave
cmp
mov
jno
jecxz
shrb
inc
dec
es
xchg
popf
scas
mov
dec
cli
aas
sti
inc
ds
dec
aas
mov
xor
loop
out
mov
xlat
cmp
cltd
xchg
pushf
js
push
jae
cli
in
fbld
aad
pop
icebp
out
jo
mov
pop
js
mov
jmp
cltd
ficomps
je
je
pop
fwait
shrl
ljmp
push
mov
push
str
lds
inc
dec
push
mov
dec
cld
or
cmpsb
dec
and
je
add
xlat
mov
adc
dec
xchg
inc
lods
ljmp
sbb
es
xchg
inc
sub
popf
jp
pushf
cmpsl
jno
jle
xor
leave
stc
pop
out
out
mov
jnp
xchg
filds
mov
loope
pop
lea
mov
adc
mov
mov
cli
push
les
dec
xor
adc
mov
inc
lret
cmp
pop
mov
add
sbb
aas
sbb
inc
xor
sub
pop
fildll
je
mov
add
aas
ss
cltd
pop
add
mov
jb
sub
lea
lds
inc
jl
les
push
stos
pop
add
mov
inc
or
xchg
pop
push
out
out
inc
sbb
mov
cmp
pop
adc
les
inc
xchg
xchg
adc
daa
clc
and
test
stos
push
rcrb
mov
cmpsl
std
test
fwait
test
dec
cltd
fstl
sbb
push
aas
pop
jno
ret
adc
aam
sub
fwait
sti
pop
mulb
ret
cmp
in
cmpsl
les
ss
or
lea
xor
movsb
mov
sub
movsl
adc
sub
jo
dec
dec
xor
popf
fbstp
mov
iret
stc
push
jo
dec
mov
int
ss
inc
leave
pop
outsl
dec
subl
dec
lcall
cld
pop
fs
ret
pop
test
push
out
loopne
imull
popf
adcb
add
lcall
cwtl
mov
mov
dec
adc
cwtl
sub
cld
icebp
jo
add
push
fcoms
int
cmp
minps
loope
addr16
and
jnp
mov
lea
xlat
pushf
xor
loope
lret
rolb
test
mov
mov
insb
and
xchg
adc
stos
and
or
stos
xor
push
call
shll
es
or
pop
push
add
mov
add
pop
adc
lock
cld
ret
in
push
insl
decl
jno
gs
inc
arpl
orl
lahf
or
mov
sub
sbb
sub
pop
push
sub
sahf
shlb
adc
stos
enter
int
mov
cmp
stos
pusha
mov
lods
in
fisubrs
add
xchg
xchg
xor
jg
push
stos
xlat
out
add
cs
mov
xchg
in
inc
dec
inc
insl
mov
fnstcw
xchg
cmp
fsubr
mov
push
test
sbb
add
add
mov
mov
push
mov
mov
jbe
and
xlat
lds
add
mov
push
inc
ss
inc
or
pop
xlat
jae
insb
mov
add
push
lods
fwait
jo
aas
jns
mov
fs
sub
or
cmpsb
mov
jne
scas
xor
lea
jge
pop
jnp
lods
sarl
mov
mov
add
movsb
pop
shl
fs
push
add
or
stos
popa
sub
iret
das
repz
mov
jp
lods
in
add
iret
hlt
push
mov
pop
or
sti
pop
sbb
out
jge
inc
xor
wbinvd
gs
xchg
push
shr
inc
shlb
adc
lods
push
cmpsl
in
jae
loop
js
popa
arpl
loop
cwtl
and
pop
iret
mov
xor
and
mov
test
add
xchg
adc
or
pop
outsl
lods
add
mov
pusha
and
cmp
cwtl
jl
mov
imul
loop
popw
repnz
cwtl
out
clc
add
enter
sub
sbb
adc
sarl
lods
inc
into
push
fcmove
or
jge
movsl
out
jmp
and
push
sub
sub
in
push
mov
push
lock
jb
pop
ja
in
popf
inc
loop
add
clc
xchg
jb
mov
or
lea
inc
sbb
mov
fbld
mov
enter
rolb
adc
arpl
pop
sbb
lods
adc
imul
mov
mov
iret
pop
cmp
nop
push
sbb
sbb
pop
jge
outsl
xor
mov
mov
cmp
cs
and
daa
inc
insl
mov
pop
lea
leave
sbb
repz
inc
inc
and
or
push
std
add
mov
lret
sti
xchg
repnz
lock
das
ds
push
pop
cs
aad
cmp
push
and
pop
cmpsb
ds
into
hlt
out
xor
loop
in
loop
cmp
mov
cli
or
inc
repnz
icebp
or
pop
rorb
xchg
and
xchg
lods
js
cmc
mov
or
jg
imul
in
pusha
and
out
lret
xor
pop
outsb
pop
push
lods
dec
xor
pop
inc
push
sbb
ret
imul
test
addr16
cmp
inc
inc
sbb
add
jo
sbb
sub
adc
fwait
inc
sub
out
xor
xchg
sub
pop
pop
xchg
int
std
or
je
pushf
sbb
mov
mov
repnz
jb
scas
lds
sbb
je
addr16
jg
test
popw
ret
and
imul
jge
sti
mov
add
pop
enter
icebp
mov
xor
sbb
lods
mov
mov
cmpsl
es
and
shll
or
js
pusha
sub
aas
xchg
jo
jno
dec
je
mov
call
mov
icebp
or
inc
aad
mov
aas
sub
nop
sbb
inc
faddl
mov
cmc
mov
mov
push
dec
out
in
or
in
dec
aam
mov
daa
sub
xor
mov
sub
xorl
iret
aaa
cli
and
bound
aas
arpl
addb
jns
mov
mov
and
bound
cld
cmpsb
into
loop
jl
sub
sahf
in
mov
rolb
mov
in
mov
jl
loope
test
push
adc
lahf
jmp
mov
hlt
shlb
pusha
loop
mov
pushf
loop
sahf
mov
xor
cwtl
fs
cmp
jle
je
and
loope
cmp
bound
jbe
xchg
cmpb
pop
in
push
fdivrl
ret
repz
xor
icebp
xchg
out
call
mov
add
popa
cmp
push
out
repz
xor
scas
xchg
mov
sbb
add
sub
ficoms
fisubs
dec
push
repnz
mov
mov
or
int
fwait
mov
mov
or
movsl
test
fcomp
push
mov
mov
data16
sbb
fistps
clc
movsb
and
cltd
pop
mov
enter
test
insb
leave
loop
or
and
les
and
mov
clc
into
xor
hlt
xlat
pop
popa
cmp
and
xchg
mov
jbe
test
push
popa
pop
sbb
jmp
lds
dec
dec
inc
les
cmp
stc
add
std
pop
stos
mov
fsubrs
mov
jno
sbb
push
xor
xor
jl
into
inc
popf
movsl
flds
sbb
jle
outsl
lcall
xor
add
icebp
xor
aad
and
mov
into
adc
imulb
sub
push
push
jnp
cmp
in
cmc
ds
xchg
push
fldenv
sbb
ret
pop
jp
adc
iret
mov
lods
push
sub
xchg
xchg
xchg
inc
or
insl
aas
push
sub
sbb
lret
jl
aam
push
push
mov
gs
jp
addr16
ret
call
mov
add
mov
insl
adc
fadds
jnp
cmc
push
mov
add
rclb
cltd
pop
mov
insb
dec
mov
movsb
jb
xor
pop
jmp
bound
xchg
push
mov
lret
jb
arpl
js
dec
sbbb
xchg
cmp
pop
rcl
mov
ljmp
out
arpl
inc
xor
mov
enter
dec
adc
mov
out
pop
add
sub
mov
adc
sbb
ss
dec
add
sahf
adc
push
mov
in
lret
mov
xor
mov
inc
pop
and
mov
xorl
pop
and
sbb
andl
cmp
repz
inc
andl
jle
sub
mov
jo
pusha
test
pop
popf
xor
subb
sbb
xlat
jle
outsl
pusha
and
dec
xchg
pop
xchg
aas
add
lods
insl
rcrl
ret
xchg
hlt
idivl
pmulhw
out
rorb
push
xchg
add
add
mov
insl
adc
cmpsl
subl
in
cmpsl
add
fidivrs
add
dec
test
inc
pand
pushf
dec
pop
dec
cmpsw
ss
dec
xor
inc
insb
scas
cwtl
fistpll
mov
lret
hlt
fnstcw
fistps
inc
jb
sub
sbb
cld
inc
mov
add
adc
mov
jo
out
and
pop
std
dec
inc
pushf
pushl
into
cli
adc
mov
mov
mov
insb
sub
sahf
jb
sbb
out
aas
xchg
jne
popa
add
lret
adc
mov
push
xor
imul
mov
push
mov
mov
sub
adc
cmc
bound
xchg
daa
sub
adc
xor
or
cmpsb
and
fsub
inc
push
mov
pop
inc
ds
jge
fwait
into
and
out
ret
ja
lahf
and
test
repz
pop
jl
ljmp
adc
test
shrl
icebp
cmpsl
xchg
sarb
cwtl
adc
jle
pushf
shrb
xchg
shrb
subl
ret
idivb
pop
lahf
jb
mov
or
or
lcall
imul
push
outsb
push
inc
add
cmp
and
jecxz
popf
or
jecxz
imulb
nop
push
dec
sub
hlt
mov
jnp
sbb
cmp
pop
fisubl
cmp
xchg
sub
inc
stc
fcoms
sub
lods
paddb
inc
int
jbe
in
je
repz
jle
adc
adc
pop
xchg
pop
or
jl
cmpsl
inc
pop
add
popf
mov
push
push
lcall
push
mov
ds
cmp
das
into
sub
pop
subb
pop
fists
xchg
push
cwtl
push
cmp
xor
sbb
dec
push
push
cmp
jbe
fsts
pop
sub
repnz
enter
dec
lea
in
xchg
mov
cmc
push
mov
jb
mov
jbe
pop
jg
insl
dec
push
movsl
aam
jno
iret
in
push
js
push
leave
imul
repz
fs
fldenv
or
jb
push
xor
xlat
das
popl
jge
mov
xchg
mov
data16
imul
ficomps
or
imul
dec
jns
cmp
jo
push
out
xor
or
or
fcoml
add
dec
mov
jne
cmp
adc
xor
jno
dec
ss
push
inc
inc
pop
stos
cmpsb
jae
jp
jns
sub
jmp
or
ljmp
push
xorb
push
sbb
mov
lods
hlt
push
cmp
cs
adc
xchg
inc
mov
mov
cmpl
scas
jmp
xchg
xor
in
mov
pop
jo
popa
into
movb
cmpsb
nop
mov
mov
lret
inc
in
stos
js
and
inc
push
xor
sahf
rclb
mov
int3
pop
dec
add
adc
xchg
push
jmp
in
lahf
mov
mov
add
jg
int3
dec
ss
jns
ret
enter
insl
jecxz
cltd
mov
adcl
call
ljmp
xor
pop
mov
sbb
movsb
icebp
cwtl
pop
inc
scas
xchg
inc
pop
cmp
test
push
mov
or
push
xor
lock
movsl
push
test
mov
stos
push
add
sbb
fs
mov
gs
add
fnstcw
test
cmp
xchg
or
movsl
mov
loop
jle
aas
addr16
cli
fs
stc
cltd
push
cmpsb
push
mov
fimull
mov
mov
lahf
rol
inc
lods
fimuls
jle
push
stos
adc
jmp
arpl
insl
jne
pop
cmpsl
leave
jb
loope
test
xor
shll
inc
cmp
mov
jmp
xchg
cs
mov
mov
or
inc
push
test
add
jle
mov
movsb
mov
push
push
fimuls
push
mov
jmp
or
sarb
adc
mov
xorb
stc
mov
leave
xchg
shlb
xor
adc
lret
rcl
fnstsw
fwait
mov
and
push
mov
cmp
data16
pop
mov
fldl
lret
sbb
jmp
test
jp
push
hlt
add
sub
add
xor
cmp
rcll
jle
adc
std
js
push
add
jno
push
sahf
clc
fimull
push
cmp
push
dec
lcall
movsb
movsl
push
adc
leave
ficomps
push
cmp
xchg
cli
lcall
pop
push
pushf
jo
das
and
les
push
push
loop
dec
movsb
call
movsl
lods
sbb
les
pop
cmc
test
jnp
icebp
and
adc
bound
mov
mov
out
outsl
repnz
mov
inc
add
cmc
inc
jae
loope
sub
js
cltd
int
xor
les
jae
dec
in
push
xchg
push
jne
rcr
clc
cltd
ftst
pop
jmp
jb
adc
cmp
sub
adc
xor
xor
sub
inc
imul
mov
sahf
xor
lahf
mov
sub
cmc
shrl
scas
jo
hlt
pop
inc
nop
mov
aaa
cs
cmp
test
in
int
inc
stc
pop
mov
lods
js
jg
push
mov
imul
into
adc
mov
sbb
mov
lcall
adc
jae
mov
or
sar
insb
xor
idiv
ret
or
xchg
xor
pusha
cmpsb
lret
lret
push
sbb
mov
test
loopne
cvtdq2ps
push
fsubr
hlt
fildll
mov
add
jo
aam
cmpsb
pop
cmp
insb
inc
xchg
xlat
lods
stos
push
pmovmskb
lret
lahf
mov
sbb
mov
sbb
mov
push
nop
cmpsb
call
mov
js
jae
in
and
mov
jae
dec
xchg
movsb
fcomps
loopne
test
inc
or
push
fs
jne
sbb
jg
jne
sbb
and
ficoms
adc
arpl
inc
fbld
sbb
adc
push
xor
mov
and
cwtl
stos
ficoml
enter
jge
in
sub
pop
pop
pushf
je
stos
mov
int
xor
xchg
fucomp
add
or
mov
ret
insb
sti
mov
push
mov
imul
pushf
mov
inc
shlb
data16
loop
jne
dec
pop
xchg
cli
jns
mov
bound
xchg
ljmp
in
pop
pop
add
adc
in
pop
cmp
inc
push
xchg
out
inc
lret
push
xchg
cmpsb
stos
ret
xchg
mov
shll
inc
stos
fisttps
and
cmc
xchg
fidivrl
pop
add
cmpsb
inc
nop
mov
push
fs
in
out
xlat
gs
push
in
xchg
lcall
pop
hlt
mov
test
loopne
sbb
jp
test
add
je
fptan
or
shl
push
sbb
dec
lahf
mov
xchg
push
aas
dec
inc
sahf
repz
out
and
and
lock
pop
pop
cmc
cld
push
add
mov
mov
push
dec
mov
call
ss
loopne
imul
mov
xchg
and
daa
jmp
jmp
dec
add
push
enter
xor
sub
sahf
in
mov
and
mov
cli
jge
fldl
sbb
dec
cmc
mov
or
and
stos
stc
bnd
pop
add
mov
pop
xor
sub
add
aaa
xor
in
es
fcoms
jl
lods
iret
fwait
into
and
addr16
pop
jge
aaa
test
ficoml
xchg
std
jecxz
cmp
fstpt
xchg
lret
loopne
rcrl
nop
cmovae
adc
add
cmpsb
mov
lret
ja
je
jb
xchg
push
repz
jns
lcall
mov
pop
cmp
fcoml
mov
jle
inc
int3
orl
mov
pop
loope
aam
jb
add
inc
xchg
push
stos
mov
in
push
mov
clc
push
add
ds
jne
xchg
lock
js
cld
adc
stos
inc
test
out
fiadds
cmpsl
popf
xor
push
sub
or
fmul
loopne
mov
cmp
mov
ja
or
imul
test
in
aaa
aam
xor
popa
dec
jmp
xchg
cli
jae
xor
sbb
mov
js
and
cmpsl
pop
xchg
cmp
ja
mov
pushf
push
inc
xchg
sub
mov
or
int3
adc
mov
sub
lds
imul
pop
inc
in
inc
lock
roll
inc
rolb
xchg
repz
cmpsl
xchg
insb
in
mov
jg
mov
sbb
jmp
lahf
cltd
xor
loopne
aam
out
inc
sub
fyl2x
mov
addr16
ds
lahf
movsb
aaa
push
sub
dec
int
add
sub
loopne
ja
or
mov
fcoml
adcb
inc
jnp
or
lods
pushf
out
push
mov
cmp
mov
rorl
das
xchg
and
cld
mov
push
pop
dec
aas
or
mov
pop
add
jno
pusha
cmpsb
ror
sbb
lret
mov
scas
aaa
ss
call
arpl
out
jmp
pop
inc
out
adcl
jne
jbe
push
mov
into
mov
nop
mov
push
lods
movsb
pop
dec
std
push
inc
inc
rclb
lods
push
xor
push
gs
jo
sbb
and
mov
sub
imul
outsl
leave
pop
lahf
push
pop
jb
jnp
ret
mov
xchg
cmpsb
push
sarl
sbb
shll
sbb
xor
ljmp
imul
add
inc
jle
inc
fiaddl
popa
daa
hlt
adc
xchg
dec
movsl
or
adc
movsb
jecxz
dec
ret
in
cltd
pop
cmpsl
stc
or
clc
cmp
push
xchg
pushf
mov
pop
imul
jno
sub
adc
testl
adc
push
mov
push
roll
dec
push
jo
stos
je
mov
addr16
ret
dec
imul
cmpsl
mov
jge
sub
cltd
mov
mov
xor
push
fldcw
or
add
push
dec
aas
dec
sahf
mov
imul
lahf
mov
xor
push
and
and
jns
clc
xor
cmp
jge
addr16
mov
add
in
cwtl
xor
cmpsb
sub
sti
stc
arpl
jnp
cwtl
mov
sub
or
adc
adc
dec
adc
mov
pop
jl
insb
dec
add
push
sbb
xor
gs
pop
or
or
in
add
test
and
inc
clc
inc
in
bound
mov
pop
pop
jno
mov
xor
aaa
inc
loopne
popf
mov
xchg
sar
cltd
lods
or
sub
insb
push
aaa
sahf
ficomps
fdivp
cltd
ds
jne
subl
das
jns
jnp
leave
and
push
je
mov
pop
out
mov
cmpsb
push
xor
test
mov
xchg
mov
aaa
cwtl
adc
push
sbb
fisttps
call
push
jae
std
into
sbb
repz
pop
cmp
in
hlt
xchg
cmpsb
lahf
add
ja
sub
rolb
lret
lea
call
mov
mov
aaa
lods
mov
in
mov
je
lcall
test
shlb
pushf
popf
jo
and
pusha
call
test
inc
fstl
push
cmp
pop
sbb
add
in
jecxz
xchg
std
push
ja
mov
sbb
xor
jecxz
iret
adc
mov
daa
xlat
imulb
call
sub
cmpsb
sub
pop
scas
xor
push
dec
mov
cmp
mov
jge
shrb
fsubrp
in
cld
mov
movsb
jne
loope
call
and
in
inc
sub
outsb
mov
fidivl
out
mov
mov
mov
sub
sarb
dec
dec
xor
xor
stos
jg
jnp
push
sahf
lea
push
or
stc
jne
pop
ds
mov
sbb
jl
shll
fiadds
adc
add
icebp
dec
dec
fwait
or
int
xlat
rorb
int3
push
or
inc
dec
mov
inc
idiv
push
mov
mov
xor
std
sub
lahf
dec
shlb
xchg
out
cmp
imul
fsubr
adc
push
and
shlb
add
mov
and
outsb
imulb
xchg
xchg
inc
loope
divb
into
or
rolb
mov
and
mov
cmpsb
dec
out
push
mov
jge
xchg
ljmp
jo
imul
test
daa
push
xor
ret
sub
mov
je
push
jle
dec
ja
cmp
pop
shlb
cmpsb
push
cwtl
push
add
add
fwait
mov
pop
inc
and
loopne
movsb
ret
adc
mov
mov
xlat
sub
xor
popa
mov
js
enter
and
cs
lcall
out
mov
xchg
sbb
pop
push
test
push
sti
push
mov
out
push
xchg
mov
mov
subl
lcall
mov
jae
jl
mov
adc
sbb
mov
adcl
push
movsb
mov
arpl
jne
xlat
pop
andb
mov
and
lea
pop
pop
repnz
lret
fnstcw
and
lahf
ljmp
jae
rolb
jecxz
push
jbe
xchg
sbb
out
push
add
popl
xchg
andnps
cwtl
cmpsl
mov
ret
sbb
imul
ljmp
sarb
inc
mov
enter
push
in
xor
xchg
addr16
sbb
in
mov
daa
jge
dec
mov
mov
cmc
jg
add
clc
inc
and
lret
jns
iret
leave
pop
bnd
jge
add
loope
iret
loopne
fildl
dec
mov
mov
push
arpl
fwait
gs
test
jno
aam
cmpb
imul
cwtl
cmp
push
nop
adc
mov
mov
xorb
inc
push
loopne
adc
fs
ja
popf
and
in
sbb
and
aas
iret
sbb
sbb
inc
loopne
les
mov
xchg
in
mov
ret
inc
ss
loope
lret
jg
out
jl
frstor
jo
icebp
jns
call
cmp
insb
sub
hlt
mov
xchg
fstp
inc
push
stc
mov
adc
sar
out
pop
push
dec
adc
icebp
or
cmp
push
pop
cmpsb
push
add
hlt
mov
lcall
mov
xrelease
xor
pop
adc
out
mov
cmp
or
mov
nop
mov
mov
test
cli
test
in
das
mov
xchg
mov
add
jl
sub
fwait
mov
pop
repz
int
dec
adc
aaa
ret
cmpl
sbb
or
scas
push
or
jb
mov
cmp
imul
movsb
jg
push
add
or
arpl
lcall
pop
push
xchg
std
mov
xlat
mov
sbb
dec
int3
and
mov
dec
std
xchg
addr16
push
adc
sub
mov
cmpsb
std
dec
mov
cli
xlat
sbb
adc
mov
pop
cmpsb
bound
or
fs
imulb
inc
jecxz
in
jbe
cmc
push
cmp
mov
leave
dec
xchg
fwait
andl
dec
mov
repnz
or
pop
adc
mov
roll
shrl
adc
sbb
enter
or
out
and
pushf
out
xor
idiv
cwtl
cmpsb
out
inc
mov
les
sahf
inc
dec
out
js
fidivl
or
mov
andb
xlat
imul
repnz
mov
outsb
addr16
cmc
push
cmpsb
int
push
or
les
mov
mov
push
lea
and
adc
mov
lret
mov
ds
and
push
fisttpl
dec
aaa
mov
push
mov
lods
mov
fwait
out
mov
lret
subl
pop
dec
lret
mov
xchg
cmpsb
divb
ret
mov
arpl
adc
das
xor
inc
or
push
loope
xor
fidivrl
loop
fs
ja
mov
pop
fiaddl
sub
mov
and
les
rcrl
add
pop
mov
mov
cs
aas
inc
hlt
orb
jbe
mov
mov
inc
icebp
cmp
and
adc
adc
movq
mov
xchg
test
xlat
pop
xor
cltd
cmp
push
or
sub
enter
ss
ds
inc
dec
jmp
ljmp
inc
mov
mov
or
out
jle
cmpsb
fsubrl
aam
pushl
lcall
dec
mov
ficomps
xchg
jle
sbb
push
push
mov
and
jno
jo
jl
mov
push
jp
mov
sarb
stos
xor
cmp
mov
loopne
divb
mov
mov
xor
mov
or
and
sbb
push
stos
movsl
sarb
fstl
pop
pusha
insl
fidivrs
in
lret
leave
add
in
mov
mov
ja
jp
inc
popf
nop
adc
jb
mov
xchg
out
shll
shr
cs
in
mov
cltd
and
fmul
in
push
arpl
pop
stos
das
push
aam
push
mov
ss
ficompl
or
popa
xor
jne
sub
scas
leave
sbb
sub
std
inc
jg
cmp
jns
mov
dec
ss
sbb
mov
push
mov
dec
jbe,pn
jbe
sbb
adc
arpl
sub
jae
and
and
mov
jne
popa
push
hlt
repz
enter
ja
imul
cmp
fiaddl
lret
jmp
sahf
xor
jp
pop
jno
stos
push
fnsave
pop
jp
ljmp
je
js
mov
cs
int
or
mov
mov
shlb
sbb
pop
push
rcl
dec
jnp
fs
movsl
pop
outsl
mov
cmpsl
and
xor
das
lret
stos
mov
ss
lcall
aaa
out
dec
mov
push
stc
sub
or
sbb
cli
pop
adc
mov
push
imul
pop
mov
int3
inc
sub
aas
rol
add
sbb
inc
push
xchg
cmp
andl
adc
mov
js
cmp
pop
rcrb
mov
sbb
sbb
xchg
pop
loop
push
pop
jg
push
scas
or
out
pop
add
mov
rolb
xor
cmpsb
imul
je
mov
icebp
adc
js
or
xchg
dec
dec
jg
lahf
cmp
fwait
ja
scas
sti
rclb
add
mov
ror
mov
mul
pop
and
sub
sbb
std
dec
jne
dec
sub
mov
or
mov
hlt
arpl
ret
lock
inc
pop
pusha
inc
jnp
sahf
add
xchg
aaa
test
add
fwait
jecxz
movsl
inc
repz
pop
xor
loope
fsubl
inc
cmpsb
lahf
aad
adc
jge
inc
xlat
scas
pusha
xor
pop
rorb
sbb
mov
jmp
outsl
cld
sub
ljmp
jb
popa
fcoms
pop
inc
in
mov
ret
inc
movl
push
dec
popa
popa
cmp
sub
push
mov
jmp
sbb
push
push
ret
jnp
insb
inc
adc
sub
and
push
pusha
and
in
jnp
sbb
fisubrl
out
lock
xchg
cmp
outsl
or
mov
sarb
xor
xor
push
add
rorb
es
cmpsl
repnz
adc
cmp
cmp
mov
pop
stc
sbb
call
sbbl
and
pop
cwtl
inc
lods
fadds
std
into
push
cmp
jnp,pn
dec
sarl
sub
jae
mov
mov
cmp
fldt
sub
adc
mov
negl
pop
std
lret
das
pushf
bound
lea
dec
lds
fs
mov
add
add
clc
leave
pop
pop
pop
scas
enter
popf
imul
out
jl
js
mov
fiadds
sub
mov
add
jge
ds
dec
out
ret
pop
jnp
add
sbb
outsb
cltd
push
sar
jg
lods
bnd
ds
pop
in
je
mov
out
pop
xor
hlt
shll
popf
loope
xchg
and
ljmp
in
mov
inc
stos
loop
push
pusha
js
mov
movsl
sahf
push
sbb
jle
mov
stc
add
outsb
mov
pop
int
inc
add
inc
fldenv
jbe
ljmp
stos
add
mov
test
cmp
push
jo
sub
mov
dec
xchg
fisubrs
sub
repz
add
adc
push
pop
fcomi
mov
jge
in
add
insl
test
fwait
xor
and
or
xor
out
sahf
push
mov
sbb
stos
aad
cld
out
adc
out
ret
fiaddl
pop
iret
cmc
idivl
outsb
mov
push
jnp
fdiv
xlat
xchg
cmp
cmp
and
and
out
ja
push
int
sub
add
add
xchg
or
cltd
dec
cld
in
das
cli
test
adc
mov
enter
mov
ficomps
enter
sahf
repz
enter
and
loop
dec
push
cmp
out
int3
xchg
mov
cmp
push
out
adcb
loopne
jne
lods
ret
push
dec
test
xor
adc
rcrl
fisubs
cmpsl
push
adc
lods
sbb
in
lret
xor
mov
cmp
fstp
mov
pop
aas
daa
xchg
gs
inc
stos
inc
mov
jne
call
push
int
mov
daa
xchg
push
test
push
add
and
push
xchg
jmp
or
dec
mov
movsb
inc
popf
je
push
inc
dec
movsl
push
sub
xorb
adc
loop
dec
nop
push
sub
xrelease
adc
or
sbbb
fcmovu
push
fcomps
shll
fiadds
cli
mov
mov
jne
jae
stos
js
push
mov
fcmovnbe
out
mov
outsb
add
arpl
sti
cmp
test
sub
sbb
adc
mov
cmpsl
loopne
inc
addr16
bnd
outsb
adc
sbb
dec
aad
sub
arpl
add
sub
mov
scas
aas
xor
push
cmc
mov
test
iret
dec
xor
add
out
xchg
add
out
cmp
jne
test
and
js
fstpt
outsl
inc
cmp
jne
mov
scas
pop
or
dec
mov
popa
mov
das
xchg
and
popf
dec
or
movsb
scas
xchg
adc
sar
push
movsb
andl
movsb
push
inc
cltd
dec
mov
adc
daa
lea
sti
bound
xor
fsubs
sbb
fwait
xlat
rorl
xchg
cwtl
repnz
dec
and
inc
sub
push
fcomps
xchg
jl
gs
insb
mov
jg
push
or
cmp
sub
adc
cmp
pop
das
iret
imul
or
push
rcrl
jne
imul
adc
add
jl
mov
rcrb
pushf
out
es
jecxz
dec
mov
cld
andl
cmp
cltd
test
sub
cmp
mov
mov
add
push
push
in
test
dec
es
cmp
out
shrb
xor
lea
cwtl
mov
out
mov
aad
call
movsl
ljmp
out
mov
jne
repnz
xchg
pop
and
dec
dec
mov
and
add
lret
aas
inc
lds
idivb
repz
test
pop
out
mov
aas
insb
jp
xchg
repnz
mov
sub
aas
cmpsl
sub
ja
es
gs
xor
ret
mov
cmp
add
push
addl
fildll
ja
adc
jp
lods
aaa
pmovmskb
push
dec
mov
mov
jno
popf
push
add
mov
hlt
pushf
ret
in
push
stc
insl
mov
cwtl
popa
fucomi
int
enter
idivl
push
and
popa
pop
push
std
rolb
lock
ljmp
icebp
pushf
dec
jno
sbb
or
push
jl
in
cmp
out
cmp
dec
ja
std
pop
sub
loopne
cmp
test
xor
scas
sub
popa
inc
insl
add
add
es
out
sub
test
jmp
push
stos
outsb
punpckhbw
dec
orb
xor
adc
mov
lret
stc
mov
dec
in
stos
leave
enterw
jns
push
cwtl
xor
push
mov
pop
xchg
xchg
jmp
sub
les
jl
inc
push
push
psubb
jecxz
push
pop
mov
xlat
and
mov
fists
mov
cmp
add
fisttpll
faddl
sbb
movsl
or
jle
mov
pop
aas
mov
call
test
mov
xlat
cmp
push
dec
add
adc
mov
xor
lock
fcmovu
pop
out
xchg
add
mov
push
sbb
adc
cs
add
iret
sbb
outsl
sbb
mov
jnp
cmp
les
push
push
add
movsl
clc
jecxz
push
movsl
inc
sub
fsts
adc
call
mov
ret
cmp
call
or
or
in
sbbb
incb
cmp
sahf
lret
mov
push
imul
add
add
mov
fcmovnu
jns
or
sbb
jg
push
je
repnz
xorl
pop
mov
or
xor
sbb
out
cmp
in
gs
ljmp
repnz
std
sbb
push
into
inc
fdivl
mov
loopne
fidivl
lcall
adcl
in
xchg
stc
xchg
dec
push
pop
ss
xchg
push
hlt
sub
cmp
inc
js
popa
add
dec
and
cmp
mov
push
mov
xor
mov
mov
setg
or
out
filds
add
jo
or
mov
pop
cwtl
xlat
push
fiaddl
sarl
in
js
push
xor
jmp
and
ficomps
jno
mov
jnp
in
cmp
mov
inc
fs
pushw
popl
pop
pop
mov
mov
popf
fisubs
or
aas
in
push
stc
lods
jle
mov
cmp
test
sub
in
sbb
cmp
pop
divb
push
mov
dec
mov
jbe
jp
fidivrs
shll
lret
lock
lock
fistpll
stos
fwait
gs
sbbl
aam
in
lret
jecxz
lret
lock
shll
cmpb
test
and
ret
insb
sub
cmp
sub
cld
popf
or
cs
dec
cmp
inc
ds
sbb
aaa
sbb
cmp
mov
adc
xor
shlb
sbb
sub
push
jns
jnp
mov
sub
in
js
xchg
xchg
mov
add
enter
scas
push
movsb
movsl
mov
int
dec
dec
dec
lods
lods
aam
add
rcll
jnp
xor
out
jmp
hlt
int3
adc
xchg
mov
popa
jbe
data16
xchg
out
rorb
push
xchg
mov
mov
mov
pop
mov
or
shrb
imul
pop
jmp
cmp
lcall
daa
sbb
add
cmpsb
cmp
dec
mov
loop
daa
jbe
cmp
xor
jg
loop
mov
testb
in
mov
mov
aad
mov
dec
pop
jge
testb
cmc
inc
inc
int
iret
or
test
jle
push
push
xchg
and
jecxz
fimuls
jb
fwait
out
call
or
cmpsb
lcall
xchg
cmp
ret
mov
mov
test
mov
add
xchg
mov
pushf
jl
roll
mov
lret
cmc
dec
sub
and
aaa
insb
or
jo
sub
push
mov
test
js
jg
rep
clc
pop
outsb
sub
push
fists
movb
data16
xor
rcr
or
int
push
das
xchg
in
mov
and
xchg
or
push
mov
mov
jnp
jg
int
pusha
cli
xchg
pushf
pop
push
pop
or
jbe
sub
sub
inc
cmp
notw
xchg
in
add
and
movsl
mov
adc
cmpsl
xchg
mov
or
movsb
mov
adc
out
fmull
inc
jae
cmpl
inc
sub
xor
xor
adc
ret
stos
dec
out
pop
jno
sbb
push
subb
int
test
push
lret
movsb
outsb
xor
popf
mov
sbb
sbb
and
mov
pop
and
sub
mov
in
in
es
sub
or
pop
mov
pop
inc
adcb
add
jl
xchg
pop
jo
push
sbb
sub
fisubl
pop
pushf
push
pop
xor
sbbb
xor
mov
adc
lods
inc
lock
xchg
pop
dec
fdivrs
fs
pushf
mov
repz
loope
mov
mov
adc
hlt
push
pop
adc
into
pop
fidivl
pop
sub
mov
or
push
sub
mov
jmp
loope
pop
daa
sub
mulb
cwtl
and
add
push
cli
inc
add
push
roll
sub
sti
sbb
outsl
sbb
xor
jnp
sbb
inc
das
imul
les
mov
jo
inc
fwait
loope
jp
pushf
cmp
stos
mov
jnp
and
jb
mov
jg
test
test
xchg
mov
and
mov
sbb
cmp
shr
dec
push
es
repnz
in
xchg
add
inc
cmp
call
out
adc
jns
xlat
std
add
cwtl
xor
mov
mov
icebp
sbb
pop
pushf
push
sub
cmpb
and
fiadds
push
pop
mov
mov
mov
into
adc
fnsave
iret
mov
cmpsl
pop
ja
cmpsb
ljmp
and
fldl
lods
imul
pusha
fmuls
xchg
push
jae
pop
rolb
and
in
stc
xchg
inc
push
pop
dec
aad
mov
or
mov
dec
mov
mov
arpl
mul
addr16
cmc
pop
int3
and
adc
mov
cmp
sbb
or
mov
mov
jecxz
cs
xor
loope
sarl
mov
adc
push
jmp
sub
fbld
loop
sti
sub
mov
xor
test
jbe
mov
cwtl
arpl
sub
ds
clc
imul
icebp
loop
or
jae
in
cltd
cs
stos
movsb
lret
bound
or
mov
fcomp
jae
int
imul
ljmp
xor
int
lret
lds
imulb
mov
pop
test
mov
mov
jl
ds
sti
cs
test
sbb
add
sti
ficoml
sub
push
or
cmp
add
dec
adc
test
dec
out
stos
enter
adc
pop
mov
inc
jp
xor
repnz
shlb
xlat
or
cmp
lret
insb
movsb
fs
cmp
loopne
mov
nop
loopne
fdivl
dec
inc
je
dec
pop
mov
dec
dec
leave
mov
addl
pusha
jge
divl
insl
frstor
push
enter
lahf
stos
rclb
inc
cmpsb
inc
cmp
push
jo
and
pop
adc
push
jmp
test
ds
xor
sti
or
mov
and
scas
daa
pop
lea
cwtl
adc
sbb
popf
outsl
into
inc
movsb
inc
jle
add
or
xchg
mov
jp
sbb
into
mov
out
mov
dec
cmpb
popa
ret
sub
or
decb
inc
and
sar
and
hlt
cwtl
push
test
les
sub
sub
scas
in
dec
addr16
dec
and
loop
push
std
ja
repnz
sbb
xchg
jl
int3
movsb
and
mov
and
out
jb
lcall
jmp
adc
movsl
jmp
and
bound
lock
and
push
push
jns
int3
add
and
push
mov
in
mov
adc
icebp
lcall
and
and
xor
outsb
std
lock
das
repnz
mov
sbbb
std
je
orb
jl
and
add
mov
loop
bound
outsb
pop
mov
jmp
out
adc
sbb
scas
stos
out
cmc
in
mov
fdivs
and
mov
mov
inc
cwtl
cmc
test
sbb
jae
sbb
jecxz
push
inc
loopne
and
add
imul
xor
xchg
in
inc
push
in
daa
std
push
stos
testb
mov
out
enter
out
mov
lea
xor
fistpll
or
hlt
cld
flds
aas
jno
xchg
rcrl
je
push
clc
bound
xchg
fisubrs
lds
lods
xlat
xchg
das
mov
loop
jp
dec
loop
enter
mov
je
out
int
inc
and
nop
pusha
jl
fsub
pop
pop
mov
jmp
cs
dec
pop
rol
xchg
fidivs
roll
ja
jae
sbb
push
push
std
pushf
xor
jb
jo
lahf
stos
mov
test
push
ret
pop
sbb
imul
add
dec
lahf
call
xchg
test
push
xchg
mov
test
dec
in
aam
imul
repz
push
ja
cwtl
loope
rorb
xor
sub
mov
in
sub
pop
inc
jecxz
int3
push
push
pop
cmpxchg
push
out
sub
xchg
pop
cwtl
imulb
imul
push
jp
in
jae
cmp
dec
push
mov
loop
out
dec
adc
adc
ror
das
pop
in
mov
mov
pop
loop
push
in
xor
popf
adc
jbe
ds
pop
xchg
int3
add
subb
push
dec
pop
cmpsb
dec
adc
mov
in
mov
daa
pop
cmp
mov
push
fs
icebp
rolb
pop
imul
cld
enter
or
xor
jno
insl
or
xchg
jb
or
bound
scas
sti
loope
cmpsl
mov
fdivrl
rcl
sub
out
imull
leave
xor
push
adc
inc
lret
std
fldl
mov
mov
and
imul
pop
xchg
mov
jg
popa
pop
leave
mov
adc
shl
adc
pop
loope
test
mov
clc
sbb
xchg
jg
xor
pop
shll
inc
cltd
stos
icebp
mov
mov
mov
int
jecxz
cli
inc
adc
arpl
aas
or
push
jmp
decl
sub
jnp
mov
inc
ret
jmp
out
pushl
pushf
push
rcrb
ss
push
cli
imul
popa
aam
std
adc
cs
out
mov
orl
dec
mov
aam
jb
std
addr16
jg
pop
imul
or
imul
mov
sub
les
pop
add
insb
rcrb
xchg
xchg
xor
xor
aad
and
test
roll
xor
add
popa
dec
fidivrl
lret
xor
mov
sbb
int3
sar
jno
mov
movsl
shrl
lret
jo
adc
lret
imul
lods
xlat
cmpsl
mov
dec
imul
mov
loope
repz
mov
add
aas
xor
push
nop
jae
jbe
and
add
fimuls
adc
or
test
addr16
stos
push
jp
lret
and
xchg
pop
hlt
pop
pop
inc
ret
sub
mov
sbb
jg
xchg
push
inc
fiadds
mov
sbb
shll
arpl
dec
xor
pop
adc
xchg
sub
cmp
cmpb
std
mov
mov
xorb
sbb
adc
dec
inc
mov
sbb
loopne
idivb
ds
imul
xchg
jmp
inc
mov
cwtl
js
cmp
loope
and
mov
jl
sub
lock
bnd
adc
add
mov
ds
jl
mov
push
testl
jp
or
pop
loop
lock
mov
sbb
cli
xchg
xor
imul
cltd
sbb
cli
cmp
arpl
add
aas
xchg
imul
pushf
adc
jnp
pop
rorl
fidivrl
out
mov
ljmp
adc
std
movsb
push
inc
push
addr16
push
mov
pushf
adc
push
imul
std
mov
clc
xor
les
push
pusha
cmpsb
mov
mov
jbe
mov
and
movsl
pop
sarb
and
cmp
pop
leave
mov
xor
adc
lcall
push
nop
sub
clc
or
sub
push
dec
out
sbb
sbb
lds
ss
cmp
jl
aaa
das
fs
aam
loop
inc
cltd
test
call
xor
ret
in
call
mov
int
hlt
ds
test
mov
mov
std
mov
dec
out
lea
adc
inc
or
mov
lcall
or
add
jno
dec
xchg
in
mov
ljmp
cld
push
test
ja
insl
mov
loop
mov
pop
fisttps
leave
xchg
iret
mov
addr16
mov
and
mov
mov
jo
add
arpl
pushf
fs
jle
xchg
dec
pusha
scas
out
cmpsl
movsb
and
lds
jno
mov
xor
push
mov
fwait
sbb
pop
stos
fisttpl
xchg
pop
fwait
lcall
into
jb
push
dec
xor
out
cld
push
cmpsl
js
out
cmpb
movsl
push
ret
ret
test
pop
pop
dec
push
outsl
xchg
outsb
sbb
jnp
repz
xchg
adc
movsb
and
fisttpl
pop
add
dec
test
or
iret
mov
push
or
mov
sbb
popl
das
sbb
arpl
insb
dec
push
xchg
mov
xchg
sub
jae
xor
arpl
sbb
push
push
jmp
dec
push
scas
add
shrl
mov
scas
mov
call
xor
clc
cmp
hlt
adc
xchg
sbbb
xor
sub
out
or
and
call
dec
ret
flds
mov
shlb
lea
push
lret
icebp
jge
jns
jno
cmpsl
aad
mov
inc
mov
push
into
test
dec
add
xchg
sbb
sbb
push
stos
lahf
ficoms
sub
inc
adc
pop
ret
add
mov
mov
mov
movsb
ja
inc
push
sahf
sahf
push
arpl
push
add
cmp
call
mov
jno
gs
mov
faddl
mov
mov
int
sub
cmpsl
dec
add
leave
and
cmp
xor
adc
wbinvd
add
in
xchg
jecxz
in
pop
cvtpi2ps
jg
mov
mov
jle
pop
insl
xor
xchg
mov
pop
mov
jle
pusha
xor
push
mov
or
stc
jae
loop
and
xchg
or
pop
adc
push
sahf
sbb
cmpsl
imul
sbb
sub
shl
push
push
int
ja
clc
popf
arpl
cli
cmp
leave
jns
pop
repnz
push
sub
dec
inc
test
push
test
cwtl
ja
ficoms
mov
bound
xchg
out
xchg
xor
into
adc
or
mov
push
jnp
icebp
jl
mov
fcoml
aaa
leave
and
sbb
flds
ficoms
cmp
pop
ret
cli
dec
dec
into
ret
in
repnz
inc
les
jecxz
filds
push
ja
insb
push
stos
fsubrs
or
imul
push
jle
ljmp
movsb
jnp
xchg
sbb
jmp
jg
mov
xchg
xchg
and
add
pop
add
add
cmp
cmp
push
sbb
scas
dec
inc
rol
call
arpl
imul
cmpsb
mov
test
add
lods
pop
icebp
popl
cwtl
lods
clc
pop
pop
rep
and
lret
mov
test
mov
push
and
add
sti
xbegin
out
mov
hlt
mov
pushf
fwait
dec
sbb
mov
lock
scas
mov
push
aam
jp
es
ficoml
std
mov
stos
mov
add
fisttpl
lret
hlt
mov
sub
fmuls
call
sarb
lret
scas
dec
mov
pop
mov
fists
bnd
adc
add
insb
inc
sub
and
push
repnz
je
rcrl
fmuls
scas
ja
imul
fldcw
cmp
jo
mov
pusha
fidivrl
movsl
xchg
and
jge
push
mov
sahf
js
aaa
jne
mov
arpl
or
adc
xchg
jnp
rcrb
subb
aaa
mov
mov
sub
repnz
push
adc
loop
or
lahf
jmp
dec
adc
add
in
mov
push
arpl
clc
lcall
jns
imul
jmp
cli
push
jge
push
daa
iret
imul
pushl
and
inc
call
jmp
or
fs
sbb
inc
test
adc
adc
xchg
jmp
xchg
icebp
inc
or
testl
stos
jne
cs
stos
scas
xor
rcr
jb
nop
or
int
cmp
addr16
mov
pop
aas
adc
and
inc
ljmp
xlat
pop
std
aam
fwait
fs
adc
rorb
jnp
inc
cmpsl
mov
dec
leave
cmpb
or
inc
cltd
inc
je
push
xchg
sbb
mov
cmp
adc
fiadds
jmp
mov
or
mov
sub
lea
movsb
push
nop
mov
jbe
mov
ja,pn
mov
rcrb
testb
in
movsb
outsl
in
add
pop
or
vmwrite
and
int
rol
add
aad
dec
and
push
mov
mov
imul
fdivrl
and
mov
clc
call
ss
negl
and
popa
aad
lods
pop
adc
enter
xor
aam
and
test
sbb
stos
add
popf
into
js
stos
push
test
std
xor
into
add
fdivrp
in
fildl
shrl
jae
fwait
iret
adc
mov
sti
cld
xor
inc
sub
dec
hlt
fdivs
cmp
and
xchg
push
sub
ret
test
insb
cltd
cmp
inc
je
adcl
call
mov
xlat
decl
mov
lods
xchg
dec
and
js
sti
push
mov
push
lret
add
stos
and
lret
mov
pop
mov
neg
cmp
sub
dec
push
cmp
cmpsl
dec
dec
sub
push
or
push
dec
mov
and
adc
push
ja
dec
sbb
mov
sbb
jns
dec
in
es
add
jne
mov
into
out
and
mov
inc
adc
push
cmp
mul
stc
aad
mov
popa
inc
jecxz
xor
je
loope
cmp
push
fidivl
inc
jp
or
out
xchg
fsubrl
out
and
inc
or
cltd
inc
ja
xchg
dec
imull
pop
mov
mov
push
dec
movsl
cmp
repnz
push
inc
dec
out
pop
mov
ljmp
jns
or
test
loopne
xor
xchg
adc
popa
dec
ljmp
rorl
cmp
lcall
sbb
imulb
cmp
and
aad
or
jecxz
int
xchg
int3
sbb
mov
fxch
pop
dec
and
aam
inc
sti
psadbw
test
mov
in
das
ret
dec
scas
push
inc
shrl
push
mov
test
mov
scas
pop
jle
add
rorb
xchg
fsubrl
int3
fwait
pop
or
mov
arpl
jmp
xchg
popf
fcmovne
jbe
mov
nop
xchg
add
iret
mov
aas
lea
push
cmpsb
mov
decl
ss
divl
jnp,pn
xchg
sbb
stos
dec
mov
push
xchg
hlt
xor
mov
in
or
pop
cmp
dec
pop
xchg
add
dec
cld
mov
mov
iret
mov
testb
push
jg
int3
movsb
jl
mov
xor
call
mov
out
pushf
push
je
sbb
cmp
sbb
aaa
mov
push
or
hlt
cmpsb
ret
hlt
sbb
push
inc
fnstenv
mov
enter
dec
es
imul
xor
cmpsb
das
xchg
xchg
lret
lcall
je
leave
nop
mov
and
push
jbe
popf
lods
xor
les
xchg
or
fcomip
leave
xchg
fs
int3
mov
cmc
in
jb
pop
add
test
xchg
daa
shll
push
push
enter
push
aaa
xchg
xchg
imul
add
mov
jns
les
test
aaa
mov
orb
xor
add
pop
jmp
pop
in
mov
ds
dec
inc
adc
test
pop
ds
insl
jle
inc
outsl
test
add
push
dec
cmp
shll
dec
dec
sbbb
add
and
jbe,pt
es
mov
lret
insb
xchg
lock
mov
push
or
xor
push
or
jb
sbb
and
clc
mov
push
ror
sbb
pop
loop
sub
adc
aas
dec
push
sahf
mov
fidivs
stos
inc
arpl
or
cmp
out
cmp
in
mov
in
adc
pop
add
int
ds
xchg
jne
dec
jnp
mov
lret
por
add
leave
jl
daa
test
fadds
xor
inc
out
xor
mov
in
add
fistps
enter
push
neg
sub
je
lods
scas
adc
rcr
negl
movaps
stc
lods
jmp
pop
out
in
inc
or
movsl
mov
fistps
mov
dec
cli
pusha
sbb
mov
sbb
fwait
pop
orl
push
icebp
popl
mov
cmp
mov
add
scas
mov
xchg
inc
pop
sarl
pop
lds
imul
lock
popa
in
cld
lods
jb
iret
daa
pop
cmc
movsb
or
out
xchg
adc
stos
leave
mov
sbb
sub
pop
add
pushf
cli
call
in
inc
pop
sbb
cld
mov
jecxz
jecxz
jp
mov
xlat
mov
rcr
cwtl
daa
pop
push
pop
loope
xchg
jmp
pushf
cmp
lret
add
rcll
xor
movsb
nop
int3
inc
push
push
mov
flds
addr16
popf
aaa
sub
inc
mov
pop
stos
add
add
and
lods
push
shl
mov
cmp
pop
fcomp
insl
fwait
std
or
dec
jecxz
mov
std
js
lods
clc
push
push
rorl
loop
xchg
mov
xor
out
dec
stc
daa
ret
push
int3
in
fbld
inc
insl
or
adc
stos
push
and
push
das
imul
mov
add
ds
mov
mov
push
inc
mov
ret
push
imul
fists
jb
push
cwtl
mov
fstps
cmp
cld
inc
cmp
leave
mov
mov
or
and
call
stc
sub
or
test
clc
out
or
out
popa
jns
cmp
jecxz
push
cmpsl
pop
fprem1
rorb
inc
ror
dec
enter
lods
mov
xchg
adcb
sub
dec
and
fisubl
pushl
add
push
and
add
and
xchg
sti
stc
fcompl
sti
mov
add
push
jb
add
test
push
mov
mov
rcrl
sarl
nop
mov
hlt
push
test
push
lcall
mov
rorb
test
insl
push
arpl
flds
push
in
sahf
loop
xchg
aaa
cs
xorb
jne
mov
sahf
pop
jb
fldl
repnz
xchg
ds
add
fisubrl
dec
shl
lahf
iret
dec
out
xor
and
jae
mov
xrelease
mov
data16
mov
xchg
and
push
push
fs
xchg
jecxz
aad
shlb
sub
sahf
fs
out
pop
scas
rorl
xor
pop
and
inc
push
push
push
test
das
pop
pop
orb
hlt
inc
scas
or
xor
pop
mov
xlat
inc
pop
add
nop
jecxz
xchg
es
xor
cltd
xchg
ljmp
lret
rcl
inc
stos
cwtl
xor
mov
daa
and
jnp
cmp
mov
adc
call
xor
movsb
mov
test
mov
pop
movsl
adc
jne
ljmp
inc
xchg
mov
vdivsd
inc
das
pusha
xchg
insw
call
test
repz
push
iret
orb
mov
adc
testl
push
pushf
les
mov
stos
xchg
adc
cld
pop
jo
cmc
push
adc
dec
icebp
push
movsl
jge
cli
fsubl
pop
push
outsb
sahf
mov
fisttpll
into
cmp
jne
add
nop
cmpsl
mov
ret
daa
and
pop
push
insl
xor
xor
pop
and
popf
jae
jge
sub
dec
sub
imul
stos
stos
push
sbb
faddl
lock
std
imul
sbb
adc
cmp
push
loop
pop
jo
sub
rol
leave
add
jle
pop
dec
xchg
mov
adc
add
daa
or
popf
aad
popf
jnp
xchg
push
sbb
mov
idivb
into
cmp
jg
jb
cmc
inc
test
mov
mov
les
test
jbe
sub
mov
insb
stos
mov
mov
adc
lahf
shll
mov
stos
jnp
call
into
pop
sub
call
iret
cmpsb
mov
arpl
pop
hlt
lods
cmp
orl
in
jns
sub
test
mov
imul
sbb
xor
repnz
outsb
fisubrs
dec
sar
nop
popf
and
or
inc
in
bnd
jae
or
outsb
add
decb
lahf
dec
push
int3
inc
lods
xor
inc
stc
in
mov
jmp
cmpsl
lret
add
jmp
cmp
ficomps
mov
in
insb
push
mov
outsb
jmp
add
jo
xchg
sub
dec
mov
add
inc
sbb
out
xlat
les
dec
cs
es
int3
pop
adc
push
xchg
imul
inc
sbb
fidivrs
fs
lret
push
mov
and
fwait
gs
xchg
inc
lahf
mov
push
in
push
lret
les
jno
sub
adc
cmp
dec
cmp
cmpb
cmp
or
jne
cmpsl
repnz
inc
leave
fstpt
push
enter
loop
mov
mov
dec
ret
nop
or
xor
test
pusha
leave
pop
sahf
push
gs
inc
and
rolb
imul
xchg
andb
popf
outsb
sub
cmp
lret
fdivrp
and
mov
push
sbb
rcrl
rcr
sarb
mov
push
mov
cmp
jg
mov
fisubs
out
call
pop
push
mov
cld
inc
cwtl
into
fidivrs
aam
sti
mov
js
shrb
fyl2x
sti
push
mov
sbb
fnstsw
dec
sbb
repz
daa
in
inc
orl
sbb
mov
jnp
jg
ffreep
add
fucomp
das
repz
cmpsl
or
mov
xchg
mov
stos
out
push
adc
shl
addl
push
andb
push
shlb
scas
push
iret
stos
enter
add
inc
insb
fldl
ljmp
ret
inc
cmp
mov
jo
cmp
insl
sub
imul
sbb
cmp
js
push
je
iret
test
ljmp
fsubrl
push
add
rcrb
push
cs
pop
sub
xchg
inc
incl
add
mov
out
add
cltd
js
adc
dec
push
xor
lods
sbb
pop
out
xorl
cmpsb
mov
or
pop
adc
fwait
test
in
pop
xor
sub
aam
decb
mov
pusha
mov
dec
dec
pop
mov
jp
in
mov
mov
test
mov
mov
stc
dec
jge
popa
push
nop
subl
dec
and
jg
xchg
cmp
sbb
insb
jnp
stc
addr16
adc
adc
fwait
les
adc
jno
gs
fldcw
inc
add
sbb
mov
imul
inc
mov
dec
aam
lret
fisubl
jmp
mov
jecxz
mov
push
push
imul
pushf
arpl
lods
inc
fstpt
mov
sbb
pop
jns
push
sbb
stos
aas
stc
testb
mov
push
push
in
dec
adc
inc
sub
cmpsb
pop
push
push
push
xchg
addr16
sbb
mulb
ret
xchg
add
dec
movsl
jb
and
ss
add
pop
mov
fcom
push
mov
jb
xor
in
xchg
es
fldenv
xor
in
sahf
adc
lret
add
mov
jno
iret
les
cmpsl
sahf
sub
and
test
mov
jle
sbb
mov
cmp
add
push
stos
popa
pop
sub
ret
pop
xchg
push
aaa
mov
fistl
test
jno
and
ljmp
inc
xor
cmpsl
mov
mov
push
int3
sbb
ficoml
call
arpl
in
inc
mov
ds
push
imul
sub
push
in
popf
lods
gs
bound
inc
mov
icebp
pop
mov
mov
or
addr16
or
ret
fistl
mov
mov
sbb
cmpsb
pop
insl
jl
hlt
scas
adc
xchg
sbbl
cmpsb
add
or
xchg
mov
lods
fdiv
out
mov
mov
inc
adc
mov
push
jo
sti
loopne
sarl
inc
adc
loopne
sub
xchg
cmp
gs
jno
outsb
jo
movsb
mov
in
mov
mov
or
fwait
sbb
pop
push
xchg
and
pop
hlt
cmp
out
adc
xchg
hlt
xchg
xor
push
data16
cmp
enter
out
lretw
shlb
int3
cmp
xchg
mov
mov
ja
mov
mov
sahf
test
mov
mov
add
addr16
sub
stc
and
sub
fidivs
push
push
stos
jecxz
mov
inc
sub
dec
push
inc
mov
ret
cmp
pcmpgtb
movsl
icebp
xchg
out
enter
adc
test
icebp
push
dec
mov
dec
stc
dec
inc
leave
pcmpeqd
ret
jmp
pushf
insb
jmp
inc
fstps
dec
nop
loope
or
and
push
jge
loopne
fxch
adcb
mov
into
jmp
sbb
es
mov
sub
mov
dec
adc
push
popf
dec
daa
push
mov
test
lret
pop
pop
enter
mov
popf
inc
jl,pn
xchg
or
xor
sbb
add
loope
and
pusha
add
mov
sti
sarl
ret
xor
iret
push
mov
inc
in
repnz
insl
notb
xchg
shrb
add
imul
cwtl
xor
out
fbld
sbb
jno
xchg
jns
mov
arpl
inc
and
aad
xor
or
fcmovnb
mov
into
out
cmp
xlat
xor
xchg
je
jae
lods
ja
push
in
xor
jge
enter
jle
ret
popf
mov
sahf
and
cmc
shlb
scas
mov
push
cmp
mov
lods
mov
addr16
add
pop
dec
cmp
mov
out
test
imull
mov
sbb
lahf
pop
scas
insl
push
push
inc
repz
and
pop
pop
jnp
repz
cmpsb
or
add
jo
cwtl
std
cmp
out
pushf
repnz
mov
cmc
and
mov
cmp
clc
sub
insb
inc
jnp
lret
fdivrs
cltd
iret
std
and
subb
cmp
cmp
or
lret
adc
lss
out
cmp
xchg
insb
pop
cmp
lods
sub
xchg
je
xchg
xchg
arpl
iret
fisttpl
cld
jo
insl
icebp
xor
xlat
mov
xchg
sbb
loopne
jmp
mov
push
aam
mov
out
popf
xchg
add
lock
jne
dec
lods
out
jae
xchg
xchg
dec
sbb
mov
mov
les
aas
and
lret
and
or
mull
jb
xor
push
mov
pop
stos
imul
sbb
pop
xor
lcall
mov
scas
sbb
xchg
ss
mov
sahf
sahf
and
pop
fsubs
or
xchg
jg
sbb
inc
ret
mov
lahf
sub
push
xchg
arpl
or
es
inc
dec
or
mov
insl
mov
adc
imul
inc
rorl
fwait
add
cmp
cli
repz
add
cmp
repz
jmp
lret
enter
movsl
sbb
insb
and
mov
xchg
stc
fwait
ret
xlat
mov
fsubr
dec
mov
out
stc
jbe
subb
push
cli
and
mov
div
xchg
mov
dec
fstps
xor
or
fsubs
dec
jl
and
mov
insb
push
sbb
xchg
inc
pop
mov
jno
es
aaa
inc
aas
jne
lea
mov
cmpsb
test
into
ds
push
cli
pop
xor
cmp
xor
inc
scas
jo
dec
xor
xchg
sub
cmpsl
inc
inc
pop
fxch
jae
jae
xchg
xor
loopne
sub
or
outsl
cli
mov
enter
call
daa
push
test
jo
mov
sub
xchg
adc
pop
mov
dec
mov
push
cmpsb
nop
sub
push
jnp
mov
or
xchg
inc
mov
out
rol
int
fs
mov
add
jnp
les
and
or
mov
cwtl
jp
adc
cmc
pop
and
int3
lods
cmpsl
mov
loop
inc
cmc
push
test
subb
add
dec
xor
aad
stos
and
loopne
aas
pop
push
enter
sbb
mov
mov
adc
fimuls
test
adc
pop
nop
stc
sarb
sti
data16
mov
push
insl
ret
lahf
fisubrl
jmp
incl
aam
add
and
pop
and
mov
mov
stos
test
jnp
mul
pop
adc
out
mov
or
add
hlt
dec
enter
test
xchg
imul
xchg
stos
mulb
iret
out
repnz
pop
xchg
lret
sbb
ljmp
stos
jns
jae
mov
add
fcoml
inc
sbb
mov
mov
outsl
insl
enter
mov
lock
cwtl
test
stos
inc
cli
lcall
incl
dec
fs
sub
adc
mov
inc
mov
push
addr16
rolb
cs
mov
mov
lock
pop
push
adc
popa
inc
push
cmp
adcb
xor
adc
add
ror
pop
and
or
pop
add
jecxz
js
push
push
and
in
popa
adc
cmp
fs
pop
popw
int
jecxz
inc
mov
aas
repz
ret
popf
loope
aam
jnp
test
paddq
mov
movnti
loopne
mov
mov
daa
push
sbb
or
jbe
aad
fwait
stc
adc
bound
sbb
enter
jmp
sub
stc
rcl
not
scas
and
cli
fisubrs
jns
nop
push
les
dec
into
and
hlt
aaa
loopne
mov
mov
fadd
mov
std
negb
cmp
jns
repz
sbb
fmull
xchg
and
cmp
les
push
sub
ds
jle
push
fildll
std
or
lret
cld
movsb
aaa
pop
lea
ret
mov
xchg
jle
mov
sub
jle
jmp
test
dec
inc
loopne
push
sub
adc
xchg
xchg
xchg
lea
jp
xor
jmp
lods
nop
test
out
dec
cmpsl
inc
sbb
pushf
push
cmp
mov
movsb
fisttpl
mov
mov
cwtl
lgs
jnp
in
scas
mov
out
xchg
pop
pop
movsb
test
push
push
sbb
cmp
insl
sub
adc
push
mov
scas
add
aad
pop
aas
ficompl
sbb
mov
repnz
stos
mov
aas
sar
jo
mov
fimuls
fs
ss
mov
dec
mov
dec
jns,pt
iret
dec
jnp
pop
in
push
fst
add
test
dec
dec
or
jb
jge
int3
hlt
sbb
pushf
les
inc
or
lea
lods
mov
mov
cmp
and
pop
push
ret
sub
imul
in
xor
or
dec
icebp
inc
ficompl
fsubs
and
movsb
xor
push
aad
xor
sti
pop
ljmp
sbb
loopne
outsl
stos
daa
daa
jge
inc
aaa
ret
jno
and
lods
clc
adc
hlt
pusha
xor
imul
pop
xchg
in
test
aas
push
rolb
lret
outsl
inc
inc
mov
fldcw
add
sub
jnp
pop
ret
leave
mov
xor
repz
dec
or
dec
mov
sahf
dec
addr16
push
xlat
dec
push
push
xchg
fcmovbe
das
cmpsl
pop
sahf
test
out
or
in
xlat
aaa
dec
jle
incb
icebp
adc
out
mov
mov
jg
and
sbb
jns
mov
or
cmpsb
pushf
stos
mov
pusha
push
sarl
dec
adc
fsubrs
addr16
mov
pop
daa
cltd
jp
fwait
in
pushf
fldl
das
daa
or
add
or
cltd
scas
or
push
push
mov
aam
stos
ret
outsl
sub
sub
mov
pop
lcall
sahf
inc
mov
sub
cmpb
pop
sbb
mov
sub
ret
adc
imul
test
or
jle
push
sbb
pop
lea
fldl2t
jno
dec
mov
scas
adc
adc
mov
jg
inc
add
add
ds
ljmp
test
jne
outsb
mov
sbb
mov
orb
jg
or
push
mov
xor
jnp
or
xlat
xchg
jecxz
popf
je
aaa
inc
into
pop
jne
or
jnp
aad
es
pusha
mov
aaa
mov
lret
fdivrl
pop
or
xchg
rcrl
fsubrs
outsb
cwtl
mov
repnz
data16
lock
andb
mov
aam
pop
inc
dec
adc
pop
shlb
sbb
ss
jge
mov
cmc
xchg
cli
cld
mov
dec
pusha
popa
lahf
movsb
pop
mov
mov
sbb
jne
pop
std
ja
subb
popa
mov
sbb
jne
add
inc
add
scas
test
mov
push
test
lcall
sahf
inc
test
mov
pop
mov
lods
imul
push
add
sub
insb
call
xor
mov
and
lods
daa
fwait
or
add
insl
push
addr16
dec
cltd
add
jp
jno
mov
rcrl
pop
fistps
das
jae
and
shll
shr
es
or
sub
mov
mov
pop
popf
add
pop
lcall
and
push
rcll
or
and
decl
lret
notl
push
das
push
inc
shlb
subb
clc
jnp
or
in
sti
fsubrl
mov
stc
push
orl
sti
test
stc
mov
sbbl
dec
cmp
std
sub
dec
test
mov
or
sbb
mov
rorb
jp
daa
mov
cltd
popf
xchg
out
jb
push
xor
sub
xor
mov
sbbb
push
jb
rorl
in
dec
and
sbb
dec
out
adc
push
pop
out
lret
sub
sbb
pop
cmc
pushf
popa
jns
outsl
and
xlat
or
lds
and
fsubl
cmpsl
sarl
pop
arpl
mov
pop
out
push
adc
pop
and
xor
pop
ret
and
adcl
mov
push
scas
mov
or
sbb
clc
sbb
test
out
adc
stos
cmp
jnp
mov
test
adc
lsl
iret
enter
push
in
sbb
ret
inc
mov
shll
data16
clc
dec
inc
mov
sbb
xor
pop
sbb
push
mov
sub
pop
cmc
int3
dec
jae
add
clc
sbb
mov
lods
adc
loope
push
sti
mov
mov
in
add
inc
mov
ret
cmp
adc
xchg
pop
in
push
jp
push
sub
ljmp
out
outsb
fisubrs
fsts
scas
mov
cmpl
stc
popl
test
cmpsb
arpl
push
dec
cmpsl
jecxz
fildll
jo
xor
mov
push
and
mov
cmp
mov
inc
cmp
adc
pop
jle
rorb
pop
adc
mov
test
aad
in
leave
or
xor
fidivrs
nop
xor
pop
ret
sbb
push
lret
adc
das
sub
lret
outsb
cmp
pop
inc
and
xchg
lea
std
popa
pminsw
mov
or
add
mov
data16
outsl
stos
outsb
lret
lea
inc
pop
in
iret
or
into
andl
movsb
sbb
push
aaa
dec
repnz
dec
add
jbe
ret
pop
lods
cmp
push
lcall
add
dec
data16
jecxz
int
cmp
test
mov
xchg
dec
mov
sbb
scas
loop
imul
mov
mov
mov
jae
mov
or
mov
xor
sub
movsb
pop
or
sahf
and
pop
mov
sub
jno
sti
jl
shl
fwait
pusha
mov
stc
movsl
xchg
iret
fwait
jle
lods
jecxz
adc
gs
push
xor
and
sbb
xchg
scas
repz
divl
mov
mov
popa
jo
xchg
adc
fisttps
outsb
incb
and
leave
rcrb
rcl
xchg
sbb
in
mov
test
test
cmp
push
enter
fcomi
jo
mov
jle
arpl
mov
das
lods
add
inc
jle
inc
push
pop
mov
xor
xchg
or
or
test
mov
push
loope
push
int
ljmp
push
add
sub
fs
sti
dec
jge
push
fistl
sbb
pop
jl
sbb
andl
nop
enter
aaa
sub
fcmovnu
sbb
add
lds
ss
clc
xchg
jge
lock
sbb
mov
cld
stc
add
aas
in
cltd
cs
inc
fcom
rcll
xlat
push
sub
add
xchg
mov
insl
jns
sbb
dec
jne
adc
pop
fldcw
jl
add
mov
sub
ljmp
addr16
cmp
loopne
enter
xchg
push
dec
cmp
jecxz
and
ds
lods
popf
out
mov
cs
inc
ficoms
sbb
add
sbb
inc
sarb
adc
pop
aas
into
mov
cmp
mov
push
fldcw
fcmove
jge
cmc
repnz
out
pop
mov
insb
std
fcmovb
adc
pop
leave
inc
out
xor
pop
sub
xchg
push
mov
mov
insb
int
or
mov
or
push
call
jp
and
mov
shlb
or
xor
scas
cli
aas
mov
jge
call
repz
jb
adcl
rolb
mov
out
xchg
push
jbe
imulb
inc
pop
lcall
insb
cmpb
pushf
into
enter
sub
inc
pop
adc
mov
sbb
adc
pop
movsb
mov
pop
mov
ds
cmc
ja
repnz
mov
insb
icebp
sbb
cmpsl
adc
dec
and
add
roll
out
aad
insb
cmp
pop
sbb
lods
mov
cmp
or
adc
pop
adc
pop
xor
jecxz
in
jnp
add
mov
pop
mov
dec
jnp,pt
cmp
leave
add
mov
orl
mov
mov
pop
mov
dec
int3
pop
leave
mov
lea
ret
iret
mov
mov
out
icebp
and
mov
pusha
inc
aad
or
mov
cmpsb
in
addr16
inc
sub
repnz
adc
es
repz
lea
push
and
mov
int3
sbb
sbb
mov
sub
jnp
ss
inc
pop
in
rol
jmp
lock
lock
leave
push
aas
mov
ds
mov
push
orb
hlt
mov
dec
pop
std
mov
mov
sbb
dec
test
stc
out
sub
rorl
jge
adc
jle
sbb
push
into
pop
jg
cli
dec
add
push
pop
pop
push
mov
dec
jnp
fcomp
dec
pop
sbb
pusha
sub
icebp
mov
jmp
inc
int
mov
ljmp
fstpt
push
int3
jge
mov
popa
jle
push
cs
jns
lret
movups
push
mov
pushf
hlt
idivb
ss
xchg
push
mov
jns
jg
movsb
imull
sti
pop
mov
jg
mov
dec
jge
mov
jmp
les
nop
into
shrl
or
into
push
movsl
xor
mov
jne
xor
push
into
jmp
dec
adc
lock
pcmpeqb
aaa
and
and
cmp
push
mov
add
mov
add
push
rcll
aad
mov
ret
popa
sbb
sbbl
mov
mov
lods
push
ret
adc
inc
mov
mov
mov
push
pop
out
cwtl
xchg
add
xchg
push
jg
les
xor
sbb
push
add
pop
xchg
movsl
fwait
or
inc
adc
xchg
inc
cmp
mov
clc
push
jle
inc
clc
stos
mov
mov
add
fcoml
mov
aam
test
mov
sub
xorl
fimuls
jb
sub
cmpsb
clc
mov
inc
jmp
lock
test
stos
xchg
pop
push
pop
scas
pop
and
ja
leave
fcoms
testl
cmpl
jb
inc
push
int
pop
and
sbb
rcr
or
push
jl
cmp
push
pop
cwtl
jle
mov
stos
push
negb
ss
shlb
dec
lcall
leave
xlat
imul
dec
push
mov
mov
add
pop
inc
mov
lock
mov
negl
push
rcrl
outsl
ret
dec
xchg
xchg
xor
adc
mov
mov
xchg
inc
rcl
jge
stc
add
mov
popa
data16
out
jne
sub
push
inc
mov
mov
sahf
rcll
inc
and
mov
test
inc
adc
pop
mov
aas
enter
adc
call
sbb
jns
mov
jecxz
dec
fsubs
hlt
nop
pop
addr16
shll
push
add
lret
pop
in
clc
insl
push
movsl
out
ss
mov
fildll
dec
aas
dec
leave
mov
dec
sub
popl
bound
stos
cmpsb
pop
push
imul
fnsave
mov
or
lcall
subl
lret
popa
sbb
imull
shl
adc
mov
ljmp
lock
pop
sbb
mov
xor
mov
dec
cmp
aad
mov
adc
ret
mov
xor
pop
jmp
aad
lods
push
mov
push
mov
rol
insl
int3
ja
les
sbb
test
outsl
xor
mov
es
test
decb
sbb
sbb
cmp
test
push
aaa
les
push
rolb
sbb
mov
jge
or
enter
loop
mov
and
mov
push
test
sub
sub
mov
lret
out
ljmp
inc
stc
add
mov
add
roll
test
es
mov
adc
ja
ja
fwait
mov
aam
arpl
pop
mov
outsb
hlt
hlt
sub
pop
mov
lcall
pop
pop
stos
mov
push
push
sarb
xor
pop
mov
sbb
jg
dec
or
aad
js
call
subl
fwait
out
mov
cmp
cmp
cltd
jle
icebp
xchg
adc
jnp
std
cmc
outsb
mov
jbe
mov
sub
mov
add
fwait
dec
aam
out
push
sbb
lods
jo
mov
or
ss
inc
fdivp
idivb
push
roll
scas
xchg
outsl
repz
push
ja
inc
jecxz
or
addr16
cmp
and
sbb
fmull
aaa
sub
push
sbb
outsl
cmp
dec
push
lock
mov
inc
jg
lods
inc
cmp
cmp
and
xor
les
stc
pop
xlat
cmp
sbb
divl
mov
xor
cltd
pop
xchg
cmp
mov
or
mov
fistl
rorb
ds
adc
gs
mov
ljmp
xchg
mov
std
ficompl
dec
popa
shrb
xchg
cmp
xchg
hlt
xor
pop
fists
sbb
pop
pop
and
ffree
es
or
bound
mov
faddl
insb
dec
inc
pop
jb
inc
insb
dec
loop
aas
mov
jo
jo
jnp
xor
mov
mov
dec
je
inc
in
jo
jl
ss
jnp
icebp
fstl
lcall
shlb
cld
aad
rorl
loope
repz
stc
pushf
loopne
fwait
mov
adc
jg
movsb
cltd
mov
pop
push
pmaxub
icebp
adc
jnp
and
in
push
inc
ss
stos
xor
subb
jmp
mov
xor
adc
mov
scas
or
inc
orl
sub
fcmovne
js
ds
pop
setns
outsb
out
and
in
fsts
pop
cmc
leave
sub
lock
mov
push
mov
sub
add
iret
dec
out
outsb
lock
lea
daa
mov
pop
insl
mov
cmc
jne
or
insb
dec
fmull
add
addl
mov
xchg
inc
pop
je
jne
ss
mov
or
mov
das
subl
push
test
add
jne
cli
fs
outsb
inc
mov
add
js
loop
mov
mov
xor
add
fldenv
and
jecxz
mov
jle
aam
inc
mul
sbb
xchg
mov
cmpsl
in
push
jmp
imulb
push
sti
rcr
mov
adc
jns
dec
fcmovne
pop
jl
cmp
mov
pop
fwait
mov
push
jns
inc
test
dec
or
dec
xor
std
das
sub
mov
cld
and
sti
dec
mov
dec
in
hlt
cli
push
push
adc
xchg
dec
cmpsl
pop
aaa
dec
dec
inc
dec
or
or
negl
pop
push
mov
and
fists
jb
ret
insb
jp
jb
jge
movsb
pushw
inc
shlb
aad
lds
push
inc
pop
sbb
das
sbb
shrb
push
sahf
imul
inc
xor
aad
fdivs
int3
mov
fisubl
inc
imul
sbbl
xchg
mov
es
sbbb
push
popf
jbe
push
push
clc
cs
stc
or
jno
cli
mov
in
push
rol
inc
pop
stos
pop
sub
repnz
or
repz
cmp
andb
shrb
test
xchg
test
sub
inc
inc
out
nop
daa
cwtl
xor
enter
or
andb
cwtl
mull
xchg
mov
enter
mov
inc
dec
inc
movsb
int3
adc
cmpsl
mov
or
sbb
mov
aad
inc
push
add
lcall
sbb
pop
xchg
aad
inc
pop
pop
test
xor
jno
fisubrs
dec
jnp
shrl
xor
pop
cmpsb
enter
jns
pop
cli
xor
pop
mov
mov
pop
inc
data16
or
push
xlat
popf
mov
les
mov
xor
ss
test
insl
test
xchg
adc
pop
adc
push
das
ljmp
and
jge
adcb
in
in
or
fisttpl
dec
dec
fs
loopne
jmp
inc
leave
bswap
fiadds
lods
pmullw
sbb
xor
into
and
sub
jno
xor
hlt
or
jle
test
xchg
mov
stos
in
rorl
mov
add
or
fdivs
iret
sub
sbb
int3
insl
movsl
arpl
rcl
rorl
lock
xor
out
cld
sbb
fdivl
lods
sbb
ljmp
sub
mov
dec
scas
into
and
stos
clc
rcl
push
stos
or
push
mov
push
fidivrs
shlb
xor
cmp
insl
push
ljmp
int
mov
xchg
lock
cwtl
js
xchg
mov
int
mov
dec
push
dec
mov
loopne
jo
jle
cli
leave
inc
sbb
hlt
mov
out
mov
jle
sub
push
outsl
adc
pop
aas
cmp
into
push
jnp
je
aam
lods
cli
fildl
mov
mov
push
data16
sti
addl
rcr
ds
lds
sub
es
cmp
cmc
rcr
rolb
mov
xchg
lds
inc
cmpsb
lret
loop
lret
lcall
xor
pop
mov
push
shll
gs
cmp
in
xchg
pop
pop
jecxz
inc
dec
ds
js
hlt
sahf
sbb
mov
mov
sahf
in
leave
xchg
sbb
mov
pop
lea
mov
jns
cs
out
iret
mov
add
in
sub
das
not
and
dec
dec
hlt
dec
sbb
movsl
sbb
in
fmull
mov
repz
mov
sub
and
mov
dec
arpl
dec
mov
sub
nop
mov
adc
pop
jmp
push
nop
mov
ds
dec
stc
inc
test
stc
add
iret
mov
jb
leave
enter
or
movsb
cmc
pop
push
leave
js
sub
inc
mov
add
popf
sahf
insb
cmpsb
mov
adc
lea
pop
test
cmp
jno
icebp
pop
add
add
xchg
pop
fstpt
ljmp
daa
nop
mov
mov
mov
add
lods
push
and
fimuls
mov
icebp
mov
cmp
and
sti
sbbb
jb
jmp
pop
mov
xor
imulb
iret
dec
cmpsl
mov
stc
or
mov
test
imul
mov
add
shlb
pop
pop
test
jg
rcpps
and
xor
insl
inc
mov
or
outsb
ret
aas
std
ret
and
in
outsb
xor
test
pop
dec
iret
mov
popf
xchg
sti
mov
xor
xchg
cltd
xor
movsb
fwait
jl
cmp
test
jmp
inc
pop
push
cs
cli
iret
push
or
popa
arpl
out
sbb
pop
sarb
pop
mov
daa
ficoml
push
ja
sarl
incb
outsb
mov
out
sarb
add
add
fadd
in
xchg
mov
xor
ds
daa
mov
inc
xor
popf
jle
xor
cs
mov
inc
ds
inc
pop
filds
ja
jo
inc
pusha
mov
adc
mov
pop
arpl
or
pushf
fwait
adc
call
and
adc
fxch
cmp
dec
add
xor
jmp
mov
adc
inc
out
and
mov
out
and
aaa
sub
lods
mov
hlt
icebp
sbb
push
je
inc
bound
fldcw
sub
mov
jecxz
leave
mov
jp
sub
ret
mov
icebp
dec
sub
adc
test
pop
and
fadd
push
je
aaa
and
dec
xchg
xor
fwait
xchg
out
xor
icebp
or
daa
stc
xchg
mov
movsb
dec
call
mov
cmp
std
pop
mov
sbbb
adc
cmpsb
jl
push
pop
loop
outsl
jp
push
nop
stos
je
cmpsb
dec
jg
or
aas
mov
lock
pop
adc
lahf
dec
and
xchg
cmpsl
pusha
test
add
jns
orb
loop
into
test
stos
pop
pushf
gs
xor
js
cltd
in
shl
add
insb
and
xorl
shll
mov
mov
pop
cld
pop
mov
std
add
adc
loopne
and
inc
sub
push
cmc
pop
mov
jl
push
jg
pusha
test
adc
xorl
fsts
sarl
stos
neg
scas
fiaddl
jae,pt
jb
jno
ss
popa
push
insb
adc
adc
cmpsb
pop
movsb
mov
loopne
cmp
mov
nop
pop
test
lret
rcrl
jbe
mov
lcall
xorb
loope
out
ljmp
mov
add
gs
fsubrl
icebp
xor
in
xchg
mov
imul
ljmp
inc
rcl
xchg
sbb
stos
push
mov
aam
stc
sub
test
in
pop
push
test
leave
orl
cli
testb
out
insl
jo
lock
in
in
movsb
add
into
xor
add
xchg
mov
insl
mov
mov
mov
int3
inc
adcb
in
cmp
mov
mov
dec
fistl
test
fmull
dec
mov
mov
mov
test
mov
in
mov
mov
or
into
push
jne
pop
mov
adc
jae
jecxz
xchg
cmpb
arpl
jne
sbb
out
xor
sub
test
out
icebp
sbb
scas
sbb
loopne
cmc
sub
adc
push
lcall
ss
sub
or
out
repz
push
add
or
aaa
push
xor
xor
sbb
cmp
push
jmp
xchg
push
sub
inc
popa
push
aas
xor
out
andb
and
insl
xchg
mov
mov
sahf
lret
xchg
add
adc
popf
pop
pusha
sbb
push
add
xlat
movsl
xor
dec
xchg
add
call
aaa
ljmp
push
cmp
xor
lahf
repz
loope
pop
dec
or
jle
push
ljmp
addl
gs
orl
or
xlat
fsts
sbb
jp
repz
mov
xor
push
shr
inc
and
aas
call
shl
dec
sbb
mov
mov
xor
ret
lret
jmp
stos
movsb
mov
jnp
add
adc
bound
mov
or
gs
mov
imul
daa
pop
mov
icebp
enter
push
ss
repnz
or
in
mov
mov
and
outsb
lret
out
mov
popf
adc
rcrl
xchg
out
pop
es
dec
adc
aaa
cmp
mov
push
imul
mov
xor
xor
sbb
test
clc
adc
movsb
push
mov
in
push
dec
stc
xchg
imul
js
in
iret
shlb
cmp
fwait
daa
enter
repz
in
sarb
loopne
out
cmpsl
mov
rolb
movsb
int3
pop
jb
jb
pop
push
mov
sbb
inc
popf
xor
ljmp
mov
ds
iret
aam
sbb
rorl
mov
shrl
sbb
push
dec
nop
adc
mov
popf
fs
xchg
into
jl
rolb
jb
mov
or
pop
mov
ficomps
sub
loopne
test
mov
xchg
hlt
in
push
and
js
fwait
dec
ss
xorl
xchg
and
and
mov
mov
jle
pop
xor
pop
sub
cld
sub
stos
subb
aad
sbbb
and
repz
lret
sbb
out
sahf
sub
xor
push
mov
rol
aaa
mov
and
adc
dec
xor
ljmp
push
or
repnz
call
xchg
les
jo
ret
and
push
adc
sahf
jp
pop
mov
lret
in
mov
out
xchg
mov
cs
movsl
push
push
mov
add
inc
xchg
inc
int3
rcrb
stos
addr16
movsb
mov
jo,pn
pusha
mov
push
test
mov
cli
loop
mov
sub
popa
and
cmpsb
std
lds
dec
jb
sbb
and
sbb
dec
jmp
inc
lods
mov
xchg
dec
sub
push
pop
and
fcoml
dec
adc
and
or
aad
or
lret
push
into
js
pop
inc
fcoms
push
fadd
les
inc
xchg
jmp
add
add
jns
push
xorl
pop
sub
into
add
data16
jecxz
and
pop
adc
xorl
aas
stc
fmuls
pop
jb
stc
xchg
clc
adc
xchg
push
push
or
inc
fdivl
insl
mov
fsubrs
inc
inc
fcmovu
mov
inc
mov
popf
shlb
hlt
je
leave
sbb
loopne
xchg
mov
pop
fisubrs
inc
bound
cltd
mov
xchg
cli
and
imul
add
repz
insl
sbb
mov
fists
rorb
xchg
test
push
das
divb
xchg
xor
mov
and
add
imul
mov
adc
inc
leave
push
repnz
xchg
addl
stos
cmp
test
dec
mov
ret
and
popl
sahf
and
cmp
mov
mov
jo
add
xor
pusha
dec
pop
jbe
inc
roll
jmp
popf
cmpsl
pop
leave
adc
or
xchg
cmp
jae
xchg
out
inc
mov
js
push
xor
decb
je
mov
or
mov
in
jne
mov
stos
mov
cmc
dec
sub
add
frstor
jae
stos
jo
shrl
jmp
mov
fwait
out
push
dec
orb
stc
jge
and
xchg
and
cmp
loop
aas
in
stos
fnstenv
repnz
sbb
movsl
cwtl
test
mov
ret
mov
or
arpl
test
xlat
sbb
test
pop
and
loope
mov
jle
mov
fistpll
shll
dec
fsubrl
inc
add
jge
call
popf
outsl
sti
insb
mov
push
push
shl
jbe
xchg
xchg
inc
test
sub
mov
xorl
lods
es
je
jle
cltd
push
sbb
loopne
jnp
sbb
cmp
lret
movsl
psraw
dec
mov
fistpll
add
adc
cmp
cmpsb
shll
inc
in
adc
testb
cld
mov
pusha
push
insb
push
xchg
xchg
aaa
sbb
jmp
inc
pop
mov
sbb
imul
dec
mov
popa
in
sub
lahf
fwait
inc
push
pusha
lods
mov
cmpsb
sub
xchg
loope
popf
mov
mov
hlt
jecxz
ljmp
mov
or
sbb
rcrb
mov
repnz
mov
loop
pop
fdivrl
jae
pop
mov
sbb
mov
loope
xlat
hlt
sub
aam
ficomps
inc
push
in
push
pop
push
or
dec
pop
outsb
jns
movsl
mov
xchg
ficoml
adc
pop
dec
sbb
orl
icebp
xor
rcl
popf
repnz
add
pushf
xchg
rcrl
or
in
jbe
xor
push
aas
and
aam
sbbl
hlt
cld
cmp
int
js
mov
and
xor
lods
aam
mov
push
add
adc
leave
cmc
and
imul
sbb
sub
loopne
dec
sub
daa
loop
mov
and
pop
jge
jge
push
sbb
aad
outsl
push
loop
inc
jle
jnp
fcoml
mov
repz
addr16
insl
rolb
ret
xchg
inc
pop
push
mov
pop
sub
rol
fadd
adc
push
filds
inc
sarl
add
dec
mov
les
pop
cmp
jge
ret
stos
or
and
test
test
xchg
push
insl
aaa
inc
shrb
repnz
ja
stos
push
fiadds
icebp
jnp
push
dec
mov
aad
lcall
scas
pop
cld
jns
push
decb
pop
or
lds
shrb
test
and
scas
jno
or
cmpsb
fwait
push
sub
dec
sub
stc
push
inc
aas
rcll
push
mov
in
int
test
enter
cmpsb
hlt
ss
sbb
cmc
stos
sub
scas
mov
sub
loopne
imul
inc
push
push
lods
repz
enter
pop
fidivs
mov
dec
add
shll
xlat
xchg
or
cmp
divb
enter
and
ret
mov
pop
mov
jne
sahf
mov
ljmp
movsl
jns
xchg
mov
adc
insb
push
rorb
pusha
bound
repnz
push
ja
into
daa
mov
xor
pop
aam
dec
in
mov
iret
lea
andl
jecxz
pop
jno
dec
ljmp
ret
fwait
divl
mov
inc
pop
aas
int
call
lret
adc
xlat
sbb
fadds
int3
lds
xchg
dec
fwait
xor
mov
xlat
scas
dec
out
sti
mov
and
cs
push
sbb
dec
in
cmpb
xchg
lock
daa
mov
shrl
push
aas
stos
pop
inc
ret
leave
mov
inc
cmp
mov
sub
pop
out
jmp
mov
xor
push
dec
inc
inc
hlt
add
or
and
aas
sar
bound
fsubr
loope
rcll
jno
inc
out
int3
inc
idivb
xchg
shrl
inc
ret
adc
mov
fwait
test
push
pop
cmp
sub
lret
push
stos
gs
int3
je
sbb
pop
jge
mov
push
adc
add
xchg
int3
xor
adc
loope
repnz
inc
xor
add
sub
iret
adcb
lods
mov
sti
inc
stos
in
jae
fucomip
out
roll
adcl
jmp
lea
xchg
sbb
or
aad
lods
lret
filds
sbb
dec
imul
push
test
sbb
in
rolb
sub
mov
mov
js
bound
enter
mov
fstpt
add
test
cltd
mov
cmp
sbb
andb
pop
and
cmp
cld
xor
add
pushf
jo
lcall
out
push
mov
xor
outsb
push
pusha
scas
movsb
gs
dec
ds
dec
popa
sbb
fxch
or
push
or
add
ds
in
mov
mov
pushl
rolb
inc
int3
nop
mov
sub
icebp
sbb
push
mov
iret
xor
in
pop
dec
fidivrs
aaa
std
push
xor
and
rcr
mov
or
ds
cs
and
xor
cmp
mov
mov
dec
push
cmp
xor
mov
les
xchg
mov
sbb
xchg
cli
pop
idivl
cmp
fwait
mov
jge
pop
ficoml
adc
nop
arpl
jne
int3
and
daa
jecxz
outsb
pushf
push
outsl
f2xm1
pop
jns
jno
test
mov
les
mov
fcomi
push
popa
mov
push
rorl
cwtl
cmc
imul
adc
adc
mov
jg
je
lahf
sub
std
dec
clc
fs
push
stc
repz
pop
stos
jne
sbb
mov
push
nop
push
mov
push
imul
es
jne
lods
xorl
out
xchg
mov
pop
insb
cltd
in
roll
mov
filds
pop
bound
stc
call
je
mov
cli
mov
jmp
popf
lcall
jne
fsubrp
push
mov
out
fcmovu
push
xchg
mov
dec
pushf
outsl
dec
jns
xchg
std
lds
sub
stc
ret
popa
mov
dec
push
lock
mov
clc
pushf
xchg
cmp
pop
mov
std
lock
inc
pop
in
das
int
pop
popa
into
mov
cmp
add
jg
ret
and
sbb
fstpt
mov
ret
decl
xorl
outsb
leave
xchg
sub
in
dec
out
fiaddl
sbb
jge
popf
add
dec
js
pop
xchg
xacquire
enter
testb
jp
sbb
enter
push
mov
adc
je
gs
daa
dec
mov
and
sarb
cs
sub
cli
cltd
mov
mov
repnz
sub
dec
in
mov
dec
mov
mov
push
outsb
mov
stc
sbbb
movsl
push
push
sti
push
je
roll
xchg
cs
out
js
es
pop
cltd
mov
sbbl
ljmp
jl
fcmove
adcb
or
outsl
add
xchg
icebp
and
iret
mov
neg
insb
or
enter
or
mov
adc
adc
add
inc
movsl
cmp
dec
sub
and
sahf
cmp
xchg
sub
adc
sbb
mov
inc
leave
xor
out
sbb
adc
push
ss
mov
or
xchg
rorl
in
gs
jae
dec
or
imul
pusha
test
out
test
xchg
movsb
inc
or
pusha
lods
mov
outsb
jbe
or
test
sbb
imul
daa
outsl
mov
das
ror
mov
cmpsl
mov
mov
lock
mov
sub
cli
pusha
cmpsl
dec
mov
wbinvd
cmp
and
xchg
and
push
stc
das
lret
leave
adc
ljmp
cmp
imul
shlb
outsb
enter
in
out
and
cmpb
adc
mov
pop
mov
imul
cmpsb
sub
xlat
mov
and
push
imul
into
cmp
sbb
out
addr16
xlat
test
mov
cmp
jge
jmp
je
daa
test
mov
add
sbb
cltd
pushf
es
popf
out
adc
jmp
and
mov
add
or
aad
jns
inc
stos
mov
lods
mov
filds
inc
push
xor
xor
out
jl
inc
xchg
loop
xchg
test
add
mov
out
adc
xor
jae
lds
xchg
adc
push
ret
aad
jno
sbb
jp
cmp
sbb
inc
in
ret
xor
imul
dec
pop
into
mov
jmp
and
mov
add
jmp
inc
jecxz
jmp
or
lahf
lock
orl
cli
jnp
push
pop
and
dec
push
sbb
gs
pushf
test
iret
and
xor
ret
sbb
adc
icebp
sub
sti
popf
out
mov
movsb
push
sub
bnd
iret
setne
js
mov
imul
rcll
or
xor
pop
push
sbb
mov
idivl
pusha
mov
sub
jne
jp
dec
dec
pop
adc
sub
sbb
xor
mov
ret
mulb
sbb
and
lock
repz
cmp
push
inc
dec
insl
mov
add
repnz
addr16
pop
das
pushf
sbb
dec
or
jmp
popf
pop
repz
mov
inc
jns
ffreep
lods
cmc
cmp
cmp
push
stos
jns
pop
int3
shlb
xchg
in
rcrb
aaa
data16
sbb
inc
test
lock
sub
lret
adc
cltd
xchg
and
fiadds
cltd
cmp
mov
mov
pop
push
outsb
out
je
push
mov
ss
iret
sarb
lods
clc
pop
dec
push
in
test
pushf
loope
test
sbb
mov
push
push
jnp
ret
rcl
push
leave
lods
mov
add
mov
mov
adcb
cmp
xor
sub
stc
and
push
mov
jge
inc
or
mov
mov
mov
mov
xchg
stos
jp
daa
inc
add
jb
ret
movsb
push
hlt
das
lret
pop
loope
outsb
icebp
push
pop
hlt
and
jmp
and
out
int3
pop
push
lds
stc
push
addr16
into
jmp
jbe
les
mov
sub
lea
sub
adc
lahf
add
hlt
cmp
jge
xchg
mov
lods
test
xchg
pop
or
push
jg
jp
mov
xchg
mov
arpl
in
xchg
jle
pop
push
sahf
push
outsl
push
enter
jmp
xor
in
mov
sbb
or
push
adc
repnz
push
xchg
mov
aad
jmp
out
arpl
lret
out
cmpsl
jp
sbb
xchg
add
lods
fwait
or
cmp
xchg
shlb
pop
outsl
cmp
js
in
or
mov
xchg
dec
pop
shll
loope
ds
mov
xchg
push
arpl
sti
cmpsb
push
sub
dec
lret
adc
sub
inc
inc
adc
add
mov
jecxz
cmpsl
arpl
sub
ss
lea
mov
jne
dec
jle
inc
leave
xor
mov
pop
loope
inc
xor
xchg
adc
ss
lods
xchg
popa
outsb
jle
mov
cmp
je
mov
add
mov
push
idiv
inc
mov
push
lods
mov
stos
fs
outsl
imul
orl
inc
repnz
pop
mov
je
out
fsubrl
aad
inc
ja
jmp
pop
daa
push
mov
xlat
jecxz
lret
cli
cmp
enter
sub
insb
in
loope
mov
sub
loopne
pop
cmp
aam
jbe
pushf
repz
in
scas
jnp
loop
les
nop
and
call
gs
sbb
xor
or
movsb
lods
mov
add
inc
push
insb
push
or
sbb
inc
or
outsb
mov
mov
and
outsb
push
cltd
dec
mov
in
jp
push
test
adc
sbb
jno
inc
jnp
out
or
or
inc
cmp
xor
loop
test
test
out
mov
pinsrw
jbe
loopne
vmovntpd
lods
push
out
dec
and
push
push
push
sbb
jg
lea
inc
mov
into
sarl
dec
pusha
icebp
dec
shr
jecxz
repnz
push
shrb
mov
dec
dec
mov
and
mov
mov
std
loope
jg
lret
push
stos
int3
dec
out
test
movsl
aaa
aas
mov
jne
cmpsb
push
ss
imul
pop
push
and
imul
sbbl
or
cmp
sub
scas
lret
dec
xchg
rcrb
fsubrs
daa
cmpsl
xor
ljmp
lea
in
fdivs
add
mov
sahf
sub
push
std
mov
popa
push
dec
lock
leave
xchg
mov
xor
mov
mov
icebp
pop
mov
notl
add
lcall
mov
inc
pop
rolb
loop
stos
pop
cld
cs
xor
jecxz
xchg
mov
idiv
dec
add
fldcw
mov
or
sarb
nop
subl
xchg
xor
mov
mov
jb
stos
pop
push
sbb
daa
cmp
ja
add
cmp
pop
jb
mov
lds
lret
or
jno
pop
push
inc
and
stos
adc
std
popa
lds
in
jecxz
loop
jb
push
xchg
repz
or
and
rcrl
insb
jg
in
cld
sti
test
jae
outsb
sub
rorb
out
sbb
jg
mov
xor
mov
xlat
in
adc
xor
add
xchg
cld
mov
sub
push
push
jl
xchg
push
jg
test
pop
cwtl
ss
nop
sbb
dec
xor
xchg
add
outsb
lret
imul
mov
movsl
dec
aaa
repz
outsb
dec
jle
scas
rcrl
jnp
push
sub
lret
jae
cs
lea
pop
inc
mov
loop
adcl
les
inc
fs
jo
or
pop
mov
rclb
mov
push
cmp
std
in
stos
subb
stos
sub
cmc
mov
sti
sbb
mov
push
jp
testl
cmpsl
push
bound
test
add
cmp
jg
movb
adc
fs
mov
cmp
js
mov
icebp
cmp
push
pop
jbe
mov
sub
sti
pop
xchg
xor
arpl
cs
decl
or
je
push
cmp
je
add
scas
pop
cmpsb
pop
addr16
sbb
add
add
xorl
cs
xchg
add
orb
pop
dec
jns
dec
mov
test
ja
ss
or
movsb
mov
stos
cmp
cmp
mov
cmp
aaa
or
iret
add
push
xchg
jmp
cmc
mov
push
jecxz
xor
loop
test
rcrb
jp
mov
imul
lods
and
test
int
inc
stc
jae
sbb
push
inc
outsl
cmp
pop
ds
pushf
adc
mov
pop
lods
adc
sub
sbb
add
aad
sarb
cmpb
loop
xor
dec
aas
movsb
cmp
push
loop
cli
sub
adc
pop
sub
dec
inc
enter
test
daa
dec
rclb
adcb
mov
inc
sub
ljmp
cmpl
pop
daa
push
or
or
add
or
pop
inc
mov
push
imul
bound
aaa
stc
stc
pop
adc
jecxz
xchg
cld
outsb
xor
pop
add
add
pop
or
inc
clc
js
add
push
lcall
int
popf
fs
sub
cwtl
cmp
push
sbb
in
push
and
pusha
pop
sbb
mov
or
test
mov
fxam
jge
xchg
outsb
insb
cmp
sub
push
adc
pusha
and
pop
in
sbb
imul
xor
xchg
mov
xchg
dec
decb
popa
lcall
imul
scas
sub
loopne
lds
jnp
imul
mov
mov
jne
shlb
push
mov
call
pop
les
fs
notl
add
jg
sti
xchg
push
mov
pop
outsl
into
out
test
ret
dec
jp
sub
xchg
pushf
in
or
movsb
inc
pop
aaa
outsl
stc
push
lock
stos
arpl
addl
fcoml
negb
inc
mov
out
inc
cmp
xor
test
xchg
shrb
out
cmp
hlt
js
sub
stos
jb
test
sbb
aam
push
adc
jg
test
fdivr
jecxz
nop
and
jmp
aas
inc
sub
adc
mov
jnp
cltd
add
push
in
pushf
mov
adcl
insb
scas
aad
insl
add
mov
loopne
and
out
inc
sub
mov
jne
loopne
cmp
imul
jae
sbb
sbbb
mov
push
lock
and
rcll
and
sbb
bound
addb
sti
pusha
les
testl
pop
aas
pop
popf
xor
mov
push
add
std
sbb
lock
pop
add
gs
fnstsw
or
pop
dec
imul
ss
out
mov
or
dec
daa
mov
movsb
jge
pushf
andl
bound
mov
sub
xchg
stc
sbb
mov
and
les
int3
cmpsl
mov
dec
int
into
test
clc
mov
icebp
sbb
inc
pop
iret
filds
cmp
cltd
inc
inc
or
adc
jno
aaa
sub
cmp
mov
pop
sub
fbld
loopne
push
lea
jb
je
push
pop
jle
sbb
aaa
out
repz
jns
push
mov
jecxz
xorb
int
pop
call
jns
in
stos
push
inc
lods
jge
xchg
out
inc
in
mul
jle
or
lret
cmp
popf
and
ja
adc
inc
es
imul
fstl
loope
mov
push
cmp
cmpsb
mov
adc
in
test
ss
sbb
enter
mov
push
push
rol
cmp
cmp
lret
icebp
cmp
call
testl
jns
cld
daa
cmp
jecxz
repz
sbb
pop
test
ja
jmp
push
cmp
and
xor
sbb
loop
adc
and
out
jbe
ret
lcall
dec
aaa
inc
bound
shlb
cmc
xchg
fidivs
xchg
mov
cmp
sub
inc
mov
pop
sbb
cmp
inc
push
sbb
aam
jle
xchg
or
cmp
icebp
xor
std
adc
pop
push
lock
orb
ficomps
push
loope
dec
mov
jl
push
and
mov
add
out
adc
add
push
sub
mov
add
iret
lea
hlt
es
push
adc
out
test
popl
ret
mov
outsb
inc
or
inc
mov
jmp
xchg
mov
movsl
scas
add
outsb
push
jns
sbb
fsubr
int
idivb
inc
bound
in
cmpsb
and
mov
cs
rcrl
xor
icebp
and
call
mov
mov
loopne
and
icebp
sbb
movsb
loopne
mov
pop
pop
nop
pop
jbe
in
out
push
in
or
dec
sub
adc
and
out
mov
mov
pop
shlb
inc
xchg
popf
fs
push
lods
xchg
mov
stc
loope
ds
je
rclb
pop
mov
fucomp
mov
pushf
and
aam
adc
push
lods
repnz
fcomi
add
cs
mov
clc
repnz
push
jbe
andl
into
je
xchg
push
pop
js
mov
incb
inc
sub
fistpll
loope
inc
fucomip
push
es
mov
test
sub
mov
cmp
aaa
loope
xchg
add
mov
xor
and
je
jnp
xor
cmc
dec
and
push
adc
into
adc
insl
xor
adc
fwait
and
aad
lods
repnz
std
adc
cltd
pusha
jg
mov
pop
cmc
sbb
addb
add
jns
stos
pop
out
inc
clc
mov
stos
in
lcall
push
js
inc
adcb
das
scas
std
dec
int
push
movsb
mov
xchg
outsl
xchg
xchg
mov
insb
push
and
fwait
std
mov
popa
jp
in
jmp
test
dec
shr
bound
mov
dec
outsb
adc
add
call
xchg
mov
xor
mov
dec
iret
out
adc
xchg
dec
xchg
jecxz
or
movsb
sub
jmp
enter
jg
adc
testl
icebp
ret
push
int3
xor
test
pop
pop
jp
xor
int3
hlt
xchg
iret
mov
xchg
into
rorl
test
and
test
repz
test
xchg
adc
in
ja
mov
pop
test
add
inc
fdiv
outsl
icebp
sarb
mov
mov
sub
push
scas
mov
pop
addl
mov
bound
loope
cmp
mov
scas
jmp
xor
jns
out
hlt
sub
fdivs
push
cmp
subb
fsubs
sub
inc
push
or
je
xchg
mov
test
sbb
ror
movl
shrl
xchg
jge
sub
ret
jae
xchg
inc
cli
lea
sbb
subl
cwtl
mov
jbe
adc
imulb
push
shlb
out
hlt
mov
and
aas
push
push
enter
iret
cwtl
ficomps
sub
dec
pop
mov
inc
stc
adc
aaa
int3
je
push
mov
clc
cmp
push
mov
rclb
xchg
orl
sbb
push
add
push
outsb
add
hlt
xchg
scas
popa
mov
iret
lds
push
in
or
test
mov
lods
dec
xchg
cmp
jle
dec
xchg
pop
pop
push
int
sub
xor
add
js
inc
lahf
shrl
jae
imul
lds
cmc
add
roll
cmp
lods
notl
out
cmpsl
mov
fs
pop
shrl
out
sub
cs
ret
inc
repz
jmp
mov
push
dec
xor
fidivrl
leave
push
push
xor
fdivrs
or
in
adc
inc
add
xchg
jecxz
cmpl
add
cmp
stos
xchg
outsb
or
inc
ret
inc
cmpsl
or
add
js
or
lret
push
lods
inc
orb
pushf
cltd
ljmp
scas
sub
mov
cmp
mov
sti
dec
in
jae
mov
test
repz
dec
add
dec
test
lahf
cmc
xchg
es
xor
cmc
out
or
cmp
jne
cmpsb
testl
lods
std
mov
sub
xchg
in
rclb
in
shrb
out
dec
jnp
clc
dec
ret
inc
inc
and
jl
xchg
test
jb
sbb
and
sti
ds
bound
jo
and
sub
fmull
mov
fcmovnu
andl
jge
in
rcl
jge
mov
ds
fisttps
dec
mov
adc
add
cmp
jns
cmp
xchg
rorl
mov
mov
pop
sub
dec
and
loop
loope
pop
and
in
cs
icebp
mov
repnz
or
mov
outsl
jne
sbb
cmp
es
xor
mov
inc
push
into
mov
rcll
adc
sbb
and
push
push
and
sbb
inc
mov
sar
add
jns
push
jp
fcomps
pop
fidivl
ret
mov
call
sub
imul
cli
paddb
cwtl
jnp
mov
bound
mov
dec
cltd
rcll
mov
push
cmc
jnp
and
or
sarl
inc
in
cli
test
add
stos
adc
jns
daa
pop
lods
add
add
jmp
lret
push
mov
lcall
into
mov
push
out
test
sbb
stos
scas
lods
jecxz
fwait
outsl
sbb
out
inc
loop
push
push
lock
mov
popf
xchg
lcall
movsb
or
imul
pop
lret
cmpsl
and
sbb
imul
cmp
xchg
andb
stc
sbbb
jg
mov
or
lcall
into
outsb
pushf
leave
addb
cwtl
mov
inc
xchg
repz
test
imul
hlt
mov
jl
loopne
enter
fiaddl
jg
push
inc
push
jns
xchg
jp
fld
adc
xchg
repnz
fistpl
fbld
arpl
fisubrs
dec
cmp
push
jmp
mov
lcall
push
movd
and
xor
gs
inc
mov
dec
fs
xchg
inc
popa
lret
or
sbb
sarb
xor
jl
dec
lcall
pusha
cltd
icebp
scas
popa
inc
jbe
divb
sti
scas
into
adc
jg
lods
cmp
cs
jno
sbb
push
iret
lea
mov
aad
rcll
pop
adc
je
loop
or
fcoms
paddsb
cs
jecxz
mov
std
insb
mov
dec
pop
test
sbb
xor
cmpsb
insb
adc
clc
ds
shrb
jle
mov
cli
pop
rorl
adc
aad
push
imul
popf
or
pop
mov
ja
sub
repnz
jg
push
je
aam
out
mov
cmp
jg
and
mov
pop
inc
xchg
mov
out
adc
or
jle
in
jnp
ljmp
push
loop
dec
test
mov
stos
pop
jbe
sbb
xor
aaa
add
testl
dec
fisubl
mov
xchg
inc
out
sti
push
dec
add
sub
arpl
loop
fbld
jge
pushl
sub
lods
inc
cmp
jbe
aam
mov
lret
lods
sub
ljmp
test
dec
xchg
test
stc
es
ret
pop
and
testb
fstps
out
mov
insb
shll
movsb
cmp
jnp
out
lods
std
bound
in
test
loop
mov
stos
add
lds
aas
jg
pushf
jo
mov
ret
fadds
rcll
sbb
cmp
and
sub
fadds
les
fwait
cwtl
xchg
sub
js
or
mov
mov
xor
int
xchg
cli
jmp
jp
push
imul
xchg
push
imul
je
ret
ja
lods
dec
push
xor
test
adc
push
outsl
gs
leave
lahf
shr
lret
std
into
roll
jae
adc
rol
xchg
jo
sbb
in
add
push
loopne
aaa
outsl
jns
mov
das
xchg
push
rolb
mov
cmpsb
data16
sub
fwait
or
aad
test
test
cmpsl
popf
ds
cmp
repz
jne
mov
mov
inc
mov
scas
out
fildl
test
shrl
and
iret
sub
lret
inc
daa
xor
into
mov
movsl
and
rep
aad
fadd
inc
inc
sbb
xor
jecxz
push
cmp
pop
nop
mov
sti
gs
xorb
imul
and
inc
sbb
imul
cwtl
and
mov
or
xchg
xchg
jp
pop
adcl
cmp
jge
mov
jl
mov
std
out
aad
push
inc
adc
xchg
shl
push
fmull
pop
movsl
leave
sub
lods
int3
and
cmpsl
lds
sub
jo
cmc
into
xchg
xchg
push
imul
sbb
lea
cmp
push
add
daa
inc
ret
into
xchg
mov
out
ss
pmaxsw
sub
fistl
mov
ss
ja
jne
inc
push
mov
adc
and
mov
pop
dec
mov
xchg
xchg
adc
dec
ljmp
out
xor
aas
nop
imul
push
push
rcl
repz
push
add
or
pop
inc
cltd
mov
rcrb
cmp
and
mov
sbb
pop
cltd
xchg
jmp
mov
pop
and
inc
pop
xchg
rorb
repz
iret
cld
ss
inc
pop
mov
cmp
stos
dec
fsubp
enter
test
mov
stc
push
mov
mov
mov
out
call
cmpsl
dec
js
in
pop
xchg
pop
dec
jg
cmp
aas
in
xchg
addb
push
jp
push
mov
pop
shll
mov
mov
mov
push
imul
call
dec
jmp
xchg
shlb
bound
pop
mov
fucomi
adc
xchg
or
js
pop
sbb
mov
xchg
out
int
pop
pop
scas
sbb
bound
and
or
or
repnz
xchg
jg
std
cmp
cld
xor
pop
fucom
lock
aam
inc
in
push
test
inc
cmpsl
pop
lret
or
fwait
inc
fisubs
mov
pop
mov
shrb
lods
push
push
adc
mov
lds
fnsave
std
popf
sbbb
xor
bound
pusha
bswap
mov
add
mov
xor
out
scas
mov
jg
sub
imul
int3
pop
mov
insb
in
shll
push
out
shl
mov
mov
hlt
insb
jae
lods
lock
aam
pop
stos
cmp
stos
add
cmp
scas
loope
and
jecxz
lods
adc
stos
mov
mov
sbb
bound
andl
sub
push
ret
pop
dec
ret
mov
les
repz
or
pop
imul
mov
cmc
jbe
push
sub
in
or
adc
jecxz
mov
and
sbb
or
jle
negb
clc
test
mov
testb
push
jns
imul
nop
mov
mov
int
add
aas
js
jo
add
movsl
jne
mov
js
pop
repz
cli
loope
fadds
lea
popf
out
pop
jns
lods
sarl
mov
test
addr16
stc
test
imull
aas
sbb
cmpsl
xor
push
or
and
xor
lea
and
inc
scas
cld
lahf
dec
cmpsl
loop
jns
inc
lods
sbb
and
test
bound
xor
lahf
sbb
jle
rclb
pusha
ret
xlat
in
rcrb
adc
ror
mul
jg
push
aam
ja
cmpsb
jmp
and
xchg
cs
nop
adc
repz
pop
test
dec
or
outsl
mov
je
mov
out
idivb
jae
cltd
push
mov
inc
out
xchg
add
scas
pusha
stc
push
sub
loopne
scas
pop
xchg
dec
push
or
mov
dec
jbe
pop
push
or
call
dec
xchg
cmp
lret
std
notb
jb
adc
add
fwait
cltd
insl
dec
pushf
sbb
add
jmp
add
imul
adc
test
pop
and
data16
ret
jne
gs
pop
std
jge
in
xchg
adc
adc
jb
and
outsb
xchg
lea
rorl
xchg
enter
rolb
jnp
xchg
add
mov
push
pusha
adc
or
or
pop
push
arpl
cs
pop
push
dec
inc
ljmp
jo
insl
mov
jne
lret
and
xor
pop
mov
test
fcmovne
mov
push
aaa
push
adc
ljmp
in
push
faddl
add
hlt
xor
jecxz
iret
sub
imul
jne
jg
arpl
push
dec
ds
test
push
inc
xchg
ja
add
mov
out
loope
sub
push
bound
jecxz
xchg
aas
push
sbb
stc
jmp
imul
push
sbb
ja
push
fisubrs
stos
mov
pop
push
or
daa
or
sub
sbb
jmp
divl
pop
std
cs
movl
xchg
mov
mov
push
out
adc
daa
mov
push
xchg
lret
std
inc
fistps
xorb
inc
jle
inc
repz
shrl
fxam
mov
in
ljmp
pop
sahf
cmp
fldcw
ljmp
push
push
add
jmp
and
lret
jb
clc
lret
pushf
aas
add
out
imul
fisubrl
sar
mov
xchg
dec
inc
push
negl
add
cmpsb
popf
sub
cmc
jo
arpl
inc
jbe
mov
stc
imul
dec
jo
es
mov
fsubr
test
jp
or
fidivs
gs
int3
outsb
cmc
push
add
cltd
push
call
mov
rclb
in
std
popa
or
ss
pop
shr
cmp
adc
test
movsl
and
sbb
test
pop
mov
sahf
scas
pop
push
xchg
or
xchg
lret
cmpsb
in
js
cmp
into
inc
jbe
and
dec
in
inc
out
push
scas
imul
in
lret
push
mov
mov
cmp
inc
movsb
sub
mov
dec
cli
mov
add
push
inc
sub
push
xor
enter
icebp
in
mulb
mov
insl
inc
je
push
test
and
aam
out
push
and
adc
das
arpl
out
sbb
sub
and
add
scas
mov
sbb
push
mov
dec
int3
scas
and
dec
test
pop
fs
cld
out
mov
jmp
add
gs
aas
jns
adc
test
xor
and
into
adc
xchg
ss
xchg
in
pop
test
jno
and
gs
movsb
in
push
stc
clc
mov
addr16
bound
jecxz
sub
push
es
push
andb
pop
or
rol
scas
jg
pop
je
push
push
pop
out
mov
mov
inc
imul
fstpl
push
mov
push
mov
xchg
enter
push
and
pop
cmp
cmpsb
orl
jne
enter
jnp
jns
jno
or
mov
xchg
subb
mov
mov
out
lcall
data16
scas
movsl
mov
lods
jo
arpl
aam
mov
add
sbb
xchg
lock
imull
cmp
dec
sarl
imul
ljmp
imull
dec
ret
es
scas
mov
pop
inc
mov
mov
jae
cmp
adc
xor
ret
xor
add
adc
cwtl
jno
jnp
sub
fnstcw
out
cltd
into
dec
xchg
test
fmuls
or
and
mov
add
or
int
mov
or
notb
jb
scas
push
arpl
in
xchg
pop
sub
repnz
mov
xchg
push
mov
out
mov
xchg
sub
ss
cmp
cli
pop
clc
pop
cmpsb
dec
lods
xor
imulb
in
nop
cmp
pushf
mov
rorb
pop
int3
arpl
mov
stos
aaa
popa
inc
pusha
push
cmp
movsl
and
adc
add
loope
jmp
xchg
imul
and
jp
leave
jge
cld
clc
sbb
push
fnsave
loopne
fsubrp
sub
das
fcmovbe
cmp
outsl
fiaddl
loopne
lods
das
sbb
jno
lahf
cli
insb
mov
sahf
mov
push
flds
hlt
cld
stos
insb
inc
data16
jmp
movsl
inc
jmp
ds
jns
mov
xchg
lahf
fs
push
lret
sub
xchg
xchg
adc
or
popf
leave
jg
data16
stos
cld
test
xchg
jo
aad
mov
cwtl
add
and
scas
cmp
arpl
out
out
and
mov
push
sahf
sbb
jno
faddl
sbb
cmp
and
daa
cmc
cmp
push
pop
inc
daa
adc
ret
popa
mov
or
clc
push
adc
in
adc
mov
loop
mov
mov
hlt
sub
adcb
cmpsb
xchg
mov
nopl
xchg
mov
or
gs
int3
es
mov
cmp
imul
pop
ret
loopne
iret
insl
clc
fsubp
imul
mov
jno
loope
sarb
xor
xlat
repnz
ficompl
cmp
jno
lds
jae
sub
pop
jl
xor
xor
push
rcl
repnz
jp
push
loop
lods
inc
xor
mov
in
or
scas
xor
push
xchg
and
xlat
mov
orb
adcb
mov
leave
nop
and
dec
aaa
jne
mov
mov
cltd
jb
cmp
mov
mov
mov
ret
shrb
addr16
mov
ret
mov
inc
or
repz
xchg
shlb
fucomp
call
rcr
sub
xlat
clc
sub
sbb
push
inc
lea
xchg
jo
dec
or
xchg
ds
inc
lret
cmp
mov
icebp
lahf
test
ja
lahf
movsb
lock
or
cmpsl
inc
xchg
imul
fdivp
xchg
insl
xor
jmp
adc
pusha
pop
sbb
xchg
push
push
push
inc
je
iret
jg
adc
arpl
stos
jne
adc
les
mov
xorl
push
xor
mov
lret
mov
es
pop
movsb
push
aas
adc
mov
fcmovne
pop
and
xchg
jle
idivb
add
and
mov
movsb
dec
jmp
lret
out
cmp
lret
push
jo
stos
or
jecxz
lret
cmp
dec
fmuls
inc
pop
je
inc
push
repnz
mov
xor
xor
clc
add
clc
stos
inc
jmp
dec
std
popf
jne
inc
mov
pop
sbbl
dec
jnp
add
fists
cs
ret
xchg
outsb
push
pop
ret
loopne
mov
imul
mov
and
pop
pop
pop
aad
xor
xchg
insb
or
cmpb
jbe
push
adc
mov
jmp
mov
xor
xor
cmp
fadds
mov
les
fsub
push
lahf
lcall
leave
mov
outsl
dec
in
adc
out
dec
test
pop
mov
xchg
mov
push
adc
push
pop
call
pop
mov
int3
or
jns
pop
push
sbb
outsl
lret
in
cmp
stos
rcl
mov
push
fsubrs
mov
aas
push
shlb
bnd
lret
jg
fwait
and
lock
test
xor
fwait
ret
push
push
xchg
call
and
mov
sti
push
and
movsl
cli
fsubs
pop
jne
mov
shrl
adc
mov
mov
inc
popf
and
subb
and
outsl
sbb
out
and
outsl
pop
or
mov
or
cmp
js
or
xchg
mov
mov
push
jbe
cmp
test
xorb
or
out
call
leave
add
shlb
add
mov
fs
mov
pop
adc
inc
dec
fwait
iret
push
gs
ljmp
add
stc
mov
popa
xchg
insl
adc
jns
mov
lods
popa
or
sub
sub
push
xchg
xchg
movsb
and
scas
or
sub
cmp
push
cli
pop
cmpl
lret
xor
in
or
jae
pop
sti
out
add
pop
push
mov
rorb
fsubrp
or
rol
pusha
addr16
test
cmpsb
dec
stos
out
xchg
and
decb
xor
fidivl
das
std
push
enter
push
test
icebp
fimull
insb
xor
iret
lea
sub
mov
or
inc
mov
xor
xchg
clc
fsubrs
bound
mov
jp
fsubp
test
lock
shll
add
jae
inc
loop
mov
mov
loope
jp
xor
mov
movb
push
mov
inc
dec
inc
fcompl
sbb
test
jle
addl
loop
jmp
scas
push
dec
in
das
loop
push
xchg
xor
xchg
sub
call
daa
test
mov
push
or
cld
mov
mov
js
add
push
jno
cmpsb
enter
sti
int
sub
jno
dec
xchg
dec
xor
xchg
inc
dec
imulb
lods
xchg
fmuls
outsl
mov
lds
sbb
adc
pop
push
icebp
cmc
adc
in
fwait
lret
push
xlat
stc
in
ret
adc
repnz
pop
jmp
add
pusha
mov
or
out
lret
sbb
add
add
out
pop
mov
jne
mov
movsl
adc
bound
dec
sbb
sbb
scas
sub
int3
inc
fwait
dec
mov
outsl
adc
and
push
xchg
outsl
aam
sti
sahf
imul
test
cltd
fstpt
jl
jno
lds
xchg
cmpsb
sarb
jle
pop
jge
stc
maxps
mov
scas
cmp
loope
ss
xchg
cltd
fistpl
jnp
adc
int3
push
push
and
adc
es
mov
and
add
push
mov
frstor
push
xor
out
xor
sub
xchg
sbb
xchg
xor
jecxz
int3
jmp
into
pop
jl
xchg
jg
icebp
pop
inc
fcmovb
or
fldl
jnp
jne
xchg
insl
dec
lds
push
loopne
mov
inc
sub
outsb
jo
std
add
mov
dec
fwait
je
xchg
adcl
or
ret
pop
sbb
faddp
mov
jecxz
xorb
dec
cltd
mov
outsb
mov
cld
dec
ja
mov
stos
roll
xor
aam
cwtl
cmp
stos
push
or
and
roll
mov
daa
mov
and
into
je
les
jns
fildll
cmpsb
mul
mov
popf
dec
cs
fnstenv
mov
inc
fsubl
cmc
dec
xor
push
xor
pop
push
add
repnz
icebp
mov
push
jp
push
jnp
mov
xorl
xchg
mov
mov
outsb
stos
hlt
lods
lea
sub
popa
cmp
and
pop
cwtl
push
pop
push
pop
inc
das
sub
adc
jl
je
sbb
ss
insb
push
xor
dec
imul
xchg
pop
int
adc
pusha
cmpsl
out
js
mov
ljmp
sbb
int3
test
adc
xchg
sub
popf
and
dec
imul
mov
ret
jle
pusha
sbb
pop
imul
mov
inc
mov
or
add
call
popf
aaa
pushf
cmc
lcall
pop
add
xchg
lods
push
cmp
cmp
sahf
cmpl
jle
push
loop
cmp
shl
sbb
int3
test
fistpl
pushl
or
mov
movsb
xchg
xor
sub
out
shll
lods
or
insl
xchg
ja
data16
xchg
jo
inc
fistpl
sbb
mov
add
or
cwtl
addr16
sbb
pop
xchg
mov
fnstsw
mov
pop
cmc
test
mov
inc
mov
pop
inc
imul
cs
fs
jge,pn
cwtl
mov
xchg
xor
sub
rcrl
in
pop
sub
subl
rolb
fidivrl
jle
sbb
shrb
or
push
or
stc
inc
and
push
push
jns
idivb
fxam
lock
add
ret
sbb
push
inc
sahf
lret
add
and
shll
cmp
popa
ficomps
dec
jnp
mov
testl
inc
pop
lock
leave
cwtl
adc
mov
hlt
in
xchg
lahf
mov
aaa
lea
addr16
js
pop
inc
or
js
mov
sbb
adc
jl
pop
pop
xchg
xchg
adc
xchg
dec
push
pop
stos
sub
das
xor
sub
pop
or
xchg
rcll
addb
dec
fildl
mov
ds
cmp
sub
cmpl
and
in
mov
push
pop
movsl
clc
lods
cmc
push
sbb
test
scas
jecxz
mov
bound
in
mov
les
xlat
nop
outsl
pop
lcall
ja
add
jmp
xor
js
pushf
cmp
mov
pop
jmp
sbb
test
sbb
cs
add
outsb
or
les
das
push
or
adc
cmp
scas
imul
ds
push
inc
int
mov
ljmp
testl
push
mov
rcll
in
and
mov
mov
insl
ret
inc
mov
sbb
xchg
cs
xchg
repz
movsl
enter
mov
in
or
shl
jle
fnstenv
aas
fildll
aam
rcr
inc
cs
mulb
cmp
jnp
jo
cmpsl
bound
mov
mov
aad
mov
push
je
scas
nop
mov
and
push
xor
push
mov
push
jno
sub
pop
lods
ljmp
insb
lods
jl
lcall
cld
rcrb
or
add
jns
xor
mov
sub
cs
adc
xor
sub
sbb
push
dec
scas
mov
adc
movsb
jne
clc
pop
sbb
mul
mov
jne
inc
or
mov
mov
jae
sbb
jle
pop
mov
mov
sbb
popf
push
adc
fmull
js
out
and
add
std
pop
stos
pop
mov
lret
dec
cmp
mov
xchg
rcll
negb
mov
imul
lcall
lods
sub
dec
lods
sbb
mov
and
dec
add
insl
icebp
icebp
fcoms
or
pop
add
mov
cmp
lahf
adcb
loopne
lret
outsb
arpl
adcl
pop
dec
cmp
decb
dec
int3
adc
out
ja
xor
addl
pop
push
nop
daa
shlb
mov
mov
dec
push
dec
xor
push
xchg
or
sbb
sub
mov
dec
adc
outsb
stc
outsb
nop
fadds
jmp
subb
xor
hlt
incb
dec
lret
imul
es
mov
mov
inc
pop
push
out
add
jmp
add
bound
add
xchg
dec
xor
pop
cmpb
cmp
push
adc
andl
js
inc
enter
adc
lahf
sub
push
jno
sti
loopne
cmp
mov
cltd
out
or
sarl
and
jge
add
addr16
cli
push
shrl
das
in
jbe
dec
inc
mov
and
lmsw
inc
scas
push
mov
jae
xchg
xchg
push
sbb
int3
mov
jmp
sbbl
shld
add
repz
and
push
rcl
outsb
jge
inc
stc
push
out
lret
out
mov
outsl
jns
pop
shrb
add
push
sub
inc
lret
into
jo
push
lret
jbe
lock
lods
lret
aad
and
jnp
test
push
ss
scas
popf
pop
sub
or
out
fstpl
sarb
outsl
mov
aaa
and
repnz
pop
xchg
adc
lahf
mov
gs
sub
cmp
jl
inc
cmp
hlt
pop
fwait
xchg
add
div
push
xchg
gs
stos
cmc
or
outsb
js
pop
maxss
pop
adc
xor
dec
and
jecxz
lods
xlat
sub
es
stc
add
arpl
les
mov
loope
jmp
das
push
mov
cmpb
das
mov
shll
jbe
add
stos
into
inc
adc
push
lods
ror
adc
inc
pop
mov
outsl
repz
mov
in
jge
loopne
cmp
xor
jg
push
jns
mov
sub
sub
mov
pop
mov
push
and
adc
orb
adc
cli
or
jmp
pop
mov
movlps
ret
push
subb
repnz
insb
add
mov
lds
pop
ljmp
add
sbb
jb
insl
jge
dec
int
adc
mov
sub
xor
cmpsb
add
mov
or
sub
push
mov
in
add
jo
lds
stos
testb
paddw
jo
xor
int
nop
popf
pop
cli
jecxz
push
in
out
stos
int
inc
out
sbb
push
add
notb
mov
arpl
mov
scas
gs
cs
je
inc
mov
imul
or
xchg
jge
loope
jnp
dec
or
in
arpl
or
jle
jl
cmp
ss
ds
pop
js
leave
sub
mov
rcll
xchg
loopne
push
fisubs
push
outsb
sahf
xchg
push
sbb
subps
dec
in
and
rclb
xchg
xor
inc
push
mov
push
and
mov
mov
push
ret
push
sub
push
aam
pop
sub
std
scas
or
test
leave
aam
test
mov
mov
sbb
iret
xlat
stc
push
mov
xorb
push
jl
stos
jnp
cmpsl
js
push
lea
leave
cmp
mov
mov
dec
xor
xorl
rorl
cmp
sub
scas
gs
inc
test
in
out
pop
jmp
iret
fmull
rorl
and
mov
mov
adc
rol
cs
loope
pop
sbb
or
std
mov
sub
enter
aas
call
push
popf
mov
inc
xorl
ds
cmp
sub
xchg
mov
mov
repnz
popl
mov
xor
push
loope
mov
lds
cmp
sub
xlat
dec
sbb
leave
aad
repz
je
sub
fcomps
cmp
test
cmpsb
push
fimuls
ljmp
fnstenv
ljmp
dec
orl
inc
iret
push
push
bound
cmpsb
xor
mov
push
add
and
and
in
mov
dec
movsb
aaa
outsl
jne
ud1
in
cld
adc
idivl
cmp
jnp
insb
ljmp
pop
push
call
mov
rcrl
in
push
lcall
jns
cltd
ret
inc
sbb
frstor
std
xchg
dec
int
lret
aas
fsubrl
mov
and
cmp
adc
mov
push
outsl
jmp
sub
movsb
cwtl
mov
loopne
fidivrs
xor
cmp
and
stos
sbb
and
dec
pop
lret
jge,pt
mov
movsb
nop
outsl
ficoms
test
mov
mov
addr16
push
enter
xchg
sub
stos
lods
arpl
pushf
sbb
mov
and
inc
cmp
repz
dec
xor
je
mov
push
inc
mov
add
pop
mov
sub
cli
cs
push
dec
mov
jmp
xor
cmp
sti
pop
fnstsw
std
out
les
js
cmc
sub
mov
xchg
sub
xchg
jne
dec
and
stos
mov
pop
sti
jns
popf
mov
xchg
out
adc
int3
push
fwait
imul
popf
cmp
push
mov
sbb
pop
adc
push
shl
imul
fists
cmp
pop
xchg
adc
test
lret
outsb
mov
hlt
jl
xor
repnz
push
and
cld
je
jnp
push
push
push
in
fwait
mov
lcall
imul
ret
cli
adc
sahf
inc
pop
fildll
xor
cltd
jb
pop
jo
dec
test
cwtl
sbb
jne
jp
jmp
jne
jl
cltd
xlat
or
xor
push
jg
popf
cmp
pop
ja
mov
mov
outsb
push
push
stos
scas
data16
or
mov
inc
repz
jle
insb
mov
adc
adc
adc
fists
inc
dec
cmp
pushf
stos
jae
mov
xor
push
int
loope
cmp
inc
rdmsr
movsl
xchg
adc
cmp
or
dec
dec
idivb
cmp
subb
xchg
cmpsl
lahf
outsl
push
out
xor
jae
popa
jecxz
mov
scas
and
call
jecxz
popa
push
in
adc
xchg
and
ss
jne
fs
or
repnz
in
sub
jle
fsubrl
mov
aas
in
push
mov
dec
rcr
pop
or
iret
xor
adc
inc
sbb
iret
iret
std
mov
mov
iret
and
inc
stc
in
sbb
unpckhps
mov
es
mov
imul
fwait
xlat
inc
xor
pop
jmp
and
outsl
mov
sub
add
dec
iret
jp
sbb
in
popa
inc
fnsave
gs
repnz
inc
mov
inc
mov
and
and
pusha
xchg
cmp
xchg
mov
cli
push
jae
out
bound
rclb
dec
test
cltd
push
xor
pop
test
ss
call
lock
mov
push
jl
pushf
movb
fistpll
pop
inc
mov
sub
sbb
in
ret
int
in
jge
inc
hlt
mov
xor
sub
mov
out
mov
xlat
mov
xor
enter
addr16
hlt
movsl
std
dec
push
roll
pop
mov
loopne
push
add
lahf
jno
dec
daa
into
pop
xchg
lea
xchg
movsl
mov
sbb
mov
mov
sub
pop
sub
mov
cmp
sub
mov
cli
into
pop
loop
icebp
test
cli
jno
mov
int3
xor
test
into
jg
jo
pop
popf
fnstcw
jae
fidivrl
fcomps
lcall
sbb
test
and
in
lods
pop
clc
inc
arpl
movsl
dec
adc
adc
adc
jae
jmp
test
push
lcall
and
loopne
sbb
dec
rcrb
shrb
mov
push
imul
or
inc
fsubrl
pop
pop
xchg
cltd
push
inc
inc
out
sbb
mov
sti
aas
inc
push
jae
mov
sbb
pop
ss
out
mov
pushw
repnz
roll
sarl
xchg
cmpsb
iret
dec
push
mov
lahf
hlt
jne
jae
push
pop
loopne
lret
mov
mov
ds
pop
je
jae
adc
mov
cmp
sub
popf
jae
dec
nop
test
movb
shrl
jecxz
clc
lret
jecxz
not
jecxz
add
or
fidivrs
pushf
das
dec
pop
jbe
iret
mov
in
push
mov
outsb
lcall
das
in
dec
jno
imull
mov
nop
jge
mov
ja
add
sub
xchg
and
adc
sbb
dec
mov
test
lahf
loop
adc
pop
mov
imul
repnz
aaa
leave
out
lock
loopne
cmp
test
mov
push
ret
and
mov
push
inc
jb
cmp
sbb
xor
pop
pop
jp
push
mov
int3
in
ss
jl
in
movsl
lret
inc
pop
add
sub
out
push
and
pop
jecxz
add
sbb
movsl
fwait
dec
lahf
inc
test
in
lock
inc
data16
inc
sti
and
or
push
fwait
and
clc
jnp
push
lret
je
pop
fwait
cmp
mov
fdivrl
lcall
addb
jnp
adc
cmp
popf
pushf
inc
pop
sub
pop
pop
das
fistpll
in
xchg
aam
cwtl
rorl
jo
mov
fwait
imul
leave
mov
in
neg
or
mov
data16
xchg
repnz
test
sub
inc
clc
push
jno
out
emms
imul
adc
cli
imul
dec
pop
xchg
inc
ljmp
xchg
mov
mov
pop
addb
ja
dec
push
inc
push
aad
or
rcrl
push
mov
movsb
arpl
icebp
test
xor
push
and
es
aaa
repnz
sarb
jnp
dec
in
loope
movsb
rolb
pop
add
or
xor
leave
xor
pop
or
je
pop
cmp
mov
int3
push
xor
xor
leave
das
mov
sti
cmc
pop
test
jl
mov
iret
cmc
test
pop
inc
mov
pop
inc
xor
cmp
enter
push
loop
fcompl
test
aas
daa
cwtl
in
lea
out
fcmovnu
movl
cli
adc
adc
sub
in
imul
jb
add
fsub
insl
fs
mov
sti
mov
fsubrl
fimull
and
jne
xlat
imul
mov
fcompl
jl
outsb
dec
push
mov
rcr
dec
and
dec
and
sbb
fs
inc
dec
div
cmpsl
xchg
les
arpl
mov
cmpsb
icebp
sub
pusha
jno
jge
xlat
sbb
mov
cmp
sbb
mov
roll
adcb
push
inc
push
popf
mov
out
mov
jae
xchg
lahf
push
push
ror
lds
outsb
dec
rorb
cld
sti
test
out
xor
fstps
inc
pusha
mov
shrb
notl
sub
jle
aam
dec
or
mov
adc
stos
push
sti
push
lods
sub
gs
fldt
pop
sbb
std
ret
icebp
pop
jmp
sbb
fists
jmp
inc
mov
dec
adc
jp
push
paddd
push
int
or
fistps
cmp
xor
test
bound
je
fnstcw
or
and
xchg
and
nop
mov
ss
pop
mov
xor
push
cmp
movsb
jl
adc
adc
icebp
jno
dec
xchg
jl
clc
movsl
cwtl
cmp
push
mov
mov
jmp
push
imul
dec
lds
mov
add
sbb
xchg
sub
add
mov
xchg
xchg
mov
sbb
mov
jne
call
jno
push
out
mov
push
pop
jp
push
lds
in
xchg
mov
pushf
inc
pop
mov
add
inc
sub
sbb
mov
cmpsb
nop
clc
inc
jnp
jb
outsl
cmpb
jno
movsl
xchg
mov
push
mov
imul
xchg
cmp
mov
scas
shrb
mov
lds
jle
in
or
out
push
in
mov
push
loopne
sti
pusha
push
sbb
mov
adc
insl
push
dec
int3
mov
mov
adc
cmp
add
out
dec
xor
mov
xor
xor
sbb
faddl
adc
xor
push
aaa
test
mov
shll
mov
cmpsl
mov
push
cmp
rol
add
adc
js
test
cmp
sub
push
scas
iret
push
sbb
shrl
adcl
or
sbb
nop
cmovae
test
cwtl
push
hlt
cmp
into
mov
add
inc
es
outsl
xchg
movsb
mov
pop
scas
mov
xchg
aam
mov
lahf
dec
pop
fidivrl
pop
hlt
cltd
adc
repnz
sub
ret
iret
in
insb
or
push
add
decl
xor
imul
in
inc
inc
jecxz
sub
shl
pop
pop
xor
push
inc
orb
dec
mov
cmp
in
and
loopne
add
jb
cmp
repnz
out
fsubrs
shll
pop
jnp
push
adc
mov
lods
ret
imul
les
leave
sahf
sub
push
ret
ja
dec
aad
repz
jno
in
shlb
xor
xchg
cs
cmp
mov
adc
ljmp
fldl
mov
dec
scas
insl
lods
jno
jae
lock
incl
pop
cmove
aaa
mov
and
mov
popf
adc
jnp
jecxz
jbe
daa
fildll
mov
inc
icebp
xchg
xchg
outsl
fisttpl
popa
xchg
and
fbld
xor
js
fstpl
cmpsl
xor
xchg
mov
in
sub
movsl
xchg
test
dec
cltd
add
xchg
add
push
scas
addl
push
fcoml
jnp
xor
xchg
dec
mov
fwait
cmp
aas
jecxz
repz
adc
pushf
or
fsubrs
fldenv
pusha
jge
std
insb
mov
sbb
dec
push
fmul
pop
mov
repz
jg
jge
jecxz
outsb
xchg
mov
shll
jo
cmp
mov
test
js
sub
call
dec
jbe
std
call
sahf
add
inc
mov
loope
in
jl
lcall
or
mov
xlat
inc
pop
lcall
mov
fistps
mov
add
sarl
mov
add
repz
fs
shrl
sub
fwait
jge
es
dec
pusha
scas
pop
addb
mov
jae
adc
sub
and
sub
mov
mov
mov
adc
loopne
inc
addb
xor
roll
jne
mov
nop
xchg
insl
cmp
inc
push
xor
dec
jmp
pusha
and
mov
dec
scas
fs
rcll
sub
out
jnp
aaa
sbb
and
gs
mov
xlat
out
adc
or
and
and
adc
hlt
mov
aam
cmp
fsubl
cs
mov
mov
inc
stos
in
arpl
mov
lahf
dec
shrl
ret
cmp
push
adcl
imul
outsb
cltd
mov
push
mov
lret
cwtl
sub
xchg
sbb
cmp
out
add
bound
push
ja
xor
cmp
call
fcompl
or
add
mov
adc
mov
fildl
or
fcomps
mov
mov
add
nop
movsl
stos
pop
fwait
test
inc
mov
cmp
outsb
mov
ds
mov
jmp
sbb
push
push
icebp
add
cli
add
out
outsl
sub
jno
or
repz
add
loopne
ret
jb
cld
push
xlat
sbb
repnz
mov
rcl
mov
test
popf
fdivrs
fmuls
xchg
adc
push
cmpsb
xor
into
bound
xor
fstpt
push
pusha
sub
cmp
test
gs
pop
pop
enter
sub
lock
imul
mov
fwait
test
sub
into
jno
and
daa
sahf
cli
out
cmp
dec
mov
inc
cmpsb
cmp
lcall
stos
xchg
or
mov
sti
add
out
addr16
mov
dec
shll
andl
insb
out
sbb
arpl
lret
mov
inc
ljmp
cmp
sbb
sbb
js
or
pop
pop
or
xchg
mov
nop
cmp
loopne
or
dec
sub
out
imul
popf
imull
test
sbb
inc
add
jp
outsb
sahf
fnstenv
xor
fmuls
adc
dec
sub
jle
mov
daa
ss
cmp
pandn
mov
pop
lret
mov
stc
dec
stc
push
and
dec
out
imul
loopne
xor
cs
repz
in
adc
iret
cmp
dec
push
jnp
jmp
xchg
mov
fdiv
fmulp
xor
pop
jmp
lahf
push
test
pop
jle
lahf
mov
xchg
cmp
enter
lds
out
xchg
push
add
inc
mov
jmp
lods
adc
ss
sub
ret
lods
push
sarb
mov
bound
mov
mov
call
insb
push
and
repnz
xchg
push
mov
pusha
mov
mov
inc
sahf
pop
fisttps
lret
xor
pop
sub
or
shl
shrb
dec
dec
sbb
adcl
xchg
mov
inc
jp
out
mov
push
xor
out
int3
sbb
in
sbb
push
or
aad
jl
cmp
popa
push
inc
mov
add
test
pop
add
icebp
out
mov
arpl
xor
inc
dec
and
push
add
movsl
cmp
inc
cs
push
sbb
xchg
fiadds
es
mov
lods
cmp
mov
sub
aam
rorl
or
gs
cmp
dec
cmp
cmp
sub
clc
mov
hlt
xor
jne
clc
lea
stc
or
sahf
into
mov
mov
icebp
pop
mov
sbb
scas
mov
sbb
sbb
xor
aad
stc
adc
pushf
cmpsl
in
jne
outsb
bound
sbb
out
sbb
outsl
cltd
cmp
pop
ret
inc
mov
sbb
aaa
sub
add
cld
fdecstp
out
jo
int
jl
pop
jle
add
das
add
testl
dec
or
sub
lock
xchg
jbe
shll
cmpsl
aam
fcoms
mov
pop
pop
imul
cmp
repnz
cmc
fsub
sub
cwtl
dec
cld
dec
int
dec
xchg
add
mov
ret
rolb
aad
enter
sub
in
jg
push
lods
adc
jge
fdivr
sbb
xor
sahf
fwait
hlt
imull
add
xor
orl
insl
push
mov
loope
cmp
fisubrl
xchg
ret
push
out
mov
ret
clc
jne
imul
push
es
ja
mov
fcoms
push
jb
sub
call
bound
xor
mov
cltd
test
in
ss
stc
lret
loop
js
adc
pop
adc
in
adc
mov
mov
jge
xchg
bound
jo
push
sahf
sub
imul
push
stos
xchg
cli
sbb
adc
mov
or
mov
or
push
xchg
test
pop
mov
rclb
cmp
test
mov
pop
in
cli
xchg
add
sub
dec
icebp
iret
push
push
mov
aas
stos
jb
pop
das
sti
push
in
add
and
xchg
sbb
fidivrl
push
leave
xchg
adc
pop
and
cmp
and
mov
inc
inc
mov
out
pushl
jmp
mov
dec
je
subb
imul
pop
ss
jo
add
movsl
outsl
in
ret
mov
shrb
xchg
xor
or
sbb
xchg
add
inc
xlat
test
xchg
rcll
pop
inc
loop
ss
cmp
lock
cmp
add
sub
sub
jle
sbb
test
xchg
push
fs
jne
jge
inc
ret
sbb
dec
push
addr16
inc
mov
adc
lret
jg
or
and
fisubl
pushf
js
ljmp
push
or
inc
jne
arpl
fisttpll
mov
stc
inc
enter
dec
pop
fistps
cltd
loopne
push
gs
mov
imul
jo
add
add
dec
pop
lock
iret
push
test
or
jp
insb
xor
mov
lret
pop
jmp
aad
push
fldt
push
gs
sub
pop
cmp
popa
loopne
mov
gs
enter
leave
mov
jns
sbb
dec
fs
divb
pushl
jnp
leave
fiaddl
jne
call
filds
js
xor
add
lods
jno
out
fidivs
sub
pop
mov
inc
test
clc
mov
insb
les
pusha
outsb
inc
fiaddl
sbbb
imul
sti
push
sub
jmp
lret
out
sbb
mov
sub
das
fld
or
jl
cwtl
jno
lahf
dec
call
in
cmpsl
scas
cmp
mov
dec
orb
sub
movsb
pop
adc
ss
mov
lret
lds
push
adc
dec
lea
inc
bound
adc
dec
icebp
add
xor
fsubrs
shlb
push
dec
pop
leave
xor
notl
pop
pop
in
popf
call
sub
jmp
mov
pop
les
les
push
neg
push
pop
push
mov
andl
adc
jcxz
cmp
inc
adc
pushf
out
xor
cmp
fdivrs
lret
pop
inc
add
or
ffreep
xchg
jge
cs
nop
pusha
sub
mov
inc
xor
or
ja
push
jmp
aaa
push
sahf
dec
sbb
cmp
push
xchg
in
cmp
aas
xchg
mov
mov
jle
sbb
aam
es
or
jle
test
mov
sbb
lret
stc
jno
lret
bound
paddusb
xchg
fisubl
js
repnz
or
mov
pop
movsb
cltd
outsl
mov
push
mov
outsb
mov
mov
out
xor
repz
and
pop
subb
fildll
daa
mov
xor
mov
les
test
cmp
and
mov
int3
scas
cli
lcall
xor
xor
pop
inc
int3
std
gs
or
cmpsl
ljmp
pop
ljmp
out
aad
sbb
inc
mov
or
pop
repz
jae
sbb
test
or
cmp
ret
add
dec
inc
add
jmp
pop
call
adc
mov
sbb
iret
jecxz
dec
lock
push
pop
or
in
jne
aad
lods
xchg
out
loopne
pop
test
outsb
int3
xor
inc
cmp
mov
mov
add
adc
je
push
xlat
or
test
xchg
jge
sbb
cmp
das
sbb
push
inc
mov
ficoms
roll
push
stos
jl
out
jbe
mov
mov
mov
or
and
ljmp
in
dec
mov
dec
sahf
inc
xchg
xchg
ljmp
pop
aas
in
push
cmp
or
pushf
pop
mov
mov
pop
mov
inc
mov
into
cmpsl
mov
aaa
dec
mov
xchg
scas
loope
sub
imul
fdiv
cwtl
mov
mov
outsb
mov
arpl
popf
cmc
mov
add
pop
pushf
jns
lods
stos
jg
and
js
push
cmovno
sahf
mov
and
rcll
stos
fstpl
and
sbb
dec
jmp
imul
mov
dec
dec
ret
cmp
add
sahf
jb
sbb
jl
xor
pop
xchg
adc
in
loopne
pop
xchg
out
lods
and
xchg
pop
cmp
jl,pn
test
push
jg
and
es
pop
fstps
nop
cwtl
cmpsb
lret
in
das
and
dec
arpl
adc
add
mov
mov
pushf
push
into
mov
ret
xorb
ret
add
ficompl
fs
dec
rcl
andl
roll
dec
xchg
xchg
imulb
loopne
push
and
loope
mov
nop
in
jo
arpl
outsb
insb
movsl
jns
int3
xchg
sub
orb
loop
sbb
repnz
cs
ss
lret
xchg
fistpll
sbb
imul
cld
mov
lds
movsl
fwait
mov
ja
test
cs
lret
iret
sub
out
jne
iret
xlat
push
sahf
sbb
mov
gs
push
ljmp
mov
adc
lahf
into
fcomps
ds
mov
xor
xchg
jnp
bound
ja
xorb
rcl
movl
lret
imul
out
push
xchg
clc
sti
xchg
and
mov
sbb
adcw
jb
xor
fnstenv
cld
pop
pop
fidivs
sub
imul
pop
dec
inc
add
icebp
mov
add
arpl
jns
dec
xor
iret
sbb
sub
cmp
jg
fisubrl
adc
lret
rcrb
or
aam
cs
cmp
loope
mov
mov
into
cmp
test
orl
je
sub
out
aad
fwait
inc
and
push
jnp
fsubr
int3
adc
push
jne
adcl
push
mov
dec
enter
cmp
pop
rcll
ds
dec
inc
xlat
sbb
mov
pop
xor
inc
test
push
out
arpl
xchg
cmpsb
xor
push
lret
xlat
in
mov
push
fnstcw
xor
popa
in
clc
mov
jmp
adc
loop
scas
jle
and
test
ds
adc
rclb
xor
inc
push
push
pop
add
ffree
push
pop
loop
imul
or
ret
jmp
sub
in
into
jae
cmpsb
into
std
lahf
pop
out
jb
int
les
xor
in
add
in
movsl
push
sub
lret
insl
inc
mov
std
addr16
shll
cs
stos
jecxz
jmp
and
push
jl
popa
fists
orl
jmp
inc
jb
and
jns
pop
jno
lret
je
lea
aas
xor
mov
cld
ret
inc
imul
pop
arpl
mov
adc
cwtl
out
imul
sahf
and
rol
cld
pop
adc
decb
adc
mov
sbb
fstps
das
sub
add
adc
jg
lods
shl
shl
lock
pop
lea
cwtl
jae
pusha
jge
ffreep
cwtl
cmp
add
sarl
in
ljmp
sub
dec
je
sub
cmp
fstpt
in
jne
push
mov
xchg
ret
and
push
call
mov
and
fistpll
scas
dec
and
pop
scas
jbe
xchg
cld
cmc
pop
mov
pop
push
mov
jnp
xchg
aad
cmp
stos
mov
xlat
aas
add
outsb
mov
test
out
dec
pop
xor
lea
in
dec
lea
mov
in
das
push
dec
add
mov
inc
and
movsb
add
imul
xchg
aas
add
stos
jb
inc
int
push
pop
rorl
push
mov
ja
mov
stc
and
pop
dec
scas
insl
shlb
lods
adc
pop
cli
jecxz
mov
mov
jnp
insb
out
hlt
cmp
pop
pop
dec
test
cmp
sbb
cmp
push
dec
aad
in
das
cltd
out
mov
daa
icebp
jnp
fdivrs
push
aas
xor
cmpsb
push
dec
add
xorl
mov
lea
mov
add
shrl
mov
push
add
add
or
or
iret
mov
loope
push
cwtl
cbtw
ljmp
jmp
xor
in
movsb
cwtl
push
sbb
jno
int3
popf
cmp
sbb
test
enter
imul
movsb
loop
loopne
push
aaa
push
jmp
inc
pushf
rcrl
jle
daa
inc
push
jbe
mov
in
or
test
sub
fs
pop
push
cwtl
adc
enter
mov
mov
mov
cli
loopne
movsb
test
pop
mov
sub
xor
adc
xor
inc
idiv
setle
movsl
movsb
dec
leave
mov
or
sub
iret
xorb
pop
fisubrs
inc
inc
adcb
mov
inc
pop
mov
dec
jp
gs
mov
call
aad
jns
in
mov
xchg
pop
sbb
mov
rol
cmpsl
cltd
jae
xlat
jnp
lahf
call
mov
xchg
fidivrs
mov
gs
adc
push
push
mov
lret
jno
mov
ljmp
lods
fwait
jl
and
in
inc
sarl
lock
and
mov
jbe
scas
and
xchg
lods
mov
mov
pop
hlt
push
fwait
pop
adc
dec
mov
pop
or
lret
jno
push
nop
jmp
push
sti
mov
adc
sub
push
mov
inc
std
jne
inc
in
cmp
pop
jl
leave
fs
mov
cmp
xchg
stc
xor
inc
sub
inc
outsb
imull
add
scas
outsb
sti
pop
xor
dec
pusha
out
nopl
ja
movsb
call
es
push
add
mov
push
mov
stc
jbe
adcb
es
xchg
fs
add
jg
push
mov
add
enter
pop
repnz
mov
pop
pop
sbb
sarb
sub
mov
js
lods
ret
popf
scas
scas
outsl
int3
jmp
and
sbb
dec
xor
mov
fnstenv
icebp
adc
inc
sti
pop
repnz
icebp
movsl
cmp
inc
push
hlt
fsub
daa
mov
fists
insb
cmc
popf
push
in
cmp
inc
sbb
aaa
adc
out
mov
stos
mov
cmpsb
jb
ss
es
xlat
sbb
xchg
mov
lods
int
int3
mov
mov
adc
ret
mov
cmp
push
push
push
lea
loopne
and
xchg
shlb
das
aam
lahf
mov
cmpsb
mov
pop
pop
dec
stc
lods
mov
lods
fs
push
push
push
jne
add
pop
jle
mov
mov
aas
xchg
sbb
fdivs
pop
mov
daa
or
loopne
loop
addr16
and
fs
mov
jp
movsb
ss
cli
inc
push
add
fst
mov
ja
data16
add
dec
repz
insb
inc
jmp
into
in
push
lods
jmp
xchg
ficomps
inc
out
out
insb
mov
dec
stos
bound
inc
cmpb
fcomi
xchg
push
cltd
sbb
sbb
aad
push
mov
push
mov
std
push
cmp
out
pop
sarl
push
sub
lahf
stos
sub
sbb
adc
movl
fsubl
lahf
dec
push
push
outsb
cli
inc
lret
fcomps
popa
xor
push
scas
pop
jecxz
push
pusha
cmp
das
mov
sub
repnz
arpl
inc
mov
movsb
dec
mov
mov
sbb
xor
js
and
ja
sbb
out
test
int3
pop
mov
scas
in
addl
push
lods
add
ret
shll
xchg
psllq
dec
add
data16
std
out
js
mov
stos
movsb
mov
pop
mov
inc
mov
pusha
test
in
lret
repz
mov
sarb
sbb
fs
imul
dec
push
jne
andl
xchg
popf
xchg
jbe
xchg
ds
ss
pop
cmp
aad
dec
cmp
mov
rolb
sbb
in
sub
fidivl
loopne
imul
xchg
cmpsw
movsl
mov
jmp
lods
push
add
js
mov
mov
pop
fidivrl
cmp
push
jns
in
outsl
sbb
push
stos
sub
js
stc
aam
data16
and
jg
push
push
mov
mov
mov
js
movsb
xchg
aad
aad
mov
es
push
xchg
das
sub
mov
mov
fwait
ja
sub
adc
imul
add
jae
das
xchg
lods
cmp
mov
jns
pop
adc
rclb
mov
xchg
mov
pushl
lahf
sbb
mov
push
sub
mov
xchg
test
in
dec
xchg
push
jbe
bound
imul
mov
jl
outsb
push
sbb
dec
mov
iret
mov
mov
popa
xor
xchg
push
jno
push
popa
jge
push
cmp
lea
push
pushf
pop
or
outsl
jbe
cmpsb
xor
dec
lock
popf
iret
lods
lcall
leave
xchg
push
push
in
jg
div
out
mov
dec
dec
push
adc
dec
mov
and
add
dec
shlb
test
and
mov
pushf
sbbb
fwait
into
adcb
cwtl
ret
call
push
push
ret
sub
cmp
bound
popf
xchg
xchg
gs
pop
xchg
lock
lret
jecxz
add
cltd
lds
outsl
imul
ja
rclb
enterw
ljmp
insb
jae
xor
fisttpll
fimull
adc
xor
aaa
dec
testl
adc
mov
stos
jnp
clc
bound
loopne
sbb
pop
mov
mov
out
jae
cld
jg
cmp
cwtl
or
fadd
fistpll
pop
shrl
sbb
add
ds
mul
inc
xchg
es
mov
lahf
jns
mov
jnp
popf
mov
mov
dec
imul
xchg
add
and
jle
ret
sbb
or
mov
cwtl
xchg
mov
dec
sub
xor
cmc
test
fisttpll
mov
adc
adc
sti
data16
mov
or
mov
and
insb
xor
mulb
add
fisubs
fcompl
mov
push
aaa
mov
jae
addr16
cmc
ds
xchg
xchg
popa
into
sub
jmp
sub
loop
repz
test
jno
mov
int3
movsb
xchg
aad
jns
or
cmp
sar
push
mov
das
cmpsl
xchg
inc
loop
ljmp
add
das
cmp
xor
pop
nop
jl
sub
jne
inc
movsb
adc
xchg
mov
xlat
scas
jbe
dec
notl
jb
out
inc
sub
adc
sbb
mov
enter
jno
sbb
sub
adc
inc
pop
push
repz
cmc
pop
adc
mov
hlt
inc
shrl
pop
shll
pop
into
shrl
xor
lods
or
insl
mov
int3
jmpw
jecxz
icebp
repz
and
or
ss
push
mov
dec
out
and
add
jge
adc
lods
pop
lods
aad
sbb
adc
movsl
arpl
cmp
mov
dec
lea
and
lret
mov
inc
je
or
sbb
repz
xchg
mov
or
mov
lret
push
int3
mov
dec
es
sbb
fldenv
mov
mov
jbe
sbb
adc
imul
repnz
jno
pop
push
mov
shlb
xchg
dec
pop
push
lds
dec
cmp
inc
xchg
xor
mov
jne
adc
lock
add
mov
or
dec
arpl
add
push
stos
push
negb
js
xor
shlb
fsubs
aad
imul
test
in
lcall
dec
mov
add
cmpsl
or
inc
ret
adc
fisubrs
mov
lret
fsub
jmp
or
cmpsl
loope
jge
test
cmp
test
lds
fs
push
arpl
icebp
push
add
mov
fwait
cmp
movsb
xchg
mov
cli
sbbl
pop
mov
push
and
popa
inc
loope
xor
push
cmp
in
xchg
movsl
sbb
inc
push
es
and
jmp
mov
scas
insl
push
es
cmpsb
call
jge
aas
xchg
xchg
pop
data16
cli
or
xchg
in
mov
xor
out
lahf
push
xchg
pop
cmp
inc
insb
sbb
add
add
lds
lods
cmc
stc
pop
add
out
dec
mov
jge
lds
adc
subl
icebp
pop
mov
pop
mov
pop
xor
shlb
in
sti
shll
repnz
cmc
dec
mov
add
lds
shll
xchg
jb
mov
jmp
dec
jnp
fisttpll
add
dec
loopne
sbb
push
sub
popa
dec
or
mov
xchg
push
cmp
lahf
pop
fisubs
inc
pushf
mov
mov
push
mov
enter
cmpsb
out
sub
sbb
pop
add
mov
icebp
in
mov
fs
push
movsl
mov
insb
sub
test
hlt
cmpsl
test
fists
sbb
ret
add
pop
rcl
push
sbb
pushf
aad
imul
seto
xor
jmp
int3
cmpb
push
shlb
lds
rcrb
aas
lods
outsb
pop
loope
xchg
clc
sti
lods
pmaxub
jbe
repz
push
rclb
xor
push
cmovae
push
pop
movsb
xchg
or
xchg
add
insb
aad
rcr
adc
pop
and
and
lcall
jge
outsl
aam
push
arpl
xchg
out
add
mov
xlat
mov
or
adc
mov
pusha
xor
shll
mov
stos
sahf
pshufw
xchg
push
popf
ljmp
mov
mov
sub
mov
xlat
cmp
cmp
pop
gs
push
sti
lods
out
push
cmc
clc
jb
and
xor
sbb
test
or
dec
lahf
outsl
std
imul
lcall
sub
and
pop
push
and
mov
repnz
push
pop
push
ds
lret
icebp
pop
out
or
ljmp
sub
sub
mov
push
js
mov
sub
push
dec
adc
jmp
in
in
pop
lret
adcl
or
push
xor
inc
pusha
jmp
dec
push
repz
mov
dec
pop
jnp
mov
ss
pop
popl
xchg
addr16
pop
push
mov
fiadds
dec
jbe
fdivrp
adc
lret
insl
mov
sub
lds
and
adc
mov
mov
add
mov
addr16
icebp
clc
inc
mov
push
and
nop
aam
jnp
or
aaa
enter
cmpsl
jmp
repz
inc
js
push
sbb
jge
mov
repz
out
inc
and
jle
push
push
aas
int3
xchg
pop
mov
mov
jmp
inc
gs
pop
mov
xchg
fidivrl
sub
fists
int3
jl
mov
sbb
cmp
cmp
cwtl
iret
mov
xchg
insb
adc
pop
add
ss
jge
mov
shl
adc
prefetch
aam
ljmp
lods
push
mov
addr16
pop
enter
add
int
jo
icebp
push
movsb
subb
and
sbb
pop
jo
lret
dec
mov
aam
loopne
inc
add
mov
es
mov
pop
sbb
or
sti
bound
ljmp
push
cmp
xor
nop
fidivs
lcall
jl
and
rorl
and
fwait
mov
sgdtl
movsb
clc
les
mov
dec
shl
mov
pop
push
pusha
imul
loopne
mov
sbb
and
pushf
xlat
aam
rcrl
sbb
in
xchg
add
cmp
mov
mov
frstor
xor
cmp
mov
pop
sbb
fwait
add
popf
fidivrl
aas
push
mov
sti
rcl
repz
lds
pop
movsl
aas
outsl
push
out
and
push
and
xchg
leave
mov
sub
push
movsb
pop
inc
ss
cmpsl
push
inc
not
inc
orl
mov
inc
cmp
mov
xchg
test
jge
mov
lret
in
por
aaa
push
mov
repz
and
lds
hlt
test
js
lods
jns
dec
andb
add
shrl
ljmp
rolb
and
loopne
pop
inc
int
mov
mov
int
les
push
jo
jo
cmp
sub
mov
push
adc
les
sbb
jne
into
xchg
pop
jae
cmc
int3
in
js
leave
jbe
ss
sub
and
fsubrl
xchg
cmp
xchg
and
fs
xor
jo
std
push
sti
or
inc
insb
push
fimull
mov
in
xchg
pop
cmp
mov
push
jecxz
sub
or
sbb
cmp
adcb
xor
daa
add
or
xchg
mov
mov
ret
outsb
sbb
jmp
call
sbb
xchg
xchg
dec
fisubrs
jl
in
sub
and
pop
imul
dec
pop
lea
imul
sub
xchg
and
es
out
or
enter
sub
pop
inc
aas
xor
pop
dec
imul
push
in
mov
daa
fidivrs
sub
pop
cltd
pop
mov
fiadds
repz
cltd
mov
cld
xchg
cmp
nop
aam
cmc
jne
in
jo
out
and
das
or
dec
add
xchg
outsb
dec
call
dec
cmp
jge
ljmp
mov
stos
dec
push
xchg
cmp
ret
adc
xorb
push
cmp
and
mov
out
mov
gs
mov
push
cltd
imul
cmp
cwtl
mov
mov
cmc
imul
ret
outsb
push
lods
popa
jl
dec
and
insb
je
mov
jp
cmp
outsb
into
sub
mov
scas
xchg
push
sbbb
cltd
mov
mov
mov
movsl
inc
dec
mov
and
clc
sbb
jge
adc
xchg
pop
xor
int3
js
loope
adc
cmpl
mov
lcall
adcb
push
jge
inc
testb
inc
lahf
mov
insb
imul
sti
hlt
sarb
jno
xor
dec
mov
mov
dec
daa
pop
push
dec
lds
add
ror
push
jp
xlat
push
mov
xor
js
cltd
ret
in
nop
pop
gs
scas
cmp
test
pusha
mov
outsl
ss
shl
je
or
sbb
cmp
imul
adc
mov
stos
sub
out
loop
or
out
sbb
mov
pop
cwtl
and
inc
test
mov
outsl
sti
dec
push
call
out
pop
sub
sahf
adc
imul
mov
dec
mov
or
dec
pop
les
les
cli
clc
push
fistpl
inc
lcall
das
lret
sub
je
cmp
dec
or
loopew
pusha
add
scas
and
pop
mov
adc
mov
ja
sarb
mov
xor
cmp
fistps
icebp
test
xchg
shrb
nop
jecxz
arpl
adc
sub
inc
and
shrl
pop
aas
daa
jecxz
jae
mov
xor
and
inc
cld
adc
fisubrs
or
mov
mov
andl
jecxz
adc
jmp
out
and
mov
pop
sbb
cmp
fisttps
nop
xchg
xlat
insl
stos
xchg
ror
popa
aas
xor
call
pop
mov
repz
mov
sub
mov
add
aas
aaa
or
adc
add
adc
xchg
popw
sbb
sbb
out
cs
cmp
xchg
mov
adc
nop
jg
xorb
pop
aaa
sbb
push
add
stos
xor
les
sub
xchg
sbb
mov
lret
outsl
cmpsb
adcb
outsb
repnz
sub
and
sub
repnz
adc
mov
mov
popl
sub
lret
fnstcw
cmp
add
mov
rorl
pop
into
pop
xchg
lret
add
jnp
inc
cli
fstps
pop
rol
in
movsl
and
incl
sbbb
jp
xchg
jecxz
add
das
mov
pop
adc
push
subb
addr16
dec
inc
sbb
lds
push
cltd
cmp
shrl
lret
dec
cmp
inc
mov
jle
sub
sti
out
call
or
les
testl
inc
out
and
sbb
pop
jmp
mov
stos
cmc
ret
push
push
stc
push
imul
dec
negb
aas
pop
loopne
popa
mov
dec
pop
mov
mov
sbb
dec
sbb
mov
push
cltd
inc
ss
jle,pn
js
out
fcoml
add
sbb
mov
mov
jae
outsl
mov
je
cs
and
mov
shl
dec
sarb
cmp
mov
icebp
push
fnstsw
or
inc
cltd
inc
mov
add
adc
hlt
jmp
sbb
sub
jns
sahf
mov
daa
sub
push
push
ss
scas
xchg
stos
adc
xchg
outsl
imul
pop
test
ret
pop
cwtl
aad
jnp
mov
cld
in
dec
sub
mov
jno
jns
das
add
scas
xor
daa
jbe
jne
adc
mov
cmc
sbb
xchg
out
lds
and
inc
nop
jnp
add
xlat
xchg
xchg
push
mov
add
cmp
imul
cwtl
fistpll
out
call
addr16
lods
mov
and
test
imul
pusha
ds
imul
scas
fcmove
mov
mov
scas
mov
xchg
rorb
jne
shll
jne
add
or
test
test
sbb
mov
dec
inc
fwait
sbb
mov
call
cmp
cmp
lret
mov
movsb
gs
shrl
arpl
cmp
clc
push
rcrb
aaa
je
pusha
sub
movsb
xor
mov
stos
sub
add
dec
in
dec
mov
dec
std
inc
adcl
ret
mov
popf
dec
or
push
mov
hlt
call
push
dec
inc
adc
aad
push
mov
cs
pushf
cmp
fucomip
das
mov
dec
das
out
out
imul
dec
ljmp
scas
xchg
adc
cmp
fildl
movsb
sbb
rcll
aaa
loope
ficomps
jb
xchg
and
ja
jno
bnd
scas
mov
or
sub
sbb
into
push
pushf
jne
sub
mov
sbb
insl
inc
outsb
std
in
mov
xchg
xor
bound
stc
cmp
inc
pop
adc
push
cmc
test
jg
outsl
outsl
adc
cs
shlb
cwtl
xor
mov
test
frstor
mov
pop
pop
jge
fcoms
sub
xor
push
rcrb
fs
scas
lock
leave
out
aaa
pop
je
mov
push
or
jns
or
std
mov
push
jnp
push
nop
jno
fldenv
add
push
inc
xor
pop
cltd
gs
push
loop
loope
aam
pop
imul
movsl
popa
inc
pop
hlt
fdivrl
jmp
test
mov
cmpsb
test
jp
and
cmpb
sub
pop
mov
movsb
mov
lea
ficoml
mov
sub
mov
cld
mov
jns
scas
ret
negl
push
in
rcrb
stos
xchg
out
sub
or
jo
mov
add
sbb
rcrb
sbb
shlb
pop
cmp
out
dec
pop
bound
mov
xor
inc
sbb
add
dec
jno
push
scas
mov
leave
sub
movsl
pop
es
mov
sbb
pop
jne
push
mov
int
mov
adc
mov
lret
cmp
sub
mov
pop
iret
sbb
inc
mov
dec
subl
scas
fidivrl
pop
pop
fldl
movsb
hlt
pusha
mov
xlat
push
in
push
and
ja
adc
out
xchg
leave
fsub
in
popf
mov
xchg
sbb
pop
mov
add
jbe
xchg
cmp
mov
cmp
popa
ljmp
jp
push
mov
sub
dec
iret
pushf
jle
bnd
push
mov
aas
xchg
lahf
xchg
mov
xchg
mov
rolb
gs
or
repnz
inc
test
cmpsl
sbb
ja
xchg
push
popf
cmp
sbb
out
cmp
imul
imul
outsb
xlat
outsb
adcb
adc
ret
addr16
aaa
inc
xchg
bnd
stos
mov
test
mov
jbe
and
ljmp
jle
imulb
insl
sbb
add
jb
in
cld
test
lods
adcb
lea
popf
adcl
dec
in
xor
pop
pop
into
shl
mov
repz
test
outsb
adc
jns
sub
cmpsb
inc
roll
icebp
xchg
out
sbb
lret
rcrb
test
pop
mov
mov
out
sbb
test
imull
jmp
mov
in
lods
fistl
addb
pop
xor
pop
lcall
sbb
lods
cli
xlat
std
pop
bound
mov
lods
ds
and
test
scas
or
mov
dec
mov
xor
outsb
loop
dec
or
mov
xor
lods
jnp
cmp
lcall
mov
xor
out
jns
push
push
xchg
pop
scas
and
aaa
scas
out
shll
xchg
inc
test
dec
repz
leave
xor
add
mov
bnd
inc
cli
add
jb
test
sbb
hlt
xlat
pop
jb
jbe
fistpl
dec
data16
adc
mov
adc
xor
pop
xor
shll
stos
or
je
test
popf
cmp
xchg
sbb
mov
adc
xchg
mov
lret
add
push
cli
mov
les
sub
insl
or
decl
jge
cmpsb
sbb
imul
hlt
shrb
jo
mov
ljmp
and
into
mov
mov
mov
sub
xlat
mov
pushf
out
add
mov
lods
and
mov
push
xlat
xchg
pop
cmp
cmp
mov
cmpsl
adc
lods
sub
pop
daa
dec
out
lcall
cmc
sbb
ret
or
push
cmp
insb
mov
mov
mov
cltd
cmp
add
testl
add
push
pusha
xor
shl
pop
push
or
push
sbb
and
xchg
sub
dec
and
ds
test
or
adc
lahf
mov
loop
into
pop
jl
add
mov
aad
iret
cld
rclb
loopne
adc
pop
in
es
or
lahf
inc
pop
mov
lcall
xbegin
call
dec
inc
std
cltd
loope
add
int3
xchg
subl
idivb
xchg
inc
dec
adc
popf
scas
push
and
cmp
or
lods
in
jl
mov
push
pop
xorb
aaa
arpl
mov
outsl
push
mov
std
ss
mov
jl
lret
push
sbb
cmp
jo
add
xor
pop
push
js
adc
mov
cmp
xor
inc
int3
ljmp
test
inc
fxch
das
mov
rol
repnz
mov
clc
mov
jl
repnz
xchg
insl
loope
mov
dec
cmp
lock
stc
sbb
xor
pushl
mov
scas
pop
inc
std
aaa
add
xor
imul
clc
inc
cmp
mov
pop
repz
xchg
push
xor
insl
xchg
fadd
rorb
inc
cmp
aas
popa
stc
and
idivl
or
pop
xor
add
jecxz
iret
lods
pop
mov
cmc
outsb
or
inc
fisubrs
lcall
lock
xor
bound
pop
adc
rolb
cmp
lret
cli
jmp
loop
icebp
dec
add
jb
sub
mov
ret
movsb
mov
push
adc
nop
adc
cmpsl
data16
ret
subb
dec
decl
add
cld
add
cmp
cwtl
and
mov
nop
xchg
test
shr
imul
rolb
int3
sub
bound
sbb
jp
cmp
pop
cld
ds
jb
mov
sub
hlt
mov
mov
jb
lds
jae
rcl
test
xor
je
push
fcmovnu
aad
lds
dec
sbb
andl
mov
inc
cmp
fdiv
or
or
cmp
out
dec
aam
push
lahf
mov
sbb
in
inc
push
jae
inc
jp
dec
inc
xor
dec
cmp
cmp
add
cmp
mov
aad
fisttpl
fwait
adc
mov
std
shrl
cmp
sub
leave
mov
and
pop
adc
ret
adc
stos
sbb
into
je
bound
xadd
dec
adc
sbb
cmp
cmp
popa
pop
push
sbb
dec
jnp,pt
std
jl
adc
sahf
daa
cmp
mov
aaa
cmpl
movb
cmpsl
or
and
sahf
sbb
dec
mul
cli
mov
pop
cld
mov
mov
out
jp
jp
fcomps
div
adc
xchg
mov
fldcw
inc
arpl
jnp
test
and
mov
stc
jbe
mov
scas
adcb
push
cwtl
in
fnstenv
test
jl
jle
outsl
or
das
aaa
dec
push
nop
xor
aaa
sbb
xchg
daa
push
hlt
pop
add
mov
pop
outsl
xor
test
sub
loope
sbbl
xchg
pop
leave
fidivrs
mov
sar
repz
xor
icebp
mov
mov
mov
cli
call
gs
shlb
mov
mov
xor
lahf
fstpl
jne
mov
aam
fmull
xchg
fbld
bound
repz
cwtl
jmp
adc
sub
fcoms
pop
and
lods
jnp
loop
push
sbb
cmp
dec
jo
cmp
xchg
xchg
movsl
lahf
xor
fcoms
loopne
imul
inc
mov
dec
jmp
outsl
pop
or
jecxz
test
scas
pop
into
aas
pop
mov
jge,pn
sbb
nop
gs
sahf
roll
mov
mov
jne
bound
nop
mov
movsl
sub
add
les
and
or
inc
jnp
inc
mov
mov
sub
out
sbb
pushfw
aas
test
or
rorb
adc
xchg
and
pop
xor
cmpsl
sub
loopne
push
push
push
inc
inc
and
xor
jo
sbb
std
sbb
cwtl
pop
xorb
loope
pushf
push
mov
xchg
push
xor
lock
inc
sbb
xchg
sahf
fidivs
stos
push
lahf
enter
mov
push
mov
leave
pop
scas
inc
mov
dec
mov
stos
daa
jp
sbb
pop
imul
add
jae
rcrb
push
shrl
insl
xchg
sub
bndstx
test
push
addl
sub
aas
js
mov
fdivl
inc
jb
stos
mov
cmpsl
movsb
jle
test
push
jp
cmp
mov
push
dec
js
fs
insl
nop
dec
ss
fdivrs
int3
push
push
add
enter
sbb
dec
xchg
push
fsubrs
fmul
movsb
cmpsb
add
push
decl
lods
jo
xchg
and
sub
stc
ret
jl
popa
adc
nop
xor
sbb
bound
push
or
cmpsl
pusha
push
or
data16
stos
fwait
hlt
mov
jbe
pop
cmp
mov
pusha
andw
bound
mov
adc
mov
cmp
lret
adc
jmp
xchg
mov
fdivrl
adc
and
sbb
jbe
int
cli
or
rcrb
mov
faddp
stos
adc
cld
fwait
repnz
sub
lret
jnp
sbb
sti
shll
aad
cmpb
clc
fs
push
daa
mov
mov
call
xchg
stc
jbe
sbb
mov
xchg
mov
arpl
cwtl
scas
or
and
jae
js
das
xor
cmp
and
push
push
test
mov
lcall
stc
and
adc
push
insb
cmp
pop
out
pop
cmpsl
rcrb
stos
shll
dec
popa
loop
push
repnz
push
arpl
subl
mov
cmp
mov
inc
mov
pop
xchg
mov
dec
lret
and
sub
cmp
inc
loope
nop
or
add
mov
lods
jo
fwait
hlt
jl
ret
jbe
push
sbb
or
out
mov
sbb
dec
cmc
pusha
sub
popa
push
insl
mov
repz
out
scas
cmp
out
xchg
std
mov
pop
loopne
xor
cmp
data16
adc
inc
aaa
imul
hlt
add
add
popa
loope
ret
in
repz
cmp
mov
and
sti
push
push
addr16
cmp
mov
mov
shrb
hlt
test
nop
mov
mov
cltd
pusha
jge
outsb
jne
push
iret
out
add
repnz
cmpsb
xchg
out
adc
push
inc
in
iret
fcomps
mov
cwtl
fsub
dec
ret
adc
loope
aad
insb
jae
into
ret
mov
push
push
xchg
sbb
mov
and
sbb
xchg
mov
add
mov
jns
inc
pop
in
loopne
jge
sub
sbb
aad
jnp
out
xorl
lods
push
mov
sbb
popa
shll
pop
add
xlat
mov
loopne
in
sahf
sarb
mov
cmp
fwait
inc
push
push
imul
and
fcompl
outsb
mov
sti
ljmp
daa
clc
popa
mov
arpl
sub
data16
or
cmpsl
es
ret
adc
xor
jno
out
mov
inc
mov
mov
jge
add
adc
icebp
pop
jle
pop
mov
call
and
dec
cmp
jo
fisubrs
xchg
out
jp
test
sub
sbb
inc
sbb
outsb
loope
add
std
inc
roll
inc
jo
sub
mov
inc
scas
imul
mov
sbb
or
and
mov
jle
or
or
dec
jmp
ror
icebp
clc
add
aam
ja
arpl
adc
dec
daa
push
push
ss
cmpsl
call
lock
xchg
fmuls
jne
jnp
mov
sub
shlb
add
sbb
cld
dec
inc
pop
cmp
mov
cmp
mov
jmp
push
jle
mov
add
shrb
xchg
cmp
push
sbb
push
push
mov
rep
cwtl
in
push
xlat
sarl
test
or
xor
push
jae
jnp
jb
out
repnz
out
mov
cmpsl
and
std
sub
je
jge
pop
jne
mov
pushl
sbb
cli
sub
repz
cmp
xchg
hlt
mov
add
sahf
or
sub
add
imul
xchg
mov
pop
add
xchg
sar
mov
mov
mov
mov
mov
push
outsl
xchg
xlat
jmp
stos
sub
inc
lods
aaa
mov
or
gs
ja
pop
cmp
add
in
cs
adc
add
inc
cmpsl
jg
and
mov
lock
mov
xchg
adc
dec
jmp
sbb
fstpt
push
mov
mov
dec
mov
pop
test
mov
and
sub
jmp
or
mov
adc
popf
mov
sub
inc
cmp
outsl
imul
push
pop
rcr
shlb
inc
inc
aaa
xchg
jne
dec
scas
lods
sub
notl
mov
aas
push
jecxz
stos
les
adc
stos
out
and
cmpsb
cwtl
test
out
clc
xlat
out
jmp
xor
inc
adc
jns
movsl
jbe
shll
repnz
outsl
les
testb
call
xor
dec
pop
mov
int3
xchg
pop
sbb
pop
aaa
aam
addl
or
xchg
jbe
xchg
sbb
xor
jno
pop
pop
push
lret
or
lea
xchg
mulb
sbb
pop
shll
xchg
scas
shl
pop
mov
cmp
sbb
push
lds
pop
add
outsb
xchg
in
or
mov
and
mov
jmp
or
sbb
out
addb
jne
in
shr
test
fldcw
lds
push
cli
xor
lods
enter
lahf
pop
aas
jae
push
fbld
loopne
inc
pop
fistps
out
aad
mov
test
push
lock
jnp
xor
stos
lock
icebp
cmp
jge
and
dec
adc
ljmp
fchs
loope
jge
mov
lea
cmc
mov
in
imul
insl
pop
lods
js
dec
enter
cmpsl
ror
xchg
test
outsb
mov
and
mov
lea
sub
or
sbb
lret
mov
lea
aam
xorl
in
jp
add
hlt
imul
out
xchg
sub
repz
lods
iret
sbb
loop
pop
adc
jmp
inc
rolb
lods
xchg
lret
arpl
sbb
cmp
in
sarb
aam
xor
leave
push
pop
push
adc
mov
push
sub
jnp
je
inc
xchg
jno
cmpsl
mov
mov
push
xchg
inc
pop
mov
jl
mov
pop
push
aaa
daa
add
cld
in
repz
ficoml
sbb
push
push
cs
movsl
and
add
bound
push
shrl
mov
imul
and
fdivl
or
inc
lods
mov
xor
jge
mov
xchg
insl
bound
mov
inc
imul
xchg
loope
and
stc
test
xchg
aas
mov
cld
jnp
cmp
ret
lret
push
aad
pop
cwtl
mov
adc
sub
mov
ret
pop
dec
pusha
decl
stos
bound
dec
adcl
insl
aam
lret
das
in
mov
fs
mov
sti
and
add
dec
hlt
sti
aam
inc
aaa
cwtl
jmp
inc
out
sahf
loope
pop
xchg
je
aaa
decb
test
or
hlt
jns
add
pop
inc
push
push
insl
push
xchg
test
es
jo
push
jecxz
int3
pop
popf
call
adc
adcb
out
in
cmp
in
jl
fistpl
rcl
insb
cwtl
inc
sbb
ret
jne
push
xchg
mov
movsl
test
and
sbb
or
mov
sar
jecxz
addr16
popa
in
shlb
test
xor
fldt
ret
arpl
aas
jb
andl
mov
rorl
add
lds
or
add
mov
cmpsl
enterw
mov
jl
mov
stc
pop
outsl
xor
movsb
pop
jg
mov
insl
adc
shrb
sahf
into
and
mov
sub
adc
add
loopne
in
ds
test
rcrl
outsb
mov
dec
clc
loopne
mov
outsb
and
shrb
mov
rclb
andb
loopne
jns
shlb
and
inc
in
mov
xlat
xor
jg
sahf
mov
jns
stc
fisttpl
in
mov
mov
fnstcw
out
hlt
outsb
fisttpll
aaa
sbb
or
popf
sbb
mov
out
sub
hlt
adc
rol
cmp
daa
push
jmp
insl
fcomi
adc
xlat
push
sahf
sbb
cld
mov
sbb
lods
stos
in
mov
ja
fnstsw
sti
div
sbb
inc
xchg
fistpll
mov
inc
lahf
xlat
es
popf
sarb
push
xchg
dec
hlt
rcrl
push
scas
add
inc
popa
or
jmp
dec
aaa
adc
je
les
xor
mov
fdivrs
and
xorb
sbb
sti
gs
push
pop
mov
pop
shlb
and
or
rcrl
cwtl
mov
adc
jb
xchg
lret
xchg
les
sub
jmp
jo
push
imul
mov
ret
mov
scas
shll
roll
xlat
cwtl
rol
mov
or
gs
imul
sub
or
mov
push
bound
pushf
jecxz
and
incl
push
or
aad
iret
xchg
sbb
mov
lods
loop
sub
jae
mov
repz
sarl
andb
cltd
mov
jl
sahf
mov
pop
in
or
test
popf
pop
push
scas
pop
xchg
adc
xor
shlb
fwait
js
mov
sub
inc
js
aas
scas
push
jg
xor
leave
jecxz
aam
and
push
cmpsl
push
pop
mov
in
arpl
mov
fs
lret
pop
sub
pop
lods
fisubrs
adc
bound
and
test
insl
mov
mov
xor
and
or
icebp
bound
xor
loope
imul
repz
ret
divb
hlt
sub
push
imul
xor
xor
inc
adc
adc
xchg
clc
ficoms
gs
test
mov
and
jbe
sahf
xchg
mov
and
and
jnp
fcomps
lret
fwait
or
cmp
sbb
daa
les
aad
mov
push
push
xor
jb
or
cmpsl
mov
cmp
jg
mov
sub
movsl
popa
jae
clc
repnz
lcall
rorl
aaa
insl
inc
out
or
lret
fwait
into
cli
iret
adc
shll
in
add
jne
inc
mov
cs
xchg
adc
mov
fstl
sub
sub
rorb
mov
add
clc
lcall
mov
jns
test
mov
clc
push
mov
fsub
aam
sub
sbb
pop
jae
sbb
hlt
xchg
inc
push
lods
mov
sub
fbstp
pop
push
cs
cmp
pop
out
or
in
jg
notb
xor
or
push
lods
or
push
push
mov
rorb
movsb
loopne
push
mov
sbb
add
jno
in
insb
lods
bts
cmp
and
push
stos
lahf
ds
xor
test
test
leave
jecxz
fcmovne
jnp
dec
dec
aas
gs
inc
add
fwait
sbb
sub
fs
lds
rcr
jnp
aaa
sub
int3
xchg
loop
sbb
js
lret
pop
push
out
inc
pop
dec
fcmovb
lds
xchg
inc
fdivs
movsl
inc
popf
daa
movsb
jbe
push
ss
and
rorl
jns
lock
call
push
loop
dec
sbb
lods
jbe
and
mov
inc
lret
inc
ror
aam
mov
adc
inc
xchg
les
cs
sbb
xchg
xor
gs
push
add
outsb
les
inc
sti
xchg
dec
jb
and
push
mov
push
or
sub
jle
or
fcom
stc
ds
mov
mov
sub
adcl
ljmp
cltd
dec
or
dec
xor
dec
pop
in
mov
jecxz
imul
stc
and
push
fdivrl
push
sbb
out
adc
xorb
and
lds
ret
ljmp
shrl
stc
adc
ret
mov
es
addl
mov
mov
rol
or
mov
cmpsb
xchg
adcl
incl
or
xchg
xlat
lahf
sbb
pop
xchg
fdivrs
sti
je
lods
mov
pop
pop
jg
orb
lock
insl
pop
pop
xor
sarl
movsl
ret
xchg
xor
or
decb
pop
repz
add
mull
aad
cmpsb
adc
mov
movsl
push
test
emms
cli
cld
xchg
dec
jp
enter
sub
lods
or
and
or
jnp
xor
push
push
mov
gs
gs
sti
clc
out
adc
aad
std
adc
and
dec
xchg
mov
movsl
outsb
pushf
loope
jg
cmp
mov
adc
mov
mov
add
sar
inc
dec
mov
cmp
or
nop
or
rcrl
mov
dec
dec
call
mov
aas
push
xlat
xlat
lahf
test
insl
inc
jmp
int3
inc
jl
int3
and
jl,pt
jno
xchg
cmpsl
mov
clc
sub
inc
lret
mov
cmc
pop
fsubrs
insl
pop
out
dec
idivb
sti
mov
sub
xlat
in
repz
sub
fdivp
pop
add
cmp
mov
xchg
daa
cmp
xor
adc
mov
jb
mov
addl
fildl
push
dec
in
push
or
pop
push
call
stos
in
sarb
push
dec
push
mov
bnd
out
fldl
push
push
roll
add
add
cs
sub
jbe
xchg
aad
xchg
dec
pop
idiv
fdivl
aaa
or
lret
shlb
rcl
sub
inc
mov
adc
xchg
dec
jl
mov
rcll
jae
fcoml
sbb
in
xchg
lcall
push
push
sub
mov
push
and
or
ret
stc
add
sub
loop
dec
mov
popf
je
stos
jo
leave
in
cmp
add
dec
out
lcall
loope
xchg
or
out
xchg
into
stos
xchg
pop
daa
fcoms
inc
xchg
sbb
mov
sti
push
sub
mov
ret
repnz
insl
repnz
xchg
test
orb
fdecstp
andb
adc
insl
add
imul
lds
out
jb
or
xchg
mov
aaa
push
jle
lret
nop
add
sbb
test
and
pop
out
jp
mov
jle
mov
out
sub
in
mov
xorb
fwait
shl
adc
cwtl
pop
sub
aas
mov
mov
mov
pop
mov
jle
mov
sti
mov
sub
or
xchg
divl
mov
push
iret
mov
inc
xchg
inc
aas
shll
lods
mov
setle
fisttps
pop
push
xchg
lea
inc
loope
imul
orl
xchg
add
and
xor
pop
and
xor
mov
out
mov
xchg
sub
rcll
add
dec
add
dec
mov
iret
lods
cwtl
loope
pop
mov
pop
inc
add
add
fwait
bound
faddl
movsl
fimuls
cmp
mov
stc
jmp
xlat
add
and
addr16
push
hlt
mov
test
dec
mov
fs
shll
push
inc
sub
movsl
add
idivl
push
adc
insl
in
add
sub
mov
inc
in
mulb
fsubp
pop
sahf
shlb
out
repnz
sub
cmp
pop
dec
imulb
mov
int3
jb
ret
adc
push
sbb
outsl
pop
cmp
lods
decb
incb
loop
sub
xchg
xor
xor
fmul
mov
xchg
hlt
mov
add
loop
stos
movsl
mov
loope
sub
sub
fnstsw
jnp
push
clc
repnz
pop
jl
into
jl
xor
adc
push
push
mov
xchg
and
clc
dec
aas
aaa
add
add
sub
add
sbb
jbe
in
push
cld
inc
imul
subl
inc
dec
sbb
sub
sub
sarb
xchg
ds
jns
out
test
mov
scas
iret
push
xor
xchg
xchg
test
cwtl
pop
lock
dec
cs
js
jle
cmp
cmp
iret
sbb
sbb
imul
pop
js
mov
push
jl
cs
ss
sbb
cld
das
orb
test
imul
push
mov
add
lcall
cs
or
jne
xchg
outsb
imul
inc
das
mov
sarb
lret
cwtl
ja
dec
aam
enter
xlat
rorl
aas
sub
shrb
arpl
push
inc
pusha
or
jno
pop
and
xchg
sbb
inc
fisubl
jecxz
push
xor
mov
add
out
sub
dec
and
adc
pop
cmp
xchg
and
cmp
pop
stos
xchg
cmc
or
or
fcoml
sub
popf
adc
js
outsl
xchg
push
jno
mov
aas
cmp
pop
es
rclb
mov
jmp
lldt
mov
jle
push
mov
insl
daa
push
lock
jle
mov
push
jecxz
mov
shl
cli
arpl
aad
hlt
bound
sbb
jbe
sub
sar
mov
dec
adc
data16
ds
sub
test
push
out
aaa
cmp
inc
loop
cmp
clc
jo
icebp
jp
mov
push
imul
mov
sub
dec
sbb
add
and
or
mov
ljmp
movswl
sahf
pop
shrl
repnz
in
sub
xor
vmread
and
or
cmp
pop
push
mov
sbb
shll
xor
ja
pop
sbb
push
dec
dec
adc
xor
lcall
sbb
lods
sub
cld
testb
aas
mov
scas
sti
testb
dec
movsl
ret
push
push
insl
push
sub
and
xchg
popa
std
cmpsl
adc
xchg
shrb
ret
addl
testl
mov
ror
aas
mov
pop
mov
mov
jnp
aad
add
test
xlat
sbb
mov
push
jno
in
cmp
into
cli
inc
sti
movsl
or
shlb
push
or
sbb
icebp
add
shll
fucomip
cmp
dec
xchg
xchg
jne
push
cmpsb
lret
mov
xchg
xor
clc
test
shrl
shrl
mov
jno
and
leave
test
mov
mov
push
fnstsw
insl
fdivrs
ds
loopne
adc
decb
sbb
xchg
scas
push
in
jnp
inc
jecxz
cmp
mov
mov
hlt
push
mov
pop
sub
xlat
and
xchg
xchg
sbb
xchg
sahf
cmpsb
jmp
scas
fnstsw
sub
dec
scas
repz
mov
sti
in
in
aam
xchg
jg
repnz
push
pop
push
adc
sahf
shlb
inc
xor
pop
jmp
xchg
jbe
fcmovnbe
ds
inc
nop
xchg
cmp
mov
fwait
jo
aad
and
and
das
cs
pop
sub
mov
popf
test
ss
mov
mov
and
aas
mov
dec
lock
insb
repz
inc
cmp
roll
push
add
cmp
or
push
push
mov
adc
fisubrs
xchg
cmpsl
jl
imul
sbb
pop
je
fdivl
push
pop
dec
je
adc
ret
sbb
aaa
cmp
arpl
sub
add
clc
ljmp
jns
adc
daa
dec
call
jae
fstpt
frstor
popf
clc
xchg
shll
and
outsl
push
test
pop
fdiv
mov
or
sbb
and
adc
cmpsb
mov
xor
bound
mov
gs
std
pop
fbld
push
or
pusha
add
mov
repz
lds
add
lds
lods
scas
lahf
ficoms
mov
cltd
jp
ret
cmp
call
mov
notl
clc
dec
and
mov
cmpsl
sbb
pop
je
aaa
test
or
repz
add
xor
fsubrl
mov
lcall
push
cmp
daa
sarb
xchg
popf
xchg
sbb
inc
sahf
test
xchg
or
jnp
lret
mov
pushf
xchg
pop
lret
out
aas
pop
inc
popf
in
out
and
inc
pop
mov
add
xchg
test
sub
xchg
lods
push
pop
inc
inc
xchg
shrl
in
ret
jo
std
xchg
pop
pop
fs
push
add
pusha
jo
fcomi
adc
fiadds
mov
dec
gs
je
add
es
cmp
xlat
mov
lcall
nop
xor
rorb
jg
lahf
push
fnstsw
or
stos
clc
data16
fidivrl
mov
xor
sub
mov
xlat
call
pop
and
add
xlat
fldenv
jae
dec
push
mov
cld
pop
fildll
enter
jns
aaa
xor
sub
xor
mov
sahf
cmc
inc
add
iret
add
dec
mov
nop
addr16
lret
lret
outsl
in
ficoms
out
ret
push
mov
push
adc
add
mov
sti
xor
mov
ja
repz
cmp
stos
aam
jnp
sub
mov
inc
cmp
mov
push
loopne
call
and
and
lods
cmp
mov
fwait
call
fcmovbe
arpl
and
or
cmp
pop
jg
pop
dec
aas
aam
enter
movsb
mov
mov
mov
mov
nop
int
test
adc
mov
out
sbb
add
xlat
cmp
sbb
rcl
xchg
pop
jmp
cmp
not
dec
pop
cmp
loopne
rorb
and
xchg
sub
arpl
xchg
adc
sbb
xor
jmp
xor
pop
sub
mov
jmp
ss
inc
inc
lahf
fldcw
movsl
mov
or
out
push
or
movsb
nop
inc
and
test
out
stos
inc
je
cmpsl
push
mov
mov
sub
sbb
push
mov
ljmp
imul
and
mov
sbb
pusha
arpl
push
hlt
lahf
add
push
jmp
shlb
stc
iret
mov
mov
cmp
dec
dec
or
pusha
gs
daa
enter
dec
jnp
dec
mov
add
das
xchg
inc
mov
jo
js
cmp
xchg
loopne
mov
int
mov
xor
pop
sbb
mov
or
xchg
call
mov
icebp
adc
jle
push
iret
xor
adc
dec
filds
sbb
mov
out
je
xor
add
jmp
or
bound
lahf
aad
push
push
mov
sub
and
iret
mov
sti
sbb
out
in
bound
jle
incl
jle
sahf
int
sbb
jge,pn
mov
clc
cmp
lcall
leave
cmp
stos
outsb
add
test
dec
cmpsb
testl
jne
jne
xchg
cmp
sbb
lret
push
mulb
aam
push
in
push
dec
push
repz
add
jb
cmp
jp
push
pusha
mov
rclb
sub
jg
lret
loope
sub
and
xchg
cwtl
pop
xor
or
mov
cmp
scas
cld
mov
bound
ja
and
add
mov
adc
outsb
movsb
jno
in
imul
mov
pusha
push
sub
nop
push
fldl
sub
jge
mov
stos
loopne
shrb
inc
fwait
mov
test
cmp
sahf
mov
call
push
dec
dec
push
sub
addr16
pop
dec
xchg
sbb
dec
cs
leave
mov
scas
pop
xor
mov
sahf
dec
dec
jne
cmpsb
clc
outsb
pop
lahf
xchg
jg
test
pop
jp
sbb
push
lahf
xor
int3
shrl
dec
in
sti
insl
insl
xchg
dec
out
aad
shlb
int
add
roll
inc
iret
xor
or
orl
xor
std
aas
push
cmp
mov
adc
out
and
dec
and
adc
das
call
loop
icebp
test
cmp
inc
mov
lods
sahf
mov
int
adc
in
mov
jmp
cmp
in
mov
inc
dec
out
jae
decl
inc
add
mov
jmp
xor
mov
cmp
adc
fnstsw
pop
test
jb
mov
pop
or
cmpb
sahf
lret
add
mov
mov
imul
outsb
fists
and
mov
imul
xchg
adc
adc
jecxz
test
push
mov
and
dec
sub
push
sbb
dec
js
jl
pushf
gs
ja
pushf
xchg
and
xor
in
cltd
stos
dec
mov
cmpsb
add
insb
jp
cmp
jecxz
js
daa
or
in
lahf
sub
inc
push
imul
inc
xchg
push
enter
sub
test
in
fimull
repz
popa
js
pop
push
jge
ds
add
push
ljmp
push
adc
push
mov
sti
out
mov
xchg
sub
loop
mov
or
std
push
xchg
inc
lods
stc
add
push
xchg
pop
dec
xchg
gs
rcrl
fs
cmp
xor
lods
aas
add
fldl
adc
xor
xchg
jbe
cmpb
jmp
dec
jp
inc
jbe
xor
adc
jecxz
jmp
pop
aam
cmp
popa
pause
and
outsb
pop
imul
dec
lods
lahf
mov
cmp
mov
cmp
movsl
icebp
push
cmp
mov
dec
cmp
mov
cmp
jl
push
insb
jb
pop
or
mov
xchg
in
push
js
cmc
xchg
xchg
in
test
rcll
or
adc
mov
popf
adc
test
andb
lods
jne
fstl
sub
sub
icebp
xor
outsl
repz
dec
fstpt
jbe
in
iret
pushf
loopne
in
xor
push
sahf
imul
xchg
adcl
mulb
imulb
in
xlat
cmp
or
add
pop
pop
inc
decl
vphaddubw
jecxz
mov
lret
and
cld
inc
jne
dec
xorb
xchg
loope
lock
in
test
pop
popa
in
iret
ficomps
pop
xchg
fadd
out
sbb
dec
lds
jecxz
arpl
add
sbb
test
ss
pop
push
out
sbb
fisubrs
dec
loopne
sbb
aaa
into
jns
in
into
test
or
sbb
std
pop
add
cmpsl
or
fbld
out
pop
sti
and
jns
pushf
cmc
cwtl
hlt
sub
int3
inc
mov
stos
mov
int
mov
dec
lds
sbb
sti
and
mov
lods
sub
decb
lret
pop
sub
mov
test
sahf
fists
mov
daa
std
cmp
lods
jbe
rcl
icebp
lds
lret
jmp
aam
cmp
dec
and
in
or
mov
aad
mov
pop
cmpb
mov
mov
mov
adc
adc
es
inc
sub
in
adc
sbb
push
sbb
mov
aam
std
pop
aaa
out
mov
mov
mov
mov
pop
inc
sbb
clc
js
and
popa
test
xor
push
ja
addr16
dec
pop
cmp
xchg
addl
jno
into
jno
test
cwtl
lahf
arpl
adc
cmpsl
aaa
jp
loope
cmp
jbe
insl
or
sub
sbb
cmpsb
fwait
push
fsts
mov
xchg
dec
xchg
xor
mov
adc
sbb
sub
push
sbb
enter
hlt
xstore-rng
cmpsl
les
movsb
test
xchg
mov
insl
ret
enter
mov
xchg
and
shl
or
test
or
xchg
xchg
out
cmp
das
std
inc
ss
icebp
gs
adc
sti
aad
sbb
out
mov
mov
add
test
cmpsb
xor
cmpsb
insb
shll
mov
jle
pop
pop
arpl
imul
mull
xchg
cmp
inc
int3
aaa
insl
mov
mov
jmp
inc
jmp
mov
rcl
dec
ss
jle
cmp
fnsave
cmp
scas
out
aas
sub
bound
fcompl
cltd
jp
mov
pop
cwtl
rcll
jle
cli
or
ds
inc
dec
mov
sub
cmp
pop
mov
xchg
sarb
jns
imul
mov
loope
xchg
jnp
lret
lock
std
xchg
or
js
loopne
mov
idivw
clc
inc
or
insl
loope
jmp
mov
dec
jns
push
dec
popa
xchg
sbb
pop
push
es
mov
cli
jl
or
inc
push
jo
adc
cmpsl
enter
rcrl
xchg
fldcw
inc
fdivl
mov
xchg
push
icebp
shlb
rcll
clc
xor
jl
mov
rclb
jge
inc
outsb
pop
adc
jno
enter
popf
out
cs
or
lret
mov
adc
mov
sub
cwtl
jmp
in
mov
mov
iret
sub
cmp
gs
pop
jp
lods
add
xchg
cs
sub
adc
stc
cmp
mov
sbb
sahf
jg
lcall
sub
pop
lods
cli
push
mov
xor
sub
aad
stos
or
pop
push
fwait
sbb
dec
scas
out
test
outsl
lcall
testb
add
fstl
loopne
lock
sub
add
jmp
mov
or
lret
lea
cmp
jae
test
inc
pop
push
loop
je
movsl
loop
and
sbb
adc
out
imul
popf
leave
xlat
shrl
jl
pop
shll
pop
and
out
nop
loop
aas
not
sub
push
popa
mov
test
sbb
xchg
or
test
sbb
adcl
inc
scas
mov
subl
push
movsb
mov
xchg
xor
das
clc
orl
hlt
push
mov
mov
jg
cwtl
test
jg
cltd
lods
incl
aas
jmp
test
fldcw
shlb
int
pushf
or
mov
jbe
adc
imulb
dec
adc
dec
cmp
pop
insl
cltd
pop
imul
or
cmpsb
gs
test
cmp
push
iret
inc
pop
xchg
mov
xchg
xchg
pop
fwait
dec
xchg
and
and
cli
aas
add
or
insl
lret
xor
enter
adc
xchg
cli
gs
psrad
repz
out
lcall
dec
imul
pop
or
xchg
push
jns
stc
mov
flds
inc
cmp
orl
rol
dec
inc
push
in
cmp
push
les
arpl
mov
pop
into
shl
inc
push
fcomps
jnp
hlt
loope
push
jb
sbb
jo
rorl
sub
cmp
aaa
es
test
inc
aad
les
test
mov
jg
das
and
test
or
push
loopne
push
pcmpgtb
rolb
stc
pusha
xor
rorl
movsl
into
push
or
jbe
pusha
and
imul
daa
sub
lahf
mov
and
imul
jne
lret
xchg
push
mov
xchg
lret
pop
mov
push
xchg
sub
fildll
scas
pushf
jnp
cmp
sub
out
jnp
mov
insl
mov
mov
in
cmp
and
or
ficoms
mov
mov
pop
push
jno
daa
into
stos
pop
stc
pop
sbb
fnstenv
subb
aad
adc
fwait
push
mov
cmpsb
mov
negl
rol
pop
push
adc
in
scas
xor
cld
daa
jb
jbe,pt
dec
fistl
aad
popa
pop
dec
outsb
ss
lahf
negb
mov
bound
sbb
mov
ja
or
inc
stos
mov
fs
out
and
mov
imul
and
fwait
test
cmp
cmp
mov
dec
mov
adc
inc
imul
mov
in
fs
dec
jecxz
inc
stc
push
xchg
and
and
jge
mov
sbb
mov
cmp
daa
adc
insl
cmpsb
sbb
cmpl
bound
xor
jbe
aad
mov
inc
inc
dec
pushf
xchg
lock
cld
in
into
lcall
enter
xor
mov
repz
xlat
xchg
ljmp
aam
inc
xor
aad
mov
pusha
aaa
sub
xlat
lret
add
cmp
push
adc
into
sub
ficoms
jns
in
jnp
pop
xchg
jg
les
jmp
xchg
push
pusha
inc
mov
push
fiadds
nop
and
mov
inc
aas
test
mov
xchg
insb
dec
push
xor
add
ljmp
cmp
pusha
sahf
cmp
lret
xchg
jne
cltd
ret
mov
cmp
stc
popa
sub
xchg
fisubrs
adc
push
jno
pop
push
stc
fstpt
or
cld
shll
cmpb
dec
or
arpl
add
in
fnstcw
outsb
inc
cmp
xchg
mov
mov
inc
shll
push
imul
mov
mov
lret
push
adc
or
lret
ret
clc
cld
push
mov
or
shrl
mov
push
mov
mov
das
stos
mov
pushf
adc
xchg
push
xchg
shrb
popf
inc
jno
xchg
jnp
adc
add
repz
cltd
xchg
aad
mov
int3
pop
pop
sahf
cmp
sarb
and
iret
fwait
sbb
fsubrs
hlt
insl
sahf
js
idivl
cwtl
lock
inc
call
mov
xor
gs
test
dec
dec
lods
sub
rorb
or
movsb
or
mov
stos
cltd
sahf
dec
imul
add
call
mov
shr
cs
mov
out
push
inc
outsb
leave
inc
lahf
pushl
mov
addr16
hlt
mov
loope
repnz
into
movb
sbb
cmp
rcl
pop
mov
fisttpll
mov
fbstp
aas
jno
ja
in
cs
dec
push
cmpunordps
lock
sbb
and
lds
push
jmp
imul
or
ret
xchg
pop
dec
jge
aam
incb
push
jae
aam
mov
mov
push
hlt
inc
mov
pop
sub
pop
inc
add
or
pop
loop
aaa
dec
jns
aas
inc
mov
in
inc
mov
mov
mov
dec
cmpsb
sbb
aad
sar
sub
into
xchg
mov
pop
aad
push
mov
rcl
cli
pop
adc
pop
addl
inc
jnp
inc
push
xchg
cmc
movsb
and
mov
or
xor
xchg
or
inc
pop
and
in
bndldx
mov
je
xor
inc
xchg
lahf
xchg
leave
inc
mov
cmp
fldcw
test
jo
loopne
sbb
dec
pop
mov
dec
add
data16
cmp
fidivs
mov
jmp
pop
data16
pop
mov
mov
outsb
mov
mov
xlat
cmp
sub
test
mov
mov
addr16
jns
in
mov
out
daa
iret
fstps
mov
sbb
cmpsl
mov
and
imul
push
push
sti
add
adc
std
mov
lds
xlat
es
les
lahf
sti
out
lds
in
ror
into
iret
shrl
test
or
xor
icebp
and
cmc
push
rcrl
lea
stos
sarl
mov
or
daa
scas
stc
test
mov
push
sbb
sub
jmp
lock
cmp
xor
xorl
cli
fstl
stc
in
cmpsb
pop
cwtl
and
inc
xchg
sub
xor
xchg
pop
mov
imul
mov
imul
inc
into
sarl
dec
sbb
xlat
jnp
ds
push
sub
add
bound
add
inc
nop
ret
sahf
or
sbb
clc
lcall
std
loop
cltd
mov
incb
and
ret
testb
sub
push
dec
iret
ss
inc
add
sub
subb
sti
out
dec
inc
add
push
push
cs
pop
jo
or
jns
lret
sub
aas
mov
xchg
sbb
cmp
out
mov
dec
ss
cmp
cmp
loopne
sbb
xchg
and
mov
dec
aaa
xchg
das
push
push
stc
push
sub
jecxz
in
es
dec
mov
mov
js
cmpsl
mov
mov
push
fists
jmp
into
cmovg
das
hlt
sti
inc
lret
lret
push
movsl
push
pop
mov
or
jb
imul
add
and
lahf
aam
repz
dec
insl
push
test
push
xchg
test
addb
jle
mov
xchg
jno
push
add
sub
shr
jecxz
pop
pop
xchg
dec
mov
pop
sub
dec
jl
mov
insl
dec
lret
dec
dec
rolb
or
mov
pop
cmpsl
repnz
jno
outsl
mov
push
ret
xor
shrb
hlt
jecxz
fcoml
cmp
imul
mov
das
repz
dec
push
incl
push
outsb
inc
call
mov
std
iret
lods
jnp
nop
mov
lret
mov
sahf
inc
lahf
syscall
cmpsb
fcompl
xlat
mov
adc
xor
xlat
push
adc
arpl
fistl
cmp
mov
and
push
subl
dec
aaa
mov
xchg
shrb
mov
mov
or
dec
loopne
gs
imul
shr
gs
jno
inc
dec
jg
mov
sub
cmp
jle
push
aad
pop
xor
push
xor
add
scas
dec
out
mov
loop
adc
pop
cmpsl
xor
outsb
mov
lods
cmp
test
mov
inc
xor
mov
jmp
fwait
lret
add
arpl
pusha
and
cs
jbe
hlt
addr16
sbbl
dec
scas
cmc
jg
cmpsl
aam
es
pop
cmp
imul
dec
fs
fisubrl
sub
xor
test
and
clc
aas
lahf
outsb
je
pop
clc
std
cmp
xchg
pop
mov
add
jo
jb
repz
repnz
mov
cmpsl
js
cmc
add
mov
orl
insb
jo
adc
push
mov
xor
xor
mov
gs
mov
cmp
or
insl
xchg
jo
xchg
mov
ja
jp
loopne
xchg
dec
into
ds
jecxz
loopne
loop
pusha
mov
call
inc
into
jno
mov
testl
push
xor
cmp
fistl
pop
inc
xchg
icebp
cmc
mov
pop
mulb
in
cmpsl
aam
in
icebp
mull
sub
into
mov
ljmp
icebp
call
mov
pushaw
xchg
mov
adc
shrl
shrb
mov
pushf
mov
xor
stc
mov
test
loopne
sahf
xor
hlt
mov
dec
add
imul
lods
icebp
pushf
push
push
ss
lods
adc
and
out
hlt
cltd
cs
adc
in
pop
jae
scas
fistpll
out
sbb
outsl
add
xchg
scas
or
je
imul
sbb
mov
pop
cli
out
rcrl
lods
into
xor
or
sbb
xchg
dec
cwtl
bound
mov
repz
shlb
imul
jne
div
lret
es
cs
es
test
or
out
or
negl
repnz
jecxz
in
mov
fisttpll
inc
and
ds
into
pop
xchg
and
xor
repnz
sub
ljmp
mov
and
rorb
ss
mov
dec
fnstenv
mov
sbb
loope
imull
jo
stos
push
jp
mov
mov
jge
lret
jmp
inc
cmp
mov
aad
jns
cmpsl
inc
sbb
pop
fsubrs
mov
lcall
bound
add
add
ret
dec
loope
xor
fmuls
lock
cld
push
insb
pop
mov
cmp
mov
mov
fnsave
and
leave
xchg
adc
fwait
mov
push
test
and
inc
jl
les
adc
cmp
ret
data16
or
xchg
repnz
cwtl
push
call
pop
or
stos
cli
fs
push
pop
hlt
ds
rol
not
pop
outsl
jne
out
cwtl
mull
add
clc
loop
cmp
fstl
scas
sbb
popa
jle
jmp
xchg
popa
mov
dec
inc
inc
xchg
and
fadds
jae
sbb
mov
cmp
xor
incb
hlt
add
cmpsl
es
hlt
mov
sbb
add
scas
xor
ljmp
lea
jb
mulb
rclb
or
imul
ja
stc
lock
imul
sbb
inc
popa
das
aaa
stos
addl
loopne
push
pop
rcll
jo
mov
stos
roll
jge
mov
stos
fidivrs
shll
sub
cmp
scas
push
pop
adc
jp
out
call
cmpsl
mov
stc
loop
fdivl
addb
adc
mov
imul
cmp
into
mov
cld
jae
push
sbb
adcl
mov
jae
vrsqrtps
in
adc
iret
xchg
popa
inc
and
mov
dec
or
mov
cmp
scas
cs
and
push
jo
or
lcall
or
sbb
jg
mov
sbb
sub
push
stos
mov
adc
rclb
adc
sar
rorb
mov
xchg
hlt
sub
mov
mov
nop
icebp
lcall
cli
nop
sub
ret
rcrl
pop
mov
or
sbb
test
xchg
xchg
scas
enter
pop
movsb
ficoms
inc
fwait
int3
add
insb
push
shll
pushf
sahf
push
adc
cmp
push
jle
test
rolb
and
push
jne
xorb
mov
xor
add
push
or
pusha
add
jmp
testb
mov
cmp
popa
sub
add
or
daa
cmpsb
repz
xchg
jo
xchg
out
adc
push
add
les
add
or
popa
sbb
inc
movd
rolb
out
push
es
jmp
pop
cmp
or
dec
adc
movsl
push
xchg
or
popl
and
fldl
cmpsl
and
jmp
xor
mov
xor
dec
out
inc
jge
idiv
mov
sti
jnp
lret
add
call
imul
pop
or
mov
imul
jle
mov
xchg
and
aaa
in
pop
jb
pop
faddl
and
mov
cs
fcmovb
lahf
fidivrs
call
jno
pop
dec
jae
jns
lods
cmp
imul
push
jge
sbb
jo
lret
sbb
int
cmpsl
push
in
cmp
jb
inc
jnp
adc
inc
mov
std
xchg
leave
in
jecxz
xchg
xchg
pop
mov
jle
fisubrs
in
sub
push
leave
push
addb
test
imul
movsb
push
inc
stc
push
pusha
jb
xlat
fisubrs
xchg
lods
pop
lock
subb
push
dec
push
mov
mov
add
xor
pop
jmp
xchg
jp
enter
imul
sbb
mov
sbb
inc
iret
stc
push
addl
scas
mov
sub
sub
arpl
pusha
icebp
enter
jno
jp
sti
fcoml
xor
sub
dec
add
aaa
adc
inc
jmp
jae
jl
push
adc
lahf
inc
roll
mov
fwait
sbb
ficoms
xchg
or
fnstenv
ja
mov
out
dec
popaw
sub
lock
jo
mov
mov
pop
jg
jmp
pop
test
orb
dec
loopw
fs
cmp
or
mov
fcoml
jecxz
shlb
leave
adc
mov
mov
lock
stos
dec
sbb
cmp
sub
or
sub
fs
adc
cmpsb
fucomp
lods
mov
movsl
jl
xchg
cld
mov
mov
add
lods
testl
jo
lods
or
loope
sbb
adc
imul
imul
shl
push
out
movsb
out
lcall
dec
loope
sub
imul
push
lea
out
insb
popf
push
mov
xor
pop
aam
dec
jle
pop
sbb
inc
outsb
push
lods
cs
out
or
jns
adc
xlat
ds
mov
ljmp
sbb
push
mov
mov
mov
stos
enter
or
fmuls
sub
push
les
insl
out
test
sti
jp
adc
mov
inc
in
sub
in
enter
or
imul
pop
hlt
lahf
ljmp
movsb
cmpsl
pop
int3
and
push
xchg
push
sub
mov
pop
imul
cwtl
in
inc
mull
loope
pop
cmpsb
mov
in
stos
je
jbe
cwtl
jbe
push
fcompl
add
xchg
or
mov
inc
shl
jbe
jle
cwtl
aad
add
mov
adc
es
adc
cmp
dec
mov
and
jmp
adc
ret
movsl
std
ja
jne
jmp
js
data16
aad
inc
lret
add
in
je
sub
jmp
cmpsb
lock
mov
sbb
xchg
xchg
push
hlt
inc
mov
stos
shrl
and
xor
sbb
mov
arpl
mov
test
xor
sbb
insb
testl
inc
mov
push
xor
mov
std
in
jl
sbb
arpl
mov
inc
lret
shll
mov
inc
test
icebp
fdivrl
scas
xchg
aam
cmp
fsubr
enter
mov
xlat
mov
sub
test
imulb
jmp
sarl
mov
push
mov
movsb
sbb
jne
aas
ss
jle
fdivs
sahf
mov
or
xor
or
mov
sub
aas
cmpsl
sub
inc
push
add
movsl
fwait
data16
cli
repz
sbb
mov
xchg
inc
xchg
mov
pop
shlb
unpcklps
ret
xchg
shlb
lahf
and
inc
xchg
mov
outsl
jb
push
jnp
fwait
xorl
dec
adc
inc
dec
test
xchg
mov
and
int
pop
outsb
xchg
ja
mov
addr16
sbb
fimuls
sbb
shrl
stos
xor
mov
cld
scas
cmp
lret
add
orl
mov
fcompl
xor
dec
mov
leave
dec
adc
and
mov
popa
in
int3
stc
mov
iret
push
movsl
xlat
cmp
loop
add
cmp
imul
or
cmpsl
mov
push
lcall
sub
fdivr
cli
mov
daa
xchg
xchg
xchg
test
xor
push
scas
cs
jno
jns
popa
push
nop
je
push
jecxz
mov
arpl
mov
and
aas
sub
fisubl
dec
adc
loopne
repnz
hlt
sbb
in
xchg
push
adc
adcb
mov
mov
xchg
xchg
cmc
dec
cmp
filds
jnp
push
push
test
or
or
mov
xchg
mov
jno
xchg
popa
movsb
sbb
lock
out
cs
adc
cmp
mov
enter
test
andb
xor
popf
out
rclb
lds
mov
adc
cli
rcr
xchg
mov
outsl
out
in
int
cmp
sub
cwtl
cmc
xor
stos
sbb
dec
and
mov
jb
dec
aas
sbbl
jg
xor
mov
lcall
std
lods
in
ret
rcrl
pop
inc
jns
xor
and
xchg
cmp
mov
shrl
mov
or
sub
push
dec
sub
sub
jl
ret
in
inc
push
pop
cmpsb
jmp
stc
test
fwait
add
int
loop
adc
xor
nop
into
out
mov
dec
jo
push
icebp
mov
adc
cmp
inc
mov
mov
pop
aaa
mov
outsb
fwait
cmpl
jne
lods
lock
ds
sbb
cli
xchg
pop
adc
pop
decb
adc
sbbb
fs
xchg
pop
add
xchg
mov
lret
pop
enter
cmp
sbb
mov
pop
out
jae
jmp
scas
mov
fidivs
sbb
imul
adc
push
out
les
out
adc
or
out
inc
jnp
push
clc
xchg
in
push
mov
or
push
fs
xchg
inc
inc
xor
adc
push
jge
leave
mov
xor
insb
cmpsl
pop
out
cs
sub
fs
imul
aaa
out
shll
or
lods
dec
pop
imul
and
jmp
xchg
mov
movsb
sti
gs
in
mov
mov
and
shlb
jne
cmp
scas
and
dec
mov
adc
stos
pop
sbb
test
inc
and
inc
dec
add
cmc
outsl
dec
arpl
inc
jne
sbb
mov
sub
lods
popa
adc
xor
pop
pop
push
lcall
push
push
mull
adc
js
in
inc
mov
shrb
dec
insb
pop
ja
pop
mov
setp
cld
pop
and
add
adc
or
int
leave
in
sub
leave
rcr
das
icebp
insb
sub
decb
sub
add
lods
lea
ss
push
add
fst
inc
cmp
or
or
sbb
mov
js
push
lea
cmpsb
push
push
sub
pop
sub
neg
pop
daa
icebp
out
inc
dec
pop
addr16
cli
int
in
jbe
xchg
cmpsb
std
sbb
fisubrs
mov
push
nop
pusha
pop
push
jbe
decl
pop
test
and
push
lods
idivl
push
pop
insl
pushf
mov
cmp
popf
and
xlat
cmpsb
in
jno
pop
push
lahf
test
xor
and
movsl
daa
xchg
jecxz
pusha
mov
push
ljmp
addr16
iret
stos
fcmovnbe
push
pusha
dec
xchg
pmaddwd
ljmp
sti
lods
pop
jns
decl
xchg
pop
jnp
lods
xchg
xor
repz
outsl
jns
mov
push
fsubl
loope
insb
mov
test
lea
inc
mov
fbstp
push
dec
fsts
sub
scas
ror
hlt
pop
jmp
mov
mov
scas
jns
imul
pop
popf
and
adc
and
jmp
jmp
in
aas
mov
pop
sub
add
xor
push
std
dec
jecxz
push
sub
mov
jo
fldl
movsb
sbb
imul
fimull
sti
les
or
mov
mov
andl
mov
fsts
cmp
push
adc
rclb
sbbl
jns
xchg
cwtl
mov
push
mov
fistps
jg
inc
lds
int
sbb
fidivrs
xor
je
lret
adcl
fldl
les
jl
ret
and
add
shrl
mov
test
ret
jl
push
sarb
xchg
adc
scas
sbb
and
push
push
icebp
loop
fildl
js
arpl
sbb
stos
and
push
fwait
inc
bswap
xlat
jne
ret
loopne
push
cmp
ret
or
adc
ret
stos
jle
pop
scas
mov
dec
add
xlat
in
in
or
ja
mov
cmp
mov
outsb
or
xlat
sahf
cwtl
dec
mov
subb
or
out
dec
stc
pop
xor
cmp
pop
outsb
aas
loopne
lret
scas
jnp
adc
cmc
ss
data16
inc
adc
xchg
addr16
xchg
push
cmp
pop
rclb
es
or
dec
inc
xchg
sub
arpl
jl
or
cmpl
push
add
sub
jo
in
testb
add
adc
daa
or
pusha
xchg
clc
mov
inc
into
or
cmpsl
push
sub
bound
mov
and
xchg
push
aad
bound
out
fwait
push
mov
insb
es
outsb
sub
push
xor
rol
add
dec
fnstenv
es
pop
mov
sti
adcl
mov
fstl
outsb
shrl
imul
pop
mov
shlb
cmc
imul
inc
inc
sub
inc
out
cltd
add
aad
hlt
sub
loop
data16
mov
pop
hlt
shr
add
iret
inc
loope
sti
adc
add
and
xchg
mov
push
test
ja
push
movsb
test
pop
ret
cmp
jns
cmp
in
or
and
ss
push
inc
filds
sub
sbb
mov
mov
cltd
push
sbb
mov
popa
data16
inc
mov
fs
insb
inc
and
xor
dec
js
in
push
or
bswap
rorl
fistpl
mov
arpl
inc
enter
mov
mov
fstpt
xchg
sub
stos
cmp
sub
push
int3
jb
cli
sub
jg
imul
pop
push
push
lahf
mov
xor
jg
outsl
pop
arpl
and
jmp
jp
in
inc
mov
fwait
mov
xchg
lock
fwait
push
mov
test
leave
leave
mov
or
test
bound
inc
jmp
jae
ret
mov
gs
sbb
mov
push
xor
xchg
pop
outsb
mov
mov
out
outsb
fistl
inc
lret
pop
xchg
lea
and
fwait
insl
jbe
es
jb
dec
inc
repnz
push
jge
mov
ret
sbb
cli
js
xorb
das
loopne
add
push
sub
mov
out
inc
fildl
hlt
jecxz
mov
rcll
rorb
mov
rorl
jmp
pop
push
adcl
mov
or
clc
loop
mov
dec
mov
repz
inc
orb
mov
je
shll
out
test
imul
push
sub
fcomip
fisubrl
jg
push
adc
inc
cmp
add
adc
sti
pop
xor
sbb
shrb
jmp
call
stc
xor
push
pop
lahf
cmp
adc
or
test
dec
or
inc
data16
cli
negl
gs
jno
in
xchg
aad
cmc
cmp
int
mov
push
hlt
cmpb
pop
cmp
bound
popa
cltd
or
sahf
scas
cmc
daa
hlt
stos
fmull
leave
mov
fidivrs
mov
lods
mov
xchg
mov
push
test
cmpl
and
adc
popa
add
mov
mov
fwait
sbb
mov
fdivl
int3
gs
cwtl
and
dec
aam
int3
out
imul
cmp
or
jb
pcmpgtw
loop
lret
inc
pushf
xchg
sar
jo
add
sub
lods
sbb
hlt
in
inc
addr16
pop
sbb
iret
or
xchg
add
jmp
in
jg
and
sub
ljmp
insb
inc
icebp
and
enter
pop
push
pop
mov
ds
inc
push
jne
lcall
adc
repnz
adcb
pop
and
imul
popa
mov
jmp
sbb
int3
and
xchg
sub
out
imul
loop
mov
fadds
cli
movsb
add
or
adc
out
out
inc
mov
inc
std
add
rcrl
pop
aas
sub
push
mov
sbbl
mov
loopne
out
inc
fbstp
loopne
and
pop
dec
push
sbb
dec
xor
mov
jb
cmp
std
cmpsb
into
pop
pop
add
mov
rorl
testl
sub
push
ror
pop
movsl
pusha
fs
cltd
adc
lahf
jb
jns
or
add
dec
hlt
rorb
and
jge
and
sahf
fdivrs
sub
inc
xor
xor
mov
or
sbb
lock
loope
jp
fnsetpm(287
xchg
lea
int
inc
mov
in
pop
dec
inc
mov
sarl
pop
xlat
jge
imul
js
pop
aam
ror
xor
fistpll
scas
push
insl
sub
test
sub
sti
addr16
orw
lock
cmpsb
lret
sub
xor
lret
add
push
repnz
les
pushf
stos
mov
add
push
shr
xchg
or
jp
cli
or
jbe
sahf
pop
aam
insb
cmp
xor
cmp
pop
lods
inc
ljmp
aam
lds
jle
fcompl
mov
les
jne
pop
mov
and
sub
jge
xchg
mov
pop
rcr
sub
jae
mov
or
mov
leave
dec
dec
jne
into
and
xor
jo
sbb
and
mov
xlat
les
or
in
fnstenv
in
adc
and
cmc
les
cwtl
mov
mov
jge
push
sarb
push
fs
xor
and
pop
dec
mov
sub
std
jmp
std
loope
popa
dec
jbe
lret
adc
push
push
mov
sbb
pop
cmp
rcll
lcall
adc
sbb
out
movsb
push
addr16
xchg
cmpsb
sbb
ret
mov
fcmovne
fists
jns
sub
insb
dec
xchg
sub
outsb
stc
dec
xor
out
in
enter
cmp
pop
mov
das
daa
adc
inc
stc
fs
jo
xor
mov
pop
pop
sarb
jecxz
popf
test
ret
movsl
cmp
sbb
xchg
mov
cli
mov
ficompl
xchg
inc
pop
sbb
aad
stos
adc
sahf
popa
ret
rolb
loop
scas
sbb
arpl
adc
dec
stos
xor
inc
cmc
cmpsb
call
mov
jg
mov
loopne
jg
inc
jno
addr16
or
sar
jmp
out
aaa
sbb
das
fs
idivb
mov
jecxz
cmpsl
loope
in
mov
fdivs
push
sub
adc
xchg
ss
xchg
mov
rolb
cmp
mov
sub
lods
or
or
add
mov
fs
das
sub
stc
aam
sbb
fcmovbe
adc
pop
xchg
sub
ds
sub
inc
in
dec
or
mov
adc
push
lcall
aam
inc
test
cmc
cvtdq2ps
inc
dec
xchg
das
div
mov
push
fldcw
xchg
fldenv
rcrl
xorb
dec
or
xor
sbb
dec
sub
je
dec
in
dec
add
ja
loopne
push
out
nop
out
ret
js
xor
xlat
mov
int
jl
ficoms
test
movl
jnp
mov
ret
hlt
push
cmp
cmp
or
stc
into
cltd
lret
rcrb
xchg
push
fcomip
hlt
sahf
push
mov
mov
cmp
xlat
rcrb
in
xchg
in
and
push
cmc
pop
shl
imul
sbb
pinsrw
or
call
pop
mov
aam
and
aam
in
cmp
movsb
jno
out
ljmp
pop
fidivl
pop
loop
xor
jae
jge
cmp
lcall
mov
sbb
mov
nop
push
rcl
sbb
cmp
adc
cmp
ja
jmp
sub
adc
cmp
mov
addl
bswap
jl
es
jl
cs
das
push
ret
mov
roll
mov
and
add
fs
into
xor
sahf
xchg
ret
push
inc
inc
add
lahf
jmp
hlt
pop
mov
lods
xchg
das
cltd
popf
xchg
push
shlb
iret
ds
mov
daa
adc
add
cmpsb
gs
mov
and
cs
lds
and
stos
out
pop
and
int3
test
test
sub
aas
rorb
into
dec
sub
fsub
xchg
pop
out
xchg
flds
sub
adc
push
cmp
ljmp
mov
and
xchg
outsb
mov
add
addb
inc
mov
lock
mov
es
pop
cmpl
dec
movsl
lret
in
mov
dec
and
sbb
mov
rcll
push
es
mov
aas
in
add
pop
dec
mov
hlt
xchg
cld
ds
push
roll
or
int3
imul
mov
xchg
outsl
stos
pop
add
in
xor
stos
cmpsb
dec
aas
nop
sub
mov
outsb
and
fisubs
mov
pop
adc
rorl
cli
jp
inc
mov
mov
push
lock
mov
aaa
cli
adcb
push
cltd
inc
mov
out
pop
lock
cld
inc
imul
scas
xchg
nop
cmp
add
inc
mov
mov
or
mov
cmpsb
jl
fwait
jl
mov
fisubrl
nop
mov
dec
pop
es
lods
cwtl
mov
mov
xor
orl
xor
sbb
ficoml
mov
ret
or
std
movsb
adc
daa
icebp
or
iret
mov
pusha
jge
mov
std
nop
addr16
je
lods
sbb
cwtl
add
xchg
pop
sbb
mov
cmp
dec
lods
fwait
xor
cmp
pop
pop
adc
testl
xor
inc
mov
fiadds
xor
fadds
inc
testb
sbb
jmp
mov
jb
ret
out
nop
lahf
test
add
mov
mov
push
xchg
sbb
aam
repnz
cmp
mov
popa
push
sarl
lret
fwait
lcall
mov
stos
pop
cmp
jne
cmp
xlat
gs
dec
mov
int3
shll
movsl
and
mov
inc
mov
jo
pop
jns
je
mov
mov
mov
jl
mov
and
ret
lret
lret
or
mov
sbb
ret
mov
shl
daa
rclb
dec
popf
out
fcoms
rcl
inc
leave
mov
or
js
sbb
into
adc
cmp
sbb
jmp
std
outsb
movsl
out
mov
sub
xchg
xchg
enter
popf
sub
mov
mov
cmpsl
cmp
mov
jl
int
les
mov
or
cmp
push
loopne
mov
mov
adc
pop
adc
fisubrl
pop
daa
xchg
dec
out
sub
mov
adc
or
insl
andb
mov
mov
ret
inc
push
sbb
out
lret
mov
jg
and
leave
sub
adc
sar
lods
sbb
mov
nop
ficoml
pop
fmull
mov
xchg
or
xor
dec
or
leave
and
stos
add
adc
les
in
jl
push
mov
pop
mov
xchg
test
ljmp
cmp
pop
enter
dec
add
loopne
bound
inc
jg
shlb
xor
xchg
lods
nop
jle
mov
scas
mov
popf
icebp
sub
mov
xor
pop
adc
sbb
mov
aad
xlat
xor
lcall
or
in
mov
ffreep
in
xor
mov
xor
test
xlat
je
pushf
sahf
dec
dec
jmp
fcmovb
push
jg
jle
pushl
incl
xor
adc
ret
scas
pop
cld
push
aad
popa
push
adc
js
lds
insl
push
movsl
fst
xchg
fldcw
loope
data16
dec
mov
sbb
das
out
cli
fstpt
test
and
iret
sbb
xchg
adc
imul
pop
or
inc
lock
pop
mov
dec
cmp
int
push
hlt
sbb
inc
insb
sub
inc
adc
mov
mov
push
or
imul
call
lods
adc
subb
cmp
mov
jl
mov
out
sub
push
inc
dec
pop
das
push
lods
out
sbb
aam
shr
adc
xlat
xchg
test
sbb
dec
sub
cmp
les
je
dec
and
es
dec
pop
js
flds
cs
cmp
jo
sbb
in
adc
mov
add
xor
pop
dec
and
fildl
and
mov
iret
scas
xchg
in
cmp
jmp
mov
mov
into
repz
fs
or
jge
or
and
or
aas
inc
push
jmp
sub
out
pop
adc
inc
or
sub
mov
cwtl
push
rolb
pcmpeqd
fbstp
sub
xor
es
push
mov
or
ret
popa
pop
popf
or
loopne
mov
fyl2xp1
loop
loop
push
lds
pop
inc
push
push
inc
dec
mov
add
add
sbb
vpavgw
sub
out
aaa
jo
mov
imull
add
jp
sbb
icebp
sub
push
into
inc
pop
movsl
gs
or
adcl
jle
cmc
push
jnp
or
scas
sbbl
fisttpl
inc
fistpll
pop
mov
test
jp
das
dec
push
cltd
loope
push
pop
lret
xlat
mov
fld
mov
lds
cltd
mov
mov
int
repnz
loope
mov
ficomps
test
jbe
test
xchg
xor
imul
push
push
loop
push
jmp
enter
sbb
fmull
fistps
ss
aas
or
fstps
lock
hlt
cmp
repnz
mov
cmp
arpl
movsl
repnz
adc
fldt
imul
jb
jne
imul
loopne
daa
mov
xor
or
pop
out
andb
xchg
xchg
mov
scas
aaa
sub
popa
pop
add
sti
mov
je
and
dec
inc
mov
fsubs
push
mov
adc
rclb
call
test
xchg
int
xor
inc
aam
and
call
fsubl
mov
outsb
xor
fidivs
js
push
mov
fchs
leave
stc
sti
jp
cmp
jecxz
xor
in
rcrl
dec
lret
xchg
jl
icebp
mov
jl
mov
push
in
iret
dec
imul
push
ds
dec
pop
or
sti
and
rclb
or
adc
ljmp
push
xchg
outsl
push
or
ret
adc
icebp
cmp
mov
aas
fisttpll
mov
cmpsb
pop
lcall
int3
pop
test
sub
xor
sbb
push
sub
mov
jbe
lret
inc
xor
mov
adc
inc
adc
sbb
popf
xor
mov
pushf
cmp
in
or
pop
lret
fwait
sahf
aam
dec
int3
cmp
into
aad
mov
js
xor
push
and
out
mov
imul
outsb
lock
test
lahf
inc
jae
mov
inc
not
enter
cli
xor
je
stc
push
add
les
adcb
cmp
cmp
in
mov
ret
inc
lds
je
incb
inc
je
sub
sbb
pop
lods
setb
bound
sti
out
jbe
jnp
movsl
repnz
loop
and
add
hlt
sub
cmp
adc
aam
push
dec
push
daa
movsl
lret
rep
gs
arpl
jnp
sarl
aam
xor
mov
movsb
inc
insb
xchg
test
add
mov
mov
int
or
daa
popl
into
pop
sbb
sahf
add
in
xchg
out
push
shrb
mov
adc
lods
jp
mov
fsqrt
out
xchg
cltd
pop
jl
dec
xor
fwait
repnz
fsts
in
or
mov
cmpsb
jne
es
push
jb
dec
lret
sbb
leave
and
loope
movsl
sbb
jae
sbb
jp
inc
cmp
pop
out
std
ja
dec
sbb
std
enter
popa
repnz
pop
or
xlat
mov
cld
mov
pop
cs
inc
pusha
imul
fists
xchg
mov
out
cli
jmp
sub
dec
pop
rcrb
mov
pusha
adc
outsb
push
pop
pop
cmp
aam
divb
or
popa
test
rorl
xchg
or
add
sub
jp
mov
or
xchg
sahf
add
jbe
push
outsl
cli
leave
test
mov
xor
sbb
push
fimuls
mulb
iret
cmp
nop
inc
sbb
xor
stos
push
mov
push
dec
fsubrs
xchg
addr16
mov
imul
lcall
jmp
movsb
test
mov
add
lahf
mov
fisubrl
mov
add
sbb
test
dec
movsb
sbb
or
sbb
leave
ss
push
pop
xor
mov
ja
ss
cld
pop
and
imul
or
cld
jge
dec
js
push
dec
icebp
pop
mov
xlat
dec
pop
ret
inc
ss
out
fcoms
int3
mov
adc
xor
popf
ret
xchg
pusha
movsb
inc
dec
lcall
jbe
inc
ficompl
in
addr16
xchg
mov
roll
mov
lods
lcall
out
mov
mov
loop
cmpsl
add
fidivrl
dec
outsb
repnz
sub
sub
jge
jbe
popa
xchg
testl
imull
inc
xchg
mov
outsb
xor
clc
xor
xor
mov
sarl
xchg
loope
ja
push
mov
pushf
pop
jne
mov
jb
add
out
and
pop
sub
fnstenv
dec
mov
add
movntq
out
out
sbb
lcall
push
sarb
roll
sbb
mov
jle
and
loop
cmpsb
mov
in
jne
repz
cwtl
cmpsl
jo
sahf
xor
push
js
pop
lock
adc
push
fcoml
pop
loope
mov
and
xchg
xor
inc
mov
fsubl
repz
dec
xor
cmp
cmp
sub
test
cmpsl
js
imul
cltd
pushl
xor
sti
push
and
lcall
mov
xor
inc
dec
jmp
or
lea
shrl
xchg
ljmp
pop
xor
cmpsb
leave
mov
lcall
bound
mov
jge
lret
mov
xchg
inc
jne
lods
sbb
imul
cmc
aam
inc
out
stos
in
push
pop
int
jmp
fdivrs
aad
pop
lock
sbb
mov
mov
mov
xchg
pop
sarl
jnp
mov
je
js
jge
pop
ljmp
nop
push
outsb
daa
js
pop
aas
cmc
adc
sbbl
xchg
and
or
insl
or
int
pushf
nop
jecxz
incb
aad
mov
cli
or
inc
mov
js
lret
out
jle
adc
inc
xchg
test
mov
sub
push
loope
jge
loopne
scas
mov
dec
adc
pop
cmp
out
sbb
into
lret
lea
jo
iret
adc
lcall
mov
out
cmp
xchg
adc
jge,pn
dec
movsb
lds
cli
xchg
add
fadd
int
pop
lea
and
jp
add
and
stos
pop
aaa
inc
fbld
fmull
mov
rolb
fadds
cli
repnz
or
sbb
mov
sub
or
xor
sub
sarl
pop
imul
cmp
and
sbb
loop
hlt
mov
jo
jnp
add
mov
xchg
in
mov
sbb
sbb
dec
ror
nop
adc
sti
outsb
aaa
fisttpll
imul
push
add
or
sbb
in
lret
imul
pusha
xchg
ds
insb
je
xchg
imul
inc
ljmp
push
ss
adc
lret
push
aas
mov
addl
cmp
add
mov
mov
or
mov
dec
mov
sub
in
inc
sbb
mov
cmp
sahf
stc
inc
lea
inc
movsb
pop
cld
push
pop
jo
xchg
mov
jp
mov
jno
icebp
and
imul
jbe
xor
add
adc
sub
cmpsb
leave
pop
sahf
xor
adc
push
mov
int
add
and
and
or
dec
cmp
cmp
xchg
mov
sbb
into
jmp
test
js
jp,pn
ljmp
or
xor
arpl
xchg
fdivl
stos
test
lahf
test
icebp
enter
lods
mov
adc
fs
push
in
adc
pop
adc
cmp
jle
icebp
jbe
push
outsb
hlt
sbb
inc
lods
mov
adc
stos
xor
ret
sbb
test
jb
cli
mov
mov
outsl
mov
out
push
fwait
lds
mov
jl
mov
cmp
nop
xor
aam
cld
in
icebp
adc
or
inc
sbb
cmc
call
inc
and
cmp
pop
pushf
add
lock
xlat
dec
dec
loop
je
hlt
add
popf
faddl
stos
cmp
and
in
dec
cmpsl
inc
cmp
cmp
out
cmpsb
pop
jmp
mov
popf
push
fidivrl
sbb
or
dec
idiv
ret
xor
push
fsubl
cmp
push
sub
pop
lods
jns
push
rcrb
or
decb
icebp
int3
fdivs
sub
xchg
jns
xchg
enter
lret
add
leave
jo
pop
sbb
clc
pop
insl
sub
dec
insb
xor
lods
pop
cltd
rclb
xchg
stc
test
inc
push
jecxz
and
cmpb
lods
mov
lock
bound
pop
es
sbb
test
iret
push
repnz
mov
in
scas
sahf
pop
jp
scas
inc
mov
mov
js
mov
xor
into
das
mov
push
inc
das
pop
sub
adc
or
cmp
adc
fdivr
icebp
mov
stos
cmp
lock
mov
or
in
in
das
gs
xchg
fisttpll
mov
inc
shl
subb
lret
xchg
jecxz
inc
dec
sub
out
mov
js
dec
lahf
sub
push
lea
in
adc
fxch
pop
inc
sti
sbb
shlb
rcr
cli
out
dec
sbb
aam
xor
sub
cld
add
jne
cli
sbb
jo
inc
pop
out
pop
shr
pop
mov
mov
pop
lahf
xchg
in
aam
outsb
sbb
push
xor
xchg
xchg
and
loope
mov
std
fwait
lods
xchg
pushf
pop
mov
rolb
shll
mov
and
fstpl
test
mov
inc
movsb
leave
mov
ljmp
addl
sbbl
lahf
adc
adcb
sbb
stos
mov
fs
xchg
fisttpll
add
sti
out
and
mov
cmp
xchg
leave
or
mov
jecxz
nop
jo
xchg
leave
push
cmc
cmp
rcll
lods
mov
mov
fdivrs
pop
dec
inc
add
jg
shlb
out
std
pushf
nop
fldl
in
hlt
scas
sub
fldenv
cld
daa
das
mov
bound
xchg
loope
out
ljmp
xchg
dec
xchg
out
push
lds
push
pop
xchg
mov
call
xor
insl
jge
push
pop
lea
in
jl
inc
addl
dec
add
das
lds
std
jnp
sub
pop
stos
and
pop
cmp
cmp
mov
jmp
test
jbe
cmp
rcrb
sbb
loopne
in
adc
dec
dec
shlb
add
lahf
jmp
and
fdivrl
pop
mov
adcb
mov
push
mov
mov
lds
xchg
std
mov
mov
push
outsl
mov
jb
xchg
jp
jmp
lods
bound
cwtl
sbb
pop
or
xor
subb
push
add
push
adc
aas
imul
leave
mov
pusha
mov
cmpsb
dec
mov
scas
adc
mov
ljmp
cli
out
pop
stos
pushf
call
push
lcall
scas
push
mov
jno
or
push
repnz
fldt
and
arpl
inc
enter
repz
mov
rolb
and
lahf
addr16
cmp
pop
stos
inc
mov
int3
in
iret
in
inc
jbe
add
adc
inc
bound
or
in
jo
jb,pt
pop
out
mov
jne
jnp
sbb
negl
push
in
xchg
nop
movl
and
cltd
cmc
outsb
loope
cmp
xlat
cmp
jmp
jmp
popa
mov
sub
jle
les
push
push
lock
mov
test
int3
loope
xchg
mov
insb
stos
bound
jge
jg
mov
push
call
inc
xlat
test
mov
xchg
mov
lahf
mov
adc
pop
lea
imul
lods
mov
and
and
fwait
loope
negl
gs
dec
xor
push
jg
insl
out
mov
in
xlat
push
test
sarl
jp
jb
jo
xchg
or
mov
jnp
dec
repnz
mov
mov
fisubs
daa
push
jbe
add
in
and
cwtl
push
out
adcl
jb
mov
imul
pusha
cmp
es
cmp
xchg
sub
sti
xor
outsb
pop
push
mov
adc
jle
fcomp
jno
jbe
sub
jo
leave
or
jecxz
mov
pop
pushf
pop
adc
mov
mov
mov
out
mov
adc
nop
pop
xchg
jo
lret
pop
daa
mov
mov
std
push
pop
mov
outsl
mov
mov
hlt
push
fwait
sub
jg
lret
sti
xlat
lds
push
adc
cltd
add
leave
subl
mov
insb
push
xlat
stos
inc
fnstcw
ret
pop
loop
xor
mov
mov
fdivl
cmp
and
mov
push
dec
lock
jle
jo
adc
cmc
ds
aaa
sbb
jmp
iret
aam
test
into
dec
xor
lret
incb
inc
jbe
aas
insl
xchg
in
loope
jg
rorb
sub
jge
inc
inc
mov
ja
negb
icebp
orb
icebp
in
ljmp
fcoms
cmpsb
cld
subl
sbb
mov
xchg
push
fists
gs
dec
ret
fwait
xor
adc
lret
mov
xchg
push
sarl
push
xor
out
add
mov
lea
and
les
and
mov
jp
pusha
pop
push
mov
xor
jle
popf
cmp
ljmp
cmpsl
jecxz
pushf
lods
dec
xor
imull
push
rolb
sahf
flds
xor
in
mov
lret
push
js
insb
pushf
scas
ret
add
push
cmc
pop
sub
cmp
pop
pop
inc
inc
sbb
push
or
icebp
fistpl
ja
and
out
out
decl
lret
lea
push
sahf
pop
addr16
and
xlat
inc
fiaddl
sti
imul
mov
mov
mov
xor
lock
jae
lcall
int3
insb
pop
add
mov
adc
add
add
pusha
dec
mov
or
andb
cs
pop
add
subb
aaa
or
push
add
cmp
dec
pusha
aas
out
mov
xor
loopne
bound
rorb
add
lock
inc
jmp
mov
sub
test
jne
ja
cld
push
in
mov
sub
adc
pop
inc
push
mov
and
icebp
imul
sbbl
inc
data16
rcrl
aas
inc
popa
int3
push
xchg
xor
mov
sahf
bound
ss
stos
mov
jle
push
in
xor
lret
mov
aam
mov
movsl
insb
xchg
call
orl
movsl
mov
jl
call
push
fcomps
and
outsl
xor
mov
gs
xor
movswl
or
pop
pop
fnsave
dec
xor
jmp
orb
xchg
shr
cmpsl
lock
mov
lahf
out
test
xor
pop
stos
popa
adcb
mov
sti
push
sub
in
sar
lcall
push
icebp
dec
outsl
mov
outsl
pop
ss
repnz
inc
fidivl
mov
dec
repnz
xchg
ret
mov
stos
lret
leave
inc
adc
dec
cld
mov
lods
stos
fstps
pop
nopl
dec
mov
mov
lcall
adc
fnstenv
push
lahf
dec
xchg
outsl
pop
fldenv
test
sahf
push
jno
push
movsb
or
dec
dec
xorl
daa
icebp
shlb
jl
ret
mov
shll
push
add
fs
pop
mov
fisttpll
mov
jp
xor
push
xchg
or
mov
mov
push
ljmp
adc
lcall
xchg
int3
int3
scas
inc
imul
dec
lret
outsb
xchg
xchg
stos
fwait
sub
xor
test
lar
pop
sbb
push
jbe
xchg
adc
add
shlb
mov
mov
or
sbb
cli
push
mov
inc
mov
cmova
cmp
sbb
sbb
cmp
push
cmp
and
out
push
imul
add
mov
sbb
jae
in
fcomps
fnstcw
xchg
push
cmp
xlat
mov
out
je
pop
jge
mov
xchg
test
movsl
sbb
lret
stc
in
fmull
aad
cmp
fstps
daa
lret
xchg
and
or
sbbl
pop
arpl
repz
mov
pop
inc
or
push
pop
add
xchg
or
ja
adc
fs
mov
sub
inc
mov
sub
xchg
adc
push
das
or
stos
sub
and
jle
cmc
sbb
mov
rorb
mov
jle
lock
aaa
faddl
jg
aas
adc
stos
mov
clc
fsubl
sbb
xchg
cmp
es
and
scas
mov
jns
or
jmp
sub
pop
xor
aas
int
xchg
sbb
inc
push
imul
pop
mov
pop
xchg
inc
cmp
mov
sub
arpl
pop
push
and
jg
pop
cmp
bnd
xor
dec
test
enter
push
mov
mov
gs
push
lea
cwtl
lret
ljmp
js
test
mov
jge
lods
insb
fsts
test
jo
in
lea
jae
fmull
jb
cltd
jns
popf
mov
or
sbb
fildll
out
pop
imul
xchg
pop
and
jb
loope
pop
inc
mov
negl
xchg
push
push
xchg
in
push
pop
es
aaa
cmp
push
xlat
nop
jne
mov
lods
mov
out
data16
nop
or
pop
in
and
aad
cmp
mov
jbe
mov
aas
xchg
mov
outsl
inc
in
ljmp
insb
xor
outsb
push
dec
mov
out
push
dec
jno
sbb
pop
xor
aas
les
sbb
les
fwait
push
into
pop
aaa
sti
xchg
push
in
push
jbe
xlat
push
es
push
adc
mov
arpl
mov
cmp
rcr
inc
test
outsl
out
jbe
xorl
ret
clc
adc
xor
cmp
and
insb
pop
outsl
repnz
pop
dec
pop
and
scas
insl
and
fdivs
lahf
add
cmp
pop
lret
jg
dec
push
bound
ljmp
in
fwait
cmp
mov
in
cmp
cmc
jp
xlat
xchg
inc
das
add
cwtl
push
in
gs
fmuls
ret
out
ret
sub
lahf
and
stos
xor
add
or
mov
movsl
popf
movsb
adc
mov
sub
jge
push
xor
push
xchg
in
repz
adc
out
inc
jmp
mov
xchg
jp
int
ja
les
mov
dec
adcl
sbb
sbb
jecxz
loop
mull
shll
inc
ret
and
xchg
mov
fildl
push
in
les
scas
xor
test
aam
sub
or
adc
les
in
shll
stos
les
pop
data16
daa
push
subb
jge
mov
ds
mov
pop
imul
inc
xchg
dec
cmc
pusha
out
and
add
fsubr
pop
sarb
sub
xchg
das
and
test
jns
cmp
sub
roll
lahf
and
mov
movsb
les
inc
in
push
ss
cltd
lock
ja
repz
pop
mov
inc
jb
imul
and
out
adc
out
pop
jne
mov
cmpl
daa
push
jg
hlt
pusha
insl
sub
lahf
push
dec
dec
sbb
ret
xchg
popa
addr16
shll
sub
pop
popf
int3
push
push
xchg
or
mov
cs
ret
fdivs
mov
leave
lea
mov
jb
inc
imul
shll
mov
sbb
sahf
cmpsl
into
jne
mov
jmp
scas
inc
and
cli
fistpl
push
popa
outsb
outsb
push
les
mov
push
or
add
cmpsl
ss
pop
fsubr
loop
fwait
or
leavew
sbb
pop
and
pop
xchg
ret
ficoml
fsub
inc
fcomi
das
outsl
mov
mov
test
pop
fidivrl
cmc
ret
sbb
mov
loope
cmp
jmp
imul
in
lock
xchg
inc
sahf
sub
lock
mov
or
lea
lods
inc
or
dec
push
int
in
mov
hlt
mov
jo
mov
xlat
inc
ret
call
pop
jne
and
outsb
xor
scas
pushf
pop
int
xchg
push
sbb
sub
adc
push
outsl
clc
mov
xchg
lret
roll
push
mov
jg
dec
sub
jnp
or
xor
ja
dec
sub
pop
jbe
adc
or
stos
or
push
adc
mov
cmp
or
pusha
insl
dec
imul
cmp
imul
pop
xchg
fcmovnu
push
dec
adc
sub
or
sbb
fstl
dec
ret
mov
les
mov
inc
test
and
test
jb
mov
sar
pop
js
ss
test
cmp
jne
mov
inc
or
sub
pushf
or
mov
lcall
inc
sbb
mov
aaa
jnp
ja
popf
sub
add
mov
inc
inc
xchg
mov
scas
imul
std
xchg
int
mov
lods
sub
rcrb
fdivrl
scas
test
lret
movsl
sbb
out
sbb
or
rclb
push
mov
adc
and
scas
and
dec
fs
push
xchg
jb
jge
mov
cli
mov
sbbl
lret
adc
loop
popf
mov
jg,pn
push
jge
xor
test
xor
push
push
outsl
add
and
mov
leave
gs
negl
pop
inc
lock
rorl
repnz
pop
outsl
rcrl
ljmp
stc
cwtl
mov
dec
push
or
fdivrl
xor
push
addr16
or
dec
adc
push
pop
ss
jmp
jne
addb
imulb
mov
pop
stc
mov
punpckhbw
jb
mov
js
addr16
add
hlt
data16
sbb
mov
pop
aam
xchg
or
mov
xchg
push
mov
push
mov
xchg
inc
les
jl
js
mov
les
scas
adc
stos
xchg
addl
daa
icebp
sub
inc
sbb
cli
imul
insb
adc
xlat
lock
xchg
pop
fsubl
lock
push
ljmp
fmuls
int
mov
in
pop
cmovle
mov
mov
hlt
dec
dec
or
gs
jle
cmpsl
push
push
stc
aad
and
fstpt
test
mov
xor
dec
out
popf
imul
pusha
in
les
in
inc
adcl
rcll
enter
jg
call
in
ljmp
fsts
dec
mov
jmp
and
stos
das
lds
cmpsb
mov
out
aas
sbb
mov
inc
addr16
add
mov
mov
in
negb
adc
pop
push
and
lds
das
inc
xchg
scas
cmp
lods
jae
inc
rorl
fadd
stc
mov
and
sub
stos
add
mov
jecxz
lock
push
mov
icebp
cli
rorl
aad
jne
xor
dec
clc
pop
inc
push
je
es
and
pop
add
jbe
movsb
sub
jmp
arpl
xor
fnstsw
test
cli
rol
test
int
mov
scas
cmp
clc
mov
dec
cld
mov
pop
mov
popa
sahf
pop
fldt
sbb
scas
inc
mov
sahf
fcoms
stc
push
fwait
pop
and
jp
inc
and
repz
ss
xchg
stos
add
test
test
rcrl
cli
mov
dec
xlat
sbbb
mov
dec
movsl
mov
mov
xchg
lret
push
and
int
popa
fistps
sbb
pop
lret
adc
xor
push
popf
inc
mov
cld
repnz
adc
inc
pop
pop
mov
dec
das
sbbb
daa
xor
sar
aam
dec
sbb
mov
adc
sub
ret
cwtl
jo
xchg
in
and
test
inc
icebp
jl
cmp
stos
test
xchg
mov
stos
adcb
or
adc
fs
movb
xchg
add
mov
mov
push
fildl
and
jb
mov
movsb
jg
pop
shll
stos
add
push
adc
imul
mov
fcmovnb
pop
pop
cvttps2pi
xchg
loope
and
jp
pushf
sub
dec
popa
dec
pop
data16
lods
movsl
addr16
call
stos
pushf
das
fs
int3
inc
outsb
and
xchg
sbb
mov
xchg
enter
shrd
inc
push
jae
loopne
push
and
add
xor
jmp
pop
test
dec
sahf
or
cmpsb
outsl
mov
dec
scas
pop
lea
xlat
dec
and
inc
dec
sub
inc
sub
mov
jmp
sarb
aas
push
xchg
mov
cmp
pop
jl
mov
xchg
or
stos
scas
mov
sbb
push
dec
cld
pop
pop
mov
jo
idivl
cltd
sbb
fbld
out
dec
jge
mov
sbb
addr16
jnp
les
adc
push
push
js
mov
and
jmp
mov
daa
clc
or
mov
icebp
jle
push
imul
das
test
dec
pop
mov
cld
xchg
and
xchg
scas
lock
and
inc
addr16
inc
pop
xchg
inc
mov
lds
mov
hlt
inc
pop
push
gs
mov
cmp
lods
repz
lahf
adc
repz
xchg
jbe
loopne
mov
pop
arpl
mov
or
das
shl
cmp
push
cltd
mov
push
add
aad
sub
into
mov
or
xor
stos
lock
add
xlat
adc
mov
push
sub
pop
xchg
pop
in
add
mov
je
ret
inc
push
or
std
lcall
jg
insb
mov
xchg
cmc
sub
push
dec
nop
jns
or
and
lret
cmp
repnz
cmp
dec
test
cltd
xchg
pop
push
push
std
push
jnp
je
outsl
daa
cmp
lcall
push
mov
push
fwait
mov
mov
test
imul
pop
push
push
sub
mov
sub
lcall
js
pop
jl
sbb
sbb
mov
js
js
iret
out
jb
mov
cmpsb
lds
lods
daa
cmpsl
inc
imull
jo
sbb
push
sbb
xchg
test
test
loopne
push
mov
mov
and
clc
aad
jmp
ss
call
and
fwait
mov
inc
sbb
xlat
test
das
notl
mov
jg
xor
sbb
bound
imul
loope
test
je
add
icebp
pop
add
xchg
sbb
rclb
frstor
outsl
mov
std
or
inc
mov
outsl
sbb
leave
ljmp
mov
xchg
mov
dec
in
mov
rcr
dec
sub
pavgb
adc
jl
subb
push
hlt
push
ret
push
arpl
add
pop
cltd
cmp
sbb
stc
or
push
jecxz
enter
imul
or
add
mov
inc
subb
mov
push
jecxz
dec
iret
adc
fcmovbe
sbb
pop
cltd
in
imul
jecxz
cmp
call
hlt
inc
xchg
repz
add
int3
pop
repz
jns
fisubs
fidivl
stos
test
dec
rorb
jge
xor
mov
mov
cmp
shrb
les
sub
mov
call
xchg
inc
sub
fdivr
and
mov
inc
ficomps
insl
xor
cmc
cmpsl
or
add
xor
ffree
nop
jae
insl
fildl
jmp
int3
lock
mov
out
pop
xchg
shr
mov
scas
int
into
xchg
bswap
test
test
pop
add
rolb
movsb
mov
dec
adcl
or
jae
jle
je
mov
cmp
sub
add
dec
mov
into
cli
lock
jbe
xor
roll
inc
leave
ret
jle
pop
cs
inc
mov
xor
in
sahf
test
dec
mov
mulb
adc
push
mov
mov
sbb
stc
ja
insb
addb
and
lret
xor
cmp
rcrl
adc
xor
xchg
and
push
repz
push
jecxz
rcrl
int3
mov
lock
push
test
jns
xor
xchg
fdiv
or
sbb
iret
and
mov
inc
paddusb
lret
mov
jae
fisubrs
out
pusha
inc
xchg
or
sti
mov
sbb
insl
setbe
testb
in
xchg
enter
out
popf
jns
rol
cmc
mov
jle
leave
orl
mov
jecxz
xchg
aas
ljmp
lret
ret
inc
lods
fdiv
fists
out
push
xor
fwait
aaa
repnz
jle
cmp
add
stos
mov
stos
xchg
dec
sbb
out
cli
hlt
lock
adc
aam
mov
add
stos
outsb
xor
mov
test
xor
or
aam
notb
clc
pop
fistl
inc
test
mov
pop
mov
in
rolb
jo
popa
mov
negl
sbb
add
xchg
jle
sub
loope
dec
mov
movsl
sub
inc
pop
jge
push
mov
stos
int
xor
aaa
stos
jo
xor
lcall
cmp
mov
lcall
sub
sub
jno
jp
pop
out
and
sbb
adc
in
out
xchg
sbb
jmp
mov
mov
fsubl
jnp
xchg
mov
bound
push
cmp
repz
addb
jne
pusha
mov
fadds
outsb
das
and
sub
inc
mov
mov
adc
ret
dec
les
xchg
mov
and
popf
movsb
dec
pop
lret
add
aaa
outsl
icebp
inc
jp
inc
pop
out
pushf
xchg
jg,pn
scas
and
fdivp
inc
into
fcomi
and
mov
fiaddl
mov
dec
xor
in
or
push
jle
imul
xlat
xchg
ds
cmp
movsl
insb
or
xor
mov
movsl
and
jl
jno
mov
std
inc
loope
xor
out
mov
inc
sbb
inc
les
inc
fcmovne
cld
xchg
sub
sbb
xchg
in
rorb
mov
push
pop
in
pop
mov
lcall
push
xchg
cmp
out
movsb
pop
inc
xchg
stos
or
pop
pop
das
fs
lea
sbb
imul
addb
sub
cltd
xor
cmp
ffreep
je
in
jg
inc
mov
pushf
call
dec
popl
test
js
cmc
repnz
and
fwait
add
stos
xchg
iret
test
inc
ret
jbe
mov
sub
divb
leave
pop
mov
inc
xor
in
pop
leave
test
inc
sahf
mov
push
pop
sti
aad
adc
pop
loopne
inc
test
ret
xchg
.byte
.byte
add
jmp
or
adc
adc
push
pop
add
push
push
mov
pushl
nop
push
jmp
mov
mov
xorb
loop
mov
jmp
nop
nop
nop
mov
jmp
mov
nop
nop
nop
nop
mov
mov
add
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
jmp
pusha
call
jmp
push
ret
call
jmp
mov
add
.byte
.byte
