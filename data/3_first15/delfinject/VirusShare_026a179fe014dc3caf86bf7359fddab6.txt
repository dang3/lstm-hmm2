jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
mov
push
call
ret
nop
push
mov
push
mov
and
push
mov
push
call
cmp
sbb
neg
and
pop
ret
push
push
mov
and
push
mov
push
call
ret
nop
test
je
call
or
je
ret
mov
jmp
ret
nop
test
je
call
or
jne
ret
mov
jmp
ret
nop
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
cmp
jge
jcxz
cmp
je
push
push
mov
mov
ja
lea
lea
std
rep
jmp
cmp
je
push
push
mov
mov
mov
ja
and
lea
lea
std
rep
sar
mov
mov
sub
sub
rep
cld
dec
sar
js
rep
and
mov
rep
pop
pop
ret
push
push
push
push
mov
mov
jmp
push
call
mov
mov
test
je
cmp
jbe
cmpb
jne
cmpb
jne
add
jmp
xor
mov
jmp
cmp
jne
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
cmp
ja
mov
mov
call
mov
mov
xor
jmp
cmp
jne
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
cmp
ja
mov
pop
pop
pop
pop
ret
mov
push
push
push
add
mov
mov
mov
call
test
jne
push
lea
push
push
call
mov
mov
mov
call
jmp
call
mov
mov
mov
call
mov
test
je
cmpl
je
dec
jmp
add
pop
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
pop
xor
mov
pop
pop
pop
ret
nop
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
push
push
push
push
mov
mov
test
je
mov
mov
test
jle
dec
mov
mov
test
je
mov
call
test
jg
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmp
sete
cmp
jle
mov
inc
mov
test
je
call
test
je
mov
cmp
je
mov
mov
mov
call
jmp
cmp
jg
pop
pop
pop
pop
ret
mov
test
je
mov
xor
mov
xchg
call
ret
lea
movl
movl
mov
xor
mov
mov
mov
mov
movb
call
ret
nop
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
decl
jne
push
lea
call
pop
ret
mov
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
decl
jne
lea
call
add
dec
jne
pop
pop
ret
mov
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
incl
xchg
test
je
mov
dec
jl
decl
jne
lea
call
ret
lea
test
je
mov
inc
jle
incl
xchg
test
je
mov
dec
jl
decl
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
push
push
push
call
pop
ret
nop
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
incl
ret
mov
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
decl
jne
lea
call
mov
pop
mov
ret
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
mov
call
mov
test
je
mov
dec
jl
cmp
jge
test
jle
sub
cmp
jle
mov
sub
add
lea
call
mov
mov
mov
sub
call
pop
pop
pop
ret
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
mov
test
je
push
push
push
call
test
je
pop
pushl
mov
call
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
add
add
add
mov
pop
sub
shr
jmp
ret
lea
xor
test
je
mov
jmp
ret
nop
test
je
ret
nop
add
mov
ret
mov
test
je
mov
shr
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
call
mov
mov
call
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
ret
lea
ret
lea
mov
jmp
ret
mov
sub
jb
sub
je
call
ret
lea
mov
xor
movl
inc
cmp
jne
mov
mov
ret
nop
mov
jmp
ret
mov
mov
mov
ret
mov
push
push
mov
mov
test
je
mov
call
mov
test
jne
pop
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
jne
cmpl
je
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
subl
jae
call
mov
movl
call
call
mov
ret
lea
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
pusha
mov
mov
mov
mov
push
push
test
je
test
je
cld
xor
subl
jb
mov
add
subl
jb
mov
add
mov
add
jne
subl
jb
mov
inc
add
inc
jae
add
jne
subl
jb
mov
inc
add
inc
jae
xor
add
jne
subl
jb
mov
inc
add
inc
jae
add
jne
subl
jb
mov
inc
add
inc
adc
add
jne
subl
jb
mov
inc
add
inc
adc
add
jne
subl
jb
mov
inc
add
inc
adc
add
jne
subl
jb
mov
inc
add
inc
adc
je
mov
sub
cmp
ja
push
sub
mov
pop
subl
jb
mov
inc
mov
jmp
mov
add
jne
subl
jb
mov
inc
add
inc
adc
jb
add
jne
subl
jb
mov
inc
add
inc
jb
sub
mov
jne
mov
add
jne
subl
jb
mov
inc
add
inc
adc
jb
add
jne
subl
jb
mov
inc
add
inc
jb
push
mov
sub
cmp
pop
ja
sub
jb
push
mov
sub
rep
pop
jmp
dec
test
jne
shl
subl
jb
mov
inc
mov
mov
add
jne
subl
jb
mov
inc
add
inc
adc
jb
add
jne
subl
jb
mov
inc
add
inc
jb
cmp
sbb
cmp
sbb
cmp
adc
cmp
adc
push
mov
sub
cmp
pop
ja
sub
jb
push
mov
sub
rep
pop
jmp
subl
jb
mov
inc
xor
shr
je
adc
mov
push
mov
sub
cmp
pop
ja
sub
jb
push
mov
sub
rep
pop
mov
jmp
add
popa
or
ret
add
sub
mov
popa
ret
nop
pusha
mov
mov
mov
sub
test
je
sub
test
je
test
je
xor
inc
mov
and
shr
xor
dec
jne
mov
and
shr
je
xor
add
mov
and
shr
xor
mov
and
shr
xor
mov
and
shr
xor
mov
and
shr
xor
xor
add
mov
and
shr
xor
mov
and
shr
xor
mov
and
shr
xor
mov
and
shr
xor
dec
jne
mov
test
je
xor
inc
mov
and
shr
xor
dec
jne
not
mov
popa
ret
mov
pusha
mov
mov
or
cmp
jne
mov
cmp
jb
mov
mov
popa
ret
nop
pusha
mov
mov
mov
test
je
test
je
cmp
jb
mov
cmp
jne
mov
cmp
jb
sub
jb
cmp
ja
add
pushl
push
call
add
cmp
jne
mov
cmp
ja
push
push
pushl
push
call
add
cmp
jne
mov
push
push
call
add
cmp
mov
je
or
mov
popa
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
mov
mov
lea
mov
rep
push
call
mov
mov
push
call
mov
movl
lea
push
call
mov
sub
jne
cmpl
jne
cmpl
jb
mov
add
mov
jmp
mov
add
add
mov
push
push
push
mov
mov
mov
mov
add
mov
cmp
je
mov
cmpl
mov
je
cmp
jne
mov
mov
mov
mov
mov
xor
pop
pop
pop
pop
pop
mov
pop
ret
lea
ret
lea
push
push
push
push
add
mov
lea
movsl
movsl
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
movzwl
add
push
push
push
call
mov
lea
push
movzwl
add
push
mov
push
push
push
call
mov
push
push
push
push
push
call
mov
lea
push
push
lea
push
push
push
call
push
push
mov
mov
sub
push
push
push
call
mov
lea
push
sub
push
push
push
push
call
lea
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
ret
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
imul
gs
xor
add
add
insb
jae
jb
outsb
push
add
add
inc
gs
gs
imul
add
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
lea
movzwl
add
mov
ret
push
mov
cmpl
jne
push
push
call
push
call
mov
cmpl
jne
mov
jmp
mov
push
mov
push
call
pop
ret
pop
ja
outsb
insl
popa
jo
imul
arpl
outsb
add
add
outsb
je
insb
insb
cs
insb
add
add
in
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
decl
add
add
aaa
xor
aaa
cmp
add
incl
add
add
add
add
pushl
add
add
xor
xor
ss
cmp
xor
xor
xor
ss
cmp
xor
xor
xor
ss
cmp
xor
xor
xor
ss
cmp
xor
xor
xor
ss
cmp
xor
add
in
add
push
mov
mov
call
xor
push
push
pushl
mov
lea
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
movb
lea
xor
mov
call
movl
movl
movw
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
push
call
test
je
movb
xor
push
push
pushl
mov
lea
xor
call
mov
lea
call
mov
call
mov
mov
lea
mov
call
mov
call
mov
lea
call
mov
call
mov
movl
lea
push
mov
push
call
test
je
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
push
mov
push
call
test
jl
test
je
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
cmpl
je
lea
push
mov
mov
push
push
mov
push
mov
push
call
test
je
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
xor
lea
push
lea
mov
push
mov
add
push
mov
add
push
mov
push
call
inc
decl
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
mov
add
mov
lea
push
mov
push
call
cmp
sbb
inc
mov
mov
mov
lea
mov
call
xor
pop
pop
pop
mov
push
cmpb
jne
push
mov
push
call
jmp
mov
push
call
mov
push
call
mov
push
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
push
push
push
mov
mov
dec
test
jl
inc
xor
mov
call
xor
mov
xor
mov
inc
dec
jne
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
call
xor
push
push
pushl
mov
xor
push
mov
call
push
mov
push
call
mov
test
je
push
mov
push
call
mov
push
mov
push
call
mov
test
je
mov
call
push
call
mov
mov
call
lea
push
push
mov
push
mov
push
call
mov
mov
call
mov
push
call
pop
mov
mov
call
mov
push
push
mov
push
mov
push
call
add
mov
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
push
push
mov
call
mov
push
call
mov
test
jle
mov
dec
mov
call
push
mov
call
push
push
call
jmp
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
call
mov
xor
lea
push
mov
xor
mov
call
mov
mov
call
jne
mov
call
mov
lea
mov
call
lea
push
mov
mov
call
mov
dec
xor
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
lea
mov
call
mov
call
add
mov
mov
call
je
lea
mov
call
jmp
lea
mov
call
mov
call
mov
lea
mov
call
inc
mov
mov
call
cmp
jg
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
incl
add
add
add
in
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
call
mov
xor
lea
push
mov
mov
mov
call
lea
push
lea
mov
mov
call
mov
mov
call
jne
mov
mov
call
jne
mov
mov
call
jne
lea
lea
mov
call
inc
cmp
jg
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
mov
xor
push
push
pushl
mov
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
or
add
fsubrs
inc
add
push
inc
add
sbb
inc
add
pop
inc
add
push
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
add
inc
add
inc
add
inc
add
daa
inc
add
sub
shlb
inc
add
add
add
mov
add
push
xor
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
lea
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
jne
mov
mov
call
test
jne
lea
xor
call
mov
mov
call
jmp
lea
xor
call
mov
mov
call
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
call
add
add
incl
add
add
incl
add
add
add
incl
add
add
push
push
inc
push
add
incl
add
add
add
add
add
sub
add
add
add
add
add
sub
add
cwtl
add
orb
add
cmp
add
add
add
xor
add
dec
add
xorb
add
jo
add
add
add
add
add
add
shlb
add
add
add
add
add
movsb
add
sub
add
sub
add
add
add
js
add
xchg
add
sahf
add
adcb
add
sub
add
add
add
add
add
fadds
add
shlb
add
sub
add
add
add
add
add
add
add
loopne
add
insb
add
add
fwait
pop
xor
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
adcb
addb
add
add
add
add
movsb
mov
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
inc
add
push
add
push
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
ja
ja
jo
add
add
push
pop
add
add
push
pop
add
add
push
add
push
pop
add
add
push
xor
add
add
push
mov
pop
add
add
pushl
mov
mov
testl
cmp
pop
add
add
add
mov
mov
testl
push
mov
pop
add
add
add
xor
add
add
push
xor
push
pop
add
add
add
add
add
testl
push
pop
add
add
add
add
add
testl
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
decl
add
testl
push
pop
add
add
push
pop
add
add
push
pop
add
add
lock
lock
clc
pop
add
add
lock
lock
clc
pop
add
add
clc
vpmacssdqh
addb
lock
pop
loopne
add
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
loopne
add
repnz
and
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
ja
add
pushl
or
push
xor
jo
or
add
pshufw
cmp
aas
jo
or
add
pshufw
push
aaa
pushl
or
add
add
jo
or
pushl
or
add
add
jo
or
pushl
or
pushl
or
lock
jg
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
ljmp
cmp
xorb
repz
add
fwait
cmp
add
add
or
add
add
push
je
bound
add
push
push
jns
gs
add
push
jns
je
insl
add
adcl
je
add
outsb
je
imul
dec
push
imul
add
outsb
je
jns
popa
jae
add
mov
push
dec
imul
push
push
dec
add
mov
insl
popa
addr16
insb
jo
arpl
adc
and
and
fisubs
and
int3
and
outsl
jecxz
int
sbb
sbb
inc
and
sub
mov
loopne
in
sub
sub
cwtl
fisubl
xchg
sub
add
jbe
dec
push
add
push
dec
inc
inc
inc
dec
movsl
inc
gs
cmp
inc
in
push
jge
dec
and
insl
pop
jno
dec
dec
inc
inc
or
stos
sub
outsb
jmpw
popa
lret
out
mov
es
scas
fidivrl
test
or
shll
fnstenv
aam
mov
jb
push
mov
out
and
out
ss
inc
dec
push
xchg
and
shlb
popa
insb
lcall
xor
call
fisubs
push
and
sahf
cmp
cmp
or
and
mov
mov
mov
js
inc
xorl
or
inc
pop
pop
or
add
data16
inc
push
push
idivl
cs
jb
lret
bound
push
push
jmp
push
lea
mov
cli
pop
fldenv
int3
fnsave
into
mov
dec
test
es
cmpsl
jp
loop
push
sub
lret
xchg
mov
mov
and
cmp
popf
sub
std
pop
dec
and
and
cmp
sub
mov
jmp
loop
je
adc
jnp
aam
or
ds
cltd
popa
stc
int
es
sbb
sbb
and
jmp
adc
add
and
cmp
loope
clc
and
fcoml
and
stc
and
aas
push
push
stos
jg
sub
push
dec
fsubl
mov
inc
daa
pop
and
in
mov
subb
cwtl
and
push
mov
xor
jmp
and
sub
cltd
mov
fisubrs
xchg
fldl
jno
sbb
mov
and
or
out
add
sub
insl
push
cmpsl
loop
and
dec
ret
xor
jb
sub
je
xor
rclb
stos
cwtl
and
into
lret
mov
test
mov
sbb
sub
fdivl
pop
stc
push
ret
jns
jmp
and
jne
dec
mov
stc
push
and
sub
mov
xchg
je
or
jns
and
and
push
and
addr16
and
sub
push
add
sarb
push
daa
push
aam
cmp
adc
cs
jb
mov
sub
dec
dec
loope
jns
jno
and
sub
mov
push
fistpll
cltd
and
push
mov
push
add
and
mov
in
test
and
cli
aaa
decb
sub
dec
cltd
xor
shll
filds
xor
and
and
arpl
cmc
aam
loopne
int3
sub
mov
sbb
sbb
adc
and
fidivs
das
xchg
std
sbb
cmp
and
xchg
cmp
and
mov
loop
adc
aad
aas
fstl
and
cli
cmp
and
xor
xchg
dec
icebp
sbb
mov
loope
fiadds
inc
push
sbb
or
stos
ja
mov
mov
jne
test
dec
fst
or
mov
and
push
inc
pop
jae
loopne
add
lods
loope
xor
repz
cmp
les
test
dec
scas
and
cmp
aam
sbb
pop
icebp
aas
and
push
arpl
xchg
mov
loopne
and
sub
mov
fsubl
sub
mov
sbb
sbb
and
pop
das
or
leave
lret
outsb
push
sbbl
sbb
push
test
and
and
call
push
and
push
jbe
sub
push
ror
mov
xchg
outsl
adc
fwait
pop
dec
and
push
ret
test
mull
loope
stos
push
pop
dec
and
in
in
aas
mov
pop
ss
leave
cmp
fstl
mov
jnp
fcomps
jp
push
repnz
ss
out
fists
and
and
scas
cmp
cmp
and
adc
jl
jnp
xor
xchg
and
xchg
mov
cmp
and
mov
leave
xor
mov
adc
push
jl
pop
xchg
adc
jns
pop
mov
sub
andb
dec
iret
and
fcoml
test
jle
cmp
jl
add
fs
in
sbb
aad
xchg
jo
bound
scas
movsb
and
popf
stc
adc
cmp
lcall
push
daa
mov
and
sub
dec
mov
add
popf
pushl
push
jno
addl
test
cmp
xchg
dec
dec
imul
lock
jle
add
mov
inc
popa
xchg
cltd
popf
out
mov
stos
mov
scas
mov
adc
or
push
inc
xchg
jp
popf
xor
pushw
pop
mov
sti
aas
cli
idivb
xor
xor
sub
adc
xor
xchg
repnz
sbb
dec
dec
sahf
lds
push
loop
push
and
xor
inc
cmpsl
int
and
sbb
and
das
xor
sub
cs
and
ds
and
xchg
inc
add
incb
ret
ja
vmread
ljmp
push
fiaddl
push
cmp
cli
fs
cli
push
mov
mov
and
fisubs
sub
stos
loop
in
rclb
jp
in
test
aam
enter
add
and
jb
call
inc
bound
dec
int3
arpl
dec
cmp
and
dec
scas
xor
push
mov
xor
out
jecxz
ss
iret
loop
sub
jge
and
mov
pushf
sub
stos
addr16
or
pop
and
inc
and
jno
dec
dec
jl
xchg
push
sbb
mov
mov
dec
movb
pusha
or
pop
pop
and
sub
lods
mov
add
and
push
fidivl
ds
mov
int3
popa
push
mov
sub
sub
pop
in
and
mov
stc
sub
loop
pop
jo
loop
cmp
mov
and
or
mov
rclb
sbb
and
mov
dec
sub
mov
sbb
daa
jo
andl
inc
and
pop
ficomps
je
mov
xor
sti
and
mov
daa
and
jg
pushf
jnp
and
xchg
je
or
aas
push
lret
pop
dec
cmp
xchg
xlat
inc
and
scas
lods
add
sub
sbbb
fidivrs
adc
aad
and
and
jecxz
sbb
divps
aas
sub
mov
scas
ret
xor
or
and
pop
and
pop
cmc
sbb
and
push
dec
test
and
punpckldq
push
pop
push
and
fwait
push
pop
dec
outsb
push
add
and
sbb
and
and
loope
mov
or
fbld
cltd
ljmp
and
daa
add
jge
jnp
pop
cmp
and
mov
cs
ret
cld
xor
cwtl
and
cmp
push
das
pusha
and
aas
sbb
add
adc
and
clc
jns
and
push
inc
jae
or
pop
stc
sbb
inc
sar
adc
pusha
aas
push
sub
ds
mov
or
xchg
and
and
inc
xor
sbb
ljmp
outsb
sbb
and
and
cmp
or
push
das
mov
pushf
push
shufps
rclb
and
lock
ds
lcall
dec
mov
xchg
sbb
sbb
icebp
test
lahf
and
jp
out
push
pop
and
int3
stc
cltd
xchg
mov
sub
test
and
and
mov
sti
jg
adc
xor
fsqrt
das
mov
inc
cmp
arpl
fiadds
cld
ret
and
fisttpll
movsb
mov
lahf
outsl
fists
jge
call
cmp
arpl
and
shrb
fbstp
nop
rcrb
inc
mov
stc
mov
mov
mov
xchg
aaa
subb
adc
gs
add
and
movsb
and
popa
cmpb
in
adc
iret
and
pop
jg
testb
mov
dec
int3
lock
and
or
cs
loop
bound
sbb
sbb
stos
and
mov
and
and
sub
jle
fwait
scas
nop
shll
xlat
xchg
imul
popf
sub
loop
jge
test
push
cmp
or
pop
in
sub
pop
shlb
and
mov
out
push
xor
mov
push
ret
xchg
and
cwtl
sti
or
xchg
push
mov
ljmp
adc
sti
xabort
mov
insb
and
inc
add
cmp
adc
mov
add
and
icebp
ljmp
add
lret
or
or
in
push
and
or
inc
aas
fsubrl
xor
shrl
add
loop
repz
or
call
and
leave
adcl
and
or
out
shrb
lahf
loop
fbld
add
xor
mov
and
out
add
leave
sbb
cmp
and
add
push
push
ja
inc
jecxz
add
push
shr
nop
scas
xor
sti
ss
mov
cmpsb
loop
pushf
ficoml
xor
movsl
mov
ds
fnstenv
es
bound
stos
push
and
pop
and
pop
sti
inc
adc
sbb
lahf
fimull
adc
out
push
and
test
fbld
and
mov
push
adc
lods
pushf
or
pop
push
bound
sbb
mov
jbe
pop
stos
or
scas
and
and
mov
jne
insb
mov
lods
and
pop
sbbb
aad
cmp
jl
pop
pop
ror
and
jne
dec
and
adc
test
test
jle
cmp
icebp
push
and
ja
popf
adc
arpl
and
cmp
push
sbb
mov
sub
xchg
jb
xchg
xchg
adc
and
shlb
jne
inc
jl
cmp
or
mov
mov
das
pop
pop
and
es
push
jmp
loop
jnp
and
mov
add
mov
push
sbb
xchg
imul
and
les
mov
pop
fdivl
inc
and
stc
iret
repz
or
cmpsl
jmp
and
jnp
push
mov
mov
sbb
js
in
ds
push
iret
sub
and
sbb
and
inc
cmc
out
inc
jb
dec
xor
and
cmpsl
in
sub
ret
mov
decl
into
mov
data16
js
out
push
out
sub
and
ret
fcoms
and
outsb
iret
scas
and
shlb
cli
or
push
or
or
or
xchg
xchg
addr16
fs
scas
iret
mov
jnp
ljmp
loopne
ds
cs
iret
daa
jecxz
mov
arpl
mov
mulb
jl,pn
push
ficomps
mov
push
ficoml
and
dec
cmp
pop
mov
pushl
inc
jmp
sub
ret
shll
adc
xchg
bound
ficomps
jae
pop
bound
es
add
and
les
fiadds
aas
js
shlb
cmc
and
cmpsl
xchg
into
fbld
and
push
cmp
and
inc
ficomps
and
inc
cmp
inc
rorl
sub
push
sub
popf
jmp
push
into
inc
adc
bound
ss
add
and
sbb
or
pop
pusha
mov
popw
aad
gs
mov
shl
push
lret
jle
repz
cmp
sub
push
jmp
adc
jae
adc
xchg
adc
and
cmp
jnp
outsb
pop
and
adc
je
and
cmp
mov
call
repnz
mov
and
mov
pop
sbb
lret
in
cmpsl
pushf
push
cmp
and
dec
push
xchg
mov
and
mov
xor
insl
cwtl
pop
dec
sub
jmp
inc
sub
mov
mov
scas
cli
inc
xchg
imul
inc
stos
mov
and
popf
hlt
mov
pop
mov
lret
lcall
and
push
scas
and
test
inc
or
int
and
lea
ds
pusha
and
push
ljmp
fisubl
loop
inc
sti
aad
and
stos
cmp
cmpsl
push
hlt
mov
and
mov
push
cwtl
sub
out
pop
loop
push
sbb
and
sahf
jecxz
cmp
jmp
cltd
inc
and
push
mov
jno
lret
fisubrs
je
nop
and
and
adc
and
xor
adc
push
jg
push
adc
fstl
sub
push
test
fcmovu
fadd
and
sbb
loop
clc
push
aas
and
ret
cld
cwtl
xchg
sub
lret
std
test
popf
and
lret
sub
into
mov
js
adc
xor
sub
sbb
mov
push
ds
push
rol
bound
xchg
loope
and
ds
jmp
xor
and
fdivl
mov
pop
js
sbb
out
cmp
mov
jno
and
sbb
dec
inc
push
xor
or
shrb
ljmp
imul
das
xor
into
popa
into
or
shl
cmovno
xor
jmp
sub
ljmp
jns
outsl
fwait
cpuid
ds
daa
shlb
sub
and
imul
popa
push
and
xchg
jno
xchg
and
repz
loope
stc
ffreep
jb
insl
and
dec
xor
das
and
xchg
add
loope
push
push
mov
inc
mov
sti
sub
adc
int3
daa
and
jg
jge
test
push
sub
push
cli
xchg
and
pop
xor
pop
int3
pop
add
and
popf
ss
adc
push
adc
bt
std
sub
arpl
idivl
push
loope
ds
push
in
jl
insl
xor
cli
sub
push
mov
stc
dec
add
and
mov
cli
mov
and
mov
jb
pop
and
push
int3
sbbb
cmp
and
jo
jae
xchg
loop
mov
lcall
orb
scas
and
push
mov
stos
aas
dec
lcall
mov
mov
and
xor
xchg
xor
mov
dec
cli
fwait
lods
and
push
sbb
leave
aam
aas
addr16
loope
cs
add
mov
adc
ret
sub
in
xor
jnp
and
mov
push
scas
popa
repnz
daa
frstor
rclb
adc
xchg
cmp
and
rolb
sbb
sub
outsb
jge
dec
outsb
push
int
pop
pushf
and
cmp
ds
inc
mov
xchg
cli
and
insl
cmpsb
mov
dec
jo
push
sti
lret
stos
sbb
add
and
inc
inc
and
mov
jle
jp
cmpsl
enter
loopne
and
and
and
pop
stos
sub
lcall
daa
mov
movb
test
xor
das
jo
into
inc
push
ja
mov
stos
adc
mov
adc
sbb
cmpsl
bound
adc
decl
push
dec
and
jp
fbld
xchg
aam
sub
sub
lock
push
pop
jecxz
pop
es
sbb
push
loop
xchg
dec
je
imul
jp
inc
int
mov
and
cli
jno
xchg
hlt
loop
add
aam
xchg
pop
push
dec
and
repz
ds
stc
or
ret
fs
and
adc
stos
and
ss
in
jl
and
xlat
test
loopne
cmp
xchg
dec
and
stos
insb
sub
xor
jo
jae
cli
in
mov
xchg
and
ja
and
push
push
and
and
in
movb
sbb
lock
xchg
fdivp
shll
shl
push
fs
and
bound
aaa
cli
test
loope
dec
sbb
push
jp
inc
and
mov
inc
mov
movsb
inc
adc
and
outsl
inc
andl
and
enter
add
add
pop
and
aam
adc
push
sbb
icebp
and
cmp
imul
out
lods
pop
adc
bound
adc
mov
pop
push
and
dec
jne
sbb
fwait
outsl
imul
lods
das
push
movsl
sub
push
jnp
mov
and
push
pop
mov
and
lahf
test
aad
and
sti
loop
lahf
ret
scas
jge
and
pushf
gs
leave
or
push
sub
add
mov
xor
push
mov
and
adc
sub
loop
mov
fwait
pop
shl
int3
mov
pop
repnz
lcall
and
cmp
and
or
das
inc
cmp
sub
test
mov
and
mov
stos
cmpsb
xor
sub
dec
scas
jbe
add
push
and
mov
mov
insl
pushf
mov
dec
xchg
cmp
mov
and
xchg
mov
cmp
fs
add
inc
or
out
daa
jns
sub
jecxz
lods
push
in
cmp
je
sub
mov
bound
sbb
pusha
and
jb
lcall
xor
ret
push
lret
sbb
adc
and
jmp
push
and
lret
roll
fwait
addr16
xchg
add
cmp
jne
cmp
shr
jbe
and
pop
pushf
sub
xchg
push
cmp
push
mov
lret
aad
pusha
loop
mov
sbb
sub
push
dec
pushf
and
jg
sbb
fildll
jnp
movsl
add
cltd
and
js
pop
pusha
gs
add
cli
fsts
mov
jb
and
and
push
lods
jno
xor
sub
inc
in
loop
jmp
push
or
fisubs
daa
lahf
mov
xchg
bound
fisubl
shlb
nop
and
dec
sub
and
dec
push
pop
mov
je
mov
xor
lcall
ljmp
sub
sbb
and
xchg
mov
ds
sub
sbb
fstpl
sub
fidivrl
aad
icebp
push
xchg
pop
iret
lea
shrl
int
or
cmpsb
std
inc
enter
loop
ss
and
out
xchg
test
inc
int
sub
ficoms
adc
and
push
jle
fisttps
lret
arpl
cmc
bound
jge
jb
mov
and
rorb
lods
mov
xor
int
jecxz
lret
aad
and
addr16
push
and
cltd
fdivl
adc
orb
jg
inc
sbb
adc
sub
or
and
in
loopne
xor
push
adc
jae
cmp
push
and
ficoml
lret
xchg
cmp
fwait
sub
jecxz
ret
in
xchg
jge
and
fsts
cli
jmp
pop
mov
rorl
inc
es
xor
push
mov
cmp
jge
lds
mov
push
icebp
outsb
and
push
inc
mov
outsb
push
jb
lcall
fldt
and
and
jae
or
rcrb
mov
cmp
leave
ljmp
jle
mov
and
rolb
and
arpl
in
cmc
adc
sub
dec
and
and
fisubl
repz
stos
add
sub
imul
leave
xlat
mov
ljmp
cmp
out
mov
repz
repnz
call
cmp
sub
shlb
push
loopne
and
and
and
add
sub
and
xchg
and
push
sti
adc
pop
arpl
loopne
in
and
xor
sub
xchg
shrb
add
inc
jecxz
cmpsl
int3
jne
aas
arpl
int3
addl
fidivl
mov
imul
dec
sub
dec
int3
andl
adc
dec
and
mov
inc
mov
nop
dec
lea
sub
bound
and
mov
icebp
push
je
mov
jl
movsb
decb
mov
out
sub
ret
and
jmp
sbb
jmp
push
xchg
sarb
dec
aas
ljmp
insb
and
outsl
add
and
movsl
pop
jb
xchg
fmul
and
les
push
cmp
add
dec
mov
pop
pop
dec
and
push
addl
dec
lcall
push
mov
xchg
and
scas
inc
dec
and
push
jno
sub
and
fisubl
fdivs
add
stos
jle
stc
mov
inc
sub
cmp
xor
fsubrl
and
daa
stos
mov
ret
pop
jno
pop
sub
pop
jnp
sub
lods
pushf
fisubrs
and
es
shlb
add
mov
cmp
and
js
and
fwait
rolb
mov
mov
and
filds
push
sbb
sub
ret
mov
shll
jno
leave
jns
stos
jle
movsl
dec
mov
mov
add
pop
and
stc
add
sbb
and
jne
xchg
test
adc
out
mov
bound
cmp
jg
sub
xchg
aas
or
scas
and
mov
push
add
popf
inc
test
cmp
push
push
and
adc
arpl
call
add
and
clc
pop
stc
and
or
test
stos
xorl
into
in
sti
fs
lret
and
cmpsl
inc
mov
cs
mov
lcall
push
and
pop
fldenv
dec
cmp
and
inc
mov
hlt
mov
inc
sbb
int
inc
cmp
pop
and
xor
xor
or
or
jle
xchg
and
sahf
pop
repz
fwait
aad
rorl
and
and
inc
jb
sbb
dec
jns
mov
mov
mov
hlt
inc
test
sub
ret
sub
push
xor
gs
sbb
sti
xor
sti
loopne
int3
push
ror
and
test
ljmp
adc
xor
fisubrl
jo
lcall
mov
mov
hlt
mov
xchg
inc
push
push
add
sub
mov
fidivrl
adc
aas
popa
gs
jnp
ret
test
sub
pop
popf
and
xor
pop
adc
sub
and
or
mov
adc
cmp
enter
test
das
push
adc
sbb
stos
mov
cmp
sti
and
jp
sbb
test
jmp
int
jb
mov
je
test
dec
int3
mov
shlb
sub
fsubrs
xchg
and
lods
xor
inc
ret
and
and
ffree
jge
sbb
jecxz
or
and
and
sub
sub
push
inc
rcll
and
sbb
fnstenv
pop
cmp
cmp
pop
ja
mov
fstpl
sahf
and
and
jge
in
lods
push
xchg
dec
loopne
and
jae
clc
and
cmp
aad
fstpl
mov
and
pop
lret
les
push
sub
push
rcrl
pushf
ja,pn
lahf
and
das
xchg
adc
pop
jg
scas
into
je
jecxz
and
jo
ret
int
ret
sar
aas
and
iret
stc
dec
es
out
pop
es
jg
iret
jge
ret
and
js
ds
ljmp
call
lds
sahf
cs
and
mov
out
sbb
leave
sub
mov
jecxz
and
jp
lock
cmp
lcall
hlt
xor
xor
and
in
fiaddl
popa
stc
xor
loop
ljmp
mov
mov
pop
adc
pop
and
xchg
stc
mov
dec
and
push
mov
loop,pt
and
stos
add
andb
xchg
and
jno
ficompl
mov
add
inc
and
ss
std
mov
and
cld
mov
push
cmp
jge
sub
in
and
push
dec
sbb
cmpb
test
and
mov
lock
int
or
addb
and
push
sbb
int3
and
push
cmp
or
push
scas
fdivr
sbb
stos
movsb
jp
pop
lods
add
test
jecxz
and
lcall
fs
sbb
mov
insb
ss
clc
loope
leave
sub
pop
and
xchg
push
loopne
sar
mov
mov
stos
and
in
adc
adc
test
add
mov
push
jl
sbb
cmp
aas
xor
sbb
in
xchg
loop
push
xor
cmp
mov
and
and
sbb
mov
outsl
or
inc
jnp
and
loop
and
sbb
loop
and
mov
jb
mulb
mov
and
movsb
jns
jle
fs
push
cmp
popa
and
jae
or
add
cwtl
lds
and
xchg
je
cmp
and
xor
mov
subb
das
mov
in
and
ret
dec
xchg
hlt
and
in
andb
cmp
cvttps2pi
push
and
and
ret
mov
ss
xor
mov
and
inc
jecxz
int3
je
ljmp
jne
rcrb
and
mov
cli
repnz
aam
cmc
sub
sub
and
jl
add
enter
cmp
imulb
clc
cmp
fisubrl
and
push
or
and
mov
add
and
mov
rcrl
test
xchg
repnz
fsubl
mov
sarl
les
repnz
mov
loop
gs
ds
loop
cmp
and
test
jecxz
and
and
fimull
ss
lock
arpl
mov
sarb
andb
inc
fcmovbe
sub
sbb
and
in
cs
mov
addr16
jle
enter
add
sbb
aaa
into
and
fisttpll
xorb
and
fstps
addr16
push
popf
test
dec
dec
push
inc
je
ds
and
push
daa
sub
pop
mov
and
add
and
inc
add
push
aas
mov
push
and
jne
shl
cmpl
les
outsb
inc
sub
cmp
jo
cmp
bound
dec
outsb
and
xor
sub
and
xchg
sub
cmp
and
cs
mov
and
das
jns
mov
xor
mov
lret
and
mov
outsb
clc
and
arpl
pop
sti
sub
xchg
stos
cmpsb
sub
inc
sti
jecxz
dec
and
ficoml
fmuls
frstor
and
jbe
add
stos
xor
das
ljmp
pop
pop
lret
mov
push
test
cmpsb
and
jmp
and
sub
mov
xchg
sbb
gs
sbb
scas
push
jae
push
jle
sub
pop
outsb
push
imul
ret
insb
and
popa
xchg
sbb
jmp
fwait
mov
ret
jnp
adc
cmpsb
iret
pusha
mov
ds
dec
bound
jecxz
lods
cli
and
arpl
jl
add
test
and
and
lock
sbb
jle
sbb
inc
mov
imul
sub
adc
rclb
cmp
cmp
xor
sti
push
arpl
shll
jne
dec
nopl
inc
scas
outsl
cs
fisttpll
and
push
push
jne
mov
adc
dec
aaa
in
add
jns
xor
sub
cmp
mov
in
or
inc
pop
mov
jb
pusha
push
std
jne
jns
mov
xlat
xchg
mov
and
pop
je
adc
jecxz
sub
loope
adc
loop
cs
and
xor
and
repz
dec
and
repz
mov
lcall
fmull
stc
repnz
adc
push
mov
lcall
jnp
test
dec
and
and
push
pop
ret
and
xchg
out
and
or
test
hlt
and
dec
dec
inc
jge
sbb
sbb
and
or
aaa
sub
fidivrl
ret
es
pop
stos
and
inc
cmp
and
sbb
or
sbb
push
in
fisubl
mov
pop
adc
ret
and
mov
popf
sub
ficompl
leave
dec
push
and
add
lcall
push
push
add
jecxz
cmp
jg
ret
and
pop
cmp
nop
aas
push
add
loop
loope
sahf
in
in
ds
int
loop
mov
adc
loopne
add
dec
sbb
sbb
scas
lret
out
out
mov
sub
mov
and
mov
std
int3
cwtl
sub
daa
leave
ss
pop
aas
sub
cmp
orb
jb
and
stos
icebp
pop
fs
das
and
mov
and
mov
cmp
pop
sbb
and
pusha
and
rorb
ja
cmp
aaa
push
mov
mov
sub
out
sub
jno
cmpsl
inc
add
and
inc
and
loop
mov
sub
cs
jnp
dec
mov
xlat
mov
lret
or
and
and
jge
and
or
and
stc
cmp
add
pop
scas
aas
xchg
jmp
loope
lret
jns
pop
pop
inc
dec
adc
sbb
sbb
aam
mov
and
mov
xchg
pop
ret
sub
subb
xchg
and
test
pop
shlb
movl
aaa
fwait
cmp
xchg
xchg
adc
bound
ljmp
das
sub
cs
mov
pop
leave
je
loop
and
and
rcrb
lcall
nop
xchg
repnz
cmp
cmp
test
push
mov
and
aad
mull
and
mov
cltd
inc
jecxz
mov
jnp
and
mov
into
pop
repnz
add
inc
sub
add
outsl
and
sbb
xchg
jecxz
popf
orb
mov
lcall
xor
outsb
out
sub
testb
jecxz
dec
sub
cs
scas
adc
xor
fimuls
jbe
mov
push
and
sub
test
fwait
add
lcall
inc
cltd
adc
add
mov
xor
push
loope
iret
outsb
loopne
mov
push
jb
and
es
adc
inc
daa
add
mov
jp
mov
xor
imul
insl
and
loop
ret
clc
imul
cmp
xchg
add
cli
aad
jecxz
and
mov
inc
sbb
imul
out
repnz
cmpsb
mov
test
ret
mov
je
pop
push
xchg
shrb
xor
mov
and
push
xorb
outsl
cmp
and
adcb
fcmovbe
and
imul
and
and
jl,pt
or
dec
mov
mov
imul
or
or
jecxz
lods
loopne
xor
and
mov
insb
call
into
ds
add
nop
movsb
push
outsb
and
jnp
jb
aam
xor
push
cmp
js
sub
cmp
mov
test
push
and
insl
and
sbb
adc
hlt
test
or
mov
xchg
mov
je
and
test
aad
fistps
mov
orb
adc
add
cmp
and
jbe
cs
inc
push
loope
and
std
sub
push
sub
and
out
or
xchg
add
sbb
add
es
and
repz
loop
cmp
sub
lahf
push
cld
pushf
jecxz
sub
mov
stos
mov
cmp
imul
dec
fcoms
and
jb
and
adc
jmp
mov
sub
add
cmc
ss
xchg
xorl
xor
or
into
gs
std
xchg
cmp
aas
dec
push
and
test
ds
pop
loop
fistpll
adc
lret
je
sub
and
push
sub
or
nop
jae
inc
dec
and
mov
or
cli
mov
push
cmp
sahf
sub
adc
je
ljmp
sub
dec
and
test
and
das
shlb
aad
push
pop
and
ja
sbb
bound
test
and
xor
aaa
icebp
mov
xchg
push
inc
push
sub
cmp
add
mov
dec
push
jb
repz
push
or
lods
mov
and
je
and
sbb
and
mov
add
loope
and
xorl
and
leave
aas
add
inc
mov
rorb
cs
mov
and
sbb
and
push
es
call
sbb
push
and
gs
and
xchg
and
imul
pop
fidivl
into
cmpsl
ds
packuswb
imul
hlt
loop
in
jae
and
xchg
mov
cmp
push
dec
cmpb
incb
jmp
repnz
cmp
movsb
dec
mov
out
ds
in
push
and
push
xor
push
adc
or
pusha
and
pop
f2xm1
imul
and
mov
ds
cmpsb
ss
and
mov
inc
fisubs
push
jne
cli
dec
fistps
mov
or
fs
je
jne
and
or
in
sub
and
xchg
jp
sarb
es
adc
cs
bound
pop
mov
cmp
js
push
ret
sub
divb
sub
cmp
lahf
cmp
jmp
fsubrs
movsl
cmp
xchg
push
add
and
xor
dec
ja
add
rcl
xor
out
add
push
ret
and
call
and
fcoms
and
cmp
dec
xor
xor
or
push
and
ds
fldenv
shlb
xor
jl
cmp
mov
decl
loop
fcoms
arpl
adc
cli
adc
sub
subl
jb
cmpsl
mov
out
and
lahf
xor
das
xchg
add
and
int3
fld1
fwait
mov
mov
and
and
jno
and
cmp
pop
pop
cmp
sub
fwait
pop
dec
add
popa
xor
push
ds
pop
xor
cmp
pushf
xchg
fidivrl
push
and
inc
and
cmc
inc
inc
and
xor
sbb
and
sub
add
pop
in
sub
sub
movsl
cltd
add
nop
leave
mov
mov
cs
in
and
loop
bound
inc
les
data16
sub
dec
bound
cmp
subl
sti
xchg
popf
push
add
lret
fcmovu
add
and
popf
mov
test
push
jnp
xor
and
cmpsb
ds
cli
leave
jle
stos
cmp
dec
jge
add
sub
and
in
mov
mov
js
dec
cli
mov
pop
mov
inc
daa
adc
and
pop
push
jecxz
cmp
mov
repnz
inc
inc
jne
adc
jg
push
add
ret
and
push
ljmp
bound
or
insb
inc
push
testb
push
sub
adc
and
xchg
and
hlt
push
insl
inc
iret
into
push
mov
cmpsl
rolb
cwtl
popf
and
ja
test
xor
mov
cmp
mov
jnp
test
jbe
pop
stc
and
add
mov
and
rolb
loop
outsb
pop
push
and
bound
sub
push
lods
sub
mov
loop
mov
and
push
jbe
and
shr
sbb
and
outsb
pop
repz
and
jns
rcrl
xchg
fidivs
int3
dec
fcmovbe
scas
and
rclb
and
add
mov
dec
and
in
test
dec
cmp
mov
rcll
jne
pop
sahf
xlat
pop
xchg
pop
cmp
cs
outsb
pop
add
ss
test
cmc
imul
dec
mov
and
and
sbb
imul
fsubp
lret
loop
leave
and
mov
cld
mov
xchg
sbb
and
push
mov
iret
les
or
gs
mov
fcmovu
pop
and
push
mov
mov
popf
and
xchg
imul
mulb
and
push
cltd
dec
fnsave
inc
dec
xor
test
stos
and
and
sub
jecxz
in
and
fisubl
aam
jecxz
je
out
mov
and
pop
sub
dec
xlat
psrld
sbb
shrl
addr16
dec
sub
dec
push
das
test
jb
jecxz
repz
push
and
or
leave
lcall
in
pop
loope
and
adc
and
and
mov
popa
and
pop
xchg
shll
mov
and
cmp
xchg
sar
aaa
insb
cmp
sub
add
fmuls
into
imul
ss
xor
stc
cs
ljmp
cmp
in
out
xor
sub
push
lcall
scas
push
cltd
int3
ret
jmp
mov
std
mov
xchg
ds
and
push
and
into
and
cld
push
lret
clc
jecxz
sbb
lock
bound
add
xor
loope
repnz
xchg
and
popa
mov
and
ja
sub
xchg
fstpl
pop
mov
sub
and
jbe
pop
mov
sbb
es
icebp
and
mov
add
aam
or
sti
imul
dec
into
cmp
xchg
cmp
hlt
fisubl
sbb
mov
mov
shrb
rolb
sbb
pop
andl
or
pushf
incl
insb
dec
cmp
jle
loop
add
and
stos
cmp
fisubs
cmp
ds
push
push
or
xor
bound
push
xchg
push
xchg
sub
sahf
push
iret
stos
sub
jmp
je
xor
cmp
and
jnp
push
int
stos
mov
push
mov
cmc
dec
shll
test
mov
loopne
leave
cmp
xchg
cmp
cmovnp
js
mov
and
mov
cli
push
inc
push
pmulhuw
and
loope
add
xchg
in
and
jb
sub
inc
fwait
inc
sub
jg
and
cmc
cmp
sbb
mov
push
scas
mov
mov
push
mov
je
sub
imul
mov
icebp
bound
cmp
and
imul
mov
js
xchg
nop
add
push
push
and
aad
mov
xor
jno
and
pushf
add
pusha
inc
into
aaa
add
mov
push
ret
aam
lahf
sub
add
push
jle
pop
out
push
push
xchg
and
or
mov
nop
ficoml
add
and
repnz
not
minps
les
add
adc
fs
jb
mov
xchg
mov
das
mov
sub
repz
ja
mov
xor
jns
ds
div
push
xlat
ljmp
pusha
push
xlat
pushl
repz
les
inc
repz
pop
stc
inc
cmc
test
sbb
and
cmp
sub
and
das
inc
into
jl
add
and
mov
loopne
sub
test
or
and
stc
inc
sub
clc
or
bound
je
icebp
dec
andb
jp
push
popf
push
sub
hlt
or
push
sub
and
jg
sahf
cmp
jo
dec
fiaddl
dec
dec
sub
test
jns
inc
and
fistl
movsl
jb
push
and
imul
and
sbb
arpl
aas
and
pop
and
cmp
sub
daa
adc
or
and
mov
bound
inc
lea
and
sub
inc
push
adcb
lods
add
add
xor
and
popa
out
sub
sbb
stos
add
adc
sbb
and
div
scas
jb
mov
sbb
ja
fstl
daa
and
loop
push
mov
stos
aas
and
pop
imul
je
bound
and
aas
daa
xor
adc
mov
jnp
dec
mov
push
and
insb
dec
push
push
stos
and
and
addr16
mov
and
mov
push
add
sbb
pushf
dec
sub
mov
and
push
and
jno
mov
xchg
xchg
pusha
mov
add
inc
test
sub
mov
insl
xchg
jecxz
leave
dec
jno
sub
cmp
js
sbb
dec
daa
mov
inc
jns
push
add
and
and
push
and
dec
popf
out
xor
mov
sub
sub
sahf
mov
cmp
fisubs
mov
outsl
cmc
and
and
cmp
and
mov
daa
pop
scas
mov
test
cmpsl
mov
jge
or
jl
mov
push
sub
xlat
jle
sbb
lcall
and
mov
xor
lods
sub
js
add
testl
sbb
scas
lcall
and
pushf
pop
mov
repnz
fistps
and
mov
repnz
dec
test
int3
and
jo
mov
push
and
scas
add
movsl
xor
and
adc
fcmovu
xchg
fstl
and
fs
loop
dec
and
bound
les
pop
daa
jnp
cwtl
mov
and
test
lods
and
js
add
daa
or
adc
ret
and
jl
je
and
es
and
fstpt
out
sbb
push
pop
scas
addr16
mov
inc
push
in
push
pop
and
aam
lcall
jb
xor
das
or
fcomps
and
hlt
add
and
scas
or
sbb
sub
sbb
nop
push
das
ficompl
cmp
shlb
stos
cwtl
sbb
sub
and
mov
out
ret
loope
inc
int3
jns
push
gs
inc
mov
adc
and
pop
adc
cmpsl
sub
mov
in
lret
pop
xor
and
ret
lret
xchg
outsl
sub
and
or
out
mov
mov
fcomip
jle
push
and
cmp
and
push
scas
add
and
sub
sub
push
je
inc
loop
mov
mov
mov
cwtl
jp
and
jne
add
pop
and
fidivl
push
dec
gs
mov
repz
pop
hlt
jae
push
mov
xor
sub
push
sbb
and
jno
leave
xchg
and
fnstcw
dec
sbb
jg
pop
mov
jmp
and
pop
arpl
and
popa
shlb
dec
jo
and
mov
mov
fistps
loop
mov
mov
ss
jne
pop
ret
jo
sub
add
sub
xor
lret
push
dec
and
test
mov
mov
pushf
push
repnz
and
and
and
or
andb
mov
push
push
push
dec
pop
and
scas
add
ret
loopne
jno
cs
and
adc
dec
push
mov
xchg
movsb
sbb
mov
popf
ret
pushf
and
or
cmpsb
repz
lahf
andb
mov
sbb
mov
ja
int3
mov
fisubl
push
mull
addr16
mov
and
pop
jecxz
das
ds
or
inc
cld
and
and
sarb
rcl
and
mov
lcall
push
cmp
loop
in
xchg
mov
test
ficoms
sub
inc
movsb
bound
das
mov
mov
ret
and
push
stc
mov
jb
fsubl
mov
jno
outsl
inc
sbb
adc
popa
imul
outsb
jb
leave
add
and
daa
pop
inc
push
xor
jns
cmp
add
mov
aas
ljmp
adc
and
jl
cs
and
shll
inc
push
stos
adc
mov
add
fsubs
repz
jle
test
and
leave
repnz
jnp
and
loop
fwait
inc
xor
addr16
xor
push
xchg
and
lock
les
push
icebp
sub
lds
fs
into
add
xchg
outsb
outsl
jcxz
mov
out
and
stos
push
and
mov
inc
aad
lret
mov
pop
in
std
mov
test
sbb
add
cmp
incb
mov
mov
sbb
dec
and
cmpsb
int
sub
and
mov
ret
and
jecxz
xorb
adc
aas
add
and
xor
cli
cmpb
fidivs
out
dec
movsl
push
xor
push
and
mov
and
jp
push
fcoms
mov
cli
and
daa
scas
movsb
loop
fiadds
and
cmp
add
fisubrl
testb
pop
bound
and
push
cmp
push
fcmovb
cmovnp
stos
cmp
mov
pop
and
dec
inc
or
or
into
sub
and
xchg
mov
leave
sub
enter
andl
mov
cmpsl
push
and
loope
inc
insl
insb
aaa
leave
adc
shlb
roll
cmp
arpl
cmpl
and
test
xor
push
and
inc
orl
mov
mov
mov
js
inc
lret
mov
adc
test
sub
decb
bound
and
adc
loop
and
int
in
jne
outsl
jmp
cmp
lcall
mov
lret
lret
and
dec
aas
ret
cmp
rcrb
das
jo
push
and
cmp
stos
shlb
fistpl
jb
dec
and
push
fimuls
outsb
jmp
lea
and
lret
xchg
and
xlat
dec
data16
inc
xor
in
fimull
loop
or
xor
jecxz
cmp
sub
scas
push
mov
push
lcall
push
scas
inc
jl
xor
sbb
cmp
mov
fisubl
add
fadds
pop
pop
or
loopne
jecxz
repnz
and
into
ja
in
stc
lret
cmpsb
and
test
sub
sub
and
lret
arpl
pusha
and
fsubs
pop
shll
mov
imul
fisttpll
add
and
jecxz
rorl
inc
stos
xor
push
outsl
sub
movsl
cmc
mov
ss
dec
xchg
imulb
pop
in
stos
jp
daa
addb
sbb
ljmp
jae
pop
jp
pop
and
in
adc
sbb
jp
mov
das
adc
loope
out
sub
fdivr
inc
rolb
push
jge
loope
shlb
dec
push
je
movsl
and
ret
inc
test
push
sub
dec
mov
and
add
outsl
sub
and
jge
ret
aas
xchg
jecxz
and
pop
out
or
push
sbb
jge
push
mov
shll
and
addl
mov
inc
fisubl
bound
dec
notb
and
cmpsl
and
cmp
inc
andl
mov
sub
popa
push
fnsave
arpl
and
pop
mov
and
cmp
jnp
das
pop
in
data16
fwait
movsl
aad
ljmp
fdiv
push
cmpb
mov
and
in
cmc
scas
rclb
popf
push
add
iret
sbb
and
and
inc
movsl
pop
xchg
je
push
sbb
bound
push
add
sub
push
repnz
ja
sub
jmp
adc
and
shl
jl
dec
mov
sub
cli
add
and
inc
pushf
mov
push
fidivrs
repnz
in
and
pop
loop
lods
or
mov
aas
loopne
mov
sbb
and
push
jb
mov
sbb
pop
lcall
loope
sbb
pop
mov
enter
or
push
mov
ds
mov
cmp
aam
xor
push
stc
nop
sbbl
andl
mov
and
mov
ja
aad
outsb
addr16
loop
ljmp
mov
aam
daa
xor
bound
xor
loop
stos
cmp
mov
loope
dec
mov
and
mov
jl
cmp
and
mov
addr16
dec
and
add
and
mov
sub
and
mov
ds
pop
popf
and
shrb
movsl
lret
cmp
ret
cli
and
dec
jb
inc
xor
adc
and
jp
sti
mov
stc
mov
test
sub
xor
and
test
jno
cmovs
xor
cmp
sub
adc
ja
dec
and
scas
push
jo
mov
in
xchg
jb
bound
and
xor
add
pop
jae
and
xchg
mov
loop
jb
aas
sub
sbb
push
xchg
and
xor
bound
out
and
mov
lret
scas
loopne
sbb
aas
adc
bound
push
loop
xor
sbb
addl
lretw
in
mov
push
cwtl
aad
dec
inc
and
pop
add
mov
pop
push
and
sbb
adc
and
push
scas
add
adc
fdivl
and
push
or
inc
mov
cmpsb
mov
popf
push
sub
ret
decl
ret
and
and
loop
fs
cs
jae
sub
jo
scas
outsb
loop
repz
and
xor
add
and
fcmovu
and
sub
add
aas
jbe
and
mov
jecxz
push
bound
xchg
or
pop
push
and
and
mov
loopne
mov
cmp
aas
dec
and
and
xor
mov
or
inc
lret
and
pop
bnd
pop
jae
jns
adc
push
into
roll
mov
xchg
and
movb
enter
xchg
not
cli
push
and
icebp
fists
push
push
xor
dec
and
or
add
loop
pop
add
data16
mov
sti
outsb
mov
lret
push
mov
popf
pop
xchg
and
sub
icebp
pop
iret
cs
imul
cmpsl
lahf
les
and
or
andl
xchg
or
jb,pn
cli
mov
and
lret
inc
aaa
int3
jno
out
stc
sbb
rcll
repz
xor
inc
shlb
xor
adc
sbb
mov
pop
test
sub
and
dec
cmp
add
stos
push
sub
or
loop
sub
daa
lcall
dec
add
adc
movsb
sbb
out
push
and
and
das
daa
jmp
mov
insl
push
sub
loope
data16
cmp
and
ja
push
jle
dec
and
jb
mov
scas
lods
cmpsl
fstl
cmpb
sub
insb
and
mov
xor
and
mov
jge
push
and
and
adc
xor
jo
and
fcmovu
pop
daa
push
cmp
mov
cmp
mov
and
pop
xchg
inc
and
push
mov
cli
cmp
out
adc
sbb
outsl
imul
sbb
iret
mov
push
xor
out
decb
ds
xchg
xchg
jbe
and
sub
dec
and
dec
gs
mov
push
mov
out
and
stc
pop
test
loope
push
out
pop
jecxz
or
pop
xchg
xor
inc
cmp
fucomip
cs
sbb
cmp
and
inc
aad
out
xchg
mov
daa
pop
and
es
and
push
pop
imul
test
push
loope
lods
loop
jne
and
nop
xor
mov
shll
insl
sbbb
jge
and
push
sbb
push
mov
and
rorb
and
sbbl
sub
es
jmp
push
and
fisttpl
push
imul
and
repz
cmp
pop
or
daa
mov
and
sub
pop
bound
mov
mov
mov
sbb
jg
and
sub
iret
xchg
dec
fisttpl
and
jno
rcll
dec
insl
arpl
sti
pop
and
xchg
in
and
es
pop
push
fnsave
sub
pop
sub
test
mov
stos
sub
pop
jp
and
mov
or
sub
jne
jo
ljmp
outsl
pop
inc
loope
scas
mov
pop
inc
int
cmp
cmpsl
aad
pushf
std
bound
sub
and
xor
cltd
test
lcall
fildll
adc
jae
bound
dec
daa
mov
mov
sbb
jmp
sub
mov
enter
stos
xchg
out
sbb
js
adcl
xchg
cld
dec
dec
inc
insb
and
and
add
ja
test
sub
jo
ficomps
lcall
push
les
mov
fld
hlt
push
xor
fistpll
aaa
lock
nop
outsl
ret
daa
ds
pusha
pop
es
arpl
insb
cmp
inc
and
mov
or
dec
sbb
push
xor
or
aaa
ss
stc
or
sub
ret
xchg
cmp
addr16
fwait
lcall
je
pop
xchg
mov
adc
inc
pushf
and
xor
sub
jecxz
xchg
ljmp
and
jnp
imul
sbb
loopne
jecxz
test
in
lods
imul
or
dec
ret
and
ret
and
push
lret
jl
xor
or
sbb
movsl
inc
jae
and
stos
cmc
add
icebp
or
xor
inc
iret
sti
sbb
lahf
mov
jno
test
insl
mov
inc
dec
dec
jnp
and
insb
and
pop
mov
daa
rorl
cmp
call
inc
rcrb
lret
jno
dec
sub
jl
sub
mov
sub
daa
and
fildl
mov
aad
jb
and
sub
sub
icebp
cmpsl
mov
loope
dec
and
jno
sar
mov
add
jb
xor
push
and
data16
jmp
xchg
sub
sbb
mov
or
cli
inc
popa
and
inc
jb
bound
neg
sbb
and
cmpsb
das
mov
leave
les
push
sbb
push
bound
push
outsl
xchg
adc
leave
or
sar
and
mov
add
xor
jmp
outsb
shlb
mov
push
pusha
xchg
lcall
scas
mov
jecxz
sub
stos
jne
jle
aaa
sub
and
inc
xchg
mov
std
lcall
dec
in
add
and
out
dec
add
cmp
push
scas
cmp
or
shl
push
jns
mov
daa
dec
arpl
cmp
sbb
out
outsb
pop
cmp
mov
mov
jb
in
and
push
aaa
pop
sarb
pop
cs
and
aaa
shlb
push
mov
xor
pusha
adc
sub
loop
scas
dec
lock
shl
and
aad
jae
adc
cld
adc
mov
pop
and
ficoml
add
xor
sbb
push
pop
mov
daa
cmp
addr16
cmp
jmp
leave
loopne
pop
and
xchg
popa
hlt
and
push
sub
sub
inc
sbb
lret
sti
xchg
jb
or
mov
sbb
and
fldenvs
or
and
mov
je
ret
and
mov
mov
pop
push
and
adc
incl
loop
daa
cld
and
aas
mov
and
pushf
cltd
testb
cld
loop
call
jb
out
ljmp
and
adc
sbb
mov
je
cld
push
mull
sbb
add
loop
or
lret
push
adc
and
faddp
sub
mov
fidivrl
dec
or
mov
mov
pop
enter
andl
push
mov
std
adc
and
loope
cmp
cmpsb
nop
xor
push
repz
inc
xor
enter
ds
mov
lcall
and
sub
mov
jecxz
aas
ja
loop
cwtl
or
mov
and
in
push
push
cmp
or
mov
cld
push
sub
xor
xor
jecxz
ljmp
js
leave
es
or
fstps
cmpsb
pop
jo
inc
dec
sbb
and
ljmp
in
and
xor
mov
adc
sub
sbb
sub
in
gs
cmc
push
push
jmp
mov
fdivrs
cmp
and
mov
cmpsb
xor
jbe
and
mov
xor
adc
stc
add
pop
addl
inc
sbb
adc
popa
sbb
std
push
iret
push
outsb
sub
and
push
xchg
dec
jno
adc
and
adc
and
inc
adc
mov
jo
and
add
cli
stos
in
out
cs
cmpsb
ljmp
push
loope
xor
and
mov
xchg
cmpsb
xor
jnp
gs
leave
pop
and
ss
icebp
loopne
sub
cmp
and
inc
loop
out
outsb
inc
out
and
cmp
add
mov
ja
push
add
data16
and
lods
mov
add
cli
popl
std
int3
adc
dec
xor
push
and
adc
or
sbb
ret
and
ret
outsb
and
cmpsb
and
outsb
or
ret
mov
popf
fsubl
loope
mov
mov
or
and
shrb
mov
fs
add
and
mov
mov
push
fisubrs
and
shrb
jmp
mov
sub
xchg
and
dec
aad
adc
inc
and
inc
pop
lea
mov
fs
popf
mov
daa
xor
out
pop
pop
into
cli
or
lcall
lea
push
pop
mov
push
adc
cmp
orl
negb
xchg
and
mov
sbb
push
sub
and
inc
push
pop
lock
iret
mov
jno
sbb
jl
xchg
pop
push
and
fldcw
ja
xor
push
inc
adc
jo
out
cmp
das
sub
xchg
and
jne
cs
pop
jae
sbb
mov
addb
jmp
pusha
cmpsl
addl
cltd
out
mov
leave
sub
cmpsl
das
lcall
or
push
aam
daa
and
mov
and
mov
inc
cmp
sub
xlat
jnp
pop
lods
sub
adc
mov
mov
mov
inc
and
mov
and
addb
jg
push
push
adc
fcoms
dec
pop
fwait
jge
and
push
stos
xor
cmpsl
dec
daa
and
mov
sbb
pop
scas
add
cltd
and
enter
fs
pop
shl
and
xchg
movsb
lds
mov
sbb
cmpsl
lcall
lret
cmp
mov
enter
insl
mov
adc
fcoml
jl
leave
and
mov
xchg
mov
push
popa
xor
xchg
je
jb
insl
outsl
and
sbb
pop
or
fiadds
lods
repz
je
jb
nop
push
ficomps
and
mov
ljmp
ds
clc
adc
and
adc
aad
cmpsl
imul
cltd
and
inc
sub
mov
cmc
arpl
pop
adc
scas
sahf
pop
mov
and
popf
inc
mov
cmp
stos
and
daa
movsl
andb
pop
lahf
std
xor
push
and
fisttpl
and
inc
cmp
sub
mov
sbb
test
mov
jb
into
mov
and
clc
fcom
mov
std
movsb
lret
mov
and
xchg
jp
sbbb
adc
mov
push
movsl
pop
pop
and
fldl
dec
sub
and
sub
cmp
xchg
jmp
and
mov
ljmp
lcall
adc
mov
fisubl
cmc
cmp
and
in
jb
sub
sub
ja
ljmp
and
sub
movb
xor
and
pop
pop
xor
lret
xor
sbb
push
push
mov
fiadds
and
cmp
fs
mov
push
cmp
and
shrb
pop
jb
ret
lret
dec
push
sbbb
mov
and
push
cld
test
dec
xchg
and
mov
mov
mov
pop
ljmp
and
cmp
and
pop
nop
xor
mov
add
cs
enter
cmpsb
push
cltd
popf
popa
mov
mov
nop
sbb
mov
xchg
ss
push
and
out
nop
and
insb
cs
and
and
xchg
jbe
or
and
jne,pn
orb
push
cmp
and
mov
xor
loopne
and
out
or
xchg
ds
mov
loop
xor
and
ds
cld
sub
das
mov
sub
sub
outsb
cmp
inc
push
fiadds
and
jg
xchg
and
sub
cmp
push
sub
mov
repnz
adcb
xor
in
adc
fimuls
sub
popa
pop
adc
mov
stos
fisttpll
push
pop
cmpsb
and
data16
add
and
sbb
shlb
push
add
push
je
adc
mov
fsub
sbb
pop
and
push
stos
or
nop
inc
and
popa
xor
and
add
ss
add
and
xchg
pop
fidivrs
int3
test
sbb
loop
and
and
sub
push
push
xchg
jns
lods
dec
es
addr16
mov
or
ds
mov
cmp
test
dec
mov
les
out
sbb
sarb
enter
fs
lret
gs
aad
inc
sbb
add
cs
lret
bnd
daa
sbb
movsl
mov
cmpsl
loopne
mov
and
test
sub
int3
scas
cmp
xchg
in
inc
sub
outsb
mov
sub
mov
jle
shrb
mov
pop
adc
jg
push
loop
adc
mov
mov
ljmp
nop
and
add
mov
and
push
cmp
push
pop
or
in
aam
out
int3
adc
and
ds
lcall
lcall
mov
pop
xchg
or
aaa
sbb
cmp
add
or
outsb
xor
xchg
inc
jp
sbb
sbb
insb
xchg
ljmp
cmp
jg
decb
and
mov
add
fidivrl
fsubrl
mov
or
mov
adc
testb
push
out
sub
rolb
jo
pop
sbb
jge
or
mov
and
loop
mov
and
add
mov
mov
xlat
adc
and
lcall
jb
and
xchg
and
dec
dec
xor
jne
and
scas
push
jnp
adcl
setge
insl
add
fmull
cmp
and
or
and
rcrl
and
sub
ljmp
jl
inc
and
mov
sub
jno
mov
sub
loope
push
loop
jno
jp
add
dec
and
and
and
xchg
and
mov
sub
rorl
imul
sbbb
adc
and
fidivrs
bound
mov
shlb
push
scas
and
ret
cli
cmpsl
loop
gs
and
das
in
xor
outsl
jg
leave
jno
lret
sbb
stc
int3
jnp
outsb
cmp
and
add
add
and
jbe
test
adc
pop
and
mov
or
lods
pop
and
push
leave
lahf
sbbb
cmp
notb
xor
jae
fldenv
ljmp
movsb
popa
or
mov
lret
push
imul
xorl
mov
mov
ds
and
orb
and
mov
jnp
shlb
lret
loope
mov
xor
pop
push
rol
jl
fimull
sub
sbbl
in
push
mov
cli
nop
out
sub
mov
es
aaa
jecxz
and
push
inc
adc
into
dec
and
sahf
push
movsb
inc
mov
and
fs
cmp
mov
push
nop
outsl
and
nop
pop
sti
daa
fcmovbe
lret
and
fcmovnbe
fmuls
cmp
aad
fsubp
fbstp
pop
stc
pop
fstps
sub
test
bound
xchg
sbb
iret
addr16
or
frstor
sub
add
es
jb
sub
mov
bound
cmp
push
sbb
xchg
popf
xchg
dec
add
rolb
xchg
jns
push
pop
and
in
xor
arpl
and
push
or
lods
and
sbb
push
dec
inc
mov
popa
cmc
and
inc
mov
inc
imul
add
sbb
or
dec
jne
xor
test
das
xor
sahf
mov
add
adc
lret
jb
inc
icebp
or
mov
adc
inc
push
mov
ds
scas
and
and
lret
loope
xchg
sub
sbb
mov
push
lods
pop
dec
and
fwait
popf
and
dec
inc
adc
and
pop
lods
scas
jp
xlat
shlb
jbe
and
into
push
pop
and
sbb
and
push
or
out
sub
mov
cs
es
mov
stc
sti
shlb
sub
and
fidivrs
into
and
cli
add
hlt
inc
arpl
loop
mov
and
sub
sub
ret
inc
push
mov
and
push
daa
mov
inc
sub
push
sub
mov
popf
fdiv
ds
stos
dec
in
pushf
mov
shrl
loope
mov
push
sbb
ret
and
sub
sub
and
aad
add
aam
repz
sub
jbe
and
std
je
or
and
jmp
ror
and
clc
add
into
pusha
and
js
loope
sbb
xlat
cmp
cmpsl
pop
loop
ss
jne
jg
ja
fadds
push
mov
and
imul
and
xchg
nop
shlb
jecxz
inc
mov
mov
loop
mov
outsb
mov
imulb
and
fwait
repnz
ja
push
mov
sub
push
sbb
lret
pop
leave
or
and
fisubl
xor
mov
cmp
sbb
rorb
dec
and
inc
lods
mov
xor
xor
scas
mov
loop
out
sub
and
fisttps
jmp
cmp
ljmp
cld
cmc
adc
insl
inc
add
xor
mov
sarb
outsb
cmp
movsl
cmp
stos
push
daa
test
pusha
adc
jno
cmpb
ljmp
dec
leave
inc
mov
test
jge
xchg
test
xor
jg
or
jl
sbb
mov
je
push
mov
and
cmp
push
sbb
mov
loop
jl
and
push
mov
and
subb
dec
and
mov
push
imul
and
xchg
xchg
sub
bound
and
es
jb
int3
jbe
andl
or
and
dec
faddl
inc
mulb
test
mov
xchg
test
outsl
and
loop
imul
push
ret
test
cmp
ljmp
gs
mov
lret
enter
mov
out
out
sub
and
mov
and
or
mov
shlb
inc
movsb
je
les
and
loope
ds
mov
push
push
and
dec
cmp
inc
and
dec
loop
leave
sub
mov
subl
outsb
and
movsb
daa
loope
scas
fisubrs
mov
and
fs
sbb
push
rcrb
and
jnp
jno
sub
arpl
mov
mov
inc
and
insb
push
adc
ds
sub
dec
and
pop
inc
sbb
add
mov
fcoms
add
jmp
into
and
push
jne
cmp
leave
ds
xor
shlb
jnp
add
and
rcrb
and
cmp
or
jb
data16
ret
xchg
and
int
shlb
repnz
andb
jae
and
lret
sahf
pop
add
push
jle
push
or
jecxz
movsb
lret
data16
into
lcall
jle
lea
lock
xchg
out
xchg
stos
shl
and
ret
sarb
mov
sub
mov
mov
xchg
in
and
jne
and
or
xor
pop
xor
pop
lods
jp
pop
and
sbb
xlat
mov
and
and
and
and
enter
xchg
out
push
xchg
das
or
jp
and
sub
xchg
adc
mov
sti
dec
fwait
inc
cmp
mov
and
out
add
orl
xor
mov
sub
es
aaa
and
xor
lods
insl
inc
adc
sbb
and
and
loop
and
sbb
es
sbb
adc
cmp
jno
push
inc
sbb
sbb
inc
and
ja
cmp
pop
test
mov
das
into
inc
push
push
xor
sub
and
sbb
xor
or
pop
mov
pop
es
jb
mov
and
ss
ds
add
mov
aaa
insl
dec
sub
insb
sbb
sbb
add
xchg
mov
pop
and
das
loopne
inc
xor
js
mov
jmp
int
les
and
ds
and
xor
push
lcall
and
or
bound
and
mov
in
daa
leave
inc
push
movsl
ret
sbb
mov
sub
dec
mov
movsb
push
sub
pop
sub
adc
sub
add
inc
xchg
rol
sub
shlb
mov
pop
xor
xchg
lret
cmpsl
ss
sbbb
sub
xor
insl
mov
sub
add
mov
and
daa
lea
cmp
jl
push
ret
dec
pop
dec
and
push
xor
test
push
and
add
pop
scas
mov
and
push
stos
pushf
or
push
xchg
and
jb
fstps
and
lock
gs
fbstp
jnp
sbb
daa
data16
inc
cltd
ret
or
cmp
xor
cld
sub
and
sub
lahf
adc
xchg
stos
lret
add
cmp
pop
daa
xor
repnz
and
xor
xor
lods
xorb
sub
mov
push
push
xchg
stos
pusha
and
push
inc
ret
mov
cmp
je
gs
shlb
sub
cltd
mov
and
jge
sbb
loop
sbb
cli
or
and
je
bound
push
sub
mov
jno
insl
loop
ss
jb
call
dec
sub
fisubrs
add
and
inc
push
add
divb
pushf
pop
ds
or
ds
and
fimull
pop
push
mov
test
scas
mov
inc
pushf
cmp
inc
and
out
pop
jle
xchg
out
sbbl
xchg
xor
sub
ret
and
sbb
add
push
enter
xchg
push
and
pop
sub
jle
pop
sbb
lods
lods
xchg
out
pop
xchg
mov
xor
inc
xchg
mov
clc
push
xchg
cmp
xchg
and
and
jae
orl
inc
cmovs
and
out
test
mov
sub
cmp
add
and
das
adc
arpl
and
or
jae
xor
sahf
mov
mov
and
popf
xor
leave
push
cmp
das
jae
mov
ja
sbb
rorl
pop
mov
aas
mov
mov
mov
andl
inc
int
adc
mov
pop
add
push
cmpsl
ds
pushf
fbld
and
loope
jle
dec
scas
and
or
mov
cmp
mov
mov
push
adc
mov
or
cmp
mov
jo
gs
push
inc
jno
jb
fwait
pop
sub
test
int3
mov
push
jnp
movsl
and
bound
jae
push
and
add
jecxz
and
inc
aaa
sub
cmp
mov
movb
push
in
or
fsubr
fidivl
push
mov
inc
lods
and
xchg
orl
push
rcll
sbb
sub
mov
xchg
and
mov
cmp
and
push
fildll
mov
and
das
aad
push
divl
push
and
jno
mov
out
push
jecxz
jbe
add
stos
and
inc
jge
jns
hlt
sub
sbb
les
insb
jo
xchg
rcll
aaa
movsb
sbb
sbb
cmp
bound
and
push
into
inc
in
xor
mov
daa
dec
and
mov
jecxz
sbb
cmp
pop
inc
push
inc
mov
pushl
xor
mov
jg
push
xchg
cmpl
adc
and
aaa
sbb
mov
adc
dec
pop
lods
lock
loop
jmp
pop
inc
frstor
sub
jecxz
push
aaa
or
in
or
add
pop
shll
das
dec
imul
sub
fbstp
pop
and
jecxz
inc
fs
cmpsl
mov
add
mov
cltd
or
push
push
mov
dec
mov
sub
ss
and
jne
into
ja
pop
or
outsb
mov
loopne
jge
sub
jbe
push
and
data16
adc
and
stos
dec
addr16
push
or
aas
add
cmp
jg
jns
and
dec
out
or
sub
in
and
mov
mov
cmp
dec
sub
je
inc
shlb
lcall
lds
scas
loope
pop
mov
jae
mov
and
gs
and
lret
pop
add
and
repz
xchg
lahf
mov
pushl
inc
rcrl
sbb
int3
jne
adcl
ret
push
fnsave
cltd
mov
mov
shlb
and
dec
jb
add
mov
xchg
popl
and
mov
addb
push
das
sbb
rclb
insl
adc
pop
mov
fwait
add
ljmp
cmp
adc
push
popa
iret
mov
pop
push
jmp
push
push
mov
add
mov
push
and
add
inc
push
cli
xor
shlb
fxch
pop
loop
stos
inc
sub
and
int
add
and
cmp
mov
imul
add
and
and
mov
sub
leave
pop
data16
in
xchg
popf
mov
mov
and
inc
inc
sub
sub
push
mov
sub
lods
and
xor
xor
or
nop
pop
mov
sbb
xor
push
xchg
xlat
sub
sbb
sbb
hlt
cwtl
and
add
and
addl
jne
lret
mov
xchg
mov
inc
add
sub
ja
lret
jne
fwait
jle
jbe
mov
push
and
jmp
push
jno
add
ds
add
inc
arpl
sahf
jle
cmpsl
sub
inc
and
sub
push
xchg
and
mov
lods
cmpsl
iret
rcrb
and
fnsave
cmp
add
adcb
xor
cmpsl
and
shlb
fstl
movsb
stos
and
and
fistps
jl
and
and
sub
pop
daa
pop
xor
sarl
adc
enter
es
lods
xor
orb
and
jl
sbb
ret
ljmp
dec
and
cmpl
dec
xchg
sbb
mov
aaa
and
xor
bound
mov
and
pop
cmpsl
and
std
cmp
xor
xchg
sub
inc
adc
xchg
pusha
push
mov
and
sbb
clc
and
pop
repz
and
jns
xchg
xor
and
and
ds
dec
add
or
mov
mov
xchg
out
add
xor
and
jo
and
pushf
lcall
xor
aaa
and
pop
mov
stos
lahf
jecxz
and
inc
jo
in
gs
out
ljmp
test
pushf
mov
and
cmpb
or
pop
pop
and
jp
sbb
sub
cmpsl
sub
dec
or
int3
sub
adc
and
mov
outsl
jg
cwtl
jb
mov
imul
and
inc
repz
sbb
xchg
fdivrl
and
popa
fidivs
sbb
push
xchg
and
push
push
call
movsl
and
lahf
mov
cmpsb
cs
out
aaa
rolb
xor
fisubrs
xchg
int3
mov
add
inc
add
daa
push
sub
lcall
xor
nop
adc
loop
xor
add
sbb
jae
and
pop
or
int
out
popf
roll
add
and
mov
xor
jns
bound
xchg
and
gs
aam
dec
add
in
mov
or
lock
xchg
and
lret
fisttpl
mov
outsl
and
pop
add
and
sub
mov
or
stos
repz
xchg
ret
out
sub
and
sti
and
ds
push
out
int3
mov
daa
mov
loop
les
and
jp
sub
dec
jno
loope
je
cmc
std
and
and
cmp
sbbl
mov
insb
mov
orl
xor
mov
mov
cmp
arpl
sub
sub
cmp
mov
flds
and
popf
fcomps
push
mov
push
mov
cli
sub
xchg
sbb
gs
add
xchg
and
mov
pop
and
gs
leave
and
outsl
cs
popf
mov
and
mov
push
test
popa
cmp
jmp
insl
fdivs
jne
cmp
enter
inc
andl
mov
xor
pop
sub
sbb
test
adc
inc
and
lret
mov
adc
cmp
movsl
inc
jnp
std
and
jl
add
push
xor
mov
jb
inc
and
sub
sub
dec
dec
stos
mov
aad
push
and
test
jle
into
jp
popf
pop
and
ret
push
je
pop
push
pushf
daa
and
cs
mov
jns
rclb
int3
cmp
and
leave
or
addr16
cmp
andl
loop
in
jecxz
outsl
bound
jg
loop
and
ja
adc
xor
lock
cmp
lds
and
adc
cmp
and
sub
call
and
andb
mov
xchg
mov
mov
and
jb
or
sub
test
sbb
stc
and
fildl
push
or
or
xorps
repz
inc
jmp
inc
and
pop
mov
and
sbb
and
repnz
cmp
fiaddl
or
fimuls
test
js
clc
inc
out
or
adc
jge
ljmp
ss
xchg
cmp
pop
dec
sub
fdivp
insl
inc
orl
stos
adc
cmp
jle
dec
fsubs
imul
and
jae
mov
stc
or
pop
sub
add
ret
xchg
adc
and
js
and
into
mov
jecxz
xchg
push
cmp
das
sub
mov
pop
outsb
pop
aam
and
push
in
or
pop
sub
ret
out
jnp
pop
add
loop
lcall
push
xchg
and
add
inc
push
not
cmpsb
xorb
jae
and
pop
and
stos
push
ds
mov
and
add
and
jo
ljmp
sbb
jne
push
dec
xor
push
inc
pop
jge
mov
adc
and
push
jo
mov
in
and
fcmove
sub
shlb
and
sub
push
pop
adc
stos
jle
in
daa
testb
ljmp
xor
or
cmp
lds
and
dec
pushf
sub
dec
mov
pop
push
outsb
addps
fildll
outsb
adc
pop
cmp
mov
cmp
jmp
cld
leave
cmp
cmpsl
pop
in
pop
and
loope
dec
fsubp
xchg
sub
xchg
pop
js
insb
outsb
arpl
and
sahf
and
ja
andl
leave
xor
or
daa
fldenv
xor
push
sub
sub
into
push
stos
and
sbb
in
pop
lcall
and
mov
sbb
fidivrs
sub
mov
mov
mov
pop
cli
sub
test
jb
sub
popf
lret
loopne
pop
mov
xchg
orl
xor
bound
and
scas
test
movsl
add
and
mov
or
push
push
xor
mov
jno
jbe
xor
mov
sub
and
repnz
popa
and
shll
jns
xchg
scas
and
std
outsb
stos
sti
push
popf
and
pop
cmp
inc
add
es
and
and
hlt
mov
and
or
test
jge
test
jae
scas
pusha
mov
sub
jno
and
js
stos
and
shll
and
cmp
push
in
and
dec
lods
dec
adc
aas
ds
test
sti
test
repnz
fsts
in
adc
sub
inc
pop
sbb
cmp
push
outsb
add
aam
mov
test
adc
or
or
cs
and
and
xchg
and
mov
cmp
mov
into
rolb
mov
popf
into
lds
cld
in
leave
test
mov
pop
sub
and
mov
gs
sub
in
pop
fs
and
cmpsb
adc
sub
jecxz
sbb
jae
into
ret
jp
daa
mov
cmc
jecxz
in
icebp
movsl
ret
les
and
push
and
cmpsb
mov
jg
popf
sahf
ret
dec
mov
and
out
mov
movsb
out
daa
das
ja
sahf
rcll
lock
stos
std
push
and
loopne
pop
mov
sub
addr16
lahf
loopne
aam
and
es
and
cmc
outsl
jp
mov
in
push
je
push
add
or
ficoml
das
popf
out
dec
scas
rcrl
mov
mov
and
and
rcl
das
or
sub
fisubrs
outsl
sarl
stos
and
pop
jae
push
icebp
fstpl
sub
or
ja
loop
loop
neg
sub
mov
xchg
cs
mov
out
aad
fidivrs
and
and
rcr
test
and
mov
or
adc
mov
fsub
and
stos
xor
loope
jns
mov
mov
jbe
je
aam
cmp
mov
scas
jmp
clc
xchg
popf
rolb
hlt
shlb
aam
loope
stos
xor
shlb
fnstsw
cli
xor
daa
or
mov
adc
cmp
sbb
movsl
jae
mov
loop
or
es
or
imul
loop
mov
dec
xchg
push
xor
adcl
adc
ljmp
xlat
fdivs
test
scas
scas
leave
xor
xchg
or
mov
pop
and
ficoms
popa
fisubl
xor
mov
lcall
xor
mov
stc
pushf
pop
and
sbb
pop
cmp
std
insb
and
jo
xchg
stc
je
rcll
stos
sub
inc
and
aaa
int3
pop
shlb
and
jge
xor
std
mov
xchg
and
in
and
addr16
xor
stos
mov
int
sub
decb
cwtl
mov
cs
jbe
and
jge
fiaddl
in
and
insb
repnz
cmp
or
cltd
and
insb
dec
and
ret
and
outsb
adc
lea
fidivrs
and
ficompl
std
and
jne
xchg
sbb
push
cmp
mov
and
test
mov
loop
add
push
or
adc
mov
bound
pop
ret
mov
insl
push
and
jno
add
fistpll
sbb
mov
inc
cmc
and
add
popa
jbe
in
and
out
and
push
jno
jo,pt
xchg
and
cmp
and
mov
jecxz
fiaddl
dec
cltd
inc
pop
jnp
and
scas
jb
mov
in
nop
das
xchg
pop
je
aaa
and
stos
hlt
adc
fwait
lret
push
aad
sbb
jae
stos
push
sub
cli
and
fisttpll
or
pusha
and
shl
xchg
adc
lss
and
sub
out
xchg
pop
and
jmp
ljmp
sub
cmp
and
lods
std
sahf
and
aad
and
and
xchg
sbb
jp
pop
xor
and
rclb
cli
and
and
scas
mov
pop
xchg
jge
or
shrl
shlb
repz
rcl
lock
push
ret
fst
push
and
ja
xchg
xor
xchg
in
lret
jecxz
pop
cs
sub
mov
shrb
fadds
fistpl
sub
mov
cmpsl
hlt
or
push
test
sub
daa
dec
sub
inc
std
pop
shll
and
pop
es
sub
mov
mov
daa
and
add
and
push
sub
cmpb
pop
xlat
test
sub
and
fdivrl
test
int3
xchg
cmc
shlb
xor
xchg
sbb
in
sub
mov
adc
dec
xchg
xchg
cmp
sub
pop
or
jns
rcrb
scas
sahf
xor
mov
lcall
imul
and
push
popf
lcall
xchg
lds
jecxz
sub
pop
roll
jg
cli
mov
ffree
and
cs
test
mov
xchg
sub
cld
sub
orb
xchg
sub
aam
push
lahf
and
and
sub
push
dec
call
iret
mov
and
lods
test
push
sub
sub
nop
icebp
test
mov
fwait
cmp
xchg
jg
push
stos
ja
aam
add
fidivs
movsb
pop
xchg
fcmovbe
cs
mov
cmc
and
mov
pop
sub
out
add
xor
lods
popa
pop
shlb
add
xchg
or
sub
or
out
es
or
gs
lret
add
sbb
jns
cmp
lret
fildl
and
std
sbb
outsl
loop
aas
sub
cmp
mov
daa
and
mov
and
cmc
pop
outsl
lret
and
xor
xor
mulb
sub
xchg
shl
xor
in
pop
shll
pop
and
jl
lcall
cwtl
iret
fisubs
push
cld
dec
jns
adcb
shl
sahf
mov
xchg
lret
jmp
jmp
aaa
sub
rcr
add
and
fadds
repnz
and
ss
and
cmc
push
and
shlb
or
adc
cmpw
mov
and
push
jmp
and
and
xchg
push
outsb
in
xchg
fimull
les
aad
and
mov
in
inc
in
mov
and
fmull
and
lds
and
mov
jp
cmp
lods
sub
ja
and
xor
and
ret
add
sbb
loopne
addr16
in
bound
and
cmp
and
outsb
mov
adc
xchg
lods
xchg
shll
ljmp
divl
repnz
xchg
push
sbb
sub
xchg
and
js
ror
cmp
cs
inc
mov
stos
mov
rclb
lret
rorl
rcll
xchg
pushf
cs
xor
and
sub
xchg
cmp
jmp
dec
and
jecxz
cli
sti
and
inc
mov
mov
and
pusha
shrl
les
fmull
pop
pop
and
mov
and
cs
and
repz
dec
sti
movsl
jbe
aaa
sub
in
mov
loop
dec
out
and
sahf
add
dec
xor
icebp
mov
in
pop
and
adc
xor
and
cs
fcomip
mov
cld
inc
dec
sbb
ss
xchg
sti
and
xchg
outsl
mov
jns
adc
or
out
and
ss
out
jb
mov
adc
mov
cmp
xor
aas
sub
nop
bound
and
cmc
pop
cmp
popf
and
adc
sbb
shrb
mov
or
sti
les
cli
shl
cmp
jge
fadds
lret
clc
pop
shrl
ljmp
push
sub
les
rcr
aas
ror
and
daa
mov
cmp
sarl
inc
pop
pop
inc
ret
adc
repnz
and
lds
into
mov
cld
pop
mov
cmpb
mov
sub
je
xchg
xor
sbb
jnp
enter
push
sahf
aam
add
or
cmp
in
adc
jmp
frstor
or
push
inc
pop
xor
xor
adc
push
jge
test
mov
mov
sub
push
or
xorb
adc
push
aaa
imul
je
and
cld
pop
into
loope
jns
inc
lock
hlt
pop
lcall
and
dec
shll
lods
shrl
jecxz
cmp
xchg
cmp
loop
jmp
and
pop
cli
out
sar
jp
int
loop
jg
cmpsl
sti
out
push
ljmp
in
pop
roll
pop
sub
frstor
loope
dec
push
mov
les
push
xor
xor
divb
popa
and
and
xorl
insb
mov
and
scas
das
jmp
pop
rcrb
lahf
push
rolb
sti
cmp
icebp
and
inc
cltd
lock
or
mov
fs
out
mov
movsb
leave
aas
test
jns
nop
pop
int
ret
das
push
mov
and
gs
and
loope
jmp
ret
and
sbb
pop
dec
fcoml
cld
and
cmp
les
cmp
test
cli
inc
in
testb
mov
push
xor
sub
lcall
hlt
mov
ret
xchg
outsb
test
shlb
mov
pop
jae
push
mov
mov
and
inc
andb
jne
pop
hlt
and
sub
mov
jp
ss
xor
and
aad
lcall
jecxz,pn
sbb
loopne
in
in
and
test
add
push
adc
inc
or
jmp
lret
es
aas
jmp
mov
das
call
pop
fistps
aaa
mov
or
mov
lahf
cli
jns
fnstsw
fidivrs
sbb
mov
adc
cmp
xchg
mov
dec
xchg
pusha
mov
jmp
arpl
sub
or
add
jl
mov
mov
dec
jecxz
and
mov
and
mov
out
adc
sub
and
jne
ficomps
and
gs
ja
sbb
stos
and
data16
je
push
cltd
shrb
jge
push
sub
repnz
and
imul
bound
lcall
xor
cmp
and
testb
pop
lahf
adc
add
mov
data16
and
addr16
and
jmp
pusha
das
in
pop
xchg
mov
and
aad
dec
hlt
mov
pop
push
ret
and
into
xor
pop
loop
dec
push
fisubl
ficompl
adc
ljmp
or
push
insl
cmp
bound
add
push
pusha
ret
dec
mov
jp
and
and
in
ss
loopne
or
mov
add
ss
mov
int
add
xchg
sub
and
fiaddl
adc
jp
outsl
and
push
cmp
xchg
xlat
push
mov
mov
lods
aaa
lock
and
xor
fcmovnbe
dec
and
test
popa
jbe
negb
inc
frstor
xor
out
in
inc
es
jb
arpl
std
andb
pusha
loop
movsb
and
mov
and
inc
push
rolb
xor
lds
cwtl
outsl
pop
and
adc
shrb
test
or
mov
cmp
and
int3
xor
xlat
sub
pusha
test
cli
and
je
test
ret
insb
sub
sbb
bound
mov
movsl
mov
dec
push
test
and
xor
push
and
sbb
loop
add
ret
out
sub
jne
sbb
mov
and
cmpsb
cmp
and
ret
arpl
aaa
add
and
sub
je
notb
rolb
and
push
and
popa
and
sarb
rcll
call
test
sbb
mov
sub
cmp
lock
push
in
loop
aas
int
sbb
sub
rorb
inc
je
ret
int3
mov
add
stos
xchg
sbb
xor
jmp
mov
and
mov
bound
cmp
sub
fs
sub
mov
movsb
jb
out
mov
sbb
movsl
stos
fstl
push
pop
leave
mov
leave
ror
push
and
cltd
sub
and
mov
nop
cmp
and
scas
movsl
lcall
jg
ret
cmp
push
lahf
and
inc
ds
pop
or
ja
pushl
sub
jl
lds
xchg
push
loope
and
jns
jbe
mov
outsb
and
stos
test
jp
pop
push
push
into
and
jp
dec
jecxz
dec
add
and
popf
push
sarl
bound
add
mov
test
jne
insb
sti
inc
jae
pop
sbb
and
es
fidivrl
sbb
sub
daa
jnp
mov
gs
dec
sub
cs
push
and
sbb
push
add
arpl
or
and
cmp
mov
in
cmp
addr16
and
out
xor
pop
and
add
cmp
fsubl
and
push
and
and
jae
sbb
mov
sub
sub
pop
mov
je
inc
sbb
int
repnz
push
out
push
adc
insl
and
ljmp
pop
imul
or
push
shlb
and
dec
bound
push
jmp
inc
and
inc
out
and
cltd
xor
or
fsubs
inc
xor
and
xor
adc
ss
push
jne
xchg
or
data16
addr16
iret
arpl
dec
xor
mov
and
push
out
mov
mov
xor
or
subb
pop
sub
push
pop
jle
es
dec
pop
cmp
mov
ss
xor
movsl
mov
mov
push
fistps
push
fisubs
jecxz
ret
and
cli
dec
cmp
push
outsb
jle
add
adc
out
out
cmpsb
dec
and
ficoml
sub
stos
adc
fwait
repz
add
and
negb
jae
xchg
mov
and
push
jb
cmp
and
push
aaa
scas
push
ds
or
rclb
aam
cmp
add
js
and
and
data16
sbb
cmpsl
pop
and
insl
push
fildl
adc
and
adc
call
mov
out
imul
int
cs
lahf
and
inc
xchg
ficompl
and
das
lcall
popa
fwait
sbb
outsb
fldenv
xchg
and
nop
psadbw
dec
jp,pn
loopne
and
lods
and
mov
and
mov
iret
xor
or
adc
push
and
xchg
xorb
lds
es
and
pop
lahf
push
dec
jb
and
jmp
push
aad
bnd
sub
int3
addr16
push
lods
mov
out
push
inc
fsts
pop
push
and
add
jns
xor
repnz
mulb
insl
aad
pop
sbb
cmp
mov
and
and
out
es
cs
daa
xchg
loop
dec
push
push
insb
sub
xor
sub
xchg
lcall
cmpsl
mov
and
mov
and
sub
dec
outsl
and
ret
sub
sub
push
xor
cmc
mov
adcl
push
cmp
loopne
sub
movsl
add
push
xchg
ja
loop
xlat
or
data16
andl
cltd
dec
adc
cmp
and
rcrb
lret
imul
cmp
pushf
outsl
rorb
lods
dec
and
mov
cmp
sub
bound
ds
mov
inc
fwait
sub
lock
xchg
mov
and
inc
sub
pushf
in
ret
xchg
mov
and
dec
ds
adc
inc
and
in
xor
imul
loope
inc
add
aad
dec
xor
cmp
xchg
ds
ret
push
sub
and
fsubrl
or
jl
aad
pop
out
xchg
and
pop
movb
pusha
mov
lods
and
shrl
hlt
and
pop
js
add
fildl
daa
xor
xchg
xor
rcrb
sub
mov
fsubs
sbb
dec
fidivs
bound
mov
jnp
mov
jle
daa
and
xorb
lret
and
into
lcall
pusha
in
push
pop
push
and
inc
inc
and
pop
inc
dec
scas
push
stos
and
cmovbe
das
sub
bound
xchg
fmuls
jge
aam
inc
inc
in
pop
push
ret
push
std
fistpl
lds
sbb
je
cmp
or
pusha
imul
jnp
lahf
mov
sub
mov
lret
jns
and
xchg
dec
jle
fidivl
mov
push
adc
pop
add
in
push
fs
mov
test
sbb
repnz
sarb
lahf
push
insl
xor
cmpsb
and
imul
shrl
and
stos
cmpsl
cmp
dec
inc
and
repnz
xor
jb
mov
lret
cmc
sbb
and
dec
stos
inc
sbb
fidivl
xor
and
and
lea
xlat
jb
xchg
sbb
sub
hlt
xor
pop
testb
das
push
pusha
and
and
scas
ds
int3
sub
in
jne
dec
les
int
xlat
rcll
xchg
loop
or
test
mov
mov
dec
inc
vprotd
in
rcrb
cltd
jo
repz
and
xlat
sub
push
push
and
cmp
push
xchg
arpl
js
ljmp
push
and
test
xchg
popa
lods
into
insb
and
sub
mov
push
jmp
adc
mov
xor
jp
stos
push
call
push
cli
xor
dec
bound
adcb
inc
loop
aam
cmp
and
cli
or
adc
popf
repnz
outsb
and
stc
pop
and
and
stos
and
pop
mov
mov
xchg
es
cmp
inc
loop
cli
and
scas
ljmp
inc
inc
mov
xchg
xor
and
out
add
push
and
aad
pop
inc
xor
ss
faddl
jl
sub
xlat
push
lret
push
and
jne
xor
sub
cmpsb
sbbl
fs
lret
pop
push
jecxz
std
jp
aam
inc
mov
inc
pushf
je
outsl
cmp
dec
icebp
pushw
lret
xor
push
adc
and
adc
filds
or
jne
mov
push
jp
add
lea
xchg
and
das
leave
add
and
cmp
scas
dec
inc
cmp
jnp
mov
shl
mov
out
inc
rolb
push
and
sbb
repz
scas
mov
fs
aam
cmp
mov
and
ret
push
xchg
mov
fisubrl
and
pop
jnp
cmpb
add
jb
pop
and
mov
mov
xor
jnp
adc
outsl
and
je
mov
ljmp
mov
das
jb
jbe
arpl
xlat
and
je
mov
mov
nop
shr
daa
lret
jmp
xchg
add
test
push
lret
ficoms
mov
rolb
and
int3
mov
fcmove
lahf
popa
push
jns
jp
adc
and
loopne
sub
dec
mov
and
test
mov
and
jmp
dec
jmp
sub
mov
fwait
xorb
adc
mov
pop
cwtl
shlb
int3
cmc
ret
adc
push
jmp
pop
cwtl
or
xchg
enter
and
mov
push
and
dec
and
enter
inc
and
popf
shll
cwtl
lds
fdivrl
daa
cmp
jp
nop
loop
sbb
fnstcw
pop
mov
fs
push
push
ljmp
pop
ficompl
and
cwtl
and
js
jno
std
push
and
sbbb
mov
or
jnp
or
mov
andl
adc
mov
lahf
xchg
and
jg
jns
inc
xchg
xor
dec
pushf
push
and
mov
rcll
sub
jecxz
xchg
and
and
rclb
mov
xchg
pushf
xor
cmc
fsubl
dec
xchg
xchg
or
xchg
and
sbb
or
pop
pushf
and
cltd
adc
mov
mov
stos
xor
test
xor
and
fsqrt
sbb
or
in
adc
into
inc
sub
add
xchg
scas
xchg
popa
sti
or
mov
and
sbb
clc
dec
xor
mov
sbb
adc
jo
and
xor
jnp
add
shll
push
xchg
push
and
pushf
rolb
ljmp
outsb
movsl
loop
in
in
mov
cs
pushf
cli
call
imul
jb
psubusb
and
in
and
cli
mov
sub
inc
mov
and
enter
and
or
sbb
adc
or
das
cmp
daa
or
sub
int
and
pushf
adc
pop
mov
shrl
and
sti
mov
ljmp
jnp
xor
cs
js
arpl
mov
jbe,pt
xor
in
and
loop
sub
rol
and
pusha
loopne
nop
gs
push
adc
sbb
or
ja
xor
and
jecxz
ret
popf
jmp
lret
icebp
arpl
out
data16
and
clc
sbb
shl
cld
add
imul
and
leave
or
inc
sub
xchg
ss
push
scas
imul
lret
adc
stos
cmp
dec
cmpsl
popa
es
test
es
xchg
int
leave
mov
sbb
adc
sub
push
dec
xor
fmul
jge
and
push
xchg
sub
out
and
ret
fcmovbe
xchg
dec
push
push
jne
cmp
je
out
testb
xor
out
push
lahf
and
mov
arpl
inc
movsl
and
cwtl
and
out
add
push
pop
sub
inc
inc
and
jbe
cmp
daa
and
fwait
jmp
ret
hlt
and
in
aaa
or
mov
sbb
and
out
pop
and
fcomps
in
lret
mov
push
xchg
stos
sbb
mov
xchg
daa
adc
popa
push
xorl
and
jnp
xor
lret
or
fadds
push
in
and
call
insb
sarb
loop
push
push
cmp
xor
xor
jno
aas
xchg
or
and
stos
and
daa
stos
cmpsb
and
or
push
cmp
sbb
pop
inc
and
stos
shll
jb
fcomi
cld
aaa
jp
loope
and
imul
stos
and
addr16
shrb
xor
scas
ficomps
pushf
bound
pop
mov
pop
popf
and
cmp
jmp
adc
insl
pop
cli
data16
dec
ss
cmc
in
xor
icebp
push
and
ds
mov
out
cs
je
es
andb
fstl
andl
and
addb
mov
je
sub
jecxz
out
mov
adc
mov
pop
and
out
ja
test
sub
and
addr16
jo
and
stc
inc
lcall
daa
and
sub
mov
subb
lock
ret
pop
subb
mov
mov
inc
and
mov
xchg
and
mov
nop
ret
pop
or
and
mov
xor
and
mov
pop
cmp
and
stc
and
and
jbe
jnp
jle
leave
sub
loop
loope
push
fsubs
imul
mov
lret
and
es
sbb
and
mov
add
mov
or
int3
lea
push
bound
sti
mov
adc
dec
sahf
mov
gs
jo
and
insb
and
and
cs
stc
pop
lea
stos
pop
sub
mov
xor
shlb
cmp
mov
jb
cmpsb
fwait
and
scas
sub
pushf
das
mov
and
mov
jmp
and
imul
sbb
cmp
fwait
into
inc
lods
cmpb
and
mov
cltd
cmp
js
or
push
and
xchg
pusha
add
dec
repz
shlb
js
xor
and
dec
es
xchg
es
mov
ds
imul
and
insb
jge
mov
xchg
sbb
sbb
cmp
xor
stc
xor
xchg
xchg
push
dec
loop
ret
outsb
sub
xor
aam
pusha
daa
push
adcl
and
xor
jae
test
repnz
sub
xchg
and
roll
xor
in
mul
fcompl
and
ja
hlt
int3
sbb
sub
andl
cmp
daa
mov
aas
aaa
and
lahf
mov
or
and
repnz
and
shll
xor
xor
sub
xor
inc
push
mov
xchg
push
pop
pop
pop
sbb
aas
and
push
cmp
outsl
jo
lahf
mov
pop
xor
mov
and
mov
repnz
lds
jns
and
addl
fidivs
mov
outsb
dec
movsl
movsl
in
add
adc
push
sbb
xor
jp
jecxz
add
sbb
dec
mov
cmpsb
xor
and
jae
je
mov
in
sar
xchg
mov
and
orl
aas
adc
cmp
and
daa
stos
clc
loopne
push
jmp
adc
jno
out
popa
sahf
sbb
add
jns
adc
xor
fsubrl
xor
push
cmp
ja
jp
push
and
lahf
xor
lods
add
das
dec
jne
add
mov
gs
pop
into
add
and
jp
outsl
and
movsl
fbstp
xchg
and
jle
fcompl
inc
jp
and
push
mov
hlt
into
pop
aas
cmpsl
xchg
xchg
push
and
test
adc
jae
and
xchg
scas
or
sbb
and
push
stos
xor
xchg
sahf
and
pop
dec
jp
dec
movsl
jnp
leave
or
and
mov
pop
and
setae
fimull
push
les
xor
xor
xchg
add
roll
stc
into
leave
nop
je
repnz
loop
dec
mov
add
or
fbld
es
mov
repz
mov
fidivs
test
ja
and
sub
mov
and
mov
jbe
decl
dec
fdivs
sbb
xor
xchg
inc
jnp
mov
mov
sub
mov
mov
pop
loop
add
and
call
adc
and
mov
ds
out
add
dec
and
jl
into
ja
xor
mov
out
mov
push
cmp
xchg
mov
pop
mov
ljmp
and
inc
push
xchg
dec
mov
in
or
xor
and
ret
movb
push
push
sub
out
sub
jae
fimull
push
cmp
out
jb
fsubl
inc
aas
sub
and
add
sahf
sbb
test
loope
and
sub
les
mov
popa
enter
and
ds
push
pop
add
notl
out
and
daa
push
mov
cmp
cmp
aam
outsb
xor
adc
imul
andb
push
and
scas
fsubrp
sub
jle
or
repz
and
push
sub
and
xor
dec
jecxz
sub
sbb
add
std
adc
add
test
out
inc
imul
mov
je
popa
jno
and
scas
pop
jnp
in
and
pop
or
sbb
mov
mov
or
sub
scas
pop
daa
or
ret
mov
cmp
and
bound
and
das
mov
jl
out
inc
sbb
adcl
jmp
mov
push
or
mov
and
mov
cmpsl
pop
jecxz
and
sti
js
jmp
lods
cmpsl
cs
jecxz
and
ljmp
pop
mov
repnz
inc
and
push
lret
out
bound
lret
sub
push
and
pop
add
adcl
sub
out
xchg
arpl
adc
fistpl
pushl
rcrb
push
and
and
inc
frstor
shlb
mov
rclb
pop
scas
xor
gs
cmp
mov
fcmovbe
mov
add
int
push
cmp
and
vorps
sbb
mov
movsb
lods
and
imul
cmpsb
mov
scas
push
ljmp
ss
test
shlb
out
dec
test
cmp
and
in
cmp
xorb
popa
loop
add
and
cmp
out
add
int3
mov
inc
jecxz
mov
out
jb
stc
and
adc
and
movsb
bound
push
ret
mov
and
jbe
pop
das
and
cmp
add
aaa
or
out
lds
mov
lods
xor
and
stos
jb
and
sub
jno
insb
mov
jo
arpl
sbb
and
movsl
out
jne
shlb
dec
push
sub
mov
inc
lods
fcmovne
add
sbb
mov
mov
xchg
cmp
aas
sub
loop
and
jo
and
subb
lret
jae
cltd
xchg
pop
inc
vorpd
movsl
aas
mov
and
stos
mov
stos
cmpsl
cmpsb
out
sub
cmp
clc
in
push
add
xchg
ficomps
sbb
cmpsl
adc
fistpll
adc
xor
jno
inc
andl
sbb
lock
bound
mov
cli
nop
xchg
pop
lods
dec
and
mov
lret
adc
mov
xor
mov
pop
or
je
xor
popf
xor
dec
repnz
mov
adc
and
adc
pop
or
in
and
dec
fs
and
adc
add
daa
xchg
outsl
xchg
je
rcrb
test
adc
setb
inc
sub
test
mov
mov
xchg
dec
xchg
pushf
fsub
adc
sub
and
or
dec
jno
hlt
daa
repnz
retw
sub
and
push
and
sub
mov
in
sbb
rol
es
dec
daa
push
subb
push
in
cld
andb
into
push
dec
pop
mov
or
cli
xlat
push
inc
les
xchg
add
sbb
cmp
pop
adc
dec
jo
and
addr16
inc
sub
gs
scas
in
lods
push
jle
add
inc
pushf
cmpsb
leave
inc
sub
dec
jb
and
daa
loop
loopne
idivl
sbb
and
roll
scas
and
imul
decb
and
xchg
lock
ja
dec
push
xor
and
push
xor
jp
es
and
sbb
adc
arpl
pusha
jb
inc
bound
jb
fidivrl
sub
lods
xor
and
push
or
cli
adc
dec
cmp
and
cmp
jae
push
mov
iret
pop
movsl
pushf
stos
daa
and
jge
and
lcall
ljmp
loope
mov
in
data16
pusha
lods
pop
xor
inc
cmp
jne
push
ljmp
das
mov
mov
andb
inc
push
cmp
or
sub
and
pop
and
test
in
out
aam
jne
add
add
call
push
ret
mov
sub
test
dec
jne
adc
mov
dec
mov
mull
cmp
add
sbb
cmpsb
or
jae
add
test
xchg
rcrb
aas
and
addr16
sub
or
cmp
jge
mov
out
das
scas
int3
ds
int3
lahf
cmp
cli
stos
xor
inc
dec
push
shll
cmc
data16
xor
ds
inc
fidivrl
fidivrl
sub
add
pop
sbb
adc
sbb
pop
shlb
jnp
sbb
and
sbbb
pushf
and
push
sbb
rep
and
xorl
daa
lret
sub
or
xchg
and
xchg
mov
jne
xor
je
addr16
and
aas
ret
pop
das
cmp
jmp
add
and
sti
jne
and
jl
sbb
and
xor
cmp
mov
out
sub
and
aam
mov
pop
test
sub
bound
and
lea
xchg
jecxz
lcall
out
int
ror
fmul
or
faddp
and
dec
push
jne
aam
and
sub
cmpb
repz
psrld
nop
outsl
addb
in
xor
and
aaa
push
sbb
ret
and
stos
jae
mov
inc
sub
andb
cmpsl
and
ss
arpl
dec
and
and
and
sahf
filds
loopne
cltd
nop
lods
shrb
out
add
imul
mov
cmp
mov
and
push
pop
push
xor
xchg
xor
les
repnz
mov
and
add
inc
popf
into
imul
add
mov
and
dec
xchg
and
fsubrl
pop
cmp
mov
iret
xlat
and
inc
fwait
add
xor
or
adc
push
adc
and
sub
lock
add
lcall
jae
loop
imull
and
cmp
sbb
and
test
push
data16
sahf
lcall
or
mov
mov
sub
je
scas
ret
and
push
push
loop
pop
and
adc
jl
repz
out
sub
lea
and
mov
and
imul
sub
test
xchg
pop
add
in
pop
cmp
add
leave
pop
divb
adc
loop
out
in
xchg
pushf
rcrb
mov
jl
jge
mov
or
push
bound
add
or
dec
and
iret
add
xchg
rcrl
push
ja
sub
sub
data16
add
ret
scas
xorb
mov
das
shlb
xchg
lahf
aas
andb
out
or
dec
sub
dec
push
mov
mov
ss
cmp
subb
mov
jecxz
pop
xor
lret
xchg
sbb
mov
scas
push
xchg
sub
ret
push
in
imul
jnp
xor
dec
adc
bound
and
pop
xchg
jmp
xchg
ret
xor
and
dec
inc
xchg
mov
in
sbbb
mov
out
das
mov
mov
inc
add
mov
push
and
pushf
cmp
xor
and
lcall
and
xor
cmp
imul
fcoml
xchg
inc
mov
and
arpl
ficoms
sbb
lods
and
inc
cmp
lcall
xor
ljmp
jmp
xor
ja
sub
shll
pop
push
ret
cmp
sti
negb
jo
pop
out
repz
jp
pop
and
adc
dec
and
cmpsb
in
out
cmp
pop
imul
aad
cmp
and
dec
sti
sar
aas
sbbb
out
and
test
jle
and
xchg
mov
es
xor
cmp
outsb
rclb
jl
shlb
nop
xchg
push
loop
aam
and
mov
xor
movsb
js
inc
insl
and
jo
lahf
ds
cmp
jecxz
sarb
sbb
lahf
push
and
subb
mov
mov
xchg
outsl
fisubs
push
cmp
sub
rorl
and
push
addr16
inc
int
adc
jb
xor
and
xor
out
repnz
xchg
sti
and
xor
and
xchg
push
ljmp
cmpsb
int
mov
xchg
nop
loope
lods
add
and
fistps
repz
push
or
bound
push
cmp
pop
loop
dec
or
movsl
ss
sbb
xor
xor
lret
in
cmpsb
mov
jne
sub
and
stc
dec
pop
and
pop
lock
aam
loop
out
and
mov
test
lret
mov
rolb
sti
mov
mov
xor
imul
inc
and
cs
push
loop
aaa
and
mov
rclb
and
pop
sbb
or
push
mov
or
xor
dec
cmpsb
mov
outsl
sub
je
mov
jp
and
xchg
push
out
or
loopne
cmp
js
pop
xchg
and
mov
stos
scas
and
push
ss
xchg
je
mov
and
sub
sub
test
nop
jnp
lret
fwait
sbb
adc
sbb
mov
cmp
fdivrs
test
push
lahf
sub
call
add
pop
adc
cmp
and
mov
pushf
cmp
and
add
dec
jmp
andl
jecxz
imul
test
mov
pop
sbb
nop
fildl
scas
pmaxsw
cltd
or
rcrb
mov
jne
jnp
jg
inc
ljmp
mov
mov
sub
inc
aaa
sahf
repnz
test
dec
jmp
and
sub
sub
pop
cmpsl
mov
and
imul
cmp
test
adc
das
or
mov
xchg
cmp
stos
mov
pushf
rcrb
outsb
jp
sub
inc
jno
out
ds
dec
push
lahf
aam
jg
insl
xor
and
shl
int
xor
and
inc
loope
dec
and
sbb
mov
push
xor
jno
adc
rorl
and
and
fidivrl
sub
loope
inc
and
sti
and
shlb
es
aad
mov
cli
xor
mov
loop
jno
sub
jbe
loopne
sbb
fwait
clc
mov
sub
xor
fnstcw
or
push
push
adc
and
ret
xchg
mov
mov
jne
adc
test
dec
fadd
inc
ss
mov
xchg
or
and
and
popa
add
aas
aaa
inc
ss
pushf
jmp
and
pop
mov
jp
orb
mov
ss
and
leave
push
sub
push
loopne
jp
out
xchg
adc
lock
fldcw
jae
outsb
xchg
and
sbb
xor
and
and
pushf
aam
movsb
push
jns
pop
sub
scas
iret
mov
push
cmp
ret
adc
sub
pushf
xor
stc
mov
dec
add
rclb
add
sub
and
sbb
and
mov
and
daa
xor
add
push
aam
sub
cmp
mov
and
cmp
add
mov
mov
push
and
sbb
test
jno
push
xor
inc
movq
and
test
imull
stos
es
add
mov
xor
sti
ficomps
or
out
loopne
pop
xor
out
and
mov
fmull
or
mov
jno
xorl
or
sbb
sbb
xchg
cltd
ljmp
xchg
sub
lea
mov
ret
and
test
lcall
mov
jecxz
fnsave
push
xchg
and
mov
aam
adc
sbb
stc
sub
sub
cmp
jnp
xor
sub
cs
sub
and
or
sbb
mov
adc
ret
ds
adc
xor
push
into
and
lcall
ljmp
stc
jae
rclb
pop
sbb
push
dec
mov
mov
mov
je
aas
cmpsb
jnp
insb
jle
cmpl
inc
dec
sub
and
dec
stos
jecxz
push
and
xchg
es
rcll
sbb
or
add
jne
jecxz
add
out
mov
and
mov
roll
and
es
fsts
inc
idivb
aaa
inc
inc
ljmp
xchg
loopne
add
cmpb
dec
retw
sbb
sbb
clc
push
cmp
jp
mov
mov
and
int
xchg
xchg
and
sarl
and
lods
sub
pop
pop
and
dec
xor
mov
popa
andb
sbb
dec
lret
sub
nop
stos
and
jnp
and
leave
jo
jno
sbb
out
jl
push
loop
xchg
pop
cmp
loop
add
xor
or
fdivrl
and
out
push
mov
mov
jp
and
pop
cmp
outsb
fucomip
dec
xor
and
push
je
jbe
jmp
and
sub
xor
aas
and
push
in
or
in
js
ss
leave
sbb
sar
sbb
and
sbb
cmpsl
inc
adc
lret
push
push
and
movsl
lahf
mov
and
mov
cmc
daa
or
sub
push
and
es
lods
mov
mov
loop
dec
and
inc
gs
popf
and
and
and
aaa
jecxz
xchg
orb
movsl
mov
and
sub
sub
add
loopne
sbb
inc
sub
inc
xor
lods
and
xchg
cmp
sbb
loop
mov
mov
push
frstor
pop
mov
sub
or
jne
push
jb
dec
push
push
mov
and
push
lcall
ds
ret
test
stc
mov
and
hlt
mov
fidivrs
push
stos
bound
inc
sbb
jae
ljmp
mov
popa
scas
jg
add
pop
or
test
fs
push
std
dec
xor
sbb
push
jbe
rcr
pop
popa
or
pop
or
scas
outsl
rolb
and
cmp
sub
ret
and
and
or
shll
mov
inc
sti
push
js
and
aaa
and
mov
push
push
jbe
push
and
mov
repz
mov
mov
or
andl
out
mov
ss
fisubs
pop
es
loop
mov
mov
and
cmp
and
divb
movsl
ucomiss
dec
mov
jle
lret
sbb
cld
and
or
orl
jno
loope
and
and
into
jmp
ss
test
adc
and
repz
xchg
push
stc
test
or
aam
inc
lea
gs
xchg
sub
xor
aas
bound
cmc
aas
addr16
imul
xor
fisubrs
and
push
xchg
or
xor
lcall
pop
and
xor
xor
sub
and
jno
and
ds
and
fstl
push
ret
ds
js
and
ds
mov
and
push
divl
and
scas
sub
and
and
xor
sar
inc
and
jge
and
jbe
dec
sub
and
pop
pop
xor
das
mov
adc
adc
sbb
xor
adc
dec
andl
test
ljmp
and
jae
mov
xor
fsubs
mov
or
mov
pop
jbe
mov
ds
fdivl
ss
and
xchg
adc
mov
jge
cmp
scas
and
dec
fs
mov
cmpsb
loop
xor
pusha
cmp
iret
mov
stos
or
call
ds
push
mov
sub
jmp
mov
xor
or
add
ljmp
addb
jg
pop
and
xlat
pushf
icebp
sbb
adc
or
cmpsl
jnp
ror
popa
mov
es
pushf
cmp
mov
or
daa
inc
sub
call
ss
sbb
add
xchg
movsb
add
daa
outsl
iret
cmpsb
and
mov
mov
out
lret
push
popa
adc
mov
mov
fisubrl
lods
roll
cmp
lcall
jmp
mov
xor
push
pusha
and
inc
ficompl
sub
popa
decb
adc
and
mov
inc
scas
mov
sbb
push
adc
and
out
dec
test
out
and
mov
je
cltd
in
dec
sub
ret
std
adcl
or
or
and
int3
aad
xorb
aas
sub
sbb
or
and
xchg
sbb
inc
xor
orb
in
and
xchg
or
and
aas
out
push
gs
cmp
push
test
dec
push
push
cld
stos
jl
mov
sbb
or
and
inc
fisubl
cmp
daa
pop
xor
ret
xor
scas
mov
xlat
inc
stc
insl
mov
push
and
jno
jae
mov
and
lret
jne
sub
and
je
sbb
pop
push
and
and
jns
dec
es
cld
sbbl
loop
sub
jle,pn
std
sub
das
jbe
sub
movsl
pop
mov
loop
scas
and
cmc
lcall
pop
into
push
cpuid
fidivl
push
jnp
mov
int3
xor
iret
fwait
pop
mov
lcall
mulb
daa
push
stos
fsts
nop
fwait
and
sahf
inc
sub
push
push
inc
in
fbstp
or
adc
mov
xor
fiadds
mov
arpl
xor
and
inc
and
lcall
and
sub
push
mov
scas
push
test
cmpsl
and
dec
in
out
sub
and
pushl
add
ret
cmp
fstl
fldenv
scas
push
es
push
sub
add
mov
test
outsl
and
mov
lret
nop
jmp
push
mov
es
cs
or
mov
and
fsubs
jbe
shlb
push
mov
sub
xchg
and
and
add
xchg
lcall
and
push
xor
sbb
jo
push
lods
and
lret
dec
dec
inc
sahf
cmp
push
jns
add
fucom
jg
sbb
inc
push
cmp
sti
xchg
stos
ret
aam
call
or
push
out
push
and
ret
aaa
loopne
and
push
std
sub
cmc
or
sub
dec
cwtl
scas
ja
jno
mov
test
xchg
faddp
lods
mov
and
loop
ficoms
add
sub
sub
inc
mov
shll
call
dec
sbb
jae
sbb
out
and
push
add
sub
sarl
mov
mov
lods
orb
push
lret
jbe
movsl
pop
add
cmpsl
shl
in
es
pop
icebp
jle
xor
fcmovbe
ret
mov
lds
sarb
jno
lret
ret
jmp
out
push
mov
sbb
ja
cld
scas
insb
and
sbb
push
adc
xchg
arpl
and
lods
lret
mov
pop
and
loope
pop
dec
mov
bound
sbb
stos
sbb
push
mov
popa
mov
mov
outsb
sub
sbb
popa
in
out
sub
xchg
int3
cmc
add
sub
mov
push
push
rcrb
and
addr16
and
add
fistpll
movsb
lret
pop
adc
and
ficomps
pop
outsl
shl
or
mov
bound
adc
cmp
loopne
insl
stos
cmp
bound
aaa
mov
cmp
jbe
mov
or
int3
repnz
ret
and
sbb
pop
or
xor
pop
xchg
sahf
pop
loop
xor
or
fisubs
and
xchg
dec
push
push
gs
jnp
pop
ret
stos
pop
sbb
sbb
dec
and
movsb
notb
and
popf
xor
cmp
lcall
das
jne
or
sub
jb
xchg
jmp
bound
test
inc
and
and
imul
and
insb
les
ret
sbb
inc
adc
mov
cs
mov
adc
and
std
pop
dec
movsb
mov
xchg
bound
sbb
mov
cmp
dec
out
and
mov
sbb
fmuls
mov
mov
out
bswap
shll
adc
sub
and
bound
xor
adc
cmp
aas
add
jp
pop
pop
and
adc
mov
ficomps
jge
xor
andb
xor
sub
push
xchg
inc
bound
xchg
or
popf
pop
push
loop
cs
sub
jge
push
inc
jne
add
enter
and
xor
and
sub
bound
cld
bound
mov
xchg
add
sub
xchg
and
je
jo
into
add
sbb
and
jecxz
and
and
mov
lcall
push
nop
cmp
test
push
es
and
sahf
daa
callw
pop
and
fidivs
nop
addr16
adc
cmp
jae
and
jp
scas
dec
jno
jle
and
sub
ds
cmpl
test
cmp
cmp
into
or
sub
fldenv
and
add
pop
loop
repz
cwtl
clc
lret
pop
jae
xchg
stos
jp
in
aaa
push
scas
test
hlt
mov
loop
test
or
out
push
shlb
add
lcall
cld
jnp
fisubl
mov
ja
fisubs
and
push
add
fisubrl
into
ret
ja
and
test
jnp
jno
lcall
jo
xor
test
and
adc
or
and
dec
imul
stos
stc
and
hlt
and
je
lcall
jne
adc
add
icebp
jb
sbb
mov
inc
and
mov
imulb
adc
inc
adc
inc
ja
and
mov
jae
and
fdivs
jne
adc
adcb
in
hlt
and
loop
clc
out
jbe
mov
shl
mov
pop
and
and
and
cmp
les
ret
and
pop
inc
push
out
cwtl
test
lods
notb
and
jae
push
out
pop
pop
arpl
shrd
pop
lds
jb
mov
and
ds
sub
jmp
ret
rcll
or
aaa
push
call
jmp
test
bound
push
add
ret
mov
vmread
jno
and
int
jne
hlt
sbb
iret
pushf
mov
add
mov
lahf
and
mov
pop
and
inc
jmp
daa
push
inc
xlat
add
jmp
xchg
mov
mull
arpl
dec
mov
push
xor
sub
jg
popa
ds
jmp
test
gs
orb
mov
lret
ficoml
sub
sub
and
jg
mov
cli
and
jno
cmp
mov
and
imul
sub
pop
and
dec
push
aaa
inc
xchg
pop
nop
xchg
and
add
xchg
sti
adc
ffree
and
dec
pop
outsl
and
mov
and
test
xchg
mov
and
aas
inc
xchg
adc
mov
sbb
and
mov
dec
sbb
fsubrl
sbb
or
fcomps
out
in
daa
and
scas
lahf
and
enter
pop
push
xor
push
or
xorb
add
sub
inc
cmp
das
andb
fcompl
pop
push
adc
je
jae
popf
loopne
shlb
inc
or
out
and
cltd
adc
cmp
mov
cmp
or
sbb
xchg
and
add
test
imul
and
and
inc
inc
and
loope
and
cmp
daa
and
inc
push
mov
jbe
dec
and
lret
sbb
and
fwait
subb
and
andl
push
sbb
or
cmp
and
xor
and
and
inc
cmpb
test
clc
xchg
dec
adc
jbe
imul
and
jg
mov
repz
mov
cmp
and
ljmp
sbb
xor
sahf
sub
cmp
push
dec
pop
and
push
mov
push
and
mov
loop
cmp
mov
cmp
outsb
and
sub
and
pop
lds
dec
sub
add
test
sbb
pop
dec
in
ret
out
and
xchg
xor
cmpsb
xor
mov
cs
test
dec
cmpb
or
and
and
and
mull
mov
inc
mov
mov
mov
dec
lods
es
push
or
popa
mov
inc
out
cmp
into
rcrb
jno
ret
sbb
and
or
xchg
icebp
and
and
out
xchg
cmp
and
inc
add
mov
sbb
pop
and
xlat
and
cmpsl
stc
sbb
movsl
incl
push
gs
test
inc
jg
int3
adc
leave
sub
and
repnz
sbb
and
pop
xor
push
cli
int
in
sbb
sub
ljmp
insl
jecxz,pn
es
ret
test
xor
and
sub
jnp
stos
mov
fiaddl
sbb
pop
rcrb
mov
cmp
shlb
mov
lret
fs
movsl
and
cmp
test
inc
ret
idiv
and
sub
lret
leave
mov
fistpll
daa
movb
scas
adc
fcoml
sbb
cmp
enter
data16
push
popf
and
adc
popa
scas
pop
mov
bound
dec
dec
popf
and
adc
cmp
test
and
jmp
xor
movsb
pop
in
xchg
movsl
fldl
fwait
cmp
add
cmp
add
adcl
dec
jnp
ss
and
xor
lret
inc
ljmp
jecxz
dec
ret
and
test
into
jae
jne
jp
adc
cmp
dec
adc
cwtl
mov
push
cld
pop
outsl
or
bound
outsb
mov
or
aam
push
sub
pop
mov
inc
and
mov
and
or
scas
ljmp
rorb
push
sub
dec
and
and
push
cmpb
mov
dec
out
mov
jle
mov
mov
push
cmp
xor
xor
mov
cmp
rolb
jp
test
sbb
and
add
adc
sub
es
mov
push
lret
and
jne
xchg
and
inc
leave
and
jge
push
sub
lret
and
inc
add
add
daa
xor
push
jl
mov
rcl
or
mov
and
adcb
mov
loope
pop
es
sub
mov
int3
sbb
mov
xor
test
stc
test
mov
inc
and
lret
imul
sub
add
xlat
in
lret
and
xor
daa
sub
and
sub
push
sub
pop
in
loopne
push
jp
mov
aad
fmull
adc
and
pop
push
pop
mov
jle
and
push
add
fldenv
cmp
bnd
cwtl
int
inc
sarb
or
cmp
enter
mov
inc
and
rcrl
mov
loope
loopne
mov
pop
or
push
and
aaa
mov
and
adc
stc
and
sub
jg
adcl
movb
xor
and
es
and
jo
xchg
lds
cmpsl
mov
cmp
and
cmp
int3
rcrb
fisubl
adc
ret
outsl
data16
imul
cmp
fld
pop
les
mov
mov
cli
je
and
or
and
push
cmp
daa
mov
pop
mov
xor
pop
adc
dec
popa
add
loope
sub
mov
xor
cmpsb
or
mov
es
xor
xchg
and
aaa
fimull
push
iret
sbb
add
and
and
dec
fists
and
add
lret
and
jg
pop
mov
sbb
mov
jae
and
cmp
jl
cli
or
cmp
xor
out
and
movsl
in
push
pop
sub
and
dec
and
and
lock
es
xchg
sub
or
psubusw
jb
mov
fcoml
and
bound
ss
cmp
and
jb
xor
sbb
pop
cli
int3
push
popf
inc
dec
xchg
cmp
jno
xlat
adc
dec
jo
lret
cmp
and
add
mov
daa
imul
pushf
xchg
lds
out
iret
pop
je
mov
dec
mov
sbb
xor
sbb
and
adc
fwait
aas
ja
or
and
inc
leave
pop
pop
xchg
mov
inc
mov
pushf
arpl
xchg
and
pop
pusha
adc
jo
add
add
ret
jl
inc
out
stos
je
add
das
and
aaa
push
mov
push
and
je
jge
cmp
daa
jb
rorb
leave
out
cs
and
mov
imul
ljmp
xchg
outsb
call
mov
jns
bnd
out
jp
bound
mov
lock
pusha
and
aaa
pop
and
mov
and
inc
insb
popa
sub
fsubrl
sub
ss
addb
mov
adcb
pop
out
and
cmp
mov
and
cltd
mov
and
push
and
int3
push
pop
loop
jl
pop
or
push
or
lret
outsl
push
sbb
fstl
xor
xlat
jne
jle
pop
sbb
pushf
cwtl
das
je
sub
sub
and
imul
mov
jmp
decb
into
xor
insl
or
and
jne
leave
cmp
and
loop
sbb
cs
sub
into
enter
and
jmp
sub
and
nop
push
or
push
pop
and
repz
ljmp
stc
lret
stos
add
jnp
cs
enter
and
into
cmp
push
sbb
repnz
outsl
mov
pop
dec
sbb
push
mov
push
mov
cmp
mov
xor
mov
sub
and
add
orb
in
ret
push
testb
push
sub
lea
inc
arpl
enter
and
stc
int3
out
loop
sbb
push
cmp
mov
aad
pop
shl
lock
pop
cli
xor
andb
xchg
xor
aas
or
inc
jecxz
shlb
rorl
and
test
xchg
or
pushf
loopne
mov
or
add
loope
adc
mov
and
adc
add
and
adc
data16
and
lods
and
jne
push
and
gs
movsl
aas
push
cmpsl
sub
add
mov
xorl
aad
and
xor
sub
and
popf
lea
or
and
push
push
lock
sub
cmp
sub
andl
aad
adc
ret
out
icebp
das
inc
mov
imul
pop
dec
sbb
and
push
and
jne
repnz
ss
into
lret
and
add
cmp
loop
call
jbe
jne
jno
xchg
fstpl
int
pusha
add
push
aas
icebp
aad
mov
movsb
in
or
pushf
je
mov
add
adc
ss
dec
sbb
loop
aaa
push
jp
and
dec
pop
mov
int3
push
and
push
ljmp
hlt
push
cli
and
sti
xor
ret
adc
xor
fsubrs
dec
icebp
pop
andb
pop
sub
in
push
aad
loop
lock
mov
loop
cmp
sbb
sbb
fadds
and
loop
sub
adc
mov
xchg
mov
gs
sub
and
mov
sbb
and
bound
cli
and
inc
xchg
mov
cmp
jo
jge
ret
ficomps
std
or
clc
fpatan
aaa
dec
sbb
mov
lds
push
and
mov
and
and
adc
pop
sub
mov
je
ficomps
stos
and
add
sbb
sbb
es
loopne
xor
mov
dec
and
inc
dec
xchg
adc
fs
dec
mov
sub
loop
xor
xor
ret
and
ss
inc
and
xchg
jno
les
data16
jl
pop
and
daa
adc
ljmp
and
mov
pop
inc
and
dec
and
sub
xchg
push
jbe
testb
leave
outsl
sub
mov
sbb
jno
push
dec
daa
sub
mov
jge
and
jecxz
mull
fists
push
jge
test
and
mov
mov
xor
jmp
and
adc
fwait
mov
cmp
jns
ret
and
add
pop
cmc
sbb
push
add
push
sub
and
adc
dec
ds
out
pop
fisubl
add
cs
push
jg
dec
xor
in
xor
and
pop
or
xor
add
and
sub
mov
pop
xor
mov
fwait
pop
add
push
or
shl
repnz
mov
test
inc
xor
inc
aaa
in
pop
mov
dec
roll
mov
pop
adc
cmpsl
push
int3
push
fdivrs
inc
and
lock
and
data16
loop
inc
shlb
fwait
push
sub
mov
jne
test
jnp
push
and
push
mov
into
push
and
pop
mov
shlb
jp
jbe
jne
mov
jge
aas
mov
fmulp
repnz
adc
mov
adcb
mov
nop
sub
add
push
push
and
movsb
push
mov
add
xchg
or
sub
mov
pop
jb
inc
mov
sub
loope
in
and
sahf
sub
push
das
int
cmp
inc
jl
bound
or
je
stc
lds
or
jne
and
xchg
dec
test
jecxz
jmp
ret
and
sub
shr
cmp
cmp
xor
fbld
ljmp
mov
cli
jb
sub
aam
sub
das
or
jmp
cmc
test
aas
lcall
mov
dec
sub
push
shlb
fimuls
repnz
add
sub
cli
aad
cmp
mov
pop
sahf
and
cli
fbld
sub
and
cmp
xchg
dec
cmp
sub
jecxz
push
cli
add
leave
and
js
mov
and
and
aaa
data16
jecxz
mov
sbb
xor
int
fisubrs
fidivrl
aam
and
cmp
int
lret
sbb
stos
repnz
mov
mov
es
cmp
imul
lock
shlb
and
and
fiaddl
pop
or
ss
push
xor
cmp
and
mov
insb
iret
cmp
jb
into
pop
dec
and
loopne
and
dec
cs
and
fsubl
or
jae
or
leave
inc
loop
divl
ficomps
shrl
or
inc
mov
icebp
mov
ljmp
xchg
jne
into
add
shlb
cmc
or
dec
xchg
and
or
and
dec
es
mov
push
pushf
xchg
mov
jo
aas
lret
bound
in
xor
add
adc
rol
pop
sub
jno
mulb
scas
adc
mov
inc
bnd
loop
and
leave
push
or
push
or
rcll
xchg
inc
xor
xchg
fcmovu
cmp
cmp
orb
mov
repnz
nop
mov
mov
cltd
sbb
xor
cs
mov
scas
sahf
adc
and
mov
inc
xor
nop
pop
jnp
mov
and
push
mov
add
stos
clc
es
sub
pop
repz
xor
cli
mov
and
mov
stos
and
add
cltd
test
cmp
mov
and
jnp
mov
fsubl
sbb
and
ss
mov
bound
inc
add
mov
sub
cld
and
cli
mov
popa
fidivl
xchg
and
adc
xor
and
sub
jne
ret
cs
sbb
ja
jp
dec
push
shlb
ret
and
outsl
or
test
and
shl
mov
add
and
jb,pn
add
inc
dec
cmp
sub
sub
mov
mov
loope
pushf
pop
cmpsb
dec
and
cmp
mov
ds
push
and
mov
es
xchg
sub
fisubl
xchg
mov
and
ret
sub
dec
scas
adcl
push
and
loop
mov
jne
out
jno
add
push
and
faddl
or
mov
inc
or
jp
xchg
mull
data16
inc
inc
bound
and
shlb
xor
loop
xor
subl
jl
jp
loop
mov
outsb
loope
aaa
jecxz
mov
jno
adcb
cmpsl
mov
or
add
adc
mov
je
cs
ja
bound
inc
inc
sub
xor
pop
not
cli
test
jns
adc
sub
insl
outsb
adc
or
cmp
jmp
int
std
or
push
sbb
pop
and
sbb
cmp
adc
insb
mov
out
leave
subb
clc
jae
sub
mov
inc
cmp
sbbl
xchg
jl
jb
and
pop
and
dec
and
fisubs
adc
push
inc
dec
les
and
jb
and
and
xchg
push
es
dec
or
out
sbb
xor
mov
cmp
xchg
movl
sbb
push
cmp
sub
ljmp
jnp
pop
cmc
and
mov
xor
and
cmp
xorb
out
push
sub
xor
lea
mov
and
sub
add
and
xchg
lea
into
and
lods
daa
ret
aaa
rorl
jle
mov
insl
bound
mov
out
ret
sub
mov
mov
sub
in
xor
mov
push
daa
push
int3
dec
xchg
sub
arpl
sub
xor
jg
out
dec
rcl
test
adc
sbb
adc
cmpsb
add
daa
loope
sbb
push
mov
mov
fcoms
lret
and
and
pop
mov
sbb
test
mov
and
shlb
xchg
pop
test
and
call
fwait
push
and
cmp
subl
sub
jbe
and
and
out
js
lcall
scas
test
mov
inc
outsl
sub
outsb
or
aaa
adc
test
daa
popf
fs
xchg
mov
stc
and
jle
cs
pushf
bound
outsl
sbb
push
mov
xchg
sbb
cmp
jmp
shll
movsl
and
stos
bound
loop
mov
pop
and
lahf
xor
cs
ss
test
and
pop
insb
push
aam
or
mov
sub
xor
popa
or
hlt
inc
shll
pop
xor
mov
push
mov
sahf
inc
and
and
iret
sbb
inc
push
cmp
xor
fiaddl
ss
or
subb
pusha
dec
dec
js
call
cmp
push
add
int
sub
xchg
pop
arpl
or
addr16
stos
pusha
push
mov
inc
push
xor
mov
pop
in
adc
add
ljmp
pop
push
daa
ret
and
out
stos
out
sahf
inc
inc
out
sub
xchg
xchg
out
ret
and
cmpb
mov
aad
dec
cmpsb
pop
imul
lret
sub
mov
dec
pop
into
cmpsl
and
ds
xchg
dec
addl
and
loope
mov
cmp
pop
stos
and
sub
sub
sbb
and
cwtl
daa
loopne
sub
jb
fnsave
ds
repz
mov
cli
sub
push
popf
dec
jns
and
pop
mov
and
and
push
sub
inc
cli
lds
push
sub
les
ss
loop
aad
cmc
cmp
std
arpl
xor
and
adc
test
inc
in
int3
sub
mov
shlb
out
and
mov
loop
insb
outsb
and
add
jnp
push
insl
inc
testl
and
clc
stc
and
mov
or
into
and
mov
push
sbb
aas
test
div
leave
mov
add
stc
sarl
cmp
cmp
adc
cld
insl
sbb
and
pop
pop
daa
hlt
and
push
push
test
inc
jle
bound
outsb
data16
daa
bound
sbb
push
loop
pop
push
xchg
and
add
stos
dec
sub
loopne
add
imul
mov
and
loope
dec
cmp
and
cmp
fisubs
das
popa
mov
dec
mov
jo
xor
xor
adc
ds
inc
or
fdivrl
sub
pop
and
mov
jo
cmp
pusha
outsb
into
inc
and
and
loopne
aas
and
outsl
movsb
inc
and
jmp
ret
aam
push
and
push
shll
fsts
stos
imull
in
and
or
aaa
sbb
ds
push
jmp
jle
sub
andl
push
cli
gs
pop
sub
insb
andb
cmp
incl
or
sbb
stos
and
bound
and
out
clc
push
inc
push
es
mov
and
dec
je
and
outsl
and
add
sti
and
lret
or
inc
and
cmp
fmulp
leave
and
jo
push
inc
mov
and
cli
lcall
sub
fs
push
and
popf
fstpt
in
mov
sub
shlb
call
imul
ja
in
xchg
mov
xor
and
mov
and
jne
stos
dec
cli
and
imul
pop
xor
xor
and
cmpsb
jecxz
sbb
bound
push
push
mov
pop
inc
arpl
and
push
and
icebp
and
outsb
lea
mov
mov
and
cmp
mov
popl
xorl
in
xor
jo
push
and
call
ss
pop
aaa
cmpsl
wrmsr
and
push
sub
push
lcall
mov
rcr
in
dec
dec
dec
pop
inc
pop
inc
sbb
rorl
pusha
xor
jmp
ds
lahf
cmp
and
push
cmp
js
push
push
sahf
mov
iret
xchg
out
test
mov
and
mov
cmp
sahf
out
test
aad
call
mov
lret
xchg
cmpsb
out
mov
test
adc
aam
stos
dec
xchg
jnp
and
lods
sbbb
cmp
jns
adc
shll
in
add
mov
enter
and
nop
fucomp
mov
sbb
cmp
xlat
or
and
inc
dec
push
dec
inc
xchg
push
dec
enter
adc
fstl
add
loop
dec
and
ljmp
push
sub
movsb
add
imul
and
outsb
test
and
and
jle
pushf
and
imul
outsb
cmc
xchg
mov
mov
or
pop
mov
xchg
dec
inc
rclb
sbb
stc
sub
xchg
gs
inc
mov
aam
xchg
push
dec
dec
push
pop
add
das
stc
clc
push
and
popa
rclb
sbb
and
inc
insl
cmc
dec
rcrb
nop
and
dec
inc
int
jle
scas
int3
das
and
and
imul
or
dec
and
dec
mov
push
push
dec
sbb
adc
pop
lods
pop
sub
adc
inc
sub
mov
movsb
cltd
jb
lods
adc
imul
out
int3
je
jne,pn
iret
push
fldenv
jbe
adcl
cltd
and
inc
add
dec
sub
and
nop
vprotd
xor
ret
insb
inc
sub
or
and
popaw
stos
add
xchg
add
sub
pop
pop
and
daa
and
cmp
dec
and
cld
push
adc
jmp
adc
and
cltd
je
mov
movd
inc
xchg
nop
loope
es
inc
push
lahf
loop
fdivr
mov
gs
or
push
and
or
pop
jg
divl
int3
dec
and
push
add
shll
push
add
inc
stc
cli
dec
sub
lea
aam
or
mull
or
jae
push
push
push
subb
mov
mov
and
pop
cs
in
push
mov
push
dec
push
loop
jge
push
add
push
lds
cmp
xchg
sub
adc
jge
sarb
lock
lods
outsb
sub
and
les
pop
xor
and
jae
js
dec
xchg
sub
jge
xor
pop
push
jp
sti
jg
push
push
xor
xor
adc
sub
fcoms
inc
push
popa
or
push
pop
push
ret
repnz
xchg
sbb
adc
and
hlt
dec
dec
push
mov
push
sbb
and
data16
sub
and
jmp
add
sbb
imul
sub
xchg
and
lahf
pop
mov
loope
and
and
inc
orb
push
dec
or
dec
stos
cmp
or
cmp
insb
pop
mov
adc
repnz
and
sub
xor
and
cmp
jno
xor
jb
xchg
sbb
outsb
arpl
jno
icebp
push
dec
cmpsl
or
sub
inc
xor
xchg
xor
or
xchg
push
popf
sar
addr16
popa
and
imul
fst
cmp
cltd
fs
je
push
and
xchg
frstor
jo
loop
jno
jbe
popa
imul
mov
popa
xchg
jp
push
xchg
and
arpl
cmp
bnd
and
push
or
inc
and
ja
pop
inc
dec
mov
adc
outsl
loopne
mov
mov
ja
popa
xor
dec
std
push
shrb
push
lods
and
push
dec
inc
push
and
aam
dec
and
inc
scas
jno
and
addr16
jae
dec
add
and
dec
cmp
inc
mov
bound
sub
and
add
idivb
scas
pop
jl
pusha
inc
sub
inc
inc
mov
mov
sbb
lahf
add
and
push
push
adc
mov
xchg
lcall
dec
ret
inc
dec
std
cltd
and
cli
pop
jb
push
push
repz
repnz
in
and
mov
xor
arpl
inc
fcoml
xor
dec
lahf
pop
jns
and
daa
hlt
add
in
bound
insb
xchg
cmp
jno
mov
or
shlb
testb
push
inc
mov
hlt
leave
loop
cmp
jbe
sub
je
jno
lock
jnp
test
cs
xchg
and
mov
jne
cmpsl
imul
add
inc
push
pop
test
cmpsl
xor
dec
fwait
cmpsl
in
loop
inc
inc
or
push
stc
sub
arpl
or
nop
movsl
mov
jmp
dec
and
dec
adc
test
mov
sub
cld
and
les
dec
dec
outsb
enter
movsb
pop
mov
lods
clc
and
mov
fstpl
push
sbb
adc
jmp
xchg
scas
mov
shlb
hlt
sub
scas
sarl
inc
pop
popa
lahf
dec
daa
sub
push
sub
mov
adc
jns
sti
inc
dec
adcl
and
test
push
xor
jecxz
and
test
mov
xchg
pop
sub
mov
cld
and
or
xor
das
sub
loope
xchg
jnp
scas
out
mov
repnz
test
push
jbe
sbb
pop
mov
and
dec
jb
inc
decl
push
mov
dec
dec
and
ds
in
xor
and
dec
and
int3
and
mov
and
xor
jns
and
cmpsb
adc
add
arpl
fimull
push
vpmulld
and
pop
cmc
add
jnp
sbb
mov
inc
dec
and
les
fistpll
and
mov
xor
add
adc
push
and
or
dec
retw
cli
pop
jae
push
outsb
movsl
dec
and
aaa
dec
int3
hlt
in
and
pop
push
mov
dec
out
and
loopne
push
cwtl
jno
out
mov
and
inc
mov
into
imul
sbb
stos
mov
fisubs
sub
pop
out
xchg
call
and
jnp
jg
mov
push
daa
mov
repnz
push
inc
das
xchg
sbb
sahf
mov
mov
inc
mulb
xchg
pop
dec
lret
das
adcl
mov
cli
jle
stc
pop
fwait
jb
iret
imull
add
mov
inc
cmp
push
dec
xor
dec
loop
push
push
adc
and
in
and
sbb
mov
dec
aad
and
push
lcall
mov
push
mov
icebp
add
and
inc
test
fidivrs
inc
pop
inc
dec
push
push
adc
cld
inc
aam
jo
loope
test
clc
inc
pop
es
jle
loop
dec
jmp
and
and
stos
add
push
push
lcall
or
lahf
testl
and
push
mov
push
sub
dec
and
sbb
push
dec
and
clc
pop
xchg
inc
add
xchg
cmp
out
push
bound
mov
ret
push
cmp
movsl
inc
cli
pop
mov
fs
orl
test
sub
mov
clc
sub
sarb
lahf
outsb
push
push
inc
aad
jmp
inc
adc
and
adc
xorl
and
ja
fs
dec
ljmp
and
or
cmp
mov
mov
into
pop
xor
and
fsubrs
and
mov
push
inc
and
js
and
xchg
cltd
push
adcl
dec
mov
jecxz
aam
mov
sub
and
push
imul
push
inc
test
repnz
sbb
or
js
add
leave
sbb
mov
hlt
aaa
test
dec
dec
lahf
cmpb
dec
and
pop
sub
mov
add
and
cmpsl
push
dec
out
jnp
and
ficoml
push
xchg
loope
pop
push
popa
rorb
cmp
inc
sbb
and
dec
sbb
aas
loop
push
mov
jp
movsl
inc
ds
into
rcrl
sbb
insl
loope
sahf
pop
push
xchg
and
inc
push
push
pop
and
sbb
enter
sbb
push
mov
lods
sub
dec
ret
push
push
inc
pop
cmpsl
and
test
push
pop
andb
daa
cli
js
dec
push
ds
rolb
aam
insb
push
loope
popf
jno
sub
mov
and
repz
xchg
ret
dec
push
cmp
aas
mov
dec
sub
push
or
dec
inc
push
and
dec
or
xchg
inc
jb
repnz
xor
mov
xor
dec
orb
inc
cmp
fldt
loop
dec
add
inc
push
pop
push
es
cld
int3
jnp
adc
jo
and
mov
cmpsb
iret
vmulss
and
dec
jl
cs
pop
and
cwtl
sub
dec
and
pop
dec
movsb
nop
dec
cmp
mov
inc
and
test
push
dec
lret
hlt
shlb
sbbb
add
icebp
and
ds
push
pop
dec
xchg
and
push
fbld
mov
sub
push
and
xor
and
inc
fmul
popl
or
mov
movsl
and
out
dec
scas
inc
sarb
push
test
xlat
bound
movsb
lods
inc
push
cmpsb
and
fwait
mov
mov
push
pop
sub
jle
jae
arpl
mov
and
xor
lcall
das
xchg
movsl
add
pop
and
push
sub
iret
std
fdivrs
xchg
xor
pop
and
rclb
out
inc
and
inc
outsb
cmp
imul
dec
iret
testb
xor
out
cmp
fs
cmp
dec
bound
sbb
cmp
and
ja
inc
cmpb
dec
lods
and
daa
popl
pop
and
push
bound
or
repnz
mov
pop
dec
pop
incl
push
jmp
es
movsl
in
loop
or
mov
mov
sbb
mov
cli
cld
daa
and
and
sarl
je
inc
mov
jo
enter
push
jb
test
and
cwtl
dec
inc
notl
in
xchg
xchg
mov
lcall
cwtl
adc
ss
jbe
out
push
push
xor
addl
fmull
or
int3
sbb
sub
aad
lret
in
xchg
es
out
shl
addb
dec
inc
pushf
and
and
mov
arpl
cs
and
xor
test
xchg
loop
inc
cmp
and
pop
pop
add
xchg
mov
push
bound
fidivrs
inc
mov
jecxz
pop
lcall
lret
and
int3
sbb
sti
adcb
push
and
dec
xchg
xchg
xchg
repnz
inc
mov
push
shlb
rcrb
int3
movsl
and
jae
inc
aaa
or
push
repz
push
and
ljmp
jae
push
and
push
inc
rcll
sub
add
and
adc
or
test
pushf
mov
and
push
les
repnz
inc
std
cmpsl
daa
mov
and
pop
ljmp
sbbl
push
aas
daa
out
dec
loopne
jecxz
jno
sub
dec
push
bound
fwait
and
mov
lcall
lock
pop
pop
outsb
aad
dec
adc
jno
mov
and
dec
mul
and
push
lret
mov
decb
and
dec
dec
pop
icebp
nop
sbb
dec
mov
dec
or
dec
sub
cmp
jg
inc
faddl
jle
sbb
adc
and
loop
scas
xor
push
and
leave
xchg
outsb
leave
sub
and
fistl
roll
mov
xchg
aam
lcall
dec
adc
and
inc
push
outsb
mov
and
pop
jecxz
cwtl
dec
and
lock
pop
scas
xlat
fcoms
push
and
add
sub
and
sub
add
and
mov
inc
and
inc
jmp
mov
inc
inc
leave
mov
popa
andl
cmpsl
add
mov
push
dec
push
jl
dec
into
movsl
lcall
in
outsb
dec
jns
mov
imul
je
adc
push
mov
dec
jecxz
push
or
and
rorb
pop
mulb
lods
cli
xor
andl
inc
xchg
inc
add
push
cmp
cmpsb
dec
push
push
cs
pusha
pop
and
lcall
push
adc
inc
push
inc
loopne
and
pop
mov
sub
pminub
jl
loop
imul
in
inc
mov
push
mov
mov
dec
arpl
mov
and
fs
or
ret
pop
and
push
fwait
inc
inc
es
leave
outsb
cld
inc
movsl
sti
xchg
mov
xchg
xchg
notb
sub
jne
mov
and
add
sub
sbb
imulb
in
push
pop
inc
enter
outsb
bound
and
sub
push
mov
cmpsl
or
or
and
cmc
mov
lods
jne
scas
mov
data16
add
and
iret
mov
mov
xchg
lcall
insb
mov
push
xchg
xor
jp
aad
movsb
xor
repz
std
push
and
mov
and
mov
pop
push
sub
push
pop
stc
jle
mov
ds
mov
dec
pop
or
mov
cmp
push
dec
push
xor
and
mov
cmpsl
add
jae
mov
push
dec
push
les
loop
test
and
lret
adc
and
sbb
dec
mov
xor
or
jno
cmp
mov
push
out
and
and
and
dec
xor
inc
outsb
addr16
data16
mov
dec
pop
cmp
or
sbb
fcompp
xchg
je
fldenv
and
sub
stos
inc
and
cs
and
inc
add
inc
int
push
adc
pop
ret
push
mov
mov
mov
push
push
loop
mov
xchg
mov
dec
sbb
mov
push
aas
popf
loope
dec
test
arpl
and
add
and
pop
push
ficoms
inc
cmp
xchg
dec
icebp
mov
imul
adc
hlt
cmp
fcoms
sbb
dec
loop
cmp
in
push
sub
ljmp
mov
xchg
sub
jo
mov
xchg
xor
and
cmc
pop
lods
sub
lea
cs
sbb
add
rorb
pop
xchg
arpl
xchg
loopne
and
pop
and
push
incl
inc
sub
xor
fs
es
stos
and
cmp
loop
sub
inc
cmp
and
insl
aad
sti
imul
push
sbb
or
dec
gs
movsl
and
sub
and
dec
mov
gs
rcrb
jns
and
xor
push
adc
adc
ret
inc
adc
mulps
xchg
lahf
jp
xor
jns
cltd
imul
adc
and
cmp
and
sub
outsb
outsl
popa
jbe
cmp
test
loop
icebp
cmp
add
popa
fsub
pusha
adc
pop
add
push
movsl
jno
and
adc
add
push
mov
adc
dec
mov
sub
pop
xor
and
and
and
test
fwait
dec
into
test
mov
push
and
push
xchg
into
and
pop
and
test
fnstsw
movsl
and
mov
and
fcoml
test
ds
shll
in
iret
mov
loop
mov
lcall
enter
stc
and
mov
test
jmp
mov
and
mov
test
xchg
mov
lea
fstps
lcall
movsb
mov
iret
test
jns
and
mov
mov
or
fists
xchg
and
and
out
scas
mov
lret
mov
mov
shlb
stos
sub
mov
stc
std
sarb
mov
jne
and
xor
into
mov
and
pop
int3
mov
sbb
mov
xor
mov
lea
cwtl
popf
sbb
mov
cmp
test
or
movsb
repnz
pop
sbb
sub
stos
in
or
push
sahf
cmc
mov
rorb
lcall
sbb
mov
mov
and
cmpsb
iret
in
mov
lods
and
mov
sar
mov
shll
ljmp
push
adc
mov
or
jle
inc
adc
dec
or
sbb
xchg
mov
cmp
outsl
cmp
adc
push
jmp
mov
xchg
dec
inc
loop
fistl
fwait
je
movsb
xorb
add
xchg
imul
addl
das
sub
sbb
out
mov
mov
and
sub
add
es
sub
push
dec
and
pop
pop
lea
stc
sbb
sbb
roll
mov
pushf
sub
outsb
pop
sbb
xorl
mov
jg,pt
mov
xchg
and
dec
jo
mov
push
mov
rcrl
call
adc
mov
mov
inc
movsb
aaa
add
lret
or
mov
popf
push
test
jmp
sbb
adc
stc
and
mov
xchg
mov
test
pop
lret
jmp
sub
inc
test
mov
movsb
xchg
inc
mov
pop
mov
mov
sahf
mull
int
sti
push
jmp
lock
xor
fisubrl
loop
test
xor
mov
lock
mov
repnz
and
rcr
and
mov
and
mov
mov
lcall
shl
mov
sbb
mov
lock
enter
call
sbb
mov
ret
iret
lock
repnz
xchg
loop
out
jmp
call
lock
mov
sbb
mov
ds
movsb
jno
xchg
aad
repnz
call
cmp
iret
bound
and
xchg
mov
and
sbb
mov
mov
mov
jle
lcall
mov
lret
aam
mov
xlat
cmp
push
fidivs
frstor
lods
adc
jmp
jb
ja
jno
adc
and
push
cmp
sbb
mov
xchg
fs
setge
and
sub
and
xor
inc
sub
sbb
mov
sbb
xor
outsl
push
ss
inc
or
xor
sub
dec
jmp
adc
imul
sbb
ja
mov
insb
adc
xchg
jno
jecxz
and
dec
arpl
add
jo
pop
insb
and
adc
sub
sub
jno
std
ret
and
arpl
jne
addr16
sub
jge
out
jno
imul
cmp
and
adc
dec
mov
rclb
lea
stos
mov
leave
cli
adc
outsl
and
or
sbb
add
jbe
pop
imul
mov
sub
dec
mov
imul
jmp
push
and
xor
sbb
xchg
mov
xchg
aaa
gs
xor
test
jl
pop
cmpsw
inc
and
testl
and
into
inc
popa
pop
mov
mov
and
and
fs
pusha
shrb
mulb
xor
dec
pop
dec
and
push
lcall
xchg
dec
jle
jbe
and
add
out
in
inc
mov
nop
push
xor
popl
adc
and
add
xchg
dec
inc
sub
and
je
andb
jne
subl
lcall
dec
cmpsl
sub
shll
and
push
dec
sub
in
xchg
and
hlt
xor
sub
push
push
sub
pop
inc
mov
and
adc
out
sbb
mov
out
out
negb
or
cmp
adc
fs
std
and
aaa
scas
ret
or
mov
jmp
mov
xor
sub
xor
push
stc
and
bound
aad
dec
daa
or
adc
jb
hlt
dec
inc
xchg
sub
imulb
es
push
add
or
out
and
or
and
call
aas
and
sub
movsl
jnp
sub
inc
cmp
adc
imul
jp
mov
jl
pop
add
std
and
mov
repnz
or
adc
popl
std
and
xchg
jge
cmc
pop
outsb
fldenv
dec
pop
push
cs
mov
rcrl
fisubrl
cmp
inc
loop
out
rclb
cmp
jnp
pop
cmc
mulb
cmpsl
mov
jae
push
cmpb
push
jo
xchg
or
and
jecxz
aas
xor
scas
mov
push
inc
push
stc
icebp
int3
in
testb
and
pop
adc
push
shrb
cmp
fisubl
push
or
nop
cld
inc
sbb
add
adc
jne
and
cmp
mov
ja
in
add
lods
pusha
and
add
jmp
and
popf
popf
cpuid
inc
pop
sbb
inc
int
insb
gs
sub
sub
test
add
loop
je
jno
push
lret
push
sub
lds
mov
dec
or
and
jg
jecxz
cmc
and
mov
add
and
insl
and
or
test
sar
sub
and
dec
push
mov
cmpsl
pop
pop
pop
dec
push
adc
ljmp
or
and
mov
inc
shl
sti
pusha
mov
stos
je
pop
xor
mov
adc
and
and
jbe
push
and
dec
xchg
or
mov
push
stos
and
adc
pop
and
dec
cmp
jno
pusha
gs
inc
jne
jns
xor
dec
dec
and
xchg
imul
and
sub
pop
mov
stos
test
jp
jnp
int3
in
adc
and
clc
addr16
adc
push
sbb
mov
jb
scas
and
push
xchg
inc
or
sub
xorl
lcall
inc
pop
ds
jge
jge
loope
sbb
xor
mov
sahf
and
mov
fldt
cmpps
and
xor
ljmp
and
xchg
jle
xor
jp
outsb
and
add
push
mov
xchg
or
sub
add
push
mov
into
jmp
push
dec
jle
in
add
mov
and
xor
and
leave
dec
aaa
cli
and
inc
int
adc
xor
das
cltd
lods
and
pop
sahf
jno
or
jns
insb
inc
inc
jecxz
into
lcall
push
test
mov
and
arpl
popa
adc
sub
and
add
push
aam
add
out
movsl
pop
loop
and
stc
sub
and
nop
insl
push
imul
adc
arpl
and
dec
fs
sub
or
xchg
cmc
stos
push
xchg
and
sbb
and
lea
sti
imul
pop
ret
pop
lods
sub
sub
xor
and
add
cli
and
ss
loop
adc
sti
mov
js
into
shlb
jne
jmp
mov
and
or
cmp
xor
lret
xchg
and
in
or
xor
mov
mov
les
and
dec
pop
cltd
stos
repnz
sbb
xorl
and
cmp
xor
fistps
and
jmp
push
aas
aaa
sub
andb
stos
and
mov
dec
out
inc
rclb
cmpsl
xor
sbb
mov
pop
std
push
and
jecxz
or
movsl
call
sbb
inc
dec
sbb
sbb
mov
pop
pusha
popa
cmp
test
sbb
scas
sub
dec
sbbb
cmp
mov
jns
lret
xor
push
popa
pop
andl
stc
xor
jmp
sub
daa
loope
insl
test
repz
movsl
push
loop
dec
xchg
fadds
sub
xchg
jnp
add
sbb
adc
add
loopne
ljmp
mov
movsl
mov
fndisi(8087
mov
mov
bound
pushf
into
mov
popf
pop
and
rcrb
movsl
clc
fistpll
fldcw
ret
lea
sbb
jne
sub
rcrl
not
dec
loop
sub
or
mov
lret
or
dec
sahf
jmp
icebp
pop
aas
lcall
lods
mov
xlat
movsb
mov
mov
stos
aam
jecxz
pop
and
dec
sub
lods
and
mov
inc
lret
xlat
mov
stos
mov
mov
cmp
mov
mov
stos
repz
and
call
mov
mov
mov
test
in
dec
movb
inc
test
mov
fisubs
adc
jmp
push
outsl
insb
cli
xor
mov
fldcw
fsubs
cli
mov
pusha
inc
and
or
scas
xor
and
inc
call
add
or
lock
cmp
inc
pop
sub
add
adc
push
std
mov
sbb
ret
xor
bound
add
shrb
addl
inc
mov
and
jbe
lret
jp
cmc
jns
ljmp
push
es
cmp
rcrl
inc
and
pop
fdivr
sbb
cmc
adc
add
pop
inc
dec
and
xchg
pusha
cmp
dec
xchg
loop
push
sbb
or
cmpsl
pop
mulb
pop
inc
dec
dec
jp
loope
and
pop
pop
insl
add
push
push
add
adc
inc
xchg
and
push
inc
push
fcmovbe
add
mov
pop
dec
adc
cmpsl
cmp
addb
add
ja
jp
push
aad
and
inc
arpl
test
pop
lcall
push
push
and
mov
and
scas
js
sub
andb
sub
add
push
dec
and
xchg
je
iret
xor
and
mov
out
and
imul
movsl
cmpsb
xor
pop
loop
dec
push
data16
adc
inc
jg
and
dec
cltd
lret
ret
ret
js
pop
push
and
and
push
into
push
ret
ret
or
cwtl
or
and
mov
sbb
push
mov
fwait
daa
insl
shrb
add
rcll
jp
sbb
adc
or
and
adc
ret
and
and
pop
sub
sbb
mov
push
xlat
int3
jb
nop
mov
cmpsb
xorl
and
sub
ljmp
mov
cmp
es
sub
pop
sarb
dec
push
cwtl
xchg
movsb
and
pop
sbb
lret
xchg
dec
mov
loop
sub
jecxz
mov
jge
mov
push
inc
into
push
ficoml
jbe
iret
cmpb
xchg
lea
mov
sub
pusha
in
add
or
xorb
aas
inc
sti
and
push
mov
sub
testl
insb
imul
mov
inc
cli
movsb
push
mov
test
scas
lret
and
or
add
bound
stc
imul
loope
push
pop
and
lds
jno
jl
and
sub
mov
cmp
push
dec
lds
jmp
inc
inc
cmp
sub
push
rclb
cmp
mov
and
mov
or
pop
mov
sbb
mov
mov
inc
fldl
and
imul
sahf
pop
ja
push
jb
inc
jbe
jp
and
pop
add
pop
arpl
dec
dec
mov
push
popf
and
pop
ret
stos
and
shll
addr16
mov
and
out
dec
lods
pop
testb
and
movsb
mov
popa
pop
push
mov
fsubl
xor
scas
mov
cs
inc
and
cli
and
and
shlb
aam
cld
or
xchg
test
add
inc
mov
or
daa
and
adc
and
inc
add
mov
cld
lods
jmp
jne
loop
pusha
fcompl
xor
sub
mov
fwait
add
sbb
popa
movsl
inc
rcr
repnz
mov
mov
lahf
inc
lret
ret
push
sub
hlt
inc
sub
fldcw
ja
andb
popa
dec
repnz
ret
jbe
fisubs
and
fsubrp
and
sub
xchg
jno
repnz
leave
and
xor
in
sub
adc
jns
and
and
add
dec
and
dec
out
outsb
dec
mov
ret
stos
push
scas
jp
pop
mov
popa
push
daa
mov
push
inc
cmp
shrl
jle
inc
sbb
movsl
loope
lock
movsl
adc
stos
add
pop
hlt
cmp
xchg
and
rorl
pop
aad
lea
and
jp
loope
popf
repz
and
in
ss
pop
and
mov
sbb
scas
sub
fisubl
stos
fmuls
js
cwtl
push
jo
je
xor
cltd
fbld
push
inc
call
bound
test
scas
xor
stc
pop
dec
sub
ret
std
pop
pushf
pop
push
sub
jmp
add
leave
cmp
sbb
push
pop
and
adc
mov
fimuls
and
in
das
and
leave
iret
and
xchg
jbe
cmc
ret
add
popf
test
lods
stos
mov
xor
or
and
ljmp
in
push
jns
sub
cs
and
je
cmp
sub
cwtl
mov
xlat
mov
and
fs
loop
mov
pop
and
movsb
aad
shr
insb
addr16
stc
lcall
call
out
popa
sbb
mov
and
cmp
and
jge
aam
inc
push
inc
and
jb
scas
xchg
jne
insl
jo
adc
fwait
std
or
and
push
jl
xchg
or
and
push
neg
push
push
mov
cwtl
xchg
fisubrs
add
add
adc
adc
adc
push
and
movsl
addl
ds
and
cli
mov
mulb
sub
aam
into
cs
ffreep
mov
in
push
mov
and
stc
adc
sbb
pop
dec
and
jecxz
sub
in
pop
and
cltd
add
xor
pop
ret
jae
into
jecxz
cli
jge
push
push
sbb
mov
sub
fcomp
ret
jb
and
adc
or
and
das
or
inc
and
push
cltd
fldl
in
ror
inc
mov
sarb
jmp
leavew
test
loope
inc
mov
push
jbe
and
and
iret
cmp
pop
jle
stc
shrb
lcall
and
inc
adc
orb
jl
xchg
jp
ficoms
jge
movsl
subb
mov
or
adc
adc
or
dec
and
lods
jae
push
inc
sub
insb
lea
pop
cmp
call
dec
loopne
or
jl
adc
sub
add
and
and
stos
add
andl
sub
pop
movsl
inc
mov
cmp
pop
bnd
push
cld
sub
mov
fidivs
subl
es
sub
push
movsl
and
orb
sub
sbb
leave
ds
jb
enter
push
or
out
xchg
mov
scas
adc
out
ret
jbe
fistps
lret
cmp
jp
cmp
and
adc
dec
nop
mov
and
xchg
push
decl
inc
jl
cmp
sub
mov
pop
repnz
mov
shll
or
xor
dec
fimull
and
loop
dec
xlat
adc
sub
in
sub
nop
movsl
fcompl
outsl
insl
jne
sbbb
pushl
adc
or
shll
xor
cli
xchg
push
cli
mov
sub
and
inc
or
cmp
adc
push
mov
and
xchg
mov
push
jp
mov
cmpsb
dec
and
lahf
pop
and
icebp
cmc
jb
xchg
stos
add
mov
add
sbb
inc
and
and
pop
mov
pop
cmp
xchg
cmp
popf
and
add
lock
nop
movsl
cmovae
xchg
and
push
cmpsb
and
popa
jmp
loopne
aad
sbb
frstor
cmp
and
xor
push
test
cmp
or
cmpsl
mov
and
cli
clc
jp
nop
inc
mov
inc
and
xor
and
jno
gs
sbb
mov
and
outsb
jle
or
in
and
adc
cld
adc
pop
cmc
push
sbb
inc
sub
incl
clc
ljmp
xor
xchg
and
inc
in
or
pop
aad
or
and
and
xor
mov
loopne,pt
xor
and
movsl
sbb
mov
outsl
ds
and
xor
icebp
pop
and
jno
inc
push
mov
in
push
add
sub
push
lods
in
gs
push
insb
test
repnz
and
mov
push
and
mov
sub
adc
cmpsb
and
ret
xchg
icebp
and
ret
push
dec
push
pushf
push
leave
xor
cmp
add
push
leave
sbb
jnp
sub
cmp
jbe
and
test
cmp
adc
mov
cmp
clc
test
push
or
dec
push
and
cld
frstor
inc
push
es
cmpsl
ror
xor
or
lea
fsubp
cmp
and
bound
dec
or
sub
insl
pop
bound
cmpsb
xchg
rol
out
ds
xor
sbb
xchg
aad
and
sbb
push
lret
and
jo
insb
es
gs
lea
mov
and
mov
jecxz
and
add
ljmp
pandn
test
and
or
frstor
stos
loop
enter
pop
rol
imul
lea
adc
push
xor
scas
and
or
subb
adc
cli
ljmp
mov
cmp
hlt
and
mov
cmp
push
and
sub
fwait
or
rol
daa
mov
stos
lret
pushw
and
push
std
popa
mov
jmp
dec
mov
jns
test
lods
cwtl
or
and
jnp
push
mov
in
icebp
addr16
insl
and
lcall
or
add
and
cs
repnz
insl
and
test
mov
sbb
push
cmp
sub
loop
jnp
lods
in
xor
gs
and
jne
push
lret
bound
popa
sbb
pop
adc
and
lret
xor
xor
fimull
sub
and
scas
insl
loope
aas
mov
jno
xor
and
lcall
mov
aaa
shlb
movsl
sub
in
push
pop
cmpsb
in
es
mov
inc
mov
ret
mov
mov
add
lcall
and
push
xor
pop
push
and
pop
xchg
xor
pop
push
and
pusha
jb
repnz
cltd
and
adcb
and
ja,pt
and
add
test
int3
sub
push
inc
adc
and
loopne
popa
and
cmp
or
lret
push
sub
push
dec
and
arpl
cmp
outsl
mov
cmp
jle
dec
xor
xchg
jmp
inc
adc
xchg
cmp
adc
xchg
mov
ret
aad
mov
and
adc
mov
and
and
or
popf
iret
mov
lock
adcb
out
mov
out
and
sub
and
cmpsl
and
mov
ret
mov
mov
cltd
inc
sub
or
insb
mov
xchg
and
fsubrl
loop
adc
daa
cmp
loop
test
int
push
inc
push
sahf
inc
sub
xor
push
bound
cli
and
adc
and
and
fsubl
inc
into
ret
xor
cli
loop
xor
sub
and
pop
push
je
xchg
fisubrl
insl
data16
stos
adc
es
push
and
lods
loope
pop
mov
adc
lea
or
bnd
jno
push
xchg
sub
mov
pop
cmc
push
mov
sub
sbb
int3
loopw
lods
pop
push
and
aad
lret
jmp
sahf
fbld
mov
sub
mov
or
mov
int3
jb
imul
shrl
and
and
arpl
and
inc
or
inc
mov
push
xor
xor
bswap
mov
sti
xchg
inc
test
arpl
jo
push
sub
pop
repz
xchg
mov
sub
and
adc
loop
cmp
aas
movsb
neg
pushf
adc
pop
and
aas
add
mov
push
int3
ds
add
inc
sbb
arpl
pop
dec
push
rcl
sub
and
je
add
sub
dec
push
fwait
add
inc
xor
ret
xor
jns
and
or
cmpsl
and
sub
loopne
popa
stos
xor
repnz
lock
and
out
in
xor
xchg
xchg
nop
xchg
xchg
xchg
sahf
lahf
and
pop
sbb
adc
adc
add
xchg
cmc
shlb
mov
lds
movsl
mov
mov
jbe
sub
stos
inc
push
loop
push
and
push
cmc
repnz
into
movb
addb
jns
jno
popf
jb
mov
jl
shlb
mov
movsl
fstpl
lock
bound
adc
movsl
xor
loopne
in
shlb
inc
jecxz
fdivr
enter
aam
and
mov
and
popa
jp
adc
mov
loop
into
lahf
push
add
jp
push
movsl
je
fcoms
insl
jns
adc
mov
leave
jb
xchg
movsl
les
xor
fs
sub
mov
xchg
dec
push
mov
mul
dec
xor
and
pop
dec
adc
call
pop
es
pushf
or
xor
pop
and
call
mov
mull
sub
mov
ja
adc
pop
and
or
dec
in
push
and
pop
mov
pop
sbb
rcrl
fcmovu
add
lds
adc
rcr
pop
das
jb
popa
mov
and
add
push
outsl
and
mov
shlb
fisubl
out
mov
xor
mov
mov
ds
sub
and
jmp
mov
and
outsl
and
push
mov
xchg
sub
mov
inc
mov
pop
mov
inc
jp
cld
pop
loop
push
sbb
push
cmp
cmp
loop
xor
and
sbb
pop
mov
sahf
lret
mov
cli
dec
gs
cwtl
or
sahf
xchg
xchg
mov
xor
stos
sbb
cwtl
icebp
push
pop
and
jp
leave
cld
dec
loopne
push
mov
arpl
aad
test
xor
sti
mov
xchg
sub
mov
outsl
inc
and
jbe
push
push
and
dec
cmp
dec
leave
bound
cmp
roll
out
test
mov
cmpsb
pop
inc
pop
push
dec
inc
jp
lock
mov
stc
sub
and
sub
pop
es
aad
pusha
cmp
pop
sbbl
cld
xor
xor
push
add
scas
fcoml
inc
sahf
adc
and
pop
insl
and
mov
push
adcb
sub
mov
or
ds
and
cs
lds
xor
into
adc
dec
mov
ljmp
int3
and
xchg
and
inc
push
jle
mov
sub
cli
leave
mov
and
jb
and
rcl
cltd
and
pop
xor
lcall
sub
dec
pop
push
mov
cmpsb
mov
inc
cwtl
sub
cmp
sub
cld
frstor
or
dec
movsb
fmuls
bound
iret
loopne
adc
mov
cmp
push
ret
nop
ljmp
jns
cmp
xor
cvtps2pi
jecxz
and
xor
andb
mov
push
jl
pop
add
xchg
orb
push
push
movsb
and
adc
xor
hlt
and
mov
ret
push
pop
dec
aaa
push
push
inc
into
sub
push
mov
sub
lcall
sbb
dec
push
and
cmp
sub
and
pop
xor
stos
cmp
pop
pop
and
popf
lds
outsl
ljmp
jb
ret
and
jns
inc
jge
push
cmp
push
inc
and
mov
js
jmp
xor
cs
mov
push
xchg
pop
and
and
fsubs
and
adc
xor
inc
add
cmp
inc
xor
inc
punpckhwd
daa
loop
in
mov
cmp
popa
add
adc
rolb
push
push
and
xor
add
sub
vmwrite
lret
sub
popl
loop
xor
push
sub
push
push
mov
rcrl
adc
lcall
fsin
and
sti
push
dec
daa
xor
dec
lods
jp
jbe
xor
gs
and
sub
sub
pop
das
enter
xchg
add
and
hlt
mov
dec
incb
and
push
sbb
cmpsb
sbb
cmp
inc
loope
int3
jbe
cli
stc
xor
adc
std
add
sti
cli
stc
cltd
xchg
xor
orb
ds
cmpsl
cli
mov
adc
dec
and
out
xor
hlt
mov
and
mov
jmp
cmp
dec
add
and
mov
xorl
xchg
or
in
aas
jo
or
imul
jmp
popa
lds
repnz
sarb
sahf
jne
andb
inc
stos
or
push
int
fdivrs
std
xchg
mov
and
dec
movsl
push
adc
and
repnz
ss
lods
movsl
in
cmpsb
aad
and
add
cld
push
xchg
xor
dec
and
insb
loop
mov
sbb
sub
stc
and
push
cmp
and
push
movsb
push
sub
cmp
lock
jno
jecxz
xor
into
mov
cmp
mov
movsl
fidivrl
nop
andb
int
mov
enter
imul
and
scas
rclb
popf
push
loop
add
dec
inc
mov
push
push
pop
les
cwtl
addr16
push
add
and
jg
out
cmp
pop
adc
lods
push
adc
cmp
mov
and
cwtl
and
pop
and
and
lods
push
jmp
das
shl
xor
adc
pop
push
ja
into
jmp
sub
adc
sub
and
xchg
in
and
test
sub
jbe
gs
cwtl
movsl
and
into
jmp
sbb
jns
mov
int
mov
add
hlt
jb,pt
jno
or
and
add
jne
and
jo
or
dec
sub
sahf
das
adc
add
xchg
imul
pop
xor
fstpl
and
loop
fwait
push
xor
jecxz
sti
cmp
cs
inc
adc
push
es
and
test
and
and
sub
out
fwait
shll
jl
bound
rcr
fcmove
and
lods
fsubrl
ficoms
stc
and
popa
adc
push
ds
int3
pop
and
lret
cmp
push
fidivrl
sbb
and
jno
jns
frstor
push
cmp
aad
jmp
adc
push
orl
jecxz
daa
aam
sub
push
lret
jp
cli
repz
stos
jmp
and
push
or
sarb
decl
mov
cltd
adc
xor
dec
push
or
jbe
mov
cmpsb
and
fisubl
insl
mov
into
sub
inc
bt
mov
and
frstor
ja
add
jo
cwtl
inc
adc
inc
out
iret
and
les
cs
jp
rcrb
and
jno
loop
test
loopne
jb
mov
push
adcl
out
loop
andb
mov
fst
and
popa
jbe
adc
cmp
xor
push
iret
and
and
push
sub
sahf
cmpsb
sbb
daa
int
inc
enter
xchg
and
jae
es
xchg
inc
and
addr16
dec
inc
jmp
js
mov
and
mov
aaa
and
cmpsl
sub
pushf
pop
das
imulb
andl
mov
mov
and
bound
mov
mov
xor
outsl
int3
jecxz
imul
jno
call
cmp
cwtl
fwait
pushf
inc
xlat
sahf
leave
out
and
or
sub
dec
data16
ret
cmc
mov
sti
xor
bound
add
push
push
and
mov
fucomp
mov
jp
fsub
jno
cwtl
and
push
cld
sub
lea
mov
and
push
aam
fs
sub
roll
and
nop
pushf
xchg
mov
es
mov
popa
inc
sbb
add
push
xor
mov
bound
imull
and
pusha
pushf
cld
fxch
test
and
sbb
outsb
es
mov
ss
fiadds
cltd
jae
pop
mov
sbb
fisubl
pop
jmp
adc
sbb
pushf
mov
sub
rcrb
mov
int
bound
and
shl
and
mov
out
loop
and
inc
ror
sbb
or
push
xor
lds
push
and
add
fldt
insb
fisubrs
jmp
and
repz
scas
mov
sbb
mov
shl
mov
xorb
ret
lods
push
sub
xchg
lods
divl
cmpsb
fisubs
xchg
movsl
into
lods
mov
or
push
loopne
sub
sbb
stos
sbb
test
and
stos
clc
fbld
add
or
mov
sub
scas
hlt
sbb
jmp
cmpl
sub
std
loop
dec
and
pop
or
jge
adc
inc
lcall
xor
imul
or
pop
es
or
pop
insl
and
mov
xchg
subb
dec
into
inc
arpl
fadd
iret
and
or
repz
das
mov
cmpsb
addr16
sbb
and
adc
lds
and
jmp
jbe
test
jno
sub
or
dec
fldl
fldenv
jp
imul
jne
pop
mov
adc
dec
int
and
push
adc
mov
adc
cli
push
add
ret
fs
sbb
pop
and
loop
and
inc
push
and
cmp
addr16
bound
pop
dec
and
adc
sub
incl
andb
add
lcall
mov
jp
aad
hlt
aaa
and
and
clc
xchg
cmpsb
sti
xchg
sbb
mov
cmp
cmpsl
sub
and
push
push
dec
dec
ds
xchg
mov
popa
jae
test
notl
cltd
nop
sub
fs
gs
adc
xchg
xchg
mov
and
xchg
pop
jns
nop
idivb
js
shrb
jl
out
inc
shlb
daa
cmovae
inc
ss
mov
lret
or
test
xor
bound
inc
and
repz
fs
ds
jp
cli
popa
xor
cmp
in
push
pop
and
sbb
dec
inc
inc
inc
sub
and
adc
push
aas
cmp
rorl
fucom
jp
jle
push
dec
xor
mov
sub
loopne
out
jbe
ret
repz
mov
and
pop
ret
jno
pop
adc
insl
fs
stos
mov
cmp
insb
push
mov
and
repnz
cs
inc
sub
sub
jne
sti
movsl
ret
add
cmpsb
mov
push
xor
add
mov
add
xor
inc
out
bound
popa
sub
add
and
test
sub
dec
jnp
mov
bound
inc
loope
cs
imul
adc
jns
xor
lcall
into
xor
sbb
and
imul
mov
fidivl
dec
out
adc
loop
nop
add
ret
in
or
mov
jge
cli
xor
ds
fcmovnu
jg
xchg
shl
sub
mov
mov
and
andb
lods
push
push
adc
imul
inc
adc
inc
mov
cmp
xchg
outsl
jno
add
and
in
pminsw
sbb
and
pop
adc
cli
sub
aas
dec
sbb
imul
mov
inc
push
adc
and
mov
imulb
mov
jb
daa
and
adc
into
pop
pop
jp
or
ja
int
and
cmp
js
pslld
and
imul
add
add
inc
inc
and
lcall
sub
pop
or
sub
fisubl
leave
add
test
jo
dec
xor
repnz
xor
testb
loopne
jne
sub
aas
mov
xchg
fwait
jp
cmp
scas
jne
movsl
bound
push
int3
and
jp
lods
and
sbb
adc
js
jns
jle
dec
and
adc
loop
add
xor
push
inc
and
dec
jg
mov
mov
xor
cmp
sahf
std
and
test
daa
lods
stos
fdivrl
mov
cltd
sbb
mov
lods
fsubr
aas
stos
hlt
fstps
pop
mov
lock
jecxz
mov
loope
and
in
repnz
xchg
negl
out
jmp
fstpt
out
jecxz
repz
mov
icebp
cmp
or
jecxz
out
mov
call
cmp
shrb
xchg
xchg
fstpl
out
scas
mov
mov
stos
aas
sbb
mov
nop
cwtl
sub
fstpt
fsubl
fldcw
aad
mov
and
mov
and
aam
push
fistps
and
mulb
ret
mov
mul
fidivrl
mov
mov
mov
out
cmpb
testl
mov
stos
sbb
rclb
ret
aam
shl
mov
mov
aaa
outsb
xchg
ret
and
mov
mov
sub
ffree
add
int
lcall
sahf
cmc
test
imull
ret
frstor
push
stc
fmull
cmp
pushf
cmc
pop
scas
jb
push
mov
inc
sbb
mov
mov
divb
mov
and
mov
aam
and
mov
cltd
fidivl
mov
mov
jecxz
lods
or
push
jbe
mulb
scas
lods
fucom
xor
and
jmp
hlt
mov
in
mov
mov
filds
and
mov
cmc
add
icebp
mov
test
jmp
push
xchg
mov
sti
fldenv
mov
dec
stc
les
mov
lods
mov
cwtl
or
mov
divb
mov
fidivrs
mov
mov
mov
mov
mov
sar
cmp
scas
cmp
xchg
nop
jecxz
jmp
pushf
and
mov
mov
mov
sahf
cmp
repz
lods
cmp
loope
in
jmp
test
fisubrl
bound
fisttps
mov
or
sub
loope
lods
lds
loop
in
icebp
ss
xchg
mov
mov
test
mov
pushf
div
stos
loop
out
push
mov
in
or
pop
mov
orb
sub
ror
test
out
mov
in
stos
aas
enter
cmp
pop
lahf
sub
and
pop
xchg
addb
jge
movsl
jb
fcmovbe
mov
ljmp
mov
rcrl
and
cmpsb
mov
mov
lret
in
lcall
and
mov
fistpll
lods
repz
fidivrs
stc
jecxz
mov
dec
dec
test
sub
loopne
lock
and
call
test
mov
loope
mov
sbb
mov
repnz
stc
pop
out
aas
jecxz
mov
mov
sar
popf
push
cmp
test
ds
scas
in
sub
in
stc
cmpsl
and
rcl
notb
call
or
nop
ljmp
std
mov
int
lods
cltd
in
stos
pop
pushf
and
mov
mov
aad
xchg
and
jmp
out
and
mov
stc
mov
pop
pop
and
mov
repnz
mov
popf
push
and
int
mov
daa
in
scas
test
call
addl
mov
scas
sti
and
std
mov
and
fbstp
sbb
mov
int3
mov
sbb
fldl
fsubrp
push
mov
mov
xchg
mov
movsb
mov
test
mov
jge
sbb
and
lods
push
mov
shr
and
sbb
and
push
popf
int
or
shlb
pop
and
outsb
pusha
pop
and
insl
fbstp
inc
les
clc
mov
jge
out
ret
scas
xchg
cmpb
pushl
and
stos
and
lods
testb
or
movsl
shrb
fucom
pushf
mov
aam
and
into
adc
in
cmpsl
and
ja
mov
sbb
push
lahf
and
stos
repnz
jmp
cmp
test
adc
mov
mov
in
loop
mov
sbb
adc
int3
lret
int
andb
data16
inc
push
inc
sbbb
pop
call
pop
loop
cs
cmp
xor
and
push
push
adc
shll
inc
inc
roll
adc
movsl
fsts
adc
xchg
sbb
pop
and
mov
adc
loop
movsl
shrb
and
sub
repnz
ljmp
or
inc
je
loop
xor
cmp
mov
and
xchg
mov
inc
xor
sub
push
push
das
sub
xor
xlat
inc
jge
push
cs
arpl
and
nop
or
fcmove
jmp
orl
sahf
xchg
mov
add
cmpb
mov
scas
and
mov
push
dec
adc
sbb
rcrb
outsb
inc
push
cmp
adc
lret
cmp
es
cmp
xor
adc
push
sarb
mov
sub
and
add
cli
cmc
in
imul
arpl
mov
and
movsb
dec
sbb
sbb
push
fwait
add
psubw
int
popf
shrl
pop
dec
and
xchg
movsb
mov
punpcklwd
xchg
add
ret
inc
into
adc
sbb
pop
mov
mov
sub
add
test
or
or
jns
and
cmp
popf
test
push
sub
mov
or
ljmp
xor
jecxz
shl
cmpsl
lcall
mov
outsl
test
and
sub
jb
sub
subb
add
sbb
push
insl
sub
mov
mov
cmpsb
and
iret
mov
outsb
lock
push
and
xchg
arpl
and
data16
mov
jae
and
ret
or
pop
pop
shlb
stc
rcr
and
and
jle
and
mov
jge
jmp
fsubp
and
push
shll
pop
mov
and
xchg
and
iret
stos
jmp
arpl
into
dec
sbb
inc
popf
ret
mulb
mov
dec
adc
rcrb
std
mov
cmp
jno
pushf
test
sub
mov
shll
xchg
cmp
loop
pop
negb
mov
mov
in
mov
sbb
and
mov
xor
rolb
rorb
add
lret
pop
sub
and
inc
cmp
push
and
rolb
pop
fcmovbe
mov
sbb
xor
and
and
mov
push
and
ret
daa
and
inc
andl
lret
stos
or
inc
stos
push
popf
insb
rcr
push
mov
xchg
pop
bound
leave
add
mov
mov
sub
mov
mov
int
das
stc
and
adc
cmp
pop
out
fcompl
mov
jp
inc
arpl
xor
leave
es
sub
and
mov
inc
and
adc
pushf
repz
adc
jbe
add
scas
lret
ja
gs
or
adc
jns
and
mov
movsb
iret
and
outsl
jae
fisubrs
sbbl
mov
lcall
test
and
cli
xor
xchg
mov
loope
mov
mov
jmp
es
fisttps
adc
decl
out
and
add
or
out
add
aaa
int
sub
add
sbb
and
pop
and
push
xchg
mov
adc
loope
imul
sub
lods
jbe
cmp
lods
inc
ret
cmp
mov
out
pop
pusha
int
arpl
movb
adc
xor
cmp
stos
in
sbb
and
and
add
ffree
int
shll
data16
lea
or
xor
and
sub
ret
adc
ljmp
stos
adc
sbb
pop
outsl
mov
push
pop
roll
test
xchg
push
push
and
stos
xor
mov
push
inc
and
sub
int3
cmp
and
aaa
dec
stos
dec
bnd
xor
or
sub
mov
sub
ss
cmp
adc
mov
bound
outsl
rorl
sub
stc
pusha
and
jbe
jne
mov
cltd
ss
xchg
jo
popa
push
pop
xor
xchg
sub
and
dec
repnz
push
pop
push
sub
dec
or
push
dec
mov
push
dec
xchg
sub
and
out
jle
bound
loop
les
push
fsub
movsb
out
or
shll
cmp
adc
aas
dec
pushf
inc
insl
dec
popa
or
out
call
outsb
imul
cld
loop
pushfw
insb
and
scas
cs
xor
imul
jae
repnz
loope
inc
push
and
add
inc
xor
jnp
and
cmpsb
xchg
mov
movsb
scas
shlb
iret
inc
pop
xor
in
push
lcall
inc
jecxz
dec
ret
push
loopne
andl
rol
loope
mov
sub
add
and
dec
fsts
dec
pop
fs
and
es
sub
test
and
imul
call
mov
jbe
jne
and
and
call
bound
outsb
adc
sub
or
push
pop
jmp
inc
aas
xchg
sub
mov
loope
movb
and
mov
inc
and
idivb
repnz
and
daa
repz
inc
je
inc
lock
outsb
ja
xor
jp
out
iret
ret
inc
xor
cltd
fwait
xchg
or
push
or
popa
fadds
inc
and
fldcw
pop
orl
ja
aas
js,pt
mov
aad
cmp
and
sbb
popa
add
mov
movb
dec
out
push
mov
js
jo
jl
and
daa
xchg
push
push
rorb
imul
pusha
xchg
sti
in
fdivrs
jge
push
mov
and
sahf
jo
cli
inc
lcall
sub
out
xor
outsb
jae
or
sub
scas
lret
adc
arpl
bound
aaa
inc
sahf
xchg
or
hlt
dec
push
push
inc
sub
push
mov
aam
and
inc
push
adc
ficoms
and
aad
and
sub
mov
and
push
push
pop
xchg
jp
lret
and
xor
adc
and
jge
push
dec
outsb
inc
sub
fstpl
bound
arpl
jp
loop
das
adc
mov
pop
cmc
pop
sub
or
jge
jg
movsb
or
sub
outsb
and
inc
and
jge
mov
xor
and
stc
jle
out
dec
and
aas
dec
xchg
push
cmpsb
sti
hlt
das
and
dec
mov
mov
and
adcl
dec
std
or
inc
mov
les
popa
lds
and
and
adc
int3
es
jmp
pop
cmp
mov
inc
sbb
and
cmc
adc
loop
insb
mov
sbb
jle
dec
fisubl
and
fstpl
ljmp
fimull
mov
outsb
and
adc
push
and
dec
lcall
jnp
cmp
mov
jns
mov
rcr
insl
cmpsb
cmp
std
cmp
arpl
mov
stos
sub
and
call
daa
mov
mov
xor
jmp
and
sub
adc
push
sub
and
and
xor
push
xor
xchg
push
aas
frstor
jne
arpl
fstpl
and
jp
mov
and
push
add
pop
stc
or
and
enter
popf
jb
dec
inc
mov
xor
jns
das
add
or
inc
jnp
shll
sub
cmp
and
and
jb,pn
push
mov
pushf
add
outsl
cli
adc
push
and
fxtract
mov
and
add
jl
pop
loop
mov
cmp
in
fisubl
pop
loop
popa
jo
sub
rolb
and
add
dec
and
push
push
mov
arpl
scas
ja,pn
je
mov
jbe
and
gs
and
push
bound
xor
push
sbb
xor
cmp
int
sub
jmp
lret
das
jecxz
dec
sub
rcr
push
stos
stos
out
adc
jmp
int
add
aas
sub
sbb
fildll
mov
and
or
sub
mov
das
push
aad
inc
adc
mov
fsubl
and
lret
and
and
xchg
outsb
es
cmpsb
shrb
test
push
sub
loop
sbb
test
xor
sub
loop
xor
into
and
sbbl
idiv
shrb
push
xor
adc
loop
push
addr16
jb
cmpsb
adc
xchg
add
shll
bound
fnsave
cld
push
sub
adc
pushf
cmp
fwait
jne
push
mov
xchg
and
cli
add
cmp
std
sub
fst
jp
mov
sahf
dec
sub
pop
iret
xor
lods
stos
daa
arpl
loop
xor
ljmp
or
repz
sub
and
sub
dec
mov
ss
xor
cmpsb
sub
cmp
imul
movups
lret
enter
inc
imul
dec
lods
and
iret
testb
insl
outsb
arpl
outsb
cmp
push
push
cs
ja
pop
cmp
jne
loopne
sbb
pop
and
fs
arpl
sub
push
jb
lods
stos
insb
inc
sbb
add
dec
jbe
jb
cwtl
push
cmp
fistpll
pop
fs
jno
fbstp
push
push
fldenv
cmp
inc
push
xlat
dec
and
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
xor
