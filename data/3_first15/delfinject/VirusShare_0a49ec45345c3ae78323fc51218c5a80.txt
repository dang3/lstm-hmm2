push
call
ret
ret
jns
inc
adc
mov
inc
jg
sahf
inc
dec
jle
dec
mov
aam
mov
jmp
mov
mov
mov
ss
mov
sub
dec
out
sub
bound
lcall
mov
xor
sbb
call
sub
in
test
leave
test
push
js
shll
push
mov
out
adc
mov
adc
fdivrs
xchg
and
psllw
movsb
fs
pop
cmpb
cli
and
xchg
pushf
add
adc
push
out
dec
pop
outsb
hlt
mov
cmp
cmc
movl
les
pop
dec
cltd
js
es
pop
mov
dec
jbe
cwtl
add
lock
bound
cmp
xor
mov
ret
jns
jno
push
in
dec
inc
in
jl
cmp
orl
dec
inc
pop
pop
pop
std
aas
hlt
lret
adc
fs
lds
shll
mov
jl
fs
mov
mov
xchg
sbb
xlat
pop
dec
cli
xlat
cld
jg
out
test
data16
dec
test
mov
xor
inc
push
xor
mov
dec
xchg
cmp
hlt
mov
insl
gs
adc
and
int3
xor
out
pop
mov
jge
aad
pop
mov
xor
ficomps
les
add
stos
xor
mov
lsl
rol
mov
js
pop
sar
in
dec
cltd
adc
dec
mov
out
lods
stos
pop
lds
call
or
inc
sub
add
int
dec
dec
hlt
test
mov
cmp
fsincos
scas
fucomi
std
shlb
mov
mov
in
add
jg
faddl
xor
mov
xchg
popa
pushf
jbe
jne
push
sub
movsb
imul
mov
pop
sbb
mov
lock
pop
cmpsb
orb
fwait
shl
das
cmp
cltd
cltd
mul
sahf
add
sarb
cmpsb
es
add
dec
out
daa
jl
mov
cld
xchg
jge
mov
xchg
jecxz
and
mov
jb
adc
mov
push
mov
jbe
sub
mov
daa
adc
pmovmskb
xlat
cli
movsl
in
mov
or
insb
xchg
mov
mov
cmp
cmp
orl
shll
loopne
push
imul
inc
enter
lahf
ficompl
xchg
loopne
push
mov
shll
aas
mov
outsl
ret
add
cmp
aad
fists
xchg
mov
jo
cli
repnz
in
loop
push
insl
loope
loopne
adc
inc
cltd
add
pop
mov
mov
add
popf
lea
rcl
push
lea
and
ljmp
xchg
cmpsl
pop
jmp
cmpsb
das
xchg
cmpsb
push
leave
int3
jb
push
test
out
mov
lcall
add
cmp
pop
pop
push
les
mov
push
movsl
ror
sub
push
cmp
orb
stos
jp
cmp
pop
dec
adcl
mov
jle
mov
add
inc
mov
daa
mov
mov
adc
add
outsb
shl
add
nop
adc
jb
inc
scas
inc
sbb
push
insl
fwait
out
jl
popa
clc
out
xor
mov
into
pop
and
inc
xchg
cli
mov
mov
jns
cmp
xchg
in
cmpl
sbbb
ljmp
sub
movsb
ljmp
pop
jno
shrb
lods
movsl
sub
jl
outsb
add
ja
add
adc
aaa
dec
inc
pop
pop
cmp
and
cwtl
xchg
outsl
clc
add
outsl
je
mov
fidivrs
in
outsb
jle
fcmovbe
inc
jno
int
mov
pushf
adc
xor
into
stos
je
in
xchg
mov
hlt
jmp
testb
fcoms
hlt
das
inc
lcall
xor
rorb
push
and
dec
dec
mov
cld
cli
sub
scas
imul
xchg
push
ds
imul
xor
ljmp
imul
mov
test
sahf
mov
jp
mov
in
push
xchg
mov
sbb
adc
mov
xchg
out
negl
mov
iret
pop
cmp
push
imul
test
sbbb
jmp
popa
aad
dec
push
cmp
adc
adc
lds
dec
xlat
stos
sbb
or
lahf
cld
or
jnp
divl
js
popa
jmp
cli
or
mov
leave
jo
mov
mov
movsb
push
cmp
push
inc
in
fdivr
pop
add
adc
testb
loopne
xchg
mov
repz
movsl
sub
sub
stc
and
mov
shlb
scas
ret
mov
mov
sbb
fidivrs
fstl
push
in
mov
and
or
pushf
add
push
mov
lods
mov
sub
pop
dec
push
or
adc
and
xchg
dec
mov
add
push
daa
lahf
xchg
add
lods
sti
cmp
sbbl
pop
repz
fiaddl
xchg
xchg
jae
fadds
int
aas
loope
cwtl
mov
into
mov
cmp
cmp
mov
lods
fwait
xor
aam
imul
clc
stos
mov
adc
xlat
xlat
mov
jbe
and
divb
int3
lahf
mov
arpl
mov
sahf
push
add
jns
hlt
sahf
mov
ret
fildl
addr16
jl
jge
hlt
imul
setnp
mov
es
cmp
jl
mov
fistpl
lds
lret
adc
fisttpl
loop
inc
and
mov
fsubr
jbe
dec
inc
out
gs
aaa
stc
push
adc
inc
xor
mov
dec
xor
enter
aad
vpshab
imul
mov
and
xor
pusha
rolb
pop
in
mov
adc
shrl
cmpl
cmp
rorb
sbb
push
pusha
xor
cmp
cmp
fadd
dec
lret
or
scas
pop
or
jp
mov
aaa
hlt
xor
lods
loope
je
ja
das
mov
mov
cmpsl
fldcw
sbb
fdivl
lret
xchg
mov
in
sbb
popf
xor
sti
repz
out
mov
cmp
cmc
fwait
pop
push
mov
loop
int
push
out
mov
mov
loopne
pop
in
or
imul
xchg
push
mov
popa
adc
std
repz
int
sbb
pop
cmp
imul
xchg
cli
jge
repz
mov
pop
in
cmp
stos
mov
lock
call
jno
cmpsb
inc
cmp
movsb
rolb
inc
push
inc
cmp
in
in
das
aam
sub
sbb
fdivrp
fmul
scas
ja
fstl
xchg
cli
cltd
dec
loop
fidivrs
mov
inc
jmp
fcmovnu
mov
orb
inc
mov
jbe
pop
mov
inc
and
lock
sub
mov
mov
cmp
and
lods
out
jmp
cmp
xlat
mov
shr
aas
sub
jmp
cli
mov
xlat
inc
fs
fs
cmp
inc
push
sarl
js
cmp
dec
sbb
ljmp
jge
mov
sub
jl
leave
mov
cmp
popa
lret
ret
pop
fiadds
bnd
andl
mov
adc
loopne
xor
mov
clc
les
xchg
adc
jno
int
sub
popf
repz
ljmp
gs
clc
fwait
mov
movsb
mov
pop
dec
jmp
mov
jecxz
jmp
push
fnsave
shlb
inc
mov
mov
cmp
stos
inc
ljmp
and
and
mov
pusha
ss
sbb
pop
xchg
xchg
mov
fisttpll
or
jge
xchg
push
call
jl
adc
inc
mov
xor
daa
cmpsl
das
add
pop
cmp
leave
mov
call
cli
or
popf
pop
push
cltd
sbb
popf
movsl
push
cmp
int3
jecxz
les
mov
arpl
pop
bound
add
or
jge
mov
ds
ds
dec
in
jp
repz
jl
mov
and
frstor
aam
imul
imul
pop
inc
lahf
out
in
pushf
adc
xchg
push
rorb
lret
cwtl
ljmp
aaa
scas
mov
imull
loope
fwait
jmp
test
sbb
cld
jle
ret
lods
lea
push
cs
rcll
jecxz
lret
aas
push
xchg
out
push
in
cmc
and
ljmp
jge
clc
insl
pop
pop
and
and
add
dec
xchg
push
mov
test
rcrb
sarb
pusha
or
jae
negl
xor
pop
inc
out
fcompl
push
push
push
sub
arpl
stos
mov
pop
mov
lahf
pop
inc
push
cltd
pop
and
ja
or
aam
aad
in
and
cmpsl
pop
shlb
mov
adc
cmp
cld
cmc
int
and
nop
cmp
xor
cmp
xchg
adc
mov
sbb
jle
das
test
dec
xchg
test
sbb
adc
mov
cli
shll
jp
mov
sbb
jp
in
mov
lret
std
js
ljmp
aam
xchg
push
cltd
data16
test
mov
inc
and
lahf
fildl
and
jbe
cmp
push
or
scas
icebp
insl
pop
adc
dec
mov
cmp
xor
push
mov
ficoml
adc
cmp
rep
sbb
sbb
jns
jnp
or
xchg
sahf
inc
xor
adc
scas
pop
imul
sarb
cmp
std
jnp
add
out
pop
les
test
into
cli
cmp
xchg
aad
mov
cmp
push
and
enter
add
xchg
mov
mov
icebp
pop
push
mov
mov
push
push
std
ja
fildll
outsb
push
adc
or
and
mov
sub
mov
enter
xor
cvtps2pi
data16
aam
popl
cld
cmpsb
or
xlat
ja
push
adc
movsl
movsl
aad
sbb
lock
sahf
test
mov
sbb
or
lahf
aas
and
push
jp
adc
push
nop
nop
inc
shl
jno
bnd
pop
xlat
push
mov
out
adc
and
scas
dec
jns
mov
jge
xchg
push
push
imul
jae
xchg
cs
inc
add
pusha
clc
inc
jo
inc
pushf
sub
icebp
sub
lds
mov
xlat
sub
mov
popf
dec
push
test
cmp
out
push
hlt
pop
cltd
mov
sarl
mov
daa
orl
lahf
dec
dec
int
cltd
pusha
push
pop
and
jle
push
popf
cltd
outsb
iret
cld
or
fwait
push
repnz
cmp
mov
adc
jne
out
je
in
std
push
mov
push
add
mov
mov
xchg
mov
cs
push
sub
dec
xchg
xchg
jmp
hlt
fcomps
inc
sbb
jmp
pop
jnp
jns
ljmp
push
pop
adc
sbb
test
cmp
test
sti
dec
clc
push
mov
and
jg
gs
js
sbb
loopne
mov
xor
insl
dec
popa
test
add
lods
inc
shrb
pop
lods
or
ss
scas
scas
xchg
jnp
lds
cmp
loope
ret
xor
sbb
inc
inc
test
imul
out
mov
je
cmp
xchg
lret
sub
clc
out
xchg
pop
inc
jnp
ja
loop
leave
adc
push
xchg
cmp
xchg
aaa
lahf
test
inc
ja
push
xor
xchg
mov
popa
mov
das
xchg
test
ds
scas
jp
in
pop
xchg
and
xor
std
ja
push
push
push
js
mov
mov
dec
mov
es
mov
adc
xchg
shrl
inc
pop
cmc
lods
mov
leave
test
sub
pusha
les
sbb
pop
orb
cmp
push
call
mov
push
xchg
pop
xchg
in
sbb
in
inc
aad
cmp
sub
mov
mov
pop
dec
ja
adc
cs
xchg
fs
out
mov
loop
icebp
aaa
js
enter
sub
xlat
ds
popa
pop
jecxz
xchg
push
mov
les
insb
leave
fwait
mov
mov
leave
mov
pop
push
femms
enter
mov
inc
flds
outsb
je
inc
test
push
or
mov
add
orb
pop
jo
mov
ds
pop
xchg
daa
jnp
leave
xor
jne
xchg
pop
mov
test
adc
out
mov
cmp
pop
int3
out
leave
lods
push
sbb
adc
dec
dec
mov
xchg
push
and
pop
xlat
xor
jg
push
mov
shlb
push
iret
and
mov
mov
dec
mov
jnp
mov
stc
xor
repnz
add
jle
mov
xlat
cltd
jl
sub
mov
jmp
xor
test
lahf
adc
arpl
or
dec
ljmp
sbb
or
in
push
cs
shrl
adc
and
cmpsl
pop
mov
push
mov
push
shlb
dec
push
sub
outsl
mov
cmp
inc
ljmp
cmp
cmp
incl
ret
enter
pusha
scas
pop
add
push
arpl
xor
jne
adc
adc
fnstsw
push
arpl
xchg
sbb
pop
shrb
loopew
imul
pop
cld
and
out
and
xor
das
push
jne
xor
dec
rorb
xor
fs
xor
movsl
adc
cmp
push
xchg
addr16
dec
push
fcoml
pop
lock
shl
pop
pop
imul
into
repnz
roll
jp
cmpsl
mov
jg
mov
out
cmp
cli
movsb
add
mov
mov
xchg
xchg
jbe
push
gs
mov
cmp
xchg
cmpsb
or
scas
pop
test
xchg
mov
push
in
jnp
int3
cwtl
jle
scas
in
mov
out
repz
int3
shlb
iret
push
rcll
push
xchg
push
test
xchg
mov
add
leave
ljmp
push
inc
lcall
in
out
mov
lahf
lret
jnp
xchg
mov
inc
xor
mov
pop
cwtl
mov
jl
int3
and
rorl
lret
push
jnp
xchg
fldl
mov
dec
add
insb
andl
pop
rcr
lock
inc
pop
xlat
and
fbstp
int
ljmp
jge
idivl
sub
fs
sub
mov
dec
add
lret
arpl
pop
inc
out
sbb
arpl
cmp
lds
aam
lock
test
adc
push
imul
insl
icebp
in
stos
negb
fwait
and
call
sub
test
push
xchg
in
fmull
das
into
repz
in
fidivl
mov
cmp
dec
jg
stc
cmpsb
ja
aam
loopne
xlat
dec
std
aas
das
inc
xchg
jmp
sbb
push
xchg
shrb
push
sbb
in
cmp
sbb
pop
mov
push
test
and
jb
out
jb
push
xor
test
rol
sbb
insb
stos
fwait
mov
lds
push
push
mov
mov
push
test
mov
js
mov
das
inc
sbb
stos
push
cmp
adc
dec
pop
mov
nop
cmp
scas
jmp
cld
mov
mov
lret
scas
cmp
mov
into
adc
sub
pop
shl
mov
fdivs
es
cmpsb
das
sub
cmpsb
add
insb
out
pushf
mov
lret
inc
sub
xchg
and
nop
mov
inc
bound
ret
repz
jmp
sbb
repz
loop
xor
push
pop
adc
std
sbb
adc
lods
int
sarl
add
dec
mov
test
mov
fcomps
mov
or
xchg
jp
pushf
jnp
and
push
xor
aaa
insl
push
aas
xchg
lret
clc
pop
aam
mov
and
dec
fdivrs
jo
push
add
add
cmpsb
lea
ja
cmp
pop
push
lds
mov
inc
pop
scas
test
adc
mov
or
lahf
push
dec
shrl
gs
loopne
test
jae
push
push
cmpsb
movsl
mov
movsl
aas
test
hlt
sub
and
ret
lods
cmp
jle
fisubs
pusha
cmpsb
aaa
fistl
jg
pop
xorl
push
js
jge
cmc
sbb
lahf
lcall
sub
sbb
test
ljmp
push
xchg
mov
outsb
lods
sti
push
jae
in
mov
pushf
out
xchg
ror
push
xor
mov
lea
xor
ss
mov
fisttps
adc
mov
scas
rcll
pop
es
testb
in
roll
lahf
hlt
test
fildll
addr16
jle
mov
or
sub
fsubrs
adc
add
addr16
mov
push
add
subb
lret
push
in
push
mov
cld
jle
sbb
push
jge
lea
or
mov
sub
cmpsl
or
push
fdivrl
push
fwait
je
push
loope
popa
sahf
pop
push
fs
cli
add
xor
sbb
das
sub
inc
lods
addl
mov
mov
cmp
test
hlt
scas
xor
mov
add
or
inc
sbb
jmp
popa
xlat
and
push
sbb
xchg
add
mov
mov
inc
out
push
insl
out
call
wrmsr
sub
insl
pop
add
int
pop
addl
xchg
pop
mov
push
mov
repz
dec
xor
mov
fisttps
inc
xchg
loop
js
lret
jmp
mov
jmp
es
add
cmp
es
xchg
jecxz
imul
addr16
cmp
sbb
inc
xor
mov
xor
mov
ljmp
push
int
vpmacssdql
enter
outsb
pop
or
pop
mov
add
loope
sarl
aad
mov
add
add
stos
cmp
loope
add
mov
stos
gs
ret
popa
sbb
mov
fiaddl
jne
sub
mov
dec
lret
test
ljmp
xchg
dec
nop
inc
daa
call
push
test
cmpl
scas
sbb
lahf
xor
ret
dec
or
dec
test
xor
ds
clc
subl
jp
jg
or
cmpl
mov
iret
pop
iret
cld
pand
call
out
jge
mov
cwtl
jne
iret
testb
lahf
outsb
pop
jmp
dec
push
outsl
clc
jne
or
mov
xchg
jnp
scas
push
sti
aas
cs
movsb
in
xor
jmp
mov
mov
push
std
es
push
jle
cs
jmp
push
lret
sub
test
mov
inc
sbb
insl
mov
mov
pop
xchg
cmp
mov
outsb
cs
leave
cmpsl
sbb
into
popa
in
into
mov
push
mov
dec
sbb
inc
lcall
push
jno
repnz
jae
in
je
xlat
loope
fisubs
clc
cmc
sbb
pusha
xlat
pop
jg
loop
sbb
jge
bound
cmp
or
cmp
jns
inc
aad
jp
daa
mov
dec
pushf
jo
iret
sar
scas
into
nop
xor
mov
sub
int3
mov
sub
call
add
mov
pop
xchg
inc
add
mov
rorb
pop
shll
cltd
adc
pop
push
mov
mov
je,pt
out
xchg
jns
addr16
sbb
dec
lods
test
push
pop
adc
dec
ss
inc
xor
mov
fisubs
test
mov
sar
pop
push
mov
sbbb
ljmp
lret
push
xchg
insb
and
xchg
test
mov
adc
imul
jno
cmp
or
add
pusha
mov
gs
imul
clc
ret
call
dec
mov
orb
cmpb
xchg
cwtl
cmp
push
pusha
mov
jg
loop
dec
in
in
lods
xchg
test
cwtl
out
das
pop
subb
jbe
ret
and
xchg
sub
and
orb
and
cmpsl
jae
cmp
jge
cmpsl
pop
lds
adc
cmpsb
push
decl
jmp
pop
in
xor
xchg
adc
lret
iret
scas
pop
sbb
or
inc
cld
jmp
jmp
sahf
mov
add
iret
add
maskmovq
movsl
les
xor
jnp
inc
js
push
mov
mov
pusha
sub
lds
bound
fdivl
cmp
cmpsb
das
fildll
sbb
adc
int
andb
adc
pop
xlat
push
dec
mov
xor
lahf
or
jbe
push
jg
pop
pop
pop
lret
lock
fmull
aad
lret
test
push
jp
rcll
add
pop
loope
clc
and
mov
xchg
mov
dec
sbb
dec
int3
adc
jp
cli
cmc
stos
mov
mov
push
xor
pop
fwait
jo
or
add
jb
loop
mov
mov
sarl
xchg
inc
ret
and
cs
push
add
loope
fwait
bound
and
jmp
push
push
les
or
std
sub
add
pop
cmp
push
cltd
mov
into
dec
mov
push
test
push
pop
push
int3
bound
sub
push
mov
mov
mov
insl
or
add
or
andb
push
mov
pop
dec
dec
std
repz
or
mov
enter
std
push
inc
rclb
bound
loop
aas
movb
pop
sbb
ret
cwtl
push
or
out
add
rcll
cltd
push
das
imull
orl
cld
aaa
mov
enter
mov
cmpl
mov
mov
xchg
roll
sub
fidivl
out
ss
cmp
mov
imul
cld
aam
and
xor
js
cld
inc
cs
mov
repnz
add
out
inc
aaa
xchg
lea
jns
mov
out
pop
xchg
outsb
pop
xchg
outsl
cmp
andl
mov
jmp
mov
push
out
sbb
out
outsb
fwait
push
push
add
imul
int3
rcpps
icebp
mov
cmp
rcrl
fisttpll
push
lock
jecxz
inc
mov
negb
lret
push
or
adc
jno
sbb
daa
jb
cmc
and
push
in
push
add
sbb
push
mov
ret
gs
dec
add
pop
test
pop
sub
shll
stc
inc
cwtl
int3
xchg
or
or
jb
xor
imul
jae
out
jecxz
or
cmpsl
les
push
fcoml
pop
push
test
mov
sub
xchg
cli
sbb
cmp
pop
aas
ja
rorb
mov
adc
int3
test
mov
fucomi
je
sub
dec
cmp
lock
sub
in
aaa
sbbb
mov
jp
in
imull
loop
inc
push
add
aam
movsl
inc
and
push
aad
xchg
movsb
and
out
dec
fiadds
and
xchg
xchg
ret
incl
xchg
stos
cmp
sub
cmpsb
jnp
aaa
jecxz
or
fwait
adc
push
loop
loopne
inc
add
xchg
xchg
mov
movsl
sbb
fcompl
sbb
jns
xchg
jo
sub
sbb
fstl
add
inc
popa
mov
lcall
adc
xorb
and
mov
mov
mov
add
shlb
sahf
das
adc
mov
cmp
gs
pop
outsb
shrb
popf
int
sub
mov
pop
ror
push
mov
xor
aam
jb
fmull
inc
cs
aaa
cwtl
mov
ret
fwait
aas
jne
jne
pusha
ds
std
repnz
mov
pop
js
sbb
push
mov
cs
test
pushf
sbb
add
sub
ss
and
pop
cmc
ret
shl
popa
jno
fbld
test
pop
scas
xchg
loopne
add
xorl
jmp
lret
pusha
mov
lahf
add
xor
dec
popf
scas
sub
das
sbb
mov
inc
cld
pop
jns
xor
mov
and
mov
push
mov
outsl
dec
and
in
push
xchg
fucomip
aaa
xchg
lret
fisubrl
jno
sbb
push
js
iret
lahf
xor
push
mov
test
or
in
pusha
lcall
daa
jo
xor
mov
clc
add
in
sbb
scas
movsl
pushf
flds
dec
inc
cmp
mov
cmp
inc
add
aaa
loop
loop
mov
fmulp
mov
nop
ss
in
in
hlt
idivb
lret
loope
pop
dec
cmp
ss
mov
jno
mov
jmp
sbbb
mov
and
jne
pop
adc
xor
repnz
dec
es
xor
outsl
xchg
xor
xor
das
sbb
sbb
sbb
mov
push
jl
xchg
mov
push
dec
push
xor
hlt
pop
mov
loope
outsl
jl
ret
pop
or
inc
push
cs
dec
add
lret
cmp
mov
js
cmp
xchg
mov
mov
pop
sub
sub
js
repz
xchg
fldenv
mov
test
adc
dec
scas
enter
das
je
jmp
leave
sub
mov
sbb
or
pop
out
aaa
jnp
sbb
jnp
jecxz
jo
inc
xor
and
inc
in
shrl
mov
out
cwtl
out
jne
mov
inc
aam
jae
in
pop
repnz
jne
pop
aad
notb
pop
repnz
test
or
subl
xchg
pop
jb
xchg
mov
cmp
sbb
fbstp
pop
and
dec
cmpsb
scas
movsb
les
dec
sbb
clc
adc
call
adc
enter
push
cmp
cli
sbb
ja
pop
insb
int
mov
inc
shrb
and
testb
mov
andl
mov
mov
or
in
cmp
xor
fildl
push
push
jo
or
rcr
aad
push
push
jl
xor
mov
data16
shrb
mov
mov
dec
clc
ja
ficomps
fmul
data16
call
sub
cmpsb
mov
pop
push
fs
ficomps
jmp
xchg
inc
lcall
aas
mov
out
dec
fcomip
pusha
xchg
shrl
adc
inc
stc
pop
sbb
adc
sar
test
mov
inc
xor
loop
setg
fstps
lahf
add
call
leave
out
mov
int
cld
cwtl
scas
push
lock
add
jno
lea
or
jle
sub
arpl
jle
cli
xor
sub
aam
iret
pop
cwtl
fnstcw
push
stos
leave
in
inc
push
push
faddl
insb
cmc
test
push
ds
mov
sub
dec
xor
lea
iret
scas
shll
rorl
out
iret
xchg
adc
push
push
push
add
or
or
pushf
scas
scas
inc
add
push
dec
je
mov
sub
pop
maxps
sub
jnp
outsb
std
les
push
mov
outsb
inc
jne
xchg
popf
xchg
arpl
push
cmpsl
jno
and
js
sub
pop
and
or
inc
fucomp
push
sub
movb
test
out
jbe
es
sahf
aas
je
sbbb
fcoms
push
push
imul
jne
les
fcmovne
xchg
shlb
fdivr
jns
dec
xchg
imul
mov
popf
movsb
fnstenv
jp
push
and
fbld
enter
repz
test
std
and
xchg
imul
std
stos
adc
cmp
es
das
xchg
add
sub
mov
dec
inc
stos
sbb
imul
js
in
mov
shl
jle
out
inc
cmp
dec
aad
ficoml
fisubrs
cmovns
loop
or
cmc
jo
shrb
jl
jb
jae
or
aam
loop
or
dec
lcall
xchg
sbb
inc
or
pop
scas
xor
fildll
loopne
daa
pop
loopne
adc
pop
jp
xchg
mov
push
or
cmpl
adc
jmp
and
lods
and
jb
adc
and
lret
xchg
push
jle
and
xchg
mov
pop
lds
mov
test
push
loop
pop
mov
test
mov
mov
push
mov
pushf
lock
cmpsb
cld
ret
pusha
pushf
loope
push
popf
in
lods
inc
and
jecxz
stos
fcmovne
fst
jge
and
mov
vpavgw
icebp
push
inc
dec
loope
xor
pop
repz
adc
pop
add
stos
gs
dec
jne
and
in
lret
xchg
jne
mov
xor
arpl
cli
mov
dec
add
push
sub
ror
aas
cltd
fisttpl
inc
lea
sbb
cmpsb
test
lods
sbb
data16
leave
iret
packssdw
aam
jmp
repz
cmpsl
les
stos
scas
xchg
xchg
xor
and
loop
cmp
xor
pop
xchg
in
lret
cmp
mov
sarl
mov
lahf
test
shrb
add
outsb
das
sbb
lds
out
cmp
push
and
jb
or
stos
dec
inc
in
gs
in
mov
and
insl
or
add
push
or
insl
sahf
inc
sub
xlat
adc
ret
adc
faddl
cltd
fidivs
cld
mov
arpl
push
adc
sub
jne,pt
das
sub
mov
mov
dec
push
sarb
push
inc
xor
in
shrl
mov
inc
jl
cs
arpl
pop
sub
jmp
fwait
dec
ss
add
mov
add
push
and
sbb
rclb
xchg
inc
dec
xchg
jmp
dec
sbb
ds
popf
jnp
es
sti
mov
mov
xchg
mov
sub
data16
dec
cmp
mov
and
xchg
jle
int
and
or
xor
xchg
cltd
aam
jmp
xchg
cli
jp,pt
jae
in
arpl
imul
arpl
lods
test
inc
mov
cwtl
push
pop
shlb
cmp
lock
jno
push
loop
add
add
pop
cmp
jno
movsb
shll
out
addb
xchg
mov
add
lahf
iret
pop
pop
push
mov
cmpsl
dec
lahf
ret
inc
into
dec
pop
hlt
cs
test
sbbb
rolb
lret
addb
test
xor
cmpsb
and
lcall
pop
jb
fimull
ljmp
push
jmp
faddl
cwtl
imul
fistps
xlat
clc
mov
xchg
jae
mov
jmp
xchg
xchg
repnz
pop
mov
insb
into
jmp
and
sub
push
and
or
test
pushf
shl
mov
cmp
enter
mov
or
add
jb
or
mov
lock
pushf
cltd
and
outsl
shlb
mov
jge
fsincos
jo
mov
mov
xlat
in
in
xchg
push
sbb
xchg
out
loope
add
jns
jnp
jo
sub
imul
push
nop
icebp
mov
push
testl
out
sub
mov
xor
cmp
mov
inc
or
clc
in
mov
andb
out
mov
cmp
imulb
mov
pop
daa
outsl
push
cmpsb
pusha
push
js
ljmp
rcrb
push
jb
jmp
push
out
dec
or
sbb
or
sbb
js
jge
cld
out
insl
sub
cltd
enter
in
sbb
cmp
sbb
adc
jmp
ss
arpl
arpl
int3
sbb
into
mov
mov
call
pop
leave
pushf
ja
or
and
out
xchg
dec
in
jg
xor
inc
lret
add
mov
cmpsl
xor
scas
jmp
mov
jmp
in
cmpsb
fwait
add
or
out
cmc
cmp
push
xchg
sub
dec
rcl
jecxz
pusha
jecxz
cltd
out
dec
aaa
ret
shlb
xchg
bound
mov
adc
sbb
mov
push
cmp
js
or
loope
dec
mov
fmull
stos
push
cmp
push
mov
push
cwtl
mov
idiv
or
jns
cmp
jno
xchg
push
adc
pushf
lcall
je
or
xor
hlt
pusha
lods
and
jae
pop
add
mov
cld
adc
nop
xchg
mov
pop
pop
das
mov
shl
lock
jno
xchg
mov
or
cmp
arpl
cltd
push
out
adc
rol
sbb
xor
fsubrs
int3
imul
cmpsb
mov
mov
add
add
cmp
push
push
jg
stos
pop
pop
stos
sarb
cli
icebp
pushf
add
mov
pop
sbb
cmp
or
xchg
js
push
ljmp
addl
popa
push
into
lret
subl
faddl
nop
cmp
and
jmp
sub
cli
lret
call
push
sbb
sub
mov
cmp
push
pop
sbb
sub
loope
inc
push
xchg
dec
out
ret
cmc
mov
xchg
sbb
cmc
aaa
dec
arpl
mov
insb
mov
sub
aam
dec
daa
out
dec
mov
mov
test
and
jecxz
lods
dec
ljmp
addr16
inc
adc
mov
pop
push
add
negl
imul
fistpll
or
pop
jp
fwait
mov
jg
fildll
jle
icebp
adc
sub
imul
adc
call
faddp
lods
push
in
jno
fwait
jmp
leave
ficoml
pop
arpl
mov
hlt
ja
fwait
and
repnz
jmp
nop
shl
ret
jns
int3
mov
inc
pop
aaa
xor
loop
jge
push
xor
loope
aad
pop
adc
fisttps
sbb
fisubrs
and
xor
jecxz
orb
dec
mov
pop
cs
lahf
imul
mov
enter
les
push
int
out
xchg
xchg
xor
outsb
popa
insb
add
jno
in
cmp
adc
pop
push
jo
cmp
data16
add
mov
and
fs
adc
pop
adc
push
push
int3
jne
and
ds
push
mov
dec
push
aaa
sub
rcr
std
jmp
sahf
repz
lods
es
gs
sub
xchg
jmp
jo
push
in
lods
lods
or
jno
mulb
negb
mov
sbb
cmp
jb
in
out
cmpsb
popf
leave
add
jbe
cmp
js
je
sahf
sti
rorl
pop
xchg
pusha
lock
sahf
cld
mov
xchg
xor
jp
int
lods
inc
nop
jne
xor
mov
frstor
mov
scas
sbb
sbb
lea
and
xchg
inc
xchg
inc
movsl
xchg
or
insb
js
sbb
and
push
mov
mov
xchg
jge
lcall
mov
mov
cmp
cmpsb
shlb
movsb
xor
sub
shll
addr16
mov
fidivrs
ss
cmp
rol
ds
or
loope
mov
je
cmp
or
out
mov
mov
aas
adc
fdivr
add
lahf
push
roll
aad
sub
sub
lods
cmp
arpl
jmp
test
mov
mov
dec
test
jecxz
sbb
pop
mov
inc
push
shlb
jae
hlt
adc
aaa
inc
push
mov
jno
adc
mov
inc
and
inc
hlt
mov
or
loop
rolb
mov
push
mov
test
test
xor
push
call
clc
add
sbb
mov
xchg
lods
lret
inc
cmp
test
xor
shrb
push
mov
ficoml
adc
fnsave
lahf
cwtl
mov
gs
jge
shll
lea
mov
std
lock
sub
xchg
inc
jge
sahf
dec
outsb
pusha
andb
sbb
inc
pop
lahf
push
xor
mov
jge
mov
fld
xchg
xchg
negl
jle
int3
inc
fisttpll
or
mov
adc
sbb
aas
push
icebp
nop
out
fst
push
hlt
test
jge
lock
repz
xchg
pop
jmp
pop
sub
sbb
fwait
or
aad
or
out
mov
pop
push
into
ja
aad
pop
xchg
or
cmpsb
pop
push
fdivrs
fsts
dec
jp
push
leave
jl
mul
ret
add
push
loope
rcrb
adc
jmp
inc
add
test
js
fidivl
imul
loop
push
inc
and
das
call
mov
push
and
adc
jge
mov
mul
inc
or
test
lea
pusha
jne
inc
aad
hlt
imull
fldl
std
dec
das
into
les
xor
adc
mov
fildll
divl
inc
and
sub
push
cmc
dec
mov
inc
adc
jg
push
fisubrl
cmpsb
dec
mov
mov
adc
minps
fsubs
stc
inc
je
dec
test
bnd
je
mov
dec
mov
inc
adc
enter
mov
xor
mov
sub
dec
leave
cmp
dec
dec
jnp
ds
cmpsb
or
iret
cmp
addr16
xor
lock
mov
inc
sub
scas
fstl
out
xor
mov
aad
loope
out
mov
out
push
xchg
fcomp
pop
dec
jns
cmp
pop
fstpt
add
cli
inc
test
das
and
aad
push
sbb
dec
sbb
xchg
and
jl
int
iret
mov
or
imul
loop
lret
sbb
jne
mov
push
xor
push
jns
jp
and
push
setg
or
or
jp
and
add
call
push
in
addr16
repnz
jo
add
call
push
xor
adc
mov
inc
inc
adc
jg
push
mov
pop
fisttpl
sub
insb
sub
fisttpll
lds
lods
inc
imul
sub
mov
push
or
dec
and
xor
es
jg
imul
popa
mov
clc
stos
sbb
dec
inc
mov
and
ss
cld
push
inc
fists
inc
andl
xchg
sarl
push
add
or
dec
cmp
adc
lcall
sub
and
mov
pop
cmp
adc
cmp
popf
cmp
lods
test
xchg
jno
gs
pop
dec
nop
inc
xor
inc
dec
fldl
ljmp
xlat
in
repz
sub
loope
nop
or
adc
rcll
push
adc
xor
jge
mov
inc
adc
mov
pop
cmc
aad
ds
icebp
in
jle
idivb
cs
pop
xorb
pop
sbb
ficoms
mull
sbb
movsb
push
scas
repz
lea
in
stc
mov
test
scas
sbb
push
and
fwait
adc
lock
jbe
aaa
and
cmp
imul
cld
jbe
movsl
mov
aam
mov
ljmp
sbb
xchg
ret
in
dec
mov
imul
shlb
cmp
mov
clc
cmpsb
es
repnz
aaa
loopne
icebp
into
sub
fs
.byte
lods
sbb
add
lahf
xor
ja
xor
inc
dec
mov
jns
les
fsubr
stos
or
sub
adc
mov
push
test
test
loop
xchg
pop
add
cmp
fbld
inc
and
inc
iret
outsl
dec
insl
cmp
inc
adc
fwait
js
stos
test
ljmp
les
test
mov
mov
jne
sahf
out
mov
jp
repz
cmpsl
fcomi
in
push
cli
stos
xlat
daa
pop
aam
xchg
enter
gs
adc
mov
dec
add
sub
mov
and
rcr
std
pop
fdivs
pusha
fisubrl
dec
out
test
xor
idivl
stc
popf
popa
addr16
bound
shll
icebp
out
jmp
ficomps
jp
sti
loopne
into
cmc
xor
flds
sarl
or
outsl
loop
lods
and
add
or
cltd
xorl
insb
notl
sbb
push
movsb
mov
and
dec
mov
icebp
or
pop
sbb
and
test
pop
gs
dec
repnz
rcll
int3
cmp
gs
insb
fidivl
repz
int
adcl
hlt
call
push
dec
inc
and
xor
nop
or
je
andb
mull
stos
ljmp
pop
adc
mov
pop
xchg
insb
inc
in
add
sbb
dec
mov
add
mov
cmp
daa
xor
fsubrs
cmpsb
lds
mov
adc
scas
dec
aas
bound
push
pop
add
lock
lods
adc
jne
lock
mov
ja
push
insb
inc
.byte
pop
push
.byte
and
inc
adcl
add
hlt
fwait
out
dec
cmpsb
jo
xchg
mov
dec
int
mov
test
sarl
in
ljmp
insl
hlt
leave
aas
in
pop
push
add
je
dec
divps
test
pop
lret
mov
jmp
sbb
jg
cmp
nop
jne
push
cmc
xchg
push
sbb
fcmovnb
fbstp
popf
xchg
sbb
gs
add
lea
sbb
mov
mov
jbe
lret
pop
xchg
aam
mov
adc
in
jmp
xchg
sub
repnz
mov
fwait
int
mov
xor
sbbl
jns
mov
inc
bnd
xchg
cmp
xchg
inc
cmc
jbe
dec
cmpsb
inc
addr16
jnp
lea
into
mov
push
mov
out
mov
int
gs
jle
cltd
mov
sbb
sub
adc
xchg
cmp
stos
mov
inc
and
out
loop
and
or
mov
lahf
mulb
add
imul
in
add
sbb
loopne
sub
pop
gs
sbb
out
cmpsl
mov
push
ds
sbb
clc
mov
inc
jmp
adc
fsub
enter
lret
jmp
movb
cmpsl
dec
jecxz
pop
dec
xchg
test
negl
les
adc
ficompl
aas
fcmovne
cmpsb
leave
cli
lret
push
xchg
adc
movsb
cs
subb
out
xchg
push
lea
lahf
mov
xchg
and
push
mov
push
aas
sahf
jp
int
repnz
mov
arpl
pop
mov
or
xor
push
jb
jp
stc
and
or
jnp
das
repz
or
ljmp
addr16
sbb
mov
out
call
push
hlt
out
aad
adc
fwait
cmpsb
cmpsl
dec
lcall
pop
arpl
sub
stos
jae
sbbb
scas
push
wbinvd
inc
jnp
adc
loopne
hlt
cmp
jbe
push
fdivs
xor
sub
or
add
imul
arpl
dec
jge
mov
mov
lahf
mov
xchg
add
mov
lods
sub
sub
testl
xor
in
lock
pusha
stc
iret
adcl
xor
push
lahf
test
mov
xchg
loope
ds
sub
dec
mov
and
mov
sahf
jge
popa
sbb
idivb
popf
in
aam
push
inc
jp
mov
loopne
mov
jno
loop
fstpt
pushf
mov
ss
push
mov
pop
add
jmp
mov
mov
push
movsb
adc
movsl
in
mov
fists
ficoml
inc
dec
fcmovnb
jnp
mov
les
xchg
stos
pop
test
xchg
sub
gs
outsl
loop
mov
incl
sbb
movsl
outsl
dec
cmp
mov
stos
ds
mov
xchg
jno
mov
mov
jle
mov
jae
aaa
rolb
adc
and
pop
andb
lret
pop
mov
in
sahf
nop
sub
es
aaa
push
dec
pop
sti
sub
mov
push
mov
lret
mov
icebp
sub
fldl
adc
dec
pop
and
insl
pop
aad
add
test
hlt
inc
scas
int3
jns
sbb
pop
call
lods
lea
mov
js
js
das
movsb
loopne
mov
jmp
cmp
add
mov
add
fnstcw
dec
leave
mull
or
or
adc
jbe
cmp
xor
aas
sub
stos
mov
ss
movsl
movsl
insb
lahf
lds
adc
or
xchg
mov
data16
sub
mov
fsubrl
cmc
inc
rcrb
mul
arpl
out
lret
ror
in
jb
hlt
out
stos
shll
inc
xchg
call
sub
jns
xchg
cs
ja
sti
mov
sbb
gs
ja
mov
cmp
jns
jne
mov
jl
in
repnz
outsl
into
pop
bound
add
sbb
xchg
lock
sub
daa
mov
push
lcall
bound
cmpsb
flds
fcmovne
leave
pop
mov
cmp
push
idivb
jl
or
pop
out
mov
cs
xchg
fsubs
cmpsl
aaa
into
push
cmp
rcrb
push
mov
jno
stos
scas
mov
pop
data16
dec
ljmp
xchg
jmp
add
adc
cmpsb
gs
mov
pusha
imul
lret
inc
mov
enter
mov
popf
rclb
jmp
cmp
push
mov
test
fucomp
xchg
or
lcall
or
out
adc
adc
gs
sbb
mov
sbb
outsl
dec
jns
pop
xchg
cmp
push
mov
sti
add
cmp
loope
sbb
fildll
jl
out
mov
jnp
xchg
xor
sbb
add
xor
sarl
dec
inc
ja
jne
fsubrs
inc
and
pop
and
shlb
mov
mov
or
push
or
inc
inc
loopne
inc
stos
.byte
lahf
jns
add
inc
add
mov
add
add
add
add
add
add
sub
add
inc
add
orb
add
push
add
add
add
add
add
add
add
add
add
addb
addb
add
add
add
add
add
add
add
dec
add
sbbb
add
outsb
add
or
add
add
add
add
add
add
add
jle
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
or
add
add
add
add
in
add
add
add
xor
add
adc
add
in
add
add
add
inc
fiadds
add
add
add
add
add
add
cmc
add
add
add
add
push
add
add
in
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
pop
add
inc
add
dec
add
inc
add
push
add
jns
dec
add
outsl
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
data16
data16
data16
data16
data16
add
aam
cltd
aam
cltd
int3
popf
nop
enter
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
data16
add
mov
mov
lds
ret
stos
icebp
ret
stos
icebp
ret
stos
hlt
lds
int
sti
sarb
sarb
sarb
sarb
sarb
into
cltd
xchg
xchg
data16
add
mov
test
pushf
cmpb
leave
mov
fdivl
ljmp
shll
aad
cli
aam
cli
shll
shlb
shrl
xchg
xchg
data16
add
test
jl
bound
inc
arpl
pop
cmp
aaa
arpl
jp
inc
cmpsb
sbbl
jecxz
xchg
in
cmpsl
cmc
shll
aad
cli
aam
cli
aam
cli
shll
shlb
xchg
xchg
data16
add
add
inc
sub
push
sub
sub
dec
inc
inc
dec
inc
sub
dec
cmp
pop
dec
aaa
mov
lcall
mov
aam
cli
aad
cli
aad
cli
aam
cli
aam
stc
shlb
xchg
xchg
data16
add
pop
cmp
xor
test
lea
push
paddsb
sub
out
xor
inc
and
inc
sub
mov
xchg
les
aad
cli
xlat
mov
aam
cli
shll
xchg
xchg
data16
add
jl
bound
sub
ja
mov
out
push
dec
lods
mov
stc
paddsb
daa
lock
inc
and
arpl
lcall
cmpsl
cmc
shll
aad
cli
aad
cli
aad
std
sarb
data16
add
add
add
add
push
xor
fsts
sti
lea
lea
movsl
mov
mov
in
mov
mov
les
lods
mov
lock
lock
mov
leave
mov
lock
stc
aad
cli
fdivrs
mov
xchg
xchg
data16
add
add
add
add
das
fiadds
out
push
in
sar
div
cld
idiv
in
loope
int
fwait
test
sbb
ljmp
int3
out
inc
xor
cmpsb
sbbl
not
mov
fnstcw
xlat
mov
xchg
xchg
data16
add
add
jne
pop
mov
sub
push
push
cli
idiv
cli
idiv
cld
idiv
cld
repz
loopne
fwait
test
xor
xor
jp
inc
leave
mov
lock
mov
sarb
data16
add
add
push
xor
out
push
rolb
push
out
clc
jmp
cld
idiv
std
cld
cld
repz
out
out
call
loope
test
xchg
mov
stc
inc
inc
dec
push
xor
mov
mov
int
cli
fnstcw
fnstcw
xchg
xchg
data16
add
mov
mov
sub
mov
imul
clc
call
mov
sar
bnd
repz
test
cld
les
jp
rdseed
xor
cmpsb
sbbl
cli
fnstcw
fcmovnb
std
sarb
data16
add
inc
mov
pushf
inc
pop
sarb
lret
jmp
repz
xchg
pushf
inc
pop
mov
movsl
std
in
std
fmulp
hlt
lds
xchg
subl
sbb
and
pop
inc
aad
xchg
int
stc
fadd
sti
faddp
cli
fcmovnb
sti
sarb
data16
add
daa
pushf
inc
pop
pushf
inc
pop
sarb
les
fadd
in
mov
pop
add
or
jns
add
add
push
in
mov
cld
les
jge
popa
dec
xor
dec
xor
pop
dec
aaa
cmpsl
mov
shlb
vpsrld
data16
add
daa
mov
mov
rorl
in
mov
cli
lret
mov
mov
pop
or
addr16
add
pop
add
pop
add
or
addr16
add
insb
push
in
stos
xchg
in
jge
arpl
jp
sbb
push
pop
dec
aaa
leave
mov
sti
faddp
sti
sti
std
sarb
data16
add
dec
and
fisubs
cmp
cwtl
test
stos
xchg
repz
pushf
inc
pop
jns
add
add
add
add
add
add
popa
dec
out
mov
jge
arpl
jg
xor
pop
dec
aaa
mov
xor
mov
loope
sti
std
sarb
data16
add
dec
and
fisubs
cmp
mov
xchg
in
mov
test
in
mov
jp
mov
aas
mov
sub
repz
out
mov
jge
insb
push
xor
aas
inc
sbb
inc
cmpsl
mov
fadd
cld
loope
cli
loope
cld
loope
std
sarb
data16
add
rcll
in
pushf
shl
les
neg
shl
movsl
mov
xchg
fsts
cli
fdivrs
mov
stos
xchg
out
subl
inc
mov
inc
sub
shll
jecxz
cld
jecxz
cli
loope
std
sarb
data16
add
mov
in
xor
ret
jmp
int3
cli
in
cli
in
in
cmpsl
jmp
mov
repz
call
icebp
ret
stos
in
mov
clc
mov
rorl
pop
int
inc
mov
inc
sub
in
mov
in
std
in
sti
in
cld
jecxz
std
sarb
data16
add
add
dec
xor
push
in
xor
pushf
shl
in
push
in
repz
lock
repz
repz
call
clc
ret
test
std
leave
lods
stc
mov
pop
int
pop
int
dec
bound
insl
push
inc
leave
mov
mul
lret
std
out
std
out
std
in
sti
in
std
sarb
data16
add
add
test
push
in
xchg
bnd
hlt
cmpsb
test
repz
repz
push
push
stc
repz
bnd
jmp
fadd
repz
jns
popa
jb
je
int
inc
sub
call
std
call
std
out
std
in
std
sarb
data16
add
add
add
add
cmp
sti
mov
lret
int3
clc
in
in
stc
cld
repz
cld
idiv
cld
idiv
lock
fadd
shll
movsl
popa
jb
je
hlt
je
cmp
nop
jns
fadd
mov
out
std
jmp
std
call
cld
out
std
sarb
data16
add
pop
cmp
cltd
mov
cmpsb
test
mov
lock
mov
out
lods
aam
cltd
mov
cmpb
sbb
mov
mov
je
bound
test
fadd
mov
out
cld
in
fdivrp
in
fdivrp
jmp
std
jmp
clc
out
sti
sarb
data16
add
cmp
scas
mov
cmpsb
mov
cmpsb
mov
cmpsb
test
mov
xchg
mov
mov
mov
jb
cmp
nop
jns
call
fdivr
in
loope
in
loope
in
fdivrp
jmp
mull
stc
mov
data16
test
arpl
xchg
xchg
lret
lock
mov
cltd
mov
mov
mov
jl
insb
inc
pop
cmp
fscale
out
in
icebp
out
out
in
out
in
in
loope
mov
mulb
fiadds
data16
add
test
nop
jns
arpl
arpl
popa
push
inc
pop
dec
aaa
pop
cmp
pop
mov
fsincos
icebp
jmp
repz
std
out
in
out
in
mov
mulb
rolb
add
rclb
std
cld
cld
cli
cld
idiv
cli
idiv
cli
idiv
stc
repz
stc
repz
div
push
out
std
cmc
in
hlt
jmp
repz
std
out
in
cmpsl
dec
xchg
mov
data16
call
std
cld
cld
cli
cld
idiv
cli
idiv
cli
idiv
stc
repz
stc
repz
div
push
out
std
cmc
in
std
cmc
in
std
repz
out
shll
lcall
add
add
rorb
std
std
cli
cli
cli
cli
cli
cli
div
div
div
repz
in
in
in
in
in
in
in
in
in
in
in
in
out
out
in
out
out
out
shll
data16
add
dec
xchg
rorb
rclb
into
cltd
sti
into
cltd
sti
into
cltd
repz
lahf
repz
lahf
repz
lahf
ljmp
ret
ret
mov
out
movsl
data16
incl
add
incb
add
incb
add
incb
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incb
add
incb
add
es
aaa
mov
pop
fwait
cmp
add
add
or
add
add
push
inc
dec
dec
dec
inc
inc
add
push
push
jns
gs
add
push
jns
je
insl
add
adcl
je
add
outsb
imul
gs
or
push
imul
add
xor
add
clc
push
outsb
imul
sub
lods
dec
dec
jnp
int3
int3
loopne
push
sub
bound
cmp
bound
mov
into
stos
pop
xor
inc
jo
js
rcrb
mov
mov
insl
bound
xor
lods
and
jecxz
sub
repz
shrl
mov
sti
out
mov
mov
in
xor
dec
fldt
lahf
je
adc
addl
cmpsl
sub
jg
out
sbb
imul
inc
cld
xchg
int
push
repz
insb
sbb
or
dec
loope
addr16
inc
test
ja
nop
ja
iret
call
sbb
adc
push
ja
mov
icebp
test
mov
sub
and
cmp
cmp
and
or
push
add
outsb
mov
stos
cmp
pop
pop
stos
mov
cmpsl
inc
mov
cld
sub
dec
and
mov
jg
jns
jg
jne
ljmp
sti
mov
sub
jge
dec
faddl
adc
call
int3
jecxz
cwtl
ret
cmp
outsb
idivl
sub
mov
xchg
stos
stc
sti
xlat
inc
inc
lcall
sahf
mov
out
enter
mov
stc
jg
sahf
fisttpll
adc
inc
jg
mov
cmp
mov
inc
jg
cmp
dec
loopne
lret
cmc
lods
adc
hlt
add
inc
inc
loopne
test
lods
and
icebp
test
cld
loope
fdiv
pop
xchg
rep
fcomps
or
clc
push
pop
outsb
cld
inc
in
sub
cmp
jmp
movq
push
xchg
popa
out
cmp
inc
or
and
jbe
movsl
jb
dec
mov
mov
lock
dec
fldt
pop
stos
pop
ret
repz
push
pop
mov
stc
shlb
jmp
ja
dec
jbe
sub
mov
insb
lods
rorb
jge
jmp
test
pop
movsl
pop
dec
sub
xchg
shr
aaa
dec
pminsw
scas
dec
cs
mov
sbb
mov
pop
sarb
sbb
imul
mov
rorb
incb
jmp
dec
lods
mov
mov
aad
shrb
fdivs
sub
sbb
aas
rcr
and
movsl
jmp
sbb
and
enter
std
push
pop
movsl
stc
ljmp
mov
xchg
fistpll
sub
jg
outsb
xchg
in
out
and
pusha
cmp
out
xchg
mov
mov
push
pop
out
mov
rclb
jecxz
negb
movsl
aam
jge
jecxz
mov
mov
rcl
in
sbb
into
outsb
xchg
pcmpeqw
and
xchg
pop
sbb
mov
xchg
je
das
test
and
fnsave
out
jae
sbb
pop
and
xchg
sub
leave
dec
leave
and
cmp
cld
icebp
jb
insl
mov
mov
dec
or
fistps
pop
je
jmp
ja
cmp
idiv
and
adcb
sbb
mov
insb
lods
rcrb
push
jns
icebp
out
lea
cs
push
xchg
pop
xor
jge
jmp
mov
mov
add
lods
sarb
dec
rcrl
stos
pusha
loopne
mov
dec
sub
movsl
repnz
pop
test
das
sub
jge
adc
add
sbb
fbstp
and
out
jge
jecxz
push
sbb
and
cld
ja
aam
add
jge
loopne
add
jb
movsl
dec
cmp
lahf
sbb
aaa
xchg
add
lods
mov
sub
dec
and
insl
sarb
pop
sub
cmp
loop
xchg
test
aad
dec
pop
test
sub
cwtl
or
cwtl
jae
sahf
dec
je
cld
push
jmp
addr16
je
sub
sub
push
roll
pop
dec
cmp
int3
jg
ss
std
rol
or
push
jbe
stos
clc
pop
je
jle
je
aas
dec
je
rorb
pop
stc
add
add
aaa
mov
ja
fimull
fcomi
mov
push
stc
and
movsb
or
add
out
dec
test
dec
dec
lock
jno
orl
shrb
subb
xchg
xchg
push
scas
and
mov
sbb
sti
lock
mulb
fnstcw
es
add
pop
and
shll
xchg
xchg
add
lret
add
jecxz
jmp
xlat
lcall
mov
pop
adc
pop
stc
divl
daa
xor
jp
notb
hlt
mov
lods
testb
fiadds
mov
out
jae
dec
loope
xchg
repnz
or
adc
std
and
ud2
inc
inc
dec
mov
jns
outsb
jl
mov
sbb
jge
push
jge
mov
shll
sub
jae
ljmp
ret
sub
dec
pop
lds
mov
dec
and
in
lds
dec
mov
psubb
jmp
aas
loop
lcall
lcall
jg
lret
push
mov
mov
das
dec
into
rorl
loop
mov
cld
lds
adc
inc
add
xchg
mov
lret
js
gs
pop
ljmp
loope
clc
cld
jbe
aas
xor
fisubrs
mov
fdivrl
cmc
sub
movsl
fimull
xlat
test
push
sarl
mov
out
push
in
divl
lcall
mov
addr16
mov
lods
ljmp
mov
scas
clc
scas
pop
lods
mov
dec
xlat
call
bound
pop
scas
repz
pop
lret
cmc
jmp
pop
mov
pop
movsl
jp
pop
mov
scas
test
jmp
fildll
xchg
scas
mov
jmp
dec
jp
dec
xlat
pop
mov
mov
xlat
add
sub
mov
jmp
das
pop
sbb
mov
sbbb
mov
mov
das
sub
gs
adcb
jnp
shrl
cmp
dec
out
push
sub
jmp
pop
mov
mov
sarl
lods
mov
mov
jae
in
out
lcall
lahf
lods
ss
outsb
test
cmp
js
add
cmpsl
add
insb
sahf
aam
in
iret
xor
in
jne
out
stc
cmpsb
xchg
push
outsb
adcl
inc
in
sahf
clc
mov
jae
bound
aad
sbbl
int3
fldenv
je
xlat
xor
mov
mov
mov
inc
es
dec
mov
xlat
fs
ds
lret
gs
xor
pushf
arpl
push
shlb
test
xor
cmp
lds
ret
ds
push
xor
cwtl
push
pop
dec
push
loop
fwait
mov
mov
sub
icebp
mov
push
xchg
iret
pop
lahf
sub
sbb
fidivs
fcmovnu
outsb
and
xchg
lea
fcmovnbe
pop
add
fwait
das
or
loopne
mov
js
mov
data16
fsubs
cwtl
cmpsb
sub
sarl
mov
das
mov
and
mov
mov
fldcw
pusha
jp
ljmp
mov
in
inc
loopne
xor
pusha
mov
cmp
mov
aaa
adc
je
subb
lock
dec
xor
lods
and
push
repnz
and
inc
dec
mov
xlat
sbb
loopne
fistpl
je
imul
add
cmp
xor
mov
dec
ret
add
cmp
or
rcrl
scas
lahf
inc
pop
jns
std
dec
insl
dec
fucomp
sti
out
or
fsts
adc
dec
sbb
mov
lock
aam
mov
pop
xor
cltd
daa
mov
mov
inc
cmp
insb
lret
jb
lret
data16
mov
cvtpi2ps
outsb
fldl
sbb
jne,pn
sbb
fstps
pop
xor
sahf
xor
rep
push
sub
fsubrs
rorl
inc
cmp
pop
push
jecxz
ficoml
mov
negl
pop
push
xor
or
lcall
ret
aam
mov
inc
std
adc
int3
movsl
cli
mov
push
mov
or
je
movsl
mov
out
push
rorl
stos
shll
mov
sub
imul
insb
iret
dec
jns
cs
loope
cld
or
repnz
add
and
das
popa
pop
jae
cmp
xor
mov
fwait
mov
test
fs
push
fsub
inc
pop
enter
insl
shll
push
mov
jnp
sbb
ss
add
stos
sarb
cmpsl
ficoms
dec
mov
bound
jl
inc
mov
aad
insb
sbb
loopne
pop
iret
inc
repz
cmp
sbb
or
imul
orl
dec
lcall
dec
repz
loopne
jb
daa
out
pop
push
stos
mov
movsl
stos
fsubr
loope
mov
bound
add
jo
in
and
pusha
push
inc
mov
fildll
adc
push
xchg
int
dec
test
mov
in
les
sbbl
pop
insb
jb
sub
dec
sbb
and
adc
push
cmpsb
pop
ja
jge
stos
sbb
push
mov
lods
dec
int
shll
or
cmpsl
mov
pop
dec
pop
insl
sub
js
fdivl
dec
and
es
inc
mov
cwtl
adcl
adc
andb
das
movsb
ret
aaa
lock
xchg
mov
ret
ss
jns
cli
sub
fistps
test
jne
jecxz
movsl
in
dec
daa
daa
fwait
sbb
mov
imull
pop
sub
or
movsb
adc
pop
jno
aaa
in
adc
xor
outsb
insb
cmpsl
add
inc
out
pop
pushf
popf
lahf
addl
mov
sub
addl
pop
pop
addr16
cmp
and
inc
pop
out
adc
sub
cmp
pusha
inc
stos
lods
mov
push
add
in
push
jb
pop
push
imul
jp
gs
add
mov
and
nop
movsb
or
mov
mov
jge
mov
inc
push
fcompl
stc
lea
cli
jns
mov
hlt
mov
fwait
xchg
dec
sub
addr16
shrl
rcrb
negb
jne
in
mov
pushf
in
mov
dec
loope
adc
int3
push
inc
popf
lret
out
mov
js
push
pushf
mov
adc
and
sub
fdiv
push
jbe
out
push
mov
fwait
movsb
clc
pop
dec
imul
mov
jp
int3
xor
js
jp
fdiv
cmp
fsubr
mov
mov
scas
and
roll
cs
popf
das
push
xchg
pop
scas
les
mov
mov
push
sub
inc
dec
mov
outsb
int
scas
and
adc
adc
push
adc
shlb
shll
xorl
jp
xchg
subb
mov
lcall
pop
sub
outsb
fidivrs
cmpsb
cmp
pop
pop
imul
ret
hlt
std
loopne
mov
out
arpl
insl
or
mov
inc
lcall
inc
ds
pushf
ret
test
push
dec
and
in
std
add
cmp
into
mov
pop
shl
mov
cmpsl
cmpsl
cmpsl
mov
adc
mov
scas
mov
sub
dec
or
xchg
xchg
pop
push
add
push
movsl
pop
inc
mov
cmpsl
dec
addl
inc
push
sbb
scas
inc
xor
daa
push
xor
mov
sbb
daa
push
shlb
add
pop
fmul
rorb
arpl
sub
mov
push
xchg
inc
sub
insb
jo
stc
lds
cmpsb
cld
movsl
leave
cmp
data16
pop
add
mov
shr
inc
imul
jae
xchg
scas
sub
fmuls
std
push
xor
jle
mov
lea
xor
pop
or
push
sub
inc
adc
xlat
cmpsl
sti
add
pop
aas
dec
sbb
in
cwtl
push
add
lods
movsl
sti
cmp
mov
xor
ret
and
jae
test
fldcw
lret
adc
cmpsb
jbe
adc
push
hlt
inc
xor
cmp
pop
push
pop
mov
sahf
cmpsb
or
inc
sbb
push
int3
mov
jbe
pop
mov
push
sub
xor
cmp
orl
test
xor
jmp
inc
arpl
push
stos
mov
pop
mov
mov
sub
jne
cmpsb
fisubs
and
xor
imul
sub
jo
push
sub
loop
shl
bound
arpl
inc
xchg
or
popfw
cwtl
mov
mov
adc
cmpsl
mov
stos
shrb
pop
imul
cwtl
or
or
in
fwait
adc
push
or
cli
stos
and
mov
ficoms
mov
das
and
jp
or
pop
js
gs
mov
inc
xchg
out
cmpsl
in
shl
sbb
sarb
mull
adc
loope
movsb
cmp
enter
mov
push
inc
adc
mov
aaa
pop
mov
inc
mulb
sarl
rcrl
in
movsb
jb
data16
std
js
fdivrl
cmp
enter
mov
data16
popf
xorl
xchg
push
in
dec
ret
or
test
fidivrl
in
sub
sub
rcl
adc
push
loopne
loope
imul
outsb
jnp
fstpt
push
stos
and
push
jge
hlt
ljmp
inc
into
loop
mov
pop
roll
movsl
loope
lds
and
xchg
scas
lret
ja
push
sub
jge
out
dec
xchg
not
ss
sub
bnd
xchg
rolb
sub
addr16
std
loop
unpcklps
xchg
dec
sahf
loop
fstp
lock
fcmovnbe
dec
in
jne
mov
sti
dec
mov
stc
cmp
shlb
add
or
sbb
jle
mov
jae
in
into
cmp
or
sbb
test
jnp
jge
xor
xor
ljmp
sub
add
jecxz
insl
xchg
scas
inc
jle
push
scas
xlat
mov
lock
test
mov
xor
inc
in
dec
fcmovnu
xchg
push
cld
and
jnp
subl
jb
or
lahf
out
adc
sbb
cld
or
add
imul
repz
jno
push
dec
mov
cmp
push
xchg
repnz
sbb
xor
xor
movsl
pop
and
stc
loop
and
cli
adc
lods
rcl
je
lock
mov
repnz
inc
jno
inc
sbb
mov
and
dec
mov
ret
mov
fsubr
adc
lahf
ljmp
jp
insb
push
pop
fs
movsb
push
sub
lods
jns
or
fisttpl
xchg
insl
aas
or
int3
je
pop
inc
testl
sbb
fcoms
mov
mov
loopne
cmp
aaa
insb
fidivrs
dec
lret
pushf
mov
lahf
or
popa
xchg
jns
push
insl
pusha
outsl
pop
pop
loope
gs
imul
xchg
dec
pop
stc
loopne
mov
or
mov
loop
popa
push
xor
xchg
call
mov
xchg
push
aad
jmp
jg
push
push
cmp
cwtl
jmp
and
jmp
out
push
stc
ret
mov
dec
push
fs
test
stc
inc
mov
aam
aam
pop
xchg
bound
and
lods
dec
aad
xchg
jge
in
jecxz
insl
ljmp
int
jae
xor
rcr
sub
popf
jge
es
mov
out
and
xchg
lds
shlb
stos
ret
xor
into
add
lret
cmpb
pop
sbb
xchg
mov
stc
adc
lret
test
add
xor
pop
inc
dec
stos
bound
xchg
xchg
sub
lds
dec
gs
jge
push
sbb
mov
outsl
push
mov
in
pop
and
notb
jae
dec
andb
fisttpl
out
aas
loope
fsubr
mov
out
adc
jl
pusha
cmp
dec
call
push
rolb
xor
je
insl
jno
lods
bound
add
loop
inc
clc
cld
movsb
stc
mov
sub
mov
push
fisttpl
icebp
sub
scas
xor
jnp
mov
push
cmpsl
jnp
lea
cwtl
xchg
pop
outsb
stos
pusha
pushf
enter
lret
lock
sbb
out
mov
inc
or
das
sbb
sbb
popa
repz
push
mov
pop
std
popa
filds
dec
xlat
push
add
stos
movsb
imul
dec
and
mov
and
cmp
rclb
mov
cmp
cmp
push
jmp
std
pop
ret
in
pop
sahf
push
repz
or
push
shl
cmpsl
sahf
push
mov
out
das
fstpl
rol
add
sub
es
push
jae
imul
adc
leave
fnstsw
adc
dec
inc
rcrb
push
call
lods
adcl
jg
adc
movsb
ds
scas
add
jno
cmpsl
xor
cmpsb
or
cmp
sub
scas
in
dec
lock
mov
mov
pop
daa
decb
stc
gs
sub
push
cmp
in
nop
pusha
rclb
movsb
incb
push
fildll
lea
imulb
sbb
pop
sbb
dec
xlat
mov
dec
in
cmc
rorl
inc
rcll
mov
dec
push
push
jne
jae
fldt
pushf
stos
cmp
lcall
add
nop
rcll
scas
cmp
sbb
fwait
inc
lea
cmp
in
inc
std
adc
cmp
lahf
mov
lds
scas
push
push
lods
daa
sarl
jo
loopne
stos
pop
ret
push
pop
mov
dec
scas
pop
adc
cs
jb
rcll
pop
jne
insb
adc
dec
cmc
xor
cmc
xor
inc
outsb
repz
mov
fcmovbe
ljmp
pop
in
arpl
xchg
mov
lock
xchg
cs
or
mov
std
mov
cmp
ljmp
int3
push
in
jge
mov
arpl
dec
in
push
daa
push
jmp
add
gs
mov
test
movsb
adc
arpl
mov
out
ret
or
add
xor
pop
fsubl
jb
xor
popf
dec
aad
and
cmp
ds
stos
jp,pn
int3
cmp
roll
shl
sarl
push
insl
sarb
push
jbe
aaa
mov
push
xchg
iret
mov
add
stos
test
sub
lcall
xchg
enter
lds
in
in
sbb
stc
lret
mov
jmp
push
sub
mov
xchg
arpl
jmp
xchg
dec
or
enter
sbb
dec
movsl
lret
push
sbb
nop
sub
push
mov
aas
movsl
fdivl
sbb
mov
jg
push
lock
jbe
mov
xor
iret
mov
mov
aam
clc
scas
sbb
add
mov
xor
stos
jge
rcrl
jge
jns
addr16
repz
lret
push
out
push
pushf
cmp
add
das
xchg
repz
cld
cmp
insb
ret
insb
add
mov
xchg
hlt
jno
rorb
call
aad
adc
hlt
adc
fldl
push
aad
mov
ss
sahf
xchg
push
ss
jnp
push
jno
loop
and
shlb
xchg
dec
push
bound
mov
mov
mov
dec
shll
out
xor
or
cwtl
mov
jmp
push
mov
xchg
and
ljmp
cmp
inc
cld
mov
in
out
pop
bnd
jmp
inc
rorb
mov
mov
mov
push
or
arpl
and
call
jmp
jns
gs
outsb
das
int
cltd
push
adc
add
dec
push
sbbl
inc
leave
outsb
cmp
xor
adc
pusha
divb
and
rclb
or
test
testl
jb
repnz
mov
adc
jg
inc
enter
fwait
jae
stos
inc
rcll
sub
push
dec
add
call
xor
and
sbb
call
jbe
je
xchg
orb
std
adc
jnp
stc
and
out
cwtl
dec
adc
pop
dec
sub
xor
inc
out
test
fsubrp
pop
insl
push
inc
aad
fsubrs
jl
mov
adc
cmc
test
push
xchg
loopne
sub
orb
into
shll
rcrl
repnz
dec
sub
cmc
std
and
insl
ficomps
pop
lret
je
cmc
lcall
jle
cmpsb
movsl
ret
lret
pop
dec
shll
mov
test
and
test
xchg
test
mov
or
jae
test
pushf
andb
mov
mov
jl
stos
pushf
iret
movsl
sub
add
loope
and
sbb
bound
mov
pop
xor
pusha
ret
pop
or
xor
addr16
in
jne
jg
pop
dec
mov
cmp
test
dec
cld
jae
mov
inc
mov
inc
xor
lods
mov
aas
push
jb
adc
jbe
arpl
ljmp
xchg
mulb
jmp
cmp
mov
sbb
xchg
sti
test
pop
adc
dec
in
jmp
ds
adc
sub
repz
cli
adcl
adc
loop
xchg
sbb
out
jne
pop
mov
gs
sbb
xor
ds
push
sarl
or
mov
addr16
fwait
cmp
adc
push
leave
fisubrl
jns
pop
dec
insb
sub
pushl
outsb
cmp
loopne
fmul
je
inc
pop
into
ret
nop
xlat
test
mov
adc
aad
mov
lods
shr
in
mov
cld
cli
test
add
jp
push
faddl
adc
fnstenv
mov
or
movsb
clc
adc
call
mov
jmp
mov
xor
xlat
jno
cmpsl
ljmp
mov
or
dec
aam
icebp
aas
sbb
lret
mov
inc
mov
xorb
cltd
orb
mov
jmp
adc
adc
mov
ja
nop
inc
xor
and
popf
cmp
popa
ficoms
jns
iret
and
nop
movsb
cmp
ret
ficoms
ds
leave
or
mov
inc
or
mov
push
jne
cmp
pop
stos
inc
iret
loop
outsb
cmp
fisubrl
mov
test
jp
les
dec
aas
leave
mov
mov
js
nop
fsubl
iret
xor
outsb
sbb
addr16
push
jo
jnp
mov
cmp
stos
sbb
bound
fwait
popa
mov
xor
leave
or
and
fstp
dec
mov
cmp
mov
movsb
inc
test
sahf
inc
push
dec
fldt
add
int
bound
dec
ds
dec
movsb
imul
cmpsb
mov
mov
in
jne
jecxz
mov
cwtl
mov
jnp
out
leave
mov
pop
cmp
mov
dec
cli
xchg
jl
pushf
test
dec
pop
ret
mov
in
fdivrl
mov
dec
stos
or
or
es
lds
push
mov
pop
xlat
add
or
jmp
mov
xor
cmp
sub
inc
and
xchg
jmp
dec
popf
inc
jne
or
xor
nop
push
pop
adc
nop
jmp
cmc
sti
rcll
fdivs
cmp
cmp
das
test
test
sti
sub
int3
jle
mov
push
pop
lods
push
mov
or
and
mov
iret
push
and
mov
cmp
adc
lea
imul
gs
mov
std
jl
or
movsl
shlb
mov
mov
adc
mov
ss
push
hlt
cwtl
cmpsb
rcrb
imulb
adc
jnp
enter
push
sub
shl
cltd
cmp
add
aam
adc
sub
pop
cmpsl
in
cmp
cmpsl
rcrb
sarb
mov
push
pop
ret
inc
enter
movl
xchg
push
in
xchg
mov
inc
cwtl
pop
cmp
cli
dec
orb
cltd
push
dec
je
jns
gs
jecxz
jmp
push
leave
cli
sbb
pop
cmp
xor
push
imul
push
in
sbb
adc
into
inc
cwtl
sbb
repz
jb
cmp
nop
mov
pop
gs
pop
mov
stos
hlt
mov
addr16
clc
sbb
sbb
pop
push
insl
xchg
cmpsb
adc
mov
or
outsl
xchg
mov
inc
cli
lahf
inc
aad
dec
in
lret
jbe
stc
inc
int
jo
cmp
sbb
xchg
daa
push
mov
jb
sbb
lods
fsubs
dec
rcr
lods
ret
nop
pop
data16
iret
test
cmpsl
jg
stos
mov
xchg
aaa
addr16
and
add
clc
mov
int
dec
mov
aad
movsb
adcb
shrl
adc
cwtl
adc
mov
lea
xchg
xchg
enter
xor
sub
mov
jae
inc
inc
leave
rcrb
xchg
cmp
repnz
cli
inc
addps
dec
aaa
ds
arpl
inc
es
out
mov
movsb
dec
rclb
inc
push
int3
enter
mov
sar
xchg
push
adc
sbb
xchg
dec
add
xchg
dec
lea
xchg
hlt
push
aad
mov
jae
push
aaa
arpl
jbe
test
mov
nop
push
stos
aad
pop
adc
pop
call
mov
inc
jns
inc
lahf
testl
clc
sbb
fs
mov
lods
nop
out
dec
test
jl
pop
dec
and
push
lcall
hlt
cmp
bound
and
xchg
cwtl
sahf
or
rcll
in
adc
in
mov
add
ljmp
jmp
out
cmp
jnp
xor
insb
repz
pop
pop
in
mov
hlt
ret
mov
jnp
sub
adc
lods
aam
mov
mov
sbb
push
mov
insb
jns
lods
fcompl
gs
or
jne
aad
insl
cmp
mov
pop
jns
mov
out
cli
adc
xor
jp
push
pop
lods
jp
test
in
fs
jbe
out
jne
in
pop
aaa
jmp
repnz
xor
cwtl
iret
cs
clc
into
std
mov
icebp
dec
sub
out
mov
or
cmp
jecxz
mov
rorl
mov
call
inc
ljmp
stos
pop
jnp,pt
das
arpl
lock
fmul
jecxz
cli
xchg
push
mov
movsb
cmp
imul
hlt
sbb
loop
hlt
pop
sub
imul
jl
or
xchg
lods
jecxz
arpl
and
icebp
jae
cwtl
clc
mov
ds
out
lret
pop
pop
aaa
xchg
fcoml
lea
inc
inc
xchg
out
loopne
rclb
adc
inc
sbb
mov
pop
cmp
outsb
cli
xor
lds
in
jmp
pop
cmp
cmp
adc
jecxz
jbe
jmp
sbb
xchg
or
xchg
mov
jmp
dec
fdivr
fwait
int
loop
adcl
iret
fs
mov
movsl
jp
pop
push
sub
adc
and
mov
jns
xor
fwait
add
mov
fdivp
jne
adc
in
jae
js
das
or
xchg
mov
repz
pop
xchg
xlat
inc
out
sti
mov
mov
mov
out
cmc
ja
jno
mov
lret
cmp
mov
ja
xchg
fsubr
mov
jmp
cmp
sbb
pop
ret
lret
push
lcall
sbb
repz
sub
mov
dec
inc
xor
repz
push
testl
ja
stc
sbb
push
hlt
iret
add
popa
fs
shl
jbe
aaa
pop
pop
pop
mov
xchg
mov
push
test
popl
lahf
lahf
cld
mov
inc
std
sbb
outsl
cmp
mov
stc
push
xorps
hlt
scas
fcompl
mov
pop
aaa
fdivp
mov
mov
out
aad
xchg
fsub
fcompl
idiv
jae
lods
sahf
movb
aam
clc
jl
cmpsl
int
jge
mov
je
call
out
frstor
jp
daa
lahf
cli
sub
into
ja
mov
mov
lock
cmpl
fcompl
test
push
les
shll
dec
ss
cli
je
das
fwait
jns
dec
insl
jbe
dec
insb
adc
fiaddl
clc
enter
jbe
add
in
pop
xchg
test
jne
ja
add
push
jmp
or
std
outsb
aaa
mov
hlt
pop
push
jecxz
cmp
jae
insl
into
inc
xchg
inc
dec
lods
ret
push
xorl
mov
popf
inc
mov
ret
hlt
xor
xchg
mov
push
fists
icebp
sarl
mov
pop
cmp
xchg
aas
lcall
sbb
out
mov
mov
insb
testb
xchg
out
add
iret
push
jg
sub
push
addr16
lret
in
adc
jl
jne
pop
or
shlb
mov
leave
pop
xor
mov
xlat
and
popa
test
pop
imul
out
stc
repz
adc
int3
out
adc
iret
fadds
clc
xchg
cmp
jmp
push
and
push
pop
push
mov
insb
push
lret
shll
pop
mov
adc
sub
decb
arpl
dec
jl
mov
shll
and
pusha
data16
jbe
lods
in
repnz
shll
ja
jno
packsswb
stos
push
or
mov
and
xor
fwait
xor
push
in
imul
fs
lret
xor
mov
sahf
sbb
test
jo
nopl
fisttpll
fisttps
mov
dec
cmpsl
loop
les
xor
into
push
loope
sahf
ds
xchg
stos
dec
imul
scas
mov
adc
icebp
push
xor
stc
pop
jmp
out
je
int
jg
mov
gs
movsl
xchg
cmp
mov
in
mov
cmp
add
push
push
inc
push
sbb
cmp
das
xchg
cmp
js
loopne
cmpsl
inc
dec
aaa
lret
mov
inc
jp
pop
mov
fcmovne
xchg
xor
or
jmp
lods
xor
imul
sub
jecxz
jnp
cmpsb
mov
push
xor
cmpsb
push
or
nop
xchg
mov
mov
jge
jne
pushf
xchg
test
sub
xor
icebp
imul
lahf
sarb
es
repnz
jb
inc
gs
xlat
mov
xchg
clc
mov
imul
pop
repz
sub
inc
pcmpgtb
inc
sbb
dec
daa
pop
add
lods
sbbl
mov
mov
repnz
mov
gs
jo
xchg
adc
jecxz
cmp
push
push
cmp
sti
test
push
xor
das
stc
push
popa
push
push
bound
sub
iret
or
sti
mov
jle
loopne
insb
cmc
lcall
test
xchg
shrb
adc
mov
xor
mov
jp
sbb
out
jb
lds
mov
pop
or
jno
in
popf
std
mov
adc
scas
cmpsl
mov
call
mov
loope
push
and
loop
test
xchg
adc
imul
in
sub
push
pushf
leave
into
shll
insb
mov
sub
int
out
mov
mov
jle
sub
xor
adc
decb
lret
dec
mov
sbb
orl
xchg
shlb
pop
jae
lods
push
out
push
jb
and
das
dec
push
int3
rcl
jo
int3
add
inc
mov
jl
jecxz
xchg
roll
rcr
dec
push
sbbl
jo
sbb
push
inc
mov
push
cltd
inc
test
inc
lret
jns
addr16
ds
push
mov
sti
push
out
outsl
or
jne
mov
cld
and
mov
pushl
sub
sti
scas
mov
movsb
xchg
jle
dec
dec
push
sbb
jecxz
mov
out
mov
ss
ret
dec
movsl
or
fdivrl
insl
xor
jno
incb
cld
clc
in
shrb
cmp
xchg
shrb
shll
jp
adc
or
popf
inc
pop
movsb
push
rcrb
loope
sub
mov
cmpsb
sti
mov
cld
or
je
pop
pop
mov
mov
mov
xchg
and
adc
test
pop
xor
jge
sub
jmp
push
insl
or
fildl
xchg
fimuls
cwtl
imul
test
jae
aaa
dec
cli
dec
or
leave
mov
test
mov
cmp
pop
daa
inc
sbb
pop
add
mov
or
clc
add
jl
in
lret
rclb
outsb
xchg
cwtl
orb
xchg
mov
push
repz
mov
mov
xorb
std
mov
mov
incl
mov
jbe
jecxz
insb
add
inc
shrl
subl
push
arpl
xor
fwait
xor
mov
test
in
pusha
pusha
and
cli
vpaddq
sub
jne
lcall
xor
or
sub
shll
add
pop
mov
adc
sub
mov
jp
pop
mov
ret
pop
mov
inc
dec
xor
outsb
neg
inc
jle
cmp
rolb
bswap
pop
or
and
cmp
inc
adc
sbb
jl
fcomip
in
mov
in
incl
pop
mov
jmp
iret
mov
push
fisubl
pusha
rclb
dec
push
fists
push
loop
mov
mov
loope
repz
dec
scas
pop
sub
mov
jb
cmc
push
cld
sbb
adc
ror
xchg
or
mov
xchg
push
mov
lcall
in
xor
push
xor
mov
xchg
mov
inc
js
cmp
jo
dec
stc
mov
mov
outsl
inc
rcr
rclw
daa
rolb
int3
mov
pop
rcr
mov
imul
sub
jp
pusha
nop
int
jns
loope
xchg
cmp
sbb
xchg
mov
sbb
or
pop
fcom
ja
popa
adc
xchg
repz
jno
pop
pop
out
and
mov
sub
dec
loop
enter
push
outsb
xchg
out
sub
mov
pop
in
inc
fsubrp
push
pusha
movsl
shrb
dec
test
push
ret
push
push
stos
jbe
sbb
rorl
adc
sbb
xchg
in
push
lods
xchg
xor
jle
dec
icebp
movups
cmp
xor
leave
fsubp
adcb
xchg
inc
adc
inc
lds
mov
je
in
repz
add
mov
gs
mov
mov
and
test
push
push
aaa
mov
dec
mov
xchg
lea
mov
je
out
jg
das
and
jecxz
sub
outsl
lea
rep
add
hlt
adcl
adc
jl
pop
loop
or
mov
cmp
xchg
pop
sub
lret
repnz
ss
ds
insl
dec
lods
mov
aas
inc
in
aam
cli
jnp
ja
or
add
xchg
popl
mov
cltd
ds
pop
pop
cmp
inc
adc
or
fwait
or
mov
and
lods
mov
cld
imul
int
imul
xlat
fstl
mov
insl
scas
ret
adc
jno
push
mov
pop
pop
ret
fs
insb
mov
int3
xchg
pop
xchg
aas
adcb
out
inc
push
mov
loopne
cld
mov
mov
pop
sbb
loop
mov
sbb
into
stc
mov
pusha
int3
jl
ret
mov
push
adc
lcall
sub
pop
rclb
xchg
xchg
lret
cld
ds
scas
daa
adc
aaa
call
or
insb
fucomi
jecxz
sbb
pop
jecxz
in
popf
fldcw
daa
xchg
cs
sti
or
lret
scas
mov
xor
mov
iret
xchg
jnp
ret
push
cmpsl
aam
mov
into
sbb
pop
push
pop
pop
push
and
outsb
sub
sahf
cmpsb
ja
pop
mov
in
and
xchg
mov
les
mov
aam
and
ret
or
jno
mov
out
jge
aam
cs
loop
popa
pop
xor
jmp
push
jmp
sub
and
ja
or
icebp
leave
cld
push
pushf
add
adc
xchg
loope
xchg
xor
dec
mov
shrb
pop
cmp
xlat
push
imul
lret
test
pop
jl
xchg
stos
mov
aas
pusha
or
xchg
pop
mov
and
aaa
dec
out
dec
aaa
aad
sbb
xchg
outsl
ss
test
sbb
lods
jmp
dec
mov
jp,pn
inc
into
sbb
adc
fisubrl
inc
or
mov
push
cmp
stc
js
push
shr
push
mov
sub
sbb
sbb
hlt
jecxz
sub
aaa
fs
cmp
shrb
pop
mov
cld
mov
mov
imul
push
sub
in
adc
mov
adc
jno
mov
push
mov
add
leave
inc
jge
ret
mov
cs
lods
xchg
mov
shlb
mov
popf
cmpsl
push
push
lods
data16
rol
xchg
rdpmc
push
jmp
jge
mov
int
orl
aad
mov
loopne
inc
daa
xor
lods
lods
mov
add
ret
out
into
dec
fists
mov
add
or
pop
mov
jp
shll
loop
sub
pop
addr16
pop
pop
mov
addr16
ljmp
shl
mov
xchg
imul
bound
rorb
cmp
iret
mov
add
imul
leave
stos
mov
test
xchg
and
inc
int
aas
out
es
es
ret
add
lahf
cmp
or
ss
loopne
arpl
je
cmc
lods
pop
inc
inc
lea
mov
push
addl
mov
and
fisubl
test
movsl
jmp
mov
in
lock
dec
xchg
xlat
mov
push
push
lea
cmp
sbb
in
add
cmpsb
clc
rol
or
pop
movd
jle
jo
sub
or
pop
mov
inc
scas
mov
clc
outsl
lea
push
sbbl
fsubs
ja
dec
xlat
add
and
mov
dec
pop
mov
push
dec
inc
or
daa
das
das
cs
jle
jle
jns
pop
xor
cmp
pop
inc
daa
mov
dec
lcall
scas
addr16
std
lods
mov
mov
push
cmp
adc
jns
enter
sahf
popa
mov
into
mov
cld
xor
pop
das
cmp
lea
push
in
lret
insb
push
loope
fnstcw
adc
pop
lds
ss
xchg
push
bound
lods
ss
pop
jecxz
fisubrs
cmp
mov
sbb
mov
push
mov
push
dec
dec
bound
sub
cltd
into
xor
icebp
push
push
imul
jl
pop
mov
jmp
mov
roll
and
mov
mov
loopne
inc
mov
aad
mov
test
pop
pop
mov
les
cmc
notb
call
outsb
or
fcomip
inc
nop
stos
pop
add
xchg
loopne
shll
out
add
std
and
mov
les
popf
mov
adcl
xor
sub
sbb
ret
mov
in
data16
fdivl
iret
mov
xlat
jae
lods
aaa
test
enter
cmp
jo
cmp
and
in
jl,pn
sub
xchg
fisubrs
repnz
les
pop
clc
mov
je
mov
stos
push
gs
jg
fdivrl
inc
call
jb
lds
pop
push
xor
adc
xorb
push
mov
cld
dec
shr
aad
adc
sbb
out
stos
aam
inc
xchg
and
mov
das
mov
jmp
inc
add
push
xchg
mov
mov
maxps
xor
mov
adc
jbe
xor
leave
or
pusha
daa
jbe
adc
jae
mov
movsb
adc
imul
or
cmpsl
mov
loop
mov
mov
imul
push
cld
mov
xchg
loopne
cmc
and
push
inc
insb
mov
and
std
les
cmp
cs
xchg
scas
mov
aam
jne
mov
mov
and
popa
iret
test
xchg
dec
push
xchg
mov
fs
pusha
and
mov
daa
lods
cmpsb
sbb
cmp
pusha
mov
pop
add
inc
int
xor
arpl
mov
xchg
sbb
lods
test
scas
mov
scas
test
popf
es
xchg
push
insl
nop
aam
sub
out
ja
fadd
jne
push
clc
movsb
bound
cld
fwait
aad
test
mov
pop
pushf
sbb
mov
int3
xchg
pusha
out
repnz
xor
cmp
jl
inc
add
and
sbb
imul
mov
lret
in
loopne
mov
jp
fstpl
arpl
sub
mov
push
and
adc
jmp
imul
addr16
leave
stos
lahf
jns
jbe
mov
or
xchg
sahf
xchg
ljmp
fdivrl
mov
sar
mov
sbb
data16
mov
xchg
xorl
ljmp
pushf
dec
jle
xchg
dec
scas
jg
push
test
lcall
push
pop
lret
xchg
or
and
cwtl
mov
pushf
je
cmp
xchg
mov
jmp
cld
sub
jnp
mov
outsl
gs
repnz
xor
stos
test
idivl
in
mov
inc
mov
or
loop
xchg
adc
lahf
or
and
push
inc
jle
push
rclb
sbb
cmp
cwtl
lret
xchg
call
out
out
sar
sarl
test
inc
fimuls
sub
shll
mov
shll
xchg
dec
fwait
or
adc
call
sbb
inc
and
push
inc
and
stc
pop
les
test
fwait
sub
xchg
mov
adc
add
and
sbb
add
add
and
cld
movsb
std
sahf
ret
push
jb
pop
sbb
subl
xor
pop
pop
test
movups
inc
mov
loop
addr16
mov
mov
stc
inc
stc
or
scas
insl
cmp
push
mov
inc
fdivr
and
mov
nop
fwait
popf
test
cwtl
test
out
int
in
xchg
leave
and
add
inc
mov
mov
push
test
dec
mov
or
mov
push
inc
movsl
inc
push
jo
sub
mov
sbb
ss
mov
in
jne
xor
insl
aad
or
push
pop
and
add
xchg
lods
mov
ret
pop
adc
inc
dec
dec
fistpll
jnp
sti
mov
fsubrl
fstpt
xchg
and
out
mov
and
or
or
cmp
xorl
mov
lea
test
push
sbb
adc
mov
or
xor
sbb
nop
les
outsb
sbb
jae
cld
cmp
xchg
mov
int3
sbb
mov
jb
jl
jmp
sub
lahf
leave
inc
cmpsl
mov
popa
pop
hlt
cmp
cmp
push
jmp
push
dec
repz
imul
incl
cmpsl
movsl
push
enter
adcl
xchg
sbb
stos
arpl
cmp
scas
mov
imul
imul
imul
xor
dec
or
lea
cld
arpl
stos
dec
shrl
outsl
xlat
ja
add
icebp
mov
inc
inc
sbb
dec
mov
insb
adc
ret
je
pop
imulb
jecxz
mov
pop
lds
or
mov
xchg
movsl
push
rol
add
jnp
sbb
jns
arpl
pushf
pop
lea
push
fwait
pushf
mov
sbb
mov
aas
out
clc
lret
cmp
push
popa
jg
addr16
mov
fsubl
in
shlb
xor
test
cmc
sbb
jle
subl
lds
ret
mov
insb
xchg
daa
xlat
mov
ljmp
cwtl
jne
xchg
push
cmpsl
mov
adc
lds
nop
push
xor
jg
ljmp
dec
jle
cmp
push
scas
jns
fs
push
mov
pusha
mov
xchg
daa
fisubl
mov
mov
fdivl
cmp
lods
adc
cmp
notl
mov
loope
mov
mov
fisubl
nop
rorl
daa
dec
sbb
or
xchg
mov
inc
jb
pusha
rorb
push
mov
lods
pop
and
ljmp
push
repz
adc
and
mov
out
arpl
push
adc
xor
jno
mov
mov
imul
sub
int
mov
inc
mov
mov
int
jo
ds
lock
iret
xor
movsb
inc
mov
lea
cmp
mov
sbbl
jge
adc
push
repz
jge
ret
jb
loope
cmp
rorl
xlat
mov
rcrl
jae
push
sbbl
test
test
pop
inc
inc
mov
dec
hlt
rcl
loop
sbb
sub
xor
loopne
sub
filds
mov
adc
jle
fdivs
mov
dec
inc
mov
sub
push
inc
sbb
es
mov
xor
fwait
mov
push
xchg
sub
insb
rcr
mov
lcall
aas
xchg
aas
and
addr16
out
fdivrs
jo
andl
or
adc
rolb
movsb
pop
xlat
test
inc
sub
sbb
or
jne
outsl
adc
ret
sbb
cs
xor
imul
int3
imul
cmp
adc
adc
cmpsl
adc
mov
mov
sbb
leave
dec
xlat
in
mov
mov
out
sbb
rorl
mov
mov
jo
ljmp
in
inc
add
inc
mov
insl
xor
jle
sub
sbb
scas
lods
mov
mov
ds
test
add
pop
xor
add
pop
shl
aam
sub
mov
jns
adcb
push
sub
pop
cld
test
jo
mov
pop
sub
in
add
js
icebp
inc
mov
jge
pop
ja
mov
or
dec
cli
rcll
negb
and
cmp
fldt
aas
test
aad
jge
jle
dec
or
dec
loop
adc
push
pop
or
lret
and
sti
add
sub
ss
lock
or
adc
cmpsl
jmp
inc
fstpl
jne
in
cmpsb
rsm
cli
imul
jge
mov
lret
fidivl
ret
test
cmc
xor
je
rcrl
sbb
aad
aam
pop
shlb
dec
pop
mov
bound
dec
lods
sub
pop
dec
push
inc
jne
mov
xlat
cltd
and
or
call
add
jecxz
mov
popa
sub
popf
shlb
push
js
call
xor
in
mov
cmp
paddusb
cmp
add
ja
adc
fucomp
scas
push
sbb
mov
ds
out
push
xchg
and
js
lret
pop
mov
adc
push
xchg
pop
mov
jbe
lret
mov
jno
lret
ret
sub
xchg
popl
dec
xchg
nop
xchg
jl
cmp
jl
loopne
jnp
xchg
aas
push
in
pushf
mov
cli
sbb
jge
push
or
dec
mov
ret
cmpsl
pop
outsl
test
call
and
clc
out
mov
pop
insl
jno
jge
or
arpl
sti
jle
stos
pop
xor
inc
aad
add
call
iret
adc
cmpsb
pop
push
arpl
movl
ja
popa
subl
mov
xor
xchg
jle
dec
add
sub
enter
call
sbb
xor
inc
fimull
lock
cmp
mov
pop
imul
fidivrl
repnz
sub
pushf
test
and
pop
movsb
in
jbe
js
push
fmulp
mov
push
push
outsl
xchg
mov
test
sub
stos
mov
mov
jmp
cli
cmp
out
mov
push
pop
stos
dec
call
pop
mov
sahf
cmp
data16
xchg
in
push
push
push
mov
arpl
push
sahf
test
out
xor
sahf
aas
js
cmpsb
clc
xor
shlb
cmp
add
les
xchg
mov
fadds
mov
loope
pop
stos
push
outsl
fimull
negl
stc
push
push
fildll
daa
mov
stos
arpl
push
adc
mov
lcall
mov
test
mov
sub
pushf
xlat
lods
dec
mul
es
popf
dec
stos
cmp
push
cmp
xor
cmpsl
popa
nop
scas
dec
leave
outsl
pop
xor
test
ljmp
sub
cmpsb
filds
punpcklbw
aaa
lock
fistpl
push
inc
xchg
sub
leave
mov
loopne
jge
pop
sti
fs
data16
push
jb
xchg
in
or
fildl
cmpsl
rorl
and
insb
fwait
rcrl
jmp
repz
dec
shrb
mov
jmp
insl
sbb
inc
imul
out
addr16
aaa
cwtl
sbb
fnstsw
pop
cltd
pop
les
jo
push
out
orb
out
call
push
adc
cmp
jecxz
push
cmp
shll
cli
lods
sbb
cmc
and
mov
mov
arpl
cs
and
xchg
mov
rorb
fadd
mov
inc
call
stc
lcall
or
pusha
into
push
add
js
jno
aad
push
sub
jmp
jae
insb
dec
ds
jae
inc
das
pushf
cmc
cmc
dec
or
xor
imul
add
sbbb
clc
xchg
dec
mov
int3
pop
jp
pop
out
ljmp
jp
cmp
aas
and
inc
sahf
icebp
testb
stc
adcl
icebp
repnz
dec
pusha
cmp
lret
inc
pop
mov
mov
lret
jo
or
sub
jg
jnp
push
cld
mov
pop
daa
pop
xchg
push
pushl
scas
movsl
push
dec
ljmp
mov
lcall
jp
popa
xor
data16
call
pop
and
popf
jmp
sub
fdivl
push
cmp
inc
mov
add
mov
and
fs
cltd
ja
cmp
pop
and
out
mov
xchg
jle
jo
jmp
push
ret
mov
xchg
aas
and
mov
arpl
je
jmp
fldenv
jmp
push
cmp
mov
imul
movsl
mov
inc
clc
insb
jp
sbb
loop
dec
jb
and
sbb
les
nop
cmp
test
add
testl
push
shlb
or
xor
test
rcll
insl
pop
sbb
mov
out
adc
fldl
idivl
push
xchg
mov
inc
xchg
cmpsb
adc
mov
dec
dec
xchg
jp
and
pop
cmp
mov
xor
aaa
push
icebp
xor
cmp
leave
sbb
push
pop
loope
adc
sub
in
dec
adc
mov
mov
clc
add
roll
or
xchg
ss
pop
mov
or
repnz
mov
sbb
cld
stos
push
loope
add
faddl
es
int3
das
dec
push
nop
cmp
dec
loope
subl
lods
push
add
fisttps
repnz
imul
pop
in
or
jo
movsb
mov
paddsb
adc
roll
sub
popa
mov
movsb
pop
push
cmp
pop
mov
pushf
mov
cmp
pushf
out
popa
iret
push
imul
testl
xchg
imul
sub
pop
cmp
pop
shl
arpl
lret
lds
stos
mov
lahf
xchg
jno
cmp
pop
mov
push
lods
pop
rcll
inc
loop
add
mov
jl
cli
sbb
not
adc
in
add
jnp
mov
add
add
arpl
push
add
leave
test
ljmp
sbb
fwait
mov
and
sbb
xchg
roll
jbe
dec
loopne
jmp
enter
jne
inc
or
lahf
push
mov
xor
in
xlat
mov
push
mov
nop
inc
push
inc
in
shl
mov
cmp
in
add
sarl
shl
lahf
xchg
popf
lds
or
stos
imul
pop
ss
daa
xor
and
mov
loope
out
sub
js
test
pushl
xor
or
inc
int3
xchg
mov
lods
jo
pusha
sarb
cli
xchg
mov
icebp
orl
scas
sbb
and
cmp
sbbl
nopl
out
scas
push
data16
jae
mov
jns
add
push
aaa
xchg
data16
jnp
add
mov
scas
sysret
push
and
xor
enterw
lea
cmpsl
shrl
push
xlat
in
icebp
lcall
xor
fldenv
pop
out
cmpb
jp
sub
pushf
repz
in
add
sahf
cmp
ljmp
dec
rorl
sbb
sub
montmul
cmpsb
inc
mov
or
enter
cmpsl
movsb
jne
add
pop
xchg
repnz
sbb
stc
sarb
fucomp
sbb
push
sub
scas
push
xchg
out
mov
cld
jo
sbb
add
jbe
cmovnp
loop
andl
jb
cmc
pop
xchg
idiv
push
js
fistl
push
push
or
fildll
jno
in
cs
mov
les
cld
mov
in
mov
and
add
subl
mov
jne
xchg
jl
enter
jmp
scas
xchg
cld
je
sbb
test
jp
adc
popa
ficoml
mov
repz
movsl
mov
push
pusha
xor
jecxz
mov
mov
lea
pushf
or
jl
fistpll
xchg
jnp
call
ret
ficompl
push
test
js
add
push
loope
jmp
mov
filds
or
ds
add
nop
xchg
negl
xor
loope
scas
adc
or
int
cmc
popa
test
add
gs
mov
and
stos
in
xchg
cmpsb
pop
push
mov
jo
jp
add
std
inc
icebp
lret
push
js
ret
popf
in
mov
xor
and
std
jbe
test
punpckldq
call
pop
fwait
sahf
xor
xor
repz
lret
cmp
cmc
shr
xchg
scas
and
scas
push
push
adc
shll
jmp
push
mov
or
jbe
fidivrs
popf
mov
fs
adc
push
mov
jl
xchg
xchg
sbb
test
pop
push
lcall
cmp
inc
jne
pop
negl
sbb
add
and
lods
out
js
inc
mov
iret
sub
mov
fmul
push
jno
jmp
enter
xor
fadds
sbb
push
lods
add
and
or
dec
mov
jg
arpl
jae
xchg
daa
pop
bound
or
fisttpll
sub
test
mov
sub
add
cmp
add
jbe
mov
dec
xchg
incb
sbb
sbb
xchg
pusha
xchg
stos
add
lock
pop
ja
jge
popf
cli
mov
jns
push
adc
push
mov
sbb
or
jmp
dec
out
mov
adc
inc
inc
leave
dec
ror
clc
rcl
jae
repz
xor
sbb
std
imul
leave
dec
mov
outsl
cmp
and
out
iret
into
clc
repz
fmuls
popf
jle
jg
lods
int
popa
mov
jo
repz
cmp
outsb
pop
sahf
dec
adc
sbb
mov
in
rcrb
cmp
test
or
dec
mov
dec
push
dec
rorl
xor
mov
push
jl
ss
and
rorb
loopne
adc
dec
icebp
les
mov
movsb
js
cmp
sbbl
mov
mov
outsl
mov
dec
int3
inc
shlb
mov
out
ficoml
repnz
mov
movsb
jl
cmp
aaa
fs
sbb
test
jbe
ljmp
mov
mov
xchg
stc
movsb
je
je
outsb
or
enter
xchg
in
dec
out
out
out
cld
push
cmp
dec
inc
aam
ds
fwait
and
inc
xchg
and
dec
jecxz
repnz
loop
fs
js
cmp
sbb
sbb
ss
enter
and
mov
inc
bound
sbbl
fs
lds
loope
xlat
adc
enter
inc
jnp
aas
push
jb
mov
hlt
dec
std
add
cmp
cmpsl
and
inc
mov
inc
bound
inc
cmp
inc
loop
ljmp
and
adc
xchg
in
lret
jecxz
repnz
loop
fs
js
cmp
sbb
sbb
ss
enter
and
fstps
loop
xchg
xor
hlt
or
enter
test
and
sub
or
mov
inc
push
inc
mov
xchg
cli
movsb
jnp
cmp
call
and
imul
cltd
sbb
adc
loop
ret
aas
adc
push
inc
cmpsb
and
adc
enter
adc
inc
mov
xor
enter
xor
loop
fs
jl
ds
sbb
push
inc
mov
xchg
cli
movsb
jnp
cmp
call
and
imul
cltd
sbb
adc
loop
ret
aas
adc
push
inc
cmpsb
and
adc
enter
adc
adc
or
adc
ret
push
cmp
xor
sbb
inc
enter
repnz
mov
fstps
loop
xchg
xor
hlt
or
enter
test
and
sub
or
mov
inc
push
inc
mov
xchg
cli
movsb
jnp
cmp
and
sbbl
out
sar
daa
dec
inc
loopne
mov
les
push
adc
mov
test
repz
mov
and
test
jns
aas
add
xor
inc
adc
lea
adc
xchg
mov
pusha
inc
mov
cmp
sbb
loop
xchg
xor
hlt
or
enter
test
and
sub
or
mov
inc
push
inc
mov
xchg
cli
movsb
jnp
cmp
call
and
imul
cltd
sbb
adc
loop
ret
aas
adc
push
inc
cmpsb
and
adc
enter
in
pushf
dec
cmp
inc
movsl
fistpl
out
rcpps
xchg
clc
dec
clc
mov
clc
inc
sub
mov
call
outsb
ficoms
scas
leave
aam
add
lds
hlt
inc
add
dec
pop
add
jmp
push
test
adc
or
xchg
js
lahf
mov
jp
xchg
xor
pop
mov
cltd
lods
dec
xor
ss
lret
push
fwait
pusha
imul
ret
imul
arpl
out
or
sbb
in
sub
pushf
pop
dec
xor
in
cmp
jg
pop
cld
push
ret
cmp
ja
mov
ficomps
mov
or
mov
fiaddl
push
cld
lret
xchg
pop
sbb
loope
mov
int3
jl
je
dec
cli
inc
jb
push
or
jae
pop
aas
pushf
pop
rorb
and
jb
jge
ret
fldcw
pop
int3
xor
xor
jns
cs
test
or
addr16
pusha
xchg
shrb
add
out
xlat
inc
xchg
and
mov
add
jo
out
dec
clc
repz
loope
sub
dec
fwait
inc
or
divb
lahf
push
enter
and
aas
sub
lcall
mov
pop
call
ret
inc
lret
cs
pushf
shlb
sub
sbb
and
inc
scas
fmull
inc
loopne
xor
mov
mov
aad
ret
stos
sti
cwtl
dec
sti
xor
mov
mov
mov
clc
xchg
cmc
or
or
xchg
ficoms
ja
jg
sbb
jb
test
hlt
or
xor
nop
in
xor
jmp
and
mov
jb
and
xor
nop
inc
lock
dec
stc
inc
jbe
jbe
jl
cmp
popa
pop
xor
notl
adc
xchg
mov
dec
jmp
in
or
fs
jle
pop
adc
std
repnz
faddl
inc
in
adc
and
ret
pop
jmp
fists
out
enter
add
adc
push
test
pop
or
pushl
aas
dec
jb
stc
enter
push
aad
std
add
mov
inc
cli
dec
call
mov
cmp
leave
jge
pop
and
mov
xor
mov
hlt
xchg
jae
shll
cmpsl
xchg
push
clc
mov
push
mov
sbb
imul
sub
dec
rcll
jo
rcll
loope
mov
loope
mov
and
repz
cmp
repnz
int3
push
push
into
psubb
add
insb
mov
mov
bound
movsb
mov
sti
aam
sahf
jmp
push
int3
js
hlt
or
cmc
mov
in
dec
je
bound
jbe
adc
cmpsl
dec
dec
cmc
dec
arpl
xor
scas
dec
std
and
mov
scas
lahf
mov
out
pop
ficoms
dec
outsl
push
ret
add
inc
aas
inc
xchg
mov
push
xchg
lcall
fucomp
jnp
mov
aaa
hlt
xchg
icebp
pop
adc
dec
out
aas
mov
movsl
xchg
test
mov
mov
ja
cltd
repnz
xor
mov
sti
lret
xor
cmp
push
insb
hlt
mov
xchg
clc
lahf
ficoms
ss
ss
lahf
mov
call
call
fsub
adc
cmpsl
imul
fstpt
cld
xchg
repz
or
xchg
lret
cld
scas
out
sub
nop
sbb
fwait
cli
jmp
lcall
sbb
mov
mov
shl
adc
adc
into
dec
sti
imul
lahf
popf
fadds
popa
and
ds
mov
and
jb
xor
xchg
lcall
bound
jg
pop
ret
mov
imul
sbb
es
xor
mov
shll
movsb
push
test
dec
fcmovbe
push
push
daa
cmpsb
cld
jns
lahf
pop
mov
cli
push
les
push
gs
push
and
popa
mov
in
stos
sbb
xor
repz
mov
xlat
das
xor
xor
xchg
std
scas
out
sub
lods
popa
mov
jmp
xlat
arpl
pop
ficompl
pop
pop
cmp
add
inc
lcall
dec
popa
lods
pop
popa
leave
ret
pop
mov
mov
fistps
lret
nop
sti
fists
call
cltd
loop
xchg
cltd
insl
aaa
lods
cltd
sahf
ret
inc
pop
icebp
sub
pop
cmpb
lret
xor
into
iret
push
cmpsb
out
push
movaps
movsb
xor
jmp
sbb
arpl
mov
data16
subb
aas
ds
inc
jge
ljmp
in
xchg
sub
out
in
xor
repnz
xlat
jb
sbb
ret
add
repz
push
daa
out
mov
faddl
or
jl
xlat
pop
fwait
add
xor
repnz
hlt
jns
pop
jg
mov
rorl
orl
cld
aad
mov
push
lds
xlat
ja,pn
lods
mov
mov
push
pop
or
call
dec
aaa
mov
or
in
lea
popa
cmp
int
sub
ficoms
cmp
popf
push
dec
scas
cs
dec
mov
fucomi
orl
clc
sahf
lret
js
aas
aaa
clc
add
jle
dec
cmp
mov
rorb
roll
add
cmpsl
bound
sbb
fistps
into
push
jno
cld
add
adc
sub
jb
or
xchg
lock
push
xchg
subl
xchg
addr16
es
inc
es
movsl
mov
in
lret
std
and
dec
dec
pop
icebp
out
mov
mov
add
and
inc
lahf
and
loop
push
dec
dec
rolb
jns
dec
xor
push
lock
mov
mov
cld
adc
lods
repz
sub
inc
mov
cli
sub
mov
fwait
dec
call
repnz
cltd
pop
ss
bound
xlat
cmpsb
mov
cmp
cmp
ficompl
sti
sub
mov
jnp
scas
fdiv
pop
lods
fld
pop
jp
loope
jecxz
jp
aad
add
jge
scas
bound
sub
push
xor
pop
cmp
jno
jge
movswl
adc
jl
mov
xchg
mov
mov
xchg
mov
mov
inc
mov
ss
jbe
mov
lea
mov
push
mov
ss
mov
push
shr
scas
lods
ud2
and
in
add
outsl
cs
push
sbb
pop
repnz
dec
jns
sub
adc
mov
add
push
push
or
cmp
or
inc
aaa
insl
outsb
sbb
int
loop
xchg
stc
pop
loop
mov
scas
ret
mov
stc
cld
out
movsl
pop
xchg
or
xlat
push
jae,pt
xor
aam
in
scas
xchg
push
pop
or
ljmp
dec
rcl
loopne
pop
ficompl
mov
inc
or
mov
mov
xor
cmp
mov
or
pop
lret
daa
out
in
cltd
test
loopne
out
adc
dec
mulb
pusha
dec
popl
dec
out
inc
dec
rorb
jns
mov
mov
push
jge
insb
adc
mov
push
jo
cmp
jb
stos
scas
repnz
cmp
inc
nop
imul
xchg
les
inc
and
movl
scas
inc
jnp
fcomi
hlt
mov
fldt
popf
mov
sub
inc
and
rcl
sarb
ret
inc
push
xchg
shl
mov
popf
sub
sbb
mov
push
into
sbb
push
in
xchg
and
jg
ljmp
test
lret
movsl
repnz
lea
pop
cmp
mov
push
rol
mov
js
jbe
jo
jns
bound
cwtl
outsb
je
xlat
sub
scas
xchg
adcl
pop
repnz
int
jmp
imul
test
inc
fwait
fs
xor
cmp
mov
mov
jb
inc
out
xor
enter
std
cmc
addl
lret
cltd
fcmovbe
push
lods
stc
xchg
mov
cltd
scas
mov
xchg
jecxz
mov
lock
xor
mov
mov
pop
int
cmpsl
push
mov
stc
xor
push
test
sub
fdivs
repz
pop
pop
jo
mov
js
fwait
ljmp
xchg
mov
cmpsl
mov
pop
sub
enter
sbb
lret
xor
pop
xchg
xchg
jae
jbe
fsub
push
add
xor
mov
xchg
mov
lods
dec
loope
imul
jp
stc
imul
sub
sub
sbb
jmp
or
push
pop
int
lret
sub
add
mov
loope
cmp
orb
jp
push
jp
out
inc
jp
int
inc
scas
mov
mov
cmpsl
push
movsl
scas
int
or
push
xlat
into
imul
addr16
mov
clc
push
ljmp
sbb
push
test
ret
pop
scas
push
push
ds
add
adc
mov
adc
jno
clc
cmp
add
lcall
sub
rcll
xchg
mov
lock
push
les
xchg
movsl
inc
adc
ficoms
sbb
lock
aam
push
pop
push
push
call
fwait
test
or
lods
jp
xchg
xchg
jmp
orl
notb
call
test
fdivl
scas
jge
lahf
sub
sub
fisubrl
int3
sub
fwait
insl
jnp
dec
jecxz
or
sbb
pushf
xor
testl
loope
stos
jnp
lret
sub
inc
adc
pop
pop
mov
jne
nop
mov
mov
add
xor
jmp
cmp
enter
xchg
sub
rol
mov
sahf
sub
cmp
pusha
cmp
and
adc
lods
ljmp
outsl
sub
sub
fwait
idivl
or
cmp
push
mov
dec
mov
mov
movsl
push
dec
xor
in
jecxz
out
xor
xchg
fs
inc
push
out
xlat
cmp
aaa
lret
rcll
xchg
mov
imul
mov
addr16
mov
or
jb
je
adc
inc
cmpsl
or
jb
inc
fcomps
lret
int3
ds
lods
pop
xor
imulb
movsb
mov
testb
fs
sbb
fldenv
push
mov
adc
shll
ret
jecxz
dec
arpl
push
insw
inc
fnstcw
mov
ljmp
add
sbb
add
add
push
icebp
int3
fwait
test
fwait
xchg
data16
or
aam
int
push
popf
or
shlb
jge
cmpsl
jecxz
testl
adc
jnp
cltd
xlat
jp
fwait
scas
mov
lret
xchg
rcrb
cmp
inc
pop
dec
lahf
xor
sbb
cmp
shrl
push
out
stc
push
jle
cmp
dec
mov
icebp
ret
mov
mov
fs
popa
cltd
pusha
ja
xor
push
dec
jcxz
dec
inc
push
pop
clc
push
and
mov
jle
inc
sub
xchg
push
pop
es
repz
adc
mov
mov
popl
pop
daa
out
iret
push
clc
fidivl
push
xchg
xchg
or
adc
jmp
stos
aaa
mov
sbb
and
cmpb
xor
dec
outsl
cs
cmc
aaa
xchg
ficoml
add
fildll
sar
xor
add
std
cmp
push
and
lcall
pop
jl
jmp
push
dec
in
hlt
mov
jns
jne
mov
popa
or
jnp
in
pushf
mov
adc
notl
sbb
push
pop
or
cli
jge
pop
or
std
lret
xor
lea
sbb
repnz
xor
outsl
loopne
flds
xchg
cmpsb
ljmp
inc
xchg
inc
rorl
xor
xchg
sub
push
popa
shll
add
cmp
aas
cmp
and
mov
add
pop
out
or
add
idiv
xchg
mov
cwtl
pop
pusha
in
ljmp
rorb
adc
jmp
inc
push
addr16
aad
jecxz
aam
in
sub
xchg
jb
adc
shl
sub
scas
sarb
sbb
mov
push
jns
ljmp
loope
sti
cmpsb
inc
das
xor
push
and
push
es
sbb
mov
add
in
jg
push
jnp
clc
cmc
ja
mov
repz
lret
je
sti
cld
adc
out
lock
test
jge
xchg
pusha
push
popf
push
dec
aam
mov
leave
cmp
ret
aam
add
mov
sbb
in
pop
mov
mov
or
sarl
xor
in
and
inc
lods
mov
fs
pop
dec
jl
into
push
or
mov
and
xor
mulb
fcmovbe
das
or
hlt
jg
xchg
xchg
or
and
xchg
jo
cld
aas
filds
std
push
dec
shlb
lock
adcl
dec
mov
sub
jmp
shll
xor
push
xchg
xchg
daa
leave
aad
and
cld
ja
xchg
fmulp
mov
rcrb
pop
xchg
mov
add
xor
hlt
push
lock
xlat
pop
dec
test
loope
aaa
rorl
or
dec
sub
push
pop
or
icebp
mov
or
es
aas
jge
lahf
xchg
dec
pop
roll
xchg
xchg
sbb
adc
insl
jb
leave
lret
inc
fistl
cmp
dec
in
dec
and
ss
adc
cmpsl
int3
inc
xchg
outsb
push
xor
inc
mov
into
int
je
arpl
hlt
insl
out
mov
lret
sahf
and
ljmp
ja
std
push
popa
jns
xor
xor
dec
sub
cmp
jle
inc
je
jecxz
cmp
jbe
sub
mov
lods
mov
jecxz
clc
push
jp
lahf
lock
xlat
inc
or
sbb
mov
jg
mov
jne
stos
push
stos
sub
dec
je
xchg
movsl
inc
xor
mov
aam
ret
lahf
ficomps
scas
dec
jle
shrl
movsl
lcall
or
stc
dec
push
sahf
xchg
test
ja
popf
inc
pushf
or
outsb
jmp
or
jnp
add
test
shr
insl
mov
leave
sbb
adc
pop
dec
xlat
jo
sub
jle
ljmp
push
jp
cmc
jge
mov
into
fidivs
pop
loope
fwait
hlt
lret
in
inc
fmull
fstpl
and
sub
test
in
ret
sub
test
les
daa
mov
iret
gs
dec
jmp
mov
in
add
and
inc
mov
jbe
jecxz
loope
test
xchg
ret
inc
es
jl
mov
inc
jmp
pop
cmp
test
and
mov
fucom
inc
rcrl
jne
insb
xchg
rorl
das
sbb
in
ja
cmpsl
cmpsl
pop
cmp
mov
push
fdivl
lahf
and
test
cmp
movsb
cltd
lds
outsb
sbb
xchg
incl
ret
int3
jae
jge
rol
scas
or
popf
das
jo
dec
mul
mov
xchg
mov
ss
pop
in
fdivr
mov
xchg
cwtl
mov
out
mov
adc
xchg
fimull
dec
or
filds
ja
fbld
mov
addr16
frstor
and
sbb
outsb
cwtl
ret
pop
cmp
fbld
pop
or
fstpl
loope
mov
in
and
fwait
mov
or
rcr
cld
xchg
inc
inc
push
out
int
add
cmpsb
cmp
int
xchg
jg
test
mov
sub
mov
aaa
fdivr
xchg
mov
ljmp
pop
xchg
xor
xchg
and
mov
test
shl
xor
mov
out
and
sub
rcrb
pop
sub
in
mov
mov
xor
cmp
daa
in
mov
or
ffree
mov
sbb
cmpsb
sbb
mov
xlat
mov
iret
popf
dec
pop
push
jge
data16
pop
in
xor
scas
pop
mull
mov
hlt
lcall
push
fmuls
das
repz
clc
xor
jg
inc
sar
pop
mov
pop
jb
std
inc
ja
jno
int3
sub
push
xchg
xor
cwtl
xor
loop
add
aaa
fbld
test
xor
std
lahf
fdivl
int3
imul
imul
mov
sbb
pop
or
scas
stos
mov
mov
mov
push
xor
insb
cmp
sbb
imulb
scas
les
xor
jae
mov
and
mov
sti
xchg
sub
push
fmuls
cmp
jnp
mull
or
mov
sub
xor
loope
mov
aam
jge
sub
mov
bound
scas
or
in
test
les
xor
pop
jecxz
pop
rorb
clc
sub
xchg
sahf
stos
add
and
aad
pop
mov
mov
lods
in
mov
leave
mov
jnp
inc
daa
test
mov
sbb
xchg
out
imul
add
sbb
pop
jle
mov
pop
dec
aam
sub
dec
push
addr16
add
push
mov
dec
sub
cs
sbb
loope
xchg
and
jns
sbb
cs
or
hlt
inc
andl
xor
lock
clc
jb
out
inc
aas
push
add
or
or
xchg
loopne
mov
shl
push
and
ret
add
andl
lret
dec
jmp
fcompl
inc
incl
xchg
or
cmpsl
dec
mov
addl
fs
mov
mov
das
cmc
mov
lcall
int
aam
in
popf
push
aas
or
jo
add
jne
cmpsl
out
into
xorb
lods
mov
pop
xchg
jge
mov
xor
dec
je
xor
adc
insl
pop
dec
pop
movsb
mov
xchg
clc
dec
flds
arpl
inc
scas
cmp
je
inc
outsl
push
aad
push
inc
aam
sub
fwait
movsl
test
inc
fnstcw
test
test
inc
insl
cmp
dec
loop
fs
inc
xor
std
xchg
mov
nop
jg
jnp
movsl
jp
outsb
jmp
icebp
aaa
jg
aad
scas
jnp
out
inc
in
jb
neg
int3
or
cmpsl
inc
lods
mov
cmpsl
ds
loope
sbb
mov
aas
mov
shll
push
testb
cmpsb
std
mov
sub
sub
sub
pop
dec
cs
lods
jle
xchg
mov
jmp
test
cli
sbb
mov
inc
and
iret
jp
xchg
fistpl
jb
sub
hlt
ret
daa
sbb
mov
xchg
push
orl
data16
push
lods
outsl
out
test
in
faddl
pop
sbb
movsb
mov
inc
mov
out
or
iret
call
xchg
shlb
sbb
inc
icebp
lds
and
testl
loope
jb
insb
jecxz
sbb
xchg
mov
mov
stos
mov
cmp
adc
fstpl
aad
pop
outsb
sahf
test
xchg
adc
cmp
dec
mov
scas
add
fidivs
mov
je
mov
lret
ret
jns
sub
fwait
add
in
pushf
aaa
nop
push
mov
and
sub
xor
dec
jb
cmpsb
out
ret
xor
or
xchg
mov
cmp
push
inc
ret
add
lds
aaa
mov
clc
movsb
dec
cmp
aaa
pop
les
fst
and
push
rcrl
ret
jne
pop
hlt
roll
inc
inc
fstpl
loop
add
or
gs
fistl
push
fmull
or
cmp
rorl
fldcw
loop
jp
rcr
push
jle
fstpt
add
push
mov
mov
inc
lcall
jmp
popa
scas
je
movsl
pop
lods
ds
inc
lahf
int3
jns
fwait
jnp
int
and
sbb
pop
xor
sbb
loopne
add
push
pop
add
jns
cltd
clc
sbb
xchg
arpl
into
sub
rorb
mov
push
and
and
lds
sub
ret
ret
add
push
lock
and
clc
cld
jo
jecxz
shll
xor
and
xchg
lds
xor
lea
mov
push
sbb
adcb
lcall
cmp
js
repnz
adc
fsubp
pop
clc
mov
sbb
lods
imul
push
in
add
or
movsl
push
scas
and
in
lcall
adc
cld
and
push
adc
sbb
mov
ljmp
insl
daa
push
insb
push
mov
mov
psubw
int3
jmp
pop
roll
xor
out
push
sub
jp
out
jb
testl
enter
jno
push
rcrl
shlb
dec
ror
push
movd
mov
stos
in
stos
shr
lock
arpl
jnp
adc
arpl
jnp
ret
dec
popf
test
inc
and
insb
pushf
mov
addr16
mov
lret
sbb
shlb
or
cmpsl
or
int3
imul
inc
pop
jb
sub
fsubs
and
fmuls
pusha
mov
cmp
mov
cmovae
into
inc
pop
int3
jge
inc
outsb
xchg
pop
outsb
xchg
push
lods
push
inc
xchg
lods
inc
pop
imull
jnp
imul
fildl
mov
clc
add
adc
sub
mov
mov
cmp
in
push
lahf
xchg
ret
add
jne
in
xchg
jecxz
jne
lret
xor
mov
add
dec
inc
into
mov
xchg
addr16
mov
pop
sub
mov
and
mov
ds
das
outsb
pop
push
imul
cwtl
addr16
les
xor
es
dec
aam
pop
sbb
or
mov
jo
lret
lret
rcl
inc
mov
dec
and
and
fs
adc
enter
or
in
xchg
and
scas
inc
test
mov
jno
push
mov
jbe
ljmp
cli
and
aaa
test
shlb
std
mov
jno
cltd
je
push
aaa
lcall
or
pop
sbb
cmpsb
sbb
repnz
pop
push
mov
xor
hlt
imul
jg
into
and
xlat
stos
jbe
add
into
pop
pop
stos
pushf
enter
scas
bound
inc
fdivs
mov
aas
jle
popa
imul
jp
sub
ret
lock
out
ja
sahf
mov
or
dec
dec
cmp
repz
ss
inc
xor
movsb
jne
jb
cmp
mov
outsl
jae
shll
xchg
stos
adcb
dec
fs
sbb
int3
sub
int3
or
js
mov
aaa
sub
rorb
fisubrl
arpl
fidivrs
adc
notb
lahf
adc
ficompl
fmuls
ja
into
pop
jecxz
sbb
ljmp
nop
mov
cltd
insl
jbe
fisttpl
mov
jp
xchg
sub
dec
mov
xor
mov
std
cmpsl
fsubs
mov
jae
outsb
xor
sarl
pushf
jno
cmp
sub
gs
pop
push
or
mov
xor
mov
jno
sbb
fiaddl
xchg
pop
aam
jmp
imul
pop
push
filds
jl
flds
lret
filds
iret
outsl
iret
sarb
movsl
sti
outsb
jnp
shr
icebp
add
notl
sbb
sub
ss
imul
clc
insb
ja
mov
adcl
mov
aad
sahf
loopne
mov
cmpsb
mov
adc
sti
je
add
sub
mov
add
mov
pop
fwait
rorl
movsb
out
push
btcl
cmc
insb
jle
fisttpll
gs
xchg
std
jg
in
jae
pop
push
int3
add
cmp
ja
or
hlt
pop
xor
jmp
out
jbe
outsb
stos
inc
jg
int
mov
into
daa
pop
jp
stc
das
das
out
pop
icebp
jmp
repnz
mov
pop
mov
nop
jl
popa
jmp
pop
stc
mov
loop
fistpl
idiv
fsubrl
or
pop
inc
add
cmc
sub
adc
mov
fisttpll
push
jp
mov
test
dec
mov
lahf
mov
test
outsb
inc
aam
inc
imul
in
fcmovb
jns
push
mov
sbb
inc
aaa
jp
jbe
daa
outsb
aas
fldenv
dec
dec
test
inc
add
inc
dec
push
dec
xor
mov
add
and
and
inc
test
push
test
mov
mov
inc
or
stos
mov
sbb
xchg
mov
push
out
out
fs
insl
mov
cmp
jns
ja
ja
jns
test
jge
in
arpl
sbb
fs
idivl
fdivr
in
mov
jb
cltd
sti
jo
dec
push
push
xor
fiaddl
add
enter
mov
mov
repz
pop
fwait
inc
cwtl
mov
inc
ror
shl
sbb
pop
int
pop
pop
xor
add
and
sub
sbbb
mov
scas
inc
pop
std
adc
int
out
push
dec
push
inc
inc
fisubl
jns
sahf
jecxz
fstps
mov
leave
mov
lds
xlat
dec
pop
dec
aas
stc
lret
mov
popf
scas
or
lds
popf
and
les
xchg
xor
adc
mov
sub
xor
adc
pushf
insl
leave
aam
or
mov
and
or
out
enter
xorb
mov
xchg
repnz
popa
cmp
fstpl
sub
dec
incl
inc
in
in
imul
inc
scas
push
mov
cmp
enter
movsb
push
rorb
xchg
fsts
ljmp
dec
sbb
mov
daa
rcrb
ffree
inc
lret
adc
jns
ljmp
aas
or
push
mov
movsl
icebp
int3
pushf
mov
jle
xchg
push
imul
pop
adc
pop
push
fcoml
imul
aaa
out
icebp
movsl
jae
aad
push
mov
repnz
mov
std
cmpxchg
nop
icebp
and
lods
mov
adc
jbe
lods
insb
xor
leave
inc
insl
sbb
loopne
orl
pop
jae
fadd
shll
xor
notb
xchg
mov
mov
cli
push
nop
mov
test
outsb
out
mov
iret
mov
jecxz
sub
lock
push
jle
dec
fnstenv
test
push
mov
jp
in
or
cld
aas
mov
sbb
sub
mov
sub
dec
in
dec
das
mov
mov
movsb
push
out
subl
add
or
daa
lret
mov
jnp
xchg
mov
into
mov
cmp
das
ss
push
push
inc
test
fiaddl
mov
fcoms
dec
mov
xor
xlat
sub
mov
clc
add
pushf
jg
jae
xchg
add
pop
mov
out
hlt
jns
and
sub
sbb
dec
repnz
cmc
pusha
out
ss
cmp
mov
cmp
push
mov
stos
xor
clc
lret
shlb
mov
loopne
int3
movsl
fs
mov
ret
call
out
je
dec
shr
insb
and
cmp
jmp
popa
clc
mov
fwait
pop
lods
pop
int
pop
dec
in
ret
imul
jmp
cmpsb
cmp
out
dec
sbb
js
jmp
push
cmp
in
push
hlt
sbb
sub
or
mov
mov
cmpsl
cmpl
jecxz
inc
sti
lret
mov
idivb
mov
scas
mov
cmc
cli
lea
push
cmp
fistpll
push
mov
pop
or
bound
xor
movsb
mov
dec
js
add
cmpsl
and
mov
cltd
insb
push
lcall
loop
mov
or
ja
xlat
push
stc
add
addr16
cmp
xchg
repz
repnz
cmp
or
adc
sub
adc
div
push
and
cmp
out
and
popf
int
int3
out
adc
call
dec
push
cs
dec
cmp
or
outsl
push
xchg
pop
cmc
and
in
adc
inc
jmp
rorb
push
dec
sub
mov
imul
shlb
loop
lret
ljmp
test
mov
sti
xor
xor
int3
std
pushf
push
mov
pop
or
aam
les
icebp
push
js
int3
mov
push
js
fs
fwait
and
out
jg
add
and
out
stc
cmp
ror
scas
and
mov
inc
jmp
int
xchg
pop
adc
push
pop
inc
xchg
pop
repz
adc
sbb
int
lret
bound
in
mov
mov
lds
bound
ja
mov
sub
push
xor
adc
aas
pop
add
mov
jle
pop
mov
mov
push
daa
xor
popa
sub
dec
inc
mov
jl
mov
outsb
sub
sbb
cltd
aaa
stc
inc
es
and
leave
mov
adc
lret
sub
scas
cwtl
xchg
nop
cmp
popf
lods
idiv
xchg
lcall
inc
sbb
imul
sbb
mov
xor
jae
pop
pop
jb
test
fistl
out
fsubp
mov
sub
lahf
cli
adc
xor
sbb
test
jmp
push
cmc
cmp
test
add
jmp
and
sti
xchg
sbb
push
mov
mov
lcall
xchg
sbb
fildl
jnp
push
dec
aas
mov
lcall
xchg
dec
pop
gs
dec
cmp
pop
dec
xor
sbb
add
sahf
iret
cwtl
mov
sub
and
mov
mov
add
xchg
test
popa
movsb
adcb
iret
xor
jmp
sub
lock
imul
jbe
aam
in
adc
push
push
sti
mov
xchg
jecxz
dec
adc
rorb
inc
mov
clc
loop
sahf
loopne
pop
enter
sub
sbb
lock
das
dec
and
lret
stc
push
inc
sbb
in
mov
and
sub
sub
pop
xchg
pop
call
int
push
ja
lret
add
inc
add
pop
adc
sub
push
sbb
mov
outsl
imul
mov
mov
lahf
das
aad
or
cli
and
mov
in
mov
pushf
in
iret
lret
sbb
jl
sarb
pop
sub
stc
push
mov
adc
stos
cmp
mov
fdivp
fnstcw
test
aas
in
xchg
ja
pushf
mov
add
addr16
stos
movsb
sarb
sbb
xchg
mov
or
or
rcl
jae
fisttps
push
movsl
shrl
hlt
jge
mov
cmp
aas
arpl
push
push
cmp
mov
xchg
data16
jne
and
cmp
imul
sbb
jo
dec
jmp
sub
push
pop
jne
inc
pusha
mov
jmp
push
cmpsb
and
pusha
mov
addr16
dec
inc
cld
mov
and
pop
mov
mov
ljmp
mov
jl
imull
xor
cs
push
out
fisttpl
inc
sbb
jb
stos
push
imul
sub
pop
inc
in
adc
and
stos
jl
mov
addr16
lods
inc
push
push
jo
sbb
sbb
es
pushf
mov
out
ret
aam
push
mov
lods
loop
xchg
ljmp
dec
outsl
call
aas
pop
mov
mov
mov
test
fbld
xor
add
jnp
sbb
daa
jbe
fiadds
jmp
orl
ja
jp
fbld
loope
dec
pop
jnp
and
fisttps
pop
sbb
push
ss
mov
xchg
inc
xchg
jo
movsb
roll
sbb
clc
lods
rolb
or
push
or
pop
ss
addr16
push
addr16
js
pushf
imul
jno
and
aam
and
inc
jns
jle
xchg
mov
xchg
or
out
mov
xor
cmpsb
push
push
loop
nop
mov
and
xor
aam
ss
testb
push
cli
ljmp
shlb
cli
sbb
imul
add
testl
fstpt
divl
jmp
fldt
xchg
cmp
loopne
std
shrb
dec
dec
out
lret
push
fnsave
das
add
ret
movsl
lret
lds
xlat
ljmp
cmp
cmp
and
mov
pushf
sub
mov
pop
rcrb
xchg
inc
cmpsb
repnz
insl
add
mov
out
jg
jbe
jle
pop
lret
push
data16
fistpl
test
int
and
movsb
and
pop
xorl
test
repz
push
imul
ja
js
push
add
mov
comiss
cmp
pop
mov
jmp
ja
mov
mov
fwait
jnp
inc
adc
push
xchg
dec
push
mov
push
mov
mov
fnstcw
mov
xor
sbb
pop
add
and
mov
ljmp
out
test
cmc
push
adc
cli
lahf
xchg
pop
call
mov
add
pop
or
pusha
xchg
sbb
je
xchg
jbe
shlb
jl
xchg
shll
js
pop
inc
je
mov
pop
pop
xor
push
xchg
adc
cs
lods
pop
rcrb
mov
sahf
fdivrp
xor
test
insb
lods
std
lea
dec
std
jae
sub
repnz
nop
mov
xchg
pop
data16
out
loopne
xchg
or
cmpsb
sub
dec
mov
sbb
dec
adc
std
sbb
shrl
fldz
and
sbb
pop
jne
loope
push
mov
out
loopne
jae
and
jnp
adcb
push
fnstsw
xchg
cs
sub
push
popf
mov
xlat
das
jecxz
xchg
mov
adc
pmuludq
insb
outsl
sub
ja
xchg
pop
daa
xlat
sti
add
std
jp
mov
inc
adc
mov
xchg
pop
addr16
movl
and
mov
xor
loope
and
inc
jecxz
and
or
pop
pop
or
lds
sbb
mov
and
and
int3
push
pop
imul
lret
sbb
inc
repnz
cmpsb
ljmp
orl
cs
adc
mov
lret
jne
jno
fistpll
movsb
bound
hlt
sahf
xor
in
cld
int3
inc
pop
jbe
ret
cli
loope
test
cmpsl
sbb
fdivs
and
lds
inc
not
test
add
popa
and
sbb
lods
or
imul
je
jne
ljmp
xor
imul
ljmp
enter
mov
inc
ljmp
clc
test
mov
pop
sub
addr16
leave
push
add
imul
and
out
or
loopne
nop
mov
ret
mov
popf
aas
xor
pusha
lret
outsb
addr16
out
cltd
cld
mov
or
mov
test
pop
mov
outsb
loope
faddl
add
insb
mov
orb
adc
jle
lds
into
loopne
sbb
fsub
or
push
shl
sti
push
add
bswap
mov
pushf
xchg
cmp
lds
xchg
xor
js
xchg
nop
movsl
ss
es
ret
cld
push
xor
mov
push
mov
jb
add
sti
push
jns
rcrl
popf
dec
and
scas
cmc
nop
xchg
mov
cmp
js
mov
jmp
std
addr16
mov
mov
mov
adc
xchg
fidivs
into
mov
xor
xchg
cmpl
inc
mov
inc
movsl
pop
mov
add
mov
push
aas
push
cmp
outsl
enter
icebp
xchg
ljmp
jmp
stos
and
in
adc
mov
cmp
adcl
mov
stos
mov
out
cmc
push
add
sti
imul
insb
mov
leave
jecxz
xchg
and
sub
leave
rorl
add
sbb
subb
decl
xor
mov
mov
xor
xchg
pop
enter
inc
xchg
lcall
stos
rolb
cmp
out
clc
lods
jl
mov
aas
jmp
popa
cmc
movb
dec
daa
ja
adc
ljmp
xor
ljmp
je
or
mov
mov
imul
mov
mov
cld
addr16
mov
pop
lock
pop
jle
test
mov
and
leave
pop
mov
jns
sbb
jno
out
mov
adc
insb
add
callw
xchg
or
popf
jp
mov
fbld
adc
cmp
sahf
cmp
outsb
mov
scas
mov
dec
jb
sarb
aaa
mov
cmpsl
rclb
mov
mov
mov
sbb
mov
out
aaa
mov
fsubr
flds
stos
fimull
andb
inc
ret
xchg
popa
setg
into
aas
pusha
insl
mov
mov
fistl
fimull
jp
mov
leave
repz
mov
mul
lods
mov
aas
addr16
cmp
outsl
cmp
dec
jb
cld
adc
aad
fmull
or
xor
or
sub
cmpsl
es
push
xorb
ja
jno
cmp
pop
inc
xchg
inc
cmp
mov
jnp
in
cmpsb
aam
inc
and
inc
mov
loope
xchg
std
xchg
pop
arpl
jmp
mov
fucomi
ret
mov
test
xor
adc
mov
je
into
mov
fwait
lea
ret
mov
lods
arpl
jae
leave
cmp
loop
jo
fidivrl
mov
mov
int
clc
or
testl
adc
dec
and
ror
sub
mov
dec
sahf
arpl
scas
mov
test
das
mov
decb
dec
mov
sar
jl
inc
mov
aam
adc
pop
scas
mov
lds
int3
shrl
cs
test
adc
lea
and
mov
stos
pushf
sbb
orb
lods
inc
sub
jno
and
sub
mov
test
sbb
popf
hlt
lret
adcb
sub
add
add
pushf
xchg
stos
mov
scas
cmc
push
daa
add
cld
inc
push
lods
jae
cmp
out
sahf
test
in
sti
mov
sbb
data16
jno
repz
mov
loop
sbb
arpl
and
pop
inc
mov
pop
dec
push
mov
mov
jmp
or
jno
mov
jmp
inc
mov
mov
mov
aad
das
into
jl
push
push
pop
and
fldt
push
xor
shld
push
lods
sti
xchg
mov
jbe
jns
inc
test
bnd
inc
aaa
inc
loopne
cmpsl
jae
mov
jge
jne
loop
and
jmp
lock
lods
test
dec
loope
add
inc
mov
push
jb
cmp
ss
sbb
pop
or
ljmp
fmuls
sub
repz
inc
jns
fwait
and
aad
xor
nop
out
pop
outsb
test
lds
jmp
mov
and
xchg
lods
sub
sbb
sub
adc
dec
jb
sarb
cli
fsub
xchg
movsb
add
out
shll
pop
aam
xchg
dec
ja
fistpll
xchg
fwait
adc
xlat
out
lcall
xor
sbbl
shrd
jl
andb
mov
mov
mov
pop
sahf
and
push
out
fists
mov
push
xchg
sub
iret
xsavec
sbb
inc
pop
pop
loope
je
mov
inc
popa
call
imul
imul
mov
pushf
dec
pop
sahf
xchg
ljmp
pop
pop
in
sbb
mov
adc
adc
inc
xor
mov
dec
push
push
rcl
imul
push
sub
push
jmp
call
movsb
xchg
cmp
stos
xor
dec
and
fs
mov
outsl
adc
mov
pop
pop
push
pop
jae
jmp
dec
das
imull
dec
mov
and
out
adcb
and
leave
movsb
ljmp
shlb
jl
sbb
inc
pop
jl
mov
stc
xchg
dec
lret
shl
jno
in
outsb
inc
inc
loopne
and
test
mov
sub
sub
xchg
mov
dec
leave
inc
icebp
push
enter
mov
sub
xchg
push
scas
lret
subl
jl
push
mov
pop
xor
fnstenv
mov
jae
mov
sub
pop
xor
clc
xchg
pop
lcall
fstpt
call
mov
hlt
out
pop
and
fwait
ss
insl
mov
shll
xlat
out
ret
xchg
imul
sbb
shl
fwait
mov
arpl
jp
incl
lods
iret
bound
dec
jg
push
out
pop
mov
xchg
mov
sub
test
xor
push
push
in
and
out
mov
scas
xchg
lods
sub
rolb
lret
and
orb
mov
js
out
inc
jbe
mov
pop
fcmovnu
mov
fsubrp
jle
repz
add
clc
mov
test
test
pop
icebp
jle
gs
bound
roll
pop
push
cltd
lods
mov
add
sub
xchg
mov
stc
adc
outsb
punpckhbw
frstor
or
out
fcoms
push
lahf
and
inc
es
aad
xchg
loope
xor
in
lds
push
or
add
or
lds
lods
push
mov
lret
jle
pop
mov
enter
out
outsl
fstpt
xchg
ret
jns
push
aam
in
xor
cmp
in
out
lock
push
jns
ljmp
stos
cmpsb
pop
negb
mov
mov
cmpsb
mov
cmpsb
mov
cmpsb
negb
in
xor
fisttpl
sub
and
mov
cmpsb
jle
adc
adc
mov
inc
jp
inc
jae
push
ret
xor
dec
mov
jb
pop
cmp
sbb
inc
nop
adc
pop
movsl
or
jmp
and
add
outsb
scas
mov
push
das
in
or
and
mov
ficomps
fiaddl
push
rcll
lods
xchg
xor
add
shl
ficomps
jne
cmp
loope
ja
push
sbb
mov
enter
popa
pop
mov
sub
xor
cltd
xor
in
push
pop
in
scas
iret
mov
xor
cmpsb
testb
cmp
dec
lds
push
sub
loopne
aaa
test
out
mov
jmp
and
clc
xor
jp
popa
loope
pop
inc
jne
jo
push
test
ds
insl
dec
cmpsl
jge
lods
xchg
pop
mov
sbb
jae
mov
repz
out
les
mov
in
and
ror
frstor
xor
sbb
pop
lods
sub
sub
jae
stos
sbb
cs
ja
sub
jne
out
andb
mov
sbb
ss
push
push
das
xor
sbb
jmp
sub
ret
sti
hlt
out
xchg
lods
xor
inc
in
pop
fimuls
mov
jbe
ret
cli
mov
xchg
popa
mov
inc
mov
aaa
leave
jl
insb
push
out
js
dec
or
pop
shr
mov
dec
out
jg
jo
dec
pop
je
cmp
loopne
jne
jbe
sub
sub
xor
xchg
dec
aaa
mov
mov
fs
dec
out
fsub
mov
fs
inc
push
repz
movsl
fwait
sbb
jbe
call
xor
sub
mov
test
sbb
aaa
jnp
data16
sub
lods
push
inc
mov
into
nop
lods
jno
pop
loop
mov
aad
rolb
add
mov
add
movsb
jge
inc
fildl
test
sbb
ds
jl
pop
and
dec
out
cmp
mov
mov
clc
or
ljmp
nop
popa
es
pop
out
xchg
movsl
cmp
into
lahf
sub
arpl
adc
xchg
sbb
stos
push
sub
jmp
xorl
fisubrl
lds
pop
test
cmp
ds
scas
dec
pop
add
mov
fldenv
insl
stos
mov
imul
pop
fs
mov
xchg
fwait
jno
and
insb
inc
xchg
lcall
fs
outsb
or
or
dec
sar
jl
push
push
outsl
ret
pop
outsb
sbb
out
popf
inc
jno
inc
rcrl
aas
xchg
push
xchg
mov
sbb
xchg
stos
mov
jle
lea
repz
sti
idiv
jp
call
inc
loop
sti
cmp
ret
cmovp
dec
jmp
jmp
lret
fdivp
xor
rcr
repnz
mov
pop
mov
mov
repnz
xor
sbb
pop
ja
jbe
cmp
mov
cmp
rcrl
in
and
sahf
pop
dec
fimuls
popf
jb
insl
add
push
call
jb
inc
cs
inc
and
pop
jae
pop
outsl
push
mov
mov
dec
dec
fmul
icebp
adc
psllq
cmpsb
sub
mov
add
andb
frstor
movl
cmp
pushf
cld
pop
fwait
mov
scas
test
jle
xlat
mov
icebp
add
pop
pop
xor
fsub
loope
mov
mov
mov
xchg
adc
mov
loope
rcrb
in
pop
insl
push
div
sbb
xchg
bound
ret
pop
enter
dec
push
xchg
mov
shrb
ret
mov
lret
push
loop
movsl
aam
arpl
xlat
mov
lahf
lock
add
jo
stc
mulb
jae
adcb
shrl
jl
or
sahf
cmp
push
jmp
mov
ret
ret
das
mov
in
mov
and
mov
cmpsl
inc
loope
addr16
stos
mov
mov
stc
inc
cmp
jp
pop
mull
mov
xchg
cmpsl
jns
jmp
push
or
xchg
sub
adc
rclb
aad
cmpb
xchg
mov
sahf
lahf
test
lret
je
cmpsl
clc
test
adc
outsl
aam
pop
add
fisttpll
jecxz
cmpsl
dec
int
aas
mov
xor
les
addr16
sub
scas
mov
inc
sub
pop
push
lds
xchg
stos
cmp
or
cmp
or
lods
pop
test
mov
fwait
std
push
pop
push
rorl
les
stc
shll
loope
out
aam
std
fsubs
frstor
jecxz
xchg
push
add
dec
cld
std
xor
or
dec
sbb
pop
rclb
push
pop
jb
rcll
js
or
aad
in
rcl
dec
mov
movsb
mov
push
xchg
adc
ret
out
mov
scas
add
ret
popa
icebp
or
inc
push
outsl
jae
int
out
xor
and
int3
or
loope
lods
test
cmp
pushf
pop
aad
sub
and
xchg
out
imul
add
mov
in
inc
mov
rcrl
push
fidivl
pushf
pop
adc
and
movsb
xchg
andb
dec
stos
icebp
sbb
and
aas
pop
sub
sub
jecxz
ret
pop
jne
addr16
jl
rolb
ss
sti
cmp
repnz
push
mov
pushf
pop
aam
dec
inc
jecxz
inc
dec
in
dec
inc
mov
dec
cltd
xlat
out
mov
daa
imul
out
pop
lods
ds
int3
sti
pop
xor
inc
out
sarl
leave
jb
jbe
insl
insb
mov
jge
cmc
ficoms
rclb
hlt
sahf
jle
sbb
jnp
cmp
pop
inc
cmp
xor
adc
inc
cmp
sbb
scas
push
adc
add
pop
fdivr
clc
mov
in
sub
pushf
ss
bnd
fs
mov
dec
mov
inc
jno
ds
and
les
push
mov
and
mov
out
sub
jae
cli
add
push
mov
add
push
daa
repz
mov
mov
xlat
mov
mov
in
jge
inc
or
inc
mov
and
add
inc
lods
testb
mov
arpl
jno
lea
sbb
jge
push
cmpsl
jae
sub
in
js
cmpb
test
jo
subl
in
push
test
and
pushf
loope
cltd
in
ja
call
cmp
enter
out
sti
or
jmp
outsb
lret
and
add
or
lods
out
dec
lahf
cli
cld
xor
lock
mov
es
mov
push
aad
inc
scas
js
mov
jecxz
lcall
das
mov
pop
dec
sub
jns
adc
push
jge
adc
cli
shrb
push
add
mov
adc
and
xchg
add
pop
inc
mov
sbb
xchg
and
or
mov
outsb
add
iret
aaa
ret
and
dec
shll
or
sahf
sub
sahf
movsl
and
mov
lds
rcll
add
int3
fisttpl
xlat
les
sti
cmpb
sub
sarl
mov
jmp
mov
and
mov
sub
cmpsl
movsb
and
sbb
jle
sub
mov
pop
pop
mov
inc
in
push
pushf
out
out
inc
out
xor
pop
xchg
push
fmul
jge
jae
addr16
and
jnp
inc
or
out
xchg
mov
into
leave
out
test
stc
std
and
jo
mov
in
or
lea
mov
mov
rcr
aad
scas
lret
pop
sub
outsl
inc
negl
xchg
dec
adc
sbb
fmul
stos
adcl
mov
xor
jne
pop
pop
dec
and
push
jae
adc
sub
sub
push
jns
or
mov
sbb
lret
fwait
mov
cmc
mov
ljmp
mov
je
sub
adc
inc
in
push
mov
rorl
iret
and
test
fwait
rorb
jge
das
pushf
xchg
sahf
popl
fcompl
imul
mov
pop
test
call
or
sar
and
or
pop
xor
testl
dec
or
dec
cmp
cmp
aaa
jno
cld
jp
mov
icebp
and
cmpsl
dec
xchg
dec
shl
mov
lea
jge
mov
scas
sbb
aaa
push
mov
mov
aas
or
loop
dec
mov
test
push
dec
sub
das
aam
cmovne
dec
in
pop
das
mov
add
roll
mov
push
lods
sub
mov
out
inc
rclb
faddl
adc
fstpl
pop
sahf
out
out
mov
jns
iret
push
addr16
mov
jmp
pushf
lods
xchg
rolb
aaa
pop
pop
dec
sub
jb
mov
popa
dec
rcrl
loope
jno
jge
push
cmc
lahf
cmp
test
ret
aaa
cmp
cmp
jno
das
sub
inc
or
mov
inc
push
xor
push
mov
push
add
loope
adc
cltd
inc
adcl
add
xchg
xor
std
mov
or
js
lock
out
sub
jae
or
sub
mov
in
pusha
pop
mov
adc
pop
jp
fs
ss
lcall
repnz
lcall
lret
add
pop
push
sub
lods
insl
aaa
iret
push
in
sub
mov
sbb
jecxz
mov
adc
jp
mov
out
xchg
xchg
sub
mov
ffreep
ret
lods
loopne
lock
dec
push
les
mov
xchg
ljmp
cld
cltd
jae
andw
dec
cmp
sub
mov
dec
sbb
pop
test
or
cmpsl
lahf
into
dec
js
int
xchg
fmuls
xor
xchg
fld
clc
pushf
notb
addr16
lods
fidivs
lahf
adc
iret
ja
sub
movsb
mov
je
fsubrp
arpl
pop
das
sub
and
cwtl
pop
xor
outsb
add
pop
js
ret
add
mov
pop
pusha
inc
push
inc
imul
mov
mov
sub
mov
dec
or
mov
sub
cmp
aas
test
out
loope
dec
test
dec
xchg
adc
xor
sbb
icebp
in
cwtl
sahf
pop
clc
mov
sub
mov
test
stos
mov
sub
aam
add
cwtl
pop
popa
add
or
add
xor
outsb
sbb
sub
mov
std
out
pop
shlb
jl
push
sub
mov
mov
xchg
inc
cmpsl
push
lods
popa
lds
inc
mov
cwtl
jb
mov
and
add
bound
pop
divl
pop
fistl
push
ja
and
enter
movl
adc
dec
mov
or
fs
inc
jecxz
cmpxchg
test
scas
adc
bound
iret
fistps
jl
and
repnz
adc
xchg
jg
push
push
push
add
repnz
aaa
xor
push
jae
cmp
adc
sbb
xchg
leave
out
ljmp
sub
jns
addr16
jmp
jno
pop
cmp
inc
vandnps
xchg
mov
lods
or
xchg
pop
leave
jmp
push
jns
lcall
rorb
dec
xchg
mov
jb
mov
mov
jns
leave
sbb
repnz
mov
push
pop
dec
or
cmp
imul
jg
cmp
sbb
loopne
push
in
addr16
xorl
xchg
mov
notb
leave
pushf
js
ret
subb
or
mov
and
gs
jns
jnp
jnp
inc
fldt
pop
pop
xchg
ja
add
iret
pop
jecxz
cmp
dec
adc
sub
and
adc
clc
push
sbb
imul
lea
or
add
jae
lods
dec
push
ret
rcrl
and
xchg
imul
gs
int3
dec
movsb
inc
fs
sub
and
pushf
lods
mov
or
cwtl
push
test
xchg
sub
jle
mov
pop
icebp
popa
push
mov
lods
jo
jnp
ja
xchg
xchg
or
in
push
pop
or
fs
adc
push
xor
pushf
lds
or
pop
test
mov
push
cwtl
fdivrp
xor
in
jb
clc
test
cmp
out
cwtl
out
sub
es
xchg
leave
out
lret
movsl
fsubl
imul
xchg
jns
pop
faddl
scas
sub
out
xchg
push
int
jae
add
lahf
mov
cs
mov
jg
pop
jae
bound
jmp
mov
add
imul
or
xchg
add
mov
loopne
fcomi
add
add
xchg
push
hlt
bound
in
sub
icebp
in
jne
enter
fmuls
jge
mov
inc
enter
xor
inc
or
pop
mov
in
pop
mov
mov
out
push
mov
jmp
ja
daa
inc
rcrl
jmp
call
roll
sti
adc
lods
add
rorl
je
fisubrs
push
cmc
loop
cmpb
cld
fldcw
lds
stc
adc
or
les
xchg
dec
or
xchg
jmp
dec
fcoml
repz
adc
pop
ds
lods
stc
adc
adc
gs
aam
rorl
mov
repnz
pushf
andl
and
stos
adc
movsl
test
ss
pushf
push
sbb
adc
jmp
pusha
push
int
mov
or
insl
add
add
xor
imul
sub
and
inc
cmpsl
jmp
pop
lds
cmp
les
pop
mov
mov
rcll
xchg
lods
adc
lods
xchg
add
lock
add
out
xchg
dec
test
nop
pop
pop
std
popa
dec
inc
mov
cmp
xchg
xor
mov
cmc
loop
or
out
lret
sub
jne
push
int3
loope
rclb
xlat
pop
shlb
lahf
push
sbb
nop
or
lahf
jmp
mov
movsl
jo,pn
repnz
je
cmp
loopne
stos
jae
adc
push
push
es
int3
cmpsl
pop
and
ds
enter
xor
sub
pop
push
push
cli
repnz
xlat
xchg
adc
fistps
jle
xchg
test
fcoml
push
inc
sub
push
or
add
and
inc
or
inc
arpl
leave
adc
jp
mov
es
add
fwait
jecxz
jecxz
inc
inc
test
cltd
push
sub
or
and
gs
adc
lcall
lea
imul
or
sub
cltd
mov
out
jo
jmp
xchg
xchg
pop
and
mov
adc
mov
in
xchg
les
call
enter
shll
sti
inc
scas
in
mov
lods
mov
sub
push
cmp
cmp
pop
sbb
mov
mov
sbb
iret
adc
icebp
xchg
jmp
adc
jg
insb
stos
dec
mov
loop
cmp
enter
push
icebp
iret
outsl
vprotq
sahf
push
xchg
fstps
mov
addr16
cmpsl
lock
fildll
testb
cmpsb
movsb
nop
sbb
aaa
js
hlt
or
jecxz
loope
imul
jnp
shl
cmp
jmp
pop
pop
xor
inc
pushf
test
lret
ljmp
test
gs
lock
cmp
sti
sub
mov
mov
repz
mov
in
xchg
pop
fildll
mov
out
stos
out
and
idiv
in
stos
mov
mov
jmp
fstl
rcll
jg
xlat
mov
push
ret
lret
imul
les
js
add
ds
pop
loopne
add
pop
fimuls
and
cmp
mov
mov
fcoml
mov
dec
lds
imul
jmp
loope
inc
add
xorb
shll
inc
jo
scas
jg
jo
mov
mov
jge
push
lea
xchg
pop
mov
pop
add
pop
lock
fucomi
mov
cld
xchg
sub
inc
stos
stc
cmp
in
scas
pop
scas
hlt
dec
jecxz
xor
push
pop
sub
lret
jae
stos
sub
shll
sub
int
lods
hlt
jae
xchg
pop
push
mov
daa
faddl
movsb
inc
stos
xor
into
mov
ret
nop
pop
mov
xchg
xor
lods
jb,pt
int3
sbb
std
cmp
dec
mov
add
dec
mov
in
push
aad
mov
pop
cmp
cs
jmp
das
mov
mov
lock
das
mov
mov
pop
es
pop
sbb
shrb
jp
jo
push
sahf
shrb
je
cmc
es
mov
mov
push
mov
adc
or
mov
cld
inc
pop
jge
pop
pop
inc
ja
pop
fdivl
mov
pop
shlb
or
into
inc
jl
or
mov
sar
in
pop
popa
imul
out
or
js
icebp
or
clc
outsb
sahf
lods
or
pop
jecxz
loop
pop
mov
ret
das
sbb
pop
push
add
and
scas
enter
add
mov
fisttpll
out
xor
inc
mov
mov
pop
xchg
int
addr16
add
int3
xlat
sbbl
jecxz
cltd
rcll
mov
aaa
aas
js
mov
mov
pop
out
adc
fsubs
les
neg
iret
and
pop
mov
clc
cmp
testb
pop
nop
push
lock
cmp
pushf
sarl
and
aam
idivl
sub
mov
repnz
psrlw
rep
sbb
xor
cs
sub
and
fcomps
inc
out
adcb
and
add
and
in
roll
call
xorl
jg
fs
sub
push
lods
push
je
fwait
and
std
jg
shl
inc
mov
mov
dec
mov
out
xor
mov
jge
enter
jne
test
xchg
pop
jl
testl
test
mov
movsl
pxor
cmp
mul
xchg
xchg
jno
outsl
mov
shr
es
jecxz,pn
test
mov
xchg
mov
mov
sbb
pxor
movsl
aas
repz
fistps
fdivl
jecxz
shll
movsl
int
xor
jge
lea
dec
maskmovq
notl
stc
push
pop
fisttpll
xchg
mov
jle
pop
xchg
call
pop
ja
into
dec
shrb
lret
sub
fistpll
popf
decl
scas
fldl
test
push
nop
push
mov
mov
jp
aaa
mov
lock
sub
jle
fidivs
mov
cmc
popf
pmaxsw
mov
cmpsl
mov
mov
aaa
lahf
into
dec
lcall
das
call
fs
repnz
jmp
cmp
or
mov
jmp
in
outsb
sbb
insl
cmpsb
xor
sbb
or
hlt
xor
cmp
insl
mov
mov
stc
incb
decl
cmp
jl
loop
arpl
xchg
into
sbb
inc
daa
mov
dec
adc
movsl
daa
jle
or
mov
pop
lret
fidivrl
cltd
cmp
ret
popl
out
mov
es
pop
cmp
cmp
push
xchg
cmp
es
fcomps
dec
and
std
inc
or
es
adc
lret
push
sbb
mov
mov
jge
loop
jl
lret
xor
repnz
popa
cli
gs
mov
ficoms
mov
jnp
dec
mov
rorl
cs
out
sbb
lds
out
mov
sarl
mov
out
sbbb
iret
ret
mov
cmp
mov
pop
stos
pop
daa
aam
pop
fdivrp
push
xor
movb
std
outsl
jle
sub
xor
clc
ja
push
insl
in
aas
je
cli
fimuls
fists
shl
aam
jns
and
push
jecxz
xor
adc
push
sbb
movsb
push
push
mov
mov
cld
pusha
fwait
or
bnd
jo
popf
adc
lsl
fisttpll
nop
mov
add
jg
cmp
pop
xorb
jns
std
std
jle
stos
pop
lds
pop
mov
in
and
jecxz
mov
iret
adc
sti
sbbb
addr16
orl
bound
popa
cmp
in
faddl
sub
test
add
in
mov
and
jle
lock
das
mov
mov
in
or
into
xchg
mov
pop
xor
and
js
pusha
bound
adc
aaa
les
xchg
les
lock
ja
dec
hlt
pushf
fxch
or
lcall
mov
inc
mov
dec
mov
aaa
inc
jnp
dec
orb
sahf
mov
or
repnz
mov
mov
notb
mov
es
test
dec
mov
pop
adc
mov
stos
cmp
jl
fdivl
imul
popaw
jmp
shlb
stc
lods
in
push
leave
stos
stos
push
movsl
mov
mov
mov
xor
insl
je
mov
cmp
test
ja
cmp
sti
push
call
pushl
in
out
mov
mov
pusha
adc
cmp
in
pop
js
testl
adc
roll
loope
movsl
ffreep
mov
imul
rcl
cmp
inc
adc
cmp
jle
push
stos
lret
pop
cli
dec
pop
pop
mov
mov
shll
aas
les
add
cltd
xchg
push
jnp
mov
jecxz
push
pop
leave
in
pop
xchg
xor
add
inc
jp
addr16
test
dec
mov
pop
mov
scas
sbb
xchg
jnp
or
jmp
movsl
cmp
out
and
mov
decl
and
inc
imul
ja
sbb
mov
clc
pop
sahf
push
mov
movsb
add
test
lods
xchg
push
pop
aam
dec
es
pushf
repz
xor
sbb
inc
mull
sub
les
aam
lds
cmpsl
in
loopne
mov
fistl
mov
aad
in
mov
jbe,pt
push
push
pop
pop
aad
push
pop
jae
pushf
xor
loop
push
mov
mov
ret
cmp
inc
aaa
imulb
sub
repz
mov
mov
fs
into
icebp
sbbl
xchg
gs
xor
inc
adc
or
sub
push
pop
adc
mov
int3
cmc
or
dec
add
dec
adc
test
mov
dec
mov
test
ss
cmp
mov
call
mov
sub
push
lret
test
ja
scas
jno
add
pushf
sbb
in
sbb
adc
pop
and
out
mov
xor
ds
std
mov
in
sbb
sbb
lea
inc
daa
fisubl
test
sub
das
xchg
cmp
xchg
cmc
ss
aam
push
xor
fs
inc
or
fistps
fisubl
popf
inc
lock
adc
rcll
lcall
rcll
cltd
add
pusha
int3
xchg
push
push
mov
ret
enter
mov
push
in
stos
fstpt
stos
push
imul
movb
push
push
xlat
jmp
mov
jle
out
add
outsl
ja
negl
mov
sbb
fldl
pop
test
jg
and
lds
xchg
and
or
mov
xchg
sub
lcall
movsb
dec
inc
sahf
jns
and
sub
inc
jno
mov
stc
mov
rorb
adc
fbstp
mov
push
xor
aam
push
pop
mov
add
cmp
mov
mov
pushf
in
push
ss
mov
xchg
stos
popf
iret
inc
jne
mov
scas
xor
dec
repz
cmpsl
push
or
mov
dec
jae
lea
mov
mov
hlt
push
mov
xor
testb
push
sub
dec
loope
mov
or
sub
xor
push
jne
mov
daa
sbb
and
inc
dec
jae
orb
jp
out
adc
or
and
mov
inc
outsl
lret
and
int3
adc
mov
ficomps
xchg
out
repnz
pop
je
inc
mov
mov
mov
into
push
mov
out
nop
pop
sub
or
add
push
and
cmpsl
and
mov
xchg
addb
call
ficoms
leave
in
push
popf
inc
dec
test
jb
fidivs
sbb
scas
orb
add
dec
pop
jns
lret
cs
jg
xchg
orl
cmpsb
and
xor
mov
push
pop
hlt
sbb
pop
andb
sbb
dec
or
mov
aaa
lret
nop
sbb
test
out
mov
jle
sbb
mov
outsb
dec
stc
test
mov
mov
or
pop
jno
jo
adc
gs
in
push
mov
cs
xlat
cs
out
jecxz
out
dec
and
cmp
out
sbb
xchg
cmp
nop
ffreep
in
and
xchg
pop
test
inc
jp
ljmp
loop
or
jmp
enterw
adc
xor
and
fldl2e
dec
jl
jp
notl
out
push
or
jnp
int3
imul
repnz
xor
addr16
mov
leave
pop
cmp
pop
push
jne
inc
inc
test
adc
add
sbb
decl
movsb
es
and
push
fucompp
jg
pop
mov
and
shll
scas
add
sbb
ds
push
xor
sub
push
and
aam
and
mov
push
sub
jl
sub
sub
ret
int
or
in
xor
xor
mov
mov
popa
and
sbb
imul
mov
jecxz
push
mov
push
add
scas
arpl
clc
add
add
iret
push
jmp
mov
add
mov
std
push
iret
sub
jmp
out
sub
jp
in
fcoms
pop
sub
inc
stos
dec
cld
outsl
cwtl
pop
cwtl
rclb
xor
xchg
dec
fimuls
inc
pop
lcall
test
push
fcmovnu
push
mov
and
add
pop
add
insb
test
add
jns
repz
add
fcomi
pop
sahf
popf
popf
andl
cli
push
add
add
aas
jno
or
jno
xor
add
jno
push
imul
mov
mov
aaa
sbb
test
outsl
lcall
sub
pushf
mov
cltd
cmp
test
jg
arpl
test
cli
jo
outsl
test
lods
lock
notl
jne
ljmp
clc
add
jnp
aam
mov
adc
orl
aad
stos
inc
lds
pop
push
and
push
sbb
fbld
repz
repnz
sti
xor
fisubrs
gs
and
add
adcb
xor
inc
mov
nop
ljmp
mov
nop
xor
scas
inc
jne
xchg
hlt
leave
repnz
push
pop
cmp
adc
dec
fcoms
or
roll
or
outsb
das
sub
lods
orb
or
popa
in
icebp
leave
jb
movsb
jnp
adc
inc
mov
push
rorb
iret
push
repz
fisttpll
mov
fadd
negb
pushf
iret
ret
cmp
cld
and
sti
pop
xchg
repz
js
dec
in
sahf
out
pop
rep
ja
mov
cmp
cmp
loope
push
or
inc
or
add
push
test
mov
add
popa
jb
mov
pop
imul
or
rcrb
mov
subb
aad
cli
mov
cmpsl
cwtl
out
aam
and
xchg
xchg
ds
aam
or
mov
mov
inc
repz
cmp
mov
cmp
mov
out
out
and
mov
pop
push
movsb
test
dec
or
inc
xchg
pop
lret
or
pop
push
xchg
test
jge
pop
loope
inc
sbb
dec
stc
andb
sub
push
or
fnstcw
leave
mov
test
lahf
ds
dec
dec
push
fs
mov
xchg
cmp
enter
and
xor
mov
cmp
jae
push
hlt
dec
jb
mov
scas
cmp
pop
jb
negl
popf
aam
mov
xor
in
out
hlt
pop
xchg
mov
stc
cmp
es
cwtl
dec
pop
cmc
test
fwait
pop
mov
lock
inc
iret
pop
cmp
cmp
shlb
stos
mov
mov
mov
clc
mov
jle
movsb
push
cmp
pop
cld
mov
mov
out
adcb
ja
aas
inc
cmp
mov
fucomp
inc
mov
repz
mov
inc
mov
test
inc
mov
push
adc
jb
test
out
sub
pushf
and
sarb
and
pop
or
in
popa
cmpsb
fcomp
aas
aaa
xchg
ja
jns
scas
add
mov
jnp
push
into
pcmpeqb
pop
jnp
js
fnstsw
test
mov
in
push
cmc
nop
notl
cmp
popf
in
mov
cmp
mov
add
test
xchg
xchg
mov
pop
push
add
hlt
xor
mov
lret
cld
pop
push
int3
std
imul
pop
or
fucomip
pop
in
xchg
pusha
xor
in
push
jns
adc
jle
mov
ss
or
adc
xchg
mov
pushf
xor
sub
ds
imul
jns
mov
pop
mov
shrl
sbb
cmp
xchg
xorl
ret
rep
fiadds
movsb
icebp
mov
addr16
jmp
aas
add
std
push
imul
cmp
cmp
sbb
addr16
aaa
sub
jp
test
div
sub
mov
sub
pop
mov
pop
scas
jno
jne
fsubr
fwait
int3
sbb
cmpsb
mov
scas
in
jge
in
dec
testl
cmp
mov
cld
sub
fwait
cmp
in
mov
iret
ds
js
mov
lahf
xor
jle
sbb
sbb
sbb
loop
mov
sahf
jne
mov
jbe
mov
jb
jp
sar
in
jecxz
mov
sub
popl
xchg
scas
sbb
repz
sarl
stos
cld
mov
iret
cmp
scas
call
xor
hlt
pop
aaa
movsl
xor
in
imulb
jne
add
sti
mov
cld
stos
cmp
mov
jo
fimuls
rcrb
aas
pusha
out
add
mov
test
pop
mov
jns
jbe
leave
clc
cmpsl
mov
fsubl
std
xchg
xlat
mov
xchg
scas
daa
sbb
jecxz
fists
repz
sbb
push
or
dec
cld
cltd
fnstcw
jno
int3
sti
icebp
push
jno
or
in
out
xchg
decb
popf
int
add
xor
dec
jmp
outsl
and
pop
fnop
add
imul
adc
jb
repnz
into
xor
mov
rcll
mov
sarb
cs
imul
aas
callw
adc
loope
adc
ror
vpxor
lret
xchg
sbb
cmp
lret
push
inc
mov
ljmp
data16
xor
xor
loope
or
les
stc
push
sub
sahf
dec
pop
in
xor
xchg
leave
dec
dec
dec
iret
mov
int3
mov
fwait
lret
sahf
mov
repnz
shrl
scas
and
ret
add
sbb
ror
iret
in
imul
push
jp
pop
movsl
or
lcall
xchg
repz
addb
mov
int3
iret
clc
jae
sbb
cmp
addr16
mov
and
out
rclb
sarl
sub
mov
xlat
inc
lock
stc
dec
pop
aaa
hlt
push
cwtl
shlb
push
mov
cmp
pop
out
pop
lods
ja
adc
pop
pushf
or
outsb
sub
mov
aad
xsha1
cmpsb
lret
movsl
outsl
test
loopne
pushf
rcr
mov
sti
jp
cmp
or
mov
jecxz
cmpsb
adc
cld
in
adc
fnstsw
out
rcr
pop
mov
xchg
cmp
std
mov
test
decb
sarl
mov
loopne
xchg
and
ret
mov
push
cmp
fs
mov
fists
popa
sub
inc
cs
mov
flds
fs
pop
mov
pop
xor
shll
pop
push
xchg
inc
fisubl
mov
or
lahf
int
inc
js
sbb
outsb
sub
sbb
out
cmpsb
out
je
pop
aas
cmp
lock
and
mov
xchg
pop
pushf
ds
mov
std
std
ret
lret
or
cmp
stos
xchg
jecxz
lds
test
pop
mov
outsl
jp
pop
fisttpl
sub
cmc
leave
rcrb
mov
mov
cmp
fidivs
stc
push
mov
stos
mov
jmp
sub
imul
sbb
hlt
out
inc
repnz
mov
dec
and
cs
cld
test
xchg
stc
rol
dec
add
push
and
pop
sub
xor
mov
pop
sbb
aaa
fldt
movsb
cmp
inc
test
jno
jne
dec
mov
ja
and
pop
stos
mov
je
orb
lea
stc
adc
movsb
pop
cmpsl
mov
cmp
cli
jbe
cltd
cmp
or
xor
aam
xchg
cmp
movsb
pop
ja
add
fnstenv
fistl
sub
pop
add
push
sbb
sar
ss
sbb
push
ficoms
dec
xor
popf
mov
inc
mov
cld
into
shlb
aad
addb
cmpl
or
mov
cmc
jge
repz
xchg
mov
lcall
fwait
inc
jnp
jo
inc
and
jns
in
sub
pop
imul
push
xchg
mov
ljmp
jl
xchg
test
add
dec
cltd
iret
add
call
es
push
mov
xor
xlat
mov
scas
outsl
imul
lret
cmpsl
xchg
or
mov
loope
mov
ja
xchg
inc
sbb
ds
mov
in
inc
popf
test
xor
stc
dec
pop
adc
and
mov
mov
sub
scas
pop
fimull
xchg
cmpsb
int
mov
jno
cltd
jl
jge
jae
jns
or
mov
stos
int
sbb
imul
shll
jo
jp
mov
and
loope
mov
je
jb
mov
hlt
push
push
int
ficoms
mov
xchg
jl
inc
jge
movsl
jl
jecxz
push
rcr
rcl
cmpsl
sahf
xchg
xchg
mov
or
imul
stos
jge
or
pusha
stos
adc
adc
sbbl
dec
lahf
push
pusha
ret
mov
fsubrs
pop
jne
xchg
mov
fs
fs
js
fstps
adc
aaa
cwtl
stos
xor
cltd
pop
imulb
lret
cmc
pop
out
shlb
dec
fildll
mov
les
sbb
xor
add
les
cmc
bound
jo
mov
cvtps2pi
pushf
roll
jp
cmp
and
es
inc
xchg
cmc
pushf
xchg
xchg
pop
ret
jbe
mov
push
lods
sbbl
or
movsl
sbb
jae
xchg
test
or
xor
je
aaa
jge
sub
xchg
push
movsl
or
xor
push
cmpsb
or
loope,pn
movsl
add
push
ret
push
in
push
push
push
jmp
push
call
loop
movl
pop
std
inc
mov
sub
std
sub
pop
mov
jb
pushl
popf
pop
cmp
jmp
std
and
gs
sub
mov
lcall
cli
inc
jg
stos
decl
push
stc
or
shrl
in
lcall
incb
fisubrl
aad
call
stc
movsl
jg
push
pop
repnz
cmp
pop
icebp
push
out
ret
arpl
xchg
ret
fdivrl
mov
mov
push
iret
mov
push
dec
and
ud1
sub
jno
sub
dec
and
mov
cmp
inc
push
int
xor
loop
sub
rorl
cmpsl
push
lock
adc
lods
mov
lea
mov
mov
shrl
imul
or
sbb
clc
stc
fistps
mul
mov
lret
movsb
fs
jecxz
es
mov
add
mov
icebp
sub
in
lea
lret
cmp
jmp
sub
push
or
and
mov
xchg
pop
loope
fstpt
fnstsw
mov
in
mov
pop
pushf
adc
imul
jne
out
mov
xchg
inc
xchg
sub
mov
jno
rclb
lods
cmp
pop
push
xchg
repnz
sub
jns
dec
movsb
shlb
cmpsb
in
test
xor
jmp
stos
dec
lcall
mov
mov
xor
outsl
push
xor
mov
pop
sbb
or
push
or
dec
mov
test
mov
sbb
repnz
sub
mov
stos
repz
in
cmpsl
iret
xor
lds
ficoml
mov
lahf
jbe
jecxz
dec
push
popf
cmc
cmp
mov
rcr
xor
mov
jne
jb
mov
push
adc
dec
jnp
lods
dec
mov
push
xlat
fisttpll
in
or
loop
std
jne
jmp
into
mov
xchg
int
cmp
sti
sbb
inc
xor
cmp
sub
add
jno
push
pavgw
lahf
js
jbe
fadds
sbb
mov
push
jns
daa
dec
aad
mov
orb
cltd
arpl
arpl
mov
jb
mov
jne
and
sahf
pop
stos
sbbb
cmpsl
mov
rcrb
inc
add
pusha
mov
inc
shlb
cld
adc
cli
xchg
jg
call
sti
in
idivl
iret
fcom
insb
jns
mov
in
fiadds
and
cmc
movsb
insl
sbb
push
mov
push
adc
xchg
xchg
sub
push
or
cld
dec
fnstenv
stc
or
lret
xchg
and
add
sub
divl
popf
pop
test
in
push
dec
lret
pop
repnz
insl
mov
fistl
jp
sbb
fstl
mov
aas
mov
das
enter
movsb
xor
cmp
jg,pt
ret
dec
jl
mov
pop
add
fs
dec
mul
mov
jbe
in
and
jne
sbb
sbbb
aas
js
nop
add
inc
loopne
shl
leave
andb
sbb
daa
pop
mov
rcrb
push
outsl
pop
cmp
aad
negl
and
fnsave
in
in
popf
aas
shufps
adc
and
mov
add
into
cmp
icebp
jnp
rcrb
add
add
pop
add
mov
xchg
lock
xchg
or
es
mov
bound
push
into
dec
aad
loope
sbb
arpl
sbb
dec
add
xchg
push
in
lods
inc
mov
fucomp
pop
jle
jmp
mov
pop
adc
loopne
jge
add
rorl
push
mov
cmpl
int3
mov
mov
dec
lods
and
cmpl
mov
setno
jbe
rcll
das
lcall
cld
loopne
loop
insb
xchg
idivl
sub
fisubrl
dec
lea
lods
fbld
sub
sub
stos
aad
negl
js
fcoml
jecxz
and
js
add
je
cmp
out
cmp
hlt
mov
dec
mov
movsb
inc
mov
pop
sub
and
push
jmp
cs
cmp
jo
pushf
dec
imul
test
in
jmp
leave
dec
xchg
xchg
es
bound
icebp
stos
fwait
ret
aaa
cs
dec
mov
daa
test
mov
xchg
xlat
test
xlat
stos
subb
ret
mov
mov
loope
pop
and
xchg
push
aaa
mov
jo
mov
and
inc
fucom
jo
fadds
dec
popa
push
fsubl
pusha
ret
adc
inc
mov
ljmp
dec
in
aaa
fidivrl
mov
cmp
sahf
mov
push
push
div
sbb
out
aam
cmp
pop
roll
in
outsb
shlb
sbb
test
insl
pusha
jae
lahf
sub
out
jl
mov
and
jns
testb
test
and
outsb
jno
adc
fsubrl
dec
xchg
mov
push
sub
add
aaa
inc
add
cmp
mov
jmp
fdivrl
inc
rolb
adcl
lcall
push
mov
xchg
xchg
sub
imul
cs
lds
insb
add
loop
loopne
lock
jbe
mov
repz
or
sub
xchg
xor
clc
andb
pop
jns
test
sbb
push
int3
aaa
and
adc
inc
push
clc
inc
inc
fsubrl
jmp
or
test
cmp
mov
jo
push
jae
arpl
int3
and
das
into
pop
mov
gs
popa
data16
lds
stos
cltd
pop
pop
daa
outsb
cwtl
aas
pop
hlt
adcl
xchg
jnp
mov
imul
adc
and
loopne
out
out
mov
dec
js
imul
mov
mov
mov
test
dec
pshufw
testl
movsl
test
sbb
pop
cld
jge
aaa
adc
lret
je
inc
std
ret
jo
in
dec
enter
cltd
ljmp
mov
orb
sbb
inc
jo
in
xor
jae
or
sti
mov
mov
lahf
inc
call
or
jg
das
add
xchg
mov
push
das
mov
js
sbb
jne
xor
cmpsb
pop
sub
lock
test
adc
fbld
mov
test
es
mov
mov
inc
aaa
pop
inc
fldt
xchg
nop
out
jp
jb
fcomps
jne
adc
cli
jle
pop
dec
incb
int3
ror
mov
addr16
fcos
nop
sti
push
jb
sbb
clc
gs
sbb
clc
popa
incl
dec
std
xorl
mov
push
out
xor
jnp
inc
fstps
sbb
iret
pop
aas
loop
cmpsl
cmpsl
data16
in
dec
rorb
loop
ret
testl
mov
leave
cmp
jecxz
mov
mov
fwait
cld
shrl
cmp
incb
xor
xchg
or
lcall
sti
das
int3
lock
stos
and
dec
call
in
test
clc
cmc
ja
adc
cmp
mov
pcmpeqd
fwait
call
mov
jb
dec
mov
mov
inc
dec
rorl
insl
insb
mov
inc
dec
sahf
pop
mov
and
aas
cmp
orps
cmovbe
sub
mov
push
outsl
push
stc
add
cmpsb
inc
test
jns
fnstsw
pusha
daa
jo
arpl
add
scas
cmc
sbb
stc
xor
mov
push
xchg
addb
and
cmc
call
mov
loopne
lods
rcll
fcoms
iret
xor
mov
sti
out
clc
ret
cld
or
neg
cmp
mov
or
jl
jb
push
jmp
in
dec
loop
outsl
out
mov
test
lock
or
add
sub
test
mov
adc
imul
cmp
push
clc
sub
ret
adc
cmpsl
andl
jmp
out
push
je
into
sbb
push
aas
xlat
and
xor
inc
std
pop
testl
dec
rcr
adc
lcall
push
dec
xor
adc
mov
mov
inc
jnp
lcall
ljmp
out
scas
ss
xchg
mov
inc
sbb
out
mov
mov
aam
scas
adc
cli
mov
movb
loopne
inc
dec
mov
jo
repnz
jnp
in
das
push
add
pop
mov
repz
and
push
in
mov
inc
clc
test
je
stos
pop
arpl
int3
sub
mov
push
add
mov
sbb
jbe
push
cmpsl
clc
aas
or
xor
jg
outsl
mov
cmp
pop
cmpsb
jp
sub
xor
xchg
sti
pop
lock
jge
nop
imul
into
test
push
shl
movsl
insl
sbb
das
fmull
movsl
testl
decb
push
icebp
je
out
pop
outsb
inc
cld
or
pusha
lret
icebp
inc
std
int
cmpsb
loopne
inc
sti
sbb
pop
loopne
push
mull
icebp
add
sbbb
and
mov
pop
push
cmp
fisttpl
mov
mov
ja
dec
cmp
sub
leave
jno
movsb
dec
repz
cld
and
sahf
dec
jle
imul
or
outsl
std
xor
mov
push
popa
in
jb
push
cwtl
into
addl
incl
pop
sbb
xor
std
ret
dec
sbb
in
sub
sbb
and
cmp
jo
xor
mov
cmp
mov
je
lods
jbe
xchg
fsubl
cmp
xchg
pushl
add
cli
mov
pop
insb
pushw
mov
add
add
stos
mov
stos
or
lods
lret
fcmovu
lods
push
mov
mov
mov
lods
int
and
ds
mov
inc
adc
xchg
in
mov
xlat
loope
lcall
hlt
mov
mov
std
inc
shll
push
and
ret
in
aaa
fs
cmp
std
mov
cli
cmp
pop
jnp
inc
add
xchg
mov
push
fidivl
push
std
xrelease
cmp
xchg
pop
out
add
mov
nop
jecxz
in
loopne
call
xor
je
dec
scas
xlat
decb
int3
sbb
ret
ljmp
push
loopne
mov
dec
jecxz
lret
fadds
scas
jge
inc
fidivrs
cld
test
shll
and
popf
push
ljmp
mov
pusha
out
pop
xor
sub
mov
mov
push
lahf
dec
or
shrl
rorl
cmp
std
test
cltd
out
jmp
dec
mov
cli
inc
cmpsb
adc
mov
cmc
mov
mov
and
dec
sbb
mov
test
and
cmp
jb
je
nop
outsb
test
out
push
add
es
icebp
mov
in
movsb
loop
in
fwait
cmp
std
gs
push
repnz
fcmovnbe
mov
pusha
ja
mov
outsl
adc
jns
test
mov
push
jmp
enter
mov
jecxz
arpl
pop
das
xchg
jecxz
bound
inc
adcb
das
into
inc
dec
lods
pop
imulb
jg
and
sbb
cmp
aaa
mov
mov
push
push
mov
sbb
out
pop
fsubr
xchg
add
pop
jo
xchg
negl
mov
pusha
cmpsl
jnp
lret
mov
fisubl
jge
push
das
cmc
adc
sub
push
leave
dec
bound
sub
push
xchg
and
in
pop
movsl
push
paddb
cmc
shl
out
add
cmp
pusha
inc
jg
jnp
cmp
loop
lods
jp
jnp
push
lock
aaa
jp
mov
adc
ljmp
lret
mov
adc
outsb
outsb
adc
das
subl
rorl
arpl
mov
mov
out
mov
mov
fstpl
notl
stos
push
lahf
xchg
testb
imul
loope
addr16
xor
vpcmpeqb
add
decb
or
jp
mov
inc
repnz
fiaddl
rorl
jl
out
scas
in
sbb
adc
cld
movsb
aam
movsl
jns
sbb
jo
test
or
jbe
xchg
into
testl
pop
pop
inc
shl
nop
inc
std
aas
xchg
cmpsb
cmpsl
rolb
xchg
jp
out
xor
jnp
sbb
xor
xchg
sub
push
nop
movsl
in
arpl
inc
repz
lea
shll
pushf
or
gs
mov
inc
push
lret
xchg
call
push
mov
rorl
dec
xchg
mov
mov
sbb
mov
jge
clc
pusha
xchg
and
mov
sbb
ja
or
or
sbbl
sbb
mov
int
leave
movsb
push
mov
inc
fstpl
jmp
mov
fnsave
jns
mov
xlat
inc
jecxz
aam
sahf
negl
push
push
inc
aad
fwait
cli
popa
out
jo
mov
int
push
mov
cmpsl
ret
mov
cmc
cmp
lock
cmpsl
sti
pushf
and
pop
push
mov
sbb
pop
dec
mov
out
xchg
sub
cmpl
xor
testl
sbb
xchg
int3
das
les
out
fldcw
lds
shlb
pusha
out
pop
or
rclb
loope
ret
rclb
aas
movsb
imul
add
fisubl
add
loop
cld
dec
adc
dec
and
cmpsl
push
insl
adc
jne
lahf
arpl
push
fisubl
adc
xor
pop
in
sub
jmp
rorl
aad
stos
daa
push
ljmp
lds
mov
and
cs
sbb
outsb
sbb
fistpl
repz
xchg
dec
fwait
movsb
cltd
add
shrb
fdiv
adc
pop
xor
cmpsb
fiadds
lods
inc
es
aaa
fs
mov
mov
pusha
popf
dec
aas
cmp
imul
jnp
sub
lods
xchg
add
pushf
jl
or
icebp
inc
aam
mov
int
push
rclb
leave
cs
cmp
jmp
scas
rcr
jmp
or
dec
in
repz
mov
pop
scas
shll
fwait
shrb
lds
and
cmc
push
mov
jns
les
inc
ljmp
out
dec
ret
jb
out
dec
jbe
loope
aam
stos
push
inc
mov
xor
fs
or
adc
pop
je
xor
xchg
scas
xchg
ret
push
xor
pusha
test
mov
call
xor
stos
adc
mov
jbe
push
jmp
xor
jbe
pop
lds
mov
jecxz
sbb
nop
sub
je
test
dec
fiadds
or
sub
and
pusha
or
xor
scas
insb
push
jns
pop
lea
push
push
push
mov
jmp
orb
inc
lret
addr16
push
ficoms
arpl
pushf
or
test
inc
adc
inc
push
lea
jecxz
out
clc
scas
xchg
test
cmp
int
cmc
in
pusha
fistl
and
xor
adc
or
lahf
push
imul
outsb
add
in
jnp
pop
insl
imul
hlt
loope
xchg
xchg
out
jp
lods
fsubs
mov
into
stos
adc
daa
orb
sub
js
nop
sub
dec
stos
hlt
fwait
sbb
jmp
xor
dec
and
xor
pop
and
xor
rcr
popf
cs
adcb
adc
fwait
jl
ljmp
add
or
xchg
jnp
or
cs
or
repnz
adc
dec
sbb
cmp
imul
sub
gs
cli
jns
adc
dec
sahf
push
jle
xchg
sahf
mov
mov
shll
or
in
js
cmpsl
clc
cmpsb
mov
dec
push
mov
ljmp
ret
pop
stos
jno
add
add
rolb
jg
jnp
pop
clc
jmp
das
lock
push
mov
iret
inc
push
add
adc
cltd
jo
shlb
xchg
sbb
movhps
aas
in
test
subb
mov
mov
in
and
movsl
push
sub
daa
xchg
sub
jle
push
subl
in
pop
push
mov
or
mov
outsl
lods
sbb
jb
mov
jo
jp
mov
sbb
add
sub
jne
and
insb
mov
add
ficompl
es
es
or
lea
shll
out
jae
mov
jno
in
pop
addr16
lods
fstps
xchg
inc
int
mov
push
jne
and
pop
and
push
nop
inc
movsb
sarl
xlat
scas
or
pop
adc
jo
popf
jnp
xchg
bound
nop
dec
jbe
sub
cmp
xor
imul
sub
xchg
add
cmp
xor
pop
or
xor
inc
in
dec
adcl
jae
mov
adc
dec
jge
lods
mov
data16
lods
cltd
lret
nop
or
jp
out
cmp
mov
loop
dec
mov
or
loop
repnz
mov
mov
xchg
dec
dec
jae
out
scas
or
fsubrp
sbb
in
inc
lahf
dec
jle
movsl
xchg
inc
xchg
rorb
xchg
movsb
fisubrs
cld
sbb
lahf
daa
ret
push
inc
ss
mov
cmc
jb
shlb
dec
fwait
ss
in
add
push
nop
loope
movhps
xor
push
ss
jecxz
push
sti
and
test
fsubs
or
test
pusha
lods
and
sbb
push
outsb
pop
adc
enter
mov
or
test
ss
cmp
jno
jbe
xchg
imul
lret
lock
cli
and
call
stc
add
imul
lahf
es
fadds
xchg
mov
lahf
ds
xchg
insb
arpl
ds
inc
inc
ja
repz
sub
out
js
cld
pop
fsubr
mov
pop
and
in
mov
xchg
pop
add
aad
push
data16
sub
dec
xchg
lcall
push
fdivrs
mov
lods
mov
out
mov
mov
addb
cs
mov
test
adc
mov
cmp
popf
lock
or
sahf
pop
insl
mov
shrl
mov
cli
sti
je
cltd
xchg
add
push
roll
lret
xchg
shrb
xor
stos
and
adc
push
jbe
dec
jb
popf
cmpsl
cmp
pop
data16
int3
in
dec
cmpb
xlat
lea
push
rorl
imul
outsb
dec
adc
xor
lods
xor
or
daa
inc
mov
test
xlat
or
cwtl
jne
imul
test
stc
fs
arpl
or
cmpw
cmp
cmp
pop
push
or
push
push
pop
and
add
mov
sub
pop
pop
cltd
add
mov
xlat
lds
addr16
pusha
xchg
jp
icebp
sbb
aaa
pop
mov
popa
pop
int
idivb
ret
lret
xlat
xchg
int3
jp
fstpt
or
repnz
out
mov
mov
rclb
or
cli
xchg
data16
repz
mov
mov
imul
scas
outsl
rcrb
iret
out
mov
and
mov
out
jb
ret
jnp
lea
jge
xor
mov
sub
mov
xchg
bnd
dec
xlat
xchg
rolb
ror
bswap
add
pop
movsl
int
add
push
pop
fadds
cmp
ja
imul
add
xor
lcall
test
stos
ret
inc
scas
adc
shl
fisttps
cwtl
push
or
clc
pop
inc
lock
xchg
mov
mov
jo
sahf
iret
sbb
pop
dec
add
and
enter
imul
pushf
mov
mov
aad
data16
loopne
or
lods
insl
jg
inc
dec
sbb
mov
and
or
int
pop
jnp
inc
push
xor
stc
fucom
shrl
repnz
sbb
pusha
xor
add
frstor
pushf
sub
loopne
jb
push
in
adc
in
test
pop
add
pop
adc
xchg
outsb
or
sub
out
aaa
es
inc
push
cmp
imull
insl
fbld
mov
stos
lcall
arpl
xorl
sbb
mov
and
ljmp
fnstenv
xchg
fsubs
stos
movsl
mov
push
das
mov
clc
bound
adcl
jno
and
arpl
cs
pop
aam
xlat
sbb
outsb
jnp
pop
or
push
pop
sbb
push
xchg
mov
mov
bound
popa
bound
fdivrl
xorl
hlt
movsb
inc
pusha
sbb
imull
pop
stc
mov
mov
aaa
scas
jno
cwtl
add
fdivl
adc
adc
inc
mov
adc
daa
insb
mov
push
and
jp
mov
std
out
or
imul
jo
in
xor
mov
mov
xchg
dec
inc
clc
push
push
lahf
repz
mov
cwtl
jp
cld
in
pushw
xchg
cmp
lock
or
dec
popa
scas
orl
repnz
pop
jb
test
push
std
cld
jb
xchg
jno
cmp
addr16
aaa
cltd
mov
leave
xchg
and
sub
stos
mov
fucomp
or
dec
xchg
xchg
xchg
cmp
mov
pop
fcom
push
fsubs
mov
into
or
or
mov
stc
mov
mov
pop
lods
and
mov
repz
jle
mov
cmp
dec
pop
pushf
testl
adc
scas
jl
in
lods
adc
sbb
inc
or
or
hlt
push
insb
ss
js
mov
sbb
ficoml
push
jge
add
stos
push
adc
cli
call
adc
enter
jno
imul
push
xchg
add
mov
push
jne
aam
scas
loopew
xchg
mov
and
out
or
gs
mov
mov
pushf
cmp
clc
aam
test
pop
bound
jb
fsts
fsubr
jne
in
idivb
pop
call
mov
inc
push
mov
inc
sbb
inc
mov
gs
fwait
out
or
frstor
fsub
ljmp
popa
dec
incl
mov
sbb
add
pop
aaa
shlb
out
push
xchg
lock
hlt
jo
cld
enter
mov
hlt
and
lret
cmc
pop
and
outsb
or
pop
lcall
xor
sub
std
xor
cld
pop
repnz
cmp
mov
decb
cmpsb
insl
stc
mov
sti
arpl
jge
outsl
insl
into
pop
lahf
adc
jmp
xchg
dec
sti
in
call
jb
fwait
inc
dec
xchg
int3
movsb
xlat
shrl
cmp
inc
mov
adc
stos
mov
xlat
mov
nop
dec
ret
shrl
jg
lea
fisubl
dec
testb
or
clc
inc
xor
xchg
jl
inc
es
mov
mov
lahf
ss
test
push
inc
or
cmc
xchg
inc
mov
jle
push
mov
jbe
jge
dec
out
inc
nop
xchg
lret
mov
imul
jo
fimuls
mov
sub
stc
xchg
test
lock
or
xchg
fidivrs
jmp
or
call
aam
jle
ret
std
push
sbb
js
and
in
js
mov
mov
push
insb
and
pusha
out
test
push
test
scas
jae
inc
jae
adcl
adc
int
fldenv
arpl
sahf
pop
cltd
aad
insl
mov
cli
pop
mov
cld
test
pop
add
xchg
fimuls
inc
lods
or
out
mov
mov
and
jmp
incl
test
xchg
lock
mov
mov
fcmove
mov
cmp
dec
pop
sbb
into
push
in
enter
xchg
and
rclb
dec
sbb
cmc
mov
xchg
inc
int
loopne
cli
movb
stc
cmc
in
popf
add
jmp
push
inc
cltd
filds
adc
ss
mov
scas
xlat
or
mov
dec
mov
pop
mov
arpl
mov
sub
in
cmp
ret
movsb
add
ljmp
dec
std
dec
and
fmull
pop
mov
jns
inc
pop
bound
pop
bound
shlb
pop
enter
out
loop
faddl
in
loopne
push
rclb
faddl
cmc
aaa
or
inc
jo
lret
es
test
subl
sub
and
mov
cwtl
call
sbb
adc
leave
inc
push
sbb
lea
xor
repz
cmpsb
fdivr
lods
mov
mov
or
shlb
sub
cld
sbb
cmpsl
fldl
fyl2x
fidivl
scas
shrl
cli
mov
dec
lcall
xor
adc
roll
or
and
mov
mov
mov
fldl
pop
and
dec
out
fwait
mov
pop
push
xor
adc
cld
or
add
mov
daa
adc
push
mov
push
cli
cmpsb
xchg
test
stos
mov
ficoms
ss
sbb
push
bound
jo
pand
scas
dec
mov
ljmp
xchg
push
test
push
push
cwtl
and
mov
int
imulb
cmp
lahf
push
jmp
int3
shr
sbb
arpl
xor
js
jmp
jno,pn
stc
xor
cmpsl
push
lods
and
push
out
mov
mov
pop
add
mov
xor
out
imul
pause
push
lahf
pushf
sbbl
cs
add
pushf
clc
leave
pop
mov
jo
pop
icebp
rcl
or
xchg
mov
jmp
scas
test
mov
mov
jae
call
mov
jns
in
mov
js
sbb
xchg
ret
icebp
mov
inc
inc
or
lret
test
mov
mov
sti
add
js
jnp
sub
pop
dec
scas
cmp
aam
adc
mov
inc
jne
notb
jne
jp
xchg
out
push
mov
in
jecxz
add
cmp
fs
pop
fnstenv
pop
push
fwait
mov
scas
aam
out
iret
sti
repz
or
lods
fsubl
cli
dec
outsb
clc
mov
and
or
xchg
push
xor
sub
mov
pop
xchg
jmp
aaa
repnz
or
and
sbb
lcall
sbb
repz
imul
mov
aas
mov
mov
push
mov
mov
jmp
repz
inc
in
or
cld
xor
sub
xchg
fists
loop
test
inc
pop
pop
or
jae
mov
fiaddl
clc
adc
cli
sub
mov
and
push
cmp
jnp
fwait
ss
mov
loopne
cmp
mov
mov
imul
lret
fldcw
xchg
xchg
insb
adc
hlt
jl
ja
pop
mov
popf
iret
imull
pop
scas
mov
mov
pop
in
mov
ja
add
stos
mov
xchg
mov
mov
dec
xor
sti
add
sbbb
sub
or
int
mov
push
add
jg
imul
inc
scas
inc
mov
insb
aas
push
push
call
push
ja
cmp
fists
cmp
jmp
push
cmp
push
fildll
inc
je
gs
pop
dec
xor
jne
stc
mull
movsl
popf
test
inc
pop
adc
push
jge
mov
sbbl
add
movsl
ds
mov
cmp
stos
addr16
mov
sbb
cmp
int3
dec
push
xchg
out
pop
jns
enter
in
into
in
xor
imul
stos
rcr
jle
imul
out
dec
rclb
js
xchg
xchg
insl
cmpsl
ficoms
or
and
sbb
stc
sbb
mov
test
push
out
sar
fucomp
mov
mov
mov
pushf
mov
lcall
nop
sbb
js
cmp
jns
rclb
mov
push
and
ds
xchg
mov
dec
add
xor
into
cmp
addr16
add
mov
cmp
inc
mov
adc
xchg
and
fs
movsl
xor
ret
push
mov
in
les
push
and
out
and
aaa
test
ja
push
cli
int3
mov
cmp
sub
dec
lds
mov
fcoms
das
outsl
imul
cmp
dec
gs
movsl
inc
adc
jnp
stos
dec
inc
jno
push
inc
xor
aad
idivl
xchg
xchg
loopne
xor
out
mov
out
jnp
cmp
stc
fdivrp
out
mov
leave
and
stos
aas
aam
xchg
sbb
ret
cmc
fisubrs
cmp
dec
mov
dec
sbb
out
movsb
inc
jbe,pn
push
imul
clc
add
int3
or
nop
into
xchg
pop
push
insl
push
ja
outsb
mov
sub
dec
jae
sbb
mov
das
pushl
ss
sub
pushw
fisubl
cs
insb
les
insl
pop
fs
mov
or
aaa
mov
jl
aas
loopne
push
dec
enter
mov
ljmp
push
or
jae
ficompl
xchg
inc
mov
jg
daa
inc
jge
and
lcall
mov
shrl
adc
lahf
sub
pop
push
jno
mov
inc
sbb
xchg
or
dec
push
mov
loopne
sbb
cli
iret
inc
mov
mov
adc
jne
dec
fs
push
in
sbb
mov
dec
ljmp
pop
xor
insb
pop
or
rorl
fisttpl
sarb
mov
mov
cmp
into
mov
aam
cli
mov
dec
jge
jne
xchg
mov
xor
pop
jnp
or
lds
add
cltd
sahf
sbb
adc
loope
ja
ror
popf
jmp
mov
cmp
popf
out
mov
imul
icebp
sub
scas
loope
or
xchg
sbb
add
jb
xorl
repnz
sahf
mov
in
pop
adc
xchg
and
pusha
pop
lods
add
jmp
lea
arpl
jge
pushf
mov
stc
cltd
mov
insl
push
jae
push
pop
mov
and
scas
movsb
lods
imul
sbb
jae
sahf
xchg
arpl
iret
lock
xorl
cmp
repnz
popa
rclb
sbb
sarl
gs
fisubs
aaa
stos
dec
add
cmp
pop
xor
or
nop
inc
xlat
fistps
fwait
cmpsb
push
in
cmp
into
pop
xchg
jne
inc
fsubrl
loopne
dec
cmp
push
mov
jne
movsl
rol
inc
mov
cmpsb
jo
mov
jp
inc
popf
nop
sbb
inc
lcall
xchg
test
cmpsb
pop
push
dec
xor
or
cmp
rorb
les
arpl
rorl
cmpsb
jmp
cmp
mov
rorl
pop
test
outsb
int3
jle
shll
out
xchg
stos
jle
xchg
adc
loope
pop
outsl
mov
cwtl
sub
shlb
pushf
popf
stos
push
sti
fadds
sub
sahf
mov
dec
ds
aad
xlat
je
jecxz
ja
mov
sub
xor
insl
pop
dec
cmpsb
test
les
dec
mov
mov
les
mov
loope
clc
xor
dec
mov
test
sti
hlt
mov
addl
imul
neg
pop
ss
scas
insb
jecxz
lret
loop
js
inc
je
mov
xchg
xor
push
loopne
jp
push
test
inc
jmp
mov
cmp
jbe
inc
out
or
jmp
mov
mov
or
sbb
xchg
cmp
xchg
aad
mov
push
dec
push
add
jg
adc
aad
insb
fsub
inc
xor
scas
loopne
cmc
add
pop
imul
adc
iret
adc
and
ret
sub
push
arpl
outsl
sub
mov
jns
js
sub
jp
imul
xor
and
add
gs
pop
aaa
lret
inc
outsb
mov
pop
movaps
push
popf
mov
and
jle
andl
cli
jns
or
push
out
cmp
sbb
mov
leave
cld
imul
imul
push
pop
loop
mov
push
test
cmp
dec
sbb
gs
jbe
add
insb
leave
pusha
outsb
divb
xchg
mov
movb
mov
aaa
int
stos
and
inc
mov
lret
push
dec
pop
dec
cmp
mov
faddl
sbb
icebp
mov
add
lods
xchg
xorl
sub
jns
sub
xchg
and
test
sbb
push
popa
test
shlb
out
xchg
add
ljmp
xchg
call
sbbb
cmpsl
inc
xchg
cs
dec
or
mov
stos
daa
cmp
cwtl
clc
in
rcl
fsubrp
and
mov
mov
inc
pop
mov
pop
jb
ds
pop
test
adc
sbb
scas
sbb
xchg
xchg
into
pop
dec
dec
js
cmc
aas
sub
shlb
add
push
cld
imul
sbb
add
and
push
lock
push
adc
mov
jp
jns
dec
scas
mov
aas
loopne
shrl
lret
lahf
inc
jbe
rorb
jno
scas
push
stc
fnstenv
dec
mov
gs
mov
and
aaa
fistpll
leave
out
sbb
cmp
pop
or
push
arpl
fsubl
mov
adc
movsb
cltd
jge
jecxz
cmp
sbb
mov
int
jmp
je
jae
repnz
repz
test
mov
sub
cmpsb
js
cltd
cs
sahf
push
popf
xchg
fnstcw
mov
xorl
int3
loopne
call
mov
aas
stos
pop
add
cmp
outsl
push
rorl
and
das
les
out
ret
mov
cwtl
adc
xchg
lcall
adc
cwtl
mov
mov
mov
daa
jp
push
and
or
cwtl
jg
ret
sbb
xchg
add
sbb
popl
xchg
dec
aas
imull
lock
repz
pop
add
xor
jmp
mov
jmp
popa
cmp
cli
pop
outsl
es
ficoms
ja
sahf
xchg
xchg
add
stos
lret
pop
ds
out
xor
xchg
stos
and
bound
push
repnz
setl
cwtl
xor
lock
sbb
dec
loopne
jb
dec
mov
xchg
popf
mov
out
mov
jnp
sub
test
xchg
xlat
mov
push
fs
adc
cwtl
dec
jo
arpl
gs
in
movsb
xlat
adc
shrb
or
cmc
addr16
shll
icebp
test
aam
mov
imul
xor
dec
adc
mov
inc
sbb
icebp
cmp
adcl
outsb
mov
arpl
jno
loopne
lret
popf
cmp
inc
xor
sahf
aad
jbe
dec
imul
arpl
cmpb
mov
xchg
call
push
out
or
ret
jg
inc
je
into
loope
aad
jecxz
es
jge
scas
cmc
repz
popf
adc
dec
enter
movsb
in
mov
in
sar
inc
xor
add
mov
rorl
dec
push
push
adc
pop
push
mov
adcb
jnp
iret
xchg
ss
in
mov
mov
mov
test
lahf
int
bound
push
sbb
sub
xchg
icebp
mov
mov
incl
or
outsb
loop
in
pop
stos
cli
push
sahf
xchg
dec
and
pop
mov
mov
ret
sub
sub
int3
push
mov
or
push
pushf
fnstenv
push
inc
nop
lea
mov
xchg
add
repnz
push
mov
cmpsb
and
inc
xorb
stc
mov
ret
push
shl
jo
xchg
jne
pop
lock
sbb
xchg
les
dec
fwait
xchg
pop
rolb
add
pop
fisttpll
je
cmpb
into
leave
call
cltd
outsb
lcall
sahf
sti
push
push
outsl
or
lds
or
add
push
mov
sbb
push
dec
adcl
xchg
adc
push
jle
pop
loope
mov
cmp
inc
mov
or
sub
adc
lret
icebp
pcmpeqb
xchg
jmp
rclb
cmpsl
insl
ret
ss
inc
bound
mov
lds
fidivrl
movsb
and
inc
pop
pop
pop
aas
das
out
add
jbe
mov
outsl
mov
mov
int
cmpsl
sub
mov
mov
jmp
addr16
in
cmpsb
fldt
add
imulb
ljmp
cmpsb
jae
icebp
push
add
fcoml
ds
dec
inc
sar
adc
xor
xchg
std
lods
mov
stc
jl
mov
sub
loopne
adc
rcr
test
das
mov
sbb
insb
popf
inc
xchg
add
xchg
cmp
jle
pop
mov
xor
jp
push
out
imul
ret
stc
mov
sbb
mov
jge
or
cmc
jns
movq
cmpsl
in
lds
aad
jle
pop
push
sti
dec
out
sub
xchg
pop
sub
sub
test
sbb
int
add
lods
pop
cli
push
inc
and
enter
sbb
dec
repnz
int
dec
mov
mov
insb
push
mov
ljmp
inc
inc
jmp
loope
and
daa
out
js
adc
mov
mov
fwait
dec
mov
inc
test
inc
inc
sbb
lods
jno
adc
jno
xor
mov
lea
fcmovne
and
inc
nop
sub
pop
mov
jle
and
rcrl
push
mov
dec
and
lods
imul
cmpsb
pop
pop
and
aas
cmc
mov
das
int
xchg
sarl
iret
sub
pop
sbb
pop
ud0
xor
loopne
xor
andl
mov
adc
out
jge
adc
sub
test
xchg
inc
xchg
xor
das
cmp
sbb
push
mov
sti
out
into
lahf
mov
loope
mov
push
jae
mov
push
mov
adc
push
pop
xchg
jb
fisttpl
idivb
pop
cmp
mov
das
and
stc
movsl
mov
outsb
insl
inc
jge
jecxz
jnp
rorl
xchg
and
xchg
ja
mov
sbb
mov
ljmp
and
inc
icebp
hlt
mov
jo
inc
cltd
fldt
ret
sarl
dec
mov
xchg
lahf
ja
mov
pop
fs
mov
pop
and
dec
repz
insl
nop
and
mov
jecxz
fsubl
dec
rcrb
add
fdivs
out
push
jp
pop
xchg
and
popa
sub
inc
xor
adc
jge
mov
dec
movl
fdivs
ja
sub
cli
ss
fs
gs
pusha
mov
out
pop
pop
rcrl
mov
cmpsl
adc
adc
es
jmp
fwait
pop
sbb
lret
xor
es
fst
cmp
int
push
rorb
aam
mov
in
rorl
cmp
sbb
call
xchg
dec
jp
ret
or
pop
sti
xchg
xor
enter
ds
idivl
daa
jb
shll
jb
insl
add
push
into
mov
cs
xorb
mov
xor
test
cmp
mov
les
lea
jmp
test
subl
push
jno
scas
jecxz
mov
movl
fxch
push
jl
xchg
inc
test
dec
es
loop
xchg
push
and
jmp
orl
xchg
ret
jg
out
and
jg
scas
hlt
inc
ja
fdivrs
mov
xchg
mov
pop
je
mov
nop
int3
out
outsb
dec
adc
cmp
in
cmp
ror
out
aad
lods
mov
cmp
fstpt
fisubrl
mov
lock
scas
inc
and
mov
sub
sub
lret
dec
ss
inc
push
fsts
inc
jo
inc
jno
call
jge
cs
adc
jmp
stc
mul
pushf
jmp
push
imul
lock
adcb
fdivl
and
add
cmpxchg
and
mov
fisttps
leave
inc
adc
es
in
ljmp
push
bound
sub
sub
ja
and
aam
push
pop
int3
mov
xorb
push
ja
hlt
insb
clc
shrl
push
fmul
xchg
cmc
ss
dec
in
hlt
mov
push
add
push
incb
mov
in
inc
testl
mov
pop
jb
push
lret
adc
mov
into
test
imul
in
mov
lods
ljmp
fcmovnb
test
lea
lea
mov
stc
std
or
push
fdivr
cmp
das
imul
stos
jp
xchg
cmp
xchg
sub
arpl
ror
add
mov
js
jae
push
jl
imul
push
cmp
outsb
insl
js
add
and
or
adcl
xchg
push
int
mov
ja
and
clc
enter
fwait
mov
lcall
cmp
mov
es
inc
ja
mov
shlb
notl
gs
aad
adc
cmp
rcll
xor
repnz
sbb
test
and
jo
and
push
dec
sub
out
adc
pop
lock
adc
push
lds
xchg
jo
add
punpckldq
pop
sahf
lea
test
dec
cltd
adc
ret
lret
in
pop
xor
arpl
mov
dec
or
xchg
int
adc
jmp
in
scas
cmp
outsb
outsb
ja
xchg
fst
lds
pop
jbe
push
push
mov
jbe
mov
adc
popf
lret
jp
pop
xchg
outsb
cli
rcl
jg
and
pop
cmovne
mov
sub
mov
outsl
nop
hlt
xchg
mov
and
jno
cltd
jae
add
jg
xor
mov
adc
add
cmp
loopne
movl
jne
sbb
and
mov
fbstp
sub
mov
dec
outsl
es
sti
adc
rep
into
sub
mov
out
shrl
xchg
xor
aam
jge
sarl
pop
mov
dec
adc
fidivl
xchg
push
mov
fdiv
xor
shr
shlb
incb
cli
outsb
lcall
or
mov
in
push
xchg
pop
dec
sbb
stc
rcl
outsb
sbb
push
or
or
es
repnz
cmp
xor
cmp
pop
jne
rorl
dec
data16
push
fnstcw
aad
pop
xchg
fdivs
andl
aam
jae
lret
xchg
sbbl
mov
pop
pusha
cwtl
iret
out
mov
inc
xchg
sub
push
xchg
lret
outsb
dec
inc
sti
gs
stos
orl
cmp
mov
push
mov
add
cmp
mov
fbstp
out
std
repz
adc
idivl
sti
aaa
jnp
push
pushf
push
roll
aaa
cs
cmp
mov
rcrb
popf
out
inc
lcall
int3
enter
inc
push
cmpsl
or
cmpsl
push
cli
ret
fidivs
mov
testl
mov
ffree
cmp
pop
addl
pop
xor
jmp
cwtl
out
ds
fnsetpm(287
dec
or
cld
je
add
aad
int3
cmp
cmp
add
out
mov
lcall
negl
adc
xorb
xor
xchg
mov
jae
int3
sub
out
cmp
std
out
cmp
jmp
dec
lods
xlat
dec
lret
lods
xor
loopne
fsubrl
sti
mov
xor
mov
sti
pop
and
xchg
mov
jno
push
std
sar
bound
outsl
mov
aas
repz
sahf
lods
ficoms
sti
fwait
cld
gs
sahf
cmp
mov
pop
sahf
or
roll
call
hlt
loopne
jns
call
out
pop
sub
or
dec
lods
xchg
repnz
lret
out
das
les
mov
mov
ljmp
xlat
lahf
leave
jg
pushf
dec
test
add
iret
xor
jo
xor
xchg
insl
popa
or
mov
mov
das
nop
dec
int
or
orl
cmp
adc
mov
dec
inc
in
sbb
inc
lret
push
jl
mov
cli
pushf
jb
rcll
ret
mov
mov
jno
shll
outsl
icebp
pushl
adc
fnstsw
xchg
cld
sbb
inc
mov
shl
cmpxchg
les
dec
mov
push
jb
mov
fwait
and
fnsave
mov
fsubr
fsts
popf
xor
add
cmp
inc
fisubs
scas
pusha
inc
cmp
ret
dec
xchg
sbb
and
pop
fiaddl
int3
lods
mov
mov
addr16
pop
repz
mov
push
outsl
mov
mov
and
cmpl
int
repz
sbb
jg
mov
adcl
and
mov
adc
cmp
mov
js
mov
cmp
fnsave
or
out
add
popa
rorb
mov
xchg
nop
icebp
outsb
inc
or
pusha
mul
stos
sub
imul
idivl
pop
cwtl
lods
fcompl
imul
test
js
cld
mov
cmp
cmp
add
or
xchg
iret
pop
push
mov
iret
cmp
sarb
xor
pusha
dec
push
sub
adc
adc
push
mov
fwait
xchg
int3
mov
push
dec
jb
fidivl
push
push
das
mov
ficoms
push
mov
enter
out
ss
mov
sbb
out
movsb
repz
sbb
sbb
cmp
jle
and
es
repnz
cld
cltd
scas
mov
and
mov
jne
sbb
ja
push
pop
ja
ret
movsl
lock
adc
outsl
push
addb
and
or
sahf
mov
add
sbb
mov
adc
add
insl
movsl
cmpsb
stos
fnsave
loopne
cmp
adc
cmp
insl
dec
es
sub
push
hlt
mov
cmpsl
mov
jmp
stos
jno
adc
into
cmpsb
jae
es
jge
push
dec
cld
ljmp
inc
mov
je
xchg
stos
sar
push
je
aaa
arpl
lahf
inc
push
cmovb
scas
mov
enter
push
jnp
inc
fmull
and
data16
mov
cmc
dec
and
add
lahf
aaa
loop
loope
inc
xlat
xchg
xlat
js
cmp
test
jns
ficoml
adc
ss
cs
test
inc
cli
sub
adc
aaa
lcall
sub
add
popa
jmp
loopne
adc
xor
cmp
or
jp
loop
je
xchg
mov
adc
push
ljmp
call
dec
cmp
mov
mov
sbb
das
mov
mov
sbb
xchg
pop
out
xor
hlt
jae
addl
push
iret
cli
sbb
mov
fbld
dec
xor
dec
loope
rcll
pop
aad
push
lret
push
mov
cmp
mov
addr16
xchg
leave
dec
mov
fwait
scas
shlb
dec
sbb
jb
enter
lea
or
add
cmp
cmpsb
imul
cld
push
mov
dec
sbb
adc
xor
cmp
rorb
cwtl
mov
add
or
jmp
sbb
mov
sub
ja
inc
movsb
xor
add
popf
out
add
pop
mov
adc
call
in
push
pushf
fsts
out
push
mov
mov
aad
cltd
fnsave
movsb
fs
or
push
mov
sub
repnz
je
push
xchg
lds
mov
dec
aaa
fucomip
mov
ficoml
push
ret
jge
out
frstor
or
in
cld
les
loope
negb
push
jnp
gs
fs
cmpsb
lret
fsubrp
xchg
lds
push
je
mov
xor
cmpsb
pop
mov
and
and
daa
pushf
and
test
mov
cs
call
enter
mov
jno
test
add
jae
jecxz
xchg
loope
push
fldt
dec
vmovddup
sbb
mov
sub
es
and
inc
mov
jbe
dec
xchg
scas
dec
adc
leave
stos
xchg
das
js
xlat
adc
imul
test
and
loopne
dec
push
adc
test
dec
cltd
inc
sub
mov
int
jl
insb
xor
or
fisubl
insb
jne
pop
insb
push
sbb
and
das
push
rorb
mov
push
add
and
cmp
test
xlat
xchg
add
adc
xchg
out
pop
jmp
xor
cltd
and
pop
ret
mov
subl
aam
sarl
in
and
mov
stos
sarl
adc
and
test
xchg
jb
or
pop
adc
pop
ds
popf
xlat
movsl
aam
and
adc
call
dec
adc
into
das
xor
aaa
popf
cmpsb
ds
add
dec
mov
test
pop
dec
mov
into
movl
mov
pop
or
xrelease
mov
imul
mov
ret
testl
xor
das
sub
jbe
mov
cld
mov
in
mov
cli
cltd
or
inc
and
pop
or
xor
inc
pop
fnstenv
push
lahf
loopne
and
or
and
fcmovnb
sub
loop
jbe
lahf
cmp
cs
je
fs
shlb
inc
jg
rorl
sar
imul
arpl
jno
pop
outsb
inc
inc
aad
fimuls
mov
push
adc
mov
mov
dec
and
popa
xor
enter
jb
ud1
sub
mov
out
mov
lret
dec
sbb
cmp
in
fcomps
sbb
mov
in
insl
mov
and
cli
stos
xchg
adc
sub
fnstcw
xchg
dec
adc
add
xchg
stos
outsb
gs
mov
push
inc
xor
pop
aaa
fisttpl
push
pop
loope
and
pop
dec
cs
mov
pop
mov
mov
pop
push
stos
cltd
mov
ficoml
dec
mov
jmp
inc
add
sahf
xchg
cmp
push
dec
xchg
pop
daa
push
outsl
out
dec
inc
sbb
pop
xlat
popf
cmpsl
test
xchg
fwait
xor
sti
sarl
mov
mov
sub
sbb
jne
aad
mov
fisubrl
lock
je
subl
es
cmpsb
push
popf
mov
push
sbb
shll
int3
xchg
add
lret
repz
pop
lret
push
add
shll
mov
lods
push
mov
xor
outsl
sub
mov
jge
sub
xchg
push
push
mov
adc
int
jecxz
leave
sarb
and
push
nop
out
in
sbb
mov
popa
outsb
data16
jb
stc
xchg
and
dec
mov
or
add
or
in
pop
jno
jae
ds
ds
lret
movsb
adc
test
push
adc
jb
mov
xorb
int3
add
pusha
xchg
aam
lock
adc
lods
adc
adc
mov
shll
mov
cwtl
dec
pop
fstl
pop
dec
dec
mov
outsl
jno
bts
xlat
rclb
mov
fs
pop
sar
inc
sub
fists
push
jns
mov
inc
test
jl,pt
pop
mov
pop
insb
mov
jle
fs
mov
adc
xchg
cmp
mov
insb
add
adc
mov
out
sbb
js
mov
sbb
and
pop
mov
inc
insb
das
xor
mov
push
dec
aam
or
add
mov
mov
mov
cmpsl
std
sub
inc
cmp
pushf
pusha
adc
leave
imul
xchg
iret
sahf
lret
dec
sub
out
lds
aam
test
jns
jns
and
lods
cltd
xorb
and
dec
sbb
jl,pt
divb
jp
je
sbb
scas
jae
ss
push
pop
sbb
inc
aam
push
and
mov
iretw
in
cltd
mov
ja
movsl
stos
lcall
push
add
mov
cmpsb
sub
sbb
arpl
adc
or
mov
out
fwait
xchg
push
xor
mov
scas
jns
lods
ss
aad
or
pop
xlat
adc
daa
sti
iret
lret
popa
icebp
push
xchg
lds
mov
js
cmp
fisubrl
jle
test
rcll
xor
pusha
inc
push
out
mov
mov
stos
js
or
dec
ljmp
ret
xorl
mov
adc
jge
outsb
jp
mov
scas
pop
push
movsb
cmp
and
aaa
ficompl
repz
sbb
rcl
mov
inc
js
lods
std
orb
mov
int
in
scas
xor
or
mov
popf
dec
mov
push
xchg
mov
push
push
test
push
pop
mov
mov
mov
daa
mov
mov
jbe
and
mov
mov
out
int3
mov
xor
dec
mov
dec
in
outsb
daa
push
sub
imul
cmpsl
or
inc
aaa
xchg
iret
xor
adc
inc
mov
ret
rcll
mov
adc
push
inc
mov
test
repz
sbb
ja
shlb
aam
pushf
add
hlt
mov
mov
or
pop
mov
cmp
pop
inc
in
pop
sub
add
cli
int3
es
aaa
in
ljmp
xchg
cmp
pushf
pop
sub
fisubrs
fisubs
into
push
gs
pop
jnp
add
ss
add
xchg
xchg
repz
dec
lea
add
xchg
pop
and
fs
cmp
inc
loopne
push
inc
ror
icebp
xorl
inc
icebp
dec
inc
mov
cmp
imulb
xchg
sbb
push
and
js
out
nop
add
addr16
rorl
rcll
cmc
adc
inc
xchg
cmpsb
mov
fs
jl
scas
cmpsb
sub
out
js
clc
and
cmpb
mov
sbb
mov
movsb
cmp
test
mov
movsl
test
jmp
aam
inc
in
out
stos
push
mov
xlat
mov
movsl
das
pop
pusha
cmc
sti
lret
xlat
xor
fs
test
mov
add
mov
mov
scas
jb
mov
les
lds
int
sbb
push
sub
add
jp
jae
popa
mov
je
jp
fcoms
xor
push
ss
sahf
xchg
sbb
enter
adc
aam
in
mov
lret
dec
mov
or
lds
aam
jle
int
inc
push
push
push
jle
or
pop
mov
insl
jne
movsb
xor
adc
push
cmp
adc
negb
mov
ret
adc
push
sbb
pop
pop
aam
pop
sar
jge
test
pop
sub
cld
std
aad
jp
sbb
movsb
xchg
push
in
les
cmp
xchg
sub
push
jp
mov
sbb
std
movsl
inc
sbbl
xor
es
pushf
inc
jmp
pop
and
je
cli
pop
sti
or
inc
in
inc
cmp
mov
gs
int3
ljmp
scas
stos
add
push
lcall
push
xchg
rorb
faddl
pop
cmp
adc
lahf
push
and
clc
cmp
std
xor
stos
lea
lahf
mov
or
lcall
pop
pop
jp
inc
cmp
sub
fdivl
in
mov
push
test
into
rsm
enter
iret
adc
bound
sahf
add
xor
mov
inc
bsr
mov
daa
outsl
es
add
lret
jb
xchg
ret
cmp
mov
sbb
adc
mov
add
sub
fdivrs
in
jg
lcall
or
add
xor
iret
out
sahf
pop
stos
scas
mov
divb
shrl
inc
fst
adc
sub
jg
out
bswap
out
and
testl
add
mov
in
ret
mov
ja
or
pop
insb
dec
push
xor
int
repz
sub
pop
xor
popw
adc
adc
xlat
outsl
mov
aaa
pushf
sub
push
mov
xchg
xor
mov
aas
les
fs
in
add
adc
test
adc
xor
sbb
add
outsb
add
loopne
xor
xorb
data16
test
mov
jno
xor
stos
xor
andl
sub
out
sahf
xchg
out
incb
cmp
loopne
cwtl
xchg
jb
mov
dec
mov
push
insl
inc
pop
stc
ret
cmc
adc
sub
cli
jg
lods
pop
cltd
cli
cmp
in
dec
shll
jns
xor
hlt
or
add
push
jmp
push
mov
addr16
aam
lock
aas
call
pop
into
fmull
cltd
lods
jo
jle
jle
xchg
dec
stos
pop
add
jg
mov
leave
call
dec
insl
dec
jmp
cmpsl
jo
mov
pop
dec
mov
inc
mov
ffree
fdivrs
jb
jns
in
popa
mov
push
and
or
add
test
jl
xor
or
dec
pop
ljmp
inc
mov
xor
or
pop
mov
add
lock
lret
mov
jmp
mov
fnstcw
ficoml
divl
cmpsb
push
jge
sti
aad
push
out
pop
jo
in
notl
pop
pop
jle
sahf
jecxz
pop
into
ds
cmp
ljmp
adc
in
adc
jle
mov
js
mov
repnz
je
xchg
mov
push
stc
insl
adc
xor
xchg
aam
mov
mov
push
cmpl
inc
aam
out
icebp
pop
mov
mov
aaa
cwtl
shll
and
lret
or
ja
pop
ret
push
insl
pop
push
fisttpl
cmp
aad
xchg
insl
cli
stos
sub
jo
or
jnp
fwait
jmp
push
notl
mov
clc
cmp
fucomip
mov
jno
or
sub
sub
jne
cmp
add
mov
stos
inc
dec
inc
outsl
lea
pop
imul
imul
dec
push
sbb
sti
mov
sub
cld
xchg
cmp
shll
dec
inc
rcl
xchg
vminsd
pop
stos
in
jno
outsb
shr
in
or
jge
sub
mov
dec
jge
stos
ret
pop
xor
dec
daa
mov
xor
mov
jg
sub
or
mov
mov
jno
adcb
xor
lret
xor
nopl
lcall
clc
lahf
or
push
jns
jae
rorl
repz
xchg
enter
pusha
pop
ja
fisubrs
fnstsw
xchg
fwait
xchg
xchg
dec
daa
cmp
sub
push
push
mov
out
inc
sbb
push
jmp
adc
add
loope
sarl
xchg
idiv
mov
lahf
in
xchg
in
lods
xlat
pop
bound
movb
dec
movsl
lods
imul
dec
add
adc
test
inc
pop
imul
sbb
or
push
test
add
lds
lcall
out
jns
pop
negb
gs
jmp
inc
mov
pop
and
cmp
leave
xchg
dec
in
fmuls
jo
cli
jp
xchg
in
sbb
subl
mov
inc
dec
sub
pop
cmp
pop
jecxz
aad
fdivs
sub
fcoml
dec
xchg
xchg
ds
dec
jns
xor
ljmp
jne
daa
or
std
sbb
fisubrl
lret
sub
cmp
cmp
and
push
pop
mov
sti
xchg
sbb
pushf
cmp
push
push
divb
mov
out
insl
xor
lret
mov
xlat
push
mov
into
mov
push
jno
bound
aam
jecxz
fisttps
mov
lock
push
push
lock
mov
jg
hlt
xchg
mov
xchg
sub
cs
clc
int
sarb
and
in
jge
jb
ds
mov
jae
push
sbb
cmc
cli
and
jl
and
pushf
inc
out
and
mov
leave
dec
imul
addr16
int
hlt
mov
imul
cltd
mov
xchg
pop
test
lods
nop
negb
pop
in
pop
cmp
imul
ss
fmull
stc
incb
mov
adc
mov
xor
out
push
mov
jecxz
xor
pop
cwtl
dec
cltd
jae
cld
insb
gs
std
adc
lret
fwait
xchg
cld
push
sub
sbb
sahf
sbb
adc
jp
fadds
cmc
imul
adc
fcompl
ljmp
sub
mov
jl
xor
int3
pusha
sti
insb
jl
pop
scas
arpl
clc
loope
loop
push
lods
pushf
mov
ret
sub
jo
movsb
popa
add
test
and
lret
xchg
out
cmpsl
xchg
xor
scas
es
aad
jae
aad
xlat
cmp
imul
jae
mov
sub
lea
mov
lahf
pop
xlat
ds
rol
jno
or
mov
loopne
movsl
xchg
xchg
icebp
jnp
test
das
mov
adc
mov
lcall
pop
add
loopne
push
fwait
ja
aad
fldl
cltd
add
cs
lret
sub
js
jbe
xor
or
cmp
js
xchg
pop
sbb
int
gs
rcrl
push
in
outsl
cmp
or
imul
xchg
ljmp
fwait
sahf
mov
add
dec
pop
xor
fs
adc
or
stc
push
sub
movsb
sub
sbb
pop
pusha
mov
lds
in
sub
mov
iret
into
adc
sbb
sbb
inc
test
jnp
sub
pop
adc
sbb
adc
leave
fwait
pop
std
add
cmpsl
pop
jge
negl
std
or
push
in
mov
and
cmp
not
faddl
loope,pt
fsubl
pop
pop
dec
xchg
push
push
std
or
mov
pop
out
mov
mov
out
fimuls
xlat
sub
in
fcmovne
test
push
add
insl
xor
icebp
jae
sbb
push
pop
mov
push
fucomp
test
mov
mov
mov
mulb
inc
pop
pop
pop
not
xchg
mov
aas
icebp
sbb
mov
mov
sub
ljmp
jae
repnz
inc
mov
dec
adc
mov
movsb
xchg
fldl
jae
test
sti
or
xchg
or
adc
xor
and
adc
movlps
lea
cmc
int
sahf
jb
cmp
les
sub
xor
push
rorl
js
loope
imul
push
mov
lahf
pop
sarb
push
pop
int
xor
das
repnz
mov
xor
sub
and
push
cwtl
js
push
push
rorl
decb
pusha
or
leave
lea
jns
jne
jp
ja
jo
cmp
lcall
sub
xchg
lds
aaa
lret
int3
loop
dec
dec
popf
gs
cmp
pop
stos
stos
xchg
call
loop
aas
jne
les
dec
lock
test
lea
imul
outsb
push
lcall
fbld
xchg
jmp
inc
lea
mov
notb
clc
mov
mov
cs
test
pop
shll
in
sahf
xchg
xchg
sahf
push
cmpsl
aaa
out
xlat
sahf
xchg
sbb
cmp
mov
xchg
pop
aad
fisubrs
pusha
pop
in
int3
pushf
mov
nop
sahf
sbb
movsb
lds
mov
sub
jbe
je
imul
test
cmpsl
dec
sbb
xchg
jg
fucom
dec
movsb
xor
adc
lcall
cmp
fcompl
cmp
add
in
ds
mov
sbb
movsl
push
leave
lods
jne
aad
out
movsb
pop
add
sbb
js
insb
ds
jmp
adc
rorb
dec
xor
mov
int
rcrl
push
sbb
insl
int3
push
jbe
pop
add
push
mov
or
pushf
dec
mov
cmpsb
and
sbb
jge
xor
scas
rcll
push
call
scas
xor
fsubrs
addb
je
xchg
push
push
inc
add
sub
jo
bnd
sub
cmp
lret
pushf
mov
inc
xchg
cmp
push
imul
dec
pop
cmp
pop
cli
ret
sbb
sbb
push
ficoms
pop
out
mov
imul
mov
dec
sbb
xchg
insl
icebp
iret
push
orb
mov
jmp
mov
dec
sbb
sbb
movsb
dec
ljmp
lods
cltd
xor
outsl
inc
rol
shlb
shll
xchg
mov
xor
repz
jb
rcrl
std
ret
mov
outsl
adc
test
adcb
test
std
push
mov
out
sub
cltd
xlat
es
rclb
mov
push
mov
lret
fcomip
dec
imul
pop
movsl
mov
subl
subb
aad
inc
mov
push
inc
stos
stos
movsb
dec
push
les
xchg
imul
jmp
dec
mov
insb
shlb
mov
std
sub
hlt
lret
cmpsb
lods
sub
pop
outsb
jae
repz
outsl
push
xor
xchg
cwtl
mov
cmpsb
adc
jb
mov
cmpl
imul
mov
jns
in
dec
xor
cmp
add
push
jbe
mov
dec
fldt
shr
clc
mov
addl
loope
adc
xchg
ret
rclb
or
add
xchg
inc
mov
jns
jge
scas
xchg
ret
enter
inc
inc
lock
sbb
inc
cmp
je
lods
pop
clc
sarl
push
cwtl
jns
addr16
fwait
popf
popf
insb
push
jg
aad
hlt
mov
cmpsb
inc
iret
push
ljmp
ret
xor
fwait
or
fadds
xor
je
outsl
insl
lods
mov
rcrl
add
mov
sbb
das
push
sbb
pushf
mov
jo
inc
or
inc
push
mov
xchg
and
add
adc
jmp
lds
ss
xor
xor
adc
xchg
lods
jmp
pusha
mov
or
xchg
loop
es
adc
mov
sub
xor
ss
pop
loope
mov
incl
push
outsl
mov
movsb
mov
mov
fwait
pop
hlt
fsts
sub
sub
add
insl
xchg
pop
lret
adc
adc
pop
sahf
cmp
xchg
mov
daa
mov
test
rolb
ljmp
icebp
cmpsb
add
incb
decl
js
or
in
adc
mov
sar
nop
cwtl
push
pop
pop
lds
and
inc
cwtl
pop
xor
hlt
out
dec
mov
inc
out
scas
add
xchg
jle
sahf
rcrb
pop
cmp
pop
mov
scas
jge
mov
cs
sbb
jbe
dec
pop
repnz
test
shl
push
jle
xchg
push
mov
in
mov
mov
inc
movsl
mov
jl
loop
ljmp
mov
sub
loopne
test
add
popf
pop
je
std
lret
inc
cmp
xor
mov
or
pop
decb
mov
sub
inc
dec
xor
in
xchg
push
and
dec
push
cld
repz
pop
xchg
call
aam
dec
cmp
push
cli
ret
test
test
jl
mov
dec
cmp
xor
fidivs
arpl
scas
lahf
pop
cmovno
dec
jns
lock
fwait
inc
fwait
repz
mov
inc
repz
mov
icebp
pop
mov
xlat
out
cmpb
int3
incb
test
xchg
sbb
fstps
adc
mov
adc
aas
rol
sub
fwait
push
xor
je
outsl
inc
js
mov
mov
hlt
sbb
enter
test
pop
and
insb
imul
mov
mov
aam
mov
cmpsl
int3
jp
mov
into
push
ret
mov
test
sbbl
sarl
test
jae
aam
or
ljmp
xor
and
stos
cmp
jb
push
push
divb
lret
dec
scas
ds
jo
sbb
enter
mov
fwait
insl
cmp
fmulp
in
xchg
test
dec
cmc
dec
xor
push
cmpl
xor
cltd
test
es
push
xchg
sbb
sub
cwtl
lock
inc
es
inc
fdivrl
cltd
cmp
dec
xchg
and
cs
adc
push
xor
movsl
inc
jmp
and
adc
jmp
pushf
hlt
je
fsts
les
jb
cld
sbb
sub
insl
xchg
cwtl
leave
aam
movsb
je
cli
xchg
out
es
repnz
sar
sub
scas
clc
rorl
xor
jge
mov
pop
dec
xchg
pop
mov
fs
sbb
repz
and
sub
lds
pop
pushf
loope
loopne
add
insl
or
pop
shr
mov
xchg
add
sbb
dec
lods
adc
jne
inc
pmaxub
and
aaa
sti
addb
xor
out
push
inc
push
cmova
pop
cmc
xchg
adc
cltd
rcrb
shl
aam
mov
add
sbb
dec
xor
mov
ror
js
enter
xor
xlat
movsl
imul
dec
test
cmp
sbb
xchg
xor
xor
jne
pusha
push
ds
cmp
push
pushw
pushw
mov
pshufw
dec
mov
mov
xchg
or
jnp
mov
addl
and
shr
ss
mov
or
orb
fstps
sbb
je
out
jmp
cmpsl
insl
mov
insl
mov
push
push
fcmovu
lcall
mov
ss
out
jge
mulb
aad
idivl
ja
cmc
idivl
out
jns
ja
and
mov
bound
pop
mov
insb
xchg
sub
imul
inc
rcr
cmp
mov
std
jecxz
xchg
mov
int
fbld
mov
jecxz
ja
imul
pushf
xor
sbb
mov
dec
adc
mov
aaa
into
xor
sub
les
inc
rcr
xor
pop
mov
jbe
sbb
jno
sti
pusha
cltd
mov
xchg
fs
xor
cwtl
sti
es
add
adc
mov
jno
imul
lods
enter
loope
cs
shlb
and
sbb
xor
sub
hlt
mov
push
jle
cmp
mov
and
cmp
in
je
out
push
in
lcall
scas
and
call
nop
mov
out
mov
popa
inc
int3
movsb
xchg
cmpl
cmc
sub
sub
mov
js
inc
jnp
add
push
dec
mov
sbb
mov
pop
inc
fistl
xor
and
and
dec
out
repz
push
push
xchg
sahf
inc
or
push
dec
push
dec
cld
jl
push
popa
dec
sub
xor
outsl
mov
sahf
mov
jle
adc
add
rclb
roll
jl
mov
add
inc
inc
fstl
mov
cmp
aas
push
outsl
cli
xchg
pop
xor
add
push
enter
xchg
daa
mov
aas
insl
and
mov
mov
mov
and
sub
xor
sub
subb
pop
fildl
jne
test
xchg
call
and
xor
ja
into
sar
fdivr
inc
jbe
pop
imul
dec
sbb
or
add
xor
cmp
rcrl
adc
loopne
mov
jns
and
sbb
xor
out
daa
jle
ss
sub
push
lretw
jbe
inc
jo
sub
add
or
fsubrp
cltd
loopne
insl
xchg
jo
gs
nop
mov
jecxz
push
lods
mov
push
push
iret
ss
fisttpl
adc
mov
mov
sbb
ja
and
mov
add
adc
or
gs
shrl
sbb
icebp
mov
xlat
sahf
bound
inc
lret
cmp
cmp
add
mov
loopne
dec
pushf
pop
sahf
xchg
xor
sahf
gs
addl
jbe
pop
outsb
cmp
int
out
pushw
jmp
outsl
xor
movsl
jb
movsl
das
ret
adc
xchg
mov
mov
mov
or
jbe
stos
cmp
pop
add
neg
cmp
js
cmp
ss
mov
fwait
push
add
popa
movsb
dec
call
fs
adc
sbb
push
mov
inc
push
mov
adcb
jg
or
add
pop
outsl
sbb
aad
add
mov
dec
inc
cld
lret
pop
xor
sub
add
cmpsb
callw
or
icebp
push
lret
cmp
xchg
push
push
lods
enter
lcall
inc
jne
mov
out
pusha
mov
cmp
stos
fiaddl
mov
push
test
xchg
lahf
add
cs
clc
es
dec
movsl
hlt
xchg
addb
jp
iret
push
adc
leave
enter
cmpsl
push
mov
lods
adc
sub
lock
mov
mov
scas
loope
aad
and
rorl
mov
inc
cmpsl
test
mov
pshufw
xchg
pop
adc
mov
lret
or
fcomi
iret
or
mov
aam
jns
cmp
jns
iret
xor
and
mov
xor
shrb
pop
sbb
fwait
mov
cmp
rclb
nop
or
aam
pop
test
fldt
in
cmp
repz
push
sahf
dec
jno
dec
sub
mov
stos
xor
mov
fsubrp
fwait
dec
jae
scas
lock
out
add
lods
test
xor
daa
lret
rorb
mov
ret
ja
adc
xlat
add
cmc
dec
mov
xchg
loope
cmp
repnz
add
out
mov
int3
test
jno
pop
cmp
mov
cmp
xchg
fs
rcrl
inc
dec
ja
xchg
xchg
out
std
int
adc
jbe
inc
cwtl
mov
incl
pop
mov
out
mov
xor
jp
pop
inc
add
pop
xlat
or
aad
xor
movsl
loopnew
push
mov
test
mov
sbb
or
imul
lret
mov
clc
mov
sbb
repnz
jp
xchg
adc
pop
inc
loopne
cmp
cmpsl
mov
mov
jl
cmc
mov
fwait
inc
arpl
ftst
fistpl
test
sbb
mov
and
pop
jp
push
jb
lock
pop
hlt
or
ret
outsb
xor
dec
lret
jae
in
or
mov
bound
inc
mov
mov
fsubrs
mov
push
lcall
dec
pop
cmp
push
mull
dec
inc
xor
and
scas
or
sarb
scas
push
bnd
xchg
pusha
int
mov
pop
lret
popf
sub
pop
inc
insb
in
sahf
inc
enter
sub
push
mov
test
mov
les
fstps
inc
cmp
push
std
ret
cld
pop
mov
cli
jp
int3
or
fildl
jo
fsubr
or
jp
inc
sub
shrb
add
addr16
mov
sbbb
dec
jecxz
repz
jno
les
jb
inc
nop
fsubs
mov
mov
jb
daa
and
int3
mov
dec
scas
ret
sub
imul
out
cmpsb
dec
push
movsb
ret
mulb
add
cmpsl
std
test
or
mov
sub
add
xor
scas
inc
xor
mov
imul
in
cmpsb
pushf
sub
out
lods
xlat
std
push
mov
and
mov
jo
adc
sbb
stos
out
xchg
mov
pusha
inc
jno
jo
inc
daa
rep
or
loopne
imul
aam
imul
test
jo
fnsave
pop
xchg
jns
adc
aaa
xchg
cmp
push
mov
mov
add
imul
lock
ret
mov
and
insb
shl
jl
mov
lods
pushf
and
jo
xor
sbb
dec
add
cwtl
pop
iret
les
iret
fwait
xor
inc
int
inc
daa
lds
lock
ja
and
lcall
and
rol
mov
ret
add
xchg
pop
imul
movsl
mov
icebp
mov
cltd
out
xchg
pop
int
pop
adcl
jne
and
pop
xchg
mov
rcrl
std
and
outsl
adc
aaa
mov
mov
outsb
ret
leave
add
xchg
cmp
mov
ds
stos
sbb
push
imul
je
fst
and
xchg
js
mov
addr16
mov
in
bound
cmp
mov
test
mov
shlb
cmp
out
add
inc
dec
jno
pusha
pop
jb
push
pop
mov
les
pop
jecxz
loope
ds
iret
repnz
sti
addr16
sbb
jge
mov
xchg
inc
mov
jmp
fcoms
pushf
cmp
insb
jecxz
pushf
fwait
inc
inc
nop
inc
sub
fs
adc
dec
ljmp
push
dec
cltd
xchg
push
xchg
icebp
cmp
dec
mov
lods
rolb
mov
iret
mov
mov
sub
das
xor
cld
les
jns
fisttpll
and
rcll
dec
or
into
pop
bound
data16
aam
sbb
dec
mov
or
pop
aaa
xor
pop
loope
sub
loopne
lock
call
mov
push
push
cwtl
fnstsw
xor
cmpsb
xor
mov
stos
fstpl
call
xor
push
imul
or
mov
aas
sbb
push
or
gs
dec
ret
out
and
ja
sbb
adc
mov
adc
dec
stos
faddl
mov
in
xchg
inc
adcl
mov
mov
jo
lahf
fstps
ja
outsb
push
mov
nop
mov
or
xlat
or
fwait
mov
fwait
sbb
cmpsb
dec
cld
ret
gs
dec
ftst
call
add
sarb
dec
sar
pop
andl
adc
int3
notb
sub
mov
dec
sub
inc
push
lock
hlt
lds
push
nop
cmp
or
xchg
or
cmp
mov
into
cmp
loop
or
mov
xor
mov
jbe
and
in
push
mov
dec
jns
or
nop
push
push
enter
ret
cmpsb
jb
bound
and
mov
out
pop
ss
jns
repz
cwtl
sub
push
mov
les
sub
sub
iret
adc
aas
dec
aad
and
pop
pop
sbb
pusha
les
stos
mov
out
andl
push
jle
xchg
pop
arpl
ret
test
shrl
push
or
xlat
nop
loopne
in
cmp
loopne
jnp
or
push
lds
jb
out
lcall
clc
cmp
pop
cmp
xchg
add
adc
fstpt
mov
mov
sbb
pop
in
pop
xchg
jge
mov
inc
xchg
mov
or
and
inc
jp
pop
inc
adc
pop
scas
dec
lods
or
int3
mov
sahf
fsin
out
or
adcl
fs
fcoms
mov
outsl
mull
outsb
xor
and
mov
rol
subb
add
fcmovnbe
sahf
adc
inc
dec
cmp
cmp
jno
add
sbb
test
sti
adc
int
fcoms
ja
sub
loope
imul
into
filds
jns
jge
or
pop
pop
sub
mov
mov
loop
adcb
sbb
mov
addl
xchg
das
jl
mov
inc
cmp
divb
sbb
cmp
popf
fiadds
inc
and
xchg
iret
sarl
or
pop
cmpsb
mov
inc
into
les
inc
sub
addr16
cmpb
xor
aas
sarb
inc
mov
das
aas
ret
cltd
adc
push
pop
sub
mov
pop
inc
fdivr
loop
flds
mov
lods
pop
and
nop
clc
pop
mov
xor
mov
lods
jecxz
in
xor
sbb
shll
push
nop
inc
mov
pop
xchg
loop
sbb
xor
push
adc
xchg
outsb
mov
pop
and
jb
js
mov
push
fdivs
in
jb
mov
stos
popa
into
ficomps
jae
popa
jae
ret
out
ret
mov
dec
cmp
into
inc
leave
ljmp
int3
sub
ss
adc
out
fisubs
scas
fcoml
jnp
mov
popf
adc
or
adc
and
add
pop
jnp
inc
mov
aaa
pop
jl
xorb
xchg
out
or
pushf
ss
fcmovnb
ret
jp
popa
mov
adc
flds
or
cld
push
mov
dec
leave
cmc
jl
gs
ja
push
out
mov
xor
sub
out
xchg
cmp
test
ja
cmp
inc
xchg
iret
mov
cmp
loop
mov
addr16
fwait
inc
or
and
subb
es
pop
xchg
xchg
or
fucomi
jbe
push
rcrb
decb
sbb
jle
das
add
je
divb
in
icebp
aam
mov
insl
mov
push
sarl
cld
sub
ss
adc
jnp
inc
mov
popf
fldlg2
repz
xchg
jl
push
or
call
rcrl
imul
xchg
push
aad
pop
xchg
or
idivl
mov
stos
fistpl
pop
sbb
mov
int3
stc
aad
push
or
adcl
xor
imul
sti
int3
mov
es
popa
inc
fmulp
xor
pop
adc
cmpsb
mov
loop
xor
xor
pop
ss
lods
jae
rorl
lret
mov
jo
sub
sub
test
jmp
ret
out
xchg
aaa
mov
scas
dec
mov
inc
jnp
imul
push
adc
mov
loop
add
enter
cltd
dec
push
add
fcompl
xlat
jecxz
jp
push
cmp
mov
movsb
mov
sub
adc
je
mov
xchg
jecxz
and
and
mov
mov
leave
push
dec
jns
and
jg
movsb
and
jnp
pop
arpl
add
jno
and
mov
cmp
sub
jo
dec
mov
movsb
cmp
sub
jl
jecxz
lret
bound
xchg
sbb
xchg
aas
mov
arpl
rolb
jle
insl
shrb
fists
xchg
inc
mov
jmp
pop
jns
dec
sbb
or
mov
add
ss
dec
xchg
fisttpll
jg
push
sub
stos
sti
cld
sub
int3
mov
jbe
lock
repnz
or
sbb
testb
add
out
inc
sbb
lahf
jbe
mov
mov
xor
imul
lock
fisubs
adc
inc
pop
mov
notb
loopne
jnp
movsb
loopne
insb
sub
repnz
pop
xor
add
push
fcompl
push
lds
jge
loop
cmp
movsb
or
or
in
xchg
out
data16
jbe
divl
sub
inc
lahf
jp
sti
movsb
dec
mov
mov
imull
test
mov
fstl
jmp
out
lods
ds
in
ret
jmp
push
out
jge
call
call
jp
sti
shlb
test
shll
sub
sarl
out
in
stos
jge
dec
mov
jae
divl
lahf
jns
sti
pushf
dec
mov
out
ds
jp
sti
shlb
jmp
lds
in
out
xor
imul
jge
sti
in
adc
pop
ds
fisubl
ljmp
jge
jge
adc
push
ds
mov
jmp
out
lods
dec
mov
sti
sti
imul
sti
jmp
out
scas
dec
mov
fiadds
cli
and
enter
jge
xchg
out
mov
in
out
daa
add
aam
and
clc
pop
mov
and
std
fidivl
push
lret
mov
iret
mov
stos
lods
scas
sub
mov
pop
call
loop
and
cld
iret
pop
sub
in
fdivr
cmp
out
fdivrp
mov
nop
ds
cmp
mov
scas
mov
fwait
pop
pop
mov
call
in
sbb
mov
inc
gs
call
iret
int
sbb
cmpsl
daa
jle
and
arpl
outsl
sub
mov
push
push
inc
cmp
push
mov
fwait
pop
imul
cli
push
xchg
adc
aam
jne
mov
ljmp
outsl
jb
arpl
jnp
xchg
pop
les
adc
push
mov
pop
cmp
add
movsb
mov
cmpsb
scas
stos
test
cmpsb
adc
mov
push
sub
sti
ret
sub
scas
sub
mov
dec
mov
adc
jb
fidivrs
mov
int
add
mov
repz
hlt
icebp
adc
mov
popa
push
pop
push
sub
jbe
mov
jb
mov
mov
repz
into
shlb
pusha
mov
fcmovbe
mov
je
shr
sahf
mov
mov
pop
pop
jg
jecxz
jne
stos
sub
ret
aam
cmp
lcall
jo
outsb
orb
or
aaa
dec
test
call
hlt
imul
out
scas
push
and
mov
xchg
hlt
lock
test
add
loopne
mov
cli
stos
cmc
lcall
push
cmc
jne
cmpsb
aad
gs
scas
lods
scas
scas
push
gs
sarl
mov
jge
adc
mov
incb
stos
popa
dec
and
hlt
test
ljmp
mov
stos
lcall
push
test
daa
jae
mov
sub
mov
lret
fstpl
lods
inc
stos
mov
sub
mov
aas
xor
mov
cld
add
mov
push
in
xor
je
out
xchg
pop
xchg
mov
lahf
sbb
cli
cli
sahf
mov
or
call
popa
xchg
cmp
pop
sbb
or
inc
and
push
movsl
fisubl
pusha
les
int
jmp
aad
loope
fs
dec
iret
not
inc
or
sbb
push
mov
mov
adc
inc
lds
bound
in
fwait
push
cmp
pop
xchg
add
or
mov
push
xlat
testb
pop
push
mov
mov
fwait
sub
je
fcom
and
push
loope
cli
jmp
mov
andl
pop
mov
in
push
pop
inc
mov
repnz
push
mov
or
loope
and
inc
xor
in
or
adc
enter
jo
xlat
pushf
fs
and
xchg
and
mov
iret
inc
daa
mov
pop
clc
test
ss
xor
add
imul
pop
out
les
cmpsb
pop
movswl
jmp
shl
xchg
push
mov
add
push
rorb
push
cli
xor
cmp
jl
sub
adc
and
jno
pop
test
dec
mov
repz
pop
inc
mulb
dec
mov
adc
jle
cmp
enter
lcall
xor
lock
pop
les
dec
mov
and
xor
es
or
test
test
xchg
mov
dec
mov
or
inc
in
mov
fidivl
adc
mov
jl
cltd
cld
jl
mov
int
jne
js
cmc
push
scas
lcall
pop
push
xorl
jmp
mov
cmc
je
inc
outsb
xchg
cmp
adc
jbe
ljmp
jae
dec
pop
mov
lea
jno
pop
dec
xor
xor
in
pop
shrl
mov
xlat
call
imul
xchg
xchg
repz
inc
mov
dec
je
jp
adc
jbe
inc
test
xchg
jmp
mov
lret
out
xchg
lret
cmpsb
mov
es
icebp
aad
add
fsubp
mov
bnd
jbe
fcompl
mov
xchg
inc
aas
xchg
pop
out
fidivs
addr16
jnp
sub
out
jl
ja
lret
dec
add
xlat
sub
daa
in
loope
rclb
bound
nop
dec
je
mov
sti
push
jge
push
test
js
push
push
cmp
inc
jnp
mov
pop
es
sti
mov
add
mov
loopne
jo
jmp
and
ljmp
jl
pushf
je
add
xor
sub
sub
inc
mov
lcall
pop
sub
mov
cltd
loope
mov
jb
std
ret
inc
sub
popf
fsubrs
cmp
cmp
cmpsl
rorl
mov
and
pop
inc
xchg
push
xchg
xlat
xor
pushf
mov
rcrl
scas
push
xlat
scas
and
loop
xchg
fcmovne
loop
mov
or
in
insl
cmpsl
clc
cmp
dec
data16
aas
cli
fidivrl
divb
out
inc
into
test
leave
pop
add
lret
inc
inc
into
repnz
mov
in
or
stc
std
add
adc
sub
shrb
scas
repnz
sbb
sub
push
xor
adc
jnp
cmpsl
sub
push
movsl
nop
push
call
divl
push
es
test
sbb
inc
out
xor
movsb
call
sbb
scas
fidivl
stos
push
scas
cmp
jge
inc
lcall
cmp
cwtl
sbb
mov
popa
aas
loope
xor
mov
add
xlat
aas
or
out
mov
pop
incl
and
clc
sbb
int
and
shll
adc
cli
xchg
jg
mov
pop
shlb
aas
sti
mov
dec
rcll
vmwrite
out
lods
sbb
clc
jge
xor
mov
jno
push
mov
jbe
fildll
jg
and
mov
std
icebp
idivb
jle
xchg
mov
add
jae
cwtl
mov
mov
jp
pop
xor
ds
lods
add
test
add
sub
dec
xchg
xchg
aam
mov
hlt
test
push
adc
lea
scas
inc
fadd
repz
dec
xchg
and
xchg
push
mov
pop
mov
lock
insl
imul
xchg
sti
adc
repnz
cmp
inc
rclb
adcb
cli
push
subl
jns
push
or
lret
je
fsubl
sbb
repz
sbb
idivl
mov
out
xchg
mov
fldenv
iret
fisttpl
jo
imul
aam
jns
loope
jnp
mov
dec
jns
outsb
gs
jmp
jmp
jle
add
dec
jnp
push
fstl
pop
push
adc
scas
aad
push
jnp
jle
mov
pop
cli
jp,pt
repnz
fidivl
test
mov
jmp
xor
dec
dec
cmp
and
dec
das
jl
dec
dec
adc
jb
pushf
xor
mov
fistpll
repnz
push
mov
clc
sub
xlat
in
fcom
xchg
aas
add
push
call
js
gs
xchg
add
clc
and
ss
sti
adc
jmp
in
pop
mov
movsb
fiadds
or
jp
mov
ret
jns
ja
jbe
out
sbb
mov
sti
mov
fldt
into
pop
cmp
lock
hlt
inc
mov
icebp
popa
pop
lods
jno
stos
add
shlb
lahf
inc
cmp
dec
jo
pop
sbb
shl
lock
xchg
xchg
pushf
neg
or
test
pop
xor
xor
sbbb
rorl
mov
or
xor
clc
es
fisubl
cmpsb
jno
negl
mov
inc
adc
daa
lret
mov
ljmp
cld
hlt
outsb
sahf
mov
rcll
pop
add
dec
push
insl
jnp
mov
or
push
aas
jno
mov
dec
ficompl
mov
cltd
popf
fwait
push
iret
inc
xor
fidivs
xor
xlat
fdiv
popf
leave
stos
repz
lahf
and
imul
mov
mov
arpl
jns
or
into
inc
fst
lahf
outsb
push
sti
jno
fildl
js
mov
fstpl
mov
outsb
cld
mov
mov
or
xorb
push
fistpl
xchg
mov
cmp
enter
jbe
cmp
ljmp
xlat
rclb
cmp
xor
dec
lahf
push
jbe
lea
mov
push
out
les
cmpsl
pop
jae
rcll
pop
sub
inc
adcb
in
xchg
sbb
mov
mov
scas
mov
stos
pop
pusha
mov
aam
jno
call
shlb
push
push
aad
sub
dec
inc
push
xchg
adc
out
stos
pop
dec
pop
mov
xor
popa
rcrb
push
lods
cmpsb
ret
leave
jmp
sub
or
icebp
xchg
mov
xor
cmp
ret
jmp
xchg
in
push
add
xchg
sbb
inc
xor
mov
int
xor
aam
jp
cwtl
cmp
aam
stos
jecxz
movsb
jbe
sbbl
push
in
and
push
rorb
lods
mov
lods
mov
pop
push
push
scas
mov
das
pop
push
scas
push
mov
or
aad
out
jecxz
mov
sub
in
dec
cld
std
ss
clc
in
je
pop
xchg
call
insb
cli
inc
xchg
inc
ja
ljmp
mov
cmp
inc
push
lea
and
inc
iret
out
sbb
rclb
mov
push
push
ja
les
idivb
std
aad
pop
bound
repz
aam
pop
pop
lds
or
jecxz
cmp
xor
or
icebp
jnp
jl
jg
dec
rolb
imul
push
xchg
xor
les
xor
fwait
scas
or
mov
ret
daa
mov
movsb
add
movsl
es
js
in
test
cltd
xchg
jg
or
ja
mov
sahf
in
add
clc
lock
sbb
xor
inc
dec
mov
jbe
loope
popf
fstps
mov
int3
out
mov
bound
jns
and
mov
sbb
clc
push
dec
pop
fistpl
aas
mov
das
rorb
lds
dec
dec
not
mov
pop
iret
dec
push
icebp
xor
insl
push
jp
lods
dec
sbb
fistpl
pop
xor
loop
stc
adc
cmp
mov
jmp
mov
call
rorb
into
cmp
jge
outsl
cmp
lods
repz
pop
mov
into
ss
lods
fcmove
addr16
mov
out
sbb
pushf
cwtl
shl
imul
out
rcrl
dec
imul
mov
push
addr16
dec
push
mov
movsl
dec
inc
ror
js
jnp
imul
fimuls
mov
push
stos
cmpl
dec
mov
clc
mov
filds
push
repnz
fwait
das
fucomi
in
cli
and
int
fidivl
mov
pop
lock
push
pop
sub
ret
push
movsb
mov
push
push
cmp
jle
dec
shrb
fldenv
lahf
push
sub
aaa
cmc
or
sub
or
lea
cwtl
stos
mov
lret
sahf
lock
dec
fcmovbe
xchg
lahf
mov
lods
jl
out
shl
mov
mov
cmp
ja
sbb
shll
shll
mov
xchg
sar
cmp
out
lock
adc
xchg
lcall
jo
cwtl
jmp
pushf
or
arpl
mov
jl
mov
subb
sbb
loope
mov
subb
in
out
cmp
push
mov
mov
rorb
mov
mov
roll
mov
sbb
mov
loope
test
aam
lret
jp,pn
aaa
call
loop
sub
inc
adcb
mov
xchg
pop
or
inc
push
adc
into
cmp
test
mov
or
jg
ja
pop
add
int
or
mov
insb
pop
cmp
enter
aas
iret
jb
sbb
pop
push
jp
fcoml
insb
lods
cltd
mov
push
xchg
mov
xor
inc
adc
int
push
enter
dec
or
mov
shll
mov
or
sub
push
mov
jl
mov
mov
in
mov
or
sbb
insl
cmp
cld
push
in
std
adc
je
jae
dec
bnd
fildll
jo
outsl
cld
add
popf
sub
sti
int
lods
xchg
sbb
icebp
sti
jle
mov
fbstp
dec
jne
xchg
xlat
inc
mov
out
sub
in
not
add
cmpb
xor
sbb
push
lret
adcl
rolb
xchg
sub
pop
rcll
das
ds
paddd
xor
inc
ret
or
ss
cmpsb
rcrb
xchg
cli
dec
pcmpeqd
xchg
mov
jns
inc
testl
jle
ss
or
test
vmread
fs
sbb
cwtl
js
push
cld
arpl
fmuls
push
cmp
xor
jne
mov
sbb
sbb
cmp
mov
and
sub
mov
in
idivb
popf
or
ss
pushf
and
sbb
lret
in
clc
cmp
mov
adc
sbb
loope
mov
mov
or
ja
loopne
dec
mov
pop
xor
cld
in
out
pop
xchg
sub
push
lock
cltd
dec
jb
dec
cmp
pop
dec
add
mov
and
add
xchg
or
pop
fnstenv
mov
push
lock
test
aas
inc
test
clc
repz
rol
jmp
scas
divb
mov
sbb
mov
repz
sub
xchg
sahf
dec
pop
movsl
and
ret
dec
fpatan
pop
cmp
insl
push
es
movsb
jg
pushl
inc
sti
inc
and
ljmp
inc
mov
inc
jg
fbstp
lahf
jo
add
in
xlat
inc
inc
sbb
xchg
cmp
push
les
cmpsb
mov
push
jnp
adc
mov
sbb
in
leave
inc
add
push
ret
icebp
mov
jecxz
movsb
cmp
jns
sbb
push
out
mov
insl
inc
push
sbb
movsb
sbb
mov
pop
addr16
ljmp
rcrl
push
icebp
mov
mov
sub
mov
xchg
sub
sbb
mov
adc
hlt
sbb
fdivrl
call
in
xor
jg
orb
push
je
cs
inc
ljmp
ficoml
push
xchg
lcall
dec
leave
sub
leave
test
bound
pop
adc
mov
pop
and
add
xor
testb
mov
leave
ret
sub
push
jne
xchg
and
cmp
xor
test
xchg
imul
inc
sub
xchg
jmp
fucomp
dec
or
pusha
inc
imul
and
in
xor
rorb
ljmp
cmp
lock
sbb
int
or
stos
mov
insb
dec
jns
fisubl
pop
jg
popf
and
mov
ret
pushf
pop
inc
mov
clc
int3
push
mov
inc
loop
add
bsf
popa
jl,pn
dec
jns
and
scas
or
cmpsl
enter
subb
shlb
cmp
mov
xchg
bound
jne
bound
pop
sub
pop
gs
inc
cmp
mov
adc
mov
aam
dec
jo
lock
addr16
push
test
fisubrs
sub
leave
jl
out
add
mov
jb
js
mov
imul
sbb
push
sub
dec
adc
sbbl
cltd
jae
mov
jo
cs
xor
push
jno
jb
sete
mov
ljmp
rorb
arpl
push
push
iret
jne
or
clc
stc
xor
popa
pop
sbbl
lods
imul
rcr
insl
in
adc
rorl
or
aam
rcrb
add
aaa
js
add
jb
jl
adc
shlb
cs
ja
pop
adc
in
cmpsb
fsubrs
lds
int
fcompl
mov
mov
jp
sbb
pop
mov
sbb
push
imul
push
mov
sbb
add
sub
mov
xor
testb
lods
add
int3
in
repnz
lods
adcl
aam
add
add
jae
cmp
adc
pop
and
nop
jns
inc
mov
test
insb
scas
or
pop
cmp
push
lret
fcompl
je
in
cli
jmp
shlb
xor
mov
cmp
das
sbb
test
loope
mov
pop
in
stos
int
cmp
aas
sbb
lret
xchg
nop
cmp
data16
adcb
ret
repz
sub
insl
lock
adc
pop
sub
or
jns,pn
outsb
stos
cmp
or
jb
pop
mov
lock
push
daa
in
mov
into
or
loope
xor
pop
in
mov
push
cmp
adc
push
popa
notl
sbb
scas
es
mov
and
push
and
mov
adc
popa
xchg
cli
jle
setle
or
mov
mov
aad
out
mov
ds
xor
push
inc
jae
mov
leave
cmp
fldl
pushf
ficoms
cwtl
push
jne
jp
enter
test
les
xchg
xchg
jmp
test
andb
call
inc
or
sub
push
pop
out
adc
adc
dec
movsl
sbb
test
and
sbb
sbb
test
or
ret
dec
mov
aam
cmp
xor
mov
ds
or
pop
add
mov
add
fadds
jbe
das
sub
out
mov
push
pop
inc
xchg
jbe
hlt
and
fcompl
xchg
aaa
test
rsm
sub
or
mov
pminub
mov
iret
jns
xchg
hlt
nop
pushf
jbe
or
mov
dec
jbe
or
mov
adc
mov
mov
je
in
jbe
xchg
in
fimuls
fldcw
repnz
dec
xchg
xor
outsl
lock
sub
dec
shll
xchg
imul
xor
pop
gs
adc
and
xchg
test
xor
sub
cmpb
out
dec
mov
mov
sbb
out
repz
sahf
dec
xchg
scas
jl
mov
out
dec
sub
aas
adc
mov
cmp
sub
shrl
sub
xchg
pushf
push
fsubs
out
inc
mov
sahf
std
movsl
sahf
insb
mov
xor
mov
ret
ljmp
loope
int
mov
outsb
jo
jnp
sbb
lahf
push
mov
adc
xor
inc
sub
out
imul
repnz
das
adc
and
inc
das
fwait
dec
add
mov
jno
xchg
jne
out
jmp
xchg
loopne
xchg
jb
in
leave
aad
lret
cmp
push
and
imulb
mov
adc
and
push
mov
xor
mov
sub
mov
adc
xchg
andl
shrl
mov
sub
or
test
in
popa
inc
das
int3
shll
sub
mov
iret
sub
xchg
imul
orl
cli
ds
popf
mov
xor
pop
jno
mov
mov
jle
rorl
aaa
scas
jp
dec
jne
add
aad
mov
adc
pusha
push
inc
mov
mov
push
or
aam
push
fdivl
jo
test
or
mov
idivl
lds
mov
shll
out
lock
mov
out
out
mov
adc
clc
pop
inc
push
clc
xchg
mov
out
outsl
jecxz
mov
mov
ffreep
cmpsb
sti
pop
outsb
mov
dec
mov
jmp
nop
cmpsl
mov
xchg
imul
into
mov
sbb
push
imul
pop
mov
jnp
mov
mov
idiv
sbb
push
cs
push
pop
loopne
insb
in
inc
insl
sbb
and
cs
int3
pop
xor
aas
mov
es
sub
pop
and
xor
cwtl
fimull
loop
testb
mov
shrb
mov
pop
lods
std
jge
jecxz
leave
jo
ret
jge
cmp
add
mov
test
push
or
and
add
mov
xor
push
xchg
jecxz
mov
sti
popa
in
xchg
or
xchg
cmpsl
les
lock
dec
bnd
inc
mov
lahf
je
outsl
mov
cmp
and
mul
dec
cld
out
lock
xchg
mov
push
pushf
test
aam
xlat
scas
nop
cmp
roll
lea
inc
dec
out
mov
push
fcomps
xor
loope
inc
jmp
xchg
adc
fbld
pusha
mov
jmp
into
or
adc
add
sub
xchg
in
or
sbb
mov
mov
inc
jno
testl
daa
sarb
subb
jp
push
loope
push
ret
jecxz
call
pop
cmp
push
adc
outsb
mov
cmp
push
push
mov
and
icebp
mov
mov
mov
xlat
arpl
not
cmp
movl
pop
dec
sub
mov
inc
mov
test
push
cli
jl
sub
into
push
push
gs
pop
xchg
fs
sub
lret
inc
stc
xchg
aas
into
sbb
outsb
int
xchg
cmp
nop
jl
in
setnp
add
iret
mov
jmp
repz
enter
inc
in
fwait
adc
outsl
xchg
pop
jb
push
addl
add
testb
out
test
fadds
mov
jo
ja
int3
fst
inc
in
js
aaa
pop
xchg
pop
xchg
mov
add
pusha
cmc
imul
mov
mov
nop
mov
test
in
pusha
mov
xor
int
loopne
jp
push
rcrl
rclb
fcoml
inc
push
or
in
sub
push
cs
sbb
es
les
adc
jno
iret
stos
cld
adc
in
movsl
adc
mov
lret
mov
dec
pop
sbb
mov
int
or
mov
out
je
mov
push
shl
cs
add
out
int3
xchg
push
arpl
jge
xor
iret
jb
mov
test
xor
movsl
adc
cli
decl
sti
sbb
in
jno
jp
stos
sub
jne
lea
xor
test
pop
popa
out
mov
mov
xor
loop
mov
addr16
call
iret
inc
mov
mov
jge
stc
or
repnz
lret
dec
adc
movsl
pop
movsw
xchg
push
mov
and
add
in
xor
mov
and
sub
cmp
jecxz
mov
inc
shll
and
push
push
lea
adc
xor
negb
pushf
fmuls
adc
aad
lretw
test
xor
lret
in
out
aas
sub
mov
scas
sub
incb
cltd
lock
dec
or
dec
in
clc
aaa
loop
push
xchg
push
push
and
out
sub
mov
cmp
pop
pop
js
pop
jge
dec
mov
aam
popf
daa
sbb
jnp
int
jg
inc
push
les
xchg
pop
aam
sti
outsl
sti
fs
scas
ss
stos
cmp
mov
out
sarb
and
jbe
stc
jnp
je
cld
jae
mov
pop
scas
in
fs
xchg
test
into
out
cmpsl
xchg
jbe
sbb
lods
dec
inc
sub
cmp
and
sbb
cs
outsl
jle
lock
in
inc
pop
mov
cs
aad
mov
add
sbb
push
add
xchg
sbb
inc
push
fcompl
pop
insl
outsl
fldlg2
sti
pop
loope
inc
ficoms
jae
insl
test
cld
lret
filds
push
push
push
cmp
scas
test
xor
daa
xchg
xorl
sbb
sub
xchg
or
adc
mov
out
xor
std
inc
pop
ljmp
les
mov
je
push
sub
or
es
cld
movsb
push
mov
push
mov
in
dec
or
fstpl
in
fwait
int3
push
adc
mov
dec
cmp
sub
xchg
loopne
aaa
add
mov
movsl
push
sbb
or
pop
sub
scas
jb
into
mov
mov
mov
pop
rcl
fwait
mov
sbb
aaa
sahf
jbe
xor
pushf
cmp
push
mov
pop
outsb
out
out
add
sub
cmpl
lock
and
lock
idivl
imul
rol
xchg
pusha
and
cmp
jo
call
add
mov
ljmp
loopne
dec
mov
popa
jmp
pop
dec
mov
ret
lcall
sbb
pop
jmp
or
mov
inc
js
js
scas
mov
xchg
je
inc
pop
cmp
cmp
jmp
mov
xchg
cwtl
mov
loope
loope
mov
shll
cmp
ss
jnp
fwait
outsl
mov
mov
pop
pop
fstpt
pusha
sbbb
mov
iret
cmc
rcll
cmp
pop
cmp
lock
bound
adc
xchg
xor
xor
xchg
sbb
xor
ret
cmp
lock
scas
or
movsl
pop
cmp
mov
and
and
imulb
js
std
imul
push
sub
pop
mov
push
fdivs
cltd
outsb
jp
idiv
pop
mov
rcr
das
xchg
stc
ss
mov
ja
push
xchg
mov
push
xlat
sbb
fisubl
hlt
idiv
inc
repnz
mov
pop
push
addb
fdivp
insl
push
dec
cld
in
or
mov
adc
aaa
fbstp
and
fidivl
mov
cmp
and
mov
repz
test
pop
shlb
jge
push
fadd
shrl
out
sbb
fwait
and
lcall
jle
pushf
mov
xchg
mov
and
jb
in
sbb
add
mov
inc
cmpsl
push
cmc
aas
subb
je
std
xchg
sub
test
add
dec
xchg
xlat
leave
adc
dec
dec
jg
test
add
mov
mov
ja
and
call
scas
daa
jb
sub
test
push
movsl
sub
mov
xor
loopne
test
xchg
lret
and
rcr
inc
pop
leave
mov
mov
lcall
test
bound
stos
push
push
fwait
cld
jns
xchg
xchg
movsl
dec
stc
repz
out
fistpll
outsl
fcmovne
cmp
jnp
xchg
dec
fisttpl
pop
adc
or
ss
mov
adc
das
pop
rol
push
lock
aad
sbb
push
cmp
in
loopne
not
mov
lods
inc
push
push
lock
jno
push
fcmove
jle
aad
scas
push
xchg
inc
push
sub
xlat
pusha
jl
jle
flds
pop
mov
in
mov
or
xchg
stos
cmp
out
sbb
mov
int
jp
jae
pushf
cmp
in
xchg
movsw
das
add
std
add
loop
aas
gs
dec
or
cmp
sub
sbb
mov
mov
xor
mov
insl
mov
mov
data16
outsb
out
cs
jae
jae
sahf
xchg
pop
mov
push
int
insl
jo
pop
inc
lock
aad
sub
shll
out
rcrb
aas
sbb
add
xchg
jnp
mov
lock
loope
inc
push
out
ljmp
and
pusha
ljmp
in
les
or
cmp
mov
out
cmp
icebp
sub
movsl
imul
scas
cs
out
adc
xchg
in
push
daa
addl
lods
ljmp
lret
or
cmc
lods
loope
mov
dec
pop
ljmp
mov
lahf
jno
push
sub
call
icebp
rcrb
sti
xlat
add
outsl
out
data16
jb
lds
and
dec
push
pop
add
sub
xchg
shr
add
ds
jne
xor
aas
inc
sarl
adc
imul
lods
mov
cli
imul
mov
pop
inc
xchg
das
mov
and
popa
jne
in
cld
movsb
push
or
mov
jle
pop
mov
adc
jmp
insl
cmp
or
addr16
cmpsb
in
pop
popa
sbb
call
push
jne
or
pusha
sbbl
push
gs
pop
mov
adc
xchg
in
rcrl
push
lods
aaa
mov
pop
jae
inc
xchg
mov
sub
mov
sub
mov
adc
repz
cmp
ret
adc
lret
daa
ficomps
adc
es
loopne
js
xor
mov
sub
int3
aas
nop
dec
and
test
call
iret
push
xchg
xor
pop
sbb
jmp
mov
inc
pop
inc
xlat
les
adc
mov
fwait
push
mov
and
push
or
in
inc
arpl
xchg
aam
and
or
jmp
push
jmp
dec
ret
daa
cli
shll
out
pop
jmp
leave
adc
mulb
fsubrs
mov
jp
sub
testl
push
cltd
mov
mov
mov
scas
adc
push
int
pop
ret
ret
mov
in
and
mov
cmp
pop
cli
pop
xchg
test
stos
sub
cmp
dec
hlt
add
popa
sahf
es
adc
push
pop
aam
mov
push
pop
add
pop
cmc
mov
shlb
pusha
mov
jbe
test
fcoms
shlb
std
mov
pop
ss
pop
inc
ja
lods
jmp
sub
popf
xor
cmp
aad
addr16
cld
sahf
push
imul
mov
mov
push
cli
push
pushf
cmp
ss
jmp
push
mov
rclb
popa
mov
jbe
dec
fsubrl
lahf
hlt
jecxz
les
inc
rol
lret
idivl
ret
push
cmp
jl
out
sbb
adc
mov
nop
jp
sbb
mov
ljmp
xchg
push
sub
push
mov
adc
jns
and
xor
mov
jmp
lahf
in
and
mov
fisttpl
insl
and
jp
mov
dec
lcall
jns
and
into
sahf
xchg
sub
xlat
mov
mov
int
adc
inc
jecxz
fbld
fnstsw
push
xchg
xor
sbb
popa
rcr
cmp
shrl
gs
pushf
aam
loopne
adc
lret
mov
testb
imul
and
push
mov
adc
push
adcl
in
subl
hlt
dec
movsl
mov
fs
or
stos
lods
decb
mov
add
mov
pop
enter
push
mov
gs
bound
testb
mov
cmpsb
shl
jae
shlb
lcall
jbe
mov
adc
ja
cmp
insb
xchg
ljmp
rclb
and
sub
mov
mov
jne
sub
int3
jmp
jmp
fwait
ret
pusha
mov
imul
lret
mov
shlb
insb
push
mov
or
pop
outsl
xchg
jg
repnz
enter
jnp
xchg
push
dec
fiadds
xor
push
or
sub
orb
xchg
cs
dec
cmp
jl
inc
jp
aad
push
push
and
sub
stos
mov
xchg
rorl
xchg
ja
push
mov
outsl
sbb
pop
inc
popf
and
fidivrl
pop
xlat
inc
repz
cmp
ficompl
xchg
ds
xchg
hlt
mov
and
in
mov
sbb
icebp
imul
out
sub
std
bound
mov
pop
mov
mov
out
insl
pop
out
pop
adc
ret
xchg
popa
mov
in
js
mov
insl
pop
inc
imul
gs
fidivs
cli
and
cmp
stos
mov
outsb
pushf
xor
call
xchg
pusha
call
andl
mov
les
cmc
in
aaa
in
cmp
mov
popf
mov
scas
pop
push
aaa
arpl
cld
lods
push
cltd
in
mov
scas
push
push
ds
jbe
sahf
adc
add
cmp
loop
outsb
fwait
jge
jb
xor
sbbl
lods
test
rcrb
sbb
incb
ljmp
stc
call
jge
xchg
pushf
cmpsb
pushl
push
push
clc
xchg
in
sub
cli
lahf
mov
into
push
push
pop
mov
and
subb
hlt
sti
in
ljmp
adc
dec
stos
jg
mov
cmp
mov
sahf
sub
pop
test
pushf
mov
in
ds
cmp
nop
clc
out
adc
or
hlt
jg
cmp
adc
pop
daa
ja
lock
frstor
clc
enter
aaa
add
loope
mov
xor
adc
movsb
and
and
out
dec
cmc
std
pop
cli
dec
cmp
xor
mov
rcr
mov
adc
push
xchg
leave
mov
jae
jo
and
cs
inc
jge
xor
pop
inc
dec
cmc
mov
mov
jno
in
adc
in
dec
dec
out
jae
imul
aam
lret
iret
ljmp
rcrb
nop
or
dec
lods
outsl
push
lret
mov
test
stc
push
lret
sti
movl
pop
call
jle
dec
lahf
shrl
push
inc
aad
sub
push
push
ret
pop
fcmovnb
aas
pushw
mov
outsb
arpl
jle
adcb
add
or
out
test
pop
or
mov
test
xchg
fisttpll
mov
adc
sbb
out
pop
add
xchg
ds
mov
je
iret
mov
add
and
mov
mov
outsl
inc
sbb
nop
les
jo
jo
cmp
hlt
jp
mov
push
mov
loopne
mov
or
icebp
cmc
repz
ja
add
push
push
lahf
add
incb
mov
add
in
jb
cmp
andl
or
adc
aas
enter
lds
sbb
les
hlt
shlb
lret
mov
add
xor
xchg
jl
aas
repz
mov
lods
lret
insl
adc
and
and
pop
or
mov
movsb
divb
adc
dec
adc
sub
cs
and
dec
popl
sub
gs
mov
lret
or
divl
and
inc
out
insb
push
mov
jmp
push
mov
adc
fdiv
mov
mov
pushf
xchg
sub
mov
push
orb
int
mov
pop
push
jl
dec
mov
mov
pop
lret
lea
out
xchg
int
test
nop
call
dec
jbe
lret
mov
xchg
out
add
pop
mov
mov
xchg
add
pop
cmp
sub
fwait
jmp
bound
xor
es
sub
inc
jns
pop
lods
mov
repz
loopne
hlt
push
loopne
lea
ret
adc
hlt
jne
test
xor
out
mov
mov
mov
or
mov
test
cmpsl
stc
aaa
ds
jge
bound
outsb
lds
adc
jnp
rol
push
or
loopne
xchg
jmpw
adc
fists
mov
mov
pop
xor
add
repz
mov
or
mov
xchg
jecxz
push
lea
cmp
fucomip
movsb
lret
jbe
mov
mov
or
pop
incb
sub
pop
ss
adc
out
inc
call
notb
inc
int
dec
pop
rolb
movsl
aas
in
inc
ja
stos
in
add
pop
xchg
mov
scas
mov
hlt
push
movb
gs
inc
repnz
pop
lds
inc
push
ficompl
jl
xchg
push
xchg
xor
and
pop
aam
pop
cmp
negb
decb
adc
sahf
scas
pop
dec
je
and
andl
insb
fs
or
or
adc
lock
xchg
fildl
outsb
xchg
xchg
jg
leave
mov
mov
rorl
push
sbbb
or
scas
fwait
bound
leave
icebp
dec
sub
mov
movb
sub
mov
data16
mov
sub
popf
mov
lcall
enter
lock
dec
xchg
mov
das
cmc
sub
test
pushl
xchg
call
and
ds
pop
push
push
arpl
xchg
xchg
xor
pop
xchg
imul
and
xchg
or
fstl
push
cmpsl
or
imul
xchg
lods
jb
mov
or
push
jne
push
jl
cmpsb
es
mov
mov
push
pop
dec
dec
mov
sahf
ret
add
sbb
lret
jno
hlt
push
fsubl
cli
xor
ret
cwtl
pop
mov
jno
cwtl
negb
dec
lahf
inc
int
cmc
sbb
add
push
push
fstpl
mov
movsb
loop
add
in
mov
lahf
lret
cs
ss
jne
test
mov
test
pop
dec
mov
and
sarl
inc
xor
dec
fisttpll
call
xor
daa
pop
aas
aad
pusha
cmc
ljmp
pop
sbb
adc
xor
in
ljmp
inc
xchg
rcl
xor
xchg
ja
btr
dec
and
idivb
pop
pop
lret
cmp
or
insl
stos
push
je
add
gs
movsl
ret
push
mov
cmc
cmp
mov
and
xor
adc
pop
bound
mov
int
ss
lcall
push
pop
xchg
pop
fsubrp
data16
mov
adc
ja
ret
addr16
sub
push
outsl
out
sub
shrl
sarl
aam
pusha
idivl
rcrl
popf
sub
push
mov
mov
inc
pop
dec
mov
pop
enter
outsb
aaa
inc
outsl
mov
add
fcomps
xchg
test
testb
testb
lds
mov
jg
out
repnz
jg
fildll
scas
out
mov
je
mov
movsb
jb
dec
out
adc
xchg
jge
fisubrs
call
add
aaa
aaa
pop
mov
pusha
das
dec
mov
ret
lods
mov
and
jmp
push
add
inc
xchg
inc
add
sarb
inc
loop
sbb
or
mov
lahf
mov
testl
push
repnz
mov
cltd
fnstenv
rorl
fsts
out
xor
push
push
push
into
xorl
ja
lods
rclb
clc
jo
aad
mov
addr16
and
xchg
inc
cmc
hlt
mov
xor
je
lock
mov
aas
movsb
es
adc
idivl
xchg
lret
cmc
add
pusha
push
aam
add
mov
fs
mov
adc
shrb
and
sbb
jne
xor
mov
sbb
jne
aad
rorb
inc
int3
enter
das
adc
sbbb
movsb
int
xchg
adc
mov
movsl
pop
ja
push
pop
push
pop
cltd
xor
loop
jnp
pop
mov
adc
cmp
mov
sbb
jge
pop
xor
add
cmp
pop
subb
dec
cmpsb
xorl
add
pop
jnp
jg
lret
cmp
imul
xor
mov
pushf
mov
mov
mov
dec
mov
push
jb
and
mov
mov
add
clc
mov
and
jne
data16
jecxz
jns
lahf
and
adcl
stos
rclb
call
and
inc
or
call
mov
xor
push
fisttps
in
sbb
dec
fnstsw
arpl
lahf
mov
imul
aaa
in
call
int
leave
lret
mov
inc
sub
mov
sub
or
mull
mov
mov
mov
push
and
inc
dec
adc
jb
or
and
pop
mov
push
repz
jmp
mov
pop
inc
and
aas
call
mov
popa
test
loope
and
mov
mov
enter
sub
push
add
adc
jb
out
sub
mov
adc
sbb
mov
sub
lret
xchg
xchg
cld
jbe
mov
xor
xchg
inc
pop
movsl
shll
and
jb
mov
mov
rcrb
mov
push
out
push
pushf
lcall
add
jnp
pop
stos
jbe
js
in
insb
dec
lods
xor
scas
jle
dec
fsubl
or
mov
ja
std
out
stc
inc
ja
jmp
sahf
out
lret
mov
stc
xchg
fidivrl
out
mov
fsubrs
xor
sbb
push
and
mull
mov
inc
mov
push
jb
int3
stos
outsb
push
shll
mov
pop
mov
cmc
mov
xorl
les
pop
xor
push
push
pusha
stc
adc
orb
shlb
popa
das
mov
xor
cmp
mov
test
leave
push
lret
xchg
aas
or
shlb
adc
or
xchg
icebp
mov
jmp
xor
xchg
pop
mov
mov
test
enter
andl
and
adc
adc
sub
sub
cmpsl
mov
dec
movsl
mov
pop
sbb
fdivl
inc
fldt
in
out
scas
cld
sub
mov
in
leave
mov
pop
pop
out
cs
jecxz
jle
pop
jns
xchg
xchg
in
mov
pushf
hlt
es
popa
cmpsl
inc
sbb
movsb
cwtl
imul
or
xchg
sub
andl
inc
fildl
shl
mov
fildl
adcb
scas
fldenv
and
xchg
movsb
adc
push
scas
mov
jmp
flds
cmpsb
in
jl
lahf
sub
repz
loope
sbb
jecxz
repz
fwait
jle
aad
xor
inc
imul
push
dec
lret
pop
xorl
or
jae
cmpsl
mov
sub
int
mov
cmpxchg
movsb
jns
lds
iret
push
jmp
push
inc
insb
push
fsub
int3
jg
lret
cltd
nop
jl
jecxz
outsb
rorl
jbe
dec
mov
lret
cld
inc
bound
pop
clc
xchg
xchg
sbb
and
insl
xlat
lcall
xchg
in
xor
dec
addr16
popf
cvttps2pi
out
xor
stc
add
jae
into
push
jp
ds
rorb
push
ret
push
cmp
sbb
pop
cs
je
or
decl
cmc
mov
xchg
stc
jge
aas
decl
pushl
ja
inc
push
js
idivb
ret
lds
scas
out
sbb
addr16
je
cli
jns
jnp
out
xchg
fnstsw
mov
add
lods
repnz
xchg
imul
dec
lret
sub
stos
and
or
out
out
pop
push
bound
jbe
sbb
outsb
push
dec
lcall
jbe
inc
mov
push
shrb
daa
iret
rcll
jmp
xlat
jb
push
incl
or
in
push
mov
iret
xchg
lahf
xchg
adc
pusha
and
mov
insb
cli
pop
and
xor
pop
loop
adc
mov
and
add
test
dec
roll
hlt
inc
cld
xor
and
jl
mov
push
jnp
pop
xchg
jp
add
hlt
pop
bound
inc
cmp
aas
and
and
movsb
ret
xchg
cmp
or
sbb
xchg
sti
and
cmp
leave
xchg
pop
loop
not
dec
les
aam
inc
faddl
insb
ficomps
hlt
xor
mov
adc
imul
push
hlt
push
scas
sbb
xlat
sbb
mov
dec
lods
fwait
dec
push
pop
pop
mov
lods
int
pop
sbb
cmc
add
ljmp
out
adc
and
mov
inc
es
test
addr16
ljmp
mov
dec
xchg
dec
jbe
push
lcall
cmpl
xchg
cmc
sti
mov
adc
and
pop
rcrl
scas
outsb
iret
es
mov
sbb
aad
roll
sub
ja
and
sub
loopne
jne
fwait
gs
add
test
int3
mov
stos
fs
push
add
push
shrb
in
cmp
adc
orl
sub
repz
pushf
movsb
testb
movsl
cmpsl
mov
aam
roll
push
daa
rorb
sarl
and
shl
dec
sub
lret
jle
movsb
push
adc
icebp
stos
mov
rolb
mov
pop
xlat
push
fcomi
or
nop
into
cmpsl
pushf
xlat
pop
cld
pop
pop
mov
mov
ljmp
mov
mov
ret
push
cld
cld
subl
jmp
insl
adc
popf
sbb
mov
jne
xchg
adc
xorl
adc
das
stos
jo
mov
arpl
aaa
dec
xchg
es
jns
ficomps
nop
pusha
jl
mov
popf
ss
in
jecxz
dec
fildl
fisttpll
aas
sti
pop
ds
subl
cli
lret
loopne
add
push
mov
xchg
pusha
stc
sub
fisubrl
notl
sbb
ret
xchg
ds
outsl
out
sub
addr16
imul
test
xchg
pop
rolb
adc
aam
cmpsl
xlat
sbb
cmp
fcomps
ljmp
cmp
aam
and
dec
and
inc
out
adc
mov
mov
xchg
and
mov
pop
sti
lea
jo
or
in
mov
imull
popa
ret
repnz
roll
cld
ficompl
sub
hlt
pop
fimuls
mov
test
orps
cmp
mov
mov
notl
loop
movsb
mov
das
sbb
fmul
leave
mov
outsb
pop
mov
aas
aam
fdivrs
cld
adc
bswap
jecxz
jae
movsb
psrld
adc
mov
jl
xor
push
mov
addl
pushf
fs
cmpsl
out
pop
pop
and
mov
shl
jnp
inc
or
je
jge
lods
jo
mov
mov
ret
push
cs
add
adc
int
cmp
mov
jns
dec
mov
shll
xor
ljmp
out
jo
vpunpckhbw
lret
inc
gs
es
or
or
mov
mov
mov
add
sub
xor
cmp
and
fmuls
xchg
cmp
std
int3
stos
in
inc
movsl
xor
rorl
xor
cs
lods
fwait
lods
and
push
fistpll
gs
xchg
fwait
pop
roll
and
lods
testl
push
aam
arpl
adc
cmpsl
xchg
data16
jne
test
adc
fs
in
lcall
mov
push
and
adc
mov
insb
push
call
sahf
xor
sbb
xchg
push
outsb
fucomip
push
shll
or
test
inc
ret
ret
subps
push
ja
cmp
jmp
add
xlat
mov
push
pusha
mov
fs
test
scas
test
sti
loopne
inc
xchg
push
jecxz
push
dec
into
jmp
add
sbb
inc
daa
mov
mov
pushf
mov
out
fisubs
jbe
lret
mov
movsl
push
mov
sbb
mov
push
add
pushl
fstl
fbld
sti
push
je
or
insb
fstl
sub
dec
call
mov
aas
lods
mov
push
ficomps
xchg
bnd
ret
insl
dec
cmp
scas
aad
aas
nop
mov
mov
xlat
cli
arpl
sbb
ljmp
xchg
mov
sub
jecxz
dec
fsubl
shl
jb
ffree
pop
mov
sub
or
or
push
pop
repz
jle
mov
icebp
lahf
mov
xchg
cltd
inc
jns
aas
sbb
push
add
sub
jns
jns
ret
adc
jne
fildll
sbb
ret
sbb
push
sar
mul
sub
push
lahf
cltd
jnp
inc
xor
stos
loope
cmp
sub
fldt
shr
sbb
mov
pop
fidivrs
pop
shl
orl
cmpsb
xor
mov
jecxz
stos
push
inc
pop
mov
mov
div
aad
sub
sub
rcl
xor
mov
mov
sbb
ret
mov
enter
lock
pop
adc
arpl
and
jae
pop
imul
cltd
dec
bound
mov
pop
enter
and
and
pop
mov
mov
data16
xchg
mov
inc
imulb
add
mov
sar
and
cmc
bound
lods
in
cwtl
in
xchg
movsb
outsb
mov
mov
adc
decb
int
sbb
das
adc
cmp
fisttps
dec
sub
push
clc
imul
cmp
leave
aas
sbb
xchg
jmp
adc
xchg
pshufw
xchg
and
mov
pushf
les
mov
or
jae
sbbl
mov
or
add
fwait
lods
or
mov
inc
loope
push
adc
pop
add
jp
imul
mov
dec
das
scas
adc
push
xchg
div
andl
movsb
cmp
or
cltd
xchg
int
mov
nop
mov
shll
jg
cmp
sbb
fsubrl
pop
cltd
daa
pop
inc
fwait
mov
push
sbb
lods
and
shll
ror
aad
xchg
mov
rolb
lods
and
enter
xchg
mov
add
ret
mov
cmp
pusha
jle
jo
mov
push
mov
sub
rcrl
inc
jmp
cwtl
cld
xchg
or
sub
xor
pop
mov
repz
ret
shlb
repnz
xchg
and
js
pop
shrl
and
jmp
or
or
outsb
adc
out
cmp
std
pop
push
dec
popa
pop
xchg
jae
movsb
divb
jno
push
flds
mov
int3
add
pop
popa
test
icebp
xor
stos
stc
push
push
or
lcall
mov
out
call
fs
in
dec
and
leave
and
inc
xchg
fcmovbe
dec
sbb
mov
mov
or
adc
mov
push
fst
pop
in
mov
add
xlat
and
sbb
shlb
add
and
call
dec
dec
inc
sub
cwtl
scas
inc
scas
into
es
xchg
mov
cmp
pop
add
adc
cs
xor
inc
es
cmp
pop
sbb
fstpl
cmp
flds
popa
aaa
mov
lock
xchg
sbb
xlat
in
push
mov
sar
and
push
mov
xchg
mov
xchg
xor
cwtl
ret
adc
or
fs
or
pop
add
cmpb
push
fisttpl
jge
pop
mov
cmpsl
push
mov
sbb
push
push
imul
jae
inc
adc
mov
sahf
adc
sub
cmc
cs
ret
fcomps
xchg
pop
sub
push
gs
outsl
les
mov
sti
xchg
jle
push
mov
mov
lock
outsb
cmc
push
or
or
inc
jae
scas
xchg
popa
inc
lret
fidivs
out
fcoms
add
mov
adc
imul
outsb
adc
clc
sbb
push
push
inc
pop
xor
add
jle
mov
sbb
cs
or
pusha
scas
or
push
cmpsb
dec
sub
mov
jb
lret
xor
pop
popf
sub
or
xchg
inc
dec
in
pop
std
jae
mov
jg
leave
dec
bnd
es
pop
ret
xchg
dec
lcall
inc
lods
inc
mov
xchg
mov
adc
push
jecxz
and
mov
or
je
icebp
mov
inc
push
cmpsb
data16
test
cmpb
mov
aas
push
sbb
scas
outsl
cmp
stos
mov
or
jo
dec
lahf
mov
cmpsb
dec
inc
fldt
jbe
sarl
mov
or
xchg
dec
push
xor
sahf
xchg
out
ret
adc
adc
enter
out
add
jmp
mov
cmp
loopne
sub
jno
ds
jg
shll
pop
jmp
cmc
push
in
pop
arpl
lahf
mov
fwait
jl
in
pop
inc
rorl
xchg
push
xor
movsl
jno
cmp
popa
xchg
inc
push
aas
lcall
add
and
dec
add
fidivrl
xor
mov
pop
cli
cltd
xchg
cltd
jp
popa
pop
lock
sbb
pop
inc
or
pop
mov
pushl
jp
push
movq
sbb
in
movsb
pop
lods
mov
mov
mov
and
xor
cli
jno
inc
vmovaps
or
jbe
jns
jmp
push
div
adc
xor
idiv
or
fimull
lret
sti
outsw
jno
mov
data16
sbb
push
jecxz
jle
cmp
hlt
inc
cmp
xor
xorb
mov
cmp
dec
mov
arpl
jge
mov
bound
movsl
ret
xlat
xchg
xchg
in
and
stos
mov
push
xlat
nop
lret
sahf
pop
mov
dec
cld
movsb
in
cmpsl
loopne
add
lds
aam
or
nop
lods
xchg
and
sahf
mov
rcrl
in
or
sub
in
lock
movsl
enter
adc
in
mov
shlb
mov
inc
repnz
add
lret
hlt
cs
xchg
out
hlt
mov
push
sbb
cmp
cmp
jmp
or
cltd
inc
inc
inc
adc
cwtl
push
test
shll
dec
mov
xor
mov
shl
xchg
popa
cmp
gs
push
pop
inc
out
insb
adc
mov
pop
addr16
mov
cmpsl
pop
lcall
push
jbe
ficoms
outsl
sbbb
xchg
add
dec
aaa
mov
dec
insl
shll
cmp
sbb
jmp
cmp
mov
fwait
inc
je
cmp
mov
mov
xchg
jbe
aad
fnstsw
mov
fisubl
inc
or
orb
movsl
cmpsb
mov
mov
leave
jmp
pop
mov
cmpsl
ret
xchg
ss
xor
push
fsubs
mov
push
jge
out
inc
sub
inc
call
xchg
dec
push
ss
push
jnp
fsubl
or
pop
adc
push
sbb
push
popa
sbbl
rclb
jg
clc
mov
mov
inc
pop
sbb
sub
add
push
loopne
dec
or
add
je
mull
das
sbbb
rol
mov
scas
push
lcall
xor
ss
or
adc
pusha
daa
sarb
fisttpl
push
dec
jae
mov
mov
out
test
pop
jp
jbe
movsb
inc
or
popa
cmp
sbb
scas
pop
mov
dec
jo
push
arpl
push
cmp
mov
or
rcll
mov
or
jbe
and
pop
and
xor
iret
cmp
lea
in
pop
xchg
pop
in
sub
dec
jne
or
push
or
jp
cmc
jo
neg
stos
and
mov
out
push
lds
call
lret
inc
cmpl
adc
sub
xchg
enter
bound
sbb
in
push
add
cmpsb
rcl
lock
jp
dec
sbb
add
dec
shll
pop
fs
or
popl
es
imul
sbb
out
inc
ret
cmpsl
rcrb
pop
ljmp
insb
xchg
mov
push
xor
xchg
mov
mov
dec
inc
xchg
mov
adc
aam
mov
cmp
jp
loopne
jae
pop
jp
mov
jmp
clc
cmp
dec
push
aaa
test
jge
cli
mov
jbe
jle
insl
inc
mov
fcmovb
int
inc
into
mov
pop
sarb
addl
sub
out
xor
adc
outsb
add
lea
lock
into
or
jno
and
or
test
jo
jmp
cmpsb
inc
jmp
push
mov
mov
pop
inc
je
or
psubw
mov
inc
jp
jbe
mov
test
mov
xlat
pop
in
sub
incl
push
imul
add
pop
push
cmpsb
mov
iret
and
cmp
sbb
lret
adc
ss
and
or
test
push
cld
jbe
mov
cmc
aad
lods
mov
in
and
inc
xchg
inc
arpl
and
or
pop
lahf
les
mov
mov
xchg
inc
add
inc
push
call
fsub
data16
bound
mov
xlat
and
cwtl
sbbl
scas
lret
cwtl
jle
pop
sbb
cmp
jo
and
mov
cltd
cltd
push
mov
pop
push
stc
in
sbb
sub
sub
mov
lahf
leave
lds
mov
or
aaa
push
mov
cmp
fbstp
aam
outsl
xor
pop
outsb
add
scas
arpl
popa
xchg
jne
mov
stos
or
lods
out
and
mov
lock
cmp
jmp
mov
xor
adc
shlb
add
jecxz
fwait
pop
lock
xchg
sbb
xor
cltd
ljmp
pop
inc
add
push
addr16
and
mull
adc
call
mov
repz
fisttps
jnp
xor
cld
test
jp
inc
lods
jbe
jl
cwtl
ret
push
sbb
xor
add
xchg
xor
fstps
ja
outsl
mov
push
mov
int
pop
jnp
mov
push
sbbb
rclb
inc
fstpt
out
repnz
scas
jl
sti
mov
test
xchg
dec
push
mov
popf
sub
cli
cli
je
add
push
mov
jno
aam
xor
mov
es
movups
mov
push
shrb
push
sub
rcrl
or
cmpsl
mov
or
sbb
mov
inc
lahf
jle
in
inc
idiv
push
cli
mov
imul
hlt
dec
subps
es
outsb
dec
lock
popa
mov
mov
jbe
loope
add
int
mov
iret
mov
rcrb
adc
stc
rcrb
leave
pop
pop
int3
xor
pop
or
mov
rorl
cmc
cmp
ss
inc
ss
and
loop
mov
into
les
fwait
jg
pop
jnp
mov
xchg
sbb
inc
and
and
ret
or
or
push
and
adc
lds
fadds
xchg
pushf
lahf
or
mov
jge
not
or
scas
pop
testb
xor
ret
dec
loop
pop
int
mov
test
rcl
or
cmpsb
sbb
xchg
mov
sbb
cmc
inc
hlt
lcall
xchg
loopne
out
mov
shrb
rclb
xchg
shrb
sbb
xchg
fwait
cmp
movsb
incl
xchg
out
sbb
lods
cltd
jl
rcrb
jo
push
sbb
leave
sbb
pop
mov
scas
sbb
inc
das
stos
out
xchg
pop
xor
or
insl
adc
sbbb
adc
sbb
cwtl
mov
call
adc
pop
lds
push
sub
lods
pop
out
ret
subb
addr16
test
sbb
decb
fidivrs
xchg
push
es
mov
dec
fdivrs
int
push
shl
xchg
notl
dec
insl
push
inc
jbe
movsb
clc
fwait
sub
pop
adc
sbb
pop
mov
pushf
mov
push
jo
add
imul
jmp
stos
test
adc
xor
aad
fwait
and
lahf
clc
mov
int3
push
xchg
inc
xchg
or
test
push
mov
movsb
ss
sub
nop
sbb
negb
jbe
cmpb
mov
cmp
cwtl
lea
mov
pop
mov
inc
mov
roll
jo
es
cltd
push
das
push
add
mov
jnp
add
ret
movsl
cmp
cmp
lods
xor
lock
push
sbb
or
es
shrl
push
xor
sub
xor
push
mov
psubsw
int3
sbbb
int
out
jb
mov
repz
shrb
dec
push
movl
pop
xor
lcall
aad
mov
ds
jae
mov
mov
add
inc
adc
xlat
adc
pusha
nop
adc
popa
ret
mov
ret
or
cwtl
test
sbb
inc
lret
aas
aam
jecxz
sbb
xor
je
repnz
mov
pop
mov
stos
mov
xchg
pop
rcr
pop
mov
mov
je
adc
push
test
push
inc
sahf
in
and
fdivrs
jle
pop
jle
mov
clc
push
jmp
pop
mov
mov
jge
ltr
fdiv
add
out
or
in
out
fnstsw
das
or
sub
stos
out
jae
sub
cmpsl
sti
orl
inc
add
int
xor
in
pop
push
inc
bound
dec
pop
ds
imul
jae
cltd
in
push
popa
pusha
int3
and
jp
aaa
jae
cltd
mov
xchg
push
andb
stc
push
mov
mov
xchg
out
push
push
data16
fs
pop
or
mov
jg
pop
loop
mov
xchg
sbb
mov
inc
psrlq
jg
xchg
sub
bound
jge
jg
cmpsl
cld
loope
xchg
aaa
add
lds
fsubs
hlt
cmp
lahf
mov
mov
call
cmp
adc
loopne
xor
lea
imul
inc
fldcw
ret
cmpsb
push
fcompl
xlat
push
push
jo
lock
jbe
xor
push
xchg
cmp
repz
cmp
mov
sbbl
sbb
test
movsl
xchg
mov
shll
push
orb
lret
lods
jo
jne
cmpb
aad
push
andb
xchg
int
jbe
add
loope
enter
xor
push
and
insb
and
mov
jne
fisttps
testb
xlat
mov
adc
das
mov
xor
adc
das
pushw
imul
fidivrl
dec
jge
mov
push
repnz
pop
aam
cltd
div
add
dec
mov
sbb
les
std
fadd
xlat
add
xor
insb
xlat
pop
outsb
dec
mov
lock
int3
sahf
loop
dec
cmp
mov
ds
mov
fidivl
clc
mov
orb
fs
xor
or
pushf
cmp
das
aaa
and
das
in
xchg
jge
test
shll
mov
sub
cs
sbb
cmp
into
data16
mov
out
xchg
imul
add
jae
xor
mov
dec
lods
ret
or
repnz
stos
in
xor
xchg
push
or
rcll
sbb
cli
mov
test
push
jae
pusha
arpl
sbb
ret
pop
push
shll
dec
ss
pop
aaa
sbb
mov
sbb
add
jbe
ljmp
mov
ljmp
clc
xchg
lret
xchg
jge
adc
jmp
mov
mov
test
aad
and
jp
push
dec
stc
mov
cs
push
sub
dec
and
into
subl
cld
xor
hlt
adcb
rcll
cwtl
sub
mov
arpl
sbb
and
cli
sub
bound
das
cmpsb
fsubl
notb
je
sbb
icebp
xchg
shll
ljmp
cli
dec
das
jecxz
les
call
add
ret
ss
jbe
jns
add
push
xchg
mov
rcrl
cwtl
push
mov
popa
pop
int3
setg
mov
aaa
ss
dec
add
pop
sti
adc
inc
inc
ss
jp
add
cld
sbb
mov
push
pop
pusha
cld
arpl
stc
mov
and
xor
xor
inc
fsubr
out
sub
xchg
inc
inc
inc
mov
xor
mov
and
aaa
ltr
inc
sub
pop
pop
push
daa
mov
dec
sub
ret
pop
sub
push
mov
outsl
fxch
ss
fsubrl
pop
mov
jecxz
pop
dec
lods
adc
jae
xorb
sub
xor
fidivs
mov
xor
rcll
aas
dec
test
shrb
mov
pop
repz
mov
fistpll
cmp
cmp
mov
cld
insb
out
test
mov
inc
jecxz
dec
pop
xor
sub
add
inc
xchg
cmp
adc
jno
mov
inc
sub
in
adc
xchg
shll
inc
sti
mov
add
push
pop
outsl
mov
jp
cmp
test
fs
sbb
cmpsb
scas
mov
int3
scas
outsb
inc
xor
mov
inc
dec
jb
arpl
das
lret
dec
lds
cmc
js
push
call
icebp
jg
jmp
shr
gs
cld
pop
adc
adc
mov
push
shrb
push
int
daa
sub
xchg
push
testb
inc
addr16
push
sbb
sbb
roll
cmp
pop
cmp
xor
fdivrl
lock
jno
sub
mov
shl
inc
cmp
outsl
clc
xchg
jb
aad
test
dec
out
jno
hlt
xchg
inc
adc
sub
in
aad
push
scas
mov
cs
cmc
call
or
scas
inc
lds
call
mov
dec
fimuls
fdivrl
or
or
jns
loope
or
jge
outsb
or
push
stc
and
sub
sahf
mov
mov
xchg
sub
sar
add
push
mov
xchg
mov
pop
ljmp
jl
dec
cmpsb
js
popf
push
sahf
mov
xor
xchg
in
arpl
cli
lret
lea
lock
mov
jae
cmp
mov
mov
out
jnp
or
repnz
cmp
stc
je
xchg
dec
sub
je
call
pop
negb
cld
push
in
pop
cmp
in
fisttpl
sar
xchg
pop
mov
mov
sarb
loop
test
jge
fsubrp
dec
fmulp
out
fdivr
jns
jmp
xchg
pop
or
xchg
mov
mov
divb
lea
subb
and
mov
lret
cmovge
jecxz
xchg
addr16
fisttpll
dec
sbb
inc
test
fsubrp
and
adc
push
sub
lret
mov
inc
outsl
mov
test
ret
out
dec
mov
test
jecxz
pop
pusha
or
cld
mov
mov
push
jne
or
mov
mov
xor
xlat
push
pop
imul
int
mov
xor
or
cmp
lods
aaa
mov
mov
adc
dec
rcrl
inc
hlt
insl
mov
mov
cmp
mov
fwait
hlt
imul
aam
or
enter
pushf
ja
adc
in
add
popf
paddusb
mov
ret
or
repz
loopne
gs
pop
dec
test
imul
lahf
sti
xchg
push
xchg
pop
mov
adcb
loope
sbb
incb
ljmp
clc
cli
lea
lock
cmp
test
lock
test
xchg
sub
and
sbb
loopne
mov
mov
jmp
test
adc
mov
cmp
movsl
dec
repz
imul
repnz
shr
lahf
push
push
pop
pushf
repz
cmc
aad
test
fstps
loopne
mov
mov
stos
sub
jbe
nop
inc
jns
aad
mov
mov
xchg
aas
shlb
fstl
xlat
mov
lods
mov
jp
shl
push
lea
push
sbb
xchg
inc
or
sarb
movsl
jecxz
add
sub
dec
lea
in
inc
pop
ret
sbb
lret
jle
ja
pushl
popf
mov
or
cmp
and
lods
mov
repnz
adc
mov
adc
scas
incb
cmp
leave
insb
mov
enter
mov
lds
cmpsl
nop
pop
ja
js
out
hlt
shlb
jae
add
sub
lret
push
fistl
xor
mov
jnp
lret
rclb
cld
inc
jo
in
mov
add
push
push
imul
push
data16
inc
dec
add
bound
add
sub
lds
les
fisubrl
insl
cmpsb
xchg
mov
lret
mov
adc
and
int3
sbb
lds
push
out
out
jge
xor
adc
fistpll
iret
ret
fdivrp
out
outsl
cmp
jb
and
dec
mov
adcb
inc
xchg
jne
dec
lods
mov
or
ljmp
rcr
adc
add
ss
fstpt
mov
pop
cmpsb
in
insl
mov
shlb
fwait
add
insl
jle
dec
repnz
aad
in
mov
push
or
outsl
jg
fistpll
mov
mov
daa
mov
daa
jbe
mov
out
pushf
and
or
out
jns
int3
cltd
lods
jnp
xor
in
in
jge
xchg
xor
sahf
jno
inc
ffree
gs
xor
inc
cmc
fcomip
lods
dec
cld
cmp
xchg
scas
cmp
in
dec
aam
imul
enter
ljmp
fisttps
pop
repz
dec
in
iret
jns
cltd
jno
cmp
aas
popa
lock
repz
or
and
push
inc
lock
bound
xor
cltd
jne
lcall
pop
in
fists
pushf
jbe
mov
xor
repz
fsubrs
icebp
pop
mov
xor
mov
popa
iret
test
sti
lret
fnstcw
mov
sbb
push
ret
in
push
dec
stos
in
mov
imulb
test
jnp
mov
scas
jns
push
aas
add
out
gs
jecxz
pop
xchg
push
js
shrb
in
iret
ret
push
sub
dec
stos
loope
push
aad
xor
sub
mov
sub
sti
push
notl
xor
loopne
outsl
divl
fsubp
clc
mov
or
jbe
jecxz
fcoms
sbb
inc
fisubs
out
cmp
or
sub
fwait
xchg
dec
in
or
inc
nop
dec
icebp
leave
push
xor
nop
dec
icebp
sub
sbb
xchg
cmp
inc
sbb
mov
out
pusha
push
cmp
xchg
scas
ja
or
out
jp
sahf
pop
gs
pop
ret
icebp
jns
fnstenv
or
mov
push
inc
cmp
sti
sbb
insb
inc
dec
push
add
and
mov
adc
xchg
push
or
xor
adc
mov
and
mov
adcl
jae
bound
adc
add
mov
movsb
cmc
add
xor
mov
sbb
lahf
test
jae
and
mov
mov
push
sbb
leave
xchg
add
push
int
test
mov
push
shr
jno
lea
fldl
jb
mov
aaa
pop
int
scas
scas
or
push
add
mov
push
lret
negb
sbb
insl
sub
ljmp
adc
adc
cltd
shll
int
push
out
xchg
xor
daa
mov
pop
mov
mov
ja
lods
add
xchg
jnp
enter
jne
test
push
cmp
xchg
pusha
sub
in
and
adc
pop
or
mov
mov
dec
fmul
icebp
in
pop
xor
pop
mov
pop
pop
push
mov
aam
mov
ret
cmc
pop
outsb
sbb
mov
sbb
into
sub
jbe
cwtl
out
push
xor
push
mov
inc
repz
push
popa
mov
mov
push
sbb
and
xchg
and
inc
xor
inc
out
mov
mov
fs
jne
sbb
jo
xlat
inc
push
dec
jno
sub
adc
pushf
les
popf
scas
ljmp
stos
xor
mov
outsl
dec
sbb
lcall
dec
cmp
scas
cmp
mov
decb
loope
jle
or
xor
and
je
push
dec
inc
lcall
fidivrs
cmp
pushf
lret
lods
jb
mov
fidivrl
mov
cmp
insb
leave
cmp
mov
dec
push
or
mov
fucomip
adc
mov
adc
xchg
xchg
rcll
insl
lret
cmpsl
addr16
sub
jl
notb
add
mov
xchg
into
out
mov
cmp
dec
mov
cwtl
gs
dec
dec
idivl
xchg
push
jmp
push
out
std
stc
push
cmp
adc
in
lcall
test
mov
stos
js
out
push
mov
jmp
push
mov
ja
outsb
sbb
cmp
cli
stos
jne
jg
push
stc
xlat
std
push
cmp
inc
test
data16
jp
fsubrs
push
movsl
push
jecxz
test
push
sub
sub
icebp
in
stc
cmp
bound
dec
test
mov
rcr
mov
mulb
sbb
jl
shll
mov
adc
hlt
and
cltd
jne
add
int3
cmp
adc
cmp
movsl
pop
pushf
stos
cwtl
notl
dec
jnp
pushf
adc
lahf
pop
cwtl
inc
clc
push
data16
push
adc
dec
xor
xchg
pop
outsb
sub
add
pop
cld
push
xchg
xor
jae
sub
rclb
call
rcll
pop
xchg
imul
jnp
shl
rclb
lret
inc
or
sub
mov
ds
inc
push
dec
add
movsl
lods
and
int
mov
dec
negb
or
cmp
out
dec
sti
ja
pop
xor
movsl
mov
ja
cmp
loope
cmp
lods
aam
xchg
in
das
ret
push
adc
push
push
hlt
loopne
push
out
sub
into
mov
inc
stos
insl
mov
fldl
sub
outsl
cmpl
sbb
cmp
and
push
mov
push
mov
scas
jge
into
stos
xor
adc
orl
xchg
iret
inc
int
jl
clc
pop
mov
sub
inc
loope
sbb
cmp
lret
mov
pop
dec
je
mov
imul
or
aas
xor
cli
jo
adc
xchg
xor
cmpsb
pop
sti
push
test
ret
xchg
loop,pt
repz
inc
lret
arpl
push
scas
iret
mov
xor
dec
xor
js
sub
mov
lahf
jbe
push
dec
jg
rorl
cmp
aam
inc
xchg
mov
je
adc
jbe
in
aam
loopne
scas
mov
jmp
and
adc
xor
mov
cmp
mov
xchg
js
pushf
sub
cli
and
les
jp
test
cs
sbb
out
orl
pop
add
movsb
push
mov
lret
pcmpgtd
cmp
out
cmpb
out
push
stc
mov
sarb
cmpsb
int3
mov
fisubs
add
push
push
stc
pop
jg
or
add
xor
mov
in
add
fwait
sarb
mov
push
or
insl
mov
pop
dec
mov
dec
push
pop
adc
or
test
xchg
loopne
aas
shlb
enter
fdivrl
xor
pop
js
xchg
adcb
mov
jecxz
in
sbb
scas
es
push
pop
cmp
jne
add
xor
test
dec
jle
out
sbb
std
inc
int3
jmp
fcomps
cltd
aad
fnstcw
jae
pop
imul
repnz
aas
add
lahf
test
and
and
push
dec
fwait
jmp
outsl
fstpl
sbb
iret
cmpsl
cli
xchg
stos
lcall
mov
mov
stc
cmp
mov
jg
fstpl
mov
shlb
push
fimull
xchg
xchg
and
lea
repnz
dec
inc
stos
cmpsb
loopne
mov
rcrl
ja
fistpll
insb
jge
push
scas
or
outsl
pop
clc
xchg
js
aas
sub
inc
ficoml
mov
mov
push
mov
aam
out
xor
loop
lcall
int3
push
mov
inc
ja
pop
out
cmp
repnz
clc
out
loopne
icebp
mov
arpl
mov
ljmp
mov
in
adc
jle
cltd
repz
pop
dec
dec
dec
std
aas
dec
negb
out
sub
jne
mov
pop
push
stc
aaa
mov
xchg
jecxz
and
imul
fimull
push
loop
cmpsl
pop
push
mov
nop
push
push
jle
loop
mov
cmp
leave
lods
int3
pop
cltd
test
mov
movsl
das
push
mov
and
jns
fxch
xlat
fwait
jnp
out
mov
pop
aaa
outsb
mov
insl
loop
push
scas
xorb
subb
jle
mov
outsb
lcall
scas
mov
js
mov
stc
and
jmp
ret
push
mov
push
sbb
fwait
xchg
scas
jnp
lahf
dec
loop
leave
cs
test
cmp
mov
xor
cmc
lds
mov
inc
xchg
orl
icebp
adc
movsb
push
pushf
enter
imul
xchg
mov
ret
stos
inc
ret
mov
leave
scas
test
pop
push
sbb
mov
fcmovnb
imul
mov
cmpb
cmp
cmp
add
mov
adc
insl
test
and
popa
inc
cld
mov
mov
and
pop
repnz
ss
cltd
adc
ds
push
movsl
movsl
stc
fcmovnbe
call
lods
pop
and
jp
movsb
js
pop
loopne
sub
inc
test
inc
lods
and
inc
inc
pop
inc
xchg
and
jg
sahf
dec
mul
inc
and
shlb
scas
cli
or
xor
xor
setno
xor
ljmp
jp
imul
cmc
mov
dec
loopne
scas
test
test
subb
push
lret
adc
stos
icebp
enter
fs
inc
rcr
push
fisubrs
cmpsl
in
cmp
inc
adc
mov
mov
enter
mov
push
sbb
in
leave
outsl
and
jnp
mov
sahf
xor
int3
mov
xchg
and
les
ss
add
cmp
stc
inc
xchg
into
and
fbstp
loopne
xor
or
out
and
insl
fcom
gs
in
dec
mov
gs
jne
insl
pusha
dec
adc
adc
add
and
fwait
bound
push
shlb
enter
mov
andl
gs
push
xor
pop
push
stos
xchg
mov
outsb
loopne
jecxz
lret
mov
jmp
mov
jns
mov
adc
adc
mov
aad
addr16
lock
xor
mov
mov
push
jne
insb
mov
rcrl
pop
fmull
lcall
pop
pop
jle
mov
and
dec
pop
std
imul
insb
xor
subl
jno
add
testb
push
mov
add
int
cmp
pop
cmpsl
jle
jb
mov
in
out
cli
in
shlb
insl
dec
pop
sub
test
out
insl
lock
mov
dec
cli
xor
pop
fwait
inc
sub
xchg
mov
jb
nop
fwait
jne
sbb
mov
dec
or
addr16
insb
ss
orb
xorl
stos
xchg
adc
or
mov
fxch
lcall
sub
cmp
ljmp
mov
jg
xchg
stos
mov
dec
leave
clc
sbb
cld
outsl
insb
push
iret
aam
mov
xchg
dec
jb
or
ds
sti
adc
lret
int
jmp
pop
enter
mov
stc
xchg
jnp
scas
repz
and
pop
mov
xorb
jnp
lds
push
lret
jbe
insb
psubb
mov
std
hlt
push
cmp
addr16
repz
add
hlt
lret
push
movsl
icebp
sub
shrl
outsl
xchg
pop
jg
mov
lock
movsl
aaa
loope
outsl
mov
mov
jnp
jnp
scas
aaa
jl
mov
sub
das
xor
mov
les
cmpsb
and
jp
pop
psubsw
xor
jmp
or
enter
xor
mov
das
or
in
push
or
pop
rcrb
pop
leave
lock
in
jbe
mov
sbb
or
mov
pop
sti
lret
jne
call
mov
mov
call
arpl
dec
pushf
ret
mov
pop
push
pop
iret
int3
pop
sbb
int
push
bound
add
aad
cwtl
or
imul
push
mov
jno
js
jp
push
sets
adc
out
and
jno
adc
out
xchg
shrb
pushf
outsb
bound
pop
outsb
jns
pop
jp
push
cltd
std
cli
xchg
icebp
sbbl
jno
and
or
and
lcall
ds
repnz
outsb
pop
xor
enter
std
pop
dec
cmpsl
clc
jge
inc
jnp
out
decw
inc
enter
hlt
xchg
inc
jne
mov
fs
mov
pusha
cwtl
fiadds
in
jnp
cs
sahf
or
nop
ljmp
js
mov
or
pop
int
mov
mov
dec
mov
or
mov
adc
add
ror
mov
inc
icebp
pop
ljmp
pop
imul
jmp
cmp
xlat
xor
mov
cmp
mov
or
sbb
pusha
adcb
mov
icebp
add
test
mov
cwtl
je
or
icebp
add
and
mov
sub
icebp
add
mov
sbb
adc
push
mov
popf
add
xchg
push
jmp
adc
xchg
pop
inc
mov
and
mov
add
pop
cmp
aas
cmp
mov
mov
mov
mov
inc
fbstp
xor
xchg
je
pop
mov
dec
xor
mov
and
xchg
arpl
xor
pushf
jmp
leave
in
sbb
pop
xchg
cld
movsl
cld
mov
push
jne
imulb
xchg
mov
stc
push
mov
xor
dec
jmp
testb
outsl
les
push
fsts
lahf
dec
cmp
rcrl
jg
and
mov
popf
call
pop
jge
outsl
xchg
push
cmp
cmp
lea
pop
idiv
jae
outsl
mulb
repz
out
insl
in
jnp
xchg
popf
mov
mov
sti
dec
jne
cwtl
loop
outsl
jmp
int3
rcrl
jge
xchg
lret
js
or
dec
jno
push
xor
cli
dec
es
inc
arpl
cmp
lods
pop
push
scas
push
vcomisd
cmp
lea
jmp
call
iret
pop
jae
push
out
sti
pusha
mov
jle
lods
sti
pusha
mov
inc
mov
loope
cli
mov
mov
xor
jno
sbb
mov
daa
test
insl
xchg
cmc
mov
or
outsl
xchg
cmp
scas
xchg
pop
adc
data16
push
addb
fld
shl
clc
aaa
fs
mov
push
pop
shr
adc
dec
clc
jns
and
fdiv
nop
std
jge
mov
pop
lahf
fs
inc
add
jae
ja
arpl
test
and
in
insb
mov
std
cmpsb
leave
sti
sbb
cmp
lcall
aas
xchg
adcb
hlt
lods
sbb
fldpi
jge
mov
fsubr
xchg
insb
out
stos
andb
cld
outsb
cmp
pushf
pop
xlat
jecxz
jno
dec
adc
pop
in
sti
call
pop
fildll
jge
jge
int
cmc
int3
ds
mov
nop
jnp
adc
pusha
aam
xchg
scas
gs
inc
and
mov
or
inc
dec
jno
fs
xor
or
sub
sub
sub
mov
adc
mov
imul
add
add
adc
stos
nop
sub
mov
ret
shrb
and
adc
sbbl
xor
insb
sub
add
les
xor
enter
xchg
sub
add
cld
fdivrs
imul
ds
push
shr
mov
mov
lea
sti
fcomip
and
mov
test
mov
lret
mov
lock
sub
scas
jl
lret
lcall
icebp
pop
adc
mov
mov
jmp
jp
and
and
sbb
adc
cld
imul
cwtl
ds
insb
rolb
and
ret
lock
pop
jl
xchg
pop
pop
jge
and
xchg
adc
inc
dec
movsb
xchg
fcoms
and
pop
imul
rolb
adc
xor
movsb
mov
adc
mov
movsb
jo
dec
or
xchg
and
dec
loop
mov
cld
jb
inc
add
dec
adc
adc
inc
dec
adc
ss
dec
adc
cmp
mov
movsl
mov
frstor
inc
mov
xchg
ds
jmp
inc
lret
xor
dec
adc
movsb
mov
enter
xchg
and
movsb
inc
fdiv
lret
fs
mov
sarl
nop
testb
xchg
cmpsb
sahf
and
or
dec
fmulp
mov
aad
outsb
mov
rol
and
and
mov
roll
pop
push
imul
dec
sub
and
push
or
mov
and
inc
inc
mov
sarl
rcll
adc
inc
dec
lret
mov
xchg
out
dec
mov
cmpsb
test
mov
shll
aas
movsb
mov
adc
xchg
ja
fdivp
aaa
jge
xor
jecxz
inc
int
mov
insb
mov
cmp
xor
rcrb
push
pop
dec
mov
xor
or
xchg
popf
sahf
iret
addr16
xor
pushf
sarl
jmp
push
pop
mov
lahf
gs
enter
in
inc
cmp
xchg
mov
mov
xchg
push
sbb
add
out
jmp
mov
jne
stos
ja
cmp
cmp
movsb
fisttps
je
shlb
mov
hlt
mov
divps
mov
filds
adc
stos
pop
sub
or
into
dec
sarl
addr16
fidivl
lock
mov
shrl
test
jmp
in
add
mov
ja
cmp
fld
mov
add
lahf
fnstcw
mov
adc
call
cmpsl
packsswb
das
les
cmp
cmp
xchg
add
insb
mov
xchg
das
cmp
call
jmp
xchg
cli
adc
sbb
ja
jae
test
and
or
adc
insb
mov
push
pop
daa
scas
jb
mov
jne
fsubrl
repz
clc
xor
push
js
fsubl
bound
adc
or
and
jns
push
mov
daa
out
jp
or
mov
scas
xchg
scas
cmp
fucomp
adc
mov
pop
cmc
dec
cmp
xor
mov
ret
out
popa
insl
fnstcw
lcall
mov
adc
fwait
mov
aad
jg
lret
push
adc
fnstcw
add
ret
sarl
int3
cmp
scas
sub
jg
std
pop
pop
ljmp
sahf
repnz
xor
std
mov
jl
cwtl
stc
pop
push
mov
cltd
cli
mov
out
mov
mov
ljmp
test
jne
ds
repz
jge
cmc
jle
add
cmc
jle
add
mov
mov
lcall
mov
dec
pop
fildll
pop
stos
mov
scas
popf
cmp
mov
cmp
js
pop
xor
pop
dec
lcall
or
jle
outsb
mov
js
push
mov
dec
fdivr
sbb
outsb
sti
fnstenv
pop
not
data16
dec
fwait
lods
add
outsl
ret
xchg
adc
add
xchg
jl
cltd
mov
pop
fs
shlb
xor
imulb
loope
mov
insb
jle
mov
iret
mov
inc
orb
adc
sub
leave
mov
mov
add
push
push
jo
mov
jo
jb
movl
adc
dec
jge
hlt
dec
pop
enter
and
hlt
push
push
dec
or
dec
add
cmpl
bound
jmp
xlat
std
test
loope
inc
test
mov
push
dec
cmp
mov
insb
xchg
nop
shrl
push
jbe
test
sahf
les
xor
mov
das
fdivr
add
cmp
arpl
pop
sub
lret
mov
int
inc
sub
push
xchg
imul
push
lods
sbb
push
loopne
mov
xchg
xchg
pop
jne
jecxz
sub
mov
mov
sub
push
loop
imul
jge
jbe
call
scas
pop
xor
out
les
sbb
cmp
jno
mov
jns
repz
scas
aaa
into
cmp
fcompl
sbb
pushf
es
adc
cmp
int3
adc
es
imulb
xlat
int3
sub
inc
add
dec
cmp
xor
pop
aas
sub
loop
jge
add
enter
ljmp
push
imul
imul
es
stos
mov
xor
std
sbb
pop
sbbb
mov
sub
ja
dec
flds
xor
mov
jns
in
push
cmp
nop
jae
leave
pop
add
popa
jle
fdivrl
es
sbbl
shll
xchg
mov
sub
cmpb
out
cltd
fs
neg
outsl
js
ret
xor
pop
cmp
aad
add
push
clc
sbb
push
vaddss
pusha
shll
sub
clc
inc
add
mov
jbe
fsubp
push
shrl
out
fstpl
incl
into
push
mov
stc
int3
pop
jle
loopne
loopne
ds
xor
cld
nop
dec
mov
sbb
call
or
es
ret
xor
or
pop
popw
sarb
push
mov
repz
sahf
dec
jnp
xor
std
mov
xor
sbb
aaa
sbb
icebp
sbb
aad
repz
or
das
sub
inc
adc
cmpl
out
lods
adc
fnstcw
mov
dec
inc
in
push
push
pop
jmp
adc
sub
or
divl
sub
test
cwtl
mov
insb
jge
out
mov
adc
frstor
lock
dec
movsl
loope
push
cmp
aam
mov
dec
and
test
mov
out
je
sbb
sbb
adc
popa
push
iret
pusha
outsb
in
out
cwtl
inc
inc
xlat
ljmp
iret
mov
stc
mov
hlt
inc
shlb
int
push
dec
push
inc
dec
ficoml
push
push
sbb
inc
xlat
sub
or
lea
out
cmc
dec
ja
xchg
mov
xchg
lea
fstpt
xchg
out
mov
subl
and
pushf
stos
xchg
int
xchg
imul
xchg
es
mov
icebp
or
cmp
mov
out
push
mov
scas
stos
lsl
aad
daa
out
xlat
xchg
int
xor
cmpxchg
scas
imul
mov
loop
xchg
ja
in
push
adc
outsb
dec
inc
sarb
cmp
arpl
cmp
sub
or
repnz
dec
out
mov
mov
nop
jno
out
pop
out
push
adcb
cld
notb
xor
scas
das
fisubs
xor
std
pop
mov
xchg
pop
xchg
bound
xchg
jge
sahf
jp
clc
incl
xchg
in
or
mov
push
shlb
push
push
imul
and
ljmp
or
in
inc
cmc
jge
jns
outsb
mov
sub
movsl
imul
adc
jl
das
jns
xchg
sub
mov
push
pop
or
push
xchg
hlt
adc
pop
cmp
stc
mov
fcompl
movsb
lahf
shr
aad
xchg
aam
xchg
in
xchg
mov
cs
mov
mov
nop
mov
das
outsl
mov
or
bound
mov
adc
scas
sbb
mov
dec
cltd
mov
cmp
in
sbb
mov
pop
pop
push
mov
jns
movsl
sub
fwait
sbbl
push
mov
fisubrl
dec
ror
rorb
xlat
xchg
scas
inc
dec
rclb
adc
stos
cwtl
repnz
idiv
loope
cs
push
mov
out
mov
mov
jecxz
push
dec
aad
cmpsb
out
sbb
push
in
mov
mov
xchg
mov
sti
push
test
jge
push
cmp
xchg
test
xchg
pop
jo
mov
or
pop
es
insb
sbb
and
jnp
jl
fdivrl
arpl
mov
lock
rorl
icebp
les
cmp
repz
fdivrl
fistpl
daa
call
jmp
and
outsb
mov
enter
jbe
pop
mov
mov
jnp
xor
cmc
test
outsl
stc
jle
lahf
sub
sbb
mov
sbb
ror
xor
dec
mov
inc
lret
push
in
xor
dec
lret
ficoml
cwtl
popa
cs
loope
xor
xor
hlt
adc
addr16
mov
leave
clc
lods
lea
lods
fisubrs
ja
addr16
ja
loopne
cmp
fxtract
mov
dec
aad
inc
adc
mov
xor
or
mov
enter
pop
in
nop
sbb
ret
mov
dec
mov
mov
add
jne
inc
push
xor
cmp
nop
data16
insl
outsb
push
pop
xchg
or
je
repnz
pop
adc
adc
xchg
mov
dec
cmp
pop
icebp
cmp
xchg
jb
fwait
lods
adc
add
imul
popf
jno
mov
mov
fidivrl
in
or
mov
mov
or
test
mov
test
pop
std
sbb
rcll
sub
push
mov
push
test
or
out
mov
mov
adc
pop
ljmp
jnp
cmp
inc
pop
mov
popa
or
adc
sub
in
jl
enter
loope
fadd
fsts
push
lret
in
aas
sbb
xlat
push
call
mov
cmp
es
fisttps
dec
leave
in
sub
int
jbe
jp
push
mov
lock
push
test
je
inc
cmpsl
dec
push
sbb
rclb
cmpsb
xor
cmp
loopne
arpl
jne
sbb
sbbl
fs
pop
cs
mov
imul
outsl
add
cmp
sbb
in
dec
cltd
stos
cmp
lahf
mov
mov
xorb
mov
pop
stos
or
fs
sti
imul
outsl
test
aaa
les
and
jge
cs
jp
xchg
jge
mov
and
push
pop
xor
dec
jmp
cmc
mov
or
xchg
push
dec
jne
jecxz
stos
fwait
icebp
rcrl
push
or
scas
out
pop
stos
js
mov
pop
arpl
inc
mov
cmp
fstpt
movsb
mov
les
movsl
and
cmp
das
jb
lds
sub
outsb
dec
sbb
inc
imul
dec
xorb
bound
sbb
sbb
and
inc
jno
js
popa
push
xchg
cli
jg
dec
jb
rcrl
in
icebp
lods
sub
cwtl
in
pop
int3
inc
adc
adcb
mov
lret
mov
fsubrs
xchg
repnz
inc
sub
adc
push
jge
inc
sub
cmp
lods
sti
or
lods
iret
add
inc
sbb
xor
mov
adc
lds
xor
jno
mov
pop
pop
imul
rcrl
lods
popa
inc
outsl
add
loop
mov
ret
andb
enter
lret
dec
cmp
xchg
mov
js
or
push
pop
insb
pop
in
scas
aas
or
inc
cmp
push
fdivs
mov
dec
sub
mov
ret
cmp
push
sti
mov
push
pop
lcall
scas
cld
add
xor
sahf
push
int3
cmp
adc
jecxz
jno
ret
lea
insb
lds
or
rolb
fists
repnz
fld
xor
mov
adc
cmp
push
inc
add
orl
in
xchg
cmp
jmp
popf
mov
add
push
cmpsl
lret
sub
mov
test
pop
fwait
xor
popf
cmp
lcall
lea
xchg
pop
fcoml
aas
ss
jnp
dec
dec
cld
imul
inc
out
out
push
enter
inc
out
es
push
add
push
pop
out
mov
push
mov
imul
or
int
cmp
cmp
mov
sub
imul
cli
push
scas
loopne
mov
mov
jp
xlat
adc
ljmp
add
sub
int3
iret
jnp
rcr
or
and
fidivl
ss
cmp
test
mov
cld
mov
mov
pop
xchg
mov
shrl
and
push
sub
cmpsb
mov
ret
pop
or
stos
mov
inc
test
flds
mov
loopne
bound
cmp
inc
xchg
mov
push
mov
int
or
fs
pop
mov
or
hlt
les
icebp
in
aad
fadds
jl
xchg
inc
xchg
xchg
and
cmp
inc
sbb
or
mov
and
xchg
inc
xlat
jno
push
mov
push
xchg
inc
mov
adc
push
or
int3
icebp
shlb
fwait
out
je
rol
pushf
jne
sub
xor
xor
or
fwait
push
adc
cmp
idiv
dec
jecxz
fs
sti
nop
lret
sub
popa
mov
sbb
xor
cmpsb
mov
jg
mov
sarl
fwait
xchg
lock
hlt
jnp
int3
in
pop
inc
mov
enter
pop
clc
mov
lret
mov
xor
mov
divb
inc
out
jbe
jns
fiadds
jle,pn
insl
lods
ljmp
out
push
fcmovu
xchg
fdiv
in
int3
fucomi
sti
mov
iret
lock
outsl
jg
loope
xchg
lahf
mov
into
jge
sti
pop
fcomip
jmp
movsb
push
les
ss
adc
or
cmp
lods
mov
in
jns
jno,pt
jae
or
lds
mov
int
cltd
jo
je
ret
push
clc
inc
jo
cmp
iret
or
scas
adc
fidivl
dec
pop
mov
dec
nop
mov
inc
lcall
int
lcall
and
fsts
pushf
and
push
mov
lret
pop
mov
add
clc
imul
fstl
insl
and
sbb
xchg
xchg
hlt
sub
aaa
mov
sbb
push
mov
mov
imul
xchg
stc
rcr
jno
push
fsts
in
cltd
in
dec
mov
mov
idivl
cmpsb
aaa
in
dec
mov
cmp
ret
jle
mov
xor
mov
mov
and
std
xchg
mov
adc
push
aaa
sbb
rcll
pushf
lret
ljmp
or
outsb
push
push
cmp
mov
xchg
or
ss
push
rcrl
sbb
sbb
gs
cmp
movsb
xchg
addr16
in
ljmp
outsl
lea
cmp
sbb
orl
add
stos
adc
das
xor
jae
push
dec
pop
and
lcall
mov
aaa
dec
imul
and
mov
stos
sub
data16
lcall
test
addr16
in
repnz
add
xchg
push
xchg
pop
add
sbb
push
rorb
dec
and
push
in
adc
sub
lcall
xorb
or
std
and
test
fwait
outsb
pusha
xchg
push
or
int
cwtl
mov
sub
pop
jmp
les
ret
cs
fstps
push
scas
pop
xchg
cmp
data16
mov
je
lret
test
aas
dec
pop
lods
sub
dec
cltd
sbbl
test
push
jo
lahf
cmp
outsl
stc
mov
scas
cs
stos
sbb
sarl
jp
and
hlt
xchg
jp
enter
and
sbb
mov
pop
int3
mov
pop
ljmp
pop
dec
pop
push
or
out
fidivl
mov
sbb
insl
stos
lret
dec
inc
mov
sti
push
mov
push
xorl
jo
repz
dec
cld
bound
out
mov
xlat
gs
dec
jge
in
adc
pushf
sub
cmp
outsb
icebp
sahf
xchg
repz
iret
pop
mov
xor
inc
push
jnp
mov
test
in
out
leave
cltd
push
popf
lock
pop
negl
xchg
js
xchg
idivl
jp
stc
int
mov
jmp
fiadds
stc
push
cmp
ret
repz
sub
fdivrl
cmp
mov
fiaddl
or
xchg
imul
outsl
loopne
fidivrs
movsl
ret
push
vpaddusb
or
and
xor
movsl
cmp
push
cmp
pop
insb
aaa
test
or
in
sub
fs
sub
das
fisubrl
jl
test
ljmp
rcll
outsb
sub
fs
jle
aas
dec
jg
std
lcall
aam
jmp
mov
loop
roll
sarb
das
aaa
in
mov
mov
sti
dec
pop
and
or
push
inc
adc
cmp
xor
fnstenv
sbb
sahf
imul
in
fcmovb
add
cmp
xor
adc
mov
rcrl
sub
ja
cmp
pop
xchg
data16
ja
addr16
fcomp
sarl
dec
dec
mov
ret
loopne
cmp
leave
pusha
loop
jle
jb
jecxz
test
loop
js
jl
mov
xcrypt-ctr
cmpsl
ficoml
inc
enter
add
int3
push
sub
pushf
jbe
arpl
mov
cmp
jecxz
mov
shlb
data16
or
cltd
mov
sbb
adc
roll
mov
inc
fst
sahf
lods
movsl
sbb
dec
mov
std
adc
sbbl
sub
push
inc
aam
gs
jecxz
lret
arpl
xchg
loope
inc
aas
push
addr16
int
pusha
jl
sbb
fmuls
data16
sub
stos
sti
xchg
ljmp
out
mov
push
out
xor
movsl
mov
lea
ja
fstpt
addr16
cmp
jmp
xchg
loope
orl
insb
aaa
pop
cmc
mov
inc
sub
pop
jnp
stos
dec
test
jge
test
aaa
xchg
aaa
mov
or
rcll
add
mov
mov
call
mov
cmp
arpl
sub
xchg
js
js
add
ja
ret
mov
pop
pop
mov
ficomps
mov
jne
jl
xchg
arpl
fstp
jg
push
mov
repnz
ljmp
adc
hlt
leave
das
dec
xor
cs
jns
aam
test
ja
jno
pushf
stos
push
sub
xchg
push
sbb
inc
insb
cmp
add
dec
xchg
push
pop
insb
rorl
sub
ja
inc
mov
aad
mov
pop
sub
into
or
and
scas
mov
fisubs
test
push
loop
xchg
popf
faddl
inc
dec
adc
les
cmp
push
and
pop
mov
leave
cmp
cmc
repnz
xor
dec
jnp
inc
mov
or
or
cltd
gs
push
xor
iret
cmp
test
test
test
adc
push
pop
fdivs
xor
leave
sub
fld
jb
push
push
mov
out
arpl
ss
push
sub
lahf
mov
xorb
sbb
and
xchg
adc
or
iret
in
xor
fdivp
cld
rolb
push
inc
scas
out
movsb
rcr
pop
outsb
or
sbb
push
jp
movsb
leave
add
mov
xor
add
out
mov
test
jecxz
sahf
jl
xchg
xchg
std
ja
icebp
dec
sbb
mov
jne
hlt
add
aad
das
add
push
mov
dec
inc
in
pop
mov
or
out
lret
stos
das
wbinvd
push
ret
mov
xchg
pop
pop
ss
pop
adc
or
jp
orb
mov
in
xor
sbb
cmp
repz
lcall
jb
xchg
repz
jecxz
cmp
out
mov
insl
jne
cmp
cwtl
lock
imulb
lret
jno
loopne
pop
jle
ja
icebp
shl
jge
lretw
in
cmp
and
shl
in
movsb
sbb
jbe
inc
pop
mov
cmp
and
inc
mov
js
cmc
das
mov
cmc
das
and
add
xchg
movsb
push
invd
xchg
cltd
and
inc
mov
xchg
mov
and
xchg
cmp
and
icebp
and
aas
ljmp
mov
in
jl
mov
and
movsb
jg
inc
je
repz
jp,pt
jbe
lods
xchg
icebp
sarb
cltd
and
sarb
mov
dec
inc
cld
sarb
test
movsb
jg
inc
push
fildl
loop
cmp
inc
mov
cld
cltd
mov
jo
jp
cmp
jl
aaa
add
je
jg
sbb
sbb
roll
add
inc
in
jmp
fadds
out
add
add
cmp
push
les
adc
pop
pop
push
pop
in
loopne
cld
inc
cmp
xor
add
sub
push
int
out
add
shlb
sarb
pop
adc
fs
add
sub
nop
cmp
cmp
roll
jmp
cmc
loopne
and
push
pop
adc
test
add
or
rolb
fiaddl
xchg
and
inc
ds
pop
out
or
add
add
add
pusha
js
cmp
mov
cmp
leave
add
pushl
stc
mov
cwtl
out
sub
push
fistl
jbe
cmp
push
cltd
pop
aas
fdivr
xor
push
hlt
cwtl
fdivl
int
adc
cli
mov
and
lods
cli
xor
stos
inc
pushf
and
push
mov
cli
add
xor
xor
xor
pop
jmp
inc
mov
std
pop
fs
mov
push
stos
dec
xchg
push
add
xchg
cmc
inc
xchg
jg
mov
repnz
xor
mov
cli
xchg
xor
sahf
mov
fwait
jnp
jnp
std
and
fcmovnu
sti
xor
xchg
hlt
dec
mov
dec
pop
hlt
push
push
std
pop
lods
cmp
les
test
flds
notb
mov
jmp
mov
inc
scas
sbb
enter
je
mov
testb
inc
push
mov
fs
hlt
add
xchg
xchg
xlat
mov
adc
mov
addr16
lods
adc
jl
push
jl
std
sub
mov
fcmovb
insb
icebp
icebp
pop
adc
loopne
jb
pop
rcll
movsl
jo
gs
shrb
lcall
je
clc
jnp
sar
mov
das
mov
jle
pop
insb
jnp
js
pop
inc
sti
sarb
vcomisd
aas
xchg
in
rorl
aaa
int
jnp
or
int3
fisubrs
pushl
aas
xor
iret
jo
lahf
adc
addr16
xor
cmp
in
gs
roll
cli
arpl
xchg
mov
shlb
scas
and
out
or
aas
loopne
fwait
xor
loop
ds
sub
cmp
stc
pop
pushf
push
mov
fstl
sbb
and
dec
add
dec
stc
jle
stc
pop
js
pop
xchg
std
inc
out
xchg
out
pop
lret
lahf
ficomps
cmp
cmp
or
out
cli
sub
decl
mov
stc
cmp
mov
xchg
in
lahf
sub
mov
xchg
lret
dec
push
inc
orl
scas
enter
lahf
popf
jno
fs
bound
movsl
sub
jecxz
mov
xor
cmp
lods
mov
imul
rorl
adc
inc
pop
inc
scas
inc
pop
loop
fistpll
fxtract
ds
push
pop
xor
mov
lock
pop
data16
xor
mov
negl
pop
mov
mov
mov
mov
and
popa
leave
ret
stos
xchg
cmp
push
fcoml
jb
pop
les
and
test
cmc
xor
add
inc
idivl
cmp
pop
jmp
pop
testb
mov
xor
xor
test
cltd
mov
lods
loope
xchg
fyl2xp1
fidivl
fimull
jbe
xchg
pcmpgtw
sbb
cmpsb
jns
mov
sbb
test
lea
sbb
insl
dec
lahf
or
fstps
cwtl
jp
dec
leave
cmp
into
sbbb
int3
icebp
dec
adc
fsubrl
call
jb
icebp
push
mov
cmc
and
cltd
lcall
mov
jl
fimuls
lds
loop
sbbb
sub
push
push
adc
gs
mov
ficomps
test
push
cmp
aas
test
jne
cmp
roll
mov
jp
sub
js
cwtl
incb
addr16
mov
mov
fnstcw
ror
adc
push
push
mov
pop
mov
test
or
mov
addl
bound
fcoms
pop
fwait
mov
xchg
xlat
gs
fnsave
and
and
sub
push
pop
xor
dec
pop
pop
mov
idiv
push
mov
into
mov
outsb
in
mov
fst
mov
push
repnz
fbld
out
lcall
dec
addl
scas
push
mov
mov
push
lret
in
mov
jecxz
pop
loopne
push
fldt
into
sub
pop
in
adc
xchg
test
and
iret
mov
xor
icebp
iret
lret
and
lahf
cwtl
jp
mov
aad
das
out
nop
adc
insb
pop
imul
mov
cmp
adc
lock
mov
mov
cmp
jecxz
xchg
repz
xchg
sbb
pop
or
lods
jle
lods
stos
mov
cmp
push
lods
push
outsw
mov
in
pop
add
xchg
call
lcall
les
arpl
sub
fisttpll
gs
enter
shrb
pushf
mov
ja
in
cmp
mov
icebp
push
insb
cmp
xchg
in
icebp
mov
adc
pop
cmp
addb
insb
daa
inc
pop
movsl
test
notb
pop
sti
xorl
ds
mov
add
pop
jo
lods
lods
ret
push
aas
test
inc
xchg
dec
insl
int3
js
mov
or
and
cmpsb
icebp
into
pop
sbb
push
inc
test
mov
popf
push
sbb
lret
lcall
mov
pushf
bound
lods
or
and
js
inc
pop
stos
rclb
ss
mov
xor
push
test
lret
iret
imul
mov
dec
sbb
mov
mov
xlat
xlat
aad
aad
aas
aas
aas
mov
insb
add
or
adc
sbb
and
sbbb
inc
call
pusha
xchg
jno
and
pop
mov
notb
jle
fsubs
push
aas
inc
psubusb
jecxz
sub
cmp
pop
mov
nop
aaa
jp
push
sub
lock
js
or
fcoms
pusha
std
pop
add
jnp
pop
fsubrs
jno
cmpb
mov
pop
js
lret
add
push
xor
cmp
xor
rclb
sub
test
sahf
mov
add
xchg
lods
pusha
mov
cmp
or
add
push
shlb
push
sar
xor
or
ret
ds
subl
popa
dec
add
negb
push
mov
test
popa
lret
dec
add
fsubs
ret
out
sub
inc
mov
adc
and
or
movsw
subl
push
shlb
mov
or
add
mov
int
cmp
adc
add
sbb
xor
mov
xchg
adc
inc
push
out
lea
movsb
pop
jae
sub
sub
inc
mov
test
inc
push
push
mov
push
push
or
or
dec
add
lfs
inc
pop
push
test
lock
xchg
fmuls
lods
or
lds
pushf
jp
xor
popf
das
pop
push
jmp
pop
test
jp
dec
aam
stos
jecxz
subps
iret
xchg
scas
cmp
pop
mov
mov
push
outsb
in
movsl
xchg
lcall
addl
sbb
leave
repnz
addr16
dec
xor
nop
sbb
jmp
push
jl
repnz
test
xchg
mov
mov
xchg
mov
popa
std
bound
sahf
imul
fsubs
mov
ljmp
nop
in
in
repnz
inc
lock
cmp
mov
cmpsb
mov
sub
mov
test
inc
mov
mov
pop
xor
repz
and
ror
repnz
xchg
mov
fisubl
sub
and
pop
or
and
movsl
in
jns
lcall
stos
jge
sub
dec
mov
fidivl
mov
dec
or
roll
sarl
cmp
mov
xchg
movsb
mov
sub
test
jecxz
push
xor
flds
or
stc
adc
jno
gs
std
cmp
iret
cld
das
pop
jecxz
clc
subb
jmp
dec
scas
nop
xor
jo
push
lret
js
pop
or
adc
insl
inc
cmpsb
xor
push
pusha
movsl
in
aad
add
jle
fwait
and
jmp
lret
repz
xor
pop
push
sub
and
dec
xor
mov
notb
xchg
pop
mov
test
out
inc
lahf
xor
add
jl
sbb
call
loop
insb
test
cmp
aas
jno
add
add
sbb
sbb
js
out
add
pop
ja
sbb
subl
mov
inc
fadd
pop
adc
loopne
iret
or
mov
adc
dec
mov
nop
xor
into
imul
adc
lods
jge
mov
and
std
mov
push
cmpsl
jb
sahf
adc
xorl
aam
pop
sbb
or
add
sub
ret
and
mov
rorb
xor
cmc
out
mov
in
lods
idivl
xchg
push
inc
jmp
or
mov
mov
cli
and
inc
cmpsb
inc
ret
jae
push
mov
push
dec
mov
daa
inc
icebp
mov
push
push
sub
subb
out
xchg
int
pop
inc
xor
and
xor
rolb
stc
rcrb
jnp
dec
push
sar
or
inc
mov
mov
fwait
scas
or
adc
xor
lods
addr16
jns
dec
fwait
sbb
mov
sbb
adc
jae
leave
mov
jb
or
sbb
stc
dec
push
daa
xor
pop
push
jnp
push
inc
dec
sub
pop
xchg
xor
stos
cmp
clc
add
loopne
lahf
or
cmpsl
mov
lea
pushf
push
jae
iret
mov
adc
inc
dec
cmp
xchg
jge
cmp
push
add
dec
mov
push
pop
sub
lods
sub
imul
xchg
mov
push
adc
clc
das
cmpsl
ja
or
into
mov
imul
lock
or
test
mov
push
push
sbb
add
mov
or
in
mov
out
push
adc
pop
pop
sub
shrl
add
hlt
or
idiv
or
cmpsb
push
pop
or
outsb
inc
mov
call
rorb
cwtl
shll
cmpsb
xchg
popa
dec
int3
addl
mov
jbe
test
adc
xchg
and
jnp
xor
jp
icebp
arpl
pop
add
or
push
adc
adc
inc
sahf
jb
mov
pop
dec
das
jbe
xchg
lahf
aam
test
insb
imul
jne
xor
lcall
les
mov
loopne
jno
int
cmpsl
sahf
lcall
insb
pusha
rcll
gs
aam
push
push
into
shll
jmp
int
sbb
pop
adcb
sbb
and
jnp
jo
mov
mov
mov
enter
sub
dec
lcall
mov
or
bnd
and
pop
lea
sub
and
jbe
mov
push
jg
mov
pusha
pop
cmp
cmpl
sub
inc
or
xor
lret
push
pop
sub
or
mov
shl
lock
cwtl
cmp
push
popf
cmp
or
out
pop
popa
cmp
cmp
out
or
xor
cmpsb
imul
pop
mov
notb
in
mov
sbb
imul
aam
test
stos
in
std
xor
cmp
aaa
adc
icebp
arpl
nop
xor
idivl
jae
add
hlt
arpl
test
in
add
rol
cld
test
loope
or
call
hlt
jge
movzbl
pop
jb
in
inc
mov
pop
xchg
inc
add
pop
mov
outsb
cmp
cltd
mov
adcl
leave
push
outsl
leave
imulb
jns
mov
je
das
cmp
mov
js
push
filds
sbb
enter
inc
mov
inc
dec
icebp
popa
push
push
mov
and
jnp
adc
jmp
inc
mov
out
shlb
mov
sub
jne
in
jle
add
scas
jl
xchg
jns
orl
in
add
fs
test
in
rcrb
pop
xlat
lea
add
mull
mov
push
pop
add
nop
adc
jl
adc
aaa
inc
aas
popa
ds
inc
add
sub
test
in
pop
fistl
pop
and
xor
lret
loop
cmpsl
out
testl
aam
decb
fdivrl
ds
pushl
cmpsb
jle
xor
mov
cmp
inc
fildl
push
je
mov
sbb
and
mov
pop
les
ror
inc
xchg
mov
jle
cmp
out
push
mov
xchg
repnz
mov
cmpsl
inc
xchg
fnsave
or
xchg
and
add
adc
xorb
adc
jo
fnstenv
cli
sbb
xchg
rorb
fildll
das
add
sub
out
shlb
cli
sbb
popa
dec
xchg
pop
repz
and
and
xor
push
adc
insb
inc
stc
ss
adc
or
xor
and
outsl
loopne
jbe
std
pop
push
mov
fwait
adc
mov
sub
mov
inc
mov
fnstcw
negb
jns
fldcw
mov
cmp
lcall
jnp
xor
inc
sbb
mov
inc
fdivrl
out
or
aas
int
dec
lret
cld
cwtl
in
cmc
fsub
cli
sbb
loop
adcl
faddp
jmp
mov
fisttpl
jbe
push
push
or
add
jbe
lahf
movb
inc
lret
ss
mov
cmp
add
and
outsl
popa
xchg
test
loopne
push
mov
test
inc
inc
add
je
insl
lret
sub
fcmovnu
cmp
jg
decb
jns
out
xor
and
sar
ret
jno
adc
pushf
cmp
jg
push
xchg
test
sbb
cmp
or
add
jle
xor
loop
loop
push
mov
lcall
int
js
in
loop
add
jo
fiaddl
jp
les
adc
jmp
inc
ficomps
or
and
push
jns
or
shl
cmp
mov
es
lret
cs
ret
mov
pop
add
xchg
adc
cmp
jge
mov
pop
outsl
std
rolb
repnz
out
int
gs
jo
test
hlt
or
icebp
daa
sub
ret
arpl
inc
stos
mov
neg
add
clc
xor
mov
iret
push
push
lcall
je
lret
or
inc
push
into
int3
dec
mov
or
xchg
inc
cld
rcrb
rorb
add
sbb
mov
mov
add
ret
jae
pop
loope
mov
jl
mov
aaa
sbb
outsl
mov
mov
push
lret
jmp
addb
and
imul
call
ror
mov
hlt
cli
pop
lds
and
int
cmp
sub
xchg
into
inc
and
cmp
inc
fnstcw
popa
int3
push
mov
imul
inc
jg
inc
cli
ds
shll
call
rcrl
jno
rclb
test
jo
loopne
rcrb
mov
scas
mov
icebp
mov
mov
jg
mov
sub
xor
sbb
sbb
pop
mov
fsubs
jle
rorl
mov
adc
add
in
cld
movsl
jl
fistl
clc
lahf
rep
adc
sarb
mov
adc
or
xchg
push
cmp
arpl
lret
shrl
xchg
mov
ljmp
xchg
insl
insb
pop
inc
inc
fldt
and
jb
add
ss
mov
pop
incl
shl
pop
push
add
shrb
loop
push
fdivl
push
sub
jl
rcl
mov
jp
insb
xchg
icebp
jnp
mov
loopne
xchg
xchg
sbb
add
xchg
mov
pop
xor
xchg
xchg
xchg
sbb
rorb
fsubrl
sbb
ss
lahf
mov
ss
fwait
push
std
mov
ljmp
mov
inc
in
dec
divb
xchg
nop
adc
sbb
adc
or
stc
or
cld
push
test
test
pushf
test
scas
and
test
ret
xor
gs
and
push
xor
push
mov
inc
hlt
jae
mov
mulb
psrld
fucomip
jns
outsb
xor
xchg
sub
mov
push
std
xchg
sub
loopne
test
icebp
and
stos
loope
and
lea
push
lret
shll
lods
or
call
sahf
jae
jle
shrl
jb
and
pop
mov
imul
shrb
into
cmp
push
gs
je
call
xor
cli
xor
xchg
push
mov
call
add
rorl
jmp
add
insb
mov
pushf
sbb
pop
idivl
pop
cmp
lock
cmp
ljmp
cmp
adc
sbb
ret
sub
cmp
push
jl
andb
lahf
pop
lods
push
push
icebp
xor
es
add
fs
adc
divb
popf
nop
ds
and
add
nop
jb
dec
cmp
fsts
dec
cmp
and
pop
add
xchg
daa
mov
stc
xor
mov
sub
pop
jge
subl
icebp
outsl
or
pop
mov
inc
test
decl
inc
andb
cmp
xchg
pand
pop
sub
insb
mov
xor
rcl
push
dec
xor
mov
pop
clc
fs
dec
in
adc
pop
test
scas
jnp
mov
inc
fs
sub
lock
in
enter
fisubl
call
cmp
les
inc
std
pop
xlat
inc
jno
movsb
push
jbe
lahf
or
mov
int3
mov
jns
jecxz
aam
adc
inc
mov
push
fwait
inc
xchg
pusha
pop
mov
push
xchg
pop
lock
mov
cmp
push
add
loope
jbe
pop
fwait
sti
iret
jns
inc
jnp
mov
cmp
xchg
ds
cld
adc
mov
add
call
cld
aam
mov
loopne
pushf
sbb
or
jp
adcb
mov
jle
xchg
or
mov
int
scas
fucomp
push
repnz
mov
imul
fs
jae
repz
push
mov
imul
cmovle
lret
cmp
xor
in
scas
xchg
repz
push
popa
push
imul
int3
lds
jmp
ret
xor
out
add
jl
lret
rcl
xchg
inc
stos
dec
fildl
dec
cli
or
cmpsb
inc
popf
xchg
fs
xchg
stc
cmp
ds
jne
sarl
es
xchg
sbb
insb
sub
jg
rcll
pop
pop
rorb
not
ds
pop
dec
and
xchg
inc
mov
cmp
inc
jle
adc
mov
repnz
pop
fbstp
aas
lods
into
in
pop
mov
jo
mov
or
mov
jns
mov
insl
or
sub
adc
jge
cmp
pop
aas
out
dec
cs
repz
cmp
fwait
adc
mov
loop
xor
xor
aad
or
into
pop
jb
lcall
inc
in
les
lods
iret
sbb
jbe
xor
sub
jnp
inc
mov
cmp
or
sub
ja
pop
cli
jmp
pop
sbb
cmp
sub
ficoms
xchg
pop
mov
adc
sub
pop
jns
pop
lock
mov
fmull
mov
and
mov
les
xor
add
mov
xchg
icebp
dec
in
jg
insb
cmp
in
cld
std
daa
aas
push
fdiv
popf
dec
iret
rcr
in
mov
push
or
xchg
idivb
scas
cmp
outsl
repnz
fcompl
shr
addl
ss
mov
sub
fwait
bts
out
mov
clc
add
mov
ret
pop
mov
xchg
rclb
sarb
loope
xor
pushf
jns
mov
enter
ret
and
push
inc
fwait
sbb
mov
or
inc
shl
mov
push
and
mov
sub
pop
insl
loope
inc
dec
lds
int3
pop
rcl
sub
dec
and
lock
jns
add
cmp
xchg
xchg
data16
inc
jge
iret
push
iret
mov
cmp
cmp
outsl
mov
mov
je
push
jl
loope
test
and
lret
cmp
push
cmp
lods
arpl
aaa
out
cmc
popa
lret
out
sub
fwait
jg
out
ds
mov
mov
mov
push
iret
fisubrl
rep
inc
icebp
scas
jle
mov
inc
sub
int3
and
ds
icebp
loop
or
xor
scas
xchg
cmp
rcrl
pop
sub
sti
mov
scas
fsts
adc
test
pop
rorb
cmp
decl
cmp
sti
mov
std
push
push
fwait
jmp
inc
mov
mov
xchg
mov
or
stos
sub
or
cmpsl
testl
xor
and
add
sbb
cs
and
xchg
popa
dec
dec
xor
movsl
test
xchg
mov
ret
mov
mov
bound
pop
mov
add
and
mov
cmp
xor
sub
sbb
xlat
pop
pop
xor
xlat
adc
daa
dec
popf
sarl
cwtl
addr16
ja
jmp
ret
push
and
jle
inc
and
fwait
inc
dec
adc
scas
push
pop
aam
push
lahf
pop
and
popa
push
mov
aaa
cmp
and
cmp
je
lds
pushf
mov
jmp
in
cld
xor
adc
ljmp
sub
daa
ret
xchg
mov
popa
push
pop
push
dec
jb
adc
les
xchg
add
test
xor
mov
stos
jb
sti
roll
adc
fisubrs
stos
mov
test
jecxz
stc
adc
xor
cmp
add
and
pop
mov
and
mov
out
dec
enter
outsl
xor
popa
hlt
mov
test
addb
out
fs
mov
cs
inc
jmp
aam
mov
pop
push
push
or
shrl
inc
mov
shlb
inc
mov
adc
das
movsl
add
xlat
dec
push
add
mov
jecxz
pop
imul
lea
ror
fstpl
sbb
mov
negl
fnsave
in
scas
sbb
cmp
stc
mov
iret
in
ds
fdivrs
add
push
jb
or
leave
pop
je
aas
test
mov
dec
cmpsl
add
cmc
xchg
push
std
aas
mov
jmp
mov
outsb
sbb
repnz
and
or
fwait
mov
pop
sbb
les
or
pop
out
xchg
push
adc
hlt
xlat
mov
mov
iret
jne
movsb
shrl
adc
mov
mov
sahf
out
dec
mov
iret
in
fidivs
and
mov
sbb
cmpsl
jno
lret
sahf
mov
push
sbb
movsb
dec
sbb
cmc
punpcklbw
out
leave
sbb
call
sub
dec
add
xchg
sbb
rcll
ljmp
pop
shr
push
int
out
imul
pop
pop
mov
cld
mov
and
shl
dec
mov
xor
and
xchg
repnz
jp
test
cmp
pop
std
xchg
xchg
mov
pop
pop
and
jl
xchg
mov
mov
gs
ret
add
je
ja
xchg
pop
hlt
mull
cmp
mov
mov
bound
outsl
mov
test
cmp
lcall
int3
mov
mov
pop
sti
movsb
mov
loope
aas
cld
shr
loop
movsl
rcrb
push
movsb
loope
adc
mov
out
jns
mov
cmp
xchg
movb
call
gs
dec
rcll
adc
repz
and
inc
int
mov
rorl
adc
ret
daa
in
cmp
sti
fiaddl
xchg
iret
mov
mul
fdivs
decl
jb
in
push
sbb
sub
ss
sub
xchg
sahf
stc
add
xor
sub
cmp
lcall
mov
jo
fcom
xchg
xchg
pop
mov
mov
xorl
subl
xchg
xchg
ret
jge
push
mov
imul
cli
jle
lret
sbb
xchg
ds
dec
mov
add
lret
stos
fs
adc
cwtl
jmp
leave
fmull
in
test
sub
ljmp
in
insb
pop
sub
mov
scas
push
lret
stos
and
pop
sti
addb
cs
xchg
inc
xchg
and
jo
sub
pop
jnp
loope
sub
iret
xchg
pop
dec
sti
mov
push
pop
stc
jmp
cmpsl
pop
notb
adcl
rclb
and
sub
leave
je
pop
dec
mov
out
inc
int
pop
push
je
mov
lcall
push
mov
push
aam
inc
aaa
je
xor
stc
mov
dec
inc
mov
nop
outsl
lret
fistpll
cmpl
adc
aaa
mov
sub
push
xlat
push
pop
rclb
lret
pop
and
fs
idiv
imul
mov
mov
pop
shlb
stos
fdivs
and
mov
sahf
and
bound
imul
inc
out
movsl
out
scas
lret
loop
inc
les
rep
lds
xchg
lret
pop
mov
xor
pop
ffree
xchg
pop
popf
mov
pop
fimull
mov
jbe
mov
imul
sbb
ss
test
scas
leave
sub
cltd
addb
aaa
cmpb
imul
push
mov
push
jnp
mov
sub
call
addr16
pop
xorl
push
and
test
std
clc
sub
jp
in
jae
push
adc
into
sbb
jp
test
and
jno
pop
es
mov
sub
inc
sub
xchg
and
cld
xor
pop
dec
into
frstor
mov
cmpsl
ror
mov
loop
lods
popa
lds
orb
push
inc
and
adc
pop
cmp
mov
out
icebp
cs
mov
fnstsw
pop
fmull
cmp
loop
mov
test
lahf
leave
daa
sarl
or
hlt
push
je
pop
push
icebp
cmp
test
out
clc
xchg
add
push
jp
inc
sbb
je
pop
repz
outsb
stos
mov
hlt
leave
xorl
dec
jl
push
add
push
mov
outsl
add
loope
es
enter
lret
fmulp
js
out
pop
mov
scas
dec
test
inc
mov
cmc
pop
ds
xchg
cmovbe
sbb
pop
aas
into
push
push
pushf
movsb
xchg
arpl
xchg
inc
mov
dec
jne
xlat
inc
ret
shlb
aad
xor
loop
mov
in
or
push
add
cmpsl
arpl
cmp
mov
cmpl
inc
mov
dec
push
scas
clc
mov
inc
aad
add
mov
inc
mov
in
fisttpl
rorl
lahf
jnp
ret
hlt
push
pop
pop
push
mov
mov
mov
mov
ss
test
xor
fimull
jle
lds
repnz
push
inc
test
mov
push
mov
andl
cli
and
xchg
setb
fwait
getsec
xchg
jns
lock
pushl
mov
pop
nop
out
clc
out
xor
fimuls
cmp
and
shll
rolb
push
std
cmp
ss
jmp
add
ret
mov
jge
push
mov
jae
mov
shl
cmp
jne
or
fists
jmp
mov
imull
in
sbb
mov
cmpl
imul
call
lret
lcall
and
in
jns
jae
inc
sti
fucom
and
mov
or
pop
or
pop
cli
jb
mov
imul
or
rorb
sbb
cli
dec
faddp
pop
xchg
or
icebp
or
sti
hlt
das
mov
insl
insb
adc
fildl
aaa
and
xor
ret
and
mov
js
test
sbb
imull
repz
pop
ja
out
les
mov
xchg
pop
jno
pop
sub
scas
insb
jns
xor
mov
pop
dec
jbe
or
pop
cmp
enter
sahf
divb
and
test
sub
lahf
cmc
popf
jmp
push
dec
pop
mov
xchg
mov
in
nop
pop
xchg
jle
out
sub
xor
jmp
mov
mov
lods
out
and
jbe
sbb
mov
pusha
int
lahf
ss
xor
scas
and
pop
xor
cmp
xor
jl
icebp
inc
repz
repz
repz
outsb
pop
inc
mov
repnz
xorl
mov
dec
clc
dec
pop
xchg
mov
fiadds
les
outsl
shlb
adc
jge
in
add
ja
shrb
mov
dec
lahf
cmpsl
sub
mov
push
movsl
sbb
stos
inc
xor
mov
lcall
out
push
jne
add
mov
pop
sub
fdivrl
out
pop
mov
mov
mov
sbb
mov
mov
lock
xor
sub
mov
out
inc
push
lcall
add
fnsave
add
cmp
mov
outsl
jo
mov
mov
push
push
or
out
or
into
or
add
inc
fcompl
jmp
pop
xorb
ljmp
repnz
lock
push
iret
lret
pop
xlat
mov
pop
jge
mov
pushf
call
xchg
rclb
mov
xchg
aas
sar
sbb
pop
inc
cltd
rol
in
pop
or
sarb
mov
imul
jp
fistps
and
sti
add
inc
insl
mov
stc
negb
mov
push
xor
sahf
jnp
adc
mov
jb
loopne
push
mov
addl
xorb
push
inc
icebp
adc
popf
xchg
jle
test
cltd
mov
mov
dec
cmp
fdivrp
std
fwait
popf
clc
cli
jb
add
sub
xchg
test
sub
and
cmp
popf
call
fbstp
adc
rcrl
push
popf
xchg
rcll
sti
or
or
mov
sub
mov
xchg
sub
shrb
aam
repz
cli
mov
mov
aam
popa
sbb
mov
loope
mov
shr
loope
adc
repz
inc
push
aas
ja
and
sbb
push
pop
bound
xchg
push
sbb
test
movsb
ss
dec
dec
cmpsb
hlt
imul
gs
pop
jbe
decl
add
or
lods
nop
mov
add
jns
add
addr16
aam
lods
andl
ret
and
adc
lods
xor
push
std
cs
xor
dec
xchg
push
in
xor
stos
push
mov
sahf
pop
faddp
shll
jb
pop
out
xor
sbb
movsl
sbb
dec
dec
xchg
testl
sub
leave
std
inc
sbb
fsubrl
das
ret
pop
or
sarl
ja
ja
or
outsl
jo
xchg
repz
pop
pop
xor
insb
testl
adc
inc
mov
pop
push
and
xchg
popa
dec
lret
xchg
cmc
cwtl
jns
lret
fs
jmp
xchg
sub
push
xor
cmpsb
xchg
std
xchg
test
push
lret
mov
xor
ret
pop
leave
jae
data16
mov
lahf
les
call
add
iret
jbe
ds
arpl
push
pop
test
lret
xchg
lahf
inc
fistl
jns
adc
sbb
sbb
cmp
cld
push
jo
scas
inc
mov
cs
xor
sbb
les
mov
and
ret
mov
or
jae
pop
jecxz
add
mov
sbb
iret
push
inc
lods
adc
jne
jge
dec
mov
ss
jl
lahf
sub
jecxz
in
loope
pop
pop
pop
lahf
push
mov
es
or
fdivl
xchg
insl
add
sbb
insb
lret
outsb
in
mov
mov
mov
call
push
call
jp,pt
daa
into
dec
fisttps
dec
fisttpll
dec
hlt
daa
incl
test
notb
xchg
lahf
mov
sub
push
std
je
cmp
jl
stc
or
test
jo
test
cmpsb
lahf
adc
jg
jg
jle
jl
jmp
add
and
arpl
arpl
xor
mov
sub
xor
in
push
mov
mov
mov
test
pop
imul
and
insb
sub
int
aam
in
lds
in
mov
fisttpll
mov
jmp
push
inc
leave
out
xor
cmp
filds
aaa
inc
jge
push
bsr
lods
sarb
push
in
scas
pop
dec
push
inc
adc
inc
jb
xorl
fwait
push
ss
enter
iret
rorl
jle
loopne
rorl
pmaxsw
sbb
inc
mov
out
jecxz
ja
lods
cs
lods
ja
pop
int
dec
inc
lcall
add
lcall
xor
push
adc
das
out
lahf
dec
cli
sbb
sub
inc
jnp
sahf
mov
mov
ljmp
jg
cld
addr16
adc
mov
rorb
out
ljmp
lods
imul
jb
mov
lret
push
jl
cltd
imul
cmp
lret
gs
inc
xor
mov
test
inc
nop
popa
imul
cmpsb
adcl
std
das
lahf
lock
pop
cmp
jg
push
cld
lahf
aas
lret
mov
mov
pop
aas
mov
fwait
rolb
popf
xor
into
imul
ffree
dec
loop
enter
dec
je
mov
cmp
popf
and
add
out
out
lock
lret
iret
cmc
jo
xchg
dec
clc
aad
xor
xor
jg
xor
add
in
pcmpeqw
fsub
popf
ds
les
mov
sbb
sti
adc
or
fs
and
ljmp
lret
adc
mov
ret
push
jnp
aaa
mov
add
testb
jbe
mov
ja
loopne
sub
sub
cmpl
push
repnz
icebp
xor
mov
das
insl
inc
jne
mov
stos
inc
push
push
cmc
dec
ficompl
out
fld
aas
pop
mov
stos
xchg
stos
push
test
adc
pop
push
push
lcall
and
mov
push
adcb
pop
mov
fyl2xp1
mov
lea
jno
mov
mov
ss
mov
mov
or
mov
fcmovnb
mov
pop
sbb
push
sarl
sbb
out
sbb
jge
cmpsl
cmpsl
or
dec
in
daa
push
jbe
fsubs
outsb
lahf
or
cmp
dec
in
or
jl
aaa
jecxz
dec
jl
enter
popf
jp
xchg
aas
xor
sub
iret
fistl
roll
test
adc
add
sub
adc
sti
mov
mov
jl
incl
leave
mov
add
ja
loop
lds
adcl
adc
lret
lcall
dec
mov
inc
jbe
aas
scas
or
test
call
cwtl
scas
in
enter
ja
stos
aaa
sbbl
push
sub
adc
or
out
std
mov
jb
mov
mov
mov
and
movsb
sub
jg
rorb
adc
lahf
and
xchg
insb
jno
jns
xchg
faddl
mov
out
out
xor
and
jecxz
inc
int3
push
rclb
sub
out
js
dec
mov
xchg
xchg
sbb
call
repnz
add
mov
jecxz
jl
and
dec
mov
mov
and
in
xor
inc
outsb
or
cli
sub
ficomps
stc
and
dec
cmp
sub
jle
fidivs
push
jecxz
aas
xchg
and
pop
sub
and
mov
in
out
test
addr16
nop
mov
test
pop
pop
fadd
pop
adc
pop
and
inc
lcall
psubsw
scas
out
dec
sti
xlat
jle
jmp
out
and
fbld
out
xchg
jmp
push
jp
lea
mov
rorb
jg
pop
fistl
jl
stc
fcoms
stc
lds
lods
movb
lods
in
cmp
pop
in
in
jge
jbe
push
insb
clc
rol
mov
push
mov
popa
pop
data16
insb
push
aam
leave
repnz
inc
repz
fs
xchg
ja
fsub
mov
dec
scas
repnz
imul
mov
rorl
lods
sub
jae
sub
jae
mov
mov
pop
jmp
push
repz
jns
adc
test
sbb
jae
fiaddl
adc
test
enter
das
xor
js
dec
push
js
nop
push
nop
scas
mov
adc
loopne
cli
inc
mov
movsl
sbb
jmp
inc
cltd
data16
lds
clc
fdivs
dec
test
push
inc
daa
add
sub
fisttpl
popa
out
pop
int
xlat
adc
shl
ret
rcll
std
xor
aas
mov
fiaddl
incb
cmp
pop
repnz
movsb
out
push
cmp
stos
xchg
xor
nop
add
add
sub
xor
hlt
dec
jmp
aaa
push
fcmovu
call
lods
imul
cmp
mov
stos
xchg
icebp
cmc
pop
imul
cmpsb
mov
sbb
adc
clc
mov
outsb
into
adc
sbb
push
mov
lret
mov
and
not
ja
fiaddl
jbe
sbb
jno
mov
dec
pushf
sbb
add
imul
movsb
pop
je
pop
dec
lahf
or
aad
xchg
in
scas
dec
and
xchg
mov
cmp
mov
test
pop
xchg
sahf
in
cmp
mov
xor
xchg
popf
dec
mov
in
dec
lcall
mov
jno
dec
mov
out
rcrl
sti
mov
jecxz
scas
sbb
popf
insb
adc
sbb
or
movsl
loopne
mov
iret
dec
stos
rcr
mov
xchg
mov
aam
stos
cli
mov
loop
cltd
dec
aad
push
pop
adc
push
xchg
mov
imul
movsb
mov
pushf
jge
cmp
xchg
mov
test
out
popf
nop
popa
cmp
dec
xchg
xchg
rolb
mov
xor
dec
scas
xchg
dec
int3
push
sub
pushf
mov
cmp
inc
mov
lret
rcrb
inc
sub
or
push
jge
and
push
pushf
and
inc
scas
shrl
cmpsl
sub
mov
inc
ja
dec
ds
xchg
les
cmp
cmp
fcomp
loop
stc
scas
xor
data16
out
mov
mov
pop
jne
cs
mov
xlat
int3
int
repnz
fsubrs
enter
clc
jo
xchg
push
insb
into
or
inc
jge
mov
and
in
add
rorb
pop
or
lret
pop
sub
pop
shlb
pop
aad
add
sub
lods
pop
stos
jl
jne
imul
repz
imul
mov
cmp
sub
bound
ss
sub
cli
mov
lret
dec
jbe
arpl
jnp
jnp
test
mov
fucom
scas
rcr
mov
mov
gs
push
xlat
adc
je
popa
int
aas
sbb
in
jge
pop
out
jge
sub
fimull
fdivr
xor
in
icebp
out
test
mov
xor
cli
cmp
and
xchg
pop
pusha
mov
arpl
mov
out
and
std
div
std
fs
stos
loope
lret
jno
loopne
jge
push
ss
mov
js
adc
scas
xchg
test
rclb
in
mov
mov
rcrl
test
pop
pop
add
pop
mov
insb
fisttps
aad
popa
sub
outsb
sbb
xchg
dec
fsubl
push
sbb
arpl
adc
mov
cmp
leave
push
pop
cmpsl
mov
jmp
jo
fcmovu
std
pop
mov
push
test
pop
pop
sbb
sbb
fxch
sti
js,pt
clc
adc
popf
add
roll
xor
add
jae
xor
and
mov
lds
cmp
mov
push
mov
in
pop
add
cmc
imul
inc
dec
aam
lret
sub
mov
mov
gs
iret
inc
xor
adc
push
and
adc
divb
lods
cmpsb
xor
pop
pop
dec
mov
fsts
mov
adc
flds
cltd
inc
in
jne
sbb
and
bswap
sbb
mov
fsubr
in
inc
dec
aam
jmp
pop
out
push
inc
aad
jle
push
jge
pop
push
fisubs
add
add
in
jbe
imul
mull
ss
aam
cmp
mov
fs
jns
cmp
out
ss
push
cmp
pop
jns
xor
dec
push
pushf
in
dec
clc
out
dec
adc
inc
lahf
pop
jge
jnp
push
mov
jmp
xor
shr
es
shrl
and
and
and
mov
jb
jns
movsb
mov
loope
rcrl
into
ss
loopne
rcll
mov
xchg
xor
add
fucomp
rolb
add
rorb
and
iret
xor
rorb
xor
push
dec
mov
add
jge
sbb
fs
movsl
jnp
testl
sbb
jmp
fptan
sbb
iret
fdivs
scas
jle
movsb
sahf
cmpsl
iret
push
dec
lahf
xchg
sbb
mov
pop
sub
pop
mov
jp
or
aad
or
jl
ljmp
adc
or
out
jno
push
mov
mov
int
int
xor
ficoml
out
out
ror
or
mov
outsl
fisttpl
jl
int
fwait
push
xor
sub
sub
ret
push
xor
sti
aaa
mov
call
jns
mov
popf
in
add
loope
dec
imul
enter
pusha
mov
lock
pop
xor
xchg
jecxz
pop
popa
push
pop
push
ss
clc
std
rcrl
mov
sbb
cli
xor
add
mov
xchg
mov
inc
dec
push
hlt
in
xor
mov
std
mov
jge
sti
ret
push
call
jbe
add
jbe
repnz
xchg
mov
sbb
sbb
adc
leave
add
and
mov
mov
shrb
lea
mov
or
cmp
pushf
and
in
jle
mov
lods
pop
js
pop
xchg
ds
and
inc
fwait
mov
les
adcl
ret
shll
scas
xchg
inc
jbe
stos
std
fnstenv
aad
and
gs
mov
pop
mov
iret
push
pop
scas
aam
int
ror
mov
dec
cmp
fldcw
fsubs
fdivrs
xor
js
outsl
out
repz
fcomps
cld
out
jo
stos
ss
shlb
or
jne
fcompl
mov
cli
idiv
fstps
mov
or
dec
mov
add
ret
loopne
repnz
lret
lds
jo
ret
inc
test
ret
out
or
mov
and
mov
cmp
cltd
and
es
mov
mov
jl
rcr
sub
pop
arpl
dec
rcrb
and
test
outsb
arpl
mov
adc
sbb
push
dec
pop
scas
cltd
dec
ret
add
mov
dec
iret
lods
push
mov
int
arpl
or
mov
jecxz
push
mov
mov
sub
dec
xor
cmc
push
out
xchg
mov
mov
ja
inc
jnp
mov
leave
je
lret
jle
es
jge
pop
pushf
mov
loope
pop
sub
stos
cmp
mov
xchg
hlt
sbb
test
in
repnz
mov
fdivl
call
add
lea
jo
mov
pop
add
sbb
add
adc
cs
xchg
fwait
dec
cmp
adc
add
mov
pusha
mov
sbb
mov
add
xchg
inc
add
inc
and
pop
push
nop
shl
fs
gs
fcmovu
aam
lods
mov
mov
jbe
dec
cmp
or
mov
adc
sbb
out
sub
jge
xchg
dec
jp
fsubp
fcmove
and
scas
mov
inc
pusha
inc
out
or
mov
lods
xchg
popa
clc
outsl
stc
xor
cmp
pop
cmp
dec
sub
xchg
out
and
dec
mov
push
fs
das
ss
sahf
int3
sub
jecxz
xchg
jbe
aas
loopne
add
push
inc
cmp
cmp
dec
insl
leave
loope
sbb
jg
sub
movsb
not
cmpsl
inc
jne
mov
in
mov
fldl
adc
movsl
or
xchg
mov
pop
out
push
sub
mov
mov
aaa
in
mov
je
lret
mov
popf
and
xchg
imul
repz
mov
xchg
mov
movsb
fstpt
adc
pop
mov
jne
mov
or
pusha
dec
xor
je
push
push
push
push
lods
incl
jbe
lahf
mov
aas
push
test
push
pop
push
lds
ja
sub
lret
incb
xchg
jne
int3
mov
sbb
inc
ljmp
sti
cwtl
pop
pop
xor
loope
adc
xchg
or
fdivr
stc
and
adc
cli
push
or
or
mov
adc
mov
test
and
inc
cld
rol
mov
std
leave
hlt
sahf
jle
mov
cwtl
cmp
pusha
repz
adc
jmp
lea
add
mulb
xor
int3
int3
pop
in
push
je
xlat
cmp
pop
xor
push
xlat
mov
jle
jg
aam
add
or
mov
and
or
in
cmp
mov
sbb
out
test
mov
pop
adc
pop
sarb
testb
fstl
push
adc
popa
push
mov
mov
jl
sub
aaa
xlat
push
outsb
xchg
leave
mov
in
mov
sbb
cmp
in
imul
mov
sarl
cwtl
lock
sub
push
pop
fst
push
jmp
clc
inc
mov
movsl
aaa
jmp
push
inc
frstor
pop
divb
lahf
adc
sarl
call
repz
int
push
xchg
rol
cmp
ds
pusha
scas
xchg
push
and
jg
shrl
cmc
fsubs
jmp
dec
mov
bound
in
mov
das
sub
push
cwtl
push
jmp
mov
sbb
mov
dec
cmp
mov
jl
cs
lret
cld
dec
fsubs
xchg
std
mov
sub
ds
xor
testl
lea
inc
sub
mov
dec
ret
dec
push
in
cmp
sbb
jge
mov
stos
mov
sub
mov
scas
jecxz
mov
jno
imul
pop
call
push
nop
retw
loop
and
jnp
out
cmp
inc
repz
std
push
mov
mov
fisubs
out
jns
jl
addb
lea
ljmp
lcall
adc
mov
fst
jne
sarb
push
pop
add
mov
push
or
cmp
jl
pusha
dec
cmpxchg
push
outsl
adc
xchg
lret
jp
ret
push
dec
iret
sub
xchg
push
ds
test
mov
jl
adc
push
movsb
insb
cmp
mov
testb
scas
jo
rcll
bound
sahf
outsb
lcall
popa
stos
icebp
mov
pusha
jne
or
lea
test
stc
inc
push
rcr
dec
xchg
int3
call
mov
jns
pop
mov
into
xchg
rep
xchg
in
jae
adc
stos
je
sarl
sbb
aaa
cmp
std
ret
aas
sbb
jne
loop
add
cmc
pop
cmp
add
jge
aad
sbb
je
repz
scas
std
push
push
iret
sbb
test
fmull
lods
lret
repz
movsb
stos
cmp
insl
jae
insl
xor
daa
call
push
sub
out
test
rcll
sub
sub
add
sbb
arpl
push
arpl
inc
dec
mov
mov
inc
jmpw
mov
cmp
stos
xor
push
pop
ficoml
mov
sbb
lds
in
js
cmpsl
inc
or
mov
sub
mov
xchg
pushf
xchg
sbb
sti
dec
in
fs
xchg
lock
inc
pushf
push
stc
dec
aaa
je
pop
loop
lahf
sub
repz
adc
and
mov
dec
jo
inc
lret
pop
in
xchg
and
ja
daa
mov
sub
cmp
adc
cmp
sbb
inc
inc
cmp
xor
push
xor
jne
aam
jmp
mulb
mov
cmp
test
xor
fxch
jno
mov
call
loope
adc
shll
push
sti
test
lcall
jno
mov
sub
lea
xchg
sub
xchg
mov
jp
ljmp
push
cmc
movsl
mov
enter
cltd
mov
test
mov
out
enter
test
and
adc
xchg
add
rorl
out
add
mov
loopne
push
movsl
out
mov
mov
sbb
jae
gs
daa
mov
xchg
adc
push
mov
xor
shll
je
popw
arpl
fistpll
inc
sbb
cmp
inc
cltd
jge
adc
ja
lods
jno
ret
pop
add
pop
xlat
mov
push
or
mov
hlt
sbb
icebp
inc
mov
pop
and
push
xchg
cmp
or
out
jo
int3
les
int
dec
ret
loopne
in
aaa
and
les
in
push
push
adc
pop
sub
dec
jb
sbb
mov
popf
lods
inc
inc
push
std
inc
mov
add
xchg
cmp
inc
jno
test
ret
rcrl
popa
jo
scas
aaa
xchg
enter
cltd
sti
mov
jbe
push
pop
cs
fwait
and
test
lods
inc
add
mov
out
js
filds
jmp
adc
cmpsb
rcrl
scas
mov
inc
mov
or
in
dec
cmp
jecxz
aas
sbb
xchg
adc
lret
adc
out
sub
out
mov
jge
clc
pop
shlb
pop
sbb
clc
pop
insl
lahf
push
jp
test
pushf
mov
shll
sub
mulb
insb
jmp
adc
and
mov
sbb
outsb
sbb
insb
insb
sub
mov
inc
xchg
jl
lock
inc
push
xorl
popa
inc
scas
mov
sub
pushf
mov
pop
jae
daa
test
mov
stos
adc
and
shlb
xchg
jo
std
or
adcb
push
cmp
inc
out
cmc
adc
cli
rol
mov
push
xchg
mov
sbb
pcmpgtd
test
pop
inc
sbbl
cmp
out
sub
push
pop
jle,pt
leave
jns
in
sbb
add
mov
std
dec
lahf
adc
mov
test
mov
and
leave
mov
lret
add
dec
inc
push
fimull
dec
int
int
repnz
inc
sbb
loop
cmpsb
fld
mov
insl
scas
and
in
pop
xchg
arpl
icebp
or
mov
lods
mov
stos
aas
push
shrb
and
int
inc
insb
xor
gs
mov
and
sbb
sbb
push
aaa
mov
jnp
lods
add
dec
push
fwait
jl
and
inc
and
aaa
repz
faddl
loopne
sbb
outsb
lret
orb
push
add
loopne
jne
dec
mov
dec
dec
sbb
mull
adcl
push
insb
inc
into
addr16
inc
push
subb
and
inc
out
loopne
addr16
repnz
xchg
int
out
adc
arpl
xchg
xchg
rorb
in
jmp
lret
jno
xchg
stc
push
mov
push
addb
cmc
mov
jnp
in
in
cmp
and
in
in
or
mov
cmpsb
dec
cld
ds
loop
fimull
mov
sti
mov
adc
loope
or
pop
inc
scas
xchg
dec
in
outsl
mov
pusha
pop
outsb
xchg
in
adc
push
jle
cmp
into
xor
mov
pop
sbb
sbb
mov
lcallw
fs
and
je
faddl
mov
and
imul
sbb
mov
mov
sahf
mov
push
frstor
adc
xchg
push
lcall
rcl
cmp
out
pop
cmp
pop
jno
inc
cmc
dec
pop
sub
pop
and
push
fcoms
mov
xor
mov
cmc
xchg
scas
jg
mov
lock
outsb
cmp
adc
cmc
and
or
in
xchg
sbb
mov
push
inc
negl
in
mov
adc
mov
enter
test
in
loopne
jns
stc
jo
mov
aaa
dec
jge
mov
insb
cmc
negb
stos
lahf
sub
in
jnp
push
lea
inc
push
cwtl
xchg
jmp
xor
sub
dec
mov
dec
ds
ds
lfs
scas
cli
cmpsb
xchg
scas
mov
sbb
adc
push
pop
mov
mov
jne
sbb
pusha
xchg
movsb
sbb
mov
fmull
xchg
shrl
xor
fcmovnbe
jmp
scas
inc
mov
mov
loop
daa
fists
stos
call
nop
push
cs
dec
mov
cli
dec
in
nop
in
xor
mov
paddusb
fsubs
adc
push
and
out
fsubrs
sahf
adc
add
das
or
xchg
aas
xlat
cmp
ret
xor
pop
bound
int3
sub
inc
out
push
and
popf
fsubr
mov
popf
pop
cwtl
jns
xchg
ret
cld
repz
insl
inc
lcall
dec
adc
lret
pop
push
lods
shld
sub
sbb
cli
out
sub
rorl
cwtl
jge
data16
xor
test
lock
xchg
fnstsw
test
shl
shll
lods
out
cmp
lods
mov
add
jns
sub
fiadds
mov
pop
inc
lcall
fwait
mov
in
or
cmp
std
mov
cmp
mov
sub
adc
rorb
in
push
mull
pop
mov
pop
mov
push
aad
mov
sti
dec
adc
test
add
bound
sub
fnsave
fs
xchg
jbe
aaa
push
cmp
fucom
add
sub
and
xchg
hlt
clc
push
mov
call
mov
mov
jecxz
loopne
test
mov
std
or
imul
xchg
sub
adc
sub
push
jns
cmp
movsl
sbb
test
orl
push
cmp
test
out
dec
xchg
ljmp
rol
and
xchg
cmp
stc
outsb
std
adc
mov
mov
popa
mov
push
out
dec
and
imul
icebp
mov
xor
push
mov
jo
dec
adc
adc
mov
imul
xlat
lock
je
jmp
fwait
decb
int3
or
pushf
and
into
jmp
xchg
inc
and
inc
pushf
ret
pop
sbb
push
loop
push
inc
ja
shl
mov
nop
in
daa
inc
xchg
add
enter
or
orl
pop
fisttpll
mov
mov
xchg
bound
cmp
lahf
pop
inc
outsl
cmpsb
sub
lcall
imul
ja
daa
sub
cmp
cmp
stos
lock
jbe
js
movsb
lret
sahf
mov
jne
subl
aad
pop
fwait
ds
mov
nop
fildll
and
repz
add
adc
jg
shl
das
sub
fildll
in
and
fs
dec
in
pop
or
fs
mov
loop
call
repnz
out
mov
movsb
in
lds
loop
ljmp
adc
ret
stos
xchg
lods
mov
mov
in
hlt
dec
inc
pop
push
bound
xchg
mov
jge
sub
stc
inc
movsl
enter
call
mov
test
xor
stc
popa
cmpl
jno
loopne
popa
xchg
fwait
outsb
int3
inc
lea
outsb
dec
cmpsl
cmpsb
push
in
loop
stos
and
push
fucomp
cmp
sti
pop
pop
push
mov
jmp
add
imul
sbb
lcall
cmp
inc
adc
fcmove
sti
pop
movsb
in
icebp
ss
jmp
fisttpll
gs
ds
xchg
in
loopne
sub
psubusw
lret
loop
scas
stos
push
push
cmp
sub
and
les
push
lret
sbb
ds
and
repz
insl
aad
stos
inc
jg
dec
jg
xchg
orl
inc
pop
nop
push
aad
cmp
cli
pushf
divb
mov
lea
popf
xor
iret
ss
or
inc
movsl
fldenv
xchg
mov
and
ljmp
mov
mov
pop
sbb
pop
vmwrite
mov
jl
add
cld
sbb
mov
push
neg
xorb
into
adc
jo
push
pop
mov
dec
int3
mov
mov
adc
mov
mov
add
xchg
rcr
xor
or
fmulp
test
clc
out
out
and
lea
push
cltd
imul
fmull
daa
pop
mov
sbb
orl
fwait
loope
shll
lods
outsb
mov
jp
cli
leave
lock
pushf
dec
dec
mov
add
adc
dec
mov
pop
pop
std
dec
jge
dec
sti
imulb
idiv
sub
mov
dec
incl
hlt
push
jle
lea
into
and
rcr
imul
push
lds
and
sbb
push
or
jnp
push
add
xor
lret
addr16
xchg
sbb
adc
mov
mov
in
or
loopne
filds
dec
ds
xchg
pop
pop
ss
pop
cmp
mov
mov
mov
push
push
fsubl
mov
push
pop
mov
test
jne
adc
lcall
sub
imul
leave
xor
jge
sbb
out
lcall
dec
test
xchg
rol
inc
inc
cmpsb
ja
add
sub
xorl
push
testb
xchg
add
push
repnz
and
dec
sti
mov
fs
push
jne
fabs
add
jp
mov
xchg
inc
ret
or
aaa
aam
mov
dec
jle
xor
fstpl
pop
movsb
das
mov
push
popl
cmc
xchg
lds
jmp
sub
rol
movsl
in
dec
imul
shrl
mov
and
sahf
roll
ljmp
and
jns
jmp
ret
sub
and
insb
mov
pop
pop
jno
jmp
sti
cs
fildll
in
dec
lret
addr16
sub
stos
xchg
adc
in
and
aad
sbb
pop
fucomip
lea
mov
scas
cmc
stc
mov
mov
mov
outsl
scas
call
test
ds
movsl
inc
dec
or
push
mov
aad
push
scas
imul
aam
jno
scas
dec
gs
adc
mov
pop
out
cwtl
pop
imul
pushl
cmp
pop
stos
sub
dec
jle
sub
imul
std
lods
scas
mov
pop
lcall
jb
fwait
sti
sub
andl
int3
and
stos
mov
dec
aam
ret
fbstp
cmp
mov
aaa
pop
mov
in
lods
xlat
rclb
andb
scas
pop
pop
xchg
xlat
and
cmp
or
push
cmc
cltd
sbb
lret
sub
cmp
jp
pop
dec
xchg
jo
xchg
lods
test
jg
add
cmp
and
push
push
cli
mov
inc
int3
xchg
lret
jecxz
push
pop
pop
push
nop
in
xor
lea
xchg
lretw
dec
mov
aam
dec
push
xor
je
or
rorl
cs
lds
xchg
jge
lds
testb
loope
mov
inc
pop
jbe
stos
cmp
pop
mov
loope
jle
lret
bound
sub
xor
nop
repz
mov
dec
push
adc
mov
addb
ljmp
std
outsl
mov
jne
pop
sbbb
jb
adcl
xchg
add
repnz
sub
repz
rcrb
loopne
or
sub
cld
clc
sbb
lahf
add
enter
fistpl
lret
pop
or
aam
adc
xlat
gs
xchg
mov
adcl
loopne
dec
rorb
or
adc
bound
dec
in
int
js
adc
je
inc
sbb
cmc
xchg
pop
dec
xor
mov
sbb
sub
shrl
xor
sub
dec
mov
rolb
insl
mov
cmpsl
popa
lret
jmp
pop
rolb
cli
xlat
cmp
scas
jnp
mov
and
pop
test
pusha
in
aas
adc
subl
das
shlb
sahf
and
sbb
add
sahf
dec
push
cltd
jmp
lods
shr
jbe
sbb
mov
lods
bound
lret
lret
pop
test
pop
je
pusha
inc
mov
mov
fsts
test
cmpl
inc
cmp
add
jg
adc
test
daa
dec
call
lea
ja
in
or
dec
pop
hlt
lods
mulb
xor
cmpsl
push
stos
or
push
cmp
adc
es
or
add
push
insb
mov
es
sub
outsb
and
add
sbb
push
and
data16
movsb
push
push
into
cmpsl
add
sbb
mov
dec
inc
in
iret
fbstp
fstpt
inc
into
xor
movsl
iret
andl
lock
xchg
sbb
adc
xlat
fmuls
jae
les
subb
movsl
sahf
and
outsl
sub
push
inc
cltd
popa
sub
mov
inc
mov
in
add
movsb
push
cmpsb
repnz
cltd
ss
iret
into
mov
dec
cmpsl
lret
fs
in
in
adc
icebp
xchg
jecxz
pop
and
and
adc
push
inc
scas
jge
fwait
and
adc
push
pop
xchg
jp
test
mov
sti
xchg
insl
push
outsl
xor
into
sub
es
cmpb
fisubrl
inc
push
push
jp
cmp
dec
or
and
arpl
pop
push
sub
and
cmp
inc
mov
push
mov
push
dec
call
pop
imul
aaa
inc
gs
jnp
xchg
lea
loop
out
pushf
mov
jge,pt
cmp
sub
push
xchg
jns
mov
xor
pop
fisubl
sti
cltd
mov
in
jge
cmp
mov
mov
xchg
sbb
rolb
push
xor
jg
inc
loopne
movsb
out
aam
cmc
pmullw
mov
out
adc
mov
push
xchg
and
mov
fstpl
cld
xor
and
mov
lods
fcomps
imul
inc
test
jg
push
pop
imul
adc
popf
push
sti
shr
movsl
lret
rcll
mov
jb
std
std
adcl
xchg
ds
je
jmp
mov
mov
jmp
jg
or
das
or
push
xchg
xor
in
dec
pop
insl
sahf
push
cmp
sbb
xchg
jle
sub
cltd
push
enter
insb
outsl
adc
add
addr16
loope
and
xor
sbb
inc
iret
stos
insl
mov
lcall
ljmp
sahf
sarl
sub
cmp
shll
mov
into
sbb
call
mov
inc
adc
es
ja
cltd
sub
dec
dec
inc
movsb
push
aad
xor
dec
arpl
fbstp
inc
mov
dec
adc
cmpsb
xchg
mov
sbb
ss
push
cwtl
xchg
popa
fiadds
movsl
and
sub
loopne
in
loope
out
mov
testl
mov
out
push
mov
mov
jmp
pop
xor
cmpsl
inc
arpl
leave
fcoms
push
pushf
mov
mov
adc
lods
add
mov
sbb
shll
scas
int
jne
das
popf
sub
xchg
xchg
cmp
xorl
out
xchg
cmpsb
dec
repnz
pop
inc
lods
jb
push
push
sbb
adc
jp
xor
inc
pop
out
add
sbb
pop
mov
insl
nop
mov
and
ficomps
sub
push
mul
es
fwait
ror
loop
scas
lcall
add
cmp
sbb
mov
fistpl
lret
test
ud2
pop
in
pop
push
sub
push
mov
test
ds
jbe
mov
test
pop
fidivrs
scas
add
adc
jnp
mov
mov
lds
push
js
cmp
mov
sub
cmp
and
pop
cltd
mov
jg
sbb
shl
sbb
mov
clc
push
data16
ljmp
lock
cmc
and
xor
push
and
jne
add
sbb
in
nop
cmp
push
fistl
sahf
cmpsl
jecxz
push
xor
xor
insl
dec
imul
dec
scas
pushf
loop
add
xchg
and
inc
cli
xchg
mov
sbb
mov
mov
mov
pusha
jns
mov
imull
les
push
sbb
sarb
xchg
fisttps
aam
and
inc
dec
jmp
icebp
cltd
test
scas
inc
inc
xchg
xor
nop
scas
popa
lds
iret
xor
test
xor
jl
lods
and
nop
lods
cmp
and
and
addr16
addb
scas
mov
cmp
lcall
cmpl
std
lret
mov
ja
jp
stos
push
mov
mov
pop
cmp
lds
cmp
pop
imul
cmp
mov
pop
data16
sub
inc
jp
icebp
ja
xor
mov
aam
sub
sub
mov
hlt
insl
outsl
cmp
xchg
negl
inc
sub
xchg
dec
mov
cld
mov
outsb
fdivs
pop
inc
fistl
fsts
outsb
mov
and
sahf
mov
inc
es
shl
iret
adc
test
aam
mov
inc
jnp
out
pushf
sub
mov
imulb
or
in
repnz
lods
movsb
sub
dec
rorb
adc
adc
inc
jge
pop
push
and
lret
test
pop
sub
push
or
stc
test
fstp
mov
push
sbb
and
sbb
and
aas
or
ja
sub
roll
jge
dec
bound
xchg
push
xor
push
loopne
je
test
clc
in
clc
test
push
cmp
dec
clc
sub
adc
adc
lahf
xor
pshufw
aaa
cltd
push
or
clc
inc
test
cmpsl
data16
push
in
cmp
cmpsl
leave
jne
jae
or
jo
mov
scas
repnz
mov
cmp
xor
add
mov
icebp
xor
mov
aaa
push
mov
aaa
xchg
popa
cmpsb
hlt
icebp
gs
fsubs
cmp
xchg
jno
test
scas
pop
adc
push
fisubrs
fdivrs
mov
xchg
mov
inc
push
sub
mov
scas
or
mov
lods
lcall
mov
out
test
into
iret
ss
or
add
pop
notb
cmp
and
test
pop
push
mov
rorb
dec
xchg
push
sarb
lds
icebp
mov
pushf
push
iret
cmp
into
clc
lock
or
cmpsb
inc
push
jle
fisttps
cmp
data16
mov
fstps
repnz
fdivr
xchg
ret
enter
mov
pop
sbb
inc
imul
cmp
sub
pop
imul
imul
inc
data16
mov
jge
andl
jnp
rorb
mov
shr
sbb
stc
jns
dec
out
mov
arpl
sub
jae
scas
out
mov
and
adc
sti
rcr
test
fidivrs
sbbl
iret
add
sets
mov
sbb
aas
fsubl
dec
jge
mov
out
in
adc
andb
pop
or
mov
movsl
mov
xchg
into
stc
sahf
fidivrl
push
jae
push
add
negl
inc
repz
mov
mov
lcall
loop
scas
scas
icebp
insb
dec
cwtl
push
rcl
out
in
add
lods
popf
jno
stc
pusha
imul
push
mov
jmp
cwtl
inc
cmp
pushf
jl
roll
add
sarl
lds
popa
jns
std
ret
or
cmp
insb
xchg
repnz
mov
ret
pop
aas
adc
arpl
mov
cli
mov
imul
fnstcw
jp
inc
and
lcall
icebp
xchg
push
push
rcll
push
cmp
add
and
out
iret
pop
sub
jg
lods
mov
push
push
mov
out
fcoml
xor
push
lds
lcall
out
inc
int
xlat
jo
pop
sbb
decb
xor
mov
pop
dec
sub
add
xchg
hlt
data16
scas
inc
fisttps
fmuls
les
pop
icebp
inc
cli
pop
xor
and
xchg
cmp
dec
pop
das
fsub
dec
lds
dec
sub
push
les
inc
scas
test
mov
dec
dec
inc
pop
and
sub
popf
push
stos
fsincos
adcb
and
push
lods
inc
aad
popf
push
or
mov
mov
jb
xor
fldl
mov
fstps
and
lds
popa
pop
mov
jno
add
fwait
call
scas
in
inc
dec
xor
vmwrite
sbb
ja
mov
jecxz
lods
mov
addr16
push
addr16
xchg
lds
adc
aad
imul
test
shll
mov
sub
jp
mov
aaa
cld
xchg
pop
icebp
shl
push
add
push
mov
repnz
push
clc
mov
fs
es
or
fisubrs
inc
jge
xor
inc
nop
xor
stc
and
movsl
jg
inc
adc
daa
cld
jmp
jmp
add
xchg
cmpsb
or
push
call
push
mov
jo
inc
aam
popa
call
shll
mov
sbb
enter
cmp
loopne
fldl
int
aas
rol
gs
mov
lock
xor
jne
xchg
pushf
pop
jbe
aam
add
test
sub
out
or
push
push
adc
xor
inc
mov
cmp
jo
mov
rcrb
jl
xchg
cld
dec
xor
icebp
inc
sub
popf
and
push
in
jle
xchg
les
cmpl
mov
adcl
dec
fmuls
popf
enter
mov
jmp
lret
mov
cmc
iret
repz
xor
inc
xor
roll
jae
sbb
cltd
ret
pushf
fisubrs
or
xchg
xchg
sbb
sub
arpl
xchg
jle
fmull
dec
in
dec
mov
push
and
imul
popa
inc
or
xchg
pushf
cld
pop
or
loope
outsb
inc
cmc
aam
insb
ljmp
loope
pop
clc
push
adc
adc
cmp
imull
popf
pop
adc
lret
pop
add
inc
mov
push
arpl
test
loop
aaa
dec
sub
insb
lahf
push
sub
push
jbe
das
aas
imul
data16
subb
jecxz
aad
ljmp
mov
pop
mov
ss
dec
sbb
test
sub
xor
mov
fistpll
adc
dec
xchg
mov
scas
mov
sbb
outsl
mov
mov
sbb
fidivl
and
jno
push
int3
mov
dec
arpl
xchg
adc
rol
icebp
stos
push
insl
push
mov
mov
popf
pop
xor
fwait
xchg
in
into
mov
dec
adc
push
push
into
and
dec
fsubs
jae
pop
cmp
scas
cmpsl
imul
jo
or
mov
mov
mov
xchg
sbb
sub
addr16
repnz
shrb
mov
shlb
ret
sbbl
mov
and
in
dec
mov
inc
mov
lcall
stos
inc
adc
js
nop
dec
andb
incb
shll
jge
sub
mov
loope
push
scas
push
ja
aam
inc
jne
mov
adc
xchg
sub
les
inc
movsb
mov
pop
inc
xor
daa
mov
inc
push
xchg
orl
in
push
loopne
aam
add
outsl
out
push
scas
mov
sub
or
or
xchg
and
test
cld
xchg
xor
push
rcrb
mov
inc
inc
fisttps
pop
pop
jg
int3
insb
xor
add
xchg
sub
push
mov
inc
ffreep
sub
loopne
cmpsb
push
pop
mov
adc
xchg
xchg
inc
mov
mov
and
lahf
movsb
push
movsl
movsb
pop
mov
pop
adc
mov
ja
jbe
test
test
mov
add
rolb
imulb
xchg
mov
aad
mov
adc
inc
out
mov
rorl
jmp
push
movsb
popa
lret
mov
les
test
adc
sbb
add
and
add
sbb
cmp
ja
rcrb
test
jnp
xchg
dec
icebp
dec
xor
sbb
push
adcl
shlb
mov
xchg
sub
mov
xor
mov
int3
mov
sbb
xchg
cmp
in
rorl
inc
ds
xchg
mov
hlt
sbb
nop
orb
popa
movsl
adc
xchg
mov
lea
cltd
add
cwtl
inc
rcll
lahf
mov
xchg
out
int
xchg
inc
scas
mov
mov
addr16
xor
and
mov
sbb
and
insb
shlb
cs
mov
mov
push
aaa
mov
nop
cmp
and
adc
mov
outsb
fistpll
pop
sbb
mov
pop
xchg
aad
out
inc
fisubrl
mov
or
jo
std
and
out
dec
push
js
adc
lcall
or
cmc
out
loope
push
push
add
mov
rclb
jno
in
fmuls
jno
stos
jne
push
xor
sbb
mov
add
lcall
mov
mov
stc
add
mov
pop
ss
mov
jmp
aam
inc
push
dec
jbe
pop
scas
movsl
das
or
cmpsb
xchg
add
imul
or
inc
cmc
and
xchg
mov
ret
sub
sti
and
mov
push
lea
mov
les
lretw
sbb
in
leave
out
lahf
andb
stc
cmp
jae
das
sub
insb
pop
sahf
loopne
std
shl
mov
aad
xor
addr16
or
mov
jg
rol
fistpl
lcall
jo
mov
subl
scas
sbb
pop
lods
stc
cmp
xchg
stos
jl
push
cmp
sbb
lds
mov
je
leave
adc
add
adc
jge
mov
xchg
out
test
jb
mov
sbb
mov
adc
xchg
mov
mov
and
fadd
sub
jle
inc
aam
mov
clc
sbb
in
mov
pop
movsb
mov
xchg
xlat
cld
jno
lods
cli
sub
aas
adc
iret
loopne
addr16
push
jg
lahf
mov
mov
ret
rclb
xchg
mov
dec
push
test
xor
and
insl
pushf
addr16
mov
arpl
lods
dec
pop
jne
jb
loopne
sbb
mov
loopne
test
xchg
sbb
lock
imul
push
sub
popl
in
stos
pop
mov
add
add
cld
xchg
aad
jl
pop
stc
xchg
addr16
push
arpl
mov
mov
sub
clc
imul
imul
mov
push
aam
sub
push
iret
sbb
push
push
pop
jne
jg
adc
mov
mov
jle
adc
andb
mov
stos
pop
std
xlat
xchg
push
pop
sbb
rcrl
insl
mov
test
aad
adc
lock
xchg
xchg
pop
pop
icebp
dec
cmp
mov
xchg
xor
push
cltd
inc
inc
mov
xor
lds
hlt
mov
je
mov
les
push
xchg
mov
lods
call
mov
out
movsb
push
das
outsl
frstor
jnp
pop
sub
movsl
pinsrw
sub
and
dec
and
mov
cmp
cmpsb
adc
pop
imul
mov
xchg
xchg
push
int3
mov
in
jae
cmp
rcrb
fwait
jno
push
mov
scas
pop
xor
xor
fstps
or
xchg
jmp
lret
or
mov
xor
add
movsb
mov
cmp
sbb
data16
shl
push
inc
jmp
push
pop
test
jmp
incb
test
dec
idiv
jecxz
sub
jmp
enter
sbb
xor
pop
aad
xchg
lds
scas
mov
adc
and
inc
pop
sbb
mov
fisubs
int
mov
je
mov
mov
pop
add
xchg
rcrl
lret
xchg
shlb
xor
movsb
mov
mov
ret
nop
fdivl
int3
adc
sbb
or
inc
rcl
call
mov
fcoms
pop
nop
fdivrs
outsb
cmp
lret
jns
ds
std
ja
daa
xchg
and
ljmp
cmp
adc
out
cmp
imul
adc
sub
cwtl
push
jle
jle
rclb
fisttpl
inc
mov
add
outsl
incb
je
mov
sbb
jnp
stc
mov
rolb
jnp
xlat
nop
test
sbb
movsb
outsb
mov
push
cltd
gs
js
add
loopne
cmpsb
and
mov
cmpsl
xlat
jmp
aad
repnz
fiadds
inc
stc
xor
lret
jbe
mov
and
cmp
and
fcoms
daa
mov
out
dec
sbb
and
lock
dec
dec
sbb
bound
mov
or
cmp
jae
aaa
cmp
jnp
push
dec
push
dec
add
call
mov
sbb
push
lds
pop
int3
push
pop
inc
nopl
aaa
and
sbb
dec
push
lds
adc
xchg
sbbb
adc
cli
scas
mov
pop
adc
shr
push
jecxz
sbb
lea
mov
xchg
sar
jne
xlat
mov
jecxz
and
stos
or
jb
mov
xchg
je
or
cltd
or
int3
push
jns
inc
mov
stos
jbe
inc
sahf
les
inc
scas
dec
sub
test
faddl
mov
shll
std
jnp
inc
xchg
mov
xchg
ss
or
std
lds
or
push
daa
jbe
cmp
loop
push
mov
mulb
sub
push
les
punpckldq
dec
add
idivl
push
mov
dec
xor
in
xchg
loope
pop
push
outsl
mov
into
cwtl
mov
add
loope
jge
dec
mov
pop
mov
xchg
outsl
xchg
imul
cmpsl
arpl
test
jae
cmc
mov
pop
mov
xor
aas
imul
int
mov
test
int3
pop
adc
mov
fildll
pop
aam
std
subl
out
sbb
insl
pop
test
mov
or
or
ja
das
dec
push
dec
fdivrl
into
mov
insl
in
fadds
in
test
addb
pop
daa
or
dec
or
addr16
mov
lret
or
and
insl
xchg
jns
rclb
aad
xchg
imul
pop
shll
or
stos
or
push
cmc
insb
ja
sbb
lret
push
fdivrl
mulb
dec
jecxz
repnz
bound
fnstcw
sbb
shlb
mov
pop
mov
push
mov
mov
jns
fstl
inc
fcoml
lcall
popf
subb
lock
popf
dec
js
lcall
hlt
sahf
pushf
mov
enter
sbb
mov
adc
push
jecxz
sub
lret
jmp
insl
sbb
xchg
sbb
inc
adc
fsub
ss
push
fisttpl
test
test
cmp
les
mov
xchg
popf
addb
scas
inc
mov
jae
pusha
inc
sbb
fs
jmp
cmp
add
js
push
xlat
in
jecxz
lret
fld
and
push
adc
repz
ficoms
push
pop
or
leave
or
mov
jmp
sti
lret
sub
jl
lret
and
and
lods
mov
insl
jmp
jnp
inc
pop
mov
push
insl
out
aas
rorl
pop
inc
dec
pop
sub
push
sbbb
lea
mov
mov
sbb
cmp
ds
cli
enter
and
pop
xchg
or
jg
xorl
dec
pop
test
dec
iret
mov
enter
xor
mov
push
sub
insb
mov
xchg
sbb
nop
cmpl
or
push
xchg
push
mov
mov
sub
int
jmp
mov
mov
cmpsb
sub
cltd
jmp
add
into
into
xor
shr
jo
xchg
adc
loope
lds
sti
ret
sbbb
hlt
ret
jnp
pop
pushf
push
imul
loop
aaa
sbb
inc
out
lahf
pop
sub
sti
mov
or
cmp
mov
pop
pop
dec
fimuls
sarl
cld
loop
push
sub
add
xchg
addr16
imull
fcoml
fsubs
jo
fisubs
pop
mov
mov
sbb
mov
inc
xchg
xlat
push
negb
movsb
aaa
ret
pop
or
loopne
mov
nop
pop
and
adc
popf
popa
pusha
lret
les
push
mov
mov
mov
push
cmpsl
adc
lds
bnd
movsl
lods
xchg
in
xchg
adc
xor
jne
test
sbb
cmp
arpl
cmp
arpl
push
pop
or
es
repnz
lods
cltd
sub
sub
test
sbb
cmc
push
mov
or
cld
mov
subb
jle
sbbl
lret
xor
and
pmaxsw
sub
test
out
adc
inc
out
addb
sbb
loope
je
xchg
push
adc
imul
lods
icebp
sbb
mov
push
je
repz
jbe
cmp
cmp
out
jnp
in
xchg
inc
or
lcall
das
je
aaa
fisubrs
jns
cmp
ss
xor
mov
in
es
pusha
in
mov
jbe
andb
ljmpw
pop
call
jmp
hlt
and
popa
add
inc
imul
sti
loope
insb
mov
or
pop
jp
out
cmc
mov
xor
xlat
lret
or
out
inc
cltd
add
out
mov
mov
rcll
pop
lods
mov
jmp
dec
std
and
jl
dec
scas
sti
dec
pop
mov
outsb
mov
push
adc
mov
in
mov
push
hlt
sti
outsl
fstl
push
js
ljmp
jle
inc
icebp
out
in
adc
dec
inc
cmp
ret
andb
scas
inc
jae
push
outsl
rorb
aas
and
or
into
xchg
out
mov
into
decb
xor
pop
arpl
aaa
add
testl
je
push
sub
dec
jle
dec
xor
fimull
inc
in
pop
pop
push
arpl
hlt
orb
push
mov
jae
cmpl
pop
imul
clc
ds
cmc
sbb
mov
mov
icebp
inc
scas
fists
push
push
cmp
test
adc
stc
jo
jge
mov
movsb
cwtl
fdivrs
scas
mov
push
rclb
shrb
ret
dec
mov
call
add
ret
fidivrl
movsb
pop
icebp
js
mov
or
inc
call
cmp
testl
loop
mov
ret
div
out
xchg
rcr
pop
ds
push
lds
or
add
cld
cmp
fucomi
jo
arpl
ljmp
addb
mov
lock
ljmp
cmp
pop
ds
jle
mul
cmp
sbb
lahf
js
in
and
in
inc
xchg
fidivrs
jge
cmpsl
ds
fstps
jge
cmp
sbb
icebp
jb
push
mov
lcall
cwtl
and
mov
test
xor
pop
mov
or
adc
nop
add
daa
movsb
lcall
mov
aad
mov
xchg
fcmovnu
xor
stos
mov
pop
or
mov
cmp
test
mov
cmp
xor
and
and
push
je
clc
arpl
loop
test
outsl
push
rolb
inc
mov
jmp
sub
inc
xchg
sbb
arpl
hlt
jmp
ja
je
adc
sub
shrb
or
js
repnz
adc
pop
sub
inc
cmp
sti
mov
inc
stc
fwait
mov
or
cwtl
xor
rolb
aaa
adc
int
cwtl
lock
les
daa
lods
inc
rorl
flds
loop
test
dec
xor
push
into
cs
pusha
xchg
int3
lods
mov
int3
arpl
pop
add
in
cmp
push
xor
pop
add
pop
xchg
popf
scas
in
test
mov
out
mov
jns
fdivp
mov
ja
jns
jle
jnp
in
mov
mov
repz
aas
jp
inc
inc
cltd
js
daa
jns
cmpsl
sbb
movsb
push
lahf
lea
daa
fs
inc
lret
dec
sub
stos
scas
inc
sbb
inc
loope
xor
push
adc
in
into
ljmp
stos
cmp
popf
cmp
or
pushf
fildl
fs
in
jns
xlat
loop
ja
pushf
xor
mov
sahf
cltd
lcall
cld
adc
subl
adc
or
in
sbb
cmc
add
ret
in
sub
push
test
jbe
add
sbb
cmp
add
jecxz
sbb
mov
lock
xor
imul
jg
adc
addb
pusha
jle
loopne
jg
jp
or
mov
xchg
mov
xchg
ret
lret
sub
xor
cwtl
daa
clc
popa
test
inc
mov
pushf
dec
div
jge
adc
xor
lods
loope
in
aas
fbstp
add
dec
ds
push
aas
mov
mov
add
out
repz
test
lds
adc
cmp
rcrl
outsl
adc
cwtl
sub
xchg
jo
fwait
cmp
mov
or
fistpl
les
popl
shrb
dec
push
add
outsl
xadd
dec
add
movsl
fistpll
mov
mov
pop
cmp
data16
mov
and
out
shll
pop
lahf
or
inc
aas
add
jmp
lock
out
fs
aaa
push
cs
push
lret
push
xchg
std
pop
out
dec
call
jmp
test
jmp
mov
pop
daa
cmc
sub
xchg
push
or
fs
sar
push
insb
negb
stos
out
hlt
sub
lret
shlb
ds
pop
out
dec
pop
mov
adc
inc
scas
ret
stos
inc
subl
daa
lods
imul
lods
mov
adc
int3
xlat
outsl
add
fisttps
mov
lahf
xchg
pop
pop
ds
mov
in
in
arpl
aaa
sub
xchg
loope
es
repz
jo
xlat
sub
push
mov
inc
adc
fwait
jp
xchg
and
mov
insb
lret
mov
and
mov
leave
xchg
inc
movsb
push
dec
mov
lods
add
outsl
sub
push
dec
xor
scas
pop
mov
jae
dec
or
sbb
popa
cmpsl
in
cmp
repnz
repnz
sbbb
dec
fidivrl
je
add
pop
xor
push
ljmp
insb
mov
nop
cmp
ret
mov
mov
push
loopne
bound
jo
push
mov
push
int3
lcall
es
aas
dec
sbb
iret
enter
mov
pop
xchg
add
cmp
lahf
jnp
ret
xchg
call
out
insb
xor
xchg
adc
loopne
xlat
jmp
inc
in
or
cmc
out
leave
xorl
dec
sti
cld
cmc
xchg
mov
jns
mul
xor
push
adc
fisubs
pop
pop
pop
mov
jne
repz
int3
fmuls
or
pop
das
dec
fidivrl
jmp
sub
lahf
fdivr
sub
inc
xchg
add
add
ret
mov
inc
shlb
inc
fbstp
fmull
mov
push
add
dec
incl
dec
adc
lcall
or
loope
xlat
fcoms
pop
sarl
hlt
stc
jge
sbb
adc
inc
in
pop
dec
es
cmp
xchg
jne
push
inc
subl
xlat
fsubrs
fbld
xchg
xor
ret
std
xchg
inc
adc
adc
xchg
sti
push
loopne
arpl
mov
scas
mov
test
movsl
sbb
cmp
sbb
jecxz
fstpl
pop
imul
adc
push
mov
pop
lods
test
mov
jne
pop
inc
ret
pop
or
pop
cmp
icebp
loope
fcomps
xchg
ja
into
pop
xchg
sahf
add
mov
push
imul
sbb
dec
jge
xor
cmp
inc
dec
popf
or
and
push
push
pop
cli
push
in
movsl
aaa
movsb
sbb
push
sahf
or
sbb
dec
sbb
xor
push
ficomps
xor
adc
lret
in
push
lcall
mov
and
idivl
mov
outsl
mov
add
jne
mov
scas
scas
pop
ja
mov
xor
jmp
cmp
fdivrs
sub
xor
mov
test
xor
sti
dec
mov
clc
je
jge
or
add
or
enter
dec
xchg
daa
push
popf
aas
push
in
push
loopne
sub
jmp
pop
iret
insb
xor
std
test
lret
and
cmp
dec
notl
nop
add
xchg
cli
je
mov
sub
mov
cli
jp
xchg
pop
movb
mov
mov
aam
push
adc
outsb
test
dec
add
mov
xchg
mov
mov
mov
jecxz
test
int3
mov
hlt
fs
ljmp
ss
sub
or
lods
mov
stos
and
hlt
xor
sbb
and
dec
adc
adc
stc
ja
sahf
fbstp
bound
and
insl
in
shl
jae
es
outsb
aad
mov
mov
xchg
xchg
and
dec
xor
js
jo
ror
shrb
dec
inc
and
stos
sbb
xchg
sbbl
pop
sbb
mov
sub
out
dec
cmp
out
and
in
aam
cmp
in
xchg
jmp
mov
xchg
jns
adc
add
inc
dec
shrb
adc
ret
xchg
mov
clc
movsl
loop
sub
adc
ljmp
popa
movsl
push
sub
dec
outsl
dec
cmpsb
adc
scas
push
out
or
je
aam
fldl
ret
mov
or
dec
xor
outsl
jo
rcr
add
rcll
repnz
adc
dec
mov
mov
and
ficomps
dec
and
aaa
ret
rcll
movsb
in
sbb
mov
sbb
inc
dec
loop
and
cmp
mov
mov
xchg
pusha
jmp
push
jecxz
or
push
mov
mov
sbb
mov
jp
cltd
inc
push
or
or
jns
push
pop
stos
dec
pop
out
shl
mov
shrl
rcr
loop
sub
iret
mov
mov
fdivrs
cli
push
lret
inc
xchg
and
outsb
mov
sti
and
ja
and
sbb
data16
call
ret
test
mov
ss
adc
jmp
jae
inc
aad
jg
ja
sub
push
pop
mov
testb
pop
out
sbb
jbe
push
cmp
add
lea
popa
int
es
cmp
xchg
insl
mov
test
fstps
xor
lahf
movsl
enter
jo
adc
mov
inc
or
adc
jmp
add
and
in
sub
jge
clc
xchg
xchg
mov
pop
mov
xor
sahf
cmp
int3
push
movsb
mov
aad
movsl
cltd
das
and
cld
push
ss
dec
sub
xchg
xchg
ss
adc
inc
sahf
imul
inc
cmp
push
cld
pop
or
dec
add
repz
test
pop
popf
imull
neg
mov
jmp
pop
cmp
movsl
addl
push
jno
ds
or
xor
stos
push
out
das
andb
inc
arpl
test
pop
adc
adc
call
mov
mov
xchg
insl
jne
lods
cs
or
jnp
xchg
cwtl
add
idivl
sbb
sub
cmpsb
rclb
inc
mov
and
das
cmp
andb
imul
adc
lcall
lahf
aas
test
xor
mov
push
cli
jp
sar
mov
ja
xchg
std
adc
aam
xor
scas
call
xchg
adc
shl
add
add
xlat
negl
repz
mul
mov
inc
pop
sbb
cmpsl
cli
lret
jae
daa
hlt
sti
mov
xchg
lret
bound
in
sahf
outsl
mov
int3
jae
mov
jmp
cltd
jle
and
es
push
mov
jo
dec
adc
cwtl
mov
lahf
dec
cwtl
sbb
out
insl
hlt
clc
sbb
cwtl
aam
mov
push
pop
arpl
sti
ljmp
int3
ja
adc
ret
and
hlt
add
inc
scas
in
es
jnp
rorb
aam
scas
xchg
cmp
pusha
pop
les
dec
add
push
mov
in
jne
or
push
movsb
inc
shl
mov
cld
adc
in
sub
mov
testl
pop
sbb
mov
add
inc
shl
sbb
xor
or
mov
bnd
lods
pop
adc
mov
mov
mov
daa
cmp
mov
dec
cmc
cmp
adc
or
jmp
mov
pop
ret
jle
je
rorb
jb
cld
negl
fsubp
jns
mov
mov
repz
stos
test
sbb
pushw
gs
sbb
cmp
cltd
scas
push
call
xor
mov
cmp
push
pusha
insb
sub
int
scas
cmp
stc
ss
icebp
add
lods
fucomip
std
add
cmp
cmc
adc
mov
jne
movl
push
outsl
outsb
push
cmp
xchg
push
cmc
or
fcomp
test
jmp
sbb
les
ljmp
std
mov
fsts
movsl
nop
add
sub
or
push
sbb
dec
and
addb
cmp
push
and
xchg
dec
jnp
mov
mov
out
das
jo
bound
dec
mov
outsb
inc
mov
jg
pop
inc
jmp
or
sub
data16
int3
xchg
inc
lret
or
pop
cmp
push
adc
xchg
in
in
fcoms
int3
stos
sub
test
mov
orb
mov
mov
or
pop
jae
or
lea
cwtl
lret
and
cwtl
jb
sub
insl
mov
jmp
cmp
dec
call
enter
imul
es
jo,pn
ss
into
or
push
adc
loope
sarb
inc
faddp
mov
scas
mov
mov
mov
movb
leave
fdivrs
stos
dec
ret
sub
jae
shl
fiadds
adc
lret
imul
jo
pop
imull
pop
aad
lds
push
push
jae
pop
popf
pop
sbb
mov
adc
cwtl
jmp
iret
enter
dec
lcall
xor
and
pop
outsb
xor
ljmp
jno
hlt
ret
nop
push
pop
stos
xor
mov
jae
lods
minps
sbb
lret
mov
sbb
xor
loope
sbb
lret
aad
xor
add
sbb
sub
sbb
ss
divl
mov
nop
mov
mov
out
das
jmp
shll
mov
cld
push
jle
in
stos
ficoms
mov
cmc
mov
mov
adc
in
or
bound
xor
xchg
nop
lret
mov
mov
mul
adc
or
xchg
test
mov
ss
test
xor
sbbl
jg
add
movsb
or
int3
cmpsb
arpl
test
push
call
mov
mov
aad
adc
xor
jbe
rclb
imul
pop
pop
cmp
mov
es
jnp
stc
sbb
dec
lcall
cmp
mov
jns
xor
push
and
pop
sub
hlt
lahf
sub
and
mov
in
cmp
les
push
mov
mov
fadds
cs
pop
scas
sbb
mov
jo
repz
insl
pop
adc
cli
fwait
add
js
fcomip
adc
or
and
fwait
xchg
mov
sub
mov
int
icebp
cmp
xchg
xchg
jnp
push
jmp
xchg
push
xchg
push
push
in
jae
sahf
insb
cmp
and
cmp
xor
dec
ds
push
pop
enter
popa
push
pushf
imul
jg
sbb
cmp
iret
adc
xchg
repz
aad
test
mulb
xor
sbb
push
add
or
cltd
repnz
push
cmp
jge
or
int3
mov
push
aam
adc
and
mov
call
mov
inc
push
xchg
or
pop
xchg
or
mov
sbb
mov
mov
push
icebp
aaa
jle
loope
cli
sbb
fisubrs
fwait
int3
in
in
lret
movsb
lret
dec
mov
push
fsts
dec
jl
sbb
dec
pop
dec
test
inc
jecxz
call
adc
pop
out
test
stc
cli
add
mov
push
addl
out
repnz
pop
mov
jb
loope
xor
fsubr
andb
mov
imul
ret
cmp
pop
leave
push
mov
lret
jmp
push
or
in
jg
adc
loop
loop
push
xchg
xor
jnp
sub
jns
jge
xor
inc
inc
aam
cmp
jno
xchg
outsl
or
and
xor
mov
sti
dec
adc
rcr
jmp
sub
adc
mov
cltd
push
cmp
adc
and
in
loop
pop
adc
jne
fsubr
std
dec
pop
jne
lea
xor
lret
xorb
pusha
jecxz
ret
push
lret
mov
or
mov
jg
fsub
pop
inc
hlt
test
pop
xchg
dec
sub
push
mov
es
push
pop
lcall
push
aad
es
ror
xchg
adc
scas
pop
mov
pop
mov
dec
push
jbe
int
icebp
call
mov
and
add
and
xorb
mov
repz
xchg
inc
fst
and
mov
sub
gs
int3
hlt
push
inc
es
loop
fistl
add
cmp
ret
cmp
icebp
xchg
xor
sarl
enter
aam
xor
sub
sub
div
sti
bswap
loopne,pn
jb
bound
jns
iret
test
inc
sbb
icebp
fmulp
ret
lock
dec
in
popa
rolb
or
xchg
cmp
cmp
outsl
pop
int
test
rorl
faddl
lods
inc
icebp
fdivs
xchg
sahf
sar
mov
push
and
or
in
jp
add
jbe
sub
sub
jp
and
aaa
xor
pop
cmp
and
pop
dec
aas
imul
adc
cmp
stos
bound
mov
es
mov
and
push
xchg
jmp
ds
int3
lret
out
ret
imul
les
inc
jp
inc
sbb
shlb
add
adc
pop
arpl
fstpt
adc
jge
sub
dec
mov
out
mov
mov
jno
out
sti
and
jge
out
repz
leave
jl
mov
sbb
jle
pop
je
ss
xor
mov
aas
pop
adc
mov
push
jns
out
sub
pushf
lods
mov
inc
arpl
lret
add
dec
nop
ficompl
das
and
inc
mov
cltd
pusha
add
pop
repz
shl
cmp
xchg
dec
sahf
pop
in
rcll
xchg
aam
sbb
or
jbe
lahf
sbb
into
decb
fisubrl
js
mov
jo
clc
or
out
outsl
aaa
dec
sahf
mov
aad
sbb
clc
mov
pop
stos
mov
xchg
mov
cwtl
sahf
lahf
addb
mov
lods
sub
sub
push
jbe
inc
push
jle
dec
jnp
dec
fbld
shlb
idiv
sub
cs
jmp
lds
fsubr
jg
stc
out
xchg
lcall
lods
jmp
cli
sar
jno
or
push
push
lcall
jnp
pop
js
int3
cld
sub
mov
imulb
in
xchg
mov
sbb
cwtl
sbb
add
lods
mov
ljmp
mov
in
fwait
popa
pop
loopne
out
mov
sub
sbbl
adc
in
dec
push
xchg
in
mov
iret
cmp
sub
lret
dec
mov
mov
mov
cmpb
jecxz
jmp
andb
push
sahf
xchg
jnp
in
stos
ret
mov
inc
rcll
mov
lret
inc
pushf
xor
mov
cmp
imul
in
or
les
jp
pop
rolb
arpl
enter
mov
sub
inc
pop
mov
mov
in
and
insl
lret
pop
or
shl
adc
push
dec
push
push
xchg
daa
jbe
sbb
iret
hlt
fs
sbb
jae
mov
loop
cmpb
adc
xchg
pushf
mov
sub
out
mov
xchg
leave
jae
ror
dec
shrb
bound
mov
mov
xor
sahf
stos
xlat
push
popa
dec
jae
fwait
out
arpl
adc
xchg
mov
mov
imul
and
lock
js
push
bound
inc
jp
int
bound
xor
sbb
ret
xor
mov
push
dec
imul
out
hlt
dec
mov
sbb
insb
cwtl
call
push
popa
mov
lcall
xchg
pop
hlt
sub
jae
outsl
stos
dec
or
sbb
dec
jae
push
and
jo
jle
sub
xorb
movsb
push
inc
xchg
jg
movsb
ds
int3
pop
fadds
iret
lods
sub
xchg
test
andl
push
popa
add
cmpsl
xchg
iret
testl
pop
pop
call
int3
dec
pop
adc
test
pop
mov
lods
cmp
aaa
std
xchg
add
push
mov
imul
xchg
mov
addr16
push
dec
sub
mov
and
mov
and
push
insl
xchg
les
mov
cmp
movsl
and
clc
insl
cltd
cmc
jle
dec
in
ror
icebp
into
stos
and
mov
and
lds
shrb
adc
jo
jo
inc
test
adc
sub
call
ss
mov
adc
jo
popa
and
or
push
subb
das
lods
aam
fnstsw
popa
negb
push
loopne
jne
and
insl
xchg
xor
and
pop
popa
pop
test
jo
inc
mov
fst
mov
sub
scas
mov
jg
and
xchg
mov
inc
nop
dec
stc
test
jns
xchg
push
insb
jns
test
push
out
add
push
int
pop
jne
jge
mov
mov
mov
scas
mov
and
add
movl
ret
mov
and
pop
mov
mov
stos
mov
stos
ja
mov
loop
add
movsb
arpl
aad
ficoml
orl
js
test
sbb
mov
xchg
sbb
adc
rcr
lea
mov
push
clc
xchg
xchg
cmpsl
mov
sub
push
cmp
mov
nop
ds
mov
outsl
insb
mov
pop
mov
mov
outsb
jb
ds
jg
dec
lods
mov
gs
stos
out
add
hlt
loopne
movsl
popf
enter
enter
xorb
enter
or
arpl
dec
popf
repnz
and
mov
and
std
sub
add
pop
pop
cld
scas
inc
mov
les
shlb
fsubrs
fs
add
jg
mov
mov
fadds
sub
and
insb
pop
push
mov
inc
add
hlt
cltd
lods
fwait
xchg
ja
or
mov
scas
in
mov
cwtl
inc
rcl
mov
or
scas
add
lock
shrb
xor
adc
jo
mov
popl
stos
mov
jno
jle
inc
ljmp
test
mov
out
ja
and
sbb
cli
dec
shlb
fdiv
sub
fucom
repz
cltd
shl
stos
mov
addb
lock
push
sbb
inc
leave
adc
mov
mov
in
adc
shrl
lods
test
stos
add
stc
push
int3
addr16
mov
xchg
sbb
mov
jnp
outsb
xchg
insl
push
enter
lods
insl
pop
data16
pop
rcrb
mov
mov
in
sub
fs
pop
jecxz
in
aas
in
arpl
inc
test
xchg
mov
inc
ja
lods
dec
data16
loop
pop
jb
push
fiaddl
loopne
add
cmp
stos
xor
fistpl
mov
roll
xchg
jmp
iret
jo
std
scas
lods
lcall
and
mov
push
outsl
jle
mov
fdivrl
and
roll
adc
icebp
lret
mov
subl
mov
mov
mov
mov
push
pop
sub
push
lods
icebp
inc
lods
cli
mov
andl
mov
mov
pop
loope
mov
popf
pop
in
jmp
pop
out
mov
inc
scas
icebp
cli
into
mov
pop
stc
scas
or
aam
sti
or
sub
jle
mov
out
push
cli
mov
or
daa
aad
and
cs
lock
rcrl
sarb
pop
in
call
pushf
mov
cmpl
das
push
pop
lock
cmc
out
jbe
add
sbb
push
test
mov
lods
sub
movsb
out
les
cmp
jae
and
lea
pop
movsl
in
jo
sbb
or
add
test
cltd
jbe
push
cmpsb
cs
adc
test
add
jno
push
sub
pusha
mov
lret
lock
inc
pop
cmpb
add
arpl
mov
adc
jle
push
fld
adc
bound
push
int3
iret
gs
fildll
imul
sbb
cmp
data16
cmc
je
daa
ror
xor
sub
jo
pop
pop
sub
enter
mov
mov
leave
sbb
cmpsb
into
scas
inc
mov
cwtl
jae
aam
rcrl
jmp
xor
jns
xor
inc
mov
xor
adc
enter
jno
mov
das
inc
cmp
addr16
add
mov
jl
sbb
dec
jl
sti
inc
cmc
add
aas
mov
mov
imul
mov
sti
loop
cmc
in
xor
ror
mov
fsts
and
jecxz
pop
push
dec
mov
push
std
in
dec
cmc
aam
sbb
imul
mov
push
je
mov
or
and
xchg
test
cld
mov
cs
sbb
mov
into
ljmp
jne
leave
push
dec
or
jb
xor
and
enter
in
jbe
inc
jle
mov
push
lret
xchg
push
jb
mov
xchg
cmp
push
sti
repnz
jb
jae
pop
push
mov
adc
jns
dec
out
ja
and
das
outsb
xchg
jg
jmp
push
jns
fs
lret
cwtl
lock
dec
inc
sbb
ss
sub
sti
stos
dec
fsub
jecxz
aaa
xor
das
and
pushf
aam
pop
xchg
xor
outsl
mov
adc
inc
mov
pushf
sub
cltd
mov
adc
cltd
pusha
xor
jecxz
icebp
xchg
add
fstps
push
jle
bound
sbb
std
in
dec
fistpl
loope
pop
xchg
mov
sbb
push
fs
cmp
push
add
iret
aad
dec
push
cmp
std
leave
jecxz
fidivl
and
nop
sti
xor
repz
movsb
xor
movsl
jl
out
movsb
and
sar
or
neg
fwait
or
test
lods
je
or
int
fildl
shl
sar
inc
rcrb
dec
outsl
cmc
mov
out
repnz
jbe
jp
pop
test
inc
test
dec
push
push
dec
lahf
pop
cmp
stos
fsubp
cmovns
shll
ret
push
aad
adc
aad
mov
leave
xor
mov
push
or
ffreep
lods
push
jge
inc
js
popa
movl
sub
adc
fidivl
sarl
jle
jle
inc
pop
shll
dec
jae
idivb
out
in
test
or
or
cwtl
insb
xchg
dec
js
add
scas
mov
jp
cld
xchg
dec
push
jge
or
into
cs
cld
sahf
shl
out
icebp
push
out
call
scas
add
push
aas
js
je
loop
imul
cltd
lds
iret
xchg
and
pop
push
sbb
mov
cmp
jae
jmp
lods
outsl
je
xchg
leave
mov
loope
inc
sti
bound
mov
lea
jo
and
stos
ficomps
test
jl
mov
add
sbb
adc
jb
clc
es
mov
or
aaa
push
jne
xchg
out
inc
push
sub
insl
rolb
jnp
add
jecxz
and
adc
xchg
adc
fbld
fdivr
js
mov
mov
ljmp
lds
xchg
sahf
cmp
lods
xor
add
mull
push
ja
mov
out
pop
mov
les
inc
and
mov
jge
ss
not
or
in
je
xchg
dec
adc
push
and
movsb
or
loopne
test
int3
sub
ror
addb
mov
jg
and
mov
adc
movsb
jno
repz
add
int
fnstenv
cli
out
mov
dec
jecxz
fwait
movl
sbb
cmp
test
push
les
das
sbb
push
outsb
cmpsl
pop
scas
mov
lret
lea
out
xchg
lcall
jae
stc
mov
in
ret
pushf
mov
lret
fistps
sbb
and
aam
pop
or
add
xor
outsl
scas
bound
fwait
andl
and
pop
pusha
mov
ret
cmp
arpl
lods
push
out
sub
sti
out
sub
cltd
jge
or
pop
fstp
cwtl
dec
pushf
insl
push
jmp
lock
xchg
cs
push
add
pushl
and
les
inc
jno
adc
mov
push
mov
test
adc
out
mov
or
xchg
lea
jns
fidivrs
gs
loopne
push
jb
sbb
jne
ja
fsts
jg
or
and
pop
cmp
out
jns
cmp
sbb
jb
cmp
arpl
xlat
sub
fmuls
jbe
movsl
xchg
std
cli
ret
loope
popa
lahf
test
ja
stc
inc
movsl
popa
test
test
adc
mov
out
dec
insl
testl
jecxz
int
adcb
bound
xchg
repnz
dec
xor
cmp
aam
mov
dec
clc
daa
sbb
iret
clc
fdivl
mov
mov
imul
ljmp
xor
cmp
push
das
mov
stos
lods
ret
out
sbb
icebp
sbb
pop
sbb
mov
mov
js
mov
or
mov
inc
rcll
int
loope
pop
call
inc
pop
xchg
test
pop
mov
inc
mov
pop
pushf
pop
mov
sarb
cmp
mov
imul
add
out
ret
mov
cli
icebp
push
insb
leave
adc
cmpsb
mov
jbe
aad
movsl
vunpckhpd
adc
and
mov
pop
in
sbb
push
loop
push
scas
lock
pop
push
mov
xor
xor
sbb
icebp
sbb
jnp
shlb
jmp
xlat
mov
outsw
inc
push
sti
dec
jb
in
push
jns
addr16
mov
jb
push
jnp
mov
and
add
add
mov
sbb
dec
jo
pop
repz
cs
jns
pop
mov
mov
adc
popa
jnp
jne
lock
movsl
cwtl
inc
rcrl
int
sbb
bound
mov
sar
rcr
sahf
sarb
or
imul
pop
lds
inc
add
jmp
bound
shrb
nop
cmp
sarb
inc
call
fwait
push
jb
mov
push
adc
data16
sub
inc
jno
fstpt
clc
sar
repnz
clc
ret
inc
mov
mov
popa
mov
xor
or
mov
pusha
aaa
fsts
xor
andl
hlt
mov
jno
jg
bound
scas
sub
or
loopne
cmpsb
xchg
mov
pop
and
divl
repz
sbb
push
dec
jle
inc
adc
mov
cltd
lds
xor
lahf
push
and
in
icebp
sbb
bound
fs
ss
push
dec
fstps
aam
test
in
stc
dec
scas
popf
daa
into
mov
mov
mov
stos
aam
xchg
ret
pop
cmp
push
std
test
or
xor
in
fidivrl
lret
jo
push
mov
out
push
add
mov
or
push
loop
lods
sbb
sbb
dec
sub
repnz
xor
jg
pusha
std
jb
jo
jnp
add
fidivrl
sahf
jae
mov
aaa
xor
gs
dec
adc
in
popl
fnstenv
shrl
loop
add
stos
jne
xchg
insl
cmp
rcrb
ret
or
idivb
pop
int
hlt
xchg
inc
mov
daa
push
add
lods
jmp
cli
jno
xor
push
movsl
jmp
xor
adc
mov
and
cmpsl
fdivs
sub
pop
sub
fwait
aad
add
ljmp
mov
push
xchg
jge
iret
outsl
push
shlb
imul
pop
cmp
mov
stc
pop
bnd
jb
in
mov
popa
fdivl
mov
pop
ficomps
jns
mov
pop
shll
sub
jno
mov
arpl
adc
xor
out
xor
sub
sub
es
sub
lods
mov
rolb
mov
pop
loop,pt
rcrl
rclb
in
aas
push
jg
adc
xor
leave
out
sbb
icebp
xchg
leave
sbb
add
pop
std
pop
test
sub
lahf
add
scas
in
inc
lahf
mov
adc
xor
add
sti
mov
mov
cmp
bound
shr
xchg
lods
push
push
or
push
mov
push
outsb
sbb
cmp
push
enter
jns
adc
scas
or
test
dec
icebp
xor
push
xchg
pop
rcll
outsl
pushf
sbb
push
popf
sub
dec
jnp
push
cmp
push
jne
mov
in
push
sbb
sti
jg
repz
mov
inc
xchg
pop
push
fprem1
xchg
lock
adc
inc
stos
lcall
push
popf
pop
xor
lea
test
mov
stc
push
push
maskmovq
notl
jne
test
int
or
pop
xchg
push
inc
rcrl
and
mov
fdivs
sbb
lods
push
mov
sub
push
stos
out
dec
cmpsb
clc
in
cmp
mov
fcompl
or
jge
adc
push
test
and
sbb
push
pop
int3
inc
cli
and
in
in
pop
pushf
insb
sti
mov
pop
dec
dec
mov
inc
insl
add
xor
scas
mov
js
and
mov
xchg
or
sub
outsb
fisubrl
sub
stc
xor
imul
test
hlt
jae
imul
or
mov
sahf
mov
mov
dec
aam
std
dec
fildl
cs
xor
mov
mov
fsubl
ds
mov
insb
outsb
aam
mull
sub
jecxz
xchg
ds
mov
gs
mov
push
jns
mov
insl
and
sub
mov
cmp
adc
gs
mov
ss
jecxz
jmp
mov
and
pushf
jp
sbb
dec
and
jb
fs
sbb
mov
or
add
xchg
int3
lret
dec
jmp
push
out
lea
sbb
jns
or
pop
pop
xadd
push
jl
push
addr16
hlt
scas
shl
sub
mov
xchg
dec
iret
gs
jp
pop
in
pop
xchg
mov
mov
pop
stos
repnz
push
inc
push
cmpsl
fsubp
push
xchg
movsl
out
fnstcw
ret
xchg
test
aad
jo
and
pop
sub
pop
aaa
cli
fisttpll
dec
jb
xchg
pop
push
inc
icebp
enter
jl
xchg
lds
mov
lock
aaa
lock
mov
pop
cmp
lahf
arpl
lds
fidivs
xor
jmp
mov
fistps
leave
sbb
mov
or
adc
sarl
cmp
jae
testl
or
sub
in
cmp
sbb
add
lahf
add
sbb
shlb
add
mov
fs
int3
leave
cmp
in
or
rolb
fmull
js
mov
out
inc
fisubs
dec
std
movsl
enter
mov
sub
repnz
pop
xchg
mov
movb
sbb
xchg
xchg
iret
inc
dec
jae
and
cmpsb
or
cwtl
adc
push
sub
imul
sbb
jno
out
ss
push
incl
jns
jp
dec
movsb
dec
imul
push
inc
mov
push
pop
xor
dec
aaa
mov
loopne,pt
mov
mov
imul
cld
pusha
mov
cmp
leave
in
daa
fwait
jmp
movsb
mov
mov
xor
or
insb
rol
xor
add
cmpl
fs
aaa
mov
out
jb
popf
pop
mov
pop
mov
pop
insb
ficoms
mov
pop
cwtl
push
inc
cmp
mov
pop
rorb
cmp
test
icebp
or
mov
and
clc
es
mov
call
in
jecxz
pop
adcl
icebp
lsl
pop
les
push
std
and
jno
dec
ja
jbe
popl
jle
pop
gs
hlt
sbb
movsb
or
mov
inc
jb
cs
pop
ret
add
test
inc
mov
in
mov
add
mov
inc
or
sbb
dec
sub
adcl
pop
pusha
push
out
sub
lock
lods
fdivrs
push
push
cld
add
cld
out
lock
mov
dec
push
cltd
pop
jae
jge
mov
fldcw
mov
lret
repnz
out
jg
popf
lea
cld
adc
jno
xchg
xchg
inc
jbe
lods
lock
jbe
xchg
sbb
es
mov
in
jg
gs
popf
add
leave
mov
stos
negb
mov
and
std
repnz
adc
bound
aas
jbe
mov
jno
sbb
cmpsl
int3
out
imul
add
cld
jp
stos
rcrl
push
pop
mov
imul
cmp
push
jg
test
cmp
shlb
dec
sbb
fisttps
lods
addr16
subb
lahf
or
loopne
xor
loopne
pop
ret
pop
das
ret
cmpsb
push
mov
mov
hlt
popf
nop
out
xchg
stos
cmp
aas
enter
into
shlb
stos
sub
stos
sbb
lahf
std
in
pop
pusha
dec
add
sbb
cmp
arpl
cmp
inc
rolb
loop
lods
mov
addr16
jle
lock
test
dec
lret
in
sbb
call
enter
aad
lahf
xchg
in
pop
pushf
sarb
or
cli
mov
mov
jg
jle
rcll
filds
notb
mov
cli
or
lods
flds
leave
fadd
push
in
adc
shr
ss
stos
jl
xchg
fwait
imul
add
aam
fs
xchg
js
aas
mov
jns
lret
add
xor
pop
std
cmp
cmp
das
xor
hlt
mov
loop
cmp
mov
pop
pop
inc
bound
mov
movsl
add
sub
xchg
sbb
adc
ss
rcll
xchg
and
test
movsl
lea
lods
lcall
push
push
adc
push
adc
and
shll
mov
ficomps
and
stos
test
dec
add
test
mov
jno
in
adc
ss
xor
fimuls
xor
add
aaa
cmp
mov
addr16
in
aad
xor
ss
cmp
pop
mov
xchg
xchg
cmp
cwtl
sbb
sti
daa
gs
or
mov
je
adc
sub
andl
outsb
and
sub
xchg
pop
sub
call
sbb
insb
mov
and
nop
aas
dec
pop
rcll
cmp
pop
or
test
or
mov
pop
shl
scas
push
mov
jb
out
aaa
movsl
arpl
das
hlt
mov
ds
sbb
xchg
sbb
mov
mov
out
arpl
mov
int
je
cltd
xchg
sbb
push
xchg
adc
jns
enter
mov
dec
addb
pop
adc
jns
and
call
sub
mov
and
loopne
movsb
mov
adc
call
xor
movl
mov
pushl
and
outsb
jle
aad
jp
jno
sub
xchg
loopne
dec
xchg
mov
jle
lcall
mov
arpl
bound
inc
mov
jo
pushf
push
std
mov
pop
push
push
test
movsb
lret
test
rcr
pop
call
lock
scas
add
mov
popa
int
int
jno
xchg
mov
ret
dec
cmpsl
frstor
pop
mov
andl
mov
xor
popa
jo
add
enter
mov
push
dec
mov
pop
dec
arpl
dec
add
mov
popf
lret
ret
inc
lret
mov
sub
enter
hlt
aas
rcrb
setg
push
adc
mov
push
cmp
mov
ss
adc
andl
repnz
aaa
jmp
inc
or
aaa
int
xor
clc
dec
je
scas
into
stc
icebp
fs
dec
insb
or
add
enter
shll
hlt
and
daa
addr16
in
outsl
mov
and
test
mov
cmovl
mov
pop
adc
cld
lds
sub
rclb
xor
in
or
or
xchg
insb
xor
sub
push
xchg
jmp
lret
in
xchg
jns
jp
mov
je
pop
mov
gs
outsb
mov
push
inc
in
fucomip
jb
sub
fiaddl
mov
xchg
test
xchg
push
pop
adc
jp
xchg
push
outsl
add
fisubl
test
xchg
push
sbb
adc
test
mov
test
pop
fidivs
jae
dec
js
jb
cmp
sbb
aad
test
cld
out
mov
mul
fcomip
xor
fimull
cli
in
adc
daa
jno
arpl
test
aad
sbb
pop
push
int3
fcom
daa
out
dec
lock
dec
popf
ss
xor
and
pop
dec
add
jl
sbb
daa
push
or
sub
sbb
inc
jbe
mov
jbe
lcall
test
shlb
sub
aaa
sub
xchg
jmp
pop
mov
dec
div
xchg
daa
and
jae
in
push
mov
jne
fstl
in
or
mov
xchg
pop
mov
mov
jmp
dec
enter
lods
jne
aaa
mov
sub
add
jmp
in
xor
mov
or
addr16
add
out
arpl
enter
adc
cmp
into
inc
xchg
mov
stos
add
sub
xchg
fwait
scas
inc
cld
in
ja
fsubr
pop
mov
pop
pop
inc
cmp
push
arpl
cmpsb
aam
xor
arpl
ret
iret
xchg
aam
aad
dec
or
dec
aaa
push
jno
cmpl
stc
and
xor
mull
xchg
jmp
sbb
popa
sbb
aas
inc
mov
mov
stos
cltd
lret
cmp
jno
mov
loope
leave
gs
jo
out
test
arpl
jg
push
xor
cli
pop
mov
mov
shl
fmuls
dec
insb
je
dec
xchg
fiaddl
cs
cmpsb
shrb
xor
and
out
jae
pop
test
repz
es
fiadds
xor
cld
or
fistps
xchg
test
dec
add
sbb
js
jg
pop
loopne
pop
sub
cmp
lahf
or
adc
add
fcomps
cmp
or
and
movsb
leave
fwait
sbb
push
lods
sub
add
rcl
xchg
imul
call
inc
mov
xlat
loop
cmpl
cmp
or
mov
push
cli
add
pop
xchg
and
inc
xor
daa
insb
adc
out
jmp
jnp
ja
aad
out
xchg
mov
and
jne
das
fwait
cmp
bound
xor
out
push
xchg
js
pushf
and
out
xchg
add
out
arpl
pop
mov
xchg
in
or
or
jbe
dec
call
cmp
xchg
int3
hlt
add
mov
pop
sbbl
imul
xlat
in
rclb
enter
and
lods
cli
cmpl
xchg
imul
inc
test
in
faddl
dec
and
or
mov
cmp
mov
lcall
sbb
int
dec
dec
out
sbbl
repz
mov
and
loop
popl
faddl
std
ficoms
movsb
inc
add
les
arpl
ljmp
lahf
andl
aas
sti
in
pop
jl
rcrb
mov
pop
les
jne
mov
andb
pop
lods
dec
sub
das
mov
movsl
pop
mov
in
dec
sub
stos
sub
push
pop
sbb
sbb
sub
dec
jmp
arpl
fistl
mov
stos
test
cmp
rcl
mov
lret
push
jge
pop
sbb
mov
faddl
lods
pop
jg
jnp
sahf
jns
clc
push
cld
movd
mov
fistl
cmp
jne
andb
outsl
inc
jnp
or
insl
xchg
sbb
arpl
sbbl
cmpsl
or
in
jno
xor
ja
mov
pushf
je
xor
jp
sahf
cmp
cmpsl
aaa
pushf
and
push
add
fistl
mov
pop
jnp
into
mov
inc
int
or
mov
pushf
dec
xchg
cltd
pushl
cmp
in
test
jns
add
mov
fnsave
stos
xchg
cmp
data16
mov
sahf
mov
inc
js
ret
icebp
inc
shrb
jne
xchg
dec
aas
inc
das
inc
call
and
ds
fdivl
pcmpeqd
clc
pop
imul
cli
outsb
adc
mov
sarl
mov
popa
mov
mov
inc
sub
sahf
mov
fwait
push
jo
jns
int3
outsl
lcall
xor
pop
inc
mov
push
xor
mov
inc
push
sarb
cmpsl
iret
jp
and
jl
push
fsubl
xchg
pop
popf
and
cmpsl
fwait
cmp
cmp
leave
ljmp
inc
pushf
sbb
insl
ja
mov
mov
or
out
sub
sbb
sbb
ja
sbb
sbb
cmp
fisttps
sbb
ja
jne
inc
ja
imul
lods
sub
scas
cld
lock
shrl
mov
mov
xchg
sbb
popf
mov
ja
dec
pop
lods
inc
jp
and
ds
and
std
cld
cmp
es
cli
jmp
out
push
push
stos
ficomps
cli
out
push
out
aad
push
and
loopne,pn
fcmovnb
out
out
and
outsb
in
xchg
adc
mov
jb
cmpsb
outsl
rorb
sbb
outsl
faddl
jg
outsl
pop
cmpsb
loop
mov
and
fdivs
sub
push
pop
pop
js
inc
adc
xchg
std
outsb
xchg
mov
adc
dec
popa
mov
mov
lret
mov
push
roll
repnz
push
inc
add
pop
jae
mov
mov
je
cmp
das
sbb
ljmp
mov
inc
arpl
mov
testl
ror
shl
or
xor
scas
cmpsb
mov
ss
mov
adc
imul
jp
and
xchg
js
orb
scas
lock
test
ljmp
rcrb
js,pt
cmp
ss
push
pop
rol
fs
xchg
int
js
in
xor
inc
nop
xchg
out
adc
cmpsl
ss
filds
fwait
aaa
ret
mov
unpcklps
mov
fistpll
mov
add
and
xchg
ss
pusha
jbe
sbb
xor
cmpsl
dec
ds
xchg
cmp
jb
dec
fildl
cmc
loope
es
jbe
sbb
xchg
mov
fs
test
inc
aad
dec
sbbl
xchg
mov
mov
pop
lds
sbb
lea
test
mov
out
cmp
stc
outsl
sbb
insl
sub
fcmovnbe
bound
add
inc
aaa
inc
cwtl
xor
loope
insw
push
loope
fnstenv
adc
add
scas
push
mov
arpl
or
sub
add
cltd
adc
rol
mov
add
cmovg
push
adc
cs
inc
push
cmp
or
pop
mov
cltd
xlat
rorb
or
daa
and
push
mov
fidivrs
iret
push
or
int
push
nop
dec
popf
js
inc
imulb
jg
xchg
fucomp
mull
lea
or
sbb
pop
cmp
cmp
mov
or
xchg
into
hlt
push
iret
lods
mov
outsl
loope
mov
mov
cmp
dec
adc
mov
test
push
or
mov
scas
loop
std
scas
mov
or
xor
add
cmp
test
cwtl
mov
std
icebp
aas
add
in
movsl
imul
bound
cld
add
adc
jae
ja
sbb
imul
sbb
imul
shll
imul
scas
inc
mov
mov
cmp
inc
inc
inc
pop
pop
mov
or
jg
cmp
jmp
pop
aad
test
cmp
mov
mov
testb
push
xchg
int3
sbb
xchg
aam
in
push
mov
lods
daa
lea
dec
fwait
rcrb
loopne
decl
into
mov
adc
cmp
sbb
fidivs
repz
fwait
mov
inc
push
xchg
xchg
inc
test
add
ret
idivl
shr
jp
data16
jo
cmpsl
aas
nop
push
jge
mov
adc
stc
sub
push
or
js
cmp
in
push
idiv
add
adc
lahf
mov
and
xchg
clc
stos
cmp
pop
sbb
repz
or
xor
inc
cltd
loope
dec
js
ret
or
sub
int
sahf
mov
mov
add
adc
outsb
adc
icebp
cmp
jecxz
mov
push
stos
pushf
sbb
jno
into
add
lea
cmp
jae
rolb
pop
jmp
push
push
lock
cltd
jb
jmp
lds
fdivrs
hlt
push
test
imul
fidivrs
les
out
xorl
xchg
xor
and
and
cmp
scas
movsl
lds
xchg
movswl
jbe
add
jmp
add
int
add
mov
pop
dec
sub
clc
push
out
movsl
mov
les
lret
stc
scas
push
sub
fs
adc
mov
popf
cld
push
test
xchg
std
pop
cmpsl
mov
sbb
xor
frstor
dec
dec
cmpsl
lcall
into
xor
lea
ja
shrb
jp
pop
fucomip
aam
inc
neg
adc
jae
jg
push
pop
sti
fstl
imul
aaa
xchg
sbb
stos
jns
int
leave
int
mov
lret
mov
xchg
cltd
sbb
aam
test
lea
pop
je
lds
push
out
push
xor
push
jnp
ljmp
fisubrl
stos
scas
lret
imul
dec
xchg
xor
pop
lods
and
popf
sbbb
inc
scas
push
inc
dec
out
fwait
test
or
fidivl
jne
ret
add
push
mov
mov
sarl
daa
popa
out
xchg
loope
mov
rcrl
lret
test
jne
jne
sub
addl
hlt
sbb
lock
xchg
inc
dec
stos
mov
stc
out
and
push
add
or
add
push
iret
xchg
inc
push
rorb
push
xor
add
movsl
or
cmovns
or
xchg
in
lret
pop
test
cltd
mov
lret
icebp
or
adc
cmp
test
lea
mov
inc
test
testl
jb
cmp
mov
push
mov
or
add
cmpsl
int
cld
orl
cmp
sub
and
test
ja
les
test
sub
xor
push
faddl
xor
fistl
mov
sahf
dec
insb
sub
jb
fs
xchg
pop
outsw
and
jle
movsb
jp
lahf
jge
shrb
xchg
movsb
scas
inc
fsubl
xchg
repnz
cmpsl
cmp
pop
popf
lahf
push
mov
subl
pusha
cmp
xlat
or
inc
xchg
jae
stos
scas
add
ss
hlt
xchg
and
iret
xlat
mov
push
dec
or
dec
shl
xorl
jecxz
dec
insl
add
out
inc
adc
and
jnp
and
test
fs
jp
std
imul
lock
pop
mov
testl
gs
in
or
fsub
call
rclb
mov
cmp
fnsave
repnz
sbb
dec
push
clc
jnp
scas
es
xchg
rol
mov
fmull
jne
jmp
push
pop
dec
je
mov
push
or
test
test
lcall
sub
fisttpll
sarl
stc
mov
adc
pop
aaa
xchg
dec
cs
jns
push
adc
xor
xor
jbe
inc
ds
int
leave
je
and
das
mov
stos
scas
cs
out
xor
aaa
das
lds
sbb
mov
fiadds
and
mov
rcrl
icebp
pop
shrd
fsubrp
or
add
inc
loopne
or
out
cmp
push
lahf
ficompl
pop
adc
iret
xchg
dec
mov
sub
fdivrs
js
xchg
je
push
or
std
xor
test
loopne
jae
cltd
jae
lret
sbb
loope
xchg
jb
add
pop
dec
xchg
cld
aad
insl
sub
orb
sbb
xlat
or
pop
pushf
jmp
jbe
pusha
jg
adc
xchg
jns
push
ret
out
mov
cmpsl
xchg
test
pusha
fisttps
test
movl
call
mov
xor
sbbb
mull
mov
xchg
push
sub
sbb
push
push
xchg
cmp
xorb
lret
in
inc
or
aam
fs
push
sub
jo
in
adc
sbb
mov
bound
inc
jmp
adc
test
or
jg
or
xor
sbb
and
lcall
mov
ret
daa
and
pop
movsb
pop
sbb
sbb
outsb
shl
mov
fidivl
lds
pop
sbb
jnp
xchg
and
dec
cmp
lret
mov
mov
jnp
or
push
movsb
and
xchg
rorl
sub
sub
cli
fisttpl
sbb
jnp
arpl
mov
jnp
fidivs
push
lret
popa
and
insb
or
outsb
cld
fidivl
in
gs
jp
mov
outsl
pop
leave
cmpsb
sub
sbb
nop
mov
ss
lret
iret
cmp
sbb
stc
and
or
aaa
xchg
or
jne
mov
fsubrl
or
pushf
loop
pop
xor
fbld
mov
nop
sbb
sub
sub
addb
cltd
mov
lock
movb
push
out
sub
aad
xor
mov
fdiv
push
mov
je
or
cmp
or
int3
mov
ficoms
inc
les
outsl
mov
hlt
push
dec
inc
sahf
xlat
ds
daa
sarb
jmp
lret
sub
adc
mulb
movsl
outsl
rcrb
add
mov
dec
fcmovu
mov
cmpsb
xchg
push
insl
mov
mov
aam
aaa
in
shlb
loopne
in
loopne
and
mov
sub
ja
dec
or
mov
inc
adc
leave
imul
fisubs
ljmp
in
jge
sti
in
subl
lea
push
leave
iret
test
mov
xorl
cmpsb
frstor
jge
xchg
sbb
and
aad
push
test
sub
lods
lea
add
cmpsl
pusha
stos
xor
mov
cld
add
lret
fmull
pop
pop
adc
cltd
jns
test
ds
insl
int3
addr16
popa
fdivs
test
mov
cld
pushf
rolb
pop
sub
gs
sub
pop
fdivrs
lds
xchg
mov
pop
pop
popa
inc
lods
sbb
push
insb
test
int
pushf
adc
dec
loopne
aam
shll
insb
addr16
pop
ficoml
test
rcl
and
sub
call
enter
pmaxub
fwait
es
mov
mov
je
mov
and
sbb
adc
jne
xchg
scas
pop
int3
mov
std
lods
mov
mov
sub
or
mov
loope
mov
je
inc
xchg
xchg
pop
inc
cmp
aad
lcall
mov
nop
add
out
insl
bound
es
cltd
movsb
and
popa
adc
cmp
jb
or
daa
iret
adc
push
jo
cmp
cltd
jp
xchg
lahf
test
ss
inc
mov
mov
mov
sbb
dec
jno
xor
rol
fstp
mov
jg
push
mov
out
pushf
lock
mov
inc
in
inc
lcall
inc
jge
fildl
push
leave
xor
cmp
das
inc
push
sub
rcr
sub
push
scas
mov
push
mov
out
sub
shlb
inc
mov
lret
out
lret
xchg
add
insb
mov
pop
jg
sub
push
pop
push
xchg
stos
jo
loope
xor
cmc
lock
insl
mov
ret
pop
mov
int
stos
mov
ret
fidivs
cmpsl
jae
popf
mov
adc
jle
aam
mov
bound
inc
imul
andb
cmp
mov
push
outsb
mov
mov
push
adc
rol
fs
or
lea
pop
mov
fnsave
sbb
out
int3
add
inc
rcll
xchg
loopne
fstps
dec
pushf
leave
inc
rclb
rcr
test
divl
js
mov
and
stc
loope
insb
cmp
sub
loope
js
and
pop
push
jp
dec
bound
hlt
adc
or
inc
outsl
or
out
cli
cmc
dec
test
sbb
imul
loop
les
add
cmp
sahf
mov
sub
repnz
dec
popf
ss
inc
and
stc
leave
adc
int3
inc
or
fldenv
loop
std
out
lds
pop
xchg
and
mov
jg
js
pop
cmp
aaa
jbe
ss
add
jo
mov
int3
rcrb
into
lods
jmp
xor
loop
arpl
sub
loopne
out
js
inc
ret
dec
pop
jg
xor
jb
dec
out
mov
stos
popa
or
pop
pop
scas
insb
inc
and
adc
mov
hlt
mov
inc
add
adc
mov
lods
repnz
cmp
mov
sahf
fsubrp
jb
pop
aad
das
hlt
cmp
or
sub
push
jecxz
pop
mov
lcall
adc
xchg
xchg
cmovs
push
sti
cmp
dec
add
xor
movsb
inc
pop
jo
lcall
ja
jecxz
mov
jns
and
xchg
rolb
movsl
sahf
int3
call
adc
in
call
xchg
jp
call
cltd
xchg
pop
cwtl
sbb
sbb
pop
push
insb
jb
popa
inc
mov
and
inc
mov
mov
and
dec
addr16
lret
test
lahf
add
ljmp
lahf
add
outsb
clc
add
pusha
adc
sub
std
jg
mov
iret
xchg
shll
rcll
dec
or
insl
outsl
fs
and
or
mov
mov
inc
and
movsl
push
xchg
inc
dec
push
cmp
cmpb
scas
sub
inc
adc
aam
inc
cmpsl
out
loope
and
xchg
mov
jo
movl
lahf
js
cmpsb
sub
in
loopne
bound
in
xchg
stc
repz
pusha
pop
icebp
add
xchg
pushf
jecxz
leave
pop
repz
dec
sub
fs
pop
shlb
mov
bswap
in
xor
imul
mov
test
jbe
stos
stos
pushf
push
push
cmp
cwtl
roll
add
cmp
mov
loopne
xchg
adc
inc
push
mov
ss
mov
xchg
jle
imul
rcrb
cld
int3
movsl
out
repz
cmpsl
xchg
outsl
jnp
test
sahf
cmp
mov
xchg
adc
lret
scas
mov
stc
add
sub
cmp
pop
popa
sbb
sbb
nop
je
push
loop
push
add
sti
mov
cld
ret
inc
push
mov
addr16
mov
mov
pop
out
cld
lds
fcmovne
test
cmpl
xchg
pushf
mov
loopne,pt
jg
ja
adc
add
mov
hlt
sub
bnd
inc
es
in
movsb
mov
adc
ljmp
mov
push
sbb
addr16
fwait
cs
cmp
inc
stos
mul
inc
fcoml
pop
mov
mov
cmp
lcall
lds
imul
xchg
add
dec
or
hlt
jecxz
lea
aaa
xor
sbb
pusha
ljmp
add
push
cmpsb
xchg
fists
inc
mov
repz
in
push
xchg
jo
and
clc
mov
lods
fwait
std
jno
xor
dec
stos
inc
mov
mov
push
mov
push
lahf
scas
outsl
mov
cmpsb
sbb
imul
lods
and
repnz
fs
out
sub
xchg
imul
dec
or
jmp
adc
jno
mov
outsl
xlat
xor
jne
repz
xchg
ja
repnz
pop
jae
sub
pop
push
or
xor
dec
push
scas
stos
jo
cmp
mov
mov
add
xchg
les
sbb
mov
adc
lods
out
xor
in
loop
push
call
mov
push
mull
push
aam
lret
jp
es
cmp
and
and
in
sbb
movsb
dec
mov
dec
movsb
mov
xchg
and
out
mov
xchg
jle
ljmp
cltd
push
js
push
jbe
addr16
xchg
outsl
and
lock
rol
xor
roll
xor
imul
dec
inc
jg
inc
insl
xchg
das
add
mov
add
adc
movsl
inc
or
push
pop
inc
dec
mov
mov
shll
in
dec
push
xchg
lock
cmc
les
insl
push
add
pushf
mov
sbb
mov
lcall
ret
xor
scas
pushf
jmp
repnz
mov
xchg
jecxz
lret
cmc
mov
sub
adc
jne
out
or
aaa
int
xchg
inc
inc
je
lret
and
loopne
or
fisttps
andl
js
ret
outsb
push
and
adc
out
mov
pusha
fcompl
stos
aaa
push
out
xchg
push
loop
mov
ss
push
adc
jecxz
cmpsl
lds
sbb
sbb
repz
int3
cwtl
xlat
sub
jmp
fsubr
mov
inc
jecxz
aad
and
fisubrl
sub
fimuls
push
sbb
push
mov
shlb
push
cmp
adc
push
mov
pop
loope
aam
loope
mov
test
movsb
or
fwait
xorl
jmp
xor
sbb
mov
fs
cli
pop
popa
jae
rclb
pop
loop
push
sub
push
sahf
dec
cmp
cmp
pmulhuw
fildll
push
addr16
pop
ljmp
sub
clc
bound
mov
into
jbe
mov
int
rcll
in
xchg
mov
xor
enter
movsl
pop
push
lods
sub
jae
sub
aaa
arpl
sbb
mov
xlat
sub
sub
js
push
inc
inc
add
rorb
out
push
daa
popf
and
mov
xor
lcall
and
js
clc
dec
xor
iret
and
stos
dec
push
rorl
sub
dec
pushf
inc
adc
outsl
sbb
and
cmpsb
dec
push
push
adc
sub
jae
inc
and
or
mov
jne
fcoml
sub
stos
mov
mov
cmc
push
pop
mov
pop
repz
out
out
add
xor
push
out
xchg
call
jo
push
shl
jecxz
jge
mov
push
scas
add
cmp
icebp
jno
das
fyl2x
sahf
outsb
scas
les
mov
and
jno
daa
pop
xchg
xor
sub
add
dec
jge
sbb
push
mov
mov
out
outsl
push
roll
lods
ja
and
cmp
add
lea
mov
mov
mov
dec
mov
sahf
nop
loopne
dec
arpl
popf
loopne
pop
mov
gs
cmp
and
dec
fnstenv
lods
or
loop
push
out
aas
jo
nop
and
pop
and
push
sbb
jo
xchg
xor
adc
int
mov
sti
repnz
pop
pop
adc
lea
ss
or
mov
xchg
mov
inc
jg
in
jg
sbb
shrl
mov
cmp
push
push
call
dec
mov
xor
lods
sbbb
mov
push
xchg
sbb
sub
lcall
aam
jge
pop
mov
xchg
mov
xchg
dec
mov
sti
je
rclb
sbb
sub
mov
pop
movsb
lock
movsl
test
mov
sub
sahf
cmpsb
push
pop
pop
dec
push
push
outsb
sbb
push
mov
sub
fcmovnu
imul
movsb
clc
lret
add
mov
xchg
push
mov
mov
mov
push
xchg
cmp
imul
push
dec
test
and
dec
popf
filds
or
orb
popa
mull
cmp
pop
mov
repnz
cmp
cmp
adc
or
cmpb
in
pop
and
stc
ret
test
pop
jno,pt
es
test
jle
mov
push
fs
loope
notb
test
dec
fs
enter
dec
cmpsb
fmuls
cli
mov
xchg
mov
sbb
scas
fiaddl
lods
lret
push
mov
das
push
xchg
loope
in
cwtl
daa
cwtl
sub
sub
jb
cmp
xchg
or
loopne
pushf
or
daa
sbb
mov
mov
test
cmpsl
sbb
sub
sti
inc
jne
cli
mov
mov
xchg
push
dec
movsb
push
aaa
mov
jge
xor
mov
pop
seto
and
mov
push
fidivrs
std
lret
vpperm
mov
sahf
adc
sbb
adc
sti
ret
or
push
lods
jbe
enter
bound
push
mulb
dec
outsl
repz
shlb
add
icebp
lods
sbb
xchg
sbb
es
push
in
push
stc
bound
ret
lahf
aas
int3
mov
pop
lea
cmp
mov
jno
cmc
mov
cltd
dec
xor
mov
mov
xor
enter
aaa
nop
xchg
outsl
xchg
push
outsb
inc
in
cmp
nop
loop,pt
enter
cmp
xchg
mov
in
scas
dec
fdivr
cwtl
enter
xchg
aaa
mov
add
aas
and
sahf
mov
rolb
xchg
cmp
ss
mov
or
loope
repnz
cmp
enter
or
sub
pop
pop
adc
je
mov
sub
xor
loop
sbb
ret
sahf
ret
add
xor
pop
mov
test
dec
add
out
sbb
filds
cmp
sbb
pop
lock
jne
pop
insb
add
mov
cmp
gs
ljmp
jmp
in
das
inc
imul
dec
sub
cli
iret
jecxz
mov
pushf
mov
push
mov
pop
idivb
push
leave
pop
inc
mov
xlat
push
aaa
mov
xchg
mov
aaa
lea
ds
adc
jnp
pop
cli
pushf
sbb
xor
xchg
mov
test
sbbl
mov
mov
comiss
sbbb
push
cmp
ret
push
std
jg
add
pusha
in
jge
cmp
pushf
add
sbb
movsl
jae
sub
insl
inc
fwait
mov
shl
mov
and
outsb
mov
popf
add
push
lods
pushf
pop
data16
sbb
lods
sbb
int
aam
popa
shr
imul
mov
push
cmp
aad
scas
mov
ja
lods
call
sbb
add
ss
data16
clc
jb
daa
jnp
pop
scas
mov
loop
adc
roll
cmpsl
mov
pop
movsb
or
dec
mov
mov
adcl
pop
cmp
in
fmuls
adc
fcompl
shl
dec
dec
xor
inc
sub
lods
add
pop
mov
pop
lods
push
mov
sub
outsb
imul
les
fildl
pop
sub
sbb
mov
icebp
out
fnsave
jmp
jmp
add
mov
out
lds
lods
push
pop
shrl
clc
push
fcoms
sti
clc
sahf
and
sbb
ss
sub
add
inc
dec
out
movsb
test
dec
rclb
xchg
lcall
adc
movsb
adcl
dec
test
xor
es
inc
dec
and
xchg
out
sub
sbb
sub
arpl
push
fcmovnbe
mov
pop
jno
nop
inc
scas
mov
movsb
xchg
out
cmp
lods
aam
mov
fldcw
push
hlt
je
cltd
imul
scas
cmc
xor
shr
xor
jne
xchg
push
jge
scas
pop
lods
jb
push
in
in
jmp
jle
push
push
xchg
movsl
aad
push
leave
int
mov
pop
mov
jmp
es
popf
lret
mov
xchg
push
or
rclb
pop
out
push
inc
loopne
out
stos
sbb
lea
fcompl
xchg
or
cmp
shll
frstor
scas
cs
jge
mov
insl
pusha
push
mov
scas
xchg
sub
xchg
and
cmpsb
adc
mov
cmp
adc
adc
cmpsb
cld
packsswb
outsl
lock
and
and
aam
je
xchg
repnz
xchg
cmc
jecxz
repnz
enter
loope
jp
outsl
dec
pop
mov
cmpsb
lods
cwtl
xchg
divb
adc
jae
stos
cmpsl
popf
mov
ret
je
lock
lock
int
ds
adc
je
test
jp
into
dec
out
cs
jl
gs
mov
push
hlt
push
push
pop
out
movsb
push
jp
dec
outsb
cmpsb
mov
ret
shl
jne
xchg
rcll
push
mov
bound
test
push
jp
fsubrs
xor
int3
adc
pop
inc
and
mov
pop
or
cli
add
and
or
mov
decb
mov
sub
insl
mov
push
mov
jle
decb
jg
inc
les
inc
les
jbe
xchg
test
fcoms
shr
add
jnp
lret
test
lock
dec
stos
mov
adc
clc
loop
fistl
aas
fidivl
iret
fsubl
and
pop
ret
hlt
mov
xchg
mov
push
movsl
rorl
mov
dec
iret
jecxz
movsl
jmp
xchg
js
les
mov
es
push
fsts
rcrb
mov
repz
mov
pop
pushf
xorl
mov
push
hlt
subl
andb
sbb
orl
adc
test
hlt
adc
dec
mov
aad
xor
push
fdivl
movsb
ds
mov
cmp
xchg
sbb
fstl
cmp
fsubl
sbb
mov
clc
fwait
sub
jl
xlat
inc
pop
cs
pop
mov
adc
push
pop
cmp
in
aaa
or
dec
daa
pop
dec
movsl
subb
sbbl
jnp
jl
sub
push
jecxz
popf
int3
enter
and
inc
mov
or
pop
xchg
xchg
xchg
mov
or
fldt
div
xchg
std
mov
nop
cmp
into
cli
std
adc
mov
cmp
mov
xchg
xchg
push
lods
pop
and
data16
mov
repnz
fisttps
add
xchg
fmulp
and
rclb
out
xchg
dec
pop
mov
adc
fistl
icebp
jnp
adc
add
xchg
out
mull
in
incl
movswl
fldt
fs
iret
dec
aaa
movsb
and
jmp
shlb
fs
pushl
cli
lret
xchg
push
stos
ljmp
popa
cltd
insb
cmp
imull
push
sub
pushf
aad
mov
sub
mov
mov
adc
push
mov
jg
popf
xchg
pop
fs
adc
xlat
mov
mov
mov
icebp
sbb
or
push
repnz
cmpsl
dec
dec
adcb
ds
sbb
pop
icebp
testl
mov
mov
imul
sbb
ficoml
test
add
shll
neg
vmwrite
jmp
mov
xorl
fmul
pop
insl
enter
jmp
adc
insb
mov
mov
stc
inc
mov
xchg
push
mov
dec
aaa
popf
pop
mov
xchg
divb
jecxz
mov
jg
mul
add
incl
enter
sahf
jge
decl
push
pop
fisubl
mov
clc
inc
ljmp
xor
out
pop
scas
jbe
jecxz
fisubrs
push
jecxz
jne
or
sub
mov
dec
insl
jg
out
fisttps
push
fs
lahf
stc
fdivrp
adc
or
or
out
xchg
std
out
repnz
dec
jg
rol
lret
and
gs
sahf
sub
decl
mov
ret
and
mov
outsl
testl
mov
test
hlt
pop
filds
enter
cmpsl
adc
std
and
and
sahf
sbb
ds
pop
fisttps
jge
mov
fimuls
mov
push
add
pop
arpl
jl
out
inc
fldl
mov
out
fucom
cli
cld
jge
pop
ja
out
icebp
pop
js
out
adc
mov
gs
test
mov
shrl
and
inc
xor
ja
int
rolb
dec
fisubl
mov
lcall
test
cmpsb
mov
scas
int
cmc
mov
mov
outsl
loope
push
fistl
adcb
loop
sahf
lret
sub
sbb
lahf
lret
adc
mov
xor
push
sub
push
inc
fsubr
rcr
enter
jp
xor
push
jl
test
decb
adc
jo
pop
sbb
push
fisttps
or
mov
fldenv
xor
mov
ret
xor
call
mov
xlat
inc
and
jo
lret
loopne
lahf
and
ja
shl
outsl
xchg
lahf
mov
pop
xor
fs
in
mov
adc
push
cmpsl
rorl
mov
idivb
sbb
pop
or
dec
out
data16
and
jno
imull
ret
xchg
loopne
lcall
sahf
stos
aaa
push
fwait
lcall
mov
lock
pop
in
out
icebp
jle
mov
sub
mov
cmp
jae
or
mov
pusha
ljmp
int3
cmpsb
add
pop
vcmppd
sbb
push
and
insl
lods
fwait
pop
rcrl
lea
cmpb
imul
cmpl
or
int3
mov
and
repnz
mov
in
xchg
and
pusha
xchg
push
add
in
call
or
or
repz
les
sahf
or
pusha
inc
adc
dec
arpl
std
xor
das
ljmpw
mov
adc
dec
ds
addb
lcall
jo
add
xchg
mov
sbb
mov
jbe
addr16
stc
stos
test
jns
sub
and
lret
sbb
push
addl
enter
dec
aam
je
fnstcw
inc
popf
incl
push
loope
cmpb
push
iret
xor
outsl
and
dec
xor
sub
ds
rorl
sbb
arpl
push
push
mov
cwtl
mov
je
test
and
mov
or
lahf
adc
lea
and
sub
or
and
fimuls
cmc
cs
fstpl
pop
lret
out
jl
inc
pop
cmp
xorb
pop
stc
orl
xor
js
mov
add
mov
add
pushf
jecxz
add
dec
fldl
loop
adc
mov
hlt
mov
mov
cmp
add
lock
movsb
fbld
int3
lds
outsb
push
sbbl
movsb
jg
cltd
push
xor
jecxz
shlb
repnz
pop
mov
or
call
push
xor
movsb
cmpl
mov
xlat
jecxz
nop
leave
cmc
stos
out
xlat
int
in
dec
repnz
in
mov
lods
lods
in
jge
push
into
jge
insl
jle
ds
in
mov
iret
mov
mov
pop
gs
std
adc
mov
push
icebp
popf
popf
shrb
icebp
mov
cs
xchg
dec
lds
push
jb
arpl
in
push
xchg
loopne
sti
movsl
jo
idivb
mov
repnz
fprem
in
clc
xchg
sbb
sub
mov
int3
sub
popf
xchg
leave
in
mov
mov
xchg
and
lea
ja
mov
mov
and
lds
adc
mov
popa
aaa
xor
push
fdivs
mov
inc
scas
nop
cmp
jp
lds
pop
loopne
fldenv
ds
cwtl
or
icebp
hlt
mov
movsl
repz
in
push
add
sahf
sbbb
xor
out
int3
pop
popa
lret
bndstx
fs
scas
scas
adc
inc
movsb
insb
mov
xchg
or
jecxz
out
imul
add
mov
jno
add
loope
cmpsl
jl
shlb
jg
or
add
or
movsl
or
or
imul
or
cmp
sub
ret
test
cwtl
addr16
test
dec
stos
aad
or
enter
movsb
push
mov
repz
aad
mov
xchg
lret
inc
jl
push
xchg
mov
idivb
dec
push
les
mov
jecxz
scas
push
dec
inc
or
dec
lods
sbb
xor
jmp
mov
sub
ud2
sub
adc
out
add
jae
pop
loop
lahf
mov
adcl
pop
ds
mov
adc
lods
adc
mov
jle
jg
xor
push
adc
je
xor
mov
ds
in
out
ficomps
or
mov
outsb
sarb
stos
and
jge
dec
adc
push
pop
int3
mov
cmp
pushf
sbb
mov
fwait
aas
scas
mov
dec
insl
pop
xchg
fidivrs
jg
leave
pop
and
mov
out
jmp
testl
cld
dec
call
lods
mov
daa
ljmp
dec
sti
int
hlt
xchg
popf
fsubrl
mov
inc
mov
cmp
pop
sub
mov
and
arpl
dec
mov
jmp
add
out
mov
lcall
xor
andb
test
sub
mov
in
push
mov
insl
ss
lods
test
mov
pop
sub
loopne
or
divb
lods
fsubs
aaa
ds
mov
lock
sbb
ja
call
jbe
push
shll
and
popl
lahf
push
adc
imul
inc
jbe
fistpll
sub
adc
lds
std
das
jne
sbb
sahf
addr16
rcl
je
dec
cmp
aad
decl
out
clc
lcall
sarl
xor
push
mov
adc
scas
int
mov
mov
xchg
xor
and
or
aaa
mov
sub
repz
aaa
xchg
and
cwtl
jno
adc
into
clc
movsb
pop
and
inc
clc
imul
lahf
xchg
pushf
sbb
loop
push
sbb
sbb
mov
lahf
pop
fimuls
push
test
cmp
xor
lret
shr
cmp
idivb
daa
mov
and
and
das
mov
push
jmp
flds
popf
xchg
fsubrl
pop
test
sbb
cmc
cmpb
movsl
ret
call
int
push
dec
ds
jge
fwait
xchg
jmp
outsl
lock
mov
push
xchg
std
lods
push
mov
mov
leave
lods
into
mov
stos
aam
jne
cli
lcall
movsb
in
mov
fadds
push
insb
sti
paddd
and
enter
mov
lahf
iret
xchg
addr16
and
out
cs
ss
sub
fisttpl
and
and
lcall
out
cwtl
cli
shlb
adc
aas
pop
mov
mov
dec
orb
fdiv
xor
outsb
insb
dec
mov
add
adc
jae
mov
mov
xchg
fwait
mov
js
imul
pop
sub
sub
sbb
inc
xchg
loopne
inc
notl
cld
rcrl
pusha
xor
sarl
or
popa
pushf
cmp
jg
jb
in
pusha
mov
sbb
xchg
or
stc
ret
jle
popa
or
adc
inc
cld
cwtl
enter
push
cmp
sti
test
fdivrs
mov
lds
pop
push
add
mov
jb
fstl
jg
push
mov
stc
gs
mov
or
jae
loopne
in
and
adc
cmpb
dec
jno
push
jbe
sub
mov
jle
inc
test
sbb
lock
ret
inc
push
inc
inc
jbe
mov
ds
adc
inc
aaa
call
inc
dec
mov
leave
cmp
daa
mov
pop
lahf
sahf
pop
repz
push
rorl
mov
xor
mov
and
aas
rcrb
fwait
test
sar
jae
mov
test
xor
xchg
loopne
inc
cli
fsubrl
out
push
mov
jo
cmp
jnp
cs
xchg
mov
movsl
and
in
fisttpll
repz
or
rolb
rolb
cmp
lahf
mov
mov
rol
scas
jb
push
mov
mov
cmpl
xchg
inc
mov
imul
movsl
jl
sub
mov
mov
cli
cmp
inc
js
cltd
inc
dec
add
mov
stc
ficoml
pop
mov
repz
mov
fwait
sub
sarl
movsl
das
mov
addl
xchg
sub
cmp
push
sbb
sbb
cltd
lock
jg
xor
outsb
jle
add
and
ret
jae
repnz
push
and
cmpsl
js
mov
loopne
ret
repz
pushf
sbb
in
popf
stos
fisubl
lds
or
loop
loope
lds
xchg
xchg
jnp
inc
xlat
out
orl
ret
mov
in
sbb
in
hlt
popa
stc
cs
loop
movsb
hlt
mov
sarl
lret
les
pusha
xor
in
mov
jne
mov
jmp
jne
xor
pop
lret
sub
out
and
cmpsl
mov
push
arpl
les
in
enter
mov
mulps
mov
jmp
imul
daa
popf
mov
cmp
push
cwtl
jo
adc
lret
pop
cmp
fistpl
ja
sub
xchg
cmp
jmp
cwtl
repnz
sbb
outsb
andl
js
ljmp
pop
add
lret
incb
pop
mov
popf
mov
stc
stos
jl
adc
scas
cmp
in
lret
adc
popf
inc
repnz
out
adcb
mov
push
iret
jnp
add
stc
dec
jl
jnp
out
sub
cltd
stos
mov
dec
incb
out
test
data16
xchg
and
push
lret
sub
mov
jmp
mov
inc
rcl
sbb
pop
inc
scas
jae
dec
mov
shl
out
xchg
mov
js
lcall
xor
jl
mov
xor
pop
fwait
leave
sbb
jb
mov
and
xor
add
loope
movsl
fldenv
negb
test
negb
enter
fcompl
nop
int3
xorps
add
sbbl
cmp
jge
je
mov
adc
mov
jo
outsl
sub
dec
jne
loop
shl
push
iret
mov
stc
outsb
adc
xor
push
push
inc
sub
out
sbb
mov
xor
push
or
xor
lret
es
jecxz
cs
or
pushf
mov
inc
outsb
cmpsl
es
and
mov
out
popa
or
insb
xlat
xor
xchg
mov
sahf
push
mov
pop
rol
fnstcw
xchg
sbb
pop
loope
push
xchg
jg
xchg
mov
outsl
pop
adc
dec
dec
enter
mov
int
xchg
adcl
cmc
mov
jl
negl
test
faddl
aas
mov
sbb
jmp
jnp
xor
loope
flds
mov
int3
je
fsub
scas
adc
and
push
or
lea
loopne
push
insl
inc
adc
sbb
aam
push
scas
sbb
jae
or
rolb
lods
push
mov
repz
movsb
ret
mov
mov
add
mov
mov
mov
sbb
inc
dec
pop
in
in
sbb
pop
cmp
cmpsb
fistpl
mov
stos
shl
aaa
push
dec
cmp
orb
lea
mov
xchg
out
and
lret
test
fs
push
adc
or
jecxz
testb
clc
cltd
enter
popa
jmp
sbb
and
and
or
pop
sbb
xor
xor
in
fimuls
xor
and
xchg
lock
sti
fs
inc
ja
push
cltd
push
xchg
loope
jmp
cmp
cli
hlt
add
pop
jns
int
adc
mov
dec
imul
imul
jg
pop
mov
repnz
gs
inc
push
jl
push
mov
pop
out
cmp
mov
mov
or
dec
cli
pop
rol
xchg
adc
fucomip
xchg
mov
dec
and
add
test
push
jo
bound
dec
add
stos
adc
inc
and
and
add
jo
dec
imul
repz
push
aad
shrl
push
insl
inc
das
push
adc
fadds
pop
jbe
mov
ret
cmp
stos
mov
pop
data16
mov
fwait
int
xor
mov
cmp
fucomp
outsl
dec
jnp
rcr
mov
and
and
ss
mov
fimull
sbb
adc
and
cmp
push
sub
outsl
lret
gs
adc
sbb
sbb
mov
fucomip
pop
shl
mov
aaa
fwait
clc
pop
and
lret
call
cmp
xchg
cmpsb
pop
fwait
push
mov
cmc
cmp
test
sbb
addr16
jbe
and
arpl
mov
sub
jbe
scas
xor
popf
out
push
test
jns
pusha
in
cli
movsl
sbb
xchg
jmp
or
xor
jge
xchg
data16
pop
or
fsubrl
ret
mov
mov
pop
scas
pop
mov
and
inc
push
cltd
inc
push
sub
dec
or
inc
addr16
mov
jg
mov
mov
imul
inc
mov
jno
adc
into
stos
pop
mov
jmp
jge
adc
shrl
adc
adc
lret
aam
lods
jmp
sarl
dec
jmp
aad
jle
pop
jp
xor
mov
jg
cmp
jmp
mov
dec
push
mov
hlt
mov
push
in
test
xor
mov
gs
push
outsb
sbb
cli
loopne
jp
mov
subb
cwtl
sub
fwait
jo
aam
push
insb
cmp
pop
mov
sbb
into
jns
or
jae
or
icebp
push
repnz
fmull
xor
sahf
incb
jae
fmuls
inc
outsl
arpl
push
repz
or
sub
cmc
cmp
pop
fwait
add
lret
and
cld
and
or
mov
int3
ficomps
and
lock
adc
sub
xchg
push
or
mov
repz
fwait
andb
mov
loope
xchg
add
mov
and
leave
in
add
test
shr
adc
outsb
mov
cmp
jnp
outsb
jbe
pop
and
mov
push
das
subps
adc
jge
popf
sbb
iret
pusha
mov
pop
testl
mov
test
dec
cmp
cmp
push
fdivr
fdivl
mov
mov
sub
sbb
inc
jne
out
xor
aas
pcmpgtw
gs
je
test
mov
xchg
cmp
inc
fcomi
pop
jns
mov
mov
cmp
mov
lcall
insb
push
lcall
dec
js
stos
cmp
sub
out
jp
adc
mov
enter
push
cs
test
inc
xchg
out
mov
sub
insl
lods
movsb
roll
xchg
pop
mov
xchg
add
ja
push
jmp
sbb
test
push
fisubrs
add
nop
mov
clc
sub
iret
js
mov
push
rcll
repz
shl
mov
sbb
push
cltd
andl
out
icebp
rcrl
rcrl
push
inc
insl
push
jmp
sbb
jno
or
dec
imul
es
fnsave
rcll
push
mov
push
out
lahf
out
add
cmc
push
push
mov
bound
pop
jecxz
jns
xchg
arpl
out
test
mov
mov
jns
loopne
movsb
int3
push
lahf
outsl
pop
jbe
jmp
cmp
out
sbb
out
mov
aas
iret
jns
jno
pop
pushf
out
mov
stos
sarl
jmp
pop
push
adc
cmp
mov
and
fsts
mov
orl
pop
jns
mov
mov
dec
in
pop
jbe
jne
gs
fwait
add
je
add
repz
cmp
fcoml
mov
out
je
mov
repz
out
movsl
adc
mov
sbb
sbb
sbb
std
arpl
cli
lock
dec
adc
daa
pop
int3
xor
xchg
dec
sbb
lock
lahf
scas
push
mov
sti
fcompl
push
fst
pushf
xchg
jo
data16
cs
sub
push
cmp
mov
adc
sub
inc
jp
das
jno
sub
xchg
pop
lea
xlat
popa
movsb
push
and
pop
out
adc
sbb
mov
sarl
push
gs
or
scas
jo
ja
jnp
std
pop
dec
mov
cmpsl
push
xchg
or
mov
popl
pop
je
sbb
mov
pop
test
daa
nop
pop
cmp
lahf
cmovns
pop
sub
out
ret
scas
arpl
daa
pop
mov
repnz
adcb
imul
mov
das
dec
in
sbb
and
inc
pop
rcl
imul
sub
xor
jbe
fistpll
inc
out
or
decl
and
daa
js
push
mov
cmpsl
xchg
pop
cmpsl
sub
repnz
add
push
movsb
push
sbb
jmp
stos
scas
lods
fcomip
and
ljmp
pop
mov
cmp
jb
cli
pop
xor
stos
or
mov
sbb
push
daa
shlb
fs
jge
rcr
popa
out
scas
lret
cwtl
pop
jnp
cld
add
decb
dec
pop
cmpsb
jle
stc
pop
dec
notl
scas
mov
mov
pop
jns
sbb
jge
cs
rdtsc
and
mov
xchg
xchg
cli
fsubl
pop
in
clc
call
or
mov
inc
movsb
je
sahf
sahf
lcall
jae
subl
and
cmp
adc
cmp
gs
movsb
mov
xchg
push
ds
and
add
and
movsl
jae
fnsave
in
and
push
cltd
jmp
jns
mull
mov
push
pop
out
inc
test
mov
jmp
mov
cmpsb
rcll
imul
arpl
adc
mov
sbb
push
pop
pop
into
bound
sub
jns
mov
xor
xchg
or
sub
fnstcw
mov
push
dec
fs
push
es
xchg
cmp
lcall
adc
out
adc
sar
mov
aas
arpl
cmpsl
mov
repz
mov
xlat
jmp
test
push
testl
pop
minps
or
xor
push
cmpl
inc
inc
pop
cli
cmp
cmp
or
xchg
aad
mov
mov
in
loop
sbb
pop
cltd
mov
adc
stc
and
xchg
pop
lret
shrl
dec
daa
xchg
push
call
push
mov
add
pop
rorb
cltd
push
jns
out
out
mov
jnp
cmp
jae
cmp
aam
fistpll
cld
inc
negb
mulb
jecxz
loopne
cmc
fsubrp
jge
inc
out
or
aas
jp
scas
lret
pmaxub
push
in
pop
out
or
pop
psubb
jle
sbb
fnsave
int
sub
jae
int
xchg
test
repnz
outsb
cmp
mov
ret
clc
push
insl
push
ror
push
test
inc
xchg
dec
aad
xchg
lea
mov
add
and
fdivr
and
and
dec
in
aas
test
cld
jmp
ljmp
sbb
xchg
in
sub
jmp
shll
adc
addb
leave
and
or
jae
push
les
or
les
adc
movsl
and
pop
enter
xor
and
lcall
and
gs
jle
push
fs
mov
cs
mov
out
inc
adc
jge
fisubrs
movlps
push
repz
es
in
jecxz
dec
cmpsb
imul
pusha
test
or
add
inc
mov
add
test
mov
sbbb
aad
add
inc
cmp
je
dec
popf
adc
add
hlt
ja
xor
xchg
mov
je
mov
dec
pop
sbb
jae
imul
mov
xor
xchg
cmpl
mov
orb
inc
jnp
and
xchg
cmpsl
cmpsb
jne
cmp
xchg
inc
js
pop
out
push
repz
pop
push
mov
push
push
sbb
cmp
push
das
out
bound
into
mov
fcmove
mov
ds
fisubs
push
inc
rcr
lock
adc
or
and
xchg
call
pop
or
push
push
mov
and
mov
or
cs
addb
mov
push
xor
roll
sub
sub
sbb
sbb
or
sarb
aam
stos
nop
inc
jae,pn
mov
xor
mov
or
lock
cwtl
and
repz
add
adc
repz
xor
dec
imul
adc
adc
xor
mov
test
cmpsb
test
sbb
xchg
or
repnz
popa
push
jg
sbb
pop
std
in
and
add
or
mov
xor
lods
xrstors
fs
loopne
pop
aas
jne
xchg
popf
jp
xchg
les
mov
ja
dec
push
out
mov
or
test
mov
mov
leave
jecxz
jge
sbb
je
shrb
stos
fisubl
shrb
test
shlb
add
push
stos
mov
rorb
inc
movsb
lahf
jne
xchg
adc
movb
inc
add
int
pop
divb
or
int
mov
sub
sub
xor
xchg
xor
jge
pop
add
xor
cltd
push
lods
mov
adc
jae
mov
inc
sub
add
xchg
es
or
push
cli
sub
inc
push
loopne
mov
pusha
adc
mov
addr16
shrl
imul
mov
jnp
fwait
adc
jae
movsl
mov
xor
or
test
rcl
hlt
sbb
or
cmpsl
imul
mov
pop
push
sahf
mov
loopne
daa
clc
int
andb
sub
inc
mov
mov
lahf
jg
cmpsb
ds
cmp
pop
adc
fwait
dec
cmp
sbb
jp
les
or
test
insl
jbe
imul
jno
sarl
sbb
ljmp
mov
pop
sbb
pop
div
jne
arpl
push
stc
stos
adc
loop
sbb
loope
aaa
cwtl
add
aad
enter
imul
in
jl
movl
test
repz
push
inc
subb
fwait
stos
jecxz
sub
aas
das
decb
and
or
lahf
or
fbld
jnp
cmpsl
jg
fcomps
push
insl
cmp
mov
nop
xor
into
popa
icebp
decb
mov
aaa
jmp
loop
cli
inc
cmpsb
push
jae
dec
in
das
adc
clc
sub
notb
ret
test
hlt
mov
arpl
inc
out
loopne
icebp
jb
or
pusha
aas
clc
out
xchg
in
xor
int3
test
or
cmp
dec
clc
sub
push
movsb
jmp
fildll
je
fmuls
mov
insl
jle
lcall
inc
out
in
mov
xor
sbb
xor
mov
daa
sub
cmc
fmul
outsb
cmp
shrl
pop
fdivs
push
jge
jecxz
cmpsb
push
jbe
pop
das
aas
cwtl
in
lret
ja
and
lds
mov
pushf
daa
xor
xchg
push
dec
je
cmp
data16
mov
add
pop
je
mov
pusha
lods
lock
mov
mov
add
in
mov
fldt
popf
test
push
insl
lret
jbe
lret
loop
jno
mov
xor
push
or
stos
faddl
lds
pop
testb
bound
jae
add
mov
pop
fcomip
andb
mov
roll
sahf
fildl
ss
insl
cmp
das
repnz
cmpsl
adc
shll
add
push
push
lea
dec
mov
cmc
mov
cs
xor
push
jecxz
push
jl
sbb
jg
stos
out
mov
xorb
sub
sub
inc
les
out
aas
sbb
xorl
lahf
iret
xchg
mov
sub
testb
scas
fbld
lock
clc
mov
add
outsb
pop
push
test
icebp
jp
add
push
lods
insb
test
jb
mov
push
xor
stc
fs
mov
ss
xor
mov
and
int3
mov
push
jo
test
xor
jo
xchg
aam
out
cs
rolb
scas
mov
adc
xor
xor
lahf
mov
movsb
mov
out
arpl
sbb
sbbl
es
dec
xchg
push
loope
sub
hlt
inc
adc
jo
ficomps
lds
adcl
mov
stos
sbb
sub
and
xchg
and
cmp
ret
sub
lock
mov
jno
adc
fnstenv
cmp
mov
mov
and
idivb
jge
mov
pop
xor
test
aaa
sub
dec
push
aaa
in
xchg
cmp
pop
ja
xor
insb
mov
repz
mov
push
inc
jns
in
inc
ret
cmc
dec
push
test
fsqrt
mov
fdivrp
andl
cmpsb
add
mov
jno
xchg
sbb
inc
test
adcl
out
loop
stos
add
jno
jnp
or
sbb
sti
xchg
add
lcall
sbb
rcl
or
push
lea
adc
in
adcl
and
int
push
fdivrs
fwait
cltd
mov
aad
cli
sub
dec
mov
cli
mov
sbb
ss
imul
and
int3
cmp
jne
in
jo
push
pop
cmp
jo
cmp
outsb
pop
mov
nop
pushf
cmp
push
or
pusha
inc
xchg
ds
mov
jmp
mov
out
adc
sahf
aam
jmp
mov
jl
cmp
pop
adc
adc
jae
push
mov
xchg
outsl
xchg
push
shlb
cmp
iret
push
gs
and
cmpb
mov
cmpsb
cld
xchg
mov
clc
push
lds
cld
dec
mov
cmpsl
rolb
shll
stc
pop
hlt
xor
xchg
outsb
pop
and
sbb
jb
shrl
dec
sbb
sub
ds
sub
jb
lock
je
mov
jne
push
lret
clc
sbb
push
pop
adc
movl
shufps
adc
gs
cmp
fs
jle
jo
mov
out
lods
and
cmp
add
mov
outsl
aaa
fldenv
subb
subb
std
mov
in
or
mov
out
xchg
xlat
ljmp
sar
jo
les
movsb
int
pcmpgtw
cmp
psubsb
aam
jnp
xchg
hlt
jns
js
test
xchg
jne
add
cmc
add
jnp
sbb
inc
sbb
jge
inc
ss
cmpsb
push
pop
xchg
cmp
cmp
dec
or
lods
inc
aam
pop
fwait
sahf
jno
fistpll
pop
and
pop
fisttpll
push
cmc
jp
add
das
jns
ret
jp
in
lahf
jle
dec
mov
jg
iret
clc
cmp
jp
lods
cmp
mov
mul
scas
fs
stc
repnz
sub
sub
stos
and
sub
movsl
rcrb
mov
iret
pop
and
adc
out
movb
ret
das
xor
jmp
inc
and
hlt
mov
in
mov
push
sbb
out
cld
jl
ds
sti
xor
into
in
jecxz
popa
jno
cltd
insb
repz
push
jge
iret
nop
and
imul
mov
pop
mov
pop
movsl
cmpsb
mov
imul
mov
mov
add
test
shll
rcrl
pop
inc
pop
xor
ret
sbb
in
popf
sbb
lods
mov
orl
stc
ficomps
into
popa
xchg
mov
add
out
das
test
sahf
push
into
jmp
sub
xor
pop
push
push
sub
add
cwtl
mov
enter
fwait
into
sub
mov
push
push
repnz
stc
fistpl
insl
jle
cmp
push
jl
push
jo
lock
fldl
mov
hlt
arpl
aad
xchg
loopne
rolb
add
fisttps
jg
fidivrl
ss
pop
inc
mov
jbe
xchg
ret
adc
fnstenv
pop
sub
sahf
jne
test
mov
rcl
lret
cmp
sub
loope
dec
int
and
ja
out
popa
inc
mov
imul
inc
test
movsl
loop
and
aaa
inc
jb
inc
aaa
dec
jmp
mov
jo
mov
or
mov
out
cmpsb
shl
adc
mov
mov
and
mov
dec
inc
fstpt
cmpsb
xchg
daa
daa
or
subw
lds
xchg
aam
and
xor
sbb
add
jp
xorl
aaa
jecxz
mov
ret
pusha
shll
movsb
aas
cmp
cmp
cmp
sbb
sub
dec
test
pop
idiv
lds
pop
jb
lahf
je
fnsave
arpl
cltd
push
inc
or
adc
loopne
idivb
stos
inc
out
in
and
clc
dec
jecxz
sub
sbb
loope
cmc
jp
out
rcrb
inc
sub
jnp
ss
test
cwtl
inc
jle
mov
mov
xchg
lods
cltd
sub
ret
out
mov
cmp
xchg
out
mov
sbb
cmpsl
xchg
and
xchg
sub
jo
enter
cs
adc
enter
cmp
adc
out
test
aad
andl
testl
jae
mov
push
add
inc
push
pop
xchg
bnd
test
sub
lahf
rorb
xchg
adc
aas
mov
sub
ja
aam
pop
aas
imul
std
ljmp
push
jns
xchg
call
in
aaa
dec
outsb
add
pop
xlat
push
dec
mov
pusha
dec
add
scas
jo
xorl
test
or
ret
push
sub
mov
test
sub
out
or
ret
xor
or
gs
xchg
fnstsw
cltd
shll
cmc
mov
mov
dec
sbb
fildl
xor
outsl
cmp
cmp
and
insl
push
lock
ljmp
xchg
pop
and
xchg
fsubs
imul
or
cmp
adc
mov
jle
arpl
push
cli
xchg
jae
cmp
jl
mov
push
sub
xor
dec
rolb
lds
add
xchg
ss
fisttpll
fstl
lods
loope
jmp
stos
or
das
test
push
pop
lcall
jl
clc
push
test
mov
movsb
fdivs
mov
sbb
sti
push
inc
inc
je
xchg
cld
xlat
push
mov
out
xor
sub
adc
in
cmp
pop
shll
stc
cltd
bound
in
push
hlt
inc
cmp
cld
mov
cmpsl
fdivrs
lock
jp
dec
andb
arpl
mov
pop
mov
jmp
sbb
mov
fs
inc
lret
cs
push
xorl
clc
cld
lret
fnstsw
pop
inc
xchg
pop
sbb
push
or
mov
bound
dec
and
or
pop
push
imul
adc
bnd
scas
bound
adc
cmp
mov
and
sbb
ret
push
mov
add
popa
and
and
sub
lcall
rcll
mov
cmp
outsb
pop
and
cmpb
push
movsb
icebp
sbb
pop
ret
cmp
jbe
scas
jbe
inc
inc
mov
add
cmp
sbb
push
jmp
mov
pop
pushf
mov
fcompl
mov
popa
jp
dec
add
cwtl
jne
mov
jmp
stc
inc
stc
push
pop
dec
or
xchg
xchg
lret
cmpsl
fcmovu
cmpsb
std
xor
rolb
jmp
mov
cmpb
test
sbb
cmp
and
xor
jno
int3
fxch
jmp
imul
test
subl
ficoml
lahf
test
call
cmp
sarl
test
js
inc
loopne
fsub
movsb
aad
call
test
adc
lret
in
pushf
jns
out
fwait
daa
rcr
fwait
or
sub
jns
shrl
icebp
daa
fdivr
out
lcall
in
aad
xchg
popa
dec
jl
popa
dec
lea
mov
adc
aas
xor
test
push
clc
mov
dec
push
out
scas
fwait
jge
scas
fwait
popa
xchg
or
in
xchg
fists
jp
sub
scas
mov
add
ds
jae
push
stc
mov
mov
popa
loope
into
xor
sbb
in
inc
stos
add
lcall
pop
pop
dec
les
cld
xor
or
rolb
dec
aaa
enter
mov
mov
mov
sub
fldt
adc
pop
dec
loopne
aam
sub
push
push
mov
pop
sub
and
sub
mull
push
fstps
pushf
xor
mov
xor
mov
cmp
stos
out
ficoms
sti
lock
fnstcw
int
daa
xchg
cmp
pushf
lcall
aam
lret
aam
sub
dec
mov
loop
iret
stos
test
mov
dec
xor
fwait
cmp
mov
sub
arpl
das
pop
in
xlat
inc
xlat
dec
mov
xor
mov
ds
out
add
xor
pushf
dec
icebp
fisubrs
comiss
jle
cld
clc
xchg
or
pop
adc
fiadds
stc
pusha
stos
jnp
test
sbb
sub
mov
xor
jp
int
pusha
inc
cmp
and
lcall
sbbl
or
loope
inc
repz
and
mov
aas
jmp
mov
adc
dec
mov
ret
or
es
outsb
adc
lcall
ret
lahf
mov
stos
sbb
mov
mov
daa
ficomps
fisubrl
in
sbb
stos
mov
in
dec
fsubrl
xor
mov
addr16
ljmp
mov
std
xor
into
push
and
or
push
scas
in
decl
xchg
stos
mov
dec
repz
or
mov
mov
sbb
add
push
adc
loope
enter
adc
aam
mov
mov
sbb
outsb
lock
pop
psubusw
stc
or
das
cwtl
mov
xor
cld
xchg
fs
lds
push
jp
gs
xor
aaa
cltd
lds
push
ja
stos
fs
mov
data16
testl
clc
jns
mov
and
or
repz
imul
mov
test
xor
out
imul
xlat
cli
sub
sub
dec
xor
enter
mov
orl
push
imul
jo
push
sub
cmc
sbb
xchg
cltd
sbb
int
in
mov
sub
rolb
jecxz
aas
push
lods
ss
in
pop
mov
cmp
cmp
lret
lods
xlat
pushf
inc
pushf
stos
xchg
hlt
jmp
imul
std
or
imul
mov
adc
hlt
add
cltd
addr16
popa
xorb
shrb
loopne
sbb
cmp
flds
or
cmpsl
jmp
mov
xor
add
jnp
xchg
neg
lock
mov
add
ja
lret
cmp
lds
xchg
inc
fs
test
pusha
stos
insl
je
sahf
dec
popf
in
mov
inc
scas
rcll
mov
sbb
inc
add
sbb
mov
push
test
sti
adc
xchg
hlt
mov
mov
addl
and
or
mov
adc
pop
dec
cld
mov
outsl
adc
rcrb
pop
sub
adc
xor
ret
xor
mov
sbb
xchg
fcompl
push
lds
add
ret
xchg
out
push
jle
xchg
pop
push
repz
sahf
out
and
or
fimull
cmp
je
pushl
mov
jns
mov
call
adc
dec
xor
inc
int
js
mov
ja
inc
fcoml
pushf
int
out
push
jp
hlt
insb
and
aas
pop
adc
gs
jg
adc
fwait
cld
and
jle
push
xor
mov
div
test
jne
in
jmp
inc
push
mov
cli
sahf
push
cli
mov
mov
mov
pop
fdivrs
pop
stc
lahf
and
lods
pop
mov
mov
sub
das
testl
adc
mov
adc
pop
pushf
out
and
repnz
mov
mov
test
mov
jg
outsl
and
shlb
pop
hlt
jl
cmpsb
jg
cld
loope
in
mov
sbb
push
loop
ds
or
das
call
lcall
repnz
mov
jle
inc
cmpsl
and
std
rolb
lahf
in
jge
ret
fwait
or
in
ficoms
std
les
popa
paddb
movsb
sar
and
pop
psubq
incb
icebp
aas
in
or
outsb
lods
setle
push
dec
cmp
hlt
sbb
push
xchg
hlt
mov
cld
sub
imul
or
pop
jg
adc
fcmove
dec
loop
push
jbe
stc
shrl
inc
mov
jno
shrb
in
test
xchg
mov
insl
call
in
divb
inc
dec
adc
gs
mov
jo
mov
fildll
fisttpl
fcompl
mov
sub
fidivl
mov
pop
popa
out
mov
aad
push
icebp
adc
js
stos
sbbl
pop
xor
mov
insb
pop
xor
lods
sarb
out
sub
pop
push
pop
xor
inc
test
xor
imul
fisubl
sbb
inc
cwtl
ja
push
ret
mov
lret
push
ss
scas
fwait
add
adc
push
jbe
mov
fcmovu
mov
movsl
lcall
clc
cmpsl
cmpsb
jge
xchg
mov
mov
nop
int3
notb
mov
pop
xor
and
dec
popa
pop
insb
dec
adc
std
xchg
fdivs
and
movsl
pop
cmp
jecxz
dec
mov
jnp
insl
mov
movsl
aas
xor
negl
push
pop
xor
mov
mov
repz
rclb
test
mulb
cli
mov
mov
push
in
int
mov
fisubrs
mov
dec
stc
ds
inc
dec
add
mov
cltd
mov
lock
xchg
movsl
jns
xchg
mov
dec
pushf
sbb
jne
popa
shrl
and
cmpsl
sub
leave
insl
jne
inc
aaa
add
dec
mov
cltd
push
mov
into
testb
dec
rcl
das
jo
or
adc
mov
fdivl
testb
fsubl
mov
es
ja
icebp
hlt
rcll
sbb
popa
bnd
in
lds
les
and
sbb
loopne
mov
add
outsl
dec
jns
cwtl
mov
out
pop
int
push
cmpsl
in
aaa
lret
jo
sbb
xlat
and
inc
pushf
testl
in
repnz
stc
lds
mov
cli
imul
adc
cld
xchg
sbb
int3
jle
call
lock
mov
push
leave
dec
mov
xchg
pop
lahf
enter
fadds
mov
mov
icebp
popf
sbb
adc
fadds
stc
and
fiadds
mov
movsb
mov
stc
mov
jl
mov
std
jo
stos
or
or
mov
lods
sub
rorb
add
hlt
jae
scas
aas
sahf
fs
mov
add
dec
push
test
fwait
mov
imul
out
scas
mov
aaa
xchg
xchg
popf
xchg
jne
daa
mov
sti
daa
pop
out
push
mov
or
jmp
js
mov
and
scas
push
jae
xchg
xorps
xchg
dec
out
push
pop
adc
sbb
or
insb
mov
int3
jne
cmpsl
and
add
fincstp
push
push
cmp
out
lret
xor
emms
mov
mov
sub
push
jecxz
scas
orb
add
lock
in
add
xor
cmp
pop
shlb
fisubl
xor
outsb
outsb
pop
scas
push
and
test
mov
sub
dec
fiaddl
jnp
cmp
shl
push
mov
xchg
jl
data16
aam
popa
lret
mov
arpl
dec
mov
sti
loop
cmpsb
or
dec
leave
mov
mov
es
xor
test
xchg
out
enter
mov
xor
dec
data16
and
cld
ljmp
sbb
xchg
xchg
xor
lods
mov
loop
test
add
orl
xchg
cld
jbe
fadds
mov
pop
gs
or
xor
sub
xchg
push
in
adc
fcom
jo
jo
and
inc
dec
ret
jmp
shrl
mov
movsl
and
mov
pop
ljmp
data16
jle
pop
sti
leave
sbb
sub
mov
das
sub
sbb
fcoml
outsb
or
dec
out
adc
mov
mov
and
push
idiv
xchg
out
fs
push
or
push
adc
pop
les
dec
xor
inc
jg
lea
sbb
fmull
cwtl
mulb
dec
or
mov
shrl
push
jae
jno
jmp
push
push
xor
sbb
loop
pop
xor
ds
jmp
lret
dec
int3
dec
jbe
adc
mov
and
pop
add
test
or
testb
cs
call
push
lods
sti
lcall
mov
fidivrl
push
cltd
arpl
pop
stos
mov
test
ss
cs
jnp
and
add
inc
incb
std
fs
ret
push
adc
cwtl
lahf
int
cwtl
negl
je
jecxz
pop
mov
cmp
lcall
pop
int
pop
mov
icebp
mov
insl
mov
jecxz
movsl
cmpsb
push
ja
test
inc
or
aad
mov
lods
fisttps
mov
ds
fcompl
pop
add
flds
inc
addr16
xchg
fs
adc
mov
leave
pop
mov
inc
mov
xor
mov
pop
pop
or
or
dec
mov
lret
and
jno
mov
dec
jb
fbstp
mov
ficomps
dec
add
aaa
in
mull
popf
jb
fcmovne
sarb
xor
mov
jecxz
xlat
xchg
imul
cmpl
xchg
jl
das
push
or
xor
hlt
call
and
push
cld
xor
sbb
scas
test
sbb
repnz
lea
xchg
and
dec
addr16
jle
pop
repz
mov
cmp
mov
leave
mov
xor
mov
jnp
repz
and
loope
test
push
mov
sub
je
adc
out
daa
insl
sbb
dec
in
lods
lds
cmp
push
dec
ja
cs
mov
sbb
inc
mov
icebp
mov
fmuls
lcall
jbe
pushf
je
mov
xor
xor
rorl
lods
shlb
jnp
lock
adc
pusha
cld
imul
sub
push
inc
sub
inc
sbb
xchg
jno
pop
jb
into
sub
xor
out
into
push
mov
adc
fwait
das
push
shl
or
sti
add
cmp
xchg
lock
mov
enter
inc
xchg
sbb
mov
and
sub
nop
jae
push
into
in
cmc
pop
jo
mov
roll
add
sbb
fdivr
jecxz
insb
jne
inc
or
push
pop
lods
mov
jnp
negl
in
push
enter
and
cmp
cwtl
imul
pop
xchg
rorb
loop
movsl
sbb
jo
aam
add
dec
es
repnz
repz
lahf
dec
das
push
data16
std
shlb
fiadds
pop
and
xor
aas
add
push
icebp
mov
adc
mov
xchg
fscale
dec
jo
mov
push
aad
pop
jb
ss
dec
push
shll
int
jb
dec
xchg
dec
stos
mov
shl
and
add
cmpl
rcrl
cmp
mov
and
inc
jbe
inc
test
in
cmp
daa
pusha
xor
inc
jb
aaa
jnp
and
out
aas
outsb
jle
in
iret
xchg
sti
jae
ljmp
aas
mov
scas
fistpl
sti
jbe
mov
cwtl
mov
sarl
cmp
sub
in
lock
adc
mov
push
dec
popa
mov
cmp
in
xorb
inc
js
stc
inc
pop
and
pop
mov
fsubs
pop
pop
pop
mov
outsl
jbe
int3
sbb
ljmp
mov
sub
sub
cmpsb
mull
filds
dec
loop
mov
sarb
mov
mov
xchg
cli
nop
mov
adc
jecxz
dec
iret
cmpl
test
mov
mov
in
fwait
aam
mov
ror
hlt
lahf
or
mov
push
sbb
punpckhbw
mov
push
ret
aam
and
adc
sub
mov
sbb
imul
add
xchg
xor
test
mul
ss
push
adc
xchg
outsb
mov
sub
cltd
mov
sub
dec
xor
xchg
mov
aam
jge
pop
in
xchg
add
xor
out
sti
jle
stos
dec
in
shll
jecxz
jbe
mov
mov
repnz
jg
test
pop
in
or
jo
insl
sti
mov
imul
lods
xor
loop
cli
add
xor
pop
mov
jmp
and
aad
aam
or
and
cmpsb
pop
mov
cmc
jle
xlat
in
or
in
mov
popa
pop
mov
adc
pop
xchg
push
pop
sub
mov
in
ja
arpl
popf
ret
mov
pop
adc
or
mov
push
dec
mov
aam
and
fldl
jecxz
mov
mov
pop
orb
daa
xlat
jle
pusha
add
lahf
lahf
mov
xchg
pop
sbb
mov
xor
mov
xchg
test
and
lock
push
mov
push
xchg
sub
call
dec
test
mov
aaa
mov
mov
ja
cli
sbb
fdivrl
fwait
negl
ficoms
push
lods
jno
and
aam
pop
insb
fwait
jl
push
aad
mov
ret
dec
imul
mov
lock
cmpsb
cmp
vorps
and
sbb
dec
mov
jl
xchg
lds
pushf
pushf
mov
cltd
nop
jp
and
push
aad
in
xchg
mov
divb
pop
iret
jmp
insb
notl
mov
adc
push
testb
jecxz
imul
setge
cmp
or
sbb
mov
adc
mov
and
mov
add
hlt
add
jecxz
ss
outsb
inc
stos
faddl
dec
jo
mov
push
cmp
adc
ret
add
pop
adc
mov
fcmovnu
aaa
ja
cmp
jmp
or
cmpb
ja
scas
out
outsl
push
inc
cs
mov
repz
sahf
inc
and
fildll
jb
mov
push
jp
fcmovnb
cmpsb
fincstp
mov
adc
pushf
push
stos
inc
mov
mov
out
add
mov
mov
fs
xor
mov
xchg
jbe
dec
add
insb
dec
pop
out
dec
inc
out
sarb
and
clc
insl
xor
inc
mov
in
mov
das
lock
stc
fstpt
ret
adc
cwtl
test
mov
mov
add
mov
in
mov
or
adc
xlat
mov
sbb
test
subl
add
icebp
lock
pop
fistps
repnz
ja
add
je
fcom
arpl
xor
ficoml
add
cmp
rorb
push
pop
mov
pop
test
dec
pop
fdivrs
mov
xor
aad
inc
rcr
cmp
dec
testb
mov
mov
dec
mov
mov
popa
jle
ret
or
orb
pop
cmp
and
mov
lea
mov
xor
ljmp
add
push
int3
adc
sahf
dec
call
jne
mov
popa
insl
push
sub
dec
adc
xlat
or
inc
jo
sub
push
mov
sub
int
out
push
mov
maskmovq
imull
cmp
or
jbe
or
in
mulb
loop
daa
mov
sar
sbb
jno
loopne
adc
push
int
cmp
outsl
lods
dec
lahf
xchg
int
push
in
mov
iret
dec
mov
and
clc
jbe
cmp
sbb
lret
rcr
aas
sub
sub
enter
sub
pop
js
mov
xchg
pop
stc
jno
iret
jbe
inc
jl
int3
xchg
inc
dec
insb
imul
repz
cs
gs
lea
sbb
mov
loop
cltd
stos
pop
pop
or
lds
bnd
or
arpl
mov
jne
dec
mov
fsts
adc
mov
fwait
in
pop
push
xlat
pop
pop
ss
inc
cmp
js
xchg
pop
sarl
mov
mov
daa
repz
loopne
out
and
jne
push
leave
add
dec
mov
inc
stos
sbb
jno
stos
push
hlt
cmpsl
imul
dec
jge
repnz
mov
mov
xlat
mov
mov
ds
jl
pop
mov
push
push
mov
aaa
inc
push
or
aad
clc
push
xchg
pop
aas
cld
ret
inc
xchg
outsl
pushf
mov
or
cli
stos
pop
push
cwtl
push
jmp
dec
xchg
cmpsb
lock
xchg
push
test
jmp
or
jns
sub
xor
adc
mov
mov
insl
imul
xchg
and
outsl
into
aam
cld
rclb
fwait
and
cltd
jecxz
ficompl
scas
test
inc
in
inc
ficoms
in
adc
sbb
in
xchg
invd
xchg
and
xchg
mov
fadds
mov
jo
and
imul
ljmp
aas
pop
in
xor
or
movsb
mov
sbb
xchg
fildll
or
pop
lods
cmc
es
addl
pop
mov
sub
jns
pop
sbb
mov
or
aas
jl
cmp
hlt
lods
insb
fwait
es
push
sbb
push
and
dec
mov
es
sbbb
adc
mov
rcl
cmp
pop
xchg
mov
andl
movsb
jno
sbb
out
adc
icebp
pop
or
xor
sahf
daa
je
pop
adc
mov
out
cs
jle
inc
insl
fs
sbb
xchg
lods
lea
cmp
mov
inc
jno
mov
test
pop
lret
lock
iret
and
or
movsl
sbb
cmc
pop
clc
cld
lcall
test
jnp
adc
lret
test
mov
mov
xor
clc
dec
jge
lock
ljmp
in
xchg
adc
lret
jg
dec
adc
lret
inc
cmp
xchg
adc
es
sbb
int
scas
dec
arpl
in
sbb
dec
cmovnp
cmc
xor
or
mov
push
mov
and
mov
xchg
gs
push
push
mov
dec
inc
test
outsb
outsl
xor
orb
repnz
sbb
pop
or
shll
divb
ficoml
add
fcoml
loopne
jbe
fwait
in
dec
lock
xchg
lret
dec
inc
and
mov
inc
push
js
mov
mov
lock
icebp
push
cli
leave
or
push
mov
inc
cmpxchg
fists
mov
xchg
cmp
nop
xor
pop
pop
arpl
mov
test
outsl
sub
mov
xchg
pinsrw
mov
outsb
push
jp
shll
icebp
push
pusha
cmp
ja
pop
mov
jge
inc
cmp
cmp
mov
dec
out
cs
pushf
xlat
inc
lcall
lret
cmpb
lret
aam
fwait
lret
lret
pop
xchg
out
jp
es
jmp
out
xchg
pop
ja
sbb
adc
jae,pt
movsb
out
adc
jnp
mov
mov
sbb
xchg
iret
sub
cmpsb
mov
ret
push
fistl
push
or
xchg
xchg
cwtl
ja
jns
test
pop
loop
popa
out
pop
or
pop
icebp
scas
shrl
in
lods
test
addr16
dec
mov
adcb
and
pop
jecxz,pn
sub
sub
ds
pop
ss
outsb
into
ja
lock
movl
outsl
cmp
push
rclb
push
lock
jne
inc
mov
sub
push
sub
or
sub
hlt
push
xor
dec
cs
imul
mov
dec
leave
dec
je
sub
adc
pop
scas
xchg
les
mov
pop
inc
dec
aas
push
inc
jnp
sub
je
lea
popf
dec
sti
inc
movsl
jge
pop
adc
test
push
mov
movsl
in
pop
mov
push
subl
das
outsl
insl
sbb
imul
push
push
fcoms
jne
sub
dec
xor
mov
rol
dec
push
mov
push
insl
stos
popa
movsl
mov
xor
incl
cmp
xchg
push
out
jb
inc
mov
add
or
aaa
mov
or
push
pop
pushf
add
sub
jmp
in
adc
jge
shlb
dec
lds
push
pop
dec
cmpsb
shll
ror
sbb
bound
popa
xor
repz
lods
dec
mov
stos
jbe
outsl
imul
insl
orb
inc
stos
cwtl
xchg
movsb
xchg
test
imul
cltd
addb
faddp
idivl
push
ja
in
jns
pop
clc
jns
sarl
mov
std
or
lods
pusha
jecxz
fadd
fwait
shlb
push
xchg
ret
sub
jno
cmc
and
out
xchg
adc
dec
jne
sti
aam
jno
aas
clc
pop
loop
movsl
sbb
lods
lea
imul
and
sub
jle
out
fucomi
fmul
je
dec
pop
xchg
mov
sbb
jae
push
adc
push
xchg
lahf
pusha
rcll
jp
icebp
loopne
xchg
test
inc
insb
nop
pop
dec
fsts
lret
add
stc
icebp
inc
outsb
lret
dec
jbe
pusha
xchg
sub
mov
enter
aaa
fxch
cmp
inc
test
movsb
jle
and
or
mov
cmp
mov
pop
jmp
or
mov
cmp
xchg
rol
inc
dec
jns
fstps
movsl
and
mov
sbb
sub
xchg
pop
and
fisubs
xchg
addr16
cmc
sub
jmp
mov
mov
js
fs
push
cmp
push
lds
sahf
imul
mov
clc
repnz
dec
call
movsl
out
or
xchg
push
jge
mov
pushf
xor
cmp
pop
ljmp
jb
inc
addr16
adc
nop
cltd
fisubl
addr16
dec
lret
adc
ror
push
xor
mov
xchg
js
movl
inc
mov
jae
or
gs
cmp
mov
mov
out
jp
push
cmpsl
inc
fldcw
repz
inc
fwait
mov
mov
mov
pop
shr
mov
mov
mov
and
or
dec
js
and
cmp
lods
and
hlt
cmpsb
mov
jecxz
jb
hlt
data16
es
jge
lret
cld
out
fcomps
cwtl
push
aas
divb
mov
in
sub
xchg
daa
jge
xor
stos
jae
mov
and
push
sub
daa
jbe
pushf
dec
cmpsb
ret
mov
jnp
mov
sub
test
and
rcr
enter
bound
aam
jl
cmp
aaa
in
or
mov
into
hlt
ss
shlb
dec
pop
fnstenv
pop
dec
mov
fldcw
push
fisttpll
dec
outsb
mov
sbb
sub
xchg
push
and
push
jle
aam
inc
xor
fs
mov
inc
pop
pop
dec
repz
mov
cs
jmp
pop
jnp
aaa
push
dec
xlat
xchg
es
subl
sbb
pop
popa
push
in
iret
sub
xchg
popf
test
dec
xchg
js
xor
push
or
iret
dec
pop
jb
cmp
ja
imul
sti
rcrb
xor
mov
into
cmp
xchg
mov
mov
inc
mov
and
mov
fildll
pop
stos
repnz
ret
iret
xor
popf
iret
hlt
or
inc
cs
and
mov
sahf
xchg
imul
cmp
fsubp
add
outsb
mov
movsl
lds
clc
rcrb
mov
daa
inc
jno
pop
iret
push
int
movsl
out
test
movswl
js
fmull
leave
fnstcw
fwait
pop
lods
dec
ss
decl
mov
push
fisubrs
cmp
inc
pop
xlat
cs
nop
and
enter
mov
es
mov
xor
mov
push
cli
xor
ret
shrb
mov
out
rcll
imull
push
je
xchg
cwtl
jp
mov
mov
mov
mov
or
xchg
sub
jge
loop
stc
lahf
ljmp
mov
jne
in
mov
mov
mov
push
aad
and
add
jmp
pop
or
nop
inc
pushf
out
in
leave
pop
mov
dec
sub
push
inc
ljmp
and
mov
xchg
push
popa
add
loopne
dec
jne
cmc
adc
inc
dec
sub
lret
push
jmp
lock
movsb
pop
ljmp
mov
movsl
orb
xchg
jbe
dec
shrl
sbb
push
xchg
push
push
xor
stc
imul
das
or
inc
das
fisubl
ljmp
out
fnstenv
pop
test
lcall
mov
iret
icebp
dec
pop
fsubl
jbe
xchg
lea
int3
push
fisttpl
fincstp
add
xchg
pop
jnp
sahf
inc
pop
pop
jnp
add
and
inc
dec
rorb
mov
insl
push
mov
adc
mov
in
jg
jmp
loopne
daa
mov
call
leave
addr16
std
jbe
push
add
sub
cld
aad
xor
or
enter
leave
stc
lret
pop
loopne
add
lock
xor
andl
inc
fldcw
sub
fistpll
leave
lods
shll
shr
xor
fsts
imul
sub
pop
fs
aam
adc
lea
fwait
lds
frstpm(287
push
hlt
outsl
cmp
xor
sbb
dec
xor
repnz
inc
jo
mov
mov
sub
in
mov
jl
mov
in
and
addb
lock
fs
inc
push
and
xchg
fcomps
gs
test
mov
or
or
mov
xchg
cs
insb
pusha
mov
outsl
inc
or
xchg
test
or
mov
scas
xchg
cmpsl
jae
in
cld
pop
cmp
mov
adc
shl
loope
xchg
les
in
xchg
mov
adc
mov
fdivs
and
sub
scas
mov
lock
cltd
jecxz
push
sti
insb
add
or
sub
cmp
pop
jno
out
or
dec
xchg
shll
jmp
stos
sti
fsubs
rorl
scas
fs
cs
pop
jl
lock
xor
mov
sbb
sub
call
push
push
fwait
add
dec
mov
iret
decb
pop
pop
sar
cmp
das
jb
popf
mov
ret
adc
jbe
push
adc
pop
jl
mov
stc
adc
cs
test
inc
inc
lods
dec
neg
push
in
in
in
imul
dec
icebp
sarb
pushf
xlat
nop
fldcw
cli
jle
and
push
jecxz
pop
lock
jg
mov
add
xchg
xor
and
rcll
fstpt
and
mov
fcomip
inc
add
adc
imul
jle
xlat
sub
aas
dec
scas
xor
jns
orb
lahf
outsb
push
aas
jno
je
rolb
pop
adc
xor
jb
ja
xchg
xlat
inc
out
pop
or
lret
xchg
pop
and
call
inc
iret
shl
push
xchg
push
leave
dec
pop
sbb
fstps
adc
pop
sub
cmc
adc
xchg
pop
decl
mov
sub
mov
xlat
push
pop
out
mov
test
sbb
clc
dec
jp
mov
das
insb
fcomps
mov
pusha
in
pushf
sub
mov
cli
and
fstps
mov
push
int3
les
in
insl
rdmsr
adc
adc
cmp
inc
jb
jnp
sbb
fs
sub
sbbb
dec
and
mov
inc
movsl
hlt
sub
xorb
inc
aas
in
cli
and
adc
adc
scas
in
push
push
scas
or
fwait
mov
cmpsl
jb
add
mov
addr16
jmp
jg
outsb
jp
jnp
push
pop
push
or
add
out
cwtl
inc
stos
roll
add
sbb
dec
lods
sbb
call
jae
sbb
outsl
sbbb
jnp
jl
dec
mov
in
xor
arpl
pop
jp
cmc
pop
cltd
ljmp
sarb
shll
mov
fstpt
insb
hlt
ret
ds
pop
es
fwait
inc
jle
sub
pop
xchg
xor
movsw
popa
int3
aas
aam
xchg
xchg
xor
sub
pop
push
jo
add
and
cmp
into
jb
daa
and
mov
lret
mov
push
arpl
sar
sub
push
xchg
xchg
arpl
mov
sbb
lea
loop
fistl
or
jecxz
and
mov
mull
dec
out
jecxz
sbb
add
lcall
sahf
in
lods
inc
outsl
insb
mov
pop
xor
ss
insb
jne
fsubrs
cmpsb
xchg
gs
rcrl
arpl
xor
clc
jge
push
lret
adc
push
rcrb
or
jl
in
cmp
xor
pop
cmp
cmpsl
mov
daa
test
jecxz
je
jne
sbb
xchg
sub
push
xorl
aad
mov
lods
fbstp
xchg
dec
fisubs
mov
jp
dec
fadds
addr16
data16
loopne
pop
pop
xchg
or
or
cmpsb
scas
jae
subl
mov
out
ss
push
cmc
negb
add
imul
push
push
push
jbe
jo
lock
xchg
insb
jge
lret
testb
cmp
popf
roll
imul
out
rcr
stos
movsb
sbb
ds
popa
fcmovnbe
xchg
xchg
test
ljmp
xchg
cltd
jmp
jbe
pop
jge
int
mov
in
iret
pop
or
mov
js
mov
scas
push
repz
sahf
jnp
js
xchg
nop
and
lock
scas
mov
adc
setno
pop
dec
dec
repnz
xchg
aaa
jbe
sahf
xor
adc
bound
loop
or
fidivrs
fadd
notl
sub
xchg
sub
sub
jecxz
jbe
out
stos
lea
lret
cli
pop
push
jo
inc
fbld
or
ficoms
je
out
add
sar
add
outsb
incb
lret
pusha
push
nop
sti
inc
jge
pop
fistps
jne
pop
outsl
adc
sub
ljmp
addr16
insl
adc
adc
xchg
sbb
loop
fstps
sub
push
sub
test
and
mov
rcl
mov
gs
mov
mov
out
fnstsw
mov
ja
adc
fadd
scas
pop
cwtl
adc
xor
dec
cs
push
pop
fdivrl
imul
mov
mov
xchg
sbb
adc
add
jl
xchg
xchg
xchg
cltd
mov
cwtl
mov
xchg
push
rcr
sbb
xchg
ja
ret
mov
js
rorb
mov
cmc
cmpsb
sub
test
cmpsb
adc
test
or
loop
push
inc
into
add
add
icebp
push
mov
arpl
and
je
lcall
cmp
fmull
rcrl
cld
pop
lret
inc
popa
gs
mov
cli
jne
add
loope
fsubp
mov
ja
and
rcrb
jo
in
lea
xor
shl
stos
jge
data16
fnsave
adc
out
add
jmp
or
repz
and
insb
mov
and
mov
lahf
inc
xor
mov
mov
in
decl
fsubrs
test
mov
sub
jl
mov
xorb
lock
adc
adc
rorl
jle
out
mov
add
movsl
mov
mov
shll
movb
loope
sbb
testl
inc
dec
mul
inc
testb
jge
push
mov
decb
and
repnz
jne
stc
pusha
mov
andl
popf
lahf
aam
push
xor
sti
cld
add
mov
sub
jns
in
jle
in
stc
pop
jns
stc
cmpsl
adc
mov
xchg
xchg
jmp
hlt
dec
sbb
ja
xor
push
lcall
pusha
jb
jno
shrb
push
sub
fists
hlt
cmp
mov
ja
jl
ficompl
data16
push
bnd
int3
int3
xor
data16
call
sbb
sub
mov
icebp
cltd
mov
data16
inc
mov
lods
int
rcrl
push
data16
pusha
xor
jns
data16
int
push
cmc
repnz
int
shlb
addr16
pop
fwait
aas
pop
int3
sarl
ret
xor
int3
int
adc
fcoml
xchg
mov
sbb
fsubl
xor
mov
rcrb
push
xchg
sbb
cmp
fisubs
inc
xlat
sbb
sar
pop
neg
sbb
clc
pop
pop
push
int
mov
mov
pop
lret
aas
mov
and
clc
xchg
loop
aaa
mov
sbbb
fs
jmp
push
adc
outsl
stc
mov
pushw
fldt
mov
adc
push
mov
inc
push
dec
imul
jp
pop
and
nop
loopne
sbb
jae
sub
fbld
loopne
stos
lds
mov
out
decb
icebp
add
jno
pop
mov
cwtl
sahf
jno
pop
dec
mov
mov
add
pusha
cmpsb
mov
or
fiadds
cmp
inc
lret
cmp
imul
out
in
mov
dec
subl
pop
jne
jns
scas
into
addr16
xchg
cmpsl
mov
cli
loopne
push
cs
or
mov
outsl
loope
pop
adc
jmp
pop
cs
cs
lds
data16
jo
insl
pop
je
dec
shll
addr16
dec
iret
dec
inc
sahf
xchg
pop
int
push
mov
repz
sub
pop
pop
cld
pop
adc
mov
lahf
jg
gs
jbe
pop
inc
cmpl
mov
jne
dec
mov
out
fcmovne
push
ds
pop
inc
mov
mov
scas
xchg
cmp
inc
xor
les
push
cltd
int
xchg
sub
jg
or
out
mov
push
testb
sub
iret
mov
sbb
sar
addb
cmp
movsl
dec
add
andl
push
mov
cld
ljmp
jnp
xor
pop
push
into
ljmp
mov
repnz
lods
pop
test
adc
sahf
cmp
jae
xchg
adc
lret
daa
fimull
loope
sbb
mov
bound
push
add
scas
and
push
push
push
stos
mov
push
lea
xchg
inc
jl
cmp
adc
movsb
out
mov
inc
adc
mov
out
push
mov
inc
test
cld
xor
call
rol
dec
out
std
push
jns
push
inc
test
and
and
dec
shl
xorl
lock
out
into
or
xor
hlt
dec
add
rcrl
mov
ljmp
cmp
pop
mov
dec
bound
jns
shl
ret
pushf
xchg
sbb
pop
sbb
shlb
movl
les
jo
popf
dec
jp
shlb
or
pop
pop
mov
stos
inc
test
fidivrl
insb
add
in
mov
or
stos
adc
inc
inc
or
xor
ret
push
jnp
jmp
daa
out
daa
out
je
jmp
out
jecxz
push
test
aad
aaa
cmp
jmp
daa
out
xchg
imul
pop
sbb
xor
jle
mov
cmpsl
push
dec
fcmovne
push
cmc
pop
inc
dec
ficoms
fidivs
push
jmp
mov
and
jecxz
js
cmpsb
lods
sbb
dec
or
fnstsw
sub
aas
aam
cmp
lahf
jb
lcall
inc
mov
lods
pop
jae
out
mov
add
scas
ss
ficoms
stos
movl
jmp
lret
and
clc
push
popa
xchg
bound
test
inc
xchg
xor
int3
aad
stos
xor
nop
xchg
cwtl
dec
xor
into
cmpsb
mov
pop
push
popa
stos
cmp
into
fidivs
sarb
jg
jl
std
inc
jmp
fsubl
sti
cmpsl
jmp
lahf
in
and
test
cmpl
sbb
pop
vmread
lcall
cmp
sbb
aam
mov
fnstsw
shl
sbb
test
push
pop
jnp
push
rol
xor
pop
add
inc
push
xor
imull
mov
add
mov
mov
cmp
mov
mov
lock
mov
or
fildl
clc
mov
mov
cmp
add
push
or
mov
js
rcrb
lcall
jns
lds
hlt
ja
int
push
xor
or
iret
pop
sub
outsb
xor
arpl
imul
adc
add
jns
call
adc
inc
ficomps
dec
test
fdivp
push
lret
sub
fstps
add
imul
jb
mov
test
test
loope
mov
inc
idiv
iret
fstpt
inc
xor
leave
mov
arpl
leave
je
adc
mov
inc
sbb
clc
pushf
arpl
sti
adc
push
dec
dec
out
insl
push
orb
inc
filds
adc
in
sub
dec
cmp
xor
dec
or
jo
mov
mull
or
popf
inc
pop
adcl
mov
push
pop
aas
outsb
scas
push
xor
sub
push
cwtl
loop
rorl
jnp
jg
int3
mov
jg
inc
fiaddl
sbb
int
mov
iret
cmp
inc
xorb
and
ret
push
popf
mov
add
filds
xchg
loopne
das
orl
ror
or
jge
add
ds
jae
sbb
xor
loopne
jle
jp
test
mov
into
mov
test
dec
dec
add
push
gs
out
inc
stos
movsb
fcmovne
ljmp
cli
xor
mov
mov
stc
jno
fdivs
cli
jg
fcomip
ja
nop/reserved
sbb
add
arpl
jne
inc
inc
add
ret
inc
sub
adc
or
call
add
xchg
push
push
adc
add
add
gs
int
in
lea
hlt
jae
mov
add
mov
iret
sbbl
and
mov
add
mov
cld
in
or
and
xchg
mov
xchg
xor
test
mov
ja
cmp
rorl
jmp
gs
aas
inc
add
movb
adc
nop
pusha
sahf
add
push
mov
int
mov
pop
jg
nop
xor
add
add
dec
clc
fwait
scas
leave
out
sti
mov
push
or
mov
jl
loope
and
imul
jg
lret
mov
imul
cmpsb
pop
repnz
ljmp
jp
mov
xor
ljmp
aaa
cwtl
mov
xchg
mov
pop
clc
xor
sbb
add
add
in
dec
mov
inc
sub
sub
mov
cmp
cmp
jle
ds
jno
in
sbb
pop
add
rorl
popa
mov
and
cmpsl
cmp
gs
addl
aas
pop
ficoms
mov
icebp
push
enter
mov
fwait
xchg
cs
mov
adc
call
lcall
pushf
adc
loope
outsb
arpl
sti
inc
add
sar
push
ret
or
push
pop
and
inc
subb
icebp
fwait
in
sbb
flds
and
in
out
or
enter
cmp
das
jge
insb
mov
push
fldcw
in
pop
pop
pause
xor
inc
testb
ds
pop
sbb
insl
int3
jle
jmp
cli
popa
gs
lret
adc
sub
out
lahf
rcll
daa
pop
xchg
stos
dec
or
sbb
rcll
xor
call
sbb
cmp
or
xchg
mov
nop
xor
in
cs
stc
rep
mov
cmp
data16
cmp
mov
lahf
lahf
push
push
call
in
arpl
pop
mov
lock
loopne
rclb
jbe
rol
pop
stos
xchg
adcl
dec
sbbb
das
jg
or
xchg
or
ss
imul
add
push
enter
lahf
jle
ss
imul
insb
je
lock
fucomi
adc
es
pusha
shlb
pop
and
shl
cmp
cld
icebp
idivl
add
push
roll
pop
push
jo
fsubrl
sbb
add
add
and
mov
mov
pop
pushw
mov
push
cmp
addb
dec
incl
and
into
sbb
es
fwait
sub
clc
and
jns
or
fdivrs
jbe
mov
pop
stc
mov
mov
idivb
jge
mov
stc
stc
es
rep
or
addb
test
iret
xchg
repnz
push
cmp
add
mov
xor
adc
lahf
sub
lds
and
mov
clc
clc
and
imul
fisubrl
and
adc
or
push
pop
andb
inc
inc
insb
lock
out
test
xchg
sub
insl
add
lock
repz
add
roll
push
stos
push
lretw
lea
xchg
shrl
or
mov
add
cld
sbb
cmp
test
test
pop
sub
adc
mov
shlb
mov
push
nop
mov
lock
in
push
add
outsb
sti
ret
mov
add
sbb
dec
inc
adcb
sbb
cmp
cmpsb
test
jecxz
je
fildl
cmp
arpl
adc
add
negl
mov
stc
add
jmp
icebp
fxtract
icebp
lods
jg
in
fdivl
call
loopew
mov
push
jb
cltd
mov
mov
sahf
icebp
aas
imul
cwtl
imull
mulb
pop
std
push
fisttpll
popf
pop
insb
adc
xor
inc
ficomps
cmpsl
push
mov
xchg
xchg
mov
lock
sub
aad
jg
add
lret
addr16
stc
bound
cmc
je
lods
xchg
or
mov
pop
push
out
jo
jp
pop
int3
sub
sub
idiv
mov
insl
jno
push
pop
loope
sbb
pop
ljmp
std
into
inc
jle
lods
push
and
mov
bswap
xchg
lds
or
lods
pop
xchg
scas
imul
or
orl
jns
call
or
movsb
push
fnstsw
cmp
dec
dec
xlat
iret
in
cmc
mov
jnp
fistpl
sti
inc
sbb
movsb
int
jne
scas
fstps
push
jle
test
lret
addb
stos
sub
sub
clc
add
les
std
mov
sbb
insl
jmp
pop
lods
adc
cs
fisubl
out
test
lret
dec
bound
inc
add
mov
jae
imull
mov
aas
or
add
fiaddl
scas
mov
clc
and
sub
sub
fwait
and
inc
mov
xor
sbb
call
movsl
pop
inc
sub
vmovupd
scas
pop
cld
add
fcmove
and
pusha
cltd
sub
xchg
push
mov
push
bound
add
outsb
loopne
ljmp
jmp
sahf
xchg
dec
mov
pop
jmp
dec
adc
ja
fdivl
popf
lret
pop
sub
sub
jmp
adc
push
repnz
nop
jg
push
imul
cld
sub
shrl
xor
loopne
outsl
pop
dec
jae
aam
push
push
mov
mov
inc
cmp
cmc
push
shl
cmpsb
push
push
mov
in
mov
js,pt
fistl
inc
lods
out
mov
out
add
jmp
jle
shr
js
push
lods
repz
or
or
in
lahf
nop
pop
dec
lods
add
pushf
lods
inc
call
dec
fcoml
add
xchg
stos
xchg
sub
cmp
mov
pushf
loop
jecxz
adc
mov
scas
icebp
movsl
inc
clc
cmpsl
mov
jl
cs
xorl
pop
cmp
jns
repnz
hlt
jno
add
test
sbb
fnstenv
imul
scas
jne
popl
push
cmpsb
aas
dec
mov
movb
ja
iret
popf
outsl
scas
xchg
mov
fmul
push
xchg
mov
mov
iret
mov
cwtl
xor
aas
push
repnz
cmp
int3
mov
in
push
out
inc
xchg
pop
divl
push
ret
xor
mov
lret
in
ss
push
xor
jno
inc
mov
pop
fistpl
sti
loope
test
into
mov
insl
adc
sahf
push
dec
adc
icebp
jecxz
push
jns
pop
or
jp
push
and
sub
dec
pop
cmp
jle
fcmovnbe
arpl
inc
dec
repz
push
cltd
or
pop
jge
mov
sub
inc
jo
add
sub
push
daa
mov
icebp
xchg
fwait
cmpsb
mov
adc
loop
mov
cmpsb
sub
add
ret
add
inc
inc
incb
repnz
xchg
cli
cmp
inc
or
outsb
fs
mov
hlt
pop
pop
enter
sbb
jg
movnti
fistps
cmp
lcall
in
push
fcompl
xchg
int
sbb
inc
xchg
imul
sbb
adc
push
and
pop
mov
inc
sbb
aam
cltd
fcmovnu
cmpsb
repnz
fimull
xchg
cmp
rcll
in
adc
mov
sbb
js
and
adcl
out
in
sbbb
xlat
or
xchg
cltd
lret
mov
rcr
mov
dec
pop
push
pop
mov
in
lods
aad
pop
enter
aad
cmpsb
pop
loop
popa
hlt
sub
jp
push
out
cmp
rolb
inc
inc
fisubs
xchg
sar
mov
jge
pop
fdivs
jb
inc
fnsave
out
mov
ret
lods
cmc
mov
pop
rclb
dec
push
arpl
scas
cmpsl
xchg
lds
or
adc
mov
testb
pop
out
pop
aas
cltd
ss
dec
jne
xchg
xor
xchg
cmp
lods
movsb
cltd
sub
mov
popa
cmpsb
pop
sbb
lret
sbb
mov
mov
mov
xchg
push
xchg
nop
in
lahf
jp
aad
mov
push
mov
or
sub
cmp
and
cli
push
mov
sub
inc
test
fmuls
sub
les
mov
xchg
dec
mov
aas
xor
lret
sahf
xor
icebp
inc
jae
push
sbbb
xchg
add
and
pop
int3
dec
fsubr
adc
mov
push
sub
int3
or
xchg
xchg
lret
xchg
adc
mov
add
das
pop
shr
hlt
mov
popa
mov
mov
loopne
cwtl
mov
sbb
inc
mov
cmp
jb
lods
js
mov
mov
jns
shll
xlat
sbb
ret
iret
test
fbld
fldenv
push
sub
push
or
and
stos
xchg
cmc
xchg
mov
xchg
out
xchg
leave
je
cmp
mov
adc
arpl
rcl
mov
jbe
aas
adc
mov
mov
cld
fsts
aaa
adc
pop
push
adc
push
push
add
jb
cmp
mov
xor
rclb
gs
xchg
stc
xchg
lock
sti
aam
sarb
push
mov
mov
mov
mov
sub
pop
jne
jbe
sbbb
fdivs
ret
push
push
xchg
aad
mov
sahf
flds
push
cmc
arpl
shr
icebp
xchg
push
outsb
inc
lcall
ja
adc
mov
or
into
cmc
inc
aad
nop
mov
pop
inc
loopne
in
mov
pop
add
fstl
rclb
insb
adc
sbb
adc
mov
cmp
inc
mov
sbb
pop
lret
popa
mov
cmc
sub
insb
fwait
push
cld
push
mov
lret
mov
push
mov
mov
mov
stc
adc
jae
loop
dec
lahf
cmp
add
inc
push
inc
cmc
push
inc
ret
push
mov
scas
add
out
sub
jne
fcoml
dec
pop
test
aam
in
adc
scas
loop
and
and
push
stos
pop
ret
shl
adc
lret
test
adc
popa
ja
stos
dec
dec
mov
call
loope
push
pop
xor
js
mov
jns
movsl
and
popf
in
add
fsubrs
cs
popf
repz
loopne
push
cmp
push
inc
jmp
mov
insl
rorb
cmp
scas
aas
into
inc
in
nop
adc
mov
jg
mov
cmp
xchg
adc
test
sub
data16
push
or
xor
repz
add
push
pop
lahf
pushf
movsl
icebp
outsl
sbb
mov
sti
jl
dec
mov
mov
adc
sub
xchg
arpl
sbb
jle
xchg
je
sahf
test
inc
loop
ffree
rorb
sub
dec
cmpsl
rolb
mov
mov
xchg
cmp
std
test
out
pop
dec
sub
xor
movsb
or
sbb
sub
mov
or
push
pop
cltd
xchg
frstor
sub
xchg
xchg
sub
xchg
mov
bound
adc
mov
outsl
add
mov
popa
jg
pop
idivl
fsts
push
sbb
dec
pop
pop
inc
xor
and
mull
cmp
or
jl
sti
jo,pt
xchg
add
les
or
jge
pop
out
lret
mov
stos
mov
cmp
popa
add
xchg
test
sbb
sar
add
and
mov
inc
add
push
sbb
in
mov
push
pop
sub
inc
mov
push
xor
movsb
gs
rol
xchg
xchg
lods
and
push
add
mov
js
loope
in
sbb
sub
rorb
stos
push
mov
stos
cmp
fdiv
sub
ret
sub
pop
repnz
inc
pop
mov
xor
jmp
mov
push
out
jnp
mov
ja
mov
sub
inc
mov
add
jl
or
popa
mov
or
cmp
mov
xchg
cld
xchg
add
int3
xchg
lahf
cs
inc
lods
mov
jae
inc
neg
jns
cmpsb
jno
idivb
test
mov
inc
inc
jo
mov
mov
das
push
int
imul
shlb
arpl
fld
jnp
movsl
xor
lret
aam
in
inc
sti
ret
or
scas
cmpsb
cmp
or
dec
fsubl
scas
insb
dec
pop
inc
and
xchg
mov
pop
mov
inc
loop
push
jno
fidivs
in
xlat
mov
fistpl
testb
clc
ljmp
sub
daa
jl
int3
popf
in
adc
xchg
cmp
int3
ss
popf
mov
icebp
aaa
roll
dec
jecxz
shlb
mov
cmc
mov
popf
leave
mov
imull
add
sub
clc
inc
pop
in
mov
lods
bound
push
inc
jnp
dec
push
popa
mov
call
mov
xlat
sub
lods
cld
jno
or
mov
lea
in
jp
mov
ret
xchg
in
rolb
jbe
jnp
scas
mov
xchg
negb
mov
inc
fiadds
test
sub
lret
hlt
test
and
jl
loop
int
and
pop
inc
adc
push
and
adc
enter
jge
cli
inc
mov
add
or
jle
mov
jbe
test
ret
mov
pop
test
xchg
push
int
xor
xor
inc
mov
mov
mov
movsb
popa
pop
jmp
jmp
leavew
scas
shlb
and
pop
std
push
lret
mov
and
movsl
rolb
jae
aaa
les
imul
jg
mov
fistpl
fs
push
xor
inc
dec
pop
mov
push
jne
jle
int3
sub
mov
imul
push
pop
shlb
push
call
sbb
cmp
je
inc
insb
mov
and
adc
imul
outsl
pusha
adc
and
and
movsl
cmp
adc
xchg
adc
xchg
xchg
loopne
stc
push
fdivs
sti
add
repz
inc
mov
sahf
aam
int
in
cs
lods
inc
in
mov
jae
cmp
jbe
out
lahf
or
imul
xchg
push
xchg
in
daa
inc
loopne
add
mov
pop
js
add
scas
mov
dec
aam
gs
in
sub
sub
mov
cmp
lods
ret
aas
jbe
adc
push
add
or
sbb
or
fisubs
sub
mov
add
icebp
sti
push
aad
movsl
imul
mov
jns
inc
pop
push
jge
xor
adc
fiadds
sbb
xchg
popa
lret
out
jne
xchg
pop
stos
aam
fsubs
mov
fs
in
mov
imul
sbb
cmp
sub
push
rolb
cli
mov
pop
fiaddl
js
shl
inc
das
js
addr16
cmp
cmpsb
jnp
lods
aas
jo
into
pop
ljmp
jne
jne
ljmp
inc
xorl
mov
insl
js
mov
xor
in
inc
sbb
std
ja
cmp
out
jne
icebp
sub
shll
mov
adc
pop
sub
push
icebp
mov
push
mov
pop
inc
cmp
jo
jae
cwtl
fistl
iret
idivb
sbb
inc
mov
cmp
mov
je
sbb
mov
loope
scas
sbbl
bound
mov
mov
ss
sti
insl
sub
sbb
sbb
sbbb
test
inc
cmp
in
out
inc
xor
cmp
mov
cmpsb
orb
loop
fisttps
mov
jmp
or
or
sti
or
mov
mov
fistpll
sbb
push
or
sbb
std
aaa
or
int3
dec
pop
cwtl
insb
lods
sub
add
sti
lods
negl
jmp
into
lret
cmp
or
cmp
inc
sub
pop
mov
stos
and
aam
push
cwtl
mov
mov
adc
or
xor
fs
inc
xor
ds
sub
shlb
xchg
mov
jp
push
lcall
repz
add
ss
xor
call
sub
mov
or
das
pushf
push
addl
sub
xor
pop
cltd
fdivl
push
jg
mov
fdivr
xchg
scas
add
testl
outsl
je
dec
jae
jge
das
cmp
aas
dec
std
xorl
mov
sub
pop
ficompl
sahf
pop
int
xor
push
push
ret
inc
shll
or
lods
cmp
das
mov
jp
jge
ja
jle
cmp
psrlw
mov
mov
int
pushl
xor
xor
outsl
test
mov
subl
jecxz
sbb
andb
pop
mov
jbe
adc
fbld
out
lods
push
or
cmp
mov
lret
sub
xchg
push
mov
mov
pop
adc
jbe
xchg
jne
cli
mov
sub
jo
lret
lret
adc
sbb
in
jmp
jbe
pop
sarl
mov
insb
jne
into
xlat
std
push
and
cmpsl
out
cli
loop
cmp
add
jmp
sbb
cmp
jmp
in
pop
das
cwtl
sbb
cmpsb
icebp
lock
loopne
lcall
adcb
hlt
addl
lds
outsl
xor
sbb
mov
pop
pop
pop
inc
cmpsb
push
mov
xchg
pop
pop
or
loop
and
lahf
push
sahf
mov
ficoml
jp
sub
int3
jne
jmp
je
sahf
test
sbb
js
pop
jae
icebp
pop
adc
jno
or
push
lods
sbb
add
or
sub
adcb
mov
push
fldt
sub
std
in
inc
cmp
ljmp
shrb
dec
movsb
jne
mov
decb
add
mov
push
dec
cld
outsl
mov
pop
sub
movsl
xchg
jo
gs
clc
loopne
inc
inc
fistpll
xchg
sub
xchg
fcomi
aad
loopne
add
test
cmpsb
dec
push
movsl
cmpsl
mov
fists
div
fcmovnu
aam
imull
xchg
in
pop
fsubrl
xor
jo
sub
imul
scas
pop
test
cmp
or
and
cltd
or
lahf
and
mov
enter
stos
scas
ss
ds
add
ficompl
test
dec
sarb
add
pop
rcrb
inc
pop
aas
and
xor
and
call
mov
mov
pop
addr16
mov
rol
and
outsl
fcmovnu
es
adcb
loopne
cmpsl
icebp
loope
adc
imul
inc
cmp
and
sbb
xchg
pop
push
arpl
jno
out
push
cmp
sub
push
mov
mov
dec
outsl
pop
sub
gs
mov
jnp
inc
shl
gs
mov
in
out
in
fnsave
push
jne
push
sub
rol
fnstenv
arpl
loop
xor
icebp
xor
bswap
nop
inc
mov
cld
js
test
test
dec
mov
ljmp
aam
mov
shll
lods
xor
jnp
scas
dec
loop
sbb
jno
mov
push
repz
mov
shrl
ror
js
out
jg
xchg
mov
mov
or
xorb
jmp
add
dec
add
push
shlb
inc
mov
mov
add
shrl
mov
and
dec
incb
pop
es
stos
fmuls
cltd
mov
aad
sarb
dec
pop
cld
cltd
insb
xchg
and
test
lahf
inc
inc
sub
sub
adc
lahf
arpl
xchg
enter
and
out
sbb
push
mov
mov
add
sbb
pop
jecxz
and
loope
mov
imul
and
mov
mov
cmp
repz
dec
dec
mov
fdivs
movsb
je
sub
jns
ss
stos
out
adc
jo
movsl
test
aaa
dec
mov
cmp
sbb
imull
mov
stc
sarb
xchg
mov
push
out
xchg
mov
nop
jns
jo
sbbb
out
mov
mov
iret
lret
ror
clc
into
in
das
repz
fsubs
daa
fwait
aad
andb
shlb
arpl
cmpsl
repnz
sbb
dec
out
inc
sub
stos
ss
jle
jb
aaa
aad
inc
adc
data16
sbb
mov
repz
and
test
pop
and
repz
lods
mov
inc
adc
cld
dec
sbb
mov
mov
iret
pushf
mov
jl
mov
or
shlb
js
mov
and
push
mov
outsl
and
sub
jb
mov
int3
js
jne
bound
orl
mov
outsl
mov
mov
push
and
out
shlb
js
fsubr
cli
rol
fadd
sahf
push
seto
and
je
sub
jecxz
ja
sub
jno
mov
sti
scas
les
mov
leave
aad
mov
test
pop
jae
mov
cwtl
push
outsl
or
push
loop
cmp
push
add
lods
jl
mov
aas
xchg
sub
pop
and
cmpsb
push
inc
ds
dec
xchg
scas
stos
test
pop
div
dec
push
mov
adc
lahf
mov
mov
xchg
fwait
addr16
push
adc
sbb
repnz
iret
or
rolb
push
mov
lcall
xor
mov
scas
cli
fbld
push
pop
jecxz
mov
movsb
inc
xor
cld
mov
adc
pop
loope
push
xchg
jle
popl
cmpsb
sbb
pop
sub
xorb
add
lock
cli
adc
scas
sahf
sub
mov
aaa
cli
add
test
inc
jl
inc
adc
scas
arpl
mov
sbb
adc
xor
in
jmp
mov
repz
stc
aam
jns
cmc
or
dec
je
mov
dec
jecxz
xor
cltd
mov
es
dec
xor
lret
test
divl
psubusb
movsb
in
test
in
out
out
imul
pop
sbb
iret
push
fdivl
outsb
mov
dec
loope
pusha
fidivl
fidivrs
mov
sbb
cld
int3
loope
mov
inc
dec
mov
and
fidivs
cmp
pushf
aam
mov
jge
aam
sub
shlb
pop
adc
rolb
insl
ljmp
sarb
add
push
mov
es
aaa
mov
ljmp
cwtl
adc
jns
inc
adc
jbe
adc
insb
repnz
add
repz
mov
arpl
nop
je
loop
aas
pop
inc
fldenv
les
adc
dec
ds
cmp
inc
data16
pop
push
mov
lds
add
mov
sarb
pop
enter
push
jbe
xchg
mov
sahf
xor
in
jg
sub
movsl
push
nop
or
aam
iret
adcl
add
int
ret
dec
movsb
and
sbb
cs
mov
aad
insl
scas
mov
dec
int3
push
mov
stos
or
add
insb
gs
fdiv
adc
adc
shll
cmp
orl
sbb
loope
xchg
push
stos
push
stos
or
setne
stos
jnp
sub
mov
add
cmc
out
in
adc
mov
addl
lret
rcll
xchg
xchg
sub
add
mov
les
scas
cltd
inc
stos
fsubr
xchg
xchg
aad
dec
push
fstpt
fwait
adc
xor
int3
fstpt
pop
sub
leave
add
jmp
iret
mov
jnp
sti
scas
mov
cmp
cmp
jbe
in
mov
lock
popf
out
jbe
dec
sbb
sbb
sti
cmp
std
icebp
xlat
sti
adc
out
mov
pop
cmp
dec
std
and
add
and
push
or
aad
sti
outsb
adc
sbb
fimuls
repz
mov
xchg
rcr
mov
xchg
jl
xchg
sbb
hlt
mov
js
pop
test
popa
lcall
add
inc
add
jge
mov
mov
push
pop
dec
inc
ret
aaa
cmp
leave
in
inc
shll
jnp
or
cmp
cmpsl
aaa
pushl
mov
mov
pop
jl
stc
adc
sub
sbb
mov
sub
or
pop
nop
pop
in
pusha
iret
mov
fs
lret
pop
mov
aaa
jnp
sub
xchg
adc
stos
xchg
and
xchg
jecxz
in
add
jmp
ja
mov
xchg
inc
jp
mov
lds
mov
into
push
dec
sub
out
mov
sub
shl
stos
pusha
lret
fmull
xchg
add
addr16
mov
decl
adc
xor
std
xchg
jg
cmp
lock
dec
cmp
sbb
sub
lea
ss
shlb
jb
sub
add
test
pop
sbb
enter
and
cld
pop
ficoml
xchg
sub
xchg
add
stc
cltd
jle
std
mov
stos
xchg
mov
mov
jnp
mov
insb
jecxz
icebp
push
imull
ret
sbb
mov
mov
pop
sub
outsb
roll
sti
pop
ret
xchg
sbb
sub
mov
push
xchg
movsl
in
or
std
xor
int3
xchg
ds
sub
in
mov
fdivs
xchg
adc
xor
icebp
jmp
aad
dec
idivl
ja
jl
test
ja
push
in
shlb
sti
xor
sub
and
jno
in
aam
in
jge
sub
mov
dec
out
lods
adc
repnz
rorb
testb
insl
jecxz
cmpsl
pop
repz
movsb
lds
sbb
push
dec
jmp
xor
bound
mull
and
dec
mov
into
test
push
rorb
xchg
sbb
mov
adc
pushf
dec
mov
aas
xchg
pop
sub
pop
movsl
orl
orb
pop
das
mov
xor
push
cli
sbb
sub
pop
shrl
sbbl
outsl
cmpsl
mov
mov
sbb
orb
xor
lods
mov
and
sbb
clc
test
mov
cmp
int3
push
mov
scas
push
jle
jne
mov
or
icebp
ret
cmpb
insb
sub
mov
gs
movsl
imul
lea
inc
adc
sub
dec
fwait
pop
testl
cwtl
popa
repz
sbb
xchg
test
mov
mov
adc
rcrb
push
sbb
sub
pop
push
cmc
pushf
ret
and
out
cmpl
cld
shrl
iret
cmpsb
jo
mov
push
xchg
mov
stos
aam
cmc
scas
imul
shl
mull
into
imul
adc
adc
dec
jnp
lds
cmp
addr16
ret
cwtl
mov
fbstp
push
movsb
fadd
loope
clc
aad
jbe
test
xchg
fcomip
ret
das
xchg
mov
mov
push
insb
mov
jmp
pop
loopne
sbbb
sbb
les
jg
pop
pop
pop
mov
mov
sub
dec
rorl
out
mov
adc
decw
movsb
cmp
test
xor
jge
mov
push
jg
push
xchg
push
lods
shlb
bound
dec
inc
cld
addb
inc
adc
mov
push
test
cmp
bound
pop
xor
sarl
add
jge
cmp
cld
out
clc
mov
and
mov
cmp
aaa
sarl
xor
add
scas
das
fwait
add
addr16
mov
das
fwait
xlat
inc
adc
mov
test
sub
cltd
pushf
xchg
lea
inc
enter
adc
loopne
daa
xorl
jne
sub
or
lock
sub
jl
fwait
jae
nop
sahf
ja
push
sub
aam
ja
cmp
or
mov
lret
add
subb
adc
sahf
sub
loope
enter
inc
lret
mov
pop
test
cs
fcmovb
mov
jns
push
lds
aaa
and
xor
ret
mov
pop
vmovups
sti
ret
xlat
popf
mov
pop
mov
addl
je
bound
inc
aam
test
jge
fdivs
xor
rcrb
imul
cmp
test
fimuls
mov
xchg
push
jae
leave
sbb
cmp
call
xor
out
mov
add
pop
nop
fstps
jg
sbb
pop
outsl
rorb
xchg
test
adc
andl
in
enter
jnp
xchg
mov
mov
movsl
stos
aam
inc
and
sub
test
xchg
and
fistl
inc
iret
insb
mov
xor
xchg
orb
vpshufhw
cmp
outsb
les
imull
ds
cmc
cmpb
cmp
cwtl
fisubrs
pop
jbe
mov
hlt
xchg
inc
pop
mov
ljmp
pop
rol
adc
mov
and
push
inc
dec
mov
dec
scas
cmp
and
xchg
leave
mov
mov
divb
sub
or
and
ljmp
pop
imul
adcl
mulb
ret
rol
mov
call
sub
adc
cmp
or
xlat
shl
imul
sub
into
jb
sub
xchg
icebp
in
dec
add
xchg
jg
in
loopne
jl
dec
xchg
out
leave
fbld
outsl
ss
in
insl
mov
mov
cmpsl
dec
icebp
bound
pop
inc
lahf
ja
leave
mov
push
fistl
out
fisttps
test
sbb
jmp
pushf
cmp
xchg
adc
mov
cmpsb
pusha
pop
add
int
mov
iret
scas
push
stos
mov
dec
inc
mov
mov
inc
repnz
jmp
xor
xlat
and
lods
inc
pop
flds
and
cmp
cwtl
pop
xchg
pmuludq
mov
sbb
xor
push
cltd
addr16
fld
dec
cs
xor
xchg
lods
cltd
dec
mov
dec
loope
mov
negl
xor
pop
andl
lahf
cmp
stos
out
ljmp
or
mov
xlat
or
inc
xchg
pop
push
iret
push
mov
and
addr16
filds
add
fcoml
xor
test
pushf
punpcklwd
xor
or
es
adc
xor
out
adc
jmp
mov
pop
inc
sub
mov
xchg
fnstsw
xchg
out
out
mov
inc
sbb
adc
shll
fnstsw
call
repz
sbb
mov
faddp
mov
lods
cltd
push
ss
repz
push
xor
sbb
test
pop
ljmp
push
xor
leave
lcall
sahf
xchg
std
scas
in
fidivrl
xor
jle
fsubrl
test
sub
jmp
xlat
pop
ja
div
lret
sarb
dec
or
testb
fists
push
aas
mov
leave
lds
outsb
add
add
ljmp
cmc
push
test
xchg
shrl
sbbb
int3
push
and
jg
lahf
jo
jnp
mull
mov
inc
imul
and
xchg
popf
mov
push
pop
shll
mov
mov
ss
sub
insb
or
loopne
loopne
fstp
and
push
mov
je
pop
push
inc
std
mov
add
jb
jne
pop
insl
sbb
cmp
and
pusha
rcrb
cmp
push
divl
rcr
adc
je
sti
imul
out
lret
push
cs
mov
xor
aaa
inc
dec
lods
sub
sbb
call
push
call
push
sahf
inc
cwtl
not
fdivrl
cwtl
push
rcrl
andl
sbb
shrl
xchg
mov
xchg
rorb
mov
cmp
cmp
lock
or
and
sub
cmp
lds
pop
dec
jp
and
mov
jl
adc
imul
ficomps
mov
mov
arpl
cs
movsb
adc
mov
dec
jns
cmp
xchg
add
dec
decl
subl
adc
xor
mov
popf
jo
jmp
jb
movsb
sbb
cmp
cli
loop
sahf
stos
cmp
mov
xor
or
xchg
lcall
and
lahf
sbb
and
loopne
stos
pop
aad
xor
iret
xor
push
dec
pop
dec
and
out
mov
lret
dec
stos
shl
jl
add
pop
mov
mov
dec
pusha
subl
movsl
addb
pop
pop
dec
icebp
lock
dec
mov
sarl
push
mov
lea
pop
out
add
adc
and
loop
cmc
jnp
mov
mov
pop
and
test
ja
or
pusha
mov
push
gs
pop
je
mov
imul
dec
test
mov
mov
sahf
pushl
fwait
add
dec
add
xlat
or
fisttpl
sub
xchg
push
pop
fnstenv
lret
cmp
fsubrs
push
adc
ljmp
xchg
in
mov
or
adcb
and
dec
dec
jnp
sub
push
rcll
daa
filds
cmp
stos
dec
dec
and
imul
mov
je
or
push
mov
push
in
inc
es
adcl
mov
cwtl
xor
or
push
push
jp
cs
cmp
out
insb
in
test
push
fcmovb
xor
aas
mov
sbb
fsubs
sub
xor
pusha
test
mov
cmp
dec
push
repnz
lahf
imul
daa
call
push
add
dec
mov
jp
inc
sub
shr
out
fisubl
idiv
cmpsb
imul
mov
mov
mov
pop
jae
pop
arpl
mov
mov
insl
insb
push
sti
sbb
daa
and
pop
out
jmp
jne
xlat
xchg
push
iret
pop
mov
xchg
push
negb
pop
cld
addr16
ja
push
in
pop
loopne
std
movsb
aam
xor
shll
andb
sub
inc
nop
imul
pop
std
push
sub
icebp
fmul
aaa
mul
add
inc
mov
cmp
das
or
jle
push
push
or
mov
inc
sub
out
in
jg
inc
js
inc
stos
daa
inc
dec
cmp
inc
inc
int
mov
xchg
xor
mov
cmp
out
jge
adc
iret
push
adc
mov
mov
leave
pop
in
les
xchg
xor
mov
aas
or
pop
lcall
cli
jg
icebp
test
cmp
imul
cs
imul
jbe
sub
negl
cli
add
pop
fnsave
adc
ljmp
sub
inc
cli
lods
icebp
lret
fsubrp
loop
insb
in
lods
xchg
sub
adc
adc
sbb
test
or
insb
in
xchg
push
cmp
sbb
adc
aas
jl
sti
call
cltd
out
mov
lret
mov
jno
loopne
push
mov
and
push
mov
aaa
mov
sbb
in
xchg
in
stc
cmp
pop
push
bnd
mov
cwtl
pop
leave
xchg
into
or
imul
in
inc
iret
test
cmc
mov
idivl
mov
popf
stos
imul
imul
mov
cmp
add
xor
cmp
mov
arpl
mov
lock
mov
push
xor
add
aad
int
lods
sbb
out
imul
cmp
shrl
lahf
inc
mov
daa
pop
shlb
ss
faddl
lret
pop
cs
mov
lock
pop
or
jbe
dec
mov
jae
ds
ja
cltd
inc
dec
or
lds
out
int
cs
xlat
fsubrs
mov
out
aas
and
stc
push
dec
push
pop
cmp
arpl
sub
popf
iret
mov
scas
int3
and
lahf
lea
lods
mov
dec
adc
insb
icebp
int
push
aad
lds
inc
lods
xor
nop
in
jp
std
shrb
loope
pop
pop
mov
divl
pop
add
mov
jbe
sbb
in
mov
inc
mov
push
add
pusha
pusha
adc
stos
pop
stos
mov
fistps
lcall
jns
pop
mov
out
out
jg
jns
shll
std
data16
or
and
push
aas
leave
data16
mov
xor
scas
sbb
in
dec
test
adc
bound
int
into
sbb
mov
add
daa
mov
adc
jge
nop
or
pop
lahf
sub
rcrb
jb
aaa
and
xchg
and
out
rorb
lock
cmpsb
shlb
push
fwait
ret
mov
aam
fldt
addb
lock
sbb
push
pop
inc
mov
or
jp
fists
push
shl
fisubrl
xchg
les
insb
dec
cwtl
mov
leave
sub
inc
and
sbb
mov
mov
jp
outsl
nop
les
inc
dec
sbb
aas
sti
mov
mov
pop
xlat
dec
std
cmc
lock
mov
jnp
pop
xor
addr16
stos
aam
add
daa
inc
add
fmull
mov
or
pusha
into
leave
inc
jae
adc
and
rcrl
insb
xchg
pushl
pushf
loopne
in
pop
and
sbb
add
push
or
jecxz
mov
mov
lahf
sbb
dec
movsl
enter
call
sub
cltd
jge
es
xchg
sbb
add
add
pop
push
sbb
mov
mov
adc
pusha
imul
and
add
xor
mov
xchg
mov
sbb
stos
ja
jbe
pcmpeqb
adc
xchg
fldenv
in
cmp
inc
adc
cmp
sbb
daa
faddl
hlt
stos
loope
or
jmp
ja
sbb
jl
arpl
shlb
pop
pop
lret
xorb
adc
mov
or
dec
xor
adc
dec
lret
inc
adc
cmp
mov
mov
add
and
ljmp
mov
mov
mov
adc
js
add
and
xchg
or
push
cmc
stos
and
rcll
fs
repz
adc
add
xchg
cmp
mov
jbe
jno
stos
jge
pop
test
mov
ds
cmp
lods
outsb
sbb
iret
pop
in
jge
dec
stos
cmp
mov
nop
lds
xchg
loop
sbb
loopne
hlt
mov
rol
pop
mov
sbbl
cli
adc
dec
ret
into
xchg
jne
mov
imul
fwait
xchg
mov
je
push
sbb
fstpt
scas
and
or
jbe
shl
dec
mov
cmp
mov
pop
jns
stos
cs
jge
adc
cmp
bound
xor
sbb
sub
es
cmp
sub
pop
mov
cmovo
xlat
bound
jp
sbb
jmp
cltd
adc
call
in
test
push
scas
mov
dec
dec
lret
bnd
jl
fisubl
testl
adc
dec
cwtl
pop
or
ds
popa
or
movsl
mov
movsb
aad
movsl
and
sub
out
ljmp
push
test
shrb
lcall
imul
addr16
fldt
daa
imul
mov
shrl
pop
test
lahf
cmp
mov
sub
push
xchg
int3
sbb
rcll
test
in
and
pushf
push
sarl
jns
pusha
js
push
nop
imul
add
jbe
xor
rorb
sub
or
loopne
fnstcw
jge
mov
imul
adc
repnz
in
push
insl
xor
lods
mov
mov
cmp
mov
mov
pop
jbe
inc
lretw
cmp
dec
scas
fsub
icebp
jb
dec
jae
push
sbb
mov
cld
in
xor
mov
enter
xor
decb
cmp
loope
xor
lahf
out
jge
sbb
mov
xchg
xchg
and
xchg
std
sahf
inc
inc
pop
mov
roll
stos
jne
test
mov
in
jge
stos
out
pop
ret
pop
pusha
pop
push
mov
pop
sub
mov
popf
pop
ljmp
mov
mov
mov
mov
lea
mov
mov
fisttps
fbstp
jb
repz
mov
dec
ja
cld
sti
xor
data16
and
dec
xchg
mov
jge
pop
iret
sub
out
test
or
es
and
pop
test
inc
jb
repnz
sbb
lret
cmpsl
adc
xor
push
xlat
scas
pop
jno
xchg
inc
lret
fstpl
xchg
xchg
sub
push
push
das
mov
pop
cmp
mov
jo
fsubrl
les
add
lods
adc
jg
push
pushl
outsl
test
and
lea
mov
icebp
push
sahf
jb
icebp
lret
xchg
push
pop
adc
fchs
xchg
inc
xorl
dec
ljmp
pop
xor
add
mov
ja
xchg
add
jmp
add
mov
jge
cmpsl
pop
cmp
dec
jns
inc
dec
add
add
shl
rcll
pop
mov
cmc
fistl
xchg
pop
sub
mov
lock
adc
jmp
jns
push
rcll
test
dec
imul
push
lahf
push
nop
ret
js
push
mov
and
or
and
rcrl
test
mov
inc
mov
roll
and
jmp
iret
outsb
dec
sub
push
and
and
jns
add
mov
or
popa
inc
rol
into
pop
sti
jl
dec
idiv
int3
mov
mov
stos
sub
shrl
pop
inc
adc
bound
sub
jne
mov
ret
mov
mov
or
fwait
mov
cmp
mov
cmovb
dec
cmpsb
adc
xor
hlt
push
daa
xchg
cmovs
data16
mov
and
dec
sub
outsb
stos
fistpl
stos
into
out
leave
pop
out
test
scas
xor
pop
mov
xor
and
adc
mov
cld
or
sub
push
cltd
jo
into
cwtl
cli
inc
mov
jb
ret
call
test
adc
lea
cmp
int3
adc
mov
jmp
aad
jmp
xor
pop
imul
jl
imul
les
push
scas
and
scas
dec
addr16
or
in
push
xchg
jbe
push
pop
add
int3
add
push
jmp
into
xchg
frstor
sti
dec
mov
sub
mov
jl
lea
dec
test
mov
sub
mov
rolb
in
pop
xchg
inc
shlb
iret
lcall
jg
fstpt
loope
pop
cmp
inc
xor
lods
ror
scas
mov
jbe
adc
int3
jo
jp
insl
lods
cmpsb
in
adc
test
jnp
iret
push
shrb
je
jecxz
aam
shrl
mov
adc
sub
mov
ficompl
inc
and
add
pop
scas
addb
lret
test
enter
sub
mov
stos
xchg
addr16
ja
fbstp
out
adc
cmpsl
mov
pop
rcl
out
xlat
inc
addr16
pop
dec
mov
pop
or
push
dec
fsubl
fists
mov
and
cmp
stos
push
js
lret
pushf
mov
xchg
mov
fnstcw
stos
das
test
shl
lcall
sbb
addr16
cwtl
cmp
xchg
mov
pushf
daa
jg
fdiv
leave
inc
cltd
jbe
ja
aad
neg
shlb
mov
cmpb
sub
add
sub
icebp
aas
call
int
jnp
ret
std
inc
je
data16
mov
cmp
add
fmull
mov
xchg
popf
idivl
ja
lods
push
fnstsw
mov
movsl
fsts
aad
out
push
pop
push
dec
dec
stos
jecxz
mov
bound
adc
rcrl
cmp
nop
jle
jns
call
dec
add
sub
cmpsl
mov
call
push
ficomps
jle
pusha
jl
inc
cmc
lock
cli
hlt
mov
sub
cmp
lock
fdivl
xchg
scas
or
mov
inc
dec
test
pop
cmc
hlt
pop
fwait
mov
adc
fwait
push
sbb
add
mov
push
pop
mov
fwait
pop
ja
leave
clc
rcll
adc
andl
pop
xchg
fucomip
jle
pop
es
pop
out
rcll
jecxz
rclb
fwait
lods
cmc
mov
mov
jl
mov
call
ja
int3
shl
aaa
cmc
out
pop
xchg
xchg
push
mov
mov
push
cld
lcall
sbb
adc
mov
arpl
mov
jnp
mov
and
xor
dec
mov
xchg
stos
mov
mov
cltd
push
rcrb
andb
mov
mov
jle
push
dec
lcall
ds
pop
xchg
mov
pop
outsb
addb
insb
push
sbb
or
jnp
andb
dec
lods
rorb
enter
mov
push
js
jg
sub
xor
daa
pushf
fs
pushf
inc
sub
repnz
cmp
adc
jo
add
movsb
call
bound
sbb
sbb
arpl
fcmovbe
je
jne
scas
cmc
pop
xchg
scas
mov
mov
inc
or
dec
or
add
push
mov
movsb
mov
push
push
sbb
lret
pop
jne
ret
sub
loope
xor
mov
test
push
or
mov
cmp
sbb
cld
popa
cmpsl
mov
mov
add
hlt
push
pop
outsl
sbb
mov
insl
or
lcall
ret
notb
pop
sahf
test
subb
push
shrb
xchg
sub
sub
pushf
mov
std
aam
popl
cmp
int
cmp
fsubl
ljmp
int3
out
jle
aaa
jg
xor
sub
xor
pop
mov
push
cltd
xchg
push
test
jmp
fnstsw
call
pop
loope
and
cmp
pop
into
pop
sub
pop
lods
sub
scas
repz
scas
test
and
fldenv
enter
mov
pop
mov
mov
inc
mov
aaa
out
fcoms
aaa
scas
cmp
xor
insb
mov
sbb
ret
jnp
pop
mov
popa
mov
test
lods
xlat
cmpsl
pop
sub
sub
inc
fisttpll
mov
movsb
cltd
xchg
push
stos
lret
lahf
push
push
cs
iret
xchg
pop
outsb
push
int3
sbbb
xor
lahf
lahf
dec
scas
sub
movsl
loopne
loop
insl
xor
negb
inc
sub
fisttpll
mov
jl
roll
and
sub
xor
cmpsb
out
mov
mov
subl
out
and
add
rcr
xchg
movsl
push
popf
xor
bound
pop
lods
cmp
addl
fmul
push
jno
loop
addb
jnp
fwait
lods
add
mov
adc
cmp
je
icebp
lahf
aad
in
jecxz
in
and
test
cmpsb
ret
xchg
jno
leave
mov
cli
jl
ja
sbb
dec
xchg
xchg
adc
rcr
cmc
mov
outsl
inc
push
dec
sbb
mov
jae
scas
outsb
nop
adc
pop
out
sbb
arpl
mov
add
rcr
popf
leave
add
aam
imul
ret
cmp
cmp
dec
inc
xchg
std
cmp
dec
xlat
in
test
mov
ret
push
lahf
je
xchg
ja
fincstp
cmp
insb
out
jp
nop
out
xchg
xor
dec
xor
xchg
addr16
dec
sub
icebp
repz
out
dec
fwait
cli
fmull
sahf
mov
in
std
add
pop
cmpsb
dec
inc
les
pop
mov
aam
pop
mov
push
std
imul
push
lcall
lcall
les
icebp
cmp
sbb
psubd
push
sub
mov
adc
sbb
daa
repnz
sbb
jo
or
push
dec
test
pop
pop
dec
into
in
cmpsb
nop
sub
inc
jns
adc
mov
mov
inc
cmp
jmp
xchg
add
icebp
lahf
adc
call
int3
movsb
push
gs
sub
fnstcw
out
fcomip
pop
sbb
lock
sub
cmp
xor
add
xlat
addl
test
mov
ds
jnp
or
or
add
push
push
pop
xchg
addr16
push
cwtl
pushf
sbb
pop
insl
xor
mov
xlat
popaw
cld
popa
dec
mov
jbe
lret
mov
jae
adc
xchg
out
cmp
mov
jno
loope
lods
xlat
mov
sub
hlt
push
inc
lcall
in
sub
pusha
lret
insb
pop
ljmp
jp
jge
jmp
inc
popa
and
add
jecxz
cwtl
dec
push
jae
lahf
mov
or
aas
fs
and
cmp
lret
xor
sbb
gs
jb
aas
sti
ja
movsb
jo
pop
ss
add
insl
scas
rorl
xchg
ret
fiaddl
ret
js
cmpsl
std
cmp
mov
loopne
or
ja
mov
cmp
jnp
or
sub
add
inc
jne
add
pop
nop
ss
fstp
xchg
dec
sbb
and
out
sub
lahf
and
cmp
cmpsb
fiaddl
nop
xchg
mov
sarb
inc
sbb
ds
inc
and
ss
mov
es
pop
push
dec
imul
add
sub
dec
imul
nop
xchg
mov
adc
pop
and
cmp
cmc
loopne
adc
fldenv
das
push
or
add
mov
loopne
push
jmp
or
adc
lret
mov
decl
and
mov
clc
xor
je
fwait
lods
scas
mov
jbe
repz
mov
sub
mov
inc
outsb
imul
imul
pop
pop
jecxz
jmp
sbb
adc
fmull
xchg
cmc
repz
xorl
lock
jp
mov
dec
int
sub
je
sub
lock
adc
and
cltd
nop
adc
in
cltd
xchg
aam
jmp
lods
fadds
testl
adc
out
jns
mov
shll
fadds
xor
xor
icebp
xchg
lret
test
negl
dec
xchg
lahf
test
xor
xchg
decl
xchg
sti
xor
sub
xchg
clc
orb
or
mov
mov
sar
cli
sbb
sub
rcl
ljmp
shrl
inc
mov
insb
mul
sbb
out
pop
icebp
sbb
out
jmp
mov
xor
es
adc
hlt
or
jbe
cmpsl
jae
xor
adc
sbb
and
repnz
notl
adc
call
lcall
inc
mov
jmp
test
xor
push
out
lcall
lahf
push
sarb
cmp
cltd
cld
cld
andb
lret
push
int
stc
cltd
mov
movsl
cli
gs
movsl
ds
and
lea
gs
mov
jle
and
mov
mov
dec
push
jle
fiadds
sbb
mov
sahf
xchg
sbb
pop
mov
arpl
pop
cvttps2pi
pop
mov
cs
mov
shlb
test
sub
std
xchg
test
cmp
cmp
inc
dec
and
mov
sbb
pop
dec
push
lods
inc
mulb
add
lahf
scas
lahf
jl
lret
sbb
sahf
das
cmpsb
aam
test
rcll
and
out
sbb
mov
mov
mov
ss
xor
minps
jns
xlat
rcrl
mov
faddl
jle
imulb
es
repz
ret
add
xor
xchg
mov
inc
push
add
loop
dec
dec
stos
xor
lea
jae
jb
and
movsl
xchg
loop
lock
bound
lret
cmc
and
bound
cmpsb
mov
arpl
mov
or
push
lea
pop
outsb
je
adc
sti
shlb
in
sbb
insl
mov
dec
cmpsl
enter
in
jmp
or
pop
int
mov
add
xor
sbb
mov
fisubrl
pop
inc
adc
sub
inc
push
sbb
stos
xchg
sub
imul
jmp
pusha
popl
sbb
jmp
mov
mov
sub
mov
mov
add
fildl
sub
insl
jmp
or
cmp
lahf
xor
push
pop
xchg
idivl
jb
repnz
sbb
mov
mov
mov
mov
mov
xchg
popa
enter
adc
cmpsb
mov
cmp
aam
lret
sbb
adc
fadd
lock
les
shl
sbb
ficomps
pushl
mov
jg
std
mov
inc
mov
and
push
aaa
lret
shl
jp
jae
fmul
shlb
aaa
xchg
ss
mov
and
cs
xorl
xor
aaa
and
rcl
inc
mov
inc
jbe
mov
push
adc
mov
loope
ja
std
or
jmp
adc
shr
ljmp
sti
xchg
inc
addr16
push
loop
sbb
rcrl
pop
repz
adc
push
mov
inc
out
stos
pop
xchg
or
je
mov
pop
dec
push
push
mov
adc
pop
push
leave
pop
jecxz
cld
out
dec
loope
and
and
adc
ljmp
hlt
cmc
leave
adc
xchg
test
ds
xor
dec
xchg
mov
push
cmpsb
dec
mov
and
push
sub
xchg
inc
fistpll
stos
and
jns
xor
or
and
jno
add
xor
and
add
pop
cmc
sahf
loope
rcrb
pop
xlat
adc
xor
dec
out
dec
pop
lods
fcoms
ds
dec
push
stos
hlt
push
repz
mov
or
adc
xor
mov
xchg
rorl
xor
mov
call
pop
push
xchg
xlat
xchg
push
movsl
out
shrl
cmp
ret
and
das
mov
sub
pop
cmp
sarl
jb
dec
into
xchg
int3
adc
sbb
cmpsb
add
mov
sti
mov
jp
push
jo
dec
jo
jp
pop
dec
mov
sbb
and
jmp
cld
inc
xchg
int
std
sbb
loopne
mov
fsubrl
mov
sub
ljmp
push
xchg
xchg
and
ja
ja
ret
sbbl
sbb
rol
push
lds
repz
aam
mov
mov
mov
adc
test
insb
cmp
loope
mov
insl
adc
imul
mov
shll
jg
pop
adc
jg
inc
xchg
lock
or
or
xor
in
inc
xchg
lds
ret
jae
adc
scas
add
adc
shll
inc
out
in
push
or
sbb
and
adc
mov
or
lods
mov
inc
ret
loop
jmp
stc
adc
xchg
dec
repz
dec
mov
pop
cltd
mov
ljmp
sub
insl
test
clc
dec
mov
sbbl
xchg
inc
fxch
mov
mov
scas
xchg
mov
clc
pop
test
dec
mov
add
sbb
int
sbb
shrl
andb
sub
stos
jmp
push
pop
sbbb
mov
xor
sbb
incl
cmp
sbbb
xor
popf
lahf
sbb
jg
xchg
pop
add
inc
rcrb
sub
dec
call
hlt
mov
inc
dec
adc
ss
nop
hlt
jge
mov
mov
xor
imul
sbb
test
jmp
fsts
jbe
inc
sub
and
adc
in
xchg
notb
dec
in
jo
jnp
cmpsb
adcl
lock
push
and
mov
and
inc
xor
mov
sub
push
xchg
repnz
adc
cmp
fsub
or
cwtl
xor
jbe
ss
inc
jecxz
inc
fwait
and
dec
mov
les
jb
sbb
popa
adc
insl
mov
mov
movsl
and
lock
rcrb
xchg
xchg
jnp
and
and
sub
xchg
data16
stos
push
mov
jno
or
and
fwait
cmp
sbb
dec
aam
cmp
cltd
sub
sub
adc
dec
cmp
mov
outsl
xchg
leave
mov
push
stos
mov
clc
pushf
xor
pop
ret
insl
mov
data16
cld
fucomi
jg
addr16
out
ret
xor
mov
aaa
ds
xchg
sub
rorl
mov
mov
cltd
cmc
push
rcl
rorl
inc
popf
in
scas
push
inc
sub
sti
fsubl
idivb
mov
std
test
neg
pop
mov
fidivrs
push
sub
rclb
mov
push
push
popa
or
je
jbe
mov
lea
xor
fnstsw
jne
inc
mov
test
jno
pop
push
stc
movl
cli
cmp
std
sub
mov
cmp
pop
mov
popa
jg
in
and
lods
and
push
adcb
sbb
add
xchg
xchg
dec
sti
or
in
cmp
std
iret
mov
jnp
divl
fscale
ljmp
mov
and
in
cmovns
fsubrl
push
jb
adc
adc
fs
and
and
add
cmp
loopne
loop
or
out
fstps
jne
popa
in
popa
sub
ljmp
and
fidivs
jae
pop
jns
scas
ds
aaa
pushf
push
mov
cmpsb
inc
sti
and
jecxz
in
xor
movsl
in
imul
insb
mov
out
loop
outsl
lcall
ljmp
aam
popf
sub
pop
push
out
mov
sbb
jmp
xor
arpl
jecxz
imul
das
repz
ljmp
inc
adc
stos
mov
push
les
cmpsl
mov
test
adc
mov
ss
mov
dec
xchg
jp
shlb
adc
stc
mov
push
jp
push
dec
leave
mov
pop
cmp
shrl
sbb
xlat
jge
adc
and
mov
jbe
inc
pop
jnp
pop
clc
xchg
mov
xchg
cmp
pop
mov
push
bound
cmp
shll
pop
sub
out
addr16
adc
push
js
cmp
sbb
inc
ret
ljmp
fisubrl
sub
xor
fs
scas
int
xchg
outsb
test
or
movsb
mov
test
sub
pushl
in
sub
mov
cmp
dec
int
push
iret
push
fisubrs
xor
sub
xchg
cmp
cltd
push
scas
out
call
ljmp
enter
int
add
xor
push
push
ja
jae,pn
sbb
aad
lea
cld
jmp
xchg
push
mov
roll
mov
mov
push
push
jp
and
leave
push
lcall
push
cs
popf
cmpsb
loop
xchg
shll
sarl
mov
lea
mov
addr16
rol
or
andb
adc
sub
vunpckhps
or
add
cmp
xchg
sarl
fwait
leave
mov
das
push
cs
xor
std
xor
sti
xchg
jns
insb
mov
xlat
sub
push
push
imul
push
adc
xlat
pop
inc
dec
xor
add
iret
js
xchg
inc
pop
sbb
lods
push
pop
inc
mov
cmp
fistpl
in
jnp
sbb
dec
fildl
fsubrs
xchg
in
je
jg
xlat
imul
fstpt
push
dec
sahf
les
xor
xlat
or
add
lds
mov
scas
xchg
jnp
outsl
jmp
sub
mov
cltd
idivb
push
mov
push
mov
pop
mov
std
clc
test
je
int3
mov
cmp
bound
jae
dec
addr16
ja
mov
mov
lret
hlt
adc
insb
cmp
mov
lds
sub
lcall
push
iret
mov
dec
mov
fnsave
jmp
cmc
pop
sarb
push
movsl
movsl
sub
inc
aad
out
movl
les
or
dec
mov
xor
mov
xlat
or
ficompl
and
push
cli
jecxz
sub
mov
jnp
pushf
iret
lds
mov
mov
mov
repnz
mov
movsb
dec
es
fdivl
xchg
or
sbb
cwtl
adc
shlb
stc
ret
xchg
outsl
cmp
lock
rcll
push
sti
mov
mov
pop
cltd
daa
xchg
xor
mov
repnz
pop
and
jne
cmpsb
sub
fsubl
cmp
mov
pop
imul
je
shrb
stos
fcompl
fists
loop
ja
aaa
repz
dec
mov
xchg
cld
sbb
out
or
xlat
or
cmpsl
pop
mov
pop
fadds
movsb
mov
aas
out
fsubl
lods
add
flds
fiaddl
mov
lahf
pop
out
push
hlt
aas
gs
jmp
sti
sub
jno
fld
push
ds
pop
jge
mov
out
fnstsw
cmp
aam
jns
aam
cmpsl
mov
pop
jnp
sub
pop
in
aam
lods
pop
jne
cmp
adc
fsubrl
repnz
add
mov
icebp
mov
pop
cmc
mov
int3
add
sbbl
jg
stos
mov
test
lret
and
lods
pop
cmp
xchg
dec
cmp
popf
xchg
xchg
cmpsl
sub
out
les
lds
mov
psubusw
jbe
pop
mov
rol
cmc
lds
ljmp
dec
xor
hlt
insl
fnstenv
adc
ljmp
adc
jne
ficomps
rcll
mov
loopne
fwait
jne
fstl
sub
scas
sub
push
ja
sbb
paddusw
cld
paddusw
std
divl
movsb
shrl
loop
pop
fldt
pushf
lret
jb
out
lods
sbb
repnz
sub
mov
mov
cmpb
mov
scas
pop
ja
inc
mov
fstl
aam
and
dec
ljmp
enter
leave
rep
lcall
lds
mov
dec
adc
jmp
in
mov
fldt
cltd
xlat
sbb
mov
mov
sbb
sub
sbb
jne
cmp
stos
pop
sahf
aaa
fwait
cmp
add
sti
push
pop
push
mov
dec
push
dec
ficompl
push
ljmp
ss
sbb
int
cmc
mov
aas
xchg
or
lds
sub
adc
stc
push
sub
fwait
xchg
js
lods
and
mov
push
mov
hlt
cmp
ss
popf
cmpb
sbb
push
mov
int3
mov
js
testl
stos
cmp
mov
inc
mov
mov
sti
add
dec
fisubrl
dec
or
push
mov
es
fs
xchg
xchg
aaa
ret
and
dec
push
lret
dec
push
or
int
in
arpl
das
sub
insb
mov
clc
dec
and
sub
in
jns
test
mov
ss
add
dec
mov
scas
repz
mov
lods
dec
xor
lods
ss
ret
into
adc
rorb
inc
adc
pop
je
inc
mov
test
loop
mov
in
pop
popf
mov
fs
pop
fcoml
adc
add
test
xchg
inc
enter
cmp
scas
sbb
out
cltd
add
add
mov
add
or
mov
xchg
mov
bound
inc
in
mov
inc
sbb
mov
sub
and
push
outsb
lea
rcrl
inc
test
dec
movsl
sub
and
sub
out
push
mov
mov
jmp
ss
sub
mov
mov
imul
xchg
sbb
test
adc
dec
xchg
lock
xchg
mov
jno
mov
sarl
lcall
shlb
sbb
stc
push
jle
rcpps
adc
rorb
les
roll
add
push
int3
mov
sar
pop
scas
push
sub
inc
fsubs
cli
arpl
faddl
xchg
bound
sbb
insl
adc
cmp
mov
call
into
aad
mov
in
pop
pop
aad
lret
xchg
inc
in
arpl
mov
push
jecxz
and
push
sbb
jl
xor
repnz
mov
fadds
jbe
enter
outsb
cmp
mov
xor
mov
fcoms
mov
fbld
andb
rcrb
lods
xor
sub
ss
mov
push
and
inc
cwtl
mov
push
shll
push
addr16
dec
push
add
lret
insl
adc
jp
push
dec
sub
out
mov
popf
out
out
mov
sbb
add
testl
aad
mov
jno
lock
push
sub
inc
xchg
add
mov
inc
pusha
clc
jb
push
stos
fstps
dec
les
cs
out
pop
movsb
aam
xchg
sbb
cmp
sub
sahf
inc
in
xchg
les
jb
into
mov
pop
adcb
mov
mov
xor
mov
adc
xchg
jg
shl
imul
push
xchg
fistps
and
mov
mov
shrl
in
dec
fmulp
adc
into
pop
in
pop
sub
mov
ret
daa
fcmovnu
les
adc
mov
es
loop
out
outsb
rclb
movsl
pop
pop
lods
stos
ss
cmp
pop
rcl
ss
pusha
aad
sar
loopne
push
fwait
jb
adc
mov
ffree
mov
and
lock
inc
mov
insb
shlb
repnz
shrl
dec
xchg
mov
dec
lret
cs
in
int
std
push
aaa
cmpsl
lods
sbb
sbb
cmpsb
decb
adc
mov
rcr
cwtl
jo
jmp
gs
cltd
add
inc
or
rol
clc
inc
cmp
lret
in
adc
pushf
rorl
leave
cmp
dec
add
and
inc
leave
pop
cmpsl
loop
lahf
or
sub
mov
insb
xchg
xchg
in
jb
lods
lahf
insl
xchg
and
adc
outsb
dec
push
lea
pop
mov
xchg
insb
sbbl
push
xchg
dec
adc
mov
sbb
sbb
pop
mov
mov
jns
pop
sbb
fldt
jne
popa
mov
inc
fcoms
lods
aaa
mov
or
movb
cs
leave
cltd
pusha
pop
xchg
in
mov
xchg
aad
into
shrb
mov
mov
pop
insl
sbb
add
jb
or
sub
ljmp
test
push
inc
push
xor
imul
xchg
sbb
xchg
shll
lods
xor
xchg
scas
aas
ret
sbb
ds
pop
mov
xchg
jbe
dec
xchg
aas
jb
ror
clc
into
stos
fsts
jbe
pop
ds
mov
cmp
add
dec
and
mov
adc
pop
inc
pop
sbb
aas
mov
movsb
or
popl
rolb
sub
mov
jae
lock
sub
aas
dec
arpl
pushf
cmp
std
cmp
mov
mov
fmuls
jle
sbb
imul
cmpsb
cmp
xor
push
fistl
inc
lcall
lods
add
lods
daa
pusha
sub
adc
mov
push
jo
push
cmp
pushf
mov
pop
lock
add
jo
addl
push
jb
mov
jecxz
adc
pop
xchg
or
std
and
push
cmc
mov
fsubrl
icebp
movsl
pop
fildl
pop
rcll
call
dec
scas
mov
or
enter
push
xor
hlt
mov
je
test
in
cmpb
ret
mov
push
cltd
icebp
lcall
mov
xchg
popa
mov
pop
lcall
mov
mov
mov
dec
xchg
add
xchg
movsb
xchg
adc
jno
mov
push
pop
imull
nop
scas
jae
dec
sub
xor
push
cld
pop
shrb
cmpsl
sbb
or
sub
fsubr
ja
mov
mov
xor
stc
mov
sub
pop
cmp
add
imul
loop
and
pushf
xor
xchg
xchg
sub
iret
xor
repz
loop
jns
leave
les
mov
push
loop
adc
movb
sbb
test
push
or
pop
xchg
movsb
mov
xchg
stc
pusha
jmp
adc
jl
cmpsl
dec
and
push
mov
cmc
or
lods
scas
test
cs
push
es
dec
in
mov
ja
or
fwait
dec
adc
in
push
sbb
jne
out
cwtl
imul
adc
sbb
lret
adc
movsl
or
idivl
pusha
cmp
ficomps
jae
movsl
adc
pop
inc
mov
in
xorb
sbb
inc
dec
pop
sub
add
sbb
repz
xchg
scas
adc
jno
jnp
cmp
repnz
jge
sbb
inc
inc
mov
jnp
mov
sarl
and
cwtl
scas
enter
push
push
mov
push
cltd
mov
call
mov
inc
push
imul
inc
mov
jg
outsl
test
jle
out
lahf
in
mov
mov
mov
lds
int3
mov
popf
xchg
in
lret
xchg
leave
sti
int3
xchg
sbb
ljmp
hlt
jb
leave
popf
mov
add
cmpsb
int
adc
pop
mov
lcall
ss
dec
adc
mov
cmp
add
gs
ret
dec
dec
fsts
pop
xchg
adc
in
push
mov
jmp
xchg
jb
push
mov
mov
sub
movsb
mov
add
lret
arpl
pop
pop
imul
test
jecxz
je
int3
sub
push
test
push
mov
inc
out
pop
jns
stc
pop
push
js
rolb
incl
mov
sub
clc
inc
xor
mov
scas
xor
mov
cmpsb
sbb
mov
add
pop
cmpsb
roll
cmpsl
and
mov
xchg
jno
addr16
push
int
lret
mov
in
inc
decb
gs
fs
and
test
cli
lret
js
cmc
add
shll
jmp
test
cmp
add
scas
cmp
nop
inc
ja
jecxz
das
pusha
les
imul
aaa
dec
int
adc
mov
icebp
mov
or
cmp
jo
rcl
push
lea
push
and
inc
pop
jb
ret
mov
pop
push
ret
mov
jle
int3
lock
inc
ss
stc
cmp
out
xchg
shlb
sub
mov
insl
mov
xor
sbb
jmp
inc
lods
ss
add
stc
or
imul
push
dec
mov
cmp
sti
cmc
sahf
js
add
sahf
mov
arpl
push
rcr
or
sbb
sbb
js
repnz
xor
lods
popf
dec
mov
sub
add
jmp
cmp
bound
mov
inc
add
dec
fsubr
pop
mov
cmpsl
pop
cmc
stc
jnp
mov
and
lds
xchg
push
cmp
test
sbb
inc
cmp
inc
lret
sub
xor
sub
sub
adc
sti
fdivl
pop
lea
add
stos
test
test
testl
iret
xor
jb
cmp
mov
mov
repz
out
push
xchg
cmp
xchg
inc
out
repnz
icebp
or
push
mov
pop
jno
jl
push
insl
out
jb
sub
lods
pop
in
rcrb
push
mov
pusha
pop
das
lods
xor
jp
cmp
xchg
hlt
push
xlat
dec
sbb
xor
mov
adc
in
test
insb
loopne
push
sbb
fdivrp
add
adc
sbb
sbb
cmp
lods
ss
inc
or
jmp
inc
sbbl
pop
test
lret
or
add
mov
aas
mov
cmp
fcompl
sbb
addl
xchg
inc
adc
lcall
popl
sub
in
sub
sbb
mov
mov
pop
or
aam
incb
jae
and
sbb
pop
cmp
inc
int3
mov
adc
xchg
add
xchg
pop
pop
mov
jecxz
mov
sbb
inc
mov
xor
xchg
lock
mov
adc
int3
xor
outsl
jle
mov
mov
iret
in
jle
out
adc
xor
aad
inc
emms
nop
cli
enter
add
or
xlat
into
lcall
xchg
scas
jb
pop
inc
subl
in
aas
xchg
cmc
test
mov
adc
ja
and
sub
dec
sbb
jmp
mov
daa
mov
xchg
cltd
xchg
mov
mov
dec
cltd
jecxz
movsl
cmp
stc
pop
into
sub
mov
or
lock
and
mov
dec
nop
jbe
push
cmp
dec
sub
cmp
into
sub
pop
adcb
mov
lcall
ror
sub
sub
pop
pop
inc
das
jl
jmp
aam
outsl
pushf
pop
in
xor
mov
and
cmpb
popa
push
lock
inc
mov
or
aad
inc
cmp
mov
out
sbb
lret
repnz
outsl
les
mov
pop
mov
and
pop
sub
jmp
dec
cmc
add
push
test
lea
cmp
sahf
cli
inc
adc
lcall
push
fwait
push
and
rclb
lds
ret
ja
push
sub
arpl
push
or
mov
incl
push
enter
test
sub
dec
xor
sbb
ss
cmp
mov
divb
test
jns
sti
fucomp
jo
mov
jo
mov
ret
mov
dec
jp
test
notl
nop
repnz
ja
xchg
ss
adc
xchg
aad
xchg
inc
enter
insl
jne
bnd
negl
or
das
stos
xlat
push
shrl
hlt
xchg
jge
repnz
jns
cwtl
sahf
movsl
fnsave
inc
push
mov
add
lcall
sbb
xchg
jl
xor
popa
mov
std
dec
cmpsb
push
jmp
leave
xchg
mov
fs
rcrl
sbb
arpl
shlb
loope
jp
hlt
dec
mov
pop
clc
adcl
fsubrs
das
scas
insb
push
shrb
pop
xlat
sbb
sub
fildl
pusha
pop
decl
fs
repnz
cld
aad
adc
enter
test
aad
mov
fistps
adc
sti
ljmp
repz
nop
mov
mov
push
xor
inc
leave
jno
ret
inc
hlt
arpl
daa
sub
lret
sbb
jmp
mov
push
xor
mov
shll
test
add
mov
outsb
xor
pop
jbe
cmc
mov
cmp
fisubrs
or
jle
loop
mov
lods
cmp
leave
sbb
enter
cmp
mov
iret
jmp
inc
fwait
in
sarl
aam
sbb
stos
xor
mov
out
sbb
test
pop
lcall
faddl
std
aaa
mov
dec
xchg
add
xchg
xlat
dec
mov
cwtl
cs
push
pop
pop
mov
push
aam
aaa
jg
xorb
sub
xor
jle
cvtdq2ps
daa
push
dec
clc
jg
mov
cmp
in
mov
enter
mov
xor
outsl
cmpl
lea
sbb
cs
push
mov
int3
gs
push
test
mov
outsb
pop
aad
pop
xchg
mov
outsl
cs
jb
sarb
repz
sub
sub
ljmp
js
pop
mov
imul
je
jmp
les
sbb
inc
xor
std
inc
cmpsb
movaps
push
leave
stc
adc
xchg
lods
pop
push
xor
ja
jmp
aad
addr16
jge
testb
jl
aam
adc
mov
cmc
fistl
gs
rcr
pop
push
sti
scas
sub
dec
fwait
sarl
xchg
cmpsl
imul
aam
dec
loop
cmp
or
enter
inc
add
push
aam
jnp
call
mov
movsl
xchg
and
pop
out
sub
out
and
mov
in
pop
test
das
and
sti
jmp
and
adc
mov
loop
sub
cltd
mov
std
ss
movsl
inc
mov
pop
sub
fwait
mov
lea
mov
xchg
xor
cmpb
sarl
mov
loop
push
or
xor
in
pop
push
outsl
into
inc
mov
popf
fucomp
sbb
xor
ss
aaa
mov
push
nop
dec
push
cmp
push
mov
les
mov
ss
pop
jp
mov
popf
xchg
add
rol
sbb
push
or
out
pop
iret
aam
adc
pop
leave
cmpsb
rol
dec
mov
pop
sbb
cmp
mov
not
insl
mov
xor
imul
daa
fxch
stos
fstpt
lods
ds
fidivs
out
pusha
push
lret
pop
pop
push
xchg
ss
dec
mov
sub
lea
in
not
jnp
ja
neg
push
fcoml
testb
scas
sarb
fcmove
dec
scas
mov
adc
mov
xor
and
push
insl
push
iret
and
or
popf
xlat
xchg
daa
lods
int3
iret
dec
pop
jbe
push
sbb
rcll
xor
adc
cs
sub
sahf
cmp
mov
jmp
inc
mov
xchg
pop
xchg
xchg
inc
cmpsb
out
push
add
ret
insl
or
dec
imul
mov
ss
imul
mov
call
cltd
insb
and
test
rcll
mov
inc
mov
push
lcall
mov
aam
stos
and
mov
mov
inc
sbb
sbb
out
jge
sbb
xor
scas
cmpsl
xor
fdivp
shl
push
cmp
pushf
cmp
int
inc
push
je
add
iret
fstl
pop
stos
cld
inc
add
lock
je
test
lea
pop
pop
dec
mov
sti
icebp
xchg
repnz
cmp
inc
shrd
mov
push
les
in
shlb
adc
loop
cmpsl
jmp
mov
mov
jnp
and
out
jle
add
pop
or
mov
xchg
aas
cwtl
dec
pop
pop
int3
test
rcr
xchg
push
in
out
xor
daa
mov
sbb
nop
lahf
negb
push
push
ror
test
int
cmp
mov
xor
scas
push
pop
cli
int
xorb
in
lahf
lds
mov
jae
sahf
dec
jg
inc
jg
xchg
imul
xlat
dec
jp
mov
push
jnp
bound
lds
rorl
jo
mov
mov
xchg
shll
into
ljmp
sbb
imul
mov
sub
imulb
insb
stc
dec
mov
iret
jmp
mov
lea
gs
mov
iret
mov
jns
cmp
stos
push
mov
lock
jg
push
and
push
mov
inc
cmp
neg
xchg
test
push
and
inc
xor
int
add
push
scas
outsb
or
jmp
cmpsl
mov
outsb
lret
xchg
push
div
pop
test
mov
mov
mov
das
push
xchg
xchg
pop
pop
sbb
lret
nop
pop
loope
jbe
out
pop
and
cli
xor
adc
or
add
out
pop
repz
sbb
mov
lret
cmp
frstor
jnp
out
loop
pop
out
outsl
inc
test
fs
cmc
adc
cmp
sarb
mov
outsl
in
mov
mov
ss
pop
xor
or
outsb
imul
pop
rcrl
gs
push
dec
fsts
notb
jbe
out
mov
add
nop
out
xchg
pop
add
adc
in
fidivs
add
sbb
cltd
sub
adc
inc
push
es
fnstcw
out
bound
lret
pop
push
mov
cmp
sbb
into
push
pop
scas
std
inc
xchg
out
ret
mov
pop
test
sbb
mov
and
jp
sub
and
xchg
je
push
inc
sbb
xor
jns
mov
xlat
xor
out
and
or
or
scas
add
outsb
js
inc
mov
lods
pop
sbb
lds
in
punpckldq
mov
pop
pusha
scas
sub
mov
mov
iret
orb
stc
jne
popa
clc
pop
das
lret
es
cmp
dec
pop
mov
jo
xor
stos
daa
xor
pop
jbe
sub
jg
or
add
mov
xor
sti
vpshaw
leave
sub
dec
jb
sti
outsl
adcb
insl
icebp
mov
or
or
mov
mov
iret
add
inc
cltd
mov
jnp
jmp
popf
fnstsw
mov
dec
clc
mov
jmp
pop
pop
fistl
xchg
in
ds
jmp
popa
pop
mull
xchg
inc
int
ret
lahf
sbb
sahf
lret
adc
repz
jns
jge
fsts
sahf
outsl
sbb
ja
pusha
mov
in
push
mov
add
mov
jnp
push
xchg
or
fsubrs
push
out
and
pop
shlb
or
cmp
xchg
fcmovnu
pop
rorl
mov
out
and
cld
and
xor
test
jb
iret
xor
loop
pop
and
jnp
mov
sub
pusha
xchg
test
jge
scas
enter
out
lret
jae
sub
fwait
mov
push
xchg
pop
cmova
mulb
push
sahf
mov
in
and
repz
mov
into
pop
cmp
xor
jg
hlt
mov
xchg
in
add
out
hlt
lahf
jl
or
push
loopne
enter
pop
movsl
hlt
stos
push
jle
lock
fstps
inc
arpl
xor
mov
push
adc
jle
scas
stos
lret
mov
out
fcomp
pop
int3
outsb
movsb
stos
cmova
test
jne
lret
lahf
pusha
xor
jecxz
or
lahf
js
add
sub
mov
xor
popa
push
add
popa
sahf
xchg
mov
in
xchg
push
mov
insb
sbb
push
and
mov
lret
mov
xor
mov
or
jecxz
mov
out
in
pop
rcr
xchg
and
lahf
jle
pop
lret
ret
bound
mov
push
xor
fucomp
xor
or
insl
xchg
es
cmp
iret
dec
out
outsb
mov
in
sbb
repnz
outsb
addr16
out
fistpll
popf
out
divl
test
jle
lretw
mov
aad
inc
sub
add
adc
jae
leave
ljmp
jecxz
dec
in
shrb
push
sub
or
mov
mov
inc
les
mov
jge
incb
fs
jnp
imul
xchg
hlt
rcl
push
gs
jle
jae
mov
jle
or
rclb
jp
pop
mov
dec
dec
mov
mov
xchg
rcrl
lret
push
fwait
lods
pop
mov
mov
sub
add
scas
test
pop
adc
rorb
enter
pop
cmp
sub
in
inc
inc
sub
mov
mov
add
loope
push
push
or
pushf
pop
sbb
rorb
push
adc
and
jl
popa
dec
jno
cmp
jae
aad
pop
adc
std
sub
test
loop
adc
test
xor
and
sub
cmpsb
and
sub
je
pshufw
movsl
inc
add
fisubrl
dec
cs
jge
scas
and
dec
push
lret
mov
and
inc
loop
out
pop
loop
pop
pop
stos
in
popa
std
mov
arpl
outsb
or
mov
push
nop
add
adc
or
pop
or
roll
inc
in
daa
out
repz
lds
sti
fucomp
or
and
aas
leave
jmp
push
out
push
stos
ror
repnz
iret
sbb
mov
add
aas
xor
or
nop
pop
pop
adc
cltd
push
pop
xchg
rclb
fwait
jmp
es
icebp
or
pop
mov
sub
movsl
lret
mov
imul
pusha
mov
jb
sub
sub
repnz
enter
lods
popf
mov
jae
jnp
inc
push
sbbl
and
pop
push
pop
mov
jecxz
ret
aam
leave
fwait
ret
bound
movsl
jnp
test
xchg
test
push
loop
enter
jecxz
rcll
arpl
fsubl
add
enter
jp
clc
cmc
mov
or
cli
push
jle
sbb
sbb
lahf
sbb
iret
mov
mov
fdivs
mov
jne
or
hlt
pop
xor
inc
into
addb
adc
rcrb
fwait
fwait
in
cmc
daa
lock
in
into
xchg
jno
and
fsts
sbb
stc
push
out
sbb
mul
lea
lahf
or
push
cmp
jecxz
dec
lock
pop
pop
inc
adc
loop
dec
or
out
jnp
push
or
sub
movsl
stos
adc
dec
lds
mov
arpl
jecxz
adc
rorl
test
mov
cmc
stc
sub
pop
push
cltd
nop
scas
lock
push
pop
cmp
mov
jae
mov
pop
into
shll
and
stos
into
mov
and
cmp
push
movsb
cmp
push
pop
lock
in
xchg
pop
or
sbb
fsubrs
out
stos
jmp
insb
cld
xor
scas
push
pop
dec
icebp
fstps
mov
pop
push
xor
cld
mov
and
insl
shll
sub
mov
adc
cmp
fistl
lahf
addr16
inc
sub
xchg
mov
push
call
jp
xchg
scas
add
mov
cmp
pop
cmp
xchg
jmp
and
flds
stos
pop
jecxz
lret
aad
inc
mov
adc
cltd
dec
xchg
aaa
jbe
shlb
fsubrp
adc
xor
pop
add
fdivrl
mov
lock
stos
sahf
fcomps
test
arpl
pushf
call
clc
lods
ss
daa
hlt
cld
movsb
xchg
int
lahf
ljmp
imul
pop
imulb
iret
mov
stos
rclb
inc
je
movsb
in
ss
pop
jp
xchg
mov
dec
jp
sbb
call
shrl
loop
stos
daa
shll
jl
mov
xchg
iret
xchg
pop
popa
fmull
loop
lods
jle
inc
adc
scas
sub
mov
pop
mov
lea
shrl
stos
ja
pop
mov
or
dec
and
int
mov
mov
pushf
ja
sbb
mov
mov
push
stos
push
in
or
stos
dec
or
jno
pop
arpl
cmpsl
rcrb
sub
adc
mov
push
cs
bound
cld
lea
sti
push
push
out
popa
and
not
lea
scas
or
sub
js
rcrb
fs
aas
pop
xchg
cmp
xor
xchg
sbb
xor
loop
mov
mov
outsl
ss
addl
mov
sub
and
decb
pop
ljmp
cmc
shlb
sub
dec
aas
cli
ss
addr16
cmp
test
les
fstpl
sbbl
xlat
fldenv
test
push
sbb
arpl
fisubl
lds
fstpt
outsl
adc
pop
pop
outsl
loop
popa
and
lret
push
adc
pop
mov
and
jb
xchg
jb
mov
jl
hlt
aas
jecxz
incl
out
scas
cmc
and
pop
in
bound
ds
cmp
or
test
jge
jbe
mov
mov
jbe
and
xor
stos
push
pop
aaa
add
pop
pushf
mov
nop
push
sti
fstl
push
test
pop
lock
outsl
std
mov
mov
sub
popa
je
sbb
mov
mov
jmpw
mov
sar
lds
adc
mov
push
adc
mov
inc
sbb
mov
mov
inc
rcl
pop
in
adc
into
std
xchg
stos
and
push
dec
cs
int
dec
dec
test
or
loope
arpl
in
pop
in
ja
cmp
icebp
aad
lock
movsl
xchg
movsl
mov
ds
pop
lea
mov
lea
add
adc
lods
pop
pop
and
call
dec
add
jmp
in
jae
hlt
pop
popf
add
notb
scas
int3
fsubrs
sbb
dec
xor
rolb
mov
daa
andb
dec
add
pop
lcall
mov
inc
mov
loop
lock
dec
adc
cltd
lods
add
ror
xor
out
cmovae
dec
test
out
inc
or
dec
cmp
and
jle
insb
dec
mov
shll
jg
out
rcrl
jne
inc
out
loop
adc
movsl
cli
enter
cmpsl
popf
or
mov
insb
popa
mov
pop
push
lret
mov
lods
sbb
mov
repnz
aaa
mov
shrb
mov
mov
dec
popl
mov
pop
pop
daa
sahf
ds
xor
fldl
cmpsl
jp
and
outsl
jmp
arpl
mov
aad
es
into
repz
and
gs
add
mov
mov
mov
outsl
aam
push
popa
hlt
adc
xor
pop
fisttpll
mov
sti
mov
dec
cld
dec
movsb
insl
nop
pushf
test
jge
cmpsl
lods
fdivrs
xchg
pop
iret
cltd
dec
stos
out
dec
cmpsb
into
sbb
mov
insl
push
xchg
mov
shrl
cwtl
add
inc
mov
push
adc
add
mov
mov
loop
pop
jl
inc
dec
or
xchg
inc
sub
leave
push
add
loopne
loop
xor
xor
in
mov
jmp
jno
or
rcr
fwait
and
jne
and
enter
in
xor
movsl
mov
cmp
mov
fcmovnb
inc
push
mov
sbb
inc
sub
push
xchg
fs
inc
in
outsl
fbstp
imul
dec
fdivs
out
adc
shlb
stos
andl
fwait
data16
mov
ss
mov
push
xchg
lds
adc
mov
xchg
sahf
mov
mov
push
and
ret
sbb
sbb
imul
sbb
scas
pop
inc
push
sti
lahf
adc
jmp
repnz
or
and
push
adcl
mov
xor
adc
ret
ret
in
aad
inc
movsb
push
or
pop
shll
mov
mov
dec
clc
outsl
mov
lcall
pop
jp
mov
dec
xor
movsb
lret
push
pop
scas
push
jmp
pop
mulb
dec
lock
sub
adc
cmp
call
and
fnstenv
daa
insl
movb
lods
pushl
cwtl
cld
fs
sti
repnz
jg
popa
or
jecxz
push
aas
jns
shll
scas
sub
sti
scas
lods
jae
xchg
mov
call
xor
mov
xlat
cmp
fistps
pop
loope
in
jo
in
bound
lods
sbb
xchg
mov
aam
aaa
and
nop
mov
cs
or
sub
xchg
dec
subb
jnp
mov
sub
test
out
jl
icebp
add
dec
xchg
inc
mov
inc
dec
ret
cmc
push
loop
push
cmpsb
xchg
daa
aas
pop
cmp
pop
inc
repnz
test
lahf
int
mov
jl
jmp
xchg
push
scas
mov
jg
inc
cmp
add
sub
les
jl
inc
cmp
jne
add
mov
push
aad
imul
popa
jecxz
lods
adc
sbb
lods
mov
xor
mov
movsb
xchg
dec
mov
lahf
mov
push
stos
lahf
xchg
shrl
bound
dec
test
jns
mov
lods
dec
mov
outsb
mov
outsb
mov
daa
mov
addr16
adc
faddp
push
push
fwait
push
jbe
divb
mov
adc
aad
scas
repnz
mov
lods
in
lcall
lods
scas
add
and
mov
shll
adc
in
cmp
dec
push
jno
outsb
lds
jbe
jb
out
jle
ja
pop
int
loopne
or
jg
dec
cmp
call
add
and
pop
cmp
std
push
lea
nop
cld
adc
mov
mov
pop
inc
fdivrs
xorl
sub
inc
jmp
pop
jl
outsb
mov
mov
push
repz
sarb
cmp
clc
push
lahf
daa
rorb
in
add
mov
mov
iret
inc
fsubrs
fwait
mov
in
lods
sbb
add
mov
and
mov
enter
bnd
sub
xchg
mov
jae
sarl
jne
outsb
xchg
insb
aam
inc
pop
ss
jbe
mov
cmc
fadds
daa
lea
cmc
jbe
iret
mov
rcrw
mov
mov
push
gs
cmp
push
inc
sbb
cmpsl
in
out
mov
mov
push
daa
testb
icebp
jns
xchg
cltd
fsubs
cmc
mov
loop
out
lods
or
cs
dec
popf
les
in
sti
in
es
push
cltd
fidivrl
cmp
cmp
shrl
and
std
clc
or
adcl
push
lret
sbb
scas
jne
jae
lods
inc
mov
mov
push
push
adc
add
adc
mov
mov
imul
rcrb
scas
int3
imul
push
lock
in
or
push
mov
fwait
js
and
loop
fbld
or
packsswb
pop
roll
mov
jo
dec
enter
sahf
popa
fdivs
push
cmpsl
mov
jb
in
adc
jnp
sbb
int3
dec
mov
pop
cli
loop
xchg
push
es
mov
ret
pop
addl
jns
xor
hlt
insb
insb
mov
in
jp
stc
call
outsb
jae
mov
mov
cltd
push
loop
mov
clc
outsb
loop
mov
push
dec
out
push
dec
aam
popf
inc
adc
mov
jg
mov
mov
jle
sub
adc
cmpsb
int
push
adc
bound
test
ljmp
fldcw
rclb
sub
es
mov
shr
pusha
cmpsl
sub
adc
std
aad
fbstp
lds
rcr
rolb
pusha
mov
jecxz
loop
fwait
nop
xchg
testl
jbe
shll
repnz
lret
and
je
test
adc
ljmp
pop
jle
jmp
insl
pop
cmp
jle
out
sti
mull
jae
dec
dec
xchg
pop
dec
and
and
icebp
lea
xchg
fcomps
shr
or
mov
jp
push
sti
sub
pop
aaa
xchg
sub
sbb
dec
test
popf
scas
sub
sbb
pop
dec
loope
imul
jns
shll
lahf
imul
pop
or
mov
jmp
and
lods
icebp
push
and
stos
or
int3
stc
outsl
mov
inc
mov
icebp
test
fistpl
lds
push
lods
jo
aaa
cmp
in
sar
xchg
repnz
adc
test
cmp
xchg
or
out
sub
inc
xchg
mov
xlat
sub
sbb
cmp
pusha
jecxz
xorb
outsl
icebp
push
in
jmp
push
shl
push
inc
movsl
cmpsb
movsb
add
sti
push
pop
cs
mov
mov
cmp
push
movsl
jns
pop
mov
inc
movlps
adc
in
faddl
mov
lret
cld
mov
insb
mov
inc
or
push
arpl
imul
lock
clc
dec
add
fs
incb
test
adc
out
push
rolb
nop
cmp
add
js
add
stc
and
adc
xchg
pop
xor
jno
push
icebp
inc
cmpb
add
or
cmp
inc
jb
push
inc
and
add
inc
jb
add
add
fs
aaa
addr16
inc
or
stos
mov
in
out
test
icebp
xor
cmp
mov
lods
cld
fisttpll
cs
mov
shl
je
push
outsb
popa
sti
in
sarb
pop
jge
mov
test
sbb
dec
aaa
mov
mov
push
repnz
lcall
pop
push
cmpsl
cmp
mov
js
xlat
idiv
inc
repz
icebp
jecxz
xor
int
out
fbstp
dec
and
jl
out
mov
mov
xlat
add
sarb
bound
shr
xor
rcl
inc
push
loop
lahf
mov
dec
stc
adc
test
jnp
std
aam
out
insb
lahf
mov
jle
fs
clc
mov
lock
loopne
out
fs
xchg
cli
cli
cmp
loopne
fcom
xchg
das
jmp
push
xchg
jmp
in
jns
mov
test
mov
and
pop
sub
ss
pop
aad
fsubrl
insb
add
push
dec
out
and
js
dec
cmp
add
mov
cs
xchg
inc
sub
cmp
and
dec
mov
sar
mov
ret
push
add
mulb
frstor
pop
js
dec
xchg
and
xor
jmp
shll
and
in
mov
adc
jns
or
rolb
nop
out
adc
inc
sub
or
test
ja
fs
cmc
mov
data16
stos
inc
jge
inc
aam
jge
lods
dec
mov
inc
or
outsb
xchg
pop
pop
adc
jns
or
push
mov
repz
out
pop
mov
nop
cld
add
das
dec
mov
test
fistps
out
in
dec
add
dec
sub
adc
lcall
mov
sub
push
dec
repz
and
xchg
mov
xchg
leave
test
popa
das
dec
pusha
cs
xor
cmp
jne
inc
or
add
enter
aad
imul
or
lcall
cwtl
xchg
repnz
pop
dec
cli
std
loope
pop
shrb
das
adc
jge
xlat
int
inc
xlat
not
mov
cmp
cmp
inc
dec
int3
loop
cmp
outsb
icebp
xor
push
lods
es
and
jae
mov
inc
or
orb
xchg
mov
push
add
rep
mov
in
adc
pusha
ret
in
mov
into
pop
dec
xchg
addr16
inc
test
imul
outsb
lea
xor
bound
notl
imul
insl
popf
and
mov
lods
cmp
test
popa
js
adc
xchg
inc
pop
mov
mov
cmp
adc
push
ss
je
and
mov
sbb
clc
mov
rcll
addr16
sub
mov
push
inc
aam
push
cmp
arpl
adc
dec
fwait
iret
add
test
xor
inc
stos
in
cmc
inc
dec
js
pusha
aam
and
out
or
dec
and
inc
cmp
mov
test
inc
ret
js
test
sub
and
xlat
jl
xchg
repz
fdivs
in
or
mov
int
jno
or
icebp
and
out
lock
pop
scas
sub
fwait
and
repz
hlt
mov
and
push
gs
std
push
inc
repz
jecxz
dec
sbbb
imul
xor
shrl
mov
pop
push
jnp
mov
fst
mov
and
and
cs
clc
jp
dec
xlat
mov
inc
jo
mov
in
pop
nop
loop
out
aaa
pushf
cwtl
outsb
mull
sbb
mov
stc
inc
xchg
adc
mov
fdivrl
add
nop
sbb
add
xchg
push
cld
inc
jo
pop
jbe
aaa
inc
add
or
pmulhw
cmp
rorl
and
psrld
mov
leave
add
nop
sbb
add
nop
sbb
add
xchg
pop
pop
inc
jb
pop
sbb
add
xor
add
fiaddl
test
sub
les
add
cwtl
mov
fs
add
jle
mul
pop
outsb
nop
aas
cmp
iret
nop
pop
jne
js
pop
inc
inc
pop
and
lods
inc
pop
sbb
dec
pop
cmp
iret
add
mov
stos
pop
fmul
jge
xchg
xor
xchg
lock
fstpt
lea
dec
sbb
pop
adc
shll
cs
jae
cmp
inc
movsb
fwait
sub
add
sahf
xchg
test
sahf
push
mov
lahf
out
test
xor
ficomps
mov
mov
rclb
push
dec
push
int
mov
outsb
xchg
add
sbb
push
mov
mov
mov
add
jmp
out
out
movsl
pushf
pop
and
fadd
mov
cmp
into
loopne
daa
push
inc
cmp
inc
in
pop
inc
sub
cmpl
xlat
out
loope
or
xor
aad
pusha
sbb
ret
add
mov
mulb
push
xor
fnsave
clc
dec
sti
fbld
stc
aas
jnp
mov
cli
sbb
mov
fisubrs
push
jne
sub
pop
sarb
daa
lods
aam
jp
imul
sti
push
in
imull
lahf
mov
testl
adc
xchg
jb
lock
shlb
jle
push
negl
lahf
mov
fimull
std
aas
jbe
sti
mov
fstl
xor
and
divl
or
scas
mov
jmp
jge
pop
mov
jg
cld
inc
jecxz
fbld
cmp
jg
pop
ljmp
cmc
shlb
sub
dec
aas
jecxz
mov
pushf
shll
orb
fisubs
or
jp
in
gs
jbe
fiadds
adc
sub
xchg
sbb
mov
add
jae
out
orl
push
push
sub
jns
in
adc
aaa
cmp
adc
mov
jg
adcl
sub
iret
lahf
mov
fnstcw
hlt
push
jae
push
loop
mov
add
cwtl
outsl
cmp
jbe
js
les
outsb
ficoms
inc
cmp
cmpsl
daa
sbb
xchg
xchg
addl
push
aad
fisttpl
xchg
cs
fstpt
mov
les
dec
lods
adc
add
ja
xchg
mov
daa
inc
mov
mov
push
push
inc
bound
cwtl
cld
sbb
mov
cmp
jp
notb
xchg
and
ljmp
mov
or
and
fs
fnstenv
jle
sbb
in
jno
rep
frstor
divl
inc
xor
movsl
mov
mov
ja
jnp
rcrb
pop
sbb
std
cmpsb
test
out
lahf
filds
sbb
jg
cmp
cmp
mov
mov
into
cmovo
fwait
es
jle
push
cld
push
push
std
insb
aam
insl
sbb
movsl
pop
in
push
or
mov
xor
jne
cmp
mov
fwait
sahf
pop
call
stos
fstps
dec
adc
inc
sub
insb
mov
inc
je
add
mov
jae
cmp
es
enter
mov
add
decl
mov
or
dec
psubq
sbb
push
leave
js
je
jae
loope
cmp
mov
xchg
jg
aaa
sti
pop
jno
in
aam
pop
std
dec
decb
cmpsl
test
and
std
pop
mov
inc
sub
add
inc
sbb
jb
in
and
fldcw
pushw
pop
fisttps
aas
sti
popa
incl
decb
xchg
pop
adc
ret
imul
stc
inc
idivl
gs
and
mov
dec
push
cmpl
or
xor
cvtps2pd
loop
jg
push
or
rcrl
pop
sti
ret
outsl
mov
cmp
stos
lds
or
clc
and
jl
lock
xlat
and
loope
and
mulb
das
call
mov
dec
dec
push
leave
sub
jo
jmp
xchg
ret
xchg
sarb
xor
iret
push
aas
fimull
cmp
mov
hlt
xor
daa
out
and
mov
out
int
fsub
pop
cwtl
lods
push
adc
xor
cmpsb
jb
icebp
cmp
or
rcrl
and
cmp
jg
out
mov
dec
cltd
into
jnp
pop
mov
cmp
adc
pusha
int
stc
in
xchg
shl
lock
mov
mov
aas
decl
incl
arpl
das
lock
jbe
mov
inc
lds
adc
add
sub
in
or
pop
aas
pop
jo
in
adc
negb
push
mov
pop
lret
insl
cli
sbb
xchg
and
sub
inc
or
bound
loope
sar
mov
call
aaa
and
sbb
insb
mov
mov
mov
bnd
inc
sub
test
loopne
jns
subl
xchg
jge
cli
and
mov
jp
sub
popa
push
adc
push
sbb
scas
ljmp
add
std
or
loopne
test
lret
nop
pusha
test
cs
sub
add
push
sub
cmp
test
or
call
pop
mov
jge
mov
cmc
enter
sti
aam
fsubp
cltd
out
sahf
xchg
sbb
adc
addb
inc
sub
mov
sbb
fsubr
aas
cld
gs
dec
out
dec
mov
lods
push
adc
pop
lock
incl
test
jg
repz
daa
cld
jae
mov
je
xchg
jmp
xchg
push
divl
out
or
fnstenv
out
push
adc
jns
sbb
into
shlb
mov
mov
and
jecxz
or
outsl
ds
and
mov
scas
jle
dec
mov
pop
fistpll
push
out
jp
out
fldt
aaa
jo
rclb
imul
jecxz
xchg
mov
xchg
lds
mov
push
inc
xchg
push
adc
jnp
pop
push
mov
sub
pop
pop
cltd
lret
xchg
jns
popf
jnp
repz
sti
out
out
iret
mov
fldt
rorb
pop
adc
jp
aad
stos
adc
and
jbe
jp
dec
push
scas
bnd
and
mov
xchg
mov
lret
lea
sub
arpl
insb
adc
les
test
jb
aas
or
sub
arpl
scas
aad
mov
jmp
xor
cltd
pusha
popf
test
mov
jb
mov
mov
mov
pop
je
bound
jge
in
add
leave
cltd
lret
xchg
xchg
push
scas
negb
inc
xchg
cmp
pop
stos
fbld
mov
push
cmp
iret
loopne
adc
aam
push
jbe
mull
push
divl
xor
push
mov
cmp
xchg
adc
push
loop
rclb
xor
push
mov
jge
rcrb
sbb
shr
out
jl
iret
cmp
dec
out
xlat
lahf
cmp
pop
hlt
fildl
mov
xchg
jne
stos
sub
not
mov
inc
push
fcomip
push
scas
mov
sbb
mov
mov
xor
inc
fnstsw
jno
inc
out
inc
out
dec
push
mov
inc
mov
ljmp
cwtl
and
mov
scas
addr16
shrb
ds
stc
or
lahf
cli
adc
add
and
inc
add
mov
hlt
and
xor
push
xor
fidivrs
imull
jp
push
cmpsb
scas
xchg
ficomps
add
mov
into
dec
xor
jbe
push
icebp
and
sarl
mov
mov
outsb
outsl
mov
mov
add
pop
jecxz
vcvtpd2psx
jmp
inc
mov
ret
xchg
jns
inc
xchg
jbe
int
push
subb
lcall
lret
xchg
mov
in
stos
adc
fwait
push
les
fs
or
inc
pop
fidivrs
fnstcw
or
push
xor
mov
xchg
mov
cli
daa
dec
subl
lret
ret
lods
adc
scas
insb
push
mov
call
enter
inc
mov
insl
mov
imul
and
cmp
andb
std
loopne
lret
popa
push
fldt
aaa
aaa
or
enter
mov
repnz
shr
push
daa
lea
iret
xor
mov
ds
int
imul
jl
dec
cwtl
scas
pop
outsb
dec
loop
pop
out
sti
sub
mov
ret
lock
xchg
jae
div
dec
lahf
mov
xchg
popf
sub
mov
mov
jl
lods
cmp
add
mov
cs
mov
cmp
jne
jge
shrl
jne
or
call
and
scas
sub
xchg
inc
mov
es
sub
ret
cmp
and
fsubp
stos
shlb
lcall
or
loope
in
cmp
outsb
in
enter
stc
and
fisttpll
pop
mov
ds
sahf
les
pusha
xchg
loopne
sbb
ljmp
repz
inc
add
mov
cmp
test
sbb
pop
sub
orl
mov
mov
iret
in
in
fcmovnb
sbb
sbb
cmp
sarl
mov
gs
mov
aam
jge
mov
pop
adc
add
dec
dec
sbb
mov
fsubl
out
mov
repz
lret
dec
test
fcompl
scas
mov
xchg
sbb
fwait
push
inc
dec
push
mov
jp
push
xor
int
adc
lea
in
or
imul
shrl
int
cmp
ja
sub
cmpsb
xchg
jbe
adc
mov
sbb
jo
jmp
pop
rorl
ret
sub
push
cmp
mov
mov
stos
hlt
or
mov
push
adc
pop
and
call
dec
mov
xchg
mov
in
test
ret
sbb
jmp
add
jno
xor
or
sub
in
adc
ja
lret
cmp
pusha
imull
add
jo
jmp
xor
sbb
jnp
adc
jnp
subl
mov
shll
cltd
sbb
ficoml
xchg
push
out
jo
inc
and
or
jmp
pop
lahf
sub
fwait
mov
cmp
pushf
push
shll
outsb
vpaddsw
scas
test
push
sbb
bound
ss
jge
cmpsb
cmp
enter
mov
stos
div
push
push
mov
xchg
sbb
int3
push
test
test
push
data16
test
std
pop
adc
test
fldenv
xor
jns
inc
into
movsl
mov
dec
or
mov
dec
push
fwait
sub
cmp
sub
push
stos
xor
sbb
jle
cld
cmp
push
jp
jae
pop
push
pushf
mull
cltd
out
popa
inc
sti
aaa
gs
mov
sbb
ljmp
dec
shll
cmp
jne
in
or
mov
mov
stos
adc
pop
int3
insb
shrb
cwtl
mov
jns
imull
test
push
mov
daa
xchg
mov
loope
mov
sub
test
lea
outsl
das
sar
mov
dec
jo
mov
mov
xchg
ja
xchg
dec
out
testb
push
sub
addb
popa
out
fadds
jb
adc
pop
xlat
daa
dec
inc
adc
push
cli
xor
fcoms
popa
sti
pop
adc
cmpsl
shrb
add
rolb
cmc
lock
lods
push
pop
fwait
int
add
xchg
add
inc
xchg
add
mov
or
xchg
or
mov
mov
pushf
pushf
aaa
daa
mov
gs
scas
pop
or
sub
pop
rolb
je
loope
mov
pop
dec
push
das
mov
push
mov
cwtl
leave
and
nop
adc
incl
sahf
hlt
add
sbb
fstpl
sub
es
sti
pop
xor
jnp
adc
mov
aam
hlt
jmp
scas
insl
add
inc
fwait
or
dec
out
jbe
inc
dec
icebp
cli
or
push
pop
jae
fsubrs
jmp
inc
je
iret
xchg
call
mov
xchg
shl
outsl
mov
in
aas
cltd
mov
mov
aaa
repnz
sub
or
push
jle
jo
and
lods
aad
jb
lret
sub
mov
cmp
add
adc
push
je
enter
sbb
or
enter
and
add
and
es
jbe
out
lcall
in
pushf
sahf
out
push
sbbb
mov
aaa
test
push
xor
aaa
push
mov
loopne
les
adc
add
aaa
or
movsb
sub
vhaddpd
and
repz
shrl
pushf
jp
rcrb
lahf
insb
pushf
sbb
add
add
adcl
aaa
shrl
les
push
repz
adc
lret
sub
int
push
fcoml
xchg
sub
adc
je
movl
jl
or
sbb
or
in
jmp
out
bswap
pop
sub
sub
sbb
aam
adc
ljmp
ds
sbb
ret
mov
repnz
testl
pusha
sbb
mov
push
pop
scas
mov
or
sbb
in
push
and
or
decl
jg,pt
test
jns
cs
call
jnp
imul
in
jmp
psadbw
pop
mov
push
dec
test
mov
lods
sub
xlat
imul
adc
mov
orb
test
sub
and
or
pshufw
ficompl
push
daa
xlat
pop
stos
push
sub
sti
cmp
daa
jne
in
imul
ljmp
xchg
jae
push
mov
xchg
pushf
sub
jno
test
in
pop
pop
push
adc
ja
push
or
or
mov
adc
int3
push
push
faddl
ret
mov
lods
dec
mov
shll
mov
or
test
pop
outsl
and
or
cmp
sub
or
popf
int
push
mov
sub
sbb
icebp
mov
sub
mov
jae
push
push
jg
xor
daa
es
in
outsb
jo
pushf
sub
fs
jp
jns
mov
movsb
jne
imull
and
mov
cmp
mov
inc
push
jne
aaa
push
mov
and
int3
push
bnd
add
mov
jmp
mov
mov
popf
test
add
inc
push
push
adc
sub
ljmp
dec
bound
adc
cmpsl
jnp
std
xchg
cmp
pop
sub
jp
xor
rolb
inc
popa
sub
movsl
lea
xchg
add
ja
lcall
cmc
dec
inc
mov
pusha
nop
insl
sbb
ror
stc
add
and
std
or
je
fcomip
sbb
ret
ficomps
xor
lods
into
out
push
inc
mov
mov
adc
push
cs
rorb
xchg
std
loope
pop
jmp
inc
sbb
mov
mov
cmpsl
pop
push
addr16
inc
push
adc
cld
pop
test
test
fnstenv
fdivrs
xor
sub
inc
ficomps
neg
push
xchg
xor
dec
xor
mov
out
lret
rclb
in
pushf
lds
inc
ljmp
dec
std
inc
jecxz
mov
stc
jg
mov
loope
iret
jle
adc
and
mov
stc
jl
or
mov
imul
cli
or
out
and
movsl
push
js
mov
pop
popf
int
and
xchg
push
lods
sarl
xor
and
pop
cld
enter
cld
out
mov
mov
cmp
push
mov
inc
push
movsl
rcl
divb
loop
push
adc
clc
rol
test
ret
jge
arpl
fdivl
out
mov
imul
jnp
mov
xor
push
mov
sub
outsb
mov
push
repnz
cli
mov
mov
fs
aaa
jno
dec
ja
popf
test
cld
sbb
imul
frstor
mov
sahf
popa
inc
push
xchg
and
jnp
fcomps
push
inc
dec
fs
ret
cmp
xchg
jo
mov
dec
mov
mov
xchg
loopne
popf
data16
data16
scas
clc
cmp
inc
cmpsb
sahf
jecxz
call
std
sbb
mov
mov
jmp
ret
pop
xchg
jmp
xlat
clc
pop
mov
jmp
jno
xlat
fcomi
push
inc
mov
jp
xlat
jle
scas
cld
xor
stos
sub
push
xchg
ficomps
mov
jns
xchg
sbbb
xchg
out
and
jle
mov
sbbb
sbb
lods
push
jmp
jbe
test
xor
mov
loope
hlt
leave
pop
xlat
xchg
ljmp
fisttpl
cmc
push
mov
pop
cmpsb
repz
outsl
sbb
mov
nop
pop
push
mov
jnp
stos
add
push
mov
sub
pop
jge
jns
jne
inc
stc
xchg
incl
sbb
fldcw
pop
dec
lcall
xor
jg
cmp
push
in
push
mov
stos
imul
pop
mov
push
sub
and
fwait
aam
shrl
sti
insl
and
mov
andl
mov
cmp
sbb
stc
mov
add
loop
xor
xor
in
leave
out
inc
nop
test
enter
in
jp
jns
xor
adc
insl
add
jnp
cld
scas
popa
adc
addr16
mov
test
sbb
cmp
mov
lahf
mov
arpl
cwtl
sti
inc
fildll
and
xchg
mov
aam
ror
cli
and
jge
pushf
sub
fldt
sub
mov
mov
pusha
enter
and
sbbb
cmp
rolb
roll
xchg
pop
fs
fimuls
sbb
mov
mov
stc
mov
mov
pushf
pop
dec
mov
mov
jge
in
jns
dec
mov
inc
mov
push
testl
xchg
pop
cmp
loope
inc
enter
xor
pusha
xor
cmp
jae
daa
pop
inc
imul
mov
xor
jno
push
mov
sub
std
fimuls
inc
int3
popa
mov
mov
fwait
enter
shr
jp
dec
fimull
fildll
lods
pop
sub
clc
sbb
add
outsl
insl
mov
pop
clc
cmp
add
out
mov
lret
insl
call
sub
imulb
push
lods
cmp
xchg
sbb
popf
repz
lods
aaa
hlt
sub
dec
push
sti
and
daa
sbb
lds
inc
sarb
clc
sbb
xchg
or
shl
push
and
or
bnd
cmp
mov
stc
imul
sub
in
andb
jo
cmc
pop
jge
clc
adc
aam
hlt
insb
enter
jl
out
aam
jae
add
pop
cs
sbbb
rcrl
xor
scas
jbe
mov
out
repnz
bound
mov
fdivr
jo
cld
sbb
and
mov
in
sarl
mov
testb
iret
mov
or
cmc
das
dec
dec
addr16
inc
mov
pop
xchg
xchg
hlt
scas
dec
cli
adc
mov
inc
dec
adcl
loopne
int
jmp
push
xor
xor
lret
jmp
push
xchg
mov
mov
jno
lds
in
sbb
in
insb
orl
dec
cmp
dec
cmpb
pop
inc
jge
lods
insl
add
test
push
pushf
scas
mov
hlt
lret
sub
ss
outsb
lods
into
or
and
lahf
mulb
lahf
push
nop
and
rorb
sub
inc
mov
outsb
repz
adc
dec
push
push
fstl
and
adc
jmp
mov
mov
es
xor
mov
add
in
sub
and
loope
lea
mov
xlat
dec
xchg
inc
mov
xor
sub
nop
sbb
sbb
inc
imul
testb
push
push
lods
cs
inc
jb
or
repnz
cmp
fs
add
inc
push
mov
xchg
shll
stos
xchg
cmp
daa
and
imul
mov
cli
scas
imul
repz
gs
or
das
daa
mov
push
cmc
pop
fcoms
adc
sub
cltd
and
jb
jo
mov
imul
cmp
sbb
test
mov
outsl
fwait
in
lds
cmc
daa
cld
jae
adc
pop
mov
jae
pop
cmpsl
mov
jg
jae
and
pop
call
into
push
adc
int
lret
pop
xchg
sbb
les
shr
and
loope
pop
lahf
ja
mov
call
inc
cmp
ss
sbb
dec
data16
sub
lods
mov
cmpsl
out
hlt
not
dec
pop
mov
mov
insl
push
jmp
cmp
adc
int3
jns
pop
push
mov
mov
cmp
sub
sub
cmpsb
popa
inc
fnsave
lods
fcmovnbe
mov
fwait
in
out
movsl
call
cltd
dec
pop
std
repnz
test
jp
fsubrs
sub
jno
insb
idivl
sbbl
fs
xor
lods
xlat
sub
lock
fs
mov
sti
mov
push
jp
mov
inc
push
mov
aad
in
inc
movsl
clc
sub
sbb
xlat
and
enter
adc
push
movsl
mov
mov
sbb
or
pushf
lret
enter
xchg
add
dec
in
dec
aad
enter
jecxz
mov
popf
and
mov
xchg
movsb
push
fdivp
rolb
dec
ds
dec
mov
mov
jecxz
dec
jg
ljmp
sahf
jle
test
mov
sbb
dec
jne
rcl
xchg
popf
jbe
mov
sub
inc
and
xchg
sbb
in
and
in
hlt
jbe
pop
push
loop
ror
filds
adc
sbb
cwtl
mov
out
hlt
push
mov
xchg
pop
pop
fcoms
push
aam
mov
adc
jns
and
lods
call
sbb
pusha
loop
jne
mov
pop
sti
test
push
inc
mov
nop
and
or
andb
es
cmp
inc
cmpb
jle
jge
add
pusha
fwait
shr
subb
jl
xchg
jbe
jae
jl
push
mov
push
pop
mov
rcrb
sub
popf
sub
cmp
dec
scas
ja
sahf
popa
push
mov
xchg
pop
push
test
fwait
xchg
stos
xchg
pop
icebp
mov
mov
outsb
xchg
sti
lret
push
and
or
stos
adc
inc
add
dec
mov
dec
push
sbb
mov
lea
jmp
or
xchg
mov
test
xor
hlt
push
test
and
mov
cmp
fsubp
cld
dec
mov
inc
jne
adc
push
push
adc
pop
loope
repz
xchg
insb
xor
mov
jo
clc
and
and
icebp
testl
sbb
mov
imul
sub
gs
loope
in
mov
mov
dec
mov
popa
sub
push
mov
sahf
inc
out
fsubrl
mov
in
pop
stc
js
shrl
lcall
shll
push
jmp
dec
xor
cmp
pop
arpl
jae
stos
inc
mov
xor
idivb
cwtl
jne
int3
push
rcll
shrb
inc
inc
sub
out
repnz
cli
imull
mov
fwait
insb
dec
daa
loope
xor
adc
mov
out
ret
push
inc
mov
xchg
or
dec
mov
clc
mov
rcll
or
aas
pop
icebp
xchg
sbb
adc
popf
dec
mov
jno
mov
jge
mov
int
sub
call
fs
fists
ss
aam
sub
push
or
std
xchg
das
add
cmp
mov
outsl
out
je
push
cmc
push
add
pop
and
mov
inc
jbe
mov
jle
or
cli
cmp
frndint
ret
xchg
popf
mov
sbb
xor
cmp
nop
fimull
or
xchg
cmc
cmp
jbe
dec
imul
mov
loopne
sub
stc
jbe
jl
mov
das
push
das
xchg
mov
js
add
push
jbe
add
xchg
pushf
mov
xchg
and
or
xor
or
ds
out
arpl
outsb
cmp
mov
xchg
das
scas
rcr
add
repnz
add
in
xor
movntq
jmp
rcrl
lcall
inc
out
out
inc
xchg
xlat
jg
mov
rclb
repz
call
decl
test
ficomps
cmc
mov
sbb
in
dec
pushf
jb
push
scas
jl
in
push
iret
or
ficoms
adc
pop
push
clc
pop
incl
in
insl
mov
mov
mov
cmp
repnz
mov
lock
jns
lea
rcrb
js,pt
xlat
pandn
adc
btc
cwtl
std
jne
dec
fldcw
xlat
hlt
fisttpll
stos
push
inc
jl
xor
repnz
mov
pop
dec
xor
xchg
jecxz
movb
out
adc
sub
loop
or
mov
cmp
pop
mov
loop
dec
out
mov
inc
sub
and
pop
lahf
stc
pop
dec
xchg
jae
test
cltd
scas
clc
js
daa
popf
or
adc
mov
cwtl
popa
add
mov
xchg
or
lods
jge
sub
push
pusha
ficoms
int3
lcall
xchg
pavgusb
push
loope
xor
ret
jge
loope
imul
push
lods
ss
mov
ja
pop
mov
xchg
or
fadds
orb
bound
jmp
jmp
outsl
clc
sbb
mov
mov
inc
xor
and
inc
push
fisttpl
add
or
lock
iret
flds
clc
sbb
jg
pop
divb
push
or
in
sarl
add
or
add
mov
push
out
xchg
repz
pop
hlt
imul
cmpsb
pop
jae,pt
pop
and
push
adc
sub
out
xchg
inc
mov
ud2
mov
loope
hlt
inc
xchg
mov
scas
cmp
jno
mov
xor
pop
fs
mov
jge
testl
inc
mov
jnp
mov
cmp
xor
rcrl
rclb
mov
mov
rcrb
mov
popf
mov
pop
popf
mov
shrb
xlat
pop
and
roll
dec
and
and
mov
mov
mov
pop
mov
mov
call
out
pop
pop
lods
mov
jmp
jl
xor
int3
hlt
mov
sub
rcl
lahf
test
std
lods
cmp
fcmove
jge
int
dec
sub
xlat
pop
add
mov
or
add
mov
loope
roll
push
push
fdivl
dec
adc
iret
loop
sub
mov
sti
jge
mov
test
std
cld
pop
jmp
cltd
inc
cs
addr16
fldcw
loopne
decb
fnsave
scas
popf
jecxz
mov
sub
cmp
loope
repnz
mov
scas
rorb
sarl
xchg
pop
loop
xchg
sarb
fdivrl
int
stc
ficomps
das
cmp
push
stc
xchg
ja
xchg
mov
cmpsl
pop
int
out
xchg
mov
rcll
push
into
xlat
int3
jg,pn
mov
inc
inc
pop
insl
cmp
and
mov
repz
dec
and
sbb
mov
pop
leave
aam
shrl
vpmulhuw
fbstp
xchg
fs
jb
cmp
addr16
cmp
popf
mov
adc
mov
sbb
test
shl
pop
inc
test
mov
xchg
jp
movsl
insl
clc
and
mov
iret
sar
out
adc
jmp
loop
mov
filds
aam
adc
jecxz
imul
divl
test
pop
shr
mull
pop
aaa
jb
into
call
into
rol
push
enter
test
aaa
fs
and
cwtl
jmp
dec
pusha
cmp
push
add
push
and
icebp
mov
adc
cmc
lcall
dec
mov
xor
lcall
pop
inc
fs
outsl
add
mov
inc
lods
movsb
and
pop
dec
rcl
je
cmp
jg
arpl
adc
es
mov
cmp
mov
mov
jo
aaa
adc
rorb
mov
mov
sub
adc
scas
xchg
scas
lea
push
jp
dec
xor
in
and
movsb
xchg
mov
xchg
stos
mov
cmp
dec
js
cmp
sahf
sahf
xor
inc
dec
mov
jp
dec
push
daa
cmpsb
cmpsl
xchg
aam
pusha
test
and
fwait
pushf
addl
idiv
subb
inc
xor
inc
sahf
icebp
lds
idivl
shll
lret
cmp
shrb
push
enter
in
es
int3
xor
sub
and
xchg
jnp
or
add
outsl
dec
cltd
into
sbb
mov
add
xor
aaa
mov
jb
idivl
test
shr
mov
push
ret
pop
xor
xchg
xchg
mov
test
aas
outsl
mov
dec
pop
fs
xor
loopne
loopne
xor
pop
cli
mov
ss
cmp
push
xchg
iret
lock
mov
mov
sub
adc
movsl
cmpsl
jb
xor
xlat
cmp
call
cmc
adc
testb
adc
push
sub
jbe
inc
push
adc
or
xchg
push
insb
dec
dec
in
gs
scas
loopne
lods
out
inc
sarb
fnsave
shl
jmp
insl
xlat
mov
daa
cmpl
sub
aaa
aam
pop
adc
sub
out
add
and
repnz
inc
xchg
incb
inc
xchg
test
and
test
jle
out
mov
scas
aad
push
nop
inc
inc
xchg
loopne
out
incb
mov
pop
test
jge
int3
rorl
lock
and
sbb
pop
jp
sbb
icebp
stc
in
add
sub
dec
add
mov
mov
jbe
lret
ja
ds
mov
sub
popa
outsl
jbe
push
outsl
test
fucomi
pop
in
addb
sub
cwtl
sbb
faddl
scas
inc
aam
push
inc
dec
in
fsubs
mov
pop
jecxz
daa
mov
pop
mov
loope
xchg
dec
and
jb
mov
imulb
daa
cs
jbe
clc
push
cmp
sub
decb
ss
cltd
dec
adc
movsl
and
sbb
dec
sbb
addr16
mov
xchg
dec
or
push
xchg
xor
mov
in
fisttpll
mov
cmp
rcrl
cmc
push
pop
iret
lea
inc
dec
or
fdivrs
add
or
ds
cwtl
xchg
stos
adc
jb
gs
pusha
jmp
sti
dec
aam
xchg
adc
add
jmp
dec
inc
sbb
stc
push
sub
xchg
xchg
data16
gs
mov
or
lret
adc
imul
inc
push
cmp
and
xor
std
cmp
inc
pushf
mov
sub
dec
out
jns
cs
ljmp
out
stos
pop
cmp
jae
flds
lret
inc
in
inc
ja
mov
fucom
repnz
mov
das
mov
ljmp
fwait
rorb
and
add
nop
and
jno
lds
adc
repz
mov
sub
xchg
adc
pop
out
fs
or
repz
cmp
inc
xor
test
ret
and
mov
sbb
clc
popf
and
dec
movsb
fsubs
sbb
test
into
test
jbe
add
sbb
cld
xor
lock
int3
in
adc
push
mov
enter
sub
test
cmp
add
ja
inc
jns
and
jg
in
idivl
jle
gs
xor
rolb
sti
jg
fst
cld
jp
div
fidivs
mov
jle
aas
mov
dec
jle
adc
add
bound
mov
sbb
add
es
subb
jnp
fstpt
ret
xchg
adc
mov
mov
stc
arpl
jg
and
arpl
fistpll
lret
push
dec
rcll
pushf
or
add
rolb
pusha
sub
sub
std
mov
movsl
inc
cltd
lcall
ret
sbb
xor
jns
mov
sbb
push
sbb
aas
xchg
xchg
mov
push
jne
lods
out
out
jmp
leave
jnp
cmp
push
lret
lcall
test
jnp
fwait
add
sbb
inc
sub
sarb
imul
rcll
mov
push
and
and
mov
dec
jl
lods
or
movsl
inc
das
push
scas
fdivrp
and
jmp
fwait
pop
xchg
test
dec
xchg
pop
jnp
xchg
cmc
adc
push
pusha
scas
sar
jge
dec
push
mov
push
cwtl
mov
cld
in
in
decl
cmp
xor
jno
xor
out
adc
mov
xchg
and
test
rclb
mov
lahf
push
loopne
mov
lock
jg
mov
out
es
mov
pusha
lock
std
popa
push
movsl
inc
xchg
mov
mov
xchg
test
aam
lds
sbb
push
jae
mov
mov
xor
jno
addr16
lods
xor
push
lods
push
adcl
into
adc
outsl
and
stos
negb
pushf
scas
mull
mov
adc
jno
cmp
push
mov
int
fisttpll
movsl
push
jg
out
ljmp
pushf
push
push
mov
jecxz
sbb
cmp
in
mov
in
mov
inc
out
in
jnp
mov
mov
push
insb
dec
mov
in
mov
sub
pop
xrelease
fildll
iret
cmc
jbe
jle
lods
pop
or
idivl
sub
push
mov
clc
or
jne
nop
adc
pop
xor
xchg
iret
out
popa
dec
es
imul
es
dec
rcr
xchg
push
int
call
ds
icebp
decl
ja
jp
push
stos
testb
pusha
cmpsb
stos
lret
addr16
insb
mov
pop
inc
arpl
dec
stos
rcll
xor
outsl
or
mov
inc
dec
fstl
mov
dec
lahf
push
insl
hlt
xchg
and
xchg
inc
paddsb
into
push
por
push
push
or
push
mov
jecxz
xchg
and
ss
sub
mov
js
jecxz
addl
hlt
pop
jae
xchg
jle
scas
sbb
pop
dec
mov
pop
mov
mov
xor
icebp
jmp
jnp
test
adc
xor
and
pop
sbb
leave
jl
fwait
mull
clc
jno
mov
mov
push
xchg
sub
pop
dec
mov
mov
stos
test
imul
in
lea
cmp
and
aas
or
and
xor
in
divl
int
cltd
push
out
push
push
shlb
pusha
into
sbb
mov
xor
loopne
and
mov
test
push
ljmp
pop
jle
in
out
icebp
test
std
push
js
in
jbe
adc
mov
mov
and
or
dec
cmp
mov
cmp
mov
push
sub
inc
lock
push
cmp
lea
adc
notl
xor
lret
les
imul
rcll
adc
push
xor
adc
cmp
mov
mov
mov
ja
cli
adc
adc
mov
ss
cmp
dec
adc
pop
sub
sti
pop
xor
push
scas
pop
and
mov
mov
nop
icebp
sbb
push
int3
sbb
inc
inc
dec
lret
arpl
add
cltd
insl
std
shl
mov
lock
fneni(8087
popf
sub
dec
rorb
in
or
cltd
cmp
roll
fdivrs
mov
adc
mov
das
xor
fsubrl
xor
push
adc
out
push
push
sub
das
jne
in
movsl
nop
jno
dec
jns
jle
sub
dec
adc
push
test
cmp
push
scas
xor
int
push
cmp
push
mov
inc
sbb
stos
stc
popa
pop
lea
in
dec
shl
lret
sbb
loope
jecxz
pop
testl
xor
and
sub
adc
mov
dec
mov
inc
popa
ret
ret
xchg
mov
add
out
les
adc
pop
test
cltd
sahf
mov
daa
dec
std
popf
cmp
stos
shl
jne
mov
add
repz
scas
iret
cmp
jns
mov
xchg
in
int3
add
enter
pusha
sub
and
adc
mov
jmp
setns
sbb
mov
movsb
imull
scas
stc
out
std
mov
in
xchg
mov
push
out
inc
adc
push
lret
fdivl
mov
fldl
inc
fildl
adc
cmp
push
rcrl
arpl
aas
loop
pop
xor
fcom
lcall
mov
loope
iret
sub
push
ja
add
insb
fstps
jg
inc
push
and
fs
jg
leave
and
mov
clc
cmc
adcl
int
shrl
loopne
testl
push
cmpsb
push
xchg
fidivrs
sbb
ficomps
lock
sahf
cltd
sub
pusha
inc
sbb
cmc
mov
pushf
js
stos
xchg
shrl
sbb
mov
adc
je
shll
les
sbbl
jns
jnp
adc
addb
dec
fnstsw
mov
and
sub
jne
or
mov
daa
jbe
leave
inc
push
xor
sbb
in
xchg
fimuls
jb
sbb
pop
xor
sub
testb
adc
jae
dec
stc
mov
xor
and
xor
add
jb
vpshufd
sub
mov
cwtl
mov
mov
int
jge
mov
add
lahf
pop
xchg
cli
mov
xchg
int3
sbb
jae
jp
testb
fisttps
loope
xchg
pusha
mov
stos
ss
inc
cli
repnz
ljmp
rorl
loope
lret
xor
push
cmc
pop
pop
pop
pop
aas
dec
xor
subb
push
cltd
div
xchg
gs
and
pop
pusha
xchg
cmp
sub
repnz
les
inc
fsts
aas
mov
jnp
loop
daa
outsl
sbb
mov
mov
push
push
test
xchg
add
stos
imul
xor
pop
sub
inc
ss
leave
outsl
pushf
mov
ror
addr16
movsl
inc
std
daa
leave
decb
mov
inc
lods
mov
lods
lret
ds
and
sbb
lea
and
popa
in
xchg
subb
enter
lds
push
inc
push
sbb
sub
scas
negl
shrb
sbb
es
mov
mov
xchg
test
inc
decb
insl
xchg
or
mov
scas
mov
ss
push
jg
jnp
nop
pushf
repnz
add
lock
and
cli
xchg
mov
sahf
rorb
cmp
movsl
push
push
mov
xchg
adc
outsb
inc
and
lds
add
jns
mov
sub
xchg
push
inc
mov
inc
cmc
clc
xor
add
aad
cmpsb
js
jmp
add
loop
add
pop
xor
xor
loopne
mov
push
xchg
scas
das
rcrb
out
mov
call
cmp
xor
gs
and
dec
loopne
push
cmpsb
sub
ljmp
fldt
sbb
nop
ja
repz
mov
sbb
mov
int3
out
sub
pop
hlt
push
mov
orl
testl
icebp
sub
push
add
mov
sbb
out
loop
add
mov
cmp
mov
cli
xor
push
dec
stos
mov
and
jnp
mov
fists
mov
sbb
xlat
push
pop
aaa
dec
dec
lods
pop
cmpsl
cld
mov
mov
push
movsb
nop
mov
pop
push
mov
nop
mov
scas
cmpsb
jae
cwtl
into
notl
popf
ljmp
cmp
push
repnz
fistl
mov
rcrb
mov
fldenv
xchg
or
pop
dec
pusha
out
mov
lods
adcb
loopne
cmp
dec
or
adc
add
enter
push
lea
outsb
lods
jo
in
mov
std
imul
cmp
cmp
cli
cli
or
adc
jg
or
sbb
repz
xchg
push
push
xchg
cmp
dec
push
clc
cmp
adc
jmp
imul
out
push
lcall
mov
and
in
imul
and
les
ljmp
xor
addr16
mov
push
in
pop
roll
push
movsl
xchg
dec
xchg
push
mov
test
push
adc
mov
test
push
hlt
or
sub
and
mov
cmp
shr
nop
xchg
ror
mov
xchg
sbb
call
lahf
bound
test
adc
xchg
push
xor
and
or
insl
insl
push
xor
mov
push
int
iret
sub
fnstsw
imul
pop
test
lods
or
decb
js
mov
jb
adc
push
mov
jo
iret
stos
mov
xchg
fs
mov
xchg
jmp
sbb
pop
xchg
jns
mov
pop
jb
fistl
inc
inc
aaa
cs
mov
and
sahf
push
aaa
push
or
in
test
movsl
inc
int3
xchg
sub
jle
adc
cmp
ret
arpl
xor
pop
sbb
or
imul
iret
mov
xor
aam
mov
aaa
sub
mov
gs
mov
pop
inc
jb
andb
adc
rorb
pop
cmp
push
jl
movsl
mov
movsb
mov
mov
sub
lods
mov
int3
pop
adcl
mov
push
outsl
lock
mov
aas
popa
push
mov
fwait
bound
sti
aad
mov
fbstp
imul
and
js
in
or
in
out
xor
xchg
shr
mov
inc
mov
cltd
movsl
adc
xchg
and
xor
inc
cld
jge
inc
and
xlat
rclb
push
xchg
dec
test
lods
dec
lret
mov
nop
stc
xchg
cmpsb
cmpsb
loope
aaa
add
cltd
icebp
adc
cmp
inc
out
popa
xor
and
push
cmp
aaa
out
stos
test
push
mov
adc
imul
outsl
lds
and
inc
cli
mov
push
inc
ljmp
mov
clc
pop
popf
test
mov
cmp
in
mov
add
dec
movsb
loopne
dec
jp
jle
stos
inc
int
pop
and
adc
inc
loopne
pop
call
and
int
adc
cmp
add
push
and
xchg
cltd
imul
das
mov
cmc
test
in
mov
je
imulb
ret
dec
dec
inc
sbb
or
xchg
jg
std
push
call
outsl
call
les
or
lea
leave
cmc
and
jb
inc
cs
xor
mov
and
mov
and
cmp
sbb
dec
fidivrs
iretw
xor
repz
sub
jp
push
test
int3
aam
inc
mov
cmp
lcall
sar
ret
in
lock
and
mov
xchg
lret
adc
cmp
xor
pop
mov
push
xchg
sub
and
or
rcl
add
pop
pop
inc
jmp
dec
cmp
or
sub
shll
push
loop
ds
mov
jp
test
inc
jmp
repz
sub
push
mov
aaa
adc
add
sahf
aaa
pusha
push
je
jge
pop
pushw
mov
mov
test
dec
fsubrs
enter
ja
out
enter
test
cltd
stos
nop
push
icebp
cmpsl
dec
je
into
add
test
push
mov
aas
ja
aas
jns
lods
mov
nop
loopne
es
dec
repnz
dec
lahf
loop
add
jb
cmp
movsl
leave
mov
pop
sub
mov
inc
outsb
mov
outsl
sbb
sub
xor
jmp
mov
test
fnstcw
arpl
sub
jmp
mov
ror
testl
adc
sbb
out
add
jb
jb
cmp
jbe
cmp
push
movsl
addr16
push
mov
mov
ja
mov
gs
xchg
out
sub
sbb
ja
aad
jne
pop
loop
fisttpll
cmc
jl
daa
test
sub
cmp
push
cmpsl
lods
mov
jno
mov
in
cmpb
mov
sbb
imul
test
sbb
jecxz
cmpsb
push
sub
push
out
push
lds
stos
fs
outsl
xchg
sbb
and
js
sub
push
cmp
and
mov
insb
out
loope
add
xchg
lahf
ficoml
xor
xchg
mov
insb
jge
inc
mov
icebp
repz
cs
loop
jge
aad
fldcw
aad
pop
jecxz
lock
xchg
loope
mov
push
mov
js
adc
int
or
push
cmc
aas
pop
sub
mov
clc
mov
dec
in
mov
add
ds
stos
bound
divl
leave
adc
jno
push
repz
adc
lret
lods
stos
test
jns
sbb
aad
fstps
mov
jno
test
cli
bound
stos
scas
out
stos
scas
push
test
add
sub
sti
lods
adc
repz
lods
stc
shrl
mov
imul
sub
xor
lahf
sub
or
dec
aaa
xor
lea
out
insl
push
push
sbb
push
insb
je
push
imul
add
xor
xchg
out
cs
mov
stos
push
or
cmc
cld
mov
push
mov
outsb
aam
je
mov
dec
pop
push
dec
lock
push
mov
sub
movsb
push
bound
fbstp
ret
jl
adc
xchg
sub
cmpsl
xor
mov
sub
rclb
je
sub
jp
pop
imul
add
out
cwtl
mov
add
roll
jge
scas
pop
adc
stc
pushf
mov
loop
mov
sub
sbb
inc
addl
push
data16
pushf
adc
popf
cltd
mov
test
and
insl
addb
outsl
out
xchg
mov
or
or
stos
adc
cmpsb
xor
ss
push
cmc
cmp
gs
cltd
adc
mov
sbb
call
dec
xor
jb
cmp
and
aaa
jg
inc
xor
jne
ret
std
pop
aaa
sahf
mov
int3
outsl
cmp
mov
add
jnp
mov
jns
xchg
ja
int3
shlb
and
mov
mov
ss
pusha
lea
repnz
inc
and
add
sbb
lcall
push
add
adc
sbb
xchg
dec
cmpsb
push
and
ja
lds
data16
insb
mov
in
xchg
cmp
mov
inc
push
mov
dec
cmp
sub
pop
into
mov
insb
loopne
jmp
mov
lret
push
or
je
js
fildl
push
fsubs
in
insb
or
push
mov
pop
pop
or
mov
cwtl
sbb
push
addr16
or
pop
inc
push
or
xchg
jb
mov
add
inc
mov
mov
add
inc
add
push
and
dec
mov
push
int3
push
mov
movsb
test
leave
sub
mov
leave
bound
leave
sub
mov
adc
pop
jg
neg
mov
out
pop
aaa
ja
insb
mov
mov
repz
fidivrs
ja
out
rcr
jle
in
fs
sbb
das
mov
cmpb
jno
out
mov
mov
sti
jge
cmp
stc
inc
popa
mov
pop
inc
xlat
lcall
inc
mov
not
in
jmp
pop
jp
mov
mov
dec
orb
scas
movsl
pop
out
mov
popa
dec
dec
cmp
xchg
mov
movsl
inc
ljmp
xchg
push
outsl
pop
mov
xor
cmc
push
int
cmpsb
xchg
mov
lods
dec
stos
dec
test
iret
fldenv
lret
fs
out
and
fstps
pop
cli
cmp
inc
outsl
bound
sub
dec
loope
ficompl
mov
cmp
fistpl
mov
in
add
add
jp
test
push
mov
sub
xchg
fs
mov
fs
lret
cs
jnp
push
lock
xor
pop
in
into
push
jecxz
cmp
test
cmp
xor
mov
and
arpl
push
jge
cld
or
cltd
and
sub
and
mov
test
xor
xchg
test
xchg
shll
cmp
adc
xchg
mov
and
les
test
xor
dec
sahf
je
jg
jno
aam
pop
ficoml
inc
jae
loopne
bound
and
hlt
push
mov
shrb
jl
xchg
pop
stc
test
int3
jb
cmpsl
insb
mov
mov
mov
xor
iret
pop
out
or
inc
mov
lods
cmp
cmp
adc
shlb
sahf
mov
in
dec
ljmp
dec
mov
sahf
out
psrlw
mov
dec
stc
fcomps
sub
clc
in
pop
testb
mov
jle
xchg
push
inc
out
jb
mull
jle
push
ret
push
test
pop
sub
xor
repnz
out
cmpsb
jecxz
into
cs
or
ret
jo
cmp
pop
pop
je
imul
fidivs
daa
aas
lret
pop
arpl
out
sub
xor
sub
jns
sbb
loope
call
notb
in
mov
std
lcall
xchg
loopne
popl
rcll
xlat
cltd
in
data16
scas
fildll
add
cmp
movsb
shlb
jns
push
push
cmp
aam
jns
mov
lahf
and
in
cmp
fcomps
inc
or
sub
aaa
scas
inc
xor
mov
sub
fcmovnbe
adc
jne
lcall
push
inc
sub
sahf
dec
lahf
or
jl
lret
movsb
fildl
ret
sub
lea
cld
mov
push
and
push
iret
xor
repz
lods
dec
dec
pop
dec
shlb
adc
ljmp
stc
out
popa
stc
fisubrs
jno
in
inc
cvtps2pi
or
fnstcw
int3
jmp
mov
ror
daa
jmpw
mov
fdivp
fimull
popa
and
pop
pop
cltd
mov
add
call
mov
xchg
lds
push
mov
mov
idiv
sbb
movb
jno
sbb
jno
shrb
fdivrs
fs
dec
out
std
add
fdivl
and
xor
aaa
outsl
aad
cld
xor
fwait
imul
clc
cmpsl
mov
mov
std
mov
pop
mov
das
cld
add
cli
add
js
scas
jg
idiv
aad
outsl
aas
inc
out
imul
fldt
clc
mov
std
pop
cmpsl
movsl
out
push
stc
jg
xor
dec
out
cltd
arpl
sbb
inc
aad
xor
sbb
iret
iret
push
iret
jmp
add
out
sub
out
test
dec
jl
xchg
pop
jmp
jmp
lds
cmp
adc
inc
in
sbb
push
pop
cltd
not
mov
aad
jg
sbb
mov
out
or
mov
push
popf
cmp
add
test
pop
xchg
jo
mov
aam
push
jmp
je
lods
aaa
aas
scas
and
lcall
xchg
sbb
push
or
dec
fmuls
sar
loope
inc
xor
pop
int
or
in
loope
fmuls
mov
cmpsl
xor
fstps
sarl
adc
cltd
jp
in
movsl
sarl
inc
fiaddl
in
jle
pop
cmp
push
rcll
mov
rorl
leavew
inc
jle
mov
call
inc
mov
xor
pushf
inc
pop
jb
jge
sbb
push
cmp
adc
push
jbe
in
repz
and
mov
pushf
pop
sarb
aas
aad
rcrb
pop
pop
and
jo
pop
cld
sar
cs
dec
lcall
clc
push
jnp
pusha
outsl
mov
jae
or
jmp
std
sbbl
scas
test
test
jp
jb
stc
test
sbb
sbb
push
faddp
sahf
mov
adc
sub
push
dec
ffree
mov
mov
inc
pop
hlt
mov
mov
and
js
cmpl
ljmp
insb
out
rol
inc
lahf
repz
xchg
loop
es
dec
scas
pop
sub
not
mov
addr16
movsl
jnp
rcrb
and
test
push
orl
in
outsl
decl
lds
enter
lret
push
jecxz
sbb
sbb
or
jle
mov
lods
enter
clc
adc
jns
cld
ret
xchg
jp
sbb
int3
stos
stos
jp
ror
imul
jg
cmp
lret
push
dec
inc
dec
andl
out
mov
imul
in
daa
xchg
mov
into
daa
fcomi
add
jnp
repz
shrb
test
lahf
out
pop
xor
gs
jb
lock
xchg
cltd
popw
adc
inc
lcall
xor
enter
mov
imul
sbb
inc
dec
bound
clc
pop
pusha
cmp
cmp
xchg
xchg
out
sbb
out
cmc
or
mov
jb
jo
andl
inc
out
loopne
mov
test
sti
sub
std
or
movb
push
in
adc
fildl
cmp
jle
cmp
inc
mov
fdivrp
push
jmp
out
jle
jle
cmp
cmp
inc
mov
jnp
shr
hlt
and
add
mov
mov
push
cld
hlt
jnp
adc
repz
mov
fsubl
fsubp
push
testl
jg
jle
cmp
inc
mov
mul
mov
push
std
in
fisubl
in
mov
push
incl
cmp
dec
idiv
shr
test
clc
mov
mov
mov
jnp
enter
fists
inc
cmp
push
out
in
and
fucomi
lods
neg
xchg
xchg
xor
das
mulb
repnz
movsl
cld
test
jg
rcll
add
daa
inc
int
jle
cli
cwtl
push
jnp
icebp
and
lods
in
fidivrs
insl
lret
lods
or
pop
sub
in
loope
test
arpl
jnp
sbb
mov
dec
ljmp
sub
pop
fisubrl
mov
dec
lods
movsb
loopne
inc
and
cmc
scas
xor
jp
dec
push
sbb
rcrl
adc
mov
xor
les
add
jbe
push
pusha
mov
sahf
cmp
mov
lods
jp
or
sbb
sahf
sbb
stc
mov
ret
or
iret
mov
xchg
xchg
incl
mulb
xor
mov
add
xchg
push
mov
das
mov
cmp
int3
shrl
pop
lds
adc
jp
inc
sub
loope
scas
add
and
pop
cmc
out
add
jnp
push
std
sub
subb
gs
dec
or
pop
hlt
push
std
adc
notl
mov
loope
jg
pop
clc
arpl
jp
rcrl
jmp
mov
xor
lcall
fs
jp
repz
jmp
mov
mov
and
scas
pop
add
std
jp
es
xlat
scas
xorl
mov
cmc
lock
xlat
scas
test
mov
cmc
sti
push
pop
jmp
ret
sbb
pop
mov
test
xlat
scas
xchg
mov
jmp
dec
jg
pop
mov
jns
mov
clc
mov
xor
mov
jmp
or
scas
pop
sbb
jp
xchg
xlat
scas
mov
mov
jmp
cwtl
lcall
jno
cmc
jmp
or
scas
pop
and
jp
and
jmp
xor
mov
loope
stc
xor
jmp
nop
xor
mov
jmp
dec
jg
pop
mov
in
cli
cmc
in
jg
pop
dec
cli
cmc
in
jg
pop
push
cli
cmc
in
jg
pop
xchg
cmc
jmp
xor
mov
jmp
int3
jg
pop
pop
cld
or
repz
aas
xlat
scas
ficomps
lcall
mov
sbb
pop
mov
repz
aas
xlat
scas
imul
aas
xlat
scas
xor
std
jp
data16
xlat
scas
cmp
jp
dec
jg
pop
ss
jp
cmpsb
aas
xlat
scas
pushf
xor
mov
add
xlat
scas
sahf
xor
mov
cmc
sti
repz
jmp
lock
scas
pop
ds
jp
add
jmp
sahf
xor
mov
jmp
cwtl
lcall
add
mov
jmp
int3
jg
pop
test
cli
cmc
call
scas
movsb
xor
mov
jmp
cwtl
lcall
cwtl
cli
cmc
fistpl
pop
jmp
popf
fwait
xchg
xchg
mov
and
dec
xchg
xor
xchg
rcl
aaa
and
repnz
or
lahf
cmp
or
lahf
jae
mov
fwait
push
mov
sub
cltd
pop
fcmovnbe
jo
mov
inc
pop
jmp
into
jle
cmp
ss
pop
push
mov
insb
or
in
mov
lods
cmpsl
hlt
jmp
cwtl
shll
fistl
adc
pushf
cmpsl
das
outsb
pop
pop
mov
hlt
aam
pushf
rorb
inc
mov
inc
mov
stos
inc
std
push
sub
sbb
sbb
mov
mov
fwait
inc
fadds
or
pop
jp
out
scas
xchg
jl
aad
push
cmp
dec
shll
and
adc
jecxz
lods
sahf
pop
push
dec
push
cmp
repz
aam
fisttpl
push
rcrl
outsl
ds
stos
xor
lods
outsb
shl
mov
push
and
pop
lods
jae
mov
and
bound
pop
ss
iret
iret
out
mov
pop
pusha
cli
fistl
movsl
cmp
pop
jno
lea
and
xchg
jne
inc
inc
ds
idiv
xchg
leave
cmp
xchg
mov
push
sub
jne
xchg
push
dec
jl
jae
mov
mov
xor
or
push
push
adc
jmp
xor
cltd
sbb
in
mov
sub
mov
dec
in
dec
push
sub
xor
enter
dec
stos
shrb
aam
mov
sarl
clc
repnz
cmp
fs
push
test
cmp
mov
dec
pop
mov
adc
inc
inc
adc
adc
inc
push
dec
jl
data16
pushf
jo
mov
jns
lahf
mov
mov
mov
cmp
insl
repz
jge
jns
xchg
fstl
xor
mov
pop
into
lahf
pop
hlt
into
xor
lods
in
xchg
push
add
in
and
jle
jne
insb
and
xchg
call
inc
ficoml
mov
popa
movsb
cmc
inc
or
lret
sbbl
dec
ljmp
call
xor
hlt
insl
xchg
pushf
movsl
sahf
outsl
dec
cmpsb
or
and
nop
sbb
or
push
shll
bound
out
fnsave
int
cmovno
out
in
data16
mov
fidivrl
push
push
imul
sahf
jo
sarb
in
push
enter
inc
pop
jb
repnz
out
mov
test
shll
pop
in
cmp
ficomps
mov
dec
outsb
add
push
push
jp
mov
mov
sahf
addr16
lods
sub
lock
xchg
nop
mov
mov
dec
mov
xor
jl
xchg
lret
inc
sub
sarl
jbe
sarl
call
mov
aaa
sbb
nop
pop
jb
inc
or
shr
pop
cmpsl
jge
jle
lods
adcl
mov
or
adc
gs
mov
mov
push
outsb
movsb
pop
pop
dec
jmp
aam
add
ja
push
into
jb
fstpl
adc
push
daa
insb
lods
stos
cltd
pop
rcll
loopne
adc
icebp
mov
mov
repnz
lret
adc
mov
cmp
adc
mov
and
sub
lcall
push
nopl
jle
pop
add
lret
jle
mov
mov
out
jo
fdivrl
aaa
pop
mov
negl
cmc
sub
mov
sub
lret
dec
les
jno
pop
sub
sar
pop
dec
repnz
mov
popf
pop
xchg
ret
cmpl
jg
mov
mov
movsl
push
and
mov
mov
sub
cli
adcb
pop
push
mov
inc
lcall
add
cmc
jno
pusha
ret
rcr
dec
imul
push
int3
sub
jg
mov
pop
lock
cmp
loope
lret
push
call
ds
push
imul
fxch
xchg
xor
out
lea
jle
mov
mov
mov
xchg
jle
lcall
and
loope
movsl
iret
pop
jae
xchg
xor
mov
pop
rcrb
xchg
lods
jnp
or
push
jnp
arpl
mov
inc
jge
shlb
cmp
xor
mov
mov
push
xchg
push
pushf
call
jecxz
call
lahf
ret
adc
push
sbb
decb
fisubrs
sub
test
or
mov
gs
inc
push
scas
push
cmpsb
and
in
xor
cmp
inc
cld
adc
dec
dec
scas
fs
bound
jl
add
fidivl
movsb
jmp
mov
pop
mov
mov
shll
les
pusha
mov
roll
xchg
iret
in
inc
cmp
lods
cmp
inc
shll
scas
xor
pusha
xor
mov
mov
jbe
cmc
mov
aas
xor
mov
js
in
fabs
ret
xchg
cmp
pop
sbb
call
flds
fwait
xlat
scas
lods
test
loop
pop
lret
or
pop
aas
push
inc
aam
xor
cmp
xchg
dec
xlat
outsb
lea
dec
call
push
dec
frstor
xor
lret
mov
mov
mov
xchg
xor
int3
jb
idiv
jae
leave
fcoms
popa
out
sub
push
mov
and
aaa
xor
xchg
imul
dec
lret
cwtl
cmp
mov
pop
sub
dec
add
daa
cmc
xor
in
ja
add
xor
pushl
dec
jp
mov
imul
cld
bound
mov
add
insl
adc
enter
push
add
ljmp
jge
mov
ss
or
jb
push
pusha
sbb
and
mov
roll
xchg
jne
push
jbe
mov
and
aas
mov
or
fimull
aaa
bound
cli
sarl
jne
ljmp
xchg
dec
ds
add
or
sbbl
lds
jmp
mov
ljmp
jns
cwtl
mov
inc
or
dec
mov
sub
mov
sbb
pop
icebp
inc
add
adc
pusha
ret
jbe
test
mov
xchg
mov
sti
dec
cmpsb
push
sub
push
xor
movsl
mov
mov
loope
xchg
mov
cmp
nop
push
fst
dec
xchg
outsl
dec
adc
aaa
cmc
cmp
cmc
mov
xor
outsl
inc
sub
mov
and
stos
mov
adcb
enter
fdivr
das
incl
cli
push
pop
mov
ds
movzbl
daa
in
mov
push
jb
sub
mov
dec
leave
in
daa
ds
loope
jne
pop
jne
xlat
xor
mov
jle
lds
int3
aam
xor
adc
mov
in
pop
rcl
mov
mov
xor
or
in
lods
mov
popa
push
addl
mov
mov
inc
pop
ficoml
and
loope
push
repz
or
add
push
mov
push
inc
pop
inc
push
dec
pop
xchg
xor
add
push
xchg
scas
pop
mov
fcmovnb
repnz
lcall
aam
fs
jecxz
or
cmp
sti
sbb
scas
je
sbb
aam
pop
mov
jnp
inc
push
mov
jp
push
sub
mov
stc
cmpsb
mov
lcall
sub
cli
out
pop
sarb
nop
add
dec
stos
push
or
pop
sbb
push
cmpsl
mov
mov
add
imul
cmp
lret
pop
xlat
call
aam
fists
inc
in
lods
dec
arpl
andb
or
fsubl
leave
pop
bound
aad
xor
or
pop
lret
and
lahf
stc
bound
or
cmpsb
jl
outsb
scas
gs
movsb
sub
mov
subb
mov
std
test
scas
or
pop
dec
dec
and
mov
add
dec
lret
ljmp
adc
add
pop
xchg
mov
mov
sbb
sub
lret
and
dec
cmp
cwtl
dec
sbb
je
pop
xchg
add
dec
lods
mov
iret
fs
shll
and
outsb
scas
jbe
sub
mov
xchg
pop
repz
dec
fstpl
fwait
cmp
push
sub
outsb
or
xchg
lea
or
scas
xlat
testl
dec
insb
inc
negl
scas
cmp
outsb
ds
pop
mov
nop
jmp
push
shlb
lahf
clc
mov
mov
jecxz
xor
mov
jnp
arpl
outsl
lock
icebp
mov
loopne
xor
into
dec
add
add
data16
adc
xchg
mov
mov
sahf
push
into
pushf
mov
lods
mov
stos
jns
movsl
cs
enter
das
data16
jns
pop
pop
xor
sbb
sbb
scas
cmp
outsb
cmpsl
push
push
insb
mov
cmp
adc
cmp
fwait
mov
xchg
nop
jbe
imul
cmpsl
rol
shrb
push
insl
cmp
and
mov
lret
repz
les
aad
pushf
movsl
ror
cltd
jae
fstl
enter
je
imulb
mov
test
aam
cmp
loop
push
cmpsl
ror
pop
jbe
lret
pop
insb
mov
cmp
sub
sbb
jbe
mov
push
pop
xchg
add
popa
imul
pop
push
in
leave
cmp
push
pop
cltd
fldenv
xor
ret
in
leave
xchg
rcrb
push
cltd
dec
inc
cmp
adc
test
es
mov
adc
mov
jg
jge
cltd
ret
push
and
dec
inc
jmp
or
jbe
mov
push
mov
ret
ss
xor
pop
in
and
push
scas
icebp
mov
cmp
fucomp
imulb
or
push
data16
dec
fstps
mov
xor
scas
jae
inc
cmp
xchg
cmpsb
xchg
out
les
jno
mov
fistpl
jle
sbb
mov
mov
das
cmp
orl
loope
std
mov
stos
cmp
adc
jbe
mov
out
andl
jb
pop
hlt
int3
adc
pop
adc
mov
mov
jl
psubb
push
pushf
cmp
and
mov
mov
lds
cltd
in
scas
rcr
and
roll
call
pop
sbbb
mov
pop
insb
or
out
call
jb
mov
insl
xor
xor
add
jle
fidivs
int3
adc
roll
xor
jle
pop
call
jbe
fmull
fistl
xchg
std
pop
pop
lret
testb
cli
pop
jg
dec
fnsave
fnsave
lock
sti
push
sub
aam
sti
dec
jge
sbb
in
dec
fsubp
aad
cmp
fs
adc
das
push
or
mov
jnp
lds
ret
mov
aas
repz
mov
sbb
arpl
cmp
or
sahf
aad
inc
inc
adc
and
mov
add
jno
cs
cmp
ret
int3
cmp
inc
xchg
in
dec
daa
dec
ret
sbb
ljmp
and
fs
into
aaa
andl
mov
pushf
in
or
xor
mov
cltd
jne
push
scas
aaa
push
jg
lahf
mov
cwtl
int3
xlat
fidivrs
fstpl
loop
out
cmpsl
incb
inc
js
test
jo
xor
stos
mov
ds
dec
aad
flds
dec
out
sub
mov
inc
aaa
and
jp
out
fsubs
das
outsl
aad
sbb
push
pop
scas
mov
mov
lods
push
mov
jecxz
or
pop
cmp
std
and
or
push
sub
jno
sbb
aad
xchg
sub
cwtl
inc
jmp
or
xor
push
cld
ljmp
jns
xchg
xchg
pusha
scas
ds
fcmovnb
pop
scas
xor
clc
aaa
push
push
data16
mov
rclb
ret
test
into
cmp
aam
fcmovnbe
mov
and
pop
sahf
bound
cmp
ficoml
push
xchg
movsb
movsl
jge
stos
pop
ss
int3
cmp
mov
repz
jmp
repz
push
xchg
insl
ds
out
sub
and
mulb
lahf
jae
loope
outsb
cli
inc
jecxz
das
mov
and
imul
push
sbb
ljmp
xchg
psubb
divb
in
xchg
in
and
aaa
push
in
daa
jae
xor
add
and
jp
in
aad
push
sbb
imul
sti
fdivs
repnz
push
jge
popa
sahf
mov
push
sub
lahf
pop
les
jne
push
cmp
dec
aad
adc
lock
ret
addr16
mov
cmp
mov
push
daa
addr16
mov
jp
xor
insl
pop
mov
add
jne
xor
fcoml
push
loopne
or
test
rcrl
sbb
loopne
insb
sti
xlat
mov
lock
jo
mov
pop
dec
fisttpl
out
clc
cmp
ljmp
xor
adc
add
loopne
mov
es
mov
jmp
mov
lcall
mov
test
loope
int3
mov
shll
and
xchg
push
sbbl
test
or
jbe
test
test
and
sub
test
sub
outsb
arpl
ficoml
adc
cmpsb
leave
push
in
rcll
push
pop
push
lods
mov
mov
test
inc
aas
jl
rcll
or
sub
subl
and
jmp
scas
dec
pop
enter
arpl
lret
divb
cs
push
pop
mov
daa
sti
xor
imul
inc
ror
cmp
mov
mov
cmp
inc
pusha
xor
shlb
adc
in
push
push
shll
mov
pop
mov
aaa
cmc
cmpsl
jmp
jl
dec
xchg
and
jae
sbb
inc
push
insb
mov
pop
push
push
push
mov
divl
sbb
mov
in
mov
push
lods
and
mov
xchg
movsb
mov
les
push
adc
jbe
sub
adc
dec
sahf
imul
iret
push
xorb
xchg
dec
sbb
int3
std
add
mov
mov
adc
cmp
mov
cmp
jg
lods
pop
fldenv
and
mov
iret
jne
or
in
test
cli
adc
mov
repz
dec
mov
jbe
orl
push
nop
cmpsl
fbstp
adc
xchg
fmull
cmpsb
inc
and
inc
mov
out
mov
push
mov
fisttps
adc
aas
lock
clc
xchg
in
mov
fwait
fs
stos
xchg
xchg
dec
dec
mov
sub
pop
inc
push
pop
pop
xchg
aas
and
lahf
test
aas
outsl
push
adc
or
adc
outsl
fadd
sahf
inc
jg
adc
or
jno
cli
ret
mov
fucomip
or
mov
stos
and
stos
ret
mov
ljmp
push
pop
cs
ficomps
xchg
lds
jne
cmp
mov
or
inc
jno
xchg
fwait
sarl
mov
mov
ret
add
mov
xlat
adc
mov
mov
or
and
fbld
mov
and
add
dec
and
mov
xor
mov
or
in
mov
mov
mov
xchg
loope
les
lret
sbb
pop
dec
jl
mov
jmp
out
jl
out
mov
inc
lods
movsl
push
add
iret
sub
mov
jmp
sbb
ja
inc
and
lds
ja
mov
mov
or
in
cli
mov
or
call
mov
xchg
lods
popa
mov
lea
cmp
xor
sbb
or
jp
and
add
mov
add
imul
sub
pop
add
aas
dec
movsl
xchg
inc
sub
pop
add
pop
inc
lcall
jne
or
dec
repnz
jne
xor
mov
sub
ds
adc
out
scas
add
mov
push
iret
sub
movsb
add
mov
je
jle
out
add
lcall
out
pop
iret
sbb
pop
cld
jb
mov
cmp
mov
and
mov
movsl
test
add
jmp
lea
inc
jge
and
stos
fsubrs
adc
arpl
aam
out
js
fildl
cld
arpl
jno
out
fyl2x
cmc
enter
std
popa
imull
out
pop
fiadds
sti
pop
pop
movzbl
in
jmp
int
int3
jge
mov
in
enter
imul
fisttpl
pop
jg
jge
pop
fisubs
add
adc
in
shl
lea
pushf
out
or
sub
xor
cmp
cmpsl
or
fdivrs
cmp
ret
inc
cmpsb
shrb
xlat
add
jb
lock
loopne
imul
add
adc
add
sub
mov
lds
nop
pop
sbb
pop
jns
mov
adc
sub
mov
subps
cmp
pop
fildll
or
lret
jecxz
xchg
lret
xorl
and
mov
mov
inc
mov
push
ror
lahf
inc
lods
das
cmpsl
mov
and
dec
mov
stc
pop
pop
and
wrmsr
mov
push
pop
sbb
pop
jo
popa
test
jg
in
aas
cmp
adc
push
dec
add
jmp
cltd
in
xor
add
in
mov
xchg
pop
add
push
hlt
mov
fsubrs
outsl
stc
push
enter
add
movsl
push
adc
sti
and
add
rclb
adc
fs
xor
lahf
out
cmp
movsl
push
add
xlat
sarl
fwait
lret
add
xor
fsubs
sub
or
into
test
ja
negl
xchg
loop,pn
mov
pop
mov
test
cmp
icebp
jl
les
ret
mov
mov
ss
cmp
out
push
xor
jmp
mov
xor
xlat
push
and
lret
fnstsw
in
je
scas
rcl
movsl
cmpl
fists
in
sbb
jnp
scas
cmp
pop
adc
div
and
stc
outsb
out
cs
mov
dec
mov
cmp
or
mov
lea
mov
dec
das
add
adc
push
popa
stc
sbb
ret
and
jo
daa
cmpsb
mov
jb
dec
gs
pop
jb
imul
push
daa
push
cmc
sub
dec
xor
push
mov
arpl
dec
mov
xlat
in
mov
es
mov
dec
pop
xchg
das
je
inc
mov
pop
out
xchg
scas
adc
fs
xchg
out
jae
sbbl
sub
outsl
and
scas
mov
inc
xor
push
xchg
and
outsb
add
leave
ret
clc
ret
fwait
ret
cmc
mov
or
std
adc
scas
mov
pop
pop
lods
mov
aam
push
or
adc
mov
push
pop
adc
repz
or
fwait
es
subb
sti
test
jo
shlb
jns
mov
test
cmp
das
popa
dec
jnp
xchg
movsl
test
loope
popa
sahf
inc
adc
mov
jp
jns
jns
push
pop
mov
cmp
cmp
jle
or
imul
add
mov
je
ret
sbb
popa
dec
push
pop
data16
xchg
mov
mov
test
adc
ss
lea
dec
push
mov
inc
mov
ret
fwait
mov
outsb
xchg
mov
or
xchg
enter
xor
mov
lock
mov
hlt
loope
xor
dec
lods
rolb
in
add
popf
getsec
fwait
push
pop
jp
rcrb
xor
sbb
mov
mov
adc
add
mov
mov
lock
mov
push
fwait
inc
and
xchg
fsub
std
popf
xchg
sbb
and
cli
dec
loopne
dec
ss
mov
push
or
inc
leave
ret
push
jo
adc
jecxz
pop
cmpsl
repz
stos
in
add
push
dec
sub
pop
dec
int
std
dec
cld
xchg
pop
stos
js
addr16
leave
and
repz
and
sti
aam
dec
xchg
pop
and
sbb
jo
cmp
jecxz
cmp
sti
ss
leave
and
cmc
movsb
out
fwait
dec
cmp
push
cmp
mov
loopne
xlat
add
loop
dec
push
loope
cs
push
cmp
xor
shr
push
ds
out
pop
jb
fbstp
mov
lahf
out
outsb
mov
sub
dec
mov
ds
jns
mov
xchg
ja
dec
jmp
adc
mov
mov
inc
cld
ja
push
icebp
out
shlb
and
in
or
repnz
jb
pop
cmpsl
insb
pop
add
and
jne
add
cs
inc
cs
xor
xchg
mov
sub
ljmp
iret
mov
xor
mov
aam
insl
cmpsl
sub
pop
cmp
arpl
adc
mov
push
mov
fwait
xchg
xor
sbb
inc
cmp
jno
xchg
loopne
fidivrl
jae
dec
xchg
ret
sbb
ds
ja
cli
jno
mov
jle
orl
mov
xor
into
cmp
push
inc
sbb
adc
cmp
xchg
nop
mov
push
out
add
ret
pop
cmpsl
repnz
outsl
mov
stos
scas
mov
loopne
lods
aaa
fwait
cltd
flds
sbb
xor
in
xor
outsl
ss
scas
sti
or
push
dec
popa
shrl
xchg
fwait
leave
test
call
adc
and
aad
neg
addb
mov
in
divb
or
jl
add
test
shrl
in
je
rcr
jb
cwtl
fldt
clc
sub
imul
je
rorb
fnstsw
test
sub
push
mov
xor
or
ss
adc
movsb
pushf
movsl
sahf
outsl
dec
mov
int
sahf
mov
sub
or
adc
mov
mov
jb
ja
sbb
sub
rorb
cmp
jle
push
shrb
aas
inc
dec
cs
add
dec
mov
add
adc
or
sub
sub
sub
out
cli
lea
adc
sbb
in
push
outsb
push
adc
lret
leave
mov
shll
push
xchg
mov
and
or
sbb
push
ret
cmpsb
out
inc
mov
data16
pop
push
and
mull
cmp
cld
subl
fimuls
ljmp
shrb
fstpl
pop
jne
iret
adc
ja
mov
lahf
and
loop
lcall
or
xchg
mov
outsl
sbb
mov
inc
out
popf
or
out
sub
jp
jbe
insl
pop
mov
sbb
push
or
sub
add
dec
out
xor
push
repnz
scas
je
add
sar
add
sbb
cmc
hlt
jecxz
in
xor
jns
cwtl
adc
imul
ds
or
cmp
insb
pop
out
xchg
push
rcrl
fnstenv
sub
jecxz
das
mov
adc
pop
push
mov
lock
add
jb
inc
cwtl
mov
daa
pop
add
mov
adc
rol
fcmovnb
mov
adc
sbb
push
cli
in
jp
test
mov
pop
bnd
ss
sub
out
adc
popf
push
push
xorl
adc
fldenv
divl
sbb
adc
mov
lahf
mov
push
pushf
les
xchg
les
les
repz
pushf
sti
and
lret
test
jle
add
ljmp
in
clc
cmc
xor
out
mov
in
sbb
in
stc
adc
xchg
dec
outsl
push
and
jb
scas
data16
int
xor
fldl2e
jge
fstpt
xchg
mov
mov
xor
fists
adc
enter
popf
mov
into
mov
sub
dec
lods
hlt
andb
in
jns
divl
xchg
jnp
jmp
cmp
std
lret
cmp
and
jnp
inc
mov
jno
fsubrl
fcompl
andl
mov
sub
les
imul
xor
stos
loope
add
nop
mov
lods
or
je
mov
shl
hlt
push
popf
pop
sbb
and
cmpsl
mov
adc
sbb
leave
or
pop
cmpb
lock
in
mov
arpl
scas
ds
scas
adc
clc
sbb
xchg
mov
sub
popf
sbb
pop
mov
pop
shlb
icebp
sbb
mov
cs
mov
lock
ret
inc
das
cmp
xor
popf
popa
adc
sbb
int3
nop
arpl
divl
fdivrl
adc
fwait
sahf
or
aam
sbb
ljmp
and
mov
iret
push
push
mov
std
sub
adcb
std
es
jecxz
xchg
dec
sbb
shrb
inc
sbb
push
mov
push
loop
lods
cmpsl
lock
push
enter
inc
inc
cltd
jo
dec
mov
sti
add
and
je
dec
dec
gs
int
aaa
shll
pop
dec
push
pushl
popf
hlt
jbe
adc
inc
js
loope
outsl
lret
and
mov
xchg
js
mov
rorl
clc
jecxz
mov
nop
jne
nop
lods
xor
push
outsb
and
mov
sbb
call
xor
and
mov
mov
xchg
sub
stos
xchg
xor
icebp
lret
aad
push
xchg
mov
or
or
aaa
adc
popfw
xchg
leave
dec
lock
stc
jne
pop
mov
test
jne
mov
mov
xor
lea
gs
rcr
and
and
push
mov
and
mov
push
jl
test
imul
aaa
mov
scas
xor
push
sbb
mov
imul
aad
and
inc
adc
aam
mov
bound
push
in
lock
test
gs
pop
sub
lds
outsl
mov
inc
and
dec
add
cmpsb
sub
fucomip
dec
stc
aaa
aam
mov
inc
ljmp
push
mov
mov
jmp
add
rcrb
cld
pusha
cmp
mov
fisubs
rcll
adc
mov
cmp
lcall
xlat
mov
jmp
ds
xlat
xchg
lret
xchg
rorb
jp
jge,pn
sbb
loope
mov
pop
lock
mov
sbbb
scas
push
lret
pop
push
hlt
adc
dec
lds
pop
sub
insb
loop
in
push
scas
xor
jbe
sub
cmp
leave
fstps
dec
mov
mov
push
or
inc
adc
int3
sbb
fists
ja
push
ljmp
cmp
in
test
sti
dec
xchg
inc
andb
inc
shlb
inc
lods
not
call
and
xor
xchg
test
pop
cmp
pop
ja
mov
jmp
mov
loope
cmp
push
sbb
cmp
cmp
pop
repz
mov
cmpsl
xchg
push
mov
jmp
int3
mov
jle
inc
adc
mov
cltd
cmp
arpl
lret
cltd
adc
fadds
ret
xchg
jl
sbb
jecxz
sbb
and
lret
cmp
lods
push
xchg
mov
sub
mov
cmpsb
out
pop
mov
inc
daa
fwait
xchg
or
ficompl
faddl
cltd
lods
xor
jae
sub
inc
int
ja
dec
aad
ja
in
cld
inc
shll
jmp
push
ud2
std
mov
mov
xor
in
sub
dec
push
mov
adc
mov
cltd
inc
dec
sub
into
cmp
sbb
inc
stos
mov
cmp
inc
daa
ret
scas
xchg
mov
mov
int3
mov
orb
aam
ss
add
cs
mov
inc
cs
push
push
aaa
nop
sahf
mov
fwait
test
push
inc
pop
jg
mov
test
xchg
cltd
aam
xor
xlat
ljmp
and
dec
inc
outsb
stc
mov
xor
rcrb
add
xchg
movsl
lahf
insl
dec
in
or
xlat
push
or
arpl
les
lods
add
push
mov
shrl
out
scas
pusha
push
push
out
rorb
sbbb
cld
mov
aad
popa
pop
inc
cld
pop
stos
dec
ja
fmul
aas
out
jbe
imul
movsl
pop
jne
out
xchg
mov
test
mov
push
inc
sbb
out
mov
and
inc
push
in
es
cmp
cmpsb
call
das
repnz
push
test
cmc
loopne
push
sbb
xor
push
shrl
ret
pusha
repz
jne
mov
or
daa
push
jecxz
push
cli
mov
cmpsl
sub
cmp
and
mov
js
insl
popf
roll
jmp
es
sahf
cmp
adc
adc
aad
inc
mov
shr
pop
inc
mov
pop
add
lock
insl
and
cmp
faddl
pop
mov
aaa
jp
sbb
sbb
xchg
push
pop
push
hlt
outsl
xor
nop
jae
ficompl
pop
mov
mov
mov
pusha
ljmp
pop
and
jecxz
dec
cmpsl
dec
sbb
and
add
imul
movl
test
cmp
jne
loope
dec
push
mov
cmpsl
lahf
jne
pushf
push
mov
mov
sti
sbbl
mov
sysenter
js
ljmp
mov
dec
ret
xchg
dec
add
inc
dec
outsl
je
sbb
pop
xchg
outsb
cmp
sbb
movsb
and
out
rep
into
xchg
stos
iret
outsl
movsb
and
sahf
mov
cmp
adc
mov
ds
mov
jge
movsb
ss
insl
pop
aad
sub
pop
pop
jmp
hlt
push
mov
cs
fbld
data16
xchg
jle
out
ja
and
loopne
sahf
int
xchg
lcall
xchg
testb
out
jmp
xor
fldenv
cltd
jne
insl
dec
inc
aas
sub
mov
add
roll
mov
mov
fisttpll
mov
scas
mov
mov
popa
push
mov
shrb
mov
push
icebp
inc
xlat
dec
cmp
jns
xor
shrb
mov
iret
push
pop
cmp
xlat
sub
mov
outsb
jmp
cmp
cmpsb
push
adc
jne
xchg
jecxz
rcrl
and
fstl
push
cmp
into
adc
stc
in
jns
inc
mov
xchg
and
and
push
into
adc
sub
pop
or
xchg
mov
sbb
movsb
mov
xchg
sarb
data16
and
sbb
adc
repnz
test
mov
jnp
sbb
dec
je
and
stos
add
sub
inc
rcl
aam
add
inc
cmpsb
ret
push
decl
xchg
dec
clc
cmpsl
lods
adc
sbb
push
inc
fildll
mov
iret
das
jb
cli
repz
adc
dec
push
das
cwtl
fwait
xor
jp
pop
mov
enter
test
aaa
xchg
fmuls
adc
cmp
arpl
adc
jb
or
repz
mov
repnz
loop
inc
dec
into
inc
push
int3
jo
lock
fcomps
in
mov
xor
sahf
int3
pop
inc
push
js
pop
xor
aam
pcmpeqb
aam
push
in
inc
mov
dec
sahf
test
push
dec
or
sbb
inc
inc
add
jbe
fnsave
and
or
xor
hlt
cli
dec
mov
xchg
aaa
add
and
stos
xor
inc
dec
iret
add
leave
cmpsl
mov
andb
mov
dec
cmpsb
dec
xchg
repz
daa
cli
xchg
and
pushf
orl
rcl
das
dec
jl
and
xchg
xchg
cmc
arpl
xor
shll
push
push
imul
pop
or
push
pop
push
adc
adc
mov
add
add
inc
dec
cmp
fwait
insl
in
pop
lods
fldenv
adcb
xchg
xchg
fldcw
ja
inc
push
mov
or
iret
jge
rorl
sti
out
pushf
in
out
out
loopne
popf
cld
push
repz
stc
out
inc
cmp
inc
fstpt
stos
push
xor
dec
popf
mov
lret
or
xchg
test
fbstp
sti
push
out
das
xor
cltd
mov
push
addr16
sarl
dec
imul
mov
cltd
out
test
jl
pop
jle
pop
inc
popa
jg
mov
pop
jl
cli
inc
mov
dec
repnz
les
adc
or
pop
iret
sbb
adc
xchg
hlt
jno
cmpsl
pop
bound
sub
cld
pop
test
in
mov
repnz
mov
add
hlt
xor
adc
jns
fldcw
fwait
jbe
dec
mov
test
or
jecxz
shl
mov
out
jp
clc
jns
push
out
jg
iret
lock
sahf
or
fbstp
pop
mov
dec
dec
dec
aad
daa
and
lahf
shll
pop
xorb
push
sub
ficoms
pop
test
mov
int3
hlt
bound
popa
pop
fstl
mov
push
sub
jp
fisubrl
xorb
mov
inc
ja
jns
shlb
inc
xor
and
adc
mov
add
push
loopne
mov
addr16
sbb
jecxz
ljmp
or
enter
mov
and
sbb
sbb
pop
movb
or
dec
sahf
fidivrs
jg
je
lret
lcall
repz
xchg
xchg
pop
push
push
and
lahf
mov
xchg
xchg
add
insb
xor
ss
test
out
jo
repz
xchg
loop
xchg
enter
imul
sub
sub
dec
fwait
mov
int
sbb
rclb
mov
mov
or
push
cmpsb
mov
mov
lods
xor
cmpsl
push
sti
or
rcrl
lret
iret
cmp
xor
mov
pop
xchg
adc
dec
xor
insl
mov
aas
and
mov
jl
icebp
mov
movsl
divl
inc
mov
mov
push
rclb
mov
and
jbe
cmp
or
int
movsl
xlat
or
jne
aaa
mov
mov
or
and
loope
xlat
dec
aam
mov
mov
dec
mov
pop
popf
pop
adc
leave
std
jecxz
jo
adc
adc
add
andb
fs
mov
add
mov
ret
rolb
xor
test
ret
nop
inc
leave
xorb
or
adc
inc
sbb
lods
repz
push
and
mov
dec
xlat
int3
jns
inc
in
mov
jg
xchg
addl
out
jo
cmp
xchg
inc
cmp
je
inc
pop
sbb
and
add
pmullw
cli
cmpsl
imul
sbb
jmp
push
cltd
or
lods
jle
mov
mov
lods
lret
data16
jae
das
fsubl
pop
in
gs
mov
daa
mov
jne
pop
int
or
pop
out
inc
inc
sub
sub
and
and
aaa
lds
sbb
adc
lock
or
sub
lds
jg
xlat
nop
loope
sub
mov
cmpsl
inc
adc
or
mov
mov
push
pop
insl
pop
into
lcall
imul
cmp
pop
testl
test
cld
mov
aad
sti
clc
fnsave
mov
lcall
push
lea
out
out
sub
inc
pushf
push
xor
push
jno
movsl
fiadds
dec
push
mov
jns
fstpt
adc
aas
adc
dec
repnz
test
xor
sbb
xchg
inc
inc
jge
and
mov
inc
fwait
push
adc
into
orl
les
nop
ds
xchg
iret
cmp
sub
mov
lods
aad
add
sbb
inc
repnz
adc
scas
jno
sub
mov
lds
bound
insb
test
lods
lcall
fdivrs
jg
jbe
lcall
inc
popf
notb
into
mov
and
insb
les
in
and
je
dec
loope
cmp
in
fidivs
into
mov
adc
in
in
push
std
testl
arpl
and
pop
jle
rcll
sub
mov
out
sub
push
fsts
fs
sub
nop
pop
add
sbb
or
mov
add
xor
pop
push
inc
jo
or
sub
or
mov
mov
jno
mov
enter
inc
jg
ret
rclb
add
jle
add
inc
jl
in
repz
inc
jg
loopne
cltd
and
pop
ficoms
jmp
pop
cmpb
aad
shll
and
cmpsl
or
mov
pushf
cmpb
push
mov
fsubl
and
testl
addr16
and
push
in
pop
stos
js
testb
jl
dec
inc
push
cli
test
loop
xchg
jo
sbb
test
adc
fsubl
cmp
sbb
add
cmpsl
js
or
jne
scas
xchg
cmc
sbb
inc
mov
push
and
fdivrs
xchg
fsub
cwtl
xchg
ret
adc
push
jl
sbb
and
pop
jmp
clc
fidivl
aaa
les
in
sbb
or
and
xor
leave
aad
iret
arpl
mov
adc
cli
mov
fcom
call
jl
dec
jbe
lret
xor
fdivrs
das
ds
stc
xor
clc
pop
xchg
ret
test
aaa
sahf
call
mov
jge
cld
and
aam
hlt
test
lds
dec
mov
xchg
fstps
icebp
mov
pop
pop
jecxz
fdivr
shrl
jg
je
jbe
test
pop
pandn
div
das
mov
inc
and
hlt
sbb
cmpb
ljmp
xor
add
xchg
xchg
rorb
cli
in
repz
iret
je
aad
ret
mov
mov
xchg
test
dec
insb
gs
dec
jge
xchg
sub
fcmove
cltd
imul
addr16
loop
daa
pop
rcll
add
mov
loopne
pushf
push
stos
outsb
out
ljmp
jcxz
jp
mov
sbb
cmc
out
inc
test
mov
sub
rcrb
dec
rcll
daa
adc
iret
insb
sti
in
sub
ret
outsb
sbb
inc
js
cmpsl
dec
mov
mov
lock
imulb
into
fidivrs
inc
test
rorl
into
jne
and
in
xorb
jns
arpl
fiaddl
fnsetpm(287
popa
iret
xchg
and
arpl
mov
jbe
dec
scas
adc
and
mov
sbb
add
push
je
pop
jp
pop
pop
mov
mov
and
mov
rcll
and
jb
jmp
cmpsl
xchg
insb
movsl
dec
outsl
leave
xorb
fisttpl
xchg
sub
pop
sub
icebp
or
shlb
pusha
popa
xchg
pop
ljmp
adc
xor
shlb
mov
out
xchg
test
rol
loope
mov
mov
fs
fisttps
sub
hlt
pop
pop
push
and
leave
xchg
cmp
testb
mov
cmp
mov
jns
inc
adc
jbe
mov
hlt
pop
out
sbb
insl
dec
push
test
mov
and
dec
sub
xchg
cli
pop
enter
cmpsl
lock
leave
add
jbe
mov
pop
test
jp
arpl
fildll
shl
pop
daa
ror
mov
inc
pop
mov
subb
and
xor
and
jmp
pop
imul
fwait
xchg
jecxz
je
hlt
incb
and
jbe
push
incb
hlt
adc
and
inc
shll
add
stc
scas
adcb
dec
mov
adc
lcall
lahf
push
cltd
push
test
mov
jp
xchg
pop
test
mov
in
add
sub
xor
das
call
div
test
cli
sub
fdivrs
cltd
xchg
dec
mov
push
je
pop
int3
movsl
sbb
pusha
in
mov
pushf
int
jp
xchg
into
jge
in
addr16
orb
adc
hlt
movups
aad
mov
mov
fistpll
in
sarb
or
or
dec
dec
mov
sahf
lcall
stc
cmp
or
jo
xor
cltd
fisttps
sti
aas
or
dec
lcall
repz
mov
jg
mov
or
xor
mov
pop
or
movsl
and
cmp
fcmovnb
push
loopne
or
add
lea
or
xchg
jo
add
mov
cs
inc
addr16
cmp
xlat
sub
test
shlb
xor
in
and
add
push
lds
cli
sahf
jp
xlat
jne
cmpsl
adc
and
mov
das
or
mov
jno
mov
fcmovbe
mov
cs
mov
pop
push
fs
jb
sbb
adc
add
pushf
push
and
cmp
sbb
jns
xchg
mov
jl
mov
lcall
fsubr
push
sbb
aad
inc
or
fdivrl
mov
pop
fs
fisubrs
mov
mov
imul
sub
xchg
adc
adc
fnsave
adcl
dec
mov
fldcw
shll
jnp
ss
and
mov
insl
out
cmp
es
test
mov
loop
inc
ds
cmp
ds
mov
jp
pop
push
xchg
je
nop
xlat
gs
lret
cmp
sub
ret
cld
js
cmp
jnp
add
testl
ljmp
dec
push
inc
sub
jle
sbb
mov
cmp
stos
decl
xchg
cmp
mov
icebp
fwait
mov
mov
ret
fwait
pop
aad
sbb
in
shlb
div
punpckldq
in
rcrb
aas
jae
notl
pop
rorb
es
push
les
and
mov
aas
addr16
xor
jnp
movsb
jbe
ljmp
push
in
lcall
cmc
jp
jo
mov
imul
ljmp
comiss
xchg
dec
gs
jae
mov
inc
or
test
push
dec
shrb
iret
in
movsl
jb
mov
add
std
mov
dec
shrl
fdivr
mov
pusha
add
je
stos
inc
in
inc
jns
lea
fildl
out
orb
push
aas
cmp
and
dec
and
add
or
mov
pop
mov
movsl
xchg
pushf
jle
or
jne
sbb
ret
sub
mov
adc
js
leave
or
ljmp
rolb
push
jecxz
add
push
sub
sub
add
add
push
mov
xchg
xor
mov
jnp
mov
in
imul
xlat
hlt
paddusb
pop
les
imul
aaa
cmp
jle
mov
neg
loope
xchg
fwait
inc
lods
aam
lea
je
xor
cmpsl
mov
int
sbb
addr16
into
int3
fstpt
insb
sbb
inc
dec
xrstors
jmp
mov
inc
jbe
icebp
idivl
xchg
sbb
imul
mov
sbb
pushf
sub
or
out
rorl
xchg
dec
push
pop
pop
scas
or
pushf
mov
mov
aaa
adc
mov
sub
xor
jo
jno
mov
inc
call
repz
js
and
fisubrs
testl
xchg
sub
or
stos
aam
xchg
and
push
ficoml
jae
in
hlt
jmp
jmp
adc
fdivrp
lods
jb
arpl
loopne
test
pop
adc
xor
lcall
lods
mov
inc
vunpcklps
mov
push
dec
mov
jo
iret
jae
adc
push
leave
ja
call
lods
icebp
hlt
xchg
mov
pop
inc
dec
cmp
lret
cmp
push
ficompl
test
or
xchg
sarl
jle
orb
pop
push
insl
lret
xchg
add
push
lahf
andb
insl
xor
add
mov
pusha
shrb
mov
jmp
inc
sahf
xor
push
hlt
push
icebp
lret
lret
loopne
mov
hlt
shrb
into
lea
cli
inc
jae
lea
sub
cld
lds
mov
loope
sub
fisubl
loop
sahf
loopne
lret
mov
dec
adc
rorl
cmp
enter
fs
divl
arpl
cmp
push
shrb
shrl
jns
push
mov
jb
pop
nop
jns
sbb
aad
leave
fimull
orl
scas
sbb
test
or
xchg
setae
inc
ret
cmp
push
jle
ja
popf
push
add
nop
fisubl
adc
iret
add
test
enter
and
cmpsl
mov
ja
pop
shrl
scas
dec
mov
jp
adc
out
movl
insl
ja
xchg
xchg
outsb
js
and
les
xlat
xlat
repnz
mov
pop
sub
es
mov
dec
rorl
mov
mov
dec
fs
push
in
test
fisubs
aas
mov
adc
mov
and
add
cmp
js
jb
and
loop
xor
cmp
xorb
pop
and
adc
lods
into
xchg
outsb
jmp
mov
lret
mov
mov
lods
and
lock
lods
loop
mov
out
rcrb
mov
addr16
pop
sbb
push
push
fdivl
dec
xor
in
adcb
or
aam
mov
test
jbe
mov
js
xchg
icebp
jl
gs
dec
adc
in
adc
xor
push
mov
cmpsb
sahf
dec
jmp
test
push
pop
xchg
mov
shlb
mov
sub
push
sbb
imul
sbb
jo
aaa
mov
lds
adc
cs
arpl
shrl
sbb
xor
nop
inc
mov
rorb
sub
data16
xchg
sub
je
icebp
push
mov
sub
je
add
insl
mov
jle
pop
stc
and
pop
cmp
shrl
xchg
jmp
test
jl
mov
in
pop
adc
sbb
adc
pop
jno
mov
xchg
adc
cmp
jp
push
out
out
popf
pushf
outsb
cmp
insl
add
ss
push
daa
mov
cmp
lret
sbb
push
in
mov
sub
mov
or
fldl
and
mov
xchg
jmp
out
push
adc
sarb
mov
push
mov
pop
repnz
inc
cmpsb
clc
fbld
hlt
inc
nop
xchg
sti
subb
fsubrp
dec
inc
jecxz
ficoms
scas
test
mov
jb
mov
mov
mov
pop
xchg
dec
mov
and
lahf
adc
xor
out
test
shll
push
test
and
fcoms
pop
clc
xchg
cmp
or
int
mov
push
xchg
cli
mov
sbb
dec
loop
fstpl
pop
cmp
jne
das
xchg
mov
loop
or
mov
jp
in
xchg
dec
cmpsb
mov
ds
movsb
imull
adc
cmp
popa
sbb
jo
ret
imul
jge
or
cltd
push
clc
dec
in
cli
leave
push
aaa
int3
jmp
fdivl
lret
imul
cltd
cs
out
enter
insl
jnp
pop
notl
pop
push
jne
aas
mov
sbb
or
inc
shlb
push
jge
lock
dec
pop
mov
cmp
inc
movsl
jb
call
cld
cmp
adc
ja
mov
subb
push
cmp
add
ds
jne
dec
inc
or
mul
negb
sbb
stos
mov
dec
cwtl
rclb
push
pop
enter
cmpsb
jnp
and
fucomip
leave
adc
xchg
clc
xchg
sub
sbb
xchg
adc
or
sar
daa
test
sarb
adcl
mov
ret
xor
xorb
and
out
ficomps
pop
push
cld
dec
cmp
sarl
in
mov
adc
xchg
stos
jge
fldenv
inc
sub
push
xchg
test
xchg
ret
js
jp
xor
fnstcw
adc
jb
test
pop
cmpsb
dec
jge
jo
repz
push
lahf
mov
daa
jne
push
push
sub
jbe
fs
mov
and
cmc
fstl
data16
push
les
mov
add
sub
jns
cltd
orb
fmull
inc
adc
adc
jno
aad
fisubrs
cmp
icebp
lods
nop
and
test
das
jno
xchg
push
dec
mov
test
or
jl
dec
xor
mov
xlat
push
add
mov
in
push
jo
out
or
fildll
jns
push
xor
movsl
jno
imul
sub
imul
lahf
orb
in
adc
sub
sub
jp
or
cs
divb
jne
lds
mov
mov
jbe
imul
scas
push
and
mov
test
sub
enter
xorb
push
movsb
icebp
add
cmpsb
jae
pop
add
clc
add
xor
lret
test
insb
add
mov
popf
in
xchg
xchg
mov
dec
in
cmc
fiadds
fmull
loope
repnz
fdivrl
bound
push
mov
mov
fwait
cwtl
test
sahf
fsts
aas
leave
out
rcll
mov
and
and
stc
adc
icebp
adc
push
dec
repz
cmp
or
mov
dec
out
or
int
jle
mov
cmp
and
and
jcxz
xchg
cs
gs
ds
test
jnp
xor
loop
clc
and
dec
dec
lods
mov
mov
rcrl
add
adc
in
sbb
and
add
sub
int3
addr16
mov
cld
xor
outsl
adc
add
cmpsl
lcall
mov
inc
push
xorps
je
pop
mov
mov
mov
mov
and
lds
mov
iret
ficompl
cwtl
mov
jmp
je
cld
rolb
jae
stc
call
lock
pop
inc
jp
xorb
test
mov
js
xchg
enter
mov
add
sub
pextrw
xchg
movsb
imul
aad
push
cltd
dec
fldcw
dec
push
and
mov
data16
das
lock
std
dec
mov
hlt
mov
fwait
and
insb
inc
cs
insb
cmp
lret
cmpsb
jle
in
inc
outsl
mov
cltd
xchg
cltd
out
jg
inc
scas
jo
std
dec
mov
push
push
pop
in
push
pop
pop
mov
jns
adc
loope
lods
jb
mov
pop
xor
pop
ret
mov
fldl
mov
das
gs
jnp
fbstp
fnstcw
jnp
in
int3
shlb
lods
mov
jo
dec
popl
daa
pop
dec
adc
add
mov
aam
daa
aam
push
inc
push
xchg
pop
into
fs
icebp
fsubrp
sbb
pop
sbb
loopne
and
aad
cmp
hlt
insl
mov
loop
adc
jp
mov
xchg
into
pop
stos
inc
cmpsl
into
dec
push
stos
jle
cmp
gs
les
cmc
pusha
push
push
mov
insl
and
shr
dec
sub
addr16
push
add
andb
mov
shrl
pop
adc
sti
dec
and
fisubs
ret
repnz
xchg
push
mov
dec
in
mov
call
pop
adc
inc
xor
adc
xor
xor
jmp
outsl
or
cmpl
inc
and
inc
pusha
add
push
das
scas
dec
jns
jle
cmpb
and
repnz
mov
sbb
sub
jl
mov
daa
or
mov
rorl
lcall
mov
push
dec
call
adc
mov
dec
cmp
mov
sub
add
mov
pop
dec
rep
fcmovnu
xor
xor
ret
xchg
cltd
sub
mov
dec
gs
pushf
xlat
popa
mov
sarb
push
stc
mov
xor
push
and
movsb
pop
xlat
jno
mov
je
cmpsb
test
cltd
idiv
mov
sub
sbb
dec
dec
in
xlat
mov
test
movsb
js
out
repz
paddd
ds
divb
mov
repz
out
hlt
mov
jmp
inc
ss
mov
lods
insb
jl
jae
jb
inc
ret
cmp
insb
jno
je
mov
inc
cld
nop
sub
movsb
xlat
loopne
mov
pusha
pop
xchg
xor
ret
movsl
js
aaa
pushf
pop
add
xchg
lahf
lret
inc
push
mov
cs
in
jb
mov
push
insb
inc
sub
cmp
dec
jne
enter
mov
scas
xlat
pop
dec
xchg
out
sub
pop
add
sbb
or
cmp
jl
xchg
loope
adc
xchg
ficoml
push
jp
jae
ljmp
fs
lcall
lret
push
sbb
xchg
fisttpll
mov
fbstp
notl
out
iret
hlt
mov
xlat
push
test
mov
test
dec
in
lret
arpl
in
dec
ret
das
ljmp
inc
jmp
push
push
sbb
std
icebp
sbb
js
loope
data16
pop
jne
cmp
jp
fnstsw
push
or
push
jbe
popa
mov
ret
or
addr16
repnz
xchg
dec
xor
mov
jo
inc
nop
out
in
sahf
jbe
adc
lds
insb
fdivp
and
inc
mov
cltd
and
mov
call
inc
xor
xchg
mov
ljmp
mov
int
adc
ret
cmp
mov
sbb
in
push
popf
repz
cmp
push
cli
jne
sbb
xchg
mov
mov
lods
dec
outsb
adc
rcr
jo
mov
in
pop
dec
xchg
enter
jge
loopne
mov
mov
out
into
lods
outsb
push
mov
in
call
stos
mov
roll
xor
fdivs
popf
push
sbb
mov
push
or
pop
inc
jo
movsb
lock
movsl
or
xchg
mov
iret
xor
aam
pusha
stos
sub
roll
aad
cwtl
dec
scas
icebp
enter
mov
and
decb
mov
adc
xor
xchg
scas
gs
mov
jo
data16
mov
mov
sub
mov
push
mov
lods
jge
lahf
sti
dec
lahf
jecxz
out
int3
push
xor
into
lods
xchg
idivb
loopne
rorl
xchg
push
push
test
sti
in
lock
daa
test
xor
test
add
cltd
mov
dec
test
pop
inc
add
cmpsb
roll
test
sub
lret
testl
mov
aas
mov
fisttpl
shr
cwtl
mov
xchg
xor
mov
mov
inc
add
jecxz
loopne
or
jmp
enter
repz
lods
and
test
dec
inc
and
jb
dec
jl
sbb
mov
ljmp
in
out
and
aad
mov
pop
pop
fstpl
inc
shrl
pop
mov
scas
jne
neg
sahf
movsl
xor
lahf
inc
fstps
lods
cmp
mov
sahf
pop
out
mov
pop
jnp
lea
std
mov
mov
arpl
clc
outsb
lcall
lods
pop
mov
sti
loopne
mov
fbld
inc
test
jl
aas
or
or
ja
ja
sbbl
cmp
add
jb
clc
jl
adc
nop
fwait
popf
inc
pop
sub
stc
xlat
jp
cmc
push
adc
insl
shrl
fistpl
popf
mov
jp
in
sbb
loopne
ret
das
call
sti
mov
push
in
outsl
icebp
and
int
faddl
lcall
sub
xchg
mov
xchg
ss
add
out
ja
inc
mov
mov
loopne
mov
pushf
sbb
or
xchg
jne
mov
in
lds
pushf
mov
pop
or
or
cltd
sub
mov
push
iret
pop
test
fnsave
sub
or
lcall
mov
in
lret
jbe
cmpsl
push
fs
adc
push
and
cs
or
xchg
aad
xchg
stos
pop
pop
pop
xor
arpl
cltd
sar
out
aad
repz
xchg
xlat
dec
imul
outsl
cs
testl
xchg
iret
ficomps
fdivl
addr16
dec
scas
shll
mov
test
sarl
insl
jp
pop
sub
mov
jecxz
jns
out
xor
mov
cmpsb
mov
pop
pop
scas
insl
push
cmp
std
inc
mov
ret
mov
mov
inc
inc
push
mov
in
std
dec
sub
lods
nop
cmp
outsl
mov
xlat
sub
xor
int
sbb
ss
mov
leave
cli
stos
mov
leave
sti
cmc
arpl
dec
aad
xchg
ljmp
pop
stc
push
mov
xlat
cli
mov
in
xor
xor
xchg
lds
dec
into
mov
xor
inc
cmp
ror
arpl
xchg
arpl
xor
mov
aam
lods
in
push
pop
mov
and
cmp
cmp
or
push
popa
and
loopne
shl
sahf
cmpb
sbb
and
stos
mov
mov
sub
mov
jae
shl
out
aas
mov
jmp
xor
mov
jb
pop
push
pop
gs
fwait
scas
hlt
pop
dec
mov
test
pop
cld
or
cmp
sbb
sarb
add
imul
lea
mov
stc
or
lret
dec
push
pop
pcmpeqb
pusha
mov
add
pop
mov
xor
pop
outsl
icebp
add
lods
xchg
jecxz
cwtl
and
mov
ljmp
packssdw
mov
adc
stos
insl
mov
insb
dec
inc
inc
dec
xchg
dec
rcll
repz
lods
sar
movsb
in
push
xchg
push
ret
stc
jmp
sbb
movsb
sbb
loopne
push
mov
mov
xor
in
mov
and
xchg
xchg
mov
pop
adc
lock
scas
out
aam
movsb
ret
and
lret
fldenv
push
mov
lods
outsb
push
shlb
cmp
or
popa
popf
aad
mov
ret
adc
lock
pusha
add
imull
sbb
inc
jle
dec
pop
sbb
mov
mov
je
pop
push
and
xchg
dec
scas
lret
enter
jge
jge
shl
pop
int3
push
pop
insb
add
push
lret
bound
xchg
dec
jecxz
jmp
jg
add
imul
pushf
xchg
popf
xchg
xchg
xchg
or
jnp
jo
jae
cmp
cmpsl
iret
data16
pop
sub
je
sub
mov
hlt
and
ds
mov
cmp
insl
jmp
sub
xor
adc
add
cli
push
dec
fnstsw
inc
lret
and
lods
xchg
push
mov
sub
xor
enter
jecxz
popf
mov
add
adc
loopne
jle
pop
inc
andl
mov
jp
das
shrb
and
sub
loop
les
jmp
jnp
jp
sti
test
mov
xchg
mov
std
lahf
push
ljmp
loope
sub
sahf
mov
int3
adc
pop
mov
pop
stc
out
push
addr16
xchg
mov
push
cmpsl
and
inc
fildl
addb
enter
cmc
lret
push
cmc
and
gs
repz
push
mov
in
leave
icebp
push
or
mov
jmp
mov
test
ja
dec
inc
xor
ja
pop
idivb
sarb
nop
in
filds
push
jge
add
addl
mov
addr16
mov
icebp
fcoms
ror
pop
pushl
in
push
cmp
pushw
adc
pop
and
push
jb
idiv
popa
or
or
push
xchg
in
xlat
jl
adc
orb
mov
or
imulb
push
cmp
sbb
or
shlb
mov
icebp
add
nop
inc
mov
call
aad
dec
adc
ljmp
xor
mov
sub
aam
push
mov
or
nop
inc
and
sbb
int
mov
outsl
or
or
in
push
and
rcll
add
dec
and
sub
inc
out
mov
test
lcall
add
dec
and
daa
jmp
inc
nop
rcrl
subb
and
loopne
int3
sub
xchg
xor
mov
pusha
cmpb
inc
mov
sbb
and
or
push
sbb
andb
out
imul
jb
fdivs
leave
lret
pop
jb
lods
push
xor
test
test
ret
pop
mov
jmp
sbb
subl
notb
mov
jae
movsl
mov
push
and
sub
bound
shl
mov
mov
sti
mov
cmp
mov
mov
lcall
adc
movsl
cmpsb
out
jb
popf
xchg
stos
lahf
xlat
lods
das
lahf
fwait
lcall
into
lret
loop
sbb
dec
int3
sbb
inc
aam
xchg
stos
or
aam
adc
mov
xchg
jno
out
nop
xchg
inc
and
mov
aam
lods
jo
add
mov
xor
xor
mov
shll
jp
fsubp
cmpsl
movsb
out
or
outsl
cmp
lahf
cwtl
xchg
cwtl
sbb
push
push
mov
inc
push
sbb
iret
or
pop
dec
or
cmp
aad
fwait
sbb
mov
jle
mov
cmpsb
fsub
sbb
xchg
mov
xlat
mov
lods
mov
dec
dec
dec
les
jne
and
xchg
jns
xchg
fildll
je
cli
test
inc
cmp
push
lock
lahf
arpl
test
and
loopne
xor
leave
mov
mov
cmpsl
sub
cmp
aas
adc
fisttps
lahf
xchg
popf
fwait
lcall
mov
outsl
adc
daa
xor
mov
int
mov
push
jp
test
pop
mov
insb
adc
push
push
xchg
std
cmp
sahf
mov
notb
jle
mov
in
sbb
je
or
mov
lods
out
aaa
push
imul
adc
cmpsb
and
lahf
xor
inc
scas
push
xchg
xchg
sbb
dec
scas
dec
pop
jo
int3
xchg
cltd
mov
jbe
fs
xchg
xor
inc
js
pop
in
adc
ss
xchg
and
sub
add
mov
adc
das
push
jnp
jns
jns
xor
and
add
cli
pop
add
sbb
scas
sub
mov
cmc
outsl
cld
rcr
idivl
xor
jp
jle
in
xor
cmc
push
call
pop
mov
xor
aaa
arpl
push
popf
push
es
call
cmp
mov
decl
popf
cli
lret
mov
stc
mov
sti
arpl
clc
jne
mov
addr16
xchg
ja
mov
test
jecxz
shrb
stos
out
inc
pop
call
xor
xchg
xchg
pop
lcall
dec
into
jmp
pop
mov
repnz
jnp
fwait
push
or
je
cmc
cwtl
or
sub
aas
jno
cmp
fcom
repz
cmp
inc
out
mov
jle
lcall
sahf
rcll
pop
add
pop
sahf
rorl
mov
and
fs
loope
rorb
repz
outsb
pushf
nop
mov
xchg
jns
inc
cmp
cmp
pop
lds
jg
fnstenv
xchg
pop
or
insb
mov
sub
fisubrl
cwtl
insl
shlb
mov
cmc
ds
push
adc
cmp
or
dec
rep
ds
sub
sub
mov
movsb
imul
pop
mov
adc
dec
pop
rclb
adc
les
in
mov
push
fiadds
mov
and
scas
push
inc
inc
mov
out
push
push
mov
lea
rorb
cwtl
inc
xchg
sti
push
push
aad
jb
mov
in
or
in
sub
nop
xchg
icebp
or
test
sbb
push
sub
push
or
scas
dec
adcb
aas
ja
fdivs
fildll
mov
jmp
mov
inc
adc
jae
mov
jge
or
dec
cmp
mov
arpl
dec
inc
in
je
aaa
outsb
shll
mov
das
call
jbe
mov
out
sbb
sbb
idivb
jg
mov
and
jmp
pop
mov
push
add
nop
jecxz
inc
inc
out
push
ljmp
imull
cld
sub
jmp
or
pop
out
idivb
jge
hlt
xlat
pusha
add
jle
dec
jmp
insb
arpl
dec
pop
jb
inc
es
lcall
shll
cli
fdivs
or
lods
add
sbb
shrl
fdivs
lds
adc
repz
movsb
push
sbb
xchg
xchg
in
mov
data16
and
and
rolb
sub
lods
test
mov
xor
lds
mov
cmp
in
insb
stos
loop
dec
lret
sub
jecxz
xchg
cld
jbe
dec
divb
cmc
stos
and
mov
out
dec
adc
sub
pushl
rcll
nop
popf
or
cmp
loope
jbe
dec
inc
mov
lahf
andb
repz
cld
inc
repnz
sar
in
pop
xchg
pop
sub
popf
adc
pop
ja
push
xchg
mov
lret
out
push
in
lods
loop
lahf
shlb
cmp
and
lods
add
jns
int3
sbb
inc
xor
xchg
nop
cmp
loope
loopne
mov
add
sub
stos
stc
mov
sub
fs
xchg
xchg
and
or
mov
clc
fsubrs
inc
adc
test
mov
ljmp
mov
pop
sub
inc
add
cld
mov
mull
push
aaa
xchg
imul
test
push
push
lds
cwtl
sub
mov
or
mov
outsl
ret
out
dec
leave
sub
inc
sub
test
scas
adc
xlat
sbb
pop
insb
xor
pop
pop
shrl
ficomps
cmp
lock
inc
sbb
ja
bound
into
jb
jmp
xchg
xchg
xchg
pop
scas
or
mov
pop
xchg
nop
test
andl
push
scas
popl
mov
sti
bound
jno
mov
mov
add
dec
aad
xor
pusha
inc
daa
xchg
test
add
out
mov
imul
stos
sub
lahf
add
test
sub
jle
xorb
shlb
mov
lods
outsl
lcall
adc
and
in
outsb
lcall
sub
mov
lcall
cld
adcl
stc
sbb
dec
xchg
aad
ret
ret
pop
ljmp
adc
or
sub
adc
enter
cmpsb
jbe
xchg
dec
jl
icebp
adc
mov
adc
push
roll
mov
repz
js
iret
ret
ss
and
lahf
popa
fsubs
test
into
ret
movsl
inc
or
mov
mov
lea
in
pop
aad
out
adc
cmp
sbb
dec
loope
sbb
mov
add
popa
adc
dec
cmp
push
dec
mov
push
outsl
xor
mov
pop
pop
sub
aam
jb
cmp
cmpsl
nop
int3
out
mov
call
pop
popa
out
inc
and
sti
scas
or
in
fs
aas
inc
cld
js
sbb
cltd
sbb
repnz
leave
ret
enter
dec
rolb
cmp
push
and
icebp
arpl
and
sub
xchg
xor
icebp
fwait
dec
in
xorb
or
xchg
nop
mov
sub
add
es
add
das
jb
mov
les
push
jae
or
nop
test
or
daa
pop
mov
xor
add
mov
push
and
mov
pop
cltd
imul
stos
jmp
insl
adc
add
test
or
lock
movsl
and
gs
in
lods
or
pop
xchg
jo
in
loope
rolb
movsb
cmp
imul
sub
push
sahf
aad
stos
fmull
cmp
jne
xchg
shr
add
push
jo
stos
stos
jmp
sar
bound
pop
in
test
cmpsl
and
mov
dec
add
mov
xlat
pop
shlb
mov
push
mov
clc
fs
jne
jl
dec
xor
push
rcll
sti
lret
xor
bound
test
mov
sub
rorl
pandn
nop
mov
nop
fisubrs
jle
mov
push
das
push
pop
mov
cmp
dec
fidivs
aam
jno
out
push
inc
jae
pop
lret
pushf
aad
mov
stos
out
xchg
mov
repz
jbe
stos
ljmp
jle
jle
sub
cmpb
jecxz
add
or
mov
mov
pop
jle
mov
or
jno
scas
jecxz
inc
imul
idivb
js
jno
pop
shlb
rol
mov
outsl
dec
shrl
das
imul
cmp
lahf
sbb
imull
dec
adc
push
pop
push
aas
inc
and
pop
rcll
nop
mov
adc
inc
cmc
std
cld
sub
dec
jle
and
or
gs
iret
adc
xor
fwait
shll
cmpsb
ja
test
dec
lea
mov
inc
iret
jl
rcrb
mov
cmp
sti
pop
sub
pushf
dec
adc
jo
cmp
adc
ret
sub
inc
rcrb
cmpl
clc
rorl
pop
mov
and
push
popa
dec
pop
xor
inc
ficomps
ss
xchg
push
int3
push
mov
and
inc
or
fcompl
sub
or
jne
xchg
les
stc
paddq
add
jmp
pop
or
xor
jb
mov
jmp
add
xchg
sbb
negb
jo
jle
int
or
pushf
xchg
shl
mov
test
add
push
lcall
push
sbb
and
mov
lea
push
test
iret
mov
and
add
subb
push
fisubrs
adc
fdivrs
jnp
mov
push
pushf
mov
cmp
sub
dec
movsl
jbe
int
adc
ret
push
fs
or
jecxz
sub
push
lods
jbe
dec
add
arpl
dec
popl
orb
dec
loop
mov
data16
pop
inc
add
sub
clc
sbb
add
sbb
and
jle
push
push
sbb
pop
js
mov
in
xchg
scas
push
ljmp
cwtl
xor
jo
insl
dec
push
ret
loope
push
push
cmp
and
mov
xor
or
call
or
and
jl
sti
negb
loope
repnz
cmpsl
push
stos
add
adc
add
enter
sbb
mov
pop
mov
and
sbb
adc
imul
jne
or
test
js
jl
inc
xor
sbb
inc
push
mov
out
cmp
out
mov
cmc
bound
cmp
shlb
mov
clc
jbe
roll
lods
push
arpl
icebp
aas
xlat
push
cmpsl
or
jae
je
fsqrt
dec
insl
popf
lds
adc
dec
mov
fisubrl
popf
and
stos
rcrb
hlt
xchg
daa
jmp
mov
cwtl
inc
into
hlt
or
cli
es
add
ret
rclb
push
lret
push
fidivrl
inc
dec
mov
xor
mov
add
iret
mov
shl
jne
aam
xchg
ret
faddp
dec
shrl
sub
inc
arpl
add
xchg
int3
push
dec
mov
cmp
outsl
jmp
mov
pop
roll
ficoms
push
and
mov
movsl
sub
gs
cs
cmp
lods
mov
in
xchg
nop
and
das
movsl
out
and
pusha
mov
mov
mov
mov
push
cmp
and
jae
and
and
je
inc
test
mov
aam
mov
jmp
adc
pop
into
and
lods
nop
pop
adc
gs
mulb
mull
pop
sbb
in
xlat
and
ljmp
test
xchg
or
add
jecxz
fildl
fwait
pushf
pop
jo
jle
aaa
inc
push
mov
fbld
sub
sahf
mov
pop
lret
call
jnp
xor
pop
lea
add
xchg
popa
lahf
int
adc
mov
loop
or
shrl
pusha
pop
xchg
cmp
enter
mov
incb
add
or
hlt
popa
xor
loop
enter
mov
inc
cmpsb
and
cmp
std
fsubs
lock
xchg
mov
fidivl
cmp
leave
push
pop
and
inc
sbb
push
nop
mov
or
jo
xchg
adc
add
sub
push
pushf
and
xchg
pop
cmp
sbb
ds
mov
jle
fldcw
rcr
insl
push
divb
adcb
nop
add
cmc
jg
xchg
inc
mov
and
out
mov
jnp
neg
filds
mov
fincstp
fiadds
outsb
outsb
out
test
or
mov
fisttps
jae
jge
divl
clc
pop
mov
fdivrl
pop
sbb
push
and
adc
icebp
or
xchg
mov
in
scas
and
dec
out
add
push
and
out
fistpll
push
dec
lea
iret
shl
int3
sbb
ss
add
mov
sub
mov
iret
dec
mov
dec
das
andb
cltd
xor
jb
jae
fnsave
inc
stos
call
loop
sbb
in
dec
cwtl
out
jnp
inc
in
xchg
dec
add
mov
in
mov
mov
adc
fidivrl
sub
fdivs
xchg
into
xor
insb
sub
xor
add
sahf
cmc
popf
lods
add
adc
dec
lcall
int
push
adc
movsl
xchg
fsubs
repz
rolb
xor
xor
jp
adc
jo
insl
or
les
xor
dec
test
aad
xor
or
jno
xchg
aas
adc
fcomps
xor
stos
aaa
arpl
dec
and
icebp
jns
xor
cmp
mov
inc
sbb
xchg
add
fstpl
enter
mov
xor
add
dec
daa
dec
or
aas
test
daa
int3
push
sub
add
push
and
test
sbbl
mov
movsl
push
pop
cmc
sbb
inc
add
out
push
mov
dec
fstl
xchg
dec
cmp
fs
mov
and
cwtl
fwait
push
stos
ss
in
mov
or
inc
jmp
sub
test
in
hlt
movsb
adc
mov
aaa
ret
xor
mov
aas
fsubrs
jle
or
aas
mov
ffree
or
popf
aad
in
mov
mov
imul
and
push
fs
idivb
test
std
lcall
das
pop
inc
inc
arpl
int3
lahf
push
daa
pop
adc
enter
push
sti
scas
testl
xchg
sti
insb
mov
cmpsl
jb
dec
inc
repz
xchg
cld
lock
fiadds
mov
enter
inc
push
push
ljmp
fisubrs
inc
imul
add
jmp
or
cs
subl
popl
jns
stc
jl
outsl
lea
adc
inc
in
xchg
stos
loope
aaa
push
scas
adc
clc
cmp
mov
call
jae
fmul
fsubr
mov
mov
loope
ljmp
lea
jp
loop
mov
insl
pop
inc
inc
push
testb
pop
test
cmp
iret
jge
xchg
repnz
stc
xchg
popa
mov
int3
in
fmull
push
sar
jne
mov
in
and
fidivrl
push
mov
jnp
out
mov
inc
lea
xor
outsl
push
sbb
mov
fimuls
cmp
mov
mov
jns
out
shll
mov
insl
sti
aaa
jae
repnz
int3
pushf
cmp
lods
mov
jae
adc
push
jge
inc
cld
pusha
out
and
cmpsl
aad
and
lea
bound
jle
xlat
repnz
push
cmc
ret
fs
adc
aaa
inc
push
repz
mov
cmc
inc
call
mov
scas
mov
fbld
push
or
push
shll
pop
dec
out
lcall
mov
loopne
imul
mov
fcmovnbe
sbb
push
push
int
dec
int
rcl
out
movsb
adc
jecxz
mov
repz
jno
es
fisubs
int3
std
sub
subl
lds
mov
fstl
dec
push
add
mov
adc
icebp
fmuls
mov
jmp
add
sbb
pop
mov
jge
in
aas
pop
xchg
imul
insl
mov
dec
in
adc
xchg
bt
sub
clc
or
xchg
push
lahf
xlat
fldt
mov
in
rcrb
adc
sbb
lahf
fwait
adc
sub
hlt
mov
cmp
js
in
xchg
or
mov
stos
ja
js
xchg
cmpsb
lcall
xchg
test
ja
popf
pop
roll
and
push
mov
jne
inc
fdivp
or
xchg
cmp
mov
sub
fstpl
cmovs
sarl
sbb
call
nop
or
inc
xchg
adc
ss
push
das
fucomp
orl
cwtl
stos
gs
insl
sarl
cmpsb
cmp
mov
xchg
sub
pop
insl
nop
stos
mov
xchg
sbb
icebp
es
sbb
pop
insl
jne
push
cli
lahf
add
int3
xchg
mov
in
aas
imul
mov
mov
push
inc
ja
jmp
mov
out
dec
jns
jb
pop
lods
adc
aam
inc
xor
sahf
ljmp
sbb
jl
ljmp
mov
pop
push
add
shrl
pushf
fisubl
cmp
cmp
add
mov
rolb
shlb
add
repnz
cmpsb
push
mov
pop
add
mov
mov
adc
les
sahf
xorb
mov
jae
cmpsl
inc
xchg
stc
scas
xchg
stc
sub
push
mov
jl
xchg
push
xor
std
inc
pop
imul
mov
rcrb
lds
les
jmp
cltd
rolb
cmp
pop
cmp
adc
push
jb
jmp
sub
test
ds
daa
fptan
mov
push
js
dec
sbb
dec
arpl
out
sbb
test
jge
push
in
pushf
push
jns
jnp
es
mov
int3
nop
iret
push
faddp
pop
aam
mov
sub
push
or
cli
stos
push
stos
sub
adc
or
jb
rcl
jae
das
push
sahf
bound
cmp
xor
adc
clc
adc
mov
out
loope
rcll
aas
rcr
and
lods
imul
nop
jb
stos
repnz
lea
fcmovnb
inc
loope
inc
jmp
sbb
xchg
rcrl
pop
cwtl
sub
mov
ret
std
popa
out
loopne
inc
dec
insl
and
jmp
mov
addl
mov
imull
pushl
movsl
aas
dec
lcall
mov
loopne
addb
mov
mov
pop
daa
mov
outsb
mov
adc
daa
mov
jp
shll
loope
sahf
cmp
ljmp
leave
add
int3
enter
aam
ret
push
inc
dec
jo
push
nop
movsl
in
and
dec
xlat
xor
mov
in
inc
enter
bound
cmp
adc
bound
or
nop
jecxz
stos
mov
ret
das
lcall
data16
mov
pop
push
lahf
sub
fldl2t
jg
fs
mov
xchg
xchg
mov
ss
push
add
in
sbb
mov
inc
fsubr
or
sar
pop
in
jle
mov
jle
ja
aas
aas
sbb
jae
divb
cmc
test
jmp
dec
dec
lods
cmp
jnp
jle
cli
push
cmc
cli
mov
into
leave
pop
inc
pop
sub
mov
rep
pop
pop
cmp
lret
mov
inc
jecxz
pop
xlat
lcall
dec
mov
xchg
push
lds
jmp
xor
fwait
or
les
sbb
data16
mov
aas
dec
xor
inc
fdivr
and
mov
aas
stos
push
push
aaa
shrb
xchg
dec
sti
dec
dec
and
adc
inc
push
mov
jmp
scas
xor
scas
stos
adc
lea
dec
inc
adc
inc
mov
imul
rorb
dec
and
xor
rolb
mov
mov
cltd
and
js
fstpt
and
aad
xchg
sub
ss
jb
movsb
push
xchg
add
push
sub
icebp
or
stos
iret
lea
ret
lret
pusha
dec
dec
pop
push
les
cli
add
sbb
mov
pushl
or
adc
mov
ficoms
add
fadd
in
mov
cmpb
jp
adc
adcb
and
imul
jne
pop
sbb
push
testl
mov
sbb
adc
les
lcall
cmp
mov
cmpsl
mov
and
outsl
push
xchg
out
mov
push
cmp
div
adc
das
xchg
xchg
dec
add
mov
sbbb
in
or
xor
mov
sbb
or
and
cltd
pop
mov
pop
stos
outsb
pop
lds
pusha
adc
xchg
sbbl
adc
out
fwait
scas
adc
loope
mov
in
mov
pop
push
lds
pushf
or
sbb
andl
add
pop
lds
lds
inc
leave
xor
mov
es
jne
add
mov
push
mov
stc
push
push
jecxz
sbb
or
test
rcll
xor
popa
int
mov
insb
adc
dec
sbb
scas
xchg
and
dec
mov
xchg
xor
push
xchg
sbb
shrl
cmp
dec
rclb
push
mov
pop
testl
call
pop
xchg
xor
js
or
xor
mov
jp
add
rolb
pop
mov
or
inc
mov
xor
rclb
test
test
int
or
out
gs
dec
imulb
pop
mov
pop
cmc
call
push
scas
inc
addl
and
or
imulb
jne
subl
xor
sarl
lcall
or
or
push
insl
repnz
mov
lret
and
mov
std
movsb
sbbl
or
cs
movsl
pop
rcll
fistpl
inc
insl
lahf
xchg
test
inc
sar
jnp
jnp
test
lcall
mov
loope
das
or
ss
mov
imul
cli
dec
lcall
jmp
add
fidivs
fcmovbe
adc
fnsave
fidivl
jnp
inc
fldcw
xchg
arpl
test
leave
push
xor
pop
pop
adc
cwtl
inc
jb
ror
enter
insl
mov
inc
testl
and
in
and
fstl
mov
xchg
inc
stc
mov
sbb
fisubrs
pop
xor
rorl
adc
inc
push
jo
push
inc
pop
add
rolb
jo
scas
out
out
mov
sbb
dec
call
add
mov
or
int
mov
sbb
mov
daa
aaa
sbb
sub
mov
xor
jo
test
mov
pop
sbb
popf
add
xchg
les
lahf
stc
outsb
xchg
mov
push
pop
mov
or
test
sub
pop
test
js
add
icebp
jecxz
push
xor
outsl
adc
sarb
mov
cmpsb
cmc
sbb
sbb
push
shrl
dec
andl
jmp
aas
sbb
les
and
cld
mov
addr16
cli
mov
xchg
mov
pop
loope
xor
cmpsb
js
psllq
sbb
shr
push
scas
out
lods
xor
lock
insb
mov
add
lret
bound
xchg
xor
pop
aaa
cli
cmp
outsb
imul
jecxz
xchg
xor
lods
std
iret
lcall
stos
gs
jns
mov
cwtl
lods
jle
bound
int3
pop
lahf
in
pop
lahf
loope
push
pop
mov
bound
jg
decl
adc
pop
idiv
scas
xchg
lds
ja
out
xchg
je
and
popf
btcl
clc
gs
adc
data16
in
jp
mov
adc
adc
sbb
insl
repz
cmp
and
push
daa
mov
or
mov
out
lock
mov
or
outsl
pop
imul
ja
cltd
imul
adc
jo
cltd
mov
je
inc
fwait
mov
inc
or
and
pop
jecxz
lcall
insb
push
addr16
add
enter
stc
mov
int3
out
cltd
clc
cmp
cmpsl
mov
out
mov
dec
lock
lea
ret
loope
out
and
test
sub
aas
les
lock
sub
shrl
fstp
jg
inc
adc
lock
jb
sbb
js
mov
mov
push
call
rep
shll
adc
jmp
mov
xchg
fnsave
or
jns
mov
cmpsl
outsl
cltd
rol
xor
repz
cwtl
sbb
xchg
cld
jecxz
xchg
filds
fisttpll
pop
xor
decb
jno
mov
andb
lea
and
pop
push
sbbb
xlat
lahf
out
mov
loop
jne
scas
aas
push
xor
push
lods
push
in
mov
jns
rcr
repz
les
jmp
push
jne
cltd
dec
cmpsb
aaa
cwtl
outsb
sbb
shrb
popa
lods
or
pop
imul
int3
in
pop
je
js
jae
pop
pop
je
cmp
pop
xchg
mov
loopne
mov
and
inc
int3
push
lea
and
inc
ds
nop
xor
pop
repnz
out
cmp
mov
pop
adcl
and
rcrb
call
js
or
outsl
inc
aas
cmpsl
decl
cli
jmp
mov
add
sbb
loopne
out
loop
sub
js
pop
rclb
and
jmp
mov
lods
xchg
repz
xchg
repnz
push
mov
lret
jns
mov
mov
aas
inc
push
jp
xlat
push
cmpsl
add
push
inc
out
fisubl
subb
or
sub
ret
xchg
fwait
test
add
jmp
xchg
or
sbb
call
adc
out
jno
fbstp
jp
lds
mov
int
xchg
daa
outsl
cltd
push
cmp
mov
mov
inc
push
insl
fcompl
cwtl
sbb
xchg
outsb
loopne
sbb
push
popa
xchg
movsl
mov
insl
stc
cmp
mov
xlat
enter
or
out
fcmovnbe
jns
dec
xchg
mov
imul
dec
jne
out
jle
call
mov
fistpl
pop
dec
jg
leave
jo
iret
sub
jg
icebp
xchg
lods
aas
in
pop
mov
push
imul
lea
jbe
pop
push
scas
dec
std
iret
sub
push
adc
aaa
inc
ret
pop
jmp
or
adcb
test
shll
adc
mov
fs
xor
vunpckhps
jbe
adc
mov
mov
push
pop
dec
or
mov
pop
sti
sub
leave
push
jnp
adc
jmp
jnp
icebp
jne
push
cmp
clc
add
xchg
aad
addr16
stos
sbb
jbe
mov
lods
shrb
stos
cmpsl
pop
pop
add
in
lret
pop
jb
xchg
sub
aad
es
and
sub
inc
and
xor
arpl
jno
ret
pop
or
loop
dec
mov
idivb
add
fsts
loope
pop
xlat
mov
rcl
les
jbe
push
clc
enter
lea
lods
ret
push
in
arpl
dec
mov
jg
adc
sub
aaa
out
dec
movsl
push
mov
inc
in
imul
iret
jmp
jg
mov
aas
test
cli
comiss
mov
jne
fidivs
lods
push
ljmp
stos
rorl
cli
rcrl
adc
dec
lret
mov
inc
lds
neg
clc
gs
sbb
aas
pop
mov
cmp
mul
sbb
stc
scas
popa
lock
stos
pop
cltd
cmc
xor
lahf
int
xchg
nop
cltd
sahf
mov
inc
mov
lods
mov
sti
fdivl
icebp
or
dec
inc
fisubrs
incb
popf
popa
popa
jg
sub
sub
inc
pop
adc
dec
testl
cli
sub
lahf
movsb
jl
ret
in
lock
call
adc
sub
lods
push
jae
and
jb
rcrl
in
xor
push
mov
jo
mov
xchg
mov
sti
mov
sbb
hlt
dec
movsl
dec
in
sub
addb
xlat
insl
inc
sub
push
leave
adc
jbe
jmp
lcall
or
mov
or
jge
mov
push
sub
push
mov
rcr
rolb
ss
xchg
jb
push
mov
push
imul
into
mov
inc
fiadds
adc
mov
and
sub
imul
loope
dec
mov
cmp
jnp
cwtl
cmc
sub
nop
incl
cmp
xchg
mov
scas
mov
pop
or
add
ja
dec
fcomps
sub
dec
mov
inc
ss
push
iret
lahf
daa
data16
mov
push
lods
sbb
nop
in
mov
fidivrl
shl
push
and
dec
mov
mov
or
ss
leave
stc
pop
rol
dec
in
xchg
fsubrl
ret
aas
outsl
rorl
loop
pop
and
or
andl
mov
scas
pop
pop
test
xor
xchg
mov
imul
xor
jne
shlb
out
mov
and
idiv
into
loopne
test
pop
mov
jbe
and
and
xor
cmp
mov
xchg
xor
subl
push
cmp
mov
mov
scas
cmp
jl
cs
lods
jg
mov
jbe
dec
jo
inc
cmc
out
dec
lea
aas
dec
xchg
xor
sbb
mov
xchg
rol
cld
mov
adc
repnz
fbstp
mov
or
and
xchg
sbb
and
aas
mov
and
jl
fwait
or
scas
loopne
sub
adc
sub
repnz
aam
arpl
pop
std
out
shll
pop
cmpsl
outsb
push
or
push
dec
jg
and
orb
repnz
xlat
cwtl
insb
lcall
ret
push
sti
imul
or
push
dec
pop
out
sbb
fdivs
dec
inc
fmull
mov
adc
xchg
daa
push
xchg
fisttpl
imul
inc
jle
pop
or
imul
pop
stc
rclb
adc
pop
inc
xor
pop
push
lea
inc
pop
jl
bound
data16
jl
mov
jecxz
test
add
lds
daa
incl
popf
cltd
mov
inc
ja
pop
shll
pop
mov
bound
lock
mov
adc
jae
jecxz
sub
mov
iret
mov
cs
mov
es
es
aad
add
xchg
notb
test
hlt
aam
lea
jg
das
mov
mov
movsb
or
adc
in
mov
push
mov
sbb
subl
jecxz
sub
and
mov
pop
faddl
arpl
das
jnp
stc
shr
mov
dec
faddl
pusha
sbb
aas
int3
sub
aas
push
repz
pop
or
aad
mov
sub
xchg
nop
xor
inc
inc
jo
inc
and
lods
fwait
popf
idivb
fs
loop
mov
mov
cltd
adc
in
and
jge
insl
mov
subb
lret
cmp
out
outsl
fwait
pop
cmpsb
sbb
pop
call
and
cld
sar
in
pop
call
xchg
xchg
dec
out
cld
ja
pop
sub
ss
enter
inc
push
cmp
imull
inc
movsl
ror
push
push
js
sar
repz
test
push
xchg
incb
mov
out
jae
xchg
loop
sti
scas
fwait
sub
sub
pop
loope
pop
aas
lock
cmpl
out
addr16
hlt
xchg
xchg
std
iret
js
rcrb
pushf
mov
gs
mov
out
push
fsub
mov
push
or
push
das
testb
lret
jg
lret
call
ret
popa
stos
sbb
into
fs
push
int
mov
add
mov
cld
jns
test
pop
jbe
out
cmp
loopne
std
clc
fisttpll
cli
icebp
pushl
xchg
dec
stos
test
inc
aaa
mov
xchg
lods
and
push
aas
adc
pusha
cmc
or
pop
pushf
jecxz
movsb
pop
out
rorb
sub
mov
xchg
std
test
gs
das
add
shll
cltd
test
xchg
stos
mov
fnstenv
into
and
lret
jnp
rorl
arpl
sarl
mov
fldcw
hlt
jecxz
repnz
in
out
mov
push
imul
mov
cltd
out
js
sub
arpl
cmp
loopne
lret
rclb
jp
loope
lea
in
subl
mov
outsl
je
dec
popa
adc
int3
movb
out
dec
addb
fmulp
mov
fidivrl
neg
cmp
rclb
jg
jp
dec
mov
int
or
push
mov
push
cmp
jb
sub
mov
jl
mov
loope
xor
add
hlt
out
jge
repnz
mov
repz
mov
test
jo
cld
mov
aad
or
insb
cli
ud0
mov
push
jb
xchg
pop
rclb
std
cmc
add
out
in
mov
idivl
out
and
mov
shrb
out
mov
jmp
inc
jg
loop
or
mov
cmp
in
pop
lods
mov
iret
sub
mov
std
fdiv
xchg
repz
sti
sbb
les
rorl
sub
mov
jbe
out
ljmp
jno
je
push
ret
sub
and
dec
mov
sbb
xchg
adc
in
inc
cld
scas
test
jo
je
daa
cmp
dec
or
xor
iret
or
testl
xor
xlat
mov
dec
ds
add
int3
mov
dec
inc
and
lcall
mov
push
lock
hlt
xor
ds
dec
mov
xor
mov
push
jb
adc
inc
xor
push
xor
data16
in
mov
das
lret
or
jmp
jp
xor
jle
push
mov
subb
aad
mov
movsb
pop
xchg
push
out
mov
stos
repnz
adc
mov
in
sub
repz
mov
sbb
xchg
jmp
adc
inc
adc
xchg
dec
imul
leave
lock
mov
in
outsl
mov
jo
and
inc
cmpsb
jnp
cmpsb
lahf
jp
or
in
sbb
xchg
jecxz
lret
cli
aaa
mov
mov
ljmp
shrb
mov
inc
mov
imul
push
pop
xor
popf
or
add
pop
lea
push
lea
xor
xor
in
xor
cmpl
repz
jne
popf
lret
out
xchg
jecxz
xor
mov
bound
dec
inc
pop
inc
mov
inc
adc
dec
inc
test
mov
pop
xchg
roll
addr16
adc
test
dec
cmp
cmpsb
sbb
sti
xchg
out
neg
out
xchg
bound
jle
sub
mov
inc
adc
push
ljmp
ret
mov
and
scas
call
les
fsave
cmpsl
mov
jns
push
push
movsb
push
mov
out
or
test
in
outsb
push
sub
nop
mov
int
negb
cmp
dec
adc
rclb
add
push
pop
lods
sub
ss
dec
std
lret
mov
es
jno
mov
nop
adc
jge
xchg
xor
mov
imul
dec
inc
sub
adc
xor
je
dec
pop
xor
push
fidivrs
lret
fsubrl
xchg
aad
push
mov
mov
ja
shrl
fcmovb
sub
or
sub
ret
inc
cli
inc
add
popf
and
addb
mov
jno
test
insb
into
sbb
or
daa
outsb
inc
movsb
sbb
ja
dec
test
mov
es
imul
cli
lds
push
sar
je
inc
out
cmp
jmp
pop
repnz
das
xchg
add
push
daa
fidivrl
jmp
sbb
cmp
lahf
pop
push
je
add
or
adc
repnz
dec
and
jl
xor
pop
aam
loop
das
mov
dec
sub
mov
insb
pop
addr16
insb
push
mov
in
jb
pushf
aaa
xor
fstpl
add
mov
sbb
rcrl
imul
push
fs
push
cmp
pop
mov
jp
addr16
pop
in
dec
fstps
lret
movsb
lods
hlt
mov
shlb
push
mov
mov
outsl
rorb
xor
shrb
daa
mov
les
arpl
aaa
js
and
sbb
sbb
xor
in
mov
pusha
inc
and
cmp
adc
push
int
cmpsl
xor
and
into
repnz
jg
js
cli
pop
mov
out
push
xchg
mov
lcall
mov
out
jbe
enter
aaa
push
into
or
adc
repnz
data16
and
ret
push
outsb
inc
pop
mov
call
cmc
lahf
cmp
lods
cmp
push
outsb
mov
cmp
repz
xchg
jns
arpl
xchg
fs
jbe
addb
in
pushf
icebp
es
mov
xchg
pop
arpl
lret
int3
and
rcr
test
outsl
push
aaa
jbe
or
repnz
push
movsl
int
jp
popa
xchg
fisttpll
sbb
mov
cmpsl
jo
movsl
lods
xchg
addl
aam
xchg
scas
lods
outsl
scas
sti
in
mov
mov
mov
leave
outsb
in
mov
add
inc
push
out
sbb
cmp
pop
push
fsubrl
sti
mov
cmp
clc
pop
mov
xchg
ds
pop
xchg
mov
dec
mov
or
cmpsb
pop
int
sbb
mov
psubsw
into
cmpsb
movsl
notl
lahf
int
push
out
sbb
inc
add
fstpt
sub
insl
cmp
and
and
das
push
popa
xor
ror
inc
jae
cmp
int
iret
pushf
aam
fnstcw
movsl
inc
xchg
mov
insb
push
out
hlt
and
test
je
jg
jne
cmp
out
xchg
cmc
push
ljmp
cmc
mov
jle
repz
shll
sbb
sti
xchg
daa
cltd
sti
add
rcl
cmp
arpl
mov
pop
or
test
data16
pop
insb
xchg
push
int3
lcall
xor
andb
das
xor
fcomps
cltd
out
std
pop
dec
fnstenv
insl
and
lock
mov
and
je
jb
pop
inc
xor
pop
sub
xor
inc
mov
xchg
jl
dec
out
sbb
xchg
cmp
pop
cmp
jbe
lock
inc
ss
pop
rorl
ja
lahf
scas
add
dec
push
aad
out
js
xor
aaa
inc
jne
sahf
pop
rcrb
push
adc
outsl
sahf
mov
call
fbstp
call
adc
nop
out
sub
adcb
mov
loope
inc
xchg
jno
push
mov
push
push
cwtl
sub
fsubrl
mov
out
adc
loope
lds
pusha
push
push
pop
xor
cmp
jae
xlat
es
and
ss
dec
nop
xlat
mov
xor
cltd
mov
clc
adc
stos
push
stos
mov
add
or
jge
sbb
jg
iret
cmp
test
into
mov
bnd
fisubs
adc
mov
xchg
cmp
push
jne
rcrb
outsb
adc
outsb
inc
sub
xchg
sub
xor
fcoms
stos
lea
daa
cs
mov
lcall
insb
cmp
rcl
inc
or
aaa
or
loop
pop
movsl
and
insb
dec
call
addr16
ljmp
add
push
hlt
imul
imul
and
or
dec
mov
dec
stos
mov
into
sub
jo
mov
gs
ds
push
jbe
sbb
and
push
lea
cli
xchg
hlt
cmpsb
mov
mov
dec
xchg
fcomps
ficoms
repnz
inc
add
dec
pop
mov
dec
pop
cmpsl
out
cmpsb
aad
xchg
loope
mov
jg
or
pop
push
xchg
daa
stos
sahf
dec
testb
repz
xchg
adc
cmc
sub
out
je
loop
jmp
jl
fsubp
fcmovbe
jle
popf
test
mov
cmp
sub
inc
push
pop
nop
pushf
ss
cs
jno
dec
pop
enter
jge
insl
shll
xchg
pop
jg
dec
loopne
or
nop
push
push
sbb
aas
dec
mov
addr16
jne
test
mov
mov
push
js
test
pop
mov
and
negl
jo
or
outsb
xchg
cs
xchg
inc
ss
mov
mov
lret
mov
loopne
das
dec
out
push
and
push
jl
movsb
xor
outsl
mov
xor
mov
icebp
jns
out
das
or
loop
aam
mov
or
stos
test
sub
sbb
and
lock
daa
popa
inc
or
adc
cmp
test
push
bound
xchg
fcoml
ss
insl
iret
dec
in
xchg
fdivr
jns
faddp
into
jl
lcall
mov
adc
test
notl
add
push
shlb
arpl
call
pusha
cs
adc
outsb
test
xchg
or
xor
push
in
mov
or
scas
decl
repnz
sbb
stos
shlb
mov
fldcw
mov
jge
scas
sbb
sub
mov
data16
and
dec
cmp
push
jmp
sti
jmp
jae
lods
mull
xchg
inc
push
bound
mov
dec
mov
xchg
sbbb
jae
mov
jns
cs
les
daa
sbb
iret
jns
ds
dec
sub
movsb
mov
mov
mov
xor
and
mov
out
imul
jl
hlt
sub
iret
cmp
lods
sub
testb
pop
sbb
ror
adc
jno
adc
jo
popf
mov
mov
pop
loope
out
sbb
popa
pop
je
notb
rorb
add
add
sysenter
pop
out
pop
data16
mov
or
lret
mov
inc
es
ja
add
shrb
xor
test
add
jecxz
iret
cltd
jbe
jo
jecxz
mov
push
dec
arpl
and
jmp
dec
mov
xor
in
adc
insb
popa
mov
sti
pop
jns
enter
je
mov
in
mov
in
lcall
stos
fnstenv
dec
sbb
pusha
cmp
test
stos
stc
jb
adc
repnz
lods
jp
outsl
in
inc
repz
lcall
icebp
inc
mov
stc
daa
or
inc
push
popa
xchg
pop
adc
test
sub
repnz
add
aas
pusha
jns
inc
push
jg
nop
push
push
loop
jae
add
dec
bsf
mov
inc
add
lods
xchg
and
jecxz
adc
scas
push
xor
popl
fs
xor
shll
mov
movsl
pop
hlt
pop
icebp
roll
xchg
fcmove
out
loope
mov
fs
add
pop
outsb
dec
add
sub
dec
push
inc
icebp
fldl
mov
insl
xor
ret
xlat
js
or
sub
mov
mov
in
sub
dec
sti
gs
arpl
xor
loop
jle
repz
and
scas
lea
insl
dec
imul
jno
push
test
and
jae
mov
ret
jl
and
dec
push
sub
subl
fisubrl
ds
pushf
stos
enter
mov
leave
int3
mov
lret
inc
negb
jbe
xlat
xchg
scas
lret
jb
hlt
jb
mov
sbb
cmp
sub
dec
dec
jl
es
orb
push
cmpl
adc
mov
mov
loopne
lcall
jno
jns
loop
cmp
outsb
fsubrs
aaa
adc
and
bound
addr16
loop
loope
jnp
pop
test
lods
pop
out
dec
pop
jae
mov
xchg
or
leave
iret
enter
ret
push
sti
push
std
fldl
dec
xor
outsb
push
lods
jl
mov
clc
pop
xor
inc
dec
test
mov
fdiv
pop
loopew
jbe
mov
cmp
in
andl
mov
data16
add
test
cltd
cmp
popf
testb
mull
cmp
pop
mov
fistl
or
mov
shrb
adc
jbe
ds
sbb
in
test
aam
sbb
mov
ficompl
mov
aas
jp
std
shrd
and
jbe
fldcw
call
inc
adc
jl
jb
pop
or
mov
cmp
push
fistps
mov
dec
cmpsl
inc
addr16
push
lret
xor
imul
and
mov
lock
sti
mov
stos
std
pop
push
jmp
pop
scas
lcall
sbb
je
mov
and
or
xchg
pop
adcl
mov
jnp
mov
sbb
hlt
cmpsb
adc
loope
hlt
pop
out
das
mov
and
jno
jge
loopne
push
lret
cmpb
sti
cmp
jnp
dec
xchg
jno
add
jns
daa
mov
sub
dec
mov
loope
sbbl
inc
jge,pt
fwait
dec
stc
movsl
ret
in
std
cmp
cmp
ss
sahf
mov
loopne
cli
out
or
or
dec
ret
jbe
out
inc
sub
nop
scas
pop
in
ljmp
lcall
test
jo
cld
fstpl
sub
add
pop
loopne
or
mov
call
mov
push
mov
add
mov
cwtl
sti
leave
jb
xchg
aas
flds
mov
xor
lcall
je
or
fcom
mov
jl
fiaddl
test
repnz
lret
fmulp
mov
xchg
loop
scas
push
sub
loop
adc
in
mov
cmp
adc
adc
aaa
loope
movaps
test
in
dec
pop
mov
cmp
inc
xlat
aad
lret
pushf
cmp
data16
repnz
push
ss
sub
push
adc
out
in
pop
jns
inc
inc
mov
mov
shrb
inc
int
filds
int
fistps
push
js
shrb
push
jno
mov
imul
mov
aas
xorl
iret
sub
mov
arpl
add
xchg
popl
inc
rcl
xchg
lahf
jp
add
jmp
ljmp
fcmovnb
je
shl
xchg
dec
jg
in
or
xchg
clc
stos
test
push
push
je
xor
sbb
ss
pop
enter
dec
pop
sub
out
adc
ficoms
aam
jb
xchg
sbb
arpl
testb
stc
pop
push
arpl
sbb
cmp
sar
loope
leave
jnp
jecxz
mov
out
sbb
mov
inc
cmp
fistps
mov
scas
ret
jmp
test
add
js
cli
jl
fsubs
fs
mov
cmpsl
inc
or
int
jne
cmc
ss
add
xchg
xor
sbb
push
or
or
cmp
test
fldl
and
and
sti
xor
mov
in
stc
outsb
jae
inc
outsl
aam
sbb
xchg
mov
add
lahf
icebp
dec
mov
jns
rolb
push
push
and
jecxz
and
xchg
mov
dec
loopne
and
fistps
imul
test
cmp
dec
fdivl
scas
insl
rorl
xchg
lock
and
insb
ret
dec
ret
lcall
sbb
nop
xchg
inc
sbb
call
subb
paddsw
sub
jge
lret
and
repnz
xor
clc
xchg
adc
adc
pop
xchg
stos
xlat
popa
nop
fs
test
cmp
test
loop
cli
dec
out
scas
jb
movsl
xchg
cli
sub
fildll
movb
and
lea
push
mov
imul
jo
xchg
in
cmp
cmp
push
idivl
sahf
gs
daa
loop
mov
cs
mov
mov
adc
aas
faddl
sub
mov
push
jns
mov
jmp
imul
pop
xorl
cmpsl
xlat
xchg
jmp
pushf
fs
push
sub
out
pop
fwait
push
je
jl
inc
lods
push
stos
aad
out
mov
aaa
scas
int
andl
dec
dec
dec
xchg
jp
pop
push
mov
and
xchg
add
call
test
pop
sub
jp
daa
push
mov
push
xchg
push
mov
sbb
mov
sub
out
icebp
test
cmc
je
ljmp
in
pop
fldt
jb
rolb
xchg
icebp
adc
lret
mov
mov
sti
mov
aad
call
out
idivb
cmc
pop
mov
ret
cmc
pop
adc
cmpsl
and
mov
xchg
xchg
xor
testl
fdiv
lock
imul
shr
xor
pop
out
mov
jmp
lahf
xchg
jae
lret
cmp
sar
mov
idiv
and
xchg
je
pop
daa
mov
leave
outsl
iret
or
xchg
sti
popf
daa
in
jne
cmp
mov
stos
leave
and
cmpsl
icebp
jp
iret
pop
cmp
dec
cld
push
sahf
pop
sub
sub
mov
repnz
jle
testl
sub
ds
jmp
and
decl
test
aad
rorb
hlt
mov
inc
push
lds
adc
pop
imul
push
push
repz
sub
sub
sti
loopne
pop
jle
pop
xlat
loop
pop
sub
pop
enter
mov
cmovge
push
sub
in
dec
pop
ffreep
lret
inc
mov
pop
mov
fcom
lods
mov
mov
fists
test
mov
call
cmp
push
loop
cmp
filds
ljmp
pop
xor
das
scas
int3
std
push
call
adc
push
frstor
lock
mov
loopne
dec
pop
aaa
mov
cmp
fbstp
out
addr16
jo
rolb
push
pusha
xchg
fwait
adc
and
cld
je
mov
xchg
mov
gs
subl
cli
dec
sub
iret
dec
fadds
aaa
cmp
inc
mov
mov
mov
in
bound
ja
push
jo
sahf
pop
or
in
push
cmc
push
frstor
fildll
int3
stos
gs
daa
repnz
int3
ljmp
gs
lret
inc
aam
lret
sbb
pmulhw
mov
pop
aas
sbb
cmp
inc
mov
mov
cmc
scas
in
mov
gs
adc
aaa
stc
mov
lods
cmp
popa
ja
mov
imull
jno
sbb
icebp
cmp
mov
mov
imul
xlat
push
lods
lds
pusha
ds
lock
pushf
lds
sub
cmp
dec
jg
out
mov
loop
or
loope
xchg
addl
loope
mov
cwtl
mov
xchg
mov
jge
sbb
mov
pop
lret
idivl
add
mov
add
sbb
inc
and
pop
mov
arpl
or
ja
divl
loope
cmc
decl
shrb
mov
push
stos
adcl
adc
frndint
mov
inc
dec
inc
mov
mov
pop
xchg
shr
push
push
jo
popa
pop
mov
inc
or
push
mov
cmpsl
adc
pop
push
out
loope
test
loope
shl
cmp
mov
fnstenv
push
outsl
stos
scas
inc
add
call
jb
push
mov
nop
in
dec
lahf
lret
jno
out
jns
jae
cmp
mov
cmp
nop
push
hlt
notl
cltd
js
in
outsl
or
adc
lds
mov
out
fisubs
mov
loope
fldl
jns
xchg
or
aad
and
insl
data16
push
xor
sbb
test
scas
or
insb
xchg
frstor
mov
add
cmpsb
inc
ja,pn
jmp
sbb
mov
je
addl
mov
xor
int3
sbb
mov
out
push
pop
fisttps
mov
aad
pop
jnp
sub
lahf
pop
pop
fs
add
imul
mov
aad
insb
sahf
xchg
daa
fdivs
hlt
and
ret
shll
dec
xchg
out
lods
sbb
pop
mov
push
les
nop
shlb
ja
sub
lret
and
jnp
mov
sti
push
or
testb
shrl
sarb
test
roll
pop
fsubs
mov
lds
sbbl
cs
cltd
mov
pop
cmp
cmp
testb
das
pusha
test
xchg
push
pop
jb
insl
test
xchg
out
mov
ja,pt
add
popl
mov
jl
xor
dec
fcoml
call
push
adc
add
sti
pop
popa
pop
aas
sti
aas
sub
cmp
fwait
pop
scas
pop
push
sahf
ret
cmp
inc
aaa
nop
sub
dec
mov
jne
iret
test
or
cwtl
mov
dec
gs
push
bound
xchg
into
fldlg2
and
aas
add
in
int
cmc
pop
jle
xor
outsb
xchg
pop
sub
ljmp
mov
or
dec
mov
push
push
sahf
xchg
push
lahf
fmull
xor
mov
xchg
andl
lcall
jecxz
lods
push
inc
or
sub
inc
fsubs
lds
mov
mov
ja
xchg
xchg
or
shlb
test
mov
sub
mov
loopne
xchg
adc
imul
cwtl
leave
sub
notb
add
and
call
jbe
inc
or
and
add
fnstenv
lock
xlat
fdivp
lea
arpl
xor
pop
inc
ror
adc
xor
pop
fldt
xchg
add
loopne
and
inc
ja
dec
push
mov
fs
pop
loop
jge
pushf
mov
outsb
cmc
mov
shlb
xor
dec
xor
mov
dec
shrl
out
out
neg
xchg
inc
pop
push
cmc
mov
sti
mov
mov
jnp
decb
out
bnd
jae
add
fdivrl
pop
and
and
clc
mov
int3
xchg
ficompl
leave
dec
adc
sbb
loope
bnd
fisubl
jns
je
or
cmp
ja
sbb
pop
and
dec
add
jp
push
ror
mov
leave
mov
sbb
fmuls
bound
lds
jbe
adc
dec
or
push
sbb
fwait
lock
fisttpll
jae
lea
adc
add
test
addr16
inc
stc
imul
aad
int3
xchg
lret
les
xor
enter
lahf
push
sti
add
into
cmpsl
adc
sti
in
mov
cmpsl
cmpsb
sub
jbe
repz
pushf
mov
cmp
sub
inc
jg
lahf
dec
aas
or
mov
scas
imul
cmpsb
cmp
lahf
cs
add
xchg
in
xchg
shlb
cmc
jno
stc
xor
js
jb
arpl
subb
pop
pop
xchg
add
je
sbb
dec
repnz
popf
pop
mov
lcall
mov
cmp
mov
ss
sti
sbb
xchg
iret
xchg
jmp
xor
sbb
push
dec
test
xor
test
cmc
sub
lahf
adc
xor
push
mov
or
addr16
fdivr
daa
lret
cmp
dec
sub
lods
sub
push
xlat
mov
ficoml
mov
xchg
or
push
stos
jp
jle
pop
lods
sub
pop
xchg
and
sbb
mov
push
dec
add
fs
sbb
mov
xlat
out
int
test
push
and
mov
repz
shlb
lahf
pop
push
add
loopne
jg
sub
out
aas
xchg
mov
test
sub
or
test
mov
shrb
adcb
daa
dec
clc
mov
and
dec
dec
lea
push
popa
push
sub
mov
jle
nop
xor
les
movsb
cltd
lds
sbb
mov
outsl
dec
int3
xchg
imul
ss
sahf
or
xor
cld
or
or
mov
pop
mov
mov
mov
mov
push
ja
out
inc
adc
sbb
repnz
cltd
push
mov
dec
insl
addr16
test
sbbb
in
rol
dec
inc
sbb
jae
xchg
push
ficomps
pop
arpl
cwtl
das
lea
pop
fnstsw
mov
hlt
mov
sbb
fs
dec
inc
shll
push
arpl
scas
dec
push
xchg
xor
aas
bound
jmp
cmc
or
out
testb
daa
xor
mov
pop
shrl
dec
mov
mov
in
mov
mov
mov
or
and
xchg
cmp
in
add
sbb
or
icebp
pop
in
jl
pusha
jecxz
iret
ss
mov
sub
xchg
pop
sub
cmp
mov
ficomps
push
xchg
xchg
imul
das
imul
pop
cmp
test
sbb
fwait
xchg
ret
cmp
inc
push
cltd
and
inc
out
or
xchg
fcmovne
jae
jb
out
fwait
les
fmuls
in
ret
mov
insl
jmp
jp
in
insl
test
adc
jne
cmp
outsl
cltd
sar
sub
test
push
jecxz
mov
ja
test
and
rcrl
jnp
mov
divl
pop
jmp
int3
int3
insl
scas
arpl
imul
jg
mov
in
rorl
xor
inc
mov
jnp
push
int
faddl
movsb
scas
adc
leave
or
pop
inc
enter
mov
dec
cvttps2pi
mov
jne
add
cmp
lea
sbb
jns
sbb
inc
loop
retw
mov
mov
mov
sbbb
and
lea
and
movsb
gs
mov
cmp
xchg
fsubrl
xor
je
mov
lods
adc
int3
add
xlat
add
cmpsb
xchg
je
sub
adc
or
mov
jmp
push
movsl
mov
pop
xor
lret
pop
and
push
fmuls
in
insl
les
fisubl
cli
jo
jmp
es
jnp
int3
sub
cmpsl
int3
movsb
jns
sbb
inc
mov
hlt
push
repz
xor
popl
jo
add
mov
mov
add
test
loope
arpl
mov
dec
cmp
daa
pop
dec
mov
test
out
je
ret
fldcw
jne
sub
test
mov
das
arpl
xchg
imul
jmp
mov
or
jnp
out
mov
aas
inc
mov
shl
adc
std
push
sub
sub
aad
lds
mov
inc
int3
mov
movsb
pop
pop
pop
addl
sub
into
fbld
movsl
pop
movsl
ret
nop
push
loope
mov
xor
movsb
dec
jno
jge
aam
fs
lahf
mov
inc
addr16
or
or
xor
test
adc
add
adc
mov
jmp
out
sahf
and
cltd
push
hlt
sahf
scas
and
in
sub
daa
lds
xchg
pop
cwtl
dec
loopne
test
shll
push
push
stc
jecxz
pop
fwait
call
jae
mov
stos
cmp
out
pop
xchg
add
jbe
into
repnz
and
out
mov
imul
mov
and
paddsw
jl
jge
in
sti
pop
pushf
cmp
cmpsl
or
cli
cmc
insl
and
es
pop
test
out
jns
iret
pop
dec
enter
shll
scas
mov
int
inc
xchg
daa
mov
sub
call
lea
movb
jl
in
xlat
inc
adc
sbb
ret
fcomp
call
mov
loopne
mov
lods
inc
scas
pop
sub
repnz
xchg
inc
cltd
adc
or
mov
into
and
addr16
shlb
inc
pop
sub
xor
aad
sbb
aad
jns
jmp
cmc
in
sbb
sub
fdivrl
and
adc
jecxz
jp,pn
jecxz
xchg
sti
fidivl
inc
mov
cmp
inc
and
je
dec
ljmp
call
inc
mov
mov
mov
fwait
jnp
daa
mov
hlt
cld
push
sti
and
pop
push
inc
leave
sub
push
cs
pop
mov
movsb
or
cmpl
push
stc
loope
mov
test
xor
add
rolb
dec
fdivrl
shrl
xlat
push
movsb
pop
mov
sbb
xchg
cmc
call
out
clc
and
in
push
xchg
pop
popa
push
adc
cmp
mov
clc
sub
push
in
lea
outsb
pop
mov
arpl
xchg
cmp
daa
cmpsb
inc
cmc
scas
pop
das
mov
inc
repz
dec
mov
mov
sahf
xbegin
xor
sbb
filds
leave
leave
lea
xchg
lahf
mov
cmpsb
xor
cmpsl
cld
les
arpl
push
mov
clc
loopne
cmp
movsb
jb
jae
and
and
push
mov
lcall
out
xor
stc
sub
mov
or
xchg
stos
xchg
dec
pushf
fnstsw
jae
adc
and
dec
aam
mov
rcll
mov
mov
pop
or
mov
xor
test
arpl
xchg
adc
adc
mov
in
xor
jbe
add
lret
inc
popf
ja
or
mov
lret
stos
stos
daa
loopne
lcall
scas
mov
fdivs
push
jae
cmc
cmpsb
xor
mov
int
mulb
dec
aas
loop
cli
adc
xchg
pop
loopne
mov
lret
test
push
cwtl
jnp
fwait
fs
rclb
loope
outsl
nop
cmp
jl
out
dec
mov
ror
std
ret
sbb
mov
sub
jmp
sbb
xchg
jg
pusha
and
dec
out
dec
jbe
iret
jge
sub
les
sbb
jo
cmp
adc
dec
or
sub
or
mov
jg
and
or
ror
int
insb
sbb
xchg
adc
adc
mov
jle
or
or
or
or
outsb
dec
mov
pop
repnz
cmp
adc
inc
push
lods
inc
ss
and
push
mov
out
mov
push
push
pop
push
pop
loope
scas
and
outsb
ss
pop
aaa
mov
pop
aaa
testb
xchg
cmp
repnz
mov
adc
mov
pop
add
std
push
in
call
sub
push
adc
add
sub
jmp
scas
push
xor
testb
test
and
outsl
insl
cmp
out
imul
pusha
pop
mov
xchg
inc
xchg
sub
fnsave
sub
pop
in
outsb
addr16
lods
cld
fwait
xchg
or
in
cmpsl
mov
ds
mov
into
out
fnstcw
mov
test
mov
pop
movsl
jo
jl
mov
xchg
jmp
imul
imul
stos
aaa
popa
mov
les
add
xchg
add
adc
cmp
jg
sub
mov
repnz
test
adc
xor
test
cmc
cld
add
add
mov
xchg
pop
pop
mov
hlt
std
push
pop
sbb
jo
lods
js
pop
cmc
pop
sub
ret
subl
jmp
fistl
push
lret
pop
mov
not
xor
add
push
mov
pop
mov
daa
sbb
mov
ja
mov
in
sub
dec
int
mov
test
add
xor
pop
pop
pop
xor
test
mov
inc
loopne
popa
or
and
stos
test
pusha
and
fisttpll
shlb
sarl
rolb
push
push
testl
insl
jmp
xchg
inc
adc
data16
push
mov
jae
out
mov
mov
vmovshdup
sbb
cmp
push
test
sbbb
fcompl
scas
dec
sbb
test
xchg
pop
and
and
mov
and
adc
lods
sub
push
cs
xlat
clc
nop
lods
jp
push
out
outsl
mov
arpl
test
movsl
out
push
add
inc
xlat
in
pop
cwtl
dec
pop
add
push
jae
test
pop
sbb
xor
mov
daa
xlat
cmpsb
int
sub
icebp
jns
lock
xchg
rcll
cli
or
and
push
mov
mov
xchg
mov
and
pop
mov
sbb
cmp
ret
dec
and
mov
cltd
dec
xlat
movsl
lea
mov
gs
push
in
dec
out
ret
adc
out
push
mov
xor
daa
shlb
sbb
mov
data16
mov
pushf
pop
inc
mov
or
add
imul
lret
or
add
cmp
dec
lods
xor
int3
test
adc
xchg
mov
out
push
push
or
and
pop
lods
call
sbb
pop
icebp
jnp
popl
mulb
jno
sbb
jle
repnz
ds
xchg
arpl
vpmaddwd
sbb
jecxz
push
lcall
stos
bound
cmp
jmp
adc
int
insb
leave
pop
push
cmpsl
scas
inc
cmpl
inc
adc
in
fadds
movsl
cli
test
mov
inc
pop
fwait
adc
and
and
inc
cmpsb
pop
sti
pop
add
push
je
idivb
addl
mov
mov
aaa
pop
sbb
mov
loop
mov
clc
pop
xchg
push
loopne
cmp
adc
inc
loope
pop
dec
lock
inc
and
xor
into
arpl
repnz
nop
and
mov
and
ret
loop
out
cmp
mov
pop
int
mov
adc
stc
mov
repz
ret
loopne
shrb
pop
leave
cmp
sahf
sub
out
mov
push
lock
cmc
int
hlt
je
rcl
cmp
popf
inc
sub
sbb
dec
je
push
sahf
cmpl
add
test
in
sub
lahf
adcl
inc
inc
xchg
sarb
aad
sub
xor
mov
sbb
or
lahf
es
cs
pop
xchg
pop
data16
cmpsb
jne
fisubrl
scas
imul
pmulhw
sub
cld
adc
push
pop
std
lds
filds
cmp
pop
mov
jecxz
push
repz
js
mov
xchg
or
sbbb
pop
cmp
or
adc
add
mov
test
sbb
push
je
bound
int
mov
jle
mov
data16
sahf
push
lods
or
xchg
inc
push
aaa
adc
scas
xchg
mov
push
fwait
cmp
jns
add
jle
jbe
pop
test
mov
pop
scas
jne
mov
lods
sbb
xchg
dec
jne
push
nop
push
sbb
fucomi
mov
mov
mov
aam
pop
inc
ljmp
xchg
mov
stos
shrl
and
or
fstps
mov
and
lret
cmp
in
mov
or
cmpsl
mov
mov
test
in
aam
fwait
adc
ds
pushf
jge
mov
jge
ror
xchg
shrl
sti
inc
hlt
repz
aam
rcr
add
jl
lods
mov
ljmp
push
pop
ret
sbb
sti
fsubr
ljmp
fisttpl
xchg
lods
cltd
stos
mov
aad
or
push
dec
xchg
xlat
fucomp
pop
out
idiv
sbb
std
inc
negb
mov
ljmp
std
std
int
mov
imul
inc
push
inc
lcall
mov
pushf
or
xor
push
or
pop
jae
or
bound
jns
xchg
fwait
mov
mov
jb
out
orb
jl
test
push
xor
push
movsl
inc
sahf
dec
lret
mov
daa
pop
loope
aaa
or
dec
cmp
in
fwait
fs
or
lods
lcall
mov
pop
dec
mov
adcl
jmp
call
out
and
lcall
inc
xor
dec
push
cs
jmp
outsb
sbb
dec
stos
pop
shrb
add
dec
cmc
cmp
jecxz
or
or
push
pushf
sbb
iret
push
cmp
iret
or
jae
repz
data16
out
divl
stc
cld
hlt
mov
mov
lds
push
mov
inc
test
in
adc
arpl
adc
dec
xchg
dec
cmp
lods
inc
mov
fistl
inc
xor
aaa
stos
aad
sub
or
dec
das
jno
xchg
ret
andl
call
dec
push
hlt
xchg
jb
xor
pushf
inc
shll
in
cmp
adc
or
lcall
leave
jb
pop
pop
or
jns
xor
jno
lcall
and
sbbb
mov
adc
cmpsl
cwtl
insb
sbb
jge
jecxz
sub
nop
pop
xchg
decb
dec
or
lret
or
test
pop
movsb
mov
fidivrl
push
push
int
sbb
iret
dec
cmc
sbb
enter
dec
fldenv
and
inc
imul
and
outsl
cltd
inc
jl
sub
daa
sub
jg
add
mov
lods
jg
dec
mov
xchg
xorl
pop
inc
movb
lock
stos
jns
loopne
loopne
or
xor
mov
sub
and
xchg
movsl
xchg
cmp
jb
sbb
int3
rcll
sbb
notb
mov
dec
cmpsb
stos
push
push
inc
mov
ja
jbe
mov
adc
aas
cmp
mov
inc
xor
arpl
cmc
in
les
jo
loop
insb
push
jg
xor
fimuls
ds
cltd
inc
shll
dec
rcl
cmpsl
stc
adc
sbb
ret
pop
jbe
inc
add
push
rol
daa
imul
rcrb
or
xchg
sbb
cmc
shll
and
leave
scas
pop
int
jae
out
push
sub
add
jmpw
je
mov
adc
jbe
dec
mov
adc
cmp
push
mov
xor
shlb
mov
iret
in
adc
jb
push
rcll
xchg
xchg
pop
dec
push
fs
pusha
call
insl
ficoms
repnz
loop
shrb
aam
iret
jmp
rorl
jl
jl
insl
adc
inc
push
add
mov
orb
cmpsb
mov
pushf
shlb
inc
pop
cli
out
mov
cmp
cmp
mov
xlat
movsl
mov
fidivs
xor
cmp
gs
and
dec
inc
jb
pop
sbb
dec
cmp
or
mov
scas
and
dec
movsb
push
es
xor
fstpt
movsl
fidivl
add
dec
frstor
das
jbe
test
lret
jp
pusha
rep
inc
mov
xchg
imul
add
mov
out
aaa
sub
jg
loopne
lock
cmp
jge
cmpsb
sbb
test
cli
jge
loop
cmpsl
sbb
dec
sbbl
push
mov
jmp
lods
pusha
push
scas
adc
aam
inc
ljmp
popa
aaa
mov
mov
xchg
dec
mov
add
add
es
xchg
clc
adc
jge
mov
sub
sub
lods
jae
pop
xchg
push
lock
jo
push
je
push
sahf
mov
add
inc
inc
cmp
pop
push
loope
xchg
in
dec
push
das
pop
push
lds
outsl
add
popa
sub
enter
pop
aas
xor
sub
into
rorl
mov
popa
fwait
add
jo
cmp
int
or
scas
loop
in
push
enter
push
out
sbb
cwtl
adcl
lods
or
rcrb
xor
pop
push
test
lds
pop
sbb
ret
add
xor
shll
mov
lods
popa
mov
inc
pop
cmpb
jb
hlt
pop
jmp
aam
lock
mov
addl
cmp
push
mov
test
ss
sbb
adc
stos
aam
push
aaa
mov
push
dec
scas
cmpsl
std
enter
sbb
mov
push
aam
into
iret
sbb
es
sbbb
xor
mov
aam
fistpll
mov
hlt
mov
lods
push
insl
cmp
xor
xor
jae
adc
mov
push
sub
mov
aad
fwait
jo
jl
push
test
or
xor
mov
adc
lea
pop
mov
fistpl
outsb
pop
inc
imul
dec
leave
jns
mov
xor
mov
dec
push
cmp
dec
add
dec
push
mov
xlat
ss
daa
jl
sbb
out
out
cld
inc
out
adc
and
fdivl
in
or
mov
leave
fidivrl
ljmp
cmp
in
imul
push
sub
jge
push
pop
xor
arpl
jno
aam
lock
outsl
jb
adc
adc
loopne
xor
cmp
sub
cmc
stc
fs
cmp
mov
and
inc
hlt
iret
movsl
lret
push
or
cmp
imull
out
cltd
pop
adcl
ljmp
xchg
and
arpl
push
dec
cld
mov
stc
enter
xlat
in
mov
mov
fcompl
enter
ja
fmull
out
lock
rcll
and
dec
fstl
test
sub
loope
mov
or
ror
pop
mov
ret
in
movsl
ret
mov
hlt
in
mov
dec
sub
inc
mov
push
fiaddl
mov
insb
jl
push
aam
mov
in
fcomp
xchg
sub
mov
test
jo
pop
add
aas
dec
mov
loopne
inc
push
pop
call
sub
outsb
dec
lods
mov
mov
daa
scas
inc
scas
in
ljmp
push
std
xor
lret
ss
xor
adc
or
loop
sti
ret
and
ret
mov
in
popf
in
xchg
test
jbe
test
lret
dec
sub
pusha
adc
aaa
es
je
sti
cmpb
test
push
shl
mov
lahf
mov
aad
movsb
addr16
adc
sbb
inc
repnz
jle
xorb
mov
std
mov
outsl
or
rclb
xadd
inc
lret
fdivl
jg
push
dec
sub
adc
jge
loopne
stc
inc
jp
mov
dec
cwtl
fcmovnu
lret
xchg
sub
lods
pushf
nop
xor
pop
push
add
dec
fsub
and
fcomp
mov
jbe
ret
dec
xchg
xor
das
mov
aam
push
out
gs
jo
push
sahf
incl
popf
pusha
cmp
xor
call
mov
inc
mov
stos
xchg
clc
cmp
adc
inc
in
lea
out
test
push
jmp
xchg
scas
lods
dec
or
lahf
add
rclb
sub
push
fisttpl
mov
jle
sti
xorl
add
fnstenv
sarl
mov
mov
fs
sub
jo
scas
cmp
mov
lret
pushf
mov
jae
pushf
mov
mov
pop
fcmovne
lcall
sbb
xchg
cwtl
popf
lea
addr16
adc
and
out
sbb
mov
dec
rcl
outsl
lahf
jo
sub
fldl
mov
xchg
stos
popf
bound
pop
lods
imul
xor
js
push
and
mov
sbb
aaa
rcrb
jae
or
sahf
xor
jmp
sbb
fisubrs
and
repnz
or
sub
sub
popa
iret
nop
dec
or
jb
push
jbe
movsb
or
jbe
hlt
cmp
cwtl
push
mov
cmp
test
mov
jb
sbb
mov
xlat
cli
test
ljmp
add
xchg
inc
bound
pop
and
sbb
mov
enter
xchg
cmpsb
inc
int
mov
shr
lods
sarl
cmc
rcpps
das
push
jno
out
iret
add
xchg
xor
mov
or
sub
sbb
mov
inc
lods
mulb
pop
imul
cmp
hlt
mov
push
push
loope
xlat
gs
cmp
push
rclb
bound
mov
lret
jo
mov
rorb
xor
jecxz
add
fwait
cmc
rcl
dec
jnp
cltd
sub
jb
mov
es
push
jbe
movsb
pushf
enter
ljmp
jle
lcall
push
idivb
test
adc
push
mull
and
rorl
leave
cmc
push
loopne
int
xchg
lock
jo
sbb
or
test
mov
lods
pop
or
sub
mov
push
sub
leave
ret
push
fwait
test
scas
sbb
jl
stos
xchg
es
pop
lods
jae
mov
pop
sarb
inc
push
pop
xor
sti
nop
cwtl
scas
clc
xor
sahf
dec
or
movsl
pop
push
fs
fneni(8087
sbb
mov
mov
jge
imul
sbb
pop
xor
push
jb
out
stc
xchg
mov
in
adc
mov
xor
aam
loopne
test
imul
mov
mov
mov
xor
add
pop
jne
imul
pop
aam
jmp
repnz
dec
roll
fmul
or
push
dec
ja
cmp
and
push
sahf
push
mov
into
cwtl
test
pusha
sbb
ljmp
mov
cmp
outsl
cmpsl
push
rolb
xchg
cwtl
mov
das
cmpsl
ret
push
fwait
sbb
iret
xchg
repnz
lds
sub
xor
sbb
call
xchg
sahf
mov
loopne
fnstsw
mov
adc
xor
mov
inc
add
fidivrl
mov
adc
daa
pop
mov
sub
shr
and
aas
adcl
lret
mov
nop
xor
and
pop
test
addr16
faddl
cmp
lret
push
xchg
add
mov
mov
sarb
sar
jle
xor
mov
pop
sahf
movsl
ja
and
es
inc
ja
add
out
or
les
mov
cmp
inc
lret
xorl
mov
push
int
and
xchg
test
mov
mov
repz
fisttps
xor
leave
or
nop
lds
push
loopne
out
fldenv
pop
or
add
adc
mov
sub
adc
insb
fwait
and
inc
insb
jns
nop
mov
in
iret
and
mov
adcl
gs
xchg
ja
dec
cmp
cli
sarb
inc
xor
sbb
xchg
jl
sbb
inc
sbb
scas
daa
pop
jae
mov
dec
adc
jbe,pt
popa
stos
pop
mov
cmp
repnz
pusha
or
ljmp
aam
data16
mov
jl
movb
jnp
mov
xor
es
fbld
out
mov
jae
sub
shrl
add
lret
aas
andl
add
int3
xor
test
inc
xchg
lretw
test
test
lock
repnz
xor
loope
inc
loope
xchg
dec
jg
loope
xchg
inc
sub
ret
jl
push
mov
fsub
xor
jae
loopne
adc
decl
rolb
cld
push
inc
lahf
inc
pop
xor
test
adc
stc
mov
outsl
lret
push
dec
pop
ret
in
add
mov
fimull
lret
pop
xor
cmpsl
outsb
dec
push
or
sbb
mov
xchg
rcr
stos
jo
je
cltd
dec
xchg
cmp
adc
call
cmp
jbe
and
test
repz
sbb
ja
fstps
lcall
pop
gs
loope
loopne
mov
push
enter
or
mov
lcall
enter
xchg
push
leave
out
data16
std
ja
sbb
mov
icebp
sbb
adc
push
sub
insb
xor
int
jae
sub
push
adc
fldl
rol
dec
cmc
inc
mov
dec
pop
inc
imul
jmp
pop
addr16
rol
fcomp
insl
mov
mov
inc
repz
and
repnz
or
fdivrl
mov
daa
xlat
lret
pop
scas
lret
fstps
sub
jl
cmc
add
jns
insl
xchg
test
and
mov
loop
bound
aad
cmp
push
push
lds
pop
andl
xchg
mov
jge
inc
or
or
ret
gs
daa
add
dec
insb
mov
lods
mov
dec
sbb
push
xor
arpl
scas
mov
test
lcall
xchg
mov
test
aas
enter
iret
cmpsl
icebp
fstps
shl
push
jnp
jl
fsts
out
cmp
sbbl
fadds
hlt
daa
ja
inc
jne
xchg
pop
imulb
cmp
test
adc
js
dec
dec
leave
add
adc
xor
jae
cmp
ljmp
movsb
jle
xor
mov
xchg
roll
leave
js
repnz
int
stc
and
pop
lret
pop
push
sbb
sahf
pop
out
sarb
outsb
adc
lea
and
mov
adc
loope
pushf
sbb
mov
movsb
ficompl
sbb
jecxz,pt
dec
test
and
adc
movsl
scas
cmp
stos
incb
jmp
testb
add
loope
mov
mov
int
xlat
and
gs
mov
fisubl
enter
out
or
xlat
int
imul
loop
orl
or
or
ret
add
mov
movsb
iret
push
addr16
mov
push
jnp
idivb
xor
dec
lock
popf
add
mov
cmp
sarl
add
cmpsb
andb
data16
inc
sti
popf
loope
sbb
inc
fimuls
lret
fcoml
dec
and
stc
aam
xor
cwtl
stc
fxtract
jns
divl
add
add
xor
fs
imul
mov
fadds
or
popf
xchg
in
into
jbe
das
sbbb
popa
xor
cwtl
frstor
mov
out
cli
loopne
in
hlt
jp
jg
mov
es
mov
in
sahf
and
inc
hlt
cmpsl
je
or
fdiv
mov
incl
repz
sub
insl
stos
cmp
inc
aad
fwait
mov
pop
imul
xor
adc
and
jb
mov
popf
mov
adc
cmp
in
test
inc
lret
xchg
in
lahf
xor
ficoms
cmp
xor
or
rorb
xor
mov
xchg
rcll
mov
or
push
mov
outsb
scas
mov
cwtl
dec
ret
xlat
inc
push
pushf
xchg
xor
push
add
mov
js
lds
test
lcall
ret
aas
sarl
pop
sub
mov
xchg
sub
fbstp
arpl
outsl
outsl
in
rcll
sbb
ret
rolb
push
or
pop
notb
sbb
sbb
es
mov
mov
icebp
sbb
repnz
sahf
push
adcb
jmp
mov
outsl
ret
stos
in
sub
cmp
cmpsb
push
test
stos
dec
in
outsl
push
lcall
adc
xchg
shrl
push
dec
adc
mov
jecxz
adc
sbb
pop
mov
das
xchg
or
pop
mov
cmp
fs
test
add
js
add
hlt
rclb
js
or
sbb
inc
xchg
adc
sbb
sub
mov
test
pop
sbb
jnp
stos
pop
scas
cmp
fucom
cmp
pop
imul
sub
dec
inc
push
outsb
push
cmpsl
and
pusha
dec
adc
test
mov
mov
imull
xlat
and
dec
jecxz
xchg
enter
adc
fildll
push
call
sbb
sub
rcrl
out
adc
inc
push
outsl
cmpl
je
mov
lods
jns
call
int3
into
pop
sub
mov
fnstsw
xchg
push
test
and
ja
mov
cli
psubb
into
mov
cmpsb
xchg
or
and
leave
sbb
andb
popa
jle
leave
jnp
sub
jecxz
icebp
inc
push
sbbb
mov
stc
mov
call
mull
inc
out
in
xor
daa
rolb
fdivr
xor
scas
push
mov
mov
fwait
dec
cmc
adc
hlt
dec
aaa
cmp
nop
push
push
or
push
repnz
mov
rol
leave
sub
aam
mov
mov
mov
jns
faddl
popa
pop
jp
jecxz
xchg
test
out
dec
mov
orl
or
aaa
push
loop
movsl
fsts
idivb
and
in
loope
xchg
dec
jne
mov
bound
push
pop
cmp
xchg
test
push
push
pop
and
ja
test
stos
push
xchg
xchg
adc
mov
jns
sbb
lret
pop
xor
dec
mov
cli
insl
sbb
dec
and
mov
stc
push
ljmp
adc
sub
bound
add
jno
rorl
and
cmp
jecxz
mov
fists
out
jns
xchg
inc
push
mov
popa
jo
test
mov
or
es
scas
pop
mov
call
push
fldcw
sub
add
test
fwait
addl
xor
lds
leave
xchg
mov
ljmp
test
adc
jg
mov
addr16
inc
mov
sbb
jo
mov
fsubrl
cltd
lea
ret
mov
xor
push
int
inc
lods
ds
aad
ss
cmp
into
mov
lret
in
fistl
dec
sbbl
mov
pop
aad
ds
jo
rclb
je
test
dec
dec
pushf
cmp
sub
mov
cmp
push
aas
mov
cmc
pop
mov
out
in
push
pushf
clc
mov
lea
test
lods
mov
jl
mov
adc
jl
leave
andb
dec
add
lods
mov
add
and
mov
js
push
pop
data16
icebp
sub
popl
clc
gs
orb
imul
stos
and
mov
pop
sub
iret
add
push
and
xchg
and
je
aas
mov
jns
in
cmp
xorb
sub
push
mov
repz
cpuid
xlat
btr
adc
testb
xchg
mov
jmp
cmpsl
sti
dec
sbb
ret
divb
jo
scas
out
cwtl
inc
dec
enter
push
iret
jae
cmp
fbstp
add
jbe
mov
cmp
xchg
push
div
xchg
cmpsl
mov
xchg
dec
in
adc
push
fsubrp
sub
cwtl
movsb
stos
dec
mov
ss
sbb
inc
xchg
jne
daa
adc
std
ret
cmpsb
xlat
fists
scas
adc
add
lds
inc
mov
pop
jge
clc
mov
adc
les
test
int3
std
jo
arpl
outsb
sub
mov
bound
jl
mov
orl
sarb
push
outsb
insb
pop
imul
add
aam
shrb
mov
sahf
ficomps
adcb
mov
stc
mov
fwait
sbb
mov
cli
pop
aaa
jge
incb
and
adc
pop
in
das
aaa
test
xor
loop
popf
push
xor
roll
je
xor
hlt
mov
insb
mov
inc
push
stos
and
inc
js
aad
add
mov
push
and
xor
mov
or
pop
push
jge
aas
mov
sbb
enter
mov
fiadds
imul
fstpl
jae
scas
push
int
aaa
fldt
inc
pop
loopne
push
inc
pop
test
xchg
mov
add
pop
stos
cmpsb
dec
nop
pop
sbb
xor
mov
push
cli
add
addl
stos
jne
pop
xchg
mov
mov
xor
fbstp
outsl
mov
xor
mov
fxch
hlt
add
adc
stos
mov
jmp
call
and
sbb
das
push
ljmp
mov
jp
xor
pop
imul
fwait
adc
and
pop
lods
rclb
mov
or
pop
mov
mov
or
sub
loop
jae
and
add
mov
mov
add
dec
fdivrs
jo
jmp
fld
pop
aam
mov
jp
dec
test
push
jae
xor
int
jmp
fiaddl
hlt
or
bound
mov
jnp
lods
sbb
mov
test
or
xchg
jnp
cs
inc
mov
sbb
or
inc
jne
outsl
lds
inc
cmc
js
orb
imull
ljmp
bsf
rorb
jge
inc
sub
loope
add
mov
mov
adc
arpl
js
pop
pusha
xor
push
jl
sbb
js
test
fs
xor
add
jecxz
xchg
adc
in
cmp
inc
mov
imul
add
push
lcall
in
pop
sub
mov
xor
push
pop
loope
into
push
into
lds
mov
leave
adc
lods
stos
movsb
nop
into
jecxz
push
cmp
jns
mov
pop
in
mov
dec
es
sub
mov
mov
or
jnp
mov
mov
push
and
or
adc
push
sbb
test
stos
mov
mov
andb
mov
and
nop
in
imul
push
cmp
push
scas
push
cmp
ror
andb
and
in
xchg
pop
push
push
cmp
inc
mov
push
mov
jg
cmp
inc
dec
insb
lds
repnz
stos
out
aaa
pop
mov
pop
mov
div
mov
and
out
lcall
ss
ret
mov
pop
lcall
push
push
test
test
mov
das
in
daa
repnz
ret
push
xchg
xchg
adc
idivl
xchg
xor
mov
negb
andl
jb
xchg
insl
hlt
mov
or
push
sub
popl
iret
mov
adc
test
call
push
pop
movl
sbb
xor
push
sub
pop
stos
mov
push
stos
xchg
jmp
xchg
cwtl
xchg
sub
push
adc
inc
addl
nop
and
lahf
xchg
add
std
or
adc
or
mov
fidivrs
sub
test
mov
mov
fisubrs
jne
lds
sub
jns
mov
out
or
push
xchg
add
hlt
mov
and
inc
mov
jmp
add
or
sbb
jmp
pop
dec
xchg
test
gs
push
mov
std
dec
inc
mov
sbb
loop
fcomip
das
std
pop
clc
popf
repnz
sbb
ret
pop
call
ret
add
add
lods
fists
or
pop
jmp
punpckldq
pop
clc
jecxz
cld
outsb
mov
sbb
addr16
push
or
psubsw
cmp
inc
dec
add
xlat
jb
push
fcompl
jns
pop
insl
xchg
adc
imul
xchg
or
push
fs
in
into
mov
and
mov
cwtl
sbb
mov
push
in
cmp
push
jbe
cs
mov
and
mov
mov
inc
pop
mov
icebp
les
or
jb
mov
jp
add
sbb
divl
add
sub
sti
cwtl
enter
inc
leave
addr16
mov
fstpt
fnstcw
pop
incb
jp
call
push
outsl
sbb
dec
cmpsb
push
push
stos
popf
mov
adc
and
call
fiadds
add
movsl
hlt
mov
pop
das
xor
dec
test
jecxz
mov
mov
jne
insb
mov
in
ret
push
and
nop
xor
movl
imul
sub
stc
inc
xchg
push
cmp
into
xchg
fistl
cmpsb
push
repz
mov
adc
or
loopne
lret
sarl
push
andl
hlt
push
xlat
scas
push
bound
mov
lods
adc
or
inc
inc
jae
popf
fcoms
pusha
mov
jp
lret
sbb
addr16
pop
ss
popa
cmp
mov
mov
push
stos
push
in
gs
push
xchg
mov
imul
scas
icebp
into
iret
xchg
dec
push
ss
xor
fwait
std
call
sbbl
mov
test
add
and
vmread
out
sub
dec
ja
push
mov
xlat
popf
cld
fiaddl
push
mov
fdivs
jmp
cmpsb
xchg
scas
adc
jecxz
fnsave
pop
xlat
sbb
inc
test
sbb
or
mov
xor
mov
push
xor
xlat
dec
out
repz
test
lcall
xlat
jg
mov
cmp
jl
mov
inc
push
bound
pop
div
test
xchg
mov
loope
fldenv
dec
das
or
push
pop
jecxz
mov
daa
push
popa
xor
mov
es
pusha
xchg
fiaddl
cmp
ss
lea
mov
push
add
push
les
pop
mov
out
hlt
out
xor
mov
les
shll
rcrb
sub
out
cmp
arpl
jecxz
mov
dec
dec
sub
and
cs
jge
test
or
xor
xchg
and
shll
push
loope
push
lods
sbb
jns
gs
int
xchg
jne
cld
aad
xor
push
jno
xor
iret
sub
cmc
loop
jp
lock
fucomi
data16
popf
scas
sbb
mov
push
js
in
popa
cmp
mov
mov
int
into
aaa
jmp
inc
addr16
lea
add
pop
out
es
sub
inc
pop
leave
movsl
cmp
jp
lret
xchg
mov
xor
sarb
mov
out
movsl
mov
xchg
xor
inc
push
mov
cmp
insl
and
dec
cmp
or
js
xor
loopne
aam
faddp
xor
mov
in
sbb
mov
sub
dec
rol
mov
mov
out
lgs
jbe
ret
test
jl
out
out
pop
inc
adc
adc
jb
lods
test
leave
push
add
stos
stos
ss
dec
jo
pop
adc
inc
scas
scas
jae
into
adc
stos
pop
sub
push
cmp
out
adc
add
out
in
std
es
int
jl
orl
sbb
aam
add
dec
cltd
aaa
push
dec
sub
adc
sbb
mov
rorl
jmp
out
jns
xlat
sub
sarl
stos
inc
adc
imul
dec
or
mov
jl
pop
lret
pop
mov
test
mov
sub
scas
mull
in
sub
popf
pop
mov
sarb
mov
jo
imul
mov
ffree
add
adc
imul
maxps
jb
pop
mov
test
into
xchg
mov
push
mov
adc
fdivs
stos
gs
and
sbb
or
outsb
icebp
les
sub
xor
incl
decb
cmp
sub
cltd
push
adc
stos
xchg
scas
jl
dec
or
mov
dec
dec
push
xor
out
movsb
xor
and
fistl
mov
inc
loope
and
call
and
cmp
movsb
test
jnp
xchg
add
or
inc
iret
cmpsl
jmp
stos
mov
mov
push
inc
popa
and
data16
daa
add
pop
jb
lea
lods
mov
stc
stc
sti
testb
mov
out
idivl
jnp
jge
call
jg
mov
pop
and
imull
lcall
insb
and
or
fwait
push
sbb
adc
idivl
nop
and
test
sbb
jg
icebp
sbb
mov
pop
jecxz
ljmp
mov
mov
or
or
mov
or
test
mov
push
mov
in
popf
inc
adc
pushf
cli
cs
jnp
nop
dec
sbb
sbb
ds
add
push
lds
xlat
stc
ffree
leave
dec
mov
cltd
cmp
xchg
add
or
pop
add
sbb
cmc
cltd
xchg
insb
add
into
pop
add
cmp
push
sbbb
xor
stc
pop
mov
leave
cmpl
mov
lds
roll
rorb
mov
pop
and
js
mov
inc
jecxz
or
add
ds
and
sbb
test
xchg
bound
jp
adc
pop
pushw
add
popa
jle
mov
stos
pushf
sub
imul
adc
popf
mov
insb
push
rorb
mov
push
clc
xor
and
mov
ret
xor
cmc
adc
sub
popf
xor
aad
sub
sbb
bound
fidivl
fldt
add
push
push
les
cmp
push
inc
mov
rclb
in
mov
cmpsb
sbb
xor
stos
jp
mov
mov
mov
rcrl
paddusb
mov
xor
iret
mov
and
dec
jo
pusha
div
sarb
mov
sbbb
repnz
cmpsl
xor
sub
ret
cli
cmpb
sub
enter
mov
jnp
xchg
jb
mov
sub
pop
in
jg
mov
iret
aas
sbb
pop
lcall
xchg
and
hlt
outsb
fadds
fildl
mov
jns
ret
cli
dec
lods
nop
inc
push
xor
inc
add
stos
out
adc
and
fbld
imul
pop
mov
stc
adc
adc
adc
outsl
or
xchg
scas
loopne
pop
mov
lods
xor
mov
inc
sub
sbb
rcll
xchg
mov
push
in
in
sbb
hlt
call
mov
add
sub
mov
stc
sbb
sbb
mov
add
arpl
xchg
mov
int
add
out
cs
push
mov
sub
pop
mov
lret
xchg
negb
stos
nop
inc
les
and
adc
lea
pop
retw
jno
sbb
pop
ret
push
xor
jmp
add
outsl
pusha
inc
mov
std
dec
arpl
cmp
push
mov
rorb
or
mov
rcl
aaa
pusha
fcmove
rcl
call
stos
mov
xor
imul
adc
mov
outsb
cld
or
jbe
imul
jl
and
mov
test
fsubrl
ret
mov
mov
mov
loopne
insb
adc
adc
mov
push
clc
inc
lahf
pop
pop
jnp
mov
xlat
or
xor
cmp
shrb
push
inc
cmp
pop
shll
cmpsb
sub
lds
push
sahf
lret
jg
cmpsb
shrb
in
test
mov
sahf
loop
scas
clc
add
sti
movsb
mov
inc
std
adc
jbe
je
dec
fidivs
jle
arpl
aam
xor
ret
icebp
push
mov
loope
aad
or
lahf
pusha
inc
jo
loopne
adc
inc
push
push
cmpsl
cmp
mov
cmp
into
ja
pushf
jecxz
add
adcb
dec
and
ljmp
test
mov
cmp
xchg
mov
popf
daa
adc
mov
popa
jp
roll
xor
jle
xchg
stc
lods
mov
imul
push
dec
test
mov
push
jbe
andl
cmp
adc
mov
jmp
cmp
xor
int3
mov
test
sti
pop
lea
leave
idivl
xchg
out
fbstp
cmp
push
shrb
cli
pop
jno
pop
mov
xchg
lds
xorb
popf
cmp
adc
mov
jle
or
lcall
popa
mov
scas
cmp
lret
cmpb
pushf
pop
ja
iret
xor
jl
adc
mov
push
aaa
imul
mov
loopne
js
mov
ljmp
movsb
lret
lret
push
jns
add
bswap
or
sarb
push
into
lret
sbb
jecxz
cmp
mov
out
mov
jecxz
ljmp
cmc
out
dec
jp
enter
push
dec
jge
sahf
cli
ficomps
ret
int3
sub
dec
cmp
pop
scas
pop
dec
repz
sbb
or
fmuls
cmp
pop
imul
push
and
xchg
push
inc
mov
mov
mov
xchg
pop
jmp
cmp
rol
cmp
add
sbbl
clc
adc
fld
jmp
loopne
or
jge
pushf
xor
push
mov
xchg
ja
mov
dec
sub
sbb
js
sub
popa
pushf
dec
popa
mov
je
mov
cmp
jmp
jmp
mov
inc
pop
arpl
stc
dec
lods
into
mov
rcrl
pop
pop
adc
mov
cltd
xadd
andb
mov
cmpsb
iret
les
loope
sub
loop
je
ljmp
mov
push
dec
jp
cmc
daa
out
ret
sub
sahf
xor
ds
vmread
out
cmp
adc
adc
hlt
and
cli
movsb
sbb
xchg
sbb
rcrb
daa
imul
mov
push
xlat
inc
mov
xchg
loop
inc
outsb
xchg
mov
push
mov
and
in
push
into
xchg
cmp
ds
arpl
loop
fwait
xchg
pop
fistpl
push
xchg
insl
ret
adc
mov
adc
push
cmp
rcl
mov
aas
imul
sbb
cmpsb
je
mov
lcall
cltd
jnp
jmp
test
lret
je
fnstcw
je
or
lods
push
mov
jne
test
mov
xorl
in
popf
mov
xchg
and
repnz
push
cmp
fldt
adc
roll
inc
ss
pusha
xchg
sahf
mov
xchg
jg
out
sbb
sub
mov
mov
test
pop
mov
shrl
sub
and
fwait
push
mov
inc
adc
sbb
jae
cmp
les
lods
iret
mov
inc
out
fstpt
hlt
lods
in
sub
mov
sub
mull
xchg
cld
or
iret
iret
int
dec
add
mov
in
out
lods
jl
xor
adc
mov
and
fidivrl
or
lods
stos
mov
xor
fidivs
in
push
sbb
ss
in
rcrb
jno
jbe
push
das
out
stos
jo
inc
mulb
mov
add
and
ja
jecxz
das
cmp
pop
imul
inc
test
out
dec
xor
lock
jl
cld
test
leave
rolb
lret
lods
scas
inc
add
sti
fstpl
sbb
and
int
aas
inc
jp
xor
cmp
scas
mov
movsb
jg
push
scas
pop
scas
lret
sub
inc
cmpsl
push
mov
sub
sbb
adc
or
push
loopne
sbb
mov
mov
scas
inc
push
mov
or
sub
mov
jae
cmpsl
push
push
mov
cmc
sub
sub
sbbb
int3
loop
push
mov
and
mov
pinsrw
pop
sub
inc
jecxz
aad
lods
in
xchg
in
jp
loopne
lret
push
push
inc
movb
mov
daa
cmp
push
cmp
lea
push
cs
cwtl
jno
orb
stos
push
fnstenv
pop
test
adc
hlt
pop
outsl
loop
je
pop
sub
or
daa
shrb
hlt
cmpsl
lods
fwait
in
and
dec
pop
loope
imul
push
mov
stos
cmp
adc
lods
xchg
icebp
call
or
jl
ljmp
xchg
mov
pop
imul
insl
mov
in
imul
mov
bound
inc
or
insb
mov
shll
xor
rorb
clc
sub
push
xchg
pop
mov
pop
mov
fcmovbe
insb
or
ficoml
fsts
pop
mov
pushf
adc
mov
iret
pusha
xchg
push
fldcw
es
icebp
lea
aam
mov
je
out
cmp
cltd
dec
dec
pop
mov
pushf
push
fld1
xchg
jae
xchg
push
addl
and
mov
test
xor
jbe
push
fisubrs
dec
pop
lock
sahf
inc
jae
push
dec
xor
test
cmp
imul
pop
in
subl
push
adc
dec
scas
aaa
test
arpl
xor
or
rcrb
push
shlb
xchg
fisubrl
clc
jmp
ret
or
fildl
lea
inc
push
insb
ret
xchg
dec
jbe
mov
fisubrl
sbb
jns
pop
shll
xchg
mov
ret
sub
pop
add
fidivrl
sbb
sbb
aas
in
or
and
pop
pop
movsl
repnz
sar
push
in
leave
xchg
dec
adc
xor
out
xchg
xor
dec
ss
lock
lods
sbb
mov
cli
in
xchg
cmpsb
and
mov
scas
orb
add
cltd
lods
mov
jae
cmc
hlt
mov
push
or
sbb
lret
push
mov
mov
orb
mov
sub
loop
enter
daa
flds
es
lods
xchg
xor
mov
cmp
add
push
dec
addr16
adc
xchg
mov
and
jecxz
mov
stos
sbb
test
jo
imull
daa
shl
call
icebp
movsb
mov
clc
mov
cmpsl
push
cwtl
push
iret
jno
dec
std
xchg
and
push
xchg
sub
xchg
fs
xchg
das
outsl
iret
push
add
rcll
pop
repnz
cmp
or
pop
mov
sub
test
push
call
test
and
aas
xchg
lds
push
enter
roll
xor
cld
jno
cmp
pushf
or
pop
xor
in
adc
sub
push
mov
cs
mov
jle
imul
cmp
or
push
ds
mov
push
test
sub
xchg
xacquire
movsb
cmpl
inc
les
xor
test
cmp
pop
push
test
sbb
scas
popa
call
mov
test
and
mov
mov
sub
cmc
out
fistl
inc
repz
push
jnp
jmp
aaa
inc
fisubrs
movsb
adc
out
mov
hlt
xor
pop
mov
adc
adc
xchg
jmp
lods
stos
pop
push
fisttpl
push
mov
ret
sbb
and
repnz
test
js
adc
loopne
push
fcoms
dec
xchg
pcmpgtd
test
incl
loop
adc
inc
clc
fwait
es
sub
lcall
push
inc
repz
repnz
mov
jl
jns
stc
or
outsb
push
ja
sub
mov
cmpb
mov
mov
es
loope
sbb
dec
lods
push
sbb
sub
sbb
mov
mov
push
jo
mov
mov
shrl
inc
and
jnp
add
jp
lds
insl
repz
push
xchg
sbb
jno
aad
inc
hlt
or
mov
push
push
test
jbe
call
sub
out
add
xor
fisubrs
mov
sub
mov
js
add
mov
addr16
in
test
mov
xor
push
cwtl
test
and
mov
and
popf
inc
out
adc
stos
cld
sub
insb
xlat
mov
into
pop
das
and
or
mov
ret
sub
xchg
sub
lea
mov
sbb
mov
lcall
ret
stos
ja
dec
sub
ret
test
xor
jmp
std
mov
ret
add
push
sarb
jae
pushf
push
cmpsb
out
adc
sti
in
dec
clc
clc
sbb
out
inc
jbe
cmpb
movsb
or
test
inc
cld
jmp
fstpl
inc
jl
mov
cmp
rcrl
mov
cli
jns
int
mov
in
xchg
imull
fxch
mov
rorl
ret
iret
cmpsb
sub
jl
addl
leave
movsl
dec
ljmp
push
stc
jge
xchg
fildll
pop
dec
adc
lret
inc
out
cmpsb
rcl
mov
sbb
daa
jmp
add
imul
mov
cmp
cmpsb
dec
sub
lea
shlb
dec
jecxz
jge
adc
in
imul
ss
jne
imull
adc
inc
adc
add
jno
and
daa
and
cmpsl
lahf
and
ja
pusha
inc
sti
ds
movsl
jne
ss
out
mov
sub
pop
adc
in
dec
pop
mov
mov
push
pop
mov
sbb
mov
lahf
sub
push
test
mov
dec
rolb
cld
dec
mov
cld
shrb
sub
or
addr16
imul
cmpl
outsb
push
adc
jae
stos
jl
sbb
pushf
sub
mov
addr16
mov
inc
jbe
pop
movsl
movsb
sub
fsubl
addb
clc
loop
sti
jo
loopne
insl
xor
mov
fldenv
cltd
ljmp
push
mov
mov
jecxz
ret
push
jp
movsl
push
cmp
rep
sub
xchg
movsl
insb
pop
dec
add
jo
xchg
push
add
rolb
mov
xchg
loopne
or
xchg
and
ja
out
xor
dec
push
fbld
cmp
jbe
pushf
push
cwtl
nop
test
ror
out
in
jns
sbbl
in
xor
lret
out
dec
ret
pop
jle
and
and
mov
add
jg
loopne
clc
cmc
push
mov
add
icebp
test
in
sub
lea
cmpsl
cmp
fistpll
outsl
add
out
jecxz
cld
mov
push
adc
add
push
sub
outsl
std
hlt
inc
arpl
out
add
in
test
aaa
xor
clc
mov
mov
loopne
leave
call
inc
ret
clc
dec
or
or
fcomps
dec
popf
mov
ljmp
inc
ljmp
mov
into
push
std
and
and
pop
enter
sbb
iret
pop
jg
and
jmp
inc
jnp
sbb
repz
cmp
shld
jb
aaa
sub
stos
dec
sbb
cs
mov
cmpsl
push
leave
sbb
dec
sbbl
inc
insb
mov
mov
mov
cmp
outsl
mov
and
pop
stos
xor
push
jo
xor
shlb
cmp
sbb
lcall
icebp
mov
or
inc
jg
dec
pop
fxch
pop
sbb
call
out
lods
aaa
outsl
out
js
notb
and
or
cmp
cmp
jecxz
mov
add
test
insl
repz
pop
pop
and
popf
into
and
jae
scas
push
adc
into
andl
dec
andl
dec
lock
fs
fimull
pop
lret
mov
hlt
test
mov
gs
or
testb
mov
leave
mov
int3
mov
add
fidivrs
bound
inc
or
add
ret
scas
xlat
push
mov
or
adc
sub
adc
push
xchg
sub
setb
mov
sahf
sub
pop
xchg
push
jmp
mov
inc
or
fldl
adc
and
vpshaw
mov
push
lahf
pop
inc
sub
stc
add
jg
mov
push
in
sbb
cmc
rcrb
dec
inc
sahf
xchg
mov
inc
xchg
shll
ds
cli
clc
leave
cmp
pusha
cmp
call
scas
stos
insl
xor
outsb
push
jne
pop
xor
mulb
aaa
in
cs
aas
rcl
mov
adc
push
and
mov
int
cld
add
add
cmp
cmp
mov
daa
add
fidivs
hlt
xchg
cmp
test
aas
mov
mov
sarb
cli
loope
sti
cld
xchg
fstl
shrb
clc
out
push
clc
sahf
add
scas
stos
xor
jo
sbb
xchg
cmc
jle
jnp
push
mov
jns
ss
push
mov
or
lock
call
fistpl
inc
roll
fdivrl
bound
aas
pop
cmp
inc
ret
cmp
out
mov
je
mov
jmp
mov
sti
cmp
jle
call
pop
xorb
faddl
das
in
popf
mov
xchg
cmp
lea
xchg
bound
jnp
xor
xchg
shrl
sbb
or
out
pop
int3
inc
adc
inc
fldt
lds
or
mov
clc
mov
stc
pop
dec
xor
jne
mov
pop
icebp
test
mov
icebp
jp
insb
sub
out
add
pop
jns
sbb
enter
or
sahf
or
and
or
add
mov
loope
mov
into
sub
dec
je
fld
jne
pushf
or
xor
mov
popa
loop
into
ljmp
mov
lcall
cmpsb
push
mov
xorb
mov
hlt
movsb
sbb
adc
in
adc
aas
or
adc
in
or
dec
incb
loop
mov
popf
push
data16
xchg
mov
repnz
movsl
jge
cltd
sahf
cmp
in
mov
into
lds
pop
push
mov
shrb
int3
mov
and
push
mov
into
cmp
icebp
xor
lcall
xor
jg
mov
xlat
cmp
cmp
mov
shlb
dec
movsb
jno
and
fwait
jp
testl
aam
sbbb
mov
sbb
mov
and
xor
dec
fidivs
sar
adc
push
aas
or
push
pop
mov
ds
call
and
cmp
jno
mov
shrl
mov
shl
out
adc
and
pop
mov
or
cltd
scas
jno
push
and
imul
nop
xlat
cmp
enter
pushf
out
cmpb
inc
mov
sbb
mov
mov
int3
fwait
out
pop
add
or
sbb
push
lock
mov
dec
cmp
inc
xchg
or
mov
scas
cld
hlt
cmpsl
gs
mov
pop
mov
sbb
xchg
clc
lcall
inc
inc
cmp
sub
fimull
mov
outsb
les
mov
push
fnstsw
ret
mov
pop
and
adc
je
in
aas
cmpsb
pop
dec
das
dec
xchg
jbe
daa
rorl
cld
cli
lds
ljmp
lods
cmc
test
push
xchg
adc
je
cmp
cwtl
or
sbb
and
push
mov
mov
addr16
loope
ja
or
jp
xchg
stos
pop
std
bound
jmp
subl
in
loop
sbb
inc
mov
outsl
inc
jno
fidivs
pop
fstpt
fcmovu
ret
mov
call
rorl
lock
or
xor
lock
mov
loope
push
adc
sub
aad
xchg
repz
mov
stc
or
and
stc
mov
sub
outsb
push
pusha
push
push
lret
ds
in
out
lods
out
mov
add
test
mov
cli
add
jno
and
adc
scas
sti
shll
jl
mov
stc
xchg
loope
test
clc
xlat
jl
fcoml
pushf
fs
sarb
pushf
pushf
cwtl
fcoms
cld
insb
inc
aam
shrl
into
addr16
jge
dec
scas
pop
xor
mov
outsl
sbb
fadds
rcll
insb
push
or
lds
or
sub
int
test
dec
mov
lock
xchg
fldenv
rorl
xchg
repnz
mov
ret
and
push
jne
and
pop
adc
jo
ss
stos
shlb
dec
mov
lea
arpl
imul
test
sti
jae
mov
gs
add
shll
popf
popf
int3
nop
push
call
loop
pop
js
mov
aam
fcompl
in
mov
xor
mov
frstor
mov
inc
cmc
negb
push
cmc
test
test
cwtl
xor
inc
popa
cmp
add
out
mov
shll
or
addb
das
mov
sbb
mov
mov
pop
imul
test
sbb
push
inc
sti
add
dec
dec
and
push
pushf
sub
int3
adc
rorb
push
shrl
dec
xchg
xchg
ficoms
iret
inc
xlat
dec
outsb
xchg
out
sbb
fildll
fs
movsb
movsl
jp
cmp
stos
jl
es
repnz
and
lahf
xchg
pushw
loop
daa
fistpll
test
add
dec
aad
dec
ficoml
lea
push
pop
dec
cli
movsl
cmp
test
inc
xchg
aaa
or
lret
jmp
jne
xchg
mov
dec
xor
fstpt
xor
dec
mov
in
leave
fistpll
out
je
push
add
push
push
jno
sbb
sbb
sbb
jge
adc
dec
and
inc
or
dec
in
mov
icebp
inc
mov
mov
aad
cmp
jb
cmp
inc
xchg
xchg
test
xchg
hlt
push
pop
gs
sub
mov
rcll
add
idivb
iret
add
push
cmp
mov
test
roll
cmc
stos
jg
lods
sbb
je
and
loopne
mov
test
jae
cmp
lds
mov
mov
inc
sahf
subb
test
cmp
mov
pop
mov
daa
movsl
fisubl
sarl
loopne
sahf
push
aam
push
adc
mov
fildll
jge
mov
in
jo
lret
sbb
cmp
sub
shlb
fdiv
loope
test
mov
cmc
inc
loope
pushf
jnp
test
xchg
faddp
sub
push
mov
jle
adc
mov
push
mov
fsub
mov
adc
adc
test
sub
pushf
pop
hlt
and
inc
jns
jle
xchg
popf
mov
shll
nop
adc
and
and
mov
and
sbb
adc
jg
and
jb
mov
in
out
or
cltd
add
mov
jg
nop
sahf
xor
xlat
stc
out
adc
test
and
mov
sub
jle
fucomip
or
jge
subb
daa
fisttpll
sub
clc
mov
ret
stos
sbb
pop
out
or
fistpl
fcoml
jns
or
lcall
out
xor
push
addl
ret
lods
inc
sub
adc
imul
dec
add
outsb
lea
pop
mov
pop
test
lahf
cli
es
lock
shll
pop
jl
push
xor
rcrb
outsb
xchg
jo
xlat
ficompl
rol
pop
idivl
insb
dec
pop
leave
stos
lock
push
dec
and
mov
cmpsb
sub
mull
dec
pop
mov
sub
adc
in
pop
lods
cmp
jne
xor
into
rorl
lds
mov
lds
lods
rorl
xor
into
add
xor
cmp
push
clc
or
sub
dec
nop
sahf
leave
jnp
fidivl
sbb
mov
cld
out
lret
add
fmull
inc
sbb
mov
sbb
cmc
xchg
repz
shrb
xor
sbb
mov
scas
int
jnp
xchg
xchg
imul
leave
push
push
test
inc
in
in
mov
xor
bnd
scas
add
xlat
xchg
leave
mov
pushf
xlat
fldt
xor
sti
jp
out
ficomps
fsubr
pop
push
jl
dec
lahf
sub
sbb
xchg
and
mov
pop
lret
imul
and
movsl
gs
das
mov
push
jg
enter
push
lds
loope
shl
jg
stc
out
incb
inc
inc
mov
jbe
xlat
icebp
add
add
add
push
ljmp
jno
or
mov
pop
mov
dec
sbb
sbb
les
pop
push
adc
xor
imul
push
mov
fwait
jo
lcall
out
into
sahf
fcmovnb
xchg
jp
inc
xchg
inc
and
jb
in
mov
and
cmpsl
js
dec
loope
rol
ret
cmp
and
pop
adc
mov
and
cmp
adc
xchg
or
call
fdivs
imul
push
jne
fmull
inc
inc
mov
ss
sti
ret
and
adc
rcll
jmp
and
filds
adc
popf
cmpsl
fisttpl
or
aas
mov
mov
pushf
inc
push
lods
loope
add
iret
icebp
add
cmpsl
lahf
mov
aaa
scas
dec
pop
jae
nop
adc
inc
mov
cmpsl
jae
add
loopne
jmp
jo
pushf
fnstcw
cmc
enter
ljmp
movsb
pop
mov
mov
cmpsl
push
lock
push
sub
rcr
lret
adc
mov
push
push
pop
mov
jns
je
sub
inc
dec
popf
xchg
jno
test
in
lret
xorb
jb
pop
mov
xchg
pop
sbb
and
xor
pop
push
jne
leave
push
mov
cmpsl
pop
cmpsl
fistpll
push
mov
es
push
pop
imul
and
div
jge
cli
popa
aas
jno
mov
mov
rcrl
xor
pop
iret
iret
xchg
aad
enter
pop
cltd
mov
or
hlt
mov
repnz
pushf
mov
xchg
adc
sbb
and
imul
and
sub
inc
xor
cmpsl
imul
mov
imul
push
sbb
ret
iret
push
jg
cmpb
test
adc
dec
in
iret
movsl
aam
cltd
subb
inc
scas
divl
aas
dec
push
push
outsl
ja
insl
add
outsb
js
jnp
xlat
and
loope
mov
aas
xor
icebp
push
hlt
cmpsb
xlat
sbbb
pop
iret
loopne
cmp
rolb
fbld
rcrb
jno
clc
cmp
cmc
cmp
mov
movsb
jae
jne
ja
xor
or
je
sbb
pop
jmp
push
cmp
sub
dec
int
sub
fwait
xlat
cli
adc
jbe
cltd
jecxz
pop
fbld
jbe
pop
clc
lahf
pop
jmp
fcomp
data16
jnp
dec
jb
out
xchg
or
cli
dec
push
and
in
lods
mov
pop
xor
add
xchg
adc
push
xor
cs
ficoms
out
fs
push
push
call
fisttpl
sbb
aam
lahf
mov
jp
es
imul
push
xchg
pop
sahf
mov
sub
pop
arpl
imul
lds
scas
cli
les
xor
cmc
dec
test
faddl
xchg
xchg
dec
cmp
push
push
and
jmp
inc
jmp
push
jne
push
cwtl
mov
jmp
shlb
ljmp
divb
in
pop
mov
adc
jp
or
sbb
inc
ret
orl
cwtl
xlat
js
pop
movsb
pop
push
test
and
sbb
xor
fdivs
addl
cld
cli
lea
push
pop
or
add
sbb
sub
imul
or
inc
in
mov
and
mov
inc
adc
push
icebp
pushf
cli
ds
mov
and
aad
shll
jae
lds
mov
ret
push
xor
mov
push
sbb
ss
xchg
pop
jno
pop
fidivl
mov
mov
mov
cmp
push
test
call
pop
sbb
sbb
or
push
sbb
adc
loope
insw
cmpsb
mov
cmp
mov
and
mov
shlb
cmpsb
inc
sbbl
rolb
jl
lret
fdivrs
pop
insb
inc
callw
arpl
push
lods
scas
cmp
mov
outsb
add
dec
dec
lret
ja
addl
adc
add
push
push
jbe
mov
aam
repnz
xchg
adc
or
test
dec
lock
add
xlat
nop
shrl
cmpsb
and
ret
outsl
into
sbb
ror
jnp
sbb
jns
mov
push
mov
jmp
popf
jmp
bound
mov
add
lea
movsb
int
pop
sbb
sbb
inc
movsl
dec
or
xor
jl
xchg
movsb
int
mov
sbbl
and
jmp
push
cs
add
jnp
xchg
push
roll
or
jnp
cwtl
daa
jp
sub
push
aad
movsb
and
cli
and
mov
pusha
adc
mov
movsb
aas
and
sbb
pop
inc
inc
cwtl
out
imul
loope
imul
jno
out
movsb
in
rcrl
mov
push
pop
movsl
fstpl
idiv
inc
cmc
bound
sbb
xor
sub
popa
imul
mov
pop
mov
shll
dec
mov
popa
ljmp
jle
or
fbld
pop
popa
shrb
insb
cmp
insb
mov
fadds
arpl
cmp
ficomps
push
inc
imul
push
mov
clc
pushf
jle
cmp
movzwl
in
xor
or
shll
lcall
lahf
sub
je
testb
fnstsw
ss
icebp
jo
sub
cwtl
cltd
inc
int3
xchg
frstor
mov
sub
dec
pushf
cmp
mov
or
cmc
and
in
xchg
mov
rcrb
lods
push
neg
pop
js
nop
mov
ret
dec
addb
fs
fisubs
jp
fsubs
jno
xor
arpl
in
test
mov
dec
rorb
clc
test
inc
js
xchg
sahf
outsl
imul
or
and
sti
xchg
jecxz
mov
scas
iret
inc
repz
scas
pushf
xor
jmp
xlat
mov
jge
pop
mov
push
icebp
jp
mov
jle
sub
adc
out
ja
out
jno
cmp
das
mov
push
nop
popa
imul
repnz
cmpsl
sbb
shrl
push
movsl
xor
sub
popf
stos
add
cmp
adc
loope
lcall
loopne
insl
jnp
jbe
out
add
hlt
push
stos
fs
jle
leave
gs
dec
ret
dec
out
iret
imul
in
ficoms
rcll
fwait
mov
out
movb
out
add
insl
or
mov
sub
ret
lcall
push
jne
mov
pop
jne
push
or
and
pop
cmc
dec
dec
mov
inc
rorl
xchg
push
mov
dec
or
mov
xor
std
cmpb
std
inc
int
pop
push
fisttps
jns
sbb
cs
xchg
xchg
daa
scas
mov
enter
adc
xchg
push
or
movsl
sti
jge
adc
fdivr
in
sub
call
push
adc
xchg
nop
mov
call
dec
xchg
shr
les
pushf
pop
call
enter
xchg
andl
mov
xchg
cmpsl
into
cmp
setae
addb
cli
and
dec
sbb
fdivrs
xor
iret
add
insb
sbb
dec
mov
pusha
lock
fcoms
shrl
dec
ret
pop
cmp
out
xchg
mov
xchg
xor
adc
pop
fiadds
stos
aas
outsb
and
and
jns
into
and
jae
leave
sti
pop
add
xchg
pop
lahf
daa
andb
push
or
sbb
or
test
push
add
adc
push
stc
nop
insb
sbb
and
sbb
mov
inc
das
add
jns
sub
fimuls
lahf
cmp
push
or
imul
fisttpl
loop
int3
bound
in
inc
je
mov
push
inc
jb
test
in
js
in
ja
aas
negb
mov
adc
loope
mov
adc
lret
xchg
push
sub
jno
add
xor
push
repnz
imul
sar
int3
fstl
push
and
jae
movsb
les
jg
je
dec
fcompl
es
dec
dec
fistpl
mov
mov
jmp
pushf
xor
shlb
inc
mov
xchg
cmp
and
add
clc
jge
ljmp
pop
fwait
adc
rol
xor
insb
or
adc
push
and
and
mov
dec
mov
call
and
pop
mov
pop
nop
into
cmpb
rorb
loopne
cwtl
add
or
sbb
push
sub
imul
in
mov
loop
push
pop
pop
add
push
mov
js
repz
push
add
jo
pusha
lahf
test
xor
push
or
adc
loope
adc
jb
mov
push
adc
vmovq
and
call
pop
lds
and
adc
xor
mov
pop
mov
scas
lahf
adc
pop
add
mov
and
adc
jns
push
mov
scas
sub
and
jnp
mov
inc
add
or
cmp
popa
lds
mov
jle
pushf
pop
outsl
or
xchg
not
jg
in
mov
pushf
icebp
es
sahf
repnz
sbb
mov
xchg
push
xchg
sbb
xchg
ds
icebp
das
arpl
or
inc
mov
aas
mull
mov
xor
in
mov
sub
stc
lret
andb
jns
push
das
mov
fsubrl
mov
mov
push
stos
adc
rcll
mov
jg
mov
das
mov
into
sub
inc
jecxz
ljmp
mov
jb
adc
rcll
in
mov
pop
pop
jbe
mov
pop
shrl
dec
cmp
xchg
pop
fidivrs
mov
dec
sub
cmp
sbb
mov
pop
mov
jae
repz
cltd
enter
negb
les
sub
notl
push
aam
jg
loope
mov
das
add
enter
sub
jg
in
mov
into
push
mov
cltd
mov
pop
into
jbe
pop
imul
subl
mov
out
pop
cmp
xor
push
cmp
mov
mov
push
stos
pushf
ja
in
jo
pop
scas
mov
push
popa
jae
xor
out
xor
dec
sbb
rolb
sbb
mov
mov
jle
popf
scas
repz
push
insb
ret
cmp
mov
aas
orl
icebp
cld
sbb
pavgb
push
jnp
out
test
loopne
add
out
xchg
adc
imulb
pusha
mov
stos
ret
add
iret
add
insb
adc
or
sbb
or
lret
fimuls
lods
pop
pushf
lods
mov
add
jno
pop
xchg
fistps
jmp
lds
push
loope
lea
jg
mov
sbb
adc
rcrb
xlat
and
add
inc
push
cmp
stos
add
shr
sarb
fsubrs
jno
sbb
jle
addr16
jle
jecxz
pop
pop
push
pop
pop
mov
pop
jle
cmpsl
xor
mov
mov
rcrb
mov
andb
sub
push
sbb
xchg
rcll
test
sub
cmp
adc
sbb
pop
cwtl
ljmp
aas
xor
cmp
mov
popa
mov
ds
add
add
testl
jl
xor
cmp
mov
test
inc
pusha
and
xor
mov
repnz
lea
dec
jnp
mov
mov
and
cld
pop
push
stc
jae
jl
pop
clc
js
into
repnz
scas
cltd
mov
cltd
inc
pop
cmp
cmp
lcall
loope
mov
xchg
mov
mov
pop
cmp
sbb
jne
dec
pushf
jne
jno
xchg
mov
inc
lds
xor
or
mov
xchg
jg
lds
xlat
or
jmp
imul
xchg
jg
sub
cwtl
adc
cmp
pop
inc
out
xor
lods
sbb
mov
mov
add
sbb
popa
mov
js
or
pop
push
jae
cmpsb
dec
pop
cld
cmpsl
push
xor
cmc
mov
repnz
ja
mov
xchg
xchg
repz
mov
mov
clc
add
into
jbe
repz
adcb
clc
decb
data16
jg
mov
lock
into
popf
iret
add
mov
imul
lock
push
and
mov
mov
and
mov
cmp
lret
and
push
test
jo
add
icebp
jmp
loope
sbb
fldenv
repnz
add
xchg
inc
push
sub
dec
jle
dec
dec
std
jg
not
dec
mov
scas
sub
icebp
sbb
inc
clc
sbb
xchg
testb
es
mov
std
loop
loop
jo
and
and
or
push
lret
les
adc
push
loopne
ljmp
pop
test
clc
les
mov
stc
mov
push
scas
xor
out
jp
insb
sbbb
mov
xchg
add
jns
and
cmpsb
inc
in
push
insb
mov
sarb
ss
jge
and
outsb
les
push
sbb
mov
stc
push
outsl
sub
adc
cltd
mov
lods
mov
sub
insb
push
ficomps
jp
seto
mov
add
roll
adc
mov
xor
sbb
test
xchg
pop
stos
movsl
cli
mov
jne
pop
scas
ds
vpslld
shlb
push
daa
ja
jmp
push
pop
rcrb
insb
imul
cmpb
xor
add
call
das
jle
add
xchg
or
outsl
pop
sub
test
sub
jp
gs
pop
cli
aas
inc
aas
in
dec
imul
fbld
mov
jne
cmp
lods
popa
jnp
add
jbe
dec
leave
mov
mov
insl
cmpsl
imul
call
mov
cmp
push
jnp
lcall
out
jmp
gs
sahf
jnp
out
call
out
or
nop
sbb
icebp
sbb
sub
mov
lods
pop
repz
inc
inc
mov
loopne
jg
stc
adc
jae
add
cwtl
dec
or
movsl
xchg
dec
out
jmp
imul
aaa
int
cmpsb
shr
lahf
addr16
cmp
jbe
adc
jne
leave
mov
add
sbb
push
icebp
pop
add
xlat
sub
out
pop
sahf
adc
sub
cmp
test
negb
clc
push
arpl
aad
xchg
in
ret
into
and
pushf
std
fidivl
mov
cmc
fs
add
fcoml
pop
xchg
imul
fnstsw
push
lcall
dec
lret
cmp
pop
inc
adc
adc
je
inc
cmp
sub
and
or
push
xchg
pusha
add
cmpl
cmp
out
jle
xchg
sub
jne
and
jmp
and
jl
jmp
iret
pop
cmpsl
fwait
lods
cmc
aas
ret
pop
or
dec
jge
addr16
imul
loope
gs
push
movsb
mov
xchg
xchg
imul
sub
cs
push
push
lods
jle
mov
mov
int
or
lcall
stos
cwtl
fsubp
aam
rcl
imul
jb
push
jg
imul
pop
nop
repz
mov
pop
dec
pop
rcrl
push
popf
jg
arpl
rcll
sbb
xor
mov
in
out
xchg
jb
mov
js
inc
sub
dec
xchg
cmpsb
js
nop
pop
dec
ja
and
mov
sub
or
mov
popf
clc
cmp
arpl
push
data16
cmp
mov
cmp
lahf
in
fwait
out
insb
xchg
arpl
mulw
rcll
pop
dec
mov
sub
aam
push
cmp
hlt
pop
pop
push
loopne
int3
pop
outsb
xchg
in
jmp
divl
or
stos
adc
jmp
cmpsl
pop
stos
mov
mov
xchg
jae
cmpsb
mov
cmp
mov
pop
sub
fwait
jge
test
or
add
push
stos
scas
mov
jl
out
jl
jo
dec
mov
std
mov
pcmpeqw
stos
mov
fistpll
or
mov
cld
inc
sti
xlat
mov
push
int3
int3
in
es
add
mov
mov
inc
fdivrs
adc
push
dec
and
push
sub
xchg
push
xlat
dec
xchg
inc
and
xchg
mov
mov
dec
pop
insl
xlat
outsb
sti
ja
mov
cmc
pop
jns
mov
add
sbb
xlat
mov
lods
push
push
test
addr16
dec
divl
add
jns
in
fidivs
mov
iret
jnp
fidivs
mov
and
push
test
pop
cwtl
aas
repnz
pop
sahf
ja
dec
push
insb
fidivs
or
jno
fldcw
hlt
xor
in
mov
add
inc
mov
push
push
dec
fsub
out
inc
lcall
add
add
popa
leave
loopne
sub
inc
cwtl
pop
loope
out
push
js
xchg
sbb
adc
jo
adc
daa
add
shll
sarb
push
lea
dec
iret
inc
shlb
or
in
call
and
repz
mov
mov
jnp
cltd
je
cltd
cmp
inc
sbb
jne
sub
std
dec
cmp
pop
lods
inc
pop
gs
int
fldenv
mov
sbb
jno
stos
mull
stc
add
jecxz
mov
lock
cli
pop
mov
pop
jecxz
popf
or
push
cmpsb
and
cmp
fidivrs
push
mov
mov
lahf
and
test
cmpsl
pop
call
mov
ja
mov
repnz
enter
loop
sub
call
cmpsb
mov
out
adc
js
popf
or
ret
out
int3
sahf
adc
in
xchg
jb
std
into
cmpl
jle
shll
test
mov
mov
pusha
mov
jne
mov
inc
stos
sbb
and
sub
mov
xchg
imul
jnp
stc
push
xchg
movsl
cmp
nop
movsl
jle
cmp
dec
dec
lret
xchg
popf
std
pop
fdivl
int3
mov
inc
xchg
lods
cmp
jge
adc
test
repz
fidivrl
stc
inc
insb
repz
mov
test
fldcw
movsb
inc
mov
lret
into
pusha
xor
jns
and
aas
push
cmp
scas
and
and
pop
mov
out
ss
out
orl
or
mov
scas
mov
jns
lea
inc
inc
cmp
mov
adc
lret
cwtl
or
cmp
dec
xor
gs
mov
mov
mov
out
cli
rcl
dec
sub
inc
xor
dec
xlat
imul
daa
popf
fwait
int
lret
out
xor
call
sqrtps
jle
adc
ret
push
inc
fisttpl
xchg
les
sub
lods
add
cmp
jae
into
fsubl
xor
mov
or
adc
or
in
xor
cli
pop
fadds
mov
jno
sub
sbb
inc
cwtl
jle
int
out
sti
adc
in
push
testb
mov
cltd
jne
rorl
ljmp
daa
push
xchg
loopw
cmp
rclb
repz
push
mov
aaa
imul
push
mov
mov
cmp
rcrb
in
jl
cwtl
movsb
xor
pushf
js
je
out
je
imul
test
jecxz
mov
push
and
jae
sahf
daa
dec
mov
add
mov
mov
sub
jge
push
ficoms
inc
outsl
enter
mov
in
in
and
sbb
mov
movsb
mov
loop
pushl
arpl
inc
js
push
bound
out
sarb
push
fs
xchg
jecxz
test
test
add
push
mov
hlt
test
in
dec
ss
sti
rep
int
mov
ficompl
cs
fdivrs
mov
lods
aas
mov
lods
sbb
sub
popf
enter
popf
pop
add
ror
ljmp
xchg
xchg
fnsave
push
idivl
mov
jno
xlat
cmpsl
stos
add
inc
clc
out
outsb
jmp
pop
jge
lret
xchg
adc
mov
nop
jg
dec
mov
pop
jle
mov
imul
sub
popa
clc
test
push
push
dec
pop
addr16
rorl
faddl
xchg
inc
lds
push
inc
das
insl
lahf
jno
pop
or
jno
fyl2xp1
add
popf
jns
mov
test
adc
imul
lret
inc
icebp
inc
in
call
popf
or
sub
xchg
cmp
sbb
shll
mov
and
xchg
in
sub
or
insb
xchg
pop
arpl
int
pushf
shll
dec
std
fldenv
std
mov
scas
mov
jl
and
das
jb
adc
pop
aaa
icebp
cmpl
fcmovb
imul
les
movsl
or
call
mov
aas
dec
lahf
or
test
adc
js
sub
cmp
pop
ljmp
push
mov
xchg
add
lret
jbe
mov
in
mov
or
push
enter
aam
fs
mov
int
pop
sub
mov
mov
out
bound
movsl
mov
scas
pop
mov
outsb
pop
aaa
pop
adc
aam
jns
lods
cmp
into
push
idivb
outsb
dec
mov
loope
hlt
xchg
inc
and
xor
xchg
adc
repz
xchg
push
push
add
add
mov
scas
stos
lret
adc
pop
mov
rcrl
loopne
enter
movsl
cmp
imul
imul
fidivs
fdivrl
pop
xchg
or
loope
xchg
mov
or
int3
mov
ret
test
mov
lahf
xchg
dec
inc
jo
or
mov
xor
add
mov
xchg
and
and
into
dec
cwtl
incl
mov
sbb
in
jbe
addr16
cmp
push
cmp
stos
insb
mov
mov
mov
fldl
dec
jae
jle
jae
push
or
sub
jecxz
mov
out
mov
or
jl
adc
test
add
adc
pop
icebp
repnz
bswap
mov
push
out
sarl
pop
xchg
add
add
cmp
jecxz
push
mov
adc
mov
mov
bound
xor
cltd
pop
xchg
shll
jne
adc
mov
out
cmpsb
enter
mov
fisttpl
call
repnz
es
xor
ja
dec
mov
xchg
in
sbb
mov
repz
xor
movsb
movsl
xchg
add
cmp
and
jae
xor
ficoml
add
inc
push
outsb
repnz
notl
pop
lret
rclb
out
adc
push
lods
jb
dec
scas
icebp
or
lahf
divl
pop
data16
push
xchg
xchg
and
xchg
inc
hlt
fmuls
icebp
in
jmp
dec
scas
stc
jns
pusha
adc
mov
lods
mov
subb
push
push
jmp
lahf
push
xchg
push
les
das
stos
ja
out
sub
xchg
outsb
iret
sbb
jecxz
and
fmul
push
cwtl
and
mov
push
adc
mov
icebp
push
push
je
das
into
into
test
inc
addr16
jle
aam
cltd
in
movsb
dec
adc
inc
adc
xchg
dec
push
mov
pop
out
aad
xlat
leave
push
lds
sbb
jmp
sahf
or
or
xchg
pop
fwait
jp
jp
fmull
mov
repnz
idivl
mov
ss
adc
das
stc
sti
cmp
xchg
jmp
cmp
xchg
sub
pop
fidivl
sub
cltd
icebp
les
adcb
mov
movsl
std
insl
and
xchg
cmc
stos
sbbb
ja
or
stc
repz
jmp
inc
scas
int
aad
mov
jns
xchg
cmp
shr
stos
popf
imul
mov
jmp
insb
sahf
push
das
vpsubsw
aas
fucomi
adc
xchg
cmpsl
lock
fwait
loope
or
icebp
rclb
out
xchg
mov
jmp
add
clc
push
cs
xor
mov
test
dec
jmp
push
adc
lahf
jno
add
sahf
out
push
ds
dec
aas
subl
mov
jb
push
rorb
cmpsl
out
xor
addr16
iret
into
sbb
xor
sar
jle
xor
fldenv
mov
xchg
mov
push
mov
or
jl
mov
mov
mov
xchg
xchg
icebp
mov
mov
xchg
clc
fdivrs
adc
jbe
jo
mov
adc
aas
sbb
adc
cli
in
insb
fsubs
inc
loope
dec
sub
mov
sbb
rcl
lret
cld
test
div
clc
xorl
shl
mov
test
notl
add
stos
mov
into
jge
ss
jle
mov
mov
rclb
movsl
fchs
ret
sub
dec
cmpsl
jns
lcall
sti
xchg
loop
dec
int
les
dec
js
and
adc
clc
jne
movsb
rorb
mov
push
jl
jb
stc
jg
lea
sbb
push
jl
pop
jg
lret
cli
add
cmpsl
mov
push
fiadds
lods
mov
lods
out
dec
scas
arpl
mov
inc
aaa
dec
lret
dec
mov
leave
mov
sti
push
test
push
mov
cld
push
std
test
leave
int
pop
add
adc
pop
scas
mov
mov
aas
dec
ret
xchg
and
jb
icebp
xor
insl
jbe
jg
in
pushf
mov
fwait
pop
xchg
pop
daa
inc
insl
aas
or
ss
dec
movsb
mov
setb
and
dec
inc
mov
je
sbb
in
pop
repz
push
idivl
shrl
and
xchg
stos
imul
js
jmp
and
jl
mov
cmp
sti
add
testb
adc
sbb
out
mov
push
shll
test
idivb
mov
or
test
scas
push
data16
push
sahf
daa
mov
inc
mov
fidivrl
sub
jg
pop
mov
xchg
sbb
mov
mov
jecxz
lods
jl
daa
push
mov
pop
cld
mov
cld
leave
sub
stos
imul
adc
jb
or
sahf
lret
push
mov
cmpsl
xchg
pop
sub
and
cmp
dec
mov
push
cmp
loop
dec
add
push
xchg
and
jecxz
into
or
adc
sti
test
outsb
inc
xor
mov
aaa
pop
push
jecxz
sub
outsb
xchg
cmp
mov
mov
mov
sub
jns
test
xlat
pop
dec
mov
or
jno
lret
xchg
mulb
xor
popa
push
cmpsl
imul
adc
pop
adc
sbb
dec
or
mov
mov
stos
bound
xor
fsubl
fcomip
mov
cmp
out
inc
mov
sub
xor
mov
dec
fcmovnu
imul
mov
movsl
sti
sub
push
mov
xlat
cltd
mov
cmc
cmp
sbb
testb
adc
icebp
dec
sbb
stos
jp
or
xchg
sub
pop
incl
dec
cmpsb
sub
cmp
test
hlt
cmc
and
mov
test
sahf
xchg
dec
shlb
push
faddl
mov
mov
fcompl
movsl
cs
inc
and
adc
inc
rcll
popf
jg
sbb
jge
mov
and
or
test
in
sbb
scas
leave
and
push
movsb
mov
xor
sbb
add
jp,pn
push
stc
outsb
icebp
loope
inc
lahf
xor
cs
pop
push
push
repz
adc
cmp
xor
leave
sub
lret
sub
push
mov
mov
or
inc
or
ss
dec
and
rorb
fisttps
test
mov
arpl
call
nop
addr16
int3
mov
mov
pusha
xchg
jno
or
movsl
pop
dec
cld
cli
mov
dec
xchg
addb
push
push
jl
jno
les
out
out
mov
jl
rorl
in
call
xchg
or
insb
movsl
hlt
or
sti
imul
cmpsl
insb
jle
dec
sbbl
cmp
adc
or
pushf
ffree
add
push
dec
xchg
std
add
jno
je
sub
cmp
negb
sbb
mov
jmp
int
cmpsl
das
dec
sbb
pop
into
outsb
push
in
sub
nop
aam
or
inc
push
les
mov
hlt
in
fwait
and
xchg
gs
dec
insl
mov
pop
mov
pop
cld
repz
cmpsl
pushf
aas
and
aad
mov
orb
sub
test
xchg
mov
inc
cmpsl
testb
dec
xor
mov
ficoml
xchg
ficompl
mov
xor
hlt
insl
int
leave
push
push
test
xor
rclb
push
or
push
fsubrl
test
adc
mov
ffree
lcall
mov
xchg
iret
stos
and
jb
mov
lock
leave
sti
pop
sub
into
leave
outsb
scas
jne
mov
gs
int
popf
ds
mov
jno,pt
add
fdiv
loope
adc
xchg
push
mov
mov
cli
leave
ficoms
ja
les
cltd
inc
mov
pusha
mov
xchg
data16
rol
jge
pop
imul
fldl
addr16
in
mov
gs
pop
pop
inc
stc
pop
and
xor
mov
cmp
hlt
dec
loop
test
push
mov
rol
dec
out
sub
movsl
popf
js
push
in
dec
clc
cli
loopne
cmc
js
lahf
add
jmp
xor
cmpsl
std
sbb
xchg
add
xor
push
mov
mov
shll
es
mov
lahf
js
lock
lds
sbb
pop
es
lahf
loope
lock
jp
call
cmp
ss
imul
pop
and
lret
adc
daa
jb
jecxz
add
sbb
adc
loop
sahf
mov
or
mov
mov
dec
cmpsl
sub
test
pop
loop
loopne
movsl
incb
jge
sti
xchg
sub
or
mov
clc
test
sub
mov
cmp
es
ret
sub
inc
sahf
push
or
lds
aad
js
and
xor
repnz
dec
adc
lds
jno
fnstcw
sbb
test
xchg
mov
or
pop
aam
jge
adcb
aam
dec
jle
mov
imul
xchg
mov
hlt
insb
insb
hlt
test
test
lods
sbb
test
xchg
mov
int3
cwtl
pop
mov
mov
fdivs
push
jo
or
or
mov
add
repnz
je
sub
enter
in
int
jecxz
and
cmpsl
push
les
mov
js
stos
sbb
sbb
adc
xlat
cmp
cmp
mov
cmp
jl
test
mov
out
mov
icebp
repnz
jp
in
lret
xchg
xor
fnstenv
ret
negb
arpl
iret
jecxz
insl
mov
jnp
xchg
icebp
mov
mov
push
jae
xchg
xchg
pop
pop
pop
movsb
js
cli
cmp
outsl
and
xlat
adc
into
pusha
add
mov
lcall
cmpsl
test
mov
imul
dec
das
pop
xor
ror
xchg
call
les
pop
push
inc
insl
cmpsb
cmp
xor
xchg
dec
sub
pusha
das
insb
into
popf
stos
sbb
nop
pop
ljmp
js
cli
dec
mov
mov
loop
jg
loop
pop
ret
in
subb
fsubl
pop
or
cmpsl
push
es
sub
in
mov
xchg
inc
add
push
insb
dec
leave
adc
lcall
cmp
ds
mov
mov
std
movsb
jo
outsb
fldl
les
lcall
out
bound
jo
sbb
dec
shll
imul
mov
imul
ja
fstps
and
cs
dec
lds
xchg
mov
and
sbb
das
rcrb
daa
lock
fbstp
pop
lock
imul
cli
sti
xlat
inc
lret
in
mov
mov
push
popf
and
mov
out
out
mov
cli
enter
shrl
mov
cltd
jae
sbb
lods
fistps
jecxz
icebp
jl
orl
pop
sub
push
xor
ficoml
nop
loop
sub
test
push
lock
aam
mov
cmpsb
adc
sub
adc
stos
cmp
mov
jge
in
adc
test
push
or
adc
sub
xchg
inc
xor
pop
jg
je
mov
add
sub
les
mov
inc
fisttpl
xchg
mov
insb
ja
sub
xor
xchg
scas
cld
rorb
xchg
pop
pop
aas
mov
cmp
dec
pop
repz
push
int
mov
mov
lret
cmp
les
fldenv
xchg
cmp
lahf
jl
ret
movl
xchg
pop
xchg
jo
js
leave
cmp
push
cmp
fsubrs
cld
outsb
jmp
js
lea
sbb
push
sub
lods
mov
dec
adc
xchg
mov
push
enter
jge
in
dec
jmp
mov
scas
adc
or
xor
fldt
sub
jp
inc
cmp
outsb
imul
in
add
pop
stc
in
cmp
pop
pop
push
jae
and
std
sub
movsb
sar
stos
sub
inc
dec
clc
mov
leave
je
out
pop
mov
data16
mov
adc
fcomi
cmpsb
fcmove
out
fwait
popa
mov
mov
imul
cmp
jne
xlat
xchg
push
cmpl
addr16
xchg
cmp
lods
xchg
inc
pop
mov
mov
out
cmp
adc
push
pop
mov
push
out
inc
jl
bound
and
mov
dec
mov
daa
out
movsb
push
or
rcrb
or
cmp
inc
jp
mov
pop
loop
fmuls
sbb
jo
jmp
mov
negb
lods
lods
xchg
loope
sub
loopne
cmp
pop
inc
sub
cmpsb
add
add
hlt
mov
jae
sbb
test
scas
and
pop
sar
inc
dec
loop
cmpsb
leave
in
mov
pop
mov
sbb
lods
and
xlat
adc
jnp
aaa
js
jle
js
mov
daa
in
mov
adc
xlat
fwait
mov
loop
popf
fstps
mull
mov
and
imul
push
pop
repnz
mov
mov
cmc
fnsave
dec
cli
push
or
jmp
je
shlb
jne
mov
mov
jbe
sahf
neg
cltd
pushl
outsl
ret
daa
decb
push
add
enter
mov
stc
mov
shl
les
or
stos
push
fnsave
out
and
xchg
mov
loope
jmp
or
sub
fimuls
add
xor
mov
rclb
fistpl
in
adc
sti
pop
inc
ds
push
inc
add
mov
pop
push
pop
push
sub
jge
divl
push
and
sub
shll
aam
mov
mov
sbb
lds
sahf
push
jl
icebp
pushf
nop
mov
xor
jp
adc
pop
cmp
mov
jge
dec
push
jo
in
scas
push
test
stos
push
scas
jp
jge
fstp
adc
xchg
xchg
and
mov
in
arpl
call
mov
and
movsl
inc
aam
mov
pop
cld
or
lea
les
mov
pop
sbb
call
loop
je
clc
xlat
arpl
fcompl
fbstp
cs
popa
stos
sbb
cmpb
repnz
in
xchg
sub
mov
and
adc
mov
loopne
mov
fistl
rep
das
cmp
jl
xchg
popf
adc
mov
xchg
out
enter
jb
out
and
jl
test
jmp
stos
stc
xchg
jge
mov
cmp
jne
in
ja
mov
lods
jmp
mov
push
and
scas
mov
pop
xor
jmp
fnstcw
jae
out
imul
daa
iret
cmpsb
das
aas
mov
xchg
pop
cmc
fldlg2
xor
clc
jne
rcll
outsl
fistl
jl
dec
clc
cmp
std
dec
addr16
bswap
shrl
xchg
sub
or
jns
out
js
stos
xor
inc
sub
or
xlat
jnp
jns
fdivrs
dec
enter
inc
add
stc
pop
mov
xor
scas
push
popf
pop
mov
lahf
jg
xchg
mov
mov
adc
push
scas
and
shl
or
icebp
mov
mov
or
pop
mov
pop
push
adc
mull
and
jb
pop
cmpsb
mov
in
pop
mov
insl
cmp
xor
push
fidivrl
push
dec
jnp
xor
and
in
lret
lods
cmpsb
jbe
xchg
xchg
mov
sub
xor
int3
push
push
imul
adc
mov
fcompl
test
enter
mov
cmp
ja
mov
jo
pop
jmp
es
xchg
scas
xlat
jne
dec
dec
adc
mov
sbbb
cmpsl
dec
xchg
jp
movsl
pop
sub
cmp
jae
and
lea
out
ljmp
leave
mov
sbb
lcall
dec
js
packssdw
adc
xchg
in
hlt
data16
sbb
test
iret
fists
mov
sub
xor
fsubrs
mov
or
dec
nop
add
imul
arpl
xchg
mov
cmp
and
mov
xchg
xor
aad
xor
sub
sub
cld
loop
adc
outsl
cli
into
mov
pop
mov
jp
mov
lods
or
xor
inc
pop
ja
cmp
sub
out
pop
test
ror
sub
xor
clc
or
das
xor
mov
xchg
ffree
mov
dec
inc
aam
inc
cwtl
fstpl
jae
aad
cmpsl
mov
lock
movsb
clc
stos
in
aad
xor
sti
sub
test
jb
or
andl
push
push
test
mov
lods
jle
fcoms
mov
lods
jle
test
mov
dec
into
mov
push
jecxz
cmp
repnz
adc
mov
js
lcall
adc
out
fsubl
push
jl
jns
mov
mov
in
sahf
pop
dec
popf
lea
outsl
xchg
dec
jno
daa
xor
inc
and
pop
pop
xor
mull
mov
ss
jmp
sub
add
xchg
ljmp
cmp
add
ret
icebp
cli
mov
rorl
roll
pop
sahf
pushf
xchg
sbb
cmp
mov
adc
aad
in
ror
insl
mov
enter
pop
pop
repz
repnz
sbb
orl
fwait
mov
and
pop
inc
push
lods
js
xchg
xor
cld
mov
std
mov
lcall
loop
out
movsl
inc
out
les
notb
xlat
lret
inc
in
out
repnz
mov
test
stos
filds
mov
ss
cwtl
leave
or
das
ret
js
out
add
jge
and
or
adc
inc
and
adc
push
mov
xchg
hlt
sbb
loop
push
and
jle
pusha
cmp
popa
xchg
mov
stos
repnz
data16
inc
mov
mov
xchg
std
cmpl
xor
aad
cmpsb
mov
inc
inc
shrl
inc
sub
inc
cli
add
jnp
cli
sbb
push
inc
fdivp
cli
clc
popf
add
jb
xchg
add
xchg
push
push
push
clc
sar
mov
pop
push
xchg
inc
in
pop
rolb
add
xchg
xor
dec
roll
dec
fdivs
stos
or
push
shll
mov
and
xor
std
pushf
and
imul
dec
sahf
jb
out
add
outsl
lret
dec
push
sbbb
xchg
mov
add
movsl
and
sub
cli
push
mov
addr16
movsb
lret
adc
lds
leave
cld
shrl
xchg
push
lock
sbb
push
ds
call
jns
mov
pop
sub
push
cmp
outsl
jmp
mov
in
std
call
rcll
iret
push
int
jo
cli
out
test
ss
not
inc
icebp
gs
sub
sti
aad
jno
sarb
pop
push
mov
mov
aas
jbe
cmp
lret
and
mov
fld
fcomps
clc
adc
add
jp
ror
orl
flds
push
stos
pop
pop
jbe
or
sbb
aad
pop
es
mov
lahf
add
xor
adc
sbb
out
and
fwait
test
xchg
std
pushf
dec
hlt
pop
pop
std
inc
outsl
sub
jecxz
push
jb
add
aas
inc
ss
popa
inc
std
shll
dec
ret
xchg
inc
sbb
xchg
nop
ja
sbb
movsb
fnstcw
repz
sbb
mov
pusha
js
adc
dec
jno
stos
inc
pusha
test
inc
dec
ret
mov
out
ds
stc
in
into
mov
out
xor
mov
int
lahf
addb
push
js
data16
lret
dec
rclb
fdivrl
xor
bound
in
mov
jb
inc
mov
inc
mov
mov
inc
adc
dec
push
pop
or
cmpsl
push
cmp
jle
push
jle
dec
addr16
das
mov
or
leave
stos
inc
xchg
dec
push
and
mov
lret
fisubs
aaa
fiaddl
xchg
mov
in
inc
lcall
das
push
aad
mov
jns
mov
mov
jle
icebp
movsb
mov
pop
pop
int
gs
ljmp
xchg
jl
or
mov
sub
daa
aaa
in
mov
jb
movsl
in
push
add
adc
cltd
jae
in
lds
xor
or
in
push
sarl
ffree
mov
sahf
mov
mulb
xchg
shlb
leave
aas
repz
fmul
xor
enter
movsb
scas
daa
add
xchg
push
ds
pop
mov
xor
sbb
in
or
inc
xchg
adc
shll
cmp
cmp
fsubrs
test
dec
icebp
pop
idivb
jp
aam
movsb
sub
and
inc
and
ja
bound
xor
push
loope
dec
test
mov
cmp
lret
bound
inc
fidivrl
push
push
dec
mov
stc
inc
sub
dec
jp
or
mov
inc
sbbl
inc
sti
mov
icebp
addl
fldenv
dec
inc
xlat
xor
push
sub
sbb
out
or
adcl
xor
dec
jne
adc
inc
leave
mov
scas
mov
rcrb
xor
dec
xlat
jne
xchg
stos
jne
or
leave
jle
pop
popf
loop
es
clc
shr
push
xor
mov
jno
and
and
jo
lods
dec
xchg
loop
std
mov
outsb
pop
push
out
or
enter
dec
out
dec
sub
or
push
xchg
mov
jecxz
js
lods
cmp
jmp
adc
sbb
cwtl
inc
pop
sbb
les
cmp
in
mov
mov
jnp
add
stos
decb
sbb
ror
scas
and
enter
mov
test
xchg
movsb
cmpsb
test
adc
inc
aam
sub
sub
adc
inc
cli
jecxz
outsb
lea
xchg
add
imul
add
bound
dec
loop
bound
and
inc
xchg
xor
fs
push
adc
cld
and
int
pop
pushf
mov
aas
cmp
push
sbb
cmp
mov
inc
out
subl
dec
js
out
data16
mov
xor
mov
scas
lret
enter
cltd
mov
mov
ret
xchg
push
test
loope
mov
adc
push
icebp
je
add
mov
ss
sbb
push
ret
dec
xlat
inc
cmp
push
dec
stos
arpl
sarb
es
mov
fcoms
sub
or
movsl
cli
mov
ret
rcll
cld
call
test
dec
sarb
pop
insb
rorl
inc
xor
lahf
push
call
mov
sbb
cmp
imul
mov
xor
jbe
adc
jae
push
stos
rorb
xlat
xchg
push
loopne
pop
negl
loope
and
and
and
xchg
ret
xchg
sub
rcll
ficoms
xchg
mov
xchg
add
xchg
jae
mov
hlt
pop
mov
dec
push
stos
ret
pop
push
sub
sub
or
test
mov
shll
sub
xchg
jp
into
adc
pusha
mov
inc
testl
lds
js
pop
mov
in
dec
pop
xchg
sbb
cltd
mov
mov
rorl
orb
mov
adc
stos
add
enter
jmp
lock
mov
jl
icebp
repz
lock
repnz
mov
add
mov
mov
aad
jae
scas
lahf
fbstp
loop
add
adc
mov
xchg
shll
clc
jae
xchg
stos
call
mov
fidivs
inc
into
push
push
rcrb
icebp
ja
push
push
mov
inc
inc
jecxz
mov
cltd
or
xor
add
jp
repnz
xchg
movsl
outsl
dec
cmp
shrb
push
pop
stos
dec
insb
cld
add
movl
jle
bnd
adcl
xlat
jo
je
pop
jae
test
popa
out
mov
adc
mov
fucomi
push
sub
scas
lds
jb
xchg
icebp
mov
js
cmpsl
or
adc
shrb
add
rorl
sbb
insl
adc
cmpsl
out
sub
out
icebp
out
shlb
add
cmp
mov
insl
jmp
out
inc
ja
fadd
adc
les
push
mov
push
mov
fdivrs
lds
int
call
sbb
push
inc
sub
adc
fimuls
lds
icebp
sbb
mov
jb
rcrl
dec
cmp
bound
repnz
inc
jbe
lret
mov
arpl
jnp
mov
movsl
mov
mov
les
add
mov
xchg
rcll
push
mov
or
jecxz
mov
pop
movsl
inc
test
jecxz,pt
cltd
inc
xorb
jb
add
out
push
push
shrl
sbb
clc
jbe
sbb
divl
and
jecxz
push
xor
cld
or
xchg
std
jo
daa
mov
push
add
dec
sub
xor
jno
sarb
out
insb
ljmp
aaa
arpl
xor
fistpl
jbe
es
dec
jo
push
push
xor
push
ret
fs
push
xchg
aas
or
icebp
push
pushf
push
enter
addb
pop
js
add
leave
jp
sbb
push
cmp
cmpsl
repz
movsb
lret
gs
dec
test
adc
cmpsb
sub
jno
je
cmp
or
mov
xor
or
push
popf
inc
inc
add
fucomp
xor
hlt
or
or
push
mov
dec
cmp
push
sub
mov
push
mov
ret
popl
push
sbb
lret
mov
ja
das
sbb
scas
lock
mov
xor
jecxz
out
loopne
add
mov
je
jmp
jbe
cmc
inc
cli
xchg
shr
sahf
orl
push
call
cmp
pop
pop
jns
aaa
faddl
mov
jnp
pop
stos
sub
aaa
and
dec
and
add
cs
pusha
test
xchg
das
out
xor
dec
testb
scas
mov
mov
inc
xchg
sbb
dec
add
subb
mov
push
jns
daa
jb
pop
fidivs
pop
xchg
enter
and
or
enter
ret
mov
mov
stos
pop
aam
push
adc
mov
add
xchg
mov
mov
roll
mov
mov
mov
sbb
push
push
cli
iret
mov
into
and
push
mov
jp
sbb
xchg
arpl
sbb
mov
dec
mov
cltd
int
sbb
mov
dec
outsb
sub
cs
xor
and
mov
cmpsl
push
sbb
lods
fstp
xor
or
and
ficoml
gs
jae
orb
lods
lcall
pushf
sbb
mov
jb
pop
adc
push
mov
ljmp
leave
mov
ret
stc
jg
fstpl
push
push
xchg
sbb
add
mov
sub
test
hlt
sahf
push
dec
adc
push
test
lock
xor
cmp
dec
xorb
scas
sbb
push
es
push
add
pop
test
inc
mov
call
sarb
cmp
and
adc
movsb
aam
inc
cmp
jp
pop
xchg
sub
js
jb
add
cld
cltd
lods
push
and
or
xchg
mov
jbe
popf
js
mov
nop
fdiv
dec
sbb
rcrl
adcb
inc
lds
inc
imul
jne
or
push
push
fistpll
sub
imul
daa
aad
push
stos
pop
imul
xor
cmp
int
rorb
push
inc
cmpsb
mov
mov
add
sbb
push
dec
cmp
mov
mov
fldt
xor
test
dec
mov
lret
clc
mov
int
sub
leave
jb
push
or
and
add
push
loopne
in
push
mov
mov
adc
fcomps
xor
push
enter
call
push
sub
scas
popf
scas
loope
sbb
out
in
sbb
lahf
sbb
jbe
and
dec
mov
in
pop
repnz
mov
dec
in
shlb
stc
xor
cmp
cmp
sbb
out
jne
cld
pop
xor
repnz
mov
lock
pop
clc
fs
sbb
ja
jb
xchg
cmp
cmp
in
jp
add
pop
dec
xor
push
std
movsl
call
aaa
mov
das
inc
shlb
in
loopne
inc
call
dec
dec
xchg
repnz
aad
inc
pop
mov
jae
mov
sub
or
out
adc
jb
out
ljmp
pop
cli
push
add
jp
faddl
aam
hlt
add
adc
std
test
lods
pop
out
mov
xchg
cmp
add
in
sbb
ss
repnz
ret
jl
adc
mov
rolb
jno
std
cmp
push
aad
std
aas
mov
jo
sarb
cmp
loope
loop
mov
pop
out
aaa
mov
pop
fmull
lock
mov
outsl
mov
mov
lcall
and
mov
or
xchg
mov
inc
jl
and
push
ss
push
sub
jno
push
sub
push
fwait
idivl
sub
idiv
push
push
popa
mov
sub
xchg
or
add
js
inc
adc
lea
shlb
push
rcll
sahf
lods
pop
test
and
or
outsl
divl
xor
sarl
mov
enter
frstor
push
lahf
divl
inc
in
fucomip
js
xor
js
pop
bound
mov
dec
xchg
jl
adc
add
lcall
xchg
sbb
lcall
repnz
lret
repnz
das
push
mov
stos
xor
shrb
lods
pop
orb
testl
xchg
lahf
sbb
inc
mov
and
xor
repz
rcrb
jns
mov
add
or
and
pop
add
pop
dec
and
mov
lea
pop
sbb
cmc
in
jae
nop
xchg
mov
lods
loopne
xchg
insl
movsb
outsb
adc
repz
aas
jns
mov
xchg
pop
add
dec
adc
push
xor
pop
mov
sub
cwtl
test
std
push
push
and
dec
pop
hlt
sub
sbb
pop
add
push
mov
popf
mov
add
aam
or
out
fsubs
dec
mov
fcoms
inc
jae
mov
cwtl
push
add
cmp
test
clc
cmp
jb
test
cmpsl
mov
inc
data16
mulb
jnp
push
out
enter
setae
xor
mov
and
aas
xor
pop
jae
xchg
inc
push
mov
jle
mov
mov
inc
lea
push
add
mov
adc
pusha
test
fwait
cli
lods
pop
cli
xchg
rorl
outsb
js
dec
pop
pop
push
xor
pop
pop
dec
adc
pop
repnz
sbb
pop
fisubs
ds
sub
xor
mov
pop
sub
lcall
enter
mov
fidivrs
stos
xor
dec
mov
pop
xchg
adcb
pusha
add
or
jns
mov
and
lds
insl
mov
add
jl
maskmovq
divl
jl
bound
out
fs
jns
mul
add
jo
sbb
aas
mov
cmc
xchg
inc
shl
dec
shl
ret
push
sbb
pop
or
xchg
cmp
or
movsb
dec
mov
cmp
mov
mov
push
scas
loopne
insl
cmp
ret
ds
xchg
stos
arpl
movsl
mov
fisubl
faddl
jb
sub
dec
cmpb
test
or
arpl
jo
fsubl
repnz
je
enter
adc
adc
or
jb
xchg
out
stos
je
add
andl
fbld
iret
add
mov
nop
sbb
movsb
push
js
mov
mov
lock
dec
push
jne
lea
mov
jmp
cwtl
add
ret
mul
sub
cmp
sub
ret
outsb
mov
xadd
and
xchg
orl
mov
xchg
sub
js
out
nop
cmpsb
mov
js
sbb
xchg
pop
fstpt
or
adc
adc
stc
mov
das
sbb
subl
cmp
fcmovb
mov
pop
sti
push
clc
xchg
dec
mov
push
popa
out
xchg
dec
mov
or
and
inc
mov
pop
push
cmp
rol
inc
and
je
loope
scas
mov
adc
jne
push
cli
popf
adc
push
in
adc
jns
aam
sub
dec
stos
push
push
sbb
xchg
inc
push
mov
adc
mov
mov
pop
cmpb
and
lock
pop
add
sbb
stos
jp
pop
movsw
lods
in
adc
mov
into
push
xchg
in
repz
add
push
cli
and
ret
dec
icebp
rcll
inc
inc
in
addr16
inc
cwtl
inc
cmp
mov
jae
add
pusha
adc
bswap
and
mov
ret
push
push
sub
jl
pop
add
and
jne
jne
stc
fbstp
insb
fcomip
sub
outsl
jno
insb
pop
je
dec
cmp
ret
add
mov
leave
or
add
push
sahf
sub
and
sub
mov
cmpsl
pop
inc
push
test
sub
inc
adcb
xchg
pop
lret
cld
fnstcw
outsl
xchg
xchg
daa
inc
popa
xchg
je
mov
in
jae
mov
mov
adc
stc
or
jae
movsb
sub
pop
cwtl
sub
pop
mov
gs
or
pop
in
push
std
sahf
das
int
and
test
pusha
lcall
or
xchg
cmp
ficoms
mov
mov
shrl
fdivs
jns
xchg
aad
push
add
pop
enter
xor
push
mov
mov
lret
es
incl
dec
cmpsb
inc
xor
out
in
test
xlat
enter
xchg
incl
insb
mov
push
nop
sub
inc
ja
adc
mov
fldcw
push
testl
xchg
sbb
repnz
stos
jb
out
aad
in
mov
adc
jp
stc
mov
sub
or
test
push
jmp
std
pop
cltd
xor
je
je
dec
push
push
jae
xor
mov
and
mov
inc
out
cwtl
dec
popf
ret
mov
pop
rolb
push
popf
pop
adc
cmp
adc
mov
negl
inc
jmp
leave
mov
rcrl
inc
add
scas
xor
mov
jg
push
into
insb
adc
cwtl
dec
mov
add
scas
pop
rcll
jno
leave
sub
scas
cld
inc
push
and
adcl
popf
cmp
insb
pop
mov
incl
in
jmp
ja
std
pusha
jecxz
aaa
jne
inc
jno
sub
out
pop
cltd
mov
push
push
stc
dec
dec
insl
mov
cmp
mov
pop
xor
pop
xchg
dec
or
fwait
iret
call
inc
out
movsl
loop
sahf
pushf
sub
pusha
fwait
lret
mov
insb
out
push
xchg
lret
aaa
loope
sarl
subb
jb
stos
scas
cltd
pop
mov
jnp
jp
mov
rcr
sub
adc
pop
std
aam
adc
sahf
or
fstps
mov
out
das
dec
ss
testl
das
lret
ljmp
rep
inc
lods
xlat
jb
ficoms
dec
mov
stos
xchg
jmp
cmpsb
xchg
lret
sbb
movsl
xchg
adc
loopne
pop
out
xchg
pop
sbb
push
mov
xor
fsubrp
adc
ret
pusha
cwtl
mov
mov
fnstcw
mov
rorb
sbb
test
sub
lods
xor
add
inc
cltd
sub
jecxz
lret
push
fstpl
or
pop
push
movsb
and
and
jg
std
repz
xor
scas
mov
scas
mov
jl
stc
out
into
mov
push
ja
mov
sbb
lock
stos
cmp
xor
std
cli
repnz
mov
popa
ret
mov
add
sbb
fidivl
push
adc
cmp
push
daa
mov
cmp
inc
js
iret
cmp
mov
xchg
adc
sahf
push
out
fisttpll
lahf
leave
push
mov
mov
pop
or
push
mov
jns
repnz
and
mov
pop
jb
scas
stos
or
xlat
repz
popl
push
push
leave
fisttps
cld
push
in
adc
aas
ss
jbe
dec
jns
aaa
push
pusha
mov
xchg
mov
dec
dec
fidivrl
mov
adc
notb
int3
jnp
adc
push
mov
jecxz
jecxz
fxtract
rcrl
movsb
lods
sti
pop
adc
imul
fildl
sar
lret
inc
scas
data16
imul
inc
inc
cmc
and
rol
sub
xor
xlat
xchg
iret
std
sub
xchg
push
dec
and
pop
mov
jle
adc
int
adc
jbe
cli
mov
dec
je
out
stos
cmp
push
out
jmp
pop
jbe
int3
pop
sub
mov
jbe
dec
mov
std
push
add
xor
pop
jg
pop
mov
cmp
inc
int3
out
fwait
aas
mov
pop
mov
ja
outsl
test
mov
sbb
lret
pop
mov
push
cs
ss
fstpl
push
push
loop
lods
and
push
lahf
jmp
adc
and
lea
pushf
inc
mov
aas
cmpsb
xchg
loope
jmp
xor
add
std
add
add
mov
add
dec
divl
shrl
mov
xchg
mov
mov
sub
mov
in
dec
jle
mov
dec
mov
subb
lret
in
enter
in
sbb
jbe
gs
fwait
pop
xchg
cmp
ret
cld
loop
or
pushf
rorb
dec
fwait
inc
ss
dec
or
cmp
clc
ja
lret
movsl
pop
sbbl
inc
mov
dec
aam
dec
lahf
test
les
call
test
mov
inc
loope
lock
sbb
jnp
cmp
test
pop
shll
jns
jmp
xchg
jp
sbb
xchg
xchg
adc
std
mov
sbb
mov
test
test
ret
dec
sbb
notl
push
mov
incl
lods
cmp
pop
add
jle
mov
sti
rorb
out
pop
cmp
repnz
xchg
cmpsl
mov
mov
jbe
mov
outsl
enter
jo
flds
push
scas
adc
nop
sub
mov
mov
arpl
fwait
mov
dec
cmp
je
ftst
mov
sbb
cld
lret
jno
mov
loop
cmp
movsl
mov
imul
dec
mov
icebp
sahf
lock
nop
xor
movsb
lea
mov
push
loop
mov
xchg
ds
inc
aaa
sbb
shrb
dec
test
push
sti
adc
dec
icebp
bound
xchg
add
mov
addr16
mov
scas
out
mov
and
pop
outsb
add
push
xor
mov
or
and
not
cmp
jno
outsl
and
aaa
popl
jle
inc
jns
sbb
jae
xor
push
xchg
sbb
sbb
mov
dec
xor
adc
aas
cmp
imul
or
xchg
adc
inc
outsl
jns
fistpll
mov
movsl
jne
xor
mov
inc
cmpsl
iret
addr16
xchg
xor
test
inc
or
add
lret
pop
adc
jne
dec
cmp
mov
mov
xchg
popa
xorl
jns
enter
int3
imul
test
data16
lds
addr16
mov
arpl
push
sahf
test
adc
lcall
jno
lds
xor
or
sarb
mov
aad
lahf
rcl
pop
idivl
aad
mov
mull
faddl
test
jmp
mov
or
mov
mov
ss
std
jg
enter
outsb
nop
insb
cmc
xchg
outsl
sbb
call
stos
xor
sub
xor
sub
hlt
jae
into
xor
enter
pushf
ret
clc
test
add
ds
push
mov
and
pop
jno
mov
aas
sbbb
mov
xchg
jno
push
popf
push
jge
push
inc
fiadds
xor
or
ret
mov
jp
pushf
outsb
push
leave
or
es
dec
out
adc
fwait
ret
mov
int
lea
pop
dec
data16
cmp
sahf
out
xchg
daa
push
sbb
adc
or
clc
dec
xchg
int3
or
mov
int3
out
mov
ss
inc
out
xlat
jb
mov
out
in
jg
cwtl
int3
mov
jne
adc
xchg
push
outsl
and
pop
repnz
aam
mov
dec
add
mov
mov
clc
jo
shl
gs
sbb
fs
repnz
dec
call
adcl
dec
shrl
or
sbb
jmp
fwait
sbb
sbb
fdivrs
xor
xchg
into
xchg
lahf
jne
cmpsb
bound
dec
jno
cmpsb
sbb
cli
xchg
out
dec
add
xor
xchg
push
mov
mov
inc
cmp
loope
push
test
sub
jo
loopne
sub
mov
sub
fs
js
dec
jp
movl
aas
movaps
add
adc
test
lds
divb
scas
out
xchg
lods
push
out
add
mov
mov
xchg
xor
add
mov
xor
xchg
inc
outsl
dec
mov
aam
lcall
xchg
lahf
lcall
fidivrl
fdivrs
loopne
or
lahf
pop
push
or
enter
bound
or
jns
inc
add
mov
pop
xor
insl
fcmove
jecxz
inc
rcll
mov
sbb
std
orl
sub
push
jns
shlb
push
in
pop
cmp
test
mov
in
mov
cmp
add
stos
cmovns
pushf
in
fisubrs
ret
push
xor
lds
jg
fucomp
push
sbb
pop
in
ja
outsb
xlat
jb
fsubrp
mov
adc
inc
loope
repnz
enter
adc
repz
mov
in
call
xchg
xor
sbb
fstl
sbb
ss
lret
xor
mov
enter
push
dec
mov
test
into
sar
adc
and
orl
dec
les
pop
int
or
xor
adc
lods
sarb
pushf
mov
fs
test
jns
push
incw
push
push
xlat
push
aaa
andl
int3
xchg
shrl
push
insb
jnp
mov
out
cli
xchg
xchg
jno
xchg
stc
push
cmp
pushf
pop
les
icebp
test
in
lret
divl
test
inc
add
stc
push
jb
pop
aam
dec
cmpl
pop
or
sbb
lds
jb
pushf
push
mov
ret
pop
xor
cmp
std
xor
in
ljmp
mul
jae
jge
mov
and
mov
sub
popa
cmp
jecxz
mov
ljmp
jl
pop
pop
jp
mov
dec
std
push
das
ss
adc
pop
loopne
jg
arpl
sbb
fdivrp
loopne
cmc
fwait
test
jmp
int
rorb
shll
ljmp
xor
in
sbb
inc
sbb
push
xor
negl
int
ljmp
int
dec
repnz
or
mov
xchg
adc
pushf
xchg
sub
ss
add
addr16
repz
mov
sarb
cld
jae
add
jle
aam
dec
cmp
cli
or
push
pop
loope
and
data16
jge
lods
adc
enter
push
fwait
cmp
sub
dec
sbb
xchg
or
ds
xchg
dec
or
pop
addr16
cs
jo
mov
ja
imul
xlat
aam
jge
lret
arpl
sbb
jecxz
push
or
in
mov
jbe
fadd
cmp
jge
mov
out
sbb
lea
mov
pop
adc
sti
adc
popf
push
mov
jecxz
push
icebp
cltd
movsb
jns
imul
fbstp
test
cmpsl
push
int3
xor
push
aaa
cmp
imul
das
sub
cmp
xchg
push
jns
and
xor
add
fldenv
push
and
inc
push
sub
iret
cmp
sti
pop
cld
sbb
jl
insl
imul
fdiv
dec
xor
negb
out
pop
mov
dec
mov
icebp
shll
xlat
aam
test
aas
mov
jne
lret
popf
je
push
xor
mov
subl
addr16
cmp
dec
insb
imul
in
jl
lea
nop
pop
mov
cmp
pop
in
sub
jmp
pusha
mov
sti
cmpl
fisttpl
dec
lahf
jmp
jne
lods
push
arpl
insl
or
stos
nopl
aaa
call
stos
xor
faddl
xchg
mov
lods
daa
sbb
pop
fstps
jecxz
push
inc
inc
dec
push
arpl
insb
in
bnd
mov
mov
cltd
ss
jns
ret
mov
sbb
mov
cld
adc
lret
sub
add
sbb
cmpsb
fstl
push
dec
adc
mov
popf
inc
sub
mov
push
ret
pop
in
cli
insl
idivb
inc
cmpsb
pushf
outsl
mov
lcall
mov
mov
cmp
adc
je
std
aaa
mov
adc
adc
out
mov
movsb
dec
adc
cmp
xchg
outsl
or
mov
lret
ljmp
jne
xorb
cmpsl
dec
xchg
inc
dec
push
pop
in
xor
xchg
dec
je
or
push
stc
dec
int
push
sti
adc
inc
fistpl
xchg
push
repz
jge
mov
pop
mov
and
sbb
inc
ja
jp
movsl
push
sub
and
fs
pop
cs
cmpsl
xchg
out
ret
push
adc
int3
xor
pop
or
fs
push
dec
xor
subb
lret
mov
popa
stc
push
sbb
daa
mov
add
adc
into
stos
scas
aaa
lea
xor
push
out
movsb
xchg
pop
ror
add
xchg
stc
cwtl
les
lock
or
xor
bound
cmp
push
fldcw
push
inc
mov
notl
test
dec
mov
cmp
jp
dec
mov
out
push
xor
in
jg
add
jnp
xchg
jle
sub
mov
sar
roll
aad
push
adc
add
popa
cmp
shl
pop
sub
pop
out
aas
xchg
out
cmp
scas
jmp
cmp
ja
push
ja
je
push
push
push
fwait
add
shll
xor
sub
jbe
lds
bound
push
test
daa
loop
add
lock
pushf
shrd
cmp
hlt
fcomps
lcall
sub
mov
and
loopne
outsl
sub
int
mov
mov
mov
and
or
pop
xlat
sub
sbbb
test
mov
pop
into
outsb
fs
ja
add
pusha
push
jmp
mov
in
mov
loope
jno
lds
inc
test
scas
test
xchg
mov
fsubrs
aam
insb
lcall
rorb
mov
cmpsl
in
pusha
dec
aas
icebp
cld
loop
sub
dec
fbld
imul
jb
ja
in
out
and
sbb
cmp
arpl
icebp
aad
aad
push
cli
aam
leave
inc
fcmovne
fsubr
sub
push
es
les
call
dec
daa
push
adc
testb
dec
icebp
test
pushf
in
mov
idiv
inc
fbstp
mov
jle
pop
dec
and
insl
icebp
test
and
mov
jnp
insb
mov
scas
stos
xchg
inc
inc
imul
inc
testb
xchg
scas
and
pop
popa
lea
or
cwtl
fidivrl
es
icebp
or
push
int
dec
mov
mov
mov
dec
scas
jp
inc
mov
pop
fidivl
sbb
test
scas
or
syscall
mov
dec
int
je
sbb
jb
sti
and
lret
mov
fsubl
das
xchg
push
xchg
pop
mov
loop
in
into
pusha
xchg
ds
inc
iret
clc
shr
test
adc
mov
add
lahf
addb
jno
xchg
inc
sub
mov
cmp
sbb
push
lea
push
rclb
xor
fnsave
xchg
adc
inc
cwtl
xor
test
mov
jno
cmp
mov
sbbl
pop
pop
xchg
push
mov
popa
aad
lahf
cmp
sub
ud0
lods
sub
cltd
xor
inc
dec
fwait
pushw
jae
cmp
inc
adc
and
dec
dec
fisubl
fnstenv
xlat
popa
ficoml
jnp
test
xchg
out
push
test
pop
xchg
or
mov
pop
sbb
push
mov
or
inc
and
pop
mov
inc
sbb
adc
je
lret
outsl
out
or
sbb
dec
push
cmp
jne
loope
test
pop
push
fbld
adc
xchg
out
pop
insl
dec
adc
pushl
jo
jecxz
push
jnp
pop
mov
push
test
xchg
fmull
icebp
dec
ret
or
test
fistps
sar
xorb
pushf
subl
pop
mov
stos
xor
mov
insl
jecxz
xchg
xchg
pushf
xchg
xor
ret
xor
icebp
stos
or
inc
repnz
test
leave
xlat
push
sarb
cmp
jecxz
mov
mov
mov
iret
bound
or
cs
rol
sbbb
mov
mov
push
add
arpl
cmp
test
cld
push
add
xchg
js
and
jnp
lock
mov
in
xchg
cmp
xchg
in
sbb
or
aaa
push
push
xchg
inc
inc
jnp
mov
adc
nop
jbe
xor
in
jp
stos
or
fldenv
jne
mov
in
sbb
mov
ljmp
inc
ss
sti
sub
xchg
mov
mov
push
das
sbb
inc
mov
arpl
outsl
cmp
jne
clc
add
fnstsw
test
sahf
ret
nop
push
ja
jle
mov
ljmpw
int
adc
or
xchg
inc
add
rcll
push
mov
cwtl
push
xchg
xchg
pushf
int
mov
jle
cli
and
adc
inc
stos
jmp
adc
fs
scas
ficompl
pop
das
add
cmp
or
add
pushf
outsb
leave
mov
push
mov
mov
imul
cmc
insl
icebp
ret
and
cmp
jno
std
add
addb
aaa
sub
mov
inc
je
mov
push
mov
add
add
std
addr16
mov
mov
mov
icebp
nop
push
scas
or
das
in
loope
out
test
shll
stos
dec
aad
add
mov
in
fisttpl
mov
xor
out
sbb
lret
pop
int
jecxz
idivb
sub
push
mov
add
and
movl
fwait
pusha
out
movsl
pop
xor
and
sbb
jnp
jecxz
pop
mov
cmp
xor
and
push
stos
and
xlat
rorb
mov
stos
cld
or
fldcw
fidivrl
xchg
cmp
les
sbb
or
mov
jp
mov
xchg
dec
mov
sub
loop
xor
cltd
add
arpl
xchg
xor
cmp
xor
insb
jge
mov
imul
xor
mov
and
and
imul
and
mov
test
sub
leave
decl
xor
mov
add
xor
push
jne
fisubrs
xchg
in
mov
std
xor
add
call
int3
or
imul
cmp
sbb
xchg
out
enter
xor
enter
mov
lods
and
stos
pop
fs
pop
jg
adc
lods
inc
mov
test
mov
popf
ss
lods
or
loope
outsl
in
js
lea
jmp
je
ljmp
sti
sub
test
jo
jmp
inc
loope
pop
mov
or
jle
repz
test
pop
pop
in
xor
push
addl
and
mov
xchg
pop
inc
dec
out
push
xchg
fwait
xor
sub
sbb
in
lods
xor
xorl
clc
dec
sub
ss
ret
roll
jno
pop
lock
mov
out
insb
inc
cmp
lcall
cmp
orl
mov
mov
lds
mov
outsl
fimull
push
or
xor
jge
xchg
jp
adc
xchg
pop
inc
loop
push
cs
lcall
ds
fisttps
dec
dec
das
inc
jge
lods
pushf
int3
ljmp
lods
sub
and
mov
push
xchg
sbbb
rcl
and
xchg
add
repnz
dec
inc
cmpsb
dec
es
xchg
push
repz
mov
mov
pop
in
mov
mov
iret
and
mov
sub
pop
sub
call
mov
mov
mov
fidivl
sbb
push
mov
fsubr
test
push
push
in
lcall
lcall
mov
adc
loope
mov
cs
mov
mov
test
push
pop
mov
push
arpl
and
bound
cmpsl
jns
loope
push
fldcw
mov
xor
popa
mov
jmp
mov
push
cmp
inc
or
add
pop
mov
inc
mov
dec
inc
mov
mov
mov
fimuls
int
mov
in
enter
mov
mov
insb
test
mov
sbb
xor
mov
out
sub
mov
cmc
cmpb
sub
aas
loopne
rcrb
stc
fbstp
push
xor
jb
je
ss
sub
lods
in
loopne
pop
mov
popf
into
dec
lahf
dec
and
scas
adc
in
lret
ljmp
pop
int
sahf
into
sub
lcall
int
lcall
into
jno
aad
scas
jbe
mov
inc
mov
lods
pushf
cwtl
repnz
push
push
iret
repz
cmp
aad
popf
pop
jae
and
imul
push
scas
mov
push
pop
and
scas
std
pop
mov
pop
pop
sbb
sbb
pop
push
and
add
cwtl
sub
add
or
mov
pop
sub
or
arpl
lret
int3
sub
mov
pushl
cwtl
pop
xor
addr16
pop
iret
push
push
sub
cmpsl
movsl
repz
iret
cmpsl
stos
leave
movsb
repz
pop
add
fnstcw
adc
or
orl
imul
vsqrtpd
mov
mov
xor
pushf
ret
jnp
xor
into
test
xchg
popa
mov
lock
aaa
cmp
pop
xchg
in
jg
jne
ja
lods
shl
out
jg
adc
loop
std
mov
mov
sub
into
fistpll
mov
sbb
lds
scas
ret
fistpl
sbb
mov
pop
rol
sbb
inc
repnz
daa
and
out
pushf
les
cltd
jp
mov
cmp
scas
out
repz
bnd
fstps
std
hlt
jbe
add
inc
or
sbb
test
loop
lods
push
mov
mov
xchg
xchg
mov
dec
lcall
aad
lock
ljmp
out
cmp
lret
pop
shrb
out
in
sbb
push
jecxz
xchg
adc
jmp
xchg
sub
cmp
ds
call
add
in
push
decl
add
add
or
dec
out
push
pushf
loope,pn
mov
loope
pusha
faddl
insl
pop
push
popf
xchg
insl
and
js
jle
cmp
pusha
jns
scas
add
lcall
pop
add
adc
or
idivb
in
and
out
fistps
jge
mov
lret
ljmp
mov
movsb
push
mov
loopne
push
pushl
pop
mov
icebp
xchg
pushl
pop
enter
add
push
clc
dec
negl
sti
lds
adc
mov
jle
outsb
imul
sub
stos
popa
mov
sub
push
sub
add
push
pushf
adc
mov
sub
jbe
and
xchg
das
cs
adc
ret
cmpsl
aaa
sub
sahf
push
push
mov
sbb
cltd
fcoms
cltd
in
rorb
jns
loope
negl
out
push
pop
and
loopne
imul
adc
leave
aas
mov
sbbl
sti
lahf
pop
imul
mov
inc
mov
idivl
jo
jp
cli
xor
ja
pop
lock
scas
jg
push
mov
repnz
test
jnp
movl
mov
mov
mov
sbb
bnd
mov
mov
sub
xchg
dec
push
jb
rol
mov
cltd
dec
jge
and
push
mov
icebp
mov
lahf
xor
push
jge
bound
push
aas
gs
je
out
popa
add
sbb
ffreep
pop
inc
ds
mov
and
xchg
mov
cs
add
jg
mov
mov
push
das
mov
lretw
fldcw
and
and
nop
fisttpl
das
jp
cmp
ljmp
jne
xor
test
mov
mov
pop
aas
mov
mov
xchg
in
movsl
lret
mov
or
fstpl
jp
push
lods
out
cmp
popf
int3
mov
jl
mov
rolb
addr16
fsts
adc
sbb
cmp
or
movsb
sub
mov
por
or
es
cs
cmpsl
shl
add
call
mov
mov
xchg
cmpsl
cmp
in
pop
push
dec
mov
or
mov
mov
lahf
mov
add
lea
insb
imul
insl
int3
sbb
add
jecxz
mov
push
es
sub
movsl
lcall
dec
xchg
lods
in
fstpl
sbb
filds
aam
pusha
xor
addr16
inc
popa
mov
xchg
rolb
bound
ljmp
cmp
icebp
and
pushf
jp
adc
popa
xchg
jecxz
out
adc
mov
mov
push
lods
gs
or
fstl
lods
sub
and
pop
sbb
sbb
push
dec
mov
mov
ds
pop
push
push
nop
mov
shlb
aam
push
push
fsubr
mov
push
push
and
test
sub
or
repnz
dec
or
sub
mov
fisubrs
mov
xor
pop
movsb
sub
idivl
ret
or
cmp
jbe
inc
imul
jno
mov
gs
fsubrs
loopne
cli
jge
adc
add
xchg
out
dec
pop
mov
cmp
faddl
outsb
pop
fldl
je
xchg
inc
test
add
pop
addr16
imul
mov
lret
jnp
push
jb
out
push
xor
dec
sarb
fdivrs
pop
push
push
jp
fsubrs
popa
inc
inc
ljmp
sbb
ret
lret
inc
or
add
push
popf
dec
mov
fs
test
dec
cmpsl
mov
xor
cmp
leave
aam
dec
out
popf
dec
rorb
mov
jae
cmp
dec
aam
movsb
repz
cld
xchg
cs
sbb
jns
dec
cmpsl
push
xchg
fisubs
cmp
mov
or
or
into
cmp
mov
test
nop
and
mov
adc
rorl
jnp
fisubrl
and
mov
hlt
jp
sub
negl
ss
cltd
in
sub
inc
or
jbe
push
gs
xchg
jecxz
inc
xchg
cmpsb
inc
scas
sub
mov
mov
pop
lcall
mov
dec
dec
inc
test
sahf
pop
adc
inc
cmp
movsl
js
jb
mov
pop
cmc
imul
push
fidivrl
xor
lds
dec
outsb
cli
dec
xor
fldenv
imull
loop
mov
pop
ljmp
in
imul
imull
cmc
data16
xor
data16
sbb
pusha
inc
or
mov
sbb
add
rorl
sar
jmp
fdivrl
aas
xlat
mov
xor
pop
mov
cmc
pop
test
ja
cli
emms
clc
pop
mov
and
imul
jnp
lcall
push
lock
mov
fldl
movsl
mov
nop
xchg
dec
xor
cmp
inc
repz
sub
iret
sbb
mov
fadds
je
mov
xor
out
iretw
jecxz
inc
xchg
cmp
cmp
loop
sbb
inc
lock
shll
in
out
cmpl
xorb
enterw
mov
iret
jl
lock
dec
push
dec
mov
hlt
les
leave
push
push
out
aas
addb
shll
js
fwait
loopne
scas
fsubrs
dec
sub
into
inc
sub
lock
xor
stos
and
xlat
mov
repnz
pop
mov
mov
pop
sarl
inc
dec
dec
test
cmp
and
fdivrl
lret
fcompl
repz
lret
ss
enter
mov
in
jl
loopne
sti
fwait
xchg
aam
inc
adc
fwait
mov
ja
out
mov
paddusb
jecxz
daa
sub
aaa
add
mov
sub
vhaddps
lods
int
mov
sub
sbb
loop
out
out
pop
mov
jmp
mov
add
ret
mov
or
popa
in
and
xor
mov
cmpsl
mov
push
push
insl
xor
andnps
fcmovnbe
mov
xor
iret
jo
stc
data16
sbb
adc
xor
pop
cwtl
xlat
out
fwait
jnp
outsl
fnstcw
push
pop
les
xchg
mov
js
sub
inc
jp
or
inc
add
push
xchg
lods
sub
enter
push
mov
lcall
aam
mov
and
bound
test
stos
jb
pop
pop
movsl
fwait
sbb
or
mov
push
push
into
mov
das
mov
je
xchg
adc
inc
subb
ret
cs
sub
inc
cs
adc
inc
pop
movb
adc
bound
stc
cmp
push
aam
andl
rorl
outsb
fisubl
arpl
rcr
jae
mov
jecxz
repnz
pop
add
dec
pop
push
xchg
pusha
xchg
faddl
mov
sub
mov
js
ds
insb
and
mov
mov
adc
int3
imul
fistpl
jmp
mov
ljmp
cmc
cmp
jge
xchg
xlat
aad
or
sub
jns
cmpsl
pop
pop
and
sub
sbb
xor
xor
in
mov
fisttps
repnz
loop
jmp
push
mov
add
cmp
inc
imul
int3
and
sub
mov
fstp
dec
push
mov
ret
imul
xchg
in
test
push
pushf
outsl
sbb
pop
jg
mov
jle
sub
pop
insb
push
nop
jecxz
hlt
xlat
std
or
insl
lret
popa
lfs
and
mov
lss
notl
xor
scas
cmp
jno
pop
pushf
and
cltd
repz
mov
repnz
int3
adc
rcrb
mov
aaa
push
mov
sbbb
pop
xor
out
mov
xor
cmp
sub
push
jnp
mov
adc
dec
outsb
stos
iret
sbb
outsl
pop
lods
or
add
test
insl
stos
adc
mov
xor
pop
test
scas
repnz
test
int
test
jae,pt
add
jge
mov
in
xor
loopne
sub
dec
cmc
xchg
push
jno
xor
mov
out
scas
popa
jno
lock
xor
imul
push
out
leave
adc
mov
xlat
es
bound
insl
cltd
or
daa
movsl
icebp
mov
int3
jne
test
mov
out
leave
adc
pushf
and
and
test
arpl
jmp
dec
push
scas
out
inc
mov
pop
pop
mov
fbstp
dec
mov
inc
pop
and
daa
cmp
cmp
pop
xacquire
stos
jnp
jbe
mov
repnz
fmul
int
xchg
clc
mov
or
sahf
mov
aad
push
stos
ret
mov
out
mov
fistpl
mov
jmp
push
jns
mov
jl
or
cmp
je
inc
xorl
aas
or
mov
rorl
dec
insb
mov
je
cld
mov
repz
jg
mov
insb
mov
push
aad
mov
sub
out
lods
xor
cli
inc
sahf
sti
inc
shlb
imul
fldt
leave
mov
jmp
sti
xor
test
es
sbb
mov
mov
push
cwtl
xor
add
and
gs
mov
sub
and
mov
push
ljmp
in
jae
mov
add
scas
xor
xor
movsl
pop
mov
pop
lret
popl
outsb
test
out
stc
fs
xchg
and
jg
ljmp
add
imul
rcrb
test
inc
mov
aas
fsubr
popa
mov
jp
pop
cwtl
pop
mov
adc
and
adc
xchg
mov
mov
and
ds
arpl
add
pop
push
jmp
lret
faddl
or
cwtl
cmp
fcoml
mov
out
das
inc
and
addr16
ja
subb
push
sub
sub
xlat
gs
mull
jo
xchg
pop
ret
movsb
mov
popa
out
inc
cmp
jle
sbb
nop
mov
test
leave
add
cmp
stos
push
lret
fwait
push
dec
cmpl
insb
bound
popf
xchg
popa
mov
nop
fwait
jbe
stos
mov
gs
xchg
xlat
push
data16
loopne
xor
push
bound
push
int3
dec
in
sti
notl
xor
pop
int3
mov
dec
dec
mov
lea
incb
cltd
mov
mov
and
xor
push
les
inc
das
push
test
or
xor
mov
fptan
inc
push
jecxz
fsubs
xlat
jge
dec
cli
mov
rolb
in
call
jmp
ds
jle
mov
adc
jge
xor
in
pushl
adc
jmp
popf
loopne
or
ja
xchg
add
das
cmc
stos
xchg
lods
out
jo
fisubrl
pop
jo
mov
jae
cmpsb
jns
mov
fidivs
dec
sbb
and
cmp
stc
push
xchg
mov
inc
xchg
fsubl
test
dec
ja
es
lds
xchg
sub
jb
push
aaa
into
imul
jne
dec
dec
mov
out
enter
outsb
outsl
and
fdivrl
sub
push
lret
or
inc
movsb
callw
mov
jge
add
dec
cmpsb
sub
mov
mov
testl
sti
pop
cmp
xor
inc
lock
push
clc
mov
pop
popa
bnd
push
jecxz
outsb
mov
enter
popa
add
ja
dec
dec
imul
jae
daa
jmp
mov
ja
dec
and
cmp
pop
test
roll
mov
mov
pushf
inc
inc
std
daa
inc
and
loop
cmp
aas
xchg
push
mov
mov
push
popf
sub
inc
push
popf
ljmp
std
push
mov
jbe
aas
inc
inc
inc
sti
int
mov
inc
repnz
mov
push
movsl
out
addr16
cmpsl
sbb
xor
je
insl
pop
jns
mov
fisubrs
iret
notl
sbb
insb
sti
jle
xchg
xchg
xchg
mov
scas
jb
mov
rcl
out
xor
xchg
mov
inc
fists
mov
dec
iret
jmp
dec
ja
cmpsb
aam
sti
adc
out
and
add
add
mov
cs
mov
push
inc
mov
cli
clc
push
js
scas
lret
aad
pop
lods
push
pop
repz
mov
mov
mov
dec
and
rcrb
push
mov
je
jp
jns
xchg
test
sbb
and
rcrb
xchg
adc
imul
adc
fisttps
dec
notb
enter
and
pop
and
pop
pop
cli
jns
je
add
xchg
fadd
cmp
and
cmp
mov
test
stos
ret
mov
mov
imul
in
add
outsl
testl
xor
mov
xor
cmc
test
adc
es
xlat
dec
jbe
mov
cmp
stc
pop
mov
test
jns
je
add
sbb
ja
enter
jns
movsb
je
push
cld
xor
test
imul
fstps
mov
push
bound
lods
push
ss
adc
adc
dec
mov
sub
xchg
sub
or
ja
rolb
or
cltd
cld
addl
in
sti
add
sbb
cmp
xor
jo
cmp
inc
lret
and
lcall
mov
push
leave
hlt
pop
lds
or
es
out
sahf
mov
inc
popf
xchg
es
cmp
adc
cwtl
gs
out
jmp
xchg
testb
lods
lahf
pop
out
addb
push
pop
or
leave
pop
mov
push
push
xlat
xor
shrl
xchg
push
ljmp
mov
into
pcmpeqb
mov
and
imull
outsl
jne
in
pop
jns
jg
mov
jbe
out
jp
pusha
xor
or
mov
icebp
inc
les
scas
mov
add
shrl
loopne
mov
cmp
fistps
xor
lret
sbb
ljmp
addl
xchg
inc
inc
lret
enter
loope
cmp
and
dec
mov
cmp
lds
jp
sbb
addr16
push
jb
inc
push
ret
out
lret
loopne
movl
mov
and
flds
push
ja
test
test
mov
jp
stc
loop
cmp
scas
mov
jg
mov
adc
cmp
or
outsb
enter
mov
push
lea
mov
and
xlat
arpl
or
scas
mov
cmpsl
jmp
adc
xor
int
in
test
jmp
lods
roll
lea
xor
sub
xchg
sub
loope
icebp
sbb
mov
inc
fsubrl
int3
sbb
push
hlt
test
and
lock
imul
jmp
pop
shl
pop
sub
in
adc
mov
or
and
sub
push
push
les
mov
ss
je
sahf
or
cmp
shlb
sub
insb
and
pop
mov
inc
arpl
in
iret
outsb
and
pop
pusha
inc
scas
or
loope
les
popf
leave
in
dec
stos
mov
cmp
hlt
xor
push
out
ss
inc
in
push
enter
das
inc
lret
xor
into
xchg
inc
cs
xor
mov
pushf
pop
cmp
dec
jle
jp
pushf
fucomi
jle
outsb
insl
popf
push
mov
mov
cmp
xchg
gs
push
pop
xchg
ror
jae
sub
pop
sub
out
push
or
aas
inc
enter
dec
cmpsl
and
dec
ljmp
in
aad
sub
mov
das
xlat
sub
push
inc
lahf
into
test
outsl
add
decb
mov
mov
mov
xchg
pop
ficoml
mov
mov
movntq
pushf
orb
int3
shrd
jbe
add
jecxz
dec
inc
lret
inc
or
js
cld
mov
or
adc
and
into
pop
cmc
add
jle
xchg
mov
sub
mov
and
push
testb
dec
jl
mov
fstp
mov
movsb
fstl
mov
lods
lret
adcl
ret
call
lahf
and
ret
and
enter
cli
outsb
inc
enter
mov
pop
dec
rcll
jge
mov
bndldx
xor
push
inc
in
sub
mov
push
ret
ret
fsts
adc
jae
cltd
inc
stos
gs
xor
mov
or
or
dec
adc
js
arpl
adc
pop
insl
imul
pop
cli
and
icebp
dec
xchg
movntq
add
sti
adcb
and
adc
movsl
push
std
fnstenv
jnp
push
inc
push
stos
mov
out
out
xchg
jns
cmpsl
mov
aaa
aas
dec
dec
stos
inc
and
dec
sub
dec
pop
jns
sbb
in
test
pop
rcrl
or
fsubl
xor
sub
xorl
aaa
pop
add
fldcw
inc
ss
sub
out
inc
lahf
and
int
sub
ss
xchg
std
rclb
jne
mov
outsl
js
inc
pusha
aad
mov
mov
in
ret
sbb
mov
xchg
adc
jbe
fcoms
shlb
enter
xchg
je
push
mov
cltd
or
insl
lahf
xchg
imul
cld
cmc
ljmp
add
mov
xchg
movsl
icebp
cmp
popf
inc
roll
lcall
adc
fst
fisubrs
dec
cmc
movsb
xor
clc
mov
mov
xlat
testb
aad
les
jno
jg
out
and
sub
ss
ljmp
mov
lret
icebp
push
cmpsb
xchg
mov
ds
pop
cmpb
dec
ret
pop
xor
mov
insl
je
push
mov
xor
jg
ror
xchg
loope
ret
fildll
mov
lret
fbstp
int
inc
ss
mov
inc
mov
aad
pop
jo
add
or
xor
leave
out
clc
lret
cmp
jo
push
test
movsl
jno
xor
pop
mov
fisttps
imul
rcll
or
outsb
popa
outsb
out
clc
mov
ljmp
fldt
rorl
cwtl
arpl
push
push
jo
clc
jle
dec
xchg
cmpsl
mov
inc
fdivrp
gs
and
dec
xchg
fucom
rclb
and
sub
pop
jnp
lret
popa
pop
ja
aaa
fcomp
ret
iret
movl
cmp
fucomip
fwait
sbb
subl
aam
mov
push
inc
repz
in
mov
call
mov
ret
adc
adc
inc
in
popa
xchg
pop
pop
enter
push
ret
jae
loope
pushf
in
pusha
mov
je
fcompl
sub
out
movsb
dec
jle
sbb
sahf
sti
insb
or
sbb
push
cwtl
cmp
adc
dec
sub
in
inc
pop
mov
jns
lods
inc
inc
dec
dec
dec
pop
jb
push
xchg
sahf
mov
dec
scas
insl
sbb
ret
add
mov
and
in
inc
xchg
mov
loop
fidivrs
aas
in
pop
aad
pop
out
subl
add
out
jl
in
fimull
xlat
popa
dec
mov
orl
loopne
scas
mov
cmpsl
or
and
pushf
cli
cmp
xor
std
mov
pop
out
add
ljmp
testb
jb
adc
mov
jmp
mov
dec
push
or
jg
or
inc
and
pop
mov
mov
xchg
orb
shl
sbb
push
add
leave
and
hlt
ds
inc
fs
adc
sub
add
xlat
test
sahf
insl
orl
pop
int3
push
int
xor
pusha
pop
icebp
mov
push
sub
shrl
jne
lds
int3
push
fldenv
aaa
lcall
and
pop
std
push
jno
aas
sbb
pop
test
push
add
push
xor
and
pop
std
xor
cmp
fld
push
ret
xorl
pop
jo
out
shll
jp
pop
lods
dec
push
movsl
scas
pop
dec
mov
mov
call
test
fiadds
or
in
dec
mov
xchg
fst
jns
mov
mov
mov
aas
in
cmp
fists
rcrb
sbb
nop
lret
fsubrl
dec
pop
dec
inc
cmp
dec
jo
push
xchg
std
cmpsb
insb
scas
or
movsb
cmp
sbb
mov
nop
mov
movsl
pop
mov
cmc
adc
aaa
lcall
xchg
push
fwait
sub
mov
push
xchg
fmull
addr16
lods
subl
adcl
xor
mov
jl
sub
xchg
cmp
fwait
cmp
push
cmc
loope
mov
pmulhw
dec
in
inc
subl
pop
stos
adc
and
inc
mov
in
push
xchg
push
sar
mov
shll
pop
cmpsl
sub
test
ss
arpl
data16
jae
rorl
mov
out
mov
pop
lcall
ljmp
arpl
jns
or
scas
fldcw
xchg
pop
pop
sbb
sub
fldl
xchg
dec
push
pop
mov
ret
mov
das
jb
adc
sub
les
icebp
add
or
or
insl
test
cmp
pop
cmp
adc
incb
hlt
dec
cmp
and
mov
mov
adc
scas
cmp
stos
cltd
test
pop
scas
fsts
mov
cmp
js
push
icebp
prefetch
jg
dec
or
iret
imul
lret
xchg
sbb
cmpsl
adc
xchg
dec
mov
and
sahf
xor
mov
xchg
aam
and
repz
out
xchg
fcomip
stc
push
mov
inc
cmp
ja
out
test
push
sbb
pause
ja
arpl
addr16
and
cli
popf
mov
cld
mov
ja
popf
mov
sbb
lods
push
lcall
xchg
out
test
cmp
sarl
iret
fcoml
ss
das
loop
jmp
and
pop
div
xor
adc
push
xchg
sahf
adc
xor
stos
push
xor
sub
enter
mov
pop
sbbl
gs
test
dec
sub
and
pop
and
push
gs
push
xlat
push
dec
sub
jge
div
cld
int3
rorb
outsl
fucomp
idivl
outsb
cli
sbb
stc
filds
repz
call
mov
in
sahf
pushf
fidivrs
cmp
or
pop
add
dec
loope
hlt
add
in
test
sub
inc
jecxz
loopne
pushf
mov
pop
adc
neg
sub
test
cmc
repz
popa
mov
rorl
and
stc
rorl
faddl
mov
sahf
dec
es
cmp
movsl
lahf
push
in
sbb
xlat
stc
pusha
push
sbb
in
out
push
movb
mov
add
ja
call
jp
mov
fistpll
mov
and
pop
jo
pop
jae
jne
andl
movsb
rclb
and
add
inc
cli
cmp
jbe
add
les
sbbl
aaa
ficoms
push
cli
sbb
rcrl
cmp
hlt
jnp
ret
mov
loopne
outsb
adc
pop
push
sub
mov
mov
in
inc
cmp
pop
xchg
push
enter
jbe
scas
mov
mov
icebp
test
fmulp
mov
add
inc
push
sahf
dec
xor
push
xor
inc
lret
cmp
in
bound
mov
add
sub
mov
mov
sbb
ret
xor
rolb
jmp
mov
jp
repnz
jp
inc
jmp
and
loop
mov
push
cmpsb
sub
icebp
lcall
je
adc
mov
pusha
xor
pop
lock
xchg
dec
cld
mov
ss
in
movsl
cmp
fnstcw
add
adc
cmpsb
call
xchg
jno
outsb
cltd
lds
xor
not
and
mov
aas
push
aad
out
push
xchg
mov
jl
cmp
sahf
jo
jnp
fwait
pop
lock
jns
imul
popa
xchg
or
mov
sbb
xor
movsl
pushf
cmpsb
adc
cs
xchg
loop
xchg
sbbl
aam
rcll
add
jg
mov
loop
cmp
pop
test
push
cmc
or
shlb
xchg
sbb
cld
cmp
mov
fdivl
fs
bound
pusha
sub
fs
arpl
mov
adc
push
mov
mov
sub
mov
lcall
mov
cltd
jne
shr
and
sub
mov
xchg
mov
add
lret
shll
shlb
sbb
sarl
push
cmp
cwtl
sbb
pushf
adc
and
outsl
cmpsb
lahf
add
unpckhps
sbb
adc
out
jne
mov
xchg
lret
hlt
sbbl
lods
adc
or
ja
pop
inc
inc
outsb
icebp
sub
xchg
pop
cmp
pop
rolb
lret
inc
mov
add
dec
push
dec
movsb
jp
loop
jp
test
sbb
hlt
addr16
inc
movsl
xor
pop
ljmp
sbb
mov
loop
and
fwait
shr
sbb
jae
xorb
out
mov
mov
clc
fwait
scas
je
jne
add
add
enter
jmp
fsubrl
mov
pop
inc
jae
or
mov
inc
inc
cli
insl
add
test
rcrb
nop
in
mov
xchg
repz
addr16
jl
out
push
stos
in
js
loop
js
aaa
insb
in
jns
xchg
xchg
cmc
add
pushf
movsb
xchg
cli
arpl
xor
fwait
negl
pop
mov
pusha
jl
push
pop
leave
shlb
push
or
repnz
in
xchg
mov
xor
das
rclb
out
jns
and
leave
cmpsl
adc
les
jae
outsl
aaa
pushf
xor
enter
aam
xor
bound
or
fwait
test
movsb
sub
jle
push
aam
push
add
call
hlt
cmp
adc
mov
outsl
inc
cli
add
in
int
sbb
scas
in
in
aad
inc
xor
jp
inc
cmp
test
in
out
stc
and
fxch
es
dec
pop
and
mov
pop
xchg
dec
lods
outsl
movsb
hlt
fst
ret
lock
mov
pop
js
out
pop
jns
in
mov
pop
xchg
jbe
jae
sbbl
adc
shll
imul
fwait
fwait
mov
and
xchg
jns
sbb
xor
inc
jecxz
jle
cmp
dec
notl
test
lods
ja
push
pop
les
mov
mov
xchg
sbb
and
jle
fsubrs
cmpsb
aam
dec
fcmovb
push
les
xor
lock
mov
int3
jns
xor
gs
pop
push
cld
inc
int
mov
or
bound
inc
sub
lcall
mov
mov
pop
jle
push
push
test
dec
cmpl
scas
xor
lret
pop
scas
xchg
xchg
inc
push
mov
adc
leave
scas
bnd
adcl
incb
dec
jg
inc
in
out
push
sub
and
push
std
sti
arpl
insb
and
jl
push
pop
ja
data16
and
pop
pop
xchg
jle
cltd
xchg
cwtl
pop
and
movsl
pop
mov
lahf
bound
aaa
test
leave
into
push
xor
add
add
jbe
and
xchg
popf
mov
imul
mov
cmp
mov
sbb
add
mov
dec
inc
outsw
jo
fldl
and
mov
xor
adcl
aas
adc
inc
daa
or
les
rcll
daa
sbb
or
lea
or
jnp
cmpsb
jns
inc
and
xor
and
xchg
xchg
ret
test
xchg
je
pop
cmpsl
in
dec
mov
call
enter
inc
bound
dec
mov
mov
aad
lcall
rclb
popl
jg
mov
mov
mov
inc
jge
jp
dec
ljmp
or
mov
jecxz
sub
jecxz
enter
mov
push
and
test
xor
sbb
add
js
sub
push
lcall
rcll
roll
mov
mov
popa
repnz
sub
sbb
xchg
imul
aam
ret
jno
jae
pop
fs
mov
cmp
loop
cmp
or
push
jne
jb
mov
pusha
sbb
jge
mov
int
mov
xlat
or
push
sbb
and
push
xchg
inc
movsb
push
sbb
popl
test
push
outsb
dec
and
pop
push
adc
lds
jp
push
iret
jbe
jb
fildll
into
push
cmp
cmovb
inc
sbb
and
js
stos
mov
sub
popa
in
dec
cmp
lcall
xchg
sbb
stos
inc
sub
insb
outsl
sbb
sbb
test
sbb
adc
inc
stos
sbb
cs
and
jns
mov
fs
pop
ja
rcll
jne
dec
mov
mov
leave
fdivs
loope
add
xor
mov
mov
sbb
hlt
les
sbb
and
dec
cs
or
jnp
lods
inc
cmp
inc
push
cmp
ret
mov
jl
shll
ficomps
loopne
fnsave
mul
mov
es
dec
inc
jecxz
lods
dec
adc
xchg
inc
xchg
dec
repz
add
mov
and
xor
and
in
enter
arpl
pop
fwait
data16
push
xor
sub
ret
jae
xor
mov
jmp
cli
pop
lods
lods
xor
xor
pop
movsb
inc
pop
les
cmp
sub
mov
call
stos
jb
mov
or
fwait
repnz
mov
pop
mov
cs
shl
push
push
pop
sahf
jb
test
fistl
pop
in
mov
mov
inc
mov
fwait
movsb
xchg
jle
rcrb
outsl
insl
scas
mov
jnp
scas
outsl
jne
pop
daa
aaa
pop
lods
gs
adc
pop
jg
ja
sbb
aad
repz
mov
xor
popf
dec
xor
repnz
sub
je
push
sbb
int
loope
xor
sbb
leave
mov
jnp
adc
dec
mov
addr16
ffreep
sub
and
insl
adc
data16
shrb
hlt
cmp
sbb
pop
pop
pop
nop
mov
ret
mov
scas
arpl
jle
mov
cld
repz
pop
test
xor
inc
fdivl
inc
lret
jge
cmp
in
sbb
sbb
repz
repz
gs
push
mov
pusha
clc
add
cli
adc
iret
les
push
add
pop
sbb
orl
push
cmc
jge
mov
lods
xor
movsl
jno
js
out
pop
mov
mov
push
lea
add
test
mov
add
mov
push
sub
movsb
repnz
cld
or
dec
dec
orb
xchg
cmc
stos
mov
out
ja
sub
dec
gs
xor
xlat
mov
mov
adc
dec
loope
aaa
int3
icebp
mov
mov
ds
or
andl
push
sbb
push
xlat
push
push
xchg
leave
insl
sbb
push
rcl
sbbl
xor
loope
push
rol
xor
mov
push
dec
mov
pop
xor
mov
jl
fdivr
popl
sub
push
sbb
cli
ja
push
sub
dec
sub
or
arpl
sbb
or
out
cltd
in
mov
mov
pop
push
adc
cmp
pop
adc
insb
cmpl
cmp
add
loop
xchg
mov
out
inc
sbbb
lods
push
fdiv
scas
mov
fdivl
jae
adc
data16
cmp
je
out
sbb
popf
jg
jp
shl
in
jo
or
pop
mov
dec
push
and
fldcw
int3
sub
xchg
add
mov
dec
mov
push
cli
sub
negb
push
xor
xlat
ljmp
mov
cmp
jns
outsb
sbb
sub
adc
shlb
lahf
inc
jmp
mov
push
cld
jns
add
insb
int3
jns
jnp
inc
mov
lds
in
repz
xor
cltd
xor
add
jo
dec
xor
add
std
pop
fiaddl
mov
and
repnz
add
fistl
mov
adc
inc
jge
xor
ljmp
loope
outsl
xchg
and
jbe
cmp
int3
leave
enter
mov
scas
ret
xchg
jnp
mov
jnp
mov
pusha
mov
ror
insl
loop
clc
pusha
rorb
test
fsubrl
rcr
call
push
icebp
loopne
popa
mov
adc
mov
cmc
fdivrs
test
loope
ljmp
movsl
xchg
and
mov
push
jbe
xor
addr16
adc
and
loopne
push
scas
cmp
stos
outsl
stos
repz
in
adc
cmp
and
add
push
or
sub
adc
sbb
outsl
jne
xchg
xlat
pushl
mov
ja
mov
pop
mov
hlt
mov
mov
push
dec
int3
mov
cmp
test
push
mov
or
xor
mov
mov
in
aaa
inc
repz
iret
imul
cmpb
add
jmp
jge
jecxz
lods
jne
shrb
andb
orl
jge
mov
iret
jmp
dec
iret
inc
xchg
ljmp
jns
stos
clc
pop
or
mov
mov
push
xor
in
or
sarb
dec
repnz
cmp
xchg
and
and
sub
pusha
dec
xchg
jbe
sbb
fidivrs
push
jae
cmp
mov
sbb
gs
ret
xor
jns
hlt
add
insl
cmpl
jg
adc
lcall
jmp
inc
test
popf
inc
xchg
pop
adc
int
lret
mov
push
push
sbb
pusha
inc
icebp
inc
mov
jmp
cld
inc
push
mov
stc
iret
lods
xchg
mov
dec
lahf
cmp
add
mov
adc
lea
or
jl
lea
xchg
test
adc
adc
push
and
mov
stc
push
push
pop
pop
mov
mov
stos
dec
xor
test
imul
pop
adc
xor
mov
fsub
xlat
mov
sbb
out
in
push
jmp
subl
outsb
xorl
inc
shll
xchg
pop
sub
clc
jbe
fistps
into
pusha
nop
jne
jae
imul
int3
movsl
xor
outsl
mov
insl
mov
or
cmp
popa
cld
mov
or
int
sbb
jge
inc
push
pop
fisubrs
adc
pop
les
push
xor
jp
mov
pop
sub
add
cmpsb
push
pop
xor
sbb
aad
mov
inc
cwtl
inc
es
jo
loopne
ss
xchg
push
pop
fs
loop
and
mov
mov
sbb
enter
inc
push
xor
xlat
mov
adc
pop
xor
loopne
leave
cwtl
xchg
or
push
sub
sbb
test
test
mov
imul
fstl
sbb
lcall
sub
push
popf
lret
adc
mov
je
cmp
mov
cmpsb
push
fwait
adc
subl
jae
mov
imul
mov
fwait
xchg
repz
mov
pop
int3
sub
add
pop
ss
in
push
fldl
mov
stos
cld
push
dec
vmovdqu
aas
repnz
inc
ss
stos
xor
mov
fstpt
cmp
cmpb
and
daa
xlat
jmp
aam
push
outsb
push
dec
xlat
test
pop
mov
scas
roll
dec
mov
lea
or
jne
inc
cmp
rorb
ficoms
add
push
jne
pushf
mov
lret
andl
pop
out
and
cmp
jno
pop
enter
sbb
jnp
pop
sub
add
cmp
arpl
xor
sub
jmp
adcl
test
xor
outsl
imul
popl
or
cli
idivb
cmpsb
sbb
inc
cmp
stos
ds
rorl
cmp
cmp
outsl
push
loope
mov
dec
pop
mov
ret
mov
jmp
add
neg
mov
xchg
lret
xchg
test
movsl
xor
xchg
xchg
flds
sbb
nop
sbb
rorl
rcr
movsb
mov
add
mov
idivb
dec
dec
test
les
dec
dec
xor
mov
mov
jg
mov
or
ljmp
jg
in
ss
mov
ret
in
test
aas
imull
std
mov
icebp
repnz
xor
inc
out
in
push
movsl
or
pushf
negb
in
cmp
ja
test
insb
mov
adc
xor
aaa
imul
ja
mov
mov
outsl
inc
leave
clc
dec
loopne
inc
pop
add
cmpsl
push
and
fisttps
dec
fs
das
lret
sti
mov
or
imul
dec
icebp
mov
or
movsl
inc
lea
loope
mov
inc
xchg
push
iret
ds
shr
test
inc
mov
cld
sbbl
jmp
adc
or
mov
cwtl
adc
fcmovb
and
cmpsb
lods
cld
sub
fldenv
cmpsl
xor
and
mov
mov
jne
shrl
repz
outsl
into
or
sti
imul
repz
lea
adc
inc
sarb
pop
std
pop
mov
mov
sbb
ret
test
sub
repnz
mov
mov
sbb
cld
jno
fcos
sub
imul
idivb
shll
inc
pushf
in
std
rolb
ljmp
jp
xchg
and
dec
iret
loopne
lret
inc
bound
fbld
mov
xlat
cmc
insb
dec
cmp
test
popa
aaa
ret
lcall
xchg
xchg
mov
xchg
inc
pop
popa
aam
inc
insl
outsl
mov
lods
sbb
pop
and
push
outsb
cmp
outsb
roll
mov
add
push
jge
push
lret
addb
mov
mov
nop
sti
rcll
rorl
xor
ret
test
jne
lods
ss
lods
cmp
nop
mov
lret
xor
dec
mov
cmpl
lods
repz
mov
jl
push
jl
cmc
inc
outsl
jle
iret
mov
jnp
sahf
out
xor
pop
sub
roll
ja
xor
ljmp
lds
sub
dec
pop
jae
cmp
gs
mov
and
cmp
inc
cmp
inc
pop
daa
loop
notb
mov
je
sbb
fstps
shlb
mov
loopne
mov
sbb
out
lahf
ss
jecxz
inc
lahf
fmull
outsb
mov
je
jecxz
aaa
rol
div
cmp
rcr
jno
push
push
sub
dec
sbb
add
sbb
xchg
cmp
hlt
sub
popf
loopne
into
cmp
adc
xor
mov
sbb
jg
lods
adc
xchg
js
aaa
imul
jno
fwait
pop
shrl
icebp
jnp
xlat
sti
fwait
aas
das
xlat
stc
pop
hlt
fwait
push
push
jle
lods
cmc
jne
and
incb
jns
ret
xchg
mov
push
jecxz
push
mov
cmp
mov
dec
fidivrl
add
loope
xchg
leave
dec
pop
pop
and
mov
or
repnz
mov
inc
xor
test
sti
fistpll
je
mov
ds
pop
sbb
aam
shlb
add
popl
js
aaa
in
sbb
cmp
fsubs
mov
jmp
ja
js
xchg
in
sti
cli
fs
cmp
mov
out
hlt
js
std
mov
in
test
pop
push
shlb
aaa
dec
pop
sbb
addb
or
xchg
push
loope
icebp
push
fwait
mov
clc
lcall
sbb
dec
in
mov
std
push
mov
aam
sub
daa
and
lea
mov
sbb
ret
mov
in
xchg
mov
outsl
dec
jns
int
popa
mov
lods
popf
mov
pop
pop
xor
pop
loope
mov
pop
imul
sbb
or
push
pop
or
fwait
mov
jecxz
lds
adc
push
loope
inc
mov
js
enter
insb
sub
movsl
sbb
mov
notb
cli
pop
movsb
rclb
out
movsl
adc
pop
loope
out
mov
mov
cltd
inc
dec
shll
and
arpl
addb
push
or
add
xor
test
push
mov
or
cltd
inc
pop
or
adc
inc
repnz
fwait
mov
fwait
stos
mov
sbb
js
pop
inc
arpl
addr16
jne
sub
les
in
cmc
mov
xor
stos
adcl
sub
mov
jle
mov
and
fidivl
mov
inc
pusha
push
cmp
cli
je
mov
jno
push
push
fdivrl
push
mov
push
cmp
sbb
ja
gs
sbb
jle
aad
pop
pop
clc
cmp
inc
xchg
inc
out
mov
mov
mov
stos
push
mov
divb
mov
sub
mov
xor
mov
or
fsubrp
push
xchg
cs
call
stos
push
fcomps
test
leave
and
adc
pop
scas
sbb
jp
mov
push
or
push
ja
dec
ret
sbb
repnz
movsb
inc
jae
sahf
in
xor
je
orl
subb
mov
out
popa
test
arpl
lcall
subb
mov
mov
outsl
seta
or
pusha
push
out
lea
jl
out
imul
in
ds
xchg
mov
aam
fdivl
push
pop
xchg
fdivl
sbb
mov
imul
sub
dec
fidivs
test
mov
bound
fistps
pusha
dec
mov
test
dec
sub
push
nop
xchg
shlb
in
and
call
pop
js
jae
jle
jnp
je
and
mov
xchg
dec
int3
sub
ret
cmp
jecxz
icebp
sbb
das
shlb
cmp
jmp
or
lock
push
les
xorb
cltd
into
inc
mov
stc
sub
lea
aaa
fbstp
icebp
sbb
inc
cmp
adc
into
cmpxchg
dec
adc
lods
push
add
insb
pusha
nop
and
push
shl
inc
fildll
or
mov
inc
cmpsb
push
test
mul
push
mov
pusha
nop
testb
fwait
add
mov
mov
loopne
push
push
mov
popf
mov
icebp
add
push
movsl
inc
or
aam
fsubrl
push
test
sub
and
bound
push
xchg
xlat
add
fucomip
addb
push
test
jb
push
and
inc
push
lods
rcrb
test
push
or
mov
mov
call
adc
jmp
popa
mov
mov
or
and
add
xchg
inc
sbb
or
and
or
sub
int3
or
pop
push
pop
aam
mov
test
xor
stos
or
filds
mov
and
ss
movups
pop
cltd
or
test
mov
sub
cmp
jge
rolb
mov
push
fcomps
dec
stos
leave
sub
jns
or
xchg
xchg
sub
sub
ss
dec
mov
dec
scas
ret
ror
rolb
and
rorb
or
fcmovnbe
popa
push
mov
lret
dec
out
mov
enter
lods
mov
mov
dec
adc
out
pop
sbb
inc
out
test
adc
jno
mov
push
push
adc
lods
pop
xchg
xor
lcall
pop
inc
cmp
mov
shll
mov
inc
adc
out
adc
mov
ficompl
addb
sub
adc
lret
adc
stos
add
adc
pop
insl
xchg
sub
jne
add
jno
xor
mov
push
xor
xlat
fdivr
iret
add
data16
lahf
adc
lock
mov
ret
xor
popl
add
test
je
fwait
outsb
xchg
inc
jns
mov
dec
jns
std
nop
insb
push
mov
into
ljmp
out
shr
cmp
negl
xchg
fwait
mov
adc
stos
add
inc
fwait
js
daa
jecxz
icebp
rolb
les
enter
mov
cmpsb
jecxz
lahf
loop
ja
out
addr16
fdivl
movsl
adc
xchg
in
lret
or
or
test
pop
dec
js
imul
inc
and
les
jl
xchg
inc
or
push
test
sub
test
xor
popa
fbstp
sub
inc
fisttps
out
inc
dec
pop
mov
aas
mov
in
cmp
pusha
jmp
pop
rolb
inc
leave
push
lcall
jl
jo
fists
push
hlt
or
idiv
daa
xor
lds
popa
daa
imul
std
push
aam
mov
mov
fldcw
mov
shlb
outsl
mov
mov
sub
adc
fwait
push
cmp
cmp
mov
push
xchg
sub
stc
xor
js
pusha
mov
repz
pop
js
out
pop
jns
in
push
xchg
imul
fstps
fisubrl
sub
sub
jae
push
push
sti
sub
negb
push
rep
cmp
sub
or
inc
movb
or
xor
mov
clc
pusha
lock
pop
mov
test
dec
mov
imul
mov
test
lds
sbb
mov
xchg
jns
dec
xchg
xor
incl
jl
ret
xchg
mov
jl
fildl
cmpsl
inc
add
rcrb
pop
imul
adc
and
mov
pop
push
jnp
cmp
jns
pop
int3
comiss
xchg
shll
jbe
insb
dec
inc
aad
jmp
jecxz
add
lret
adc
inc
push
dec
popf
js
push
mov
xchg
dec
pusha
sub
dec
sarl
lret
xor
xor
fcoms
mov
stos
aam
xchg
iret
cmp
pop
negb
cli
mov
les
sbb
adc
out
lock
xlat
add
pop
stc
leave
hlt
cli
xor
lcall
jecxz
test
dec
enter
fwait
mov
mov
test
js
notl
rorb
mov
out
push
ds
xchg
sarb
js
cld
dec
prefetch
xor
in
dec
filds
outsb
mov
js
fisubrs
cmp
outsb
mov
mov
mov
int
fbld
push
jne
and
lock
out
adc
clc
add
and
leave
stc
lcall
push
xchg
dec
add
cmpsb
outsl
pushaw
mov
lret
out
lret
lcall
roll
repz
cld
mov
stc
sbb
xor
call
in
imul
dec
bound
mov
xor
outsb
mov
inc
sub
sub
add
push
fidivrl
cmp
jmp
jp
test
inc
mov
push
adc
ret
aas
scas
mov
cmp
jg
aaa
dec
ss
gs
arpl
out
mov
fdivrs
sub
movswl
jge
loope
cwtl
pop
jp
cmp
push
aad
test
test
push
push
push
mov
and
xchg
mov
imull
mov
scas
xchg
int
add
cmp
stos
fistps
jno
push
mov
sbb
and
mov
push
sub
into
cli
xchg
pop
rolb
cmp
push
jb
fildll
cltd
mov
arpl
push
cwtl
int
and
xchg
fldt
clc
aaa
fdivrs
jbe
in
fwait
cwtl
cmp
mov
daa
shl
add
mov
adcl
mov
aam
sahf
cmp
or
cmp
aam
fldt
inc
mov
imul
bsr
sti
jo
cmp
pop
fcoml
and
adc
out
xchg
enter
or
dec
mov
in
jbe
lea
xor
repnz
inc
cmc
sub
lds
fcomi
ret
pop
test
fiaddl
clc
push
imul
adc
add
add
pop
add
lds
pop
add
add
pop
add
cld
push
and
adc
push
and
lret
mov
xchg
js
rcr
jle
pusha
xchg
enter
or
sub
fidivrs
in
daa
mov
adc
inc
mov
outsl
into
add
mov
sar
jne
fbstp
fnstenv
xchg
test
lahf
mov
pop
sbb
inc
mov
fs
mov
std
not
fildll
push
sbb
mov
jne
mov
add
xchg
mov
loope
mov
push
inc
clc
call
ficoml
pop
push
xorb
mov
incl
adc
mov
xchg
into
pop
lods
ret
sub
sbb
jp
push
pop
mov
xor
addl
aam
pop
xor
cmp
popa
jno
sbb
sbb
sub
add
dec
inc
sub
and
scas
mov
mov
xor
es
ja
bound
mov
cld
insb
sbb
xchg
ss
stos
and
and
xchg
add
mov
add
mov
clc
cmp
lods
aaa
cwtl
push
jecxz
cs
repnz
loope
push
mov
enter
cmc
fwait
shll
jp
mov
cmp
popf
test
mov
or
out
pop
xor
std
loope
and
sbb
cs
mov
mov
or
out
inc
push
xchg
cmp
das
popa
mov
std
pop
jbe
std
adc
sbb
adc
stos
insl
jge
mov
mov
movsb
rcrl
or
jl
int
popf
adc
xchg
popf
xor
pop
popf
pop
stc
mov
mov
das
sub
add
mov
cmp
cmp
inc
add
rclb
mov
add
xchg
push
cwtl
cmp
movsl
dec
pop
flds
and
cmc
in
mov
testl
jb
jl
push
or
pop
aad
clc
mov
es
sbb
loope
mov
in
aam
pop
cmp
dec
add
xchg
aaa
orl
mov
sbb
cmp
ret
mov
je
mov
imul
mov
andl
or
mov
out
jbe
stc
sahf
imul
lock
xchg
cmp
outsl
aas
cltd
out
shl
mov
cwtl
mov
cwtl
mov
inc
int
mov
mov
pusha
cmp
push
xchg
dec
jge
inc
aaa
fs
shrb
sub
pop
adc
fcoml
mov
xor
pop
arpl
xor
mov
mov
fisttpll
xlat
clc
add
bound
inc
push
adc
ss
subb
pop
jo
sahf
cwtl
es
xchg
cmp
xor
cs
cmp
mov
xor
stos
pop
pop
xor
xor
pop
cmp
jg
idiv
sbb
cmpsb
into
cmp
cmpsl
divb
cwtl
cwtl
mov
push
fistpll
cld
fcoml
sub
dec
mov
stc
decb
lea
jns
or
call
dec
sahf
popa
ret
adc
cmp
push
or
inc
test
into
xor
jmp
add
mov
out
insb
mov
aam
lods
nop
and
xchg
and
inc
call
mov
mov
arpl
sbb
pop
add
fstl
fstpl
add
lds
mov
test
test
xor
loope
stos
daa
adc
cmp
ffreep
cltd
stos
sbb
adc
cmp
push
fs
mov
mov
push
add
mov
sbb
sub
movsb
adc
cs
pushf
ret
ret
fwait
dec
inc
cmp
imul
adcb
fldcw
mov
inc
xchg
inc
mov
nop
stos
fadds
test
or
insb
xchg
inc
jp
xchg
inc
or
in
or
call
sbb
pop
test
mov
pop
mov
inc
out
mov
sbb
ja
cmp
iret
rorl
pop
addr16
mov
mull
clc
test
cmpsb
orb
add
mov
popf
push
addr16
xchg
dec
jo
jl
dec
mov
frstor
jge
stos
sub
out
cmp
pop
sub
sbb
cld
sbb
andl
cs
fwait
aad
rclb
jb
movsb
sbb
jle
jg
lret
cmc
cmc
and
mov
mov
or
xor
and
xorl
jmp
jl
scas
push
xchg
mov
fcomps
sub
mov
pop
mov
inc
mov
insl
fistl
fmull
das
sarb
fisubrs
push
mov
cltd
and
jl
mov
xor
adc
inc
adc
int3
mov
cs
das
test
mov
mov
cld
inc
in
mov
test
inc
pop
scas
jno
leave
or
cmp
das
cmp
std
add
sbb
add
pop
bound
ja
pop
or
mov
pop
cmpsl
or
and
iret
fcoms
mov
sbb
inc
xchg
xchg
and
loop
xchg
popf
jno
mov
out
rolb
cwtl
aad
test
jbe
push
sbb
and
add
jb
and
cwtl
jne
and
fcmovnu
or
fs
jno
mov
xchg
adc
hlt
fcomps
ret
pushf
sbb
fs
jo
mov
insl
insb
cs
mov
sub
jae
lods
pushf
ret
sub
insb
dec
aaa
fwait
sbb
repz
fs
inc
add
push
mov
xchg
xchg
mov
idiv
adc
mov
ret
xchg
xorl
mov
add
add
leave
adcb
pop
rol
cli
jp
movsb
lahf
sub
or
testl
mov
ljmp
fsubs
cld
sbb
xchg
pop
test
jge
dec
lcall
dec
dec
lcall
jg
cmpsb
int
repnz
out
es
ficoms
dec
mov
je
dec
pusha
push
push
lods
repz
xchg
bts
jo
std
shl
aam
cmpsb
push
insb
adc
mov
mov
out
adcb
enter
sbbl
jno
adc
mov
rorl
push
test
addl
sub
inc
int3
out
add
mov
add
add
clc
jns
arpl
or
fcomip
shll
lahf
adc
and
jmp
js
sbb
adc
mov
xor
mov
jbe
push
fwait
push
mov
les
sbb
and
lock
in
xchg
jp
mov
out
into
sub
pop
add
or
negb
scas
inc
pop
jne
enter
jne
cmp
aam
xchg
adc
fmuls
mov
cwtl
aam
std
jnp
cmp
pop
sbbb
sbb
scas
inc
cmp
out
add
lods
mov
inc
pop
aaa
or
lret
call
shll
cwtl
ja
dec
data16
jg
aam
adc
jle
int
cmp
test
mov
pop
push
pop
fwait
adc
jnp
cwtl
jmp
push
sub
mov
movsl
and
pop
jge
fldcw
pop
mov
mov
jne
and
mov
ret
mov
les
int
scas
adc
fwait
ljmp
adc
call
push
jbe
fdivl
xchg
pop
cmp
ja
mov
jae
call
xchg
cmp
cmpsl
ds
cmp
cli
mov
mov
pop
cltd
neg
mov
sub
sar
mov
mov
xchg
jle
in
cmc
jge
cmp
lahf
mov
lds
mov
or
xor
jp
pop
clc
jmp
nop
mov
lods
shll
fstpt
ds
les
sub
es
movsb
stc
push
jl,pn
and
jmp
rcll
arpl
ss
jnp
insb
mov
inc
andb
addr16
dec
cmpsl
es
push
leave
andl
movl
lret
jo
or
inc
add
and
push
aam
insl
icebp
mov
addr16
mov
sbb
imul
pminub
mov
pop
rorl
lret
xor
inc
int3
jle
mov
dec
jg
mov
sahf
mov
pop
pushf
xor
in
jmp
es
rcl
fwait
xchg
dec
jne
sub
shl
mov
loope
jo
iret
lcall
inc
adc
out
loop
test
pop
lea
xor
pop
push
sbb
rorl
lds
test
push
xchg
cltd
mov
enter
cli
in
adc
mov
sub
mov
scas
in
add
fsubrl
in
or
sub
cld
sbb
andb
icebp
mov
and
ss
xlat
xchg
mov
mov
push
pop
pop
pop
mull
shll
and
mov
frstor
pop
xchg
subl
ljmp
mov
jecxz
shrb
adc
jge
neg
ret
mov
test
or
in
mov
mov
cmp
das
test
sub
aaa
repnz
pop
mov
sbb
mov
orl
mov
rolb
jne
out
imul
mov
loope
push
and
dec
push
jbe
cmpl
scas
mov
movsb
pop
dec
push
or
loop
fcomps
mov
mov
cwtl
dec
out
push
inc
mov
mov
aaa
pop
pop
sub
ds
mov
mov
lock
cmp
gs
push
push
jno
push
shll
shll
lods
stos
jmp
xchg
inc
sbb
sub
push
addl
xchg
jl
rcr
syscall
add
sub
repnz
and
mov
loopne
loope
ficoml
inc
mov
mov
int3
sbb
insl
sahf
sahf
mov
in
add
cmp
fwait
adc
mov
addr16
leave
orl
push
repnz
call
popf
mov
loope
subb
sarl
inc
movsl
add
sbb
mov
push
ror
jle
int
push
inc
cmp
push
cmc
inc
insb
loop
xchg
jmp
andl
ds
jmp
or
and
lea
or
sahf
add
jns
sub
sbbb
test
lods
call
mov
xchg
xor
jo
mov
inc
jne
push
pop
andps
cwtl
cmp
test
inc
xor
cli
mov
ffree
mov
and
stos
in
adc
fs
pop
jge
int3
cmp
push
in
xchg
outsl
scas
mov
jnp
push
mov
ss
pop
in
popf
lcall
pop
jecxz
pop
xor
cmp
sti
sub
sti
add
and
sub
pop
insb
pop
shrl
push
cbtw
cmp
aaa
les
das
dec
mov
addl
mov
xchg
mov
call
call
push
dec
cmp
aam
jle
orb
ljmp
sarb
adc
mov
imul
dec
pop
lock
or
sub
push
inc
repz
add
sbb
add
sub
push
cmpb
jle
adc
cmpsb
cld
std
mov
ret
bound
push
jmp
jno
mov
or
icebp
icebp
outsb
inc
jno
add
in
push
sbb
cmp
jb
fidivl
in
and
add
ss
int3
ljmp
mov
xchg
call
int3
pop
pusha
jbe
shufps
add
inc
mov
mov
bound
scas
jo
cwtl
dec
mov
popf
ret
inc
mov
mov
addr16
xor
imul
cwtl
into
or
movsb
cmp
aaa
andl
mov
sti
and
add
andb
push
adc
pop
popa
out
pushf
fistpl
jecxz
adc
pushf
push
mov
cmp
fsubl
mov
pop
push
dec
rcrb
mov
jo
or
mov
out
push
dec
movsb
or
sbb
lea
jae
in
sbb
sahf
mov
sbb
mov
xchg
roll
jb
and
jo
mov
adc
pusha
cltd
and
mov
std
rcpps
inc
xor
mov
jae
add
fs
xlat
loopne
arpl
sbb
inc
cmc
cld
sub
fcoml
mov
dec
xchg
mov
ret
xor
mov
repnz
ds
jns
inc
sub
mov
testl
ss
jbe
dec
es
sub
neg
cmp
jecxz
sbb
or
xor
push
pop
fcom
push
mov
jno
lock
xor
loopne
ret
mov
sbb
mov
push
xchg
ljmp
arpl
xchg
cli
sbb
fucomi
mov
popf
into
fisttps
hlt
inc
cmp
sbb
imul
cmp
stc
xchg
dec
cld
pop
in
ljmp
cmp
add
scas
inc
outsl
subb
sbb
sbb
popa
jge
cmp
mov
loopne
jae
adc
and
faddl
pop
adc
mov
dec
push
lds
hlt
loopne
stos
mov
cmp
lret
scas
lds
ret
test
jns
ficoml
shlb
scas
dec
and
xor
clc
add
xchg
mov
jl
fiaddl
jo
mov
pop
jmp
lds
aam
add
mov
mov
mov
test
lahf
inc
stos
xorl
mov
sub
fmuls
push
rclb
jmp
stos
testb
jns
mov
inc
jae
fcomps
xchg
mov
dec
fdivrs
aaa
xor
insb
addb
outsb
adc
adc
xchg
add
push
xchg
fstp
adc
push
xchg
mov
test
popa
push
xor
xchg
push
jmp
or
or
rcr
pop
xor
xor
lret
testb
inc
fwait
sub
les
push
mov
and
cmpsb
sub
ror
fdivs
movsl
aad
add
movsl
lret
lcall
mov
inc
test
sbb
xor
jns
lret
or
add
fcmovne
cmp
int3
call
jno
mov
sbb
cmp
mov
or
adc
inc
cmp
add
and
aam
fnstenv
and
sbb
or
cmp
faddp
popa
int3
daa
push
adc
xchg
dec
mov
jno
jo
sbb
xchg
repz
and
pop
into
add
out
fdivrl
adc
loopne
push
punpckhbw
sbb
or
mov
mov
ret
push
in
lret
repz
cmp
idivl
dec
mov
mov
jle
lret
xor
gs
or
add
or
lret
pop
nop
pop
jmp
inc
jbe
imul
rcrb
mov
pop
mov
mov
testl
aas
aaa
data16
inc
sub
mov
fistps
or
adc
lret
inc
movsb
enter
push
and
arpl
dec
mov
addr16
ja
scas
pop
popa
cmp
mov
pop
loopne
xchg
jmp
push
pop
shrb
sahf
sub
pop
outsl
or
add
cmp
sub
lea
cmc
ret
int
adc
xchg
jnp
stc
fwait
or
xor
shrl
add
fadd
or
jno
and
arpl
inc
cmp
lcall
fldt
aad
push
mov
sub
mov
cmp
std
std
out
repz
jae
out
cmc
out
iret
popf
neg
jle
mov
imul
sti
fdivp
push
insl
fistpll
lea
push
int
testb
sub
popa
pop
add
mov
push
ljmp
jle
xlat
addr16
scas
cmp
cmpsl
and
push
pop
lcall
pop
clc
lea
mov
cmp
mov
cltd
sbb
adc
pop
or
and
mov
aam
negb
pop
pop
pushf
pop
shlb
out
popa
mov
insl
mov
roll
mov
and
xor
push
cmp
fnstcw
jnp
mov
ret
cmc
pushf
inc
enter
aad
adc
push
cmp
push
pusha
mov
out
dec
mov
mov
lods
sti
notb
lcall
sub
iret
jb
in
mov
mov
sbb
xchg
adc
cli
outsl
or
sbb
das
fildll
adc
xchg
mov
test
or
arpl
frndint
idivb
xchg
xchg
cltd
cmpsl
fsub
jne
cmp
and
or
mov
add
popf
shlb
cmp
inc
fisubs
imul
stos
pop
sahf
inc
call
pop
stos
call
rcll
push
mov
mov
scas
xor
lds
xchg
stos
mov
adc
and
cmp
dec
push
cmp
insl
sub
fstps
call
aaa
pop
push
jns
mov
jae
repnz
and
fisttps
cmp
push
aas
push
xchg
in
bound
cwtl
shl
es
fs
mov
dec
jl
popf
arpl
sbb
sub
fwait
dec
in
inc
shll
rorl
pop
push
xor
inc
repz
inc
pop
sahf
rorl
push
sbb
pop
je
mov
pop
jg
ss
pushf
jg
xchg
jne
fdivl
mov
lods
jmp
lcall
jmp
pop
iret
mov
je
in
sub
pop
xchg
jb
inc
adc
jne
ds
cmp
dec
lods
sub
lds
cmpsl
dec
push
daa
cmp
shlb
hlt
sbb
add
int3
repz
xor
ret
int
push
iret
ljmp
ret
inc
dec
jno
pop
push
int
daa
repz
icebp
inc
mov
rcl
cmp
xlat
ss
cs
addr16
repnz
ror
jmp
adc
movsb
popa
xor
shlb
adc
cmovne
pop
rcr
fs
ficoml
mov
popf
test
dec
xchg
adc
in
xchg
movsb
xchg
cmp
mov
inc
push
js
mov
xor
mov
mov
xor
add
data16
or
in
inc
mov
loop
adc
dec
or
movsb
add
aam
add
jns
or
in
insl
push
xchg
in
push
adc
pop
imul
cmpsb
popl
mov
mov
repz
mov
fwait
mov
mov
jns
lret
das
hlt
popf
notl
cld
jae
les
cmc
xchg
icebp
inc
insb
adc
mov
lock
hlt
cmp
sbb
mov
iret
leave
inc
je
mov
xlat
jg
ja
negb
add
notl
das
repz
das
imul
pushl
inc
jmp
cmpsb
mov
setno
stos
or
mov
stos
sbb
test
adc
imul
cmp
xchg
push
sbb
lret
test
repz
popf
mov
xor
adc
mov
add
ljmp
and
mov
pushf
ja
and
nop
ss
int3
movsb
adc
out
mov
cld
jecxz
out
iret
sub
addr16
out
jg
aas
sahf
mov
pop
mov
fnstsw
sub
ret
stos
data16
xor
je
jmp
xchg
jg
iret
push
test
jmp
jno
in
xor
mov
mov
inc
lods
call
fistl
and
in
lret
add
xor
push
neg
mov
mov
push
lods
mov
push
mov
and
std
inc
aas
jno
shl
lds
push
movsb
cmp
cmc
adc
iret
test
cmp
pushw
push
jns
mov
das
jbe
inc
aam
movsb
cli
adc
andl
cmp
mov
inc
or
pop
das
cmp
out
into
lods
dec
sti
frstor
jns
in
dec
fs
addr16
in
adc
add
or
es
mov
in
sub
cmpsl
rclb
push
pop
aas
xor
cmp
mov
push
call
mov
out
xor
jecxz
scas
push
or
mov
jno
mov
mov
inc
dec
sarb
mov
jns
repnz
mov
mov
test
push
cmp
popl
movsb
lahf
lea
inc
idiv
mov
jle
outsl
mov
fst
imul
xchg
rcll
rorb
std
jo
xlat
lahf
push
mov
dec
in
ljmp
mov
mov
add
sbb
inc
ljmp
dec
xchg
shl
pop
sub
mov
insl
rcrb
pushl
aam
pushf
jns
cmpsl
shl
cmp
push
call
lds
xchg
jmp
jns
ds
jo
cli
mov
xor
leave
cmpsb
jae
jmp
into
dec
pop
push
std
jbe
pop
and
enter
push
cmp
mov
rolb
out
pop
or
jge
mov
loop
pop
enter
lds
dec
ljmp
movsb
push
mov
sub
pop
and
leave
pushf
mov
adc
mov
xor
inc
add
hlt
or
push
xlat
mov
or
mov
test
scas
adc
cmp
pop
stc
jno
xlat
adc
sub
enter
sbb
cs
loop
test
pand
mov
mov
ret
pusha
and
repnz
outsb
xchg
push
rcr
and
outsl
out
aad
sbb
call
push
in
mov
jbe
es
mov
insb
and
mov
xchg
cwtl
popa
push
xor
into
lahf
faddl
and
in
std
sbb
sti
mov
aaa
ds
mov
mov
fsubrs
enter
cmpsl
faddl
lahf
jbe
sti
dec
mov
dec
dec
push
mov
dec
out
dec
aam
fstps
into
sub
mov
xchg
in
push
push
or
or
aam
cltd
xor
out
aaa
sarb
xchg
mov
sub
xchg
mov
mov
inc
xchg
mov
cmp
int3
fsubs
sub
jle
mov
and
mov
add
repz
rorb
cli
jae
jecxz
mov
stos
cmp
sub
fldl
int3
jbe
insb
pop
mov
decb
lcall
mov
lea
out
push
dec
repz
mov
jmp
inc
pop
jae
cmp
movswl
cmc
aad
in
cmp
loopne
adc
popf
sti
out
fnstsw
fildl
sub
pop
dec
es
ficoms
add
push
pop
and
xor
aam
adc
cmpsb
cs
mov
rcrb
mov
sub
sbbl
sub
pop
dec
lds
jle
adc
mov
mov
mov
cmp
pop
addr16
pop
adc
shlb
sub
pop
movsl
jae
jnp
ret
mov
das
filds
jge
in
xor
sti
leave
arpl
stos
push
sbb
push
loop
test
and
jb
test
fimuls
jp
fwait
mov
jne
bound
daa
stc
cmpsl
mov
sbb
jno
sahf
gs
inc
imul
dec
sbb
ds
add
push
dec
lret
xchg
mov
pop
push
mov
mov
dec
inc
push
sahf
mov
mov
xchg
pushf
adcl
mov
xchg
cmp
pop
xor
ja
add
push
mov
pop
stos
push
adc
cmp
fcmovnbe
sub
pusha
in
std
inc
addb
jne
xchg
loop
repnz
dec
push
xchg
xchg
add
cmpsb
jnp
fwait
stos
sti
hlt
scas
jnp
xor
xor
adc
enter
fisubs
lret
andl
ret
push
dec
fcmovnu
add
jmp
ds
ret
jl
loop
xchg
aam
ficompl
sub
mov
enter
pop
push
enter
int
and
iret
add
jb
test
ds
mov
xor
inc
or
hlt
int
and
loop
or
add
in
jg
fldt
sbb
xchg
xor
mov
push
int3
add
sbb
std
push
roll
enter
pop
dec
lock
outsl
addr16
push
jne
sbb
ss
pushf
dec
cmpsl
cltd
leave
arpl
pusha
insb
mov
outsb
movsl
sub
xor
loopne
adc
call
lods
cmp
xor
test
mov
rcll
inc
jmp
mov
cmp
add
xor
aam
fistpl
dec
movsl
aaa
sub
sub
fdivs
div
das
fstpt
pop
mov
arpl
dec
data16
pop
add
ss
shll
adc
fnsave
adc
xchg
and
stos
sub
shl
stc
call
sahf
cli
xor
jnp
movsl
sub
out
popf
dec
mov
ljmp
movsl
addr16
aaa
mov
jg
stos
mov
aaa
aaa
push
neg
popf
fidivl
inc
cltd
push
mov
cmp
xchg
in
jbe
sub
xor
enter
jb
pop
testl
in
sbb
repz
repnz
push
in
xlat
ja
fildll
outsb
stos
mov
pop
mov
and
fs
ja
pop
cmp
int3
ja
loop
cwtl
js
push
dec
shrb
mov
js
movsl
push
push
add
mov
fwait
int3
lea
cmp
push
mov
mov
fistps
aam
pop
push
xchg
ret
mov
cmp
jmp
push
sti
mov
loopne
and
inc
xchg
jo
cmpsl
sub
push
pop
dec
sub
jne
ffreep
pushf
push
xchg
test
popa
cmpsl
mov
mov
or
inc
mov
pop
xor
adc
sub
mov
ja
jecxz
lods
jno
cltd
pop
fdivs
fmull
xchg
sbb
sbb
jp
mov
clc
mov
fsubrs
hlt
mov
loope
mov
enter
sub
or
adc
test
out
sub
mov
jecxz
dec
shlb
rcrb
mov
aas
add
lahf
iret
mov
add
and
sub
and
test
out
ficompl
sub
add
bnd
in
sarl
cld
push
ret
vmovshdup
lret
xor
add
mov
insb
in
sbb
push
sbb
cld
mov
or
cmp
negl
lret
xchg
jo
daa
mov
popf
mov
fdivrs
movsl
adc
sbb
inc
xor
movsl
adc
das
fldln2
mov
int
xchg
xchg
mov
ror
and
outsl
add
jle
arpl
fsubrs
and
dec
inc
mov
sub
sti
imul
pushf
jnp
xor
mov
cli
sbb
sbb
fwait
mov
stos
insb
insb
ret
add
lret
jb
push
in
pop
aas
sahf
mov
jne
idivl
inc
icebp
jae
in
in
mov
mov
inc
cmp
cs
cmpsb
inc
pop
aas
cmpsb
cld
dec
lahf
scas
call
enter
test
jns
or
cmp
int3
negb
mov
repz
in
stos
dec
scas
leave
fstpl
cld
mov
scas
jl
addr16
cmp
call
mov
ja
fsub
inc
stc
ss
in
popf
push
xor
dec
orb
cld
aad
ret
xchg
jecxz
or
mov
dec
cmp
lods
fistpl
repnz
cltd
test
lahf
push
mov
push
cs
jmp
aam
xchg
sub
int
push
jns
out
lret
and
or
mov
xchg
stos
inc
daa
or
sub
cwtl
sub
hlt
outsl
popfw
inc
int
push
xor
lcall
sti
scas
stc
inc
mov
sbb
jns
push
out
or
mov
cmp
imul
sub
dec
icebp
pop
test
jmp
xor
mov
sub
ss
popa
mov
pop
into
lock
ja
repz
sub
cmp
daa
outsl
push
cmc
xchg
dec
inc
jbe
adc
insl
sbb
inc
adc
out
movsb
push
ja
ret
xor
xchg
push
cli
push
push
or
cltd
outsb
lret
ds
test
stc
outsb
shrl
xchg
std
push
outsl
mov
ljmp
jl
or
cmpsl
shll
sub
fucomip
outsl
fildl
add
xchg
jmp
inc
rcrl
imul
and
fsubr
push
mov
jecxz
rorl
mov
jno
in
xor
pusha
out
out
jae
add
inc
testl
mov
mov
pusha
push
or
pop
push
xchg
and
mov
xchg
nop
inc
dec
data16
lret
popa
in
movsl
repz
fmuls
adcb
stos
xchg
mov
or
inc
fsubl
mov
icebp
or
add
sub
mov
scas
xlat
ret
jnp
sub
lea
test
hlt
popa
cmp
mov
jb
lret
xor
mov
mov
jns
jle
xor
rcrl
ret
stc
cmp
mov
loop
jp
test
xchg
ret
outsl
and
out
test
lret
mov
jge
sub
in
loop
mov
cmp
lahf
mov
mov
imul
out
jns
insb
jge
pop
dec
sub
outsl
imul
cmpsl
out
loope
or
xor
jae
xchg
sub
fists
cli
jb
fidivrl
or
arpl
insb
in
mov
xchg
push
out
stc
xchg
xlat
stos
iret
adc
fsubp
mov
xchg
jne
ljmp
shlb
pop
sub
popf
mov
lret
mov
and
fnsave
push
sub
aaa
cmpsl
jne
mov
dec
adc
mov
mov
js
aaa
lds
mov
push
add
or
sbb
insb
sbb
clc
scas
mov
adc
das
inc
mov
sub
roll
cmp
xchg
test
neg
pop
jp
repnz
mov
and
iret
xor
movsl
pop
mov
xchg
push
cmp
aaa
cmpsl
shll
insl
jmp
push
pop
jmp
cmpsl
dec
je
mov
dec
cwtl
in
mov
fs
inc
xchg
mov
push
adc
mov
outsb
stos
sbbl
les
jl
into
mov
repnz
shrb
mov
mov
call
outsb
cwtl
imul
les
lahf
add
out
jmp
jl
pop
shl
add
jge
sbb
pop
insl
mov
pop
std
aad
xchg
jae
lods
jle
ret
insb
jmp
into
fnsave
scas
fldlg2
repz
xlat
or
pop
or
mov
imul
out
jecxz
sbb
loope
imul
push
mov
rorl
push
stos
jmp
adc
test
xchg
sbb
adc
add
dec
pop
xor
xor
push
jo
loopne
push
out
mov
outsb
push
push
xorl
sub
jmp
into
stos
mov
fadds
cwtl
or
ret
jae
jecxz
jo
xlat
mov
xchg
je
mov
sub
daa
adc
mov
mov
std
ficompl
add
xchg
sub
jno
les
out
jl
add
xorb
orl
add
fnop
pop
lods
ja
and
cmp
nop
out
andb
bnd
pop
dec
push
mov
add
sahf
jae
popl
jle
insl
xchg
sub
push
andb
cld
xor
inc
rorb
ss
xchg
push
cmp
ficompl
mov
mov
gs
in
xchg
or
jl
push
mov
and
cmp
inc
test
pop
cltd
sahf
ret
xchg
imul
outsb
cltd
stc
xor
jp
sarb
rcll
lea
mov
push
cmp
xchg
sbb
and
inc
stos
xchg
dec
cltd
repz
in
popf
push
mov
push
out
dec
cmpsl
mov
lds
xor
push
jle
mov
fists
pop
fadds
loope
push
mov
inc
sub
xor
cmp
push
lea
jne
pop
lcall
sub
outsb
push
in
sbb
popa
lret
push
arpl
mov
jle
and
into
add
fldcw
jo
lret
scas
pop
and
je
lods
outsb
mov
ret
dec
loop
add
mov
dec
outsl
jge
fsubp
sbb
lahf
pop
jnp
adc
or
sti
cmovns
push
shrb
pop
mov
sub
sbb
aaa
xchg
out
arpl
sub
xor
xchg
pop
push
outsl
and
sub
pop
js
movsb
cmpsb
repnz
and
lock
fwait
jae
stc
push
or
lods
stos
insl
and
roll
inc
and
mov
mov
push
xchg
sub
addl
fmuls
out
popl
nop
stc
mov
xlat
jle
lds
decl
sbb
pop
push
inc
push
and
push
ficomps
fwait
daa
imul
sub
sbb
mull
adc
les
pop
add
pop
adc
loope
xor
push
sbb
jb
ljmp
push
je
mov
mov
push
mov
dec
xchg
mov
inc
aad
mov
pusha
aaa
mov
push
mov
add
lock
xor
xchg
sbb
mov
mov
clc
jbe
repnz
outsl
and
lahf
mov
mov
clc
sub
test
fldt
mov
push
das
jb
jbe
lds
xor
cmpsl
push
push
cmp
lds
jl
push
orb
ja,pn
push
fmuls
pushf
daa
dec
into
frstor
and
and
inc
add
mov
sarb
outsl
or
sbb
jmp
mov
mov
sbb
dec
sarl
xchg
lret
xlat
mov
popa
ljmp
pop
mov
fadds
push
dec
stos
sub
in
fucomi
icebp
cmp
mov
popf
dec
jmp
ja
dec
xchg
jns,pt
dec
cld
jl
imul
sarl
jb
mov
cwtl
or
jb
push
pop
sahf
add
divb
sarl
mov
mov
je
test
sti
xor
testl
push
dec
pop
push
adc
test
xchg
mov
ret
xchg
insb
das
xchg
icebp
pop
jp
xor
jge
scas
jl
or
jmp
xchg
je
push
mov
mov
and
push
xchg
aam
xchg
jp
cmp
mov
lods
out
add
dec
inc
mov
push
inc
add
mov
cmp
add
and
sahf
add
mov
add
add
into
add
scas
add
add
pop
pop
stos
cmp
and
xor
cs
adc
lods
sub
sti
sub
icebp
or
sbb
sbb
repnz
enter
cltd
jle
and
mov
clc
push
xchg
inc
aam
pop
add
sub
cld
sbb
cmp
jl
cmp
pop
in
fdiv
mov
xchg
fsubl
ret
and
sbb
nop
lds
mov
aad
popa
ret
push
cmp
ljmp
and
lods
mov
or
sbb
mov
inc
push
push
push
pushf
out
jo
adc
jns
pushf
aad
jmp
sbb
xchg
into
scas
js
ja
js
jns
rcr
jp
pop
push
fstpt
pop
fwait
jne
test
jl
adc
jne
dec
mov
scas
jecxz
jbe
aas
lea
push
insb
adc
call
rcl
jbe
add
mov
xor
test
or
movsb
scas
repz
cwtl
mov
inc
popa
pop
daa
xchg
push
or
jle
pop
je
mov
imul
sbb
and
adc
hlt
loopne
rorl
mov
ljmp
repz
push
xchg
ret
pop
fdivrl
adc
data16
xchg
leave
call
jge
jle
add
xchg
xcrypt-ofb
cmpsl
lods
sub
pop
dec
pop
xor
xchg
inc
sbb
mov
mov
add
lret
cli
test
mov
movsl
push
icebp
adc
jge
xchg
rorl
mov
cmp
adc
adc
dec
aam
push
xchg
pop
sub
ss
lret
lcall
mov
faddl
jle
ficoms
xchg
mov
lock
cwtl
mov
add
add
push
pop
lods
mov
jp
pop
pop
inc
jg
test
std
les
lea
fnstsw
push
int
pop
add
into
cmp
mov
in
dec
dec
mov
mov
mov
jl
sub
sub
adc
jge
test
call
sub
call
xor
dec
adc
out
pop
leave
jns
mov
fidivrs
push
pop
cmp
fmuls
shl
aas
pop
xor
clc
sub
popa
lock
rcl
add
push
cmp
fwait
mov
jns
xchg
sarb
clc
mov
lods
ret
ret
arpl
lea
sbb
imul
sub
ja
xlat
into
repz
scas
mov
outsb
cld
push
pop
and
inc
stc
dec
std
popa
pushf
xchg
pop
or
je
jnp
enter
inc
push
and
sbb
adc
loope
out
mov
mov
lahf
rcll
push
jg
test
pop
add
mov
pop
xchg
and
inc
test
aad
pop
xchg
pop
fcmovbe
je
loopne
mov
mov
mov
pusha
push
and
xchg
and
xchg
xor
and
or
xchg
fdivl
imul
dec
mov
loope
lret
out
mov
mov
xchg
pop
push
enter
push
or
jp
stos
jns
fidivrl
jo
rolb
stos
pop
jae
inc
scas
or
aad
into
lcall
inc
cmp
loope
out
xchg
add
and
ljmp
mov
xchg
ds
fsubs
add
and
cmp
test
sub
sbb
adc
adc
lret
les
or
xor
sahf
int
lcall
mov
push
ja
dec
jmp
aaa
out
inc
popa
int3
subb
inc
add
dec
shl
push
out
test
mov
cmp
pop
mov
popa
std
repnz
in
cmp
aad
lock
dec
repz
test
dec
pop
lods
inc
mov
lods
mov
xor
clc
push
aaa
mov
js
test
push
jb
fidivl
pop
int
dec
movsl
cmp
lods
imul
add
test
rol
orl
sbb
add
daa
xchg
mov
iret
and
xchg
fistps
add
xor
push
stos
sub
sti
push
pop
mov
xor
orb
dec
int3
and
inc
xchg
movsl
sarl
mov
mov
mov
lods
insb
movsb
jae
out
mov
js
xorl
xor
dec
cltd
jl
lods
or
hlt
xchg
shl
rcrl
sbbb
fstps
aaa
call
push
std
and
fs
pop
adc
cld
mov
push
lret
push
cmovge
push
mov
mov
pop
in
add
push
das
aam
nop
cmpsl
xchg
ljmp
imul
lods
push
pop
aad
dec
scas
rcr
fstpl
ljmp
sti
add
mov
gs
call
mov
cld
das
and
pop
add
les
sti
jb
and
dec
cmp
jno
js
icebp
sub
mov
and
cmp
sub
push
add
fisttps
fisttpl
jge
cwtl
fstpt
mov
in
idivb
fucomip
inc
daa
mov
fcoms
adc
jle
and
cmpsb
movsl
inc
xchg
xor
clc
aam
pop
mov
push
jmp
in
or
xchg
xchg
addr16
pop
daa
in
cld
and
and
cmp
cmpsb
or
push
push
daa
mov
int3
pop
mov
arpl
into
sbb
fcompl
mov
mov
lock
pop
sub
xacquire
jns
sub
sti
add
data16
jge
int
mov
mov
xchg
jo
or
xchg
xor
ja
mov
mov
rcrb
mov
xchg
arpl
and
pop
lret
shrl
cmpb
mov
daa
gs
or
rorb
pop
add
inc
xchg
repz
or
xchg
or
mov
orb
adc
add
mov
push
ret
and
ret
sub
pop
sbb
lret
dec
mov
mov
fstpl
fsubs
inc
decb
pop
pop
adc
jl
es
xlat
jp
mov
pusha
add
pop
push
lret
loopne
dec
adc
or
in
sub
mov
xchg
loop
insb
xor
shl
add
cmpsl
jo
out
and
mov
sbb
pop
mov
loop
push
xor
push
pop
popa
xlat
adc
lds
orb
pop
js
mov
cmp
and
dec
clc
or
punpckldq
popf
mov
loop
in
cmp
add
push
repnz
cs
cmpsb
ret
add
jo
in
fmuls
jns
aaa
xchg
sbb
xor
mov
shrl
mov
fsubrs
lret
leave
mov
fs
mov
popa
insb
call
out
sbb
adc
sub
cmp
ret
mov
in
pushf
mov
inc
cmp
data16
sub
jg
enter
nop
imul
jg
push
mov
and
int3
lock
in
inc
sbb
xchg
loopne
fists
ret
xrelease
movsb
mov
mov
or
xchg
xor
into
sub
ds
cmp
jo
lret
xor
repz
mov
in
cmp
pop
ljmp
or
cld
and
and
imul
dec
in
lcall
mov
cmp
push
clc
pop
sub
and
push
pop
mov
push
int3
js
jns
loopne
dec
jl
lods
jnp
cmp
jnp
jbe
iret
mov
dec
mov
adc
mov
test
aaa
mov
lret
aas
or
leave
fwait
je
push
mov
add
mov
test
lods
push
xor
divb
mov
fwait
xor
lret
add
cmpsl
mov
jno
sub
loop
jno
xor
inc
fwait
sub
pop
arpl
or
fsub
lods
ret
shll
sub
pop
lret
fsubs
sbb
je
mov
push
xchg
pop
adc
int3
mov
mov
jno
leave
or
fld
mov
xchg
sub
cli
push
pushf
jmp
movsl
pop
addr16
outsl
repnz
cli
push
sahf
mov
gs
or
cltd
lcall
push
stos
ds
push
int3
and
add
mov
dec
loopne
fimull
sahf
xchg
pop
add
faddl
pusha
ds
hlt
sub
mov
mov
or
sub
or
pop
sbb
fisubrs
mov
xchg
mov
lods
push
stos
jns
mov
test
sahf
xchg
pop
sahf
add
int3
or
das
rcll
mov
or
dec
call
xchg
pop
rcll
mov
subb
movsb
hlt
xchg
jl
xchg
and
mov
pushf
shr
inc
emms
fs
test
subl
dec
jle
or
dec
cwtl
andb
orl
cwtl
sub
mov
dec
push
testl
out
insl
mov
or
fmul
sti
push
mov
cs
out
add
sarl
and
mov
push
push
repz
jp
sbb
jae
fmull
mov
leave
cmp
dec
in
xchg
cmpsb
push
fbstp
adc
xchg
cld
pop
idivb
scas
jno
outsl
sub
idivb
gs
dec
scas
cmp
jp
nop
or
call
dec
mov
mov
pusha
dec
ss
jecxz
mov
inc
mov
cmp
inc
outsl
data16
xlat
cmp
stos
jecxz
int
mov
ret
gs
push
push
sbb
push
dec
fwait
push
dec
fwait
pop
stos
arpl
sub
or
fcoml
js
ret
inc
push
fwait
pop
aas
andl
pop
and
or
mov
icebp
dec
xchg
lods
push
push
lea
pop
adcb
lods
test
aad
xchg
pop
or
shrb
sub
xchg
enter
mov
jno
pop
insl
jge
repnz
sub
pop
add
and
jne
ficomps
xor
stos
mov
mov
inc
notb
lcall
add
push
cwtl
fdivr
xor
jle
add
fidivs
das
idivl
bound
insl
stc
pop
push
mov
jne
push
add
jb
js
fcomps
fstpl
pop
push
int
adc
movsl
xchg
sbb
or
push
imull
dec
icebp
lds
cmp
mov
les
lds
loop
adc
or
loop
lods
mov
adc
push
mov
dec
jno
add
push
mov
mov
mov
test
jnp
mov
inc
jno,pn
mov
in
mov
xlat
inc
adc
out
or
test
mov
fsubrl
pop
jmp
stos
pop
jge
or
add
push
into
and
sub
insb
out
loopne
jo
lret
mov
add
shl
mov
or
nop
xor
inc
outsb
pop
push
int
sub
dec
mov
mov
adc
cmp
push
mov
ret
mov
fimull
in
in
cli
mov
pusha
adc
mov
cmc
inc
or
rorl
mov
push
cli
mov
add
int
mov
rolb
xchg
cmp
mov
lcall
outsl
mov
pusha
and
mov
outsb
roll
sub
lds
iret
add
ja
insl
lahf
push
push
mov
mov
filds
xor
mov
adc
out
adc
mov
mov
inc
cmp
mov
dec
aam
mov
cld
push
stc
cmpsl
js
test
fistpl
outsl
cmpsl
mov
scas
mov
mov
arpl
xchg
sahf
xor
cmp
rcl
push
aaa
dec
and
sbb
fildl
jae
pop
data16
ljmp
fidivs
sub
orb
mov
xor
lahf
sbb
or
popf
inc
lcall
mov
mov
pop
mov
or
fidivrs
fidivs
popf
mov
xchg
in
mov
gs
in
mov
inc
cmp
mov
pop
insl
fstps
fiaddl
js
jno
insl
lret
sbb
insl
adc
scas
mov
pushw
push
jecxz
aas
mov
xchg
mov
jge
pop
lods
mov
xor
fildll
dec
sbb
xchg
outsl
jecxz
jg
mov
aad
inc
sarl
ljmp
xchg
pop
and
stos
sbb
sbb
es
pushf
int3
mov
cmp
sbb
pop
in
add
mov
hlt
mov
icebp
lods
dec
jb
pushf
pop
sub
jno
jo
ja
adc
notb
pop
push
dec
and
dec
or
pop
xchg
push
loopne
pop
jecxz
pop
popa
inc
ss
lock
rcrl
stos
les
xchg
popf
mov
mov
fsubrp
mov
insb
shll
and
mov
pusha
adc
add
mov
scas
xchg
inc
and
scas
push
cmp
aam
and
repz
or
std
leave
jo
sub
outsb
rclb
test
add
pop
push
sub
insb
sub
popf
movsl
dec
out
data16
fisubrs
mov
jae
dec
aam
iret
mov
scas
dec
jne
lahf
mov
fdivrp
dec
mov
jae
add
lock
fstps
mov
rol
and
sbb
or
addl
loopne
fnstsw
and
jae
test
ficoml
je
jb
sub
loope
in
dec
dec
adc
fisubrs
lods
aam
sub
adc
sti
sub
int
xchg
aaa
pop
and
mov
cmp
or
sub
sbb
sbb
in
dec
adc
mov
jg
inc
insb
insl
mov
shlb
mov
xor
int
xchg
loope
inc
outsb
mov
inc
and
inc
jmp
roll
adc
xor
push
lahf
imul
sub
mov
pop
mov
aam
lds
in
mov
jbe
push
xchg
in
or
in
or
aam
test
add
cmpsb
push
int3
jmp
divb
in
loopne
jbe
mov
xchg
addl
mov
mov
shrb
cmp
push
out
xor
rol
cmpsb
imul
dec
add
jl
lea
sbb
mov
repnz
fisubrs
int
mov
xor
dec
ss
sbb
mov
mov
call
pop
push
jbe
dec
xchg
sti
lds
cld
jge
in
mov
stos
mov
lods
mov
dec
lea
push
mov
push
add
sub
cmp
dec
push
mov
push
push
inc
rorl
aaa
movsl
dec
int
cmp
add
ja
in
push
cwtl
pushf
push
mov
xor
pop
or
es
jb
add
jle
mov
push
in
es
loopne
decl
pop
sub
sar
add
mov
mov
pop
xchg
sti
test
clc
xor
loope
rorl
sahf
outsl
hlt
add
fs
dec
fimull
sub
cmp
push
dec
jo
cmc
mov
sbb
push
xchg
mov
adc
mov
paddw
subb
pop
dec
pop
push
enter
clc
dec
loopne
divl
jnp
lahf
inc
icebp
sub
sub
jmp
jg
adc
fistpl
xor
lods
push
and
xchg
in
fisubl
mov
mov
or
and
inc
or
stos
mov
aas
mov
out
adc
in
notb
push
lret
xchg
sbb
pusha
adc
roll
xchg
jnp
push
mov
xor
dec
xchg
imul
jecxz
inc
and
dec
xchg
xchg
push
pop
cwtl
sarl
js
cltd
jecxz
add
add
sti
push
insb
popa
dec
sbb
jae
faddp
ret
ret
push
lds
repnz
movsb
aaa
sub
cmpsl
sarb
or
xor
or
adcl
sahf
dec
flds
sbb
or
inc
pop
adc
add
fisubrs
arpl
cs
inc
xor
xchg
leave
and
ja
jae
cmc
jl
ljmp
push
pop
ret
aad
es
cmp
jmp
pop
das
and
xor
addr16
xchg
adc
bound
cwtl
add
hlt
add
jns
xchg
das
dec
push
les
fimull
insl
add
xchg
cltd
push
push
jns
fmull
add
jle
push
cmp
adc
mov
pop
and
lods
add
pop
mov
pop
movsl
enter
iret
pop
mov
std
xor
pop
or
nop
mov
nop
mov
repnz
mov
mov
or
addb
inc
jbe
sbb
imul
push
inc
xchg
ss
fldl
loopne
push
inc
mov
lods
and
es
dec
adc
enter
cbtw
pop
insb
pop
std
push
cs
xor
mov
pop
or
ja
into
sbb
cmp
in
push
xchg
ja
test
mov
xchg
mov
imul
fldl
pop
pop
ss
clc
filds
aad
int3
xlat
movsl
into
mov
mov
loopne
in
jne
cmp
aad
mov
mov
fwait
rolb
into
mov
hlt
adc
or
adc
xchg
pop
fnstcw
les
pop
test
sub
test
cmpsb
cmc
mov
jae
fcompp
addr16
fildll
lds
lahf
hlt
lods
or
jae
add
or
cmp
xchg
and
or
cmp
push
fsub
jmp
outsl
int
into
movsl
mov
aas
nop
mov
push
lret
mov
push
les
cmc
in
enter
test
mov
loopne
mov
ja
movsb
add
xchg
test
addb
fwait
aad
xchg
pop
leave
addr16
test
add
pop
jge
jp
xor
subb
das
xor
sub
add
lret
pop
shlb
add
pop
std
push
gs
leave
push
sub
rcl
scas
lods
xchg
xor
movsl
rclb
rolb
cmp
jne
inc
jge
sbb
int3
lods
jge
inc
enter
test
mov
dec
mov
cwtl
test
push
cmp
pusha
pop
cltd
stos
cmpsb
xor
fcompl
int3
icebp
dec
loop
inc
pusha
pushl
out
hlt
pcmpeqd
fwait
popf
push
popf
repnz
push
lea
and
mov
scas
test
stos
jge
mov
fadds
inc
scas
leave
out
jecxz
int
popa
mov
mov
iret
xchg
lret
daa
aas
mov
or
enter
mov
adc
or
dec
jne
addr16
cmc
hlt
scas
rcl
call
lds
dec
in
add
pop
mov
mov
xchg
jae
mov
shlb
mov
xlat
test
xor
es
rclb
pop
lahf
ds
add
adc
enter
inc
jge
jbe
or
push
and
adc
cmp
push
pop
cmp
setns
add
dec
mov
and
pop
jl
in
xchg
movsb
mov
inc
cmp
daa
dec
ret
cmp
xchg
shr
lret
push
rcrb
sbb
out
sbb
lret
mov
pop
pop
xchg
movsl
jno
addr16
lods
mov
adc
in
mov
inc
add
sbb
gs
arpl
mov
cmp
mov
test
mov
orl
and
push
add
fcomi
rol
icebp
xlat
push
inc
and
test
cli
pop
aad
test
int
fisubs
sbb
push
hlt
dec
lcall
sbb
loope
dec
scas
mov
inc
stos
cmp
insl
data16
xor
and
mov
dec
add
sbb
add
fistpl
push
imul
call
cmp
cmc
lret
add
sarl
mov
cmpb
not
les
cmpl
mov
cwtl
adc
ds
popf
lods
sti
jne
push
push
adc
mov
pop
vmovups
xchg
nop
sub
mov
sub
aad
adc
xchg
addb
push
and
sub
inc
stos
sbb
xchg
xchg
inc
mov
es
fisubrl
lahf
rolb
mov
dec
loopne
pop
jno
hlt
mov
jbe
sbb
mov
mov
push
push
and
aam
pop
aas
cld
das
cmpl
and
lahf
cld
lcall
inc
xchg
test
push
mov
ss
sub
xchg
pop
pop
or
inc
jmp
js
sub
jo
in
loope
jp
sbb
jp
outsl
jge
imul
js
dec
lock
in
and
outsl
jecxz
popa
or
in
add
aaa
lds
xchg
js
loope
clc
jmp
mov
daa
inc
dec
adc
mov
insb
std
ljmp
in
mov
mov
cmp
loop
push
and
mov
fwait
daa
adc
cmp
mov
xchg
aam
test
dec
es
inc
into
sub
or
xor
cmpsl
addb
mov
and
dec
cs
and
mov
gs
pop
pushf
push
shrb
mov
test
jg
test
stc
test
test
loop
or
insl
das
sbb
bswap
and
aad
les
movb
add
icebp
mov
stc
inc
and
ret
or
outsb
sub
dec
das
mov
lcall
sahf
imul
inc
cwtl
add
xor
or
inc
lahf
mov
inc
xchg
movsl
shl
call
mov
adc
push
adc
out
cmp
in
lock
or
inc
sbb
out
cmp
xchg
adc
or
fiadds
pop
insl
push
cmp
mov
lds
sti
mov
mov
fwait
sbbb
mov
xor
dec
int
call
xchg
xorb
xor
inc
push
jge
add
push
adc
in
jae
xlat
cltd
push
stc
sti
ret
fdivrp
cmp
out
call
cmp
jns
jne
ds
mov
pushf
mov
repz
dec
xchg
pop
mov
cmp
sarb
or
mov
sbb
test
push
cmpsb
or
movsb
iret
or
add
xchg
xchg
inc
mov
mov
das
inc
andl
icebp
movsl
movsl
enter
lcall
sbb
lds
rclb
lds
inc
inc
andb
sbb
into
xor
mov
test
inc
and
stos
dec
mov
dec
movsb
adc
jg
imul
jge
mov
fdivrp
fsubrp
out
ja
in
lock
out
test
add
std
adc
mov
leave
and
dec
sbb
and
mov
loop
push
aad
cmp
or
add
mov
push
pop
and
cmpl
xor
outsl
add
add
xor
cwtl
loop
xor
and
mov
scas
cmp
ds
imul
cs
sbb
lret
imul
mov
jno
adc
mov
vminps
mov
rorb
bound
push
pop
jb
pop
pop
xchg
gs
test
mov
or
int3
cld
in
pop
ja
mov
jo
pop
loop
cs
or
xor
or
cmp
es
or
leave
int3
lret
dec
int
xchg
xchg
cltd
fwait
int3
dec
dec
in
push
sbb
sub
xor
or
push
xor
mov
out
jae
jae
mov
dec
out
dec
popl
xchg
mull
jle
xchg
pop
mov
sub
xchg
int3
shlb
jns
xor
sbb
and
sahf
adc
mov
repz
jns
mov
jl
outsl
xor
xor
das
xor
movsb
popf
pop
cmp
mov
sbb
jns
cmp
mov
insb
mov
mov
inc
dec
out
cltd
aaa
push
mov
xor
sbb
mov
stc
mov
repz
cltd
mov
jp
push
out
push
int
adcb
lret
int3
xor
xchg
daa
nop
lret
out
lods
mov
adc
inc
faddl
mov
cwtl
bound
ja
mov
movsl
sbb
fmulp
jae
jo
lahf
out
xchg
idivl
pop
sub
mov
icebp
fcmovne
sbb
pop
ret
and
xchg
outsl
and
pop
and
xor
pop
xor
sbb
dec
dec
int3
out
jb
jl
lret
sub
int
leave
lret
push
mov
bound
das
sub
aaa
loope
dec
mov
jle
andl
push
js
mov
mov
xor
pop
sbbb
jbe
pop
or
mov
xchg
in
les
data16
jns
or
mov
cmp
popa
data16
pusha
fimuls
mov
cmp
sahf
test
mov
xor
or
add
mov
or
dec
lock
adc
loope
mov
inc
sub
adc
lock
jmp
push
adc
insl
xor
or
jb
and
ret
movsl
jo
in
cld
sub
mov
jecxz
fsubs
shll
stc
cmp
pusha
push
lods
lods
push
add
fistpl
loope
xlat
pop
js
cmp
ljmp
push
inc
ret
es
or
adc
int3
dec
lret
cmp
mov
adc
sbb
push
js
bnd
adc
out
stos
jbe
mov
cs
mov
int3
ret
cld
lock
cmp
mov
cmp
jmp
int3
addr16
xor
fisttps
aaa
ret
xor
cwtl
enter
push
sbb
popf
mov
push
rol
shrl
enter
mov
call
fcmovbe
push
push
cmp
movsl
adc
dec
jo
ljmp
jae
or
pop
sub
nop
outsb
jg
jg
sub
cltd
imul
mov
adc
adc
adc
aaa
push
dec
xchg
dec
and
cmp
repnz
stc
xchg
loop
xchg
ss
cmpsl
dec
mov
notb
hlt
out
or
push
pop
lods
jge
imul
mov
push
test
push
sbb
stc
push
repz
jo
movsl
fiadds
jl
bound
scas
sti
outsb
aad
insl
mov
mov
fs
loopne
mov
mov
jmp
mov
out
jbe
incl
xchg
pushl
mov
scas
and
cmp
rol
lret
in
add
les
out
jno
adc
cmpsb
xchg
adc
out
adc
push
pop
dec
shll
mov
cmpsl
adc
jb
imul
adc
leave
in
sub
clc
sub
jne
mov
sarb
push
gs
mov
repnz
mov
out
dec
arpl
mov
adc
aad
dec
dec
lret
in
mov
sub
fldl
cmpsl
aad
mov
cmp
cwtl
push
fdiv
jbe
pop
sar
imul
and
repz
adc
rcll
std
in
jns
dec
stc
pop
insb
mov
sub
pop
inc
adcl
arpl
sbb
or
ljmp
ret
pop
js
fwait
cs
xchg
cmp
lods
bswap
lea
sub
inc
fwait
sbb
in
pop
adc
and
or
fnstcw
mov
outsl
push
arpl
iret
pop
push
lahf
lods
call
mov
xchg
jmp
xchg
ds
sbb
icebp
lock
imul
cmp
sbb
add
imul
movsb
xchg
push
pushf
pop
push
fcmovnbe
lds
or
xchg
or
xor
test
repz
xchg
repz
inc
incl
scas
sbb
cmpb
movsb
xchg
ss
push
push
in
sahf
xor
sub
nop
cmpsl
xchg
dec
and
lods
xor
and
rol
iret
xchg
sub
inc
cmp
pop
xchg
test
adc
out
cmp
push
sbb
jbe
xchg
or
cltd
pusha
ja
and
andl
sbb
js
mov
into
call
cwtl
js
dec
jmp
dec
or
pop
sub
and
xchg
mov
push
jb
inc
int
sub
hlt
cmp
cld
arpl
inc
adc
adc
lds
jge
pop
sub
negl
dec
jb
dec
mov
addb
fdivs
hlt
inc
pmuludq
enter
sub
das
push
xor
sbb
dec
cmpsb
jg
xchg
pop
into
adc
jb
aam
adc
test
mov
push
es
ja
mov
inc
cmc
xchg
inc
pop
fmull
xor
fisubl
outsb
and
daa
push
test
mov
repnz
xorps
ds
jae
cmp
rcll
cld
mov
sbb
push
jnp
dec
scas
mov
mov
out
fcomp
jge
inc
mov
test
ljmp
push
jb
inc
jmp
aad
mov
push
hlt
roll
cmpb
push
pop
dec
jo
or
push
lahf
mov
ret
lock
out
jno
adc
mov
mov
mov
popa
outsl
in
pop
pushf
mov
pop
inc
ret
jno
jle
push
xchg
and
mov
mov
fsubl
adc
sti
shr
sahf
push
jne
popa
inc
mov
fiadds
rcrl
push
pop
stc
addr16
movsb
cmpsl
stos
mov
fwait
push
push
push
mov
lahf
call
mov
and
cmc
nop
ss
push
notb
jnp
in
and
div
jge
push
mov
aam
xor
inc
or
sbb
jno
cs
stos
adc
outsl
fnstsw
inc
dec
push
adc
popa
pop
mov
dec
dec
xchg
and
orl
lcall
xlat
imul
mov
arpl
fxch
ljmp
mov
movzbl
lds
push
pop
js
xchg
arpl
cli
jp
xlat
es
gs
stos
aaa
jl
jge
lahf
xor
loop
icebp
in
popf
pop
fmull
sar
adc
cmpsl
pop
pop
xchg
mov
std
les
lods
pop
mov
sub
mov
mov
aad
mov
push
int3
std
cmp
xchg
cs
stc
xchg
adc
mov
inc
xchg
pop
xchg
jp
inc
xchg
adc
aaa
sub
xchg
xchg
popf
add
cld
push
cltd
mov
sub
and
inc
adc
jecxz
pusha
scas
cli
lret
mov
mov
or
lret
push
std
popa
inc
fs
rolb
or
mov
movq
xchg
loopne
adc
scas
dec
fldl2e
mov
push
cmp
and
cmp
xlat
sbb
addr16
inc
and
mov
jmp
adc
pop
loop
jno
cmc
xchg
stos
cli
mov
test
pop
adc
lods
mov
adc
push
mov
inc
loop
push
paddsw
jb
cli
mov
xor
enter
sub
mov
gs
cltd
sub
out
pop
mov
es
push
pop
and
adc
and
mov
dec
dec
test
cld
call
repz
xchg
shlb
mov
adcb
push
pop
adc
lods
pop
xchg
dec
mov
stos
and
add
rclb
or
xchg
and
fs
js
push
ljmp
shr
pop
icebp
shr
fists
pop
shrb
test
repz
int3
ret
loopne
sbb
mov
mov
cmp
inc
add
in
jnp
stos
loopne
movsl
leave
xchg
pop
insl
pop
pop
popf
js
sub
pop
xchg
jb
pop
cmp
in
popf
sub
pop
nop
ljmp
or
lea
inc
loop
mov
pop
lds
dec
dec
pusha
xor
movsl
cwtl
ds
xor
lods
or
fldenv
jb
xchg
push
dec
cmp
jb
jle
popf
repnz
mov
bound
sahf
sbb
mov
ja
jg
int
gs
cwtl
xlat
xchg
cltd
lcall
jno
sbb
das
pop
xor
adc
imul
into
daa
cld
mov
in
cmp
dec
mov
aam
cmp
addr16
mov
imul
pushl
fs
fildll
inc
jecxz
dec
adc
or
pop
adcb
js
fcmovu
into
xchg
lcall
add
aas
int3
pop
push
subb
popa
or
in
xor
or
sbb
xchg
fdivrp
or
sub
pop
or
ficompl
jnp
dec
add
xchg
mov
pop
int
or
push
inc
rolb
inc
and
push
cltd
push
ja
dec
outsl
and
pcmpeqd
and
jmp
test
mov
aaa
hlt
dec
outsb
test
mov
ja
ret
loop
pop
mov
pop
cs
jl
fisubl
loope
xchg
scas
popa
push
jno
xor
or
jns
xor
clc
mov
in
lods
nop
lret
jge
rorl
scas
xchg
inc
adc
divl
movsb
fcom
adc
or
nop
aam
mov
insb
jp
data16
sbb
jecxz
lcall
in
pusha
movsl
hlt
push
sub
xchg
pop
ss
popa
adc
fidivl
xchg
push
xor
jbe
or
and
mov
sub
pop
mov
mov
pop
mov
dec
jmp
icebp
insl
fnsave
mov
xlat
pop
idivb
pop
sub
aaa
jae
jbe
lcall
mov
cli
jecxz
bound
jge
sahf
inc
shrb
and
in
mov
sub
mov
lods
sbb
xchg
dec
sub
cmc
cmp
xchg
in
mov
outsb
mov
fs
jnp
xchg
sbbb
add
dec
xchg
stc
lret
mov
sbb
lahf
sub
push
in
push
xor
mov
sub
pop
cmc
sahf
scas
adc
pop
das
ret
or
cltd
adc
inc
insb
sti
or
std
sbb
jns
cmp
add
pop
xchg
jp
xlat
sub
lret
arpl
into
iret
pushl
je
test
mov
xor
daa
ds
push
pop
dec
cwtl
sub
js
mov
xor
stc
cmp
lcall
xchg
mov
scas
mov
cmp
faddl
aas
mov
pop
mov
push
aas
jnp
insl
mov
aad
jmp
bsr
loope
outsl
sar
loope
xlat
sbb
imul
dec
repz
test
add
out
mov
sbb
fildll
mov
mov
rorl
mov
inc
lea
lods
insb
mov
push
inc
and
out
xchg
dec
mov
popf
push
sub
adc
and
and
fidivrs
dec
or
sbb
push
fs
cmp
stc
ja
mov
fbld
movsl
fnstenv
push
sbb
xchg
add
leave
xchg
mov
nop
sub
jle
jae
xchg
mov
cmp
mov
inc
xchg
test
outsl
jmp
cs
jl
sti
cmpsb
ss
js
ss
loopne
mov
fimull
enter
add
les
pop
pop
mov
das
insl
jge
lcall
testl
push
hlt
mov
push
jecxz
xchg
sbb
iret
sti
sub
aas
mov
out
test
dec
stos
jl
inc
push
notb
push
push
jg
mov
dec
ret
mov
mov
push
mov
pop
sarl
test
lahf
mov
addr16
mov
sub
mov
fstpt
inc
add
lods
mov
insb
not
mov
push
mov
mov
and
dec
lods
mov
rcll
pop
mov
jno
inc
mov
xchg
xchg
adc
in
push
inc
les
and
pusha
mov
mov
dec
loope
pop
and
jns
subl
int3
jl
mulb
pop
in
pop
ljmp
jg
pop
jp
inc
sar
or
mov
stos
jns
aaa
mov
pop
adc
decl
sub
xor
cmp
daa
jmp
inc
sar
pop
dec
and
pmaddwd
sub
push
lcall
out
jno
in
fidivs
xchg
jecxz
outsb
xchg
loopne
loop
int3
hlt
xorl
gs
ss
cmp
loopne
cmp
xor
stos
mov
in
or
pop
mov
mov
ret
int3
ljmp
adc
in
sbb
lret
xchg
jmp
jle
aaa
es
popf
lcall
enter
sbb
mov
pushf
int
repnz
cmpsl
ds
call
imul
and
cmc
ficoml
adc
and
ja
mov
sub
push
lahf
push
mov
pop
outsb
lret
add
out
mov
clc
jg
aas
ror
xor
inc
mov
adc
and
push
xchg
jecxz
jl
jl
push
inc
leave
test
addr16
xor
les
lds
adc
cmp
test
hlt
mov
sbb
mov
sahf
inc
sub
mov
iret
pop
fcmovnu
mov
shlb
test
pop
mov
fs
and
idivl
cwtl
push
inc
push
xchg
add
stos
dec
sub
jb
insl
repnz
cltd
or
and
add
into
mov
inc
mov
sub
fstpt
sti
mov
pop
add
fsubrs
xorl
push
scas
icebp
jmp
xor
pushf
pop
repnz
sbb
incb
jno
pop
aad
call
pushl
ljmp
push
pop
out
js
lods
notl
loop
adc
lods
adc
cmp
ficompl
push
test
mov
jmp
aas
jmp
inc
scas
mov
addb
sti
shrb
ss
mov
scas
cli
xchg
ja
test
mov
dec
cld
inc
push
ret
rep
mov
cmp
clc
pop
lods
xlat
rolb
outsl
ret
shll
insl
ja
fdivs
jecxz
push
adc
andb
lret
gs
rcrb
cmp
into
fld
in
dec
jg
in
jne
dec
fisttps
push
mov
and
inc
in
push
xchg
ds
and
in
pop
push
mov
inc
in
pop
jb
jns
not
push
pushf
mov
orps
int3
or
std
cli
fildl
xchg
shr
sub
ja
iret
push
clc
loop
cmpsl
add
or
repnz
jnp
outsb
out
sti
dec
xor
dec
stos
jecxz
xchg
shl
xchg
sarb
dec
in
clc
adc
mov
orb
inc
mov
cld
push
jbe
aaa
cmp
jmp
test
hlt
mov
mov
jp
jno
pop
mov
mov
or
sub
popa
sbb
push
push
jp
cmp
push
xchg
push
dec
cmpsl
dec
rol
ja
cmc
add
hlt
ljmp
mov
shl
aas
fildll
fistpll
sub
jp
gs
ljmp
lds
sub
or
pop
jecxz
sbb
icebp
bound
imul
push
pop
shlb
mov
pop
out
std
fcompl
stc
fcompl
mov
jl
lds
dec
vpminsw
loop
mov
lods
arpl
lret
ja
rcrb
lahf
test
pop
int
sbb
stc
push
test
loop
daa
mov
jg
out
mov
test
jmp
fildll
test
in
inc
xchg
sbb
aaa
mov
aaa
test
mov
cmp
xchg
and
inc
xchg
xchg
xor
imul
push
inc
dec
popf
mov
mov
call
mov
fcmovnb
pop
or
ret
test
std
xor
out
stc
push
in
and
ror
push
scas
dec
insl
push
andw
sbb
push
in
push
mov
xor
fcom
je
fdiv
cli
ror
out
imul
sub
scas
pop
bound
push
xchg
ds
out
inc
xchg
mov
stc
andl
sbb
test
dec
aas
mov
dec
mov
sbb
out
cwtl
lods
movsb
mov
mov
mov
jno
sbb
test
pop
in
mov
fcomps
out
popa
in
sub
lret
cmp
mov
jne
mov
icebp
fimuls
xchg
aad
imul
daa
cmc
cltd
in
mov
push
mul
loope
jbe
cmpsb
mov
mov
xor
std
pop
dec
xchg
xchg
in
xor
lret
cmp
sbb
xchg
ja
pop
or
movsb
push
leave
pop
ret
cs
adc
or
sahf
xor
lods
pushf
pop
das
sub
push
inc
mov
shlb
test
ss
or
out
lret
push
sub
cmp
stos
dec
mov
add
sbb
arpl
addr16
repnz
inc
xchg
pushf
and
mov
aad
enter
ret
push
mov
sub
mov
dec
jp
dec
subl
iret
xor
ss
pop
mov
xchg
inc
xchg
cmpsl
leave
sub
cmp
push
out
jmp
cmp
out
xchg
inc
xor
sti
pusha
mov
sbb
push
sti
popa
add
scas
jecxz
cwtl
mov
iret
outsb
out
inc
mov
push
cmp
sbb
fistl
xchg
test
sbb
stc
hlt
xchg
popa
cli
fbstp
xor
popa
cmp
jno
mov
push
mov
test
mov
mov
pop
shl
ficoml
adc
aam
push
out
push
daa
pop
pop
int
arpl
dec
testb
add
xor
es
pop
adc
ret
mov
fs
das
push
mov
sbb
push
rorl
data16
imul
mov
and
adc
inc
push
js
mov
dec
test
xchg
in
dec
sub
xor
aam
cmp
dec
mov
mov
push
mov
sbb
push
mov
jecxz
test
jle
sbb
pop
sub
stc
push
adc
dec
aam
scas
dec
fs
in
xchg
dec
mov
push
jo
stos
cmp
adc
or
in
dec
mov
ljmp
push
xor
add
mov
mov
mov
out
push
xchg
mov
repz
push
mov
in
mov
es
push
add
pop
daa
filds
mov
push
xchg
rolb
dec
dec
sbb
mov
mov
cmp
testl
dec
outsl
xlat
jecxz
test
lahf
add
xor
sub
mov
cmpb
andl
xchg
xchg
repz
cmp
iret
scas
movsl
lods
arpl
cld
fs
jbe
add
dec
cwtl
xchg
xchg
cltd
repz
xchg
jecxz
sub
sub
mov
in
mov
xchg
pop
push
lods
addl
stos
mov
mov
and
cld
insb
nop
sub
ja
xchg
bound
pop
or
mov
add
adc
cmp
lea
jnp
push
dec
adc
aad
sahf
stos
mov
push
cs
adc
pop
and
xchg
cld
iret
cltd
lret
ja
adc
lret
dec
ja
jbe
or
ds
pop
sub
sub
popa
or
xchg
dec
lds
push
cwtl
mov
pop
lahf
out
in
add
jmp
add
push
mov
cmpsb
in
stos
mov
dec
sub
mov
jno
ret
lahf
inc
xor
xchg
fisubs
and
decl
mov
cmp
xor
inc
xchg
dec
testl
mov
pop
mull
dec
pop
in
mov
mov
inc
or
repnz
scas
jl
push
mov
aas
clc
push
int
in
and
inc
adc
pop
xchg
das
jmp
inc
dec
pop
lret
dec
xchg
aaa
mov
mov
enter
scas
sbb
jb
jns
xchg
testl
ljmp
sub
aas
mov
leave
les
cmpsl
das
pop
out
jne
shrl
shll
cld
lret
cmp
dec
push
mov
lahf
loopne
inc
pop
inc
movb
or
adc
mov
outsl
shll
call
pop
aaa
gs
push
xlat
push
iret
push
xlat
jnp
inc
lret
out
mov
or
out
lods
stos
jb
sbb
out
and
loopne
ljmp
pop
mov
insl
cltd
clc
mov
rcl
shrl
jmp
lret
mov
int3
dec
into
dec
leave
shlb
fwait
inc
xchg
shrb
sahf
xchg
pop
push
adc
adc
xchg
mov
sub
pop
xchg
movb
xchg
ljmp
cmp
call
mov
out
cmpsl
scas
sbb
into
or
and
jb
jle
dec
jmp
fists
shlb
mov
into
sbb
mov
fiaddl
ljmp
xor
xor
ljmp
or
stos
sbb
fildll
outsb
push
test
fcmovne
scas
jbe
stc
dec
sub
and
loop
in
les
cli
std
mov
adc
push
dec
adc
out
adc
push
pop
dec
shll
test
inc
cs
mov
fbstp
xor
daa
sub
arpl
arpl
inc
sub
stc
stos
call
xchg
xor
jo
push
mov
jbe
pop
inc
mov
jno
into
mov
icebp
or
push
mov
and
insb
cmpl
jne
insl
and
lcall
xorb
in
aam
and
ds
xor
negb
loope
test
mov
sar
or
mov
not
mov
roll
call
fstpl
loop
jo
mov
jp
mov
xchg
xor
pop
out
inc
jg
push
mov
lea
fmulp
enter
mov
jp
push
aad
in
pop
cmp
inc
mov
xor
jl
and
je
pop
rolb
aaa
icebp
movsl
fdivr
xchg
call
jg
fnstenv
arpl
ret
scas
inc
sub
dec
pop
xchg
xchg
dec
sub
pop
lods
xor
jle
jecxz
sub
ja
sub
mov
mov
cmp
shll
push
call
aas
and
jo
enter
sub
aam
mov
mov
xchg
inc
loop
jmp
lcall
shlb
xor
add
push
in
sub
adc
jp
outsb
xchg
push
pop
mov
sbb
call
mov
xchg
dec
sbb
xor
sbb
xchg
lcall
dec
fnstsw
pushf
nop
jne
popa
movsl
out
lds
jns
pop
es
shll
sbb
mov
inc
lahf
jecxz
sbb
sbb
loop
push
push
pop
push
test
xchg
pop
cmp
mov
push
ja
dec
sbb
sub
scas
stos
push
jmp
faddl
into
aas
sub
pop
sti
push
loope
mov
cmp
push
jnp
mov
mov
subb
nop
movsl
cmp
jecxz
pusha
xor
std
jecxz
xchg
and
mov
mov
nop
jnp
idiv
cmp
mov
scas
repnz
insb
pop
shlb
cmp
rcl
adc
adc
dec
mov
iret
push
pop
dec
shlb
cwtl
jecxz
lret
call
push
outsb
mov
or
movsl
xchg
push
fs
mov
and
sub
ficomps
scas
add
push
xchg
cld
xor
subl
mov
movsl
stos
fcompl
dec
pop
fsubrs
xchg
jg
sub
adc
jg
jecxz
in
ds
dec
sbb
clc
mov
int
or
xor
pop
jge
mov
loopne
dec
push
mov
dec
test
mov
push
hlt
movsb
push
enter
xchg
dec
xchg
mov
add
subb
mov
xlat
push
pop
incl
les
inc
mov
xchg
push
dec
mov
out
mov
or
pop
cwtl
sbb
ret
fisubs
out
into
xor
xchg
ds
shlb
gs
cmp
xor
enter
xor
call
rcl
addr16
mov
xchg
xor
sub
cli
mov
xlat
aad
pop
aam
xchg
cmp
or
sbb
and
pop
cmp
pop
lods
push
adc
and
cltd
xchg
out
sub
push
iret
stos
inc
fimuls
ret
cmp
scas
cmpsl
xchg
mov
xchg
add
stc
jge
repnz
push
jnp
cmp
addr16
leave
mov
xchg
popf
inc
add
icebp
pusha
scas
insl
in
lock
loop
mov
and
jmp
mov
adc
or
jo
dec
lret
inc
test
in
inc
dec
sarl
xor
imul
fidivs
fmull
sbb
xlat
jne
std
je
test
cmp
fists
insl
pop
imul
hlt
je
scas
xor
mov
stos
cmpsb
xchg
inc
sub
stos
inc
sub
fcomps
mov
test
xchg
mov
mov
mov
sarb
ret
sarb
in
mov
out
push
movsb
sub
mov
mov
sahf
jmp
mov
pop
cmp
out
test
std
mov
xchg
fwait
cltd
xchg
into
enter
in
and
mov
inc
sti
decl
sbb
add
xor
mov
mov
daa
addl
shlb
xchg
jb
flds
or
enter
aad
sahf
scas
dec
sbb
dec
xchg
aas
movsl
decb
inc
int3
mov
inc
test
add
imul
mov
in
insl
mov
xchg
ficoms
sub
out
and
or
add
pop
dec
hlt
mov
loope
xchg
xchg
pushf
mov
jb
std
xlat
pop
mov
mov
mov
pop
push
fimull
sub
or
add
sar
insl
add
add
jg
jne
mov
decl
imul
sarb
test
adc
sub
aad
cs
add
mov
mov
repz
loop
out
lret
das
aam
pop
scas
push
sbb
sub
push
scas
popa
push
xor
fldt
pop
jge
frstor
mov
inc
sbb
or
loope
aas
dec
jmp
popf
ret
xor
cmp
scas
aam
fidivrl
cld
xchg
dec
jp
pop
ja
paddsw
inc
loope
aas
fldl
les
test
iret
dec
xchg
pop
into
imul
jg
dec
adc
outsl
insl
inc
push
xchg
pop
inc
mov
fimull
cmpsb
pop
movsl
sub
dec
push
clc
popa
cmp
mov
jmp
jmp
cmpl
popf
xchg
insb
push
xor
pop
sbb
xchg
movsl
loope
cs
leave
cmpsl
fstpl
loope
cmpsl
mov
rolb
xchg
aaa
mov
test
dec
xor
sbb
orb
iret
push
insl
mov
aaa
hlt
xor
test
je
enter
inc
push
jle
push
push
movsl
cmp
out
xlat
dec
movsb
mov
fcomi
int3
sbb
mov
scas
adc
int3
js
lret
mov
iret
pop
mov
jns
test
xchg
outsl
inc
test
dec
fidivrl
in
xor
das
aaa
xor
je
xor
mov
jg
test
inc
add
inc
xor
xchg
jmp
mov
sub
sti
or
shrl
xlat
gs
cltd
cmp
outsb
cmc
sar
add
in
loop
mov
fs
lret
sub
push
mov
aas
jnp
lea
push
push
pop
mov
mov
aas
adc
pop
mov
in
jbe
iret
xchg
mov
arpl
fdivrs
pop
lcall
jae
push
or
mov
fldenv
idivb
xchg
xchg
push
mov
lahf
lock
or
jle
xor
cmpsb
popf
fildll
idiv
inc
lcall
jae
popa
pop
jg
xor
clc
sarl
cmpsl
xlat
in
adc
out
mov
insb
xchg
aad
sahf
test
push
push
push
cmp
dec
movl
jle
jmp
sub
sti
xor
mov
jbe
aas
jns
or
and
jbe
aas
jns
and
loopne
mov
andb
mov
or
xchg
push
sub
push
in
in
xor
push
iret
sbb
cli
sub
insb
xchg
scas
rclb
sbb
mov
loop
add
push
inc
lahf
sub
test
dec
or
add
cld
clc
xchg
jo
enter
loop
and
add
sbb
les
xor
dec
or
push
cmp
leave
adc
dec
sub
loopne
ds
dec
mov
popa
jg
dec
mov
adc
aad
push
push
dec
or
push
inc
insl
add
add
mov
hlt
dec
mov
aaa
call
ja
xor
bound
push
jo
cmp
xlat
mov
fdivrl
mov
ja
mov
subb
sub
daa
mov
flds
pop
pop
lds
insl
or
jnp
mov
push
pop
dec
loopne
aam
iret
addl
pushf
push
jo
ss
test
jo
lcall
aad
fwait
leave
add
xor
mov
add
lsl
sbb
cmp
cmp
fisubrl
fwait
ds
icebp
mov
cmp
xlat
loopne
sbb
add
je
aad
fidivs
sbb
push
jl
cmpsb
jecxz
les
sbb
inc
dec
mov
sub
sbb
sbb
mov
outsl
xchg
xchg
add
pop
cmp
inc
sbb
mov
push
mov
mov
jbe
icebp
xchg
outsb
cmp
cltd
mov
pusha
jo
cwtl
ret
sub
add
shl
mov
push
dec
repz
test
insb
adc
and
clc
and
loop
push
mov
push
leave
add
test
mov
sbb
sbb
loope
fadds
fs
lods
sub
pusha
jl
fmull
inc
pushf
cmp
cmp
aaa
mov
lods
jg
ss
clc
jae
mov
inc
out
mov
scas
mov
fsub
fs
mov
xchg
adc
insb
repnz
test
push
lods
jno
imul
mov
outsb
sbb
jno
add
clc
jecxz
adc
sbb
cmc
mov
pop
cmpsl
mov
adc
gs
adc
push
cmp
jecxz
lock
ss
roll
mov
test
imul
insl
sbb
inc
lock
jo
cmpsb
jns
cmp
gs
mov
push
mov
pop
aad
inc
es
aaa
push
xchg
or
out
int
lcall
hlt
sbb
mov
das
dec
dec
cli
pop
shll
cld
ret
ret
clc
cld
cmp
jns
inc
iret
shl
cmp
into
addr16
xor
xchg
xchg
xchg
repnz
jecxz
aad
data16
fs
clc
jmp
jp
push
dec
popl
xor
and
xchg
wbinvd
test
bound
aas
out
stc
rorl
sbb
mov
hlt
sbb
xor
shrl
inc
and
clc
loopne
xchg
into
xor
sbb
lret
icebp
jae
fdivrl
lods
orl
out
jg
jmp
lea
pop
sbbl
int3
add
add
or
jbe
jbe
jge
cmp
push
repnz
repz
xlat
sub
cmp
or
lock
jo
inc
jno
pop
or
add
mov
jne
outsl
mov
sub
xor
cmc
cmpsb
dec
adc
mov
in
cmp
testl
not
pop
out
cmpsl
fcompp
arpl
mov
xchg
negl
mov
int
xchg
lods
repz
xchg
push
je
les
cmp
ljmp
cmp
sbb
sbb
shlb
pusha
jge
xor
js
jns
insb
rcr
and
scas
add
popa
add
or
inc
test
test
inc
dec
push
inc
or
add
xlat
rorb
rcll
cmpxchg
shl
xchg
inc
pop
repz
jg
daa
add
jns
mov
pop
in
cmpsb
mov
repz
fisubl
and
addr16
inc
and
fdivr
insb
jl
les
push
aas
outsb
mov
repz
lahf
ss
cmpsb
cmpsb
cmpsb
ss
jnp
imul
lahf
stos
outsb
sbb
aad
bound
aad
dec
adc
cltd
xchg
push
dec
stc
push
mov
xlat
icebp
in
pop
dec
adc
mov
js
push
cmp
sub
cmp
stos
in
xchg
ja
out
mov
add
jo
mov
mov
loop
push
icebp
data16
add
pop
mov
neg
jp
out
in
jmp
mov
fstps
neg
jne
fcomi
test
cmp
in
scas
bound
mov
imulb
cwtl
neg
vmwrite
out
repnz
ret
fnstsw
sbb
inc
xchg
cmp
neg
jl
in
sub
fildl
lods
inc
lahf
inc
mov
mov
mov
inc
add
jne
push
in
mov
jne
or
xchg
xor
inc
mov
mov
fistps
pushl
lods
push
std
mov
outsb
cmp
jnp
push
jmp
mov
insl
cmp
add
and
mov
clc
stos
inc
push
arpl
pop
add
cmpsl
js
cmpsl
mov
in
aaa
xor
jg
mov
arpl
xchg
pop
mov
cmpsb
jp
jge
pop
das
xor
mov
cli
les
popa
and
and
sub
push
mov
mov
cs
jo
xorb
fdivl
ret
jl
idivl
dec
inc
clc
inc
fwait
xor
pop
push
test
xorb
shlb
inc
icebp
rcl
bound
lods
add
add
push
ss
rclb
mov
mov
fists
insl
pop
into
mov
jle
push
lods
jle
and
add
fimull
mov
sub
adcb
jmp
leave
fs
loop
xor
fisubl
fldcw
xchg
imul
cli
xchg
test
ja
mov
sub
and
xchg
divl
fcomi
fcompp
sub
lret
or
pop
fnstsw
das
inc
lret
lret
jnp
xchg
idiv
adc
orl
setb
sub
ds
sub
popl
mov
mov
adc
cmp
jbe
int3
aam
jmp
sbb
push
and
lock
gs
aad
fadds
fildl
movsl
add
add
mov
rcr
loopne
loope
movl
and
xchg
lods
xor
add
int3
lods
mull
jmp
ss
movsb
cmp
pushf
out
ret
push
pop
xchg
mov
call
pop
jnp
mov
loope
int3
jnp
push
sub
mov
fnstsw
cmp
out
ds
not
push
cmc
ret
fnstcw
outsl
outsb
cmp
filds
jecxz
jl
out
mov
inc
out
sarb
mov
testl
push
lret
in
push
mov
mov
pop
pop
adc
fisttps
outsl
bound
dec
cmc
or
sub
xchg
dec
push
int3
sti
jo
std
jo
mov
xor
ds
cmp
xchg
push
lds
stos
push
ret
mov
aam
push
cmc
mov
insl
scas
mov
cmp
mov
xchg
sbb
aam
stc
aaa
mov
std
ds
aad
fcmovu
pop
clc
jmp
sahf
xchg
pop
inc
lods
push
jbe
int
and
mov
in
sub
ljmp
cmp
pusha
subb
out
repnz
aaa
popa
data16
xchg
jl
mov
pop
dec
andl
xchg
test
mov
jmp
dec
fwait
js
test
mov
test
xor
adc
fldl
dec
add
sarb
push
aaa
rol
jle
jg
addl
cmp
fstpt
xor
mov
add
das
adc
mov
sarb
pop
push
or
xor
mov
dec
pop
push
or
xor
pop
cltd
add
cs
pop
xor
fildl
pop
sub
pusha
pop
cmpsb
add
mov
cmp
xlat
add
add
stos
or
flds
dec
or
add
add
pop
sub
pop
sahf
or
add
lret
std
and
lods
clc
das
roll
cmc
loopne
repnz
mov
clc
das
xlat
add
or
sbb
jnp
pop
mov
mov
shll
das
xchg
testl
das
mov
add
loopne
fwait
in
mov
mov
mov
cmp
jle
js
pop
push
das
insb
or
loopne
test
nop
or
and
jl
pop
inc
pop
cmp
out
in
out
ret
jmp
xor
jnp
pop
lret
mul
mov
sub
les
add
fcoml
jbe
pusha
shrl
outsl
shrb
sub
lahf
call
push
cli
or
xor
mov
pop
xor
xchg
pop
js
in
or
mov
jo
or
adc
cmp
mov
nop
pop
test
leave
xor
mov
mov
loopne
outsb
add
pusha
pop
lods
pop
ret
add
pop
pusha
sub
call
sbbb
loopne
cmp
pop
ret
add
stc
and
das
push
or
sub
jno
mov
mov
mov
xchg
add
out
jb
mov
into
and
jnp
pop
rcrl
fcoml
or
movsl
add
das
xchg
lahf
add
mov
call
int3
push
test
push
push
sub
into
ficoms
or
roll
sarl
scas
or
mov
xor
jle
decb
lret
loopne
sbb
or
sarb
or
xor
mov
mov
fildl
jmp
pop
das
xchg
in
cli
add
jbe
filds
stos
or
jge
ficoms
add
jns
or
and
and
ret
js
pop
popf
insb
pop
lret
and
mov
add
cmpl
adc
das
outsb
or
cmp
lahf
or
bound
sub
sub
mov
iret
adc
hlt
sbb
loope
outsl
cmpb
sbb
sbb
cmp
mov
clc
pop
add
sbb
push
jae
jae
pop
add
mov
sub
popl
add
push
subb
add
push
and
dec
sub
sub
push
add
movsb
sub
add
push
inc
std
in
fistpll
jae
iret
jae
aaa
xor
outsl
inc
mov
or
pop
mov
or
jmp
pop
and
testb
mov
lods
adc
orb
add
lock
shlb
testb
sub
cmp
test
inc
push
push
fstpl
addr16
mov
inc
testb
xor
mov
xchg
aaa
and
xchg
cmpsl
ss
mov
pop
je
cld
setne
mov
jg
out
sbb
inc
jle
pop
jnp
bound
dec
inc
aas
or
test
stc
pop
cld
insl
mov
or
xchg
fstps
push
push
ss
in
cmpsl
imul
ljmp
pop
mov
in
mov
leave
rol
test
rol
aad
test
ljmp
jb
jne
inc
jle
call
xchg
jle
mov
jecxz
ljmp
outsb
lcall
stc
jns
aas
repz
cwtl
jmp
mov
pop
cli
mov
mov
jbe
pop
cmp
xchg
mov
lret
jb
fistpll
js
pop
cmp
xchg
es
rcr
repz
cmp
push
loop
das
pop
add
ret
fcomps
test
jo
add
cmp
and
xor
jmp
leave
jns
cmp
fimuls
cwtl
jle
aam
scas
push
pusha
fiadds
data16
pop
cmp
mov
imul
mov
mov
xchg
subb
ret
sub
ljmp
sarb
nop
enter
loopne
xchg
cmp
xchg
clc
fs
aad
mov
mov
inc
popa
or
pop
mov
iret
rorb
loopne
ret
lods
or
pop
orl
fdivs
movsl
or
jae
pop
push
jo
and
outsb
daa
inc
mov
clc
ss
xchg
sbb
ret
jmp
jbe
int3
sub
in
test
loope
sub
and
sbb
mov
pop
lea
adc
mov
add
add
icebp
sbb
in
inc
mulb
lret
or
or
or
and
mov
mov
fmuls
rolb
enter
call
and
icebp
sbb
mov
and
loopne
clc
and
rcrl
test
cmpsl
adc
mov
and
dec
lock
or
test
js,pt
sahf
and
lods
or
mov
inc
mov
xchg
adc
or
add
add
js
fisubs
cmp
sahf
or
test
ss
sbb
mov
inc
jb
push
adc
bound
rcrl
xor
and
lcall
icebp
sbb
mov
inc
bound
dec
adc
bound
sbbl
mov
aad
cmc
inc
cmp
sbb
popl
les
xor
test
push
and
mov
bound
pop
xlat
adcb
add
or
inc
dec
jecxz
pop
or
inc
jp
push
test
out
add
mov
add
inc
push
sub
and
ret
in
and
fcomps
outsl
jmp
test
scas
mov
inc
dec
rcrl
iret
jmp
pop
sub
push
lret
pop
test
shl
mov
daa
sub
add
cld
mov
mov
push
test
inc
daa
shll
call
push
dec
add
loope
or
lahf
pushf
pop
ss
jmp
lret
mov
jae
jl
fs
popa
mov
adc
and
cmpsl
lcall
bnd
push
movb
rcrl
cmc
mov
sbb
fisttpl
mov
je
mov
pop
stc
fmuls
mov
push
iret
xlat
shll
cmpl
jns
test
je
test
loope
and
xor
push
push
cmp
xchg
adc
bound
push
push
lods
lods
mov
mov
mov
je
popa
sti
shrl
fimuls
mov
into
lea
into
mov
cmp
sbb
sbb
rcl
out
jg
ds
jmp
xor
xor
je
jne
out
popa
imul
repz
aas
out
mov
rcl
mov
jae
rcl
out
inc
jg
push
jle
jnp
xor
xor
cmpsl
std
push
lcall
lea
jl
xor
dec
cmc
stos
sbb
fidivs
lods
cwtl
rclb
mov
jge
dec
pop
out
cmpsl
sbb
add
out
sarb
sub
inc
ret
add
out
mov
jmp
std
push
cmpsl
sbb
fisubrs
pusha
stc
push
xlat
lcall
xchg
das
lret
into
mov
ffreep
mov
sbb
lcall
in
in
aaa
outsb
movsl
lods
lea
xchg
jl
cltd
or
push
test
mov
loop
cmp
lock
push
lds
cmp
sub
adc
pop
stc
jp
mov
sahf
cmc
pop
cmp
dec
jecxz
fucomip
insb
dec
scas
cmp
iret
jge
in
sbb
stc
xchg
aad
push
inc
xchg
inc
stos
inc
lods
lahf
fcomip
mov
jl
xchg
xor
sub
jmp
sbb
pop
bound
div
test
insl
rorl
inc
rcrl
icebp
lret
pop
scas
dec
sub
lods
and
dec
insl
icebp
cli
sbb
xlat
lods
push
or
push
xchg
test
mov
imul
cmp
push
pushf
leave
iret
xchg
xchg
mov
das
mov
mov
insb
lret
popa
je
imul
mov
or
scas
mov
push
pop
jg
xchg
mov
in
pop
ja
fadd
lea
lock
test
call
xlat
adc
push
mov
in
jp
fldt
imul
aam
inc
mov
nop
test
ret
mov
xchg
mov
fidivrl
sbb
scas
js
pop
jge
mov
or
xchg
in
sub
jno
inc
sub
out
mov
aad
out
int
shll
jns
movsl
sbb
aam
dec
and
lea
test
xchg
jg
lock
mov
aam
popf
jge
scas
mov
dec
push
dec
fdivr
dec
ss
push
popa
xchg
push
mov
loopne
cmpsb
icebp
and
jl
cmpsl
ljmp
jnp
fisubrs
leave
push
loope
stc
imul
cmpb
mov
shrl
mov
pop
cltd
loope
je
lds
xchg
cs
and
xor
aas
push
lea
lods
mov
mov
sarl
ficomps
out
aas
mov
loopne
pop
hlt
sbb
mov
pop
in
in
jp
lea
inc
jecxz
sub
pop
lahf
push
scas
jmp
pop
leave
jo
mov
fs
sti
or
xchg
xchg
addr16
out
adc
jg
shlb
cmp
cli
std
ret
and
cmp
movsl
leave
movsl
ds
test
outsl
test
mov
sub
cmp
arpl
or
add
dec
lret
adc
aad
add
xor
inc
push
mov
insl
sub
push
mov
sti
cmpl
cmc
insb
stc
jbe
sbb
adc
xor
es
jae
ja
loope
andl
cli
xchg
or
ja
cmpsb
jg
arpl
adc
xor
cli
fcomip
ja
movsb
lods
lods
sub
fnstcw
mov
pop
js
int
movsb
out
cmpsl
cltd
roll
loopne
dec
cmp
sub
pop
ret
lcall
leave
adc
imul
out
jmp
pop
dec
stc
sbb
jg
inc
sub
pop
stc
push
leave
test
in
cmpsb
lret
jbe
in
jp
out
stos
mov
mov
and
je
lds
dec
jge
mov
pop
shlb
jl
aad
fidivs
imulb
in
movsl
add
bound
iret
cmpsl
pop
leave
jl
push
loope
mov
pop
push
sub
jno
ljmp
mov
pxor
sbb
idiv
mov
jle
int
push
dec
repnz
mov
jb
cmp
int3
sub
ret
xor
scas
into
sbb
pop
ds
fisubl
inc
rorb
and
inc
repz
xlat
dec
push
fsubrs
inc
mov
cmc
int3
mov
out
cmp
mov
push
jg
cmp
sahf
xchg
cmp
mov
cwtl
push
jne
sarb
xor
not
pusha
jecxz
cmpsl
push
pop
and
cltd
jmp
sahf
out
push
cs
mov
or
enter
jns
lcall
adc
das
cmp
cmpsl
inc
in
xchg
cmp
dec
push
mov
xor
jl
adc
mov
cmpsb
aaa
lahf
lcall
dec
cmp
lea
rcr
dec
xchg
je
adc
lock
mov
sbb
cmp
in
cmpsb
xchg
out
push
fisttpll
sub
push
mov
imul
movsl
scas
aad
and
ficoms
int3
loope
mov
cmp
push
mov
jnp
mov
imul
fidivl
out
xlat
sahf
out
out
sarl
cmpsb
cmp
xchg
mov
xor
mov
insl
xor
jle
jbe
jmp
xchg
mov
movsl
cmc
or
mov
xchg
fmul
in
stc
adc
shl
in
push
inc
popa
adc
jmp
mov
lods
and
fisubl
mov
ret
cmp
sbb
lock
jl
dec
and
jns
pop
loop
xchg
sub
sub
or
cli
lods
cltd
inc
mov
mov
mov
aaa
sub
aam
das
dec
ret
lods
out
pop
outsl
fwait
lahf
push
mov
sbb
pop
sahf
cli
stos
mov
xchg
mov
sahf
mov
adc
dec
in
fwait
movsl
movsl
xlat
mov
and
jmp
call
sbb
fnsave
jge
xlat
outsb
frstor
cmp
sub
jns
icebp
shrb
push
loop
les
nop
xchg
addl
cmp
arpl
pop
divl
lods
ficoml
add
pop
fadds
jge
adc
dec
scas
imul
lods
lret
divb
gs
jne
stos
icebp
in
jecxz
clc
aad
rcll
call
fldl
cmc
ror
fistps
mov
aas
push
loopne
test
aaa
leave
xchg
push
repnz
icebp
pop
rcr
mov
jle
test
sar
push
sbb
pushf
xchg
mov
push
sti
inc
addr16
loop
aam
dec
inc
call
dec
leave
dec
jb
loopne
adc
fldenv
inc
fistl
loop
jne
or
leave
roll
bnd
mov
jae
pusha
imul
fsub
cs
int
inc
xchg
jp
adc
imul
jp
lds
out
jno
lcall
popa
mov
lds
xor
jl
push
pop
and
pop
into
jg
sbb
aas
and
out
dec
pop
shr
xor
ds
pop
lock
aaa
lock
adc
cmovae
xor
pop
negb
dec
stos
mov
xchg
sub
mov
icebp
dec
outsb
test
push
adc
shll
ss
hlt
cmpsb
in
insb
aaa
fldcw
push
mov
scas
loop
dec
aaa
xchg
mov
mov
mov
push
cs
cmp
dec
rclb
rclb
rorl
test
dec
cmp
cmp
or
sub
mov
rorl
xor
xchg
and
mov
call
mov
dec
into
lods
mov
adcl
pop
icebp
stos
mov
sahf
jg
sub
sbb
pushf
sbb
stos
pop
lcall
test
sub
ja
out
jb
sbb
jb
xor
push
stos
pop
adc
out
xchg
dec
aas
nop
push
ljmp
cs
fisubrs
fisttps
xor
mov
mov
ficompl
pop
mov
outsl
cwtl
or
mov
popf
je
lret
pop
test
mov
outsb
adc
out
jbe
sub
aad
repz
sub
das
ss
cmp
filds
mov
je
xchg
mov
shr
clc
sub
lods
fistpl
and
lods
mov
mov
test
xor
sbb
dec
jle
cmp
mov
cld
sbb
aas
pop
out
fmulp
cmc
xor
xchg
cmp
pop
loop
sti
nopl
enter
push
mov
imull
mov
mov
out
jno
pop
cmc
cmp
sahf
dec
lods
sti
inc
iret
pop
leave
pushf
xlat
aam
repz
push
xlat
fldl2e
outsl
sbb
cmp
ja
dec
pop
dec
bswap
icebp
int3
cmpsl
jp
jecxz
push
lret
in
mov
sbb
movsl
xor
insl
scas
jnp
or
xor
jl
xchg
add
out
jmp
pop
jge
inc
cs
adc
jne
fnstenv
fdivrl
mov
outsl
and
fdivr
sarl
ret
popa
in
xchg
rcrl
adc
adc
in
fcomps
pop
fmull
push
aaa
lret
inc
aaa
adc
xchg
mov
fsubp
sbb
mov
rclb
mov
scas
fcoms
incb
aas
mov
mov
jle
lods
in
fistl
addl
jp
sar
into
loope
lret
pop
out
cwtl
mov
test
mov
dec
jne
sbb
or
jmp
lcall
cwtl
mov
mov
lahf
popl
dec
jno
in
mov
xchg
jne
cld
int3
push
out
mov
mov
scas
fidivl
iret
lcall
push
cmc
inc
fcmovb
in
xor
cmc
push
or
lret
jge
jecxz
repz
xchg
mov
and
inc
repz
push
mov
je
cmpsl
out
in
xor
jns
xlat
je
jmp
jno
jne
insl
int3
sahf
dec
mov
out
xor
in
jno
pop
xor
sahf
adc
pop
add
jnp
hlt
outsl
fldcw
lcall
dec
iret
daa
outsl
fwait
imul
lds
icebp
dec
int
in
and
bound
imul
les
inc
fstp
adc
test
icebp
pop
movsl
rclb
lahf
xor
mov
push
stc
and
das
mov
fisttpll
cli
cld
adc
sub
cmp
pop
add
mov
lahf
arpl
mov
jmp
shll
mov
cmp
jnp
ret
mov
fadd
cld
mov
fwait
outsb
xor
mov
or
xlat
subb
push
insb
out
cmp
pop
sbb
xchg
cltd
jno
loope
in
mov
and
insl
std
in
out
in
jmp
jecxz
mov
out
mov
push
stc
out
xor
pop
xor
mov
ffree
test
pop
int
insb
sahf
push
fbld
out
push
stos
jnp
dec
jne
repz
or
cmpsl
fwait
inc
arpl
sahf
push
popf
xor
imul
fbstp
je
sbb
out
imul
mov
les
add
cmc
inc
push
add
xchg
test
push
repz
xchg
out
std
mov
out
fdivrp
dec
rcrb
cmpsl
in
sub
outsb
lcall
inc
add
sub
iret
sub
negb
std
push
pop
das
lock
out
mov
jmp
inc
mov
mov
lock
jns
ss
dec
xor
stos
shl
lret
lock
sbb
sub
mov
ss
mov
inc
fisubl
scas
pushf
scas
pop
jle
push
fwait
dec
xchg
loopne
mov
or
mov
pushf
xchg
fcoms
or
jg
in
sub
pop
cmp
repz
test
ss
gs
fwait
adc
inc
pop
aas
xchg
jne
push
jno
popa
int
movsw
fs
dec
inc
sub
das
mov
loope
ficoms
cmp
ljmp
sub
fdiv
lds
fsubs
sahf
leave
dec
repnz
xchg
mov
lahf
rclb
mov
jb
push
push
cltd
push
push
imul
imul
cmp
repz
dec
mov
inc
fildl
ds
add
jne
out
ljmp
shrl
mov
dec
fldenv
jne
pop
in
push
dec
rcrb
mov
sub
push
push
jmp
jbe
dec
xchg
scas
pop
inc
pop
cmp
xchg
test
inc
aam
pop
repz
sbb
scas
inc
mov
sub
xor
push
mov
push
dec
mov
mov
jmp
fidivl
or
fldenv
dec
xor
jg
cld
hlt
sub
or
das
sub
sub
xchg
insb
push
jne
sti
fistpll
cmp
pusha
lods
dec
sbb
jl
inc
dec
fildl
mov
cmpsb
or
jne
es
out
testl
push
cmp
push
out
notb
push
jne
fidivl
aaa
jae
shl
into
xor
jl
aas
jbe
jb
subl
stos
push
imul
iret
mov
mov
sarb
xor
fsub
push
lahf
movq
in
loopne
lret
bound
test
mov
jo
dec
fstp
popf
add
shrb
scas
push
cs
sarl
je
clc
shrl
outsb
inc
dec
push
jp
fdivl
cmc
jle
and
mov
icebp
adc
fimull
lods
cmp
jbe
sub
shll
dec
jno
repz
in
cmpsb
add
in
adc
out
clc
rcrl
divl
test
scas
flds
clc
daa
pop
ret
fistl
pop
mov
adc
in
cli
push
out
test
mov
and
xlat
fidivs
je
mov
dec
pop
pop
pop
lret
mov
not
push
dec
xchg
sarl
repnz
data16
jmp
push
xchg
lahf
int3
aad
adc
out
into
xchg
cmp
xor
sbb
insl
leave
outsl
shll
insb
call
mov
mov
pop
aam
in
xchg
sbb
scas
into
lahf
jmp
int3
bnd
xchg
sbb
push
lods
aam
pusha
cld
jmp
std
push
xor
or
pop
adc
mov
aad
push
cwtl
cltd
pop
xchg
fsub
sub
clc
icebp
pop
push
rorl
orl
ja
dec
mov
out
push
inc
mov
dec
arpl
ja
call
sahf
jp
mov
pop
rsqrtps
int3
jge
pop
mov
xor
in
push
shr
stos
mov
sbb
adc
mov
inc
mov
jl
pop
aad
scas
mov
dec
imul
out
xchg
mov
movsb
popf
in
sbb
jne
cmpsl
jmp
mov
je
add
out
lds
xor
cmpsb
daa
cmp
das
push
stos
xchg
mov
lahf
jg
test
mov
inc
lods
ja
mov
repz
sahf
pop
dec
xor
inc
mov
push
into
notb
fadd
mov
aam
pop
pop
ret
frstor
jge
mov
cmp
xlat
cmp
das
scas
push
sub
fcompl
repnz
fistl
rcrl
cmpsl
push
mov
not
dec
jg
mov
hlt
xor
enter
jge
mov
out
cmp
push
push
pop
notb
rep
pushf
lea
in
sub
jge
pop
scas
shrb
fldcw
lret
popf
mov
mov
xchg
iret
fisttpl
mov
ja
xor
mov
scas
loopne
iretw
imul
mov
adc
stc
scas
pop
pusha
push
lcall
stc
cli
les
push
push
shll
cmpsb
xchg
inc
xchg
pop
pop
arpl
cmp
adc
lret
ss
mov
int3
shll
movsl
in
js
mov
cltd
inc
jmp
insb
jge
adc
dec
aam
cmp
xchg
stos
ret
xchg
lds
test
insb
and
les
sahf
repnz
test
jno
scas
mov
lea
push
out
fldt
test
mov
lret
icebp
std
lea
sbb
cmpsl
cs
call
xor
or
mov
loop
out
aad
sub
insl
mov
xor
call
add
mov
jmp
stos
sbb
lret
sahf
in
arpl
outsb
in
out
ja
shl
cmp
fidivs
pop
outsb
or
or
xlat
psubusb
rcrb
inc
sub
push
xchg
xor
test
and
cmpsl
jmp
lcall
jp
mov
hlt
aas
sub
jg
jns
mov
pop
aad
push
into
mov
pop
pop
stos
jle
stos
mov
mov
imul
mov
ja
dec
jle
mov
jle
push
sbb
fwait
xor
sbb
pop
xchg
add
dec
cld
mov
dec
mov
rcll
cmc
jno
sub
mov
inc
mov
pop
pop
cmp
sti
pushl
cld
jle
stos
push
add
mov
rcrl
push
pushf
jns
push
mov
pushf
mov
in
pop
vmovaps
push
das
ja
je
sbb
push
fbld
repnz
rcll
jmp
mov
cld
sarl
in
jo
fbld
cmp
arpl
dec
hlt
stos
sbb
mov
mov
jmp
adc
pushf
xchg
rcll
dec
clc
mov
xor
ret
sub
out
push
jae
sub
scas
mov
cmpsb
nop
sbb
ds
lahf
push
outsb
xor
ret
mov
mov
loop
mov
out
adc
stos
pop
out
push
aas
sbb
addr16
cmpsb
mov
aam
xchg
xchg
adc
jmp
xchg
daa
lcall
sbb
pop
and
mov
fld
fnstcw
fwait
stos
mov
popf
cli
jle
test
pop
mov
int3
adc
xor
insb
dec
and
xchg
repnz
cmp
jmp
cmpsl
cmpsl
dec
sub
pop
sbb
and
lret
mov
adc
and
cmp
das
data16
outsb
out
sbb
aam
xchg
xor
sub
cwtl
scas
test
lods
jns
mov
pop
ficomps
pmullw
iret
dec
push
or
aas
push
lcall
push
sub
fcoml
imul
sub
lea
lea
daa
in
das
or
add
pop
inc
sbb
cli
pop
dec
cmp
ds
rcll
test
xlat
pop
sarb
jle
sub
in
pop
ret
pop
shrl
jnp
out
in
cmp
sub
xor
push
sbb
jl
add
or
sub
arpl
sub
sbb
inc
rcr
xchg
inc
inc
repz
jecxz
adc
packuswb
repz
data16
cmp
lea
push
lret
or
xchg
arpl
sbb
xor
fisttps
jmp
sub
xor
aad
mov
idiv
das
mov
fwait
lcall
das
mov
cmpsl
mov
in
dec
je
inc
dec
data16
and
inc
pop
outsb
andb
pop
rcrb
repz
jp
je
dec
cmpsl
dec
lret
cmpsl
push
shll
mov
and
push
push
fwait
pop
xor
sahf
push
jnp
jge
jae
pop
test
xor
and
xor
push
lret
xor
jmp
or
test
popf
cmp
test
dec
mov
push
dec
xchg
mov
cmp
or
cmpsl
sub
pop
xor
hlt
aam
or
xchg
outsb
cmpsl
push
mov
xlat
adc
jno
xlat
xor
push
pop
inc
shll
lahf
popa
pop
les
addr16
les
arpl
leave
sbb
sbb
mov
and
mov
and
leave
pusha
inc
pop
mov
mov
ret
hlt
push
push
pop
jl
mov
pop
dec
and
mov
jmp
mov
dec
inc
pop
pinsrw
mov
mov
imul
mov
inc
decl
pop
bound
out
pop
scas
sahf
pop
pusha
xor
mov
into
lea
mov
ret
add
mov
cmpsl
popf
test
in
lret
aaa
insb
xchg
and
or
shl
xlat
lcall
pop
jb
dec
mov
xchg
push
xor
push
jecxz
jns
fnstsw
sub
sub
lods
inc
and
mov
cmpl
aam
mov
lock
cwtl
mov
into
mov
addr16
imul
adc
cli
pop
popa
push
addb
xchg
cmp
mov
inc
imul
popf
arpl
mov
aad
jne
divl
repz
aad
aam
adc
std
test
out
jo
add
mov
imul
or
dec
mov
xchg
pop
pop
es
jmp
int
push
jb
dec
notb
bound
loope
xchg
xchg
inc
ret
lods
lcall
lret
in
jno
jns
xor
xchg
sbb
jmp
push
mov
les
mov
pop
pushf
clc
divb
jmp
adcb
sahf
jl
iret
mov
sbb
addb
out
push
outsb
xor
jbe
sbb
out
pop
dec
mov
sub
aam
mov
push
and
cltd
repz
pop
jecxz
rorb
add
push
jmp
push
lods
aad
mov
in
cmp
mov
cli
jae
lret
pop
pop
pop
aam
lds
mov
mov
xor
loope
mov
adc
push
insb
popf
fstl
mov
push
loopne
pop
mov
xor
insb
int
jno
or
mov
inc
lret
loope,pt
aam
lret
xor
sub
pop
or
lds
mov
xor
adcb
sahf
cmpb
movsl
jb
cmp
stos
jo
pop
pop
mov
mov
fnstcw
and
pop
mov
jp
xor
mov
outsl
inc
test
adc
cmc
leave
push
mov
cmp
lret
cli
lret
insb
sub
and
mov
jl
xor
dec
xchg
sub
jne
mov
pop
add
mov
sub
rclb
push
in
push
mov
aam
pop
push
jne
jmp
fwait
push
sub
xchg
psubusb
arpl
repz
inc
jmp
dec
pop
notl
pop
inc
arpl
frstor
icebp
jecxz
push
in
dec
jbe
xorl
fs
push
mov
dec
mov
cmpsl
mov
ficoml
sbb
cmpsl
lea
jnp
push
pushf
leave
push
push
fwait
sbb
lahf
push
lock
ss
and
mov
lret
push
mov
inc
xchg
inc
in
bound
cmc
push
mov
stos
imul
mov
movsl
and
sub
aas
repnz
outsb
mov
repz
xchg
cmp
cmc
cmp
scas
daa
lods
inc
lods
stc
pop
lods
inc
jecxz
scas
movsl
jno
xor
imul
pop
inc
xlat
enter
das
repnz
cmc
outsl
mov
pop
out
insl
test
repz
push
dec
ds
fistpll
cmpsl
mov
inc
or
out
repnz
cmpsl
outsl
dec
pop
mov
imulb
arpl
negb
out
mov
ret
in
outsl
inc
sub
pop
mov
in
push
das
xor
mov
out
or
shll
in
xchg
pop
lods
jmp
lods
push
in
out
push
negl
mov
dec
fsubrl
lcall
jbe
push
xchg
or
dec
mov
stc
inc
movsl
rcll
mov
jmp
jbe
repz
sbb
xchg
das
add
fcomip
test
jae
pop
xor
jge
loopne
test
mov
sbb
cmp
push
js
mov
dec
imul
fisubs
sarb
mov
daa
loope
sbb
arpl
rorb
dec
cmpsl
sub
nop
or
cltd
push
xchg
cmp
clc
je
sub
xor
in
cmp
cwtl
out
sbb
jle
xlat
pop
clc
mov
lods
int
mov
arpl
jns
jnp
insb
xchg
xchg
inc
insb
mov
sbb
cmpsb
fs
jg
jg
shll
push
fs
stos
sti
jbe
iret
pop
push
stc
stc
cs
mov
stos
mov
test
or
scas
es
in
mov
test
shl
mov
mov
scas
and
popf
mov
test
xor
jmp
adc
cmpsl
stos
jmp
insb
fwait
incl
xor
icebp
jnp
and
or
es
int
leave
scas
scas
and
xchg
call
xor
scas
mov
adc
jbe
jl
and
leave
pop
sarl
imul
pop
ret
jmp
rolb
enter
jnp
adc
jge
ret
lock
inc
cmp
lret
insb
push
jp
fdivl
call
dec
popl
sbb
mov
call
add
in
sbb
mov
into
stos
pop
push
cmp
rol
sbb
int3
cmp
out
into
adc
mov
test
test
fisubrs
cmc
dec
negl
xchg
mov
jecxz
outsl
fcomip
push
imul
jp
jecxz
shrl
imul
cmp
jnp
push
sbb
mov
sub
lret
push
shl
jge
or
dec
jmp
movsb
ljmp
jge
jb
jecxz
je
ret
movsb
sti
xchg
rol
jbe
stos
das
mov
adc
fsubrl
lret
xchg
lahf
jg
xchg
push
or
mov
scas
cmp
pop
jmp
push
jmp
stc
inc
jmp
iret
push
sbb
fistl
push
push
jge
out
mov
or
xchg
sub
push
fdivr
repz
and
call
gs
ljmp
push
int
dec
xchg
mov
in
xchg
mov
notl
mov
scas
inc
out
xchg
mov
int
sahf
les
or
push
dec
mov
outsb
push
fildll
sbb
mov
inc
jae
mov
sahf
add
xor
addb
or
adc
stc
in
push
stc
fstpl
data16
cmp
and
movsb
stos
sbb
pop
pop
stc
imul
fstpl
xchg
in
mov
pop
outsl
and
sub
movsb
mov
jns
je
sub
sub
dec
out
jno
dec
jne
pop
leave
add
mov
jb
dec
mov
jecxz
mov
xchg
cmp
in
adc
and
dec
out
adc
repnz
bound
ficompl
sti
stc
into
push
adc
sbb
add
aas
and
out
jne
lret
in
fst
dec
out
mov
adc
insl
or
lahf
sarl
movsb
jle
dec
mov
out
dec
arpl
and
ret
das
addr16
pop
push
cmpsl
and
sub
lea
mov
sub
fnstcw
sbb
in
dec
out
pop
mov
ljmp
push
cmp
setb
leave
dec
inc
fnstsw
idivl
add
fistpll
sub
sub
xor
arpl
sbb
cmpl
add
icebp
mov
lods
lcall
popf
xchg
repz
repz
push
sti
cmp
enter
pop
int
xor
jns
jl
and
test
ds
push
aad
fidivs
dec
stc
xchg
icebp
mov
aam
pushf
lea
fwait
xchg
mov
shll
mov
push
clc
xchg
xor
sbb
scas
sbb
rolb
es
fcmovnb
aam
ds
xor
mov
jp
dec
and
cmp
pop
xchg
xchg
pop
mov
fisubrl
js
sbb
jae
js
or
cmp
mov
fsubr
jb
dec
xlat
jbe
jl
idivb
fld
jo
test
xor
aam
lret
push
outsb
in
xchg
add
jle
lock
insb
ffreep
mov
fsub
dec
lret
xchg
add
mov
popf
pop
xchg
bound
outsl
cmp
mov
es
ror
add
sbb
cli
push
jnp
xor
addr16
lret
xor
mov
xor
inc
scas
adc
imul
jnp
nop
fs
mov
push
xchg
outsb
pop
mov
cli
mov
or
cmp
jb,pn
jmp
les
pusha
les
fcoml
out
arpl
fdiv
mov
jge
rcll
cmpsb
or
test
call
mov
sub
call
stc
xor
cs
xchg
sub
imul
or
jo
rcl
fildll
mov
lret
mov
stos
mov
jno
pop
push
ja
and
icebp
cli
adc
sahf
jg
movl
mov
popa
xchg
jae
ret
pop
xchg
jge
sbb
cmp
sbb
push
aad
cltd
lret
mov
mov
pop
fdivrl
jmp
push
or
lock
out
lret
push
jp
mov
ja
xchg
jo
pop
xor
jbe
adc
push
leave
jae
jg
scas
aam
in
adc
add
imul
xchg
test
sub
jno
jge
int
lods
pop
pop
loop
fcoml
jg
mov
popf
mov
xchg
jns
mov
ljmp
jo
inc
sti
ss
pop
rcl
xorb
cmpb
adc
jecxz
fs
mov
jmp
add
imul
push
or
add
fwait
stc
push
xorb
sbb
clc
addl
movsl
lcall
arpl
fisubrl
jns
xor
push
out
jp
stos
xchg
sub
std
push
sub
pop
repnz
cmc
mov
xor
push
repnz
cmp
popa
sahf
push
mov
mov
dec
xchg
push
int
lods
fsubs
mov
cld
pop
jns
mov
push
jmp
push
das
inc
jp
xchg
iret
pop
mov
mov
dec
clc
lahf
fisubs
fsubl
jnp
mov
push
or
test
dec
pop
jg
iret
aam
stc
sub
cmpsl
fs
jp
mov
adc
jns
add
pop
popf
jp
jns
js
negb
push
subb
repz
divb
cli
fldenv
stos
sub
xor
in
repz
imul
xchg
mov
xor
and
pop
pop
mov
icebp
xchg
jle
mov
insb
inc
mov
fidivs
jae
mov
pop
jecxz
repz
pop
outsb
add
je
sti
cli
cmc
inc
pop
mov
dec
mov
pop
jno
push
push
pop
fidivl
jnp
jno
gs
fcoml
sarb
jbe
imul
aaa
cmp
das
xor
xor
xchg
mov
xchg
leave
push
inc
lahf
cmc
scas
scas
daa
aad
addr16
xor
aam
and
add
inc
xor
or
mov
cmc
inc
icebp
add
int
cmovge
cmp
xor
fadds
push
add
hlt
sti
pop
enter
pop
popf
pusha
dec
sti
stos
jns
aaa
jno
pop
cld
mov
icebp
mov
cmp
aad
stc
lahf
push
stos
xchg
icebp
cmp
jecxz
push
mov
cmp
int
cmp
in
hlt
mov
pop
repz
pop
jmp
cmpb
shl
dec
ret
ja
bound
jge
push
stos
or
inc
lods
or
dec
ret
das
jmp
addb
sub
add
or
dec
ret
shr
lods
push
mov
push
cmp
movsl
test
cmp
mov
ficoml
jg
sbb
pushf
lods
pushl
and
jl
push
sarl
ret
sahf
adc
xchg
xor
leave
lock
cmpsl
shl
ds
popf
jmp
enter
xchg
aaa
lods
shll
add
hlt
in
xor
cmp
or
pop
hlt
clc
out
dec
pop
jns
imul
jmp
pop
xchg
mov
test
xchg
hlt
out
je
cmp
ljmp
fstpt
repz
mov
out
fldenv
outsl
decl
hlt
mov
cmc
scas
out
addl
jno
adc
sarb
out
cmp
push
push
push
push
push
pop
pop
push
cmp
in
mov
lds
roll
mov
push
jecxz
fcompp
in
test
icebp
cmp
mov
les
push
ret
bound
in
negl
xchg
xchg
movsl
mov
es
or
fcmovu
fsubp
loop
out
fistpll
imul
push
jl
dec
jl
inc
sbb
mov
popf
leave
pop
in
mov
jp
jle
xchg
scas
leave
pop
pop
pop
in
push
stc
in
sub
outsb
scas
out
xor
mov
cs
ret
daa
jmp
xchg
idiv
out
out
xchg
movb
gs
gs
icebp
xchg
inc
dec
loope
sahf
insb
push
pop
stos
dec
sub
push
cmp
out
pushf
in
mov
sub
mov
cs
pop
pop
xchg
dec
sbb
mov
sti
jecxz
outsl
std
xor
xor
outsb
push
call
idiv
daa
in
sti
sbb
lret
aas
mov
jne
hlt
fidivl
nop
call
loope
frstor
add
adc
lock
enter
xchg
jmp
sbb
test
and
mov
inc
dec
dec
jo
aas
out
inc
and
in
jo
cld
push
out
lret
add
test
roll
enter
xor
pop
inc
out
adc
cmp
fcmovnu
or
inc
dec
mov
jns
sbb
outsb
inc
andb
mov
dec
mov
test
xchg
and
sbb
mov
adc
push
ficoml
mov
repnz
movb
int
mov
push
std
mov
nop
stos
push
fistpll
fiaddl
ret
sbb
vmovsldup
inc
arpl
or
inc
mov
jmp
aas
sub
pop
jge
repnz
das
pushw
cmp
aaa
mov
int3
mov
and
adc
inc
fiaddl
xchg
inc
sbb
inc
fcoml
popa
xor
jg
ss
divb
mov
stc
xchg
mov
push
xor
insl
mov
repnz
or
dec
rorb
pop
test
fwait
sbb
inc
mov
dec
test
stc
dec
stos
add
and
jg
in
cmpl
push
cmp
sarb
add
mov
in
sahf
and
out
aad
test
icebp
mov
add
call
xor
xor
addb
int3
inc
mov
xor
mov
jae
fs
shlb
ds
xchg
mov
inc
hlt
xor
sbb
ret
orl
push
clc
and
jb
call
and
ja
setb
or
dec
mov
ret
les
jl
sbb
mov
rorl
sub
bound
lock
outsb
push
push
out
sub
mov
daa
pop
pop
add
pop
mov
xorl
fildl
sbb
jle
mov
ja
sbb
ret
roll
shll
in
subl
or
mov
mov
push
jg
push
cmc
ret
sbb
cli
mov
imul
xchg
adc
dec
pop
pop
jge
pop
enter
daa
repz
incb
pop
test
cmp
pop
and
sub
xlat
cmp
xchg
adc
inc
fcoml
xchg
mov
hlt
loop
int3
sbb
or
or
addr16
daa
shll
fildl
adc
adc
xor
add
mov
inc
mov
pop
in
jg
sub
xor
push
sub
cmp
mov
and
push
sub
jmp
sub
clc
mov
add
loop
jl
fld
xor
push
sahf
rol
or
test
lods
adc
mov
add
push
cmp
and
orb
pop
rcrb
mov
adc
cmp
imul
fnstenv
repnz
adc
test
pop
in
inc
clc
xchg
fs
lret
adc
dec
xlat
out
and
dec
mov
xlat
test
xchg
sbb
adc
inc
fistps
mov
pushf
enter
sbb
jns
xchg
outsl
add
push
daa
loope
dec
pushf
add
cltd
mov
dec
push
test
sbb
mov
dec
pop
xchg
lea
mov
cmp
cmc
inc
jmp
lret
test
mov
mov
jo
in
inc
or
mull
aas
sub
cmp
and
jl
mov
and
mov
cld
ret
sbb
sbb
scas
dec
iret
clc
lahf
cltd
daa
add
sbb
repz
dec
les
mov
pop
outsb
add
scas
sub
dec
push
hlt
pop
sbb
push
sbb
mov
ja
adc
cmp
clc
adc
or
test
inc
fmuls
mov
je
sarl
call
movl
sbb
and
add
pop
jns
mov
add
adc
fidivrl
rolb
cmpsb
mov
mov
lds
xchg
push
out
mov
adc
push
out
dec
cld
les
sahf
and
cmpsl
dec
mov
les
or
shrl
sarb
iret
sti
mov
idiv
dec
stos
or
dec
repnz
ja
cld
dec
xchg
repnz
ret
std
jecxz
andl
fisttps
sahf
and
jg
jg
and
pop
mov
jle
jle
xchg
jmp
daa
xchg
sti
lret
jne
dec
mov
inc
mov
outsb
aas
mov
jg
js
dec
dec
mull
notl
outsl
mov
xchg
es
or
pop
cmp
cmc
add
sbb
nop
in
repnz
push
add
enter
jo
inc
jle
adcb
push
mov
and
ret
sub
and
xchg
pop
mov
xchg
add
fsubrs
loope
xchg
std
fs
shll
or
sbb
shl
adc
jno
or
pop
add
icebp
aas
aam
repnz
lcall
xchg
push
pusha
mov
lret
xchg
and
pop
sub
inc
push
add
fstpt
and
insb
or
pop
inc
adc
xor
xchg
dec
jge
mov
stos
xchg
sarb
pushf
or
push
sub
das
ret
and
add
loope
test
or
pop
jnp
scas
or
or
jno
pop
popa
inc
push
les
popa
filds
or
jnp
test
cli
test
movsb
add
test
cmp
movb
shlb
clc
or
in
add
int3
or
inc
push
pop
cmp
test
lcall
ja
filds
inc
fmuls
bswap
and
jmp
sahf
adc
loope,pn
jecxz
sbb
push
push
cmp
jo
mov
dec
lret
push
xorb
add
push
mov
xor
ret
and
ret
or
ror
mov
fdivrl
lock
lock
mov
push
popa
inc
or
nop
ret
sbb
aam
shlb
loope
test
in
xchg
push
int3
sub
loopne
mov
scas
push
lock
jo
lcall
inc
mov
hlt
and
dec
cmp
aaa
loope
cld
decl
xacquire
movsb
sub
inc
call
cltd
or
sbb
xchg
gs
push
inc
mov
ficompl
xor
aad
mov
inc
pop
xor
mov
xchg
std
xchg
ret
stos
or
inc
rcrb
pop
ret
lret
or
jp
out
xchg
and
jecxz
test
sub
push
cld
sub
cmp
pop
cmp
mov
inc
clc
sub
push
or
pusha
repnz
or
mov
add
and
out
push
push
dec
xor
popa
dec
push
aam
shlb
mov
push
loope
and
sbb
xchg
push
cmp
test
loope
xchg
loopne
orl
mov
inc
pushf
or
cmc
lock
mov
pop
insl
test
and
jge
fstps
add
adc
and
popa
push
inc
addb
or
and
add
add
pushl
out
mov
jne
ja
out
scas
imul
pop
idivb
cmpsl
mov
lcall
mov
mov
cmp
sbb
clc
shll
ficompl
in
lods
jbe
cmp
xchg
loope
xchg
fnstenv
ja
cmp
pop
orl
outsb
mov
filds
cmp
jp
mov
mov
and
push
aad
imul
mov
fdivs
cmp
and
xchg
rcrl
inc
xlat
mov
inc
push
sbb
icebp
in
inc
leave
mov
push
add
sbb
add
sub
imul
mov
mov
inc
std
cmp
out
pusha
ja
sbb
testb
and
clc
jmp
mov
fadd
fdivrl
out
inc
ja
cmp
pop
jnp
mov
je
mov
inc
pop
mov
mov
mov
sbbl
xchg
mov
insb
jbe
ja
cmp
push
aas
xor
push
in
pop
ja
mov
arpl
xor
pusha
out
pop
ja
cmp
jecxz
mov
push
stos
mov
push
fiaddl
fcomi
out
and
inc
ja
cmp
pop
jbe
mov
mov
inc
bnd
testl
add
cmp
jl
seto
mov
mov
pop
stc
ljmp
jge
hlt
not
fisttps
cmp
dec
jge
hlt
not
fisttps
cmp
dec
jge
hlt
not
fisttps
cmp
dec
jge
hlt
not
fisttps
cmp
dec
jge
hlt
not
fisttps
aas
push
stos
test
inc
jle
lea
adc
jge
inc
add
dec
xor
xchg
movsb
adcb
test
bound
push
cmp
and
lret
sub
cmpsl
addl
pop
test
mov
imul
arpl
jb
add
shrb
leave
pop
xchg
ja
lock
in
into
push
stos
scas
imul
inc
lods
dec
pop
sahf
mov
lret
aad
stos
jmp
mov
je
divb
mov
or
int3
lods
mov
insl
xchg
shrl
outsb
loope
enter
push
outsb
rcr
adc
in
xchg
mov
mov
jo
xchg
jl,pn
mov
jmp
scas
pop
mov
push
inc
pop
push
mov
mov
insl
fldcw
outsb
fcomp
leave
mov
sbb
mov
outsl
inc
fsubrl
icebp
fwait
cld
sbb
sub
sub
js
or
mov
cmp
lcall
cmpsb
mov
inc
inc
sahf
mov
aaa
mov
adc
mov
jmp
in
cmpsl
xchg
dec
cmp
mov
cli
push
loope
dec
les
movsb
jnp
cmc
dec
or
in
inc
pushf
icebp
in
dec
pop
stos
stos
sub
es
ss
fsubrs
adc
sub
push
gs
aam
lds
mov
addr16
fsubrs
js
jl
mov
mov
andl
mov
jmp
jns
xchg
arpl
rcr
ds
xchg
rcrl
dec
int
add
jmp
gs
cld
imul
jmp
push
ret
sbb
cmp
icebp
mov
outsb
hlt
out
int3
xchg
cltd
ja
mov
inc
adc
cmc
in
call
xchg
std
sub
push
in
leave
in
in
xchg
shlb
nop
and
xchg
cmc
xor
enter
bound
mov
testl
pop
stos
lds
jae
in
pop
cli
cltd
loope
dec
jb
in
int3
arpl
pushf
out
test
xor
aas
xor
stos
fs
test
mov
lret
xchg
lods
pushf
js
cmp
aad
stos
cmc
adc
mov
cwtl
ret
pop
cmp
xchg
fldcw
nop
mov
mov
nop
fldl
jne
xlat
xchg
pop
sub
sar
sub
divb
or
fmul
mov
arpl
xchg
lea
xor
adc
imul
jb
out
cli
pop
fidivs
fmul
insl
lcall
lods
int
lcall
fisubrs
bound
lds
xchg
outsl
jecxz
icebp
jno
adc
push
push
push
loope,pt
test
pop
push
jle
std
test
mov
inc
loopne
push
enter
dec
shll
les
pop
mov
pop
mov
and
or
pop
jb
and
sarl
into
sbb
popa
mov
pop
push
pop
sbb
xor
fistpll
hlt
sub
lods
repnz
aaa
shrl
fildll
add
dec
jb
lret
jb
in
int3
inc
xchg
inc
aad
xlat
xor
push
xlat
mov
or
inc
stc
sbb
xor
dec
lea
pop
sbb
loop
and
mov
sbb
or
xchg
mov
mov
jbe
cmc
cmp
hlt
loope
push
ss
lods
cmpsl
pop
dec
into
popf
mov
mov
loope
lds
gs
mov
xchg
cltd
dec
jbe
jg
lahf
cmp
stos
jge
cld
sub
leave
inc
and
sub
sbb
xchg
mov
pushf
xchg
rcrb
jnp
add
dec
leave
xor
sbb
test
adc
jo
enter
push
jbe
loope
cld
push
sub
inc
test
lea
pop
sbb
rorl
cwtl
add
or
adc
test
mov
xchg
xchg
sub
loope
inc
out
aad
mov
test
mov
pusha
push
movsl
stos
dec
push
sbb
lret
xchg
aad
sub
mov
int3
cmp
cmp
jl
jb
dec
je
in
insl
push
sbb
mov
or
mov
xchg
test
jns
ljmp
mov
push
int
gs
shrl
imul
mov
mov
enter
leave
mov
rorl
fstps
cmp
push
jbe
loope
cld
hlt
adc
sahf
xchg
aaa
cmpsb
sbb
popf
mov
pushf
not
mov
mov
ja
in
cltd
ds
arpl
lss
mull
pop
nop
jle
cli
cmpsl
in
pop
ret
hlt
adc
dec
pop
sbb
lret
in
jmp
push
mov
mov
add
shrb
leave
jns
imull
xchg
in
into
pop
stos
mov
imulb
sub
mov
bound
rcll
insl
lods
pop
sbb
sub
mov
push
xor
imul
xor
in
mov
sbb
cmp
jne
in
xor
bound
add
rcr
xchg
pop
data16
jge
cmp
outsb
mov
fld
xor
pushf
mov
data16
in
cltd
cltd
addr16
or
lods
negb
adc
push
mov
in
inc
lea
imulb
jnp
add
sbb
mov
pop
shlb
icebp
dec
pop
fdivrl
jecxz
ljmp
outsb
dec
fists
ret
leave
mov
inc
jne
in
push
cwtl
inc
je
add
xor
jp
notb
inc
icebp
daa
in
adc
dec
test
xchg
pop
push
xor
icebp
leave
popa
push
nop
dec
inc
sub
push
imul
lds
test
and
gs
lahf
adc
add
dec
jo
ret
es
fmuls
cmp
dec
repnz
jb
push
in
xchg
dec
es
lcall
sub
daa
mov
ds
xor
jae
mov
movsb
xchg
adc
dec
and
fs
dec
adc
es
sbb
mov
push
or
icebp
les
inc
jl
sub
push
cld
sbbb
aam
test
cli
xchg
stos
dec
add
sub
push
lcall
cmp
ja
jle
repnz
dec
stos
or
cmpb
inc
sub
mov
in
xchg
push
ss
jge
adc
scas
sub
mov
push
out
sub
lods
ljmp
push
jno
xchg
stos
dec
inc
sub
pop
sub
gs
int
fst
sub
movsl
movsl
xorl
fcompl
imul
loop
xchg
add
mov
sub
insl
in
xchg
xor
out
or
pop
mov
fistl
mov
mov
jg
add
mov
push
imul
mov
push
pop
test
movsl
or
es
xor
mov
fstpl
push
xchg
stc
loopne
mov
push
adc
sub
mov
sahf
xor
ds
xchg
enter
push
mulb
xchg
cmp
test
push
push
mov
sbbb
sbb
mov
scas
or
inc
in
stos
lds
jns
cmp
lock
loop
nop
pop
sbb
and
rcrb
xor
mov
popa
sbb
rcrl
or
jecxz
sub
cwtl
mov
lds
and
xchg
je
fs
or
xor
mov
xchg
cmp
xor
xchg
sbb
sbb
sub
pop
mov
push
or
cmp
sbb
xor
out
xor
int3
jmp
lea
mov
sar
push
or
push
push
push
lods
sub
out
arpl
mov
mov
xor
xchg
imul
faddl
jo
rcrb
outsb
adc
fstpl
or
mov
aaa
mov
jae
icebp
fwait
and
cs
xchg
lea
push
mov
aaa
xor
cmp
in
lcall
push
mov
ja
popa
push
mov
je
repnz
mov
ds
sbb
dec
pushw
rorb
rcrb
fidivs
add
mov
call
mov
jno
cmpsb
scas
mov
add
imul
repz
cmpsb
daa
push
dec
sub
shll
rclb
inc
dec
sub
aad
pop
dec
cwtl
fwait
xor
fistl
adc
mov
stc
push
dec
jbe
hlt
mov
sbb
push
mov
loope
dec
pop
ss
inc
mov
insb
pop
pop
neg
test
fiadds
fldt
popf
add
sar
adc
repnz
lock
push
mov
mul
pop
cwtl
mov
pop
jmp
jp
sbb
testb
xchg
cmp
int3
mov
push
push
arpl
inc
in
dec
fists
mov
jmp
cmpsl
add
lret
sbb
into
rorb
and
scas
lods
inc
pop
out
rorb
push
scas
adc
lcall
repnz
jb,pn
bound
leave
faddl
cli
daa
lock
orb
lods
dec
add
xchg
adcb
add
aam
xor
fiaddl
int3
mov
sub
push
in
sahf
outsb
shll
adc
clflush
pusha
incb
cli
inc
dec
ss
push
lret
cmpb
mov
cwtl
cmpsl
xor
cwtl
xor
int
and
push
mov
fwait
clc
ret
fidivrl
mov
bound
xor
incb
mov
cmp
mov
sub
out
inc
cmpsl
push
orb
dec
mov
cmp
xchg
int3
adc
adc
ret
bswap
jl
cwtl
pop
lcall
jmp
stc
xchg
cwtl
pop
mov
dec
lcall
push
stc
sbbb
gs
dec
dec
sub
cli
movsl
scas
push
int3
divps
pop
jecxz
jns
xchg
fisttps
cwtl
das
aam
aaa
mov
cmc
outsl
xorb
test
jmp
mov
sbb
mov
int3
jge
js
hlt
cltd
pop
push
lea
inc
pop
data16
daa
sub
popa
pushf
into
cmp
les
loop
bound
jl
dec
push
cld
cld
lea
sbb
fcom
mov
jne
add
sar
pop
scas
sti
sub
pop
ljmp
sub
out
movsl
add
add
repz
ljmp
popf
adc
mov
cltd
pop
mov
mov
std
mov
shl
mov
push
xchg
mov
sti
xor
into
pop
pop
pop
and
loop
stc
pop
movb
and
enter
jbe
push
adc
add
sahf
push
or
xor
xor
mov
xor
mov
mov
mov
adc
popa
mov
outsb
sarb
sbb
in
jecxz
outsl
or
and
testb
mov
mov
or
add
out
mov
loopne
jnp
scas
aas
mov
aaa
and
loopne
mov
cs
pop
mov
iret
sbb
xor
inc
das
jecxz
xchg
or
out
add
push
insl
xchg
in
rcrb
in
mov
cltd
add
jmp
movsb
mov
adc
shl
imul
push
mov
jae
decb
xchg
je
ljmp
jecxz
iret
inc
test
insl
pop
add
bound
cmp
push
mov
imul
pop
push
adc
dec
sub
xchg
mov
ret
mov
daa
push
arpl
sar
pop
rorl
xchg
inc
mov
adc
mov
jo
loopne
fwait
lcall
loopne
ljmp
mov
aam
mov
jnp
lcall
pop
cmpsb
add
sub
jle
and
push
in
mov
fsubrl
xchg
xchg
jns
sti
movb
mov
aaa
sahf
add
nop
push
push
cmp
pop
pop
outsl
stos
push
lods
data16
in
inc
insb
adc
cmp
icebp
mov
mov
add
pop
pop
mov
aam
fiadds
jp
in
fwait
shlb
andnps
jmp
sub
loope
stc
and
cmp
and
scas
fcompl
jns
fistps
jge
stc
xchg
and
andb
sbb
add
mov
mov
das
stc
inc
and
or
pop
mov
test
or
xor
int3
xor
add
out
and
fld
mov
inc
cmp
sbb
pop
cld
shll
insb
icebp
cltd
in
int
mov
fs
add
pushf
push
stos
shlb
cmp
nop
shll
stc
jae
mov
outsl
test
xchg
xchg
mov
pop
lret
scas
mov
push
hlt
sbb
out
inc
jle
or
inc
ficompl
fs
out
jnp
and
orb
jge
cmp
ja
jb
add
mov
aas
je
or
rolb
and
sbb
pop
movsb
mov
bound
sarl
mov
dec
mov
and
xchg
sti
movsb
xchg
add
mov
mov
adc
cmp
bound
mov
pop
jecxz
test
imul
and
xor
lods
or
xlat
inc
cmp
or
sarl
int
mov
int
sbb
aaa
mov
mov
rcr
incb
out
pop
out
fildll
adc
sbb
xchg
mov
pop
lcall
pop
sahf
mov
pop
das
push
sub
push
loope
mulb
lods
mov
shlb
cmp
pusha
jno
lret
mov
adc
stos
insl
xchg
in
sub
mov
sbb
js
pop
shlb
mov
sbb
mov
stc
bnd
jge
and
repnz
lret
inc
sub
mov
push
aaa
test
fmul
cmp
lods
cmc
xchg
or
push
mov
xchg
scas
fsts
fwait
imul
jmp
out
push
fbstp
or
cs
out
cmp
iret
jl
dec
hlt
add
jge
inc
sti
cmc
inc
sarb
inc
jne
xor
mov
out
adc
daa
aam
mov
cs
mov
adc
or
test
out
or
inc
jmp
int3
push
mov
xchg
xchg
push
mov
sub
mov
pop
test
stos
shrb
push
cmpsl
movl
fwait
movsl
cmp
js
sarb
ds
lods
add
add
and
mov
inc
sub
push
fs
or
xchg
push
push
scas
lds
ja
lock
mov
pop
cmp
mov
dec
mov
jp
icebp
arpl
cwtl
loopne
ss
insl
int3
fcompl
clc
int
lahf
mov
jecxz
in
add
outsl
into
shrl
outsb
push
mov
lret
enter
adc
adc
cmpsl
jns,pt
mov
sbb
test
arpl
repnz
out
sbb
fmull
jge
jg
xchg
xchg
notb
pop
pusha
insb
insb
push
lods
test
cmp
insb
dec
mov
or
pop
mov
ja
fcomps
push
loope
sub
in
loope
icebp
xorl
in
xchg
dec
pop
ss
pop
ss
insb
sbb
xor
sbb
lahf
inc
aaa
sarb
xchg
roll
roll
or
rcr
js
fcomps
insb
dec
mov
int
or
jnp
lcall
fnstenv
adc
data16
in
std
in
cltd
dec
fs
aas
stos
arpl
xchg
jg
xor
sub
pusha
fnstcw
leave
mov
xor
sbb
lahf
and
das
sti
fldt
xor
enter
fnstcw
sbb
and
cmp
insb
sub
jns
jmp
arpl
loopne
insb
sub
push
lahf
push
push
jne
mov
insl
adc
xchg
mov
data16
pop
jns
movd
imul
or
mov
addr16
xchg
cmp
dec
push
push
repnz
jge,pt
out
insl
aas
sub
cmp
pop
rcr
or
cmc
jecxz
arpl
lahf
lret
mov
cmp
repnz
ljmp
jb
pop
push
repnz
pop
or
loop
insl
jg
fsin
lds
ljmp
mov
cli
aaa
xchg
int
lahf
pusha
push
into
mov
fstpl
xor
int3
xor
cmp
repz
imul
test
movl
jge
test
xchg
jne
jb
push
add
inc
sbb
fisttps
lret
bound
cwtl
cwtl
int
or
mov
imul
mov
ret
call
and
jo
enter
je
imulb
lret
mov
rorb
test
mov
sbb
push
xchg
add
lods
sti
subl
adc
andb
xchg
nop
dec
mov
mov
pop
cmc
add
add
nop
ljmp
xchg
inc
push
movntps
mov
out
leave
or
mov
popl
xchg
add
add
cmp
inc
lret
cmp
out
add
mov
add
add
bound
mov
shlb
js
mov
and
mov
sub
push
adc
adc
add
cli
or
mov
sbbb
ds
adc
pop
mov
jns
xchg
sub
andb
addb
test
sub
lods
test
enter
imul
leave
andb
scas
xchg
sti
rorl
les
inc
pop
adc
adc
add
mov
xchg
pop
or
aas
out
cmp
lds
inc
vpmacswd
daa
mov
jo
loope
testl
rcll
cmp
insl
insb
lcall
push
sbb
fs
mov
std
push
cmc
hlt
add
sti
push
mov
aad
or
sarl
adc
xlat
jbe
jecxz
adc
mov
movsb
cmp
filds
popf
sub
repz
jne
cmp
cmpsb
sbb
push
adc
lods
rorb
aaa
jbe
lret
mov
nop
test
cmp
mov
sti
outsl
sbb
push
std
into
fsubrl
mov
dec
mov
and
jnp
xchg
out
mov
sub
lock
cmp
jge
js
fstps
mov
adc
mov
cmc
cmp
std
sahf
add
push
mov
sbb
lea
xchg
loope
sbb
dec
sbb
lock
vcmpps
sub
mov
add
sbb
cwtl
push
popf
sub
add
pop
incb
push
nop
int
cltd
push
mov
jge
dec
sar
aaa
lock
mov
dec
std
cltd
iret
mov
hlt
xchg
jg
call
mov
insb
xor
jle
sub
iret
add
sbb
inc
je
mov
lods
push
pop
xor
mov
test
js
mov
ds
popa
sbbl
test
adc
popl
lock
inc
cmpsl
rolb
shlb
out
add
cmpb
pop
fld
movsl
mov
or
adc
clc
adc
add
cmp
xchg
xor
xor
xchg
je
inc
mov
inc
jnp
hlt
dec
movsb
pop
dec
sub
jo
push
sub
pop
jae
xor
inc
xor
pop
mov
jbe
mov
mov
lcall
lods
xchg
jns
nop
jge
paddd
inc
dec
pushf
xorb
xchg
or
rcrb
inc
stc
sbb
fs
sti
adc
pusha
sub
clc
xchg
mov
or
movsl
cmpsl
pmullw
inc
hlt
enter
xlat
push
fstps
xchg
mov
int
xchg
or
push
adc
test
repnz
repz
notl
cld
daa
inc
jmp
inc
jbe
pop
jno
int
push
ret
scas
outsl
nop
fstpl
jmp
xchg
or
fists
ret
and
pop
lcall
mov
popf
repnz
xchg
cli
stos
jb
mov
in
fsubrl
mov
inc
cmp
repnz
adc
add
and
mov
adc
std
xchg
popa
xor
pop
sti
adc
pop
mov
pop
adc
nop
xlat
xor
push
sbb
inc
int
addl
mov
stc
call
adc
movsl
dec
dec
rorb
popf
dec
cmp
and
lods
daa
ljmp
push
mov
popf
icebp
cmp
ja
fs
vmwrite
mov
mov
enter
stos
add
les
push
mov
xchg
push
pop
mov
out
and
xor
push
xor
int
test
mov
dec
std
fcoml
jle
shl
ret
mov
movsb
cli
repz
dec
lcall
and
mov
and
mov
sbb
bound
outsl
mov
ja
mov
imul
jp
jp
sub
hlt
out
push
pop
pop
testb
dec
pop
inc
in
mov
fistpl
fimull
and
cmpsl
orl
xchg
das
xchg
adc
adc
fstpl
or
jo
jg
mov
mov
filds
repnz
mov
cwtl
add
hlt
std
push
bound
outsl
or
cmpsb
and
fidivrs
push
sub
jne
adc
scas
loopne
mov
ljmp
shrl
imul
shl
shl
xchg
addb
pop
adc
pushf
dec
inc
mov
push
pop
sarl
jl
test
inc
loop
and
and
xchg
sub
lea
mov
loop
clc
cwtl
iret
or
jnp
push
sbb
aaa
outsb
and
lock
repz
push
aad
loopne
pop
inc
sahf
clc
repnz
push
shlb
mov
mov
js
cld
push
out
jmp
fimuls
sub
dec
mov
mov
add
negl
jo
mov
mov
jl
jge
js
mov
shrl
dec
repz
lret
shlb
cmp
fiadds
in
dec
icebp
push
les
jnp
sub
mov
rcl
adc
adc
adc
hlt
test
icebp
in
das
and
jbe
xchg
mov
sbb
add
sbb
sti
das
in
int3
loop
sub
or
xor
jae
and
jge
xorb
ret
push
jp
mov
inc
in
les
in
inc
mov
dec
xchg
push
inc
xchg
push
inc
idivb
clc
rcrb
push
mov
stos
cwtl
sbb
sbb
outsb
ljmp
lahf
xchg
pop
xchg
pop
dec
xchg
out
ds
mov
stos
push
push
mov
or
icebp
mov
xchg
pop
in
in
push
out
inc
mov
adc
pop
outsl
cmp
inc
or
pusha
pop
scas
icebp
cmpsl
out
dec
add
sub
or
ljmp
sarb
push
jmp
ficomps
cltd
adc
in
ret
adc
add
into
jge
xchg
out
inc
repz
mov
mov
aas
jmp
sub
push
filds
dec
mov
jecxz
pop
xor
cld
pop
pop
aas
jne
xor
mov
mov
pop
pop
mov
popa
push
test
lret
cmc
nop
sbb
xor
es
out
adc
inc
fistpll
mov
dec
push
div
pop
pop
mov
mov
pop
ja
sub
inc
add
inc
or
in
mov
inc
push
in
xchg
mov
mov
lret
outsl
int
pop
sahf
mov
cmp
clc
inc
imul
jae
sub
mov
mov
pop
lahf
jmp
mov
fsts
es
mov
push
aam
fsubl
xchg
movsl
je
mov
sbb
leave
lods
xor
sbb
lods
jmp
inc
ffree
cwtl
ja
and
sbb
add
cs
jnp
cmp
mov
das
jb
mov
xchg
jnp
dec
inc
cmp
jns
cmc
add
mov
adc
adc
mov
push
dec
xchg
dec
movsb
insb
out
inc
dec
xor
mov
movsb
pop
lret
test
pop
add
repnz
movsb
mov
lcall
mov
add
inc
fldenv
push
divl
xchg
shl
out
dec
or
mov
push
jmp
mov
jbe
and
cmp
sahf
cmp
pop
xchg
shll
inc
inc
mov
cmp
jne
rolb
loop
fbld
mov
adcl
in
pop
in
nop
repz
loop
or
jl
test
je
lods
mov
aaa
push
pusha
lcall
outsb
clc
ficoml
mov
and
cli
js
push
adcb
xorb
push
stos
push
outsl
sub
mov
jge
jae
ljmp
push
or
mov
xchg
sbb
mov
or
loop
mov
xchg
sbb
mov
mov
mov
jns
xchg
xor
push
sub
sub
in
pop
sub
add
dec
dec
pop
adc
lret
sahf
mov
sub
jnp
repz
jne
aad
cltd
or
cmpb
add
rcrl
mov
enter
mov
cmpsl
pop
and
fwait
adc
push
cmp
mov
test
xchg
out
bound
js
sbb
sahf
arpl
mov
sahf
ret
in
popa
aaa
stc
rclb
imull
mov
pop
mov
iret
xchg
cmc
xchg
mov
mov
lcall
sahf
lock
jl
lret
dec
in
sbb
push
les
addr16
sub
outsl
data16
mov
movsl
in
shrb
outsl
rorl
or
jmp
xor
js
outsb
xchg
out
test
mov
xor
add
cmpb
cmpb
push
mov
lret
adc
push
xchg
fistpl
lahf
cmc
adc
movsb
popf
pop
cmp
outsb
cltd
aam
sub
cwtl
pop
js
and
dec
inc
cmp
jp
xor
aas
pop
jp
xchg
jle
adc
lock
arpl
add
mov
inc
sti
es
pop
dec
loopne
add
jmp
jl
addr16
roll
and
cmp
out
out
xor
add
lcall
flds
jo
sti
sub
test
cli
inc
jbe
out
push
loopne
outsl
call
iret
les
xchg
dec
pusha
insl
cmc
fs
mov
pop
mov
and
xorl
lock
out
rorb
xchg
pop
xor
in
add
loop
mov
jno
fadds
ficoml
jbe
sbb
add
add
scas
rolb
nop
fdivp
ret
clc
in
dec
pop
inc
xor
xchg
shrl
push
push
movsb
lret
cmp
push
mov
push
in
sub
push
jle
add
push
clc
jne
inc
pop
sbb
das
cltd
adc
mov
testl
lret
pop
push
mov
je
mov
push
popf
sbb
jp
sbb
mov
mov
lea
sub
scas
mov
subb
fstp
or
xor
fstpt
mov
mov
jne
inc
mul
and
dec
jp
push
sbb
ret
or
jmp
fadds
xor
into
int3
aas
jbe
movswl
mov
jg
push
cld
mov
mov
dec
ljmp
adc
filds
std
adc
int
es
dec
lret
add
pop
pop
jle
mov
dec
int
fwait
aaa
loop
mov
mov
jmp
in
mov
push
testb
pop
mov
inc
jbe
nop
xchg
js
arpl
loop
nop
or
inc
mov
mov
adc
jnp
repnz
add
lea
or
push
movsl
or
adcb
lea
add
jne
add
mov
jo
jmp
cli
ret
jb
add
jge
mov
xor
pop
insb
dec
dec
testb
jl
inc
mov
mov
mov
lahf
lods
sahf
dec
aas
jae
cmpsb
addr16
push
sbb
jmp
adc
mov
mov
xchg
jns
ja
mul
pop
movsb
aaa
dec
outsb
cmpsb
fisubl
or
ret
or
jb
cwtl
fmul
icebp
scas
lods
mov
incl
fildll
pop
cmp
xchg
loopne
mov
shlb
rol
clc
mov
js
cs
insl
cld
jecxz
jle
sti
stc
stos
paddd
sahf
out
xchg
ja
xor
repnz
xchg
icebp
push
sahf
dec
inc
xchg
mov
popa
dec
call
loopne
sub
sbb
inc
adc
adc
and
pop
mov
ds
arpl
xor
lret
or
jle
push
push
lods
inc
jecxz
or
inc
inc
mov
push
movsl
mov
push
and
push
mov
mov
push
shrl
rcr
adc
cmp
iret
jne
stc
jl
adc
push
add
add
adc
cmp
jb
leave
cmp
stos
cmp
outsb
hlt
mov
jg
mov
cli
and
cli
cwtl
push
sti
and
mov
test
cld
fcoms
ret
roll
jle
jno
leave
adc
add
les
push
and
pop
cmp
cmp
scas
mov
cmp
dec
xlat
lods
add
cld
push
hlt
pop
fnstenv
dec
jbe
icebp
xor
inc
fisubl
loopne
out
mov
icebp
add
mov
in
repnz
mov
push
cld
imull
into
inc
cmp
imull
adc
sbbl
xor
ret
jnp
hlt
icebp
repnz
xchg
cmc
push
lods
and
pop
faddp
movsl
enter
jg
pushf
jg
sub
mov
inc
push
andl
das
pushf
pop
xchg
sub
lret
and
movsb
iret
mov
add
xor
repz
sahf
xchg
lods
sbb
in
push
shlb
fwait
mov
enter
jno
mov
icebp
adc
and
xor
sub
push
mov
nop
sub
shrl
imul
inc
fcoml
mov
sbb
mov
cli
or
and
scas
jo
out
jp
inc
dec
mov
cmp
mov
jno
jl
ja
outsb
lcall
and
adc
mov
add
xor
outsl
jle
xor
mov
arpl
and
push
pop
push
leave
mov
sahf
ficoms
int
leave
push
cmp
pop
jns
repnz
pop
lcall
loope
std
sub
shl
daa
testb
dec
and
sub
or
mov
jne
leave
or
mov
jecxz
repnz
test
sub
cwtl
repnz
shll
pop
popf
xchg
pop
pop
cmp
sbb
cmp
pop
fwait
ss
cmpsb
or
xor
push
cs
pop
push
mov
jge
call
jmp
imul
ljmp
cli
xlat
movsl
mov
jns
adc
mov
pop
testl
stos
adc
sbb
jns
inc
jmp
jl
into
int3
inc
stc
dec
inc
add
dec
loopne
lock
xchg
aad
popf
xchg
lods
jle
in
loop
pop
xchg
sub
cmpsl
clc
pslld
jg
jg
jae
jne
ds
insb
pop
mov
arpl
and
jecxz
imull
push
and
lock
pop
repz
clc
add
xlat
inc
push
jo
or
sahf
stos
xchg
xor
cli
sahf
sub
ljmp
sar
adc
mov
xor
add
enter
fcoms
add
xchg
mov
aas
mov
lret
push
dec
js
xchg
lret
gs
std
jecxz
inc
and
jmp
js
notl
mov
mov
in
stos
jo
xlat
addl
pop
mov
jo
lahf
adc
repnz
jns
stos
lret
inc
mov
add
rcrb
ds
inc
mov
adc
repnz
cli
lret
jns
xorl
outsb
mov
sbb
popf
aas
js
pop
notb
mov
stc
stos
push
dec
lret
mov
div
push
testl
bound
mov
test
mov
iret
or
jl
sti
xor
lcall
roll
test
jle
ficoml
sbb
mov
nop
pop
xchg
mov
fcmovnb
mov
outsl
in
outsb
mov
jns
jnp
and
vpaddb
cmp
lret
hlt
pop
ljmp
loopne
out
pop
shl
inc
dec
out
dec
iret
shl
xorb
inc
xchg
adc
mov
aas
mov
dec
jp
shlb
sbb
dec
add
lcall
aam
cli
rcr
loop
cwtl
push
in
lahf
clc
test
ss
lahf
sarl
cmpsl
lcall
add
add
push
jns
fnsave
jae
mov
aaa
pop
in
filds
mov
sub
xchg
sarb
out
push
out
andb
sbb
mul
add
add
je
ja
in
call
and
xchg
scas
push
pop
mov
gs
inc
and
inc
testb
push
pop
out
cmp
push
sub
dec
mov
nop
ror
xor
lret
jecxz
lods
aas
xor
push
or
mov
push
test
lahf
js
cmc
xchg
sbb
stos
iret
mov
jg
mov
sbb
icebp
mov
aaa
cli
inc
mov
mov
jbe
fdivs
add
cli
and
in
cmpsl
mov
sbb
push
inc
lret
stos
ljmp
inc
mov
mov
iret
fisttpl
mov
push
aas
mov
aas
sbb
xor
jo
test
ds
int
adcb
bound
or
cs
push
pop
lds
cmp
std
testl
aas
adc
cltd
cmp
jb
mov
icebp
and
pop
dec
addb
adc
stos
xor
adc
mov
dec
jg
xlat
inc
js
inc
mov
in
pop
adc
aam
inc
mov
fbstp
jmp
or
jle
push
adcb
rol
inc
jge
clc
mov
and
dec
iret
clc
mov
ret
out
scas
jge
mov
cmp
pop
sub
es
mov
inc
mov
adcb
adc
push
fistps
pushl
fistpll
push
push
xorb
out
dec
imul
inc
jae
add
push
push
xchg
ret
inc
jb
aam
cs
daa
rcrl
xor
filds
into
adc
mov
orl
and
jmp
clc
xchg
sbb
add
adc
mov
cld
add
mov
dec
std
inc
dec
sbb
xchg
mov
xchg
sbb
mov
cmp
out
push
sub
xchg
add
cld
out
cmp
fnstsw
xchg
pop
lcall
jmp
fisttps
out
sub
das
decb
es
mov
cmpsb
mov
push
sub
pop
fyl2xp1
data16
jg
int3
loopne
stc
xchg
std
pop
scas
inc
rcr
xchg
add
push
insb
cmc
or
shrl
xchg
shll
adc
lock
adc
stc
leave
push
mov
inc
rol
or
bound
icebp
pusha
jmp
aad
xor
test
and
jae
xor
mov
fistps
inc
mov
pop
jae
enter
adc
adc
aad
inc
jne
xor
das
mov
xchg
pop
out
pushw
dec
pusha
mov
ljmp
mov
sbb
push
pushf
scas
xchg
js
xchg
push
pushf
push
adc
lea
pusha
out
push
imul
stos
push
jg
pushf
mov
jns
lock
and
je
pop
xorl
mov
sub
sub
jge
out
enter
sub
inc
add
pop
sbb
pusha
push
fistpll
inc
loopne
mov
idivl
pop
daa
mov
shlb
dec
push
lahf
mov
sub
xchg
nop
dec
and
push
cmp
jns
xor
test
dec
mov
jp
and
subb
jnp
pop
pop
or
and
imul
jmp
inc
out
daa
loope
call
mov
push
rorb
push
inc
mov
xchg
mov
fwait
pop
and
mov
pop
je
arpl
clc
cwtl
add
sbb
shll
fs
mov
jb
mov
scas
es
bnd
xlat
and
push
insb
sub
jp
xchg
and
mov
dec
jo
xlat
cltd
xchg
mov
mov
call
jl
add
jnp
stos
mov
pushf
int
testl
ret
loop
pusha
add
hlt
xchg
roll
or
inc
mov
jbe
fisttpl
xlat
inc
jecxz
nop
adc
in
xchg
adc
dec
mov
push
or
divl
and
insl
lock
out
outsb
inc
mov
outsb
test
lock
mov
ror
dec
sbb
cmp
ljmp
imul
in
inc
mov
loop
out
push
into
cld
jl
lock
lahf
fidivrl
sub
icebp
add
dec
stc
inc
cmp
cmp
add
sbb
xchg
negb
hlt
ret
pop
add
loop
and
or
in
insl
notb
and
in
icebp
mov
mov
lods
adc
lret
xchg
outsb
out
arpl
xchg
and
bound
inc
dec
iret
and
xchg
sbb
cmp
fwait
mov
call
les
xchg
jae
mov
clc
lret
jmp
int3
mov
cwtl
ss
add
shlb
push
pop
gs
pop
add
fxch
or
xchg
pop
add
ds
and
pop
repz
fmull
adc
inc
jg
pop
rcrl
aaa
xchg
aas
mov
out
dec
pushf
push
test
fcomi
subb
mov
loop
shr
mov
fisttps
sub
pop
les
add
mov
mov
xchg
cltd
adc
pop
mov
in
or
shlb
mov
pop
test
in
sbb
data16
sbb
push
jne
clc
add
int
pop
xlat
mov
jge
dec
and
mov
ret
hlt
bound
clc
jle
das
mov
popa
insl
mov
push
shlb
cmpsb
inc
pop
mov
sbb
push
movsb
scas
jmp
mov
mov
xchg
cli
push
fisubs
movsl
fisttps
dec
mov
dec
lods
adc
jae
xchg
les
lahf
aam
fcomps
ds
test
pop
int3
dec
rorb
nop
mulps
cld
bound
lahf
sub
sub
test
adc
or
mov
push
js
or
mov
repnz
lds
data16
insb
and
pop
jp
xchg
jle
pop
sub
imul
xchg
fmull
mov
mov
inc
mov
pop
pop
push
and
and
inc
sub
add
sti
ret
push
and
jle
mov
push
jl
mov
push
in
mov
jns
jno
xchg
sahf
jle
sbb
push
or
adc
fistl
mov
mov
pop
xor
ss
outsl
fsubs
sbb
int3
mov
xor
or
imul
das
jb
xchg
aaa
cltd
jae
jecxz
jp
loop
roll
sub
xchg
mov
xchg
mov
jl
adc
scas
cs
sarl
inc
jl
and
aad
sub
mov
cwtl
ljmp
jge
dec
fildl
fbstp
sub
adc
stc
jmp
loop
ret
bound
mov
or
or
leave
mov
push
push
ret
stc
loopne
push
test
xor
and
inc
push
pop
add
lock
in
mov
rol
or
imull
lock
cmp
dec
mov
add
pop
stos
mov
jbe
adc
aas
fldenv
push
sub
jge
sub
aam
and
lds
inc
inc
pop
push
mov
ret
xor
cmc
sub
push
fsubrs
repz
lret
sbb
addr16
sbb
or
subl
dec
insl
pop
nop
outsb
or
fimuls
jo
mov
jmp
aaa
ficoms
sub
les
pop
mov
dec
and
push
scas
mov
and
mov
xor
pop
push
aam
or
add
mov
sub
leave
pop
sub
or
inc
and
andb
mov
or
fwait
cli
push
scas
rcrb
push
shrl
mov
adc
vpmacssdql
sarb
jl
pop
stos
dec
imul
cmpsb
mov
lock
dec
adc
xor
xor
jb
cli
ficoms
dec
xor
sbb
rorl
push
cmp
cmp
push
nop
decb
scas
mov
ret
xchg
in
loop
mov
inc
fidivs
pushf
inc
es
test
jmp
dec
and
notb
cmpsl
int3
cmpsl
movsl
std
pop
or
inc
xchg
aaa
add
xchg
hlt
hlt
rorl
push
cld
pop
sbb
dec
rcrl
or
cltd
imul
imul
cmp
jl
mov
xchg
testb
add
sahf
repnz
insl
shl
test
insl
out
mov
in
aam
ss
xor
add
adc
xor
daa
push
in
jne
sbb
cmp
add
adc
data16
addb
add
or
inc
adc
add
inc
add
add
adc
adc
adc
add
add
pop
mov
out
movsb
icebp
in
fildll
das
scas
repnz
pop
mov
in
xchg
xchg
fwait
jle
lret
lock
pop
jb
add
mov
ss
push
addl
dec
sbbb
aad
cmpsl
mov
shll
data16
push
mov
mov
out
mov
clc
icebp
mov
iret
fwait
cwtl
jno
popf
jae
out
jne
push
call
mov
xchg
cmp
pusha
mov
xchg
out
mov
cmp
mov
dec
lret
int3
imul
cltd
les
cmpsb
sub
inc
insb
xchg
test
jle
aaa
push
jno
xor
bt
sub
push
pop
adc
inc
incb
xchg
jne
sub
in
in
out
test
out
test
icebp
add
jle
xor
bound
ret
mov
sub
insb
sti
stos
js
cld
push
nop
cwtl
mov
push
dec
in
sub
lods
cwtl
and
sub
mov
adc
movsl
scas
push
adc
push
loop
call
jp
subb
mov
cmp
jecxz
dec
lods
dec
mov
jmp
js
clc
je
sbb
push
lea
in
fsub
mov
arpl
add
push
lret
cmp
jg
xchg
cmp
sti
mov
mov
movsl
dec
push
inc
in
dec
popa
aad
pop
fmul
pop
fmull
loop
cltd
in
cmp
les
mov
inc
leave
imul
scas
loope
jg
pop
push
movsb
or
cltd
mov
das
sar
loope
push
adc
aaa
es
dec
imul
aas
xchg
and
add
jl
clc
fcomi
mov
jb
enter
inc
cmp
jb
in
leave
mov
push
mov
in
lret
pop
sub
dec
pop
mov
enter
adc
push
pop
scas
addb
in
mov
cmpl
or
aas
jmp
daa
lods
push
loopne
xchg
imulb
pop
or
cmpb
stc
inc
dec
adc
sbb
dec
cmp
hlt
incl
adc
gs
sub
and
outsl
fs
repz
xchg
mov
mov
scas
dec
xor
dec
dec
ds
idivl
scas
ds
add
inc
mov
inc
out
mov
aas
scas
mov
mov
gs
mov
lea
int
xchg
std
cmp
jecxz
popf
out
or
dec
xchg
xchg
shrl
cmpsl
dec
push
mov
bound
loop
in
lret
pop
dec
fwait
mov
stc
or
gs
push
ret
ds
out
pop
xchg
cmp
cmp
sub
push
ret
cltd
and
mov
gs
mov
stc
nop
aaa
cli
enter
mov
pop
test
add
stos
dec
movsl
inc
sub
pusha
add
mov
fwait
stos
add
xlat
xor
and
lahf
inc
add
jmp
mov
aas
nop
and
add
add
push
pop
and
pop
cwtl
add
fcoml
dec
insb
lahf
xchg
pushl
cmp
mov
pop
xchg
pop
pop
mov
push
fwait
adc
arpl
ret
or
clc
mov
mov
sbb
or
xchg
xor
data16
sahf
clc
ss
es
lahf
out
outsl
lret
pop
and
push
xlat
test
sahf
scas
aad
orl
lock
loop
fcoml
push
out
push
insb
loop
pop
ret
sub
sahf
or
add
out
dec
pop
mov
int3
adc
int3
ud0
add
scas
ficompl
sbb
popf
aam
scas
ss
ja
out
xchg
fcoms
push
dec
sub
enter
mov
dec
arpl
mov
mov
mul
jle
out
lock
jecxz
leave
xchg
mov
cmp
jle
and
mov
into
or
repz
mov
jno
mov
and
push
pop
inc
scas
jb
add
cmpl
jnp
movl
jno
loope
xchg
jbe
lahf
test
mov
outsl
rclb
inc
jmp
inc
into
jns
jo
cli
mov
fsubl
lret
sti
jmp
pop
fwait
mov
or
stos
jmp
sti
pop
mov
xor
xchg
mov
mov
and
push
or
dec
cmpsb
and
arpl
popf
push
shl
inc
sahf
add
notb
xchg
dec
movsl
dec
jns
rcr
push
and
xchg
jbe
negl
mov
aas
stos
and
adc
push
ret
mov
push
and
push
xchg
shrb
push
jecxz
xchg
dec
pop
fdivr
sbb
mov
ss
insb
mov
jbe
jl
mov
popa
es
cmp
xchg
enter
jg
daa
push
leave
stos
mov
xchg
xchg
iret
mov
pop
je
popf
xor
sti
andl
les
cwtl
pop
out
fidivrs
scas
mov
pop
mov
jo
inc
xchg
jg
xchg
pop
test
push
aad
shl
mov
imul
daa
xor
push
mov
ds
pop
enter
repz
stos
mov
dec
mov
fnstsw
aas
sub
mov
out
in
sbb
mov
xchg
stos
mov
pushf
cmp
inc
sub
rcrb
inc
mov
in
inc
inc
fcoms
xor
aad
in
arpl
mov
mov
mov
lret
in
xlat
mov
pop
movzwl
es
arpl
es
add
fildll
adc
outsb
pop
push
jbe
int3
in
cltd
sti
xor
cwtl
or
rcrb
cmpl
adc
inc
sbb
mov
add
sbb
xor
pop
inc
add
ret
adc
fistpl
or
xchg
fisttpll
sub
xchg
testl
test
sub
outsb
mov
clc
es
cld
outsb
dec
mov
aad
ljmp
mov
addl
mov
out
inc
add
cmp
jg
pop
fwait
adc
scas
leave
out
scas
pusha
add
ret
fcoml
jo
mov
pop
aam
mov
pop
andb
fistpll
inc
sbb
mov
inc
mov
int
rcrb
ficomps
pop
pusha
xchg
xor
aad
mov
je
inc
das
clc
mov
incb
lea
push
out
outsl
xor
lods
in
dec
add
push
mov
rcll
mov
mov
imul
in
shrl
mov
add
mov
fists
sub
sbb
push
jae
ret
je
jmp
push
pop
scas
lds
pop
mov
add
jno
aad
stos
rclb
ficoml
scas
test
into
sbb
jnp
mov
jmp
les
mov
sub
and
xor
jnp
clc
or
xchg
lock
test
or
xchg
mov
call
mov
jg
add
loope
cmp
pop
fimull
xlat
stc
pop
outsl
repnz
enter
sbb
mov
stos
dec
or
outsb
push
insl
cmpsl
push
cmp
pop
mov
add
in
aaa
jb
adc
cmp
push
lea
fistps
in
add
push
push
fsubl
or
or
out
sbb
sbb
mov
shll
ja
and
jo
jecxz
stc
dec
ljmp
inc
call
test
mov
mov
divb
mov
mov
aas
jle,pn
pop
push
sahf
std
mov
rcr
adc
cld
adc
imul
or
cli
nop
and
lods
inc
xor
mov
outsb
arpl
icebp
test
push
flds
psubsb
or
fidivl
inc
cmc
dec
jae
xchg
daa
sub
inc
mov
cmc
ss
nop
stc
mov
stos
ja
adc
int
xchg
shrl
movsl
adc
mov
push
fsubrl
sbb
push
daa
out
sub
loop
movsl
jno
in
ficoml
push
cld
cmp
lods
int3
and
or
mov
fstps
popf
adc
adc
cld
jne
bound
mov
stos
sbb
cmp
cli
daa
sub
loopne
addr16
add
jae
jmp
addr16
out
test
lahf
jne
jne
dec
push
ret
xchg
cli
xchg
outsb
cmpsb
addr16
xchg
ljmp
enter
mov
and
push
adc
std
in
orl
adc
jns
nop
sub
arpl
fsubrs
ss
fsubrl
mov
ja
push
je,pt
jg
fucom
into
adc
xor
cmpsl
std
mov
cli
adcb
int3
push
sahf
adc
cmc
mov
loope
fisubl
add
and
xchg
es
jne
sub
stos
push
xor
push
push
dec
pop
pop
mov
push
imull
lret
adc
cs
insb
cmc
pop
lcall
stos
leave
jne
leave
mov
mov
decb
inc
push
jae
mov
ja
xor
hlt
lods
leave
jl
insl
push
sahf
subb
push
cmpsl
je
ds
cmp
xchg
cmpsl
out
loop
out
into
in
inc
jbe
in
dec
fistpl
shrl
cltd
out
sub
out
pusha
bound
and
addr16
and
xchg
or
lcall
jle
rcrl
ss
pop
psubusw
or
inc
or
sbb
int3
or
dec
mov
jnp
gs
sti
aam
nop
inc
fisubrl
mov
mov
pop
out
jmp
pop
int
imulb
xor
adc
add
mov
push
add
sub
cmpsl
out
outsl
aam
ret
adc
push
out
push
jo
adc
gs
inc
shrb
mov
sti
out
jp
in
pusha
in
jnp
inc
ret
mov
adc
add
mov
shrl
pop
mov
iret
clc
or
jmp
sahf
cmp
mov
mov
leave
jns
pop
test
cmp
push
leave
sbb
mov
mov
inc
outsl
cvtpi2ps
std
dec
sbb
out
lcall
in
lds
jnp
lret
xchg
mov
xlat
aad
sbb
dec
ss
clc
push
xchg
or
sub
pop
out
pop
inc
jne
jp
or
dec
insl
jnp
push
decl
xor
pop
cltd
mov
cwtl
xchg
popf
cmp
popf
hlt
addb
les
inc
push
lods
mov
inc
ss
shl
push
jge
adc
mov
iret
outsb
lahf
xlat
cmp
or
jmp
xor
dec
das
inc
xchg
xchg
sub
cmc
adc
lea
mov
lock
fwait
mov
shlb
pop
cmpsb
mov
icebp
lods
jmp
rcll
push
fldcw
xchg
cmp
les
xchg
pushf
mov
mov
or
adc
and
seta
add
rorb
in
xchg
mov
sub
repz
rcrl
fstl
jg
add
sbb
imul
lods
mov
shrb
scas
loop
in
into
pusha
cmp
mov
mov
and
test
and
mov
mov
leave
mov
jnp
mov
stc
and
dec
aas
mov
test
jo
cmp
add
add
loope
cmp
aam
xchg
and
inc
jecxz
jbe
int
lret
mov
insl
out
in
icebp
pop
mov
cmp
cmp
jno
jb
jo
sarl
pushf
lea
in
and
sbb
cmp
mov
sub
cmp
xchg
cmpsl
sub
je
push
enter
mov
rolb
outsl
arpl
aas
rolw
mov
pop
neg
jl
mov
dec
inc
push
dec
repz
fistpll
enter
adc
push
hlt
mov
jmp
sbb
xchg
push
mov
mov
stos
xlat
outsb
or
call
dec
cmc
pop
cli
push
and
jae
in
pop
adc
repnz
pop
scas
xchg
xor
jp
pop
or
mov
xchg
sbb
repz
stc
jbe
int
push
cmp
inc
scas
repnz
cmp
in
iret
mov
jg
mov
cmp
das
insl
add
mov
pop
pop
pushf
sbb
cmp
mov
inc
jl
cmpsl
rolb
mov
adc
xor
imul
in
dec
fisttpl
fisttps
loop
cmp
adc
or
mov
xchg
cld
push
lea
xchg
fisttps
jecxz
mov
and
jmp
add
scas
sub
cmpsb
ja
scas
lock
outsb
dec
mov
les
dec
insl
js
sub
stos
addr16
rclb
out
ret
or
and
outsl
mov
push
cli
repnz
cmc
dec
sar
mov
jne
mov
data16
ds
stc
in
aam
sbb
cmpsb
cmp
and
lea
pop
jp
xor
mov
mov
adc
aad
and
inc
and
push
int
add
stos
cmp
mov
js
fcmovu
xor
jg
mov
mov
lahf
add
je
or
lret
arpl
pop
or
rclb
fmuls
pop
or
mov
lret
pop
imul
outsl
fbstp
jbe
cli
decb
pop
jle
shr
jo
pop
test
jmp
and
adc
jb
and
roll
and
dec
cld
in
mov
cmpsl
adc
mov
dec
jne
je
int3
push
lcall
pop
addl
adc
xor
lret
push
int3
mov
pop
in
pop
jl
add
fs
dec
lds
stos
ljmp
ret
insb
ljmp
pop
stos
fwait
movsl
leave
lea
lahf
or
sub
repz
push
sub
mov
jmp
mov
inc
daa
cli
test
lods
sub
dec
or
adc
out
in
lock
int
in
lret
mov
pop
and
jmp
mov
sti
ret
inc
shrl
fcmovu
testb
add
ffreep
push
loopne
loop,pt
repz
lret
xor
or
movsl
cmp
imul
inc
cli
clc
test
sar
jmp
cli
lods
aad
push
fisttpl
sbb
xchg
mov
cltd
add
add
mov
sbb
jo
insl
fsub
push
mov
cmp
arpl
lock
in
roll
xlat
aaa
scas
outsl
gs
sti
mov
and
iret
fsubl
gs
out
out
mov
outsb
jmp
rol
dec
fstps
add
pop
leave
out
je
out
pusha
push
fsubrl
mov
cmp
fnstsw
pop
xchg
testb
cmpsb
pushl
dec
addr16
rcrb
cli
mov
loope
out
xorl
pop
ret
push
sahf
and
cwtl
mov
xchg
jle
outsl
dec
dec
xchg
rcrl
imulb
sahf
fs
mov
jmp
sbb
addr16
xlat
rcl
pop
xchg
out
jb
dec
push
dec
pop
iret
fisttpll
sbb
adc
bsr
mov
jo
xchg
xlat
dec
cwtl
sbb
rclb
sbb
aad
push
jae
out
push
nop
scas
int3
jae
jl
dec
outsl
xchg
fidivrl
mov
mov
stc
mov
push
ds
xor
cmp
ja
lds
push
mov
push
sti
dec
jl
xchg
jl
dec
xorb
out
in
mov
popf
rcll
pop
add
outsl
dec
loopne
test
sbb
pop
xchg
in
mov
jl
lahf
pop
popf
xchg
xor
stc
jbe
sub
repnz
xchg
lock
test
popl
jne
aam
xlat
call
stos
hlt
push
or
mov
insl
call
cli
scas
push
inc
icebp
stc
mov
cltd
sbb
or
outsl
mov
cmp
xor
daa
mov
pop
popa
dec
pop
bound
jnp
push
ljmp
stc
hlt
push
mov
sbb
sbb
cmp
sbb
into
lahf
jnp
sbb
xchg
xchg
les
mov
shlb
in
out
xchg
out
sbb
into
jecxz
xchg
lods
sbb
add
mov
adc
mov
push
sahf
adc
scas
and
testl
fwait
nop
pop
in
cmp
cmp
adc
xchg
jnp
adc
mov
mov
pop
mov
pushf
xor
out
mov
mov
daa
mov
push
cmpsl
or
or
aam
faddl
shl
daa
adc
test
lods
dec
ljmp
cmpsb
jl
pop
sbb
sbb
add
xchg
fildll
int3
add
push
jo
jmp
mov
jmp
jb
aaa
sbbl
iret
sahf
mov
imul
fcmovnu
or
stos
push
mov
adcl
loop
aaa
idivb
test
jecxz
cwtl
mov
data16
rorb
loope
int3
xor
lcall
jns
ds
push
and
add
pop
jno
popf
or
out
push
jle
repnz
push
andps
sahf
mov
sti
lods
je
std
dec
cmc
lahf
mov
loop
jecxz
and
jns
sub
sub
adc
cmp
mov
cmpsb
xchg
mov
or
aaa
fidivrs
aam
push
cmp
insb
cmpsl
dec
mov
pop
aam
jno
mov
jmp
xchg
mov
sub
jp
data16
push
jmp
pop
or
and
add
adc
cmp
or
ror
and
movsl
mov
lret
icebp
push
out
fstps
sub
ret
out
into
mov
xor
lds
les
fldpi
sub
ja
mov
sbbl
cmp
sbbl
ss
inc
push
repz
testb
gs
ss
scas
pop
pop
rcrl
lret
cmp
jae
out
iret
ror
xchg
je
insb
inc
pusha
jno
das
cmc
out
clc
popf
lcall
mov
cmovnp
cmp
decb
jmp
fcomps
jmp
inc
mov
lret
and
je
jle
xor
xchg
lahf
out
inc
lahf
mov
jo
push
movups
xchg
movsl
inc
and
jmp
lahf
js
and
add
pop
adc
cmp
add
fwait
stos
cmp
das
inc
push
inc
and
shl
mov
lods
js
mov
jb
negl
mov
fucomp
sub
adc
or
pop
cmp
cli
sub
pop
mov
addr16
xchg
xchg
inc
out
int3
cltd
mov
or
ja
inc
insl
sub
aas
stos
ds
mov
lahf
sbb
cmp
pushf
call
jge
out
fimull
cmp
pop
inc
shll
add
or
cmp
loop
push
sbb
pushf
xor
sbb
int
addr16
std
dec
xchg
pop
mov
mov
or
dec
or
fcmovnb
cltd
xchg
decb
mov
lahf
mov
xor
imul
in
xchg
fwait
repz
into
cmc
pop
pop
data16
cmp
jbe
sarl
insl
incb
ror
xor
aaa
das
sbb
push
outsb
cmp
inc
fbstp
cmc
push
fidivs
ss
testl
call
fisttps
xchg
out
sbb
nop
or
push
cmpsl
aaa
das
out
push
sbb
cmpsl
inc
push
cmpb
sbb
pop
repnz
mov
xor
imul
loopne
inc
int
mov
sbb
sbb
push
enter
mov
cs
movsl
enter
sub
xchg
ret
and
pop
add
lcall
loop
add
push
pop
les
and
ret
test
inc
pop
xor
mov
jb
out
jp
or
icebp
xchg
les
jo
mov
lods
out
test
xchg
hlt
xchg
sahf
add
jg
mov
lcall
shll
jmp
inc
jle
imul
loopne
stos
rcrb
ss
vpsrad
hlt
lods
outsl
xchg
leave
sbb
int
cmpl
xor
jb
mov
addr16
imul
arpl
push
jae
jae
in
fisttps
imul
xor
xorb
jno
and
jp
xor
mov
push
push
iret
popa
in
pusha
fiadds
add
or
mov
adc
push
xchg
test
ffreep
xlat
xchg
dec
hlt
lahf
test
xor
adc
jp
add
inc
sti
stos
bound
ret
mov
mov
lret
js
fsubs
gs
add
aad
jl
mov
leave
push
add
adcl
ret
rcrl
lahf
pop
mov
fistpll
sbbl
xchg
std
in
mov
popf
jg
aaa
cmp
fisubrl
sub
cmpsb
sbb
mov
xlat
cmp
cmc
cmp
mov
enter
ljmp
mov
decb
pop
lret
rep
xor
outsl
popf
pop
mul
fistpll
and
das
sub
gs
cmp
xchg
dec
mov
jl
xor
xor
ljmp
icebp
ret
xor
jecxz
mov
dec
jne
push
jne
data16
jbe
mov
scas
jo
daa
movsl
sbb
dec
mov
push
pushf
fisttpl
mov
and
pop
xchg
inc
mov
icebp
imul
std
mov
pop
inc
push
lret
int
mov
shrb
out
and
push
jo
scas
scas
imul
pushf
aam
sub
pusha
mov
adc
stc
cmc
imul
daa
jmp
inc
push
cmpsb
sbb
adc
mov
cmpl
aas
jecxz
cld
fstpt
rolb
mov
movsl
jno
dec
loope
mov
out
stos
jno
mov
mov
data16
insl
pop
leave
loopne,pn
sar
ds
mov
loopne
add
popf
cmp
outsl
cmp
ja
jae
out
out
into
sub
jg
sar
cltd
ds
mov
in
leave
out
out
pusha
inc
sub
enter
mov
int3
mov
ucomiss
das
subl
jecxz
mov
das
divl
js
xor
xor
mov
jp
xor
or
xlat
orb
roll
push
adc
clc
inc
cmovb
add
adc
mov
sub
sbb
sbb
push
push
cwtl
repz
cmp
imul
movsl
inc
test
cld
sbb
cmc
xchg
fucomip
push
mov
and
out
jg
and
nop
jnp
mull
repnz
adc
mov
movsb
add
repz
dec
fsubrl
pop
xchg
lods
cmpsb
pop
pusha
inc
ss
mov
inc
test
lret
repz
sub
in
iret
push
ret
loop
loope
xor
cmp
pop
inc
js
int
outsb
addr16
fcoml
xchg
add
and
cmp
cld
cmp
aad
sbb
cmp
loopne
mov
rol
cs
or
rcrb
imul
jno
int
int
data16
data16
out
iret
push
addl
pop
push
mov
push
fidivrl
ficompl
fisubrl
fidivrl
idiv
in
fidivrl
stos
or
cmc
mov
fstpt
outsl
imul
push
pushf
stc
inc
es
push
je
ljmp
jp
ja
shlb
adc
mov
mov
sbb
cld
cmp
adc
jno
jae
lods
jnp
inc
aaa
testb
imul
mov
push
sub
add
testl
pop
out
mov
and
mov
arpl
push
iret
sub
xchg
jb
jmp
scas
mov
pushf
negl
aas
xchg
push
call
fs
push
push
pop
lahf
jnp
fisubs
push
or
push
inc
mov
jmp
scas
mov
or
sbb
or
mov
add
repnz
stc
adc
xchg
leave
cmp
inc
pushf
divb
out
or
mov
std
fstl
and
add
stos
mov
jmp
fisubl
xor
daa
xor
sti
inc
push
into
movsl
leave
dec
sbb
pop
popa
sar
sar
jl
mov
imul
dec
xchg
ret
jecxz
loopne
jns
pop
lret
mov
fcmove
xor
imul
mov
push
cli
cmpsb
imul
mov
cmpsl
mov
inc
stos
jb
test
mov
add
push
testl
pop
xchg
icebp
mov
sbb
imul
out
sbb
jae
fsubrl
rcll
mov
jg
and
movsl
push
in
cmp
inc
cmp
out
push
push
sbb
jne
stos
cmc
in
jbe
push
mull
adc
mov
in
cmp
lret
inc
push
fs
jno
dec
pop
enter
ret
mov
jno
and
mov
adc
xchg
jp
pop
xor
sbb
inc
stos
imul
dec
fsub
mov
lcall
pop
push
cli
stc
andb
pop
fdivrl
mull
lahf
daa
mov
dec
out
xchg
mov
jecxz
inc
ds
mov
aam
sbb
mov
cltd
movsl
ret
in
cmpsl
push
add
dec
add
cmp
mov
mov
arpl
dec
sbb
xor
mov
inc
aad
lods
jmp
shlb
js
dec
jns
repz
jmp
sub
mov
insb
cmp
jp
add
mov
js
shl
and
outsl
rcr
xchg
shrl
data16
cwtl
sub
jge
out
rorb
dec
popa
movsb
push
pusha
inc
jle
call
scas
cmp
and
hlt
arpl
mov
mov
arpl
dec
loop
into
xor
adcl
test
sti
mov
mov
adc
jo
gs
pop
cmpb
mov
movsb
enter
lods
jge
stos
lahf
adc
ss
sub
es
inc
lea
sbb
jno
es
jo
mov
ja
testl
cmovo
push
push
pop
mov
fs
repz
mov
mov
fbstp
push
pop
adc
lcall
mov
and
mov
cmp
xor
psrad
dec
jmp
loope
lcall
icebp
cmc
filds
adc
pushf
fisubrs
sub
outsl
and
sub
fcmovnu
test
sub
dec
sub
xor
mov
stc
fstpt
loop
lcall
jge
cmp
xchg
incb
hlt
repnz
cmp
adc
cmp
loop
xor
outsl
pop
inc
into
xchg
popf
dec
mov
test
sahf
and
sbb
mov
fcom
loop
pop
mov
add
flds
fldl
outsb
jle
xchg
std
stc
and
adc
and
jb
out
jb
push
push
pop
fs
or
jmp
daa
call
jp
jae
mov
dec
mov
jnp
dec
in
sub
cmp
and
sbb
pop
scas
and
mov
and
rcrl
mov
mov
xchg
push
xor
mov
sahf
sub
mov
pushf
dec
xor
aam
lods
sbb
xlat
sahf
mov
int3
js
daa
nop
and
mov
cltd
pushf
rcrl
mov
push
dec
sub
aas
stos
xchg
push
jae
je
lods
mov
push
sub
mov
clc
jmp
sarl
jne
ret
sti
sub
ja
jae
fdivr
aaa
jecxz
bound
int3
push
test
neg
lods
mov
jmp
sub
sub
ret
je
jno
nop
xchg
xor
loop
xor
scas
enter
paddsw
pop
stos
cli
or
jb
inc
cli
fwait
or
xchg
mov
ja
sti
xchg
xchg
pop
mov
movsl
xchg
dec
sub
sub
or
cmp
arpl
aas
rclb
movl
mov
jbe
daa
stos
pop
jb
sbb
or
sub
mov
sti
sbb
cmp
push
xor
les
mov
xchg
and
rorb
push
mov
inc
in
in
loopne
fidivl
fildll
fsub
les
in
cwtl
lret
into
pushf
daa
mov
in
mov
outsl
push
jbe
out
scas
in
into
pop
js
scas
jmp
jnp
imull
sub
xchg
jmp
mov
and
add
sub
jmp
imul
dec
ja
clc
jecxz
mov
pop
dec
and
or
stc
in
lods
push
repz
inc
jo
cs
push
cmp
jl,pt
mov
xchg
mov
mov
inc
lods
lods
aad
mov
adc
jecxz
pop
push
push
mov
jmp
fwait
push
and
fimull
inc
jle
aaa
push
shlb
ljmp
jmp
add
cwtl
and
cltd
dec
mov
dec
adc
jl
ret
pop
neg
inc
cmp
push
mov
fistpl
outsl
inc
xor
push
jb
dec
inc
mov
or
adc
cli
jne
xchg
es
in
jno
out
xor
mov
jge
xchg
pop
adc
mov
lods
shr
aam
inc
cmc
idiv
add
jo
outsl
and
mov
cmp
roll
sti
int
pop
lcall
pop
push
mov
mov
mov
pop
add
loopne
jl
or
loope
inc
mov
movsb
ret
add
jle
cmc
or
mov
push
push
cmc
xchg
inc
jecxz
inc
xchg
fmuls
cmp
pop
pusha
sbb
es
xchg
jge
jle
mov
jle
mov
pop
data16
outsb
ret
jp
inc
sbb
mov
xchg
jge
pop
fwait
cmc
xor
push
mov
icebp
imul
dec
or
pushl
fiadds
arpl
aam
test
mov
jl
clc
push
push
mov
repnz
out
into
adc
adc
imul
outsl
mov
push
jecxz
inc
mov
fnstsw
jecxz
aas
jns
cmp
xchg
mov
imul
pop
repz
sets
cli
cmpsl
shr
lds
pop
cmp
inc
push
mov
xor
adc
sub
mov
shrb
or
insb
push
or
ficompl
inc
mov
lods
stc
pop
je
dec
sbb
ror
mov
adc
sub
jg
mov
imul
in
xchg
iret
icebp
fisttps
bound
lahf
xorl
inc
inc
movsb
movsb
cmp
call
xor
adc
mov
out
xor
loope
cli
test
mov
aas
xchg
push
push
into
and
inc
mov
xchg
xchg
sub
pop
shr
jp
fs
in
mull
pushf
xchg
cmp
xor
adc
inc
into
repnz
int3
testb
imul
in
int
stos
aam
scas
stos
push
pop
cmpsb
lds
mov
ds
mov
popa
sub
jle
mov
in
aad
add
outsl
jle
xlat
fistpl
push
add
js
stos
and
insb
loop
dec
nop
das
and
mov
jmp
fs
out
xor
cmpsb
mov
out
xlat
push
pop
lods
and
jnp
rcr
lcall
aad
enter
add
push
or
fldenv
mov
add
sbb
or
xor
movsl
dec
lock
xchg
repnz
incl
enter
xor
xlat
dec
mov
mov
mov
mov
dec
jge
xorl
in
lret
fs
shrb
pop
sub
lahf
bound
mov
ffreep
adc
inc
fsubl
sarl
jg
jg
push
mov
sete
pop
jg
push
pop
mov
in
scas
jmp
es
mov
xlat
adc
es
mov
jmp
icebp
fbstp
mov
dec
lahf
adcl
or
int3
cld
mov
fucomp
aas
jp
movsb
stos
and
out
jae
xchg
test
popf
mov
jle
ja
in
fsubs
out
mov
loopne
cmp
insb
imul
mov
cltd
das
test
push
xchg
pop
cmp
fs
dec
mov
popa
into
sub
inc
xor
bound
int3
xchg
lods
in
mov
or
push
xor
in
push
or
lcall
fisttpl
mov
test
mov
divb
es
ficomps
pop
lahf
sub
test
mov
pusha
or
add
out
or
stc
pop
jbe
cmp
or
sbbb
cmpsl
dec
push
push
push
mov
into
jb
push
pop
dec
jb
jp
aas
fwait
std
and
fwait
lods
or
sbb
ficoms
stc
mov
mov
add
mov
push
xor
push
out
movb
outsb
fisttpll
cltd
icebp
sbbb
ja
adc
test
mov
push
aad
movsbl
cld
inc
adc
mov
in
sarl
in
dec
or
out
jmp
push
outsb
gs
call
mov
cmp
cmc
mov
cmp
dec
pop
bound
dec
inc
fcmovbe
int3
test
xor
jmp
xchg
lods
test
dec
cmp
push
jns
scas
aad
icebp
pop
enter
enter
mov
sahf
popa
and
sub
dec
add
sbb
lock
imul
or
mov
adc
adc
push
lds
dec
add
push
sbb
into
stos
mov
mov
sbb
notb
lods
js
testb
inc
cli
cs
jle
or
fwait
hlt
pop
jp
mov
fiadds
sub
imul
int
lds
mov
out
add
lods
jecxz
cli
rorl
pop
imul
lea
ljmp
lret
sbb
xorl
and
inc
xchg
pop
sub
pop
mov
add
cld
push
fs
add
mov
sub
in
call
pop
test
xchg
xor
out
mov
sbb
repnz
out
jl
sbb
or
aas
cld
jno
outsb
mov
aaa
jb
clc
pusha
cmp
mov
cli
repnz
cld
lahf
call
cwtl
fadd
cwtl
dec
cmc
xchg
mov
cld
sub
daa
sub
pushf
std
cmp
fdivl
cmp
or
incl
sahf
decb
std
je
fmuls
aaa
out
call
std
xor
jg
dec
mov
cmp
hlt
xchg
mov
jb
ret
pop
mov
jecxz
cmp
insb
imul
rcll
mov
cmp
aam
lods
pop
sarl
xorl
mov
xor
aaa
push
je
lret
arpl
and
pushf
imul
adc
lods
mov
ds
jge
in
mov
into
dec
pushf
lahf
cmp
xor
dec
jl
sbb
outsb
add
outsb
into
ficomps
mov
adc
jle
xchg
mov
xchg
into
cld
push
pop
xchg
fisttps
adc
mov
jnp
fcoms
xor
jo
cmp
cld
push
test
and
cmp
stos
test
cmpsl
push
sahf
int
call
fildl
scas
lods
cltd
pop
xor
loope
xor
xor
and
cmp
jl
lret
dec
mov
lret
pop
fnstsw
fs
into
or
sbb
push
cmp
adc
inc
and
mov
inc
mov
or
cmp
das
data16
push
xchg
enter
sub
adc
addr16
mov
jg
jp,pn
sbb
lcall
imul
pandn
lret
pop
mov
repz
mov
nop
popa
mov
inc
xor
jl
lret
xlat
pop
mov
mov
aaa
jle
bound
insl
idivb
sbb
les
push
jb
jae
data16
xchg
mov
sbb
mov
push
xchg
mov
je
ja
dec
xor
xlat
jp
lahf
lock
push
jb
shrl
repz
cmp
imul
out
daa
sub
cmpsb
jo
dec
stc
dec
sbb
lahf
ror
inc
cli
insb
mov
pop
test
mov
clc
loope
sarb
or
fsub
push
mov
dec
aas
in
cmp
int3
testb
push
aad
pop
or
loop
lock
jae
out
stos
pop
out
mov
stc
mov
in
lock
pop
sti
dec
sti
rolb
iret
cld
inc
mov
jbe
add
fistps
pushf
push
sbb
orb
stc
push
mov
or
pop
insl
sbb
cmp
jnp
mov
ret
or
repnz
inc
jle
stos
sub
daa
pop
add
fdivrs
fnstcw
and
inc
mov
adc
mov
xchg
arpl
pop
xchg
imul
pop
jle
or
and
mov
jg
pop
pop
mov
incb
loop
fs
fucom
fisubrl
adc
xchg
fmul
inc
notl
mov
inc
dec
dec
pop
lahf
xchg
cmp
and
jb
enter
sbb
xchg
xchg
scas
lcall
sub
ja
iret
nop
arpl
cmc
mov
push
jae
inc
lret
cmp
mov
xor
or
dec
loop
mov
testb
loop
ja
sub
out
jp
ljmp
mov
pop
enter
adc
fisubrl
out
and
je
mov
jle
hlt
js
sub
mov
lret
scas
stos
outsl
xor
sub
fwait
popf
fldcw
xchg
mov
xchg
mov
jnp
mov
pop
ljmp
lcall
or
ljmp
mov
aaa
mov
mov
pusha
fistl
xchg
arpl
rolb
sub
lds
cmp
addl
enter
aas
mov
imul
mov
in
ficoms
cmp
loop
mov
loop
push
adc
lock
cwtl
loopne
or
aad
lahf
dec
mov
stos
cmpb
jmp
int
stc
push
pushf
jmp
jp
out
insb
dec
pop
cwtl
fldl
push
xchg
pusha
cld
cmpsb
cli
int
in
les
and
pop
cmp
pop
mov
cmc
inc
mov
cmpsl
aaa
and
mov
jge
scas
in
pop
fdivrl
jbe
out
lods
mov
jnp
repnz
cmc
outsl
leave
xchg
or
push
out
dec
jge
mov
jns
push
cli
mov
push
inc
flds
sbb
ret
inc
mov
xchg
and
fmuls
pop
cld
push
push
pop
mov
repz
push
sti
or
lret
hlt
lahf
and
sub
repz
ss
jle
jl
clc
push
pusha
sbb
inc
mov
dec
jmp
cltd
lahf
push
les
incl
pop
sahf
push
mov
out
cs
push
fcomps
ja
sub
mov
mov
popf
stc
add
std
cs
sbb
pop
gs
xor
cmp
pop
fcmovne
stc
aaa
repz
adc
add
jbe
adc
jp
fs
add
jp
adc
lret
lret
cmp
aaa
or
clc
daa
cs
mov
aad
add
add
es
test
in
sbb
push
mov
jl
jecxz
popf
lods
mov
sub
jae
aaa
test
jp
les
or
popf
repz
pop
and
and
ds
out
and
outsb
aad
mov
jg
cmp
mov
js
out
rolb
add
mov
inc
nop
mov
or
les
pop
out
add
push
in
dec
or
dec
xchg
dec
bound
push
and
sub
push
loop
stc
incb
pop
mov
xor
jae
xor
out
pop
lds
push
jns
cmp
popf
fwait
pop
push
and
and
mov
leave
dec
inc
dec
sub
dec
pop
push
lret
sti
push
sti
xchg
nop
xchg
lods
scas
pop
sub
lods
stos
aam
stos
addr16
in
lret
push
faddl
fisubrl
rcll
adcl
mov
or
xor
int
icebp
aas
lea
out
aas
mov
and
add
arpl
mov
shlb
pop
dec
lret
inc
jnp
mov
movsl
ja
and
push
test
fmuls
sub
and
jge
jbe
mov
add
add
loope
shll
or
insl
xlat
sarb
outsb
adc
movsl
xor
sahf
push
cmp
jae
xor
cmpsb
pushf
push
mov
sbb
loop
ret
das
cmp
mov
popf
pop
xchg
bound
ficompl
dec
scas
mov
mov
int3
fs
adc
call
mov
shrl
lods
data16
cltd
mov
xlat
mov
loopne
div
sbb
xor
cmp
bound
mov
addr16
ss
negl
inc
dec
xchg
stos
jecxz
insl
loop
testb
out
sub
fildl
xchg
or
outsb
adc
mov
lea
in
sbb
push
popf
push
jmp
xchg
test
lock
repnz
gs
xlat
popf
mov
pop
cmc
push
sub
bound
or
cltd
xchg
cltd
loope
aaa
push
shrb
adc
aaa
xor
adc
fnstcw
ret
xor
popa
imul
fstp
ret
adc
rcrb
imul
aam
fldt
imul
aam
sahf
pop
or
sub
out
cli
loope
jnp
xchg
ret
out
jge
mov
lea
inc
adc
stos
sub
in
int
aas
lret
jg
xor
xchg
xchg
jl
cwtl
lds
ljmp
call
push
push
jae
jbe
pop
mov
cltd
stc
dec
mov
in
mov
sub
mov
sbb
ds
xlat
dec
nop
adc
mov
hlt
stc
dec
push
xchg
cwtl
imul
sub
or
jbe
lods
insl
pop
mov
call
repz
xor
in
xor
cmp
and
outsl
sbb
cltd
mov
or
jb
xor
add
out
add
lods
ljmp
call
pop
shl
iret
sub
xchg
cmp
lods
fnstcw
jmp
insb
fidivl
cli
test
cmp
mov
mov
xorb
loop
notl
ja
and
pop
jo
rolb
ja
pop
lahf
jne,pn
std
adc
jns
popf
jp
cmc
pop
ljmp
nop
les
sahf
dec
adc
jne
sahf
lea
or
pop
jns
and
pushf
xchg
int3
fnstcw
in
fistpll
div
addb
test
rol
or
add
dec
add
mov
pop
or
xchg
lds
or
imul
test
cwtl
jecxz
cmp
faddl
xchg
dec
push
dec
sbb
jae
out
fistpll
add
jae
out
aas
ja
fucomp
jnp
ja
int
sahf
outsl
jge
cmc
aaa
jge
cli
sbb
aaa
jl
jge
cmc
neg
filds
push
jge
jbe
fsub
insl
mov
fisttps
test
push
in
push
imul
jle
jle
jle
aas
and
mov
cmp
cmp
pop
xchg
mov
mov
fistpl
pop
je
aam
add
fldl
dec
ret
std
push
xor
mov
push
pop
push
and
idivb
and
sbb
leave
daa
shlb
xor
dec
mov
dec
test
cs
push
scas
int
and
xchg
outsl
cli
and
adc
mov
adc
sbb
stos
and
lods
add
pop
jb
cmp
cmp
mov
xchg
sbb
aas
inc
cmp
or
shl
cmpsb
subb
mov
sbb
in
jge
les
loop
jno
subb
xor
and
icebp
adc
mov
jns
sbb
mov
cmpsl
les
int
lds
cltd
loope
mov
loop
mov
int3
dec
mov
dec
push
xor
lcall
int
sbb
jg
stos
sbb
data16
test
pop
rcrl
add
dec
sub
rcll
daa
fwait
pop
cmp
xchg
or
mov
repnz
adc
add
enter
xchg
push
push
push
sub
mov
cwtl
mov
hlt
add
movsb
jne
jbe
jnp
fcoml
sbb
out
loopne
lock
ds
cs
mov
pop
inc
outsb
xchg
out
adc
cmp
cmc
xor
clc
je
push
js
xor
sbb
jo
jb
jne
popa
push
inc
mov
out
or
cmp
out
arpl
xchg
mov
xchg
jecxz
movsb
and
xchg
sbb
sbb
add
lock
shr
outsb
cmovnp
push
push
jmp
mov
frstor
or
xor
aam
aad
fistpl
ss
je
push
mov
inc
pop
or
jbe
cltd
leave
xor
scas
sub
dec
divb
pusha
loope
push
in
cld
and
jns
inc
in
in
or
insl
dec
imul
loop
loope
push
iret
bound
dec
xor
es
mov
imul
lcall
imul
jecxz
lods
sbb
es
inc
mov
sbb
inc
mov
fdivl
pop
push
mov
inc
lea
clc
jle
sbb
xor
dec
cmpb
lea
sub
je
pop
jno
or
cmp
mov
scas
call
shr
push
shll
and
xchg
pop
xor
cmp
lahf
cmpsl
inc
push
jb
movsl
push
in
push
stc
push
cld
xchg
loopne
fisttpll
sbb
fwait
xchg
jmp
int
mov
repnz
mov
pop
jecxz
adc
xlat
jg
cmpl
mov
sti
and
pusha
in
mov
push
fldl
rclb
out
call
fisttpll
adc
arpl
xlat
mov
and
and
cmp
addr16
shr
lret
pop
cmpsb
inc
inc
cmp
jmp
pop
sbb
cmpb
pusha
sahf
mov
sub
xorl
mov
pop
aas
mov
test
das
sbb
lret
push
adc
or
faddl
jge
pop
lock
jnp
sbb
inc
pop
xlat
hlt
nop
sub
movsb
xchg
xchg
sbb
dec
xor
int3
push
mov
lea
ret
out
push
xchg
jb
sub
rclb
loopne
inc
mov
mov
leave
mov
rorl
dec
cld
mov
cmp
sti
pop
std
sub
cmpsl
push
inc
out
lds
mov
mov
shlb
jbe
vpermilps
push
stos
in
clc
in
adc
mov
fadd
sbb
jg
pusha
scas
push
ja
aam
xchg
jmp
out
fadds
or
loopnew
ret
xor
orb
sub
rorl
cmp
popa
popf
sbb
dec
sub
test
sbb
ret
mov
push
mov
mov
pop
mov
mov
mov
xlat
jno
jnp
mov
lock
cmpsb
mov
add
xchg
ja
loop
xor
or
pushf
es
adc
adc
and
dec
rcr
lahf
test
inc
xor
pop
dec
xor
rorl
cmpsb
dec
mov
popa
or
cltd
mov
xchg
mov
ret
test
aam
cmpsb
scas
cli
adc
push
cmp
dec
enter
push
pop
or
pop
xchg
mov
mov
fidivs
sarb
xchg
cld
jbe
push
mov
pop
in
xor
imul
adc
movsl
pusha
cmp
ret
and
hlt
add
std
dec
pop
and
ret
mov
mov
sub
mov
imul
sub
ja
mov
xchg
lods
das
sbb
dec
imul
sub
out
ficoms
out
adc
mov
out
xor
jecxz
arpl
loope
mov
movsl
or
sub
and
loopew
shrb
pop
sub
popa
ljmp
test
inc
rol
in
loope
and
inc
ficomps
push
or
jmp
ljmp
iret
test
movntq
out
repz
jg
outsb
push
shlb
icebp
jne
mov
add
repnz
and
adc
in
test
out
mov
daa
in
in
push
notl
out
cmp
xor
or
jno
sti
sbb
idivb
gs
iret
stos
push
out
inc
mov
or
xlat
lret
emms
inc
out
jo
pop
xor
or
pop
testl
mov
pop
daa
insl
sub
inc
ljmp
mov
andl
gs
lods
sbb
or
jnp
dec
mov
cli
push
out
cs
cmp
push
jmp
mov
mov
fstpl
imul
xchg
xor
mov
cmp
cmc
jno
cwtl
or
scas
rol
adcl
std
push
sub
mov
fs
mov
pusha
ja
dec
int
add
pop
sbb
stc
pop
mov
lock
inc
jmp
in
sub
cmp
push
mov
mov
test
adc
sbbl
pop
and
inc
mov
add
les
sub
xchg
cli
scas
divl
mov
in
clc
shr
push
repz
mov
cmp
jnp
jle
testl
add
push
cld
mov
jp
out
lret
push
sti
loope
repz
imul
cld
shr
and
out
into
push
hlt
inc
fistps
inc
jnp
loope
out
sub
scas
push
lock
mov
xor
cmp
xchg
in
xchg
and
sub
sub
stc
popa
pop
inc
cli
in
sbb
mov
xorb
aas
jo
sbb
adc
pusha
inc
mov
imul
mov
loopne
ljmp
in
pop
pop
adc
sbb
cmp
in
sbb
test
cmp
std
inc
andl
imull
xlat
sar
add
mov
mov
les
in
sbb
pop
push
pop
rorl
cmp
dec
fdivs
fstpl
and
shlb
andps
sti
or
mov
cmc
outsl
ja
pop
cli
jl
mov
psadbw
test
dec
inc
ljmp
out
sbb
ljmp
fdivs
or
ja
aas
sarl
jp
mov
sbb
stc
add
clc
divl
push
mov
cmp
arpl
sbb
ljmp
les
lea
mov
sbb
loopne
mov
cld
icebp
out
pop
cmp
popa
push
scas
push
lock
mov
mov
rorl
jbe
ficoms
and
or
push
pop
mov
cmpb
pop
sarb
repnz
inc
clc
add
shrd
jp
rcrb
inc
idiv
mov
dec
jnp
push
loope
or
mov
and
pushf
js
sahf
dec
sbb
out
sbb
mov
jno
sub
pop
cmovae
mov
inc
outsl
das
mov
jge
int
pop
rclb
sahf
cmpsb
icebp
movl
jnp
mov
jns
mov
cwtl
fdivs
cmp
push
loope
or
pop
inc
lea
loope
and
sbb
jo
enter
mov
insb
pop
jo
or
adc
xbegin
or
rcll
jb
lcall
inc
mov
sub
mov
fwait
xchg
add
dec
and
int
pop
fwait
lock
roll
xchg
push
inc
sub
sbb
mov
mov
sti
mov
push
cmp
pop
pushf
jecxz
inc
in
cmp
repz
rcrl
lcall
addr16
jo
sti
test
cltd
scas
cmp
mov
bound
add
ret
fwait
mov
dec
sub
and
pusha
cltd
jo
cmp
imul
out
fldl
lret
sub
lahf
and
ss
test
lahf
xor
iretw
nop
cmp
mov
cmp
sub
int
or
dec
and
xchg
fcoml
xchg
out
clc
xchg
cmp
popa
sbb
adc
inc
dec
xchg
xor
clc
cmp
add
sub
add
outsb
cmp
add
addr16
pxor
dec
das
enter
mov
hlt
into
test
mov
jns
into
fs
and
adc
pop
mov
xor
sbb
and
adc
outsb
push
arpl
cltd
lea
mov
pushf
mov
insl
mov
int3
sub
xor
xchg
std
lret
repnz
lods
daa
addr16
mov
xor
shll
lret
and
or
and
mov
sub
or
push
imul
rolb
scas
add
mov
sbb
dec
testl
xchg
fcoml
ljmp
imul
lock
cmp
and
lcall
xchg
mov
clc
lods
in
sarb
imul
mov
repnz
mov
stos
cltd
xchg
out
insb
mov
decb
in
js
fmull
outsl
jecxz
daa
cmp
xchg
jg
jns
and
hlt
push
out
clc
sub
call
mov
loop
mov
sbb
gs
out
cmp
cmp
icebp
pushf
cmpb
jae
je
int3
ljmp
ds
push
outsb
out
je
mov
cmp
repz
adc
mull
mov
cwtl
mov
mov
lahf
add
mov
shll
dec
cmp
mov
inc
fcmovnu
pop
cwtl
xchg
pushf
mov
out
subl
rorl
mov
inc
pop
cmp
cs
mov
dec
inc
and
bound
faddl
sbb
hlt
rol
and
loopne
mov
push
iret
inc
push
mov
enter
sbb
std
add
mov
inc
cmp
adc
cmp
roll
inc
enter
push
add
divb
dec
loopne
movsb
push
cltd
push
inc
out
sbb
out
hlt
cmp
icebp
sub
push
xchg
adc
jp
add
cmp
mov
mov
cmc
test
inc
or
aas
cmp
mov
adc
cmp
enter
xorb
jp
sub
insl
imul
addb
and
rcr
add
pusha
dec
fs
pop
cmc
pop
mov
cmpsl
scas
enter
enter
push
xchg
and
sub
adc
and
jns
addb
and
and
jo
into
push
pop
push
subl
hlt
adcl
add
inc
fdiv
pushl
call
out
mov
mov
fisubrs
xchg
cmp
adc
jne
iret
xchg
adc
lods
lret
repnz
mov
bound
lock
rol
out
movsb
mov
dec
cwtl
mov
into
xor
adc
add
stc
cli
add
cmp
in
adc
mov
shlb
sbb
lcall
dec
inc
jno
shll
lods
mov
and
sub
stos
or
sbbl
les
outsb
flds
mov
inc
adc
cmp
mov
push
push
xor
dec
test
or
add
ret
dec
test
mov
or
mov
pusha
test
or
arpl
addr16
jb
push
test
cmp
mov
mov
lods
pop
push
xchg
xchg
enter
xchg
inc
push
lds
sub
jae
push
in
fs
mov
xchg
xor
les
sbb
fs
ljmp
lcall
and
pop
and
das
lods
mov
inc
sbb
mov
cmpsl
mov
xor
in
es
pop
hlt
movsl
inc
fisubl
mov
pop
adc
xorl
xor
add
push
movsb
lret
mov
hlt
dec
enter
pop
cld
es
mov
sub
rolb
aam
pop
imull
sbb
es
cmpsb
push
call
push
fcoms
stc
jns
bound
dec
hlt
and
loopne
les
mov
lods
bound
add
ljmp
push
shrb
ja
and
inc
push
push
adc
or
mov
push
mov
sub
push
mov
popf
enter
rorb
mov
xor
dec
pop
xor
dec
jp
push
xor
add
fs
lock
andb
ja
mov
sbb
and
loopne
rorl
add
jo
push
andl
push
mov
and
mov
incl
imul
dec
aas
cmc
mov
mov
arpl
xchg
shlb
mov
aam
pop
and
adc
popf
test
bound
fildl
push
mov
dec
push
adc
lea
ror
cmp
inc
pop
mov
std
cli
and
mov
add
in
dec
mov
aam
push
test
push
lcall
arpl
fidivl
xor
sbb
lea
mov
xchg
in
fcom
mov
orl
pop
mov
aaa
pop
scas
xlat
jmp
jae
push
xchg
sub
sub
bound
gs
sub
adc
or
test
jmp
dec
jg
mov
sbb
repnz
push
inc
inc
cmp
mov
sub
leave
fwait
sahf
mov
xchg
or
jbe
mov
mov
adc
mov
pop
out
pop
hlt
inc
in
inc
out
lods
xor
and
test
mov
push
mov
dec
dec
inc
mov
in
jle
sub
jl
emms
inc
cmp
ret
arpl
ja
in
lret
dec
and
sub
cmpsl
push
adc
sub
fstpl
jnp
jge
pop
jmp
mov
jecxz
imul
push
jne
jge
daa
dec
sub
mov
inc
jle
cmp
cmovnp
push
outsl
xchg
in
aaa
gs
jge
mov
sbb
movsl
repz
xor
out
rcrb
insl
pop
js
xchg
xchg
inc
sbb
xor
jbe
jge
jno
sahf
dec
jno
mov
xchg
xchg
push
repz
fldl
xor
dec
pop
pushf
subl
roll
add
add
cld
fisttps
std
nop
jnp
pop
push
out
roll
out
aam
xor
sbb
and
lods
setae
cmpsl
push
inc
mov
inc
pop
xlat
fiadds
scas
insl
cs
cld
lock
mov
les
jge
ja
push
in
daa
jp
jo
loopne
add
cmp
leave
mov
leave
push
aaa
cmpsl
out
aaa
jg
push
jg
fimuls
ljmp
ret
icebp
cwtl
subl
xchg
std
lahf
fcoms
iret
pop
iret
or
outsb
mov
or
sbb
xchg
jge
pop
jb
push
jae
sbb
out
adc
cmp
movsb
push
test
or
jmp
mov
pop
cwtl
sub
inc
sar
sbb
repz
lock
imul
aas
pushf
adc
out
inc
vmovaps
cmpl
cmp
loop
popa
lock
clc
ror
cli
add
stos
jb
cld
addps
ja
jo
shr
sbbl
and
or
pusha
add
vmread
stc
cmp
lock
jecxz
and
scas
jle
cld
sahf
adc
in
xchg
loop
imul
ror
jns
hlt
cld
and
ds
jae
lods
nop
jo
ret
ja
cld
shl
out
ss
and
hlt
or
div
mov
aas
fdivr
popa
sar
sub
mov
loope
ret
testb
test
xchg
mov
sub
pop
and
nop
sbb
stc
orl
dec
adc
std
xchg
test
pop
jge
jl
lods
mov
pop
in
pop
je
mov
push
mov
jg
dec
adc
pop
xor
push
push
fdivrl
dec
daa
xchg
lret
adcl
jmp
push
addr16
in
outsl
repnz
sbb
cmp
pop
rcrl
rcpps
bound
lods
shlb
jnp
pop
loopne
jg
ucomiss
adc
pop
loop
repz
shlb
std
mov
int3
decb
pand
dec
pop
or
cmp
shl
push
popa
rcrl
jl
aam
mov
cmp
xor
lods
push
jns
icebp
xchg
fistps
push
rolb
enter
dec
adc
cmp
add
mov
adc
rcrl
cmp
xlat
lret
sub
inc
jae
mov
popa
subb
sub
or
outsb
jns
xchg
shl
jmp
jae
std
lods
testb
outsl
mov
cmp
sub
or
cmp
cmp
ja
in
ja
jb
sbb
icebp
or
push
push
xchg
mov
fs
aaa
cmp
jmp
ret
lahf
iret
out
insl
insl
push
sbb
test
imul
mov
mov
scas
sbb
mov
inc
dec
and
out
inc
lods
imul
dec
aas
aas
mov
js
fists
mov
iret
mov
idivl
in
divl
arpl
xlat
enter
das
stc
push
pop
pop
test
fistpll
and
xor
test
and
out
lds
loopne
cmp
or
icebp
sub
sarb
xchg
dec
mov
pop
enter
lahf
fnstcw
das
call
jb
std
jg
cli
mov
clc
cmp
daa
jno
int3
cmp
push
add
jnp
sub
pop
scas
test
daa
daa
adc
cltd
xor
push
pop
ret
lock
push
jns
sbb
adc
xchg
xor
sub
loopne
mov
scas
loop
bound
xchg
push
addb
xchg
sbb
pusha
xor
mov
pop
adc
mov
mov
test
test
jo
xchg
out
xor
sub
loop
iret
clc
je
ds
test
scas
xlat
icebp
decb
insl
jmp
push
std
xchg
xor
lret
push
lret
pop
jecxz
mov
dec
inc
cmp
das
movsl
cwtl
enter
aad
imul
push
es
sbb
cmpb
and
mov
pushf
fldpi
xor
loope
pop
pop
and
xor
jo
pop
push
add
bound
mov
into
insb
jne
fstl
mov
ret
pop
mov
rcr
cwtl
or
push
testl
lret
inc
mov
xor
cmp
imulb
jno
adc
push
fdivl
sti
jge
push
mov
mov
xchg
stc
mov
js
movsl
jmp
mov
test
cmp
int
imul
cld
stos
mov
mov
imul
inc
inc
mov
xchg
iret
dec
fucomip
jnp
and
lahf
pop
xchg
outsb
in
jge
pushf
push
int3
into
imul
jbe
jg
aam
push
outsb
xor
pop
and
lods
in
idiv
arpl
cmpsl
shll
xor
rorb
sti
iret
jg
xchg
xchg
pop
ror
sbb
mov
pop
repz
outsb
ja
mov
pop
lahf
mov
sbb
lock
mov
adc
arpl
out
jo
std
fmull
dec
into
insl
ss
mov
int
jb
aas
aas
mov
lock
ja
lret
idivb
jb
inc
mov
loope
jmp
out
jb
mov
imulb
outsl
cmp
int
aam
sti
push
mov
into
pop
lock
test
cmpsb
fwait
outsl
mov
sarb
repz
xor
dec
sub
jns
rsqrtps
mov
or
fcmovnbe
lock
push
add
sar
ds
loope
jp
mov
pop
push
movsl
inc
inc
stos
ljmp
in
jl
adc
jmp
fldt
pusha
or
fnstenv
lods
dec
adc
cmp
cltd
repz
cmp
sub
inc
mov
inc
xchg
inc
out
cmp
or
rorb
movsb
scas
adc
push
mov
or
daa
add
subb
or
mov
mov
bswap
in
lahf
jo
jnp
jbe
and
popa
mov
push
or
add
in
cmp
rolb
or
in
push
fistpl
fistps
and
lcall
and
jecxz
push
push
rsm
mov
lret
imul
ret
pop
xchg
das
stos
jno
pop
pop
sub
sbb
xchg
test
stos
leave
inc
push
jmp
fs
in
xor
clc
mov
sub
int3
xchg
lahf
lret
andps
dec
pop
dec
jp
jne
cmc
xor
xchg
push
push
dec
sub
ss
xchg
lret
ja
leave
or
pusha
mov
cwtl
push
or
push
jo
jle
cmpsb
les
rolb
xchg
pop
and
pop
movsb
iret
cmpsb
into
in
stos
lret
fnsave
jl
rcll
or
lods
shrl
sub
sub
sub
jmp
xchg
lock
and
iret
push
cli
add
xchg
jp
xchg
xor
cmp
dec
mov
jb
or
cmp
rorl
fsubrl
aad
push
mov
movnti
mov
js
jo
add
dec
jle
push
out
inc
mov
and
xchg
add
cmp
lods
mov
add
and
subl
aam
out
stos
lret
inc
or
sbb
out
sub
or
lret
loop
jno
or
push
dec
pop
pop
dec
mov
pop
pop
cwtl
lret
xchg
repz
shll
xlat
adc
push
xchg
movsl
in
jbe
or
mov
sbb
jg
into
scas
ds
xor
xchg
push
cltd
sub
mov
sahf
insl
mov
dec
jle
push
loope
popf
es
mov
xor
mov
push
mov
mov
xor
sbb
lret
pop
push
push
push
pusha
push
dec
mov
push
dec
andl
pop
cmpsb
test
dec
pop
sub
movsb
add
and
shll
push
data16
adcb
dec
adc
rcrb
adc
repnz
push
scas
xchg
sbb
jg
addr16
pop
xchg
fs
xor
pusha
notl
xchg
in
inc
fisubs
lret
orl
or
ret
test
mov
cwtl
xchg
test
mov
sub
repnz
cltd
js,pn
scas
cmp
mov
xor
mov
xchg
sub
lcall
test
daa
push
mov
inc
sub
sbb
ret
adc
cmp
sub
std
outsb
and
cmp
filds
cmpsb
or
cld
rcr
sahf
aad
aaa
popa
test
int3
fucom
add
imul
mov
scas
outsb
rcrl
test
xchg
mov
pop
push
outsb
insb
pop
xchg
xlat
dec
jmp
mov
aas
aam
imull
push
das
mov
push
call
lds
push
adc
jl
push
add
sbb
pop
mov
and
mov
add
mov
sub
xor
mov
fdivrl
ljmp
aaa
scas
movsb
pop
testl
mov
lar
mov
xor
in
sbb
mov
or
mov
in
lods
pop
mov
mov
dec
and
mov
xor
aad
outsl
jge
imul
dec
add
pop
and
arpl
cmpsb
loope
adc
mov
cs
pop
and
stos
adc
cmpsb
leave
adc
sbb
xchg
sub
mov
lahf
out
adc
push
ja
cwtl
xchg
fsubr
fiaddl
cmp
or
sub
insl
lcall
imul
jns
cmpsl
call
adc
push
pop
outsb
pop
mov
sbb
jbe
popl
int3
test
and
mov
mov
mov
fidivrl
mov
mov
xchg
add
or
dec
fs
inc
shll
fwait
xchg
sub
sub
aaa
fwait
mov
jno
movsl
arpl
xchg
and
cmp
rorb
dec
xlat
scas
fwait
jmp
inc
loope
cmp
adc
lea
cmp
shlb
orb
lock
sub
pop
dec
fiadds
inc
xchg
fidivl
push
fcomps
or
or
or
sahf
repz
test
mov
addr16
inc
aaa
ret
enter
xchg
sbbl
in
shl
inc
mov
mov
pushf
xchg
flds
data16
sti
imul
mov
shrb
sub
arpl
cmp
fldenv
lret
icebp
in
cltd
inc
in
inc
and
push
jbe
dec
dec
ja
push
xchg
stos
inc
aaa
dec
pop
fimuls
imul
pop
or
in
xchg
jns
idivl
inc
hlt
and
imul
sti
insl
repnz
sahf
and
bound
or
imul
add
jb
inc
pushf
push
inc
repz
mov
push
push
das
aaa
cmc
or
test
adc
xchg
adc
arpl
sbb
pusha
stos
daa
cs
loop
mov
dec
pop
sbb
lock
lea
js
decb
mov
inc
adc
push
cltd
pop
adc
sahf
je
add
xor
push
out
sub
insl
das
insl
ljmp
jae
mov
lahf
mov
mov
lret
jb
sub
mov
and
add
enter
bound
aam
mov
mov
mov
push
jno
xchg
xlat
popa
movsl
and
mov
mov
push
jecxz
je
xor
ja
and
call
outsb
outsb
pop
push
jo
push
inc
stc
push
call
addl
push
repz
mov
ret
xor
mov
js,pt
loopne
sbb
out
fisubrs
leave
pop
ss
addb
xor
mov
mov
fmull
aad
pop
sbb
mov
ret
mov
outsb
fwait
dec
mov
push
call
push
test
dec
sbb
jno
cmp
push
push
movsl
and
jno
dec
mov
lds
inc
test
cmp
dec
pop
adc
or
jne
add
sarb
xor
fmul
push
jbe
fucomip
sub
aad
or
adc
push
cmp
mov
leave
or
inc
aam
jbe
sub
pushl
and
add
dec
mov
jnp
jbe
nop
ror
or
jb
sbb
jo
cmovge
cmp
into
iret
xchg
sub
mov
insb
push
mov
imul
fwait
imul
sbb
pop
mov
dec
sahf
add
mov
dec
in
inc
push
pushf
stos
loop
mov
mov
pop
ljmp
scas
sbb
testb
pushf
and
xchg
ret
pop
dec
jne
loop
int3
lahf
sbb
fldlg2
jbe
xchg
xchg
mov
sbb
mov
mov
divb
int3
std
mov
sbb
leave
xchg
mov
cmpb
mov
xchg
insl
in
dec
mov
dec
mulb
shl
sub
dec
dec
imul
sub
es
adc
cmp
cmc
jns
pop
pop
mov
sub
or
aad
xchg
cs
mov
dec
mov
push
sahf
in
xchg
imul
lcall
test
stos
mov
push
sbb
xor
mov
jnp
add
lret
xchg
dec
fidivl
popf
jmp
shlb
lea
mov
loop
mov
outsb
and
jns
sub
sub
movsb
jb
pusha
jae
enter
dec
mov
arpl
or
out
adc
in
xlat
xchg
adc
push
push
sub
pop
in
push
pop
addb
inc
push
and
setno
pop
mov
test
mov
jbe
mov
ja
pop
ss
stos
sbbl
push
call
xor
leave
out
xchg
sub
pop
je
jae
shll
xchg
mov
adc
or
push
lds
push
ljmp
mov
fdivl
adc
inc
push
bound
xchg
subl
dec
mov
ss
leave
jmp
cs
pop
sbb
fstps
stos
add
dec
sub
fdivrl
fisubrl
stos
imul
xchg
jl
aad
iret
cmpsb
sbb
ss
sub
xchg
add
sbb
sbb
mov
push
push
xor
ret
sbb
std
pop
pop
add
shll
int3
fdivrs
dec
pop
aad
fldt
test
cmp
adc
outsl
test
jae
icebp
mov
ljmp
ljmp
inc
out
adc
aad
in
rorl
pop
in
push
dec
int
ss
iret
fcomip
rcrl
imul
cmp
insb
in
jecxz
mov
lods
shl
jne
addr16
ja
out
leave
leave
or
and
out
imul
mov
jecxz
repnz
jmp
sub
ss
int
roll
pop
pop
jmp
jns
inc
and
scas
popf
cmp
stos
into
cltd
mov
pop
pop
inc
out
ret
stos
xor
mov
cmp
test
test
mov
xorb
sub
test
mov
in
sbb
dec
mov
outsl
jno
int
flds
pop
rclb
sub
mov
out
pop
outsb
pop
test
test
sbb
popa
dec
dec
push
stos
repz
std
mov
jb
mov
push
es
mov
pushf
xchg
js
fsubrp
push
push
cltd
adc
mov
mov
push
jnp
xchg
mov
mov
add
pop
sub
pop
and
jbe
xor
lret
mov
push
call
insl
in
rclb
inc
pop
xchg
xchg
push
loope
xor
push
fisubrl
stos
std
jecxz
push
nop
ljmp
mov
push
cmp
fmull
fbstp
test
out
fucompp
inc
jne
inc
jmp
shl
mov
rcrl
fbstp
stos
add
pop
outsb
xchg
push
pop
aad
jge
lret
addr16
xor
pop
sbb
int3
sarb
dec
jbe
adc
test
pop
aas
jnp
test
ds
insl
jmp
pop
pop
inc
lret
cmc
test
insl
sbb
negb
pop
pop
mov
cmc
xchg
push
jmp
jge
or
lods
pop
push
cmp
out
pop
xlat
sub
mov
mov
test
xor
dec
xchg
pop
inc
xchg
stc
inc
push
movsb
loopne
aam
std
popa
pusha
cwtl
add
gs
test
fcomp
inc
mov
jge
adc
mov
xor
daa
fcmovu
inc
shll
out
imul
sbb
push
push
mov
pop
jge
jns
sbb
shll
or
and
mov
scas
cwtl
ds
dec
das
sti
out
dec
ds
jmp
fiadds
pop
pop
cld
add
sub
adcl
jb
inc
fstps
xchg
cs
ds
ljmp
mov
push
jbe
ret
scas
mov
cmc
push
sahf
mov
and
imul
mov
mov
insb
outsl
cmp
and
cmp
add
lds
xlat
jo
fldcw
notb
int
ds
fimuls
mov
mov
nop
ss
fsubrs
push
push
hlt
enter
pop
insl
shlb
mov
pusha
cld
repnz
mov
mov
cltd
inc
jno
xorl
lods
pop
gs
daa
cmp
aas
mull
add
lret
mov
inc
push
popf
dec
inc
pop
aaa
xorl
cmpsl
std
sarb
int
insb
mov
rcrl
pop
or
or
mov
lods
imul
xor
push
dec
lods
incl
and
lcall
dec
lods
mov
dec
sti
push
lahf
mov
stos
fsubs
pop
aas
sbb
loop
hlt
lahf
shll
lods
pusha
aad
aas
add
xchg
loop
jg
mov
lcall
push
insb
fcoms
and
jmp
mov
js
lahf
mov
cmpsl
cs
cmp
shrl
stos
mov
mov
aam
mov
out
adc
int
int
jge
push
fistpll
jp
imulb
jb
mov
xor
outsl
mov
lret
add
push
sar
fstl
jno,pn
mov
fs
fsubrs
dec
sbb
pop
push
pop
call
inc
inc
mov
test
rcl
sbb
mov
dec
sbb
je
dec
mov
jo
add
xchg
gs
cmp
test
cmpb
incb
rcl
flds
sub
pop
insl
pop
stc
push
ljmp
mov
or
jbe
pop
fidivrs
outsb
mov
aam
or
dec
repnz
lods
arpl
and
mov
mov
cmpsb
shl
pop
pusha
clc
mov
pop
fistpl
push
lock
jbe
jmp
fidivl
insb
pop
cmpb
xor
insl
setb
js
in
cmp
jae
dec
push
in
or
xor
mov
dec
mov
out
daa
inc
mov
ffree
call
jno
cmp
sbb
sahf
dec
loopne
pop
div
call
push
xchg
or
addb
push
sub
js
rol
incb
lret
pop
neg
imul
sub
lea
or
jmp
cltd
sbb
sarb
push
cmp
icebp
adc
jo
mov
and
add
ds
imul
lds
jbe
lods
xchg
mov
cmp
jge
sbb
fcoms
jl
fadds
add
jle
pop
ljmp
mov
inc
stos
dec
out
mov
and
jp
fs
mov
jnp
pop
mov
mov
pop
cmp
mov
push
pop
mov
scas
xchg
push
leave
adc
fcomip
add
mov
out
dec
test
stos
dec
mov
mov
cli
mov
mulb
fildll
fimull
scas
insl
mov
lods
and
jecxz
inc
aam
sub
sub
xor
repz
icebp
outsl
lret
jo
or
or
into
lret
pop
xchg
out
and
scas
inc
test
cltd
cmp
fbstp
das
jbe
movsb
ljmp
jmp
pusha
fwait
aaa
andl
dec
sahf
ja
mov
pop
lods
pop
ds
rcrl
dec
jge
fistl
xchg
xlat
pop
push
or
dec
push
fucomi
inc
mov
mov
imul
add
bound
js
fidivrl
aas
jg
jne
jae
and
inc
aas
mov
jg
fs
push
dec
mov
jmp
xchg
xchg
mov
std
xor
xor
inc
aas
push
sti
push
into
mov
fiadds
inc
adc
xor
mov
dec
out
pusha
mov
dec
stos
cmp
cmp
lcall
fwait
out
sub
mov
jnp
stos
inc
nop
out
or
adc
pop
push
cmpsl
xor
push
xor
xchg
xchg
mov
pop
sti
sbb
jbe
and
push
sbb
in
adc
in
xor
int
movsl
pop
out
insl
fstpl
and
cmp
adc
testl
xchg
push
mul
lret
xchg
test
push
mov
dec
xlat
in
stos
sbb
or
pop
dec
push
lock
test
test
inc
xchg
mov
xchg
push
mov
in
shl
inc
xchg
xchg
popf
cltd
push
mov
or
and
inc
adc
movsl
sub
mov
and
adc
stos
xchg
push
cwtl
jle
je
fs
mov
sahf
mov
push
shrl
xchg
scas
pusha
ss
outsl
or
add
pop
and
add
lret
adc
adc
cs
sub
dec
mov
cmpsl
pop
inc
push
mov
cmp
fsts
mov
or
sub
rorb
int3
bound
lcall
cwtl
adc
jo
inc
and
inc
ljmp
enter
mov
jbe
mov
aam
sub
rorl
sbb
mov
dec
loop
pop
shll
dec
fisttps
inc
jbe
and
mov
xor
pop
push
ret
adc
insl
adc
lea
movsl
aad
adc
sub
stc
js
in
jecxz
jb
pushf
pusha
jnp
sbb
jns
pusha
mov
ror
enter
ljmp
push
pop
jp
mov
stos
push
cmp
imulb
push
mov
pop
dec
jle
cmp
nop
orl
js
xchg
xchg
pop
xchg
lret
add
es
sarb
cmpsb
xchg
inc
scas
adc
and
push
inc
mov
dec
mov
mov
inc
call
clc
mov
xor
sub
in
inc
out
cmp
jmp
lds
inc
push
xor
repnz
lea
ss
mov
dec
push
mov
rorb
push
xor
pushf
lcall
sahf
xchg
stos
pop
dec
mov
adc
xor
hlt
in
sbb
cmp
push
stos
mov
push
daa
clc
cwtl
jecxz
sbb
xchg
dec
xchg
data16
xchg
scas
sbb
jmp
cmpsb
jno,pn
test
test
pushf
dec
xor
ljmp
dec
inc
push
cmc
shll
adc
cltd
je
orb
push
xor
int3
mov
xor
lcall
cmp
inc
shll
shlb
enter
push
mov
cwtl
adc
xchg
xor
daa
pop
movsl
pusha
jecxz
mov
dec
imul
bound
and
cmp
mov
sbb
add
jae
stos
lret
jg
das
pop
scas
pop
push
cmp
mov
cwtl
fldenv
fistpll
mov
jnp
loope
xor
daa
nop
loope
mov
outsb
jo
js
lret
icebp
dec
pusha
xchg
lea
enter
jecxz
adc
sbb
das
ja
in
nop
and
push
out
jb
xchg
cmp
mov
add
cmpl
arpl
leave
or
and
dec
cltd
push
sbb
dec
movsb
mov
aad
pop
sub
sub
es
ret
push
movsb
mov
sbb
cld
shr
sbb
xor
enter
es
push
test
xor
mov
aas
mov
inc
in
xchg
out
xor
out
jecxz
sub
push
cmp
imul
push
xchg
enter
sub
adc
rorb
ds
and
cld
dec
notb
pop
data16
sbb
gs
inc
jl
iret
lcall
fprem
mov
sbb
lahf
imul
hlt
dec
mov
dec
pop
mov
pop
push
test
jb
pushf
xchg
aas
mov
mov
lahf
jno
js
fistpll
sub
inc
jg
jmp
ds
into
xchg
jnp
xchg
mov
sub
iret
or
out
push
bound
clc
mov
jecxz
lea
stos
cmp
lret
shll
xlat
cs
clc
xor
or
call
test
pop
add
sahf
je
adc
adc
mov
movsb
enter
lret
jb
gs
jg
jmp
aas
fwait
rcl
js
pushf
sub
sbb
das
xchg
dec
push
or
inc
cli
jo
int3
cld
cmc
ja
push
je
into
aad
test
mov
icebp
aaa
push
inc
mov
mov
xchg
jo
negb
jp
shl
mov
jp
jg
into
fcmovnb
inc
sti
pop
pop
mov
cmp
js
jbe
fidivrl
scas
jae
insl
out
push
jmp
out
out
jae
outsb
outsl
inc
inc
repz
mov
scas
mov
mov
divb
pop
jle
cmc
popf
mov
cmp
leave
pop
mov
scas
std
outsb
leave
stos
ja
das
inc
mov
js
sbb
sti
pop
imul
out
clc
fimuls
mov
out
cmp
pop
scas
sarl
stc
jp
lahf
pop
lretw
dec
xchg
test
mov
jge
push
xor
fcmovnbe
mov
dec
insb
cli
call
jnp
into
sti
mov
jbe
outsb
mov
insl
mov
loop
dec
mov
repz
fstpl
push
cmc
cld
mov
mov
cmc
test
call
jge
outsl
sbb
mov
out
in
jnp
or
std
push
popf
int3
iret
lock
std
mov
lock
out
flds
cltd
in
pop
mov
jp
std
scas
adc
cmp
cmp
push
pop
outsb
das
gs
cld
fwait
imul
jnp
lahf
sbb
mov
add
mov
xor
aam
in
fbld
fld
push
jmp
out
mov
mov
mov
pop
adc
xchg
adc
out
arpl
popl
negb
dec
xadd
addr16
lahf
mov
iret
insb
sub
cli
iret
mov
ja
cmp
jg
lret
call
jne
cmp
lods
repz
out
xor
xlat
in
ljmp
ss
ss
lret
mov
pop
lods
loope
enter
mov
push
cs
xchg
mov
pop
mov
jb
xor
pop
mov
div
mov
cmp
aas
pop
pop
xchg
test
push
mov
jle
imul
jbe
sub
insl
pop
add
dec
stc
stos
mov
cmpsl
cltd
repnz
arpl
fcmovnu
sahf
fldt
mov
jae
xchg
jns
pop
loope
rorl
int
fwait
jge
insl
aaa
fucomip
bound
repz
pop
adc
and
jb
test
sbb
ret
pop
cs
jne
lcall
push
cmc
jbe
xchg
imul
outsb
out
and
mov
repnz
and
jbe
dec
push
fistl
sub
mov
mov
xor
push
andl
scas
fistpll
fstpt
xchg
out
ret
jmp
dec
mov
cmp
outsl
inc
mov
dec
fstpt
jns
cmpsb
jmp
jmp
mov
inc
lret
std
lahf
add
stos
icebp
mov
sti
shr
jp
jl
lret
clc
insb
cli
pop
call
idivl
aas
mov
pop
fsubs
pop
in
incl
pop
jecxz
nop
js
lods
scas
outsb
es
imul
pminsw
ljmp
lahf
sub
data16
push
in
jl
mov
rcr
fistpll
into
jmp
idiv
ljmp
cmc
pop
das
leave
sar
fcomp
pmulhw
out
jecxz
cld
pushf
jle
mov
cli
jg
mov
jnp
mov
pop
add
fiaddl
adc
fcmovb
jmp
mov
cmc
mov
xor
adc
mov
std
mov
sbb
pop
call
popf
mov
and
icebp
jnp
ret
jne
fildl
jmp
fcoml
fucomp
cld
mov
cmp
in
insb
mov
pop
scas
in
imul
mov
in
mov
pop
addr16
sti
cmp
nop
cmp
rolb
orl
insb
add
push
enter
xchg
bound
sbb
je
push
jne
and
repz
ds
jbe
mov
cmp
sarb
mov
sub
dec
cmp
add
jns
mov
adc
lret
push
test
movsl
int
lret
scas
hlt
cmpsb
dec
cltd
arpl
mov
add
mov
add
je
push
insb
mov
xchg
dec
ss
cs
jb
inc
arpl
ss
ss
leave
mov
loopne
sub
je
imul
in
add
movsl
out
ffreep
dec
xchg
sbb
jle
pop
jmp
cld
add
pushf
push
divb
sbb
mov
mov
jg
mul
pop
cmpsb
xlat
stos
mov
jg
leave
dec
jmp
cmc
and
mov
loop
mov
pop
push
sti
aas
fstps
loope
popf
dec
sbb
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
pop
negl
jg
arpl
mov
sarb
mov
aam
adc
ja
aas
and
dec
ds
mov
lahf
clc
jg
and
outsb
cmp
imul
iret
mov
movsl
lret
and
gs
and
sub
sarb
xchg
pop
sub
sub
and
inc
cmpsb
push
or
add
enter
mov
repz
into
inc
jecxz
mov
ds
popl
and
add
int
add
mov
and
jne
sub
jle
jle
fdivrs
adc
jecxz
push
insb
mov
pop
repnz
push
mov
sub
jb
fldenv
repz
cs
aam
data16
push
out
leave
scas
lret
xchg
xor
xchg
lret
fs
push
lretw
shlb
sbbl
addr16
popl
mov
imul
testl
dec
addr16
fwait
out
adc
das
mov
js
fcos
outsb
paddsw
jg
push
popl
push
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
aas
dec
shl
std
jg
jle
mov
jle
mov
mov
push
dec
fmuls
and
jno
xlat
ja
repnz
in
insb
out
scas
xlat
divb
mov
shl
pop
out
inc
add
nop
je
sbb
inc
enter
jae
stc
dec
dec
cmp
cld
mov
pop
dec
inc
jecxz
mov
das
pop
sub
cltd
arpl
stc
push
cmp
ret
ret
inc
or
push
mov
xchg
gs
dec
xchg
jns
sahf
add
add
nop
jge
add
in
cmp
stc
jae
repnz
dec
xchg
ss
lret
sub
movsl
dec
mov
mov
mov
xchg
pop
inc
insl
xchg
gs
test
dec
cltd
pop
xchg
cs
cmp
sub
xor
push
and
xchg
es
cltd
popa
fwait
cs
test
movsl
into
xchg
cs
pop
push
loopne
sub
je
imul
clc
pusha
pop
mov
popa
loopne
jg
idiv
scas
xchg
lock
iret
mov
clc
sbb
into
pop
jecxz
ficoms
arpl
mov
pop
cmpsb
js
jecxz
ljmp
mov
jmp
cmp
aas
ja
fcomip
mov
shl
mov
and
mov
lahf
vpsubsw
jle
cmp
call
and
adc
mov
test
mov
push
js
push
pop
xchg
mov
add
jno
mov
mov
pushf
mov
and
mov
in
push
push
inc
ret
and
ljmp
pop
or
sub
es
jp
xor
enter
mov
mov
xchg
push
xor
jmp
sbb
imul
or
sub
or
ja
xchg
adc
mov
add
fbstp
cmp
mov
adc
loop
adc
lcall
inc
loope
or
pop
jecxz
lds
mov
mov
sub
stos
imul
push
inc
cmpsl
rclb
push
inc
pop
jg
shr
sahf
es
mov
stos
or
or
cmp
mov
inc
mov
xchg
xor
pop
cmp
ret
movsb
and
or
pop
push
lock
pop
addb
mov
movsb
out
or
fadds
mov
ret
cmpsb
mov
adc
add
fcoms
xchg
stos
sub
pusha
push
or
sub
jb
outsl
in
pop
mov
xchg
mov
pop
push
shlb
ja
and
sbb
loope
sbb
popa
jno
xor
mov
sub
stc
adc
pusha
mov
dec
cmp
or
sub
jo
cmc
xor
push
or
adc
cwtl
or
daa
outsb
and
jmp
into
mov
pop
adc
in
dec
jae
popa
lods
inc
popf
imul
and
imul
push
pop
in
sahf
insb
lea
pop
adc
inc
mov
sub
inc
stos
andl
adc
jns
imul
push
mov
pushf
and
fisubs
sub
jmp
call
and
or
or
add
mov
push
rorl
mov
push
and
loope
jnp
xlat
mov
inc
je
cmp
or
mov
mov
mov
mov
movsb
lea
lcall
xchg
sbb
cmc
mov
shr
sub
popa
mov
push
and
sub
adcl
mov
jp
loopne
pop
and
and
mov
xor
aam
mov
lea
ret
xor
or
lods
push
adc
push
bound
stc
je
in
aad
inc
sbb
loop
and
push
stos
roll
aad
ret
push
mov
out
dec
nop
dec
jno
and
inc
and
sbb
push
sub
and
sbb
es
js
pusha
ret
addr16
pop
or
inc
aaa
loopne
dec
mov
sub
mov
fidivl
xchg
fdiv
popa
cmpsl
lods
repnz
movsl
mov
add
in
in
leave
popf
inc
sahf
and
clc
xchg
lods
mov
je
xor
out
gs
jecxz,pn
fsubrs
out
push
xlat
cmp
or
out
shlb
dec
gs
jb
popa
into
imul
push
gs
or
ja
cmp
add
mov
mov
dec
shll
xchg
rcll
lahf
int3
xchg
or
xor
lahf
ss
insb
push
repnz
js
insl
icebp
sbb
loop
cli
mov
push
lret
andb
cltd
insl
lods
shlb
pusha
popa
imul
insl
pushf
outsb
lock
push
icebp
jmp
dec
loope
test
ffree
adc
into
adc
push
insb
js
sbb
inc
mov
xchg
sbb
int3
in
dec
mov
lcall
arpl
inc
xchg
ja
add
scas
and
adc
mov
sbb
stc
dec
sub
out
mov
repz
or
adc
data16
xchg
xor
stos
loopne
mov
faddl
jb
xchg
in
sub
mov
ja
cwtl
xor
mov
inc
adc
scas
xchg
rol
or
arpl
fneni(8087
jl
sbb
push
jb
fwait
sbb
jbe
mov
cmpsl
sub
cltd
insl
fisubrs
xor
rcl
mov
popf
lretw
jl
in
cmp
shll
xchg
xor
xor
push
sub
data16
cmpsb
fstpl
mov
dec
js
pop
call
xchg
add
sahf
mov
push
or
sbb
adc
fildll
ljmp
mov
jecxz
lods
adc
mov
pop
jg
sub
test
push
sbb
xchg
mov
pop
pop
mov
xchg
sbb
shlb
adc
pop
pop
cmpl
stos
dec
movsl
js
repnz
jo
or
adcl
mov
mov
sbb
xchg
cmpsb
enter
clc
mov
inc
lcall
or
adc
rcrl
stos
lret
das
mov
xor
push
adc
stos
into
cmp
in
adc
dec
nop
mov
test
popa
pop
bound
pop
xchg
mov
xchg
in
and
pusha
push
cmpsl
adcb
popa
pop
bound
and
fldl
in
push
lcall
ficoms
popa
pop
repnz
sub
pusha
in
shl
imul
xor
inc
mov
arpl
roll
add
adcl
jae
xor
or
in
push
mov
int3
cmp
mov
mov
test
inc
xchg
outsl
les
mov
mov
xchg
iret
jo
inc
mov
js
lock
lcall
mov
sbb
add
or
fsubl
movsl
inc
lret
pusha
lcall
xchg
ret
mov
and
or
add
xchg
mov
xor
xor
or
add
or
rorl
jmp
mov
cwtl
pop
inc
sub
ja
test
es
mov
jne
or
test
notl
mov
and
inc
pop
fmull
daa
lcall
arpl
cmp
jl
mov
gs
lcall
adc
popf
loopne
xchg
popf
inc
xchg
sbb
sbb
sbb
xlat
lret
and
inc
and
jnp
cltd
in
adc
cmp
or
ljmp
popf
pop
sbb
push
ret
adc
jecxz
cmpsb
fsub
subb
aaa
jae
int3
mov
jno
dec
mov
lcall
xor
pusha
outsb
ja
sbb
sbb
or
or
adc
cltd
mov
mov
mov
jbe
sbb
jg
ja
in
clc
dec
loop
and
pop
adc
movsl
xchg
mov
ret
sub
pusha
jns
fstpt
mov
mov
dec
inc
sbb
fmul
pushf
mov
pusha
sub
sub
sbb
into
mov
lds
leave
je
mov
mov
fstl
rsqrtps
inc
xchg
push
hlt
pop
daa
xchg
xor
into
push
pushf
inc
mov
cmp
cmp
mov
cmp
and
sbb
or
loopne
frstor
adc
adc
inc
outsl
scas
dec
mov
adcb
xorb
mov
inc
add
shll
test
cltd
inc
xchg
and
xor
xor
cmp
outsb
cmp
mov
pop
aaa
iret
pop
push
mov
ss
shlb
push
pop
lds
or
adc
imul
je
mov
icebp
out
mov
pop
scas
inc
rclb
imul
cmpsb
lret
pop
push
out
adc
jbe
shrb
or
pop
orb
shrl
les
inc
inc
mov
jns
shll
int3
push
inc
iret
outsb
mov
fsubp
daa
pop
sbb
push
mov
add
mov
in
fwait
popa
or
cwtl
dec
out
ret
jle
mov
sbb
adc
lea
imul
cmp
sub
sti
int3
fs
sarb
xor
inc
sbb
gs
xor
outsb
popa
stc
jp
sub
sub
mov
daa
dec
jns
add
xor
inc
arpl
fidivrs
push
pop
jmp
lret
in
in
cld
lret
in
cmp
mov
stos
and
fisubs
cmc
call
xchg
or
lods
dec
sbb
or
pop
scas
sbb
loop
xor
pop
nop
xor
inc
in
jb
jnp
ja
lods
cmc
sbb
mov
jmp
mov
dec
ss
and
adc
mov
dec
mov
sbb
jle
push
mov
das
pop
mov
repnz
hlt
sbb
dec
or
loope
fisubrs
xor
pop
mov
aam
outsb
imul
adc
or
or
lahf
pop
xchg
sahf
hlt
ja
test
push
and
sub
test
testb
mov
mov
out
outsb
push
loop
inc
iret
cmp
push
outsl
fstpt
inc
dec
add
fsubrs
xor
xchg
xchg
dec
jnp
mov
movsl
test
fsubrp
push
mov
and
inc
or
sub
fwait
sti
add
push
cwtl
aad
dec
sub
scas
pop
sbb
int
push
push
adc
xchg
roll
les
jp
mov
xor
es
jae
es
xchg
test
xor
mov
or
ss
iret
popa
fstpt
cmc
int3
mov
xchg
loopne
mov
push
int3
mov
movsb
push
add
bound
pushf
les
xchg
call
push
mov
pop
inc
sbb
inc
ret
test
or
pushf
rcll
ja
in
push
and
xchg
ret
jg
xchg
dec
cli
test
lret
aam
dec
adc
sarl
ret
xor
ret
icebp
cld
cmpb
sub
iret
xor
dec
xchg
mov
cmpsl
add
xchg
pushf
adc
fstpl
outsb
fcmovnbe
loop
jl
and
fcoms
dec
pop
es
ret
jle
ja
mov
jmp
lods
fs
lret
push
cmp
or
ret
mov
mov
call
movsb
fsubrl
inc
sub
push
dec
push
out
dec
inc
add
mov
ret
cltd
loop
mov
jg
loop
popl
sub
xchg
adc
mov
mov
or
xor
inc
jne
js
lock
xor
mov
pusha
cmpsl
sub
adc
filds
sbb
stos
fs
xor
adc
movsb
das
outsb
aaa
mov
test
notb
rorl
jmp
lret
pop
inc
sbb
fldenv
mov
out
and
subl
pop
fs
lock
lock
pusha
inc
push
pop
into
movsbl
jge
js
mov
sbb
adc
iret
add
or
add
xchg
add
js
xor
pusha
jle
adc
xchg
in
cmp
mov
add
rorb
cwtl
pop
stc
xor
sbb
je
mov
mov
idivb
cwtl
or
fildl
add
mov
fdivl
ds
das
icebp
add
dec
ds
sub
les
xor
enter
mov
ret
aas
repnz
sti
loopne
ficomps
and
stc
and
insb
push
jg
xor
cli
mov
mov
insl
ljmp
cmp
mov
sub
aas
fstpl
out
fadds
jo
jecxz
pop
add
push
sarb
loopne
aas
sbb
repnz
inc
and
test
pop
std
xor
rorb
mov
cmp
mov
icebp
add
sbb
jnp
aam
pushf
or
and
jge
add
mov
out
fists
pushf
sbb
mov
int3
or
jmp
ds
sub
sub
xor
and
jmp
imul
ja,pn
negb
ja
aas
out
sbb
mov
dec
js
inc
cmp
mov
lock
push
loopne
inc
inc
add
add
add
and
sbb
add
add
test
add
add
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
and
call
enter
je
adc
loopne
pop
aas
or
push
adc
pop
jg
mov
add
jle
movzwl
mov
mov
mov
push
mov
pop
sub
and
xor
mov
xor
sbb
push
mov
popl
and
sub
jnp
mov
dec
push
call
out
cmp
jle
sub
xor
pop
pop
sub
jne
mov
jmp
dec
loope
hlt
sbb
fidivrs
push
movswl
pop
jmp
scas
mov
shll
std
repnz
sar
lahf
in
mov
push
test
xchg
imul
nop
daa
sbb
pop
pop
lods
mov
xchg
mov
xchg
or
push
inc
in
sbb
xor
dec
jmp
sub
imul
xchg
adcl
mov
lret
rclb
mov
out
add
pop
sbb
and
loop
fcomps
add
pop
cmpsb
hlt
sub
insb
sbb
imul
push
mov
ret
sbb
loopne
mov
inc
imul
add
inc
imul
repnz
movsb
adc
xchg
sub
das
jecxz
push
mov
insb
inc
mov
mov
jo
in
lret
ret
jnp
mov
in
inc
mov
stos
js
mov
ret
js
mov
push
test
divl
adc
sub
cmp
and
aam
xor
popf
jno
and
lea
mov
out
pop
cwtl
mov
fwait
mov
es
fs
mov
loop
mov
arpl
mov
hlt
push
iret
cmpsb
pop
push
jmp
xor
mov
cmpsb
pop
loopne
push
shrl
and
cmc
dec
addl
jmp
jmp
lods
lahf
dec
sub
and
sub
and
cli
push
ds
aam
dec
jmp
sub
mov
loope
loope
enter
out
in
sub
ljmp
xor
outsl
or
cmp
rcll
pop
stos
stc
enter
jge
or
xchg
dec
xor
loopne
rcll
outsl
lds
xchg
xor
ja
fst
dec
icebp
xchg
jecxz
inc
negl
lds
jle
mov
inc
lock
mov
push
mov
cwtl
push
cli
es
mov
fwait
lcall
imul
add
int3
jno
cltd
lods
jge
movsb
pop
in
lea
mov
xor
jo
int3
lods
scas
inc
cmp
jle
dec
mov
mov
mov
mov
xchg
mov
mov
hlt
mov
scas
popf
shlb
scas
lahf
out
cmc
sub
mov
mov
shlb
loope
sbb
inc
cmc
sub
nop
mov
andb
sub
or
mov
aad
add
in
cmp
pusha
inc
cmc
sub
or
or
xor
sub
xor
sub
xor
jae
jp
xor
add
pop
inc
cmc
sub
mov
hlt
or
ja
mov
sub
pop
and
or
jo
jae
sbb
or
mov
mov
inc
cmc
sub
cmc
pop
sarb
adc
scas
lahf
int
cmc
sub
or
pop
or
sub
fdivr
iret
ret
addb
repz
xor
mov
dec
cmc
sub
inc
imul
repnz
cmc
sub
lds
sarb
inc
cmc
sub
int3
xchg
xor
mov
roll
sub
inc
mov
sub
sbbb
adc
sub
mov
pop
test
mov
vaddsubps
mov
hlt
xchg
mov
mov
sub
js
mov
ja
lock
mov
xchg
pop
fidivrl
shll
inc
in
dec
mov
sub
ror
mov
mov
mov
sarl
vaddsubps
mov
hlt
mov
mov
mov
shlb
sub
andb
pop
cmp
dec
sub
inc
dec
sub
xchg
and
shll
sub
lret
repz
xor
sub
xor
sub
xor
lahf
mov
mov
mov
test
inc
mov
sahf
sub
mov
mov
jno
cmp
scas
outsb
notl
mov
iret
mov
mov
or
xor
cmp
scas
outsb
notl
pop
dec
mov
dec
in
les
and
xchg
fwait
jnp
xchg
mov
iret
mov
mov
adc
ja
dec
mov
mov
push
imul
fwait
jnp
xchg
mov
iret
mov
mov
je
flds
mov
hlt
sub
push
imul
fwait
jnp
xchg
lock
mov
mov
je
mov
data16
into
mov
xor
arpl
test
sub
inc
pop
dec
mov
dec
jecxz
push
imul
fwait
jnp
mov
shll
mov
xor
pop
filds
shll
je
xor
push
mov
add
scas
mov
fdiv
sub
sub
inc
fwait
inc
add
sub
fidivrl
les
add
icebp
sub
sub
mov
decl
mov
mov
jo
xor
and
ret
sub
inc
cmc
jle
insl
fs
cmp
mov
inc
xor
test
cmp
shr
shll
cmpsl
jle
pop
sub
mov
pop
sub
dec
and
dec
ficompl
ret
mov
cmc
sub
jg
rol
mov
add
push
inc
jns
sbb
dec
ret
adcb
push
iret
rorl
loop
imull
jmp
inc
pop
imul
inc
out
mov
test
mov
enter
popa
xor
and
pop
imul
gs
jecxz
xor
add
dec
cmpsb
scas
fdivr
jns
mov
mov
aaa
jae
outsb
sub
mov
xor
sub
xor
sub
xor
sub
xor
sub
xor
sub
inc
cmc
hlt
jmp
cmc
inc
push
inc
cmc
sub
inc
cmc
sub
xor
sub
xor
in
sub
or
fcmovb
repz
ret
repz
xor
sub
xor
sub
xor
sub
xor
sub
repnz
sub
mov
xchg
hlt
cmp
push
sbb
mov
sbb
js
pop
and
ljmp
ja
jp
sub
mov
dec
inc
test
repnz
scas
nop
mov
sbb
das
int
je
dec
inc
idivb
scas
mov
inc
std
dec
pop
shl
enter
mov
cltd
sbb
idivl
test
lret
pop
add
mov
mov
dec
leave
ficomps
scas
mov
in
xlat
cld
test
cs
xchg
fsts
iret
cld
cmpsl
loopne
adcl
mov
xlat
test
mov
inc
in
xor
cmc
and
adc
add
negb
rclb
js
sub
cmpl
flds
xchg
xor
sbb
addb
xor
scas
mov
and
pop
test
dec
movq
clc
rcrl
mov
insl
sarb
jp
ds
nop
jge
sub
sar
lods
fisubrs
and
call
in
shll
add
jo
and
stos
xchg
sub
xor
fsubrs
push
pop
jg
jnp
xchg
pop
rcl
or
shrb
out
dec
jl
pop
mov
out
push
ret
mov
je
int
sub
imul
push
gs
pop
inc
or
xchg
pop
pop
cltd
out
jecxz
adc
cld
mov
sub
enter
mov
sbb
lea
sbb
xchg
cld
and
shll
out
lds
add
fisttpll
push
stos
les
shl
outsb
repz
test
dec
jp
sbb
cmc
xor
and
ret
sub
jge
sub
adc
out
les
xor
sub
stos
dec
add
xor
pop
jg
int3
dec
dec
aam
in
lock
mov
sahf
xlat
jmp
test
cmpsb
mov
fists
dec
xlat
stos
jae
jl
or
ss
lods
push
push
mov
add
and
or
aad
inc
les
out
popa
mov
mov
or
sbb
sbb
ds
dec
xchg
xchg
ss
xchg
fdivrp
repz
enter
xor
inc
popa
repz
mov
and
fcmovu
push
flds
push
int3
sbb
inc
xchg
jl
inc
pop
mov
sub
cld
dec
add
or
loope
mov
cwtl
add
push
cmpsl
mov
cmp
jns
add
add
add
or
add
add
inc
add
mov
add
in
push
add
in
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
push
add
jmp
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
in
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sub
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
call
add
add
add
sbb
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
sti
jle
fbld
cmp
div
push
sub
cmpsl
movsl
mov
sub
cld
rcll
pop
mov
add
sarb
scas
lods
negb
fsubs
ret
enter
outsl
sbb
hlt
xchg
scas
loopne
stos
push
fwait
out
mov
mov
stos
sbb
popf
pop
insb
in
push
mov
xorl
fsts
call
icebp
es
sbb
cmp
movsb
push
and
mov
pushf
xchg
push
shl
adc
or
cmpsb
or
aam
lock
daa
popa
rclb
repnz
ss
loopne
mov
shr
out
icebp
xchg
dec
mov
popf
sub
jne
push
rep
ret
dec
mov
lret
xchg
pusha
dec
jp
adc
cmp
icebp
gs
sbb
rorb
into
out
jg
fsts
fmull
and
pop
dec
dec
mov
mov
xchg
mov
movsb
xchg
mov
add
cmc
dec
sbb
daa
movsl
fbstp
inc
adc
mov
mov
test
je
jg
mov
lods
int
ds
xchg
test
mov
cli
lds
pop
push
xchg
sbb
cmp
js
push
add
fists
xchg
sbb
movsb
fs
mov
xor
cli
sbb
lds
mov
or
popf
stc
pop
fistps
sub
les
pop
add
gs
or
adc
add
sbb
popl
push
cltd
ret
mov
mov
push
cwtl
es
fwait
inc
inc
push
inc
push
fs
in
stos
jg
pop
dec
rcl
push
or
xchg
cmp
push
sbb
mov
mov
mov
mov
xchg
or
cmpsb
int3
in
add
xor
sbb
mov
xchg
sti
jns
and
pop
ljmp
lcall
inc
jmp
and
sbb
mov
in
cmp
aam
test
dec
and
sbb
mov
push
mov
push
and
cs
adc
push
outsb
rcrb
sahf
sub
imul
outsb
pop
fstp
repz
xchg
hlt
push
sbb
repnz
cwtl
pop
xchg
inc
pop
nop
jmp
std
fdivs
mov
pop
mov
fildll
lcall
or
xchg
fwait
cli
pop
aas
fstl
sub
outsb
add
push
add
loopne
in
loope
jle
loopne
dec
xorb
shlb
sahf
jp
push
mov
sub
sub
out
lea
stos
mov
ljmp
aas
data16
fs
arpl
jno
pop
scas
jo
mov
aam
mov
lret
or
fcoml
fadds
ret
stc
test
lahf
jp
mov
mov
inc
and
ret
pop
repz
xlat
pop
mov
and
push
dec
mov
mov
out
add
adc
sahf
cmc
jge
imul
cmp
xchg
cmp
mov
movb
jecxz
pop
jmp
icebp
add
inc
jae
ret
out
mov
pop
inc
push
jl
insl
sbb
addb
push
xchg
daa
das
ss
popa
aas
lret
adc
aad
push
orb
sbb
dec
cltd
insb
mov
sbb
sbb
ljmp
adc
sub
ja
fldt
push
mov
add
sub
jecxz
ljmp
or
jae
into
jle
cmp
adc
out
movsb
mov
xor
or
jb
xchg
out
push
and
ja
call
mov
inc
cmp
inc
ret
jge
aas
mov
js
test
sub
pop
and
fldcw
add
xchg
test
int
imul
cmp
stc
test
push
sbb
aaa
mov
iret
jne
stc
mov
cmp
fnstenv
nop
repnz
int3
notl
sti
jo
inc
push
hlt
mov
or
int
icebp
rclb
enter
into
and
push
loop
inc
sahf
cltd
mov
std
into
out
xchg
mov
int
xor
mov
imul
mov
cmp
sahf
add
and
xor
mov
lret
jg
sbb
push
xchg
das
imul
add
test
and
shll
xchg
mov
mov
nop
and
sbb
inc
jno
test
adc
mov
mov
mov
cmp
mov
push
adc
cmc
sahf
jb
ja
mov
xchg
icebp
dec
ljmp
adc
scas
xchg
gs
shlb
fistps
fimull
push
repnz
inc
xchg
stos
clc
xchg
aas
cmpsl
mov
movsl
cs
push
push
mov
sar
hlt
icebp
push
scas
mov
jne
inc
pop
sahf
loope
push
iret
adc
insb
clc
cwtl
dec
out
add
repnz
stos
out
cld
jb
dec
inc
popl
and
cmp
dec
lret
inc
push
repnz
mov
push
rorl
cmp
pop
jnp
or
hlt
cmp
fldcw
mov
add
pop
dec
cli
ja
mov
push
xor
jne
mov
jecxz
test
xor
shll
mov
cmp
xchg
rcl
mov
pop
fidivrl
jnp
mov
mov
pop
cld
lahf
cmp
test
mov
mov
int
mov
and
xchg
mov
mov
cmpsl
xchg
aad
movsl
leave
mov
adc
cmp
add
and
fs
sub
lods
cmp
insl
cmpsb
cmp
pop
movsb
sub
jo
test
adcb
fldt
arpl
jmp
insl
xor
push
dec
out
xlat
inc
dec
mov
adc
mov
xor
pop
stos
insl
scas
jecxz
push
clc
lds
ret
and
and
addb
enter
sbb
sub
pop
ret
jno
or
and
rcrl
mov
fcmovu
add
call
iret
mov
sbb
fcmovnb
lret
and
pop
push
fwait
call
adc
push
mov
enter
push
cmp
mov
mov
arpl
jecxz
test
xor
and
pop
sub
sub
cs
and
mov
fsubl
and
xor
inc
or
movsb
cmp
lods
push
adc
aaa
in
xor
xor
jmp
nop
lret
xor
xchg
xor
mov
inc
loop
outsl
mov
pop
les
out
add
jae
xor
not
add
loopne
das
fidivrs
mov
mov
nop
loop
add
push
cs
test
enter
adc
es
lret
adc
lcall
clc
add
jb
lds
push
ret
lcall
jmp
cltd
cmp
lods
scas
imul
push
adc
pop
xchg
scas
jl
pcmpgtd
jmp
mov
and
and
cmp
in
adc
adc
pop
xlat
fisubs
pop
lock
add
mov
shlb
pop
add
fsub
pop
cmp
adc
push
jge
dec
loope
mov
clc
or
jno
fstps
decl
add
dec
jae
inc
mov
inc
or
mov
mov
sbb
scas
sbb
pop
push
imulb
jle
sub
cmp
sub
bound
cmpsl
fistpll
shlb
dec
sub
inc
fidivs
out
mov
rcr
sbb
loop
push
pusha
insb
loopne
jno
inc
dec
adc
sahf
adc
std
mov
mov
ret
push
hlt
sub
cmpsl
loope
mov
sbb
mov
push
dec
bound
orl
xchg
xchg
les
jns
jae
arpl
cltd
mov
out
sub
xor
ja
push
xor
sbb
inc
ja
stos
dec
pop
xchg
adc
shrl
sarl
jb
int3
loop
out
and
mov
mov
hlt
dec
movsl
jecxz
push
pusha
out
iret
movsb
mov
fdivs
rol
negl
mov
mov
imul
and
push
and
cltd
imul
data16
test
insb
pop
es
cwtl
mov
sbb
ret
sbb
pop
mov
mov
stc
popa
add
xchg
pop
fdivl
pushf
lods
aam
sub
sbb
jmp
add
lret
nop
xor
mov
test
pop
jb
fnsave
sub
and
std
ret
xchg
test
scas
mov
mov
out
jp
mov
xchg
pop
rol
fs
mov
sti
fwait
sub
add
xchg
pop
cmpsl
adc
dec
clc
js
fldcw
push
adc
xor
cli
sbb
movsb
std
sbb
mov
xchg
cmp
mov
pop
or
push
dec
fidivrs
push
inc
pop
frstor
jbe
lods
lret
ret
mov
xchg
and
or
das
push
movsb
cmpsl
inc
gs
dec
or
je
test
scas
pop
dec
fdivl
dec
jo
pushf
push
mov
or
push
filds
and
hlt
addr16
das
idivb
pop
repz
nop
sbb
jno
lea
ret
sub
test
xor
or
xor
mov
mov
sahf
ja
insl
ficompl
mov
pop
adc
mov
mov
lret
popf
repz
cmp
popa
sub
sahf
push
cmp
sub
shlb
clc
int
cmpsl
pop
pop
popf
push
adc
pop
inc
sub
and
das
sub
add
dec
daa
pop
push
sbb
rclb
mov
mov
mov
scas
dec
cmp
push
nop
test
data16
test
sbb
mov
mov
pop
dec
sbb
xor
pop
or
lods
es
mov
dec
mov
adc
leave
flds
push
xchg
or
cmp
lods
sbb
xchg
dec
andl
mov
ja
fistps
das
ss
subl
sbb
loopne
ja
pop
ljmp
xchg
push
lock
cld
sbb
lock
cmp
push
jg
fiaddl
xchg
popf
dec
popa
fsts
push
sub
pop
sub
popa
je
ds
pop
push
mov
jnp
nop
push
sub
push
pop
adc
cmp
or
sbb
mov
xchg
push
leave
je
in
mov
imul
mov
and
jge
loop
shll
movsb
sub
aad
or
and
out
sub
add
pop
push
shlb
mov
pop
arpl
adc
push
or
cltd
sbb
inc
daa
mov
dec
dec
or
and
data16
push
adc
aad
pushf
sbb
mov
aam
loopne
mov
faddp
cli
add
in
int3
pop
ja
or
cltd
sub
pop
sahf
jb
testb
add
icebp
imul
pop
jbe
xchg
xor
arpl
push
out
in
dec
in
subl
xchg
stos
imul
jns
scas
int
or
xchg
jmp
pop
outsl
add
cwtl
mov
add
jle
stos
dec
mov
ja
mov
cmpsb
fs
aam
imul
lods
loope
mov
xor
cltd
jne
mov
scas
fcomp
sahf
push
adc
pop
aad
adcb
add
xchg
cmc
imul
addr16
dec
rcrl
push
mov
and
mov
iret
pop
in
jno
ja
int3
cmpsl
lret
push
push
mov
pusha
ror
lret
xor
xchg
sarl
mov
scas
cmp
ds
mov
leave
and
mov
lods
pop
sbbb
xor
mov
enter
mov
and
fdivs
shrb
xchg
cwtl
dec
push
xchg
mov
aam
int3
cmp
mov
or
shrl
lret
sbb
adc
mov
xchg
xchg
enter
out
and
es
sbb
push
enter
push
bound
or
cld
mov
cmpsl
lret
ljmp
stos
sub
ljmp
das
push
pop
push
in
or
into
adc
call
fiadds
je
pop
test
icebp
mov
push
xchg
jge,pt
mov
aad
ret
pushf
and
cmp
and
jno
adc
popa
in
sbb
xchg
out
add
sub
das
cmp
xchg
mov
pushf
mov
lods
jp
ljmp
mov
push
mov
pop
incb
jl
in
xchg
or
add
add
adc
cmp
and
int
fs
push
test
jmp
loop
cmc
mov
out
test
call
imul
mov
dec
sbb
ja
jl
sub
leave
jp
and
loope
jnp
shrb
inc
mov
popl
xor
cli
ficomps
xor
popa
gs
push
mov
jge
jl
xorb
push
sub
mov
cli
add
mov
adc
and
push
mov
outsl
mov
or
jle
xchg
cmp
lahf
iret
xchg
mov
inc
and
aam
mov
cmc
cmp
adc
cltd
scas
mov
jnp
test
cmc
je
into
icebp
jns
outsl
push
cld
cmp
xlat
aaa
cmp
xchg
rorl
cwtl
in
sti
insb
fwait
movaps
aaa
loop
mov
xor
add
cwtl
push
call
inc
xchg
loopne
fstps
adcb
cmp
rcl
push
jnp
mov
dec
or
push
cmp
xor
cmp
xchg
aaa
cli
popa
clc
push
xchg
mov
lock
mov
xor
lods
jp
cmp
fistpl
in
dec
xchg
dec
repnz
push
fistl
mov
stos
decb
scas
mov
mov
ds
std
mov
pop
mov
cwtl
pop
inc
adc
loopne
pushf
daa
cmp
mov
push
mov
out
fidivs
test
pop
call
ror
and
out
jb
enter
cltd
data16
inc
in
out
in
add
fwait
push
dec
inc
lcall
sbb
jecxz
cmp
aam
addr16
xor
cwtl
in
mov
sbb
decb
xor
insl
push
int
mul
push
mov
or
cmp
pop
sub
loope
cmp
mov
push
push
movups
cmpsl
and
dec
fwait
dec
and
push
sbb
sbb
mulb
sbbl
daa
mov
fdecstp
dec
sbb
jns
pop
sub
rcrl
pop
lds
and
and
shrl
aas
ret
push
dec
repnz
roll
fadd
jmp
pop
ljmp
jns
out
sbb
insl
push
mov
outsl
fdivs
orl
mov
test
cmpsb
fdivs
rorb
mov
pop
popf
jb
pop
repz
daa
xchg
fmul
out
jmp
aam
jg
test
mov
jns
jae
divl
or
inc
rcl
loope
nop
bnd
push
xchg
or
ss
rcrl
add
mov
mov
xorb
mul
fs
test
shll
lods
cmp
inc
mov
int3
aas
pop
sbb
test
pop
mov
fsubrs
mov
ret
push
mov
pop
jo
je
fidivrs
popf
and
adc
sti
fsts
push
stos
mov
movl
sbb
pusha
roll
mov
mov
enter
in
pusha
ss
xchg
cltd
or
sub
imul
aaa
or
lahf
mov
ror
mov
aad
rcll
mov
insl
stc
bound
mov
jne
mov
sub
inc
pop
int
pushf
cmp
ljmp
ret
stos
xor
jmp
call
in
adc
int3
dec
sub
ss
lret
pop
fcoml
xor
pop
cmp
addr16
int3
lds
int3
xchg
das
bound
jle
xchg
clc
arpl
sub
cltd
push
sar
mov
sbb
mov
ds
scas
mov
mov
pop
lods
and
iret
icebp
xor
outsl
push
add
fwait
jno
sahf
into
fisubrl
std
sbb
xchg
sbb
mov
sub
mov
out
sbb
lea
mov
cmp
out
cltd
fcmovnb
mov
ja
adc
int
add
jle
xor
push
jns
dec
jnp
inc
adc
pushf
out
arpl
adcl
sarl
cld
jo
int
adc
stos
jae
fs
lds
out
loop
pop
xchg
jecxz
jnp
dec
or
in
popa
in
dec
and
jge
enter
pop
scas
stos
jne
jg
dec
enter
js
jo
movsl
pushf
mov
icebp
jno
imul
xchg
mov
mov
loop
call
outsb
sbb
out
and
outsl
orl
jb
mov
sub
push
add
divl
movsl
lods
xor
jecxz
pop
sbb
mov
aas
or
fsub
fistpll
jne
mov
cmp
inc
mov
je
push
into
jns
and
arpl
stos
jae
imul
mov
inc
movsb
or
data16
mov
test
clc
xchg
int3
out
cltd
ljmp
mov
arpl
int
push
repnz
xlat
or
xor
or
dec
test
in
popa
push
sbb
mov
and
ds
iret
jge
sbb
in
cmp
push
mov
jo
pop
insl
xorps
movsl
cmp
mov
dec
or
add
jle
and
test
lahf
and
fnstenv
add
rclb
pop
mov
je
jge
lcall
aam
xchg
fsubrs
pop
std
mov
adc
xor
pop
xor
orb
jne
add
push
lods
fwait
push
cmp
xchg
test
add
mov
jo
pop
xor
xchg
mov
insb
testl
loop
mov
sbb
xor
jae
ss
int3
sti
cmpsb
fwait
push
and
ds
int3
lret
imul
mov
xchg
je
jnp
and
fldl
jo
push
int3
adc
insb
inc
add
lea
mov
fstp
repz
std
cs
push
mov
jno
lods
nop
scas
add
fs
xor
inc
and
push
inc
or
push
test
in
mov
sub
mov
in
push
inc
int3
dec
jne
dec
pop
aam
and
outsl
pop
and
stos
lods
ret
pop
ss
sbb
pushf
jge
ds
add
push
or
jle
add
js
mov
jp
jno
scas
out
sub
jno
cmp
imul
lea
push
test
int3
cs
insl
ja
popf
jbe
imull
movsb
daa
mov
add
and
sub
pop
push
ror
lods
fcoms
mov
xchg
dec
cmp
lds
pop
daa
push
pop
ds
xchg
cmp
cmp
mov
loop
add
cmp
pusha
popf
sahf
andb
sub
xor
lock
mulb
jecxz
jg
lods
loop
push
setbe
mov
lcall
test
mov
int
push
sbb
out
sub
fisubrs
int3
lret
or
mov
addb
cmpsb
sarb
adc
inc
inc
dec
sbb
mov
sub
inc
idivb
ljmp
mov
nopl
or
or
jb
imul
test
xchg
xor
and
jp
cmc
mov
inc
push
daa
or
pop
lds
mov
xchg
cmp
cmp
cwtl
mov
fcom
lret
rcrb
rorb
out
in
jle
sysexit
pop
and
jnp
cmp
jb
in
jp
cmp
pusha
sub
fs
loopne
pop
pushf
test
dec
mov
loopne
cmp
into
and
pop
jns
pop
movsb
scas
filds
nop
lahf
inc
movsl
outsl
ljmp
movups
dec
mov
add
stc
cmp
dec
arpl
mov
and
jmp
out
out
push
es
sub
pop
in
fnstenv
inc
adc
cmpsl
jmp
mov
stos
cltd
mov
push
imul
adc
daa
mov
fidivs
insb
and
ljmp
movb
mov
lods
xor
adc
cmp
or
sub
cmp
mov
imul
mov
cmp
jge
pop
jge
lods
dec
add
shlb
or
cmpsb
lea
jecxz
imul
pop
lea
fdivr
cltd
lds
dec
mov
sbb
out
fcmovb
stc
dec
aaa
addr16
and
mov
xchg
xchg
xor
sahf
inc
add
jle
int3
jg
fdivp
xlat
xor
mov
or
repnz
sbb
mov
cld
xor
int
adc
mov
das
inc
loop
test
dec
aas
popa
and
pop
cmp
pop
jae
and
or
mov
jae
int
xchg
pop
mov
adc
lcall
jb
mov
outsb
movsb
in
in
popf
push
add
sub
mov
arpl
sub
adc
sbb
sbb
dec
loopne
push
mov
outsl
out
add
sbb
lcall
push
pop
xchg
in
not
loopne
pcmpgtw
movsb
push
insb
insb
pop
lea
arpl
je
dec
add
mov
mov
add
outsl
lods
sbb
js
mov
out
jecxz
jecxz
adc
or
out
add
mov
adc
add
fstl
adc
movups
or
adc
movsl
mov
or
push
out
push
stc
sbb
dec
arpl
sub
jno
arpl
push
xor
stos
mov
add
outsl
jo
dec
ds
xor
pop
inc
sub
cltd
inc
call
bound
les
xchg
lea
je
push
lods
dec
sbb
sbb
ja
jae
fcomi
fs
fsubr
mov
scas
rolb
insl
mov
xchg
inc
aas
mov
sub
lods
ret
and
add
lds
inc
jo
dec
ret
je
push
cmp
scas
arpl
xor
adc
in
cmp
shl
mov
sti
xor
aaa
ret
dec
mov
lods
lock
jnp
or
fstps
nop
and
aas
push
and
faddl
aam
f2xm1
xchg
jno
jge
ljmp
outsl
add
or
sahf
ffreep
mov
popa
scas
and
pop
cmp
add
aaa
popf
xor
add
test
test
or
fmuls
push
aas
sbb
xorl
cmp
in
sti
out
mov
sbb
data16
fldl
out
ficompl
shr
and
testl
push
sub
sbb
or
pop
xor
in
dec
and
and
insl
gs
adc
mov
pop
int3
xlat
mov
mov
lods
dec
mov
out
push
or
sub
mov
mov
xchg
sbb
push
push
mov
shlb
arpl
mov
imull
imul
xor
add
xor
sub
test
mov
xchg
dec
adc
leave
and
push
shll
into
push
mov
mov
fcmove
and
push
movsb
jo
push
testb
scas
jl
mov
xchg
jp
lods
cmpsb
jo
jp
push
xchg
jp
and
sbb
mov
mov
jmp
push
pusha
mov
push
inc
fisttpl
or
dec
jl
jl
jne
dec
loopne
jecxz
inc
test
xchg
mov
pop
add
jnp
cmp
bound
fcompl
jge
call
mov
or
inc
add
sbb
add
jo
fcompl
aas
jb
insb
push
pusha
jp
jo
fidivs
nop
adc
addr16
ret
dec
inc
xchg
mov
ss
and
adc
jb
shrb
xchg
cli
loopne
cmp
icebp
loopne
fwait
cli
fwait
push
pop
dec
ss
mov
fldenv
sbb
cmp
hlt
mov
mov
pop
fcmovbe
mov
notl
and
xlat
fwait
sbb
mov
enter
cmp
push
data16
jl
mull
pushf
movsb
sahf
add
cltd
pop
mov
repnz
push
out
lea
pushf
pop
jmp
pop
pop
push
push
fnstsw
mov
fistl
inc
dec
mov
out
out
xor
pop
inc
loope
push
mov
mov
in
xor
cmpsl
aaa
mov
mov
aas
or
shll
out
jecxz
loop
fldcw
subl
or
xchg
mov
out
mov
push
popa
ret
dec
jo
push
cmp
ja
push
and
rcl
mov
jno
sub
aam
enter
lods
scas
mov
cmp
xor
jl
enter
sbb
pop
sbb
mov
ss
lret
pusha
lcall
sbb
das
mov
pusha
mov
das
push
cmp
cwtl
outsb
pop
inc
mov
stos
repnz
movsb
jb
lcall
popa
mov
daa
je
lds
push
sbb
insb
ficompl
loopne
adc
shll
mov
ds
jnp
call
or
int
ds
or
call
lahf
subps
push
mov
jle
leave
fiadds
int
cli
jmp
xchg
mov
push
mov
add
cmc
adc
jae
cmp
mov
fnstsw
mov
jl
xchg
loopne
leave
je
mov
mov
repnz
and
push
mov
mov
mov
test
xor
sbb
stos
push
sub
fwait
int
push
pop
and
dec
pop
jle
sub
xor
mov
adc
je
lods
xchg
add
in
sbb
jo
ja
or
imul
imul
pop
pop
adc
ss
popa
lret
into
or
imul
mov
adc
mov
xchg
add
adc
es
cmpsl
ret
out
sbb
outsb
lret
ret
in
adc
pop
pop
xchg
adc
fadds
jmp
xchg
or
jns
lret
je
les
out
testb
or
fidivrs
xchg
movl
adc
mov
iret
and
jmp
cmp
cmpsl
jmp
push
sub
popa
aad
es
popa
sub
cs
sti
xchg
mov
sub
jg
out
and
xchg
mov
xor
push
add
js
mov
int
cmp
test
cs
aaa
aas
push
cmp
and
mov
pop
and
mov
fimuls
in
mov
mov
scas
mov
cmp
std
test
je
xlat
pushf
sbb
stos
mov
jbe
add
ss
clc
mov
imul
xchg
push
mov
xor
cmpsb
ret
out
scas
cmp
pop
int3
dec
pushf
add
std
dec
aam
inc
ret
pop
pusha
jmp
mov
cltd
xor
test
stos
sub
cmc
jmp
das
xor
into
scas
ljmp
lret
inc
cmp
pop
lret
xchg
loope
loope
mov
pop
push
mov
aam
xor
jo
lds
and
fs
sub
lds
cmp
sbb
sti
pushf
repnz
popf
xor
mov
flds
add
insl
stos
xor
lret
dec
inc
sub
jo
cmpb
loopne
mov
stos
sbb
pop
xlat
mov
lods
xchg
shrb
xor
rorl
fs
lods
and
push
adc
fdivr
or
pushf
push
adc
xchg
cltd
jg
nop
mov
sbb
cltd
mov
mov
mov
cli
adc
mov
mov
xchg
testb
stos
loop
mov
imul
mov
add
add
inc
in
and
out
sbb
xor
aaa
dec
stos
out
call
pop
mov
jecxz
lods
cli
enter
.byte
