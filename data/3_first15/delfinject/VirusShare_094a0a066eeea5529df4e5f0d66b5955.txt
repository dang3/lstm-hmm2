sbb
add
sahf
int
loop
sti
aam
es
mov
js
mov
mov
push
push
jmp
mov
arpl
out
and
int3
fiadds
mov
fsubrs
mov
inc
mov
dec
cmp
in
jle
imul
mov
shrl
xor
dec
sub
lret
and
add
and
push
push
inc
jnp
imull
mov
adc
in
cmc
ss
test
adc
mov
jg
xorl
std
sbb
ret
fcoml
dec
mov
ss
bound
push
mov
sahf
sbb
adc
ret
sbb
in
pusha
cmp
fsubrs
sub
xchg
aad
cmpb
pop
dec
mov
inc
jg
lcall
in
and
repz
cmpsl
jae
aaa
cmpsl
fisubl
push
xchg
mov
adc
xlat
stos
lcall
ret
call
lods
std
xor
xchg
or
jb
fs
pop
add
add
inc
insl
xchg
mov
lahf
lock
cmp
pop
or
mov
sub
mov
xor
mov
or
out
sbb
in
andb
pop
and
pushf
dec
ss
push
jge
push
lcall
out
inc
in
mov
jae
insl
add
xchg
and
loope
mov
xor
rol
pop
dec
adc
movsb
push
ja
subb
ficompl
xchg
in
push
int
dec
pop
cmc
call
iretw
mov
shll
sbb
ja
or
leave
xchg
cwtl
shll
insl
mov
xor
femms
or
in
cwtl
sub
in
add
pop
and
les
rorl
sbb
dec
loope
rorl
into
inc
ss
xchg
movhps
loope
sbb
or
aad
pushf
cs
jmp
scas
mov
scas
icebp
and
out
or
sbb
xchg
dec
or
popl
imul
lods
dec
nop
mov
decl
into
sahf
or
jne
cli
sub
jge
sarl
pop
icebp
out
push
pop
and
fldl
push
je
inc
pop
jle
mov
mov
xor
lock
push
repnz
nop
mov
push
cmp
lods
xor
ljmp
xchg
mov
pushf
fisttpll
pop
nop
addr16
pop
xchg
fiaddl
mov
dec
xchg
aas
inc
push
cmpsl
repz
push
stos
test
fbstp
pop
iret
mov
leave
not
jmp
mov
adc
sub
push
mov
sub
decb
notl
mov
cmpsb
cs
insl
xchg
jecxz
or
or
enter
pusha
mov
cld
push
ds
mov
roll
mov
inc
or
jg
cld
mov
inc
mov
rcrb
cli
mov
loop
mov
outsl
cmp
sbb
jge
mov
jae
call
shll
sbb
add
inc
mov
neg
insl
aam
shl
movsl
loopne
xchg
out
imul
pop
push
xor
int
xchg
adcl
out
push
in
das
push
jnp
adc
and
push
stos
iret
add
clc
mov
into
lods
jge
push
popf
sub
int
lds
icebp
adc
into
inc
xor
xor
lea
jecxz
aad
cmp
mov
or
adc
push
addr16
dec
pop
xor
les
and
pop
mov
outsl
dec
mov
lcall
dec
dec
out
mov
pop
mov
sub
lret
sbb
test
int3
jl
push
mov
mov
dec
in
pop
rclb
cmc
mov
jbe
lods
jmp
push
inc
lds
icebp
mov
jg
ljmp
mov
test
repnz
pushf
test
enter
inc
jp
pop
icebp
test
mov
pushf
imulb
outsl
addr16
in
inc
rorl
clc
xlat
mov
xlat
aam
or
stos
subl
in
jnp
mov
jne
or
dec
icebp
nop
loopne
in
cmp
lahf
or
inc
notb
outsl
mov
in
sbb
push
adc
test
daa
iret
lods
add
out
enter
shrl
mov
jmp
inc
addl
imul
aaa
in
idivl
cwtl
mull
jo
enter
cmp
int
out
out
lahf
ficompl
sub
leave
inc
sub
ret
dec
xchg
cli
jl
stc
push
test
push
lods
add
xchg
mov
into
mov
fists
jne
cmp
stos
xor
and
daa
daa
xor
add
pop
push
xor
cs
icebp
rolb
cmp
mov
fs
xor
lahf
idivl
jp
and
andb
stc
int3
out
ficompl
les
and
test
stos
and
shrl
add
inc
lret
daa
stos
loope
outsl
lret
fs
in
jp
pop
jae
fidivl
push
out
adc
das
aas
ss
sarb
in
jns
movsl
pop
jmp
jno
gs
mov
xchg
xor
or
mov
cmpsl
mov
incb
inc
jne
inc
lods
pop
incb
je
les
push
inc
jecxz
cmp
call
sbb
sbb
xchg
stos
ficompl
push
imul
js
and
sub
push
jmp
pop
push
push
sub
xor
stos
adc
lea
fs
fmull
movsb
outsl
bound
and
push
adc
mov
into
aas
mov
xor
mov
dec
sbb
mov
pop
lret
mov
out
xlat
rolb
lret
jl
hlt
cmc
or
loopne
cmp
cmp
mov
push
cld
mov
stc
or
xor
dec
mov
xor
movsl
mov
pop
ja
mov
cltd
sbbb
inc
fsubrs
aaa
cmp
mov
aaa
and
mov
xor
and
rorb
and
sub
int3
pop
mov
pop
xchg
stos
xor
pop
mull
and
cld
and
fnsave
xchg
jg
pop
arpl
push
hlt
shl
into
inc
ficompl
lcall
lahf
rolb
cld
ja
dec
aam
cld
pop
out
nop
dec
das
into
sub
sbb
push
cmp
jno
das
daa
stos
xchg
push
xor
cmovae
pop
stos
mov
iret
out
cmp
leave
mov
outsl
dec
out
sbb
cmpsl
mov
fstpt
pop
movsl
outsl
xchg
mov
dec
mov
add
pop
test
fsubrs
pop
push
add
neg
mov
jecxz
cmp
sub
loopne
mov
sbb
mov
ror
and
xchg
add
add
sub
adc
mov
mov
jno
sbb
adc
add
push
testl
cld
std
leave
xchg
gs
cltd
xchg
lret
cld
idivb
mov
push
sti
add
aad
add
aam
cld
inc
cld
mov
call
xor
mov
flds
mov
and
mov
repz
or
jnp
mov
int3
addr16
stos
aad
out
push
imul
rcll
bound
sub
and
pop
jns,pn
mov
cmp
push
shrl
push
jle
sbb
cld
lock
in
adcl
pushf
mov
rcrl
sub
lods
cmp
xchg
jnp
je
cld
aas
je
aad
loope
fwait
testb
aaa
add
ds
rolb
mov
sbb
sbb
mov
push
mov
ljmp
daa
mov
pop
iret
icebp
inc
mov
pop
in
push
push
jmp
mov
adc
pusha
xchg
pop
pop
mov
add
sti
push
dec
loop
bound
push
inc
fistps
ja
pop
test
in
inc
in
aas
inc
add
jl
cmp
faddl
pushl
push
mov
xchg
mull
dec
adc
sbb
aam
stos
adc
gs
inc
add
mov
ret
imul
lret
insl
adc
adc
test
lret
rcrl
push
test
imul
push
enter
sub
shll
xchg
stos
or
lret
dec
dec
adcb
lods
jb
out
lds
out
xor
int3
ds
int
jecxz
pop
test
xchg
dec
add
dec
jp
stos
in
fsts
stos
xlat
fs
sbb
pop
and
imul
jmp
fbstp
mov
push
push
sbb
push
fdivp
or
rcr
shrb
stc
dec
fsubs
jge
mov
sbb
dec
xchg
fistpl
pop
xor
dec
subb
loop
pop
inc
mov
cs
iret
call
xchg
sub
subl
in
mov
sahf
mov
or
lret
test
andl
or
mov
sbb
jno
leave
stc
loop
and
mov
jp
pop
mov
jno
aad
sbb
out
scas
pop
xlat
ret
lahf
sbbl
xchg
mov
pop
in
cld
cwtl
pushf
xchg
lahf
and
sub
push
push
fwait
repz
mov
aam
stos
aad
dec
and
bnd
iret
imul
filds
pop
jp
xchg
lods
xor
outsl
dec
jno
cmpsl
push
sbb
add
pop
scas
repz
xchg
test
lcall
insl
cli
loopne
jae
mov
inc
gs
jbe
lods
cmpsb
stos
call
dec
dec
and
mov
and
cmpsb
test
enter
dec
mov
lods
jg
dec
pop
sti
in
loopne
xor
out
cmp
lahf
dec
inc
pop
cli
sub
and
stos
dec
addr16
fsubrp
jmp
jbe
mov
lcall
loop
pop
test
aad
fbstp
xchg
xchg
repz
jno
cs
pop
xor
fucom
jb
mov
push
ret
scas
dec
mov
sub
pop
fdivp
sub
es
iret
jbe
test
aaa
add
jl
mov
imul
dec
shll
mov
dec
loope
jmp
dec
cmpsb
sbb
xchg
jle
les
jg
jle
ljmp
scas
push
pusha
loope
shll
push
dec
xchg
test
push
xor
dec
ja
sbbb
add
xchg
icebp
adc
xor
ljmp
inc
pop
pop
cs
insb
iret
ds
lock
pop
dec
pop
cmp
xchg
rorb
les
push
sbb
push
add
jg
push
scas
sar
mov
jae
mov
cli
call
dec
cmp
imul
sub
xchg
outsl
mov
cmp
ja
and
push
mov
pop
gs
mov
rclb
xor
cmp
dec
jnp
push
lods
add
mov
or
adc
aad
icebp
pop
or
outsb
out
jp
dec
add
lea
pushf
js
data16
add
inc
or
pop
loop
xchg
sub
stos
mov
in
hlt
dec
pop
cld
repz
fmull
mov
mov
sub
add
popf
test
pop
aas
mov
arpl
mov
test
mov
adc
add
cmp
or
pop
cwtl
pop
fists
mov
and
pop
mov
inc
mov
rorl
and
adc
and
sahf
mov
clc
outsb
xchg
shlb
jno
andl
hlt
sub
inc
sbb
jbe
jmp
xchg
xor
mov
dec
aas
xchg
cmpsb
js
fnstenv
leave
jmp
jge
daa
cmp
sbb
leave
call
jmp
dec
add
out
cltd
out
movsb
push
push
adc
mov
fimuls
sbb
cmc
and
or
xchg
dec
xor
lods
je
insl
cmp
movsb
out
rcrl
mov
leave
jecxz
inc
pop
sbb
mov
fadd
addb
psraw
cmp
or
aas
jle
clc
not
push
decb
shl
in
fbstp
adc
shll
hlt
mov
subb
stos
adc
subb
dec
sub
sub
mov
fwait
test
cmp
jl
testb
rorl
arpl
jge
leave
outsl
movsl
cmpsb
mov
xchg
adc
push
lahf
inc
xchg
mov
jno
sahf
jecxz
ds
jnp
out
sbb
pop
xchg
pusha
lds
lret
sbb
and
dec
xor
mov
repnz
insb
sbb
icebp
add
mov
jecxz
or
enter
fdivrs
pop
icebp
rorl
cmp
stc
lret
mov
test
mov
xlat
dec
xchg
pop
imul
pop
loope
add
ret
int3
pop
loopne
pop
sub
adc
pusha
shr
lcall
data16
call
xchg
xor
jno
xchg
sub
sub
out
jl
cmp
lea
in
rorb
adc
pop
rcl
sbb
nop
sub
inc
xchg
outsl
decb
loope
lds
mov
pushf
out
adc
aaa
stc
divl
je
push
push
mov
add
out
mov
mov
test
popa
cmpsb
jmp
stc
iret
inc
jmp
pop
dec
inc
sti
out
push
push
dec
das
lahf
sbb
sub
jl
addr16
inc
xchg
and
fcoml
xchg
mov
jl
aas
insb
mov
and
inc
outsl
lods
push
push
movsl
jns
fiadds
push
mov
or
scas
fdiv
stos
repnz
sbb
sbb
mov
test
add
add
and
mov
cmp
movsl
jo
out
enter
cmp
ljmp
xchg
pop
mov
pop
pop
push
cmp
sub
pop
ds
mov
inc
jecxz
ljmp
ret
jb
lahf
repnz
stc
jae
pop
aam
mov
ss
jp
lahf
and
insb
inc
ret
jge
xchg
jge
inc
movsl
xchg
xchg
sub
outsb
data16
inc
mov
nop
sub
dec
dec
dec
xchg
leave
push
cmpsl
or
sarl
add
stc
inc
lahf
out
xchg
xor
and
in
aam
jne
jmp
pop
cmp
inc
addr16
roll
bound
aas
xchg
out
pop
mov
mov
mov
stc
fdivl
inc
jecxz
adc
fdivrs
scas
jge
xchg
ret
sub
jne
dec
lods
lahf
mov
adc
and
mov
mov
push
lock
mov
sub
adc
adc
sub
js
mov
mov
lods
aas
mov
mov
xor
lods
sbb
clc
cmovae
call
add
int
inc
pop
inc
mov
arpl
inc
es
sub
adc
mov
mov
inc
fs
cmp
inc
inc
stc
adc
jecxz
jmp
movsl
xor
inc
and
into
movsl
or
imul
jae
and
sub
ja
mov
fwait
xchg
pop
adc
ficompl
jecxz
cmpsb
inc
mov
jmp
mov
mov
mov
and
cmc
and
fimuls
xor
pop
scas
stos
jmp
fwait
ret
dec
cmp
out
gs
mov
mov
mov
inc
mov
adc
mov
sub
mov
popa
mov
in
jp
inc
test
cmpl
xchg
pop
out
arpl
sbb
jmp
inc
inc
test
fldenv
das
cmp
rcll
dec
pop
sbb
push
les
lcall
fwait
push
fstpt
mov
test
mov
xchg
jg
fincstp
aaa
mov
adc
mov
cltd
dec
out
sbb
lahf
les
sahf
or
dec
or
movsl
jmp
cli
idivl
sub
bound
cmp
jle
adc
xchg
in
jbe
mov
rorb
xor
jne
test
fs
out
into
dec
xorb
mov
sub
iret
mov
rcrb
sbb
popa
roll
loopne
or
jnp
or
out
push
stc
xchg
insl
or
ss
add
movsb
imul
lcall
cld
mov
in
mov
xchg
sbb
and
in
jl
pop
sub
inc
ficoms
jb
mov
dec
jo
movsb
mov
cmp
popa
xor
pop
popa
push
mov
pop
adc
cmc
cmp
addb
push
or
sub
pop
or
pop
adc
and
mov
fldl
imul
cs
xchg
bound
cld
iret
push
pusha
inc
ror
popa
into
fidivrs
lret
fcmovu
dec
adc
and
scas
inc
aad
and
mov
cmp
cltd
fcomps
inc
and
xchg
repnz
sbb
jne
mov
sub
pushf
and
or
cmp
add
gs
inc
and
lahf
push
adc
xor
fsts
leave
mov
push
iret
jnp
stc
movsl
stos
daa
mov
adc
lahf
pop
test
jmp
or
cmp
sub
mov
cmpsl
and
push
mov
or
push
and
xchg
mov
stc
pop
bnd
xchg
insl
dec
arpl
gs
sbb
and
fstps
sub
fcomip
sbb
sahf
pop
cmc
or
fiadds
xchg
mov
mov
mov
lret
mov
push
insb
movsl
inc
dec
ret
and
inc
jns
xchg
jbe
or
enter
je
fldenv
maxps
jle
push
loope
mov
mov
cmp
mov
imul
addr16
jne
lock
cld
dec
or
xchg
push
rorl
sbb
inc
mov
push
and
xlat
and
adc
or
xacquire
mov
xchg
xor
pop
cmp
leave
rcrb
imul
xchg
or
data16
sti
adc
pop
mov
repz
and
sub
add
xchg
xorl
pop
inc
xchg
ret
test
xor
test
push
and
adc
rolb
cmp
mov
cmpsl
popf
push
add
xor
cli
or
je
cs
or
js
xchg
adcl
xor
ret
dec
pop
inc
cmp
stc
outsb
jno
pop
aas
out
mov
mov
fildl
shrb
ljmp
loope
icebp
pusha
lea
cmpsl
rclb
xor
cmp
sub
push
inc
push
and
xor
mov
or
lods
out
adc
jb
sbb
push
imul
test
fldcw
ret
rclb
hlt
mov
xor
repz
mov
adc
loope
dec
lods
jae
mov
xchg
mov
mov
pop
call
les
cld
int3
insl
xor
push
cs
mov
dec
jbe
icebp
inc
in
ret
lcall
or
add
dec
xor
ret
pop
or
xchg
mov
int
iret
sbbl
inc
inc
dec
fildll
mov
jns
mov
lea
cmp
test
mov
ss
mov
faddl
das
and
aas
mov
call
sub
pop
jb
mov
dec
into
inc
or
and
sub
popa
jle
xchg
repnz
xchg
popl
fucomi
mov
xor
popf
jno
dec
bound
clc
aaa
sub
adc
xor
cmp
movsl
xlat
mov
jmp
lcall
sbb
stos
out
test
out
out
ds
decl
das
dec
xchg
shrl
mov
jecxz
or
and
cli
mov
gs
or
adc
mov
ds
mov
daa
frstor
dec
mov
js
push
pop
add
insb
jg
out
in
push
sub
loop
and
cmp
jge
jo
daa
cmp
lea
adc
push
les
inc
popf
popf
subb
js
ds
mov
js
nop
add
cmpsb
and
sbb
test
adc
lahf
sbb
xchg
out
js
adc
dec
gs
test
jle
ljmp
and
call
popf
add
icebp
jbe
adc
cmc
scas
pushf
arpl
gs
or
pusha
daa
pusha
or
fldl
sub
jle
dec
in
xor
sbb
mov
push
stos
cli
add
add
and
jg
xorl
lods
ficomps
xor
add
jecxz
pop
pop
push
push
ficoms
and
andl
fst
outsl
push
cli
pop
es
in
or
or
stc
jg
push
and
into
mov
xchg
inc
inc
xchg
dec
pop
mov
call
lods
cltd
loopne
bnd
daa
mov
fcomps
push
pop
clc
pop
imul
outsb
inc
sbb
push
push
xchg
icebp
pop
cmp
in
pop
movsb
jno
lahf
cld
add
add
cwtl
jmp
mov
sbb
jecxz
mov
and
nop
out
adc
adc
push
loop
loope
in
insb
fidivs
int
xlat
jmp
sbb
sub
jbe
mov
adc
jne
loop
push
dec
subb
test
mov
stos
shl
aas
inc
xorl
addl
mov
clc
inc
jnp
mov
push
pop
inc
outsl
lcall
jle
push
insl
repnz
repz
out
cli
mov
add
dec
arpl
xlat
pop
inc
mov
cltd
in
adc
mov
mov
xchg
lds
das
jb
mov
adc
adc
mov
jg
test
xchg
out
clc
rorl
int
push
xlat
jl
cmpl
fdivrl
pop
out
mov
idiv
ljmp
pop
imul
pop
push
sub
push
dec
push
daa
loope
pop
jo
loop
rcrl
jns
xchg
dec
pop
xor
loope
test
mov
mov
std
xchg
insl
dec
insl
jae
jl
mov
push
adc
div
mov
adc
outsl
mov
mov
xor
pop
iret
or
xor
mov
clc
push
jl
mov
sbb
call
pop
sbb
sbb
pop
mov
ret
sub
xor
and
push
js
aam
test
popa
icebp
sub
xchg
in
jmp
xor
xchg
inc
jge
dec
or
dec
cli
xchg
mov
jp
in
adc
loope
sub
sahf
add
inc
push
roll
lock
and
dec
mov
mov
test
xchg
mov
cmc
or
imul
pop
add
pop
cmp
iret
adc
jp
sti
jb
std
in
popa
lcall
xor
mov
mov
xchg
mov
adc
xor
add
sub
xchg
aam
or
insb
sbbb
test
cli
call
and
mov
enter
or
dec
stos
push
dec
ffreep
mov
add
popa
and
pop
iret
jmp
out
inc
out
dec
cmp
add
jp
sbb
jg
repz
test
icebp
xchg
add
outsl
adc
xchg
cmp
mov
pop
and
ss
xchg
and
jmp
shll
mov
sub
aam
pushf
dec
jle
add
cmpb
lock
or
lahf
popf
shlb
and
dec
and
dec
imul
jnp
test
adc
pop
xorl
fstl
ja
imul
pop
push
aas
popf
js
cld
inc
dec
add
lret
and
pop
add
in
hlt
test
and
mov
les
in
lock
push
cmpb
mov
xchg
add
sub
ret
dec
mov
nop
cmp
or
and
mov
dec
cltd
gs
cmp
jb
push
into
pop
pusha
movsl
stos
xchg
fdiv
or
ret
xchg
pushf
nop
scas
and
push
mov
pop
sbb
lcall
aad
loopne
mov
fidivl
scas
add
addb
loop
cld
loopne
leave
and
cld
mov
fistps
push
push
test
jmp
out
pop
lret
addr16
roll
mov
xchg
scas
adc
fsubs
in
ljmp
insb
nop
lahf
sbb
popf
jnp
cmpsl
icebp
inc
or
repz
test
shll
scas
ljmp
mov
rorl
shl
js
xchg
and
scas
movsl
fidivl
lds
lods
pop
mov
cmc
imul
lahf
negl
in
jo
mov
push
repnz
cmc
jne
dec
mov
push
mov
lahf
jge
clc
fimuls
out
mov
jp
repnz
push
xor
mov
mov
addr16
test
and
sbb
scas
fisubl
mov
add
mov
xor
push
dec
sahf
cld
test
pusha
pop
sbb
sbb
cmpsl
or
cmpsl
add
push
or
andl
push
ret
seto
cld
sub
repz
fmuls
jo
xor
fdivp
imul
push
das
sub
ljmp
into
mov
lock
or
xor
call
adc
gs
pushf
xchg
xchg
jo
add
enter
out
push
mov
mov
lds
call
cmp
movsb
xchg
loope
nop
cmp
lea
mov
sarb
das
inc
fwait
mov
lea
cmp
sarl
ficomps
and
orb
out
cmp
int3
sub
iret
out
sti
lret
insb
cmp
or
pop
inc
icebp
inc
push
and
mov
aaa
sbb
cmpsb
jge
push
lods
addr16
repnz
loop
negb
cmp
or
iret
mov
inc
outsl
adc
insb
lods
jne
adc
test
hlt
pop
in
pop
mov
fucomi
ret
cli
movsb
sbb
add
rcll
push
add
mov
add
add
outsb
flds
sub
out
in
loope
xor
sbb
cmp
push
out
ret
outsl
pop
sub
fstpl
mov
ud0
ss
cmp
loope
mov
nop
movsb
mov
popa
in
sbb
je
cmpb
test
test
imul
push
adc
xchg
adc
test
jo
mov
mov
inc
je
lcall
jle
imul
ss
xchg
popa
mov
std
add
and
pop
mov
dec
loope
jl
repnz
adc
adc
push
dec
clc
and
push
aas
cmp
mov
bound
in
push
xchg
add
cmp
and
daa
or
les
repz
sub
mov
andb
test
repz
sub
test
in
clc
stc
lods
sub
pop
xchg
mov
lret
inc
fidivl
clc
xor
sti
and
inc
adc
lods
cmp
cmpsl
clc
fcmovne
sub
jnp
das
hlt
pushf
insl
xchg
movsb
sbb
data16
and
stos
call
shrl
mov
sbb
adc
testl
fists
sbb
push
add
lret
ljmp
push
fisttpl
jmp
mov
mov
jg
adc
ljmp
aas
sub
aaa
cs
pushf
sti
inc
xlat
lods
adc
xchg
xchg
cmp
ss
imul
iret
mov
hlt
enter
shlb
loopne
in
lds
insb
ret
jae
repnz
dec
mov
mov
pop
pop
out
std
sub
sti
inc
adc
mov
xor
dec
pop
ja
fdivrl
add
repz
mov
pop
mov
shrb
out
push
pusha
push
insb
call
shrb
adc
rol
push
xchg
gs
cmp
xorl
sub
push
add
pop
inc
xchg
in
sub
stos
jmp
leave
test
push
mov
data16
insb
mov
getsec
cmpsl
mov
xor
sbb
int3
inc
cmpsl
cmp
outsb
jg
inc
iret
arpl
inc
bound
loope
push
xor
stos
loopne
mov
bound
std
xor
sbb
sub
cld
pop
imul
jne
jno
jmp
jns
popa
push
ljmp
push
out
cld
push
stos
mov
repz
leave
adc
dec
test
xchg
xor
xlat
push
int3
push
jmp
push
nop
cmpsl
out
push
add
out
add
nop
and
xchg
ret
in
fistps
aad
push
inc
lahf
repz
es
leave
outsb
arpl
daa
jo
rorl
mov
repz
mov
lahf
xchg
inc
test
xchg
in
lret
dec
outsb
jg
xchg
dec
mov
adc
call
sub
jo
push
loope
mov
popa
in
xor
mov
ret
mov
cmp
xor
pop
lods
adc
les
mov
aad
jg
and
lods
xchg
cmp
dec
dec
sbb
insl
or
cs
les
aaa
int3
inc
pop
push
mov
lock
in
mov
bound
sahf
jne
shlb
sub
jg
cltd
test
add
incb
mov
jge
mov
jno
lods
mov
outsb
loopne
ja
clc
jns
iret
xchg
sahf
iret
test
cmp
jp
sbb
add
xor
pop
adc
pop
mov
xor
lods
cmp
daa
ret
fdivs
xorl
pop
xor
jns
xlat
popa
cs
in
push
lret
push
ficomps
aas
jo
pop
inc
jnp
call
jno,pt
inc
xchg
loop
je
shlb
mov
inc
jge
lcall
pusha
pop
cmp
lea
faddp
mov
sahf
sarb
pop
in
outsl
and
int3
cmpsl
inc
mov
or
daa
pop
mov
jbe
pop
je
lock
push
mov
lods
cmp
out
ss
shrb
scas
in
cmpsb
xor
xchg
inc
sub
loop
push
xor
test
mov
dec
jns
jmp
enter
fnsave
xor
inc
push
xor
or
imulb
adc
pop
mov
bound
or
repnz
mov
xor
shrb
sub
ret
call
xchg
pop
cmp
cmpl
add
cmp
mov
dec
mov
sarb
xlat
push
addr16
pop
ret
scas
outsl
out
ret
rcrb
mov
xor
fs
xchg
popf
add
mov
dec
cld
popf
ret
cli
pop
lcall
push
icebp
sub
pop
lcall
daa
out
imul
dec
mov
mov
adc
pop
cmp
jecxz
mov
jge
ror
inc
fninit
lret
call
sbb
mov
mov
outsl
int
dec
movsb
cmp
aas
dec
pop
mov
outsl
lock
out
fs
lcall
stc
push
pop
scas
mov
cld
mov
mov
xchg
xor
std
inc
shr
ds
jo
dec
sbb
xor
pop
les
mov
add
cmp
mov
cmc
jne,pt
xchg
push
inc
cwtl
jae
xor
out
and
mov
jecxz
push
sub
adc
cli
jno
cmp
dec
out
cmp
adc
es
nop
push
das
add
jb
enter
jp
xchg
in
pop
add
popf
sub
lea
pop
mov
mov
xor
aaa
pop
lock
inc
lds
mov
push
lahf
stos
dec
add
xor
pop
add
jmp
adc
cs
xchg
faddl
pusha
jp
cmp
add
shlb
jle
adc
subl
hlt
mov
xlat
out
adc
push
pop
divb
in
lea
ret
in
inc
insb
addr16
adc
inc
arpl
dec
ja
les
je
lret
ret
out
pop
icebp
fidivs
test
cmp
pop
dec
push
inc
lock
sahf
mov
add
pop
cmc
mov
xchg
cld
sbb
loop
sbb
xchg
fdivl
push
mov
test
push
call
or
mov
fdiv
inc
xchg
cmpsl
jge
rolb
in
scas
insb
sub
jmp
adc
sahf
mov
es
jns
mov
out
sub
xchg
or
cmp
dec
sub
andb
andw
cmpsb
mov
push
jae
outsb
jne
mov
sti
push
dec
sti
dec
andb
in
adc
sbb
push
or
movsb
cltd
adc
push
ret
pop
popl
push
ja
dec
sub
adc
or
inc
and
xlat
dec
in
push
lahf
scas
test
orl
js
xor
mov
imul
imul
fdivrl
int
ljmp
lahf
lea
mov
sbb
pop
imul
lahf
aad
push
nop
dec
sahf
fsubs
call
iret
in
mov
dec
lock
and
fs
ret
xor
jno
loopne
cltd
loope
pop
imul
sub
xchg
aas
test
inc
fwait
jecxz
mov
cmp
cmp
xchg
cwtl
xor
test
mov
or
repz
test
sub
scas
jnp
and
push
iret
jge
mov
mov
pop
sub
sarl
daa
mov
mov
xchg
push
xor
push
cmp
incb
ret
cmc
mov
or
xchg
rclw
xchg
sub
shlb
push
jae
mov
ds
mov
ss
jmp
push
pop
xchg
lea
repz
xchg
push
jge
call
in
clc
xor
mov
lods
xor
jb
push
addb
jmp
sbb
sub
out
xor
jmp
rcrl
std
or
rol
jecxz
imul
push
leave
stos
popa
xor
test
inc
adc
jge
push
xor
mov
movsl
dec
sbb
mov
and
pop
mov
fiaddl
push
mov
inc
imul
xor
sbbb
shrb
das
movsb
out
mov
dec
ljmp
sub
mov
aam
push
pop
cli
out
or
inc
sub
subb
in
ss
lods
stos
aad
xchg
sbb
adc
out
mov
call
out
in
test
cmp
xor
xchg
dec
inc
repz
add
movsb
aam
call
sbb
pop
js
dec
test
push
dec
lcall
mov
fwait
loopne
out
shrl
idivb
pop
cmp
test
movsb
jg
test
sub
push
aad
adc
mov
mov
sbbb
dec
in
or
pop
add
push
xchg
addr16
xchg
add
bound
das
jns
xor
dec
mov
cs
fbstp
rcr
jge
cmpl
mov
push
mov
lds
xor
mov
leave
int3
adc
mov
scas
and
iret
sbb
xor
outsl
push
xchg
bound
rcrl
or
mov
xor
adc
out
movsl
sbb
shl
stos
dec
pop
pop
pop
lock
mov
daa
mov
jne
lcall
push
ss
clc
or
xchg
jnp
mov
sti
jb
adc
push
lret
add
dec
in
pop
fcmove
pop
inc
jb
das
outsb
push
jge
xchg
out
movsl
ljmp
push
sbb
rorb
pop
gs
out
lahf
push
or
xor
mov
das
lret
and
mov
call
add
sarb
and
test
popl
in
pop
cltd
lret
into
pop
xchg
pushf
jl
es
pop
imul
mov
cmp
imul
popa
xor
clc
pop
xor
sahf
hlt
push
mov
sbb
lods
mull
add
std
fsubs
inc
movsb
dec
xchg
pop
inc
sahf
jae
adcb
aaa
push
mov
mov
pop
add
rol
negl
fiaddl
outsb
adc
testl
scas
xor
into
push
mov
mov
add
imul
sarl
sti
divb
add
jmp
sbb
add
sbb
je
jae
push
daa
scas
repnz
mov
mov
lretw
and
repnz
xlat
sahf
sbb
and
dec
and
mov
cmp
sub
in
insb
and
insb
out
jmp
imul
xchg
aas
sub
fidivs
nop
or
mov
stos
mov
popa
test
mov
les
sahf
cmpsl
dec
inc
xor
mov
xorb
scas
mov
out
outsb
data16
insl
stos
dec
jp
push
adc
rolb
mov
inc
iret
mov
test
movsl
popf
jg
lahf
mov
jp
andl
xor
push
xorl
lahf
lock
mov
or
fmull
popa
xchg
lods
add
xor
mov
enter
pop
xchg
pop
je
push
sbb
mov
cmpsb
out
scas
push
mov
sub
gs
cmp
shr
mov
and
inc
add
or
imul
xorb
xlat
fsubs
rol
adc
jl
xchg
fsub
stos
aam
nop
ret
rorl
xchg
push
mov
cltd
sahf
jbe
mull
xlat
add
mov
std
mov
dec
adc
jbe
divl
or
es
lcall
ljmp
mov
or
sub
jo
icebp
lret
test
dec
stos
jle
cmp
and
cmp
aaa
rcll
dec
cld
dec
pop
xor
idivb
push
jnp
fistpl
jmp
je
aad
in
jecxz
out
inc
in
xchg
mov
inc
push
fadds
adc
enter
sbb
mov
mov
mov
rcrb
insl
ds
imul
dec
cli
in
outsb
imul
push
add
xchg
out
subl
fldt
add
out
jmp
pop
jl
and
lock
xor
xor
in
dec
mov
xchg
xor
adc
clc
pop
pop
jmp
inc
seta
lret
or
das
mov
mov
mov
add
popa
pop
fnstcw
stos
cmc
int
dec
push
rcll
cmp
filds
inc
jp
rcll
add
lds
or
jl
mov
jge
test
mov
stos
sahf
movl
popf
or
mov
push
sub
jno
mov
xchg
jmp
mov
cmp
xchg
pop
lcall
subl
lea
and
std
cmp
filds
test
cld
dec
cmp
push
arpl
mov
pop
pop
dec
jmp
test
outsb
icebp
mov
jnp
in
stos
movsb
and
stc
sub
sbb
jmp
mov
xchg
test
xlat
dec
mov
popf
fisubrl
pop
mov
hlt
test
push
aad
or
int3
mov
mov
fstpl
faddl
leave
loop
enter
xor
cmp
adc
sub
jle
pop
cmp
aas
fwait
sub
fwait
jecxz
insl
pop
sub
sbb
je
cmpsb
hlt
mov
ja
sbb
dec
adc
insb
sbb
mov
pop
shrl
xchg
mov
or
push
adc
ret
or
scas
testb
and
call
loop
clc
jb
mov
ja
addb
sbb
add
xor
xchg
xor
icebp
mov
aam
mov
and
dec
jno,pt
push
add
fldl
sar
and
into
test
enter
pop
sub
icebp
bound
je
sbb
ret
popa
out
cmp
add
sbb
es
cmpsb
or
pop
notl
push
shll
rorl
xchg
es
mov
or
outsl
aaa
add
cltd
in
gs
test
push
jb
pusha
sbb
or
and
mov
mov
adc
es
dec
or
pop
or
test
arpl
in
pusha
sbbl
dec
adc
adc
imul
gs
arpl
inc
call
pop
bound
or
adc
into
or
cmc
out
loope
ret
movsl
aas
pusha
and
aam
cli
js
cmp
lods
inc
adc
and
mov
xlat
aaa
aam
xor
mov
imul
lock
add
sbb
jo
push
cmp
jle
pop
subl
or
add
and
fnstcw
sub
pop
and
into
cmc
add
scas
jb
xchg
push
push
out
xchg
sub
xchg
xchg
inc
push
xor
neg
pop
cs
mov
lea
jecxz
clc
push
mov
dec
push
mov
lea
jle
faddl
jns
mov
pop
push
or
mov
jne
mov
add
push
clc
xorl
lcall
sub
sub
sahf
ret
jle
nop
mov
push
ss
sbb
jp
xchg
and
xorl
push
add
push
in
sub
dec
xor
dec
dec
imul
pusha
push
out
adc
xor
mov
cmp
and
jne
or
in
ss
xor
stos
mov
mov
pop
cmp
jo
xchg
cmp
popl
push
xchg
loopne
gs
outsl
push
ret
notb
xchg
jecxz
jmp
adc
cmc
aam
dec
cmc
pop
inc
and
ja
je
cmp
sbbl
rol
testl
clc
in
xchg
pop
push
mov
push
iret
sub
sub
xchg
lret
xor
cmpsl
data16
gs
leave
pop
ja
jmp
bound
orb
mov
inc
dec
mov
dec
test
mov
stc
jb
fdivr
lock
push
adc
pop
push
shll
adc
mov
inc
fcoms
xor
hlt
cltd
call
sub
add
out
aad
push
pop
mov
cmpsl
xor
leave
jmp
jno
and
adc
rcl
fidivrs
dec
cmp
adc
movups
add
lahf
mov
add
test
pop
data16
adc
mov
pop
sub
mov
scas
lcall
cmp
cmpsb
jge
ds
jmp
and
push
pause
pop
sub
aas
lea
fwait
shll
rep
sti
movsl
cli
popa
xchg
movsl
mov
aad
ljmp
das
dec
cltd
sub
add
mov
jns
push
push
cmpsb
xor
xor
sahf
jl
int3
sbbl
mov
push
xchg
out
dec
popf
mov
and
ljmp
or
fisubl
addb
inc
ljmp
pop
or
fnstsw
fcmovnb
shrb
mov
lods
notl
adc
push
mov
add
stos
lods
add
ret
je
insl
rdpmc
cmc
inc
mov
orl
jne
mov
pop
jo
sbb
adc
clc
cli
imul
xor
cmp
mov
lea
lods
sar
or
mov
cld
in
mov
adc
and
pop
adc
int3
or
sti
sarb
push
sti
sub
notb
or
sbb
jp
mov
and
push
mulb
lds
push
sub
cwtl
jbe
or
xchg
into
add
cmpsb
cli
xchg
or
mov
mov
ljmp
pop
push
stos
sahf
data16
push
icebp
movb
cli
pop
scas
and
adc
mov
jne
gs
daa
jno
les
in
xchg
lret
add
iret
or
das
pop
ss
cmc
and
jmp
pop
add
sbb
and
icebp
jecxz
adc
mov
push
daa
xor
xchg
jle
in
jne
push
mov
aad
sub
addb
mov
pop
pop
sar
lahf
pop
in
shll
and
jmp
out
push
sub
sbb
push
xor
mov
fidivs
or
in
xor
lods
insl
sbb
ret
xchg
xchg
xor
mov
iret
sub
pop
xor
mov
das
xchg
aad
mov
push
add
mov
push
jle
sub
xor
outsb
pusha
xor
repz
dec
movsl
cmpsb
inc
mov
ss
push
sbb
loopne
rorl
mov
jb
add
jmp
cmp
xor
pop
in
mov
stc
clc
mov
ret
inc
cs
fldln2
mov
pop
out
stos
lock
mov
shlb
sbb
ret
mov
pop
cltd
movsl
int
push
or
mov
pop
fnstsw
in
insb
fcoml
shll
jmp
movsb
push
pop
or
inc
test
xchg
dec
dec
push
adcb
imul
in
or
movl
or
clc
pop
push
mov
adc
sub
xchg
jp
insl
jg
dec
iret
sti
cmc
in
cmc
mov
and
jp
repnz
out
test
out
fbstp
cmc
and
mov
push
in
iret
mov
or
pop
in
and
dec
aam
push
in
sub
lock
mov
sbb
adc
aaa
fnsave
scas
jmp
sbb
outsl
cmp
fwait
jae
and
sahf
push
jb
jl
xchg
mov
xorb
out
cmp
std
insb
loopne
push
ret
adc
cmp
js
mov
sub
xchg
push
push
in
orl
sarl
mov
or
dec
sbb
adc
xor
sub
and
andl
cmp
mov
mov
int3
aas
xor
jl
xor
es
xorl
xchg
cmp
inc
xor
mov
sbb
outsl
sub
and
jp
das
pop
push
mov
jo
mov
or
jmp
xchg
or
add
stos
adc
imul
mov
jne
xor
jns
cmp
stos
sahf
rcll
pusha
divb
rorl
push
fistpll
ror
cltd
sbb
mov
test
stos
lock
dec
mov
sub
jmp
adc
movsb
jb
test
mov
dec
popf
data16
icebp
scas
idivl
jb
mov
jmp
xchg
push
inc
xor
mov
inc
movsl
scas
in
enter
lret
sub
lcall
inc
mov
mov
sub
jns
xor
adc
fxtract
cmpsb
ds
mov
push
sub
dec
je
cwtl
pushf
cmp
dec
mov
dec
mov
adc
fnstcw
pusha
stos
repnz
fsts
cmp
cld
jnp
dec
mov
cmpl
inc
jae
popa
mov
jle
jnp
subl
in
les
sub
sbb
lods
add
sbb
fsubl
imul
mov
aad
insl
jae
sub
mov
xchg
ret
out
test
scas
sbb
mov
arpl
lret
and
mov
xlat
xchg
ja
push
jbe
arpl
push
out
test
lcall
push
mov
cwtl
ljmp
stos
test
adc
cmp
mov
cs
push
lock
and
rcll
sub
ror
and
xchg
sbb
popa
jae
mov
arpl
mov
dec
cmp
push
pop
bound
cld
push
fisubrl
cmpb
andnps
xchg
sub
mov
cli
push
push
imul
pop
enter
mov
xchg
clc
icebp
js
gs
sub
sbb
cmc
outsl
or
xor
inc
cmp
mov
inc
xor
in
shrb
xlat
xor
mov
ljmp
sbb
mov
add
stos
mov
jp
nop
filds
dec
pop
inc
repnz
neg
xchg
mov
fs
jo
nop
adc
aam
fstps
es
xchg
pop
dec
add
andl
cmp
inc
inc
movsb
push
adc
std
push
xchg
ss
mov
call
fs
outsl
push
push
pushf
jecxz
in
in
and
jmp
ret
fistl
add
test
jno
loope
xchg
pop
xchg
jmp
pop
enter
pop
aam
hlt
add
sub
mov
xchg
push
cld
cmp
push
cmpl
popa
inc
adc
and
push
dec
and
mov
lods
jno
cmp
dec
test
fnstsw
ljmp
sbb
adc
dec
sbb
lcall
jbe
lods
push
cmc
mov
paddsw
mov
sbb
sub
xlat
fistl
sbb
or
mov
in
arpl
xor
bound
insb
inc
je
scas
push
ficomps
gs
std
int
gs
sub
sbb
addl
adc
scas
dec
adc
mov
mov
xchg
insb
adc
cmp
pop
jmp
hlt
aad
mov
and
in
inc
inc
lods
cld
xor
cmpb
jl
in
jg
leave
pop
mov
sahf
cmp
gs
jno
dec
aad
iret
lret
loope
das
dec
imul
add
bnd
dec
scas
imul
xchg
or
mov
int
xor
int
jnp
jbe
test
sub
inc
inc
jo
push
push
or
mov
jb
xor
test
pusha
mov
pop
pop
in
js
inc
push
fsubp
mov
sti
and
bound
mov
inc
dec
fs
dec
pop
test
jns
push
or
mov
xor
ljmp
cwtl
mov
jnp
imul
and
movb
fs
mov
cmc
jo
fwait
xchg
sub
fs
sbb
int3
xchg
hlt
mov
mov
jmp
xchg
rorl
cltd
insl
pop
xchg
test
scas
hlt
pop
stc
mov
sbb
mov
lods
test
mov
ljmp
scas
jl
mov
push
movsl
push
xchg
loope
add
aad
xor
xchg
dec
sbb
xor
jle
add
push
test
jo
scas
inc
shlb
sbb
sub
ljmp
cwtl
test
leave
iret
xchg
pop
es
dec
dec
adc
xchg
add
subl
dec
es
xor
stos
call
adc
sbb
pop
int
mov
call
out
popa
cs
aas
adcb
pop
or
sbb
jno
xorl
jle
dec
je
dec
aad
pop
mov
jle
call
movsb
or
adc
xchg
pop
mov
push
push
out
pop
dec
xchg
fiaddl
xchg
xor
call
or
dec
ret
jb
lods
addr16
xchg
imul
repz
lock
fwait
push
jmp
push
sbb
xor
mov
iret
mov
push
lret
xor
pop
aaa
mov
pop
inc
dec
andps
dec
out
iret
sbbl
rcl
shlb
sub
lahf
dec
sbbb
mov
mov
mov
xor
loop
sub
mov
mov
mov
scas
rcl
inc
xor
and
and
jbe
inc
mov
push
mov
in
fwait
cmc
mov
gs
jno
xchg
addr16
inc
jmp
pusha
and
in
cwtl
cmove
lahf
sub
xchg
imul
out
xchg
adc
addb
jmp
shll
lahf
icebp
add
test
call
or
mov
out
in
add
lret
sbb
popa
or
jecxz
shrl
xlat
ds
or
clc
push
data16
stos
mov
dec
or
jae
sub
mov
in
mov
popf
inc
sbb
adc
sbb
sti
lods
mov
fs
or
mov
pushf
loopne
add
mov
mov
adc
xchg
dec
ds
push
add
cmp
mov
jne
and
push
repnz
sub
xor
push
push
lahf
cwtl
vpaddsb
push
iret
xchg
faddp
cmp
mov
jbe
push
cmpl
test
nop
fiadds
cltd
xorb
jae
ret
mov
addb
ljmp
pop
adc
int
push
mov
mov
repnz
sub
mov
sbb
enter
imul
push
in
lods
ss
out
xchg
fs
adc
lds
push
or
push
cmp
mov
movsb
aaa
mov
mov
ret
push
jg
and
mov
mov
pusha
hlt
and
xchg
hlt
pop
lret
imul
and
adc
sbb
sbb
test
push
or
xor
inc
and
and
mov
pop
pop
movsb
pop
xor
imul
dec
shll
pop
bound
mov
mov
push
jg
mov
insb
sub
mov
and
lea
bound
or
movsl
push
or
daa
stc
stos
out
test
loopne
pop
int
fisttps
sahf
add
jno
push
fcoml
shrl
cmp
cltd
adc
cmp
dec
push
call
push
lcall
push
out
adc
cmpsb
mov
jecxz
xor
dec
jmp
repnz
imul
jbe
push
dec
repz
push
cld
test
pusha
jl
pushf
popf
mov
call
cltd
and
sub
test
in
or
xor
dec
popa
fdivs
addl
sbbb
and
shlb
jmp
enter
popf
add
fcoml
dec
sti
push
sarb
sbb
push
imul
ret
add
push
jl
fsts
jns
sbb
lret
cmpsb
lods
push
mov
dec
popa
mov
xchg
enter
xchg
or
insb
aad
xor
in
jbe
add
or
cmp
sbb
scas
mov
repz
xor
rcrb
arpl
in
adc
das
popa
cmpsl
push
icebp
cmp
mov
pusha
lea
sub
hlt
clc
jns
stos
iret
and
ret
mov
out
inc
in
mov
mov
dec
int
rclb
lcall
jnp
sbb
cs
cltd
push
pop
pop
sbb
mov
cmp
aas
xor
repnz
and
hlt
mov
xchg
fidivl
inc
test
lret
mov
adc
cmc
sub
push
outsl
cmpsb
add
mov
add
pop
jl
enter
sbb
mov
adc
mov
push
xor
or
jg
test
ds
jnp
lcall
into
push
jbe
fsubs
mov
icebp
cmp
xor
sub
arpl
orb
enter
jns
and
adc
or
xlat
int3
mov
in
pop
pop
cmc
adc
xlat
dec
das
mov
push
cmp
call
dec
fisttps
cmc
test
jb
adcb
mov
das
xchg
int3
add
inc
je
mov
sti
rolb
daa
lahf
sub
rorb
push
mov
jns
jno
jge
and
imull
push
mov
leave
les
mov
leave
std
fisubl
or
jg
mov
lcall
arpl
aam
adc
insl
cmp
inc
sub
xchg
xor
jnp
cli
sub
mov
gs
push
xor
xor
test
jbe
gs
out
mov
psubsw
mov
call
test
fldl
stc
mov
fcompl
es
rcrl
dec
pop
test
outsl
les
xchg
imul
rorb
je
xor
adc
test
nop
imul
cmpsl
xchg
jle
test
push
push
add
push
push
add
andl
jnp
sbb
int3
imul
lods
mov
push
out
mov
dec
mov
and
cmpsl
mov
adc
test
das
dec
icebp
cmpl
lods
fxch
jl
sbb
and
cmp
test
inc
jg
jbe
lods
lret
test
fdivr
ljmp
adc
imul
out
cs
jle
je
add
in
mov
xor
mov
fs
xor
cmpsb
mov
jge,pt
and
popf
sbb
adc
mov
in
xor
pop
fxch
sub
mull
sbb
jne
jp
dec
test
imul
pop
sbb
fadd
decb
cmpsl
jp
sbb
lret
and
lds
or
jo
sti
iret
test
std
mov
mov
shr
push
or
imul
das
std
dec
jo
xchg
and
or
outsb
cmp
sub
les
or
fsubrs
or
decb
lcall
sub
dec
hlt
incb
ret
or
adcl
inc
js
and
fmul
and
rol
jnp
xchg
jg
sub
roll
xchg
or
ret
inc
insb
pop
pop
push
ds
add
cmpsb
mov
stos
fbstp
dec
mov
adc
or
cmp
dec
mov
mov
cmp
js
mov
dec
popa
xchg
mov
jbe
loope
and
mov
mov
jnp
mov
push
cli
xchg
cs
push
insb
xchg
xor
jns
mov
aam
cmp
lea
leave
sub
mov
ds
xchg
sub
push
stos
stos
das
and
loope
mov
mov
icebp
jle
daa
cld
dec
mov
xchg
sbb
xor
inc
mov
clc
lea
pop
stos
gs
xchg
loope
jbe
push
dec
cmpsl
popf
mov
mov
out
scas
pop
stos
test
adc
cld
push
iret
enter
into
sti
jecxz
jae
cld
jge
sahf
add
push
fldenv
adc
inc
cmp
or
cmc
xor
sti
fucomp
sub
rclb
clc
add
jns
scas
push
inc
inc
loope
jmp
fdivrl
in
cmp
mov
popf
sbb
bound
daa
jge
lds
xor
jp
pop
lahf
shrb
rcrl
dec
xchg
xlat
in
jp
fxch
and
pushf
jle
fwait
mov
cmp
mov
fsubl
dec
cmp
mov
out
and
xchg
push
xchg
pop
lea
das
mov
mov
mov
mov
mov
ret
xor
add
sbb
pop
roll
out
pop
out
cmp
dec
cs
mov
mov
das
inc
fxtract
pop
or
add
mov
js
mov
sub
insl
push
iret
mov
popa
push
faddp
cmp
cmp
imul
mov
stos
sbb
inc
sub
mov
pusha
hlt
stc
iret
in
cmp
ljmp
mov
rclb
sti
add
lret
inc
or
sub
lcall
jle
outsl
mov
sub
lea
xor
rorb
cmp
sti
pop
fldcw
xor
out
push
inc
xchg
push
std
and
dec
pop
sarl
sub
push
mov
pop
into
repz
movsl
and
adc
add
mov
stos
call
imul
adc
adc
sub
cld
jmp
lock
jnp
or
std
lds
inc
movsl
aam
adc
repz
jp
fnstcw
sub
add
mov
and
in
cmp
or
sub
ja
leave
jb
cltd
mov
jmp
add
mov
xchg
out
addr16
das
push
test
or
repz
or
cmp
repz
dec
aaa
fistpll
lret
bnd
mov
mov
xor
lret
pop
mov
hlt
pop
mov
push
leave
cmp
jle
in
cs
cmp
adc
cwtl
lea
mov
jg
sub
mov
add
bound
adc
mov
inc
lock
mov
and
push
jp
popa
jmp
insl
xor
test
jno
push
adc
jg
jecxz
repnz
hlt
sahf
pop
mov
push
pop
pop
inc
insb
pop
cmp
movsb
and
sbb
inc
dec
mov
fwait
out
jo
repnz
mov
out
push
loopne
dec
rol
inc
imulb
or
push
xchg
ljmp
mov
ja
jno
aam
cmp
pusha
in
popf
push
pusha
jmp
inc
mov
mov
aaa
enter
lret
test
sbb
sarb
push
adc
insl
mov
icebp
push
repz
adc
stos
ljmp
dec
or
push
insb
cld
insb
sub
cld
jle
call
jl
sbb
mov
pop
inc
sub
test
repz
hlt
je
das
leave
js
push
push
roll
push
cmp
sub
les
fcomps
negl
inc
arpl
aas
int
xchg
cli
mov
out
push
adc
and
jge
arpl
or
dec
adc
test
mov
xor
sub
nop
pop
mov
push
movsb
and
or
and
lcall
sub
popa
mov
push
xchg
mov
and
js
mov
repz
sahf
idivb
loope
clc
sti
push
adc
xor
push
fs
bound
adcl
ds
pushf
sbb
sbb
cmp
sbb
int3
icebp
cmc
fs
icebp
in
sub
push
xor
sub
mov
es
dec
call
or
xchg
lcall
repz
xor
iret
mov
inc
loopne
in
adc
push
sub
faddl
mov
rcr
sahf
insl
sbb
lea
ret
or
xor
xor
sub
xchg
pop
std
adc
mov
lcall
mov
out
into
xor
adc
push
mov
iret
mov
ss
fs
or
rcrb
or
push
mov
xchg
shll
dec
int3
and
or
jmp
out
hlt
nop
add
arpl
mov
fs
adc
adc
and
out
xchg
pop
cmovae
into
lods
cltd
into
pushf
xlat
loope
in
call
push
xor
jmp
popa
xchg
pop
add
cmpsl
inc
push
cmp
fucomip
lcall
or
popl
push
sti
mov
pop
loope
popa
add
xlat
ret
jbe
outsb
les
scas
mov
fstpl
cmp
jecxz
popa
aad
adcb
add
mov
or
out
fdivs
pop
out
sub
xchg
push
dec
sahf
sbb
lock
out
loop
sub
popa
push
jae
fcmovne
dec
js
cltd
dec
shrl
and
sbb
sbb
dec
xor
push
cmp
fistps
jg
push
xchg
pop
inc
testb
leave
push
jb
cmp
frstor
cmp
sbb
dec
in
fdivrs
jmp
test
sub
inc
and
ja
je
and
hlt
gs
pusha
cltd
seta
mov
pushl
mov
out
mov
cld
push
sub
pop
mov
xor
inc
bound
sub
xchg
out
and
inc
and
int3
fisttps
mov
mov
xor
mov
xchg
jecxz
add
xchg
dec
pop
xchg
out
fnstenvs
push
dec
dec
inc
push
push
and
les
sbb
sub
adc
mov
sbb
es
push
imull
sbb
lea
jno
jmp
add
dec
xchg
push
pusha
push
push
fwait
aad
rolb
pop
xchg
push
lret
fnsave
inc
mov
enter
sbb
int3
imul
out
pusha
add
mov
rcrl
shr
fstpl
int
clc
sub
sub
fidivrl
roll
cmp
dec
xchg
mov
or
jbe
jbe
arpl
xchg
jp
mov
jnp
leave
pusha
push
jns
repz
fistps
test
outsb
cltd
and
dec
adc
or
mov
xor
or
adc
dec
stos
scas
push
cmp
inc
push
loop
test
mov
fbstp
stc
lret
inc
push
es
mov
cmpsl
push
cld
js,pn
push
push
lods
pop
or
rclb
leave
movsl
inc
jl
sub
xor
add
mov
jmp
popa
cld
fcoml
jns
movsb
xchg
dec
dec
xchg
and
jg
stos
nop
arpl
sbb
pushl
push
jecxz
andl
stos
arpl
fcompl
aad
mov
daa
cwtl
test
jge
je
cmp
dec
sbb
divl
xchg
mov
cwtl
decb
out
mov
mov
pop
jp
add
mov
adc
xor
sub
mov
mov
xor
cltd
out
jbe
xchg
aaa
sbb
lock
pop
repz
jg
and
aad
sbbl
pop
je
bound
lods
lods
fwait
xor
jae
xchg
adc
inc
add
out
fstpl
fldcw
test
mov
pop
mov
lret
call
cwtl
es
xor
negl
xchg
push
je
xchg
sar
loopne
int
dec
insl
pop
ffree
iret
jmp
aam
xchg
outsb
push
mov
jecxz
mov
aam
rorl
inc
push
and
push
sub
outsb
inc
lret
xchg
cmp
mov
dec
nop
cmpb
ss
lret
cmc
adc
jle
jbe
dec
call
jle
leave
push
jle
sub
jns
mov
orl
lods
fisubl
subb
xchg
shrb
movsb
xchg
cmc
jb
cmc
mov
mov
mov
sub
xchg
dec
bound
sub
push
cli
andl
imul
outsl
fwait
int3
mov
imul
cmp
roll
mov
mov
adc
mov
stos
sub
jg
mov
pop
sbb
sub
add
jns
sbb
sub
inc
inc
stos
or
mov
and
adc
cs
dec
sbb
jle
ret
or
inc
mov
push
stos
push
ljmp
dec
fiadds
mov
mov
clc
ljmp
js
mov
pop
mov
test
imul
and
cmp
cs
les
jbe
dec
mov
rcrl
shr
pop
jl
inc
dec
mov
jbe
in
data16
enter
adc
in
push
outsb
aam
add
cmp
idivb
cld
xor
xchg
rol
inc
cmp
xchg
mov
adc
shlb
loope
outsb
adc
dec
cmp
jno
add
push
sbb
push
out
mov
fucomp
scas
push
xor
add
call
sbb
fisttpl
inc
loope
rcrb
fwait
loopne
jb
mov
xchg
and
cld
push
mov
pop
mov
dec
dec
ljmp
mov
xorl
pop
and
iret
adc
ret
roll
mov
fwait
scas
cmpsl
mov
mov
mov
imul
add
stos
mov
fwait
inc
ss
mov
add
dec
aad
int
jo
mov
pop
add
mov
lret
pusha
fistpl
push
jecxz
insb
fidivs
lahf
cmp
mov
and
and
jne
fstpt
pop
xchg
stos
sar
xchg
xor
lahf
pop
or
sti
in
push
popf
roll
and
lcall
pop
ret
frstor
scas
cmpsl
aam
pop
sbb
jne
out
adc
mov
enter
jge
leave
sbb
xchg
mov
mov
inc
xor
pop
lods
sarl
xchg
lds
add
and
push
or
pop
xor
lods
or
lret
aas
pop
inc
add
push
fnstsw
jae
xor
push
out
jge
cmp
test
mov
outsb
dec
cli
inc
jle
pop
lret
pop
iret
mov
add
cmp
shr
outsl
dec
mov
sub
jecxz
sti
aam
into
adc
sbb
cmp
mov
stc
data16
test
xchg
iret
push
adc
stos
adc
test
ljmp
adc
adc
les
loope
adc
dec
mov
xor
bound
sbb
fs
data16
ret
jne
icebp
inc
stos
and
fisubl
jmp
cmpsl
iret
and
push
ds
sbb
inc
mov
jnp
lods
mov
dec
lahf
mov
in
jns
cmpsl
daa
add
xorb
xchg
arpl
sub
mov
jo
inc
pop
dec
lds
movsl
cmpl
cmp
ds
sti
and
rcpps
inc
ss
push
jmp
mov
sub
push
cmp
loopne
adc
into
xchg
insb
and
test
cmpsb
int3
int
add
insb
in
pop
xor
mov
cmp
addb
pop
lcall
out
ror
into
jecxz
xor
xchg
int
call
shl
fcomi
insl
cs
imul
inc
and
fildll
andl
test
out
push
sub
sub
addr16
mov
out
mov
test
cmp
sub
mov
dec
cli
movsl
jge
leave
or
pop
mov
adc
push
fisubl
fidivl
pop
mov
or
mov
jmp
outsb
shl
mov
add
xlat
mov
dec
daa
sbbl
jle
cmp
aam
js
icebp
push
mov
dec
popa
mov
pop
fnstcw
mov
das
loope
mov
mov
mov
add
fwait
and
sbb
gs
andb
sbb
mov
fst
mov
hlt
movsb
sub
or
daa
sahf
out
repnz
inc
in
mov
int3
mov
mov
jl
cmp
add
test
cmp
inc
mov
cwtl
outsb
aaa
inc
or
dec
mov
mov
rcr
aad
push
xchg
out
and
movsb
and
mov
mov
stos
push
out
loop
fs
outsb
mov
xor
repnz
stc
pop
mov
xchg
sbb
gs
lds
xor
cmc
aad
iret
cmp
dec
leave
int
bound
lcall
xor
jecxz
adc
leave
or
lods
stos
mov
fsubl
pop
xchg
mov
sub
mov
jno,pt
and
sbb
sbb
mov
scas
cmc
loopne
mov
push
sbb
adc
mulb
sub
stc
push
rcll
test
enter
xor
mov
mov
mov
inc
dec
xor
sbb
adc
jge
jl
repnz
mov
lcall
mov
lods
jne
inc
bound
jmp
cwtl
sub
pop
jbe
mov
pop
sub
sbb
inc
lahf
in
mov
add
arpl
xchg
sbb
lods
and
mov
xchg
or
insb
mov
leave
jecxz
jl
cmp
sub
xor
decl
cmp
inc
das
push
adc
xor
popf
loope
and
jns
cmc
sub
lea
loope
mov
lcall
pop
add
fnstenv
and
lahf
or
es
sbb
ficoml
sbb
idivb
repz
stos
add
insl
pop
xor
pop
dec
push
rclb
test
mov
loopne
and
test
push
cmpsl
mov
mov
lcall
int3
push
ja
fsubrp
or
jae
sub
jmp
jb
inc
cmp
inc
fildl
dec
inc
mov
bound
imul
and
aad
divl
jl
sub
ret
pushf
xor
inc
in
scas
call
icebp
lcall
jns
xchg
sub
jns
pop
mov
fucomp
pushf
rorl
push
jge
cmp
lret
lock
scas
insl
cltd
ret
cmp
orb
leave
add
popf
divl
out
das
sahf
push
or
movsl
sbb
and
mov
jg
lock
stc
sub
sub
add
movsb
faddl
pusha
xchg
mov
xchg
pop
adc
adc
mov
inc
push
mov
cs
jne
or
push
inc
cltd
or
dec
ficoml
pusha
jno
push
push
ret
pop
loopne
and
mov
mov
into
mov
pop
mov
dec
nop
pop
jno
or
mov
inc
jo
ds
loopne
rcr
das
rorl
dec
jge
inc
jbe
dec
adc
cmp
mov
jl
shrl
xchg
aad
iret
movsb
cs
mov
dec
pop
ret
cmp
xchg
push
or
aaa
jb
push
scas
push
jne
sar
cs
popa
pandn
fucom
and
adc
pop
into
dec
dec
cltd
cs
pusha
inc
xor
mov
ja
push
cmp
adc
std
mov
xchg
sbb
or
pop
pop
mov
inc
mov
adc
push
sub
pop
out
pop
push
js
inc
or
insb
sbb
cmpsb
ja
ja
xchg
mov
popf
int3
dec
jbe
lea
movsl
and
pop
aam
dec
jecxz
repz
frstor
std
ret
pop
push
enter
fdivp
pop
into
pop
mov
popfw
push
movsb
sbb
lds
jae
lods
push
push
jns
dec
push
fistpl
aam
mov
adc
into
mov
popf
lods
mov
xchg
mov
test
pop
push
mov
xor
test
subb
push
int3
in
call
stos
cs
arpl
xor
les
mov
pop
adc
and
lock
add
sahf
add
cmpsb
sub
daa
pusha
movsb
jne
test
mov
outsl
addr16
sti
je
scas
mov
addr16
mov
mov
sub
or
cli
cmp
ljmp
cmp
ss
adc
dec
js
loopne
fbld
outsl
add
pop
sub
and
test
in
pop
jnp
std
xchg
in
imul
adc
fiaddl
pop
mov
mov
mov
xor
and
add
arpl
sub
jae
icebp
push
xchg
push
aam
in
call
xchg
xorb
out
dec
xor
lret
jge
push
mov
sub
aad
leave
sbb
mov
pop
cld
xchg
dec
stos
xor
mov
enter
or
repz
sar
push
inc
mov
sub
out
sarl
pop
rcll
fdivrs
movl
xor
cmp
dec
movsl
clc
pusha
mov
repz
fcmovnb
loopne
push
mov
hlt
xchg
bnd
mov
fdivp
shll
sbb
orl
xor
adcl
out
test
roll
push
mov
xchg
dec
xchg
inc
adc
testl
pop
and
loopne
fcoms
pop
sbb
stos
cltd
lods
mov
mov
andb
adc
lock
and
mov
sub
xor
cmp
adc
push
fbstp
fstl
mov
lods
xor
jp
adc
pop
or
sbb
mov
mov
and
lock
pop
in
clc
add
pop
daa
inc
inc
adc
rorb
pushf
stos
ret
push
and
sub
add
ljmp
lahf
inc
out
imul
or
mov
or
jbe
jno
repnz
mov
lcall
mov
adc
mov
push
mov
loopne
int3
aam
pop
xchg
lret
sbb
xchg
shl
mov
mov
in
lods
xchg
imul
inc
push
mov
imulb
jo
sbbb
ds
shrl
mov
aam
add
or
movl
into
popf
push
lock
test
mov
or
mov
pushl
mov
mov
pop
jne
xchg
xchg
pop
or
fdivrp
in
and
loope
ss
inc
and
mov
sub
ljmp
and
fs
push
inc
sbb
push
cs
loopne
sub
pop
test
push
test
mov
outsb
into
xchg
out
movsl
xor
enter
cmpsb
or
or
cmc
popa
dec
movsl
push
jno
sahf
call
into
leave
pop
clc
pop
jg
mov
inc
xor
and
arpl
out
push
mov
inc
xchg
mov
adc
push
cmp
shll
sub
scas
mov
dec
sbb
fsubs
or
fsubp
sub
and
jecxz
imul
xor
adcl
dec
or
mov
sar
mov
jno
adc
jb
filds
into
incb
sbb
push
scas
jnp
jle
mov
pushf
arpl
sub
sub
mov
sbb
cvtpi2ps
jae
les
fnsave
in
daa
push
out
push
pop
xor
loop
push
adc
div
inc
push
stos
int3
bound
es
inc
inc
or
lea
ss
mov
pop
popa
ja
xor
jbe
mov
jmp
stc
movsl
xchg
add
movsb
adc
lcall
je
int3
ljmp
lret
jbe
sbb
repz
repz
and
test
ja
scas
xchg
push
adc
loop
dec
js
jae
jecxz
sbb
shlb
inc
pop
jne
mov
jmp
xlat
cwtl
outsl
or
pushf
mov
in
notb
addr16
add
mov
mov
int3
sti
add
mov
fwait
dec
adc
mov
mov
xchg
add
iret
cmp
pop
jnp
add
call
mov
sbb
shl
popf
xor
test
div
sbb
hlt
roll
xchg
leave
or
movsb
cmp
mov
mov
jle
pop
adc
insl
test
or
getsec
inc
je
insl
add
inc
cmpsl
xlat
ret
test
push
push
jl
xchg
push
addl
mov
xor
push
add
sub
into
movsl
movq
pop
nop
jl
clc
loopne
addr16
loope
jge
and
mov
dec
push
lods
xchg
jne
hlt
aaa
xlat
push
inc
sub
iret
dec
out
xor
out
inc
inc
loop
cmp
cmpsb
sub
and
loopne
push
out
add
decl
cmp
mov
adc
std
push
xchg
fmuls
loopne
jb
sbb
jnp
popa
loope
pop
cmpsl
inc
aad
or
add
fimuls
jmp
mov
lret
ret
xor
or
dec
mov
sti
xchg
lahf
inc
ret
push
mov
add
cmpl
or
ljmp
cmp
jo
repnz
push
jnp
pop
mov
inc
in
jg
dec
outsb
out
jb
jns
and
es
stos
jp
sarl
add
and
rolb
insl
out
mov
mov
sbb
data16
jge
jg
pop
add
ret
xor
push
mov
lods
add
jb
subl
les
mov
outsb
push
test
dec
push
cmp
sbb
fsubrl
or
gs
dec
mov
mov
lds
xor
out
test
out
hlt
clc
jmp
mov
dec
stos
insl
cmp
dec
js
cmp
mov
nop
cld
imul
repnz
fisttpll
int
dec
dec
mov
popf
push
mulb
sbb
and
mov
xchg
cmp
mov
add
pop
push
mov
out
iret
jne
sub
cld
lds
xchg
stc
je
in
or
or
shlb
ret
lahf
add
mov
push
cmp
hlt
js
mov
fwait
push
fs
dec
icebp
sarl
fisubs
aaa
in
or
jae
cs
xchg
mov
pop
sub
in
push
bound
dec
sub
push
and
adc
notb
in
notb
or
sbb
icebp
xchg
mov
repz
jle
nop
mov
aaa
mov
cmp
and
call
iret
xor
dec
ss
das
push
sub
or
daa
lds
push
imul
ds
sbb
mov
out
jge
dec
leave
popf
loop
cmpsb
push
cmp
stc
std
fsubrs
cmp
ss
lea
mov
sub
orl
testl
xlat
pop
xor
or
outsl
pusha
dec
enter
xchg
cli
pop
mov
add
sub
arpl
sub
lea
push
mov
jg
scas
xchg
push
and
test
outsb
inc
ror
and
mov
ret
add
and
insb
xor
jmp
dec
enter
jns
cld
jecxz
out
hlt
fnstcw
mov
fidivrl
out
cmc
cs
sti
nopl
test
inc
test
sahf
and
test
ljmp
xor
sub
and
in
stos
mov
push
gs
ds
test
xchg
std
mov
arpl
lahf
aam
xor
mov
cmpsl
adc
fldenv
xchg
lret
sbb
ljmp
icebp
int3
lret
out
fnstenv
inc
cmp
jns
xor
adc
push
push
and
add
lea
call
loop
loope
add
mov
sub
jo
sar
sbb
push
xor
cmp
dec
fnstcw
jbe
mov
lods
cmp
addr16
decl
scas
mov
inc
and
pop
rorb
outsl
inc
nop
jb
mov
mov
jecxz
push
mov
add
stos
jg
mov
call
loope
xor
lods
call
mov
sub
sub
jecxz
mov
jge
loop
dec
fwait
bound
cltd
lcall
or
test
push
insl
xchg
es
aad
movsl
call
cmpsl
adc
cmp
sub
outsl
ja
sbb
mov
mov
loope
cli
inc
jb
jb
ss
xchg
inc
mul
nop
pop
inc
stos
repz
into
ljmp
out
fcomps
cmp
outsl
leave
jno
push
pop
rorl
aas
mov
cmp
iret
push
cwtl
dec
mov
xor
ja,pt
push
dec
sbb
or
dec
or
movsl
sub
in
loopne
sbb
arpl
pop
cmp
pop
lods
popa
scas
jb
dec
mov
ret
xor
cmp
fisttps
sti
imul
iret
xchg
or
add
pop
push
js
mov
or
sahf
in
dec
fsub
cmp
push
lods
inc
insb
andb
sbb
dec
nop
or
inc
into
jg
jb
and
xchg
gs
test
test
jae
xchg
lret
mov
cmpsl
and
jg
xor
jecxz
ja
arpl
push
loope
xchg
insl
mov
jne
xchg
push
jl
pop
roll
je
inc
xchg
xchg
pop
outsb
shrl
push
leave
add
pop
not
dec
xchg
pop
pop
xchg
shrd
mulps
fs
xchg
fld
jo
add
mov
repz
xchg
sbb
and
xchg
cld
jb
sbb
pushf
xchg
stos
pop
dec
sbb
jg
push
dec
mov
mov
icebp
push
dec
in
icebp
add
inc
inc
adc
fwait
and
out
insl
pop
pop
ljmp
pop
add
shl
jns
lret
pop
std
aas
mov
mov
add
mov
xchg
jnp
add
jns
pop
hlt
xor
or
jp,pt
inc
ljmp
in
pop
pop
and
sub
or
jno
or
dec
shrl
mov
xchg
inc
aad
fsubl
push
pop
in
fcmovnbe
and
xchg
loope
push
push
lds
adc
dec
adc
push
inc
mov
shrb
fs
cli
ret
in
call
clc
inc
adc
arpl
loopne
jo
dec
stos
mov
mov
addr16
adc
pop
sahf
sarb
in
cld
jge
dec
sbb
adc
insb
xor
or
xor
add
push
out
das
aaa
jmp
test
in
fistpll
std
stc
xor
or
sbb
leave
cli
lock
std
jp
loopne
sbb
jmp
in
imul
stos
fldt
sarl
out
movsb
outsb
cwtl
inc
std
dec
or
ret
mov
prefetchw
or
or
out
insb
push
xor
es
scas
inc
cs
add
in
jae
in
loope
cmp
adc
cmp
enter
fildll
loop
mov
sub
push
jge
jmp
aaa
popf
ret
or
addr16
hlt
cmp
mov
pop
mov
and
lock
or
call
jbe
jp
mov
ljmp
ss
push
aaa
xchg
rcrb
out
cwtl
imul
loope
popa
outsb
inc
mov
and
incl
cmp
cli
or
and
pusha
jle
mov
fcompp
std
pop
repz
and
cld
jp
stos
aad
jb
and
xor
inc
repnz
xchg
ja
mov
dec
fisubrl
mov
das
jbe
inc
pushl
ds
pop
or
addr16
mov
mov
sub
mov
in
push
jp
xchg
jmp
push
ss
mov
aad
test
adc
mov
mov
out
dec
inc
mov
mov
subl
xchg
movsl
out
lea
call
adc
adc
bound
xchg
je
or
out
imul
lahf
mov
nop
xor
incl
loopne
mov
jbe
sub
aam
dec
mov
inc
xchg
hlt
add
adc
std
idiv
mov
add
stc
jno
jne
arpl
sbb
mulb
lcall
and
and
outsl
xchg
in
xchg
idivb
mov
fnstcw
adc
imulb
clc
scas
ljmp
test
hlt
dec
push
stc
cmp
sbbl
cmpsb
das
sub
aad
inc
push
xor
icebp
jb
sub
push
cmp
cmp
call
jmp
repz
daa
adc
xchg
dec
cli
shl
cltd
sub
fsqrt
mov
or
mov
jae
aad
jge
pop
dec
cmp
sub
mov
and
inc
mov
jmp
pop
pop
imul
mov
mov
cmc
std
inc
or
dec
in
inc
je
add
negb
jae
inc
add
xchg
mov
cld
cmp
es
test
adcb
outsl
ljmp
arpl
mov
in
mov
pop
mov
sub
xor
xor
jno
jb
cli
shll
ja
sbb
sbb
mov
push
xlat
adc
aam
mov
call
or
das
and
clc
jecxz
ja
push
js
shl
and
sub
je
fldenv
lods
pop
push
and
cmp
jno
shll
hlt
js
sbb
mov
mov
adc
push
sahf
loopne
mov
testb
mov
shll
jp
inc
mov
or
cmpsl
pop
rclb
mov
out
inc
lods
dec
in
sub
in
pop
scas
jbe
pushf
pop
sub
std
jl
mov
push
add
das
hlt
inc
adc
mov
mov
int
cmp
addl
mov
repz
sub
cwtl
pop
int3
inc
fidivrl
mov
or
mov
mov
lcall
in
test
lret
pushf
in
mov
xchg
sbb
cmpsb
inc
cmpsl
test
cltd
pop
xchg
push
arpl
js
aam
repz
mov
mov
test
jmp
inc
shl
xor
mov
insl
adc
gs
lret
ret
fwait
mov
fdivrl
mov
aad
push
enter
cmc
movsb
or
jmp
adc
sub
xlat
sub
dec
arpl
inc
popa
dec
out
sbb
ret
and
cmp
jae
int
cs
in
add
pop
pop
jmp
movsb
mov
stos
mov
fbld
pop
jmp
mov
adc
mov
jb
xor
inc
pop
test
cmp
sub
cld
inc
pop
jl
xchg
sbb
adc
sbb
aad
pop
scas
inc
loope
in
pop
push
andb
inc
and
inc
hlt
cmp
pop
jo
dec
stc
dec
int3
jae
xor
scas
ja
inc
fcmovnb
lcall
rorb
push
push
dec
pusha
lds
push
xlat
shl
outsl
push
inc
xchg
int3
mov
ljmp
mov
xlat
add
xchg
add
sahf
in
testb
out
jecxz
push
int
inc
sbb
jl
push
dec
int3
addb
aaa
mov
ljmp
hlt
mov
xchg
push
xchg
mov
dec
cmpsl
test
icebp
sub
xchg
mov
fistps
rcrb
iret
jl
les
push
stos
cmp
mov
cmp
es
jo
sahf
sbb
shl
and
shl
cmp
mov
test
jno
popa
add
test
aad
lods
cmp
mov
mov
sub
aam
sbb
mov
test
addr16
repz
xchg
test
mov
pop
sar
int3
jge
dec
cmp
push
les
pop
orl
push
ja
dec
and
dec
iret
push
std
dec
fnstcw
and
mov
aam
inc
jo
es
mov
lods
jmp
scas
out
push
cltd
pop
and
dec
xor
lods
mov
cli
cmp
xor
mov
int3
mov
add
adc
mov
xchg
jp
add
add
adc
inc
mov
add
adc
insl
cmp
add
out
add
fcom
mov
jae
lods
dec
push
shll
rolb
sti
pop
mov
popf
xchg
add
out
push
mov
mov
mov
data16
popa
in
mov
leave
xchg
sub
push
fwait
stos
lcall
xor
push
lods
cmp
sbb
mov
or
push
rorl
dec
orl
jmp
lods
repz
inc
sbb
mov
jp
pop
push
add
enter
jmp
xchg
cmp
nop
mov
loope
imul
imull
or
mov
cwtl
mov
in
popf
sti
adc
addb
jno
clc
inc
cs
push
pop
lds
lea
push
mov
adc
andl
movsb
or
cmp
and
mov
lds
jo
push
xchg
inc
aad
jl
push
movsb
mov
mov
sti
mov
push
sub
cmp
les
inc
ds
rclb
out
adc
add
ljmp
push
ret
or
sti
dec
gs
lds
pop
dec
js
out
in
and
mov
mov
sbb
mov
or
repnz
push
sub
sub
fs
femms
mov
xchg
cmp
loope
push
out
icebp
push
push
and
jp
pop
inc
loop
jo
mov
out
and
movsl
jne
aam
fmul
push
adc
in
jno
inc
xchg
dec
mov
out
in
mov
inc
jbe
dec
leave
inc
out
shrb
outsl
mov
jmp
out
inc
sti
mov
lahf
mov
sbb
stos
mov
jle
arpl
push
js
dec
repnz
repz
cmp
and
xlat
push
pop
dec
stos
sbb
adcb
bound
or
mov
outsb
imul
imul
push
xchg
mov
mov
dec
and
xchg
jbe
out
cmc
sub
rorl
jno
inc
popf
jns
pop
pushf
test
mov
insl
sub
sbb
scas
lret
int
fs
and
xchg
xchg
decb
jl
dec
sub
xchg
dec
cltd
lods
or
lods
scas
xor
mov
xor
jne
push
pcmpgtw
xor
jecxz
push
pop
dec
sbb
into
mov
jo
mov
cltd
dec
sbb
pushf
cmp
sub
push
jmp
in
xlat
lock
adc
fwait
add
push
push
jg
xor
xor
push
rolb
add
rolb
loopne
pop
push
mov
sti
aad
inc
mov
out
sub
add
shlb
lods
jecxz
inc
sbb
jp
fwait
mov
int3
push
movsb
push
dec
fstpl
lds
jae
lock
jo
aam
ja
xchg
dec
mov
inc
lds
shrl
adc
insb
ret
sbb
aam
mov
or
push
pushf
fst
aam
jle
push
fdivl
sbb
fistl
adc
movsl
lcall
inc
aas
and
iret
xchg
push
add
fbstp
sbb
jg
adc
jns
jg
pop
in
notl
pop
fsubl
add
shll
push
arpl
xor
in
adc
lret
xchg
into
xor
addb
fs
and
pop
dec
outsl
cld
mov
adc
mov
cli
div
out
jbe
or
pop
outsl
arpl
sbb
fldcw
repnz
fisubrl
push
jmp
adc
mov
sar
mov
cld
ret
adc
ret
or
pop
sti
int3
popf
xchg
ret
xchg
stos
aam
pusha
jp
push
cmpl
addr16
jmp
pop
jbe
dec
sub
push
ss
shl
mov
mov
in
nop
push
int
xor
dec
fldl
mov
pop
popa
mov
add
rclb
shrb
fadds
push
cmpsl
popa
sahf
lahf
xor
pop
add
in
pop
lret
ret
cmc
out
mov
inc
push
adc
adc
dec
fcmovnb
aam
shlb
lea
addr16
push
pushf
xchg
and
or
cmp
cmp
cmpsb
dec
xchg
sbb
cmp
xchg
add
jecxz
fisttps
cli
mov
loop
push
xor
loopne
mov
cmp
mov
pop
add
mov
pop
mov
test
lea
clc
call
cli
aam
loope
cmp
dec
dec
jno
jb
ret
mov
pop
out
adc
repz
pop
jmp
xchg
aaa
sbb
cmp
xor
mov
push
stos
mov
sahf
mov
jle
pop
push
cs
add
leave
or
lods
repz
xchg
insb
das
cmp
mov
aas
lds
xchg
xchg
popa
inc
and
inc
dec
push
push
shrl
stc
in
jae
xchg
dec
fld
cli
dec
mov
xor
fisttps
push
in
sahf
insb
sbb
movsl
repnz
in
xchg
mov
xchg
mov
sub
lods
imul
arpl
push
outsl
popa
inc
lcall
mov
das
pop
dec
fsubs
rclb
and
inc
jb
shrb
xchg
jmp
push
mov
mov
ficomps
lret
mov
adc
loop
dec
mov
gs
in
cmp
pop
lods
jbe
push
hlt
js
dec
adcb
ret
push
outsl
negb
xor
jno
movsb
and
dec
pushf
cmp
out
in
inc
cs
dec
jnp
iret
xchg
mov
adc
cld
xor
xchg
aaa
sub
popa
mov
scas
cltd
repz
adc
mov
jl
xchg
dec
or
xchg
test
subb
adc
int3
sub
orl
adc
cmpl
in
sub
jp
mov
cs
dec
pop
jb
cmp
or
xchg
out
inc
arpl
mov
or
outsb
xor
cli
cwtl
aaa
int3
pop
fmulp
lock
mov
in
push
mov
ret
push
jp
aam
fisubs
cld
xor
jl
push
inc
xchg
add
ds
sbb
jle
pop
inc
xchg
fdivl
mov
inc
iret
test
cmp
or
out
jmp
lods
cld
sbb
lds
sbb
dec
rcl
nop
je
incb
cmp
sub
pop
mov
sub
scas
dec
push
dec
es
cmp
mov
jae
aam
mov
aad
daa
mov
push
pop
insl
mov
fwait
jbe
xor
ja
jns
popf
ds
test
test
cmp
fwait
repz
inc
neg
cmp
pop
dec
insl
inc
adc
fdivs
cmpsb
enter
popa
sub
sub
cmp
orl
jge
out
adc
test
dec
jno
mov
cmpsb
in
jecxz
or
nop
or
push
ficomps
sub
pushf
mov
ficoms
daa
and
sbb
lds
and
inc
pop
std
loope
mov
movsb
rorb
sub
xor
inc
cwtl
or
mov
jo
xchg
xchg
scas
sub
pop
add
aaa
out
rorb
adc
jbe
aad
pop
jnp
sub
dec
dec
imul
aad
dec
testb
mov
adc
shrb
mov
jge
scas
jns
ljmp
roll
pop
mov
repz
jge
je
sti
pop
mov
push
lods
adc
out
pop
scas
push
into
dec
mov
and
lcall
pop
mov
jno
push
mov
push
mov
dec
sub
pusha
std
fstps
push
inc
stos
popf
rcrl
inc
push
hlt
stos
mov
repnz
fnstsw
dec
stos
inc
cwtl
dec
mov
sub
push
and
lretw
lret
out
cmp
xchg
xchg
inc
push
xor
mov
es
push
sbb
dec
cli
aad
ret
fwait
loope
jmp
adc
jo
jp
pop
sbb
nop
sub
pop
cmp
xor
mov
and
sbb
push
js
data16
or
push
aaa
push
addr16
fnop
dec
mov
hlt
shlb
or
ds
and
jp
sbb
dec
aam
mov
push
dec
mov
add
push
xlat
xchg
xor
lock
fdivr
aas
aam
fistps
push
or
inc
mov
xor
arpl
and
xchg
ds
dec
adc
rcrl
call
jno
mov
cwtl
pop
cmp
dec
testl
and
cmc
incb
ret
aad
imul
lret
dec
stos
xchg
lds
ret
inc
push
mov
out
mov
push
lods
jl
or
jmp
lods
js
cld
xor
daa
js
sub
push
adc
sbb
jno
stos
in
loop
lcall
dec
inc
mov
xor
fnstsw
pop
and
or
mov
pop
inc
jnp
cmp
in
jecxz
push
sti
mov
push
iret
sub
sbb
push
or
imul
cmp
xchg
pop
or
clc
fs
sbb
jbe
nop
pop
push
mov
imul
mov
and
iret
xor
stc
and
out
mov
fwait
pop
push
inc
mov
sub
mov
lods
mov
mov
repz
insb
xchg
cld
ja
push
neg
mov
loopne
jb
jne
push
sbb
jle
out
clc
ret
int
cmp
ja
repnz
int3
dec
inc
lea
enter
notb
jp
sbb
pusha
notl
push
cli
std
and
mov
mov
mov
dec
or
mov
test
icebp
push
fs
ret
pop
lods
mov
mov
je
les
ss
aaa
xor
push
and
dec
xor
fsubrs
and
jl
sub
insl
dec
sub
mov
leave
jo
shl
dec
xor
sbb
dec
shrl
cmp
inc
and
xlat
pop
cmpsb
adcl
adc
cltd
out
cmc
mov
cmp
mov
mov
jne
iret
js
sub
fsubl
stos
and
ja
add
int
and
xchg
and
adc
xor
test
stc
sub
inc
in
adc
dec
into
mov
lods
aaa
icebp
ror
cmp
call
shl
xchg
test
adc
mov
xchg
fucomp
push
adc
and
push
mov
mov
jg
push
xchg
dec
fcmovnbe
mov
mov
and
cmp
ret
dec
and
adc
xchg
dec
lds
pop
pop
cmp
pop
pop
fnstcw
icebp
out
sbbl
adc
pushf
les
fsts
scas
lods
popf
repnz
loopne
pusha
enter
loopne
pop
int
bnd
in
rorb
and
pusha
sub
push
idivb
push
repnz
pop
xchg
jo
insb
xlat
sbb
adc
push
subl
fcoms
push
jns
addr16
pop
sbb
shll
pusha
lcall
adc
xchg
stc
insl
inc
sti
lock
pop
lock
jge
mov
mov
sub
or
and
cmpsl
call
adc
mov
xor
xlat
jl
adc
ret
add
xor
jo
enter
or
aam
push
cmp
dec
ss
cld
push
pop
jp
cmp
in
sbb
cmpl
cmpsl
hlt
or
add
xor
pop
push
dec
lcall
repz
fidivl
xchg
dec
sbb
fstps
xor
inc
js
push
sub
rolb
dec
mov
xchg
das
sar
mov
fcompl
adc
mov
movsb
mov
xchg
xor
repz
dec
fisttpll
gs
pop
stc
sub
cmp
cmp
pop
popf
cmp
push
or
addr16
sbb
scas
adcl
inc
ret
push
adc
out
inc
ss
stos
pop
and
push
fidivs
and
mov
jbe
pop
insl
mov
cli
inc
xchg
in
push
mov
add
stos
jecxz
lock
sub
push
ret
fisttpl
mov
frstor
pop
das
pop
cwtl
xchg
lods
mov
jb,pt
mov
inc
nop
std
push
shrb
arpl
xchg
iret
add
fsubrs
hlt
fisubs
arpl
pop
loopne
pop
add
adc
lods
sub
sub
sub
aaa
stc
inc
jp
inc
divl
sub
nop
loope
or
rcr
mov
inc
sub
cmp
and
jg
movsb
hlt
cmp
add
pop
cmpsb
adc
xor
inc
lret
lods
iret
push
fwait
cmp
lock
popa
dec
andb
incb
loop
sbb
or
mov
jbe
ss
sub
inc
rorl
cld
adcl
push
sub
mov
xchg
sbb
add
jp
stc
dec
dec
cmp
andl
pop
int
and
inc
cmpsl
xchg
push
repnz
and
jmp
and
cmp
xor
fs
out
in
pop
repnz
inc
cld
arpl
iret
pop
sbb
jl
or
inc
cltd
mov
dec
cltd
ss
cld
in
scas
repnz
dec
aaa
gs
mov
pop
faddl
dec
out
adcb
gs
out
insl
sbb
sub
dec
jle
mov
cmpsb
std
lods
mov
inc
xchg
int
addr16
push
stos
inc
cs
mov
push
pop
mov
fisttpl
push
popf
into
jbe
jae
mov
add
jge
lods
in
out
push
out
cmp
jp
or
mov
dec
incb
xor
inc
imull
sysenter
lahf
mov
js
lea
mov
jp
inc
jmp
mov
or
stc
and
xchg
xchg
popa
lret
in
pop
stos
shrl
divl
inc
outsl
or
ljmp
mov
ja
inc
scas
ljmp
cmp
add
cs
mov
mov
or
aam
push
loope
es
adc
adc
fmuls
adc
fwait
push
jg
pushl
mov
cmp
and
sbb
call
cmpsl
inc
lcall
add
mov
scas
cmp
mov
bound
sub
sub
iret
inc
scas
shlb
cld
sbb
and
xchg
stc
cld
mov
out
push
clc
sub
int3
clc
hlt
xchg
mov
adc
push
and
stos
sbb
jl
lcall
pop
add
int
mov
xchg
or
xchg
dec
std
ret
js
nop
xchg
pop
jnp
aad
jg
inc
adc
xor
out
imul
inc
pop
dec
jle
cltd
clc
sub
daa
loope
jg
outsl
xor
jmp
addb
test
aas
pop
sahf
xchg
sub
mov
lock
shlb
pop
push
pop
push
daa
aam
mov
mov
pop
xor
push
pop
sbb
push
pop
xchg
push
outsb
ja
xor
jnp
mov
mov
outsl
pop
out
sub
cltd
and
cmp
cld
out
jmp
mov
dec
repnz
in
jle
addb
dec
out
aaa
test
in
lock
ja
push
push
lock
jae
and
divb
jne
lahf
fwait
xlat
cmp
stos
mov
push
mov
dec
in
mov
bound
loope
mov
repz
xor
mov
add
jl
add
arpl
mov
hlt
lea
and
es
stos
cli
les
daa
pusha
dec
push
add
into
gs
mov
inc
pop
push
fucomi
cld
jp
pop
sbb
imul
ja
jae
and
bound
lret
adc
leave
mov
mov
mov
jge
adc
sbb
add
clc
notb
test
enter
add
add
xor
xchg
push
mov
dec
std
jbe
lret
push
test
pop
and
cmc
inc
push
testb
mov
push
insl
pop
jle
or
jb
int
stos
add
inc
sahf
inc
or
inc
inc
test
incb
add
add
rcll
add
jg
xor
rol
add
fists
add
mov
mov
test
pop
dec
fsubrl
neg
inc
xchg
into
fcom
fcmovbe
int3
stc
pmullw
jae
sbb
lea
shl
xchg
mov
cmpsl
sbb
push
leave
mov
in
les
test
std
adc
insl
cmp
subb
hlt
ret
lods
mov
sub
pop
push
mov
lret
inc
clc
sub
and
sub
inc
mov
push
arpl
xchg
int3
pop
cmpsb
jns
mov
idivl
and
jne
rcr
mov
xor
jo
mov
xchg
js
sub
pusha
push
fs
and
cwtl
xchg
push
cmp
jb
lods
add
sub
aam
xchg
nop
xor
push
or
int
je
inc
pop
mov
loopne
fsub
sbb
xorb
mov
and
jecxz
sbb
decl
jnp
add
fs
repz
push
mov
jo
aam
negl
out
stos
cmp
inc
xor
pusha
lods
mov
sbb
lret
xchg
fistpl
push
push
push
or
jae
sti
mov
jp
jns
jbe
movsb
aad
push
js
adc
test
dec
pop
mov
cwtl
test
ret
cmp
rclb
fsubrs
sbb
add
fwait
pop
mov
pusha
das
jge
mov
into
xor
dec
xchg
lods
push
xor
js
jmp
mov
pop
and
test
jo
push
std
fisubrs
loope
arpl
jb
adc
gs
adc
push
mov
or
add
jnp
inc
test
and
mov
iret
fadds
add
xchg
pop
out
out
and
jbe
out
and
inc
jb
add
sub
pop
adc
incl
call
pop
push
cmp
loop
push
xor
icebp
xor
and
inc
cmc
xchg
cmpsl
fstps
cmp
push
xchg
rclb
sbb
ljmp
mov
rorl
imul
xchg
jp
popa
jne
imul
inc
pop
inc
mov
push
popa
sub
popf
adcb
je
inc
xor
rcl
ljmp
mov
shrl
xor
stc
inc
inc
imul
cmp
xchg
dec
jmp
std
mov
jg
mov
inc
push
pop
dec
xchg
aas
sbb
sub
out
and
push
jg
inc
push
mov
jbe
mov
loope
cmp
adc
aam
mov
popa
outsb
push
cmc
mov
push
dec
mov
test
jmp
push
fcmovu
dec
jae
cmpsb
and
pop
mov
xchg
test
lret
movl
in
and
nop
cwtl
inc
out
rclb
in
andl
xchg
ret
loopne
or
sbb
mov
sub
xor
inc
or
jmp
in
std
notl
jnp
sbb
jge
movsl
xorl
int3
hlt
dec
aam
in
test
or
cld
outsb
sub
jmp
pop
jno
sub
dec
cltd
call
push
pop
adc
scas
shll
cmp
xchg
movsl
jo
sub
out
incl
cmp
or
inc
or
orb
ja
test
push
lds
push
push
idivl
jmp
mov
in
dec
xchg
inc
enter
lcall
aad
xchg
fs
add
fstl
and
xor
jne
fldl
mov
daa
pop
push
pop
jns,pn
sti
loopw
or
nop
in
mov
call
lret
push
mov
icebp
xchg
les
fs
pop
dec
test
push
out
pop
iret
je
outsl
jns
out
in
inc
or
push
and
mov
jecxz
cld
enter
sbbl
shrl
int
xchg
lret
xchg
add
popa
sbb
lods
push
ret
inc
es
popf
or
adc
xorl
fldcw
mov
mov
jge
add
mov
out
push
mov
push
stos
in
aas
cli
xchg
pop
sbb
add
das
fisubrs
xlat
pop
add
in
mov
clc
jbe
jl
pop
push
jb
das
mov
mov
xchg
add
mov
stos
and
lcall
cltd
into
nop
sti
int3
inc
jp
sti
sub
xchg
repnz
jne
cmpl
push
ret
mov
dec
push
mov
lds
mov
flds
js
xchg
ds
int
lret
push
push
push
in
cmp
les
inc
divb
sbb
stos
int3
mov
fwait
pop
adc
mov
icebp
movsl
or
xor
push
sahf
push
or
imul
int
cmp
mov
testb
push
and
icebp
mov
test
jge
add
mov
push
add
orb
inc
scas
sbb
insb
mov
bound
sub
in
xor
lods
jmp
mov
loope
mov
add
mov
jb
ss
push
lods
std
cmpsb
adc
andb
in
mov
push
pop
inc
shll
jmp
push
aam
es
cmp
insl
ljmp
icebp
adc
sbb
adc
les
imul
sub
inc
je
adc
push
pop
pop
mov
stos
jae
inc
or
incb
and
or
xor
jle
clc
mov
scas
push
repz
repz
daa
cmp
inc
daa
sub
cmp
clc
pop
repz
out
fstps
cmp
in
sub
xchg
sahf
xchg
sbb
shrb
xchg
jne
icebp
pop
or
fsubr
push
cmp
leave
jp
xor
inc
in
in
mov
lret
sbb
pop
ja
sbb
fsubrl
cmp
enter
mov
jmp
sub
add
push
outsb
loope
fwait
mov
sbb
ret
dec
sbb
test
notl
lods
lods
adc
cwtl
cmp
sti
in
and
mov
and
ss
cltd
sub
cmc
xor
xchg
rcrb
pusha
sbb
mov
mov
xchg
jnp
mov
clc
dec
mov
js
jmp
test
push
sbb
cmc
lret
jbe
clc
rclb
arpl
sub
insb
lods
notb
arpl
add
pop
inc
in
mov
rorl
cwtl
xor
ret
add
push
xor
fstps
push
shl
out
pop
inc
pop
loopne
mov
sbb
movsb
imulb
dec
in
cmp
lcall
sub
mov
xor
pop
lods
dec
ds
add
popa
and
or
aas
outsb
dec
fdivl
cmpsb
mov
out
xor
aas
mov
and
cmp
push
mov
test
cs
sbbb
js
insb
mov
movsb
fsub
leave
jbe
pop
sbb
fistpll
loopne
cmpsb
adc
push
fdivrp
arpl
jge
in
aad
or
mov
popf
dec
adc
mov
in
mov
pop
jno
pop
and
data16
out
sbb
outsl
test
cmp
mov
xchg
cli
inc
fs
jle
call
es
cmc
dec
jo
fisubrl
push
add
push
push
mov
mov
ja
pop
stos
cmp
xor
sbb
mov
movsl
scas
repz
enter
cmp
dec
mov
push
fldenv
pushf
aam
fdivrl
jge
pop
add
je
adc
int3
enter
insl
aas
or
aaa
fcoms
push
adc
adc
std
icebp
sub
mov
and
sub
adc
test
fsubs
xor
xchg
push
pusha
iret
fnsave
les
out
in
inc
mov
and
xor
xorl
adc
jge
dec
imul
push
mov
xchg
or
sub
pop
mov
in
mov
add
outsl
test
push
pop
fildl
push
jle
inc
mov
hlt
xchg
or
push
imul
lret
sbb
arpl
or
popa
sub
jno
jb
gs
aam
pop
int3
or
and
mov
cmp
mov
mov
sahf
xchg
jg
enter
dec
mov
aaa
jae
push
push
adc
mull
and
push
push
or
data16
pop
xlat
aam
pop
inc
out
cmpsb
and
and
jp
inc
lock
add
sub
shll
mov
push
lock
inc
lret
jns
imul
ja
into
sbb
mov
mov
adc
idivl
imul
push
pop
mov
fs
mov
mov
std
cs
dec
dec
out
or
call
sub
decl
mov
je
add
lcall
or
add
dec
mov
xor
inc
sbb
jbe
outsb
enter
out
adc
mov
cmp
mov
pop
cwtl
cmp
add
mov
fs
dec
lods
roll
jg
fiaddl
jnp
orl
mov
call
shlb
jne
fucomip
lret
xor
fwait
scas
ss
sbb
mov
mov
and
das
mov
jbe
sub
jg
ficoms
sbb
ret
jb
or
inc
leave
cmp
aam
ret
mov
in
scas
adc
fldenv
in
jg
sbb
out
mov
lea
loopne
sub
pop
mov
insl
pusha
push
mov
sbb
arpl
and
mov
lahf
lods
inc
push
jne
out
xor
mov
mov
inc
pop
repnz
mov
sbb
cltd
xor
imul
movsb
and
test
loop
xlat
imul
xlat
jmp
addb
fcoml
mov
cld
lea
sub
mov
cmp
cmpsl
or
test
push
les
lret
dec
pop
mov
mov
mov
js
je
sbb
jbe
inc
jo
notb
and
xor
stos
inc
push
aaa
xchg
lcall
clc
mov
inc
jo
dec
iret
repz
aad
ljmp
outsl
pop
inc
shl
jae
inc
in
sahf
cli
mov
mov
sub
lcall
mov
xchg
mov
jno
push
dec
add
stos
add
dec
mov
ficoml
xchg
aaa
mov
imul
add
dec
imul
repz
out
and
fsubrs
incl
xchg
xor
lods
aaa
fidivs
push
popf
and
pop
leave
and
or
jo
adc
out
xor
loopne
cs
pop
test
outsl
repnz
icebp
xchg
mov
jp
add
xor
sbb
call
es
mov
loope
pop
cmp
jmp
cld
or
cmc
std
rorl
lea
jno
push
dec
jae
sbb
jo
out
cld
fstl
push
stc
jmp
aas
adc
mov
cli
mov
sti
loopne
jae
insl
sbb
icebp
adc
lods
mov
dec
jmp
ftst
inc
mov
adc
in
xor
jecxz
jecxz
stc
mov
inc
cmp
inc
in
scas
out
lea
call
pop
xchg
aaa
jne
int
adc
pop
push
subb
cmp
mov
fstl
fimuls
test
outsb
sub
aaa
pop
aaa
into
setp
xor
add
adc
xchg
adcb
hlt
adc
dec
je
and
mov
jmp
or
ss
stos
jno
jnp,pt
jne
and
dec
repnz
push
cwtl
adc
jl
jmp
dec
fs
inc
xor
loope
push
psllw
ret
xchg
cmpsl
cmp
loopne
js
push
in
fldl
mov
push
xchg
clc
push
cmp
adc
jp
xor
shll
pop
jno
or
in
cmp
push
xchg
xor
inc
xorb
push
rolb
cs
cwtl
push
cltd
mov
stc
in
loop
and
adc
push
push
sub
pushf
scas
jae
xchg
aad
jb
push
lods
pop
in
dec
jg
fstpl
xchg
push
ja
fsubrs
inc
test
push
mov
lahf
into
aam
xor
stos
pop
shlb
loopne
in
enter
int
push
lods
jp
mov
out
and
add
fsubrs
mov
test
sub
daa
push
add
push
mov
stc
mov
mov
inc
sub
imul
xchg
inc
rolb
sbb
add
adc
rol
and
sbb
pop
add
xor
aam
movb
cmpsl
int3
xchg
cmp
and
push
andb
pusha
pop
sub
in
mov
pop
into
hlt
stos
mov
jne
xchg
mov
jnp
xor
int
adc
add
inc
mov
cmp
dec
out
pop
sbb
adc
mov
fsubr
pusha
ror
nop
movsl
cmpsb
jp
imul
fxch
push
sbb
pop
dec
outsl
sbb
dec
divl
jno
scas
pop
dec
ds
out
std
mov
sbbb
test
push
aad
subb
xor
push
xor
sbb
loope
jle
dec
and
les
ja
cli
test
popf
lods
in
push
inc
shlb
fistl
adc
sahf
xchg
imul
movsl
aas
test
or
insb
lahf
sbb
jge
mov
add
dec
mov
dec
lods
dec
push
ja
add
hlt
dec
cmp
je
lret
cmpsb
out
cmc
js
pop
sub
int
or
shl
daa
push
adc
addr16
clc
aad
jg
aam
push
jecxz
pop
movsl
push
xchg
stc
jno
cs
or
push
mov
in
sub
push
cwtl
cli
loop
or
out
mov
push
mov
ret
pop
inc
dec
mov
stos
xchg
dec
dec
pop
xor
or
and
cmpsl
std
sti
push
fildl
decl
push
push
dec
mov
out
scas
les
loope
mov
cmpb
addr16
fisttpl
cmp
lahf
fwait
in
or
inc
icebp
and
or
test
dec
pop
cmp
insb
add
popaw
ret
fistpl
jg
xchg
jno
int3
ljmp
scas
outsb
xor
call
les
jne
rcrl
stos
test
test
jmp
dec
xor
mov
popa
pop
jne
or
sbb
test
sbb
loopne
pop
add
add
pop
xchg
mov
inc
cmp
fcoms
sbb
push
inc
mov
int
jnp
aas
mov
imul
out
and
cli
clc
and
cmp
pop
and
call
addb
push
xchg
jg
fucom
std
aaa
or
std
mul
fcomp
cmp
push
and
test
add
loopne
and
lea
dec
ljmp
in
popf
cmp
jb
repnz
inc
loopne
or
pop
or
lahf
add
cld
jne
mov
sub
and
jle
and
fwait
jge
ficoms
in
outsl
fsub
int
imull
arpl
pop
cmp
dec
aad
cmpsl
xor
xor
adc
sbbb
test
mov
dec
jns
mov
loop
jg
xchg
mov
push
inc
adc
add
int
and
mov
cmp
xchg
out
mov
mov
xchg
ret
sub
cmp
jnp
dec
pop
fcompl
pop
pushf
cmp
sub
push
iret
or
das
and
jmp
push
sub
dec
fistpll
xor
negl
lods
xor
cmpsl
push
jge
jne
in
inc
mov
icebp
cmp
std
pop
sbbb
and
ret
out
repnz
xor
mov
jle
js
out
aad
ds
in
adc
dec
iret
call
mov
dec
push
in
fcomi
push
enter
pop
mov
int3
das
js
xor
pop
cmp
jp
mov
xor
adc
es
imul
lea
xor
in
frstor
ss
sbb
pop
gs
scas
mov
mov
cmp
push
fnstsw
rolb
push
dec
push
mov
aas
cmp
dec
inc
sbb
push
nop
addr16
out
enter
inc
add
cld
push
iret
sub
sbb
fwait
js
xchg
adc
push
mov
cmp
jp
in
xchg
mov
pop
lret
sbb
jo
lahf
idivb
scas
push
or
mov
jae
imul
enter
jae
sbb
scas
ja
jp
add
jnp
xor
jae
mov
mov
pusha
jnp
mov
arpl
cmp
cmp
pop
inc
cmc
jns
aaa
ret
mov
xor
cmp
inc
jmp
insb
push
hlt
push
mov
lret
out
mov
stc
push
ljmp
mov
sbb
popf
pop
adc
pop
frstor
stos
mov
dec
mov
js
xchg
xchg
push
add
xchg
shll
mov
int3
jle
xor
scas
sub
dec
pusha
inc
out
push
or
lds
jns
or
pop
jns
test
hlt
aad
ljmp
inc
pop
stc
jg
xchg
addr16
jbe
lods
push
cs
stos
mov
mov
xor
stos
imul
dec
sbbb
sbb
sbb
lcall
adc
jmp
aas
mov
enter
mov
xchg
test
jnp
iret
scas
push
bnd
sub
jnp
mov
out
pop
xor
xor
addr16
les
pop
lds
or
or
js
jne
jae
inc
pop
mov
ret
and
test
lds
push
sbb
ret
xor
int
add
lods
std
fwait
ja
sti
lahf
adc
mov
pop
adc
subl
push
scas
ss
cmp
cs
out
dec
xor
sbb
adc
cld
push
or
scas
mov
mov
fwait
sbb
pop
sbb
cltd
gs
and
inc
lock
jl
jp
icebp
mov
jmp
cmp
push
xchg
call
pop
ss
mov
sbb
jae
add
or
ss
and
or
lods
pop
xorl
adc
addb
pop
inc
int3
sbb
xlat
ds
and
push
lods
jle
test
repnz
jb
scas
into
shrb
mov
jno
das
popa
lret
imul
sub
xchg
stos
loop
mov
shrl
cwtl
dec
imul
fs
call
and
loop
mov
and
pusha
sub
scas
pop
mov
xchg
leave
xor
mov
iret
xchg
jae
adc
or
popa
push
pop
add
mov
rorb
in
pop
insb
test
xchg
gs
mov
test
mov
dec
jp
enter
cmp
adc
inc
xchg
pop
xor
cmp
mov
orb
jle
mov
adc
pusha
stos
fcomi
xor
xlat
lock
xchg
jo
movsb
adc
shr
inc
mov
cs
les
mov
out
loope
movsl
lret
jns
pop
jae
jmp
jg
adc
sub
push
and
rclb
mov
cld
in
aad
jmp
push
mov
popa
mov
cmp
pop
inc
mov
mov
adc
sbb
mov
rclb
hlt
add
mov
mov
and
push
shl
popf
cs
and
dec
xchg
sub
icebp
pop
outsl
xor
lods
jae
xor
mov
xor
mov
popf
cmp
loopne
lret
out
push
lock
xchg
rolb
in
adc
test
mov
cmp
loop
or
mov
gs
sub
mov
mov
aad
out
test
push
je
and
mov
out
or
les
lahf
ja
inc
and
push
in
xchg
xor
sbb
out
xor
mov
cmp
xor
mov
sub
inc
xchg
and
stos
mov
push
adc
shl
iret
out
subl
loopne
cmp
sbb
and
jg
xchg
imul
xchg
fisubrs
mov
jmp
dec
dec
jle
push
jmp
jmp
aas
mov
jmp
cmpsl
pop
aaa
jbe
sub
cmc
add
ret
cmp
lea
lds
jp
xchg
mov
add
mov
in
adc
mov
popa
testl
mov
cmp
mov
clc
mov
jnp
mov
lret
mov
neg
in
add
sbb
jnp
sbb
ljmp
cmp
scas
addr16
movsl
xchg
mov
ja
pop
out
mov
mov
mov
mov
adc
cmp
sahf
loop
ja
repnz
or
outsb
cmp
sub
outsl
and
fxtract
sbb
and
ss
dec
inc
xchg
mov
popa
out
dec
or
into
jo
mov
adc
pop
jmp
dec
into
mov
cmp
pop
jge
cs
test
mov
gs
mov
loope
dec
jge
or
and
push
pop
lret
addr16
pop
addr16
push
jle
andl
out
mov
icebp
add
arpl
jmp
lahf
mov
fiaddl
push
push
xor
in
cmpsb
test
mov
ljmp
adc
adc
sub
imul
xchg
clc
push
xchg
mov
sub
scas
mov
pop
cmp
inc
adc
mov
fcompl
es
jo
shl
cmpsl
xchg
nop
popf
ret
mov
imul
dec
push
clc
sbb
mov
jne
fistps
push
enter
dec
inc
dec
stc
jl
dec
jb
notb
xor
mov
cmp
push
mov
mov
mov
xor
xlat
add
popf
lea
mov
mov
add
imul
sub
inc
pushf
mov
cld
mov
mov
jo
out
fcomi
in
sbb
or
in
test
and
mov
xchg
push
push
int3
gs
dec
cwtl
sar
and
sarb
gs
push
xchg
int
mov
xchg
mov
add
cmp
std
push
inc
pop
pop
xor
dec
xor
incl
mov
xchg
cwtl
xor
fcmovnb
outsb
inc
mov
xor
sub
lea
out
inc
jae
sub
cli
fidivl
test
repnz
jmp
sbb
and
lea
mov
dec
xchg
cmp
or
xor
aam
mov
aaa
sub
mov
shlb
das
movmskps
mov
leave
dec
mov
xchg
shrl
add
pop
nop
enter
into
jns
ds
xchg
gs
jae
or
in
ds
fcompl
mov
cmp
pop
xchg
scas
stos
das
xchg
mov
sbb
xor
mov
sub
adc
test
dec
push
xor
cmp
in
mov
jae
in
dec
fwait
call
cmpsb
lcall
push
mov
cmp
push
aam
imul
das
inc
pop
sub
call
call
clc
shll
xchg
push
or
jp
fwait
int
lea
jge
jb
jle
mov
inc
lods
pop
push
cmp
cmc
test
or
sbb
popa
insl
sbb
imull
les
jae
cmp
ret
loop
mov
dec
mov
aaa
movq
jp
daa
xor
outsl
lret
pop
mov
push
xchg
dec
lds
mov
mov
pusha
ret
pushf
rorl
or
fdivrl
xchg
pop
push
xlat
mov
lea
pop
inc
or
sub
outsb
adc
mov
xchg
fwait
xor
aad
aaa
adcl
add
test
int
adc
lods
pop
aad
inc
aaa
movsl
dec
push
mov
sbb
mov
and
stc
inc
sahf
mov
leave
in
adc
pop
loopne
push
xchg
lret
mov
ds
popa
leave
xor
cmp
adc
jne
cmp
testb
es
and
lcall
xor
out
aam
cmp
add
xchg
insb
add
or
adc
dec
pop
pop
push
dec
inc
inc
mov
sbb
pop
and
lods
es
and
aas
insl
lods
cmp
jge
mov
out
cmp
mov
out
jbe
repnz
inc
mov
ret
ljmp
jle
jnp
gs
insl
loope
cwtl
ss
rol
lret
xchg
pop
xchg
xor
nop
xor
ret
xchg
cmp
lret
dec
aad
dec
jns
push
popa
jle
cmp
out
sbb
enter
push
push
jo
pushf
cmc
insl
sub
mov
lcall
out
nop
mov
sbb
les
push
jle
add
mov
jns
xchg
sti
and
loopne
jo
mov
mov
pop
lds
imul
mov
inc
mov
pop
mov
rolb
adc
repnz
mov
or
pop
pop
fidivs
sub
in
sub
pop
rol
xchg
shrl
push
add
mov
lcall
ss
inc
mov
push
inc
inc
std
enter
dec
mov
mov
aad
pusha
pusha
rcll
inc
icebp
aaa
out
dec
sbb
sbb
lods
add
push
icebp
inc
roll
add
add
push
popf
pop
sbbl
or
arpl
add
cmpsb
mov
outsb
in
inc
sarb
mov
mov
stos
sbb
mov
loop
outsl
mov
add
push
and
das
arpl
fcompl
add
and
push
mov
inc
inc
jae
pop
sub
push
rol
mov
pusha
lods
out
inc
test
cmp
loop
mov
cs
call
lahf
lock
ds
jb
aam
cmc
adc
cmp
jmp
subl
mov
int3
mov
das
ljmp
out
cmp
mov
push
aaa
xchg
les
pop
rorb
xor
test
add
pop
movl
into
or
fwait
pop
and
in
sbb
mov
push
lods
leave
test
mov
xor
pop
in
fidivrs
push
jnp,pn
outsb
scas
mov
fs
dec
int3
mov
cld
inc
adc
and
mov
jge
or
arpl
push
ror
cmpsl
sbb
jmp
sti
sub
adc
cmpb
xchg
push
rcrl
jnp
push
pop
inc
and
adc
les
jl
add
shll
aam
mov
xor
or
outsl
and
fisubrl
sahf
xor
adc
mov
nop
xchg
xor
xor
sbb
adc
adc
xor
and
cld
stos
jb
int3
pop
adc
mov
xorb
negb
in
add
mov
ljmp
dec
adc
fs
orb
sbb
mov
or
out
cwtl
shl
gs
lods
ror
iret
out
lret
stc
pop
xor
rolb
jle
fisubrl
fists
stos
fwait
sub
sbb
sub
lret
ret
inc
sub
fwait
andl
addr16
dec
inc
in
mov
das
pop
mov
lahf
dec
jne
xlat
js
xchg
mov
ljmp
and
cmp
jp
pusha
jle
mov
out
jecxz
shll
roll
ljmp
or
imul
and
dec
imul
mov
dec
fimull
mov
std
inc
inc
mov
or
xlat
adc
sub
mov
pop
jmp
loopne
fwait
lods
pop
les
cmp
movsl
fldt
adc
add
push
mov
stos
and
cmpsl
jbe
pusha
into
mov
push
lret
mov
leave
mov
in
jnp
jnp
cld
icebp
lret
mov
sub
push
inc
mov
into
mov
sub
pop
icebp
cmpsb
aad
push
mov
out
shlb
mov
xchg
or
daa
test
jge
loopne
inc
push
push
ret
imull
push
mov
mov
sbb
push
in
push
sarl
xor
mull
lret
fdivrl
mov
sbb
dec
call
sub
inc
icebp
mov
add
pop
test
pop
cmp
xor
and
hlt
into
enter
xor
cmpsl
inc
fisubrs
mov
cmpsb
push
and
dec
movsb
lret
mov
loope
add
xchg
jp
call
jge
loope
je
xlat
mov
push
fnstcw
xchg
lock
daa
pop
shrl
mov
and
dec
loopne
mul
or
fidivl
mov
fildll
inc
pop
jnp
nop
sub
inc
test
sub
fcompl
aaa
lahf
push
fmuls
jno
dec
movsb
in
adc
iret
aas
mov
in
inc
fcmovne
pop
xchg
add
fcoml
xchg
es
out
rcrb
outsl
pop
inc
js
out
mov
sub
out
enter
mov
insb
lds
imul
movsb
dec
call
pop
das
cmpb
jle
xchg
fwait
subb
inc
jl
fstpl
inc
add
test
pop
mov
xchg
loopne
in
rcrl
lock
addb
int
mov
push
add
fistps
and
hlt
cmc
js
push
sbb
jmp
mov
mov
popf
fnstsw
mov
push
in
jae
fmulp
lcall
add
mov
out
fwait
inc
aas
lods
pushf
xchg
cli
push
cli
xor
sub
sub
adc
xor
push
mov
push
push
int3
pop
insl
jmp
incl
push
add
ds
xor
or
xchg
mov
push
addl
shl
fisubl
cmp
push
xor
call
push
xchg
mov
cmpsb
js
das
lret
outsb
js
test
enter
jns
xchg
mov
or
jecxz
js
sar
xchg
pop
pop
and
out
in
mov
or
hlt
mov
and
inc
mov
pop
xchg
sbb
and
pop
bound
push
dec
imul
sub
sbb
ds
mov
jg
cmp
jno
push
push
mov
sahf
mov
mov
xor
outsb
scas
mov
xchg
xchg
xchg
add
pop
or
ss
rclb
add
pop
fucom
ljmp
add
sub
push
mov
jae
pop
nop
add
jne
push
pop
jp
adc
xor
sub
bound
sahf
dec
test
fwait
sarl
push
sbb
iret
mov
add
adc
stos
icebp
loopne
dec
scas
lods
std
js
fstps
imul
sub
cs
push
popf
and
or
push
ret
push
sbb
lods
mov
ret
rcrb
shrl
mov
ja
or
mov
xchg
and
roll
mov
pop
lods
pop
lret
mov
or
xorb
push
jmp
popa
test
aad
out
xchg
test
mov
sbb
sub
lds
push
xchg
notb
mov
ds
outsb
xor
pop
or
pop
divl
fiadds
sbb
sbb
dec
loope
push
xor
pop
lods
adc
sarl
cmc
movsb
jmp
testl
mov
cli
dec
out
push
pop
movsb
add
stos
sub
jb,pn
sub
pop
into
shlb
xchg
or
jge
or
lgs
sbbl
inc
shrl
adc
loopne
lods
addr16
mov
ljmp
movl
pop
cld
std
sbb
std
inc
lods
cmp
in
pop
sbb
adc
imul
int3
cmp
outsl
incl
popa
push
mov
xbegin
sarl
sbb
inc
movsl
pushf
sub
mov
push
xorb
or
pushf
insw
or
mov
push
jae
out
movsb
cmp
mov
inc
addr16
mov
sub
fimuls
test
pushf
insb
outsl
repz
add
inc
icebp
test
mov
hlt
mov
addr16
je
jns
jmp
insb
test
cltd
mov
xor
mov
jmp
cmc
testl
mov
pop
les
xor
icebp
fstps
cmp
mov
mov
push
jg
test
push
movsl
into
out
jo
movl
sub
out
dec
movsb
xchg
cmp
push
insl
cmc
in
xor
dec
cmp
jbe
loop
bound
xchg
cmp
pop
or
push
cwtl
add
popf
xor
mov
sub
xor
cmpsb
jge
jnp
cmp
mov
xor
dec
push
cmp
pop
iret
paddsw
sbb
add
ret
dec
add
int
aaa
jge
pop
fs
xchg
xchg
and
inc
ret
pop
sbb
xor
cmp
xlat
xlat
sahf
stos
sbb
dec
aam
adc
test
cld
add
xchg
xor
fs
cmp
and
pop
xlat
jecxz
stos
imul
aaa
mov
in
push
mov
mov
push
imul
push
push
jae
push
xchg
vmwrite
daa
xor
andl
cmc
lret
cli
push
std
xchg
fwait
inc
stos
add
push
lds
jo
or
fwait
iret
jae
ja
enter
in
adc
lea
xchg
mov
cmpsb
iret
sub
mov
int3
mov
mov
cli
push
sbb
js
je
mov
fcoms
xor
aad
inc
mov
je
cmc
cmpsl
mov
mov
roll
add
cmp
sbb
lret
out
inc
pusha
ret
or
mov
mov
jns
mov
xor
cmp
xchg
pop
sbb
xlat
jl
mov
or
dec
fsubrl
fwait
shrl
jnp
rcll
lcall
sti
addr16
fwait
mov
sub
push
and
nop
fsubrs
aaa
push
stc
cwtl
notb
scas
lret
push
push
jmp
pop
pop
lcall
into
jmp
fidivrs
lods
into
mov
lcall
mov
xor
dec
adc
ss
clc
arpl
adc
add
out
cmp
rol
adc
lret
push
fidivrl
adc
cmp
testl
ja
inc
push
in
test
pop
pop
cmp
sub
add
movsb
arpl
sbb
ss
cld
mov
adc
and
lret
mov
push
cmp
lcall
sbb
insl
lahf
sbb
rclb
dec
mov
cmp
insl
mov
faddl
inc
cmc
lods
ja
jl
mov
stos
or
cltd
mov
loop
pop
ljmp
inc
sub
or
xchg
inc
lods
mov
aam
das
push
mul
xchg
popa
ds
sbb
push
popa
xor
sti
lea
cmpl
ret
pusha
stc
jmp
icebp
mov
mov
push
push
xchg
mov
adc
and
test
js
xchg
push
xor
or
mov
cmp
push
xchg
mov
inc
inc
cwtl
pop
test
hlt
out
cmc
popf
ficoms
jmp
mov
ja
pop
sub
mov
adc
test
lret
or
sbb
xchg
jno
dec
sub
jo
in
add
push
cmpsl
jno
cld
jne
lret
aaa
mov
xor
cli
das
or
push
sbb
pusha
aas
std
cs
lahf
mul
setge
stos
push
jnp
mov
loopne
out
in
out
push
sbb
pusha
cmp
jecxz
mov
imul
add
dec
loop
dec
aas
xlat
mov
push
pusha
mov
xor
bound
jnp
or
and
jbe
inc
popa
and
xchg
xchg
xchg
negl
out
and
xor
sbbb
enter
fst
mov
mov
inc
mov
push
in
push
js
push
or
cltd
pop
aad
aas
mov
stos
jnp
test
pop
push
sub
sti
aas
sub
cmp
mov
mov
ljmp
imul
cmp
push
out
out
imul
pusha
xor
xor
or
divl
mov
sbb
mov
gs
sahf
jb
sbb
add
jmp
or
xor
outsl
out
int3
xor
or
scas
pushf
outsl
cmp
mov
dec
test
push
imul
stc
fneni(8087
sub
or
es
mov
ja
leave
xchg
xchg
ss
movsb
loope
push
inc
outsb
mov
aas
rorb
pop
paddsw
shlb
faddl
pop
push
pop
out
xchg
roll
xchg
int
pop
pop
clc
ret
lock
adc
jne
mov
xor
mov
ret
add
dec
pop
and
into
lcall
mov
fists
cmc
cmpl
idivl
and
adc
mul
les
jl
or
jle
sub
mov
add
xchg
cmp
std
iret
mov
fcompl
dec
aaa
nop
jno
mov
pop
inc
das
mov
jg
lahf
mov
jl
dec
sahf
imul
sbb
mov
and
int3
add
adc
dec
testb
lcall
xchg
into
inc
out
sub
nop
add
jmp
or
das
mov
mov
jecxz
jo
daa
arpl
xor
and
cmp
cli
aas
add
stc
dec
dec
push
pop
mov
xor
xchg
sub
pop
pop
movsl
xor
in
push
es
fwait
xor
loope
aad
jg
sub
add
shlb
int3
lods
dec
cmpsb
mov
daa
xchg
cmp
sbb
sbb
adc
sbb
mov
push
adc
sbb
ljmp
sarb
jg
pop
push
js
add
pop
pop
inc
inc
leave
push
jl
popa
adc
repz
andb
inc
jae
fcmovbe
loop
inc
dec
push
xchg
push
das
inc
xor
cld
inc
orb
jl
nop
fucomp
mov
daa
stos
sub
cli
xchg
popf
insl
jbe
lds
jnp
dec
xchg
or
iret
rcrl
sbb
sub
adc
cltd
inc
xorb
pushf
dec
mov
sbb
cmp
add
pop
imul
in
repz
in
pop
outsl
pop
sahf
cld
add
jge
repz
cli
and
jo
rcrb
inc
imul
push
sub
and
xchg
cs
dec
dec
mov
fmuls
sti
sub
mov
mov
mov
cmp
xor
movsb
aas
mov
sub
add
mov
loopne
stos
loope
shll
and
and
sub
idiv
rcll
adc
lret
mov
fidivrl
lahf
push
ss
adc
iret
xor
divl
into
mov
loopne
mov
sarb
push
cld
adc
lea
xchg
xlat
scas
add
test
sti
adc
jecxz
xchg
xchg
popf
add
js
mov
dec
addr16
jle
mov
mov
mov
repnz
stc
dec
aam
mov
loopne
sub
cmp
dec
ret
shrl
pop
popa
outsb
mov
das
push
in
mov
popa
or
adc
push
xor
stc
and
pusha
xchg
add
cwtl
pop
and
fldenv
sbb
shlb
push
clc
mov
push
pop
pop
pop
pop
mov
cmp
pop
sti
xchg
and
xchg
test
scas
mov
pushf
stc
shl
hlt
xor
scas
jnp
mov
orl
jbe
mov
add
sbb
push
xchg
push
and
push
mov
shrb
shrb
sti
outsl
dec
iret
pop
jl
nop
xchg
mov
pop
fadds
jp
lret
adc
mov
ds
jmp
out
add
lahf
jmp
mov
int3
push
sahf
push
jl
cs
mov
sub
and
dec
inc
jno
mov
cltd
rorl
mov
xchg
mov
fildll
cltd
cld
xor
pop
pop
jg
aam
rclb
add
dec
and
jecxz
mov
xor
adc
mov
addb
in
dec
ljmp
popa
inc
sub
inc
sbb
adc
xor
and
nop
adc
cld
jp
cs
in
push
enter
cmp
sub
js
pop
pop
mov
pop
sub
jo
out
mov
mov
xchg
jbe
fsubrs
inc
and
imul
add
fsubrl
push
addr16
in
mov
fists
jae
rcll
push
mov
mov
sahf
cmp
inc
push
test
in
sbb
mov
addb
lds
dec
sbb
jge
xor
dec
movsl
mov
jle
push
ss
mov
adc
loop
mov
xor
jns
cmc
mov
insl
loope
adc
lcall
add
popl
mov
inc
mov
push
imul
in
stos
loope
and
add
loope
hlt
xchg
add
loop
mov
dec
xor
mov
cmc
mov
jmp
cs
add
ret
mov
gs
jb
sub
jo
sti
sar
int3
mov
push
clc
mov
and
jge
jbe
mov
adc
ja
push
outsb
mov
xchg
xchg
lea
mov
push
dec
testb
adc
or
je
lahf
adc
mov
lcall
loope
mov
fcoml
mov
dec
aad
ret
fwait
mov
out
mov
and
mov
cmc
lret
loop
xchg
clc
sub
inc
adc
ret
andb
mov
test
orl
jg
adc
mov
jge
pop
push
mov
mov
pusha
mov
mov
sub
or
pushf
push
les
mov
mov
rcrl
aad
test
jnp
adc
xchg
test
pushf
jnp
push
int
je
repnz
pop
aam
dec
mov
inc
jb
fwait
jge,pn
scas
cmc
dec
push
mov
je
cmpsl
xor
in
sbb
out
jns
pop
in
movsl
popa
push
insl
mov
jbe
loop
std
ja
loopne
jno
scas
scas
das
dec
cld
xlat
sbb
sbb
and
mov
cmp
mov
sub
xchg
jne
mov
mov
daa
fdivr
push
stos
mov
xorb
sbb
call
lahf
decl
stos
orb
fisubrl
ljmp
loopne
sbb
pop
popf
sbb
cmp
fstp
push
mov
adc
sahf
sbb
ret
mov
out
mov
pushf
mov
xchg
adc
fmul
push
jne
fnstsw
mov
shr
xor
lods
mov
xchg
mov
sub
cs
in
andl
icebp
popf
dec
xor
jp
hlt
movsl
and
jns
shll
xchg
pop
inc
xchg
jl
lret
sub
jns
cmpsb
dec
push
cltd
inc
cmp
xchg
xor
sub
pusha
inc
stos
out
push
jae
pop
push
ljmp
rorl
cmp
pop
sbb
lret
loop
pop
addr16
dec
push
and
aam
xor
push
lcall
push
mov
jns
pop
jnp
pop
push
sbb
rclb
rol
add
into
mov
mov
inc
stc
cmp
jbe
cmp
xlat
xor
shl
test
xchg
mov
ret
add
cmp
mov
push
cs
insl
ret
out
inc
aad
add
out
sub
mov
dec
xor
sub
push
adc
dec
fiadds
mov
pop
aas
push
sub
mov
and
scas
fdiv
gs
insl
adc
inc
aam
jne
mov
or
adc
jo
jmp
pusha
stos
push
inc
rcl
mov
mov
pushf
sub
jnp
fadd
lahf
push
xchg
cltd
xchg
and
pop
les
pushf
outsb
sbb
xchg
test
add
hlt
in
add
adc
cli
xor
test
inc
adc
dec
jmp
xor
sbb
test
js
xlat
jle
into
out
sbb
cld
fs
jno
mov
xchg
int
mov
mov
fisttpl
inc
lock
push
aam
cli
xchg
pusha
daa
push
push
jg
cwtl
loop
es
stc
xchg
jbe
jno
pop
jno
int
push
test
rorb
lea
xor
push
xor
das
add
mov
cli
in
pop
mov
jno
pusha
sub
push
mov
ljmp
adc
sarl
shlb
mov
adc
or
cwtl
in
xchg
cmpsl
mov
mov
pop
repnz
jnp
out
jl
jno
pop
das
push
jns
jbe
lods
insb
popf
xor
movsl
into
lock
mov
and
movsl
in
imul
sbb
jno
sbb
lea
add
mov
and
cmpsl
iret
dec
pop
and
lods
push
into
and
xchg
insb
cmpsl
imul
jae
out
lods
add
rcll
mov
les
sbb
mov
push
call
push
push
fidivrs
mov
sbb
jmp
pop
fsubl
shll
fwait
inc
add
dec
stos
jl
test
add
jp
xor
jle
sub
cmp
gs
das
adc
xchg
fstl
jo
aad
lock
sbb
daa
sarb
add
or
ret
iret
insb
popf
out
nop
ja
push
add
jnp
cmp
ss
orb
mov
shlb
lds
hlt
push
xor
pop
addl
push
stos
and
scas
gs
imul
sbb
out
adc
inc
adc
and
push
shrl
iret
sbb
call
adc
push
cmp
add
and
xor
sbb
bound
xor
popf
les
ljmp
xor
or
shll
jge
iret
incl
stos
out
insl
mov
xor
jle
adc
adc
repnz
push
and
xchg
adc
pop
jle
xlat
sbb
push
sbb
cmp
push
mov
inc
cltd
imul
dec
pusha
mov
xor
xchg
rorl
cmp
lcall
push
sub
repz
add
imul
sbb
inc
pusha
sub
push
lds
test
push
xchg
hlt
lahf
jg
in
cmp
fcom
inc
scas
adc
mov
jg
insb
imul
lods
mov
sarb
sbbl
stos
mov
icebp
clc
fisttpll
jmp
dec
xor
in
inc
inc
pop
or
scas
dec
sub
dec
inc
push
loope
aaa
xchg
dec
inc
aad
xor
ds
push
push
adc
aaa
sub
jno
mov
rcll
fadd
xor
inc
sbb
je
mov
mov
insb
lock
ljmp
cmp
lock
push
dec
das
testl
mov
adc
inc
arpl
and
push
lret
or
inc
fwait
xchg
jge
aaa
fadd
scas
xlat
insl
imul
sti
xor
rorl
insb
hlt
and
imul
int
mov
add
mov
bound
cmp
add
jecxz
push
sub
sbb
scas
insb
jno
or
je
dec
adc
lcall
mov
jbe
mov
cmc
frstor
jle
movhps
imul
mov
jae
and
xchg
and
jno
push
les
aam
jbe
aam
mov
test
cmpsb
js
insb
push
push
dec
adc
dec
in
mov
push
ret
and
cmp
icebp
cmpsl
sahf
or
repz
xor
loope
push
adcb
cs
push
loopne
xchg
mov
xor
lahf
popf
pop
je
ss
sbb
sbb
cli
js
push
mov
movsl
jb
es
arpl
push
xchg
mov
aam
mov
inc
adc
xorl
int
mov
sbb
test
push
clc
fxch
and
add
gs
mov
mov
cmp
sub
out
jb
insl
mov
pop
cmp
out
rolb
sub
dec
addr16
pop
test
leave
cmp
popf
inc
clc
dec
add
fs
xchg
xchg
xchg
xchg
scas
es
xor
fidivrl
push
dec
dec
out
movsl
loopne
and
insb
dec
jno
in
adc
cld
adc
cmp
mov
loopne
hlt
cmpsb
int
add
xchg
xor
jmp
aas
jns
jmp
cmp
dec
mov
xor
or
scas
xor
dec
mov
or
xabort
dec
cmc
mov
lods
out
mov
sub
jbe
dec
aam
xchg
and
jbe
stc
dec
and
cltd
repz
dec
add
cvttps2pi
mov
or
cltd
clc
test
fisubrs
aad
mov
movsb
jge
pop
jb,pt
cmp
test
lret
int
cs
jne,pn
mov
adc
xchg
mov
inc
test
mov
mov
loope
push
stc
iret
xrelease
sar
inc
cmp
imul
in
ja
dec
mov
mov
daa
jo
rclb
cmpsb
xor
sub
loop
dec
dec
xor
inc
push
loope
sub
movsl
fucom
dec
mov
ror
rorb
and
imul
ret
adcb
shl
mov
mov
xchg
in
adc
in
shl
sti
in
lods
in
movsb
in
hlt
fisubs
mov
sub
xchg
pop
loope
adc
mov
je
ss
insl
sub
movsl
aaa
push
xchg
mov
aaa
push
ret
mov
imul
das
adc
faddl
cmp
push
or
test
mov
fists
loope
add
jns
aam
jp
adc
rclb
mov
out
daa
fstpl
mov
or
add
mov
jl
lret
add
in
sbb
sbb
cmp
shlb
xorb
pop
outsl
jne
loope
ret
pop
mov
jbe
or
fimull
and
aaa
pop
lret
jne
es
inc
pop
adc
inc
jcxz
pop
add
push
or
mov
pop
lret
jns
stos
inc
and
mov
cltd
cmp
in
hlt
or
movsb
test
leave
out
popa
stos
push
push
ja
mov
mov
push
mov
mov
sub
or
add
loope
cli
out
stc
xor
pop
int3
adc
push
xchg
sub
hlt
xor
or
stos
push
mov
adc
dec
sarb
popf
cmc
popa
leave
daa
push
shll
adc
sbb
rclb
rcrl
je
aam
dec
sti
fisubrl
mov
clc
aaa
jmp
sbb
xchg
ficoml
data16
adc
or
pop
jns
push
mov
je
xor
pusha
xor
cmpsb
sbb
mov
jne
imul
fmull
addr16
mov
sub
outsl
sub
iret
xchg
inc
adc
sub
fs
pop
flds
mov
lret
adc
inc
stos
mov
add
push
pusha
xor
xchg
movsb
outsb
test
call
test
aad
jb
xchg
push
lcall
jmp
jle
push
sub
dec
fisttpll
push
rorb
xchg
and
xorl
stos
mov
in
xchg
jns
jne
sbb
pusha
movsl
call
fwait
repnz
fidivrs
lahf
pop
cld
or
in
insb
scas
ror
ss
push
test
lods
cmp
popa
stos
pop
jae,pn
loop
roll
inc
mov
rol
inc
pop
dec
jl
mov
jns
cli
jecxz
inc
xchg
cwtl
aaa
mov
stos
xchg
adc
push
dec
fidivrs
fnstsw
sub
xchg
add
aad
imul
fs
fs
pusha
push
mov
fnstsw
jae
mov
jns
icebp
or
mov
dec
test
out
push
out
xchg
std
pop
push
pop
in
mulb
int3
outsb
sub
inc
aas
fsubrs
cmp
sub
xchg
cmp
mov
add
mov
cmp
push
sub
mov
mulb
movsl
push
aaa
insl
or
dec
mov
push
fs
sbb
sbb
sti
jns
adc
cmp
and
push
hlt
inc
xor
push
xor
subl
lret
lods
lahf
mov
sbb
push
sbb
in
fimuls
int3
hlt
sub
lea
or
pop
jge
data16
out
adc
ja
xor
jg
lods
ja
and
notl
jbe
sarb
out
inc
add
aam
fdivrs
inc
push
popa
xor
dec
jl
push
xchg
stos
xchg
push
mov
mov
xchg
dec
fsubs
cltd
rorl
aad
frstor
adc
mov
lcall
es
jbe
sbb
sub
ljmp
jg
arpl
push
xchg
dec
pop
xlat
nop
pop
jnp
mov
imul
sbb
inc
mov
push
xor
out
cmp
jo
fildll
pop
hlt
jl
xor
lods
into
icebp
inc
nop
mov
sbb
xchg
mov
movb
sbb
xchg
pusha
adc
jo
sti
out
xchg
pushf
mov
aaa
sbb
add
jno
xchg
jmp
add
shr
mov
popa
adc
pushf
mov
cmpsb
xchg
push
sub
ja
ljmp
ret
movsl
incl
lds
add
pop
loopne
arpl
push
les
inc
sub
fidivrs
sti
or
jb
lretw
scas
je
xor
hlt
sub
rcrl
stos
jnp
fs
or
out
sbb
fwait
sub
jg
cmc
inc
inc
test
repz
push
add
in
das
push
sbb
xchg
push
cmp
jo
cmpl
cmp
arpl
rol
fildll
adc
mov
push
pop
inc
or
jns
mov
arpl
shl
push
iret
sbb
jp
mov
pop
jne
cmp
js
mov
xchg
ret
xor
mov
sub
fs
jo
xchg
fidivrl
mov
mov
cmp
mov
pop
jecxz
xchg
jo
or
push
out
sub
insb
and
loope
sbb
popa
inc
orb
push
jl
xlat
xchg
mov
xor
scas
pop
jmp
xor
xor
subl
mov
icebp
mov
cld
fisttpll
movsl
call
clc
adc
mov
sbb
cmp
cmp
xor
pcmpeqw
mov
rolb
jne
in
adc
in
jo
jl
cmp
mov
movsb
sbb
outsb
lock
loopne
inc
or
inc
pushf
add
shlb
test
cmp
pop
cmpsl
imul
out
loopne
repz
loope
repz
int3
das
and
ret
add
cmp
mov
mov
fdivrl
xchg
pop
out
lcall
cwtl
out
jg
cmp
cli
dec
or
repz
jne
mov
mov
fdivrl
adc
mov
insb
out
lds
xchg
fimull
push
and
sahf
std
mov
dec
inc
lcall
xor
inc
jmp
inc
sbbb
les
sub
iret
jg
test
mov
dec
fnstsw
mov
cwtl
cmp
add
mov
or
mov
cmp
sub
dec
cwtl
movsb
pop
or
lcall
adc
rcl
lcall
in
int3
cmp
mov
rorl
out
cmp
adc
stc
out
inc
movsl
lock
cmpsb
adc
fcomp
mov
lea
jno
iret
pusha
daa
xor
mov
pop
std
je
enter
scas
lods
test
mov
add
data16
jle
fstl
sbb
mov
jo
dec
cmpsl
pop
ret
pushf
les
push
int3
jmp
imul
cmpb
jns
add
push
push
pop
inc
ret
pop
inc
push
push
jno
iret
inc
pop
jle
cwtl
sub
jb
adc
std
insb
loopne
mov
mov
test
mov
in
stos
adcb
push
mov
xor
sahf
cwtl
ljmp
adc
flds
inc
mov
add
sub
testl
jp
pop
sub
bound
in
jmp
jnp
dec
lret
fisubrl
dec
jmp
push
jle
inc
mov
adc
nop
outsl
inc
outsl
or
mov
fldenv
mov
popf
pop
pusha
and
mov
sbb
subb
test
pop
add
int3
sahf
fisubl
shll
fucomp
fwait
push
inc
and
fcoml
dec
sbb
mov
jecxz
leave
int
jb
push
xor
inc
fsubl
jbe
fnstenv
mov
mov
das
out
pop
in
cmp
imul
sbb
pop
jmp
cmp
dec
and
aam
in
test
xor
sub
and
xlat
loope
aas
xchg
loopne
test
pop
pusha
test
pop
imul
or
cwtl
pushf
hlt
push
mov
setle
mov
or
and
daa
lds
js
dec
pop
test
int3
jnp
mov
mov
fists
test
adc
cld
mov
bound
mov
pop
push
outsb
psubsw
push
jge
hlt
aas
ret
push
mov
mov
stos
aaa
xor
mov
xchg
cmpsl
mov
test
adc
xor
push
and
stos
and
ja
icebp
sbb
mov
jae
dec
pop
inc
xor
stc
addb
cmp
xor
jle
push
jecxz
gs
addr16
icebp
mov
add
or
rcrl
dec
lds
or
dec
jmp
jp
iret
xchg
jo
and
das
js
and
pop
dec
push
fistl
scas
shll
mov
fwait
lods
sbb
cwtl
rolb
cs
inc
push
mov
mov
xchg
pop
mov
std
inc
mov
test
or
movsl
sbb
xchg
cli
adc
and
mov
or
adc
mov
cs
insl
pop
and
pop
addl
mov
jo
mov
out
outsl
dec
mov
jbe
mov
mov
in
loopne
adc
loope
in
ret
xchg
adc
or
ds
rcl
push
lods
test
prefetch
mov
hlt
pop
adc
fisubrs
fsubrs
lds
mov
pushf
sbb
rol
inc
les
inc
inc
jge
xor
mov
xor
loopne
aas
jbe
pop
sub
xor
dec
or
sbb
leave
push
jo
jmp
push
pop
aad
dec
sti
test
fldt
dec
jge
stc
outsl
inc
add
sbb
in
sbb
or
leave
bound
lea
jnp
xor
mov
push
mov
ljmp
adc
pop
aam
mov
sub
sub
add
arpl
lods
lea
aaa
and
aas
or
add
imul
or
std
lds
dec
and
outsl
ja
cld
cmp
mov
mov
test
ljmp
and
orb
jmp
lods
lods
std
fadds
scas
or
in
dec
fcoml
jge
add
and
shrb
fidivl
dec
cmp
push
mov
out
negl
lock
dec
gs
out
dec
sti
outsl
loope
sub
into
pop
xchg
jae
push
lret
aas
xor
in
cmp
cli
sti
jl
mov
mov
ds
jmp
jl
insl
mov
pause
xchg
sbb
mov
stc
push
test
lods
fnstenv
es
push
mov
lods
lea
mov
lret
dec
imul
pop
push
lret
inc
in
cmpb
adc
imul
xchg
bound
xlat
dec
inc
insb
xor
xchg
xchg
loop
arpl
dec
popf
pop
ljmp
das
fiadds
cmp
enter
xorb
cmpsb
nop
inc
aam
rol
fdivrl
add
sbb
cs
es
inc
aam
jbe
lahf
jb
pop
lcall
mov
or
mov
push
out
in
or
adc
gs
mov
jno
xchg
in
std
stos
dec
aas
jne
pop
mov
mov
stos
aas
inc
mov
or
in
push
ret
in
out
enter
mov
push
mov
push
int
and
xor
stos
push
jnp
jne
jmp
fistpll
ret
push
mov
lods
cld
shr
sub
lahf
add
nop
call
rcrl
mov
leave
ficoml
in
jno
loop
fcomps
cmp
sbb
nop
and
sub
icebp
push
cmpsb
stc
mov
arpl
xchg
ljmp
or
adc
in
pop
loopne
test
mov
in
loope
and
call
or
pop
inc
push
mov
je
xchg
push
call
dec
inc
xor
xor
decb
subb
dec
lea
sub
push
or
sub
out
jmp
xchg
outsl
cmp
pop
or
or
int
js
dec
js
test
fadds
enter
nop
pop
mov
add
sbb
and
xor
or
mov
cmp
shrl
jmp
mov
mov
pop
clc
sub
cmc
inc
add
and
jns
sbb
in
fisubrs
cmpl
jmp
in
insb
sub
sarb
ret
hlt
push
sbb
ss
cmc
dec
or
gs
sbb
call
and
sub
xchg
pop
mov
mov
fbstp
cmp
imul
jmp
inc
mov
shl
pop
jl
div
cmpsb
lea
jb
fidivrl
stc
jbe
inc
or
dec
add
add
dec
lock
pop
push
outsl
mov
test
push
jmp
in
sbb
loope
mov
sbb
aaa
jne
fistl
pop
icebp
or
xchg
das
out
sbb
pop
and
inc
and
xchg
inc
sbb
cltd
adc
stos
loop
rorl
scas
iret
sarb
shlb
inc
shl
inc
les
data16
sub
dec
pop
and
stc
pop
jne
test
push
pop
shll
sahf
or
inc
imul
mov
das
out
ljmp
ret
jns
mov
and
sti
ffreep
sbb
loopne
mov
jp
ljmp
cmp
sbb
divb
rorb
popa
xor
dec
or
sbbl
bound
sbb
adc
pop
jb
jnp
lods
in
mov
xor
cli
outsl
cmpsb
ljmp
pusha
xorl
lock
mov
sbb
adc
mov
or
jbe
xchg
test
cmp
imul
call
pop
jno
cmp
or
or
or
inc
cld
adc
pop
inc
pop
mov
les
jg
xor
mov
rcrb
fmull
push
sbb
mov
std
cmc
out
call
sbb
in
movsb
mov
mov
xlat
adc
mov
mov
xor
movsb
lock
decb
adc
xor
push
push
outsl
subb
fcompl
pop
movsl
insl
out
test
or
lret
orl
and
cld
dec
jnp
pop
push
push
mov
adc
dec
xchg
push
lea
sahf
mov
rcrb
push
sub
mov
rolb
sti
stos
jmp
inc
leave
sbb
mov
adcb
cltd
and
xchg
movsl
sti
shll
stos
dec
fiadds
fisubrs
sub
pop
aam
push
mov
sbb
xchg
lods
mov
cwtl
sarb
jo
cltd
push
insb
ss
push
sbb
rorl
add
int3
jno
cmp
xchg
dec
add
aas
fwait
or
sub
lcall
or
repz
frstor
jo
xchg
pop
cmc
inc
inc
xor
sub
or
jae
xchg
loope
outsl
cmp
cmp
jp
into
test
lret
xor
fnop
cmp
mov
daa
mov
inc
mov
jb
push
jnp
mov
sub
mov
xorl
lds
stos
sbb
lock
aaa
int
lock
inc
imul
sbb
jo
mov
iret
ljmp
ss
cmp
test
ja
sti
jg
mov
jbe
and
cmpsl
push
sahf
cld
das
out
das
or
mov
xlat
pop
mov
mov
jecxz
cmp
fldenv
jmp
pop
pop
xor
arpl
jno
mov
ffree
ljmp
pop
dec
std
int3
fistps
test
lret
mov
pop
sub
test
cmpb
loop
pop
repz
and
jg
fsubrs
mov
int
into
shll
push
sbb
fcmovnb
or
jl
push
fadds
add
cmp
insl
push
cmp
insb
pop
xor
jmp
adc
and
adc
lret
mov
or
push
js
loop
pop
stos
jb
repz
outsb
sti
ret
mov
or
es
xchg
out
pop
or
jbe
inc
aaa
js
adc
add
mov
cmpsl
or
lds
pop
add
cmpsb
mov
xor
push
mov
int
xchg
sub
aad
mov
sti
andb
fdiv
stos
or
lcall
lea
mov
cmpsb
arpl
jge
xchg
xor
jno
sub
out
sub
sbb
into
mov
pop
pop
orl
mov
arpl
jp
and
data16
cmpsl
adc
in
xchg
cmp
xlat
std
xlat
cmpsl
rcll
subl
jecxz
mov
adc
fidivs
into
les
je
jmp
mov
mov
mov
sub
dec
or
div
mov
jge
cmpsl
dec
and
int3
add
push
xor
out
mov
xor
xlat
lea
mov
pop
cmpsb
mov
shrl
dec
jl
pop
pop
lahf
clc
cmp
push
push
jne
insl
pop
shrb
ds
jne
fadds
cmp
or
sbb
stc
cmp
xor
mov
jge
mov
sti
in
clc
adc
or
enter
mov
mov
arpl
loop
inc
in
dec
sub
cmpsl
std
sbb
mov
push
jmp
pop
or
sarb
add
cmp
jle
std
aad
adc
dec
sbb
mov
inc
inc
adc
mov
int3
xor
das
inc
aad
sbb
iret
push
dec
cmp
add
xchg
or
adc
dec
cwtl
in
sub
andb
sbb
out
xchg
dec
mov
jl
adc
aaa
pop
mov
adc
mov
insl
xchg
mov
lds
int
loopne
xor
mov
lods
cltd
outsb
imul
ret
mov
push
mov
dec
dec
testb
mov
push
fistpl
dec
inc
insl
inc
mov
pop
arpl
leave
xchg
dec
xchg
in
sub
leave
inc
stos
mov
cs
push
inc
mov
andb
xor
inc
inc
rorl
mov
pop
ret
push
orl
sbb
sbb
and
dec
jl
push
mov
stos
into
das
fninit
cmp
frstor
filds
push
outsb
push
lea
sbb
or
xchg
cmp
das
insl
sbb
jne
call
test
mov
push
mov
sbb
xchg
cmp
add
push
clc
xchg
insb
mov
xchg
adc
xchg
sub
gs
jecxz
outsb
jmp
mov
into
add
js
lea
loope
push
pop
inc
dec
test
xchg
jle
mov
stc
dec
sbb
movsb
and
xor
cmpb
jno
and
sub
jae
lock
or
jecxz
push
popa
leave
stos
test
cs
xchg
sbb
sbb
cli
loopne
mov
test
sub
jns
sbb
shr
stos
mov
or
jb
cs
je
and
negb
movsl
push
push
test
fnstcw
cli
jnp
sbb
sbbb
ss
ss
sub
addr16
pop
adc
icebp
sti
aaa
ss
push
std
fmul
dec
test
mov
aam
dec
into
fnstenv
shl
dec
subb
or
filds
mov
cmc
inc
jne
sub
push
push
inc
jns
ds
cmp
call
sbb
daa
cli
sub
adc
push
and
stc
stos
xor
stos
xchg
data16
or
push
data16
sahf
mov
fiadds
stc
jae
cmp
push
dec
mov
push
jmp
mov
xchg
cltd
test
xorl
jns
sbb
pop
insb
dec
leave
aaa
xor
and
mov
loopne
lcall
inc
aaa
jnp
fwait
inc
xor
xchg
scas
mov
mov
jle
rcll
adc
pushl
mov
jg
or
std
lea
sti
and
shll
scas
push
xor
pop
sti
fs
movsl
lret
js
xchg
adc
cltd
sub
jb
push
int3
and
sub
idivl
fdivrl
add
ds
xlat
insl
add
icebp
inc
inc
jno
data16
jle
mov
xchg
stc
adc
cmpsl
in
push
sbbl
push
mov
xchg
pop
jg
and
insb
out
push
adc
pop
test
push
inc
mov
mov
adc
pop
jle
sbb
push
lds
dec
sub
cwtl
scas
cld
cli
repnz
imul
sub
mov
sarl
addr16
sub
insb
faddl
test
ret
cmp
and
das
jecxz
push
bound
rorb
sub
push
adc
xor
adcb
int3
ret
leave
rcr
stos
or
rcrb
adc
orl
mov
jmp
jg
or
mov
jo
xchg
stos
in
mov
mov
inc
sbb
add
out
adc
mov
mov
and
xor
jbe
or
pop
and
sub
sub
add
or
cmpsb
inc
orb
adc
jp
xor
aad
test
push
or
mov
cltd
cmpsl
xchg
aad
jg
rolb
dec
fxch
loop
sub
xchg
xchg
idivb
and
mov
popa
push
fdivl
xchg
call
push
pushf
lods
lds
xor
xchg
push
jae
or
out
imul
sbb
iret
hlt
out
cli
cmp
sub
mov
fsubrs
sub
push
mov
adc
and
push
xchg
insl
xchg
add
insb
mov
push
pop
aaa
mov
and
in
fildl
ds
je
clc
loopne
ja
mov
pop
fidivl
das
ds
xchg
mov
fwait
lcall
frstor
push
in
jbe
lret
and
cmpsb
sbb
add
inc
ss
pop
xor
loope
add
sub
push
xor
incb
mov
push
jp
into
insb
lock
scas
divb
and
add
outsl
xor
mov
pop
mulb
lock
inc
sahf
stos
fsqrt
mov
mov
ss
jbe
das
in
pop
mov
lea
aaa
and
cli
push
or
rorl
lret
dec
lahf
pop
jecxz
in
movsb
pop
das
dec
sti
jnp
and
cli
mov
and
dec
sahf
lds
mov
out
xor
push
out
inc
jb
fsts
sbb
xor
mov
xchg
das
mov
fsubr
rcll
paddusb
inc
ret
add
addr16
pop
call
cld
dec
pop
jne
push
mov
imul
ja
pusha
dec
sub
ret
repnz
xor
xchg
test
xorb
mov
bound
stos
cwtl
cwtl
repz
add
fdivrs
xlat
mov
push
sbbb
jno,pn
mov
cwtl
roll
adc
loope
push
fwait
mov
xor
jl
push
call
mov
ret
xlat
cmpsb
stc
out
mov
aaa
popf
ret
mov
mov
fldcw
repz
push
loop
repnz
mov
int3
dec
pop
pusha
xchg
mov
cwtl
push
testb
cmp
mov
fdecstp
dec
xor
or
pop
out
jle
nop
jle
sub
test
adc
sub
xchg
pop
push
mov
mov
scas
mov
adc
stc
shl
xor
sarb
jno
sub
pop
scas
rcll
adc
sub
hlt
push
movsb
imul
or
push
nop
clc
xchg
mov
movsl
cltd
xor
paddd
mov
xchg
xchg
pop
ficoml
dec
inc
jns
sbb
sti
cltd
daa
jmp
jno
enter
icebp
out
xor
pusha
in
icebp
and
pushl
sub
aad
mov
sbb
mov
repnz
mov
push
ficoms
sub
or
popa
lock
sbb
and
jmp
les
add
pop
out
out
fs
shlb
insb
sbb
and
insl
pop
es
cmp
divl
and
inc
xchg
cmp
daa
dec
and
in
leave
es
insb
std
imul
mov
loope
int
movsb
jle
sbb
xchg
sbb
das
ljmp
sbb
cmp
sub
mov
pop
cmp
jg
pusha
adc
or
repz
fsubl
jb
std
sub
sub
daa
cmp
out
ja
pop
arpl
nop
jne
popf
hlt
repnz
add
or
test
xor
sub
fadd
int3
test
and
push
loope
jmp
mov
mov
sub
cmp
sub
fldcw
mov
pop
cmp
pop
sti
imul
es
in
dec
out
into
sbb
xor
xorl
push
jo
xor
add
scas
or
cmc
pop
out
sbb
mov
cwtl
xor
fwait
and
ljmp
ret
or
clc
jne
pop
mov
pop
mov
std
mov
in
cli
inc
add
fstp
mov
mov
mov
cmpb
cmp
or
jo
xlat
popf
lcall
sbb
jle
dec
lods
sahf
arpl
add
repz
das
mov
push
cmc
fsubs
pushf
je
mov
scas
pop
sub
mov
sti
pop
int3
sbb
cmp
leave
imul
inc
xchg
outsl
dec
popf
lahf
lods
xchg
clc
ror
leave
sbb
push
jmp
arpl
push
xchg
xor
jp
int
xchg
scas
icebp
mov
call
insl
push
outsb
idivl
repz
es
jb
dec
dec
mov
daa
mov
rolb
pop
pop
sub
mov
push
dec
and
lahf
cmp
das
mov
dec
aas
daa
fisttpll
cli
lret
movsl
sub
aas
sti
lret
fmul
pusha
in
cmc
xor
cmp
xchg
movsl
mov
je
call
mull
sub
mov
lds
mov
pop
js
pop
dec
jge
adc
imul
cmpsl
cmp
sbb
sub
outsl
nop
mov
jns
ret
iret
jne
xchg
jg
daa
rcrl
out
int3
sbb
cmp
mov
dec
cli
pushf
or
fnstenv
ja
movsb
add
pop
andl
fimuls
loop
jecxz
xchg
dec
fwait
les
xor
scas
test
cmc
push
ljmp
push
xchg
orl
jne
jae
mov
fimull
jp
add
imul
xor
call
filds
inc
shlb
std
cmpsl
xchg
movsl
out
repnz
stc
test
cmp
adc
cmpsl
clc
jg
nop
xchg
enter
insb
xchg
jbe
clc
or
xor
or
push
jg
jl
mov
aaa
fs
sbb
xchg
dec
lahf
out
aam
add
inc
fmuls
addr16
mov
shlb
fimull
rol
push
mov
xor
push
mov
inc
hlt
iret
popf
cmp
aas
arpl
mov
in
in
mov
inc
mov
sbb
mov
inc
scas
and
fs
fistpll
in
lds
fildl
shll
adc
cmp
popl
test
jp
aad
mull
xor
and
jnp
or
in
clc
push
test
mov
sub
cmp
pushf
sbb
pushf
into
mov
inc
jle
int
in
mov
sub
mov
sti
xor
xchg
fcoms
adc
mov
or
push
sbb
lea
loop
sub
jae
dec
add
lds
xchg
mov
inc
or
push
jnp
push
insb
mov
jge
and
movsb
adc
aam
inc
lret
push
add
adc
push
push
roll
lds
movsl
mov
call
pop
orl
lods
adc
test
shrb
out
xor
ficomps
add
orl
pop
out
mov
or
stos
out
adc
inc
pop
jge
inc
push
pop
adc
sub
mov
adc
adc
into
pop
les
push
jns
shll
add
push
outsl
cmp
mov
enter
sbb
pop
movsl
inc
sahf
lahf
xchg
xchg
cltd
push
movsl
movsl
push
mov
aad
jb
sbb
and
dec
dec
nop
xchg
pusha
adc
imul
sbb
test
inc
test
out
adc
cmp
cmp
sub
outsb
nop
aam
idivb
bound
std
cwtl
lea
arpl
lret
paddusb
add
adcb
enter
mov
mov
mov
cmp
and
int3
lds
mov
mov
xchg
mov
xchg
adc
insb
icebp
fwait
cltd
jno
sbb
cld
das
es
inc
pop
mov
cmp
sub
lahf
jnp
js
push
sub
push
jle
cmp
pop
clc
pop
outsl
clc
dec
xchg
cwtl
test
mov
and
mov
dec
mov
lret
mov
cmpsb
iret
and
fsubs
and
pop
sub
shll
popa
dec
inc
cltd
jle
dec
ja
sbb
aaa
push
inc
jb
dec
test
outsl
faddp
loopne
pop
leave
pop
sub
adc
lret
pop
iret
xlat
pop
lret
aaa
mov
mov
xchg
shrl
lcall
aas
fcoms
sub
ret
imulb
popa
xchg
mov
cmp
or
dec
adc
cmp
fisubrl
fdivl
xor
pop
mov
inc
call
mov
idivb
incb
jge
pusha
mov
test
push
mov
int3
pop
popa
add
test
inc
mov
mov
pushf
dec
ret
leave
out
outsl
ljmp
add
aaa
fisttps
or
iret
pop
or
inc
sahf
vcomiss
mov
adc
sub
or
mov
mov
pop
ret
mov
or
scas
push
rorb
push
jnp
data16
mov
repz
pop
jo
rcrl
shll
lret
roll
or
div
adc
jp
pop
or
jnp
lret
sub
dec
jns
dec
mov
js
xor
mov
mov
stc
mov
jae
mov
nop
fyl2x
clc
mov
lret
mov
scas
ja
fmuls
push
stos
int
sti
jle
inc
loope
loope
sub
into
scas
stc
add
sub
in
xchg
rolb
push
pop
jns
scas
pop
je
and
fidivs
ss
sbb
test
faddl
pop
cmpsl
mov
out
mov
fdivrl
xchg
mov
das
add
adc
cmp
shll
mov
jle
cmp
loope
mov
inc
ret
shll
popf
shr
push
jns
repnz
or
pop
mov
ss
xchg
pop
stc
int
cmpsl
sub
jne
or
outsl
fidivrs
sbb
mov
adc
lea
sbb
mov
shrl
mov
out
imul
or
aam
cmpsb
imul
ret
mov
cmp
repz
pop
mov
xor
pop
cmpb
loop
xchg
lods
adc
sub
cmpsb
es
push
sbb
sbb
pop
in
push
movsl
test
xlat
fstp
mov
dec
mov
pop
mov
inc
pop
xchg
dec
xchg
mov
mov
lock
jae
in
and
stc
in
jmp
xor
hlt
jl
jecxz
mov
xlat
mov
xchg
addr16
flds
cwtl
sbb
lods
pushf
int3
add
out
xor
push
and
shrl
jl
inc
in
scas
push
in
push
xchg
popa
dec
xchg
add
jl
hlt
out
dec
mov
add
ret
mov
xor
test
sub
jmp
mov
es
xchg
or
push
imul
das
cmp
lods
testl
xchg
pop
xchg
scas
mov
int3
imul
push
hlt
mov
or
inc
push
lods
or
cmp
xchg
and
dec
fs
pushf
push
cmp
out
or
jp
pop
sub
je
cmc
adc
js
mov
shll
mov
mov
dec
cmp
mov
movups
adc
inc
mov
push
mov
aam
or
jns
jle
mov
arpl
cmc
leave
lret
rcr
mov
out
bound
add
call
cmp
cmc
outsl
arpl
or
lock
icebp
sub
and
adc
clc
cmpl
stos
sbb
popf
loopne
das
dec
jbe
ja
imul
jecxz
add
ja
movsb
aas
shl
out
and
fisubl
or
or
es
jae
adc
fidivl
cmc
in
bound
ljmp
or
popf
mov
adc
push
dec
push
mov
shll
xchg
call
xor
outsb
fisttps
bound
push
pop
inc
inc
data16
sbb
sahf
adc
out
inc
or
nop
cmpsb
test
call
imul
cmp
repz
or
test
cmp
jae
push
cs
jbe
ficoml
adc
pop
in
or
fdivp
pop
mov
lret
sub
fistpll
inc
sub
inc
fadds
pop
mov
cmp
push
lcall
mov
call
sub
xor
mov
mov
les
sbb
fsubrs
insb
cld
sub
cmp
insb
cltd
decb
pop
stos
out
xchg
jmp
into
repz
xchg
pop
adc
cli
dec
fdivr
subl
scas
rcrl
lret
xchg
inc
lahf
push
xor
jp
das
lods
dec
inc
sti
xchg
adc
mov
scas
xchg
out
in
dec
adc
aam
pushf
cltd
add
std
movsb
push
jle
adc
fnstcw
push
xchg
das
jge
aaa
subb
sti
movsl
push
pop
xchg
mov
lds
inc
push
adc
xchg
call
rcr
push
adc
cmc
ss
add
jg
enter
xorb
test
ss
jmp
out
and
rcl
mov
fucomi
nop
scas
enter
sub
fisttpll
fcompl
or
cmp
jecxz
cmc
dec
jne
and
cli
adc
loope
inc
cli
int
hlt
test
cld
adc
jbe
leave
dec
xchg
xchg
xchg
scas
bnd
pop
sar
xchg
lock
cld
aam
adc
fwait
mov
fisttps
fwait
mov
lock
or
or
repz
mov
cmc
adc
mov
sbb
or
add
fidivl
push
mov
xor
mov
and
fs
test
inc
sub
aam
sbbb
inc
pop
int
cmp
sbb
outsl
fcmovnu
or
push
xchg
and
ja,pt
lods
xor
gs
push
add
les
sahf
adc
mov
jg
aam
and
fisubs
mov
cmp
mov
mov
mov
mov
out
ja
pop
addl
push
int
push
mov
movsl
xor
ja
ja
jge
push
pop
je
mov
stos
mov
push
pop
pop
inc
push
lods
jae
fnstenv
lret
mov
or
lahf
ja
sbb
shrb
lret
fdivl
rorl
jae
jne
cld
mov
mov
push
inc
and
xor
les
mov
mov
test
ret
stc
popf
push
pop
lretw
dec
lock
and
pop
adcb
data16
adc
xchg
jecxz
fdivrs
sbb
enter
sbb
sub
push
add
daa
jg
jmp
add
sub
cmpsb
leave
fadd
pop
mov
dec
sbb
lret
rcll
xchg
daa
scas
jae
cwtl
and
inc
test
mov
cli
out
insb
lods
scas
dec
out
push
ficoms
ror
push
jbe
loopne
pop
mov
xchg
push
je
mov
outsb
aam
out
cmp
push
loope
stos
xor
pop
cwtl
xchg
ret
dec
xchg
pop
imulb
pop
dec
loopne
sti
inc
push
cwtl
xchg
sub
ljmp
lret
aas
sbb
cli
mov
lock
jmp
rcrb
je
dec
push
popf
and
into
sbb
inc
mov
adc
dec
fildll
and
cmp
or
fs
push
mov
js
mov
mov
push
adc
sbb
adc
movsl
jo
pop
mov
lods
stos
xchg
jo
xchg
sbb
mov
push
xor
ljmp
sarb
cmp
imul
test
js
rorb
fistl
jmp
test
xchg
inc
aaa
add
int
outsl
mov
ret
cltd
scas
jge
push
pop
xchg
mov
xor
or
addr16
in
xor
jl
dec
pop
iret
pop
xchg
pop
ja
aam
mov
inc
mov
data16
dec
outsb
or
out
push
mov
push
out
jge
or
pop
fcomip
adc
or
sbb
jg
out
inc
sahf
out
push
sub
xor
push
lds
shlb
les
or
xor
mov
xor
push
cmp
test
inc
movlps
negb
ja
mov
cmc
in
dec
test
mov
dec
arpl
fs
in
fldt
inc
pop
xchg
adc
jns
sbb
sti
decl
pop
mov
inc
and
add
into
push
cltd
jge
js
adc
jae
pop
xchg
pop
and
pop
mov
out
push
pfmul
andl
pop
xchg
imull
ja
daa
rep
mov
jo
hlt
test
xor
out
addr16
or
fwait
jne
cli
les
adc
mov
xchg
xchg
call
scas
fwait
jecxz
adc
dec
lahf
mov
js
mov
mov
out
add
pop
movsb
adc
stc
mov
pusha
pop
out
mov
push
pusha
cmp
adc
les
ljmp
push
inc
and
or
insb
sbb
imul
mov
adc
pop
xchg
mov
mov
fwait
mov
mov
pop
xchg
cli
jnp
daa
mov
cltd
cwtl
push
dec
inc
aas
stos
mov
ret
jns
scas
int3
daa
cmp
xchg
xlat
cld
and
inc
adc
divb
jbe
int3
lahf
fsts
loop
sub
jg
inc
xchg
aaa
mov
int3
adc
jbe
push
movsb
out
je
xchg
sbb
repnz
scas
mov
call
adc
inc
pop
rclb
repz
jne
stos
push
insb
int3
pop
and
cmp
subl
pop
and
jbe
sub
out
or
lret
push
or
ljmp
inc
in
lret
mov
mov
mov
icebp
loope
int
stos
adc
add
inc
fisubl
jbe
push
test
sahf
push
xor
inc
popf
scas
mov
push
push
mov
gs
je
add
xchg
inc
out
cltd
icebp
aas
jae
mov
adc
test
gs
out
addl
sub
mov
dec
jecxz
stos
lock
jne
pushf
popa
shl
mov
mov
adc
cwtl
mov
test
mov
insb
xorl
adc
xchg
jl
jecxz
lock
sti
push
sbbl
outsb
repz
push
ret
or
cmp
jns
outsl
add
push
xor
call
out
jmp
mov
lods
add
pop
popa
dec
mov
fstp
.byte
cmp
.byte
sbb
add
sahf
int
loop
sti
aam
es
mov
js
mov
mov
push
push
jmp
mov
arpl
out
and
int3
fiadds
mov
fsubrs
mov
inc
mov
dec
cmp
in
jle
imul
mov
shrl
xor
dec
sub
lret
and
add
and
push
push
inc
jnp
imull
mov
adc
in
cmc
ss
test
adc
mov
jg
xorl
std
sbb
ret
fcoml
dec
mov
ss
bound
push
mov
sahf
sbb
adc
ret
sbb
in
pusha
cmp
fsubrs
sub
xchg
aad
cmpb
pop
dec
mov
inc
jg
lcall
in
and
repz
cmpsl
jae
aaa
cmpsl
fisubl
push
xchg
mov
adc
xlat
stos
lcall
ret
call
lods
std
xor
xchg
or
jb
fs
pop
add
add
inc
insl
xchg
mov
lahf
lock
cmp
pop
or
mov
sub
mov
xor
mov
or
out
sbb
in
andb
pop
and
pushf
dec
ss
push
jge
push
lcall
out
inc
in
mov
jae
insl
add
xchg
and
loope
mov
xor
rol
pop
dec
adc
movsb
push
ja
subb
ficompl
xchg
in
push
int
dec
pop
cmc
call
iretw
mov
shll
sbb
ja
or
leave
xchg
cwtl
shll
insl
mov
xor
femms
or
in
cwtl
sub
in
add
pop
and
les
rorl
sbb
dec
loope
rorl
into
inc
ss
xchg
movhps
loope
sbb
or
aad
pushf
cs
jmp
scas
mov
scas
icebp
and
out
or
sbb
xchg
dec
or
popl
imul
lods
dec
nop
mov
decl
into
sahf
or
jne
cli
sub
jge
sarl
pop
icebp
out
push
pop
and
fldl
push
je
inc
pop
jle
mov
mov
xor
lock
push
repnz
nop
mov
push
cmp
lods
xor
ljmp
xchg
mov
pushf
fisttpll
pop
nop
addr16
pop
xchg
fiaddl
mov
dec
xchg
aas
inc
push
cmpsl
repz
push
stos
test
fbstp
pop
iret
mov
leave
not
jmp
mov
adc
sub
push
mov
sub
decb
notl
mov
cmpsb
cs
insl
xchg
jecxz
or
or
enter
pusha
mov
cld
push
ds
mov
roll
mov
inc
or
jg
cld
mov
inc
mov
rcrb
cli
mov
loop
mov
outsl
cmp
sbb
jge
mov
jae
call
shll
sbb
add
inc
mov
neg
insl
aam
shl
movsl
loopne
xchg
out
imul
pop
push
xor
int
xchg
adcl
out
push
in
das
push
jnp
adc
and
push
stos
iret
add
clc
mov
into
lods
jge
push
popf
sub
int
lds
icebp
adc
into
inc
xor
xor
lea
jecxz
aad
cmp
mov
or
adc
push
addr16
dec
pop
xor
les
and
pop
mov
outsl
dec
mov
lcall
dec
dec
out
mov
pop
mov
sub
lret
sbb
test
int3
jl
push
mov
mov
dec
in
pop
rclb
cmc
mov
jbe
lods
jmp
push
inc
lds
icebp
mov
jg
ljmp
mov
test
repnz
pushf
test
enter
inc
jp
pop
icebp
test
mov
pushf
imulb
outsl
addr16
in
inc
rorl
clc
xlat
mov
xlat
aam
or
stos
subl
in
jnp
mov
jne
or
dec
icebp
nop
loopne
in
cmp
lahf
or
inc
notb
outsl
mov
in
sbb
push
adc
test
daa
iret
lods
add
out
enter
shrl
mov
jmp
inc
addl
imul
aaa
in
idivl
cwtl
mull
jo
enter
cmp
int
out
out
lahf
ficompl
sub
leave
inc
sub
ret
dec
xchg
cli
jl
stc
push
test
push
lods
add
xchg
mov
into
mov
fists
jne
cmp
stos
xor
and
daa
daa
xor
add
pop
push
xor
cs
icebp
rolb
cmp
mov
fs
xor
lahf
idivl
jp
and
andb
stc
int3
out
ficompl
les
and
test
stos
and
shrl
add
inc
lret
daa
stos
loope
outsl
lret
fs
in
jp
pop
jae
fidivl
push
out
adc
das
aas
ss
sarb
in
jns
movsl
pop
jmp
jno
gs
mov
xchg
xor
or
mov
cmpsl
mov
incb
inc
jne
inc
lods
pop
incb
je
les
push
inc
jecxz
cmp
call
sbb
sbb
xchg
stos
ficompl
push
imul
js
and
sub
push
jmp
pop
push
push
sub
xor
stos
adc
lea
fs
fmull
movsb
outsl
bound
and
push
adc
mov
into
aas
mov
xor
mov
dec
sbb
mov
pop
lret
mov
out
xlat
rolb
lret
jl
hlt
cmc
or
loopne
cmp
cmp
mov
push
cld
mov
stc
or
xor
dec
mov
xor
movsl
mov
pop
ja
mov
cltd
sbbb
inc
fsubrs
aaa
cmp
mov
aaa
and
mov
xor
and
rorb
and
sub
int3
pop
mov
pop
xchg
stos
xor
pop
mull
and
cld
and
fnsave
xchg
jg
pop
arpl
push
hlt
shl
into
inc
ficompl
lcall
lahf
rolb
cld
ja
dec
aam
cld
pop
out
nop
dec
das
into
sub
sbb
push
cmp
jno
das
daa
stos
xchg
push
xor
cmovae
pop
stos
mov
iret
out
cmp
leave
mov
outsl
dec
out
sbb
cmpsl
mov
fstpt
pop
movsl
outsl
xchg
mov
dec
mov
add
pop
test
fsubrs
pop
push
add
neg
mov
jecxz
cmp
sub
loopne
mov
sbb
mov
ror
and
xchg
add
add
sub
adc
mov
mov
jno
sbb
adc
add
push
testl
cld
std
leave
xchg
gs
cltd
xchg
lret
cld
idivb
mov
push
sti
add
aad
add
aam
cld
inc
cld
mov
call
xor
mov
flds
mov
and
mov
repz
or
jnp
mov
int3
addr16
stos
aad
out
push
imul
rcll
bound
sub
and
pop
jns,pn
mov
cmp
push
shrl
push
jle
sbb
cld
lock
in
adcl
pushf
mov
rcrl
sub
lods
cmp
xchg
jnp
je
cld
aas
je
aad
loope
fwait
testb
aaa
add
ds
rolb
mov
sbb
sbb
mov
push
mov
ljmp
daa
mov
pop
iret
icebp
inc
mov
pop
in
push
push
jmp
mov
adc
pusha
xchg
pop
pop
mov
add
sti
push
dec
loop
bound
push
inc
fistps
ja
pop
test
in
inc
in
aas
inc
add
jl
cmp
faddl
pushl
push
mov
xchg
mull
dec
adc
sbb
aam
stos
adc
gs
inc
add
mov
ret
imul
lret
insl
adc
adc
test
lret
rcrl
push
test
imul
push
enter
sub
shll
xchg
stos
or
lret
dec
dec
adcb
lods
jb
out
lds
out
xor
int3
ds
int
jecxz
pop
test
xchg
dec
add
dec
jp
stos
in
fsts
stos
xlat
fs
sbb
pop
and
imul
jmp
fbstp
mov
push
push
sbb
push
fdivp
or
rcr
shrb
stc
dec
fsubs
jge
mov
sbb
dec
xchg
fistpl
pop
xor
dec
subb
loop
pop
inc
mov
cs
iret
call
xchg
sub
subl
in
mov
sahf
mov
or
lret
test
andl
or
mov
sbb
jno
leave
stc
loop
and
mov
jp
pop
mov
jno
aad
sbb
out
scas
pop
xlat
ret
lahf
sbbl
xchg
mov
pop
in
cld
cwtl
pushf
xchg
lahf
and
sub
push
push
fwait
repz
mov
aam
stos
aad
dec
and
bnd
iret
imul
filds
pop
jp
xchg
lods
xor
outsl
dec
jno
cmpsl
push
sbb
add
pop
scas
repz
xchg
test
lcall
insl
cli
loopne
jae
mov
inc
gs
jbe
lods
cmpsb
stos
call
dec
dec
and
mov
and
cmpsb
test
enter
dec
mov
lods
jg
dec
pop
sti
in
loopne
xor
out
cmp
lahf
dec
inc
pop
cli
sub
and
stos
dec
addr16
fsubrp
jmp
jbe
mov
lcall
loop
pop
test
aad
fbstp
xchg
xchg
repz
jno
cs
pop
xor
fucom
jb
mov
push
ret
scas
dec
mov
sub
pop
fdivp
sub
es
iret
jbe
test
aaa
add
jl
mov
imul
dec
shll
mov
dec
loope
jmp
dec
cmpsb
sbb
xchg
jle
les
jg
jle
ljmp
scas
push
pusha
loope
shll
push
dec
xchg
test
push
xor
dec
ja
sbbb
add
xchg
icebp
adc
xor
ljmp
inc
pop
pop
cs
insb
iret
ds
lock
pop
dec
pop
cmp
xchg
rorb
les
push
sbb
push
add
jg
push
scas
sar
mov
jae
mov
cli
call
dec
cmp
imul
sub
xchg
outsl
mov
cmp
ja
and
push
mov
pop
gs
mov
rclb
xor
cmp
dec
jnp
push
lods
add
mov
or
adc
aad
icebp
pop
or
outsb
out
jp
dec
add
lea
pushf
js
data16
add
inc
or
pop
loop
xchg
sub
stos
mov
in
hlt
dec
pop
cld
repz
fmull
mov
mov
sub
add
popf
test
pop
aas
mov
arpl
mov
test
mov
adc
add
cmp
or
pop
cwtl
pop
fists
mov
and
pop
mov
inc
mov
rorl
and
adc
and
sahf
mov
clc
outsb
xchg
shlb
jno
andl
hlt
sub
inc
sbb
jbe
jmp
xchg
xor
mov
dec
aas
xchg
cmpsb
js
fnstenv
leave
jmp
jge
daa
cmp
sbb
leave
call
jmp
dec
add
out
cltd
out
movsb
push
push
adc
mov
fimuls
sbb
cmc
and
or
xchg
dec
xor
lods
je
insl
cmp
movsb
out
rcrl
mov
leave
jecxz
inc
pop
sbb
mov
fadd
addb
psraw
cmp
or
aas
jle
clc
not
push
decb
shl
in
fbstp
adc
shll
hlt
mov
subb
stos
adc
subb
dec
sub
sub
mov
fwait
test
cmp
jl
testb
rorl
arpl
jge
leave
outsl
movsl
cmpsb
mov
xchg
adc
push
lahf
inc
xchg
mov
jno
sahf
jecxz
ds
jnp
out
sbb
pop
xchg
pusha
lds
lret
sbb
and
dec
xor
mov
repnz
insb
sbb
icebp
add
mov
jecxz
or
enter
fdivrs
pop
icebp
rorl
cmp
stc
lret
mov
test
mov
xlat
dec
xchg
pop
imul
pop
loope
add
ret
int3
pop
loopne
pop
sub
adc
pusha
shr
lcall
data16
call
xchg
xor
jno
xchg
sub
sub
out
jl
cmp
lea
in
rorb
adc
pop
rcl
sbb
nop
sub
inc
xchg
outsl
decb
loope
lds
mov
pushf
out
adc
aaa
stc
divl
je
push
push
mov
add
out
mov
mov
test
popa
cmpsb
jmp
stc
iret
inc
jmp
pop
dec
inc
sti
out
push
push
dec
das
lahf
sbb
sub
jl
addr16
inc
xchg
and
fcoml
xchg
mov
jl
aas
insb
mov
and
inc
outsl
lods
push
push
movsl
jns
fiadds
push
mov
or
scas
fdiv
stos
repnz
sbb
sbb
mov
test
add
add
and
mov
cmp
movsl
jo
out
enter
cmp
ljmp
xchg
pop
mov
pop
pop
push
cmp
sub
pop
ds
mov
inc
jecxz
ljmp
ret
jb
lahf
repnz
stc
jae
pop
aam
mov
ss
jp
lahf
and
insb
inc
ret
jge
xchg
jge
inc
movsl
xchg
xchg
sub
outsb
data16
inc
mov
nop
sub
dec
dec
dec
xchg
leave
push
cmpsl
or
sarl
add
stc
inc
lahf
out
xchg
xor
and
in
aam
jne
jmp
pop
cmp
inc
addr16
roll
bound
aas
xchg
out
pop
mov
mov
mov
stc
fdivl
inc
jecxz
adc
fdivrs
scas
jge
xchg
ret
sub
jne
dec
lods
lahf
mov
adc
and
mov
mov
push
lock
mov
sub
adc
adc
sub
js
mov
mov
lods
aas
mov
mov
xor
lods
sbb
clc
cmovae
call
add
int
inc
pop
inc
mov
arpl
inc
es
sub
adc
mov
mov
inc
fs
cmp
inc
inc
stc
adc
jecxz
jmp
movsl
xor
inc
and
into
movsl
or
imul
jae
and
sub
ja
mov
fwait
xchg
pop
adc
ficompl
jecxz
cmpsb
inc
mov
jmp
mov
mov
mov
and
cmc
and
fimuls
xor
pop
scas
stos
jmp
fwait
ret
dec
cmp
out
gs
mov
mov
mov
inc
mov
adc
mov
sub
mov
popa
mov
in
jp
inc
test
cmpl
xchg
pop
out
arpl
sbb
jmp
inc
inc
test
fldenv
das
cmp
rcll
dec
pop
sbb
push
les
lcall
fwait
push
fstpt
mov
test
mov
xchg
jg
fincstp
aaa
mov
adc
mov
cltd
dec
out
sbb
lahf
les
sahf
or
dec
or
movsl
jmp
cli
idivl
sub
bound
cmp
jle
adc
xchg
in
jbe
mov
rorb
xor
jne
test
fs
out
into
dec
xorb
mov
sub
iret
mov
rcrb
sbb
popa
roll
loopne
or
jnp
or
out
push
stc
xchg
insl
or
ss
add
movsb
imul
lcall
cld
mov
in
mov
xchg
sbb
and
in
jl
pop
sub
inc
ficoms
jb
mov
dec
jo
movsb
mov
cmp
popa
xor
pop
popa
push
mov
pop
adc
cmc
cmp
addb
push
or
sub
pop
or
pop
adc
and
mov
fldl
imul
cs
xchg
bound
cld
iret
push
pusha
inc
ror
popa
into
fidivrs
lret
fcmovu
dec
adc
and
scas
inc
aad
and
mov
cmp
cltd
fcomps
inc
and
xchg
repnz
sbb
jne
mov
sub
pushf
and
or
cmp
add
gs
inc
and
lahf
push
adc
xor
fsts
leave
mov
push
iret
jnp
stc
movsl
stos
daa
mov
adc
lahf
pop
test
jmp
or
cmp
sub
mov
cmpsl
and
push
mov
or
push
and
xchg
mov
stc
pop
bnd
xchg
insl
dec
arpl
gs
sbb
and
fstps
sub
fcomip
sbb
sahf
pop
cmc
or
fiadds
xchg
mov
mov
mov
lret
mov
push
insb
movsl
inc
dec
ret
and
inc
jns
xchg
jbe
or
enter
je
fldenv
maxps
jle
push
loope
mov
mov
cmp
mov
imul
addr16
jne
lock
cld
dec
or
xchg
push
rorl
sbb
inc
mov
push
and
xlat
and
adc
or
xacquire
mov
xchg
xor
pop
cmp
leave
rcrb
imul
xchg
or
data16
sti
adc
pop
mov
repz
and
sub
add
xchg
xorl
pop
inc
xchg
ret
test
xor
test
push
and
adc
rolb
cmp
mov
cmpsl
popf
push
add
xor
cli
or
je
cs
or
js
xchg
adcl
xor
ret
dec
pop
inc
cmp
stc
outsb
jno
pop
aas
out
mov
mov
fildl
shrb
ljmp
loope
icebp
pusha
lea
cmpsl
rclb
xor
cmp
sub
push
inc
push
and
xor
mov
or
lods
out
adc
jb
sbb
push
imul
test
fldcw
ret
rclb
hlt
mov
xor
repz
mov
adc
loope
dec
lods
jae
mov
xchg
mov
mov
pop
call
les
cld
int3
insl
xor
push
cs
mov
dec
jbe
icebp
inc
in
ret
lcall
or
add
dec
xor
ret
pop
or
xchg
mov
int
iret
sbbl
inc
inc
dec
fildll
mov
jns
mov
lea
cmp
test
mov
ss
mov
faddl
das
and
aas
mov
call
sub
pop
jb
mov
dec
into
inc
or
and
sub
popa
jle
xchg
repnz
xchg
popl
fucomi
mov
xor
popf
jno
dec
bound
clc
aaa
sub
adc
xor
cmp
movsl
xlat
mov
jmp
lcall
sbb
stos
out
test
out
out
ds
decl
das
dec
xchg
shrl
mov
jecxz
or
and
cli
mov
gs
or
adc
mov
ds
mov
daa
frstor
dec
mov
js
push
pop
add
insb
jg
out
in
push
sub
loop
and
cmp
jge
jo
daa
cmp
lea
adc
push
les
inc
popf
popf
subb
js
ds
mov
js
nop
add
cmpsb
and
sbb
test
adc
lahf
sbb
xchg
out
js
adc
dec
gs
test
jle
ljmp
and
call
popf
add
icebp
jbe
adc
cmc
scas
pushf
arpl
gs
or
pusha
daa
pusha
or
fldl
sub
jle
dec
in
xor
sbb
mov
push
stos
cli
add
add
and
jg
xorl
lods
ficomps
xor
add
jecxz
pop
pop
push
push
ficoms
and
andl
fst
outsl
push
cli
pop
es
in
or
or
stc
jg
push
and
into
mov
xchg
inc
inc
xchg
dec
pop
mov
call
lods
cltd
loopne
bnd
daa
mov
fcomps
push
pop
clc
pop
imul
outsb
inc
sbb
push
push
xchg
icebp
pop
cmp
in
pop
movsb
jno
lahf
cld
add
add
cwtl
jmp
mov
sbb
jecxz
mov
and
nop
out
adc
adc
push
loop
loope
in
insb
fidivs
int
xlat
jmp
sbb
sub
jbe
mov
adc
jne
loop
push
dec
subb
test
mov
stos
shl
aas
inc
xorl
addl
mov
clc
inc
jnp
mov
push
pop
inc
outsl
lcall
jle
push
insl
repnz
repz
out
cli
mov
add
dec
arpl
xlat
pop
inc
mov
cltd
in
adc
mov
mov
xchg
lds
das
jb
mov
adc
adc
mov
jg
test
xchg
out
clc
rorl
int
push
xlat
jl
cmpl
fdivrl
pop
out
mov
idiv
ljmp
pop
imul
pop
push
sub
push
dec
push
daa
loope
pop
jo
loop
rcrl
jns
xchg
dec
pop
xor
loope
test
mov
mov
std
xchg
insl
dec
insl
jae
jl
mov
push
adc
div
mov
adc
outsl
mov
mov
xor
pop
iret
or
xor
mov
clc
push
jl
mov
sbb
call
pop
sbb
sbb
pop
mov
ret
sub
xor
and
push
js
aam
test
popa
icebp
sub
xchg
in
jmp
xor
xchg
inc
jge
dec
or
dec
cli
xchg
mov
jp
in
adc
loope
sub
sahf
add
inc
push
roll
lock
and
dec
mov
mov
test
xchg
mov
cmc
or
imul
pop
add
pop
cmp
iret
adc
jp
sti
jb
std
in
popa
lcall
xor
mov
mov
xchg
mov
adc
xor
add
sub
xchg
aam
or
insb
sbbb
test
cli
call
and
mov
enter
or
dec
stos
push
dec
ffreep
mov
add
popa
and
pop
iret
jmp
out
inc
out
dec
cmp
add
jp
sbb
jg
repz
test
icebp
xchg
add
outsl
adc
xchg
cmp
mov
pop
and
ss
xchg
and
jmp
shll
mov
sub
aam
pushf
dec
jle
add
cmpb
lock
or
lahf
popf
shlb
and
dec
and
dec
imul
jnp
test
adc
pop
xorl
fstl
ja
imul
pop
push
aas
popf
js
cld
inc
dec
add
lret
and
pop
add
in
hlt
test
and
mov
les
in
lock
push
cmpb
mov
xchg
add
sub
ret
dec
mov
nop
cmp
or
and
mov
dec
cltd
gs
cmp
jb
push
into
pop
pusha
movsl
stos
xchg
fdiv
or
ret
xchg
pushf
nop
scas
and
push
mov
pop
sbb
lcall
aad
loopne
mov
fidivl
scas
add
addb
loop
cld
loopne
leave
and
cld
mov
fistps
push
push
test
jmp
out
pop
lret
addr16
roll
mov
xchg
scas
adc
fsubs
in
ljmp
insb
nop
lahf
sbb
popf
jnp
cmpsl
icebp
inc
or
repz
test
shll
scas
ljmp
mov
rorl
shl
js
xchg
and
scas
movsl
fidivl
lds
lods
pop
mov
cmc
imul
lahf
negl
in
jo
mov
push
repnz
cmc
jne
dec
mov
push
mov
lahf
jge
clc
fimuls
out
mov
jp
repnz
push
xor
mov
mov
addr16
test
and
sbb
scas
fisubl
mov
add
mov
xor
push
dec
sahf
cld
test
pusha
pop
sbb
sbb
cmpsl
or
cmpsl
add
push
or
andl
push
ret
seto
cld
sub
repz
fmuls
jo
xor
fdivp
imul
push
das
sub
ljmp
into
mov
lock
or
xor
call
adc
gs
pushf
xchg
xchg
jo
add
enter
out
push
mov
mov
lds
call
cmp
movsb
xchg
loope
nop
cmp
lea
mov
sarb
das
inc
fwait
mov
lea
cmp
sarl
ficomps
and
orb
out
cmp
int3
sub
iret
out
sti
lret
insb
cmp
or
pop
inc
icebp
inc
push
and
mov
aaa
sbb
cmpsb
jge
push
lods
addr16
repnz
loop
negb
cmp
or
iret
mov
inc
outsl
adc
insb
lods
jne
adc
test
hlt
pop
in
pop
mov
fucomi
ret
cli
movsb
sbb
add
rcll
push
add
mov
add
add
outsb
flds
sub
out
in
loope
xor
sbb
cmp
push
out
ret
outsl
pop
sub
fstpl
mov
ud0
ss
cmp
loope
mov
nop
movsb
mov
popa
in
sbb
je
cmpb
test
test
imul
push
adc
xchg
adc
test
jo
mov
mov
inc
je
lcall
jle
imul
ss
xchg
popa
mov
std
add
and
pop
mov
dec
loope
jl
repnz
adc
adc
push
dec
clc
and
push
aas
cmp
mov
bound
in
push
xchg
add
cmp
and
daa
or
les
repz
sub
mov
andb
test
repz
sub
test
in
clc
stc
lods
sub
pop
xchg
mov
lret
inc
fidivl
clc
xor
sti
and
inc
adc
lods
cmp
cmpsl
clc
fcmovne
sub
jnp
das
hlt
pushf
insl
xchg
movsb
sbb
data16
and
stos
call
shrl
mov
sbb
adc
testl
fists
sbb
push
add
lret
ljmp
push
fisttpl
jmp
mov
mov
jg
adc
ljmp
aas
sub
aaa
cs
pushf
sti
inc
xlat
lods
adc
xchg
xchg
cmp
ss
imul
iret
mov
hlt
enter
shlb
loopne
in
lds
insb
ret
jae
repnz
dec
mov
mov
pop
pop
out
std
sub
sti
inc
adc
mov
xor
dec
pop
ja
fdivrl
add
repz
mov
pop
mov
shrb
out
push
pusha
push
insb
call
shrb
adc
rol
push
xchg
gs
cmp
xorl
sub
push
add
pop
inc
xchg
in
sub
stos
jmp
leave
test
push
mov
data16
insb
mov
getsec
cmpsl
mov
xor
sbb
int3
inc
cmpsl
cmp
outsb
jg
inc
iret
arpl
inc
bound
loope
push
xor
stos
loopne
mov
bound
std
xor
sbb
sub
cld
pop
imul
jne
jno
jmp
jns
popa
push
ljmp
push
out
cld
push
stos
mov
repz
leave
adc
dec
test
xchg
xor
xlat
push
int3
push
jmp
push
nop
cmpsl
out
push
add
out
add
nop
and
xchg
ret
in
fistps
aad
push
inc
lahf
repz
es
leave
outsb
arpl
daa
jo
rorl
mov
repz
mov
lahf
xchg
inc
test
xchg
in
lret
dec
outsb
jg
xchg
dec
mov
adc
call
sub
jo
push
loope
mov
popa
in
xor
mov
ret
mov
cmp
xor
pop
lods
adc
les
mov
aad
jg
and
lods
xchg
cmp
dec
dec
sbb
insl
or
cs
les
aaa
int3
inc
pop
push
mov
lock
in
mov
bound
sahf
jne
shlb
sub
jg
cltd
test
add
incb
mov
jge
mov
jno
lods
mov
outsb
loopne
ja
clc
jns
iret
xchg
sahf
iret
test
cmp
jp
sbb
add
xor
pop
adc
pop
mov
xor
lods
cmp
daa
ret
fdivs
xorl
pop
xor
jns
xlat
popa
cs
in
push
lret
push
ficomps
aas
jo
pop
inc
jnp
call
jno,pt
inc
xchg
loop
je
shlb
mov
inc
jge
lcall
pusha
pop
cmp
lea
faddp
mov
sahf
sarb
pop
in
outsl
and
int3
cmpsl
inc
mov
or
daa
pop
mov
jbe
pop
je
lock
push
mov
lods
cmp
out
ss
shrb
scas
in
cmpsb
xor
xchg
inc
sub
loop
push
xor
test
mov
dec
jns
jmp
enter
fnsave
xor
inc
push
xor
or
imulb
adc
pop
mov
bound
or
repnz
mov
xor
shrb
sub
ret
call
xchg
pop
cmp
cmpl
add
cmp
mov
dec
mov
sarb
xlat
push
addr16
pop
ret
scas
outsl
out
ret
rcrb
mov
xor
fs
xchg
popf
add
mov
dec
cld
popf
ret
cli
pop
lcall
push
icebp
sub
pop
lcall
daa
out
imul
dec
mov
mov
adc
pop
cmp
jecxz
mov
jge
ror
inc
fninit
lret
call
sbb
mov
mov
outsl
int
dec
movsb
cmp
aas
dec
pop
mov
outsl
lock
out
fs
lcall
stc
push
pop
scas
mov
cld
mov
mov
xchg
xor
std
inc
shr
ds
jo
dec
sbb
xor
pop
les
mov
add
cmp
mov
cmc
jne,pt
xchg
push
inc
cwtl
jae
xor
out
and
mov
jecxz
push
sub
adc
cli
jno
cmp
dec
out
cmp
adc
es
nop
push
das
add
jb
enter
jp
xchg
in
pop
add
popf
sub
lea
pop
mov
mov
xor
aaa
pop
lock
inc
lds
mov
push
lahf
stos
dec
add
xor
pop
add
jmp
adc
cs
xchg
faddl
pusha
jp
cmp
add
shlb
jle
adc
subl
hlt
mov
xlat
out
adc
push
pop
divb
in
lea
ret
in
inc
insb
addr16
adc
inc
arpl
dec
ja
les
je
lret
ret
out
pop
icebp
fidivs
test
cmp
pop
dec
push
inc
lock
sahf
mov
add
pop
cmc
mov
xchg
cld
sbb
loop
sbb
xchg
fdivl
push
mov
test
push
call
or
mov
fdiv
inc
xchg
cmpsl
jge
rolb
in
scas
insb
sub
jmp
adc
sahf
mov
es
jns
mov
out
sub
xchg
or
cmp
dec
sub
andb
andw
cmpsb
mov
push
jae
outsb
jne
mov
sti
push
dec
sti
dec
andb
in
adc
sbb
push
or
movsb
cltd
adc
push
ret
pop
popl
push
ja
dec
sub
adc
or
inc
and
xlat
dec
in
push
lahf
scas
test
orl
js
xor
mov
imul
imul
fdivrl
int
ljmp
lahf
lea
mov
sbb
pop
imul
lahf
aad
push
nop
dec
sahf
fsubs
call
iret
in
mov
dec
lock
and
fs
ret
xor
jno
loopne
cltd
loope
pop
imul
sub
xchg
aas
test
inc
fwait
jecxz
mov
cmp
cmp
xchg
cwtl
xor
test
mov
or
repz
test
sub
scas
jnp
and
push
iret
jge
mov
mov
pop
sub
sarl
daa
mov
mov
xchg
push
xor
push
cmp
incb
ret
cmc
mov
or
xchg
rclw
xchg
sub
shlb
push
jae
mov
ds
mov
ss
jmp
push
pop
xchg
lea
repz
xchg
push
jge
call
in
clc
xor
mov
lods
xor
jb
push
addb
jmp
sbb
sub
out
xor
jmp
rcrl
std
or
rol
jecxz
imul
push
leave
stos
popa
xor
test
inc
adc
jge
push
xor
mov
movsl
dec
sbb
mov
and
pop
mov
fiaddl
push
mov
inc
imul
xor
sbbb
shrb
das
movsb
out
mov
dec
ljmp
sub
mov
aam
push
pop
cli
out
or
inc
sub
subb
in
ss
lods
stos
aad
xchg
sbb
adc
out
mov
call
out
in
test
cmp
xor
xchg
dec
inc
repz
add
movsb
aam
call
sbb
pop
js
dec
test
push
dec
lcall
mov
fwait
loopne
out
shrl
idivb
pop
cmp
test
movsb
jg
test
sub
push
aad
adc
mov
mov
sbbb
dec
in
or
pop
add
push
xchg
addr16
xchg
add
bound
das
jns
xor
dec
mov
cs
fbstp
rcr
jge
cmpl
mov
push
mov
lds
xor
mov
leave
int3
adc
mov
scas
and
iret
sbb
xor
outsl
push
xchg
bound
rcrl
or
mov
xor
adc
out
movsl
sbb
shl
stos
dec
pop
pop
pop
lock
mov
daa
mov
jne
lcall
push
ss
clc
or
xchg
jnp
mov
sti
jb
adc
push
lret
add
dec
in
pop
fcmove
pop
inc
jb
das
outsb
push
jge
xchg
out
movsl
ljmp
push
sbb
rorb
pop
gs
out
lahf
push
or
xor
mov
das
lret
and
mov
call
add
sarb
and
test
popl
in
pop
cltd
lret
into
pop
xchg
pushf
jl
es
pop
imul
mov
cmp
imul
popa
xor
clc
pop
xor
sahf
hlt
push
mov
sbb
lods
mull
add
std
fsubs
inc
movsb
dec
xchg
pop
inc
sahf
jae
adcb
aaa
push
mov
mov
pop
add
rol
negl
fiaddl
outsb
adc
testl
scas
xor
into
push
mov
mov
add
imul
sarl
sti
divb
add
jmp
sbb
add
sbb
je
jae
push
daa
scas
repnz
mov
mov
lretw
and
repnz
xlat
sahf
sbb
and
dec
and
mov
cmp
sub
in
insb
and
insb
out
jmp
imul
xchg
aas
sub
fidivs
nop
or
mov
stos
mov
popa
test
mov
les
sahf
cmpsl
dec
inc
xor
mov
xorb
scas
mov
out
outsb
data16
insl
stos
dec
jp
push
adc
rolb
mov
inc
iret
mov
test
movsl
popf
jg
lahf
mov
jp
andl
xor
push
xorl
lahf
lock
mov
or
fmull
popa
xchg
lods
add
xor
mov
enter
pop
xchg
pop
je
push
sbb
mov
cmpsb
out
scas
push
mov
sub
gs
cmp
shr
mov
and
inc
add
or
imul
xorb
xlat
fsubs
rol
adc
jl
xchg
fsub
stos
aam
nop
ret
rorl
xchg
push
mov
cltd
sahf
jbe
mull
xlat
add
mov
std
mov
dec
adc
jbe
divl
or
es
lcall
ljmp
mov
or
sub
jo
icebp
lret
test
dec
stos
jle
cmp
and
cmp
aaa
rcll
dec
cld
dec
pop
xor
idivb
push
jnp
fistpl
jmp
je
aad
in
jecxz
out
inc
in
xchg
mov
inc
push
fadds
adc
enter
sbb
mov
mov
mov
rcrb
insl
ds
imul
dec
cli
in
outsb
imul
push
add
xchg
out
subl
fldt
add
out
jmp
pop
jl
and
lock
xor
xor
in
dec
mov
xchg
xor
adc
clc
pop
pop
jmp
inc
seta
lret
or
das
mov
mov
mov
add
popa
pop
fnstcw
stos
cmc
int
dec
push
rcll
cmp
filds
inc
jp
rcll
add
lds
or
jl
mov
jge
test
mov
stos
sahf
movl
popf
or
mov
push
sub
jno
mov
xchg
jmp
mov
cmp
xchg
pop
lcall
subl
lea
and
std
cmp
filds
test
cld
dec
cmp
push
arpl
mov
pop
pop
dec
jmp
test
outsb
icebp
mov
jnp
in
stos
movsb
and
stc
sub
sbb
jmp
mov
xchg
test
xlat
dec
mov
popf
fisubrl
pop
mov
hlt
test
push
aad
or
int3
mov
mov
fstpl
faddl
leave
loop
enter
xor
cmp
adc
sub
jle
pop
cmp
aas
fwait
sub
fwait
jecxz
insl
pop
sub
sbb
je
cmpsb
hlt
mov
ja
sbb
dec
adc
insb
sbb
mov
pop
shrl
xchg
mov
or
push
adc
ret
or
scas
testb
and
call
loop
clc
jb
mov
ja
addb
sbb
add
xor
xchg
xor
icebp
mov
aam
mov
and
dec
jno,pt
push
add
fldl
sar
and
into
test
enter
pop
sub
icebp
bound
je
sbb
ret
popa
out
cmp
add
sbb
es
cmpsb
or
pop
notl
push
shll
rorl
xchg
es
mov
or
outsl
aaa
add
cltd
in
gs
test
push
jb
pusha
sbb
or
and
mov
mov
adc
es
dec
or
pop
or
test
arpl
in
pusha
sbbl
dec
adc
adc
imul
gs
arpl
inc
call
pop
bound
or
adc
into
or
cmc
out
loope
ret
movsl
aas
pusha
and
aam
cli
js
cmp
lods
inc
adc
and
mov
xlat
aaa
aam
xor
mov
imul
lock
add
sbb
jo
push
cmp
jle
pop
subl
or
add
and
fnstcw
sub
pop
and
into
cmc
add
scas
jb
xchg
push
push
out
xchg
sub
xchg
xchg
inc
push
xor
neg
pop
cs
mov
lea
jecxz
clc
push
mov
dec
push
mov
lea
jle
faddl
jns
mov
pop
push
or
mov
jne
mov
add
push
clc
xorl
lcall
sub
sub
sahf
ret
jle
nop
mov
push
ss
sbb
jp
xchg
and
xorl
push
add
push
in
sub
dec
xor
dec
dec
imul
pusha
push
out
adc
xor
mov
cmp
and
jne
or
in
ss
xor
stos
mov
mov
pop
cmp
jo
xchg
cmp
popl
push
xchg
loopne
gs
outsl
push
ret
notb
xchg
jecxz
jmp
adc
cmc
aam
dec
cmc
pop
inc
and
ja
je
cmp
sbbl
rol
testl
clc
in
xchg
pop
push
mov
push
iret
sub
sub
xchg
lret
xor
cmpsl
data16
gs
leave
pop
ja
jmp
bound
orb
mov
inc
dec
mov
dec
test
mov
stc
jb
fdivr
lock
push
adc
pop
push
shll
adc
mov
inc
fcoms
xor
hlt
cltd
call
sub
add
out
aad
push
pop
mov
cmpsl
xor
leave
jmp
jno
and
adc
rcl
fidivrs
dec
cmp
adc
movups
add
lahf
mov
add
test
pop
data16
adc
mov
pop
sub
mov
scas
lcall
cmp
cmpsb
jge
ds
jmp
and
push
pause
pop
sub
aas
lea
fwait
shll
rep
sti
movsl
cli
popa
xchg
movsl
mov
aad
ljmp
das
dec
cltd
sub
add
mov
jns
push
push
cmpsb
xor
xor
sahf
jl
int3
sbbl
mov
push
xchg
out
dec
popf
mov
and
ljmp
or
fisubl
addb
inc
ljmp
pop
or
fnstsw
fcmovnb
shrb
mov
lods
notl
adc
push
mov
add
stos
lods
add
ret
je
insl
rdpmc
cmc
inc
mov
orl
jne
mov
pop
jo
sbb
adc
clc
cli
imul
xor
cmp
mov
lea
lods
sar
or
mov
cld
in
mov
adc
and
pop
adc
int3
or
sti
sarb
push
sti
sub
notb
or
sbb
jp
mov
and
push
mulb
lds
push
sub
cwtl
jbe
or
xchg
into
add
cmpsb
cli
xchg
or
mov
mov
ljmp
pop
push
stos
sahf
data16
push
icebp
movb
cli
pop
scas
and
adc
mov
jne
gs
daa
jno
les
in
xchg
lret
add
iret
or
das
pop
ss
cmc
and
jmp
pop
add
sbb
and
icebp
jecxz
adc
mov
push
daa
xor
xchg
jle
in
jne
push
mov
aad
sub
addb
mov
pop
pop
sar
lahf
pop
in
shll
and
jmp
out
push
sub
sbb
push
xor
mov
fidivs
or
in
xor
lods
insl
sbb
ret
xchg
xchg
xor
mov
iret
sub
pop
xor
mov
das
xchg
aad
mov
push
add
mov
push
jle
sub
xor
outsb
pusha
xor
repz
dec
movsl
cmpsb
inc
mov
ss
push
sbb
loopne
rorl
mov
jb
add
jmp
cmp
xor
pop
in
mov
stc
clc
mov
ret
inc
cs
fldln2
mov
pop
out
stos
lock
mov
shlb
sbb
ret
mov
pop
cltd
movsl
int
push
or
mov
pop
fnstsw
in
insb
fcoml
shll
jmp
movsb
push
pop
or
inc
test
xchg
dec
dec
push
adcb
imul
in
or
movl
or
clc
pop
push
mov
adc
sub
xchg
jp
insl
jg
dec
iret
sti
cmc
in
cmc
mov
and
jp
repnz
out
test
out
fbstp
cmc
and
mov
push
in
iret
mov
or
pop
in
and
dec
aam
push
in
sub
lock
mov
sbb
adc
aaa
fnsave
scas
jmp
sbb
outsl
cmp
fwait
jae
and
sahf
push
jb
jl
xchg
mov
xorb
out
cmp
std
insb
loopne
push
ret
adc
cmp
js
mov
sub
xchg
push
push
in
orl
sarl
mov
or
dec
sbb
adc
xor
sub
and
andl
cmp
mov
mov
int3
aas
xor
jl
xor
es
xorl
xchg
cmp
inc
xor
mov
sbb
outsl
sub
and
jp
das
pop
push
mov
jo
mov
or
jmp
xchg
or
add
stos
adc
imul
mov
jne
xor
jns
cmp
stos
sahf
rcll
pusha
divb
rorl
push
fistpll
ror
cltd
sbb
mov
test
stos
lock
dec
mov
sub
jmp
adc
movsb
jb
test
mov
dec
popf
data16
icebp
scas
idivl
jb
mov
jmp
xchg
push
inc
xor
mov
inc
movsl
scas
in
enter
lret
sub
lcall
inc
mov
mov
sub
jns
xor
adc
fxtract
cmpsb
ds
mov
push
sub
dec
je
cwtl
pushf
cmp
dec
mov
dec
mov
adc
fnstcw
pusha
stos
repnz
fsts
cmp
cld
jnp
dec
mov
cmpl
inc
jae
popa
mov
jle
jnp
subl
in
les
sub
sbb
lods
add
sbb
fsubl
imul
mov
aad
insl
jae
sub
mov
xchg
ret
out
test
scas
sbb
mov
arpl
lret
and
mov
xlat
xchg
ja
push
jbe
arpl
push
out
test
lcall
push
mov
cwtl
ljmp
stos
test
adc
cmp
mov
cs
push
lock
and
rcll
sub
ror
and
xchg
sbb
popa
jae
mov
arpl
mov
dec
cmp
push
pop
bound
cld
push
fisubrl
cmpb
andnps
xchg
sub
mov
cli
push
push
imul
pop
enter
mov
xchg
clc
icebp
js
gs
sub
sbb
cmc
outsl
or
xor
inc
cmp
mov
inc
xor
in
shrb
xlat
xor
mov
ljmp
sbb
mov
add
stos
mov
jp
nop
filds
dec
pop
inc
repnz
neg
xchg
mov
fs
jo
nop
adc
aam
fstps
es
xchg
pop
dec
add
andl
cmp
inc
inc
movsb
push
adc
std
push
xchg
ss
mov
call
fs
outsl
push
push
pushf
jecxz
in
in
and
jmp
ret
fistl
add
test
jno
loope
xchg
pop
xchg
jmp
pop
enter
pop
aam
hlt
add
sub
mov
xchg
push
cld
cmp
push
cmpl
popa
inc
adc
and
push
dec
and
mov
lods
jno
cmp
dec
test
fnstsw
ljmp
sbb
adc
dec
sbb
lcall
jbe
lods
push
cmc
mov
paddsw
mov
sbb
sub
xlat
fistl
sbb
or
mov
in
arpl
xor
bound
insb
inc
je
scas
push
ficomps
gs
std
int
gs
sub
sbb
addl
adc
scas
dec
adc
mov
mov
xchg
insb
adc
cmp
pop
jmp
hlt
aad
mov
and
in
inc
inc
lods
cld
xor
cmpb
jl
in
jg
leave
pop
mov
sahf
cmp
gs
jno
dec
aad
iret
lret
loope
das
dec
imul
add
bnd
dec
scas
imul
xchg
or
mov
int
xor
int
jnp
jbe
test
sub
inc
inc
jo
push
push
or
mov
jb
xor
test
pusha
mov
pop
pop
in
js
inc
push
fsubp
mov
sti
and
bound
mov
inc
dec
fs
dec
pop
test
jns
push
or
mov
xor
ljmp
cwtl
mov
jnp
imul
and
movb
fs
mov
cmc
jo
fwait
xchg
sub
fs
sbb
int3
xchg
hlt
mov
mov
jmp
xchg
rorl
cltd
insl
pop
xchg
test
scas
hlt
pop
stc
mov
sbb
mov
lods
test
mov
ljmp
scas
jl
mov
push
movsl
push
xchg
loope
add
aad
xor
xchg
dec
sbb
xor
jle
add
push
test
jo
scas
inc
shlb
sbb
sub
ljmp
cwtl
test
leave
iret
xchg
pop
es
dec
dec
adc
xchg
add
subl
dec
es
xor
stos
call
adc
sbb
pop
int
mov
call
out
popa
cs
aas
adcb
pop
or
sbb
jno
xorl
jle
dec
je
dec
aad
pop
mov
jle
call
movsb
or
adc
xchg
pop
mov
push
push
out
pop
dec
xchg
fiaddl
xchg
xor
call
or
dec
ret
jb
lods
addr16
xchg
imul
repz
lock
fwait
push
jmp
push
sbb
xor
mov
iret
mov
push
lret
xor
pop
aaa
mov
pop
inc
dec
andps
dec
out
iret
sbbl
rcl
shlb
sub
lahf
dec
sbbb
mov
mov
mov
xor
loop
sub
mov
mov
mov
scas
rcl
inc
xor
and
and
jbe
inc
mov
push
mov
in
fwait
cmc
mov
gs
jno
xchg
addr16
inc
jmp
pusha
and
in
cwtl
cmove
lahf
sub
xchg
imul
out
xchg
adc
addb
jmp
shll
lahf
icebp
add
test
call
or
mov
out
in
add
lret
sbb
popa
or
jecxz
shrl
xlat
ds
or
clc
push
data16
stos
mov
dec
or
jae
sub
mov
in
mov
popf
inc
sbb
adc
sbb
sti
lods
mov
fs
or
mov
pushf
loopne
add
mov
mov
adc
xchg
dec
ds
push
add
cmp
mov
jne
and
push
repnz
sub
xor
push
push
lahf
cwtl
vpaddsb
push
iret
xchg
faddp
cmp
mov
jbe
push
cmpl
test
nop
fiadds
cltd
xorb
jae
ret
mov
addb
ljmp
pop
adc
int
push
mov
mov
repnz
sub
mov
sbb
enter
imul
push
in
lods
ss
out
xchg
fs
adc
lds
push
or
push
cmp
mov
movsb
aaa
mov
mov
ret
push
jg
and
mov
mov
pusha
hlt
and
xchg
hlt
pop
lret
imul
and
adc
sbb
sbb
test
push
or
xor
inc
and
and
mov
pop
pop
movsb
pop
xor
imul
dec
shll
pop
bound
mov
mov
push
jg
mov
insb
sub
mov
and
lea
bound
or
movsl
push
or
daa
stc
stos
out
test
loopne
pop
int
fisttps
sahf
add
jno
push
fcoml
shrl
cmp
cltd
adc
cmp
dec
push
call
push
lcall
push
out
adc
cmpsb
mov
jecxz
xor
dec
jmp
repnz
imul
jbe
push
dec
repz
push
cld
test
pusha
jl
pushf
popf
mov
call
cltd
and
sub
test
in
or
xor
dec
popa
fdivs
addl
sbbb
and
shlb
jmp
enter
popf
add
fcoml
dec
sti
push
sarb
sbb
push
imul
ret
add
push
jl
fsts
jns
sbb
lret
cmpsb
lods
push
mov
dec
popa
mov
xchg
enter
xchg
or
insb
aad
xor
in
jbe
add
or
cmp
sbb
scas
mov
repz
xor
rcrb
arpl
in
adc
das
popa
cmpsl
push
icebp
cmp
mov
pusha
lea
sub
hlt
clc
jns
stos
iret
and
ret
mov
out
inc
in
mov
mov
dec
int
rclb
lcall
jnp
sbb
cs
cltd
push
pop
pop
sbb
mov
cmp
aas
xor
repnz
and
hlt
mov
xchg
fidivl
inc
test
lret
mov
adc
cmc
sub
push
outsl
cmpsb
add
mov
add
pop
jl
enter
sbb
mov
adc
mov
push
xor
or
jg
test
ds
jnp
lcall
into
push
jbe
fsubs
mov
icebp
cmp
xor
sub
arpl
orb
enter
jns
and
adc
or
xlat
int3
mov
in
pop
pop
cmc
adc
xlat
dec
das
mov
push
cmp
call
dec
fisttps
cmc
test
jb
adcb
mov
das
xchg
int3
add
inc
je
mov
sti
rolb
daa
lahf
sub
rorb
push
mov
jns
jno
jge
and
imull
push
mov
leave
les
mov
leave
std
fisubl
or
jg
mov
lcall
arpl
aam
adc
insl
cmp
inc
sub
xchg
xor
jnp
cli
sub
mov
gs
push
xor
xor
test
jbe
gs
out
mov
psubsw
mov
call
test
fldl
stc
mov
fcompl
es
rcrl
dec
pop
test
outsl
les
xchg
imul
rorb
je
xor
adc
test
nop
imul
cmpsl
xchg
jle
test
push
push
add
push
push
add
andl
jnp
sbb
int3
imul
lods
mov
push
out
mov
dec
mov
and
cmpsl
mov
adc
test
das
dec
icebp
cmpl
lods
fxch
jl
sbb
and
cmp
test
inc
jg
jbe
lods
lret
test
fdivr
ljmp
adc
imul
out
cs
jle
je
add
in
mov
xor
mov
fs
xor
cmpsb
mov
jge,pt
and
popf
sbb
adc
mov
in
xor
pop
fxch
sub
mull
sbb
jne
jp
dec
test
imul
pop
sbb
fadd
decb
cmpsl
jp
sbb
lret
and
lds
or
jo
sti
iret
test
std
mov
mov
shr
push
or
imul
das
std
dec
jo
xchg
and
or
outsb
cmp
sub
les
or
fsubrs
or
decb
lcall
sub
dec
hlt
incb
ret
or
adcl
inc
js
and
fmul
and
rol
jnp
xchg
jg
sub
roll
xchg
or
ret
inc
insb
pop
pop
push
ds
add
cmpsb
mov
stos
fbstp
dec
mov
adc
or
cmp
dec
mov
mov
cmp
js
mov
dec
popa
xchg
mov
jbe
loope
and
mov
mov
jnp
mov
push
cli
xchg
cs
push
insb
xchg
xor
jns
mov
aam
cmp
lea
leave
sub
mov
ds
xchg
sub
push
stos
stos
das
and
loope
mov
mov
icebp
jle
daa
cld
dec
mov
xchg
sbb
xor
inc
mov
clc
lea
pop
stos
gs
xchg
loope
jbe
push
dec
cmpsl
popf
mov
mov
out
scas
pop
stos
test
adc
cld
push
iret
enter
into
sti
jecxz
jae
cld
jge
sahf
add
push
fldenv
adc
inc
cmp
or
cmc
xor
sti
fucomp
sub
rclb
clc
add
jns
scas
push
inc
inc
loope
jmp
fdivrl
in
cmp
mov
popf
sbb
bound
daa
jge
lds
xor
jp
pop
lahf
shrb
rcrl
dec
xchg
xlat
in
jp
fxch
and
pushf
jle
fwait
mov
cmp
mov
fsubl
dec
cmp
mov
out
and
xchg
push
xchg
pop
lea
das
mov
mov
mov
mov
mov
ret
xor
add
sbb
pop
roll
out
pop
out
cmp
dec
cs
mov
mov
das
inc
fxtract
pop
or
add
mov
js
mov
sub
insl
push
iret
mov
popa
push
faddp
cmp
cmp
imul
mov
stos
sbb
inc
sub
mov
pusha
hlt
stc
iret
in
cmp
ljmp
mov
rclb
sti
add
lret
inc
or
sub
lcall
jle
outsl
mov
sub
lea
xor
rorb
cmp
sti
pop
fldcw
xor
out
push
inc
xchg
push
std
and
dec
pop
sarl
sub
push
mov
pop
into
repz
movsl
and
adc
add
mov
stos
call
imul
adc
adc
sub
cld
jmp
lock
jnp
or
std
lds
inc
movsl
aam
adc
repz
jp
fnstcw
sub
add
mov
and
in
cmp
or
sub
ja
leave
jb
cltd
mov
jmp
add
mov
xchg
out
addr16
das
push
test
or
repz
or
cmp
repz
dec
aaa
fistpll
lret
bnd
mov
mov
xor
lret
pop
mov
hlt
pop
mov
push
leave
cmp
jle
in
cs
cmp
adc
cwtl
lea
mov
jg
sub
mov
add
bound
adc
mov
inc
lock
mov
and
push
jp
popa
jmp
insl
xor
test
jno
push
adc
jg
jecxz
repnz
hlt
sahf
pop
mov
push
pop
pop
inc
insb
pop
cmp
movsb
and
sbb
inc
dec
mov
fwait
out
jo
repnz
mov
out
push
loopne
dec
rol
inc
imulb
or
push
xchg
ljmp
mov
ja
jno
aam
cmp
pusha
in
popf
push
pusha
jmp
inc
mov
mov
aaa
enter
lret
test
sbb
sarb
push
adc
insl
mov
icebp
push
repz
adc
stos
ljmp
dec
or
push
insb
cld
insb
sub
cld
jle
call
jl
sbb
mov
pop
inc
sub
test
repz
hlt
je
das
leave
js
push
push
roll
push
cmp
sub
les
fcomps
negl
inc
arpl
aas
int
xchg
cli
mov
out
push
adc
and
jge
arpl
or
dec
adc
test
mov
xor
sub
nop
pop
mov
push
movsb
and
or
and
lcall
sub
popa
mov
push
xchg
mov
and
js
mov
repz
sahf
idivb
loope
clc
sti
push
adc
xor
push
fs
bound
adcl
ds
pushf
sbb
sbb
cmp
sbb
int3
icebp
cmc
fs
icebp
in
sub
push
xor
sub
mov
es
dec
call
or
xchg
lcall
repz
xor
iret
mov
inc
loopne
in
adc
push
sub
faddl
mov
rcr
sahf
insl
sbb
lea
ret
or
xor
xor
sub
xchg
pop
std
adc
mov
lcall
mov
out
into
xor
adc
push
mov
iret
mov
ss
fs
or
rcrb
or
push
mov
xchg
shll
dec
int3
and
or
jmp
out
hlt
nop
add
arpl
mov
fs
adc
adc
and
out
xchg
pop
cmovae
into
lods
cltd
into
pushf
xlat
loope
in
call
push
xor
jmp
popa
xchg
pop
add
cmpsl
inc
push
cmp
fucomip
lcall
or
popl
push
sti
mov
pop
loope
popa
add
xlat
ret
jbe
outsb
les
scas
mov
fstpl
cmp
jecxz
popa
aad
adcb
add
mov
or
out
fdivs
pop
out
sub
xchg
push
dec
sahf
sbb
lock
out
loop
sub
popa
push
jae
fcmovne
dec
js
cltd
dec
shrl
and
sbb
sbb
dec
xor
push
cmp
fistps
jg
push
xchg
pop
inc
testb
leave
push
jb
cmp
frstor
cmp
sbb
dec
in
fdivrs
jmp
test
sub
inc
and
ja
je
and
hlt
gs
pusha
cltd
seta
mov
pushl
mov
out
mov
cld
push
sub
pop
mov
xor
inc
bound
sub
xchg
out
and
inc
and
int3
fisttps
mov
mov
xor
mov
xchg
jecxz
add
xchg
dec
pop
xchg
out
fnstenvs
push
dec
dec
inc
push
push
and
les
sbb
sub
adc
mov
sbb
es
push
imull
sbb
lea
jno
jmp
add
dec
xchg
push
pusha
push
push
fwait
aad
rolb
pop
xchg
push
lret
fnsave
inc
mov
enter
sbb
int3
imul
out
pusha
add
mov
rcrl
shr
fstpl
int
clc
sub
sub
fidivrl
roll
cmp
dec
xchg
mov
or
jbe
jbe
arpl
xchg
jp
mov
jnp
leave
pusha
push
jns
repz
fistps
test
outsb
cltd
and
dec
adc
or
mov
xor
or
adc
dec
stos
scas
push
cmp
inc
push
loop
test
mov
fbstp
stc
lret
inc
push
es
mov
cmpsl
push
cld
js,pn
push
push
lods
pop
or
rclb
leave
movsl
inc
jl
sub
xor
add
mov
jmp
popa
cld
fcoml
jns
movsb
xchg
dec
dec
xchg
and
jg
stos
nop
arpl
sbb
pushl
push
jecxz
andl
stos
arpl
fcompl
aad
mov
daa
cwtl
test
jge
je
cmp
dec
sbb
divl
xchg
mov
cwtl
decb
out
mov
mov
pop
jp
add
mov
adc
xor
sub
mov
mov
xor
cltd
out
jbe
xchg
aaa
sbb
lock
pop
repz
jg
and
aad
sbbl
pop
je
bound
lods
lods
fwait
xor
jae
xchg
adc
inc
add
out
fstpl
fldcw
test
mov
pop
mov
lret
call
cwtl
es
xor
negl
xchg
push
je
xchg
sar
loopne
int
dec
insl
pop
ffree
iret
jmp
aam
xchg
outsb
push
mov
jecxz
mov
aam
rorl
inc
push
and
push
sub
outsb
inc
lret
xchg
cmp
mov
dec
nop
cmpb
ss
lret
cmc
adc
jle
jbe
dec
call
jle
leave
push
jle
sub
jns
mov
orl
lods
fisubl
subb
xchg
shrb
movsb
xchg
cmc
jb
cmc
mov
mov
mov
sub
xchg
dec
bound
sub
push
cli
andl
imul
outsl
fwait
int3
mov
imul
cmp
roll
mov
mov
adc
mov
stos
sub
jg
mov
pop
sbb
sub
add
jns
sbb
sub
inc
inc
stos
or
mov
and
adc
cs
dec
sbb
jle
ret
or
inc
mov
push
stos
push
ljmp
dec
fiadds
mov
mov
clc
ljmp
js
mov
pop
mov
test
imul
and
cmp
cs
les
jbe
dec
mov
rcrl
shr
pop
jl
inc
dec
mov
jbe
in
data16
enter
adc
in
push
outsb
aam
add
cmp
idivb
cld
xor
xchg
rol
inc
cmp
xchg
mov
adc
shlb
loope
outsb
adc
dec
cmp
jno
add
push
sbb
push
out
mov
fucomp
scas
push
xor
add
call
sbb
fisttpl
inc
loope
rcrb
fwait
loopne
jb
mov
xchg
and
cld
push
mov
pop
mov
dec
dec
ljmp
mov
xorl
pop
and
iret
adc
ret
roll
mov
fwait
scas
cmpsl
mov
mov
mov
imul
add
stos
mov
fwait
inc
ss
mov
add
dec
aad
int
jo
mov
pop
add
mov
lret
pusha
fistpl
push
jecxz
insb
fidivs
lahf
cmp
mov
and
and
jne
fstpt
pop
xchg
stos
sar
xchg
xor
lahf
pop
or
sti
in
push
popf
roll
and
lcall
pop
ret
frstor
scas
cmpsl
aam
pop
sbb
jne
out
adc
mov
enter
jge
leave
sbb
xchg
mov
mov
inc
xor
pop
lods
sarl
xchg
lds
add
and
push
or
pop
xor
lods
or
lret
aas
pop
inc
add
push
fnstsw
jae
xor
push
out
jge
cmp
test
mov
outsb
dec
cli
inc
jle
pop
lret
pop
iret
mov
add
cmp
shr
outsl
dec
mov
sub
jecxz
sti
aam
into
adc
sbb
cmp
mov
stc
data16
test
xchg
iret
push
adc
stos
adc
test
ljmp
adc
adc
les
loope
adc
dec
mov
xor
bound
sbb
fs
data16
ret
jne
icebp
inc
stos
and
fisubl
jmp
cmpsl
iret
and
push
ds
sbb
inc
mov
jnp
lods
mov
dec
lahf
mov
in
jns
cmpsl
daa
add
xorb
xchg
arpl
sub
mov
jo
inc
pop
dec
lds
movsl
cmpl
cmp
ds
sti
and
rcpps
inc
ss
push
jmp
mov
sub
push
cmp
loopne
adc
into
xchg
insb
and
test
cmpsb
int3
int
add
insb
in
pop
xor
mov
cmp
addb
pop
lcall
out
ror
into
jecxz
xor
xchg
int
call
shl
fcomi
insl
cs
imul
inc
and
fildll
andl
test
out
push
sub
sub
addr16
mov
out
mov
test
cmp
sub
mov
dec
cli
movsl
jge
leave
or
pop
mov
adc
push
fisubl
fidivl
pop
mov
or
mov
jmp
outsb
shl
mov
add
xlat
mov
dec
daa
sbbl
jle
cmp
aam
js
icebp
push
mov
dec
popa
mov
pop
fnstcw
mov
das
loope
mov
mov
mov
add
fwait
and
sbb
gs
andb
sbb
mov
fst
mov
hlt
movsb
sub
or
daa
sahf
out
repnz
inc
in
mov
int3
mov
mov
jl
cmp
add
test
cmp
inc
mov
cwtl
outsb
aaa
inc
or
dec
mov
mov
rcr
aad
push
xchg
out
and
movsb
and
mov
mov
stos
push
out
loop
fs
outsb
mov
xor
repnz
stc
pop
mov
xchg
sbb
gs
lds
xor
cmc
aad
iret
cmp
dec
leave
int
bound
lcall
xor
jecxz
adc
leave
or
lods
stos
mov
fsubl
pop
xchg
mov
sub
mov
jno,pt
and
sbb
sbb
mov
scas
cmc
loopne
mov
push
sbb
adc
mulb
sub
stc
push
rcll
test
enter
xor
mov
mov
mov
inc
dec
xor
sbb
adc
jge
jl
repnz
mov
lcall
mov
lods
jne
inc
bound
jmp
cwtl
sub
pop
jbe
mov
pop
sub
sbb
inc
lahf
in
mov
add
arpl
xchg
sbb
lods
and
mov
xchg
or
insb
mov
leave
jecxz
jl
cmp
sub
xor
decl
cmp
inc
das
push
adc
xor
popf
loope
and
jns
cmc
sub
lea
loope
mov
lcall
pop
add
fnstenv
and
lahf
or
es
sbb
ficoml
sbb
idivb
repz
stos
add
insl
pop
xor
pop
dec
push
rclb
test
mov
loopne
and
test
push
cmpsl
mov
mov
lcall
int3
push
ja
fsubrp
or
jae
sub
jmp
jb
inc
cmp
inc
fildl
dec
inc
mov
bound
imul
and
aad
divl
jl
sub
ret
pushf
xor
inc
in
scas
call
icebp
lcall
jns
xchg
sub
jns
pop
mov
fucomp
pushf
rorl
push
jge
cmp
lret
lock
scas
insl
cltd
ret
cmp
orb
leave
add
popf
divl
out
das
sahf
push
or
movsl
sbb
and
mov
jg
lock
stc
sub
sub
add
movsb
faddl
pusha
xchg
mov
xchg
pop
adc
adc
mov
inc
push
mov
cs
jne
or
push
inc
cltd
or
dec
ficoml
pusha
jno
push
push
ret
pop
loopne
and
mov
mov
into
mov
pop
mov
dec
nop
pop
jno
or
mov
inc
jo
ds
loopne
rcr
das
rorl
dec
jge
inc
jbe
dec
adc
cmp
mov
jl
shrl
xchg
aad
iret
movsb
cs
mov
dec
pop
ret
cmp
xchg
push
or
aaa
jb
push
scas
push
jne
sar
cs
popa
pandn
fucom
and
adc
pop
into
dec
dec
cltd
cs
pusha
inc
xor
mov
ja
push
cmp
adc
std
mov
xchg
sbb
or
pop
pop
mov
inc
mov
adc
push
sub
pop
out
pop
push
js
inc
or
insb
sbb
cmpsb
ja
ja
xchg
mov
popf
int3
dec
jbe
lea
movsl
and
pop
aam
dec
jecxz
repz
frstor
std
ret
pop
push
enter
fdivp
pop
into
pop
mov
popfw
push
movsb
sbb
lds
jae
lods
push
push
jns
dec
push
fistpl
aam
mov
adc
into
mov
popf
lods
mov
xchg
mov
test
pop
push
mov
xor
test
subb
push
int3
in
call
stos
cs
arpl
xor
les
mov
pop
adc
and
lock
add
sahf
add
cmpsb
sub
daa
pusha
movsb
jne
test
mov
outsl
addr16
sti
je
scas
mov
addr16
mov
mov
sub
or
cli
cmp
ljmp
cmp
ss
adc
dec
js
loopne
fbld
outsl
add
pop
sub
and
test
in
pop
jnp
std
xchg
in
imul
adc
fiaddl
pop
mov
mov
mov
xor
and
add
arpl
sub
jae
icebp
push
xchg
push
aam
in
call
xchg
xorb
out
dec
xor
lret
jge
push
mov
sub
aad
leave
sbb
mov
pop
cld
xchg
dec
stos
xor
mov
enter
or
repz
sar
push
inc
mov
sub
out
sarl
pop
rcll
fdivrs
movl
xor
cmp
dec
movsl
clc
pusha
mov
repz
fcmovnb
loopne
push
mov
hlt
xchg
bnd
mov
fdivp
shll
sbb
orl
xor
adcl
out
test
roll
push
mov
xchg
dec
xchg
inc
adc
testl
pop
and
loopne
fcoms
pop
sbb
stos
cltd
lods
mov
mov
andb
adc
lock
and
mov
sub
xor
cmp
adc
push
fbstp
fstl
mov
lods
xor
jp
adc
pop
or
sbb
mov
mov
and
lock
pop
in
clc
add
pop
daa
inc
inc
adc
rorb
pushf
stos
ret
push
and
sub
add
ljmp
lahf
inc
out
imul
or
mov
or
jbe
jno
repnz
mov
lcall
mov
adc
mov
push
mov
loopne
int3
aam
pop
xchg
lret
sbb
xchg
shl
mov
mov
in
lods
xchg
imul
inc
push
mov
imulb
jo
sbbb
ds
shrl
mov
aam
add
or
movl
into
popf
push
lock
test
mov
or
mov
pushl
mov
mov
pop
jne
xchg
xchg
pop
or
fdivrp
in
and
loope
ss
inc
and
mov
sub
ljmp
and
fs
push
inc
sbb
push
cs
loopne
sub
pop
test
push
test
mov
outsb
into
xchg
out
movsl
xor
enter
cmpsb
or
or
cmc
popa
dec
movsl
push
jno
sahf
call
into
leave
pop
clc
pop
jg
mov
inc
xor
and
arpl
out
push
mov
inc
xchg
mov
adc
push
cmp
shll
sub
scas
mov
dec
sbb
fsubs
or
fsubp
sub
and
jecxz
imul
xor
adcl
dec
or
mov
sar
mov
jno
adc
jb
filds
into
incb
sbb
push
scas
jnp
jle
mov
pushf
arpl
sub
sub
mov
sbb
cvtpi2ps
jae
les
fnsave
in
daa
push
out
push
pop
xor
loop
push
adc
div
inc
push
stos
int3
bound
es
inc
inc
or
lea
ss
mov
pop
popa
ja
xor
jbe
mov
jmp
stc
movsl
xchg
add
movsb
adc
lcall
je
int3
ljmp
lret
jbe
sbb
repz
repz
and
test
ja
scas
xchg
push
adc
loop
dec
js
jae
jecxz
sbb
shlb
inc
pop
jne
mov
jmp
xlat
cwtl
outsl
or
pushf
mov
in
notb
addr16
add
mov
mov
int3
sti
add
mov
fwait
dec
adc
mov
mov
xchg
add
iret
cmp
pop
jnp
add
call
mov
sbb
shl
popf
xor
test
div
sbb
hlt
roll
xchg
leave
or
movsb
cmp
mov
mov
jle
pop
adc
insl
test
or
getsec
inc
je
insl
add
inc
cmpsl
xlat
ret
test
push
push
jl
xchg
push
addl
mov
xor
push
add
sub
into
movsl
movq
pop
nop
jl
clc
loopne
addr16
loope
jge
and
mov
dec
push
lods
xchg
jne
hlt
aaa
xlat
push
inc
sub
iret
dec
out
xor
out
inc
inc
loop
cmp
cmpsb
sub
and
loopne
push
out
add
decl
cmp
mov
adc
std
push
xchg
fmuls
loopne
jb
sbb
jnp
popa
loope
pop
cmpsl
inc
aad
or
add
fimuls
jmp
mov
lret
ret
xor
or
dec
mov
sti
xchg
lahf
inc
ret
push
mov
add
cmpl
or
ljmp
cmp
jo
repnz
push
jnp
pop
mov
inc
in
jg
dec
outsb
out
jb
jns
and
es
stos
jp
sarl
add
and
rolb
insl
out
mov
mov
sbb
data16
jge
jg
pop
add
ret
xor
push
mov
lods
add
jb
subl
les
mov
outsb
push
test
dec
push
cmp
sbb
fsubrl
or
gs
dec
mov
mov
lds
xor
out
test
out
hlt
clc
jmp
mov
dec
stos
insl
cmp
dec
js
cmp
mov
nop
cld
imul
repnz
fisttpll
int
dec
dec
mov
popf
push
mulb
sbb
and
mov
xchg
cmp
mov
add
pop
push
mov
out
iret
jne
sub
cld
lds
xchg
stc
je
in
or
or
shlb
ret
lahf
add
mov
push
cmp
hlt
js
mov
fwait
push
fs
dec
icebp
sarl
fisubs
aaa
in
or
jae
cs
xchg
mov
pop
sub
in
push
bound
dec
sub
push
and
adc
notb
in
notb
or
sbb
icebp
xchg
mov
repz
jle
nop
mov
aaa
mov
cmp
and
call
iret
xor
dec
ss
das
push
sub
or
daa
lds
push
imul
ds
sbb
mov
out
jge
dec
leave
popf
loop
cmpsb
push
cmp
stc
std
fsubrs
cmp
ss
lea
mov
sub
orl
testl
xlat
pop
xor
or
outsl
pusha
dec
enter
xchg
cli
pop
mov
add
sub
arpl
sub
lea
push
mov
jg
scas
xchg
push
and
test
outsb
inc
ror
and
mov
ret
add
and
insb
xor
jmp
dec
enter
jns
cld
jecxz
out
hlt
fnstcw
mov
fidivrl
out
cmc
cs
sti
nopl
test
inc
test
sahf
and
test
ljmp
xor
sub
and
in
stos
mov
push
gs
ds
test
xchg
std
mov
arpl
lahf
aam
xor
mov
cmpsl
adc
fldenv
xchg
lret
sbb
ljmp
icebp
int3
lret
out
fnstenv
inc
cmp
jns
xor
adc
push
push
and
add
lea
call
loop
loope
add
mov
sub
jo
sar
sbb
push
xor
cmp
dec
fnstcw
jbe
mov
lods
cmp
addr16
decl
scas
mov
inc
and
pop
rorb
outsl
inc
nop
jb
mov
mov
jecxz
push
mov
add
stos
jg
mov
call
loope
xor
lods
call
mov
sub
sub
jecxz
mov
jge
loop
dec
fwait
bound
cltd
lcall
or
test
push
insl
xchg
es
aad
movsl
call
cmpsl
adc
cmp
sub
outsl
ja
sbb
mov
mov
loope
cli
inc
jb
jb
ss
xchg
inc
mul
nop
pop
inc
stos
repz
into
ljmp
out
fcomps
cmp
outsl
leave
jno
push
pop
rorl
aas
mov
cmp
iret
push
cwtl
dec
mov
xor
ja,pt
push
dec
sbb
or
dec
or
movsl
sub
in
loopne
sbb
arpl
pop
cmp
pop
lods
popa
scas
jb
dec
mov
ret
xor
cmp
fisttps
sti
imul
iret
xchg
or
add
pop
push
js
mov
or
sahf
in
dec
fsub
cmp
push
lods
inc
insb
andb
sbb
dec
nop
or
inc
into
jg
jb
and
xchg
gs
test
test
jae
xchg
lret
mov
cmpsl
and
jg
xor
jecxz
ja
arpl
push
loope
xchg
insl
mov
jne
xchg
push
jl
pop
roll
je
inc
xchg
xchg
pop
outsb
shrl
push
leave
add
pop
not
dec
xchg
pop
pop
xchg
shrd
mulps
fs
xchg
fld
jo
add
mov
repz
xchg
sbb
and
xchg
cld
jb
sbb
pushf
xchg
stos
pop
dec
sbb
jg
push
dec
mov
mov
icebp
push
dec
in
icebp
add
inc
inc
adc
fwait
and
out
insl
pop
pop
ljmp
pop
add
shl
jns
lret
pop
std
aas
mov
mov
add
mov
xchg
jnp
add
jns
pop
hlt
xor
or
jp,pt
inc
ljmp
in
pop
pop
and
sub
or
jno
or
dec
shrl
mov
xchg
inc
aad
fsubl
push
pop
in
fcmovnbe
and
xchg
loope
push
push
lds
adc
dec
adc
push
inc
mov
shrb
fs
cli
ret
in
call
clc
inc
adc
arpl
loopne
jo
dec
stos
mov
mov
addr16
adc
pop
sahf
sarb
in
cld
jge
dec
sbb
adc
insb
xor
or
xor
add
push
out
das
aaa
jmp
test
in
fistpll
std
stc
xor
or
sbb
leave
cli
lock
std
jp
loopne
sbb
jmp
in
imul
stos
fldt
sarl
out
movsb
outsb
cwtl
inc
std
dec
or
ret
mov
prefetchw
or
or
out
insb
push
xor
es
scas
inc
cs
add
in
jae
in
loope
cmp
adc
cmp
enter
fildll
loop
mov
sub
push
jge
jmp
aaa
popf
ret
or
addr16
hlt
cmp
mov
pop
mov
and
lock
or
call
jbe
jp
mov
ljmp
ss
push
aaa
xchg
rcrb
out
cwtl
imul
loope
popa
outsb
inc
mov
and
incl
cmp
cli
or
and
pusha
jle
mov
fcompp
std
pop
repz
and
cld
jp
stos
aad
jb
and
xor
inc
repnz
xchg
ja
mov
dec
fisubrl
mov
das
jbe
inc
pushl
ds
pop
or
addr16
mov
mov
sub
mov
in
push
jp
xchg
jmp
push
ss
mov
aad
test
adc
mov
mov
out
dec
inc
mov
mov
subl
xchg
movsl
out
lea
call
adc
adc
bound
xchg
je
or
out
imul
lahf
mov
nop
xor
incl
loopne
mov
jbe
sub
aam
dec
mov
inc
xchg
hlt
add
adc
std
idiv
mov
add
stc
jno
jne
arpl
sbb
mulb
lcall
and
and
outsl
xchg
in
xchg
idivb
mov
fnstcw
adc
imulb
clc
scas
ljmp
test
hlt
dec
push
stc
cmp
sbbl
cmpsb
das
sub
aad
inc
push
xor
icebp
jb
sub
push
cmp
cmp
call
jmp
repz
daa
adc
xchg
dec
cli
shl
cltd
sub
fsqrt
mov
or
mov
jae
aad
jge
pop
dec
cmp
sub
mov
and
inc
mov
jmp
pop
pop
imul
mov
mov
cmc
std
inc
or
dec
in
inc
je
add
negb
jae
inc
add
xchg
mov
cld
cmp
es
test
adcb
outsl
ljmp
arpl
mov
in
mov
pop
mov
sub
xor
xor
jno
jb
cli
shll
ja
sbb
sbb
mov
push
xlat
adc
aam
mov
call
or
das
and
clc
jecxz
ja
push
js
shl
and
sub
je
fldenv
lods
pop
push
and
cmp
jno
shll
hlt
js
sbb
mov
mov
adc
push
sahf
loopne
mov
testb
mov
shll
jp
inc
mov
or
cmpsl
pop
rclb
mov
out
inc
lods
dec
in
sub
in
pop
scas
jbe
pushf
pop
sub
std
jl
mov
push
add
das
hlt
inc
adc
mov
mov
int
cmp
addl
mov
repz
sub
cwtl
pop
int3
inc
fidivrl
mov
or
mov
mov
lcall
in
test
lret
pushf
in
mov
xchg
sbb
cmpsb
inc
cmpsl
test
cltd
pop
xchg
push
arpl
js
aam
repz
mov
mov
test
jmp
inc
shl
xor
mov
insl
adc
gs
lret
ret
fwait
mov
fdivrl
mov
aad
push
enter
cmc
movsb
or
jmp
adc
sub
xlat
sub
dec
arpl
inc
popa
dec
out
sbb
ret
and
cmp
jae
int
cs
in
add
pop
pop
jmp
movsb
mov
stos
mov
fbld
pop
jmp
mov
adc
mov
jb
xor
inc
pop
test
cmp
sub
cld
inc
pop
jl
xchg
sbb
adc
sbb
aad
pop
scas
inc
loope
in
pop
push
andb
inc
and
inc
hlt
cmp
pop
jo
dec
stc
dec
int3
jae
xor
scas
ja
inc
fcmovnb
lcall
rorb
push
push
dec
pusha
lds
push
xlat
shl
outsl
push
inc
xchg
int3
mov
ljmp
mov
xlat
add
xchg
add
sahf
in
testb
out
jecxz
push
int
inc
sbb
jl
push
dec
int3
addb
aaa
mov
ljmp
hlt
mov
xchg
push
xchg
mov
dec
cmpsl
test
icebp
sub
xchg
mov
fistps
rcrb
iret
jl
les
push
stos
cmp
mov
cmp
es
jo
sahf
sbb
shl
and
shl
cmp
mov
test
jno
popa
add
test
aad
lods
cmp
mov
mov
sub
aam
sbb
mov
test
addr16
repz
xchg
test
mov
pop
sar
int3
jge
dec
cmp
push
les
pop
orl
push
ja
dec
and
dec
iret
push
std
dec
fnstcw
and
mov
aam
inc
jo
es
mov
lods
jmp
scas
out
push
cltd
pop
and
dec
xor
lods
mov
cli
cmp
xor
mov
int3
mov
add
adc
mov
xchg
jp
add
add
adc
inc
mov
add
adc
insl
cmp
add
out
add
fcom
mov
jae
lods
dec
push
shll
rolb
sti
pop
mov
popf
xchg
add
out
push
mov
mov
mov
data16
popa
in
mov
leave
xchg
sub
push
fwait
stos
lcall
xor
push
lods
cmp
sbb
mov
or
push
rorl
dec
orl
jmp
lods
repz
inc
sbb
mov
jp
pop
push
add
enter
jmp
xchg
cmp
nop
mov
loope
imul
imull
or
mov
cwtl
mov
in
popf
sti
adc
addb
jno
clc
inc
cs
push
pop
lds
lea
push
mov
adc
andl
movsb
or
cmp
and
mov
lds
jo
push
xchg
inc
aad
jl
push
movsb
mov
mov
sti
mov
push
sub
cmp
les
inc
ds
rclb
out
adc
add
ljmp
push
ret
or
sti
dec
gs
lds
pop
dec
js
out
in
and
mov
mov
sbb
mov
or
repnz
push
sub
sub
fs
femms
mov
xchg
cmp
loope
push
out
icebp
push
push
and
jp
pop
inc
loop
jo
mov
out
and
movsl
jne
aam
fmul
push
adc
in
jno
inc
xchg
dec
mov
out
in
mov
inc
jbe
dec
leave
inc
out
shrb
outsl
mov
jmp
out
inc
sti
mov
lahf
mov
sbb
stos
mov
jle
arpl
push
js
dec
repnz
repz
cmp
and
xlat
push
pop
dec
stos
sbb
adcb
bound
or
mov
outsb
imul
imul
push
xchg
mov
mov
dec
and
xchg
jbe
out
cmc
sub
rorl
jno
inc
popf
jns
pop
pushf
test
mov
insl
sub
sbb
scas
lret
int
fs
and
xchg
xchg
decb
jl
dec
sub
xchg
dec
cltd
lods
or
lods
scas
xor
mov
xor
jne
push
pcmpgtw
xor
jecxz
push
pop
dec
sbb
into
mov
jo
mov
cltd
dec
sbb
pushf
cmp
sub
push
jmp
in
xlat
lock
adc
fwait
add
push
push
jg
xor
xor
push
rolb
add
rolb
loopne
pop
push
mov
sti
aad
inc
mov
out
sub
add
shlb
lods
jecxz
inc
sbb
jp
fwait
mov
int3
push
movsb
push
dec
fstpl
lds
jae
lock
jo
aam
ja
xchg
dec
mov
inc
lds
shrl
adc
insb
ret
sbb
aam
mov
or
push
pushf
fst
aam
jle
push
fdivl
sbb
fistl
adc
movsl
lcall
inc
aas
and
iret
xchg
push
add
fbstp
sbb
jg
adc
jns
jg
pop
in
notl
pop
fsubl
add
shll
push
arpl
xor
in
adc
lret
xchg
into
xor
addb
fs
and
pop
dec
outsl
cld
mov
adc
mov
cli
div
out
jbe
or
pop
outsl
arpl
sbb
fldcw
repnz
fisubrl
push
jmp
adc
mov
sar
mov
cld
ret
adc
ret
or
pop
sti
int3
popf
xchg
ret
xchg
stos
aam
pusha
jp
push
cmpl
addr16
jmp
pop
jbe
dec
sub
push
ss
shl
mov
mov
in
nop
push
int
xor
dec
fldl
mov
pop
popa
mov
add
rclb
shrb
fadds
push
cmpsl
popa
sahf
lahf
xor
pop
add
in
pop
lret
ret
cmc
out
mov
inc
push
adc
adc
dec
fcmovnb
aam
shlb
lea
addr16
push
pushf
xchg
and
or
cmp
cmp
cmpsb
dec
xchg
sbb
cmp
xchg
add
jecxz
fisttps
cli
mov
loop
push
xor
loopne
mov
cmp
mov
pop
add
mov
pop
mov
test
lea
clc
call
cli
aam
loope
cmp
dec
dec
jno
jb
ret
mov
pop
out
adc
repz
pop
jmp
xchg
aaa
sbb
cmp
xor
mov
push
stos
mov
sahf
mov
jle
pop
push
cs
add
leave
or
lods
repz
xchg
insb
das
cmp
mov
aas
lds
xchg
xchg
popa
inc
and
inc
dec
push
push
shrl
stc
in
jae
xchg
dec
fld
cli
dec
mov
xor
fisttps
push
in
sahf
insb
sbb
movsl
repnz
in
xchg
mov
xchg
mov
sub
lods
imul
arpl
push
outsl
popa
inc
lcall
mov
das
pop
dec
fsubs
rclb
and
inc
jb
shrb
xchg
jmp
push
mov
mov
ficomps
lret
mov
adc
loop
dec
mov
gs
in
cmp
pop
lods
jbe
push
hlt
js
dec
adcb
ret
push
outsl
negb
xor
jno
movsb
and
dec
pushf
cmp
out
in
inc
cs
dec
jnp
iret
xchg
mov
adc
cld
xor
xchg
aaa
sub
popa
mov
scas
cltd
repz
adc
mov
jl
xchg
dec
or
xchg
test
subb
adc
int3
sub
orl
adc
cmpl
in
sub
jp
mov
cs
dec
pop
jb
cmp
or
xchg
out
inc
arpl
mov
or
outsb
xor
cli
cwtl
aaa
int3
pop
fmulp
lock
mov
in
push
mov
ret
push
jp
aam
fisubs
cld
xor
jl
push
inc
xchg
add
ds
sbb
jle
pop
inc
xchg
fdivl
mov
inc
iret
test
cmp
or
out
jmp
lods
cld
sbb
lds
sbb
dec
rcl
nop
je
incb
cmp
sub
pop
mov
sub
scas
dec
push
dec
es
cmp
mov
jae
aam
mov
aad
daa
mov
push
pop
insl
mov
fwait
jbe
xor
ja
jns
popf
ds
test
test
cmp
fwait
repz
inc
neg
cmp
pop
dec
insl
inc
adc
fdivs
cmpsb
enter
popa
sub
sub
cmp
orl
jge
out
adc
test
dec
jno
mov
cmpsb
in
jecxz
or
nop
or
push
ficomps
sub
pushf
mov
ficoms
daa
and
sbb
lds
and
inc
pop
std
loope
mov
movsb
rorb
sub
xor
inc
cwtl
or
mov
jo
xchg
xchg
scas
sub
pop
add
aaa
out
rorb
adc
jbe
aad
pop
jnp
sub
dec
dec
imul
aad
dec
testb
mov
adc
shrb
mov
jge
scas
jns
ljmp
roll
pop
mov
repz
jge
je
sti
pop
mov
push
lods
adc
out
pop
scas
push
into
dec
mov
and
lcall
pop
mov
jno
push
mov
push
mov
dec
sub
pusha
std
fstps
push
inc
stos
popf
rcrl
inc
push
hlt
stos
mov
repnz
fnstsw
dec
stos
inc
cwtl
dec
mov
sub
push
and
lretw
lret
out
cmp
xchg
xchg
inc
push
xor
mov
es
push
sbb
dec
cli
aad
ret
fwait
loope
jmp
adc
jo
jp
pop
sbb
nop
sub
pop
cmp
xor
mov
and
sbb
push
js
data16
or
push
aaa
push
addr16
fnop
dec
mov
hlt
shlb
or
ds
and
jp
sbb
dec
aam
mov
push
dec
mov
add
push
xlat
xchg
xor
lock
fdivr
aas
aam
fistps
push
or
inc
mov
xor
arpl
and
xchg
ds
dec
adc
rcrl
call
jno
mov
cwtl
pop
cmp
dec
testl
and
cmc
incb
ret
aad
imul
lret
dec
stos
xchg
lds
ret
inc
push
mov
out
mov
push
lods
jl
or
jmp
lods
js
cld
xor
daa
js
sub
push
adc
sbb
jno
stos
in
loop
lcall
dec
inc
mov
xor
fnstsw
pop
and
or
mov
pop
inc
jnp
cmp
in
jecxz
push
sti
mov
push
iret
sub
sbb
push
or
imul
cmp
xchg
pop
or
clc
fs
sbb
jbe
nop
pop
push
mov
imul
mov
and
iret
xor
stc
and
out
mov
fwait
pop
push
inc
mov
sub
mov
lods
mov
mov
repz
insb
xchg
cld
ja
push
neg
mov
loopne
jb
jne
push
sbb
jle
out
clc
ret
int
cmp
ja
repnz
int3
dec
inc
lea
enter
notb
jp
sbb
pusha
notl
push
cli
std
and
mov
mov
mov
dec
or
mov
test
icebp
push
fs
ret
pop
lods
mov
mov
je
les
ss
aaa
xor
push
and
dec
xor
fsubrs
and
jl
sub
insl
dec
sub
mov
leave
jo
shl
dec
xor
sbb
dec
shrl
cmp
inc
and
xlat
pop
cmpsb
adcl
adc
cltd
out
cmc
mov
cmp
mov
mov
jne
iret
js
sub
fsubl
stos
and
ja
add
int
and
xchg
and
adc
xor
test
stc
sub
inc
in
adc
dec
into
mov
lods
aaa
icebp
ror
cmp
call
shl
xchg
test
adc
mov
xchg
fucomp
push
adc
and
push
mov
mov
jg
push
xchg
dec
fcmovnbe
mov
mov
and
cmp
ret
dec
and
adc
xchg
dec
lds
pop
pop
cmp
pop
pop
fnstcw
icebp
out
sbbl
adc
pushf
les
fsts
scas
lods
popf
repnz
loopne
pusha
enter
loopne
pop
int
bnd
in
rorb
and
pusha
sub
push
idivb
push
repnz
pop
xchg
jo
insb
xlat
sbb
adc
push
subl
fcoms
push
jns
addr16
pop
sbb
shll
pusha
lcall
adc
xchg
stc
insl
inc
sti
lock
pop
lock
jge
mov
mov
sub
or
and
cmpsl
call
adc
mov
xor
xlat
jl
adc
ret
add
xor
jo
enter
or
aam
push
cmp
dec
ss
cld
push
pop
jp
cmp
in
sbb
cmpl
cmpsl
hlt
or
add
xor
pop
push
dec
lcall
repz
fidivl
xchg
dec
sbb
fstps
xor
inc
js
push
sub
rolb
dec
mov
xchg
das
sar
mov
fcompl
adc
mov
movsb
mov
xchg
xor
repz
dec
fisttpll
gs
pop
stc
sub
cmp
cmp
pop
popf
cmp
push
or
addr16
sbb
scas
adcl
inc
ret
push
adc
out
inc
ss
stos
pop
and
push
fidivs
and
mov
jbe
pop
insl
mov
cli
inc
xchg
in
push
mov
add
stos
jecxz
lock
sub
push
ret
fisttpl
mov
frstor
pop
das
pop
cwtl
xchg
lods
mov
jb,pt
mov
inc
nop
std
push
shrb
arpl
xchg
iret
add
fsubrs
hlt
fisubs
arpl
pop
loopne
pop
add
adc
lods
sub
sub
sub
aaa
stc
inc
jp
inc
divl
sub
nop
loope
or
rcr
mov
inc
sub
cmp
and
jg
movsb
hlt
cmp
add
pop
cmpsb
adc
xor
inc
lret
lods
iret
push
fwait
cmp
lock
popa
dec
andb
incb
loop
sbb
or
mov
jbe
ss
sub
inc
rorl
cld
adcl
push
sub
mov
xchg
sbb
add
jp
stc
dec
dec
cmp
andl
pop
int
and
inc
cmpsl
xchg
push
repnz
and
jmp
and
cmp
xor
fs
out
in
pop
repnz
inc
cld
arpl
iret
pop
sbb
jl
or
inc
cltd
mov
dec
cltd
ss
cld
in
scas
repnz
dec
aaa
gs
mov
pop
faddl
dec
out
adcb
gs
out
insl
sbb
sub
dec
jle
mov
cmpsb
std
lods
mov
inc
xchg
int
addr16
push
stos
inc
cs
mov
push
pop
mov
fisttpl
push
popf
into
jbe
jae
mov
add
jge
lods
in
out
push
out
cmp
jp
or
mov
dec
incb
xor
inc
imull
sysenter
lahf
mov
js
lea
mov
jp
inc
jmp
mov
or
stc
and
xchg
xchg
popa
lret
in
pop
stos
shrl
divl
inc
outsl
or
ljmp
mov
ja
inc
scas
ljmp
cmp
add
cs
mov
mov
or
aam
push
loope
es
adc
adc
fmuls
adc
fwait
push
jg
pushl
mov
cmp
and
sbb
call
cmpsl
inc
lcall
add
mov
scas
cmp
mov
bound
sub
sub
iret
inc
scas
shlb
cld
sbb
and
xchg
stc
cld
mov
out
push
clc
sub
int3
clc
hlt
xchg
mov
adc
push
and
stos
sbb
jl
lcall
pop
add
int
mov
xchg
or
xchg
dec
std
ret
js
nop
xchg
pop
jnp
aad
jg
inc
adc
xor
out
imul
inc
pop
dec
jle
cltd
clc
sub
daa
loope
jg
outsl
xor
jmp
addb
test
aas
pop
sahf
xchg
sub
mov
lock
shlb
pop
push
pop
push
daa
aam
mov
mov
pop
xor
push
pop
sbb
push
pop
xchg
push
outsb
ja
xor
jnp
mov
mov
outsl
pop
out
sub
cltd
and
cmp
cld
out
jmp
mov
dec
repnz
in
jle
addb
dec
out
aaa
test
in
lock
ja
push
push
lock
jae
and
divb
jne
lahf
fwait
xlat
cmp
stos
mov
push
mov
dec
in
mov
bound
loope
mov
repz
xor
mov
add
jl
add
arpl
mov
hlt
lea
and
es
stos
cli
les
daa
pusha
dec
push
add
into
gs
mov
inc
pop
push
fucomi
cld
jp
pop
sbb
imul
ja
jae
and
bound
lret
adc
leave
mov
mov
mov
jge
adc
sbb
add
clc
notb
test
enter
add
add
xor
xchg
push
mov
dec
std
jbe
lret
push
test
pop
and
cmc
inc
push
testb
mov
push
insl
pop
jle
or
jb
int
stos
add
inc
sahf
inc
or
inc
inc
test
incb
add
add
rcll
add
jg
xor
rol
add
fists
add
mov
mov
test
pop
dec
fsubrl
neg
inc
xchg
into
fcom
fcmovbe
int3
stc
pmullw
jae
sbb
lea
shl
xchg
mov
cmpsl
sbb
push
leave
mov
in
les
test
std
adc
insl
cmp
subb
hlt
ret
lods
mov
sub
pop
push
mov
lret
inc
clc
sub
and
sub
inc
mov
push
arpl
xchg
int3
pop
cmpsb
jns
mov
idivl
and
jne
rcr
mov
xor
jo
mov
xchg
js
sub
pusha
push
fs
and
cwtl
xchg
push
cmp
jb
lods
add
sub
aam
xchg
nop
xor
push
or
int
je
inc
pop
mov
loopne
fsub
sbb
xorb
mov
and
jecxz
sbb
decl
jnp
add
fs
repz
push
mov
jo
aam
negl
out
stos
cmp
inc
xor
pusha
lods
mov
sbb
lret
xchg
fistpl
push
push
push
or
jae
sti
mov
jp
jns
jbe
movsb
aad
push
js
adc
test
dec
pop
mov
cwtl
test
ret
cmp
rclb
fsubrs
sbb
add
fwait
pop
mov
pusha
das
jge
mov
into
xor
dec
xchg
lods
push
xor
js
jmp
mov
pop
and
test
jo
push
std
fisubrs
loope
arpl
jb
adc
gs
adc
push
mov
or
add
jnp
inc
test
and
mov
iret
fadds
add
xchg
pop
out
out
and
jbe
out
and
inc
jb
add
sub
pop
adc
incl
call
pop
push
cmp
loop
push
xor
icebp
xor
and
inc
cmc
xchg
cmpsl
fstps
cmp
push
xchg
rclb
sbb
ljmp
mov
rorl
imul
xchg
jp
popa
jne
imul
inc
pop
inc
mov
push
popa
sub
popf
adcb
je
inc
xor
rcl
ljmp
mov
shrl
xor
stc
inc
inc
imul
cmp
xchg
dec
jmp
std
mov
jg
mov
inc
push
pop
dec
xchg
aas
sbb
sub
out
and
push
jg
inc
push
mov
jbe
mov
loope
cmp
adc
aam
mov
popa
outsb
push
cmc
mov
push
dec
mov
test
jmp
push
fcmovu
dec
jae
cmpsb
and
pop
mov
xchg
test
lret
movl
in
and
nop
cwtl
inc
out
rclb
in
andl
xchg
ret
loopne
or
sbb
mov
sub
xor
inc
or
jmp
in
std
notl
jnp
sbb
jge
movsl
xorl
int3
hlt
dec
aam
in
test
or
cld
outsb
sub
jmp
pop
jno
sub
dec
cltd
call
push
pop
adc
scas
shll
cmp
xchg
movsl
jo
sub
out
incl
cmp
or
inc
or
orb
ja
test
push
lds
push
push
idivl
jmp
mov
in
dec
xchg
inc
enter
lcall
aad
xchg
fs
add
fstl
and
xor
jne
fldl
mov
daa
pop
push
pop
jns,pn
sti
loopw
or
nop
in
mov
call
lret
push
mov
icebp
xchg
les
fs
pop
dec
test
push
out
pop
iret
je
outsl
jns
out
in
inc
or
push
and
mov
jecxz
cld
enter
sbbl
shrl
int
xchg
lret
xchg
add
popa
sbb
lods
push
ret
inc
es
popf
or
adc
xorl
fldcw
mov
mov
jge
add
mov
out
push
mov
push
stos
in
aas
cli
xchg
pop
sbb
add
das
fisubrs
xlat
pop
add
in
mov
clc
jbe
jl
pop
push
jb
das
mov
mov
xchg
add
mov
stos
and
lcall
cltd
into
nop
sti
int3
inc
jp
sti
sub
xchg
repnz
jne
cmpl
push
ret
mov
dec
push
mov
lds
mov
flds
js
xchg
ds
int
lret
push
push
push
in
cmp
les
inc
divb
sbb
stos
int3
mov
fwait
pop
adc
mov
icebp
movsl
or
xor
push
sahf
push
or
imul
int
cmp
mov
testb
push
and
icebp
mov
test
jge
add
mov
push
add
orb
inc
scas
sbb
insb
mov
bound
sub
in
xor
lods
jmp
mov
loope
mov
add
mov
jb
ss
push
lods
std
cmpsb
adc
andb
in
mov
push
pop
inc
shll
jmp
push
aam
es
cmp
insl
ljmp
icebp
adc
sbb
adc
les
imul
sub
inc
je
adc
push
pop
pop
mov
stos
jae
inc
or
incb
and
or
xor
jle
clc
mov
scas
push
repz
repz
daa
cmp
inc
daa
sub
cmp
clc
pop
repz
out
fstps
cmp
in
sub
xchg
sahf
xchg
sbb
shrb
xchg
jne
icebp
pop
or
fsubr
push
cmp
leave
jp
xor
inc
in
in
mov
lret
sbb
pop
ja
sbb
fsubrl
cmp
enter
mov
jmp
sub
add
push
outsb
loope
fwait
mov
sbb
ret
dec
sbb
test
notl
lods
lods
adc
cwtl
cmp
sti
in
and
mov
and
ss
cltd
sub
cmc
xor
xchg
rcrb
pusha
sbb
mov
mov
xchg
jnp
mov
clc
dec
mov
js
jmp
test
push
sbb
cmc
lret
jbe
clc
rclb
arpl
sub
insb
lods
notb
arpl
add
pop
inc
in
mov
rorl
cwtl
xor
ret
add
push
xor
fstps
push
shl
out
pop
inc
pop
loopne
mov
sbb
movsb
imulb
dec
in
cmp
lcall
sub
mov
xor
pop
lods
dec
ds
add
popa
and
or
aas
outsb
dec
fdivl
cmpsb
mov
out
xor
aas
mov
and
cmp
push
mov
test
cs
sbbb
js
insb
mov
movsb
fsub
leave
jbe
pop
sbb
fistpll
loopne
cmpsb
adc
push
fdivrp
arpl
jge
in
aad
or
mov
popf
dec
adc
mov
in
mov
pop
jno
pop
and
data16
out
sbb
outsl
test
cmp
mov
xchg
cli
inc
fs
jle
call
es
cmc
dec
jo
fisubrl
push
add
push
push
mov
mov
ja
pop
stos
cmp
xor
sbb
mov
movsl
scas
repz
enter
cmp
dec
mov
push
fldenv
pushf
aam
fdivrl
jge
pop
add
je
adc
int3
enter
insl
aas
or
aaa
fcoms
push
adc
adc
std
icebp
sub
mov
and
sub
adc
test
fsubs
xor
xchg
push
pusha
iret
fnsave
les
out
in
inc
mov
and
xor
xorl
adc
jge
dec
imul
push
mov
xchg
or
sub
pop
mov
in
mov
add
outsl
test
push
pop
fildl
push
jle
inc
mov
hlt
xchg
or
push
imul
lret
sbb
arpl
or
popa
sub
jno
jb
gs
aam
pop
int3
or
and
mov
cmp
mov
mov
sahf
xchg
jg
enter
dec
mov
aaa
jae
push
push
adc
mull
and
push
push
or
data16
pop
xlat
aam
pop
inc
out
cmpsb
and
and
jp
inc
lock
add
sub
shll
mov
push
lock
inc
lret
jns
imul
ja
into
sbb
mov
mov
adc
idivl
imul
push
pop
mov
fs
mov
mov
std
cs
dec
dec
out
or
call
sub
decl
mov
je
add
lcall
or
add
dec
mov
xor
inc
sbb
jbe
outsb
enter
out
adc
mov
cmp
mov
pop
cwtl
cmp
add
mov
fs
dec
lods
roll
jg
fiaddl
jnp
orl
mov
call
shlb
jne
fucomip
lret
xor
fwait
scas
ss
sbb
mov
mov
and
das
mov
jbe
sub
jg
ficoms
sbb
ret
jb
or
inc
leave
cmp
aam
ret
mov
in
scas
adc
fldenv
in
jg
sbb
out
mov
lea
loopne
sub
pop
mov
insl
pusha
push
mov
sbb
arpl
and
mov
lahf
lods
inc
push
jne
out
xor
mov
mov
inc
pop
repnz
mov
sbb
cltd
xor
imul
movsb
and
test
loop
xlat
imul
xlat
jmp
addb
fcoml
mov
cld
lea
sub
mov
cmp
cmpsl
or
test
push
les
lret
dec
pop
mov
mov
mov
js
je
sbb
jbe
inc
jo
notb
and
xor
stos
inc
push
aaa
xchg
lcall
clc
mov
inc
jo
dec
iret
repz
aad
ljmp
outsl
pop
inc
shl
jae
inc
in
sahf
cli
mov
mov
sub
lcall
mov
xchg
mov
jno
push
dec
add
stos
add
dec
mov
ficoml
xchg
aaa
mov
imul
add
dec
imul
repz
out
and
fsubrs
incl
xchg
xor
lods
aaa
fidivs
push
popf
and
pop
leave
and
or
jo
adc
out
xor
loopne
cs
pop
test
outsl
repnz
icebp
xchg
mov
jp
add
xor
sbb
call
es
mov
loope
pop
cmp
jmp
cld
or
cmc
std
rorl
lea
jno
push
dec
jae
sbb
jo
out
cld
fstl
push
stc
jmp
aas
adc
mov
cli
mov
sti
loopne
jae
insl
sbb
icebp
adc
lods
mov
dec
jmp
ftst
inc
mov
adc
in
xor
jecxz
jecxz
stc
mov
inc
cmp
inc
in
scas
out
lea
call
pop
xchg
aaa
jne
int
adc
pop
push
subb
cmp
mov
fstl
fimuls
test
outsb
sub
aaa
pop
aaa
into
setp
xor
add
adc
xchg
adcb
hlt
adc
dec
je
and
mov
jmp
or
ss
stos
jno
jnp,pt
jne
and
dec
repnz
push
cwtl
adc
jl
jmp
dec
fs
inc
xor
loope
push
psllw
ret
xchg
cmpsl
cmp
loopne
js
push
in
fldl
mov
push
xchg
clc
push
cmp
adc
jp
xor
shll
pop
jno
or
in
cmp
push
xchg
xor
inc
xorb
push
rolb
cs
cwtl
push
cltd
mov
stc
in
loop
and
adc
push
push
sub
pushf
scas
jae
xchg
aad
jb
push
lods
pop
in
dec
jg
fstpl
xchg
push
ja
fsubrs
inc
test
push
mov
lahf
into
aam
xor
stos
pop
shlb
loopne
in
enter
int
push
lods
jp
mov
out
and
add
fsubrs
mov
test
sub
daa
push
add
push
mov
stc
mov
mov
inc
sub
imul
xchg
inc
rolb
sbb
add
adc
rol
and
sbb
pop
add
xor
aam
movb
cmpsl
int3
xchg
cmp
and
push
andb
pusha
pop
sub
in
mov
pop
into
hlt
stos
mov
jne
xchg
mov
jnp
xor
int
adc
add
inc
mov
cmp
dec
out
pop
sbb
adc
mov
fsubr
pusha
ror
nop
movsl
cmpsb
jp
imul
fxch
push
sbb
pop
dec
outsl
sbb
dec
divl
jno
scas
pop
dec
ds
out
std
mov
sbbb
test
push
aad
subb
xor
push
xor
sbb
loope
jle
dec
and
les
ja
cli
test
popf
lods
in
push
inc
shlb
fistl
adc
sahf
xchg
imul
movsl
aas
test
or
insb
lahf
sbb
jge
mov
add
dec
mov
dec
lods
dec
push
ja
add
hlt
dec
cmp
je
lret
cmpsb
out
cmc
js
pop
sub
int
or
shl
daa
push
adc
addr16
clc
aad
jg
aam
push
jecxz
pop
movsl
push
xchg
stc
jno
cs
or
push
mov
in
sub
push
cwtl
cli
loop
or
out
mov
push
mov
ret
pop
inc
dec
mov
stos
xchg
dec
dec
pop
xor
or
and
cmpsl
std
sti
push
fildl
decl
push
push
dec
mov
out
scas
les
loope
mov
cmpb
addr16
fisttpl
cmp
lahf
fwait
in
or
inc
icebp
and
or
test
dec
pop
cmp
insb
add
popaw
ret
fistpl
jg
xchg
jno
int3
ljmp
scas
outsb
xor
call
les
jne
rcrl
stos
test
test
jmp
dec
xor
mov
popa
pop
jne
or
sbb
test
sbb
loopne
pop
add
add
pop
xchg
mov
inc
cmp
fcoms
sbb
push
inc
mov
int
jnp
aas
mov
imul
out
and
cli
clc
and
cmp
pop
and
call
addb
push
xchg
jg
fucom
std
aaa
or
std
mul
fcomp
cmp
push
and
test
add
loopne
and
lea
dec
ljmp
in
popf
cmp
jb
repnz
inc
loopne
or
pop
or
lahf
add
cld
jne
mov
sub
and
jle
and
fwait
jge
ficoms
in
outsl
fsub
int
imull
arpl
pop
cmp
dec
aad
cmpsl
xor
xor
adc
sbbb
test
mov
dec
jns
mov
loop
jg
xchg
mov
push
inc
adc
add
int
and
mov
cmp
xchg
out
mov
mov
xchg
ret
sub
cmp
jnp
dec
pop
fcompl
pop
pushf
cmp
sub
push
iret
or
das
and
jmp
push
sub
dec
fistpll
xor
negl
lods
xor
cmpsl
push
jge
jne
in
inc
mov
icebp
cmp
std
pop
sbbb
and
ret
out
repnz
xor
mov
jle
js
out
aad
ds
in
adc
dec
iret
call
mov
dec
push
in
fcomi
push
enter
pop
mov
int3
das
js
xor
pop
cmp
jp
mov
xor
adc
es
imul
lea
xor
in
frstor
ss
sbb
pop
gs
scas
mov
mov
cmp
push
fnstsw
rolb
push
dec
push
mov
aas
cmp
dec
inc
sbb
push
nop
addr16
out
enter
inc
add
cld
push
iret
sub
sbb
fwait
js
xchg
adc
push
mov
cmp
jp
in
xchg
mov
pop
lret
sbb
jo
lahf
idivb
scas
push
or
mov
jae
imul
enter
jae
sbb
scas
ja
jp
add
jnp
xor
jae
mov
mov
pusha
jnp
mov
arpl
cmp
cmp
pop
inc
cmc
jns
aaa
ret
mov
xor
cmp
inc
jmp
insb
push
hlt
push
mov
lret
out
mov
stc
push
ljmp
mov
sbb
popf
pop
adc
pop
frstor
stos
mov
dec
mov
js
xchg
xchg
push
add
xchg
shll
mov
int3
jle
xor
scas
sub
dec
pusha
inc
out
push
or
lds
jns
or
pop
jns
test
hlt
aad
ljmp
inc
pop
stc
jg
xchg
addr16
jbe
lods
push
cs
stos
mov
mov
xor
stos
imul
dec
sbbb
sbb
sbb
lcall
adc
jmp
aas
mov
enter
mov
xchg
test
jnp
iret
scas
push
bnd
sub
jnp
mov
out
pop
xor
xor
addr16
les
pop
lds
or
or
js
jne
jae
inc
pop
mov
ret
and
test
lds
push
sbb
ret
xor
int
add
lods
std
fwait
ja
sti
lahf
adc
mov
pop
adc
subl
push
scas
ss
cmp
cs
out
dec
xor
sbb
adc
cld
push
or
scas
mov
mov
fwait
sbb
pop
sbb
cltd
gs
and
inc
lock
jl
jp
icebp
mov
jmp
cmp
push
xchg
call
pop
ss
mov
sbb
jae
add
or
ss
and
or
lods
pop
xorl
adc
addb
pop
inc
int3
sbb
xlat
ds
and
push
lods
jle
test
repnz
jb
scas
into
shrb
mov
jno
das
popa
lret
imul
sub
xchg
stos
loop
mov
shrl
cwtl
dec
imul
fs
call
and
loop
mov
and
pusha
sub
scas
pop
mov
xchg
leave
xor
mov
iret
xchg
jae
adc
or
popa
push
pop
add
mov
rorb
in
pop
insb
test
xchg
gs
mov
test
mov
dec
jp
enter
cmp
adc
inc
xchg
pop
xor
cmp
mov
orb
jle
mov
adc
pusha
stos
fcomi
xor
xlat
lock
xchg
jo
movsb
adc
shr
inc
mov
cs
les
mov
out
loope
movsl
lret
jns
pop
jae
jmp
jg
adc
sub
push
and
rclb
mov
cld
in
aad
jmp
push
mov
popa
mov
cmp
pop
inc
mov
mov
adc
sbb
mov
rclb
hlt
add
mov
mov
and
push
shl
popf
cs
and
dec
xchg
sub
icebp
pop
outsl
xor
lods
jae
xor
mov
xor
mov
popf
cmp
loopne
lret
out
push
lock
xchg
rolb
in
adc
test
mov
cmp
loop
or
mov
gs
sub
mov
mov
aad
out
test
push
je
and
mov
out
or
les
lahf
ja
inc
and
push
in
xchg
xor
sbb
out
xor
mov
cmp
xor
mov
sub
inc
xchg
and
stos
mov
push
adc
shl
iret
out
subl
loopne
cmp
sbb
and
jg
xchg
imul
xchg
fisubrs
mov
jmp
dec
dec
jle
push
jmp
jmp
aas
mov
jmp
cmpsl
pop
aaa
jbe
sub
cmc
add
ret
cmp
lea
lds
jp
xchg
mov
add
mov
in
adc
mov
popa
testl
mov
cmp
mov
clc
mov
jnp
mov
lret
mov
neg
in
add
sbb
jnp
sbb
ljmp
cmp
scas
addr16
movsl
xchg
mov
ja
pop
out
mov
mov
mov
mov
adc
cmp
sahf
loop
ja
repnz
or
outsb
cmp
sub
outsl
and
fxtract
sbb
and
ss
dec
inc
xchg
mov
popa
out
dec
or
into
jo
mov
adc
pop
jmp
dec
into
mov
cmp
pop
jge
cs
test
mov
gs
mov
loope
dec
jge
or
and
push
pop
lret
addr16
pop
addr16
push
jle
andl
out
mov
icebp
add
arpl
jmp
lahf
mov
fiaddl
push
push
xor
in
cmpsb
test
mov
ljmp
adc
adc
sub
imul
xchg
clc
push
xchg
mov
sub
scas
mov
pop
cmp
inc
adc
mov
fcompl
es
jo
shl
cmpsl
xchg
nop
popf
ret
mov
imul
dec
push
clc
sbb
mov
jne
fistps
push
enter
dec
inc
dec
stc
jl
dec
jb
notb
xor
mov
cmp
push
mov
mov
mov
xor
xlat
add
popf
lea
mov
mov
add
imul
sub
inc
pushf
mov
cld
mov
mov
jo
out
fcomi
in
sbb
or
in
test
and
mov
xchg
push
push
int3
gs
dec
cwtl
sar
and
sarb
gs
push
xchg
int
mov
xchg
mov
add
cmp
std
push
inc
pop
pop
xor
dec
xor
incl
mov
xchg
cwtl
xor
fcmovnb
outsb
inc
mov
xor
sub
lea
out
inc
jae
sub
cli
fidivl
test
repnz
jmp
sbb
and
lea
mov
dec
xchg
cmp
or
xor
aam
mov
aaa
sub
mov
shlb
das
movmskps
mov
leave
dec
mov
xchg
shrl
add
pop
nop
enter
into
jns
ds
xchg
gs
jae
or
in
ds
fcompl
mov
cmp
pop
xchg
scas
stos
das
xchg
mov
sbb
xor
mov
sub
adc
test
dec
push
xor
cmp
in
mov
jae
in
dec
fwait
call
cmpsb
lcall
push
mov
cmp
push
aam
imul
das
inc
pop
sub
call
call
clc
shll
xchg
push
or
jp
fwait
int
lea
jge
jb
jle
mov
inc
lods
pop
push
cmp
cmc
test
or
sbb
popa
insl
sbb
imull
les
jae
cmp
ret
loop
mov
dec
mov
aaa
movq
jp
daa
xor
outsl
lret
pop
mov
push
xchg
dec
lds
mov
mov
pusha
ret
pushf
rorl
or
fdivrl
xchg
pop
push
xlat
mov
lea
pop
inc
or
sub
outsb
adc
mov
xchg
fwait
xor
aad
aaa
adcl
add
test
int
adc
lods
pop
aad
inc
aaa
movsl
dec
push
mov
sbb
mov
and
stc
inc
sahf
mov
leave
in
adc
pop
loopne
push
xchg
lret
mov
ds
popa
leave
xor
cmp
adc
jne
cmp
testb
es
and
lcall
xor
out
aam
cmp
add
xchg
insb
add
or
adc
dec
pop
pop
push
dec
inc
inc
mov
sbb
pop
and
lods
es
and
aas
insl
lods
cmp
jge
mov
out
cmp
mov
out
jbe
repnz
inc
mov
ret
ljmp
jle
jnp
gs
insl
loope
cwtl
ss
rol
lret
xchg
pop
xchg
xor
nop
xor
ret
xchg
cmp
lret
dec
aad
dec
jns
push
popa
jle
cmp
out
sbb
enter
push
push
jo
pushf
cmc
insl
sub
mov
lcall
out
nop
mov
sbb
les
push
jle
add
mov
jns
xchg
sti
and
loopne
jo
mov
mov
pop
lds
imul
mov
inc
mov
pop
mov
rolb
adc
repnz
mov
or
pop
pop
fidivs
sub
in
sub
pop
rol
xchg
shrl
push
add
mov
lcall
ss
inc
mov
push
inc
inc
std
enter
dec
mov
mov
aad
pusha
pusha
rcll
inc
icebp
aaa
out
dec
sbb
sbb
lods
add
push
icebp
inc
roll
add
add
push
popf
pop
sbbl
or
arpl
add
cmpsb
mov
outsb
in
inc
sarb
mov
mov
stos
sbb
mov
loop
outsl
mov
add
push
and
das
arpl
fcompl
add
and
push
mov
inc
inc
jae
pop
sub
push
rol
mov
pusha
lods
out
inc
test
cmp
loop
mov
cs
call
lahf
lock
ds
jb
aam
cmc
adc
cmp
jmp
subl
mov
int3
mov
das
ljmp
out
cmp
mov
push
aaa
xchg
les
pop
rorb
xor
test
add
pop
movl
into
or
fwait
pop
and
in
sbb
mov
push
lods
leave
test
mov
xor
pop
in
fidivrs
push
jnp,pn
outsb
scas
mov
fs
dec
int3
mov
cld
inc
adc
and
mov
jge
or
arpl
push
ror
cmpsl
sbb
jmp
sti
sub
adc
cmpb
xchg
push
rcrl
jnp
push
pop
inc
and
adc
les
jl
add
shll
aam
mov
xor
or
outsl
and
fisubrl
sahf
xor
adc
mov
nop
xchg
xor
xor
sbb
adc
adc
xor
and
cld
stos
jb
int3
pop
adc
mov
xorb
negb
in
add
mov
ljmp
dec
adc
fs
orb
sbb
mov
or
out
cwtl
shl
gs
lods
ror
iret
out
lret
stc
pop
xor
rolb
jle
fisubrl
fists
stos
fwait
sub
sbb
sub
lret
ret
inc
sub
fwait
andl
addr16
dec
inc
in
mov
das
pop
mov
lahf
dec
jne
xlat
js
xchg
mov
ljmp
and
cmp
jp
pusha
jle
mov
out
jecxz
shll
roll
ljmp
or
imul
and
dec
imul
mov
dec
fimull
mov
std
inc
inc
mov
or
xlat
adc
sub
mov
pop
jmp
loopne
fwait
lods
pop
les
cmp
movsl
fldt
adc
add
push
mov
stos
and
cmpsl
jbe
pusha
into
mov
push
lret
mov
leave
mov
in
jnp
jnp
cld
icebp
lret
mov
sub
push
inc
mov
into
mov
sub
pop
icebp
cmpsb
aad
push
mov
out
shlb
mov
xchg
or
daa
test
jge
loopne
inc
push
push
ret
imull
push
mov
mov
sbb
push
in
push
sarl
xor
mull
lret
fdivrl
mov
sbb
dec
call
sub
inc
icebp
mov
add
pop
test
pop
cmp
xor
and
hlt
into
enter
xor
cmpsl
inc
fisubrs
mov
cmpsb
push
and
dec
movsb
lret
mov
loope
add
xchg
jp
call
jge
loope
je
xlat
mov
push
fnstcw
xchg
lock
daa
pop
shrl
mov
and
dec
loopne
mul
or
fidivl
mov
fildll
inc
pop
jnp
nop
sub
inc
test
sub
fcompl
aaa
lahf
push
fmuls
jno
dec
movsb
in
adc
iret
aas
mov
in
inc
fcmovne
pop
xchg
add
fcoml
xchg
es
out
rcrb
outsl
pop
inc
js
out
mov
sub
out
enter
mov
insb
lds
imul
movsb
dec
call
pop
das
cmpb
jle
xchg
fwait
subb
inc
jl
fstpl
inc
add
test
pop
mov
xchg
loopne
in
rcrl
lock
addb
int
mov
push
add
fistps
and
hlt
cmc
js
push
sbb
jmp
mov
mov
popf
fnstsw
mov
push
in
jae
fmulp
lcall
add
mov
out
fwait
inc
aas
lods
pushf
xchg
cli
push
cli
xor
sub
sub
adc
xor
push
mov
push
push
int3
pop
insl
jmp
incl
push
add
ds
xor
or
xchg
mov
push
addl
shl
fisubl
cmp
push
xor
call
push
xchg
mov
cmpsb
js
das
lret
outsb
js
test
enter
jns
xchg
mov
or
jecxz
js
sar
xchg
pop
pop
and
out
in
mov
or
hlt
mov
and
inc
mov
pop
xchg
sbb
and
pop
bound
push
dec
imul
sub
sbb
ds
mov
jg
cmp
jno
push
push
mov
sahf
mov
mov
xor
outsb
scas
mov
xchg
xchg
xchg
add
pop
or
ss
rclb
add
pop
fucom
ljmp
add
sub
push
mov
jae
pop
nop
add
jne
push
pop
jp
adc
xor
sub
bound
sahf
dec
test
fwait
sarl
push
sbb
iret
mov
add
adc
stos
icebp
loopne
dec
scas
lods
std
js
fstps
imul
sub
cs
push
popf
and
or
push
ret
push
sbb
lods
mov
ret
rcrb
shrl
mov
ja
or
mov
xchg
and
roll
mov
pop
lods
pop
lret
mov
or
xorb
push
jmp
popa
test
aad
out
xchg
test
mov
sbb
sub
lds
push
xchg
notb
mov
ds
outsb
xor
pop
or
pop
divl
fiadds
sbb
sbb
dec
loope
push
xor
pop
lods
adc
sarl
cmc
movsb
jmp
testl
mov
cli
dec
out
push
pop
movsb
add
stos
sub
jb,pn
sub
pop
into
shlb
xchg
or
jge
or
lgs
sbbl
inc
shrl
adc
loopne
lods
addr16
mov
ljmp
movl
pop
cld
std
sbb
std
inc
lods
cmp
in
pop
sbb
adc
imul
int3
cmp
outsl
incl
popa
push
mov
xbegin
sarl
sbb
inc
movsl
pushf
sub
mov
push
xorb
or
pushf
insw
or
mov
push
jae
out
movsb
cmp
mov
inc
addr16
mov
sub
fimuls
test
pushf
insb
outsl
repz
add
inc
icebp
test
mov
hlt
mov
addr16
je
jns
jmp
insb
test
cltd
mov
xor
mov
jmp
cmc
testl
mov
pop
les
xor
icebp
fstps
cmp
mov
mov
push
jg
test
push
movsl
into
out
jo
movl
sub
out
dec
movsb
xchg
cmp
push
insl
cmc
in
xor
dec
cmp
jbe
loop
bound
xchg
cmp
pop
or
push
cwtl
add
popf
xor
mov
sub
xor
cmpsb
jge
jnp
cmp
mov
xor
dec
push
cmp
pop
iret
paddsw
sbb
add
ret
dec
add
int
aaa
jge
pop
fs
xchg
xchg
and
inc
ret
pop
sbb
xor
cmp
xlat
xlat
sahf
stos
sbb
dec
aam
adc
test
cld
add
xchg
xor
fs
cmp
and
pop
xlat
jecxz
stos
imul
aaa
mov
in
push
mov
mov
push
imul
push
push
jae
push
xchg
vmwrite
daa
xor
andl
cmc
lret
cli
push
std
xchg
fwait
inc
stos
add
push
lds
jo
or
fwait
iret
jae
ja
enter
in
adc
lea
xchg
mov
cmpsb
iret
sub
mov
int3
mov
mov
cli
push
sbb
js
je
mov
fcoms
xor
aad
inc
mov
je
cmc
cmpsl
mov
mov
roll
add
cmp
sbb
lret
out
inc
pusha
ret
or
mov
mov
jns
mov
xor
cmp
xchg
pop
sbb
xlat
jl
mov
or
dec
fsubrl
fwait
shrl
jnp
rcll
lcall
sti
addr16
fwait
mov
sub
push
and
nop
fsubrs
aaa
push
stc
cwtl
notb
scas
lret
push
push
jmp
pop
pop
lcall
into
jmp
fidivrs
lods
into
mov
lcall
mov
xor
dec
adc
ss
clc
arpl
adc
add
out
cmp
rol
adc
lret
push
fidivrl
adc
cmp
testl
ja
inc
push
in
test
pop
pop
cmp
sub
add
movsb
arpl
sbb
ss
cld
mov
adc
and
lret
mov
push
cmp
lcall
sbb
insl
lahf
sbb
rclb
dec
mov
cmp
insl
mov
faddl
inc
cmc
lods
ja
jl
mov
stos
or
cltd
mov
loop
pop
ljmp
inc
sub
or
xchg
inc
lods
mov
aam
das
push
mul
xchg
popa
ds
sbb
push
popa
xor
sti
lea
cmpl
ret
pusha
stc
jmp
icebp
mov
mov
push
push
xchg
mov
adc
and
test
js
xchg
push
xor
or
mov
cmp
push
xchg
mov
inc
inc
cwtl
pop
test
hlt
out
cmc
popf
ficoms
jmp
mov
ja
pop
sub
mov
adc
test
lret
or
sbb
xchg
jno
dec
sub
jo
in
add
push
cmpsl
jno
cld
jne
lret
aaa
mov
xor
cli
das
or
push
sbb
pusha
aas
std
cs
lahf
mul
setge
stos
push
jnp
mov
loopne
out
in
out
push
sbb
pusha
cmp
jecxz
mov
imul
add
dec
loop
dec
aas
xlat
mov
push
pusha
mov
xor
bound
jnp
or
and
jbe
inc
popa
and
xchg
xchg
xchg
negl
out
and
xor
sbbb
enter
fst
mov
mov
inc
mov
push
in
push
js
push
or
cltd
pop
aad
aas
mov
stos
jnp
test
pop
push
sub
sti
aas
sub
cmp
mov
mov
ljmp
imul
cmp
push
out
out
imul
pusha
xor
xor
or
divl
mov
sbb
mov
gs
sahf
jb
sbb
add
jmp
or
xor
outsl
out
int3
xor
or
scas
pushf
outsl
cmp
mov
dec
test
push
imul
stc
fneni(8087
sub
or
es
mov
ja
leave
xchg
xchg
ss
movsb
loope
push
inc
outsb
mov
aas
rorb
pop
paddsw
shlb
faddl
pop
push
pop
out
xchg
roll
xchg
int
pop
pop
clc
ret
lock
adc
jne
mov
xor
mov
ret
add
dec
pop
and
into
lcall
mov
fists
cmc
cmpl
idivl
and
adc
mul
les
jl
or
jle
sub
mov
add
xchg
cmp
std
iret
mov
fcompl
dec
aaa
nop
jno
mov
pop
inc
das
mov
jg
lahf
mov
jl
dec
sahf
imul
sbb
mov
and
int3
add
adc
dec
testb
lcall
xchg
into
inc
out
sub
nop
add
jmp
or
das
mov
mov
jecxz
jo
daa
arpl
xor
and
cmp
cli
aas
add
stc
dec
dec
push
pop
mov
xor
xchg
sub
pop
pop
movsl
xor
in
push
es
fwait
xor
loope
aad
jg
sub
add
shlb
int3
lods
dec
cmpsb
mov
daa
xchg
cmp
sbb
sbb
adc
sbb
mov
push
adc
sbb
ljmp
sarb
jg
pop
push
js
add
pop
pop
inc
inc
leave
push
jl
popa
adc
repz
andb
inc
jae
fcmovbe
loop
inc
dec
push
xchg
push
das
inc
xor
cld
inc
orb
jl
nop
fucomp
mov
daa
stos
sub
cli
xchg
popf
insl
jbe
lds
jnp
dec
xchg
or
iret
rcrl
sbb
sub
adc
cltd
inc
xorb
pushf
dec
mov
sbb
cmp
add
pop
imul
in
repz
in
pop
outsl
pop
sahf
cld
add
jge
repz
cli
and
jo
rcrb
inc
imul
push
sub
and
xchg
cs
dec
dec
mov
fmuls
sti
sub
mov
mov
mov
cmp
xor
movsb
aas
mov
sub
add
mov
loopne
stos
loope
shll
and
and
sub
idiv
rcll
adc
lret
mov
fidivrl
lahf
push
ss
adc
iret
xor
divl
into
mov
loopne
mov
sarb
push
cld
adc
lea
xchg
xlat
scas
add
test
sti
adc
jecxz
xchg
xchg
popf
add
js
mov
dec
addr16
jle
mov
mov
mov
repnz
stc
dec
aam
mov
loopne
sub
cmp
dec
ret
shrl
pop
popa
outsb
mov
das
push
in
mov
popa
or
adc
push
xor
stc
and
pusha
xchg
add
cwtl
pop
and
fldenv
sbb
shlb
push
clc
mov
push
pop
pop
pop
pop
mov
cmp
pop
sti
xchg
and
xchg
test
scas
mov
pushf
stc
shl
hlt
xor
scas
jnp
mov
orl
jbe
mov
add
sbb
push
xchg
push
and
push
mov
shrb
shrb
sti
outsl
dec
iret
pop
jl
nop
xchg
mov
pop
fadds
jp
lret
adc
mov
ds
jmp
out
add
lahf
jmp
mov
int3
push
sahf
push
jl
cs
mov
sub
and
dec
inc
jno
mov
cltd
rorl
mov
xchg
mov
fildll
cltd
cld
xor
pop
pop
jg
aam
rclb
add
dec
and
jecxz
mov
xor
adc
mov
addb
in
dec
ljmp
popa
inc
sub
inc
sbb
adc
xor
and
nop
adc
cld
jp
cs
in
push
enter
cmp
sub
js
pop
pop
mov
pop
sub
jo
out
mov
mov
xchg
jbe
fsubrs
inc
and
imul
add
fsubrl
push
addr16
in
mov
fists
jae
rcll
push
mov
mov
sahf
cmp
inc
push
test
in
sbb
mov
addb
lds
dec
sbb
jge
xor
dec
movsl
mov
jle
push
ss
mov
adc
loop
mov
xor
jns
cmc
mov
insl
loope
adc
lcall
add
popl
mov
inc
mov
push
imul
in
stos
loope
and
add
loope
hlt
xchg
add
loop
mov
dec
xor
mov
cmc
mov
jmp
cs
add
ret
mov
gs
jb
sub
jo
sti
sar
int3
mov
push
clc
mov
and
jge
jbe
mov
adc
ja
push
outsb
mov
xchg
xchg
lea
mov
push
dec
testb
adc
or
je
lahf
adc
mov
lcall
loope
mov
fcoml
mov
dec
aad
ret
fwait
mov
out
mov
and
mov
cmc
lret
loop
xchg
clc
sub
inc
adc
ret
andb
mov
test
orl
jg
adc
mov
jge
pop
push
mov
mov
pusha
mov
mov
sub
or
pushf
push
les
mov
mov
rcrl
aad
test
jnp
adc
xchg
test
pushf
jnp
push
int
je
repnz
pop
aam
dec
mov
inc
jb
fwait
jge,pn
scas
cmc
dec
push
mov
je
cmpsl
xor
in
sbb
out
jns
pop
in
movsl
popa
push
insl
mov
jbe
loop
std
ja
loopne
jno
scas
scas
das
dec
cld
xlat
sbb
sbb
and
mov
cmp
mov
sub
xchg
jne
mov
mov
daa
fdivr
push
stos
mov
xorb
sbb
call
lahf
decl
stos
orb
fisubrl
ljmp
loopne
sbb
pop
popf
sbb
cmp
fstp
push
mov
adc
sahf
sbb
ret
mov
out
mov
pushf
mov
xchg
adc
fmul
push
jne
fnstsw
mov
shr
xor
lods
mov
xchg
mov
sub
cs
in
andl
icebp
popf
dec
xor
jp
hlt
movsl
and
jns
shll
xchg
pop
inc
xchg
jl
lret
sub
jns
cmpsb
dec
push
cltd
inc
cmp
xchg
xor
sub
pusha
inc
stos
out
push
jae
pop
push
ljmp
rorl
cmp
pop
sbb
lret
loop
pop
addr16
dec
push
and
aam
xor
push
lcall
push
mov
jns
pop
jnp
pop
push
sbb
rclb
rol
add
into
mov
mov
inc
stc
cmp
jbe
cmp
xlat
xor
shl
test
xchg
mov
ret
add
cmp
mov
push
cs
insl
ret
out
inc
aad
add
out
sub
mov
dec
xor
sub
push
adc
dec
fiadds
mov
pop
aas
push
sub
mov
and
scas
fdiv
gs
insl
adc
inc
aam
jne
mov
or
adc
jo
jmp
pusha
stos
push
inc
rcl
mov
mov
pushf
sub
jnp
fadd
lahf
push
xchg
cltd
xchg
and
pop
les
pushf
outsb
sbb
xchg
test
add
hlt
in
add
adc
cli
xor
test
inc
adc
dec
jmp
xor
sbb
test
js
xlat
jle
into
out
sbb
cld
fs
jno
mov
xchg
int
mov
mov
fisttpl
inc
lock
push
aam
cli
xchg
pusha
daa
push
push
jg
cwtl
loop
es
stc
xchg
jbe
jno
pop
jno
int
push
test
rorb
lea
xor
push
xor
das
add
mov
cli
in
pop
mov
jno
pusha
sub
push
mov
ljmp
adc
sarl
shlb
mov
adc
or
cwtl
in
xchg
cmpsl
mov
mov
pop
repnz
jnp
out
jl
jno
pop
das
push
jns
jbe
lods
insb
popf
xor
movsl
into
lock
mov
and
movsl
in
imul
sbb
jno
sbb
lea
add
mov
and
cmpsl
iret
dec
pop
and
lods
push
into
and
xchg
insb
cmpsl
imul
jae
out
lods
add
rcll
mov
les
sbb
mov
push
call
push
push
fidivrs
mov
sbb
jmp
pop
fsubl
shll
fwait
inc
add
dec
stos
jl
test
add
jp
xor
jle
sub
cmp
gs
das
adc
xchg
fstl
jo
aad
lock
sbb
daa
sarb
add
or
ret
iret
insb
popf
out
nop
ja
push
add
jnp
cmp
ss
orb
mov
shlb
lds
hlt
push
xor
pop
addl
push
stos
and
scas
gs
imul
sbb
out
adc
inc
adc
and
push
shrl
iret
sbb
call
adc
push
cmp
add
and
xor
sbb
bound
xor
popf
les
ljmp
xor
or
shll
jge
iret
incl
stos
out
insl
mov
xor
jle
adc
adc
repnz
push
and
xchg
adc
pop
jle
xlat
sbb
push
sbb
cmp
push
mov
inc
cltd
imul
dec
pusha
mov
xor
xchg
rorl
cmp
lcall
push
sub
repz
add
imul
sbb
inc
pusha
sub
push
lds
test
push
xchg
hlt
lahf
jg
in
cmp
fcom
inc
scas
adc
mov
jg
insb
imul
lods
mov
sarb
sbbl
stos
mov
icebp
clc
fisttpll
jmp
dec
xor
in
inc
inc
pop
or
scas
dec
sub
dec
inc
push
loope
aaa
xchg
dec
inc
aad
xor
ds
push
push
adc
aaa
sub
jno
mov
rcll
fadd
xor
inc
sbb
je
mov
mov
insb
lock
ljmp
cmp
lock
push
dec
das
testl
mov
adc
inc
arpl
and
push
lret
or
inc
fwait
xchg
jge
aaa
fadd
scas
xlat
insl
imul
sti
xor
rorl
insb
hlt
and
imul
int
mov
add
mov
bound
cmp
add
jecxz
push
sub
sbb
scas
insb
jno
or
je
dec
adc
lcall
mov
jbe
mov
cmc
frstor
jle
movhps
imul
mov
jae
and
xchg
and
jno
push
les
aam
jbe
aam
mov
test
cmpsb
js
insb
push
push
dec
adc
dec
in
mov
push
ret
and
cmp
icebp
cmpsl
sahf
or
repz
xor
loope
push
adcb
cs
push
loopne
xchg
mov
xor
lahf
popf
pop
je
ss
sbb
sbb
cli
js
push
mov
movsl
jb
es
arpl
push
xchg
mov
aam
mov
inc
adc
xorl
int
mov
sbb
test
push
clc
fxch
and
add
gs
mov
mov
cmp
sub
out
jb
insl
mov
pop
cmp
out
rolb
sub
dec
addr16
pop
test
leave
cmp
popf
inc
clc
dec
add
fs
xchg
xchg
xchg
xchg
scas
es
xor
fidivrl
push
dec
dec
out
movsl
loopne
and
insb
dec
jno
in
adc
cld
adc
cmp
mov
loopne
hlt
cmpsb
int
add
xchg
xor
jmp
aas
jns
jmp
cmp
dec
mov
xor
or
scas
xor
dec
mov
or
xabort
dec
cmc
mov
lods
out
mov
sub
jbe
dec
aam
xchg
and
jbe
stc
dec
and
cltd
repz
dec
add
cvttps2pi
mov
or
cltd
clc
test
fisubrs
aad
mov
movsb
jge
pop
jb,pt
cmp
test
lret
int
cs
jne,pn
mov
adc
xchg
mov
inc
test
mov
mov
loope
push
stc
iret
xrelease
sar
inc
cmp
imul
in
ja
dec
mov
mov
daa
jo
rclb
cmpsb
xor
sub
loop
dec
dec
xor
inc
push
loope
sub
movsl
fucom
dec
mov
ror
rorb
and
imul
ret
adcb
shl
mov
mov
xchg
in
adc
in
shl
sti
in
lods
in
movsb
in
hlt
fisubs
mov
sub
xchg
pop
loope
adc
mov
je
ss
insl
sub
movsl
aaa
push
xchg
mov
aaa
push
ret
mov
imul
das
adc
faddl
cmp
push
or
test
mov
fists
loope
add
jns
aam
jp
adc
rclb
mov
out
daa
fstpl
mov
or
add
mov
jl
lret
add
in
sbb
sbb
cmp
shlb
xorb
pop
outsl
jne
loope
ret
pop
mov
jbe
or
fimull
and
aaa
pop
lret
jne
es
inc
pop
adc
inc
jcxz
pop
add
push
or
mov
pop
lret
jns
stos
inc
and
mov
cltd
cmp
in
hlt
or
movsb
test
leave
out
popa
stos
push
push
ja
mov
mov
push
mov
mov
sub
or
add
loope
cli
out
stc
xor
pop
int3
adc
push
xchg
sub
hlt
xor
or
stos
push
mov
adc
dec
sarb
popf
cmc
popa
leave
daa
push
shll
adc
sbb
rclb
rcrl
je
aam
dec
sti
fisubrl
mov
clc
aaa
jmp
sbb
xchg
ficoml
data16
adc
or
pop
jns
push
mov
je
xor
pusha
xor
cmpsb
sbb
mov
jne
imul
fmull
addr16
mov
sub
outsl
sub
iret
xchg
inc
adc
sub
fs
pop
flds
mov
lret
adc
inc
stos
mov
add
push
pusha
xor
xchg
movsb
outsb
test
call
test
aad
jb
xchg
push
lcall
jmp
jle
push
sub
dec
fisttpll
push
rorb
xchg
and
xorl
stos
mov
in
xchg
jns
jne
sbb
pusha
movsl
call
fwait
repnz
fidivrs
lahf
pop
cld
or
in
insb
scas
ror
ss
push
test
lods
cmp
popa
stos
pop
jae,pn
loop
roll
inc
mov
rol
inc
pop
dec
jl
mov
jns
cli
jecxz
inc
xchg
cwtl
aaa
mov
stos
xchg
adc
push
dec
fidivrs
fnstsw
sub
xchg
add
aad
imul
fs
fs
pusha
push
mov
fnstsw
jae
mov
jns
icebp
or
mov
dec
test
out
push
out
xchg
std
pop
push
pop
in
mulb
int3
outsb
sub
inc
aas
fsubrs
cmp
sub
xchg
cmp
mov
add
mov
cmp
push
sub
mov
mulb
movsl
push
aaa
insl
or
dec
mov
push
fs
sbb
sbb
sti
jns
adc
cmp
and
push
hlt
inc
xor
push
xor
subl
lret
lods
lahf
mov
sbb
push
sbb
in
fimuls
int3
hlt
sub
lea
or
pop
jge
data16
out
adc
ja
xor
jg
lods
ja
and
notl
jbe
sarb
out
inc
add
aam
fdivrs
inc
push
popa
xor
dec
jl
push
xchg
stos
xchg
push
mov
mov
xchg
dec
fsubs
cltd
rorl
aad
frstor
adc
mov
lcall
es
jbe
sbb
sub
ljmp
jg
arpl
push
xchg
dec
pop
xlat
nop
pop
jnp
mov
imul
sbb
inc
mov
push
xor
out
cmp
jo
fildll
pop
hlt
jl
xor
lods
into
icebp
inc
nop
mov
sbb
xchg
mov
movb
sbb
xchg
pusha
adc
jo
sti
out
xchg
pushf
mov
aaa
sbb
add
jno
xchg
jmp
add
shr
mov
popa
adc
pushf
mov
cmpsb
xchg
push
sub
ja
ljmp
ret
movsl
incl
lds
add
pop
loopne
arpl
push
les
inc
sub
fidivrs
sti
or
jb
lretw
scas
je
xor
hlt
sub
rcrl
stos
jnp
fs
or
out
sbb
fwait
sub
jg
cmc
inc
inc
test
repz
push
add
in
das
push
sbb
xchg
push
cmp
jo
cmpl
cmp
arpl
rol
fildll
adc
mov
push
pop
inc
or
jns
mov
arpl
shl
push
iret
sbb
jp
mov
pop
jne
cmp
js
mov
xchg
ret
xor
mov
sub
fs
jo
xchg
fidivrl
mov
mov
cmp
mov
pop
jecxz
xchg
jo
or
push
out
sub
insb
and
loope
sbb
popa
inc
orb
push
jl
xlat
xchg
mov
xor
scas
pop
jmp
xor
xor
subl
mov
icebp
mov
cld
fisttpll
movsl
call
clc
adc
mov
sbb
cmp
cmp
xor
pcmpeqw
mov
rolb
jne
in
adc
in
jo
jl
cmp
mov
movsb
sbb
outsb
lock
loopne
inc
or
inc
pushf
add
shlb
test
cmp
pop
cmpsl
imul
out
loopne
repz
loope
repz
int3
das
and
ret
add
cmp
mov
mov
fdivrl
xchg
pop
out
lcall
cwtl
out
jg
cmp
cli
dec
or
repz
jne
mov
mov
fdivrl
adc
mov
insb
out
lds
xchg
fimull
push
and
sahf
std
mov
dec
inc
lcall
xor
inc
jmp
inc
sbbb
les
sub
iret
jg
test
mov
dec
fnstsw
mov
cwtl
cmp
add
mov
or
mov
cmp
sub
dec
cwtl
movsb
pop
or
lcall
adc
rcl
lcall
in
int3
cmp
mov
rorl
out
cmp
adc
stc
out
inc
movsl
lock
cmpsb
adc
fcomp
mov
lea
jno
iret
pusha
daa
xor
mov
pop
std
je
enter
scas
lods
test
mov
add
data16
jle
fstl
sbb
mov
jo
dec
cmpsl
pop
ret
pushf
les
push
int3
jmp
imul
cmpb
jns
add
push
push
pop
inc
ret
pop
inc
push
push
jno
iret
inc
pop
jle
cwtl
sub
jb
adc
std
insb
loopne
mov
mov
test
mov
in
stos
adcb
push
mov
xor
sahf
cwtl
ljmp
adc
flds
inc
mov
add
sub
testl
jp
pop
sub
bound
in
jmp
jnp
dec
lret
fisubrl
dec
jmp
push
jle
inc
mov
adc
nop
outsl
inc
outsl
or
mov
fldenv
mov
popf
pop
pusha
and
mov
sbb
subb
test
pop
add
int3
sahf
fisubl
shll
fucomp
fwait
push
inc
and
fcoml
dec
sbb
mov
jecxz
leave
int
jb
push
xor
inc
fsubl
jbe
fnstenv
mov
mov
das
out
pop
in
cmp
imul
sbb
pop
jmp
cmp
dec
and
aam
in
test
xor
sub
and
xlat
loope
aas
xchg
loopne
test
pop
pusha
test
pop
imul
or
cwtl
pushf
hlt
push
mov
setle
mov
or
and
daa
lds
js
dec
pop
test
int3
jnp
mov
mov
fists
test
adc
cld
mov
bound
mov
pop
push
outsb
psubsw
push
jge
hlt
aas
ret
push
mov
mov
stos
aaa
xor
mov
xchg
cmpsl
mov
test
adc
xor
push
and
stos
and
ja
icebp
sbb
mov
jae
dec
pop
inc
xor
stc
addb
cmp
xor
jle
push
jecxz
gs
addr16
icebp
mov
add
or
rcrl
dec
lds
or
dec
jmp
jp
iret
xchg
jo
and
das
js
and
pop
dec
push
fistl
scas
shll
mov
fwait
lods
sbb
cwtl
rolb
cs
inc
push
mov
mov
xchg
pop
mov
std
inc
mov
test
or
movsl
sbb
xchg
cli
adc
and
mov
or
adc
mov
cs
insl
pop
and
pop
addl
mov
jo
mov
out
outsl
dec
mov
jbe
mov
mov
in
loopne
adc
loope
in
ret
xchg
adc
or
ds
rcl
push
lods
test
prefetch
mov
hlt
pop
adc
fisubrs
fsubrs
lds
mov
pushf
sbb
rol
inc
les
inc
inc
jge
xor
mov
xor
loopne
aas
jbe
pop
sub
xor
dec
or
sbb
leave
push
jo
jmp
push
pop
aad
dec
sti
test
fldt
dec
jge
stc
outsl
inc
add
sbb
in
sbb
or
leave
bound
lea
jnp
xor
mov
push
mov
ljmp
adc
pop
aam
mov
sub
sub
add
arpl
lods
lea
aaa
and
aas
or
add
imul
or
std
lds
dec
and
outsl
ja
cld
cmp
mov
mov
test
ljmp
and
orb
jmp
lods
lods
std
fadds
scas
or
in
dec
fcoml
jge
add
and
shrb
fidivl
dec
cmp
push
mov
out
negl
lock
dec
gs
out
dec
sti
outsl
loope
sub
into
pop
xchg
jae
push
lret
aas
xor
in
cmp
cli
sti
jl
mov
mov
ds
jmp
jl
insl
mov
pause
xchg
sbb
mov
stc
push
test
lods
fnstenv
es
push
mov
lods
lea
mov
lret
dec
imul
pop
push
lret
inc
in
cmpb
adc
imul
xchg
bound
xlat
dec
inc
insb
xor
xchg
xchg
loop
arpl
dec
popf
pop
ljmp
das
fiadds
cmp
enter
xorb
cmpsb
nop
inc
aam
rol
fdivrl
add
sbb
cs
es
inc
aam
jbe
lahf
jb
pop
lcall
mov
or
mov
push
out
in
or
adc
gs
mov
jno
xchg
in
std
stos
dec
aas
jne
pop
mov
mov
stos
aas
inc
mov
or
in
push
ret
in
out
enter
mov
push
mov
push
int
and
xor
stos
push
jnp
jne
jmp
fistpll
ret
push
mov
lods
cld
shr
sub
lahf
add
nop
call
rcrl
mov
leave
ficoml
in
jno
loop
fcomps
cmp
sbb
nop
and
sub
icebp
push
cmpsb
stc
mov
arpl
xchg
ljmp
or
adc
in
pop
loopne
test
mov
in
loope
and
call
or
pop
inc
push
mov
je
xchg
push
call
dec
inc
xor
xor
decb
subb
dec
lea
sub
push
or
sub
out
jmp
xchg
outsl
cmp
pop
or
or
int
js
dec
js
test
fadds
enter
nop
pop
mov
add
sbb
and
xor
or
mov
cmp
shrl
jmp
mov
mov
pop
clc
sub
cmc
inc
add
and
jns
sbb
in
fisubrs
cmpl
jmp
in
insb
sub
sarb
ret
hlt
push
sbb
ss
cmc
dec
or
gs
sbb
call
and
sub
xchg
pop
mov
mov
fbstp
cmp
imul
jmp
inc
mov
shl
pop
jl
div
cmpsb
lea
jb
fidivrl
stc
jbe
inc
or
dec
add
add
dec
lock
pop
push
outsl
mov
test
push
jmp
in
sbb
loope
mov
sbb
aaa
jne
fistl
pop
icebp
or
xchg
das
out
sbb
pop
and
inc
and
xchg
inc
sbb
cltd
adc
stos
loop
rorl
scas
iret
sarb
shlb
inc
shl
inc
les
data16
sub
dec
pop
and
stc
pop
jne
test
push
pop
shll
sahf
or
inc
imul
mov
das
out
ljmp
ret
jns
mov
and
sti
ffreep
sbb
loopne
mov
jp
ljmp
cmp
sbb
divb
rorb
popa
xor
dec
or
sbbl
bound
sbb
adc
pop
jb
jnp
lods
in
mov
xor
cli
outsl
cmpsb
ljmp
pusha
xorl
lock
mov
sbb
adc
mov
or
jbe
xchg
test
cmp
imul
call
pop
jno
cmp
or
or
or
inc
cld
adc
pop
inc
pop
mov
les
jg
xor
mov
rcrb
fmull
push
sbb
mov
std
cmc
out
call
sbb
in
movsb
mov
mov
xlat
adc
mov
mov
xor
movsb
lock
decb
adc
xor
push
push
outsl
subb
fcompl
pop
movsl
insl
out
test
or
lret
orl
and
cld
dec
jnp
pop
push
push
mov
adc
dec
xchg
push
lea
sahf
mov
rcrb
push
sub
mov
rolb
sti
stos
jmp
inc
leave
sbb
mov
adcb
cltd
and
xchg
movsl
sti
shll
stos
dec
fiadds
fisubrs
sub
pop
aam
push
mov
sbb
xchg
lods
mov
cwtl
sarb
jo
cltd
push
insb
ss
push
sbb
rorl
add
int3
jno
cmp
xchg
dec
add
aas
fwait
or
sub
lcall
or
repz
frstor
jo
xchg
pop
cmc
inc
inc
xor
sub
or
jae
xchg
loope
outsl
cmp
cmp
jp
into
test
lret
xor
fnop
cmp
mov
daa
mov
inc
mov
jb
push
jnp
mov
sub
mov
xorl
lds
stos
sbb
lock
aaa
int
lock
inc
imul
sbb
jo
mov
iret
ljmp
ss
cmp
test
ja
sti
jg
mov
jbe
and
cmpsl
push
sahf
cld
das
out
das
or
mov
xlat
pop
mov
mov
jecxz
cmp
fldenv
jmp
pop
pop
xor
arpl
jno
mov
ffree
ljmp
pop
dec
std
int3
fistps
test
lret
mov
pop
sub
test
cmpb
loop
pop
repz
and
jg
fsubrs
mov
int
into
shll
push
sbb
fcmovnb
or
jl
push
fadds
add
cmp
insl
push
cmp
insb
pop
xor
jmp
adc
and
adc
lret
mov
or
push
js
loop
pop
stos
jb
repz
outsb
sti
ret
mov
or
es
xchg
out
pop
or
jbe
inc
aaa
js
adc
add
mov
cmpsl
or
lds
pop
add
cmpsb
mov
xor
push
mov
int
xchg
sub
aad
mov
sti
andb
fdiv
stos
or
lcall
lea
mov
cmpsb
arpl
jge
xchg
xor
jno
sub
out
sub
sbb
into
mov
pop
pop
orl
mov
arpl
jp
and
data16
cmpsl
adc
in
xchg
cmp
xlat
std
xlat
cmpsl
rcll
subl
jecxz
mov
adc
fidivs
into
les
je
jmp
mov
mov
mov
sub
dec
or
div
mov
jge
cmpsl
dec
and
int3
add
push
xor
out
mov
xor
xlat
lea
mov
pop
cmpsb
mov
shrl
dec
jl
pop
pop
lahf
clc
cmp
push
push
jne
insl
pop
shrb
ds
jne
fadds
cmp
or
sbb
stc
cmp
xor
mov
jge
mov
sti
in
clc
adc
or
enter
mov
mov
arpl
loop
inc
in
dec
sub
cmpsl
std
sbb
mov
push
jmp
pop
or
sarb
add
cmp
jle
std
aad
adc
dec
sbb
mov
inc
inc
adc
mov
int3
xor
das
inc
aad
sbb
iret
push
dec
cmp
add
xchg
or
adc
dec
cwtl
in
sub
andb
sbb
out
xchg
dec
mov
jl
adc
aaa
pop
mov
adc
mov
insl
xchg
mov
lds
int
loopne
xor
mov
lods
cltd
outsb
imul
ret
mov
push
mov
dec
dec
testb
mov
push
fistpl
dec
inc
insl
inc
mov
pop
arpl
leave
xchg
dec
xchg
in
sub
leave
inc
stos
mov
cs
push
inc
mov
andb
xor
inc
inc
rorl
mov
pop
ret
push
orl
sbb
sbb
and
dec
jl
push
mov
stos
into
das
fninit
cmp
frstor
filds
push
outsb
push
lea
sbb
or
xchg
cmp
das
insl
sbb
jne
call
test
mov
push
mov
sbb
xchg
cmp
add
push
clc
xchg
insb
mov
xchg
adc
xchg
sub
gs
jecxz
outsb
jmp
mov
into
add
js
lea
loope
push
pop
inc
dec
test
xchg
jle
mov
stc
dec
sbb
movsb
and
xor
cmpb
jno
and
sub
jae
lock
or
jecxz
push
popa
leave
stos
test
cs
xchg
sbb
sbb
cli
loopne
mov
test
sub
jns
sbb
shr
stos
mov
or
jb
cs
je
and
negb
movsl
push
push
test
fnstcw
cli
jnp
sbb
sbbb
ss
ss
sub
addr16
pop
adc
icebp
sti
aaa
ss
push
std
fmul
dec
test
mov
aam
dec
into
fnstenv
shl
dec
subb
or
filds
mov
cmc
inc
jne
sub
push
push
inc
jns
ds
cmp
call
sbb
daa
cli
sub
adc
push
and
stc
stos
xor
stos
xchg
data16
or
push
data16
sahf
mov
fiadds
stc
jae
cmp
push
dec
mov
push
jmp
mov
xchg
cltd
test
xorl
jns
sbb
pop
insb
dec
leave
aaa
xor
and
mov
loopne
lcall
inc
aaa
jnp
fwait
inc
xor
xchg
scas
mov
mov
jle
rcll
adc
pushl
mov
jg
or
std
lea
sti
and
shll
scas
push
xor
pop
sti
fs
movsl
lret
js
xchg
adc
cltd
sub
jb
push
int3
and
sub
idivl
fdivrl
add
ds
xlat
insl
add
icebp
inc
inc
jno
data16
jle
mov
xchg
stc
adc
cmpsl
in
push
sbbl
push
mov
xchg
pop
jg
and
insb
out
push
adc
pop
test
push
inc
mov
mov
adc
pop
jle
sbb
push
lds
dec
sub
cwtl
scas
cld
cli
repnz
imul
sub
mov
sarl
addr16
sub
insb
faddl
test
ret
cmp
and
das
jecxz
push
bound
rorb
sub
push
adc
xor
adcb
int3
ret
leave
rcr
stos
or
rcrb
adc
orl
mov
jmp
jg
or
mov
jo
xchg
stos
in
mov
mov
inc
sbb
add
out
adc
mov
mov
and
xor
jbe
or
pop
and
sub
sub
add
or
cmpsb
inc
orb
adc
jp
xor
aad
test
push
or
mov
cltd
cmpsl
xchg
aad
jg
rolb
dec
fxch
loop
sub
xchg
xchg
idivb
and
mov
popa
push
fdivl
xchg
call
push
pushf
lods
lds
xor
xchg
push
jae
or
out
imul
sbb
iret
hlt
out
cli
cmp
sub
mov
fsubrs
sub
push
mov
adc
and
push
xchg
insl
xchg
add
insb
mov
push
pop
aaa
mov
and
in
fildl
ds
je
clc
loopne
ja
mov
pop
fidivl
das
ds
xchg
mov
fwait
lcall
frstor
push
in
jbe
lret
and
cmpsb
sbb
add
inc
ss
pop
xor
loope
add
sub
push
xor
incb
mov
push
jp
into
insb
lock
scas
divb
and
add
outsl
xor
mov
pop
mulb
lock
inc
sahf
stos
fsqrt
mov
mov
ss
jbe
das
in
pop
mov
lea
aaa
and
cli
push
or
rorl
lret
dec
lahf
pop
jecxz
in
movsb
pop
das
dec
sti
jnp
and
cli
mov
and
dec
sahf
lds
mov
out
xor
push
out
inc
jb
fsts
sbb
xor
mov
xchg
das
mov
fsubr
rcll
paddusb
inc
ret
add
addr16
pop
call
cld
dec
pop
jne
push
mov
imul
ja
pusha
dec
sub
ret
repnz
xor
xchg
test
xorb
mov
bound
stos
cwtl
cwtl
repz
add
fdivrs
xlat
mov
push
sbbb
jno,pn
mov
cwtl
roll
adc
loope
push
fwait
mov
xor
jl
push
call
mov
ret
xlat
cmpsb
stc
out
mov
aaa
popf
ret
mov
mov
fldcw
repz
push
loop
repnz
mov
int3
dec
pop
pusha
xchg
mov
cwtl
push
testb
cmp
mov
fdecstp
dec
xor
or
pop
out
jle
nop
jle
sub
test
adc
sub
xchg
pop
push
mov
mov
scas
mov
adc
stc
shl
xor
sarb
jno
sub
pop
scas
rcll
adc
sub
hlt
push
movsb
imul
or
push
nop
clc
xchg
mov
movsl
cltd
xor
paddd
mov
xchg
xchg
pop
ficoml
dec
inc
jns
sbb
sti
cltd
daa
jmp
jno
enter
icebp
out
xor
pusha
in
icebp
and
pushl
sub
aad
mov
sbb
mov
repnz
mov
push
ficoms
sub
or
popa
lock
sbb
and
jmp
les
add
pop
out
out
fs
shlb
insb
sbb
and
insl
pop
es
cmp
divl
and
inc
xchg
cmp
daa
dec
and
in
leave
es
insb
std
imul
mov
loope
int
movsb
jle
sbb
xchg
sbb
das
ljmp
sbb
cmp
sub
mov
pop
cmp
jg
pusha
adc
or
repz
fsubl
jb
std
sub
sub
daa
cmp
out
ja
pop
arpl
nop
jne
popf
hlt
repnz
add
or
test
xor
sub
fadd
int3
test
and
push
loope
jmp
mov
mov
sub
cmp
sub
fldcw
mov
pop
cmp
pop
sti
imul
es
in
dec
out
into
sbb
xor
xorl
push
jo
xor
add
scas
or
cmc
pop
out
sbb
mov
cwtl
xor
fwait
and
ljmp
ret
or
clc
jne
pop
mov
pop
mov
std
mov
in
cli
inc
add
fstp
mov
mov
mov
cmpb
cmp
or
jo
xlat
popf
lcall
sbb
jle
dec
lods
sahf
arpl
add
repz
das
mov
push
cmc
fsubs
pushf
je
mov
scas
pop
sub
mov
sti
pop
int3
sbb
cmp
leave
imul
inc
xchg
outsl
dec
popf
lahf
lods
xchg
clc
ror
leave
sbb
push
jmp
arpl
push
xchg
xor
jp
int
xchg
scas
icebp
mov
call
insl
push
outsb
idivl
repz
es
jb
dec
dec
mov
daa
mov
rolb
pop
pop
sub
mov
push
dec
and
lahf
cmp
das
mov
dec
aas
daa
fisttpll
cli
lret
movsl
sub
aas
sti
lret
fmul
pusha
in
cmc
xor
cmp
xchg
movsl
mov
je
call
mull
sub
mov
lds
mov
pop
js
pop
dec
jge
adc
imul
cmpsl
cmp
sbb
sub
outsl
nop
mov
jns
ret
iret
jne
xchg
jg
daa
rcrl
out
int3
sbb
cmp
mov
dec
cli
pushf
or
fnstenv
ja
movsb
add
pop
andl
fimuls
loop
jecxz
xchg
dec
fwait
les
xor
scas
test
cmc
push
ljmp
push
xchg
orl
jne
jae
mov
fimull
jp
add
imul
xor
call
filds
inc
shlb
std
cmpsl
xchg
movsl
out
repnz
stc
test
cmp
adc
cmpsl
clc
jg
nop
xchg
enter
insb
xchg
jbe
clc
or
xor
or
push
jg
jl
mov
aaa
fs
sbb
xchg
dec
lahf
out
aam
add
inc
fmuls
addr16
mov
shlb
fimull
rol
push
mov
xor
push
mov
inc
hlt
iret
popf
cmp
aas
arpl
mov
in
in
mov
inc
mov
sbb
mov
inc
scas
and
fs
fistpll
in
lds
fildl
shll
adc
cmp
popl
test
jp
aad
mull
xor
and
jnp
or
in
clc
push
test
mov
sub
cmp
pushf
sbb
pushf
into
mov
inc
jle
int
in
mov
sub
mov
sti
xor
xchg
fcoms
adc
mov
or
push
sbb
lea
loop
sub
jae
dec
add
lds
xchg
mov
inc
or
push
jnp
push
insb
mov
jge
and
movsb
adc
aam
inc
lret
push
add
adc
push
push
roll
lds
movsl
mov
call
pop
orl
lods
adc
test
shrb
out
xor
ficomps
add
orl
pop
out
mov
or
stos
out
adc
inc
pop
jge
inc
push
pop
adc
sub
mov
adc
adc
into
pop
les
push
jns
shll
add
push
outsl
cmp
mov
enter
sbb
pop
movsl
inc
sahf
lahf
xchg
xchg
cltd
push
movsl
movsl
push
mov
aad
jb
sbb
and
dec
dec
nop
xchg
pusha
adc
imul
sbb
test
inc
test
out
adc
cmp
cmp
sub
outsb
nop
aam
idivb
bound
std
cwtl
lea
arpl
lret
paddusb
add
adcb
enter
mov
mov
mov
cmp
and
int3
lds
mov
mov
xchg
mov
xchg
adc
insb
icebp
fwait
cltd
jno
sbb
cld
das
es
inc
pop
mov
cmp
sub
lahf
jnp
js
push
sub
push
jle
cmp
pop
clc
pop
outsl
clc
dec
xchg
cwtl
test
mov
and
mov
dec
mov
lret
mov
cmpsb
iret
and
fsubs
and
pop
sub
shll
popa
dec
inc
cltd
jle
dec
ja
sbb
aaa
push
inc
jb
dec
test
outsl
faddp
loopne
pop
leave
pop
sub
adc
lret
pop
iret
xlat
pop
lret
aaa
mov
mov
xchg
shrl
lcall
aas
fcoms
sub
ret
imulb
popa
xchg
mov
cmp
or
dec
adc
cmp
fisubrl
fdivl
xor
pop
mov
inc
call
mov
idivb
incb
jge
pusha
mov
test
push
mov
int3
pop
popa
add
test
inc
mov
mov
pushf
dec
ret
leave
out
outsl
ljmp
add
aaa
fisttps
or
iret
pop
or
inc
sahf
vcomiss
mov
adc
sub
or
mov
mov
pop
ret
mov
or
scas
push
rorb
push
jnp
data16
mov
repz
pop
jo
rcrl
shll
lret
roll
or
div
adc
jp
pop
or
jnp
lret
sub
dec
jns
dec
mov
js
xor
mov
mov
stc
mov
jae
mov
nop
fyl2x
clc
mov
lret
mov
scas
ja
fmuls
push
stos
int
sti
jle
inc
loope
loope
sub
into
scas
stc
add
sub
in
xchg
rolb
push
pop
jns
scas
pop
je
and
fidivs
ss
sbb
test
faddl
pop
cmpsl
mov
out
mov
fdivrl
xchg
mov
das
add
adc
cmp
shll
mov
jle
cmp
loope
mov
inc
ret
shll
popf
shr
push
jns
repnz
or
pop
mov
ss
xchg
pop
stc
int
cmpsl
sub
jne
or
outsl
fidivrs
sbb
mov
adc
lea
sbb
mov
shrl
mov
out
imul
or
aam
cmpsb
imul
ret
mov
cmp
repz
pop
mov
xor
pop
cmpb
loop
xchg
lods
adc
sub
cmpsb
es
push
sbb
sbb
pop
in
push
movsl
test
xlat
fstp
mov
dec
mov
pop
mov
inc
pop
xchg
dec
xchg
mov
mov
lock
jae
in
and
stc
in
jmp
xor
hlt
jl
jecxz
mov
xlat
mov
xchg
addr16
flds
cwtl
sbb
lods
pushf
int3
add
out
xor
push
and
shrl
jl
inc
in
scas
push
in
push
xchg
popa
dec
xchg
add
jl
hlt
out
dec
mov
add
ret
mov
xor
test
sub
jmp
mov
es
xchg
or
push
imul
das
cmp
lods
testl
xchg
pop
xchg
scas
mov
int3
imul
push
hlt
mov
or
inc
push
lods
or
cmp
xchg
and
dec
fs
pushf
push
cmp
out
or
jp
pop
sub
je
cmc
adc
js
mov
shll
mov
mov
dec
cmp
mov
movups
adc
inc
mov
push
mov
aam
or
jns
jle
mov
arpl
cmc
leave
lret
rcr
mov
out
bound
add
call
cmp
cmc
outsl
arpl
or
lock
icebp
sub
and
adc
clc
cmpl
stos
sbb
popf
loopne
das
dec
jbe
ja
imul
jecxz
add
ja
movsb
aas
shl
out
and
fisubl
or
or
es
jae
adc
fidivl
cmc
in
bound
ljmp
or
popf
mov
adc
push
dec
push
mov
shll
xchg
call
xor
outsb
fisttps
bound
push
pop
inc
inc
data16
sbb
sahf
adc
out
inc
or
nop
cmpsb
test
call
imul
cmp
repz
or
test
cmp
jae
push
cs
jbe
ficoml
adc
pop
in
or
fdivp
pop
mov
lret
sub
fistpll
inc
sub
inc
fadds
pop
mov
cmp
push
lcall
mov
call
sub
xor
mov
mov
les
sbb
fsubrs
insb
cld
sub
cmp
insb
cltd
decb
pop
stos
out
xchg
jmp
into
repz
xchg
pop
adc
cli
dec
fdivr
subl
scas
rcrl
lret
xchg
inc
lahf
push
xor
jp
das
lods
dec
inc
sti
xchg
adc
mov
scas
xchg
out
in
dec
adc
aam
pushf
cltd
add
std
movsb
push
jle
adc
fnstcw
push
xchg
das
jge
aaa
subb
sti
movsl
push
pop
xchg
mov
lds
inc
push
adc
xchg
call
rcr
push
adc
cmc
ss
add
jg
enter
xorb
test
ss
jmp
out
and
rcl
mov
fucomi
nop
scas
enter
sub
fisttpll
fcompl
or
cmp
jecxz
cmc
dec
jne
and
cli
adc
loope
inc
cli
int
hlt
test
cld
adc
jbe
leave
dec
xchg
xchg
xchg
scas
bnd
pop
sar
xchg
lock
cld
aam
adc
fwait
mov
fisttps
fwait
mov
lock
or
or
repz
mov
cmc
adc
mov
sbb
or
add
fidivl
push
mov
xor
mov
and
fs
test
inc
sub
aam
sbbb
inc
pop
int
cmp
sbb
outsl
fcmovnu
or
push
xchg
and
ja,pt
lods
xor
gs
push
add
les
sahf
adc
mov
jg
aam
and
fisubs
mov
cmp
mov
mov
mov
mov
out
ja
pop
addl
push
int
push
mov
movsl
xor
ja
ja
jge
push
pop
je
mov
stos
mov
push
pop
pop
inc
push
lods
jae
fnstenv
lret
mov
or
lahf
ja
sbb
shrb
lret
fdivl
rorl
jae
jne
cld
mov
mov
push
inc
and
xor
les
mov
mov
test
ret
stc
popf
push
pop
lretw
dec
lock
and
pop
adcb
data16
adc
xchg
jecxz
fdivrs
sbb
enter
sbb
sub
push
add
daa
jg
jmp
add
sub
cmpsb
leave
fadd
pop
mov
dec
sbb
lret
rcll
xchg
daa
scas
jae
cwtl
and
inc
test
mov
cli
out
insb
lods
scas
dec
out
push
ficoms
ror
push
jbe
loopne
pop
mov
xchg
push
je
mov
outsb
aam
out
cmp
push
loope
stos
xor
pop
cwtl
xchg
ret
dec
xchg
pop
imulb
pop
dec
loopne
sti
inc
push
cwtl
xchg
sub
ljmp
lret
aas
sbb
cli
mov
lock
jmp
rcrb
je
dec
push
popf
and
into
sbb
inc
mov
adc
dec
fildll
and
cmp
or
fs
push
mov
js
mov
mov
push
adc
sbb
adc
movsl
jo
pop
mov
lods
stos
xchg
jo
xchg
sbb
mov
push
xor
ljmp
sarb
cmp
imul
test
js
rorb
fistl
jmp
test
xchg
inc
aaa
add
int
outsl
mov
ret
cltd
scas
jge
push
pop
xchg
mov
xor
or
addr16
in
xor
jl
dec
pop
iret
pop
xchg
pop
ja
aam
mov
inc
mov
data16
dec
outsb
or
out
push
mov
push
out
jge
or
pop
fcomip
adc
or
sbb
jg
out
inc
sahf
out
push
sub
xor
push
lds
shlb
les
or
xor
mov
xor
push
cmp
test
inc
movlps
negb
ja
mov
cmc
in
dec
test
mov
dec
arpl
fs
in
fldt
inc
pop
xchg
adc
jns
sbb
sti
decl
pop
mov
inc
and
add
into
push
cltd
jge
js
adc
jae
pop
xchg
pop
and
pop
mov
out
push
pfmul
andl
pop
xchg
imull
ja
daa
rep
mov
jo
hlt
test
xor
out
addr16
or
fwait
jne
cli
les
adc
mov
xchg
xchg
call
scas
fwait
jecxz
adc
dec
lahf
mov
js
mov
mov
out
add
pop
movsb
adc
stc
mov
pusha
pop
out
mov
push
pusha
cmp
adc
les
ljmp
push
inc
and
or
insb
sbb
imul
mov
adc
pop
xchg
mov
mov
fwait
mov
mov
pop
xchg
cli
jnp
daa
mov
cltd
cwtl
push
dec
inc
aas
stos
mov
ret
jns
scas
int3
daa
cmp
xchg
xlat
cld
and
inc
adc
divb
jbe
int3
lahf
fsts
loop
sub
jg
inc
xchg
aaa
mov
int3
adc
jbe
push
movsb
out
je
xchg
sbb
repnz
scas
mov
call
adc
inc
pop
rclb
repz
jne
stos
push
insb
int3
pop
and
cmp
subl
pop
and
jbe
sub
out
or
lret
push
or
ljmp
inc
in
lret
mov
mov
mov
icebp
loope
int
stos
adc
add
inc
fisubl
jbe
push
test
sahf
push
xor
inc
popf
scas
mov
push
push
mov
gs
je
add
xchg
inc
out
cltd
icebp
aas
jae
mov
adc
test
gs
out
addl
sub
mov
dec
jecxz
stos
lock
jne
pushf
popa
shl
mov
mov
adc
cwtl
mov
test
mov
insb
xorl
adc
xchg
jl
jecxz
lock
sti
push
sbbl
outsb
repz
push
ret
or
cmp
jns
outsl
add
push
xor
call
out
jmp
mov
lods
add
pop
popa
dec
mov
fstp
mov
adc
xchg
adc
jno
push
mov
repnz
mov
icebp
dec
popa
mov
cmp
mov
dec
push
ds
dec
pushf
xchg
xchg
bound
or
ret
ret
or
mov
pop
mov
idiv
ja
fs
test
mov
shrl
or
and
test
mov
clc
sub
mov
test
jmp
sar
mov
pushf
mov
and
inc
repz
test
test
idivb
notl
leave
dec
xor
or
mov
clc
sbb
jp
fnsave
out
and
push
out
xchg
jns
push
xchg
xchg
add
lods
cmp
cli
cld
mov
fst
sub
lcall
cmc
dec
test
std
ds
clc
fistl
pop
dec
dec
mov
repz
mov
or
aaa
mov
lahf
push
popa
adc
lea
cmpl
dec
adc
xor
lock
jmp
cmp
popf
lcall
sbb
les
sbb
pop
pop
xorl
lret
mov
sbb
push
scas
add
sbbl
lret
and
mov
ret
shr
sub
push
push
test
test
icebp
xor
inc
xchg
movsl
sbb
dec
cmp
das
bound
stos
sbb
cs
inc
fisttps
fcmovne
xchg
dec
pusha
jmp
sub
lret
mov
aam
dec
xlat
push
test
int3
std
jl
cli
in
and
lahf
dec
jbe
fisubs
jl
mov
xchg
jge
and
lock
sbb
lret
adc
xor
sub
ss
inc
add
xchg
imul
sub
cltd
or
add
std
push
out
shl
jns
mov
arpl
sub
bound
lret
push
cmp
mov
sbb
mov
jle
loope
or
out
mov
iret
pop
jmp
imul
popa
mov
pushl
sti
and
and
sti
in
push
jne
xchg
rcrl
popa
enter
movsl
push
cmp
add
aad
stos
sub
aam
xchg
rolb
fs
hlt
jl
movsb
iret
and
lea
sti
psraw
movsl
mov
hlt
ret
dec
mov
mov
adc
push
nop
sbb
popl
cmp
jg
fs
loop
ss
jecxz
aaa
cmp
adc
scas
add
sbb
xchg
pop
orl
adc
cmc
mov
xchg
sbb
jmp
mov
ficompl
iret
in
ljmp
mov
sbb
and
cmp
stc
mov
inc
push
lea
es
outsb
xchg
mov
sub
aas
mov
xlat
dec
xchg
push
jecxz
inc
ret
notb
mov
mov
into
lret
out
cmc
xchg
cmp
hlt
add
mov
mov
jbe
push
jecxz
out
jmp
pop
sarl
xlat
in
pop
mov
push
dec
scas
push
orl
mov
pop
xchg
lret
sti
shlb
add
jbe
int3
cld
xchg
xor
xchg
push
add
push
mov
int
insb
push
lea
inc
insb
pop
push
addr16
bts
sub
adc
scas
add
iret
filds
xchg
push
jb
xchg
ds
and
mov
notl
in
jecxz
lahf
cmp
jbe
jl
sbb
jns
or
mov
ja
pop
cmp
adc
testb
ljmp
jbe
dec
inc
es
lods
xchg
imull
push
jle
push
lods
jae
aam
push
mov
and
and
adc
sbb
or
int
adc
cmp
xor
loop
push
fsubs
mov
lret
and
inc
cli
fsubl
out
jo
xchg
adc
mov
lock
popf
in
adc
bound
sub
inc
xchg
adc
popa
ficompl
cmp
cld
cmp
dec
and
mov
imul
xchg
leave
xor
lods
or
mov
setno
adc
popa
sbb
xlat
and
or
cs
sub
push
out
stos
mov
jp
cld
dec
jb
fs
test
push
adc
hlt
sbb
ja
movsb
daa
cmp
int
icebp
gs
sarb
sbb
fistpll
cwtl
adc
out
cmp
mov
jbe
mov
push
aam
add
mov
xchg
test
xchg
imul
stc
fwait
xchg
fsts
sbb
xor
pop
jo
xchg
insb
insb
jmp
out
adc
and
add
push
inc
sub
pop
and
dec
aam
sub
push
inc
mov
lock
fisubrl
ret
lods
mov
mov
xor
lcall
mov
jb
outsl
and
bound
ljmp
xchg
shr
add
sahf
adc
pop
ja
int3
repz
pop
xchg
pop
addb
es
mov
sti
aaa
in
movsl
mov
mov
mov
fistpl
sti
ffreep
pop
dec
adc
repz
pop
pop
test
fisubs
mov
jb
sbb
cld
pop
cld
fsts
fisttpl
imul
pushf
scas
jl
cmp
jg
mov
jmp
stos
sub
loopne
jl
xchg
add
adc
out
pusha
stos
mov
stos
cwtl
pop
lahf
push
or
mov
mov
add
xchg
ss
loop
cmp
jns
cwtl
rcll
pushf
inc
ret
mov
mov
jmp
fs
jge
mov
pop
pop
xor
faddl
sub
data16
pop
sbb
mov
and
inc
xchg
push
or
jle
sub
andb
xchg
mov
aaa
inc
add
int3
sub
mov
or
push
cwtl
sbb
xor
mov
mov
jg
ja
in
xchg
call
cwtl
rorl
enter
pop
pop
pop
cmc
pop
mov
add
cmpsl
mov
sbb
xor
fs
pushf
mov
cwtl
inc
cmp
hlt
sub
out
add
aas
cmp
fiaddl
lahf
xchg
jb
lret
jns
inc
jg
xchg
jae
xchg
xor
push
in
insb
mov
pushf
es
pop
cmc
dec
or
jp
imul
mov
mov
xchg
sub
popa
out
jg
leave
scas
pop
in
div
popf
jo
jns
fistpll
xchg
out
mov
rep
and
test
xchg
das
fucomi
push
leave
push
push
sub
jbe
fs
xor
test
ja
ja
adc
add
and
stos
aas
pop
and
and
sub
mov
hlt
test
jbe
mov
xor
enter
fisttps
call
jmp
push
mov
jbe
pop
mov
repnz
xor
inc
or
cmp
jne
loopne
inc
jo
pop
sbb
sti
xchg
aam
enterw
ret
mov
lods
pushf
ljmp
aam
pop
shlb
mov
and
mov
sti
dec
scas
xchg
mov
rorb
std
push
or
jnp
adc
int
aas
sbb
fstl
cmp
cltd
enter
mov
js
mov
jecxz
mov
scas
out
mov
cmpsb
cwtl
or
das
inc
scas
xchg
bswap
jne
ret
or
lds
hlt
push
and
pop
sbb
lret
inc
inc
sbbb
cmp
sub
xor
stos
ja
movsb
icebp
xor
fldpi
jbe
mov
icebp
cmp
arpl
xor
imulb
pop
cmp
lcall
xchg
cmp
mov
add
inc
iret
adc
stos
push
cmp
mov
dec
xchg
pop
out
push
adc
xchg
inc
cmp
movsl
and
lret
sti
out
inc
scas
xor
shl
push
lods
push
adc
bound
pop
jmp
insb
fsubs
mov
inc
adc
nop
cli
bound
divl
jmp
mov
imul
mov
xchg
xchg
mov
loopne
xchg
iret
sbb
mov
mov
mov
ds
inc
aas
jle
scas
adc
arpl
icebp
mov
into
dec
sub
cmpsb
out
push
repnz
repnz
test
nop
sbb
ds
dec
jno
cs
sbb
mov
push
mov
scas
pusha
push
and
cltd
pop
outsb
icebp
mov
outsb
and
mov
stos
jbe
aas
xchg
add
sbb
repnz
test
outsl
cld
je
and
pop
mov
and
stos
mov
int
lds
ret
aad
call
pop
fisttpl
dec
dec
pop
sub
test
mov
or
xchg
pop
xchg
jbe
imul
inc
fwait
cmp
das
out
enter
and
or
and
cli
push
movl
push
mov
test
xor
fwait
sarb
out
push
pop
cmp
adc
pop
mov
mov
jmp
daa
fcoml
jmp
push
mull
enter
mov
sti
or
push
xchg
dec
lock
je
imul
out
fdivrs
mov
out
in
into
ljmp
in
dec
push
test
loopne
jb
and
dec
cli
ja
pop
jg
cld
mov
inc
and
aas
mov
jnp
fildl
sub
xor
push
jecxz
sbb
sub
dec
xor
and
jmp
push
int
mov
iret
mov
mov
ficompl
movsl
mov
dec
cmp
rol
xchg
push
shld
pop
jbe
sub
mov
rorl
and
dec
scas
pusha
push
adc
dec
push
or
flds
fwait
jge,pt
dec
push
out
push
jb
cli
repz
xor
add
push
out
data16
out
movsl
xlat
sbb
jecxz
adc
fadds
add
sub
dec
xchg
lock
lock
adc
add
inc
sub
bound
xchg
sbb
ja
mov
xchg
dec
stc
pop
aam
addr16
and
jmp
xor
adc
adc
stc
xchg
inc
mov
sub
arpl
and
testl
shrl
mov
call
cli
and
mov
cld
loope
dec
aam
pop
pushf
pop
loope
mov
lret
pop
jne
pop
cmp
xchg
decb
and
mov
ficoml
insl
jp
mov
mov
into
mov
jno
clc
movsb
sub
cmpsl
mov
jle
ljmp
sahf
and
or
and
cltd
mov
jae
in
add
pusha
push
ja
pop
inc
jl
and
dec
cmp
jge
xchg
sub
jle
leave
adc
ds
lea
fistps
xor
mov
sub
in
call
dec
test
cmp
cld
inc
pop
xor
outsb
sbb
mov
xor
push
mov
jns
fistpl
xor
sbb
push
iret
jmp
jo
shr
mov
in
bound
loopne
outsl
fistpll
jae
and
repnz
out
pop
inc
sub
rol
ficoml
inc
add
dec
and
inc
hlt
clc
push
ficoml
jnp
push
push
lock
enter
inc
add
add
pop
and
imul
popf
jb
push
inc
sbb
subl
shll
ret
xchg
cltd
or
into
insb
aad
lcall
add
enter
jg
push
pop
jmp
in
xchg
icebp
lea
bound
jns
mov
pusha
cmp
sub
jmp
add
shlb
stos
cvtps2pd
xor
fistpl
sub
xchg
push
and
test
xchg
or
sbb
cmpsl
push
xor
rorl
test
gs
out
pmulhuw
rcrl
fisttpll
negl
mov
inc
push
iret
nop
sub
fstpl
mov
cld
lcall
jg
mov
mov
cmp
jbe
mov
add
push
rcrb
sahf
sbbb
lods
sub
les
mov
fwait
stc
insb
adc
mov
sub
loop
scas
xor
jns
stos
adc
addl
out
sti
pop
jmp
fs
pop
ss
je
cmc
mov
cmp
or
mov
xchg
stos
in
stc
xchg
icebp
sub
mov
mov
jne
mov
sti
insb
iret
divb
je
bound
int
or
out
std
sbb
lahf
movl
pushf
movsb
idivl
out
dec
and
cs
test
mov
pop
mov
push
shrb
push
orl
std
pop
insb
aas
sarb
or
hlt
or
mov
int
pushl
imul
or
inc
add
in
add
inc
jmp
inc
cltd
test
push
push
xorl
imul
sbb
xchg
dec
rorb
cmp
lds
jno
scas
ret
dec
pushf
bound
mull
ret
adc
in
sbb
jecxz
pushf
das
in
mov
mov
popf
mull
shll
add
out
push
adcb
mov
insl
mov
sar
jge
mov
fwait
dec
adc
add
mov
sub
ret
insb
and
repnz
dec
pop
mov
jne
push
push
sbb
sub
dec
mov
icebp
mov
dec
addr16
xor
xchg
leave
pop
inc
mov
icebp
inc
inc
sub
sub
or
movsl
shr
std
cli
mov
pop
xchg
jp
sbb
cmp
mov
cmc
test
mov
rorb
daa
mov
mov
jg
lcall
mov
dec
mov
fldl
in
int3
ficoms
xlat
js
pop
xor
es
arpl
stc
int3
push
jmp
xor
push
lock
in
xchg
pop
shr
sbb
sbb
jno
es
jns
fadd
pusha
sbb
dec
add
push
add
and
cmp
cwtl
add
push
pop
cmp
loope
push
idiv
cli
stc
fildll
inc
jo
dec
push
adc
jp
je
xor
xchg
xchg
or
sub
xor
sbb
orb
and
movsl
popa
popf
jbe
sbb
sub
mov
dec
ror
adc
pop
adc
pop
sbb
and
stos
sbb
sub
insb
pushf
jmp
xchg
xor
pop
lds
dec
inc
loopne
leave
in
sub
and
cld
jecxz
sub
fdiv
loop
dec
sub
mov
jno
mov
cmp
xchg
cli
jge
cmpb
fisttps
adc
inc
sub
dec
mov
mov
xchg
adc
dec
stos
scas
and
in
adc
shrb
mov
fldenv
psubd
aaa
add
out
loope
fildl
dec
mov
pop
xchg
stos
cmpb
or
cmp
out
icebp
xlat
cli
lret
inc
insl
adc
mov
jl
imul
stc
jge
push
shll
std
and
ja
out
sbb
xchg
cmp
and
jle
jne
iret
lahf
cmp
lahf
mov
mov
les
fdivl
jge
stos
orl
and
adc
stc
clc
and
scas
repnz
call
pop
lret
xor
out
lret
rcrl
in
push
lret
sub
mov
dec
mov
scas
cmp
jne
mov
adc
mov
pop
mov
dec
gs
mov
cmp
mov
or
fstps
pop
mov
outsb
jg
sub
push
fsub
or
push
push
or
in
fs
std
add
dec
test
add
or
jle
xchg
sbbb
add
xchg
xorl
dec
and
outsb
cmpsb
cmpsl
pop
dec
push
fstpl
int3
andl
xchg
les
xor
lcall
and
mov
sbb
sub
push
or
dec
fstl
sub
push
pop
gs
pop
add
inc
mov
cmpsl
inc
mov
or
jg
arpl
sahf
clc
fistl
je
sbb
pushf
dec
sbb
int3
mov
jnp
sub
out
xor
push
inc
int
and
cli
lcall
pop
xchg
add
mov
or
xor
sbb
clc
mov
sub
repz
mov
ficoml
xchg
pusha
add
sbb
stos
das
inc
adc
sub
shlb
mov
out
jg
push
les
mov
mov
jae
pop
cmp
xchg
mov
rcrl
jno
pop
jmp
cmpsb
mov
ljmp
pop
inc
stos
xchg
leavew
jbe
leave
fs
xlat
xchg
fs
pop
dec
out
pop
mov
jne
ret
add
push
mov
mov
sbb
pop
push
sub
dec
movsb
add
add
lcall
xlat
ret
sub
xor
cli
rcll
push
das
sbb
mov
in
mov
inc
mov
cwtl
test
jbe
shll
xchg
mov
outsb
fbld
jnp
cmp
sarb
arpl
aam
mov
test
int
popf
and
inc
cs
or
adc
mov
adc
leave
and
stos
fcomps
sub
sbb
test
movsb
sub
cld
sub
dec
and
pop
jns
and
lret
xor
sarb
pop
pushf
mov
popf
adc
add
pusha
imul
mov
cmpsb
pop
adc
scas
or
add
ficompl
sbb
cmpb
pop
sub
lahf
or
adc
icebp
movsl
sbb
gs
sti
aam
adc
pop
cwtl
sahf
das
fisubrl
std
inc
lods
adc
jle
add
sahf
lods
movsl
ret
imul
cmp
stos
adc
adc
dec
sahf
mov
and
add
adc
enter
adc
cmp
cmp
repnz
test
rcll
repz
and
into
mov
xor
mov
imul
icebp
into
out
imul
jp
andl
or
push
fsubrs
pop
mov
inc
lods
cs
jne
xchg
xchg
pop
jge
das
pop
push
dec
orb
inc
cmp
jae
in
loopne
out
cld
lds
aas
sbb
sbb
jns
cmp
jmp
cmp
in
cmp
arpl
jmp
insl
les
mov
mov
sub
mov
inc
aad
push
sahf
push
insl
mov
std
push
out
lods
in
sbbb
inc
mov
xor
inc
bound
lahf
js
out
jns
and
sub
inc
sbbl
das
inc
sarl
pop
mov
mov
sbb
imul
push
sbb
repnz
jecxz
xchg
lock
test
jnp
mov
jne
ja
dec
dec
pop
scas
push
lock
jnp
adc
push
dec
cs
movsb
shrl
outsb
clc
fimull
mov
fwait
cmpsb
pushf
sub
dec
dec
fldenv
xor
pop
and
push
out
inc
dec
sbb
dec
loope
xor
insl
sub
lods
pop
lods
fistps
fstpl
add
jae
or
adc
or
mov
in
and
mov
add
vpsubq
mov
push
sar
adc
cmp
cli
and
lods
push
mov
xchg
in
popf
mov
sarb
push
adc
pop
add
outsl
add
aad
and
mov
mov
xchg
sahf
pop
pushf
xchg
ss
push
fldenv
pop
cmp
pop
xchg
icebp
mov
out
out
andl
es
xor
pop
xor
out
push
cmp
dec
fldl
out
jbe
sbb
out
adc
loop
jmp
pop
scas
inc
or
in
push
xor
ja
and
imul
rolb
shll
or
sbb
and
inc
xchg
dec
mov
xlat
pop
test
ja
mov
es
jne
sahf
shlb
sbb
xchg
sub
push
nop
scas
xor
ror
iret
xchg
and
mov
xchg
into
mov
jno
push
jnp
jmp
mov
fidivs
xchg
add
je
fistps
in
jns
out
adc
call
cmpb
loop
fldl
sbb
cmpsl
pop
cmp
and
dec
xchg
mov
std
push
or
cmpsb
decl
rcrl
pop
add
xchg
adc
stc
jae
adc
push
sbb
push
or
fsubs
lret
adc
stos
sub
ja
outsb
es
jae
pop
mov
dec
jb
cmp
pop
cs
push
and
div
mov
faddl
add
mov
shl
scas
push
pop
outsl
ss
rcl
xor
sbb
adc
rorb
fiadds
dec
lods
sbb
or
push
lea
cld
ljmp
adc
lahf
test
shl
cmpsl
mov
mov
mov
inc
sub
icebp
sub
mov
and
les
aad
add
sahf
fldcw
push
jle
cli
out
mov
movsl
lods
movsb
dec
and
adc
fmulp
mov
mov
inc
mov
nop
add
mov
cltd
sub
subb
fwait
mov
pop
lods
std
mov
cmp
jns
push
pusha
xchg
xor
scas
mov
sbb
es
jecxz
in
xchg
mov
sbb
subb
sub
int3
iret
jns
jo
dec
daa
jg
sub
sub
aad
inc
flds
pop
mov
cmp
sbb
inc
or
fistpll
inc
adc
ds
xor
add
mov
cli
and
incb
push
add
push
mov
mov
leave
movsb
dec
xchg
adc
bound
jg
and
dec
and
add
add
std
lea
sub
xor
lret
mov
lahf
das
xlat
rclb
xchg
scas
xchg
jae
in
shlb
insb
pop
dec
into
adc
pop
mov
ret
inc
andb
pop
sub
scas
xor
cltd
shlb
jl
pop
sahf
and
outsb
call
in
and
scas
pop
lods
loop
push
or
insb
push
pushf
xchg
insb
xchg
pop
bound
ror
ret
inc
push
insb
inc
test
pop
jb
int3
cmc
xchg
xor
movsb
jns
pop
add
cmp
lahf
pop
insl
popl
cmp
daa
es
into
add
ret
daa
jge
je
sbb
lahf
stc
or
and
mov
add
fists
mov
add
mov
inc
bound
pop
and
cs
pop
fidivs
adcb
dec
pop
mov
xor
dec
mov
out
xchg
cli
cmp
fsts
stos
push
inc
sbb
add
dec
dec
in
loopne
ljmp
lock
xchg
inc
or
xchg
xchg
std
xor
in
cmpsb
jg
stos
jp
out
mov
mov
xchg
inc
rorl
jnp
mov
pop
pop
stos
inc
lods
or
fisttpl
pop
inc
mov
nop
xor
enter
sub
mov
sub
and
add
jae
popfw
sub
fisttpll
sub
jne
push
sbb
push
adc
test
aaa
lahf
loop
sbb
fucompp
inc
fsub
xchg
pop
mov
ss
dec
pop
jmp
sub
jge
ss
clc
std
jne
inc
out
inc
xor
sub
add
and
push
cmpl
mov
push
sahf
push
and
xorb
fwait
popa
mov
xor
test
xorb
dec
xchg
imul
gs
cmp
imul
xorb
xchg
cmp
dec
pop
xchg
pop
push
gs
insb
inc
inc
pop
clc
jnp
ret
or
push
ja,pn
cltd
repnz
and
and
fdivrp
and
lods
lea
in
pop
repnz
inc
orb
inc
jmp
mov
enter
clc
push
fwait
repz
jnp
lret
mov
dec
imul
loop
xor
dec
mov
mov
sub
js
jp
ja
vpcomuq
int3
fcomps
arpl
stc
and
adc
mov
std
movsb
inc
lea
divb
and
test
ret
jl
test
test
push
xor
iret
cmp
jle
mul
or
jp
jb
aas
clc
jp
daa
cltd
loopne
add
shll
jbe
mov
stc
sub
inc
mov
lea
in
aam
cmpsl
sbb
cmp
outsl
stos
jle
hlt
inc
movsl
mov
jb
and
rcrl
leave
dec
pop
lods
negl
rorl
mov
in
ret
mov
popf
sub
test
mov
dec
sbbl
xchg
jg
test
loope
inc
jb
mov
bound
test
xchg
dec
xor
inc
dec
adc
cltd
clc
add
inc
divl
jle
insb
lods
scas
xchg
mov
xlat
mov
lret
xor
sub
out
lds
leave
enter
lds
jno
cmp
fs
cli
repz
pop
cmp
pop
bound
int3
les
cld
subb
sub
jae
mov
xchg
loope
mov
sub
jge
cmp
adc
jnp
popf
shrl
lea
jbe
sub
jge
jbe
jecxz
mov
loop
lods
mov
addr16
leave
in
dec
leave
repz
pop
fs
and
sub
jp
inc
ret
out
fisttpl
into
sbb
cltd
push
call
arpl
mov
inc
das
mov
xchg
loopne
xchg
xor
xor
jle
pop
push
push
mov
js
sahf
mov
cmp
faddl
inc
jl
jbe
scas
lahf
inc
push
or
int3
xchg
jb
lahf
jmp
mov
mov
push
mov
add
fistps
cmpb
or
fndisi(8087
out
or
fdivrl
movsl
outsl
adc
stos
adc
in
jnp
sbb
sub
fsubs
in
leave
mov
sub
cmp
fidivs
push
scas
xchg
jnp
dec
and
jno
scas
jbe
sahf
add
xor
pop
fimull
iret
inc
nop
cmp
int3
jnp
in
dec
popf
rolb
push
out
dec
pop
sti
jns
cmc
adc
mov
mov
clc
clc
sub
loope
lods
cmp
aas
jno
test
ret
jb
imul
les
call
jo
mov
sbb
sub
or
sbb
cmpsb
sbb
das
push
enter
dec
inc
ja
jbe
repnz
or
cmp
inc
cmp
aaa
rcl
xor
pop
ss
add
test
sub
jo
stos
scas
scas
pusha
mov
cmpb
lret
das
xchg
cmpsb
xchg
pop
mov
dec
cltd
push
dec
lock
or
push
fwait
jnp
push
or
inc
adc
inc
adc
push
cmp
or
in
ret
lahf
xchg
std
sti
mov
cmp
je
scas
stos
sub
dec
push
add
push
or
in
push
and
jg
mov
push
fistl
push
mov
test
or
jg
test
push
data16
pusha
and
add
dec
ja
and
lds
es
push
and
mov
fistpl
jle
pop
mov
dec
subl
mov
adc
pop
bound
lds
or
mov
dec
push
mov
rcrl
addr16
aas
push
int3
dec
fcomip
push
mov
jo
sub
cltd
adc
por
mov
cli
push
inc
push
and
xchg
pushf
dec
dec
pop
jo
sub
dec
cmp
outsl
andb
add
lea
mov
int3
sbb
adc
lret
outsl
das
cmpsb
lods
xchg
pop
clc
xorl
sub
test
ss
adc
pop
ja
xchg
xchg
insb
mov
push
lock
sub
push
inc
jmp
lds
xor
mov
xor
mov
call
cmp
arpl
xchg
mov
mov
out
in
repnz
in
jmp
mov
push
repnz
insl
jle
out
xlat
loop
cmp
inc
stc
jno
mov
mov
repnz
lock
aad
pop
vpsubd
jl
lcall
jle
xlat
pusha
rolb
pop
mov
sub
cmp
sub
xchg
mov
es
shlb
lods
cmp
insl
or
pop
sub
cmpsb
test
inc
adc
mov
lret
outsb
xchg
out
push
adc
cmc
adc
cmp
mov
stos
dec
outsb
sbb
mov
jb
outsl
sti
push
inc
pop
push
mov
testb
lahf
adc
push
jae
popa
mov
sub
out
shll
jnp
and
shll
leave
xlat
in
pop
aad
cmc
fwait
adc
mov
push
adc
cltd
jno
loopne
pushf
jmp
and
aam
ds
ja
cld
aam
push
cs
jno
jbe
lret
mov
mov
aam
testl
outsl
repz
mov
sbb
ret
xor
sbb
cmp
in
pusha
jp
cmpsb
adc
push
repz
fwait
arpl
fisttpll
mov
lods
out
or
inc
dec
xchg
sbb
add
xor
repz
out
es
imul
pop
xorl
mov
iret
push
imul
adc
xor
push
ljmp
out
jbe
lods
xor
test
or
mov
mov
clc
shlb
xchg
outsl
cmp
rcl
aam
daa
aaa
scas
fsubrs
adc
jbe
or
movsl
out
aas
jp
out
mov
sbb
mov
sbb
sub
nop
or
sahf
sarl
mov
mov
loopne
or
inc
cwtl
dec
fistl
jecxz
cmc
mov
and
addr16
addl
aad
sbb
push
push
push
outsl
fwait
adcb
ja
sahf
jne
stos
dec
cli
xchg
xlat
and
repz
jo
push
lahf
cmp
cmpsb
out
mov
es
add
and
insb
inc
adc
stos
sub
outsb
fdivrl
test
push
cmpsl
sbb
mov
mov
mov
vpmacssdqh
inc
xor
add
mov
loop
fcmovbe
stos
sarl
inc
int
push
ret
out
scas
shlb
outsb
popa
xor
stos
call
test
xorl
dec
push
je
repz
imul
mov
dec
aad
fcmove
mov
inc
mov
pusha
rolb
pop
inc
daa
mov
stos
add
inc
es
scas
sbb
fs
mov
push
in
test
cld
pop
rcr
or
loope
pop
xchg
pop
mov
cmc
nop
out
xor
notl
pushl
int3
or
inc
fisubs
mov
mov
dec
push
loop
mov
xchg
jnp
pop
jno
jge
orb
xchg
mov
dec
mov
fistl
add
pusha
arpl
mov
jle
scas
sbb
xor
mov
cmp
mov
cltd
pusha
xchg
loopne
fildl
jne
fldt
xchg
imul
subb
pop
inc
push
sarl
pop
idiv
loopne
lods
adc
sbb
dec
sbb
into
inc
mov
arpl
inc
sbb
fwait
adcb
clc
test
imulb
pop
sti
or
xor
ja
clc
cltd
repnz
mov
mov
insb
inc
dec
add
jle
cld
fmul
in
or
and
sahf
xor
cmp
aad
cmp
mov
jbe
pop
shr
dec
pop
ss
dec
jnp
outsb
xor
xor
or
or
mov
adc
lret
cltd
jnp
sbb
outsb
xchg
or
cmp
shll
push
and
addr16
loopne
sub
out
jp
pop
pop
xchg
dec
aad
shll
pop
sbb
jle
int
cli
rcrl
outsb
test
pmulhuw
push
je
mov
pop
mov
adc
inc
out
adc
mov
lods
xor
cmp
dec
daa
add
rol
xchg
iret
pop
mov
mov
inc
mov
jge
ja
jge
adc
icebp
add
add
jae
mov
test
rcll
mov
adc
stos
and
sbb
fstpt
fistps
clc
in
out
sbb
in
loopne
mov
js
or
nop
cmpb
mov
cmp
and
cmpl
jge
lcall
pop
sbb
int
sarb
xor
out
xchg
sbb
movsb
iret
inc
dec
cwtl
lret
scas
inc
dec
fdivp
lret
jbe
shl
jl
xor
and
inc
jno
mov
scas
push
cld
mov
jge
subl
dec
mov
js
fcoml
imul
neg
movsb
mov
loope
pop
loope
and
mov
out
lahf
jne
sbb
ror
fildll
xor
mov
repnz
inc
clc
fldenv
int3
cmpsb
dec
hlt
in
dec
sbb
dec
popf
and
test
fistl
dec
outsl
inc
pop
test
or
das
jmp
ljmp
out
pop
inc
adc
loope
popf
push
jbe
xor
sbb
scas
cmp
sub
rclb
pop
push
aas
insl
and
sub
sti
pusha
xchg
dec
ffree
daa
shll
jmp
jle
jecxz
xlat
pop
and
arpl
adc
pop
pop
mov
or
dec
adc
mov
shll
clc
fsubrs
lret
and
dec
lods
pop
pop
jmp
loop
sahf
mov
hlt
scas
lahf
mov
stc
sub
or
inc
stos
push
add
xorl
sbb
lea
movsl
or
leave
stos
jns
and
dec
imul
in
pop
adc
loopne
sub
push
int3
sbb
add
mov
adc
lret
lods
int
add
leave
stos
push
clc
pop
xchg
jg
jns
mov
in
fidivs
sbb
pop
push
xor
lock
lahf
mov
xchg
imul
or
push
inc
fnsave
in
rorl
push
and
or
aam
pop
rolb
adc
xor
into
pop
jno
sbb
loop
and
rolb
xchg
and
sub
fucom
pop
xor
nop
push
cwtl
fwait
or
jp
dec
fwait
sub
lods
adc
mov
cmp
cmp
sub
mulb
mov
sbb
push
push
pop
imul
pop
inc
dec
in
inc
sbb
mov
xchg
xlat
arpl
imul
bound
ljmp
fisttps
call
mov
mov
inc
mov
push
and
hlt
cld
pop
push
sub
push
in
aad
mov
inc
ss
rcl
into
mov
lock
sub
out
fcomps
xor
fprem1
or
adc
shrl
test
mov
push
mov
icebp
xor
add
pop
mov
or
aas
lds
dec
rorb
cmp
inc
or
lods
call
fsts
add
mov
pop
testl
sbb
mov
aad
dec
add
xchg
dec
rcrb
gs
mov
mov
cmpsb
aad
movsb
xor
lret
aaa
xchg
fiaddl
sahf
lods
push
ret
sub
pop
test
push
addr16
pushf
xchg
mov
mov
push
jge
pop
jbe
in
shl
aam
jno
clc
dec
add
xchg
mov
push
mov
je
bound
loope
outsb
insb
xlat
scas
or
and
push
xchg
jmp
inc
nop
mov
das
pop
shrb
roll
loopne
punpcklbw
mov
push
mov
test
add
xor
jnp
outsb
xchg
test
xor
pop
mov
lret
push
inc
call
cmpl
stc
dec
sti
sbb
xchg
pushf
subb
fcomi
stos
and
dec
sub
mov
cmpsb
loope
mov
dec
scas
or
adc
push
icebp
push
test
xchg
repnz
xor
fs
sub
addl
cmc
int
inc
lds
push
lods
jecxz
mov
xor
out
mov
add
mov
xchg
mov
arpl
sbb
lds
test
push
xchg
mov
cmp
inc
fcompl
scas
pop
mov
inc
insl
push
push
push
xor
cmp
push
loopne
add
ds
push
imul
not
pushf
inc
test
and
push
aas
in
inc
out
or
mov
mov
sbb
stc
movsb
and
mov
jae
daa
sub
fwait
dec
dec
sbb
xchg
add
dec
inc
push
stos
pop
test
and
jbe
add
push
push
jb
test
aas
mov
outsl
lea
adc
cli
xchg
stos
hlt
pop
cwtl
mov
or
or
xor
aam
arpl
out
dec
cltd
dec
sarl
in
and
fbld
cli
pop
push
add
leave
and
notl
rorl
xchg
out
add
in
or
imul
inc
mov
push
lods
imul
out
adc
jno
add
pop
pusha
or
jl
or
lods
stos
ja
fwait
lds
inc
in
pop
loopne
stc
int3
cli
push
ret
shl
cld
mov
pushf
cmp
sbb
and
addr16
xor
insb
fimuls
mov
jl
xchg
pop
std
test
jb
pusha
lret
mov
aad
mov
insb
fdivrs
outsb
mov
cs
int
aam
mov
cltd
sahf
js
stos
mov
aaa
call
dec
outsb
scas
xlat
jne
add
idivb
pop
push
fsubl
loope
aad
scas
jle
cmc
adc
add
subl
inc
icebp
sbb
aad
daa
push
aad
mov
mov
mov
idivb
mov
cmpsl
hlt
dec
add
sub
ljmp
jno
jb
adc
inc
inc
mov
dec
dec
push
test
lods
popf
mov
mov
xchg
sub
lock
mov
adc
and
mov
mov
push
movsb
and
dec
mov
mov
cmp
xor
mov
adc
aam
cld
mov
and
and
mov
in
out
ret
out
jge
jbe
add
adc
inc
inc
mov
insl
aam
mov
mov
xor
jae
mov
gs
or
fiadds
aaa
fmul
xchg
outsb
mov
jb
stos
outsl
push
stos
hlt
scas
das
xor
sub
sub
push
js
mov
xor
loop
push
std
jno
mov
ret
inc
push
xchg
xor
les
xchg
jecxz
jno
icebp
cs
push
inc
mov
mov
mov
pop
loopne
inc
push
fldl
cmp
das
popf
push
adc
out
or
and
andl
stos
or
clc
shll
fisttpl
in
test
or
adc
in
rol
out
aam
push
inc
mov
push
dec
lds
in
fldenv
xor
sub
scas
ljmp
ss
dec
pop
jnp
imul
sahf
testl
nop
add
adc
xlat
mov
imul
addb
jns
and
incb
lret
outsb
sarb
jecxz
adc
pop
cwtl
xor
sub
adc
repz
xor
jae
sbb
mov
arpl
and
int
mov
out
in
es
fidivs
notl
xchg
mov
popf
mov
cmp
jmp
inc
pushf
je
sbb
fcompl
xor
lcall
ds
jp
orb
mov
gs
dec
adc
pop
aam
or
iret
lea
in
push
or
sub
cmc
jl
mov
lcall
call
cmc
xor
push
xchg
pop
les
xor
and
sub
inc
imul
push
or
jno
jecxz
fisttps
cmp
jno
notl
adc
call
mov
shl
fxch
jmp
xchg
xchg
rorb
testb
dec
sbb
shll
mov
je
jne
xchg
adc
adc
add
mov
clc
in
loop
mov
jbe
xchg
xchg
pop
scas
rcll
jle
mov
mov
pop
dec
sbb
inc
fs
jns
loope
loope
mov
xchg
jg
fldl
insl
cwtl
pop
or
movsl
mov
xor
push
push
fcoml
test
jae
es
fdivr
pop
js
sub
add
xchg
mov
mov
ret
dec
ds
data16
mov
lea
mov
roll
inc
sub
fadds
aas
orl
outsl
fiaddl
cs
mov
aad
ss
mov
lea
push
out
xor
sti
out
or
rcr
hlt
ret
sub
lods
insl
xor
sub
nop
mov
cli
pop
jecxz
cs
or
shll
xchg
out
mov
cmp
inc
leave
mov
or
mov
mov
ret
or
xchg
repnz
add
ja
int3
mov
and
movsb
loope
xorb
jne
aam
lret
lcall
jnp
pushl
xorb
add
push
das
pop
adc
mov
xchg
or
sbb
add
cmpl
jb
jnp
xlat
inc
mov
test
cmp
mov
cmp
xlat
ljmp
mov
push
jge
jbe
pop
movsl
xchg
fstps
dec
dec
imul
rcrb
ljmp
pop
rcll
xor
fisubs
push
inc
in
dec
cli
adc
test
sahf
jbe
push
aam
aam
fdivl
add
or
dec
ret
int3
mov
or
mov
mov
sti
push
jb
rdtsc
mov
mov
popf
jae
popf
dec
fildl
lods
or
cmp
jmp
shrl
psubd
sub
fs
js
mov
lret
mov
cmpsl
lods
lcall
sahf
call
insb
cwtl
inc
xchg
lea
and
out
inc
adc
insl
adc
and
push
jns
ljmp
loopne,pn
cli
mov
fwait
mov
imul
cmp
popa
push
cmp
xor
fdivl
jmp
repz
lret
xor
and
movsl
xchg
mov
call
mov
incb
adc
jne
mov
push
jbe
mov
sub
nop
aad
push
mov
mov
icebp
push
fwait
push
mov
dec
inc
test
mov
dec
cs
les
xor
xchg
push
insl
jge
sahf
push
mov
cmc
dec
andl
iret
xor
and
fists
push
inc
testl
dec
push
mov
fs
or
lcall
lods
cmp
int
lods
sti
mov
pop
ss
add
dec
or
test
add
cmc
or
and
push
push
nop
push
dec
ljmp
xor
cmpsb
mov
add
or
jae
test
sbb
pop
pop
jg
pop
imul
ficoms
aam
or
lret
xchg
sub
push
pop
xchg
mov
mov
loope
push
push
aad
pop
mov
dec
out
push
adc
lret
fsts
pop
push
imul
mov
jnp
mov
repnz
addr16
xor
and
rol
into
mov
fs
in
out
cmpsb
aas
and
and
sbb
push
pop
data16
mov
out
sub
adc
adc
shrb
push
fwait
add
mov
cmp
rorb
out
jo
stos
and
mov
stc
add
dec
jmp
andb
pop
and
popf
cli
jbe
adc
push
xchg
lds
push
ljmp
mov
out
sbb
sbb
jmp
stos
leave
lahf
mov
inc
fisttpl
or
stos
nop
push
add
push
pop
pop
outsb
mov
adc
add
cmp
sarl
fistps
movsb
jge
mov
sahf
add
adc
cmp
jecxz
sti
dec
xor
ss
push
ljmp
clc
imul
inc
xchg
cmp
jbe
xor
mov
xor
repz
jp
mov
xchg
orl
pop
daa
dec
clc
mov
call
jb
dec
mov
testl
jo
jl
hlt
and
inc
ja
lahf
movsb
movq
push
mov
std
sub
and
in
dec
xchg
mov
jne
shl
int3
imul
insb
movsb
pop
adc
push
cmp
pusha
mov
cmpb
cmp
jno
arpl
xchg
inc
or
adc
xor
or
xor
icebp
bnd
das
mov
lcall
sub
push
mov
dec
in
cltd
sbb
push
popa
mov
add
and
stos
mov
loop
mov
add
jnp
repz
sbb
pushf
lret
xchg
or
fisubrl
mov
sbb
xor
mov
push
mov
sbb
call
xchg
popa
inc
cmp
cltd
and
ror
pusha
call
nop
sbb
repnz
push
in
popa
or
addr16
mov
mov
test
test
push
sub
fldt
cmp
enter
scas
mov
into
lods
je
pslld
dec
dec
lahf
movsb
add
mov
cmc
xor
fsubs
pop
and
stc
mov
push
inc
fs
sbb
adc
xchg
push
lods
push
pop
mov
daa
xor
sub
sbb
iret
imul
mov
push
js
or
insl
data16
or
pop
mov
scas
xlat
iret
adc
mov
rcrb
popf
cmp
adc
push
clc
mov
inc
xchg
and
mov
into
push
aas
es
stc
std
xor
sahf
dec
loop
dec
testl
out
cmc
shl
es
adc
sub
movsl
xlat
outsb
iret
clc
nop
in
add
into
push
nop
ret
or
push
push
push
mov
mov
xchg
pop
daa
xor
shl
xchg
fninit
pop
icebp
pusha
scas
aam
pop
pop
mov
sbb
push
int3
xlat
jl
push
imul
lahf
movsl
mov
push
mov
push
pusha
leave
out
dec
cmp
sarb
pop
outsl
sahf
insb
adc
fadds
adcl
mov
out
mov
enter
call
out
mov
dec
xchg
and
movsl
add
pop
rcrl
lock
imul
and
lret
pop
bound
pop
fcoml
bound
dec
stc
adc
dec
push
and
fsubp
xchg
ret
mov
mov
and
mov
pop
lahf
mov
cld
cltd
inc
adc
mov
and
mov
mov
outsb
mov
int3
cmp
repz
push
cld
pop
xchg
lcall
adc
mov
or
clc
test
ret
dec
cmpsb
hlt
mov
dec
inc
pop
pop
nop
movsl
out
lods
cmpsl
das
loopne
jo
mov
cmp
jo
inc
jnp
dec
pop
ljmp
call
dec
push
or
dec
out
jns
fisubl
iret
push
mov
test
repz
das
arpl
xchg
hlt
cli
mov
lods
push
leave
xor
stos
adc
jge
mov
pop
out
mov
xchg
sub
jmp
pop
dec
iret
dec
mov
cld
lret
shll
scas
sbb
pushf
mov
cwtl
jnp
mov
inc
or
dec
imul
mov
xor
mov
cmp
cmc
call
xor
dec
mov
iret
clc
lds
sub
xchg
subl
pusha
add
mov
xlat
imul
in
mov
push
mov
adc
sub
mov
sub
jns
fld
mov
out
cmp
adcl
add
mov
xor
rol
jno
cmpsl
sahf
jecxz
pop
xlat
xchg
frstor
rorl
outsb
test
pop
push
out
adc
icebp
jge
add
xor
xchg
ja
adc
mov
adcl
or
insl
push
mov
lds
mov
push
pop
mov
bound
sub
aaa
out
popa
roll
hlt
fsub
repnz
inc
xor
xchg
lahf
ret
pop
notl
push
fwait
dec
in
push
int3
int
or
cs
or
es
testb
das
aad
imul
jle,pn
idivb
rol
push
cmpsl
adc
lods
ret
xchg
cmpl
cs
pop
inc
stos
jns
sub
movsl
mov
and
pinsrw
and
je
sub
test
movsl
rcrb
jp
mov
xchg
pop
insl
les
lods
and
sbb
add
fs
mov
pop
push
sub
xor
jl
fdivrs
add
dec
fcoml
mov
mov
cmc
cmp
neg
sbb
hlt
cmc
jb
shlb
incb
xlat
or
xor
into
pop
mov
jns
inc
adcb
xchg
mov
fldt
outsl
sub
outsl
dec
cmp
std
notl
jno
pop
mov
sbb
out
pop
cld
mov
aaa
jmp
push
inc
sbb
out
and
rcll
jnp
inc
aam
cmp
shll
scas
neg
cmc
xchg
mov
stos
out
pop
push
sbbl
mov
or
int3
push
shll
add
icebp
and
fistps
dec
sahf
jl
and
push
jno
dec
add
mov
outsl
mov
aam
sti
out
popf
outsb
mov
fisttps
ja
in
and
ljmp
adc
ret
shrl
rcrl
lods
test
push
xchg
sub
out
icebp
sbb
mov
xchg
or
mov
shll
lret
bound
dec
add
inc
cltd
adc
test
mov
and
dec
pop
addr16
test
faddl
mov
cmp
lods
stos
pop
or
bound
fisubrs
push
fsub
mov
adc
je
je
fiaddl
xchg
popf
cmp
lea
sub
or
repz
fildl
iret
xchg
push
adc
adc
jo
movsb
int
js
cltd
fisttps
adc
push
sub
push
lret
ss
xchg
sahf
pop
fildll
pop
loop
fdivs
or
inc
mov
dec
loopne
fbstp
inc
dec
rcll
movups
mov
xchg
ret
sub
cmc
inc
push
xor
sbb
mov
push
adc
imull
adc
and
push
push
in
push
ja
rcrb
in
sbb
jns
cmp
sbb
loope
iret
pop
xchg
and
cmp
ds
and
push
xchg
paddd
fistpl
and
sbb
pop
push
lea
gs
sbb
jb
xchg
push
and
iret
outsb
mov
jns
scas
sbb
adc
outsb
imul
in
pop
pushl
loop
mov
out
imul
js
add
mov
push
pusha
adc
xchg
push
dec
sub
outsl
pop
jb
scas
lock
insl
out
dec
mov
jae
and
movb
rorb
pop
sbb
or
outsl
adc
dec
ljmp
or
enter
loopne
dec
push
mov
fsubs
mov
mov
popa
in
loopne
push
xor
and
xor
subl
pusha
movsl
mov
sub
inc
sub
mov
adc
insb
movsb
fldcw
test
mov
int
xlat
out
ret
into
ljmp
dec
inc
enter
clc
jecxz
pop
sub
sub
out
shrb
jb
adc
call
mov
inc
jg
out
sub
pop
adc
orl
push
bound
push
jmp
stos
pop
inc
cli
sub
int3
mov
xchg
or
add
test
xchg
popa
add
shll
adc
out
mov
repz
mov
add
adc
push
push
lret
out
mov
fsts
arpl
add
out
sbb
cld
out
cmp
popf
xor
jmp
bound
sbb
xor
push
inc
rcll
sahf
mov
and
cmpsl
lods
inc
adc
clc
pop
enter
call
pop
dec
movsl
in
lahf
xchg
fists
insl
sbb
arpl
xchg
inc
cli
dec
repnz
inc
mov
in
ja
out
test
push
mov
sub
stos
gs
cmc
stos
sub
in
inc
cmc
bndstx
aaa
scas
xorb
test
mov
inc
mov
jno
and
rcr
mov
dec
or
popf
pop
shr
rorl
mov
push
xor
or
pop
in
sar
adc
out
cwtl
inc
pop
lea
sbb
rol
or
repz
into
repz
sbb
movl
xlat
movsl
xor
jmp
jl
loopne
mov
jno
int3
inc
fildll
mov
stc
call
and
push
pop
mov
jns
lods
jecxz
jnp
cmp
arpl
cmp
test
lret
adc
mov
out
arpl
dec
jnp
mov
mov
push
mov
sub
sub
xchg
inc
cmc
xor
mov
es
aaa
mov
inc
je
rorb
add
jg
jge
inc
jmp
mov
stos
aam
ljmp
loope
push
unpcklps
cmpsl
or
lret
mov
push
pop
inc
mov
sbb
sbb
push
imul
scas
shll
cs
jne
inc
enter
mov
shlb
mov
xor
imul
imul
enter
or
cmp
push
dec
nop
pop
sbb
fdivs
push
sub
insl
mov
push
js
fwait
pop
addr16
fldl
rcrb
sbb
mov
push
push
mov
sub
ret
sbb
shrl
mov
ss
jl
and
in
xchg
pusha
jle
shrl
mov
inc
fists
popf
call
pop
aad
adc
xorps
sub
jnp
add
or
push
pop
lods
nop
lock
inc
xor
push
icebp
sahf
shl
scas
leave
sbb
sub
mov
stc
mov
pop
push
mov
lea
andb
outsb
cmpsl
int3
in
xchg
outsb
cs
mov
rorb
leave
xchg
add
xchg
sub
ljmp
movsb
out
cmp
xor
jecxz
fxch
leave
cmpsl
fisttpl
push
dec
jns
enter
je
xor
ss
sub
stos
and
adc
in
cmc
test
sub
stos
cld
push
cmp
jb
dec
data16
pusha
jbe
fcomp
leave
test
mov
hlt
add
add
xchg
sbb
lods
or
mov
pop
psubsb
push
pop
mov
in
cmp
mov
test
xchg
fadd
aas
gs
push
pop
mov
cmpsb
jno
lds
leave
push
repnz
loop
movb
dec
or
faddl
outsl
mov
jo
sti
xchg
pushf
test
icebp
imul
adc
aam
sub
fs
adc
inc
and
enter
xlat
push
shll
repz
jo
cld
xorl
xor
dec
dec
pop
mov
and
les
jbe
xor
scas
outsl
push
ret
xor
loop
xor
out
jbe
cmp
mov
xchg
xchg
mov
mov
hlt
xor
xchg
adc
inc
std
in
out
sub
pop
xchg
insl
inc
outsl
xchg
decb
mov
stc
insl
add
enter
sub
sub
xchg
int
iret
movsb
add
cmp
cmp
xchg
adc
or
adc
lret
in
add
cmp
dec
mov
xor
xchg
sub
push
cmp
and
mov
pop
in
jo
cwtl
mov
jo
mov
lret
std
shll
jmp
cmpsl
and
out
pop
test
and
test
nopl
mov
mov
loop
push
in
pusha
mov
in
sub
mov
jb
test
scas
clc
lret
push
outsl
cmp
data16
add
jnp
or
pushf
push
fsubl
ja
mov
shlb
stos
das
ret
in
ret
mov
dec
orb
mov
js
addb
xchg
xor
bound
sbb
imul
rorl
push
bound
sub
inc
testl
mov
add
sbb
dec
fsub
push
stos
popf
stos
inc
lods
outsb
jnp
mov
movsb
rclb
inc
cmp
mov
dec
jg
sbb
sbb
mov
ret
sub
fbld
xchg
rcr
mov
jo
lods
xlat
enter
add
xorb
icebp
leave
mov
mov
es
fisttpll
jnp
jnp
out
add
call
fstpt
cmpsb
push
stc
sub
dec
inc
mov
pop
cmpb
xchg
mov
pop
adc
mov
aas
inc
inc
mov
sub
sar
icebp
js
inc
daa
mov
mov
bound
aas
adc
aad
je
sub
movsl
lds
in
add
xchg
fwait
mov
mov
push
es
out
xchg
sub
aam
lret
in
cs
dec
je
dec
mov
jns
jp
jmp
sub
mov
jo
dec
dec
ljmp
cmp
jg
add
bnd
xchg
dec
adc
jecxz
popa
jmp
xchg
jp
gs
std
push
ret
fstpl
aaa
inc
fwait
xchg
in
or
xor
and
pop
mov
pushf
stos
inc
addr16
and
xchg
pop
imul
xlat
pop
js
jnp
xchg
cmp
insb
pop
sbb
jae
dec
pusha
outsl
sub
stos
shll
push
inc
xor
push
mov
mov
in
pusha
jo
aad
stc
es
lahf
roll
shlb
jmp
jmp
jp
pusha
and
rcrb
xor
lahf
adc
mov
das
or
lods
in
ficomps
lret
cli
bound
mov
mov
cmpsb
dec
test
push
sub
pusha
cmpsb
cmp
cmp
jbe
ljmp
mov
pop
sbb
mov
dec
pushf
sub
adc
xor
inc
xor
sti
ret
cltd
xlat
or
clc
mov
leave
cld
in
jl
test
xor
sbb
outsl
jmp
pop
arpl
or
jns
addr16
cltd
xchg
out
inc
dec
push
and
out
mov
push
clc
fidivs
aaa
sbb
cmpsb
ljmp
push
lock
fists
add
sti
out
mov
ud0
and
and
cmp
mov
mov
pop
inc
or
pushf
pop
test
mov
js
pop
pop
and
pop
mov
orl
lcall
std
inc
cld
std
cmp
add
iret
dec
pop
or
rcrl
imul
cs
shl
test
popf
fs
into
dec
test
cmpsb
jecxz
test
push
imul
lods
jne
int
push
sub
or
jbe
xor
dec
cmc
inc
nop
mov
inc
push
fldl
jmp
aas
ret
xor
mov
push
rclb
mov
std
cmpsl
jnp
pop
pop
mov
push
cwtl
cs
loope
cwtl
je
lcall
push
push
movsb
sbb
or
sub
test
fcoms
or
xor
orb
adc
stos
fsubrs
sbb
xchg
loopne
popf
test
popf
shr
out
mov
push
repnz
cmp
loopne
or
sub
adc
out
insl
mov
outsb
mov
leave
mov
xor
and
mov
adc
and
push
mov
popl
inc
fldt
lcall
arpl
cmp
mov
aam
out
outsb
cmpsb
mov
lcall
ret
stos
xchg
idivl
and
mov
and
mov
loop
or
push
mov
fcomp
data16
testb
dec
data16
dec
or
or
and
ret
rcr
xchg
mov
ja
sbb
xchg
aad
push
movsb
into
mov
cltd
insl
dec
cmp
mov
rorb
insb
and
mov
xchg
hlt
in
xorl
xchg
fisttpl
adc
mov
in
xchg
cmp
test
sbb
xor
pop
cmp
lock
ret
cmp
pushl
aas
stos
outsl
or
cld
out
xor
and
mov
lahf
cmpsl
ja
fxch
int
mov
mov
xor
push
or
cs
pop
les
sbb
and
dec
mov
xchg
xor
out
jmp
sarl
dec
decb
pop
jl
cmc
pusha
lds
dec
sarl
push
jmp
mov
in
stos
stos
cmp
mov
mov
popf
inc
adc
push
bound
ja
pop
lret
adcb
out
jl
add
out
add
pop
mov
jbe
cltd
jmp
icebp
push
adc
jecxz
leave
cmp
iret
and
mov
mov
test
test
mov
cmp
push
int3
lahf
mov
mov
mov
sub
pop
add
sbb
fcoms
das
rorb
adc
add
xchg
xor
pop
hlt
push
stos
movsl
sub
push
push
ja
sub
add
adc
sbb
sbb
and
lods
mov
adc
lds
or
mov
aam
fisttpll
xor
mov
loope
repz
jp
ds
notb
dec
dec
insl
in
mov
push
cwtl
jbe
test
push
out
or
mov
jno
jmp
enter
test
cmp
leavew
int
ret
aaa
dec
inc
cmpsb
orl
pop
insl
mov
jecxz
fs
pop
xchg
cmp
or
out
test
pop
push
test
push
or
adc
push
adc
loopne
in
bswap
addr16
jp
test
xchg
add
jb
fidivrs
push
cld
adc
sbb
mov
mov
ja
inc
cmpb
sbb
in
in
inc
outsb
and
or
pop
push
dec
and
xchg
out
jns
jle
push
daa
pop
lret
push
outsb
cld
inc
test
scas
ljmp
push
inc
sbb
and
fisttps
dec
jp
fimuls
push
pop
pop
stos
ficoml
scas
pushl
aaa
or
rol
pop
ds
dec
scas
hlt
jecxz
mov
mov
dec
mov
fcomps
pop
cmp
xor
pop
addb
movsb
ja
inc
sub
sub
aaa
insl
cli
sbb
inc
or
sbb
ret
jbe
or
sbb
jbe
test
add
jle
scas
test
pcmpgtw
inc
lock
cltd
fs
shlb
test
movhps
push
mov
push
cld
sbb
lock
paddq
sub
decl
jne
sbb
jp
sub
sub
or
dec
jmp
lcall
jb
push
int3
add
stos
xchg
aad
int3
push
lods
inc
imul
pop
sub
lret
jecxz
lock
xchg
test
in
mov
js
sbb
xor
sub
xorb
test
mov
pop
popa
mov
stos
push
jp
negb
das
xor
cmp
movsl
lds
and
in
loope
arpl
mov
stc
cltd
jno
jnp
pop
aas
add
push
add
fistps
lock
ret
xchg
js
jae
jl
pop
in
jl
imul
data16
popa
pop
or
xchg
bound
out
or
imul
incl
mov
fisttpll
sub
push
cwtl
add
push
das
push
movsb
test
or
push
sbb
or
mov
movsb
jl
inc
mov
adc
sarl
repnz
jae
xor
loopne
and
les
inc
lret
outsl
push
aaa
test
dec
or
cs
fildl
xchg
xor
in
test
sbb
cmc
jne
in
pusha
or
testb
outsb
sbb
xchg
fdivp
mov
cmc
jo
sub
jle
fmuls
jbe
sbb
pop
xchg
ja
stc
popf
mov
adc
push
orb
clc
inc
add
repnz
dec
mov
shlb
sbb
das
iret
mov
push
fs
inc
or
or
cmp
loopne
mov
push
lods
neg
adc
push
and
es
xor
das
lret
cwtl
in
add
std
cltd
adc
int
test
sub
fldcw
jle
outsl
sub
sub
add
cs
std
nop
shrb
mov
xor
mov
pusha
xchg
andb
sbb
repnz
or
rcl
xchg
fsubrl
nop
mov
dec
iret
push
out
mov
fwait
mov
repnz
call
jb
outsl
or
or
inc
sub
cmpsl
mov
bound
test
addr16
jb
aam
dec
and
fsts
mov
out
mov
ss
sub
adc
mov
dec
sbb
pop
or
notl
pop
lods
test
pop
xchg
mov
fdivrl
cmp
mov
mov
js
repnz
pushf
ret
add
cmp
inc
mov
das
or
sbb
mov
jbe
hlt
xor
fwait
outsl
popa
iret
sub
or
mov
add
stc
add
cmp
mov
cmpsb
inc
lods
pop
arpl
rcll
cmpsl
sbb
repnz
out
pop
mov
divl
dec
lcall
icebp
mov
inc
in
push
add
movsb
dec
add
dec
push
clc
pop
vshufps
lods
bound
cmp
orb
adc
inc
mov
or
dec
mov
icebp
or
jmp
push
inc
adc
sub
lcall
fs
fmul
pop
ljmp
hlt
lahf
xchg
leave
rorl
lcall
pusha
test
xor
jmp
and
in
cltd
push
sub
popf
pusha
stos
daa
ja
subb
outsl
fnstcw
jb
mov
popa
repz
std
xlat
adc
lea
test
call
pop
sbb
mov
repz
jae
xchg
mov
inc
jns
mov
pop
rcr
bound
sti
adc
cmpsb
sti
enter
push
subl
jge
dec
pop
inc
fisubrl
mov
andb
mov
jg
stos
mov
inc
cmpsl
add
mov
pop
scas
aas
inc
xchg
or
dec
mov
xchg
push
fnsave
xchg
popf
in
and
mov
leave
cld
add
push
out
or
pop
pop
inc
jmp
sarb
pop
out
pusha
jb
jl
mov
je
into
popf
cmp
sbb
and
inc
pop
daa
adc
jl
push
sbb
stc
leave
xchg
inc
sbb
enter
cli
insb
or
shrl
pusha
cmpsb
mov
ja
mov
pop
repz
adc
popa
dec
cmp
in
lds
fwait
gs
outsb
pop
sahf
mov
mov
pop
fcmove
loopne
dec
cmpsb
xchg
mov
sub
sti
mov
dec
dec
adc
insb
enter
xchg
and
rolb
movaps
inc
scas
xchg
stc
pop
push
sub
pcmpeqd
ret
dec
fisubrl
pop
inc
push
ljmp
mov
scas
inc
inc
insb
push
cld
pop
aaa
ret
arpl
scas
dec
les
inc
in
jg
mov
sub
addr16
sbb
int3
fnstsw
jno
cmp
fisubrs
fsubp
into
cwtl
jg
mov
mov
in
jne
xchg
xor
aad
fimull
insl
jle
jle
iret
dec
pop
pop
pop
rclb
scas
int
dec
lcall
sbb
xorb
adc
adc
imul
ret
loope
mov
cmp
jle
data16
lods
das
mov
xor
test
mov
cmp
jae
xchg
movsb
repz
fists
mov
sbb
les
pop
lock
dec
push
fs
in
aas
aad
cmp
sahf
or
mull
addr16
jecxz
popf
shl
movsl
scas
xchg
mov
out
bound
shl
js
scas
pusha
jge
pop
add
cli
add
xchg
add
icebp
insl
negb
mov
mov
inc
mov
stc
shrb
insl
hlt
jecxz
lret
dec
push
sub
jns
inc
or
dec
inc
call
cmp
xchg
pop
orb
mov
insl
aam
sar
outsb
push
mov
insb
cs
movl
adc
test
xchg
jge
mov
pop
xchg
jb
stos
cld
xchg
mov
ds
xchg
jl
fiaddl
jae
stc
es
push
test
rclb
pop
jp
in
xor
cs
mov
arpl
test
test
mov
out
pop
fsubr
add
mov
mov
fnsave
xchg
mov
fcom
add
push
bound
push
adc
shll
into
stc
mov
enter
js
xor
loop
rol
popa
lret
jle
push
scas
das
adc
sbb
xor
add
xchg
out
and
mov
adc
cmpsl
xchg
inc
nop
fdivrl
xor
cmp
cltd
xchg
adc
cmp
or
cli
faddl
ds
fldl
pushf
pop
testl
lret
or
add
or
xor
or
cltd
lret
sub
xchg
scas
idivb
mov
lods
clc
push
stc
jmp
jne
pop
xchg
xlat
mov
fdivrp
cmp
mov
in
pusha
mov
lret
adc
test
int
cmp
call
xor
mov
push
adc
lea
call
or
dec
outsb
push
lcall
push
fstps
adc
daa
nop
repz
in
test
push
shl
mov
aas
mov
add
inc
fsubl
xlat
clc
ficomps
int3
mov
xor
sbb
mov
fadds
movsb
fs
mov
adc
ljmp
add
in
push
cltd
dec
pop
push
rol
xor
inc
cmp
adc
movsb
outsb
cli
inc
pushf
xchg
push
aad
inc
inc
loope
sub
pop
mov
jge
dec
aaa
push
adc
and
ja
mov
xor
faddl
rcrb
in
or
fsubs
add
jb
pop
jle
insb
test
jns
fbstp
xchg
ror
push
shl
ja
pusha
lahf
inc
inc
shrl
je
movsl
mov
fdivrp
mov
andl
mov
test
push
dec
mov
push
aaa
sub
xchg
cmp
add
and
call
inc
lods
cld
pop
sbb
sub
adc
cmpsl
sbb
lods
cltd
inc
lcall
int
dec
sub
and
and
push
hlt
rorl
bound
push
stos
sbb
mov
aas
loop
pop
jne
sub
adc
and
fmulp
pop
andl
xor
cmp
mov
push
fbstp
cmp
into
pusha
xchg
sub
fstl
das
lods
pop
andb
ret
imul
xchg
pop
repz
ja
fistpl
stc
and
cmp
mov
pop
and
repnz
mov
stos
or
pop
xchg
dec
insl
adc
js
lret
sbb
sbb
pop
xchg
push
xchg
or
xchg
and
pop
pop
xchg
dec
xchg
aas
and
xchg
sub
arpl
pop
fisubrl
adcl
xor
mov
fdivl
adc
insl
arpl
fdivrl
sbb
and
aad
or
repnz
xor
mov
cmc
test
add
xchg
repnz
mov
push
mov
xor
dec
and
pop
mov
sti
pop
mov
lahf
loope
jb
lds
inc
sarl
andl
dec
out
xor
mov
loope
std
pop
ljmp
jle
inc
or
dec
and
out
int
push
aam
jns
inc
invd
imul
mulb
xor
inc
je
cwtl
xchg
les
mov
mov
lock
ret
jecxz
xor
cltd
xchg
xchg
outsb
repnz
push
xor
cld
lds
sbb
pop
dec
data16
push
push
jae
add
and
out
inc
xchg
ja
cmc
mov
cs
shll
movsb
inc
push
jl
xchg
jmp
js
mov
xor
push
mov
cmp
jae
mov
cmpl
add
bswap
lahf
loope
sti
js
adc
adc
mov
jp
repnz
je
dec
movsb
push
push
or
push
pop
mov
adc
push
cld
scas
daa
cmpsb
jge,pn
sbb
vpcmpeqb
cmp
out
je
pop
dec
shll
out
or
push
rcll
neg
push
enter
aaa
inc
and
xor
adc
std
add
or
sbbl
and
mov
sub
xchg
int
sarb
rcrl
jbe
lcall
inc
adc
xchg
sub
jbe
xchg
das
loope
shll
and
mov
loop
les
and
je
adc
scas
jmp
cltd
scas
sub
jmp
xchg
add
psubq
cld
ror
push
and
xorb
pop
or
push
pop
jmp
mov
push
dec
xchg
loope
cmpsb
adc
xchg
jle
imul
repnz
mov
dec
cli
xlat
fwait
add
jp
out
loopne
inc
aad
mov
cltd
outsl
jno
ljmp
iret
mov
jns
aaa
push
ret
inc
dec
test
aad
rol
sbb
mov
out
dec
inc
ja
sbb
adc
das
data16
push
scas
inc
or
jmp
or
mov
inc
insb
repnz
sbb
andb
loopne
lret
lret
add
andb
xor
test
pxor
out
lahf
and
adc
bound
je
div
jmp
lock
test
std
pop
loop
mov
mov
cmp
pop
loope
xchg
mov
inc
pushf
fidivrs
andb
dec
add
call
cmp
insl
in
out
or
cltd
cmpsl
dec
adc
inc
sub
notb
fwait
leave
and
dec
lds
sti
jl
pop
mov
or
and
pop
mov
mov
movsb
sbb
xchg
cmp
cmp
pop
adc
push
outsb
imul
repz
aaa
aad
repz
or
xor
or
aad
inc
shrl
and
cmp
jg
and
cmp
dec
loop
jns
sbb
jo
sub
xchg
cmpsb
jmp
js
mov
or
jmp
or
adc
jne
jmp
in
pop
jmp
out
mov
in
adc
jmp
andl
xor
sub
outsl
addb
shrl
xchg
and
fwait
xor
fs
fisttpll
inc
inc
dec
mov
sub
in
mov
or
xor
and
cmp
adc
inc
pop
mov
xchg
mov
cmpsb
xchg
jecxz
icebp
dec
and
dec
pop
out
and
cmp
insb
int3
int
cmp
sbbl
loope
ja
aaa
push
sub
test
sub
mov
cltd
mov
add
dec
ret
sub
ljmp
mov
pop
cmp
inc
jns
dec
mov
test
inc
mov
lret
jecxz
cmp
cmp
jae
aam
sbb
sub
cwtl
mov
psllq
jo
mov
dec
dec
out
jp
pop
outsb
popa
pop
out
mov
aam
push
inc
push
iret
imulb
or
cmpsb
push
mov
push
cmc
aaa
mov
outsb
clc
inc
push
roll
push
sbb
popa
push
adc
add
xchg
pop
or
mov
xchg
xchg
fwait
nop
sbb
roll
xchg
adc
ret
xchg
mov
ds
push
sbb
cltd
inc
fildll
outsl
fstps
xchg
pusha
int
sub
test
call
outsl
and
and
add
in
jge
mov
sbb
inc
push
xor
jnp
push
push
loop
push
icebp
out
adc
jp
cmpsb
test
arpl
fdivl
push
pop
jmp
pushf
lods
and
jmp
test
dec
js
or
popa
fmulp
jb
push
cmp
lahf
ds
dec
and
jno
lea
and
jae
rcrb
adc
jge
xchg
push
adc
jmp
add
jp
lock
and
jecxz
pusha
lods
jb
cmp
mov
add
mov
adc
in
mov
and
shl
pop
inc
mov
jae
loop
fwait
les
stos
xor
negl
xlat
pop
lahf
jbe
test
aaa
aam
insl
jbe
scas
nop
es
jns
sahf
xchg
mov
push
or
cmp
dec
push
ds
out
and
mov
dec
out
rolb
pop
bound
lods
jp
add
fldenv
jae
cltd
in
push
test
inc
mov
fst
cld
js
jecxz
mov
adc
rclb
push
pop
lods
fdivrs
ficompl
xchg
inc
inc
mov
jp
mov
andb
sti
cltd
mov
iret
mov
lods
add
div
add
idiv
std
push
inc
xchg
and
lret
andl
push
sub
xchg
and
mov
pusha
xor
aam
in
jbe
in
push
adc
pop
test
scas
cmpsb
fndisi(8087
jo
pop
hlt
dec
pop
dec
xchg
cld
dec
rcll
xchg
pop
push
jle
mov
mov
lods
inc
loope
std
push
inc
insl
xchg
dec
loope
nop
icebp
aas
inc
subl
mov
jmp
out
popf
shrl
std
jge
jp
jne
or
push
adc
fwait
sbb
mov
out
adc
scas
push
filds
lods
xlat
cmp
loopne
xchg
mov
sub
mov
mov
fwait
test
adc
xchg
in
gs
push
popa
mov
dec
fbld
mov
mov
xchg
daa
rcl
sub
lret
mov
sbb
sbb
inc
and
mov
sbb
enter
mov
mov
adc
cmp
dec
cmp
pop
jle
xlat
sar
fwait
data16
pop
les
insb
jbe
mov
aas
les
sbb
adc
out
into
or
sub
lods
xor
sub
fiadds
add
sub
inc
sbb
xchg
jnp
dec
lahf
sbb
aad
pop
fsubs
push
jp
fcomps
pusha
pop
lock
or
xchg
xchg
cmp
scas
ljmp
test
xchg
jb
shlb
scas
into
xchg
pop
sarl
xchg
cmp
sti
clc
and
add
out
aaa
xor
mov
cmp
pop
xor
add
jbe
xchg
dec
js
mov
adc
js
pop
jecxz
testb
dec
mov
dec
inc
movsb
push
out
fwait
and
xor
jg
frstor
in
pop
pcmpeqw
fld
pusha
fmuls
or
lods
repz
in
cmp
cmp
jne
ljmp
icebp
or
ret
andb
xor
cmp
movsl
mov
push
stos
scas
ud1
cmp
pop
cmp
scas
clc
sbb
pusha
xchg
cmc
cmp
and
cmp
push
inc
push
in
push
mov
mov
sbb
add
in
cmp
idivl
mov
or
adc
or
push
cmp
jbe
inc
xor
add
shlb
and
loop
andl
xchg
mov
cmc
add
sub
mov
mov
sbb
or
mov
xor
xchg
adc
pop
ss
adc
jne
or
loope
incb
inc
test
and
pop
cmp
mov
aas
hlt
mov
bound
in
clc
test
and
ds
xor
pop
loopne
jne
testb
ret
cmc
rcll
je
adcl
out
lahf
mov
xchg
js
xor
pop
std
clc
inc
jl
ja
and
jecxz
sub
into
stos
in
inc
xor
loope
jp
sub
stos
push
and
push
adc
popa
cmp
test
xchg
jo
lds
fwait
jno
enter
push
lods
js
or
xchg
pop
jl
ret
cmp
pop
xchg
rcrl
add
cmp
es
mov
leave
stos
fwait
cmpsl
and
sbb
cmp
mov
pop
cwtl
xor
xlat
mov
xor
adc
and
orb
dec
adc
fildll
cwtl
sarb
add
std
push
std
jne
sbb
mov
mov
fsubrl
imul
jne
xor
add
cmp
jb
pop
add
leave
loop
sub
sar
faddl
sbb
adc
add
mov
xchg
test
add
loop
add
xchg
movsb
pop
fbld
cmp
pop
sub
adc
inc
test
repnz
into
adc
out
sbbl
adc
loopne
jne
xor
fdivr
out
pop
aas
push
testl
adc
pusha
cld
mov
daa
jae
xlat
stos
cmp
add
fcoms
or
pop
mov
dec
sub
stos
lcall
jle
lcall
cmpsb
push
dec
pop
dec
lea
outsl
lcall
xor
adc
out
and
sub
dec
jge
mov
stc
or
push
pop
adc
movsl
jl
cs
push
int
cmp
dec
xor
adc
adc
les
mov
aaa
jne
pop
mov
mov
pop
push
jge
pop
fsts
jbe
xor
or
xchg
mov
push
ds
xor
mov
vpavgb
xchg
sbb
testl
and
pop
jbe
xchg
sub
jp
jno
mov
mov
push
pop
pusha
lods
insl
mov
imul
test
repz
sbb
push
mov
mov
xchg
or
jmp
xchg
iret
mov
call
int3
ret
xchg
into
aad
mov
test
xor
adc
add
add
call
dec
fwait
roll
cmp
mov
fistl
out
adc
pusha
lea
jle
mov
adc
sbb
scas
hlt
jno
fidivrl
mov
rcll
mov
sub
lret
xchg
lods
mov
lea
lret
je
jmp
loopne
mov
mov
jmp
sbb
jns
je
roll
test
repnz
adc
scas
mov
mov
sub
loop
cmp
mov
mov
jbe
fwait
and
mov
push
adc
ds
stos
orb
in
loopne
int3
add
data16
mov
imul
add
scas
and
push
push
mov
ds
sbb
inc
sub
jecxz
jp
and
sub
in
add
jmp
lret
or
jl
mov
aaa
jne
mov
lret
sbb
cmp
stos
inc
pop
jae
pop
cmp
mov
aas
and
test
cmpsl
int3
mov
cmpsb
xchg
int
cmp
aas
jg
cmp
mov
loopne
jns,pn
pushf
jp
adcl
push
add
jge
fcoml
sub
ljmp
ss
add
repz
push
jbe
sbb
sbb
shrl
lock
leave
hlt
dec
pop
in
mov
icebp
sub
mov
add
in
js
lcall
pop
sbb
mov
scas
cmp
pop
jg
or
cmc
fwait
add
fs
pop
add
inc
movsl
movsl
daa
rcrb
adc
sub
call
fisubs
fwait
pop
scas
bound
lahf
andb
cmp
shlb
mov
cld
dec
setl
iret
in
fisttps
inc
inc
das
cmp
pusha
and
cmp
push
clc
repnz
cmc
inc
adc
jge
lret
dec
mov
mov
das
jne
and
xchg
or
xchg
sub
negb
lret
mov
jne
sbbb
insb
mov
adc
adc
sti
out
mov
roll
pop
int
adc
xchg
orl
mov
test
outsl
repz
mov
inc
std
jp
push
in
pop
pop
dec
xchg
movsb
arpl
popa
mov
fwait
xor
jnp
add
ret
jge
aaa
mov
daa
inc
and
sbb
mov
cwtl
hlt
cmp
sub
cmp
in
testl
in
mov
sahf
jecxz
cmpsl
sub
popa
cmp
add
es
jle
cmp
mov
into
clc
addl
int3
inc
xchg
jb
leave
stos
test
jbe
addr16
push
jae
clc
insl
dec
aas
sbb
in
push
adc
ss
lahf
lret
into
push
dec
mov
adcl
sub
push
out
shlb
mov
xchg
arpl
xor
xchg
jne
cs
push
scas
sub
dec
fs
mov
fnstcw
insl
loope
cmp
rolb
outsb
push
fwait
sub
push
std
push
mov
insb
jne
mov
pusha
inc
xchg
sbb
xor
js
push
inc
aam
insl
push
ds
fidivl
add
cmp
pushf
int
mov
lods
xchg
dec
mov
mov
out
loope
cwtl
xchg
nop
mov
insl
adc
cmp
icebp
cmc
ds
xor
orl
stc
push
cs
jmp
sarb
das
inc
push
and
xorl
mov
ja
or
in
popf
inc
lcall
int3
lcall
add
nop
psllq
fistpl
cwtl
divl
jge
ja
outsb
dec
loop
push
outsb
sbbb
xchg
dec
adc
sahf
mov
in
pop
cmpsb
icebp
lock
hlt
or
popf
jb
test
dec
mov
aam
lahf
lsl
imul
sub
data16
addr16
lods
das
sub
jae
sbb
dec
clc
add
adc
sbb
sbb
inc
test
repz
adc
cmp
sahf
in
xchg
xorb
xchg
in
jno
jnp
into
push
aad
jp
in
jle
mov
lcall
fidivrl
jns
jae
ret
js,pn
clc
cmp
stos
mov
pusha
scas
jo
mov
popa
lret
pop
xor
out
jo
ljmp
loop
jecxz
iret
out
fdivl
inc
inc
mov
adc
test
push
dec
cltd
dec
and
cmp
mov
out
cltd
sti
or
cli
out
add
mov
inc
mov
pushl
and
pop
sub
in
gs
lcall
daa
cli
cmp
je
dec
sub
mov
xor
xor
jbe
icebp
je
call
and
das
push
lds
inc
cmpb
adc
ret
std
mov
adc
lret
int
xor
jmp
adc
xchg
gs
xor
pop
leave
repnz
das
out
xchg
pushf
bound
test
shll
mov
in
push
jp
adc
fildll
mov
mov
fsubrs
mov
fnstcw
stc
les
repz
and
mov
jne
je
cmp
xor
mov
inc
stc
int3
pop
dec
repnz
inc
mov
cmp
xor
cmp
pop
xlat
cli
mov
ds
fdiv
sbb
pop
jge
scas
or
xchg
push
cmp
or
test
mov
sub
xchg
sar
lock
call
cmp
out
xchg
xor
loope,pn
cltd
icebp
cmp
jne
shrb
fs
imul
xchg
push
lods
rclb
sbb
test
xchg
dec
jns
push
mov
cmp
and
add
aas
loop
and
in
lahf
sbb
push
sbb
or
ja
roll
dec
mov
lret
dec
mov
mov
mov
clc
aad
jnp
leave
mov
jne
out
jns
test
inc
cmp
pop
cmc
lds
sarl
outsb
fiaddl
sbb
inc
das
dec
pop
pop
in
xorb
cmp
dec
xchg
cmp
lret
scas
adc
ss
enter
ret
data16
dec
mov
aaa
push
push
pop
ret
cld
mov
jnp
jae
push
out
shlb
loopne
inc
sbb
xchg
xorb
bound
sbb
pushf
ret
mov
pop
mov
and
push
imul
xor
into
or
xor
lret
add
xor
outsl
in
dec
call
xor
push
xor
or
mov
add
jle
mov
test
jbe
aad
aaa
push
shll
ja
or
mov
mov
pop
pop
jo
lods
cmp
sub
dec
xchg
mov
lret
cmp
outsb
fs
lret
imul
and
xchg
jno
pusha
pop
inc
aad
push
add
outsb
loopne
flds
sub
outsl
sbb
mov
andl
or
aas
jecxz
pop
cwtl
je
xchg
jge
xchg
cmp
ret
sbb
cli
push
mov
and
adc
ret
cmp
je
jge
jmp
add
jle
adc
addr16
loopne
lret
push
aam
xchg
std
scas
pop
inc
daa
fistpll
imul
sub
inc
lret
js
lahf
les
pop
mull
xor
xchg
add
mov
test
xor
jae
mov
xlat
inc
cli
popw
popf
jle
jg
mov
mov
daa
jmp
sbb
dec
xor
out
jo
js
adc
cmpsl
popa
mov
es
push
rol
cmp
outsb
movsl
subl
dec
loop
icebp
testb
out
mov
adc
jno
insb
fwait
outsl
out
loopw
ficomps
mov
or
sbb
test
sub
adc
les
outsl
adc
adc
dec
out
cmp
mov
ja
push
test
test
test
dec
iret
into
hlt
rol
sbb
lea
push
sbb
cld
add
clc
mov
push
daa
decb
push
popf
mov
ljmp
imul
xchg
cmpsb
inc
leave
or
jge
cmp
xorb
sub
xor
ljmp
flds
sbb
inc
xchg
and
inc
and
ret
sahf
in
nop
ret
mov
or
iret
mov
pop
rolb
inc
fucomp
loope
pop
push
dec
movsl
leave
jo
pop
int
adc
pop
mov
pop
xchg
popa
cmp
mov
inc
aas
mov
mov
test
roll
or
mov
lds
imul
in
lds
xor
stos
fs
loop
sub
cltd
adc
xchg
fstps
fcomp
iret
outsl
cmp
mov
cmp
jns
cmpsl
lods
enter
test
push
lret
mov
and
push
jg
clc
test
pop
clc
pop
push
popf
sub
dec
mov
jge
add
push
movsl
test
xchg
mov
bnd
jp
jo
sbb
enter
sub
popf
inc
popf
dec
rcll
les
andl
dec
repnz
mov
lahf
xchg
xor
movsb
cli
ret
pop
sbb
inc
movsl
sub
adc
pop
pop
add
inc
dec
shlb
pop
pop
add
mov
lret
inc
sbb
inc
and
fcmovnu
mov
jl
fnstenv
stos
pop
into
fiadds
lcall
pusha
lea
mov
jecxz
imul
ljmp
adc
dec
mov
mov
mov
adc
add
aas
fcmovbe
sub
or
fs
xlat
es
sub
popf
xor
add
mov
inc
xlat
das
cmp
dec
ret
faddp
lods
sub
mov
mov
rcrb
outsb
jg
arpl
cmp
lods
in
test
dec
scas
mov
sbb
mov
in
jno
jp
jnp,pt
xor
sub
out
mov
and
inc
mov
xchg
xchg
mov
lods
dec
aaa
xchg
mov
imul
fstp
out
sbb
cmp
fwait
inc
gs
mov
jno
ret
imul
iret
mull
inc
mov
cmp
add
clc
shr
insb
mov
add
cmp
outsb
xchg
stos
stos
adc
adc
dec
push
test
jne
pop
sub
and
lahf
adc
sbb
loopne
out
dec
mov
fsubr
ja
inc
mov
or
sub
outsb
push
js
push
add
cmp
push
sti
imul
xchg
pop
jle
out
imul
xor
push
mov
dec
lods
push
jae
enter
loop
int3
add
stos
stc
popa
inc
lahf
mov
aas
inc
dec
ficompl
lcall
mov
mov
pop
cmp
sbb
mov
xor
loopne
jae
dec
ret
std
push
outsl
mov
daa
scas
lods
push
pop
stos
icebp
pop
into
paddusw
mov
cmp
mov
fwait
xchg
ss
sub
shlb
in
cmc
in
lock
cmpsl
xchg
and
fcoml
insl
or
out
and
sbb
addb
dec
rcrb
sbb
or
jle
xor
movsb
lods
shl
pop
mov
mov
sub
fisubrl
xor
mov
aad
xor
or
add
movl
loope
leave
ljmp
ss
movsb
push
cmp
pop
add
xor
stos
sub
in
mov
les
mov
add
mov
mov
sbb
cmpsb
fsubrl
mov
vmwrite
out
rcr
ljmp
leave
movsb
mov
mov
adc
cmp
andl
and
out
xchg
iret
jae
and
mov
xor
fistpll
in
test
xchg
insb
and
xchg
fnsave
dec
call
mov
push
xor
ljmp
mov
repz
movsb
push
call
or
hlt
dec
mov
out
je
jns
sbbb
rorb
rcrb
cmp
cmc
cltd
js
js
inc
bound
stos
mov
push
jecxz
repz
dec
jae
push
mov
jo
cmp
in
je
fwait
sub
jg
leave
cmpsl
pop
jle
cli
pusha
xchg
lock
jnp
xor
or
mov
andb
sbb
insb
xchg
or
push
dec
adc
xorl
jge
mov
clc
lcall
mov
dec
repz
rcr
or
ljmp
fistps
negl
pop
nop
jo
mov
lcall
add
dec
push
sub
lds
imul
add
mov
ja
cmp
jne
sbb
out
push
xchg
lods
stos
mov
mull
jbe
mov
stos
mov
outsl
imul
mov
mov
hlt
jno
in
and
push
xchg
adc
xchg
lret
jg
xchg
cwtl
jmp
cmpsl
pop
push
fistps
jmp
and
cmp
insl
pop
adc
or
adc
aas
dec
adc
push
xchg
pushf
imul
int3
pop
push
es
imul
lods
cmp
xlat
shr
addr16
dec
out
lods
mov
lahf
faddl
mov
idivl
cli
mov
xor
inc
cmp
imul
mov
jno
outsl
or
in
ret
pop
stc
or
mov
and
and
xchg
pop
jmp
or
cmpsb
sub
inc
fists
ja
imul
cmp
push
arpl
mov
push
xchg
mov
or
inc
sub
cmp
rorb
mov
and
mov
mov
js
bound
sahf
lea
add
xchg
sahf
out
and
adc
mov
icebp
or
xor
push
movsb
cs
dec
sbb
add
nop
sub
js
and
arpl
imul
mov
jns
mov
call
shll
je
pop
dec
or
rcrl
sar
aad
cli
xchg
pop
add
outsb
fisubl
mov
fs
and
xchg
dec
dec
xor
shrl
mov
hlt
das
aad
sti
lcall
gs
adc
inc
out
push
insl
sbb
ds
filds
xchg
pop
xchg
and
ljmp
xor
arpl
push
loop
pop
fldenv
addb
jg
lret
jo
in
dec
aas
pop
jbe
add
dec
dec
mov
add
orl
sar
clc
iret
aam
fsubs
nop
inc
dec
xor
xor
cmp
fbstp
sbb
sbb
or
adc
aas
mov
ja
mov
cmpsl
jp
pushf
or
das
scas
xchg
cwtl
nop
ret
adc
inc
mov
das
popa
aam
push
mov
aad
push
inc
jmp
inc
fadd
mov
es
push
cmp
add
lods
and
add
pop
xchg
jo
jl
stos
mov
inc
mov
mov
sub
add
imul
addr16
dec
mov
je
out
jae
cmp
add
sahf
mov
out
push
sbb
nop
add
imul
ret
cmp
mov
xchg
xor
push
xchg
fmul
pop
jnp
arpl
out
add
pop
dec
pop
or
leave
pop
mov
insl
cmp
gs
jle
adc
mov
or
iret
mov
cmp
movsb
scas
or
lock
jbe
xor
push
add
and
mov
jge
sarb
or
push
push
dec
and
insb
mov
jns
pmulhuw
sub
shll
pop
arpl
out
insl
lea
lds
add
test
add
push
push
shll
mov
movzbl
push
sarb
scas
inc
rolb
cmc
test
out
movsl
sbb
lods
cmp
cmp
pop
aas
push
sub
mul
xchg
inc
enter
and
add
jge
insb
or
inc
andb
sub
or
inc
sub
outsb
inc
mov
loop
jp
dec
and
pushf
mov
dec
lea
adc
out
mov
setns
imul
test
sbb
pop
add
aam
loope
and
lock
mov
loopne
neg
jno
adc
aam
lcall
mov
mov
sbb
or
ljmp
xchg
insl
lds
xchg
mov
and
in
int
or
xor
pop
lods
push
mov
jmp
sbb
sub
cmpsb
data16
inc
std
scas
scas
mov
in
arpl
out
inc
mov
mov
cmp
ljmp
lods
aaa
cmp
repz
add
mov
pop
add
aaa
addb
or
out
das
xchg
ror
adc
mov
fxch
jp
fwait
daa
and
in
rcrb
adc
mov
lds
lds
mov
int
xlat
pop
add
adc
mov
push
and
add
negl
leave
pop
adc
test
jp
sbb
mov
iret
mov
bound
adc
jmp
sub
fidivrl
fwait
imul
mov
les
addr16
dec
fwait
xorb
xchg
insl
popf
data16
xchg
lcall
xor
mov
out
addl
cli
dec
sub
sub
rclb
pop
mov
dec
cli
xchg
xchg
movsb
and
iret
test
jno
push
aam
adcb
sarl
mov
scas
mov
out
clc
jge
adc
insb
pop
push
pop
and
xchg
ja
jne
ret
push
add
inc
jbe
inc
popf
and
fists
mov
jo
mov
cmp
pop
mov
add
jp
int3
inc
pop
dec
xchg
and
shrb
outsl
and
xchg
test
and
jae
inc
xchg
or
mov
lahf
imul
inc
mov
pop
outsl
jnp
dec
mov
cs
pop
testb
push
out
jbe
adc
or
jns
sub
cmc
test
adc
insl
dec
mov
jae
cmp
dec
jg
sbb
pushf
pop
incl
pop
arpl
mov
popa
andb
or
shlb
imul
jne
dec
jae
daa
iret
cmp
inc
movsb
lea
shrb
cmp
jns
pop
mov
orb
iret
dec
cmp
stos
test
in
cmpsl
dec
mov
insb
icebp
cmp
cmpsl
cmp
scas
icebp
lods
xlat
jge
test
push
test
jne
dec
sbb
scas
xor
out
inc
xor
inc
popf
test
lea
cmp
adc
push
dec
or
pop
and
sub
jecxz
decl
xlat
ljmp
fidivl
mov
mov
scas
xor
jb
loop
in
jg
sbb
push
xchg
lcall
mov
repz
addr16
sub
push
inc
and
pop
es
mov
popa
into
jbe
dec
xor
sahf
fisttps
jnp
sub
test
rclb
aas
in
jnp
les
in
mov
xor
call
fsub
mov
mov
addl
pop
sar
sbb
pushf
or
sbb
push
mov
mov
add
push
push
and
push
or
ret
sarl
mov
mov
dec
out
jg
out
iret
mov
sbb
jmp
push
test
adc
fsubs
shrb
stos
add
es
movsb
cmpsb
push
scas
lods
sbb
jnp
mov
std
mov
xlat
out
add
sahf
cmpsb
cmpsb
pop
cmp
mov
mov
lret
dec
pop
push
sub
pop
into
push
pop
mov
cmp
imul
push
lahf
out
push
xchg
test
dec
ljmp
loope
into
xchg
add
out
insl
jbe
push
mov
leave
mov
hlt
inc
mov
push
adc
mov
push
sbb
or
cwtl
adc
cmp
pop
dec
cwtl
popf
aam
enter
adc
inc
mov
mov
dec
pop
xor
jns
out
jg
mov
mov
stos
xchg
pusha
outsb
rorb
mov
adc
push
pop
or
cs
adc
daa
js
or
scas
adc
and
sub
popl
fs
adc
mov
xchg
jo
inc
clc
shll
lds
out
lahf
insl
andl
adc
jecxz
addr16
sbb
int3
in
adc
cld
cli
sbb
test
sub
xchg
bound
sbb
mov
lods
cmp
cmpb
cld
scas
inc
hlt
lcall
ret
and
loop
jl
ret
addr16
scas
arpl
cmpsb
pushf
stos
pushf
jge
and
sbb
outsb
mov
mov
mov
jecxz
xchg
add
fisttps
jbe
lahf
pushf
shlb
addb
int3
push
and
subb
mov
insl
in
mov
pop
outsl
bound
and
shlb
jne
cmp
cmpsb
xchg
dec
cmp
or
sub
add
add
xor
test
xchg
xchg
shlb
aad
sub
icebp
fcompl
iret
stos
sti
rcrl
add
add
daa
imul
aaa
xchg
stos
mov
movsl
cli
xchg
leave
loopne
sub
xchg
sub
cmp
incl
pop
cmp
je
pusha
jns
pavgb
cs
dec
imul
adc
push
add
push
insb
jae
aas
add
sbb
cmp
xchg
add
int
cs
faddl
mov
mov
popl
mov
push
fwait
jo
mov
add
leave
push
mov
mov
in
push
push
add
scas
pop
ljmp
arpl
inc
lahf
mov
xchg
dec
or
mov
mov
shrd
push
dec
imul
inc
jns
xchg
stos
pusha
enter
sub
cmp
xchg
sti
dec
sub
test
popa
out
negl
std
lret
jg
test
or
inc
fmulp
sbb
adc
dec
sbb
fistpll
jmp
inc
cs
aad
enter
and
int3
push
les
push
sbb
inc
xor
mov
pop
dec
sub
dec
ret
and
gs
lods
or
test
insb
or
test
cmp
dec
stos
xchg
jae
mov
jno
int
or
ret
out
and
clc
stc
push
cmp
mov
mov
mov
jne
leave
sbb
lods
pusha
fnstsw
push
popf
js
dec
mov
pop
enter
jmp
adc
ja
mov
fcomps
cmp
aam
hlt
ljmp
daa
mov
shlb
xor
fldcw
in
fwait
std
push
test
xor
orb
jg
xchg
or
push
sub
fwait
dec
andb
aas
leave
pop
pop
int
add
or
cltd
popf
mov
lea
movb
cmpsl
loope
push
lods
sbb
sti
xlat
and
mov
jne
dec
cld
negl
cli
adc
sub
jb
xor
pop
popa
icebp
mov
lock
inc
xor
cwtl
add
fwait
stos
sub
or
test
add
xchg
jl
mov
fldt
pop
mov
xchg
cs
cwtl
push
sahf
add
insb
pop
leave
in
loope
push
dec
addl
jge
std
or
mov
or
neg
jae
and
aad
fisttpll
call
lcall
xchg
mov
mov
leave
cltd
pushf
pop
out
cmp
mov
xchg
into
scas
pop
les
and
cmp
push
sahf
test
loopne
and
addb
or
test
ror
enter
jp
stos
inc
push
push
in
push
daa
cli
xor
push
loope
test
outsb
pop
adc
cmpsl
xchg
dec
dec
in
cld
rcr
cwtl
bndstx
cwtl
shl
push
fiadds
pop
dec
aas
mov
mov
jge
xor
dec
push
out
negb
xchg
lret
cmp
sbb
pop
adc
push
jnp
int
cs
mov
or
sbb
mov
dec
inc
sbb
incl
sbb
mov
leave
mov
cmp
mov
rolb
test
daa
shlb
push
imul
leave
jmp
scas
test
lret
test
push
cmc
inc
fsubs
inc
sub
sbb
cmpsl
lcall
nop
fisubl
sbb
mov
movsb
jl
sbb
call
movl
push
lahf
ja,pn
and
pusha
test
outsb
sub
lahf
sub
pop
aam
pushf
in
leave
sbb
push
lcall
fisttpll
inc
mov
je
pop
sub
sub
mov
jbe
andb
cmpsb
xor
loop
ljmp
xchg
inc
xchg
test
lea
add
add
jbe
mov
pop
add
sbbl
sub
pop
arpl
dec
cmp
add
loopne
es
adc
andl
ss
fsts
cwtl
push
movsb
je
repnz
mov
in
sahf
add
add
rorb
fst
mov
lods
cmp
push
aaa
cmp
jge
pop
push
sti
inc
leave
xchg
xor
mov
pop
and
sbb
inc
mov
jecxz
xchg
scas
and
and
roll
dec
dec
add
sub
fwait
ja
daa
jb
cltd
xor
jge
in
outsb
arpl
stos
and
jns
adcb
fsubrs
int
and
mov
mov
pop
inc
fcomi
popf
out
pop
jb
jg
mov
mov
cmpsl
inc
mov
mov
add
psllq
shlb
cs
push
add
fnstsw
jno
mov
movsl
je
jo
clc
and
pop
repz
sahf
dec
lcall
das
pop
dec
pop
pop
dec
into
jns
sarl
mov
fisubs
shrb
push
std
dec
add
add
jns
int
mov
jae
mov
push
rclb
mov
dec
jno
xchg
test
mov
loop
outsl
mov
rorl
lock
adc
cltd
cmp
addr16
iret
aad
ljmp
fistpll
arpl
subb
call
addr16
sbb
push
pop
pop
sbb
loopne
push
daa
sub
xchg
xlat
inc
sbb
int
out
push
dec
mov
and
loop
loopne
js
xchg
sbb
iret
imul
les
insb
push
call
jmp
fiaddl
xor
addr16
dec
and
aad
movsb
mov
js
sbb
adc
jbe
jge
idiv
jge
cmp
xchg
int
ret
daa
mov
test
out
sub
mov
push
test
les
mov
into
subl
cwtl
push
dec
aas
sub
adc
jge
mov
push
pop
pop
out
inc
sbb
pop
mov
cmpsb
pop
sub
das
movsl
adc
out
add
shrb
and
lgs
aam
nop
incl
popf
out
jge
fists
jl
mov
fxch
cwtl
ja
push
into
imul
int
gs
bndstx
data16
cmpb
cmc
lods
push
mov
adcb
loop
sbb
inc
scas
jmp
imul
scas
sbb
imul
jb
jae
mov
popf
jmp
cltd
sub
cmp
adc
and
mov
push
xchg
in
les
fsubr
cmp
inc
movsb
dec
test
bound
inc
add
scas
lret
addr16
xor
cmp
pop
sub
das
insb
add
movzbl
and
sbb
dec
push
daa
fmul
faddl
push
pop
mov
ja
fisubrs
sub
jno
push
loop
xor
push
enter
cs
mov
decb
fnsave
and
arpl
sbb
inc
fmull
jnp
daa
fdivp
adc
inc
out
test
repnz
out
in
insb
inc
xor
and
inc
cmp
sbb
lret
leave
dec
or
out
cmp
inc
bound
cmp
xchg
idivl
fnstcw
dec
add
mov
fs
negb
out
or
mov
sti
sbb
adc
cmpl
icebp
lock
push
loop
cld
jl
stos
adc
std
jae
scas
push
xchg
rolb
mov
dec
fidivrs
adc
xchg
movsl
scas
aam
adc
test
sarl
fimull
mov
pop
lcall
aad
adc
aas
xchg
xchg
pop
cmp
pusha
mov
and
cmpsb
rclb
and
sti
mov
imul
cbtw
sar
xchg
and
pop
mov
sub
aaa
add
stos
leave
into
ss
jne
ss
jne
inc
mov
popf
inc
rcrb
loop
dec
xchg
loopne
ja
loopne
lea
loop
or
sub
adc
popw
aam
scas
pop
arpl
sub
mov
or
outsb
jmp
xor
mov
push
cmp
adc
lods
cs
in
add
mov
jno
mov
test
push
call
pop
cmp
dec
push
ss
imul
js
rcrb
cmpsl
sub
xor
sbb
hlt
mov
out
lock
fcomi
repz
sub
scas
push
jb
es
fwait
push
inc
mov
mov
int3
movsl
jge
jl
nop
ret
mov
push
jmp
sub
repz
and
sub
cmp
sarb
xchg
and
add
xchg
jle
adc
and
mov
cmp
xor
mov
pop
in
insl
lock
xchg
popf
dec
push
xor
lock
and
test
loope
or
xor
cmpsb
jnp
fwait
int3
or
frstor
out
and
lods
dec
mov
add
rcll
jmp
jecxz
cmpsb
xchg
or
jnp
mov
int3
fcmovnbe
xchg
mov
dec
insb
lock
jbe
push
popf
dec
cltd
mov
subb
xor
dec
cmp
adc
fwait
pop
adc
subb
xchg
movsb
and
mov
cmpl
subb
adc
stos
push
fcomps
popf
ja
mov
cmp
mov
cld
jne
rolb
sub
movsb
mov
inc
nop
enter
filds
outsb
setns
out
hlt
out
cmp
call
dec
pop
adc
divl
inc
sub
test
dec
push
jecxz,pn
stos
or
inc
and
aad
add
sbb
out
cmpsb
pusha
cs
iret
jne
add
in
inc
add
pop
mov
adc
mov
outsl
mov
into
and
xor
fisubl
dec
jbe
pop
or
xchg
dec
data16
test
jmp
adc
xlat
je
cmp
jmp
fmuls
enter
mov
pop
sub
sub
jmp
add
js
fisttpl
iret
insb
imul
out
imul
repnz
nop
and
outsb
pop
inc
mov
pop
clc
or
arpl
pop
xchg
sbb
mov
lcall
mov
cmp
mov
and
push
xorb
dec
inc
cmp
int3
add
or
loop
cmpsb
mov
sub
adc
lret
sbb
test
or
test
loope
cs
and
out
ss
mov
adc
or
push
xchg
and
int
pop
and
ss
fucomi
ss
mov
pop
xor
sub
int3
push
cli
dec
or
popa
mov
loopne
pop
add
adc
inc
sbb
mov
in
xchg
stos
mov
xchg
sub
or
sahf
pop
bound
scas
xor
scas
sub
and
fisubrl
cwtl
jl
shlb
aaa
and
mov
pop
lods
lret
sti
xchg
cmpsl
das
cld
dec
out
pop
icebp
loope
int3
pop
shll
push
aad
push
pop
xchg
or
pushf
stos
inc
xchg
lods
add
jl
call
jne
das
lods
sbb
jno
ja
ja
fcoml
lcall
mov
test
fsub
mov
cmc
add
mov
hlt
inc
data16
cmp
test
scas
inc
dec
je
mov
inc
push
es
repz
push
rcr
jo
xor
push
cmc
jbe
xchg
outsb
test
dec
jecxz
movsl
icebp
xor
xchg
xchg
in
nop
and
retw
pop
enter
adc
jae
sub
outsl
mov
outsl
mov
addl
push
cmp
jmp
inc
mov
addr16
or
mov
clc
stc
test
or
push
orb
mov
jnp
xchg
fs
sbb
jo
icebp
xchg
sbb
test
pop
jecxz
out
mov
in
lret
into
inc
pop
sub
lods
and
or
pop
jl
rolb
push
push
adc
lods
js
lods
hlt
adc
push
add
fldcw
pop
fnstenv
int3
ret
repz
push
xchg
data16
imul
movsb
rcr
clc
xor
mov
jae
and
inc
push
xchg
mov
lcall
dec
sbb
sarb
cmp
repnz
cld
xchg
vunpcklps
js
xchg
xchg
in
add
ficoml
out
mov
fsubrs
pmulhuw
loope
fistps
push
das
std
lods
lea
and
int3
mov
cmp
sbb
dec
shr
dec
in
push
dec
jnp
sti
sub
and
aaa
mov
mov
sbb
pop
mulb
mull
lods
mov
or
add
sbb
adc
mov
popa
jle
fildll
inc
pushf
sahf
xor
in
mov
pop
dec
je
sbb
pushf
or
dec
movsl
std
xlat
loopne
jb
ja
out
inc
push
xchg
testb
inc
loopne
jle
lret
sub
fiadds
nop
xchg
stc
les
adc
push
mov
cmp
jns
pop
xor
or
mov
in
xor
je
lret
out
and
xor
les
sbbl
xchg
inc
ja
ret
lret
xor
cli
lock
test
in
xor
pop
jge
shrb
mov
ljmp
je
adc
repz
adc
sbb
insb
mov
sbb
movsl
inc
icebp
stos
pop
sbb
outsl
ljmp
fimuls
add
je
jns
jae
pop
lcall
cmpsl
xlat
imul
les
loop
adc
cld
mov
cmp
sbb
in
sub
imul
stos
jl
flds
or
push
out
in
lret
xchg
xlat
movl
xor
cli
jl
js
mov
push
cmp
mov
sahf
fisttps
cmpsb
bound
repz
mov
cmp
scas
movsb
jmp
mov
jge
jns
lock
xchg
cmc
sub
and
push
push
fcmovb
test
xchg
push
mov
sub
mov
fcoml
sbb
xor
repz
aam
jbe
and
fwait
add
shrb
dec
clc
imul
addr16
push
pop
jg
add
sbb
mov
or
mov
pop
cld
je
xchg
shl
jmp
adc
jne
into
or
outsb
push
psubq
push
repnz
fildll
ds
sbb
ds
inc
xchg
cmp
sub
fisubs
adc
sbb
sub
into
rcrb
sti
lods
aas
loop
out
dec
pop
push
idivl
mov
jne
pop
sarl
lds
pop
cmpsb
dec
pop
je
pop
test
cmp
push
out
leave
pusha
adc
xchg
cmp
lret
hlt
add
pop
imul
dec
inc
jo
nop
push
adc
mov
test
jbe
dec
pop
leave
push
fildll
dec
cmp
and
sub
in
push
arpl
loopne
in
ret
jne
out
out
inc
pop
and
jle
stc
or
mov
jbe
mov
fucomi
cltd
mov
scas
mov
sub
xor
pop
insl
jno
jbe
int
pushf
lahf
jp
pop
dec
pop
add
scas
cmp
shlb
jbe
mov
test
out
int3
sbb
out
pop
sub
pop
xchg
jne
pop
jbe
in
jp
push
sub
arpl
inc
push
sub
cmpl
add
push
or
dec
adc
xchg
lds
dec
push
lods
stc
xor
movsb
sahf
in
int3
inc
xchg
mov
ljmp
stos
aad
pop
pop
pop
cwtl
mov
orb
and
xchg
mov
jb
cmp
mov
mov
xlat
sti
add
xchg
outsl
pslld
gs
clc
pop
sbb
sahf
adc
mov
cmp
bound
lret
push
adc
scas
fucomip
or
cmp
cwtl
pop
scas
icebp
in
loope
hlt
cltd
push
mov
sub
and
imul
test
push
fidivs
fisttps
and
adc
sub
xor
int3
faddl
sub
rcrl
out
jle
mov
movsl
xchg
int3
or
add
xchg
dec
push
in
shrl
add
xchg
and
inc
pop
fsubr
sbb
push
leave
adc
mov
pop
xchg
mov
jo
dec
jns
ljmp
mov
les
mov
bound
imul
cltd
imul
into
hlt
push
shlb
mov
pop
ss
mov
push
xchg
push
leave
xchg
aam
jbe
or
add
sub
aad
adc
fdivl
push
shl
aaa
rcrl
adc
iret
jo
push
cli
cmp
sub
sbb
xchg
sub
fcmovnbe
xchg
insb
pop
mov
xor
iret
pop
mov
test
mov
mov
sub
jae
adc
pop
addr16
jmp
out
mov
mov
add
jae
mov
dec
cmp
cmp
std
dec
adc
das
dec
xor
insb
mov
mov
and
fnstenv
cmc
int3
pop
jmp
xlat
lcall
adc
ds
iret
cmp
xor
jge
scas
jae
jne
pop
negb
aad
lahf
dec
daa
jbe
xor
movsb
into
cmp
std
mov
sub
xchg
fsubr
push
jo
stos
test
adcl
jle
inc
pusha
pop
push
dec
jnp
les
lods
lods
imul
jecxz
add
add
lods
xor
fdivrl
or
adc
and
inc
fldt
jb
sbb
fwait
jl
cmpsb
ljmp
daa
nop
jno
xchg
sub
mov
or
sbb
ljmp
lahf
sbb
mov
test
insb
xor
mov
fnstenv
sub
cmp
pop
fs
mov
pop
add
sahf
rol
pop
test
pop
shll
aam
mov
stos
cmp
dec
cltd
ljmp
dec
jmp
imul
ds
and
mov
mov
std
cmp
xchg
pusha
into
sub
icebp
adc
sbb
out
xchg
jno
rclb
mov
out
push
push
push
add
leave
int
sbb
xor
loopne
in
add
insl
mov
pop
fcoml
lods
jecxz
in
pop
hlt
js
jae
aas
sbb
inc
sub
mov
pop
and
xor
clc
xor
add
rcrl
pop
shrb
daa
subb
cmp
inc
adc
sbb
sbb
les
cltd
xor
fadds
push
into
leave
sub
xchg
clc
jg
cmpsb
out
cltd
out
fwait
in
cmp
sub
mov
aas
out
rol
mov
cmp
ja
imul
add
pop
out
cltd
stos
gs
cs
xor
push
clc
test
add
mov
sahf
lea
sub
jle
into
sbb
shrl
imul
rcrl
pop
out
stos
test
addr16
and
dec
sub
push
scas
xchg
mov
jmp
dec
add
adc
aaa
out
in
lcall
sti
sub
cmp
mov
mov
lret
adc
sbb
or
xor
das
xchg
js
cs
imul
xchg
fistl
ret
test
push
jb
push
lret
pop
sub
test
push
cmp
and
push
cmpsb
jne
mov
aam
lcall
idivb
mov
cmp
lcall
sahf
loope
sbb
cmp
dec
shll
test
pop
out
adc
dec
leave
popf
sbb
sub
mov
ret
mov
jnp
test
and
je
in
push
out
xchg
fadds
in
jp
dec
lahf
cmp
aam
or
shlb
fisttpl
test
mov
rcrb
mov
jle
pop
in
jne
mov
rcr
pop
and
or
sub
mov
sub
xchg
push
std
pop
adc
scas
sub
mov
fs
in
jl
xor
sbb
stc
adc
arpl
mov
insb
test
add
mov
sbb
daa
into
dec
idivb
iret
lock
ja
mov
xchg
cmp
sub
push
and
mov
push
shr
jbe
leave
adc
outsb
dec
in
mov
mov
jb
inc
lahf
mov
lret
stos
xor
dec
push
ljmp
mov
in
jmp
movl
popf
pushf
or
cli
cmp
outsb
sub
cmp
push
pop
insb
mov
push
dec
xor
mul
rcll
lret
cli
dec
lea
test
or
push
lea
fwait
imul
mov
iret
mov
inc
lret
scas
push
arpl
scas
dec
stos
shr
cmp
popf
fs
xchg
pop
pusha
test
je
sbb
in
stos
repnz
mov
mov
fwait
in
push
mov
test
lidtl
sarl
das
das
jge
leave
xchg
inc
or
hlt
daa
jnp
add
inc
xor
rcrb
out
sub
pop
adc
push
mov
pop
test
divb
lret
mov
leave
mov
adc
sbb
mov
es
out
ficoms
pop
sbb
dec
adc
add
std
push
aad
cmp
or
push
push
scas
or
xchg
cmp
xchg
dec
add
lock
movsl
incb
xor
xlat
shll
sti
cwtl
fdivrp
xchg
mov
pop
orl
test
dec
in
or
dec
push
sbb
mov
push
mov
mov
and
adc
xor
scas
jge
inc
push
mov
scas
mov
xorb
and
stc
sbb
push
stos
lahf
mov
ret
jmp
daa
mov
insl
int3
data16
fisttpll
or
cmp
jne
xor
sti
scas
std
or
xchg
xchg
mov
cmp
test
std
jnp
xchg
enter
ffree
testl
daa
add
scas
mov
pop
sbb
mov
cmovns
mov
les
and
stos
addr16
cmp
je
movsb
push
sbb
xor
or
outsl
sub
dec
or
outsb
in
sbb
inc
jge
and
cmp
push
cld
mov
pop
pop
out
insb
inc
inc
add
fdivrs
inc
sub
sbb
cmpsl
pop
xchg
paddb
push
mov
mov
adc
orb
mov
mov
or
mov
mov
in
xchg
fdivrl
jp
fstps
xchg
lock
rcl
into
mov
pop
cmp
leave
mov
adc
or
sbb
lods
fildll
in
inc
add
test
test
push
mov
sub
adc
cwtl
adc
mov
int3
pop
and
mov
dec
repnz
add
rep
or
gs
add
jno
jmp
add
clc
xor
jns
pop
int
ljmp
in
shlb
repnz
dec
or
add
mov
mov
inc
stc
xlat
fwait
mov
test
mov
cmp
icebp
lods
out
inc
testb
inc
test
sbb
lods
fistpll
repnz
out
jge
inc
out
fdivrl
jl
mov
loope
dec
mov
or
cmpsb
xchg
out
push
aam
pop
insl
xor
push
push
fistpl
mov
or
cld
mov
inc
sti
pop
adc
push
imul
shl
cmpsb
loopne
addr16
jp
mov
cmc
xchg
lock
push
pusha
jo
pop
subl
in
addr16
cmp
not
jne
pop
and
push
xor
flds
daa
jge
sbb
dec
adc
stc
xor
ret
popf
in
add
shrl
gs
and
js
call
mov
rdmsr
lock
rolb
mov
mov
sahf
xchg
or
sbb
push
pop
scas
pop
sbb
dec
cltd
fdivs
repz
add
pop
js
xlat
call
sbb
fldl
aas
push
lock
mov
push
shrb
faddl
cmp
dec
push
das
pop
das
popf
and
in
mov
cld
xor
mov
out
lahf
mov
mov
movsb
popf
insl
sbb
notb
and
mov
insb
imul
xchg
nop
adc
sti
pop
popa
inc
fisttpll
fcoml
push
xor
ja
outsl
lods
cmpsb
mov
and
lea
jno
shrl
mov
mov
sbbl
cmpsl
mov
sbb
hlt
push
dec
sbb
loopne
mov
out
int
out
lahf
stos
inc
lods
cmp
nop
loope
std
loop
push
popa
mov
insl
enter
push
in
cmpl
mov
jne
xchg
iret
pop
sbb
lock
mov
fbld
jle
push
out
mov
out
dec
mov
pop
cwtl
popa
outsl
lret
add
sub
add
add
xchg
imul
in
ret
mov
cs
mov
repnz
pop
pop
pop
jb
cwtl
xor
ret
mov
icebp
xor
lods
mov
lahf
sub
mov
cmpsb
dec
jbe
pop
xor
dec
in
mov
test
fidivrs
sbb
pop
dec
mov
xchg
xor
stos
ds
mov
dec
test
cmpsl
insb
popf
cld
add
cmp
push
jnp
jp
clc
psubq
js
mov
dec
and
mov
mov
xchg
ficoml
xchg
or
cltd
stos
and
mov
xchg
mov
pop
pushf
push
add
insl
push
std
addl
roll
xchg
pop
std
dec
push
dec
add
subl
mov
scas
ds
leave
je
pop
adc
push
out
xchg
jns
jbe
jl
testb
stos
in
lret
stc
pop
insl
dec
jae
test
fldz
frstor
leave
push
repz
xor
jo
mov
xor
push
mov
insb
in
cld
sbb
adcl
jle
mov
mov
xchg
add
sbb
dec
rol
or
adc
pop
jb
stc
sbb
repz
sbb
std
enter
mov
dec
out
in
adcl
das
das
dec
in
mov
sbb
pop
hlt
fwait
sbb
test
inc
xchg
jns
and
adcl
fadd
pop
cmp
cmp
cli
ret
icebp
leave
ljmp
xchg
inc
adc
inc
push
cmp
scas
loopne
fs
lock
adc
in
add
pusha
in
mov
push
jle
lea
inc
leave
orl
dec
jno
ss
divb
mulb
mov
test
mov
jno
int
mov
pop
ss
aaa
push
call
inc
push
and
dec
dec
ret
fimuls
lds
push
nop
js
sub
aad
pop
lret
or
stos
lock
test
mov
pop
mov
and
clc
std
pushf
dec
cs
leave
add
shrl
cmp
mov
andb
test
loopne
cli
lock
or
lahf
stos
xor
dec
dec
insl
enter
popa
mov
scas
xchg
popa
les
lcall
mov
lea
add
mov
rcrb
lahf
scas
fiaddl
push
repnz
aas
orl
xor
movsl
sbb
imul
pop
push
adc
cmpxchg
cmp
hlt
mov
sahf
sbb
cmp
xchg
sysenter
or
lods
in
or
in
add
mov
cltd
pop
mov
nop
inc
mov
popf
mov
fstpl
push
in
cmp
lahf
js
fcom
pushf
mov
ret
or
pop
and
pushl
mov
lea
mov
pop
call
sbb
mov
mov
shrl
movsl
outsl
inc
lods
shlb
adc
fwait
sub
stos
or
stc
inc
fnstenv
dec
or
push
mov
stc
push
ljmp
negl
xchg
mov
xchg
aam
add
shll
loope
push
mov
mov
jmp
std
jg
sbb
inc
pop
push
fcoml
popa
jmp
pop
sbb
enter
rorl
enter
roll
xchg
cwtl
inc
fcmovnu
out
das
jmp
sti
je
mov
mov
outsl
stc
test
aas
mov
push
pop
or
mov
mov
mov
jmp
mov
pop
pushf
fsubr
ljmp
mov
sbb
jecxz
push
pop
fstpt
mov
cli
data16
out
add
push
popf
mov
jl
cmp
pop
jb
das
mov
or
pop
outsl
sub
mov
imul
xor
mov
or
scas
imul
dec
scas
sbb
cmpsb
call
rcrb
xor
loop
mov
inc
adc
lahf
xchg
aaa
das
sti
jnp
adc
xchg
decb
or
jne
push
das
sbb
stos
fwait
mov
les
popa
pop
loopne
stos
mov
push
ret
pop
adc
fdivl
push
in
sbb
push
mov
add
in
dec
imul
sar
xchg
pop
ljmp
sbb
sysexit
in
mov
cmp
push
push
fdivs
pusha
jl,pt
out
in
loopne
pop
sbbl
push
jbe
push
std
fisubl
pop
inc
adcl
inc
mov
push
xchg
push
mov
sbb
stos
scas
or
in
es
push
cmc
loopne
outsl
sahf
adc
rcll
and
inc
mov
insb
sahf
lods
or
adc
aaa
sub
movsb
mov
or
jns
nop
lock
out
jns
jle
out
das
mov
inc
mov
fdivp
mov
lods
div
pop
mov
call
pop
aad
ret
or
pop
xchg
out
vpshlq
sub
cltd
pop
call
sub
xor
xor
mov
in
mov
cmp
test
mov
jnp
push
pop
scas
addl
ret
and
scas
or
cld
adc
pop
fwait
ret
scas
xor
lea
scas
pop
into
daa
mov
xchg
fdivrl
push
sbb
test
and
lahf
mov
cmp
add
jno
lds
lcall
ljmp
xchg
je
fcomps
notl
xor
stos
cwtl
fistps
jecxz
or
imul
pop
cmp
mov
adcl
jmp
pop
dec
mov
or
pop
mov
push
inc
mov
pop
aam
pop
mov
movb
sub
fsub
mov
sahf
jg
or
mov
popa
dec
inc
outsl
sub
add
xchg
jmp
mov
jge
xchg
ret
sbb
movntq
not
sbb
sbb
add
xchg
rcl
jns
fildll
mov
mov
cmp
lods
add
push
mov
lods
sahf
add
addr16
pushf
inc
dec
es
cmp
dec
fdivs
bswap
mov
ja
ret
insl
inc
jle
jns
mov
ljmp
pop
stc
sub
adc
lret
mov
xor
pop
sbb
lcall
lods
add
inc
idivl
out
adc
hlt
push
insb
jbe
jno
mov
sub
int3
inc
mov
and
pushf
outsl
cmp
stos
jmp
dec
fsts
ljmp
push
jp
cmp
sub
cli
push
mov
in
xchg
into
xor
pop
js
sub
imul
fcompl
and
ret
test
and
mov
xor
lcall
push
mov
test
and
pushf
sahf
jae
test
imul
pop
lods
push
in
or
in
roll
mov
test
push
lret
mov
lods
mov
rcr
mov
sti
pop
pushf
pushf
cmp
jo
in
dec
lods
adc
fcmovnb
cwtl
push
mov
lret
xlat
into
and
stos
stos
leave
sub
push
sti
push
cmp
scas
dec
rorb
cmp
mov
cmp
push
jle
xlat
repnz
jae
sar
add
movl
in
aaa
call
dec
lods
inc
rclb
shrl
aam
rorl
mov
xlat
and
fwait
daa
mov
pop
mov
xchg
scas
test
fdivrs
call
sahf
xor
jns
dec
mov
push
inc
stos
stos
stc
sbb
in
int3
iret
cmp
lret
mov
mov
pop
mov
pop
bound
push
xchg
leave
ja
dec
mov
aad
stos
xchg
mov
fistl
leave
mov
or
sbb
sub
jnp
ret
or
icebp
cmp
sub
stos
sub
scas
pusha
xor
outsb
mov
fimull
into
leave
les
pusha
int
add
jo
mov
imul
add
mov
jg
push
dec
dec
bound
xchg
sbb
sbb
cmp
cmp
adc
fldl
sub
mov
popf
cmpsl
test
aam
jno
mov
xor
add
sub
jo
adc
fstpl
jmp
es
push
mov
cmp
xor
add
mov
sbb
xor
push
inc
fisubs
sbb
nop/reserved
push
inc
sahf
inc
jne
mov
cmp
jne
cmp
loope
inc
mov
js
or
or
xor
push
jns
mov
mov
add
push
aad
xor
lcall
inc
cmp
pop
mov
sbb
out
repnz
or
dec
aaa
les
repz
dec
sub
shrl
ss
add
mov
loope
js
int3
lock
xchg
loope
dec
bound
inc
adc
fidivl
std
dec
jmp
les
cmc
mov
cmp
popa
das
mov
outsb
and
inc
jecxz
dec
xchg
lods
lock
or
lods
add
repz
or
fnstsw
inc
movsl
inc
inc
int3
xlat
sarl
mov
into
sub
jae
cld
movsb
push
jecxz
push
push
test
in
cmpsl
inc
and
or
inc
jnp
addb
dec
xchg
test
sbb
in
stos
sbb
push
xchg
lcall
dec
jmp
jo
int3
sbb
and
sbb
jne
int
enter
daa
adcb
cld
xor
es
subl
call
mov
pop
inc
add
sub
lea
or
stos
push
cld
aaa
xor
mov
lret
ret
popf
pushf
or
xchg
lds
das
lahf
adc
nop
jns
jp
jmp
rcl
aaa
scas
out
in
jle
mov
or
sbb
loop
jp
dec
movsb
mov
out
mov
test
mov
cmp
adc
mov
xchg
or
pop
mov
icebp
pop
test
outsb
add
dec
fstpl
lahf
popf
and
nop
mov
outsb
inc
or
dec
ret
sbb
push
sbb
addr16
aaa
dec
ss
push
cmpsb
push
mov
jae
ja
jle
leave
and
daa
loopne
fwait
push
xor
mov
jg
inc
adc
in
xchg
xor
shl
int3
imul
popa
fwait
adc
cmpsb
push
xor
inc
push
lds
jl
lods
not
call
outsb
xor
addb
inc
sarb
push
sbbb
xor
out
or
dec
mov
std
sahf
jmp
jmp
jp
add
dec
mov
inc
insb
sar
sub
movsb
mov
pusha
mull
lods
add
inc
and
dec
or
outsl
add
ljmp
cmp
sbb
leave
outsl
and
pop
rcll
mov
mov
ficoms
pop
fmul
addb
xchg
out
cmp
pop
ret
cmovb
inc
push
enter
xchg
xor
push
lock
lods
pushf
mov
add
mov
mov
fisttps
je
mov
rcl
jno
pushf
out
jae
lock
xor
aaa
nop
jmp
orl
and
xor
pop
fnstenv
out
ljmp
dec
in
adc
leave
cs
subb
sub
push
loopne
jl
ds
call
cmpsb
add
repz
cmp
imul
movsl
fdivrp
dec
add
inc
dec
pop
sub
adc
jns
sbbb
divl
dec
jbe
adc
mov
int3
cld
aas
pop
add
sbb
push
movsl
cmpsl
pop
popa
cmp
cmpb
xchg
sub
add
pop
xchg
aas
cltd
adc
fildll
sbb
sti
fwait
rcl
popf
dec
mov
push
jns
xor
subl
pop
in
in
inc
dec
pop
ds
mov
mov
mov
inc
roll
sbb
push
dec
jne
mov
add
sbb
jb
clc
pop
dec
repnz
pop
add
decl
dec
xchg
loope
mov
ja
mov
mov
sub
xorb
sub
test
pop
imul
movsl
ds
push
xor
xorl
mov
dec
mov
loopw
mov
mov
iret
daa
xor
dec
icebp
inc
int3
and
jp
mov
out
out
cmp
push
lock
fistpll
repnz
cmp
cmp
sbb
andl
pop
jle
hlt
outsb
gs
leave
push
sbb
and
mov
loopne
dec
test
hlt
das
or
mov
sbb
lcall
int
mov
nop
push
aam
lods
jg
inc
rorb
int3
call
mull
enter
out
pop
mov
mov
sarl
cmp
mov
adc
cmp
push
movsl
push
jle
mov
xor
dec
vpsraw
push
pop
inc
lods
xchg
add
adc
out
jl
shll
ja
leave
xor
rcrb
int3
pop
shlb
xor
out
insb
in
stc
mov
jl
jae
dec
or
cmp
sbb
push
sbb
and
jb
mov
ret
mov
cmp
dec
test
daa
addr16
jl
or
stc
inc
arpl
ds
pop
fimuls
outsb
outsl
xchg
aam
add
cmpsb
push
fcompl
xor
test
adc
xchg
insb
mov
mov
lock
imul
mov
insb
bnd
push
sub
xor
push
push
inc
xor
cltd
test
ja
leave
dec
add
lods
or
mov
jecxz
les
xchg
push
loope
inc
pop
sbbb
jl
aaa
sbb
insl
lods
leave
jecxz
push
jne
es
popf
pop
sbb
push
add
dec
std
mov
adc
frstor
dec
ds
lock
mov
mov
lret
add
shlw
hlt
push
cmp
ret
rcrb
fldt
jnp
jne
push
add
xor
testb
push
mov
mov
dec
dec
sbb
push
insl
arpl
push
or
sub
in
inc
dec
ds
test
push
add
dec
xchg
in
test
jns
add
out
cs
and
arpl
add
popa
lods
sbb
push
or
adc
loop
idivb
fldt
sub
and
sub
sbb
movsb
adc
cmpsb
inc
iret
cld
push
xchg
sbb
outsl
imull
xor
inc
lret
js
in
dec
push
out
sub
or
lcall
gs
loope
fbld
out
xor
ljmp
rolb
not
inc
sbbb
sub
cmp
push
cli
xor
dec
into
test
mov
mov
dec
push
xor
cs
js
sbb
mov
and
push
xchg
icebp
dec
push
lea
fsubrl
push
ja
ss
fildll
test
fcompl
mov
push
mov
in
xchg
add
aaa
mov
add
or
mov
das
mov
sbb
mov
or
jp
jbe
sub
adc
aam
nop
aad
je
fwait
ljmp
xor
repz
dec
clc
jge
mov
pop
mov
push
cmpsb
mov
mov
mov
xchg
xor
dec
cmp
xchg
test
scas
adc
add
mov
push
sbb
mov
aaa
cmp
jl
movb
mov
in
dec
xchg
adcb
sbb
andb
pop
fldcw
repnz
scas
jmp
insb
stos
xchg
mov
jo
xor
cmp
add
jno
push
setnp
inc
int
mov
cmpsl
dec
jno
pop
iret
xchg
or
icebp
mul
ret
push
mov
inc
gs
jle
xor
fsubrp
pusha
js
push
add
js
push
int
mul
push
pop
dec
and
outsb
push
pushf
jge
dec
sub
test
je
dec
mov
mov
push
lcall
and
lcall
sub
out
and
popf
call
nop
aas
jmp
ds
and
sbb
ja
adc
adc
mov
insl
hlt
mov
pushl
sbb
call
ja
pop
ljmp
test
xchg
loope
or
pop
xchg
inc
jne
mov
and
daa
adc
inc
mov
icebp
xchg
push
sbb
loopne
rolb
push
inc
clc
popf
inc
xlat
pop
test
jle
xchg
insb
adc
fstl
scas
sbb
cmp
imul
sub
pop
aas
dec
into
pop
aaa
push
mov
sub
jb
into
add
xor
fst
xchg
shlb
aad
pop
mov
mov
pop
ja
pcmpeqw
pop
fisttps
call
inc
lock
cmpsb
cwtl
jnp
rclb
movsb
cmp
pop
mov
mov
insb
mov
imul
inc
mov
ljmp
and
in
mov
mov
leave
loopne
arpl
mov
test
push
repnz
cmc
pushf
pop
daa
ljmp
popa
xchg
testl
bound
mov
and
aam
and
push
push
fwait
inc
pop
add
sbb
fsubrp
sbb
out
pop
mov
sahf
pushf
dec
cmp
sub
xor
ret
shlb
ficoml
cmp
push
xchg
adc
sbb
jmp
pop
pop
push
inc
fwait
cmp
mov
fimull
adc
test
sub
jae
add
mov
lahf
cmp
sub
xchg
or
cmpsl
jno
flds
adc
cmpsl
push
push
repnz
push
xchg
cwtl
sbb
mov
out
fcomps
inc
addb
lds
jl
push
sbb
data16
adc
cmpsl
add
repz
stos
mov
jecxz
or
adc
or
aaa
mov
pop
out
add
cltd
dec
and
sbb
lods
dec
mov
sub
jae
rep
cmc
dec
cmp
adc
sahf
jg
mov
outsl
shr
sbb
cld
sbb
mov
adc
or
es
and
pop
mov
pop
or
fwait
mov
add
nop
subl
jecxz
mov
add
add
and
pop
aam
sbb
push
gs
cmp
xlat
mov
cld
das
ret
stos
sar
sub
adc
mov
shrb
dec
aaa
stos
jmp
lret
jo
mov
inc
or
mov
adc
es
js
mov
cmp
aam
insb
adcb
lea
xor
nop
int
mov
popf
in
sub
pop
aad
dec
sub
call
stc
dec
fldenv
ss
xlat
ljmp
jbe
in
xor
lods
cs
cmc
mov
pop
mov
clc
jge
xor
shlb
xor
xchg
outsl
mov
popf
mov
mov
imul
hlt
push
sub
mov
cmpsb
enter
imul
push
rolb
xor
hlt
lcall
mov
movsl
xor
sbb
xchg
inc
in
cmpsb
push
sub
xlat
push
aad
inc
add
mov
orl
pop
rorl
in
adc
mov
rcrl
push
subl
adc
sbb
mov
push
push
fisttpll
jecxz
or
xor
ret
push
xchg
iret
fwait
xchg
and
add
push
sub
jo
aad
or
mov
or
lret
push
pop
sub
xor
adc
sub
repz
jl
push
dec
stos
mov
aas
stos
andl
fnstsw
ret
push
stc
push
xchg
scas
scas
rclb
repnz
ja
clc
ljmp
in
add
fldt
add
mov
mov
out
stos
rcrl
data16
pushf
mov
mov
cmp
mov
jne
lret
xor
stos
popf
icebp
insb
lods
ffreep
xchg
inc
pop
leave
or
cmp
sbb
pop
mov
int3
mov
sub
sub
movsb
or
fnsave
push
pusha
cmp
mov
xchg
cmc
or
addr16
pusha
sbb
jnp
push
into
jno
dec
int3
pop
aaa
sbb
inc
outsl
stos
mov
mov
jecxz
cwtl
sub
stos
aas
cmp
fptan
dec
xor
and
std
leave
add
or
lret
enter
rcrl
add
xchg
xchg
dec
xchg
pop
push
adc
push
gs
cmp
popa
lock
adc
adc
xlat
sbb
xor
outsb
shlb
stos
push
mov
mov
xor
or
mov
fbstp
inc
or
negb
cmp
xor
es
lret
int3
js
adc
stos
cmp
push
daa
aad
sub
push
repz
jne
inc
or
sub
push
fcomps
sub
mov
int3
adc
stos
pop
xor
jb
push
add
es
arpl
and
pusha
ror
sbb
imulb
jno
pop
aaa
out
repnz
dec
and
pushf
sub
int3
xor
mov
outsl
pop
xlat
stos
paddq
dec
negl
lds
iret
imulb
mov
adc
mov
jns
out
jae
cmp
js
cmp
inc
insb
mov
inc
repnz
mov
fmul
movsb
orb
dec
jmp
and
mov
sub
loopne
cwtl
jbe
jg
cmpsl
dec
sbb
mov
mov
stos
xor
clc
arpl
ja
or
aas
scas
lea
add
cli
daa
push
adc
je
insb
jne
inc
in
push
pop
fwait
movsb
fstpl
inc
hlt
mov
ljmp
test
pop
call
adc
pop
popf
mov
std
adc
jno
xchg
mov
ja
lea
lret
add
xchg
jp
xchg
loope
mov
cmp
xchg
sub
bound
test
outsl
pop
and
nop
sbb
ljmp
sbb
cmc
out
xchg
cmp
ret
add
adc
and
scas
mov
lock
pusha
int3
in
xchg
pusha
gs
xchg
imul
mov
leave
cmpsb
and
xor
add
inc
sti
mov
mov
or
and
and
popa
dec
gs
je
popf
ret
test
push
push
dec
lret
jae
mov
fnstcw
mov
xchg
imul
push
orb
push
xor
rolb
inc
xor
imul
dec
pop
pop
ret
add
imul
mov
jge
out
dec
push
scas
inc
popf
repz
sbb
add
mov
xor
imul
xor
imulb
add
aam
xor
testl
pop
loop
call
rolb
xchg
jns
sub
adc
inc
sub
adc
shlb
es
test
bound
addr16
sarl
mov
push
push
and
push
leave
jbe
adc
fsts
es
inc
cld
cmpsb
add
jae
mov
cwtl
cwtl
popf
jbe
sub
cmp
into
repnz
jl
scas
jnp
ljmp
dec
pushf
sbb
loope
cwtl
or
in
xchg
nop
push
es
pop
pusha
sub
inc
rorb
cs
sub
add
sub
add
add
cwtl
sbb
jge
sti
insl
pop
sarb
xor
xlat
aam
in
mov
adc
ja
bound
loope
jno
les
jge
xchg
inc
jo
xchg
test
xor
pop
enter
insl
cwtl
xchg
aaa
pushf
sbb
divl
sbbb
call
cld
cmp
mov
dec
and
cwtl
sub
insl
roll
push
xchg
outsl
inc
cs
popa
jo
xor
adcl
sub
jnp
pop
or
loope
mov
add
mov
pusha
aas
in
and
add
jbe
pop
or
cmc
or
inc
and
pushf
xor
cld
and
nop
repz
bound
andb
in
shrl
aam
cmp
not
in
push
mov
jmp
cld
insl
pushf
outsb
test
jnp
jne
fidivrl
test
cmp
rol
and
push
dec
jp
jge
aad
mov
pop
or
add
loopne
lret
in
lret
fmull
scas
inc
push
aam
clc
sub
lret
jecxz
scas
sarb
imul
xor
mov
jge
pop
std
and
sbb
sub
and
mov
sub
or
mov
pop
jo
add
addr16
mov
dec
sub
imul
mov
push
cmp
cmp
sbb
repz
lcall
push
pop
jno
pop
cmpsb
iret
and
pop
sbb
int
adc
xchg
push
fnstcw
lcall
push
iret
mov
in
sbb
dec
aad
and
rclb
loop
xor
mov
fwait
je
xor
inc
dec
dec
pop
lret
xchg
mov
sbb
jb
xchg
cmp
ret
jecxz
sub
idivl
lret
and
xchg
lods
or
pop
shlb
cltd
xorl
js
dec
out
cmp
sub
dec
mov
push
jg
jo,pn
iret
loop
int
fdivrl
or
pushw
jne
insl
outsb
adc
cwtl
jae
push
into
addr16
lock
xor
leave
addr16
in
jns
or
xor
push
int
and
in
sti
sti
push
push
scas
cmp
mov
into
lds
jge
push
mov
or
test
test
pop
adc
arpl
loopne
popl
push
mov
xchg
xchg
push
gs
lods
loope
rol
cmp
push
and
aad
pusha
xor
sbbb
dec
xchg
pusha
mov
adc
dec
and
push
mov
inc
push
push
fdivr
cmpsl
ss
and
cld
pushf
or
jg
test
test
stc
int3
xchg
fistpl
push
andl
mov
add
in
push
leave
insb
push
mov
scas
cmp
mov
lahf
sbb
push
cmp
pop
mov
jne
mulb
jecxz
xchg
outsl
arpl
push
scas
xor
add
mov
xchg
inc
pop
xchg
mov
lds
leave
jecxz
vcomiss
jle
cmp
dec
push
out
stos
jnp
mov
sub
test
jo
add
add
jp
arpl
dec
cmc
imul
mov
loop
gs
add
xchg
imul
inc
cltd
add
mov
das
repz
sub
jae
pusha
adc
int
imul
loop
hlt
outsl
out
cmp
pop
xchg
mov
xchg
sub
sub
ret
scas
sub
adc
pop
mov
mov
das
setb
ret
out
cmp
leave
daa
mov
lcall
sbb
sbb
adc
in
inc
sub
pop
ja
push
inc
nopl
scas
scas
xchg
xchg
or
xchg
je
push
mov
mov
adc
aad
imul
stc
popf
sahf
testl
pop
popa
or
pusha
lret
sbb
ret
imul
xchg
mov
jle
rcl
inc
jno
fisttps
mov
dec
dec
xor
xlat
bound
inc
test
push
insb
pop
int3
sbb
cmpsl
cmp
inc
pop
stc
sti
cli
mov
imul
sub
mov
push
loop
out
in
push
adc
aas
call
fbld
xchg
push
call
inc
cmp
and
arpl
das
movsb
push
stc
ficomps
dec
jo
les
mov
or
sbbb
cltd
jg
into
shrb
dec
xbegin
ret
sbbl
xchg
test
hlt
aaa
add
pop
and
and
pop
stos
xchg
mov
jmp
cmpsl
pop
add
mov
xor
add
fwait
xchg
inc
mov
adc
ror
repz
add
cs
push
jl,pn
mov
or
sbb
jbe
cmp
rorb
shlb
lock
xchg
pop
xchg
dec
js
and
inc
pusha
xlat
mov
test
or
add
adc
stos
repnz
mov
pop
outsb
mov
xorl
test
pop
or
and
ficompl
xor
popf
adc
rcl
adc
adc
mov
or
cmp
mov
add
imul
or
dec
mov
xor
mov
mov
stos
mov
clc
test
das
dec
fcmovne
decl
fdivr
sub
das
jg
push
and
inc
cld
movsl
bnd
xchg
xchg
xlat
aaa
inc
pop
or
nop
cs
std
or
cmp
cmpl
adc
pop
hlt
jbe
shll
dec
imul
mov
cmp
outsb
inc
stc
dec
add
aad
and
lret
or
fwait
out
jl
js
fdivr
mov
and
lds
je
ficompl
mov
into
mov
iret
jecxz
sahf
mov
das
daa
pushf
push
lods
lods
test
add
mov
jne
pop
test
ljmp
mov
sbb
sub
mov
sbb
ret
jmp
sbb
testl
cwtl
rcrl
mov
cli
push
insl
in
test
sbbl
jg
pop
push
jge
test
xlat
dec
mov
idiv
dec
jmp
lea
sub
lods
jmp
cli
mov
scas
loope
test
mov
jae
mov
ss
shlb
push
imul
cmpsl
sub
fs
push
adc
pop
jle
mov
bound
test
xor
fs
repnz
ret
and
mov
or
lods
daa
stos
jnp
and
int3
test
sub
xchg
dec
hlt
inc
aad
inc
sahf
shll
add
push
fildll
xor
call
or
out
sub
mov
aaa
data16
sar
stc
in
jl
fmuls
lea
xchg
mov
inc
sub
or
ror
idiv
scas
insl
loope
out
lret
aad
xchg
mov
lock
sbb
shll
pop
sbb
test
mov
jnp
adc
pop
and
cmp
mov
ret
push
popa
dec
push
sub
or
push
imul
mov
cld
or
lahf
and
outsl
inc
xchg
xchg
insl
lahf
xchg
std
push
cltd
fdiv
xorl
leave
inc
stos
and
insb
loope
fldcw
movsl
insl
test
sub
in
lcall
push
mov
fdiv
fstpt
jg
ss
pop
test
decl
stos
sub
je
addr16
xchg
add
cld
push
mov
test
lods
pop
jne
pop
int3
and
int3
inc
pop
sub
jg
ficoms
sub
mov
mov
test
or
xor
cmpsb
loope
sub
xchg
jae
mov
xlat
jecxz
js
cmpl
fwait
popa
adc
push
in
push
insb
add
divb
es
andb
test
sbb
or
subl
shrb
xchg
gs
les
mov
push
insb
insl
xchg
inc
sub
add
mov
nop
xchg
push
gs
mov
pop
mov
or
rcrl
ss
loopne
subl
jb
push
xlat
mov
push
sbbl
and
out
xchg
or
mov
jb
mov
pop
fsubl
lods
shll
mov
ja
out
mov
scas
push
push
push
insl
shll
cmp
test
loop
pusha
rcr
sbb
add
cli
leave
mov
sbb
xchg
enter
jo
fidivrs
and
xor
insl
and
gs
mov
mov
push
push
lds
enter
loop
ficompl
jne
push
jbe
movsl
jecxz
xlat
inc
jg
test
cld
psubsb
xchg
lock
sub
scas
cmp
sub
in
sti
ret
enter
or
js
lds
rorl
repz
adc
add
add
test
and
outsl
out
mov
pop
mov
std
push
xchg
or
mov
scas
and
push
cmp
sbbl
push
cmp
xchg
loopne
fsubl
lret
jl
cmp
sbb
mov
push
stos
hlt
gs
adc
outsb
ss
xor
test
and
in
fdivrp
sbb
fmull
or
pushf
bound
stos
mov
movsb
mov
add
inc
ja
shll
push
lods
xchg
mov
sti
add
xor
mov
aam
pop
cli
dec
xor
push
mov
mov
lock
mov
inc
add
sub
jnp
loopne
aas
adc
mov
icebp
ret
pop
lea
repz
out
dec
test
cmpsl
lcall
loope
mov
xor
stos
cmpsb
mov
mov
push
mov
lret
push
pop
jle
in
cmp
stos
imul
inc
in
mov
sub
adc
and
pop
mov
test
testl
mov
das
jp
cs
sbb
mov
test
fs
jo
jae
insl
dec
int3
xchg
sbb
cs
or
test
push
mov
pusha
or
fdivr
ljmp
nop
int3
jns
shrl
dec
sbb
cli
shl
test
sbb
adc
iret
ljmp
sti
inc
cmp
add
push
push
dec
and
aas
insl
push
mov
push
cmpsb
mov
sub
xlat
xor
inc
pushf
adc
data16
cwtl
out
rcrb
shll
jb
adc
sub
rolb
stos
in
ret
pop
lods
outsb
js
int3
ja
stos
push
fcomps
xlat
mov
xchg
clc
loopne
nop
movsb
fmuls
cmpsb
in
jb
dec
cltd
xor
add
push
lock
stos
fwait
dec
push
lret
in
push
or
out
mov
ja
sub
in
push
add
pusha
imul
icebp
pop
xchg
js
and
mov
lcall
ficoml
pushf
cwtl
mov
out
mov
shrl
out
out
stos
div
xor
jmp
test
and
pop
push
movsb
and
ljmp
push
sti
mov
lods
testl
hlt
mov
xor
imul
cmovae
inc
add
aaa
lods
xor
sub
sbb
mov
jl
pop
mov
cmc
xchg
lcall
sbb
fimuls
sbb
and
insl
cmpl
dec
mov
incb
xor
jne
mov
adc
jl
jns
into
aaa
mov
jp
jg
inc
mov
loop
cs
int
fildl
stc
in
inc
cs
pop
xchg
ss
pop
fisubs
into
lret
pop
jecxz
xor
adc
mov
repnz
test
rcl
stos
aam
inc
fiaddl
ljmp
outsb
push
out
or
mov
push
std
out
bound
jbe
mov
jbe
ljmp
xchg
gs
and
loope
pop
cmp
xchg
mov
xchg
adc
scas
mov
push
dec
pop
loopne
mov
mov
ss
mov
out
mov
inc
iret
mov
js
aad
loope
sahf
mov
jge
jecxz
sbbl
push
out
xchg
cmpl
inc
rolb
pop
inc
mov
push
sub
jge
fmulp
jne
pop
inc
jle
push
bound
adc
and
addr16
popf
rcrl
loopne
jno
xchg
cmp
test
out
in
fnstsw
jbe
das
pop
mov
push
lret
jl
loopne
fiaddl
ds
jg
je
fisttpll
sbb
dec
push
shr
cmp
imul
int3
daa
mov
dec
adc
cmp
outsl
pop
repnz
jle
daa
scas
jno
xchg
or
in
jno
dec
fildl
popf
lcall
xor
sar
push
lock
push
popf
adc
add
adc
clc
xor
loop
xchg
inc
pop
mov
xchg
les
push
sbb
add
pop
in
paddd
cmp
lea
sbbl
xlat
out
std
pop
repz
fisubrl
loop
dec
mov
push
sub
sub
mov
cmp
aad
ficomps
inc
sti
out
loop
add
addr16
xor
outsb
or
ret
je
cmp
inc
add
bound
movsl
jo
jmp
lret
jle
test
cmp
dec
adc
mov
sbb
jge
cmp
movlps
xchg
jae
je
bound
push
addr16
frstor
mov
cld
dec
cmp
sti
adc
ljmp
addl
mov
pop
test
push
sub
imul
in
dec
int
pop
hlt
out
lea
sarl
lret
es
pop
lret
cltd
pop
xchg
leave
outsl
jg
add
hlt
ljmp
sub
pop
clc
in
popf
lods
cmp
sub
pop
mov
leave
orb
repz
jnp
ja
adc
xor
xor
add
sub
out
inc
int3
adc
fidivrs
and
adc
cmpb
hlt
pop
mov
inc
mov
pop
pop
orb
jecxz
push
das
or
lahf
add
dec
cmp
jle
into
fcompl
hlt
push
pop
sbb
test
jae
pop
pusha
mov
jae
push
orl
rorl
test
inc
jno
adcb
shll
lds
mov
cli
fsubrs
sbb
pop
adc
cs
ret
daa
xlat
movsl
jecxz
out
xor
sbbb
sbb
and
int
adc
stos
sbb
adc
adc
and
cmpb
and
mov
aad
int3
and
sahf
cmc
pop
loopne
or
arpl
inc
xchg
push
mov
jecxz
movsl
insl
cli
lret
aam
fcoml
and
mov
pop
xor
jl
rclb
jo
inc
fisubs
adc
lret
jge
sarl
sarl
in
andb
or
sti
sbb
or
jno
mov
sub
int3
sub
std
lea
gs
mov
sub
jns
jp
inc
mov
pushf
std
stos
mov
and
in
sub
pop
push
aaa
jo
aam
rcrb
movl
mov
repnz
bound
sti
or
and
mov
fldenv
stc
inc
rolb
mov
sub
xchg
mov
mov
scas
add
test
shlb
jmp
cltd
ficoml
dec
push
divl
push
cmp
cmovp
inc
xor
mov
inc
and
test
push
lea
sub
and
daa
lcall
les
out
lea
je
mov
js
ja
sbb
jp
fwait
xchg
imul
mov
mov
xchg
mov
notb
pop
mov
dec
fst
push
ret
mov
inc
jl
popf
dec
popf
inc
popf
lret
push
int3
adc
mov
fnstsw
test
fnsave
or
imul
insl
push
fcmovne
or
popf
fistl
pop
lret
pop
xlat
dec
iret
leave
imul
repz
mov
shlb
add
imul
insl
dec
sahf
jl,pt
mov
out
mov
imul
or
imul
push
arpl
ret
inc
out
or
jl
outsl
pop
sbb
push
jle
jp
mov
addl
jns
sbb
test
xor
lods
clc
cltd
out
jmp
push
cltd
or
push
jo
fwait
dec
mov
cmp
movsb
outsb
aam
bound
mov
pop
push
fcomps
cmp
adc
sbb
jns
bound
daa
aaa
dec
mov
nop
pop
jnp
mov
push
jmp
inc
adc
cwtl
movsl
repz
push
sbb
clc
loopne
mov
mov
lret
sbb
clc
aam
pop
push
xchg
fcoms
dec
and
pop
or
test
int3
pop
sub
inc
mov
outsb
incl
cmp
cmp
jno
out
int3
ret
mov
mov
sub
and
mov
cmpsl
push
xchg
mov
insb
dec
sub
push
lret
mov
sbb
pop
xchg
adc
icebp
shrb
mov
add
add
push
pop
ds
repz
push
pop
neg
adc
mov
push
pop
stos
jb
jo
outsl
pop
sub
aaa
dec
or
xchg
cltd
scas
jg
xchg
sbb
cld
inc
mov
fisubrl
sbb
mov
fcmovne
iret
inc
pusha
outsb
outsb
mov
mov
fisttps
cmp
or
sbb
outsb
adc
ret
ds
pop
rol
sarl
inc
popl
inc
fwait
loope
insl
dec
loope
fisttpll
mov
pusha
dec
dec
jmp
int
cmp
mov
in
xor
shrl
mov
xchg
in
jno
arpl
xor
jg
out
mov
ret
add
pop
push
push
cs
ret
sbb
sbb
sub
scas
sub
insl
mov
outsl
jge
xor
sahf
and
mov
adc
cmpb
and
sahf
push
cmpsb
ret
pusha
pop
aas
lods
push
inc
scas
jbe
movl
and
sub
dec
lcall
jg
lahf
pop
adc
dec
adc
outsb
mov
xchg
xchg
jb
mov
add
into
loopne
jg
mov
jnp
shll
movsb
loop
inc
sbb
mov
push
nop
aad
push
adc
jle
pop
mov
sbb
cmp
ret
rcl
adc
lods
jl
xchg
fmul
or
addl
xchg
lahf
inc
shrl
in
sub
popa
jge
loopne
movsl
sub
add
dec
pop
lods
fisttpll
shrl
and
in
mov
sbb
mov
ud2
jne
stos
cmp
xchg
xchg
sub
in
mov
mov
pop
iret
pop
cli
mov
xchg
push
mov
xchg
pop
dec
ret
aaa
sub
in
push
lds
fidivrs
pop
xchg
jl
fstps
mov
push
pop
aas
or
push
js
pop
movsl
int
in
pop
mov
mov
in
daa
mov
sub
clc
xor
leave
xchg
dec
jbe
jmp
in
ret
cmp
jo
push
xchg
mov
mov
cmp
mov
sub
jno
mov
pop
and
test
pop
sarl
mov
fs
push
in
ds
mov
cmpsl
imulb
jae
mov
daa
mov
cmp
lcall
sbb
subb
push
gs
fldt
cld
pop
add
cltd
cmp
mov
mov
cld
test
icebp
sbb
inc
pop
lahf
mul
or
movsb
loop
imul
sub
dec
rorb
jecxz
inc
push
xchg
fldl
call
mov
rol
xchg
add
es
scas
loop
bound
cmp
push
shll
jnp
ret
inc
cld
mov
push
adcb
sub
cmpsl
xchg
inc
std
adc
jecxz
imul
push
andl
add
addl
js
addb
sub
xchg
pushf
push
xchg
into
mov
mov
mov
scas
bnd
mov
add
daa
frstor
pusha
movsb
jmp
testb
sbb
push
pop
jg
ljmp
pop
in
jg
out
cwtl
lahf
in
jl
push
xor
cmpsl
dec
rcr
xor
in
lea
add
push
aas
fcmovbe
or
push
mov
jnp
lret
add
dec
push
call
cwtl
in
cmpsb
addr16
sbbb
dec
les
jae
jns
aad
or
xlat
roll
add
imul
fnstenv
xchg
xchg
mov
mov
mov
cli
fidivs
mov
shlb
cltd
xor
dec
fldt
push
sbb
xchg
jmp
call
test
jp
shl
jne
sub
jge
and
push
outsl
sub
jno
inc
xchg
ror
mov
and
jmp
out
inc
stos
gs
fildll
mov
cltd
or
mov
jecxz
jmp
adc
fstpt
xor
fisttpll
push
sti
add
adc
scas
bndldx
xchg
add
ret
mov
xor
sti
jb
pop
outsl
imul
push
xor
mov
xchg
pop
movsb
jmp
ficoml
add
inc
divb
mov
push
cmp
dec
jp
arpl
inc
xchg
mov
ja
cmp
call
sahf
and
dec
mov
out
ret
sub
ljmp
std
pop
sub
adc
cmp
dec
push
jno
cmp
imull
mov
mov
push
xor
adc
out
mov
ljmp
inc
and
cmp
std
xchg
jns
ret
and
and
ret
loop
xchg
xchg
outsb
mov
out
mov
int
cli
pusha
sub
xor
mov
mov
lret
ret
bound
jns
add
mov
out
loopne
nop
stc
daa
dec
lea
pushf
mov
jmp
adc
orb
xchg
push
in
stc
mov
cmpsb
jns
std
inc
faddl
jnp
xchg
call
lea
inc
push
jl
xchg
jae
push
int3
movsl
roll
fcomps
or
imul
xchg
rcl
and
cld
dec
xchg
scas
cmp
outsb
mov
jmp
inc
sub
decl
dec
sub
cmp
into
mov
mov
test
mov
sub
add
imul
xchg
sub
push
mov
mov
stos
inc
push
pop
sub
mov
out
pop
pop
aas
sub
xchg
jns
mov
or
mov
pop
js
andb
mov
stos
and
and
sarl
mov
jno
rcr
rcl
test
nop
dec
lcall
sbbl
lods
xchg
andb
jne,pn
ss
leave
or
and
negl
xchg
iret
xor
fsubrs
imul
dec
xor
sbb
cmp
pop
and
das
bound
adc
repz
pop
sub
sub
mov
fldenv
les
or
xchg
ljmp
leave
mov
mov
int
scas
fcoml
mov
lods
negb
notb
push
inc
sahf
pop
mov
inc
jo
cmp
adc
mov
fisttps
popa
fwait
jne
pushf
mov
xor
sahf
inc
xchg
leave
loop
sbbb
test
inc
aaa
sbb
jecxz
in
mov
lret
aaa
jbe
push
int3
insl
stc
ss
inc
cld
inc
pop
lahf
or
push
inc
jb
push
adc
fmul
lret
call
push
mov
push
loope
cmp
jecxz
loopne
aas
dec
sub
int
dec
out
test
outsb
mov
mov
repnz
hlt
xchg
lods
notb
dec
loope
jl
ljmp
adc
rorl
lsl
add
mov
gs
mov
adc
call
add
out
andb
cwtl
test
mov
arpl
pop
out
cltd
mov
out
xor
push
sbb
loopne
fdivl
clc
dec
mov
aam
mov
loopne
in
insl
rolb
nop
add
icebp
addr16
inc
and
sahf
movl
push
push
imul
push
test
xor
mov
loope
icebp
call
cld
call
lods
push
lds
and
imul
or
jne
sbb
mov
test
dec
pop
pop
push
mov
cmp
aaa
inc
or
or
clc
fmull
sub
rcrl
imul
push
xor
mov
ds
rorl
insl
shrb
imul
dec
in
fldl
lret
pop
push
aas
lret
add
stc
lcall
and
aam
scas
fisttpll
sarl
add
in
pop
jbe
leave
bt
mov
adc
idivl
xchg
mov
and
mov
push
and
and
sub
pop
and
pusha
jge
mov
cs
test
or
shll
sbb
xor
in
or
aam
push
xchg
arpl
stos
lret
gs
movsl
cwtl
loope
adc
sbb
adc
aam
neg
cld
jns
je
or
mov
cmpsb
xorl
scas
cmp
ss
cmp
ss
insb
jbe
xor
mov
push
mov
mov
int
shll
out
ds
out
jno
insl
pushf
and
xchg
pop
stos
jb
and
test
das
invd
leave
inc
aas
ret
xlat
push
in
inc
cmpsb
push
push
mov
negb
hlt
outsl
add
loop
test
scas
mov
xchg
mov
or
outsl
enter
gs
ljmp
insb
test
dec
push
je
sub
stos
dec
cltd
add
les
mov
mov
movsl
push
and
loopne
daa
push
in
fildl
or
ds
and
cmpsb
imul
pushf
loopne
inc
sahf
pop
push
lea
mov
sarl
sub
pop
or
mov
dec
jl
insl
mov
lret
ret
jbe
xchg
out
and
scas
fisttpl
scas
ja
fbld
pushf
mov
pusha
lds
mov
adc
testl
in
mov
fbstp
fstp
cmp
pusha
in
testb
dec
popa
je
or
icebp
pop
inc
ds
xor
in
and
dec
icebp
and
mov
call
int3
stos
mov
loope
ret
out
leave
cltd
inc
fstl
adc
fucomi
cmpb
data16
mov
or
in
xor
sub
les
int3
sub
loopne
fcmovne
push
iret
dec
int
sub
push
pop
xchg
pop
adc
cmc
repnz
movsb
jl
push
std
inc
push
loopne
lret
or
xor
add
push
div
fs
and
jmp
cmp
cmp
rcr
push
pushf
xor
in
idiv
int
xchg
sbbb
mov
jbe
mov
in
pop
jl
mov
jne
pop
adc
gs
lods
sub
fwait
outsl
xchg
mov
pop
aam
ficompl
jae
mov
inc
repz
pop
inc
mov
pushf
or
inc
sub
outsb
cmc
ret
inc
push
test
or
punpckhwd
jge
addr16
lock
jnp
in
xchg
pop
push
mov
and
dec
mov
xchg
pop
daa
add
xchg
lock
insl
imulb
xchg
daa
mov
jnp
hlt
lcall
push
sti
dec
ret
pop
mov
push
fildl
and
mov
repnz
inc
in
shl
xchg
daa
inc
sub
push
push
fisttps
pop
test
ss
add
mov
adc
and
popa
repnz
popa
lret
hlt
mov
repz
movsl
adc
cmc
enter
arpl
in
and
pop
add
mov
lock
test
jecxz
xchg
cltd
jecxz
cmc
jmp
or
xor
in
rorl
sarb
insb
dec
push
mov
xchg
in
or
adc
xor
jl
out
sub
mov
pop
xorl
cltd
imul
mov
stos
iret
add
mov
ret
lret
push
test
jl
dec
inc
push
lock
adc
test
lahf
xor
push
loop
insb
pmulhuw
or
jnp
jne
cmp
inc
sbb
jle
fcmovb
fldt
mov
pop
mov
or
jno
rorb
cli
das
or
popa
add
in
ret
cmp
adc
mov
push
popf
andl
mov
rolb
sarb
mov
push
call
ss
push
cvtdq2ps
into
scas
sahf
movsb
push
outsb
lds
fyl2xp1
xchg
cmpsl
fs
out
dec
js
jo
sub
and
mov
or
push
aas
sbb
fiadds
dec
aad
movsb
rclb
lahf
fiaddl
addr16
mov
push
mov
nop
mov
shll
icebp
iret
loope
adc
pushf
push
imul
xor
fwait
roll
fbstp
ljmp
cmpsl
xchg
in
cmpb
dec
xchg
mov
adc
aas
out
xchg
lret
jo
test
fdivr
inc
lods
sahf
inc
out
sbb
js
outsb
int
inc
ds
js
rcrl
mov
or
push
gs
and
add
pusha
sahf
sub
sbb
mov
pop
outsl
fidivrs
push
dec
inc
cmp
ss
jp
sbb
pop
cmp
test
stc
stos
cmp
mov
push
testb
fwait
xor
cltd
cli
sub
xchg
sahf
arpl
fcomp
repz
aad
ja
out
loope
out
xor
fnstenv
hlt
mov
jp
inc
lret
sahf
mov
cli
jl
push
fsincos
lods
mov
mov
add
in
add
add
cmp
cs
jmp
xchg
aam
out
jmp
ds
sub
xchg
lret
jbe
pop
mov
sbb
stos
jp
jne
pop
lret
iret
inc
mov
xor
mov
stos
pop
pop
fldt
lret
cmpsb
and
int
shl
mov
xlat
lea
shl
or
or
xchg
sub
sbb
pop
into
sahf
sti
ja
ret
push
cmp
mov
add
sub
pop
gs
dec
sub
test
mov
scas
ret
int
addb
ffree
nop
add
insb
mov
ret
sub
jle
mov
add
mov
call
cmp
and
addb
dec
sbb
xchg
sbb
hlt
lods
rclb
xor
mov
or
sbb
mov
cmpb
sub
lock
and
dec
adc
cvtps2pd
outsb
sbb
jmp
inc
roll
pop
sub
nop
and
mov
adc
into
mov
scas
shlb
icebp
xchg
es
gs
mov
push
fisttpll
insl
push
adc
inc
in
cmpsb
dec
push
pop
xchg
pop
adc
mov
sbb
imul
fsubrl
jmp
add
adc
pop
incb
idivl
loope
lods
push
add
in
and
ss
jae
or
add
scas
loope
out
outsl
cmpsb
repz
push
mov
in
sub
mov
pop
and
divb
call
adc
xlat
nop
mov
stc
cs
jl
in
mov
test
push
mov
les
fdivrl
jae
into
mov
mov
in
cmp
pop
lahf
aam
xlat
lret
jle
das
lds
sub
pop
push
xchg
cmpsb
in
sbb
sub
push
mov
js
addr16
js
xchg
ss
xor
pop
daa
rclb
arpl
mov
fmuls
in
repnz
mov
in
movsb
and
xchg
lret
xor
insl
sahf
jno
mov
inc
push
icebp
dec
mov
mov
mov
imul
ds
mov
and
push
cltd
out
in
push
mov
clc
mov
sbb
scas
stos
and
push
scas
adc
inc
and
adc
lret
cmp
insb
add
in
pushf
and
sbb
cmpsb
aad
imul
push
clc
in
sub
dec
jp
call
ja
unpcklps
inc
cmp
jno
jle
je
je
in
mov
fmuls
pop
pop
out
sti
out
or
mov
andl
cltd
lcall
pmaxub
iret
jecxz
adc
push
and
dec
out
cli
lods
jmp
lahf
std
mov
pop
push
fsubrs
or
inc
pusha
jnp
pop
cmpb
xchg
sti
push
shl
lods
ret
pop
mov
inc
imul
jnp
scas
shrl
fcomp
adc
xor
shr
xor
mov
sahf
loope
xchg
jp
movsl
in
stc
andb
cmp
inc
mov
test
add
or
sbb
add
jbe
adc
out
and
jbe
xor
mov
sub
cmp
push
inc
jae
cmp
sub
lods
sbb
hlt
jo
mov
cmp
mov
les
nop
inc
stos
shll
in
push
repnz
pop
mov
adc
jb
lock
pop
dec
add
or
jmp
call
insl
cmp
inc
adc
inc
test
mov
test
and
xchg
sbb
lret
es
int
xchg
mov
iret
dec
fld
inc
push
cli
test
insl
stc
js
outsb
ret
mov
push
jle
hlt
cmpsb
mov
and
sbb
aas
push
pop
sbb
sub
and
aas
loope
adc
pop
cmpsl
cmp
in
int3
push
or
stc
lods
xor
sti
push
arpl
jnp
outsl
lahf
das
nop
push
lcall
inc
movsl
mov
test
inc
xchg
movsl
insb
mov
sub
stos
les
lcall
pop
lret
or
mov
sub
xor
add
or
mov
fadd
push
mov
iret
shll
addr16
adc
push
inc
pop
xchg
sbb
fistpl
int3
out
sahf
and
jle
stc
add
fnsave
push
pop
addr16
notl
fistpl
xchg
imul
cwtl
clc
mov
lret
sbb
test
push
xchg
cli
stos
jae
shll
sub
lock
clc
test
inc
adc
xchg
inc
test
subb
fisttps
enter
xchg
or
adc
in
lods
test
adc
pop
inc
xchg
lods
sbb
mov
insl
mov
pop
dec
mov
inc
inc
mov
pop
imul
pop
test
adcb
pop
cs
dec
jo
add
test
pushf
pop
sbb
adc
rclb
cltd
jnp
mov
push
mov
insb
pop
push
fcoms
mov
pop
and
inc
mov
inc
cmp
cwtl
and
push
out
dec
push
int3
loop
pop
roll
je
push
les
mov
or
pop
sbb
ljmp
inc
or
mov
scas
sub
dec
push
lock
or
pop
and
fisubs
hlt
mov
lret
push
cltd
ss
add
out
sti
mov
lods
push
jbe
movsb
mov
cmp
jge
lods
sub
adc
dec
popf
andb
mov
fdivs
loope
sub
mov
sbb
popf
sbb
mov
adc
adc
pushl
adc
fidivs
ficompl
add
jbe
cltd
int
in
mov
sarl
add
mov
push
cmp
adc
mov
xchg
mov
adc
jb
notb
gs
popa
adc
daa
fldenv
ficompl
cwtl
inc
jne
jp
mov
out
push
sub
adc
out
rorb
mov
scas
jb
je
popa
mov
shrd
hlt
testb
add
xchg
mov
nop
fcoml
das
adc
pushf
imul
mov
fnstsw
jp
imul
add
sbb
leave
jae
sbb
add
sbb
fmulp
add
and
pop
sbb
je
pop
pop
add
shl
lods
xchg
std
xchg
adc
mov
sbb
push
fnstsw
out
cmp
push
jns
push
adc
out
pop
adc
push
jg
xchg
ret
loope
test
cmpsl
mov
inc
jge
das
movsl
in
mov
mov
push
inc
sub
insl
fsubrs
lea
sub
repz
mov
mov
mov
lahf
out
cld
jle
mov
mov
mov
aad
and
fdiv
and
xchg
pop
xchg
data16
mov
xchg
iret
jmp
sahf
jp
pop
outsb
scas
adcb
add
in
aam
and
cmp
push
add
leave
rorl
test
cmp
sahf
jo
add
or
push
mov
jnp
ss
fisttps
sub
dec
cld
addr16
or
jp
data16
mov
add
leave
mov
or
xor
push
push
mov
xor
sbb
test
daa
mov
sbb
sub
xchg
cmp
or
mov
push
call
inc
mov
xor
pop
mov
xchg
push
dec
mov
scas
sbb
test
sub
or
mov
jg
adc
jg
repnz
xor
popa
div
les
add
stc
and
call
outsb
aad
pop
mov
jge
pop
inc
jo
ja
push
mov
sbb
add
outsl
dec
xchg
into
sbb
test
jno
insb
subl
inc
lret
cmpsl
sub
or
push
xchg
mov
lods
inc
mov
out
inc
or
sahf
das
das
pop
sub
fnstenv
jmp
aaa
lret
push
in
push
iret
test
aad
fwait
push
addr16
push
push
pop
popa
jo
xchg
cmp
ja
pop
cmp
cli
fimull
cmpsl
jne
xchg
dec
adc
xor
push
jmp
and
lods
outsl
push
push
sbb
repz
scas
mov
fisubrl
fildl
das
adc
pop
sbb
cmp
mov
repz
js
dec
inc
fcmovb
imul
enter
adc
adc
pop
aas
sbb
inc
push
push
test
jg
sbb
rcr
ret
sub
inc
repz
fnstenv
mov
int3
mov
lods
shll
jb
enter
jno
repnz
xor
xlat
mov
stos
sbb
mov
adc
sbb
je
mov
or
adc
lahf
fstpl
daa
ficoms
cmp
sub
mov
out
std
imul
xchg
pop
int
mov
adc
mov
je
lret
xor
ds
pop
mov
loopne
xchg
mov
ret
pusha
add
pop
cld
stc
pop
std
mov
push
xchg
pandn
inc
mov
push
nop
imul
lcall
ds
dec
in
ljmp
cmp
mov
cmp
or
mov
pop
mov
nop
mov
xchg
scas
cmp
sahf
jle
addb
xchg
aam
rol
dec
add
and
cmp
xchg
aad
cmp
xchg
mov
out
or
sub
push
mov
shl
jbe
mov
fwait
xor
fs
mov
mov
push
jl
cmc
jne
in
sbb
xor
push
ljmp
imull
pop
repz
sub
and
rorb
gs
mov
sub
xchg
je
mov
mov
dec
sub
enter
popa
nop
cmpsb
mov
sub
inc
sbb
out
addl
sbb
addr16
jmp
push
mov
popa
inc
cld
push
fwait
jno
iret
or
in
add
pop
orl
jo
dec
mov
gs
sub
pop
je
jnp
imul
in
ret
xchg
fwait
shrb
repnz
nop
test
xor
icebp
or
adc
mov
sub
push
icebp
jbe
scas
ja
inc
cltd
iret
inc
imul
aam
mov
xchg
mov
xor
in
cmp
or
push
lds
pop
mov
mov
aas
push
push
pop
push
aad
repnz
insb
fildl
jo,pn
mov
call
rol
push
jp
lds
xchg
mov
mov
xchg
std
pop
stos
inc
adc
es
js
mov
pop
mov
nop
xchg
sbb
add
jo
or
lea
jmp
mov
outsl
mov
sti
add
sub
mov
mov
cwtl
scas
loope
mov
inc
jne
cmpsb
mov
jnp
psubsb
cmp
out
fwait
rcrl
jns
scas
jae
mov
add
fmuls
jne
push
mov
cmpb
hlt
repnz
or
inc
mov
or
jle
inc
lock
push
pop
sub
cmpsb
pop
mov
imul
or
sbb
out
rorl
fldenv
es
sbbl
int3
fs
pusha
mov
rolb
aaa
mov
or
cwtl
jbe
es
aaa
inc
sbb
je
lods
push
xor
dec
push
push
sbb
mov
out
adc
ljmp
jmp
mull
pop
mov
mov
cs
jnp
and
into
lret
mov
inc
xchg
mov
loopne
mov
push
sub
int
loopne
push
jecxz
imul
in
push
cmp
shll
popa
std
xchg
push
adc
push
mov
dec
test
pop
mov
clc
push
dec
xchg
push
leave
outsl
push
jne
cmp
mov
cmpsb
push
push
mov
jl
inc
mov
aas
dec
cmc
sub
in
rorl
fstpt
sahf
sbb
pusha
xlat
mov
in
jbe
adc
fwait
pop
jo
pop
push
adc
add
movntps
sbb
xor
push
lods
es
fldl
sub
sub
push
adc
push
xchg
mov
xlat
adcl
in
sub
orl
and
int
popf
repz
out
idiv
jbe
stos
scas
sub
push
scas
dec
insl
xchg
push
pop
jbe
mov
jl
cmp
cli
add
xchg
add
xor
dec
fildll
pusha
out
sbb
add
xor
arpl
aam
jae
mov
hlt
dec
lcall
jmp
add
ds
sub
adc
add
loop
jg
js
inc
aas
mov
lret
movsl
adc
aam
lds
xchg
not
lahf
ljmp
imul
add
jns
and
and
push
lret
and
nop
ret
dec
adc
jl
pop
clc
daa
out
mov
jne
sub
imulb
and
movsl
js
addr16
cld
cmp
shl
sbb
insb
aad
mov
ja
dec
lcall
pop
cmp
data16
jne
sub
dec
sbb
out
inc
lret
je
mov
roll
mov
push
add
lock
daa
mov
dec
lret
xchg
out
aad
jno
std
mov
outsb
int3
cmp
dec
mov
mov
daa
xor
jecxz
cmp
fbstp
mov
push
arpl
dec
lods
loope
dec
mov
dec
jl
and
inc
mov
fdivrs
rcrl
jns
inc
cmp
sbb
sub
jge
jbe
test
cld
or
stos
inc
inc
add
int3
int3
rcrb
adc
push
ficompl
aad
and
test
jge
jbe
inc
fwait
adc
jp
dec
iret
cltd
adcl
xor
es
push
sub
cs
and
sbb
in
and
mov
pop
clc
scas
push
fiaddl
ljmp
stos
leave
hlt
mov
enter
sbb
or
push
sbb
shlb
dec
out
pop
jle
cmp
aad
jp
sub
fldt
mov
jns
xor
sbb
loope
sub
dec
loopne,pt
stos
and
mov
movsb
ffree
sbb
and
fimuls
mov
int
das
test
push
clc
mov
xor
pop
xchg
pop
xor
mov
mov
xchg
js
or
mov
testl
inc
fidivrl
aaa
add
stos
push
cmpsb
sbb
xor
sub
sub
test
dec
jnp
mov
push
and
and
mov
sbb
loope
xchg
pop
adc
shr
add
xor
and
pop
mov
mov
lods
mov
sub
mov
lds
mov
mov
sub
in
out
jo
sbb
das
popa
fisttps
jno
mov
roll
pop
clc
cltd
xchg
sbb
jge
popa
xor
jl
cli
pop
mov
push
inc
lods
orl
out
dec
ds
pop
in
push
and
jecxz
sub
push
sub
dec
mov
out
mov
inc
sti
repnz
mov
cltd
sahf
xchg
sbb
adc
adc
mov
lods
mov
jnp
in
xchg
pop
fs
mov
lea
push
pop
mov
cmp
mov
jecxz
rorb
cmp
push
mov
stos
jmp
jl
and
mov
arpl
jp
dec
sbb
movaps
fiadds
in
imul
xchg
cmp
inc
movsl
out
jecxz
cmp
jae
xchg
and
mov
out
rcll
hlt
push
pusha
cwtl
js
jge
push
mov
jns
fsincos
xchg
cmp
lea
mov
and
imul
cmp
pop
ret
jmp
add
sbb
loopne
idivl
insb
fyl2xp1
arpl
cmpsb
gs
mov
cmpsl
pop
adc
mov
repnz
xor
fcom
test
fwait
pop
sbb
aaa
dec
repz
repz
jne
mov
cmc
ss
jle
movsb
sub
ss
fisubrs
into
jae
sbbb
scas
xchg
adc
aas
divl
jl
add
sbb
mov
jb
add
insb
push
ds
push
cwtl
cmp
push
test
adc
adc
imul
xor
out
stos
or
hlt
push
ja
mov
xor
imul
xchg
jno
push
js
fwait
cli
cmp
sub
jb
daa
adc
xor
das
jno
cld
pop
mov
or
loop
or
add
mov
inc
push
push
mov
data16
hlt
pop
leave
xor
push
fldcw
repnz
pop
mov
sbb
mov
xchg
and
inc
imull
inc
ljmp
jnp
adc
inc
xlat
cmp
cmp
xor
loopne
pop
stos
test
and
mov
inc
xor
int
dec
xor
mov
addr16
push
xlat
ret
out
xchg
mov
stos
gs
inc
mov
mov
xor
in
push
xlat
mov
aaa
xor
dec
adc
dec
pop
sbb
sub
push
insb
jmp
ret
push
sub
jg
cmp
fsubrl
pushf
sub
xchg
lods
adc
rolb
push
sbb
or
inc
mov
out
xchg
pop
popa
js
lahf
into
outsl
sarl
fdivl
lds
outsl
fisubs
xor
mov
jbe
pop
cmp
lods
mov
sahf
loope
inc
push
out
aam
pushf
add
out
iret
pop
shll
push
adc
lcall
int
into
aam
in
decl
mov
clc
mov
in
sbb
addr16
pop
call
mov
shrl
hlt
sbb
nop
dec
int
push
xor
mov
fucom
mov
cmpsb
xchg
lock
sub
xor
das
out
xchg
jp
jb
push
loope
mov
leave
pop
pop
roll
imul
fidivrl
or
popa
add
sti
sti
jge
lds
xchg
cmp
push
cmp
outsl
into
pop
cmp
xchg
and
push
or
fcmovne
fwait
jnp
sub
adc
mov
xor
dec
mov
pushf
lahf
popf
out
pusha
sub
mov
jbe
push
popa
and
push
aas
pop
pop
gs
mov
push
stc
mov
repz
xchg
pop
jmp
push
roll
jae
popa
add
mov
rorl
dec
adc
cmp
xchg
scas
adc
pop
cs
cmpsb
xchg
fildl
out
scas
lret
scas
cltd
test
div
inc
mov
inc
ret
lahf
mov
lea
cmc
pushf
in
inc
mov
inc
cltd
std
cmpsb
xlat
repnz
xchg
sbb
test
out
dec
in
cltd
repz
call
test
cmc
sti
jnp
dec
lret
jmp
mov
loope
loop
xchg
add
adc
testb
push
sub
inc
mov
into
mov
test
xor
std
dec
ja
push
mov
xchg
pop
sti
xchg
xchg
sub
dec
xchg
test
mov
cmpsb
sbb
aas
mov
mov
in
dec
push
cs
xchg
loope
xchg
adcb
cs
sub
pop
mov
movb
es
sbb
mov
stos
rolb
push
in
jecxz
jae
add
or
aad
arpl
fisttpl
mov
add
dec
vcvtps2pd
ds
fildll
push
sub
xchg
icebp
add
pop
insl
mov
subl
lea
jl
in
sub
movsb
stos
dec
push
inc
repnz
out
lock
rcrb
cmp
push
js
pop
roll
mov
imul
sbb
push
sub
lock
lods
mov
scas
ja
in
push
mov
ret
jg
jg
dec
and
cmpsl
notl
jnp
rorl
ss
js
lock
dec
add
xchg
stos
cmpsb
adc
push
push
lock
cmpsb
mov
fidivrl
push
popa
inc
push
sub
leave
sahf
jecxz
lahf
or
lds
mov
inc
shl
sbb
xchg
dec
xchg
call
add
xchg
mov
adc
mov
cli
in
xor
sbb
dec
aaa
and
loop
loop
sahf
xor
and
inc
inc
pop
pop
pushf
fistps
jnp
pop
pop
bnd
sub
sub
cs
dec
jne
fldl
pop
lea
and
arpl
movsb
inc
pushl
sbb
and
insb
mov
adc
aam
xorl
out
mov
je
xor
pop
mov
scas
push
pop
adc
out
ds
inc
mov
xor
mov
fcompl
dec
inc
dec
repz
cmp
pop
movsl
pop
out
jbe
xchg
jl
out
mov
jmp
xor
scas
ljmp
sub
rclb
and
fwait
cld
mov
inc
sbb
scas
dec
stc
xchg
jo
mov
mov
out
movsl
and
out
sub
int
push
ret
pusha
test
cmp
push
xor
sub
arpl
lea
or
loopne
outsb
scas
or
inc
pusha
mov
mov
cmp
aad
shrb
sub
lret
jmp
mov
das
loopne
sbb
je
lods
adc
and
push
in
icebp
and
lcall
cmp
xchg
addr16
adc
mov
sub
cs
mov
jmp
movsl
inc
out
jno
or
xorb
divl
movsl
mov
inc
dec
and
andl
scas
ljmp
aad
rolb
filds
xor
ret
inc
outsb
shrl
mov
mov
clc
mov
out
loope
pop
inc
sub
jnp
jmp
jno
cmp
call
cmp
call
sub
or
out
xchg
orb
mov
pop
arpl
jg
cltd
inc
mov
mov
or
in
and
pop
out
pop
loop
fsubrl
shl
dec
cmp
xchg
pop
inc
in
in
xor
outsb
pusha
cld
rcll
adc
fwait
push
jp
add
sbb
ja
int
push
xor
lret
rcrb
add
and
call
ret
outsl
mov
add
xchg
aad
iret
and
or
gs
jo
push
cmc
mov
mov
inc
cmp
sub
push
push
sbb
rolb
in
xchg
out
and
out
adc
pushf
mov
jecxz
aad
xor
loop
rorl
push
xor
ja
add
jbe
sbb
leave
sub
push
std
inc
fistps
mov
lea
lret
jns
jl
test
cmp
clc
rolb
push
push
or
sbb
jb
das
pop
push
and
sbb
fndisi(8087
aaa
sbb
pop
aad
and
ljmp
aaa
shlb
adc
jmp
or
cld
mov
or
push
aaa
lahf
pusha
aam
push
jo
icebp
orb
ss
or
pop
std
mov
loopne
ljmp
es
pop
and
adcl
cmp
pop
movsb
push
jno
push
dec
jns
loope
add
pop
in
sub
fisttpll
inc
add
xchg
add
adc
cmp
imul
push
cwtl
add
ljmp
mov
sbb
hlt
mov
jp
lods
xor
mov
inc
lcall
test
dec
jo
dec
push
rclb
dec
dec
fnsave
mov
aaa
sahf
push
or
fsts
mov
push
adc
cwtl
sub
enter
leave
sub
jl
sub
mov
pop
dec
push
enter
or
shlb
push
mov
cs
mov
inc
inc
mov
push
and
jno
in
int
repz
or
sub
adc
pusha
in
sub
sbb
movsb
inc
sub
loope
dec
hlt
out
adc
pop
ds
out
pusha
dec
mov
adc
cmp
xchg
or
stc
pop
fcoml
shrl
jp
sbb
cld
int
add
insb
sbb
push
mov
adc
divb
nop
loopne
lock
sbb
ja
shrl
sti
mov
cmp
jg
xor
imul
jecxz
xorb
stos
test
pop
sub
mov
add
gs
icebp
into
sahf
fsts
fmull
ret
jg
hlt
lret
jmp
adc
cltd
and
xchg
popf
test
pop
xor
test
jecxz
lcall
cmp
jecxz
inc
lret
outsl
xchg
jmp
dec
stc
dec
shrl
fwait
movsl
xor
test
xor
and
inc
inc
in
leave
ja
xchg
mov
dec
jp
hlt
xchg
mov
cltd
sbb
repz
cmp
add
lock
icebp
and
adc
pop
mov
test
lock
imul
fwait
cli
in
popf
daa
cmpsb
pop
fstl
ret
jne
rclb
push
push
stos
adc
addl
popf
push
mov
ds
jle
or
in
out
cmp
subb
stos
mov
sub
out
push
repz
out
jge
out
pop
pop
pop
in
shrb
movsl
pop
ret
pop
fldl
or
inc
scas
add
dec
dec
xor
mov
lidtl
inc
and
sbb
xchg
jns
out
pop
into
mov
push
inc
leave
shrl
inc
add
jg
incb
inc
add
cmpsl
mov
fists
or
dec
nop
insl
add
push
xor
into
push
lcall
mov
jo
pop
sbb
pop
inc
fstpl
push
sbbb
enter
mov
pusha
lret
inc
push
or
ljmp
sar
pop
mov
mov
cwtl
push
ret
mov
or
mov
rcrb
sub
inc
cmp
xchg
and
add
inc
fsubs
movsb
test
mov
sbb
jl
pop
jns
xor
lods
xor
jb
sbb
insl
xchg
xabort
dec
fiadds
xchg
pop
rcll
jp
lds
push
dec
push
push
jmp
mov
int3
jle
pop
rcrl
sbb
or
xchg
adc
aaa
jl
sbb
rorb
sti
aaa
addl
je
add
sub
insb
aam
stos
leave
jecxz
fs
imul
inc
cmp
mov
mov
pop
fimull
clc
mov
mov
xor
les
rcrl
mov
xchg
hlt
pop
xor
mov
xor
int
push
add
xlat
lock
jle
enter
filds
sbb
and
dec
fs
push
pusha
ja
les
aaa
add
jl
testl
ss
fdivrs
cs
divb
xor
call
ret
das
mov
xchg
je
ret
mov
mov
cmp
out
adc
outsl
mov
adc
fstps
imul
sahf
inc
inc
xchg
push
xor
lods
idivb
sub
bound
sub
outsb
and
ljmp
movsb
jp,pt
gs
lret
mov
or
sahf
loop
pop
movsb
mov
cmp
push
ret
aam
leave
jmp
sub
fsubl
add
jg
jne
jle
push
clc
xchg
or
dec
push
jecxz
sub
scas
addr16
push
popf
mov
ja
shll
cltd
push
xor
cs
fdivl
inc
pop
mov
imulb
push
data16
add
xor
cwtl
insb
sub
cmc
jbe
add
add
inc
add
inc
xchg
jns
add
mov
icebp
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
int
add
inc
